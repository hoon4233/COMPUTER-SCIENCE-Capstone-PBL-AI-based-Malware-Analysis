sub
push
push
push
push
call
call
mov
call
push
call
test
je
call
mov
call
call
push
push
push
push
push
push
call
mov
jmp
mov
push
call
push
push
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
test
jne
lea
mov
mov
push
xor
xor
test
mov
mov
jle
cmp
jbe
push
call
test
je
push
push
push
push
call
cmp
jne
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
push
push
push
call
add
inc
cmp
mov
jl
mov
pop
cmp
jne
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
mov
push
mov
mov
call
test
je
mov
mov
mov
push
mov
push
push
push
call
push
call
mov
add
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
pop
pop
test
pop
je
lea
mov
push
call
push
push
push
call
mov
add
push
push
push
push
push
call
mov
push
push
push
push
push
call
push
call
xor
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
push
push
push
push
push
push
push
push
push
mov
mov
call
lea
mov
push
push
call
mov
mov
mov
mov
mov
xor
xor
mov
test
je
mov
mov
mov
test
je
cmp
not
jne
mov
call
mov
mov
push
xor
push
push
mov
call
mov
push
call
mov
mov
lea
or
push
mov
mov
mov
call
push
mov
mov
call
call
mov
pop
add
ret
nop
nop
nop
nop
nop
xchg
cli
add
out
xor
dec
push
jg
add
mov
xor
add
inc
shl
sbb
mov
and
jp
or
arpl
cmp
popf
sbb
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
leave
jmp
loop
aas
mov
addr16
inc
jp
leave
mov
enter
push
and
cli
jmp
ret
shl
pop
fild
jnp
mov
outs
aaa
stc
rcl
fimul
(bad)
repz
out
stos
stos
mov
pop
aaa
add
xchg
data16
sbb
sub
lea
loopne
call
add
and
jp
or
or
fcmovnu
mov
iret
repz
mov
loopne
adc
inc
or
jp
fdiv
ficomp
movs
and
call
xor
inc
pop
cmp
aad
mov
retf
mov
stos
mov
cmpps
ret
or
pushw
outs
mov
jo
sub
repnz
cmp
or
inc
(bad)
shr
adc
retf
ret
mov
call
js
jecxz
(bad)
mov
sub
sbb
inc
cmps
adc
jmp
stc
or
mov
aad
adc
dec
clc
pop
arpl
mov
iret
mov
mov
call
xor
push
adc
pusha
sub
mov
pop
sahf
add
jnp
xor
jecxz
xchg
sbb
mov
inc
jp
dec
rcr
mov
push
lds
mov
out
xchg
adc
stos
cmp
pusha
dec
fistp
xchg
adc
arpl
push
cmp
scas
xor
imul
push
xchg
xor
pop
or
cmp
mov
mov
(bad)
call
nop
pop
retf
imul
repz
mov
inc
retf
(bad)
jmp
jecxz
shl
mov
adc
or
mov
cmp
mov
jb
stos
sub
sub
add
jae
arpl
pop
cdq
inc
and
cli
push
push
call
xor
add
mov
das
sub
fldenv
arpl
mov
retf
jp
or
arpl
rol
imul
fiadd
cmp
and
jb
xchg
sub
stos
mov
(bad)
mov
pop
repnz
shl
xchg
sub
movs
and
lods
jbe
push
fwait
sbb
and
mov
adc
les
jecxz
push
mov
jae
nop
test
fdiv
leave
call
cmp
cdq
cmp
inc
mov
es
mov
cmp
scas
and
cli
ret
dec
or
loop
aas
dec
xor
jp
pop
jae
pop
sub
cwde
inc
stc
loopne
mov
repnz
pop
rol
inc
mov
xchg
add
and
daa
add
cmp
and
clc
jl
mov
loop
aas
mov
jae
cmp
add
jae
bound
movs
sbb
xchg
push
xor
mov
xchg
nop
call
mov
or
scas
retf
out
ret
mov
jecxz
rol
test
loop
outs
add
pop
out
fimul
sti
sti
cmp
arpl
add
dec
fistp
test
pop
jp
les
outs
sti
retf
mov
shl
jb
std
ds
dec
pop
cli
adc
add
jle
dec
and
jmp
fistp
sbb
xchg
pop
or
push
les
pop
jg
cli
mov
(bad)
push
xchg
inc
and
jns
add
or
jo
sub
and
adc
sub
sahf
add
jnp
and
jecxz
xchg
sbb
mov
(bad)
jp
dec
rcr
mov
push
rol
mov
out
xchg
adc
stos
cmp
pusha
dec
fistp
adc
add
aaa
mov
stos
retf
dec
scas
xor
imul
xchg
xor
add
call
and
pop
and
add
addr16
retf
ins
adc
daa
mov
inc
retf
out
jmp
jecxz
shr
ret
mov
adc
sbb
int
cmp
cmps
xchg
adc
sub
jb
stos
ss
sub
add
jae
arpl
pop
cdq
inc
and
cli
push
push
call
xor
push
or
jle
retf
mov
arpl
mov
retf
jp
(bad)
stc
arpl
push
rol
imul
retf
mov
lds
data16
ficom
cmp
popa
xchg
retf
cdq
jmp
or
cli
jae
arpl
xchg
mov
adc
mov
cmps
mov
xor
ss
jns
or
sbb
data16
add
xlat
out
fmul
sar
nop
mov
in
retf
sbb
pop
mov
shl
xchg
mov
inc
cmps
pop
pop
sub
sub
dec
jae
jbe
or
sub
mov
addr16
mov
loopne
sar
xchg
fdiv
fdivr
and
ss
or
arpl
call
push
(bad)
xor
(bad)
or
aaa
sbb
mov
fsub
jmp
imul
fistp
and
xor
push
lds
in
fcmove
call
adc
dec
xor
sbb
stos
test
cmp
not
in
xchg
or
repz
xchg
pop
adc
adc
pop
or
mov
add
fcmovne
jmp
sbb
inc
stos
cmp
and
jns
mov
mov
fimul
xchg
and
or
push
leave
dec
in
adc
mov
std
push
dec
inc
and
jns
add
call
xor
test
test
pop
retf
add
jnp
sbb
jecxz
xchg
sbb
mov
(bad)
jp
dec
rcr
mov
push
out
inc
shl
adc
stos
cmp
pusha
dec
fist
mov
aaa
mov
xchg
retf
dec
scas
xor
imul
push
xchg
xor
add
call
sbb
pop
and
xor
nop
pop
retf
arpl
test
retf
daa
mov
dec
retf
xchg
jmp
jecxz
rcl
ret
mov
sbb
or
mov
cmp
xchg
xchg
adc
sub
jb
stos
add
sub
add
jae
arpl
pop
cdq
inc
and
cli
push
push
call
xor
or
mov
jle
retf
mov
add
shr
test
xchg
clc
mov
pop
or
cmp
not
add
xor
jns
call
mov
cmp
sub
mov
arpl
into
fbstp
and
and
aam
(bad)
(bad)
test
lahf
jns
je
or
es
or
jecxz
test
mov
rcr
loop
inc
in
fnstcw
test
cmp
ja
add
adc
loope
icebp
xchg
jae
call
retf
mov
mov
(bad)
out
pop
inc
cmps
dec
iret
pop
and
and
mov
leave
loopne
mov
lahf
or
dec
es
das
in
jnp
or
out
aas
mov
push
inc
test
rdpmc
pop
and
push
sahf
add
jb
xor
(bad)
xchg
dec
out
add
mov
jl
pop
ja
fcom
jae
daa
aad
out
push
fidivr
and
aad
mov
div
(bad)
xlat
pop
mov
dec
(bad)
jmp
dec
(bad)
pop
fild
daa
xor
data16
jp
test
or
xchg
mov
iret
repnz
stos
sahf
ret
aas
pop
and
push
mov
out
mov
or
lods
cmp
mov
sbb
cmp
ficomp
jp
imul
bound
cmp
retf
jecxz
mov
mov
xchg
push
shl
ret
mov
add
push
cld
cmps
retf
and
jnp
or
pop
cmps
daa
xchg
cmp
inc
jle
daa
data16
add
add
push
mov
xlat
jmp
fidivr
retf
sub
or
pop
pushf
xchg
das
sbb
jbe
jne
ret
mov
pop
jle
test
add
add
push
leave
adc
dec
scas
sbb
mov
sbb
call
xchg
xor
jmp
(bad)
sbb
ja
mov
cs
and
cmp
dec
test
xor
pop
fld
add
retf
push
sub
sti
ret
jne
sahf
jecxz
aaa
hlt
ret
dec
scas
das
adc
or
jae
cs
outs
cmp
jmp
out
(bad)
cli
ret
movs
fisttp
and
push
inc
retf
mov
adc
jp
sbb
sar
data16
jnp
inc
jae
lahf
sub
retf
int
cmp
ja
pop
xchg
lods
ins
das
pop
ret
mov
push
sub
or
mov
inc
push
pop
mov
stos
lds
les
pop
jecxz
and
ret
pop
xchg
jmp
test
xchg
dec
inc
cli
jecxz
mov
pop
mov
loope
jg
and
pop
push
(bad)
pop
hlt
adc
sbb
inc
loop
nop
outs
push
mov
(bad)
push
push
dec
pop
pop
in
cmp
(bad)
adc
fimul
inc
into
ud0
cmp
ret
clc
bound
ss
clc
sbb
faddp
mov
(bad)
xchg
or
fimul
sbb
cmps
inc
jg
mov
scas
xor
mov
or
scas
stos
sub
cmp
adc
retf
cmp
ds
xor
cmp
xchg
mov
mov
das
jmp
adc
in
sub
jnp
dec
fsub
(bad)
mov
loop
(bad)
scas
dec
rcl
xchg
add
fwait
inc
arpl
dec
fisub
(bad)
(bad)
jbe
fwait
mov
lea
adc
dec
adc
cmp
retf
cmp
pop
(bad)
xlat
jno
mov
mov
(bad)
arpl
(bad)
adc
arpl
cmp
xchg
mov
inc
adc
add
in
ja
pop
mov
add
push
jp
dec
sbb
fld
fmulp
mov
jmp
xchg
push
pushf
dec
xchg
and
and
out
ss
arpl
mov
adc
xchg
jae
rcr
dec
xor
mov
arpl
fdiv
inc
loope
je
add
ret
sbb
pop
inc
sub
sbb
jbe
jl
mov
retf
cmps
lahf
nop
push
add
jecxz
xchg
(bad)
sbb
pop
sbb
clc
test
xor
dec
test
mul
jl
pop
retf
rcl
rcr
pop
mov
cli
mov
or
rcl
xor
lds
shl
inc
push
clc
sbb
mov
ds
ja
gs
xor
jbe
xchg
cld
daa
(bad)
repnz
cmp
bound
arpl
into
xchg
jb
stos
sub
add
int3
loop
cmp
adc
or
(bad)
in
push
bound
sti
stos
pop
add
jne
gs
rol
(bad)
int3
push
cmps
xchg
push
xchg
cld
or
cmp
xor
lahf
xchg
lahf
repz
daa
stos
sub
xchg
adc
out
(bad)
push
(bad)
dec
sahf
gs
movs
(bad)
push
pop
mov
fsub
or
adc
mov
sub
push
inc
mov
mov
(bad)
or
mov
xor
pushf
es
jae
fwait
jnp
cmc
pushf
into
arpl
mov
retf
dec
xor
stc
jg
repz
out
xchg
inc
mov
out
loope
xchg
push
or
outs
arpl
fimul
fcmovb
pop
jl
mov
cmps
in
loop
push
jne
jne
cwde
and
daa
in
sub
hlt
sahf
lock
mov
movs
out
sub
cs
ds
pop
aaa
pop
daa
jns
jle
mov
lahf
and
push
mov
test
dec
jbe
addr16
and
cmp
sub
or
xchg
ja
test
push
xchg
mov
xchg
movs
sub
xchg
jae
(bad)
xchg
add
addr16
(bad)
dec
fwait
inc
jg
retf
repz
or
out
(bad)
cmp
(bad)
xor
mov
sti
stc
arpl
sub
ins
push
ja
adc
pop
imul
stos
das
rol
imul
stos
adc
add
push
retf
mov
out
xchg
mov
scas
pop
adc
pop
outs
loope
outs
inc
cmp
cmp
mov
push
push
adc
jo
xchg
int3
sar
and
sbb
es
(bad)
jne
sbb
shl
or
mov
sub
xchg
mov
jae
jno
inc
or
xchg
add
mov
cmps
stc
inc
hlt
mov
aas
ja
fcomp
ins
xchg
cmp
fidivr
mov
adc
ret
fsubp
out
in
mov
lods
adc
loop
inc
xchg
sub
retf
jae
mov
pop
or
mul
aaa
mov
and
aaa
sbb
sahf
idiv
mov
jmp
imul
xchg
dec
push
jp
mov
sbb
cmp
inc
mov
jnp
add
pop
cmps
inc
cmp
mov
or
lahf
mov
jne
adc
iret
stos
stos
jp
push
fsubr
xchg
sub
mov
fld
inc
mov
inc
(bad)
xor
sti
iret
mov
mov
lods
cmp
retf
xor
or
jle
loop
rol
pop
jle
test
pop
jnp
pop
aaa
push
sub
sahf
xchg
dec
push
mov
mov
shl
test
ret
pop
fs
(bad)
xchg
jbe
jbe
mov
lods
pop
mov
mov
cs
rcr
lahf
mov
dec
mov
daa
in
xchg
(bad)
cmc
jb
jbe
adc
shl
jae
pop
repz
xor
and
mov
lds
test
mov
inc
xchg
rdpmc
xchg
outs
push
mov
or
pop
add
fild
(bad)
out
lods
mov
pop
retf
imul
adc
sbb
call
dec
mov
jb
cld
xchg
add
retf
xchg
jle
adc
mov
(bad)
push
jecxz
mov
test
cmps
repz
rol
xor
pop
or
fisubr
loopne
push
push
outs
repz
aas
(bad)
int3
inc
sub
sahf
outs
lahf
or
sbb
ret
mov
scas
dec
cli
ror
lods
call
sub
adc
cmp
mov
sbb
mov
xchg
jp
dec
jecxz
dec
xchg
push
aaa
cld
or
sub
mov
idiv
test
es
sub
and
aad
jle
(bad)
mov
pop
out
mov
iret
mov
mov
outs
add
retf
push
cmp
arpl
fdiv
dec
cmps
stos
sar
inc
dec
mov
test
int3
aaa
call
xor
cs
pcmpgtw
sbb
mov
mov
mov
gs
sbb
inc
mov
pop
das
das
fistp
fcom
mov
jle
retf
loopne
sub
mov
shr
adc
pop
cmp
data16
in
test
jecxz
and
xchg
cmp
jne
adc
inc
xor
mov
add
inc
jmp
inc
(bad)
lahf
push
push
scas
sti
add
mov
fwait
(bad)
fisttp
jmp
or
cdq
pushf
ficomp
enter
inc
arpl
lds
ret
aas
or
push
mov
ret
sub
icebp
(bad)
fcmovbe
out
mov
adc
cdq
adc
test
movs
sub
jb
mov
in
inc
rcl
inc
into
cwde
fdiv
fwait
repnz
pop
push
and
sub
cmp
addr16
(bad)
enter
es
test
fwait
push
jo
and
inc
pop
sub
ja
pushf
jg
mov
cmps
pop
cli
cli
popa
out
mov
fsub
cli
xlat
xor
adc
fwait
sub
jnp
imul
mov
into
mov
lods
add
xchg
pusha
inc
loopne
mov
clc
mov
jmp
scas
out
ins
shl
sbb
mov
dec
sub
cs
shr
adc
cmps
int
inc
sub
cmp
push
jp
aam
mov
xor
addr16
dec
inc
into
jmp
int3
lods
retf
cmp
call
sub
mov
imul
mov
push
mov
push
fs
jge
out
jmp
(bad)
xor
cmp
pop
and
add
ror
xor
jae
cld
iret
sbb
mov
aaa
add
cwde
jp
and
xchg
pop
jg
and
and
and
mov
dec
movs
bound
jnp
dec
int3
push
data16
pop
jmp
sub
mov
jns
sub
retf
sbb
and
imul
pop
xchg
adc
lds
out
(bad)
mov
jo
rcpps
cmp
mov
or
push
clc
jecxz
(bad)
pushf
sub
cli
into
add
xchg
out
inc
pop
aas
rol
das
push
and
push
jmp
fisubr
sbb
jle
push
inc
jecxz
mov
cmps
jge
pop
lsl
xchg
ret
mov
sbb
jmp
xor
cmp
fs
test
in
mov
xchg
pop
imul
mov
rcl
shl
add
sbb
jbe
repz
pop
stc
ror
mov
call
or
shl
fbld
and
jmp
add
sbb
popa
sbb
movs
scas
pop
mov
aam
stos
js
jle
(bad)
arpl
push
cmp
inc
dec
(bad)
push
and
jae
mov
lods
jecxz
sub
ret
dec
jle
retf
push
ror
fistp
dec
push
retf
xlat
sbb
rep
repz
ret
xlat
jo
in
outs
inc
dec
aaa
push
xor
out
mov
adc
rcr
and
pop
out
jp
mov
jp
ja
jmp
loopne
sub
jnp
or
scas
dec
dec
pop
push
and
adc
jp
sbb
sbb
inc
enter
mov
popa
xor
and
xchg
or
adc
retf
shl
mov
mov
mov
push
xlat
mov
int
cwde
jecxz
mov
rcl
fnstsw
pop
aaa
pop
daa
jns
jle
mov
sbb
jmp
jecxz
cmp
nop
mov
dec
dec
pop
inc
jb
push
jbe
cmp
cli
out
xchg
mov
add
mov
in
daa
adc
inc
jae
pushf
cmps
inc
cmp
jmp
mov
adc
lea
adc
push
outs
mov
xchg
shl
(bad)
push
cli
mov
mov
mov
ins
jmp
lea
push
adc
loop
adc
arpl
mov
iret
mov
stc
cmp
mov
adc
sbb
ret
das
cmps
out
cwde
icebp
ret
retf
sub
jg
retf
out
sbb
or
repz
or
jmp
or
sub
fwait
pop
addr16
scas
push
mov
cmp
push
pop
jb
je
adc
int3
jbe
inc
sub
cmp
out
xchg
lods
xor
imul
jmp
push
jp
pop
clc
inc
arpl
loop
and
fidivr
(bad)
jno
jne
jb
dec
shl
ret
and
xlat
and
retf
sbb
push
or
retf
mov
mov
inc
xchg
push
mov
xchg
push
pop
jae
lahf
sbb
push
mov
jno
mov
ret
jecxz
and
fwait
cs
pop
dec
mov
data16
cmp
add
and
(bad)
dec
repz
push
pop
scas
iret
test
and
ss
arpl
rol
(bad)
mov
cmp
mov
das
push
jnp
or
fldenv
add
enter
std
add
adc
shl
loopne
inc
sub
and
mov
cmp
fimul
shr
xchg
mov
dec
das
movs
dec
xchg
add
jae
daa
mov
mov
mov
fimul
mul
ret
pop
test
dec
jno
dec
mov
cmp
nop
lds
fcmovnu
sbb
into
mov
in
js
xor
fidivr
aaa
repz
mov
push
inc
sbb
push
cmp
loop
sbb
ret
dec
retf
pop
mov
shr
arpl
push
jns
mov
xchg
cli
mov
stos
adc
dec
xor
add
mov
cmp
fcmovnu
pusha
and
cli
sub
cmps
ret
or
xor
push
aas
imul
sar
sub
inc
stc
div
or
mov
and
adc
inc
bound
scas
jae
cmp
retf
retf
jmp
aaa
fimul
xchg
rol
mov
add
push
jp
dec
sbb
mov
xchg
mov
out
xchg
cmp
repz
lock
jp
adc
add
jb
jmp
out
fidivr
inc
stos
call
xor
jg
sbb
sub
xchg
dec
and
jecxz
mov
js
pop
pop
loopne
dec
jp
outs
jae
es
push
stc
xchg
xchg
mov
jae
cwde
mov
mov
stc
jbe
and
(bad)
sbb
outs
cmp
sbb
fisub
loop
pop
xor
sar
dec
imul
pop
or
arpl
push
inc
or
mov
bound
(bad)
cmp
ja
push
add
outs
sbb
sbb
test
dec
scas
inc
cs
dec
push
mov
loope
rcl
dec
xor
and
push
adc
push
mov
cmp
loopne
shl
pop
or
fisub
scas
jbe
and
dec
ja
arpl
mov
mov
outs
mov
xchg
sahf
data16
jmp
push
jns
ja
adc
out
mov
repnz
xchg
mov
xor
xchg
lods
push
call
mov
push
cmp
retf
mov
into
sub
and
push
scas
test
jle
jo
sub
inc
ss
push
sub
dec
cli
inc
jbe
gs
pop
xor
fadd
fwait
(bad)
ds
and
mov
not
mov
aaa
mov
aaa
mov
jbe
retf
dec
cmp
ficomp
cmp
les
xchg
mov
inc
pop
call
mov
jp
inc
(bad)
pop
arpl
(bad)
aaa
mov
stos
test
pop
out
jl
mov
pushf
data16
mov
ss
mov
iret
cmp
daa
sar
xlat
pop
scas
push
test
in
adc
ds
mov
stos
pop
addr16
aas
mov
mov
adc
push
fisub
out
xchg
nop
or
daa
adc
jnp
sbb
jp
or
movs
sub
and
inc
test
push
dec
cmc
push
fsub
mov
into
mov
outs
ja
mov
push
ss
xor
shl
and
and
inc
mov
pop
mov
jmp
adc
dec
(bad)
pop
arpl
xchg
cmp
xchg
cli
imul
mov
and
jp
rol
(bad)
mov
inc
adc
inc
call
outs
das
and
jb
es
mov
xchg
xchg
jmp
sub
sar
into
mov
aas
retf
stos
jae
out
aad
cmp
fsubr
int
xlat
mov
mov
fild
ss
sbb
xor
(bad)
(bad)
jle
mul
sbb
in
push
outs
mov
push
out
into
lods
mov
xchg
es
out
cli
shl
(bad)
cmps
push
cmp
imul
adc
dec
(bad)
repnz
adc
push
retf
sub
scas
xlat
cmps
dec
pop
inc
out
mov
mov
pop
push
aam
aad
retf
(bad)
dec
mov
(bad)
aas
mov
push
jp
xor
cs
push
cmp
loopne
lahf
cs
xchg
out
push
mov
adc
pop
xchg
xchg
idiv
or
call
and
pop
xchg
stc
ja
test
xchg
(bad)
dec
aaa
inc
aas
(bad)
mov
jle
outs
(bad)
xchg
out
outs
xchg
cmp
mov
in
ficomp
outs
stos
fnstcw
outs
push
out
jnp
not
xchg
cmp
mov
xor
inc
add
or
in
fist
and
mov
into
ss
arpl
inc
iret
repz
push
dec
fistp
dec
adc
sub
push
cmp
adc
jl
scas
dec
xchg
aaa
push
mov
fist
cld
pop
ds
cmps
ss
(bad)
mov
out
into
outs
mov
push
inc
pop
(bad)
rol
sti
xor
jg
sahf
inc
xchg
repnz
pop
inc
ja
mov
(bad)
ja
bound
sti
out
sar
jle
out
xchg
mov
push
imul
addr16
mov
cmps
stos
sar
xlat
pop
jg
sbb
pushf
cmps
inc
cld
inc
and
repz
push
out
dec
jle
sbb
pop
inc
add
add
sub
aaa
fsub
add
scas
imul
jno
jne
gs
push
(bad)
aaa
ret
mov
xlat
cmp
idiv
or
into
stos
xor
mov
call
iret
xlat
scas
out
sbb
es
lds
neg
push
mov
jb
dec
sub
ja
mov
xchg
inc
mov
movs
jnp
cmp
ss
inc
movs
xchg
mov
mov
push
aaa
sub
cmp
out
mov
adc
mov
(bad)
mov
mov
pop
jle
and
rdmsr
pop
and
outs
arpl
push
shr
ds
out
dec
ret
cli
push
add
xchg
sbb
(bad)
xchg
mov
xlat
cmps
addr16
icebp
mov
jae
popf
sub
not
or
out
mov
cmc
pop
data16
test
dec
push
shl
fadd
mov
jmp
or
sub
cmp
adc
repnz
cmp
pop
scas
ins
sti
jl
xor
mov
sar
cld
out
mov
sub
cs
xchg
cmp
cli
push
(bad)
push
inc
sub
cmp
arpl
push
aas
push
or
pavgw
jecxz
mov
adc
int
outs
push
pop
nop
dec
arpl
test
sub
mov
bound
ss
cli
and
fwait
jb
push
sbb
cmp
pusha
pop
and
sahf
xchg
and
and
or
inc
sbb
pop
inc
popf
mov
mov
xchg
inc
aas
mov
mov
cmp
xchg
lods
pop
inc
dec
push
cdq
stos
cli
imul
out
mov
out
idiv
dec
mov
pushf
jns
cmp
jmp
outs
repnz
or
inc
cmp
idiv
or
(bad)
push
xor
cmps
mov
jecxz
(bad)
fidivr
fistp
xchg
sbb
stos
inc
lods
ins
adc
jnp
jl
sbb
sbb
mov
pop
out
test
cmp
mov
(bad)
ds
gs
into
(bad)
test
dec
cs
jne
push
sub
lahf
outs
or
(bad)
iret
repnz
xlat
mov
outs
loop
jmp
lods
leave
sub
jg
aam
mov
in
xor
xlat
xchg
ja
push
neg
repnz
lahf
xor
cmps
cld
shl
ret
sbb
pop
in
adc
jmp
pop
mov
xchg
fisub
and
ret
dec
gs
scas
push
xchg
add
inc
(bad)
ror
int
push
mov
push
mov
adc
pushf
(bad)
or
mov
bound
mul
movsx
retf
out
jl
ret
jbe
mov
into
xchg
cs
pop
out
pop
addr16
push
mov
cwde
repz
inc
arpl
adc
(bad)
add
sub
cmp
cmc
pop
pushfw
push
jg
inc
sbb
(bad)
add
adc
jmp
xchg
stos
xchg
call
jnp
jae
aaa
in
aad
cmp
xor
ret
stos
mov
push
pop
mov
mov
xlat
add
push
sub
sub
pusha
mov
jmp
push
inc
into
aaa
ret
cmps
cld
add
pusha
push
outs
loope
mov
bound
push
retf
nop
mov
repz
cmps
loop
rdpmc
movs
jne
push
test
aad
push
rcl
push
pop
mov
or
cmps
stos
adc
pop
jae
xchg
aas
imul
xchg
je
scas
mov
retf
dec
lahf
and
fidivr
mov
das
jmp
div
add
lock
arpl
mov
imul
outs
xor
jecxz
fstp
daa
push
jbe
jbe
push
dec
and
adc
leave
ror
retf
fbstp
das
mov
push
mov
push
call
or
bnd
pop
adc
mov
inc
add
sbb
add
fucomi
adc
add
(bad)
mov
shl
out
movs
xlat
jnp
mov
addr16
push
mov
cmp
fmul
dec
mov
mov
mov
in
xchg
add
pop
jb
cmc
pushf
inc
arpl
lock
dec
adc
xor
mov
xor
fld
xchg
dec
push
outs
int
mov
(bad)
mov
pop
jl
(bad)
mov
imul
test
test
ret
cdq
mov
inc
mov
mov
sbb
ret
xor
inc
icebp
dec
and
jne
(bad)
cli
xchg
mov
(bad)
lahf
jo
xchg
jne
xchg
add
(bad)
mov
jl
xchg
das
fs
repz
inc
fsub
push
mov
(bad)
lahf
retf
add
mov
mov
stos
das
pop
test
ret
retf
(bad)
clc
imul
adc
imul
add
xchg
in
and
add
jg
ret
mov
fcomip
iret
cmps
out
cli
call
jp
aad
loope
fcom
sar
sahf
jae
mov
sub
out
dec
dec
stos
cwde
fild
sub
out
fidivr
lods
out
xchg
mov
in
push
add
sbb
retf
add
or
repz
mov
and
xchg
bound
or
arpl
fdivr
retf
or
pop
repz
stos
lods
aaa
jl
or
dec
push
test
bnd
arpl
sbb
push
adc
sub
cli
(bad)
mov
and
clc
push
out
and
shr
stc
xchg
movs
xor
out
mov
and
ficomp
stos
mov
mov
bound
pushf
loopne
pop
jne
dec
aad
and
outs
xor
dec
retf
ror
scas
xor
mov
call
fild
bound
daa
into
mov
mov
repnz
ret
iret
or
mov
ds
gs
mov
add
mov
lock
jnp
xchg
jmp
mov
xchg
movs
rol
ror
loopne
cmp
pop
cmp
mov
scas
rsm
pop
mov
xchg
push
fst
daa
sub
cmp
(bad)
sti
or
xor
sar
mov
clc
push
fwait
sub
(bad)
jmp
sbb
pop
aaa
cmp
fst
mov
popf
mov
retf
mov
push
cmp
outs
or
mov
adc
pop
and
xchg
pusha
mov
retf
cmps
push
out
xlat
xchg
aas
sti
add
aas
pop
stos
cs
out
icebp
dec
xor
movs
pop
jno
mov
jmp
mov
xchg
ja
sti
cs
inc
dec
jae
arpl
fdiv
mov
loopne
call
sti
pop
retf
xchg
adc
retf
sub
inc
dec
adc
xchg
mov
out
and
cmp
sub
adc
inc
into
mov
jecxz
mov
(bad)
daa
rcl
xor
sti
inc
stos
cdq
out
inc
lods
loope
cwde
not
jmp
subps
inc
ja
test
adc
bound
mov
mov
mov
scas
and
cmp
mov
fwait
ret
xchg
adc
xchg
jecxz
mov
or
xor
jmp
sub
shr
xchg
inc
jp
add
lods
out
cwde
not
push
ja
or
or
push
mov
cdq
loope
adc
jae
daa
in
mov
mov
xlat
ja
jbe
mov
scas
push
aaa
mov
push
dec
jp
cmc
scas
sub
outs
fmul
xchg
fiadd
das
or
cmps
scas
sar
add
and
dec
out
jno
or
cmp
aad
or
inc
dec
stos
mov
repnz
xchg
mov
mov
xchg
mov
aaa
cdq
arpl
push
retf
lock
ins
ja
or
aaa
xchg
dec
jbe
addr16
mov
out
dec
push
(bad)
mov
cs
shr
add
mov
inc
cmp
scas
xchg
inc
aas
add
and
retf
neg
pop
push
push
cli
jp
jbe
dec
cmp
test
mov
cld
out
sub
sbb
test
sub
repnz
scas
mov
mov
repz
pop
sub
mov
jnp
xor
fbld
xor
sub
loope
test
mov
shl
dec
xor
inc
(bad)
aaa
data16
jmp
iret
mov
cmps
ja
sbb
xchg
lods
sub
(bad)
cli
sbb
mov
jecxz
adc
fistp
mov
cld
dec
push
push
arpl
push
fcom
dec
xchg
pop
es
adc
outs
divps
out
xchg
fnstcw
cmp
jbe
fwait
xchg
fwait
(bad)
stos
es
mov
jmp
mov
dec
aas
inc
inc
out
mov
dec
sub
ds
or
jg
popa
sbb
clc
iret
mov
jmp
pop
mov
and
cmp
enter
mov
dec
mov
xchg
(bad)
stos
push
add
es
(bad)
mov
xor
fstp
add
(bad)
repz
mov
mov
test
push
sbb
mov
pop
lea
out
mov
fsub
and
shl
push
jae
arpl
cwde
ror
out
mov
jno
call
retf
inc
add
jecxz
adc
outs
jmp
shr
adc
and
xchg
enter
pop
push
clc
dec
xchg
daa
sbb
dec
loop
sbb
cli
mov
pop
das
outs
fcmovnbe
test
adc
jae
dec
adc
in
pop
xchg
cli
jl
js
stos
cmps
fcomi
and
shl
adc
add
jecxz
outs
and
ins
dec
mov
sbb
cmp
test
pop
sub
fisubr
pusha
je
dec
sbb
cli
or
jbe
and
dec
ret
bnd
test
mov
inc
(bad)
pop
scas
cmps
arpl
and
jecxz
movs
in
dec
mov
lock
lock
fdiv
or
jecxz
(bad)
jmp
jle
adc
xlat
xchg
ss
pop
mov
enter
repnz
test
ret
xor
retf
(bad)
imul
and
sub
add
push
jmp
leave
sar
xor
jecxz
xor
movs
lods
inc
sbb
test
mov
push
dec
inc
pop
jno
in
ret
mov
into
cmps
cmp
inc
stos
fidivr
mov
jecxz
push
mov
mov
inc
and
inc
pop
add
imul
stos
(bad)
je
sub
or
paddb
daa
aaa
mov
test
add
push
outs
aad
add
cmp
or
in
adc
pop
mov
movs
xchg
sbb
inc
jg
inc
mov
mov
mov
mov
aam
sbb
mov
stos
outs
pop
jg
(bad)
jae
sub
stos
ficomp
mov
mov
dec
int3
xlat
ss
jp
add
xchg
jle
cmp
jnp
icebp
into
repnz
jbe
jmp
shl
out
adc
stc
mov
stc
or
call
jle
scas
push
jnp
xchg
ja
int3
sub
add
mov
fld
lahf
mov
outs
stos
sub
dec
ja
shr
or
mov
pop
mov
icebp
call
xor
jecxz
adc
ds
mov
iret
xor
mov
js
jecxz
or
xor
aas
aad
test
dec
dec
xchg
pushf
rol
mov
add
imul
cli
jecxz
xor
xchg
jecxz
push
or
mov
jb
lea
or
pop
stos
xlat
stos
add
lods
pop
retf
das
aad
dec
stc
(bad)
push
mov
jns
mov
xchg
(bad)
div
adc
and
pop
fdivr
cwde
daa
cld
and
es
shl
push
ret
sub
cli
mov
imul
pop
outs
daa
pop
inc
jmp
clc
sbb
jmp
jo
cmc
out
jae
loop
sbb
ja
test
inc
test
sub
mov
pusha
xor
mov
xchg
mov
je
(bad)
stos
call
ins
jo
adc
push
fisub
mov
call
retf
adc
test
push
pop
xor
adc
mov
mov
call
mov
jmp
loope
jp
cmp
leave
jae
cmc
and
sti
jmp
jmp
jae
or
movntps
push
call
ret
sub
sbb
lds
pop
test
cmc
cwde
xchg
cmp
mov
std
or
scas
retf
or
xchg
shl
cs
jmp
jg
bound
mov
cmc
sahf
sbb
js
leave
push
mov
clc
test
es
loop
into
push
dec
popa
xchg
repnz
movs
sbb
clc
xlat
je
enter
adc
es
adc
mov
cdq
fucomi
sbb
mov
sar
mov
adc
or
and
xchg
cmp
out
push
jno
data16
mov
(bad)
mov
mov
loope
div
xchg
je
enter
and
repnz
shr
jnp
inc
int3
dec
test
fdivr
imul
cmp
out
out
add
gs
shl
pop
xor
push
sti
push
adc
pop
xor
into
xchg
cmc
sar
addr16
adc
add
lahf
xchg
outs
scas
push
cmp
inc
dec
iret
push
xchg
xor
div
imul
dec
sbb
pop
test
mov
(bad)
xor
jmp
inc
mov
jg
fwait
pop
xchg
shl
jl
sbb
pop
stos
cs
mov
xchg
ins
sbb
xchg
mov
imul
cmp
cmp
jae
fwait
and
das
retf
out
adc
or
gs
xlat
dec
lds
mov
outs
and
add
inc
jbe
inc
cmp
(bad)
ds
inc
lods
es
mov
adc
xchg
cmp
pop
mov
adc
pop
fldcw
mov
push
pop
mov
add
cmps
stos
adc
hlt
fsub
icebp
dec
or
(bad)
arpl
or
inc
pushf
ins
ret
fldcw
(bad)
imul
mov
pop
rcl
cmp
ss
push
inc
cwde
jg
or
push
add
imul
(bad)
pop
sub
mov
cmc
mov
daa
jmp
push
mov
pop
scas
stos
adc
sub
or
das
adc
call
dec
neg
out
jmp
mov
pop
ja
iret
add
push
inc
and
mov
(bad)
jl
dec
jmp
cmc
or
jb
rcl
xor
cli
movs
call
pop
call
xor
xlat
cmp
add
shl
mov
pop
repz
or
inc
arpl
push
xchg
jmp
mov
push
dec
jb
(bad)
adc
dec
clc
pop
jb
mov
iret
mov
sub
test
ret
mov
fisttp
fisubr
push
(bad)
inc
xor
test
mov
call
int3
xchg
aad
adc
or
jle
xchg
mov
mov
jp
sub
mov
inc
mov
sbb
add
fcomp
inc
or
in
xchg
push
mov
and
mov
movs
cli
retf
mov
mov
fidiv
mov
shr
mov
mov
sbb
retf
std
jmp
cmp
ror
and
clc
rsm
arpl
inc
les
nop
xor
sub
pop
and
bound
cmc
sub
cmp
sti
xchg
ins
and
jae
or
push
ror
pop
and
mov
mov
idiv
add
call
xor
and
adc
jb
(bad)
cmp
jmp
jecxz
xchg
sbb
mov
mov
dec
rcr
mov
mov
out
xchg
adc
cmp
pusha
dec
fisttp
clc
adc
add
aaa
mov
ror
mov
dec
scas
xor
imul
push
xchg
xor
mov
call
pop
mov
mov
(bad)
call
nop
pop
retf
jp
jmp
push
rcl
and
ja
jp
and
shl
ret
mov
add
or
cmp
(bad)
xchg
adc
sub
jb
stos
pop
mov
sub
add
cdq
inc
and
push
push
call
xor
or
(bad)
sbb
retf
mov
arpl
xor
dec
jle
sub
lds
add
cli
dec
mov
call
sbb
cmp
ds
clc
repnz
mov
out
xchg
mov
data16
jmp
iret
dec
fsub
adc
pop
cmp
push
aad
cmp
lahf
(bad)
push
movs
mov
cli
sbb
add
dec
data16
(bad)
mov
jle
ja
push
iret
enter
inc
fld
mov
loope
shl
or
int3
pop
(bad)
(bad)
inc
add
push
hlt
push
retf
sub
adc
inc
sbb
arpl
push
sub
mov
xor
push
dec
adc
xchg
mov
ret
push
add
fist
dec
xchg
pushf
sub
into
cmp
fild
(bad)
and
daa
xchg
mov
data16
ret
dec
inc
xchg
mov
(bad)
(bad)
mov
pop
neg
pop
sbb
push
dec
cmps
mov
or
jbe
add
sahf
inc
out
jno
into
mov
mov
test
stos
js
outs
pushf
pop
sub
out
sbb
outs
inc
(bad)
jl
mov
dec
add
fdiv
sub
adc
dec
jp
clc
xchg
pop
jecxz
loop
and
ds
sub
(bad)
js
leave
popa
(bad)
or
pop
jecxz
rcl
add
cs
ds
test
cmps
movs
mov
cmp
iret
mov
cdq
fild
int3
pop
inc
push
jmp
cld
add
sbb
(bad)
call
adc
loop
shr
lods
pop
scas
push
aas
cld
xchg
addr16
dec
fist
mov
or
cmps
stos
(bad)
aaa
aad
xor
mul
jle
popf
ss
add
retf
rcl
push
dec
mov
jle
pop
frstor
(bad)
pop
pop
hlt
xchg
cmc
jmp
jmp
pop
jecxz
(bad)
stc
xor
dec
arpl
push
retf
bound
sub
and
push
daa
shr
cmp
mov
jp
les
jbe
push
mov
or
fdivr
popa
(bad)
sti
inc
xor
leave
xchg
(bad)
das
pop
iret
or
lods
(bad)
jp
push
and
call
inc
jno
leave
add
add
push
(bad)
rcr
jg
icebp
jbe
mov
test
adc
jne
gs
fwait
xchg
fsubrp
retf
test
xchg
jb
call
cmp
inc
push
ds
fist
fist
adc
bswap
mov
xchg
rol
inc
mov
aas
lds
(bad)
cdq
arpl
jg
int3
imul
add
aaa
(bad)
dec
xor
xchg
ret
or
mov
ja
jle
inc
mov
aaa
scas
jnp
add
pop
jecxz
sbb
jne
push
fcomp
fwait
sbb
outs
(bad)
xor
outs
(bad)
(bad)
mov
call
jp
dec
imul
mov
jp
cmp
retf
scas
sub
and
outs
jecxz
adc
dec
xor
add
mov
cmp
retf
mov
cli
imul
jecxz
jno
xchg
pop
retf
imul
add
jmp
fistp
sbb
xchg
push
mov
sbb
pop
jbe
dec
outs
or
test
inc
cmp
pushf
mov
jno
mov
jecxz
mov
adc
dec
and
das
enter
mov
(bad)
cmp
cdq
cmp
jecxz
mov
or
das
adc
or
push
outs
mov
jg
sbb
mov
and
push
jp
ret
sub
rep
push
(bad)
sub
mov
mov
mov
pop
cli
add
pop
push
jp
bound
arpl
leave
mov
pop
movs
cmp
xchg
test
mov
push
jp
fidiv
shr
imul
les
stos
stos
mov
pop
retf
jp
sbb
arpl
rol
imul
fiadd
cmp
and
data16
sub
stos
mov
fimul
xchg
xchg
cmp
jae
or
push
(bad)
dec
pop
pop
mov
or
repnz
and
jns
add
call
xor
inc
test
xor
scas
retf
add
jnp
sub
and
xchg
sbb
mov
jg
jmp
pop
inc
and
adc
stos
cmp
pusha
dec
fisttp
(bad)
fiadd
jecxz
mov
es
dec
scas
xor
imul
push
xchg
xor
jnp
call
scas
mov
mov
(bad)
out
sub
pop
retf
jg
sbb
cmps
jae
daa
mov
push
retf
mov
mov
(bad)
jecxz
rol
ret
mov
add
or
cmp
(bad)
xchg
adc
sub
jb
stos
mov
scas
dec
ficomp
sub
add
fisub
pop
cdq
inc
and
cli
push
push
call
jbe
sti
imul
outs
loop
test
sub
jnp
bound
xchg
call
push
sub
ss
das
fisubr
fcmovne
neg
dec
xor
jle
aaa
mov
xor
pop
push
data16
push
xchg
daa
inc
mov
sahf
pop
jmp
sbb
sub
mov
sbb
das
iret
cmp
sbb
aad
retf
test
add
inc
mul
faddp
ret
sbb
stos
and
ss
retf
out
mov
(bad)
lahf
and
mov
pop
jmp
sbb
cld
sbb
pop
call
xchg
(bad)
mov
adc
sub
adc
fs
test
dec
aaa
mov
sbb
sub
test
in
xor
or
mov
stos
test
xchg
adc
mov
jmp
mov
push
int
out
mov
jmp
sbb
jmp
mov
and
imul
dec
mov
mov
leave
xor
and
jp
or
dec
xor
push
inc
fdiv
cli
cmp
out
mov
or
das
adc
mov
and
mov
adc
or
jecxz
ror
popa
dec
ja
loopne
arpl
jmp
ins
inc
mov
cmps
jmp
imul
call
adc
pushf
das
push
pop
inc
cli
adc
out
push
daa
mov
sbb
or
mov
sbb
xchg
push
jp
or
mov
lahf
push
div
repnz
nop
xor
mov
outs
xor
rcl
pop
mov
mov
retf
mov
mov
inc
xchg
push
mov
sub
dec
jae
loopne
stos
stc
cdq
add
xor
jmp
mov
sar
rcl
mov
fstp
div
or
mov
and
jae
test
retf
retf
jmp
jecxz
xchg
rol
mov
add
push
jp
dec
sbb
mov
jb
stc
out
xchg
cmp
repz
lock
jp
adc
jns
jb
jmp
(bad)
mov
inc
stos
call
xor
push
or
pop
or
nop
neg
retf
mov
dec
ds
jecxz
out
js
pop
pop
loopne
dec
jp
cmp
es
push
stc
lea
cwde
mov
mov
stc
jbe
and
sbb
outs
cmp
add
stc
(bad)
loop
pop
sub
sar
dec
push
stos
pop
or
arpl
push
inc
or
mov
iret
fwait
call
xor
data16
mov
cvtpi2ps
jg
retf
cli
jmp
jecxz
add
ret
dec
scas
pop
mov
fsubr
sbb
push
jns
mov
xchg
cli
dec
mov
fisttp
dec
xor
add
mov
lds
je
shr
mov
gs
mov
inc
int3
pop
data16
xchg
lds
jmp
jecxz
mov
inc
repz
push
sub
dec
loop
cmps
jne
out
xchg
mov
and
call
popf
cmps
push
xchg
sub
cli
aad
cmc
repnz
ret
scas
xchg
xor
loop
sbb
sub
lds
dec
and
(bad)
jne
retf
pop
inc
mov
and
test
xchg
push
mov
pop
sbb
add
cli
jl
jo
mov
or
mov
push
jp
cmc
mov
retf
push
stos
mov
cmp
sbb
sar
xor
in
jp
pusha
ds
movs
outs
scas
ins
mov
rcl
fidiv
arpl
repnz
jae
daa
jns
cmp
jne
mov
dec
repz
inc
xor
stos
sar
cmp
cmp
loopne
push
push
stos
xchg
or
ret
mov
cmp
jecxz
sar
stc
xchg
mov
cmp
lods
out
push
jno
dec
rcr
jecxz
mov
add
loope
test
and
mov
mov
sbb
ret
movs
outs
pop
shl
lock
test
xor
xchg
das
jmp
hlt
test
psubd
pusha
outs
add
lods
sbb
or
cmp
pminsw
mov
mul
pop
push
rcr
sbb
vpmacswd
sbb
popa
repz
and
inc
jp
cmc
arpl
push
ret
xlat
adc
xor
inc
pop
jge
(bad)
int3
pop
popw
cwde
adc
and
mov
not
or
or
or
cmps
aas
jle
retf
bound
jmp
cmp
jmp
jecxz
or
int3
push
scas
loope
mov
int3
jae
arpl
dec
fisub
(bad)
cmp
push
jp
sub
aad
cmp
or
jmp
adc
test
add
add
sbb
add
and
aas
stos
mov
or
es
push
jnp
sbb
call
shl
and
jo
mov
xchg
es
jbe
adc
arpl
or
stos
retf
pop
popa
xchg
retf
fwait
clc
stos
xchg
in
pop
rdpmc
movs
ss
jp
pop
jae
mov
retf
mov
pop
mov
sbb
pop
in
and
pop
jbe
dec
pusha
fwait
dec
jae
or
dec
cmp
pushf
mov
jno
mov
jecxz
loop
pop
iret
add
pusha
add
pop
sub
mov
(bad)
xor
xchg
jecxz
jecxz
mov
or
das
adc
or
push
outs
mov
jg
adc
mov
and
push
jp
cmps
jae
shr
imul
(bad)
(bad)
jl
out
stos
stos
mov
or
loopne
jp
std
rcl
xchg
push
cmp
jmp
jecxz
retf
dec
sub
cs
jmp
jae
arpl
rol
imul
fiadd
cmp
and
outs
sbb
pop
cmp
not
jae
or
push
fisttp
pop
xchg
push
mov
add
inc
and
jns
add
call
xor
ret
inc
test
je
inc
retf
add
jnp
sub
ret
mov
mov
sbb
ret
out
xchg
adc
stos
cmp
pusha
dec
fild
dec
adc
arpl
dec
cmp
lahf
fimul
xor
imul
push
xchg
xor
lahf
or
es
out
mov
mov
(bad)
out
call
nop
pop
retf
jbe
pop
add
jae
daa
mov
pop
retf
out
jmp
jecxz
rcl
ret
mov
or
or
mov
cmp
mov
repz
stos
repnz
sub
add
jae
arpl
pop
cdq
inc
and
cli
push
push
inc
mov
and
sbb
cld
add
push
ds
xor
(bad)
lods
xchg
dec
or
mov
ss
sahf
xchg
iret
imul
ja
ret
rol
ror
shl
aas
leave
cmc
push
(bad)
inc
mov
popf
(bad)
add
inc
retf
mov
mov
mov
and
cmps
push
cmp
fistp
ficomp
jmp
out
add
or
jecxz
shl
repz
adc
push
sti
sbb
jp
ja
retf
ins
sub
xchg
je
data16
out
sub
inc
(bad)
nop
xlat
es
jecxz
add
ds
sub
mov
xchg
mov
cmps
daa
cmp
xlat
movs
and
arpl
arpl
add
mov
sub
jg
fidiv
inc
dec
cmc
pop
scas
jle
xchg
sub
and
add
pop
loop
jecxz
lea
push
and
adc
jp
sbb
sbb
je
mov
sti
retf
repnz
shr
(bad)
push
int3
or
call
adc
push
sub
sti
fmul
das
shl
dec
int3
scas
in
in
jp
repz
sbb
xor
xchg
(bad)
imul
aad
jle
or
inc
retf
sbb
add
dec
jb
cmc
(bad)
fsub
(bad)
ss
enter
cli
loope
xchg
jns
repnz
fstp
xchg
imul
out
jae
daa
and
mov
sbb
cli
jge
fwait
sbb
sar
int
cmps
js
idiv
mov
dec
and
mov
jmp
xchg
ins
sbb
daa
adc
cmc
jb
aas
sub
push
mov
xchg
out
or
or
cmps
stos
sub
lds
mov
and
adc
pop
mov
aad
xchg
xchg
sub
or
loop
shl
retf
movs
sub
in
jp
loop
fdiv
push
cmp
xchg
jg
add
fwait
sbb
push
(bad)
out
cmc
pop
fsubr
mov
pushf
ret
pop
xor
xchg
xchg
(bad)
out
sbb
lods
inc
ret
ds
adc
push
dec
shl
pushf
and
fiadd
xor
ret
sti
pop
inc
(bad)
mul
(bad)
aaa
cmp
arpl
pop
stos
or
push
retf
ds
jmp
mov
sub
mov
push
fsub
sub
sub
push
mov
xchg
xchg
push
rcl
aas
mov
mov
jnp
test
(bad)
pusha
fsubrp
(bad)
rol
push
out
cli
mov
mov
mov
mov
add
xor
aaa
push
mov
mov
ja
iret
mov
and
mov
inc
fcomp
in
jp
pop
sbb
fwait
pop
leave
adc
xor
mov
sub
ret
xchg
xchg
sbb
sub
ss
sub
outs
std
jns
loop
jmp
xchg
imul
aad
aas
mov
add
xchg
lahf
mov
cmps
daa
xchg
mov
fwait
imul
dec
jb
daa
addr16
push
sub
xor
out
push
push
int
mov
pop
stc
sub
dec
mov
shl
adc
pushf
ficomp
pop
retf
xchg
adc
mov
loop
inc
aaa
or
pop
sub
jae
jmp
retf
out
bound
pop
aam
adc
sbb
push
rcl
sbb
cmps
push
lds
inc
cmps
out
pop
addr16
daa
lahf
mov
test
fmul
add
jecxz
int
and
shr
add
enter
popf
inc
cmp
sub
clc
lahf
gs
or
hlt
test
(bad)
cli
or
repz
outs
cld
xor
inc
dec
sahf
ds
add
lds
xchg
pop
push
xchg
dec
xor
ror
dec
js
pop
aad
and
xchg
dec
dec
mov
pop
or
jle
fisubr
or
jmp
pop
scas
xchg
popf
jle
loop
dec
arpl
les
adc
repz
mov
retf
les
sub
xchg
jle
xor
sbb
rep
jmp
inc
dec
repnz
jne
in
test
add
ds
int
mov
repz
mov
mov
cs
mov
xor
adc
pop
test
mov
xchg
adc
add
pop
jge
test
mov
jmp
mov
arpl
xor
in
adc
xor
retf
mov
fstp
mov
fsubr
mov
arpl
jecxz
xchg
call
cli
imul
fwait
and
iret
sub
aaa
push
pop
xchg
adc
add
pop
lds
or
and
add
test
cmp
sub
push
es
not
shl
push
pop
adc
mov
mov
inc
or
mov
xchg
mov
inc
xor
sub
xor
adc
push
daa
dec
inc
and
pop
jnp
xor
cmp
bound
xchg
jno
lds
ds
sar
inc
push
or
xchg
dec
movs
and
xacquire
data16
(bad)
sub
mov
arpl
sbb
je
xor
sbb
fdiv
stc
das
sbb
adc
cmc
jnp
out
sub
add
out
pop
xchg
repz
ja
pop
imul
mov
xchg
push
jg
mov
fld
adc
out
pop
xor
or
or
or
dec
jbe
lods
das
retf
mov
jne
gs
adc
pop
add
mov
cmp
adc
rol
stos
xor
add
div
sahf
push
int
retf
out
adc
ja
jecxz
sub
mov
xor
cld
push
and
fdiv
enter
es
push
inc
shl
xor
hlt
ret
pop
gs
jg
addr16
rol
jmp
idiv
xchg
push
or
mov
pop
and
jg
and
cli
ins
xlat
repz
cmp
sub
leave
fldenv
ja
lods
adc
sub
mov
aad
call
xor
sub
call
mov
xor
or
add
mov
repz
jmp
data16
addr16
mov
mov
cmps
jmp
pusha
ret
ret
pop
add
ds
push
in
sub
cmp
retf
pop
mov
cli
jl
or
xor
fistp
sub
outs
add
and
cmp
mov
jbe
jno
stc
add
xor
jp
in
jnp
cmc
pop
fdivr
data16
cs
push
out
ja
add
into
adc
cli
mov
pusha
stos
jnp
push
mov
pushf
xchg
push
(bad)
push
inc
pop
sahf
pop
imul
jecxz
add
(bad)
xchg
and
jae
es
adc
jae
lock
mov
sbb
inc
xchg
dec
push
pop
and
outs
imul
xor
out
xchg
mov
out
scas
shr
ret
mov
push
ss
and
outs
push
cmp
cmp
(bad)
arpl
xor
push
adc
mov
xchg
arpl
lods
sar
xchg
leave
ror
rol
dec
pop
movs
popf
movs
test
adc
sbb
(bad)
push
(bad)
xor
push
add
imul
mov
sub
arpl
mov
mov
cmps
jmp
mov
mov
or
pinsrw
pop
inc
idiv
mov
iret
xor
(bad)
inc
std
add
imul
mov
pop
inc
sub
cmp
neg
mov
lahf
call
ror
shl
dec
adc
add
jae
mov
inc
cmps
(bad)
ins
mov
sti
jae
js
push
dec
mov
sub
outs
in
rol
mov
out
(bad)
fiadd
out
adc
frstorw
or
sbb
mov
cld
test
add
pop
fs
inc
xchg
push
mov
sub
dec
jae
loopne
stos
stc
and
xor
jmp
mov
stc
jbe
fsubr
xor
cmp
lds
(bad)
xchg
stc
(bad)
loop
pop
sub
sar
dec
xchg
shl
arpl
push
mov
jmp
and
mov
data16
mov
aaa
sub
jg
xor
xchg
cli
cmp
sbb
pop
jecxz
dec
pop
pop
mov
(bad)
sub
arpl
push
jns
mov
xchg
cli
jg
sbb
mov
ja
dec
xor
and
push
adc
leave
mov
cmp
(bad)
sub
jns
ret
or
push
aas
imul
aam
sub
inc
stc
div
or
inc
add
adc
inc
bound
xchg
cwde
lahf
retf
adc
repz
xchg
sar
jecxz
and
jp
dec
sbb
mov
jle
stc
out
ins
cmp
repz
lock
adc
jns
jb
jmp
(bad)
fidivr
pop
stos
call
int3
cdq
icebp
xor
jp
or
pop
or
nop
call
mov
dec
and
jecxz
scas
stc
das
mov
outs
repnz
sbb
jno
fisttp
pusha
stos
not
(bad)
rcr
cdq
repz
xor
mov
shr
fisubr
jle
mov
and
aad
das
(bad)
movs
and
jp
mov
adc
xor
sub
leave
daa
xor
in
iret
jl
rcr
rcr
inc
push
jbe
ss
mov
test
retf
fnstcw
mov
aam
(bad)
mov
mov
sub
mov
mov
sbb
pop
jmp
pop
cmp
and
inc
stc
or
push
jmp
mov
or
cdq
leave
push
fwait
xchg
mov
daa
fld
pop
or
popa
mov
clc
clc
test
out
shr
dec
scas
mov
pusha
sub
fdiv
cmp
sbb
mov
call
mov
sar
mov
adc
mov
fcmovb
inc
or
sbb
sub
jmp
and
popf
in
lods
popf
xor
mov
fst
sub
stc
and
out
mov
xor
add
sar
push
scas
xchg
mov
mov
or
jg
pop
mov
push
xor
mov
xchg
mov
js
mov
cmp
jae
mov
push
mov
aam
cwde
jno
mov
(bad)
adc
sub
mov
mov
adc
jns
push
clc
imul
loope
sub
bound
jecxz
cmp
ret
test
inc
icebp
mov
div
out
xlat
adc
(bad)
mov
xor
shl
mul
(bad)
mov
call
mov
dec
scas
jp
xchg
neg
dec
test
xor
jmp
or
mov
out
xlat
add
mov
mov
xor
and
adc
sub
mov
fild
pusha
cmp
mov
mov
xchg
icebp
jl
or
in
mov
aaa
pop
cmp
imul
cld
(bad)
push
lds
jmp
cli
jg
repz
imul
pop
data16
aaa
mov
jno
out
aad
cld
iret
retf
gs
retf
iret
cdq
pushf
cmps
daa
shl
and
outs
mov
mov
mov
arpl
cmp
xlat
xor
cmp
pop
stos
bound
jg
and
pop
jae
lods
sbb
inc
cwde
xor
in
adc
call
nop
aas
retf
dec
pop
mov
pop
lahf
sub
ins
add
adc
jb
mov
ret
cdq
outs
inc
jp
push
mov
call
xor
xchg
test
and
in
scas
sbb
push
or
mov
sbb
push
into
jle
mov
aas
push
imul
(bad)
sbb
mov
pop
lea
add
jmp
ja
jae
push
jnp
cmc
sub
jbe
pop
ins
inc
inc
jecxz
mov
xchg
ja
push
mov
cmps
dec
shr
xchg
mov
cmp
jae
mov
mov
(bad)
aad
aas
pop
loop
jmp
mov
ins
sahf
outs
mov
cmps
fidiv
mov
push
sbb
push
xchg
dec
dec
iret
xor
pop
adc
push
dec
scas
sbb
sub
repz
ret
nop
mov
pop
xor
mov
test
ins
nop
or
out
jmp
mov
sar
mov
sub
mov
lds
test
pusha
cdq
mov
pop
jns
jle
pop
lods
mov
mov
push
adc
movs
adc
stos
pop
aas
ret
inc
sub
ins
adc
test
(bad)
lahf
xchg
(bad)
hlt
mov
repnz
cmps
stos
sub
sahf
inc
fcmovnbe
test
mov
cdq
popa
jecxz
das
stos
xchg
loopne
nop
push
mov
int3
cmp
jno
stos
pusha
or
pop
jg
das
jecxz
int
icebp
mov
mov
jne
out
sbb
(bad)
stos
inc
push
movs
xor
and
int3
pop
das
push
fisttp
loope
cli
jl
xchg
mov
xchg
push
xchg
cwde
outs
inc
or
jne
stos
mov
mov
aam
fwait
adc
mov
outs
retf
sbb
rcr
stos
(bad)
cmp
mov
add
cmps
push
xor
shl
dec
jg
das
xchg
xchg
mov
xor
les
fisub
xor
das
movs
pop
jp
leave
mov
enter
push
and
cli
jmp
push
mov
pop
push
xor
xchg
add
movs
lods
ficom
mov
mov
iret
movs
retf
mov
popf
movs
jecxz
cld
ret
mov
bound
mov
(bad)
repz
jmp
adc
dec
shl
xchg
add
jae
xor
pop
inc
sbb
pop
fcmove
adc
or
aad
sar
cmp
jns
jae
arpl
test
test
sti
and
jecxz
test
xchg
push
retf
push
test
jecxz
add
sahf
sub
lods
call
(bad)
and
jp
push
jae
arpl
(bad)
jp
mov
int3
mov
inc
xor
cli
movs
call
repz
mov
gs
call
sbb
mov
xor
in
outs
lock
cmps
ins
adc
sub
jb
stos
dec
mov
sub
add
pop
cdq
inc
and
add
or
int3
mov
leave
adc
sti
aad
jle
retf
mov
arpl
mov
retf
jp
das
jae
arpl
mov
xchg
or
xor
inc
stos
cmp
adc
loop
sbb
sub
lds
int3
xchg
bound
or
push
in
movs
pop
outs
xchg
cli
mov
mov
idiv
add
gs
jo
sub
int3
and
in
xchg
inc
test
lds
(bad)
xor
jnp
sbb
cmps
sbb
xchg
sbb
mov
pop
mov
push
scas
inc
ds
xor
dec
xchg
adc
push
cmp
pusha
dec
fstp
(bad)
adc
cld
jecxz
mov
xlat
retf
dec
scas
xor
imul
push
xchg
xor
jbe
mov
arpl
push
retf
neg
fimul
cmp
add
push
shl
retf
jbe
add
jno
pop
loope
sub
lods
jl
ja
jae
(bad)
dec
xchg
mov
rcr
gs
mov
clc
outs
ins
es
sbb
jbe
jecxz
xchg
in
mov
das
jl
adc
aad
xchg
movs
repz
out
xlat
cmc
les
adc
pop
bound
push
icebp
lds
xor
sub
jle
pop
sti
fcom
fisubr
push
iret
sahf
dec
ja
and
shr
aas
inc
inc
dec
icebp
adc
mov
push
ficomp
adc
or
int3
mov
addr16
jp
cmc
sub
pop
ret
retf
mov
pusha
into
sti
jg
aaa
jae
repz
jmp
mov
push
adc
jb
mov
push
mov
mov
mov
mov
xchg
jnp
pop
mov
fcom
and
xor
xchg
mov
push
xchg
mov
outs
jmp
repz
pop
cmpxchg8b
(bad)
retf
dec
mov
mov
and
(bad)
mov
mov
das
retf
inc
jp
push
ror
jp
addr16
(bad)
loope
mov
mov
cmps
push
imul
add
jge
sub
sbb
aad
ja
ss
push
dec
ds
lahf
jl
out
jecxz
mul
dec
ret
das
pushw
push
aaa
inc
xchg
pushf
jb
push
fisttp
lods
or
mov
or
xchg
cwd
sub
adc
cmps
sahf
mov
mov
dec
hlt
aas
xchg
jge
adc
mov
cmps
adc
push
xchg
cli
push
(bad)
and
leave
int3
in
inc
push
ds
cmp
push
push
retf
pop
mov
sti
mov
repz
neg
xchg
aas
dec
jmp
lea
sub
and
cmps
adc
or
push
inc
cld
loop
sbb
push
mov
retf
adc
or
aad
sar
cmp
call
test
test
sti
and
jecxz
test
xchg
push
retf
push
test
jecxz
add
ficomp
(bad)
lods
ror
push
sar
std
stos
and
jae
arpl
push
jg
call
jmp
dec
push
adc
xor
push
jp
pop
and
jae
rol
dec
fs
sbb
fwait
jecxz
xchg
xor
xor
adc
or
mov
jo
mov
cli
jmp
mul
mov
gs
lock
cmc
add
fisub
mov
mov
rcl
out
mov
cmp
or
in
outs
lock
jmp
leave
stos
test
push
sub
add
call
cdq
fcmovu
jmp
or
int3
mov
leave
adc
pop
aad
jle
retf
mov
arpl
mov
retf
jp
sub
lods
rol
imul
fiadd
cmp
fadd
pop
sbb
pop
lds
ret
xchg
lea
or
push
jmp
mov
pop
push
jbe
and
jns
add
gs
jo
sub
das
and
jae
dec
sub
cmp
xor
jnp
cmp
push
sbb
xchg
sbb
mov
das
test
dec
rcr
mov
push
dec
inc
push
dec
xor
dec
xchg
adc
push
cmp
pusha
dec
(bad)
sbb
dec
cld
jecxz
mov
xor
iret
and
imul
push
xchg
xor
pop
cmc
call
push
in
inc
sbb
jl
icebp
stos
sbb
enter
xor
and
clc
sub
pop
add
mov
cmps
ja
(bad)
jne
(bad)
cli
cs
xchg
mov
inc
data16
push
xchg
pushf
addr16
pop
inc
cmp
or
mov
mov
pop
mov
and
sar
in
xchg
and
retf
dec
ss
pop
cmp
push
aas
data16
cmps
and
or
mov
mov
fstp
stos
(bad)
loop
cmp
(bad)
adc
add
push
dec
sub
lds
scas
stos
cli
push
dec
xor
mov
fstp
cmc
sub
dec
enter
sahf
int
push
mov
jae
std
xchg
add
pusha
pop
and
add
dec
dec
cwde
movs
cmp
push
retf
dec
sbb
ins
mov
cmps
lods
ret
(bad)
xor
cs
cmp
cdq
dec
bound
pop
jg
mov
xchg
push
jmp
push
cmp
outs
push
icebp
addr16
adc
out
popa
sbb
fst
(bad)
mov
inc
test
ret
sbb
mov
ins
loopne
lds
repz
cmps
jmp
adc
or
pushf
and
push
repz
mov
xchg
jp
rcr
xchg
jb
xchg
mov
inc
ficomp
xchg
add
mov
das
cmp
movs
add
and
test
cmc
sbb
sub
inc
retf
dec
and
push
(bad)
jle
sub
(bad)
jmp
test
dec
(bad)
in
cmps
lods
mov
or
lahf
mov
iret
repz
sbb
mov
xlat
dec
xchg
push
popa
push
push
pop
daa
or
xchg
inc
mov
pop
push
ins
repnz
or
xchg
bound
imul
aam
pop
stos
sub
mov
rcl
and
(bad)
iret
pop
mov
sbb
mov
int
das
xor
push
cli
enter
stos
loop
jmp
call
xchg
in
retf
repz
push
(bad)
mov
stos
jmp
jecxz
rol
add
mul
data16
call
inc
add
dec
cmp
sub
mov
call
xor
aas
sahf
push
jp
xor
dec
nop
outs
push
rcl
call
fimul
push
sub
xchg
add
mov
popa
mov
add
dec
inc
mov
cmp
and
sbb
xchg
cmp
xlat
(bad)
jl
cmp
out
xlat
inc
ret
or
(bad)
mov
xchg
out
xchg
cdq
ds
cs
cmp
daa
xchg
mov
sub
leave
xchg
std
jle
rep
(bad)
and
dec
mov
add
dec
cmp
xor
xchg
push
jb
call
xchg
in
xchg
sub
scas
pusha
mov
shr
sub
sub
or
retf
pop
jmp
mov
pop
fstp
mov
push
mov
push
call
inc
mov
add
pop
xchg
sub
push
xor
jge
mov
lock
adc
pop
out
xchg
mov
bound
pop
ret
pop
mov
aaa
mov
xchg
dec
mov
cmp
or
rcl
fsub
sahf
jp
div
fst
(bad)
sub
outs
test
adc
sub
xchg
stos
in
push
xchg
push
fisub
pushf
adc
jle
call
xchg
dec
sbb
xchg
add
test
imul
inc
add
jb
cmps
add
push
cmp
jmp
cld
inc
arpl
inc
mov
pop
scas
xchg
dec
jnp
jg
dec
gs
mov
cmps
sbb
sbb
inc
push
mov
addr16
ror
xor
add
sbb
cmp
mov
push
stos
or
pop
test
xchg
pop
and
push
xchg
jb
cmp
mov
cli
sub
cli
xor
cmp
neg
ret
sahf
jo
out
test
pop
(bad)
adc
adc
mov
cmps
cli
xor
sbb
cmps
scas
cmp
not
(bad)
jmp
jne
out
jmp
cli
add
int3
jg
sar
data16
sub
out
sub
push
push
jmp
scas
fyl2xp1
add
jne
adc
push
rcl
mov
mov
sub
je
arpl
es
inc
call
xor
cmps
stos
out
add
sar
das
push
dec
sahf
fadd
add
es
sbb
push
mov
rol
cmp
test
pop
sti
sbb
mov
cmp
(bad)
adc
cli
xchg
ret
nop
dec
xor
addr16
adc
pop
jb
outs
push
lds
dec
iret
sub
(bad)
cli
jae
(bad)
xchg
sbb
shl
(bad)
leave
inc
movs
fwait
imul
dec
mov
aaa
jno
(bad)
push
sub
out
push
add
sbb
adc
pop
es
sti
test
int3
jae
pushf
ret
mov
adc
mov
inc
pushf
cmps
aaa
xchg
loop
pop
jp
retf
pusha
pop
push
jle
inc
ds
clc
popa
les
sar
out
(bad)
xor
xor
icebp
ds
sbb
inc
add
or
mov
jge
mov
add
ja
sbb
push
cmp
dec
adc
(bad)
jnp
neg
mov
jg
sar
popf
xchg
inc
repz
push
sbb
sub
push
push
loop
fiadd
push
out
mov
jae
adc
mov
mov
out
sub
mov
push
(bad)
mov
in
call
adc
adc
inc
sbb
stos
xchg
repnz
ds
jg
int
imul
(bad)
outs
pop
(bad)
pop
mov
movs
ss
jecxz
repz
mov
cmps
sahf
or
mov
lds
loop
mov
jnp
push
inc
cmc
lahf
push
ficom
inc
ss
out
into
jp
retf
push
jle
dec
xchg
xlat
xor
push
pop
aaa
sbb
add
jmp
fidiv
sar
mov
jae
mov
jecxz
cli
sbb
cmp
mov
mov
adc
xlat
and
sbb
arpl
mov
(bad)
and
xchg
push
dec
stos
ja
jne
repz
pop
pop
sub
cmp
retf
add
mov
adc
pop
pushf
and
inc
addr16
clc
sbb
addr16
jle
ss
es
imul
inc
pop
neg
inc
pop
pop
ret
jae
push
outs
es
retf
packsswb
xlat
adc
dec
dec
cmps
or
xchg
in
push
mov
sbb
out
cmp
retf
loopne
out
(bad)
mov
(bad)
xchg
mov
push
jmp
push
aas
cld
inc
or
pop
mov
sub
jae
scas
mov
jecxz
imul
test
jae
call
(bad)
cmp
std
dec
jp
div
mov
mov
es
pop
push
js
cmps
into
pop
inc
test
xchg
inc
pusha
shr
(bad)
sbb
(bad)
scas
mov
data16
arpl
dec
xchg
icebp
push
cmps
data16
xor
jne
data16
jbe
or
adc
aaa
adc
cmp
arpl
sbb
sar
ds
sahf
xchg
aad
dec
leave
(bad)
in
mov
mov
cdq
push
mov
rcr
and
adc
jmp
and
jl
mov
mov
mov
arpl
adc
xchg
inc
or
iret
sti
lahf
ret
out
(bad)
iret
repnz
jecxz
shl
cmp
aas
add
cmp
xchg
pop
sbb
aad
xor
(bad)
iret
pop
mov
push
pop
mov
inc
cmp
xor
sti
daa
jecxz
add
repz
mov
xor
(bad)
jp
push
or
adc
pop
xor
and
mov
sub
cmp
(bad)
mov
fnstenv
xor
fs
add
mul
inc
lods
cmp
jecxz
out
out
xor
mov
inc
aas
push
pusha
push
scas
xchg
pop
inc
xor
int3
arpl
inc
xor
xchg
jno
(bad)
iret
mov
sbb
fucomi
pop
cmp
mov
leave
in
pop
mov
test
xchg
test
jecxz
dec
pusha
or
add
call
xor
xchg
cli
test
xchg
jecxz
pop
mov
daa
jle
stc
mov
fs
push
mov
mov
mov
pop
push
cmps
jecxz
cwde
hlt
movs
pop
mov
sti
call
repz
(bad)
xchg
add
cmp
outs
mov
pop
ret
push
mov
xor
(bad)
aad
out
test
lea
out
cmp
test
push
jp
bnd
lahf
jp
add
push
push
xor
lahf
dec
jne
fist
mov
sbb
imul
outs
pushf
test
adc
(bad)
cmp
imul
ins
jecxz
cmp
test
neg
pop
or
pop
mov
jecxz
loopne
xor
lock
cli
cmp
xchg
cmp
add
dec
test
(bad)
mov
push
rcl
ror
nop
sub
pop
sub
movs
cmp
mov
xchg
adc
and
xor
es
push
cmps
add
test
(bad)
div
(bad)
mov
and
push
jb
adc
ins
push
inc
mov
mov
(bad)
js
idiv
xchg
inc
xchg
sbb
test
cs
icebp
das
ja
(bad)
pushf
jp
rol
outs
stc
stc
aad
repz
ror
push
xor
jb
jbe
push
retf
dec
(bad)
(bad)
bound
retf
bswap
test
xchg
push
xor
xchg
repz
arpl
adc
mov
jmp
sbb
and
pop
xor
fadd
(bad)
fldl2e
addr16
arpl
(bad)
cli
xchg
call
ret
pushf
outs
add
add
push
pop
mov
arpl
xor
mov
outs
adc
lea
movs
and
and
arpl
dec
push
push
outs
sti
add
call
xor
call
pop
call
mov
jmp
mov
jmp
mov
scas
and
jae
pushf
iret
pop
lds
jmp
cmps
and
scas
dec
dec
arpl
call
and
fmulp
inc
xchg
pop
push
mov
mov
ret
cmp
loope
xchg
mov
fsubr
outs
fmul
out
mov
mov
fstp
adc
push
fcmovbe
ret
inc
ss
(bad)
rcr
or
sbb
inc
mov
(bad)
jmp
push
jg
mov
xor
xor
xor
inc
rcl
xchg
getsec
sbb
ins
pusha
ficom
mov
inc
icebp
jnp
nop
xor
fisttp
jecxz
sar
fcom
movs
jmp
jge
cmps
adc
enter
adc
pop
in
dec
push
icebp
pop
pop
and
daa
jp
xchg
jmp
cwde
mov
adc
test
and
mov
jle
cs
adc
push
aas
xor
inc
push
mov
imul
std
clc
shl
daa
jmp
pop
xchg
mov
lds
out
add
imul
jbe
and
sti
test
je
mov
out
xchg
stos
cmp
imul
out
aas
mov
jb
pop
inc
gs
retf
cmp
int3
cli
sub
jbe
call
mov
stos
xchg
push
cmc
jo
xchg
out
xchg
jle
xor
(bad)
jmp
scas
stos
mov
daa
bound
adc
test
mov
lods
jmp
leave
mov
or
mov
adc
stos
mov
outs
jnp
push
dec
inc
ret
mov
mov
pop
push
leave
inc
rcr
bound
mov
mov
mov
dec
and
jno
mov
pop
dec
inc
inc
pop
test
or
jle
adc
push
arpl
and
mov
iret
jp
xchg
and
mov
mov
repz
cmp
pop
sub
dec
rep
imul
inc
shr
data16
pop
add
pop
ret
dec
mov
sub
fist
invd
sti
adc
int3
inc
and
sbb
into
lahf
je
cmp
dec
sbb
jecxz
aad
test
out
aas
mov
aad
cmp
mov
xchg
out
into
mov
inc
cmp
xor
add
jmp
aad
adc
inc
mov
mov
out
adc
mov
push
inc
test
add
fmul
ss
adc
jmp
inc
call
test
cmc
ds
outs
sub
jb
xor
pushf
out
jne
(bad)
mov
ret
stos
sub
or
push
loop
xchg
arpl
or
imul
mov
pop
mov
mov
xor
sbb
movs
ss
call
push
jle
cmp
push
xlat
stc
idiv
or
scas
push
(bad)
ds
fsubr
inc
cld
pusha
mov
clc
sbb
sbb
jmp
jecxz
jecxz
add
call
sub
inc
push
out
push
cmp
and
dec
loope
pop
inc
push
or
xchg
imul
cmp
popa
fwait
jno
xchg
js
xchg
movs
pop
mov
pop
adc
xchg
imul
sar
fs
cmps
adc
mov
daa
pop
and
jnp
loop
in
sub
fcmove
adc
ficomp
outs
stos
rcr
aaa
das
fwait
jp
xchg
push
mov
sahf
dec
mov
movs
call
xor
inc
push
ds
sbb
dec
sub
ins
push
ins
stos
mov
cmp
stos
mov
aas
retf
ficom
test
shl
mov
xlat
adc
mov
call
xor
jmp
clc
fidiv
mov
lds
jmp
cmps
imul
movs
mov
mov
repz
mov
push
inc
sbb
push
add
adc
shl
loopne
inc
mov
and
mov
cmp
fimul
shr
xor
dec
xchg
add
jae
daa
mov
mov
mov
jp
adc
cmps
sbb
pop
test
cwde
aas
or
sbb
popf
inc
and
frstor
push
and
add
rcl
ror
cmc
pushf
mov
pop
fist
sbb
mov
mov
or
das
adc
sbb
pop
rcl
retf
out
cmp
jle
and
jecxz
mov
call
jae
popf
xchg
popf
fidivr
push
xor
mov
ret
xchg
sar
push
jp
dec
sbb
mov
(bad)
mov
out
ins
cmp
repz
lock
jp
adc
popf
jmp
mov
mov
inc
stos
call
int
call
or
pop
or
nop
neg
retf
mov
dec
aas
ret
jecxz
mov
movs
loopne
dec
jp
bound
es
lods
stc
mov
cwde
mov
mov
stc
jbe
(bad)
jmp
cmp
les
xchg
xchg
stc
(bad)
loop
pop
sub
dec
cwde
pop
dec
xchg
shl
arpl
push
mov
jmp
and
mov
data16
mov
aaa
sub
jg
xor
or
jmp
sbb
dec
ja
mov
fld
sbb
push
jns
mov
xchg
cli
mov
push
adc
dec
xor
and
push
adc
leave
mov
cmp
(bad)
cmp
cli
cmp
cmps
ret
adc
xor
push
aas
imul
enter
mov
mov
sub
repnz
mov
test
xor
push
sbb
jle
inc
pop
mov
cmp
cs
repz
push
adc
mov
stos
fdivr
sti
test
sub
into
inc
xlat
sbb
ins
xchg
jl
add
push
test
ja
scas
imul
loope
push
dec
fnstsw
sar
ins
mov
sbb
sti
jp
xchg
movs
scas
(bad)
sti
test
dec
xor
arpl
pop
sub
mov
xor
inc
(bad)
loop
cmps
mov
sub
arpl
cmp
call
xchg
(bad)
or
adc
dec
mov
stos
in
push
mov
pop
xchg
sbb
fdivr
and
sahf
mov
jmp
fist
mov
mov
xlat
push
push
lea
pop
(bad)
fcmovnu
lds
xchg
jmp
bound
retf
pop
inc
sahf
inc
mov
aaa
add
add
xor
sbb
sbb
cmp
sbb
ret
fdiv
cmp
push
and
movs
jp
(bad)
enter
mov
cld
lock
cli
cmp
mov
sahf
and
movs
pop
jmp
add
ss
out
push
mov
int3
ror
dec
cmc
xchg
and
mov
ficomp
cmp
(bad)
jle
in
stos
mov
mov
and
nop
icebp
cld
or
pusha
pusha
mov
icebp
repz
mov
sbb
daa
mov
dec
push
sbb
data16
cmp
mov
xchg
out
cmp
adc
nop
push
dec
push
pop
fsubr
data16
cmc
jae
out
out
jle
xor
outs
sti
mov
xchg
xor
leave
mov
test
mov
repnz
push
adc
inc
movs
or
ins
cmp
push
test
movs
sbb
cmp
(bad)
pop
sub
mov
lock
mov
movs
push
jg
das
push
or
jo
sub
out
test
loopne
pop
jmp
call
or
mov
popa
fwait
repnz
(bad)
repz
ins
mov
leave
pop
movs
dec
imul
arpl
push
cmp
adc
repnz
sbb
sar
ja
fistp
test
ret
push
inc
mov
cs
mov
jp
push
fdivr
cmp
cmc
jbe
mov
add
fimul
xchg
retf
neg
daa
mov
push
sub
add
and
ret
sub
fisttp
stc
cli
js
out
jecxz
mov
or
mov
aas
mov
cmp
popa
push
stos
iret
or
mov
cmps
ins
xchg
aad
adc
ror
jns
sub
shr
repz
sub
sub
pop
test
cwde
aas
xor
sub
sub
stc
inc
popf
jns
sub
lahf
xor
(bad)
push
and
add
rcl
ror
rcr
pop
fist
sbb
mov
mov
or
pinsrw
pop
inc
imul
mov
iret
xor
(bad)
inc
std
add
imul
mov
pop
dec
sub
cmp
neg
mov
lahf
call
ror
shl
inc
adc
add
jae
mov
retf
jb
push
stos
push
into
sbb
jecxz
sar
dec
in
add
imul
mov
sub
sbb
jo
cmps
jmp
mov
mov
add
push
jp
dec
sbb
mov
add
cmp
repz
lock
jp
adc
popf
jmp
daa
fidivr
inc
stos
call
int
call
or
pop
or
nop
icebp
sbb
mov
mov
dec
aas
ret
jecxz
lahf
mov
loopne
dec
jp
cs
es
lods
stc
(bad)
xchg
mov
sub
mov
mov
stc
jbe
(bad)
xchg
cmp
les
mov
or
mov
dec
xchg
shl
jns
push
mov
jmp
and
mov
data16
mov
aaa
sub
jg
xor
adc
cmp
sbb
dec
cmp
das
jnp
rcr
sbb
push
jns
mov
xchg
cli
add
adc
dec
xor
std
leave
mov
cmp
(bad)
cmp
cli
or
cmps
ret
adc
xor
push
aas
imul
enter
repnz
stc
div
or
inc
add
xor
jmp
jae
daa
pop
fadd
sub
(bad)
leave
popa
fdivrp
adc
mov
retf
out
outs
fisttp
jae
push
outs
mov
fisubr
scas
cmp
cmp
outs
cmp
or
out
test
push
add
fisub
mov
cmp
ret
xor
fsubr
lahf
xor
xchg
push
outs
out
scas
in
jg
pushf
outs
(bad)
push
out
or
pop
cmps
out
test
aas
xor
pop
out
outs
jae
daa
daa
(bad)
fisubr
mov
gs
stos
test
ret
dec
xor
adc
cmc
jbe
push
add
push
retf
mov
loopne
fwait
sbb
(bad)
mov
or
ror
arpl
cmp
rcr
or
push
out
popf
adc
aaa
and
push
push
mov
shr
loop
push
mov
sub
stos
(bad)
mov
mov
jmp
xchg
arpl
push
adc
ds
sub
rcl
and
dec
xchg
pop
call
fwait
pop
pushf
adc
rol
xchg
adc
js
sbb
xchg
mov
add
in
jle
data16
movs
retf
stos
inc
dec
fcmove
jmp
xchg
mul
pop
hlt
ret
fsub
and
push
push
and
aaa
in
inc
lods
push
xor
xchg
push
mov
repz
sub
cmp
not
xchg
pushf
cmps
scas
mov
(bad)
dec
cli
(bad)
sub
js
retf
push
sub
(bad)
sbb
pop
lock
jnp
xchg
push
in
mov
mov
sar
mov
mov
addr16
adc
or
or
cld
mov
scas
adc
int3
and
outs
sbb
xchg
dec
xor
loope
icebp
imul
xchg
or
mov
add
loope
push
sar
and
cwde
mov
jl
(bad)
lods
mov
and
or
adc
stos
test
jae
and
jg
in
inc
or
lds
xchg
sar
mov
ret
outs
repnz
adc
bound
fwait
xchg
not
adc
or
mov
dec
mov
push
inc
test
inc
push
cmp
retf
retf
arpl
mov
sub
xchg
jecxz
dec
jle
stos
in
jp
dec
jae
pushf
inc
lds
les
or
aaa
ret
ret
or
jns
add
mov
addr16
jle
scas
dec
sahf
(bad)
adc
mov
xor
jmp
sub
es
(bad)
out
cli
(bad)
dec
repz
dec
xchg
inc
xchg
push
rcl
dec
mov
mov
sbb
retf
out
fidiv
leave
xor
stos
dec
hlt
aas
pop
mov
sbb
push
sub
cmc
sub
lods
and
movs
mov
dec
loope
mov
int
pop
push
sub
adc
(bad)
gs
adc
add
aad
dec
mov
pop
dec
mov
sub
push
mov
daa
sub
push
retf
pop
fild
inc
mov
imul
pop
push
out
movlps
(bad)
sbb
inc
lds
xor
leave
jmp
xor
add
xor
addr16
lahf
mov
fcmovb
inc
cmp
nop
jmp
setnp
mov
es
mov
pop
and
pop
cld
int
in
aas
push
push
xor
mov
repnz
sub
stos
inc
xor
jae
sbb
imul
sbb
cmp
xchg
dec
gs
nop
nop
sbb
call
out
pop
rcr
jae
xchg
aad
ror
xor
hlt
cli
xchg
(bad)
repnz
mov
xchg
push
cmp
(bad)
pop
retf
imul
push
or
in
outs
lods
(bad)
jo
fisub
mov
aaa
ret
sbb
pop
jnp
call
es
fdivrp
and
jbe
mov
xor
cmp
jp
pop
pop
and
or
cmp
and
adc
loop
cli
aad
sbb
lea
pop
lods
push
pop
pusha
(bad)
xchg
sti
push
add
jmp
out
mov
and
jmp
push
jp
cmc
jae
bound
cmp
out
test
addr16
jbe
mov
xchg
sbb
pop
popf
retf
dec
xor
and
cmp
jmp
inc
retf
mov
jne
fiadd
xchg
mov
and
stc
add
aaa
sbb
push
ja
inc
mov
pusha
adc
mov
out
out
sar
push
jp
xor
arpl
fsub
mov
sti
cli
cmp
add
xchg
es
adc
add
sbb
std
retf
ins
push
xchg
jno
mov
cmp
push
repnz
(bad)
sbb
rcl
and
add
xchg
mov
jp
jns
lds
in
es
jg
(bad)
mov
add
pop
cmps
sahf
aaa
dec
push
add
jp
div
int3
aaa
ds
adc
fcom
add
inc
or
mov
inc
ss
adc
or
jmp
xchg
arpl
(bad)
jecxz
stos
sbb
sbb
push
scas
xor
xchg
add
mov
mov
jo
xor
jle
push
and
ins
and
adc
xchg
cdq
arpl
es
imul
popa
cmp
pop
sbb
sar
adc
or
packsswb
mov
pop
add
jne
cmp
out
(bad)
in
mov
push
sub
sbb
cwde
fld
aad
mov
dec
scas
sbb
mov
pop
lock
bound
arpl
sbb
retf
sub
cmps
pop
mov
cmps
pop
pop
push
push
sub
dec
jae
jbe
or
sub
mov
gs
cmp
mov
repnz
sar
xchg
fdiv
fdivr
and
ss
setae
cmps
cli
ret
fdivr
(bad)
push
(bad)
xor
fisub
aaa
xor
pop
push
inc
mov
fsub
jmp
imul
sbb
and
xor
cmp
push
xchg
cli
outs
into
js
xlat
stos
and
pop
dec
and
ret
test
jb
xor
(bad)
arpl
mov
es
repnz
rol
mov
daa
jp
or
in
outs
lock
jb
adc
sub
jb
stos
push
mov
sub
add
pop
cdq
inc
and
push
push
call
int3
mov
leave
adc
stos
aad
jle
retf
mov
arpl
mov
retf
jp
ds
arpl
lods
rol
imul
fiadd
cmp
adc
loop
sbb
sub
fimul
xchg
jp
xchg
or
cmps
or
push
cmc
dec
dec
pop
xchg
fwait
sub
push
push
cmp
movs
cli
std
mov
mov
and
in
xchg
inc
test
sub
sahf
add
jnp
xor
stos
sbb
xchg
sbb
mov
mov
sbb
(bad)
dec
xor
dec
xchg
adc
push
cmp
pusha
dec
fld
push
adc
arpl
data16
retf
dec
scas
xor
imul
push
xchg
xor
(bad)
cmc
call
mov
es
add
pop
and
cdq
stos
xchg
aaa
ret
jno
movs
and
pop
jnp
pop
mov
bound
jg
call
jl
daa
outs
jecxz
push
popa
dec
cmps
mov
jb
data16
xor
(bad)
push
loop
jecxz
div
into
rol
xor
xchg
pop
ds
xor
retf
and
add
rol
movsx
(bad)
sti
fcomi
inc
jae
xchg
adc
cmp
pushf
pusha
add
mov
and
push
fcomp
jg
daa
adc
out
mov
or
xchg
push
sub
mov
add
xchg
add
adc
xor
imul
push
mov
sub
icebp
mov
mov
into
mov
(bad)
scas
je
aas
int
mov
stos
xlat
mov
push
cs
outs
fsub
push
fwait
xchg
fisub
add
adc
and
sahf
dec
adc
and
aaa
aas
daa
cmps
push
shl
ficomp
xlat
ja
jno
pop
repz
adc
ret
movs
xor
adc
xor
ror
jmp
jmp
(bad)
sub
mov
rcr
rol
fcmovnbe
jbe
enter
iret
sub
or
mov
loop
pop
icebp
add
push
fwait
sub
push
xor
fistp
pop
jecxz
ror
outs
int3
push
dec
cli
test
addr16
dec
mov
and
mov
sub
idiv
clc
fild
jp
cmc
push
cdq
arpl
sar
dec
mov
and
xchg
jno
(bad)
or
sbb
mov
push
cs
jp
cmc
ds
arpl
fisub
ds
inc
add
push
mov
retf
adc
mov
jle
push
mov
into
js
(bad)
sub
dec
pop
mov
retf
and
mov
out
(bad)
scas
cmp
retf
xchg
jecxz
dec
or
cmps
and
dec
cmp
iret
pop
ret
dec
in
ret
mov
inc
sub
jno
scas
mov
jecxz
xchg
xor
outs
ja
fwait
xchg
pop
mul
cmc
(bad)
cli
pushf
cmps
mov
into
sub
cli
cmps
into
js
(bad)
sub
lahf
xchg
lahf
mov
add
mov
into
retf
xchg
fild
mov
sbb
(bad)
push
mov
xor
mov
jnp
pushf
loop
(bad)
ds
adc
ja
jne
data16
xchg
push
cmp
shr
push
sti
push
out
sub
pop
mov
or
call
mov
int
nop
jp
mov
inc
outs
fdivr
scas
out
dec
sbb
addr16
fistp
pop
jecxz
sub
mov
xor
and
push
in
mov
mov
out
add
call
cld
jg
fisubr
lods
das
mov
mov
iret
ins
cli
cmps
jne
xchg
(bad)
jbe
inc
out
mov
test
aad
xor
ds
jmp
fistp
mov
ret
xlat
and
adc
(bad)
aad
cmp
pop
mov
mov
jp
(bad)
xor
and
jb
arpl
movs
sbb
cmp
and
movs
jne
mov
xor
loope
popf
mov
loopne
mov
pop
inc
mov
and
je
add
idiv
ret
outs
ja
and
lock
out
xor
inc
iret
xlat
jno
scas
jo
add
lods
push
push
scas
push
pop
cld
and
sbb
jmp
mov
into
stos
mov
ja
mov
pop
cld
jbe
dec
fidiv
cs
ja
pop
jle
outs
daa
rol
mov
cmps
and
cmps
out
xchg
addr16
inc
lods
mov
xor
xchg
cli
(bad)
jne
pop
outs
daa
pop
aaa
dec
(bad)
mov
jp
cmc
cmp
push
inc
ss
xchg
out
(bad)
mov
xchg
jne
adc
mov
mov
test
xchg
leave
xchg
dec
push
jle
iret
push
ss
fisub
cld
shl
mov
jle
out
add
addr16
daa
xlat
scas
out
aaa
dec
dec
int3
movs
addr16
out
jnp
test
addr16
(bad)
sar
push
push
push
jle
sbb
cs
cmps
mov
movs
scas
out
into
xchg
cmc
(bad)
sbb
retf
cs
pop
outs
daa
shl
mov
pop
outs
out
idiv
xchg
(bad)
dec
or
adc
or
sbb
sub
cmps
retf
out
xchg
adc
jbe
into
inc
dec
push
pop
add
xchg
xchg
push
inc
sub
pop
fsub
out
xchg
cmc
(bad)
xchg
pushf
cmps
scas
sar
addr16
jno
call
dec
dec
push
fldenv
dec
nop
jp
mov
inc
outs
fdivr
dec
mov
xchg
adc
repz
jmp
cmp
mov
test
mul
cmps
fidiv
pop
pop
xchg
adc
mov
lea
ja
adc
jae
pushf
(bad)
push
mov
out
not
scas
xchg
add
outs
push
sub
ret
push
int3
imul
movs
aas
loopne
out
enter
xchg
adc
or
sbb
test
xor
mov
out
ja
xchg
and
dec
jne
jae
daa
sar
ret
pop
jecxz
shr
arpl
clc
inc
inc
mov
pop
data16
jne
cs
fdiv
fmul
mov
pushf
jae
cmp
jb
cmp
iret
ja
cmps
cs
inc
mov
fild
xchg
(bad)
retf
pop
push
mov
sbb
mov
scas
out
test
addr16
cmp
mov
add
xchg
shr
pop
cld
cmps
ds
arpl
jbe
into
retf
out
sbb
add
jp
daa
sar
ret
pop
repnz
push
icebp
add
push
in
fidivr
xchg
out
dec
sbb
outs
ins
cmp
add
pop
mov
ret
dec
in
out
dec
xchg
bound
jbe
inc
out
dec
pop
out
addr16
fistp
pop
jecxz
ror
ret
(bad)
xor
and
ds
mov
adc
aaa
scas
or
scas
daa
sar
inc
shl
push
cs
jp
das
mov
inc
sub
mov
(bad)
xor
sub
pop
cmp
mov
ds
aaa
xchg
arpl
lods
ja
inc
mov
es
push
mov
das
(bad)
push
mov
xchg
retf
ss
cld
mov
xchg
ins
and
mov
add
jno
arpl
(bad)
sub
arpl
cli
int3
das
jp
and
jg
retf
fdivr
mov
not
and
sbb
pusha
test
mov
jp
hlt
jae
pushf
sub
mov
push
sahf
sub
pop
fild
mov
mov
ret
pop
cmps
and
shl
dec
push
mov
pop
icebp
jae
stos
sbb
test
shl
mov
clc
sbb
aad
pop
pop
inc
mov
xchg
repnz
ja
fsub
adc
(bad)
aad
cmp
xchg
adc
mov
xor
inc
jle
and
jp
cmc
fist
mov
jmp
ja
arpl
es
sub
mov
xchg
inc
or
inc
out
dec
fiadd
mov
gs
xchg
xor
mov
movs
(bad)
daa
sahf
cld
add
mov
pushf
fidivr
pop
retf
dec
push
mov
pop
repnz
stos
sub
cmp
mov
loopne
in
out
xchg
cs
mov
pop
inc
fidiv
jne
cs
rcr
push
cs
jp
retf
(bad)
sbb
sub
push
mov
jmp
(bad)
mov
pop
test
jecxz
ret
scas
arpl
sub
push
add
xchg
pop
push
(bad)
pop
ret
mov
xlat
scas
push
xchg
fidivr
add
cli
arpl
jle
cmps
jmp
and
ss
int
daa
cmps
cmp
mov
cmp
add
cmps
daa
rol
push
mov
(bad)
mov
daa
cmps
push
lds
xor
xchg
ja
into
bnd
stos
xchg
aas
dec
dec
sub
call
arpl
mov
push
rol
(bad)
xor
(bad)
out
pop
mov
push
jmp
jae
cs
mov
xchg
stos
mov
js
int3
pop
scas
push
mov
cmc
sub
pop
pop
inc
mov
xchg
adc
out
or
cmps
stos
addr16
cmp
ja
xchg
push
jp
or
aas
daa
cmps
push
cli
push
or
jmp
jmp
jmp
sub
ret
dec
push
push
scas
out
ds
mov
xchg
ja
xor
push
fwait
or
xchg
mov
sub
test
sub
push
mov
jne
pop
jecxz
idiv
dec
dec
ja
ret
xchg
sahf
jp
cmc
stos
adc
fidivr
das
or
cmp
add
cmps
push
pop
inc
pop
movs
push
xchg
xlat
aaa
mov
aaa
sbb
jg
sahf
cs
(bad)
push
mov
ret
push
xor
add
imul
mov
sti
xor
dec
or
or
ror
mov
movs
and
in
add
dec
mov
aad
ja
retf
push
cmp
cmp
sbb
pop
idiv
push
push
fsubr
push
pop
out
sub
pop
pop
inc
fisubr
dec
ins
fistp
mov
xchg
jg
jmp
ror
pop
mov
jnp
fisubr
jmp
outs
daa
mov
loop
pop
dec
mov
dec
(bad)
sbb
movhps
pop
gs
ja
test
jp
(bad)
xchg
aaa
ret
cli
push
push
scas
push
pop
inc
xchg
shr
mov
ret
(bad)
iret
ins
xchg
jl
stos
mov
ret
movs
jp
icebp
adc
pusha
mov
cs
lods
(bad)
mov
xchg
or
scas
adc
xchg
xor
push
cs
jp
das
aaa
xchg
arpl
dec
inc
inc
jmp
stos
and
repz
stos
test
jnp
inc
stos
aad
mov
push
retf
mov
mov
mov
push
xchg
popa
idiv
push
jb
inc
outs
fidivr
call
scas
jmp
mov
pop
mov
and
adc
sub
ror
retf
out
xchg
push
cmps
into
jle
in
mov
mov
test
sub
cmp
adc
sti
and
mov
test
retf
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
xchg
mov
cmp
je
test
dec
pop
ss
ror
in
call
ins
out
cmps
cs
inc
pushf
fwait
and
into
sbb
repz
shr
and
int
dec
sbb
scas
std
or
mov
xlat
mov
jmp
std
cli
xchg
cs
(bad)
adc
das
jo
inc
inc
ret
and
add
dec
push
sbb
sub
mov
mov
cmp
mov
mov
mov
call
and
fst
jae
mov
xor
int
fisubr
call
cmp
or
pop
xor
sbb
add
mov
xchg
icebp
mov
cdq
hlt
xchg
fsubr
push
cmp
and
ja
gs
pop
outs
push
fsubr
aam
mov
cdq
hlt
mov
shr
in
jno
mov
repz
jp
pusha
dec
fisub
jb
inc
sbb
adc
lods
cwde
icebp
jecxz
std
mov
call
and
fist
shl
ret
dec
xor
jmp
mov
retf
mov
mov
stos
pop
stos
shl
ret
dec
xor
jmp
shr
push
loop
retf
mov
pop
sbb
cwde
jecxz
fwait
push
ret
dec
inc
pop
and
jp
call
inc
retf
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
stos
mov
mov
jmp
adc
add
jno
arpl
or
inc
and
jmp
sar
and
adc
or
add
push
loop
retf
mov
pop
retf
xor
jecxz
sub
push
dec
xor
cld
sub
xor
dec
cli
xchg
jmp
jecxz
sar
and
jae
arpl
push
cmp
mov
adc
cli
jl
repnz
loopne
(bad)
mov
sub
ja
shl
pushf
or
inc
xor
xchg
inc
mov
int3
pop
and
jle
or
repnz
lods
sbb
mov
mov
mov
cwde
loope
sar
xor
imul
sub
inc
into
mov
movs
loop
lock
rol
dec
xor
outs
adc
adc
jae
inc
retf
xchg
jmp
sbb
sar
and
jns
ret
inc
rcl
mov
out
xchg
cld
test
rol
dec
xor
outs
adc
repnz
lods
cmp
xchg
fisub
shl
call
xor
add
xchg
sbb
push
cmp
xchg
repnz
mov
gs
rcl
mov
and
jl
add
push
fisub
mov
mov
ret
rcl
mov
and
jp
shl
pushf
sub
inc
retf
mov
mov
call
xor
rcl
jp
or
inc
ror
cmp
xchg
cld
test
mov
pop
and
jae
pushf
sub
inc
into
mov
movs
retf
xor
loope
xlat
mov
sub
ja
add
inc
sub
stos
ret
mov
nop
xchg
in
test
mov
lahf
in
and
sub
xor
bound
push
ds
int3
mov
xchg
jmp
xchg
stos
rol
dec
xor
push
test
shl
pushf
or
inc
xor
xchg
inc
mov
adc
ret
push
jp
or
arpl
push
ret
xchg
repnz
shl
call
int3
pop
and
jne
imul
cmp
repz
clc
or
mov
fsubr
test
push
jae
and
xor
xchg
mov
mov
call
adc
repz
jp
or
addr16
dec
retf
mov
pusha
icebp
xchg
jecxz
repz
dec
int3
pop
and
jle
or
adc
mov
fisub
mov
xchg
stos
rol
shl
pop
fsubr
jp
push
jbe
inc
rcl
mov
out
xchg
stc
mov
stos
sar
fcom
jbe
data16
dec
(bad)
mov
call
hlt
mov
mov
cmp
xor
bound
jae
inc
retf
xchg
jmp
sbb
push
mov
and
pop
ror
jae
inc
rcl
mov
adc
or
xchg
stos
rol
dec
xor
push
test
shl
pushf
sub
push
retf
mov
mov
loop
repz
dec
int3
jp
push
test
or
xchg
sub
arpl
mov
pop
jmp
ret
rcl
mov
xchg
push
test
shl
pushf
or
inc
xor
ins
fcmovbe
mov
gs
push
mov
xchg
push
test
sub
cmp
xchg
fisub
mov
gs
sar
and
or
repnz
lods
sbb
mov
mov
mov
fwait
loop
sar
xor
jne
add
pop
xor
xor
in
xchg
shl
jecxz
sub
ret
pop
es
adc
repnz
lods
cmp
mov
mov
cmp
jmp
dec
xor
add
jb
bound
push
cmp
mov
mov
stos
xchg
call
aaa
pop
and
sub
cmp
mov
pop
jmp
in
fidiv
sub
adc
or
popa
xor
pop
(bad)
mov
mov
scas
icebp
mov
call
dec
and
ds
cmp
retf
mov
xchg
jmp
out
aad
rol
das
addr16
or
inc
sub
mov
stos
out
mov
fbld
inc
cmova
push
xor
inc
sub
dec
or
lahf
xlat
movs
int
mov
nop
std
mov
jns
pusha
daa
pop
pop
ror
jae
arpl
jae
inc
retf
mov
stos
xchg
call
int3
pop
and
jp
cmc
jae
popa
sub
inc
int
repnz
mov
sahf
loope
aam
push
dec
xor
pop
or
popa
and
push
retf
mov
stos
xchg
call
aaa
pop
and
add
ins
and
push
ficom
cli
or
mov
dec
cmp
fs
adc
pusha
push
push
jmp
ror
repz
dec
int3
jp
push
test
cmc
mov
xchg
sub
mov
adc
shl
jecxz
sub
jecxz
xor
push
test
cmc
push
repnz
lods
cmp
xchg
repnz
shl
call
xor
add
mov
xchg
sub
mov
adc
or
loop
sar
and
enter
sbb
push
cmp
mov
or
inc
jecxz
xor
xchg
xor
xchg
sub
inc
xor
xchg
fcmovbe
mov
gs
repz
dec
int3
movs
fmul
jp
cmc
push
repnz
lods
lds
mov
xchg
jmp
sbb
push
mov
and
mov
or
inc
retf
xchg
repnz
mov
gs
rcl
mov
and
jp
or
inc
rcl
mov
adc
or
ret
rcl
mov
and
mov
inc
rcl
mov
out
xchg
repnz
mov
daa
ret
and
jae
pushf
or
inc
xor
ins
fcmovbe
mov
gs
sar
fsubr
js
shl
pushf
sub
jae
dec
fisub
ret
ret
rcl
mov
and
jp
push
fisub
in
xchg
stos
xchg
call
xchg
xchg
and
jno
and
sbb
mov
mov
mov
popf
loope
fnstcw
and
pop
ror
jae
inc
rcl
mov
out
xchg
sti
test
rcr
and
mov
or
inc
xor
ins
fcmovbe
mov
gs
sar
and
jp
shl
pushf
sub
push
retf
mov
(bad)
cmc
lahf
loopne
repz
dec
int3
pop
and
pop
ror
jae
arpl
push
cmp
mov
pop
retf
xor
jecxz
sub
push
dec
xor
cld
sub
xor
dec
cli
xchg
jmp
sbb
sar
sub
pop
ror
jae
arpl
push
cmp
mov
stos
jecxz
icebp
pop
rol
shl
pop
fsubr
mov
or
dec
retf
xchg
jmp
loope
aad
lds
push
das
addr16
or
push
cmp
xchg
repnz
mov
sahf
out
aam
retf
pop
and
mov
bound
push
cmp
mov
stos
loopne
test
shr
push
pop
ror
jae
arpl
push
cmp
mov
stos
in
cdq
icebp
pop
shr
push
test
shl
pushf
sub
inc
enter
loop
lock
ret
pop
es
add
adc
sub
cmp
mov
movs
in
xchg
xrelease
ret
stos
rcr
jp
push
test
sub
cmp
mov
mov
mov
repnz
xor
ins
adc
or
js
pusha
daa
mov
fisub
mov
xchg
stos
rol
shl
pop
fsubr
js
push
jbe
or
inc
xor
xchg
inc
rcl
mov
and
jp
shl
pushf
sub
inc
retf
adc
cli
jl
repnz
loop
push
mov
and
jp
shl
pushf
sub
push
retf
pop
retf
xor
jecxz
sub
push
dec
xor
cld
sub
xor
dec
cli
xchg
jmp
jecxz
sub
ret
jp
push
test
sub
xor
dec
cli
xchg
jmp
jecxz
rcr
fsubr
jnp
cmc
push
repnz
lods
cmp
xchg
fisub
shl
call
xor
add
jne
inc
rcl
mov
jmp
jecxz
push
mov
xchg
push
test
sub
xor
dec
cli
xchg
jmp
jecxz
rcr
and
jp
cmc
push
repnz
lods
cmp
mov
pop
jmp
ret
rcl
mov
and
pop
ror
jae
inc
rcl
mov
out
xchg
cld
add
xor
imul
sbb
push
cmp
ins
cli
sub
call
adc
pcmpeqw
xor
xchg
cli
jl
xchg
call
int3
pop
and
jle
or
repnz
lods
cmp
mov
mov
mov
xchg
loop
push
mov
and
pop
ror
jae
arpl
push
cmp
mov
adc
cli
jl
repnz
loopne
repz
dec
int3
pop
and
jnp
shl
pushf
sub
inc
retf
mov
movs
retf
xor
jecxz
sub
push
dec
xor
cld
sub
xor
dec
and
jl
repnz
(bad)
mov
add
adc
sub
xor
dec
fiadd
stos
xchg
call
xor
cld
or
pusha
sub
inc
retf
mov
test
lahf
sti
mov
mov
ret
mov
movs
fsubr
pop
ror
jae
inc
rcl
mov
adc
or
xchg
stos
rol
shl
pop
fmul
jp
cmc
mov
inc
rcl
mov
call
icebp
cwde
ret
rcl
mov
and
mov
xchg
sub
arpl
mov
pop
retf
xor
jecxz
sub
jecxz
xor
push
jnp
or
arpl
lods
sbb
mov
adc
cli
jl
xchg
call
int3
jp
push
test
shl
pushf
or
inc
xor
xchg
add
sbb
push
mov
and
pop
ror
jae
inc
rcl
mov
adc
or
ret
rcl
mov
xchg
push
test
shl
pushf
sub
inc
into
xchg
repnz
mov
gs
rcl
mov
and
mov
or
inc
jmp
or
call
adc
sub
xor
dec
cli
xchg
jmp
sbb
push
mov
and
jp
shl
pushf
aad
sbb
mov
adc
cli
jl
repnz
loopne
repz
dec
int3
jp
push
test
shl
pushf
sub
inc
into
xchg
repnz
mov
sahf
out
sar
cs
sar
cmc
jae
arpl
jae
inc
retf
xchg
jmp
loope
push
mov
and
pop
ror
jae
inc
rcl
mov
adc
or
loop
push
mov
and
jp
shl
pushf
or
inc
xor
ins
fcmovbe
mov
gs
rcl
mov
and
pop
ror
jae
inc
rcl
mov
adc
or
xchg
stos
rol
dec
xor
outs
adc
pop
outs
daa
push
sbb
mov
mov
jne
repnz
sub
push
dec
xor
add
jae
arpl
pop
ficomp
(bad)
ja
cmp
xor
and
dec
adc
frstor
movs
push
test
data16
sbb
lods
mov
mov
and
repz
mov
xchg
outs
mov
lods
jae
sti
push
fprem
sub
out
outs
std
in
adc
jecxz
push
es
pop
icebp
(bad)
cdq
mov
xchg
add
pop
aas
push
iret
xchg
dec
dec
pop
sub
aaa
xor
test
mov
in
mov
mov
and
jbe
dec
push
outs
pop
inc
and
das
mov
push
in
mov
mov
pop
sub
pop
push
outs
dec
outs
sub
test
out
neg
repz
dec
(bad)
mov
cmp
sbb
sbb
or
adc
xchg
(bad)
lahf
mul
repz
xchg
fisub
pop
inc
adc
jg
pop
push
loop
jge
retf
in
aam
cmp
int
xor
inc
ds
jo
and
hlt
dec
and
mov
ret
mov
stos
mov
cmp
ja
pop
dec
and
cdq
rcr
in
jmp
and
popa
add
sbb
loop
xchg
dec
sub
mov
mov
cmc
xchg
lds
push
push
jns
ins
inc
jg
push
inc
push
imul
cmp
fwait
int3
out
repz
mov
rcl
xchg
es
inc
push
cmp
sbb
adc
repz
cdq
sar
xchg
fnstenv
add
jo
addr16
and
dec
stos
(bad)
mov
mov
mov
mov
mov
add
ja
ss
sub
mov
movs
xchg
jmp
arpl
or
jae
add
jp
stos
repz
xchg
mov
movs
(bad)
mov
fisub
ds
push
or
inc
sub
ins
and
loopne
jmp
mov
mov
ds
push
or
sbb
outs
pop
pop
and
mov
cdq
(bad)
into
out
icebp
stc
xchg
call
mov
inc
sbb
add
pop
and
aaa
mov
call
cmp
jmp
jne
push
cmp
dec
inc
add
push
daa
cmps
hlt
call
lahf
fiadd
and
inc
push
push
cmp
adc
inc
aaa
push
add
hlt
mov
rcl
(bad)
aad
movs
xchg
jmp
push
sbb
ja
inc
imul
xchg
sub
mov
std
sbb
fyl2x
or
cs
push
and
and
fidivr
out
xchg
mov
jno
inc
sbb
sbb
xor
cmp
pop
add
shr
xchg
jmp
inc
or
inc
pop
adc
arpl
cmc
shr
out
nop
ficom
or
cs
cmp
inc
outs
dec
ss
sub
leave
mov
out
clc
stc
mov
adc
push
inc
ja
ss
aaa
mov
call
xchg
call
mov
jae
arpl
push
and
adc
jp
mov
aad
mov
dec
fdiv
cmp
pop
inc
daa
jle
push
add
loopne
loopne
mov
sahf
mov
cmp
or
push
jnp
inc
adc
retf
pushf
cwde
loopne
icebp
(bad)
mov
mov
ds
dec
sbb
pop
jns
jge
pop
adc
fwait
hlt
in
mov
movs
les
xchg
aam
jne
sbb
popa
cmp
xor
inc
xor
cmps
neg
ret
fsubr
or
dec
or
inc
pop
xor
push
inc
sub
jmp
jmp
cmp
xor
and
imul
adc
inc
or
inc
sbb
call
xchg
(bad)
mov
ss
addr16
dec
in
sbb
dec
xor
xchg
mov
repnz
xlat
(bad)
into
cmps
ret
imul
fnstsw
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
out
pushf
and
mov
push
push
hlt
mov
mov
inc
imul
fs
cld
push
adc
dec
add
fdiv
je
ins
loope
mov
push
(bad)
(bad)
jmp
lods
mov
xchg
cdq
int3
add
push
jmp
lods
nop
adc
fmul
xor
mov
ffree
sbb
loopne
js
adc
pop
int
mov
std
mov
aad
pop
inc
in
mov
pop
call
cdq
and
push
stc
lods
and
int3
loope
or
xchg
mov
pushf
xchg
xor
mov
inc
dec
cld
mov
jns
add
dec
popa
add
mov
shl
sbb
mov
inc
fcomp
cmp
fucomi
jnp
fstp
and
fadd
sbb
hlt
sub
xchg
leave
pushf
add
int3
icebp
mov
cld
mov
aam
pop
inc
in
mov
je
cmp
inc
stc
lods
xchg
adc
aad
stc
nop
neg
push
cs
scas
lahf
out
pop
pop
imul
aas
(bad)
(bad)
cli
scas
adc
dec
pop
add
push
mov
xlat
or
out
rdmsr
ja
mov
xchg
xchg
retf
daa
pop
dec
repnz
jg
pop
mov
fist
popf
ins
pop
in
cmps
mov
jle
push
jnp
and
into
arpl
or
ret
sub
xchg
mov
push
and
(bad)
mov
sti
scas
add
imul
neg
jecxz
mov
jae
cmp
out
sahf
cmps
test
sbb
sub
cmc
mov
mov
rol
mov
clc
sub
push
adc
test
lock
ins
loopne
mov
inc
(bad)
xor
dec
jmp
cdq
call
jmp
xchg
sbb
push
dec
(bad)
repz
cmp
and
mov
push
jnp
ret
out
pop
adc
retf
jle
push
mov
sahf
shl
pop
push
and
pop
xor
test
loop
xchg
mov
pop
push
mul
mov
ret
pop
repnz
das
bound
jg
xlat
call
idiv
and
fimul
pop
stos
fbstp
cmp
rcl
jb
xchg
or
or
mov
lock
cmp
nop
aad
pop
add
test
loopne
clc
in
push
adc
sbb
cmc
call
sub
and
jge
lds
cmps
push
inc
push
cmps
mov
add
jg
cmps
call
inc
jp
push
ja
mov
jb
retf
pop
mov
jmp
sbb
inc
(bad)
cli
scas
shl
stos
aas
and
fwait
movs
(bad)
ins
sysenter
inc
shl
(bad)
not
cwde
movs
pop
inc
(bad)
stc
lods
shl
test
int3
icebp
push
dec
sbb
test
ins
xchg
xor
jl
movs
cdq
or
adc
fadd
inc
jns
push
je
mov
jno
leave
pushf
add
in
adc
les
shl
adc
pop
push
xor
jnp
xchg
mov
jle
sbb
(bad)
mov
inc
push
mov
arpl
mov
(bad)
sti
outs
adc
stos
(bad)
and
or
pushf
lahf
sbb
das
push
cmc
mov
push
jne
(bad)
mov
adc
fwait
into
jecxz
dec
jle
xchg
mov
push
push
neg
mov
inc
or
ret
imul
mov
dec
arpl
cmp
shl
push
mov
jecxz
enter
sub
ins
ja
sbb
cmp
jae
ror
sbb
push
outs
aaa
sbb
xor
adc
and
xchg
movs
mov
daa
add
ins
or
and
jnp
pop
hlt
sbb
xchg
pushf
mov
lea
adc
sub
in
dec
sub
shl
xor
cs
dec
inc
ss
aas
jb
push
and
lods
retf
sub
stc
movs
and
(bad)
pop
or
dec
sub
dec
and
shl
in
jmp
test
or
dec
inc
aad
bound
add
mov
in
jb
dec
in
mul
jg
dec
pushf
sbb
xor
bound
pop
dec
cmp
popa
call
jmp
lods
fs
adc
cmp
push
cmp
ret
scas
into
jecxz
lods
out
sbb
mov
lods
fs
xor
adc
popa
or
pop
aas
mov
lock
push
int
dec
lods
aad
enter
imul
xchg
(bad)
xor
jmp
jne
jmp
enter
test
inc
mov
push
js
inc
sbb
dec
cmp
jmp
fmul
and
imul
add
pop
sub
std
cwde
loop
mov
adc
frstor
pusha
jp
ins
adc
adc
dec
inc
stos
fidivr
cli
loopne
idiv
sub
pop
sbb
sbb
inc
push
pop
cmp
int3
cmps
(bad)
popf
repz
repz
repz
push
cmp
js
push
dec
xor
stos
into
mov
mov
mov
mov
pop
or
je
ins
jo
outs
push
inc
add
and
xchg
cmp
cwde
cld
test
pop
cmp
add
or
push
sbb
inc
aaa
cmp
nop
fdivr
out
repz
mov
mov
lods
adc
dec
add
push
push
and
mov
cli
add
test
cmp
pop
adc
ja
sbb
inc
xor
xor
clc
cdq
jmp
and
leave
cmps
aad
das
inc
pop
dec
adc
outs
push
push
sub
pop
and
xchg
scas
xchg
mul
(bad)
push
push
adc
sub
cmp
sub
pop
scas
(bad)
mov
fisub
fild
push
push
outs
arpl
cmp
inc
push
pop
das
retf
cld
mov
mov
ret
mov
pop
xor
addr16
jbe
xor
inc
je
arpl
(bad)
clc
nop
mov
lods
push
pusha
push
dec
sbb
add
dec
pop
push
push
sub
jecxz
into
fistp
call
dec
and
outs
js
push
add
pop
and
ret
scas
into
in
out
xchg
mov
sub
js
ins
jns
je
popa
jbe
sub
repnz
out
scas
xchg
fcom
das
dec
jg
dec
pop
push
popa
arpl
jno
sub
mov
xchg
out
xchg
not
das
push
bound
or
push
jns
dec
imul
shl
call
and
outs
dec
dec
or
push
push
and
xchg
mov
in
(bad)
popf
cmc
sbb
into
stos
sub
push
sbb
ins
jp
outs
push
dec
jae
ss
(bad)
mov
mov
cli
mov
mov
xchg
stos
cmp
cmp
and
pop
adc
ss
xor
fnstsw
in
nop
clc
lea
pop
xor
xor
popa
arpl
inc
or
cli
(bad)
cwde
mov
loope
(bad)
(bad)
mov
aaa
dec
jbe
ret
sub
jle
xor
(bad)
cwde
add
clc
mov
and
inc
sbb
aaa
and
pop
add
fmul
icebp
fstp
ret
push
xor
sbb
imul
sub
out
and
out
nop
out
std
(bad)
cmps
das
or
(bad)
aas
push
push
push
adc
not
xchg
sar
adc
pop
data16
cmp
xor
mov
neg
test
repz
or
or
push
jle
sub
dec
and
adc
(bad)
retf
cmps
ret
pop
cs
inc
adc
push
imul
mov
std
(bad)
mov
(bad)
mov
push
sub
cmp
je
inc
xor
es
cli
sahf
mov
into
mov
movs
jnp
jp
pop
xor
das
pop
dec
aaa
push
and
das
xchg
mov
sub
cmps
mov
out
in
or
and
inc
xor
inc
jae
ss
add
jecxz
rol
xchg
mov
jecxz
test
sbb
pop
add
jne
pop
and
stos
(bad)
mov
(bad)
xchg
xchg
idiv
mov
fld
and
push
jae
push
push
cmps
(bad)
mov
mov
repz
and
push
inc
punpcklwd
xor
pop
xor
mov
jmp
cli
out
xchg
jmp
movs
sub
xor
jbe
cmp
jne
dec
sub
int3
test
fcom
ficomp
aas
pusha
adc
push
outs
mov
jmp
cmps
jmp
jle
push
add
adc
imul
cmp
mov
ret
cmp
sub
punpcklwd
ins
sub
push
daa
movs
in
retf
mov
xchg
inc
jp
push
adc
ins
sub
arpl
sbb
jmp
aam
mov
leave
jecxz
inc
aaa
inc
sbb
imul
push
sub
cli
rol
xchg
call
inc
aas
push
movd
ins
push
xor
movs
loopne
sbb
call
inc
sub
jl
jbe
push
outs
arpl
sbb
jmp
imul
pushf
fiadd
push
cmp
jo
xor
dec
aaa
push
add
(bad)
mov
jmp
inc
cmp
jae
adc
push
xor
loopne
in
stc
cmp
adc
inc
adc
inc
pop
and
aaa
retf
mov
loop
call
lods
das
inc
aas
outs
add
jae
adc
cmp
mov
xchg
mov
stc
pushf
call
cmp
imul
xor
imul
(bad)
mov
stos
shl
std
mov
or
xor
jle
inc
and
cmps
(bad)
cdq
retf
test
mov
or
dec
jge
dec
pop
jbe
add
jg
imul
jle
cld
xchg
sbb
leave
xchg
pop
cmp
adc
popa
inc
sbb
jne
inc
sub
call
xchg
mov
pop
push
or
push
imul
cvtpi2ps
or
std
stos
fdiv
lods
call
adc
dec
pop
jno
sbb
inc
pusha
xor
popf
mov
out
sti
mov
stos
cmps
xchg
mov
push
aas
cmp
imul
inc
daa
dec
ins
mov
xchg
xchg
in
xchg
bnd
mov
xor
punpcklwd
outs
or
dec
jge
xor
mov
lea
mov
ret
dec
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
test
call
xor
loopne
test
push
add
inc
mov
mov
sahf
jno
xlat
mov
daa
jae
jle
or
arpl
dec
cmp
mov
mov
mov
call
aaa
inc
and
jp
adc
fmulp
and
push
push
arpl
out
inc
jle
dec
xchg
scas
xchg
or
xor
push
cmp
movs
int3
mov
xchg
sbb
mov
cmp
arpl
xor
jns
bound
pop
repz
mov
mov
cld
and
jbe
cmp
aas
cmp
arpl
addr16
repz
fisub
mov
xchg
mov
out
call
dec
sub
sub
push
adc
(bad)
mov
mov
cmps
ret
mov
jg
xor
es
or
sbb
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
and
enter
mov
xchg
xchg
xor
push
jp
push
mov
inc
retf
out
ins
ins
mov
stos
imul
(bad)
int3
sbb
inc
sub
sbb
sub
inc
fsubr
das
jmp
sbb
in
cmp
cmc
jl
xchg
in
out
call
in
sbb
mov
add
xor
inc
push
pop
xchg
in
int3
xor
fdiv
dec
xor
mov
call
mov
scas
jne
mov
jnp
xchg
cmp
adc
js
inc
inc
cld
movs
lahf
es
mov
adc
xor
ins
int
enter
pop
cmc
and
dec
int3
and
movs
push
(bad)
xchg
sub
not
aad
data16
xchg
mov
loopne
push
aas
dec
scas
lods
lds
mov
pop
xor
call
int3
mov
add
jae
arpl
push
cmp
mov
mov
dec
jae
arpl
inc
cmp
cmp
add
push
pop
arpl
inc
lds
or
or
mov
and
in
push
ins
jp
sbb
lods
dec
inc
retf
int
xchg
(bad)
jp
leave
call
xor
fadd
jae
dec
xor
inc
int3
repnz
ret
mov
stos
rcr
and
ja
outs
js
sbb
inc
jae
inc
in
pushf
sbb
call
push
xor
push
jo
jo
jae
pushf
inc
push
cmp
mov
and
cli
fidiv
test
sahf
sar
sub
adc
push
outs
push
cmp
fcom
call
xor
sahf
push
pop
add
jmp
push
sub
mov
out
call
jecxz
sub
ret
dec
fwait
movs
jg
ja
add
mov
or
cmp
xor
rcr
pushf
sub
in
xor
sbb
adc
cmp
(bad)
scas
stos
mov
shl
inc
mov
das
xor
xchg
jp
bound
xor
jae
sub
jmp
shl
shl
dec
push
jp
push
push
or
xor
push
cmp
mov
adc
mov
into
xchg
mov
ret
jne
adc
push
loop
jle
push
sub
mov
adc
popa
cmps
fdivr
pop
and
test
or
or
cmp
dec
lods
mov
mov
(bad)
ds
jp
inc
push
adc
dec
cmp
and
in
(bad)
lahf
cdq
sahf
loop
fwait
repnz
rcr
and
lahf
out
xchg
inc
aas
inc
das
push
aaa
gs
jl
outs
adc
mov
lods
aad
in
cmc
cmc
(bad)
in
xchg
ret
mov
dec
sub
add
je
arpl
and
aas
mov
in
cmc
cmc
(bad)
in
xchg
(bad)
stos
ret
dec
and
imul
jb
outs
sbb
inc
aas
mov
lods
fistp
mov
call
and
push
pusha
sbb
dec
xor
in
test
cmc
mov
pushf
aad
sbb
mov
ins
cmp
push
pop
and
js
push
leave
sahf
jmp
shr
push
pop
sbb
pcmpeqd
outs
push
pop
es
xor
pushf
in
cmc
cld
test
xchg
fsub
cs
sbb
or
jl
ins
adc
mov
in
cld
test
mov
push
push
sbb
or
jne
data16
and
mov
cli
cmc
mov
pushf
shl
and
gs
jne
gs
mov
in
cmc
repz
fsub
and
gs
jl
fs
mov
in
hlt
test
cmp
fs
sbb
and
xor
in
mov
cld
cmc
(bad)
in
aad
int
cmp
fs
jbe
ins
sbb
dec
xor
in
mov
cli
std
test
xchg
shl
push
sbb
or
pop
pop
and
xor
shr
cmc
cmc
mov
pushf
frstor
pop
adc
jl
or
inc
cmp
jmp
cld
hlt
mov
pushf
aam
ret
push
and
imul
jge
bound
mov
mov
cld
stc
mov
popf
aad
ret
push
and
imul
jl
bound
mov
mov
cld
hlt
mov
pushf
aam
ret
mov
adc
jl
or
sub
mov
mov
cmc
cmc
mov
pushf
shr
and
push
jp
or
sbb
inc
cmp
jmp
shr
sub
adc
jp
or
push
sub
mov
mov
xchg
call
loope
shr
xor
ins
add
je
fs
mov
sti
xchg
jmp
fwait
repnz
mov
fisub
mov
call
xor
push
jp
or
arpl
push
cmp
(bad)
in
aam
les
int3
movs
fcom
jb
bound
push
cmp
xor
dec
adc
(bad)
mul
aas
idiv
ja
ins
repz
jp
pop
adc
xor
cmp
stos
enter
test
or
adc
mov
fisub
out
xchg
push
adc
push
push
sub
pushf
aam
arpl
xchg
call
mov
mov
adc
dec
and
add
pop
movs
xor
ins
add
jecxz
sub
std
je
fs
xor
and
aad
add
hlt
(bad)
in
aam
les
pop
xchg
test
jne
gs
sub
cmp
dec
and
add
sar
mov
or
bound
push
cmp
xor
push
icebp
cwde
loope
sar
mov
or
bound
push
cmp
xor
push
repnz
xor
add
mov
call
jae
icebp
mov
xor
imul
add
and
mov
repz
jbe
cld
hlt
mov
push
sub
jae
xor
inc
scas
aad
popa
xor
repz
je
les
fucom
lds
push
sub
jo
xor
dec
lods
fstp
outs
dec
mov
cmc
mov
ins
xchg
repz
or
jmp
push
sbb
mov
cmc
mov
jmp
gs
or
(bad)
and
and
in
out
xchg
push
arpl
sti
pop
daa
dec
aaa
jle
outs
pop
sahf
loope
pop
mov
cmps
into
mov
xchg
xchg
push
popa
movs
fdivr
jge
cld
pop
daa
dec
aaa
jle
outs
push
lahf
loope
pop
xor
add
mov
test
xchg
sbb
in
test
pop
and
xor
or
xchg
jmp
pop
adc
test
mov
adc
push
sbb
pop
push
sub
jno
popa
sbb
enter
test
mov
push
outs
push
jg
dec
es
push
das
inc
aas
jbe
addr16
xchg
out
xchg
mov
cmps
(bad)
scas
(bad)
mov
adc
dec
and
cmp
xor
sbb
in
test
mov
movs
(bad)
lods
lds
push
cmp
jae
arpl
jp
shr
mov
loop
xchg
repnz
dec
xor
push
jp
or
arpl
push
sbb
mov
dec
mov
(bad)
mov
xchg
in
test
je
fs
test
jge
(bad)
in
xlat
lods
les
xchg
out
test
out
mov
push
sub
and
adc
add
hlt
(bad)
in
aam
les
xchg
in
test
jne
gs
sub
cmp
dec
and
jl
push
mov
mov
or
arpl
push
cmp
clc
and
push
jp
mov
call
mov
mov
or
bound
push
cmp
xor
imul
add
sar
mov
or
popa
sub
inc
dec
xor
push
repnz
loope
sar
mov
or
popa
sub
inc
dec
xor
push
icebp
cwde
loope
sar
mov
or
popa
sub
inc
dec
xor
imul
cwde
loope
sar
mov
or
pushf
aad
lds
imul
cwde
loopne
sar
xor
push
pusha
sub
inc
dec
xor
outs
push
jg
(bad)
ss
ja
inc
cs
pop
or
pcmpeqd
imul
xor
sti
ret
mov
adc
out
(bad)
stos
jecxz
repz
mov
mov
bound
jae
cmp
jmp
(bad)
add
cmc
mov
and
dec
inc
cmp
arpl
jae
cmp
inc
daa
(bad)
dec
jecxz
repz
jp
push
pop
xor
(bad)
inc
sbb
popa
mov
mov
repnz
mov
xor
repnz
jae
cmp
jmp
sar
jle
repz
pop
xor
cmp
sbb
xor
cld
add
in
cmc
lea
pop
xor
inc
cld
jmp
inc
sub
movs
fdiv
lods
in
cmc
lea
lods
aad
in
hlt
cld
test
cs
or
cld
xchg
in
movs
fdiv
adc
mov
pop
xor
inc
cmp
je
test
and
pop
fs
jge
gs
in
cmc
mov
inc
sub
jecxz
pushf
(bad)
int
mov
mov
mov
out
xchg
push
mov
sub
cmc
lea
adc
(bad)
scas
xlat
fisub
sbb
mov
sahf
ja
inc
cs
pop
daa
dec
aaa
jle
outs
adc
(bad)
scas
sbb
mov
xchg
nop
push
addr16
ja
inc
cs
pop
loope
pushf
repz
imul
fisub
out
xchg
push
mov
call
aaa
jg
outs
push
lahf
out
idiv
popa
fs
and
cdq
jbe
inc
das
push
pop
es
xor
pushf
and
jge
or
in
xchg
sbb
add
dec
and
loopne
pushf
aad
lds
enter
test
mov
adc
cld
repnz
pusha
sbb
enter
xchg
in
aad
lds
xor
pop
push
sub
jno
pusha
sbb
retf
shr
loope
adc
js
dec
and
sub
jno
popa
sbb
enter
test
mov
push
outs
push
jg
dec
es
push
das
inc
aas
jbe
popw
xchg
out
xchg
mov
cmps
(bad)
scas
(bad)
mov
pop
outs
pop
jle
dec
daa
pop
push
cs
ds
fs
mov
movs
(bad)
lods
(bad)
mov
adc
pop
jge
dec
and
push
sub
fs
mov
movs
fst
jae
mov
adc
dec
and
cmp
or
sbb
add
mov
movs
(bad)
lods
lds
ins
add
pop
push
sahf
icebp
add
pop
and
repz
mov
pushf
ds
movs
xor
xor
stos
sar
loopne
or
pop
add
cmp
jb
bound
jnp
dec
xor
xor
ins
add
sbb
sub
cmp
int3
movs
fcom
mov
pushf
aad
lds
ins
add
sbb
sub
cmp
int3
pop
add
jp
hlt
mov
add
hlt
(bad)
in
aam
les
xchg
in
test
je
mov
out
sub
jge
(bad)
in
aam
les
xchg
in
test
je
fs
out
test
cwde
dec
and
adc
add
hlt
(bad)
in
aam
les
xchg
in
test
je
fs
xor
adc
mov
pushf
aad
lds
in
test
jne
gs
je
mov
adc
mov
pushf
aad
lds
in
test
jne
gs
push
xchg
jno
dec
and
jl
mov
pushf
aad
lds
in
test
jne
gs
sub
pop
and
jp
mov
call
mov
mov
or
arpl
push
push
push
jp
mov
call
mov
mov
or
arpl
push
sbb
dec
xor
imul
add
sar
mov
or
bound
push
aas
inc
dec
xor
imul
add
sar
mov
or
bound
push
cmp
xor
push
icebp
cwde
loope
sar
mov
or
popa
sub
inc
dec
xor
push
icebp
cwde
loope
sar
mov
or
popa
sub
inc
dec
xor
push
icebp
cwde
loope
sar
mov
or
popa
sub
inc
dec
xor
push
mov
jecxz
lods
(bad)
mov
mov
or
popa
sub
inc
dec
xor
push
sar
in
test
clc
or
push
cmp
xor
imul
adc
pop
xor
cmp
jmp
jo
pusha
sub
inc
dec
xor
imul
or
inc
sub
and
sti
xchg
stc
or
sbb
push
cmp
xor
imul
or
inc
sub
and
sbb
sbb
push
cmp
pop
and
adc
add
bound
pop
and
std
test
push
cmp
sub
jae
cmc
pusha
add
dec
and
sub
jo
dec
and
dec
inc
cmp
arpl
jae
mov
inc
xor
and
adc
dec
psllq
and
dec
inc
cmp
arpl
jae
mov
inc
aaa
adc
add
fimul
and
dec
inc
cmp
arpl
jae
(bad)
outs
cmp
clc
mov
add
cmp
and
dec
inc
cmp
arpl
jae
(bad)
outs
cmp
jecxz
retf
jns
dec
xor
add
push
pop
xor
cmp
arpl
jae
(bad)
or
mov
ret
mov
add
or
and
dec
inc
cmp
arpl
jae
(bad)
push
xor
loop
retf
inc
or
or
and
dec
inc
cmp
arpl
jae
(bad)
push
xor
loop
retf
jns
inc
cmp
add
push
pop
xor
cmp
popa
sbb
(bad)
push
xor
retf
ja
pop
cmp
adc
pop
xor
cmp
sub
sbb
or
push
xor
mov
pop
cmp
mov
pop
xor
sub
sbb
or
pop
sub
push
dec
ss
add
pop
cmp
mov
pop
xor
sub
sbb
or
pop
sub
addr16
adc
test
cmp
sub
sbb
or
pop
sub
je
add
adc
mov
mov
pop
xor
sub
sbb
or
pop
sub
je
add
pop
rcr
adc
dec
inc
cmp
sub
sbb
or
pop
and
fs
inc
out
pushf
cmc
mov
pop
xor
sub
sbb
or
pop
and
ja
or
add
popf
cmc
mov
pop
xor
xor
push
sbb
adc
or
sbb
popf
jmp
inc
sub
daa
dec
aaa
jle
outs
pop
xchg
pop
adc
push
gs
sub
ja
inc
cs
pop
daa
dec
aaa
jle
outs
pop
test
pop
adc
or
push
(bad)
out
xchg
push
addr16
ja
inc
cs
pop
daa
dec
aaa
jle
outs
pop
call
xlat
les
xchg
push
addr16
ja
inc
cs
pop
daa
dec
aaa
jle
outs
pop
call
xlat
mov
out
xchg
push
addr16
ja
inc
cs
pop
daa
dec
aaa
jle
outs
pop
call
xlat
xlat
or
push
pop
out
xchg
push
addr16
ja
inc
cs
pop
es
ss
outs
push
call
ficom
pop
out
xchg
pop
pcmpeqd
inc
das
push
pop
es
ss
outs
push
call
inc
jle
gs
scas
out
xchg
pop
pcmpeqd
inc
das
push
pop
es
ss
outs
push
call
jl
or
sbb
mov
xchg
pop
pcmpeqd
inc
das
push
pop
es
ss
outs
push
call
jl
or
sbb
test
xchg
pop
pcmpeqd
inc
das
pop
push
sub
jo
pusha
sbb
ins
add
sbb
test
cdq
adc
jns
dec
and
sub
jno
popa
sbb
add
or
mov
cwde
adc
js
dec
and
sub
jno
popa
sbb
add
cwde
repz
cwde
adc
js
dec
and
sub
jno
popa
sbb
add
add
fidivr
adc
js
dec
and
sub
jno
popa
sbb
shr
icebp
mov
cwde
adc
js
dec
and
sub
jno
popa
sbb
enter
test
mov
adc
js
dec
and
das
inc
aas
jbe
popw
xchg
out
xchg
mov
cmps
(bad)
scas
(bad)
mov
push
outs
push
jg
dec
es
push
das
inc
aas
jbe
popw
xchg
out
xchg
mov
cmps
(bad)
scas
(bad)
mov
push
outs
push
jg
dec
es
push
cs
ds
addr16
xchg
out
xchg
mov
cmps
(bad)
scas
(bad)
mov
pop
outs
pop
jle
dec
daa
pop
push
cs
ds
addr16
xchg
out
xchg
mov
cmps
(bad)
scas
(bad)
mov
pop
outs
pop
jle
dec
and
push
sub
fs
mov
movs
fst
lods
les
adc
add
xor
and
push
sub
fs
mov
movs
fst
lods
les
adc
add
xor
cld
jae
sub
cmp
or
sbb
in
test
mov
movs
(bad)
lods
lds
ins
add
lahf
push
sub
cmp
or
sbb
in
test
mov
movs
(bad)
lods
lds
ins
add
fcom
inc
cmp
or
sbb
in
test
mov
movs
(bad)
lods
lds
ins
add
stc
pusha
sub
add
pop
and
repz
mov
mov
xor
test
int3
adc
dec
xor
stos
sar
jecxz
xchg
cli
or
fisub
add
test
lock
dec
xor
stos
sar
loop
xchg
sti
or
(bad)
mov
xchg
adc
pop
and
repnz
loop
xchg
sti
or
(bad)
xchg
in
test
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
or
arpl
push
cmp
mov
mov
mov
call
xor
push
jp
sub
inc
dec
and
scas
fsub
(bad)
call
xchg
ret
mov
sub
jp
popa
ins
sbb
dec
cmp
xchg
mov
sub
fldenv
cmp
jl
ja
add
inc
cmp
mov
cli
mov
int3
cmps
cmc
lods
add
arpl
pop
jb
push
js
sub
addr16
xor
(bad)
out
(bad)
icebp
int3
mov
fwait
out
mov
add
push
stos
aam
jno
and
cmp
mov
adc
adc
mov
mov
mov
jae
sbb
mov
iret
cmps
sub
hlt
xchg
aam
stos
or
icebp
stos
or
pop
dec
movs
fld
out
ss
dec
cli
ds
and
xor
or
jmp
jmp
icebp
out
fimul
jnp
or
loop
popf
fbstp
pop
mov
sbb
mov
jae
sub
push
test
inc
jp
pop
adc
mov
fisub
aaa
and
retf
push
pop
and
sbb
adc
jbe
and
leave
xchg
or
jp
mov
(bad)
out
cmp
jp
imul
dec
dec
ret
stos
push
sub
pop
inc
xchg
ss
xchg
jmp
push
pop
popf
mov
adc
xor
lar
clc
jecxz
mov
mov
adc
call
popa
pop
rcr
mov
sbb
lock
mov
and
(bad)
aam
(bad)
xchg
stos
rol
push
pop
mov
ret
idiv
xchg
push
pop
mov
loop
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
xchg
jecxz
repz
mov
mov
and
adc
jae
inc
and
and
jb
bound
add
add
add
add
nop
nop
nop
nop
push
mov
sub
push
push
push
scas
adc
jb
call
rcr
retf
and
mov
cmp
push
mov
shl
sar
fisttp
xor
ja
jmp
adc
imul
adc
sbb
xor
in
mov
jle
and
push
jmp
aas
gs
loopne
sub
dec
push
fstp
loopne
cli
es
mov
mov
repz
(bad)
jmp
inc
mov
stos
push
imul
clc
enter
push
mov
adc
(bad)
mov
mov
(bad)
mov
add
adc
and
test
jecxz
xchg
stos
xor
sbb
xchg
loope
mov
call
into
loopne
fstp
mov
mov
sub
xchg
jmp
push
jb
movs
sbb
lock
mov
jb
arpl
xor
jae
mov
adc
jns
call
add
add
ret
call
cmp
jp
and
mov
dec
stc
sti
adc
neg
sbb
xchg
sub
dec
pusha
and
jo
sub
xchg
inc
mov
sar
adc
and
test
scas
retf
pop
add
inc
push
adc
mov
clc
cli
out
retf
rol
ficom
or
xor
mov
dec
cmp
xor
pop
sbb
mov
lea
into
and
mov
leave
ds
pusha
clc
mov
(bad)
popf
out
cmp
dec
not
out
pop
push
stc
dec
dec
loop
enter
dec
lods
dec
js
mov
scas
shr
cmp
xchg
arpl
jg
idiv
cmp
and
or
nop
mov
aaa
cmp
fwait
mov
cld
mov
add
(bad)
mov
adc
sub
sub
out
sbb
jmp
adc
jmp
in
into
stos
into
les
mov
mov
data16
imul
outs
enter
sub
out
pop
add
xor
(bad)
ret
pop
cmps
fstp
xor
mov
es
aam
ficomp
loopne
inc
(bad)
in
scas
mov
call
ss
scas
mov
inc
popf
or
addr16
xor
iret
shl
jecxz
adc
(bad)
fadd
xchg
ss
and
(bad)
push
pop
mov
arpl
push
and
dec
sbb
(bad)
imul
cmp
(bad)
dec
mov
es
jns
xor
es
mov
pop
xor
jecxz
dec
(bad)
pop
ins
jne
scas
arpl
jbe
and
fwait
cmp
sub
mov
aaa
jl
adc
call
xlat
out
into
xchg
(bad)
or
mov
ror
retf
dec
xchg
loope
mov
inc
stc
and
int3
fsubr
pop
and
sahf
jmp
scas
xchg
jmp
push
(bad)
out
clc
int
(bad)
cs
mov
scas
retf
inc
stc
clc
in
dec
std
mov
adc
inc
aam
shl
arpl
jmp
dec
daa
xchg
pop
(bad)
(bad)
in
dec
out
bswap
ret
jl
sbb
inc
fmul
and
call
sbb
mov
jl
inc
fist
xor
mov
jne
ffreep
ds
and
dec
sbb
adc
fsubrp
popa
call
xlat
jecxz
out
sub
mov
call
sub
stc
inc
sbb
hlt
cmps
rcr
lods
inc
(bad)
aad
jle
fcmove
stos
test
daa
xchg
pop
dec
mov
adc
mov
push
loope
fcom
cdq
add
ss
mov
clc
not
pop
inc
stc
jmp
cwde
test
inc
stos
test
arpl
xchg
sar
and
stc
in
aam
jns
or
mov
mov
add
mov
xchg
into
ss
fdecstp
cdq
faddp
pop
pop
arpl
xor
mov
arpl
ss
shl
scas
retf
int
fadd
lods
mov
jp
(bad)
retf
lods
stc
mov
int3
xchg
push
outs
aad
into
cdq
jl
xor
int3
inc
aas
adc
add
ret
pop
fild
cmp
(bad)
push
icebp
pop
test
pop
sub
dec
(bad)
mov
or
pop
jle
sar
jb
scas
inc
fdivr
and
ret
push
cmp
push
stc
and
jb
call
ror
not
cmps
retf
call
ds
mov
and
iret
mov
mov
inc
xchg
ret
arpl
xor
das
mov
(bad)
bound
out
xor
lods
cmps
mov
aad
int3
ficom
mov
jmp
mov
cmp
adc
add
sub
leave
aas
cmp
pusha
xchg
pop
and
jb
out
dec
repz
rcr
out
(bad)
pop
jmp
into
shl
push
push
lahf
jp
sbb
xor
xchg
and
jp
mov
out
icebp
mov
mov
shr
inc
adc
xor
and
dec
xchg
xor
mov
dec
sti
test
add
jbe
add
xor
xlat
jecxz
pop
jmp
cmp
gs
mov
dec
dec
jb
gs
fwait
or
pusha
jp
xchg
retf
jnp
popf
and
dec
iret
fldcw
outs
mov
xor
mov
daa
xchg
je
scas
pushf
sar
mov
ins
mov
pop
cmp
sbb
into
mov
aad
call
dec
(bad)
dec
enter
sbb
dec
es
jo
call
lds
cmp
inc
jbe
pop
cmp
xchg
pusha
jp
xchg
scas
lds
push
xor
lods
test
and
mov
sub
subps
jns
lods
sub
ja
xchg
in
sub
shr
dec
(bad)
dec
xor
or
and
lea
inc
cmps
mov
aaa
outs
dec
clc
ja
pop
aas
jle
pushf
jmp
scas
sub
jae
xor
jmp
inc
stc
sti
sbb
in
pusha
jp
sub
cmp
fidiv
retf
lahf
push
push
and
xor
lods
sbb
call
push
dec
inc
pop
push
stc
rol
inc
ret
dec
push
cmps
repnz
sahf
mov
ins
movs
sar
inc
cmp
sub
cli
mov
add
dec
push
pop
inc
div
ret
xor
dec
jmp
jmp
into
mov
push
xchg
push
mov
cs
lods
or
xor
scas
mov
loopne
mov
ds
nop
nop
nop
nop
nop
nop
shl
xchg
dec
mov
sahf
iret
loope
shr
out
sahf
(bad)
out
mov
sahf
and
push
shl
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
in
hlt
pop
lea
iret
imul
rcl
and
xor
dec
add
jno
(bad)
push
cmp
loope
cmps
popa
cwde
and
dec
fs
popa
or
jo
mov
mov
test
bound
xchg
test
mov
adc
or
adc
icebp
xchg
cmp
in
cdq
mov
jo
fwait
popa
inc
mov
push
add
loopne
add
jmp
sbb
loope
cmps
mov
and
push
adc
sahf
adc
pusha
mov
mov
mov
jle
xchg
jge
rcl
rol
inc
cwde
inc
jmp
push
xor
add
mov
adc
xor
loope
cmp
leave
fistp
(bad)
adc
out
je
popf
xor
arpl
jns
push
ror
popa
xchg
into
add
fld
adc
test
pop
imul
outs
(bad)
loope
xor
mov
inc
lahf
lahf
aad
push
xor
jno
add
add
or
push
test
jg
jp
xor
popa
mov
adc
pop
shl
jmp
shl
arpl
mov
jno
add
push
add
mov
stc
icebp
les
mov
aad
int
or
mov
pop
popa
adc
shl
loope
pop
xchg
ins
movs
stc
lock
call
movs
and
jo
retf
jno
inc
or
jge
xor
cdq
mov
and
xor
inc
sbb
ret
jno
add
gs
shl
fdiv
xchg
push
loope
mov
shl
and
popa
test
add
adc
in
mov
dec
test
add
push
xor
or
mov
rol
enter
icebp
ins
test
rol
jmp
adc
sbb
xor
loope
add
loop
push
ins
and
jo
nop
push
movs
movs
jmp
xchg
icebp
and
or
jecxz
add
add
jecxz
shl
nop
inc
xor
icebp
mov
dec
push
repnz
jno
fldenv
xor
inc
repnz
dec
aad
and
xchg
in
loopne
add
adc
popa
adc
dec
add
add
gs
push
sbb
stos
jns
add
mov
inc
cmc
push
fstp
ret
adc
inc
mov
dec
in
cdq
nop
aas
das
jne
lock
rol
push
fnstenv
push
jno
std
and
repnz
add
les
push
(bad)
enter
icebp
sub
call
mov
add
jns
lahf
(bad)
aad
nop
in
mov
inc
icebp
(bad)
jo
sbb
lods
pxor
inc
rcl
and
cmp
fwait
and
push
xchg
push
cs
lea
iret
imul
cmp
add
add
loope
stos
push
cmp
inc
loope
mov
(bad)
in
test
mov
push
ficomp
aas
stc
jo
inc
mov
mov
xor
dec
ds
dec
out
psubusw
jno
inc
jmp
shl
mov
ins
push
sbb
inc
ror
call
mov
pop
and
mov
pop
push
jg
xor
xchg
les
xchg
cmps
ins
test
repnz
inc
xor
jno
retf
call
stc
and
test
shl
mov
popf
adc
or
shl
jmp
shl
pusha
ret
add
jno
add
push
add
mov
imul
xor
mov
push
and
je
add
mov
add
sbb
xchg
ins
movs
stc
lock
push
movs
and
jo
int3
cmp
jno
inc
or
jl
xor
cdq
mov
and
in
inc
sbb
ret
jno
and
gs
shl
fdiv
xchg
icebp
loope
mov
shl
and
popa
test
add
push
push
in
in
mov
dec
test
xor
push
xor
add
mov
rol
enter
icebp
ins
test
rol
jne
gs
or
mov
sbb
push
sbb
xor
loope
or
inc
loop
push
ins
and
jo
xchg
push
movs
movs
jmp
xchg
icebp
in
ror
cmp
jno
add
loop
shl
popa
cmp
mov
adc
test
enter
push
xchg
test
inc
mov
mov
sbb
shl
inc
jmp
rcr
sbb
cwde
push
in
cmp
popa
push
jns
and
pop
inc
jecxz
add
jno
sub
rcr
(bad)
sub
add
cmp
popa
pop
out
mov
mov
xchg
add
cmc
les
push
cdq
fwait
imul
and
repnz
les
lock
and
mov
sub
cmp
dec
push
into
add
sar
adc
and
push
test
shr
icebp
pop
xchg
mov
sbb
xor
inc
mov
and
jne
nop
dec
pop
fndisi(8087
jle
xchg
shl
hlt
mov
and
push
call
inc
into
push
shl
dec
in
test
mov
add
pop
add
add
scas
sahf
dec
cdq
and
(bad)
sbb
and
mov
lds
push
ret
and
adc
sar
cdq
nop
inc
sub
icebp
mov
dec
push
repnz
pop
jno
test
inc
repnz
cwde
mov
mov
and
test
sar
in
cmp
mov
loope
and
or
shl
jmp
shl
pusha
ret
add
jno
add
push
add
mov
leave
icebp
les
mov
popa
and
je
add
and
add
sbb
loope
xor
bound
rol
push
movs
and
jo
iret
cmp
jno
inc
or
jg
xor
cdq
mov
and
in
inc
sbb
ret
jno
dec
xor
leave
shl
fdiv
xchg
movs
loope
mov
shl
and
popa
test
add
fst
in
mov
push
test
sub
push
xor
pusha
shl
rol
enter
icebp
ins
test
rol
xor
repz
push
pop
mov
xor
loope
xor
loop
push
ins
and
jo
xchg
push
movs
movs
aam
cdq
leave
push
jbe
retf
push
ds
test
add
lahf
jb
inc
shl
mov
sbb
hlt
movs
xchg
push
push
cmp
fsubr
mov
cmc
popa
adc
outs
inc
xor
push
out
nop
icebp
test
lods
lods
mov
std
xor
int3
and
shl
mov
mov
pop
lock
dec
sub
popa
icebp
cld
in
(bad)
bound
ror
pop
loope
mov
sbb
xchg
xor
cld
inc
add
mov
add
jle
ins
jmp
aad
mov
and
push
mov
push
add
(bad)
shl
push
mov
jge
outs
jmp
sar
lds
imul
jno
push
pop
and
fnstcw
xacquire
or
icebp
addr16
pop
add
dec
xchg
stc
imul
cmp
test
push
fld
add
jno
add
mov
hlt
ins
or
in
mov
movs
adc
cmp
sub
lods
dec
mov
loopne
xchg
daa
xchg
lods
in
movs
jae
add
mov
sahf
bnd
mov
pop
cmp
jle
push
outs
ins
mov
dec
inc
fnstcw
and
mov
mov
or
sub
inc
dec
test
in
rol
fabs
xor
pop
push
jno
adc
popa
aas
and
add
(bad)
mov
lock
mov
fcomip
leave
icebp
rcl
xor
into
xor
add
ds
dec
loope
icebp
add
inc
xchg
fldenv
xor
xor
mov
dec
loopne
lock
imul
and
or
(bad)
jnp
imul
jne
mov
test
cs
outs
add
outs
imul
hlt
rol
fnstenv
mov
popa
out
test
sub
xchg
cmp
jae
sbb
loope
or
add
mov
sbb
and
mov
in
in
mov
jle
sti
jp
adc
mov
leave
push
into
arpl
jno
mov
shl
lods
cmp
ds
shl
les
cmp
fisub
push
add
call
mov
icebp
jne
movs
ins
mov
add
mov
push
das
adc
xor
aad
test
sbb
test
sbb
and
in
xchg
inc
call
mov
jne
jle
fadd
jns
in
fcmovnbe
or
movs
xor
push
jo
add
and
call
cmp
ins
icebp
sbb
push
icebp
sub
push
mov
aaa
(bad)
jno
jl
push
cld
cmps
push
jne
xchg
sub
dec
fs
xchg
or
ins
jnp
dec
xchg
mov
xor
retf
sbb
dec
loope
xchg
cmp
mov
jne
jmp
pushf
lea
xor
pop
pop
dec
ins
xchg
pop
nop
fsub
mov
inc
shr
out
cmc
popa
push
daa
and
pop
or
or
aam
loopne
lock
rol
sub
popf
add
jno
sbb
jp
mov
push
nop
jle
sbb
mov
ficom
xor
mov
inc
sahf
xchg
jno
add
sub
int3
or
outs
test
xchg
fistp
and
cwde
cmp
sub
push
mov
cmp
xor
mov
mov
adc
mov
movs
ins
or
xor
xchg
mov
imul
popa
mov
bound
into
ds
or
adc
adc
and
mov
movs
gs
xor
dec
popa
test
leave
cmp
pop
mov
add
xlat
add
dec
scas
mov
cmc
push
xor
ds
ror
push
mov
aad
stc
(bad)
xor
jo
shl
rcr
push
jge
outs
and
push
mov
add
cmp
shl
hlt
mov
and
sub
and
clc
stc
pop
daa
xchg
jno
les
data16
xchg
sub
cdq
sub
movs
fiadd
xor
inc
mov
jmp
into
sbb
pop
rcr
sbb
call
dec
rol
icebp
mov
pusha
xchg
xchg
mov
cs
xchg
xor
jle
sbb
popa
inc
push
or
or
and
or
int3
or
shl
icebp
dec
xchg
into
cmp
mov
dec
xor
mov
movs
les
loope
jle
int3
xor
adc
js
test
cs
push
dec
mov
sub
fdiv
or
xor
mov
inc
int
(bad)
pusha
out
xchg
fiadd
gs
sub
imul
int3
ja
xor
cdq
(bad)
jno
mov
xor
mov
shr
daa
aad
mov
lods
jne
popf
mov
inc
inc
add
adc
clc
cmp
sbb
sub
push
stos
out
cs
imul
pop
lea
xchg
ins
inc
xor
shl
das
stos
loopne
lods
fdiv
adc
push
inc
pop
jmp
mov
mov
cli
xor
packuswb
adc
nop
jl
pusha
dec
(bad)
enter
cmp
leave
adc
call
into
push
dec
mov
lock
loope
mov
inc
jno
xor
add
out
add
adc
fiadd
push
shl
sbb
adc
lock
cmp
retf
fs
jno
cmc
jno
push
pusha
adc
sub
xor
pop
xor
sbb
scas
jne
mov
and
(bad)
and
xor
jp
scas
ds
mov
fimul
push
popa
push
xchg
icebp
sub
movs
pop
inc
loope
xor
mov
popa
push
dec
pop
xchg
ins
ins
mov
add
add
out
cli
xor
rcl
adc
icebp
stc
jge
push
repnz
hlt
aam
sub
jl
(bad)
xor
jns
push
xor
popa
pop
loope
or
sbb
sbb
xor
cmp
int3
and
xor
(bad)
cli
out
(bad)
icebp
dec
jno
mov
les
jle
les
in
mov
inc
movs
pop
dec
je
jno
(bad)
je
stc
adc
dec
and
xchg
loope
rol
daa
xchg
repz
sub
push
push
popa
add
push
in
cmp
jge
xchg
int
xchg
xor
fst
and
das
fsub
xor
rol
out
mov
aad
loopne
sbb
mov
xor
cld
adc
mov
retf
repnz
les
sbb
inc
add
xor
idiv
cmc
shl
icebp
mov
shr
sub
cmp
loopne
inc
jne
inc
call
add
mov
xchg
popa
mul
sbb
test
jp
je
mov
lds
xor
inc
shl
addr16
xor
cmc
jb
les
adc
mov
add
cwde
in
add
cdq
jno
je
mov
pop
jae
jmp
adc
push
mov
add
in
sub
std
je
xor
add
xchg
mov
in
out
ins
adc
and
in
in
inc
add
jl
lds
jl
sbb
cmc
push
inc
stos
jmp
push
push
popa
adc
test
pop
pop
xor
mov
add
leave
and
cmp
out
jo
xor
popa
test
jmp
mov
inc
ficom
sub
jo
inc
pusha
pop
and
imul
add
mov
(bad)
and
mov
mov
add
cmc
aad
jecxz
cmp
test
and
push
mov
adc
sub
dec
add
push
mov
jmp
xchg
test
cmc
sbb
loope
icebp
mov
out
push
into
je
mov
or
add
mov
sbb
and
icebp
shl
inc
in
adc
(bad)
cmp
(bad)
and
popa
(bad)
sub
mov
kmovb
loope
icebp
mov
arpl
or
bound
jne
add
mov
jmp
repnz
add
pop
xor
and
and
sar
cmp
push
mov
mov
sbb
jns
inc
clc
cld
rcl
sbb
cmp
in
xor
xor
jmp
adc
gs
xor
sub
fsubr
rcl
gs
into
icebp
xor
add
and
push
pop
shl
enter
inc
ror
fsubr
in
adc
add
in
adc
test
mov
(bad)
icebp
xchg
inc
adc
mov
lods
add
mov
mov
mov
ja
or
jl
shl
sub
clc
jl
xchg
loopne
shl
movs
jle
outs
jno
test
pop
cmp
add
std
jb
cmp
inc
ficom
rcl
test
shl
icebp
and
sub
cmp
mov
cmp
adc
pop
sub
mov
cmc
loop
mov
ret
shl
gs
call
cmp
jmp
jmp
cmp
cs
and
cmp
inc
jns
xor
and
fdivr
cmp
(bad)
not
leave
int3
cmp
fs
mov
addr16
retf
mov
aad
in
test
xchg
stos
mov
inc
and
mov
cmp
inc
daa
or
test
lods
fiadd
adc
out
out
xchg
mov
inc
mov
push
mov
lods
xchg
test
add
mov
sub
jmp
pop
leave
pop
push
int3
push
mov
rol
repnz
and
xchg
mov
adc
js
xor
or
jmp
mov
mov
or
jns
(bad)
ficom
jbe
xor
add
xchg
or
sbb
les
mov
inc
sub
jno
stos
add
js
sti
or
sub
or
mov
into
pusha
pop
es
mul
cmp
cmp
push
loope
mov
add
test
rol
in
repnz
iret
fs
xchg
add
xchg
pop
pop
rcr
mov
sahf
ret
fidiv
mov
aaa
(bad)
fild
adc
not
dec
stos
xchg
fisub
pop
daa
push
shr
jne
mov
pop
add
jp
and
jae
push
and
xor
push
jmp
dec
sub
call
hlt
and
cmps
movs
leave
cmp
imul
fld
dec
mov
sub
inc
ficom
or
lods
dec
mov
fidiv
(bad)
je
je
ficom
and
mov
loopne
retf
movs
jns
clc
xchg
push
mov
jno
shr
jne
add
dec
leave
icebp
cs
push
jle
pop
shr
icebp
aad
arpl
enter
adc
daa
push
add
ret
clc
push
pop
sbb
in
sub
pop
mov
repnz
enter
cli
stos
inc
xor
mov
lds
push
imul
out
je
es
inc
lea
movs
aam
mov
mov
pop
xchg
add
fstp
test
clc
fadd
ins
outs
jno
mov
rcr
inc
icebp
cdq
xchg
movs
(bad)
mov
xchg
fabs
xor
adc
xor
jo
add
inc
cld
mov
add
(bad)
loopne
fwait
mov
je
cmp
test
xor
into
push
shr
jae
mov
xchg
in
xchg
in
mov
mov
mov
mov
xor
xor
repnz
out
loope
pop
fcmovu
loope
sub
test
jno
push
push
cdq
rcl
inc
mov
hlt
loopne
mov
ds
mov
inc
sub
xor
jno
out
add
adc
inc
mov
cmc
xchg
or
cmc
in
mov
add
(bad)
fs
mov
out
lods
leave
nop
scas
aam
pop
adc
xchg
js
(bad)
push
mov
lds
popa
inc
daa
pushf
add
adc
mov
imul
xchg
ds
inc
lds
jne
and
xchg
adc
das
call
out
xor
xchg
aas
mov
push
pop
and
fdiv
scas
dec
jno
cmp
retf
dec
inc
push
mov
stc
xlat
push
sbb
call
add
std
sahf
in
enter
mov
scas
cdq
mov
jns
arpl
mov
xor
mov
call
and
jo
cmc
xor
xor
adc
test
xchg
sbb
sbb
sahf
cmp
inc
or
cli
loope
icebp
push
dec
push
mov
movs
or
sahf
cmc
mov
mov
shl
xor
loop
xor
inc
xchg
pop
loope
fwait
xchg
shl
outs
cmp
and
ins
imul
fdivrp
xor
in
hlt
in
add
in
jns
mov
pusha
add
mov
movs
bound
mov
sbb
jp
or
shr
and
add
add
mov
mov
(bad)
icebp
pushf
shl
aam
mov
in
inc
cdq
repz
jno
pop
popa
stc
jno
pop
into
fcmovbe
push
cld
xchg
shl
pop
push
and
and
push
mov
or
sub
pop
shl
inc
movs
or
fwait
mov
in
sbb
sbb
or
add
scas
aam
mov
inc
mov
pop
mov
aaa
bound
(bad)
je
and
and
xchg
imul
icebp
loope
sub
add
add
xor
sub
add
sub
shl
sub
add
popa
push
rcl
xor
adc
xchg
lock
dec
mov
icebp
out
pop
pop
sub
stos
(bad)
je
cmps
test
popa
std
xor
xor
mov
xchg
icebp
jns
loope
icebp
mov
and
add
aas
push
mov
push
xchg
imul
mov
add
add
adc
clc
xor
shr
cmp
push
lahf
icebp
in
rol
mov
pop
add
xor
mov
sbb
and
jns
mov
enter
jmp
adc
push
sub
icebp
js
inc
xchg
sbb
mov
sbb
sub
jns
test
repnz
stos
adc
fwait
inc
stc
push
fsub
popa
pop
jno
inc
fcom
loope
icebp
cmc
or
mov
xor
outs
adc
and
rcr
cmp
fild
push
leave
popa
call
sbb
imul
mov
mov
(bad)
or
cmp
push
xor
cwde
push
mov
push
xor
ror
loope
std
xchg
(bad)
loope
icebp
dec
test
shr
in
clc
inc
ret
sub
mov
icebp
xchg
mov
shl
inc
lds
pop
mov
fiadd
fadd
pop
xchg
xor
and
mov
les
jno
mov
add
mov
push
ja
jle
xchg
(bad)
loopne
mov
ror
and
(bad)
(bad)
lds
ins
and
fcmove
sub
jb
fdivr
xchg
jle
sbb
bound
fldenv
mov
xchg
jno
int3
mov
out
xor
outs
sbb
sub
inc
and
adc
fnstenv
mov
mov
pop
ds
inc
ins
(bad)
jno
inc
popf
(bad)
xor
aam
sar
pop
add
jle
xchg
icebp
dec
ds
pop
int
xchg
ins
mov
push
add
add
rcr
sbb
fadd
mov
fs
fldl2t
mov
pop
xor
adc
and
mov
sar
sbb
loope
icebp
test
inc
leave
pop
into
jecxz
cdq
pushf
add
jl
test
mov
imul
mov
inc
cmp
xor
test
(bad)
loope
mov
icebp
mov
push
push
xor
test
(bad)
fdivp
push
lds
lods
movs
icebp
mov
and
inc
and
or
lods
mov
pop
test
add
xor
jae
cmc
test
movs
jno
dec
mov
cld
ins
lahf
jb
les
loope
and
call
add
mov
sbb
ins
sbb
in
mov
test
scas
cmp
aas
stc
and
inc
jl
add
mov
imul
je
inc
repnz
add
(bad)
ds
mov
xor
jp
ror
out
into
test
xor
sahf
xchg
fs
inc
pop
fdiv
jge
ins
int3
loope
add
enter
test
inc
jl
in
pushf
xor
test
cs
loope
mov
mov
push
leave
icebp
xor
psubd
mov
adc
pop
xchg
mov
sbb
ins
cwde
mov
int3
lods
adc
mov
jno
(bad)
popa
sub
and
imul
sub
or
fidiv
(bad)
xlat
inc
adc
ficom
xchg
pushf
cmp
icebp
inc
lea
mov
sub
pop
cwde
ins
xor
cmp
inc
popa
stc
stc
lods
xor
mov
icebp
jns
ins
sbb
test
xor
clc
outs
and
mov
dec
mov
xor
inc
icebp
shr
cmc
stos
cld
dec
hlt
shr
inc
mov
mov
fnstcw
movs
jle
aad
ret
and
cmp
sub
push
jmp
cld
xor
xor
and
mov
adc
cld
lahf
inc
aaa
adc
and
int
pop
mov
dec
ins
lahf
mov
sub
inc
fstp
lahf
and
jo
jmp
int3
xor
test
mov
sti
sub
jmp
cld
leave
add
adc
sub
out
or
push
and
ja
inc
lds
aad
cdq
xlat
mov
add
xchg
jne
inc
mov
in
rcr
fisubr
out
mov
leave
movs
aad
cmp
jle
test
jns
inc
ds
pop
retf
into
in
adc
adc
test
mov
int3
mov
movs
daa
sbb
jl
int3
stos
cs
xor
xor
in
call
lahf
xchg
out
or
std
jge
push
push
rcl
(bad)
jl
push
movs
stc
add
jo
test
push
mov
gs
or
outs
stos
pop
ds
test
(bad)
jno
add
into
aam
pop
pop
cmp
xor
les
pop
popa
add
add
add
push
int3
pop
xor
sbb
movs
sbb
sub
cmp
add
push
mov
std
popa
xlat
lds
into
mov
sar
cmps
stc
xchg
jle
sbb
pop
aaa
cld
popa
int3
dec
aad
sahf
fld
xor
stos
leave
mov
cmp
or
in
dec
dec
pop
xor
add
test
xchg
push
sub
shl
cmp
lahf
mov
sub
xor
adc
in
mov
and
pop
test
xor
mov
dec
addr16
pop
and
jns
add
in
add
into
pop
dec
test
pop
shl
dec
sar
(bad)
hlt
sbb
jmp
ds
cs
and
cs
add
jl
retf
shl
mov
gs
les
outs
sub
push
test
pop
pushf
and
loop
shl
mov
jl
xchg
push
inc
sbb
dec
pop
xchg
fisubr
push
mov
push
mov
movs
mov
mov
sub
in
(bad)
mov
call
push
bound
in
dec
ins
shl
jmp
sub
out
mul
daa
jle
push
push
add
xor
cmp
jle
push
or
mov
adc
pop
shl
jno
(bad)
and
sub
test
sub
sbb
ins
outs
aaa
dec
or
fiadd
bound
xor
(bad)
in
jno
add
pop
cld
push
jle
enter
jge
ds
les
jne
add
add
add
faddp
fldcw
push
jge
xchg
inc
(bad)
aad
pop
dec
stc
pop
push
fnstsw
loope
pushf
call
rcr
and
jp
mov
xchg
xor
xchg
adc
shl
in
les
ins
outs
or
mov
inc
pusha
adc
jmp
jo
inc
fst
inc
lahf
dec
adc
nop
mov
test
(bad)
int3
test
cmp
mov
adc
daa
add
push
lahf
push
loope
or
sbb
ins
(bad)
in
jmp
pushf
cmc
ja
mov
mov
or
icebp
mov
push
jno
(bad)
popa
adc
and
xchg
pop
mov
lods
in
mov
mov
push
and
je
inc
cmp
(bad)
adc
jle
aad
jne
add
inc
loopne
mov
mov
sub
inc
sahf
adc
adc
repnz
mov
out
or
xor
dec
movs
pop
inc
leave
mov
sahf
std
cld
call
xor
ins
or
call
mov
into
popa
gs
add
rcr
mov
add
hlt
fmul
in
dec
push
adc
pop
fldl2e
std
and
mov
cmp
icebp
jmp
movs
gs
ins
(bad)
adc
add
mov
cmp
xchg
sti
sub
loop
inc
jno
je
add
xor
ret
mov
xor
jmp
inc
and
xor
mov
jns
and
adc
jmp
lods
aad
pop
jo
pop
inc
fidivr
stc
test
mov
push
cmp
and
jle
push
mov
ror
gs
in
or
in
and
push
ds
ins
or
inc
movs
push
test
xchg
loop
or
add
mov
aaa
adc
and
push
ds
and
mov
inc
jmp
mov
sbb
lock
pop
aaa
sub
pop
fidivr
mov
fwait
xchg
and
std
aam
pop
(bad)
test
inc
cdq
inc
pop
aas
push
repnz
jg
(bad)
jo
fadd
cs
in
call
inc
mov
pop
adc
inc
in
fdivr
mov
ss
jmp
imul
cmp
mov
jmp
cmp
fldcw
out
je
adc
sub
mov
push
or
sub
push
mov
adc
call
shr
fdiv
sbb
aam
sub
mov
inc
or
aaa
jno
mov
jmp
inc
iret
pop
cmp
add
sbb
shl
xchg
mov
icebp
jbe
ret
fldcw
mov
cmp
fadd
aad
mov
les
in
sub
mov
add
dec
mov
mov
or
lea
enter
mov
mov
or
dec
stc
inc
ds
pop
mov
fild
mov
or
sahf
stc
das
ror
imul
or
hlt
xlat
(bad)
jmp
push
dec
pop
adc
scas
inc
jmp
cdq
popa
xor
inc
dec
fcom
or
adc
inc
(bad)
fdiv
call
inc
xor
sbb
mov
or
jnp
and
fidivr
push
sbb
and
sbb
loop
or
and
jge
pop
faddp
rcl
push
fldenv
add
cdq
inc
retf
and
shl
nop
(bad)
loope
xchg
pop
shl
enter
arpl
jno
or
shl
movs
shl
fmul
imul
test
push
mov
add
mov
lds
fadd
aaa
xchg
inc
loope
icebp
sbb
sub
push
leave
adc
mov
add
shl
adc
dec
imul
popa
jne
sbb
sbb
sbb
pop
cmp
or
in
hlt
ja
rcl
mov
push
jle
mov
mov
cdq
jno
retf
xchg
sub
jnp
adc
stos
jmp
add
pop
shl
add
mov
sub
jp
test
pop
dec
and
pushf
cli
xchg
sub
inc
clc
cmps
sbb
xor
imul
cmp
cmp
sbb
jmp
jno
add
pop
mov
sub
into
test
adc
mov
sbb
inc
je
shl
mov
add
icebp
pop
fild
inc
out
xor
iret
sti
retf
cli
xchg
stos
int3
icebp
adc
mov
push
test
sub
mov
adc
popa
ins
mov
ds
shl
cmp
nop
or
test
(bad)
shl
dec
jbe
inc
cdq
in
(bad)
shr
xchg
mov
es
jp
ret
inc
retf
sahf
fnsave
jno
cdq
jne
ror
loope
cdq
aaa
xchg
inc
movs
sbb
in
dec
loopne
add
cdq
int
pop
jno
in
nop
push
cld
fld
push
test
pushf
mov
sub
lods
ds
out
fcomp
cmps
or
jmp
mov
xor
loope
mov
sub
retf
xor
popa
adc
popf
retf
add
push
shl
sub
out
sti
inc
lods
push
xor
mov
mov
dec
lds
push
mov
mov
mov
(bad)
mov
retf
cdq
add
fidivr
push
mov
and
fdivp
inc
push
adc
mov
inc
bound
adc
popa
fnstcw
sub
frndint
lods
mov
repnz
into
jmp
adc
ins
add
aaa
pop
and
cmp
adc
fist
lds
mov
cmp
xor
movs
sbb
lods
stos
add
xor
jo
push
fs
ds
fucom
inc
and
rol
test
test
addr16
or
jnp
rcl
jne
mov
mov
cmc
pop
xchg
mov
xchg
push
add
push
add
adc
inc
mov
xor
jle
xchg
jle
stc
or
mov
(bad)
xor
jno
retf
aaa
cmp
movs
push
dec
xchg
or
sbb
in
test
popa
std
add
sub
cmc
fld
mov
stc
adc
pop
xor
sbb
cwde
cli
jl
cmp
adc
xchg
jnp
mov
cld
cmp
hlt
cmp
cld
adc
mov
les
loope
and
mov
icebp
mov
popa
xchg
aam
cdq
repnz
sbb
push
fadd
les
inc
fs
mov
in
adc
pop
add
hlt
push
xor
inc
xchg
push
mov
and
mov
jne
xchg
fs
hlt
sub
ins
sbb
xor
mov
enter
call
jl
xor
sbb
loope
or
stos
push
mov
push
call
ror
leave
shr
es
mov
or
fcom
cmp
popa
add
and
fs
mov
hlt
sub
mov
icebp
fimul
push
mov
loope
dec
mov
xchg
fisubr
fimul
inc
xor
dec
xchg
inc
mov
or
add
inc
adc
(bad)
cmc
add
add
enter
adc
mov
adc
in
test
jp
lahf
in
jo
push
test
and
add
pop
xor
add
pop
call
cld
movs
loop
jmp
popf
in
cmp
or
mov
and
into
fcmovb
in
cmp
lds
loope
and
mov
dec
mov
xor
adc
fimul
iret
bound
hlt
loopne
sbb
cs
fadd
cs
mov
(bad)
mov
mov
scas
push
mov
std
xor
popf
leave
xor
(bad)
test
xor
mov
or
cmp
cmc
sub
mov
fadd
mov
sti
stos
jbe
and
push
xor
lods
mov
sub
fdivr
dec
ins
adc
dec
mov
ins
bound
mov
mov
pop
dec
stos
push
arpl
mov
pop
ret
mov
inc
ja
shl
shr
nop
(bad)
push
or
retf
push
inc
call
outs
push
sub
cmp
jmp
inc
stos
scas
clc
sahf
add
loopne
in
adc
inc
fs
and
jo
or
or
nop
xor
leave
push
shl
xchg
or
rcl
hlt
clc
sbb
mov
jno
inc
lods
pop
aad
inc
mov
fcmovb
mov
and
push
push
push
xchg
shl
popa
add
xor
fimul
add
or
push
sub
mov
inc
mov
sbb
cld
leave
retf
into
pop
repnz
sub
hlt
sub
mov
xor
popa
mov
jno
inc
mov
add
pushf
cmp
pop
outs
xchg
pop
dec
xchg
in
add
xchg
jnp
add
in
adc
dec
mov
repz
rcr
mov
and
jne
mov
shr
sbb
lahf
add
test
cmp
fwait
outs
pop
rol
mov
shl
popa
add
or
fisub
sbb
stc
(bad)
movs
xchg
mov
xor
mov
add
rcr
test
jns
gs
xor
mov
int3
mov
and
pop
(bad)
out
imul
adc
mov
jle
sbb
rol
jo
jno
std
jns
(bad)
in
pop
mov
adc
push
test
dec
das
jge
rcr
(bad)
push
mov
inc
loop
mov
nop
pusha
push
sub
(bad)
loope
icebp
ins
jle
push
stc
add
cmp
mov
stc
inc
sub
and
sub
mov
cmp
movs
jge
(bad)
mov
inc
fstp
mov
or
and
and
mov
loope
stc
pop
int3
mov
inc
pop
add
xor
jno
adc
pop
jno
test
jmp
movs
ins
jp
and
(bad)
lock
cmp
cli
push
test
cmp
push
or
fld
in
lock
cmp
outs
mov
mov
pushf
jno
inc
xor
mov
pop
cmp
or
js
dec
pop
fisttp
stos
fisubr
sbb
cli
imul
dec
mov
js
mov
mov
sub
sub
stc
mov
cmp
ret
clc
fnstenv
dec
in
icebp
test
ins
bts
out
std
ins
sbb
inc
xor
pop
jo
(bad)
push
add
fidiv
mov
pop
fst
sahf
pop
inc
adc
es
sub
stc
jp
mov
retf
(bad)
ja
cmp
(bad)
jge
mov
pusha
fimul
fnstsw
shr
sbb
xchg
mov
add
add
popa
in
aas
fdivr
sub
in
push
xchg
xor
pop
xor
gs
sub
cmp
gs
mov
lods
push
fs
cli
sbb
repnz
movs
lods
pop
mov
pushf
aad
sub
cld
movs
mov
or
shl
dec
sub
sbb
push
in
mov
and
cdq
stc
sub
jne
fidiv
test
push
imul
inc
cwde
push
fsub
jae
mov
mov
inc
into
jl
pop
push
pusha
sbb
std
sbb
call
loop
mov
iret
mov
push
mov
mov
xor
push
dec
push
sub
fstp
push
jno
add
jns
movs
inc
icebp
fsub
or
cdq
xor
fidivr
sbb
aas
pusha
xchg
cdq
push
sahf
mov
mov
lock
sbb
cmp
push
inc
int
sub
scas
dec
mov
movs
or
in
pop
movs
push
jl
cmp
dec
test
clc
adc
push
push
stos
(bad)
add
cs
and
jge
in
in
shl
ret
inc
popa
(bad)
mov
daa
out
xor
es
mov
iret
cmp
fsub
mov
dec
cmp
inc
and
push
aad
push
add
stos
int3
into
push
ds
sub
xchg
shr
les
dec
jno
jmp
inc
stos
add
pop
mov
or
jno
rcr
mov
shl
mov
sar
fwait
inc
jno
(bad)
fstp
xchg
pop
cmc
cmp
xchg
jmp
cs
gs
repnz
or
xor
inc
xor
rcr
hlt
adc
icebp
in
pop
cs
push
aad
add
add
adc
jns
imul
or
mov
sub
out
inc
popa
push
mov
test
sub
aad
movs
xchg
push
mov
cmp
cmp
push
xor
jo
xor
add
mov
or
rol
hlt
adc
retf
adc
fistp
adc
test
icebp
aam
loope
imul
fisttp
add
push
mov
jno
inc
xor
(bad)
jp
lea
iret
sbb
stos
adc
popa
pop
jo
add
jno
fmul
fcmovbe
lods
pop
out
or
sbb
and
popa
push
jmp
mov
shr
cmp
xchg
mov
shl
mov
pop
cdq
adc
popa
call
sub
xchg
jmp
ds
shl
adc
popa
push
or
mov
test
mov
xor
add
push
repnz
pop
jno
test
inc
repnz
cwde
mov
mov
and
pop
shr
cmp
mov
cmc
adc
or
shl
jmp
shl
popa
ret
add
jno
add
push
add
mov
jmp
xchg
xor
mov
int
int
or
mov
pop
popa
adc
shl
loope
xchg
xchg
ins
movs
stc
icebp
bound
rol
push
movs
and
jno
int3
cmp
jno
inc
or
jg
xor
cdq
mov
and
in
inc
sbb
ret
jno
pop
xor
leave
shl
fdiv
xchg
(bad)
loope
mov
shl
and
popa
test
add
sbb
mov
dec
test
sub
mov
xchg
js
xor
or
mov
rol
enter
icebp
ins
test
rol
movs
jno
inc
or
mov
sbb
push
jne
int
mov
xchg
and
loop
push
ins
and
jno
xchg
push
movs
movs
jmp
xchg
icebp
inc
xchg
mov
inc
ficom
aas
jmp
xchg
xor
jno
ror
rol
jle
adc
sbb
dec
cs
dec
mov
stc
push
xchg
add
sbb
sahf
aam
pop
cmp
mov
and
(bad)
call
and
lods
into
popa
in
mov
push
add
jbe
sub
push
inc
neg
rol
cmc
cld
xlat
movs
(bad)
mov
sar
fldcw
jo
mov
fst
adc
imul
mov
outs
popa
push
xchg
pop
popa
call
repnz
xor
icebp
jb
cmp
call
cmc
add
pushf
and
mov
inc
popa
xchg
push
jp
push
ds
xor
mov
xor
ds
xchg
cmp
dec
sbb
sbb
icebp
addr16
xchg
dec
leave
fstp
sbb
dec
in
sar
xchg
shl
outs
jp
ror
fs
loope
mov
adc
jo
retf
shl
nop
or
aam
sub
push
push
mov
pusha
cwde
cmp
shl
mov
xor
loope
push
push
add
cmp
sub
cli
or
add
test
fprem1
loope
mov
mov
mov
mov
pop
mov
jnp
xor
cs
xor
adc
xor
xor
add
add
rcr
xchg
or
stc
lds
or
inc
lods
inc
pop
lods
push
cdq
fs
popa
pushf
jle
push
jne
pop
pop
mov
xor
ds
les
jne
mov
mov
inc
cmp
pop
xchg
aam
add
pop
dec
dec
cmp
push
daa
push
add
movs
inc
je
dec
jmp
mov
inc
loope
icebp
test
hlt
clc
mov
sbb
pop
stc
cdq
mov
xor
xor
xchg
dec
rcr
rol
xchg
inc
pop
nop
xor
dec
inc
mov
icebp
xor
xor
aas
push
xchg
movs
(bad)
jns
jns
pushf
pop
cmps
in
inc
shl
in
xor
scas
out
sub
data16
out
fisubr
pop
dec
hlt
movs
add
push
xor
adc
sub
xor
loope
lock
pop
retf
inc
fs
inc
push
and
addr16
mov
xor
jle
sbb
aam
cmc
inc
int3
and
xor
add
mov
pushf
pop
fadd
fwait
xor
adc
lods
xor
popa
push
cld
push
xchg
pop
dec
or
loope
mov
xchg
dec
sub
xchg
inc
stc
popf
mov
pushf
cmp
add
aad
mov
rcl
pusha
mov
inc
into
leave
ret
popf
mov
lock
loope
and
nop
fst
push
in
and
xchg
rol
xchg
cmp
xchg
pop
clc
shl
jne
xor
mov
inc
xor
mov
xchg
dec
outs
xor
pop
je
xor
jno
retf
call
enter
xor
sahf
lock
or
adc
ror
sub
mov
rol
xchg
icebp
sbb
pop
jae
gs
repnz
jmp
fwait
sbb
mov
cs
jmp
aad
bound
jns
test
mov
inc
add
ror
sbb
shl
hlt
inc
push
dec
lds
rcr
stos
mov
push
and
repnz
add
adc
icebp
mov
gs
repnz
push
in
loopne
or
mov
ds
sbb
popa
xchg
pusha
inc
fs
push
push
cwde
jo
jmp
dec
mov
push
test
xchg
cmc
adc
jle
repnz
add
jns
(bad)
xchg
ficom
jne
shl
mov
test
bound
xchg
sti
cmp
jno
add
sti
or
mov
cdq
xchg
inc
sub
icebp
mov
dec
push
repnz
pop
jno
xor
xor
inc
repnz
mov
and
test
xor
cmp
and
or
shl
jmp
shl
popa
ret
add
jno
add
push
add
mov
jns
les
mov
sub
int
or
mov
pop
popa
adc
and
pop
call
ins
movs
stc
icebp
bound
call
movs
and
jno
iret
cmp
jno
inc
or
jle
xor
cdq
mov
and
adc
scas
dec
jno
fnstenv
gs
shl
fdiv
xchg
adc
dec
mov
shl
and
popa
test
add
mov
mov
push
test
and
mov
nop
js
xor
add
mov
rol
enter
icebp
ins
test
rol
imul
repz
push
mov
xor
mov
add
adc
lea
push
pop
add
or
loopne
or
xchg
imul
dec
mov
xor
mov
aad
mov
jl
pop
in
mov
xchg
mov
cdq
pop
retf
xchg
xor
popa
jmp
test
shl
sbb
ror
xor
xchg
mov
push
(bad)
push
sbb
scas
shl
ins
movs
mov
xchg
jle
outs
stc
sub
adc
adc
popa
dec
xor
xor
inc
pop
push
xchg
jmp
rep
int3
loopne
add
jp
cmp
dec
xchg
mov
and
lock
std
pop
hlt
hlt
lea
stc
or
sar
ds
shl
mov
enter
aaa
inc
and
sahf
mov
out
sbb
mov
cmp
push
or
mov
adc
inc
repz
dec
sar
xor
jb
test
loopne
pop
jno
add
(bad)
stos
mov
cmps
sub
bound
add
inc
cli
push
pop
popa
dec
jo
adc
test
push
sbb
test
mov
adc
cmps
enter
push
cmp
xor
or
jg
inc
ficomp
std
add
jne
cwde
mov
dec
pop
jno
outs
cmp
and
push
(bad)
cmp
cdq
and
xor
sqrtps
dec
sub
dec
nop
or
or
mov
sbb
mov
mov
mov
xor
inc
lahf
lahf
shl
fidivr
mov
xchg
js
sbb
jp
or
shr
and
push
cdq
fwait
imul
xor
cmps
call
push
in
jae
iret
icebp
retf
aam
test
xor
adc
cmp
cwde
gs
mov
leave
sbb
jmp
inc
enter
jmp
leave
jno
add
sar
loope
icebp
js
inc
xchg
sbb
and
or
das
adc
and
leave
mov
or
dec
xlat
mov
inc
fst
and
popa
pop
jno
inc
fcom
loope
icebp
inc
or
cmps
ror
inc
rcl
jmp
or
rcr
cmp
leave
inc
push
and
xor
jno
inc
mov
mov
cdq
icebp
fild
bound
xor
cwde
push
mov
or
cmp
loope
jmp
icebp
dec
test
shr
or
inc
ret
cmp
push
push
mov
sbb
mov
leave
dec
xor
add
adc
and
xor
shl
movs
and
jns
loope
icebp
mov
and
dec
add
daa
push
xchg
push
xchg
imul
mov
add
add
adc
popa
test
fidivr
pop
(bad)
cmc
push
xchg
mov
les
aam
sub
xor
push
jne
test
inc
cmp
shl
hlt
and
aam
daa
aad
mov
fs
xor
test
and
xor
push
scas
cmp
ret
or
icebp
(bad)
ds
inc
add
sahf
inc
cmc
ins
adc
mov
lock
adc
mov
fst
fdivp
jo
push
outs
cwde
xchg
shr
xchg
movs
pop
loope
(bad)
and
scas
mov
push
mov
mov
shl
sbb
xor
pop
push
ficomp
mov
fs
xor
push
pop
or
(bad)
cmps
xchg
or
mov
push
mov
sbb
push
add
fs
scas
adc
add
xchg
mul
push
cld
pop
inc
push
push
add
mov
cli
sub
pop
push
cmp
enter
mov
sub
(bad)
lock
(bad)
jns
jmp
sub
mov
retf
xchg
cmp
pop
cwde
in
sub
(bad)
imul
ret
adc
and
sub
sbb
js
jns
ins
jp
aad
movs
retf
or
mov
and
stos
cmp
xchg
call
mov
in
in
out
fnsave
mov
icebp
retf
bnd
mov
cmp
test
xchg
stos
cdq
xchg
loope
rcl
jmp
mov
pop
test
ins
pushf
mov
aam
loope
lds
repnz
je
fs
ins
pop
inc
adc
test
test
mov
xchg
stc
test
or
push
mov
lods
push
sbb
shl
push
imul
retf
jl
jmp
gs
cwde
pusha
mov
ins
or
add
and
call
mov
mov
jne
xchg
and
xor
inc
mov
mov
daa
jno
(bad)
or
mov
test
test
xor
and
mov
and
xchg
and
fcmovbe
push
cmps
sub
add
or
mov
std
jno
adc
inc
loope
icebp
aam
mov
js
shr
popa
mov
push
fwait
and
push
xchg
test
inc
pop
push
mov
nop
pop
pop
sub
scas
popaw
inc
mov
add
cmc
jno
jecxz
adc
movs
push
xchg
push
test
adc
cdq
rcl
inc
je
leave
mov
sub
rol
xchg
icebp
(bad)
jae
gs
repnz
test
fwait
sbb
mov
cs
pop
icebp
and
jbe
xchg
test
mov
inc
add
ror
mov
inc
inc
icebp
lds
rcr
stos
mov
push
and
repnz
add
jns
(bad)
xchg
ficom
jne
shl
mov
test
bound
test
push
jmp
(bad)
cmp
jo
inc
mov
cmc
and
scas
rol
xchg
icebp
or
or
sti
cmp
jno
add
sti
or
mov
cdq
xchg
inc
sub
icebp
mov
dec
push
repnz
pop
jno
sbb
inc
repnz
mov
and
adc
mov
jne
and
or
shl
jmp
shl
popa
ret
add
jno
add
push
add
loope
icebp
les
mov
sbb
add
frstor
add
pop
call
ins
movs
stc
icebp
bound
call
movs
and
jno
iret
cmp
jno
inc
or
jle
xor
cdq
mov
and
adc
scas
dec
jno
xor
gs
shl
fdiv
xchg
loope
dec
mov
shl
and
popa
test
add
fst
in
mov
push
test
add
push
xor
or
mov
rol
enter
icebp
ins
test
rol
inc
jno
inc
or
mov
sbb
push
mov
xor
jp
test
push
fst
cmp
and
je
xor
pushf
hlt
imul
icebp
clc
sub
scas
popa
sahf
inc
cdq
dec
inc
xor
xchg
scas
inc
addr16
or
aaa
shl
rol
and
popa
add
add
int
test
mov
adc
adc
fst
add
adc
movs
xor
mov
std
sbb
mov
icebp
in
mov
inc
ja
into
pusha
push
sub
mov
int3
and
shl
jle
jns
rol
test
shl
jno
adc
jmp
adc
adc
je
rol
and
add
test
sti
das
loope
or
mov
mov
mov
inc
jno
(bad)
and
jno
retf
inc
lods
pushf
mov
cmp
cdq
add
sbb
aam
pop
loopne
inc
mov
mov
mov
xor
mov
cmp
in
or
in
ror
and
popf
inc
call
and
push
jg
(bad)
mov
sbb
(bad)
int
xchg
adc
fld
rcr
gs
je
dec
pop
pop
push
loopne
mov
mov
xchg
and
test
jmp
mov
pop
hlt
movs
cmp
jns
lods
jl
dec
jmp
mov
mov
lea
add
xchg
pusha
icebp
cmp
in
lds
xchg
jle
stc
imul
jno
int
push
xor
dec
sahf
pushf
movs
add
and
and
test
ds
retf
fldenv
cld
fstp
add
jl
int
or
cs
jle
push
mov
test
int3
nop
adc
int
in
add
fimul
fadd
call
stos
aaa
les
popf
dec
dec
pop
pmaxub
inc
adc
into
and
or
ret
popa
les
pop
xchg
mov
(bad)
out
jmp
mov
push
cmc
jns
cmps
sbb
(bad)
mov
(bad)
fnstcw
and
fst
xor
push
test
mov
mov
(bad)
pop
xor
xor
cli
out
pop
popf
inc
xor
inc
mov
mov
jle
aam
push
or
cmp
int3
outs
scas
int
(bad)
xor
pop
test
mov
test
shl
xchg
hlt
push
push
jle
and
mov
jno
int
loope
pushf
std
loop
xor
popa
into
(bad)
and
dec
hlt
popa
mov
mov
dec
cmc
push
xor
push
pop
popa
test
or
xchg
jbe
mov
pop
cmc
push
xlat
mov
or
jne
pop
fabs
das
sbb
push
(bad)
and
cmp
inc
clc
fiadd
lea
nop
jle
loope
and
dec
(bad)
loope
lods
mov
inc
xchg
adc
and
je
dec
sti
and
jg
stc
jge
outs
sbb
add
cmc
in
std
repnz
adc
out
cmp
dec
fst
xchg
xchg
pop
adc
sub
cs
push
mov
imul
cmp
adc
or
jl
inc
loopne
icebp
mov
sub
(bad)
ins
into
cmp
mov
cmp
xor
shr
mov
or
sti
lods
in
ret
pop
pop
loopne
and
mov
jo
add
lods
and
adc
movs
int3
adc
call
into
mov
(bad)
pusha
adc
add
fstp
movs
outs
icebp
add
test
inc
fst
jmp
hlt
stos
fdiv
mov
or
lods
mov
or
adc
and
dec
jmp
jne
loope
jnp
xor
inc
out
inc
push
add
push
mov
xor
cwde
and
nop
ja
sbb
scas
fimul
bound
sahf
push
jle
add
jl
fcmovb
push
sar
lods
jle
xchg
xor
xchg
add
out
je
std
call
mov
scas
dec
shr
loope
icebp
add
test
jmp
inc
xor
ins
jge
xchg
jge
xchg
jne
out
aad
(bad)
and
mov
push
xchg
out
cli
inc
sbb
dec
mov
dec
loopne
je
jge
sbb
sbb
mov
xchg
xor
je
in
popa
xchg
sub
pop
cld
lods
or
(bad)
hlt
or
icebp
mov
gs
popa
or
add
inc
popa
inc
mov
int3
xor
xchg
add
mov
or
outs
and
icebp
das
mov
add
aas
std
es
test
or
and
outs
lock
call
pop
push
xor
popa
push
and
mov
pop
rol
dec
rol
int3
jp
ds
and
or
add
and
mov
add
or
call
mov
test
mov
ins
imul
leave
pop
cs
and
sbb
push
xchg
cmc
mov
ror
ret
daa
out
dec
mov
jne
daa
cli
pop
ds
cdq
test
xor
sbb
mov
(bad)
sahf
xor
cwde
xchg
adc
mov
into
mov
inc
adc
sub
retf
mov
adc
(bad)
adc
les
cs
add
imul
cli
ror
lds
push
cmps
addr16
push
pop
or
adc
cmps
adc
push
int
popf
cmp
xchg
push
mov
inc
sub
jbe
int
push
xor
xchg
rcr
sbb
adc
lock
adc
popa
(bad)
fs
add
clc
and
pop
mov
jle
cmp
loope
cdq
gs
mov
stc
cli
leave
pop
mov
dec
pop
shl
jne
sbb
push
in
pushf
inc
ins
fidiv
jno
sbb
add
hlt
sub
loope
mov
mov
aad
pop
xchg
jno
mov
push
into
pusha
std
mov
add
cld
and
push
dec
sub
mov
xchg
loope
js
xchg
iret
cmp
add
pop
and
fld
fmul
xchg
jns
push
stc
test
mov
xor
add
mov
call
pop
pop
in
add
xor
inc
mov
cmp
adc
ins
xor
and
jle
sbb
movs
pop
lods
shl
adc
ins
dec
bnd
or
clc
dec
inc
adc
mov
mov
push
push
rcr
and
push
(bad)
popf
xor
lods
inc
xor
mov
jns
xchg
ins
xchg
mov
adc
xor
ins
shl
mov
shl
cmps
push
rcl
into
inc
and
std
jmp
inc
inc
and
cdq
cmp
pop
loope
mov
test
push
cld
out
pop
test
add
retf
aam
shl
in
cdq
jbe
mov
push
ficom
jns
and
hlt
sub
inc
xchg
mov
xor
test
mov
or
adc
xchg
cmp
inc
cmc
cmps
repz
adc
mov
or
ret
jne
(bad)
popa
in
mov
mov
pop
mov
mov
or
aam
push
sbb
and
adc
popa
xor
add
jne
xchg
mov
lock
ins
movs
sbb
and
and
mov
adc
fiadd
cmp
jle
aad
and
mov
push
jmp
adc
xor
inc
and
pop
test
imul
pop
xchg
mov
shl
adc
je
and
(bad)
popa
mov
adc
xor
mov
push
sbb
xchg
rol
ja
je
(bad)
fs
repnz
mov
lock
mov
dec
(bad)
retf
pop
je
and
pop
inc
fnstenv
loopne
xchg
out
(bad)
icebp
outs
xchg
push
icebp
retf
aam
test
add
xor
je
ds
out
loope
in
aam
enter
mov
sub
jno
and
push
add
pop
inc
shl
call
ins
mov
inc
add
scas
and
pop
jno
adc
inc
fstp
loope
push
repnz
mov
outs
jp
or
shr
and
daa
push
cdq
fwait
imul
xor
cmps
call
push
rcl
retf
aam
cmp
xchg
jns
cwde
push
mov
xchg
xor
loope
rcl
dec
test
shr
adc
cdq
add
push
xchg
pop
cmp
inc
sbb
jns
sub
jb
leave
jb
mov
(bad)
and
xor
movs
and
jns
loope
icebp
icebp
ds
xchg
loop
mov
mov
and
aad
or
push
xchg
imul
dec
cmp
add
xor
shl
push
push
mov
jo
aad
test
repnz
mov
xor
int
sbb
and
jns
mov
enter
jmp
lea
sub
push
js
inc
xchg
sbb
fidivr
xor
scas
adc
ror
cmp
pop
inc
lea
stc
and
jno
mov
cmp
jle
aad
mov
and
into
mov
adc
inc
adc
add
pop
rol
mov
daa
xor
xor
lods
mov
push
aaa
push
inc
sbb
sub
mov
mov
add
mov
xor
fs
add
inc
je
sub
cmp
mov
pop
mov
push
push
xor
inc
jo
cli
mov
fadd
in
push
movs
lds
xchg
addr16
jnp
leave
dec
scas
aaa
mov
add
xor
or
xor
mov
pusha
add
jecxz
sbb
jne
movs
push
mov
and
repnz
or
sub
mov
mov
jno
sbb
cwde
scas
sub
and
ins
dec
clc
movs
das
or
sbb
cmp
std
fidivr
call
mov
scas
push
mov
es
pop
or
imul
jo
sbb
pop
ret
xchg
push
mov
mov
and
sbb
add
pusha
push
hlt
and
mov
inc
cli
repz
mov
fbstp
inc
lock
pop
movs
jmp
pop
push
add
stos
pop
leave
mov
mov
(bad)
add
(bad)
test
(bad)
push
jg
jle
test
icebp
nop
loope
repnz
mov
repnz
sub
dec
and
cmp
push
mov
lahf
(bad)
popf
lock
mov
repz
jmp
inc
adc
and
inc
or
push
mov
loopne
fs
push
cmps
pushf
jo
pop
clc
test
mov
dec
neg
jp
push
icebp
sub
fdiv
pop
shl
or
xor
scas
sub
mov
or
cmp
dec
cmp
retf
into
loop
setp
jmp
les
jo
inc
jnp
iret
or
and
adc
add
add
xor
xor
je
inc
lock
add
fild
inc
movs
jno
popa
test
shl
call
mov
icebp
loopne
aas
cdq
pushaw
dec
sbb
inc
test
call
push
xor
test
add
les
jge
xchg
mov
xchg
hlt
push
nop
rcr
cmp
je
cwde
in
(bad)
lds
(bad)
mov
mov
xor
mov
lock
mov
inc
jl
ds
adc
sbb
sbb
cld
shr
shl
test
clc
ror
scas
inc
and
test
into
xor
retf
ficomp
sbb
mov
test
(bad)
push
clc
leave
mov
inc
popa
mov
inc
cmp
(bad)
dec
sub
les
or
dec
ror
fiadd
jno
pop
mov
rcl
pop
ins
mov
movs
adc
sbb
jmp
jo
lods
push
scas
xor
stc
nop
and
pop
inc
jl
mov
xor
jmp
mov
jl
fisubr
les
inc
dec
add
sahf
pop
and
or
out
cmp
mov
cs
movs
pop
jl
or
nop
mov
shl
sbb
sub
dec
ss
jno
mov
cmp
mov
test
push
inc
ins
adc
cmc
(bad)
and
ins
lods
dec
mov
enter
enter
jecxz
xor
sbb
and
and
je
(bad)
xchg
sub
movs
aam
mov
add
and
outs
jmp
cld
mov
mov
sbb
add
shl
or
mov
adc
inc
pop
fadd
push
cs
in
or
in
push
xchg
cmps
sub
mov
inc
js
call
adc
dec
icebp
lods
dec
lods
or
sar
cmc
adc
retf
mov
push
mov
movs
(bad)
fnstenv
int
xchg
mov
sub
mov
icebp
stos
xor
test
cmp
nop
rol
hlt
das
dec
stos
icebp
and
dec
push
adc
push
bound
pop
sub
inc
retf
test
mov
jmp
xchg
hlt
push
cdq
sbb
mov
adc
xchg
add
inc
scas
leave
dec
cs
in
mov
je
cdq
mov
xor
push
addr16
dec
push
adc
and
test
cmp
jp
or
adc
iret
(bad)
sub
add
xor
shl
push
or
inc
nop
ret
cmp
add
out
mov
add
rcr
aad
scas
jge
mov
in
test
xchg
inc
fiadd
add
dec
add
jno
sub
in
cmp
loope
push
pop
andnps
adc
xor
jno
mov
(bad)
outs
mov
movs
or
mov
sub
jmp
add
mov
xor
push
shl
call
xor
mov
in
dec
mov
cmp
cmp
mov
inc
mov
mov
pop
loopne
icebp
sbb
push
aad
cwde
mov
inc
fs
xor
lahf
mov
leave
inc
rcl
mov
fisub
fldcw
(bad)
out
mov
xor
adc
daa
ins
add
scas
inc
jo
jb
jns
js
loope
icebp
in
pop
cs
push
aad
test
(bad)
mov
mov
in
dec
and
xchg
adc
adc
add
mov
rol
enter
icebp
ins
test
cs
xor
jno
inc
or
mov
sbb
push
or
jle
pop
fsub
xchg
mov
loop
push
ins
and
mov
lea
rol
movs
movs
jmp
xchg
icebp
aad
or
cld
cmp
jno
add
cld
or
mov
cdq
outs
inc
das
enter
mov
add
scas
repnz
pop
jno
sub
xor
mov
rcr
jle
pop
test
shr
mov
imul
xchg
push
clc
shl
jmp
shl
sahf
ret
add
jno
add
scas
add
mov
lods
icebp
les
mov
shl
int
or
mov
pop
popa
adc
and
add
loope
xor
push
bound
call
movs
and
mov
sar
adc
inc
or
arpl
add
bound
mov
dec
pop
cmp
lods
push
bound
sub
jno
shl
mov
fnstenv
push
cld
xor
add
mov
xchg
clc
xor
mov
push
inc
jl
cli
mov
mov
xor
lods
mov
shl
ret
aad
mov
fimul
into
popf
adc
loope
popa
mov
les
add
xchg
in
test
shl
push
xor
jecxz
fs
adc
jno
inc
xor
ins
rcl
in
xchg
ret
cmp
test
daa
out
adc
je
xchg
icebp
shl
(bad)
int3
mov
fsubr
dec
adc
ficom
mov
sbb
js
push
xchg
xlat
scas
pop
mov
jno
outs
add
sub
aam
leave
dec
xor
cli
call
icebp
xlat
mov
mov
push
ret
xchg
jmp
popa
(bad)
movs
mov
sub
mov
test
sub
mov
test
mov
ins
and
js
push
jno
push
icebp
aad
aam
shl
xchg
dec
xor
cli
add
adc
ds
push
mov
or
push
or
sbb
bound
jb
fsub
je
dec
mov
int3
rcl
daa
hlt
sbb
adc
mov
repnz
retf
and
mov
inc
cmps
inc
jl
adc
pop
(bad)
fwait
int
push
jl
cdq
dec
cs
pop
jno
(bad)
ins
call
push
xchg
movs
and
stc
mov
test
xor
adc
push
call
add
(bad)
ds
cmp
sub
sbb
jne
pop
cs
cdq
scas
jno
add
add
jns
or
push
ror
comiss
rol
xchg
mov
rcr
fidiv
pop
inc
and
push
mov
mov
jno
sbb
mov
mov
loop
xor
imul
adc
mov
in
dec
mov
cmp
cmp
mov
inc
mov
mov
pop
loopne
icebp
sbb
push
fldenv
fs
xor
jle
call
rcl
pop
hlt
leave
sub
cs
(bad)
aas
jmp
push
cli
xor
sar
in
jle
test
outs
lahf
pop
shl
inc
push
adc
repz
xor
mov
dec
scas
jns
adc
inc
add
ret
add
out
iret
out
movs
into
add
and
xlat
xor
pusha
popa
fnstenv
mov
out
sub
inc
aad
in
in
dec
and
xchg
sbb
dec
adc
add
mov
rol
enter
icebp
ins
test
cs
xor
jno
inc
or
mov
sbb
push
in
int
mov
pop
fsub
xchg
mov
mov
add
mov
lea
shl
push
dec
mov
or
cld
cmp
jno
add
cld
or
mov
cdq
outs
inc
sub
icebp
mov
dec
scas
repnz
pop
jno
cdq
popa
dec
xor
mov
rcr
loope
mov
jle
pop
test
rcr
mov
std
adc
push
clc
shl
jmp
shl
sahf
ret
add
jno
add
scas
add
mov
sub
les
mov
in
int
or
mov
pop
popa
adc
add
add
loope
fst
bound
call
movs
and
mov
sar
adc
inc
or
arpl
add
arpl
in
inc
sbb
ret
jno
sub
(bad)
hlt
xchg
jmp
sub
outs
push
aam
pop
cmp
dec
into
and
je
dec
pop
cmp
daa
aad
outs
inc
adc
mov
add
inc
(bad)
in
sbb
xor
xor
out
les
jns
ins
xchg
push
push
dec
in
test
fcmove
xor
in
mov
xor
or
jg
(bad)
int3
loopne
cmp
mov
pop
mov
popa
pushf
jno
shl
test
call
push
push
leave
add
mov
sar
push
xor
jo
push
jl
into
dec
xor
movs
jp
clc
aam
or
fild
mov
or
adc
ins
retf
shr
or
cmps
aad
loope
mov
adc
fcmovu
pop
adc
popa
(bad)
mov
xor
mov
jp
mov
sub
xchg
add
push
xor
retf
int3
fstp
movs
(bad)
icebp
ins
or
dec
jne
loopne
test
fidiv
add
fsub
and
and
push
leave
aam
mov
inc
add
mov
push
ror
and
clc
popa
enter
and
fisub
dec
cmp
mov
sbb
inc
jns
in
cmp
or
pusha
push
mov
fist
mov
cmc
pop
xor
push
scas
repnz
dec
rcl
je
inc
inc
aas
fdivr
mov
mov
or
ds
jne
enter
in
jmp
cmp
xchg
cmp
mov
lock
retf
mov
push
div
adc
jmp
cmp
and
(bad)
icebp
push
lds
aam
in
ds
je
add
jmp
dec
mov
jns
das
loope
xor
mov
pop
arpl
(bad)
pusha
push
xor
aam
adc
push
xor
sbb
cmp
je
xor
mov
jb
push
test
hlt
push
dec
xchg
or
test
emms
push
push
stc
in
lea
in
call
lods
cmc
jmp
imul
test
mov
inc
movs
adc
out
add
push
js
sub
int3
xchg
jle
aad
movs
xchg
icebp
adc
ret
dec
jmp
ficomp
and
or
pop
pop
mov
xchg
daa
xchg
add
movs
mov
add
jno
inc
xor
sub
add
or
add
adc
pop
inc
push
and
into
push
test
outs
call
or
lock
ds
pop
mov
mov
cwde
cmps
jmp
clc
jp
loope
arpl
mov
and
cmp
mov
jne
mov
ror
add
int
adc
xor
mov
fnstcw
int
fidiv
mov
cmc
push
cdq
fistp
push
aad
mov
mov
push
popa
xlat
ss
cmp
sub
mov
test
dec
or
sbb
loop
lock
inc
cdq
xor
push
repnz
jg
sub
dec
and
adc
jo
loop
dec
(bad)
and
mov
jge
mov
pop
jmp
les
aam
cs
pop
scas
xor
adc
cdq
gs
push
rcr
push
das
test
push
add
xor
add
ins
and
xor
dec
add
mov
xor
jnp
cdq
cmp
and
fidiv
mov
in
sbb
inc
push
xor
xor
sbb
pop
dec
loop
les
jo
mov
adc
inc
mov
pop
movs
fsubr
in
in
cmc
adc
std
jne
pop
sahf
and
jb
cmp
les
les
xchg
mov
mov
push
into
pusha
std
jne
call
inc
mov
dec
add
aam
mov
mov
adc
mov
dec
popa
sar
and
xor
sub
lds
in
aam
cs
push
cld
adc
push
cld
and
push
or
je
or
nop
push
clc
xchg
cmc
fild
sub
adc
in
xor
cwde
inc
pop
inc
lods
sbb
movs
inc
fdivr
rcl
mov
pushf
fs
mov
cmp
outs
add
sub
sub
dec
pop
inc
mov
and
mov
stos
retf
test
mov
jmp
xchg
hlt
push
sbb
mov
and
sahf
dec
cmc
xlat
jmp
push
xchg
in
shl
in
add
lock
jmp
cld
jno
fldenv
into
adc
sub
dec
loope
push
mov
sub
add
dec
jno
ins
and
fstp
pushf
inc
daa
lds
pop
xchg
dec
fnstsw
sbb
cmps
inc
and
mov
ins
lea
push
dec
icebp
xlat
mov
jle
xchg
and
jbe
or
std
fs
outs
scas
shr
cmp
adc
pop
xor
les
icebp
or
jno
gs
pusha
adc
icebp
iret
ins
icebp
push
lods
inc
shl
and
outs
jmp
jl
dec
or
lds
mov
jle
test
fdivr
push
pop
test
int
push
adc
push
or
and
cmp
sbb
test
fiadd
ins
add
fs
mov
popa
in
jmp
test
add
xor
popa
add
popa
sahf
pushf
lea
je
sar
hlt
push
xchg
xchg
(bad)
dec
cwde
cmp
enter
xor
pushf
in
fs
jb
into
inc
xchg
pop
pushf
mov
xor
sbb
into
cld
or
adc
push
xor
xchg
push
cmp
cmp
dec
xor
mov
lock
sahf
jmp
pushf
fs
xlat
loope
jle
test
outs
sbb
inc
and
bound
jle
std
and
je
stos
cmps
ror
lds
jge
jecxz
in
ror
adc
xor
adc
xchg
gs
mov
loope
jb
aam
rcl
jl
mov
ret
jno
mov
out
int
push
fstp
jmp
sbb
loope
icebp
mov
pushf
inc
ja
xor
mov
cmc
popa
stc
jo
add
adc
mov
loope
mov
test
lds
stos
push
mov
jno
(bad)
and
aad
test
icebp
jne
in
and
mov
ja
adc
sub
(bad)
xchg
mov
mov
nop
jle
test
mov
js
je
add
fs
mov
mov
xchg
(bad)
test
jne
popf
and
pushf
adc
adc
mul
mov
(bad)
add
inc
loope
cld
mov
leave
psubb
ret
stos
dec
xor
int
pop
cmp
mov
test
push
sub
sahf
cmp
mov
test
and
outs
dec
enter
mov
ret
sbb
sub
loope
inc
jno
mov
jmp
or
or
cmp
pop
movs
ins
mov
lea
jmp
jb
in
or
mov
enter
sub
les
sbb
or
or
ins
adc
xor
cdq
cwde
icebp
inc
and
xor
sar
jge
add
test
xchg
dec
mov
stc
cs
pop
cmp
push
clc
rol
jno
jne
shl
dec
push
push
test
pop
pop
jns
jl
mov
(bad)
popa
xlat
xor
cwde
pop
jo
loope
lock
loope
popf
in
loope
mov
inc
sbb
(bad)
and
bound
loope
jl
or
loope
mov
cdq
xor
jl
test
loope
sbb
aam
pop
sbb
add
jno
inc
jne
push
in
cmp
inc
in
cmp
mov
stos
inc
mov
add
adc
jns
aam
mov
mov
sbb
rcr
dec
push
popa
xor
sbb
sahf
push
cs
jne
add
cmps
enter
mov
xchg
fldcw
mov
jne
push
or
jno
mov
xor
test
dec
in
and
adc
das
std
gs
jno
mov
icebp
mov
fcom
sub
pop
jns
push
jmp
ret
sub
mov
fmul
ins
out
add
retf
lock
inc
cli
adc
mov
add
xor
pop
mov
mov
in
lds
mov
adc
cmps
loope
xor
or
test
mov
cmp
pop
and
outs
cdq
add
je
push
je
dec
inc
adc
mov
xchg
lods
popa
cmp
sub
(bad)
xchg
inc
test
xor
add
add
in
jno
retf
sub
lahf
sbb
push
adc
sub
pop
rcl
jno
add
xor
stos
mov
adc
jle
aad
xchg
cwde
movs
(bad)
xor
repnz
jl
dec
mov
icebp
cmp
das
std
in
inc
fldcw
sub
fcomp
sub
add
jo
adc
adc
pop
cs
loope
lock
ret
mov
mov
(bad)
cdq
rol
cmp
add
ret
xchg
cmps
lahf
mov
mov
hlt
mov
test
lea
push
and
ss
addr16
sahf
out
sti
fist
into
pop
test
inc
xchg
jg
test
outs
lock
sbb
xor
and
movs
jb
clc
push
xchg
cmp
sbb
icebp
test
js
xor
in
stos
cwde
icebp
popa
out
jle
push
xor
adc
pop
jg
jle
sbb
loope
sbb
push
shl
adc
rol
arpl
leave
and
fadd
mov
stc
adc
sbb
mov
mov
mov
and
mov
call
xchg
and
aam
adc
or
les
loope
push
mov
inc
and
xor
cdq
out
pop
ror
mov
les
dec
cs
fsubp
into
xchg
std
jo
(bad)
test
mov
mov
das
sbb
jns
dec
add
jge
clc
jns
or
push
inc
cmps
add
loope
ficom
xchg
sar
xchg
test
dec
mov
mov
adc
test
and
xchg
mov
or
out
mov
enter
popa
jecxz
and
aam
xchg
cld
lods
or
rol
sbb
add
xchg
fs
rcl
jecxz
xor
(bad)
out
xchg
leave
push
pop
dec
mov
lock
shl
hlt
in
xor
fs
icebp
cs
les
les
mov
mov
call
je
leave
dec
(bad)
fcmovbe
xchg
sub
mov
and
inc
pusha
inc
popf
in
(bad)
and
cmps
ja
xor
sub
jns
cmps
mov
adc
and
ja
(bad)
mov
(bad)
or
aad
add
xor
cs
push
test
jle
outs
sbb
test
xor
add
and
into
pop
test
jl
add
gs
lock
mov
vmovupd
retf
mov
popf
cmp
shr
dec
leave
jmp
sbb
loope
js
shl
int3
fs
in
popa
icebp
je
jmp
lods
rcl
rcr
jecxz
jp
imul
mov
jae
fcom
call
inc
add
es
push
pop
in
dec
cmp
stos
aam
pop
aas
dec
cmp
js
div
leave
adc
lea
mov
and
push
adc
sar
retf
inc
data16
popa
int
mov
inc
or
mov
and
std
pusha
push
arpl
les
xchg
lock
push
mov
cli
sbb
fiadd
out
mov
inc
xor
retf
pop
dec
mov
dec
sub
call
jmp
dec
in
aad
mov
xor
sbb
popa
add
icebp
call
jmp
add
call
popf
stc
mov
mov
push
mov
int
aad
push
xor
clc
int
rcr
sub
inc
sahf
or
sahf
add
xor
mov
std
imul
call
and
add
cli
adc
push
cli
sub
mov
add
sub
xchg
enter
and
jno
mov
gs
push
xchg
dec
fst
popa
cmp
cmp
mov
adc
test
jns
add
push
test
jo
mov
into
stc
shr
mov
dec
ret
cs
push
pop
sahf
mov
mov
mov
cwde
jne
dec
inc
inc
mov
rol
lahf
jp
movs
push
push
repnz
inc
fnsave
je
xor
retf
xchg
mov
retf
mov
cdq
xchg
shl
add
inc
and
mov
pop
adc
pop
sar
loop
push
outs
jg
test
fld
mov
sbb
in
mov
scas
lds
cmc
mov
imul
test
jl
(bad)
sub
mov
jno
retf
lds
pop
and
push
push
sub
mov
inc
cmp
jne
pop
mov
repz
xor
mov
test
test
cmp
mov
jne
sar
inc
test
mov
cli
enter
jb
test
lods
lods
mov
adc
sbb
mov
adc
push
push
nop
mov
mov
mov
inc
inc
adc
fidivr
rcr
and
(bad)
shl
mov
add
mov
and
ss
pop
movs
sub
lock
or
mov
adc
adc
(bad)
mov
cs
sbb
shr
xor
mov
jno
add
popf
scas
add
icebp
jns
adc
pop
sub
stos
(bad)
je
cmps
test
popa
std
xor
xor
mov
xchg
icebp
les
mov
mov
aaa
bound
(bad)
je
and
and
xchg
mov
loope
icebp
loope
sub
add
add
xor
sub
jne
sub
shl
sub
add
cmp
push
add
jno
retf
dec
hlt
or
movs
push
and
push
push
and
push
mov
mov
dec
test
dec
movs
xchg
sbb
pop
jb
mov
adc
cmps
enter
adc
adc
xchg
jmp
xchg
movs
jno
dec
jae
adc
xor
jno
add
dec
ror
call
xchg
sbb
fidivr
add
repnz
or
sbb
icebp
dec
out
mov
inc
adc
stc
cs
std
jno
mov
cmp
jle
aad
mov
and
adc
dec
adc
test
rcr
sbb
mov
rcr
retf
push
fstp
mov
scas
sub
jb
or
outs
sbb
bound
xor
popa
stc
pop
and
xchg
adc
imul
push
dec
test
shr
add
cdq
cmovno
push
test
cmc
inc
sbb
mov
cmc
jb
leave
jg
xchg
mov
call
outs
xor
movs
and
jns
loope
icebp
or
and
or
and
lods
dec
or
push
xchg
imul
dec
cmp
add
add
rol
push
mov
cs
repnz
popf
out
cwde
gs
mov
push
hlt
xor
and
icebp
cmps
dec
ins
rol
(bad)
hlt
out
jmp
lods
ins
adc
mov
dec
fadd
sub
int3
fs
popa
icebp
popf
out
mov
ins
xchg
int
call
addr16
push
outs
ret
pop
xchg
test
iret
mov
sub
call
jg
xchg
out
xor
inc
hlt
xchg
pop
in
push
inc
popa
std
sbb
stos
xor
sbb
out
mov
cmp
icebp
dec
rol
mov
xchg
add
std
test
fwait
push
ret
cdq
scas
inc
push
sbb
ins
test
mov
xor
jg
add
adc
jnp
xor
test
mov
pushf
(bad)
lock
js
enter
xlat
ja
fcom
nop
cli
jno
mov
shr
fs
aaa
rol
push
mov
test
aaa
scas
mov
adc
mov
cs
push
in
data16
xchg
outs
aas
sbb
std
push
repnz
mov
in
in
popa
jmp
mov
adc
xchg
mov
sbb
jmp
and
mov
mov
and
ds
je
push
out
dec
popa
out
stos
jp
add
jp
and
adc
in
add
pop
push
(bad)
mov
mov
sbb
rcr
loope
pop
or
adc
fxch
push
dec
adc
fwait
aam
js
lock
inc
out
retf
jne
adc
inc
inc
popa
out
jno
int3
add
mov
mov
lods
jmp
mov
movs
adc
sub
les
push
(bad)
jno
add
xor
push
das
movs
adc
mov
fldcw
sub
xchg
mov
outs
jns
pusha
adc
and
cmp
jle
xchg
and
addr16
adc
ret
add
xor
mov
shl
hlt
(bad)
rep
fcomp
movs
int3
and
sub
test
repnz
pop
cli
adc
add
xchg
test
js
cmp
rol
push
popf
lods
mov
or
int3
icebp
xchg
jmp
xchg
dec
mov
shl
add
mov
test
xchg
add
test
fild
cmps
dec
mov
and
popa
and
popa
jns
mov
fldcw
mov
loope
aas
pop
dec
movs
sbb
and
xor
rcl
adc
inc
pop
push
fst
imul
adc
or
inc
int
mov
iret
aas
adc
xor
mov
mov
sbb
dec
outs
or
shl
push
and
push
push
mov
inc
or
push
sbb
rcl
mov
cmp
sub
lea
adc
pop
retf
dec
hlt
or
movs
gs
sub
and
push
push
and
push
mov
mov
inc
test
cdq
movs
xchg
sbb
add
je
(bad)
fs
stc
or
mov
mov
in
dec
(bad)
retf
pop
je
and
pop
dec
icebp
xor
out
mov
icebp
outs
xchg
push
icebp
retf
aam
test
add
aaa
jb
mov
movs
sub
dec
nop
or
push
pop
je
and
(bad)
shl
add
mov
push
sbb
sahf
sar
add
cmp
test
repnz
and
imul
repz
inc
int
fsub
popa
aad
adc
cmp
jle
aad
mov
and
into
mov
adc
push
adc
test
rcr
xor
mov
rcr
jecxz
mov
call
and
inc
(bad)
or
outs
sbb
bound
xor
popa
stc
inc
and
xchg
adc
imul
push
dec
test
shr
movs
mov
inc
ret
adc
push
rcr
inc
sbb
mov
sub
jb
leave
arpl
fiadd
or
call
jae
out
shl
movs
and
jns
loope
icebp
xchg
ds
xchg
loop
mov
mov
and
int
or
push
xchg
imul
dec
cmp
add
adc
sahf
clc
xor
rcr
push
push
mov
cs
repnz
movs
out
cwde
gs
mov
sbb
loope
shl
adc
sbb
gs
clc
and
push
shl
jge
mov
loope
int3
fs
cwde
fnstcw
add
out
cld
fs
in
push
xor
icebp
aam
push
xchg
sbb
push
sar
and
test
jae
leave
movs
dec
mov
stos
ins
push
test
aad
les
mov
adc
retf
mov
sbb
fwait
xchg
jle
sbb
mov
cs
ins
popf
xor
mov
lock
clc
call
mov
sbb
sbb
mov
inc
dec
scas
in
(bad)
push
out
(bad)
popf
inc
xchg
loope
not
mov
mov
jge
xchg
lock
cmp
mov
out
add
dec
rcr
mov
in
lods
in
daa
rol
and
adc
dec
mov
ss
pop
mov
xchg
mov
aad
repnz
dec
sub
arpl
mov
add
and
push
sbb
or
dec
dec
xchg
test
add
sahf
out
aam
adc
dec
hlt
popa
lock
movs
ret
mov
les
pop
xor
leave
xchg
add
je
cmp
int3
popa
pop
test
ror
sar
mov
jl
dec
mov
test
push
sub
ja
push
add
jno
inc
xor
dec
push
shr
or
or
mov
mov
jno
xor
mov
inc
je
adc
adc
leave
lds
aad
mov
test
and
adc
popf
stc
mov
(bad)
shl
jno
shl
mov
mov
sar
xor
and
into
fadd
icebp
cs
int3
jp
jle
outs
push
lds
out
add
push
cmps
cmp
inc
sbb
aam
(bad)
dec
loopne
jb
fild
icebp
in
movs
push
adc
into
popa
inc
cld
and
adc
or
push
in
xchg
xor
or
in
push
sbb
mul
add
xor
pop
jb
push
inc
out
mov
mov
cmc
dec
test
das
pop
xchg
mov
inc
stos
xchg
out
shl
sub
inc
push
leave
inc
je
pop
pop
jo
sti
push
fld
loope
repnz
stos
mov
sub
es
js
sbb
and
xor
retf
shl
ror
ss
in
fdivr
ja
int3
and
adc
cmp
inc
bound
fidivr
mov
xchg
or
push
xor
xor
add
bound
cs
lea
test
loope
icebp
pop
ja
(bad)
je
das
xchg
push
iret
sub
retf
sar
mov
test
leave
scas
into
xchg
add
jno
mov
loop
ins
xor
icebp
in
cmp
push
lods
push
popa
aad
xor
inc
nop
push
xchg
mov
cmps
mov
pop
ret
test
dec
jl
mov
dec
xor
(bad)
pop
pop
loope
icebp
mov
loope
sbb
and
call
lds
shr
mov
xor
xchg
bound
pop
ds
or
pop
sbb
and
rcr
outs
and
loop
mov
push
repnz
or
js
jmp
push
sub
mov
mov
add
ror
leave
int3
mov
pop
out
(bad)
loopne
cdq
rcl
outs
mov
inc
fimul
test
ds
xor
inc
cmps
cmp
sub
cmp
sar
xchg
cmp
ret
lahf
jbe
or
adc
sahf
push
cdq
pushf
add
push
jecxz
inc
cmp
or
sbb
sbb
or
push
pop
je
leave
adc
lea
and
scas
shl
fwait
loope
xor
pop
xchg
cmc
xor
inc
outs
test
enter
xchg
jno
add
pushf
cld
push
mov
jle
sti
test
jecxz
fld
adc
outs
lahf
xchg
sub
les
outs
icebp
cdq
dec
cmp
push
jno
add
or
ficomp
xlat
or
or
xchg
dec
shr
imul
std
sahf
arpl
inc
bound
mov
mov
mov
inc
and
and
jge
or
sbb
enter
mov
lock
shl
aam
pop
ds
shr
add
out
in
out
lea
ret
shl
mov
add
mov
xchg
sub
inc
cwde
inc
xor
push
mov
jb
movs
ror
loope
std
mov
leave
rol
push
add
leave
and
lods
sub
arpl
xchg
mov
fstp
shl
les
xor
xor
jo
lds
frstor
icebp
sbb
aam
mov
fimul
test
inc
(bad)
cmp
lea
sub
loope
sbb
pop
pop
push
movs
add
xchg
mov
inc
cs
cwde
xchg
sbb
push
icebp
sub
movs
stos
dec
push
xor
sbb
mov
sub
and
xchg
jp
push
inc
rcr
and
xor
jno
mov
sbb
push
(bad)
ins
movs
xchg
push
and
dec
adc
adc
inc
loope
push
daa
xor
in
mov
dec
mov
lock
sar
sbb
adc
mov
push
ret
jno
sub
ror
mov
jmp
outs
aas
das
popa
repz
xor
jno
mov
leave
add
(bad)
sbb
push
and
mov
aad
push
mov
ds
adc
push
xchg
pusha
inc
rcl
popa
push
cwde
jo
mov
mov
inc
push
xchg
sbb
les
push
cdq
fwait
imul
and
repnz
les
lock
and
cmp
dec
push
into
add
sar
adc
xchg
xchg
push
test
shr
icebp
pop
xchg
mov
sbb
xor
stc
mov
and
jne
nop
dec
pop
fndisi(8087
jle
xchg
ret
hlt
mov
and
push
call
add
(bad)
ds
cmp
fcom
fnstenv
sbb
xor
dec
(bad)
sahf
inc
xor
shl
hlt
loope
jb
jns
lahf
leave
in
dec
adc
add
mov
rol
enter
icebp
ins
test
das
sub
xor
jno
inc
or
mov
sbb
push
loope
int
mov
pop
fsub
xchg
loope
add
call
and
(bad)
loop
push
movs
movs
jmp
xchg
icebp
dec
ror
cmp
jno
add
std
or
mov
cdq
outs
inc
sub
icebp
mov
dec
scas
repnz
pop
jno
push
popa
dec
xor
mov
shl
test
mov
fs
mov
lds
and
push
clc
shl
jmp
shl
lahf
ret
add
jno
add
scas
add
mov
or
les
mov
sub
push
stc
and
add
loope
or
bound
call
movs
and
(bad)
rcl
cmp
jno
inc
or
arpl
add
arpl
in
inc
sbb
ret
jno
sbb
gs
das
jb
fdiv
xchg
mov
xchg
mov
retf
mov
icebp
jno
in
push
add
int3
xor
or
or
sbb
fiadd
shl
mov
adc
cli
cs
popa
shr
adc
mov
xchg
popa
mov
push
or
inc
add
add
das
fld
mov
pop
les
push
mov
mov
je
add
and
adc
and
test
sbb
les
jns
ds
shl
call
aaa
out
jg
xor
fcom
push
xchg
jp
mov
and
jb
adc
and
inc
mov
mov
mov
xchg
push
jp
ror
popa
or
and
or
sub
sub
int3
or
jne
mov
sub
mov
popf
lea
rcl
sub
imul
mov
sahf
push
mov
or
dec
mov
push
dec
add
into
and
sahf
add
pop
pop
and
push
jno
outs
jno
outs
add
shl
loopne
mov
mov
push
std
scas
shr
xor
popf
mov
and
cmp
test
rcl
(bad)
xchg
xor
rol
cmc
or
fmul
aad
adc
lods
lods
into
mov
cmp
add
into
mov
push
ins
mov
ins
movs
xchg
icebp
mov
mov
leave
out
(bad)
xchg
push
mov
add
and
loope
icebp
sbb
adc
sar
fisubr
out
mov
jo
fs
jge
iret
sar
movs
jb
movs
bound
push
cmc
loopne
xchg
and
inc
xchg
jno
ret
inc
mov
push
xchg
outs
add
lock
push
retf
std
sahf
mov
pushf
rcl
cs
movs
push
mov
hlt
shl
cld
mov
fmulp
shl
xchg
dec
clc
dec
mov
cwde
sub
cmc
cs
in
sahf
into
in
add
inc
out
jno
mov
xchg
dec
or
movs
outs
add
ds
sbb
in
add
mov
(bad)
into
adc
movs
jle
aad
adc
push
push
test
iret
sahf
pop
jo
mov
cld
and
cs
or
outs
jl
ds
xchg
test
push
sub
in
adc
ds
xchg
dec
adc
push
popa
vmovapd
pop
sub
pop
into
xchg
inc
mov
inc
mov
outs
in
add
pop
mov
jle
fmul
aad
add
xor
movs
cdq
mov
adc
in
mov
push
sub
cmc
lock
test
cwde
out
aad
test
fnstcw
in
dec
mov
push
pop
les
mov
lea
into
inc
int
adc
vmovaps
in
add
add
rol
and
mov
cs
or
aad
add
add
int
adc
inc
push
mov
rcr
mov
inc
xchg
outs
sub
pusha
adc
enter
push
into
and
sahf
loope
cwde
mov
and
cwde
jle
aad
leave
pop
mov
xor
cs
icebp
xor
mov
lea
xor
pop
dec
retf
dec
mov
jno
fmul
mov
popf
jne
(bad)
xchg
and
and
mov
xchg
movs
dec
mov
push
gs
pop
inc
ficom
pushf
cld
mov
xor
ds
cs
push
jle
outs
jle
outs
push
in
mov
shl
cwde
clc
call
inc
scas
dec
sub
add
jno
outs
push
pop
ds
cs
add
out
mov
test
mov
or
outs
or
push
mov
mov
dec
mov
dec
cs
call
push
inc
aam
sub
test
mov
sub
jno
mov
cs
and
ins
sbb
mov
fcom
out
mov
lahf
and
clc
mov
test
sbb
in
pop
cmp
je
aad
les
das
ds
test
push
into
sahf
and
out
mov
adc
ds
sbb
sbb
loope
push
in
pop
das
int3
lods
fdiv
sahf
lahf
mov
mov
pop
dec
or
and
xchg
ds
lods
scas
mov
call
pushf
mov
loope
pop
ds
dec
xchg
lds
js
ins
sbb
mov
pop
sub
xchg
scas
mov
(bad)
pop
out
cld
stos
mov
sub
push
lahf
push
sub
jge
pop
hlt
jge
mov
inc
mov
inc
mov
inc
in
add
cmp
or
lock
sub
inc
fisubr
clc
call
mov
pop
cmp
cmp
push
xor
inc
(bad)
xor
(bad)
cld
adc
xchg
cmp
inc
adc
stc
ins
xchg
mov
jle
and
pop
shl
mov
(bad)
jno
fcomp
std
scas
dec
pusha
imul
sbb
mov
adc
push
test
out
inc
mov
(bad)
fdivr
sbb
lods
cmp
lea
mov
mov
test
popf
test
cld
ins
adc
icebp
popa
mov
test
popf
pusha
popa
(bad)
xor
mov
add
ror
mov
sbb
dec
mov
jne
and
fld
movs
jno
add
xchg
xor
push
pop
push
jb
cmc
sbb
sahf
rcr
cld
lods
inc
jecxz
leave
pop
xchg
xor
fmul
jne
mov
fs
into
mov
int
mov
(bad)
fiadd
std
adc
push
movs
mov
jle
aad
in
add
into
and
xor
cld
and
pop
mov
jno
mov
ins
test
into
in
cld
adc
movs
push
fidiv
pop
mov
jle
fmul
aad
adc
and
fld
adc
test
mov
aam
xor
shl
lods
inc
cwde
out
leave
sub
jno
inc
shl
xor
sub
mov
add
gs
popa
add
mov
int3
xor
push
sbb
ins
movs
fmul
push
test
lea
je
sahf
xchg
mov
cmp
inc
jne
ds
xchg
dec
or
movs
outs
add
sub
imul
mov
cmp
add
xchg
xor
int
aad
adc
mov
ins
cld
pop
inc
pcmpeqb
and
loope
sahf
adc
sub
sbb
aad
push
fdivr
mov
mov
inc
mov
dec
ins
xor
pop
mov
sub
shl
adc
add
popa
call
xor
popa
lods
or
scas
popa
loope
inc
pop
dec
mov
inc
xchg
scas
mov
(bad)
in
movs
mov
push
cmp
cmp
jl
ds
int3
and
icebp
dec
in
movs
mov
pop
add
dec
movs
fmul
imul
movs
(bad)
in
movs
mov
add
test
cmc
lock
ret
xchg
adc
aad
cld
and
gs
ins
xor
sbb
pop
jns
cs
pop
into
mov
in
jno
mov
or
outs
add
in
add
inc
cwde
nop
push
out
jno
test
cs
sar
or
jb
add
pop
push
ds
scas
xor
lock
mov
push
mov
sub
mov
inc
lods
sub
dec
inc
mov
inc
in
scas
jne
add
(bad)
mov
es
add
cs
adc
nop
sbb
pop
cs
adc
push
fcomp
int3
jmp
pop
jle
popa
mov
enter
dec
mov
lock
or
gs
xor
loope
mov
shl
in
dec
out
(bad)
sahf
push
jo
fs
loope
and
je
xor
scas
shr
fld
call
xor
popa
icebp
jle
nop
push
test
jne
call
push
jo
mov
add
mov
outs
adc
test
adc
je
lods
inc
jo
and
dec
mov
pop
pop
and
jle
fmul
inc
mov
mov
add
xor
imul
aad
push
pop
jl
and
or
xor
xchg
add
rcr
mov
push
jno
push
aad
pop
mov
je
popa
inc
jo
inc
in
rcr
fcom
rol
cmp
dec
mov
in
mov
add
jne
lds
pop
lds
cmc
shl
mov
leave
faddp
mov
movs
lock
and
pop
fldcw
xor
in
adc
in
shl
push
dec
mov
mov
(bad)
xor
xor
sbb
jle
aam
push
fdivr
mov
fs
jl
dec
mov
jne
sub
sbb
xchg
cmp
pop
push
mov
pop
pushf
int3
and
into
cmp
mov
and
jne
inc
sbb
pop
movs
dec
push
push
int3
pop
outs
push
int
cmc
lock
(bad)
sbb
xor
jns
cmp
(bad)
outs
push
rcl
in
scas
fmul
sub
jno
mov
cs
jle
fisub
sbb
(bad)
ficomp
lods
inc
cwde
out
outs
lods
push
mov
xor
scas
ins
dec
push
mov
cmp
cmp
lods
cdq
jns
sahf
clc
mov
mov
lods
or
aad
push
fdivr
pop
cs
gs
shr
mov
mov
out
add
add
xchg
mov
jle
pop
lds
cwde
cmp
adc
push
fmul
std
adc
movs
lock
in
push
push
mov
lea
into
adc
xor
xor
dec
mov
push
and
and
add
lea
into
push
int
push
fmul
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
inc
mov
xor
mov
xchg
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
popa
and
jne
add
jno
inc
xor
mov
test
xchg
test
xchg
cmc
movs
lds
xor
jno
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
ja
shl
xchg
sbb
mov
inc
and
popa
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
sahf
add
add
jno
inc
into
push
shl
xchg
jle
xchg
icebp
mov
and
adc
popa
adc
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
push
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
sahf
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
mov
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
push
push
push
adc
pop
adc
jg
and
pop
and
xchg
enter
(bad)
loop
int
ret
inc
push
pop
add
sbb
ins
add
adc
inc
pop
ds
mov
xchg
in
xchg
nop
aad
aam
xor
push
pop
pop
and
xor
shl
aad
loop
xlat
(bad)
mov
xchg
aad
shl
pop
push
or
pusha
jge
pusha
inc
push
xor
loopne
cmps
fld
scas
mov
push
push
and
adc
sub
adc
xor
test
shl
in
stc
xchg
mov
xchg
dec
xor
arpl
pushaw
push
adc
scas
vpsubusb
out
cmc
in
loop
lds
push
pop
or
jle
add
add
ror
ret
xchg
nop
int3
loope
mov
sub
xor
xor
pop
jl
dec
and
aas
lods
mov
lock
(bad)
(bad)
mov
lods
aam
and
aas
push
add
outs
or
jne
push
jbe
xchg
repnz
repnz
mov
scas
ret
popa
xor
pusha
add
adc
shl
repz
int
aad
jle
adc
push
adc
arpl
push
gs
and
fsubp
mov
shl
mov
inc
xor
pop
push
js
inc
xor
repz
out
shl
mov
mov
push
jb
adc
jbe
push
add
nop
loope
fild
(bad)
(bad)
mov
or
jne
adc
gs
popa
icebp
(bad)
lahf
mov
mov
mov
sub
inc
and
jb
xor
in
icebp
fdivp
movs
in
(bad)
mov
push
adc
push
xor
and
add
xchg
mov
xchg
mov
in
nop
rcl
gs
and
adc
xor
xor
test
mov
shl
out
xor
inc
outs
add
push
bound
push
cs
adc
loope
mov
(bad)
stc
test
scas
icebp
xchg
sbb
push
and
inc
pusha
and
jae
and
mov
lds
mov
scas
ret
and
inc
pop
jae
jo
adc
push
xor
shl
call
mov
aas
pop
push
pusha
add
push
inc
xor
jle
add
loope
ficom
xchg
and
add
add
arpl
js
pusha
and
mov
mov
in
mov
stos
(bad)
mov
out
sub
inc
and
push
inc
data16
inc
and
lods
in
mov
mov
mov
and
jle
jle
add
rcl
fadd
mov
test
cmps
shl
and
bound
push
dec
xor
test
mov
rol
test
aad
inc
mov
sub
gs
push
xor
test
mov
(bad)
(bad)
mul
sahf
test
inc
xor
vmwrite
and
(bad)
loopne
shl
(bad)
xchg
out
rol
pusha
cmp
jb
jb
popa
jae
add
lds
shl
mov
icebp
mov
outs
and
jne
jle
es
jno
cmp
shl
jecxz
xchg
xchg
xchg
loope
repnz
das
inc
aas
imul
jb
pusha
jge
push
jle
adc
mov
icebp
xchg
and
mov
das
push
push
inc
or
adc
arpl
and
xor
in
hlt
loopne
cmc
scas
enter
add
xor
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
bound
jno
adc
popa
add
adc
mov
sti
aam
cmc
jmp
lahf
mov
mov
loopne
adc
jno
push
jge
push
and
sbb
(bad)
(bad)
xchg
sub
outs
pop
pop
jns
cmp
cwde
adc
repnz
xchg
add
popa
popa
and
jno
mov
xor
dec
mov
jnp
(bad)
sahf
fwait
scas
loope
xchg
jmp
ins
pop
imul
push
ja
add
inc
xchg
xor
icebp
mov
loope
icebp
mov
and
and
ja
push
outs
cmp
or
mov
scas
int3
(bad)
mov
cmc
cmps
push
and
xor
and
jno
xor
adc
mov
xchg
mov
shl
and
aas
sbb
adc
adc
bound
in
out
ret
out
int
(bad)
(bad)
mov
shl
add
inc
inc
push
jno
push
and
popa
popa
icebp
xchg
xchg
icebp
mov
icebp
in
fadd
xchg
mov
jae
arpl
pop
xor
jne
push
add
push
xchg
mov
loope
rcl
xchg
jmp
sbb
in
popa
and
mov
clc
shl
loope
lds
xor
dec
push
inc
gs
das
popa
mov
adc
adc
repnz
icebp
pop
rcl
mov
arpl
call
mov
jmp
fimul
loope
in
clc
adc
push
popa
push
fiadd
test
inc
add
icebp
and
mov
out
ret
pop
popa
and
outs
and
add
shl
sub
mov
or
inc
add
inc
inc
ins
add
adc
dec
repnz
and
mov
jae
movs
push
mov
and
inc
mov
push
adc
xchg
xchg
push
push
movs
clc
sub
mov
ret
ins
xor
imul
and
shl
ror
aas
std
fs
mov
repz
inc
nop
outs
movs
push
add
xchg
inc
ds
mov
add
enter
sub
shl
ds
sbb
inc
inc
jmp
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
inc
xor
loope
icebp
xchg
and
(bad)
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
jg
popa
adc
dec
xor
mov
xchg
xchg
out
xchg
test
xchg
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
inc
adc
mov
icebp
in
loope
icebp
(bad)
mov
inc
push
adc
je
xor
je
push
ins
adc
movs
(bad)
shl
repnz
les
push
adc
sbb
push
push
popa
pop
and
(bad)
hlt
test
shr
jno
adc
adc
push
and
jno
cmp
icebp
mov
and
adc
add
xor
push
loope
icebp
fist
mov
popf
sub
sbb
jne
and
and
test
xchg
icebp
mov
and
popa
add
gs
adc
inc
xor
in
(bad)
call
mov
mov
popa
add
add
adc
sub
push
mov
movs
lds
xchg
icebp
mov
and
popa
add
add
jno
inc
xor
mov
icebp
repz
mov
mov
and
or
add
push
inc
aaa
xor
test
icebp
xchg
shl
xchg
and
mov
inc
and
popa
add
je
pcmpgtw
aaa
xor
mov
xchg
mov
shl
xor
push
inc
outs
pop
fs
inc
jb
dec
popa
adc
(bad)
shl
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
out
test
shr
push
push
xor
jno
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
xor
inc
xor
loop
mov
xor
icebp
mov
and
popa
add
add
jno
inc
xor
mov
icebp
hlt
rcl
rol
pop
inc
popa
add
pshufw
xor
test
mov
movs
out
nop
out
loope
icebp
(bad)
xor
add
add
jno
inc
xor
mov
icebp
xchg
out
loope
mov
and
xor
add
add
pop
and
push
shl
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
pop
jno
inc
xor
xor
icebp
mov
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
lds
xchg
and
mov
inc
and
popa
add
add
sbb
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
add
and
xchg
icebp
mov
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
jno
add
icebp
mov
and
loope
icebp
xchg
and
push
shl
mov
add
xchg
add
xchg
jno
shl
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
ucomiss
xor
or
mov
mov
cmc
jno
(bad)
sahf
ss
ds
sar
push
jle
outs
jle
xchg
jmp
push
xor
sahf
adc
mov
shl
jle
xchg
repnz
imul
sahf
(bad)
shr
(bad)
sahf
adc
fidivr
sti
jge
jg
mov
pop
xor
lds
retf
jbe
xor
mov
icebp
xchg
and
mov
inc
and
popa
or
add
jno
inc
xor
adc
loope
icebp
xchg
and
dec
cmp
add
out
(bad)
sahf
out
mov
dec
xor
mov
push
outs
jle
xchg
icebp
mov
fisubr
adc
enter
mov
retf
mov
jno
outs
jle
outs
push
pop
xlat
rol
scas
into
sahf
dec
jno
mov
cs
push
jle
xchg
xchg
push
outs
push
pop
ds
cs
dec
mov
mov
cs
push
jle
outs
jle
jns
movs
ds
cs
(bad)
mov
mov
mov
dec
mov
gs
outs
jle
outs
push
pop
ds
rol
scas
into
sahf
dec
jno
pop
into
scas
ds
cs
push
pop
icebp
xchg
and
dec
cs
add
(bad)
sahf
out
mov
inc
xor
mov
cvtps2pd
shl
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
mov
jno
add
jno
inc
xor
mov
icebp
xchg
shl
xchg
icebp
mov
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
adc
popa
inc
jno
inc
popa
push
shl
xchg
and
mov
add
shl
popa
add
add
jno
inc
xor
shl
xchg
and
mov
inc
and
popa
add
add
jno
inc
popa
push
shl
xchg
and
mov
inc
and
pusha
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
xor
jno
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
shl
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
shl
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
push
popa
adc
inc
popa
push
shl
rol
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
shl
xchg
icebp
mov
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
icebp
mov
jno
xor
jno
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
repnz
and
xchg
mov
mov
inc
and
push
push
jno
dec
js
mov
mov
out
loope
call
das
pop
xor
jle
add
pop
jb
popf
ret
xchg
in
out
lock
ss
pop
or
or
pop
pop
dec
call
loopne
shl
push
add
pop
cmp
push
ins
sbb
in
mov
fldenv
jno
add
jno
inc
and
pop
mov
icebp
loope
icebp
xchg
shl
xchg
(bad)
cmps
(bad)
mov
(bad)
mov
xchg
xchg
cmp
enter
add
add
jb
inc
aas
dec
sub
xchg
test
xchg
cmc
movs
lds
aaa
addr16
pop
sbb
sub
aaa
pop
push
mov
mov
xchg
out
mov
cmp
cmp
push
outs
or
outs
add
dec
cmp
mov
mov
in
stos
retf
mov
cmp
jp
jle
addr16
dec
cmp
mov
std
ret
mov
lods
int
(bad)
or
sbb
pop
sbb
sub
cmp
sub
in
(bad)
sahf
ret
into
mov
outs
push
push
outs
jle
outs
adc
dec
ds
cs
mov
neg
mov
and
push
push
adc
push
xor
inc
cs
mov
xchg
mov
movs
lds
adc
arpl
pop
fs
and
aaa
mov
cmps
not
out
out
(bad)
cmps
(bad)
mov
dec
sub
push
outs
pop
movd
cmp
dec
aaa
mov
mov
cwde
clc
out
xchg
cmp
jp
push
push
sbb
push
cmp
dec
aaa
mov
mov
mov
aas
dec
das
jg
push
sub
jg
push
aas
pop
das
dec
ds
mov
sahf
(bad)
out
xchg
add
inc
and
outs
push
movd
add
jno
xor
ret
mov
out
rol
add
inc
and
jle
inc
push
add
jb
xchg
xchg
les
aam
in
hlt
mov
daa
push
aaa
daa
inc
aaa
push
pop
addr16
(bad)
lds
ret
shl
cwde
add
sbb
pop
sub
cmp
jp
push
mov
jle
outs
jle
outs
push
pop
ds
xchg
mov
icebp
xchg
and
mov
inc
and
popa
add
adc
inc
xor
movs
les
out
not
sub
pop
or
js
loop
cmc
dec
sub
lods
bound
(bad)
in
popf
loope
sub
shl
jno
fs
ret
xchg
xchg
xor
and
jg
dec
xchg
hlt
test
sti
add
xor
rcl
sub
mov
and
xor
jno
add
jae
inc
xor
movs
aad
in
in
mov
movs
(bad)
ficom
mov
icebp
xchg
xor
aam
and
xor
add
adc
fs
mov
les
in
test
inc
aaa
push
pop
addr16
ja
pop
ja
inc
es
cmps
(bad)
mov
xchg
xchg
mul
xchg
mov
test
cmp
imul
sbb
pop
cmp
call
clc
cwde
enter
sub
pop
or
js
or
dec
sub
test
push
xchg
clc
call
stos
fstp
mov
fnstsw
or
dec
cs
ds
jns
push
out
mov
sahf
shl
mov
jno
popa
add
inc
and
push
adc
xchg
loope
shl
mov
adc
popa
add
inc
and
dec
sbb
adc
shl
mov
adc
add
xor
and
push
and
pop
je
out
xchg
in
aam
les
clc
jecxz
je
fs
xor
and
pop
cs
jle
in
xchg
in
fstp
scas
inc
loopne
mov
sbb
pop
cmp
mov
jle
jmp
fstp
scas
dec
in
dec
or
dec
sub
jle
jmp
call
cmp
scas
into
sahf
(bad)
popf
ins
jl
ins
or
shl
push
jge
adc
popa
adc
inc
xor
scas
fidivr
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
lock
and
lock
and
arpl
jae
add
jb
inc
xor
mov
test
xchg
test
xchg
call
inc
and
jne
add
inc
xor
les
xchg
test
xchg
mov
lock
inc
daa
push
aaa
addr16
ja
pop
push
push
mov
and
popa
add
add
jno
inc
adc
rcr
test
xchg
hlt
in
hlt
xchg
les
push
add
aad
call
xor
les
in
hlt
xchg
lds
push
add
adc
fs
adc
and
xor
les
jge
not
daa
inc
aaa
push
pop
addr16
ja
pop
ja
inc
daa
push
xor
enter
out
mul
xchg
xchg
(bad)
cmps
(bad)
mov
inc
ss
push
pushw
jbe
add
push
inc
es
cmps
(bad)
mov
xchg
xchg
mul
xchg
xchg
(bad)
cmps
(bad)
mov
inc
cmp
sbb
or
dec
sub
test
jmp
clc
cwde
enter
sub
pop
or
js
or
dec
sub
test
call
clc
cwde
enter
sub
pop
or
js
or
dec
sub
test
mov
clc
call
test
mov
or
js
or
dec
sub
test
mov
clc
call
stos
fstp
cmps
(bad)
mov
pusha
or
dec
sub
stos
enter
jmp
sti
sbb
inc
and
arpl
mov
pop
or
jnp
or
pop
cmp
xor
inc
std
popf
int
fnstsw
push
outs
push
jle
mov
jmp
fimul
xchg
inc
loope
mov
lods
int3
scas
icebp
loope
pushw
push
xor
mov
mov
loope
add
shl
int
adc
popa
jno
popa
add
pop
and
xor
popf
jb
add
mov
adc
popa
mov
cs
xchg
icebp
sahf
loope
xchg
loope
shl
mov
int
mov
push
dec
xor
mov
mov
loopne
or
sub
mov
cmp
jo
pusha
jo
fs
xor
and
xchg
imul
jno
add
push
and
movs
xchg
loope
ret
mov
xchg
hlt
test
hlt
xchg
in
aad
lds
test
and
aam
lds
addr16
push
aaa
inc
daa
(bad)
dec
and
adc
adc
add
xor
and
pop
das
dec
push
jl
outs
sub
les
ja
cmps
lahf
out
lahf
xchg
std
int3
scas
fsub
out
cwde
call
stos
out
scas
rcl
ja
out
inc
imul
cmp
mov
sti
mov
es
outs
adc
mov
sub
jnp
imul
or
dec
sub
cs
cwde
sti
pop
outs
jle
jmp
fstp
sub
jnp
imul
loop
ds
stos
retf
fwait
sti
mov
sti
call
jmp
cmps
mov
dec
dec
sub
sti
mov
sub
outs
or
cmp
mov
jp
push
sbb
pop
cmp
imul
outs
jg
jmp
mov
icebp
xchg
test
out
mov
mov
push
xor
jno
add
jno
inc
xor
fisubr
call
mov
and
popa
add
add
or
pop
and
loope
icebp
xchg
and
mov
mov
dec
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jo
inc
xor
mov
lock
and
lock
and
arpl
jae
add
jae
inc
xor
mov
repz
and
repz
and
arpl
jae
add
jb
inc
xor
mov
repnz
and
repnz
and
bound
jb
sbb
inc
xor
mov
test
xchg
test
xchg
cmc
movs
lds
xor
add
inc
xor
mov
test
xchg
icebp
(bad)
xchg
hlt
movs
les
fs
adc
gs
and
xor
mov
test
xchg
test
xchg
hlt
movs
les
fs
dec
jle
ins
dec
sub
push
(bad)
cmps
xlat
mov
xchg
xchg
xchg
xchg
hlt
cmps
shr
scas
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
adc
and
xor
les
in
hlt
xchg
les
ret
sahf
dec
adc
and
xor
les
in
hlt
xchg
les
xchg
pushf
dec
adc
and
xor
les
in
hlt
xchg
les
pop
mov
pop
ja
inc
daa
push
aaa
cmps
(bad)
mov
xchg
xchg
mul
xchg
xchg
(bad)
cmps
xlat
mov
inc
aaa
push
in
mov
pop
inc
daa
push
aaa
cmps
(bad)
mov
xchg
xchg
mul
xchg
xchg
(bad)
cmps
xlat
mov
inc
aaa
push
or
push
pop
ja
inc
daa
push
aaa
cmps
(bad)
mov
xchg
xchg
mul
xchg
xchg
(bad)
cmps
xlat
mov
inc
aaa
push
add
sbb
pushw
jbe
inc
es
cmps
(bad)
mov
xchg
xchg
mul
xchg
xchg
(bad)
cmps
(bad)
mov
inc
ss
push
lahf
adc
push
jbe
inc
es
cmps
(bad)
mov
xchg
xchg
mul
xchg
xchg
(bad)
cmps
(bad)
mov
inc
ss
push
jle
jns
or
dec
sub
test
jmp
stc
cdq
leave
test
cmp
ins
sbb
or
dec
sub
test
jmp
stc
cdq
leave
test
cmp
imul
sbb
pop
cmp
call
clc
cwde
enter
sub
pop
or
js
or
dec
sub
test
mov
clc
call
test
mov
or
js
or
dec
sub
test
mov
clc
call
test
mov
or
js
or
dec
sub
cmps
(bad)
mov
xchg
xchg
imul
mov
cwde
enter
sub
pop
or
js
or
dec
sub
inc
daa
push
aaa
addr16
ja
cli
xchg
cwde
enter
sub
pop
or
jnp
or
dec
sub
or
pop
jg
dec
aas
pop
dec
pop
lock
retf
stos
fstp
or
jnp
or
dec
sub
adc
arpl
push
and
xor
enter
sub
pop
or
jnp
or
dec
sub
adc
push
and
xor
stos
fstp
or
jg
movq
dec
das
pop
cmp
push
daa
inc
push
aaa
inc
sub
scas
fistp
movq
popa
jno
popa
add
inc
sbb
imul
cmp
outs
lods
shl
jno
popa
jno
popa
add
inc
cmp
pop
das
ja
ds
jle
shl
jno
popa
jno
popa
add
inc
cmp
xor
je
pop
add
inc
mov
and
jno
popa
jno
popa
add
inc
cmp
in
popf
cli
sbb
jae
inc
pop
shl
jno
popa
jno
popa
add
inc
cmp
push
and
inc
outs
shl
jno
popa
jno
popa
add
inc
cmp
push
and
inc
jle
mov
adc
popa
jno
popa
add
inc
cmp
ins
icebp
and
dec
jle
mov
adc
popa
jno
popa
add
inc
cmp
push
and
dec
ja
mov
adc
pusha
jo
pusha
add
inc
cmp
ins
icebp
cmp
dec
popa
shl
jo
fs
fs
xor
aas
sub
inc
addr16
cli
xor
popa
add
les
je
fs
fs
xor
sub
inc
sub
adc
push
mov
movs
xor
and
adc
add
je
fs
xor
and
push
and
jbe
gs
bound
xor
and
adc
add
je
fs
xor
and
es
adc
push
fs
or
mov
movs
xor
and
adc
add
je
fs
xor
and
es
push
jbe
data16
jns
shl
inc
adc
add
je
fs
xor
and
pop
sub
jbe
push
sbb
popf
aam
les
je
fs
fs
xor
and
pop
cs
push
jo
outs
jle
jp
aad
les
je
addr16
addr16
push
aaa
inc
and
pop
cs
push
push
push
je
push
outs
dec
aam
(bad)
cmps
aaa
push
daa
inc
pop
ja
imul
or
dec
and
pop
cs
ins
test
cmp
dec
sbb
imul
or
dec
and
jne
mov
js
outs
mov
retf
stos
cmp
dec
sbb
imul
or
dec
daa
cs
cs
je
mov
jo
outs
push
das
mov
sub
jnp
imul
or
dec
daa
cs
cs
je
mov
jae
outs
push
cmp
sub
jnp
imul
or
dec
daa
cs
cs
jb
mov
jp
outs
push
pop
mov
sub
jnp
push
sbb
pop
cmp
cs
cs
jae
(bad)
and
outs
push
add
sub
jp
push
sbb
pop
cmp
cs
cs
xor
addr16
outs
push
xor
retf
pop
sub
jp
push
sbb
pop
cmp
cs
cs
push
jle
outs
jle
outs
or
mov
sub
jp
push
sbb
pop
cmp
cs
cs
push
jle
outs
jle
outs
pop
fidivr
sub
jp
outs
jle
outs
push
pop
ds
es
cs
push
jle
outs
jle
outs
xor
mov
cs
push
jle
xchg
and
mov
cs
cs
push
jle
outs
jle
jge
fiadd
push
shl
xchg
and
mov
xor
dec
push
jle
outs
jle
add
and
push
shl
xchg
and
mov
pop
add
adc
and
xor
and
push
shl
xchg
and
mov
mov
clc
mov
clc
sahf
adc
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
lock
and
lock
and
pusha
add
add
jo
inc
xor
mov
lock
and
lock
and
pusha
add
add
jo
inc
xor
mov
lock
and
repz
and
arpl
jae
add
jae
inc
xor
mov
lock
and
repz
and
arpl
jae
add
jae
inc
xor
mov
push
xchg
and
repnz
and
bound
jb
add
jb
inc
xor
mov
lock
and
repnz
and
bound
jb
add
jb
inc
xor
mov
loope
test
xchg
cmc
movs
lds
xor
add
inc
xor
mov
ret
rcl
lds
xor
add
inc
xor
mov
ficom
cmc
movs
lds
xor
add
inc
xor
mov
sti
mov
movs
les
fs
adc
fs
and
xor
les
rol
aam
and
xor
add
adc
fs
and
xor
les
jmp
mov
inc
daa
push
aaa
addr16
ja
pop
addr16
ja
inc
aaa
push
(bad)
mov
mov
imul
xlat
inc
daa
push
aaa
addr16
ja
pop
addr16
ja
inc
aaa
push
les
jno
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
jno
inc
xor
mov
icebp
xchg
and
mov
inc
and
popa
add
add
inc
aaa
test
mov
mov
(bad)
repnz
loop
xchg
in
jno
cmp
inc
bound
das
pop
xor
(bad)
in
fld
mov
xchg
ret
mov
or
add
sbb
dec
das
inc
cmp
int3
mov
mov
shl
jl
push
je
jle
pop
jae
inc
jns
add
out
loope
xchg
lods
nop
mov
xor
pusha
dec
jne
mov
cmc
xchg
popa
adc
add
pop
push
into
hlt
sbb
mov
les
icebp
test
and
fnstenv
push
lock
jne
loope
arpl
xor
test
shr
les
add
and
mov
push
inc
adc
xor
jno
ret
(bad)
mov
cld
push
adc
pusha
add
cmp
fs
inc
jg
icebp
ret
jnp
push
mov
bnd
inc
jo
popa
outs
cld
icebp
and
fs
push
and
xor
dec
fwait
in
lods
inc
jno
xchg
xchg
sub
pusha
sbb
sbb
add
scas
iret
mov
xchg
mov
sub
jno
or
jae
add
jnp
shl
loope
out
iret
mov
mov
inc
dec
adc
add
mov
jl
inc
xor
jl
mov
xor
adc
(bad)
out
jno
maxps
mov
sar
jge
sbb
loope
adc
leave
shl
and
adc
outs
stc
fs
add
xchg
mov
js
inc
xor
icebp
popa
xor
inc
push
push
inc
and
xchg
fs
lock
and
mov
icebp
arpl
xchg
jmp
rcl
sar
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
xchg
xchg
jmp
(bad)
mov
test
pop
ss
inc
cmp
sbb
add
add
add
add
nop
nop
nop
nop
sar
mov
inc
mov
into
add
dec
pop
jp
jne
add
pop
jnp
scas
dec
call
sahf
(bad)
retf
out
sti
test
or
cmp
sub
pop
jle
outs
lgs
push
mov
dec
pushf
cmp
jmp
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
(bad)
sbb
stos
adc
or
cs
je
xor
sub
sti
add
inc
lds
aas
(bad)
push
out
sti
fisub
iret
ds
cmp
js
jnp
add
mov
test
mov
fdivr
jecxz
outs
push
out
or
aas
ja
dec
fs
add
fimul
retf
cmp
xor
aam
pop
push
dec
shl
stos
mov
js
cld
mov
add
jmp
sub
sub
add
outs
ds
imul
inc
add
fimul
retf
gs
or
call
in
push
movs
adc
jnp
xor
and
fsin
xchg
out
xchg
fisubr
shl
xchg
dec
sahf
jnp
das
(bad)
mov
mov
(bad)
pushf
in
add
inc
aad
jecxz
retf
push
mov
outs
and
dec
fidivr
stc
mov
xor
inc
shl
(bad)
jg
mov
imul
lock
pop
je
jmp
popf
xor
ficom
repz
ret
cmps
dec
sub
lock
adc
test
xor
out
sti
push
jmp
pop
push
or
icebp
inc
sub
fistp
sub
pop
test
ret
bound
cmp
lahf
into
test
aad
push
pop
ret
ds
push
out
scas
retf
sahf
test
and
sbb
push
pop
jle
outs
sub
add
jb
scas
mov
xchg
retf
xchg
into
das
ds
ret
add
sub
cs
mov
mov
mov
sbb
or
daa
dec
outs
xchg
pop
sub
repz
stos
jbe
adc
xchg
sbb
imul
test
mov
outs
jnp
imul
ins
je
stos
mov
(bad)
sub
inc
or
cmp
aaa
jnp
xchg
sti
jecxz
js
repnz
or
xor
mov
or
(bad)
push
test
mov
fwait
xchg
into
(bad)
mov
dec
sub
push
cmp
dec
lods
test
mov
push
cmp
adc
cmps
sbb
fnstenv
push
lahf
push
sub
and
lea
dec
fwait
jp
and
cmp
out
mov
(bad)
mov
mov
imul
sti
mov
dec
push
dec
movs
out
pop
mov
into
dec
js
fidivr
dec
sar
dec
outs
mov
mov
cmp
stos
cmp
mov
ror
inc
jbe
pop
pop
push
dec
outs
xchg
dec
and
push
mov
(bad)
jmp
sbb
add
ret
movsx
lods
and
or
aam
js
scas
mov
call
push
mov
outs
cmp
mov
lahf
out
fwait
sbb
add
hlt
jns
pop
call
outs
sar
push
mov
push
push
push
xchg
retf
adc
or
cmp
mov
ret
sbb
scas
inc
leave
stos
into
sbb
into
out
sti
ficomp
in
inc
outs
outs
out
xchg
rol
cmp
fstp
stos
mov
dec
mov
outs
or
cmp
mov
lahf
pop
loopne
ret
jmp
into
out
xchg
fist
inc
pop
push
push
outs
int
sub
sub
call
mov
imul
out
fisubr
mov
enter
sub
pop
adc
push
jp
mov
scas
test
xor
jmp
pop
push
or
lock
sub
push
jle
sub
pop
test
ret
push
mov
cmp
ror
test
aad
push
pop
mov
push
push
out
scas
imul
and
xchg
dec
inc
cmp
out
pop
jle
outs
sub
add
jae
scas
mov
xchg
retf
xchg
into
and
test
rol
dec
(bad)
jnp
cs
mov
mov
mov
sbb
sub
xchg
daa
dec
outs
out
pop
sub
repz
stos
and
adc
xchg
sbb
jae
test
mov
outs
jnp
imul
ins
imul
mov
fild
push
inc
or
xchg
outs
pop
mov
mov
sti
jecxz
js
repnz
jp
xor
mov
or
xor
test
mov
fwait
xchg
into
(bad)
mov
inc
iret
fsubr
push
cmp
je
push
dec
lods
test
imul
test
push
lahf
add
retf
sbb
or
push
ds
pop
xchg
and
pop
xchg
dec
fwait
(bad)
mov
jne
push
fistp
fiadd
popf
jae
jecxz
shr
sbb
add
movs
pushf
pop
les
out
addr16
adc
mov
(bad)
or
cmp
sub
mov
shr
out
scas
call
jb
mov
jnp
sar
inc
ja
fidiv
stos
push
jne
gs
stos
or
push
jl
movs
cmc
pop
bound
mov
mov
out
mov
rol
pop
mov
aas
aad
inc
fwait
out
mov
and
and
cs
mov
outs
xchg
pop
lea
mov
push
sti
push
scas
inc
pop
cmp
ja
stos
sub
jle
mov
aad
inc
push
loopne
scas
dec
sahf
and
push
mov
xchg
into
pop
std
or
pop
sub
fsubr
das
cmps
retf
scas
(bad)
adc
retf
push
and
mov
imul
jnp
push
jp
movs
stos
fs
iret
mov
dec
idiv
adc
cmps
sbb
shl
mov
outs
mov
and
dec
adc
sub
bound
sub
adc
push
jp
mov
scas
test
xor
jmp
pop
push
or
lock
sub
add
sub
pop
test
ret
cli
mov
cmp
(bad)
into
test
shl
pop
push
dec
xor
ss
push
out
scas
call
or
mov
xchg
dec
inc
cmp
out
pop
jle
outs
sub
add
jo
scas
mov
xchg
retf
xchg
into
(bad)
ds
rol
dec
mov
cs
mov
mov
mov
sbb
or
daa
dec
outs
scas
pop
sub
repz
stos
pop
fist
xchg
sbb
iret
cs
scas
adc
push
imul
ins
push
stos
mov
(bad)
sub
inc
or
xchg
outs
pop
mov
cmps
dec
test
dec
repnz
dec
retf
xor
mov
or
jmp
test
mov
fwait
xchg
into
(bad)
mov
ja
cmps
sti
push
out
xor
push
aad
xchg
popf
ret
xor
or
mov
push
mov
push
jmp
fidiv
and
add
mov
scas
dec
out
xchg
mov
(bad)
cmp
imul
mov
out
rcr
out
sti
push
jmp
jno
push
lods
cmp
cmps
ds
data16
loop
call
mov
inc
sub
fsubrp
mov
ret
jle
in
push
repz
repnz
rol
fwait
cmp
mov
pop
push
jmp
call
dec
sahf
adc
data16
fwait
call
sti
add
add
mov
dec
pop
movs
(bad)
loope
repnz
jle
(bad)
or
je
pop
jbe
jno
test
or
adc
out
or
ret
outs
in
dec
ds
xchg
ss
mov
shl
push
(bad)
adc
retf
loop
xchg
cmp
aam
push
sub
outs
mov
sti
je
inc
pop
add
retf
dec
iret
push
aas
or
mov
xchg
adc
push
mov
sbb
aaa
arpl
push
out
push
push
nop
jecxz
fidivr
dec
add
mov
jecxz
arpl
dec
pop
and
test
or
pop
sub
push
mov
mov
cmp
outs
pop
dec
cmp
sub
or
in
sahf
jmp
(bad)
mov
xchg
jnp
mov
pop
push
dec
outs
aas
shr
dec
push
xor
pop
stos
(bad)
jae
out
jne
sub
in
push
cs
mov
outs
xchg
or
mov
jmp
ror
ficom
dec
mov
add
fwait
mov
pop
test
outs
mov
xor
call
stos
(bad)
cdq
inc
clc
or
mov
or
fs
pop
jno
ds
mov
out
push
jae
into
xlat
mov
jbe
outs
xchg
pop
mov
inc
adc
push
sti
mov
mov
call
enter
jbe
movs
cmc
dec
(bad)
jnp
ins
xor
pop
lds
into
jae
fs
clc
out
mov
sar
call
push
push
call
add
mov
ins
push
cs
fisttp
pop
cmc
mov
pop
push
adc
aad
retf
sbb
cmp
outs
push
cmps
jle
fdivrp
fstp
add
bound
xor
pop
(bad)
mov
rcr
cmp
mov
xchg
jp
xchg
pop
fs
lods
retf
retf
call
mov
out
mov
iret
test
ret
push
inc
arpl
pop
inc
xchg
loope
and
into
push
mov
cs
out
movs
xor
mov
js
push
inc
outs
sti
(bad)
sti
add
imul
adc
pop
xor
cmps
imul
xchg
stos
sbb
mov
je
push
push
stos
retf
fild
aaa
push
add
popa
into
pop
outs
or
pop
xchg
mov
xchg
xor
rcr
push
jmp
nop
mov
rcr
dec
sub
pop
jle
xchg
lock
loopne
and
stos
jno
add
fcmovnu
outs
jecxz
mov
sub
pop
jnp
inc
ds
jnp
inc
adc
and
fwait
push
neg
adc
out
or
pop
cmp
imul
dec
arpl
xor
fwait
jg
mov
dec
push
mov
and
movs
jecxz
outs
cmp
pop
mov
ss
mov
inc
lahf
sbb
cmp
std
pop
cmps
push
xchg
xor
daa
fneni(8087
cld
int3
sti
loope
out
and
gs
mov
popf
mov
sub
sar
cmp
call
dec
fild
xor
in
hlt
(bad)
jg
test
cmps
jg
test
shr
imul
call
mov
out
and
cmp
push
in
mov
mov
ror
fisub
xchg
ins
xchg
imul
push
pop
repz
cmp
fcom
inc
mov
cmps
mov
and
dec
add
mov
cli
sbb
cmp
dec
ja
adc
gs
cmp
ss
xchg
mov
imul
pop
pop
jne
nop
mov
je
outs
jbe
jno
add
stos
pop
pop
adc
sar
fsubr
pop
cmp
repz
xchg
ret
mov
je
nop
neg
mov
in
mov
push
retf
out
cmp
(bad)
cmp
(bad)
sbb
adc
or
rcl
fadd
dec
arpl
mov
sub
fmul
out
movs
data16
cli
out
sti
ss
or
push
pop
repz
sbb
push
inc
into
cmps
xchg
and
or
xor
or
(bad)
jnp
cmp
aas
cwde
imul
je
out
and
ss
pop
inc
push
popf
push
cmp
fs
inc
mov
pop
stos
mov
add
jmp
xchg
stos
hlt
cmp
loope
out
cmc
mov
inc
fs
jge
popa
retf
or
clc
arpl
push
scas
jno
ror
cmp
or
xchg
adc
dec
push
stos
or
sahf
out
data16
(bad)
jmp
mov
cmc
fsubr
cmp
push
push
stos
aad
xor
repz
retf
and
inc
sbb
cmps
ins
pop
jne
or
cmp
pop
sahf
mov
sti
sbb
into
pop
ds
cmp
enter
outs
mov
xor
mov
std
pushf
mov
in
or
std
cli
in
push
pop
cmc
add
pop
fwait
pop
loope
mov
stos
jg
or
int
xchg
lds
push
jmp
push
add
out
xchg
push
fdivr
fdivr
pop
int3
retf
jnp
call
mov
or
into
(bad)
push
adc
mov
mov
repz
mov
ud2
cmc
pop
jmp
sahf
push
or
aad
or
aas
cmp
std
pop
xlat
enter
jecxz
out
push
fwait
mov
sbb
cli
fwait
jmp
outs
mov
sahf
cmc
loop
push
push
xor
mov
mov
scas
inc
(bad)
sti
mov
fwait
jmp
sub
push
pop
jle
push
fimul
adc
jle
fs
js
enter
ja
arpl
into
in
xchg
mov
mov
outs
dec
or
dec
jb
mov
setg
mov
sar
mov
sub
aas
adc
pop
les
in
(bad)
pop
xchg
retf
out
in
bound
jle
or
xchg
ret
lock
mov
jnp
loope
fwait
dec
(bad)
and
sahf
and
(bad)
xchg
xor
sub
mov
sub
(bad)
jle
jecxz
mov
add
mov
jmp
in
xchg
mov
mov
pop
jg
jecxz
pop
imul
add
mov
sbb
xor
loope
fisttp
sbb
mov
mov
adc
pop
mov
xchg
mov
push
jg
shr
or
push
sbb
dec
inc
scas
mov
scas
retf
fwait
pop
es
push
comiss
xchg
pop
icebp
rcl
dec
nop
mov
jns
and
and
fwait
out
cli
push
dec
dec
or
retf
(bad)
jle
outs
sub
in
mov
stos
(bad)
dec
mov
(bad)
xor
pop
push
jmp
xchg
rcl
test
or
mov
out
loop
fs
sub
mov
retf
out
mov
ror
dec
movs
cmp
jnp
das
mov
ret
test
fiadd
cs
in
push
fcomip
dec
popa
aas
pop
xchg
dec
fs
push
jmp
push
mov
xchg
add
in
inc
out
hlt
fidivr
pop
mov
xchg
ss
mov
pop
xor
int
add
test
jmp
sbb
or
dec
inc
xchg
or
pop
popf
jns
fs
test
push
cli
nop
stos
jbe
or
aas
push
shr
and
mov
sub
lods
dec
addr16
es
addr16
(bad)
out
mov
ss
mov
xlat
(bad)
pushf
jle
outs
sub
repz
popa
push
stos
ret
fidivr
push
mov
sub
enter
repnz
xchg
pop
pop
mov
and
(bad)
mov
ja
dec
fisttp
movs
adc
push
inc
sub
dec
adc
sti
sbb
mov
es
push
mov
mov
mov
pop
push
jle
push
sub
pop
xchg
neg
int
retf
jnp
packsswb
fild
(bad)
cmp
aad
pop
pop
ret
outs
shr
fs
js
(bad)
int
fidiv
mov
mov
ja
pop
aam
push
jle
outs
lods
dec
lods
mov
js
fiadd
jno
repnz
sub
shr
pop
sub
cs
cmp
mov
push
mov
or
sbb
mov
xchg
mov
xor
dec
lahf
add
into
ffree
clc
into
vcmpsd
xchg
int
inc
ja
stos
int
mov
cs
jecxz
sub
pop
or
cmp
sbb
imul
ret
xchg
push
test
jmp
sbb
jg
inc
fcmovne
pop
add
lock
xchg
cld
(bad)
std
mov
adc
pop
popa
pop
adc
push
or
dec
cs
inc
mov
mov
sub
cmp
out
retf
push
ds
and
mov
jp
xchg
pop
test
mov
sahf
push
repnz
fwait
cld
in
sub
sbb
xor
sbb
enter
cmp
cld
inc
push
jno
mov
pusha
cmp
cmp
add
mov
mov
or
in
stos
sti
(bad)
scas
mov
ins
in
js
test
mov
xor
retf
push
ja
stos
jo
ror
add
push
and
cmps
arpl
and
mov
add
dec
dec
lds
jbe
xchg
sbb
or
(bad)
stc
inc
sahf
fisttp
jne
jmp
or
mov
dec
out
add
jae
xchg
push
stos
jne
mov
cmps
movlps
xor
or
lock
cld
addr16
int
dec
gs
scas
sub
cmps
xor
pop
mov
cmc
dec
jmp
adc
call
fwait
and
neg
mov
cwde
(bad)
and
out
cmp
xchg
loope
xor
mov
aad
loop
xor
or
jge
aam
fmul
adc
jnp
imul
(bad)
jmp
gs
aaa
pushf
adc
dec
inc
jecxz
cmp
inc
cmp
xor
popf
data16
cdq
xchg
mov
pop
or
shr
or
add
sub
retf
inc
xchg
jne
mov
inc
xor
xor
dec
sub
lock
cmp
ins
inc
inc
mov
stos
(bad)
(bad)
es
push
and
cmp
ret
push
push
adc
sar
lds
mov
(bad)
imul
sub
jnp
xor
cmp
sub
sti
push
adc
loop
pop
movs
jle
jmp
sar
pusha
or
xor
and
jle
out
inc
xor
out
jge
jne
es
shr
test
mov
push
jne
out
xchg
sub
lock
jle
dec
in
stos
imul
arpl
js
out
(bad)
ja
sahf
stos
cmps
into
repz
mov
sub
push
or
push
sbb
and
add
inc
mov
pop
jp
jle
cs
push
cmp
xchg
sti
pop
jmp
(bad)
(bad)
push
xchg
retf
fisubr
out
dec
inc
xchg
or
test
fwait
inc
jg
mov
cld
ret
addr16
push
fwait
and
xchg
sbb
sub
neg
or
cli
nop
gs
retf
scas
xor
inc
hlt
das
cmp
rcl
scas
je
mov
je
dec
retf
fbstp
cmp
outs
pop
mov
mov
into
scas
xor
sbb
mov
inc
sbb
cmps
(bad)
or
push
mov
stos
ficomp
push
int3
jmp
mov
iret
push
ret
call
add
dec
call
jb
call
sbb
dec
movs
mov
push
outs
repnz
mov
ss
gs
(bad)
inc
out
pop
mov
ret
bound
mov
jbe
jne
shl
data16
test
xchg
xor
sahf
mov
jne
out
pop
sub
leave
jns
movs
jle
outs
push
adc
sbb
xchg
leave
add
pop
test
stos
jo
dec
mov
repnz
jl
mov
push
xchg
lds
pushf
and
clc
push
lahf
es
dec
xor
dec
pop
xlat
icebp
pusha
sti
jb
jg
ins
scas
adc
hlt
add
lods
push
sub
movs
cmp
repnz
xchg
daa
das
inc
fwait
stos
mov
retf
cld
add
xchg
fsub
into
push
push
mov
xchg
pusha
dec
fucomp
arpl
sahf
push
jns
aaa
not
ficom
pop
(bad)
dec
movs
test
lea
stos
lds
mov
scas
(bad)
hlt
mov
into
pop
(bad)
popf
sbb
push
rcr
rcr
daa
xchg
outs
sub
call
gs
fstp
jmp
pop
mov
and
in
in
pop
adc
outs
bound
cmp
repnz
(bad)
mov
int3
in
not
mov
sbb
(bad)
mov
add
fild
jmp
sbb
or
dec
outs
enter
outs
adc
sub
addr16
daa
stos
mov
(bad)
xor
mov
addr16
cmp
mov
mov
mov
ror
push
mov
(bad)
ficomp
fiadd
sub
xlat
div
sbb
retf
cli
inc
idiv
inc
add
(bad)
xchg
outs
add
jnp
jle
into
push
mov
(bad)
out
adc
mov
out
pop
inc
or
jle
cmp
pusha
dec
sahf
addr16
daa
stos
mov
dec
into
repz
popa
cmp
out
fisttp
jbe
and
xor
inc
sbb
retf
out
sti
aaa
scas
ins
sbb
push
cs
addr16
mov
call
add
cmp
xchg
push
fiadd
mov
push
sub
pop
xchg
bswap
jnp
pusha
dec
(bad)
mov
or
sti
inc
jmp
pop
popf
or
xor
addr16
mov
pop
add
mov
fist
(bad)
out
mov
imul
jp
rcl
sub
jle
xchg
std
imul
sahf
inc
retf
and
sti
xchg
jmp
sbb
dec
lea
mul
push
adc
outs
xchg
sbb
dec
jae
mov
mov
pop
retf
push
neg
mov
push
push
ret
add
dec
mov
fwait
push
test
xor
jmp
sbb
or
jg
sub
push
jle
outs
inc
pop
or
mov
stos
adc
pop
(bad)
dec
sti
ss
pop
jmp
rcr
push
mov
dec
sub
imul
sahf
in
mov
fiadd
ret
or
cmp
outs
lods
pop
xchg
inc
outs
cmp
cli
sub
mov
in
jno
jmp
xchg
ds
cmp
cli
fild
mov
xchg
push
xor
cmps
lahf
stos
ret
push
repz
inc
sbb
dec
lods
(bad)
push
sub
mov
jmp
or
sbb
inc
jmp
push
cld
retf
adc
scas
movs
sbb
or
push
mov
es
mov
push
adc
push
add
scas
push
test
jle
adc
fistp
mov
or
sbb
xchg
xchg
sbb
inc
push
jle
sub
push
mov
xor
sahf
mov
sbb
jnp
cmp
sub
pop
cmps
fwait
mov
cli
mov
sbb
sti
push
scas
or
(bad)
or
pop
xlat
jmp
cmp
repz
pop
call
cmc
push
cmps
into
dec
fimul
push
or
and
imul
adc
mov
jbe
or
js
imul
cmps
js
cmp
push
jg
push
fadd
inc
add
retf
push
pop
retf
pop
mov
cs
sub
in
sbb
mov
outs
scas
into
adc
retf
fist
or
into
repz
or
loop
repnz
push
cmp
(bad)
repz
(bad)
(bad)
fwait
loopne
xchg
cwde
into
push
jae
rcl
sbb
dec
outs
mov
js
cs
stos
mov
fwait
mov
sbb
sub
pop
or
pop
mov
stos
scas
pop
jae
es
ficom
xchg
jnp
cmp
or
or
mov
dec
dec
sti
ss
into
idiv
arpl
jle
sub
out
mov
(bad)
repz
add
sub
cs
inc
push
cmps
cmp
and
mov
xchg
shl
call
xor
jae
movs
pop
push
mov
bound
jle
jnp
imul
jbe
sbb
inc
test
push
pop
xchg
scas
mov
push
mov
aad
(bad)
mov
mov
jmp
mov
pop
sub
popf
jle
and
imul
push
out
or
shl
jo
stos
and
xlat
dec
and
imul
mov
es
mov
retf
mov
cmps
call
jecxz
mov
arpl
and
aaa
cs
pop
xor
mov
sub
jp
pop
xchg
push
xchg
xor
sti
cmp
add
stos
fsubp
iret
sti
inc
or
cld
xchg
jp
movs
jbe
iret
dec
dec
cmp
inc
sahf
cmc
mov
jge
out
mov
sub
jno
mul
loop
std
push
mov
out
adc
ja
mov
pop
push
jmp
push
jp
push
pop
outs
repnz
test
repnz
sbb
mov
push
dec
loopne
push
fmulp
push
mul
imul
mov
mov
inc
fld
xchg
mov
pusha
xor
hlt
jmp
push
fdivp
dec
dec
inc
nop
and
dec
out
add
(bad)
into
and
jmp
mov
xchg
mov
out
and
ret
cdq
mov
mov
daa
jae
jecxz
into
jmp
xchg
cli
dec
js
xchg
sub
jle
dec
jnp
out
fsubrp
mov
mov
push
mov
and
jle
imul
aas
sub
push
add
ja
mov
add
sahf
iret
(bad)
or
dec
retf
push
push
push
and
push
mov
jp
(bad)
out
ss
mov
imul
shl
push
inc
jmp
lahf
xchg
cmp
inc
mov
scas
inc
adc
call
imul
add
les
mov
scas
and
mov
sub
xchg
adc
in
hlt
(bad)
cmp
jnp
push
jle
jecxz
shl
mov
mov
cmps
mov
add
mov
and
pop
cmp
sbb
jecxz
into
stos
add
dec
dec
sbb
inc
imul
pop
(bad)
pop
das
rcl
in
sub
fadd
sahf
jae
jp
and
inc
loop
cmp
aam
out
cmc
dec
sub
adc
scas
mov
(bad)
fistp
adc
mov
mov
push
adc
xchg
inc
ret
std
inc
cs
mov
(bad)
pusha
xor
jp
mov
(bad)
inc
ror
dec
repz
mov
and
adc
pop
into
pop
jae
outs
jle
jecxz
or
mov
aas
mov
push
scas
ss
ins
data16
add
sbb
shl
jbe
xchg
lock
jae
fwait
js
push
fstp
xor
jns
jmp
(bad)
outs
jnp
mov
cmps
add
sub
xor
pop
out
dec
fstp
scas
mov
(bad)
loope
icebp
pop
or
xchg
inc
add
lahf
sahf
out
jne
add
adc
mov
jle
xchg
xlat
push
popf
mov
aaa
mov
inc
push
dec
stos
retf
arpl
cs
repz
pop
jle
ret
aas
rcl
push
ds
jo
repz
dec
mov
mov
pop
repz
xchg
cdq
xchg
xchg
inc
fdivr
(bad)
sahf
out
add
jae
adc
ds
push
les
jb
jnp
cmp
stos
fwait
push
mov
jae
adc
test
or
jp
shl
xchg
mov
mul
or
mov
jae
mov
repz
pop
cmp
add
mov
ret
push
add
sub
cli
xchg
push
aam
repnz
xchg
cmp
xor
neg
xchg
adc
(bad)
sahf
xchg
ret
jbe
aam
cmps
sti
push
sub
mov
nop
cmps
mov
jle
or
cmps
adc
mov
ins
jnp
test
int
iret
stc
pop
shr
sti
jbe
popa
mov
dec
hlt
fnsave
sub
adc
dec
fwait
aaa
xor
fidiv
cmp
dec
fs
jl
mov
fs
push
and
fbstp
scas
or
cmp
imul
inc
adc
ss
mov
inc
mov
push
mov
dec
mov
imul
das
push
es
movntps
lods
dec
fwait
out
into
cmp
(bad)
stos
rcr
call
(bad)
mov
push
sbb
cs
mov
sti
retf
mov
mov
add
pop
iret
out
dec
mov
mov
jp
mov
fwait
push
jmp
pop
inc
(bad)
out
pop
xchg
scas
nop
xchg
sub
into
jbe
es
pop
outs
sbb
jp
sbb
jg
jno
mov
jae
mov
and
cs
inc
aam
lahf
jg
outs
jp
(bad)
sbb
fimul
mov
mov
push
inc
push
dec
xchg
(bad)
jle
out
add
(bad)
cmp
push
and
shl
adc
adc
sub
jnp
jnp
(bad)
xchg
lock
push
fidivr
stos
retf
fld
(bad)
sbb
mov
retf
out
or
pop
sub
cmp
mov
outs
call
jbe
outs
add
jmp
mov
(bad)
and
mov
fstp
(bad)
adc
ret
and
pop
popf
jl
xchg
test
fwait
(bad)
ja
jge
stos
dec
lahf
add
test
sub
dec
arpl
xchg
(bad)
xchg
sti
and
scas
adc
retf
ss
sbb
jecxz
dec
push
das
or
mov
lds
pushf
imul
ss
movs
aas
xchg
aam
push
or
sub
ret
push
jle
daa
mov
std
mov
stos
xchg
ret
les
outs
push
cmps
mov
mov
adc
or
mov
aam
fimul
adc
lock
fsubp
and
int
jmp
mov
bound
jmp
sub
and
push
out
outs
fwait
movs
push
sbb
mov
pop
or
push
out
and
add
mov
dec
push
xor
and
shr
jmp
push
jb
sbb
pop
arpl
push
(bad)
je
inc
push
xlat
ror
and
adc
mov
add
mov
pop
push
imul
cmp
fnsave
mov
jb
jg
inc
cmp
popa
xor
fild
repnz
dec
pop
test
push
mov
mov
add
into
adc
mov
aam
mov
sbb
or
retf
(bad)
addr16
jecxz
or
jle
jmp
stos
dec
inc
pop
test
arpl
sub
push
arpl
mov
xchg
lds
loop
mov
xchg
adc
jle
mov
sub
cdq
loopne
je
(bad)
and
push
test
in
mov
inc
in
xchg
cmp
je
cwde
jle
dec
and
fistp
test
push
adc
fimul
and
movs
cmp
mov
jge
rol
fwait
mov
sar
dec
arpl
jmp
jmp
movs
adc
inc
sbb
fwait
cli
inc
pop
inc
jbe
mov
fsubr
cmp
inc
xor
les
mov
gs
and
sbb
lds
shl
cmps
(bad)
shl
jae
jg
mov
pop
jmp
aam
push
stos
inc
popf
and
pop
jle
outs
je
cmc
dec
push
outs
mov
fmul
add
sbb
jle
mov
xchg
in
and
push
push
mov
ret
mov
mov
sti
pop
xchg
dec
dec
pop
push
es
and
jmp
fwait
repz
mov
mov
out
sti
or
pop
cmp
clc
stos
jno
fiadd
xchg
pop
fidivr
add
or
mov
fwait
and
imul
add
mov
(bad)
inc
test
push
lock
mov
in
or
lock
int
outs
icebp
sbb
(bad)
mov
ins
out
add
inc
add
(bad)
movs
aad
dec
das
cmp
xchg
jnp
sbb
sbb
(bad)
fwait
repz
jb
lahf
add
push
nop
arpl
scas
xor
lds
js
ds
ret
(bad)
gs
fnstenv
or
xor
push
inc
shr
adc
dec
push
pop
je
jmp
imul
and
(bad)
ds
repnz
repz
pop
mov
push
mov
bound
jbe
dec
es
and
jnp
sbb
loope
jb
add
mov
add
mov
dec
int3
mov
nop
xchg
lahf
sub
or
stos
jmp
sbb
mov
xchg
into
jnp
imul
cmp
(bad)
jnp
stos
rcr
cmp
mov
loopne
in
add
(bad)
in
bts
push
and
das
mov
mov
stos
mov
push
jmp
xchg
ds
pop
push
jb
dec
sahf
push
sub
mov
mov
push
mov
aad
mov
cmc
jmp
ds
jecxz
lahf
sub
sbb
into
inc
ds
das
loope
test
jle
xchg
jnp
das
mov
mov
sub
sti
pop
jmp
dec
sub
jle
outs
cmp
iret
outs
ss
out
data16
clc
scas
jnp
scas
mov
mov
loop
dec
cmp
add
arpl
popa
cmps
retf
inc
push
sti
push
jmp
rcl
push
(bad)
mov
jp
outs
outs
stos
mov
cmp
mov
stc
jae
jnp
xchg
mov
pop
jle
xchg
mov
loopne
and
rcr
mov
cs
outs
push
pop
repz
cmps
pop
xchg
sub
inc
je
mov
test
adc
jae
hlt
mov
push
repz
mov
iret
scas
mov
jne
loop
jnp
mov
mov
shl
sbb
cmps
push
xor
mov
xor
jg
stc
push
in
mov
jb
pop
push
dec
lahf
aaa
jnp
in
push
(bad)
sub
jne
mov
push
add
fwait
scas
pop
jbe
push
fisubr
fucomi
retf
addr16
(bad)
sub
push
shl
sub
mov
imul
sub
ficomp
pop
imul
ds
jb
sbb
jnp
inc
sbb
sub
mul
jecxz
sti
add
in
mov
push
sahf
and
jle
fwait
fwait
js
sahf
inc
mov
xchg
cmps
repnz
inc
ss
sub
fcmovnu
not
sub
jae
out
jle
adc
dec
mov
mov
jnp
loop
fwait
retf
cs
bound
call
adc
imul
or
inc
in
push
adc
pop
stos
fwait
sub
fist
or
inc
pop
inc
dec
arpl
xchg
push
out
pop
cs
lds
push
dec
fstp
dec
adc
into
sbb
pop
or
adc
push
fcom
cmp
mov
sbb
out
mov
sub
jnp
cmp
sbb
mov
push
jmp
iret
push
jne
out
mov
sub
cmc
sub
sar
sub
cmps
imul
ja
call
cli
push
mov
mov
aaa
sub
sbb
das
lds
ficom
fcmovbe
sbb
mov
lahf
dec
test
pop
sub
inc
cmp
retf
cmp
xchg
inc
outs
ja
push
mov
or
pop
pop
out
or
push
push
mov
outs
ds
inc
jbe
mov
jle
out
lods
fsubrp
mov
loope
stc
or
dec
popf
and
arpl
adc
fsubr
fisttp
sti
mov
mov
and
ds
cmc
pop
push
adc
mov
call
pop
movs
xor
jge
mov
or
je
retf
(bad)
sub
cwde
test
adc
shr
pop
cs
shl
cmc
dec
in
pop
arpl
sbb
dec
cmps
cmp
xor
cmp
inc
jnp
jecxz
mov
mov
cmp
mov
cs
push
and
lock
ds
push
pop
jl
in
mov
(bad)
scas
cmps
popf
das
add
outs
into
sbb
hlt
ds
loope
push
sub
daa
mov
div
xchg
sti
std
inc
cs
sbb
dec
mov
mov
pop
imul
test
xor
mov
fild
sti
jnp
sub
pop
push
fadd
mov
es
mov
jmp
pop
retf
jp
cmc
dec
test
jns
scas
je
push
retf
je
mov
ds
jmp
xchg
sub
cmp
out
adc
fwait
dec
inc
push
call
inc
pop
or
sub
fdiv
xchg
icebp
(bad)
imul
push
arpl
cli
pop
inc
push
pop
ret
cmp
psubusb
stos
sub
mov
retf
fistp
sar
gs
xchg
jmp
dec
ret
cmp
idiv
into
ss
imul
(bad)
cmp
pop
or
ja
pop
sahf
cmp
push
mov
xchg
icebp
inc
push
popf
jmp
inc
and
sbb
sti
dec
or
cmp
ss
pop
xchg
inc
sahf
scas
dec
fbstp
mov
and
loop
shl
push
aam
push
push
add
xor
cs
push
out
mov
xchg
fld
mov
(bad)
sbb
sbb
adc
(bad)
push
xchg
pop
xchg
mov
es
mov
out
sti
stos
mov
add
pop
mov
xchg
and
aam
retf
(bad)
adc
(bad)
out
mov
(bad)
or
(bad)
jmp
data16
xor
sahf
stos
pop
scas
or
pop
mov
aas
hlt
fmulp
push
aam
leave
xor
lock
stc
into
sahf
fimul
not
hlt
ret
pop
push
neg
lds
jle
mov
sahf
push
(bad)
sbb
ret
dec
jmp
popa
jg
sbb
mov
inc
std
push
mov
gs
and
push
cmp
(bad)
in
xchg
ret
sub
aaa
add
push
pop
inc
jmp
xor
jbe
adc
push
popa
jg
imul
mov
sub
shl
sahf
dec
sbb
cmc
cmp
pop
cmc
arpl
jbe
mov
mov
fadd
gs
cwde
sti
ret
jle
push
outs
into
fbstp
out
aad
(bad)
xchg
sti
mov
enter
popa
and
push
mov
add
ret
push
loopne
imul
popf
ss
retf
inc
(bad)
dec
xor
fwait
jb
out
pop
test
popa
dec
pop
and
pushf
and
jo
pop
repz
(bad)
inc
(bad)
xor
push
push
outs
xchg
mov
(bad)
cmps
sbb
not
inc
out
push
ret
and
jge
pop
test
jg
push
fneni(8087
dec
lds
scas
stos
jmp
mov
rol
imul
pop
jp
in
push
outs
(bad)
adc
popf
(bad)
fcmovnu
retf
xor
mov
mov
cmp
cmps
mov
imul
xacquire
mov
(bad)
ds
shl
in
(bad)
outs
inc
aad
dec
out
cmp
lahf
pop
sub
fsubrp
outs
pop
cmp
push
jle
push
jmp
mov
outs
push
jmp
clc
jle
mov
shr
push
mov
push
out
sahf
and
jg
xchg
xchg
push
and
mov
mov
dec
and
in
in
mov
shl
cli
inc
pop
inc
adc
mov
call
mov
aam
dec
test
and
sub
and
mov
fwait
mov
lods
mov
xchg
jnp
das
inc
fdivp
repnz
ret
scas
add
mov
aaa
and
jle
sub
popf
neg
adc
or
mov
mov
call
out
cmp
and
adc
add
pop
pop
jle
in
add
out
jb
inc
call
js
add
aas
jbe
mov
jp
rol
not
fidiv
mov
dec
jmp
lahf
sbb
out
mov
or
lds
xor
inc
neg
stos
data16
hlt
mov
and
xlat
xchg
lds
mov
mov
dec
out
sti
push
push
add
ds
das
xchg
push
outs
int
sub
xchg
cld
movs
adc
lahf
out
dec
fld
push
out
jg
push
sahf
aas
or
mov
add
mov
pop
inc
xchg
(bad)
mov
sti
fistp
into
nop
(bad)
push
ds
jmp
add
mov
fucomip
mov
mov
(bad)
jne
or
adc
sbb
popa
cmp
cmps
dec
sub
lock
adc
xor
lahf
cmp
xor
ds
cs
mov
outs
(bad)
aas
mov
cmps
adc
mov
sahf
jmp
scas
dec
iret
pop
sub
or
ret
hlt
and
or
pop
inc
mov
fidivr
scas
daa
dec
(bad)
add
mov
jnp
imul
mov
retf
retf
and
adc
sbb
sar
push
sub
inc
fmul
outs
popf
dec
push
fist
inc
xor
stos
jno
dec
xchg
sbb
call
aas
jnp
imul
adc
lahf
dec
mov
xchg
loopne
call
ds
inc
push
in
scas
xchg
sub
xchg
dec
fidivr
clc
test
das
xor
sbb
shl
outs
push
sub
and
xchg
xor
mov
cmps
retf
out
sub
sub
bound
sub
jnp
mov
scas
test
xor
jmp
pop
push
or
lock
sub
mov
pop
test
ret
ret
out
out
cmp
xchg
into
test
shl
pop
cs
xor
imul
sahf
test
and
xchg
dec
inc
cmp
out
pop
jle
outs
sub
add
jo
scas
mov
xchg
retf
sub
sub
test
rol
dec
pop
jnp
cs
jge
idiv
mov
mov
sbb
mov
jbe
int
daa
dec
outs
pop
pop
sub
repz
stos
xchg
fist
xchg
sbb
imul
test
scas
adc
inc
imul
ins
push
stos
mov
sub
inc
or
cmp
aaa
jnp
fisttp
sti
jecxz
js
repnz
ss
xor
mov
or
retf
push
test
mov
fwait
xchg
into
(bad)
mov
inc
out
sub
popa
cs
inc
outs
sbb
ss
fs
loope
fstp
or
mov
push
dec
sub
dec
(bad)
fdiv
stos
mov
cmc
mov
push
out
or
ds
movs
jbe
outs
push
sbb
cmp
push
mov
cmovbe
enter
lahf
mov
jmp
push
sbb
cli
cmp
adc
out
mov
inc
mov
(bad)
push
pop
jp
out
sbb
xor
mov
xor
outs
mov
rol
push
cmps
jmp
outs
sbb
dec
stos
retf
cmp
adc
inc
les
dec
and
pop
pop
and
jecxz
sar
call
outs
call
and
fnstsw
add
jmp
daa
push
push
hlt
push
mov
sub
sbb
mov
mov
push
repz
dec
cs
sub
fmul
sahf
jnp
jnp
fucomip
mov
jmp
repz
dec
inc
mul
popf
sub
test
dec
cs
je
xchg
fisubr
stos
mov
aas
xchg
pop
mov
mov
js
repz
push
pop
jno
std
(bad)
cs
adc
nop
ja
push
mov
sub
mov
jnp
xchg
xor
xchg
fild
mov
sbb
or
push
sub
add
or
lock
popa
scas
(bad)
lahf
scas
retf
or
mov
leave
xchg
sub
das
js
push
ins
das
sbb
mov
mov
mov
sbb
pop
arpl
cmp
out
fwait
mov
stos
or
mov
lahf
push
outs
dec
cs
aam
dec
repz
cli
jp
imul
je
clc
sahf
out
(bad)
inc
mov
jae
call
mov
push
ins
sub
dec
inc
push
push
and
sub
jo
adc
push
push
(bad)
aad
cmp
xchg
(bad)
imul
push
clc
mov
mov
xor
jae
imul
jge
rcr
jnp
mov
(bad)
ins
dec
xchg
test
push
jb
pop
cmc
xchg
cmp
cs
js
cmps
cmc
push
test
mov
mov
popf
retf
mov
pop
pop
or
imul
xor
jo
jg
add
fs
mov
into
mov
cmp
push
outs
dec
sbb
aaa
or
jnp
xchg
add
iret
and
pop
xor
inc
push
jo
jmp
in
out
jge
neg
test
sbb
jmp
sahf
push
fimul
and
xchg
mov
sar
mov
xchg
mov
imul
push
xlat
add
add
ins
push
push
movs
jnp
out
jnp
addr16
mov
mov
lahf
mov
xchg
pusha
and
mov
pop
call
outs
xchg
cmp
inc
xor
stos
jne
jmp
out
sti
mov
(bad)
pop
xlat
pop
cs
outs
test
adc
call
pop
sti
lds
or
mul
fild
sub
sub
call
dec
push
mov
dec
es
or
pop
daa
dec
mov
test
int3
shl
xchg
shl
(bad)
cmp
jo
pusha
mov
ds
das
xchg
push
outs
int
sub
add
mov
adc
retf
mov
stos
jmp
fdivr
pop
inc
les
mov
or
sti
cwde
scas
loop
xchg
mov
and
pop
lock
(bad)
cmp
sub
jnp
push
fwait
sti
dec
scas
in
cmc
push
add
adc
sbb
nop
jp
imul
jb
xchg
jle
lods
jnp
sub
fwait
inc
or
pop
pop
push
lahf
pop
call
rcl
cli
sub
aas
sahf
loopne
fidivr
stos
mov
sbb
mov
not
cmp
sub
dec
lods
mov
imul
test
inc
cmp
stos
sti
adc
cmps
sbb
shl
pop
push
sub
and
xchg
xor
mov
stos
dec
adc
sub
bound
sub
adc
push
jnp
mov
scas
test
xor
je
push
or
test
sub
pop
test
ret
jle
xchg
out
out
cmp
pop
into
test
shl
pop
sbb
ds
sahf
test
and
xchg
dec
inc
cmp
in
pop
jle
outs
sub
add
jno
scas
mov
xchg
retf
sub
xchg
test
rol
dec
stos
jnp
cs
jge
idiv
mov
mov
sbb
mov
jbe
int
daa
dec
outs
pop
pop
sub
repz
stos
jle
adc
xchg
sbb
stos
cs
scas
adc
jle
je
(bad)
mov
(bad)
stos
mov
fisubr
sbb
or
xchg
outs
pop
mov
adc
sti
jecxz
js
repnz
call
icebp
xor
mov
out
mov
mov
mov
mov
stos
add
outs
inc
out
pop
das
imul
rol
fwait
mov
inc
add
(bad)
stos
add
das
push
xlat
inc
jmp
or
mov
push
mov
outs
jnp
loopne
adc
mov
mov
xor
adc
or
sub
pop
or
xchg
imul
retf
inc
push
mov
cmp
dec
inc
or
jl
imul
lods
fwait
adc
xchg
jge
stos
mov
mov
jae
xchg
cmp
sbb
and
aas
pop
loope
call
(bad)
lahf
cmps
xchg
cli
out
mov
sbb
retf
inc
rcl
cmp
not
mov
je
test
std
hlt
xchg
cmp
(bad)
dec
sar
pop
outs
mov
mov
mov
xchg
retf
out
pop
mov
into
movs
lock
shr
dec
int
(bad)
movd
xor
ret
(bad)
int3
(bad)
push
out
out
mov
es
stos
cs
ret
test
jle
cmp
xchg
dec
(bad)
sahf
scas
out
es
(bad)
jns
clc
mov
repz
js
xchg
ds
adc
outs
arpl
sbb
adc
retf
mov
pop
ds
cmp
sub
aaa
push
outs
test
adc
pop
repnz
sti
mov
cld
into
pop
push
test
and
or
push
imul
push
mov
popa
or
jle
add
sub
add
mov
stos
jno
jne
out
xchg
retf
jmp
shl
(bad)
jg
(bad)
pop
imul
ja
dec
fs
add
mov
push
retf
push
pop
(bad)
popf
sbb
push
rcr
jl
movs
cmc
pop
cmps
xor
dec
mov
ror
addr16
push
fld
add
mov
dec
retf
mov
or
sti
stos
jmp
pop
popf
or
and
fs
xchg
jle
sub
pop
adc
mov
fist
shr
mov
mov
rol
sub
test
std
imul
sahf
inc
retf
and
sti
xchg
jmp
sbb
dec
lea
idiv
outs
xchg
sbb
dec
jae
mov
mov
pop
retf
push
in
fisub
push
push
ret
sbb
dec
push
jnp
das
in
fwait
push
pushf
scas
neg
push
test
ss
jg
sub
inc
jle
outs
pop
pop
or
mov
stos
push
fist
(bad)
dec
sti
ss
push
ds
rcr
push
mov
dec
and
cmp
fistp
loope
inc
(bad)
and
sbb
fidivr
imul
pop
xchg
push
outs
xor
dec
jb
sub
fild
retf
pop
mov
ds
cs
ret
jle
jbe
push
imul
push
iret
or
pushf
inc
out
adc
or
push
sub
pop
fisttp
ins
pop
sub
movsx
sbb
retf
or
aaa
scas
ins
sbb
sbb
push
mov
call
dec
mov
push
scas
adc
arpl
fmul
pop
or
(bad)
xchg
pop
push
sahf
dec
inc
cwde
(bad)
xor
push
(bad)
aaa
test
fwait
adc
mov
pop
cmps
sbb
pop
pop
(bad)
daa
in
inc
fst
retf
mov
into
jno
or
lahf
mov
xchg
dec
out
jns
fidivr
(bad)
xor
stc
fwait
pop
inc
pop
and
cmp
sbb
mov
adc
sahf
inc
mov
dec
jle
loop
or
or
dec
out
push
inc
dec
stos
xlat
pop
add
into
inc
mov
lods
jmp
sub
out
fwait
es
scas
(bad)
iret
pop
mov
mov
push
movs
cmp
cmp
repnz
out
adc
mov
call
jae
adc
imul
jmp
cdq
ds
call
inc
add
jb
sahf
ins
dec
imul
das
js
mov
adc
mov
mov
retf
fisubr
outs
addr16
jbe
pop
dec
push
jbe
nop
push
pop
xor
movs
push
and
dec
mov
pop
sahf
xchg
nop
ss
dec
fild
jp
mov
push
lds
outs
and
(bad)
mov
sub
pop
xor
outs
imul
dec
mov
ins
dec
fstp
or
fld
jg
bound
scas
lds
inc
xchg
and
and
xlat
lods
inc
das
cli
stos
out
pop
ret
movs
jle
test
sub
gs
mov
popa
and
adc
cwde
cs
dec
or
(bad)
cs
cwde
jb
sbb
shl
push
mov
pop
retf
mov
sub
xchg
jle
xchg
lock
imul
mov
and
jmp
xchg
out
mov
push
or
push
aam
add
xchg
aas
mov
add
je
ins
mov
(bad)
popf
out
add
scas
fcmovnu
cmp
dec
inc
dec
push
cmp
outs
aad
dec
icebp
stos
jae
push
iret
stos
push
fstp
add
(bad)
adc
mov
cmps
push
(bad)
jle
xchg
jp
imul
mov
pop
(bad)
xor
sti
mov
jo
(bad)
jg
stos
sub
jle
cmp
pop
out
mov
out
mov
inc
gs
aaa
mov
sbb
or
pop
mov
xchg
dec
fwait
(bad)
mov
jne
push
fistp
fidivr
cmc
inc
ret
bts
sub
sbb
ret
scas
(bad)
pop
stos
fprem1
add
not
mov
sbb
or
pop
daa
dec
mov
test
int3
nop
je
scas
xchg
shl
(bad)
cmp
jo
pusha
mov
ds
das
xchg
push
outs
int
sub
lock
addr16
mov
adc
retf
mov
stos
jmp
fdivr
pop
add
xchg
add
pop
loopne
adc
xchg
scas
loop
xchg
mov
and
pop
lock
(bad)
cmp
sub
aas
sahf
loopne
fidivr
stos
mov
sbb
mov
ds
mov
push
aam
mov
sbb
mov
xor
push
aad
jmp
out
sub
push
cmp
sub
dec
lods
mov
imul
test
inc
cmp
mov
sbb
shl
xlat
push
sub
and
xchg
xor
cli
mov
cmps
retf
out
add
sub
bound
sub
pop
adc
push
jnp
mov
scas
test
xor
je
push
or
test
sub
pop
test
ret
bound
cmp
mov
cs
shl
pop
xor
ds
sahf
test
and
xchg
dec
inc
cmp
in
pop
jle
outs
sub
add
jno
scas
mov
xchg
retf
sub
jnp
test
rol
dec
cli
jnp
cs
jge
idiv
mov
mov
sbb
mov
jbe
int
daa
dec
outs
call
or
mov
stos
data16
xchg
sbb
pop
cs
lods
adc
inc
imul
ins
imul
sub
inc
or
xchg
outs
pop
mov
push
dec
test
dec
repnz
mov
mov
sbb
js
(bad)
test
mov
sti
sub
xchg
and
add
stos
add
scas
sahf
dec
cmp
sub
imul
mov
scas
ds
push
dec
fstp
mov
fistp
and
outs
test
(bad)
sbb
jmp
(bad)
fistp
pop
into
repz
outs
and
js
sti
mov
jmp
mov
sbb
ret
dec
(bad)
cmp
jecxz
aam
dec
int
mov
jmp
out
and
int
sti
jmp
push
sahf
cmp
(bad)
fwait
pop
jbe
movs
mov
data16
push
inc
mov
xor
mov
clc
push
push
pop
xlat
nop
(bad)
iret
sub
mov
div
push
stos
push
pop
dec
dec
jnp
les
pop
cmp
or
mov
inc
out
in
xchg
or
sub
neg
mov
xor
(bad)
stos
add
arpl
fisubr
test
pop
jg
test
pop
pop
push
sbb
mov
fstp
jmp
nop
sub
jno
ret
stos
adc
sahf
mov
aam
mov
jle
movs
(bad)
sahf
mov
and
rcl
imul
movs
and
fwait
or
popa
movs
mov
add
(bad)
into
add
pop
xor
repnz
repz
pop
cmp
mov
push
jno
mov
inc
sahf
clc
rcr
push
scas
sbb
outs
mov
frstor
cmp
and
retf
sbb
into
in
push
cmps
push
jl
dec
cmp
outs
and
imul
inc
(bad)
pop
mov
scas
retf
adc
xor
inc
cmc
ja
loope
arpl
imul
test
out
ins
mov
int
stos
cmp
ds
(bad)
add
push
mov
das
mov
inc
arpl
pop
lock
mov
dec
jnp
shr
test
mov
cli
jecxz
jge
xor
mov
retf
sti
jb
dec
xor
jge
jecxz
jnp
adc
push
out
sti
add
inc
enter
std
xchg
jbe
cmps
fnsetpm(287
mov
stos
cmp
mov
jle
jle
fcomip
add
jb
repnz
clc
mov
in
or
ror
enter
sub
mov
into
sub
push
cmp
add
inc
sar
sbb
imul
loope
cs
outs
call
mov
clc
mov
outs
sub
cs
outs
clc
sar
outs
or
retf
push
or
xchg
out
sbb
stos
sti
ins
adc
nop
mov
mov
jnp
pop
arpl
inc
dec
scas
scas
fld
fstp
mov
jle
je
dec
push
jle
scas
test
mov
into
jmp
add
push
(bad)
adc
mov
mov
(bad)
push
outs
jnp
movs
jl
or
add
leave
in
in
(bad)
mov
add
cmp
xchg
ret
outs
cmps
pop
sbb
push
scas
jmp
scas
scas
pop
add
in
jbe
pusha
mov
dec
shl
pop
cvtps2pd
imul
sub
sahf
and
mov
cmps
mov
aas
lahf
(bad)
mov
cmps
push
add
pop
cdq
add
(bad)
(bad)
aas
push
retf
scas
out
mov
fninit
push
xchg
in
(bad)
or
sbb
out
popa
xchg
inc
adc
push
iret
xchg
ds
cmp
sub
add
xchg
dec
adc
cmps
mov
fisub
and
or
xor
test
xlat
xchg
int
mov
in
push
sahf
ror
jne
sahf
stc
shr
into
dec
ds
pop
test
mov
ds
cmp
xor
mov
adc
dec
dec
adc
mov
mov
ds
dec
dec
fnclex
mov
pop
mov
mov
daa
jle
outs
test
je
ins
popa
sti
mov
and
xchg
aaa
dec
jle
sbb
push
push
ja
inc
mov
jae
pusha
add
outs
ror
loope
sbb
sbb
imul
jmp
out
jno
jae
out
cmp
push
cmp
cmps
cmp
stos
push
push
jle
outs
sub
cli
fistp
adc
retf
stos
jo
xor
xchg
ins
stos
shr
pop
ins
dec
adc
pop
or
inc
mov
stos
(bad)
sti
mov
fwait
mov
rcr
push
mov
pop
jg
in
ror
scas
inc
ret
ret
xchg
inc
sahf
sti
(bad)
scas
cdq
inc
rcr
push
pop
pop
es
xor
inc
mov
retf
shl
stos
fcmovne
(bad)
jecxz
sbb
or
cs
ins
dec
adc
pop
pop
dec
lahf
xor
cwde
dec
push
ja
ins
ret
pop
and
jmp
sbb
or
icebp
(bad)
std
inc
movs
cli
fcmovnbe
idiv
nop
int
ja
xchg
sub
sti
shl
lahf
xor
jmp
popf
test
and
add
shl
(bad)
push
and
push
or
outs
lahf
lock
push
jp
(bad)
cmps
ret
sub
imul
push
push
add
jae
arpl
xor
or
in
mov
loopne
ret
or
stos
out
dec
xchg
int
loope
push
in
pop
inc
jno
mov
jmp
xchg
fidiv
cmp
mov
(bad)
gs
lds
(bad)
(bad)
mov
ret
jmp
ins
and
outs
inc
sub
and
leave
rol
adc
jmp
cmps
into
sbb
pop
cmps
cmp
jnp
pop
jle
push
imul
or
aaa
jecxz
jmp
cmps
mov
mov
fist
data16
pop
adc
xchg
lahf
sbb
jae
jnp
inc
jle
fstp
jg
mov
push
cmps
push
dec
mov
xchg
mov
scas
pop
out
push
push
mov
mov
mov
cmps
icebp
cs
add
pop
sti
mov
dec
into
repz
cmc
loopne
cmp
outs
loope
loop
push
enter
outs
retf
pop
mov
cs
or
xchg
adc
hlt
pop
cmp
cmp
inc
mov
shl
sar
or
cmp
lahf
into
fdiv
mov
sbb
fst
mov
jbe
fidivr
ds
rcr
pop
aam
jnp
(bad)
outs
jnp
xor
mov
mov
mov
mov
loop
xlat
xchg
fisttp
add
es
fwait
aam
scas
add
sub
push
stos
or
pop
sub
sub
inc
xchg
(bad)
js
fwait
int3
jmp
mov
fwait
or
cmp
cmp
cmps
sub
call
lods
into
aam
mov
stos
adc
mov
loop
outs
not
push
loope
not
neg
test
cmp
retf
mov
push
out
sub
add
sbb
cmp
sbb
jnp
sbb
jg
stos
jb
mov
out
mov
pop
enter
pop
and
imul
pushf
and
fwait
adc
into
jmp
test
pcmpgtw
mov
dec
out
mov
fimul
pop
add
out
sti
mov
push
pop
or
adc
sub
pop
loopne
xchg
jno
inc
mov
lods
and
adc
push
div
xchg
cmp
int
jp
push
in
push
clc
int
add
(bad)
jmp
imul
mov
into
dec
mov
sbb
inc
adc
pop
rcr
pop
out
scas
addr16
outs
(bad)
cmp
shl
rol
cmc
push
dec
jnp
movs
adc
mov
clc
mov
repz
test
fisttp
mov
xlat
jp
xchg
mov
xchg
xlat
fist
retf
xchg
and
fild
xchg
sub
das
push
ret
scas
shl
inc
sub
xor
(bad)
addr16
dec
jnp
sbb
dec
xchg
xchg
lock
dec
mov
sti
adc
sti
fwait
mov
rcr
inc
icebp
in
mov
neg
sahf
out
(bad)
ss
in
(bad)
loope
fnclex
jg
cmp
outs
fwait
dec
inc
lock
inc
xor
pop
(bad)
popf
sbb
rcr
jl
movs
cmc
pop
cmps
xor
dec
mov
adc
mov
or
daa
(bad)
addr16
pop
mov
mov
dec
mov
fistp
jge
jae
and
sbb
or
(bad)
imul
pop
xchg
push
mov
cli
sub
fstp
pop
mov
fild
xchg
loope
dec
clc
jle
dec
jnp
imul
jbe
mov
(bad)
not
adc
or
cmp
dec
xchg
mov
jmp
retf
ret
scas
ins
sbb
sub
jmp
cmp
outs
xchg
jl
pushf
fwait
mov
stos
data16
(bad)
sbb
mov
ds
cmp
sub
jnp
dec
dec
dec
mov
or
sti
xchg
adc
pop
popf
or
sbb
sti
push
retf
and
jp
ja
sub
xor
cmps
xor
jp
sar
mov
aas
std
imul
popa
inc
retf
and
sti
adc
push
in
dec
lea
test
xchg
jle
xchg
xchg
sbb
dec
jae
mov
stos
push
addr16
pop
retf
push
fcmovu
es
addr16
cwde
push
ret
das
pop
mov
mov
fwait
push
stos
scas
jbe
scas
jno
mov
jmp
dec
mov
cs
outs
(bad)
shl
mov
fwait
sbb
scas
cmp
or
(bad)
(bad)
push
sbb
xchg
aam
fcom
sbb
mov
sahf
and
mov
adc
cmc
stos
call
pop
test
add
push
pop
sti
(bad)
sub
xor
les
in
rcr
addr16
les
mov
fdivr
repnz
ja
jge
mov
jge
stc
pop
aaa
jno
pusha
xchg
cmps
mov
jb
call
hlt
mov
mov
call
xor
(bad)
sub
inc
out
outs
in
sbb
out
mov
xlat
add
cmp
rcr
inc
inc
lods
imul
mov
lock
and
cmc
mov
pop
bound
mov
jl
aas
cmp
frndint
fnsave
(bad)
repz
movs
ds
jb
push
test
mov
add
dec
in
add
data16
inc
mov
mov
sbb
dec
and
dec
mov
ror
ja
nop
arpl
sub
sub
pop
mov
mov
dec
sti
clc
xchg
jge
sub
xor
xchg
(bad)
push
mov
test
jo
mov
jecxz
movs
push
lds
and
add
mov
std
cld
gs
das
sub
sub
imul
inc
pop
xlat
mov
ins
xchg
shl
inc
ror
jecxz
movs
fnstcw
sub
cwde
ret
push
dec
and
in
sbb
inc
data16
sbb
dec
in
sub
stos
pop
addr16
xchg
mov
mov
lahf
jbe
imul
mov
movs
test
scas
imul
stos
mov
push
fld
jo
pusha
pop
nop
lods
cmp
sbb
lahf
xchg
and
ds
push
jmp
jle
jmp
sbb
jecxz
sti
mov
mov
jnp
cwde
mov
into
ja
fwait
push
jmp
imul
cmps
xor
outs
push
call
shl
jle
jae
mov
(bad)
cwde
stos
js
sbb
jle
fcmovnu
mov
sub
iret
jmp
popa
stos
sub
retf
out
mov
imul
rol
outs
jne
mov
daa
imul
push
add
pop
ret
mov
sub
cdq
cmc
jo
test
push
or
imul
sbb
dec
pop
adc
cmp
add
mov
daa
int3
push
or
mov
cmp
fbld
cmp
dec
(bad)
sbb
push
es
sbb
mov
(bad)
mov
xchg
and
imul
icebp
(bad)
imul
jnp
jle
imul
les
mov
out
shl
arpl
pop
ins
pop
shl
outs
cvtdq2ps
setb
(bad)
retf
xchg
add
jne
pop
push
xchg
ja
out
jo
or
jle
outs
dec
dec
jg
xor
pop
loopne
push
inc
jnp
not
cmp
lods
push
data16
inc
not
or
push
mov
test
je
or
mov
stos
out
sahf
sub
jge
push
iret
enter
jecxz
jle
sbb
xor
(bad)
stos
pop
ficomp
xor
scas
retf
push
imul
pop
sub
test
int3
stos
iret
outs
xor
pusha
jmp
pop
js
pop
std
jmp
mov
jae
push
aad
je
mov
push
inc
mov
adc
sub
std
call
mov
cli
mov
jge
add
cs
inc
sbb
sub
outs
ja
push
sbb
stos
pop
int
out
movs
stos
sub
aaa
pop
js
stos
jbe
iret
dec
dec
jmp
outs
mov
and
fistp
(bad)
nop
xchg
dec
icebp
jo
stos
sub
int
int
pop
or
in
fsub
sbb
pop
out
dec
loope
push
shr
pop
mov
xor
repz
pop
mov
shl
sub
das
add
pop
outs
xor
sti
and
daa
adc
ror
test
fisttp
add
outs
ds
imul
push
or
ret
adc
jmp
test
iret
ror
je
ja
jnp
iret
clc
xchg
pop
mov
out
or
cmps
into
outs
or
retf
push
mov
sub
inc
mov
ficom
xor
lock
sub
jmp
xchg
packssdw
inc
lds
aas
inc
mov
mov
ins
clc
loope
push
or
jle
mov
iret
inc
jmp
out
mov
xchg
scas
cdq
pop
outs
sbb
jae
stc
mov
(bad)
mov
mov
std
and
idiv
rcl
xchg
sub
sub
inc
out
or
mov
popa
les
dec
cwde
or
call
mov
sti
and
cmp
(bad)
stc
jg
jnp
jbe
or
mov
(bad)
and
pusha
pop
inc
sbb
je
cwde
or
jg
(bad)
xchg
sahf
out
dec
fld
push
idiv
aam
xchg
daa
dec
outs
das
pop
sub
repz
dec
fs
stos
data16
xchg
jmp
test
mov
outs
jnp
imul
ins
jo
stos
mov
(bad)
sub
inc
or
movs
mov
fwait
dec
test
push
repnz
or
mov
or
test
mov
fwait
xchg
into
mov
(bad)
pop
out
sub
push
cmp
sub
mov
mov
imul
test
inc
cmp
mov
adc
cmps
in
lds
push
imul
cmp
xchg
mov
cli
mov
cmps
retf
out
mov
sub
bound
sub
adc
push
test
mov
jno
xor
je
push
hlt
in
jmp
sub
push
jle
sub
mov
mov
and
sbb
test
iret
jb
pop
inc
dec
xor
ss
lea
mov
mov
or
fsubrp
push
sbb
push
pop
jle
outs
sub
add
mov
xchg
xor
sub
test
push
fwait
cs
xchg
mov
imul
cmps
pop
or
mov
cmps
sub
jle
sahf
mov
push
jmp
(bad)
or
sar
add
inc
movs
mov
jae
jmp
cld
fs
mov
inc
retf
mov
es
out
shl
and
loopne
adc
fwait
scas
arpl
mov
sar
or
imul
xchg
das
mov
lds
mov
sti
jno
repnz
mov
ds
movs
mov
sub
push
movs
aas
mov
pop
stos
and
stos
push
scas
jmp
and
mov
adc
fisttp
rol
in
into
cs
sbb
and
mov
out
(bad)
shl
imul
rcr
push
ins
jae
dec
sub
cmp
xchg
aad
out
(bad)
loope
push
cs
fsub
sbb
and
cs
and
rol
das
cmps
aas
out
into
(bad)
cmp
mov
mov
adc
sbb
loop
loope
push
fdivr
xchg
push
das
mov
and
in
push
movs
ja
sub
xor
fbstp
mov
(bad)
adc
adc
or
push
(bad)
cmp
adc
xchg
enter
(bad)
xchg
and
or
add
lahf
bswap
cmp
daa
push
push
cmc
or
mov
out
scas
mov
add
sbb
dec
call
cmps
mov
call
mov
mov
(bad)
pushf
push
adc
add
hlt
out
cmps
sub
jle
xor
pop
xchg
int
inc
dec
mov
aaa
mov
mov
movs
jle
sub
xchg
xor
and
mov
xchg
(bad)
out
dec
push
mov
jmp
jae
pop
das
push
loope
repnz
mov
mov
imul
mov
adc
mov
(bad)
or
cmp
mfence
add
lea
inc
(bad)
lahf
jmp
in
call
les
dec
cwde
or
call
mov
sti
and
cmp
(bad)
stc
jg
jnp
push
mov
jb
arpl
sahf
push
(bad)
mov
shl
repz
or
frstor
out
xchg
sbb
int3
mov
stos
mov
imul
mov
xchg
inc
push
movs
sub
mov
inc
retf
or
fidivr
pop
stos
fidiv
into
pop
mov
shl
sub
pop
cmc
xor
ds
mov
loope
ins
inc
fwait
stos
out
inc
add
dec
sbb
cs
xchg
outs
push
movs
std
call
inc
dec
fs
stos
inc
fist
xchg
addr16
mov
outs
jnp
imul
ins
jo
stos
mov
and
add
cmp
aaa
jnp
pop
dec
test
push
repnz
mov
xor
mov
or
iret
push
test
mov
fwait
xchg
into
mov
(bad)
adc
sub
push
cmp
sub
mov
mov
imul
test
inc
cmp
sahf
sti
adc
cmps
in
lds
push
retf
push
sub
and
fwait
jle
mov
not
cmps
retf
out
aas
fisubr
mov
enter
sub
pop
adc
push
test
outs
scas
test
xor
je
push
hlt
in
hlt
inc
sub
idiv
sub
mov
mov
mov
cmp
dec
into
test
iret
jb
pop
dec
xor
ss
lea
mov
mov
or
mov
xchg
dec
inc
(bad)
(bad)
push
pop
jle
outs
sub
add
mov
xchg
xor
sub
test
fld
jle
cmp
cmps
call
jno
(bad)
xor
mov
push
or
adc
ss
cmp
xchg
push
imul
je
cmp
aaa
loope
and
in
repz
pop
sub
push
call
fdivrp
loope
xor
movs
retf
je
or
fwait
jmp
cmps
ds
stos
(bad)
enter
hlt
sbb
add
dec
stos
dec
inc
jle
jbe
cmp
sbb
stos
imul
inc
pop
jle
mov
fld
sbb
xchg
retf
sub
addr16
das
cmp
test
outs
jnp
mov
and
mov
jmp
cmc
xchg
push
dec
jg
outs
lods
mov
push
mov
push
mov
out
jbe
jmp
cmc
js
pop
cmp
icebp
ret
jbe
dec
push
(bad)
popa
(bad)
xor
not
jmp
xchg
sub
mov
sbb
inc
pop
mov
mov
lahf
jmp
hlt
test
into
les
adc
stc
es
jle
and
cmp
not
das
stos
cld
fbld
outs
ret
outs
popf
jmp
inc
cmp
repz
mov
(bad)
daa
mov
add
jae
cmps
outs
push
aam
pop
cmc
push
jnp
sahf
add
inc
push
and
mov
clc
test
ficomp
add
ds
js
inc
ret
push
push
cmc
ret
dec
pop
dec
(bad)
xor
add
aaa
cmp
(bad)
pop
push
movs
mov
outs
jnp
imul
sahf
sub
arpl
data16
imul
mov
pop
cmp
dec
dec
fdivrp
ja
inc
adc
mov
mov
push
cmps
mov
lods
pop
loopne
test
fild
jno
das
retf
add
aad
into
inc
sar
mov
mov
cmp
xchg
lods
or
mov
cmps
add
jno
in
dec
lock
xlat
pop
call
add
pop
cdq
sbb
inc
cmp
add
nop
pop
aaa
dec
rol
add
or
jle
jecxz
sbb
adc
je
cmp
inc
ins
daa
fisubr
outs
ds
cmp
jb
add
dec
ss
or
iret
pop
mov
mov
push
fstp
ror
sub
popa
mov
aas
xchg
mov
call
or
test
push
sub
sbb
dec
xchg
mov
out
mov
(bad)
out
xor
scas
mov
xchg
jae
cmc
and
(bad)
mov
je
in
sahf
fiadd
stos
mov
lock
fisubr
sbb
sub
sbb
mov
inc
popa
fimul
mov
(bad)
or
add
mov
aas
add
mov
fisubr
adc
mov
(bad)
fnstcw
shl
cmp
or
push
ret
or
(bad)
out
jae
outs
xchg
retf
push
ret
test
or
test
add
dec
into
xor
push
mov
add
sub
xchg
aam
push
or
pop
pop
xchg
(bad)
fnsave
and
mov
inc
(bad)
movs
clc
fwait
push
push
cmp
inc
mov
mov
out
repz
jmp
loope
add
shl
sti
pop
and
jp
mov
inc
sbb
mov
jle
jb
pop
cmp
mov
push
mov
mov
add
push
pop
or
push
imul
dec
xchg
scas
push
imul
mov
push
bound
xchg
es
adc
jg
cmps
push
mov
inc
mov
call
retf
adc
or
adc
inc
push
mov
jge
push
sbb
outs
test
fs
into
shl
push
xlat
fisttp
iret
mov
push
jnp
cmps
jge
aaa
(bad)
xor
scas
call
adc
xchg
cmp
jnp
call
xor
popa
iret
pop
push
push
data16
dec
idiv
int
jno
stc
xchg
arpl
stos
jmp
loope
out
push
cmp
test
pop
addr16
mov
jno
inc
xchg
das
jae
cmc
mov
add
cmps
inc
in
or
fdiv
dec
xchg
and
das
dec
fwait
sti
sahf
jle
shr
rcr
std
mov
pop
fidivr
jnp
fdiv
mov
jnp
call
lods
jnp
push
jno
add
adc
adc
aas
pop
inc
sbb
push
jecxz
adc
repz
icebp
mov
dec
jecxz
cmp
jnp
dec
das
lods
test
sbb
out
stos
je
aas
pop
inc
rcr
test
sahf
or
les
shr
mov
cdq
sti
xor
in
into
jecxz
jmp
(bad)
jmp
mov
std
pop
adc
jnp
push
aad
(bad)
xlat
push
xor
cmps
ds
ss
call
pop
sbb
retf
sar
pop
dec
rcr
pushf
sti
jbe
jmp
out
(bad)
jle
sbb
xchg
sub
pop
stos
retf
retf
out
cli
push
(bad)
nop
jae
popa
jg
push
sub
jg
imul
lock
repz
adc
sub
mov
dec
push
ds
es
dec
fimul
xchg
dec
out
ss
dec
fwait
imul
adc
sbb
dec
cs
(bad)
push
push
imul
mov
gs
mov
fistp
add
scas
xchg
dec
pop
or
dec
dec
outs
sbb
sahf
mov
ret
pop
cmp
adc
stos
mov
(bad)
std
add
scas
xor
popf
sub
cmp
loop
mov
push
cmp
sti
fisubr
xchg
mov
sub
xchg
cmp
fistp
nop
xor
call
std
sahf
jae
stos
jo
stos
sahf
push
aas
cmp
pop
cvtps2dq
xchg
push
call
push
sbb
mov
jae
das
mov
jmp
dec
cmc
dec
stos
jp
imul
icebp
mov
fimul
out
nop
jb
cs
lods
test
xor
out
fsub
retf
xchg
stos
pusha
scas
sbb
mov
jbe
fild
pop
jle
popf
ds
add
(bad)
je
mov
(bad)
lods
out
out
xchg
jmp
loope
push
mov
mov
mov
cli
je
xchg
sbb
xchg
out
adc
ror
cmp
push
stos
sbb
dec
int3
inc
mov
pop
fiadd
enter
pusha
ficomp
push
cs
mov
pop
cmp
mov
sbb
fwait
inc
mov
popa
clc
ret
into
jne
stos
mov
adc
sar
aam
cdq
xchg
sbb
cmp
inc
fist
adc
mov
mov
nop
ret
ds
data16
movs
or
repnz
adc
popa
out
add
add
out
xchg
mov
(bad)
sbb
pop
mov
test
adc
retf
retf
gs
sub
dec
(bad)
int
outs
dec
inc
cvtdq2ps
mov
xchg
dec
mov
and
and
mov
sub
xlat
push
loope
data16
mov
jg
fidiv
repz
xor
adc
imul
imul
pop
rcr
xchg
dec
adc
mov
btr
and
pop
cmp
push
call
mov
shl
mov
scas
in
fiadd
cmps
ins
loope
sbb
sub
push
inc
fsubr
jmp
mov
stos
push
fstp
xchg
cmp
and
sahf
and
jno
inc
(bad)
pop
ds
rcl
loope
nop
push
xchg
lock
cs
aam
scas
xchg
adc
mov
inc
mov
inc
ror
imul
pop
(bad)
add
ds
add
jnp
sbb
adc
(bad)
(bad)
xchg
(bad)
xchg
pop
jbe
rcr
data16
imul
repz
lock
std
data16
adc
jp
movs
outs
xchg
sub
lock
addr16
push
(bad)
push
inc
mov
in
fistp
sbb
pop
sub
(bad)
mov
lds
inc
into
scas
jmp
in
inc
push
add
cmp
imul
pop
cmps
push
mov
and
push
lds
(bad)
sahf
fwait
mov
scas
xor
ds
rol
push
stos
call
jp
das
cmp
inc
hlt
mov
mov
stos
adc
pop
shl
(bad)
sar
sbb
jp
cmp
out
out
iret
jmp
mov
inc
sahf
cmp
push
in
dec
add
pop
sub
rcl
pop
test
push
jne
xchg
sti
into
jb
outs
push
or
pop
jb
stos
cmp
mov
(bad)
retf
into
sbb
dec
add
cmp
and
xchg
pop
lea
cmp
jle
push
sub
sar
dec
out
mov
dec
outs
popa
sbb
and
dec
adc
xor
test
scas
(bad)
fisttp
and
shl
nop
fiadd
push
pushf
lods
imul
add
out
mov
mov
push
xor
mov
mov
in
pop
daa
std
shl
add
jmp
pop
retf
xacquire
and
add
jns
sbb
jg
ds
xor
outs
stos
outs
fist
in
mov
rol
pop
popf
push
out
dec
out
retf
(bad)
rcr
pop
add
stos
and
iret
inc
sar
pop
daa
ins
sbb
pop
outs
mov
iret
push
call
scas
ret
or
pusha
cmp
arpl
add
imul
or
ficomp
adc
xchg
mov
sub
mov
fstp
out
fldcw
push
add
idiv
mov
pop
push
dec
stos
dec
cmps
mov
inc
stc
push
inc
xor
mov
shr
or
pop
mov
dec
outs
ds
or
mov
mov
sti
jnp
sahf
mov
dec
ret
and
pop
pop
out
arpl
es
and
xchg
fwait
aas
dec
cs
sub
xchg
mov
js
mov
ficom
into
jne
lods
es
sahf
ds
push
loope
push
pop
sbb
mov
popa
stos
retf
pop
jo
inc
fnsetpm(287
ds
rcr
clc
pop
or
jp
lds
pop
stos
push
push
(bad)
adc
sub
(bad)
cmps
sub
test
pop
jle
fdivp
(bad)
and
fdivrp
push
sbb
cwde
push
hlt
inc
cmp
sub
outs
adc
retf
mov
pop
mov
(bad)
cmp
repz
or
xlat
adc
or
push
cwde
in
je
loope
fiadd
stos
push
jmp
sbb
js
movs
cmp
js
imul
sahf
sti
jno
push
fwait
pop
jo
pcmpgtw
sbb
arpl
push
pop
jle
icebp
xor
push
adc
call
les
fs
sbb
aad
dec
xor
scas
loop
mov
fwait
xor
sbb
cmp
imul
(bad)
outs
xchg
xlat
rcl
(bad)
sti
mov
xor
inc
mov
push
jae
fnstsw
test
inc
test
(bad)
adc
out
cmp
adc
mov
cdq
cmp
sub
imul
loope
inc
dec
sub
xor
nop
stos
pop
sub
cld
push
pushw
push
jl
xchg
and
mov
and
aaa
mov
cwde
dec
xlat
xor
loop
dec
fbstp
outs
push
push
xchg
mov
pop
stos
mov
mov
mov
inc
(bad)
inc
movs
mov
test
imul
jbe
retf
fcomp
mov
pop
shl
ins
push
shl
jle
scas
mov
mov
imul
(bad)
es
and
imul
adc
fdivr
or
test
scas
xor
mov
xor
std
out
fcom
ret
movs
mov
sub
stos
push
mov
enter
cmc
lock
cmp
mov
cmp
and
inc
cmp
push
sub
(bad)
xchg
mov
mov
push
xor
dec
nop
pop
or
or
jo
lock
test
addr16
sbb
mov
cwde
ror
es
and
ror
mov
cmp
sahf
dec
sub
mov
inc
cmp
jmp
and
fs
fidiv
mov
imul
or
pop
sahf
cs
test
inc
xchg
mov
and
add
fild
not
pop
imul
outs
pop
cs
xor
scas
mov
mov
xchg
push
cmps
push
push
add
mov
dec
out
adc
pop
fild
fidivr
mov
mov
mov
mov
mov
test
fcomp
and
inc
mov
shr
call
adc
fucomp
int3
push
mov
mov
add
add
push
fst
call
sti
lea
jmp
aas
push
shl
sub
jle
push
xlat
imul
ret
into
scas
inc
sahf
out
call
jmp
test
mov
xlat
imul
std
in
hlt
and
push
fwait
stos
inc
fidivr
push
imul
jle
xchg
packuswb
nop
pop
push
mov
ins
cmp
repz
pop
jnp
sub
shl
or
mov
xor
out
in
lea
iret
add
movs
mov
mov
fsub
adc
pop
ror
pop
retf
lods
pop
sti
imul
(bad)
mov
fwait
sub
repz
push
dec
outs
out
xchg
pop
xor
dec
or
fstp
test
in
or
std
and
fwait
xchg
mov
into
jne
out
xchg
retf
jmp
ss
or
pop
stos
dec
sub
dec
imul
inc
fwait
or
lods
clc
mov
cmps
retf
push
sti
popf
mov
push
push
popf
dec
sub
dec
xchg
clc
(bad)
xchg
adc
sahf
in
fnsave
je
out
add
inc
push
xchg
cs
popf
outs
push
mov
call
loop
iret
dec
movs
mov
mov
out
pop
inc
push
jne
or
dec
pusha
dec
sahf
addr16
daa
stos
mov
(bad)
xor
mov
addr16
cmp
mov
mov
mov
ror
push
mov
(bad)
ficomp
fiadd
sub
xlat
div
sbb
retf
cli
mov
out
inc
add
(bad)
out
dec
or
cmova
pop
or
xor
inc
xchg
inc
retf
ficom
into
pop
imul
pop
push
mov
mov
imul
fstp
mov
repz
rol
ds
adc
outs
push
pop
sub
scas
inc
imul
mov
ds
loopne
push
inc
sbb
mov
jge
mov
out
sub
push
faddp
xor
jp
shl
sub
pop
div
mov
data16
arpl
retf
and
sti
xor
(bad)
in
dec
lea
test
xchg
sbb
dec
jae
mov
or
pop
retf
push
aam
add
cmps
shl
cwde
push
ret
and
dec
xchg
test
cmps
scas
push
sahf
iret
jno
mov
jmp
sbb
hlt
(bad)
jg
sub
ja
mov
or
mov
stos
ret
(bad)
dec
sti
ss
ds
rcl
pop
mov
mov
dec
xchg
xchg
cmps
fistp
inc
mov
and
sbb
or
(bad)
imul
pop
xchg
outs
xchg
pop
push
mov
cli
sub
fist
jmp
xor
loope
dec
clc
jle
inc
jnp
imul
iret
or
cmp
call
cmp
aam
pop
fisttp
push
pop
lea
inc
(bad)
jmp
retf
cs
scas
ins
sbb
daa
ficomp
xor
mov
call
stos
fwait
loop
inc
(bad)
cmp
das
out
push
and
mov
cli
sub
movs
xchg
bswap
jnp
inc
dec
jg
xchg
push
out
xchg
inc
mov
dec
lea
or
push
jp
pushf
ret
or
push
mov
push
inc
in
jbe
xor
sbb
out
cld
push
pushw
push
mov
(bad)
aaa
(bad)
cmp
sahf
jne
cmps
adc
adc
push
fdiv
push
xchg
(bad)
loop
xchg
into
scas
sbb
adc
fisub
retf
and
in
push
imul
test
jg
dec
(bad)
jnp
add
call
push
add
bswap
sub
pop
adc
cmps
cmp
scas
pop
push
sar
sbb
mov
ror
cmp
icebp
or
ror
(bad)
mov
mov
mov
popa
jo
push
aam
pop
and
not
pop
mov
cmp
scas
mov
add
test
push
out
and
jo
cmp
add
dec
inc
add
rcl
add
mov
jmp
dec
dec
and
adc
or
movs
repz
xchg
ss
scas
ss
imul
mov
jo
int3
add
in
je
xchg
xchg
cs
or
and
inc
sar
mov
mov
test
dec
outs
sti
or
dec
mov
add
pop
movs
add
mov
jmp
fisub
xor
test
fwait
out
je
inc
shl
dec
and
jmp
in
jmp
add
arpl
push
jle
fimul
pop
das
dec
xchg
push
mov
sahf
fist
and
or
movs
fisub
pop
mov
sti
shr
inc
arpl
sahf
mov
inc
fdiv
sbb
in
jns
jle
ins
sub
mov
inc
mov
into
cmc
retf
retf
mov
jno
or
push
idiv
and
dec
test
cmp
in
ror
fidiv
int3
inc
fld
addr16
test
dec
mov
fwait
push
jne
int
fisttp
stc
ficom
retf
outs
fld
jmp
sbb
sub
xor
shl
mov
jle
hlt
das
jg
xchg
push
push
mov
das
mov
cli
imul
mov
inc
xchg
inc
retf
pop
jmp
pop
ds
cs
test
mov
fiadd
xchg
cmp
push
in
ja
out
retf
inc
pop
push
or
mov
sub
push
pop
adc
or
shr
into
(bad)
sahf
xchg
add
dec
iret
sub
bound
ret
push
mov
dec
xchg
out
dec
jg
repz
mov
sahf
push
or
adc
ud0
js
(bad)
mov
sub
lods
imul
sbb
mov
(bad)
ficomp
jmp
gs
pop
enter
sub
pop
sub
pop
call
push
xchg
retf
adc
mov
out
dec
or
mov
pop
or
xor
inc
xchg
inc
retf
ficom
into
pop
imul
pop
push
mov
mov
imul
fstp
mov
repz
test
fisttp
mov
xlat
jp
xchg
mov
stc
xlat
fist
retf
xchg
rol
sbb
loop
xchg
sub
das
sbb
shl
inc
sub
xor
(bad)
addr16
dec
jnp
or
dec
xchg
lods
mov
stos
inc
out
imul
push
jno
jmp
in
sub
fild
cmc
push
inc
jnp
movs
adc
jbe
push
jns
clc
mov
bnd
shr
sub
pop
push
mov
aas
std
imul
popa
inc
retf
and
sti
sbb
push
in
dec
lea
neg
push
lahf
jle
xchg
xchg
sbb
dec
jae
mov
(bad)
push
addr16
pop
retf
push
leave
fisubr
into
pop
loop
cwde
push
ret
cmp
mov
das
in
fwait
push
mov
jno
mov
jmp
sbb
(bad)
jg
sub
imul
stos
mov
arpl
and
(bad)
dec
sti
ss
fidivr
inc
rcl
pop
mov
mov
dec
scas
jnp
xchg
cmps
fistp
push
retf
add
stos
pop
fiadd
cld
sbb
or
pop
xchg
jns
mov
cli
sub
fcmovnb
xor
mov
ds
push
loope
dec
clc
jle
pop
jnp
imul
push
iret
or
gs
adc
call
cmp
dec
xchg
aad
xchg
inc
(bad)
jmp
retf
xchg
scas
ins
sbb
and
xchg
jmp
mov
call
repz
cmps
je
(bad)
cmp
ja
cmps
and
mov
mov
bswap
jnp
pop
dec
daa
mov
or
sti
(bad)
adc
pop
sar
add
sub
das
daa
rep
mov
imul
mov
push
mov
mov
into
loope
jbe
sub
repz
mov
repz
dec
popa
sti
push
cli
or
push
add
ds
int3
ja
push
outs
(bad)
movs
cmps
mov
int
mov
(bad)
outs
push
add
jo
mov
addr16
imul
das
and
mov
inc
shl
mov
fcmovnbe
or
aaa
and
adc
hlt
das
jl
es
sbb
data16
mov
jb
loopne
or
fist
(bad)
mov
iret
sbb
xchg
cmp
imul
mov
mov
ror
cs
jp
cs
inc
or
cmc
outs
jns
imul
push
mov
es
mov
add
jmp
pop
sbb
sub
pop
inc
(bad)
pop
inc
retw
jno
dec
gs
and
xchg
(bad)
outs
in
push
push
aam
movs
or
mov
sti
xchg
rcl
jmp
dec
and
sbb
clc
sar
dec
jnp
cmps
stos
dec
test
ret
call
mov
ret
jo
stos
fimul
sbb
and
loope
push
pop
cs
sub
fld
fwait
sti
xor
sbb
inc
sar
jbe
or
jle
ins
or
push
data16
sub
or
les
data16
daa
add
inc
stos
mov
mov
mov
into
in
hlt
inc
cmp
cmps
sbb
mov
popf
mul
(bad)
scas
push
lahf
pop
cdq
adc
cmp
outs
shr
scas
idiv
push
mov
into
test
xor
inc
sbb
push
or
xor
dec
dec
mov
stos
ret
iret
out
lea
int
dec
mov
or
dec
xchg
ret
fwait
sti
sti
les
jae
push
cmp
retf
outs
sub
pop
push
dec
ds
mov
outs
lods
jmp
push
dec
lods
add
outs
jo
adc
call
sub
dec
sub
repz
push
inc
into
scas
scas
sahf
stos
inc
retf
in
mov
xor
loope
pop
cmp
fwait
mov
inc
push
and
(bad)
adc
data16
cwde
xchg
(bad)
sub
xchg
dec
xchg
jnp
xchg
dec
jae
out
scas
mov
add
adc
mov
or
clc
fs
jbe
outs
xchg
mov
mov
mov
mov
add
ds
push
imul
idiv
cmps
fbstp
outs
jle
xchg
sahf
sbb
mov
(bad)
nop
stos
jae
inc
outs
mov
and
cmp
dec
ret
scas
inc
jle
mov
xchg
fsubrp
inc
fidivr
dec
jae
sub
stos
dec
sub
push
mov
frstor
jno
dec
out
stos
imul
(bad)
push
push
sub
test
or
fistp
call
push
repz
mov
loope
icebp
pop
or
xchg
push
imul
mov
push
stos
push
mov
aaa
stos
inc
xchg
mov
jle
sub
xchg
cs
pop
and
xchg
aaa
scas
mov
scas
enter
mov
cmp
sub
sbb
xchg
lods
sbb
pop
pop
mov
mov
pop
dec
or
popa
or
neg
fcomp
mov
cli
pop
cmp
push
push
add
sti
or
push
dec
rol
jbe
clc
mov
outs
adc
push
(bad)
mov
pop
dec
xor
in
jecxz
cmp
mov
or
inc
jg
mov
mov
(bad)
xchg
push
pusha
ret
pop
sub
fdivr
sub
imul
repz
fcmovnu
cmp
jae
popa
das
mov
sub
ss
cmp
push
inc
push
data16
popf
xchg
(bad)
jecxz
sbb
or
mov
sub
or
add
popf
jo
and
and
add
shl
movs
push
push
jnp
xchg
mov
repnz
mov
mov
out
ins
hlt
inc
les
aam
sub
mov
jnp
call
(bad)
outs
push
fidiv
jae
gs
xchg
push
nop
sbb
jbe
push
loope
dec
movs
cmp
pop
imul
mov
and
pop
xchg
stos
fsub
add
pop
mov
(bad)
mov
adc
sbb
push
mov
pop
call
shl
xor
and
(bad)
popf
mov
sbb
pop
cs
jle
test
shrd
mov
sahf
pop
jno
cld
xchg
test
and
or
jae
outs
mov
xor
push
xor
cmp
fidivr
movs
(bad)
push
jl
pop
mov
imul
je
mov
mov
loop
push
dec
mov
loope
nop
xchg
mov
dec
fild
mov
adc
retf
inc
cwde
or
or
xchg
shl
scas
cmp
mov
bound
stos
jmp
mov
push
cs
and
bound
das
dec
ja
mov
mov
jne
pop
and
in
cmp
js
movs
xchg
xchg
out
jae
loope
inc
imul
lahf
sbb
or
mov
push
mov
scas
outs
ficomp
cmps
fidiv
push
dec
or
stos
sti
xor
imul
jge
push
jle
in
stos
cmps
test
inc
cli
(bad)
(bad)
mov
push
xor
adc
bswap
nop
jp
imul
push
lods
jnp
loop
adc
stos
jle
jne
gs
stos
or
push
jl
movs
cmc
pop
bound
mov
sahf
mov
sbb
cmp
shl
pop
mov
aas
aad
jnp
out
mov
js
gs
shl
cs
mov
outs
xchg
pop
lea
mov
push
sti
push
scas
inc
pop
or
ja
stos
sub
jle
xor
pop
xchg
int
inc
dec
mov
(bad)
retf
stos
jo
adc
repz
out
cs
jb
add
mov
and
test
sahf
mov
dec
jno
mov
and
test
mov
outs
jnp
imul
ins
jno
stos
mov
(bad)
sub
inc
or
cmp
aaa
jnp
xchg
dec
test
push
repnz
cmps
retf
xor
mov
or
pop
push
test
movs
and
mov
xchg
into
mov
xlat
(bad)
aas
out
sub
push
cs
sub
mov
mov
imul
test
inc
cmp
or
adc
cmps
in
(bad)
ja
push
ja
sub
and
fwait
push
mov
cmps
retf
out
arpl
sub
bound
sub
test
or
sbb
xchg
out
sti
dec
jmp
pop
push
cmc
in
hlt
inc
sub
out
sub
adc
mov
mov
cmp
fwait
into
test
into
jb
pop
sbb
ds
lea
mov
mov
or
mov
xchg
dec
inc
vpsubd
jle
outs
sub
add
mov
xchg
xor
into
dec
ds
fadd
jle
push
jnp
cs
idiv
mov
scas
into
call
cli
outs
inc
pop
cmp
jae
(bad)
sub
sub
xor
cwde
jbe
jne
outs
xor
xchg
and
shr
shr
jno
notrack
sbb
psrad
pop
sub
daa
jle
aaa
cs
imul
sahf
push
mov
and
dec
fisub
cmp
(bad)
jnp
and
jne
out
into
jp
hlt
mov
sub
mov
push
aam
pop
repz
imul
std
retf
loopne
inc
sub
ror
pop
xchg
daa
test
shr
inc
dec
cmps
fist
clc
jb
add
mov
sub
pop
sbb
lock
mov
int
(bad)
push
(bad)
popf
in
push
pusha
mov
mov
sbb
cs
mov
dec
cmps
mov
xchg
jae
push
mov
cmp
jecxz
fnstcw
cs
pop
jle
outs
ss
scas
fwait
repz
sahf
out
and
(bad)
aaa
(bad)
sbb
jbe
lahf
push
push
cmc
jmp
aad
(bad)
and
outs
xor
push
outs
aas
inc
pop
cmp
and
cs
iret
(bad)
push
sar
jbe
jmp
mov
stos
add
mov
jmp
in
jp
les
out
sahf
mov
sbb
fs
mov
ss
stos
and
xchg
call
(bad)
adc
icebp
jmp
shl
xchg
cli
pop
xor
push
outs
aas
inc
out
mov
pop
jmp
iret
retf
sar
xchg
sub
iret
lahf
loopne
pop
xor
out
sub
dec
push
cmp
jmp
sbb
(bad)
call
push
jecxz
sbb
xor
not
stos
scas
xchg
dec
iret
fwait
jp
cmp
dec
pop
ss
cmp
call
cmp
mov
pop
cmp
cmp
ror
jbe
xlat
icebp
dec
mov
sbb
add
jp
push
into
int3
xor
mov
adc
repz
cmp
movs
pop
mov
aas
mov
(bad)
and
outs
inc
inc
scas
ds
(bad)
(bad)
cmps
shld
xchg
neg
ret
call
outs
(bad)
or
xchg
ret
push
loope
dec
pop
add
add
mov
pop
dec
push
dec
or
pop
pusha
into
add
cld
fld
mov
dec
dec
test
mov
xchg
je
inc
shl
jb
cmps
xor
add
div
mov
jle
fwait
and
mov
dec
and
sbb
repz
push
inc
scas
push
mov
jnp
shl
not
dec
stos
and
xchg
sti
adc
push
mov
push
push
cmps
repnz
retf
ss
dec
(bad)
xor
inc
jno
mov
adc
cmps
jbe
xchg
mov
retf
out
pop
mov
mov
fild
repz
and
outs
(bad)
jge
push
add
daa
neg
jae
rol
push
sbb
mov
imul
lahf
dec
stos
pop
(bad)
sub
sbb
inc
mov
jle
dec
sub
mov
popa
imul
dec
push
push
mov
push
mul
pop
cmp
push
mov
(bad)
push
(bad)
jmp
retf
(bad)
fwait
pop
call
jbe
aam
call
dec
(bad)
xor
pop
dec
push
dec
retf
mov
sti
ds
xchg
les
repz
iret
pop
lds
jg
push
setle
add
dec
fisub
arpl
xor
outs
sahf
jmp
mov
sbb
pop
cmp
xor
add
mov
xchg
adc
add
repz
jecxz
shl
ret
xchg
mov
mov
in
hlt
push
pop
mov
std
call
or
push
call
and
mov
cmps
adc
sar
pop
sub
push
xchg
jmp
sub
cmp
or
sbb
sub
jmp
jbe
inc
shl
jecxz
mov
xchg
sbb
stos
inc
(bad)
jnp
xlat
cli
cs
shl
sbb
ja
mov
mov
sbb
xchg
mov
das
sub
xchg
cmps
adc
outs
repz
jg
loope
cmp
imul
dec
pop
jmp
out
and
xor
xchg
sub
ss
(bad)
adc
mov
arpl
pop
xchg
in
mov
icebp
cmp
xchg
dec
fist
push
adc
pop
xor
xor
pop
hlt
call
mov
ret
inc
sbb
popa
add
retf
adc
and
in
dec
shr
aam
movs
repz
pop
mov
add
adc
call
push
adc
mov
fidivr
loopne
pop
push
je
inc
cmp
ret
xchg
jae
arpl
add
xor
xchg
cmps
push
xor
retf
es
push
xor
ret
push
dec
adc
aam
push
repz
call
mov
push
cli
and
cs
aam
jecxz
dec
(bad)
inc
je
ja
stos
ret
push
jae
push
add
into
mov
xchg
jg
ret
(bad)
mov
pop
mov
inc
sbb
dec
aaa
out
mov
jmp
add
and
cmps
aam
jle
push
jecxz
mov
cmps
(bad)
xor
mov
(bad)
and
retf
pop
adc
in
loop
(bad)
pop
data16
lods
bndstx
inc
mov
sub
out
push
repnz
sbb
in
retf
arpl
pop
sub
push
repz
sub
adc
dec
fild
(bad)
push
inc
sbb
and
push
jae
arpl
aam
mov
iret
xchg
cli
(bad)
push
inc
outs
push
ins
sti
push
neg
loop
jecxz
lahf
sub
imul
inc
imul
mov
pop
mov
jmp
add
mov
add
data16
sahf
outs
xchg
mov
fwait
je
mov
out
inc
cmp
retf
out
sti
xchg
data16
pop
sub
ret
dec
sub
xchg
ret
das
fwait
je
not
pop
stos
and
xchg
call
mov
repz
scas
ss
movs
cli
mov
sahf
out
(bad)
outs
(bad)
mov
jmp
push
std
(bad)
push
xchg
icebp
mov
shr
call
adc
fsubrp
jmp
jae
and
xchg
sub
mov
mov
mov
adc
adc
pusha
jp
mov
das
fsubr
push
jmp
dec
and
test
cmp
lock
call
fidivr
shl
inc
jle
ret
push
push
or
ds
xor
loope
mov
imul
dec
int
adc
jecxz
popa
pop
dec
arpl
repz
mov
jmp
sbb
jmp
jns
dec
dec
pop
retf
inc
sbb
inc
mov
jno
mov
sub
push
aas
cmp
dec
movntpd
mov
pop
(bad)
dec
(bad)
push
je
sahf
popa
or
daa
jnp
sub
xchg
ds
shl
pop
aam
pop
add
mov
push
dec
dec
repnz
mov
jle
pop
sub
je
jmp
retf
jae
sbb
adc
xchg
aas
hlt
div
mov
and
test
push
sbb
jno
dec
xor
ret
fisub
rcr
mov
out
fild
jmp
xor
mov
push
mov
ret
mov
mov
and
retf
push
pop
into
push
xchg
into
cmp
icebp
stos
or
fs
jecxz
sbb
xor
mov
push
inc
ror
rcr
dec
xchg
mov
je
mov
out
ret
sahf
jp
mov
in
inc
arpl
(bad)
mov
jnp
loopne
xchg
push
je
bnd
(bad)
(bad)
sub
ds
xchg
(bad)
(bad)
sub
sub
mov
outs
cmp
retf
data16
sbb
and
cmps
aam
mov
shl
dec
mov
ja
add
mov
sub
mov
xor
jecxz
sbb
mov
shl
adc
xchg
pusha
rcl
hlt
into
fistp
sub
push
cmc
inc
retw
mov
je
sahf
(bad)
add
inc
sub
mov
sbb
mov
xchg
out
jle
push
jecxz
in
dec
(bad)
push
je
cmp
outs
(bad)
mov
ds
das
rcl
push
pop
jg
outs
ss
inc
and
dec
mov
mov
jmp
xchg
sub
movs
test
lock
arpl
fs
scas
jmp
sub
add
scas
iret
sti
sbb
sbb
lods
aas
pop
mov
jle
and
mov
jmp
xchg
ds
das
les
push
jle
dec
mov
adc
mov
call
xor
fisub
pop
(bad)
ds
(bad)
into
push
loope
inc
(bad)
jle
outs
fwait
pop
mul
jecxz
popa
dec
mov
call
push
loope
dec
movs
sbb
sub
mov
es
(bad)
(bad)
xor
mov
adc
sti
gs
mov
pop
pop
mov
pop
mov
mov
and
sub
adc
jg
in
or
pop
data16
sahf
dec
and
mov
je
rcl
stos
pop
(bad)
sub
imul
or
jbe
out
pop
xor
xchg
fwait
pop
mul
jecxz
popa
adc
jbe
jmp
fstp
xchg
fwait
pop
mul
bound
out
pop
pop
mov
jbe
fimul
arpl
(bad)
mov
xchg
adc
retf
inc
ret
out
sti
sbb
adc
xlat
jle
xchg
mov
and
xchg
shl
dec
sahf
fisub
jb
(bad)
sti
and
push
xchg
into
cmp
icebp
mov
mov
aas
scas
mov
jae
inc
push
call
fwait
push
aam
pop
or
or
popa
imul
(bad)
out
adc
xchg
test
xchg
push
pop
data16
cmp
jnp
shl
mov
inc
xor
sti
xchg
push
xor
pop
les
cmp
add
inc
imul
mov
push
stos
daa
sbb
rcr
push
data16
popa
mov
dec
fs
scas
inc
shl
outs
(bad)
push
fwait
adc
jmp
add
mov
fistp
inc
jecxz
out
outs
jnp
les
mov
stos
mov
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
or
cmps
xor
gs
je
inc
popa
push
jno
(bad)
adc
(bad)
adc
add
add
jae
ins
push
mov
mov
sti
std
retf
add
xor
inc
addr16
je
inc
jno
and
jmp
or
sbb
cvtps2pd
outs
jp
push
fwait
mov
push
jb
std
iret
outs
pop
pop
imul
mov
(bad)
retf
out
repnz
into
in
scas
mov
gs
pop
jle
fs
sti
fcom
cmps
stos
rcr
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
out
cmp
femms
sbb
das
or
dec
push
pop
outs
dec
lahf
mov
scas
mov
cli
iret
jmp
push
and
inc
(bad)
jecxz
inc
arpl
loope
mov
out
fcomip
mov
pop
inc
dec
cwde
xchg
mov
cmps
repz
jp
pop
imul
cmp
dec
cmp
fsubp
into
sbb
or
xor
sub
cmp
dec
fwait
mov
scas
mov
inc
xor
fsubp
into
sbb
or
xor
sub
pop
jle
mov
pop
popa
dec
fwait
mov
stos
test
dec
out
sti
aad
into
sbb
sub
jnp
imul
pop
scas
mov
dec
loop
fsubrp
ret
or
cmp
aad
pop
or
pop
imul
xchg
(bad)
add
out
neg
jmp
sbb
push
sar
push
es
pop
jle
outs
jbe
imul
mov
(bad)
(bad)
fsubrp
into
adc
push
sub
pop
jle
outs
jnp
gs
fwait
mov
stos
mov
(bad)
out
sti
and
rcr
hlt
sub
sub
pop
jno
outs
test
dec
fwait
inc
mov
fsubrp
retf
out
add
jmp
push
or
les
cs
pop
jle
outs
jle
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
dec
jle
xchg
jle
imul
mov
(bad)
retf
out
sti
(bad)
into
sbb
or
cmp
sub
pop
jnp
outs
jnp
outs
pop
fwait
mov
stos
mov
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
dec
jle
xchg
jnp
imul
mov
(bad)
into
cli
sti
ficom
sbb
or
cmp
sub
pop
jle
outs
jnp
jle
fwait
inc
mov
into
jmp
adc
fsubrp
into
sbb
or
cmp
sub
dec
jle
imul
mov
mov
stos
mov
dec
clc
sti
ficom
sbb
or
cmp
sub
pop
jnp
outs
jnp
imul
mov
int3
dec
adc
fsubrp
fstp
ds
les
sub
pop
imul
fwait
mov
scas
xchg
(bad)
xor
jecxz
jmp
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
fild
retf
jmp
fsubrp
xor
cmp
cs
sub
inc
jle
xchg
jnp
jno
fwait
inc
mov
(bad)
retf
jmp
fsubrp
xor
or
and
sub
pop
jle
imul
mov
mov
stos
mov
dec
out
sti
(bad)
push
and
sub
inc
jle
xchg
jnp
imul
mov
and
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
push
les
ss
pop
or
fwait
mov
push
mov
dec
lock
ficom
sbb
push
xor
push
aam
inc
jle
xchg
jle
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
adc
cmp
sub
pop
jle
outs
jnp
je
fs
stos
mov
dec
adc
fcmovne
out
sbb
or
les
sub
pop
jle
outs
test
dec
mov
popa
stos
mov
(bad)
jmp
pop
or
cmp
aam
pop
jle
dec
jnp
imul
test
jno
dec
out
(bad)
adc
sbb
sub
loope
icebp
pop
jle
outs
pop
pop
xchg
dec
fwait
mov
stos
mov
call
in
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
fild
into
retf
adc
aas
ds
cmp
sub
pop
jle
imul
mov
mov
stos
mov
dec
adc
fsubrp
retf
ds
(bad)
movs
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
or
outs
jnp
dec
dec
fwait
inc
mov
cld
dec
adc
stc
jmp
in
sub
cmp
sub
mov
pop
pop
imul
fwait
or
ficom
sbb
push
push
cmp
aam
jae
dec
xchg
jnp
outs
addr16
mov
or
fcmovnb
into
sbb
push
pop
cmp
aam
pop
jle
inc
jnp
xchg
dec
mov
mov
sahf
scas
movs
(bad)
xor
rcr
jmp
sbb
push
add
push
aam
jno
dec
xchg
jle
imul
mov
movs
(bad)
xor
(bad)
cmc
jmp
in
push
add
pop
push
dec
outs
test
dec
sahf
xchg
mov
(bad)
xor
sti
fsubrp
into
sbb
or
cmp
sub
pop
jnp
outs
jnp
outs
arpl
sahf
stos
mov
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
in
sti
and
into
sbb
or
cmp
sub
pop
jnp
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
loope
ds
cmp
sub
pop
jle
outs
jle
imul
mov
fmulp
retf
out
add
jmp
sbb
or
cmp
sub
pop
dec
dec
outs
test
dec
stos
mov
stos
mov
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
pop
jnp
xchg
dec
fwait
mov
push
mov
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
cmp
mov
jnp
pop
dec
fwait
inc
mov
fmulp
retf
out
add
(bad)
sbb
or
sub
push
movs
jle
outs
jnp
imul
mov
mov
dec
out
sti
fsubrp
stc
sbb
hlt
cmp
sub
pop
jle
outs
jnp
outs
jbe
mov
stos
mov
(bad)
retf
out
add
jmp
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
mov
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
xor
sti
fcmovnbe
into
sbb
push
adc
push
aam
movs
or
sahf
test
mov
sti
lock
sti
and
and
or
cmp
aam
movs
jnp
outs
jnp
imul
mov
mov
dec
adc
out
repnz
hlt
cs
push
movs
or
sahf
or
fild
retf
out
sti
fsubrp
into
sbb
or
cmp
mov
js
dec
imul
mov
or
fild
into
sar
ficom
and
sbb
push
jnp
xchg
dec
fs
scas
mov
(bad)
xor
add
aam
sbb
hlt
sar
and
push
movs
jnp
outs
jnp
xchg
dec
fwait
mov
push
mov
sahf
jmp
in
or
cmp
imul
or
fwait
mov
scas
iret
(bad)
xor
mov
cmp
cmp
sub
pop
jle
imul
imul
popa
push
jno
add
jmp
fsubrp
xor
jl
les
imul
cmp
mov
mov
mov
sti
and
into
sbb
or
js
sub
sbb
xchg
jle
imul
iret
scas
mov
(bad)
xor
sti
fsubrp
retf
pop
ds
cmp
sub
pop
jle
xchg
jnp
or
sahf
stos
mov
fsubrp
xor
or
les
sub
movs
jle
outs
test
mov
mov
stos
mov
mov
jmp
push
js
les
sub
pop
jle
sub
outs
or
sahf
stos
mov
dec
out
sti
fsubrp
into
sbb
dec
cs
cs
pop
jle
imul
mov
mov
stos
mov
mov
out
add
out
xchg
ds
cmp
arpl
pop
or
fs
scas
(bad)
(bad)
xor
sti
fsubrp
into
sbb
inc
cs
sub
adc
xchg
jnp
outs
add
mov
stos
mov
dec
out
sti
(bad)
cmp
cs
pop
jle
outs
jnp
imul
mov
aad
mov
sub
and
test
ds
sub
sub
pop
xor
daa
dec
fwait
inc
mov
mov
dec
adc
fsubrp
into
sbb
or
pop
jle
outs
jnp
imul
mov
(bad)
into
mov
push
ds
cmp
pushw
pop
or
fwait
mov
push
mov
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jle
imul
les
(bad)
retf
out
sti
fsubrp
into
push
jno
les
fs
pop
or
fwait
mov
stos
mov
dec
out
sti
fsubrp
retf
dec
ds
cmp
cs
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
push
jg
push
aam
or
xchg
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
imul
dec
outs
test
dec
fwait
mov
stos
mov
dec
out
sti
fsubrp
into
sbb
push
jge
push
aam
pop
sub
imul
mov
(bad)
lahf
mov
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
fild
into
mov
dec
ds
cmp
sub
pop
jle
outs
jle
imul
mov
(bad)
retf
jmp
fsubrp
xor
cmp
cmp
sub
or
pop
cmp
fwait
inc
mov
(bad)
retf
out
dec
pop
cs
sub
or
dec
xchg
jnp
outs
push
fwait
mov
stos
mov
xchg
out
sti
and
xchg
sbb
hlt
sub
sub
pop
es
outs
test
dec
fwait
inc
mov
mov
sti
xchg
out
sti
and
into
in
push
ja
push
aam
pop
daa
dec
outs
test
dec
fwait
inc
mov
mov
movs
retf
out
add
out
xchg
sbb
hlt
sar
push
sub
movs
jnp
outs
jnp
imul
mov
cmp
adc
fsubrp
xchg
sbb
hlt
cmp
sub
pop
jle
imul
imul
popa
scas
rcr
(bad)
xor
inc
push
jb
push
aam
pop
and
test
dec
fwait
inc
mov
mov
mov
out
xchg
sbb
hlt
cs
sub
movs
jnp
outs
jnp
imul
mov
fwait
cmc
mov
add
movs
fsubrp
xor
cmp
cmp
cs
pop
jle
imul
mov
(bad)
retf
out
inc
or
cmp
je
pop
or
fwait
mov
stos
mov
sahf
retf
out
add
out
scas
sbb
hlt
cmp
sub
pop
jle
outs
jle
imul
je
ficomp
retf
out
add
mov
sbb
or
cmp
sub
pop
jnp
outs
jnp
imul
mov
(bad)
retf
out
(bad)
mov
imul
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fisttp
cmp
sub
cmp
xchg
jnp
imul
mov
and
scas
out
sti
and
stos
sbb
hlt
sub
sub
pop
sbb
test
dec
fwait
inc
je
ficomp
xor
sti
fsubrp
into
sbb
or
pop
push
sub
pop
sbb
test
dec
fwait
inc
mov
ficomp
out
test
ds
sub
sub
pop
jle
outs
jnp
imul
mov
mov
mov
hlt
sar
loope
imul
imul
fwait
ret
mov
add
xchg
ficom
jae
or
ds
push
movs
xor
mov
dec
jmp
fsubrp
xor
push
or
les
inc
push
pop
or
icebp
mov
stos
mov
mov
retf
jno
or
cmp
sub
pop
jnp
outs
jnp
outs
and
rcr
retf
out
add
or
ror
cmp
aam
xor
xchg
jle
imul
mov
mov
dec
adc
mov
into
in
addr16
bound
mov
pop
pop
imul
fwait
(bad)
mov
add
jmp
fsubrp
xor
ror
cmp
aam
ss
xchg
jnp
imul
in
mov
(bad)
xor
xchg
fsubrp
xor
or
cmp
inc
push
pop
or
sahf
ror
mov
sti
movs
out
sti
and
mov
push
push
sub
pop
adc
test
dec
fwait
inc
mov
mov
dec
adc
scas
jmp
in
jnp
cmp
sub
sub
xchg
test
je
retf
jno
dec
out
sti
fistp
pop
cmp
aam
sub
xchg
jnp
imul
stc
scas
mov
dec
out
sti
fsubrp
into
sbb
or
ds
sub
movs
jle
outs
jnp
sbb
inc
mov
mov
dec
out
(bad)
lods
jmp
in
js
cmp
cs
jle
imul
imul
fisttp
(bad)
stos
jmp
in
jg
cmp
sub
das
jle
xchg
jle
imul
(bad)
scas
mov
(bad)
xor
mov
jmp
sbb
jle
cmp
cs
jle
imul
imul
fisttp
sti
ficom
sbb
or
cmp
sub
pop
jle
outs
jnp
outs
cmp
jmp
mov
mov
imul
outs
js
jmp
fwait
mov
test
pop
test
in
sti
pop
xchg
into
sbb
nop
cmp
scas
mov
std
enter
push
xor
shl
(bad)
icebp
movs
xor
stos
xchg
movs
adc
(bad)
loop
aad
les
add
and
cmp
dec
ins
pop
jl
dec
jg
mov
mov
ret
mul
(bad)
repnz
add
xor
add
adc
fs
je
inc
jo
sbb
test
in
cli
fucomip
iret
sbb
or
cmp
sub
pop
jle
xchg
xchg
jns
push
push
sub
adc
adc
retf
mov
fcmove
out
mov
mov
out
xchg
xchg
jmp
jnp
imul
outs
adc
pop
and
fucomi
(bad)
in
ret
(bad)
scas
out
xchg
mov
jge
push
jnp
pusha
das
sub
pop
cmp
dec
jmp
out
ret
mov
scas
cmp
push
pop
push
sub
push
cmp
sti
fisttp
(bad)
mov
jg
dec
push
sub
jle
outs
push
sub
out
scas
mov
test
jmp
sbb
jns
jnp
imul
cmp
or
imul
lahf
jmp
cmp
bound
jb
imul
and
or
dec
hlt
mov
into
jmp
mov
stos
xchg
fisttp
jns
jnp
bound
or
and
les
(bad)
test
mov
into
pop
inc
data16
xor
adc
inc
sbb
jno
int
fmul
(bad)
sar
mov
stos
push
add
push
jbe
dec
xor
or
or
add
sti
scas
icebp
out
nop
mov
mov
js
dec
pop
punpcklwd
ds
or
add
fcmovnbe
retf
clc
loope
fcomp
scas
mov
mov
outs
add
pop
ins
pop
dec
push
or
aas
add
jno
dec
xchg
enter
call
xchg
pop
dec
push
pop
ds
and
push
cmp
sti
leave
hlt
aam
int3
out
test
test
leave
loope
lods
imul
jnp
sbb
dec
sbb
pop
push
(bad)
retf
ret
(bad)
out
scas
xchg
mov
and
js
dec
push
push
cmp
(bad)
rdmsr
sub
(bad)
mov
stos
mov
fisubr
adc
outs
dec
add
pop
push
hlt
(bad)
rcr
(bad)
enter
(bad)
scas
retf
mov
push
pop
imul
or
add
(bad)
in
mov
mov
mov
jns
das
dec
dec
jb
push
aaa
adc
and
xor
shl
mul
jmp
mov
outs
adc
pop
dec
jg
jnp
inc
pop
sbb
repz
sti
enter
mov
(bad)
(bad)
mov
stos
dec
jp
dec
push
jge
push
cmp
sub
xor
(bad)
cli
mov
sti
fucomi
mov
loope
mov
movd
dec
or
sub
add
cmp
(bad)
ret
loop
fwait
mov
lahf
mov
bound
adc
sub
je
or
sbb
repz
sti
sahf
fdivrp
fwait
jmp
xchg
pop
popa
js
dec
pop
punpcklwd
cmp
fcmovnu
mov
out
scas
xchg
mov
pop
dec
dec
je
inc
js
pop
sub
inc
sub
pandn
out
mov
mov
lods
xchg
pop
add
jle
dec
ins
sub
sbb
push
prefetcht2
fdivrp
out
fwait
mov
mov
or
xor
sub
fdivr
mov
jmp
xchg
cli
lahf
icebp
imul
push
ds
or
fimul
(bad)
call
test
jl
ins
xor
ds
sbb
hlt
dec
out
aam
stos
into
in
sahf
call
dec
dec
jnp
imul
adc
pop
sub
(bad)
mov
fwait
mov
mov
ds
push
sub
cmp
cmp
and
mov
fmul
stos
mov
sbb
dec
cmp
ins
or
jle
sbb
icebp
enter
sahf
hlt
jmp
call
je
jns
cmp
jle
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
call
jmp
icebp
aam
and
xor
inc
bound
addr16
jbe
xchg
mov
vpaddq
in
hlt
out
cmp
sub
sbb
or
jp
push
pop
jl
ins
mov
mov
jecxz
shl
shl
adc
and
inc
push
outs
pop
jle
mov
mov
leave
in
fdivr
sub
pop
cmp
jle
dec
imul
mov
mov
ret
out
cmc
daa
add
dec
sbb
sub
sbb
iret
jmp
mov
pop
js
imul
xor
and
shl
ret
aam
les
xchg
mov
out
clc
(bad)
enter
cmps
mov
mov
bound
addr16
push
xor
and
adc
loopne
shl
rcl
sahf
dec
outs
pop
jg
dec
jns
or
cmp
enter
out
retf
js
add
xor
ror
cmp
or
dec
imul
dec
popf
mov
lods
mov
stc
int3
jmp
adc
add
xor
and
push
je
fs
pusha
inc
nop
mov
mov
xlat
repz
jecxz
shl
rcl
add
ja
gs
dec
outs
pop
jle
(bad)
mov
mov
enter
sub
aas
sbb
sub
cmp
jle
dec
push
mov
mov
ret
out
mul
pop
xor
add
dec
sbb
sub
shl
shl
aad
lds
xchg
cmps
adc
arpl
gs
adc
adc
retf
out
(bad)
jmp
cli
fisttp
mov
jge
dec
js
cvtpi2ps
cmp
aad
ret
(bad)
mov
mov
dec
ins
pop
jge
or
pop
cmp
retf
into
jmp
sti
scas
mov
mov
dec
push
jbe
push
xor
add
adc
loope
cmp
push
and
xor
je
cmp
or
(bad)
fucomi
retf
sahf
mov
lods
mov
imul
daa
xor
and
shl
shl
aam
lds
xchg
cmps
adc
arpl
inc
adc
sub
loop
icebp
aad
jecxz
rep
xor
fs
je
mov
dec
out
cli
fucomip
int3
sbb
sub
sbb
dec
push
pop
outs
dec
lahf
mov
scas
mov
clc
int
cld
fldlg2
leave
push
sub
and
adc
fs
je
test
mov
(bad)
leave
in
cmp
or
js
outs
dec
pop
jp
imul
lea
fdivr
int3
jmp
adc
ja
cli
into
stc
jecxz
retf
sbb
and
push
addr16
push
jae
arpl
mov
mov
retf
out
(bad)
sub
cmp
or
sbb
dec
jns
dec
ins
pop
jge
lea
mov
into
jmp
clc
sub
push
popa
inc
pop
xor
sub
cmp
out
enter
test
mov
dec
push
jbe
inc
jae
add
adc
and
adc
in
cmc
loopne
lock
mov
mov
inc
arpl
gs
jne
add
sub
pop
cmp
push
dec
ins
pop
jge
dec
jge
lea
mov
mul
(bad)
repnz
add
adc
and
adc
fs
jne
inc
jo
xchg
mov
(bad)
jecxz
lock
cmc
rol
add
jnp
retf
out
sti
fsubrp
jmp
inc
sbb
ins
repnz
pop
(bad)
push
inc
push
and
mov
movs
mov
mov
jmp
sbb
sahf
adc
je
bound
inc
popf
mov
cmps
mov
cmps
mov
stc
ret
shr
retf
add
aas
adc
dec
outs
jno
pusha
inc
popf
mov
stos
mov
lods
test
lock
(bad)
in
pop
ins
inc
sbb
addr16
mov
inc
sar
mov
iret
loopne
shr
int3
sbb
or
xor
and
push
js
outs
jnp
aas
outs
rcl
rcl
jmp
mov
xor
add
pop
jne
popa
ja
bound
test
fdivp
int
cli
(bad)
out
ret
sbb
push
pop
push
xor
ins
add
and
add
cmc
(bad)
test
lods
(bad)
mov
rcl
sub
ja
arpl
mov
lods
mov
test
sti
retf
(bad)
call
sbb
sbb
xor
mov
ret
xlat
in
rcr
or
cmp
cs
imul
es
mov
movs
mov
out
stos
loopne
shl
rcr
push
sub
push
cmps
test
or
fisttp
mov
inc
inc
cmp
ret
out
mov
stos
sahf
pop
cwde
lods
adc
or
dec
and
fstp
mov
scas
mov
dec
cmp
loopne
jle
fimul
mov
mov
dec
xchg
sti
ret
aad
stos
int
inc
call
pop
lahf
retf
jge
jmp
(bad)
jp
xor
mov
pop
push
frstor
fcomi
scas
sahf
pmuludq
mov
loopne
sub
imul
mov
in
adc
mov
mov
mov
adc
fidiv
add
jb
dec
push
jmp
pop
enter
xor
rcl
and
push
clc
movs
mov
test
les
les
dec
cmp
dec
fcom
test
(bad)
in
(bad)
retf
sub
mov
push
pusha
imul
scas
jmp
cmp
adc
or
out
or
mov
mov
ret
(bad)
in
nop
jnp
sbb
(bad)
mov
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
push
and
ror
mov
dec
out
mov
mov
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
mov
jmp
sbb
or
cmp
sub
aas
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
adc
cmp
inc
push
push
sub
mov
in
fistp
cmps
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
push
cmp
mov
(bad)
in
(bad)
jmp
xchg
movs
pushf
(bad)
(bad)
into
imul
sub
aas
outs
add
cmp
nop
mov
shl
shr
nop
lods
mov
pop
bound
cmp
jnp
add
das
add
ror
fild
xchg
mov
mov
pop
sub
ds
push
sbb
inc
and
iret
in
shr
stos
stos
mov
mov
mov
jp
sub
adc
cs
dec
daa
loop
stc
sar
cmps
call
ins
dec
pop
ja
bound
cmp
sub
mov
fucomp
mov
stos
lea
in
and
xor
dec
outs
jnp
bound
int3
jmp
xchg
mov
mov
cmp
sub
pop
sbb
dec
push
cmp
cmp
sahf
fist
mov
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
mov
dec
adc
pop
jp
or
sbb
sub
sub
fucomi
scas
fdivrp
(bad)
sti
fsubrp
into
sbb
or
cmp
add
or
jle
pusha
call
cli
retf
mov
stos
jb
outs
dec
pop
push
pop
pusha
sub
sub
jnp
push
das
cli
int3
mov
mov
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
fisttp
and
push
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
or
fsubrp
into
sbb
or
cmp
sub
pop
jle
add
pop
imul
jmp
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
mov
fsubrp
into
sbb
or
push
sub
ins
or
sbb
mov
sahf
fsub
mov
fsubrp
into
je
or
pop
push
sub
xor
(bad)
pop
add
fwait
ror
mov
dec
out
sti
ficomp
pop
cmp
sub
pop
adc
jnp
or
ror
mov
dec
out
sti
fiadd
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
xchg
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
outs
pop
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
or
imul
int
retf
stos
mov
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
or
or
cmp
sub
pop
jle
outs
jnp
imul
mov
sahf
stos
mov
dec
out
sti
fsubrp
into
loopne
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
xor
dec
outs
jnp
imul
stc
out
mov
(bad)
hlt
xchg
fsubrp
into
sbb
or
cmp
sub
pop
ja
pop
push
push
imul
mov
(bad)
xor
les
or
cmp
sub
pop
jle
push
adc
jno
mov
stos
mov
dec
out
repnz
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
push
scas
mov
dec
out
sti
fsubrp
into
sbb
or
aas
push
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
(bad)
fsubrp
retf
ucomiss
sbb
push
pop
cmp
outs
sbb
(bad)
scas
aad
mov
out
mov
aas
jmp
push
pop
jle
outs
jnp
imul
lahf
mov
into
loope
(bad)
retf
jmp
add
sub
or
cmp
jp
je
push
test
mov
xchg
jmp
shl
push
cs
push
imul
sub
scas
lods
stos
out
out
fsubr
jecxz
mov
cs
or
pop
outs
push
sbb
shr
mov
retf
call
mov
arpl
xor
push
pop
dec
jp
dec
outs
imul
sub
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
push
das
cmps
sahf
stos
mov
inc
mov
add
or
cmp
sub
rcl
dec
fwait
fwait
add
outs
popa
cmp
fucomip
sti
push
mov
mov
hlt
fiadd
or
mov
add
sub
sub
mov
out
scas
nop
mov
test
sbb
and
jle
add
pop
jp
rol
test
(bad)
fiadd
arpl
push
inc
sub
cmp
jge
sub
pop
xor
mov
in
nop
not
or
mov
dec
jg
add
cmp
aam
call
movs
call
ds
and
fstp
pop
jp
fxtract
cs
aam
fwait
retf
scas
mov
je
dec
dec
push
daa
add
out
sti
fsubrp
xor
shl
les
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jns
xchg
dec
fwait
mov
stos
mov
dec
out
sti
fsubrp
into
in
or
cmp
sub
pop
jle
outs
jnp
imul
je
mov
dec
out
sti
and
retf
or
cmp
sub
pop
jle
outs
jg
imul
mov
(bad)
xor
sti
fsubrp
retf
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
cli
and
into
sbb
or
cmp
sub
pop
jle
xchg
jnp
imul
mov
and
retf
out
sti
fsubrp
into
in
or
cmp
sub
pop
jle
outs
jnp
imul
mov
and
retf
out
sti
and
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
and
into
sbb
hlt
cmp
sub
pop
or
fwait
mov
stos
mov
dec
out
sti
(bad)
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
xor
sti
fsubrp
into
sbb
or
les
sub
pop
jle
outs
jnp
imul
mov
(bad)
xor
sti
fsubrp
into
sbb
or
neg
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
sub
pop
jle
outs
jnp
imul
sahf
stos
mov
dec
out
sti
fsubrp
into
sbb
aam
push
jle
outs
jnp
imul
mov
(bad)
xor
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
aam
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
mov
dec
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
je
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
dec
out
sti
and
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
jmp
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
je
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
or
cmp
sub
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
icebp
movs
xor
inc
popa
push
jno
add
add
adc
in
hlt
rol
loope
push
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
jle
outs
jnp
imul
mov
(bad)
retf
out
sti
fsubrp
into
sbb
or
cmp
sub
pop
pop
imul
xor
ins
call
in
retf
xchg
cmps
adc
jge
cmp
imul
dec
stos
fcmovnbe
icebp
(bad)
lods
mov
mov
in
jle
addr16
jle
add
sbb
or
push
es
fucomp
xlat
retf
icebp
(bad)
(bad)
jmp
mov
or
xor
inc
jae
inc
aas
dec
and
cld
iret
mov
lea
jmp
dec
push
push
ja
mov
pop
fwait
mov
mov
es
stc
inc
lahf
into
sar
sahf
mov
std
leave
bts
xor
aaa
mov
dec
jecxz
mov
pop
push
jmp
sbb
sub
pop
mov
sti
jnp
or
int3
jp
cmp
retf
xor
dec
jmp
test
aaa
adc
or
add
das
clc
lock
fadd
je
cmp
movs
mov
(bad)
jmp
or
push
pop
cmp
lock
mov
mov
jmp
dec
(bad)
jl
pop
stos
(bad)
jmp
dec
sub
enter
(bad)
popa
cmp
xchg
inc
enter
fs
jae
sub
push
jae
mov
adc
jb
dec
jnp
imul
dec
nop
inc
fidiv
sbb
inc
gs
pop
retf
out
push
inc
push
lods
sahf
add
scas
and
dec
push
ss
dec
jnp
imul
jp
mov
scas
sbb
xchg
add
cli
ror
mov
fcmove
out
les
dec
jo
sub
dec
lods
mov
mov
out
ret
imul
jmp
dec
or
jle
sub
jl
out
fiadd
jmp
xchg
mov
scas
imul
mov
xchg
retf
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
retf
(bad)
fucomi
jmp
sti
iret
mov
mov
outs
imul
or
sbb
sub
cmp
add
add
add
add
nop
nop
nop
nop
retf
dec
jb
call
xchg
pusha
jp
scas
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
outs
sbb
push
pop
aas
sub
aas
mov
ret
mov
popf
inc
mov
or
jns
pop
imul
sub
stos
iret
mov
(bad)
out
(bad)
sti
lahf
scas
lods
fdivr
or
jg
(bad)
ins
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
push
sub
xchg
add
pop
add
cmp
push
iret
xor
and
pop
jmp
xor
push
cmps
inc
(bad)
push
rcr
lahf
dec
pop
je
ret
retf
cmp
mov
cs
pop
jmp
iret
leave
push
dec
dec
dec
cmp
mov
(bad)
in
retf
retf
test
xor
inc
cmc
adc
das
fadd
shld
stos
cmp
mov
mov
scas
call
pop
jecxz
jae
aad
mov
stos
iret
push
fbstp
fisubr
retf
inc
fcmovnbe
sub
cmc
scas
or
jnp
dec
xlat
pop
jp
lahf
dec
shr
jae
or
jbe
idiv
pop
out
jecxz
cs
sub
jbe
xlat
stos
cmps
mov
add
dec
inc
sahf
retf
inc
fild
or
js
jg
movlps
push
push
inc
data16
ja
adc
int3
out
cmps
cmp
or
aad
imul
pop
shr
inc
(bad)
fisttp
in
lahf
sahf
pop
fild
mov
or
jbe
jg
cvttps2pi
mov
dec
mul
into
rcr
mov
(bad)
pop
into
jbe
idiv
pop
or
jg
dec
fcomp
mov
xchg
mov
pop
call
scas
xor
mov
pop
or
jg
out
mov
push
iret
neg
bound
sti
pusha
retf
das
fist
in
cmp
ret
setb
das
mov
stos
xor
pop
jmp
cli
lahf
xor
or
sub
test
pop
xlat
stos
iret
inc
fbstp
jb
dec
(bad)
adc
sub
sbb
psubq
mov
int
and
sub
ja
scas
daa
mov
test
repz
hlt
jnp
dec
(bad)
pop
pushf
stos
daa
mov
inc
retf
pop
lahf
and
cmp
imul
mov
or
push
fmul
mov
inc
fdivr
loop
mov
out
jecxz
(bad)
out
ins
mov
call
(bad)
adc
push
mov
ret
or
jp
mov
scas
aas
inc
mov
fbld
fwait
pop
jmp
sti
jbe
or
push
sub
pop
ja
repnz
setae
dec
fcomp
stos
es
jl
pop
call
jmp
mov
imul
sub
dec
pop
inc
dec
(bad)
pop
push
out
cmp
je
fucomip
sub
sbb
inc
fucomi
fnsave
sbb
push
cmp
sti
dec
mov
push
(bad)
mov
mov
or
cmp
dec
jge
mov
fidivr
jb
inc
sti
ja
scas
ja
mov
xor
xchg
push
jge
or
iret
inc
sub
(bad)
pop
fild
fnstsw
popa
jp
sub
das
mov
test
mov
call
jo
retf
(bad)
jle
bound
sub
xchg
add
pop
or
jp
xor
jmp
lahf
mov
or
dec
cmps
cs
push
mov
jmp
into
scas
fwait
jmp
push
in
jg
sbb
xor
out
iret
push
mov
jmp
mov
xor
push
loopne
and
inc
jnp
dec
jnp
and
aas
in
pushf
push
push
loope
pusha
or
inc
inc
es
sti
mov
mov
jnp
fwait
das
sbb
cmps
mov
pop
jmp
push
pusha
inc
mov
cmp
xchg
sbb
dec
das
mov
jecxz
push
fwait
sub
jae
jmp
sti
pop
retf
inc
lahf
sbb
cmps
cmp
out
idiv
dec
fcomp
mov
(bad)
mov
pop
in
(bad)
adc
mov
pop
or
mov
inc
iret
jae
bound
sti
jne
mov
push
outs
in
cmp
out
setb
das
mov
stos
es
pop
jmp
call
ret
pop
jecxz
sbb
jl
push
fbld
jb
dec
(bad)
adc
sub
sbb
pop
mov
leave
mov
push
scas
sub
ja
scas
cmp
outs
dec
rcr
test
repz
jmp
pop
pushf
stos
daa
mov
inc
retf
pop
lahf
and
cmp
ins
setle
out
mov
or
push
fimul
mov
inc
fnstsw
loop
mov
sti
dec
sti
pop
(bad)
out
ins
mov
inc
(bad)
adc
push
stos
cmp
or
jle
test
lahf
aas
inc
mov
fbld
fwait
sbb
jae
jbe
or
push
cs
fcomp
in
ja
sbb
inc
dec
inc
dec
aas
inc
rcr
xor
imul
mov
lahf
mov
into
mov
test
and
mov
iret
push
and
out
mov
out
lahf
xor
or
dec
rcr
sbb
cmp
icebp
jne
aam
sub
add
mov
mov
popf
enter
les
or
sbb
test
jnp
dec
(bad)
pop
push
inc
cmps
call
inc
push
aad
mov
dec
ret
jle
jecxz
out
push
outs
out
repz
arpl
repz
push
inc
or
sub
pop
rep
pop
sub
dec
inc
inc
dec
(bad)
pop
push
stos
jno
das
mov
push
sub
sti
jae
push
(bad)
jl
jg
push
outs
repz
push
(bad)
sub
mov
jmp
neg
push
sub
cmp
lds
ret
ret
pop
(bad)
stos
mov
(bad)
iret
rol
inc
(bad)
xchg
sahf
jne
sub
or
jg
(bad)
dec
sbb
stos
daa
mov
jmp
(bad)
js
mov
or
push
dec
ret
pop
mov
enter
mov
xchg
dec
jns
sbb
sbb
enter
dec
neg
stos
es
jl
pop
xchg
push
(bad)
jae
and
js
ret
inc
cmp
das
lods
jnp
inc
das
mov
mov
push
fwait
sub
jae
jmp
sti
dec
inc
lahf
sbb
cmps
xor
outs
(bad)
jg
dec
fcomp
mov
jae
ss
dec
fwait
pop
jecxz
sub
sti
mov
push
or
aas
mov
jle
imul
stos
cmp
add
fist
in
cmp
daa
setb
das
mov
stos
sbb
pop
jmp
icebp
lahf
pop
scas
retf
mov
jecxz
sbb
mov
mov
out
jb
dec
(bad)
adc
sub
adc
movhps
mov
lds
push
scas
sub
ja
scas
or
test
repz
fidivr
dec
(bad)
pop
pushf
stos
daa
mov
pop
out
xchg
inc
retf
pop
lahf
and
cmp
ins
bts
mov
mov
or
push
xlat
mov
fwait
out
mov
inc
sar
loop
mov
ror
pop
(bad)
out
ins
mov
call
(bad)
adc
push
cmp
or
(bad)
addr16
repnz
cli
mov
fwait
sub
mov
xlat
iret
pop
adc
or
cmovp
pop
jb
jmp
add
jmp
leave
mov
dec
jg
sub
fwait
(bad)
xchg
cmps
and
fld
mov
jnp
test
sti
xlat
sbb
adc
loop
outs
es
pop
mov
iret
mov
sti
pop
pop
inc
mov
mov
or
sbb
pop
ret
rol
push
sub
pop
add
imul
mov
in
xchg
cdq
hlt
outs
sbb
cmp
jl
neg
add
xchg
sahf
retf
adc
outs
in
push
jp
mov
cli
shr
fwait
std
scas
(bad)
mov
mov
or
dec
cmp
movs
aas
test
out
fdivrp
jmp
scas
les
or
mov
(bad)
shl
scas
(bad)
pop
leave
mov
ror
test
ds
dec
fistp
(bad)
dec
lods
add
mov
push
cli
mov
ins
push
fwait
lods
dec
jns
sub
test
in
fild
out
mov
pop
das
loope
cli
xlat
or
sub
out
arpl
jnp
int
sar
scas
mov
retf
adc
(bad)
(bad)
scas
outs
lds
sbb
(bad)
jnp
(bad)
mov
cmp
(bad)
retf
lahf
or
mov
pop
pop
outs
fstp
scas
das
sub
and
cli
fwait
call
sti
lahf
retf
and
sti
movs
enter
sub
mov
stos
and
mov
fs
mov
add
stos
outs
mov
pop
or
sbb
dec
dec
repz
lea
dec
aas
std
mov
push
inc
jno
daa
xor
mov
sub
or
arpl
cmp
or
stos
outs
sti
mov
and
mov
sub
ss
imul
sub
into
inc
jnp
jo
cmc
xor
and
mov
cmp
push
and
pop
inc
xchg
xor
add
ret
call
mov
pop
pop
mov
or
mov
(bad)
scas
fsubr
adc
in
mov
xchg
test
cs
aas
test
pop
(bad)
jle
(bad)
add
pop
adc
push
xor
rcr
iret
stos
fwait
pop
adc
sti
fsub
fwait
xor
xchg
or
pushf
dec
jb
inc
mov
scas
adc
sti
popf
inc
mov
or
sahf
in
add
fmul
pop
(bad)
aas
cmp
sar
lahf
xor
nop
xor
cmp
ja
inc
cmp
push
jmp
cmps
or
push
pop
loop
jg
lock
ja
sti
movs
xor
(bad)
fwait
cmp
jo
pusha
fidiv
mov
cmp
jnp
(bad)
das
cwde
aas
stos
inc
xor
ja
fidivr
pushf
(bad)
aas
call
dec
sbb
scas
jmp
scas
fisttp
push
mov
mov
xchg
mov
add
in
add
(bad)
shr
inc
and
jmp
adc
(bad)
(bad)
sub
sbb
xor
adc
dec
mov
retf
ss
fcmovu
mov
fwait
add
retf
loop
inc
sub
imul
aas
or
cmp
pop
ror
scas
mov
int3
data16
mov
stos
cmps
dec
jle
dec
cmp
repnz
and
iret
push
into
jge
into
out
aad
adc
sti
ja
aaa
sub
div
add
out
or
ds
pop
aaa
imul
enter
aas
sub
cmp
es
imul
dec
imul
int3
inc
and
add
fcmove
neg
pop
xchg
sub
mov
iret
fwait
pop
mov
das
pop
mov
cmp
aam
outs
sbb
arpl
and
dec
das
fcmovnbe
in
cmc
cmp
lods
adc
cli
adc
push
das
mov
shl
push
jg
dec
mov
ret
repz
nop
test
sar
fistp
nop
popf
and
cmps
dec
cmp
and
jge
dec
jb
fisub
call
sub
adc
add
sbb
imul
cmp
mov
inc
jmp
shl
(bad)
and
stos
fwait
cmp
scas
and
fisttp
add
iret
repnz
inc
jnp
push
in
xlat
cmps
mov
in
sahf
aas
mov
outs
pop
sti
ret
push
cmp
cwde
in
out
add
pop
jbe
xlat
ret
(bad)
retf
push
stos
push
add
scas
and
mov
lahf
xchg
imul
dec
cld
pop
stc
mov
(bad)
pop
push
pop
fs
jmp
out
adc
scas
and
xlat
mov
cdq
hlt
xchg
cmp
pop
mov
movs
rol
je
(bad)
daa
data16
fcmove
jmp
xor
daa
cmp
dec
cld
pop
and
sub
cmps
scas
jo
pusha
pushf
loop
xlat
aam
mov
mov
push
sbb
pop
mov
fadd
cli
add
mov
pop
in
or
jg
jmp
push
dec
(bad)
sar
into
inc
call
sti
dec
daa
push
adc
jle
popa
nop
sbb
enter
and
jb
je
ja
pusha
dec
stos
ja
daa
lahf
mov
repnz
sbb
push
sub
out
inc
out
cdq
add
jae
sti
scas
push
mov
or
dec
cmc
cs
test
mov
inc
(bad)
fidiv
mov
mov
cmp
or
jg
(bad)
xchg
rcl
mov
out
(bad)
inc
jle
pusha
inc
mov
cmp
(bad)
jle
jnp
ret
iret
in
inc
sub
jo
stos
inc
push
pop
mov
or
je
jnp
(bad)
pop
jo
pop
(bad)
ins
mov
pop
mov
sbb
sbb
or
cs
aas
imul
mov
adc
pop
mov
sbb
ret
sbb
sub
cli
das
cmp
sbb
jp
mov
fmulp
out
nop
mov
cmp
repnz
pop
aaa
imul
fnstsw
inc
(bad)
rcr
rcr
and
call
scas
and
lds
hlt
jmp
dec
and
inc
fbstp
jl
pop
mov
ret
xchg
call
imul
dec
rcr
mov
out
(bad)
dec
cmps
jg
fisttp
and
out
sub
mov
hlt
loop
xor
in
inc
imul
addr16
dec
xchg
pop
jne
jg
jnp
or
lods
(bad)
cmps
dec
lods
ds
inc
jmp
ja
into
add
add
nop
and
cli
mov
ss
das
imul
push
lea
xlat
fisttp
into
stos
and
pop
retf
dec
sub
sbb
push
neg
(bad)
jl
sar
repz
jmp
jne
fsubrp
and
mov
mov
outs
fwait
sub
jp
xchg
xor
shr
push
mov
retf
mov
cmp
or
jnp
inc
das
mov
in
into
cmp
(bad)
retf
jbe
retf
inc
xlat
pop
jbe
and
jle
pop
aas
sbb
into
inc
push
sahf
scas
mov
stos
pop
mov
aad
pop
ins
cdq
fsubr
xchg
push
fwait
jle
mov
nop
mov
or
inc
daa
fisubr
enter
imul
imul
push
or
in
in
addr16
repz
xchg
cs
inc
xchg
pop
xchg
out
jnp
dec
shl
cmp
je
pusha
call
jo
inc
(bad)
jl
pop
pop
pop
jae
jg
push
jp
push
xchg
pop
mov
int
mov
ret
retf
scas
push
mov
sub
mov
pop
inc
movs
mov
cmp
adc
mov
fld
mov
or
clc
pop
pop
imul
and
out
fisttp
mov
inc
pop
fsubr
ds
inc
mov
punpckhwd
rcr
stc
mov
aaa
push
cli
int
scas
dec
jbe
fwait
scas
sahf
out
sub
nop
push
fwait
lods
dec
test
or
into
stos
fwait
(bad)
mov
inc
sbb
fcmovu
cmp
cmp
or
mov
div
jnp
pusha
inc
call
scas
jmp
aas
inc
xor
imul
out
mov
out
mov
inc
mov
or
mov
jle
(bad)
push
dec
lods
cmc
fucomip
or
sbb
cli
mov
inc
mov
ss
outs
push
inc
xchg
mov
pop
stos
iret
cli
aaa
shr
fwait
(bad)
jmp
mov
sub
jbe
dec
nop
in
cmp
ja
cpuid
pop
aas
out
pop
inc
and
out
lods
scas
pop
mov
out
jb
ins
dec
dec
loop
repnz
rep
and
js
shr
mov
mov
cmps
pop
add
sahf
inc
jb
cmp
sbb
pop
mov
sar
jge
jge
mov
fistp
scas
jo
(bad)
(bad)
sub
mov
in
scas
push
jnp
dec
stc
dec
mov
in
div
out
jmp
sub
mov
cmp
mov
aas
out
fcmovbe
and
push
scas
ret
add
pusha
(bad)
push
dec
pop
and
sub
bsr
cs
jnp
or
push
and
je
mov
mov
add
dec
addr16
arpl
mov
sbb
iret
xor
fisubr
call
scas
mov
(bad)
in
jnp
and
jo
dec
cmp
xchg
in
and
add
sti
sar
sahf
mov
and
pop
jg
jp
push
ret
dec
pop
push
aaa
pop
mul
(bad)
add
xor
lods
xor
mov
pop
sbb
shr
jmp
stos
adc
jecxz
cmp
(bad)
lock
sbb
or
and
dec
daa
sbb
xchg
pop
div
out
fidivr
xchg
retf
(bad)
rol
inc
clc
mov
in
nop
imul
sbb
mov
fwait
fwait
sti
mov
pop
inc
retf
stos
rol
or
and
sbb
add
retf
push
sbb
pusha
push
jmp
rcr
rsqrtps
outs
jg
repnz
mov
(bad)
mov
enter
out
movs
stc
xchg
xchg
cmps
shl
jg
pop
es
stos
pop
js
cdq
mov
sti
addr16
(bad)
cmps
push
js
or
nop
lock
push
sub
mov
wrmsr
test
fs
push
fbstp
add
outs
jae
cmovs
retf
not
mov
in
jo
lods
sar
lahf
iret
cmps
sbb
xchg
cmp
pop
inc
pop
add
push
mov
iret
std
sbb
adc
cli
repz
je
cmp
test
imul
inc
jg
es
pop
push
(bad)
mov
imul
data16
inc
fstp
add
xchg
sub
lock
jns
retf
push
das
mov
movs
adc
push
(bad)
ins
mov
dec
outs
or
imul
xchg
aam
imul
lods
cli
loopne
cs
dec
sub
cs
iret
in
push
add
fwait
mov
add
push
xor
mov
xor
nop
out
dec
jns
pop
das
fdivr
add
mov
jle
les
add
sar
(bad)
and
fld
xchg
or
mov
in
add
lock
out
sub
mov
cdq
and
in
mov
xor
or
pop
scas
outs
or
push
dec
test
sub
jg
nop
push
bound
iret
fild
push
xchg
push
outs
mov
arpl
movs
dec
outs
xchg
xchg
daa
lods
xlat
and
inc
sbb
mov
icebp
adc
retf
mov
jmp
imul
xchg
mov
scas
test
fwait
jl
add
lahf
xchg
jbe
or
sub
dec
xor
aas
fwait
iret
sti
and
cs
retf
scas
sbb
sub
outs
jnp
or
and
jo
rol
fimul
mov
mov
pop
imul
(bad)
push
loope
das
mov
cli
fistp
mov
push
jns
dec
xor
sub
imul
bound
retf
pop
sub
fild
sti
add
mov
mov
rol
(bad)
ja
imul
sub
fwait
jbe
add
in
cmps
inc
(bad)
sbb
jp
jg
or
ror
add
mov
(bad)
cld
into
sti
ins
or
dec
sub
ds
repz
lea
ret
fcomip
retf
popa
jbe
call
mov
xchg
push
sub
sbb
out
inc
mov
je
imul
sub
jle
inc
in
in
imul
jne
cs
aas
adc
or
cmp
or
inc
outs
sbb
data16
dec
jl
and
(bad)
mov
faddp
mov
mul
xchg
xchg
push
rcl
dec
jne
repz
sbb
pop
cli
and
mov
cmp
inc
in
fdivrp
out
imul
push
(bad)
ja
(bad)
repnz
aas
je
outs
push
cli
loopne
dec
fisttp
daa
arpl
out
add
je
das
dec
and
mov
int
inc
xchg
xchg
out
xchg
jo
cs
xchg
jmp
fstp
or
movs
mov
mov
es
push
cld
stos
cwde
add
or
mov
jb
sahf
jl
sbb
sbb
nop
cwde
scas
xchg
int3
cdq
(bad)
shufps
out
inc
pop
das
iret
mov
jo
(bad)
scas
sub
dec
clc
push
or
jg
iret
and
imul
hlt
(bad)
js
mov
jnp
scas
(bad)
test
dec
test
imul
or
mov
stos
pop
mov
movs
add
xor
das
fadd
stos
lea
mov
push
retf
in
pusha
pushf
scas
fwait
jl
dec
cmp
or
mov
outs
inc
inc
rcr
je
fwait
mov
mov
or
pushf
(bad)
iret
pop
xchg
cmp
icebp
jne
ror
jmp
inc
fimul
mov
sti
ret
aad
outs
in
imul
dec
das
pop
aas
retf
ins
mov
lahf
scas
data16
ja
(bad)
jl
jnp
hlt
push
daa
imul
push
(bad)
in
mov
mov
fwait
mov
and
bound
fcomi
xor
mov
ds
stos
jmp
jmp
sar
pop
push
mov
dec
das
xlat
aas
sbb
ret
cmps
sti
(bad)
mov
fidivr
cmp
outs
sbb
add
mov
aaa
stos
data16
mov
sub
cmps
jmp
sti
lahf
call
pop
or
jp
xor
fwait
iret
sbb
mov
sti
sub
out
xlat
sub
jg
dec
adc
mov
add
stos
push
mov
cmp
(bad)
sti
lahf
add
clc
xchg
push
outs
sbb
imul
ja
in
xchg
stos
iret
mov
sbb
mov
xchg
cmp
setp
cs
icebp
repnz
mov
xchg
jmp
mov
enter
imul
cld
fs
mov
mov
xchg
scas
fcmovnbe
sub
aaa
or
pop
call
fisttp
out
pop
sbb
fstp
arpl
scas
xor
jnp
dec
out
push
stos
or
xchg
retf
or
mov
dec
pop
sbb
das
call
out
fwait
iret
jmp
mov
out
dec
das
pop
sbb
adc
push
xor
xor
mov
add
add
call
mov
nop
cwde
fwait
es
pushf
ds
jp
mov
push
jmp
stc
xchg
fsubr
cmp
or
das
pop
adc
rcl
xchg
jb
push
popa
mov
cmps
pop
pop
daa
stos
mov
jmp
ja
lock
ret
arpl
mov
loop
scas
add
lahf
xchg
xor
sub
mov
outs
pop
cld
pminub
jmp
outs
push
pop
jg
ja
fwait
add
and
inc
cmps
mov
adc
in
xor
sbb
(bad)
mov
iret
loop
into
dec
jmp
add
pusha
inc
mov
out
stos
or
jmp
ficom
scas
in
mov
jb
or
ja
scas
sbb
mov
nop
cwde
jg
cmp
out
aas
inc
inc
inc
pop
mov
push
jmp
loop
cli
sub
out
add
dec
scas
and
mov
(bad)
mov
push
or
mov
pop
jecxz
xor
in
mov
mov
sub
fstp
push
and
sub
scas
push
xlat
or
pop
adc
scas
push
repnz
jmp
pop
xchg
out
mov
aas
adc
pop
(bad)
mov
mov
mov
hlt
xchg
add
add
add
stos
or
jmp
mov
or
jecxz
sbb
jnp
mov
movs
ret
out
xor
(bad)
fs
scas
xor
sahf
(bad)
lahf
jnp
mov
mov
lods
setae
sub
push
or
clc
pop
xlat
stc
inc
lahf
add
pop
xor
in
push
mov
in
fbstp
das
cld
mov
mov
fist
lods
lock
test
das
mov
mov
fmulp
xchg
adc
pop
aas
mov
jnp
push
sub
pop
mov
daa
ss
sub
jmp
adc
xor
fstp
and
fwait
cs
dec
push
jl
jp
ret
mov
or
fwait
scas
push
in
retw
outs
xchg
sti
loop
mov
(bad)
stos
daa
ss
out
nop
sbb
test
nop
dec
mov
mov
arpl
sbb
fild
push
mov
xor
aas
in
sti
repz
in
dec
add
or
pop
pop
xlat
es
jge
inc
das
fwait
pop
data16
lahf
and
fstp
xchg
pop
jecxz
in
imul
xchg
lea
popf
jnp
sub
push
test
fs
add
push
stos
pop
mov
or
mov
push
xchg
mov
(bad)
rcr
push
pop
dec
in
mov
iret
shl
sub
ds
movs
aas
test
pop
push
dec
iret
rcr
dec
stos
fwait
clc
cmps
(bad)
sub
add
mov
cmp
or
in
repz
pop
xchg
outs
outs
daa
mov
cmp
addr16
jnp
push
push
xor
inc
(bad)
rcr
test
sub
movs
push
xor
inc
scas
sbb
(bad)
das
sahf
inc
loop
xor
mov
adc
outs
fsubr
fwait
je
aas
cmc
call
and
mov
scas
fisub
retf
rcr
add
inc
mov
push
jl
cmp
lods
inc
push
push
stos
pop
(bad)
in
(bad)
mov
fst
ret
iret
outs
adc
(bad)
(bad)
es
aaa
dec
xor
jb
dec
mov
or
cmps
sub
dec
loop
mov
adc
xor
push
mov
fucomip
jg
sbb
cdq
dec
jp
jg
mov
pop
mov
or
(bad)
outs
out
(bad)
dec
loopne
cmp
xor
push
cmp
out
jbe
dec
das
cmps
mov
mov
fild
out
lock
dec
dec
out
pop
scas
daa
bnd
mov
pop
mov
xchg
in
icebp
sub
ret
ret
iret
jge
iret
bound
add
adc
and
xor
mov
leave
hlt
cmps
jae
cmp
pop
lea
movs
imul
daa
dec
scas
pusha
jae
(bad)
and
aam
popa
sti
add
ds
ror
stos
daa
outs
or
xchg
pop
adc
imul
aam
sbb
sbb
and
xcrypt-ctr
in
inc
xor
add
ret
inc
push
into
xor
or
sbb
mul
xchg
sbb
push
xchg
loop
jae
pop
pop
outs
and
rcr
test
test
(bad)
movs
push
aaa
es
mov
test
aaa
loop
mov
dec
sbb
fild
cmp
and
sub
retf
imul
dec
(bad)
xchg
push
jp
(bad)
ret
xor
rol
out
push
add
(bad)
and
js
cmp
xchg
test
rcl
mov
imul
push
call
jbe
or
daa
les
pop
sub
cmp
repz
pop
aaa
inc
xor
shr
dec
sti
popa
popf
jmp
outs
outs
cmp
dec
pop
in
sub
jp
dec
jmp
mov
add
jmp
push
mov
mov
shl
sbb
xchg
bsr
cmp
dec
ret
jmp
shr
(bad)
mov
das
aam
shl
cmp
pop
lea
pop
mov
inc
mov
dec
jae
jmp
add
inc
icebp
and
sub
shl
loop
bnd
jnp
inc
call
out
inc
loope
je
mov
lahf
inc
push
fstp
aas
lds
dec
in
xchg
mov
sub
pop
jp
iret
ss
pop
pop
ror
iret
inc
nop
push
inc
aam
mov
and
cmp
dec
das
rol
xor
call
add
xor
and
in
dec
shl
out
jnp
mov
movs
fist
ffreep
das
add
and
pusha
ret
or
adc
(bad)
shl
ss
sub
retf
pop
adc
cmp
call
mov
xor
test
(bad)
rcr
retf
cmps
mov
out
mov
arpl
or
mov
mov
ret
out
cwde
scas
push
add
fwait
xchg
mov
aaa
mov
out
add
pop
outs
xchg
ret
movs
rol
mov
call
mov
jbe
arpl
dec
jle
retf
jnp
push
push
jp
sahf
xor
fucomi
fs
jmp
mov
inc
sub
int
mov
scas
xchg
mov
push
call
out
retf
inc
sti
arpl
sahf
jmp
imul
outs
imul
in
push
jo
stc
out
inc
cmp
fwait
pop
data16
xchg
fwait
and
sub
pop
pop
outs
xchg
jg
repz
jp
popf
jnp
sub
cmp
retf
jbe
or
or
jmp
test
mov
aam
sub
sbb
mov
xchg
or
imul
dec
sar
(bad)
ret
sub
loop
xor
mov
pop
(bad)
(bad)
cmps
iret
(bad)
inc
cmps
jo
fimul
jnp
sbb
sub
jle
test
ror
push
imul
jnp
push
pop
mov
and
xlat
xlat
mov
mov
test
jbe
mov
stos
stc
out
cmp
jg
fcom
pusha
add
lea
xchg
das
addr16
sub
mov
jge
into
mov
sub
adc
push
cmp
jnp
(bad)
ror
jp
(bad)
(bad)
pop
mov
retf
(bad)
scas
pop
(bad)
push
iret
cli
jnp
and
cmp
imul
iret
adc
dec
sti
stos
mov
(bad)
jmp
mov
fwait
cmps
test
or
mov
int
test
aad
shl
cmp
add
jmp
sbb
add
lock
inc
fwait
add
xor
mov
and
inc
push
mov
or
mov
enter
fistp
outs
jmp
mov
cli
rcr
data16
sbb
dec
out
mov
add
jb
cmps
push
scas
and
sub
sahf
sbb
out
iret
mov
(bad)
xor
(bad)
fs
out
push
inc
cmp
xor
inc
xchg
mov
test
adc
adc
(bad)
xchg
push
and
jne
xor
das
nop
mul
inc
dec
dec
pop
push
mov
inc
inc
push
add
add
add
mov
push
mov
xor
lock
clc
mov
in
iret
in
fisttp
test
sub
sbb
or
sub
or
in
sbb
pop
movs
mov
hlt
iret
and
fs
mov
mov
or
nop
mov
js
ret
mov
iret
and
call
call
push
shl
pop
arpl
jle
idiv
xor
out
pop
mov
xor
fwait
ins
jbe
jecxz
jmp
ret
and
inc
fimul
fcmove
scas
ficom
mov
push
dec
and
add
xchg
imul
and
push
inc
fmul
rcl
repz
(bad)
or
jnp
(bad)
cs
aas
and
xchg
mov
mov
scas
movs
sub
xor
in
shr
xchg
outs
out
mov
and
push
inc
jns
jl
xor
pop
retf
cmps
push
addr16
mov
cmp
pop
adc
mov
mov
and
mov
push
cli
outs
cmc
mov
rep
fdiv
test
fsubr
stos
in
aaa
and
jnp
call
mov
sub
aam
ins
in
test
or
sbb
mov
mov
push
jmp
sti
lahf
inc
rcr
mov
or
inc
jnp
cmova
cwde
mov
movs
outs
inc
mov
pop
dec
or
out
or
jnp
dec
push
or
and
jb
jb
test
pusha
(bad)
mov
cmp
loop
adc
ret
jmp
iret
xor
pusha
add
sahf
mov
mov
aam
jg
jg
fwait
xchg
xchg
nop
xchg
pop
(bad)
out
inc
neg
arpl
jnp
or
dec
dec
stos
mov
jp
imul
lahf
je
(bad)
xchg
test
cmp
out
out
mov
mov
mov
jp
imul
out
xor
test
movs
shl
ins
iret
dec
fwait
push
out
push
fild
(bad)
test
jle
leave
xchg
xchg
les
test
shl
jmp
ss
shl
std
pop
push
cmp
jg
mov
pop
push
scas
sbb
das
lock
out
adc
mov
jecxz
fdivr
gs
in
mov
xchg
sar
bswap
mov
stos
iret
dec
call
jae
xchg
ret
retf
scas
xor
mov
pop
mov
dec
(bad)
call
cli
popa
inc
cmps
add
outs
xchg
jg
mov
jmp
out
push
loopne
cmp
stos
or
inc
out
adc
add
jbe
inc
cmps
scas
out
jmp
nop
imul
sub
aaa
inc
iret
neg
pop
push
fiadd
retf
scas
mov
inc
cmp
arpl
das
imul
pop
repz
xor
mov
fmul
mov
inc
dec
fisttp
mov
or
xchg
iret
bswap
xchg
xchg
sbb
test
icebp
(bad)
shl
lahf
dec
and
mov
mov
inc
loopne
das
fisttp
test
mov
loopne
das
mov
jle
nop
xchg
sbb
mov
push
mov
clc
inc
(bad)
std
cdq
inc
dec
fisttp
mov
mov
leave
loop
out
jnp
push
movs
inc
add
or
adc
cmps
stos
cmp
loope
test
jns
cdq
cwde
cmp
or
mov
movs
mov
jg
pop
ds
dec
(bad)
rcr
fbstp
xor
call
inc
test
aam
(bad)
aam
add
xchg
dec
rcr
push
fistp
aaa
jmp
jmp
dec
jle
jns
dec
jle
or
les
int3
jg
imul
xchg
(bad)
stc
sbb
xor
and
jo
pop
(bad)
pop
jno
popf
cmp
je
pushf
jb
ret
pop
push
mov
sub
sbb
inc
jnp
cmp
cmp
lahf
(bad)
scas
push
cmp
mov
pop
ret
and
cld
bound
jae
ret
mov
cdq
mov
pusha
addr16
ret
scas
popf
mov
xchg
fisubr
fild
mov
jmp
jnp
dec
pop
cmp
add
inc
lods
xchg
mov
outs
fcmove
stos
mov
call
push
pop
dec
sub
xor
int3
mov
xchg
imul
mov
dec
stos
mov
(bad)
mov
outs
or
ret
cmp
cld
outs
out
into
repz
(bad)
lahf
inc
ret
es
mov
mov
pop
(bad)
in
daa
xor
sbb
into
jp
pop
mov
push
mov
jmp
mov
and
outs
mul
mov
std
and
neg
add
push
mov
fbld
sbb
sbb
and
ins
sbb
loop
jnp
out
mov
inc
xor
and
jb
push
or
inc
mov
sbb
jg
(bad)
push
stos
push
mov
mov
out
xchg
push
and
push
inc
push
sub
jl
or
or
inc
inc
fisttp
mov
xchg
xchg
in
and
jmp
mov
sbb
xchg
cmps
ud2
jl
mov
pop
jnp
fistp
add
iret
es
mov
push
imul
(bad)
(bad)
mov
data16
out
lahf
jo
retf
call
cmp
jae
test
mov
iret
xchg
xlat
cs
retf
stos
mov
retf
loop
push
dec
mov
xchg
adc
shr
xlat
stos
jmp
mov
pop
fstp
std
cmovbe
add
dec
in
pop
aas
inc
xor
(bad)
addr16
or
xchg
shl
dec
lods
or
mov
das
xor
sub
mov
add
retf
and
xor
mov
pop
movq
(bad)
lock
xor
mov
xchg
and
scas
jge
fld
imul
sub
xor
add
jae
xchg
inc
aas
aam
outs
dec
ja
hlt
push
adc
pop
jns
retf
adc
sar
stc
adc
adc
int3
dec
sub
out
jl
icebp
repnz
movs
leave
inc
aaa
sub
sti
call
sub
fucomi
inc
mov
or
fld
dec
lods
movs
aas
repnz
lea
dec
jl
jo
sbb
imul
push
retf
pop
loop
lock
cs
mov
mov
inc
push
xchg
fcmovu
sub
mov
sti
cwde
rol
hlt
stos
imul
mov
call
sub
mov
push
xchg
icebp
or
rcr
rdpmc
add
mov
jmp
sti
aam
into
sub
jmp
mov
jne
xchg
jae
fwait
jmp
lods
mov
push
outs
sbb
(bad)
dec
and
push
cmp
movs
fwait
ds
sti
loopne
jmp
arpl
jnp
(bad)
lods
sar
fwait
mov
js
jg
mov
cmp
outs
pop
xchg
cmp
test
dec
out
pop
neg
jnp
pop
dec
inc
repnz
adc
sti
or
pop
outs
lock
aad
push
jg
push
stos
btc
push
inc
fist
pop
jg
xchg
cmp
push
ss
pop
jae
arpl
sub
(bad)
and
lahf
retf
scas
mov
dec
repnz
out
fwait
mov
daa
mov
add
mov
pop
inc
xchg
fist
mov
adc
xchg
push
mov
cmp
shl
pop
adc
pop
jecxz
js
aas
scas
mov
cli
int3
inc
adc
push
cmp
cmp
sub
adc
add
scas
ins
xor
dec
fsub
es
jnp
dec
imul
scas
nop
out
xlat
inc
pop
lahf
repz
adc
add
rcl
not
and
test
bound
jnp
xchg
mov
rcl
aas
ss
and
xchg
xor
and
sbb
sub
push
movs
ret
fmul
cmp
xchg
push
clc
push
cs
shr
jmp
xchg
jmp
jo
inc
call
xor
and
nop
push
jb
mov
imul
adc
cli
jns
pusha
daa
int3
push
mov
loopne
nop
jnp
mov
mov
lds
jnp
xchg
not
xchg
sbb
scas
fisttp
and
hlt
imul
es
ror
inc
xchg
lahf
std
rcl
lahf
jmp
jo
and
xor
or
inc
inc
or
pop
shr
xlat
cld
xor
fucomp
addr16
sub
xchg
cwde
in
stos
clc
mov
in
ja
or
cmps
xor
mov
mov
add
ret
(bad)
mov
mov
pop
enter
pop
idiv
sub
inc
mov
aas
cwde
xchg
out
lahf
fdivr
xchg
mov
adc
sub
jnp
jecxz
push
je
cmps
fild
stos
das
into
mov
pop
pusha
(bad)
sti
push
(bad)
in
sahf
retf
add
scas
jno
adc
pop
and
(bad)
out
ss
(bad)
jmp
cld
fwait
mov
jecxz
nop
and
xchg
dec
outs
dec
jle
(bad)
mov
(bad)
sub
jle
dec
mov
sub
push
inc
movs
push
and
mov
xlat
cmp
pop
pusha
outs
neg
or
fstp
mov
hlt
xchg
pop
clc
pop
jo
imul
jp
jmp
adc
mov
or
cmp
or
shl
das
pop
xor
retf
jmp
pop
pushf
(bad)
pop
xor
dec
cmp
dec
sub
(bad)
sub
jp
ret
fidivr
arpl
sub
and
rcr
sbb
cmp
push
add
mov
xchg
mov
les
xchg
retf
(bad)
push
(bad)
das
pop
ins
loop
mov
mov
cli
jno
jecxz
xor
inc
dec
cmp
xor
test
dec
xchg
xchg
retf
sub
sahf
repz
fcomi
sub
outs
cmp
sub
stos
sub
add
jo
retf
cmp
xchg
ins
test
mov
repz
dec
dec
cwde
aas
out
cld
push
inc
xor
lods
jmp
mov
push
fidiv
scas
popf
add
dec
push
(bad)
loop
and
push
add
(bad)
(bad)
fild
mov
add
pop
jecxz
inc
cmp
cmp
push
(bad)
cmps
push
mov
mov
std
in
je
mov
sbb
sub
push
sub
(bad)
stos
(bad)
scas
push
mov
add
(bad)
dec
daa
cli
aam
xchg
or
pop
cmps
pop
jmp
stos
cdq
jmp
icebp
mov
pop
jmp
mov
add
clc
jbe
sub
xchg
imul
sar
jbe
cmps
mov
jmp
adc
mov
dec
in
sbb
pop
aas
inc
mov
call
xchg
mov
pop
fldcw
sub
cmp
(bad)
cmovnp
stos
daa
mov
lods
add
into
jbe
idiv
pop
out
nop
cmp
mov
adc
call
pop
out
(bad)
retf
out
lea
xor
adc
adc
sub
and
fstp
retf
fisub
mov
int
or
das
seta
aas
pop
jg
inc
(bad)
fbstp
mov
sahf
sub
mov
ins
or
pop
mov
mov
iret
ror
mov
mov
mov
(bad)
cmps
dec
outs
in
loopne
jnp
pop
das
push
div
rol
mov
repz
in
mov
mov
addr16
sbb
dec
lock
inc
das
test
retf
dec
inc
sub
pop
out
cmps
cmp
pushf
nop
nop
push
inc
jp
dec
and
stos
es
jl
pop
xchg
(bad)
jge
mov
and
js
ret
pop
cmp
or
sbb
pop
das
into
aas
inc
iret
push
fwait
sub
jae
jmp
sti
scas
retf
inc
lahf
sbb
cmps
sub
outs
imul
fcomp
mov
push
mov
pop
cli
(bad)
outs
lahf
add
rcl
sti
sbb
out
mov
cmp
aas
fbld
cmp
add
fist
in
cmp
jae
xchg
pop
call
pop
mov
pop
jmp
jmp
pop
scas
xor
jecxz
sbb
imul
test
pop
xlat
mov
out
jb
dec
(bad)
adc
sub
or
(bad)
pop
mov
fidivr
push
scas
sub
ja
scas
dec
mov
test
rep
imul
pushf
stos
daa
stos
fild
aaa
inc
retf
pop
lahf
and
cmp
jp
cmc
pop
aaa
das
mov
or
push
ror
mov
inc
aam
movs
dec
pop
pop
loop
mov
xchg
dec
inc
pop
(bad)
out
ins
mov
jmp
(bad)
adc
push
ret
or
je
(bad)
das
push
inc
push
into
mov
punpcklbw
sbb
mov
call
pop
inc
das
pop
shr
adc
jo
push
xlat
and
push
mov
dec
imul
pop
movs
mov
stos
stos
fisubr
loopne
dec
xor
cmp
add
pop
add
aas
sub
sbb
cmps
(bad)
pop
xchg
leave
mov
fistp
and
dec
mov
movs
mov
(bad)
jmp
jmp
in
xor
pop
dec
jg
mov
or
xchg
jg
(bad)
addr16
ja
jae
pusha
inc
scas
jp
pop
les
jg
pslld
jle
dec
dec
cld
jmp
lods
scas
test
and
aas
pop
outs
ret
or
cmp
sub
clc
out
ja
mov
cli
cdq
lods
cmp
pop
pusha
pop
test
fist
or
ja
out
mov
jp
cwde
inc
and
fwait
mov
inc
mov
bound
inc
inc
lahf
retf
test
aas
inc
sub
retf
retf
pop
aas
cli
cs
pop
sub
xchg
dec
cmps
arpl
std
or
out
push
call
retf
cmp
clc
mov
push
jnp
push
jmp
mov
add
sar
dec
dec
and
ja
dec
mov
movntps
push
sbb
xchg
sbb
pop
ret
sub
jmp
push
mov
mov
mov
or
cmp
jnp
dec
inc
popf
cmp
iret
stos
xchg
scas
and
pop
and
cmp
pop
or
neg
dec
push
or
iret
inc
xchg
pop
(bad)
(bad)
(bad)
adc
dec
jg
outs
outs
sbb
mov
outs
test
bound
pop
(bad)
push
lea
mov
fimul
mov
dec
dec
das
mov
call
pop
popf
inc
inc
mov
dec
jg
dec
outs
fild
cmps
movs
ins
jp
lahf
mov
test
(bad)
cmp
or
jle
dec
mov
imul
xchg
ins
adc
imul
xlat
jbe
daa
push
das
mov
cmps
ds
jecxz
sbb
mov
ss
xor
push
ja
push
jmp
and
sub
mov
xlat
mul
or
add
mov
xchg
pop
call
scas
jnp
or
lods
out
outs
pop
into
stos
or
xor
fist
js
scas
push
neg
sub
cmp
mov
or
jnp
push
je
repz
scas
fdiv
ds
cs
xchg
sbb
add
es
scas
pop
jno
call
scas
pop
adc
adc
mov
xchg
outs
mul
ud0
cmp
out
fdivr
xchg
dec
fs
fisttp
pop
outs
pop
adc
dec
pop
stc
ds
pushf
mov
inc
fsincos
lahf
push
push
sti
stos
test
jg
dec
outs
in
mov
cs
aaa
add
xor
jb
fld
or
mov
scas
sbb
xchg
push
cmp
js
and
mov
mov
cmp
sub
loope
jnp
mov
into
mov
mov
xchg
scas
xor
sti
ins
in
daa
mov
pop
cmps
das
mov
fwait
and
sti
and
retf
sbb
sbb
jae
rcr
xor
inc
inc
es
mov
pop
sub
ja
xchg
xchg
iret
test
out
fwait
adc
ja
ficomp
rcr
outs
movs
mov
or
pop
aas
inc
iret
inc
(bad)
mov
sti
ja
clc
mov
mov
pop
sbb
dec
sub
rol
pop
fidiv
xor
fwait
adc
pop
adc
pop
pop
xchg
aas
leave
push
dec
dec
dec
lahf
add
inc
mov
fbld
fwait
xchg
jmp
sti
jbe
or
push
ds
push
pop
sub
enter
dec
inc
pop
out
es
jl
pop
mov
or
mov
or
sbb
pop
das
xor
aas
iret
push
fwait
sub
jae
jmp
sti
and
inc
lahf
sbb
cmps
sub
outs
out
or
mov
stos
mov
pop
stc
(bad)
pushf
lahf
sbb
ror
or
outs
imul
mov
int
neg
bound
sti
stc
retf
imul
outs
in
cmp
jnp
xchg
pop
call
stos
mov
pop
jmp
out
lahf
scas
scas
das
mov
jecxz
sbb
imul
test
pop
xlat
mov
out
jb
dec
(bad)
adc
sub
push
jg
(bad)
pop
mov
fidivr
push
scas
sub
ja
scas
mov
sbb
ins
jnp
dec
(bad)
pop
pushf
stos
daa
test
inc
retf
pop
lahf
and
mov
int3
sbb
pop
das
mov
or
push
int3
mov
mov
mov
loop
mov
jg
aaa
pop
xchg
out
fdivp
mov
sti
retf
lahf
sub
or
sbb
(bad)
aas
pop
pop
jmp
jmp
push
pop
fisub
out
stos
adc
pop
(bad)
sub
pop
jecxz
dec
dec
cmp
xchg
pop
ucomiss
jb
cwde
(bad)
fsub
out
stos
jmp
adc
aam
loop
push
xchg
dec
sbb
xchg
add
sti
adc
shrd
sub
imul
test
push
push
mov
aas
(bad)
fimul
fdivr
adc
repnz
sti
jb
cmp
add
push
lock
dec
mov
mov
add
retf
xchg
sahf
stos
outs
scas
cmp
sub
imul
jae
mov
mov
or
mov
leave
retf
push
fs
ds
cmps
dec
xchg
cs
ds
dec
cmp
pusha
stos
movs
scas
pop
iret
push
retf
(bad)
mov
push
sub
sbb
imul
div
mov
xchg
jmp
mov
pop
sub
jg
int3
jnp
sbb
inc
lods
pop
(bad)
stos
sti
mov
inc
scas
sbb
sub
pop
sub
xchg
adc
cwde
shr
jg
mov
ins
fucomi
jle
mov
pop
mov
jnp
shld
stos
xchg
mov
(bad)
mov
mov
retf
pop
sub
cmp
push
es
push
cld
stos
cwde
call
xor
and
xor
pop
cmp
or
cmp
movs
dec
xor
push
fidivr
adc
xchg
scas
es
pop
nop
nop
push
shl
out
inc
dec
mov
cmp
ds
cmc
add
outs
jmp
loopne
and
mov
fwait
mov
mov
mov
repz
pop
pusha
call
or
sub
sub
sbb
neg
(bad)
cli
iret
arpl
into
fs
jnp
out
xlat
sub
jg
dec
adc
mov
add
stos
pop
mov
cmp
(bad)
sti
lahf
pop
scas
call
outs
sbb
imul
ja
in
nop
stos
iret
ja
sbb
mov
xchg
cmp
setp
das
cwde
hlt
repnz
mov
xchg
jmp
aaa
(bad)
retf
scas
cmps
mov
enter
imul
push
inc
pop
cld
xchg
mov
mov
xchg
scas
(bad)
data16
or
pop
call
fisttp
out
pop
add
dec
sbb
arpl
mov
(bad)
adc
push
push
stos
or
xchg
retf
or
mov
dec
pop
sbb
das
call
out
fwait
add
out
test
dec
aas
pop
sbb
jae
test
and
dec
and
out
cmps
mov
call
scas
sbb
dec
cmp
or
pop
imul
inc
dec
das
(bad)
aas
sbb
ret
dec
sti
(bad)
mov
fstp
cmp
outs
sbb
add
mov
sti
stos
data16
mov
sub
cmps
jmp
das
fsub
pushf
push
push
cmps
mov
sbb
sbb
sti
mov
(bad)
(bad)
scas
add
scas
push
mov
sti
sbb
pop
icebp
cwde
in
es
mov
movs
push
stos
cdq
inc
xchg
outs
bound
imul
int3
stos
lods
xor
push
xor
push
cmps
popa
hlt
ins
sbb
loopne
das
pop
mov
inc
xor
mov
sti
inc
dec
clc
and
cmp
mov
xchg
sbb
cmp
outs
xchg
mov
pop
jp
inc
(bad)
xchg
mov
fiadd
loopne
sti
adc
scas
and
sahf
imul
mov
pop
or
lds
aaa
loope
call
scas
fnstsw
push
aas
sbb
jge
sub
das
cmps
rcl
ret
scas
mov
mov
pop
cmps
enter
sub
dec
sbb
sbb
out
adc
ins
mov
adc
out
xchg
dec
sub
dec
shr
stc
stos
inc
xor
sub
jbe
fwait
sti
sbb
lock
into
jmp
ins
lods
and
jae
or
push
cmp
mov
adc
dec
stos
jge
inc
clc
pop
ret
push
stos
into
jnp
sbb
cwde
sar
mov
jecxz
(bad)
pusha
cmp
cli
mov
test
repnz
or
push
aad
mov
fs
out
scas
scas
loop
push
ss
aam
out
pop
mov
dec
sub
loop
jae
arpl
jmp
push
clc
jbe
outs
pop
jle
xchg
mul
div
xchg
ret
ret
and
fwait
pop
sar
jo
and
inc
sbb
xchg
cmp
and
dec
push
mov
adc
addr16
sub
test
aas
aam
sbb
loop
jle
dec
add
cmp
fs
retf
add
(bad)
ss
add
xor
pop
sub
aas
inc
stos
js
(bad)
fwait
fwait
push
ficomp
call
dec
loop
pop
add
and
dec
jns
cmp
pushf
xor
add
mov
clc
daa
jp
sub
hlt
pop
hlt
outs
inc
jg
pop
sub
pop
imul
into
mov
call
jo
(bad)
pusha
test
mov
repz
add
sub
out
xchg
pop
fidiv
dec
sbb
adc
aam
bound
jg
outs
pop
push
stos
pop
pop
or
mov
(bad)
and
or
bound
or
hlt
jle
mov
dec
outs
cwde
rcl
mov
in
jge
ror
into
mov
test
in
pop
mov
add
je
inc
inc
jmp
call
or
mov
dec
rcl
xor
fistp
mov
sti
ins
in
daa
mov
pop
cmps
das
mov
fwait
addr16
pop
jmp
sti
and
retf
sbb
sbb
cmpps
inc
iret
rcr
xor
inc
inc
es
mov
pop
sub
es
ja
xchg
xchg
iret
test
out
fwait
adc
pop
adc
pop
pop
xlat
sbb
leave
push
dec
dec
dec
rol
inc
iret
in
hlt
je
mov
mov
scas
popf
in
ret
lds
lock
push
mov
mov
pop
popa
das
pop
aas
inc
mov
fbld
fwait
aad
sar
jbe
or
push
aaa
dec
adc
outs
repnz
setae
dec
push
pop
aas
stos
es
jl
pop
cmp
(bad)
mov
and
js
ret
push
cmp
out
sbb
push
das
jae
add
push
fwait
sub
jae
jmp
sti
dec
retf
inc
lahf
sbb
cmps
and
outs
daa
jg
dec
fcomp
mov
push
mov
pop
repnz
fcomp
mov
inc
or
push
imul
mov
(bad)
iret
cmp
bound
sti
mov
outs
in
cmp
das
setb
das
mov
stos
jmp
jmp
loopne
out
scas
(bad)
mov
jecxz
sbb
inc
jnp
jl
lahf
fistp
out
jb
dec
(bad)
adc
cmps
jg
or
aaa
pop
mov
sar
push
scas
sub
ja
scas
clc
mov
test
repz
pushf
stos
daa
mov
inc
retf
pop
lahf
and
cmp
jno
pop
pop
aaa
das
mov
or
push
lds
mov
inc
sar
sub
dec
nop
sub
ins
and
inc
fidiv
shld
fucomi
cmps
and
add
repz
pop
mov
pop
fidiv
add
add
iret
retf
imul
sbb
cmp
das
sub
xchg
xor
and
stos
addr16
jg
int3
xor
fidiv
sub
cmp
or
push
xchg
dec
cmp
retf
mov
jmp
inc
sub
cmp
jmp
loopne
jmp
inc
stos
mov
jmp
jmp
xchg
sub
adc
data16
inc
xchg
dec
stos
addr16
ror
inc
mov
pop
hlt
ins
imul
test
jmp
cmps
cdq
out
mov
dec
stos
nop
mov
inc
shr
cmp
mov
aaa
not
iret
loope
stos
dec
sti
xor
and
adc
cmp
dec
(bad)
sub
cmp
imul
push
cld
fdivr
fistp
mov
mov
push
sub
sbb
pop
cpuid
push
ds
inc
dec
mov
repz
jmp
jbe
retf
inc
fwait
dec
mov
or
and
(bad)
xchg
dec
lods
sar
mov
ja
sbb
jmp
out
rcl
xor
iret
fisttp
push
das
sti
shr
aas
call
pop
int3
fisubr
les
out
ds
mov
movs
outs
scas
movs
ss
out
icebp
cmc
scas
ret
or
xor
or
pop
dec
sbb
out
xchg
pop
mov
movs
xlat
out
xor
and
jmp
out
stc
pusha
scas
push
sbb
mov
ins
sub
pop
mov
dec
pop
pop
(bad)
push
mov
inc
mov
jbe
(bad)
arpl
inc
jmp
pop
aas
sbb
cmp
jnp
push
imul
lods
xor
cmp
std
cmps
imul
aam
mov
xchg
neg
push
das
movs
sub
test
jp
xor
sahf
inc
(bad)
dec
mov
cmps
mov
jg
mov
dec
ror
ds
sbb
mov
jmp
dec
xlat
sbb
push
lock
push
inc
mov
fist
out
int3
mov
mov
daa
inc
jle
push
loop
repnz
fwait
push
xor
sar
mov
pop
je
pop
jb
add
out
loop
aaa
sub
jbe
leave
outs
lahf
sub
mov
sar
cmc
mov
mov
cli
xchg
fwait
dec
setbe
dec
sbb
mov
mov
and
fs
adc
xchg
xlat
fwait
mov
les
loope
jp
or
pop
push
ror
push
mov
add
shl
cli
cmps
leave
dec
out
(bad)
cmp
pop
jnp
(bad)
jp
lahf
sahf
btc
add
(bad)
cmp
test
out
outs
jmp
loopne
rcr
mov
adc
pandn
cmp
mov
retf
push
test
dec
shr
ins
into
inc
xlat
cmp
jae
sub
sub
mov
dec
nop
or
test
imul
shr
int3
mov
xor
rcr
(bad)
mov
scas
or
loopne
fist
retf
ja
mov
pop
jnp
scas
mov
adc
push
xlat
sbb
test
pushf
dec
mov
inc
jge
adc
je
inc
cli
xchg
mov
cdq
mov
test
fwait
sub
fisttp
fdivrp
outs
cmp
pop
scas
and
scas
dec
les
out
ds
push
das
sar
fiadd
sub
(bad)
(bad)
dec
jo
iret
lds
sub
enter
nop
jg
test
mov
aam
xor
mov
stc
sahf
xchg
cli
rol
pop
sbb
je
dec
jae
outs
and
aas
shr
cli
out
add
fcmove
and
mov
int
add
xchg
jnp
ret
das
sar
and
mov
jmp
jmp
mov
jnp
mov
inc
mov
dec
jmp
xchg
xchg
xchg
cmp
inc
shl
mov
mov
jno
pop
(bad)
push
push
inc
xchg
and
je
sub
sar
dec
dec
dec
retf
call
scas
arpl
add
sbb
dec
ins
mov
dec
iret
or
add
pop
sbb
mov
rcr
push
sub
hlt
pop
sar
lahf
shr
sti
out
stos
jmp
and
mov
push
mul
sti
das
(bad)
call
cmp
mov
repz
cmp
and
pop
push
lods
sbb
mov
cmc
cdq
inc
xlat
ds
fwait
jb
mov
sbb
sbb
pop
pop
jnp
gs
(bad)
cmp
aas
out
call
retf
jo
adc
sub
xor
cmp
mov
push
push
cmp
bswap
cmp
bound
cli
repz
xor
sub
push
mov
mov
into
idiv
movs
enter
mov
inc
xor
arpl
jns
dec
daa
pop
cmp
iret
out
(bad)
in
mov
xchg
dec
xor
out
imul
dec
mov
fwait
jae
sahf
mov
lahf
mov
add
cmp
neg
aaa
mov
mov
jp
or
fcom
adc
mov
and
pop
xor
mov
fiadd
out
mov
clc
out
add
cmp
pusha
sbb
push
cmp
dec
in
dec
cmp
mov
rcl
inc
mov
or
push
not
push
mov
shr
call
dec
lahf
xor
(bad)
jecxz
in
xor
imul
imul
not
out
fwait
(bad)
jmp
sbb
push
jecxz
pop
dec
cmp
push
out
repnz
ja
aas
imul
push
(bad)
jnp
jbe
xor
and
outs
fstp
(bad)
sbb
jae
dec
das
retf
mov
iret
inc
push
(bad)
(bad)
fidiv
mov
xor
pop
dec
sub
cmp
hlt
cs
hlt
ret
les
push
add
cli
push
xor
lock
dec
mov
or
pop
ret
aaa
and
push
aas
sub
adc
outs
push
inc
sub
dec
aam
jg
cmp
jnp
lods
push
inc
aas
mov
inc
add
pusha
movs
jp
retf
sub
dec
cmp
or
jne
je
aas
dec
dec
mov
jmp
in
sbb
dec
dec
lods
dec
rcl
xor
test
cmps
xor
mov
(bad)
lahf
mov
mov
mov
fisubr
or
(bad)
aas
stos
sti
loop
fsubrp
push
jmp
fcmovu
sti
sub
les
sub
test
das
es
push
iret
add
arpl
fisttp
inc
inc
pop
adc
jecxz
out
stos
lock
ja
mov
aaa
into
mov
add
lods
mov
js
(bad)
dec
aas
dec
jle
or
jae
ins
sub
fidivr
or
jp
pop
jbe
xor
and
xlat
jg
nop
jnp
dec
cmp
pop
inc
out
fisttp
(bad)
mov
stos
jmp
mov
or
inc
neg
imul
xor
addr16
jo
xor
into
inc
int
jg
sti
outs
jno
push
sbb
pop
dec
movs
in
pop
iret
loop
es
fidivr
fadd
or
repnz
pop
call
or
xchg
push
fcom
scas
(bad)
sbb
stc
mov
sbb
outs
jmp
inc
dec
cs
aas
and
loop
jecxz
pop
je
int
pusha
into
scas
mov
aaa
hlt
outs
out
add
(bad)
sub
ror
ret
stos
jb
jmp
sti
fiadd
and
ret
dec
fistp
lods
inc
pop
fwait
dec
mov
shr
call
inc
mov
and
pop
mov
mov
stc
ds
fidivr
sub
lahf
xor
(bad)
call
nop
repz
outs
fsubr
(bad)
pop
(bad)
cli
daa
xor
test
xchg
and
mov
dec
enter
sbb
and
movs
push
mov
fwait
add
cli
fcmovnu
ins
mov
mov
add
cmp
mov
pop
addr16
lahf
sbb
iret
cli
pop
sahf
mov
ja
cli
mov
outs
(bad)
jg
(bad)
and
cmp
mov
lea
mov
repz
pop
pusha
call
or
sub
sub
sbb
dec
pop
push
push
or
xchg
retf
or
mov
dec
pop
in
mov
das
call
out
fwait
scas
jmp
mov
out
dec
jae
sbb
jae
test
and
dec
pop
pop
xchg
cmps
inc
sbb
mov
call
push
sbb
cmp
pop
pop
xchg
int3
mov
dec
das
dec
aas
sbb
ret
addr16
(bad)
mov
and
out
cmp
outs
sbb
add
mov
mov
data16
mov
sub
cmps
jmp
sbb
and
cs
test
aas
arpl
sbb
mov
sti
push
retf
out
xlat
aam
hlt
push
or
jg
dec
adc
mov
add
stos
and
cmp
(bad)
sti
lahf
jae
call
outs
sbb
imul
ja
in
mov
iret
das
fistp
stos
repz
pop
mov
xchg
les
setp
rcr
sbb
dec
sub
retf
scas
xchg
mov
enter
imul
push
inc
movs
cld
jns
mov
mov
xchg
scas
fstp
sub
aaa
hlt
lods
enter
pop
pop
call
fisttp
scas
scas
add
retf
leave
mov
mov
cmc
lahf
sbb
ret
out
rcr
test
out
out
mov
retf
scas
push
mov
or
movs
cmp
inc
mov
push
dec
cmps
iret
fist
out
pop
adc
cli
out
jb
fist
inc
repz
jmp
test
push
mov
inc
movs
add
pop
cwde
lock
mov
mov
adc
bswap
sub
aas
jb
stc
stos
retf
adc
fs
(bad)
sub
das
pop
push
js
xor
cmp
test
movs
shl
test
or
or
add
adc
lods
popf
push
jbe
or
add
sub
sub
je
mov
(bad)
test
(bad)
dec
pop
xchg
iret
inc
repz
sub
mov
or
push
iret
shl
jnp
push
mov
mov
rcr
jnp
jl
call
js
push
mov
lahf
in
cwde
sbb
mov
cmps
fsub
pop
pop
arpl
lock
mov
pop
mov
inc
call
xchg
inc
or
pusha
pop
mul
mov
pop
fcomip
wrmsr
aam
or
lods
scas
mov
int3
stos
and
test
pop
sub
fs
cmp
and
ds
mov
jae
sub
(bad)
pop
scas
outs
sbb
jl
enter
aam
cs
jp
lock
inc
and
in
push
adc
outs
pop
jnp
and
adc
js
xchg
add
xchg
add
in
pop
pop
xchg
lock
mov
dec
fs
stos
ftst
pop
int3
mov
call
(bad)
sbb
sub
cmp
pop
stos
dec
imul
out
mov
fwait
push
stos
xchg
dec
(bad)
mov
mov
dec
push
jg
fild
aas
call
call
mov
xchg
retf
stos
jne
retf
ds
test
das
fadd
clc
inc
mov
push
(bad)
ficom
xchg
and
adc
jecxz
xchg
(bad)
fistp
fisttp
inc
inc
call
xchg
push
add
les
ins
sbb
and
stos
or
and
fs
mov
and
out
sub
cmp
cmp
mov
push
jp
mov
call
mov
inc
and
shrd
mov
inc
inc
pop
ror
sub
sub
mov
add
jne
add
rcr
add
dec
cld
hlt
xor
inc
iret
call
fcmovne
aaa
jne
imul
push
imul
cs
xchg
cdq
fidiv
(bad)
out
pop
mov
(bad)
sti
xchg
dec
jmp
cli
test
in
push
cmp
mov
lahf
mov
jmp
pop
aad
mov
sbb
shl
retf
push
mov
ret
test
cmc
pop
hlt
jp
sbb
movs
ds
outs
ss
jbe
xchg
and
mov
jmp
push
das
das
pop
jp
sbb
mov
or
fbstp
mov
and
cmp
int
adc
or
sbb
(bad)
xlat
and
jmp
sahf
outs
call
push
leave
xor
(bad)
mov
cld
cmp
ret
dec
lods
cmc
jecxz
xor
sbb
pusha
fisttp
fiadd
cmp
push
jb
push
dec
shl
je
les
inc
repnz
add
add
xchg
outs
jg
ins
ds
stos
pop
pop
or
wrmsr
cdq
mov
enter
mov
retf
mov
push
outs
cwde
jg
retf
jnp
sbb
pop
jns
mov
(bad)
adc
mov
xor
shl
mov
sar
test
xchg
pop
ret
cmp
out
int
rol
mov
sbb
and
cld
out
(bad)
dec
pop
pop
push
sti
mov
add
lahf
clc
and
mov
adc
movs
imul
jp
fwait
cmp
jae
out
cmps
pop
fxch
fstp
fstp
pop
dec
xlat
mov
dec
jp
inc
scas
das
movs
dec
stos
iret
mov
jmp
fild
hlt
sbb
arpl
lock
sar
call
inc
fcmovnbe
outs
cmp
outs
hlt
rcr
test
dec
pop
dec
(bad)
pop
push
inc
cmps
call
mov
cmp
or
jg
(bad)
xchg
in
scas
aas
jmp
out
ja
pusha
retf
cmp
mov
or
sbb
imul
div
mov
pop
jmp
xor
push
cmps
inc
(bad)
push
xchg
pop
shr
pop
add
(bad)
cli
fwait
stos
sub
fidivr
(bad)
scas
aaa
xlat
sub
pop
pop
xchg
xchg
sbb
inc
dec
inc
dec
aas
dec
loop
or
ficomp
sub
jno
imul
outs
dec
pop
aas
inc
cmps
mov
cmps
scas
pop
inc
lock
ds
outs
xchg
push
dec
imul
jecxz
push
outs
das
sbb
mov
inc
idiv
xchg
outs
dec
xlat
aaa
or
aas
cmp
cmp
pusha
stos
movs
scas
(bad)
es
retf
sti
jae
scas
clc
mov
popa
outs
loopne
jle
inc
cmps
dec
das
mov
and
(bad)
call
sub
jbe
sbb
sar
jbe
cmps
mov
push
scas
sub
ja
scas
inc
mov
test
repz
imul
pushf
stos
daa
popf
fist
out
ja
add
pop
lahf
and
les
dec
pavgb
cmp
mov
or
push
stc
mov
adc
mov
mov
loop
mov
test
movs
(bad)
out
ins
mov
jmp
adc
push
aad
mov
xchg
imul
pop
shr
inc
rol
fbld
fwait
data16
add
(bad)
or
push
push
dec
mov
cmp
setae
dec
mov
and
jl
pop
mov
pusha
and
js
ret
imul
xchg
das
lods
jnp
ins
das
int3
aas
out
xor
sub
jae
jmp
sti
out
inc
lahf
sbb
cmps
sbb
add
pop
test
iret
dec
fwait
pop
int3
(bad)
ins
lahf
addr16
xor
mov
jp
stc
sbb
out
mov
ds
(bad)
and
cmp
add
and
outs
in
cmp
inc
lock
pop
call
pop
mov
pop
jmp
ficomp
ret
pop
jecxz
sbb
imul
test
pop
xlat
(bad)
iret
sub
mov
repz
mov
cmps
dec
mov
lahf
outs
mov
add
imul
adc
lds
test
lods
fwait
test
aaa
ficomp
push
inc
inc
bound
imul
push
lea
xlat
cs
dec
xchg
fwait
je
ret
jbe
mov
xor
or
pop
jg
jp
(bad)
inc
dec
mov
(bad)
out
fbstp
jmp
fimul
dec
push
popa
in
or
dec
stc
sti
iret
mov
cmps
fxch
pop
mov
nop
aam
ds
push
test
xchg
aas
btr
dec
jae
xchg
nop
pusha
dec
and
mov
jecxz
ret
into
cs
sbb
repnz
add
test
add
sbb
or
jp
pushf
pop
sar
fwait
sti
ror
rol
(bad)
cmp
jecxz
test
imul
fild
xchg
ret
call
inc
mov
mov
xchg
jecxz
ins
adc
dec
repnz
adc
pop
retf
lods
(bad)
xor
aam
cmp
dec
fld
mov
movs
push
mov
mov
mov
sbb
fiadd
and
pop
jnp
inc
mov
aas
xchg
ret
sbb
adc
pop
adc
retf
jnp
mov
pop
push
and
clc
mov
enterw
stos
repz
loop
inc
sub
pop
jecxz
nop
mov
sbb
sub
stos
inc
mov
jmp
aaa
das
mov
cmovg
inc
jg
movlps
jmp
rcl
sbb
inc
(bad)
add
into
jbe
dec
push
pop
and
jg
psubb
das
xor
mov
mov
push
adc
sti
fisttp
push
bound
dec
inc
sbb
pop
das
jecxz
mov
fild
jae
jmp
stos
je
rcr
inc
sbb
cmp
icebp
jne
aam
sub
add
mov
fbstp
sti
ins
add
dec
outs
pushf
push
inc
add
imul
push
bound
sbb
mov
inc
div
inc
outs
dec
xlat
aaa
or
aas
cmp
cmp
pusha
stos
movs
scas
(bad)
sub
xlat
xor
sti
jae
scas
repz
or
adc
dec
jp
and
fbld
call
scas
and
mov
outs
dec
mov
sub
pop
dec
ret
xor
mov
sti
mov
stos
fwait
add
add
lahf
mov
push
sbb
dec
outs
not
push
jnp
sbb
rcl
xor
retf
and
jmp
mov
dec
in
cmp
xchg
jg
push
js
pop
mov
fcom
mov
mov
mov
sbb
je
push
mov
pop
pushf
stos
daa
xchg
fcomip
out
add
add
pop
lahf
and
les
inc
lidtd
jnp
mov
or
push
cmc
mov
mov
mov
loop
mov
dec
out
(bad)
out
ins
mov
push
jo
fld
xor
hlt
xchg
imul
pop
xor
mov
inc
mov
fbld
fwait
xchg
xchg
add
(bad)
or
push
add
pop
addr16
repnz
setae
dec
pop
pop
xlat
push
es
jl
pop
mov
pushf
(bad)
out
and
js
ret
cmp
or
in
das
lods
jnp
bound
sub
fwait
sub
jae
jmp
sti
(bad)
lahf
sbb
cmps
adc
outs
arpl
mov
cmove
iret
dec
fwait
pop
ror
sti
mov
jne
sbb
rcl
jae
(bad)
cmps
and
cmp
add
and
outs
in
cmp
mov
das
mov
stos
mov
fistp
rcr
ret
pop
jecxz
sbb
jl
leave
fbstp
jb
dec
(bad)
adc
sub
mov
jmp
bound
ja
and
out
sub
das
int
out
vmwrite
cld
or
jmp
daa
xor
fwait
bound
dec
daa
lods
fwait
xchg
add
inc
xor
ss
jbe
inc
inc
lahf
add
jle
hlt
mov
jle
dec
les
push
shl
pop
arpl
sub
xor
dec
rcr
pop
sub
jg
pop
jp
dec
mov
repz
mov
inc
repnz
retf
lods
fcomi
adc
adc
(bad)
test
pop
push
stos
and
fimul
retf
adc
xchg
mov
les
mov
in
add
push
movs
das
xor
stos
int3
mov
retf
pop
jnp
jg
mov
push
jle
shrd
adc
mov
fsub
jbe
retf
inc
shl
repnz
mov
cmc
comiss
(bad)
(bad)
adc
jmp
mov
jmp
cld
pop
push
jp
sbb
rcr
rol
pop
out
pop
repz
mov
push
mov
jnp
sti
mov
sub
push
enter
push
das
dec
rol
mov
lock
pop
std
mov
int
idiv
imul
dec
lods
cmc
shl
dec
(bad)
iret
mov
mul
pop
add
out
cmp
enter
xchg
lock
stos
cmp
popa
scas
jmp
sti
lahf
retf
scas
fstp
pop
jmp
repz
rcl
lea
mov
xlat
dec
cmp
adc
dec
jb
xor
out
fdivrp
scas
(bad)
sti
pusha
dec
jmp
mov
fsub
pop
push
inc
not
iret
movs
push
push
(bad)
pop
cmps
add
push
xor
push
and
xchg
cmp
jnp
push
cmp
inc
ss
push
(bad)
mov
inc
je
cmp
cmp
test
pop
js
mov
and
call
scas
aam
das
dec
in
nop
mov
fwait
mov
lfs
mov
or
retf
xchg
mov
fwait
or
sbb
je
(bad)
push
mov
rol
mov
sti
mov
outs
jmp
sbb
lahf
(bad)
fisttp
or
lahf
pop
scas
sub
dec
iret
pop
std
sub
sub
fidivr
mov
pop
cmp
call
daa
jmp
cli
and
fnclex
pop
mov
sbb
sbb
xchg
enter
mov
push
fwait
je
fwait
(bad)
jmp
sti
lahf
retf
scas
fstp
jl
sti
lahf
hlt
jp
jg
cmovs
xchg
lods
faddp
xchg
repz
fwait
add
jne
sti
jbe
ret
outs
movs
jecxz
inc
test
sbb
fwait
mov
sub
dec
scas
jmp
pop
mov
jg
pop
jnp
dec
aas
pop
push
cmc
inc
xor
mov
xchg
ja
ins
sar
sub
push
(bad)
jnp
(bad)
into
not
out
(bad)
sti
imul
pop
daa
or
popf
or
ds
inc
add
aas
repnz
aas
adc
adc
xchg
mov
test
pop
pop
in
xchg
mov
add
pop
rcr
stos
xor
call
mov
daa
inc
bound
inc
lock
das
adc
and
adc
mov
jg
pop
nop
push
(bad)
xchg
sbb
push
stos
pushf
inc
mov
enter
and
js
jbe
hlt
outs
in
xchg
or
ins
cmps
xor
and
(bad)
add
jg
sahf
aaa
outs
pop
imul
aas
sbb
loope
or
sbb
lahf
xchg
mov
int
pop
sti
imul
pop
iret
ror
xor
iret
inc
push
(bad)
bound
(bad)
mov
outs
ret
or
mov
mov
btc
cmps
(bad)
neg
ss
sbb
aam
imul
aas
xchg
push
lock
pandn
aas
clc
iret
ss
das
add
dec
mov
repnz
pop
arpl
fwait
xchg
pop
stos
mov
imul
mov
out
sub
sbb
pop
repz
pop
xchg
adc
call
stos
dec
xchg
pop
xchg
loopne
rcr
push
push
mov
xor
and
xlat
mov
jae
es
das
mov
mov
gs
add
daa
retf
and
out
daa
ja
mov
mov
dec
mov
mov
inc
mov
out
inc
les
lock
pop
sub
mov
mov
mov
out
push
cmp
mov
inc
outs
ret
or
cli
icebp
push
dec
inc
mov
xchg
pop
inc
inc
call
cmps
adc
imul
pop
add
sbb
xchg
add
out
(bad)
test
sti
out
call
(bad)
fistp
out
in
cmp
xchg
pavgb
imul
fidivr
mov
xor
call
popf
add
and
movs
or
iret
mov
enter
test
cwde
inc
(bad)
mov
pop
in
das
sbb
pop
xor
iret
mov
test
xchg
inc
(bad)
outs
mov
add
push
lock
rcr
and
call
mov
dec
scas
lea
(bad)
or
imul
paddb
pop
sub
inc
pop
mov
pop
and
jo
pusha
fsubp
sub
jnp
(bad)
sbb
jne
psubusb
daa
shl
pop
iret
into
and
std
adc
cmp
pop
push
(bad)
outs
cmp
or
mov
inc
jp
mov
pop
mov
mov
fimul
pop
mov
and
jbe
or
mov
pop
jmp
fwait
into
out
out
je
mov
(bad)
js
mov
push
fistp
mov
and
aas
out
into
retf
fmul
out
fwait
mov
fldcw
inc
ds
fwait
or
data16
jg
add
sub
mov
and
(bad)
(bad)
jmp
sti
leave
sub
fstp
test
jg
int3
jnp
ror
sar
pop
fcmovnbe
cli
lds
daa
ss
lahf
and
fld
dec
and
imul
dec
das
lahf
int3
out
jno
xchg
or
xchg
lahf
loope
sbb
xchg
cdq
jle
push
in
dec
or
(bad)
pop
test
mov
mov
(bad)
add
adc
cmps
cmp
sbb
add
jg
inc
retf
dec
jbe
ins
lods
push
clc
es
sbb
and
pop
dec
inc
push
repz
mov
(bad)
adc
sahf
or
ror
cwde
cs
hlt
nop
sbb
das
lock
rcr
mov
mov
mov
retf
cli
scas
push
hlt
dec
ins
aad
sub
jg
push
mov
pop
push
xor
add
jmp
sti
ja
es
jg
aam
in
inc
mov
daa
popa
enter
jo
shl
outs
cli
pop
fwait
dec
lea
int3
outs
dec
dec
sbb
aam
jg
or
inc
add
(bad)
aaa
retf
sub
jbe
or
xor
cmp
das
movd
(bad)
xor
arpl
mov
pop
(bad)
mov
es
stos
mov
mov
imul
aam
mov
pop
outs
xchg
jle
gs
packssdw
test
mov
jbe
mov
ja
dec
push
(bad)
fisttp
jmp
push
and
das
leave
jecxz
mov
mov
push
pushf
scas
(bad)
call
jmp
pop
loop
repnz
(bad)
xchg
dec
push
arpl
push
je
add
jle
cmp
into
aaa
sub
push
repnz
push
xchg
daa
imul
push
fidiv
scas
dec
stos
addr16
jae
ror
mov
aam
retf
cmp
(bad)
lock
mov
pop
mov
iret
pop
xchg
mov
or
xchg
(bad)
xchg
cmp
test
(bad)
push
or
stos
fidiv
iret
sahf
stos
enter
test
aaa
push
(bad)
or
in
addr16
rol
inc
inc
mov
imul
daa
dec
mov
int
push
pop
xchg
seta
inc
cmps
jnp
pushf
inc
or
pop
out
nop
popf
jmp
inc
sub
int3
sbb
sub
dec
daa
cs
sbb
pop
call
retf
fisub
aas
mov
pop
pop
cmp
sub
(bad)
pop
sbb
mov
div
pushf
shr
aam
ins
pop
or
pop
hlt
call
mov
fstp
fistp
mov
sbb
push
xchg
xor
data16
test
ja
xor
adc
sbb
push
pop
sbb
mov
xor
mov
inc
hlt
jg
xchg
jne
daa
sar
inc
xchg
push
mov
sub
aam
push
clc
popf
int
ror
jb
ret
pop
repz
ja
cvtdq2ps
retf
add
pop
bound
jb
aaa
push
push
jmp
and
loopne
xchg
aas
movs
dec
mov
mov
test
add
daa
and
push
cmps
mov
pop
mov
dec
lahf
sub
pop
jnp
pop
mov
jne
retf
add
(bad)
dec
ja
ds
sub
movd
cmp
out
xor
leave
sub
cli
jmp
or
jne
xchg
cmp
mov
pop
add
push
imul
mov
daa
mov
into
out
adc
out
or
fndisi(8087
sub
push
(bad)
cmp
mul
inc
sub
push
fcomp
push
dec
jmp
fwait
adc
pusha
cmp
mov
or
les
sbb
jns
outs
addr16
in
fist
(bad)
jmp
add
mov
mov
push
push
nop
sbb
rcr
out
mov
(bad)
in
int
arpl
lahf
add
jle
hlt
outs
pop
cmp
ss
dec
jb
dec
and
call
jb
ret
cmp
aam
js
(bad)
jbe
push
dec
inc
lea
(bad)
iret
ss
bound
(bad)
jo
pop
push
push
outs
ret
push
push
sbb
out
(bad)
(bad)
push
ins
mov
(bad)
stos
cmp
retf
lods
and
test
outs
sbb
fwait
inc
jnp
and
(bad)
mov
lahf
mov
xchg
call
jo
sub
pop
hlt
nop
sbb
lock
ds
push
nop
cwde
into
in
jecxz
push
jmp
jo
inc
scas
push
cli
jnp
aaa
mov
xchg
(bad)
das
or
repnz
fistp
xlat
fist
test
jbe
retf
div
xor
mov
adc
outs
jno
imul
(bad)
xchg
loop
jmp
dec
lahf
inc
jge
fcmovnu
push
jp
mov
mov
xchg
shl
mov
out
std
arpl
repz
out
outs
and
pop
xchg
int3
or
sar
and
push
fisttp
jae
inc
(bad)
popf
call
mov
loopne
adc
cmps
jl
xchg
add
and
mov
retf
add
xchg
push
(bad)
repnz
adc
hlt
outs
dec
hlt
xchg
daa
punpckhbw
das
fwait
inc
adc
pop
adc
retfw
xchg
push
fcmovne
das
mov
pop
sub
push
mov
sbb
lods
mov
lods
arpl
mov
and
jnp
xchg
not
push
cmp
or
mov
dec
pop
movs
outs
(bad)
mov
(bad)
out
(bad)
pusha
or
and
and
(bad)
xchg
cmp
js
pop
adc
(bad)
out
out
(bad)
pusha
jae
ss
and
aam
cmp
in
adc
ret
retf
stos
ret
inc
inc
mov
jmp
(bad)
jae
scas
ins
shl
daa
les
cli
outs
enter
jae
adc
fimul
sbb
push
out
call
and
inc
dec
jle
rcr
xchg
pop
imul
repz
(bad)
xlat
stos
fwait
imul
out
pop
cmps
pusha
add
xor
push
inc
aam
jle
cmp
fs
loopne
dec
xchg
jp
mov
xchg
std
or
(bad)
jmp
cmps
xchg
xor
imul
pop
jg
inc
sub
inc
and
fidiv
jo
inc
es
mov
or
jl
test
mov
inc
nop
xchg
dec
das
fnsave
dec
xchg
inc
stos
lock
jmp
in
jge
test
mov
inc
jnp
add
adc
xchg
fiadd
xchg
stc
mov
scas
xchg
push
out
test
pusha
bound
push
imul
sti
shl
ret
in
mov
cmps
ret
test
loopne
aas
sub
in
pop
mov
inc
pop
fdivr
movq
outs
xchg
packssdw
sar
out
sti
mov
lahf
inc
cmp
cmp
bnd
and
mov
sbb
and
mov
or
pop
imul
neg
sbb
add
iret
or
ja
push
fcom
data16
(bad)
daa
and
inc
retf
add
pop
popa
jp
(bad)
imul
dec
iret
cmps
push
into
call
es
fidivr
cli
sti
rol
and
sub
pop
and
outs
je
iret
lods
xor
mov
sub
mov
sbb
sbb
mov
daa
mov
sti
lods
inc
jo
lahf
repnz
stos
sub
ins
mov
pop
(bad)
jnp
test
pusha
imul
ins
int
jmp
mov
pop
outs
mov
add
sbb
xchg
push
nop
pop
ds
mov
sub
in
aam
je
inc
jb
retf
outs
and
pop
ret
test
pop
dec
imul
adc
scas
(bad)
jo
or
push
jle
cmp
(bad)
shl
hlt
xchg
jnp
fistp
(bad)
cdq
call
neg
or
mov
mov
clc
xchg
jb
push
fsub
aas
xchg
je
retf
nop
scas
mov
sbb
xchg
ss
out
jnp
adc
mov
or
or
or
xlat
sar
outs
inc
xchg
out
xchg
push
das
pop
push
mov
mov
or
sbb
jmp
mov
dec
outs
pop
shl
test
mov
scas
scas
lods
mov
xor
push
adc
and
int3
test
dec
scas
or
repnz
sub
mov
jo
add
(bad)
loop
sbb
sbb
call
cld
aam
push
enter
mov
mov
mov
pop
sub
loopne
das
xor
adc
stos
jmp
jmp
jbe
pop
xchg
cmp
icebp
jne
ror
call
or
mov
sti
ret
aad
outs
in
imul
das
xlat
shr
mov
mov
inc
(bad)
jl
js
hlt
push
sbb
cwde
inc
sti
mov
arpl
call
sti
fmul
push
fidivr
or
push
mov
sbb
rcl
xor
(bad)
sub
cli
jmp
add
imul
repz
add
test
ins
cwde
shr
jg
mov
ins
fucomi
sbb
cmp
adc
aas
neg
das
cmp
inc
adc
sbb
add
(bad)
loopne
lahf
jg
adc
hlt
outs
sbb
imul
ja
in
xchg
stos
iret
(bad)
fistp
stos
repz
inc
mov
xchg
lds
setp
rcr
fisttp
dec
xor
retf
scas
aaa
mov
enter
imul
(bad)
push
inc
movs
cld
pusha
xchg
mov
mov
xchg
scas
fninit
sub
aaa
cmc
lods
xlat
imul
pop
call
fisttp
out
pop
push
neg
mov
arpl
jnp
dec
out
push
push
or
xchg
retf
or
mov
dec
pop
in
movs
push
jnp
pop
das
call
out
fwait
ja
out
div
dec
imul
jae
test
and
dec
arpl
out
cmps
inc
sbb
mov
push
push
sbb
dec
cmp
or
pop
xchg
int3
stos
inc
dec
das
cmp
sbb
ret
pop
sti
(bad)
mov
and
pop
(bad)
outs
sbb
add
mov
(bad)
stos
data16
mov
sub
cmps
jmp
inc
lahf
call
pop
or
test
cdq
jbe
aas
inc
iret
sbb
mov
sti
xchg
retf
out
xlat
aad
call
cmps
imul
aas
and
mov
stc
cmps
jo
cwde
retf
pushf
pop
loop
or
or
icebp
sub
outs
inc
inc
mov
call
mov
fucomi
push
arpl
inc
cmp
addr16
out
inc
sub
inc
sub
mov
add
xor
dec
mov
cmp
adc
dec
cmp
aas
mov
pop
pop
jmp
out
mov
hlt
out
jl
inc
nop
or
imul
add
mov
jo
pop
fwait
and
outs
xor
push
jle
(bad)
mov
(bad)
cwde
dec
or
fxch
inc
inc
mov
hlt
test
and
jnp
and
fsubr
int
mov
pusha
dec
adc
aam
(bad)
aam
nop
push
jle
jns
push
mov
mov
stos
out
mov
adc
sti
imul
jne
xor
test
dec
pop
sar
ror
stos
dec
cli
push
retf
adc
jbe
add
sub
mov
dec
in
pop
xchg
jnp
mov
fucomi
fild
retf
mov
fistp
(bad)
sbb
ds
movs
aas
push
movs
mov
add
sti
ja
pushf
(bad)
mov
jne
pop
adc
cli
dec
push
shr
call
sti
fisubr
xor
and
mov
stos
push
xlat
xchg
sar
mov
add
scas
push
xor
fwait
xlat
sub
xor
aaa
push
fisttp
daa
add
sub
(bad)
fsubr
hlt
mov
inc
dec
hlt
nop
pop
loop
mov
ss
inc
jg
jnp
cmp
xlat
adc
inc
lahf
and
add
fdivr
(bad)
jnp
imul
aas
stos
sar
jmp
xchg
pusha
mov
dec
cmp
xchg
jl
pop
dec
inc
pop
cmp
cmps
shl
mov
ja
rol
iret
retf
push
loopne
sub
push
cli
or
comiss
fstp
pop
je
shr
(bad)
les
idiv
jnp
mov
pop
rcl
push
mov
shl
mov
fld
push
lahf
jg
xor
(bad)
iret
stos
xchg
push
push
mov
jnp
jmp
xchg
mov
pop
fucomi
retf
idiv
mov
das
add
pop
push
in
pop
jp
mov
(bad)
sbb
xor
inc
sbb
(bad)
mov
imul
adc
(bad)
sahf
scas
push
cli
scas
cmp
and
and
addr16
pop
jp
iret
in
inc
into
out
fs
ja
leave
adc
xor
(bad)
dec
test
ja
jnp
dec
push
outs
out
inc
rcr
movs
out
fs
jmp
add
out
outs
pop
cmp
enter
cs
push
mov
arpl
call
sti
fmul
push
fidivr
or
push
mov
sbb
rcl
xor
(bad)
sub
cli
jmp
add
imul
repz
add
test
ins
cwde
shr
call
inc
mov
and
pop
mov
mov
stc
ds
fidivr
sti
stos
jb
add
(bad)
call
nop
fcmovnu
push
outs
fcomp
out
pop
(bad)
cli
daa
xor
test
add
retf
(bad)
and
push
dec
pop
sbb
test
sub
mov
sub
sti
fiadd
and
ret
dec
fistp
cmps
inc
push
sti
dec
mov
shr
repz
inc
mov
xchg
lds
setp
rcr
jg
data16
retf
scas
addr16
enter
imul
cld
pusha
xchg
mov
mov
xchg
scas
fisttp
sub
aaa
cmc
lods
shl
imul
pop
call
fisttp
out
pop
pop
neg
mov
arpl
jnp
dec
out
push
push
or
xchg
retf
or
mov
dec
pop
in
movs
push
jnp
add
call
out
fwait
repz
mov
out
dec
jnp
sbb
jae
test
and
dec
daa
pop
xchg
cmps
inc
sbb
mov
(bad)
out
(bad)
call
dec
cmp
pop
pop
xchg
int3
stos
inc
dec
das
pop
aas
sbb
ret
xchg
sti
(bad)
mov
and
pop
xchg
cmp
icebp
mov
mov
jne
dec
cmps
jmp
xchg
lahf
call
pop
or
sbb
cdq
jbe
aas
bswap
sbb
mov
sti
aas
retf
out
xlat
aad
jmp
jg
dec
adc
mov
add
out
into
(bad)
in
add
lahf
or
pop
inc
scas
mov
mov
cs
pop
ret
iret
inc
inc
mov
cmp
lods
push
cli
test
fadd
es
out
mov
mov
scas
inc
(bad)
jo
out
imul
addr16
ret
scas
sub
jl
les
in
aaa
xor
loopne
xchg
cmps
jnp
inc
inc
xor
push
adc
mov
clc
pop
imul
loop
or
lock
cld
dec
jp
icebp
cmp
scas
out
inc
jmp
xchg
lahf
dec
stc
fstp
sub
sub
call
stos
iret
neg
fdivr
jbe
aaa
sbb
mov
int
sbb
sti
cs
ret
es
inc
fild
dec
or
retf
lods
add
cmp
push
mov
push
loopne
das
movs
mov
iret
call
(bad)
out
jae
and
out
pop
hlt
xchg
or
dec
aas
push
mov
push
ds
mov
adc
mov
inc
in
cmp
or
mov
jmp
rcr
iret
adc
mov
retf
(bad)
loop
outs
(bad)
sub
pop
pop
out
fidiv
and
scas
scas
dec
mov
xchg
(bad)
rcr
aam
das
outs
scas
or
outs
push
ja
test
sub
rcr
enter
mov
outs
in
imul
pop
mov
iret
mov
(bad)
adc
mov
out
ja
sub
mov
pop
dec
pop
stos
aas
js
int
jecxz
(bad)
emms
mov
not
pop
sub
cmp
mov
or
inc
dec
push
faddp
pop
fistp
je
fs
sub
xor
mul
fcmovbe
xlat
inc
setae
repnz
shr
into
stos
mov
stos
mov
sahf
and
stc
pop
hlt
lods
repz
cmp
inc
pop
arpl
push
jnp
out
rol
add
mov
cmps
adc
ins
dec
jnp
or
aas
int3
rol
pop
test
add
ja
jns
xchg
aam
mov
jecxz
int
inc
lock
jle
xor
loop
(bad)
adc
icebp
cmc
out
in
outs
jnp
fist
dec
out
lahf
outs
jno
outs
gs
dec
mov
movs
dec
ret
inc
inc
or
cmp
sti
fwait
push
int
jnp
pop
pop
sti
loop
jns
dec
jnp
lea
cmp
xor
push
mov
push
pusha
mov
mov
pop
or
sbb
loopne
lods
xor
std
in
test
call
jo
jmp
mov
nop
sbb
imul
sbb
mov
je
(bad)
call
or
mov
add
or
sub
in
push
xchg
push
jb
cmps
inc
mov
data16
fmul
fucompp
jnp
jle
hlt
nop
out
jg
push
mov
cmp
xor
dec
mov
ins
push
(bad)
jmp
mov
js
sbb
das
push
outs
jmp
shl
arpl
call
jo
lahf
or
adc
push
das
inc
bndldx
mov
outs
jmp
iret
cli
fwait
scas
jmp
lods
enter
mov
dec
sub
sti
xor
ret
mov
jnp
aas
scas
cmp
retf
scas
push
mov
or
jnp
dec
(bad)
pusha
cmp
lahf
and
or
call
cmp
das
mov
dec
out
das
pop
xchg
jb
mov
call
jnp
jg
sub
mov
inc
movs
ds
mov
fwait
cld
or
in
fmul
outs
jno
mov
inc
xchg
push
or
xchg
mov
jbe
inc
jmp
jecxz
popa
cmp
movd
pop
stos
js
jecxz
jb
pop
add
lahf
xchg
inc
push
mov
or
sub
pop
shl
mov
mov
sub
and
outs
scas
mov
push
xor
sub
push
lock
push
imul
xchg
jl
jp
icebp
stos
fsub
(bad)
ret
sbb
mov
(bad)
pcmpeqw
push
push
adc
mov
push
lock
dec
cmp
push
or
push
mov
cdq
inc
rcr
mov
ret
cwde
mov
jbe
jle
sti
fs
fild
push
(bad)
rep
fs
iret
inc
pop
mov
(bad)
dec
(bad)
call
pushf
pop
shl
ja
inc
pop
mov
iret
(bad)
fucomip
out
(bad)
mov
fldcw
inc
fisttp
pop
sti
outs
mov
pop
mov
push
pop
shr
jae
adc
sti
iret
leave
push
adc
xchg
dec
cmp
add
dec
dec
ins
cwde
rcl
rcr
sbb
fwait
cmp
(bad)
adc
mov
fnstsw
push
cmps
in
sub
pop
pop
ins
mov
stos
iret
mov
jecxz
pop
dec
push
xor
ja
xor
retf
cdq
dec
xchg
cwde
icebp
out
jnp
dec
mov
push
rol
fs
fiadd
jle
cmp
and
sub
test
(bad)
out
imul
stos
mov
iret
mov
retf
test
or
mov
sbb
nop
mov
push
pop
mov
(bad)
jmp
mov
cmp
cmp
aam
cmp
dec
dec
jg
shr
mov
cli
fwait
stos
fsubp
sti
and
pop
cmp
popa
jp
sub
lock
mov
es
mov
call
pop
cmps
std
sub
sti
sbb
cmp
imul
sti
jge
sbb
fbstp
mov
daa
ss
lahf
xor
cmps
retf
mov
push
cmp
dec
dec
pop
adc
aas
cld
mov
out
int3
je
add
push
sub
or
in
jg
clc
outs
(bad)
addr16
pop
aas
inc
iret
inc
(bad)
mov
sti
ja
(bad)
and
mov
imul
out
push
outs
out
pop
loop
arpl
repz
or
sub
pop
rep
pop
sub
dec
jmp
push
push
jno
das
mov
push
sub
sti
jae
push
(bad)
jl
jg
push
outs
repz
icebp
(bad)
sub
mov
jmp
neg
push
sub
vpextrw
lds
ret
ret
pop
(bad)
stos
mov
(bad)
iret
jnp
inc
(bad)
lods
sbb
into
jbe
dec
push
pop
aas
outs
pop
sub
test
pop
mov
dec
mul
stos
adc
xchg
scas
mov
sub
shl
cmp
in
inc
dec
(bad)
pop
pushf
stos
daa
(bad)
fisttp
out
mov
add
pop
lahf
and
les
pop
psubb
xchg
shl
call
adc
mov
mov
loop
mov
popf
dec
mov
mov
call
adc
push
int
mov
imul
pop
retf
rol
fbld
fwait
jle
pop
add
(bad)
or
push
pop
dec
mov
cmp
setae
dec
scas
pop
jae
es
jl
pop
lods
jmp
aas
pusha
and
js
ret
jns
fisttp
jg
xchg
das
lods
jnp
jge
and
and
push
fwait
sub
jae
jmp
sti
imul
sbb
cmps
or
add
pop
inc
stos
mov
fwait
pop
fisttp
xor
mov
push
xchg
out
mov
(bad)
iret
das
and
cmp
add
and
outs
in
cmp
add
xchg
pop
call
mov
pop
je
fistp
into
lahf
mov
ret
inc
ret
pop
jecxz
sbb
push
test
jl
rcr
adc
dec
(bad)
adc
aam
jg
or
arpl
repz
(bad)
data16
mov
mov
sbb
jae
lahf
mov
mov
ins
ins
(bad)
cdq
or
(bad)
pop
dec
cmp
fld
adc
ss
mov
mov
repnz
mov
dec
outs
sbb
push
ds
dec
cmp
push
ja
and
add
jmp
sti
push
fistp
inc
ja
das
in
mov
ja
jmp
in
(bad)
sar
mov
mov
mov
gs
or
push
cld
pushf
jmp
and
and
je
jecxz
xchg
xor
and
outs
mov
aaa
or
sub
push
pop
mov
pop
mov
sub
enter
mov
aaa
loop
cmp
cmp
stos
dec
dec
jg
pop
popa
imul
jno
push
xchg
mov
fucomi
fwait
out
outs
or
outs
pop
imul
add
cld
cmps
ret
sub
mov
fwait
test
fneni(8087
add
cmp
pop
jo
cmp
xchg
outs
fsubr
mov
jmp
out
mov
or
xchg
pop
xchg
fdivr
mov
fbld
call
loop
lahf
retf
mov
dec
inc
outs
sub
push
ss
cmp
iret
mov
push
ja
adc
cmps
data16
pop
scas
xor
add
mov
xchg
call
stos
bound
fild
out
imul
mov
fcmovne
scas
fcmovnbe
aam
ror
xchg
lahf
push
(bad)
das
movs
jnp
jnp
push
mov
das
ficom
mov
mov
inc
outs
dec
xor
ss
or
mov
mov
mov
retf
mov
inc
nop
jmp
jmp
jb
mov
bound
mov
add
rol
lahf
mov
out
pop
add
mov
stos
iret
mov
add
mov
dec
outs
mov
jp
fcmovnu
jle
push
push
imul
ret
inc
dec
mov
fisubr
and
sti
mov
jbe
sub
out
das
ret
jp
mov
inc
mov
add
fisub
mov
outs
(bad)
adc
xchg
xor
xchg
push
dec
(bad)
stos
jb
es
and
out
pusha
xchg
jmp
cmps
outs
(bad)
adc
dec
push
jle
push
push
imul
xor
(bad)
fidivr
adc
jmp
inc
shr
test
dec
es
sub
pop
push
(bad)
out
add
bound
(bad)
jb
jo
jg
and
call
add
mov
xchg
shl
inc
xchg
jb
stos
add
jmp
fisubr
or
push
jle
inc
xchg
pop
xchg
dec
jb
jmp
(bad)
fcmovnu
add
and
inc
sub
sbb
dec
iret
jle
imul
add
loop
push
fild
cmp
xchg
xlat
adc
mov
xor
add
cmp
fild
push
ficomp
xchg
jbe
or
jnp
outs
imul
mov
push
mov
(bad)
mov
mov
or
sbb
push
(bad)
(bad)
aas
out
fldcw
push
out
(bad)
or
lahf
out
push
fistp
jmp
in
test
dec
iret
jle
dec
xor
iret
sbb
pop
ret
push
(bad)
or
jg
lock
mov
push
shr
fs
sti
ret
fwait
push
ficom
add
jg
nop
sbb
push
xchg
out
push
cs
stos
es
mov
out
mov
retf
repnz
mov
push
and
dec
(bad)
stos
xchg
aas
adc
pop
jmp
mov
xor
cmp
dec
sbb
xor
lock
fistp
das
xchg
push
adc
bound
aas
pop
iret
stos
fistp
(bad)
jmp
mov
es
fbstp
add
jb
bound
push
add
(bad)
ror
scas
push
mov
mov
jmp
or
and
push
inc
retf
aaa
bound
push
es
(bad)
mov
mov
xor
push
outs
inc
movs
fnstsw
jnp
dec
das
xor
scas
or
mov
mov
pop
or
int
fild
cmp
ins
and
fbstp
push
data16
sub
pop
inc
outs
mov
pop
fwait
jmp
div
not
bound
(bad)
retf
or
push
mov
xchg
xchg
lock
sub
div
inc
sbb
fcmovnu
add
jo
inc
daa
loop
lahf
dec
rcr
pause
ds
xor
scas
jmp
cmps
ret
push
and
ficom
jbe
inc
push
xor
or
mov
imul
dec
ror
push
je
pushw
pop
pop
out
aam
(bad)
nop
xchg
adc
(bad)
ret
mov
or
xor
push
inc
retw
stos
scas
in
das
ret
jp
push
cs
out
fwait
xchg
mov
add
and
mov
loop
(bad)
mov
repz
imul
(bad)
inc
adc
adc
imul
add
stos
cmp
iret
pop
(bad)
inc
mov
out
mov
sub
push
(bad)
sti
sub
sub
sbb
shr
jb
jnp
push
mov
cli
sahf
retf
jmp
push
(bad)
mov
sbb
outs
repnz
es
ss
mov
out
aas
adc
jne
sub
add
jg
xor
or
pop
mov
push
(bad)
div
(bad)
(bad)
aas
jge
(bad)
pop
je
fs
pop
(bad)
pop
shl
es
ret
cs
ja
xchg
push
aas
loopne
es
xor
out
jg
adc
sti
outs
xor
jne
adc
in
sbb
call
fdivr
push
inc
mov
push
out
fistp
sub
jbe
sbb
xor
pushf
(bad)
hlt
xchg
out
xchg
repnz
sbb
jg
dec
scas
push
add
push
fwait
jae
dec
fild
xchg
dec
jle
stos
mov
dec
into
jo
rol
xor
mov
mov
lahf
pop
sbb
(bad)
(bad)
aas
jp
add
mov
imul
mov
mov
sub
pop
mov
push
jnp
mov
pop
iret
fwait
mov
add
jbe
(bad)
scas
and
sub
push
mov
dec
lock
(bad)
das
pop
sbb
fisttp
pop
xor
ret
ret
pop
and
lahf
push
xchg
inc
loop
cmp
pop
loopne
(bad)
shl
mov
movntps
jmp
mov
jne
pop
sti
xchg
dec
test
dec
das
pop
fild
mov
sbb
add
push
add
mov
loopne
aas
push
ds
out
inc
fwait
ja
js
into
jo
xchg
je
imul
sub
or
and
cmps
(bad)
out
add
je
and
add
add
and
inc
sub
repnz
es
pop
daa
mov
out
sbb
fwait
mov
push
(bad)
adc
cli
pusha
inc
scas
jecxz
sub
sbb
lock
fwait
(bad)
(bad)
aas
out
es
bswap
jmp
scas
inc
push
pop
cs
sbb
btr
stos
shl
das
iret
adc
adc
ficomp
jg
ficom
iret
les
dec
in
xchg
iret
ss
dec
or
jne
mov
lahf
out
push
fistp
mov
mov
cmp
mov
pop
push
mov
push
(bad)
pop
stos
add
out
push
fistp
or
jg
(bad)
jmp
dec
fwait
jle
ror
fs
stos
add
out
push
jae
sub
sbb
dec
(bad)
stos
cmps
push
into
psubd
aas
cmps
add
mov
sub
pop
cs
sbb
divps
dec
or
rep
fild
and
retf
or
add
dec
jg
cs
jg
xchg
pop
aas
loopne
mov
inc
fisub
retf
add
add
outs
sbb
daa
mov
retf
(bad)
xchg
(bad)
pop
mov
inc
mov
sti
pusha
(bad)
mov
repnz
mov
fmul
adc
iret
fwait
pop
sbb
xchg
fidiv
mov
add
and
cmp
mov
cmp
(bad)
jecxz
stos
es
scas
je
jb
sub
jbe
push
lahf
push
outs
cmp
cs
jle
(bad)
imul
pop
(bad)
pop
je
fs
jmp
xor
push
pop
dec
sbb
xor
shufps
movs
push
aaa
adc
mov
dec
dec
sub
inc
scas
lahf
mov
or
test
mov
inc
out
fist
aaa
retf
pop
push
ficom
cmps
les
outs
(bad)
shl
jp
dec
retf
sti
shr
dec
(bad)
sbb
jae
ficom
inc
pop
outs
outs
sbb
dec
imul
inc
mov
jb
retf
cli
jbe
jmp
or
repnz
mov
jecxz
mov
into
push
pop
push
mov
jae
mov
xor
out
(bad)
pop
add
jp
mov
pop
jnp
das
pop
fisttp
xor
retf
jmp
pop
push
mov
adc
setg
cs
out
mov
jb
outs
sti
sahf
retf
mov
jg
or
sub
xchg
stos
or
aas
dec
mov
imul
dec
cmps
add
fcmovne
inc
cmp
jnp
sbb
stos
das
xlat
jb
iret
(bad)
fisubr
fs
retf
aaa
jbe
arpl
sti
out
(bad)
fld
ja
sub
mov
shr
fs
outs
add
sub
mov
inc
xchg
icebp
jp
leave
or
je
jnp
adc
adc
push
ficom
mov
out
dec
mov
jp
mov
push
mov
mov
inc
outs
jnp
retf
outs
aam
mov
sub
retf
rcr
ror
inc
outs
jecxz
retf
xlat
aam
jg
neg
sti
(bad)
arpl
ror
mov
aas
add
call
jae
mov
or
mov
shl
jp
sti
(bad)
(bad)
aas
out
(bad)
je
fwait
jmp
xchg
fisub
arpl
inc
cmps
dec
jg
jmp
outs
adc
(bad)
dec
mov
pop
add
sbb
pop
add
sub
mov
mov
cli
je
push
add
jg
pusha
and
mov
retf
scas
sbb
push
inc
fisubr
pop
pop
pusha
(bad)
mov
inc
ret
adc
xchg
push
iret
outs
xchg
push
out
xor
mov
sbb
jno
xchg
mov
mov
addr16
adc
pop
push
imul
mov
jnp
adc
xor
sti
ret
sbb
sti
xchg
jle
dec
or
cld
add
fwait
and
jo
sbb
jae
sub
pop
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
packssdw
jnp
or
dec
sub
scas
retf
mov
sti
out
mov
fwait
iret
stos
fistp
packssdw
jnp
or
dec
sub
scas
retf
mov
sti
out
mov
fwait
iret
stos
fistp
packssdw
jnp
or
dec
sub
scas
retf
mov
sti
out
mov
fwait
iret
stos
fistp
packssdw
jnp
or
dec
sub
scas
retf
mov
sti
out
mov
lahf
stos
scas
fstp
push
sbb
(bad)
pop
movd
aas
push
mov
pushf
retf
jmp
(bad)
sbb
mov
call
push
sbb
(bad)
pop
dec
das
pop
cmp
les
int3
movs
aam
cld
xchg
in
ins
add
or
xor
sbb
fs
cmp
and
mov
mov
lahf
aad
test
lods
cmp
and
sub
xor
pop
xor
pop
or
adc
call
lods
fdivr
in
cwde
cld
push
sub
cmp
dec
cmp
sbb
clc
pushf
enter
test
sti
popf
retf
scas
fild
or
sbb
sub
cmp
(bad)
pop
dec
das
pop
aas
stos
iret
mov
jmp
scas
fstp
or
sbb
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
mov
mov
dec
outs
sbb
imul
pop
dec
imul
stos
mov
mov
retf
scas
fstp
or
sbb
(bad)
pop
comiss
stos
iret
mov
(bad)
jmp
sti
lahf
(bad)
scas
fstp
or
jg
dec
jnp
comiss
stos
iret
call
jmp
sti
lahf
(bad)
jmp
mov
or
cmp
aas
pop
dec
das
pop
aas
out
mov
(bad)
jmp
mov
mov
cwde
sub
jg
pushf
aas
pop
dec
ror
jnp
iret
inc
dec
iret
out
fwait
add
sti
lahf
xor
lahf
mov
or
jg
dec
jnp
mov
pop
aas
cmp
or
pop
jmp
mov
dec
outs
sbb
dec
das
pop
aas
stos
iret
mov
ins
scas
(bad)
sti
pusha
pop
jmp
mov
or
jg
(bad)
pop
dec
mov
mov
(bad)
jmp
mov
sti
sub
pop
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
ins
scas
(bad)
sti
pusha
retf
scas
fstp
or
jg
psubsb
das
movs
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
cmp
mov
or
in
das
dec
jnp
dec
das
pop
aas
stos
iret
mov
jmp
scas
fild
dec
cmp
outs
sbb
psubsb
das
movs
aas
stos
iret
mov
(bad)
jmp
mov
mov
hlt
outs
sbb
das
(bad)
loopne
das
enter
inc
fbstp
(bad)
js
sti
lahf
xor
fstp
or
test
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
pop
jg
lock
comiss
stos
pop
(bad)
fisttp
(bad)
sti
pusha
retf
cmp
mov
or
jg
(bad)
mov
das
pop
shr
fwait
add
(bad)
sti
or
jmp
inc
sub
pop
or
jg
(bad)
pop
dec
imul
mov
ins
scas
(bad)
sti
pusha
retf
scas
fstp
cwde
sub
xchg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
(bad)
fbstp
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
psubsb
das
movs
aas
stos
iret
sub
scas
(bad)
sti
pusha
pop
jmp
mov
or
jg
(bad)
pop
dec
das
pop
aas
stos
pop
call
jmp
sti
lahf
retf
scas
lahf
mov
or
jnp
dec
mov
mov
(bad)
jmp
mov
sub
or
mov
imul
pop
mov
pop
lods
out
mov
(bad)
jmp
sti
fcmovne
push
fstp
hlt
outs
sbb
comiss
mov
fwait
add
(bad)
sti
lahf
(bad)
scas
and
sub
pop
dec
outs
sbb
(bad)
pop
dec
mov
mov
(bad)
jmp
sti
lahf
retf
jmp
mov
hlt
cld
pop
jg
lock
lods
out
iret
mov
(bad)
jmp
sti
or
scas
fild
dec
cmp
outs
sbb
das
(bad)
loopne
das
pop
lods
out
iret
mov
call
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
cmp
mov
or
in
das
(bad)
loopne
imul
pop
(bad)
fisttp
pop
(bad)
scas
fild
or
pop
hlt
cld
pop
jg
lock
aas
stos
iret
sub
scas
(bad)
sti
pusha
retf
scas
dec
sti
sub
pop
or
pop
jg
lock
dec
mov
sub
jmp
push
sub
dec
cmp
imul
mov
das
pop
shr
fs
scas
(bad)
sti
pusha
pop
jmp
mov
or
test
fsubr
aas
push
iret
sub
js
sti
lahf
xor
fstp
hlt
outs
mov
imul
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
mov
sti
sub
pop
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
pushf
aas
pop
dec
rcr
stos
iret
mov
(bad)
jmp
mov
mov
or
jg
(bad)
pop
dec
das
enter
inc
fisttp
(bad)
sti
lahf
pop
jmp
mov
or
jg
dec
jnp
mov
pop
aas
stos
iret
mov
(bad)
js
sti
lahf
xor
fld
dec
cmp
imul
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
push
mov
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
mov
retf
cmp
mov
or
jg
dec
jnp
mov
pop
aas
stos
xor
call
sti
lahf
retf
scas
fstp
or
jnp
dec
das
enter
inc
fisttp
(bad)
sti
lahf
retf
scas
dec
sti
sub
pop
or
jg
dec
jnp
mov
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jnp
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
hlt
outs
mov
imul
pop
dec
mov
sub
adc
push
inc
mov
outs
sbb
pushf
aas
pop
dec
shl
mov
add
mov
mov
or
jnp
mov
enter
inc
fistp
stos
fwait
call
push
inc
mov
cld
pop
jg
lock
dec
das
pop
aas
stos
iret
mov
jmp
scas
fild
or
pop
hlt
cld
pop
jg
lock
lods
out
iret
mov
(bad)
jmp
push
mov
hlt
outs
mov
imul
loopne
mov
inc
and
stos
fwait
call
mov
mov
or
in
das
(bad)
loopne
imul
xor
(bad)
jmp
push
mov
or
test
pop
(bad)
fisttp
(bad)
sti
or
scas
fild
or
pop
hlt
nop
in
xchg
lock
comiss
cmp
(bad)
jmp
sti
or
scas
fild
dec
cmp
outs
pop
jg
pushf
aas
pop
dec
rcr
stos
iret
mov
ins
scas
(bad)
sti
pusha
pop
jmp
mov
or
test
dec
das
pop
lods
out
iret
mov
ins
scas
(bad)
sti
pusha
retf
cmp
sti
sub
sbb
(bad)
mov
das
pop
rcl
je
fwait
call
sti
lahf
xor
fild
dec
cmp
outs
sbb
dec
jnp
mov
pop
aas
cmp
fwait
(bad)
jmp
sti
fcmovne
scas
dec
sti
sub
pop
or
jg
(bad)
pop
dec
das
pop
aas
stos
pop
(bad)
fisttp
pop
(bad)
scas
fild
dec
cmp
outs
sbb
dec
jnp
mov
enter
inc
fisttp
jo
lahf
pop
jmp
mov
or
test
dec
das
pop
aas
stos
pop
(bad)
fisttp
(bad)
sti
pusha
retf
scas
dec
sti
sub
pop
or
jg
(bad)
pop
dec
mov
mov
mov
retf
scas
fld
dec
cmp
xchg
pushf
aas
pop
dec
ror
jnp
iret
inc
dec
iret
out
fwait
add
sti
lahf
xor
lahf
mov
or
in
das
(bad)
loopne
das
pop
aas
stos
mov
mov
retf
scas
fstp
or
jg
psubsb
das
movs
lods
out
iret
mov
(bad)
jmp
sti
lahf
retf
in
(bad)
sub
sbb
outs
in
imul
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
pop
jmp
mov
or
jnp
dec
das
pop
aas
cmp
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
lods
out
iret
mov
mov
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
sub
scas
(bad)
sti
pusha
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
add
sti
lahf
xor
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
sub
js
mov
mov
or
jg
pushf
aas
pop
dec
rcr
stos
iret
mov
(bad)
jmp
sti
lahf
retf
jmp
mov
hlt
cld
pop
jg
lock
lods
out
iret
mov
(bad)
jmp
sti
lahf
pop
jmp
mov
or
jg
(bad)
mov
das
pop
shr
fwait
ins
scas
(bad)
sti
pusha
retf
cmp
mov
dec
outs
sbb
fsubr
aas
push
pop
(bad)
fisttp
(bad)
sti
pusha
retf
scas
dec
sti
sub
mov
xchg
pushf
aas
pop
dec
ror
jnp
iret
inc
dec
iret
out
fwait
add
sti
lahf
xor
lahf
mov
or
jg
pushf
aas
pop
dec
rcr
push
iret
sub
js
sti
lahf
xor
lahf
mov
or
jg
dec
jnp
mov
enter
inc
and
sbb
lahf
retf
push
fstp
hlt
outs
sbb
das
(bad)
loopne
das
enter
inc
fisttp
(bad)
sti
or
scas
fild
fdivr
or
test
fsubr
aas
push
iret
sub
js
sti
lahf
xor
lahf
mov
or
jg
dec
jnp
mov
enter
inc
fistp
stos
fwait
call
mov
sub
dec
cmp
imul
mov
das
pop
rcl
mov
or
(bad)
scas
fild
dec
cmp
outs
sbb
(bad)
pop
fsubr
aas
push
iret
mov
(bad)
jmp
sti
or
scas
fild
fdivr
or
jnp
mov
enter
inc
fisttp
(bad)
sti
lahf
pop
jmp
mov
dec
outs
sbb
mov
pop
aas
stos
xor
(bad)
jmp
mov
mov
or
jg
(bad)
pop
fsubr
aas
push
pop
(bad)
fisttp
pop
retf
scas
fstp
dec
outs
sbb
dec
mov
mov
ins
scas
(bad)
sti
pusha
retf
scas
fstp
cwde
sub
jg
pushf
aas
pop
dec
ror
jnp
iret
inc
dec
iret
out
fwait
add
sti
lahf
xor
lahf
mov
dec
outs
sbb
dec
das
pop
aas
stos
iret
mov
add
sti
lahf
xor
lahf
mov
dec
outs
sbb
mov
enter
inc
dec
iret
out
fwait
add
(bad)
sti
lahf
retf
scas
fstp
or
in
das
(bad)
loopne
imul
iret
inc
and
pop
(bad)
scas
fild
or
pop
hlt
cld
pop
jg
lock
lods
out
iret
mov
call
add
(bad)
scas
fild
dec
cmp
outs
sbb
(bad)
mov
das
pop
sar
mov
(bad)
jmp
push
sub
dec
cmp
xchg
pushf
aas
pop
dec
rcr
out
iret
mov
(bad)
jmp
mov
sti
sub
int3
dec
outs
sbb
mov
pop
aas
stos
xor
fwait
mov
fs
scas
(bad)
sti
pusha
pop
jmp
mov
or
in
das
(bad)
loopne
imul
pop
(bad)
fisttp
pop
(bad)
scas
fild
or
pop
hlt
cld
pop
jg
lock
comiss
push
xor
fwait
mov
fs
scas
(bad)
sti
pusha
retf
scas
fstp
or
test
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
hlt
outs
sbb
pushf
aas
pop
dec
ror
jnp
iret
inc
dec
iret
out
fwait
add
sti
lahf
xor
lahf
mov
or
in
das
(bad)
loopne
imul
pop
(bad)
fisttp
(bad)
sti
pusha
xor
dec
sti
sub
int3
dec
outs
sbb
dec
mov
sub
scas
(bad)
sti
pusha
retf
scas
fstp
or
jnp
dec
das
pop
aas
stos
iret
mov
call
sti
lahf
retf
cmp
mov
or
jg
(bad)
pop
fsubr
aas
push
pop
(bad)
fisttp
pop
(bad)
scas
fild
or
pop
hlt
cld
pop
jg
lock
fsubr
aas
push
pop
(bad)
fisttp
(bad)
sti
pusha
pop
jmp
mov
or
test
pop
(bad)
fisttp
pop
(bad)
scas
fild
or
pop
hlt
cld
pop
jg
lock
shr
fwait
(bad)
jmp
sti
lahf
retf
scas
dec
sti
sub
pop
cwde
sub
jg
pushf
aas
pop
dec
ror
jnp
iret
inc
fistp
stos
fwait
call
call
sub
pop
movq
jg
or
dec
sub
scas
iret
mov
sti
out
mov
fwait
iret
scas
fistp
packssdw
jnp
or
dec
sub
scas
retf
mov
sti
out
mov
fwait
iret
stos
fistp
packssdw
jnp
or
dec
sub
scas
retf
mov
sti
out
mov
fwait
iret
stos
fistp
packssdw
jnp
or
dec
sub
stos
retf
mov
sti
out
mov
fwait
iret
stos
fistp
packssdw
jnp
or
dec
sub
scas
xchg
mov
mov
mov
(bad)
in
scas
out
mov
outs
dec
sub
jp
sar
dec
sbb
loop
(bad)
xchg
loopne
ficomp
mov
dec
push
cmp
or
sbb
push
cmp
dec
retf
mov
popf
idiv
and
jmp
pop
xor
push
jae
dec
push
outs
stos
mov
test
cdq
call
icebp
xchg
scas
jmp
aas
pop
sub
jae
inc
pop
sbb
pop
ds
pop
fdivr
mov
mov
inc
dec
pop
sbb
push
cmp
jnp
cld
js
dec
repnz
mov
test
fcom
pop
ror
jg
je
imul
and
aad
mov
xchg
int
scas
xchg
in
pop
or
pop
add
pop
jge
addr16
lods
iret
(bad)
mov
nop
fxch
xchg
lahf
clc
xor
ds
es
sbb
jno
pop
and
cwde
fidiv
mov
int
fwait
dec
cmp
outs
cmp
or
jbe
inc
sbb
jmp
test
mov
mov
pop
andps
dec
pop
sbb
add
ins
or
stos
jmp
loopne
pushf
cli
lea
enter
sub
outs
or
inc
sbb
aas
ja
pop
fldpi
fisubr
fldz
(bad)
in
sahf
fistp
jnp
push
imul
adc
pop
ret
mov
aam
mov
mov
push
ins
pop
js
pop
or
add
add
ret
mov
mov
xchg
cld
mov
dec
add
push
js
packsswb
adc
cmp
scas
iret
mov
mov
mov
out
imul
cs
push
push
jb
add
pop
or
fs
(bad)
mov
fisubr
lods
into
test
dec
jge
cmp
jae
sub
pop
jns
fs
int3
scas
enter
retf
out
(bad)
mov
or
outs
inc
sbb
aas
outs
pop
pop
retf
mov
sbb
jmp
cdq
(bad)
sar
pop
or
cmp
adc
jg
(bad)
sti
call
jmp
fild
cmp
cmp
pop
sbb
or
jbe
inc
pop
jg
xchg
lods
in
out
mov
hlt
nop
test
pop
nop
js
pop
inc
push
jl
imul
xor
jmp
mov
mov
mov
xor
inc
inc
push
jl
imul
xor
repz
lahf
into
scas
stos
mov
mov
cmp
cmp
fnsave
sub
adc
dec
sbb
xchg
mov
cli
lea
out
test
sbb
packsswb
inc
outs
pop
push
dec
jmp
cli
(bad)
scas
test
(bad)
call
jg
sub
sbb
add
cmp
je
push
dec
jmp
aam
mov
jmp
sti
cmps
call
sbb
or
dec
and
inc
xor
mov
dec
out
fwait
lea
push
cmp
or
sub
pop
and
mov
stos
shr
nop
scas
jmp
jge
jg
imul
pop
das
push
xchg
nop
test
mov
test
dec
jge
sbb
dec
jnp
ins
cmp
jg
(bad)
in
or
fadd
lahf
iret
sti
scas
mov
cs
punpcklwd
and
push
imul
fimul
jmp
mov
retf
scas
mov
mov
sbb
fdivr
inc
sub
mov
mov
mov
xchg
lahf
mov
dec
fs
push
out
jp
push
arpl
inc
jmp
(bad)
xchg
mov
mov
(bad)
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
dec
das
pop
aas
sub
pop
or
jg
(bad)
sti
lahf
retf
scas
fstp
mov
fwait
jmp
jnp
dec
das
pop
aas
sub
pop
or
jg
(bad)
sti
lahf
retf
scas
fstp
mov
fwait
jmp
jnp
dec
das
pop
aas
sub
pop
or
jg
(bad)
sti
lahf
retf
scas
fstp
mov
fwait
jmp
jnp
dec
das
pop
aas
sub
pop
or
jg
(bad)
sti
lahf
retf
scas
fstp
mov
fwait
jmp
jnp
dec
das
pop
aas
sub
pop
or
jg
(bad)
sti
lahf
retf
scas
fstp
mov
fwait
jmp
jnp
dec
das
pop
aas
sub
pop
or
jg
(bad)
sti
lahf
retf
scas
fstp
mov
fwait
jmp
jnp
dec
das
pop
aas
sub
pop
or
jg
(bad)
sti
lahf
retf
scas
fstp
mov
fwait
jmp
jnp
dec
das
pop
aas
sub
pop
or
jg
(bad)
sti
lahf
retf
scas
fstp
mov
fwait
jmp
jnp
dec
das
pop
aas
sub
pop
or
jg
(bad)
sti
lahf
retf
scas
fstp
mov
call
cs
sub
pop
or
jle
mov
sahf
retf
mov
mov
call
cs
sub
pop
or
jle
mov
sahf
retf
mov
mov
call
cs
sub
pop
or
jle
mov
sahf
retf
mov
mov
call
cs
sub
pop
or
jle
mov
sahf
retf
mov
mov
call
cs
sub
pop
or
jle
mov
sahf
retf
mov
mov
call
cs
sub
pop
or
jle
mov
sahf
retf
mov
mov
call
cs
sub
pop
or
jle
mov
sahf
retf
mov
mov
call
cs
sub
pop
or
jle
mov
sahf
retf
mov
mov
call
cs
sub
pop
or
jle
mov
popf
leave
lods
fnstcw
mov
cdq
std
imul
cmp
ins
sbb
(bad)
stc
popf
leave
lods
fnstcw
mov
cdq
std
imul
cmp
ins
sbb
(bad)
stc
popf
leave
lods
fnstcw
mov
cdq
std
imul
cmp
ins
sbb
(bad)
stc
popf
leave
lods
fnstcw
mov
cdq
std
imul
cmp
ins
sbb
(bad)
stc
popf
leave
lods
fnstcw
mov
cdq
std
imul
cmp
ins
sbb
(bad)
stc
popf
leave
lods
fnstcw
mov
cdq
std
imul
cmp
ins
sbb
(bad)
stc
popf
leave
lods
fnstcw
mov
cdq
std
imul
cmp
sbb
clc
pushf
enter
test
mov
cld
push
sub
cmp
dec
cmp
sbb
clc
pushf
enter
test
mov
cld
push
sub
cmp
dec
cmp
sbb
clc
pushf
enter
test
mov
cld
push
sub
cmp
dec
cmp
sbb
clc
pushf
enter
test
mov
cld
push
sub
cmp
dec
cmp
sbb
clc
pushf
enter
test
mov
cld
push
sub
cmp
dec
cmp
sbb
clc
pushf
enter
test
mov
cld
push
sub
cmp
dec
cmp
sbb
clc
pushf
enter
test
mov
cld
push
sub
cmp
andnps
or
pop
mov
out
test
pop
adc
enter
das
sub
mov
push
scas
mov
movs
sar
ins
xchg
(bad)
mov
or
ja
(bad)
dec
js
sbb
xchg
mov
mov
(bad)
mov
fistp
aam
or
jle
sbb
mov
or
jl
clc
ret
jnp
push
call
sbb
sahf
div
cmp
jg
jb
add
inc
pop
adc
ss
test
es
mov
out
push
xchg
jle
pop
stos
pand
popa
dec
pop
add
fcom
and
(bad)
fs
xchg
inc
cmc
cmps
pop
stos
cmp
and
mov
add
js
mov
call
cdq
fwait
dec
(bad)
adc
or
add
mov
scas
mov
gs
jl
adc
push
out
cmc
cmp
cmp
sbb
xchg
repz
inc
lea
mov
inc
fcomp
idiv
dec
out
cdq
addr16
dec
dec
jmp
les
dec
mov
or
outs
sub
imul
lea
ret
jmp
hlt
sub
fild
cmp
jo
jle
add
pop
xor
test
cmps
in
stc
mov
scas
cmps
(bad)
dec
cs
ds
jle
sbb
jnp
sub
dec
retf
mov
(bad)
xchg
fwait
call
xlat
mov
pop
xor
pop
jge
gs
inc
ds
stos
scas
xlat
cmps
repnz
cdq
xchg
(bad)
popf
jmp
scas
mov
sub
ja
cmp
das
sub
ret
mov
loope
jmp
xchg
hlt
mov
mov
dec
cmp
push
or
imul
dec
dec
and
mov
fwait
pop
fcmovne
inc
cmp
or
adc
adc
das
aaa
inc
fisub
cmc
xchg
pushf
sar
repnz
and
jo
jg
cmp
pop
xor
mov
lock
into
mov
pop
cmp
jbe
gs
ud2
dec
sub
aas
shl
xchg
xchg
(bad)
std
mov
cmp
sub
sbb
pop
data16
adc
fwait
mov
xchg
jmp
sti
ror
mov
imul
sub
inc
xor
jmp
xchg
mov
jmp
enter
pop
or
jg
and
jnp
or
push
mov
ficom
test
popf
movs
mov
push
js
inc
cmp
and
pusha
sbb
xor
push
les
(bad)
xchg
jmp
xchg
mov
inc
jne
sub
pop
add
pop
jle
inc
ss
ret
mov
mov
mov
ficom
cmp
dec
push
arpl
xor
pop
and
xchg
leave
mov
mov
call
and
or
pop
push
sbb
imul
cs
lds
hlt
xchg
cwde
out
fistp
or
fs
adc
jge
aaa
bound
push
fldcw
cli
sahf
test
fcomi
retf
jmp
jmp
or
gs
jne
add
das
outs
aas
stos
repnz
call
mov
cmp
jle
imul
cmp
cmp
les
loop
sub
mov
bound
je
push
das
pop
jnp
pop
xor
into
lods
retf
mov
lahf
call
jmp
fcmovnbe
dec
cmp
jg
or
sbb
imul
fmul
fwait
mov
retf
fld
jg
outs
sbb
popa
push
pop
ds
ds
fistp
cmc
call
mov
dec
cmp
or
pop
dec
das
pop
aaa
stos
iret
mov
mov
mov
lahf
(bad)
pop
maxps
or
dec
data16
pop
pop
dec
mov
repnz
leave
(bad)
xchg
cld
scas
fnstsw
jg
add
add
inc
outs
sub
aas
(bad)
mov
fwait
xchg
lahf
mov
mov
xor
jle
dec
push
ins
cmp
jnp
mov
call
retf
scas
aad
scas
shl
pop
sub
jp
and
imul
dec
das
pop
aas
stos
iret
mov
(bad)
sti
sahf
(bad)
stos
fucom
lahf
inc
outs
dec
sub
inc
outs
or
or
dec
jnp
fdivr
mov
in
stos
(bad)
dec
sub
cmp
inc
sbb
and
dec
retf
(bad)
mov
xchg
cmp
jmp
push
sub
or
adc
jnp
daa
and
adc
loop
fwait
fwait
mov
sti
fisub
dec
addr16
sbb
push
add
pop
movntps
test
mov
mov
(bad)
lahf
shr
and
dec
sub
imul
push
fs
jae
mov
(bad)
mov
mov
in
pusha
or
or
adc
js
push
pop
pop
(bad)
stos
mov
(bad)
fisttp
mov
jg
outs
jne
sbb
jp
das
ss
enter
(bad)
out
call
out
shl
outs
push
movhps
dec
push
xor
fucomip
mov
lahf
retf
sar
or
jle
adc
and
push
les
fwait
xchg
cdq
les
fiadd
add
pop
sub
jnp
jl
js
ins
(bad)
mov
cli
xchg
lahf
fidivr
call
ja
pop
popa
or
inc
cmp
(bad)
out
iret
test
cdq
jmp
mov
or
sbb
push
push
sub
(bad)
fidivr
mov
scas
mov
xor
sbb
pusha
movd
push
aas
into
cmps
ret
call
xchg
lahf
stos
fistp
cmp
sbb
or
dec
dec
jnp
iret
out
fisubr
mov
mov
sbb
sub
push
jns
inc
ss
ret
jmp
iret
out
dec
stc
mov
(bad)
inc
cmp
bound
or
pusha
jnp
ds
or
mov
cli
xchg
cwde
fcomp
(bad)
add
dec
xor
sbb
popa
sbb
inc
xor
imul
mov
xchg
test
sahf
cli
mov
or
outs
sbb
push
imul
and
pop
iret
mov
dec
mov
jge
pop
outs
dec
sbb
dec
jns
aas
and
push
fsubr
in
shr
jmp
lahf
scas
(bad)
sahf
(bad)
sub
sbb
dec
ins
sub
pop
imul
mov
iret
repnz
(bad)
lahf
mov
sbb
jg
sbb
pop
imul
fucomip
iret
in
int
jmp
jmp
fdivr
sub
or
or
pop
aas
and
dec
call
iret
cdq
(bad)
mov
cmps
(bad)
mov
pop
or
pop
sub
aas
nop
cs
cmp
mov
dec
xchg
(bad)
push
imul
and
jnp
imul
(bad)
nop
cdq
loope
ror
push
sbb
dec
jle
imul
ins
aas
dec
push
mov
out
mov
lock
int
mov
xor
imul
das
cmp
stos
iret
lods
aam
not
stos
popf
fstp
dec
cs
sbb
jno
pop
ss
test
(bad)
stos
out
repnz
jmp
mov
mov
bound
pop
add
pop
sbb
test
fwait
xchg
cdq
jmp
inc
dec
push
pop
gs
outs
sbb
jge
pop
movd
fisttp
(bad)
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
call
cmp
push
jp
or
dec
sub
stos
retf
mov
fwait
mov
retf
retf
scas
fstp
mov
sbb
mov
pop
aas
cmp
jne
ins
aaa
pop
ins
xor
and
jne
daa
leave
lods
sbb
mov
pop
div
mov
xor
jge
or
lahf
jle
aaa
or
mov
hlt
ret
retf
(bad)
mov
pop
cmp
sub
js
lahf
jbe
cmp
mov
neg
xchg
(bad)
jg
repnz
mov
mov
and
(bad)
jmp
or
pop
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fist
sub
jg
pcmpeqd
mov
fisttp
jo
into
mov
xchg
mov
xchg
nop
xchg
sub
dec
xchg
icebp
outs
jp
fisttp
aam
iret
aas
push
adc
ror
fisttp
lock
fnstenv
rcr
xor
or
adc
cmp
mov
loop
shl
or
xor
or
retf
sbb
xchg
pop
dec
dec
sub
xadd
jmp
add
fs
mov
sbb
or
sub
mov
xor
nop
fidivr
sbb
push
push
out
jns
imul
imul
popf
sbb
outs
in
inc
fisttp
shl
dec
les
xchg
lock
dec
das
pop
rcl
je
fwait
(bad)
jmp
sti
lahf
retf
scas
fstp
hlt
adc
push
sub
iret
mov
outs
retf
jecxz
lahf
retf
mov
mov
jg
and
jle
das
pop
xor
iret
mov
mov
lds
mov
cmp
outs
and
(bad)
sbb
stos
int
pop
out
fwait
mov
(bad)
stc
xor
scas
fild
jns
sbb
add
dec
aas
xor
mov
fisttp
jmp
mov
push
cmp
scas
das
push
retf
lods
std
mov
(bad)
jmp
cmc
pop
test
fld
or
call
jns
pop
xor
movs
inc
fisttp
pop
fcomi
cmps
scas
pop
mov
cmp
sub
outs
sbb
(bad)
push
inc
scas
xor
aam
mov
(bad)
jmp
shr
add
adc
xor
pop
aas
test
out
fwait
std
jecxz
xchg
sti
lods
xchg
and
sub
xor
adc
dec
jnp
push
das
das
dec
frndint
mov
sahf
mov
xchg
cli
mov
dec
push
iret
sub
ja
push
sti
pop
dec
or
pop
(bad)
iret
mov
(bad)
imul
cs
or
jg
add
ins
sbb
xchg
xchg
out
fstp
mov
(bad)
stos
scas
(bad)
or
jg
unpcklps
inc
pop
aas
or
fisttp
rcr
cmp
or
jg
inc
jnp
and
aas
in
mov
jmp
sub
scas
fstp
or
jg
sbb
jbe
pop
ss
stos
iret
sub
out
out
fwait
inc
mov
bound
jle
cmp
jnp
and
repz
mov
mov
mov
xchg
xchg
pushf
or
xor
call
jb
cmp
xchg
div
mov
cmc
rcl
jbe
jno
pop
dec
adc
cmp
cld
push
mov
mov
(bad)
int
stc
xchg
loop
push
xchg
add
push
es
push
lock
and
sbb
jmp
sti
lahf
mov
fild
sub
(bad)
in
or
cmp
cmp
pop
sub
test
out
fwait
(bad)
jmp
sti
lahf
jecxz
fstp
sub
pop
dec
das
pop
aas
imul
jge
xor
call
mov
push
dec
sub
cmp
or
outs
test
mov
mov
pusha
imul
dec
imul
jle
repnz
ret
pusha
mov
adc
inc
mov
bound
jb
sti
jmp
adc
add
loop
repnz
jnp
adc
inc
xor
xchg
lock
popa
add
xchg
repz
ret
mov
adc
push
mov
xor
pushw
jb
inc
ss
test
xor
data16
out
xchg
lock
shl
xor
outs
addr16
and
mov
jne
je
out
out
in
mov
push
pusha
and
or
pop
in
pop
cmp
imul
mov
iret
cld
push
fwait
out
mov
arpl
and
lock
jge
ins
or
fsubr
cld
cwde
in
mov
add
push
and
jae
arpl
xchg
jecxz
in
aad
add
xchg
loope
adc
arpl
push
retf
adc
loopne
adc
xchg
jecxz
loope
sar
aad
lds
xchg
in
adc
push
retf
adc
push
adc
stc
cli
sahf
retf
add
into
dec
pusha
mov
call
sub
add
sbb
(bad)
call
add
mov
sahf
cli
outs
jns
sbb
sete
test
push
repz
ret
cmps
shl
and
div
pop
push
inc
es
and
push
add
jbe
jg
mov
mov
cwde
cld
test
mov
call
fdivr
in
test
xor
jmp
fnstsw
in
repnz
cmp
outs
sbb
(bad)
pop
dec
das
pop
aas
stos
lahf
stos
mov
inc
stos
push
stos
cmps
sar
movs
shl
lahf
jmp
fstp
sub
jge
imul
cmp
dec
sub
cli
mov
repnz
call
push
push
inc
bound
popa
jne
or
xor
mov
(bad)
mov
icebp
test
leave
scas
test
or
adc
cmp
sub
adc
jge
and
rep
(bad)
mov
shl
cld
add
and
inc
and
add
mov
or
push
sub
jnp
mov
retf
mov
inc
xor
add
adc
add
aaa
ds
xor
xchg
lock
hlt
mov
mov
sub
jg
outs
jnp
imul
ds
cs
dec
mov
mov
sub
jge
ins
jns
imul
cdq
std
mov
stc
popf
jmp
lods
cmp
dec
sbb
ins
js
push
sub
loope
loop
aam
in
clc
pushf
call
lods
cmp
imul
push
aaa
inc
daa
mov
jecxz
shl
jecxz
shl
pop
or
jp
jb
bound
push
ss
es
fst
std
xchg
loop
shl
pop
adc
js
sbb
bound
push
ss
es
xlat
xchg
xchg
div
xchg
std
xchg
loop
(bad)
mov
mov
cmp
imul
adc
push
xor
mov
into
stos
cld
cdq
out
cmps
cmc
xchg
in
aam
lds
jl
jl
jne
add
and
xchg
loopne
cmc
xchg
in
jmp
push
inc
or
dec
sub
jns
mov
in
leave
lods
fnstcw
or
and
pop
cmp
mov
in
enter
in
mov
call
fs
dec
sub
bound
jae
sbb
fadd
cmps
shl
add
jo
inc
aas
push
inc
daa
push
aaa
bound
jae
and
mul
cmps
shl
add
jbe
inc
xor
es
ss
jno
and
mov
shl
xchg
add
and
inc
and
xor
add
xchg
xchg
repz
ret
mov
(bad)
mov
not
daa
inc
aaa
push
inc
and
xor
push
repnz
ret
(bad)
mov
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
jecxz
fstp
cdq
loopne
icebp
in
hlt
nop
les
xor
add
pop
push
adc
sbb
inc
and
shl
xor
movs
push
xor
jo
add
and
shl
clc
hlt
(bad)
fstp
sub
jg
outs
jnp
imul
aas
dec
das
mov
stos
into
fwait
dec
mov
mov
sub
jle
outs
jnp
push
pop
ds
cs
dec
mov
mov
sub
jge
outs
jns
imul
cdq
std
mov
stc
cdq
jmp
lods
cmp
dec
sbb
ins
jns
imul
cwde
cld
mov
clc
pushf
call
lods
cmp
sbb
js
push
sub
fsubr
in
clc
pushf
call
lods
cmp
dec
sbb
jns
push
sub
cwde
cld
mov
clc
cdq
call
lods
cmp
imul
aas
dec
ss
imul
fldcw
in
cli
xlat
test
in
je
sub
or
outs
or
dec
sub
mov
out
mov
mov
and
ja
addr16
and
jne
repnz
mov
xchg
test
shl
pop
add
inc
pop
or
push
push
ss
es
mov
out
in
cdq
call
mov
in
sub
add
adc
pop
push
ss
daa
mov
test
cmps
xor
adc
data16
pop
jns
aaa
inc
sub
stos
(bad)
xchg
test
shl
push
xor
add
push
push
ss
es
mov
in
call
xchg
inc
and
jne
gs
add
inc
and
hlt
test
aad
lds
push
jb
popa
jno
or
inc
xor
mov
xchg
cmc
scas
out
(bad)
mov
mov
jle
outs
or
xor
mov
movs
rcl
(bad)
jmp
pop
pusha
and
bound
add
inc
and
cwde
in
sahf
xchg
in
aad
lds
adc
add
jo
add
or
xor
and
hlt
lods
fnstcw
xor
jo
add
pop
cmp
mov
cdq
(bad)
test
repz
out
(bad)
(bad)
sbb
dec
cmp
sub
push
jns
mov
lds
xchg
lock
or
jge
dec
cmp
jae
popa
push
jle
aad
xchg
std
test
stos
fnstcw
xor
pop
inc
add
pop
cmp
mov
cwde
cld
test
repz
mov
movs
rcl
jl
dec
cmp
pop
cmp
or
sbb
mov
mov
xchg
sti
fnstcw
adc
inc
xor
jae
pusha
xor
mov
ret
cmps
sar
push
xor
adc
sub
pop
jl
and
imul
iret
stos
call
adc
inc
cmp
inc
es
aaa
arpl
jae
sub
clc
lods
enter
cmps
shl
add
ja
inc
xor
daa
push
aaa
arpl
jae
and
mul
movs
shl
add
jbe
inc
xor
es
bound
jb
and
cmc
mov
movs
shl
add
jne
inc
xor
aaa
push
xor
and
mov
shl
add
adc
xor
push
xor
add
adc
in
hlt
mov
out
mov
test
xchg
pop
arpl
jae
inc
aaa
push
inc
and
add
xor
rol
mov
lock
pop
fs
jae
inc
aaa
push
push
jo
xor
ja
xchg
xchg
repz
ret
mov
(bad)
mov
not
inc
ss
inc
and
data16
xchg
xchg
repz
ret
mov
xchg
lock
lock
push
arpl
jb
inc
ss
inc
and
data16
inc
aam
cmp
outs
sbb
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
out
fisttp
dec
outs
adc
xor
xchg
lock
hlt
nop
les
sbb
jbe
add
add
and
shl
xor
les
ss
outs
adc
add
and
shl
xor
les
xor
adc
pop
imul
aas
dec
das
mov
dec
(bad)
fstp
sub
or
jnp
imul
aas
dec
das
mov
dec
(bad)
fstp
sub
push
je
jnp
imul
aas
dec
das
mov
dec
(bad)
fstp
sub
jns
outs
jp
push
pop
ds
cs
dec
mov
mov
sub
bound
jp
push
pop
ds
cs
dec
mov
mov
sub
pusha
cmp
sbb
dec
sub
cdq
std
mov
stc
popf
jmp
lods
cmp
dec
sbb
ins
jns
imul
cdq
std
mov
stc
popf
jmp
lods
cmp
dec
sbb
ins
jns
imul
cdq
std
mov
stc
popf
jmp
lods
cmp
dec
sbb
ins
js
push
sub
fsubr
in
clc
pushf
call
lods
cmp
sbb
js
push
sub
fsubr
in
clc
pushf
call
lods
cmp
sbb
js
push
sub
fisubr
out
cli
popf
call
lods
cmp
sbb
js
push
sub
jmp
mov
mov
mov
sub
or
js
push
sub
pushf
call
lods
mov
mov
sub
or
js
push
sub
popf
jmp
lods
mov
mov
sub
or
js
push
sub
pushf
jmp
lods
mov
mov
sub
add
sbb
cmp
cdq
in
mov
mov
lods
retf
pushf
mov
sub
sbb
add
push
bound
push
ss
daa
xchg
shl
ret
push
and
jbe
data16
bound
push
ss
xchg
clc
pushf
(bad)
out
call
push
and
jbe
data16
bound
push
ss
xchg
mov
std
stos
hlt
ret
push
and
jbe
data16
bound
push
ss
test
mov
call
cdq
std
test
push
and
jbe
data16
bound
push
ss
test
and
enter
enter
push
and
jbe
data16
bound
push
ss
test
out
movs
cwde
cld
test
xlat
cmps
xor
inc
adc
data16
bound
push
ss
test
and
mov
aam
xor
inc
adc
data16
bound
push
ss
test
out
mov
retf
cmps
xor
inc
adc
gs
popa
add
test
and
ror
xor
inc
adc
popa
jne
add
inc
and
loop
out
cmc
in
out
mov
push
and
popa
jne
add
inc
and
mov
mov
mov
push
and
popa
jne
add
inc
and
in
mov
lds
adc
adc
push
xor
test
in
mov
lds
adc
adc
push
xor
test
in
mov
lds
adc
adc
push
xor
test
test
mov
mov
adc
adc
push
xor
test
call
xlat
xlat
mov
mov
adc
adc
xor
mov
mov
xchg
lock
call
push
and
adc
cmp
sub
jns
test
test
xor
loope
(bad)
stc
popf
or
jge
dec
cmp
sub
jns
fwait
mov
mov
lods
lock
xchg
mov
popf
or
jge
dec
aas
pop
dec
sub
jns
call
fstp
lock
mov
ins
sbb
dec
cmp
cmp
call
fstp
lock
mov
stc
popf
or
jge
dec
cmp
cmp
call
fbld
stc
popf
or
jge
dec
cmp
cmp
or
sbb
mov
mov
fwait
lock
mov
clc
pushf
or
sub
dec
sub
cmp
or
sbb
mov
mov
xchg
lock
mov
ins
sbb
cmp
cmp
or
sbb
mov
mov
xchg
lock
test
ins
sbb
cmp
dec
sub
cmp
or
sbb
mov
mov
xchg
lock
or
jl
dec
xor
sub
or
mov
mov
xchg
lock
loope
cld
cwde
or
sbb
sub
xor
daa
push
aaa
arpl
jae
cwde
mov
mov
xchg
lock
out
xchg
xchg
add
ja
inc
xor
daa
push
aaa
arpl
jae
popf
mov
mov
xchg
lock
mov
add
ja
inc
xor
daa
push
aaa
arpl
jae
xor
movs
rcr
out
jecxz
repz
add
ja
inc
xor
daa
push
aaa
arpl
jae
mov
call
stos
shl
add
ja
inc
xor
daa
push
aaa
arpl
jae
and
mul
cmps
shl
add
ja
inc
xor
es
bound
jb
and
mul
cmps
shl
add
jbe
inc
xor
es
bound
jb
and
mul
cmps
shl
add
jbe
inc
xor
and
jno
and
mov
shl
xchg
add
jne
inc
xor
inc
and
jno
and
mov
shl
xchg
add
jne
inc
pop
push
inc
and
xor
add
adc
in
hlt
mov
movs
shl
adc
dec
push
inc
and
xor
add
adc
in
hlt
mov
movs
shl
adc
jno
inc
and
add
xchg
xchg
repz
ret
mov
(bad)
mov
not
daa
inc
ins
push
inc
and
add
xchg
xchg
repz
ret
mov
(bad)
mov
not
daa
pop
fs
inc
and
add
xchg
xchg
repz
ret
mov
(bad)
mov
not
and
push
xor
ja
xchg
xchg
repz
ret
mov
(bad)
mov
not
and
fs
and
data16
xchg
xchg
repnz
ret
(bad)
mov
not
inc
adc
cmp
xor
jbe
xchg
xchg
repnz
ret
(bad)
mov
not
jle
add
jbe
xchg
xchg
repnz
ret
(bad)
mov
not
je
fwait
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
(bad)
jmp
sti
lahf
retf
scas
fstp
or
jg
(bad)
pop
dec
das
pop
aas
stos
iret
mov
out
cld
sub
fsub
lahf
pop
jb
cmp
or
pop
popa
push
ins
das
inc
sub
mov
cmps
retf
(bad)
cli
(bad)
fild
sub
pop
push
and
inc
jnp
fldcw
jmp
stc
stos
(bad)
stc
ficomp
dec
jno
add
pop
cmp
ss
gs
xchg
lods
xchg
in
mov
lods
sahf
stos
test
in
pop
sub
cmp
inc
pop
jp
daa
dec
outs
or
inc
mov
and
sti
sahf
jmp
fiadd
cmp
push
lds
lods
cmp
jmp
inc
ins
jmp
mov
adc
sub
(bad)
push
push
dec
mov
mov
ins
test
add
aas
fwait
(bad)
in
push
in
fwait
mov
retf
out
sahf
sti
push
pop
or
lahf
jmp
das
stos
into
imul
ins
xor
cmps
dec
out
or
(bad)
int
popa
jmp
fstp
bswap
call
ins
xor
inc
xchg
imul
stc
ror
pop
sub
pop
mov
lods
mov
jp
mov
or
imul
mov
ins
push
xor
test
fidiv
mov
stos
ds
(bad)
cmp
outs
xchg
lahf
sbb
sub
stos
scas
dec
push
aas
imul
dec
cmc
leave
pop
fyl2xp1
in
pop
xor
outs
push
jg
pop
jne
mov
jmp
out
jnp
iret
push
test
pop
mov
rcr
push
jge
xlat
retf
enter
lods
leave
pmulhw
jnp
cmp
arpl
leave
push
fstp
or
sbb
dec
cmp
imul
jmp
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
sub
sub
pop
or
jnp
mov
fwait
retf
mov
mov
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
sahf
pop
mov
jnp
add
ficomp
ja
xor
add
adc
fs
es
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
sar
outs
dec
call
imul
mov
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
adc
and
sub
adc
jmp
pop
fimul
dec
popa
fcomp
jge
push
dec
aaa
pop
and
fistp
(bad)
(bad)
jp
imul
stos
aaa
dec
lahf
stos
mov
jle
lods
mov
mov
dec
scas
outs
clc
inc
mov
and
jl
mov
imul
lahf
sub
cmp
add
pop
add
jnp
adc
cwde
jno
mov
sbb
(bad)
test
lea
(bad)
dec
into
stc
(bad)
das
stos
mov
lahf
ret
je
out
xor
fisttp
sar
jecxz
stos
in
stos
cmp
cmp
les
and
cmp
fisttp
aas
mov
or
push
in
sahf
movs
fldcw
mov
into
rcr
(bad)
push
imul
xor
mov
jle
lods
mov
pop
(bad)
imul
scas
dec
retf
fadd
mov
fisttp
nop
add
arpl
dec
and
fwait
add
push
fidiv
xchg
xor
adc
std
sti
js
sbb
lods
shl
out
jge
test
mov
or
xchg
push
into
ss
lea
mov
retf
add
push
sub
jle
retf
push
jmp
imul
sbb
dec
push
push
pop
xchg
cs
jp
rol
stos
mov
ds
bound
mov
add
enter
sub
cmp
jbe
int
addr16
cs
sti
or
jg
mov
imul
xchg
sub
sti
out
jnp
mov
sub
mov
push
out
push
mov
mov
jnp
arpl
fadd
jb
cmp
retf
mov
jmp
pop
xchg
cmp
outs
mov
mov
jnp
dec
mov
or
retf
push
jnp
cmp
loope
pop
fwait
mov
inc
dec
pop
mov
imul
iret
call
out
xchg
scas
push
cli
in
pop
pop
fwait
dec
ret
jle
sub
lahf
cwde
pop
xor
pop
cmps
sub
dec
push
jnp
xchg
das
dec
mov
dec
stos
(bad)
mov
dec
mov
fdivrp
mov
clc
cmp
push
fcmovnb
jmp
mov
pop
stos
jle
outs
jnp
mov
outs
fidivr
push
pop
ficomp
aam
cmp
(bad)
jp
ret
sahf
dec
push
jnp
push
dec
and
call
ret
lods
push
out
and
imul
mov
mov
fwait
mov
imul
dec
hlt
dec
jbe
push
sub
test
pusha
push
retf
pop
jmp
adc
sahf
retf
out
cmp
xchg
mov
mov
pop
or
retf
loope
fist
std
xchg
iret
mov
dec
jae
(bad)
in
popa
add
pop
jnp
dec
push
pop
retf
sub
sbb
mov
push
push
adc
dec
outs
rcr
retf
outs
mov
pop
or
inc
or
shl
ffreep
out
jnp
aaa
dec
mov
test
sub
hlt
push
push
ret
shr
cmp
push
dec
pusha
jnp
rcr
dec
out
mov
rcr
or
sbb
jne
jmp
cmp
fdiv
jne
mov
cli
lock
fiadd
inc
(bad)
jle
retf
dec
jnp
jmp
js
jae
in
cs
xchg
jmp
inc
and
cmp
inc
loop
aas
scas
(bad)
ficom
stos
std
add
mov
call
mov
test
and
outs
xchg
cmp
repz
jecxz
pop
test
jle
dec
dec
mov
out
jge
test
mov
or
(bad)
push
into
ss
sahf
jnp
add
sbb
retf
push
jmp
sbb
sti
sbb
dec
push
inc
pop
xchg
cs
jp
mov
sbb
mov
sti
sahf
mov
fisub
stos
mov
xchg
mov
adc
sub
fcmove
es
sub
or
jg
mov
imul
xchg
sub
push
out
jnp
mov
sub
mov
push
out
push
mov
mov
mov
fadd
jb
cmp
mov
jmp
pop
(bad)
dec
sti
cmp
outs
mov
mov
jnp
dec
mov
or
xchg
jnp
cmp
call
pop
fwait
sahf
stos
inc
dec
pop
mov
imul
iret
call
push
fist
pop
pop
fwait
dec
(bad)
jle
sub
lahf
cwde
pop
xor
pop
cmps
sub
or
jnp
das
dec
mov
dec
stos
cmp
dec
imul
jmp
rcl
nop
ret
dec
out
inc
pop
mov
js
sbb
outs
shl
xchg
cli
mov
xor
(bad)
push
mov
or
into
mov
repnz
adc
aaa
push
mov
into
aam
jmp
jge
cs
push
sbb
jge
sahf
dec
pop
retf
cmp
aas
daa
arpl
adc
aam
cmp
adc
mov
dec
std
ss
outs
mov
mov
(bad)
push
jmp
les
out
ds
cs
call
ja
data16
jnp
pop
ficomp
aam
cmp
push
jns
scas
sub
dec
mov
jb
inc
hlt
shr
leave
pop
into
test
jle
outs
fimul
ins
sub
lahf
out
(bad)
jno
mov
inc
imul
test
aas
mov
ret
mov
jle
ror
fdivr
inc
das
push
sub
mov
xor
sub
jmp
test
cmp
sbb
cmp
mov
ret
ss
pop
push
mov
outs
pop
adc
mov
jnp
sbb
sti
mov
clc
and
push
fstp
mov
pop
outs
jnp
xor
or
cmp
outs
ds
jecxz
pop
test
jle
add
push
out
jge
test
mov
or
inc
sti
push
into
ss
sahf
jnp
add
sbb
retf
push
jmp
mov
dec
push
scas
pop
xchg
cs
jp
mov
stos
mov
ds
cmp
mov
dec
mov
adc
sub
cmp
jbe
int
addr16
sbb
ret
jg
mov
imul
xchg
sub
imul
jnp
mov
sub
mov
push
out
push
mov
mov
(bad)
push
jb
cmp
retf
mov
jmp
pop
iret
dec
sti
cmp
outs
mov
mov
jnp
dec
mov
or
mov
aas
cmp
rcr
xor
pop
mov
imul
iret
call
mov
xchg
scas
push
cli
in
pop
pop
fwait
dec
arpl
sub
lahf
cwde
pop
xor
push
pop
bound
fstp
jae
cmps
xor
dec
push
repz
add
sti
movs
jb
mov
scas
cli
and
movs
outs
xchg
les
retf
pop
lea
pop
pop
out
ror
xlat
and
cmp
es
dec
jo
add
out
retf
cli
fistp
ds
das
mov
(bad)
outs
dec
adc
push
sti
push
neg
inc
pop
bound
stos
inc
xchg
fisttp
iret
cli
cs
fs
repz
retf
cmp
xchg
xor
push
in
loope
mov
mov
lds
jmp
sti
ret
ret
cli
sub
shr
push
sbb
clc
sub
call
fcmovnbe
xlat
push
outs
ds
ss
or
scas
push
adc
pop
icebp
data16
lods
shr
addr16
xor
lea
dec
das
fidivr
and
xchg
jmp
inc
add
xor
push
repnz
pop
mov
ins
cmp
ds
(bad)
mov
xor
or
sbb
cmps
jmp
stos
xchg
pop
and
adc
push
hlt
imul
into
mov
(bad)
sti
test
retf
(bad)
dec
sub
jle
inc
push
sahf
push
jmp
(bad)
fwait
inc
js
xor
cmc
mov
scas
dec
fdivp
xor
idiv
pop
retf
xchg
push
test
(bad)
adc
stos
cs
popf
dec
sahf
popf
push
inc
aas
scas
adc
xchg
inc
in
sbb
and
jg
add
(bad)
mov
cmp
(bad)
sub
arpl
ins
jno
mov
enter
ss
cmp
scas
xchg
push
mov
sti
jge
sbb
fidiv
mov
mov
pop
dec
sub
cmp
scas
fcomp
xchg
jmp
add
loope
dec
dec
mov
add
xor
xchg
outs
pushf
imul
stos
jp
jae
push
std
mov
jno
mov
sbb
mov
push
inc
loop
sbb
and
dec
mov
sahf
pop
add
xor
ss
mov
(bad)
out
xor
into
xchg
in
das
mov
dec
mov
adc
sub
lods
cmp
ret
adc
adc
stos
stos
fwait
or
fimul
out
icebp
jmp
mov
cmp
inc
loop
push
arpl
mov
mov
jno
mov
push
pop
and
in
mov
fiadd
(bad)
xlat
addr16
out
jle
in
mov
pop
data16
repnz
jne
pop
iret
sbb
iret
out
jnp
fimul
jmp
jnp
add
fwait
dec
imul
sti
pop
push
test
and
into
das
(bad)
fistp
retf
push
and
jb
sahf
cwde
fwait
cmps
in
shr
sahf
pop
aas
cmp
outs
sub
sub
jne
xor
(bad)
jmp
dec
push
jle
ss
out
movs
(bad)
loopne
jnp
hlt
ss
jg
xor
jae
out
jnp
xchg
shl
ss
(bad)
fcmovnu
cmp
and
ret
mov
sbb
imul
call
popa
stos
jno
sti
jnp
xchg
xchg
iret
cmps
(bad)
gs
pop
scas
dec
jmp
or
iret
cmp
and
mov
mov
repnz
neg
pop
mov
mov
aas
pop
scas
lock
enter
mov
outs
sbb
ins
mov
xchg
mov
jg
aaa
(bad)
jecxz
jbe
je
pop
inc
lods
xor
add
pop
sahf
cmps
sub
addr16
xchg
push
jnp
xchg
jecxz
pop
retf
(bad)
mov
inc
cmp
push
pop
fild
imul
mov
push
push
icebp
jecxz
jp
push
pop
dec
popa
test
imul
or
cmp
mov
push
lahf
stos
sub
push
popa
(bad)
mov
repz
xchg
aam
fld
adc
jbe
ja
sahf
sbb
or
(bad)
push
out
jp
pop
ss
mov
push
mov
mov
adc
mov
cmp
mov
sub
addr16
lea
into
add
mov
retf
push
stos
mov
outs
fwait
add
scas
jecxz
cs
sub
cmp
or
mov
sub
outs
mov
push
jnp
add
loop
outs
jae
out
sub
sti
push
clc
cmp
ficomp
lods
mov
sbb
retf
pop
fisttp
dec
adc
fistp
xchg
xchg
imul
sub
or
sub
add
daa
icebp
retw
mov
mov
sub
pop
mov
push
sbb
ret
mov
popf
into
xor
clc
call
clc
xchg
xor
pusha
pop
mov
iret
pop
mov
cmps
jp
mov
pop
shl
fs
call
lods
push
mov
mov
in
cmps
stc
cmp
data16
add
dec
jbe
es
inc
arpl
pop
retf
out
jp
pop
push
out
aam
(bad)
sti
inc
pop
fcomi
adc
das
jle
inc
push
mov
cmp
ror
fwait
mov
cmp
cwde
xchg
and
adc
stos
movs
ja
fbstp
jp
(bad)
xchg
adc
in
ret
add
imul
and
adc
add
test
jne
out
jecxz
sahf
push
add
jbe
jmp
in
pop
cld
xchg
clc
or
mov
adc
jg
mov
ret
push
xchg
sbb
add
pusha
mov
loope
js
scas
neg
aas
jmp
sbb
push
pop
lods
mov
fld
out
add
lock
neg
jg
fwait
pop
daa
dec
fld
ror
adc
or
cmc
ds
sahf
mov
imul
enter
sub
push
fimul
jp
out
xlat
pop
pop
in
fwait
outs
dec
fcmovbe
add
out
mov
cmp
push
into
push
and
sti
(bad)
dec
lods
call
mov
(bad)
loop
repnz
jge
jle
ficom
add
jnp
cwde
or
popa
sub
out
mov
in
mov
sbb
sahf
pop
call
rcr
ins
cs
fimul
dec
cmps
push
jg
dec
push
xchg
dec
pop
ins
add
jnp
mov
stos
cmp
dec
gs
scas
dec
push
sbb
inc
xchg
dec
sbb
mov
inc
stos
jle
push
fistp
xchg
xor
dec
push
test
out
pop
and
mov
sbb
xchg
cmps
pop
pop
int
dec
repnz
xchg
repz
sub
cmp
sub
aam
dec
pop
xor
jecxz
adc
mov
sbb
cmp
pop
retf
bswap
aas
mov
xor
icebp
xor
add
push
adc
sub
push
sub
cli
shl
sub
mov
mov
movs
inc
(bad)
xchg
stos
popa
(bad)
mov
inc
push
(bad)
push
and
loopne
cvttps2pi
ficomp
stos
mov
mov
push
mov
in
ficom
call
mov
sar
mov
(bad)
jle
and
retf
jnp
mov
in
sub
pop
adc
fisttp
data16
mov
test
movs
add
inc
icebp
(bad)
or
fcomp
jmp
sbb
pusha
xchg
cs
mov
ss
jp
mov
dec
scas
jmp
mov
xor
into
inc
(bad)
jo
mov
mov
xchg
xor
adc
pop
mov
adc
cmp
pop
test
sbb
pop
out
cs
retf
cvtps2pi
fwait
inc
out
test
fld
push
fwait
mov
dec
into
mov
dec
das
cmc
mov
jno
mov
repz
adc
and
cmp
in
fimul
push
in
sbb
mov
loop
pop
aaa
pminub
inc
int3
xlat
adc
mov
adc
pop
jae
(bad)
ret
or
jbe
mov
adc
xor
add
mov
xchg
fist
mov
(bad)
mov
cmp
in
inc
push
fisubr
push
inc
iret
inc
sbb
clc
inc
jg
mov
mov
fwait
das
in
ss
out
jg
inc
push
push
and
jle
jecxz
xchg
stos
out
dec
ficomp
es
les
aaa
ds
aad
fsub
mov
sti
jnp
or
retf
scas
jle
fwait
pop
scas
mov
clc
mov
out
stos
cmp
outs
push
sahf
ror
movs
inc
xchg
jb
push
pop
lahf
stos
jmp
jecxz
sbb
vpmacssdd
aas
rcr
jmp
int3
adc
pop
pop
push
cmps
jp
das
call
mov
call
stos
aam
sbb
shld
mov
sar
outs
loope
lahf
sbb
sub
(bad)
imul
jecxz
in
outs
sub
or
mov
push
scas
jmp
adc
jle
repz
daa
fucomi
or
loope
loope
pop
scas
cmp
xchg
sti
jg
xchg
adc
jno
data16
aam
jle
xchg
repnz
icebp
mov
sti
cmps
mov
xor
mov
mov
xchg
cmps
xlat
mov
(bad)
mov
rcr
jg
sub
jle
jmp
sti
test
and
out
jle
aaa
out
fistp
mov
mov
mov
inc
jle
scas
mov
xchg
xor
test
fmul
jp
(bad)
mov
imul
das
mul
sbb
adc
(bad)
cmp
jecxz
mov
dec
hlt
jle
push
loopne
push
jmp
push
inc
cdq
shr
shr
inc
inc
push
add
call
stos
cmp
push
sahf
push
enter
sub
xor
retf
dec
pusha
mov
(bad)
fwait
pop
adc
mov
call
test
adc
scas
pop
mov
cmp
add
in
nop
add
fdiv
mov
aas
out
imul
movs
dec
mov
xor
mov
jnp
loop
ds
push
in
(bad)
sub
add
jmp
xlat
or
push
retf
pop
shl
ds
movs
xchg
(bad)
repz
das
cmc
bound
and
or
enter
fidivr
sub
popa
push
or
jle
outs
(bad)
sar
(bad)
out
test
mov
inc
push
dec
rcl
daa
pop
lea
jmp
or
clc
cmc
je
mov
add
scas
dec
sbb
shl
xor
jbe
jnp
cs
adc
stos
inc
ds
call
dec
push
frstpm(287
mov
xchg
push
push
jmp
cmps
fimul
or
call
push
fisub
mov
out
push
mov
pop
mov
pusha
jbe
cs
xchg
mov
outs
mov
fld
fisubr
or
jne
adc
pop
aaa
pusha
mov
cs
mov
add
and
xchg
cmp
test
mov
cmp
scas
push
cmps
std
push
out
popa
mov
loopne
imul
das
clc
jne
xor
sbb
fimul
lahf
dec
test
fdiv
addr16
push
nop
aaa
sub
gs
dec
push
enter
mov
dec
xor
xchg
pop
out
xchg
ja
pop
repz
sbb
(bad)
clc
adc
popf
or
push
xchg
mov
jl
mov
lods
mov
and
into
dec
cmps
adc
sbb
pop
dec
jne
cmp
cmp
push
(bad)
mov
cs
cmps
pop
mov
jge
cmp
enter
lahf
mov
movs
fwait
pop
pop
pop
and
sti
arpl
jae
xor
or
repnz
out
push
icebp
sar
xchg
cmps
nop
xchg
mov
leave
mov
fidivr
add
add
jge
dec
add
mov
sbb
ret
xor
push
sbb
sub
pop
sub
jmp
stos
dec
(bad)
adc
out
pushf
stos
xchg
ficom
fimul
xor
jae
arpl
jns
pusha
(bad)
stos
ds
sub
sahf
pop
add
sub
ins
sbb
inc
push
dec
mov
scas
fwait
mov
repz
test
popf
mov
mov
jmp
push
retf
push
sub
cwde
jg
fwait
jle
sub
movs
jp
mov
sbb
mov
je
push
adc
imul
addr16
stos
stos
imul
and
dec
fidiv
in
aam
pusha
daa
retf
dec
add
sub
iret
adc
or
cmc
ds
pop
mov
dec
or
loope
pop
sbb
jmp
dec
scas
fwait
outs
stos
mov
popf
jle
(bad)
jnp
or
mov
(bad)
std
adc
mov
outs
test
pop
mov
mov
or
inc
cld
jg
retf
push
pop
icebp
pop
ds
loope
call
sahf
cmps
push
jnp
outs
lock
iret
outs
jne
out
mov
sbb
jb
or
adc
xchg
inc
inc
bound
xchg
xor
push
int3
mov
xor
fistp
push
out
or
xor
pop
xchg
repnz
pop
and
mov
out
adc
and
js
enter
sbb
jae
dec
push
fisttp
das
cli
les
mov
mov
lods
bound
jnp
dec
pop
movs
or
std
loope
mov
(bad)
int3
aad
inc
mov
adc
jmp
(bad)
pop
xchg
dec
dec
cmp
outs
ficomp
or
mov
jmp
in
das
push
add
iret
dec
pop
lods
ret
cmp
jno
stos
mov
or
cmp
retf
dec
mov
jnp
inc
dec
out
cmc
adc
dec
xchg
pop
jp
out
nop
mov
dec
and
xchg
test
inc
outs
out
and
cli
outs
icebp
or
sbb
es
jge
and
out
out
dec
inc
cmp
sub
test
mov
daa
push
jg
daa
jbe
add
jle
jns
pop
fs
and
mov
dec
xor
jae
daa
(bad)
jnp
inc
pop
fcomi
(bad)
mov
cs
fwait
sbb
mov
setle
out
pop
sbb
aam
mov
retf
je
push
mov
sbb
outs
or
movs
retf
imul
push
fidiv
sub
lahf
push
pop
push
stc
and
out
jle
jnp
rcr
mov
sbb
rcr
pop
add
xchg
(bad)
mov
retf
pusha
mov
jno
sub
fidivr
mov
xor
xlat
pop
out
mov
push
or
pop
ins
sub
xor
test
xchg
push
add
arpl
add
cmp
xor
out
repnz
push
fstp
jmp
mov
dec
in
retf
outs
mov
mov
jecxz
inc
sbb
outs
pop
cmp
lds
xchg
push
and
adc
pop
jae
stos
xor
sub
inc
ficomp
out
and
sti
(bad)
iret
std
fwait
cmps
mov
sahf
mov
enter
or
jg
retf
not
push
mov
sbb
dec
inc
jae
and
das
sbb
push
into
(bad)
(bad)
shr
jmp
sti
mov
mov
add
fsubr
sub
(bad)
out
mov
dec
pop
jb
or
pusha
dec
xlat
pop
mov
or
adc
out
and
push
add
sti
mov
cmps
out
fnstsw
mov
mov
repz
mov
lahf
lods
jmp
lock
pop
mov
inc
cmp
outs
mov
sar
dec
jge
es
(bad)
jge
nop
dec
dec
adc
mov
fwait
mov
xchg
dec
dec
jbe
mov
or
adc
sbb
in
das
imul
jmp
mov
cmps
clc
xchg
pusha
pop
mov
stos
ss
(bad)
ficomp
and
mov
jmp
ret
stos
std
mov
dec
pop
pop
retf
cmp
xchg
sbb
xlat
jmp
arpl
jp
ret
scas
sub
dec
and
mov
cmps
lock
enter
sub
push
daa
retf
dec
fild
ja
pop
dec
ucomiss
mov
not
inc
sub
cmp
in
jnp
daa
dec
sbb
xchg
push
into
push
push
retf
jp
dec
out
adc
ret
jae
mov
das
outs
adc
out
inc
cmc
(bad)
sahf
mov
imul
nop
loop
cmp
retf
xlat
fild
mov
arpl
repz
outs
mov
mov
add
mov
push
push
out
push
jmp
mov
into
pop
jae
es
cmp
push
jl
mov
out
and
pop
cs
fs
stos
xchg
mov
mov
(bad)
das
ficom
mov
cli
retf
ret
mov
(bad)
cmp
add
mov
pop
lahf
mov
jnp
cs
mov
(bad)
jbe
or
add
mov
add
inc
push
pop
into
ret
cmp
push
cmps
not
xchg
ds
mov
or
out
retf
bound
adc
loope
stos
inc
cli
fisttp
retw
je
ret
pop
inc
sbb
adc
adc
or
lahf
aam
imul
adc
comiss
mov
rcr
(bad)
xchg
stos
test
sbb
xchg
dec
mov
xchg
add
xchg
push
xchg
sar
into
push
add
dec
ficom
push
loop
push
test
shl
js
outs
(bad)
fist
scas
sub
dec
pop
inc
add
arpl
fsub
scas
rcl
(bad)
xchg
sbb
stos
jle
in
pop
push
mov
lahf
push
test
out
jne
shr
cwde
mov
push
jmp
cmc
movs
(bad)
xor
add
sahf
popf
retf
mov
fild
adc
dec
fisttp
dec
ss
inc
ja
fwait
push
movs
cmc
test
shl
dec
xchg
mov
cmovle
shr
retf
retf
xchg
cmp
adc
cmp
inc
adc
jnp
dec
and
mov
(bad)
adc
push
icebp
jmp
mov
cmp
cmp
adc
shr
aaa
les
push
push
sbb
cmp
xchg
sahf
push
add
fwait
dec
shl
sub
ror
or
int3
sub
out
ficom
mov
mov
jg
mov
pop
addr16
pop
ins
mov
push
mov
retf
push
popa
out
ror
out
mov
outs
dec
adc
push
add
pop
(bad)
fild
and
lds
pop
movs
jb
xor
dec
sub
push
or
jae
imul
jae
sahf
js
cmps
and
ret
(bad)
sti
idiv
ss
adc
push
aas
dec
pushfw
pop
das
je
jae
push
jle
and
mov
push
or
xor
(bad)
sbb
cs
jle
xchg
aam
jle
cs
repz
xlat
scas
cmp
nop
inc
scas
cli
mov
push
stos
cmp
pusha
mov
pop
mov
push
std
out
retf
dec
sahf
sbb
sbb
ds
cmp
in
imul
jmp
ss
sub
fild
jnp
(bad)
dec
pop
fwait
push
out
mov
pop
retf
imul
or
cmp
sub
mov
scas
and
xor
inc
push
jae
js
and
xchg
loop
sub
fwait
dec
ins
cmp
sub
and
(bad)
retf
push
sahf
push
jmp
out
mov
inc
sub
in
push
jp
pop
fistp
outs
cmp
arpl
(bad)
add
dec
push
jg
outs
lea
mov
pop
push
out
outs
add
stos
inc
fdiv
adc
(bad)
mov
adc
sub
inc
test
jp
mov
mov
mov
sub
stos
fwait
cmps
out
neg
mov
pop
mov
shl
jl
(bad)
out
xor
sbb
imul
xchg
jge
bswap
movs
ret
(bad)
sti
idiv
ss
adc
cmp
cs
fwait
ret
mov
pop
pop
add
xchg
push
data16
add
push
icebp
sub
ss
cmp
add
inc
xchg
or
sub
inc
or
mov
into
sar
inc
jg
ds
(bad)
(bad)
jb
mov
and
add
pop
jecxz
imul
pop
(bad)
mov
add
xchg
mov
inc
not
ret
cmps
add
push
out
adc
imul
xchg
dec
xchg
mov
loopne
pop
push
or
pop
or
mov
sahf
jnp
mov
fbstp
dec
jbe
or
lock
ficomp
sub
fist
cdq
loope
icebp
stos
mov
jle
shl
ins
sahf
retf
xchg
pop
arpl
cmp
push
neg
sbb
outs
lods
cmp
into
and
add
popa
rol
mov
jle
in
adc
jecxz
sbb
aaa
push
fisttp
add
adc
push
push
lds
inc
mov
push
out
test
jnp
mov
retf
fsubr
jle
sub
mov
pop
xor
jno
out
ds
mov
inc
scas
jae
adc
(bad)
push
movs
xchg
fs
ins
cmp
push
enter
sti
push
imul
out
xor
sti
push
jmp
into
mov
add
sahf
mov
imul
mov
mov
sub
sbb
sub
mov
jge
mov
xor
adc
mov
add
fs
xlat
mov
in
jnp
cs
mov
jb
rcl
repz
jmp
pop
iret
jnp
enter
aas
mov
pop
fwait
les
jg
outs
push
sahf
xchg
fistp
sbb
sub
ss
sub
sti
jle
mov
and
into
out
pushw
test
push
sbb
es
sbb
adc
(bad)
push
adc
out
call
stos
repz
xchg
dec
cli
cwde
push
imul
scas
mov
out
loope
cli
aas
icebp
pop
mov
and
icebp
dec
out
inc
jecxz
fistp
std
popa
fst
xlat
cmp
retf
inc
xchg
dec
loopne
adc
(bad)
shl
inc
cmp
sub
adc
fsub
xor
push
mov
fcomp
push
mov
pop
aam
out
jle
test
sahf
mov
scas
inc
call
outs
pop
and
add
stos
stos
outs
dec
imul
push
cmp
mov
mov
fwait
sbb
jo
into
pop
cwde
ret
mov
xchg
pop
mov
mov
mov
mov
aas
dec
push
sub
inc
out
jle
xchg
sbb
jecxz
and
pop
sub
fist
fimul
push
out
mov
mov
cmp
jmp
jnp
dec
add
cmp
stos
retf
mov
sti
fdivp
pop
call
lahf
fsub
es
in
iret
mov
sahf
push
pop
(bad)
cmp
push
out
jle
jecxz
or
fwait
pop
inc
idiv
cmps
repz
cwde
loope
dec
jmp
cmp
stos
push
imul
xchg
out
not
and
cdq
sub
pop
sub
fisub
pop
inc
hlt
xor
jle
mov
jnp
or
or
cli
mov
or
rol
mov
nop
lds
mov
ror
popa
jo
sbb
mov
(bad)
push
sub
repz
aad
xor
out
ret
mov
in
push
outs
mov
mov
mov
xchg
push
push
cs
dec
sbb
clc
scas
pop
lea
daa
adc
js
std
or
inc
call
xor
dec
push
(bad)
imul
out
(bad)
jge
push
inc
cmp
bound
add
xchg
mov
les
sbb
into
sub
aaa
inc
adc
cmp
cmp
cli
adc
scas
jae
outs
rcl
xchg
mov
xchg
out
dec
inc
sub
repz
inc
lock
rol
daa
mov
test
cli
pop
adc
lds
or
cmps
jno
mov
push
not
push
daa
out
les
scas
loope
scas
add
aad
cmc
and
bound
push
jg
lds
retf
push
sbb
int3
sbb
push
or
sbb
xor
rcl
mov
popf
fwait
js
std
jo
mov
jae
repnz
add
enter
pop
add
or
sbb
shl
xchg
sbb
(bad)
enter
push
inc
lock
mov
std
cmps
push
jle
out
inc
fild
jmp
mov
dec
adc
sub
pushf
pop
dec
test
mov
cmp
mov
retf
cli
jmp
retf
ror
(bad)
mov
mov
sbb
scas
int
mov
push
dec
add
ja
inc
retf
push
cmp
and
(bad)
xchg
out
push
jecxz
xor
ins
out
or
xor
jl
pop
xchg
inc
das
mov
mov
mov
mov
push
sbb
(bad)
jae
shl
push
lds
(bad)
outs
test
pop
pop
loop
repnz
lahf
push
sbb
retf
push
lahf
sbb
cs
pop
fwait
dec
pop
push
xchg
xchg
jns
jecxz
inc
add
leave
sub
cmp
(bad)
sbb
mov
sub
sti
out
movs
rcr
cmp
shl
loope
cmp
fadd
fwait
pop
xchg
fstp
push
jecxz
jbe
mov
sbb
int
out
adc
inc
xchg
inc
mov
jg
mov
inc
mov
retf
inc
push
sub
and
dec
dec
jno
pop
sbb
(bad)
mov
push
add
mov
cmps
jae
sbb
mov
and
sbb
(bad)
jb
jecxz
push
dec
fwait
mov
shr
push
push
cmps
mov
cmp
sahf
push
dec
out
jp
xchg
push
popa
test
outs
aas
sub
push
ret
jle
pop
scas
fcomp
into
mov
rcl
loopne
jnp
or
(bad)
and
repnz
dec
adc
fidiv
push
mov
cmp
(bad)
push
add
mov
sub
std
xchg
outs
mov
fild
jne
arpl
jp
(bad)
je
fs
out
adc
jecxz
into
pop
dec
lods
mov
out
aam
out
inc
pop
ror
and
(bad)
stos
gs
xchg
xchg
xchg
jnp
call
scas
nop
and
scas
lock
xor
jmp
repz
sub
add
sahf
push
out
xor
stos
push
sbb
adc
fwait
aas
jmp
out
mov
movs
out
cmp
sub
ficom
(bad)
inc
mov
imul
scas
vpunpckhdq
dec
fcmovnb
and
xor
retf
pop
fsubr
retf
adc
call
mov
into
test
push
bound
mov
or
aam
(bad)
xor
hlt
adc
jg
shr
daa
cs
mov
fwait
jecxz
jbe
stc
push
into
dec
sub
dec
lea
in
adc
lahf
fsub
(bad)
rcr
xchg
enter
outs
inc
pop
aam
jmp
call
xor
xchg
or
(bad)
dec
sahf
icebp
retf
mov
pusha
into
sahf
adc
stos
ss
ds
bound
jnp
jg
nop
dec
ror
test
mov
sub
stos
bound
inc
xor
and
ficomp
adc
ds
mov
stos
cs
outs
movlps
jle
aas
sub
scas
jle
(bad)
xchg
out
icebp
(bad)
bound
je
imul
sahf
rol
imul
scas
cmp
and
aas
pop
dec
dec
mov
aaa
loop
cli
sti
mov
mov
xor
jbe
shl
xor
adc
arpl
cmps
xchg
xchg
push
jp
mov
stos
mov
dec
push
sub
bound
mov
cwde
cmc
mov
xchg
push
push
add
mov
out
(bad)
fidivr
retf
sbb
stos
and
ss
mov
outs
xchg
mov
retf
cs
xchg
test
cs
lds
push
cmps
pop
cmp
retf
es
dec
cmp
rol
ds
fstp
mov
clc
fisttp
push
mov
mov
and
imul
ds
scas
std
cmp
rcl
or
scas
ret
pop
(bad)
mov
aam
fiadd
pusha
fwait
scas
jns
pop
ror
cmc
inc
outs
dec
adc
mov
jg
sahf
jle
lock
or
cwde
mov
cmp
add
pop
push
(bad)
retf
dec
enter
mov
adc
cmps
(bad)
pop
aad
xchg
push
(bad)
sbb
les
add
add
sub
idiv
mov
mov
jo
dec
inc
fs
inc
or
xchg
push
movs
loopne
jp
push
fdivrp
inc
jne
mov
xor
aad
inc
adc
dec
jb
pop
into
push
inc
and
lds
dec
push
aaa
enter
shl
(bad)
lds
xor
call
mov
jne
paddsb
into
scas
cld
call
inc
out
jle
jb
pop
mov
loopne
clc
les
sahf
in
pop
shl
sbb
jbe
retf
adc
ds
retf
ror
adc
arpl
jae
retf
(bad)
mov
dec
inc
xor
outs
dec
fcomp
cs
sub
pop
inc
dec
aaa
push
mov
aad
into
imul
mov
xchg
cwde
push
mov
imul
cli
adc
mov
xchg
add
hlt
push
sbb
call
jno
dec
ins
xchg
dec
imul
jno
repz
sub
movs
cmp
inc
cmps
sbb
enter
fwait
lds
ss
dec
adc
lock
sub
and
pusha
ds
xor
jbe
data16
or
or
xchg
loop
sar
xchg
inc
mov
fs
test
mul
dec
pushf
sub
imul
pop
sbb
cs
push
dec
out
and
mov
add
sub
xchg
xchg
lea
sbb
int
push
jle
jmp
sti
movs
mov
xchg
inc
dec
mov
outs
xchg
mov
jns
hlt
and
mul
sbb
fdivr
ins
ret
stos
jl
dec
push
bound
pop
pop
inc
sub
sub
jle
dec
loope
fiadd
sub
(bad)
out
cmp
mov
pushf
rep
(bad)
sub
or
mov
jnp
and
stos
sti
sar
pop
pop
dec
ins
jle
sub
add
pop
lahf
pop
cld
xor
cmp
(bad)
mov
fwait
inc
pop
mov
push
push
mov
xchg
xchg
inc
sub
jmp
mov
cs
mov
out
out
xchg
sahf
xchg
mov
retf
dec
mov
or
icebp
dec
ja
sub
xor
jnp
jb
mov
pop
retf
sub
dec
pop
in
xor
cmp
adc
ds
ins
addr16
fs
stos
sbb
test
jp
jl
cmp
out
pop
push
jp
or
sbb
or
or
add
jmp
xchg
cs
test
dec
nop
push
mov
mov
lea
cmc
das
mov
retf
cmp
(bad)
movs
(bad)
fcmovnbe
inc
xchg
mov
sbb
add
mov
pop
pop
add
pop
add
(bad)
mov
or
push
xchg
inc
cmps
mov
shl
arpl
pop
icebp
cmp
push
clc
push
lds
jbe
lahf
retf
adc
fsubp
push
sbb
(bad)
stc
out
loope
out
aas
sti
lods
je
push
dec
daa
push
pop
lods
into
jge
pop
and
aam
arpl
push
aas
jp
jnp
cs
fwait
mov
dec
mov
add
shufps
add
cmp
imul
push
pop
xchg
imul
aas
dec
xchg
pop
add
out
jg
jg
fsub
shl
adc
test
mov
push
(bad)
outs
inc
sbb
in
or
sti
push
jmp
cdq
in
push
out
out
aas
push
and
movs
mov
ja
sub
mov
ret
mul
xor
and
jmp
and
cmc
scas
test
mov
push
mov
inc
fild
in
push
mov
push
retf
push
call
mov
push
push
push
out
mov
push
mov
test
xchg
push
aad
call
adc
jp
xchg
test
pusha
ds
jle
sbb
xchg
jp
push
adc
lock
jge
dec
int3
jmp
loopne
pop
and
mov
cmc
sub
aad
ss
mul
in
movs
cli
add
xor
les
data16
(bad)
xchg
or
sub
xchg
xchg
ficom
loopne
loope
cmp
gs
jae
adc
scas
jb
dec
mov
push
lock
mov
pop
fisttp
adc
sar
sbb
call
fistp
add
lods
pop
mov
iret
dec
push
push
out
add
xchg
inc
push
mov
dec
imul
push
enter
(bad)
cmp
fist
lahf
fisub
inc
and
xor
xchg
inc
popf
jg
(bad)
fadd
hlt
xchg
push
out
mov
shr
neg
mov
jb
movs
mov
pop
add
xchg
es
shr
jmp
sti
xchg
mov
sbb
rcl
push
sub
cmp
and
out
shl
mov
mov
stos
cld
jle
jae
or
push
pusha
mov
rol
adc
out
jo
loop
dec
test
and
push
std
or
fisttp
inc
push
loop
cmovp
jg
push
xchg
or
xchg
and
mov
add
in
sub
int
xor
fld
out
mov
sbb
push
cmp
pand
imul
scas
loopne
cwde
pop
add
mov
cmp
ja
repz
scas
jns
ror
inc
jl
and
pop
ja
mov
add
movs
add
mov
xor
idiv
je
in
xlat
push
fadd
(bad)
loope
push
push
(bad)
mov
dec
out
push
arpl
pop
add
fistp
mov
sti
mov
adc
out
movs
add
out
pop
cmp
jmp
inc
adc
mov
xor
xor
ins
jl
arpl
(bad)
loope
push
stos
std
add
mov
imul
mov
sbb
sbb
mov
sub
adc
pop
jae
inc
fidivr
in
inc
mov
ds
jg
call
rcl
mov
stos
stos
imul
cmp
clc
push
retf
xchg
outs
(bad)
xlat
mov
sbb
sti
js
sbb
lods
ins
neg
cmp
dec
push
mov
jo
cmp
retf
xchg
lahf
test
mov
cmc
mov
dec
and
nop
mov
pop
inc
push
scas
std
sti
jns
mov
in
dec
outs
pop
add
or
clc
out
pushf
xchg
arpl
dec
and
xor
pop
sahf
add
or
aaa
and
mov
movs
into
push
fwait
pop
stos
mov
sbb
repz
(bad)
mov
inc
pop
aad
mov
inc
cs
popf
fwait
sbb
cmp
dec
dec
mov
inc
pop
faddp
into
outs
jne
adc
mov
ja
mov
mov
and
lods
mov
pop
out
add
test
mov
fild
mov
inc
mov
jnp
jnp
xor
or
sbb
outs
xchg
cmp
das
ds
jecxz
pop
test
jle
loop
mov
out
jge
test
mov
or
into
sti
push
into
ss
lea
mov
retf
add
sbb
ss
retf
fst
push
jmp
cmps
cs
sbb
dec
push
(bad)
pop
xchg
cs
jnp
mov
stos
mov
ds
ret
fisub
stos
mov
adc
enter
sub
cmp
jbe
int
addr16
cs
pop
sti
or
jle
mov
imul
xchg
sub
pop
out
jnp
mov
sub
mov
push
out
push
mov
mov
jnp
arpl
fcomp
jb
cmp
retf
mov
data16
sub
pop
outs
dec
sti
cmp
outs
mov
mov
jnp
dec
mov
or
jecxz
jnp
cmp
call
pop
fwait
out
inc
dec
pop
mov
imul
into
call
(bad)
fist
pop
pop
fwait
dec
stos
jle
sub
sahf
cwde
pop
xor
pop
cmps
sub
mov
cmp
ret
stos
jle
sub
add
push
hlt
ficomp
into
mov
push
push
mov
icebp
cmp
mov
or
jle
outs
mov
popf
jle
mov
sbb
bound
adc
pop
lahf
out
div
(bad)
aam
dec
stos
cmc
scas
xor
enter
inc
and
mov
jecxz
(bad)
std
out
retf
test
jmp
mov
jg
adc
sahf
mov
or
dec
ss
popf
aam
push
adc
push
push
push
out
out
pop
shl
cdq
mov
mov
jl
popa
ficomp
das
mov
retf
add
arpl
imul
fistp
cmc
imul
stos
push
dec
cmp
push
xchg
dec
xchg
sbb
push
adc
cmp
mov
rcl
push
xor
(bad)
xor
pop
(bad)
into
mov
pop
ins
cmc
ins
xchg
xchg
sahf
pop
sub
jp
inc
(bad)
mov
jg
retf
xchg
into
push
jmp
or
and
data16
cmps
or
test
push
out
sbb
dec
into
test
jge
movs
push
call
jmp
std
push
fwait
and
inc
push
jmp
das
clc
test
je
popf
ret
stos
cmc
jb
mov
push
push
hlt
ficomp
push
clc
dec
lahf
loope
jnp
shr
ror
sbb
jns
enter
in
iret
cmp
cvtdq2ps
or
ss
dec
clc
or
mov
out
sub
sbb
out
pop
sbb
push
jmp
stc
arpl
dec
stos
cmc
xor
out
scas
or
push
icebp
mov
jbe
je
cdq
ret
push
jle
outs
dec
sahf
pop
add
xchg
pop
(bad)
outs
ret
les
fwait
int3
retf
iret
rcr
push
jnp
popa
or
imul
pop
or
mov
adc
lahf
repnz
cmp
dec
out
ret
ss
jae
or
mov
test
mov
enter
mov
jno
into
aad
mov
jbe
in
xor
sub
iret
aam
xchg
jmp
or
imul
cmps
ret
pop
mov
and
xor
cli
iret
imul
call
(bad)
cmp
sbb
push
imul
std
out
mov
ficomp
mov
adc
sub
out
das
xchg
mov
mov
jmp
(bad)
test
push
sar
push
xor
punpckldq
adc
mov
mov
cmp
sti
sub
mov
mov
sub
(bad)
fisubr
js
jmp
rcl
stos
xchg
mov
mov
xchg
jb
mov
(bad)
mov
push
pop
in
es
cmp
and
adc
jnp
adc
mov
enter
out
scas
sti
ficom
stos
or
(bad)
cs
pop
pop
push
jle
sub
jle
std
cwde
xor
inc
pop
add
stos
or
lea
pop
cmps
pop
mov
cmp
cmps
sahf
sub
call
sbb
sub
mov
stc
ds
mov
fwait
lock
test
sub
dec
cli
push
clc
adc
pop
xor
mov
cs
fwait
punpckhbw
mov
ins
repnz
daa
jp
mov
retf
loope
push
stos
std
add
mov
fwait
out
jg
jnp
repz
xchg
and
fsubp
cdq
sub
mov
push
popf
ins
imul
xchg
jmp
mov
sbb
sub
cdq
out
(bad)
or
clc
retf
jp
jg
aam
dec
push
sub
mov
or
call
call
cs
dec
stos
push
mov
fild
mov
enter
outs
inc
ins
sbb
sbb
mov
xchg
xor
loopne
and
mov
arpl
jnp
xchg
cs
xchg
ret
and
dec
mov
fdivrp
mov
clc
and
push
fistp
jmp
mov
pop
stos
jle
outs
jnp
xor
or
sbb
outs
xchg
cmp
stos
ds
jecxz
pop
test
jle
dec
dec
mov
out
jge
test
mov
or
retf
into
ss
lea
mov
retf
add
sbb
sub
jle
retf
fst
push
jmp
xchg
cs
sbb
dec
push
and
cs
jnp
lds
sti
stos
mov
ds
push
mov
fisub
stos
mov
jmp
jnp
adc
sub
fcmovne
and
sti
call
or
jle
mov
imul
xchg
sub
dec
out
jnp
mov
sub
mov
push
out
push
mov
mov
(bad)
pop
jb
cmp
retf
mov
data16
sub
pop
or
shr
dec
add
dec
mov
or
lahf
push
jnp
cmp
cld
rcr
push
stos
inc
dec
pop
mov
imul
into
call
dec
push
inc
cs
movs
frstor
mov
aad
scas
jnp
call
mov
push
push
scas
out
enter
add
call
cmp
sbb
sub
fistp
jp
adc
push
cmp
inc
xchg
mov
cmp
or
xor
dec
push
jmp
mov
add
push
movs
bound
test
dec
sub
(bad)
cmps
aad
adc
rcr
cli
out
jnp
dec
and
mov
addr16
xchg
fcmovnu
push
sub
sahf
dec
leave
ror
xor
jg
mov
pop
out
movs
mov
sbb
imul
cmps
neg
imul
into
or
sbb
repnz
mov
pop
sub
jmp
test
add
mov
imul
lahf
pop
pop
call
popa
dec
out
add
pusha
mov
call
stos
sub
outs
mov
mov
or
sbb
retf
dec
sahf
inc
or
lods
fld
dec
xchg
and
cli
lods
mov
pop
mov
fsubrp
add
push
sti
retf
dec
out
mov
pop
pop
pop
stos
xchg
mov
jle
inc
mov
mov
sbb
sub
cmp
mov
adc
jecxz
and
cmps
shl
mov
mov
in
cmps
cmp
retf
jbe
mov
into
stc
rol
and
xchg
mov
fisubr
jns
scas
jecxz
jae
xchg
xor
in
xor
and
jae
ficomp
sti
cmp
jbe
out
add
std
xchg
(bad)
cmp
retf
out
dec
mov
pop
jae
ret
jle
mov
add
jp
out
nop
mov
dec
and
imul
cld
call
jbe
fnstcw
inc
lock
sub
cmp
jmp
or
inc
popf
and
cs
sub
inc
fiadd
ret
out
and
fild
xchg
sti
(bad)
iret
std
fwait
cmps
mov
hlt
outs
dec
sahf
mov
enter
or
jg
retf
test
movs
ds
bound
cmp
mov
ss
addr16
sbb
push
into
(bad)
(bad)
shr
jmp
sti
adc
xchg
lods
outs
push
sahf
ret
mov
enter
push
cmp
(bad)
mov
mov
cmps
pop
jb
or
jns
rcr
imul
or
or
pusha
(bad)
cmp
and
push
add
sti
mov
fwait
cmps
out
fnstsw
mov
mov
repz
sub
lods
jmp
in
rcr
inc
cmp
outs
mov
cs
dec
jge
es
jb
pop
push
xor
adc
mov
fwait
add
jbe
mov
mov
mov
cmps
retf
and
out
popf
sti
(bad)
xchg
pop
ror
jle
sub
sahf
mov
imul
pop
or
pop
ins
sub
sub
push
add
arpl
or
cmp
cmp
(bad)
repnz
pop
fisttp
jmp
mov
dec
daa
add
mov
sahf
jnp
or
mov
loopne
lahf
out
outs
sti
sub
call
xor
out
rol
xchg
(bad)
inc
ds
adc
xchg
into
(bad)
jmp
mov
repz
mov
jge
rcr
sbb
mov
pop
adc
scas
push
mov
or
(bad)
bound
and
pop
cmp
les
jmp
pop
sbb
pop
fwait
or
cmc
mov
fisubr
xchg
ficomp
dec
cwde
(bad)
mov
sbb
push
shr
jbe
or
sub
pop
add
inc
lock
dec
push
xchg
into
aam
ds
xor
pop
icebp
mov
sbb
outs
(bad)
pusha
add
imul
xchg
pop
xor
pop
test
pop
ficom
(bad)
lods
movs
je
int3
or
stos
xchg
imul
out
or
cmp
pusha
mov
fwait
mov
and
dec
jmp
mov
xor
cmp
cli
push
out
daa
out
test
mov
or
xchg
mov
sbb
mov
cmp
mov
jge
cwde
cwde
fst
sar
push
rol
xchg
int
cmc
cmc
cmps
mov
int
mov
cli
sti
push
icebp
add
idiv
pop
xchg
inc
sub
rcl
call
pop
nop
and
mov
mov
int
cmp
mov
pop
scas
lea
sub
mov
sbb
add
sti
(bad)
push
cs
mov
std
push
xchg
enter
pop
fisub
sub
jmp
test
scas
test
mov
sbb
sub
aad
loope
aaa
scas
out
das
les
pop
lds
(bad)
xor
(bad)
cmps
sbb
ret
xor
xchg
arpl
sbb
sti
cs
pop
mov
in
mov
jno
rol
test
pushf
sub
xchg
rcl
sar
pop
cli
and
add
(bad)
(bad)
out
inc
push
sahf
int
imul
xor
imul
jmp
and
(bad)
(bad)
neg
fmulp
or
mov
sahf
test
test
ds
cmc
repz
sbb
mov
es
cs
in
mov
in
sub
push
sti
rcr
pop
jmp
sti
imul
fs
rcr
stos
cli
mov
xor
(bad)
imul
mov
inc
(bad)
iret
mov
cmps
and
xchg
sbb
sbb
mov
mov
push
adc
pop
add
punpckhbw
jecxz
push
outs
ins
mov
pop
daa
jp
mov
retf
loope
push
stos
std
add
mov
xchg
jg
jnp
sub
and
fsubp
cdq
sub
fisttp
imul
out
xchg
jmp
mov
sbb
(bad)
or
mov
mov
inc
xor
loopne
and
je
clc
adc
push
mov
push
lock
rcr
sbb
out
mov
pop
jno
outs
sub
pop
cmps
sub
ja
jnp
xchg
cs
xchg
ret
ds
dec
mov
fdivrp
mov
clc
and
jmp
mov
pop
stos
jle
outs
jnp
xor
or
sbb
outs
xchg
cmp
mov
pop
pop
test
jle
mov
imul
or
sti
into
sti
mov
or
xchg
push
into
ss
lea
mov
retf
add
sbb
retf
fst
push
jmp
mov
sti
sbb
dec
push
es
xchg
cs
jnp
lds
sti
stos
mov
ds
mov
fisub
stos
mov
dec
enter
sub
push
mov
int
addr16
add
or
jle
mov
imul
xchg
sub
pop
out
jnp
mov
sub
mov
push
out
push
mov
mov
(bad)
pop
jb
cmp
mov
data16
sub
pop
or
shr
dec
add
dec
mov
or
xchg
push
jnp
cmp
cld
rcr
push
stos
inc
dec
pop
mov
imul
cdq
mov
xchg
into
dec
sahf
mov
das
mov
xlat
mov
fnstenv
mov
pop
jo
mov
stos
mov
jbe
mov
push
ret
stos
cmp
jecxz
outs
pusha
mov
repz
daa
dec
les
inc
adc
cmp
ret
mov
lds
div
(bad)
pop
sub
jmp
jb
iret
xchg
retf
or
neg
pop
xadd
cmp
aas
scas
or
nop
fucomi
mov
call
movs
dec
mov
(bad)
outs
pop
adc
cs
mov
xor
les
scas
ds
jnp
fwait
mov
cli
rcl
lods
cli
test
fiadd
es
xor
cmp
addr16
xor
scas
mov
or
ror
imul
shr
fistp
(bad)
jns
mov
mov
dec
sub
out
cmp
das
push
sti
push
sub
cwde
jg
jmp
jge
dec
into
pop
add
cmp
mov
inc
cdq
into
push
jmp
cli
mov
mov
lock
dec
sahf
xchg
fwait
das
xor
inc
mov
xor
ret
push
and
cmps
fstp
cmp
push
adc
dec
cmp
mov
xlat
jae
adc
sbb
adc
add
dec
mov
push
dec
shl
inc
push
out
aam
les
pop
sti
cmps
mov
int
into
sahf
movs
mov
mov
push
into
in
inc
leave
retf
fcomp
icebp
adc
add
add
outs
dec
aas
sar
scas
pop
push
jne
jg
mov
cmps
add
rol
sub
fcmovnbe
retf
aas
and
jmp
into
scas
addr16
pop
fimul
cmp
pop
adc
test
push
inc
xlat
jae
mov
lahf
xchg
adc
aaa
jb
xor
or
jle
xchg
dec
popa
sbb
hlt
push
in
push
push
mov
mov
fwait
mov
adc
jno
out
jnp
jle
aad
xlat
(bad)
cmp
xchg
(bad)
sahf
sbb
dec
lock
xor
imul
dec
add
imul
xchg
push
faddp
cmp
mov
popa
scas
pop
arpl
mov
and
sbb
jge
movs
shl
mov
repz
adc
sbb
jnp
jg
retf
fcomp
icebp
adc
cmp
mov
cmc
jge
mov
movs
or
add
cmp
mov
mov
shl
xchg
push
pop
dec
jno
cli
test
sbb
retf
cmps
add
mov
cmps
outs
sbb
mov
in
push
popa
das
ret
push
aad
xchg
pop
sahf
sub
mov
dec
push
mov
xor
retf
or
mov
add
or
push
fmulp
pop
pop
or
ss
fninit
or
stos
repnz
inc
jbe
fimul
mov
loop
adc
fwait
imul
xor
idiv
aas
lea
mov
jmp
cli
out
fmul
dec
mov
pop
pop
in
retf
jnp
sti
das
inc
mov
je
adc
scas
test
inc
arpl
pushf
fs
or
ror
xchg
mov
in
in
pop
imul
push
push
pop
scas
ds
inc
iret
push
cmps
or
adc
mov
pop
test
aam
fnstcw
adc
pop
out
dec
cwde
cs
dec
call
mov
outs
jmp
cmp
lods
cld
jo
(bad)
jne
inc
cmc
jbe
mov
call
jge
sub
out
retf
cli
hlt
outs
jg
mov
fwait
dec
and
call
ds
sbb
jno
outs
jge
fadd
fisub
inc
push
jle
cdq
rcl
ja
aas
lock
aas
sub
pusha
retf
or
jne
or
add
in
xor
sub
imul
dec
fisttp
jmp
jne
dec
mov
xor
add
cmc
push
in
test
jbe
mov
fucomi
jmp
movs
cs
mov
xchg
outs
cs
add
out
in
loop
jg
retf
push
and
cmps
mov
rcl
pop
fsub
ds
jnp
or
sbb
fndisi(8087
fiadd
je
fisttp
out
xor
push
jnp
pop
mov
dec
push
pushf
fld
(bad)
mov
jle
outs
cli
cs
inc
xor
mov
or
xchg
xchg
into
or
adc
jbe
outs
(bad)
out
pop
scas
das
out
cmp
xchg
sbb
aad
mov
(bad)
je
fisttp
out
mov
leave
inc
xor
(bad)
out
and
mov
ret
imul
jmp
pop
mov
and
push
dec
movs
push
sti
cs
test
and
(bad)
or
mov
xchg
dec
mov
mov
push
stos
and
sbb
or
push
add
xchg
pop
push
lods
cs
sbb
or
and
hlt
sbb
jne
jmp
and
inc
dec
dec
sbb
mov
mov
and
push
jmp
push
jp
ss
sahf
retf
dec
and
or
jmp
sbb
(bad)
sub
add
mov
push
call
push
cmps
cs
mov
and
scas
les
iret
fsubp
jnp
mov
in
dec
ja
inc
jecxz
xchg
push
lea
(bad)
mov
data16
daa
loop
push
(bad)
(bad)
jnp
mov
call
scas
inc
push
push
pop
retf
repz
sub
loope
add
ds
fcmovnbe
retf
mov
jl
mov
jecxz
jecxz
mov
cmp
loop
mov
outs
dec
mov
(bad)
dec
push
daa
jmp
scas
pusha
fwait
mov
test
cmps
idiv
stos
mov
dec
outs
sub
add
adc
into
lock
adc
ins
cmp
call
(bad)
jge
lahf
call
adc
or
cmc
outs
push
sbb
pusha
jo
lds
popa
(bad)
fcomp
mov
mov
cs
out
xchg
push
xlat
lea
ror
aas
ror
jne
sbb
mov
repnz
(bad)
jmp
pop
mov
stos
jle
jnp
es
fmul
out
in
outs
repz
out
mov
(bad)
popa
fidivr
(bad)
repnz
shl
mov
fimul
into
outs
mov
gs
pop
sbb
pusha
push
sbb
mov
(bad)
scas
mov
pop
or
out
push
and
and
inc
mov
(bad)
push
pop
sub
mov
mov
push
inc
aad
pop
imul
xor
jmp
mov
jg
into
sbb
cmp
scas
mov
or
imul
sbb
push
cmp
jge
xchg
mov
dec
push
daa
jmp
sbb
jp
fistp
scas
test
adc
jmp
test
mov
aaa
mov
push
push
outs
dec
aam
scas
out
fisttp
test
imul
and
adc
push
jnp
imul
(bad)
sub
fwait
dec
retf
dec
shl
(bad)
mov
fucomip
outs
mov
cwde
out
cli
jnp
or
repnz
retf
sub
lahf
sti
cmp
push
mov
mov
xor
pop
or
daa
pop
push
dec
leave
ds
aad
icebp
pop
stos
(bad)
mov
inc
xchg
push
test
sub
(bad)
leave
ds
dec
push
mov
mov
fsubrp
add
push
sti
retf
dec
sbb
push
mov
ins
stos
ds
jns
sahf
movs
fwait
loopne
jnp
push
fimul
jb
xor
leave
ds
mov
cmc
in
and
pop
inc
dec
fdivp
cmps
sub
cmp
adc
jo
mov
dec
(bad)
mov
dec
mov
pop
bound
mov
movs
mov
add
gs
push
mov
jmp
xor
out
fisttp
push
mov
jns
mov
sbb
mov
rcl
sbb
mov
dec
inc
add
jp
out
nop
mov
dec
and
imul
or
call
jbe
fnstcw
sbb
xor
lahf
lods
jmp
fld
pop
pop
shl
mov
test
jge
es
out
out
daa
loope
dec
dec
adc
push
xchg
dec
dec
jbe
mov
call
retf
and
popf
sti
(bad)
test
dec
dec
arpl
mov
imul
hlt
aaa
pop
ins
sub
sbb
sbb
pop
icebp
add
arpl
popf
stos
xchg
inc
xchg
cmp
test
adc
repnz
int3
(bad)
xlat
mov
dec
jns
push
xchg
mov
pushf
jnp
or
in
outs
pop
cmp
jmp
rcl
sub
ins
stos
scas
mov
sub
fcmovnu
pop
xor
mov
fcmovnu
jmp
add
iret
std
fwait
cmps
mov
outs
mov
retf
xchg
lea
adc
(bad)
aam
jg
retf
idiv
push
and
push
shl
cmp
pop
mov
addr16
sbb
aad
push
add
stos
push
lock
cli
je
fucomip
stos
xchg
call
cli
fsubr
sub
(bad)
retf
cs
mov
push
dec
dec
push
pop
jb
push
aas
or
out
add
fbstp
lahf
inc
imul
jmp
popf
push
fwait
outs
retf
jnp
and
inc
popw
jle
adc
scas
pop
mov
mov
lds
cmp
dec
sahf
pop
shr
push
and
and
mov
sti
push
fimul
sub
ja
stos
cmp
scas
mov
jg
outs
dec
ss
mov
cmp
xchg
(bad)
cmp
aad
mov
jno
bound
xchg
and
push
xchg
sub
cmps
js
adc
dec
retf
inc
movs
add
jbe
fiadd
add
mov
push
lods
push
fs
or
or
xor
add
mov
sub
cmps
sbb
and
mov
inc
jae
cmc
fwait
in
retf
sti
jae
cmp
sbb
cmp
test
mov
nop
jg
fld
frstpm(287
inc
rol
clc
(bad)
and
or
sub
cmps
xchg
dec
dec
in
fisttp
outs
fist
adc
inc
cli
in
clc
adc
push
jmpw
inc
lahf
inc
dec
adc
stos
lock
outs
neg
in
xchg
sub
ds
ret
xchg
or
xor
pusha
xchg
std
mov
mov
mov
es
jmp
fnstsw
in
rcl
(bad)
js
aam
mov
mov
lea
xor
cmp
fstp
aam
fstp
nop
adc
aas
jb
inc
xchg
sbb
rcr
in
mov
mov
ret
dec
fisttp
jmp
adc
gs
jge
jnp
adc
jl
or
pop
inc
mov
call
jo
into
adc
jnp
imul
retf
mov
mov
adc
das
into
(bad)
iret
out
push
lds
mov
ds
es
sti
retf
jmp
or
xor
out
dec
(bad)
xchg
adc
mov
push
out
test
mov
(bad)
mov
xchg
jnp
and
ret
and
pop
loope
mov
out
and
mov
or
repnz
sbb
xchg
jae
mov
rol
inc
idiv
aam
sub
test
push
inc
jae
xchg
(bad)
bound
pop
xchg
sbb
add
mov
pop
inc
dec
test
mov
outs
add
in
mov
dec
fidivr
mov
movs
jae
adc
push
add
mov
xchg
jge
and
or
sahf
fld
add
pop
mov
adc
rcr
mov
sbb
ror
xchg
jle
sahf
dec
sahf
push
ret
push
outs
lods
sti
cmp
iret
and
jg
retf
enter
adc
pop
int3
or
jle
outs
(bad)
movs
add
mov
inc
and
lahf
outs
mov
mov
xchg
sahf
shr
or
pop
and
shr
pop
loop
mov
daa
test
stos
pushf
inc
xchg
add
pop
(bad)
or
xor
jnp
add
xchg
push
pusha
push
or
add
push
(bad)
arpl
cli
ror
pop
pop
ins
cmc
inc
ds
fcmovbe
(bad)
cs
push
and
and
psubb
outs
push
or
arpl
xchg
popf
outs
aaa
int3
adc
loopne
push
mov
xor
xchg
loope
mov
outs
scas
push
xchg
mov
pop
sahf
shl
in
xchg
jmp
mov
adc
aam
mov
inc
xchg
adc
scas
mov
(bad)
push
mov
mov
retf
push
push
or
repz
js
mov
fwait
adc
into
jmp
push
mov
adc
push
jnp
adc
cmp
lods
js
cmp
fs
out
jg
mov
sahf
or
retf
mov
cmp
cmp
pop
call
out
add
imul
or
push
lock
addr16
popa
out
add
add
aad
dec
fisttp
xor
nop
ror
hlt
(bad)
outs
xchg
int3
mov
and
sub
cmps
jecxz
out
(bad)
inc
jle
outs
push
sbb
movs
dec
jge
imul
es
lea
jbe
mov
stos
jle
jnp
arpl
ds
aam
cmp
adc
mov
dec
inc
sub
mov
imul
inc
xor
mov
push
pop
faddp
add
jp
xchg
xchg
jmp
push
dec
out
add
mov
pop
lahf
push
pop
pusha
xor
xor
lea
popa
fcomp
jge
(bad)
dec
aaa
dec
into
repz
jle
gs
out
(bad)
movs
iret
aad
imul
cwde
mov
test
ret
dec
out
inc
pop
push
dec
into
mov
lea
mov
xor
push
pop
inc
outs
fstp
mov
mov
dec
sub
lods
mov
inc
and
mov
sti
pop
scas
push
fild
outs
cmp
push
sbb
lock
(bad)
mov
dec
(bad)
pop
test
sti
mov
inc
ds
mov
pop
sub
pusha
jp
imul
(bad)
lods
dec
enter
inc
clc
jg
sbb
push
adc
sahf
test
mov
lds
cwde
xchg
divps
shr
jge
stos
or
les
sub
mov
push
out
push
inc
lods
add
jnp
arpl
fadd
(bad)
cmp
retf
mov
data16
xor
pop
dec
dec
sti
cmp
xchg
mov
mov
jnp
dec
mov
or
xor
jnp
add
in
pop
fwait
dec
stos
inc
mov
nop
xlat
imul
xor
xor
retf
mov
xchg
scas
push
add
inc
pop
fwait
dec
(bad)
jle
sub
popa
cwde
inc
xor
pop
cmps
aam
div
jnp
xchg
ror
ret
cmp
cmps
out
scas
push
fdivrp
mov
clc
and
mov
inc
je
push
pop
stos
jle
outs
jnp
xor
jno
scas
or
sbb
outs
xchg
les
fistp
jnp
jecxz
pop
xor
mov
out
jge
test
mov
or
cs
push
into
ss
mov
retf
add
jg
ficomp
inc
sub
jle
xor
or
ds
cs
sbb
mov
scas
loop
dec
es
xchg
cs
test
xchg
into
daa
(bad)
sti
stos
mov
ds
fimul
mov
dec
mov
adc
or
into
sub
cmp
jbe
int
ds
(bad)
push
pop
push
mov
(bad)
pop
sbb
mov
aaa
push
and
jmp
js
dec
sbb
stos
jbe
enter
push
fwait
xor
mov
fsubrp
into
jb
jbe
or
push
jmp
sti
aam
pop
xchg
dec
xchg
jle
popa
scas
popf
ror
push
iret
nop
and
repnz
sub
loopne
sti
arpl
xlat
sbb
jg
xchg
dec
fimul
dec
push
test
fisttp
sub
stos
xor
add
retf
mov
fimul
jle
aaa
mov
xor
push
sahf
sbb
das
call
and
jmp
js
into
mov
mov
jmp
out
scas
or
(bad)
out
mov
sar
arpl
xor
jb
fwait
cmp
mul
fstp
sbb
jb
dec
ds
dec
and
in
ret
aad
stos
movs
std
xor
sub
sbb
sub
lahf
in
mov
jmp
dec
stos
jle
outs
pop
mov
fwait
mov
js
push
sbb
mov
loope
sbb
cmp
xchg
dec
jge
jmp
sbb
pop
push
and
ficomp
xchg
aam
in
adc
adc
sbb
lods
(bad)
into
movs
pop
out
xor
and
mov
xchg
xchg
icebp
jmp
add
aad
mov
jecxz
rcr
scas
or
mov
sbb
pop
jmp
stos
arpl
dec
stos
outs
out
setno
inc
loop
jnp
pop
add
push
sub
push
dec
(bad)
aas
jo
fcomp
fwait
adc
fisub
push
fimul
sti
(bad)
push
aaa
jmp
pop
repz
mov
xchg
sbb
inc
mov
jge
inc
pop
mov
es
push
adc
inc
pop
xor
add
sub
sti
lock
test
iret
iret
(bad)
xor
jecxz
sahf
test
outs
sub
adc
mov
aaa
push
mov
into
aam
jmp
outs
sti
test
push
outs
scas
sahf
ror
loopne
push
scas
push
fild
outs
cmp
push
sbb
lock
(bad)
mov
inc
(bad)
pop
test
sti
mov
inc
ds
mov
pop
sub
pusha
jp
imul
(bad)
lods
dec
leave
and
loopne
ja
push
sbb
sub
mov
fist
mov
imul
xor
bound
mov
cmp
jb
inc
out
mov
fistp
shl
nop
lds
unpckhps
test
or
jle
xor
or
sub
imul
fwait
xchg
stos
cmp
shl
addr16
stc
imul
loope
push
add
loopne
mov
(bad)
lods
add
mov
and
add
(bad)
cmp
adc
xor
pop
sti
dec
sti
cmp
xchg
mov
imul
push
dec
mov
or
jmp
jnp
add
in
pop
fwait
xor
pop
nop
xlat
imul
xor
xor
fist
inc
pop
fwait
dec
cmps
jle
sub
popa
cwde
inc
xor
pop
cmps
aam
div
jnp
xchg
ror
ret
cmp
cmps
out
scas
ja
sti
mov
clc
and
mov
inc
je
push
pop
stos
jle
outs
jnp
xor
jo
scas
or
push
outs
xchg
les
dec
ds
jecxz
pop
xor
mov
out
jge
test
mov
or
cmps
sti
push
into
ss
mov
retf
add
jle
ficomp
inc
sub
jle
xor
or
ds
sbb
mov
scas
loop
dec
cs
xchg
cs
test
xchg
into
sbb
sti
stos
mov
ds
stos
mov
fisub
push
mov
xor
enter
sub
push
mov
int
addr16
call
or
cmp
es
and
outs
test
retf
neg
xor
jle
fs
stos
cmp
fcmovbe
(bad)
cs
in
stos
mov
fistp
xor
fs
out
jle
jmp
adc
(bad)
and
fimul
jle
mov
pop
jp
(bad)
movs
in
jae
(bad)
dec
out
mov
retf
call
adc
sahf
sub
jle
shl
lahf
or
loope
pop
stos
jp
and
jmp
dec
mov
jl
mov
daa
dec
fimul
jmp
add
add
dec
stos
(bad)
jmp
setle
inc
push
outs
in
jae
out
and
dec
sar
adc
pop
(bad)
sti
inc
sbb
sbb
div
xor
pushf
push
push
jp
ds
mov
mov
retf
xor
loope
inc
fld
pop
cmp
xor
popa
push
adc
mul
or
(bad)
ss
pfmin
xor
or
icebp
mov
jge
mov
pop
sub
stos
repz
fwait
loopne
cmp
cs
movs
mov
or
pop
shr
or
retf
outs
ins
out
push
pop
es
ds
sbb
cs
mov
ds
push
push
pop
mov
jle
push
int3
dec
sub
xor
xor
push
bound
fisubr
outs
aaa
int3
sti
and
sub
inc
ja
push
fwait
movs
adc
xor
jbe
data16
mov
cmps
push
cmp
dec
mov
test
ror
jge
pop
fwait
push
sti
cs
sbb
scas
xchg
into
jns
push
sbb
xor
mov
into
pop
arpl
cmp
ret
push
jg
outs
inc
leave
movs
ret
pop
scas
hlt
rcl
out
daa
popf
mov
jp
push
pop
fistp
imul
not
jo
hlt
(bad)
pop
into
cmps
and
pushf
pop
mov
xor
ja
add
push
mov
imul
xchg
dec
jnp
pop
and
mov
jmp
cmps
mov
retf
pop
nop
(bad)
dec
jnp
push
pop
mov
xchg
sub
cmp
sub
sti
bound
xchg
jae
ds
dec
and
jno
and
jmp
cmp
mov
fistp
dec
sahf
movs
mov
and
lahf
aad
and
out
jmp
push
add
add
fwait
movs
mov
inc
outs
test
shl
mov
lock
mov
fisttp
sahf
test
iret
mov
sbb
imul
push
push
fdiv
xor
call
push
mov
sbb
mov
and
or
push
sbb
repnz
push
(bad)
pusha
ins
rcl
je
and
movs
jo
push
adc
dec
mov
lahf
jnp
pop
adc
inc
scas
unpcklps
fwait
dec
inc
or
outs
xchg
ja
shr
mov
leave
fld
mov
push
mov
inc
and
ins
adc
imul
ds
fsubr
push
dec
push
outs
add
stos
xchg
imul
sub
mov
outs
cmps
leave
sbb
jne
fmul
mov
push
and
ss
aad
inc
mul
out
imul
rol
loopne
repnz
and
xor
xchg
(bad)
ror
adc
mov
jbe
enter
fimul
fdivp
lahf
fimul
cmp
(bad)
xchg
push
dec
and
cmp
dec
push
jg
iret
dec
lds
jno
mov
in
adc
mov
sub
mov
mov
mov
stos
repz
hlt
cs
into
sub
mov
inc
xchg
fist
aas
sti
cmc
jnp
pop
dec
stos
aad
jmp
adc
(bad)
xchg
out
jmp
les
leave
loope
icebp
sub
lea
mov
dec
popa
(bad)
ret
out
and
sub
jecxz
enter
into
pop
fcomi
les
inc
aaa
sbb
pop
mov
pop
jnp
arpl
pop
into
jmp
shr
xchg
into
mov
jnp
cmps
fstp
retf
mov
dec
sbb
fisubr
mov
scas
cmp
imul
mov
push
ss
mov
mov
pusha
inc
ss
dec
retf
pop
push
sub
arpl
outs
push
cmp
adc
dec
popa
pop
retf
test
sbb
daa
dec
les
ret
imul
sub
jge
(bad)
fwait
mov
xor
xchg
adc
mov
or
in
pop
cmp
arpl
mov
stos
js
xchg
mov
push
mov
adc
sbb
xlat
add
stos
fstp
pop
sub
fwait
mov
cmp
ror
hlt
rcr
inc
fwait
icebp
js
inc
xchg
fcomip
jmp
or
stos
add
xchg
lahf
add
mov
retf
outs
popf
scas
jge
test
or
data16
jp
(bad)
mov
jmp
iret
int
retf
aas
scas
dec
retf
sbb
ja
mov
adc
hlt
data16
aad
push
out
imul
dec
rcr
jb
inc
xchg
(bad)
hlt
call
jmp
xor
mov
rcr
outs
sbb
inc
aas
stc
push
push
pop
iret
mov
xchg
push
sub
jbe
rcl
in
mov
retf
repz
cmp
jp
(bad)
call
push
out
lds
jb
(bad)
jbe
xchg
xor
inc
xor
les
sub
push
sbb
je
outs
push
call
lods
push
or
aas
stos
retf
push
and
call
pop
adc
sub
jp
imul
fild
stos
outs
into
cmp
and
lahf
sub
sub
inc
(bad)
in
jecxz
fcmovnbe
mov
jnp
add
repnz
(bad)
bound
mov
mov
mov
cwde
fbstp
jbe
pop
retf
mov
or
sub
les
pop
pop
sbb
jmp
sti
push
or
mov
es
ret
scas
pop
cmp
aam
cmp
scas
ds
fisttp
call
outs
lahf
(bad)
cmp
ficom
add
dec
aaa
push
aas
jp
sub
stos
daa
mul
(bad)
popa
pop
ret
push
aas
jmp
jg
mov
(bad)
jbe
and
jnp
pop
sti
jmp
mov
dec
das
mov
fbstp
sub
stos
xchg
js
sbb
jno
mov
call
imul
lahf
outs
jbe
sti
inc
push
mov
into
lahf
in
dec
mov
cmps
call
(bad)
mov
imul
or
jno
sub
mov
mov
add
iret
push
inc
dec
out
mov
pop
retf
sub
into
aam
iret
test
add
fbstp
or
sub
sbb
or
pop
movs
aam
imul
mov
jo
mov
mov
mov
scas
ds
mov
xor
(bad)
push
xchg
and
push
call
lock
mov
xchg
out
jb
and
jb
add
mov
or
sub
stos
cmc
mov
movs
iret
push
and
sub
and
pop
iret
add
add
mov
or
fbld
push
sub
adc
sbb
enter
inc
fwait
iret
(bad)
pop
pop
add
ret
mov
sbb
fisub
das
loope
scas
(bad)
xchg
xor
lods
(bad)
out
mov
aas
mov
pop
mov
mul
dec
outs
fdivr
or
imul
sbb
fsubr
push
mov
lods
push
pop
xor
ds
add
sbb
jne
js
cwde
sbb
test
fsub
xchg
pop
xchg
push
in
cmp
movs
cmc
sub
ins
mov
push
aaa
imul
pop
lock
inc
js
es
fwait
jno
in
mov
sub
mov
dec
push
mov
sub
inc
enter
(bad)
aas
jecxz
aaa
inc
and
fisttp
jecxz
jecxz
clc
cmp
punpcklwd
retf
fwait
sti
stos
jecxz
call
xor
xchg
or
pop
fwait
adc
popa
pop
pop
sar
sbb
sub
cmp
jmp
add
jnp
ret
cs
ss
push
jle
in
jnp
lahf
xchg
sbb
div
sbb
add
xchg
es
or
and
scas
lods
push
hlt
xchg
mov
retf
xchg
into
enter
stc
mov
inc
jmp
leave
cs
fmul
lods
jle
cwde
inc
cmp
(bad)
out
xor
lahf
cmp
mov
retf
push
sbb
movs
pop
lea
idiv
scas
push
(bad)
stos
mov
xor
or
push
stos
outs
into
push
mov
xor
inc
outs
push
or
dec
out
not
sahf
jnp
cmps
(bad)
or
fnstsw
movs
in
jg
inc
pop
(bad)
in
cmc
mov
xor
mov
mov
std
mov
ret
add
sbb
inc
mov
xor
addr16
add
xchg
cmp
mov
push
xchg
mov
sbb
dec
cli
inc
inc
pop
test
xor
out
add
iret
outs
adc
lock
pop
and
aas
sbb
scas
sub
sbb
cmps
mov
cmc
data16
mov
imul
fdivp
and
mov
dec
xor
inc
cs
fs
or
in
ss
mov
in
add
out
retf
out
push
add
add
pop
mov
stos
mov
mov
cli
xchg
in
out
jmp
jb
mov
aaa
(bad)
xchg
push
jmp
out
xor
scas
adc
push
popa
pop
retf
jnp
enter
mov
inc
pop
out
xor
pusha
inc
push
dec
push
xchg
xor
jnp
pop
jmp
fisttp
xor
xor
sar
aad
ds
inc
sub
jnp
(bad)
out
mov
xchg
pop
push
jnp
sub
or
jmp
popw
retf
es
hlt
pop
sbb
retf
sbb
cwde
jo
into
jmp
idiv
retf
jle
mov
mov
dec
jle
mov
push
(bad)
mov
dec
adc
pop
jno
dec
push
out
call
mov
xchg
movhps
mov
cmp
out
xor
jb
sti
lock
out
sub
(bad)
xor
je
retf
push
stos
repz
outs
jmp
fadd
imul
sbb
add
lea
outs
ja
push
repz
adc
daa
mov
adc
ror
adc
or
(bad)
bound
jecxz
sti
xor
jnp
clc
fwait
movs
ret
push
adc
adc
(bad)
dec
std
cs
jp
push
jp
or
sbb
xor
(bad)
ja
mov
lahf
out
idiv
test
dec
pop
ins
xchg
xchg
sub
cmp
scas
mov
sub
push
lahf
push
mov
lock
or
push
cmc
mov
loope
push
jmp
jo
mov
mov
(bad)
pop
fwait
xor
xor
inc
or
or
mov
lds
mov
lea
push
out
jne
arpl
push
dec
pusha
mov
inc
into
cmps
fisub
popa
sbb
sub
jnp
mov
and
mov
out
(bad)
enter
jg
mov
pop
pop
pop
xor
xchg
retf
in
inc
inc
add
and
push
jmp
fmul
push
inc
mov
das
inc
xchg
jle
mov
or
push
clc
cs
xor
dec
fdivr
int3
add
mov
mov
rep
test
outs
ja
sub
stos
mov
mov
jp
push
and
and
jne
xlat
sbb
pop
jb
inc
adc
dec
out
cmp
xchg
dec
popa
push
add
push
or
mov
retf
pop
mov
into
sbb
jg
in
popa
mov
xchg
mov
xor
ja
out
push
fild
mov
lahf
dec
sub
jns
dec
enter
push
repnz
mov
sub
repz
dec
(bad)
dec
cmp
enter
addr16
imul
loopne
lock
adc
lahf
cmp
adc
mov
jl
ret
lock
sbb
std
sub
fistp
dec
fistp
pop
out
cmp
fld
jg
rcr
dec
jmp
xchg
dec
fst
sahf
and
mov
test
mov
mov
fist
(bad)
js
(bad)
xor
cmp
call
hlt
pop
and
mov
lahf
icebp
jmp
jge
add
mov
das
pop
loop
cmps
mov
outs
mov
xchg
(bad)
push
dec
fwait
or
xor
outs
or
mov
mov
mov
push
dec
inc
add
inc
jbe
and
(bad)
pop
int
stos
cmp
mov
pop
pushw
jnp
or
lds
fisttp
repnz
xchg
mov
mov
add
adc
cmp
lea
pop
push
ja
call
xchg
add
xchg
test
or
mov
xchg
scas
inc
adc
rol
jbe
push
and
mov
shl
dec
mov
sbb
sub
rol
lods
cs
sbb
in
mov
push
(bad)
data16
in
cmp
cmp
daa
es
int
std
mov
push
and
jmp
xadd
add
mov
inc
inc
sub
in
push
retf
dec
sahf
xchg
pop
ja
scas
sub
xchg
dec
xchg
pusha
sti
stos
sti
js
xor
xchg
(bad)
aaa
bound
inc
xchg
push
push
loopne
mov
jae
out
inc
and
push
dec
lea
push
add
fisttp
loopne
(bad)
movs
dec
js
xchg
cmp
dec
in
dec
mov
mov
ds
push
sbb
dec
in
sahf
mov
jae
inc
je
call
sahf
dec
ret
push
sub
(bad)
shr
cmp
jp
add
mov
es
dec
adc
jnp
or
sar
xchg
(bad)
cmp
retf
xor
cmp
mov
jg
or
push
mov
or
stos
fwait
push
mov
jmp
xchg
inc
jne
push
stos
push
das
dec
mov
xchg
retf
jnp
(bad)
and
xchg
xor
xchg
jmp
xchg
shl
jae
stos
repz
jno
mov
jno
sub
fidivr
mov
xor
xlat
pop
out
nop
jnp
pop
sbb
aam
mov
retf
je
push
mov
sbb
outs
or
movs
retf
imul
push
fidiv
sub
lahf
push
pop
push
sti
add
jle
jnp
rcr
mov
dec
mov
adc
out
fwait
pop
test
rcr
imul
das
mov
sbb
xor
push
push
jmp
out
ficom
mov
mov
call
push
inc
je
push
sti
retf
dec
ja
repz
cli
sbb
stos
xchg
mov
fwait
mov
cmc
sbb
retf
in
sbb
fld
mov
mov
in
mov
sbb
aam
jg
retf
div
push
push
ds
shl
cmp
push
mov
addr16
sbb
test
push
sar
jp
mov
in
stos
xchg
xchg
outs
cmps
sahf
shl
cli
fsubr
sub
pop
(bad)
mov
adc
arpl
push
inc
dec
jne
ficom
aaa
into
sar
adc
pop
js
add
sti
les
fnstsw
mov
xchg
jmp
cmp
neg
bound
mov
cmp
outs
mov
fiadd
add
loope
dec
dec
adc
mov
dec
dec
jbe
mov
call
retf
and
popf
sti
(bad)
movs
pop
jl
pop
adc
imul
hlt
aaa
pop
ins
sub
adc
sub
jp
arpl
test
xor
cmp
popf
scas
cmps
and
mov
sti
fild
adc
mov
dec
dec
jle
xchg
mov
xchg
jnp
or
daa
outs
pop
cmp
out
aas
push
xadd
push
pop
jae
stos
call
xchg
cdq
test
outs
xchg
stc
push
cmp
test
mov
movs
ja
fwait
mov
push
outs
movs
fiadd
push
(bad)
into
fild
fisttp
shr
jae
into
xchg
sahf
jecxz
cmp
lods
cmp
dec
mov
loope
cs
mov
push
in
inc
sahf
(bad)
jle
mov
sbb
das
xor
dec
fisub
jmp
mov
mov
mov
pop
mov
mov
scas
jg
add
jnp
xor
retf
cmp
or
mov
inc
fwait
clc
popf
mov
test
int
pop
into
sub
fistp
pusha
xor
es
pop
pop
outs
and
add
mov
sbb
pop
(bad)
pop
adc
push
and
mov
pop
inc
dec
mov
(bad)
movs
enter
(bad)
hlt
test
push
push
unpcklps
cmps
lods
je
fwait
or
rcr
push
jge
xor
sub
jle
retf
or
je
push
dec
test
jp
adc
jle
fdiv
mov
adc
sti
movs
mov
pop
and
jb
jecxz
popa
popf
retf
aas
push
push
loop
mov
add
test
pop
and
(bad)
ds
mov
stos
or
data16
enter
jl
daa
jnp
mov
outs
stos
sbb
push
cmp
mov
push
inc
pop
stos
hlt
and
mov
retf
sbb
xchg
rol
push
jae
push
or
scas
int3
mov
jb
mov
retf
mov
mov
in
sti
cs
jae
and
leave
xor
rcl
arpl
jno
outs
push
mov
and
or
dec
sub
jge
dec
mov
sub
imul
mov
into
sub
and
cmp
mov
adc
dec
sahf
pop
mov
mov
dec
sahf
aam
cmp
retf
and
fldcw
inc
fwait
mov
lods
add
mov
pop
jnp
mov
int3
inc
sub
mov
retf
leave
fisttp
adc
lods
sahf
mov
pop
add
push
or
or
cwde
into
ds
xchg
inc
pusha
ds
adc
cmp
jo
mov
sbb
popf
dec
fimul
rol
mov
mov
mov
pop
jno
(bad)
clc
and
ficom
sub
cmp
mov
mul
xchg
mov
dec
fwait
hlt
mov
popa
or
pop
or
test
sub
fistp
stos
push
inc
outs
mov
xor
jo
push
pop
call
and
mov
adc
out
out
pop
repz
call
pushw
push
ret
scas
xchg
repz
inc
inc
mov
scas
push
out
cs
fs
cmp
cmp
pop
(bad)
call
stc
push
fwait
pop
test
rcr
imul
das
mov
sbb
xor
push
push
jmp
out
ficomp
mov
mov
call
push
inc
je
push
sti
retf
dec
sbb
fidiv
mov
jg
ds
jns
sahf
movs
fwait
loopne
jnp
push
fimul
jb
dec
stos
retf
repnz
les
mov
mov
cmc
in
and
push
outs
dec
fdivp
cmps
sub
cmp
adc
jo
mov
dec
(bad)
rol
lahf
push
scas
jecxz
dec
or
jne
daa
sbb
push
les
mov
dec
push
mov
mov
fsubrp
add
push
sti
retf
imul
push
cs
bound
cmp
dec
mov
addr16
sbb
(bad)
jecxz
shr
jmp
sti
ds
fucomip
stos
xchg
mov
sahf
(bad)
cmp
scas
jecxz
sbb
(bad)
mov
cmp
aas
mov
push
pop
dec
pop
pop
xchg
push
aas
or
jmp
pop
js
add
sti
in
mov
cmps
out
fnstsw
mov
xchg
jmp
cmp
xor
lahf
lods
jmp
retf
pop
xor
mov
mov
inc
dec
jge
es
sti
out
scas
loope
dec
dec
adc
sahf
fwait
xchg
push
xchg
dec
dec
jbe
mov
call
retf
jp
out
popf
sti
(bad)
mov
adc
imul
pop
hlt
aaa
pop
ins
sub
or
jne
stos
icebp
add
arpl
lock
xchg
cmp
lds
mov
rcr
retf
mov
mov
dec
push
jle
xchg
mov
mov
or
cmp
sti
push
addr16
jg
adc
pop
jae
stos
ret
mov
pop
sub
mov
or
ret
add
mov
fstp
jb
or
jmp
retf
pop
iret
push
fisttp
mov
scas
pusha
loop
jle
sahf
mov
mov
push
fsubrp
sahf
aam
inc
mov
mov
xchg
(bad)
mov
jle
add
sub
push
sub
or
cmp
retf
(bad)
and
pusha
pop
xor
mov
mov
jno
repz
cmps
or
pop
into
cmps
xlat
and
data16
dec
mov
into
adc
call
fild
(bad)
push
std
test
xchg
cmp
imul
ds
jbe
scas
cs
idiv
in
mov
mov
jmp
jo
inc
mov
sbb
lods
mov
imul
or
imul
push
(bad)
icebp
adc
lock
mov
sbb
jg
rcr
out
sbb
(bad)
test
push
fs
add
cli
sub
fisttp
aam
rcl
inc
loope
xchg
sub
(bad)
mov
fldcw
mov
sbb
push
cmp
adc
out
xchg
mov
mov
fwait
dec
pop
repz
outs
dec
scas
dec
ret
fwait
inc
push
inc
mov
les
inc
pop
fisub
jmp
stos
sub
ss
stos
arpl
sbb
fneni(8087
and
test
adc
push
lahf
push
call
scas
pop
dec
push
imul
lahf
rol
imul
push
fstp
jb
add
adc
jmp
div
dec
addr16
repnz
sub
sti
cdq
and
sub
or
adc
jg
mov
add
or
in
data16
xlat
adc
lods
adc
clc
cs
fwait
dec
sar
iret
outs
ret
fidivr
pusha
cmps
aam
repz
retf
loope
out
mov
movs
into
push
adc
pop
jg
(bad)
mul
or
inc
into
(bad)
int
out
xor
and
pusha
(bad)
lods
movs
cld
mov
lahf
xchg
mov
movs
mov
xchg
mov
cmp
sbb
lahf
icebp
call
pop
icebp
mov
cmp
scas
or
sbb
pop
xchg
in
(bad)
mov
fsub
add
jecxz
fs
or
outs
mov
xor
sti
fiadd
outs
push
cmp
ja
xor
stc
push
cmps
mov
fimul
test
outs
mov
and
sbb
sub
sti
mov
ds
pop
out
mov
jle
xchg
dec
into
fwait
loope
imul
into
cld
(bad)
aas
adc
dec
mov
adc
cmp
enter
stos
daa
push
jecxz
bound
mov
retf
bound
push
scas
inc
and
scas
xor
into
popf
fwait
cmps
and
mov
addr16
addr16
sar
sti
(bad)
push
into
push
scas
jae
movs
mov
into
push
test
push
dec
sahf
shr
dec
gs
loope
(bad)
or
(bad)
rcr
enter
imul
into
test
daa
mov
jmp
sti
ds
int3
mov
dec
xor
sahf
pop
sahf
pusha
push
jmp
jg
jns
sbb
ror
cmp
in
sahf
pop
shr
jnp
or
sbb
cld
add
push
call
or
ficomp
push
dec
inc
sub
les
jp
pop
adc
sti
(bad)
jp
lahf
push
cmp
mov
jecxz
into
inc
adc
out
sbb
aas
sti
mov
cmp
dec
popf
xor
push
fiadd
inc
retf
jmp
inc
pop
dec
shr
into
add
dec
jns
dec
out
mov
cmp
mov
pop
pop
dec
pusha
pop
sub
mov
fdivr
pushf
cs
adc
xchg
mov
into
mov
push
push
jmp
mov
or
jle
jecxz
into
lock
fidivr
into
mov
outs
out
int3
xchg
(bad)
adc
cli
movs
je
mov
dec
or
outs
dec
into
pop
fdiv
mov
sbb
inc
iret
ficomp
call
and
lds
cs
dec
retf
das
jno
cmp
jno
aam
iret
sti
add
or
or
mov
data16
imul
xchg
sbb
aam
mov
or
cwde
loop
into
sti
ja
rcr
outs
and
fwait
xor
ds
aam
jg
inc
push
sahf
int
(bad)
jno
iret
mov
loop
adc
mov
pop
into
ds
jle
xchg
(bad)
fstp
icebp
out
imul
fidiv
jmp
fimul
inc
je
push
sti
arpl
icebp
adc
cmp
(bad)
and
popa
fcomp
jge
outs
or
inc
movs
sub
dec
in
inc
push
fild
outs
push
add
iret
mov
sbb
imul
int
mov
adc
shl
sub
dec
cmp
jle
jp
out
fimul
mov
jmp
adc
add
mov
movs
lods
sbb
or
sub
nop
stos
jmp
sbb
es
xchg
cs
inc
nop
(bad)
dec
adc
xchg
sbb
retf
imul
into
outs
(bad)
jle
(bad)
rol
movs
into
pop
fisubr
adc
mov
jnp
mov
sub
mov
frstor
jmp
lods
out
ror
ret
pop
outs
(bad)
ins
rcr
ret
iret
outs
cmp
fcomi
push
push
fbld
sbb
mov
jnp
mov
retf
sub
icebp
out
ds
shl
cmp
push
pop
pop
fdivr
jnp
mov
jecxz
aas
ss
call
cs
stos
call
test
mov
loop
repz
inc
inc
mov
out
ds
sub
call
ja
data16
jnp
pop
ficomp
aam
cmp
scas
sub
aas
cmp
jb
inc
hlt
shr
leave
pop
int
inc
jle
xlat
and
ins
sub
lahf
out
(bad)
jno
mov
inc
imul
out
mov
jae
ret
mov
jge
ror
mov
xchg
sbb
inc
mov
jge
clc
sti
fwait
sbb
test
ret
sub
mov
aad
mov
xchg
mov
xlat
pop
xchg
outs
add
pop
retf
mov
adc
ja
pop
iret
dec
sti
cmp
nop
mov
imul
push
dec
mov
or
ret
push
jnp
add
in
pop
fwait
push
inc
mov
nop
xlat
imul
xor
xor
fist
inc
pop
fwait
dec
mov
sti
sub
pusha
cwde
inc
xor
pop
cmps
aad
div
jnp
xchg
ror
ret
sahf
mov
dec
cmps
out
scas
fcmovnu
sti
mov
clc
and
mov
inc
jne
push
pop
stos
jle
outs
jnp
xor
jo
scas
or
push
outs
xchg
lds
lahf
ds
jecxz
pop
xor
mov
out
jge
test
mov
or
push
sti
push
into
ss
outs
xor
mov
cmps
sub
jle
xor
ds
sti
sbb
mov
scas
loop
dec
push
xchg
cs
test
xchg
into
(bad)
(bad)
sti
stos
mov
ds
mov
fisub
push
mov
inc
mov
adc
or
into
sub
and
cs
pop
sti
or
cmp
sahf
pop
out
mov
(bad)
cmc
sbb
ins
gs
fcomp
jmp
pop
ror
pop
ficom
dec
mov
movs
scas
adc
inc
fiadd
ret
je
addr16
idiv
repnz
adc
out
mov
pop
dec
imul
out
sbb
jg
out
pop
test
jmp
cmps
inc
push
mov
retf
imul
outs
xchg
jg
mov
mov
ds
ret
into
sbb
mov
pushf
out
push
or
stos
sub
les
sub
lahf
push
jp
dec
push
mov
ins
dec
mov
dec
daa
sbb
adc
aam
fs
xor
push
push
jmp
lods
and
dec
xchg
stos
push
mov
adc
sub
and
sbb
movs
aas
push
leave
push
and
sbb
jecxz
add
lds
xchg
cld
inc
xchg
xor
(bad)
adc
mov
ficomp
mov
sbb
jo
jl
cwde
cmp
or
sahf
scas
dec
add
push
adc
retf
cmp
data16
fisubr
xchg
fisttp
(bad)
popa
push
inc
das
retf
test
out
cli
gs
(bad)
adc
mov
mov
xchg
pop
push
pop
jno
cli
test
and
mov
push
push
outs
jg
fidivr
jnp
mov
xchg
aas
xor
test
pop
sti
jmp
push
adc
loope
push
cmps
xlat
jp
xchg
sbb
jl
fcmovbe
jno
inc
aas
scas
mov
jae
out
(bad)
pop
and
scas
ret
scas
mov
ja
mov
pop
jno
cli
test
and
jmp
dec
cli
out
jnp
fild
rcr
inc
sbb
or
fwait
fwait
cli
sbb
fild
push
sbb
shr
stos
jnp
xchg
out
mov
jno
cmp
ds
sub
mov
inc
adc
aaa
shr
jle
in
dec
mov
fucomi
push
and
mov
call
arpl
add
xor
mov
dec
test
or
pop
mov
out
mov
scas
aas
sbb
push
pop
jnp
es
inc
jecxz
ins
movs
bound
retf
test
mov
and
les
(bad)
or
or
add
scas
mov
sahf
xchg
dec
outs
movs
bound
inc
xchg
jmp
jg
xor
shl
out
retf
push
xchg
scas
push
movs
retf
aas
push
sti
call
retf
shl
xor
arpl
push
repz
jb
push
test
mov
jae
adc
loope
lock
mov
call
das
inc
mov
hlt
movs
into
out
les
(bad)
loope
ret
or
inc
push
or
and
scas
mov
(bad)
fcmovne
xor
xchg
mov
xlat
add
mov
call
outs
pop
or
and
add
fcmovnb
into
pop
loope
ud2
ds
ror
pop
jnp
addr16
(bad)
das
inc
add
or
sbb
(bad)
loope
ret
add
(bad)
rcr
sub
mov
pop
daa
aam
jbe
retf
hlt
and
cmps
mov
push
mov
mov
pop
retf
pop
push
(bad)
xchg
nop
into
outs
(bad)
fcmovne
xor
xchg
test
(bad)
add
(bad)
rcr
xchg
adc
xlat
add
hlt
xchg
xor
les
adc
aaa
push
scas
fbstp
mov
pop
jno
jb
push
sti
call
(bad)
or
daa
jp
fmulp
mov
inc
sahf
punpcklwd
das
retf
test
and
add
(bad)
les
pop
(bad)
icebp
shl
das
bound
mov
add
test
and
mov
add
pop
out
mul
xchg
sar
dec
xchg
push
xchg
push
xchg
inc
loop
repnz
aam
(bad)
mov
data16
je
fs
pop
inc
jecxz
fsub
mov
pop
rol
and
and
jmp
mov
retf
mov
add
inc
test
sti
cwde
into
lahf
add
out
xlat
adc
jnp
mov
xchg
mov
movs
retf
jnp
push
aaa
in
sub
les
jnp
sti
loop
xchg
pop
not
jecxz
popa
movs
retf
jp
fwait
push
cmp
pop
rcl
das
fimul
inc
cmps
jae
mov
out
add
adc
mov
loop
sbb
jae
adc
loope
out
sar
add
call
xchg
xor
mov
aam
les
test
shl
shl
fild
(bad)
jno
inc
popa
push
xchg
jle
pop
(bad)
arpl
push
repz
add
je
pop
mov
cmp
(bad)
sub
hlt
push
in
(bad)
add
adc
loope
mov
bound
inc
xchg
sti
sahf
movs
stos
add
or
pop
xor
mov
and
scas
rcl
je
push
or
adc
bound
scas
or
div
icebp
jp
ret
xchg
inc
mov
pop
push
ret
es
test
xchg
xchg
into
outs
call
adc
(bad)
cmps
mov
or
dec
pop
pop
inc
outs
ud2
movs
cmp
xor
push
xchg
xor
fcmovnb
dec
inc
pop
and
data16
mov
(bad)
and
xchg
adc
push
push
scas
sbb
pop
xor
jae
ds
gs
or
sahf
xchg
retf
popa
scas
(bad)
call
xor
sub
into
add
push
mov
call
pop
(bad)
fistp
sbb
test
(bad)
push
icebp
mov
add
inc
mov
outs
xchg
push
fwait
add
jnp
jmp
sbb
sub
fucomi
xor
pop
icebp
cmps
mov
std
je
(bad)
not
and
popa
movs
mov
inc
test
and
daa
outs
xor
cmp
add
rcr
fwait
sbb
jmp
cmps
jnp
div
call
inc
push
or
scas
repnz
xchg
xlat
cmp
xchg
or
or
pop
sbb
aam
jbe
xor
cwde
ret
add
inc
sbb
mov
imul
into
push
add
mov
scas
aas
dec
or
ret
stos
cmp
lahf
out
stos
xchg
jmp
data16
and
xchg
test
ss
shl
retf
inc
sub
jle
mov
fild
push
out
and
push
sar
(bad)
mul
dec
pop
push
dec
cmps
inc
xchg
cmps
cs
xlat
mov
loope
pop
into
out
push
ror
mov
mov
xchg
dec
push
dec
and
outs
add
stos
(bad)
loope
push
adc
pop
das
imul
and
daa
xchg
movs
bound
push
clc
push
hlt
and
mov
push
(bad)
out
retf
rol
shl
xor
lds
call
out
loope
push
scas
shr
je
fbstp
dec
popa
(bad)
jno
jb
push
inc
adc
aam
jbe
retf
inc
cmp
pop
mov
mov
call
sub
hlt
data16
gs
retf
dec
push
dec
scas
fild
(bad)
retf
mov
xchg
retf
pop
push
adc
and
push
mov
push
jmp
dec
push
movs
ret
test
xchg
xchg
cs
pop
mov
dec
scas
shl
pop
xor
jno
or
outs
(bad)
fcmovne
xor
or
jmp
add
push
fs
pop
pop
inc
scas
punpcklwd
push
or
les
shl
adc
jbe
sbb
fild
sbb
push
scas
xor
loope
ret
sbb
je
xchg
imul
call
fistp
sbb
aam
jg
xor
pop
dec
push
shr
(bad)
inc
outs
push
ja
adc
inc
jnp
hlt
ficom
stos
and
retf
push
xor
(bad)
aad
mov
mov
adc
outs
imul
mov
addr16
out
sti
mov
push
cmp
push
adc
xchg
cmp
scas
push
and
ds
sbb
(bad)
or
daa
jp
rcl
xchg
fisttp
dec
push
pop
(bad)
mov
sbb
(bad)
loope
pop
into
fs
push
aad
mov
jecxz
sub
inc
data16
out
mov
pminsw
mov
(bad)
out
mov
retf
xchg
cmps
cs
mov
add
out
inc
pop
dec
outs
mov
retf
je
xchg
imul
dec
mov
xchg
retf
test
and
ret
and
mov
mov
sahf
repz
retf
lock
dec
(bad)
and
push
push
push
shl
push
pop
fisttp
adc
pop
or
mov
sbb
xor
mov
adc
jbe
aas
jnp
mov
jbe
sub
out
push
push
pop
iret
aam
mov
(bad)
pop
fimul
scas
xlat
add
into
fisub
jle
outs
stos
mov
jnp
or
in
out
push
adc
push
push
push
into
shl
pop
fwait
or
dec
xchg
outs
sbb
arpl
(bad)
inc
sub
fucomi
retf
dec
jmp
dec
out
retf
inc
or
jb
retf
hlt
mov
les
xchg
fisttp
fiadd
imul
stos
mov
outs
xchg
cmp
mov
adc
aas
add
push
pop
fs
stos
sahf
dec
xchg
(bad)
sahf
fwait
ret
rol
leave
(bad)
and
xlat
push
push
stos
pop
pop
(bad)
icebp
mov
add
inc
sbb
ret
mov
retf
mov
add
jb
scas
or
pop
cs
add
ud2
ds
push
mov
inc
pop
xchg
jno
jb
outs
inc
data16
aam
cmp
jg
lahf
ret
add
push
mov
inc
add
xchg
push
xchg
sub
outs
retf
les
xchg
mov
mov
xchg
cmp
sahf
xchg
jno
mov
pop
daa
aam
jbe
retf
mov
push
adc
adc
push
xor
imul
xor
push
test
(bad)
jmp
xor
xor
pop
dec
push
rcl
cmp
xchg
push
movs
dec
es
test
adc
push
xor
(bad)
into
jp
shl
or
dec
xor
jmp
sbb
push
add
dec
jmp
or
or
ss
aas
retf
hlt
lods
xlat
mov
add
xor
and
cmps
xchg
call
inc
xchg
aas
push
pop
or
cwde
into
call
ret
add
inc
mov
outs
stos
mov
pop
jmp
jbe
xor
lods
ret
adc
cld
xchg
fs
mov
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
enter
dec
sahf
pop
mov
mov
sbb
sub
cmp
push
fisttp
jmp
sti
cs
fs
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
jmp
fild
retf
push
jmp
mov
dec
stos
jle
push
call
pminub
retf
aas
out
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
xchg
dec
sahf
movs
mov
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
hlt
(bad)
sbb
sub
and
retf
push
and
jmp
sti
rcl
addr16
mov
test
aam
cmp
rcr
fisttp
adc
loop
mov
dec
mov
mov
xchg
imul
into
sub
cmp
retf
push
fisttp
jmp
sti
aaa
mov
mov
jle
outs
mov
pop
mov
jnp
or
sbb
sub
cmp
retf
loope
push
jmp
sti
mov
dec
stos
and
scas
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
aaa
mov
mov
jle
outs
dec
sahf
pop
mov
jnp
or
add
sub
(bad)
out
retf
push
fisttp
jmp
sti
mov
dec
stos
addr16
mov
test
sub
cmp
retf
push
fisttp
jmp
sti
mov
push
stos
jle
xchg
dec
sahf
pop
mov
jnp
or
add
sub
(bad)
out
retf
push
fisttp
jmp
sti
mov
dec
stos
cmp
mov
ficomp
xor
(bad)
and
retf
push
and
adc
sti
cs
pop
fwait
dec
push
jle
outs
dec
xchg
imul
or
in
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
pop
fisttp
jmp
sti
aaa
mov
mov
addr16
mov
jnp
or
sbb
sub
cmp
retf
push
fist
jmp
sti
ror
jle
xchg
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
rcr
fisttp
adc
sti
aaa
mov
mov
jle
outs
dec
sahf
pop
mov
jnp
hlt
ficomp
into
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
adc
sti
mov
mov
mov
test
sub
(bad)
out
retf
push
ret
ds
mov
mov
jle
outs
mov
pop
mov
jnp
or
sbb
sub
cmp
retf
pop
fisttp
jmp
sti
mov
dec
stos
jle
outs
mov
pop
mov
jnp
or
sbb
sub
cmp
retf
loope
push
adc
sti
mov
dec
push
jle
ja
sahf
pop
jno
inc
jnp
or
sbb
aam
cmp
retf
push
fcomi
jmp
add
mov
dec
stos
cmp
push
or
sbb
sub
(bad)
out
retf
pop
fisttp
jmp
sti
ror
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
loope
push
jmp
sti
mov
dec
stos
jle
outs
push
sahf
pop
mov
add
sub
(bad)
test
ds
mov
push
stos
jle
xchg
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fcomi
adc
add
je
fwait
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
mov
mov
test
xor
cmp
xor
fisttp
jmp
loop
mov
push
stos
jle
xchg
push
sahf
pop
mov
add
sub
(bad)
out
retf
push
ret
ds
mov
mov
jle
outs
dec
sahf
movs
mov
jnp
or
sbb
sub
cmp
retf
loope
push
jmp
add
mov
dec
stos
jle
ja
sahf
pop
jno
mov
in
sub
cmp
retf
push
ret
ds
mov
mov
jle
outs
mov
pop
mov
bound
xor
cmp
xor
ret
ds
xchg
pop
fwait
dec
push
jle
outs
push
sahf
pop
mov
in
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
and
scas
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
cmp
scas
or
sbb
sub
and
retf
push
and
jmp
sti
mov
dec
mov
mov
mov
jnp
adc
sbb
aam
cmp
retf
push
fisttp
jmp
sti
cs
pop
fwait
dec
push
jle
ja
sahf
pop
jno
mov
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
inc
mov
test
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
loop
mov
dec
stos
addr16
mov
jnp
adc
sbb
aam
cmp
retf
loope
push
repnz
cs
fwait
dec
stos
jle
outs
dec
xchg
imul
or
sbb
sub
and
retf
push
and
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
movs
mov
jnp
adc
sbb
aam
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
xchg
imul
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
push
sahf
pop
mov
in
sub
cmp
retf
loope
push
jmp
add
je
or
inc
xchg
push
sahf
pop
mov
sbb
sub
(bad)
test
ds
je
fwait
dec
stos
cmp
mov
ficomp
xor
add
out
retf
push
and
repnz
cs
or
inc
xchg
push
sahf
pop
mov
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
push
stos
jle
xchg
push
sahf
pop
mov
add
sub
(bad)
test
daa
sti
mov
inc
outs
mov
movs
mov
in
aam
cmp
retf
loope
icebp
repnz
cs
fwait
dec
stos
add
mov
sbb
xor
cmp
xor
fisttp
jmp
sti
mov
inc
outs
dec
xchg
imul
or
in
sub
cmp
retf
pop
fisttp
jmp
sti
mov
push
stos
jle
xchg
push
sahf
pop
mov
sbb
sub
cmp
rcr
fisttp
adc
sti
mov
mov
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
aaa
mov
mov
jle
outs
mov
pop
mov
bound
sub
cmp
retf
push
fcomi
jmp
sti
aaa
mov
mov
addr16
mov
jnp
or
sbb
sub
cmp
xor
fisttp
adc
sti
cs
fwait
dec
push
jle
xchg
dec
sahf
pop
mov
jnp
adc
sbb
aam
cmp
rcr
fisttp
adc
sti
mov
dec
stos
jle
outs
dec
sahf
movs
mov
jnp
or
sbb
sub
cmp
retf
pop
fisttp
jmp
loop
mov
push
stos
jle
xchg
dec
sahf
pop
mov
jnp
adc
sbb
aam
and
retf
push
and
jmp
sti
mov
mov
mov
bound
sub
cmp
retf
pop
fisttp
jmp
sti
aaa
mov
mov
jle
outs
dec
sahf
movs
mov
jnp
or
sbb
sub
cmp
retf
loope
push
jmp
loop
mov
dec
stos
jle
ja
sahf
pop
jno
mov
sbb
sub
and
retf
push
and
jmp
sti
rcl
addr16
mov
test
sub
cmp
retf
push
fisttp
jmp
loop
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
add
sub
(bad)
test
daa
sti
mov
mov
mov
test
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
mov
mov
mov
jnp
or
sbb
sub
cmp
rcr
fisttp
adc
sti
mov
mov
mov
jnp
or
sbb
sub
cmp
retf
push
fcomi
jmp
loop
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
ret
ds
mov
mov
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fist
jmp
sti
rcl
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
ret
ds
xchg
pop
fwait
dec
push
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
push
sahf
pop
mov
add
sub
(bad)
test
ds
mov
dec
mov
mov
mov
jnp
or
sbb
sub
cmp
retf
pop
fisttp
jmp
sti
aaa
mov
mov
addr16
xchg
imul
into
xor
cmp
xor
fisttp
jmp
sti
aaa
mov
mov
jle
outs
dec
sahf
movs
jno
mov
sbb
sub
and
retf
push
and
jmp
sti
rcl
addr16
mov
test
sub
cmp
xor
ret
ds
xchg
pop
fwait
dec
push
addr16
mov
test
aam
and
retf
push
and
jmp
sti
cs
fwait
dec
stos
cmp
mov
ficomp
xor
(bad)
and
retf
push
and
jmp
sti
mov
push
stos
jle
xchg
dec
xchg
imul
or
in
xor
cmp
xor
ret
ds
xchg
pop
fwait
dec
push
addr16
mov
test
aam
and
retf
push
and
repnz
cs
fwait
dec
stos
cmp
scas
or
in
sub
cmp
xor
fisttp
jmp
loop
mov
push
stos
jle
xchg
dec
sahf
pop
mov
jnp
or
sbb
xor
cmp
xor
fisttp
jmp
sti
mov
mov
mov
jnp
adc
sbb
aam
and
retf
push
and
jmp
sti
mov
dec
mov
mov
xchg
imul
into
aam
cmp
retf
loope
push
jmp
sti
mov
dec
stos
cmp
scas
or
sbb
xor
cmp
xor
fisttp
jmp
loop
mov
dec
stos
jle
outs
dec
sahf
pop
xchg
imul
into
sub
cmp
retf
loope
push
jmp
sti
aaa
mov
mov
jle
outs
dec
sahf
pop
mov
jnp
hlt
(bad)
sbb
sub
and
retf
push
and
jmp
sti
rcl
addr16
xchg
imul
into
sub
cmp
retf
push
fist
jmp
sti
rcl
addr16
xchg
imul
into
aam
and
retf
push
and
jmp
sti
ror
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
xor
cmp
xor
and
jmp
loop
mov
push
stos
jle
xchg
push
sahf
pop
mov
add
sub
(bad)
test
ds
cs
fs
stos
jle
xchg
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
rcr
fisttp
adc
sti
mov
inc
ja
sahf
pop
jno
mov
sbb
sub
cmp
retf
push
fcomi
jmp
sti
mov
dec
stos
and
push
adc
sbb
aam
cmp
retf
loope
push
jmp
add
mov
mov
jle
outs
mov
inc
mov
test
xor
cmp
xor
fisttp
jmp
loop
mov
push
stos
jle
xchg
push
sahf
pop
mov
sbb
sub
cmp
xor
ret
ds
mov
mov
jle
outs
dec
xchg
imul
or
in
sub
cmp
retf
push
fisttp
jmp
sti
mov
mov
mov
sbb
sub
and
retf
push
and
jmp
sti
rcl
addr16
mov
test
xor
cmp
xor
fisttp
jmp
sti
aaa
mov
mov
and
push
or
sbb
sub
cmp
retf
loope
push
jmp
add
mov
mov
jle
outs
dec
xchg
imul
or
sbb
sub
cmp
retf
push
fisttp
repnz
cs
fwait
dec
stos
addr16
mov
test
xor
cmp
xor
fisttp
jmp
loop
mov
push
stos
jle
xchg
push
sahf
pop
mov
sbb
xor
cmp
xor
fisttp
jmp
sti
aaa
mov
mov
jle
outs
mov
pop
mov
bound
sub
cmp
retf
pop
fisttp
jmp
loop
mov
push
stos
jle
xchg
push
sahf
pop
mov
add
sub
les
retf
push
fcomi
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
movs
mov
jnp
hlt
(bad)
sbb
sub
and
retf
push
and
repnz
cs
fwait
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
push
lahf
push
xchg
pop
(bad)
cmp
outs
cs
xor
ret
jno
js
pop
pushf
movs
jnp
pusha
mov
dec
call
cmp
sub
outs
cs
cmp
retf
outs
fidiv
dec
xchg
cmp
jmp
test
leave
cmp
add
icebp
pop
jecxz
retf
inc
fidiv
mov
pushf
retf
jbe
jle
sub
clc
push
dec
jmp
fidivr
xor
stos
inc
test
mov
test
pop
stc
pop
cli
and
jle
or
sahf
sub
adc
adc
cmps
sub
(bad)
outs
sti
inc
mov
clc
sub
lahf
sub
cmp
add
or
push
sub
jmp
(bad)
jle
or
sti
xor
cmp
push
ficomp
jle
pop
fwait
pop
pushf
mov
dec
scas
pop
movs
cmp
dec
cdq
jle
mov
ds
rcl
pop
fistp
sbb
pop
out
scas
push
mov
mov
sub
or
sub
jae
imul
ins
stos
dec
mov
dec
int3
pop
fmul
cmp
cmp
sahf
imul
mov
outs
out
add
bswap
ds
cs
fmul
mov
ja
dec
movs
dec
(bad)
mov
jp
pop
retf
pop
mov
(bad)
jmp
addr16
jg
sub
dec
popf
movs
jbe
dec
test
outs
jmp
sbb
fild
sub
cmp
dec
loope
mov
jne
movs
jbe
dec
test
adc
sub
aam
sbb
rcl
fimul
pop
mov
pop
xchg
jle
cs
xor
cmp
adc
cs
sbb
and
sahf
je
ins
lahf
pop
call
mov
sub
sub
pop
loopne
fstp
fisttp
sub
mov
mov
outs
mov
fstp
sub
cs
cmp
push
fmul
mov
ja
dec
mov
mov
stos
push
mov
push
stos
pop
fisubr
dec
neg
mov
(bad)
jnp
xor
dec
mov
cli
sbb
ins
cdq
sbb
adc
aas
fsubr
cmp
or
iret
js
jae
imul
mov
outs
call
pop
iret
push
cmp
cmp
pop
push
iret
das
stos
and
pop
lahf
dec
call
mov
sub
psllw
add
jmp
das
stos
and
pop
lahf
dec
call
mov
add
sub
cmp
cs
or
sar
jnp
out
ins
test
outs
out
add
sub
je
sbb
sbb
adc
dec
mov
into
dec
mov
mov
add
sub
pop
fistp
adc
or
jns
push
mov
mov
fs
ds
pop
dec
mov
pop
sar
mov
mov
pop
stos
ds
inc
in
aas
call
cs
in
xor
out
dec
loope
mov
push
lea
bswap
sub
aam
sbb
sub
sbb
jg
pop
call
aam
mov
push
movs
sub
sub
sbb
or
inc
out
imul
jge
dec
mov
pusha
enter
and
cmp
imul
scas
or
jne
inc
mov
stos
dec
jmp
mov
dec
stos
jle
cs
das
mov
or
jns
ins
iret
sub
lods
(bad)
jmp
xchg
push
cld
pop
cli
dec
fbld
(bad)
outs
cmp
or
inc
(bad)
cmp
mov
inc
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
jbe
clc
fidivr
add
fcmove
fwait
dec
mov
mov
into
sub
pop
(bad)
jnp
imul
sahf
dec
sahf
retf
push
sub
or
mov
pop
mov
stos
push
imul
mov
imul
scas
or
mov
push
stos
push
fwait
push
mov
mov
jmp
sbb
cmp
or
sbb
xchg
dec
out
dec
out
test
and
push
test
adc
sbb
sub
sti
push
fwait
outs
stos
push
fstp
fstp
push
stos
dec
mov
leave
push
fcomp
mov
sti
jl
or
pop
mov
mov
cs
outs
mov
jmp
imul
ficomp
out
sub
sbb
sbb
clc
push
in
inc
les
(bad)
sub
popa
aad
dec
out
adc
mov
cmp
jmp
sti
dec
mov
push
jmp
sti
pop
jnp
sbb
sbb
cmp
sub
int3
jp
js
popa
xchg
jp
ins
sbb
dec
into
pop
mov
sbb
mov
jle
push
mov
fs
dec
(bad)
imul
mov
dec
mov
fiadd
mov
ror
cmp
push
inc
into
mov
jecxz
cmp
out
ficomp
sti
fcom
dec
sub
ror
push
js
sti
cs
pushf
fwait
cli
and
add
ficomp
xor
jmp
sub
xchg
iret
mov
fisub
dec
or
mov
inc
stos
adc
jg
inc
stos
cmp
mov
sbb
popa
lds
test
iret
sub
mov
icebp
outs
push
das
loope
(bad)
ins
sub
clc
cmps
mov
mov
sbb
outs
dec
or
cmp
scas
aas
or
das
ds
das
mov
mov
jb
lahf
or
xchg
fisubr
push
retf
cwde
sti
fisttp
jp
enter
das
mov
fbld
lahf
icebp
dec
adc
add
ds
outs
xor
sbb
sub
push
fwait
call
push
fndisi(8087
test
xchg
pop
mov
fisubr
shr
imul
into
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
add
ficomp
imul
into
jge
inc
scas
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
lods
pop
stc
xor
outs
dec
sahf
pop
mov
jecxz
into
dec
mov
out
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
and
sahf
or
int
cmps
jg
pop
(bad)
cmp
retf
push
fld
push
cdq
pop
jmp
(bad)
sahf
pop
mov
sahf
sbb
or
jle
or
sbb
test
push
fistp
xor
outs
cmp
xor
retf
sub
push
lea
pop
fisttp
clc
jle
sub
push
mov
call
sub
mov
push
fistp
je
fisttp
hlt
cmp
cs
jnp
sub
pop
mov
push
lea
mov
repnz
pop
iret
add
sub
imul
into
sub
cmp
retf
push
(bad)
ds
js
push
fwait
dec
stos
jle
cmp
sahf
sbb
dec
fwait
cmp
test
ds
mov
cmc
and
sti
sub
gs
into
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
jg
jge
inc
dec
mov
fistp
pop
xchg
dec
fdiv
mov
or
mov
pop
scas
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
pop
stos
or
daa
iret
sbb
scas
dec
sahf
sbb
or
sbb
popf
ds
push
stos
jle
sub
std
jns
imul
into
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
pop
xchg
test
stos
push
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
cmp
leave
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
or
or
cmp
retf
push
fstp
ds
fistp
outs
mov
outs
and
pop
mov
mov
cmp
mov
ds
cs
fwait
cmp
call
sbb
sbb
sub
pop
out
retf
push
mov
mov
fwait
dec
stos
jle
outs
dec
stc
pop
mov
jnp
or
sbb
sub
pop
out
retf
ins
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
sbb
aas
ficomp
into
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
mov
ds
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
or
out
loope
mov
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
jle
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
cs
pop
fwait
dec
stos
jle
outs
dec
enter
call
dec
stos
sub
cmp
retf
push
fisttp
jmp
sti
mov
sub
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
jge
jnp
retf
push
fisttp
jmp
sti
mov
sbb
jle
cmp
sahf
pop
mov
jnp
or
sbb
sub
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
ret
xor
jnp
es
xor
es
aas
loope
icebp
adc
mov
push
mov
add
aam
les
xor
fmul
adc
add
je
fwait
dec
push
add
inc
test
and
into
aam
les
ror
rol
mov
inc
ins
mov
xchg
movs
xchg
inc
stos
scas
cli
and
xor
add
out
out
cs
add
sti
mov
dec
mov
jge
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
lock
mov
dec
stos
jle
outs
js
jmp
scas
or
sbb
iret
add
adc
fisttp
jmp
push
je
fs
or
pop
jno
inc
test
sub
adc
and
adc
lods
mov
push
add
inc
aam
(bad)
out
retf
xchg
and
adc
add
je
fs
stos
les
popa
movs
jno
inc
test
aam
les
xor
and
jmp
add
je
fs
add
inc
test
and
out
push
les
xor
and
adc
add
mov
fs
add
xchg
test
and
xor
add
out
retf
sbb
icebp
adc
add
je
xor
stos
jle
xchg
mov
movs
jno
inc
dec
scas
or
sub
aam
les
xor
fisttp
jmp
sti
pushf
je
fs
cmp
outs
dec
sahf
pop
adc
ficomp
into
sub
cmp
mov
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
xor
fisttp
jmp
sti
das
mov
dec
sti
jle
outs
sbb
jnp
or
sbb
sub
imul
push
fistp
ds
mov
push
stos
jle
outs
sbb
jnp
or
sbb
retf
dec
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
pop
ficomp
into
sub
cmp
retf
loope
push
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
retf
push
fisttp
jmp
sti
mov
fwait
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
hlt
ficomp
into
sub
imul
push
and
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
sub
sub
cmp
retf
push
fisttp
jmp
sti
fistp
dec
stos
jle
outs
dec
sahf
or
or
sbb
fwait
push
fisttp
jmp
sti
jle
pop
fwait
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
(bad)
imul
into
sub
cmp
retf
push
mov
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
mov
sbb
push
mov
push
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
cs
mov
jg
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
fistp
dec
stos
jle
ds
sahf
pop
mov
mov
sbb
sub
cmp
retf
push
fimul
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
dec
ficomp
fisubr
fisubr
out
retf
push
fisttp
push
mov
sbb
and
cmp
enter
jmp
std
jp
sub
inc
test
mov
push
(bad)
push
test
jo
je
adc
das
lock
add
das
fst
sub
pop
ins
cli
dec
popf
ins
test
retf
je
or
xchg
div
push
jecxz
loopne
nop
and
add
jnp
pop
shl
cmp
cmp
pop
shr
adc
add
push
xchg
inc
data16
test
mov
dec
stos
jle
outs
dec
popa
cwde
ror
ficomp
into
imul
lahf
xor
mov
dec
cdq
pop
mov
cmp
or
sbb
rcr
add
cmp
cwde
dec
test
mov
mov
jg
pminub
retf
aas
jmp
enter
popf
cmp
ja
mov
adc
mov
clc
cmp
add
xor
push
jecxz
in
mov
ja
test
jno
je
fs
(bad)
not
add
hlt
and
push
mov
ja
and
mov
daa
repnz
loop
not
add
xor
and
and
arpl
push
and
call
shl
aam
in
mov
hlt
and
xor
jno
popf
js
add
je
fs
in
sub
shl
enter
test
mov
jge
push
adc
pusha
jmp
(bad)
sub
or
and
pop
mov
push
ins
shl
scas
cmp
sub
fsubr
ret
push
repz
hlt
or
mov
xchg
jb
cmp
pop
(bad)
jnp
xor
and
shr
rcl
inc
xor
mov
xchg
ja
or
pop
ret
or
loope
adc
and
xor
popa
inc
xchg
je
xor
pop
rol
loope
icebp
aam
sti
cs
push
fist
adc
fwait
dec
imul
dec
pushf
pop
shl
cmps
or
sbb
jmp
sbb
in
mov
dec
push
fwait
pop
mov
xchg
ds
fistp
retf
in
sbb
sub
sbb
or
pop
popf
dec
js
adc
cmp
sub
sbb
or
mov
mov
adc
ins
loope
jno
inc
test
and
xor
add
jmp
jnp
or
sbb
sub
cmp
retf
pop
retf
or
cs
or
sbb
dec
stos
jle
mov
sti
ds
fild
test
cwde
pop
test
push
xchg
inc
loop
adc
ret
add
cmc
mov
rcl
fidivr
cli
pop
retf
lahf
mov
push
mov
sub
into
sbb
jmp
jno
in
(bad)
test
mov
and
adc
and
add
out
retf
push
ror
adc
sti
sub
jl
inc
dec
call
add
push
retf
cs
sbb
sahf
pop
mov
jnp
or
sbb
aam
pop
mov
pop
sahf
dec
out
cmp
mov
cs
ds
fistp
retf
outs
mov
pop
mov
pop
popf
dec
in
cmp
sub
sbb
or
cmp
or
sbb
ins
mov
push
xchg
push
xchg
inc
jecxz
repz
pop
and
xor
add
adc
bound
push
xchg
push
xchg
inc
loop
repnz
rcl
pop
and
and
sbb
(bad)
bound
push
test
in
and
xor
and
adc
add
mov
mov
mov
jmp
icebp
sti
cs
fimul
retf
push
cmp
mov
dec
scas
imul
movs
ds
push
push
retf
jecxz
jmp
(bad)
retf
push
cmp
mov
sbb
xchg
inc
data16
imul
mov
or
jmp
out
cmp
or
sbb
and
fs
outs
mov
mov
(bad)
sbb
sub
cmp
or
sbb
pop
movs
mov
stos
outs
mov
mov
and
pushf
fadd
rol
adc
pop
movs
dec
adc
imul
mov
test
mov
and
xchg
xlat
add
icebp
and
xor
add
movs
jl
inc
test
movs
pusha
mov
add
fsub
adc
add
mul
out
sub
cmp
retf
pop
movs
jno
inc
stos
ror
jle
outs
dec
cwde
push
and
into
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
test
lahf
pop
(bad)
scas
or
sbb
es
cmp
leave
sbb
or
cmp
sub
pop
cdq
dec
test
push
call
pminub
int
cli
aas
jmp
jmp
(bad)
pop
lahf
dec
aad
mov
mov
jle
push
fistp
stc
push
popf
sub
int
fisttp
in
cmp
sub
(bad)
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
popa
movs
cmp
fistp
retf
jle
dec
fwait
pop
mov
pop
or
mov
fimul
cs
ds
jg
dec
call
mov
dec
out
cmp
sub
sbb
or
sti
ds
fistp
retf
mov
jle
dec
cwde
pop
mov
pop
popf
dec
in
cmp
sub
sbb
or
fstp
ins
mov
pop
mov
pushf
dec
out
(bad)
cld
sub
sbb
or
cmp
or
mov
pop
mov
push
xchg
dec
jecxz
repz
push
rol
and
xor
add
adc
arpl
push
xchg
push
xchg
inc
loop
repnz
ret
pop
and
xor
add
adc
bound
push
xchg
push
xchg
inc
loop
repnz
ret
pop
and
xor
add
adc
bound
push
xchg
push
xchg
inc
jecxz
lock
adc
xor
add
adc
bound
push
xchg
cmp
std
aaa
repnz
pop
rol
and
xor
add
adc
ins
or
sbb
sub
cmp
xchg
mov
adc
(bad)
adc
add
dec
(bad)
pop
mov
or
inc
xchg
push
and
mov
test
jno
bound
sbb
or
fs
mov
mov
repz
fist
retf
push
and
sub
add
or
addr16
cs
mov
sub
cmp
dec
xchg
inc
sti
sub
and
push
aam
es
ins
pop
into
or
jmp
sahf
movs
ins
stos
jle
dec
mov
mov
retf
add
into
or
jnp
je
pop
mov
cmps
cmc
xor
lahf
dec
mov
mov
sub
push
retf
add
in
sub
sbb
or
xor
and
push
arpl
dec
mov
sub
cmp
or
sbb
outs
mov
adc
pop
jbe
xor
mov
mov
dec
mov
lods
imul
outs
xchg
cli
pop
retf
pminub
outs
mov
mov
enter
cmps
out
fimul
into
sbb
jmp
push
fstp
in
cmp
or
sbb
mov
pop
(bad)
sub
cmp
or
sbb
movs
jo
dec
test
test
mov
mov
dec
lea
movs
fs
into
pop
xchg
mov
cs
sbb
cmps
popa
mov
test
mov
dec
jbe
je
jecxz
rol
rcl
and
adc
add
jge
in
push
test
loopne
ja
inc
adc
aaa
rol
pop
cmp
movs
jno
(bad)
push
push
cmc
and
xchg
mov
mov
push
cld
movs
gs
pop
cmp
adc
add
jno
pusha
mov
test
mov
and
dec
mov
sbb
xor
and
adc
add
jae
in
fmul
lds
xor
inc
adc
loopne
rol
movs
jno
inc
test
das
popa
mov
test
mov
pop
mov
jnp
lock
fs
add
ds
mov
stos
jle
outs
mov
and
adc
add
inc
and
into
sub
cmp
retf
pop
fisttp
jmp
sti
cs
adc
lods
ins
mov
pop
mov
jnp
or
sbb
sub
cmp
retf
loope
icebp
adc
add
mov
dec
stos
jle
outs
dec
pushf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jg
outs
dec
lahf
pop
(bad)
scas
or
sbb
sub
cmp
retf
or
cmp
sub
pop
cdq
dec
test
pushf
pop
mov
jns
or
sbb
sub
cmp
leave
sbb
clc
sub
test
mov
lea
js
or
sbb
sub
cmp
enter
call
aas
cwde
dec
scas
jp
push
call
pminub
retf
aas
jmp
jmp
(bad)
pop
lahf
dec
scas
jp
push
call
adc
sti
ds
sbb
or
cmp
sub
jp
push
loopne
test
jle
push
fistp
retf
cs
ds
sbb
or
cmp
or
and
sub
dec
cwde
pop
mov
jge
push
fcomp
enter
cwde
mov
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
add
jae
lock
sbb
or
sti
ds
fistp
retf
outs
mov
pop
mov
rol
aas
(bad)
sub
sbb
or
sti
ds
fistp
retf
outs
mov
pop
mov
rol
cmp
sub
sbb
or
sti
ds
fistp
retf
outs
mov
pop
mov
ret
add
out
cmp
sub
sbb
or
fcomp
test
cwde
pop
mov
loop
pop
in
cmp
sub
sbb
or
fcomp
test
cwde
pop
mov
popf
adc
cmp
sub
sbb
or
fcomp
test
cwde
pop
mov
push
xor
sub
sbb
or
cmp
or
sbb
ins
mov
pop
mov
dec
dec
in
cmp
sub
sbb
or
cmp
or
sbb
ins
mov
pop
mov
test
ss
push
rol
and
xor
add
adc
arpl
push
xchg
push
xchg
inc
jecxz
repz
push
rol
and
xor
add
adc
arpl
push
xchg
push
xchg
inc
loop
repnz
ret
pop
and
xor
add
adc
bound
push
xchg
push
xchg
inc
loop
repnz
ret
pop
and
xor
add
adc
bound
push
xchg
push
xchg
inc
loop
repnz
ret
pop
and
xor
add
adc
bound
push
xchg
push
xchg
inc
loop
repnz
ret
pop
and
cmp
or
sbb
ins
mov
cmps
inc
xchg
push
xchg
push
xchg
inc
loop
repnz
ret
pop
cmp
fisttp
in
cmp
sub
xchg
push
xchg
push
xchg
inc
loope
icebp
and
adc
add
push
xchg
inc
movs
jo
pusha
ficomp
popf
lods
inc
xchg
push
test
push
xchg
inc
loope
icebp
and
adc
add
dec
mov
test
push
mov
push
xchg
inc
loope
icebp
and
adc
add
dec
mov
test
adc
xchg
push
test
push
xchg
inc
in
cmc
and
adc
add
dec
lea
push
int
sti
xchg
push
and
mov
cs
fisttp
retf
add
inc
adc
pop
rcl
jle
sahf
mov
dec
mov
cs
fisttp
retf
push
les
push
mov
jno
ds
adc
push
dec
sahf
mov
dec
mov
cs
fisttp
retf
push
fstp
outs
pop
(bad)
sub
sub
stos
jle
dec
mov
cs
fisttp
retf
push
fidivr
(bad)
fst
ret
stc
sub
sbb
stos
jle
dec
mov
cs
fisttp
retf
push
fidivr
ins
(bad)
aad
fisub
stc
sub
sbb
mov
dec
mov
cs
fisttp
retf
push
fidivr
ins
adc
fidivr
clc
sub
mov
dec
mov
cs
fisttp
retf
push
fidiv
test
or
jnp
repz
adc
mov
dec
mov
cs
fisttp
retf
push
fidiv
adc
jnp
repz
adc
mov
dec
mov
das
jmp
jo
popa
test
or
gs
jmp
fisttp
push
lahf
mov
dec
(bad)
pop
(bad)
sub
cmp
or
sbb
jo
popa
call
fistp
scas
jnp
dec
mov
sub
cmp
or
sbb
ins
stos
jle
jg
ins
jmp
fwait
mov
dec
sbb
out
cmp
or
sbb
imul
cld
sub
dec
fwait
mov
dec
sbb
out
cmp
or
sbb
imul
repnz
dec
fwait
mov
dec
sbb
out
cmp
or
sbb
imul
inc
mov
mov
dec
sbb
out
cmp
or
sbb
mov
push
lock
dec
fwait
mov
dec
sbb
out
cmp
or
sbb
popa
movs
jno
dec
mov
and
jnp
mov
mov
dec
sbb
in
cmp
or
sbb
popa
movs
jno
and
sbb
and
cmp
dec
cwde
mov
dec
adc
rcl
popa
movs
jno
into
or
xor
mov
push
icebp
and
xor
add
adc
popa
movs
jno
leave
add
mov
xchg
mov
mov
push
icebp
and
xor
add
adc
popa
movs
jno
leave
add
xchg
and
xor
mov
mov
mov
push
icebp
and
xor
add
adc
popa
movs
jno
leave
add
nop
and
xor
mov
mov
mov
push
icebp
and
xor
add
adc
popa
movs
jno
enter
and
xor
mov
mov
mov
push
lock
rcl
mov
xchg
mov
mov
push
lock
rcl
jbe
jae
and
xor
mov
mov
mov
push
lock
rcl
inc
test
and
xor
test
mov
mov
push
lock
rcl
inc
test
and
xor
mov
push
hlt
and
xor
add
adc
popa
movs
jno
inc
test
and
mov
popa
movs
jno
inc
jns
or
sbb
sub
cmp
fsub
jno
inc
test
and
jo
jle
outs
dec
sahf
pop
mov
jns
or
sbb
sub
cmp
shl
jno
inc
test
and
dec
stos
jle
outs
dec
sahf
pop
mov
jns
or
sbb
sub
cmp
iret
cmp
sub
sbb
or
jle
outs
dec
sahf
pop
mov
jns
or
sbb
sub
cmp
aaa
out
not
mov
dec
stos
jle
outs
dec
sahf
pop
mov
js
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
js
or
sbb
sub
cmp
retf
pminsw
cli
das
mov
dec
stos
jg
outs
dec
lahf
pop
(bad)
scas
or
sbb
sub
cmp
retf
pminsw
cli
das
mov
dec
stos
jg
outs
dec
lahf
pop
(bad)
lods
or
sbb
sub
cmp
leave
sbb
or
cmp
sub
pop
cdq
dec
test
pushf
pop
mov
jno
or
sbb
sub
cmp
leave
sbb
or
cmp
sub
pop
cdq
dec
test
pushf
pop
mov
pop
lods
or
sbb
sub
cmp
enter
call
pop
cwde
dec
test
mov
lea
xor
sub
cmp
enter
call
pop
cwde
dec
test
mov
lea
sbb
das
cli
aas
jmp
jmp
(bad)
pop
lahf
dec
scas
jp
push
call
pminub
retf
aas
jmp
jmp
(bad)
pop
lahf
dec
scas
jp
push
call
pminub
retf
aas
jmp
jmp
(bad)
pop
lahf
dec
scas
jp
push
call
or
push
retf
cs
ds
sbb
or
cmp
sub
jnp
imul
mov
add
pop
ficomp
retf
cs
ds
sbb
or
cmp
sub
jnp
imul
mov
add
ins
iret
sbb
sub
sbb
or
cmp
sub
js
push
sbb
add
je
xor
sub
sbb
or
cmp
sub
js
push
adc
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
sti
mov
dec
stos
jle
outs
dec
sahf
pop
mov
jnp
or
sbb
sub
cmp
retf
push
fisttp
jmp
mov
and
adc
add
ror
retf
jb
mov
sti
ins
call
aas
cmps
and
sbb
inc
and
rcr
xchg
jb
jb
dec
xchg
push
popf
jmp
pop
sahf
jle
sub
and
pop
into
add
xor
pop
or
aas
repz
or
out
push
add
jp
pop
xchg
shr
pop
xchg
sub
add
mov
or
jle
sahf
adc
fcomp
xlat
scas
jmp
stos
mov
push
imul
xchg
sbb
sbb
mov
sbb
pop
sub
cdq
dec
sub
push
mov
bts
inc
fiadd
cs
dec
dec
stos
mov
cmp
mov
addr16
nop
jno
sbb
jge
mov
sub
addr16
cmp
retf
and
add
retf
jle
stos
dec
cli
cs
inc
fwait
or
cmp
inc
scas
mov
and
les
ror
clc
and
pop
test
cmp
fistp
dec
fist
cmp
dec
ins
mov
aaa
out
pushf
lock
push
test
into
shr
push
sub
(bad)
xchg
daa
les
mov
push
nop
stos
jle
push
retf
out
lods
inc
cmp
xor
push
mov
(bad)
sahf
mov
daa
push
cld
dec
outs
pop
sbb
mov
sbb
pop
lea
out
xchg
daa
sub
aaa
cli
or
xchg
push
sti
inc
jmp
jle
stc
test
push
lods
cmp
sbb
pop
mov
bound
pop
jne
or
cmp
jp
leave
jl
inc
mov
fwait
into
(bad)
int3
mov
call
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
ficomp
retf
aas
jmp
jg
(bad)
pop
lahf
dec
scas
jp
push
sbb
or
cmp
sub
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
push
push
call
mov
call
push
call
mov
mov
cmp
jbe
push
push
push
push
push
call
mov
push
push
push
push
push
call
mov
mov
mov
push
mov
push
push
push
push
push
call
push
push
push
push
push
push
call
jmp
push
push
push
push
call
mov
cmp
je
test
je
mov
push
push
call
mov
push
call
mov
call
xor
mov
mov
push
call
push
mov
call
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
jne
data16
dec
inc
mov
loope
pop
ss
sub
retf
retf
xor
rol
push
dec
inc
pop
xor
es
ror
imul
out
(bad)
int3
(bad)
fsubr
cmps
mov
push
sbb
push
or
pop
ss
pop
push
or
pop
imul
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
ficom
push
sbb
jne
aam
fs
push
xor
sbb
fld
push
xchg
fisttp
push
and
pop
lea
sub
add
lahf
test
repz
or
mov
pop
mov
addr16
or
sbb
aam
dec
or
or
push
in
(bad)
inc
(bad)
adc
inc
pop
mov
ja
jae
push
movs
inc
lods
xor
pusha
outs
inc
repz
pop
call
je
sub
push
sbb
cmp
fs
mov
repz
(bad)
or
push
mov
pushw
dec
push
jecxz
addr16
mov
movs
mov
mov
jne
data16
stos
add
lods
arpl
adc
and
(bad)
xchg
mov
xor
scas
movs
mov
jbe
jae
or
ss
gs
hlt
inc
sbb
test
cld
(bad)
mov
test
arpl
cmovl
sbb
ror
or
dec
push
mov
sub
adc
or
mov
dec
sub
ss
cmp
scas
pop
das
movs
in
jmp
mov
sub
hlt
jne
data16
add
les
cmp
or
sbb
test
cld
ds
(bad)
fdiv
das
xchg
data16
dec
scas
sbb
repz
sub
add
(bad)
lods
(bad)
mov
sahf
outs
adc
mov
(bad)
es
or
sbb
in
(bad)
jne
fnsave
gs
test
test
ret
push
push
loope
add
adc
mov
pop
mov
aad
mov
mov
xor
lds
push
in
sbb
in
push
cld
aas
mov
pop
scas
cmps
inc
xchg
nop
xchg
iret
xchg
push
dec
mov
js
or
pop
not
out
(bad)
and
movs
mov
lahf
sub
jl
dec
inc
cmps
ss
es
scas
push
hlt
cmc
in
sbb
push
int3
das
cwde
adc
jbe
lods
jbe
and
push
movs
inc
pop
iret
sub
cmp
dec
movs
sbb
in
out
(bad)
rol
xor
xchg
mov
or
cmc
dec
scas
pop
ss
call
test
cs
jmp
lea
xchg
adc
inc
mov
sub
cmp
or
pop
push
in
push
std
(bad)
cmp
and
xchg
dec
inc
dec
mov
or
sbb
int3
lahf
fnstsw
jecxz
or
gs
inc
jns
sub
cmp
pop
push
sbb
adc
stos
rep
pop
aas
inc
je
pushf
sahf
ins
cmp
adc
(bad)
loope
iret
push
dec
in
out
push
mov
(bad)
push
cdq
ret
push
test
mov
pop
cmc
jecxz
stc
das
mov
movs
(bad)
jmp
cmp
mov
aam
jns
pop
inc
xor
in
push
cld
mov
scas
pop
jne
xor
sahf
jl
sbb
sbb
jne
aam
fs
mov
pop
cs
mov
cmps
inc
xchg
leave
ror
xor
jl
dec
cs
mov
(bad)
ds
in
or
cs
or
fs
ja
test
push
mov
push
(bad)
sub
push
pop
mov
int3
cs
lods
sbb
mov
cld
aad
jl
dec
mov
js
push
push
hlt
idiv
setne
retf
cld
push
xchg
sub
inc
sbb
push
sub
jecxz
cmps
pushf
xor
mov
jbe
aas
jl
or
pop
fisubr
rcl
and
cmc
mov
out
ror
sub
lods
dec
clc
xor
and
movs
add
les
cmp
or
sbb
test
cld
ds
mov
cmps
push
shr
xchg
lea
scas
sbb
out
mov
(bad)
and
fcomp
mov
sahf
push
inc
mov
(bad)
es
or
sbb
in
(bad)
jne
fdiv
gs
test
mov
push
push
hlt
imul
out
xchg
outs
(bad)
xor
lods
dec
mov
aad
mov
movs
inc
aam
lds
push
in
sbb
in
adc
aas
mov
pop
stos
cmps
pop
xchg
mov
jne
iret
xchg
push
dec
mov
js
or
sbb
or
push
(bad)
and
mov
pushf
lahf
sub
jl
dec
inc
mov
push
scas
push
hlt
icebp
in
add
fmulp
das
cwde
adc
imul
pop
shr
cmp
dec
movs
sbb
jmp
(bad)
xor
xchg
mov
sub
cmc
dec
scas
pop
ss
es
push
in
mov
xor
call
xchg
je
xchg
push
mov
pop
data16
cmp
pop
sbb
in
out
jbe
cmps
and
lods
out
imul
mov
push
mov
je
mov
cmp
jb
xlat
fcom
scas
or
adc
popa
int3
fnstenv
sahf
out
out
cld
dec
int3
shl
mov
popf
sahf
out
jl
sbb
jns
arpl
or
movs
not
inc
std
in
(bad)
out
lods
dec
mov
arpl
dec
pop
jbe
cwde
jns
repz
(bad)
cdq
add
mov
jbe
xor
mov
or
fldcw
and
jmp
cmp
inc
or
jne
sub
or
je
in
mov
dec
mov
xchg
pushf
and
mov
das
and
pop
cwde
pop
not
repz
int3
lods
leave
mov
outs
in
inc
ret
add
jnp
or
mov
fldcw
popf
push
push
jbe
in
mov
(bad)
adc
fld
mov
and
minps
and
pop
out
xchg
pushf
in
sbb
gs
dec
clc
sbb
mov
inc
mov
sub
cmp
or
pop
push
in
push
not
adc
test
inc
loop
xchg
mov
or
pop
fisub
es
sbb
cmc
mov
out
fmul
adc
loop
dec
clc
xor
mov
add
les
ror
pop
test
cld
ds
mov
cmps
push
shr
xchg
mov
push
dec
scas
sbb
fld
mov
add
into
fsub
mov
pushf
sahf
fs
inc
mov
(bad)
es
or
sbb
in
(bad)
jne
cs
mov
cmps
mov
gs
test
dec
and
test
add
out
xchg
outs
(bad)
xor
lods
jne
mov
ins
mov
lahf
inc
cmp
lds
push
in
sbb
in
jp
aas
mov
pop
cmps
cmps
outs
xchg
js
jne
iret
xchg
pop
dec
xchg
pop
inc
sub
js
or
push
idiv
cmp
lods
mov
lahf
sub
jl
inc
inc
mov
and
push
scas
push
hlt
(bad)
in
ss
fmulp
das
cwde
adc
pop
xchg
jbe
and
push
movs
dec
pop
stc
sub
cmp
dec
movs
sbb
in
xor
sub
xor
sahf
mov
data16
(bad)
cmp
mov
add
dec
test
sbb
in
mov
shl
lods
int3
jnp
add
push
dec
out
or
push
or
xchg
imul
ins
jno
xor
mov
mov
fnstenv
in
mov
jmp
fcomp
in
out
adc
add
push
enter
and
dec
leave
push
mov
mov
(bad)
fmul
sub
sahf
add
jae
mov
arpl
fwait
lock
jecxz
stc
outs
push
pop
push
icebp
jp
jne
pop
mov
adc
pop
aaa
sub
cmp
cli
xchg
or
xor
in
sub
cld
cmp
or
aam
push
es
repz
jecxz
in
mov
leave
out
mov
lds
xchg
cmp
inc
shl
enter
cmp
jmp
sub
les
ror
jl
add
mov
cs
clc
jge
sbb
pop
in
pop
xor
sub
push
mov
fldenv
jbe
inc
dec
cli
xchg
mov
sbb
int
and
into
mov
ja
mov
sbb
mov
push
mov
sbb
add
clc
lods
jecxz
rcr
xchg
adc
out
jge
dec
inc
pop
aaa
imul
mov
std
(bad)
int3
(bad)
push
cmp
enter
dec
and
bound
inc
or
sub
pushf
push
inc
push
cmps
stos
sbb
repnz
sti
push
enter
and
mov
rcl
fwait
mul
(bad)
int
sbb
xchg
in
adc
jl
dec
enter
(bad)
push
pusha
push
dec
div
rcr
lods
das
add
test
popf
std
sbb
mov
mov
jl
movs
or
or
lock
out
cld
out
fwait
sbb
push
popf
stc
(bad)
dec
ins
pop
xlat
push
adc
adc
inc
mov
out
imul
or
mov
jle
ja
in
xor
repnz
xchg
jecxz
add
repnz
data16
jp
movs
cmp
pushf
dec
test
inc
ds
jecxz
addr16
fnstsw
ret
push
mov
cmps
mov
mov
sbb
mov
sahf
xchg
jbe
out
xlat
mov
jecxz
fs
imul
cmp
push
or
xchg
jecxz
mov
pop
cmc
fldenv
arpl
scas
in
movs
cmp
aad
imul
sbb
mov
mov
push
xchg
jae
pushf
jbe
cdq
jge
sbb
arpl
mov
out
adc
jmp
xchg
std
out
aas
pop
dec
mov
push
push
(bad)
push
push
jecxz
das
in
(bad)
inc
cs
dec
sub
arpl
cdq
icebp
cwde
sbb
push
leave
repnz
pop
or
mov
sub
or
out
mov
imul
into
movs
ss
ret
and
rcr
in
mov
and
jae
pop
xor
adc
cmp
or
aad
pop
or
pop
(bad)
mov
push
mov
cmc
jns
jl
or
sbb
rcl
rcl
and
out
(bad)
xor
fdiv
mov
bound
or
mov
pop
dec
push
pop
hlt
(bad)
in
sub
inc
fadd
sub
cdq
ja
data16
push
mov
adc
sub
push
add
clc
std
(bad)
mul
mov
fucomip
adc
sub
(bad)
fidivr
dec
push
xchg
xor
xor
and
lods
das
mov
data16
hlt
fmul
inc
sbb
fsubr
sbb
xlat
test
test
jns
les
sub
cmp
imul
ins
faddp
mov
ss
in
and
pusha
std
out
jge
sbb
pop
mov
pop
add
call
xchg
fldenv
cmps
mov
jae
fnstenv
jmp
ds
mov
push
xchg
stc
adc
int3
ins
add
and
sbb
push
mov
or
xor
sub
lahf
cmp
fld
push
fisubr
adc
inc
xchg
mov
mov
sbb
sub
mov
or
push
lea
ins
data16
lds
mov
push
repz
and
in
mov
fdiv
(bad)
dec
sti
loope
add
retf
mov
(bad)
pop
in
or
jmp
and
push
cs
xchg
add
xor
or
movs
lods
ret
and
popa
out
xor
int3
pusha
lds
in
mov
ss
xor
int3
xor
int
xor
push
cmps
jp
mov
jbe
mov
sbb
imul
fcos
fwait
or
loopne
test
push
out
mov
inc
rol
hlt
mov
jmp
sar
ds
pop
mov
jnp
ins
add
push
sub
xchg
cmps
inc
sahf
mov
pop
repz
es
fwait
or
sub
sub
rcl
add
fdivr
xchg
ds
test
shl
mov
repz
add
in
and
xor
xchg
ja
out
cmp
inc
sbb
retf
jnp
mov
fimul
push
in
rol
ret
sub
cwde
add
fsub
mov
add
xchg
jle
aad
cs
mov
cdq
out
outs
daa
sub
das
adc
ss
cmp
jge
mov
xor
es
mov
xchg
inc
jge
ins
mov
ret
push
clts
pop
or
fnstenv
mov
arpl
ins
repz
dec
sbb
adc
pop
neg
sbb
aad
mov
pop
cmps
lea
sti
ins
test
push
dec
int3
aad
shl
jno
mov
add
out
pop
loop
or
adc
fistp
test
fwait
cld
push
inc
sbb
rcr
mov
cmps
inc
(bad)
mov
xor
ja
gs
add
jecxz
outs
push
pop
int3
add
push
popfw
test
mov
push
es
adc
sub
cld
fiadd
(bad)
mov
push
jp
jo
arpl
addr16
ss
(bad)
rol
in
mov
out
les
mov
jmp
mov
je
or
inc
leave
mov
inc
push
pop
out
xchg
jle
mov
pop
inc
inc
and
lods
sub
arpl
imul
stos
cli
push
dec
stc
mov
xchg
cmps
cmp
cmp
das
sub
jl
mov
jb
mov
in
or
mov
cmc
cli
cmps
inc
repz
jns
(bad)
cmp
lea
add
mov
loopne
dec
jnp
arpl
push
push
xor
cmc
mov
sbb
cmp
mov
test
repz
dec
je
mov
inc
out
fstp
sbb
ins
inc
sub
cmp
repz
xchg
mul
pop
sub
and
or
or
fsub
push
int3
inc
or
fldcw
cli
hlt
mov
int
mov
scas
inc
js
and
popf
mov
jae
jg
push
mov
adc
out
sbb
adc
(bad)
pop
fnstenv
mov
sbb
cmp
into
pop
les
mov
xchg
sub
jnp
add
sub
jae
adc
cmps
es
retf
test
sub
adc
jle
in
popf
mov
and
pop
adc
shr
or
and
push
test
pusha
mov
std
and
add
inc
xor
data16
pop
repz
mov
sbb
sti
int3
mov
arpl
and
push
jmp
mov
(bad)
cld
scas
mov
cmp
cdq
xchg
adc
(bad)
jecxz
fs
cwde
pop
mov
test
call
pop
bound
adc
sub
fidivr
pop
xchg
fld
xchg
test
xchg
xor
or
push
mov
call
push
out
mov
int
fnsave
fadd
(bad)
sbb
repnz
repz
add
in
cmps
in
add
arpl
mov
sbb
stos
lds
test
cmp
mov
fdivr
mov
retf
fmul
pop
(bad)
mov
xlat
je
jbe
addr16
add
inc
pop
loop
lea
jl
xchg
inc
pop
xor
(bad)
mov
repz
or
int3
sbb
(bad)
fistp
mov
add
sub
push
imul
jg
xchg
rcl
int3
les
jae
fistp
adc
std
ret
fstp
stc
mov
xchg
cmp
pop
push
dec
out
arpl
inc
in
xor
daa
dec
jle
dec
cwde
mov
pushf
fisttp
pop
fs
int3
sbb
and
leave
test
cmps
cmps
in
sbb
(bad)
xor
cmc
dec
icebp
(bad)
mov
arpl
out
add
mov
sub
pop
cld
xor
outs
mov
cmp
cmps
pop
(bad)
jl
xchg
jbe
int3
mov
fidivr
out
imul
sbb
jmp
adc
sar
or
xchg
idiv
out
(bad)
int3
cmp
cmp
fsubr
neg
dec
jge
cmps
bound
pop
xchg
movs
adc
mov
cmp
enter
jb
fs
inc
dec
push
fisubr
mov
call
xchg
js
inc
dec
sbb
bnd
imul
xchg
xor
in
popf
int
xchg
mov
mov
xor
fyl2xp1
test
mov
cwde
jle
xchg
push
pop
inc
fistp
add
cld
jg
repnz
push
inc
cdq
mov
inc
dec
mov
jb
arpl
(bad)
iret
xlat
mov
lods
dec
lods
xor
xchg
cmp
push
daa
jecxz
rcl
leave
shl
inc
dec
sub
xchg
imul
repz
bound
push
pop
neg
mov
add
jmp
test
sahf
mov
xchg
mov
int
fldcw
push
xchg
mov
add
mov
jbe
mov
rol
xor
data16
mov
sbb
and
jno
xchg
mov
mov
daa
mov
xor
outs
ja
in
and
mov
popa
popf
mov
test
out
ja
xor
fdiv
out
jecxz
xchg
leave
dec
(bad)
in
xor
addr16
push
inc
adc
test
f2xm1
jmp
int
popa
sub
mov
pop
js
sbb
ret
ret
lahf
fs
pop
pop
add
inc
rol
xchg
out
les
xchg
mov
mov
fmul
sti
or
mul
sub
mov
adc
mov
inc
dec
fdiv
adc
sub
mov
scas
cmp
pop
jo
out
dec
popf
xchg
adc
int3
xor
leave
test
cmp
fs
or
pop
ja
popf
mov
fisub
xchg
sub
mov
jns
(bad)
pushw
das
ins
sbb
(bad)
aam
daa
rol
mov
cmp
(bad)
pop
pop
mov
jns
(bad)
in
out
and
daa
das
mov
sahf
test
cdq
pop
movs
jge
mov
into
(bad)
div
fist
movs
mov
adc
clc
xor
mov
jge
scas
xlat
icebp
pop
scas
popa
adc
ins
mov
push
xchg
push
jno
and
nop
cmc
xor
js
xchg
sbb
cmps
daa
aas
fistp
adc
int3
dec
and
and
mov
add
data16
sbb
into
xor
xlat
(bad)
movs
hlt
sbb
cld
(bad)
(bad)
dec
and
inc
adc
dec
cs
gs
fldcw
push
dec
inc
push
cmps
test
mov
pushf
(bad)
mov
xchg
xchg
add
leave
shl
or
push
lea
cs
cld
ds
test
xchg
ror
mov
jl
dec
scas
add
adc
xchg
mul
jbe
int
(bad)
cmp
cmps
xor
add
not
inc
pop
mov
dec
enter
out
ret
inc
(bad)
fs
das
mov
ja
addr16
test
jecxz
js
xchg
push
mov
and
xchg
mov
frstor
sbb
into
bound
xor
jne
inc
xchg
push
rep
sub
sbb
xchg
and
pop
int
jo
jno
dec
or
dec
or
sbb
pop
je
sub
lods
pusha
clc
ror
xchg
cmps
es
pop
ss
ins
pop
or
loopne
cld
stos
jmp
mov
sub
adc
sbb
cmp
les
push
ret
mul
sbb
shl
test
ins
add
xor
and
daa
lds
mov
xor
sub
popa
sub
jecxz
ror
add
dec
loopne
hlt
test
pop
cld
in
adc
outs
push
pop
dec
rol
psadbw
out
mov
cmp
les
stos
mov
and
sti
je
sub
cmp
into
in
bound
add
mov
fnsave
aam
mov
jge
sbb
jo
push
iret
stc
sbb
mov
rcr
call
ret
mov
jns
or
dec
sahf
in
push
cdq
ds
push
mov
sub
xchg
ja
mov
ins
pushw
inc
mov
(bad)
cmp
xchg
sbb
ins
(bad)
xlat
pop
jmp
add
add
dec
stos
add
outs
lahf
cmp
pop
test
ds
imul
pushf
xor
enter
inc
mov
push
add
inc
idiv
mov
dec
daa
mov
pop
shr
xchg
fisttp
dec
pop
outs
sub
push
dec
movs
adc
fiadd
cwde
xor
pop
cmps
aaa
rol
ret
nop
jbe
addr16
push
or
mov
add
inc
push
in
push
cld
pop
mov
mov
mov
pop
jbe
aaa
sbb
dec
xchg
push
xchg
mov
out
xlat
jnp
cdq
jne
icebp
in
imul
mov
dec
int
mov
or
out
pop
mov
and
fadd
jne
ins
mov
mov
push
xchg
inc
std
fsub
pop
dec
test
dec
js
cmp
test
push
retf
inc
je
das
sub
(bad)
int3
(bad)
(bad)
jmp
fistp
and
lahf
cld
jne
cmp
or
pop
sahf
in
and
add
dec
dec
lds
pop
jl
or
pop
cmc
out
cmp
dec
push
stos
mov
out
sbb
lods
stc
stc
dec
data16
dec
add
out
jmp
test
lahf
fdiv
in
pop
mov
dec
mov
icebp
dec
or
and
dec
mov
test
leave
out
popf
mov
aas
jl
xor
stos
jae
daa
(bad)
fcom
sbb
in
jns
mov
lods
cmps
fcom
scas
test
pop
fldcw
cmp
div
imul
cmps
mov
push
ins
movs
lods
cmovl
ss
arpl
(bad)
inc
imul
mov
fnsave
(bad)
mov
xor
mov
inc
sub
jns
or
out
(bad)
dec
xor
ret
sub
jge
sahf
pop
pop
ss
jmp
fs
fbld
mov
outs
iret
mov
adc
pop
loop
shl
mov
repz
or
sbb
mov
outs
ins
sbb
arpl
jb
cmp
inc
aas
jb
out
push
jno
dec
and
xchg
icebp
xchg
std
sub
test
or
xor
stos
sub
cld
pop
push
jge
pop
(bad)
xor
sub
mov
sub
movs
cdq
and
arpl
ret
dec
jns
mov
(bad)
pushf
(bad)
mov
inc
cs
push
dec
out
pop
and
dec
xor
jns
dec
mov
int3
mov
xor
lods
cmps
mov
mov
movs
add
stc
inc
push
fdiv
inc
pushf
xchg
mov
lea
cmp
pop
and
mov
mov
mov
mov
(bad)
xor
je
xor
or
enter
dec
pop
pop
cmp
cld
pop
mov
jle
adc
bound
sar
pop
cmp
sbb
mov
dec
push
sub
xchg
mov
mov
dec
inc
or
cmps
imul
push
dec
push
popa
sbb
fmul
mov
add
data16
retf
mov
inc
not
js
jmp
xchg
mov
mov
dec
mov
aam
dec
xchg
stos
leave
(bad)
int3
cs
repz
mov
jbe
mov
fisub
jmp
mov
dec
ret
ret
cld
not
sti
pushf
push
loope
cmp
mov
xchg
leave
jl
dec
jmp
adc
mov
jg
jmp
xchg
lea
js
test
into
retf
shr
pop
sbb
test
jp
cmp
ret
jbe
and
cmps
imul
add
adc
push
sub
xchg
mov
xor
push
movs
sbb
inc
push
in
pop
sbb
(bad)
mov
pop
ret
xor
mov
dec
lds
sbb
xchg
jno
or
js
mov
int
loope
jl
mov
mov
inc
js
mul
adc
xor
jp
inc
ss
mov
test
sub
jns
in
pop
or
pop
xchg
cmp
outs
adc
movs
push
jl
or
sbb
cmp
imul
sbb
push
mov
jo
test
lds
dec
in
fimul
jne
test
cmp
dec
ret
pusha
sahf
int3
cmp
mov
inc
or
xchg
mov
jbe
popfw
xor
iret
in
sub
xor
(bad)
hlt
mul
cmp
loope
stc
xchg
fs
adc
sub
dec
jae
sub
(bad)
in
lea
sub
dec
leave
ds
jp
iret
push
jbe
adc
or
imul
inc
sub
or
and
leave
cld
icebp
push
fdiv
je
pop
push
enter
cmp
mov
pop
sub
fwait
test
cwde
ds
fist
mov
ja
xchg
sbb
aaa
imul
out
sub
xor
ins
lods
das
inc
push
or
or
repnz
fsubrp
adc
adc
mov
xor
push
sbb
xor
push
cmp
cdq
inc
pushf
sahf
mov
push
cmp
in
inc
dec
mul
xchg
sub
add
fiadd
jl
sub
mov
push
add
mov
xor
repz
cmps
xor
loope
sbb
add
mov
rcr
dec
xchg
call
push
sbb
dec
ja
sub
pop
add
or
les
or
imul
stos
mov
cmp
mov
jbe
add
shr
dec
mul
cld
adc
dec
inc
push
cmp
push
add
leave
mov
stc
xchg
mul
cmp
enter
push
cmc
(bad)
push
enter
cmp
push
inc
scas
mov
push
repz
loopne
mov
mov
mov
mov
inc
cmps
(bad)
(bad)
(bad)
ret
pushf
xor
pop
adc
repz
rcr
out
xchg
int3
fwait
xchg
in
imul
gs
xchg
dec
push
mov
and
mov
retf
mov
ror
(bad)
jbe
jae
push
mov
add
mov
pop
sub
(bad)
and
fmul
idiv
add
jmp
nop
movs
cmp
outs
sub
sub
dec
stos
add
lods
xchg
in
sbb
pusha
xor
cdq
stc
push
jns
pop
imul
mov
sub
and
cmps
jp
enter
jnp
push
movs
mov
cmp
repz
test
mov
and
push
xchg
sub
sbb
retf
inc
push
les
pop
repz
repnz
adc
std
out
dec
and
push
jecxz
sbb
sbb
es
lock
adc
hlt
xor
sahf
push
cmps
jp
dec
xchg
and
in
adc
mov
repz
jecxz
sub
adc
dec
retf
and
ja
arpl
mov
ror
jl
mov
or
in
xchg
repz
xchg
and
cld
xchg
mov
loope
or
jl
mov
push
repz
icebp
xor
xchg
or
jge
dec
sbb
xor
xchg
std
sub
cmp
push
ins
cdq
add
inc
push
(bad)
fild
add
cmp
enter
push
icebp
out
ror
sub
sub
or
pop
xor
sbb
mov
pop
mov
arpl
retf
or
sub
rcl
data16
or
sbb
inc
dec
fdiv
mov
sbb
ret
adc
xchg
add
sub
cmp
(bad)
fistp
scas
mov
sub
dec
push
rep
xchg
inc
bound
adc
adc
imul
xchg
jl
out
and
lods
dec
stc
jecxz
xchg
ins
and
aam
imul
(bad)
ja
out
sub
lahf
push
dec
mov
out
xchg
mov
dec
jp
mov
adc
imul
add
and
mov
std
in
jle
inc
mov
xor
mov
cdq
clc
add
leave
aad
push
mov
cld
cmps
inc
push
mov
pop
(bad)
mov
cmp
dec
or
cld
lea
cli
stc
stos
pop
or
and
sbb
jge
xor
or
xchg
aas
test
xchg
and
add
fldenv
ins
jmp
add
inc
call
pop
xchg
xor
(bad)
fadd
lods
jmp
sbb
xchg
xor
rcl
jae
dec
rcl
mov
push
int3
mov
jb
xchg
ins
stos
std
add
jne
popf
add
fsub
inc
nop
pop
dec
mov
test
xor
inc
call
push
repz
jecxz
popa
sbb
mov
pop
test
sahf
out
sub
mov
mov
sub
inc
loopne
adc
sbb
cli
loop
out
jns
mov
repnz
shl
cmp
mov
push
popa
sbb
xor
xor
inc
sahf
jg
sub
mov
repz
jnp
mov
(bad)
xor
mov
repz
jno
mov
inc
mov
xchg
pop
mul
sub
int
adc
mov
cmp
adc
cmp
adc
xchg
or
jne
cmps
cli
pop
(bad)
push
ins
leave
int
jae
and
add
test
pop
mov
jecxz
sahf
add
push
ffreep
push
and
jno
ret
sbb
push
in
jle
hlt
pop
jo
inc
adc
test
ffreep
test
ss
les
pop
cmp
mov
mov
inc
xchg
shl
xor
add
and
cmp
daa
jle
out
sbb
pop
inc
in
xor
daa
test
adc
ins
cmps
mov
jns
loopne
aaa
jne
daa
cmp
dec
push
fiadd
pop
aas
adc
fucomip
std
and
adc
dec
push
leave
pop
and
aam
(bad)
sbb
in
add
xor
pop
out
movs
addr16
iret
pop
mov
fld
dec
popf
sbb
ins
mov
add
stc
outs
add
cdq
jge
leave
sbb
repz
or
gs
std
(bad)
dec
ret
daa
movs
jge
inc
inc
sar
in
out
scas
adc
fnstenv
add
in
imul
add
out
movs
(bad)
in
imul
jl
adc
std
push
or
sub
cmp
mov
or
cmc
pop
dec
inc
pop
sbb
repz
xchg
jge
push
mov
fsub
or
inc
inc
iret
add
ins
test
xchg
push
pop
imul
bswap
mov
cmps
push
out
lea
mov
pop
mov
or
sbb
cmp
mov
add
lea
lods
mov
test
sub
fcomp
dec
int3
adc
pushf
sub
and
js
push
loopne
pushf
mov
bound
mov
push
cmp
mov
cs
mov
loop
(bad)
cli
sbb
in
mov
fsub
sub
mov
bound
(bad)
dec
xlat
ss
xlat
adc
adc
jecxz
cld
lea
and
add
push
cmp
pop
pop
and
cmp
xlat
push
fld
cmc
dec
es
repz
loop
mov
inc
mov
xlat
in
outs
push
imul
mov
mov
mov
xchg
cmp
adc
clc
enter
popa
es
pop
dec
or
jecxz
sbb
inc
mov
stc
neg
adc
dec
int
mov
pop
iret
inc
sbb
test
fucom
js
leave
xchg
or
pop
sti
ins
and
(bad)
arpl
out
push
dec
sub
pop
les
lds
and
mov
mov
and
in
mov
cmp
fs
arpl
cmp
mov
sub
aam
xor
sbb
xchg
int3
cmp
push
push
scas
aas
mov
jl
xor
(bad)
mov
retf
jae
mov
loop
push
mov
pop
out
das
es
inc
xchg
cdq
cmp
inc
pop
bnd
in
or
mov
adc
sub
data16
inc
inc
imul
popf
mov
or
mov
pop
int3
lea
mov
mov
cmps
adc
mov
fdivr
add
add
mov
mov
mov
pop
mov
push
int3
pop
pop
push
push
xor
outs
cld
(bad)
int3
leave
test
mov
outs
call
pop
or
pop
out
jno
out
hlt
not
imul
mov
dec
nop
sub
pop
enter
and
sub
aaa
pop
repz
or
inc
(bad)
xor
push
mov
sahf
ins
ret
pushf
mov
pop
add
std
(bad)
iret
adc
inc
(bad)
test
in
or
imul
lea
call
and
in
jb
dec
imul
iret
movs
shl
sbb
popa
add
and
lods
and
push
pop
push
pop
leave
or
mov
sub
mov
add
pop
std
pop
rol
repnz
inc
sbb
fs
sbb
cmp
stos
call
mul
add
shr
inc
fld
stc
ror
cmp
fcmovnb
inc
xchg
inc
movs
arpl
sbb
test
imul
in
cmps
or
sub
mov
xchg
repz
jnp
ins
add
lahf
cmp
mov
pop
jbe
xor
mov
fldcw
cli
lahf
mul
shl
mov
pop
or
xor
sub
popf
in
mov
pop
inc
(bad)
xchg
cmp
stc
rcr
dec
push
ds
adc
xor
test
retf
adc
rol
repz
data16
dec
xor
cmc
mov
aad
push
cdq
sub
xchg
retf
jl
mov
mov
or
movs
retf
sub
pop
fcomp
adc
loop
push
push
dec
inc
sub
jecxz
xchg
nop
sahf
xor
movs
int
mov
pop
push
lahf
jne
ins
pop
xchg
cs
cmp
fild
fs
mov
cmp
xchg
jae
push
fdivr
sub
lods
add
xchg
pusha
push
add
cmp
xchg
cmps
jbe
sbb
jae
jnp
out
xchg
xchg
dec
push
xchg
daa
sub
mov
jb
adc
sub
inc
outs
jne
imul
cmp
cmp
xlat
into
sub
mov
or
fld
fcom
xchg
cmp
nop
mov
test
hlt
ror
and
mov
adc
adc
and
aad
(bad)
dec
jge
ss
adc
das
into
mov
(bad)
in
inc
or
sahf
or
int3
mov
(bad)
xchg
jge
addr16
mov
test
icebp
xor
adc
out
mov
inc
cmps
es
cli
sub
dec
push
jecxz
mov
xchg
fadd
adc
nop
jmp
fld
lods
xchg
or
std
mov
adc
jne
add
mov
or
es
sbb
sbb
in
push
ins
xchg
mov
(bad)
ror
jmp
pop
dec
inc
pop
jae
es
cwde
push
mov
loopne
mov
cli
addr16
pushf
sbb
aas
not
jns
fcomp
test
jno
pushf
sbb
pop
or
xchg
in
cmp
cmp
cld
out
push
or
and
pushf
pop
gs
xchg
sub
pop
pop
pop
lods
ret
lahf
(bad)
jb
icebp
mov
cmp
aas
imul
pop
test
not
add
cmp
shr
xchg
imul
ja
cdq
inc
sar
arpl
aaa
ja
enter
in
pop
mov
es
cmp
lea
scas
popf
lods
adc
sub
xchg
jbe
call
jae
and
or
dec
jecxz
cs
(bad)
int3
sti
leave
push
xchg
maxps
aad
cmp
sbb
cmp
hlt
in
cmp
xchg
jae
pushf
xor
inc
add
jne
mov
mov
push
push
in
sbb
mov
lods
jecxz
ror
sbb
sbb
sub
cmp
xchg
stc
sbb
adc
mov
pop
stc
push
mov
arpl
je
dec
adc
pop
imul
xor
scas
xchg
pushf
add
cmp
xor
mov
adc
outs
cmps
jo
enter
mov
cld
or
lods
sub
scas
and
cmps
jge
dec
inc
sub
dec
in
in
imul
pop
xor
jns
sub
push
scas
pop
(bad)
and
xchg
mov
test
cwde
mov
in
ss
mov
arpl
data16
mov
aam
shl
sub
mov
repnz
push
or
ins
in
mov
or
sub
push
or
sbb
enter
or
int
sahf
sti
loope
rol
in
inc
in
imul
sub
dec
jmp
push
ins
mov
and
cmp
jae
outs
es
and
push
out
into
int
(bad)
not
fwait
ret
shr
jbe
xchg
push
mov
ror
test
cmp
dec
imul
test
add
inc
jmp
fwait
mov
sbb
and
inc
fisub
rcl
pop
add
adc
xchg
mov
pop
fidivr
and
inc
int
mov
out
sub
and
sti
mov
imul
mov
xchg
or
ss
scas
xor
push
iret
pop
repz
ja
mov
sub
int
out
jl
movs
iret
push
and
ss
ret
shr
jmp
std
icebp
mov
jo
in
test
cmp
popf
push
dec
add
loope
xlat
data16
sbb
cmp
fisttp
or
cmp
loopne
xchg
into
iret
ret
mov
(bad)
out
inc
cmp
jb
pop
inc
push
adc
inc
push
sbb
call
into
fdivr
jo
mov
mov
adc
sbb
daa
int3
shl
test
jle
fld
jb
pop
cmc
pop
inc
push
push
ds
cmp
or
pop
mov
jecxz
sub
sbb
jmp
xchg
aam
mov
jl
sub
push
xlat
je
fistp
push
sbb
(bad)
(bad)
test
cmp
dec
cld
sub
pushf
jmp
push
jl
cmp
mov
lahf
into
push
pop
or
push
dec
(bad)
pop
sti
in
cmc
pop
cmps
add
adc
xchg
mov
stc
div
jae
fnstenv
lods
pop
pusha
and
cmp
addr16
mov
leave
fnstcw
test
aaa
push
(bad)
repnz
mov
or
call
cld
mov
out
inc
scas
mov
cwde
jbe
jbe
test
les
mov
or
loop
xor
pop
test
arpl
jl
sahf
pop
fbld
push
sbb
in
sbb
outs
int
jl
das
jecxz
xchg
fbld
mov
stos
push
ss
(bad)
mul
mov
sub
out
inc
dec
pushf
mov
xor
(bad)
mov
or
ins
add
xchg
icebp
jmp
popf
sub
fisub
clc
mov
or
(bad)
repnz
xchg
or
jb
dec
int
cs
inc
or
ins
clc
adc
idiv
nop
jmp
fld
sub
cmp
(bad)
xchg
imul
out
(bad)
dec
mov
inc
lods
xchg
ror
rol
sub
lods
jb
fxch
adc
lea
popa
mov
xchg
int3
xor
retf
and
mov
dec
outs
iret
std
xchg
cdq
in
sbb
pop
sub
or
neg
les
mov
cmps
aas
cmp
hlt
jbe
xor
push
hlt
in
jge
cwde
inc
pop
test
pop
js
addr16
inc
cdq
xchg
bound
ja
pop
sub
imul
popf
ins
stc
jecxz
mov
(bad)
and
gs
inc
jp
jns
mov
iret
pop
ja
addr16
xchg
idiv
ins
mov
jecxz
into
mov
das
ins
jns
adc
push
pop
arpl
mov
xor
cld
ds
mov
pushf
add
jl
iret
xchg
movs
push
sbb
pop
movs
add
xchg
(bad)
aaa
xor
jg
pop
mov
js
xchg
cmp
imul
js
retf
(bad)
mov
sub
test
je
data16
xlat
shr
fild
mov
add
mov
mov
enter
test
sub
cmp
or
dec
cmps
test
movs
(bad)
and
mov
adc
xchg
jae
push
iret
ins
xchg
push
mov
sbb
bound
in
pop
xor
into
cmp
jp
jle
xor
ss
adc
es
add
aas
out
pop
std
(bad)
and
and
jmp
fistp
xor
pop
or
sbb
in
mov
test
jae
mov
inc
inc
sbb
lods
push
push
div
or
out
pop
std
(bad)
and
dec
pop
rol
xchg
push
test
pop
add
or
pop
push
in
push
repz
pop
(bad)
hlt
mov
loop
xchg
fs
pushf
loopne
out
jl
or
pop
fidivr
push
cmc
mov
out
(bad)
int3
push
fsubr
mov
jbe
data16
movs
add
les
cmp
or
sbb
test
cld
ds
dec
mov
cmps
push
shr
xchg
bnd
dec
scas
sbb
lahf
push
js
add
leave
fsub
enter
arpl
push
pop
inc
mov
(bad)
es
or
sbb
in
(bad)
jne
cs
mov
cmps
js
gs
test
les
fild
cmp
sbb
out
xchg
outs
(bad)
xor
lods
aaa
mov
aad
mov
fld
lds
push
in
sbb
in
mov
aas
mov
pop
mov
xchg
iret
xchg
inc
dec
(bad)
pop
ds
js
or
push
mul
push
mov
mov
sbb
jl
pop
inc
shl
inc
es
scas
push
hlt
stc
in
push
cwde
adc
add
fist
dec
pop
mov
dec
movs
sbb
jecxz
jno
fs
xor
xchg
cmp
dec
scas
push
mov
lea
in
sbb
pop
int3
(bad)
cwde
mov
mov
pusha
jb
mov
scas
pop
and
fnstcw
mul
adc
xor
movs
rol
xchg
fadd
out
jge
or
dec
fisubr
ins
sbb
mov
xchg
je
xlat
aaa
rol
push
cld
loope
jge
pop
sbb
fimul
cmp
or
sbb
xlat
ins
mov
jmp
mov
popf
fsub
mov
mov
pop
scas
test
push
pop
or
cdq
(bad)
fstp
rol
xor
xor
sbb
fistp
(bad)
dec
adc
xchg
cmps
add
leave
xchg
mov
mov
ds
lahf
(bad)
movs
ret
add
cmp
int3
xor
jo
dec
aam
dec
ret
les
and
inc
fistp
sbb
hlt
cmp
stos
int
or
xchg
fisttp
push
or
call
push
dec
pushf
mov
(bad)
xor
and
mov
push
xchg
xor
or
mov
neg
inc
cld
mul
cmp
int3
mov
(bad)
pop
cmp
cdq
cmc
push
(bad)
adc
mov
or
pop
stos
aad
lods
fimul
cmps
stc
xchg
lea
arpl
imul
jecxz
pop
ss
out
xchg
mov
outs
mov
sub
adc
sub
mov
(bad)
adc
and
stc
outs
(bad)
push
mov
mov
lahf
xor
(bad)
cwde
mov
cmps
test
loope
jge
sbb
sbb
rcr
pop
int
mov
or
push
enter
fcomp
in
stc
add
lds
arpl
stc
pop
sahf
mov
(bad)
and
loop
shl
jbe
mov
ss
jbe
sar
push
xor
or
retf
outs
xor
cmp
mov
cli
add
adc
test
adc
pop
test
inc
jg
adc
scas
pop
outs
imul
xchg
or
cdq
mov
jl
pushf
and
int
ss
jno
or
imul
movs
sub
add
mov
jo
pop
jbe
adc
out
xor
mov
or
les
inc
stos
(bad)
icebp
xchg
loopne
jecxz
jecxz
ret
arpl
and
pop
mov
and
sbb
adc
and
cmps
lea
outs
cmp
inc
add
shl
cmp
imul
daa
xor
jo
mov
add
xchg
loop
cs
retf
inc
fldcw
mov
inc
sbb
mov
mov
outs
push
idiv
arpl
and
retf
mov
in
jecxz
in
mov
sub
dec
mov
xor
mov
js
dec
adc
and
fs
loop
xchg
in
pushf
mov
push
jl
and
jmp
mov
inc
rcl
or
xor
mov
or
dec
mul
jns
xchg
cmps
rcr
jecxz
cmps
pop
xor
mov
jbe
aas
jl
dec
adc
cmps
xor
pop
or
cmps
stos
mov
daa
stc
mov
mov
jne
adc
aaa
aas
es
stos
inc
sbb
stc
ins
mov
jecxz
jmp
push
ins
jne
push
sbb
mov
or
or
mov
sbb
les
mov
ins
cdq
imul
sub
hlt
dec
push
es
test
std
(bad)
int3
xchg
add
pushf
sbb
sub
sub
push
pop
push
push
pop
mov
(bad)
mov
mov
ret
and
das
push
jecxz
pop
fisubr
push
jmp
in
mov
(bad)
int3
or
jnp
push
cld
aad
jl
or
sbb
aam
dec
or
or
add
cld
mov
call
xchg
jbe
xchg
adc
inc
mov
sub
cmp
or
pop
push
in
push
jmp
mov
loop
xchg
fs
pushf
pop
ins
xor
in
fidivr
es
push
test
cmc
mov
out
ret
int3
scas
fadd
lods
dec
clc
xor
add
xchg
push
movs
add
les
jno
push
sbb
test
cld
ds
mov
shr
xchg
add
scas
sbb
push
and
add
rcr
shr
pushf
sahf
js
sbb
inc
mov
(bad)
es
or
sbb
in
(bad)
jne
cs
fs
gs
test
xor
fild
cmp
sbb
js
mov
adc
mov
mov
aad
mov
sub
lds
push
in
sbb
in
xchg
cld
aas
mov
pop
mov
xchg
iret
xchg
inc
dec
and
js
or
or
mov
push
(bad)
and
mov
hlt
mov
jl
pop
inc
cmp
push
scas
push
hlt
in
xchg
inc
int3
das
cwde
adc
in
xchg
test
fist
push
pop
push
sub
cmp
dec
movs
retf
jne
xchg
std
lea
xchg
fcompp
pop
into
ror
sbb
imul
add
jle
add
mov
mov
xchg
leave
xchg
pop
push
(bad)
jmp
imul
mov
rep
pop
mov
sub
(bad)
std
xor
out
cmp
repz
hlt
movs
mov
and
cld
pushaw
ror
jae
inc
jg
add
sub
cmp
or
xchg
jnp
inc
(bad)
call
inc
and
cmp
adc
cmp
pop
loopne
sub
mov
mov
push
in
data16
rcr
adc
stos
js
in
push
jecxz
jmp
mov
sub
lds
cmp
scas
test
dec
push
stc
aad
push
out
adc
lods
pop
aas
inc
je
jle
sub
mov
rcr
inc
xchg
mov
out
sbb
cmps
dec
xchg
pop
inc
lds
and
sub
fnstsw
push
sbb
mov
pop
movs
inc
bound
xchg
pop
dec
sahf
pop
jae
mov
dec
in
clc
mul
movs
into
test
jg
mov
jge
pop
test
inc
out
adc
lods
(bad)
push
xchg
enter
or
xchg
pop
movs
int3
ss
push
iret
stc
sbb
test
mov
jne
out
jg
outs
push
sbb
cdq
sub
test
inc
scas
pop
pop
jecxz
cmp
(bad)
cmps
inc
ror
push
inc
in
jb
in
push
dec
out
dec
push
mov
sub
mov
ds
jae
(bad)
in
mov
sub
cmp
xchg
sbb
inc
jne
sbb
imul
leave
jge
pop
push
dec
lds
dec
mov
and
jne
clc
dec
dec
push
dec
add
out
in
gs
or
sbb
test
lahf
fdiv
in
pop
mov
dec
mov
test
mov
test
leave
out
pushf
mov
aas
jl
pushf
inc
stos
jae
es
fst
sbb
in
jns
mov
lods
cmps
aam
retf
ret
hlt
jbe
stos
and
fldcw
cmp
rcr
pushf
out
xchg
movs
(bad)
pop
jnp
cmps
mov
push
ins
movs
mov
dec
inc
mov
retf
arpl
enter
cmps
cld
pop
mov
mov
xor
mov
adc
jns
or
shr
dec
xor
ret
sub
jl
sbb
ss
jmp
fs
fistp
mov
cld
fmulp
mov
ins
iret
mov
adc
(bad)
xchg
add
(bad)
sbb
cmp
(bad)
stos
repz
pushf
push
jns
ds
test
push
retf
inc
je
das
xor
(bad)
int3
jle
fldl2t
into
mov
jbe
imul
inc
lahf
in
es
or
pop
sahf
in
and
pusha
mov
jecxz
xchg
add
push
ins
xor
test
in
ins
pop
lock
sbb
jecxz
jb
inc
(bad)
push
out
cs
cmp
imul
retf
pushf
mov
cmp
jb
jns
ja
and
fcomip
inc
push
mov
mov
sbb
cmps
(bad)
sbb
jae
hlt
sti
ins
jbe
data16
inc
sbb
aas
daa
cld
push
inc
adc
pop
out
sbb
sub
pushf
sti
ins
in
icebp
push
inc
inc
rol
stos
ins
push
(bad)
adc
mov
(bad)
addr16
ret
push
add
xor
push
add
jmp
cli
lock
test
dec
cmp
push
lock
fld
fcom
cmp
iret
mov
push
dec
mov
mov
(bad)
sub
mov
jle
inc
inc
idiv
xchg
fdivr
push
and
je
fs
mov
lds
jns
or
sbb
data16
mov
dec
das
xchg
xor
popf
jae
js
arpl
or
int3
stos
sbb
fsubr
out
test
jg
leave
adc
xor
dec
retf
mov
daa
out
cmp
jecxz
jg
inc
dec
and
jb
mov
mov
in
loope
xchg
int3
pop
call
mov
mov
stc
retf
test
mov
ds
fidiv
out
das
test
sub
mov
ins
(bad)
enter
mov
test
test
lods
pop
popf
iret
je
repz
push
movs
mov
push
retf
lods
jmp
xchg
shl
data16
mov
push
int
iret
(bad)
cdq
mov
fucomp
movs
and
jae
mov
xlat
or
dec
(bad)
aad
loope
cld
push
xor
mov
cmps
push
repnz
cmp
and
pop
push
sbb
scas
cmp
add
mov
test
outs
dec
jmp
jae
retf
xor
popa
adc
dec
sbb
sahf
pop
pop
push
pop
adc
sbb
and
add
cdq
inc
and
sub
push
sbb
mov
fs
pop
test
(bad)
(bad)
xchg
pop
mov
cmps
mov
xor
enter
pop
lahf
leave
xchg
daa
cmp
dec
lea
in
adc
mov
lods
leave
mov
cmps
inc
xchg
add
jge
dec
fdivrp
aaa
push
pop
in
in
in
mov
fmul
mov
cmp
xchg
dec
mov
push
pop
lds
adc
cld
cmp
mov
mov
std
xor
inc
dec
adc
push
loopne
sbb
mov
daa
stc
mov
mov
jl
adc
aaa
ss
stos
inc
sbb
stc
ins
mov
jecxz
jmp
push
ins
jl
push
sbb
mov
or
or
mov
sbb
les
mov
ins
cdq
imul
sub
cmc
dec
adc
mov
iret
int3
or
jnp
push
cld
aad
jl
or
sbb
sub
repnz
or
or
mov
(bad)
out
in
dec
in
fs
pop
xchg
in
imul
in
mov
cld
int3
mov
pop
call
xchg
adc
inc
mov
sub
cmp
or
pop
push
in
push
loopne
in
in
mov
loop
xchg
fs
or
pop
fidiv
es
nop
push
cmc
mov
out
retf
fdivr
dec
clc
xor
inc
fs
movs
add
les
cmp
or
sbb
test
cld
ds
sti
mov
cmps
push
shr
xchg
inc
jl
dec
scas
sbb
sub
jo
add
fstp
nop
lods
dec
mov
sahf
ja
pop
push
push
inc
mov
(bad)
es
or
sbb
in
(bad)
jne
cs
mov
cmps
mov
jbe
jge
jae
add
test
pop
push
cmp
xchg
out
xchg
outs
(bad)
xor
lods
cmp
mov
push
bound
aad
dec
cld
aas
mov
pop
mov
lahf
xchg
nop
xchg
iret
xchg
dec
dec
gs
dec
sub
js
or
add
(bad)
and
mov
pushf
lahf
sub
jl
push
inc
jge
inc
es
scas
push
hlt
in
in
(bad)
cld
adc
das
cwde
adc
lods
xchg
test
fist
pop
pop
push
sub
mov
sbb
cli
in
push
cld
fimul
sub
adc
push
pop
into
pop
data16
(bad)
rcl
inc
ror
mov
test
jo
sbb
mov
push
aad
jb
inc
out
stc
xor
adc
push
add
mov
push
cmp
movs
or
dec
inc
xlat
pop
sub
xor
(bad)
movs
mul
outs
std
pop
mov
pop
pushf
xchg
(bad)
out
div
scas
jl
lds
mov
push
push
pop
sbb
(bad)
cdq
loopne
pusha
in
jle
bound
jp
jmp
neg
pop
cmps
shl
xchg
dec
push
inc
or
add
lahf
rcr
mov
cmps
mov
xchg
adc
leave
jl
movs
fwait
or
sbb
out
mov
inc
push
and
stos
clc
scas
mov
jmp
mov
les
mov
out
je
mov
mov
dec
sahf
lea
and
scas
cmp
mul
jbe
int
(bad)
cmp
cmps
xor
push
ret
popf
sti
aas
mov
(bad)
jae
stos
outs
pushf
mov
sbb
ins
xchg
cld
test
and
es
mov
sub
in
jbe
mov
aad
dec
cs
push
add
cwde
adc
(bad)
(bad)
cmp
and
popf
mov
mov
test
mov
clc
fisub
adc
ret
cdq
or
dec
(bad)
mov
stc
cdq
imul
jbe
xchg
dec
dec
cdq
pop
push
pop
cmp
xchg
cdq
call
sub
ins
push
or
xchg
das
cmp
inc
jmp
into
pop
jbe
sbb
cmps
es
push
push
jecxz
mov
and
cmc
add
loope
sub
push
jp
and
inc
sbb
dec
push
sbb
(bad)
dec
dec
fdiv
pop
out
ror
or
or
or
or
std
xchg
and
fadd
nop
xor
cmp
cmp
enter
je
mov
xchg
push
dec
das
idiv
xchg
test
adc
and
(bad)
sub
js
xchg
xchg
out
(bad)
je
push
inc
lods
push
clc
sbb
or
mov
xor
scas
and
cmp
or
pop
xor
movs
mov
cmps
inc
jb
ret
jns
jno
or
adc
scas
mov
adc
xlat
movs
(bad)
(bad)
out
pusha
test
xlat
xchg
mov
pop
or
ins
(bad)
fadd
(bad)
cmps
test
sbb
ds
inc
push
jl
pushf
mov
push
pop
nop
dec
shl
gs
sbb
pop
movs
mov
nop
xchg
dec
lods
lock
jo
sahf
cmps
xchg
jmp
adc
jae
jne
push
repz
hlt
neg
dec
and
mov
fst
cmp
int3
adc
xchg
cli
push
fs
(bad)
mov
and
mov
jmp
shl
sub
pop
xchg
or
dec
push
dec
cli
jecxz
ss
and
fs
jge
cmp
xchg
ss
sbb
movd
mov
cld
mov
pop
mov
sti
cmp
jo
add
mov
shr
ror
ficom
std
sbb
leave
mov
mov
jl
scas
(bad)
(bad)
jl
xor
repz
xchg
adc
add
cmp
mov
xorps
inc
or
sbb
fprem
push
ins
mov
or
ins
dec
inc
sub
popf
xor
test
cmp
dec
or
mov
xlat
int3
dec
fdivr
cmps
sti
jl
push
sbb
mov
in
(bad)
sbb
adc
ja
enter
ins
xchg
aaa
sahf
mov
fdivr
pusha
(bad)
in
aad
xchg
mov
pop
or
push
ret
inc
lods
push
imul
mov
sub
aaa
repnz
fdiv
daa
cmps
or
stc
add
arpl
rol
(bad)
jle
push
imul
cld
push
jmp
jmp
retf
push
out
mov
xchg
xchg
adc
and
and
cld
jae
je
loope
mov
dec
mov
cmp
or
sbb
shl
dec
push
sub
xchg
test
shr
xchg
mov
sbb
fidiv
(bad)
and
cmps
clc
ror
test
inc
or
jo
jle
push
mov
xchg
adc
xchg
in
jns
sti
ins
jmp
test
mov
sbb
in
out
(bad)
and
push
in
cmps
xor
mov
ret
outs
jno
dec
inc
xlat
aaa
mov
rcr
int3
dec
mov
xchg
jae
fdiv
ins
jmp
push
movs
retf
pop
data16
mov
or
sbb
add
mov
fsub
ret
std
cmp
pop
dec
dec
pop
mov
aaa
dec
sbb
call
inc
push
lea
adc
sahf
mov
je
adc
adc
scas
mov
sub
test
cmp
out
mov
(bad)
pop
es
dec
into
fdiv
call
dec
push
fild
sbb
movs
and
or
addr16
cmc
push
das
das
mov
cdq
cmp
jp
cwde
jbe
adc
cmps
mov
rcl
pop
jne
mov
test
sar
ret
ja
movs
in
cmp
mov
cmp
jle
mov
sbb
lods
mov
pop
add
mov
and
pop
jge
(bad)
(bad)
push
cmc
inc
fdiv
add
jl
movs
int
sar
ret
jmp
add
int3
mov
retf
mov
xchg
data16
cmp
mov
or
ins
cld
xor
cdq
pop
jmp
ret
mov
inc
mov
movs
lods
sub
dec
push
inc
push
in
out
(bad)
mov
mov
fld
(bad)
fmul
pushf
es
aas
sub
mov
xor
xchg
or
pop
and
dec
sub
xchg
fdivr
cmp
dec
jns
mov
jg
push
or
or
jne
outs
lock
mov
push
cmps
mov
stc
inc
fnstenv
push
adc
(bad)
test
addr16
aam
test
xchg
pusha
jbe
in
idiv
data16
cmp
lahf
int
fst
(bad)
cdq
cli
int3
xor
mov
mov
sbb
cmps
dec
push
aad
cmp
pop
test
jnp
clc
stos
std
sbb
xchg
xchg
pushw
test
or
mov
or
inc
test
xchg
inc
(bad)
leave
cmp
pop
push
jl
xchg
adc
jne
mov
lock
imul
mov
cmp
mov
repnz
jbe
push
fiadd
add
xchg
shr
aam
sub
in
stc
cld
mov
and
inc
sbb
mov
clc
adc
aaa
(bad)
cmp
or
sbb
adc
call
cmp
lods
sub
call
add
adc
jns
inc
imul
mov
and
fmul
pushf
sti
ins
and
mov
dec
or
or
sbb
(bad)
int3
lods
das
jno
sub
sahf
scas
out
das
jbe
into
scas
leave
pop
(bad)
arpl
(bad)
hlt
jl
push
leave
xchg
inc
(bad)
adc
test
xor
xchg
adc
ss
daa
mov
xchg
(bad)
fnstenv
lods
xchg
fdiv
push
jge
dec
mov
sbb
stc
dec
mov
out
adc
push
dec
fnstcw
xchg
ja
in
push
push
mov
dec
imul
cmc
cmps
in
ds
xchg
inc
push
pop
xchg
icebp
xchg
push
adc
mov
push
or
inc
aas
out
pop
std
xchg
shufps
pop
jle
adc
pop
dec
sahf
pop
jae
mov
dec
in
clc
mul
ja
out
mov
mov
inc
mov
jae
cwde
adc
js
dec
and
scas
in
jns
xchg
shufps
inc
fdiv
not
mov
pop
push
dec
lds
xor
or
sbb
ins
aas
jge
dec
add
popf
sbb
shr
inc
adc
cmps
in
jnp
fnstenv
(bad)
push
push
clc
jb
cmp
jge
(bad)
cld
(bad)
int
fdiv
outs
cmps
jmp
sahf
mov
addr16
cmp
xchg
sbb
inc
jne
sbb
imul
leave
jge
pop
push
dec
(bad)
in
out
(bad)
dec
xor
ficomp
xchg
pop
ss
es
fs
fistp
mov
ja
mov
adc
(bad)
lea
(bad)
jecxz
daa
mov
stos
repz
pop
aad
pushf
push
ins
jns
ds
nop
outs
sub
and
retf
inc
je
das
sub
fldl2t
into
inc
push
inc
fistp
and
lahf
sti
jne
cmp
or
pop
sahf
adc
pop
mov
jecxz
imul
jl
or
mov
push
int3
push
stos
mov
sbb
sbb
stc
stc
(bad)
jae
push
das
ins
data16
dec
add
out
jmp
sbb
test
lahf
fdiv
in
pop
mov
dec
mov
in
dec
or
test
dec
mov
test
leave
out
arpl
pop
inc
stos
jae
fcos
(bad)
push
push
sbb
in
jns
mov
lods
cmps
cld
xchg
retf
ret
hlt
mov
rcr
dec
ret
aad
pop
sbb
xchg
out
xchg
movs
cmp
fs
cmps
mov
push
xchg
movs
scas
cmovl
ss
arpl
push
btc
div
mov
mov
popf
lods
mov
clc
cmps
jnp
sbb
or
jle
lds
xchg
push
leave
pop
mov
cs
and
int
jnp
es
xchg
div
mov
fcomip
fldcw
xor
sub
push
jg
mov
iret
loopne
mov
popa
(bad)
and
cdq
mov
sub
mov
bound
(bad)
dec
inc
int3
mov
dec
xchg
data16
fbstp
les
push
jnp
pop
jge
push
add
ficom
lds
xchg
(bad)
clc
cmp
pop
(bad)
dec
sub
mov
call
adc
mov
repz
shr
cmp
jmp
repz
pop
or
fwait
gs
repnz
enter
nop
(bad)
pop
lds
sub
bound
lods
lahf
add
scas
idiv
jg
mov
add
fwait
in
in
cmp
(bad)
sbb
ja
mov
xchg
dec
mov
aas
out
call
jmp
dec
fild
das
loope
pushf
or
out
jg
popf
xor
(bad)
sbb
cmc
jo
ja
pop
and
mov
std
ins
enter
sti
daa
das
and
xchg
std
out
cmp
inc
scas
and
inc
or
mul
push
pop
xor
xchg
iret
ins
ffree
fbstp
imul
aam
pop
dec
sbb
dec
inc
(bad)
fnstcw
mul
cld
(bad)
int3
vpshuflw
jbe
(bad)
push
in
cmps
outs
je
aas
retf
pop
ss
repz
clc
add
dec
loopne
mov
cld
cmps
in
mov
add
div
and
cmps
ss
push
pop
push
lods
out
test
lods
js
dec
in
pop
sbb
or
cmp
inc
cld
repz
(bad)
jb
dec
dec
popf
mov
(bad)
xor
jmp
outs
aaa
push
push
lods
mov
lods
dec
dec
popw
dec
fstp
ds
dec
retf
push
jnp
add
mov
cwde
outs
std
loop
jle
ret
sub
jge
pop
or
and
stc
imul
out
scas
sub
push
jns
sti
push
rcl
or
stc
js
in
out
pop
ror
ja
dec
jg
int
call
test
shl
adc
sbb
clc
std
call
jle
(bad)
jle
cdq
xchg
or
inc
xlat
(bad)
cmp
adc
mov
add
xchg
int3
stc
adc
push
xchg
out
push
pop
(bad)
or
imul
dec
addr16
out
mov
in
mov
lea
js
add
mov
jo
sub
jmp
retf
add
test
or
cld
sub
ret
fs
and
dec
mov
shl
in
push
lods
(bad)
int3
(bad)
mov
push
mov
sti
ins
jmp
inc
mov
call
xchg
inc
dec
xor
es
rol
jns
jbe
sub
stos
(bad)
out
push
jl
sub
fs
sahf
adc
dec
xlat
mov
fnstcw
mov
jns
ja
call
jl
mov
repz
or
or
dec
mov
push
std
sub
outs
mov
sbb
and
jb
call
cmc
add
xlat
mov
inc
sbb
cmp
nop
mov
lock
sbb
xor
jl
test
jns
in
jae
push
addr16
and
adc
arpl
and
jg
mov
push
cmps
push
jge
sbb
and
enter
ins
xor
push
jg
pop
inc
jg
sub
in
es
push
dec
(bad)
mov
add
fs
pushf
std
cmp
sub
es
lds
cs
out
xor
fdivr
add
call
mov
in
xchg
add
lods
scas
push
imul
and
ret
jb
cmp
js
add
mov
jbe
jmp
cmps
(bad)
or
cmps
dec
pop
pop
jns
arpl
or
or
std
in
(bad)
test
lods
dec
mov
or
cwde
pop
aad
add
(bad)
hlt
pop
sbb
in
add
(bad)
mov
inc
popa
cdq
dec
push
iret
ins
xchg
aad
cwde
mov
rcr
inc
xchg
mov
out
xlat
test
icebp
imul
cmps
push
xchg
(bad)
arpl
jns
xor
ss
aam
pushw
out
stc
das
push
outs
int
xor
fadd
in
ins
mov
clc
xchg
(bad)
cs
cmp
pop
sbb
in
push
cld
xchg
fwait
xchg
cwde
into
cmc
cmps
push
xchg
in
and
call
shl
push
dec
push
dec
mov
mov
and
bound
imul
jl
dec
add
pushw
push
in
je
push
sub
xor
push
shrd
fldenv
cmp
pop
cmovl
repnz
stc
aad
push
out
cmp
ds
sti
idiv
in
aad
je
cmp
sbb
(bad)
adc
push
dec
push
hlt
jl
out
and
femms
shrd
mov
push
es
pop
arpl
ftst
mov
xor
cld
aas
mov
pop
mov
jne
iret
xchg
jo
fistp
iret
js
or
cmp
jo
and
and
cmp
lds
inc
(bad)
ss
(bad)
push
scas
push
hlt
shr
jge
inc
xor
cwde
adc
pop
xchg
mov
bound
fcmovb
dec
sbb
enter
test
xor
mov
sbb
cmps
xchg
(bad)
cmp
dec
scas
js
mov
sub
in
mov
dec
int3
mov
pop
call
xchg
adc
inc
mov
sub
cmp
repz
pop
push
in
push
fcmovbe
push
(bad)
push
dec
inc
loop
xchg
mov
cmp
es
push
xor
cmc
mov
out
lock
push
(bad)
push
dec
clc
xor
sti
data16
les
cmp
or
jecxz
test
cld
ds
dec
mov
pop
push
shr
xchg
lock
mov
sbb
cdq
push
je
add
loop
and
pushf
sahf
dec
jmpw
mov
aam
or
sbb
adc
mov
mov
cmps
adc
gs
test
ret
mov
(bad)
sub
(bad)
div
sbb
mov
push
mov
ja
adc
fidiv
cmp
or
repz
(bad)
mov
add
and
scas
(bad)
sub
mov
dec
jmp
inc
(bad)
idiv
mov
sbb
dec
adc
xor
mov
adc
add
jecxz
in
mov
ins
cdq
jo
test
cs
jns
loopne
sub
xchg
ror
pop
cmp
out
mov
aaa
sub
ror
repz
(bad)
jp
ss
ror
mov
push
pop
popa
cmp
cmp
repz
dec
sti
cmc
push
js
daa
xchg
ror
cdq
push
jbe
sub
pop
es
lahf
or
daa
idiv
sbb
fprem1
inc
adc
std
or
ins
dec
inc
pop
imul
pop
push
in
mov
pushf
push
js
lods
and
pop
daa
cld
fs
sbb
add
pop
sbb
or
int
adc
iret
mov
stos
push
or
mov
fldcw
repz
sub
loop
(bad)
lahf
pushf
fmul
aad
jmp
(bad)
dec
dec
sbb
pop
cmps
xor
or
out
push
fdiv
in
inc
sub
ror
cwde
pop
inc
inc
sbb
xchg
imul
cmp
mov
add
add
sub
inc
or
jbe
or
lods
mov
lods
test
fstp
jae
or
ss
push
pop
mov
in
div
lods
leave
mov
fiadd
xchg
push
movs
inc
sub
sub
push
jmp
mov
dec
repnz
push
xchg
push
mov
cmp
mov
test
or
lahf
mov
push
or
call
mov
fistp
adc
popa
scas
fnstenv
sahf
in
iret
cld
nop
lahf
cs
fsubr
and
scas
dec
add
pushw
push
in
je
push
sub
xor
push
shrd
fldenv
cmp
out
dec
scas
pop
pop
rcr
aad
push
out
cmp
ds
sti
idiv
or
xchg
cdq
ret
inc
mov
push
loopne
in
test
lahf
fcomp
into
inc
sub
sahf
mov
stos
pop
into
sub
imul
inc
test
sub
sub
push
outs
push
das
lea
cmp
sbb
shr
cmp
jno
xchg
jecxz
scas
std
mov
dec
cld
mov
arpl
stos
sbb
ret
pushf
stc
out
xor
mov
xor
xchg
jno
cmp
iret
js
or
not
cmp
mov
sub
jl
inc
es
aad
scas
push
hlt
fsubr
pushf
cld
mov
das
cwde
adc
test
push
movs
ins
pop
dec
sub
ret
dec
sbb
(bad)
out
(bad)
xor
xor
mov
xchg
(bad)
cmp
dec
scas
jnp
push
es
jmp
add
cld
scas
int3
(bad)
and
add
in
and
mov
sub
cmp
repz
pop
push
in
push
aad
mov
loop
xchg
fs
pushf
add
mov
add
stc
cmc
mov
out
dec
mov
mov
clc
xor
sbb
test
les
cmp
or
jecxz
test
cld
ds
test
shr
xchg
adc
scas
sbb
js
adc
add
in
fadd
lods
into
inc
jg
and
or
mov
aam
or
sbb
adc
mov
mov
cmps
loopne
gs
test
and
push
push
outs
neg
adc
sahf
lods
aam
mov
pushf
cld
aas
and
xchg
dec
retf
outs
(bad)
cmp
cmp
aas
sub
pop
dec
push
sub
fprem1
ins
sub
stos
sbb
jp
loopne
adc
adc
jno
inc
dec
(bad)
lods
pusha
clc
push
jns
sbb
and
fnsave
ret
push
push
jns
ins
out
(bad)
mov
jp
pop
leave
or
mov
mov
pop
cmp
push
retf
fs
adc
xor
hlt
ror
sub
(bad)
xor
mov
or
imul
aad
jbe
mov
push
test
and
inc
inc
lea
in
imul
and
cmps
push
lds
cmp
jo
jmp
jmp
xlat
fwait
mov
push
cmps
xor
sub
mov
xor
out
inc
jecxz
data16
add
sahf
data16
jp
pushf
mov
int3
jbe
push
add
loopne
(bad)
bound
outs
aaa
jmp
cmc
inc
cmps
stc
push
leave
outs
imul
call
movs
es
jnp
and
ds
into
aam
lea
lea
scas
mov
imul
jbe
mov
sbb
jnp
mov
movs
lds
cmps
cs
repz
in
or
mov
mov
cmps
call
mov
jo
stos
jmp
pop
ror
in
sub
push
push
push
sbb
sbb
icebp
push
mov
mov
xchg
test
xchg
sti
and
mov
push
or
clc
ss
jno
inc
sbb
cld
loop
imul
jae
push
mov
shl
test
lea
int3
xchg
fdiv
and
arpl
out
push
xchg
or
pop
add
in
or
imul
mov
push
jns
pop
test
(bad)
(bad)
in
xor
add
or
or
pop
inc
sub
sub
jb
jae
fs
sbb
xor
dec
mov
pop
inc
dec
imul
push
push
int3
inc
mov
cld
jge
(bad)
xor
jbe
imul
mov
outs
stc
cmp
sub
jp
clc
xchg
enter
xchg
out
cmp
adc
out
xor
mov
mov
xchg
leave
pop
pop
xchg
ret
or
in
mov
data16
repnz
fcomp
ror
loop
xchg
les
push
cmps
sbb
into
jns
mov
jmp
(bad)
test
xchg
mov
pop
leave
xor
sti
jecxz
sub
mov
movs
push
xchg
jp
or
sbb
sub
cmp
jg
cdq
or
enter
ret
jmp
jecxz
cld
mov
mov
xchg
loopne
cmps
mov
outs
push
adc
add
int
fsubp
ins
dec
inc
jecxz
ins
arpl
mov
ss
push
dec
push
sbb
in
cmp
or
push
inc
clc
(bad)
stc
sbb
out
jae
(bad)
int
cmc
pop
(bad)
jns
or
mov
pop
(bad)
sahf
push
jb
jb
xor
add
sbb
push
gs
add
sbb
mov
adc
mov
dec
inc
adc
adc
push
ss
outs
and
mov
cld
sub
cdq
fcomp
icebp
jmp
enter
cmp
imul
push
mov
dec
push
jecxz
out
sbb
out
jecxz
nop
dec
inc
inc
xor
sbb
sub
enter
ins
cwde
adc
lods
sub
pop
fild
sub
cmp
sbb
pop
data16
cmp
push
stc
mov
movs
cmp
jmp
sti
jns
pushf
adc
iret
or
and
push
adc
mov
out
sbb
sti
ins
ss
dec
mov
ret
dec
repz
fsub
sub
test
imul
push
sbb
sbb
sub
int3
jnp
jmp
sub
jno
imul
xchg
fsub
outs
inc
push
lea
(bad)
xor
xor
inc
stos
mov
shl
mov
mov
mov
adc
push
sbb
add
dec
cmp
jmp
ret
jmp
adc
test
jb
push
mov
test
lock
test
imul
sub
cmp
jmp
mov
(bad)
cwde
cmp
xchg
cld
add
cmp
cwde
push
or
loop
cld
push
cmps
(bad)
sbb
test
imul
cmp
(bad)
iret
(bad)
dec
or
(bad)
mov
outs
rcr
jl
rol
inc
bound
sti
jmp
inc
mov
mov
lds
pop
lods
mov
jmp
add
(bad)
pop
(bad)
jmp
xchg
sbb
(bad)
mov
mov
stos
sub
push
shr
ret
bswap
jle
in
push
dec
dec
sahf
mov
jno
mov
inc
sbb
cmps
mov
cmp
jae
int
mov
add
jge
ror
push
jo
mov
sbb
sar
int
mov
jno
dec
jns
mov
add
push
ret
push
sbb
scas
xchg
lea
int3
pop
fimul
xchg
push
popa
push
dec
leave
cmp
xlat
jle
fimul
in
xor
(bad)
mov
cwde
dec
lods
movs
out
pusha
in
and
mov
pop
pop
push
sbb
ds
cmp
dec
ret
out
jl
(bad)
sub
inc
sub
dec
jmp
dec
out
pop
mov
fsub
jl
iret
jmp
and
es
dec
or
add
sub
push
dec
cli
loop
(bad)
lea
cmp
jp
jns
aas
jae
and
push
repnz
test
fnstenv
xor
inc
mov
jmp
adc
mov
ret
stos
and
push
in
push
pop
retf
js
inc
add
gs
mov
inc
and
mov
sub
fisttp
leave
sub
stc
in
mov
add
cmps
fist
cmp
cmp
les
int3
push
cmp
jbe
or
push
mov
inc
in
sub
jecxz
out
dec
int
mov
dec
(bad)
cmp
lahf
(bad)
mov
mov
mov
jae
fcom
dec
mov
jb
es
repz
stos
idiv
fmul
lods
push
push
std
jl
xor
jmp
repz
or
mov
sbb
mov
ret
and
cmp
sub
(bad)
cli
push
repz
sbb
lea
pop
dec
xchg
pusha
jns
xor
rol
push
(bad)
fisttp
cld
ja
mov
js
cmps
mov
pop
xchg
xor
pop
into
push
neg
dec
adc
add
and
mov
mov
repz
movs
mov
pop
mov
push
adc
aam
pop
pop
sbb
out
xchg
mov
das
mov
push
pop
daa
rcl
xchg
jge
out
int3
pop
xor
fsub
rol
cmp
inc
call
lds
xor
sbb
xchg
xchg
push
in
int3
jmp
stos
jge
add
cli
inc
mov
div
dec
sub
scas
mov
sbb
loope
sub
addr16
lods
mov
or
dec
or
(bad)
and
sbb
loope
not
mov
aam
lods
fld
in
mov
or
cmps
sbb
in
mov
mov
fld
push
retf
or
ss
sub
sub
pushf
xchg
and
dec
mov
cmp
pop
(bad)
loopne
mov
jno
or
and
dec
xchg
popf
inc
jns
jge
rol
fsub
mov
xchg
cmp
sbb
xlat
inc
rcl
stc
sub
lahf
add
dec
adc
cmps
xor
icebp
not
xchg
xchg
and
call
xchg
arpl
test
push
mov
or
lock
and
(bad)
fdiv
fild
cmp
or
push
ins
sbb
inc
pop
sbb
adc
jecxz
mov
mov
pop
mov
(bad)
popf
test
aaa
hlt
mov
hlt
faddp
cs
je
rol
aad
jo
push
sbb
pop
cmps
(bad)
pop
cmp
cs
mov
test
das
and
sbb
mov
int
dec
lods
sub
or
or
addr16
push
inc
mov
xor
ror
cmp
cli
or
inc
and
sbb
xchg
js
pushf
cmc
jmp
or
imul
scas
cs
rol
into
out
mov
mov
xor
xor
popf
daa
jmp
cld
mov
push
sub
popf
data16
jl
iret
inc
dec
jb
xor
inc
dec
xchg
imul
ins
das
repz
div
push
jl
dec
and
daa
push
or
adc
ds
fadd
int3
inc
jae
jns
pop
out
jmp
push
mov
pop
mov
lahf
jnp
shl
add
cmp
jmp
inc
push
ds
(bad)
jecxz
jmp
std
mov
jmp
ret
xor
pop
pushf
pop
dec
cmp
or
pop
mov
mov
push
outs
retf
xchg
enter
movs
int
inc
test
add
mov
int3
mov
jbe
xchg
mov
and
fs
jnp
scas
cmp
test
std
or
push
(bad)
dec
stos
or
sub
js
xchg
push
cdq
inc
mov
mov
jmp
int3
data16
mov
(bad)
rcl
sbb
xchg
lahf
shl
ret
and
inc
adc
addr16
cld
add
push
pushf
jb
ror
jmp
inc
xchg
and
lods
daa
shr
pusha
mov
in
push
dec
outs
sbb
jl
pop
inc
add
pop
stc
xchg
jne
mov
mov
and
je
dec
(bad)
pop
pusha
int3
data16
jecxz
test
pop
(bad)
mov
clc
imul
jae
lahf
call
fisub
or
test
test
dec
test
cmp
cmp
iret
xor
pop
es
push
or
xchg
idiv
push
cwde
mov
cs
jecxz
out
jmp
inc
outs
ss
mov
(bad)
out
inc
(bad)
mov
aas
push
inc
repz
mov
mov
or
fucom
and
fisttp
sub
into
imul
les
cwde
repz
mul
(bad)
movs
ret
cmp
js
adc
ret
inc
les
pop
addr16
icebp
xor
int
mov
xchg
jb
inc
or
push
out
dec
cmps
test
cld
(bad)
mov
nop
shr
sbb
xchg
bound
xor
ds
fistp
(bad)
out
add
mov
mov
pop
mov
jae
push
pop
inc
or
int3
xor
out
stc
add
lods
loop
mov
xchg
addr16
mov
or
addr16
push
mov
xor
or
int3
add
repz
rol
push
int
sub
mov
sub
mov
ja
cmps
in
xor
sahf
sti
jns
outs
adc
rcl
sbb
pop
jne
push
cmp
int3
cmp
jae
sar
xchg
in
jl
mov
add
mov
add
repnz
adc
sbb
jmp
aaa
push
retf
xor
out
mov
adc
add
jae
push
retf
push
aaa
hlt
and
mov
pop
daa
mov
push
pushf
lods
inc
mov
outs
adc
dec
aad
and
ds
in
mov
xor
pop
pop
scas
(bad)
enter
je
sbb
sbb
fwait
pusha
pop
and
adc
gs
int3
popf
ja
leave
sahf
jo
jmp
ins
dec
push
xlat
inc
and
xor
js
jecxz
outs
or
xor
pushf
test
pop
jle
imul
sub
fisttp
loopne
jne
int
test
xchg
pop
add
(bad)
not
imul
inc
mov
inc
mov
enter
ja
jmp
cmp
xor
pushf
sub
sbb
or
movsx
inc
ss
inc
sub
push
jae
out
dec
adc
repz
pop
sti
jnp
mov
push
call
sub
arpl
scas
push
out
dec
inc
scas
mov
xor
sbb
pop
mov
(bad)
shl
ret
(bad)
outs
data16
dec
adc
push
(bad)
cmp
or
pop
neg
xor
cmp
mov
add
xor
aas
jmp
mov
dec
cld
pop
mov
aaa
ins
xchg
cmp
lahf
mov
dec
jae
movs
mov
dec
sbb
mov
in
jmp
mov
xchg
jmp
mov
jne
mov
push
in
rol
or
dec
pop
add
test
sub
jns
pop
push
neg
push
mov
call
pop
mov
scas
mov
xlat
jae
ins
xlat
popf
js
push
cmp
and
gs
js
test
cs
into
ins
xchg
xor
outs
hlt
fcompp
das
fsub
lds
pushf
and
inc
mov
jl
push
movs
idiv
mov
mov
mov
pop
jbe
in
pushf
adc
jg
dec
lds
(bad)
fld
icebp
fild
xchg
mov
arpl
mov
mov
sahf
test
rcl
lods
int3
test
jbe
cmp
loop
pop
fisubr
ss
in
xor
ds
fs
fs
movs
fild
jl
dec
inc
xor
xchg
call
fwait
imul
xchg
and
cwde
xchg
adc
ins
cdq
imul
sub
int3
push
xchg
inc
fcom
pop
xchg
test
dec
test
dec
js
cmp
test
fnstenv
push
in
push
cld
pop
mov
fwait
lods
(bad)
mov
jbe
xchg
sbb
dec
xchg
push
xchg
mov
out
xlat
jnp
cdq
jne
icebp
dec
imul
mov
dec
int
mov
or
out
xor
mov
jl
pop
xor
and
adc
in
inc
jecxz
xchg
jecxz
sub
cmp
mov
popf
jns
and
mov
in
in
mul
movs
cli
aam
sbb
repz
imul
add
ss
sbb
outs
aaa
add
mov
cmps
fs
leave
or
jge
dec
mov
test
in
dec
mov
test
leave
out
bound
jo
stos
jae
fdivr
fst
sbb
in
jns
mov
lods
cmps
nop
xchg
retf
ret
hlt
mov
cmps
pop
fldcw
ret
pop
sbb
loopne
imul
cmps
mov
push
xchg
movs
mov
dec
inc
shl
arpl
retf
in
cmp
mov
mov
xor
mov
push
sub
jns
repnz
in
out
(bad)
dec
xor
ficomp
sbb
ss
es
fs
fistp
mov
cld
mov
push
gs
mov
adc
(bad)
sub
cmp
dec
outs
loop
and
stos
repz
pop
aad
pushf
sub
ds
mov
es
push
retf
inc
je
das
movs
(bad)
int3
jmp
pop
fistp
and
lahf
out
es
or
pop
sahf
adc
sbb
dec
push
lds
xchg
mov
push
or
stos
mov
sbb
add
(bad)
fcom
stc
stc
(bad)
jb
dec
das
ins
data16
es
int
or
sub
in
cmp
int
fisttp
cmps
(bad)
jp
fcomi
stos
test
sbb
shl
fwait
jnp
or
xor
jmp
push
xor
add
pop
cmc
push
dec
or
fwait
sbb
mov
add
mov
sub
(bad)
push
idiv
dec
fld
cmps
inc
mov
xchg
inc
dec
stos
pop
and
push
jne
loope
cld
ss
cmp
cld
pop
inc
shr
mov
and
je
jae
fisubr
lock
or
(bad)
out
dec
cld
lock
mov
retf
in
jl
jg
dec
fnstenv
adc
cli
push
in
mov
pop
cmp
sar
cdq
pop
sbb
ror
jmp
scas
sub
cmp
into
fistp
pushf
mov
je
mov
push
repz
inc
jg
push
mov
jo
stos
in
imul
pop
sub
adc
mov
xchg
scas
ret
or
mov
xor
inc
dec
aaa
sub
orps
es
fcom
enter
pop
inc
cwde
xor
int3
adc
inc
popf
xor
xchg
mov
in
out
mov
sbb
cs
fs
stc
iret
jo
arpl
test
js
pop
retf
pop
jae
es
cmps
test
dec
imul
ror
les
mov
jbe
push
adc
lea
ins
jmp
popf
inc
push
mov
cmps
mov
arpl
scas
cmp
fcom
(bad)
hlt
mov
mov
mov
pop
inc
mov
mov
sti
adc
(bad)
add
xchg
fxch
lods
mov
into
aam
out
dec
jbe
pushw
push
mov
xor
ror
pushw
sbb
in
loop
(bad)
xchg
xchg
push
jbe
int3
test
pop
ins
in
jg
leave
mov
jp
aaa
inc
xchg
mul
cld
add
xchg
shl
jae
sub
pusha
pop
mov
fild
mov
or
lock
sbb
int3
(bad)
mov
lods
push
mov
xchg
or
adc
sbb
imul
pop
or
rol
xchg
jp
pushf
arpl
imul
mov
or
dec
not
pop
mov
repnz
not
ror
ret
pushf
jbe
in
and
push
add
lds
into
or
xchg
pop
adc
add
xchg
pop
jns
mov
adc
inc
outs
gs
push
push
cmp
jecxz
in
mov
push
call
xchg
cdq
push
stos
stos
ja
jnp
cwde
jns
repz
(bad)
int
fdivr
enter
das
movs
adc
mov
inc
dec
jns
mov
out
sbb
dec
leave
mov
jl
pop
xor
and
adc
in
inc
(bad)
jecxz
sub
cmp
mov
popf
jns
and
mov
in
in
mul
ja
std
mov
mov
push
mov
jae
cwde
adc
js
dec
sub
in
jns
xchg
shufps
inc
fdiv
not
mov
pop
push
dec
lds
sub
ja
ror
pop
lods
push
mov
cmps
sub
mov
test
loop
cmps
test
cld
xchg
shufps
pop
jle
cmp
and
jae
mov
dec
in
clc
test
sub
or
mov
push
mov
mov
aas
jl
loopne
stos
jae
fdivr
fcom
sbb
in
jns
mov
lods
cmps
and
scas
lods
and
fldcw
ret
pop
sbb
je
imul
cmps
mov
push
xchg
movs
mov
dec
inc
ins
ss
arpl
retf
in
mov
pop
mov
mov
xor
mov
sbb
jns
repnz
in
out
(bad)
dec
xor
push
pop
sub
adc
es
fs
fistp
mov
cld
test
cdq
ficom
jb
mov
adc
(bad)
sub
cmp
dec
outs
loop
and
stos
repz
pop
aad
pushf
inc
ins
jns
ds
xchg
outs
sub
sub
retf
inc
je
das
movs
(bad)
int3
fcmovu
fldl2t
into
inc
push
pop
fistp
and
lahf
out
es
or
pop
sahf
adc
mov
retf
jecxz
push
ins
sbb
mov
push
xchg
push
stos
mov
sbb
add
(bad)
fmul
lods
stc
stc
(bad)
jb
dec
das
ins
data16
dec
add
out
cmc
gs
or
dec
sahf
add
(bad)
(bad)
or
fcomp
in
sahf
mov
pop
add
adc
in
vsubss
scas
arpl
in
pop
jecxz
out
adc
movs
test
mov
mov
mov
les
mov
dec
test
add
mov
inc
int
xchg
xchg
dec
mov
scas
fnstcw
rep
cmp
popa
bound
jbe
dec
sbb
es
and
sbb
cs
pop
pop
jbe
adc
or
xchg
(bad)
sub
lods
movs
in
cli
test
movs
inc
mov
les
add
cmp
test
(bad)
push
pushf
lods
push
inc
(bad)
jae
je
out
std
stos
pop
or
or
lahf
push
div
int3
sbb
lods
cmps
aaa
adc
not
adc
es
out
sbb
ins
ins
lods
sub
fdivr
jmp
cs
(bad)
fnstenv
jl
jne
pop
inc
jge
mov
or
add
inc
dec
and
pop
cmp
jae
pop
test
push
pop
pushw
fwait
lock
mov
imul
push
and
sub
icebp
stos
sbb
jmp
add
pushf
in
jp
xchg
ret
push
call
xchg
leave
js
xor
cmp
sub
mov
mov
mov
xchg
cmp
mov
jno
xchg
rol
jle
add
mov
dec
pop
inc
sbb
outs
out
sbb
lods
pusha
clc
imul
push
pop
inc
dec
ret
ret
xchg
fild
push
test
cld
rcr
aas
imul
cmps
pop
test
ficomp
fdivr
jle
shl
sbb
xor
stc
mov
pushf
xchg
mov
icebp
es
mov
scas
movs
sbb
jmp
into
push
pushf
sbb
bound
div
inc
mov
or
inc
sub
daa
add
(bad)
div
in
rcl
test
arpl
dec
dec
adc
js
inc
xlat
push
push
adc
push
pop
xor
inc
cdq
sbb
scas
pop
loopne
into
cmp
push
out
out
xchg
mov
mov
jbe
sub
cmp
ss
es
out
(bad)
xor
sbb
std
pushf
mov
aam
pop
aaa
jnp
cmp
mul
or
ds
jne
addr16
dec
inc
xor
das
lods
cmp
idiv
shr
imul
aas
push
adc
outs
or
or
retf
mul
xchg
pop
xchg
into
mov
rcr
fstp
movs
inc
lods
ss
jmp
fbld
(bad)
int3
mov
mov
cmps
ins
rol
mov
ins
ss
bsf
lahf
sbb
aad
loopne
in
div
es
mov
int3
test
mov
outs
jl
int3
xor
pop
lods
ret
adc
mov
in
int3
cwde
adc
xchg
mov
jl
adc
sbb
repz
scas
in
push
cld
mov
loopne
test
push
ins
in
xchg
add
cmps
sub
push
dec
or
mov
stos
fdivr
push
call
mov
arpl
jb
out
in
xchg
adc
xchg
loope
sub
fdiv
ss
jle
inc
cmp
jno
inc
or
push
mov
mov
mov
cld
add
jns
xchg
xor
dec
inc
pop
data16
push
add
ins
sbb
adc
fmul
jo
adc
jns
sbb
data16
aas
sub
push
or
push
repz
data16
je
inc
outs
jl
hlt
inc
or
ins
and
jae
stc
sbb
xchg
shufps
loop
ror
ds
jns
mov
cmc
inc
pop
int3
scas
sub
adc
mov
add
dec
shl
mov
cmc
add
push
push
lds
pop
add
xchg
add
test
mov
jbe
imul
sub
aam
push
push
mov
hlt
or
and
pop
push
pushf
jbe
imul
lds
cmp
addr16
sub
int3
inc
int
or
call
lods
leave
jl
mov
push
dec
xchg
repnz
call
mov
dec
inc
imul
in
push
es
or
mov
adc
int3
adc
mov
adc
add
gs
add
cld
mov
daa
mov
xchg
pusha
out
pushf
inc
ins
sub
ss
mov
repz
in
in
(bad)
mov
dec
rol
jge
pushf
js
sub
scas
in
push
in
sbb
addr16
cdq
mov
movs
inc
dec
fdivr
jbe
and
mov
imul
add
out
and
and
jbe
and
aaa
mov
inc
jecxz
loope
ja
iret
cmp
xchg
mov
jmp
cmp
add
fsubrp
imul
in
mov
adc
lods
cmc
stc
pop
lea
sahf
loope
je
mov
into
cmp
pushw
dec
hlt
adc
push
outs
int
xor
enter
das
movs
sub
inc
mov
cmps
arpl
push
dec
inc
test
cwde
out
into
inc
xchg
jo
hlt
mov
test
test
cmp
js
in
dec
jp
ins
jmp
mov
cmps
daa
xchg
cwde
out
bound
rol
inc
es
inc
or
fwait
imul
jle
outs
push
cmps
pop
mov
lds
sub
mov
dec
jmp
push
push
cmp
pop
mov
(bad)
mov
mov
ret
dec
fild
ds
jae
jbe
cwde
jns
repz
(bad)
cdq
add
jp
xchg
adc
mov
or
fld
and
jmp
cmp
inc
or
jne
and
or
je
fsub
mov
dec
mov
xchg
pushf
and
inc
mov
sub
cmp
pop
cwde
pop
not
repz
int3
lods
leave
mov
or
xchg
push
movs
inc
or
inc
pop
je
fsub
mov
mov
push
test
jbe
and
adc
scas
clc
jb
push
add
sub
push
cmp
xchg
mov
lahf
sub
jl
jnp
fbstp
in
aad
scas
push
hlt
shr
cld
(bad)
xor
cwde
adc
jbe
fist
jno
mov
scas
ret
dec
sbb
(bad)
jle
js
xor
mov
xchg
(bad)
cmp
dec
scas
push
jmp
add
cld
push
int3
outs
and
add
sbb
adc
inc
mov
sub
cmp
repz
pop
push
in
push
retf
(bad)
je
inc
loop
xchg
fs
imul
mov
sbb
inc
push
push
out
loopne
mov
clc
xor
adc
test
les
cmp
or
jecxz
test
cld
ds
(bad)
mov
shr
xchg
sbb
scas
sbb
jno
ins
or
icebp
fmul
lods
pop
inc
jg
and
add
mov
aam
or
sbb
adc
mov
mov
cmps
mov
gs
test
sub
fild
cmp
cmp
idiv
adc
sub
aad
mov
aaa
inc
dec
leave
lds
in
(bad)
push
imul
sub
cmp
aad
mov
ins
jae
pop
dec
inc
sbb
sar
pop
dec
test
ins
add
lods
jmp
xchg
fld
pushf
cmp
sub
dec
or
jns
cmp
or
in
xchg
xor
loope
mov
pushf
inc
and
push
imul
xchg
push
inc
push
sub
imul
gs
lock
call
add
jb
and
push
repz
add
mov
movs
enter
fmul
dec
xchg
dec
jns
cmp
add
(bad)
int3
xchg
push
mov
call
mov
dec
iret
adc
es
lds
mov
repnz
loop
inc
pop
or
jb
or
pop
cli
loopne
sub
sbb
cmp
hlt
dec
inc
fs
xchg
mov
push
jbe
jbe
ror
mov
xchg
jmp
jo
cld
(bad)
xor
cwde
dec
and
pushf
lea
icebp
push
mov
sbb
aaa
push
imul
repz
(bad)
es
das
cmps
inc
mov
xchg
aad
arpl
or
(bad)
dec
mov
stc
aaa
or
mov
mov
(bad)
not
arpl
(bad)
in
daa
fdiv
lea
es
and
shr
ins
sahf
pop
test
inc
sbb
cwde
add
repnz
dec
xchg
imul
sbb
mov
pushf
push
out
pop
aad
arpl
or
pop
mul
adc
dec
addr16
xchg
test
pop
xlat
clc
xchg
push
and
and
adc
add
or
(bad)
int
mul
(bad)
xchg
mul
dec
push
add
or
xor
fsub
pop
ret
cmp
dec
lea
mov
and
inc
inc
pop
retf
and
dec
in
jae
int
fbld
mov
(bad)
mov
and
call
jns
into
xchg
inc
call
arpl
fiadd
mov
neg
sbb
sub
push
push
push
sub
data16
xchg
inc
call
lds
movs
cmp
pop
in
or
dec
xchg
cmp
xchg
jl
mov
jae
inc
jns
sub
mov
pop
popa
imul
cmp
and
popf
adc
pop
js
hlt
stc
cmp
popa
push
add
cmp
lods
adc
cmc
ins
inc
call
lds
leave
aad
or
lahf
test
ja
jmp
sub
adc
addr16
jae
inc
sbb
int3
add
push
dec
pop
cld
rcl
push
sbb
fnstsw
xchg
cmp
jo
out
xchg
test
or
mov
popa
out
xlat
and
cmps
push
sbb
xchg
jmp
pop
jb
lods
cmp
in
sbb
leave
mov
and
loope
mov
jmp
sbb
repz
dec
adc
add
or
xchg
jae
popf
xchg
xchg
jmp
adc
jns
in
imul
adc
mov
xor
and
aad
jmp
sub
pop
cmp
push
dec
cmp
jmp
fcom
pop
xchg
out
pop
adc
inc
jns
sub
sbb
or
mov
mov
loop
xchg
push
pop
jbe
and
push
stos
arpl
or
push
jmp
xchg
inc
(bad)
cwde
push
pop
xchg
sbb
xor
mov
mov
jmp
sub
(bad)
cwde
pop
call
(bad)
aas
sub
pop
dec
aas
sub
stc
clc
adc
push
mov
inc
dec
push
cmp
sub
sbb
jns
ja
cdq
mov
retf
js
int
in
(bad)
aas
sub
into
push
add
xor
add
adc
loope
icebp
fcmovnb
retf
shr
cwde
(bad)
cmp
repz
jecxz
sub
test
push
rol
or
sti
loope
jl
add
jno
or
push
cmp
in
jns
sti
loope
jl
mov
mov
mov
add
mov
xchg
jae
fmul
mov
mov
jmp
popa
push
dec
jg
dec
push
cmp
inc
mov
xchg
test
cwde
(bad)
xor
mov
jg
dec
fisttp
pop
cdq
imul
fwait
xchg
test
ror
rcl
stc
xchg
not
push
add
xor
dec
and
push
fbld
ins
cdq
dec
test
fcompp
cmp
sub
xchg
jge
imul
or
and
push
sub
lahf
xchg
jmp
jg
retf
pop
fbld
fnstsw
jne
ret
jg
jmp
sub
pushf
push
sub
icebp
jo
pop
dec
adc
iret
ret
and
pop
fnstcw
and
or
in
mov
enter
jns
call
sub
or
(bad)
push
xchg
cmp
jbe
inc
adc
inc
mov
fwait
mov
sbb
fwait
inc
jb
repnz
add
dec
xchg
jns
(bad)
fwait
or
cmp
add
cmp
call
add
lock
jl
dec
shl
repz
and
leave
gs
bound
add
arpl
data16
mov
mov
or
sbb
push
sbb
dec
cmc
push
sahf
xor
int
out
sbb
dec
inc
sbb
sub
sub
dec
es
sbb
fldenv
jle
xchg
push
inc
mov
jns
push
xchg
inc
cmp
ror
mov
cmp
fs
dec
cmps
inc
pop
cmp
cmp
sub
mov
mov
inc
(bad)
cwde
mov
adc
push
mov
ror
sahf
ret
xor
mov
or
mov
cwde
cmp
adc
addr16
or
inc
sub
enter
jno
mov
in
push
xor
sbb
enter
sbb
cwde
add
xchg
inc
mov
mov
xchg
push
inc
mov
retf
xor
pop
test
push
ret
stos
imul
jmp
cmps
pop
mov
dec
sar
arpl
test
push
lds
leave
gs
xor
clc
sbb
xor
mov
(bad)
or
push
sub
jno
int3
cmp
push
mov
call
xchg
or
into
pop
adc
mov
adc
sub
pop
jbe
inc
cmp
dec
mov
sub
js
or
sbb
(bad)
jmp
cmps
cdq
imul
jns
cmps
es
xor
loop
jnp
out
sub
cmp
imul
cdq
icebp
push
mov
pop
leave
cmp
sbb
lea
pop
js
push
add
sub
mov
jl
dec
cmps
mov
fwait
push
mov
or
sub
and
lods
pop
xor
out
mov
xor
jns
int3
stos
cmp
or
add
jmp
pop
xor
loope
sbb
mov
mov
dec
pop
cld
or
std
(bad)
xor
je
scas
pop
xor
dec
cwde
jl
mov
jns
sub
ret
push
enter
in
mov
pop
pop
sbb
mov
sti
ins
cdq
icebp
push
mov
pop
leave
mov
out
xchg
test
jno
mov
cmp
das
cmps
pop
rol
xchg
and
rol
repz
(bad)
test
cld
pop
jmp
test
pushf
xchg
cmps
adc
or
lock
cmp
pop
loope
inc
imul
sbb
and
sub
aad
xchg
adc
adc
fnstcw
xor
aam
call
add
jl
mov
lahf
mov
fldcw
rcr
push
ret
mov
repnz
cmp
push
movs
retf
pop
mul
xor
mov
leave
gs
bound
add
ins
cdq
xor
mov
mov
jmp
popa
out
push
inc
(bad)
cmp
add
or
imul
cmp
sub
cld
push
add
daa
push
sub
jl
cmp
imul
xchg
imul
dec
fdiv
js
inc
enter
push
sub
jl
mov
shl
push
push
pop
or
sub
cmp
sti
and
sub
loope
mov
pop
int3
es
or
in
pop
jmp
mov
adc
ins
and
and
es
test
imul
jecxz
inc
movs
sbb
fdiv
inc
xor
add
or
cmp
push
stos
jno
jmp
sub
pop
ret
jl
mov
shl
push
pop
sbb
add
es
dec
sbb
xor
ins
rcr
rol
push
and
pop
mov
cmp
inc
sub
jne
loope
xor
xlat
cmp
ret
xor
xchg
not
ret
add
call
jp
cmp
imul
es
or
push
mov
lods
adc
rol
xchg
mov
movs
cmp
es
mov
and
loop
xchg
cmp
cdq
pop
adc
int
ds
test
fadd
mov
xor
dec
(bad)
icebp
out
mov
mov
push
mov
push
fst
call
pushfw
mov
sub
pop
mov
(bad)
push
dec
adc
xchg
sub
cmps
pop
xchg
add
arpl
and
jl
cmp
fcom
add
cld
jnp
adc
cmp
mov
jecxz
loope
jae
les
ret
dec
cmp
loop
in
mov
test
xlat
xor
jae
ror
xchg
cdq
icebp
stos
dec
cmps
jns
push
bound
push
leave
sbb
xchg
cmp
adc
sub
mov
and
push
inc
jecxz
clc
ret
add
cmp
repnz
mov
jae
retf
pop
pushf
dec
(bad)
cmp
in
sbb
leave
mov
cwde
cmp
or
adc
fcomp
pop
jb
es
add
in
or
mov
stc
repnz
pushf
jbe
data16
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
shr
enter
fisub
sub
adc
shl
mov
cld
xor
cwde
and
cld
add
test
dec
(bad)
mov
loop
mov
or
cli
mov
push
xor
repnz
xor
inc
cwde
outs
jo
push
adc
ror
push
shl
or
jle
mov
test
inc
inc
data16
fs
jbe
data16
dec
inc
pop
ss
cmp
hlt
jne
mov
sbb
(bad)
fmul
pop
mov
aam
mov
(bad)
imul
pop
ss
cmp
or
sbb
loopne
call
sahf
adc
and
sub
adc
cmp
push
dec
outs
jo
add
mov
(bad)
xchg
data16
add
sub
outs
jo
pop
jle
jbe
push
adc
pop
inc
push
lea
mov
sbb
mov
cmps
pushf
jne
int3
add
sbb
xor
mov
shl
lods
cmps
mov
jle
data16
dec
or
es
neg
fdiv
mov
jle
adc
je
mov
push
sbb
pushf
out
jle
(bad)
js
inc
cmps
mov
xchg
push
mov
test
sub
cmp
or
jecxz
lods
out
pop
int3
fdiv
mov
out
adc
pop
push
sub
cmp
repz
pop
imul
sahf
cld
push
int3
(bad)
and
mov
jl
pop
inc
pop
ss
push
jl
movs
out
sub
jbe
mov
cmps
je
lea
(bad)
ins
data16
adc
pop
leave
sub
cmp
pop
push
int3
imul
sbb
data16
(bad)
jl
pop
cmps
mov
xchg
push
dec
inc
pop
cli
sub
pop
sbb
in
adc
(bad)
int3
(bad)
aam
lods
cmps
mov
jbe
fs
dec
add
xor
cmp
arpl
hlt
in
out
jbe
(bad)
fdiv
mov
ins
push
dec
inc
push
and
pop
jne
imul
or
cmps
pop
fwait
mov
pusha
jl
push
or
dec
pop
popa
add
sbb
pusha
jb
data16
add
cmps
mov
jbe
mov
ja
jae
jno
jg
jge
jp
js
inc
push
pusha
jae
shl
test
sub
lods
test
cmp
or
shr
or
add
(bad)
in
mov
cli
(bad)
out
lea
jl
dec
out
push
aaa
sub
adc
push
(bad)
or
fnsave
mov
xor
sub
and
or
mov
cs
scas
cmps
mov
jne
data16
xor
pop
ss
pushf
mov
in
sub
add
sub
mov
cmps
mov
inc
ins
data16
add
ss
sub
or
push
dec
imul
jns
jge
xchg
mov
inc
pop
ss
ds
or
sub
out
out
(bad)
pushf
lahf
fidiv
xchg
(bad)
lock
push
or
or
leave
xlat
clc
(bad)
int3
(bad)
xchg
out
iret
mov
mov
jl
jmp
pop
or
sbb
in
out
es
aad
lods
cmps
test
movs
mov
cmp
inc
pop
mov
mov
or
and
sbb
jo
add
sahf
fwait
mov
push
and
or
xor
mov
retf
cmc
in
out
imul
fdiv
xchg
mov
jl
dec
and
dec
test
call
int3
adc
mov
cmps
push
xchg
imul
bound
jg
js
xchg
(bad)
fs
ins
mov
imul
lea
jl
lods
scas
pop
ss
cmp
or
sbb
in
(bad)
xlat
(bad)
cli
stc
xchg
mov
cmps
adc
pop
hlt
cdq
ja
data16
dec
and
cs
sbb
sbb
in
out
push
inc
(bad)
dec
sub
push
xor
data16
clc
cli
pop
repz
ds
movs
sahf
int3
aad
out
(bad)
int3
and
pop
pop
cmps
mov
icebp
je
jo
adc
inc
ss
lea
pop
sbb
stos
out
in
(bad)
int3
cwde
lds
mov
ja
data16
dec
inc
pop
movs
daa
cmp
or
adc
in
out
data16
push
jge
jnp
xchg
mov
data16
jae
ss
pop
jg
jge
imul
out
dec
outs
ins
push
inc
push
pop
jnp
lahf
cdq
je
pop
pop
jp
adc
jbe
push
arpl
ins
outs
outs
dec
enter
sbb
jle
lea
jl
dec
mov
sub
or
sbb
in
out
(bad)
mov
fdiv
mov
jl
dec
inc
pop
mov
cmp
or
mov
(bad)
int3
sub
mov
cmps
mov
jbe
dec
dec
pop
dec
inc
pop
ss
push
outs
or
loop
(bad)
int3
bound
imul
mov
sub
aas
push
or
sub
test
call
mov
jl
aam
pop
ss
mov
push
sbb
cmp
and
mov
cmps
mov
je
data16
jne
pop
ss
push
adc
imul
pop
mov
xchg
cmps
mov
push
es
adc
xor
push
cmps
mov
xchg
cmps
mov
push
and
add
push
mov
dec
dec
inc
or
test
inc
xchg
test
inc
or
push
inc
xchg
adc
adc
adc
push
fs
imul
daa
jl
pop
pop
jl
sbb
gs
mov
adc
imul
pop
pop
js
cwde
fwait
jns
pop
pop
jp
lods
cmps
mov
jbe
xchg
cmps
mov
push
and
add
and
inc
push
mov
dec
dec
dec
sub
or
sub
mov
dec
sub
add
sub
pushf
call
or
mov
sub
push
dec
pop
jl
sbb
jnp
push
data16
cwde
call
adc
pusha
jno
js
jo
jp
add
inc
xchg
sahf
fwait
mov
push
sub
fistp
mov
shr
pop
add
(bad)
neg
in
jmp
(bad)
inc
fdiv
mov
icebp
iret
jmp
es
clts
sbb
add
add
int3
(bad)
fsub
int3
iret
int
gs
and
and
mov
and
add
sub
lods
scas
scas
mov
pop
cmp
and
cmp
lea
push
jnp
jle
gs
dec
pop
popa
ins
mov
jl
pop
pop
jle
sbb
dec
push
and
cmp
sbb
sub
ins
data16
add
sub
cmp
or
loop
(bad)
int3
xchg
xchg
not
icebp
jae
data16
(bad)
xchg
cs
mov
sbb
in
out
or
sub
dec
test
mov
pop
outs
data16
or
pop
ss
push
jbe
add
imul
ja
aam
(bad)
fadd
adc
ja
data16
inc
inc
pop
ss
es
retf
xchg
sub
mov
mov
ja
data16
dec
inc
pop
ss
daa
cmp
or
push
imul
out
xor
(bad)
fdiv
mov
div
out
pop
ss
cmc
les
push
sbb
add
push
xlat
int3
(bad)
fsub
test
test
sub
push
dec
push
pop
ss
push
adc
sbb
fs
jbe
(bad)
fdiv
mov
xchg
ins
data16
mov
pop
ss
ds
or
cmp
jmp
fcomp
and
add
ins
data16
stc
clc
fwait
out
(bad)
cmp
imul
out
fcmove
(bad)
fdiv
mov
pusha
push
inc
inc
xchg
push
sub
cmp
ins
outs
outs
imul
in
(bad)
and
fnsave
mov
jl
cld
inc
pop
ss
icebp
leave
in
sbb
in
out
sub
enter
cmps
stc
stos
mov
push
push
dec
inc
pop
ss
into
and
push
dec
dec
push
add
loope
iret
out
in
js
xchg
lahf
jns
pop
data16
sub
cmp
mov
cld
add
(bad)
adc
jle
mov
dec
dec
inc
or
sbb
lahf
in
out
(bad)
pop
(bad)
fdiv
mov
stos
mov
mov
xor
es
and
sbb
in
mov
fdiv
mov
jl
pushf
inc
pop
ss
fdivr
hlt
push
adc
(bad)
lock
lods
cmps
loopne
std
lea
shl
icebp
adc
sbb
call
ret
fdiv
in
popf
jbe
lock
dec
inc
pop
xchg
sub
pop
sbb
in
xor
(bad)
int3
(bad)
xor
lods
cmps
mov
jbe
addr16
dec
bound
sub
add
inc
scas
jecxz
in
xchg
cld
xchg
pop
(bad)
fdiv
cli
stc
jecxz
(bad)
cli
(bad)
icebp
vphaddbw
cmp
or
push
imul
out
jecxz
(bad)
fdiv
mov
sbb
pop
pop
pop
inc
xchg
stos
test
and
mov
pushf
cs
and
fdivr
(bad)
sar
imul
out
(bad)
fcmovb
fdiv
mov
or
(bad)
aad
popf
fwait
in
int
cmc
pop
imul
out
ret
fdiv
(bad)
aad
sub
in
std
sti
call
adc
fldcw
cld
(bad)
int3
mov
mov
cmps
sub
jmp
jmp
aad
sub
mov
int3
(bad)
lods
mov
or
or
repz
mov
xchg
scas
lods
int3
das
sub
xor
cmp
(bad)
in
(bad)
int3
mov
mov
shr
mov
icebp
jmp
cld
cli
xchg
loop
iret
mov
ja
data16
dec
inc
pop
ss
scas
adc
sbb
and
mov
mov
pushf
xor
push
adc
(bad)
fdivrp
sub
ds
or
not
out
out
(bad)
fcmovne
fidiv
mov
jns
dec
inc
out
cmps
mov
xchg
pop
or
sbb
out
out
(bad)
cmp
cmps
cdq
adc
sub
push
sub
pop
sbb
in
jbe
(bad)
int3
(bad)
js
lods
cmps
mov
jbe
gs
dec
cmps
mov
sub
cmp
add
add
stc
in
(bad)
int3
sti
call
test
jl
dec
xlat
aam
sub
cmp
mov
push
adc
lods
scas
cmps
mov
jne
data16
adc
pop
ss
mov
imul
loopne
push
sbb
ds
pop
pop
mov
pop
ins
data16
sbb
sub
push
adc
push
sbb
js
cld
(bad)
int3
nop
lea
jl
dec
push
inc
xor
es
xor
stos
test
fisubr
add
test
ds
or
int3
das
in
out
(bad)
and
fdiv
mov
cmp
push
and
scas
adc
sbb
pop
pop
aas
sbb
(bad)
fdiv
mov
jl
add
sbb
sub
cmp
mov
imul
pop
fs
je
or
fs
mov
jge
dec
inc
jl
sub
cmp
add
sbb
bound
mov
xchg
dec
ss
mov
push
or
sbb
in
out
(bad)
test
fdiv
push
adc
jp
dec
inc
mov
shr
sub
sbb
cwde
xchg
mov
sub
sub
and
cmps
mov
push
dec
inc
pop
(bad)
sub
pop
sbb
in
(bad)
std
(bad)
int3
(bad)
lock
cmps
mov
jbe
cmp
dec
inc
sub
scas
movs
inc
popf
cwde
xchg
adc
(bad)
or
mov
jge
dec
inc
jl
sub
cmp
cmp
sbb
in
xchg
(bad)
int3
(bad)
rol
dec
dec
dec
xchg
lock
out
into
enter
pushf
pop
ss
or
or
sbb
mov
(bad)
fdiv
mov
jl
dec
inc
pop
ss
ficomp
aad
(bad)
fdiv
mov
and
cmp
mov
test
in
out
push
int
fdiv
mov
jbe
data16
dec
inc
pop
cs
cmp
sbb
in
out
mov
mov
xor
xchg
dec
inc
xchg
aaa
sub
cmp
or
out
(bad)
int3
ret
lods
cmps
mov
dec
pop
addr16
dec
sbb
sub
dec
pop
or
sbb
in
out
(bad)
push
(bad)
fdiv
mov
jl
dec
inc
pop
ss
aas
push
or
or
leave
out
(bad)
int3
(bad)
fidiv
in
out
out
or
fadd
ss
cmp
or
movs
xor
retf
(bad)
fdiv
cwde
fwait
xor
add
popa
sub
pop
sbb
in
data16
(bad)
int3
(bad)
dec
mov
cmps
mov
jbe
addr16
dec
xchg
pop
ss
fcom
or
sbb
out
out
(bad)
fmul
fbstp
lds
jp
dec
inc
sub
test
stos
mov
out
(bad)
int3
push
fidiv
jle
test
jl
pop
pop
jp
adc
jbe
push
outs
ins
mov
ror
(bad)
fadd
adc
ja
lea
jl
dec
mov
and
(bad)
out
(bad)
mov
fdiv
mov
jl
dec
inc
pop
ss
push
sbb
out
out
(bad)
sbb
fnsave
mov
jl
ins
inc
pop
ss
ds
or
dec
mov
mov
cs
ja
data16
dec
inc
pop
ss
inc
les
push
adc
(bad)
mov
pushf
jbe
add
push
dec
inc
pop
mov
nop
add
imul
push
inc
aam
(bad)
fsub
cmps
nop
jp
(bad)
pushf
push
movs
pushaw
push
nop
jmp
fadd
enter
cld
(bad)
xchg
sub
cmp
jb
inc
sub
into
sahf
mov
xchg
fsub
adc
inc
sbb
mov
xchg
push
call
data16
clc
fs
pusha
fmul
ds
mov
mov
loop
sbb
dec
js
jbe
cmp
sub
rcl
pop
jbe
xchg
add
jp
movs
loop
mov
push
adc
inc
jo
xchg
and
sub
call
neg
mov
ret
(bad)
clc
out
sbb
adc
sub
and
pop
pop
inc
imul
jae
mov
(bad)
out
retf
mov
dec
add
dec
adc
jo
dec
push
push
pop
push
pop
movs
sub
mov
fst
shrd
add
sub
gs
js
jae
lea
fcomp
leave
shl
mov
out
xor
sbb
daa
push
pop
inc
inc
dec
push
gs
xchg
test
cld
movs
mov
rcr
and
call
and
dec
dec
push
push
bound
movs
fwait
mov
(bad)
mov
icebp
jmp
jmp
or
xor
adc
push
lods
dec
jne
push
xchg
inc
mov
fcomi
adc
call
adc
push
dec
push
pop
and
mov
mov
fistp
add
sub
arpl
cmp
dec
xchg
out
or
vaddsubpd
(bad)
call
cmp
jle
cmp
inc
dec
push
outs
xor
neg
and
clc
out
(bad)
out
cmp
cmp
sbb
sbb
push
inc
pop
sbb
(bad)
lahf
mov
lods
shr
leave
retf
(bad)
dec
sbb
cmp
sub
dec
js
or
outs
cwde
test
out
call
xacquire
sbb
pop
push
jb
xchg
lea
call
idiv
jmp
aas
adc
jbe
dec
dec
push
js
jne
lea
xchg
mov
rcr
int3
in
inc
inc
pop
or
sub
das
jbe
adc
and
jb
cwde
cmps
xchg
xchg
mov
iret
(bad)
out
mov
push
add
pop
and
inc
push
push
jl
outs
ror
nop
out
push
in
lock
rol
mov
xor
dec
data16
dec
ss
mov
mov
pushf
xchg
loope
shl
adc
sub
dec
js
pop
pop
data16
mov
popf
sub
aad
lahf
clc
cmc
int
add
jno
or
sbb
pop
sbb
ins
je
(bad)
sar
mov
loop
(bad)
sub
pop
or
or
aas
pop
dec
inc
dec
push
outs
xor
mov
sbb
in
in
out
hlt
mov
xor
push
das
push
pop
add
pusha
inc
js
lods
xchg
sahf
movs
call
ret
jecxz
sti
pop
pop
es
fs
add
pusha
inc
js
fdivr
scas
imul
fsubr
sub
push
jae
cs
data16
gs
in
xchg
cwde
sbb
lods
out
in
repnz
adc
das
jbe
adc
ja
and
lods
(bad)
xchg
movs
lea
(bad)
clc
(bad)
lods
jbe
adc
xor
dec
je
and
and
ror
aad
cmc
mov
adc
aas
daa
cs
jl
pop
jne
je
mov
fsub
jmp
add
or
jae
push
mov
xchg
fcomp
call
aas
das
das
cmp
data16
dec
je
cmp
imul
xchg
jecxz
rol
mov
and
add
inc
push
jb
inc
pop
leave
mov
mov
mov
jmp
in
jmp
pop
add
sbb
popa
out
or
dec
inc
outs
adc
mov
add
int
sbb
and
xor
inc
arpl
or
outs
xor
mov
aad
iret
mov
jmp
add
push
or
cmp
ss
inc
pop
je
js
or
ret
mov
lods
cmps
mov
jbe
data16
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
xor
es
(bad)
nop
cmp
sub
rcr
les
jl
xchg
ret
movs
xchg
pop
sbb
mov
add
mov
stos
fs
sbb
hlt
mov
cld
cli
adc
ins
push
adc
call
pusha
xor
mov
cmps
enter
sbb
lock
sub
pusha
sahf
mov
jbe
fadd
mov
mov
add
cwde
inc
jo
test
loopne
cmp
dec
or
sar
(bad)
and
cmp
and
lock
xchg
ret
inc
mov
cli
xor
ins
dec
and
cld
call
sbb
je
sub
in
mov
jmp
in
retf
jl
aam
int3
sub
pushf
mov
cdq
ja
arpl
idiv
ja
aas
fld
mov
t1mskc
cdq
inc
jno
test
addr16
dec
or
sar
xlat
and
cmps
ror
leave
mov
jg
(bad)
push
int3
jle
loop
cli
sub
jl
fdivr
jp
(bad)
or
push
jo
mov
data16
fcom
mov
clc
mov
(bad)
cwde
push
add
xchg
push
cmp
cs
nop
mov
call
mov
movs
aam
jb
cld
fidivr
xchg
xchg
mov
ins
dec
xor
cld
mov
aam
sbb
test
or
cmp
and
xor
retf
jl
movs
xchg
int3
sub
fiadd
lods
mov
stc
xlat
cmp
(bad)
ins
dec
or
fstp
test
cmp
sub
rcr
mov
xor
xchg
ret
in
jmp
xchg
pop
sbb
jae
mov
gs
sbb
or
std
mov
mov
xor
mov
jl
movs
ror
xchg
bound
repnz
dec
je
mov
push
and
test
cld
cmp
mov
inc
jb
retf
cmp
fs
int3
jmp
mov
aaa
in
gs
in
xchg
std
fild
jecxz
cmp
(bad)
retf
cmc
add
jmp
mov
int
xor
repz
stos
push
arpl
in
or
sbb
mov
imul
xchg
xchg
inc
rol
push
add
cmps
nop
into
or
inc
jle
push
lock
test
pusha
pop
mov
jbe
ds
mov
push
adc
mov
(bad)
fadd
loopne
cmp
mov
idiv
xchg
push
je
aam
je
xchg
mov
sub
ficomp
mul
(bad)
clc
(bad)
add
cmps
rcr
fdiv
lock
test
adc
jbe
push
enter
js
sub
es
sahf
pop
ss
mov
daa
dec
jle
jae
jns
gs
aaa
gs
stc
(bad)
pop
cdq
inc
xor
leave
mov
jg
cmps
xchg
iret
sub
lahf
fld
icebp
scas
mov
aas
stc
out
punpckhwd
mov
dec
aaa
sar
daa
adc
xlat
loope
pop
xchg
or
cdq
lods
fwait
xor
imul
mov
test
ja
iret
or
mov
jns
shr
daa
adc
mov
bswap
xchg
cmp
sub
mov
(bad)
stc
xchg
inc
outs
imul
push
xchg
ins
mov
cld
mov
xchg
loop
sbb
retf
mov
jmp
in
or
mov
(bad)
repnz
je
cmp
in
dec
push
sub
push
ss
mov
ror
mov
lahf
xchg
pushf
add
smsw
xor
push
adc
fwait
pushf
mov
mov
mov
std
sbb
inc
sub
cmp
inc
jl
outs
jle
test
int
test
hlt
mul
mov
adc
sbb
sub
cmp
popa
inc
mov
pushf
sbb
(bad)
xchg
std
jmp
loop
pop
adc
or
or
dec
dec
jg
imul
mov
iret
(bad)
mov
mov
sbb
pop
mov
fild
adc
cmp
out
(bad)
mov
(bad)
(bad)
(bad)
cli
(bad)
lock
or
sub
push
pop
pop
bound
jl
int
stc
mov
ret
bound
lods
enter
jo
in
mov
push
arpl
or
fcom
mov
repnz
adc
sbb
sbb
std
or
stos
pop
nop
inc
jnp
pop
call
jmp
xor
or
js
je
mov
mov
add
pushf
add
or
fwait
setns
rol
es
ja
jle
xchg
mov
xchg
mov
(bad)
movs
(bad)
fcmovbe
xchg
fld
sbb
ss
jge
ja
jb
div
mov
ret
(bad)
pushf
daa
push
or
add
xor
push
pusha
or
je
sbb
fdiv
loope
hlt
sub
push
sbb
fs
inc
dec
je
pop
jns
mov
movs
mov
lods
retf
in
xchg
add
xor
push
push
push
pop
jns
ins
jns
mov
mov
xchg
jmp
add
aaa
sub
jb
gs
pusha
imul
xchg
fisub
clc
adc
cmp
dec
inc
inc
pop
je
push
inc
call
mov
(bad)
ffree
cli
loope
repnz
daa
xor
dec
inc
push
popa
or
jnp
cdq
mov
(bad)
int
(bad)
in
jmp
hlt
jbe
add
push
addr16
pop
mov
sar
icebp
stc
sbb
data16
ds
inc
jno
arpl
xchg
mov
mov
repz
icebp
loop
call
dec
sbb
pop
or
pop
and
dec
mov
mov
(bad)
rcl
sub
pop
adc
inc
pcmpgtd
cmp
jle
pop
imul
mov
ror
iret
pushf
repz
std
xor
cmp
push
dec
push
dec
gs
inc
outs
or
ret
leave
mov
jecxz
sbb
push
popa
das
cmp
push
ss
jb
cwde
out
mov
ret
stc
cld
shl
push
or
xor
pop
pop
outs
sub
bound
dec
mov
test
shl
in
(bad)
sub
adc
jae
arpl
pop
gs
sbb
jle
push
xchg
lahf
mov
mov
mov
stc
fsqrt
repnz
sbb
aas
das
aaa
inc
dec
dec
inc
xor
jg
in
mov
test
mov
mov
jmp
ins
and
push
aas
das
cs
sub
cmp
je
jo
mov
nop
idiv
(bad)
out
in
jecxz
adc
xor
push
sbb
inc
and
and
mov
fld
fst
and
inc
dec
push
sbb
ins
addr16
mov
rol
rcr
jmp
adc
and
or
sub
cmp
je
xchg
in
out
mov
int
rcl
lods
out
push
(bad)
or
cmp
pop
dec
push
outs
imul
and
fyl2x
clc
jecxz
adc
and
sub
jp
dec
push
and
(bad)
mov
cld
(bad)
out
xchg
fisubr
ficomp
ins
xor
xor
and
pop
dec
pop
push
jne
push
jg
cwde
xchg
mov
leave
leave
shl
sbb
pop
xor
push
dec
ja
imul
sahf
cwde
cmps
mov
ret
cld
out
adc
adc
aas
daa
or
push
pop
fs
imul
mov
cmps
into
loop
xchg
ins
inc
(bad)
push
dec
pop
pop
inc
inc
dec
cmps
test
in
xchg
ret
rcl
mov
movs
stc
push
ins
add
xor
data16
pop
jb
push
outs
(bad)
int3
(bad)
popf
mov
stos
scas
shr
xchg
(bad)
adc
pushw
cmp
sub
pop
inc
sbb
sub
jae
vphadduwd
rcr
clc
jmp
adc
inc
imul
popf
and
mov
(bad)
clc
(bad)
sbb
ss
push
push
dec
pop
jae
outs
sub
idiv
in
fucomp
test
pop
add
add
jae
je
dec
dec
inc
mov
sahf
cdq
mov
in
out
leave
retf
xor
and
add
and
fs
dec
inc
or
outs
lds
cmc
xchg
(bad)
(bad)
fdivp
jmp
pop
push
sbb
and
ss
push
cmp
jg
gs
mov
cmps
aam
loop
out
add
xor
pop
inc
inc
jo
or
jo
mov
mov
idiv
hlt
cli
jbe
unpckhps
and
ss
push
pop
fs
outs
mov
stos
mov
ftst
(bad)
push
sysret
jl
sbb
pcmpgtw
dec
jo
jno
stos
adc
ret
fyl2xp1
mov
data16
cs
pop
dec
pop
bound
js
(bad)
fwait
hlt
xchg
(bad)
enter
in
and
pop
xor
sub
pop
adc
outs
dec
xchg
lods
mov
mov
fmulp
iret
cmps
les
adc
sub
cs
inc
inc
dec
and
pop
test
movs
mov
cmc
jmp
adc
inc
pop
push
cmovno
dec
cdq
movs
(bad)
mov
mov
xchg
inc
xor
cmp
xor
jbe
jns
addr16
cwde
int3
nop
lods
mov
leave
ret
call
adc
cmp
data16
jne
gs
outs
sbb
icebp
rcl
retf
stc
in
loop
adc
sbb
jl
sub
push
ss
outs
cwde
or
mov
aam
mov
xchg
add
and
dec
sbb
or
outs
lahf
adc
sti
leave
jmp
xor
cmp
xor
push
cmp
jg
jb
sahf
(bad)
into
mul
xchg
stc
in
loop
and
push
sub
pop
and
pop
or
sbb
jg
jne
call
xchg
leave
in
jecxz
stc
inc
cmp
xor
cmp
xor
jne
es
imul
lahf
mov
(bad)
push
mov
add
adc
add
jg
cmp
in
mov
shr
cmc
out
xchg
and
imul
jp
arpl
mov
in
lock
lds
int3
and
ss
jp
push
pop
jle
outs
jns
(bad)
sahf
mov
xchg
movs
movs
(bad)
aam
(bad)
out
leave
cmc
sub
push
pop
sub
cmp
or
sbb
and
into
leave
jmp
pop
and
and
and
jns
js
arpl
sahf
mov
adc
shl
in
test
jbe
or
sub
sub
push
jle
arpl
cwde
xchg
sar
lods
jmp
in
mov
sbb
add
pop
pop
es
pop
push
jo
and
mul
cmps
in
stc
mov
aas
xor
sub
push
inc
es
js
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
or
test
cmp
ins
push
sbb
in
out
jle
push
sub
lods
cmps
pushf
xchg
lea
jl
int3
inc
pop
scas
sub
mov
or
sbb
xor
cld
ds
(bad)
and
lods
scas
mov
pop
ins
inc
push
dec
push
pop
ss
cmp
or
fs
outs
cld
(bad)
push
(bad)
fcomp
test
xchg
jbe
data16
ds
push
ss
push
cmp
clc
out
(bad)
inc
(bad)
cwde
stc
(bad)
mov
xchg
mov
push
dec
inc
pop
cs
or
sbb
add
aad
(bad)
rol
rol
pushf
mov
dec
data16
jne
data16
es
cmp
pop
(bad)
lock
xchg
clc
out
xor
ror
data16
je
or
xor
push
leave
into
out
add
mov
and
jnp
add
jbe
push
inc
pop
add
push
sbb
lea
fadd
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
sbb
dec
inc
pop
ss
scas
fdivr
jb
xchg
out
(bad)
out
mov
push
mov
jbe
call
mov
je
mov
cmp
popf
dec
or
(bad)
(bad)
pop
cmp
fstp
and
pop
daa
in
jl
aad
retf
leave
rcr
int3
xor
or
xchg
sub
daa
mov
cmp
enter
mov
inc
in
stos
mov
out
loopne
(bad)
call
xor
sub
clc
xchg
bound
inc
adc
shl
in
leave
push
sbb
inc
mov
mov
rcl
jmp
jp
mov
dec
mov
into
adc
dec
push
ret
in
and
ja
mov
inc
dec
adc
mov
adc
cmps
adc
cld
(bad)
cmp
popf
mov
pushf
jbe
cdq
cmp
(bad)
mov
shl
cmp
or
jecxz
push
sbb
sub
(bad)
fdiv
mov
jl
mov
pushf
imul
jecxz
es
mov
mov
mov
ins
test
aaa
sub
ss
push
push
or
icebp
movs
in
out
cmp
mov
(bad)
fild
sbb
jnp
inc
sub
pop
in
xor
sbb
test
mov
imul
pop
retf
sub
push
adc
sub
(bad)
movs
test
fcmovnu
ss
cli
loopne
xchg
mov
outs
xor
or
imul
test
fdiv
mov
xchg
test
pop
pop
or
or
pop
mov
out
(bad)
int3
mov
shl
mov
orps
fs
push
in
es
in
out
sub
neg
icebp
lods
call
lea
ins
and
push
sub
adc
and
sbb
sbb
ret
retf
mov
adc
pop
inc
es
xchg
fsubp
cld
sbb
scas
mov
add
loop
xchg
adc
and
imul
in
xlat
add
ret
cli
call
data16
inc
inc
pop
std
and
pop
add
out
cdq
or
mov
pop
retf
push
push
mov
test
rcl
js
sbb
adc
lahf
int3
out
mov
ins
or
jns
dec
bound
sbb
adc
in
xor
fcom
aad
loope
xchg
fwait
aas
data16
push
inc
pop
xor
addr16
ja
arpl
in
mov
movs
int3
(bad)
(bad)
mov
into
pushf
call
or
and
xor
es
push
sbb
in
out
and
inc
popa
dec
jp
imul
rcl
retf
lock
adc
or
cmp
and
jg
jo
mov
mov
retf
cli
sti
(bad)
in
adc
or
cmp
daa
dec
push
push
dec
jnp
jle
(bad)
nop
sahf
test
rcr
(bad)
out
(bad)
loopne
adc
add
xor
pop
inc
jns
jg
mov
mov
(bad)
out
push
out
add
xor
and
pop
inc
xchg
mov
mov
sahf
xchg
mov
(bad)
hlt
out
(bad)
(bad)
ror
adc
or
xor
pop
inc
outs
jne
jbe
test
test
jecxz
lock
and
or
cmp
sub
push
dec
pusha
jp
push
mov
mov
rcr
ret
lock
cmp
inc
pop
pop
inc
gs
push
mov
mov
fcmovu
ret
loopne
lock
xor
dec
push
pop
inc
pusha
jp
push
mov
mov
rcr
(bad)
loopne
lock
xor
dec
push
pop
dec
pusha
jp
push
mov
mov
rcr
retf
lock
xor
dec
push
pop
dec
popa
jnp
imul
mov
ret
out
sti
icebp
jmp
xor
or
cmp
and
pop
inc
push
mov
mov
fcmovnbe
ret
jmp
movups
and
cmp
inc
pop
push
inc
outs
jnp
imul
mov
leave
rcr
retf
loope
icebp
jmp
movups
and
xor
dec
push
pop
inc
popa
jnp
imul
mov
ret
out
hlt
(bad)
in
nop
xor
and
pop
inc
outs
je
mov
mov
ret
in
(bad)
in
nop
xor
and
pop
inc
bound
mov
mov
in
(bad)
in
add
add
dec
push
pop
inc
outs
jne
pop
mov
out
cmc
jmp
(bad)
pop
add
dec
push
pop
inc
outs
jne
pop
stos
leave
rcr
(bad)
jmp
(bad)
pop
add
inc
push
pop
inc
outs
jne
or
movs
iret
aad
(bad)
jmp
add
cmp
inc
ins
ja
pusha
popf
xchg
mov
enter
call
adc
adc
and
xor
inc
dec
push
jle
outs
jle
ins
data16
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
inc
push
adc
add
xor
pop
mov
cmps
mov
hlt
out
retf
into
(bad)
fidiv
sub
adc
test
aas
mov
add
cmp
call
jle
imul
mov
xchg
xchg
sti
pop
inc
pop
aad
(bad)
sub
pop
sbb
popa
dec
push
pop
xchg
test
xchg
cdq
xor
int3
(bad)
fdiv
in
push
arpl
mov
pop
ss
cmp
mov
fadd
call
xchg
cmc
dec
ins
int3
mov
inc
push
adc
dec
shl
cmp
leave
rcr
ret
jmp
xchg
cdq
sub
(bad)
fdiv
sub
cmp
or
sbb
ins
data16
dec
inc
pop
mov
cmps
mov
imul
out
ror
(bad)
fidiv
and
adc
add
je
fs
dec
inc
pop
mov
cmps
mov
hlt
out
in
ror
(bad)
fidiv
icebp
jmp
fadd
push
je
fs
dec
inc
pop
mov
xor
add
push
xchg
cmc
out
in
faddp
into
aam
into
mov
in
outs
je
inc
dec
push
mov
sbb
add
in
cmc
ffree
iret
aad
lds
jae
outs
jne
inc
dec
push
mov
mov
cmp
(bad)
int3
(bad)
cmp
mov
pop
pop
stos
mov
data16
jbe
inc
dec
push
mov
jle
xor
jecxz
repz
sar
fcom
loope
arpl
inc
inc
dec
push
mov
xor
jmp
sar
ficomp
or
inc
pop
push
dec
mov
push
cmp
clc
bnd
and
cdq
retf
mov
push
mov
sub
sbb
clc
bnd
and
cdq
mov
jns
imul
sbb
sub
cmp
retf
(bad)
sub
mov
push
ins
ja
addr16
push
pop
inc
lods
mov
in
idiv
out
xlat
ffree
sub
pop
sbb
addr16
push
pop
inc
stos
mov
mov
jmp
shr
cmp
or
sbb
imul
(bad)
push
pop
inc
test
xchg
cdq
sub
stc
loop
rcr
ret
sub
cmp
or
sbb
imul
jl
mov
mov
imul
sbb
push
dec
mov
push
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
fcom
js
or
sbb
sub
cmp
enter
call
push
push
mov
push
adc
add
xor
dec
movlps
loop
xchg
cwde
sub
pop
inc
push
fistp
add
xor
and
rcr
ret
jmp
xchg
cdq
sub
pop
cmp
or
sbb
ins
data16
dec
inc
pop
mov
cmps
mov
mov
out
(bad)
int3
(bad)
fdiv
sub
cmp
or
sbb
ins
data16
dec
inc
pop
leave
mov
xchg
int
fnsave
sub
pop
sbb
push
dec
inc
pop
mov
movs
mov
hlt
out
in
aam
(bad)
fidiv
and
adc
add
je
fs
dec
inc
pop
mov
movs
mov
hlt
jmp
(bad)
fidiv
and
adc
add
je
fs
dec
inc
pop
mov
movs
mov
imul
in
aad
(bad)
cs
adc
add
je
gs
dec
inc
pop
mov
pop
inc
imul
(bad)
aad
(bad)
fbstp
syscall
pop
or
hlt
out
(bad)
(bad)
into
sub
test
ror
ret
fnstenv
mov
xchg
mov
(bad)
pusha
jns
dec
inc
pop
mov
scas
mov
test
imul
scas
mov
xor
add
outs
je
inc
dec
push
mov
push
and
or
cmp
dec
ins
cmc
ffreep
iret
aad
daa
das
xor
add
adc
inc
inc
push
rcl
add
sahf
test
hlt
faddp
iret
aam
mov
sub
into
les
dec
push
mov
test
pop
(bad)
(bad)
into
aad
mov
adc
pop
inc
dec
push
mov
push
push
test
dec
sbb
iret
aad
and
sbb
or
jo
enter
dec
outs
sbb
or
cld
loop
repnz
enter
mov
ret
int
pop
inc
dec
push
mov
or
jbe
bound
pushf
fidiv
sbb
or
jns
push
push
mov
cmp
sub
push
fadd
enter
sub
sbb
or
jge
ror
loope
lock
xchg
test
xchg
stc
std
call
sar
mov
imul
mov
xchg
mov
push
pop
inc
xor
pop
arpl
sbb
or
jg
outs
inc
pop
push
dec
mov
popf
test
dec
pop
hlt
call
and
xor
add
(bad)
fld
dec
pop
push
loopne
adc
(bad)
loop
cmc
out
ret
iret
daa
xchg
cwde
or
or
inc
pop
push
dec
mov
cwde
xchg
mov
push
pop
inc
int
fsub
xchg
add
add
adc
bound
inc
pop
push
dec
cmps
push
sbb
pop
inc
mov
push
(bad)
jmp
and
sub
sbb
or
fadd
loopne
clc
jecxz
adc
mov
cmc
lock
cdq
sub
jb
inc
pop
push
dec
mov
xchg
popf
xchg
push
pop
inc
push
repnz
or
jno
addr16
push
pop
inc
mov
xor
and
idiv
out
xlat
fadd
sub
push
sbb
inc
imul
cmps
lea
std
out
xlat
ffree
sub
adc
jge
dec
push
pop
inc
lods
mov
cmps
lea
std
out
xlat
ffree
sub
pop
sbb
pusha
dec
push
pop
inc
stos
mov
mov
jmp
shr
cmp
or
sbb
imul
dec
push
pop
inc
stos
mov
mov
jmp
clc
loope
rcr
ret
cmp
or
sbb
push
push
pop
inc
stos
inc
mov
sub
clc
loop
rcr
ret
cmp
or
sbb
push
push
pop
inc
test
xchg
cdq
sub
stc
jecxz
rcr
ret
sub
sbb
imul
inc
test
xchg
cdq
xor
jecxz
in
out
push
or
and
adc
cmp
jae
pop
jbe
inc
and
or
mov
imul
out
push
or
sbb
sub
xlat
retf
rcr
loopne
ins
data16
mov
mov
imul
es
push
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
cmp
inc
xor
sub
pop
inc
push
adc
add
xor
and
sar
and
call
dec
push
pop
inc
push
adc
add
xor
and
rcr
mov
xor
aaa
std
xchg
cwde
sub
pop
inc
push
adc
add
xor
and
rcr
shl
cdq
sub
pop
inc
imul
add
xor
and
rcr
ret
in
cmp
sub
pop
inc
imul
add
xor
and
rcr
ret
jmp
xchg
cdq
sub
pop
inc
imul
add
xor
and
rcr
ret
jmp
in
out
(bad)
int3
(bad)
fdiv
sub
cmp
or
sbb
ins
data16
dec
inc
pop
mov
cmps
mov
imul
out
(bad)
int3
(bad)
fdiv
sub
cmp
or
sbb
ins
data16
dec
inc
pop
mov
cmps
mov
imul
out
xlat
int
fnsave
sub
pop
sbb
push
dec
inc
pop
mov
cmps
mov
imul
out
xlat
int
fnsave
sub
pop
sbb
push
dec
inc
pop
mov
cmps
mov
hlt
out
in
aam
(bad)
fidiv
and
adc
add
je
fs
dec
inc
pop
mov
movs
mov
hlt
out
in
aam
(bad)
fidiv
and
adc
add
je
fs
dec
inc
pop
mov
movs
mov
hlt
out
in
aam
(bad)
fidiv
and
adc
add
je
fs
dec
inc
pop
mov
movs
mov
hlt
out
in
aam
(bad)
fidiv
sub
cmp
or
sbb
outs
fs
dec
inc
pop
mov
movs
mov
hlt
out
in
aam
(bad)
fidivr
or
sbb
sub
cmp
adc
dec
inc
pop
mov
movs
mov
cmc
out
in
aad
(bad)
movs
scas
mov
test
or
inc
pop
mov
movs
mov
cmc
out
in
aad
(bad)
mov
xchg
mov
inc
test
dec
inc
pop
mov
movs
mov
cmc
out
in
aad
(bad)
mov
xchg
mov
(bad)
hlt
in
dec
inc
pop
mov
movs
mov
icebp
jmp
sti
ror
rcr
mov
nop
mov
cli
lock
mov
mov
xchg
jmp
out
cmc
ffreep
iret
aam
mov
movs
mov
cld
in
ins
dec
push
mov
test
cmc
ffreep
iret
aad
mov
mov
ror
(bad)
jecxz
cdq
dec
push
mov
test
cmc
ffreep
iret
aad
lea
xchg
into
(bad)
fdivp
ror
movs
scas
mov
test
cmc
ffreep
iret
aad
mov
jno
(bad)
fdivp
out
inc
push
mov
test
cmc
ffreep
iret
aad
mov
jno
(bad)
fdivp
jmp
push
mov
test
cmc
ffreep
iret
aad
pop
adc
cmc
loopne
push
mov
test
cmc
ffreep
iret
aad
test
adc
(bad)
loop
push
mov
test
cmc
ffreep
iret
aad
xchg
adc
(bad)
jecxz
push
mov
test
neg
(bad)
int
add
unpckhps
(bad)
int3
out
inc
push
mov
xchg
repz
leave
rol
adc
ins
retf
out
dec
push
mov
or
fld
leave
rol
lahf
xchg
mov
(bad)
int3
out
dec
push
mov
adc
ret
leave
ror
cdq
xchg
(bad)
movs
mov
aad
out
ins
dec
push
mov
adc
ret
leave
ror
fwait
xchg
mov
fcmovnbe
retf
mov
mov
adc
ret
leave
ror
fwait
xchg
mov
fcmovnbe
hlt
push
inc
dec
push
mov
adc
ret
leave
ror
xchg
popf
xchg
xlat
enter
dec
push
mov
adc
ret
leave
ror
xchg
cdq
sub
fstp
mov
adc
(bad)
(bad)
int3
push
xchg
cdq
and
fxch
dec
pop
push
dec
cmps
mov
xchg
mov
clc
bnd
push
xchg
cdq
and
fld
call
test
cwde
xchg
mov
clc
bnd
push
xchg
cdq
and
fld
fstp
dec
mov
cwde
nop
mov
clc
bnd
or
cdq
and
fld
sti
pop
push
dec
mov
cwde
lahf
mov
clc
bnd
or
cdq
and
fld
jmp
test
cwde
lahf
mov
clc
bnd
or
cdq
and
fld
jmp
mov
lahf
mov
stc
repz
or
cdq
and
fld
jmp
mov
lahf
mov
stc
repz
or
cdq
sub
fld
out
push
dec
mov
cdq
lahf
mov
stc
repz
or
cdq
sub
fld
ret
dec
mov
cdq
lahf
mov
stc
repz
or
cdq
sub
fld
mov
mov
call
(bad)
fadd
or
mov
mov
jle
pop
inc
lods
mov
cmps
mov
std
out
xlat
ffree
or
mov
mov
pop
inc
lods
mov
cmps
lea
std
out
xlat
ffree
not
mov
bound
pop
inc
lods
mov
cmps
lea
std
out
xlat
ffree
push
std
imul
(bad)
fst
int
jo
addr16
push
pop
inc
lods
mov
cmps
lea
std
out
xlat
ffree
and
xor
pcmpgtw
addr16
push
pop
inc
lods
mov
cmps
lea
std
out
xlat
ffree
sub
pop
sbb
addr16
push
pop
inc
lods
mov
cmps
lea
cli
loopne
rcr
shr
cmp
or
sbb
push
jp
dec
push
pop
inc
stos
mov
mov
jmp
shr
cmp
or
sbb
push
jp
dec
push
pop
inc
stos
mov
mov
jmp
sti
loope
rcr
shr
cmp
or
sbb
imul
dec
push
pop
inc
stos
mov
mov
jmp
sti
loope
rcr
shr
cmp
or
sbb
imul
dec
push
pop
inc
stos
mov
mov
call
rcr
ret
cmp
or
sbb
push
push
pop
inc
test
mov
sub
clc
loop
rcr
ret
cmp
or
sbb
push
push
pop
inc
test
mov
sub
stc
jecxz
rcr
ret
sub
cmp
or
sbb
imul
inc
test
nop
xor
jmp
rcr
ret
sub
cmp
or
sbb
imul
inc
test
mov
stc
jecxz
rcr
ret
sub
cmp
or
sbb
imul
inc
test
jno
sbb
int3
(bad)
fdiv
in
out
push
or
sbb
sub
cmp
dec
inc
pop
jbe
data16
mov
and
imul
out
push
or
sbb
sub
cmp
dec
inc
pop
jbe
data16
mov
and
cli
fdiv
in
out
pop
or
daa
cmp
ja
addr16
mov
and
ss
in
out
pop
or
daa
cmp
ja
addr16
mov
sub
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
mov
jl
dec
inc
pop
ss
cmp
or
sbb
in
out
(bad)
int3
(bad)
fdiv
jmp
xor
and
inc
push
add
popa
bound
fadd
lock
out
loop
clc
adc
sub
pop
push
bound
(bad)
lahf
les
(bad)
cmp
hlt
std
add
jo
jle
sbb
sub
js
lea
test
repnz
add
daa
das
push
pop
push
or
and
and
nop
ror
out
cmps
mov
call
push
push
inc
sahf
sbb
cmp
out
jno
data16
sahf
sub
mov
add
outs
xor
mov
div
xor
int3
inc
push
sbb
dec
push
mov
sbb
push
push
loopne
jbe
clc
jmp
mov
fisubr
push
(bad)
fadd
leave
sahf
sub
push
dec
cmps
mov
data16
imul
xchg
mov
xchg
daa
int3
push
arpl
xchg
movs
repnz
lods
xchg
in
mov
jl
mov
adc
mov
repz
and
out
push
mov
es
sub
icebp
inc
scas
and
stos
(bad)
scas
add
data16
outs
clc
call
(bad)
(bad)
movs
inc
ret
push
sbb
test
clc
cmps
dec
ret
mov
xchg
mov
push
dec
sub
(bad)
movs
sbb
cld
mov
mov
add
adc
test
loope
sub
data16
aam
jmp
jmp
xchg
loope
cld
push
xchg
push
push
bound
pop
jecxz
mov
push
enter
pop
(bad)
and
out
bound
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
and
add
push
inc
inc
push
mov
mov
xchg
repnz
cmc
rol
ret
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
std
cmps
xchg
mov
out
sbb
pushf
mov
call
push
dec
imul
shr
loop
aad
fs
pop
add
mov
xchg
out
nop
lds
push
lock
(bad)
mov
inc
cmps
cmp
fmul
jo
lods
neg
lock
out
adc
mov
pop
nop
in
sti
inc
jmp
and
xchg
pusha
mov
(bad)
(bad)
mov
test
xor
xchg
or
mov
sbb
and
(bad)
fbld
push
inc
sbb
mov
ins
div
gs
ja
clc
push
sub
sub
push
cmp
push
push
in
inc
fiadd
cmp
xor
inc
push
hlt
out
push
retf
dec
pop
loopne
cmp
jle
lahf
daa
mov
lock
sub
outs
xchg
(bad)
aaa
stos
adc
ins
jnp
push
inc
xchg
inc
adc
call
or
dec
mov
pop
mov
mov
inc
mov
out
cld
rcr
mov
scas
push
dec
imul
shr
jp
aad
fs
pop
enter
adc
lds
pop
lock
(bad)
mov
inc
cmps
cmp
sbb
idiv
lock
out
adc
mov
inc
nop
in
sti
inc
jmp
jbe
nop
nop
out
push
inc
jo
pusha
cmps
inc
fldcw
arpl
mov
xchg
xchg
pop
out
test
push
scas
in
push
inc
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
fs
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
gs
aas
scas
jp
add
xor
and
xchg
mov
pop
icebp
lahf
loopne
cli
sub
dec
push
int
into
popa
xchg
adc
push
mov
xchg
fsub
sar
lea
jne
loopne
adc
js
mov
mov
popf
cwde
push
or
adc
and
std
test
adc
xchg
dec
cmp
out
or
and
loope
and
clc
mov
xor
dec
repz
cmps
jge
mov
push
dec
jmp
inc
into
pushf
ficomp
retf
and
ds
loop
pop
xchg
cmpxchg
mov
sahf
xor
cmp
mov
ins
das
mov
div
pop
or
push
pop
mov
push
push
inc
cmps
jb
scas
pop
adc
cmps
mov
ror
push
movs
cmp
ds
and
addr16
scas
cld
mov
jo
(bad)
daa
shl
into
xor
xchg
out
push
adc
jo
aaa
(bad)
push
cmps
pop
mov
sahf
ja
das
cmc
aad
mov
ds
pop
pop
xchg
retf
or
adc
scas
cld
cli
mov
xor
stos
pop
lock
cmp
mov
pop
add
jo
popa
scas
adc
sub
ror
loopne
aam
and
push
mov
mov
fimul
xchg
xor
int
xchg
ret
dec
divps
push
pop
sbb
inc
daa
xor
pusha
inc
adc
leave
sub
sub
mov
les
scas
(bad)
and
cdq
call
xor
xchg
sbb
dec
adc
dec
out
push
add
jo
and
adc
mov
sahf
in
cmp
arpl
pop
loopne
nop
cs
mov
mov
jmp
and
lock
imul
push
pop
pop
add
mov
mov
inc
push
sbb
fisubr
jle
or
or
mov
in
push
push
inc
into
mov
hlt
scas
stc
cli
mov
xchg
shl
cmps
mov
loopne
xchg
ds
fcomp
dec
stos
repz
test
jo
pusha
outs
adc
sub
sub
dec
sbb
inc
cs
xor
inc
mov
es
xchg
scas
mov
sahf
enter
sar
(bad)
or
mov
mov
fld
and
jnp
or
or
outs
push
sar
mov
in
adc
and
mov
jo
mov
ss
pop
fidivr
hlt
jp
nop
inc
mov
xchg
push
fwait
stos
leave
(bad)
xor
and
in
pop
cwde
pop
or
add
add
into
jge
pusha
jmp
stos
add
mov
xchg
dec
xlat
pop
loopne
nop
imul
push
xchg
inc
enter
bound
call
lds
lea
shr
or
push
mov
aas
scas
jp
add
cmc
(bad)
and
es
loopne
mov
push
dec
or
mov
xchg
push
into
and
cli
add
popf
and
or
mov
jmp
inc
pushf
mov
stos
adc
push
and
fistp
and
and
pop
mov
leave
cmp
dec
mov
enter
add
add
mov
cmp
in
icebp
ins
mov
mov
dec
dec
adc
jmp
xchg
arpl
mov
imul
dec
pop
loopne
aam
lds
mov
outs
mov
xchg
push
into
cwde
fisub
adc
and
test
push
ds
es
pop
add
jo
data16
sti
mov
sub
shl
popf
and
push
dec
out
fdivr
test
test
xor
int
xchg
(bad)
dec
sbb
cs
and
pop
sbb
daa
xor
pusha
inc
adc
jmp
sub
sub
mov
sub
mul
cdq
call
xor
and
neg
cs
imul
push
inc
stos
jo
and
adc
mov
sahf
clc
outs
cmp
arpl
pop
loopne
nop
adc
push
push
(bad)
cmps
into
adc
mov
mov
call
repnz
out
jbe
je
pop
pop
add
mov
scas
pusha
inc
push
sbb
lds
jle
or
or
nop
fild
dec
push
push
inc
into
xchg
fmulp
scas
stc
cli
mov
mov
jbe
cmps
mov
loopne
xchg
ds
clc
push
dec
stos
repz
test
jo
pusha
cmp
push
inc
sub
xor
dec
sbb
inc
cs
sub
push
mov
fwait
daa
push
jne
adc
lea
sahf
outs
cmp
loopne
loope
(bad)
cmp
mov
sub
push
pop
add
xchg
cmc
jg
fstp
xchg
leave
or
xchg
sub
dec
inc
sub
push
mov
push
mov
dec
push
or
ja
ds
dec
std
(bad)
mov
ret
pusha
out
rol
(bad)
xor
in
je
mov
test
aad
mov
add
arpl
mov
rcr
sbb
sbb
aad
ror
inc
mov
jo
bound
xchg
xchg
sar
xchg
push
mov
mov
femms
rcl
scas
aaa
xor
fimul
pusha
ficomp
aaa
rcl
ficom
pop
mov
mov
mov
dec
mov
sahf
mov
adc
loope
jl
js
cmc
dec
lock
adc
popa
adc
dec
add
xchg
lds
pusha
and
push
push
push
loop
inc
lea
dec
mov
(bad)
lds
out
(bad)
ins
push
sbb
xor
fidivr
retf
enter
rcl
mov
lea
push
or
mov
aam
jns
mov
and
mov
ds
outs
push
pop
add
jo
push
(bad)
mov
sub
rcr
popf
and
push
jbe
ins
(bad)
test
cmps
adc
push
xor
int
xchg
enter
sbb
jns
and
pop
push
mov
daa
xor
pusha
inc
sbb
leave
sub
sub
mov
cs
xlat
les
test
add
cdq
call
xor
and
stc
pop
xor
mov
imul
sub
and
adc
mov
sahf
mov
cmp
arpl
push
loopne
nop
jmp
pop
(bad)
xchg
into
cmp
mov
mov
call
mov
lock
cs
ds
out
mov
inc
pusha
inc
push
sbb
lock
and
sub
push
pop
or
nop
out
cmp
mul
dec
push
push
dec
into
mov
cli
mov
mov
mov
loopne
cwde
ds
push
mov
dec
stos
repz
test
cli
push
sub
or
push
mov
push
pusha
cmp
ins
(bad)
mov
cmpxchg
out
push
cmp
push
xor
daa
adc
retf
jne
jle
into
sub
stos
cmps
sbb
arpl
je
mov
mov
sahf
xor
sub
cmp
jge
mov
nop
clc
(bad)
repnz
out
or
fisub
fwait
mov
mov
mov
dec
test
mov
push
pop
loope
push
into
xor
pusha
es
xor
sar
divps
loope
rcr
repz
mov
inc
jne
and
mov
popa
and
sbb
xchg
dec
not
in
adc
int
out
xlat
push
out
arpl
sub
call
inc
sahf
adc
xchg
jle
ret
in
loope
xchg
(bad)
and
inc
mov
fwait
sahf
scas
push
mov
les
jg
push
jge
mov
cdq
rol
mov
mov
jno
ror
push
das
sub
pop
sub
cmp
in
js
enter
cmp
dec
xor
ret
popaw
sub
lock
nop
and
mov
in
adc
retf
xor
mov
and
das
imul
mov
or
clc
inc
into
jno
aaa
mov
cmp
test
add
or
pop
ficom
loope
into
push
je
mov
test
mov
mul
in
push
xchg
loope
arpl
pop
pop
(bad)
push
rcl
mov
iret
mov
outs
das
jg
dec
lock
push
mov
mov
into
neg
mov
xor
outs
mov
sbb
fnstsw
cs
inc
out
mov
cmps
std
scas
sub
jmp
dec
dec
ret
mov
cs
xchg
lock
push
add
std
and
ins
adc
imul
pop
scas
jo
lds
pop
in
in
je
mov
inc
inc
mov
cmp
and
and
lods
bound
loopne
jne
xchg
(bad)
mov
(bad)
ss
mov
je
imul
cdq
divps
lds
out
adc
push
call
jno
cwde
and
cmp
sahf
call
out
adc
inc
into
xchg
fidiv
adc
add
(bad)
(bad)
aas
mov
push
mov
sbb
or
fld
cdq
clc
push
pushf
rcr
shl
and
ret
in
loopne
hlt
std
ret
push
jnp
add
in
and
jne
mov
xor
jno
xor
push
push
or
and
movs
(bad)
test
add
mov
fild
mov
subps
cmps
xchg
aas
or
out
push
sti
js
sub
sti
add
xor
lea
nop
retf
mov
mov
int3
xor
jmp
jbe
adc
adc
in
mov
ins
ins
lds
jbe
pop
mov
(bad)
xchg
nop
adc
jno
xchg
cwde
ins
pop
js
pop
icebp
jle
arpl
sahf
pop
adc
xor
push
jmp
sbb
sahf
pop
jle
add
sub
nop
mov
xchg
adc
xchg
mov
cmp
add
shr
mov
mov
les
push
mov
call
dec
test
fild
inc
jle
(bad)
lock
mov
adc
xchg
pop
test
jb
push
repnz
es
dec
dec
add
rcr
cmp
push
fidivr
pop
push
call
outs
outs
rol
mov
fild
xchg
push
add
push
popf
mov
gs
mov
loope
aad
pusha
or
xor
fidiv
cmp
push
out
adc
call
ds
sub
ret
mov
pop
dec
xchg
test
inc
jbe
xor
jge
or
shl
sti
ret
mov
loope
je
jl
mov
and
(bad)
and
adc
out
lea
pop
and
xchg
adc
ins
pop
xchg
icebp
hlt
xchg
sbb
add
inc
les
lods
cmp
gs
daa
sti
(bad)
mov
sbb
fsub
fcomp
fiadd
sub
test
mov
lods
fimul
jp
xor
mov
and
(bad)
mov
shl
xor
je
(bad)
pop
pop
push
fild
retf
int3
sbb
lahf
inc
in
pop
mov
(bad)
add
lds
les
xchg
pop
mov
cwde
dec
pop
scas
out
xor
and
daa
ds
mov
lds
loop
pop
adc
fisub
adc
jno
jbe
cmp
jge
in
aaa
outs
ds
cmp
cmps
test
jo
cmp
out
stos
lea
fs
das
call
je
xchg
icebp
jnp
and
in
nop
fwait
es
push
xor
lods
jnp
dec
xchg
pop
subps
pop
sar
psubsb
data16
and
test
sti
and
(bad)
fdivr
xchg
or
sbb
nop
jnp
mov
sub
xchg
retf
dec
and
xor
xchg
outs
mov
not
pop
sbb
clc
cmp
xor
mov
fbld
jecxz
dec
in
f2xm1
pushf
das
add
mov
and
cmp
retf
push
fist
pop
inc
xor
xor
and
add
xchg
hlt
xchg
or
enter
sbb
pop
enter
inc
cmps
inc
scas
cs
js
jo
xor
adc
sahf
jg
push
adc
inc
mov
cs
add
int
sti
mov
in
iret
ins
and
call
cli
cmp
and
sbb
sub
mov
mov
or
xchg
in
or
pop
adc
jne
xor
or
je
ja
push
es
dec
jge
ins
cs
jg
loopne
cmp
xchg
and
inc
sti
add
shr
mov
add
mov
into
and
lahf
jmp
push
and
adc
in
cs
pop
jo
ins
cs
jp
pop
dec
loop
push
scas
inc
out
and
inc
ror
ds
test
inc
pop
sar
and
fwait
in
xchg
add
(bad)
xor
dec
and
imul
fidiv
cmovg
out
imul
cmps
push
fidivr
jge
sar
cdq
dec
jge
loopne
cli
rol
movs
fdiv
mov
xor
(bad)
mov
cwde
loopne
popa
jo
push
mov
sub
mov
and
pusha
jecxz
(bad)
arpl
ret
sar
rcr
outs
mov
push
mov
inc
adc
(bad)
mov
jecxz
mov
fucomip
mov
pop
mov
xor
inc
xor
daa
jmp
jo
mov
rol
shr
xchg
or
mov
xchg
pop
add
ret
fst
clc
xor
call
sbb
or
push
test
add
push
push
mov
ds
mov
push
adc
in
push
call
out
push
xlat
fcomp
test
mov
arpl
or
mov
mov
scas
inc
push
clc
inc
mov
push
mov
fnsave
dec
in
test
dec
mov
mov
int
in
dec
stc
mov
mov
mov
xchg
ret
out
push
inc
fs
mov
std
push
pusha
and
ror
popf
mov
or
movs
pop
pop
out
xchg
push
inc
std
sti
inc
adc
jle
xchg
outs
(bad)
pop
sub
jge
popf
mov
call
add
fucomi
call
fild
jbe
push
mov
ret
mov
imul
adc
iret
mov
lahf
inc
xor
xor
int
mov
sub
shl
add
fdivr
scas
push
push
mul
push
xlat
xchg
pop
ror
(bad)
loopne
inc
sub
cmc
sub
out
and
and
push
jecxz
add
mov
cmp
mov
sub
jl
pop
mov
(bad)
aad
jns
in
inc
mov
or
mov
xchg
or
adc
sbb
and
mov
cmp
mov
jle
push
movs
cmc
movs
jne
cli
into
cwde
mov
or
add
iret
and
cmp
cmp
icebp
pop
fld
rol
push
dec
sbb
pushf
inc
sti
test
repz
or
arpl
aad
sbb
inc
dec
out
pop
mov
xor
sbb
push
or
pop
fstp
push
and
jbe
sbb
jmp
mov
fisub
and
sub
lods
ficomp
xchg
pusha
arpl
(bad)
scas
and
out
mov
fs
sub
lods
pop
std
ret
jp
dec
loope
mov
mov
jmp
in
cmp
or
push
mov
mov
or
adc
jbe
outs
rcr
sbb
push
clc
(bad)
icebp
loopne
adc
push
inc
mov
jge
aam
xchg
das
sbb
mov
and
aad
adc
mov
add
adc
nop
ret
cmps
shl
push
aam
or
push
sub
xchg
ds
inc
xor
in
call
sar
pop
call
push
cmc
inc
in
inc
mov
imul
inc
sub
movs
std
stc
lds
loopne
jns
int
mov
scas
inc
inc
(bad)
pop
jo
dec
in
mov
pop
jo
pop
add
mov
mov
in
xor
push
test
pushf
cmps
sbb
mov
jmp
imul
lds
pop
retf
sub
lds
mov
stos
sbb
and
pop
and
cmps
retf
mov
or
sub
jnp
inc
(bad)
mov
push
sti
cmp
outs
aad
aas
jge
sbb
jle
cmp
jmp
pop
(bad)
jnp
cmp
jle
repz
and
sar
dec
lea
in
xchg
fimul
or
ds
cmc
gs
sub
ds
inc
hlt
add
lods
js
mov
mov
pop
fstp
retf
add
fidivr
call
inc
(bad)
cmps
xchg
xchg
add
mov
jnp
sbb
add
xor
test
cmc
xchg
dec
or
and
std
imul
and
(bad)
cwde
(bad)
or
shl
inc
bound
mov
dec
push
test
(bad)
dec
mov
push
mov
mov
popf
stos
sbb
ds
jmp
movs
shr
xchg
pop
sbb
fidiv
jmp
xor
jnp
fdivr
sub
cld
punpckhwd
pop
sbb
mov
(bad)
lods
xchg
sti
mov
add
fsubr
xchg
lock
loopne
pushf
push
xchg
pusha
(bad)
sbb
xchg
addr16
xor
fild
sbb
rol
leave
mov
push
pop
jle
addr16
mov
mov
inc
mov
test
test
pop
arpl
mov
js
sbb
xor
mov
pop
cdq
mov
xchg
or
test
lods
movs
push
mov
lea
add
(bad)
cmp
sbb
xlat
pop
enter
adc
pushf
xor
xchg
int3
cmp
out
push
cli
or
fimul
cdq
inc
mov
lods
div
out
test
mov
pop
xchg
in
jmp
jmp
cdq
mov
and
jge
adc
push
gs
outs
aas
adc
mov
into
cmp
dec
dec
cli
xor
lea
push
gs
sbb
mov
cmp
xor
add
fistp
cmp
nop
dec
add
jne
outs
(bad)
and
pusha
mov
and
jg
mov
outs
aas
xlat
dec
cmp
movs
mov
xor
(bad)
addr16
outs
rol
push
xchg
ds
lock
sub
call
into
pushf
fimul
push
xchg
scas
and
pop
jle
dec
scas
pop
pop
jg
into
xor
dec
inc
out
inc
inc
jmp
mov
and
in
loope
mov
rcl
jo
test
data16
outs
xchg
cmp
loopne
shr
push
jg
mov
nop
adc
std
inc
mov
stc
mov
bnd
add
jg
dec
dec
psraw
nop
ret
aad
pop
or
scas
jecxz
mov
fist
dec
pop
adc
shl
nop
adc
jmp
sub
call
and
jg
lds
mov
nop
or
pop
adc
retf
inc
sbb
add
sub
sti
cmp
mov
add
maxps
cwde
push
and
inc
mov
or
pop
ss
mov
test
ficom
xchg
xor
mov
mov
mov
arpl
rcr
jno
inc
out
push
add
fimul
add
adc
dec
jae
loopne
nop
rol
push
fsubr
xor
jno
xor
in
cmps
shl
pop
mov
aam
(bad)
mov
mov
fidiv
jmp
push
jge
mov
jl
scas
mov
add
enter
jns
mov
iret
xor
sti
add
dec
fsubr
mov
loopne
sar
out
test
add
(bad)
adc
dec
outs
outs
mov
mov
sbb
cs
sbb
mov
or
inc
push
mov
xor
outs
nop
mov
loopne
xor
les
jae
jo
mov
ficomp
jno
sahf
lods
outs
push
fadd
or
popf
cmp
out
je
adc
inc
or
adc
mov
mov
cmp
pop
sbb
mov
outs
imul
ins
jno
jne
int3
dec
inc
addr16
jbe
add
adc
dec
adc
in
xchg
and
mov
mov
jecxz
aad
test
dec
nop
add
sar
cmc
frstor
xor
sets
sahf
inc
addr16
sahf
clc
outs
xchg
cmc
outs
mov
mov
retf
dec
push
mov
mov
pusha
adc
out
pop
jmp
sbb
push
mov
mov
or
clc
mov
jecxz
mov
dec
lock
push
mov
dec
out
jne
sub
mov
cmp
jne
and
or
xchg
imul
inc
(bad)
mov
cmps
jno
lods
not
mov
dec
outs
adc
loopne
aad
or
clc
(bad)
push
mov
fbld
retf
gs
sar
je
cmc
jnp
psrlq
out
push
outs
inc
ret
xor
out
mov
sub
pop
loopne
nop
arpl
data16
outs
mov
(bad)
adc
jne
or
xor
and
xchg
push
ror
ds
fcomp
arpl
or
inc
xchg
and
xlat
xor
test
xor
add
mov
into
mov
mov
and
icebp
popf
xor
ds
cmc
pop
enter
sbb
jo
pusha
inc
push
(bad)
add
(bad)
and
jle
or
or
in
push
cmp
and
out
add
sahf
jns
xchg
jb
pop
icebp
pop
ins
sbb
test
push
jae
xchg
xor
popa
cmc
fld1
lea
les
or
push
nop
jle
push
mov
lock
adc
jae
pusha
push
je
fistp
test
fiadd
xchg
mov
xor
stos
pusha
inc
cmp
or
iret
(bad)
and
popf
or
or
ret
mov
enter
inc
sahf
xor
mov
fs
sbb
cwde
cli
aad
int
cmc
push
mov
bound
xor
jno
(bad)
fdiv
aas
mov
pop
es
aad
test
pop
and
lods
(bad)
and
mov
mov
out
push
sub
imul
out
loope
out
mov
push
test
xor
outs
push
cmp
stos
lock
rcl
ds
out
push
leave
inc
mov
addr16
ins
outs
add
shl
inc
mov
mov
into
cmp
ss
mov
ins
sbb
outs
cwde
movs
mov
mov
data16
pop
inc
dec
mov
jp
scas
popf
dec
add
xchg
jle
jecxz
jle
stos
lock
out
movs
fisttp
push
cmc
inc
pop
stos
lods
push
into
mov
and
mov
call
mov
(bad)
xor
xor
data16
add
mov
jle
mov
mov
lock
int
cwde
(bad)
pusha
and
pop
mov
hlt
xor
ds
mov
outs
outs
cmc
shl
inc
or
pusha
inc
pop
mov
jecxz
das
cs
adc
test
inc
mov
pop
stos
lods
push
into
xchg
std
push
and
je
stos
and
xchg
push
retf
inc
shl
inc
fisttp
mov
xchg
push
add
mov
jg
xor
test
jg
cmp
cmp
jle
dec
pop
mov
or
push
imul
inc
dec
js
mov
mov
push
mov
fsubr
xor
stos
stos
mov
jnp
out
pop
sub
popf
jo
pusha
and
lea
sahf
sub
mov
mov
nop
push
jg
dec
jne
push
into
add
fist
push
mov
xchg
sub
xor
outs
cs
pop
fsub
or
inc
mov
and
sbb
loopne
aad
inc
push
pop
xchg
pop
call
test
adc
les
das
xchg
fild
cmp
lods
cs
aas
or
cmp
mov
sti
fisub
pop
xor
cmps
adc
push
sti
aad
cs
inc
add
inc
iret
nop
mov
push
jno
xchg
test
loopne
xchg
mov
repnz
ins
fimul
pop
push
in
arpl
fwait
in
xchg
call
and
add
mov
or
nop
ror
pop
(bad)
out
pop
mov
pusha
scas
hlt
inc
push
retf
push
sahf
outs
sub
mov
or
out
or
test
and
cli
inc
mov
jbe
in
not
mov
cmp
inc
jo
pusha
fsubrp
mov
and
and
xor
xchg
(bad)
fidiv
jae
sahf
movs
ss
lahf
inc
mov
ins
sub
rcr
mov
or
retf
xor
fistp
retf
hlt
(bad)
aas
pop
adc
fnstsw
dec
mov
sub
pusha
(bad)
mov
jmp
sti
add
mov
mov
and
nop
outs
or
mov
in
mov
fwait
adc
jo
(bad)
fwait
jge
gs
xchg
dec
jnp
adc
inc
outs
ins
jmp
mov
into
push
jp
scas
xchg
inc
shl
fist
hlt
das
dec
mov
sbb
retf
jg
dec
dec
sub
xor
hlt
(bad)
inc
adc
pop
dec
(bad)
je
cmp
lock
sub
ror
sbb
mov
inc
adc
enter
nop
jnp
pop
loopne
int3
ds
fiadd
pusha
push
in
mov
jg
cmp
stos
dec
jge
pop
sbb
sub
jo
mov
jo
test
mov
and
lock
loopne
sbb
sbb
into
cwde
sbb
inc
sti
push
retf
push
jo
jo
cmp
test
movs
shr
jg
mov
push
mov
scas
push
inc
add
xor
outs
shr
cmc
pop
lock
movs
jbe
mov
cs
pop
dec
loop
push
mov
and
inc
jo
popa
les
adc
jle
mov
push
jbe
rcl
inc
add
and
fdiv
popa
lock
cmp
stc
mov
sbb
xchg
pop
out
xchg
outs
xor
and
inc
inc
test
add
sub
ret
in
pop
push
js
out
lock
inc
and
and
das
cmp
movzx
pop
shl
arpl
mov
data16
push
fnsave
gs
pause
mov
pop
call
and
data16
xchg
inc
push
gs
fistp
jg
dec
ss
or
adc
sub
mov
scas
out
scas
push
retf
cmp
test
divps
push
(bad)
push
icebp
js
pop
mov
std
and
jecxz
inc
add
arpl
mov
xor
loope
mov
mov
dec
repnz
mov
gs
cmp
sbb
pop
loopne
jo
or
push
clc
mov
lods
xchg
xchg
or
repnz
pop
pop
out
scas
inc
xor
push
add
rol
ins
rcl
ds
mov
inc
out
xchg
add
lock
inc
gs
sahf
jg
cmp
dec
stos
mov
clc
fs
adc
inc
mov
mov
xor
fistp
jge
call
xchg
push
inc
sub
add
pop
adc
and
mov
or
push
sub
inc
inc
fbld
enter
test
cmp
ss
retf
int
dec
loope
sbb
rcl
xor
xchg
xor
and
stos
retf
cmps
mov
cmp
clc
or
jecxz
sti
lea
lahf
fbld
repz
(bad)
dec
pop
mov
outs
ds
cmpxchg
dec
push
jnp
es
jmp
jecxz
(bad)
inc
fidiv
popa
in
shl
test
mov
mov
ins
outs
xor
adc
push
pushf
(bad)
adc
mov
fld
xchg
pop
cmp
xchg
push
cs
mov
fidiv
or
lods
out
xor
xor
retf
les
or
inc
dec
dec
push
mov
push
inc
mov
xor
sub
or
sbb
adc
dec
mov
mov
cld
fnsave
out
xor
dec
push
icebp
sbb
call
pop
dec
mov
call
dec
retf
fist
xor
loopne
aad
jg
cmp
jne
mov
fwait
mov
fbstp
test
sbb
repnz
mov
ins
push
mov
hlt
loop
arpl
add
jno
test
sub
jno
popa
xor
mov
dec
ins
mov
or
push
adc
cld
inc
inc
push
sti
pop
dec
sub
ss
jle
ret
lock
pop
sub
add
in
add
lahf
repz
push
jno
jmp
cmp
and
movs
sbb
mov
sbb
jnp
inc
add
xor
push
cmp
jns
call
push
pop
rol
xchg
inc
add
jbe
cmps
sbb
mov
mov
mov
and
repz
adc
xchg
cdq
adc
jle
push
or
or
mov
test
cwde
push
and
pop
repz
movs
cmp
ja
mov
pop
push
test
dec
mov
fistp
loope
movs
js
xchg
jns
imul
sar
sub
imul
sub
(bad)
xchg
adc
sbb
inc
cmp
int
rcl
mov
xchg
xchg
sub
xor
retf
aad
adc
inc
fbld
xchg
stc
and
push
fwait
scas
or
cmp
enter
in
cwde
mov
pmaddwd
mov
jmp
mov
popf
mov
addr16
cmc
add
pop
sub
mov
lds
and
retf
aas
sti
in
ins
bound
jge
nop
cmc
mov
arpl
rcl
fistp
dec
mov
ins
and
jne
sub
movs
out
cdq
inc
je
mov
imul
push
aam
imul
xor
ins
std
popf
push
cmp
les
rol
push
xor
cs
add
push
test
(bad)
adc
(bad)
adc
add
shl
dec
sbb
push
rcl
repnz
add
and
and
sbb
test
pop
loopne
nop
add
pop
pop
lods
sti
adc
int
test
or
arpl
mov
sar
jb
lock
retf
or
push
or
inc
movs
fsubp
jp
aam
pushw
adc
and
je
cs
aad
dec
mov
stos
lods
out
jne
into
test
aaa
scas
inc
cmp
addr16
jle
mov
aaa
sub
sbb
into
sbb
js
pop
cld
add
xor
outs
sar
dec
mov
xchg
aam
ror
or
xor
call
push
rcl
loop
scas
fcmovb
icebp
mov
dec
adc
inc
ret
pop
jo
mov
out
mov
and
adc
sub
xor
int3
in
lds
mov
fwait
mov
jo
clc
adc
jg
(bad)
in
mov
push
adc
fisub
clc
xor
jno
fcmovne
in
xor
mov
cmovl
outs
fiadd
inc
adc
and
jge
mov
sbb
movs
out
rcl
inc
test
inc
pop
jo
inc
daa
fwait
repz
inc
jbe
outs
pop
jb
push
jnp
fs
daa
std
or
mov
retf
lahf
inc
push
push
mov
adc
jl
mov
arpl
sbb
cmp
stos
xor
push
int
jb
mov
jge
cld
lods
(bad)
lea
mov
and
rcl
push
jge
cmp
pusha
clc
fwait
js
dec
rcr
and
mov
cmp
aas
adc
pop
pop
adc
js
iret
mov
pusha
jbe
mov
enter
lea
pop
lods
sbb
mov
xor
inc
int
fsub
push
jbe
jne
lahf
arpl
push
fsub
cmp
and
and
jmp
and
cmps
test
nop
push
lds
xchg
jmp
push
xchg
in
xchg
scas
mov
lahf
push
cmps
sar
(bad)
lock
popa
jnp
cmc
dec
pop
scas
dec
dec
ins
mov
das
fst
ins
in
inc
adc
xchg
das
xchg
mov
aaa
dec
cli
mov
retf
mov
in
scas
adc
outs
push
std
xchg
cmp
pop
loopne
nop
adc
jmp
inc
cli
stos
jmp
or
add
or
sbb
cmp
xor
or
mov
shl
push
pop
(bad)
push
repz
mov
sbb
fimul
stos
sahf
jge
inc
jo
pusha
les
mov
jno
shl
xchg
xchg
imul
or
push
aad
sahf
cmp
sbb
std
sub
mov
sub
into
js
bound
push
and
sbb
pusha
clc
les
ds
push
aas
mov
mov
sbb
fmul
stos
cmp
xchg
out
inc
inc
out
into
cmp
mov
pop
pop
das
xchg
add
inc
jle
cmp
add
add
test
adc
ficom
dec
stc
out
push
jae
loop
xchg
jmp
fwait
push
mov
mov
cmc
sbb
cmp
cmps
fstp
sub
dec
mov
cs
test
and
out
dec
scas
clc
retf
imul
and
sbb
fdiv
adc
sbb
cwde
mov
adc
and
jae
pushf
push
in
loopne
jge
xor
cpuid
sbb
cmp
std
xchg
add
es
jnp
and
sbb
sub
hlt
mov
int
cmp
inc
sbb
pop
adc
(bad)
jmp
mov
fisttp
jne
xchg
mov
inc
repz
adc
mov
xchg
xor
pushf
imul
test
mov
inc
cmps
adc
in
add
cmc
shl
cmc
fwait
ds
mov
dec
cmc
xchg
add
mov
popf
inc
add
int3
sahf
sub
mov
int3
js
mov
movs
mov
icebp
fld
loope
add
aam
ror
lods
pop
(bad)
in
test
add
pop
sub
push
dec
mov
lods
jmp
mov
and
sub
ret
cmp
mov
xchg
mov
(bad)
inc
cvtdq2ps
and
mov
cmpps
and
dec
jne
xor
push
repz
xchg
retf
sbb
mov
inc
mov
fwait
cmp
push
mov
add
jne
fwait
jg
xchg
fisub
pusha
shr
test
test
cmp
pop
sbb
outs
push
cmp
pusha
scas
adc
jne
fist
retf
sahf
ins
push
mov
sub
push
cmp
pop
adc
ins
outs
push
shl
mov
jae
push
mov
add
nop
mov
inc
(bad)
not
repnz
inc
pop
les
imul
xor
add
rol
cmp
std
dec
and
fst
dec
int
push
pusha
call
cmp
aas
adc
imul
xchg
popa
imul
lds
es
xor
and
ror
pop
in
outs
xor
gs
push
and
jbe
push
sub
das
outs
inc
adc
nop
and
das
out
sub
dec
fisub
mov
popa
lods
shr
add
(bad)
fld
xchg
mov
push
jo
mov
std
(bad)
push
jge
call
lods
jb
shl
aad
cmps
sub
mov
cmp
movs
into
adc
jno
sahf
gs
paddb
fsub
icebp
out
push
sti
inc
sub
and
fsub
mov
mov
ds
mov
mov
pusha
scas
xchg
cmp
xor
or
xchg
add
mov
jno
mov
push
add
fs
not
sbb
mov
mov
into
jo
pusha
outs
daa
loop
in
inc
adc
mov
aas
xor
ds
je
icebp
out
fdivr
add
or
out
add
xor
dec
es
mov
cmpxchg
push
outs
adc
out
mul
push
add
add
pop
shr
in
pop
jno
dec
jp
or
push
or
fbld
call
xchg
fist
and
mov
mov
mov
movs
aad
test
jae
add
jne
int3
popa
and
xchg
sbb
xchg
mov
add
fdiv
out
out
jns
mov
popa
retf
fiadd
or
outs
(bad)
or
or
test
scas
jne
leave
sti
fwait
sub
mov
and
(bad)
cmc
aas
mov
mov
and
sar
inc
push
stos
out
mov
fs
clc
fidiv
xchg
jle
adc
cdq
mov
push
(bad)
frstor
or
frstor
les
mov
jno
xchg
stos
push
cmp
mov
pop
in
ror
lds
pop
test
es
push
xchg
ret
or
sar
dec
scas
mov
sub
inc
xor
push
out
and
inc
in
sub
jle
sbb
sahf
jg
shr
sub
add
sub
imul
pop
push
inc
retf
jmp
fwait
mov
mov
ja
adc
mov
dec
xchg
stos
inc
fwait
retf
dec
or
jmp
cdq
test
mov
push
dec
aam
ja
into
sti
out
and
adc
jbe
cmp
jnp
pop
into
pop
lods
jecxz
mov
into
mov
aam
shl
ficom
lea
inc
lock
cmps
leave
std
cmc
jnp
push
shl
mov
fs
stc
add
add
and
xor
pop
mov
es
xor
stos
pop
cmp
cmp
cmps
(bad)
lea
retf
mov
push
pusha
xchg
adc
call
jmp
cmp
sub
pop
dec
xor
mov
test
dec
test
lds
pop
jmp
ins
dec
cdq
lock
xchg
or
dec
lock
movs
adc
xchg
sub
mov
out
daa
xor
mov
cmp
mov
test
mov
pushf
shr
jmp
add
inc
lock
movs
jnp
mov
(bad)
mov
mov
fld
xchg
popa
movs
out
jl
rcr
(bad)
fcom
jnp
imul
mov
mov
cmp
imul
retf
gs
push
jno
mov
sbb
pop
nop
in
push
mov
repz
adc
int
and
adc
fst
jecxz
mov
lods
scas
or
add
push
mov
into
jno
pusha
scas
popf
mov
stos
data16
(bad)
jle
(bad)
rcr
lock
scas
(bad)
mov
cli
iret
lea
mov
jle
mov
push
movs
jo
push
lahf
pop
mov
dec
mov
adc
enter
pop
pop
data16
iret
stc
xchg
aam
aas
dec
cmp
add
jnp
push
std
push
in
push
adc
add
sahf
cmp
outs
sar
in
add
pusha
scas
xchg
xor
sbb
imul
jge
sbb
or
mov
pop
mov
dec
ins
(bad)
lods
inc
into
xchg
fisub
mov
sub
aad
xchg
sbb
inc
cmp
outs
stos
scas
inc
cmp
call
rol
loopne
nop
xor
push
ficomp
mov
leave
fbld
push
xor
out
xor
adc
dec
dec
pop
mov
cmp
push
mov
retf
inc
mov
(bad)
(bad)
and
rcl
and
dec
or
xchg
adc
fwait
test
jo
popa
inc
call
call
cmp
cs
pushf
cmp
in
and
mov
xor
test
dec
imul
xchg
push
in
stc
(bad)
sar
jo
push
call
xor
pop
lock
push
pop
jbe
(bad)
push
mov
lahf
mov
and
outs
or
mov
sub
rcr
mov
into
sbb
pusha
sti
fsub
push
es
int3
push
shl
push
cmps
add
push
mov
mov
add
call
jo
mov
rol
mov
nop
imul
mov
ret
xchg
jo
pusha
stc
xchg
fwait
stc
xlat
and
shl
or
lds
jns
sbb
push
adc
fsubp
add
and
call
movs
lea
push
aam
mov
iret
pusha
cmp
jbe
addr16
and
loopne
or
ds
mov
jo
jno
test
sub
rcr
jmp
mov
(bad)
test
mov
xor
int
xchg
iret
dec
arpl
cs
and
pop
adc
daa
xor
pusha
inc
pop
mov
leave
sub
sub
int3
loopne
nop
xlat
les
ret
into
cdq
call
xor
and
loope
jno
dec
imul
outs
inc
loop
aaa
and
adc
mov
cmp
sbb
mov
hlt
mov
ror
test
mov
mov
call
push
rcl
repnz
ds
pop
pop
add
mov
xchg
pusha
inc
push
sbb
scas
outs
jl
sub
push
pop
or
nop
mov
push
mov
in
push
push
dec
into
(bad)
fisubr
scas
stc
cli
mov
jecxz
jmp
lahf
ds
stos
repz
test
jo
pusha
mov
fcom
sub
and
adc
lahf
and
outs
inc
test
mov
into
(bad)
push
in
jmp
inc
je
ss
test
imul
in
lds
pop
inc
sti
fidiv
mov
adc
out
lock
inc
jnp
movs
adc
scas
sbb
pusha
xor
jno
mov
popf
pop
(bad)
shl
lahf
jge
les
ret
ret
add
dec
pop
add
mov
xchg
call
and
lds
or
push
mov
xor
cmp
in
add
xchg
and
into
shl
mov
les
adc
loope
aam
and
and
fcmovne
cmps
daa
or
and
dec
je
adc
and
clc
ficomp
fidiv
frstor
ror
(bad)
lock
mov
fnstsw
les
push
mov
and
pushf
scas
jp
inc
push
cmp
movs
jo
fdivr
mov
add
pop
and
fnsave
adc
fwait
xchg
sbb
cmps
je
and
pop
movs
stos
cmp
mov
xor
xchg
retf
jle
dec
xchg
call
dec
lods
das
ins
addr16
loopne
icebp
out
inc
mov
mov
pusha
push
stos
xor
mov
call
popf
ss
push
xor
add
lock
inc
adc
or
or
hlt
mov
or
xor
jne
clc
cmp
pusha
into
add
or
pop
rcl
sbb
adc
repz
dec
stos
add
xor
loopne
ins
cli
jg
js
repz
jg
in
jae
stos
loope
xor
jo
das
ins
int
divps
push
push
in
fisttp
mov
addr16
or
enter
aad
cmp
movs
jle
bound
fcomp
fild
dec
(bad)
push
and
push
inc
leave
fsub
and
add
cmp
or
in
in
gs
mov
fwait
sti
push
(bad)
int3
mov
lds
xor
sbb
shl
inc
mov
into
cwde
sbb
xor
test
icebp
sbb
imul
(bad)
mov
xchg
inc
cs
mov
cld
in
dec
or
xor
mov
gs
xchg
xor
out
xlat
inc
add
mov
movs
rol
loopne
adc
int
cmc
push
mov
mov
mov
mov
outs
fnstcw
and
mov
aas
mov
adc
in
cwde
(bad)
mov
scas
push
xor
retf
xor
inc
loopne
add
push
mov
sbb
in
out
mov
sbb
mov
xor
ja
lds
shl
push
sub
xor
es
jae
push
in
call
cdq
lds
lods
adc
test
dec
es
scas
inc
sbb
inc
call
jne
xor
push
push
pop
sar
xchg
(bad)
pop
push
push
mov
add
repz
sar
add
aam
lds
mov
outs
mov
xchg
push
into
and
mov
jns
cmp
dec
dec
nop
adc
div
mov
push
dec
out
test
add
not
push
add
xor
out
sahf
rol
loopne
nop
mov
or
test
sbb
fisub
mov
and
jle
dec
mov
mov
cmp
and
jbe
push
sahf
push
inc
xor
push
add
(bad)
xchg
rcr
cs
dec
xlat
xor
(bad)
lods
into
mov
and
xlat
xor
push
rol
push
mov
sub
and
xchg
in
push
or
nop
jo
jne
inc
push
add
xchg
lahf
adc
sbb
inc
outs
mov
(bad)
stc
pop
enter
push
popf
cwde
push
or
adc
and
jle
dec
sbb
inc
cs
and
pop
adc
inc
es
scas
mov
sahf
enter
ror
movs
lea
push
in
out
mov
retf
pusha
(bad)
adc
add
cmp
test
pop
pop
or
ds
cmp
add
jo
jb
ja
cmp
(bad)
sub
shr
(bad)
loopne
aam
and
push
(bad)
out
test
test
mov
xor
int
xchg
aam
xchg
pop
pusha
cs
and
pop
or
daa
xor
pusha
inc
add
mov
sub
sub
cmp
call
mov
xor
call
xor
and
in
test
add
imul
call
adc
mov
ins
outs
cmp
arpl
dec
loopne
nop
repnz
mov
and
dec
fimul
call
test
lock
cs
pop
pop
add
mov
jmp
and
sub
push
pop
or
mov
in
push
push
push
into
adc
fs
stc
cli
mov
push
xchg
ror
dec
fld
js
or
mov
mov
scas
jne
xor
(bad)
out
stos
lea
cmp
adc
lock
lds
mov
mov
push
mov
mov
fsub
test
push
push
jne
call
pop
mov
loopne
int
(bad)
pop
mov
into
(bad)
call
fcomp
in
jge
ret
add
fiadd
push
cmps
mov
dec
clc
popf
inc
inc
jmp
dec
or
movs
es
or
push
lods
mov
sti
and
and
sti
adc
sub
sbb
fdivr
cmp
mov
xor
outs
mov
adc
sub
cmp
dec
mov
outs
xchg
div
loope
out
adc
pusha
dec
sbb
adc
outs
(bad)
jle
dec
lock
pop
fidivr
hlt
pop
mov
popf
sbb
mov
clc
add
xor
add
test
pop
scas
pop
loopne
test
js
adc
ss
dec
adc
cwde
fcomp
stos
scas
adc
push
aam
ins
push
jns
sbb
adc
fwait
pusha
push
xchg
outs
clc
dec
rol
xchg
aad
ror
(bad)
sub
adc
lahf
pusha
jmp
mov
xor
dec
add
push
jnp
push
jmp
cmp
jmp
sbb
pop
xor
in
cmc
test
pop
loope
nop
jnp
push
out
pop
gs
repnz
fwait
cli
mov
daa
sahf
jns
dec
jle
(bad)
lock
shr
mov
inc
xor
fild
retf
repz
ja
das
cmc
aad
add
das
pusha
or
pop
mov
or
imul
cmc
sti
add
dec
fsubr
mov
mov
icebp
jmp
mov
xchg
gs
and
fwait
loope
dec
iret
fwait
and
rol
push
stos
(bad)
shld
jnp
(bad)
jmp
jecxz
cmps
jo
stos
not
mov
dec
outs
adc
inc
aad
or
inc
mov
mov
fisub
repnz
gs
sar
cmp
cmc
jnp
push
jae
stc
out
push
push
inc
ret
xor
out
mov
xchg
sub
pop
loopne
nop
arpl
data16
ins
mov
dec
jne
or
xor
and
xchg
push
ror
ds
fcomp
arpl
or
inc
adc
and
xlat
xor
test
xor
add
mov
into
je
xchg
jmp
mov
and
jecxz
es
das
ja
ds
push
cmc
pop
enter
sbb
jo
pusha
inc
push
(bad)
add
(bad)
and
jle
or
ds
and
xchg
nop
xchg
jo
test
repz
jns
rcl
rol
ss
inc
or
stos
cmp
sbb
fisub
adc
out
pop
repnz
sar
dec
jne
mov
push
in
(bad)
mov
mov
or
loopne
aad
pop
sahf
jecxz
mov
xchg
lock
push
fcom
mov
xor
xor
mov
ror
out
outs
sub
movs
test
push
std
and
(bad)
retf
jo
push
cmp
movlps
out
out
out
adc
(bad)
xchg
pop
adc
add
imul
test
cmp
cmp
scas
sub
and
(bad)
retf
sub
jle
inc
imul
mov
ror
fcmovbe
jmp
adc
add
(bad)
adc
fisttp
adc
sub
cwde
enter
inc
nop
data16
jecxz
sar
ret
icebp
jle
js
jae
enter
adc
xor
hlt
lock
mov
cmc
dec
div
push
imul
mov
mov
iret
inc
fisub
scas
inc
jno
retf
inc
lods
pop
test
repnz
mov
dec
jb
mov
retf
nop
push
fs
mov
jp
dec
retf
es
(bad)
(bad)
int3
mov
(bad)
add
gs
out
data16
ret
add
(bad)
mov
test
cmp
movzx
or
inc
call
cld
cmps
sbb
leave
ss
pop
mov
dec
popf
sti
pop
popa
ficom
adc
mov
xor
and
out
adc
adc
mov
and
arpl
sti
xor
mov
das
sub
lds
push
lods
ins
mov
mov
fwait
mov
mov
adc
test
repnz
in
rcl
loope
xlat
push
mov
arpl
xor
pop
cdq
add
mov
sub
pop
rcl
dec
mov
popa
or
xor
outs
sar
sub
sbb
add
push
sub
jo
jmp
fwait
mov
and
mov
mov
std
pop
push
push
mov
inc
jmp
popf
cmp
sti
sbb
mov
ss
aad
adc
mov
fwait
or
dec
or
lea
xlat
(bad)
and
lock
sbb
mov
mov
nop
jo
popa
dec
or
dec
outs
sub
loope
dec
mov
in
jmp
fwait
jns
dec
mov
outs
cmp
jg
aad
out
aas
call
mov
mov
jne
push
pop
add
xchg
sub
(bad)
nop
push
xor
xchg
iret
jo
pusha
push
adc
push
fidiv
outs
cmp
dec
dec
nop
adc
div
mov
push
dec
out
test
add
not
push
add
xor
out
sahf
rol
loopne
nop
mov
or
test
sbb
fisub
mov
and
jle
dec
mov
mov
jge
and
jbe
push
sahf
push
inc
xor
push
add
(bad)
xchg
nop
cdq
dec
sbb
add
xchg
(bad)
stc
pop
enter
push
popf
cwde
push
or
adc
and
cmp
jmp
ds
pop
inc
std
and
nop
not
push
inc
sub
cli
jle
dec
sbb
inc
cs
and
mov
es
fimul
enter
xchg
sahf
enter
rcl
movs
lea
push
shr
mov
pusha
xchg
sub
addr16
and
dec
pop
or
ds
adc
add
jo
jns
aaa
mov
sub
shr
loopne
aam
and
push
xchg
inc
(bad)
test
mov
cwde
add
xor
int
xchg
fisttp
pop
and
jns
and
pop
add
inc
daa
xor
pusha
inc
or
leave
sub
sub
jnp
ficom
idiv
into
cdq
call
xor
and
jmp
les
cmp
imul
fiadd
jo
and
adc
mov
sahf
mov
cmp
arpl
inc
loopne
nop
ss
mov
arpl
sbb
mov
mov
call
scas
rcl
cli
cs
cwde
push
pop
pop
add
mov
and
sbb
add
jle
or
or
pop
cmp
mul
dec
push
push
pop
into
push
fidivr
test
or
xor
cvtdq2ps
push
xchg
popa
adc
add
xchg
push
jae
into
cmp
stos
inc
mov
jnp
mov
push
and
mov
pop
out
lock
in
cmc
call
xor
and
mov
mov
outs
fld
dec
jnp
gs
(bad)
loope
jo
ds
inc
inc
adc
aas
and
jecxz
sbb
pop
mul
sbb
mov
outs
xor
push
ror
xchg
ret
mov
sbb
or
in
push
(bad)
out
push
cli
mov
cmp
cs
ds
dec
int
xor
mov
mov
mov
pop
push
icebp
xor
add
and
inc
mov
aas
ret
xchg
retf
dec
sbb
jp
cmps
mov
stos
mov
sbb
sahf
iret
mov
lock
lock
pop
outs
xchg
ds
sbb
into
adc
adc
xor
dec
or
shr
xor
and
add
gs
pusha
push
adc
adc
outs
pop
jle
dec
outs
pop
mov
test
por
or
popa
rol
iret
adc
(bad)
xchg
sub
sub
into
or
jo
les
add
inc
jo
mov
out
stos
(bad)
retf
xor
push
push
loopne
pop
das
sbb
push
dec
jmp
scas
dec
xor
daa
push
(bad)
mov
and
shr
dec
lock
loope
test
pop
lds
push
mov
popa
scas
out
inc
xor
mov
movs
(bad)
outs
ror
xchg
test
int3
nop
fwait
xor
pop
add
mov
jg
or
ror
paddd
cli
push
pusha
push
shr
outs
das
cmp
xchg
mov
call
adc
ss
mov
(bad)
fimul
ret
xchg
retf
lods
shrd
fdivr
pop
sti
scas
scas
inc
add
mov
sahf
mov
jle
mov
fnstsw
(bad)
dec
cmps
push
into
gs
in
push
jne
lods
xchg
adc
inc
or
ds
dec
dec
dec
mov
push
test
mov
scas
out
outs
adc
outs
rol
ins
je
ret
out
pop
out
scas
ror
(bad)
and
push
xlat
inc
test
shr
dec
jne
mov
nop
ds
(bad)
or
xor
fsubrp
fist
jb
lahf
stos
jnp
jle
dec
push
aad
ficom
xchg
sub
cwde
and
xor
adc
lock
cwde
out
in
add
repnz
or
inc
xchg
test
xchg
cwde
push
sub
cld
add
fsubr
inc
cmp
les
dec
movs
imul
add
cwde
ficomp
add
idiv
ds
add
pop
test
sbb
or
mov
push
arpl
popf
into
mov
jp
or
xlat
add
sbb
add
pop
data16
adc
(bad)
mov
jb
inc
fsubr
mov
pop
jnp
loopne
aam
or
inc
nop
mov
jge
xchg
jo
mov
pop
pushf
loopne
rol
sbb
mov
iret
std
retf
cmps
cmovo
xchg
xchg
xchg
push
hlt
push
jge
movs
rcr
push
jg
cmp
add
mov
and
adc
stos
push
mov
and
rsm
es
lock
xor
clc
add
push
or
js
xchg
out
inc
inc
cmp
sub
mov
pop
lods
mov
mov
loopne
ror
out
push
mov
inc
sti
push
jmp
fwait
xor
rcr
movs
test
pop
push
jmp
cmp
pop
pop
push
mov
ins
call
and
rol
sbb
xchg
jbe
or
scas
inc
into
jo
sub
fmul
adc
pop
test
outs
sub
push
(bad)
out
inc
inc
jmp
inc
call
dec
ror
imul
idiv
jns
fs
gs
(bad)
retf
out
dec
or
out
pusha
jg
or
lods
cmps
xchg
call
retf
add
inc
adc
xchg
push
adc
and
shl
xchg
out
cmovnp
sub
push
jle
mov
adc
jo
sar
rol
clc
ror
mov
icebp
mov
bound
mov
inc
into
sti
mov
scas
add
push
outs
pop
cmp
sbb
or
pop
sub
mov
or
add
sahf
fbstp
mov
dec
movs
imul
outs
sti
mov
mov
and
mov
mov
in
pop
jnp
or
adc
xor
dec
jbe
sub
or
cmc
push
(bad)
and
add
push
cdq
cmp
sbb
sub
mov
sbb
sub
popf
dec
out
push
aad
or
(bad)
push
fmul
ror
xchg
aam
cmps
test
mov
mov
daa
push
int
dec
sti
pop
pushf
daa
fwait
cmp
fisttp
test
xor
push
push
inc
into
jo
adc
inc
sub
adc
dec
sbb
repnz
in
arpl
repz
mov
mov
(bad)
and
int
test
jecxz
xchg
xchg
or
stos
scas
mov
pusha
scas
fwait
mov
sub
div
or
mov
(bad)
dec
out
mov
into
and
fdivr
int
and
and
dec
aam
mov
retf
ret
out
and
cmps
sub
sub
mov
(bad)
mov
jle
push
lock
or
stos
(bad)
xor
cmps
out
mov
and
cmp
mov
aam
xlat
dec
mov
sub
mov
push
ficom
out
dec
arpl
sahf
inc
lock
movs
stos
mov
jl
sbb
push
or
popa
jecxz
mov
(bad)
mov
inc
sub
adc
jmp
arpl
aad
or
xchg
fistp
fdiv
fmul
xchg
jne
sub
xchg
xor
jns
lods
imul
mov
xor
and
test
jge
mov
leave
into
in
rcr
pop
adc
int
jo
mov
adc
ret
xor
rcr
mul
into
cmc
cs
hlt
adc
es
ds
inc
cli
loopne
imul
and
arpl
movs
aaa
mov
dec
mov
scas
out
mov
aaa
xor
sub
jle
dec
btc
jl
pop
loop
repnz
adc
ss
frstor
fistp
fdivr
rcr
sar
out
nop
mov
sub
inc
cs
sub
jno
(bad)
test
jp
adc
pop
pop
jle
jnp
sbb
cmp
cmp
fstp
adc
in
xchg
cmp
jmp
mov
mov
das
cmp
jno
pop
dec
jge
imul
adc
movs
jge
jnp
dec
cmp
test
inc
retf
jmp
mov
gs
mov
cmps
icebp
scas
loopne
aad
xor
lds
into
jno
pusha
and
je
stos
xor
ss
leave
pop
adc
push
inc
out
(bad)
or
popa
cmc
fld
and
jne
shl
push
(bad)
out
repnz
cmps
jno
nop
scas
call
fisubr
mov
pop
mov
cs
loope
test
cwde
jne
pusha
push
xchg
outs
clc
dec
push
outs
xchg
mov
jg
mov
pop
div
inc
mov
js
stc
out
call
cmp
cmp
mov
pop
ins
rcr
or
pop
adc
cli
mov
push
inc
mov
and
das
cmps
bound
dec
and
jp
pop
pop
xchg
retf
test
gs
int3
inc
inc
sub
fidiv
cmps
mov
rcl
repnz
push
fidivr
mov
fxch
enter
aas
sbb
sbb
rcl
rol
mov
pusha
clc
cmc
sti
add
dec
fsubr
mov
mov
icebp
jmp
mov
xchg
push
mov
inc
dec
iret
sahf
and
setge
ja
ds
push
cmc
pop
enter
sbb
jo
pusha
inc
push
(bad)
dec
(bad)
and
jle
or
add
in
scas
cmp
push
scas
cmc
sti
push
outs
rcr
rol
ss
in
pop
or
stos
cmp
add
arpl
iret
pop
in
aaa
sar
dec
jne
mov
push
repnz
mov
mov
or
call
popa
jecxz
mov
ret
movs
inc
outs
std
dec
push
mov
jl
jne
sub
mov
cmp
jne
fild
ins
pop
xchg
imul
inc
shr
mov
cmps
(bad)
sbb
cwde
mov
fisttp
adc
loopne
aad
jg
jg
mov
mov
and
push
xor
gs
das
mov
dec
cs
jnp
icebp
jae
stc
out
push
loop
ret
xor
out
mov
xchg
sub
pop
loopne
nop
arpl
dec
fnsave
push
inc
jne
or
ins
pop
mov
jmp
and
loopne
loopne
aad
fsub
arpl
inc
jo
and
xlat
cdq
sahf
jbe
xor
mov
dec
push
push
mov
or
adc
std
xchg
push
jg
xor
inc
icebp
(bad)
popa
or
inc
js
sbb
or
fcom
and
and
jmp
lahf
stos
push
adc
push
mov
pop
sub
ficom
rol
xchg
rcr
add
fistp
or
push
adc
add
stos
scas
inc
scas
pop
mov
loopne
pop
aas
cwde
mov
xchg
lock
mov
int
scas
and
xchg
xor
mov
push
xchg
cmp
add
sub
lods
jae
and
std
hlt
push
sbb
and
jecxz
(bad)
cmp
xor
sub
jg
mov
push
imul
mov
mov
push
ret
stos
push
mov
pop
cmps
xchg
mov
inc
jnp
fsubr
(bad)
(bad)
cdq
mov
mov
inc
shr
and
dec
sbb
xchg
out
mov
popf
xchg
stos
mov
push
adc
pop
and
fwait
ss
push
and
and
and
ins
call
jnp
rcl
cmp
das
fcmovne
xlat
fdiv
hlt
dec
out
mov
jecxz
(bad)
dec
repz
sub
sub
sub
mov
inc
int
cmp
or
icebp
adc
ret
cdq
push
test
inc
int3
jae
xchg
out
je
mov
pop
fs
mov
jbe
mov
cmps
movs
xchg
push
int
cmp
or
adc
call
ds
cmp
mov
lahf
out
aad
popa
ds
sbb
repnz
adc
add
repz
(bad)
rcr
jnp
imul
jo
pusha
pop
ins
dec
jmp
adc
mov
dec
les
mov
movs
push
dec
mov
scas
cwde
push
and
out
sbb
es
jle
adc
mov
inc
jno
lock
cli
fwait
in
repz
and
lock
fnsave
pop
mov
bound
jno
and
call
adc
mov
sti
(bad)
sbb
xchg
mov
iret
and
push
(bad)
fcom
int3
inc
xor
(bad)
adc
xchg
repz
sbb
add
shr
sti
add
push
mov
inc
cmc
imul
inc
jge
cmc
(bad)
fimul
scas
gs
cmp
add
sar
lock
dec
mov
repz
fwait
xor
sti
pusha
xchg
jecxz
xchg
add
jmp
mov
gs
call
in
(bad)
sbb
rcl
xor
rol
repnz
lds
mov
les
cmp
fdivr
jle
dec
mov
repnz
xchg
lock
jmp
adc
and
adc
add
fisubr
sar
dec
std
add
(bad)
cmc
or
push
push
push
cmp
cmps
pop
out
(bad)
int3
outs
out
xchg
xchg
xchg
(bad)
sbb
adc
or
adc
fidivr
(bad)
(bad)
sub
test
shl
mov
dec
xchg
in
hlt
jae
xchg
mov
out
loop
iret
and
xchg
repz
pop
mov
mov
sub
jne
iret
mov
cmp
loopne
push
or
fs
or
test
out
retf
inc
(bad)
(bad)
push
(bad)
int3
(bad)
jecxz
jge
mov
bound
push
cmp
or
and
and
outs
xor
retf
sbb
mov
mov
push
out
add
inc
adc
push
mov
ja
and
push
jbe
pop
jo
adc
cmp
inc
xchg
xor
add
arpl
stos
cs
cmc
sub
cmps
dec
fstp
sub
stc
mov
push
leave
inc
arpl
push
jp
jne
enter
movs
cmp
dec
shr
(bad)
mov
cld
jns
loop
or
cmp
add
mov
lock
movs
or
push
out
ds
fdivp
fld
lahf
mov
pop
sbb
cmp
and
push
loop
pop
xchg
cmpxchg
mov
mov
inc
mov
in
pop
sar
cmp
fcomp
out
cmp
inc
xor
mov
adc
pop
(bad)
fbstp
inc
sbb
shl
sub
mov
mov
ficomp
and
add
jbe
add
adc
pop
or
fmul
adc
pop
xchg
adc
mov
daa
rcl
shr
mov
aad
jg
cmp
test
adc
jmp
pusha
cmp
mov
aad
cs
sub
scas
adc
lods
cmps
jno
pusha
out
inc
add
iret
mov
dec
movs
cdq
mov
loop
pop
test
adc
jne
dec
mov
call
dec
sbb
loope
nop
jle
and
push
pop
sti
(bad)
xor
retf
dec
outs
hlt
jle
sbb
fisttp
fimul
mov
ins
jno
xor
xor
mov
pop
icebp
ss
nop
js
out
je
adc
leave
fbld
push
xor
out
xor
adc
dec
sbb
mov
es
hlt
mov
(bad)
add
mov
mov
call
cmps
das
xchg
test
lock
cs
nop
icebp
pop
pop
add
mov
mov
pushw
sahf
mov
or
or
nop
movs
cmp
push
data16
jmp
mov
cli
mov
hlt
shr
aas
cmps
mov
loopne
mov
sbb
sbb
dec
stos
repz
test
jo
pusha
stos
out
push
inc
sub
dec
jle
mov
sbb
js
adc
pop
inc
es
fdivrp
scas
sbb
retf
enter
shr
mov
lea
push
js
mov
clc
pusha
cmp
xchg
jmp
cmp
push
dec
xchg
mov
push
jb
pop
add
jo
inc
scas
xchg
sub
rcr
cs
(bad)
aam
and
push
ss
test
test
mov
sub
ret
fs
xchg
out
gs
dec
sar
and
pop
cmp
daa
xor
pusha
inc
xor
xchg
mov
leave
sub
sub
retf
outs
xlat
les
(bad)
(bad)
movs
xor
fwait
add
xchg
(bad)
xor
out
outs
xlat
add
dec
adc
les
ret
jne
fcomip
jmp
sbb
ins
ficomp
imul
and
outs
pop
cdq
push
mov
iret
fild
std
sti
jne
push
add
adc
push
mov
(bad)
pop
retf
pusha
jmp
jmp
sub
mov
mov
sbb
cwde
mov
cld
dec
inc
push
jle
dec
test
mov
xor
stc
adc
and
pop
test
and
sbb
(bad)
hlt
xchg
sub
or
int
std
fistp
xlat
cmp
sbb
cmp
shl
inc
imul
sbb
scas
and
add
pop
push
and
pop
in
(bad)
sbb
popf
scas
gs
cmp
ror
jle
mov
adc
imul
mov
adc
add
cmps
push
sub
fidiv
mov
lea
ret
lock
mov
in
shl
mov
into
(bad)
jge
imul
out
or
enter
mov
cwde
sbb
pop
fst
out
lock
add
jo
pop
scas
inc
push
add
xor
mov
jmp
xchg
jmp
sub
in
xor
int
adc
or
jmp
add
push
dec
push
jo
fcomi
mov
jmp
xchg
cmp
cmc
test
jns
loopne
aad
or
mov
retf
cld
mov
scas
cld
mov
fs
xchg
lea
out
cs
or
push
push
and
(bad)
sub
jo
popa
(bad)
push
out
add
iret
sahf
fadd
cmp
hlt
std
lea
push
dec
out
pop
jp
inc
gs
sub
stos
sahf
xor
das
xchg
movs
cmps
enter
js
jmp
inc
push
out
inc
mov
test
pop
movs
test
leave
psubusb
mov
adc
jne
dec
mov
jecxz
stc
jbe
dec
sbb
loope
nop
jle
and
push
pop
sti
(bad)
xor
retf
dec
outs
clc
jle
sbb
fisttp
fimul
mov
push
xor
mov
adc
outs
das
imul
xor
cs
sub
jmp
xor
adc
jnp
sub
pop
xlat
fisub
mov
mul
adc
and
iret
push
sub
rcl
pop
or
mov
out
cmp
addr16
lea
jns
push
xor
sar
or
(bad)
cs
lock
fimul
mov
into
push
mov
and
das
xchg
test
lock
cs
dec
icebp
pop
pop
add
mov
into
lahf
inc
push
sbb
pop
outs
test
or
inc
add
push
push
or
aam
stc
cli
mov
pop
rcl
loopne
mov
stc
push
loopne
dec
stos
repz
test
jo
pusha
push
out
push
inc
sub
test
les
js
xor
pop
pop
adc
inc
es
ficom
scas
mov
sahf
enter
rol
movs
lea
push
les
mov
mul
adc
addr16
and
fsub
push
mov
ss
scas
gs
sub
sar
stos
pop
(bad)
aam
and
push
aad
and
test
test
retf
iret
ja
int
xchg
jmp
jp
push
pop
xor
call
pusha
inc
cmp
leave
sub
sub
sub
les
and
aam
cdq
call
xor
xchg
xchg
cs
dec
adc
and
sbb
xchg
in
jmp
mov
sub
xchg
imul
divps
repnz
fdiv
(bad)
adc
cmp
jg
(bad)
push
adc
and
ret
std
cli
pop
out
scas
add
stc
and
inc
inc
cli
cld
ret
push
pop
and
xchg
jle
dec
shl
or
adc
inc
jno
cmp
add
and
es
aam
les
cmova
xor
fs
push
int3
mov
xlat
and
cmc
iret
mov
inc
rcr
mov
mov
mov
add
(bad)
call
or
xor
jns
fwait
lea
push
repnz
(bad)
je
lahf
aaa
lds
dec
mov
pop
add
mov
into
std
fisub
push
jmp
jae
sar
lods
push
mov
sub
sub
retf
iret
mov
cmp
xor
xlat
fsub
mov
loopne
sbb
cmp
mov
nop
mov
ret
iret
jno
(bad)
and
mov
xchg
sbb
dec
mov
pop
gs
mov
xor
jne
fcom
cmps
mov
cmp
cmps
add
sub
push
xchg
sti
push
loop
iret
sub
ficom
das
fs
lods
mov
add
jmp
call
lock
movs
lahf
mov
es
push
je
iret
pop
push
jne
rol
mov
fstp
cmp
fdivr
add
scas
in
xor
add
cs
xor
and
cmc
icebp
retf
out
push
push
mov
pop
fld
mov
mov
mov
pop
call
pmuludq
sub
pop
int
into
sub
and
rol
icebp
gs
mov
leave
dec
xchg
dec
in
or
retf
fwait
(bad)
fwait
and
aam
mov
cmp
push
or
test
push
sbb
movs
fist
ins
adc
into
cmp
mov
lock
push
call
lock
scas
ror
and
jno
jmp
add
loopne
mov
or
test
add
add
stos
sti
inc
cli
daa
sbb
cmps
or
xor
test
retf
mov
push
retf
fs
test
push
pop
ja
ds
xor
(bad)
xchg
push
(bad)
and
jno
jo
nop
movs
or
push
mov
mov
into
jo
and
xchg
retf
iret
sahf
fadd
xchg
stc
jbe
fisttp
push
and
mov
jo
fimul
scas
(bad)
jge
cmp
inc
lock
cmp
add
jo
and
add
mov
adc
dec
pusha
jmp
in
jp
dec
adc
in
nop
mov
(bad)
pop
mov
outs
sar
fistp
xchg
pop
inc
jns
call
push
aas
test
push
adc
jne
retf
sub
cmp
cs
adc
and
mov
push
add
lahf
ja
pop
jns
and
add
std
(bad)
or
test
in
(bad)
fwait
inc
mov
mov
lock
or
mov
xor
xor
adc
push
xchg
scas
xor
or
sbb
adc
pop
push
rcr
int
cmc
ds
adc
jecxz
repz
or
hlt
pop
mov
pop
pop
push
add
cwde
cs
add
lahf
fbstp
cmp
dec
mov
loopne
outs
(bad)
add
cmp
mov
cwde
jo
in
xchg
mov
lods
jnp
cmp
mov
push
sbb
pop
loop
jnp
mov
mov
fwait
je
xor
adc
sbb
(bad)
aam
and
sub
inc
jno
pusha
and
iret
ja
cmp
test
aas
mov
jbe
pop
xchg
cs
into
mov
xor
iret
lahf
fsubr
nop
dec
test
loop
outs
mov
push
sbb
push
adc
daa
enter
shr
imul
xchg
jg
dec
push
out
jg
xor
pop
pushf
imul
mov
pop
cmp
int3
out
or
aas
xlat
sub
pop
pop
out
cdq
sbb
jne
and
sbb
dec
ins
test
push
xchg
cmp
cs
sbb
adc
or
pusha
inc
addr16
sti
or
(bad)
outs
xchg
jb
dec
sbb
jae
popa
lock
add
jecxz
js
mov
and
pop
jge
movs
cmp
dec
sub
add
jbe
and
retf
xor
aad
icebp
xchg
adc
ret
mov
test
fnsave
scas
ja
cdq
jae
pushf
jmp
out
jno
xchg
lds
iret
or
inc
dec
add
pusha
scas
popf
ret
dec
shl
adc
and
cmc
aam
pop
mov
and
aas
and
je
push
out
cmp
sbb
ins
jmp
sub
jo
lahf
push
adc
cld
in
jmp
xor
mov
xor
les
test
jbe
fstp
xor
out
enter
and
or
outs
ds
out
sub
pop
xor
mov
and
cmp
aas
xchg
aas
lds
dec
xchg
in
stos
inc
mov
sbb
mov
rol
not
inc
test
dec
mov
ins
dec
cmc
or
rcr
push
jae
or
mov
retf
push
add
sub
shl
mov
icebp
mov
in
push
add
xchg
test
mov
(bad)
stos
cmp
sub
and
mov
nop
sub
xchg
or
fild
inc
movs
jne
lahf
inc
push
out
jne
out
and
pop
push
ret
lds
cli
lds
fadd
xchg
inc
mov
adc
data16
push
jb
jg
ret
lock
int
out
mov
cmp
popa
pop
adc
fs
sub
inc
ret
lock
aas
ja
(bad)
or
xchg
mov
sub
add
aam
inc
addr16
lods
sahf
shl
sub
lock
jmp
mov
and
mov
mov
jae
lea
dec
sbb
push
and
cmp
cmp
sti
dec
(bad)
cmp
fs
ror
loopne
adc
nop
push
dec
mov
jno
or
adc
and
imul
call
and
adc
jge
lahf
and
cld
fadd
and
xchg
add
shr
(bad)
std
push
pop
push
pop
mov
inc
fs
jmp
mov
pop
and
aam
ror
or
js
and
push
dec
stos
push
adc
sub
cmp
stos
pop
out
daa
dec
mov
aad
cs
rcl
test
jmp
js
sub
out
add
sar
(bad)
imul
xor
(bad)
out
mov
push
pusha
mov
mov
sub
jns
lods
imul
or
sbb
pop
mov
inc
jb
(bad)
hlt
pop
cmp
dec
(bad)
loop
or
push
rcl
mov
stos
push
jmp
es
fistp
jno
mov
mov
sub
xchg
mov
nop
arpl
out
pop
mov
into
adc
mov
ins
sahf
pop
jle
mov
sbb
rcl
outs
and
call
xchg
adc
pop
sahf
jae
shl
aas
or
(bad)
movs
rcl
push
scas
arpl
cmps
jmp
jae
rol
xor
retf
push
xchg
mov
lea
dec
movs
iret
(bad)
adc
jg
xor
ins
outs
rol
push
mov
pushf
pop
dec
mov
sbb
pop
mov
jnp
sbb
push
xlat
jo
lahf
inc
loopne
xlat
add
cmp
hlt
clc
ret
ret
fsub
out
mov
loope
inc
inc
add
in
add
das
idiv
add
pop
es
outs
add
push
popf
out
pop
sub
inc
sbb
adc
sub
imul
jnp
icebp
mov
in
inc
jmp
int
into
lahf
cmc
out
push
add
shl
xor
sbb
cwde
mov
stos
test
add
sbb
and
sbb
inc
dec
jnp
mov
dec
or
cli
test
add
dec
mov
pusha
neg
mov
gs
fsubr
hlt
inc
outs
mov
movs
fstp
cmc
sbb
clc
sbb
lock
fsubr
in
dec
mov
test
loope
into
lods
add
and
xor
popf
xchg
into
pushf
dec
xor
iret
movs
mov
jo
mov
cmp
and
pop
or
lds
retf
add
adc
daa
into
fs
popa
clc
inc
mov
aam
cmp
dec
cmp
jp
repnz
popf
sub
into
cwde
fimul
jmp
mov
adc
and
add
clc
sbb
ins
jl
jo
jmp
push
or
pop
xchg
xor
fcomp
push
ror
jnp
out
push
lods
out
and
retf
inc
or
mov
mov
(bad)
rcr
xor
in
cdq
cld
jae
dec
out
scas
pop
jmp
and
or
mov
and
lds
cmp
out
inc
jne
iret
gs
and
add
movs
enter
cmp
ins
and
aam
(bad)
adc
mov
inc
mov
ret
or
jge
pop
lods
ins
into
lds
mov
jae
mov
and
jno
fidiv
das
or
paddusw
inc
jp
sbb
sub
into
call
and
out
push
xor
xchg
popf
mov
(bad)
mov
into
mov
out
in
add
cmp
and
jne
fist
add
mov
nop
xor
add
retf
xchg
and
fld
jne
and
jle
jnp
pop
cmc
fimul
jo
jecxz
add
fld
pop
jle
lea
pop
loopne
arpl
add
popf
enter
leave
cmps
jo
pusha
leave
adc
and
cmp
loope
nop
mov
inc
jo
not
jmp
jno
shl
and
sbb
cmp
test
jbe
into
jge
jmp
push
lock
xor
push
inc
jae
in
xchg
call
xchg
fisttp
xor
lock
pop
ds
pause
mov
pop
push
add
addr16
pop
stos
adc
xor
sar
mov
and
sbb
int
push
(bad)
mov
adc
cdq
scas
fs
add
shr
dec
push
pcmpgtw
cmp
sbb
std
push
jle
mov
cwde
fcom
cwde
mov
xchg
or
loope
fs
push
sahf
jno
mov
repz
(bad)
sahf
push
xchg
xchg
cmc
xchg
in
push
fmul
scas
jmp
mov
push
push
push
rcr
and
and
jle
out
push
cmp
inc
cmps
(bad)
(bad)
fsub
push
sahf
sbb
stos
mov
(bad)
mov
dec
pop
xchg
sahf
push
push
mov
pusha
jmp
xor
dec
mov
loope
shl
push
adc
sbb
call
cmp
and
hlt
jne
or
dec
or
cmp
mov
add
cmp
adc
movs
mov
loope
aad
add
(bad)
adc
xor
push
inc
inc
sbb
jge
int
retf
int3
adc
dec
ja
sub
stos
push
add
and
fstp
and
jns
or
sahf
test
push
pop
pop
cld
add
out
xchg
sub
sub
pushf
and
mov
sti
add
popf
scas
pop
adc
or
out
repnz
stos
frstor
cdq
mov
xlat
ins
data16
lock
imul
xchg
test
push
jmp
and
out
xchg
sahf
iret
xor
mov
pop
lock
imul
push
retf
out
add
jo
cmp
inc
fisttp
or
jle
les
sbb
js
fiadd
movs
inc
imul
fidiv
adc
stos
outs
xchg
mov
adc
xor
(bad)
fsub
retf
xchg
inc
in
mov
push
fidiv
fcmovne
xchg
das
mov
cmps
icebp
scas
mov
inc
cmp
cwde
movs
or
ds
fwait
cli
iret
mov
pop
jecxz
xchg
xchg
xchg
lds
sbb
ja
pop
inc
push
cmc
adc
adc
mov
inc
sbb
or
stc
adc
aam
pmullw
fs
mov
xor
mov
dec
je
fild
scas
sub
mov
aad
lds
pushf
je
out
adc
int
xchg
adc
xor
cmp
xchg
stc
push
xchg
xchg
test
out
lock
jge
into
daa
mov
jno
lds
xchg
dec
scas
(bad)
imul
add
cld
mov
jb
ficomp
(bad)
push
(bad)
pop
mov
bound
xchg
inc
mov
(bad)
(bad)
dec
and
repz
(bad)
scas
call
gs
push
mov
sub
adc
push
mov
ja
aaa
xor
test
pop
movs
arpl
mov
dec
jae
movs
out
ror
jecxz
out
aam
pop
pop
sahf
or
add
or
icebp
inc
push
dec
out
mov
cs
not
fild
retf
repz
ja
cmp
bound
push
xchg
ret
adc
mov
int
(bad)
xor
movs
movs
aad
cmp
push
mov
ds
mov
dec
mov
jnp
xor
rol
sahf
push
inc
xor
inc
addr16
sahf
clc
outs
xchg
cmc
outs
mov
mov
retf
inc
push
sahf
mov
(bad)
pusha
(bad)
out
push
mov
adc
sub
sbb
mov
outs
imul
ins
jno
jne
ins
ds
addr16
jbe
add
adc
outs
adc
in
xchg
test
mov
mov
jecxz
aad
clc
mov
cld
loope
test
cli
jle
div
push
ficom
ins
out
mov
sub
add
fcomp
or
mov
push
dec
dec
mov
into
sub
test
adc
adc
xchg
aad
ror
(bad)
sub
jnp
add
sti
and
out
and
mov
das
test
lock
cs
arpl
push
dec
popf
jno
xchg
mov
fs
mov
gs
cs
enter
call
out
push
fiadd
xor
out
mov
sahf
xchg
sub
pop
loopne
nop
arpl
dec
(bad)
push
(bad)
mov
jne
or
jne
mov
scas
and
xchg
push
lea
pop
loopne
in
ds
fsub
arpl
or
inc
inc
jo
and
xlat
xor
test
xor
add
pop
sub
xor
xchg
jmp
inc
ret
inc
imul
cs
and
cmc
pop
enter
sbb
jo
pusha
inc
push
(bad)
dec
(bad)
and
jle
or
add
cmp
les
repz
jns
ror
rol
ss
in
pop
or
stos
cmp
sbb
fisub
adc
out
pop
lock
sar
dec
jne
mov
push
out
(bad)
mov
mov
or
sub
aad
pop
pusha
jecxz
mov
mov
and
push
mov
js
jne
sub
mov
cmp
jne
fisubr
or
imul
inc
fucomp
push
mov
aas
(bad)
in
jmp
cli
imul
ror
loope
fs
addr16
mov
in
lods
popf
sti
fcom
outs
fcom
mov
pop
jle
mov
test
inc
pop
mov
mov
push
daa
pop
inc
add
mov
cmp
mov
pop
imul
or
jbe
sbb
jmp
adc
outs
popf
adc
dec
mov
cld
push
daa
ins
ja
xor
inc
jp
add
shl
rcr
cmc
mov
cmc
mul
adc
cli
test
mov
inc
inc
dec
jle
fisubr
adc
pop
mov
test
int3
pop
mov
push
daa
mov
push
sub
mov
sbb
scas
xlat
cmc
rol
shl
(bad)
icebp
dec
xchg
lock
fistp
inc
mov
mov
in
cmp
enter
dec
(bad)
pop
xor
test
scas
mov
stc
and
ret
dec
mov
adc
mov
mov
lds
push
xchg
mov
mov
out
push
ds
mov
pcmpeqd
dec
mov
mov
push
into
and
inc
(bad)
xor
push
or
movs
popf
pop
sbb
mov
inc
clc
fisub
out
jle
mov
mov
scas
das
xor
test
jnp
test
push
stos
mov
xor
add
push
cmp
dec
sbb
pop
nop
ds
dec
sub
mov
xor
stos
outs
push
jle
dec
sqrtps
nop
rol
adc
cmp
adc
gs
mov
xchg
mov
pop
or
inc
cmp
push
push
sub
jmp
scas
(bad)
jl
pop
sbb
shl
and
test
and
lods
jp
push
add
jle
test
rol
scas
inc
xor
shr
inc
stos
mov
lock
or
ror
cmp
movs
sub
sti
(bad)
pusha
scas
clc
xor
retf
fs
daa
aad
cmp
add
movs
pop
mov
cmp
and
mov
sahf
bound
pop
imul
or
out
push
scas
inc
mov
push
add
adc
cdq
dec
dec
pop
movs
in
nop
imul
mov
add
ins
adc
aad
xor
mov
mov
mov
(bad)
hlt
dec
cmc
sub
retf
mov
xchg
pusha
pop
mov
shr
mov
and
mov
test
ficomp
rcr
dec
sbb
jg
out
dec
cmp
movs
into
sti
sbb
rol
jle
mov
cld
loope
test
aam
hlt
div
push
ficom
ins
out
mov
sub
add
js
jmp
add
sbb
js
adc
adc
xchg
mov
jg
mov
pop
(bad)
repnz
mov
dec
jmp
fistp
sar
loopne
jo
or
pop
adc
cli
mov
push
inc
mov
and
das
(bad)
bound
dec
and
jp
pop
mov
mov
xchg
cwde
fild
nop
(bad)
in
cmp
mov
cs
loope
test
cwde
jne
pusha
push
xchg
outs
clc
dec
jg
fs
cs
in
cs
jnp
lock
stc
out
push
push
inc
ret
xor
out
mov
sahf
xchg
sub
pop
loopne
nop
arpl
dec
(bad)
push
(bad)
clc
into
jne
or
jne
mov
ss
xchg
push
lea
pop
loopne
js
aad
fsub
arpl
jo
and
xlat
xor
test
xor
add
pop
sub
cmp
xchg
jmp
inc
ret
inc
imul
sub
push
cmc
pop
enter
sbb
jo
pusha
inc
push
(bad)
dec
(bad)
and
jle
or
xor
and
xchg
fisub
cmc
sti
push
outs
shl
rol
ss
in
pop
or
stos
cmp
add
fisub
adc
out
pop
lock
sar
dec
jne
mov
push
out
(bad)
mov
mov
or
cmp
mov
lock
push
mov
fsubr
jne
sub
mov
cmp
jne
fisubr
dec
pop
xchg
imul
inc
fsubr
push
mov
cmps
mov
xchg
mov
fcmovnbe
outs
push
ror
aad
ins
push
(bad)
jno
xor
mov
jne
push
dec
retf
and
or
cmp
leave
mov
mov
es
(bad)
jmp
mov
out
popf
jle
mov
outs
arpl
xchg
add
mov
sub
add
fist
pmullw
and
jl
clc
ret
push
scas
test
jno
cmp
push
test
outs
push
xor
adc
fisub
mov
enter
iret
fwait
mov
dec
adc
add
aad
lds
into
popf
sub
pop
xor
and
adc
(bad)
push
popa
fdivr
mov
dec
cmps
cwde
out
nop
call
aam
(bad)
push
cdq
ja
pop
mov
repz
mov
jle
dec
sub
cmp
int
pushf
and
out
mov
ins
xchg
and
rol
jle
mov
les
imul
fisub
bound
out
shr
into
cwde
shr
pop
movs
cwde
cmp
cmp
cmp
out
lea
into
(bad)
shl
shr
sbb
shr
or
sub
mov
retf
enter
dec
popf
pmullw
nop
shr
hlt
out
out
inc
mov
movs
inc
xor
ds
xor
imul
pop
mov
jae
arpl
inc
inc
dec
aam
xor
mov
jl
out
push
mov
inc
mov
sub
mov
ins
xchg
pop
sbb
or
pop
cs
(bad)
or
mov
xor
fsubp
or
inc
cld
shr
enter
ror
xchg
inc
dec
ss
mov
cmp
cmp
xor
xor
(bad)
sar
dec
(bad)
xlat
js
add
xor
inc
call
jmp
out
fcmovb
fnsave
stos
scas
cmp
xor
out
clc
xchg
push
jg
cmp
cli
push
inc
ror
or
push
aas
maxps
pop
clc
daa
iret
pop
dec
xchg
pop
adc
lahf
fst
aam
pop
dec
popf
dec
outs
add
cs
ds
push
sub
cmp
(bad)
fist
call
fmulp
push
and
xor
repz
loopne
or
or
push
ja
cmp
xchg
out
fisub
push
dec
jle
lahf
jnp
pop
ret
divps
icebp
sub
pop
addr16
test
cdq
sahf
ret
scas
jbe
xor
mov
enter
sbb
push
and
pop
mul
push
push
lea
(bad)
int3
jecxz
and
lock
mov
nop
xchg
push
xor
shr
scas
push
jge
mov
xchg
xchg
and
push
xchg
out
dec
retf
sub
rol
in
adc
mov
inc
jne
retf
mov
and
aas
ret
lock
sub
fiadd
out
shr
lahf
push
sbb
add
aam
gs
sar
xor
mov
std
or
(bad)
sti
(bad)
lahf
lods
sbb
loopne
sahf
sub
jne
or
into
mov
jne
(bad)
push
lahf
sub
bound
ror
mov
sub
cs
shr
dec
(bad)
adc
inc
pop
or
push
int
test
hlt
or
dec
call
push
data16
mov
(bad)
mov
ins
ss
push
(bad)
enter
test
sub
adc
outs
stc
xchg
inc
mov
xor
scas
movs
mov
mov
mov
jne
ins
in
cmp
(bad)
fst
or
ja
into
inc
fiadd
scas
add
add
pusha
lahf
xchg
xor
lods
ds
jge
into
jo
cmp
outs
enter
cmp
add
pop
movs
inc
sub
mov
mov
and
lock
and
sub
imul
sub
xchg
inc
dec
mov
retf
arpl
ins
ror
bound
jge
cmps
lock
sbb
mov
adc
mov
and
fdivr
fcom
test
lock
ins
rcr
ss
add
std
cs
idiv
xor
jb
shl
outs
mov
or
xchg
pop
in
dec
inc
dec
push
inc
push
retf
jns
mov
or
xor
(bad)
pop
hlt
cdq
stc
out
mov
sbb
dec
sub
push
dec
call
xchg
adc
push
lds
sub
retf
into
pushf
mov
push
or
jae
fdiv
ret
pop
mov
xchg
ds
sub
pusha
push
popf
js
out
(bad)
xchg
das
add
jns
rol
test
mov
mov
(bad)
fnsave
push
mov
lods
fisubr
bound
add
retf
rcl
and
xchg
inc
in
cmc
aad
in
out
imul
mov
sbb
cmp
mov
outs
cmp
sar
mov
nop
rol
mov
cwde
xor
aam
jne
mov
imul
imul
sbb
pop
mov
(bad)
add
sti
push
ins
call
sti
push
xor
movs
xchg
nop
fadd
jge
pop
outs
ja
(bad)
or
fdivr
std
push
je
adc
or
jge
arpl
sbb
imul
jb
out
push
retf
stos
jl
mov
mov
and
ror
repnz
and
out
stos
pop
scas
add
sub
mov
rcr
sbb
sbb
aad
ror
inc
mov
jo
bound
xchg
xchg
sar
xchg
push
mov
mov
lock
rcl
scas
aaa
xor
fimul
pusha
fidiv
es
loopne
ficom
pop
mov
mov
mov
dec
mov
sahf
mov
adc
loope
jl
or
push
push
and
(bad)
sub
jo
fcom
sbb
mov
rcl
imul
ja
data16
mov
movs
jo
xchg
mov
xor
and
xchg
test
lock
cs
fdiv
pop
pop
add
mov
jbe
inc
push
sbb
mov
or
or
nop
mov
in
push
push
ja
repz
push
stc
cli
mov
in
rcl
aas
cmps
mov
loopne
cmps
add
fs
stos
repz
test
jo
pusha
xchg
out
push
inc
sub
push
jle
mov
sbb
js
or
pop
inc
es
fsubp
scas
cmp
jmp
pop
sar
ror
mov
lea
push
mov
into
cwde
call
jmp
cmp
mov
push
ds
retf
add
jo
push
scas
outs
mov
sub
shl
into
pop
(bad)
aam
and
push
fsubrp
test
test
cdq
adc
add
iret
ja
int
xchg
test
jp
push
pop
sub
daa
xor
pusha
inc
es
leave
sub
sub
and
fisubr
les
sub
je
cdq
call
xor
fild
lds
cs
shr
push
dec
fist
inc
retf
and
adc
mov
jp
bound
xchg
iret
sbb
scas
(bad)
(bad)
xchg
in
sbb
or
arpl
test
cmps
jnp
or
movs
push
or
imul
inc
mov
scas
cld
retf
xor
sub
jle
mov
sbb
repz
and
xstore-rng
cmps
ret
fild
pusha
and
je
and
xor
pop
sbb
sub
xchg
popf
arpl
jle
and
jne
cmp
sbb
add
push
ds
enter
mov
pushf
fwait
jmp
adc
mov
sub
mov
xlat
aad
push
add
into
jo
sbb
out
out
mov
pop
adc
aam
pop
mov
mov
cmp
xor
add
jl
cmp
cli
mov
adc
sbb
aam
xchg
push
(bad)
xor
daa
mov
mov
push
rcl
sbb
es
jg
pop
(bad)
rcl
push
pop
mov
pop
loopne
sti
jle
mov
aas
dec
loopne
pop
das
or
pop
mov
fbld
jecxz
fimul
mov
and
cmc
sar
jp
dec
loope
jmp
dec
jmp
lea
mov
or
imul
shl
mov
inc
xor
mov
fldenv
and
aas
add
aas
xor
repnz
out
jo
inc
mov
ds
mov
sahf
stos
outs
cmp
add
mov
mov
out
xor
pusha
scas
fwait
mov
rcl
mov
rcl
aas
pusha
sub
sub
xor
cli
jmp
popa
int3
dec
push
retf
sbb
(bad)
icebp
inc
pop
pop
push
adc
inc
into
sti
fidiv
push
adc
int3
xchg
cmc
cmp
sbb
loopne
movs
rol
loope
and
or
pop
cld
mov
(bad)
fldenv
push
rcr
cmp
pushf
call
(bad)
fbstp
out
mov
xor
das
xchg
aas
dec
mov
call
icebp
mov
neg
cmp
scas
dec
pop
push
fild
adc
push
aam
cmp
dec
loop
push
push
push
or
out
pop
mov
fistp
pminsw
mov
dec
xchg
mov
xor
lea
iret
adc
xchg
mov
out
pop
mov
inc
push
mov
xor
scas
nop
inc
out
bound
add
rcl
lods
das
jns
adc
mov
jo
(bad)
add
(bad)
xchg
in
scas
push
mov
outs
xor
or
neg
xchg
mov
(bad)
mov
jmp
leave
cli
inc
xor
sbb
je
sbb
push
sbb
push
sub
and
fld
xchg
rcl
add
outs
xchg
int
mov
push
gs
xchg
jmp
sbb
dec
sbb
and
out
lods
mov
xchg
loope
stos
scas
push
or
dec
xor
sahf
outs
xor
imul
or
dec
out
loope
push
scas
push
clc
xor
inc
call
xchg
cmp
aas
dec
sbb
and
inc
mov
daa
adc
sahf
jge
adc
jg
mov
xchg
xlat
jo
dec
pop
mov
push
pop
mov
(bad)
fbstp
adc
push
iret
lahf
leave
mov
add
rcl
cmps
pop
out
mov
mov
scas
les
dec
ret
jge
and
sub
adc
jns
lods
ret
pop
adc
and
(bad)
mov
pop
sub
je
fs
hlt
neg
scas
repz
jo
lahf
push
out
inc
std
jae
arpl
xchg
sub
jnp
shl
fs
shr
sar
push
cmp
xchg
sub
mov
xor
pusha
fisub
clc
push
add
push
in
push
jmp
pop
ins
and
mov
(bad)
pop
or
in
and
inc
dec
int
and
pop
retf
aad
or
je
push
inc
std
push
sub
xor
and
push
out
jmp
add
cmp
shl
push
mov
daa
mov
lahf
push
push
inc
std
(bad)
iret
push
loopne
das
add
mov
jae
xor
and
popf
xor
add
ja
outs
outs
or
outs
mov
icebp
cmp
leave
mov
dec
out
dec
inc
xor
xchg
cmc
add
outs
mov
sub
mov
xor
repz
popf
jg
add
push
lods
das
jns
shl
push
in
out
mov
and
mov
xchg
fild
sub
jmp
dec
pop
sub
leave
outs
jmp
adc
xor
popa
and
das
repz
divps
hlt
loope
scas
scas
push
jmp
fiadd
fs
(bad)
mov
pop
retf
aam
loope
jo
add
mov
pop
pop
sar
xchg
push
sbb
popa
sub
fild
retf
retf
xchg
sbb
xor
or
dec
pop
mov
pop
ror
mov
xor
and
mov
into
xor
pop
jmp
add
mov
test
or
sub
jg
mov
pop
je
repnz
outs
pop
jge
ret
repz
lods
outs
xor
imul
sub
and
vfmsub213pd
adc
std
mov
fsubrp
xchg
sub
mov
loop
mov
icebp
hlt
mov
push
scas
jmp
bound
jbe
xchg
mov
mov
adc
aam
dec
icebp
mov
mov
xor
cld
int3
(bad)
sar
xor
fnsave
jo
(bad)
add
inc
mov
sub
add
movs
das
and
jg
cmp
inc
(bad)
xchg
in
scas
push
mov
in
outs
xor
dec
adc
sub
jo
or
call
push
and
pop
dec
mov
mov
arpl
cmp
pop
fild
add
pusha
jmp
cwde
xchg
sar
or
pop
add
outs
aas
imul
push
inc
xor
fimul
xor
jo
mov
mov
dec
add
aaa
and
adc
fbld
divps
rcl
not
scas
jmp
mov
jge
and
cmp
ins
das
outs
mov
icebp
std
xchg
scas
out
add
adc
pop
(bad)
ret
lock
scas
fnsave
test
push
fstp
mov
shr
and
aas
mov
nop
add
ds
sub
xor
and
cmc
add
push
pop
kmovw
jle
xchg
loope
sub
adc
xor
sbb
ret
icebp
mov
jle
xchg
loopne
retf
scas
(bad)
xor
and
adc
ret
mov
add
rcl
pop
pop
arpl
int
(bad)
push
popa
push
popf
mov
leave
scas
popf
repz
fucom
test
rol
push
fstp
mov
mov
shl
rcl
movs
das
xchg
ds
out
push
in
scas
mov
into
xor
adc
out
mov
(bad)
fild
call
dec
push
ret
mov
add
lods
std
retf
into
add
jg
mov
add
lock
repnz
dec
out
push
retf
add
sub
xchg
fild
sbb
ror
mov
loopne
mov
mov
mov
and
push
adc
xchg
sahf
shl
das
jg
scas
push
(bad)
jg
dec
sbb
mov
into
into
ds
(bad)
fnstcw
xchg
sar
or
xchg
movs
stos
outs
jle
packsswb
mov
mov
outs
rcr
dec
inc
clc
out
shr
xor
dec
sahf
in
gs
idiv
xor
pusha
jmp
and
cmp
pop
das
xchg
ds
out
ficomp
mov
fild
jno
ja
and
shr
aas
pusha
push
push
xchg
pop
out
mov
aaa
shl
popf
or
(bad)
sbb
cmpxchg
in
mov
les
test
pushf
push
xchg
xor
add
dec
adc
or
sbb
and
enter
adc
jno
test
add
nop
aas
movs
icebp
push
push
sub
jmp
ds
push
popa
and
icebp
mov
cmp
mov
push
stos
scas
push
gs
nop
fidivr
xor
lods
call
loope
mov
xor
dec
pop
dec
push
sbb
inc
daa
nop
inc
lahf
scas
stc
pop
dec
ss
lahf
ror
(bad)
ret
lock
cs
jg
inc
loope
cmp
mov
(bad)
and
and
sbb
loope
adc
fisttp
add
fiadd
sahf
pusha
sub
into
mov
pop
pop
mov
xchg
jmp
sbb
add
xor
xchg
push
xor
inc
mov
pusha
cmps
dec
pop
dec
dec
cmp
inc
daa
lods
xor
push
jb
addr16
dec
stos
outs
xchg
je
mov
mov
pusha
dec
dec
pop
dec
push
scas
dec
movs
movs
mov
push
loopne
iret
lahf
leave
mov
out
pop
das
jns
in
ret
sub
enter
lock
(bad)
sar
sar
les
push
or
jecxz
mov
fild
sahf
pop
mov
mov
(bad)
outs
aas
imul
mov
dec
inc
xor
pushf
scas
lock
(bad)
popf
repz
scas
pop
shr
xchg
icebp
inc
cmp
pushf
pop
mov
dec
out
xor
retf
or
rol
pop
or
and
mov
adc
adc
mov
scas
stc
pop
mov
xor
(bad)
das
jg
imul
(bad)
hlt
shl
iret
cdq
ds
push
in
cmp
xchg
rcl
or
out
sub
adc
xor
jno
sub
bound
cmps
mov
cpuid
loope
jo
mov
hlt
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
retf
pusha
stos
adc
add
xor
and
aam
les
pop
in
xchg
cmp
push
cli
inc
retf
fs
adc
add
xor
and
aam
les
pop
in
xchg
cmp
push
cli
inc
retf
fs
adc
add
xor
and
aam
les
pop
in
xchg
test
mov
movs
jmp
fs
adc
add
xor
and
aam
les
pop
in
nop
cmp
out
push
inc
jo
pusha
scas
adc
fild
xchg
cmp
loopne
jo
ror
loope
adc
pusha
scas
adc
and
push
in
jg
pop
mov
pop
in
sbb
mov
jne
dec
popf
push
pop
fsub
ins
lods
push
jo
cmp
(bad)
test
push
xchg
sub
fisub
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
std
inc
retf
arpl
mov
mov
push
mov
jecxz
push
inc
jo
pusha
scas
out
mov
and
jle
dec
lock
les
mov
mov
into
jo
and
push
mov
and
jle
or
pop
movs
cs
xor
push
mov
into
(bad)
fisub
adc
add
xor
ror
sbb
outs
les
mov
mov
into
xor
pusha
jmp
outs
sar
ror
pop
pop
cs
rol
adc
inc
into
xor
and
adc
retf
outs
xchg
jle
mov
sbb
cs
les
mov
mov
into
xor
pusha
push
adc
add
rol
movs
cs
xor
push
mov
into
jo
pusha
in
adc
and
cmp
mov
dec
mov
mov
into
jo
and
jae
arpl
jle
or
nop
jge
push
mov
mov
into
jo
and
push
std
inc
int
frstor
xchg
cmp
loopne
nop
ds
push
mov
mov
lea
popf
and
push
std
inc
int
sahf
and
cmp
mov
push
repz
mov
lea
popf
and
push
std
inc
int
frstor
xchg
cmp
loopne
nop
ds
dec
repz
jecxz
adc
and
push
mov
arpl
mov
mov
dec
mov
mov
into
jo
pusha
scas
adc
arpl
cmp
loopne
aam
or
push
jecxz
adc
and
push
mov
arpl
mov
mov
push
repz
jecxz
push
inc
xor
inc
int
sahf
and
cmp
mov
dec
repz
jecxz
push
inc
xor
pusha
scas
adc
add
xchg
cmp
mov
dec
repz
jecxz
adc
pusha
scas
push
std
add
sar
dec
mov
loopne
nop
ds
dec
mov
mov
lea
popf
and
push
std
add
xchg
cmp
mov
push
mov
jecxz
adc
inc
lea
popf
and
push
std
add
sar
or
nop
ds
dec
repz
jecxz
adc
pusha
in
push
std
add
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
sar
push
lock
loopne
sar
dec
repz
jecxz
adc
inc
into
jo
and
push
mov
arpl
lock
ret
push
mov
mov
lea
popf
and
push
std
inc
int
frstor
sar
dec
mov
mov
push
mov
in
push
inc
xor
inc
int
sahf
and
cmp
mov
dec
hlt
pop
mov
lea
and
je
and
jle
or
nop
or
loopne
push
inc
xor
add
sar
dec
lock
or
pop
in
adc
inc
into
xor
pusha
scas
push
mov
and
cmp
mov
push
mov
loopne
push
inc
jo
pusha
scas
push
mov
and
jle
or
sar
push
mov
jecxz
adc
pusha
scas
adc
and
jle
or
sar
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
cmp
loopne
sar
dec
mov
mov
into
jo
pusha
scas
adc
and
mov
loopne
nop
jge
push
mov
jecxz
push
inc
jo
pusha
scas
push
mov
arpl
lock
ret
dec
repz
mov
lea
pusha
scas
push
std
inc
int
sahf
and
jle
dec
lock
or
pop
mov
lea
fisub
adc
add
xchg
jle
dec
lock
ret
push
mov
mov
into
xor
pusha
scas
adc
inc
mov
sahf
and
lock
or
jecxz
push
inc
xor
pusha
scas
adc
inc
int
frstor
xchg
cmp
mov
push
repz
mov
lea
popf
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
adc
and
adc
arpl
mov
mov
push
repz
jecxz
adc
and
push
std
inc
int
sahf
and
cmp
mov
push
mov
mov
lea
popf
and
jae
arpl
mov
mov
dec
repz
mov
lea
popf
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
cmp
mov
push
mov
jecxz
adc
inc
into
jo
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
cmp
loopne
nop
jge
dec
mov
mov
lea
popf
and
xor
or
loopne
sar
dec
repz
jecxz
push
inc
xor
inc
int
sahf
and
cmp
mov
dec
repz
mov
lea
popf
and
jae
arpl
mov
mov
dec
repz
jecxz
push
inc
xor
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
push
inc
xor
pusha
scas
adc
inc
int
sahf
and
jle
dec
lock
or
pop
jecxz
push
inc
xor
add
sar
or
nop
or
pop
jecxz
push
inc
xor
inc
int
sahf
and
cmp
loopne
sar
or
pop
jecxz
push
inc
jo
pusha
scas
push
std
inc
int
frstor
xchg
cmp
movs
sar
push
mov
jecxz
push
inc
jo
pusha
scas
push
mov
and
jle
or
sar
or
pop
jecxz
adc
pusha
scas
adc
inc
int
sahf
and
cmp
loopne
nop
or
pop
jecxz
adc
inc
into
jo
pusha
scas
adc
and
lock
loopne
sar
or
pop
jecxz
push
inc
xor
pusha
scas
adc
add
sar
dec
mov
mov
push
mov
jecxz
push
inc
xor
add
sar
or
sar
push
mov
jecxz
adc
inc
into
xor
and
adc
arpl
jle
dec
mov
loopne
nop
ds
push
mov
mov
into
xor
pusha
scas
adc
inc
int
frstor
outs
sar
or
nop
ds
dec
mov
mov
into
jo
pusha
scas
push
inc
mov
sahf
arpl
mov
mov
dec
repz
jecxz
adc
and
jae
arpl
jle
or
nop
or
mov
lea
popf
and
push
std
inc
int
frstor
sar
dec
mov
loopne
nop
jge
push
mov
jecxz
adc
and
jae
and
cmp
loopne
sar
push
mov
mov
into
xor
pusha
scas
adc
inc
int
frstor
sar
dec
mov
loopne
nop
ds
dec
repz
mov
lea
popf
and
push
std
inc
int
sahf
and
cmp
loopne
nop
jge
dec
repz
mov
into
jo
pusha
in
adc
and
cmp
mov
dec
mov
mov
into
jo
pusha
scas
adc
fild
cmp
lfs
cs
jge
dec
repz
jecxz
adc
and
push
mov
and
jle
or
sar
push
mov
mov
into
jo
and
push
std
inc
int
frstor
xchg
cmp
mov
push
mov
mov
into
xor
inc
int
frstor
sar
or
sar
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
outs
sar
or
nop
jge
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
jle
dec
lock
ret
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
jle
dec
lock
or
jecxz
adc
inc
into
jo
and
adc
arpl
cmp
mov
push
mov
loop
push
inc
jo
pusha
scas
push
mov
and
jle
or
sar
push
mov
mov
lea
popf
and
push
std
add
sar
dec
mov
loopne
nop
ds
dec
mov
mov
into
jo
and
push
std
inc
mov
sahf
and
mov
loopne
nop
ds
dec
repz
mov
into
jo
pusha
in
adc
and
cmp
mov
dec
mov
mov
into
jo
and
adc
arpl
lock
or
mov
into
jo
and
jae
and
cmp
mov
push
repz
jecxz
push
inc
xor
inc
int
sahf
and
cmp
mov
push
mov
jecxz
push
inc
xor
pusha
scas
adc
inc
mov
sahf
and
lock
or
mov
into
jo
and
jae
and
cmp
loopne
nop
or
pop
mov
lea
pusha
scas
push
std
add
sar
dec
mov
loopne
nop
jge
push
mov
jecxz
adc
and
push
std
inc
mov
sahf
and
lock
loopne
sar
push
mov
jecxz
push
inc
xor
add
jae
and
cmp
mov
push
mov
mov
into
jo
and
xor
or
or
pop
jecxz
adc
and
push
std
inc
mov
sahf
and
mov
loopne
nop
jge
dec
repz
jecxz
adc
and
push
std
inc
int
sahf
and
cmp
loopne
nop
ds
dec
repz
jecxz
adc
pusha
in
adc
and
cmp
mov
dec
mov
mov
into
jo
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
mov
mov
into
jo
and
jae
and
cmp
mov
dec
repz
jecxz
adc
pusha
scas
adc
and
mov
loopne
nop
jge
push
mov
jecxz
push
inc
jo
pusha
scas
push
mov
and
jle
dec
lock
loopne
sar
push
mov
jecxz
adc
and
push
std
add
sar
or
sar
or
pop
mov
into
jo
pusha
in
adc
and
jle
or
nop
or
push
mov
into
jo
and
xor
ror
loopne
nop
ds
push
mov
mov
into
jo
pusha
scas
adc
and
mov
loopne
nop
jge
push
mov
jecxz
push
inc
jo
pusha
scas
push
std
add
xchg
jle
dec
lock
ret
dec
repz
jecxz
push
inc
xor
pusha
scas
adc
add
xchg
cmp
loopne
sar
dec
repz
jecxz
push
inc
xor
add
sar
mov
dec
mov
mov
into
jo
pusha
scas
adc
and
mov
loopne
nop
ds
dec
repz
mov
into
jo
and
push
std
inc
int
sahf
and
jle
dec
lock
ret
dec
repz
jecxz
push
inc
xor
inc
int
frstor
xchg
cmp
loopne
sar
dec
mov
mov
into
jo
and
push
std
inc
mov
sahf
and
mov
loopne
nop
jge
push
mov
jecxz
push
inc
jo
pusha
scas
push
std
inc
mov
sahf
and
mov
loopne
nop
ds
push
mov
mov
into
xor
pusha
scas
adc
add
sar
dec
mov
loopne
nop
jge
push
mov
jecxz
push
inc
jo
pusha
scas
push
mov
arpl
mov
mov
dec
repz
mov
into
jo
pusha
in
adc
and
cmp
loopne
sar
test
mov
mov
into
je
pusha
stos
adc
and
sar
dec
hlt
pop
in
xchg
cmp
push
cli
inc
retf
fs
adc
add
xor
and
aam
les
pop
in
xchg
cmp
push
cli
inc
retf
fs
adc
add
xor
and
aam
les
pop
in
xchg
cmp
push
cli
inc
retf
fs
adc
add
xor
and
aam
les
pop
in
xchg
cmp
push
cli
inc
retf
fs
adc
and
adc
mov
cmc
ja
push
ret
mov
ds
call
inc
jmp
sbb
jle
sub
or
inc
cmc
imul
fwait
add
js
jl
imul
pushf
or
clc
dec
loope
rcr
in
out
cmp
cs
cdq
add
cli
inc
sti
inc
cmp
xchg
jle
pop
and
rcr
mov
ins
rcl
sbb
aas
add
sar
fstp
mov
std
addr16
outs
out
pop
in
inc
sbb
cmp
dec
les
popf
xor
push
jmp
push
leave
jno
mov
mov
cs
repz
dec
aad
and
xor
fiadd
je
push
sahf
push
or
sub
(bad)
aad
loope
push
lea
add
loop
jmp
std
sub
pusha
rcr
scas
push
lahf
add
push
loope
mov
fisub
nop
pop
mov
sub
xor
dec
aam
je
xor
das
int3
jae
inc
jmp
mov
sar
jle
jp
ins
ror
sbb
xor
sub
inc
mov
pop
mov
les
scas
adc
sub
and
xor
(bad)
cmp
cmp
push
call
scas
bound
add
jl
fs
jo
jg
(bad)
cmp
cmp
jns
dec
(bad)
outs
mov
daa
xchg
fs
push
int3
push
std
pusha
sbb
sub
jno
popa
les
les
adc
add
das
retf
push
in
dec
push
movs
ds
push
mov
test
xor
ins
rcr
and
xor
mov
or
add
jge
ins
aam
xor
fst
xor
je
pusha
xor
movs
adc
jle
xor
pop
in
and
jg
xor
cmp
jns
imul
cwde
inc
test
dec
mov
push
pushf
and
and
push
loope
mov
fisub
xchg
inc
mov
test
les
ja
imul
enter
add
jle
je
pop
fisub
rcr
mov
cwde
sub
pushf
lock
in
adc
xor
xor
(bad)
je
pop
fisub
movs
or
sbb
sub
pop
xchg
push
pushf
and
adc
jo
pop
sbb
mov
sar
sbb
jl
jg
adc
push
xchg
xor
and
fs
aas
out
not
jmp
iret
cs
jl
pop
loopne
xor
out
push
mov
push
cs
push
mov
jp
pop
jmp
cmps
adc
daa
out
push
cmp
dec
mov
popa
xchg
jnp
jle
popa
ret
pop
loopne
ud1
mov
and
jl
add
push
ficom
xchg
or
pop
xchg
dec
stc
pop
jmp
mov
adc
pusha
loope
jmp
scas
test
(bad)
outs
nop
sbb
xor
ins
rcr
and
ja
jae
push
lods
pusha
push
(bad)
pop
test
imul
push
add
push
xchg
and
enter
into
rcl
adc
pop
add
push
cmp
xor
adc
je
ret
sbb
xchg
sub
dec
out
fbld
jbe
mov
xchg
pop
stos
add
pop
neg
dec
sub
or
cs
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
mov
sahf
and
push
inc
jo
pusha
cs
or
push
mov
dec
lock
loopne
adc
and
push
inc
jo
pusha
cs
or
push
mov
dec
lock
loopne
adc
and
push
inc
jo
pusha
cs
or
push
mov
dec
lock
loopne
adc
and
push
inc
jo
pusha
cs
or
push
mov
dec
lock
loopne
adc
and
push
inc
jo
pusha
cs
or
push
mov
dec
lock
loopne
adc
and
push
inc
jo
pusha
cs
or
push
mov
dec
lock
loopne
adc
and
push
inc
jo
pusha
cs
or
push
mov
dec
lock
loopne
adc
and
push
inc
jo
pusha
cs
or
push
mov
dec
lock
loopne
adc
and
push
inc
jo
pusha
cs
or
push
mov
dec
icebp
pop
loope
adc
and
push
inc
jno
popa
das
xchg
aas
or
sar
dec
icebp
pop
loope
adc
and
push
inc
jno
popa
das
xchg
aas
or
sar
dec
icebp
pop
loope
adc
and
push
inc
jno
popa
das
xchg
aas
or
sar
dec
icebp
pop
loope
adc
and
push
inc
jno
popa
das
xchg
aas
or
sar
dec
icebp
pop
loope
adc
and
push
inc
jno
popa
das
xchg
aas
or
sar
dec
icebp
pop
loope
adc
and
push
inc
jno
popa
das
xchg
aas
or
sar
dec
icebp
pop
loope
adc
and
push
inc
jno
popa
das
xchg
aas
or
sar
dec
icebp
pop
loope
adc
and
push
inc
jno
popa
das
xchg
aas
or
sar
dec
icebp
pop
loope
adc
and
push
inc
jno
popa
das
xchg
cmp
or
sbb
ins
sar
repnz
loop
adc
in
push
cld
inc
int3
jb
bound
cmp
or
sbb
ins
sar
repnz
loop
adc
in
push
cld
inc
int3
jb
bound
cmp
or
sbb
ins
sar
repnz
loop
adc
in
push
cld
inc
int3
jb
bound
cmp
or
sbb
ins
sar
repnz
loop
adc
in
push
cld
inc
int3
jb
bound
cmp
or
sbb
ins
sar
repnz
loop
adc
in
push
cld
inc
int3
jb
bound
cmp
or
sbb
ins
sar
repnz
loop
adc
in
push
cld
inc
int3
jb
bound
cmp
or
sbb
ins
sar
repnz
loop
adc
in
push
std
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
std
inc
int
frstor
xchg
cmp
mov
dec
repz
jecxz
adc
and
push
sahf
adc
mov
pop
add
call
stos
mov
jp
fdiv
pop
cmc
fcomp
lock
test
xchg
cs
push
nop
xchg
adc
sar
ror
popa
pop
mov
xchg
xor
inc
adc
mov
jbe
pop
mov
scas
shl
push
(bad)
jne
xchg
lea
dec
inc
xchg
adc
xor
fild
cmc
cmc
jo
jnp
jbe
daa
inc
loopne
sbb
in
adc
mov
test
inc
lds
out
jns
sbb
sub
xor
(bad)
inc
and
stos
inc
sub
loope
ins
retf
call
sub
(bad)
dec
in
retf
adc
inc
adc
imul
inc
push
adc
pop
mov
xchg
xor
mov
int3
dec
push
stos
fnstsw
mov
out
push
out
mov
mov
pop
fisub
fidivr
icebp
test
ror
and
(bad)
mov
dec
out
mov
test
div
jb
outs
mov
pop
xchg
add
push
lds
pop
test
jae
dec
test
call
ins
int
mov
mov
jl
add
xor
and
xsha1
cmps
dec
xchg
gs
jnp
cdq
and
cmp
fst
fsubr
inc
lock
push
mov
or
in
fstp
lds
adc
sbb
pusha
shr
stc
and
mov
scas
dec
xchg
cmp
enter
push
cdq
cmp
(bad)
arpl
inc
jmp
mov
inc
cld
ds
jae
jne
lea
xchg
and
jbe
jl
pop
sahf
inc
adc
adc
xor
push
loopne
inc
ins
xlat
outs
into
out
cmp
add
jg
push
(bad)
xor
push
add
aaa
cwde
pop
out
pop
jmp
(bad)
push
(bad)
ds
and
fbld
dec
cmc
pop
add
sbb
push
inc
shl
out
and
and
inc
fsub
pop
call
test
outs
fbstp
je
outs
(bad)
cdq
push
inc
xor
or
push
call
sahf
jo
adc
pop
cld
pop
in
mov
rcr
fisubr
scas
inc
mov
and
sub
cmp
xor
rol
sbb
add
fld
inc
in
add
mov
mov
lock
loopne
loopne
repnz
shr
mov
xor
jo
adc
push
icebp
push
dec
mov
sub
dec
sar
lock
add
mov
adc
outs
out
sahf
jo
mov
test
push
aad
fimul
cwde
and
sub
jle
inc
loope
std
inc
push
mov
movs
cmp
cld
rcr
jg
out
add
pusha
sar
rol
dec
or
sbb
repz
call
out
push
lea
into
adc
adc
adc
inc
add
mov
dec
out
popa
aad
rcr
mov
fnsave
shl
inc
mov
cmps
outs
xchg
cmp
in
aad
rcr
sub
push
int
shl
push
mov
movs
das
fidiv
sbb
jmp
into
xor
mov
scas
jne
add
sar
das
sahf
pop
loopne
in
shl
mov
mov
fs
popa
call
lock
mov
test
ror
in
(bad)
jnp
and
mov
adc
sub
jle
dec
lock
xchg
dec
nop
dec
lods
imul
cs
or
and
mov
out
or
cmp
push
nop
jb
into
sbb
pusha
int
mov
push
or
xchg
add
out
push
fsubr
out
cmp
outs
stos
add
add
je
cs
push
std
dec
add
aaa
call
push
lds
add
xor
push
cli
inc
int3
jb
bound
push
sar
xchg
cs
dec
in
fstp
aam
push
mov
cmps
adc
inc
fisub
cli
inc
sahf
or
xor
jle
push
call
pusha
mov
shl
push
mov
mov
dec
stc
pop
mov
xchg
jo
xor
push
mov
and
mov
mov
dec
call
addr16
push
(bad)
or
and
mov
push
inc
mov
sbb
cs
pop
jmp
xchg
xor
call
imul
mov
fstp
dec
stc
push
mov
test
jl
outs
mov
sahf
dec
pop
mov
ins
mov
sti
pop
out
jl
ja
and
aaa
xchg
mov
add
push
lock
mov
aas
loopne
(bad)
ds
jp
jg
out
push
lahf
inc
mov
jge
outs
div
call
ror
cs
inc
loope
mov
shr
cdq
and
scas
addr16
add
xor
inc
outs
ror
cmp
leave
jg
inc
les
mov
nop
inc
xchg
and
outs
cli
pop
in
inc
das
mov
pushf
setae
mov
imul
fisub
gs
and
adc
dec
outs
mov
sub
mov
xchg
(bad)
adc
add
bound
mov
xchg
sub
pop
mov
out
jo
inc
mov
adc
fs
mov
test
sbb
push
loope
ret
pushf
xor
add
data16
out
into
dec
sbb
jle
push
out
mov
fisub
xor
arpl
jae
xor
push
or
xor
jp
pop
leave
out
ds
cmp
and
inc
in
and
mov
aaa
or
out
jle
ja
cmp
mov
je
pop
mov
sbb
test
mov
jecxz
test
leave
popf
cmp
push
rol
out
in
add
rcr
shr
sub
push
stc
dec
jmp
pushf
pusha
int3
sub
bound
inc
dec
cmps
dec
loopne
xchg
jle
inc
out
out
jle
ja
xchg
into
sub
inc
xlat
add
adc
inc
ds
cmp
push
stc
dec
shl
jnp
fidivr
mov
popf
adc
(bad)
pop
jmp
test
inc
out
sub
xchg
into
push
call
jns
add
adc
adc
sbb
dec
xchg
jle
dec
in
lock
aam
in
(bad)
push
mov
into
jo
pusha
ret
(bad)
fild
push
fcom
xchg
and
ja
dec
cld
inc
or
lock
add
loope
shr
pop
out
pop
sub
mov
mov
imul
into
out
and
outs
mov
adc
add
xor
scas
sub
pop
lods
inc
call
inc
lds
das
mov
pop
in
repnz
or
or
pop
call
jge
xor
out
xor
pusha
jmp
push
add
cmp
imul
aam
push
call
adc
inc
sbb
es
dec
nop
ds
scas
and
das
lods
push
(bad)
push
retf
bound
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
js
dec
lock
loopne
nop
aas
or
push
mov
iret
jo
popa
scas
adc
and
jle
dec
lock
loopne
xchg
or
push
mov
into
jno
pusha
scas
adc
and
jle
dec
lock
loope
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
mov
push
mov
mov
dec
jo
pusha
daa
rcr
mov
lods
mov
ror
addr16
je
inc
cmp
push
sbb
xchg
(bad)
sti
sub
inc
mov
lods
mov
(bad)
mov
jle
movs
das
clc
or
jecxz
mov
or
inc
xchg
imul
fisub
enter
outs
mov
sub
int
pop
test
test
xchg
adc
jae
sahf
and
sbb
int
std
mov
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
int3
ins
and
fisub
adc
mov
dec
fcmovnu
(bad)
shr
xchg
fwait
push
mov
xor
cli
add
or
mov
stc
icebp
push
retf
cmp
inc
or
mov
push
out
inc
repz
xchg
push
das
sbb
pop
iret
push
mov
hlt
scas
fst
adc
mov
xor
in
push
int3
pop
xchg
xor
adc
shr
mov
push
movd
push
inc
or
fild
sub
mov
push
fnstsw
loop
pop
sub
pop
cdq
cmp
movs
(bad)
inc
dec
imul
mov
rol
add
pusha
scas
out
fs
fsub
outs
sbb
mov
dec
mov
jno
rol
mov
jb
inc
mov
mov
sahf
fist
lock
loopne
nop
or
push
mov
xor
arpl
aas
mov
mov
xchg
pop
lods
inc
mov
and
push
mov
mov
sbb
sbb
jle
dec
cdq
cmp
push
rcr
mov
into
jb
loop
adc
and
jle
dec
lock
in
lods
nop
or
fisub
adc
add
shl
or
push
mov
mov
adc
push
add
sub
adc
loope
mov
mov
push
inc
jo
push
mov
sbb
(bad)
jle
jnp
aaa
xchg
fst
push
mov
mov
into
jo
pusha
fist
mov
inc
pop
sar
into
xchg
pop
loopne
nop
dec
repnz
mov
push
retf
inc
cmps
adc
push
sub
inc
mov
lock
mov
popa
mov
pusha
xor
xchg
cmp
ja
add
jle
inc
jb
mov
pop
mul
mov
pusha
jmp
push
fisub
adc
add
shr
cmp
pop
repz
aam
sbb
fisub
adc
add
sahf
and
mov
push
outs
pushf
xor
cs
mov
scas
outs
push
dec
jo
pusha
mov
xor
ror
mov
push
or
push
leave
out
push
cld
dec
dec
inc
fisub
sbb
cli
or
ror
loopne
nop
jb
cmp
xor
inc
pop
jo
pusha
ds
imul
shl
mov
pop
rol
iret
pushf
and
adc
adc
add
nop
jle
adc
sbb
ins
sar
xchg
cmp
sbb
push
adc
cmp
add
xchg
stc
push
cli
(bad)
in
mov
xor
jle
ja
inc
cmp
mov
scas
dec
hlt
js
sbb
retf
cmps
or
push
imul
pop
aas
push
xor
inc
pop
(bad)
xchg
ds
or
mov
pusha
pop
mov
ss
inc
call
push
sbb
pop
loopne
nop
sub
sahf
mov
out
push
inc
xor
nop
xchg
stos
xor
test
pop
in
aad
mov
jle
imul
xor
jnp
fwait
pop
jecxz
sar
or
xchg
cmp
gs
xor
xor
mov
in
aad
xor
mov
jg
xchg
cmp
pop
and
cmps
sbb
jmp
in
outs
sar
add
push
pop
hlt
lahf
push
out
push
sub
push
in
(bad)
fdiv
shr
lods
and
ins
jecxz
repz
push
(bad)
xchg
sub
dec
xchg
push
out
popa
fild
shr
scas
and
shr
pop
and
mov
xchg
dec
bnd
mov
jg
sub
adc
and
pushf
and
mov
jmp
cmps
loopne
inc
cmp
jbe
inc
call
ss
out
idiv
cs
shr
mov
xchg
xchg
ret
js
dec
and
mov
cmps
sbb
inc
cli
je
mov
outs
xor
and
ret
jl
dec
and
xchg
sub
push
out
inc
(bad)
jo
mov
jg
mov
sahf
ret
jg
dec
and
xchg
das
push
push
xchg
aas
or
rol
outs
dec
icebp
pop
loope
adc
lahf
pop
into
inc
mov
jae
arpl
cmp
shr
lds
pop
in
pop
mov
mov
pop
inc
leave
ja
addr16
mov
mov
mov
jbe
inc
clc
push
call
xchg
xchg
sub
pop
test
xchg
cli
mov
dec
repz
jecxz
sar
pop
shr
jns
imul
cmp
xor
js
push
mov
xchg
adc
push
inc
jo
pusha
scas
adc
and
jle
dec
pop
pop
mov
outs
or
jno
inc
(bad)
cmp
sub
push
mov
in
push
fsub
jae
xor
and
and
xchg
push
dec
stc
aaa
les
int
test
int3
je
imul
push
cmp
mov
mov
or
pop
out
cmp
cmp
inc
mov
jle
push
mov
out
fdiv
add
adc
and
xor
lds
imul
in
cmp
mov
push
inc
jo
inc
scas
nop
mov
scas
loope
icebp
dec
sar
mov
aas
xchg
das
popa
fbstp
inc
call
and
push
mov
inc
out
push
fisub
jo
add
xor
outs
rcr
dec
icebp
aas
sub
mov
inc
in
push
fsub
jb
add
jl
ins
rcr
repnz
sub
sbb
inc
in
push
fsub
jae
add
xor
std
jae
dec
repz
mov
lods
adc
lods
adc
mov
cdq
push
test
stc
mov
cwde
pop
test
mov
push
mov
cmps
sbb
mov
aad
stos
cmp
aaa
mov
cdq
pop
test
cdq
push
xlat
cmp
sbb
mov
xor
adc
mov
pop
scas
pop
mov
mov
ds
or
xor
add
mov
icebp
jle
push
mov
ds
add
xor
cmp
icebp
das
sbb
xor
dec
scas
add
push
(bad)
and
or
sbb
sub
cmp
into
das
and
xor
dec
scas
add
or
xchg
cmp
mov
scas
inc
mov
mov
dec
scas
add
push
mov
ss
jg
outs
loope
test
xchg
sub
clc
push
call
push
mov
aaa
mov
jns
imul
cmp
or
jmp
adc
and
jnp
imul
cmc
dec
test
xchg
cmp
cld
push
in
(bad)
fdiv
add
mov
jl
ins
loop
repnz
cmp
lock
or
arpl
jae
add
sahf
and
jle
dec
lock
loopne
nop
cmp
sahf
mov
inc
(bad)
push
out
and
adc
shl
shr
push
cmp
jo
inc
(bad)
push
out
and
adc
xchg
xor
dec
sar
mov
aas
xchg
das
popa
fbstp
inc
call
push
mov
push
mov
inc
out
push
fisub
jo
add
das
pop
ret
pop
loopne
icebp
sub
mov
inc
out
push
fisub
jo
add
xor
outs
rcr
dec
icebp
aas
sub
mov
inc
in
push
fsub
jb
add
jl
ins
rcr
repnz
or
cld
inc
in
push
fsub
jb
add
jl
ins
rcr
dec
repz
sub
mov
inc
in
push
frstor
jae
add
xor
ins
rcr
dec
repz
mov
in
push
frstor
jae
add
xor
rcr
repnz
mov
scas
adc
add
xor
ins
rcr
dec
repz
ret
pop
loop
repnz
arpl
jae
add
mov
sbb
xchg
sbb
out
(bad)
push
out
aam
(bad)
jns
(bad)
imul
jmp
es
push
test
sahf
and
dec
mov
cmp
data16
inc
stc
pop
repnz
fcom
test
retf
pop
xlat
imul
sbb
mov
popf
push
jmp
jne
pop
test
out
xlat
imul
pusha
xchg
sub
fst
inc
stc
aaa
mov
cdq
pop
test
mov
xlat
imul
sbb
retf
push
jmp
push
test
mov
aam
les
or
cmp
jmp
(bad)
pop
call
popf
adc
jecxz
shr
jle
pusha
into
outs
out
in
push
push
mov
inc
(bad)
xor
add
mov
dec
mov
ds
pusha
fst
inc
(bad)
adc
dec
idiv
push
pop
shr
jge
push
mov
ds
scas
add
outs
lea
sahf
adc
loope
shr
jg
outs
shl
jecxz
pop
lock
fist
inc
push
mov
mov
shr
sub
outs
mov
shr
pushf
and
pop
loop
sar
out
inc
jmp
nop
or
(bad)
in
push
cld
inc
mov
pushf
and
add
push
call
sub
cmp
int3
jb
(bad)
in
push
cld
inc
xchg
outs
shr
ret
pop
adc
ret
sbb
sub
cmp
sub
sar
and
repz
loop
sar
adc
inc
std
jbe
pusha
ficom
push
std
inc
lea
popf
and
scas
add
push
stos
sbb
or
(bad)
push
out
outs
sar
loope
sbb
push
out
fdivr
push
mov
xchg
mov
sub
clc
push
out
fdiv
add
or
js
push
mov
cdq
sub
neg
imul
push
test
cwde
ss
js
push
xchg
xchg
sub
clc
push
call
push
mov
aaa
mov
jns
imul
cmp
or
push
jmp
adc
and
xor
les
push
pop
hlt
dec
test
xchg
sub
push
jmp
adc
mov
jp
imul
cmc
dec
test
xchg
sub
sti
push
jmp
(bad)
adc
pushf
xor
pop
repnz
cmp
mov
pushf
push
jmp
fdiv
add
mov
jl
imul
cmc
dec
fisub
sub
sbb
or
cld
push
in
(bad)
fdiv
add
xchg
xchg
cs
loop
repz
cmp
or
arpl
jae
push
out
inc
shl
pushf
xor
pop
repz
cmp
pop
adc
inc
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jg
dec
lock
jno
fbstp
inc
call
and
adc
mov
mov
jno
fbstp
inc
call
and
adc
mov
mov
jno
fbstp
inc
call
and
adc
lods
bts
add
xor
outs
rcr
dec
lock
push
mov
out
push
jmp
xchg
add
xor
outs
rcr
dec
lock
push
mov
out
push
fild
scas
adc
shr
loopne
lock
push
mov
out
push
fisubr
jno
add
xor
outs
rcr
dec
icebp
aas
sub
mov
inc
out
push
fisttp
jno
add
xor
outs
rcr
dec
icebp
aas
sub
mov
inc
out
push
fist
jb
add
jl
ins
rcr
repnz
sub
sbb
or
cld
inc
in
push
fsub
jb
add
jl
ins
rcr
repnz
sub
sbb
or
cld
inc
in
push
fsub
jb
add
jl
ins
rcr
repnz
sub
sbb
or
cld
inc
in
push
fsub
jae
add
xor
ins
rcr
dec
repz
mov
in
push
frstor
jae
add
xor
ins
rcr
dec
repz
mov
in
push
frstor
jae
add
xor
outs
rcr
dec
icebp
aas
sub
std
inc
in
push
frstor
jae
add
xor
pop
out
(bad)
js
xor
or
push
frstor
jae
add
xor
sub
jnp
xor
std
inc
in
push
frstor
jae
add
xor
sub
mov
pusha
call
in
push
frstor
jae
add
xor
sub
mov
imul
mov
in
push
frstor
ja
pop
test
xor
xchg
xchg
sbb
push
mov
inc
jmp
jns
or
xor
mov
cwde
adc
enter
movs
pop
mov
xlat
imul
sbb
lea
sahf
sub
cmp
loopne
movs
pop
mov
xlat
imul
sbb
mov
popf
jl
js
jno
pop
loop
xchg
pop
mov
xlat
imul
sbb
mov
mov
sbb
pop
loop
add
test
jns
or
xor
fs
pop
loop
repnz
mov
xlat
imul
sbb
mov
cmps
fs
pop
jecxz
inc
mov
xlat
imul
sbb
mov
inc
stc
cmp
push
call
test
jns
or
xor
fs
push
call
test
jp
or
add
inc
clc
xor
dec
lock
mov
hlt
dec
in
aam
ret
jle
push
mov
cmp
loopne
repz
lock
cdq
add
shr
jle
push
mov
cmp
mov
push
mov
jl
add
shr
jle
push
mov
cmp
mov
sub
lods
add
shr
jle
push
mov
cmp
cmps
or
pop
out
sti
lods
add
shr
jle
push
mov
cmp
or
pop
out
scas
adc
loopne
shr
jle
push
mov
cmp
add
fwait
push
jmp
xchg
adc
loopne
shr
jle
push
mov
cmp
sub
push
out
dec
mov
lock
loopne
shr
jg
pop
pop
xchg
das
cmp
or
mov
inc
into
adc
loope
shr
inc
mov
pushf
and
add
push
out
inc
icebp
adc
fsub
push
cld
inc
mov
pushf
and
add
push
out
inc
(bad)
sub
fsub
push
cld
inc
mov
pushf
and
add
pop
out
inc
jmp
xchg
cmp
int3
jb
(bad)
in
push
cld
inc
mov
pushf
and
add
pop
out
inc
(bad)
cmp
fsub
push
cld
inc
mov
pushf
and
add
push
out
inc
dec
cmp
int3
jb
(bad)
in
push
std
inc
lea
popf
and
scas
add
push
out
inc
push
xchg
cmp
arpl
push
std
inc
lea
popf
and
scas
add
push
out
inc
(bad)
aas
xchg
cmp
arpl
push
std
inc
lea
popf
and
scas
add
push
out
inc
std
sub
frstor
push
cld
inc
lea
popf
and
scas
add
push
out
inc
imul
cmp
arpl
push
stc
inc
mov
cdq
daa
test
scas
add
push
out
inc
shr
xchg
cmp
jmp
cmp
add
scas
add
push
out
dec
test
(bad)
js
push
xchg
xchg
sub
scas
add
push
call
ss
js
push
xchg
xchg
sub
out
inc
(bad)
jo
pusha
fadd
test
test
cwde
ss
js
push
xchg
xchg
sub
icebp
pop
loope
sar
or
push
test
cwde
ss
js
push
xchg
xchg
sub
clc
push
call
push
mov
ss
js
push
xchg
xchg
sub
stc
push
jmp
pop
mov
aaa
mov
jns
imul
cmp
or
push
jmp
pop
mov
aaa
mov
jns
imul
cmp
inc
cli
push
jmp
adc
and
xor
les
push
pop
test
sbb
fidiv
mov
xor
les
push
pop
stc
dec
test
xchg
sub
sti
push
jmp
(bad)
add
fwait
xor
imul
test
sbb
jmp
(bad)
add
fwait
xor
imul
in
dec
cmp
mov
cld
push
in
(bad)
fdiv
add
mov
jl
ins
in
xchg
dec
cmp
mov
cld
push
in
(bad)
fdiv
add
mov
jl
ins
in
mov
cmp
mov
cld
push
in
(bad)
fdiv
add
mov
jl
ins
dec
mov
sub
sbb
or
cld
push
in
(bad)
fdiv
add
mov
jl
imul
sub
inc
std
push
in
arpl
jae
add
xor
mov
cmp
or
arpl
jae
add
xor
mov
mov
sub
inc
std
push
in
arpl
jae
add
xor
mov
pop
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loopne
nop
or
push
mov
into
jo
pusha
scas
adc
and
jle
dec
lock
loope
repnz
jecxz
popf
xor
popf
pusha
nop
and
or
mov
mov
movs
sub
add
in
aad
rcl
lea
cmps
pop
lock
je
jne
push
sti
push
pop
repnz
mov
pushf
cmp
fsub
lea
add
mov
out
jae
in
bnd
cmp
aaa
sub
sbb
and
std
(bad)
fidiv
mov
out
sbb
add
jnp
add
push
gs
retf
mov
ins
int
sar
xor
mov
cmp
int3
in
xchg
jnp
mov
das
pushf
outs
and
adc
out
fstp
popa
(bad)
jl
test
xchg
ins
rol
dec
push
jg
int3
rcr
and
std
shl
cmps
pop
(bad)
pop
mov
sub
mov
shr
mov
inc
not
push
push
or
jo
nop
out
mov
sahf
ror
and
add
jmp
xor
inc
sbb
pushf
add
rol
push
(bad)
jle
outs
cmp
lock
rcl
sahf
adc
and
cmps
pop
popa
sbb
sbb
cmp
pop
loopne
fwait
shl
or
sahf
and
push
call
sub
in
jg
outs
lods
or
cmp
mov
cs
cmps
mov
jo
and
jg
outs
sbb
lock
ror
rep
shr
jo
idiv
push
rcl
rol
pop
sbb
mul
mov
adc
into
cmp
jge
push
(bad)
mov
push
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
mov
aaa
nop
daa
loopne
lock
shl
and
adc
inc
not
add
add
add
add
nop
nop
nop
nop
push
mov
sub
push
push
push
mov
mov
mov
mov
lea
mov
push
call
lea
push
lea
push
lea
push
mov
push
call
push
push
push
push
mov
push
call
mov
push
call
add
mov
mov
mov
or
mov
push
push
push
push
call
cmp
jne
mov
push
call
add
mov
seto
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
jmp
mov
xor
mov
mov
mov
mov
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
push
push
push
call
mov
mov
push
push
push
push
push
push
push
push
push
mov
call
mov
cmp
je
test
je
push
call
mov
push
call
add
lea
push
call
mov
mov
push
push
push
push
push
call
mov
push
push
call
mov
pop
add
ret
nop
nop
nop
nop
push
mov
xor
cmp
jle
push
call
mov
add
mov
add
mov
xor
mov
mov
xor
mov
lea
test
je
mov
pop
lea
ret
mov
or
and
pop
ret
nop
nop
nop
stos
mov
inc
pop
push
xchg
dec
mov
mov
jo
pusha
mov
dec
xchg
pop
xchg
stos
addr16
push
fwait
push
jmp
jmp
retf
pop
sbb
sub
cmp
or
sbb
push
xchg
stos
push
mov
out
aaa
sti
daa
mov
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
mov
inc
stos
hlt
add
retf
(bad)
fist
or
jae
imul
inc
ss
outs
fwait
add
aaa
adc
xor
ja
push
aas
xchg
lods
imul
xchg
pop
in
mov
push
inc
inc
scas
mov
(bad)
sub
cmp
jecxz
nop
pop
cmp
clc
pop
mov
pop
xchg
out
ja
cmp
and
hlt
sti
jno
push
(bad)
test
ret
and
lahf
pop
cmp
cmc
js
lahf
mov
int3
scas
xor
fild
imul
pop
push
retf
movs
jmp
rol
and
mov
inc
scas
hlt
sti
jo
call
gs
daa
sbb
movs
dec
into
pop
(bad)
stos
xor
fcom
(bad)
cmp
pop
mov
xlat
inc
(bad)
mov
rcr
bound
mov
mov
fistp
outs
cmp
xchg
cmp
stos
test
mov
pop
ja
and
adc
daa
mov
fist
mov
sbb
pop
aas
dec
sbb
adc
mov
retf
fistp
and
rcr
scas
imul
pop
(bad)
stos
xor
rcl
outs
jmp
mov
pop
sub
fwait
out
xchg
jae
test
and
out
pop
mov
inc
dec
aaa
and
int3
jb
cmp
push
mov
dec
xchg
xchg
xchg
pushf
ret
out
icebp
mov
(bad)
loopne
cmp
arpl
add
mov
jecxz
push
dec
mov
daa
add
cmp
or
sbb
xchg
pop
xchg
ja
and
push
pop
mov
rcr
mov
add
pop
add
into
aas
call
pop
gs
inc
idiv
sub
sbb
imul
iret
dec
push
xchg
fisubr
adc
inc
sub
mov
mov
lahf
cmp
mov
(bad)
(bad)
mov
loop
xchg
cwde
push
bnd
xchg
hlt
sub
pop
sysret
test
inc
(bad)
imul
icebp
push
call
jp
mov
add
pop
fisttp
or
sahf
imul
xchg
loop
mov
cli
in
dec
fild
retf
mul
adc
dec
rcr
out
stos
mov
and
imul
inc
ret
test
dec
out
jnp
mov
jno
and
les
sub
(bad)
daa
mov
sbb
test
xor
xchg
add
into
mov
mov
aaa
add
sbb
sbb
mov
movs
out
call
movs
push
addr16
jg
xor
aaa
iret
fdivp
inc
out
aaa
add
retf
jg
mov
dec
outs
sbb
push
xchg
movs
add
(bad)
js
cmp
jb
add
fild
or
out
xlat
ret
gs
outs
xor
outs
cli
lahf
xor
stos
hlt
add
retf
fisttp
enter
and
sub
stos
aaa
js
mov
inc
jae
cli
arpl
aam
lahf
outs
push
push
cmp
pop
pop
stos
ja
iretw
inc
pop
ds
adc
popf
mov
aam
cmp
dec
mov
add
shl
dec
jmp
lods
daa
mov
and
sub
in
das
outs
jnp
mov
inc
in
scas
pop
xor
jae
jbe
iret
fild
pop
les
jle
mov
hlt
aaa
js
mov
inc
add
fld
jno
mov
jnp
addr16
gs
js
rcl
mov
sar
pop
sub
aaa
out
xchg
jae
test
and
out
pop
mov
inc
retf
aaa
and
int3
jb
cmp
or
scas
push
mov
dec
xchg
inc
dec
fwait
ret
jecxz
icebp
mov
(bad)
out
cmp
ret
xlat
add
mov
aas
stos
push
dec
mov
daa
add
cmp
or
mov
fistp
test
pop
xchg
ja
and
push
pop
mov
rcr
mov
add
pop
add
into
aas
call
pop
gs
inc
idiv
sub
sbb
dec
push
mov
stos
ja
test
repz
sub
mov
mov
lahf
cmp
mov
(bad)
mov
and
push
bnd
mov
push
fisubr
jmp
pop
test
inc
(bad)
imul
inc
jns
mov
add
pop
(bad)
sub
(bad)
sahf
imul
xchg
loop
mov
fwait
mov
cmps
iret
lahf
out
jp
jle
dec
xlat
sbb
loopne
jnp
pop
neg
outs
cli
ja
addr16
fdiv
ret
retf
xor
imul
jp
xor
aas
in
shl
or
mov
inc
jmp
mov
aas
dec
xchg
imul
xchg
inc
adc
ret
cmps
xor
inc
shr
cmp
push
lds
add
test
jle
and
jmp
pusha
fadd
xlat
leave
jne
cmp
or
cs
pop
ret
in
mov
and
pop
push
inc
mov
(bad)
fcmovnb
cs
lock
push
in
mov
mov
(bad)
sub
in
jle
mov
mov
xor
and
mov
clc
mov
aas
sbb
imul
push
nop
pop
fisubr
push
int3
sahf
adc
out
sub
div
sub
pop
xchg
jbe
test
mov
inc
gs
sub
mov
jg
pop
sub
add
mov
mov
pop
cli
in
dec
fild
push
mul
or
dec
rcr
out
stos
mov
mov
inc
add
fadd
jno
mov
jnp
out
gs
js
rcl
daa
jmp
mov
pop
sub
mov
test
and
out
pop
mov
inc
mov
and
retf
jb
cmp
or
scas
push
mov
dec
xchg
outs
xchg
call
mov
(bad)
out
cmp
mov
mov
imul
push
dec
mov
daa
add
cmp
or
sbb
test
pop
xchg
movs
and
push
pop
mov
rcr
mov
add
pop
add
into
aas
call
pop
gs
inc
idiv
aaa
push
xlat
sbb
imul
iret
dec
push
mov
stos
ja
test
repz
sub
mov
mov
lahf
cmp
mov
(bad)
out
mov
loop
xchg
cwde
push
bnd
(bad)
mov
das
jmp
pop
test
inc
(bad)
imul
icebp
push
call
js
mov
into
sti
jg
lahf
enter
pop
idiv
mov
pop
movs
or
push
fcom
jmp
sahf
scas
inc
sar
shr
retf
xlat
sbb
shl
dec
xchg
pop
jnp
div
sahf
in
int3
data16
daa
test
sahf
pop
in
mov
out
test
lods
repz
push
xchg
pop
or
test
mov
enter
aam
cmp
or
dec
out
ss
ret
xchg
and
jmp
sbb
inc
pop
push
adc
movs
loop
sub
dec
sbb
clc
dec
cmp
or
icebp
sub
dec
pop
and
mov
xor
outs
stos
and
push
ficomp
fisttp
clc
js
cmp
sbb
hlt
sbb
mov
fwait
push
push
pop
lahf
fwait
icebp
mov
dec
iret
pop
push
sbb
in
loopne
test
mov
pop
or
xlat
fwait
inc
je
mov
push
es
(bad)
out
push
dec
cmp
outs
xchg
mov
push
inc
test
inc
retf
xchg
jbe
inc
pop
retf
push
in
cs
(bad)
dec
rcr
stos
jbe
addr16
fiadd
jp
fdiv
fild
les
pop
pop
(bad)
pop
dec
mov
xor
mov
adc
les
pop
and
mov
es
dec
xlat
in
call
adc
cli
jo
jmp
pop
aam
cmp
sub
sub
imul
js
jae
jmp
mov
retf
addr16
sub
push
out
xchg
xchg
sub
pop
jmp
pop
out
stos
ja
mov
cmp
out
daa
retf
pop
fcmovnb
outs
test
jmp
dec
sbb
ret
gs
out
sub
int3
iret
jno
adc
jo
push
sub
mov
fild
dec
ret
ja
pop
mov
ret
mov
push
jnp
jbe
hlt
xchg
sbb
test
dec
jg
inc
out
cmp
mov
in
daa
xchg
loope
push
into
dec
fld
cmp
jle
fild
outs
jmp
mov
xor
or
rcl
clc
sub
int
jecxz
sbb
jmp
shl
(bad)
mov
inc
jmp
pop
imul
jg
out
and
and
dec
aas
stc
sub
aaa
mov
inc
sbb
aaa
inc
and
iret
jg
test
jnp
dec
repnz
jnp
adc
fnstsw
cli
daa
or
jl
out
sub
mov
xor
test
inc
jmp
pop
out
push
lahf
inc
sub
mov
mov
jmp
push
xor
xchg
mov
mov
call
cmps
or
faddp
xchg
pop
or
stos
xor
fcmovnu
pop
inc
adc
cmp
pop
(bad)
mov
push
mov
lock
mov
retf
sti
fdiv
inc
sahf
pop
xlat
je
div
sub
sar
bnd
punpckhbw
stos
mov
mov
push
jae
daa
xor
push
les
xor
loopne
cmps
mov
xchg
in
or
ja
data16
retf
sahf
arpl
mov
inc
mov
hlt
ss
mov
push
enterw
pop
push
pop
cmps
or
mov
or
jp
mov
outs
iret
test
lahf
scas
mov
daa
retf
pop
lahf
clc
sub
stos
aam
xchg
adc
jecxz
xchg
sub
(bad)
pop
fisub
ja
and
push
ret
mov
lock
push
inc
pop
or
mov
xchg
mov
cmps
jb
mov
clc
xchg
data16
stos
fist
icebp
movs
lods
retf
push
lea
hlt
sub
cmp
ret
movs
sbb
ret
jae
sahf
push
fwait
les
stc
arpl
xchg
sub
cmc
out
xlat
pop
fwait
aad
aaa
iret
stos
xchg
out
pop
and
fwait
retf
cmp
and
jle
dec
add
pop
mov
(bad)
jnp
mov
xchg
je
jnp
jmp
pop
sub
mov
cmp
rcl
xchg
cmp
or
dec
sti
xlat
mov
fild
in
idiv
cvtps2pd
imul
sti
pop
mov
aas
inc
lahf
ja
and
push
into
in
cmp
setle
fs
pop
or
sbb
push
(bad)
or
ja
dec
jecxz
xchg
stos
cwde
add
fdivp
pop
and
jp
sbb
repnz
cwde
dec
push
push
dec
mov
push
sbb
repnz
xchg
retf
sub
sbb
stos
lods
sar
push
mov
cmp
mov
arpl
sbb
(bad)
scas
xchg
ret
repz
adc
int
add
outs
icebp
aam
hlt
mov
lock
mov
push
js
std
xor
dec
xchg
fwait
inc
pusha
xor
rcl
sahf
pop
aam
repnz
xlat
dec
dec
xchg
dec
aas
pop
mov
mov
call
retf
add
and
and
jbe
int
xchg
push
xchg
mov
ror
inc
inc
push
icebp
sti
sub
pop
popf
mov
push
shl
in
clc
scas
adc
xchg
bound
je
fidivr
popa
call
jle
int
ffree
icebp
repz
outs
pop
pxor
adc
or
inc
push
sub
data16
jbe
push
ja
dec
xchg
pop
xchg
ja
(bad)
jecxz
pop
inc
add
retf
retf
jg
inc
sub
adc
in
push
jno
movs
enter
sti
ja
xor
push
adc
enter
push
xchg
push
ins
jg
mov
loopne
outs
jecxz
xchg
es
bound
out
sub
add
inc
lahf
jp
ds
inc
dec
ret
retf
sub
movs
xchg
stos
ja
addr16
push
ror
push
sahf
sti
outs
mov
xchg
jg
inc
xchg
in
inc
xchg
mov
add
retf
push
(bad)
sti
or
outs
mov
dec
shl
cmp
pop
mov
test
ret
cmp
stc
and
push
mov
or
push
out
xchg
das
cmp
(bad)
xchg
pop
push
stos
mov
and
aaa
cmp
sti
fcmovnbe
inc
ins
dec
pop
outs
out
imul
rol
add
pop
call
mov
mov
mov
call
dec
nop
ds
inc
cli
mov
sub
fild
sti
cmps
cmp
or
(bad)
cmps
rcl
out
hlt
mov
mov
pop
jo
lods
call
les
adc
(bad)
xchg
out
sub
push
cs
mov
jae
mov
jmp
mov
mov
not
push
dec
push
mov
inc
repnz
mov
add
in
adc
mov
cmp
or
nop
(bad)
imul
mov
or
cmps
cld
in
or
movs
and
mov
adc
sub
jp
dec
(bad)
pop
xchg
bound
inc
and
fiadd
aaa
pop
dec
enter
mov
ret
jle
sub
imul
retf
test
xor
lahf
inc
outs
mov
sbb
cmp
jnp
nop
xchg
out
ja
in
mov
pop
push
add
inc
(bad)
fild
fcomip
jbe
fist
jp
(bad)
sbb
pop
addr16
fwait
inc
jmp
cmp
pushf
pop
fisttp
push
mov
push
outs
cwde
xchg
call
outs
inc
add
fmulp
inc
jecxz
bound
inc
cmp
dec
push
repz
mov
inc
arpl
push
js
addr16
cmp
jb
ja
push
fisttp
jle
sbb
cwde
push
jle
sub
lea
inc
fbld
and
(bad)
daa
stos
pop
sbb
ins
(bad)
out
ds
(bad)
arpl
pop
mov
retf
inc
mov
add
out
xlat
in
xchg
push
mov
pop
cmps
fld
mov
mov
ficom
push
sbb
outs
adc
repz
imul
push
adc
or
ja
push
mov
scas
bound
loope
call
jle
leave
(bad)
(bad)
xchg
mov
pusha
mov
movs
add
bound
and
je
push
mov
fsubr
adc
mov
dec
imul
dec
aam
aam
ja
data16
sbb
mov
mov
mul
out
xchg
cmps
and
mov
xchg
mov
mov
push
fiadd
dec
xchg
std
retf
shr
ins
pop
mov
pcmpeqw
or
(bad)
ja
rcl
stos
int
es
mov
add
es
psrad
push
xchg
mov
aaa
jp
pop
pop
push
push
sub
into
repnz
pop
sbb
or
push
push
jns
fsubr
mov
pushf
xchg
(bad)
jnp
aaa
mov
loopne
sub
(bad)
shl
and
hlt
dec
adc
inc
push
clc
outs
jl
in
or
mov
add
sbb
call
call
imul
mov
cs
(bad)
cmps
rol
js
xor
je
push
pop
jmp
mov
jmp
pop
cmp
jle
outs
jecxz
xchg
or
mov
jnp
push
inc
adc
stc
dec
xor
and
js
xor
popa
(bad)
pop
daa
daa
out
inc
lea
fidiv
pop
call
inc
lahf
mov
pop
out
xchg
imul
jno
cmps
stos
xor
jge
ss
sti
out
scas
add
inc
inc
mov
out
xchg
nop
cmp
jnp
sub
ret
mov
pop
adc
rep
aaa
xchg
imul
push
popa
adc
cmp
sti
sub
mov
fsub
pusha
daa
sti
arpl
sbb
cmps
jnp
imul
aad
cmp
mov
cmps
adc
sbb
jae
pusha
cmp
jns
push
and
and
dec
sub
mov
bound
or
xor
idiv
cmc
mov
push
inc
sub
cmp
add
in
test
jae
dec
retf
and
mov
sub
ins
out
nop
inc
dec
outs
pop
mov
cs
xor
scas
push
xor
dec
sbb
push
xor
loopne
outs
iret
outs
outs
jae
inc
lahf
push
(bad)
push
hlt
out
cmp
out
popa
scas
or
cld
mov
sbb
outs
jmp
jo
cwde
daa
(bad)
and
sbb
cmp
push
sub
sub
and
add
jg
rcl
and
(bad)
add
enter
(bad)
cli
(bad)
out
add
cmps
cmp
mov
in
inc
ja
inc
mov
jae
loopne
test
and
xor
dec
adc
and
rcl
outs
add
xchg
test
push
lock
jl
lods
sbb
arpl
cs
sub
outs
add
pop
int3
in
icebp
mov
xlat
rdseed
or
repnz
sbb
jg
mov
aam
adc
mov
outs
fcomi
jge
jle
sahf
dec
loopne
mov
(bad)
fs
dec
and
loop
adc
mov
or
out
add
in
ss
jae
or
mov
dec
sub
jo
jmp
fistp
cmp
push
xchg
not
test
lods
xor
mov
inc
sbb
pop
xor
and
sbb
xchg
jp
(bad)
xchg
or
outs
(bad)
call
push
inc
call
sbb
adc
mov
and
xor
outs
jb
push
push
icebp
inc
jmp
push
xor
ret
xchg
jbe
xor
je
mov
adc
cmps
bound
ins
cmp
hlt
or
cwde
dec
outs
mov
sub
sbb
jmp
shl
aaa
cmp
push
sahf
inc
jo
jns
pusha
xchg
fmul
and
push
dec
push
dec
xchg
xlat
sahf
inc
sub
out
jg
sahf
push
push
cmp
jmp
imul
xchg
inc
iret
stc
mov
pop
aam
repz
addr16
int
call
enter
pop
(bad)
lods
scas
add
dec
sub
or
push
mov
ficom
(bad)
push
call
aaa
(bad)
aam
mov
xchg
jecxz
pop
pop
shl
cld
in
or
(bad)
mov
movaps
push
adc
mov
xchg
mov
and
rol
frstor
jmp
and
mov
mov
push
xchg
sub
aas
jmp
stos
mov
mov
sub
pop
and
cmps
jl
sub
sbb
imul
test
push
adc
add
pop
daa
ret
pop
push
add
cmp
dec
sub
dec
retf
sub
movs
xchg
es
psubusb
lds
ror
retf
inc
add
jae
mov
dec
cdq
dec
adc
pop
leave
sti
xor
lds
fmul
mov
(bad)
mov
pop
push
mov
push
pop
dec
retf
jb
add
int3
pusha
aaa
mov
push
dec
or
add
repz
mov
jmp
inc
fwait
sahf
test
into
push
xor
das
pop
ret
push
push
out
xlat
sbb
loopne
jg
into
sbb
shl
pop
sbb
ret
lds
hlt
aad
dec
loop
xchg
xchg
sbb
js
xchg
jb
dec
pop
lahf
into
adc
fld
nop
inc
sub
ins
rcl
outs
iret
sbb
push
pop
mov
push
xchg
rcl
inc
rcr
sahf
aam
clc
imul
sbb
adc
iret
loopne
xchg
cmps
dec
mov
mov
arpl
pop
mov
xor
sbb
xlat
jnp
sub
dec
push
ret
and
and
retf
jge
pop
jle
push
in
xchg
jmp
xor
dec
xchg
btc
push
test
jmp
mov
push
sub
rcr
data16
cmps
mov
mov
ja
outs
pop
fwait
add
in
sub
loop
and
imul
xchg
out
cld
(bad)
ins
mov
call
(bad)
fist
or
scas
imul
dec
jb
and
(bad)
(bad)
push
mov
xor
jecxz
jae
aad
mov
stos
ja
addr16
ficom
mov
(bad)
fld
dec
cmc
pop
or
rcl
shl
pop
ret
jmp
xor
jmp
and
out
xlat
jecxz
cs
jecxz
into
pop
outs
stos
pop
mov
mov
retf
sti
(bad)
sub
inc
mov
mov
ja
adc
mov
pop
sub
cmp
mov
pushf
pop
sar
xor
and
es
sti
lahf
mov
cmp
jle
cs
dec
xchg
xchg
push
jb
dec
aaa
adc
pop
fld
sub
jg
or
adc
cmps
mov
jns
sub
xchg
sti
iret
lds
xchg
pop
xor
shl
imul
(bad)
dec
jle
and
lahf
mov
lds
inc
add
daa
and
fisttp
dec
cmp
dec
je
das
pusha
mov
cmps
mov
mov
or
ins
mov
fwait
and
fidivr
pop
addr16
out
xchg
mov
jmp
xchg
out
aam
pop
aaa
adc
pop
xor
sub
imul
add
sbb
pop
fwait
or
(bad)
mov
out
div
call
repnz
xchg
stos
dec
fstp
stos
sahf
inc
mov
xchg
daa
and
pop
ret
cli
cmp
das
adc
dec
inc
xchg
adc
sub
dec
jmp
sti
mov
(bad)
lahf
movs
sub
xor
mov
pop
mov
scas
loopne
mov
inc
mov
shr
or
aas
add
jg
xchg
ja
bound
cmp
cmp
popa
retf
mov
cmp
pop
xlat
pop
(bad)
fwait
mov
jecxz
xchg
mov
stos
xor
stc
push
add
xor
mov
mov
repnz
mov
and
in
out
in
add
call
adc
mov
(bad)
xor
xchg
jnp
and
jecxz
cli
jns
hlt
xlat
xchg
dec
imul
mov
pop
ret
iret
mov
xchg
gs
fistp
push
xchg
sbb
inc
(bad)
jp
sbb
xchg
cmps
sub
pop
rcr
push
mov
jae
adc
mov
fisttp
(bad)
push
xchg
sub
push
pop
outs
es
and
(bad)
jo
cs
(bad)
sub
mov
dec
xchg
sub
xlat
(bad)
rcr
cmp
sub
inc
movs
mov
scas
sahf
call
ins
outs
xor
xchg
data16
cmps
sbb
imul
pop
adc
jmp
pop
and
daa
sub
inc
xlat
dec
and
pop
retf
jg
js
ja
addr16
scas
inc
jmp
sti
push
pop
repz
jecxz
inc
sbb
loope
xchg
jns
sub
call
daa
retf
call
or
scas
(bad)
imul
arpl
push
(bad)
jb
aaa
adc
xor
pop
sub
cmp
inc
movs
mov
popa
bndldx
xor
sar
(bad)
lahf
dec
pop
or
rcr
lahf
push
aaa
dec
and
inc
push
aaa
test
xor
push
aas
push
cmp
mul
mov
inc
or
xchg
and
mov
push
pop
ror
dec
push
sub
rcl
and
inc
test
or
dec
cmp
cwde
push
movs
jno
dec
(bad)
cli
add
xor
sub
pop
mov
add
fisttp
(bad)
not
ret
sub
push
ss
xchg
mov
push
out
or
stos
xor
les
jg
idiv
pop
pop
js
xchg
sub
aam
pop
idiv
mov
lods
mov
test
inc
(bad)
or
push
cmps
add
daa
and
mov
inc
loop
mov
mov
pop
je
xchg
inc
mov
imul
push
fdivr
stos
lahf
inc
jmp
mov
fild
fbld
imul
add
test
(bad)
(bad)
popf
retf
xchg
sub
retf
sti
ja
pushf
xchg
pop
jnp
cmp
cmp
fwait
or
daa
mov
sti
ja
not
jb
pop
jle
xchg
repz
das
fstp
ret
stos
jle
addr16
mov
adc
pop
mov
mov
sbb
ja
pop
mov
xchg
xor
add
out
xor
scas
leave
sub
les
push
xchg
push
and
rcr
or
mov
inc
jmp
sti
jno
call
or
pop
les
jg
push
out
cli
mov
inc
mov
iret
or
xor
out
xlat
pop
(bad)
ss
pop
loop
std
pop
inc
out
(bad)
cmp
push
jae
retfw
cli
loope
dec
adc
and
and
xlat
pop
sub
mov
ror
push
js
ja
fcom
add
add
jbe
fild
jecxz
mov
mov
push
das
adc
xchg
sub
cmps
mov
out
xlat
pop
xchg
add
(bad)
ret
outs
addr16
add
push
cmps
push
pop
stos
inc
push
sbb
mov
les
xchg
cmp
loop
xchg
dec
xchg
cmp
jno
aaa
addr16
cmp
push
inc
out
jbe
neg
sub
pop
inc
out
mov
addr16
jecxz
scas
sub
call
hlt
sub
cmps
mov
add
std
ja
push
loopne
(bad)
inc
jmp
(bad)
iret
xor
sar
mov
sub
cmp
add
push
mov
retf
xlat
stos
loopne
xor
mov
in
push
sub
push
cli
and
loopne
and
je
rcr
inc
hlt
sub
lods
push
aas
sub
loopne
mov
and
jmp
outs
cmps
mov
neg
cmp
mov
ror
mov
push
pusha
aaa
mov
ins
jo
jle
hlt
xlat
sbb
imul
sub
cmps
xchg
retf
mov
mov
push
lahf
push
aam
fbld
xchg
daa
xchg
pop
and
fwait
or
push
mov
or
mov
sbb
stos
repz
xchg
xchg
push
ja
pop
push
sbb
inc
retfw
sti
loope
addr16
aam
les
jge
jnp
sbb
(bad)
xchg
stos
mov
push
sub
jbe
xor
and
in
idiv
out
lods
in
xchg
xor
xchg
push
xchg
pop
ret
ss
test
scas
adc
add
pop
sub
retf
sub
dec
jnp
push
js
sub
cwde
arpl
pop
retfw
jbe
inc
or
cmps
or
verw
shr
dec
rcl
jnp
es
call
rcr
retf
rcr
jbe
cmps
pop
mov
daa
sub
push
mov
or
jo
sti
pop
sahf
cld
sub
fistp
pop
sub
cmp
cmp
test
retf
fwait
sahf
stos
cmp
bound
pop
ret
jle
push
sub
xchg
mov
dec
mov
push
mov
dec
push
ficom
add
cmp
fistp
push
mov
(bad)
in
pop
mov
mov
jae
xchg
es
inc
(bad)
je
pop
scas
or
xlat
les
fcmovnb
sub
in
push
sub
mov
cmps
or
cli
mov
xor
call
pop
outs
xor
push
push
push
cmp
cmp
cmps
push
imul
mov
fwait
push
ficomp
dec
adc
jbe
retf
push
daa
push
aam
les
cs
sub
retf
inc
pop
cmps
cmps
xor
nop
or
div
adc
sbb
cwde
mov
add
call
repz
push
outs
or
sbb
mov
cmps
xchg
(bad)
xchg
and
in
je
push
inc
scas
retf
mov
inc
(bad)
movs
cmp
xchg
mov
cmps
dec
rcr
aam
sub
jmp
push
out
pop
cmp
jnp
sbb
jmp
retf
add
adc
aaa
stos
fdiv
push
sbb
outs
push
jbe
pop
arpl
(bad)
xchg
dec
div
dec
mov
add
mov
and
push
cmps
pop
(bad)
out
adc
mov
mov
fs
cwde
jge
dec
outs
or
shr
int
ficomp
jnp
mov
xchg
mov
add
jmp
pop
outs
mul
dec
fcomp
das
imul
jecxz
rcl
fisubr
adc
pop
addr16
es
push
lahf
push
outs
push
sbb
adc
(bad)
outs
cmp
dec
retf
pop
ja
mov
fnstsw
adc
lods
add
sub
cmc
cmps
repz
pop
mov
jle
xor
dec
out
or
push
mov
aaa
xchg
fwait
sub
mov
pop
or
test
(bad)
faddp
cmp
test
push
inc
push
push
mov
push
fisttp
dec
loop
out
push
in
(bad)
pop
aas
jnp
dec
int3
cs
push
inc
mov
push
repz
add
je
inc
ret
clc
mov
cmp
cmp
jnp
dec
push
push
xchg
jne
data16
fs
lahf
enter
add
clc
adc
xchg
cmp
push
outs
(bad)
ja
pcmpeqb
mov
retf
pop
lahf
sti
js
mov
out
jecxz
add
xchg
ja
jmp
adc
retf
out
sub
cmp
nop
mov
xchg
jnp
mov
js
aaa
jae
fidiv
cwde
call
(bad)
jecxz
retf
ss
add
xor
xchg
add
out
retf
repz
outs
jbe
rol
ror
sar
adc
pushf
retf
dec
mov
pushf
and
ror
imul
fist
and
leave
test
out
add
xchg
aad
cmp
or
dec
and
jmp
adc
fcmovu
xor
pop
ja
dec
sti
mov
xlat
les
ds
bound
pop
fcmovb
loop
test
fsubr
jg
ja
pop
adc
adc
sti
lods
dec
xlat
sbb
ret
xchg
mov
enter
push
cwde
pop
sbb
ja
retf
and
jne
ret
sub
dec
xchg
ds
pop
rcl
test
xor
adc
mov
cmps
cmp
pop
ins
mov
xchg
jle
inc
daa
addr16
mov
into
cwde
add
mov
bound
lods
mov
jl
fmul
aas
sbb
rcr
cmp
xor
pop
popf
inc
pusha
iret
(bad)
fdiv
inc
fistp
sti
fsubr
sub
shl
jmp
mov
add
sub
inc
repnz
nop
add
retf
push
ins
add
ja
xchg
xchg
test
daa
retf
jle
push
jle
mov
dec
stos
xor
imul
push
inc
xchg
pop
js
cs
pop
add
or
mov
test
iret
sbb
pop
fadd
scas
cld
(bad)
mov
push
mov
jmp
push
xlat
sbb
les
shr
lods
mov
bsr
mov
(bad)
xlat
jmp
mov
mov
adc
push
aaa
jmp
cmps
jp
out
cmp
dec
jg
iret
test
imul
stos
jmp
sti
sub
ins
dec
cmp
mov
sbb
ins
mov
pop
dec
outs
pushf
xchg
or
xor
fcom
daa
ret
add
outs
leave
cmps
or
jmp
lock
ror
sub
xchg
cdq
and
ja
(bad)
fild
cmp
mov
scas
rcr
xlat
push
hlt
call
jecxz
test
jo
jge
jle
sbb
jnp
fcomi
push
jg
mov
adc
inc
pop
ret
call
outs
mov
cli
outs
cmps
into
test
dec
and
jmp
jmp
sub
loope
outs
xchg
(bad)
jae
jne
cli
adc
add
or
(bad)
stos
hlt
and
(bad)
call
xchg
ret
xchg
push
xchg
mul
push
push
and
dec
mov
xlat
nop
(bad)
loopne
(bad)
and
test
stc
js
xchg
or
xor
or
mov
out
and
pop
repz
sti
loope
call
dec
fstp
sbb
cmps
sub
push
ja
pop
push
and
xor
pop
sbb
repnz
pop
jnp
das
cli
lahf
and
sbb
and
enter
xchg
es
and
hlt
cmp
sbb
ret
cdq
sti
ja
push
ja
adc
aaa
rep
repnz
push
mov
jle
or
movs
repz
xor
int
jle
(bad)
fbstp
fs
call
push
fsubr
or
mov
mov
mov
sub
mov
inc
popf
or
(bad)
stc
je
add
out
rcl
pop
mov
daa
jb
mov
jb
ficomp
es
(bad)
pop
mov
div
mov
jnp
pop
ja
out
jg
inc
pusha
pushf
push
dec
scas
push
sbb
jb
mov
xor
jmp
cli
rcr
imul
sub
mov
push
popf
xor
cmp
sar
icebp
or
and
inc
mov
xor
aaa
jo
retf
popa
sub
jmp
dec
imul
push
jmp
imul
mov
aaa
add
iret
(bad)
das
push
jae
lods
dec
xchg
pop
js
cld
out
neg
adc
popf
pop
xchg
mov
or
in
jle
repz
shl
or
push
dec
cli
fadd
in
ss
pop
push
imul
loop
adc
ins
xchg
call
xlat
leave
add
retf
xchg
rol
in
pop
jg
or
(bad)
cmp
loop
xchg
xchg
ficomp
ja
mov
mov
neg
fbld
mov
mov
jb
(bad)
int
mov
cs
pop
xchg
mov
je
push
fist
push
xor
addr16
stos
push
jo
xor
fisub
jmp
cli
sub
or
(bad)
ror
fwait
sbb
cmp
cmps
enter
out
ja
mov
(bad)
out
pop
aas
dec
stos
xchg
push
aas
xchg
mov
lea
dec
fwait
(bad)
pop
repnz
ja
xchg
cs
add
call
xchg
pop
sbb
dec
ficomp
shr
cs
mov
sti
cmps
repz
xor
imul
lock
fs
and
cmp
sub
dec
or
xchg
mov
retf
pop
rol
daa
mov
add
mov
(bad)
mov
xchg
fwait
ss
stos
jo
add
daa
shl
ins
retf
pop
cmps
push
jle
xchg
(bad)
outs
(bad)
jnp
mov
(bad)
and
cld
push
add
daa
sti
push
fist
cwde
je
jl
out
aad
dec
loopne
ja
ret
and
scas
inc
cmp
nop
xchg
pop
jge
push
sbb
xchg
pop
sub
cwde
iret
push
push
arpl
sub
out
call
pop
inc
mov
ds
rol
push
push
mov
scas
retf
bound
idiv
pop
out
in
repnz
rcl
cld
push
fwait
pop
dec
pop
or
jmp
or
push
add
adc
xchg
xchg
lock
in
adc
fcom
lods
nop
out
sbb
jl
ins
sbb
loopne
and
xchg
mov
mov
inc
pop
pop
pop
mov
xlat
in
xor
lods
xchg
adc
(bad)
inc
jmp
adc
sbb
inc
stos
cmp
imul
rcl
cmps
add
lods
fld
pop
hlt
mov
test
(bad)
sbb
lock
fiadd
shr
mov
cld
push
and
xchg
sbb
xor
cmp
rol
popa
aaa
push
scas
pusha
jl
test
out
xchg
add
mov
jne
mov
(bad)
retf
jg
das
inc
pop
int
bound
inc
mov
pop
cli
(bad)
arpl
sub
push
push
inc
pusha
mov
adc
jecxz
sti
movs
bnd
aaa
in
retf
imul
mov
cld
shl
sbb
out
push
mov
jecxz
repz
(bad)
dec
xchg
pop
mov
pop
aam
test
pop
add
jmp
jmp
xlat
mov
daa
aas
iret
imul
sub
movs
movs
mov
je
fwait
xor
jnp
push
sub
mov
or
pop
dec
xchg
push
js
ja
jb
xchg
push
inc
data16
jo
add
fyl2x
fist
int
or
dec
sbb
jg
xchg
sub
inc
in
sahf
adc
cmp
push
call
sti
push
adc
mov
sar
mov
fiadd
stos
fld
xchg
add
inc
imul
dec
sbb
es
and
mov
aaa
or
xchg
in
mov
mov
and
sti
xchg
out
retf
dec
shl
into
hlt
mov
in
inc
repz
sub
xlat
xor
jp
jle
ret
aad
(bad)
mov
jns
push
sub
mov
add
mov
inc
jmp
clc
inc
add
mov
loopne
(bad)
aam
xchg
or
stos
pop
add
(bad)
jb
adc
jb
cli
jg
and
ja
out
(bad)
push
mov
arpl
fcmovne
sub
adc
inc
or
sbb
aas
pop
(bad)
xchg
cmp
(bad)
push
mov
push
adc
int3
bound
lods
scas
test
or
xor
out
xchg
(bad)
outs
ret
test
xchg
cs
inc
and
jp
aam
or
sti
and
out
ja
ins
pop
shr
dec
xchg
push
dec
das
pop
stc
out
fwait
inc
and
pop
xchg
(bad)
mov
fild
or
imul
nop
cmp
cmps
test
repz
xor
aaa
sub
jb
or
fild
xor
xchg
xchg
dec
loopne
mov
xchg
cmps
icebp
or
jae
jp
shl
test
bound
out
mov
enter
call
dec
out
pandn
cmps
jo
fwait
js
(bad)
jp
sti
mov
jg
mov
cmc
retf
jmp
in
outs
cld
pop
mov
pop
or
(bad)
out
les
push
test
push
or
mov
cmovg
cmps
inc
mov
mov
int3
out
xor
push
iret
pop
mov
out
dec
dec
sub
push
in
and
inc
inc
cld
push
pop
in
jle
hlt
in
nop
adc
ds
inc
sbb
les
jae
ja
ins
xchg
into
mov
add
pop
fiadd
sub
bnd
sbb
mov
cmps
dec
leave
push
or
add
pop
jecxz
jo
mov
sti
inc
aas
in
push
cmp
mov
out
xor
push
fs
lods
mov
push
pop
pop
or
out
adc
fisubr
dec
in
retf
into
pop
add
xchg
aaa
mov
jecxz
fisttp
ret
jl
xchg
push
outs
add
push
mov
je
inc
inc
pusha
mov
push
pop
jle
xor
jnp
nop
dec
cmp
push
mov
aad
out
add
and
aaa
xchg
adc
xor
(bad)
popa
xchg
outs
lds
jne
dec
lahf
push
mov
or
sahf
adc
pop
dec
push
and
ret
outs
hlt
push
and
dec
xlat
test
cli
mov
test
xor
and
repz
scas
push
out
xchg
ret
rol
inc
movs
push
leave
je
adc
add
sahf
inc
xor
xchg
imul
or
imul
push
fiadd
sahf
mov
sbb
nop
shl
ret
push
mov
pop
mov
xor
add
mov
xor
pop
(bad)
iret
or
xchg
push
xchg
fisttp
xor
nop
push
sub
add
inc
pop
inc
or
scas
shl
jnp
dec
add
movs
repnz
ss
mov
ins
push
addr16
retf
call
jg
pop
mov
(bad)
xor
mov
repz
ja
mov
into
jmp
out
cmps
(bad)
pop
aaa
mov
push
mov
arpl
in
or
jo
mov
adc
jbe
mov
jp
stos
movs
xor
cmp
mov
jmp
cmp
je
repz
xor
jne
loopne
add
icebp
xchg
das
cmp
add
pop
stos
test
addr16
fwait
int3
push
mov
and
in
pop
jg
out
sub
ja
stos
mov
(bad)
fadd
adc
repnz
push
fcom
daa
retf
push
fild
sti
hlt
mov
loopne
jmp
imul
mov
inc
pusha
mov
mov
sbb
xlat
xor
aad
push
stos
call
rol
inc
sahf
retf
pop
jge
jle
hlt
push
retf
nop
stos
jecxz
aam
xchg
daa
cmp
push
xchg
pushf
inc
lahf
mov
xor
hlt
rcr
scas
imul
inc
mov
pop
(bad)
stos
xor
fst
inc
adc
sub
or
add
shr
xlat
in
imul
pop
dec
xchg
mov
and
fisubr
clc
jl
jp
hlt
rcr
dec
imul
mov
arpl
icebp
inc
adc
sti
data16
fiadd
dec
idiv
or
aas
dec
sbb
in
stos
mov
addr16
inc
jmp
sti
(bad)
adc
aam
mov
add
cwde
js
ja
addr16
call
dec
sbb
add
mov
iret
dec
sub
dec
mov
pop
inc
mov
xchg
or
call
xchg
pop
imul
or
xor
sub
pop
imul
mov
xor
push
out
stos
mov
mov
inc
add
fld
jno
mov
jnp
call
js
rcl
fucomi
sar
pop
sub
repz
xchg
jae
test
and
out
pop
mov
inc
cmps
aaa
and
retf
jb
cmp
imul
xchg
sub
dec
call
mov
(bad)
out
cmp
call
add
mov
ret
stos
push
dec
mov
daa
add
cmp
or
sbb
test
pop
xchg
push
pop
mov
rcr
mov
add
pop
add
into
aas
fwait
test
outs
sti
daa
xor
gs
inc
idiv
aaa
push
xlat
sbb
imul
iret
dec
push
mov
stos
ja
test
repz
sub
mov
mov
lahf
cmp
mov
(bad)
retf
mov
loop
xchg
cwde
push
bnd
retf
mov
das
jmp
sub
pop
pop
pop
test
inc
(bad)
imul
push
call
jns
mov
add
pushf
sub
sub
int
cwde
(bad)
loop
jnp
sbb
fs
mov
retf
out
lahf
push
mov
ret
cmp
lock
pop
stos
xchg
push
xchg
inc
inc
lahf
leave
out
pop
sub
pop
dec
outs
xchg
pop
push
jmp
inc
mov
mov
inc
xchg
daa
sub
in
xor
shl
pop
inc
push
scas
and
jecxz
or
and
pop
sbb
mov
pop
mov
ja
push
out
pop
mov
mov
adc
popaw
(bad)
pop
inc
cmp
movs
inc
cmp
aam
je
bound
jb
daa
cmp
shr
push
mov
cmp
dec
rcr
out
dec
cmp
(bad)
fisttp
push
jae
inc
mov
aam
xchg
mov
cmps
mov
ror
mov
in
xor
xchg
fwait
add
push
push
push
sub
cmp
mov
sub
rcr
jg
in
and
mov
sti
daa
xchg
out
push
inc
mov
xchg
hlt
scas
mov
fcmovnb
stos
and
and
and
pop
call
call
sub
dec
fwait
bnd
dec
push
inc
fld
leave
add
pop
add
ficom
lahf
pop
fnstcw
adc
das
ds
dec
push
mov
aas
enter
dec
dec
aaa
adc
mov
arpl
sbb
out
dec
addr16
movs
ja
add
xchg
adc
popf
mov
cld
pop
ffree
outs
div
mov
cwde
into
jnp
mov
push
xchg
add
inc
jmp
add
or
push
pop
sub
outs
(bad)
xchg
repnz
pop
sbb
daa
inc
xchg
inc
stc
pop
pop
cmp
or
ins
imul
pop
cmp
jnp
mov
cwde
arpl
adc
or
ins
sbb
xchg
out
xchg
repz
lea
ficom
je
push
inc
adc
out
jns
inc
das
pop
sub
or
enter
xchg
mov
mov
imul
xchg
cmp
daa
push
xor
sub
mov
inc
daa
sbb
fwait
mov
int
xchg
add
and
pop
stos
add
daa
inc
in
shl
cmp
jp
seta
stos
lahf
mov
sahf
push
jae
cmp
popf
add
and
ja
xor
pop
add
xchg
loop
xchg
pop
xchg
repz
data16
test
inc
adc
cdq
icebp
call
aaa
daa
stos
pop
dec
(bad)
cs
sub
push
pop
jnp
mov
(bad)
fist
mov
call
xchg
pop
sbb
dec
adc
fidivr
mov
stos
repz
push
daa
rcl
jg
stc
call
mov
ror
push
or
iret
fisubr
adc
pop
(bad)
retf
adc
push
sub
test
das
pop
sub
push
rcr
xchg
cmp
stos
daa
adc
sahf
mov
xor
pop
imul
sub
pop
outs
push
jbe
addr16
aaa
jb
retf
clc
not
mov
(bad)
cmp
repz
cmps
push
push
pop
outs
std
and
les
call
xchg
mov
loopne
and
hlt
ss
mov
inc
push
stc
pop
fcomp
xor
mov
sub
dec
dec
addr16
or
cld
(bad)
je
push
call
jns
mov
sti
cmc
mov
loopne
lock
xchg
add
mov
idiv
xchg
(bad)
(bad)
sub
dec
les
sahf
push
jnp
mov
scas
imul
inc
sbb
jo
inc
push
leave
pop
jb
fwait
out
adc
nop
pop
dec
lock
pop
add
in
iret
(bad)
push
jmp
cli
dec
retf
push
sbb
jl
les
aad
xor
xchg
sub
jnp
aam
pop
mov
jne
aas
clc
jp
fwait
out
adc
xchg
add
inc
mov
mov
push
inc
inc
scas
mov
(bad)
sub
(bad)
or
sahf
imul
xchg
loop
mov
mov
pop
sti
in
dec
fild
dec
mul
or
mov
stos
dec
rcr
out
stos
mov
mov
inc
add
fadd
jno
mov
jnp
jg
gs
js
rcl
cmps
jmp
mov
pop
sub
aas
out
xchg
jae
test
and
out
pop
mov
inc
aaa
aaa
and
retf
cmp
imul
xchg
pop
xchg
cdq
ret
mov
icebp
mov
(bad)
in
cmp
fwait
xlat
add
mov
adc
xchg
push
push
jmp
jg
add
cmp
or
jnp
test
pop
xchg
ja
and
push
pop
mov
rcr
mov
add
inc
add
into
aas
fwait
test
outs
sti
daa
xor
gs
inc
idiv
ss
xlat
sbb
imul
iret
dec
push
mov
stos
ja
test
repz
sub
mov
mov
lahf
cmp
mov
mov
xchg
cwde
push
bnd
sub
hlt
sub
pop
xchg
retf
mov
imul
rcl
js
xchg
and
jmp
add
(bad)
adc
mov
(bad)
das
cmp
popa
packssdw
js
xchg
mov
push
popf
lahf
inc
jl
jle
push
adc
adc
(bad)
fcmovne
bound
ja
js
push
add
sub
retf
out
ret
es
addps
cs
inc
out
jnp
fs
mov
fsubrp
inc
popw
xchg
and
xlat
push
(bad)
push
aas
ficom
cmps
mov
in
pop
push
ficom
mov
push
lahf
pop
sub
xchg
(bad)
xor
imul
mov
mov
(bad)
lahf
ja
daa
mov
adc
xlat
sbb
jmp
mov
arpl
add
repz
je
into
(bad)
enter
jecxz
dec
sahf
xchg
cmp
outs
add
sbb
push
int3
pop
push
out
fild
mov
dec
hlt
and
xchg
jnp
or
pusha
mov
sub
dec
pop
push
pop
jecxz
rcr
or
out
mov
mov
xchg
mov
pop
pusha
mov
sub
add
bound
sub
jg
dec
iret
sbb
pop
xchg
push
inc
repnz
cmp
mov
mov
clc
ds
out
ret
scas
out
ins
(bad)
seta
daa
fnsave
jo
retf
jge
pop
jle
(bad)
lock
xchg
sbb
add
inc
ret
scas
in
aam
icebp
push
jmp
xor
inc
lahf
pop
(bad)
lahf
cmp
or
test
mov
inc
xchg
add
fist
push
cmps
mov
sbb
pop
inc
mov
into
dec
das
out
ja
jp
fbstp
retf
in
sub
loop
and
cmp
mov
pop
in
mov
(bad)
cmp
fs
in
xchg
pop
xor
jl
les
push
mov
outs
cmps
mov
mov
or
jno
pop
fwait
por
mov
pop
mul
mov
aam
(bad)
xchg
push
aad
(bad)
adc
pop
xor
sub
pop
imul
add
xor
arpl
or
(bad)
sti
into
(bad)
mov
out
cmp
xlat
repnz
xchg
mov
ficomp
stos
sahf
inc
mov
pop
daa
and
pop
ret
loope
stos
or
sbb
das
adc
dec
pop
xchg
pop
xchg
ja
and
push
jae
jmp
sti
iret
retf
(bad)
lahf
movs
sub
and
inc
xlat
pop
mov
sar
scas
repz
mov
retf
pop
xor
not
dec
popf
sbb
dec
jg
xchg
ja
bound
cmp
das
sti
outs
retf
xlat
fucomi
outs
push
cmp
adc
push
(bad)
pop
mov
jecxz
xchg
mov
stos
ds
in
fucomip
daa
adc
pop
ret
out
iret
sbb
sysenter
pop
outs
mov
push
jb
dec
aaa
adc
retf
push
fld
sub
jg
or
or
cmps
mov
popa
mov
scas
scas
xchg
sti
iret
fst
popf
pop
xlat
not
mov
imul
push
push
ja
pcmpeqb
repz
mov
fild
je
or
xchg
nop
and
ds
jmp
je
call
inc
push
clc
sub
cmp
mov
xchg
and
mov
xchg
fwait
int3
sahf
jae
es
lahf
jp
ds
out
xlat
cwde
and
mov
xchg
add
mov
retf
dec
xor
rcl
push
or
cld
mov
or
arpl
clc
jp
imul
daa
retf
(bad)
sub
cs
(bad)
push
inc
aas
jbe
test
cdq
pop
bound
mov
daa
xchg
sahf
(bad)
mov
push
xchg
scas
or
out
inc
sti
and
inc
daa
sahf
mov
repz
(bad)
mov
sub
imul
jbe
push
sti
sbb
ror
fmul
call
cmp
dec
cs
ret
jnp
and
mov
fwait
xor
inc
and
jge
dec
out
jbe
nop
sbb
nop
cs
loop
shl
jg
add
pop
call
(bad)
sbb
test
loop
sub
sbb
mov
dec
imul
dec
fsub
bound
in
ss
push
jae
and
stos
inc
mov
dec
and
xchg
and
inc
and
jle
or
fisttp
sbb
arpl
imul
ja
loop
xchg
pop
scas
pusha
lock
mov
in
in
test
mov
mov
push
mov
pop
pusha
mov
fsubr
cmc
push
call
push
xchg
or
inc
sahf
aas
jb
inc
out
push
mov
or
push
cmp
dec
jo
sar
fsub
add
shl
xchg
jae
mul
mov
mov
dec
das
pop
(bad)
and
pop
(bad)
cmp
mul
je
mov
sub
mov
push
xchg
dec
mov
mov
sub
sbb
mov
fdivr
test
data16
(bad)
push
(bad)
sbb
outs
jecxz
jnp
xchg
aas
fwait
stc
and
outs
fild
not
mov
xlat
repz
dec
jg
in
stos
mov
push
fwait
sub
call
sbb
sbb
imul
inc
sti
add
cwde
dec
push
sbb
aaa
pop
jns
bound
outs
xor
mov
xchg
sbb
call
inc
pop
outs
cli
ja
addr16
fdiv
ret
retf
pushf
lahf
mov
cmp
test
sub
mov
dec
mov
push
data16
adc
pusha
jb
daa
xchg
push
pop
pop
outs
xor
mov
sub
dec
dec
addr16
or
cld
(bad)
jge
push
call
cmp
ds
cmc
mov
loopne
lock
xchg
add
mov
mov
pusha
and
jmp
sub
dec
into
sbb
mov
scas
imul
inc
sbb
jo
inc
push
ret
neg
xchg
add
inc
mov
mov
push
inc
inc
scas
mov
(bad)
sub
adc
cmp
pop
out
stos
leave
jne
je
fisttp
jmp
cmp
xchg
pop
(bad)
or
sahf
imul
xchg
loop
mov
mov
pop
sti
in
dec
fild
pop
mul
or
mov
push
dec
rcr
out
stos
mov
mov
inc
add
fadd
jno
mov
jnp
mov
ja
stos
rcl
stos
jmp
mov
pop
sub
jmp
test
and
out
pop
mov
inc
aaa
aaa
and
retf
cmp
imul
xchg
jmp
test
shl
cdq
ret
cmps
sti
icebp
mov
(bad)
in
cmp
ja
add
mov
jmp
xchg
push
push
jmp
ja
add
cmp
or
mov
fistp
test
pop
xchg
ja
and
push
pop
xchg
mov
sti
dec
retf
rcr
mov
add
inc
add
into
aas
fwait
test
outs
sti
daa
pop
pop
gs
inc
idiv
ss
xlat
sbb
imul
iret
dec
push
mov
stos
ja
test
repz
sub
mov
mov
lahf
cmp
mov
mov
xchg
cwde
push
bnd
xor
hlt
push
pop
cwde
out
adc
fcomp
(bad)
lods
inc
mov
retf
mov
retf
add
(bad)
jnp
(bad)
push
sub
inc
(bad)
lahf
pop
(bad)
stos
xor
adc
scas
scas
enter
push
and
cmps
loop
out
shl
imul
sbb
fstp
(bad)
mov
xor
push
(bad)
inc
sub
(bad)
dec
retf
and
push
jns
(bad)
and
test
add
(bad)
dec
adc
div
ins
mov
loop
sub
push
or
aaa
fist
retf
pop
adc
pop
and
aam
std
sbb
pop
call
into
(bad)
arpl
fisub
lock
pop
sub
add
outs
mov
dec
(bad)
cmps
mov
iret
xor
ds
push
pop
inc
adc
sti
loope
call
mov
dec
sub
cmp
mov
dec
dec
xchg
pop
and
aad
in
int3
sbb
cmps
arpl
mov
push
xchg
sub
aas
jmp
in
inc
iret
sbb
add
jae
ja
pop
push
cmps
sub
cmp
int
sbb
cmp
jnp
jmp
data16
outs
dec
jmp
lods
fadd
call
movaps
xchg
es
jp
pop
xchg
cmps
ret
test
adc
je
pop
and
ret
test
fcomip
dec
xchg
cmp
pminub
fsub
jmp
cmp
push
mov
push
add
or
imul
mov
push
and
xchg
jmp
mov
adc
inc
sbb
and
xchg
in
out
sub
ret
mov
push
sub
mov
mov
test
in
dec
imul
sbb
hlt
pop
fld
xor
xlat
xchg
sbb
xchg
xchg
pop
dec
cs
sub
jg
push
(bad)
aaa
add
rol
mov
std
out
movs
pop
cmp
cmp
push
mov
cmp
stos
cli
mov
dec
adc
(bad)
fxch
jg
call
pop
mov
inc
js
neg
push
mov
je
xchg
retf
daa
xchg
fcomp
clc
sub
(bad)
mov
push
pop
push
ret
inc
ins
iret
test
pop
mov
call
adc
outs
cmp
aas
pop
dec
rcr
push
xchg
addr16
out
out
scas
dec
imul
jae
outs
lahf
pop
and
sub
xchg
cmp
ret
out
mov
xchg
stos
iret
jmp
ins
and
pop
out
lods
mov
pop
fstp
cmps
shr
ja
cwde
into
out
call
jge
pop
aam
ss
xlat
dec
pop
jle
adc
sti
mov
xchg
mov
ja
cmp
jbe
xor
daa
loopne
or
arpl
inc
repz
mov
aas
inc
stos
mov
out
mov
jbe
retf
pop
and
cmps
pop
std
mov
xor
(bad)
out
ds
daa
mov
mov
mov
sub
cmps
jle
or
sbb
cmp
push
stos
cld
into
and
addr16
dec
pop
out
movs
inc
call
stc
jno
loopne
jecxz
xchg
(bad)
xlat
stos
cli
push
mov
cmps
and
mov
sahf
inc
sub
hlt
sbb
cmps
adc
ja
cwde
mov
and
call
imul
mov
dec
imul
jg
fs
outs
push
fs
sub
aam
cmp
xchg
xchg
ins
jbe
mov
push
ret
push
and
addr16
adc
shl
xor
fist
je
repnz
test
imul
jmp
in
cs
cwde
dec
adc
stos
adc
pushf
pop
jge
jle
adc
dec
stos
jbe
cmps
shl
cld
mov
retf
xor
not
(bad)
ds
mov
sbb
pop
ret
ss
xchg
jo
push
adc
jmp
xchg
or
clc
dec
sub
enter
mov
push
movs
and
out
jae
retf
jmp
add
hlt
adc
and
cmc
mov
push
cli
ret
mov
bound
or
jnp
les
xchg
or
scas
dec
sbb
cmp
iret
xchg
add
inc
xchg
neg
xchg
sbb
and
je
xchg
scas
imul
scas
iret
sub
xacquire
xchg
dec
pcmpeqw
js
jg
addr16
push
int3
jmp
add
retf
outs
sbb
in
out
div
jmp
loopne
adc
aaa
sti
es
(bad)
fild
inc
idiv
mov
cmp
(bad)
movs
fisub
bound
addr16
add
mov
jns
xchg
jmp
das
mov
not
xcrypt-ofb
cmps
sub
push
(bad)
aad
enterw
push
fcom
push
les
or
in
out
div
jmp
arpl
das
int
and
rol
(bad)
and
rol
(bad)
(bad)
(bad)
stos
push
adc
adc
xlat
mov
mov
mov
imul
xor
xor
loope
adc
mov
jle
xchg
cmc
sub
xchg
jne
rcl
movs
repnz
add
xor
sub
fsubr
xor
xor
jnp
or
cmp
adc
aas
add
ret
jmp
mov
mov
sbb
inc
mov
stc
inc
lahf
push
outs
in
mov
outs
mov
inc
jmp
fcom
scas
ficom
jle
call
imul
test
xor
adc
popf
cmp
hlt
dec
ins
jg
fld
arpl
stos
mov
in
or
inc
test
pop
xor
push
mov
or
sub
dec
movs
shr
cmps
enter
lea
push
add
cmps
pop
std
out
cmp
arpl
pop
inc
fdivrp
sbb
fistp
mov
cmp
and
into
movs
jg
mov
in
imul
add
mov
cwde
mov
inc
fwait
arpl
jg
fld
inc
cmp
push
pop
repz
push
outs
pop
dec
xchg
movs
jecxz
jg
cmps
dec
xchg
call
pop
ror
ror
arpl
mov
imul
(bad)
scas
xor
sahf
jb
cmp
jecxz
push
pop
dec
push
lods
das
js
dec
(bad)
mov
outs
mov
scas
inc
shr
or
mov
push
adc
out
mov
(bad)
sbb
sbb
pop
ret
jge
mov
mov
outs
stc
xor
xchg
adc
push
pop
cdq
(bad)
aam
cmp
es
pop
and
mov
inc
mov
call
cmp
pop
ret
imul
dec
push
inc
outs
addr16
inc
scas
aaa
mov
retf
aaa
fstp
or
in
out
test
push
mov
cmps
push
fcmove
push
data16
arpl
and
aam
cmp
pop
mov
retf
mov
aaa
fmul
adc
mov
adc
jecxz
aas
sbb
popf
mov
cmps
mov
push
or
pop
imul
popa
lods
fcom
idiv
ins
arpl
cmps
shl
ret
bound
(bad)
iret
(bad)
daa
test
aaa
xlat
adc
outs
popf
(bad)
jmp
call
dec
rcr
cld
xchg
into
test
mov
popf
sahf
es
mov
or
adc
bnd
addr16
cmp
add
imul
(bad)
out
xlat
in
xchg
imul
data16
retf
(bad)
addr16
dec
mov
das
xor
mov
or
shl
jno
ret
dec
and
xor
scas
mov
fisub
nop
repz
mov
lock
ficomp
stos
push
mov
sub
add
bound
sub
cmp
or
and
adc
sahf
ret
aaa
pop
daa
xor
sahf
push
jnp
add
or
sbb
dec
push
mov
add
xor
inc
or
push
mov
xchg
mov
and
push
fwait
scas
jmp
add
add
test
imul
test
ja
cwde
xor
inc
sahf
retf
pop
shl
jle
pop
xchg
pop
sahf
imul
xchg
push
mov
add
in
sub
loop
and
cmp
cs
jnp
test
pop
in
mov
aaa
cmp
fs
arpl
not
(bad)
or
sbb
xchg
pop
aas
add
jg
xchg
xor
add
repnz
iret
and
outs
push
cmp
sub
into
(bad)
jae
xchg
jecxz
xchg
mov
stos
mov
(bad)
jmp
fsub
pop
pop
dec
clc
ret
out
hlt
sbb
imul
dec
sysenter
pop
outs
mov
addr16
jb
dec
aaa
adc
retf
(bad)
(bad)
push
jg
or
cmp
mov
sar
xchg
mov
scas
scas
xchg
sti
iret
jmp
mov
imul
mov
pop
and
lahf
cdq
addr16
push
mov
and
les
dec
je
das
dec
mov
cmps
mov
ja
inc
mov
mov
pop
sti
not
loop
mov
ja
cmp
test
push
inc
jecxz
adc
pop
xor
cmp
jae
ds
imul
test
sbb
je
mov
pop
add
(bad)
mov
out
or
cmc
out
sub
or
xchg
xchg
pop
lahf
push
sahf
inc
mov
cmps
fsub
push
js
ret
(bad)
cmp
or
cs
adc
dec
push
xchg
xchg
push
and
push
jae
jmp
sti
aas
xor
ficom
cld
das
or
inc
lods
imul
addr16
rcr
cmp
jmp
jb
out
nop
jle
jnp
ret
imul
sub
dec
daa
jb
ret
push
push
mov
(bad)
fstp
loop
aam
sub
adc
enter
pushf
jo
push
mov
mov
stos
pop
or
ror
and
jmp
lahf
sub
(bad)
cld
cmps
sbb
add
jo
mov
add
pusha
fldln2
aaa
xchg
dec
enter
or
fld
outs
hlt
jne
and
sbb
in
dec
fcomp
mov
scas
icebp
and
or
arpl
sbb
adc
dec
sub
cmp
sbb
lods
cli
cmp
out
and
push
dec
mov
cmp
retf
add
and
sbb
mov
mov
inc
dec
mov
push
das
cmps
add
fs
xor
std
clc
xor
aam
sbb
in
and
xor
into
dec
(bad)
cmps
movs
test
cli
adc
in
in
in
cmp
adc
push
pop
movs
cli
(bad)
sahf
mov
imul
xchg
rol
(bad)
call
pxor
mov
sbb
mov
mov
lock
inc
aam
fistp
sbb
aaa
fst
enter
repnz
dec
xchg
pop
jbe
pusha
mov
or
sbb
xor
mov
cs
xor
cwde
add
xor
cs
hlt
mov
das
int3
arpl
sub
inc
lahf
fimul
mov
and
add
leave
or
cld
sub
sbb
jno
and
fcomi
retf
sbb
(bad)
jecxz
test
xchg
repz
and
xor
add
sub
(bad)
pop
rol
aas
imul
out
cmp
repnz
(bad)
gs
imul
xchg
int3
push
ss
xor
push
ins
or
dec
sbb
fcomi
ss
shr
cmps
add
data16
inc
bound
sti
daa
sbb
sub
or
sbb
xchg
xchg
(bad)
out
jnp
cwde
ficomp
stos
ja
and
inc
in
jb
or
sti
mov
sbb
jp
inc
xchg
push
xlat
mov
jb
inc
out
or
lock
fdivr
push
mov
or
cwde
inc
stos
jo
and
hlt
ds
and
or
inc
mov
jb
scas
stc
aam
rcl
iret
push
dec
ja
inc
adc
(bad)
in
adc
sub
imul
mov
lahf
mov
push
push
shr
ins
push
push
out
sub
xchg
inc
pop
add
mov
bound
fwait
es
(bad)
(bad)
xchg
mov
daa
pop
pop
push
(bad)
sub
xlat
sub
ss
mov
pop
retf
cmp
adc
inc
es
inc
into
inc
in
adc
retf
cmps
xchg
addr16
shl
std
inc
data16
adc
add
mov
outs
or
imul
hlt
pop
sbb
imul
add
pop
pop
xchg
jb
mov
pop
mov
inc
xor
cmps
mov
movs
ret
imul
fwait
aas
jmp
push
sub
mov
sub
es
sub
inc
out
lahf
mov
adc
enter
pushf
xchg
push
stos
xchg
pop
(bad)
test
or
gs
mov
sahf
popf
mov
inc
push
ja
xchg
cmp
jnp
scas
repnz
iret
loopne
into
loope
xchg
rol
add
lods
scas
das
push
ror
fisttp
pop
ja
cmps
ds
pop
js
(bad)
out
out
xchg
fwait
dec
jmp
int
xchg
xlat
jp
mov
push
clc
rcr
mov
xor
dec
movs
mov
out
mov
sub
pushf
mov
cmp
call
lahf
cmps
and
xor
mov
out
sub
scas
jp
jmp
scas
in
movs
fiadd
jmp
ja
xchg
int3
add
xchg
pushf
push
mov
or
stos
repz
pushf
arpl
push
mov
and
retf
inc
add
retf
xchg
fild
sub
das
xchg
add
icebp
pop
pushf
fiadd
mov
fwait
pop
sahf
push
arpl
or
clc
daa
xor
mov
movs
jmp
rol
or
mov
retf
add
pop
push
mov
retf
pop
inc
test
rcr
(bad)
mov
loop
mov
or
dec
cmp
cs
and
outs
cwde
test
addr16
cmp
push
out
jmp
mov
mov
pop
jae
dec
mov
mov
gs
inc
ss
outs
fwait
add
aaa
lods
icebp
mov
and
cli
psubb
arpl
adc
push
test
in
jae
in
xchg
lea
sub
je
mov
or
jb
jl
add
adc
sub
jg
cmp
jno
out
sahf
jmp
aaa
mov
fcmovnbe
dec
cdq
out
ret
shl
xchg
mul
and
inc
iret
enter
push
into
les
(bad)
jg
pop
aas
xchg
lods
imul
or
stos
pop
inc
fld
fs
scas
outs
sti
bound
pop
lea
fisubr
fsub
xor
test
ret
inc
cmp
push
jg
pusha
(bad)
mov
mov
sbb
xlat
dec
mov
cmp
and
daa
das
pop
gs
inc
or
sub
imul
iret
mov
nop
fisubr
adc
mov
retf
mov
les
mov
(bad)
mov
and
dec
bnd
fisttp
hlt
xor
pop
xchg
test
inc
(bad)
imul
icebp
push
jmp
or
add
pop
(bad)
push
jle
hlt
adc
sahf
imul
js
mov
fwait
mov
pop
add
add
mul
or
mov
mov
rcr
out
push
mov
mov
inc
add
fadd
jno
mov
jnp
inc
xchg
gs
js
rcl
pop
jmp
mov
pop
sub
xor
test
and
out
pop
inc
movs
pop
push
fwait
inc
jg
and
(bad)
jb
cmp
push
pop
scas
xchg
je
dec
jmp
test
rcr
jmp
sti
icebp
mov
(bad)
stc
scas
cmp
out
add
mov
outs
stos
push
dec
je
dec
push
jmp
repz
add
and
ins
jle
sbb
pop
dec
pop
cmps
js
push
jnp
jbe
imul
cmps
xchg
inc
shl
rol
ds
mov
jle
ds
mov
pop
ins
mov
mov
mov
mov
scas
div
push
or
sbb
or
shl
jmp
sbb
fimul
mov
out
jmp
sahf
outs
fs
add
push
and
fsin
or
adc
lea
cmp
iret
mov
sti
daa
mov
and
ds
and
xlat
or
loopne
jae
dec
xchg
stos
arpl
ja
addr16
imul
mov
clc
aam
pop
daa
jle
in
xchg
mov
pop
shr
inc
std
pop
data16
test
sti
jmp
jbe
mov
call
out
daa
iret
sub
cmps
sub
xchg
stos
js
jbe
in
aam
inc
push
cmp
adc
test
jmp
sub
xchg
out
sbb
jne
or
shl
iret
sahf
out
aam
push
out
xchg
jg
cmp
xchg
movs
stc
inc
cs
mov
outs
sub
fcom
jl
and
xchg
sub
loop
adc
mov
inc
scas
aas
adc
push
shr
pop
repz
jecxz
sbb
mov
std
movs
arpl
mov
inc
cmps
mov
sub
test
fwait
js
cmps
dec
loop
retf
xor
mov
out
data16
pop
inc
pushf
daa
pop
test
xor
xlat
or
mov
mov
aad
call
mov
jg
push
xlat
sbb
imul
(bad)
fistp
inc
and
stc
movs
je
fwait
dec
mov
xchg
sahf
dec
retf
idiv
mov
mov
repnz
push
inc
stos
and
xchg
adc
test
cwde
jmp
jne
or
and
pop
mov
inc
or
jmp
mov
and
mov
push
outs
out
sahf
jmp
aaa
mov
jecxz
call
int
repz
mul
and
inc
addr16
push
into
les
dec
jg
pop
aas
xchg
lods
imul
or
stos
adc
push
fist
xor
inc
xor
or
cmps
pop
jnp
pop
ret
mov
mov
sti
fcomp
cmp
hlt
push
mov
mov
inc
std
shl
add
daa
mov
or
mov
loope
loop
push
mov
inc
xor
mov
out
sub
cmp
cmp
das
ja
clc
or
stos
mov
test
outs
sti
daa
mov
gs
inc
or
sub
imul
iret
mov
xchg
fisubr
adc
mov
retf
pop
(bad)
ror
loop
push
mov
das
adc
xor
pop
fwait
pop
test
inc
(bad)
imul
push
jmp
(bad)
push
add
pop
(bad)
sub
(bad)
hlt
adc
sahf
imul
js
mov
fwait
mov
pop
add
push
dec
fild
push
movs
mov
xor
push
out
push
mov
mov
inc
add
fld
jno
mov
jnp
fist
js
rcl
retf
jmp
mov
pop
sub
cmps
out
xchg
jae
test
and
out
pop
inc
movs
pop
push
fwait
inc
dec
aaa
and
(bad)
jb
cmp
or
scas
xchg
je
dec
push
xchg
xchg
inc
jmp
sti
icebp
mov
(bad)
stc
scas
cmp
aas
xlat
add
mov
jecxz
push
dec
je
dec
push
jmp
fwait
daa
add
and
sbb
cwde
into
mov
sub
jle
lock
push
pop
mov
sub
xchg
dec
mov
pop
outs
mov
addr16
fimul
fsub
sbb
scas
dec
mov
push
adc
dec
jns
aaa
arpl
sahf
aaa
cli
jp
dec
adc
inc
idiv
dec
aam
adc
repz
ret
ret
es
aaa
xchg
mov
or
add
hlt
sub
fs
sub
repz
cwde
push
pop
xchg
inc
mov
call
cmp
xor
cmps
stos
into
ror
xchg
enter
pop
fwait
xchg
adc
inc
daa
xor
(bad)
or
jg
sbb
mov
jecxz
shl
inc
and
addr16
xor
imul
inc
jle
push
fwait
pop
std
or
or
(bad)
retf
sub
shl
xchg
ja
mov
add
jle
(bad)
push
arpl
sbb
icebp
xchg
out
sti
ja
push
sti
fwait
call
call
jb
popa
(bad)
fadd
imul
mov
adc
mov
jg
push
data16
mov
jmp
fucomip
cmps
ins
rcr
xchg
sbb
sbb
retf
out
iret
lock
out
in
addr16
cmps
mov
push
arpl
lahf
inc
sub
dec
jmp
jno
jno
xchg
push
mov
sub
mov
cli
jnp
popa
sbb
imul
enter
cli
fcom
lods
fild
aam
les
imul
xor
xor
mov
aaa
popf
movs
push
fldenv
out
arpl
jnp
mov
mov
push
cmp
iret
test
or
(bad)
repz
retf
push
sahf
pop
sub
int
or
xchg
stos
repnz
pop
outs
push
repnz
popf
into
data16
push
adc
sub
stos
jle
inc
into
or
jle
dec
xlat
pop
mov
and
inc
ss
or
mov
outs
loop
lds
cwde
sub
das
icebp
sbb
xchg
jmp
dec
add
test
gs
fisttp
xchg
push
imul
mov
pop
js
sub
je
call
rcr
scas
idiv
(bad)
jbe
in
sbb
inc
fisub
or
mov
daa
xor
cmps
add
sub
sbb
gs
mov
scas
(bad)
xor
inc
sub
inc
out
daa
in
(bad)
mov
xchg
mov
out
not
push
and
jmp
call
hlt
fdivp
aam
outs
stos
pop
dec
cwde
lahf
mov
daa
call
mov
shl
out
ins
ins
or
pop
test
cmc
cmp
or
sbb
mov
ret
scas
adc
cmp
test
jae
out
cs
mov
inc
inc
cmps
dec
sub
mov
outs
fild
jg
dec
adc
fdivr
div
rcr
inc
xchg
jmp
mov
adc
or
fwait
mov
dec
pop
and
jle
jne
repz
sbb
mov
movs
fiadd
nop
in
xchg
pop
inc
outs
idiv
rcr
pop
pop
sbb
ins
inc
retf
ss
add
mov
outs
sub
in
jle
(bad)
scas
pop
mov
push
xor
movs
jg
or
mov
cmp
aaa
sti
jno
adc
inc
cmp
dec
cs
(bad)
mov
pop
jmp
pop
ffreep
sbb
out
and
xchg
pop
shl
sbb
ss
push
fiadd
jae
push
add
das
jbe
mov
xchg
xchg
cs
(bad)
or
stos
fistp
jl
addr16
(bad)
retf
cli
daa
mov
or
lock
xchg
imul
aam
jnp
cwde
imul
or
je
pop
sub
sub
cmp
push
adc
sub
sub
cli
inc
mov
dec
adc
push
mov
inc
cmp
push
adc
aaa
fild
xchg
mov
sub
ficomp
jno
ret
mov
data16
push
pop
sbb
imul
sbb
xlat
push
cmps
mov
add
jmp
mov
mov
mov
xchg
or
pop
pop
push
pop
ret
test
mov
aaa
inc
sub
in
cs
(bad)
stos
jmp
(bad)
fdivrp
mov
mov
and
imul
fcmovnb
ins
jle
in
add
mov
loop
mov
ja
push
mov
ss
js
jge
mov
jl
call
and
mov
sub
addr16
retf
inc
inc
inc
xchg
xlat
xor
cmp
imul
cmps
sbb
adc
xchg
or
jbe
xchg
ja
in
outs
hlt
jbe
dec
xlat
xchg
xchg
loop
jp
adc
arpl
sbb
ja
ss
push
pop
and
jae
cs
hlt
xor
dec
xchg
out
test
out
and
cwde
(bad)
cmps
mov
daa
or
clc
ins
sbb
pop
shr
jg
das
dec
int3
xchg
sub
inc
ja
fist
add
mov
daa
retf
push
sahf
pop
mov
push
pop
mov
scas
lock
mov
movs
mov
inc
imul
xchg
jge
pop
sub
pop
xor
sbb
mov
mov
push
(bad)
sub
dec
out
or
lods
imul
xchg
dec
xchg
mov
push
pop
inc
jb
adc
pop
jae
push
retf
inc
sbb
or
sbb
mov
movs
mov
cmps
mov
js
xchg
ss
out
mov
cmp
test
jge
(bad)
fdivp
aam
(bad)
push
in
cli
dec
xor
push
cli
data16
sub
sti
fwait
(bad)
sub
pop
cmp
dec
adc
rcr
test
pop
call
push
and
jbe
cmp
dec
sbb
xchg
repnz
xchg
rcl
(bad)
mov
jb
push
jne
fdiv
fist
mov
lea
xchg
(bad)
das
cmp
mov
(bad)
xchg
(bad)
addr16
inc
fild
scas
enter
call
jg
or
imul
arpl
movs
inc
pop
dec
scas
mov
call
cs
or
xchg
adc
ss
push
mov
int3
scas
and
mov
stos
add
jmp
out
xchg
inc
mov
ja
xchg
push
fwait
sub
popf
test
or
mov
ret
push
and
xchg
push
mov
and
es
clc
pop
pop
ds
repnz
cmp
cli
mov
ret
inc
mov
cld
jg
pop
popf
mov
mov
dec
jae
dec
sti
mov
xchg
lahf
cmp
xchg
call
add
mov
lods
mov
ror
xchg
aam
retf
addr16
pop
clc
(bad)
retf
imul
les
xlat
mov
xchg
cmp
dec
push
jmp
fsub
jmp
inc
cmps
test
xor
in
push
sbb
js
xor
out
xchg
fs
sbb
inc
or
sub
mov
adc
cmp
rcr
and
out
(bad)
ffree
xor
sti
retf
fist
cmp
or
lock
mov
ret
repnz
push
enter
pusha
mov
mov
mov
mov
cs
xchg
ja
jmp
mov
je
int3
or
loope
dec
push
or
dec
int3
xchg
sub
and
(bad)
cmc
and
sub
xor
mov
cmp
retf
inc
jmp
or
xlat
and
mov
in
dec
mov
repnz
push
xor
and
adc
pop
out
stos
stos
aaa
call
dec
xchg
xchg
(bad)
adc
movs
jp
cmp
xor
adc
add
xchg
call
mov
or
push
(bad)
xchg
inc
test
clc
sub
or
fist
jmp
pop
in
mov
out
pop
jmp
loop
ss
mov
in
stos
jbe
addr16
int3
mov
or
or
mov
das
xor
aaa
ret
sub
fistp
fwait
or
push
sub
aam
mov
dec
sbb
imul
mov
or
xchg
test
cwde
(bad)
adc
mov
sbb
cmp
imul
or
dec
mov
mov
cmps
rcl
and
ins
lahf
inc
(bad)
push
push
fadd
push
cld
push
mov
cmps
ds
inc
mov
pop
inc
scas
aaa
ret
cmps
daa
mov
or
sbb
sub
xchg
loopne
repnz
scas
movs
jnp
mov
arpl
dec
mov
repz
inc
xor
jecxz
nop
retf
outs
jmp
push
js
ja
cwde
add
stos
push
sub
add
push
shr
int
ja
stos
mov
pop
or
pop
ds
add
jmp
retf
sub
mov
pop
pop
arpl
int
fcom
nop
mov
in
dec
pop
push
lods
inc
add
cmp
xor
sar
out
pushf
mov
xchg
stos
in
nop
xchg
into
sti
aas
rep
mov
jb
es
add
loop
jge
hlt
(bad)
pop
je
je
xchg
cs
pop
sahf
push
pop
(bad)
sub
jmp
push
jns
enter
jmp
pop
stos
retf
jmp
dec
sub
push
repnz
xchg
mov
jns
cs
fwait
addr16
xchg
fwait
scas
popa
xlat
mov
es
gs
sbb
call
xchg
cmp
in
mov
lods
fdiv
mov
or
dec
retf
mov
mov
push
mov
(bad)
je
aaa
mov
mov
das
or
loopne
or
xchg
pop
js
sub
ins
push
pop
fwait
inc
jmp
or
sub
(bad)
aad
xchg
(bad)
sub
add
arpl
test
mov
inc
push
(bad)
sub
jg
lods
xlat
or
push
inc
outs
ret
into
xor
fmul
inc
cmp
cmps
lods
or
adc
mov
mov
imul
sub
(bad)
pop
imul
adc
scas
icebp
sub
leave
push
fimul
aam
(bad)
out
xchg
sub
jp
mov
movs
xchg
daa
mov
inc
mov
ror
pop
and
fmul
pop
jmp
jnp
ror
es
iret
jmp
sti
sub
jge
stc
aam
les
mov
rcl
jnp
js
ja
pusha
push
pop
fs
adc
scas
xchg
mov
(bad)
mov
fwait
mov
fidiv
mov
enter
jmp
test
xlat
repz
mov
repz
pop
sbb
mov
dec
add
repz
je
stos
cmp
sub
test
lods
jle
ret
cmps
sbb
adc
cwde
mov
xchg
por
push
retf
pop
sbb
out
mov
and
scas
push
xchg
and
pushf
jmp
jo
mov
(bad)
cmp
add
fild
and
push
and
ret
mov
mov
hlt
cmp
pop
xchg
jno
and
pop
and
ret
ss
sbb
stc
icebp
xor
pop
out
ret
repz
cmp
mov
hlt
xor
sub
xchg
out
int3
out
aaa
add
mov
push
or
in
out
mov
mov
sub
mov
nop
jmp
loope
iret
inc
push
dec
jle
bnd
xchg
inc
jnp
dec
inc
xor
xchg
dec
sar
pop
pop
jo
daa
and
pop
aam
les
sbb
mov
movs
in
mov
cmp
js
inc
call
push
pop
pop
les
ret
ret
ja
or
pusha
not
movs
or
fcmovnu
pop
idiv
hlt
sub
mov
repz
mov
outs
out
jl
mov
and
jmp
jg
sti
jmp
lea
nop
das
loopne
and
out
repz
test
fwait
adc
pop
(bad)
sub
cmp
xor
xchg
(bad)
lahf
sbb
xor
lods
(bad)
sbb
lds
mov
int
js
shr
call
add
test
call
enter
fidivr
cmp
fcom
int3
or
pop
cmp
shr
and
dec
mov
cmp
dec
ins
adc
in
mov
lods
xor
dec
sti
xor
cwde
dec
mov
enter
dec
xor
outs
cmps
iret
fistp
stos
jle
or
mov
clc
pop
rcr
ins
push
xchg
cwde
movs
test
adc
adc
pop
lods
sahf
add
jb
div
retf
xchg
dec
cmp
jecxz
dec
out
and
sbb
data16
inc
push
adc
out
call
mov
scas
xchg
dec
addr16
push
icebp
mov
loopne
push
pop
sub
(bad)
out
xlat
in
and
outs
sub
dec
ficomp
js
add
jb
pop
mov
push
pop
xlat
pop
jbe
or
mov
ret
inc
arpl
mov
iret
jecxz
cli
lods
mov
not
sbb
outs
inc
sbb
xchg
push
xchg
inc
jmp
jbe
retf
xlat
lea
fistp
pop
dec
xchg
or
xor
in
inc
test
movs
aaa
test
inc
adc
push
inc
jle
push
adc
cmp
pop
mov
(bad)
scas
movs
sahf
test
xor
aaa
repz
mov
repz
xchg
test
pop
mov
sub
sti
loope
outs
into
push
aaa
add
fwait
pop
test
test
mov
dec
es
cmp
jle
mov
and
jae
jecxz
inc
xchg
adc
push
nop
or
js
hlt
jp
mov
sbb
or
dec
add
inc
pop
pop
(bad)
adc
sbb
scas
jg
inc
lock
xchg
out
in
aaa
mov
jae
adc
sti
iret
retf
jle
popf
les
dec
sub
jmp
pop
outs
stos
call
push
inc
mov
aam
xlat
outs
push
js
xchg
sbb
stos
ficomp
shl
(bad)
mov
jmp
xchg
daa
out
xchg
push
dec
test
or
xchg
sbb
addr16
mov
aas
xchg
imul
outs
jl
mov
push
in
xor
ror
sahf
push
into
ret
adc
pop
es
inc
(bad)
jb
shl
or
fstp
push
ja
jae
cld
scas
imul
add
enter
sti
lahf
mov
cmp
jle
cs
mov
stc
xchg
push
jae
or
jmp
and
out
xlat
jecxz
cs
jecxz
into
pop
outs
stos
pop
inc
fld
cdq
mov
retf
sti
(bad)
sub
inc
mov
mov
ja
adc
mov
pop
sub
cmp
imul
imul
fild
aaa
adc
mov
cmc
les
loop
sbb
xchg
or
sub
(bad)
mov
gs
and
bound
sub
jg
dec
sti
sbb
pop
xchg
push
aas
push
lahf
sbb
add
imul
and
ds
arpl
xor
sub
xchg
mov
fimul
enter
pop
xor
sub
cmp
imul
cmps
xchg
repz
xor
arpl
stos
jmp
add
(bad)
mov
out
add
sub
or
xchg
mov
pop
pop
push
sahf
inc
mov
push
fsub
push
js
ret
fdivr
or
add
cs
adc
dec
addr16
mov
xchg
mov
sub
imul
sti
mov
sub
pop
out
xlat
jecxz
xor
cmps
mov
pop
inc
mov
hlt
fwait
scas
lds
adc
dec
call
ror
or
sbb
xchg
pop
aas
add
jg
xchg
call
add
sti
iret
retf
mov
cmp
and
dec
xchg
jecxz
xchg
mov
stos
lahf
mov
in
(bad)
daa
sub
dec
clc
ret
out
stc
sbb
imul
sysenter
pop
outs
test
addr16
test
add
adc
retf
icebp
fcmovne
aam
jg
or
ss
lea
clc
xchg
mov
scas
scas
xchg
sti
iret
out
ds
fisttp
shl
imul
mov
pop
and
lahf
xchg
outs
push
out
add
daa
and
fninit
sub
les
dec
je
das
inc
mov
cmps
dec
push
push
dec
add
fs
ins
xor
fld
jl
lea
mov
jnp
push
push
mov
and
fwait
mov
enter
pop
sahf
not
cmps
shr
pop
pop
pop
mov
mov
mov
mov
inc
pop
mov
push
shl
dec
fsub
pop
outs
inc
out
lock
inc
adc
out
aas
and
scas
adc
lock
push
xchg
retf
outs
jp
mov
push
push
add
mov
rcl
dec
cs
jnp
add
xor
and
pop
arpl
js
mov
hlt
add
dec
ds
jns
or
ja
in
push
enter
clc
stos
ficom
(bad)
aam
cmp
pop
das
dec
lock
mov
pop
or
ja
loop
xchg
pushf
int3
jmp
lods
daa
retf
pushf
(bad)
sbb
out
xchg
imul
hlt
mov
pop
pop
stos
jnp
out
stos
mov
add
retf
leave
sub
(bad)
sbb
jnp
dec
sbb
js
mov
fwait
mov
inc
add
outs
fsubr
pop
xchg
in
cs
test
mov
movs
js
lahf
jmp
arpl
xlat
inc
adc
sti
lods
retf
call
sbb
dec
neg
shl
mov
lahf
scas
aaa
sti
lods
xchg
and
ds
out
xchg
ds
cmps
sbb
mov
stos
imul
mov
fwait
mov
test
cmps
jnp
mov
adc
(bad)
mov
js
retf
push
aam
cmp
or
pop
pop
xchg
jg
mul
push
mov
mov
mov
scas
inc
stos
icebp
jae
fucomi
sub
aas
jg
xchg
xor
cmps
and
outs
stos
cli
inc
and
scas
xchg
jno
xchg
mov
lods
repnz
lahf
sbb
mov
pop
test
push
inc
mov
jmp
shl
retf
fs
je
and
das
pop
sub
cmp
(bad)
pop
pushf
fistp
stos
daa
inc
push
push
loopne
icebp
jecxz
mov
xor
cmp
or
lahf
dec
rcr
mov
xchg
mov
jmp
add
adc
sti
inc
adc
nop
ret
repz
into
fcom
(bad)
mov
out
push
inc
mov
outs
pop
les
call
repz
fwait
mov
cmps
and
ret
push
mov
or
mov
pop
ds
mov
mov
mov
mov
ja
mov
push
cmps
cmps
aaa
sti
dec
ficom
mov
loop
out
mov
sub
or
jnp
cmp
imul
test
inc
jge
cld
fsub
repnz
mov
sbb
call
sub
add
mov
mov
mov
mov
sub
sbb
cmp
pop
sub
mov
xor
aaa
xor
inc
add
leave
idiv
hlt
outs
sbb
xchg
lock
xchg
test
jb
add
adc
pop
xchg
pop
sub
cmp
imul
imul
fist
mov
adc
mov
cmc
les
loop
sbb
xchg
or
cli
cs
stc
and
bound
sub
cmp
or
and
adc
sahf
ret
aaa
pop
daa
xor
sahf
push
jnp
imul
dec
push
mov
add
xor
inc
or
push
mov
rcl
ret
dec
test
jmp
inc
fsubr
fidiv
imul
or
sbb
sbb
out
stos
pop
mov
sub
add
bound
sub
cmp
hlt
ds
imul
mov
sbb
gs
sub
add
(bad)
mov
out
sbb
jmp
or
repnz
xchg
xchg
dec
push
pop
retf
push
sahf
inc
mov
jnp
and
pop
ret
lds
and
jg
cs
adc
dec
jns
cwde
xchg
push
and
push
jae
jmp
sti
sbb
lahf
movs
sub
or
leave
xlat
cmp
repz
stos
pop
hlt
fwait
scas
(bad)
cmp
out
xor
not
(bad)
or
sbb
pop
aas
add
jg
xchg
mov
inc
add
and
outs
push
cmp
cmp
fcmovnb
fisttp
jecxz
xchg
mov
stos
mov
inc
je
(bad)
jmp
leave
daa
je
xchg
clc
ret
out
in
js
daa
test
xor
outs
cdq
ja
addr16
test
add
adc
test
jg
or
sub
aad
mov
mov
inc
mov
scas
scas
xchg
sti
iret
stc
pop
popw
mov
shl
imul
push
mov
pop
and
lahf
mov
push
scas
mov
and
fstp
dec
je
das
pop
mov
cmps
lahf
push
push
push
mov
fwait
inc
adc
mov
mov
mov
scas
jmp
lods
stc
mov
inc
fsubr
cmps
stos
or
xchg
pop
sub
jmp
test
jg
test
xor
mov
jmp
out
push
ret
jp
push
js
(bad)
arpl
sub
push
mov
push
pop
inc
out
mov
or
stos
jb
mov
mov
sub
cmp
sbb
jecxz
xchg
xor
ja
jo
jmp
(bad)
lahf
push
sub
mov
dec
jnp
dec
mov
ins
mov
inc
jo
add
iret
retf
mov
jle
pop
call
(bad)
push
jecxz
mov
cmp
jae
daa
aaa
xchg
and
aam
mov
or
cmp
xchg
push
cmp
jb
xor
mov
ret
jle
or
push
pop
push
xchg
inc
sahf
xor
arpl
arpl
ja
fwait
add
addr16
push
xchg
es
xchg
push
dec
test
mov
jg
add
xlat
loope
icebp
ins
adc
jo
dec
push
fdivrp
jmp
jbe
sbb
retf
sub
pop
div
ja
jmp
sti
ja
xchg
fist
mov
jecxz
push
xchg
pop
xchg
mov
cmps
xorps
add
cmp
shl
jae
dec
retf
push
or
shl
xlat
enter
sub
ror
mov
xor
daa
push
xor
lods
lods
repz
mov
movs
jnp
ja
and
or
aaa
sti
hlt
retf
jge
das
inc
loopne
(bad)
or
pop
(bad)
xchg
aaa
test
mov
pop
les
push
jmp
mov
mov
sub
xchg
mov
aas
mov
jno
mov
push
fist
(bad)
icebp
mov
xchg
pop
mov
mov
(bad)
out
mov
ds
dec
add
xchg
inc
adc
out
fwait
inc
add
hlt
and
mov
outs
jmp
(bad)
or
outs
inc
xor
xchg
stos
jae
or
(bad)
enter
pushf
(bad)
scas
(bad)
(bad)
mov
cs
xchg
jo
pop
dec
lahf
pop
xlat
(bad)
je
pop
inc
mov
jge
sar
mov
xchg
xchg
mov
or
call
adc
sti
dec
xor
xor
sub
cmp
imul
ret
mov
inc
scas
enter
scas
xchg
neg
call
mov
stos
ja
cwde
cld
aas
fwait
dec
cmp
stos
fsubrp
sub
mov
and
sub
stos
pop
xlat
imul
mov
mov
mov
sbb
dec
pop
sbb
cmp
xor
inc
and
into
js
ficom
adc
mov
stos
adc
add
mov
mov
hlt
rcr
jmp
sti
inc
retf
add
mov
imul
sbb
lahf
mov
scas
jecxz
(bad)
push
retf
jg
daa
sub
loop
xlat
jg
imul
rcl
js
mov
dec
sbb
jmp
mov
mov
xchg
sbb
inc
dec
cwde
jnp
stos
mov
mov
inc
cdq
adc
jb
xlat
retf
pop
push
mov
mov
pop
out
push
mov
in
in
jbe
add
out
inc
mov
mov
pop
fdiv
jl
out
pop
scas
cmp
loop
xor
xchg
fwait
pcmpeqb
retf
lds
xor
xor
xchg
jecxz
cli
mov
and
in
imul
dec
mov
shr
adc
add
mov
and
popa
xlat
dec
cmp
pop
dec
push
shl
jg
inc
mov
mov
pop
fild
and
sbb
(bad)
xchg
rcr
out
in
mov
sub
aaa
and
mov
test
aas
jnp
(bad)
xchg
or
repnz
movs
scas
iret
fild
retf
dec
aaa
mov
or
stos
or
jno
imul
icebp
stos
das
pop
addr16
inc
pop
fild
hlt
mov
xor
aaa
pop
ret
test
inc
dec
lods
mov
cmps
mov
add
je
pop
mov
int3
and
inc
ds
out
movs
sbb
push
sbb
push
mov
mov
aaa
dec
dec
adc
sbb
in
(bad)
sahf
add
push
mov
sub
jp
sub
imul
ss
push
imul
bound
das
or
not
ins
jmp
in
das
push
mov
pop
leave
xchg
push
adc
popf
or
add
and
bound
xor
loop
enter
mov
xor
mov
fwait
push
cmps
lods
ja
push
xor
aam
cmp
or
sbb
mov
out
mov
xor
sbb
and
stc
fadd
bound
outs
xor
out
mov
add
mov
pop
add
lahf
inc
cwde
xchg
jae
mov
sub
pop
je
mov
(bad)
xor
test
xor
inc
adc
call
lds
outs
xor
inc
ins
xchg
call
scas
jp
je
push
daa
clc
imul
dec
jle
aas
jmp
shl
xchg
dec
adc
daa
pop
and
sub
arpl
jno
adc
ror
cmp
mov
call
pop
and
outs
loop
lock
repnz
add
ds
xchg
dec
or
ja
jb
adc
jmp
sti
bound
and
ret
neg
out
xlat
mov
out
scas
pop
mov
pop
sbb
add
into
xor
daa
xor
fld
dec
cmc
add
xchg
imul
cmps
mov
mov
or
fist
inc
pushf
fisttp
or
pop
outs
aas
addr16
inc
push
jb
pcmpeqw
push
mov
retf
push
sbb
jl
les
aad
xor
ret
loop
mov
pusha
jae
inc
add
leave
jne
cmp
or
cmp
outs
pop
ret
in
loopne
fmul
cmp
push
inc
mov
(bad)
fcmovnb
cs
lock
push
in
mov
mov
(bad)
sub
in
jle
mov
mov
xor
and
aaa
mov
clc
mov
aas
sbb
imul
jg
pop
inc
and
clc
movs
je
fwait
das
adc
inc
lahf
(bad)
sub
pop
(bad)
xchg
xor
pop
mov
mov
jmp
das
pop
gs
inc
or
sub
imul
iret
mov
xchg
fisubr
adc
mov
retf
dec
(bad)
ror
loop
imul
das
adc
pop
fild
test
inc
(bad)
imul
inc
pusha
cs
add
pop
(bad)
sub
(bad)
cmc
adc
sahf
imul
jns
mov
fwait
mov
pop
add
pop
jae
movs
mov
xor
push
out
push
mov
mov
inc
add
fld
jno
mov
jnp
(bad)
xchg
gs
js
rcl
cmp
sar
pop
sub
push
out
xchg
jae
test
and
out
pop
inc
movs
inc
push
fwait
inc
xchg
aaa
and
xlat
jb
cmp
push
pop
scas
xchg
je
dec
xlat
xchg
xchg
inc
jmp
sti
icebp
mov
(bad)
cli
scas
cmp
pop
xlat
add
mov
mov
jne
dec
push
jmp
mov
stc
call
mov
mov
fild
xchg
ja
and
test
sti
jae
sti
xor
pop
pop
les
or
pop
sub
loop
or
cmp
lahf
in
sbb
out
retf
dec
jbe
mul
push
dec
stos
dec
jae
jo
fwait
js
xor
add
mov
loopne
sub
cmp
or
sbb
xor
popa
mov
pop
xchg
jne
cwde
je
and
jmp
sti
fs
test
inc
jnp
jle
stos
push
nop
cmp
push
sub
mov
loope
ja
in
add
fmul
bound
xor
idiv
cld
sbb
retf
loop
jnp
shl
and
aam
mov
ficomp
push
dec
or
cwde
add
mov
add
mov
push
out
sti
fcmovne
aad
add
cmp
mov
pop
add
ins
pop
add
daa
sti
jo
adc
mov
xor
push
loopne
or
add
sahf
mov
xchg
or
mov
sub
iret
out
cmc
cmp
push
repnz
dec
cli
ret
pop
stos
xchg
push
aas
push
xchg
mov
inc
cmps
jp
fs
and
outs
idiv
sbb
push
mov
pop
stos
push
shl
cmp
ror
das
xchg
cmp
idiv
out
ds
das
movs
cmc
add
jnp
jmp
out
outs
mov
adc
imul
mov
add
scas
ss
add
aas
dec
cmps
idiv
sbb
push
fwait
cmps
mov
push
or
mov
ror
das
xchg
cmp
pop
push
fild
sub
out
es
data16
or
mov
ror
or
jmp
sti
push
xchg
outs
(bad)
xlat
in
pop
hlt
arpl
dec
xchg
mov
xor
stos
jg
(bad)
inc
fstp
ja
push
stos
dec
aam
push
mov
mov
cmps
or
pop
out
jbe
and
cmp
jg
xchg
dec
xlat
or
std
(bad)
jmp
mov
xchg
push
jp
aas
xchg
(bad)
mov
jg
push
sti
ret
stos
xchg
pop
cs
mov
pop
and
movs
pop
xrelease
cmps
xor
dec
out
call
les
push
mul
inc
mov
add
cmp
cmp
or
in
out
test
repz
imul
aas
xchg
adc
sub
sti
xor
cmp
test
push
sahf
inc
jmp
add
out
jmp
cmp
jae
repnz
jp
dec
fcmovbe
xor
montmul
cmps
add
pop
int3
pop
test
xchg
stos
and
fbstp
pop
retf
jmp
test
inc
scas
ss
inc
pop
lahf
push
retf
rol
stc
(bad)
sbb
pop
cmp
call
js
mov
cwde
je
fs
xlat
sti
stos
aaa
push
cmp
mov
dec
and
mov
mov
fs
fcmovbe
xchg
call
jmp
mov
(bad)
and
mov
mov
scas
loop
sub
sub
push
inc
inc
ret
sahf
cwde
pop
sbb
inc
sub
int
xor
adc
fcmovnb
hlt
pop
push
dec
imul
ret
stos
mov
in
mov
call
pop
lahf
push
retf
rol
das
jae
sti
loop
mov
mov
push
cmps
pop
scas
sbb
adc
or
sub
ret
pop
clc
por
push
dec
fbstp
adc
jecxz
pop
mov
ror
pop
or
out
pop
scas
push
loopne
jnp
repz
mov
xchg
sti
push
call
les
or
pop
jecxz
sbb
pop
push
inc
mov
test
bound
call
hlt
call
mov
iret
adc
jecxz
repz
ret
psrlq
push
out
ret
add
cli
ss
push
cwde
sub
das
adc
imul
dec
push
in
xchg
fs
imul
(bad)
sbb
retf
cli
daa
(bad)
mov
inc
add
mov
or
retf
imul
test
call
add
xchg
mov
xchg
lock
dec
test
out
imul
push
ficomp
fcmove
cwde
push
mov
aaa
push
push
loop
inc
mov
sbb
xchg
call
jbe
and
fcmovnbe
aam
cmp
sub
xchg
dec
dec
imul
shl
push
inc
jmp
push
ss
jg
xchg
mov
or
out
sub
add
cmps
js
mov
fisub
fwait
enter
fwait
and
outs
push
(bad)
push
sub
xlat
mov
xlat
js
xor
push
jecxz
or
adc
inc
mov
(bad)
loopne
fninit
mov
mov
data16
jo
or
(bad)
and
fbstp
call
push
adc
pop
aaa
add
(bad)
pop
push
cli
sub
push
mov
cmp
xlat
jecxz
push
mov
repz
enter
pop
add
hlt
jecxz
(bad)
fisttp
cmps
setbe
je
fistp
inc
push
outs
and
neg
sbb
pop
sbb
imul
test
das
movs
movs
fwait
fwait
jmp
(bad)
out
fs
add
xchg
push
sbb
mov
sub
cmps
jp
in
jmp
inc
fdivr
and
out
(bad)
or
push
dec
imul
pminub
pop
mov
addr16
push
fs
jbe
retf
out
data16
les
enter
push
je
jne
out
movs
add
aas
cwde
mov
push
inc
outs
mov
pop
mov
inc
retf
cmp
xchg
test
xchg
mov
(bad)
or
pop
jecxz
test
ds
outs
xchg
mov
pop
mov
mov
push
stos
jb
cmps
mov
lahf
clc
xchg
jg
inc
loop
xchg
(bad)
das
mov
shl
add
push
pop
and
sub
and
out
cmp
cmp
dec
scas
pop
retf
jmp
add
or
repz
xor
(bad)
clc
outs
cmp
stos
xchg
pop
(bad)
test
sbb
js
ja
data16
test
inc
scas
ss
add
cmp
rol
or
repnz
or
rcl
or
test
or
mov
pop
retf
mov
pop
hlt
aaa
sbb
stos
mov
add
repz
mov
jmp
pop
out
(bad)
or
pop
mov
dec
fwait
cmps
(bad)
imul
push
cmp
jb
or
sti
push
mov
mov
das
mov
cmps
mov
out
xchg
cld
montmul
cmps
add
cmp
add
jle
pop
mov
repz
mov
pop
retf
pop
addr16
out
cmps
sub
inc
sub
cmps
stos
xchg
dec
fisttp
adc
inc
pop
mov
adc
jmp
inc
fsubr
xor
cmps
or
push
cmp
mov
pop
js
xor
test
add
aaa
pop
retf
pop
xchg
push
or
jnp
push
aas
cmps
dec
xchg
jecxz
xchg
ja
jmp
rcr
scas
push
fidiv
hlt
outs
pop
cmp
repz
push
neg
into
enter
xchg
fiadd
aam
(bad)
sbb
repz
push
call
daa
cmp
inc
pop
lahf
push
aam
(bad)
bound
repz
setbe
js
ret
inc
jmp
dec
fdiv
outs
pop
data16
mov
(bad)
dec
pop
jecxz
and
mov
test
add
mov
dec
mov
xlat
pop
(bad)
mov
cmps
dec
fcmovbe
or
jg
addr16
push
fs
jbe
jg
arpl
adc
jbe
hlt
arpl
mov
xchg
push
outs
sub
arpl
cmps
fidivr
adc
fisttp
jbe
aas
hlt
xlat
push
cs
pop
fwait
pop
mov
push
test
add
xchg
out
jge
jno
xchg
repnz
(bad)
and
mov
jmp
fisub
jmp
dec
xchg
or
out
outs
in
imul
pop
mov
(bad)
js
cmp
addr16
and
int3
in
inc
fsubr
pop
xchg
mov
or
push
dec
fs
jle
stos
xor
test
bound
(bad)
outs
mov
fdivr
xor
xor
movs
aaa
jecxz
inc
jmp
pop
sub
jbe
add
mov
cmps
dec
(bad)
js
ja
jmp
jbe
jo
fisttp
test
or
jecxz
dec
ja
jmp
(bad)
dec
pop
push
pop
push
or
cmp
cli
ret
pop
stos
ja
xchg
out
fs
sti
fdiv
push
pop
clc
dec
les
repnz
das
mov
adc
cli
mov
repz
jbe
out
call
sti
stos
enter
call
fcmovbe
xchg
jbe
inc
je
(bad)
retf
sbb
xchg
mov
cmp
ss
and
cwde
jnp
fisttp
data16
(bad)
retf
push
pop
mov
in
push
xchg
sbb
dec
dec
mov
xchg
iret
inc
xchg
aaa
mov
retf
mov
jbe
or
ss
lock
cwde
imul
outs
ficomp
dec
cmps
jp
ret
xor
xchg
mov
pop
dec
shl
mov
fwait
jnp
cmps
jp
daa
xor
(bad)
dec
les
enter
es
js
xchg
sbb
inc
sub
arpl
idiv
clc
mov
and
jg
push
jnp
repz
inc
xchg
pop
aaa
cmp
scas
les
rcl
xchg
push
jnp
repz
xor
xor
mov
jae
cmp
dec
les
or
cmps
mov
pop
xchg
sub
push
xor
scas
jp
dec
sub
and
xchg
or
cmp
dec
aas
cmps
mov
jmp
jmp
mov
clc
retf
div
hlt
aaa
sbb
push
das
movs
movs
inc
cmp
jecxz
daa
push
sub
or
cmp
(bad)
sbb
movs
arpl
mov
adc
arpl
mul
sub
les
jl
outs
xchg
arpl
pop
mov
pop
or
pop
inc
iret
sbb
mov
xor
(bad)
pop
fcmovnb
hlt
mov
and
cmp
cwde
imul
adc
cli
daa
xor
xchg
mov
mov
sti
(bad)
es
test
push
inc
jmp
adc
xchg
xor
pop
cmp
imul
and
ja
mov
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
repz
or
sbb
dec
xchg
imul
mov
xor
stc
xor
int3
popa
mov
inc
nop
mov
inc
pushf
push
jmp
out
xor
adc
xchg
out
and
adc
add
jb
bound
mov
mov
pop
lock
jnp
dec
adc
add
or
sbb
push
jp
dec
xchg
pop
xchg
stos
addr16
adc
pop
xchg
push
fwait
inc
jmp
sti
daa
pop
push
lods
clc
and
in
inc
cdq
sbb
xchg
mov
rol
push
jp
mov
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fbld
or
aas
(bad)
or
sbb
outs
mov
mov
scas
jae
arpl
xor
and
adc
sbb
push
int
fcmovnb
pop
jbe
jo
shl
xchg
aas
xchg
sub
sbb
retf
nop
outs
imul
and
cmp
daa
xor
rol
sub
cmp
or
in
imul
dec
xchg
push
xchg
mov
dec
jmp
sti
daa
xor
rol
sub
cmp
add
sbb
imul
mov
pop
xchg
test
dec
jmp
lock
adc
(bad)
sub
cmp
add
enter
jnp
dec
xchg
push
xchg
mov
inc
out
sub
push
sub
aaa
out
xlat
sbb
imul
mov
pop
fwait
mov
(bad)
pop
fisttp
sub
cmp
hlt
xlat
pop
(bad)
imul
xchg
test
inc
adc
mul
retf
sbb
clc
sub
(bad)
out
xlat
sbb
imul
mov
pop
xchg
push
fwait
inc
inc
aaa
sti
daa
retf
mov
xchg
out
xlat
sbb
mov
cmps
loop
pop
xchg
push
xor
jmp
sti
daa
bound
cmp
mov
mov
push
dec
xchg
pop
xchg
ficom
mov
in
inc
popf
push
lea
jno
sbb
(bad)
imul
xchg
fcom
int3
and
xor
inc
pushf
push
mov
fild
sub
mov
mov
cmps
dec
cmp
stos
ja
retf
daa
sti
aaa
jmp
fwait
push
mov
ja
xchg
dec
cmps
jnp
(bad)
imul
sub
ficom
retf
ss
jbe
xchg
dec
movs
jns
imul
xchg
pop
xchg
push
xor
mov
fld
movs
js
(bad)
imul
xchg
pop
sub
adc
and
xor
inc
cwde
sti
daa
retf
pop
je
test
dec
movs
stos
ja
mov
cmps
dec
daa
jmp
stos
ja
addr16
sub
aaa
sti
xchg
jnp
fild
sub
mov
stos
ja
mov
cmps
cli
es
out
inc
jmp
dec
daa
retf
pop
(bad)
mov
push
retf
es
push
fwait
inc
jmp
dec
daa
retf
pop
(bad)
or
(bad)
imul
xchg
in
cmc
pop
test
retf
pop
(bad)
xlat
sbb
enter
pop
xor
les
hlt
pop
test
retf
pop
punpckhdq
idiv
out
fs
(bad)
imul
xor
ret
psrlq
or
mov
(bad)
push
mov
add
adc
and
xor
ret
ds
repnz
or
mov
cmp
jp
sbb
imul
adc
and
xor
push
sub
daa
retf
pop
ins
mov
inc
cmp
or
lods
(bad)
imul
xchg
loopne
lock
or
ins
mov
idiv
out
pusha
sbb
add
adc
pop
push
das
ja
addr16
sub
jmp
sti
lahf
jae
fild
sub
sbb
mov
jno
inc
fadd
xor
(bad)
jmp
sti
icebp
inc
rcl
idiv
out
outs
sbb
mov
cmps
popf
sbb
or
ja
addr16
and
(bad)
sti
daa
retf
rcl
idiv
out
xlat
mov
cmps
dec
inc
(bad)
push
and
and
sti
mov
pop
fild
sub
pop
or
mov
cmps
dec
xchg
mov
stos
ja
xor
inc
jmp
sti
daa
retf
pop
bound
sub
cmp
outs
mov
cmps
dec
xchg
pop
cmp
xor
and
aaa
sti
popf
jno
popa
pop
sub
cmp
ins
mov
sbb
adc
add
xor
and
push
mov
jo
pusha
mov
mov
sbb
imul
lock
pop
xchg
push
and
aaa
sti
fwait
retf
pop
fild
xchg
idiv
out
imul
imul
cmp
push
fwait
inc
jmp
sti
daa
retf
pop
addr16
or
cmps
(bad)
imul
xchg
push
fwait
inc
jmp
inc
call
cmp
or
cmps
jp
or
dec
xchg
out
stos
ja
fidiv
jmp
inc
daa
retf
pop
fstp
or
movs
(bad)
imul
xchg
jmp
inc
cdq
retf
pop
fild
xchg
dec
cmp
or
movs
jns
mov
cmps
hlt
sub
cmp
call
inc
cwde
je
fs
mov
movs
js
mov
cmps
dec
sub
stos
ja
fdiv
pop
xchg
idiv
out
xlat
sbb
jmp
sti
daa
retf
pop
fild
stos
ja
mov
inc
imul
xchg
aaa
sti
daa
retf
(bad)
sbb
jmp
push
stos
mov
cmps
dec
push
call
xchg
pop
test
cmc
cmp
or
fild
sub
stc
and
test
xchg
pop
xchg
jns
dec
xchg
pop
test
aaa
sti
daa
or
sbb
call
adc
add
mov
cmps
mov
stos
ja
movs
dec
xchg
pop
sub
aas
jecxz
rcr
ret
out
xor
and
adc
add
push
lahf
inc
outs
mov
mov
cs
rcr
ret
(bad)
and
adc
add
xchg
sahf
inc
outs
mov
mov
sub
xor
and
adc
add
push
popf
inc
ins
mov
mov
sub
cmp
or
sbb
in
xor
and
adc
bt
outs
sbb
arpl
push
(bad)
and
xor
add
adc
loop
bnd
(bad)
imul
xchg
sahf
push
mov
aaa
sti
daa
add
fild
sub
repnz
sbb
mov
pop
xchg
dec
popa
ja
mov
and
xor
add
fild
sub
icebp
sub
mov
pop
pop
xchg
pushf
push
mov
aaa
sti
daa
add
adc
loopne
lock
sbb
or
jl
ins
sbb
ja
mov
daa
sti
aaa
jmp
fist
retf
out
imul
(bad)
sbb
or
pop
xchg
dec
stos
ja
addr16
fwait
fwait
inc
jmp
aaa
jmp
cmp
or
(bad)
or
xchg
xchg
dec
stos
ja
addr16
call
retf
ficom
pop
sub
cmp
(bad)
sbb
or
pop
xchg
dec
gs
mov
jmp
sti
jmp
sub
cmc
sub
xlat
sbb
movs
jns
cmps
dec
xchg
xchg
dec
stos
ja
addr16
push
fwait
inc
jmp
xor
add
adc
in
hlt
cmp
xlat
sbb
imul
dec
stos
ja
addr16
push
fwait
inc
jmp
sti
daa
retf
pop
adc
sub
cmp
(bad)
xlat
sbb
imul
dec
xchg
mov
cmps
imul
aaa
sub
sbb
fild
sub
jmp
or
sbb
mov
inc
mov
cmps
mov
inc
jmp
sti
test
fild
cli
es
data16
dec
xchg
mov
ja
mov
jmp
sub
retf
pop
fcmovnbe
stc
idiv
out
add
test
push
stos
ja
addr16
test
cmp
sub
retf
pop
fcmovnbe
sub
cmp
fcom
sbb
imul
xchg
pop
push
js
inc
mov
fwait
aad
aaa
sti
daa
retf
les
aam
idiv
out
add
(bad)
imul
xchg
mov
inc
jmp
sub
sbb
or
sub
cmp
fadd
iret
(bad)
imul
xchg
push
fwait
inc
jmp
arpl
retf
pop
fcmovnbe
jmp
out
xor
add
adc
inc
mov
mov
dec
xchg
jmp
sti
daa
push
ret
sub
cmp
fiadd
sbb
imul
xchg
or
sbb
idiv
out
add
(bad)
imul
push
jge
ins
mov
or
sbb
fild
sub
in
xor
xlat
sbb
imul
dec
xchg
pop
xchg
mov
jmp
and
sbb
add
repz
out
(bad)
(bad)
imul
xchg
pop
xor
and
adc
fild
sub
loop
ror
sbb
imul
xchg
push
fwait
inc
xor
sti
daa
retf
into
fild
sub
loop
or
sbb
imul
xchg
push
inc
inc
jmp
sti
std
adc
or
out
fwait
sbb
imul
pop
jno
popa
mov
xor
sti
daa
retf
pop
add
sub
cmp
xlat
sbb
imul
xchg
push
xchg
push
inc
pushf
xor
and
adc
add
lock
cmp
or
sbb
xchg
pop
xchg
mov
fwait
aaa
jmp
sti
pop
retf
pop
fld
idiv
out
xlat
sbb
imul
xchg
dec
xchg
stos
mov
inc
call
push
pop
sub
cmp
aad
sbb
imul
pop
jne
gs
xor
enter
sub
out
xlat
(bad)
(bad)
imul
pop
je
fs
xor
sbb
sub
cmp
retf
pop
in
or
sbb
imul
addr16
xchg
pop
xchg
jnp
or
sbb
sub
cmp
retf
out
xlat
cli
imul
dec
xchg
mov
xchg
(bad)
aaa
sti
daa
retf
idiv
out
neg
add
mov
cmps
dec
xchg
mov
imul
daa
retf
pop
cmp
sub
cmp
mov
dec
xchg
pop
xchg
pop
test
js
or
sbb
retf
pop
fnsetpm(287
enter
or
inc
imul
xchg
push
fwait
mov
retf
pop
fild
iret
idiv
out
xor
(bad)
imul
xchg
push
fwait
inc
push
aaa
sti
daa
retf
repnz
sub
fsubp
or
sbb
imul
xchg
push
jle
push
aaa
sti
daa
retf
icebp
cmp
out
xlat
std
and
jnp
lods
xchg
pop
xchg
push
jge
jmp
sti
daa
sub
neg
add
xor
and
mov
ins
mov
inc
jmp
sti
shr
pop
sub
rol
in
xor
and
pop
outs
inc
ja
mov
jmp
adc
retf
pop
fild
ret
pop
cmp
or
repz
imul
xchg
push
jb
jmp
sti
daa
and
fild
sub
ror
or
sbb
xor
xchg
push
fwait
inc
jmp
adc
retf
pop
fucomi
ret
out
ds
imul
ins
inc
popf
push
lea
jno
add
adc
retf
pop
fild
rcr
(bad)
imul
dec
xchg
pop
ins
inc
ja
mov
jmp
sti
daa
and
fild
sub
ror
cmp
sub
pop
nop
dec
dec
xchg
pop
xchg
push
mov
stos
jmp
sti
daa
daa
pop
fild
sub
xlat
or
cmp
sub
jnp
imul
mov
jbe
push
ficom
retf
fild
(bad)
idiv
out
cmp
(bad)
imul
push
call
push
ficom
pop
sub
aad
in
cmc
(bad)
imul
imul
fwait
inc
add
clc
fild
sub
aam
or
sbb
imul
xchg
push
fwait
test
fcom
and
xor
les
aam
or
sbb
imul
xchg
push
fwait
mov
aaa
sti
daa
cmp
fild
sub
retf
out
xlat
sbb
fwait
inc
mov
stos
ja
xchg
jnp
imul
sti
(bad)
retf
pop
fild
fiadd
retf
es
imul
jbe
ja
addr16
fwait
inc
jmp
sti
daa
retf
pop
sub
sub
cmp
or
sbb
cdq
inc
mov
pop
test
jns
imul
sub
cmp
stc
xlat
sbb
imul
dec
xchg
test
xchg
mov
inc
sbb
sti
daa
retf
in
pop
sub
cmp
and
xor
mov
cmps
dec
fs
xchg
push
fwait
mov
aaa
sti
daa
cmp
fild
sub
out
xlat
out
(bad)
imul
xchg
mov
inc
jmp
sti
ror
pop
fild
fcomip
cmp
or
sbb
imul
jae
ja
addr16
fwait
inc
jmp
(bad)
retf
pop
fcomi
fiadd
cmp
or
out
(bad)
imul
jb
ja
mov
jmp
push
daa
retf
pop
fcomi
fiadd
into
adc
xlat
sbb
imul
mov
ja
addr16
ins
mov
aaa
sti
daa
retf
loope
pop
sub
int
or
sbb
imul
xchg
push
ins
inc
jmp
sti
ror
pop
fild
(bad)
cmp
or
in
(bad)
imul
xchg
push
fwait
mov
ror
pop
fild
sub
cmp
or
in
(bad)
imul
jo
ja
mov
adc
add
xor
and
ror
ret
pop
or
sbb
xchg
dec
sbb
pop
xchg
push
arpl
retf
pop
fild
shl
cmp
or
sbb
imul
jle
ja
addr16
fwait
inc
jmp
add
retf
pop
fild
shl
cmp
or
loop
imul
xchg
mov
inc
jmp
add
retf
pop
(bad)
shl
cmp
or
and
jno
fwait
inc
jmp
sti
daa
retf
pop
and
ror
loope
nop
dec
sbb
xchg
push
fwait
inc
adc
sti
daa
retf
in
fild
sub
rcr
sbb
nop
dec
jnp
xor
mov
inc
jmp
jg
retf
adc
lahf
push
idiv
out
push
lahf
inc
imul
enter
aad
lds
imul
in
xchg
dec
test
push
mov
dec
in
imul
rcr
and
cmp
adc
or
jp
imul
dec
sbb
loop
ror
ret
in
and
adc
add
jno
popa
mov
scas
jae
mov
inc
jmp
push
fiadd
sub
cmp
or
sbb
imul
pop
mov
pop
sub
pop
mov
jle
sbb
jnp
sbb
aas
xchg
and
or
push
mul
lahf
pop
cwde
inc
movs
je
jne
mov
outs
(bad)
sub
xchg
adc
out
push
inc
push
sahf
push
mov
not
or
push
out
dec
clc
sub
cld
push
mov
sub
jb
sub
jne
pop
mov
lock
mov
or
jns
push
push
sahf
pop
out
mov
xchg
rcr
ret
sub
jmp
push
hlt
pop
jmp
jae
pusha
dec
mov
imul
fstp
leave
and
and
cs
jae
cdq
cmp
cmp
or
cmp
mov
inc
xchg
inc
scas
dec
stc
jb
inc
not
pusha
xlat
arpl
pop
in
enter
loop
adc
fistp
fwait
xor
scas
jg
outs
pop
div
inc
xlat
jp
add
pop
cmps
sub
cmp
fdiv
fcom
pop
fwait
mov
addr16
jbe
inc
sub
pop
jecxz
xchg
or
pop
fsubr
dec
iret
daa
into
adc
(bad)
addr16
js
pop
sub
xchg
mov
cwde
cmp
das
(bad)
(bad)
sbb
das
lahf
ja
mov
mov
cmps
push
fstp
into
sub
aas
jmp
aaa
mov
pop
test
pop
enter
imul
sbb
adc
and
aaa
shr
sti
popa
scas
and
retf
jae
imul
mov
aam
aad
sar
fwait
je
adc
mov
jns
pusha
dec
test
cmp
or
sbb
add
(bad)
xchg
addr16
mov
xchg
inc
aam
jecxz
mov
aam
les
aam
mov
je
cmp
movs
pop
popf
push
les
ror
mov
hlt
jmp
aam
jmp
mov
bound
dec
cmps
pop
mov
xchg
push
out
xlat
ds
stos
push
jmp
inc
fild
jnp
push
imul
xchg
gs
sub
rcr
aaa
lahf
or
ja
addr16
jbe
inc
(bad)
idiv
dec
mov
pop
idiv
std
cmp
xor
ret
and
shl
cwde
dec
scas
jnp
inc
sbb
jb
pop
repz
fnstenv
in
push
retf
push
shl
cwde
dec
scas
jnp
inc
jno
pop
or
mov
mov
aad
test
rcr
aaa
lahf
or
push
call
xchg
je
sub
sub
retf
es
push
mov
outs
dec
mov
loopne
xor
neg
retf
sbb
call
ja
inc
stos
jle
outs
dec
fwait
jl
cmp
jle
sub
cmp
sub
sbb
fst
test
xchg
push
test
cmp
rcr
sub
cmp
aas
xlat
push
rcl
pop
stos
push
mov
mov
mov
aad
xchg
push
mov
aas
sti
sbb
in
ja
adc
aas
out
pop
test
daa
mov
mov
mov
jg
sub
inc
aam
jecxz
mov
in
call
push
mov
inc
adc
pop
xchg
das
mov
stos
sub
sub
daa
enter
sbb
add
popf
inc
movs
push
fld
enter
mov
sbb
dec
xchg
sub
jmp
retf
add
push
clc
and
pop
scas
je
idiv
mov
jle
push
call
das
xchg
ja
addr16
les
add
daa
scas
js
pop
push
pop
mov
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
inc
mov
das
jecxz
ror
and
adc
add
ja
addr16
mov
cmps
jns
dec
test
sub
cmp
or
daa
or
sbb
sub
cmp
dec
xchg
pop
test
jns
mov
test
mov
push
loope
lock
fst
call
jnp
imul
data16
jbe
add
call
aam
jecxz
repz
or
mov
lea
pusha
lods
jo
add
pop
repz
add
test
cmc
cmp
or
sbb
call
adc
add
push
popf
inc
ins
mov
mov
sub
xor
add
adc
loop
repnz
ins
sbb
aaa
cli
and
lods
jo
outs
sbb
inc
fwait
push
mov
cli
ss
cmc
sub
sbb
or
mov
cmps
push
pop
test
cmp
sub
sbb
or
clc
and
xor
add
in
cli
or
xor
es
aam
cmp
or
pop
ret
outs
mov
mov
lods
jno
popa
lea
inc
in
xor
and
pop
ror
and
xor
add
adc
popa
mov
push
mov
pop
xchg
dec
out
imul
(bad)
sbb
or
std
xor
inc
cdq
push
mov
imul
gs
adc
and
xor
ret
psrlq
jecxz
repnz
or
mov
mov
pusha
lods
jo
movnti
repz
loop
adc
add
xor
pop
xchg
repz
loop
rcl
iret
loop
icebp
sub
sbb
or
jnp
imul
jbe
inc
cdq
push
mov
fcom
sti
daa
jmp
fild
retf
data16
jne
inc
mov
movs
push
xchg
aas
jecxz
repz
sbb
or
cmp
aaa
fwait
inc
mov
data16
jbe
test
jns
imul
add
adc
and
xor
popa
lods
jo
or
arpl
xor
and
rol
or
xor
daa
cli
push
mov
out
aad
ret
out
xor
and
adc
add
push
popf
inc
ins
mov
mov
and
xor
add
adc
loope
icebp
sub
mov
pop
xchg
dec
addr16
push
mov
loopne
call
or
out
xchg
dec
test
push
inc
mov
inc
jmp
cli
es
add
or
sbb
push
xchg
pop
sub
popf
inc
in
xor
and
adc
adc
loope
(bad)
adc
add
ja
gs
mov
fwait
inc
stos
ja
retfw
push
jmp
les
hlt
cmp
dec
xchg
pop
sub
mov
lods
jno
popa
int
fadd
in
xor
das
add
adc
and
(bad)
aas
shl
stc
and
rcr
in
inc
fwait
push
mov
jbe
test
dec
movs
js
push
sti
daa
jmp
sbb
or
cmp
sub
pop
test
js
push
push
mov
add
adc
and
xor
popf
push
mov
stc
xor
sbb
or
jmp
out
xor
add
adc
inc
mov
scas
arpl
xor
and
adc
add
icebp
sub
rcr
cmps
jnp
dec
xchg
stos
mov
inc
cdq
xor
loopne
pop
cs
cmp
push
(bad)
xlat
jp
push
xchg
mov
inc
mov
das
jecxz
ror
ret
out
and
adc
add
jno
pusha
mov
mov
cmps
jnp
dec
xchg
sub
cmp
or
sbb
and
adc
cmp
jmp
sti
daa
retf
pop
fcmovnbe
xchg
pop
mov
(bad)
sti
sbb
dec
lahf
push
xchg
pop
xlat
inc
xchg
cmp
sbb
push
mov
mov
xor
imul
stos
data16
mov
mov
pop
mov
movs
jo
pop
arpl
jno
dec
mov
or
jne
adc
cmp
fisubr
cld
xor
sub
adc
push
sub
xor
add
sbb
pop
sbb
movs
ins
dec
stc
mov
sbb
outs
loopne
push
in
fcomp
jno
pop
lea
repnz
popf
push
mov
push
pushf
inc
in
cmp
cs
adc
add
(bad)
xor
leave
inc
shr
mov
cmc
fldenv
clc
inc
lods
sbb
dec
pop
(bad)
xor
pop
rcl
lds
jb
inc
xchg
push
mov
push
call
jo
jge
(bad)
jl
and
addr16
imul
inc
xor
test
sbb
or
hlt
cmp
add
sbb
scas
inc
lahf
push
mov
push
fwait
cmp
add
push
(bad)
dec
test
jp
add
or
push
xchg
pop
cdq
dec
jecxz
sti
adc
or
inc
push
lock
cmps
iret
or
outs
(bad)
mov
cdq
jmp
xchg
test
test
test
sub
icebp
mov
leave
in
repnz
inc
jb
mov
inc
sti
stc
pop
test
or
mov
mov
(bad)
out
pop
mov
imul
fnstsw
cmps
lea
push
push
or
aaa
or
push
pop
jmp
aaa
movs
aam
fwait
push
mov
clc
fdivp
add
push
and
cdq
repnz
call
pop
push
xchg
push
repnz
pop
add
test
sub
adc
repz
add
fld
rcl
fwait
mov
aam
loop
(bad)
dec
(bad)
pop
les
pop
push
dec
or
outs
cdq
ret
push
test
xor
call
inc
sub
and
lock
scas
jae
sbb
adc
retf
repnz
call
mov
outs
xor
add
pmulhuw
cmps
mov
cmp
pusha
outs
xchg
add
jne
repnz
xor
dec
inc
sub
pop
scas
xchg
pop
pop
(bad)
sub
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
call
mov
inc
jmp
sti
daa
stos
js
pop
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
push
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
jle
adc
jnp
and
pop
xchg
pop
test
outs
cwde
dec
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
call
mov
jmp
mov
mov
xchg
and
push
outs
idiv
cmps
dec
aad
fidivr
loop
cmc
enter
in
mov
dec
stos
jle
and
cmp
add
hlt
sub
retf
pop
stos
ja
mov
push
scas
jae
or
jne
sbb
inc
les
cmp
into
adc
adc
xor
add
push
sti
daa
jmp
scas
jne
idiv
xchg
sbb
push
fistp
leave
and
sub
jmp
inc
movs
jae
pop
dec
xchg
sbb
jb
imul
les
add
cmp
sub
push
aam
test
idiv
out
xlat
sbb
dec
xchg
pop
out
les
push
(bad)
ds
push
mov
xchg
dec
mov
xlat
sbb
imul
xlat
dec
in
mov
stos
xor
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
sub
pop
xchg
push
icebp
jns
popa
pop
fwait
cmp
add
repnz
cmc
int
leave
add
xor
(bad)
retf
pop
fild
sub
cmp
or
xor
ret
pop
jmp
jmp
inc
stos
jle
jae
xchg
jns
outs
mov
mov
cs
jecxz
push
mov
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
test
daa
retf
arpl
out
xlat
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
adc
arpl
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
and
sti
inc
retf
pop
fild
sub
pop
mov
xlat
sbb
lock
les
fimul
fdivr
(bad)
xor
movs
pop
fild
dec
idiv
out
xlat
sbb
add
aaa
xchg
push
fwait
inc
mov
sti
pop
retf
pop
mov
out
xlat
imul
dec
xchg
xor
mov
inc
jmp
sti
daa
retf
pop
mov
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
ds
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
push
mov
xlat
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
cmps
dec
xchg
pop
jmp
ja
adc
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
mov
pop
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
add
xchg
pop
jl
sbb
mov
int3
inc
adc
call
idiv
out
xlat
sbb
cmp
mov
inc
jmp
sti
daa
mov
idiv
out
xlat
sbb
imul
out
ja
mov
inc
jmp
sti
daa
retf
outs
fwait
pop
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
pop
sub
cmp
or
sbb
imul
mov
inc
jmp
pop
fld
sub
cmp
or
sbb
imul
xchg
push
cwde
inc
jmp
sti
daa
enter
sub
cmp
or
sbb
push
xchg
pop
test
push
fwait
inc
jmp
sti
daa
retf
add
jp
idiv
in
fstp
(bad)
imul
xchg
push
fwait
inc
(bad)
push
retf
or
add
adc
int
fild
outs
mov
movs
inc
mov
mov
das
sti
xor
daa
rol
cmp
xor
push
sbb
inc
int3
lahf
bound
push
shr
clc
dec
push
jmp
das
lahf
jnp
sbb
xor
jg
or
sbb
add
dec
(bad)
dec
clc
sbb
pop
xchg
jnp
pop
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
mov
jmp
cmp
push
fwait
inc
jmp
sti
mov
clc
sbb
or
cdq
jge
dec
int3
adc
mov
add
je
das
repnz
lods
mov
mov
mov
or
popa
mov
mov
push
int3
cmp
lahf
cs
adc
add
jg
bound
aam
mov
hlt
das
retf
cmp
dec
scas
rol
sub
jnp
mov
jns
sub
outs
rcl
in
sub
outs
cmps
cmp
pop
mov
int
cwde
pop
loop
mov
adc
inc
(bad)
push
repnz
es
jnp
pop
(bad)
and
js
ret
push
mov
pop
xor
add
mov
(bad)
sar
fdiv
cmps
frstor
xor
ret
aas
mov
inc
jmp
push
xchg
jle
outs
mov
or
in
fld
iret
sbb
ja
call
sti
daa
retf
pop
(bad)
aam
les
hlt
xlat
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
(bad)
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
add
retf
pop
fild
idiv
out
xlat
sbb
imul
xchg
push
fwait
mov
enter
sub
cmp
or
sbb
xchg
mov
cmps
mov
pop
xchg
mov
inc
jmp
sti
daa
retf
pop
(bad)
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
iret
pop
fild
sub
cmp
or
sbb
imul
xchg
addr16
fwait
inc
adc
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
test
push
fwait
inc
jmp
sti
daa
enter
sub
cmp
hlt
xlat
sbb
imul
stos
ja
mov
inc
jmp
sti
daa
enter
sub
cmp
or
sbb
push
xchg
pop
(bad)
stos
ja
mov
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
stos
ja
mov
inc
jmp
sti
daa
retf
pop
and
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
addr16
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
lahf
inc
jmp
add
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
pop
xchg
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
ja
mov
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
inc
jmp
sti
daa
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
ja
mov
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
in
xchg
dec
test
push
inc
cwde
je
fs
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
cmp
movs
js
mov
test
mov
xor
and
aam
les
hlt
sub
(bad)
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
xchg
push
fwait
inc
jmp
sti
daa
retf
pop
fild
sub
cmp
or
sbb
imul
aam
jecxz
jmp
in
div
mov
test
sbb
repz
rcr
out
jne
ss
ds
out
mul
xlat
push
sahf
push
mov
lods
imul
outs
scas
push
fimul
fwait
sub
xor
inc
call
add
adc
arpl
xchg
jle
cmp
dec
xchg
jge
sub
fist
push
cmps
xor
test
movs
push
(bad)
ja
add
xchg
loop
movs
sbb
imul
fisttp
leave
adc
sti
(bad)
sti
sahf
sbb
mul
in
xor
push
out
ret
cmps
add
xchg
cmp
inc
dec
mov
aad
aaa
fild
mov
(bad)
cs
cmc
fist
xor
ja
xchg
retf
mov
xlat
cli
call
sbb
push
xchg
ret
in
mov
mov
sti
daa
test
mov
pop
and
inc
sbb
lds
in
out
gs
pop
fldenv
retf
sub
inc
rcr
push
fwait
or
push
xchg
push
adc
sbb
test
idiv
mov
gs
mov
push
rol
ja
xchg
cmp
sub
sti
fst
push
movs
mov
mov
ds
cdq
add
pop
sahf
push
jmp
fs
fs
mov
ret
mov
in
mov
imul
xchg
sti
mov
sub
fwait
js
add
cmps
fstp
test
cmp
or
(bad)
in
mov
enter
sub
and
imul
cdq
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
loop
repnz
sbb
or
pop
xchg
dec
bound
push
mov
stc
xor
add
adc
add
add
add
add
nop
nop
nop
nop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
xor
mov
test
je
mov
inc
xor
je
dec
je
test
jne
sub
jb
push
mov
shl
add
mov
shl
add
jmp
pop
add
je
mov
inc
xor
je
dec
jne
pop
ret
sub
jb
mov
xor
mov
add
xor
xor
add
and
je
mov
xor
je
xor
je
shr
xor
je
xor
je
jmp
pop
lea
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
call
call
mov
call
fnclex
ret
ret
mov
mov
mov
mov
mov
mov
mov
ret
push
call
pop
ret
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
push
call
pop
push
call
ret
push
push
call
pop
pop
ret
push
mov
sub
fld
fstp
fld
fstp
fld
fdiv
fmul
fsubr
fstp
fld
fcomp
fnstsw
sahf
jbe
push
pop
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
movsx
push
call
cmp
pop
je
inc
cmp
jle
movsx
push
push
call
pop
pop
jmp
movsx
mov
mov
and
test
jne
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
ret
mov
mov
mov
test
je
cmp
je
mov
inc
test
jne
mov
inc
test
je
mov
test
je
cmp
je
cmp
je
inc
jmp
mov
dec
cmp
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
ret
mov
fld
fcomp
fnstsw
sahf
jb
push
pop
ret
xor
ret
push
mov
push
push
cmp
push
je
lea
push
call
mov
pop
pop
mov
mov
mov
mov
leave
ret
lea
push
call
mov
pop
pop
mov
mov
leave
ret
push
mov
cmp
push
push
je
mov
mov
xor
mov
test
setg
push
xor
cmp
sete
add
push
call
pop
pop
jmp
mov
push
push
fld
fstp
call
mov
mov
push
mov
lea
push
xor
cmp
sete
xor
test
setg
add
add
push
call
add
cmp
mov
jne
mov
inc
test
jle
mov
push
lea
mov
mov
mov
pop
mov
xor
push
cmp
sete
add
add
push
call
cmp
pop
pop
mov
je
mov
mov
inc
cmp
je
mov
dec
jns
neg
mov
inc
cmp
jl
mov
push
cdq
pop
idiv
add
mov
cdq
idiv
mov
inc
cmp
jl
mov
push
cdq
pop
idiv
add
mov
cdq
idiv
mov
add
mov
pop
pop
pop
ret
cmp
push
push
mov
push
push
je
mov
mov
mov
cmp
jne
xor
cmp
sete
add
add
mov
mov
and
jmp
mov
push
push
fld
fstp
call
mov
mov
push
mov
add
push
xor
cmp
sete
add
push
call
add
cmp
mov
jne
mov
lea
mov
test
jg
push
push
call
pop
mov
pop
inc
jmp
add
test
jle
push
push
call
mov
pop
mov
mov
inc
pop
test
jge
cmp
je
neg
jmp
neg
cmp
jl
mov
push
push
call
push
push
push
call
add
pop
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
push
fld
fstp
call
mov
mov
dec
mov
mov
xor
cmp
push
push
sete
add
mov
push
call
mov
add
mov
dec
cmp
setl
mov
mov
dec
cmp
mov
jl
cmp
jge
test
je
mov
inc
test
jne
and
push
push
push
call
add
jmp
push
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
push
push
push
call
and
add
ret
push
mov
push
push
call
and
add
ret
push
mov
cmp
je
cmp
je
cmp
jne
push
push
push
call
add
pop
ret
push
push
push
push
call
jmp
push
push
push
push
call
add
pop
ret
push
mov
test
je
push
mov
push
call
inc
push
push
add
push
call
add
pop
pop
ret
push
mov
push
push
mov
test
je
mov
cmp
jne
push
call
pop
test
push
je
push
call
pop
pop
jmp
cmp
jne
lea
push
lea
push
push
call
add
test
je
push
push
push
call
add
jmp
push
push
push
call
pop
leave
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
pop
test
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
test
inc
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
push
mov
push
and
call
cmp
jne
mov
test
je
add
mov
mov
mov
mov
pop
ret
push
mov
mov
call
lea
push
push
mov
call
test
je
cmp
jne
cmp
jb
push
pop
jmp
lea
push
push
push
call
test
je
xor
lea
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
push
push
call
add
test
jne
lea
jmp
lea
push
push
push
call
cmp
lea
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
lea
push
call
pop
pop
cmp
je
push
push
call
pop
cmp
pop
je
inc
mov
cmp
je
cmp
jne
mov
jmp
inc
cmp
jne
push
push
push
call
add
cmp
je
cmp
je
cmp
je
lea
push
call
cmp
pop
sbb
add
pop
leave
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
cmp
mov
jne
push
call
pop
jmp
cmp
jne
call
test
jne
push
call
xor
ret
push
pop
ret
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jb
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
mov
push
push
fstcw
push
call
mov
mov
not
and
mov
and
or
push
call
pop
mov
pop
fldcw
mov
pop
leave
ret
mov
and
push
push
call
pop
pop
ret
push
mov
xor
push
test
push
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
movzx
push
mov
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
pop
je
cmp
jne
or
jmp
or
pop
pop
test
pop
je
or
ret
push
mov
xor
push
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
pop
test
pop
je
or
ret
push
mov
push
mov
lea
cmp
ja
mov
movzx
jmp
mov
push
mov
sar
movzx
test
pop
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzx
and
leave
ret
push
mov
push
cmp
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
push
mov
mov
pop
jmp
and
mov
mov
push
push
lea
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
pop
pop
leave
ret
mov
push
push
cdq
pop
idiv
push
mov
mov
cdq
idiv
pop
mov
sub
or
shl
not
test
jne
inc
cmp
jge
lea
cmp
jne
inc
add
cmp
jl
push
pop
pop
ret
xor
pop
ret
mov
push
push
push
push
mov
cdq
pop
idiv
mov
mov
cdq
idiv
lea
push
push
pop
push
pop
sub
shl
push
push
call
add
dec
js
lea
test
je
push
push
push
call
add
dec
sub
test
jge
pop
pop
pop
ret
push
mov
push
push
mov
push
push
push
lea
push
pop
and
lea
push
mov
pop
cdq
idiv
push
mov
mov
cdq
idiv
mov
pop
push
mov
lea
mov
sub
pop
mov
shl
test
je
inc
push
push
call
pop
test
pop
jne
push
push
call
pop
mov
pop
mov
or
mov
shl
push
pop
and
mov
inc
cmp
jge
mov
sub
lea
xor
rep
mov
pop
pop
pop
leave
ret
mov
mov
push
push
sub
pop
mov
mov
add
dec
jne
pop
ret
push
mov
xor
stos
stos
stos
pop
ret
mov
xor
cmp
jne
inc
add
cmp
jl
push
pop
ret
xor
ret
push
mov
sub
mov
push
push
push
push
mov
pop
or
cdq
mov
mov
idiv
mov
mov
cdq
idiv
and
mov
shl
sub
not
mov
mov
and
mov
mov
shr
or
mov
mov
mov
add
shl
dec
mov
jne
mov
push
pop
mov
push
pop
shl
cmp
jl
mov
mov
sub
mov
mov
jmp
mov
and
dec
sub
jns
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
movzx
mov
and
mov
mov
mov
mov
movzx
mov
and
sub
mov
shl
cmp
mov
jne
lea
xor
push
call
test
pop
jne
lea
push
call
pop
push
pop
jmp
lea
push
lea
push
call
push
lea
push
call
add
test
je
inc
mov
mov
sub
cmp
jge
lea
push
call
pop
jmp
cmp
jg
sub
mov
lea
push
lea
push
call
lea
push
push
call
push
lea
push
call
mov
inc
push
lea
push
call
add
xor
jmp
cmp
jl
lea
push
call
push
or
lea
push
call
mov
add
add
push
jmp
push
mov
and
lea
push
add
call
pop
pop
xor
push
pop
sub
mov
shl
mov
neg
sbb
and
or
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
xor
push
push
push
push
push
lea
push
lea
push
call
push
lea
push
call
add
leave
ret
push
mov
sub
xor
push
push
push
push
push
lea
push
lea
push
call
push
lea
push
call
add
leave
ret
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
mov
push
mov
push
mov
mov
push
lea
mov
test
mov
jle
mov
xor
mov
test
je
movsx
inc
jmp
push
pop
mov
inc
dec
jne
mov
and
test
jl
cmp
jl
dec
cmp
jne
mov
jmp
inc
cmp
jne
inc
jmp
push
call
inc
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
lea
push
call
pop
lea
pop
push
push
push
sub
mov
movs
movs
movs
call
mov
add
movsx
mov
pop
movsx
mov
mov
mov
pop
leave
ret
push
mov
push
mov
push
push
push
mov
mov
mov
and
shr
and
mov
mov
mov
movzx
mov
and
test
mov
je
cmp
je
lea
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
lea
mov
mov
shr
shl
or
mov
or
shl
mov
mov
test
jne
mov
add
mov
shr
or
lea
mov
mov
add
mov
jmp
mov
or
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shl
add
and
adc
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
(bad)
and
jl
inc
add
add
add
add
add
add
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
inc
add
and
shl
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
and
add
inc
add
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
inc
add
and
add
and
add
and
add
inc
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
and
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
call
pop
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
mov
push
mov
cmp
jne
cmp
ja
push
call
test
pop
je
pop
ret
cmp
jne
mov
test
je
lea
and
jmp
push
pop
cmp
ja
mov
shr
push
call
test
pop
jne
jmp
test
jne
push
pop
add
and
push
push
push
call
pop
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
push
mov
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
push
push
mov
mov
push
mov
add
sub
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
mov
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
mov
shr
lea
not
and
dec
jne
mov
and
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
and
dec
jne
mov
and
jmp
lea
mov
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
cmp
push
push
push
push
jne
mov
jmp
push
push
push
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
mov
push
push
push
call
test
je
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
xor
mov
xor
cmp
setge
dec
and
dec
inc
mov
mov
add
cmp
jl
push
push
push
call
add
mov
add
cmp
jae
or
lea
mov
mov
add
jmp
mov
jmp
push
push
push
call
cmp
je
push
push
push
call
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
push
call
pop
ret
or
pop
ret
push
mov
push
push
push
mov
push
cmp
je
and
lea
mov
cmp
jne
mov
push
add
push
push
call
test
je
or
dec
mov
test
je
cmp
jbe
mov
inc
dec
je
sub
sub
test
jge
cmp
mov
mov
je
cmp
jne
push
lea
pop
cmp
jne
inc
add
cmp
jl
cmp
jne
push
call
pop
cmp
je
cmp
jg
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
pop
sar
lea
ret
xor
pop
ret
mov
mov
sub
sar
lea
mov
movzx
add
and
cmp
mov
jne
inc
cmp
jne
push
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
lea
add
cmp
mov
jb
jmp
mov
mov
mov
lea
mov
cmp
mov
jae
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
add
add
cmp
jb
jmp
mov
mov
cmp
je
jmp
mov
sub
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
cmp
je
jmp
mov
and
mov
mov
sub
sub
sar
shl
add
cmp
jne
cmp
jge
add
inc
cmp
je
mov
push
shl
push
push
push
mov
call
cmp
jne
push
push
push
call
mov
add
test
mov
jle
lea
mov
or
lea
mov
mov
mov
mov
mov
add
add
dec
jne
mov
lea
cmp
jae
cmp
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzx
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
and
lea
mov
lea
jmp
add
cmp
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzx
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzx
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jb
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
inc
add
cmp
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
inc
add
add
add
add
add
add
add
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwde
ds
add
ds
add
ds
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
inc
add
inc
add
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
aas
inc
add
inc
add
inc
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
add
inc
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
push
push
call
add
ret
push
mov
sub
push
and
push
push
mov
mov
lea
mov
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
or
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
div
mov
mov
cmp
movzx
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
sub
jmp
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
push
call
pop
mov
sub
cmp
jae
mov
or
cmp
jb
jne
or
xor
div
cmp
jbe
or
jmp
imul
add
mov
mov
inc
mov
jmp
mov
dec
mov
test
jne
test
je
mov
mov
and
jmp
test
mov
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
test
mov
je
or
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
test
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
mov
push
mov
xor
lea
cmp
jb
cmp
jae
push
pop
mov
pop
mov
ret
push
mov
push
mov
push
push
push
call
add
test
je
lea
push
push
push
call
add
test
je
inc
lea
push
push
push
call
add
test
je
inc
lea
push
push
push
call
add
pop
pop
ret
mov
push
push
mov
mov
mov
add
mov
lea
shr
or
mov
mov
mov
shr
shl
or
pop
mov
pop
ret
mov
push
push
mov
mov
mov
mov
shl
shr
or
mov
mov
shl
shr
shr
or
pop
mov
mov
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
push
mov
mov
mov
mov
jbe
push
mov
mov
lea
movs
movs
push
movs
call
push
call
lea
push
push
call
push
call
mov
and
and
movsx
mov
lea
push
push
call
add
inc
dec
jne
xor
pop
cmp
jne
mov
mov
shr
mov
mov
mov
shr
shl
or
shl
add
mov
mov
jmp
mov
test
jne
push
call
add
pop
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
push
mov
lea
push
mov
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
push
pop
mov
inc
cmp
ja
jmp
cmp
jl
cmp
jg
push
jmp
cmp
jne
push
jmp
movsx
sub
je
dec
dec
je
sub
jne
jmp
push
mov
pop
jmp
and
push
pop
jmp
cmp
mov
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
push
jmp
dec
push
jmp
cmp
jl
cmp
jle
cmp
je
cmp
jne
mov
jmp
mov
cmp
jle
movzx
push
push
call
pop
pop
push
pop
jmp
mov
movzx
mov
and
test
je
cmp
jae
mov
inc
sub
inc
mov
jmp
inc
mov
inc
jmp
cmp
jne
mov
jmp
cmp
mov
mov
jne
cmp
jne
dec
mov
inc
jmp
cmp
jle
movzx
push
push
call
pop
pop
push
pop
jmp
mov
movzx
mov
and
test
je
cmp
jae
mov
inc
sub
inc
dec
mov
mov
inc
jmp
cmp
je
cmp
je
jmp
cmp
mov
jle
movzx
push
push
call
pop
pop
push
pop
jmp
mov
movzx
mov
and
test
je
mov
jmp
lea
cmp
mov
jl
cmp
jle
movsx
sub
je
dec
dec
je
sub
jne
push
jmp
mov
cmp
jne
mov
inc
jmp
cmp
jl
cmp
jg
jmp
cmp
jl
cmp
jg
push
pop
dec
jmp
cmp
jne
jmp
cmp
je
movsx
lea
sub
mov
je
dec
dec
jne
or
push
pop
jmp
push
pop
jmp
push
dec
pop
cmp
je
jmp
mov
jmp
mov
xor
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
movsx
lea
lea
cmp
jg
mov
inc
jmp
mov
mov
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
mov
inc
jmp
dec
jmp
mov
mov
cmp
mov
je
push
pop
cmp
jbe
cmp
jl
inc
mov
mov
dec
inc
jmp
mov
cmp
jbe
dec
cmp
jne
dec
inc
jmp
lea
push
lea
push
push
call
mov
xor
add
cmp
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
jle
mov
mov
mov
mov
mov
cmp
je
xor
mov
mov
xor
mov
jmp
cmp
jge
mov
jmp
push
push
lea
push
call
mov
mov
mov
mov
add
jmp
xor
xor
xor
xor
jmp
xor
xor
xor
xor
mov
jmp
cmp
je
xor
xor
xor
xor
mov
mov
or
pop
mov
mov
mov
mov
pop
mov
pop
leave
ret
xchg
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
in
sub
mov
push
mov
push
mov
mov
and
and
test
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
jmp
mov
mov
test
jne
test
jne
cmp
jne
and
mov
mov
mov
jmp
cmp
jne
mov
mov
cmp
jne
cmp
je
test
jne
push
jmp
test
je
cmp
jne
cmp
jne
push
jmp
cmp
jne
cmp
jne
push
lea
push
call
pop
mov
pop
and
jmp
push
lea
push
call
pop
mov
pop
jmp
movzx
mov
mov
shr
imul
shr
and
push
lea
mov
imul
mov
lea
mov
sar
mov
movsx
neg
push
lea
push
call
add
cmp
jb
lea
inc
push
lea
push
call
pop
pop
test
mov
je
mov
movsx
add
test
jg
jmp
mov
cmp
jle
push
pop
movzx
sub
and
mov
lea
push
call
dec
pop
jne
test
jge
neg
and
jle
lea
push
call
dec
pop
jne
lea
lea
test
mov
jle
mov
lea
lea
movs
movs
lea
push
movs
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
and
add
add
inc
dec
mov
jne
mov
mov
dec
dec
cmp
lea
jl
cmp
jb
cmp
jne
mov
dec
jmp
cmp
jae
inc
inc
inc
sub
sub
mov
movsx
and
mov
pop
pop
pop
leave
ret
cmp
jb
cmp
jne
dec
jmp
cmp
jae
and
mov
mov
mov
and
push
pop
jmp
push
mov
push
mov
imul
cmp
push
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
mov
cmp
jne
mov
cmp
ja
push
call
mov
pop
test
jne
jmp
cmp
jne
cmp
ja
mov
shr
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
push
jmp
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
push
mov
push
cmp
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
xor
and
and
and
cmp
lea
mov
jae
cmp
jae
cmp
ja
cmp
ja
xor
jmp
test
mov
jne
inc
test
jne
xor
cmp
jne
cmp
jne
jmp
xor
cmp
jne
inc
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
mov
mov
add
cmp
jle
add
lea
mov
mov
mov
mov
mov
mov
movzx
movzx
imul
mov
add
push
push
push
call
add
test
je
mov
inc
add
sub
dec
jne
add
inc
dec
cmp
jg
add
cmp
jle
test
jne
lea
push
call
add
pop
cmp
jg
cmp
jg
add
cmp
jge
movsx
neg
add
mov
test
je
inc
lea
push
call
dec
pop
jne
cmp
je
or
cmp
ja
mov
and
cmp
jne
cmp
jne
and
cmp
jne
and
cmp
jne
inc
mov
jmp
inc
jmp
inc
jmp
inc
mov
cmp
jae
mov
or
mov
mov
mov
mov
mov
mov
jmp
neg
sbb
and
and
add
and
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
sub
cmp
je
jge
mov
mov
neg
mov
sub
cmp
jne
mov
mov
cmp
je
push
push
mov
add
sar
and
cmp
je
lea
cmp
lea
jb
lea
movs
movs
movs
dec
lea
push
push
call
pop
pop
xor
cmp
jne
pop
pop
pop
leave
ret
int3
jmp
