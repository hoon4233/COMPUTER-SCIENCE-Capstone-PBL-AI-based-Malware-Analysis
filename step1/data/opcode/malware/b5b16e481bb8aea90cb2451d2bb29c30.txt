test
mov
std
push
movs
sbb
sbb
add
leave
scas
mov
jb
xlat
jle
lods
xor
jp
(bad)
fadd
sbb
test
adc
or
mov
mov
or
and
mov
cs
repz
or
sbb
push
in
xlat
mov
stos
test
out
into
scas
mov
rcl
sub
ja
jbe
jbe
cli
gs
lods
outs
sub
jnp
mov
mov
mov
mov
mov
xchg
int
xchg
call
mov
cli
mov
push
dec
call
pop
imul
adc
cmps
adc
cmp
mov
pop
call
icebp
or
stc
mov
shl
adc
cmp
pop
call
add
mov
dec
test
jns
ja
rcl
pusha
call
call
inc
icebp
cmp
ja
int
jb
sbb
adc
sub
pop
call
cmp
in
adc
(bad)
retf
out
cli
dec
and
outs
mov
call
pop
hlt
mov
call
sub
out
hlt
(bad)
ins
xchg
add
test
stos
push
scas
mov
fidiv
add
adc
xor
and
repnz
jmp
sbb
or
cmp
sub
xchg
adc
jb
mov
push
sub
scas
fld
test
xor
fnstsw
ins
lods
push
out
imul
xor
push
pop
xchg
xor
gs
xor
shr
scas
ins
sub
xor
xchg
inc
hlt
sub
bnd
mov
xor
mov
mov
mov
sbb
cli
imul
sti
sbb
mov
icebp
test
fwait
xor
xor
into
adc
xchg
xor
mov
std
mov
in
pop
mov
bound
in
mov
movs
lock
xchg
mov
mov
inc
int3
test
xchg
popa
pop
sbb
add
add
mov
out
xlat
add
push
fcomp
sbb
fbld
mov
mov
test
sti
sbb
repnz
test
and
lods
jns
mov
pop
ror
mov
jmp
xor
push
es
ss
ins
xor
jp
test
call
cmps
(bad)
pop
sub
add
cmp
call
daa
mov
mov
rcl
mov
mov
repz
adc
stos
adc
leave
sbb
cmps
and
test
push
xchg
push
or
call
cli
xchg
adc
mov
push
popa
push
scas
adc
mov
mov
aad
call
pop
leave
and
shr
push
and
inc
sub
sub
bound
cmps
sub
fmul
xchg
xor
mov
les
ret
out
imul
mov
fwait
rcr
mov
mov
xchg
sti
pushf
dec
sbb
lock
in
ret
and
in
push
fisub
xor
and
imul
leave
mov
scas
push
out
call
mov
movs
add
enter
sub
push
ret
mov
hlt
mov
inc
sbb
mov
popa
test
jp
xchg
sub
lods
mov
sub
adc
jo
sub
xor
cwde
scas
mov
outs
imul
xor
xor
mov
movs
mov
and
mov
arpl
and
add
push
pop
cmps
aad
add
xchg
shr
ins
dec
pusha
xchg
mov
fistp
das
mov
rcr
xchg
popf
sub
push
nop
pop
fiadd
xchg
lods
retf
stc
cmp
aaa
mov
ins
cs
sub
into
sbb
in
sbb
push
adc
push
movs
mov
(bad)
lods
xchg
sub
push
dec
(bad)
sar
in
out
cmps
mov
sub
jmp
add
cmp
fwait
xchg
fucom
movs
sub
adc
adc
cmp
lock
(bad)
add
mov
xchg
jae
push
jno
mov
jl
jbe
loope
retf
out
xlat
xchg
gs
xchg
ss
add
mov
dec
movs
call
stos
cmp
lods
and
sar
loope
pop
lahf
daa
scas
add
enter
pop
push
aad
add
test
frstor
sbb
les
aaa
jb
das
pop
sbb
mov
cmps
push
in
push
xchg
xchg
cmp
cmp
xchg
ds
jmp
jecxz
cs
mov
adc
push
loop
add
add
adc
shl
add
pop
inc
movs
add
loop
push
int3
xor
inc
mov
fild
mov
in
sbb
adc
xchg
out
inc
cmps
xor
sub
xlat
mov
test
xor
test
leave
cmp
push
loop
xor
test
mov
in
fwait
cmps
push
in
cmp
and
mov
and
test
xchg
inc
call
xor
fsub
or
icebp
shl
inc
mov
sbb
xchg
retf
ins
or
test
mov
mov
sub
pop
jne
mov
loope
adc
mov
and
cdq
sub
fldcw
test
push
sub
sub
test
xlat
aam
inc
sbb
mov
imul
mov
data16
add
xor
mov
pop
xor
pusha
(bad)
push
ja
ins
xchg
xchg
mov
(bad)
pop
ins
std
or
cs
jmp
es
pop
add
jmp
cmp
(bad)
fidivr
imul
sub
in
jle
adc
les
es
bound
fmul
cwde
mov
in
xchg
sub
retf
cs
push
pop
push
shl
mov
and
xor
mov
pusha
mov
jg
rcl
out
out
push
mov
ja
ja
les
in
scas
(bad)
outs
pop
mov
sub
mov
arpl
ja
push
xor
xor
jecxz
loope
imul
jmp
jne
adc
xor
lods
popa
xor
add
icebp
mov
retf
xchg
push
pop
hlt
sbb
in
mov
iret
popf
cdq
mov
pop
xchg
sbb
and
je
mov
stos
popa
xor
jno
lods
add
xchg
arpl
xchg
stc
popa
mov
je
sub
mov
mov
cwde
test
pop
mov
icebp
mov
sub
xchg
test
imul
je
cmp
sub
fdiv
retf
mov
rol
mov
retf
scas
test
std
movs
or
fnstsw
test
scas
pop
mov
and
mov
jo
sbb
mov
and
lods
mov
(bad)
mov
retf
fisttp
cmps
adc
mov
push
lods
hlt
adc
sbb
sar
test
sub
mov
lods
mov
push
jo
fs
iret
inc
and
sti
bound
sub
push
add
arpl
loope
jnp
test
gs
aad
or
pop
sub
mov
in
sbb
sbb
mov
sub
and
push
mov
movs
xor
push
or
scas
mov
aaa
mov
rol
mov
out
xor
stos
xor
into
mov
lds
dec
ror
cli
lahf
lods
jo
xchg
dec
test
sub
xor
jl
imul
or
sahf
xchg
jge
mov
xor
bound
add
in
movs
in
test
aaa
mov
push
es
cli
jp
dec
mov
xor
ret
xlat
shl
and
mov
mov
mov
fld
dec
and
dec
mov
and
lea
jo
mov
cmp
mov
imul
pusha
dec
sbb
xchg
dec
lods
xchg
pop
mov
xchg
push
lahf
div
mov
add
cmc
call
mov
pop
popf
lods
adc
rcl
push
aas
mov
mov
sub
dec
xchg
cmps
push
sbb
xor
add
or
out
aaa
call
hlt
aaa
neg
into
mov
iret
cmc
mov
int3
idiv
fdiv
inc
adc
pop
dec
sub
jae
mov
fimul
cmp
dec
cmc
push
call
sub
scas
sbb
sbb
pop
mov
scas
enter
jbe
xchg
push
and
into
sbb
imul
iret
xor
cs
push
leave
xor
sub
rol
popa
mov
leave
jo
or
bound
das
test
pop
mov
inc
inc
mov
xchg
xor
pusha
in
int
dec
shr
mov
adc
mov
mov
in
call
ret
xchg
mov
jo
pop
dec
std
mov
lods
cmp
fisubr
xor
push
cmp
push
mov
shr
(bad)
out
ja
fmul
or
xchg
movs
mov
nop
mov
sub
mov
lahf
cmps
xchg
(bad)
push
jp
sbb
int
retf
mov
retf
lods
push
or
retf
cmp
out
add
add
jp
adc
sahf
mov
mov
push
xor
jle
fmul
add
pop
(bad)
shl
mov
dec
jmp
xor
into
hlt
out
pop
jge
data16
mov
not
xor
scas
std
sub
xor
gs
mov
cmp
je
xor
es
(bad)
sub
sub
ror
cmp
mov
mov
push
jge
sub
xchg
fdiv
pop
leave
ret
or
and
ja
mov
aam
xor
or
jmp
cs
inc
dec
mov
mov
jno
mov
inc
mov
ins
pusha
pop
pop
xor
xor
mov
inc
in
mov
in
scas
or
scas
ins
std
sbb
scas
jns
shl
mov
iret
add
sbb
(bad)
xchg
sub
loop
rol
int3
shl
aad
inc
cmp
mov
or
out
icebp
pop
(bad)
rol
mov
xor
push
sub
scas
xchg
mov
xlat
or
das
or
push
(bad)
retf
cmps
add
sub
shl
push
sub
leave
es
mov
mov
int
mov
jb
jmp
imul
les
dec
pushf
stos
mov
lods
sub
loope
add
lods
pop
cld
jns
xchg
xor
pop
test
bound
xchg
sub
add
call
in
aam
xchg
xchg
inc
fisttp
add
mov
adc
loop
mov
sbb
mov
mov
scas
sub
rcr
xor
mov
jbe
adc
xchg
push
mov
lds
jo
mov
ins
leave
mov
and
ins
mov
mov
jmp
xchg
xchg
adc
mov
and
ret
rcl
mov
int
stc
stos
fneni(8087
mov
stos
cmp
shl
stos
mov
call
sbb
dec
ins
push
sub
mov
outs
daa
mov
test
xchg
leave
sbb
call
aad
mov
imul
imul
mov
add
sbb
or
fild
jns
sbb
pop
mov
imul
ret
ins
push
cmp
pushf
scas
mov
popf
cmp
mov
cmp
mul
cwde
fst
shl
push
out
sub
sub
xor
cmps
xchg
loopne
and
push
fmul
imul
lods
(bad)
int
lods
out
mov
and
xor
dec
fsub
sub
pop
push
aad
lea
dec
pushf
les
out
sub
jmp
mov
xchg
jp
mov
fld
fnsave
leave
arpl
and
mov
lds
cli
test
jb
adc
add
stos
ins
shl
xor
imul
pop
xchg
mov
mov
jp
pusha
ret
fst
scas
sub
leave
push
(bad)
sbb
in
fcomp
push
pop
xlat
int
push
fst
cmp
mov
xor
ins
xor
bnd
mov
xlat
xchg
push
or
push
sub
xchg
push
push
mov
xchg
es
in
bound
add
and
add
mov
leave
xor
dec
out
or
xchg
int3
daa
mov
push
aad
arpl
ret
sub
movs
test
sub
mov
push
fs
test
loope
(bad)
test
xor
xchg
xor
in
std
in
mov
rcl
jle
cmp
adc
out
leave
jmp
shl
mov
fxam
pop
and
test
mov
test
es
sub
mov
cld
test
shr
int3
fidiv
or
lods
mov
sar
cmc
in
scas
mov
add
and
fsubr
test
das
lds
xchg
shl
mov
fs
mov
sbb
out
inc
mov
fadd
jle
cdq
xchg
mov
(bad)
movs
cs
dec
inc
test
mov
out
sbb
sbb
rcl
iret
pop
xor
lods
jge
das
mov
push
lds
es
mov
cmc
cdq
xchg
xor
test
imul
inc
(bad)
pop
out
clc
pop
sub
xor
add
mov
test
mov
pop
mov
mov
or
cmps
xor
in
pop
fisubr
mov
mov
mov
mov
aam
in
les
pop
add
or
out
mov
imul
mov
dec
(bad)
cmc
fldenv
jno
ja
imul
jnp
or
leave
and
mov
push
push
icebp
mov
stos
mov
mov
retf
pop
cmc
or
or
(bad)
aad
or
and
inc
add
push
inc
(bad)
ficomp
pop
mov
fwait
in
bound
retf
mov
mov
test
scas
sub
shl
jns
test
ja
sbb
daa
(bad)
xchg
test
sub
and
add
icebp
test
retf
inc
imul
or
mov
mov
sub
add
js
scas
dec
sub
(bad)
or
test
pop
popa
mov
aad
mov
cs
mov
xor
test
aaa
mov
std
xchg
aam
pop
mov
xchg
scas
pop
xor
mov
pushf
retf
(bad)
daa
scas
push
or
mov
xchg
std
daa
aaa
mov
mov
out
icebp
mov
mov
xchg
mov
push
mov
mov
xchg
stos
stos
sbb
aad
mov
jmp
retf
jb
mov
movs
mov
jmp
mov
mov
shr
pushw
ror
lds
jmp
dec
push
jle
add
cmp
test
pop
dec
xlat
dec
fistp
test
imul
fsub
ja
loope
cmps
and
adc
xchg
xor
call
xchg
and
imul
pop
push
sbb
and
xor
fstp
mov
jmp
sub
jbe
lds
clc
jmp
sti
add
cld
jmp
dec
sbb
jmp
cmp
add
mov
sub
jmp
mov
dec
or
mov
adc
jae
jmp
sbb
pop
sbb
push
push
outs
test
push
jns
repz
and
mov
rcl
out
jmp
ss
sub
fs
rcl
pusha
mov
test
mov
in
fisubr
inc
cld
xor
ins
in
cmp
inc
movs
xchg
sub
test
ret
cmps
sar
in
and
test
jl
cmp
dec
cmp
rcl
mov
out
test
mov
xor
test
mov
and
jns
or
aas
mov
xchg
jno
test
ret
lea
test
xor
and
repnz
xchg
std
pop
out
test
cmp
push
call
ss
add
popa
cmp
pop
test
mov
dec
jb
xchg
sbb
test
or
pop
test
or
fistp
je
cmp
dec
enter
xchg
xchg
out
xlat
pop
cwde
loope
sub
(bad)
adc
mov
stos
xchg
out
mov
div
fsubr
pop
stos
mov
push
cmp
scas
sub
xchg
sbb
mov
xchg
cwde
dec
adc
in
xchg
dec
dec
mov
cmc
popf
outs
sbb
cmp
or
sahf
cli
lods
pusha
mov
push
add
jmp
and
mov
pop
adc
pop
mov
sbb
add
sbb
mov
jmp
dec
mov
imul
out
push
in
sbb
test
out
movhps
test
(bad)
imul
test
push
pop
mov
inc
adc
push
xchg
movs
pop
scas
xchg
(bad)
mov
cs
mov
sbb
sbb
mov
mov
ss
lds
(bad)
dec
shl
xchg
mov
cmp
or
jnp
or
or
xlat
dec
xor
cs
xchg
scas
pop
push
outs
mov
push
int3
inc
mov
xchg
cmp
ins
mov
arpl
loope
ins
mov
sbb
mov
sti
cmps
rcl
test
ins
inc
push
mov
sti
shl
lods
inc
push
xor
out
mov
mov
xchg
sti
xor
sub
xchg
jecxz
push
xchg
mov
and
mov
mov
adc
lea
adc
add
jg
adc
out
aas
mov
xchg
sbb
pop
xchg
xchg
retf
xor
(bad)
push
cwde
pusha
sbb
sbb
mov
cmp
test
imul
mov
sub
int
cli
push
imul
fwait
xor
cmps
in
cmp
fst
inc
xchg
xor
or
fild
mov
xor
fcomp
test
shl
dec
std
ret
or
enter
in
leave
mov
mov
mov
sbb
bound
sbb
in
adc
lea
(bad)
in
shl
xor
bound
pop
cld
sbb
lock
mov
pusha
pop
pusha
mov
mov
mov
add
(bad)
retf
xchg
mov
bound
add
cs
retf
and
in
repz
sub
inc
mov
enter
aas
lods
mov
and
push
sbb
add
nop
shl
cmps
mov
and
jmp
jno
add
ret
test
mov
out
stos
jecxz
(bad)
or
or
mov
fist
jns
adc
lods
jl
mov
fcom
mov
test
adc
pusha
push
push
(bad)
loopne
xchg
and
sbb
test
or
std
(bad)
jmp
lods
or
sahf
fstp
sbb
lds
cmps
mov
jmp
xlat
fcmovnb
adc
das
mov
das
mov
das
add
push
clc
icebp
push
push
and
adc
pop
sub
xchg
daa
add
out
scas
dec
lea
mov
mov
stos
pop
mov
push
push
cmp
cmc
and
and
ror
push
stos
and
mov
rcr
sar
cwde
(bad)
adc
(bad)
cmp
lock
(bad)
push
mov
mov
out
xor
mov
inc
sbb
xor
movs
mov
std
xchg
outs
mov
addr16
stos
sub
xchg
iret
call
scas
xchg
add
push
jmp
das
mov
scas
pop
sbb
push
mov
jns
sti
js
mov
(bad)
out
jno
mov
test
jo
(bad)
(bad)
fadd
mov
jmp
mov
sub
in
lds
repnz
mov
sbb
mov
pop
push
fwait
adc
push
xchg
lds
test
cdq
mov
dec
retf
(bad)
mov
in
enter
mov
dec
cmc
add
mov
push
add
in
add
leave
mov
mov
ret
pop
mov
in
push
enter
mov
cmps
jmp
xchg
push
sbb
test
ins
vshufpd
ror
fnsave
ret
cdq
mov
xchg
jmp
scas
pop
pop
dec
mov
pop
or
arpl
adc
test
rcr
cwde
lea
mov
rcl
daa
jmp
xchg
ret
bound
neg
cmp
jns
movs
mov
mov
stos
cmps
pop
mov
repnz
jmp
ss
hlt
xchg
add
xor
out
xchg
xor
sti
mov
and
add
xor
fnstenv
aaa
sahf
aad
out
and
xchg
pop
test
mov
pop
sub
mov
mov
test
mov
fsub
ins
cmp
cmp
mov
jae
xchg
pop
dec
das
sub
mov
mov
or
xor
cdq
mov
jmp
jle
or
push
cmp
cmp
xor
addr16
scas
push
imul
(bad)
adc
loopne
xchg
push
int
(bad)
mov
cmp
mov
add
cwde
inc
add
mov
adc
iret
cmps
fmul
test
jno
mov
stc
xchg
cmps
retf
das
out
xor
in
mov
mov
scas
cmps
movs
mov
cmp
xchg
pop
mov
aam
push
sbb
mov
add
xchg
xchg
pop
sub
xlat
jecxz
arpl
jp
sbb
mov
pop
xchg
fldenv
mov
add
ret
lods
xchg
mov
ins
mov
push
shl
out
sub
sub
(bad)
push
push
out
sub
xlat
scas
xchg
out
push
movs
clc
xchg
or
sub
cmps
push
ficom
sar
shl
int3
mov
in
push
shl
push
rcl
add
pop
popa
mov
pop
test
xchg
int3
pop
jns
enter
pop
adc
dec
mov
pop
add
cmp
iret
test
lds
mov
xor
(bad)
mov
xchg
cs
out
push
sbb
inc
loope
mov
ffreep
loope
stos
fsub
aaa
std
cmp
ret
sub
movs
inc
pop
hlt
test
sub
stos
cmps
lea
jae
push
jnp
bound
inc
clc
push
(bad)
(bad)
ret
or
dec
xchg
mov
sub
xor
or
mov
and
pop
stos
leave
addr16
mov
inc
mov
stos
mov
bound
mov
jp
sbb
xor
mov
lds
lods
mov
push
repnz
dec
mov
pop
(bad)
out
test
loope
xor
daa
sub
mov
jp
sub
mov
scas
movs
push
xchg
xor
push
xchg
sub
gs
ins
cmp
out
loop
xor
pusha
jo
pop
jecxz
loop
in
das
sub
les
jmp
out
rcl
xchg
or
sar
sbb
movs
xchg
adc
ficomp
or
mov
dec
inc
icebp
mov
jo
scas
fisub
fs
or
out
xor
aas
xor
shl
stos
pop
test
stos
push
pop
inc
push
or
rcl
test
lock
scas
les
and
pop
mov
xor
dec
(bad)
ins
imul
lds
ins
mov
xor
inc
movs
cmc
jle
mov
(bad)
dec
scas
and
shl
or
test
shr
adc
jnp
inc
jmp
test
push
mov
push
imul
(bad)
sbb
xchg
neg
inc
or
push
pop
out
in
dec
outs
add
out
sbb
mov
into
mov
mov
call
mov
dec
ficomp
scas
jnp
cmp
enter
adc
xchg
ins
cmp
shl
arpl
xor
lods
popf
adc
in
jb
xchg
scas
iret
cmp
or
call
xor
call
stos
fs
mov
inc
jbe
gs
push
cwde
inc
sub
sub
aaa
push
xor
inc
sbb
xchg
test
cdq
jp
cwde
mov
push
stos
mov
cwde
mov
mov
xor
mov
scas
fnsave
in
mov
push
add
clc
shr
mov
shl
pusha
mov
gs
(bad)
cmps
(bad)
pop
ror
and
shr
fisttp
in
std
shl
into
or
mov
xchg
ficomp
lahf
les
mov
mov
out
xchg
and
enter
js
enter
pop
or
push
das
fmul
push
jl
repz
dec
bound
xchg
cmp
mov
pop
mov
lods
cmp
rcr
clc
pop
test
loope
ror
cwde
retf
jmp
les
mov
mov
nop
add
xchg
xchg
xchg
scas
push
in
push
cmc
nop
push
or
cmp
frstor
dec
jge
push
into
cli
hlt
dec
rcl
test
scas
icebp
and
out
lods
test
imul
add
loop
push
pop
pop
jbe
test
jmp
mov
mov
dec
xor
sbb
in
jno
leave
push
cld
cld
icebp
mov
mov
gs
dec
bound
and
jg
and
ffree
icebp
push
retf
cmp
xchg
outs
push
xor
dec
cmps
mov
push
sub
sbb
sub
stos
data16
rol
clc
xchg
mov
xor
push
leave
pop
mov
cld
jno
xor
fdivr
xor
jnp
jge
adc
mov
fs
imul
daa
lods
(bad)
nop
dec
and
mov
cld
xor
movs
and
popf
cmp
(bad)
cld
rcl
imul
sub
in
mov
call
fxch
xlat
cld
adc
pop
fcmove
pop
scas
(bad)
vmulsd
shr
mov
mov
sub
cmps
jae
movs
xor
in
xchg
sub
call
push
xor
imul
ret
mov
jle
lods
fdivr
cmps
ins
xchg
ret
jmp
jge
in
scas
imul
and
sti
add
add
push
clc
mov
jbe
scas
sbb
(bad)
int
ror
add
movs
in
or
nop
or
mov
gs
xor
add
jbe
cmps
mov
loopne
push
push
es
jno
aas
pusha
jns
mov
and
lods
std
mov
mov
stc
sbb
mov
jns
xor
stos
loopne
mov
mov
vpunpcklqdq
inc
fwait
idiv
mov
lods
cld
lock
sbb
lods
mov
mov
ror
hlt
add
or
ins
les
jmp
test
xchg
add
clc
or
add
mov
stc
stos
mov
ror
xchg
outs
icebp
dec
push
mov
cmp
in
(bad)
arpl
into
ds
add
adc
bound
pushf
adc
sti
imul
cld
imul
sbb
add
sub
and
scas
mov
cmc
mov
sub
add
jo
mov
scas
add
stos
popa
aam
aad
loop
jmp
aad
mov
aaa
out
push
mov
and
mov
xchg
push
int
and
mov
rcl
mov
pop
or
bound
jmp
push
imul
aam
xchg
add
mov
adc
inc
repnz
xchg
add
scas
pop
jmp
mov
and
xor
test
jecxz
daa
leave
jnp
jge
pop
ret
push
pop
cli
push
push
mov
enter
mov
xor
and
jle
add
jmp
stc
jno
add
hlt
and
xor
lock
mov
jnp
jmp
mov
mov
mov
cmp
repnz
xor
fs
pop
(bad)
ffreep
mov
jnp
popa
push
(bad)
jle
jo
xor
das
mov
movs
out
xor
cmps
xchg
jecxz
es
and
inc
imul
cld
(bad)
sbb
inc
push
xchg
jmp
mov
mov
cld
xchg
loop
jnp
dec
xor
cli
rol
push
int3
push
mov
add
lahf
mov
ja
leave
shl
xor
pop
mov
mul
inc
stos
xchg
jg
jp
dec
sbb
sub
mov
mov
rcr
lea
sub
dec
aam
mov
scas
mov
jecxz
stos
mov
sbb
xchg
sbb
pop
dec
add
xchg
xchg
rol
mov
lods
lods
mov
xchg
xor
scas
scas
popa
sub
cmp
jnp
cdq
scas
pop
mov
xchg
dec
mov
sti
fdivrp
das
fsubr
mov
retf
jne
adc
cwde
leave
adc
push
retf
cs
mov
sub
or
dec
test
ins
inc
inc
cld
pop
sub
cmp
ins
lods
or
clc
bound
ins
in
mov
jl
(bad)
movs
mov
xchg
pop
test
xchg
test
repz
adc
shl
or
cmps
aaa
outs
fmul
sub
movs
jb
jae
jge
dec
ret
dec
ficom
sbb
xor
inc
push
into
pop
jae
sbb
es
in
mov
mov
lock
lahf
lods
mov
mov
cmp
mov
mov
not
cmp
inc
stos
out
or
mov
mov
and
mov
ret
out
mov
(bad)
adc
test
mov
xor
adc
mov
jae
dec
(bad)
mov
xchg
mov
jno
pop
ds
fs
jne
mov
mov
adc
imul
mov
cmps
mul
jp
fist
mov
xchg
jmp
mov
stos
mov
in
xchg
scas
xchg
sahf
xchg
inc
in
test
mov
jmp
mov
(bad)
mov
mov
mov
mov
jo
mov
retf
mov
sbb
mov
add
aam
xchg
jmp
aaa
es
mov
imul
push
test
lods
sub
scas
add
call
sbb
mov
sub
scas
pusha
(bad)
out
das
xlat
pop
repz
xlat
fdivr
dec
scas
fst
sbb
jp
mov
dec
cmp
ror
and
mov
xchg
mov
mov
js
mov
inc
test
fcmovnbe
mov
lods
mov
div
or
loopne
xchg
in
leave
jnp
lods
pop
idiv
ret
lea
xchg
int3
add
mov
push
leave
mov
lods
push
jbe
idiv
lods
push
in
mov
jmp
test
ret
int3
xor
mov
adc
dec
cld
or
daa
ret
cmp
mov
fwait
sahf
mov
fwait
pop
cwde
xchg
cmp
movs
mov
xchg
cld
push
mov
stc
inc
mov
lods
mov
mov
das
and
leave
shl
out
rol
loopne
icebp
stos
loope
loop
mov
(bad)
(bad)
xchg
sar
jb
cdq
mov
lods
jne
xchg
push
leave
jl
mov
mov
mov
mov
mov
cmps
push
into
mov
dec
mov
cmp
ins
mov
stos
ins
xor
fs
cmp
mov
outs
pop
and
enter
and
sub
inc
push
repz
sub
aad
pop
adc
lods
push
vmaxss
into
test
mov
xchg
and
fs
or
jp
call
xchg
mov
mov
inc
movs
lock
stos
jo
in
pop
(bad)
call
push
iret
push
sbb
mov
mov
mov
jb
cdq
out
xchg
push
add
test
pop
in
or
xor
xchg
mov
daa
sub
(bad)
adc
ret
rol
pusha
pop
hlt
lods
iret
mov
jns
out
in
jb
fwait
mov
scas
lods
sbb
xchg
or
mov
xor
xchg
daa
ds
scas
xor
aam
xchg
in
jno
fnsave
xchg
ins
mov
xchg
cmc
pusha
(bad)
jns
ja
mov
jg
pushf
test
or
jge
in
sub
xor
popa
push
sbb
aad
call
push
lods
ins
push
std
sbb
sub
sbb
scas
test
loop
jg
icebp
shr
mov
add
lods
sahf
aaa
mov
xor
xor
stc
pop
nop
push
ins
xor
nop
or
sub
adc
xor
rcl
fmul
shl
push
repz
(bad)
mov
add
pop
ins
xchg
mov
stos
(bad)
and
inc
adc
cmc
call
and
test
mov
dec
xchg
data16
mov
clc
pop
fdiv
ins
les
int3
xchg
jae
mov
or
(bad)
sbb
test
push
sub
aad
xor
das
lock
in
mov
push
mov
dec
push
fldln2
sub
add
in
mov
lods
and
xchg
nop
inc
jmp
in
scas
(bad)
pusha
xchg
scas
scas
outs
mov
cld
ins
xchg
inc
in
test
mov
ins
add
(bad)
xchg
es
jg
mov
movs
mov
pop
cdq
jecxz
pop
repnz
or
in
out
push
push
lds
xchg
bound
mov
xchg
mov
adc
out
sbb
cmps
cli
test
add
js
mov
fst
cmps
sub
pop
sbb
cmps
mov
stos
push
pop
xor
inc
mov
push
test
jae
cs
aaa
loope
xchg
sti
bsf
pop
adc
loope
mov
cmc
lock
sub
push
pop
adc
pop
pop
or
ret
jno
aad
cmps
jp
jge
sub
pop
xchg
jmp
ficom
xor
push
icebp
cdq
sub
popa
sub
xchg
push
ss
mov
std
push
and
test
push
(bad)
cmps
fadd
bound
sub
ins
or
adc
xor
mov
mov
retf
data16
push
jns
ins
adc
movlhps
(bad)
lea
push
push
push
test
sbb
xchg
adc
or
pcmpgtd
mov
test
pop
jmp
lea
(bad)
call
cwde
add
sbb
clc
jmp
arpl
clc
js
(bad)
adc
mov
(bad)
sub
mov
neg
jge
xchg
scas
stos
cs
dec
cmps
imul
cwde
stos
xchg
lea
cmps
xchg
xchg
adc
or
out
adc
fsub
and
stos
push
mov
out
mov
add
mov
cdq
or
fnstsw
test
adc
add
popf
mov
mov
(bad)
mov
addr16
lea
push
test
cmp
dec
cmp
mov
pop
xchg
stos
sahf
cmc
sub
fcom
mov
call
in
jmp
ret
mov
std
xchg
xor
push
adc
lahf
aas
pop
sub
mov
and
push
shl
rcr
sbb
gs
stos
fbstp
push
cmps
fbstp
lea
sbb
push
and
sbb
cvtps2pd
or
nop
mov
loopne
lods
shl
test
xchg
int
inc
rol
bound
cmp
sub
ret
stos
inc
dec
sbb
in
dec
add
mov
sbb
int3
push
push
out
sub
addr16
fsubr
ins
and
shld
lods
ins
rol
sbb
mov
mov
inc
add
sub
rol
add
jmp
sub
cmp
jp
or
mov
sbb
(bad)
mov
or
mov
jno
iret
call
addr16
mov
jl
add
inc
mov
dec
push
stc
movs
in
loop
pop
mov
xchg
jno
xchg
leave
sub
mov
mov
xor
jge
jnp
xchg
gs
(bad)
mov
sub
cmp
xor
mov
mov
lods
cld
sar
add
int3
jp
popa
sar
retf
and
pop
mov
scas
adc
xor
mov
scas
adc
add
cmp
or
idiv
mov
jle
cs
xchg
sahf
scas
(bad)
jmp
stos
dec
mov
ret
scas
das
or
aaa
leave
pop
mov
mov
pop
push
cmp
mov
adc
hlt
xor
mov
das
xor
shr
test
sub
mov
lock
lock
add
ins
shl
or
sbb
xchg
test
sub
xor
fisubr
jmp
push
lock
push
bound
fisubr
sbb
xchg
int3
iret
mov
retf
or
mov
mov
sbb
scas
(bad)
scas
xor
fisubr
imul
out
xor
daa
and
stos
mov
sbb
aaa
add
xor
in
popa
xchg
call
mov
ret
xchg
popa
les
xchg
xor
pop
call
fdiv
mov
push
xor
loop
test
push
fmul
xor
mov
call
gs
pop
push
jbe
mov
mov
mov
push
je
push
aaa
jb
sbb
iret
cmps
mul
cli
popa
out
push
mul
sbb
sub
dec
sbb
repnz
in
cmp
icebp
retf
in
or
push
add
ret
sbb
movs
sub
enter
mov
sbb
jmp
ret
adc
cli
mov
iret
jmp
shr
push
jne
call
mov
pusha
(bad)
pop
cmps
cdq
xchg
popa
xchg
(bad)
mov
xchg
jno
gs
cmp
pop
iret
sbb
add
sbb
cmps
stc
and
loope
loopne
mov
mov
dec
loop
clc
fisttp
push
in
call
cmp
mov
inc
pop
add
xor
and
mov
xor
cdq
or
cmp
lods
cdq
dec
mov
or
popa
cdq
in
jb
xchg
and
stos
cmp
add
sar
inc
or
test
mov
(bad)
shl
sti
movs
dec
stos
cmps
fisubr
repnz
call
js
aam
adc
dec
dec
push
sbb
addr16
adc
mov
imul
sbb
gs
f2xm1
(bad)
push
fwait
jmp
mov
aaa
call
push
div
mov
jno
mov
and
fcomip
cmc
push
mov
mov
nop
call
ins
repnz
push
inc
inc
loopne
hlt
(bad)
in
xchg
test
outs
int
push
and
popa
jge
xor
loopne
xchg
frstor
rcr
xchg
call
xchg
(bad)
test
sub
sbb
mov
mov
mov
lock
stos
xchg
mov
icebp
test
ins
cmp
xchg
and
scas
fcom
scas
not
mov
sbb
mov
call
test
data16
loop
inc
iret
stos
sahf
mov
xchg
xor
adc
pop
out
lock
pop
mov
xchg
jae
mov
sahf
or
xchg
cdq
mov
pop
mov
fimul
cmp
test
fcomp
or
jmp
mov
mov
xchg
pushf
xor
inc
les
mov
pop
das
mov
scas
jo
repnz
xor
mov
dec
rol
nop
dec
mov
addr16
jns
mov
ror
(bad)
sub
pusha
sub
inc
nop
retf
sbb
icebp
push
lds
push
cli
adc
bound
jnp
in
shr
std
mov
and
inc
mov
xchg
retf
dec
or
push
or
push
retf
fs
mov
adc
fcos
add
sahf
push
and
rdmsr
xchg
ret
test
xlat
enter
xchg
aaa
loope
push
jmp
out
(bad)
or
mov
xchg
mov
sub
fadd
retf
fdiv
outs
retf
jns
sub
sub
mov
push
jmp
push
push
dec
ret
dec
mov
jmp
inc
push
ds
cmp
push
cs
sub
push
push
ret
sbb
push
push
ret
or
push
inc
cli
mov
jmp
repnz
out
ret
jmp
faddp
fidiv
push
into
ret
retf
jmp
ret
ret
mov
mov
scas
ret
stos
mov
sub
mov
lds
mov
jmp
outs
push
push
cmp
movs
ja
jne
in
scas
mov
test
sti
mov
inc
sbb
addr16
push
fstp
mov
add
sbb
popf
into
add
mov
lahf
(bad)
call
pushf
ret
popf
mov
jmp
lahf
push
mov
jmp
mov
mov
jmp
cmps
push
test
test
mov
mov
lea
push
nop
ret
xchg
mov
jmp
xchg
push
xchg
ret
xchg
mov
jmp
xchg
push
cwde
ret
cdq
mov
jmp
jnp
jl
jge
jle
cmp
add
mov
jmp
or
ret
test
push
mov
mov
push
ins
ret
ins
mov
jmp
outs
push
jo
jno
jb
cmp
je
jne
jbe
cmp
js
jns
pop
jmp
pop
push
pop
ret
pop
mov
jmp
pop
push
pusha
ret
popa
mov
jmp
arpl
fs
gs
jmp
addr16
push
jmp
dec
push
dec
ret
dec
mov
jmp
dec
push
push
ret
push
mov
jmp
push
push
push
ret
push
mov
jmp
push
retf
out
pop
arpl
lods
jns
pop
xchg
cmp
mov
sbb
(bad)
cmp
push
or
pop
scas
add
repnz
cmc
lds
jbe
sub
mov
and
adc
sbb
mov
add
adc
dec
retf
repnz
sbb
add
push
test
push
stc
adc
mov
and
je
lds
stos
mov
out
repz
xchg
out
sbb
add
rol
or
mov
mov
sbb
push
mov
push
lmsw
or
repz
and
cli
jb
jmp
popa
popa
(bad)
or
add
(bad)
or
xor
iret
or
in
and
and
ror
cs
cmps
cld
or
adc
aaa
pop
xchg
add
xchg
stc
and
cmp
sbb
in
loop
push
add
or
jmp
add
jb
jecxz
or
ret
push
stc
sbb
xchg
je
ret
xchg
mov
dec
or
add
jmp
retf
adc
pop
inc
add
inc
in
scas
fnstenv
add
pop
call
stos
ins
mov
adc
cs
add
push
xor
or
add
movs
mov
in
sbb
add
cmp
out
lea
mov
xor
xchg
push
or
xchg
wbinvd
mov
cs
jne
sbb
and
cmovno
mov
cs
pop
std
push
lea
or
ret
add
in
mov
adc
push
in
pusha
adc
sbb
jno
out
or
mov
mov
loopne
add
xor
outs
loop
loopne
lock
sbb
lds
adc
mov
sbb
jns
cmp
syscall
mov
repnz
inc
loop
add
adc
jno
push
mov
pop
std
push
add
out
or
iret
jno
std
or
lfs
cdq
jmp
jp
scas
sub
outs
mov
ins
test
int3
push
das
sbb
cmp
mov
fwait
into
and
leave
out
lock
stos
in
pop
lods
sub
das
(bad)
push
push
sbb
mov
jmp
cmps
jle
test
mov
stc
out
clc
inc
inc
mov
jl
mov
hlt
arpl
mov
retf
ja
jbe
iret
adc
fstp
lods
jecxz
scas
div
ins
test
cmp
test
test
sbb
out
fs
rcl
mov
mov
leave
fidiv
out
xchg
ds
lods
mov
push
add
cmp
push
pop
sbb
add
mov
add
adc
nop
adc
xchg
mov
popa
dec
adc
pusha
stos
lods
mov
sahf
xor
xor
push
mov
xchg
push
loope
sbb
jbe
ss
test
push
hlt
ret
pop
and
inc
jmp
lock
retf
lds
mov
mov
scas
test
lods
(bad)
retf
mov
lock
mov
or
mov
inc
mov
add
add
scas
loopne
pop
sub
loope
lock
mov
mov
cld
cmps
xor
jnp
and
jecxz
test
push
push
aam
or
sub
xor
mov
cdq
retf
push
mov
lods
movs
adc
or
iret
cs
cli
ror
in
cmps
pop
mov
xor
out
pusha
cli
adc
lods
icebp
(bad)
xchg
jmp
mov
stc
jg
retf
xor
mov
jmp
test
out
adc
dec
fnsave
mov
sub
jae
jae
mov
cli
retf
xchg
push
test
test
popf
es
sub
leave
test
mov
mov
(bad)
lea
sar
mov
js
aad
jmp
jge
pop
xchg
jle
movs
or
mov
pop
mov
mov
jns
xlat
jmp
sbb
mov
jl
fstp
fwait
jmp
movs
in
or
ins
mov
sar
mov
shl
stos
jnp
pop
fcmovbe
adc
hlt
pop
movs
fild
add
nop
sub
jae
loope
mov
add
pusha
pop
or
pop
fiadd
and
scas
test
mov
sbb
dec
pusha
cmp
test
xlat
jg
jmp
lods
cmp
test
lods
and
into
adc
mov
sar
xor
rol
sub
pop
in
sub
scas
sub
popa
mov
sub
sub
mov
and
xor
sbb
(bad)
jnp
push
or
popa
mov
cmp
mov
test
lods
dec
or
ins
xchg
xchg
xchg
test
xchg
mov
retf
aad
gs
enter
jns
retf
adc
movs
pusha
and
push
arpl
ror
sub
stc
xor
shr
xchg
outs
inc
data16
inc
sbb
lods
jo
jle
es
popa
xor
add
cmps
dec
sub
jmp
loope
or
bound
mov
mov
movs
push
shl
pop
mov
std
cs
int
cs
push
pushf
outs
mov
popf
push
jbe
xor
in
and
sbb
cmp
and
add
sub
mov
jo
test
mov
fucomip
mov
push
xor
cmc
movs
mov
(bad)
stos
xchg
jnp
add
pop
lea
mov
lock
call
fisubr
jp
pop
mov
add
sbb
mov
aas
lods
xchg
xrelease
test
and
sbb
scas
jo
adc
jmp
add
shrd
or
sar
out
fisubr
fld
ds
xchg
xchg
test
pusha
dec
mov
sbb
loope
push
xchg
jp
xor
sbb
aas
fisub
jle
mov
imul
lods
sub
cmc
inc
sub
call
fdiv
sub
pop
pop
and
sub
daa
xor
out
cli
mov
pop
out
jb
jne
push
cli
xchg
out
test
inc
movs
xor
lods
scas
and
data16
loope
ss
add
pusha
sub
mov
push
rcl
ss
mov
lds
int3
frstor
scas
sub
xchg
lock
retf
mov
scas
mov
jns
mov
retf
loopne
outs
xor
add
cmps
stos
or
aas
shr
add
jmp
lahf
jge
mov
out
xor
shl
call
jo
mov
push
stos
mov
xchg
loop
sub
int3
fidiv
lds
sbb
xor
lods
(bad)
les
sub
mov
aad
cdq
mov
in
sub
inc
inc
cli
imul
lock
add
loopne
loop
cmp
mov
jne
xor
mov
ins
retf
(bad)
jne
push
lods
sahf
jge
pop
cmps
cld
out
mov
mov
aaa
out
std
sub
pusha
or
int
xor
dec
mov
sub
sti
out
call
adc
mov
cmp
test
jl
test
bound
dec
ror
jno
xchg
cmp
xchg
push
pusha
out
bound
jmp
scas
pop
sbb
jmp
jne
cwde
mov
mov
xchg
lods
popf
dec
mov
in
adc
aaa
(bad)
xchg
add
sbb
mov
psubusw
fiadd
loopne
retf
xor
push
mov
add
aad
adc
call
mov
test
stos
pusha
jns
dec
test
lods
mov
ins
jmp
sub
shl
inc
out
jmp
add
repz
fdiv
js
mov
mov
(bad)
mov
push
gs
pop
mov
sub
sti
push
fldenv
icebp
and
lods
inc
sub
inc
lods
cli
imul
sbb
pop
jp
ret
xor
mov
outs
fisubr
lock
mov
jg
mov
mov
sub
repz
leave
and
mov
push
loopne
or
xor
pop
hlt
dec
cli
test
mov
outs
xor
retf
sbb
mov
mov
push
or
ins
mov
icebp
in
xor
jmp
or
or
xor
add
inc
mov
loope
jb
mov
stos
imul
sub
dec
add
js
inc
icebp
lods
lds
sahf
xor
call
movs
mov
out
add
jl
aad
mov
rcr
jmp
and
xchg
out
mov
push
xchg
sub
xchg
in
mov
gs
mov
mov
iret
gs
mov
outs
add
push
pop
sub
xchg
mov
pop
xor
fst
test
daa
pusha
xchg
hlt
mov
les
mov
dec
xor
popf
push
movzx
sub
aaa
mov
stos
push
inc
(bad)
sti
push
add
clc
cwde
xchg
icebp
mov
out
out
xlat
stos
test
out
and
outs
adc
sar
das
sbb
sub
xchg
fcmove
fst
or
sub
mov
ja
in
in
(bad)
ins
push
(bad)
ins
into
mov
imul
pop
add
jp
push
fimul
add
scas
or
repz
mov
lods
sbb
pop
adc
ins
lods
fs
cmp
mov
or
sbb
cmc
xor
mov
outs
xchg
jbe
xchg
pop
pusha
popa
mov
imul
test
jmp
fwait
pusha
mov
and
pusha
xchg
pop
fbstp
jnp
out
pop
sahf
loope
fistp
cmp
jp
push
and
xchg
das
sbb
pop
ins
jo
or
adc
mov
aaa
cmps
mov
pop
call
dec
mov
pop
ins
push
imul
in
scas
push
pop
cmps
leave
adc
sbb
sub
add
call
scas
in
add
jle
cmc
mov
and
out
test
lds
addr16
stc
xor
inc
cli
jae
adc
and
xor
lahf
mov
lods
popa
add
into
cmps
icebp
push
jmp
out
push
loop
lods
f2xm1
push
mov
fs
and
sub
push
stos
leave
pop
xchg
call
lds
lds
sub
push
jnp
sbb
xchg
xchg
sub
bound
pop
sbb
or
dec
sub
rcl
es
inc
xor
mov
outs
add
dec
lods
lock
scas
xchg
imul
xor
das
pop
lahf
int
movs
inc
movs
mov
bound
scas
stos
sahf
adc
cmp
mov
shr
jnp
mov
retf
lods
xor
mov
push
inc
xchg
mov
mov
popa
daa
sar
rol
mov
mov
rcl
iret
jns
mov
xlat
xor
es
xchg
fisubr
outs
mov
cmp
call
mov
adc
jp
mov
or
aaa
aas
adc
cmp
inc
push
push
mov
mov
(bad)
cmc
(bad)
mov
sbb
push
mov
push
mov
mov
xor
xor
push
pushf
pop
aam
xor
xchg
vmovaps
push
jecxz
pop
mov
loop
out
bound
dec
sub
pusha
addr16
movs
dec
sub
mov
dec
and
dec
es
daa
mov
pushf
jno
cli
mov
fwait
stos
shr
lods
mov
xchg
sub
cli
inc
pop
mov
mov
das
(bad)
cld
cmc
mov
lods
or
cmps
mov
test
sbb
sbb
xor
and
enter
pop
xlat
loopne
and
adc
scas
and
popa
in
sub
inc
or
lods
xor
scas
bound
sbb
fwait
stos
js
les
lods
retf
xor
repz
lock
clc
push
mov
jmp
dec
clc
mov
daa
adc
jo
push
sbb
mov
sbb
jle
fdivp
sub
cmps
ins
es
(bad)
rcl
int
in
mov
push
test
jl
les
push
rcl
mov
xor
retf
mov
mov
data16
inc
cmc
or
push
add
scas
popa
xor
int
jmp
mov
in
aad
aas
test
pop
out
xor
pop
xchg
imul
retf
rol
xchg
or
outs
mov
mov
and
dec
fs
mov
ins
iret
push
dec
repnz
test
popf
xor
(bad)
push
sahf
test
movs
inc
jl
push
sbb
xchg
xchg
xchg
xor
inc
inc
mov
mov
sub
pop
mov
inc
pusha
mov
popf
mov
mov
pushf
jg
mov
inc
push
xor
je
inc
inc
xchg
and
aaa
jmp
enter
fwait
dec
xchg
xchg
(bad)
mov
and
push
scas
outs
jmp
jecxz
sub
xor
xchg
inc
dec
scas
bound
jo
adc
aam
xchg
add
mov
aam
popa
sar
ret
into
xlat
sub
int
mov
scas
into
cmp
jmp
ret
mov
rol
js
mov
add
jo
mov
push
ins
xchg
(bad)
xchg
stos
sub
in
mov
jnp
pop
or
xchg
xor
mov
int3
call
mov
push
sub
ret
ins
jo
int
xchg
ja
dec
dec
fsub
mov
adc
mul
scas
mov
mov
sub
push
mov
mov
cmps
and
and
inc
push
jmp
sar
inc
test
mov
mov
out
xor
aam
(bad)
repnz
test
adc
rol
imul
mov
and
in
mov
inc
scas
sub
rcr
and
lods
fild
iret
push
nop
mov
stos
stc
and
iret
movs
xchg
xchg
leave
adc
sbb
push
cdq
xchg
mov
mov
retf
push
fwait
movs
add
sub
pop
push
xor
xchg
std
lods
ins
hlt
dec
cwde
mov
(bad)
mov
pop
mov
sbb
xchg
push
mov
jl
xor
dec
add
mov
stos
add
xor
scas
es
imul
call
pusha
cmps
mov
ss
mov
or
pop
xchg
xchg
das
mov
enter
cmp
mov
inc
jp
push
jmp
loop
add
sbb
mov
mov
jb
adc
mov
retf
xchg
mov
cld
or
test
jmp
mov
leave
xchg
ja
test
xor
imul
fptan
daa
int
scas
mov
or
lods
inc
sbb
inc
test
sbb
and
sub
test
call
xchg
es
fsubr
ficomp
mov
lock
loope
test
fwait
test
stc
mov
out
pop
aaa
lock
dec
push
lods
jg
stos
ins
xchg
out
fwait
repz
fst
ins
(bad)
jns
sub
mov
aad
push
adc
mov
aaa
xor
gs
shl
sub
inc
int
add
movs
xor
add
push
mov
push
test
sbb
std
mov
popa
test
jo
mov
and
lock
sub
mov
mov
stos
mov
add
sub
pop
jp
mov
gs
test
(bad)
stos
in
jle
stos
push
xor
mov
in
mov
cmp
ret
std
cld
cwde
dec
imul
jle
and
pop
frstor
inc
pop
mov
sub
push
ret
jnp
test
shr
add
adc
cmp
adc
lods
std
jp
xor
enter
mov
and
mov
sbb
je
pop
(bad)
in
jae
cmps
fadd
popf
push
xchg
xor
sbb
dec
(bad)
sub
and
mov
movs
into
inc
add
sar
es
gs
mov
call
push
xor
ret
sub
movs
out
ror
aad
ret
scas
movs
out
icebp
pop
mov
dec
xor
fisubr
sbb
cwde
pop
xchg
imul
ins
pop
mov
mov
pop
xor
push
dec
sub
mov
outs
ret
jge
pop
lods
or
js
daa
lea
neg
gs
test
ins
inc
loopne
or
cdq
push
test
sbb
mov
push
mov
out
enter
jns
cmps
aad
sbb
mov
aad
jb
imul
mov
xchg
pop
retf
mov
and
push
adc
mov
sub
dec
les
aad
sbb
loope
xchg
push
stos
mov
mov
sbb
outs
xchg
jecxz
add
mov
(bad)
pop
mov
push
and
mov
scas
arpl
xchg
sbb
daa
test
lock
or
mov
call
mov
lods
push
clc
test
repnz
repz
mov
pop
out
xchg
jnp
lods
shr
leave
outs
pop
addr16
mov
ins
out
pop
addr16
ss
loop
in
or
cmps
cmps
or
retf
xchg
add
nop
mov
daa
xchg
xchg
je
lods
not
sub
sub
xor
ficom
shr
pushf
mov
in
rcl
repz
in
ins
movs
es
test
mov
pushf
mov
call
pop
cmp
scas
jmp
mov
test
mov
push
pusha
lods
adc
idiv
pop
xlat
pop
xlat
bound
mov
lock
aad
mov
jp
mov
pusha
jp
push
mov
mov
cli
ins
not
pusha
ja
fwait
pop
repnz
mov
mov
inc
mov
fldl2e
xchg
mov
out
ret
cli
push
rol
lods
push
and
push
mov
xor
jmp
in
test
aas
test
push
std
inc
fwait
ss
repnz
xchg
push
cmps
cld
or
arpl
xchg
aad
or
(bad)
out
mov
mov
daa
adc
in
aad
scas
mov
in
jge
mov
test
dec
les
pop
cmp
and
aaa
ds
jne
movs
dec
cmp
add
inc
sti
rcr
jge
aad
fild
jmp
push
sbb
adc
repz
mov
imul
push
lock
arpl
sbb
xor
cwde
mov
fadd
icebp
lods
fcom
pop
fdivp
xchg
mov
out
pusha
loope
cmps
dec
push
or
cmc
movs
push
push
pop
scas
and
pop
xor
pop
sahf
and
xchg
pop
out
mov
ror
mov
mov
repnz
sub
pushf
xchg
addr16
(bad)
jmp
(bad)
lea
rcl
mov
call
mov
sub
lea
lods
jnp
scas
imul
ins
push
xchg
ins
out
(bad)
je
dec
das
pop
dec
jno
add
das
cmp
pushf
xchg
add
rcr
fs
fist
test
aaa
das
xchg
test
js
or
loop
call
pop
ret
scas
out
fisub
cli
call
aam
fbld
adc
(bad)
into
push
dec
out
mov
loope
push
int3
sbb
std
das
daa
xor
fidiv
mov
or
xchg
mov
(bad)
mov
or
aad
sbb
pop
stc
into
and
add
lods
push
inc
pop
retf
clc
pop
mov
mov
pop
mov
movs
enter
in
les
pusha
mov
mov
imul
ror
test
mov
pop
cs
out
inc
fisubr
cli
inc
adc
or
xor
mov
stos
cli
sbb
fidiv
fbstp
mov
pop
pop
add
jge
dec
jl
fstp
fld
fdivr
loop
ins
pop
ror
xchg
pop
fwait
cmps
jb
xor
arpl
xchg
popf
pop
jnp
pop
mov
pop
mov
xor
and
xor
pop
lods
xchg
or
mov
mov
mov
or
adc
xchg
test
xor
push
lods
lea
(bad)
cmps
sub
fcmovb
movs
mov
inc
sbb
sub
jno
cmps
xor
xchg
movs
add
and
and
retf
out
aam
sub
xchg
les
imul
pop
mov
xchg
mov
lods
pop
clc
xor
cmc
mov
std
loop
mov
xor
shl
jmp
pop
mov
(bad)
lds
mov
mov
mov
bound
lods
mov
and
enter
mov
scas
pop
dec
jmp
pop
movs
lods
inc
pop
add
push
lods
xor
not
inc
pusha
lods
cwde
adc
int3
(bad)
adc
xor
ror
(bad)
scas
leave
mov
fwait
mov
mov
xchg
addr16
scas
stos
stos
int3
in
lods
cmps
icebp
movs
movs
popf
ror
in
clc
or
aaa
mov
pop
jno
push
xchg
or
rcr
retf
xchg
lods
cmps
mov
(bad)
ret
cmc
(bad)
mov
int3
ret
mov
fimul
ss
xchg
pusha
jmp
sbb
les
sbb
fistp
loopne
ret
stos
das
jns
(bad)
int
imul
and
and
push
cmp
scas
or
fbstp
inc
mov
cmps
mov
xor
sar
lock
mov
in
mov
mov
cmps
jecxz
push
jns
fnsave
or
jmp
aad
mov
mov
pop
and
mov
push
loope
repnz
xchg
int3
push
or
or
or
scas
sub
sub
neg
div
jle
lods
mov
xchg
test
mov
call
scas
jecxz
mov
pop
jl
fld
mov
stos
cmc
adc
add
and
bound
test
or
das
loope
adc
xor
scas
xchg
mov
mov
add
mov
mov
sub
cwde
or
iret
ins
sbb
aas
mov
jg
mov
mov
(bad)
ror
fimul
ss
cs
xchg
ror
es
inc
xchg
sbb
(bad)
data16
retf
add
or
call
lds
mov
ja
pushf
fisub
loope
rcl
retf
adc
jmp
xor
sub
mov
jmp
rcr
scas
movs
or
mov
ret
lods
lds
inc
out
cmp
aaa
out
ficom
cmp
loope
mov
xchg
sub
out
sub
test
mov
dec
mov
aad
mov
xchg
or
lock
jecxz
aad
mov
test
sbb
adc
mov
dec
stos
inc
mov
xchg
dec
in
in
mov
mov
mov
nop
add
push
inc
clc
jecxz
jo
pop
push
int
push
sti
call
call
and
sub
ss
clc
and
ret
ss
es
or
mov
inc
mov
pop
pop
(bad)
int
push
test
stos
shl
jp
jle
mov
loopne
jbe
scas
adc
or
xchg
sahf
enter
movs
mov
xor
jbe
pop
fiadd
push
shr
xchg
mov
mov
mul
mov
mov
mov
add
nop
stos
mov
stos
retf
ror
add
xor
add
xlat
mov
mov
xor
test
cli
cmp
xor
mov
xor
jo
aaa
cmps
ficom
mov
mov
jns
xor
cmp
and
ins
mov
mov
call
or
mov
leave
ds
fiadd
sub
retf
push
leave
repnz
or
rcr
mov
jg
xchg
inc
mov
jmp
or
frstor
dec
push
adc
mov
sbb
leave
mov
xchg
mov
or
push
mov
scas
mov
mov
xchg
push
ja
pop
or
sub
inc
ins
lods
and
xchg
jge
push
lods
mov
stos
test
xor
sbb
sbb
mov
cli
mov
cli
sub
into
mov
test
mov
xor
mov
pop
mov
jb
inc
rol
adc
xor
xor
mov
xor
pop
stos
cmp
mov
jno
push
lods
movs
adc
test
int
sti
push
xor
retf
test
mov
push
test
outs
pop
cmc
repz
aaa
and
test
in
into
pop
scas
test
add
repnz
enter
int3
call
test
jb
mov
mov
mov
mov
mov
les
mov
icebp
xchg
add
test
sub
test
out
xor
mov
scas
popa
mov
xor
fsubp
lods
lods
hlt
xchg
lods
es
xlat
mov
push
das
test
push
imul
sahf
out
in
hlt
mov
outs
xchg
add
jmp
xchg
jnp
gs
test
cmp
retf
mov
outs
xchg
mov
mov
pop
jl
jb
push
inc
into
scas
jg
out
xor
pop
in
sub
xchg
add
int
inc
movs
(bad)
lods
mov
imul
mov
mov
mov
gs
mov
pop
ins
mov
dec
repnz
fsub
lods
ins
mov
test
rol
pusha
mov
iret
loop
ds
(bad)
fmul
fidivr
(bad)
xchg
lods
xor
test
sbb
pop
inc
mov
and
les
jmp
adc
and
inc
test
xchg
dec
movs
imul
idiv
fstp
xchg
nop
xor
(bad)
mov
sbb
cmp
sub
sub
and
xchg
mov
push
sahf
add
(bad)
jae
das
fisttp
jge
sub
cmps
shl
fcom
lods
mov
and
sbb
mov
mov
in
mov
add
in
in
xor
call
in
aaa
stos
cli
aam
inc
stos
out
xchg
loopne
mov
ja
sahf
(bad)
xchg
das
js
pop
sub
sub
gs
or
mov
lock
and
adc
push
or
pop
aad
xchg
sti
retf
xchg
sub
iret
out
mov
out
lds
in
sub
mov
(bad)
fs
mov
mov
das
pop
and
mov
jmp
(bad)
(bad)
or
mov
inc
ret
inc
call
fcmovu
data16
mov
in
dec
in
ret
in
test
mov
xchg
jl
in
retf
iret
in
movs
lock
xchg
fld
push
mov
sub
jns
adc
or
repnz
jns
add
call
stos
jmp
cwde
or
movs
pop
mov
ds
push
scas
movs
push
dec
enter
inc
ins
sub
jbe
or
mov
jle
pushf
movs
mov
addr16
fistp
sub
mov
and
jmp
pusha
pop
aam
sar
jecxz
fdiv
clc
add
scas
imul
(bad)
fiadd
sar
dec
mov
mov
in
les
mov
mov
cmp
setbe
std
xchg
push
jmp
mov
add
fmul
icebp
(bad)
mov
(bad)
sub
sub
mov
push
ins
loop
std
jmp
cmp
and
mov
add
and
dec
pop
mov
stos
loopne
adc
cmc
mov
mov
retf
scas
in
test
lods
(bad)
adc
sub
mov
mov
jmp
stc
mov
div
xlat
inc
xor
mov
in
sti
push
cmp
jnp
movaps
(bad)
jl
fld
ins
ret
mov
aas
pop
or
and
mov
(bad)
pop
in
(bad)
es
shl
mov
(bad)
adc
bound
mov
cmps
fadd
jmp
add
xchg
inc
pusha
hlt
add
lods
test
mov
ss
mov
mov
and
xor
push
or
loop
mov
lahf
ins
out
test
xchg
inc
shl
mov
leave
inc
xchg
mov
mov
xor
dec
ret
fisub
sub
cmps
call
sub
adc
cli
mov
imul
dec
add
imul
pushf
pop
scas
mov
dec
(bad)
xor
mov
mov
mov
inc
and
dec
fisub
aaa
mov
ret
push
call
or
jmp
imul
int3
cs
outs
leave
xor
lods
(bad)
and
add
scas
xor
call
fcomi
inc
cmp
adc
scas
addr16
iret
push
xchg
jae
adc
stos
(bad)
loopne
scas
bound
in
icebp
dec
call
stos
mov
fld
xchg
push
push
mov
xchg
push
jp
call
jg
inc
arpl
lods
loope
aaa
in
push
repnz
mov
ins
call
test
push
pop
jecxz
push
add
or
sub
movs
mov
pop
jns
stos
and
(bad)
ja
fmul
add
push
xor
arpl
sub
mov
cwde
xchg
sbb
daa
push
into
xchg
arpl
jb
test
xchg
sbb
retf
pop
inc
mov
jecxz
inc
mov
stos
inc
dec
or
mov
mov
mov
mov
inc
outs
jl
xlat
mov
loope
inc
mov
push
add
inc
enter
or
fst
xchg
jmp
sbb
adc
idiv
ret
pop
pop
aam
neg
xor
enter
pusha
cmp
dec
pop
jle
inc
shl
mov
or
and
(bad)
push
sub
dec
cwde
mov
fwait
mul
sbb
pop
bound
sub
adc
add
adc
sbb
jle
mov
ins
fs
jp
lahf
repz
jge
add
hlt
pop
sahf
adc
adc
ret
es
ins
push
push
mov
dec
inc
leave
sbb
pop
dec
ins
mov
stc
ret
mov
inc
in
mov
xor
out
dec
cmc
xchg
mov
jge
jle
out
mov
mov
sub
stos
into
xor
mov
adc
add
dec
pop
cld
das
mov
loope
(bad)
retf
rol
ins
(bad)
mov
loope
push
or
jl
lods
stos
xor
pop
mov
xchg
sub
sahf
fcomp
(bad)
inc
sbb
mov
jmp
add
lods
pop
cmps
xchg
dec
loopne
xor
aaa
out
arpl
add
popa
mov
ret
xor
fs
xor
scas
out
inc
mov
dec
cmps
add
idiv
ror
neg
or
popa
sahf
pop
mov
das
and
xchg
(bad)
gs
popf
push
xchg
or
dec
lods
in
mov
mov
test
inc
dec
xchg
call
mov
jmp
adc
adc
add
pop
stos
stos
mov
(bad)
cmovo
fwait
(bad)
inc
cli
or
sub
test
add
cmp
adc
pop
nop
sub
push
shl
cwde
cmp
mov
jle
das
or
fs
push
int
mov
in
les
and
ss
test
aad
inc
fdiv
pop
push
xchg
cmps
mov
dec
pusha
in
mov
scas
xor
bound
dec
add
push
mov
sar
jo
mov
ror
xchg
hlt
xor
fwait
lods
test
dec
jmp
dec
xor
gs
jmp
push
pop
jnp
aas
(bad)
mov
cmp
adc
mov
jnp
shl
das
push
scas
pop
scas
cmp
mov
scas
shl
mov
scas
xor
aaa
mov
cmps
(bad)
xor
ss
mov
sbb
pop
lahf
das
push
dec
inc
gs
cmp
cmp
scas
inc
into
fsubr
sbb
scas
bnd
jmp
dec
movzx
jmp
push
icebp
cmp
lock
in
cli
scas
push
bnd
sahf
arpl
lods
cmp
sub
cdq
arpl
add
push
xchg
into
dec
push
les
bound
xchg
loopne
dec
jmp
(bad)
enter
retf
dec
adc
mov
aad
pop
inc
mov
jno
stos
mov
dec
mov
cmp
call
icebp
ret
movs
rcr
mov
and
mov
jno
loope
jmp
push
fcom
jg
mov
adc
or
xchg
bound
mov
clc
fdivr
mov
mov
cmp
inc
add
cmc
and
or
scas
xchg
pand
gs
cmp
dec
mov
mov
aaa
mov
xor
xor
inc
jb
cmp
cmp
cmp
dec
inc
ja
pop
cmp
push
inc
sahf
sub
mov
jle
pop
test
ins
outs
out
fs
cmps
cld
prefetch
mov
mov
test
xor
neg
add
fiadd
fwait
test
xchg
out
fs
and
pop
cmp
mov
mov
out
aam
pusha
(bad)
jne
push
xchg
jmp
leave
out
dec
xchg
sub
ret
sar
je
je
lods
mov
sbb
mov
test
xchg
aad
adc
sub
aad
out
dec
push
dec
es
mov
mov
icebp
ins
xchg
mov
add
fiadd
cmp
mov
outs
push
imul
inc
xabort
sub
ds
and
out
cld
les
or
mov
pop
xchg
push
mov
arpl
sahf
or
inc
aam
jns
jb
call
sub
jle
scas
mov
rol
dec
jmp
inc
fcmovnbe
bound
xlat
ins
mov
lods
xchg
xchg
xor
xor
mov
pop
scas
add
nop
shl
inc
mov
aaa
sbb
xchg
pop
jp
mov
pop
adc
mov
jnp
std
fiadd
jae
jle
lods
pop
mov
sub
out
repnz
repnz
(bad)
mov
xchg
icebp
ret
ffreep
shl
iret
imul
ins
test
lods
scas
(bad)
mov
mov
mov
(bad)
mov
mov
mov
xlat
shr
in
cmp
repnz
mov
test
mov
cmp
push
pand
sbb
inc
push
dec
repnz
cmps
lea
mov
je
push
pop
mov
cwde
inc
mov
mov
sub
mov
sub
cmp
xor
fsubr
shr
out
mov
pop
mov
dec
fsubr
test
or
mov
xlat
arpl
es
sub
sahf
pop
popa
inc
je
pop
addr16
push
outs
scas
mov
shr
jb
mov
jp
mov
adc
fwait
or
sub
mov
repnz
mov
gs
sub
loopne
call
pop
inc
mov
dec
mov
push
add
cmp
sub
dec
out
push
cmp
aaa
xor
xchg
fdivr
clc
stos
call
cmp
sar
pop
pop
xchg
lea
ins
dec
fstp
(bad)
ins
push
inc
cmps
mov
jp
ins
aaa
jmp
pop
(bad)
hlt
mov
arpl
jnp
aaa
cwde
in
add
mov
fisubr
sub
add
(bad)
cmps
jp
xor
rol
outs
out
call
xor
mov
aam
out
nop
sbb
loopne
hlt
cmps
jne
cmp
iret
jp
aaa
fbstp
push
mov
addr16
inc
inc
(bad)
mov
dec
sub
add
int
inc
or
and
cs
iret
(bad)
cld
push
or
sbb
mov
outs
pop
push
sub
add
nop
into
dec
pop
jle
gs
bound
ja
jmp
pop
ss
cli
push
mov
shl
sbb
push
les
cmps
jo
mov
xor
dec
cmps
aam
push
cmp
push
cmp
cmp
gs
(bad)
inc
cwde
fnstsw
jp
mov
jecxz
mov
rdtsc
mov
imul
pop
out
or
or
jb
call
cmp
stos
pop
scas
icebp
iret
das
mov
jp
pop
addr16
cmp
mov
adc
adc
gs
fnstsw
adc
out
xchg
or
cmp
(bad)
dec
and
push
sahf
mov
(bad)
fnstenv
fisubr
mov
xchg
mov
sbb
xor
mov
scas
repz
xlat
or
repz
or
jmp
jmp
pop
mov
push
xchg
bound
(bad)
in
aam
aad
sahf
xor
or
mov
mov
stos
add
mov
dec
mov
push
jmp
mov
or
daa
sub
xor
ret
fnstsw
daa
lods
test
mov
dec
pop
jo
sbb
xchg
fistp
or
and
lock
push
dec
repz
jge
pop
lods
mov
stos
(bad)
cwde
pop
outs
sahf
daa
shr
jg
cld
push
mov
mov
jmp
sub
lds
ret
jne
push
lds
out
add
dec
pop
xchg
sbb
adc
movs
stos
sub
xor
inc
jge
mov
sti
pop
cmc
in
pusha
push
sub
and
xchg
xor
push
mov
or
mov
mov
scas
xor
rcl
lahf
leave
ret
mov
and
mov
push
or
out
mov
mov
aad
mov
add
int3
std
aam
jge
shr
int3
arpl
mov
lods
jo
xchg
dec
xor
pop
popf
or
pop
sub
jecxz
popf
enter
mov
ins
sti
movs
xor
inc
test
retf
test
outs
add
movs
push
pop
stos
jmp
(bad)
movs
aad
icebp
xor
retf
push
xchg
or
xor
push
es
sub
das
sbb
rep
outs
mov
mov
jg
inc
dec
sbb
stos
cli
add
jne
test
lods
push
mov
mov
push
add
mov
rol
push
pop
xchg
in
ja
push
pop
or
(bad)
stc
xchg
ins
jmp
cli
xlat
mov
and
lahf
lods
xor
and
in
mov
jmp
sub
or
dec
mov
xor
sar
adc
or
pop
pop
jp
adc
fnsave
int3
lds
xor
(bad)
fnsave
jb
and
sub
mov
xor
add
mov
xor
aaa
sub
mov
jmp
lds
xchg
(bad)
mov
mov
xor
push
sbb
push
shl
vpsraw
mov
sbb
in
xor
test
jb
test
pop
xchg
das
movs
stos
in
xchg
or
jb
repnz
xor
cmp
mov
pop
scas
or
push
adc
cmp
add
and
out
stos
cli
cdq
ror
mov
pop
mov
pop
mov
jle
lods
mov
cdq
xor
imul
stos
sub
add
inc
jle
mov
movs
dec
lods
adc
push
cmc
outs
pop
test
scas
cmp
xchg
mov
mov
outs
xchg
call
out
xchg
pop
retf
and
mov
(bad)
rol
mov
mov
imul
jp
sub
in
out
pop
xor
test
adc
popa
cld
adc
xor
cld
adc
or
imul
inc
imul
loopne
xor
adc
xchg
fcom
mov
aam
stos
aas
push
test
popa
or
push
lods
sub
or
mov
sbb
addr16
mov
dec
pop
ins
scas
dec
adc
lahf
jle
repnz
or
inc
dec
xchg
pop
mov
sbb
loope
fs
cmps
xchg
cmp
push
popa
xor
shr
add
test
jae
push
test
shr
cmp
rcl
sbb
sti
and
mov
sub
mov
jge
sub
repz
or
mov
fs
sub
mov
leave
inc
ret
loopne
loopne
lods
into
mov
popf
mov
jb
test
(bad)
out
inc
mov
jle
push
loopne
or
scas
or
xor
(bad)
xor
mov
in
pop
enter
push
ss
jmp
mov
jp
cmp
or
adc
cmp
jbe
cmp
xchg
mov
push
jb
loopne
fistp
mov
out
not
and
xchg
cmp
mov
mov
retf
test
cmp
call
int3
mov
mov
fucomip
cmp
push
cld
fimul
or
jbe
pusha
jne
mov
mov
sahf
bound
jb
jae
cmp
push
inc
inc
push
sub
mov
and
dec
mov
ja
lock
or
lods
mov
mov
(bad)
xor
imul
add
mov
aad
stos
lods
mov
pop
lgs
fprem1
pop
adc
(bad)
adc
scas
push
test
pop
mov
iret
xchg
test
adc
and
(bad)
sub
jmp
add
xor
cmp
inc
or
call
push
add
std
dec
xchg
fs
cmp
mov
cmps
and
adc
(bad)
mov
cld
xchg
and
push
push
rcr
mov
xchg
fwait
xor
pop
ins
xchg
cld
xor
loope
xchg
xchg
mov
mov
out
or
retf
in
xchg
add
push
sub
ficom
inc
test
mov
sbb
ss
stc
mov
adc
add
mov
mov
popa
out
scas
mov
int3
adc
mov
cmp
mov
adc
paddw
sub
push
out
and
call
in
mov
repnz
xor
mov
lods
jns
add
daa
push
jnp
imul
push
scas
shl
mov
jmp
push
xchg
fist
or
mov
pop
mov
pop
outs
sub
or
mov
sub
cs
jmp
lods
inc
int3
pusha
aad
sub
add
sub
pop
out
and
test
inc
mov
push
xor
mov
and
pop
sahf
pop
sbb
ins
rcl
mov
aad
(bad)
(bad)
cmp
mov
sbb
jno
dec
jg
sub
fsubr
aaa
out
rcr
push
and
sub
shl
mov
lods
jmp
xor
xor
mov
xchg
cli
mov
sub
push
sub
(bad)
push
mov
iret
sub
out
push
test
dec
pusha
xor
inc
call
mov
retf
and
xchg
inc
sti
dec
jle
jno
mov
mov
stos
push
and
call
stos
stos
out
arpl
mov
mov
in
adc
cmps
shl
mov
mov
imul
adc
and
or
movs
xor
pop
xor
out
dec
mov
mov
call
in
icebp
cwde
xor
jle
mov
retf
fs
imul
iret
xor
mov
mov
test
call
fcmovu
es
shr
jle
mov
inc
mov
int3
aaa
icebp
mov
lds
shl
fs
rcl
int
lea
jmp
stos
mov
out
xchg
jle
repnz
jmp
sbb
sbb
in
fldenv
(bad)
xor
sti
lods
and
cmp
add
movs
(bad)
sub
out
jp
in
jbe
and
enter
lahf
push
fstp
mov
in
xchg
mov
cmp
add
lock
ror
test
stos
pop
popa
lock
jecxz
adc
rcl
adc
mov
sub
ins
or
cwde
inc
shl
mov
cmps
leave
inc
jp
add
and
cmps
adc
repnz
jmp
sbb
fcmovnbe
stos
popa
outs
dec
sbb
jp
in
mov
retf
fsub
mov
lods
sar
mov
adc
mov
and
stos
dec
push
sbb
mov
mov
cs
mov
ds
adc
jp
mov
inc
push
xchg
leave
bound
xchg
mov
xchg
rol
mov
cld
pop
js
mov
mul
adc
mov
stos
adc
icebp
pop
leave
add
xchg
idiv
dec
pop
shl
mov
imul
repnz
shl
mov
neg
out
rcl
xor
mov
jp
mov
pop
sub
jecxz
pop
xor
and
mov
cmp
adc
cmp
sbb
ret
mov
sahf
push
xor
nop
call
retf
inc
retf
adc
mov
loope
mov
outs
fld
push
inc
seto
into
adc
pushw
ja
mov
(bad)
jmp
push
jmp
data16
shl
push
mov
pop
mov
pop
mov
retf
fldcw
inc
push
out
inc
dec
dec
push
ror
imul
mov
xchg
mov
adc
adc
jecxz
dec
(bad)
ret
ss
jle
sbb
cs
mov
nop
or
push
ja
push
retf
dec
pushf
fbld
xor
xchg
xchg
stos
xchg
stos
jle
mov
mov
fs
inc
jae
sar
mov
(bad)
mov
push
fiadd
lods
sti
sbb
add
cwde
jl
mov
or
fstp
dec
mov
repnz
std
pop
call
mov
mov
mov
arpl
mov
fistp
lods
test
fistp
out
popf
xor
mov
or
push
jbe
aad
push
mov
mov
das
mov
data16
dec
sub
in
scas
sub
repz
sub
sbb
sbb
xchg
dec
(bad)
es
xchg
push
sbb
sub
pop
cmp
mov
fistp
xchg
test
cwde
xchg
add
jmp
xchg
xchg
xor
xor
into
test
repnz
xchg
aaa
out
cmp
or
lods
add
cld
add
mov
call
mov
bound
rcl
jb
cli
jp
mov
dec
int
ins
pop
mov
ja
sub
mov
pushf
jo
lds
push
mov
gs
ss
mov
call
and
or
pop
js
daa
leave
aas
adc
js
add
adc
cmp
pushf
adc
scas
mov
push
cmps
and
cmp
cmp
cmc
jb
imul
cmp
xor
into
mov
jae
imul
iret
(bad)
repz
cld
or
inc
in
inc
lods
push
test
scas
je
movs
xchg
mov
sub
and
ins
xor
push
sub
test
ret
lahf
lds
cld
cmp
lods
sub
cmps
out
xchg
ret
cmp
xchg
jno
rcl
out
jns
cs
push
mov
xchg
xlat
jns
sub
jecxz
sub
sbb
fwait
dec
imul
mov
scas
jb
stos
mov
inc
push
sub
jb
(bad)
fadd
scas
jb
enter
push
xor
xor
add
jmp
push
imul
and
imul
and
jnp
fld
sub
mov
jge
daa
push
and
adc
inc
popa
add
inc
stos
jb
adc
aam
sub
dec
ins
(bad)
fldcw
jmp
stos
bound
mov
or
and
inc
push
dec
arpl
xor
dec
adc
dec
jle
lock
cmc
dec
xchg
mov
lock
cmc
dec
xchg
f2xm1
pop
cmc
dec
sahf
ret
lock
cmc
dec
cmps
lods
lock
ja
outs
xchg
dec
test
cmc
dec
mov
lock
cmc
dec
mov
or
(bad)
mov
jbe
push
dec
into
aas
lock
and
mov
push
jle
out
push
or
out
pushf
std
fadd
push
cmp
cmp
rol
mov
mov
jge
jb
jb
jns
ds
ret
xchg
xchg
dec
cmp
test
push
ud2
pop
push
mov
iret
stos
adc
in
dec
adc
mov
and
aas
cmps
cmps
mov
(bad)
push
or
push
pushf
std
pop
or
neg
push
xor
sub
dec
rcr
shr
pop
sbb
mov
out
pop
sbb
fdivp
sbb
sbb
std
push
sbb
mov
jb
mov
fldz
or
icebp
pop
and
addr16
sbb
leave
mov
mov
mov
sbb
mov
cmc
cmp
add
xlat
mov
mov
xchg
pusha
stos
mov
xor
aad
mov
cmc
retf
out
xchg
out
or
xchg
lods
outs
aam
pop
outs
rcl
mov
shr
cmp
ins
add
repnz
scas
cwde
cmps
xchg
in
popa
xchg
lods
ss
(bad)
push
dec
test
push
lods
call
leave
mov
(bad)
ins
in
pop
shr
into
ret
(bad)
mov
mov
mov
ror
mov
sbb
push
jo
adc
jne
and
shr
scas
scas
or
test
push
dec
cmp
cmp
call
jno
xor
dec
ss
or
xor
mov
loopne
or
mov
(bad)
out
or
cli
jb
aad
arpl
and
aad
pop
or
ret
into
xchg
sbb
and
push
mov
mov
jae
test
mov
xchg
push
movups
ror
cs
fcmovu
addr16
push
or
push
jne
xor
xor
hlt
test
mov
sbb
mov
loopne
or
jb
adc
sbb
cmp
shr
(bad)
leave
ret
shl
int
pop
xchg
repnz
sub
mov
push
pop
pop
xchg
xor
sar
push
sub
dec
jae
sbb
ret
adc
add
int
xchg
push
lods
xchg
pop
mov
adc
dec
xchg
and
dec
outs
out
xchg
and
cmp
mov
jg
ds
xchg
push
cmp
in
ja
jle
cmp
ret
pusha
ret
imul
adc
sbb
jbe
ret
xor
push
lods
xor
js
je
(bad)
dec
jbe
mov
les
(bad)
retf
movs
cmp
and
adc
cdq
cmp
inc
cmp
cdq
lods
mov
cmc
adc
cdq
mov
mul
add
cdq
loopne
add
jecxz
cdq
jmp
jns
into
imul
jecxz
ss
and
scas
mov
(bad)
jmp
xchg
mov
mov
xor
push
cmp
mov
int
jmp
xchg
adc
(bad)
xor
mov
mov
xchg
add
dec
sub
mov
gs
in
stos
pop
lahf
loop
cmps
xchg
xor
arpl
cmp
cmp
sbb
adc
or
fldenv
dec
btr
(bad)
in
mov
iret
and
xchg
loop
adc
out
pushf
mov
call
iret
inc
call
xchg
mov
cmc
xor
bound
loop
stc
jnp
out
cmp
jo
iret
xchg
jge
jns
xchg
inc
adc
pop
int
pushf
iret
dec
fisttp
es
outs
adc
int3
cmp
push
int3
or
dec
cwde
cli
dec
sahf
cmp
daa
jbe
xor
push
add
push
push
fdivrp
out
outs
dec
les
inc
jb
xchg
mov
jb
ja
into
inc
psadbw
stc
ds
(bad)
idiv
xor
stos
push
call
mov
mov
xlat
test
shr
retf
and
dec
cmps
retf
(bad)
(bad)
(bad)
sbb
xchg
mov
sub
mov
sub
xor
ficomp
mov
xor
repnz
xchg
pushf
mov
fisubr
push
sub
fidiv
(bad)
push
dec
cmp
ret
(bad)
mov
(bad)
ss
mov
imul
scas
lods
mov
in
sub
dec
ins
repnz
sub
int
daa
(bad)
ret
scas
and
pop
test
dec
inc
aas
ss
pop
mov
inc
jo
xrelease
leave
sub
stos
dec
xchg
inc
add
fsubr
mov
pop
jmp
(bad)
mov
mov
or
cmps
out
jbe
scas
daa
mov
movs
jnp
push
test
mov
ss
retf
cmp
mov
das
mov
fistp
outs
fprem1
dec
push
pop
mov
lds
mov
pop
xor
leave
call
loopne
es
pop
aaa
jo
pop
lds
pop
xor
and
loop
hlt
or
and
mov
inc
or
aad
cli
scas
in
mov
stos
mov
(bad)
in
jp
xchg
lock
lea
dec
ret
cvtps2pi
into
popf
dec
scas
push
pop
div
xor
das
xchg
sbb
and
cmps
fwait
enter
mov
loopne
and
pop
imul
(bad)
sub
jle
lea
cmc
test
sbb
xchg
pop
leave
cmc
std
push
out
add
pop
sti
imul
scas
leave
push
xchg
mov
stos
mov
std
stc
jmp
adc
mov
std
enter
sbb
push
sar
scas
mov
into
xchg
mov
inc
dec
mov
adc
mov
pop
mov
leave
or
push
sbb
inc
push
arpl
pop
mov
ss
in
or
in
cmovnp
inc
fsubr
aas
mov
in
fstp
inc
xchg
fcom
in
mov
mov
push
fdiv
dec
cmps
and
das
mov
xor
scas
mov
cli
inc
movs
fdiv
rol
dec
xchg
sub
jb
enter
adc
out
mov
mov
xchg
call
mov
mov
cld
sub
pop
pop
mov
dec
mov
sbb
int
div
das
xchg
in
add
call
mov
enter
and
test
xchg
movs
cmps
sar
xchg
mov
push
or
jae
stos
add
pop
stos
inc
xor
jb
shrd
imul
mov
mov
xchg
in
jmp
jp
and
test
stos
(bad)
div
push
mov
adc
sar
mov
in
xchg
pusha
ret
rol
dec
mov
aam
sub
stos
mov
add
fcmove
mov
sar
(bad)
loop
scas
fwait
es
rcl
cmps
jo
test
in
mov
push
in
shl
adc
mov
lods
xor
es
lock
and
add
cmp
mov
sar
mov
out
dec
and
push
iret
lea
adc
aad
and
add
loope
adc
sbb
cmpxchg
fisttp
add
int3
stos
xor
xor
mov
pop
clc
enter
ins
repz
dec
(bad)
mov
mov
mov
add
in
pop
xchg
mov
xchg
or
xor
clc
gs
jg
shl
or
retf
call
push
sahf
arpl
retf
sbb
mov
outs
mov
mov
push
daa
leave
fisttp
ret
or
cmp
sub
movs
fimul
mov
lea
sbb
imul
inc
adc
sub
dec
push
xchg
dec
dec
or
into
xchg
out
hlt
jne
inc
jle
pop
mov
push
int
clc
push
push
lock
stos
add
(bad)
pop
inc
pop
pusha
test
pop
clc
je
(bad)
cmp
cmp
adc
popf
retf
push
push
aad
scas
enter
push
push
pop
mov
fsubr
cmp
jge
mov
aam
sbb
mov
add
cli
jne
sub
xchg
fild
stos
in
fnstenv
cmp
neg
add
xchg
je
mov
daa
cld
cmc
outs
sti
pop
es
xor
sub
pop
aam
jge
xor
ss
mov
xchg
xchg
outs
or
mov
bound
mov
push
and
and
mov
daa
mov
ss
sbb
jp
es
xlat
mov
popf
mov
lods
ja
sub
inc
jge
test
test
push
xchg
lods
or
pusha
mov
mov
mov
adc
xchg
mov
bound
jnp
stc
mov
sub
mov
mov
pop
mov
loope
xchg
pop
fwait
scas
stc
loopne
gs
mov
rcl
scas
dec
xchg
sbb
cmp
test
in
jae
les
imul
xchg
add
pushf
pushf
lods
test
test
(bad)
ror
stos
pop
add
inc
jnp
jmp
pop
retf
pop
pop
test
in
cli
das
adc
jl
es
(bad)
cmp
add
ja
adc
and
(bad)
(bad)
mov
test
fnstenv
loope
lock
inc
hlt
loope
(bad)
stc
(bad)
aad
xor
mov
out
add
or
or
scas
xchg
push
lds
jle
pop
xchg
sahf
lods
das
jp
push
les
ffreep
stos
mov
mov
and
dec
cmp
and
and
lods
inc
xor
jb
out
inc
in
call
adc
pop
xchg
pusha
adc
dec
aad
rcr
loop
pushf
xchg
mov
push
je
jp
xchg
shl
enter
dec
mov
mov
out
popa
or
ret
fadd
cwde
mov
fsub
dec
mov
lea
aaa
std
pusha
adc
lods
and
les
out
or
inc
dec
xor
pop
push
mov
sub
lods
fs
xchg
xchg
lods
mov
pop
int
inc
jmp
mov
and
cmp
jne
cmp
(bad)
rcl
pop
(bad)
push
cmc
ins
cmp
jae
push
pop
or
adc
mov
xchg
icebp
lock
adc
sub
jns
mov
adc
mov
push
xchg
sub
push
ja
or
fdiv
push
daa
ror
fcom
pop
add
mov
cmp
popa
adc
jns
pusha
sti
push
xchg
(bad)
adc
or
push
fadd
(bad)
jo
inc
adc
fwait
das
stos
inc
ret
(bad)
ds
xchg
retf
ds
jmp
mov
cmp
fidiv
add
jno
rol
pusha
xchg
mov
in
das
mov
rcl
rol
sar
jp
pop
retf
test
mov
int
test
nop
ret
mov
dec
lods
xchg
prefetchwt1
inc
xchg
scas
cmc
or
mov
(bad)
ds
test
ret
xchg
ret
ins
sahf
jb
mov
jbe
scas
gs
(bad)
push
lea
sub
xor
inc
push
sub
mov
xchg
mov
rcr
(bad)
sbb
or
(bad)
sub
lea
mov
lea
push
mov
ret
mov
sub
loop
std
and
mov
xchg
fidiv
sub
mov
and
xchg
and
repnz
in
popf
or
sti
(bad)
mov
int
sbb
or
iret
mov
pop
pushf
push
push
cs
ror
push
out
push
stos
push
test
jno
arpl
stos
outs
in
sub
(bad)
and
and
outs
push
mov
sub
loope
jmp
out
lods
sub
push
pop
lods
push
jp
xchg
mov
mov
pop
in
cmp
data16
cmp
xchg
jmp
rcr
xor
push
mov
rcr
xor
cmp
jb
inc
or
mov
into
rcl
inc
retf
mov
retf
sar
leave
xor
shl
lods
(bad)
outs
adc
mov
xor
dec
or
(bad)
loopne
out
mov
or
lds
xchg
xor
loopne
mov
push
xor
loope
inc
cmp
mov
ss
loopne
sub
lds
cmp
mov
repnz
loop
xor
icebp
into
lds
pusha
cmc
pop
jb
outs
ins
movs
xor
mov
or
int3
sbb
or
dec
std
in
cmps
retf
mov
jmp
mov
lods
cmps
and
loopne
add
adc
and
repnz
lods
in
mov
int3
lods
jmp
push
stc
lds
xor
sbb
and
xor
loope
loope
lds
xchg
clc
inc
mov
(bad)
call
fwait
or
pushf
in
outs
ins
pop
lds
in
setl
dec
pop
into
lds
adc
into
jb
loop
pushf
cmp
fwait
pop
pop
into
lds
loop
xor
loop
adc
lds
dec
sbb
xor
loop
cmc
inc
lds
mov
xor
loop
fadd
stos
or
test
mov
loope
xor
mov
retf
ror
in
jmp
lds
cmp
push
push
cmp
out
hlt
cmp
stos
push
(bad)
call
ret
mov
shr
push
into
rcl
clc
mov
js
int3
jo
jbe
fnstsw
shl
mov
lahf
stc
dec
jmp
sub
dec
popa
or
mov
(bad)
xor
mov
jb
ss
push
sub
into
test
pop
mov
pop
(bad)
std
adc
push
inc
mov
add
cmovl
rcl
push
rsm
jae
pushf
out
sbb
or
in
test
nop/reserved
mov
stc
dec
fidiv
sub
fst
inc
gs
add
xor
xor
xchg
ud2
sbb
mov
sbb
and
leave
outs
out
popa
aas
adc
cmp
xchg
fcom
mov
repz
or
in
and
mov
push
lds
mov
loopne
rcr
imul
pop
mov
mov
js
pushf
xchg
push
mov
xchg
loope
test
jmp
add
adc
cli
(bad)
cwde
jnp
js
and
mov
xchg
and
jne
mov
sbb
xchg
xchg
mov
aaa
in
lock
mov
out
aaa
pop
ja
mov
adc
jmp
outs
xchg
stc
push
rcr
pop
mov
dec
mov
xchg
ins
push
mov
shr
and
push
sub
fdivr
lds
sbb
das
icebp
push
sar
leave
test
mov
sti
out
call
sbb
shl
lods
test
retf
(bad)
movups
stos
mov
pop
rcl
or
jmp
sub
cli
out
push
push
lods
mov
inc
out
out
outs
jmp
jp
mov
push
jno
cmp
xor
aam
(bad)
movs
mov
cmp
cmc
sub
stos
imul
adc
mov
and
test
lahf
xchg
xchg
jmp
hlt
not
ret
fisubr
stos
or
sti
ret
xor
ret
(bad)
mov
xor
je
dec
dec
(bad)
xchg
mov
(bad)
and
jno
xor
dec
push
addr16
in
scas
mov
mov
mov
sbb
in
pop
fbstp
xor
(bad)
xor
stos
pusha
xchg
jns
daa
xor
mov
cmps
aaa
mov
mov
or
ja
outs
jbe
sbb
push
jbe
outs
xchg
ins
sub
stos
stos
stos
push
add
xchg
add
outs
jmp
mov
shr
or
dec
jge
scas
pop
push
scas
(bad)
jle
shr
xor
lock
ret
adc
xchg
jp
pop
xor
mov
loop
fbstp
stc
lds
push
les
push
dec
jbe
adc
lods
sub
add
aaa
add
mov
leave
sub
dec
dec
(bad)
mov
dec
mov
mov
hlt
push
jmp
mov
or
jmp
and
(bad)
or
jp
sub
test
and
mov
push
xchg
and
shl
xor
test
scas
ja
cld
movs
and
xchg
ins
sub
out
mov
mov
xor
scas
in
mov
mov
cmp
xor
stos
mov
stos
cmc
jl
(bad)
std
fst
sbb
adc
xor
stos
(bad)
out
repz
stc
xchg
inc
ret
pop
repnz
dec
bound
(bad)
mov
push
mov
sub
adc
cmp
jg
mov
mov
sub
sub
and
xlat
stos
sbb
jg
ds
shl
jne
icebp
or
jbe
xor
push
mov
sub
jmp
lods
(bad)
in
(bad)
mov
add
jecxz
jg
and
mov
mov
sbb
movups
stos
xchg
pushf
loopne
sti
test
rcr
cmp
cmp
jb
fdivr
mov
sub
fadd
inc
sub
clc
inc
xchg
mov
shr
cmp
icebp
int3
jae
sub
stos
ins
stos
(bad)
stc
cs
add
lods
stos
mov
sbb
cwde
push
out
mov
ins
mov
dec
or
dec
into
in
cwde
mov
out
jmp
test
gs
lock
(bad)
test
in
adc
sub
pop
imul
mov
mov
xchg
adc
wbinvd
fcomp
hlt
ret
sbb
sti
mov
add
add
stc
sbb
sahf
add
into
call
lods
arpl
ror
mov
sub
push
outs
leave
mov
jle
mov
jmp
fwait
mov
or
add
push
shr
lmsw
and
ret
daa
cmp
in
mov
sahf
leave
dec
mov
and
shl
pop
scas
dec
pushf
or
push
mov
test
sbb
add
dec
add
push
mov
pop
lods
scas
sub
mov
ins
call
cmps
mov
arpl
cmp
jo
cmp
fwait
jns
or
cs
mov
sbb
mov
repz
sbb
sbb
fcom
mov
aad
fld
test
dec
push
stos
retf
out
test
lds
imul
sahf
test
ins
mov
cmp
mov
sub
movs
jno
scas
mov
push
pop
lods
jg
mov
sub
sti
pop
cdq
mov
sbb
mov
xchg
lods
jp
pop
sahf
lods
pop
ret
lods
xlat
push
std
(bad)
fisttp
mov
test
mov
in
mov
push
lods
push
add
(bad)
imul
ss
dec
call
xor
or
mov
rol
jmp
into
leave
in
lahf
mov
and
fldcw
mov
ficom
mov
ss
mov
mov
pop
push
mov
push
add
fldz
mov
cmp
mov
in
xchg
xchg
lods
mov
pop
ficomp
mov
mov
leave
stos
mov
data16
cmp
fld
pop
loope
push
lea
lods
data16
leave
sub
(bad)
fmul
mov
sbb
cmp
call
sbb
repnz
jo
or
push
jae
in
mov
mov
ret
int3
sahf
fisub
mov
(bad)
jmp
les
mov
out
add
push
leave
mov
and
mov
jbe
jmp
jmp
fcom
dec
pop
mov
sti
shl
adc
xchg
adc
mov
mov
movs
mov
sbb
dec
add
daa
loop
or
(bad)
push
jl
fimul
scas
out
inc
(bad)
mov
aad
mov
xchg
test
jne
mov
jo
lds
ins
mov
sub
rol
lods
dec
ins
sub
rcl
call
out
dec
daa
push
push
mov
mov
leave
mov
inc
fild
loop
in
xchg
jmp
in
aad
mov
jmp
cmp
imul
xor
push
iret
xor
mov
xchg
dec
data16
div
or
rol
loopne
and
jb
mov
push
fcmovnu
mov
int3
in
mov
test
fimul
scas
aaa
mov
pop
or
loope
fnsave
xchg
fisub
mov
xor
scas
aaa
icebp
push
test
xor
jbe
mov
mov
mov
sbb
mov
loope
lock
loopne
and
push
pop
and
xor
movs
xchg
es
mov
gs
scas
add
neg
xchg
popf
cwde
mov
mov
inc
idiv
push
or
push
loop
or
ins
icebp
add
jge
icebp
inc
jmp
pop
cmc
test
xchg
sub
test
into
mov
adc
(bad)
dec
(bad)
mov
or
test
movs
push
adc
ret
dec
xor
ror
sub
cmova
xchg
fistp
pop
mov
sbb
mov
jge
adc
scas
leave
icebp
mov
pop
test
int
fnsave
jae
test
loopne
add
push
and
and
pop
popa
mov
mov
cmc
mov
stc
js
push
dec
daa
mov
test
mov
pop
cmp
ret
mov
mov
scas
call
pop
inc
and
pop
lods
retf
ret
(bad)
out
scas
out
shl
adc
retf
cli
dec
mov
jnp
jo
shl
and
mov
xchg
cdq
sub
jecxz
loopne
add
jbe
out
or
jecxz
clc
jb
push
fwait
xlat
test
add
or
jmp
xchg
out
call
mov
add
mov
xor
aad
cli
mov
jo
out
cld
test
mov
call
imul
dec
mov
add
cmc
add
push
pop
in
sub
test
and
sub
lods
lods
sub
sar
repnz
push
inc
shl
mov
mov
aaa
cmp
push
xor
dec
sub
jnp
mov
in
mov
je
lods
jl
xchg
div
sub
mov
sti
push
pop
pop
pop
pop
repnz
and
(bad)
jne
sahf
cmp
test
add
mov
jbe
stos
xor
fst
dec
ss
clc
xlat
fucomp
dec
mov
mov
inc
(bad)
shl
test
loope
aad
mov
popf
sbb
ins
cmp
xchg
push
fmul
lea
push
ret
ret
test
xchg
aas
sub
cs
nop
(bad)
cmp
inc
add
mov
sub
dec
mov
stos
scas
into
loope
cs
shr
jo
push
ins
add
arpl
mov
dec
fsubr
jo
xor
fisubr
jo
xchg
outs
out
out
adc
das
stc
mov
retf
aam
mov
mov
mov
mov
leave
sahf
lds
(bad)
(bad)
jp
mov
call
add
in
retf
ja
stos
xor
mov
sbb
stos
pop
aam
clc
xor
fucompp
mov
sahf
sub
dec
pop
ret
add
out
pop
out
push
push
imul
mov
pusha
cmps
mov
add
cs
fwait
and
stos
sbb
xor
cmps
out
lods
xor
jmp
ss
pop
fimul
or
fisubr
sbb
or
out
mov
jnp
mov
test
xchg
in
(bad)
sub
cmc
and
xor
or
dec
push
outs
add
in
int3
fs
xor
sahf
mov
in
es
stos
xor
inc
shr
mov
call
fld
add
pop
sbb
sbb
imul
pop
or
push
xchg
clc
or
sti
xchg
xchg
aaa
fnstsw
(bad)
lods
xchg
jbe
jecxz
out
fucomp
(bad)
scas
xor
imul
stos
or
or
mov
cld
xchg
push
push
mov
lods
cmp
rcr
xor
fnstenv
in
scas
push
mov
ss
mov
mov
scas
pusha
scas
and
in
lods
push
out
stos
sahf
mov
test
test
jbe
mov
xor
mov
ds
inc
push
add
add
mov
dec
xlat
(bad)
xchg
adc
and
mov
stos
xchg
mov
out
fcom
jp
mov
adc
mov
cmp
push
jp
jmp
sub
addr16
push
add
mov
xor
mov
enter
jl
ror
xchg
or
outs
call
lods
xor
pop
cmp
(bad)
outs
in
push
es
(bad)
or
xchg
call
call
mov
mov
retf
jge
imul
sar
adc
je
imul
or
fcmovne
add
xor
sbb
sub
jae
(bad)
fwait
push
scas
jmp
dec
retf
xor
dec
ficomp
ins
retf
inc
and
scas
stc
mov
sub
fcmovu
dec
or
inc
fcomp
in
data16
inc
retf
imul
cmps
inc
paddq
cmp
in
fdiv
dec
sbb
neg
push
sbb
mov
xchg
neg
int3
neg
push
into
outs
inc
fld
cmps
outs
scas
out
scas
into
movs
(bad)
(bad)
scas
imul
scas
xlat
test
mov
test
adc
std
shr
push
cmp
call
push
mov
xor
or
sub
add
dec
dec
mov
jmp
inc
xor
xor
mov
mov
das
push
(bad)
sbb
or
daa
sub
or
stos
jecxz
pop
in
mov
mov
jmp
das
and
es
jne
loopne
xor
xor
mov
add
not
jge
test
jne
aad
lds
ret
ja
mov
jo
pop
mov
imul
ret
adc
mov
mov
ins
gs
jne
cmps
xor
push
mov
retf
pop
stos
fs
push
jmp
add
xor
stos
pusha
mov
into
pusha
cmp
xchg
aam
push
call
fnstsw
jge
mov
pop
int
dec
hlt
mov
mov
pop
xchg
sub
mov
mov
jmp
add
adc
mov
jb
jo
jg
push
push
mov
mov
xor
push
dec
stos
clc
inc
iret
shl
(bad)
fist
mov
mov
xchg
mov
(bad)
and
dec
jae
in
mov
add
loope
js
add
(bad)
or
into
and
imul
sbb
mov
or
sbb
lock
xor
cwde
pop
dec
cmp
mul
mov
mov
stos
int3
sub
call
xchg
jmp
mov
jecxz
cdq
inc
sbb
mov
iret
mov
push
push
bnd
xor
inc
mov
and
mov
inc
loope
pop
scas
sub
mov
pop
pop
out
jle
push
and
adc
pop
cmc
addr16
adc
(bad)
push
xor
push
mov
mov
dec
(bad)
mov
mov
or
push
pop
xchg
repz
fiadd
fimul
mov
and
mul
mov
add
stos
xchg
push
cmp
fnsave
cmp
pop
mov
cli
mov
outs
fcmovb
push
aam
mov
ret
sti
out
adc
js
sbb
jns
fild
pop
cmp
fimul
or
stos
in
xchg
mov
push
je
stos
push
add
pusha
aam
daa
call
mov
inc
mov
shl
or
cmps
rcl
mov
dec
mov
mov
movs
shr
repz
inc
jmp
mov
pushf
enter
mov
adc
mov
iret
sub
shr
xor
or
cmp
ss
arpl
retf
pop
hlt
shr
jmp
push
(bad)
jmp
adc
shr
out
inc
adc
cld
mov
sbb
pop
(bad)
inc
inc
ins
pushf
mov
dec
fcomp
inc
or
jl
mov
outs
lahf
mov
jmp
lods
or
sbb
jecxz
mov
mov
mov
cmps
mov
xchg
mov
scas
pop
scas
lods
dec
jb
fwait
mov
fldcw
mov
xlat
pusha
scas
mov
mov
ins
push
dec
mov
mov
out
mov
dec
test
sub
js
out
add
mov
or
in
or
stos
push
jmp
sahf
or
pop
in
shr
adc
jae
cmp
sub
or
adc
stos
sub
push
mov
(bad)
cli
addr16
scas
not
out
dec
retf
xor
mov
ins
std
test
or
cwde
leave
mov
clc
test
mov
ror
test
sub
jmp
xor
in
lock
mov
scas
mov
pop
daa
cmp
(bad)
test
stos
cmp
mov
jae
push
out
ins
iret
ret
sub
cmp
fcomp
movs
aas
ss
lock
mov
xlat
mov
lods
scas
jns
mov
jp
loop
jmp
adc
into
dec
repz
mov
mov
xchg
imul
adc
aam
lds
xor
sub
cmp
out
in
gs
cmc
mov
int
out
xor
pop
sub
pop
pop
dec
pusha
ret
test
(bad)
pushf
aaa
scas
call
or
mov
retf
mov
and
mov
lods
repz
pop
mov
das
test
dec
dec
fldcw
daa
pushf
xchg
stos
or
ins
pop
mov
sub
mov
xchg
dec
fadd
les
rcl
sbb
scas
xor
lods
repnz
push
ss
adc
outs
div
xchg
icebp
rcr
inc
pusha
in
lods
movs
sub
xor
mov
dec
mov
jmp
mov
mov
mov
imul
xchg
mov
xchg
jge
push
or
jmp
mov
jp
cli
lahf
sbb
mov
push
imul
xor
dec
popf
stos
ficomp
xchg
xor
mov
movs
add
ins
dec
mov
xchg
xlat
pop
scas
ja
shr
ret
pushf
adc
push
mov
test
push
xor
jge
mov
push
leave
add
cmp
xor
mov
call
rol
push
scas
cmpps
ret
sub
icebp
mov
js
mov
cmc
std
mov
xor
sti
fwait
aad
or
jmp
mov
repnz
ins
add
sub
data16
stos
push
popf
push
(bad)
sub
jmp
mov
jb
dec
fwait
mul
sub
add
scas
mov
ins
add
jl
in
lock
xor
call
aaa
stos
pop
mov
lods
dec
push
push
ficomp
out
or
xor
push
lods
dec
mov
retf
imul
add
repz
and
lods
loope
in
clc
mov
mov
outs
sub
cmp
jnp
inc
xchg
es
dec
sbb
out
add
aaa
mov
jae
sub
ficomp
mov
add
pop
cmc
push
jne
scas
or
out
fdivrp
sub
inc
mov
lods
movs
scas
push
dec
adc
int3
inc
(bad)
jg
pop
sub
or
xchg
push
test
das
out
push
adc
mov
ret
add
inc
bound
sub
jecxz
fdiv
add
into
inc
cmps
add
push
retf
(bad)
std
xor
stos
mov
loopne
ins
loop
mov
pop
mov
sub
mov
(bad)
int
and
daa
bndldx
sub
sbb
xchg
lods
es
stos
sbb
lds
mov
and
ds
adc
fmulp
xchg
scas
imul
scas
lods
jno
scas
repnz
fcmovnb
inc
sub
test
mov
dec
into
dec
(bad)
stos
pusha
sahf
adc
jecxz
cwde
push
jns
ror
push
sub
pop
mov
pop
inc
stos
enter
push
mov
stos
lods
stos
jp
sbb
in
pop
lods
in
stos
pop
push
pop
shl
gs
mov
sti
mov
rcr
in
xchg
xor
ret
mov
jmp
cld
cli
xor
nop
cmp
mov
retf
xor
jl
leave
jmp
jmp
mov
arpl
mov
mov
dec
jle
xchg
sahf
dec
(bad)
cli
jmp
fsubr
sbb
rol
add
adc
xchg
enter
jns
loope
cmp
xor
and
mov
in
and
js
(bad)
sub
cld
dec
xchg
cmps
ret
add
adc
fmul
xor
stos
out
gs
and
adc
push
xchg
mov
jmp
das
xchg
xchg
stos
xor
pushf
inc
ror
out
les
dec
stc
sub
in
test
add
inc
das
pop
shl
es
and
adc
test
xlat
test
fbstp
addr16
popa
mov
pop
cs
xchg
jp
mov
mov
sub
aam
lods
retf
or
jmp
mov
(bad)
jl
sbb
adc
scas
stos
xor
es
cli
(bad)
adc
cmp
push
(bad)
sbb
mov
sar
sub
mov
xchg
mov
jb
jl
cli
fsubr
pop
ins
stos
ret
movs
iret
retf
xor
mov
inc
fcmovnu
cmp
ret
adc
xchg
out
mov
pop
ret
das
stos
cmp
mov
cmp
jmp
iret
mov
sbb
push
or
(bad)
mov
push
or
int3
scas
dec
mov
mov
gs
test
sub
jge
mov
ret
cmc
add
ret
mov
xchg
xor
mov
xchg
fwait
mov
(bad)
ins
dec
or
call
mul
sub
stc
mov
mov
jns
call
jae
mov
and
arpl
xchg
(bad)
aam
movs
mov
mov
and
xchg
xchg
mov
(bad)
jae
rol
add
cmp
lahf
push
scas
sub
pop
and
ror
scas
stos
mov
dec
ret
ins
ficomp
and
loope
jae
ret
and
mov
mov
in
daa
cmp
xor
xchg
jecxz
inc
jge
mov
icebp
dec
push
pop
sbb
adc
inc
xchg
mov
mov
scas
outs
xchg
pusha
push
cli
scas
nop
mov
xchg
mov
cli
sub
jmp
cmp
imul
mov
sub
jp
fxch
pop
push
mov
cmp
lods
movs
sub
cdq
ins
xchg
dec
out
loop
inc
sbb
xlat
xchg
jae
jbe
rcl
xor
arpl
lods
fimul
fbstp
mov
mov
lahf
mov
add
sbb
ss
pushf
in
dec
in
movs
push
add
xchg
mov
adc
jnp
lock
lahf
mov
iret
pop
sti
xlat
jae
ins
ror
rol
dec
mov
pushf
int3
outs
mov
mov
test
mov
das
mov
imul
pop
adc
fbld
(bad)
ret
lods
xor
jle
pop
imul
sbb
xor
push
nop
outs
loopne
dec
mov
mov
mov
in
jno
sti
dec
addr16
sub
mov
mov
mov
in
adc
(bad)
lods
cdq
mov
out
dec
dec
pop
sbb
xchg
shl
jnp
iret
stos
xchg
cmp
pop
rol
mul
mov
dec
daa
mov
jnp
push
jle
push
mov
inc
xchg
lock
sbb
fcom
jmp
push
js
out
xchg
inc
xor
mov
repz
(bad)
and
mov
and
xor
or
dec
push
adc
xor
into
xor
jne
add
in
xchg
add
pop
lods
inc
push
jle
cmp
jnp
or
rcl
ja
sub
add
(bad)
fst
mov
xor
xchg
mov
push
loopne
clc
test
mov
pushf
jge
shl
and
rol
and
inc
jnp
scas
(bad)
add
push
jg
dec
mov
mov
and
fucom
push
ins
std
dec
mov
mov
(bad)
add
das
mov
pop
sub
adc
mov
mov
adc
adc
push
outs
jge
mov
xor
fidivr
xchg
xor
test
mov
xor
fisubr
in
cmp
adc
jecxz
leave
repz
mov
mov
inc
lods
pop
cld
mov
stos
es
jo
fdiv
lods
and
cli
sub
lods
sbb
ins
cmp
and
in
pop
test
bnd
sbb
shr
xchg
aas
test
add
mov
mov
(bad)
mov
xor
mov
pop
retf
out
mov
mov
mov
dec
test
retf
(bad)
and
stos
adc
push
push
push
mov
inc
push
xor
dec
lods
jae
push
mov
call
scas
stc
jl
sub
dec
retf
shl
out
sub
lock
or
rcr
xchg
or
cwde
push
xchg
(bad)
cs
jg
xchg
sub
xor
push
push
mov
call
mov
fwait
mov
sub
cmp
pop
mov
inc
jns
in
ins
push
cmps
loope
lods
xchg
addr16
jae
mov
cmps
jo
cwde
xchg
mov
xor
xor
ret
(bad)
call
jbe
add
inc
sar
add
icebp
scas
and
push
mov
push
fs
mov
cmp
loopne
mov
adc
cmp
stos
rol
xor
repz
outs
jne
or
jbe
lea
repz
sbb
fs
jbe
mov
lods
push
xchg
inc
cmps
mov
mov
jmp
(bad)
adc
xchg
lods
or
inc
daa
adc
jle
xchg
std
aaa
dec
sub
retf
stos
in
sahf
or
mov
mov
arpl
jb
(bad)
mov
lods
call
fwait
adc
les
movs
sub
ror
pop
or
pop
cs
add
pop
(bad)
fs
mov
adc
loop
popf
xchg
xchg
shr
dec
lods
ret
jo
lds
dec
and
lock
cmp
in
ficom
sar
and
xchg
call
cmp
pop
jmp
test
mov
test
std
add
jmp
add
fnop
pushf
xor
sub
gs
sub
mov
mov
xchg
mov
sub
add
mov
sub
lock
int3
loop
mov
sbb
mov
mov
stc
and
fcmovbe
pop
pusha
and
scas
pop
inc
icebp
stc
add
cmp
fcmove
pop
jbe
loopne
pushf
scas
cmp
or
inc
fwait
mov
xchg
and
out
scas
(bad)
scas
push
sub
ret
leave
inc
pop
xor
jle
jecxz
add
aas
hlt
test
ja
fsub
sub
mov
ret
pop
out
gs
xchg
ss
stos
in
aad
rcr
sbb
and
test
adc
arpl
add
clc
neg
pop
xchg
and
mov
jns
shl
mov
xor
lods
test
inc
xor
stos
jg
fstp
jae
fld
mov
movs
xchg
scas
xor
inc
sub
mov
sub
jl
mov
clc
pop
xor
jp
hlt
xchg
fist
mov
jmp
xor
jb
test
loope
fbstp
clc
stos
mov
aam
int3
add
jecxz
out
bnd
jns
(bad)
arpl
imul
in
push
ds
mov
imul
or
in
pop
sub
dec
iret
jmp
or
mov
pop
add
cwde
dec
bnd
shl
int3
shl
adc
lds
in
cmp
adc
mov
shl
mov
pusha
int
shr
jno
xchg
add
loope
(bad)
in
inc
pop
fadd
enter
adc
pop
mov
test
push
jle
lahf
test
jmp
iret
dec
out
and
mov
fcmovbe
mov
rcr
cmp
ror
xchg
loopne
mov
push
add
ret
cdq
sti
mov
out
mov
adc
xlat
xchg
outs
(bad)
mov
or
loope
mov
bound
int3
into
jae
jo
ror
lods
test
mov
repz
adc
pop
and
or
xchg
test
psraw
mov
xor
cmp
cmp
lods
sub
jbe
stos
fsub
sub
push
pop
gs
adc
stos
dec
xor
push
jmp
jo
cs
xor
lds
jmp
sub
(bad)
mov
out
fsubr
retf
mov
xor
mov
add
add
xor
lods
jp
fld
pop
ss
in
imul
outs
lods
adc
ror
adc
xlat
gs
iret
inc
push
lods
xor
mov
lods
dec
dec
jge
dec
mov
dec
mov
xor
pushf
jle
jmp
call
inc
cmp
enter
lods
fucom
push
fist
dec
loopne
mov
sub
pop
pop
mov
and
mov
int
lahf
mov
nop
mov
push
shl
data16
aam
pusha
jle
stos
mov
shr
xchg
mov
sub
mov
ror
xor
dec
sub
cld
imul
scas
mov
xor
inc
out
neg
sbb
mov
mov
in
push
and
ins
pusha
lock
test
lods
ss
pop
scas
or
mov
push
inc
aam
test
xor
inc
mov
scas
jae
cmp
add
mov
shl
sti
jmp
mov
push
mov
mov
inc
(bad)
sbb
jmp
retf
or
rol
add
call
mov
pop
call
xchg
adc
mov
or
aad
cwde
add
push
sub
inc
lods
sub
ret
icebp
ds
fwait
xchg
call
fcmovnbe
cli
jb
mul
aas
mov
data16
mov
loopne
mov
sbb
(bad)
and
scas
fcom
lods
jae
sti
clc
mov
push
jae
jo
repnz
int
retf
cmp
dec
jb
xlat
enter
push
jmp
xor
shr
cmp
dec
mov
push
xlat
out
mov
cmp
lods
xor
cmp
jmp
mov
mov
and
jmp
xor
fdiv
jmp
jbe
sti
jae
loop
out
sub
cmp
lock
js
jb
jae
std
rcr
addr16
das
or
fcomp
in
mov
retf
stos
lods
jmp
fs
jecxz
shr
popa
std
push
jne
dec
sbb
retf
mov
mov
or
cmp
push
retf
adc
ror
in
dec
repz
addr16
cli
mov
repz
xor
bound
mov
and
stos
lods
pop
jnp
call
cli
out
mov
mov
inc
lods
pop
mov
stc
sub
push
jae
fcom
inc
iret
(bad)
xchg
lods
xchg
pop
inc
popa
in
push
(bad)
daa
int
inc
stc
cmps
retf
call
in
cvtdq2ps
jle
ins
rcr
out
mov
xchg
jle
daa
xor
scas
test
(bad)
lods
inc
js
xchg
or
mov
test
cmp
or
outs
push
(bad)
jmp
adc
lods
add
xor
cli
movs
inc
into
sub
lods
rol
add
movs
mov
push
mov
loop
(bad)
push
cmp
cmp
test
test
sbb
or
cmps
and
aas
or
rcl
push
mov
retf
rol
(bad)
jle
test
push
mov
mov
ins
cdq
cmp
std
mov
adc
ins
xchg
dec
cld
sbb
sub
xchg
dec
jmp
xchg
and
cmps
mov
out
mov
shl
cmp
mov
call
dec
cmp
test
jge
(bad)
mov
test
ins
mov
stos
outs
lods
mov
test
jbe
rcl
in
jle
aaa
das
(bad)
(bad)
mov
xchg
stos
mov
and
test
lods
sar
ror
jmp
jno
cs
inc
push
mul
jmp
cli
sbb
mov
ss
aaa
ss
rol
mov
mov
lock
push
cmp
mov
frstor
adc
or
loop
fsubrp
cdq
dec
bound
sub
pushf
call
push
sbb
sti
mov
les
es
stos
mov
or
fdiv
shr
shrd
push
xchg
test
push
out
mov
out
rol
in
xchg
call
sub
(bad)
lock
ficom
shl
mov
jecxz
stos
stos
mov
push
test
jmp
bound
jae
ja
scas
fild
dec
push
imul
ds
fnstenv
mov
js
js
xor
mov
(bad)
das
mov
rcr
lock
jnp
scas
call
in
and
push
pop
inc
add
sub
ins
mov
or
mov
repz
pop
push
(bad)
jmp
adc
or
es
int
cmp
mov
push
std
xchg
xor
add
ds
add
mov
les
mov
pop
rcl
mov
idiv
mov
cs
sbb
test
test
inc
nop
jge
test
fsubr
ins
or
push
das
ins
retf
cli
mov
pop
test
scas
in
mov
stos
out
cmp
in
test
popf
dec
mov
int3
repnz
jns
scas
scas
add
mov
push
out
adc
xor
or
add
loope
pushf
std
push
adc
and
fst
rcl
and
int3
sub
inc
push
loope
mov
and
mov
inc
mov
and
jbe
cmps
mov
(bad)
sub
cmp
bound
stos
cs
pop
add
push
jmp
jns
enter
mov
adc
add
jmp
dec
jecxz
loop
push
and
and
inc
scas
rcr
add
sahf
xor
imul
pop
sub
inc
inc
cmp
mov
leave
pop
mov
or
setp
push
es
jns
xchg
call
jge
mov
fwait
add
je
es
call
cmc
sub
out
in
xor
cmc
fs
sub
call
jp
cmp
or
scas
stos
jp
loop
inc
and
lods
dec
and
in
mov
shr
out
or
fcmovnu
(bad)
loop
jmp
test
icebp
repnz
movs
cmc
div
clc
stc
push
loope
std
(bad)
das
(bad)
fnstsw
or
adc
adc
sbb
sbb
and
and
dec
add
call
sub
mov
retf
fisubr
enter
retf
icebp
mov
pop
pop
mov
enter
inc
sbb
stos
mov
aam
sub
call
xor
mov
popa
(bad)
int3
mov
out
adc
mov
xchg
adc
stos
pop
rcl
stos
adc
imul
in
enter
mov
popa
in
scas
scas
in
test
outs
mov
stos
div
lods
push
das
imul
xchg
pop
(bad)
aaa
xor
push
aam
inc
mov
and
movs
es
popa
dec
movs
popf
push
iret
sub
push
xor
xchg
dec
dec
adc
cmps
repnz
scas
adc
ins
dec
in
(bad)
and
sbb
inc
or
out
add
mov
lahf
mov
bound
shl
mov
ins
mov
bound
in
push
repz
sbb
mov
out
dec
out
or
ins
push
pop
or
mov
arpl
lahf
xchg
inc
sub
int3
jb
jg
mov
arpl
and
or
mov
xchg
xor
add
shl
test
mov
jmp
and
in
add
mov
mov
out
in
retf
mov
shl
cmps
cli
imul
mov
xchg
mov
clc
adc
nop
lea
pop
jne
adc
push
mov
xor
retf
dec
stos
mov
in
(bad)
scas
mov
cmp
mov
ret
mov
mov
out
sbb
jmp
pushf
int3
pop
pop
add
sub
cdq
(bad)
rep
cs
cmp
pop
mov
push
mov
or
icebp
cwde
jae
cmp
cwde
imul
pop
shl
mov
jnp
scas
xor
xchg
pop
lods
stc
inc
fsubp
rcr
pop
push
stos
retf
jnp
stos
es
fild
or
sbb
mov
push
fiadd
scas
pop
cmc
pop
mov
sbb
movs
mov
retf
pop
icebp
or
fsub
sub
mov
pop
push
xor
and
rcr
lods
test
dec
out
mov
xchg
mov
lods
repnz
shr
add
push
repz
sti
je
sub
aad
dec
pop
sub
mov
mov
pop
cli
in
pop
xor
ret
out
int
ins
or
rcr
call
cmps
stc
sbb
call
sbb
stos
rcl
cmp
out
test
je
mov
jns
popf
adc
fwait
push
out
pop
das
ds
xlat
xchg
test
fwait
loopne
out
xchg
cli
push
xor
and
mov
not
or
xchg
xor
(bad)
or
mov
or
fisubr
sbb
pop
mov
ret
push
and
mov
popa
scas
mov
mov
fbstp
imul
pop
jmp
jns
movs
jae
lahf
mov
scas
or
inc
stos
cmps
ret
jmp
jmp
mov
mov
leave
xchg
lods
push
in
cwde
mov
xchg
or
jmp
jg
nop
push
fld
xlat
xchg
xchg
xor
stos
stos
mov
sbb
call
into
push
in
mov
pop
mov
mov
test
fs
(bad)
mov
aad
cmc
inc
out
mov
adc
test
mov
mov
xchg
mov
(bad)
dec
shr
xor
movs
cmps
fs
int
ins
dec
or
dec
cmp
test
jo
jmp
icebp
jne
movs
imul
xor
ss
dec
sub
xchg
mov
ret
in
or
cmps
xor
push
mov
mov
mov
into
push
fs
adc
inc
jmp
jns
dec
mov
mov
cmp
xor
sbb
xor
rcl
ins
lea
mov
retf
or
jge
push
outs
out
clc
jmp
(bad)
std
mov
movs
cmp
rcr
stos
mov
sti
mov
add
into
fs
repz
(bad)
jmp
mov
mov
(bad)
pop
iret
imul
imul
dec
sub
outs
in
aam
sbb
into
sub
mov
sub
sub
pushf
sbb
mov
in
loope
lods
jns
in
lods
retf
enter
cmp
fstp
ins
icebp
mov
mov
inc
bound
mov
add
data16
xor
arpl
push
mov
mov
bound
les
retf
xchg
ds
rol
sbb
arpl
fs
aad
out
or
jmp
add
mov
bound
mov
pop
mov
test
fsubrp
xchg
shr
mov
and
in
outs
mov
mov
lahf
or
mov
xor
imul
gs
xor
movs
int
xor
or
sub
mov
xchg
rol
lahf
imul
jmp
mov
adc
jns
cmps
xlat
fsub
shl
aad
mov
add
loopne
shl
into
popf
test
ss
cmp
aaa
aas
mov
or
mov
pusha
lds
adc
push
int
into
sbb
fstp
jb
jb
aaa
ss
pop
loope
push
push
pop
cmp
lock
cmp
adc
xchg
xchg
es
push
cmp
jecxz
ret
or
pusha
shr
mov
ss
xor
rcl
dec
add
lock
call
lds
bound
pop
pushf
aaa
xchg
mov
std
ror
retf
cmps
mov
jns
mov
jl
fs
fld
(bad)
out
xor
pusha
retf
jmp
or
ror
out
or
int
int
out
ss
and
jb
jns
sti
loope
dec
xor
data16
jb
outs
imul
or
in
pushf
call
mov
xchg
out
sti
movs
popa
das
ret
shl
dec
dec
scas
fild
pop
mov
pop
das
fidiv
jmp
xor
mov
mov
test
and
int
ficomp
(bad)
mov
cmp
pop
pusha
aam
sbb
fdiv
lock
imul
stos
fimul
(bad)
shl
cmp
adc
pop
mov
leave
sbb
loope
xlat
pop
into
add
int
mov
retf
mov
pop
fadd
mov
mov
inc
(bad)
mov
test
mov
mov
push
and
xchg
pop
xchg
add
pop
mov
push
add
add
mov
mov
mov
sbb
adc
pop
adc
sti
dec
test
mov
mov
(bad)
jns
cmps
add
dec
xor
mov
sbb
pop
out
cmp
add
mov
xor
retf
mov
jp
sbb
and
fdiv
mov
sbb
cmp
xor
add
bound
(bad)
ins
mov
dec
and
or
mov
jns
fisttp
or
clc
xor
ins
dec
data16
icebp
inc
add
or
fld
jecxz
jbe
mov
repz
sahf
stos
call
aas
or
xor
ss
cld
inc
adc
mov
fisttp
mov
out
mov
fisttp
fdiv
sbb
sub
outs
sar
mov
jmp
mov
mov
mov
jl
or
jl
imul
lods
div
lods
fistp
rsm
out
dec
push
ret
mov
not
popa
arpl
add
leave
adc
popf
push
jbe
jae
mov
inc
call
call
daa
pop
and
sub
and
jo
mov
xchg
in
pushf
adc
jo
mov
jmp
ficomp
sbb
pop
xchg
or
cmp
xchg
pop
ins
fnstenv
mov
jmp
shl
mov
sbb
(bad)
jns
or
sbb
fnstcw
fistp
mov
jns
fwait
mov
test
xor
mov
js
fidivr
mov
sbb
adc
dec
or
sbb
pop
push
ret
pop
sbb
or
push
call
ret
mov
(bad)
jle
retf
lea
lods
push
push
movs
mov
lods
jp
mov
jecxz
call
popf
into
(bad)
xchg
xchg
rcl
cmp
mov
mov
ja
fidiv
lea
cmc
pop
shr
push
dec
popf
(bad)
jl
mov
mov
mov
mov
xchg
xor
enter
jp
in
out
jg
ja
sub
mov
mov
dec
inc
mov
popf
mov
lods
mov
adc
leave
bound
out
cld
cli
cld
stc
lock
out
rol
jmp
sbb
add
pop
cmp
div
aam
or
push
mov
sbb
retf
push
adc
and
mov
sbb
(bad)
push
and
inc
mov
adc
push
sbb
test
fstp
femms
pop
sbb
(bad)
or
or
fst
or
pop
or
shl
and
idiv
inc
mov
sti
push
add
mov
popa
jmp
jne
push
idiv
dec
clc
(bad)
cdq
jmp
pop
(bad)
stc
(bad)
and
fprem
out
pop
(bad)
mov
mov
push
cli
loopne
adc
adc
jmp
hlt
loope
(bad)
adc
add
or
loopne
cmc
shl
mul
sbb
jecxz
cli
repz
and
sbb
loopne
add
leave
pop
cs
xor
mul
test
repnz
or
icebp
or
sbb
or
rcr
neg
loop
cmc
push
mov
sub
cld
push
out
and
call
and
(bad)
push
and
std
loope
std
hlt
test
popa
dec
sbb
fild
repnz
push
(bad)
push
out
std
icebp
stos
lods
mov
mov
jmp
in
cmc
push
gs
int3
xor
mov
retf
mov
and
or
push
xchg
retf
das
and
sbb
adc
pop
retf
xchg
mov
shl
adc
lds
and
sbb
fsubr
call
mov
jb
sub
fistp
stos
int3
leave
cmp
pop
test
inc
clc
rcl
popa
jno
scas
jmp
xchg
xor
stos
stos
stos
mov
