dec
push
add
add
add
dec
add
add
add
add
add
or
add
add
add
sbb
add
push
and
add
add
add
jecxz
mov
pop
sbb
pop
movs
inc
adc
adc
and
push
scas
dec
adc
hlt
cmp
ror
shr
xor
jmp
or
mov
mov
xlat
mov
push
xchg
or
push
and
jge
(bad)
or
or
out
pop
or
push
jge
sbb
pop
push
into
mov
add
ins
hlt
arpl
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
dec
add
add
push
je
imul
add
add
add
push
push
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
ficomp
add
add
add
add
add
fld
add
add
add
add
imul
add
add
add
jecxz
add
add
add
add
add
out
add
add
add
add
add
jmp
xor
add
ror
add
add
add
push
add
iret
or
add
add
add
lar
add
add
xlat
add
add
add
add
add
add
add
jnp
xor
xor
sub
sub
sub
sub
cmp
xor
data16
cmp
outs
fs
gs
jae
jb
jae
jne
arpl
add
xor
xor
xor
xor
xor
xor
and
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
shr
dec
cdq
sub
cwde
mov
mov
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
pop
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
sahf
ficom
add
add
add
add
jo
arpl
xor
xor
jo
imul
add
add
and
pop
add
pop
ror
or
cmp
mov
stos
aaa
inc
inc
js
ds
pop
pop
dec
inc
or
inc
cmp
lods
mov
mov
dec
repz
xchg
ins
cmc
jmp
cmp
(bad)
aad
ins
push
pusha
sbb
retf
int3
rcl
xlat
rcl
mov
shl
popf
pop
push
out
ret
dec
cli
adc
adc
(bad)
iret
push
test
scas
and
ror
test
rcl
pop
or
jmp
pusha
rol
or
xchg
push
and
xor
movs
pop
lea
mov
fstp
or
adc
sub
or
xchg
mov
clc
addr16
cmp
lods
into
xchg
sbb
cdq
outs
dec
mov
fldcw
movs
mov
push
jecxz
jecxz
mov
pusha
pop
mov
jmp
mov
fstp
sbb
dec
pop
mov
les
popf
dec
repz
test
aas
sub
imul
add
daa
and
push
arpl
dec
jne
xchg
jnp
ret
jmp
xchg
inc
sbb
ret
xchg
cli
jmp
mov
in
dec
dec
mov
or
icebp
gs
pushf
loope
fcmovb
jne
pop
adc
outs
mov
inc
out
or
mov
ins
mov
leave
fwait
cmp
mov
adc
add
sub
in
pop
sbb
cmp
push
test
jg
push
jmp
shl
jle
mov
mov
(bad)
jbe
out
and
cmc
and
pushf
clc
int3
lahf
push
jmp
xlat
neg
hlt
nop
repnz
adc
mov
outs
sub
add
pop
sub
(bad)
or
sub
int3
enter
out
pop
lahf
pop
pushf
and
(bad)
mov
adc
dec
mov
enter
(bad)
fwait
xchg
and
xchg
and
xor
xchg
push
mov
fnstsw
pop
cli
femms
cmp
mov
push
cmp
pop
jne
scas
pop
fmul
xor
xor
in
mov
aad
dec
dec
dec
mov
fisttp
pop
mov
pusha
movs
pop
push
xchg
jb
add
add
inc
sahf
and
or
jl
xchg
sbb
sub
cmp
push
jge
adc
ds
imul
adc
xlat
sub
xchg
jl
xchg
test
mov
aas
mov
mov
jne
mov
(bad)
mov
aam
inc
or
nop
movs
mov
icebp
cmc
cmps
hlt
retf
dec
popa
aad
nop
adc
repnz
dec
mov
lahf
pop
dec
jmp
inc
or
or
push
cmp
cmps
mov
mov
cmp
ret
push
push
in
mov
(bad)
sub
adc
dec
adc
xchg
scas
add
adc
adc
lods
mov
push
push
rol
(bad)
sar
aas
add
sub
pop
sbb
in
cmps
outs
inc
sbb
mov
inc
jae
stos
retf
pushf
cmps
shl
cmps
in
(bad)
int3
or
or
je
mov
cld
xchg
cmp
mov
or
daa
pop
mov
in
xor
loope
leave
jne
es
jmp
xchg
daa
sub
test
mov
dec
xchg
mov
(bad)
std
jbe
lahf
scas
ins
retf
push
sub
aam
cwde
cmp
push
add
int3
mov
fcomp
push
jb
icebp
mov
fstp
sbb
mov
jnp
jmp
adc
pop
add
xor
scas
pop
jae
ins
pop
fild
xchg
leave
sub
pusha
movs
add
lock
push
mov
push
das
mov
xchg
pop
scas
out
mov
jbe
stos
cmp
push
sti
(bad)
mov
pop
xchg
jo
xchg
mov
mov
pop
loop
js
jns
aad
imul
add
push
xor
(bad)
xchg
jno
mov
shl
jo
pop
ds
imul
in
dec
fild
xlat
mov
mov
aas
ins
push
cwde
xchg
fld
imul
cmp
inc
push
cmp
lds
mov
jl
test
mov
sbb
jmp
int3
cmp
xchg
jmp
popf
fwait
mov
adc
ret
add
inc
mov
rol
popa
inc
push
lahf
cs
xlat
adc
xor
inc
dec
jecxz
adc
xlat
addr16
inc
mov
test
mov
shr
cli
sub
fwait
jne
push
push
jnp
stc
imul
push
test
add
in
in
or
sub
fadd
outs
cmp
jnp
adc
inc
addr16
dec
imul
test
mov
xor
shl
gs
cmp
movntps
call
xor
stos
std
movs
xor
in
fs
jl
xchg
and
scas
cmp
xor
adc
jl
mov
enter
scas
fsub
repz
pushf
sub
jnp
lods
and
dec
test
(bad)
imul
int
mov
daa
or
jmp
mov
fwait
pushf
dec
icebp
push
smsw
inc
push
push
fs
inc
fwait
cmp
inc
leave
push
sbb
mov
xchg
push
out
mov
jno
lds
shr
neg
test
dec
mov
pusha
add
adc
mov
cmps
fsubr
mov
popf
aas
loope
xlat
dec
push
test
add
mov
(bad)
repz
or
or
pushf
test
mov
inc
inc
adc
sar
mov
lods
les
loop
inc
xchg
fxtract
lods
ss
mov
sar
dec
(bad)
adc
ja
inc
outs
add
mov
fadd
jmp
inc
adc
jle
and
dec
add
mov
mov
push
xor
enter
popf
mov
iret
sbb
jae
retf
ror
push
je
stc
dec
adc
sbb
or
sar
in
jmp
add
sbb
mov
add
inc
enter
push
jle
mov
jmp
in
mov
dec
adc
cdq
jle
sahf
and
scas
xchg
jo
ror
mov
sub
mov
js
pop
sub
sub
int3
sar
cmps
push
aas
loope
cmp
pushf
int3
add
lods
gs
and
push
ficom
(bad)
pushf
jge
bound
adc
out
in
inc
test
jge
cwde
bound
mov
cmps
sub
pushf
or
hlt
inc
fisttp
pop
fst
sti
popa
inc
ins
push
cmp
(bad)
add
push
repz
add
pop
cmp
iret
fsub
pop
xchg
pushf
das
add
xor
dec
retf
mov
push
mov
(bad)
les
icebp
and
add
and
xor
es
in
sub
cwde
mov
loope
div
jl
dec
push
in
or
xor
sub
test
sub
sbb
cli
push
add
add
push
sbb
inc
popf
jne
or
sbb
cmp
and
xor
outs
push
out
test
out
mov
hlt
bound
sub
pop
cmc
push
leave
bound
xchg
cmp
pop
pushf
and
mov
dec
mov
sub
and
pop
cdq
popa
xchg
sbb
pop
and
ret
in
mov
(bad)
fild
dec
or
pop
cmp
mov
xchg
mov
xor
dec
cmc
(bad)
je
add
cmps
xchg
inc
dec
fsubr
jle
push
sbb
sub
inc
aas
cmc
out
pop
sahf
add
in
push
xchg
cli
mov
sub
fistp
xchg
or
push
call
fwait
cmps
mov
addr16
mov
ja
outs
dec
les
add
dec
pusha
xchg
pop
push
inc
jnp
sar
(bad)
mov
popa
cwde
repz
push
lea
add
gs
out
mov
iret
xor
pop
(bad)
call
and
dec
push
adc
xchg
inc
cmp
mov
fld
dec
(bad)
pop
(bad)
popa
movs
xor
inc
or
into
adc
daa
outs
leave
jle
inc
pop
dec
test
inc
jl
jecxz
jns
ins
inc
add
jo
sbb
test
aam
mov
je
and
dec
add
pop
jmp
mov
mov
sbb
xchg
test
cmps
into
add
aaa
jb
and
cdq
add
call
adc
mov
sar
popa
int3
(bad)
fisubr
es
xor
bound
and
shr
push
scas
popf
fnsave
clts
push
test
call
inc
mov
cmp
imul
loope
daa
imul
cwde
loopne
add
push
jne
rcl
jmp
push
cmps
xchg
imul
cld
test
jo
inc
or
jmp
add
fadd
test
pop
stos
and
int
repz
mov
cld
xchg
pop
stos
xchg
test
retf
inc
adc
(bad)
call
cmps
loopne
jno
sub
imul
and
pop
data16
sar
push
pushf
mov
pop
mov
hlt
fucomi
mov
adc
sbb
movs
mov
in
xchg
test
dec
lea
clc
sti
ins
jg
loopne
mov
test
or
mov
shr
cwde
lea
aad
ins
adc
pop
sub
xor
sbb
in
ins
into
pop
ret
adc
out
mov
push
stos
and
gs
lahf
mov
xchg
mov
jbe
leave
pop
xlat
xor
xchg
mov
or
mov
shl
jmp
stos
ja
je
mov
pop
sbb
cmp
jno
push
(bad)
jbe
mov
push
out
sbb
outs
xor
(bad)
xor
ds
fs
fldz
outs
mov
sti
ficomp
mov
sbb
ficom
push
dec
test
xchg
cmps
jbe
lea
push
sub
or
cmp
jmp
or
lahf
or
aad
fiadd
pop
sub
(bad)
clc
lods
and
outs
shl
xchg
(bad)
and
push
or
add
or
inc
mov
in
mov
icebp
cmp
push
jle
int
adc
adc
imul
call
push
jae
int3
in
retf
dec
sbb
dec
xlat
retf
adc
mov
push
out
mov
rcr
sbb
cwde
cwde
jo
inc
fisub
hlt
inc
pop
dec
adc
mov
xchg
lock
imul
nop
jp
sbb
mov
xor
fcomp
test
or
mov
daa
cmp
pop
(bad)
out
lea
inc
add
call
fcom
or
imul
sti
sub
pushf
pop
ins
mov
leave
outs
push
jnp
shl
and
es
mov
lods
std
cdq
sub
fwait
add
mov
mov
push
fwait
imul
mov
xor
ror
and
xor
xchg
mov
push
xor
and
jo
pop
sbb
dec
pop
aad
dec
lahf
mov
popf
out
shl
cmps
cld
mov
hlt
enter
dec
test
lock
pushf
dec
(bad)
ins
xchg
imul
(bad)
jle
cdq
and
inc
daa
push
daa
repz
popf
popf
mov
dec
jae
stos
daa
ja
test
and
test
or
push
div
jb
dec
cmp
and
cmps
imul
out
jbe
and
pop
movs
(bad)
out
(bad)
neg
push
xcrypt-ctr
cmps
pop
xchg
inc
push
out
xor
mov
jnp
in
sbb
push
ret
mov
(bad)
adc
and
xchg
sbb
jle
mov
xchg
push
xchg
(bad)
int3
xor
popa
add
call
in
jb
mov
sub
cwde
xchg
mov
jp
pop
stc
fabs
dec
push
mov
mov
jge
shl
jl
hlt
sub
inc
ret
clc
inc
xor
and
jae
jp
push
pop
pushf
pusha
mov
mov
fs
xchg
xor
out
xor
bound
xchg
jl
xchg
mov
sbb
(bad)
pop
jp
sub
xchg
lahf
mov
aas
mov
mov
cmp
test
or
ins
retf
pop
shr
jp
inc
cmp
add
dec
ins
push
mov
in
sbb
dec
imul
pop
cdq
sbb
mov
xor
pop
mov
and
mov
jp
sub
mov
rcl
sti
les
push
xor
aad
(bad)
aas
xor
not
scas
push
clc
sub
cdq
dec
push
dec
push
or
test
add
xor
jl
test
mov
lods
aaa
push
fwait
outs
out
jmp
or
and
mov
pop
sbb
mov
fcmovbe
lahf
and
pop
push
jge
ret
inc
add
xchg
xchg
xchg
ss
adc
pop
test
push
adc
xchg
gs
loopne
or
lock
add
int
ror
jg
and
dec
xor
iret
add
sub
dec
mov
and
mov
mov
into
or
rcr
test
sub
jae
hlt
inc
(bad)
in
mov
ds
fmul
fdiv
test
push
out
adc
pop
and
ja
push
stc
mov
sub
adc
jmp
aas
icebp
mov
add
sbb
movs
mov
sti
mov
mov
cdq
push
add
ins
mov
imul
rcl
loop
jb
push
or
sti
in
inc
adc
adc
inc
(bad)
dec
xchg
xor
mov
push
ins
jle
add
movs
mov
lahf
xchg
push
pop
xchg
int3
jbe
int3
shl
aam
call
test
mov
dec
data16
les
sbb
out
xchg
scas
daa
fwait
mov
lock
cmc
shl
sbb
sbb
ret
(bad)
cmp
mov
mov
pop
xchg
scas
aad
(bad)
outs
dec
out
sub
pop
(bad)
call
into
popf
jb
add
sbb
jecxz
and
dec
stos
add
cdq
push
push
adc
mov
jns
mov
mov
cmp
or
test
repz
xchg
fwait
mov
loop
adc
and
nop
ret
fs
and
sahf
je
ss
mov
mov
mov
push
aam
pop
jno
add
fst
sbb
and
pop
stos
movs
pop
dec
enter
push
popf
fs
cmc
adc
ds
ins
cmp
add
push
test
push
cmps
stos
lahf
jo
or
or
jge
pop
std
mov
sub
data16
or
test
and
xor
or
jo
push
shr
rcr
fnstenv
ficomp
pop
jno
mov
push
adc
cmp
add
pop
mov
fstp
xchg
mov
(bad)
js
or
cli
(bad)
jns
dec
fwait
inc
repnz
(bad)
test
push
int3
fisttp
push
mov
bound
int3
fscale
bound
cdq
in
std
xor
add
adc
xlat
push
sub
lds
cwde
popa
push
movups
or
dec
jecxz
adc
cmp
cwde
xor
cmps
cmp
mov
push
xchg
jno
mov
adc
fist
je
pop
add
ss
fnsave
sub
mov
mov
push
lods
adc
repnz
dec
or
std
ins
cdq
fidivr
stos
push
in
rol
pop
mov
xor
fld
lods
sub
out
and
ins
push
in
push
and
mov
jge
test
and
mov
sub
push
not
xor
mov
test
fidiv
inc
ja
inc
jne
jne
cmp
pushf
movs
jmp
xchg
push
sub
cvtps2pd
dec
mov
dec
mov
sbb
dec
in
sar
mov
xchg
or
xor
repnz
xor
fistp
div
xor
xchg
in
js
pop
and
xchg
rcl
or
enter
inc
aam
ins
iret
loope
and
shl
aaa
or
push
push
mov
pop
int
movs
pop
or
int
xor
loopne
lock
test
cmp
int
retf
sub
into
dec
retf
and
(bad)
fiadd
fcomp
add
fsubr
xor
daa
aad
jge
fwait
loope
hlt
jmp
cwde
xor
mov
je
test
ds
inc
(bad)
out
sbb
sbb
and
(bad)
fdiv
cmc
ret
sahf
or
aad
push
push
hlt
mov
inc
in
push
xlat
push
jbe
fistp
pop
mov
add
shr
push
das
retf
jbe
mov
jl
sub
popa
add
mov
es
lea
retf
and
aam
and
adc
sbb
add
sbb
push
cmps
fisub
sti
imul
adc
mov
xor
add
loop
shl
js
pushf
add
pop
mov
inc
cmc
dec
push
(bad)
adc
pop
neg
cld
ins
sub
dec
pop
lahf
lock
adc
push
or
adc
mov
pop
lds
jb
shl
jns
push
into
int3
jo
(bad)
arpl
mov
sub
scas
xchg
mov
xchg
dec
jne
dec
or
mul
push
in
sub
sbb
movs
lock
lahf
inc
mov
movs
pop
loope
mov
call
inc
dec
or
push
jge
cmp
pop
das
neg
(bad)
enter
sti
push
outs
mov
lods
icebp
into
fst
pushf
test
out
jno
out
loope
rcr
push
sub
popa
inc
jmp
icebp
adc
mov
xor
cmps
enter
mov
retf
fsub
pop
mov
daa
loop
call
stos
inc
jnp
test
push
outs
jp
pop
out
push
cwde
mov
faddp
lods
mov
jno
rol
out
mov
nop
mov
lahf
lds
mov
nop
aam
out
gs
rol
mov
add
push
fnstenv
xchg
jbe
icebp
ja
inc
mov
mov
jmp
movs
aas
and
xor
iret
sub
dec
out
xor
push
ficomp
xlat
push
adc
adc
aad
xlat
sahf
sub
jmp
jge
or
outs
add
scas
xor
mov
xchg
call
or
cmp
push
dec
(bad)
clc
cmc
inc
out
(bad)
retf
lahf
jmp
or
(bad)
fnstsw
sar
mov
stos
adc
adc
js
xor
cmp
shl
mov
lahf
pop
push
int3
mov
or
mov
jno
cmp
lds
adc
mov
and
loopne
adc
or
ins
jmp
shl
mov
cs
pop
add
push
icebp
sahf
xchg
and
sbb
push
pop
out
test
adc
pusha
sbb
xor
mov
jb
retf
scas
xchg
jmp
jle
cmps
daa
sar
aad
adc
(bad)
sbb
daa
add
fld
sbb
inc
mov
daa
mov
push
sti
test
adc
adc
sbb
cmp
mov
mov
loopne
stos
xchg
in
or
xor
(bad)
clc
fld
mov
jmp
cmps
aam
movs
lock
mov
mov
fcom
dec
dec
jle
cmps
sbb
mov
sub
repnz
dec
push
sub
mov
jno
push
and
(bad)
mul
ret
nop
add
repz
xchg
push
add
adc
dec
fs
and
iret
hlt
jnp
inc
in
pop
sub
clc
stos
xchg
push
jno
inc
scas
jne
and
test
sti
jne
int3
in
aaa
push
test
call
sbb
cmp
cmp
push
sbb
fisttp
or
and
sub
cmp
fs
push
mov
ret
popf
rcl
xchg
mov
or
push
mov
xchg
mov
mov
gs
or
push
(bad)
and
push
ins
in
push
repz
xchg
fwait
push
popa
popf
mov
mov
dec
iret
inc
ret
movs
push
mov
lds
inc
and
lahf
inc
xchg
aam
test
fimul
adc
das
sbb
outs
push
xlat
scas
jmp
and
icebp
mov
sahf
cmps
pop
out
in
ret
xor
ss
cmp
(bad)
test
outs
xor
add
aaa
inc
mov
add
repz
jmp
add
pop
scas
loop
push
imul
test
jg
test
(bad)
enter
ss
ins
repnz
inc
or
sbb
(bad)
scas
outs
ret
ret
sub
jmp
cmp
inc
dec
jmp
sar
adc
mov
imul
(bad)
cmc
scas
ja
retf
gs
(bad)
pop
jecxz
leave
aam
push
jne
cmp
inc
lea
aaa
push
into
repnz
push
outs
jno
rcl
mov
sbb
inc
mov
sbb
test
fwait
pushaw
push
pop
push
push
jl
or
(bad)
cmp
pop
mov
jns
inc
push
js
adc
cli
dec
pushf
sbb
popf
jo
cs
xchg
call
dec
ror
sub
cmp
test
repz
xor
lock
cmp
in
test
outs
sbb
pushf
mov
sub
nop
dec
add
addr16
fld
stos
jae
gs
sbb
sub
inc
out
mov
out
add
inc
inc
mov
dec
popa
sub
or
(bad)
jb
dec
add
jge
cld
jl
sahf
ret
sahf
xchg
dec
or
aas
push
adc
leave
lods
mov
xchg
cld
scas
ror
gs
fst
inc
setnp
adc
xor
daa
jmp
loopne
ret
dec
(bad)
fs
jae
mov
pusha
pop
in
in
sbb
aaa
mov
dec
shl
mov
(bad)
in
mov
inc
jno
push
retf
out
ja
mov
cwde
and
mov
retf
mov
pop
mov
cmp
xchg
push
fistp
pop
add
sbb
pop
cwde
leave
lds
mov
dec
cmp
jmp
pop
push
and
sub
cld
int3
adc
cmps
out
stos
femms
mov
movaps
mov
out
push
lods
rcr
add
leave
xchg
pop
mov
std
sbb
clc
loopne
mov
pop
add
or
loope
cmps
imul
fist
data16
adc
mov
test
not
ss
xchg
add
out
je
jae
push
mov
loope
push
pushf
adc
dec
(bad)
mov
jecxz
xchg
push
sbb
loope
push
fld
repnz
mov
fiadd
add
movs
popf
xor
mov
or
dec
pusha
dec
(bad)
mov
add
icebp
xor
jo
jp
out
sub
and
or
das
out
(bad)
mov
inc
inc
arpl
sub
pushf
test
dec
mov
mov
test
dec
pushf
jne
push
sbb
add
sub
imul
adc
push
inc
fisttp
rcr
mov
aas
inc
inc
adc
xchg
sub
mov
push
xchg
sbb
cmps
mov
pop
ds
movs
mov
xor
sahf
ds
(bad)
jmp
push
cld
hlt
sbb
jl
cld
push
cdq
(bad)
int3
pop
aaa
xor
(bad)
test
mov
adc
test
pop
fst
xchg
stos
xchg
je
ret
mov
je
adc
jmp
sbb
and
sub
das
pop
in
call
(bad)
iret
sub
or
sbb
mov
(bad)
clc
dec
fmul
jmp
or
int3
push
jb
retf
pop
test
inc
adc
fwait
push
add
lds
retf
inc
dec
(bad)
jno
add
cmp
fwait
scas
mov
mov
cmp
dec
fisub
cwde
and
lds
jns
jmp
test
mov
mov
or
fnstcw
inc
addr16
ror
or
shr
jg
sbb
je
test
mov
(bad)
mov
adc
mov
lahf
in
jo
and
dec
(bad)
test
push
sub
dec
enter
push
dec
sub
xlat
xor
bound
sbb
nop
inc
inc
(bad)
ds
add
jmp
rol
adc
xchg
sbb
aas
fstp
mov
add
(bad)
or
pop
adc
aad
mov
cmp
mov
test
rcr
and
(bad)
pushf
test
daa
lock
mov
test
(bad)
xor
rol
ficom
std
dec
pop
cmp
add
or
pop
in
ins
dec
adc
dec
push
dec
ins
outs
xchg
in
mov
fadd
cmp
pminub
sti
mov
aad
ins
lods
xlat
ja
mov
scas
rcl
pop
xor
out
push
arpl
ins
sahf
in
fidiv
das
mov
inc
jnp
in
dec
cmps
in
ds
mov
pop
pop
call
pop
and
pop
ficomp
mov
test
lods
add
or
rcr
nop
cmp
cld
mov
mov
loope
xchg
les
(bad)
(bad)
jne
lahf
jmp
adc
mov
das
sub
jo
fsubrp
mov
xor
or
es
add
imul
ret
and
imul
mov
mov
rcl
mov
cs
push
inc
jns
fdiv
aas
sbb
test
addr16
mov
sbb
(bad)
push
adc
inc
(bad)
out
sbb
icebp
inc
add
inc
pusha
xchg
inc
inc
or
cli
mov
adc
push
fst
(bad)
mov
mov
ja
loopne
sub
pop
dec
push
test
jp
(bad)
and
out
xchg
mov
sub
or
aam
sar
xchg
enter
mov
pushf
rcl
nop
adc
iret
aaa
pop
int3
pushw
ret
into
pop
retf
mov
and
ja
and
push
cli
popa
inc
cmps
jmp
ret
adc
and
or
or
mov
inc
jbe
jno
sar
jae
or
jg
inc
dec
xchg
pop
(bad)
aad
adc
ror
fild
lea
add
inc
jmp
jle
jl
mov
mov
arpl
fcmovbe
push
aas
movs
ss
xchg
cdq
fcmovu
lea
sub
sbb
(bad)
fsubr
adc
cmp
dec
xchg
dec
fwait
cs
stos
pop
loop
test
jp
stos
dec
inc
jmp
ja
jns
fs
jle
inc
(bad)
outs
jge
sbb
loopne
jl
mov
xchg
or
and
lods
and
pop
jb
sbb
adc
icebp
xor
cmp
xor
mov
or
cmc
shl
ins
ror
call
lock
add
sti
sahf
adc
inc
es
mov
or
scas
dec
jae
in
fmul
mov
cmp
mov
push
pop
lock
sete
lds
pop
sub
add
xchg
pushf
and
setbe
imul
out
sbb
retf
inc
mov
ja
rol
lahf
fnsave
fsub
lea
cli
in
stos
repz
mov
dec
mov
ins
adc
int
add
mov
xchg
push
scas
movs
jle
jl
out
add
jne
jns
rcr
pop
inc
cld
pop
mov
scas
adc
push
pop
pop
dec
clc
adc
mov
cmps
mov
call
loopne
shr
mov
pop
fbld
hlt
sub
xchg
cmps
call
addr16
loop
in
mov
call
mov
(bad)
xor
(bad)
push
shl
lock
sub
mov
push
and
mov
and
pop
push
adc
cmps
sbb
dec
pop
movs
aam
cmp
and
xchg
ins
scas
mov
pop
test
xlat
cmp
cmps
dec
mov
mov
stos
jmp
out
sbb
push
pop
jg
fwait
mov
sub
test
xchg
pop
pop
test
jae
adc
lock
scas
sti
xor
(bad)
aas
ficomp
cmp
dec
jmp
or
imul
fcmove
mov
sbb
stos
sub
popf
pop
lock
push
mov
sbb
xchg
test
mov
dec
push
mov
mov
sbb
ror
test
repnz
movs
(bad)
adc
mov
fidivr
imul
inc
sub
xchg
push
call
aas
xchg
mov
addr16
or
int3
mov
cld
pop
or
std
not
add
or
xor
dec
dec
mov
retf
push
mov
pop
pop
outs
pop
mov
add
out
fdiv
jne
daa
icebp
int
xchg
call
xchg
and
xor
pop
pop
mov
lds
frstor
push
(bad)
(bad)
mov
add
pop
scas
xor
shr
mov
jle
and
fsubr
repnz
pop
and
xchg
movs
push
and
jmp
or
mov
pusha
inc
cmp
xchg
push
adc
stos
and
xchg
mov
mov
jge
mov
fbld
xchg
sahf
sub
fdiv
xor
mov
mov
push
xchg
mov
out
mov
fs
into
call
inc
pop
imul
mov
lea
adc
adc
cld
icebp
dec
mov
xor
sub
mov
mov
or
push
mov
fmul
sub
pop
jg
sub
leave
js
adc
arpl
adc
(bad)
or
and
mov
and
and
mov
scas
out
addr16
push
fist
jbe
mov
xchg
and
dec
or
inc
fisttp
inc
xor
mov
pop
cmp
jge
ret
pusha
fcom
movs
lds
jnp
mov
retf
dec
push
idiv
sbb
mov
(bad)
push
sbb
repz
xor
lahf
js
jge
and
add
or
fs
push
add
adc
loope
imul
inc
loop
pusha
sub
inc
pop
div
ficom
mov
push
mov
pushf
jecxz
out
xchg
mov
int3
add
or
jge
push
mov
and
aas
pop
int3
add
xor
ss
pmulhw
das
mov
cs
cmp
dec
sub
std
push
mov
outs
jge
pop
sbb
push
dec
dec
int3
clc
cmps
add
xor
xchg
ror
pop
or
lods
scas
jno
push
push
jb
test
(bad)
sub
mov
adc
mov
dec
and
rcl
xor
sbb
retf
sbb
push
push
test
and
jp
dec
ret
inc
mov
aas
stos
iret
in
inc
loope
adc
push
in
in
inc
push
jmp
js
jl
push
jecxz
fisttp
inc
mov
aaa
xchg
gs
(bad)
(bad)
and
mov
sahf
lock
or
inc
push
xchg
xchg
push
mov
add
or
sbb
nop
pop
repz
adc
xchg
addr16
xor
cmc
or
daa
test
xchg
out
and
cmps
in
imul
mov
repz
ret
sar
ja
jnp
clc
mov
and
push
ins
clc
add
sti
jmp
shl
cld
push
pop
std
inc
jge
in
inc
mov
scas
jecxz
ucomiss
js
shl
repnz
lea
jmp
mov
(bad)
mov
add
(bad)
iret
push
movs
inc
inc
jecxz
cmps
lahf
sub
pop
xchg
add
mov
add
and
inc
scas
fidiv
outs
sbb
cmp
(bad)
add
rcl
jmp
sub
add
push
stc
sub
loope
addr16
cmp
jl
test
push
dec
and
lea
rol
pop
mov
test
or
mov
or
push
push
retf
and
cmp
add
test
cmp
xor
out
lock
outs
xlat
xchg
cmps
xchg
jo
fsubp
std
pop
stc
pop
(bad)
ja
jb
sub
idiv
test
int3
call
cmps
fst
clc
sub
cdq
inc
add
stc
mov
(bad)
lahf
fnsave
addr16
cs
add
jp
stos
and
pop
inc
sub
aam
and
fwait
pop
mov
test
icebp
clc
rol
stc
mov
retf
mov
dec
cli
ins
mov
rol
test
outs
ret
push
xor
adc
(bad)
aam
loop
cmp
dec
cs
xlat
in
ins
sti
ss
std
mov
jns
rol
repz
pop
loopne
movs
imul
rcr
add
hlt
ds
pop
cmp
push
(bad)
out
cmp
cli
xor
into
adc
enter
push
adc
in
neg
add
jne
call
sbb
retf
(bad)
and
in
sub
push
sbb
pop
stc
mov
repz
enter
sub
pop
test
lods
push
fs
cwde
push
retf
jns
mov
mov
ins
mov
and
dec
inc
cmp
xor
add
inc
or
jmp
movs
add
(bad)
das
repz
mov
loope
shr
or
add
xor
and
sub
push
mov
push
sub
sub
call
ret
cmp
nop
in
mov
mov
sbb
popf
or
adc
or
loope
dec
xchg
fisubr
push
xor
xchg
int3
sub
mov
repz
adc
fwait
mov
jo
adc
dec
adc
stos
mov
imul
adc
xchg
es
data16
bound
mov
lea
test
xlat
sbb
adc
sbb
in
shl
sub
xor
jmp
mov
and
mov
into
or
pushf
mov
stc
and
retf
cmc
movs
push
sbb
test
jle
push
arpl
pop
mov
or
dec
or
add
bnd
rcl
nop
mov
and
xlat
cdq
adc
xchg
mov
rcr
les
repz
cmps
jecxz
xor
push
push
cmp
int3
jae
pusha
sahf
lds
adc
stc
jbe
aaa
or
jg
fisttp
ret
in
lock
gs
mov
dec
xchg
jmp
mov
and
xor
je
inc
push
push
sub
cmps
je
or
and
mov
fmul
or
xlat
jecxz
jne
(bad)
int
movs
sub
pusha
cdq
and
cld
xlat
pop
pop
dec
inc
push
push
loopne
pop
mov
jmp
jge
cmp
add
fstp
pop
sub
scas
call
dec
xor
sub
(bad)
and
cmp
and
fwait
add
lahf
je
cmps
jo
add
cmp
jne
pop
cmc
(bad)
xchg
mov
pop
leave
sbb
in
dec
push
push
mov
adc
mov
jle
cmp
adc
aas
add
sub
xor
sbb
into
scas
sub
jns
jo
daa
ss
push
add
xchg
mov
dec
xchg
mov
pop
das
sub
cmp
sbb
dec
mov
movs
mov
(bad)
xchg
repz
fldcw
jae
cmp
pop
push
div
sub
rcr
out
shl
cs
sub
and
int3
ins
leave
(bad)
push
add
out
pop
cmp
loopne
outs
cmp
aam
dec
bound
add
push
inc
xor
jbe
xchg
or
push
sub
mov
adc
mov
cmc
repz
ins
or
mov
push
jae
mov
fisub
mov
jecxz
cmp
out
and
cmps
push
and
sar
iret
push
xor
cmp
dec
in
nop
fwait
xchg
movs
cmc
mov
lods
jne
jbe
or
test
rcl
ins
mov
sub
fsub
mov
xlat
pop
sbb
in
pop
cld
icebp
ret
pop
jg
jo
xchg
pop
push
and
push
cmps
xchg
movs
xor
adc
out
pop
mov
test
cmp
out
mov
dec
test
or
add
shl
ret
test
push
mov
ret
xor
aam
mov
mov
cli
jl
cmps
dec
imul
mov
das
mov
outs
shr
fs
or
mov
cmp
xchg
out
nop
xor
mov
pop
lods
mov
jecxz
mov
jo
dec
shl
(bad)
fsubp
pop
inc
or
sbb
add
dec
mov
into
aam
(bad)
push
push
(bad)
cmp
pop
fsubr
mov
enter
dec
lock
data16
pop
mov
xchg
cmp
cmp
fcmovb
(bad)
adc
dec
push
out
call
push
jne
(bad)
imul
test
popf
in
movs
pop
sti
fadd
push
outs
imul
mov
xchg
add
sbb
and
and
es
pop
or
es
popa
sub
retf
into
cld
hlt
js
sbb
jnp
pop
addr16
xchg
daa
jne
cmps
mov
ja
addr16
retf
loop
arpl
xchg
les
xor
call
fadd
dec
or
ins
cmc
cmp
xchg
xchg
(bad)
push
test
(bad)
dec
adc
lock
addr16
xor
adc
or
or
jb
push
retf
sub
jmp
pop
mov
inc
cmp
test
xor
sar
sbb
je
das
leave
aam
out
aas
push
neg
add
add
dec
aad
sahf
sahf
jbe
pop
js
push
xchg
std
mov
and
or
mov
jmp
push
mov
fadd
(bad)
pushf
ja
cmps
es
into
sbb
shl
ins
sub
aaa
mov
xchg
push
ret
sar
xor
das
xchg
cs
adc
push
fild
lock
pushf
imul
xchg
inc
xchg
jmp
pop
xchg
test
pop
dec
jb
dec
cs
xchg
jle
push
xchg
jmp
mov
mov
ss
(bad)
add
outs
jae
test
or
sub
jne
mov
ja
aas
mov
sbb
add
or
dec
outs
lds
sar
cmp
ins
add
mov
popa
xor
enter
push
je
adc
scas
stc
aad
xlat
push
dec
les
jecxz
xchg
xor
jmp
out
push
inc
xor
mov
dec
add
add
push
int3
test
mov
fadd
xor
stc
cmps
cs
sbb
mov
jge
(bad)
frstor
xchg
or
cmps
shl
imul
sub
push
xlat
outs
xchg
aad
shl
jp
cmp
xchg
or
enter
mov
jle
test
pop
jmp
retf
mov
and
hlt
test
push
mov
add
jns
or
(bad)
icebp
enter
inc
call
xchg
cs
lock
or
sar
iret
mov
inc
xor
adc
adc
inc
jno
lods
push
fidivr
enter
mov
ret
arpl
push
mov
xchg
inc
scas
xchg
cli
sub
inc
mov
fidiv
leave
enter
pop
fild
ds
imul
stos
frstor
add
cmp
xchg
retf
arpl
sub
shl
pusha
and
bnd
mov
mov
movs
mov
ins
jmp
idiv
repnz
repz
push
xor
fsub
inc
ins
std
inc
arpl
inc
out
das
sbb
sar
std
push
and
repz
mov
(bad)
div
call
loope
mov
outs
or
fstp
sub
xor
sbb
movs
dec
and
fwait
in
push
push
and
jnp
out
jbe
jne
mov
xchg
push
sub
fisub
dec
stc
jno
sub
lahf
out
adc
xchg
pop
mov
pop
xchg
not
add
mov
in
xor
sbb
out
out
clc
test
fs
ja
adc
jl
cmc
add
or
jnp
int3
xor
loop
add
fsub
xor
mov
dec
xchg
hlt
test
iret
xchg
pushf
mov
sti
es
jae
dec
out
mov
or
mov
test
(bad)
push
and
inc
mov
lds
jns
pop
mov
inc
add
or
pop
pop
jo
out
cmps
out
call
mov
fwait
push
(bad)
and
cmp
xchg
test
ret
pusha
dec
test
dec
sub
push
inc
push
or
mov
adc
(bad)
push
in
jae
add
xlat
add
retf
inc
inc
ret
pop
push
push
mov
outs
cmp
hlt
push
hlt
daa
mov
sbb
inc
jb
sbb
push
les
adc
xor
repnz
mov
lods
xchg
push
add
cmp
fldcw
popf
les
jae
cmp
les
jp
pop
sbb
gs
call
loope
jbe
ret
retf
push
daa
or
ret
je
sub
and
repz
cmp
and
or
push
pop
xchg
cmc
pop
loopne
les
xor
adc
cmp
cmp
xchg
scas
repz
push
pusha
movs
xchg
fwait
cmp
ins
call
std
mov
rcr
push
or
rcl
add
pop
cmps
jle
mov
(bad)
(bad)
jne
xor
loopne
inc
or
leave
popf
fwait
xor
jns
movs
call
pop
(bad)
jmp
mov
sbb
push
mov
dec
jecxz
and
ja
cmp
jle
mov
paddq
iret
and
adc
test
test
stos
inc
outs
aas
pushf
mov
adc
jle
mov
sahf
mov
es
icebp
sti
and
stos
mov
mov
jmp
(bad)
ror
mov
stc
lea
bound
arpl
bnd
sub
out
in
sbb
ror
inc
cli
stos
into
mov
test
sub
or
dec
pop
mov
mov
mov
adc
jp
sbb
and
adc
xbegin
mov
sbb
sti
cmp
inc
loop
test
mov
jp
les
jnp
mov
shl
stos
dec
(bad)
adc
out
bound
mov
cli
cmp
jle
mov
in
push
imul
inc
inc
jmp
sbb
xor
rcl
outs
inc
jb
dec
std
cmps
sub
mov
jo
and
mov
(bad)
mov
std
rcr
pop
adc
fst
aam
aas
adc
pop
pusha
cmp
pop
cld
inc
ss
scas
pop
aad
sbb
dec
fs
cmp
sbb
push
jb
add
push
jnp
and
jecxz
jnp
adc
int
test
xchg
push
call
pop
movs
mov
mov
das
mov
push
jo
xchg
mov
sub
mov
dec
clc
jo
pop
frstor
fs
push
test
cmp
ror
lahf
loop
call
lds
or
push
fiadd
loop
outs
pop
pop
rcr
adc
iret
ins
pop
cmps
push
loopne
mov
ret
das
mov
fst
mov
mov
and
jmp
adc
les
cmp
mov
add
into
loope
xor
pop
push
jbe
inc
test
sahf
mov
adc
xor
int3
fdiv
push
xchg
outs
pop
pop
fdiv
ss
(bad)
pop
cmp
jge
scas
aaa
sbb
sar
(bad)
shl
(bad)
shl
pop
jl
into
cmps
(bad)
cmp
fdiv
fsubr
sar
div
jp
fcomip
enter
stc
int
sbb
or
and
mov
and
data16
aaa
ret
jmp
sbb
fcmovne
xlat
stc
sbb
ins
xchg
fistp
les
repz
pop
fistp
cld
sbb
(bad)
jnp
outs
jmp
push
pop
test
in
or
imul
shl
mov
dec
bsr
push
push
push
mov
loope
int
dec
push
xchg
imul
or
aaa
sbb
sahf
xchg
pop
cmp
push
cmp
das
mov
mov
aaa
push
outs
retf
inc
ins
jl
jle
mov
in
jbe
std
(bad)
das
jle
or
into
inc
push
pop
push
outs
xor
pop
scas
sub
pop
fwait
sbb
data16
cmp
dec
and
xor
pop
xor
sahf
adc
int3
sti
push
lock
mov
adc
mov
mov
ins
das
add
xchg
mov
fcmovbe
push
sahf
not
cmps
add
mov
or
bound
(bad)
(bad)
or
pop
outs
cmp
or
mov
xor
add
cmp
push
pop
icebp
inc
fsub
sar
cs
mov
or
or
dec
in
pop
xchg
sbb
adc
jnp
leave
idiv
adc
dec
pop
xchg
fwait
scas
sub
out
dec
ror
mov
mov
jecxz
popf
cmp
or
stos
(bad)
test
jb
push
dec
ds
sahf
xchg
sub
inc
mov
popa
pusha
sahf
lds
nop
addr16
add
aas
test
sub
mov
shl
sbb
push
sub
fldcw
cmp
leave
(bad)
mov
sub
pop
repnz
daa
mov
fcom
xchg
pop
cli
test
jns
out
jg
outs
adc
jecxz
pop
repnz
push
pusha
mov
add
bound
loope
pop
int3
push
jns
js
cld
into
inc
shl
mul
mov
push
mov
daa
pop
jle
(bad)
jmp
sub
push
and
fwait
jbe
or
pop
xchg
inc
jno
push
xor
popf
add
(bad)
mov
add
push
cmps
clc
int3
shl
jle
(bad)
outs
jmp
outs
push
jb
ret
ror
or
es
arpl
xchg
cli
pop
mov
or
push
or
sub
xchg
sub
stc
cmps
cwde
sahf
lahf
pop
mov
mov
push
ror
(bad)
shl
dec
sti
cmp
sub
outs
xchg
mov
aaa
adc
rcr
daa
or
neg
or
stos
inc
and
xor
and
stos
call
call
xchg
pop
sub
int3
pop
xchg
pop
and
pop
sub
retf
cmps
(bad)
ret
mov
cmp
add
mov
mov
icebp
pop
(bad)
and
jb
stos
js
stos
sbb
(bad)
jb
add
hlt
sbb
xchg
lods
xchg
out
and
pop
fidivr
daa
cdq
out
scas
mov
repnz
push
rcl
fist
addr16
fsubr
push
sub
dec
xchg
ret
je
cmp
arpl
ss
add
sahf
and
xchg
pop
popf
retf
dec
adc
push
(bad)
mov
fmul
xor
jmp
shl
sbb
push
sahf
jge
iret
sti
loop
mov
inc
out
sub
movs
jecxz
ror
mov
mov
lods
sbb
adc
stc
jge
jmp
inc
shl
jno
clc
cmps
mov
icebp
pop
(bad)
fmul
mov
adc
sub
ins
dec
and
xchg
jp
push
shr
sbb
push
nop
daa
jp
and
inc
sbb
pop
pop
mov
ret
push
jge
jo
retf
idiv
outs
add
aad
add
dec
sbb
test
repnz
ficom
xchg
push
push
cmc
js
push
sbb
bswap
repnz
and
nop
fwait
add
cmp
retf
jmp
lea
xchg
push
and
sti
(bad)
(bad)
sbb
dec
inc
idiv
mov
das
ja
mov
sbb
pop
cs
xchg
xchg
out
test
jmp
inc
sub
xlat
pop
stos
fwait
jmp
movs
add
aas
sbb
hlt
cmps
out
stos
pushf
dec
mov
jno
icebp
iret
outs
cdq
mul
in
jbe
and
mov
sub
in
add
pop
cmp
cmc
push
gs
popf
popa
nop
das
jle
fcomp
push
sbb
fs
cmps
lahf
hlt
cdq
adc
int
xchg
data16
mov
pop
adc
ja
cmps
popa
and
imul
sbb
jnp
bound
je
sbb
in
ror
pusha
test
xchg
arpl
push
xlat
shr
and
mov
inc
pop
mov
jl
cs
(bad)
fild
in
arpl
test
ror
ror
add
add
in
bound
push
repnz
sub
sub
cmp
ss
test
lods
fistp
ds
or
les
daa
gs
jne
je
pop
ret
inc
fidivr
rcl
jnp
(bad)
push
mov
clc
fldenv
sahf
std
add
push
sub
shl
lods
pop
inc
int
es
ins
xchg
inc
or
scas
sar
repz
into
outs
lahf
jg
pop
inc
dec
repnz
dec
test
xor
add
push
cmps
xchg
inc
sbb
adc
mov
jo
inc
push
push
jns
mov
retf
pop
mov
mov
inc
popa
sbb
push
neg
dec
or
mov
pop
into
mov
(bad)
popa
fwait
outs
loopne
jmp
leave
mov
pushf
push
outs
jo
enter
jp
ret
push
out
jge
mov
mov
add
movs
mov
jp
ja
add
clc
out
inc
or
test
fstp
repz
cld
mul
js
inc
sub
es
push
push
dec
add
xchg
mov
repnz
sahf
movs
icebp
xor
rol
inc
in
hlt
xor
xchg
pop
sbb
dec
jne
enter
or
outs
mov
mov
mov
jb
cmps
lock
or
and
ret
sbb
dec
dec
mov
dec
imul
mov
xchg
aas
or
int
lock
imul
pop
aas
imul
pusha
push
mov
add
in
mov
arpl
ss
xchg
pop
pop
fild
inc
(bad)
les
fimul
pusha
popf
iret
and
pop
je
movs
sub
jae
shl
rcr
xchg
mov
mov
jl
dec
fcmovnu
out
jge
arpl
jl
push
lahf
cs
sub
mov
dec
repnz
dec
mov
cmc
cmps
gs
cmps
mov
fcmovne
xchg
mov
xor
es
jl
popa
out
in
sbb
repnz
fstp
or
jl
cmps
adc
xor
sub
pop
jp
cmp
dec
push
lock
inc
sbb
les
push
ret
lods
lods
or
jmp
mov
int3
dec
xor
push
loopne
pop
scas
jbe
ins
popa
jmp
mov
sbb
sub
addr16
test
popa
lea
xchg
inc
or
out
arpl
adc
ins
(bad)
scas
add
ss
sbb
jns
pushf
bound
mov
mov
cdq
push
adc
dec
rcr
mov
jb
stos
xchg
jecxz
out
jmp
ins
daa
pop
repnz
push
mov
push
push
mov
in
into
aas
mov
or
ins
retf
adc
popf
mov
sub
int3
cld
xor
rol
retf
imul
mov
or
bound
(bad)
mov
sub
pop
add
shl
pop
data16
mov
(bad)
in
sbb
inc
cmp
in
das
jecxz
les
jg
pop
jmp
adc
xchg
cmp
jmp
and
and
mov
mov
adc
stos
xchg
call
add
js
test
mov
ja
ret
cld
jo
in
jae
popf
enter
mov
jbe
rcl
xchg
mov
and
pop
sbb
aaa
retf
dec
rcr
add
inc
dec
cdq
mov
cmp
mov
cmps
fdivr
(bad)
call
repnz
retf
and
mov
mov
in
lock
popf
hlt
pop
push
jno
(bad)
in
mov
je
fucomip
clc
push
addr16
pop
mov
imul
cmp
dec
mov
add
mov
jp
mov
int3
out
(bad)
mov
xchg
sbb
xchg
or
div
aas
jbe
pusha
dec
and
fild
das
ins
bnd
out
inc
pop
push
mov
xor
and
adc
lds
les
jmp
jecxz
inc
push
sub
xlat
in
inc
sub
ins
push
sbb
stos
movs
mov
sub
push
mov
push
mov
adc
jbe
fucomp
sbb
mov
push
xchg
xchg
lea
jbe
lods
lea
dec
ret
jl
jbe
xor
ja
mov
scas
xor
sbb
cmp
mov
pushf
or
xor
xor
(bad)
jb
mov
test
xchg
daa
or
mov
jnp
xor
(bad)
push
xchg
retf
test
pusha
outs
ror
push
push
in
sub
add
and
ins
clc
lods
je
ins
pop
ret
inc
xchg
mov
inc
fimul
xchg
mov
nop
outs
(bad)
sbb
and
lods
cmc
sbb
cmp
adc
add
sub
jb
sahf
(bad)
sbb
ret
pop
jbe
ins
test
(bad)
das
lock
dec
pop
mov
add
nop
sbb
mov
shl
shl
inc
outs
dec
in
sub
and
out
or
outs
fadd
mov
push
stc
mov
adc
pop
loope
add
fist
mov
ret
push
xchg
mov
lea
mov
sbb
pop
cli
add
cmc
or
mov
and
xor
pusha
movs
xlat
outs
push
bound
cmp
enter
inc
pop
scas
push
inc
push
rcr
add
pusha
ficom
sub
xor
fs
in
mov
out
mov
lea
lds
jne
retf
lahf
lock
leave
adc
mov
push
dec
dec
sbb
sbb
scas
xor
mov
fld
pusha
pop
clc
sbb
loop
mov
cmp
sbb
sbb
push
xor
ins
xchg
xor
daa
adc
cmp
mov
jns
test
mov
mov
xchg
mov
add
cmp
in
test
or
pop
mov
add
pushf
lahf
xchg
pusha
leave
jmp
js
je
outs
pop
xor
mov
in
fbstp
push
scas
mov
sub
scas
sub
movs
cmp
or
pop
dec
popa
cli
js
xchg
push
jmp
out
jns
ins
mov
outs
mov
xchg
imul
call
loop
icebp
add
bound
push
and
aam
pop
adc
in
in
jp
sub
ds
mov
jmp
jle
xor
xor
push
cmps
cmp
inc
pop
gs
push
lahf
mov
test
or
pop
inc
mov
sub
test
jns
(bad)
jmp
inc
push
add
fwait
sub
add
cmp
sub
or
push
cld
sub
or
rcr
mov
rol
js
cmps
pop
icebp
out
lea
inc
add
inc
jg
jp
jb
fisubr
adc
add
ins
jl
retf
mov
mov
sbb
fmul
in
mov
push
push
jecxz
dec
stos
adc
loop
ins
(bad)
out
clc
pop
aad
mov
add
add
push
jg
ret
sti
call
into
(bad)
out
loope
jl
out
leave
stc
call
imul
call
mov
clc
(bad)
fdivr
mov
inc
mov
nop
arpl
sbb
dec
pop
stos
gs
dec
iret
adc
or
mov
mov
cli
pop
cmps
sbb
stos
nop
adc
test
iret
cwde
in
lods
(bad)
xlat
into
dec
xchg
outs
dec
cmp
inc
neg
aam
in
data16
xchg
pusha
dec
mov
movs
rol
pop
test
and
adc
popf
jbe
mov
and
in
pop
inc
mov
adc
arpl
pop
mov
cmp
test
cmp
xchg
into
mov
stos
outs
(bad)
aam
pop
sbb
daa
and
and
inc
out
loope
not
(bad)
(bad)
int
sbb
push
lock
mov
enter
aas
xor
lahf
cs
sar
mov
lock
aam
rcl
jbe
jb
mov
pop
jge
xor
stc
adc
mov
in
scas
imul
adc
push
jae
fsubr
mov
fstp
popf
sti
adc
mov
rcl
push
xlat
mov
cmp
and
mov
push
cmc
out
mov
mov
pusha
retf
sbb
xor
int3
in
ret
lahf
pushf
outs
and
enter
sbb
xor
in
dec
mov
cmps
std
div
dec
sub
test
sbb
test
bound
adc
and
mov
jno
and
sub
push
mov
mov
call
push
enter
sbb
xchg
test
mov
push
push
cmp
nop
inc
xlat
and
inc
sub
mov
dec
cmp
mov
es
sub
fidiv
ror
loopne
jbe
push
xchg
jl
out
cli
sbb
test
mov
mov
cmp
xor
shl
aam
ds
jmp
mov
mov
sub
mov
or
adc
mov
or
sub
shr
scas
out
iret
enter
cmpxchg
dec
arpl
adc
push
jle
xchg
call
ss
ins
and
repnz
(bad)
sub
lea
icebp
sub
(bad)
aas
std
push
pusha
mov
adc
cmc
mov
xor
addr16
sbb
jno
lods
adc
sub
loop
mov
ror
pop
cwde
or
jge
inc
or
int
sbb
add
out
mov
aas
pusha
retf
mov
gs
scas
je
and
rcl
mov
stos
dec
pop
pop
sub
test
xchg
sub
and
outs
fdiv
dec
imul
addr16
loopne
mov
js
pop
ds
inc
fisttp
jo
in
repz
xor
popa
sub
sti
cmp
pop
ja
cli
cmp
sub
das
dec
xor
in
ret
icebp
fnstenv
out
loope
(bad)
in
add
aaa
or
adc
fdivp
out
scas
xor
pop
and
mov
(bad)
sub
cmp
sbb
sub
jl
dec
pop
fnsave
adc
stc
lds
add
mov
push
or
pop
adc
xor
loopne
cmp
out
push
jmp
cwde
movs
shl
xchg
stc
pusha
daa
jle
daa
add
mov
aam
pop
add
cmp
shl
icebp
int
scas
jne
loope
mov
sar
movs
add
loope
pop
and
pop
add
push
js
sbb
out
hlt
retf
popf
imul
mov
rcl
lds
in
dec
fsub
mov
push
(bad)
loope
(bad)
adc
push
scas
mov
xor
(bad)
and
sub
cwde
jmp
mov
aas
mov
and
lea
lods
xlat
mov
leave
leave
push
fsubr
not
add
addr16
enter
aam
mov
pop
retf
xchg
shr
xchg
ror
sahf
hlt
ret
dec
les
and
ret
daa
retf
fidiv
mov
ret
inc
lods
mov
inc
add
hlt
fist
fld
hlt
in
outs
loopne
jge
into
rcr
push
push
sub
popf
add
int3
and
xchg
gs
ffree
nop
jnp
int3
scas
push
xor
stos
repnz
cs
jmp
jne
xchg
dec
xor
push
sub
push
sahf
add
and
(bad)
fdivr
mov
test
mov
or
ja
xor
arpl
mov
aaa
movs
mov
dec
jno
inc
arpl
mov
pusha
mov
icebp
push
pop
pop
out
add
in
ret
add
inc
(bad)
pusha
ror
mov
jmp
jbe
sbb
cmp
mov
fwait
and
mov
cmp
pop
inc
and
push
lea
mov
retf
push
test
enter
mov
cld
das
arpl
jno
push
pop
push
sub
mov
push
xor
cmp
out
data16
out
fcmovb
movs
lahf
jbe
(bad)
out
mov
adc
loop
push
bound
dec
cmp
inc
test
jns
sbb
out
and
arpl
cwde
daa
ss
xchg
push
test
fidiv
adc
es
mov
mov
cld
sahf
jmp
mov
test
pop
or
jle
ja
hlt
jmp
adc
jae
pushf
ret
ja
xchg
or
mov
ret
out
jmp
fs
gs
ins
sub
daa
test
push
ja
xchg
movs
arpl
or
not
inc
movs
clc
js
into
imul
out
jmp
inc
out
xchg
cmp
sub
in
mov
sbb
cmp
xchg
cs
mov
dec
inc
ins
outs
out
pop
or
cmp
shl
(bad)
lds
imul
and
inc
lahf
out
pop
jns
add
cwde
sub
lock
mov
or
sbb
stos
lahf
fild
ins
mov
mov
and
pop
add
dec
pop
in
pop
sbb
and
mov
mov
cmp
push
(bad)
outs
sub
sar
test
pop
pop
xor
push
shl
int
adc
cmps
je
loopne
out
dec
retf
daa
pop
mov
lea
shl
pop
dec
sub
enter
xor
jle
mov
push
push
and
dec
pop
adc
rcr
or
out
fidiv
cwde
push
cmp
adc
(bad)
fcomp
cmp
repnz
fwait
movs
mov
inc
xor
mov
in
ret
int
movs
mov
test
xor
pop
xchg
pandn
pop
push
mov
das
popa
sar
call
sbb
pop
lea
inc
in
jecxz
adc
push
aas
xchg
xchg
cmps
inc
sub
sahf
xor
sbb
xchg
add
scas
aaa
mov
shl
(bad)
pop
mov
call
push
leave
ja
cmps
clc
shl
adc
mov
mov
xchg
mov
mov
outs
es
mov
mov
test
scas
fs
mov
fild
test
mov
ins
sub
je
(bad)
push
fwait
jg
loopne
in
test
push
mov
and
add
in
shl
mov
aaa
pop
ins
push
mov
xchg
pusha
cmp
pop
or
add
dec
cmp
bound
adc
jle
jmp
dec
pop
jbe
loope
aad
jo
xor
dec
in
inc
inc
(bad)
out
mov
add
pop
icebp
into
pop
or
mov
(bad)
imul
xlat
adc
jmp
or
ins
inc
pop
push
push
or
mov
inc
jmp
mov
mov
lods
cmps
ss
es
xor
dec
jmp
inc
sub
test
mov
inc
or
pop
js
loop
movs
mov
fisttp
adc
mov
jno
mov
es
repz
fstp
inc
cmc
loopne
add
shr
stc
jl
fwait
add
fild
out
ss
mov
sub
(bad)
jecxz
cmp
or
xchg
jle
mov
push
or
movs
pop
push
aaa
xchg
sbb
rcr
shl
ins
stc
xchg
pushf
out
pop
(bad)
jecxz
inc
(bad)
sbb
push
mov
ret
ror
ss
push
xlat
push
aam
shl
cli
mov
mov
int
in
push
jne
push
call
add
sub
and
pop
jne
sbb
push
add
shl
pop
imul
inc
mov
xchg
mov
pop
mov
adc
stos
cdq
int
sub
mov
bound
jns
aad
xlat
or
(bad)
cli
cdq
mov
fld
gs
xchg
sahf
out
(bad)
push
pusha
imul
or
mov
pop
into
push
and
add
(bad)
push
mov
or
rol
ins
xchg
out
push
lods
out
aaa
push
fldenv
mov
int3
call
shl
iret
clc
mov
add
call
add
out
jmp
shl
sahf
inc
cmps
mov
movs
sbb
vpminsw
or
dec
adc
push
repz
sbb
xlat
cmp
mov
inc
daa
xor
cmp
cdq
dec
adc
push
inc
mov
xchg
in
pop
xchg
aam
mov
mov
retf
(bad)
rol
repz
or
lods
add
(bad)
(bad)
out
bnd
xor
or
ficom
outs
aad
cdq
into
inc
in
in
sahf
imul
sub
xchg
test
add
retf
ss
push
dec
ss
ror
repnz
mov
je
inc
sub
push
dec
loop
je
repz
xor
std
adc
imul
test
mov
pop
data16
sti
push
fcmovu
jns
mov
mov
les
sbb
inc
jb
out
jo
or
cmp
fwait
or
jle
outs
je
daa
inc
sahf
sub
in
aas
sub
or
imul
xor
xor
jo
mov
(bad)
int3
adc
(bad)
(bad)
and
(bad)
call
je
xlat
repnz
dec
adc
mov
dec
mov
pop
cmps
icebp
xchg
push
xlat
out
test
mov
xor
(bad)
mov
rol
retf
jo
mov
mov
(bad)
fadd
pop
xchg
test
fnsave
fcomip
fwait
pop
add
xchg
sub
jns
xor
aaa
cwde
ss
and
call
sti
sbb
shl
inc
ret
in
lea
test
sub
data16
rol
rol
and
leave
push
pop
bound
mov
push
mov
test
mov
and
push
mov
aad
xchg
inc
pop
fcmovb
shl
sbb
push
(bad)
daa
pop
inc
lods
xchg
shr
ret
dec
mov
pop
imul
inc
jo
or
and
bound
ss
pop
xor
fisub
and
out
jno
sbb
jb
xchg
fucomp
in
xchg
mov
test
xor
xchg
sbb
xchg
arpl
inc
sbb
stos
shr
sub
movs
inc
pop
or
aam
lods
push
xor
fild
(bad)
test
push
xor
(bad)
in
sbb
aam
imul
mov
shl
mov
mov
imul
push
out
mov
les
mov
sbb
retf
adc
or
sti
push
xchg
mov
push
pop
mov
xchg
pop
jg
idiv
push
mov
(bad)
adc
aad
mov
pop
loop
lds
mov
lods
and
and
sbb
xor
mov
retf
arpl
jecxz
js
outs
iret
cmc
push
in
mov
(bad)
xrelease
dec
mov
out
scas
mov
xlat
xchg
loop
mov
dec
outs
mov
in
pop
std
fs
outs
cmp
shr
sbb
movs
dec
rcl
mov
cdq
mov
jmp
imul
xchg
mov
sub
es
mov
jb
push
or
or
cld
jl
sub
mov
inc
lds
retf
push
lock
jns
jle
leave
movs
les
push
or
cdq
aaa
sub
enter
fcom
mov
pop
(bad)
jmp
push
cmp
js
enter
das
xor
scas
loope
lods
and
inc
cwde
test
clc
xor
or
jl
mov
inc
loop
dec
movs
shr
out
out
idiv
pop
xor
(bad)
pop
jg
gs
jg
mov
call
pop
rcl
or
mov
dec
in
(bad)
shr
inc
cmc
push
xor
popa
sbb
fisubr
xchg
out
lock
sbb
cmps
pop
hlt
scas
pop
mov
xchg
out
or
in
iret
std
retf
arpl
hlt
nop
push
dec
cmp
xor
aam
fwait
and
cmp
imul
pop
je
aaa
int3
xchg
push
ret
jno
bound
in
inc
push
hlt
cmp
mov
mov
pop
dec
jge
sub
cli
(bad)
shl
das
das
xlat
jl
sub
nop
pusha
jno
call
dec
vunpckhps
ror
(bad)
and
push
retf
stos
xor
adc
jnp
adc
mov
cmp
and
in
add
xchg
mov
dec
leave
idiv
and
loop
xor
mov
mov
push
lahf
mov
popf
dec
push
adc
push
push
push
pop
sbb
mov
imul
and
cmp
(bad)
les
jbe
cmp
push
xor
sbb
mov
pop
inc
sub
or
push
mov
dec
adc
mov
pop
mov
fsubp
dec
add
aaa
push
outs
jmp
(bad)
jmp
xchg
repnz
sti
xchg
in
cmps
mov
les
sbb
gs
loop
out
cmp
loope
aad
ja
sbb
(bad)
jbe
imul
adc
pushf
ret
dec
mov
mov
sub
cmp
mov
js
out
shr
xor
jno
adc
shl
adc
repz
push
inc
inc
cmp
ins
call
(bad)
scas
cdq
push
xor
push
pop
add
inc
mov
add
cld
pop
fs
ins
mov
adc
mov
jmp
aaa
cli
lock
out
daa
or
mov
jl
push
out
gs
push
nop
or
ror
aam
lock
out
repnz
retf
inc
push
shr
jmp
call
inc
int
push
fsub
mov
push
sti
jp
popa
mov
mov
push
push
out
and
dec
and
xchg
aas
push
loope
cmp
xchg
dec
sbb
mov
lea
push
icebp
rol
mov
push
retf
push
loop
add
dec
ins
adc
mov
jne
and
mov
outs
adc
jo
imul
arpl
mov
in
adc
jnp
std
adc
ja
imul
jbe
and
int3
fidiv
movs
sbb
and
pop
aaa
inc
ss
lds
stos
or
push
inc
dec
fisubr
hlt
loope
in
jmp
mov
lea
fs
jae
in
inc
clc
dec
fild
sub
mov
out
mov
and
push
popa
inc
cmp
cmc
push
aam
jno
inc
lods
pop
sub
neg
inc
ss
push
call
jmp
cmp
jbe
and
xchg
dec
xchg
or
push
bound
sar
sub
dec
jecxz
cmps
aas
int
sbb
out
scas
mov
xlat
dec
(bad)
out
add
mov
pop
neg
fadd
jl
mov
mov
test
cdq
adc
ror
movs
retf
push
or
add
inc
sub
dec
arpl
dec
(bad)
cmps
mov
jge
movs
movs
pop
add
mov
in
sub
jno
mov
mov
mov
popa
push
inc
loope
movs
call
add
(bad)
dec
inc
mov
mov
xor
rdmsr
mov
mov
movs
and
jle
outs
aam
hlt
cmp
ret
icebp
aam
inc
jecxz
xchg
clc
add
or
xchg
inc
pop
inc
and
xchg
pop
mov
cmc
pop
pop
push
mov
cmp
xchg
leave
pop
push
push
(bad)
sbb
and
cdq
imul
ds
pop
fidiv
mov
out
push
retf
sti
jnp
(bad)
fdivp
mov
dec
xor
xor
test
push
mov
aaa
mov
mov
dec
jecxz
outs
jp
in
inc
pop
pushf
cmps
cmp
loopne
fsubr
outs
mov
lea
out
les
push
push
shr
jns
mov
repnz
add
js
sub
mov
icebp
mov
clc
jp
ror
sbb
ins
push
out
inc
in
xchg
push
pop
daa
outs
add
je
jno
sub
test
jge
ja
sub
(bad)
fstp
mov
test
ins
dec
lds
call
adc
lods
push
(bad)
push
popf
test
mov
cmps
dec
xchg
lods
(bad)
cmp
in
out
adc
mov
lahf
dec
jle
rcr
inc
inc
shr
loopne
pop
(bad)
int
push
out
jmp
cmps
hlt
rol
outs
jns
jg
ror
iret
call
jbe
sub
push
out
sbb
xor
test
jge
pop
out
dec
add
sub
imul
ret
push
mov
lds
arpl
or
inc
(bad)
call
rol
sbb
cmp
pop
das
aas
(bad)
pop
loopne
xchg
shl
mov
mov
nop
ss
movs
push
sbb
imul
jg
jl
test
add
add
inc
ret
xor
jge
sub
sti
sub
inc
std
xchg
jge
fld
fld
dec
and
test
cli
sub
pop
outs
jg
enter
add
xchg
ins
aaa
mov
adc
ret
xor
pushf
call
jl
dec
stos
dec
or
mov
xchg
push
nop
jae
arpl
dec
pushf
add
fsubp
jne
leave
test
loope
not
mov
cmc
cmps
ss
test
mov
jge
(bad)
outs
sub
nop
mov
jbe
out
push
in
dec
sbb
test
popa
cmp
pusha
mov
les
bound
mov
mov
push
pop
jge
cmp
ss
rol
sub
ja
int3
mov
sti
jns
iret
add
fmul
push
mov
or
push
add
in
add
mov
sar
movs
fs
push
hlt
sub
cmp
adc
dec
mov
es
data16
call
cli
mov
(bad)
jnp
cmc
mov
pushf
xchg
mov
xchg
movs
or
scas
pop
ja
scas
adc
test
mov
jno
test
rol
xchg
fisttp
(bad)
fdivr
xchg
push
add
push
xor
jbe
xchg
(bad)
jge
fs
in
int3
into
test
(bad)
mov
fdivrp
jmp
push
and
stos
xchg
jmp
and
(bad)
mov
jg
fst
rcr
pop
cmc
push
jno
mov
adc
add
jp
(bad)
and
dec
bound
dec
pop
out
push
add
push
or
push
xchg
data16
mov
sub
aad
mov
xchg
push
xchg
cmp
repz
xchg
inc
add
into
jmp
scas
imul
jne
dec
xchg
nop
into
leave
fwait
ds
rol
rcr
mov
jb
inc
call
push
jg
cmp
inc
data16
xchg
ins
pop
aas
fcom
push
frstor
xor
xchg
and
lods
aas
jl
pop
fwait
add
and
ret
cmp
pop
jbe
aam
sbb
sub
or
mov
adc
jnp
adc
mov
(bad)
dec
jge
cmp
dec
cmp
jge
arpl
xchg
pop
(bad)
hlt
fisub
mov
pop
adc
adc
retf
xor
(bad)
retf
xor
and
xchg
int3
enter
jbe
and
rcl
int3
in
and
data16
jge
xlat
cdq
pop
icebp
in
sub
xchg
icebp
in
adc
mov
scas
xchg
scas
sbb
in
jno
push
xchg
xchg
fsubr
pop
adc
mov
rol
fcmovb
inc
in
movs
inc
and
aaa
(bad)
movs
mov
loopne
(bad)
aam
mov
repnz
cmc
sbb
sub
fsubp
call
mov
mov
jmp
dec
pop
iret
cmps
repnz
imul
xchg
adc
loope
sbb
mov
xchg
mov
and
sbb
sub
repz
jb
add
jecxz
mov
jecxz
or
gs
int3
pop
push
and
add
xor
jo
xor
jecxz
ror
inc
lea
mov
and
or
(bad)
pop
mov
cdq
ret
lds
(bad)
leave
rcl
imul
popa
cdq
std
pusha
dec
clc
lock
mov
repz
das
lods
xchg
xor
adc
retf
(bad)
jmp
and
jmp
or
leave
push
aas
sar
popf
adc
int
mov
mov
adc
in
push
and
pop
repnz
and
sub
cdq
aaa
mov
or
pop
punpckhbw
sbb
repz
add
or
lods
fisubr
out
jno
fdivr
in
or
push
push
jl
retf
aad
loopne
sbb
out
int
sbb
test
xchg
inc
dec
mov
sbb
cmc
in
jg
in
rcr
adc
or
dec
add
jle
das
mov
(bad)
lds
nop
hlt
int
in
sti
das
sub
push
push
jbe
dec
and
(bad)
pop
pushf
cmps
xchg
test
(bad)
fcmovne
dec
sbb
sbb
daa
inc
mov
inc
test
fcom
dec
push
gs
push
fldenv
cmps
call
(bad)
cmps
ret
mov
loop
xchg
add
jl
in
mov
fs
iret
mov
scas
stos
sbb
xor
mov
lock
call
dec
pop
les
sub
popf
cli
lea
in
push
aam
sub
jmp
fstp
xor
mov
mov
loop
(bad)
and
inc
shr
in
nop
mov
gs
sbb
icebp
icebp
xor
mov
or
push
out
inc
dec
(bad)
xlat
das
sbb
(bad)
cmc
add
lea
sbb
loope
or
ds
jbe
(bad)
loope
shl
sti
or
fs
dec
cmc
lods
jle
ja
aas
std
adc
(bad)
jae
inc
loope
fwait
add
call
aas
nop
ins
lods
es
cmps
hlt
mov
out
mov
ds
aas
outs
add
ins
in
sbb
adc
jnp
add
mov
pop
dec
retf
cs
adc
fisub
ret
inc
jecxz
std
sbb
sub
fsubr
mov
mov
sbb
shl
mov
pop
repz
xor
pop
sub
dec
pop
xchg
les
push
and
out
dec
je
sub
nop
mov
(bad)
repz
push
jno
jg
xchg
xor
int
lods
retf
adc
dec
push
jno
sub
in
fucomip
xor
jb
rcr
pop
xchg
push
push
mov
cmp
jae
sbb
mov
xchg
pop
or
xchg
pop
mov
dec
jne
sub
in
fwait
rcr
xchg
or
test
aaa
jmp
iret
adc
bnd
mov
sub
adc
pop
pop
ins
ret
push
fadd
icebp
lds
scas
and
cmps
imul
ins
ins
pop
loope
stos
movs
das
xor
fst
(bad)
cdq
stos
xchg
(bad)
rcr
mov
pop
adc
dec
stos
xor
sbb
pop
std
mov
cmp
call
shr
ins
inc
jne
jge
mov
push
xor
push
mov
sbb
cmps
jge
adc
aas
pop
sbb
repnz
inc
jl
jae
cmps
mov
das
popa
(bad)
mov
mov
or
push
inc
dec
sub
repz
loopne
movs
movs
cmp
mov
push
inc
sar
loop
popa
and
mov
cs
je
push
xor
cmp
xor
ss
icebp
sbb
mov
lods
sub
cmp
in
dec
dec
nop
shr
das
or
and
shl
cmp
cmp
jmp
js
mov
cmp
xchg
test
mov
lods
mov
sub
in
inc
jne
repnz
repnz
call
add
push
sub
push
loopne
jle
ins
lahf
adc
xchg
lds
dec
dec
movs
mov
(bad)
retf
ins
pop
pop
xchg
sub
mov
cmp
sbb
les
ret
mov
adc
call
repz
inc
ss
(bad)
mov
pushf
call
(bad)
in
sti
scas
jns
stc
js
xchg
aas
iret
call
mov
repz
lods
das
mov
repz
mov
lds
clc
sub
cs
adc
loop
cdq
sti
mov
inc
fdivr
pop
sbb
and
adc
gs
call
add
mov
xor
out
and
mov
cli
popa
retf
push
(bad)
sbb
push
mov
jb
leave
or
in
or
mov
mov
icebp
xchg
(bad)
clc
sub
neg
in
popf
cmp
and
adc
fld
add
jle
add
fdivr
loopne
adc
dec
inc
add
add
add
add
add
(bad)
inc
add
add
loop
clc
dec
inc
inc
pop
push
push
dec
inc
dec
dec
inc
add
add
add
call
add
add
ins
outs
je
push
inc
inc
and
pop
and
fld
add
sbb
adc
popa
arpl
add
add
add
not
add
add
add
shr
sub
cmp
scas
js
cli
in
cmp
add
add
fs
add
add
add
pop
pop
pop
add
add
add
add
push
push
inc
add
add
add
or
ins
fs
or
add
add
add
or
add
adc
push
push
inc
add
add
add
or
jne
imul
add
adc
gs
jae
add
nop
add
add
imul
add
mov
add
adc
pop
pop
pop
add
or
add
add
push
push
inc
add
add
add
or
arpl
add
fadd
add
or
jne
add
or
add
add
add
or
add
adc
jo
je
add
test
add
aaa
arpl
add
or
gs
add
add
add
add
jae
inc
inc
and
inc
xor
ss
bound
imul
arpl
gs
pop
pop
pop
and
add
add
add
add
je
arpl
jbe
add
add
add
add
add
add
sbb
push
add
add
add
add
add
inc
add
dec
add
add
arpl
push
add
jl
add
nop
add
add
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
add
jne
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
add
add
dec
add
add
jno
jp
test
mov
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jb
jle
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
pop
add
xchg
mov
lds
test
push
push
push
daa
push
aaa
push
dec
push
pop
push
push
jnp
mov
popf
push
scas
push
rol
push
jecxz
cmc
pop
pop
pop
sbb
sub
cmp
pop
je
xchg
cdq
pop
lods
pop
mov
pop
clc
or
or
or
or
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
imul
mov
enter
stc
or
or
or
or
or
or
or
or
or
or
or
inc
or
mov
fimul
cs
dec
push
fs
jg
fwait
push
mov
ror
out
wbinvd
(bad)
cmovno
pop
(bad)
setbe
mov
iret
paddsb
or
adc
popa
adc
fwait
adc
adc
adc
adc
ins
adc
call
adc
adc
jecxz
add
and
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
mov
push
es
dec
push
ins
push
(bad)
push
mov
(bad)
push
cli
pop
sbb
pop
mov
scas
pop
rcl
neg
sbb
inc
sbb
mov
scas
sbb
sbb
sbb
sbb
imul
sbb
sbb
sbb
ja
sahf
sbb
sbb
sbb
cmp
arpl
mov
mov
ficomp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jo
cdq
sbb
push
push
inc
push
push
xchg
push
mov
pop
ds
imul
jmp
and
and
dec
and
mov
and
and
and
and
and
and
and
xchg
and
and
and
and
and
and
and
and
push
and
push
xchg
mov
call
daa
jp
stos
daa
fsubr
or
sub
sub
sub
popf
sub
sub
sub
sub
sub
sub
sub
popf
sub
sub
sub
sub
sub
sub
sub
jbe
stos
sub
dec
sub
cs
das
and
pop
das
xchg
das
(bad)
das
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
fwait
xor
xor
xor
xor
xor
xor
xor
xchg
aaa
ss
scas
ss
aaa
pushf
aaa
xlat
cmp
push
cmp
inc
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
mov
aas
popa
aas
mov
inc
fs
cmps
inc
out
sub
inc
lods
inc
out
inc
xor
inc
mov
test
inc
add
mov
adc
inc
call
inc
stos
inc
lock
xor
dec
add
dec
xlat
dec
sbb
dec
lock
aaa
dec
jge
les
dec
push
dec
call
dec
mov
dec
xchg
dec
fmul
dec
outs
dec
mov
add
dec
xchg
dec
fst
push
jno
mov
push
fwait
push
out
xor
push
(bad)
push
adc
push
stos
push
not
(bad)
push
fist
push
jne
ret
push
pop
push
test
push
xchg
push
loopne
das
pop
jge
retf
pop
sbb
pop
mov
pop
cmps
pop
cmc
pop
inc
pop
xchg
pop
in
xor
pop
daa
pop
js
leave
pop
sbb
pop
mov
pop
mov
add
pusha
cld
popa
dec
popa
mov
bound
xchg
arpl
fs
fs
fs
gs
cmp
addr16
push
in
imul
dec
push
push
imul
imul
push
ins
scas
ins
or
ins
mov
outs
les
outs
js
shl
jo
jo
jno
jno
jno
jb
jb
jae
jae
jae
je
je
je
jne
jne
jne
jbe
jbe
jbe
ja
ja
js
js
js
jns
jns
jns
jp
jp
jnp
jnp
jnp
jl
jl
jl
jge
jge
jle
jle
jle
jg
jg
jg
add
or
xor
xchg
xor
push
cmp
jecxz
inc
test
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
(bad)
ss
sahf
nop
push
nop
outs
nop
(bad)
xchg
aas
xchg
test
adc
dec
xchg
mov
and
xchg
leave
xchg
xor
lahf
xchg
or
dec
cwde
mov
cdq
cld
call
scas
pushf
sbb
mov
sahf
inc
sahf
scas
lahf
sbb
mov
inc
mov
xchg
mov
out
push
movs
(bad)
movs
cmp
mov
loopne
push
test
test
sbb
(bad)
stos
add
pop
lods
shr
sub
scas
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
mov
cs
fwait
mov
or
jp
cmc
shl
shl
ret
fcmovnb
pop
ret
aam
push
(bad)
into
lds
enter
ret
mov
mov
retf
mov
ss
mov
xor
int
into
ss
mov
aaa
iret
mov
sar
mov
rol
aam
aam
aad
aad
(bad)
push
(bad)
fcom
pop
xlat
loopne
fs
fldcw
fidiv
sti
fild
fst
fst
fild
fild
loope
loope
loop
loop
jecxz
jecxz
in
in
in
out
out
out
out
call
inc
jmp
in
jo
sti
in
xchg
adc
pushf
out
sub
mov
inc
out
int3
lock
lock
jb
push
mov
sbb
cmps
hlt
xor
ret
cmc
fdivp
ins
idiv
test
cli
push
cli
out
ja
pop
cld
cwde
std
sub
mov
jmp
jmp
arpl
add
add
add
cs
inc
inc
and
xor
ss
inc
gs
jne
je
push
inc
inc
and
ins
outs
jne
and
popa
arpl
sub
inc
add
add
pop
and
add
add
add
add
mov
add
sbb
pop
pop
pop
and
push
add
add
add
ins
gs
jae
add
add
add
add
add
add
pop
and
add
add
add
push
add
add
add
add
add
add
add
add
cmp
add
add
add
add
inc
push
push
and
arpl
add
add
add
sub
jb
outs
arpl
push
imul
inc
outs
outs
imul
and
inc
and
xor
ss
add
add
pop
and
add
add
add
(bad)
add
add
add
shr
add
add
inc
outs
jo
jb
addr16
je
jb
popa
je
outs
outs
popa
ins
and
ins
outs
jb
inc
outs
outs
jae
jb
imul
xor
add
jae
xor
add
add
add
or
add
add
add
pop
xchg
add
std
(bad)
(bad)
(bad)
sti
mov
add
add
add
shl
add
push
add
push
add
push
pop
pop
push
or
adc
or
or
adc
(bad)
adc
adc
sbb
adc
push
sbb
and
push
and
and
daa
sub
sub
pop
sub
and
fild
inc
add
pop
pop
or
or
or
adc
sbb
sbb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
ret
or
rol
add
and
add
add
adc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
lock
ds
xor
adc
cdq
rcr
inc
mov
dec
nop
pop
test
into
in
rol
inc
jp
xlat
pop
retf
ror
dec
sub
outs
scas
push
cli
mov
aaa
das
sbb
js
pop
or
mov
xchg
loopne
bound
sub
imul
xor
mov
cmp
retf
push
or
call
dec
jne
lea
imul
jl
mov
pop
sbb
xlat
push
mov
lds
adc
and
sub
adc
imul
rcl
xchg
aam
push
or
nop
or
dec
outs
push
or
stos
mov
or
rcr
push
cmp
cli
mul
movs
push
imul
jge
push
push
mov
leave
ja
jge
mov
or
adc
add
sub
or
enter
pop
fdivr
lock
rcr
mov
int3
aam
push
or
mov
inc
mov
retf
push
popf
cmp
cs
pop
xchg
xchg
pop
test
inc
mov
jmp
call
or
xor
xor
and
inc
add
inc
inc
stc
fstp
ins
stc
jmp
lods
mov
jo
pop
rcr
or
stos
inc
mov
inc
xchg
push
inc
movs
rcr
jge
cli
lods
lods
je
jb
mov
push
push
pop
lahf
imul
cmc
xchg
push
je
arpl
sub
pop
adc
dec
inc
push
sub
les
ds
pop
mul
call
lds
ds
push
sub
jns
sbb
dec
dec
push
(bad)
clc
in
mov
ret
pop
imul
sbb
pop
(bad)
push
int3
(bad)
dec
mov
movs
xchg
push
arpl
sbb
or
sub
add
rcl
imul
sbb
retf
repnz
scas
xchg
pushf
std
sbb
sub
inc
jmp
lea
jmp
sbb
xor
les
scas
out
rcl
in
xor
mov
lods
scas
dec
stos
scas
cli
pop
inc
sub
fisttp
fcom
stos
inc
xor
leave
jecxz
xchg
add
dec
adc
or
mov
aam
test
pop
pop
inc
jne
(bad)
outs
ret
mov
cvtpi2ps
pop
shr
repnz
mov
ins
repnz
into
in
repz
fldcw
fld
pop
das
push
je
xchg
retf
jge
pop
sbb
call
scas
xchg
int3
or
mov
adc
push
sub
and
sub
push
pop
repz
dec
add
xor
push
mov
popf
imul
jmp
dec
dec
rcl
xchg
shr
std
aaa
ds
sub
mov
sbb
test
inc
jo
push
pop
jb
int
sub
inc
push
cmps
pushf
fidiv
jbe
inc
movs
xor
bound
sbb
dec
inc
sub
or
icebp
push
daa
dec
jmp
jae
pop
fst
sahf
add
inc
jmp
(bad)
inc
das
xor
or
stc
packsswb
neg
idiv
fstp
dec
xchg
mov
sub
pop
ss
call
ins
cmp
jle
cld
cli
mov
dec
inc
xor
xchg
xor
or
ror
dec
rcl
push
je
loopne
leave
(bad)
mov
ins
imul
(bad)
cmp
jbe
dec
dec
cdq
ret
push
test
stos
sahf
xchg
(bad)
out
jae
mov
dec
iret
aas
xchg
neg
dec
neg
int3
mov
int3
cmps
data16
mov
clc
mov
outs
push
stos
repnz
xchg
inc
dec
(bad)
mov
or
mov
nop
push
test
and
lea
pop
push
fwait
stos
adc
mov
jnp
scas
in
imul
sbb
and
xor
bnd
cs
jb
jmp
cmp
(bad)
sub
test
gs
add
mov
adc
xor
push
mov
test
xchg
pop
push
rol
rol
xor
or
pusha
sub
xchg
inc
ja
sbb
dec
adc
pushf
popf
jne
ins
in
data16
dec
sbb
mov
out
jns
imul
fwait
mov
xchg
mov
ret
test
retf
adc
div
vpminsw
fild
pop
inc
cs
and
lock
mov
enter
jl
mov
and
test
add
and
dec
pusha
xor
stos
cmps
retf
jmp
xor
lea
mov
dec
or
nop
xchg
push
push
dec
jae
stc
sti
mov
idiv
(bad)
push
jle
push
cli
jns
cmps
in
sbb
popf
pop
xchg
jg
fcomp
in
push
cmps
jnp
(bad)
stos
call
xor
xor
push
sbb
sub
test
inc
add
dec
xor
and
mov
dec
lods
sahf
or
fcmovnb
pop
jbe
les
js
and
arpl
out
cmps
daa
cmps
retf
push
lods
sbb
scas
mov
jge
inc
ins
(bad)
in
icebp
sbb
fild
jmp
cmp
jl
mov
dec
pusha
test
cmp
push
pop
or
sub
jp
pushf
scas
lahf
aas
inc
int
fsubr
mov
hlt
call
fs
nop
retf
and
or
xlat
cmp
mov
mov
mov
into
mov
int
mov
mov
push
jl
inc
cmp
cmp
aad
cdq
fld
mov
dec
clc
mov
popf
das
dec
jecxz
inc
jno
sbb
add
mov
sbb
sub
mov
add
sbb
jnp
sbb
(bad)
daa
pop
and
ret
sub
repz
out
out
test
and
sbb
daa
aaa
cmp
xor
dec
xchg
mov
jne
enter
icebp
xchg
mov
cmp
cmps
lods
int
out
leave
call
mov
popf
cmova
cmp
fldenv
nop
and
adc
xchg
(bad)
dec
push
mov
fwait
dec
push
or
mov
inc
lods
dec
mul
fsub
push
pop
nop
xor
int3
inc
stos
out
callw
je
shl
dec
pop
lods
cwde
mov
rol
int
retf
jbe
mov
shl
test
push
xchg
mov
test
pusha
xchg
inc
push
rol
mov
rol
xchg
add
out
in
jno
cld
popf
ins
and
dec
(bad)
shr
in
jbe
mov
repz
data16
repnz
ins
(bad)
ffreep
add
sbb
dec
inc
lea
jnp
xchg
mov
jbe
push
into
mov
and
xchg
mov
sbb
mov
dec
adc
mov
hlt
dec
in
fist
int3
xchg
sbb
inc
inc
or
mov
scas
mov
ins
push
fidiv
mov
mov
mov
rol
aad
jmp
mov
pop
adc
pop
aas
addr16
jns
cmps
fidiv
mov
mov
fistp
jge
outs
enter
inc
sbb
or
xor
ror
push
push
sub
push
or
sub
jne
and
jbe
(bad)
mov
xor
fwait
in
scas
(bad)
jle
stos
ror
bnd
arpl
jmp
movs
jp
hlt
test
push
sbb
jle
mov
je
repnz
fwait
mov
arpl
scas
into
sbb
cwde
push
cmc
fcmovb
imul
ret
dec
xchg
fistp
lea
or
and
push
jp
inc
pop
aaa
mov
shr
xor
ins
inc
xchg
cmps
inc
pop
pop
cmp
addr16
dec
xchg
ss
ins
jge
jns
ror
jmp
hlt
repz
push
xor
test
popf
retf
fild
pop
push
add
xchg
arpl
xchg
movs
cli
mov
iret
jnp
cmps
xchg
cmc
pop
in
and
inc
adc
or
xor
add
and
xlat
add
dec
data16
dec
lea
das
addr16
movs
mov
lahf
ins
xchg
(bad)
(bad)
push
mov
ins
pushf
std
jl
push
clc
fnstsw
int3
scas
int
(bad)
cmps
xchg
inc
rcl
scas
mov
cli
adc
cmp
data16
stos
icebp
dec
sbb
popf
je
in
fwait
retf
jle
push
lahf
movs
int
popa
cmps
inc
inc
out
jno
(bad)
aam
shl
popa
movs
or
add
dec
and
ds
retf
ja
xchg
out
scas
jmp
pop
je
(bad)
(bad)
jbe
aaa
adc
retf
cmp
push
stos
pop
sub
inc
mov
add
ror
(bad)
push
loope
sub
stos
pop
adc
fisubr
aas
aas
dec
or
pop
xor
mov
pop
sbb
inc
mov
cmc
push
shl
inc
add
mov
add
jmp
jp
pop
int3
std
stos
hlt
iret
mov
stc
xor
int3
mov
stc
adc
lea
mov
mov
jmp
mov
xor
lock
out
mov
out
jns
stc
mov
imul
dec
retf
push
inc
sbb
xchg
aam
(bad)
dec
scas
jle
xor
enter
sub
and
add
enter
ja
fsub
jmp
pop
mov
out
stos
jne
dec
cwde
aad
arpl
(bad)
push
inc
sub
jno
cmp
pop
mov
sub
jns
jne
push
lods
inc
xchg
je
fcmovbe
mov
push
enter
mov
out
retf
jmp
hlt
fdivr
mov
inc
aam
test
sbb
add
push
pusha
rcl
push
retf
mov
cwde
outs
iret
pop
fidiv
call
sub
push
adc
div
imul
push
retf
shl
adc
ret
out
loopne
bound
push
add
or
std
push
jge
mov
mov
shr
jae
jl
div
std
adc
inc
push
mov
test
nop
mov
inc
loopne
dec
mov
loope
cmps
scas
into
outs
xchg
sbb
jne
sbb
ins
or
mov
mov
scas
or
pop
mov
retf
jmp
mov
sub
pop
aaa
mov
sbb
jno
jnp
xchg
scas
sar
sahf
and
jb
lock
push
add
and
pusha
add
sbb
adc
fs
or
imul
sar
push
inc
fwait
mov
aad
jge
xchg
xchg
push
out
jle
add
mov
ins
int
(bad)
imul
stos
push
cmp
jno
out
repz
lock
mov
dec
pusha
and
inc
call
push
outs
out
bound
fs
test
pop
pop
mov
data16
addr16
test
xor
inc
loopne
dec
mov
popa
mov
lds
test
sub
inc
retf
adc
xor
retf
inc
mov
repz
rcr
push
adc
xor
cmp
retf
call
hlt
das
pop
out
mov
push
and
xor
xor
adc
or
arpl
das
nop
enter
adc
and
fidiv
inc
mov
jmp
outs
shr
test
mov
sar
loope
rcl
in
pushf
sti
mov
je
sahf
outs
outs
and
lods
test
shl
inc
das
jno
xor
cmp
ss
(bad)
je
jmp
dec
ss
xor
pop
sbb
popf
xchg
(bad)
sti
imul
dec
and
ds
add
jne
cmp
jp
std
xchg
outs
sbb
test
and
sub
sub
xchg
into
out
out
in
pop
dec
fidiv
and
fisubr
push
sbb
sbb
pop
imul
rcr
cmps
push
cwde
fisttp
icebp
jle
cmp
mov
and
adc
ror
pusha
push
xor
xchg
xor
and
xchg
inc
add
loope
mov
mov
cmp
test
sahf
rcr
(bad)
mov
push
loop
test
and
adc
jbe
outs
das
dec
mov
xor
fld
shr
jmp
or
cmp
xchg
inc
rcr
stos
push
jp
push
addr16
cmps
retf
hlt
mov
ror
cmps
adc
and
push
dec
adc
add
popf
fdiv
pop
pop
xchg
mov
rcr
mov
mov
xchg
stos
xchg
(bad)
test
and
dec
sub
jbe
cmps
lods
out
int3
loop
aad
jmp
imul
int3
sbb
rol
add
or
es
add
pop
jmp
cli
mov
mov
stos
mov
(bad)
jno
push
xchg
pusha
xlat
xchg
mov
dec
adc
cmp
cmc
cmp
mov
jb
(bad)
xor
inc
or
aad
std
sub
xchg
pop
addr16
iret
fidivr
retf
xor
cli
fisttp
jge
jns
and
add
inc
or
and
add
xlat
jo
das
pop
ins
call
shl
push
jbe
cmp
inc
into
(bad)
es
cdq
rcl
pop
aas
imul
(bad)
repnz
stos
pop
stos
xor
push
fs
mov
(bad)
pop
cmp
ret
iret
push
mov
and
xor
or
inc
sbb
xor
and
add
pop
xor
stos
shr
adc
and
std
ds
dec
sub
fidivr
lods
not
cmp
fidiv
aam
les
pop
dec
rcr
pop
rcl
mov
daa
outs
test
outs
das
mov
scas
mov
mov
pop
out
hlt
icebp
hlt
fsubrp
jg
xchg
xor
mov
ret
inc
and
and
jl
pop
popf
dec
mov
fwait
stos
shr
stos
(bad)
ins
and
aam
pop
(bad)
aad
(bad)
scas
fcmovu
cmp
sub
hlt
push
jecxz
in
push
cmc
cld
mov
jl
enter
lea
cmp
popa
(bad)
aad
popa
cmp
xchg
xor
fsub
test
add
sbb
xchg
inc
add
xlat
enter
inc
adc
dec
and
out
iret
outs
in
into
push
mov
pop
int
mov
pop
imul
movs
and
ret
retf
push
cmp
cmps
push
pusha
popa
dec
in
push
pop
clc
sbb
out
mov
cmp
sbb
mov
shl
push
pop
(bad)
pop
jp
mov
mov
and
or
and
(bad)
jmp
jge
jge
jbe
aad
fisubr
shl
cmp
jo
je
pop
lahf
popf
shr
outs
addr16
scas
ror
sbb
jnp
ror
jbe
std
fimul
jmp
dec
das
dec
adc
or
add
inc
inc
inc
inc
pop
xor
mov
fld
inc
or
sbb
fcomp
rcl
stos
push
push
into
aad
push
hlt
mov
out
or
in
int
xchg
mov
mov
(bad)
and
mov
jae
mov
in
hlt
sbb
in
pop
cmps
enter
jge
mov
iret
aad
rol
rcl
repz
test
add
add
inc
icebp
dec
jns
in
scas
dec
xor
push
hlt
jp
dec
clc
push
pop
int3
pop
mov
(bad)
rcr
imul
sbb
cmps
out
jo
jl
and
test
and
ja
popf
mov
jbe
push
popa
and
and
and
adc
adc
or
stos
sub
inc
ds
jmp
xchg
(bad)
stos
iret
in
in
jmp
push
xchg
popa
pusha
mov
repnz
xchg
ss
or
add
mov
test
(bad)
adc
mov
shl
call
pop
xchg
sub
inc
out
push
stc
push
add
add
leave
cmp
call
gs
xor
or
popf
(bad)
int
(bad)
cld
outs
cmps
cdq
push
dec
int
gs
jle
(bad)
xchg
fwait
je
cmps
xor
inc
dec
cwde
bnd
push
lods
popf
scas
pop
imul
pop
xchg
(bad)
nop
mov
push
inc
and
inc
add
inc
pop
add
lods
stc
sbb
scas
out
sub
dec
mov
cmp
movs
pop
iret
in
out
imul
mov
ins
je
cwde
sub
lods
jp
sub
mov
rcr
ret
(bad)
aam
shl
scas
lahf
mov
cli
jl
mov
stc
jmp
rcl
jmp
daa
imul
stc
test
adc
sbb
xchg
jbe
mov
stos
inc
(bad)
pop
pop
xchg
cli
mov
mov
(bad)
mov
loopne
fadd
outs
pop
mov
mov
cmp
pop
push
mov
nop
lods
call
gs
fstp
fndisi(8087
ja
mov
pop
pop
or
mov
add
sbb
push
add
mov
dec
jnp
mov
adc
mov
mov
into
ds
inc
jne
sub
adc
cmp
mov
pop
gs
mov
push
sub
add
mov
(bad)
mov
sub
test
pushf
call
push
(bad)
mov
and
and
mov
or
and
stc
out
loop
xchg
dec
mov
(bad)
push
push
stos
stos
scas
push
test
das
jae
mov
cld
in
pop
or
ins
cwde
mov
shr
gs
xchg
pop
aaa
inc
pushf
fimul
jns
push
ror
sbb
mov
fcmovb
repz
push
and
nop
add
and
imul
inc
and
cmps
stos
cmp
dec
imul
or
add
jle
sbb
push
pop
jae
lahf
outs
pop
std
(bad)
pop
inc
push
push
sahf
je
or
sub
inc
pop
add
loopne
xchg
rcr
jmp
cmp
jle
pop
pop
pop
ja
push
das
addr16
push
xchg
dec
mov
in
stos
mov
sbb
sub
inc
xchg
push
jl
adc
xor
in
dec
mov
ss
cs
out
lods
cli
popa
in
lods
xlat
daa
test
mov
pop
pop
ja
mov
fidiv
lods
jmp
ret
adc
mov
pop
push
(bad)
arpl
out
push
adc
sbb
adc
and
add
xchg
dec
add
leave
add
xchg
mov
enter
sbb
jp
jbe
nop
sub
pop
(bad)
mov
jmp
mov
sar
pop
sahf
jns
cmps
dec
stos
in
aam
xlat
enter
repnz
xor
adc
jb
and
stos
mov
ins
push
pop
pop
jne
sbb
mov
loopne
je
imul
push
ja
adc
xor
inc
rcl
inc
inc
and
add
and
cmp
pop
div
and
mov
xchg
inc
lea
rcr
jbe
je
imul
ins
into
sub
mov
xlat
sbb
mov
jne
mov
enter
mov
(bad)
leave
add
sbb
add
add
add
bound
and
popa
push
and
daa
fsubr
repnz
cmps
pop
lods
mov
push
cld
pop
std
aas
sub
mov
fistp
sub
cmps
or
pop
adc
cmp
xor
push
push
inc
mov
xchg
fdivr
out
retf
cmp
cs
lds
sub
and
test
add
xlat
and
dec
mov
jb
xchg
rol
pusha
outs
rcl
je
and
xlat
dec
enter
mov
arpl
jmp
fwait
loopne
push
cmp
dec
jne
rcl
out
mov
push
ins
mov
adc
fs
mov
lods
sbb
clc
icebp
adc
add
nop
sub
push
mov
pop
(bad)
fucomp
jmp
push
xlat
pop
repnz
fucomip
jns
mov
pop
dec
loop
push
enter
mov
lods
call
mov
out
cmps
sub
outs
ins
jecxz
jp
pop
xchg
enter
and
and
and
cmps
shl
cmc
mov
into
(bad)
cld
imul
call
icebp
in
xlat
or
imul
dec
cdq
fcomp
dec
dec
cmp
cmps
push
xor
rol
outs
out
pop
addr16
pop
mov
icebp
je
push
dec
mov
xchg
enter
xor
add
or
xchg
ds
mov
add
fsub
in
sbb
retf
bound
dec
(bad)
xor
aaa
je
lods
mov
jo
adc
mov
sub
inc
pop
adc
add
daa
bound
xor
fisttp
fisttp
inc
fisttp
leave
add
ret
adc
add
scas
inc
add
cmc
clc
mov
jl
xchg
and
inc
cmp
(bad)
sar
add
jae
cs
frstor
ficomp
add
inc
cmp
mov
jmp
sti
outs
sbb
push
repz
imul
or
or
add
mov
jecxz
dec
sbb
or
adc
sub
cmp
xchg
ja
xlat
test
cmp
sti
xor
sub
mov
jae
(bad)
mov
and
cmp
push
xor
adc
sbb
scas
xor
scas
lahf
jp
mov
inc
fistp
inc
sbb
adc
jl
pop
dec
xlat
sbb
shl
jbe
push
xchg
jge
inc
out
in
ret
mov
dec
xchg
neg
pop
mov
xchg
ins
stos
sahf
ret
mov
sahf
or
jbe
xchg
cmps
pop
jbe
or
ficomp
jae
mov
push
adc
test
xor
sbb
adc
or
and
pop
inc
dec
add
add
jnp
inc
pop
dec
test
fst
jnp
out
daa
test
mov
push
mov
mov
pop
sbb
add
js
add
and
(bad)
ror
cmps
mov
shl
fcomi
leave
push
mov
or
and
enter
jp
inc
imul
mov
adc
or
ss
xchg
mov
jno
push
call
mov
fimul
push
inc
retf
mov
arpl
sbb
xchg
sbb
and
nop
adc
adc
movs
add
push
adc
pop
push
and
dec
add
and
cmp
push
mov
jge
cmc
mov
stos
test
jnp
jmp
pop
sbb
retf
xor
add
inc
add
loopne
push
lea
test
loopne
inc
fdivp
cmp
rcl
(bad)
out
ja
xor
and
and
add
ja
and
rcr
adc
stos
int
aaa
(bad)
xor
push
int3
lods
(bad)
pop
daa
jmp
jg
sbb
je
out
jmp
push
mov
mov
out
cmc
jno
in
rol
in
xchg
fisttp
adc
mov
sbb
xor
add
and
rcl
jg
or
dec
mov
test
(bad)
xor
sbb
das
das
mov
mov
add
jmp
adc
das
or
mov
call
fnsave
(bad)
mov
cmc
jo
hlt
or
xor
cdq
fwait
movs
les
outs
outs
dec
pop
jae
and
mov
and
add
pop
push
sbb
jmp
aad
inc
popf
shr
dec
in
xchg
ja
ret
loop
mov
inc
xchg
and
(bad)
in
xor
cmc
mov
dec
ret
mov
mov
pusha
mov
xor
inc
add
repnz
(bad)
pop
push
jmp
add
xor
aad
in
icebp
fstp
(bad)
sar
out
sbb
leave
call
pop
repz
sub
jmp
out
and
xchg
add
sbb
ins
ds
rcr
aad
cmp
cmc
xor
jno
xlat
out
jns
pop
mov
inc
xor
inc
xchg
inc
inc
and
sub
push
inc
mov
(bad)
dec
retf
adc
jbe
cmc
ins
stos
ficomp
(bad)
cmp
xchg
push
inc
jns
dec
out
mov
adc
cmp
sbb
cmps
imul
popa
and
inc
inc
rcr
or
and
movs
add
repnz
mov
xor
or
push
add
inc
push
scas
dec
shl
mov
aaa
call
cmp
lock
inc
fmul
cmp
out
out
sub
aam
adc
stc
jge
jge
mov
js
loop
mov
jns
mov
mov
pop
mov
and
and
xor
pop
adc
scas
mov
cmp
out
test
hlt
jns
daa
nop
sub
pushf
pusha
int
daa
jae
scas
jle
mov
mov
xor
loopne
mov
xchg
rol
clc
jge
daa
dec
aas
(bad)
retf
and
xor
dec
adc
loop
sbb
or
inc
inc
popa
adc
sub
add
repz
mov
mov
retf
add
adc
out
fs
shl
clc
jno
ror
fxch
int
pop
mov
cmp
fistp
sub
inc
pop
cmp
mov
movs
hlt
aam
(bad)
fbld
mov
call
xor
icebp
push
fisttp
inc
adc
mov
sbb
and
jmp
dec
push
or
mov
dec
jmp
mov
jmp
addr16
les
pop
xchg
aad
jmp
dec
cmps
scas
shl
jb
and
sub
push
loop
(bad)
out
cdq
sbb
mov
inc
add
push
dec
add
adc
adc
mov
add
xchg
and
ja
ret
aam
clc
mov
mov
xlat
cmp
xchg
pop
push
aaa
pop
pop
adc
pop
jne
cmp
xchg
xchg
pop
inc
pop
and
stos
push
cli
pop
mov
out
jmp
xlat
repnz
cmc
in
pop
stos
push
sub
ror
dec
and
inc
cmp
cmp
mov
mov
enter
test
or
jmp
je
test
dec
ret
mov
xor
shl
cmp
pop
fwait
enter
jbe
pop
mov
cmp
inc
push
and
ins
mov
stc
out
(bad)
and
xchg
push
(bad)
mov
and
and
mov
add
ror
and
lock
sub
cmp
movs
xor
or
push
jb
xchg
data16
out
jno
jg
aas
xchg
hlt
inc
mov
jge
jle
push
xlat
mov
sub
sbb
dec
dec
(bad)
pop
(bad)
in
jae
fsqrt
cmp
mov
cmp
jae
je
fdiv
popa
sub
imul
jp
jns
scas
mov
cs
leave
adc
and
or
cmp
mov
test
sub
outs
bound
dec
dec
pop
cmp
push
xchg
mov
mov
movs
ja
push
loopne
xorps
adc
push
addr16
retf
jge
idiv
jge
aas
test
ror
xchg
movs
test
add
adc
or
or
cmp
into
push
push
mov
add
int
bound
retf
pop
jmp
es
dec
(bad)
in
jne
pop
push
mov
fisttp
jbe
jns
retf
mov
push
and
pop
and
jmp
jb
mov
sar
jbe
stos
mov
call
leave
cmps
sbb
rep
mov
out
xor
dec
or
or
mov
xor
mov
in
inc
dec
lods
inc
lea
jp
jmp
shl
add
and
xchg
and
iret
dec
ror
mov
xchg
add
push
push
push
jbe
ins
cmps
out
pop
mov
sbb
add
push
sbb
gs
push
pusha
or
inc
push
xchg
lahf
aas
test
mov
or
xchg
retf
mov
mov
(bad)
mov
stos
dec
jle
jge
cmc
retf
sub
pop
mov
in
into
xchg
call
cmc
icebp
jge
lahf
jbe
and
fld
mov
cli
addr16
xor
inc
imul
dec
fucomp
cmp
test
jmp
dec
in
nop
inc
or
dec
mov
add
(bad)
adc
xchg
movs
imul
test
inc
call
and
leave
mov
jno
or
mov
test
fisttp
sbb
ds
jge
sbb
test
dec
or
or
or
or
and
fld
dec
pop
pop
sub
and
sub
repz
outs
cmp
sar
xchg
dec
mov
ins
pop
inc
push
jmp
mov
sub
mov
cli
out
adc
mov
pop
xchg
push
in
mov
jb
ret
movs
push
stos
in
fiadd
stc
std
xchg
or
add
or
or
mov
loop
movs
sub
adc
test
iret
aas
call
std
clc
cmp
xchg
xchg
popa
push
das
imul
loop
adc
push
push
int3
call
mov
mov
outs
sbb
push
ret
add
mov
xchg
and
popa
push
adc
mov
sub
pop
add
or
mov
or
or
push
xchg
lods
test
push
icebp
test
adc
scas
push
fsubr
lahf
cdq
mov
(bad)
mov
cs
mov
shl
xor
jne
ror
hlt
call
shl
stos
sub
mov
or
xchg
add
xor
adc
ds
sub
push
(bad)
aam
lods
inc
adc
in
fld
repz
sub
jmp
in
arpl
mov
mov
hlt
mov
(bad)
adc
imul
loop
mov
inc
retf
xchg
mov
retf
add
add
or
nop
add
push
inc
lahf
fs
xchg
fadd
dec
test
mov
fdivr
pop
jmp
adc
clc
mov
dec
out
fwait
push
test
jne
mov
shl
add
jnp
test
(bad)
ror
aaa
fucomi
out
fs
sbb
jmp
jae
hlt
pop
call
scas
add
call
and
add
inc
jg
dec
retf
cdq
gs
ror
dec
xor
cld
dec
or
std
ja
jmp
mov
mov
mov
push
cli
lods
or
fcmovb
hlt
sbb
jns
call
rcl
mov
and
sbb
and
or
add
and
or
mov
bound
pop
lods
xchg
inc
jne
sahf
scas
int3
jp
mov
mov
clc
hlt
or
out
iret
push
out
iret
das
inc
xchg
push
dec
mov
out
mov
popf
dec
out
dec
(bad)
in
dec
call
rcl
mov
mov
ins
test
leave
add
or
adc
add
seto
adc
jp
test
scas
xor
jae
fisttp
jle
fwait
mov
xchg
gs
jns
fdivr
inc
je
mov
retf
fs
repnz
cmp
ins
bound
fild
mov
xor
jp
cmps
sub
nop
imul
add
add
or
sahf
or
lahf
pop
popa
push
loopne
lds
push
scas
(bad)
scas
dec
out
sti
lock
pop
fxtract
ret
out
xor
rcl
xchg
call
scas
aaa
mov
push
addr16
je
push
push
jl
jb
xor
pop
out
inc
in
icebp
daa
movs
mov
inc
or
and
icebp
ret
push
shl
jbe
mov
lods
imul
repz
into
gs
xchg
xor
pop
rol
adc
aam
fdivr
push
cwde
and
pop
xor
inc
inc
and
sub
inc
cmp
add
mov
mov
mov
in
cmps
dec
jmp
pop
mov
scas
xor
adc
mov
jne
in
dec
mov
(bad)
sub
xor
mov
repnz
gs
push
xlat
mov
mov
arpl
push
std
adc
inc
inc
in
bound
sbb
push
add
push
sub
and
add
push
mov
(bad)
adc
(bad)
inc
mov
xchg
sub
shr
popf
mov
cmp
mov
push
pop
aad
inc
sub
shl
sti
dec
addr16
xchg
sbb
retf
dec
or
add
and
and
add
or
rcl
sub
mov
or
out
retf
cmps
mov
jne
repz
fwait
inc
dec
push
hlt
imul
jg
int
mov
jle
mov
add
and
cmps
(bad)
jne
cmc
hlt
mov
mov
dec
fist
xor
popf
and
ret
rol
adc
adc
and
ror
add
lods
pop
push
outs
dec
lahf
push
rcl
rcl
retf
daa
mov
int
add
ins
aaa
mov
dec
cmps
aaa
loope
sbb
fs
shr
mov
and
loop
and
inc
imul
pusha
xor
fs
or
or
test
xchg
scas
or
mov
and
and
xchg
jp
div
jns
lock
mov
inc
jbe
pop
pop
in
js
cdq
xchg
loope
(bad)
push
mov
inc
adc
push
aas
pmuludq
psrlw
cmp
adc
push
fcmovu
scas
dec
out
mov
popf
or
loope
and
xchg
sbb
xchg
movs
xor
push
popf
cmp
or
inc
mov
shl
hlt
mov
call
jl
mov
mov
mov
mov
xchg
in
cmp
aad
fs
test
or
adc
add
sbb
test
push
inc
test
nop
test
xor
fisttp
gs
ss
jmp
int
jbe
retf
and
in
xor
loopne
and
iret
inc
popa
fcmovnbe
into
sub
sahf
(bad)
pop
ja
mov
out
sahf
sti
outs
ins
mov
push
mov
adc
mov
or
adc
xchg
sbb
mov
and
or
sub
cmps
stos
pop
sub
or
fldcw
fstp
scas
aad
adc
pop
dec
mov
fldl2e
lods
mov
xor
add
push
push
sub
bound
rcr
or
sub
inc
adc
xchg
pop
adc
cmp
jo
arpl
sub
mov
xchg
dec
xor
jge
cmp
lahf
aaa
daa
test
mov
jmp
and
sbb
fcom
mov
mov
jnp
mov
adc
mov
mov
stos
call
cli
js
sub
mov
scas
mov
inc
dec
adc
xchg
sbb
or
add
inc
addr16
or
ins
or
(bad)
or
mov
mov
push
(bad)
mov
or
ss
sar
ja
retf
mov
aaa
mov
fadd
mov
or
sbb
inc
push
or
dec
fs
adc
inc
or
ror
(bad)
mov
mov
scas
push
js
cs
aad
out
pop
xchg
mov
in
shl
ss
add
push
popf
jmp
(bad)
mov
mov
jo
jmp
loop
int3
jbe
mov
daa
shl
mov
push
pop
inc
pushf
test
add
or
and
push
dec
fwait
inc
inc
rcl
adc
pop
enter
(bad)
je
scas
cmps
ins
sahf
inc
aaa
xchg
mov
leave
shr
gs
or
ss
movs
(bad)
ins
mov
mov
bound
sbb
dec
add
add
pusha
mov
js
das
jnp
inc
mov
mov
retf
add
out
pop
push
pusha
(bad)
push
int
mov
pop
movs
out
jo
cmp
jmp
stos
cmp
xchg
and
xor
sbb
cmp
jmp
jmp
and
mov
xchg
pop
imul
jnp
out
popf
hlt
sbb
cs
sub
daa
mov
and
icebp
or
ja
adc
sbb
push
adc
test
jecxz
iret
rol
push
fcmovbe
frstor
dec
mov
and
inc
push
xchg
ins
adc
inc
(bad)
sub
pusha
push
add
sbb
xor
pusha
add
or
add
xor
inc
add
jb
xor
pop
xor
xlat
(bad)
sar
iret
dec
retf
arpl
xchg
mov
aam
xlat
movs
fild
pushf
popf
repnz
adc
fs
mov
aam
stc
lahf
inc
in
stc
std
and
cli
fs
fbstp
xor
mov
cmc
mov
aas
mov
add
or
push
adc
add
mov
inc
test
xor
arpl
rcl
fisubr
rcl
mov
cmp
xor
cmp
push
outs
pop
inc
push
and
imul
mov
or
adc
in
fadd
push
add
adc
inc
inc
enter
mov
adc
inc
adc
mov
add
aam
cmc
jne
neg
retf
(bad)
aaa
xchg
mov
fiadd
push
std
and
lods
mov
outs
xor
mov
and
lds
arpl
(bad)
out
mul
ror
xlat
mov
gs
push
push
mov
fdiv
cmp
outs
push
xchg
repnz
pop
movups
add
and
inc
aaa
inc
xchg
mov
sbb
inc
push
or
iret
cli
push
dec
mov
cld
mov
(bad)
add
push
in
fldcw
mov
shl
test
or
cwde
jecxz
dec
xlat
add
adc
xor
add
mov
mov
or
or
inc
test
scas
dec
push
out
int
sbb
mov
xor
push
sub
sub
pop
das
jae
bound
push
xchg
je
pop
add
repz
mov
xor
mov
sub
sub
mov
stos
fild
mov
jb
push
sub
sub
or
and
int
jp
rol
dec
mov
add
sbb
retf
cmc
sahf
pop
sub
xchg
xchg
gs
push
pop
icebp
fistp
hlt
pop
xchg
scas
outs
mov
push
lods
mov
rcr
xor
mov
mov
(bad)
sar
mov
pop
sbb
pop
retf
add
sbb
movs
add
add
sbb
dec
or
add
mov
daa
cmp
sar
sub
xchg
test
inc
sub
clc
xor
shl
inc
pop
in
cmp
dec
ins
aad
inc
ja
inc
inc
add
std
or
(bad)
jbe
pusha
bound
test
sbb
ret
push
ret
add
nop
or
push
adc
adc
push
xchg
jns
jns
ficom
jge
jecxz
in
jb
jns
fidiv
daa
shl
dec
and
adc
fwait
inc
bound
mov
pop
and
mov
mov
push
sar
scas
sbb
xchg
or
or
xchg
test
push
mov
inc
movs
mov
retf
adc
in
mov
mov
pop
rol
popf
pop
das
stos
bound
add
xchg
sub
jge
cmc
adc
lods
repnz
sbb
pusha
sub
mov
pop
sbb
cmp
push
inc
loop
cmp
xor
les
icebp
or
and
and
push
mov
jp
pop
xchg
cwde
jmp
mov
stos
sbb
add
iret
fnstcw
je
stc
out
inc
mov
repnz
add
cmps
sub
icebp
xchg
lods
mov
push
enter
inc
clc
lods
or
or
inc
iret
sub
dec
nop
xchg
enter
sbb
test
dec
sahf
pop
mov
int3
lds
and
inc
mov
mov
pop
push
test
mov
add
mov
sahf
imul
mov
pop
dec
fdivr
ds
es
jnp
mov
add
test
(bad)
adc
sbb
pop
xor
cmp
jb
dec
cmps
mov
sbb
xor
lds
sahf
test
gs
pop
push
pop
pop
sahf
pop
hlt
mov
or
inc
adc
inc
adc
les
sub
and
rcl
mov
(bad)
pop
adc
jae
and
xor
or
mov
inc
and
inc
or
sbb
xchg
push
lods
mov
and
mov
xchg
aam
cmp
add
ret
add
xchg
scas
pop
push
add
retf
rol
scas
mov
xchg
cli
pop
jb
push
jmp
sub
push
arpl
and
mov
sbb
inc
pusha
test
arpl
iret
mov
retf
repz
test
out
mov
adc
imul
ins
xchg
aad
adc
or
add
push
rcl
mov
or
xor
or
data16
xlat
or
jae
xchg
inc
adc
and
std
push
jg
add
movs
ret
xchg
cmovg
aad
aad
int3
lods
rcl
mov
add
aaa
pop
cmp
sub
pop
push
out
push
push
xlat
push
add
push
xchg
jnp
mov
sub
fild
inc
mov
sub
push
jns
and
or
push
cmps
sbb
adc
les
or
and
movs
or
rcr
mov
dec
stos
adc
and
and
mov
bound
xor
cmps
mov
mov
les
sub
add
add
add
add
add
add
add
add
adc
xor
xor
and
inc
adc
and
adc
inc
and
fiadd
or
add
add
jmp
int3
gs
mov
inc
rol
imul
outs
sub
rcr
xchg
(bad)
int
stos
popa
nop
call
rcl
mov
inc
xbegin
sbb
ins
and
xchg
mov
cwde
jmp
mov
cmps
mov
ror
mov
jbe
shl
inc
or
xor
(bad)
and
bound
pop
lea
mov
sub
mov
adc
mov
cmp
push
cmp
std
and
push
jne
or
(bad)
(bad)
jg
dec
out
adc
push
fwait
adc
cli
and
cmp
sahf
inc
inc
and
mov
popa
sub
and
jmp
(bad)
(bad)
aas
leave
shl
xor
and
sbb
push
and
jmp
in
dec
mov
push
push
cmps
adc
mov
jno
or
out
stos
xor
sub
cpuid
pushf
je
adc
cmp
data16
jp
ror
cmps
mov
int3
sbb
push
push
ins
push
movs
dec
mov
jnp
pop
push
xor
call
push
inc
mov
outs
dec
pushf
inc
adc
sub
mov
push
push
cmp
hlt
push
(bad)
sbb
jecxz
cwde
jecxz
cmp
aas
inc
push
pop
mov
and
sub
imul
jp
xchg
mov
jo
shr
xchg
or
cs
iret
push
aaa
hlt
out
push
pop
mov
data16
shl
fadd
out
pop
into
xor
push
int3
jno
aaa
sbb
mov
xchg
mov
lods
cld
jnp
cwde
xchg
mov
sbb
mov
push
out
sbb
in
push
mov
test
jae
mov
cmp
shr
or
xchg
cmp
mov
pushf
mov
jl
outs
outs
movs
ss
es
inc
sub
nop
inc
sahf
sbb
xor
pop
jno
iret
and
aas
xlat
or
and
inc
sbb
lds
out
test
pop
sbb
hlt
(bad)
les
add
jb
mov
jae
(bad)
or
repz
int
clc
sub
adc
push
dec
ror
in
mov
push
cli
jl
mov
test
mov
test
pop
imul
mov
jmp
push
push
loopne
cmp
ds
out
push
mov
inc
pushfw
jl
dec
push
test
cmp
paddusb
mov
xchg
add
jo
hlt
ja
sbb
sahf
inc
cmp
aad
pop
sub
sub
int
jo
aam
(bad)
pop
int
nop
mov
scas
cwde
int3
in
adc
(bad)
(bad)
dec
inc
xchg
jbe
data16
push
loope
call
movs
xchg
add
and
inc
sub
in
sub
and
pop
call
dec
fmul
cmps
cwde
aad
pop
cwde
fimul
mov
rol
ss
sub
sub
(bad)
into
pop
dec
xor
ins
cmp
je
ja
mov
movs
dec
sbb
xor
jecxz
mov
and
cli
(bad)
movs
cmp
jbe
cmp
(bad)
cmp
arpl
adc
lds
lds
pusha
cwde
sahf
fidiv
adc
ins
stos
or
mov
cli
adc
jno
leave
js
push
jecxz
mov
retf
aam
add
jmp
xchg
adc
xor
fdivr
(bad)
and
scas
sbb
sbb
ss
push
jne
movs
int
and
pop
dec
ficomp
dec
inc
in
test
aaa
jp
xchg
mov
jge
mov
aad
jl
mov
xor
inc
mov
mov
push
jno
retf
dec
mov
imul
jns
lds
cmp
push
cmp
repz
xor
sub
xchg
inc
fidivr
out
xor
cdq
mov
and
(bad)
ins
dec
sbb
(bad)
add
jle
mov
(bad)
push
cwde
inc
cli
adc
jbe
call
test
mov
push
je
sbb
dec
cmps
call
ficomp
out
mov
or
pop
jge
cmp
xor
sbb
xchg
pop
test
outs
fs
push
and
call
int3
inc
ins
cmp
icebp
pop
mov
cmp
nop
rcl
inc
or
fisttp
sub
add
call
dec
mov
ss
(bad)
into
sti
daa
and
dec
fmul
mov
push
js
xor
aaa
adc
imul
xchg
and
and
xchg
add
pop
pop
stos
sub
mov
in
pop
test
push
in
sar
(bad)
inc
jmp
movs
jle
popa
dec
cmps
rcr
push
clc
call
(bad)
loope
inc
sbb
leave
mov
mov
int
mov
inc
cmp
add
(bad)
dec
jge
jge
cmp
mul
loop
gs
pop
pop
xchg
call
and
mov
xchg
sub
xchg
in
lods
push
jo
and
mov
pop
stc
sub
out
retf
mov
lea
inc
cmp
xor
inc
loopne
dec
mov
jmp
jb
mov
sub
and
in
popa
mov
mov
or
xchg
out
(bad)
lods
xchg
call
xor
rcl
add
data16
add
add
call
rcl
xchg
mov
lea
addr16
hlt
dec
fadd
std
test
es
xor
sub
adc
in
test
adc
push
jecxz
in
jbe
mov
or
retf
les
xchg
sub
popa
movs
inc
sub
xchg
mov
pop
sbb
inc
in
adc
jmp
imul
in
repnz
push
sub
or
or
test
mov
jnp
cmp
arpl
gs
xchg
icebp
jnp
stos
jno
ja
push
add
or
jg
pop
imul
push
enter
dec
mov
lea
neg
inc
js
sbb
mov
dec
sbb
cmps
fisttp
sbb
mov
inc
xchg
repnz
push
or
xchg
pop
test
mov
xchg
pop
sub
inc
addr16
popa
jmp
cmps
sub
xor
pop
loop
pop
push
ja
inc
jns
js
push
in
mov
xchg
mov
mov
sub
sub
in
adc
call
sahf
cmp
inc
pop
js
das
sbb
jnp
mov
push
dec
mov
movs
je
cmps
jmp
sub
dec
or
pushf
in
pop
and
pop
icebp
push
hlt
jmp
test
push
mov
and
jecxz
stos
push
stos
popf
es
retf
mov
jo
mov
pop
xchg
ins
inc
retf
mov
mov
push
in
stc
sub
dec
jns
and
sub
imul
adc
imul
leave
test
cwde
ret
pop
xor
cdq
dec
(bad)
adc
fdivr
jl
jnp
jno
xlat
mov
push
arpl
jns
call
or
dec
mov
mov
mov
repnz
jno
jnp
sub
icebp
dec
push
out
cmps
cli
shr
popa
icebp
or
call
xchg
adc
lods
push
pop
and
adc
pop
mov
cmp
jp
mov
lea
(bad)
jnp
jmp
mov
sbb
(bad)
jne
stos
jne
mov
inc
mov
dec
scas
das
or
scas
push
repnz
daa
xor
pop
dec
(bad)
and
sbb
mov
sti
mov
sbb
hlt
(bad)
setne
mov
mov
aas
sub
call
test
gs
daa
xor
sbb
mov
(bad)
and
call
rcl
xchg
icebp
test
mov
jecxz
and
les
loopne
push
jo
icebp
adc
test
nop
ins
rcr
inc
push
(bad)
push
in
adc
mov
xor
ja
and
js
aam
push
mov
mov
mov
test
sub
pop
gs
inc
fdiv
fist
push
cmp
pop
sar
test
adc
mov
pusha
leave
jnp
js
(bad)
cmp
dec
inc
jmp
push
imul
(bad)
fdiv
add
mov
push
inc
sub
dec
aas
daa
and
push
jns
sub
xor
das
js
xchg
test
cwde
imul
int
mov
or
popf
mov
shl
mov
shl
call
adc
fidivr
fmul
loopne
cmps
fidivr
inc
jns
fst
outs
js
sbb
mov
iret
mov
shl
pop
cmps
cdq
cmps
imul
jmp
popa
bound
cmps
(bad)
cmp
or
mov
pusha
test
mov
fstp
arpl
sahf
cmp
add
inc
cmc
dec
mov
push
dec
lods
pop
scas
xchg
jecxz
sbb
retf
sub
or
not
push
fdiv
jmp
sub
out
arpl
add
es
cmp
call
lock
mov
in
lods
into
jle
pop
int3
mov
push
(bad)
aam
adc
xor
inc
pop
sbb
pop
int
pop
sbb
add
test
sbb
daa
lods
inc
ficomp
sbb
push
ret
pushf
inc
rcr
xor
in
popa
dec
popf
retf
nop
jmp
dec
(bad)
rol
enter
fwait
test
test
pop
out
and
rol
imul
or
ins
outs
fadd
cwde
iret
(bad)
sbb
(bad)
mov
cmp
push
fld
and
sbb
or
sub
mov
mov
jmp
cmc
mov
mov
mov
jp
lahf
mov
in
in
sub
rcl
outs
or
add
test
(bad)
shl
ret
push
aam
pushf
xor
lds
js
bound
pop
push
push
push
dec
stos
mov
sub
mov
xor
and
dec
xchg
inc
dec
retf
xchg
fbstp
and
lahf
mov
mov
xlat
add
sar
inc
push
mov
xchg
mov
stc
or
push
add
pop
cmps
in
xchg
dec
add
das
or
cmps
mov
xchg
or
lds
dec
imul
or
inc
mov
mov
outs
xchg
movs
mov
sub
(bad)
inc
sub
stc
cs
lahf
stos
mov
fidiv
cmp
xchg
xchg
xor
add
jle
dec
jp
not
sbb
or
sub
pop
int3
(bad)
dec
cmp
pop
mov
cmps
pusha
mov
loop
inc
sub
cmp
mov
inc
(bad)
jmp
adc
sub
(bad)
push
pop
mov
lods
jne
fldcw
mov
stos
sbb
ret
dec
aam
mov
cmp
sbb
les
leave
iret
mov
cmp
jns
mov
dec
(bad)
mov
fbstp
adc
inc
mov
xor
and
retf
jno
leave
sub
retf
dec
mov
add
push
mov
pushf
ins
pop
popf
xlat
push
stos
adc
add
jo
das
jb
ret
push
bound
dec
ins
mov
add
add
sub
sub
push
inc
and
adc
pop
xor
scas
xor
test
pop
repz
loope
aad
jno
popa
int3
pop
mov
push
pop
sub
xor
jmp
cmp
into
movs
mov
push
mov
fwait
adc
adc
loope
sbb
cmp
sbb
div
leave
mov
sar
adc
sub
and
push
add
call
dec
fsubr
(bad)
mov
ret
mov
repnz
sub
cwde
out
jns
outs
shl
(bad)
jle
jb
lock
ret
and
pop
add
cmp
mov
dec
bound
mov
cmp
pop
sahf
inc
and
mov
test
shl
popa
mov
out
scas
cli
jmp
jnp
push
call
inc
cmp
nop
in
or
xor
xlat
movs
iret
pop
xor
in
push
ja
xchg
adc
sub
dec
test
mov
sysret
adc
loope
sbb
scas
cmp
into
ror
icebp
dec
xor
ja
lds
cs
add
int3
movs
fptan
push
ret
push
mov
mov
stos
in
inc
sti
mov
push
loop
mov
ficomp
test
pop
cld
adc
shl
xor
mov
repnz
retf
jne
(bad)
dec
or
xchg
xchg
sbb
mov
xchg
dec
mov
out
xor
xchg
mov
and
shl
xchg
jmp
mov
in
adc
retf
pushf
shr
jno
jg
or
xchg
(bad)
mov
ja
loopne
add
stos
pop
sub
retf
hlt
cdq
mov
loope
int
test
sub
mov
adc
push
repz
into
adc
xor
adc
dec
loop
mov
sbb
aad
std
sub
inc
and
xchg
retf
imul
ds
loopne
mov
fnsave
push
(bad)
xchg
call
test
pop
jnp
pop
jbe
xor
pushf
es
dec
scas
xor
adc
mov
int
iret
nop
xor
or
icebp
pop
add
jge
and
(bad)
std
arpl
mov
xchg
clc
pop
jle
cmp
in
dec
stos
or
add
dec
adc
(bad)
and
jno
retf
test
(bad)
jg
jae
stos
cmps
sbb
popa
xchg
mov
inc
push
push
push
sbb
enter
aas
(bad)
(bad)
sbb
jmp
jbe
rcl
or
and
ret
inc
(bad)
std
sub
popa
fld
retf
out
add
and
dec
je
pop
cmp
push
push
call
cmps
clc
jmp
and
xor
inc
(bad)
ins
adc
xor
pop
retf
inc
cdq
adc
psubq
ret
xchg
dec
pop
sbb
jno
cwde
push
imul
movs
cmps
and
pop
sub
cwde
adc
test
xor
mov
xchg
xor
or
enter
imul
stos
test
and
cs
add
push
mov
push
inc
or
jns
lock
xor
or
inc
add
dec
mov
daa
cmp
pop
push
xchg
std
jg
jae
or
add
aaa
test
sar
test
ins
sub
lahf
pop
jns
loop
jb
mov
repnz
xchg
aas
rcr
lahf
jbe
mov
dec
jbe
rcr
pop
inc
rcl
push
dec
sub
lods
lahf
ins
je
and
cwde
inc
in
clc
les
scas
cmp
or
les
bound
xor
dec
(bad)
ss
jno
inc
pop
call
int
lea
fbld
or
or
mov
pushf
sub
jg
dec
mov
xchg
daa
xor
(bad)
push
outs
and
nop
sub
sbb
retf
adc
shl
jne
and
dec
jno
mov
test
push
ja
xor
sub
mov
nop
out
movs
xor
es
lods
cdq
fwait
inc
push
sbb
jecxz
mov
push
sbb
arpl
enter
push
enter
mov
stos
push
jns
push
jmp
or
xor
sbb
(bad)
push
in
cmp
dec
xor
and
retf
sub
mov
cmps
cli
push
leave
add
sub
adc
sbb
in
sti
sbb
xchg
pop
test
aaa
push
pop
(bad)
mov
push
pushf
retf
inc
or
adc
xor
adc
or
ficomp
cmps
leave
loop
fld
addr16
cmp
movs
cmc
adc
mov
mov
sbb
(bad)
dec
fcomi
add
stc
or
pusha
stos
aas
and
cmp
mov
or
jo
adc
in
stos
push
adc
retf
mov
daa
push
lea
sahf
movs
mov
pusha
enter
mov
push
xchg
dec
mov
daa
mov
mov
xor
inc
sub
(bad)
and
lock
xor
xlat
adc
pop
cs
adc
imul
xor
mov
leave
test
aam
push
xor
sub
cmp
std
jg
int3
dec
aas
sub
sub
ret
pop
lods
js
and
inc
or
sbb
loop
push
dec
mov
xchg
xchg
pop
test
daa
ja
dec
sub
xchg
sub
js
sahf
das
jl
jb
and
test
sub
add
inc
pop
or
lock
and
xor
pop
lahf
ds
aas
ss
pushf
icebp
sub
in
inc
test
push
adc
and
ror
mov
xor
shl
xchg
pop
ficomp
jp
loope
mov
cs
and
sbb
les
sub
mov
ror
enter
popa
loop
popa
in
ds
xor
mov
and
fucomp
xchg
pop
dec
adc
dec
bound
mov
rol
adc
movs
sahf
jecxz
or
jle
add
test
xchg
iret
out
mov
adc
call
repnz
push
out
loopne
add
mov
mov
xchg
in
stc
call
lahf
adc
mov
and
xor
mov
push
and
repnz
(bad)
dec
aaa
aas
loope
inc
push
in
ret
popf
xchg
or
sti
or
ins
cld
sbb
lods
mov
xor
xchg
std
mov
ret
(bad)
sahf
test
xchg
and
test
test
jae
cld
outs
inc
popf
cmp
xor
(bad)
popa
aas
in
inc
xchg
xchg
dec
jmp
jo
cld
xor
jo
fild
hlt
lock
stos
(bad)
and
std
mov
mov
stc
pop
inc
sbb
sbb
loop
out
inc
cmps
sti
adc
pop
jmp
mov
inc
sbb
outs
sbb
imul
sar
ret
sbb
aas
pop
cli
and
adc
sahf
mov
dec
jbe
das
push
lock
mov
popf
popa
enter
stc
pop
inc
sbb
jae
fdivr
aad
jg
ins
js
fcomp
xor
sbb
inc
sbb
xor
cmps
pop
push
loope
inc
jg
pop
aam
loope
jle
pop
les
push
jmp
push
sbb
std
sbb
(bad)
(bad)
jno
inc
fist
jge
jecxz
dec
push
mov
or
dec
pop
add
lock
add
leave
jb
pop
sub
dec
mov
leave
xchg
pop
imul
sbb
mov
lahf
mov
fisubr
sbb
out
sbb
iret
pop
dec
pop
fimul
and
or
mov
jb
data16
shl
xor
add
aaa
mov
inc
iret
sti
push
loopne
xchg
iret
inc
push
div
jno
xchg
mov
sbb
(bad)
sbb
or
xor
ja
push
mov
je
and
int3
fs
add
adc
jg
cld
xor
jb
push
ret
lock
add
and
nop
loopne
adc
imul
or
retf
rol
mov
movs
fst
pop
cwde
jne
dec
dec
and
sti
pop
imul
(bad)
aam
(bad)
jmp
std
(bad)
xchg
test
xchg
mov
in
aas
xor
outs
retf
mov
inc
mov
je
push
and
sbb
mov
pusha
xchg
test
sbb
pushf
and
ret
fdivr
xor
stc
js
loop
and
out
cmps
cmc
push
js
xchg
inc
mov
mov
hlt
mov
and
push
mov
cmp
cmp
dec
push
push
jecxz
add
fs
iret
xor
push
enter
es
mov
inc
jp
push
mov
ret
dec
sub
test
movs
xchg
mov
aad
inc
(bad)
cdq
sub
dec
push
pusha
push
xchg
add
dec
pop
aam
dec
cmp
xchg
aas
cli
test
loopne
mov
data16
xor
out
dec
inc
les
sub
xor
test
outs
aam
and
xchg
mov
mov
ret
push
push
mov
sub
lock
adc
rol
pop
sub
add
push
add
dec
push
lock
loop
inc
mov
mov
dec
call
pusha
sbb
jnp
or
pop
pop
xor
push
jno
jle
sbb
inc
movs
inc
fdivr
dec
mov
das
push
jp
push
cmps
add
adc
gs
stos
rcl
mov
(bad)
rol
stos
shl
mov
mov
call
pop
stos
rcr
dec
or
or
xchg
leave
cmp
cmp
call
mov
xchg
pop
mov
jle
push
dec
add
bound
aas
adc
push
lock
les
aaa
dec
mov
xchg
jp
pop
push
push
cld
scas
aas
sub
test
test
lods
fcomp
cmp
shl
ss
adc
inc
sbb
adc
mov
hlt
jbe
dec
pushf
inc
nop
call
lods
push
daa
pop
sub
jecxz
rcl
pop
fidivr
stc
mov
pop
and
sub
ficom
push
pop
push
xchg
jle
adc
inc
lea
repnz
ret
ja
jae
ret
mov
add
and
mov
arpl
popa
mov
in
ror
(bad)
adc
popf
fstp
out
cmc
daa
push
or
not
cmp
sbb
retf
hlt
add
sbb
in
push
mov
mov
lock
dec
or
data16
mov
jns
ror
(bad)
pusha
packssdw
xor
push
xor
test
cmp
sub
std
scas
xchg
jno
sub
mov
das
xlat
loop
xor
clc
xchg
inc
dec
push
aad
(bad)
outs
mov
fldenv
movs
and
mov
loope
imul
fisubr
lods
out
lods
test
jae
dec
push
push
les
mov
dec
es
ss
push
lock
paddw
cmp
and
pop
mov
sbb
inc
ins
cmps
add
rcr
pop
pop
outs
xchg
scas
sub
cmp
mov
lods
fsub
mov
jmp
and
push
das
sub
das
xor
dec
fist
cmp
repz
rol
sbb
and
sahf
scas
push
std
dec
sar
push
push
cwde
xchg
aad
dec
or
mov
pop
stos
jns
xchg
fcmovbe
sti
test
jge
push
fsubr
sar
or
lods
mov
(bad)
mov
add
push
push
gs
movs
dec
push
pop
aad
sub
test
jmp
xchg
les
rcl
push
stc
ds
jae
jb
or
icebp
add
je
jg
lahf
xchg
xor
add
mov
ss
mov
adc
mov
shr
mov
movs
ror
lods
ins
inc
mov
cli
popa
jnp
inc
add
mov
mov
mov
inc
push
loop
mov
add
and
call
outs
inc
in
sti
mov
push
call
xchg
jp
push
sbb
jb
inc
das
or
dec
stos
jne
repz
retf
sbb
sub
mov
mov
pop
cdq
xchg
ret
xchg
lods
or
ror
sbb
sbb
xchg
mov
dec
inc
test
push
dec
adc
pop
sbb
imul
fwait
int
or
fwait
outs
pop
mov
imul
pop
sub
fisubr
repz
mov
sbb
push
inc
inc
or
adc
inc
retf
retf
into
ret
test
or
gs
xchg
bound
or
popa
mov
not
sahf
jg
dec
shl
inc
ret
mov
mov
imul
test
(bad)
xor
movs
xchg
inc
cwde
pop
stc
push
ins
dec
pusha
out
jmp
imul
leave
jbe
test
mov
pop
xchg
pop
lea
adc
sub
popa
into
dec
xchg
or
(bad)
dec
(bad)
dec
outs
aam
xchg
sbb
sub
(bad)
div
call
shl
mov
and
dec
in
int
mov
cmp
xor
sub
inc
jg
test
add
mov
mov
in
mov
inc
lock
sbb
jl
cdq
xchg
xor
mov
jp
mov
inc
js
and
into
jle
push
retf
std
popa
out
jmp
lods
xor
xchg
push
test
xchg
cmp
xlat
xor
xor
mov
xor
inc
ror
shl
fs
dec
cmp
lods
ss
xor
xchg
out
inc
mov
jecxz
sbb
xchg
sub
push
test
adc
imul
sub
xchg
fmul
sub
movs
mov
push
mov
(bad)
ret
cmp
lea
jbe
ficomp
jmp
jmp
ss
pop
cmps
mov
js
pop
xchg
or
cmp
rcl
cmp
ret
movs
jg
movs
jae
dec
add
jns
je
sti
pop
xor
cmp
ret
jle
jb
mov
jbe
push
ss
xchg
pop
imul
(bad)
loope
xor
sub
xor
xchg
mov
jl
cmp
jno
jb
fs
cmps
jmp
cmp
jns
cli
cmps
mov
cmps
rcl
push
in
or
cmp
and
xor
mov
add
loope
dec
xor
mov
aaa
data16
cdq
inc
repnz
leave
(bad)
mov
mov
mov
aam
je
jmp
sbb
jb
bound
mov
mov
test
mov
add
retf
and
pop
mov
sahf
cmp
add
pop
jl
test
ror
jge
lds
dec
ror
inc
sbb
ret
push
cmp
mov
push
in
jmp
pop
mov
xor
dec
and
cmps
aam
icebp
gs
and
mov
xchg
add
or
mov
arpl
mov
mov
fldenv
mov
jg
sbb
(bad)
push
xor
test
jp
inc
jno
loopne
cmp
pop
test
cli
mov
adc
imul
xchg
mov
jo
rol
popa
xchg
inc
repnz
sub
jp
das
lds
aad
fucomp
ficom
out
(bad)
cmp
add
in
adc
push
clc
inc
rcr
pop
int
ret
rol
dec
jno
ror
mov
mov
mov
push
dec
ror
sbb
pop
cmp
test
lods
jbe
pop
dec
repnz
sbb
(bad)
sbb
push
mov
xchg
in
xor
dec
dec
pop
cld
inc
push
rep
mov
mov
cli
adc
pop
retf
gs
mov
imul
sbb
lock
imul
into
ja
or
call
jno
clc
push
sub
repnz
mov
std
add
xor
hlt
push
and
imul
adc
int3
pop
mov
fistp
jl
shl
xor
(bad)
in
mov
retf
(bad)
sub
cdq
inc
aas
and
loop
push
xchg
dec
ret
ret
std
add
iret
jmp
mov
gs
mov
xchg
xor
mov
les
jae
cmps
clc
call
mov
adc
and
push
mov
ja
jmp
jne
fisubr
cmp
nop
cmp
(bad)
pop
stc
ror
pusha
retf
jne
dec
and
jl
push
in
push
js
cmp
loope
add
inc
pushf
das
sub
test
dec
mov
pop
mov
scas
adc
ret
fabs
xor
mov
stc
pop
ins
or
xchg
xchg
ds
push
rol
inc
xchg
mov
pusha
imul
xor
repz
cdq
test
mov
shl
retf
stos
mov
call
mov
fwait
dec
jl
leave
hlt
sub
or
loop
call
dec
dec
xor
test
jecxz
adc
nop
jge
ds
ds
jl
and
adc
adc
shr
mov
mov
or
mov
mov
in
shl
gs
mov
inc
inc
cs
add
pop
jl
out
jnp
mov
(bad)
ja
cmp
inc
sbb
idiv
mov
iret
jmp
scas
in
dec
dec
push
clc
cmp
push
pop
rol
adc
nop
aaa
daa
jl
in
sti
je
pop
and
add
aam
ja
in
inc
ret
scas
nop
inc
add
sbb
out
cmps
mov
jl
cs
sbb
pop
and
lods
jae
pop
xor
jmp
jg
mov
mov
ror
pop
fmul
pop
std
(bad)
cs
or
fisub
add
loop
icebp
jmp
jge
add
or
inc
xchg
sbb
jae
dec
shr
rol
arpl
fisubr
push
adc
xchg
pop
popa
int
(bad)
lods
jp
jb
call
aad
and
aam
or
arpl
retf
mov
xchg
mov
mov
stos
sbb
sub
add
sbb
aad
push
jns
dec
mov
hlt
mov
sahf
fwait
dec
in
(bad)
and
jae
and
add
repnz
addr16
cwde
add
add
push
(bad)
xor
lds
retf
aaa
xor
jmp
shl
add
call
or
jmp
xor
aaa
push
cmp
xor
jg
dec
add
cld
and
(bad)
mov
stos
in
call
mov
mov
scas
sbb
jmp
push
adc
(bad)
cmp
add
fcomp
rcl
or
sub
je
sub
or
push
sbb
loop
or
js
cwde
jbe
xor
out
stos
pop
scas
rcr
cmp
fwait
mov
in
jmp
push
idiv
mov
and
add
xchg
js
xlat
cwde
gs
mov
sub
cmps
retf
push
adc
add
xchg
add
push
test
leave
fnstcw
jo
clc
(bad)
aam
sti
ins
dec
cli
out
xchg
repnz
jmp
ret
nop
imul
mov
out
sahf
frstor
sbb
ins
push
push
adc
inc
sbb
or
mov
das
(bad)
js
test
push
add
scas
fst
and
mov
pop
jmp
mov
sar
inc
shr
cmps
int3
outs
sbb
sbb
jae
or
jmp
aaa
inc
adc
pop
out
adc
imul
lods
loopne
or
test
ins
push
stos
push
cmps
sbb
add
jbe
dec
aas
adc
push
mov
pop
xor
int
mov
mov
iret
add
inc
mov
xchg
mov
imul
cwde
sub
push
push
and
clc
push
inc
cmps
or
push
dec
aas
or
call
popa
push
nop
jg
in
push
call
js
pop
and
inc
mov
and
adc
jno
cdq
arpl
push
push
lea
clc
push
pop
out
cli
clc
jp
movs
xor
pusha
xor
sar
ds
call
jecxz
sub
and
sub
cli
idiv
sub
xor
(bad)
push
popa
clc
int3
xor
ror
adc
or
fdivr
(bad)
mov
xchg
cli
mov
mov
or
xor
jmp
dec
fs
jns
lock
fidiv
out
neg
or
mov
mov
ret
or
lea
repz
push
stc
inc
repz
xor
jne
fisttp
or
dec
xchg
add
out
les
leave
enter
adc
out
dec
jne
aam
sub
test
repnz
sahf
pusha
mov
mov
ror
cwde
sbb
sbb
out
jecxz
xchg
cmc
loop
mov
pushf
hlt
scas
pop
xchg
dec
pop
mov
pop
ror
loopne
hlt
add
xor
in
cdq
jecxz
ds
mov
lahf
fsub
in
push
enter
add
lock
loope
or
inc
in
push
mov
push
sub
pop
pop
bound
dec
js
push
mov
pusha
pusha
popa
adc
lods
add
std
sbb
xor
jb
test
cwde
and
lock
or
int
out
(bad)
repz
outs
push
inc
mov
leave
push
stos
sbb
lock
add
xchg
xchg
pop
push
cwde
dec
inc
xchg
in
retf
adc
add
sub
(bad)
das
cmp
push
(bad)
std
push
mov
ret
pop
dec
cmps
cli
xchg
and
or
cwde
or
test
test
fld
pop
call
mul
fcomp
xchg
jb
pop
cmp
push
ret
sub
jp
cli
pop
jnp
cmp
push
pop
(bad)
sub
mov
sub
mov
sub
push
and
sub
pop
fcomp
jecxz
sbb
push
stc
add
pop
repnz
mov
dec
hlt
or
shl
pop
loope
pop
sahf
mov
cli
cmps
jecxz
out
ret
jb
push
dec
pop
add
sub
ins
push
(bad)
data16
dec
std
pop
cmp
jne
jl
or
stos
sub
ss
loopne
jmp
lods
sbb
sbb
outs
gs
sbb
xor
pop
repnz
ins
scas
pusha
outs
mov
mov
ins
not
lods
dec
jecxz
cmc
pusha
mov
dec
mov
arpl
sbb
dec
xchg
lds
cmp
shr
mov
sar
jbe
pop
ins
jns
adc
leave
push
jo
jmp
jmp
fild
and
pop
imul
cmc
pop
in
mov
js
test
gs
cmp
inc
mov
shl
pushf
pop
ins
mov
shl
inc
sub
shl
stc
cwde
cmp
js
dec
das
push
call
ds
dec
cld
push
jmp
xor
cmc
clc
retf
mov
pop
jecxz
pop
pop
rcl
ror
daa
jecxz
sbb
add
fld
jp
icebp
push
xor
in
dec
pop
jle
inc
xor
cmp
mov
cmp
add
xor
arpl
jno
jmp
or
or
pop
pop
jge
out
out
das
add
retf
add
je
sbb
add
lock
jns
jns
jl
das
(bad)
pusha
cmp
jl
xchg
clc
das
cdq
adc
call
push
les
adc
add
add
add
add
add
add
add
add
add
add
adc
and
and
inc
inc
adc
xor
(bad)
fiadd
or
add
add
add
cmp
mov
xor
cdq
sbb
sbb
pop
dec
inc
cmc
cmps
lahf
inc
fild
je
rol
mov
jmp
or
ds
mov
(bad)
repz
adc
hlt
ret
mov
mov
sub
push
or
mov
lds
das
dec
xor
and
adc
sub
mov
pop
adc
and
loope
icebp
sbb
pop
pop
call
dec
test
int3
inc
test
pop
push
lahf
cmps
lahf
or
inc
push
inc
jecxz
cmps
ins
pop
hlt
inc
push
nop
mov
pop
mov
cmp
imul
xchg
nop
fimul
call
inc
out
test
sbb
lock
mov
and
sub
sub
bound
xor
fisttp
fcmovb
push
or
cld
push
pop
adc
iret
call
mov
leave
sbb
or
push
aad
jne
call
nop
mov
and
cmp
mov
xchg
call
shr
scas
sub
lea
jg
and
cmp
mov
or
sahf
push
pop
cmp
jmp
loope
xor
loope
mov
or
adc
leave
pop
(bad)
in
ret
fwait
hlt
mov
mov
xchg
out
xchg
mov
jl
cli
cs
xor
jb
lock
pop
cmp
and
mov
xchg
or
push
sbb
enter
sbb
stos
arpl
mov
retf
lock
test
mov
mov
inc
jbe
jl
jno
in
jmp
cmps
lock
xchg
xchg
jge
mov
xchg
mov
cmps
mov
popf
cmps
dec
push
sub
into
mov
pop
test
xchg
and
fist
xchg
std
adc
mov
outs
std
sub
out
lock
pop
scas
and
xor
test
test
inc
push
in
nop
movs
sbb
xchg
dec
xchg
cmps
lahf
add
ins
xchg
push
jp
pop
add
push
pop
gs
mov
std
dec
jnp
or
outs
fsubr
push
jno
sub
lock
xchg
das
mov
repnz
movs
into
sahf
les
adc
push
mov
xor
mov
jbe
jecxz
mov
lock
frstor
sbb
mov
mov
mov
icebp
ret
mov
scas
mov
sbb
aam
xor
adc
and
dec
jne
test
inc
std
sub
stos
int
arpl
dec
dec
or
xor
mov
mov
inc
in
xchg
and
or
div
jp
and
sbb
jne
imul
dec
pop
push
test
jbe
xchg
mov
xchg
jbe
es
push
rcl
aas
sbb
cwde
jle
lods
mov
cmp
fld
int
mov
fs
and
retf
xchg
icebp
inc
movntq
out
ret
bound
pop
cmp
jns
mov
jne
dec
push
lods
cs
jl
jg
ffreep
and
mov
xor
xchg
icebp
jmp
mov
jmp
mov
mov
inc
pop
push
das
mov
lods
cmps
mov
lock
lahf
inc
sub
repnz
pusha
jo
cld
daa
loop
mov
push
(bad)
std
cmp
lock
in
fucom
scas
inc
push
mov
aam
mov
hlt
push
jmp
je
movs
mov
lods
push
cmp
xchg
push
mov
cmp
fsubr
jp
and
and
mov
outs
cmp
mov
cmp
cmp
test
sbb
aam
stc
bound
push
add
and
rol
outs
(bad)
call
rcr
xchg
es
lea
popf
dec
mov
push
pop
ds
dec
fld
aas
cmp
leave
adc
mov
hlt
ret
push
push
jnp
mov
cdq
sbb
add
stc
mov
dec
push
test
jne
and
dec
test
leave
dec
enter
clc
push
jle
or
push
in
mov
pmulhw
ror
sub
icebp
ins
pop
(bad)
and
adc
clc
push
hlt
dec
addr16
std
jbe
add
xchg
mov
mov
xchg
inc
dec
loop
clc
je
xor
bound
adc
adc
test
inc
mov
push
sti
mov
dec
loope
aad
aam
pop
mov
(bad)
ins
push
jl
mov
pop
jnp
pop
daa
sbb
repnz
mov
jmp
jmp
ficom
fwait
out
push
fucomp
mov
enter
stos
xor
rol
push
aas
rcl
xor
call
cmp
iret
(bad)
iret
(bad)
iret
(bad)
into
(bad)
push
pop
mov
cwde
stc
cmp
jbe
mov
jbe
inc
js
aam
mov
jge
repz
mov
loopne
loopne
cmp
pop
push
jmp
sar
mov
jne
loope
(bad)
and
js
push
in
inc
jns
xor
jns
jl
mov
in
lahf
fbstp
sti
and
jge
sub
or
pop
sub
iret
cmp
push
xchg
xchg
pop
pop
aam
leave
fwait
and
push
lea
arpl
dec
test
add
pop
mov
rcr
mov
adc
or
or
(bad)
enter
add
xor
push
cli
inc
stos
inc
adc
dec
outs
pop
dec
xchg
xchg
lods
or
mov
mov
dec
push
arpl
ret
xor
adc
xchg
xchg
dec
ficomp
test
xchg
and
in
push
jbe
dec
and
cmp
xchg
cmp
pop
jmp
es
(bad)
xor
jno
mov
pop
imul
push
daa
jns
xchg
adc
mov
outs
leave
adc
mov
data16
(bad)
mov
add
mov
fstp
lods
dec
fdiv
inc
popa
jl
push
fild
sub
xchg
push
cmc
leavew
fldcw
movs
mov
loopne
sub
retf
and
icebp
sahf
clc
xor
push
jle
inc
popa
jl
mov
pop
jl
lock
aad
(bad)
adc
clc
sub
xor
sub
adc
jo
mov
call
int3
(bad)
test
and
and
jbe
das
inc
loope
out
xchg
cmp
ins
loop
loope
icebp
out
adc
outs
loop
mov
icebp
pop
clc
inc
jl
js
jae
imul
out
in
cmp
mov
jnp
(bad)
jne
jns
sub
outs
cmp
pusha
push
pop
test
gs
or
clc
and
sbb
repnz
or
inc
icebp
ins
fild
mov
imul
mov
inc
cmp
imul
push
xor
imul
in
(bad)
mov
jle
aaa
xchg
inc
loope
out
or
jno
jmp
fistp
lock
data16
loop
rol
rcr
jnp
cmp
fldcw
adc
scas
push
cmc
xor
ud0
add
adc
add
add
add
add
add
add
add
add
add
adc
adc
and
add
xor
and
inc
push
push
(bad)
fiadd
or
add
add
add
sub
pop
jb
push
int3
cdq
xor
ds
mov
fdiv
sbb
inc
xchg
mul
movs
push
fsubr
sbb
xor
test
fidivr
dec
add
sbb
pop
pop
adc
jmp
and
mov
mov
movs
xchg
cmp
xor
les
cdq
sub
scas
in
fldenv
xchg
push
mov
mov
mov
fs
jg
dec
xchg
(bad)
xchg
inc
cmp
xchg
inc
adc
pop
push
inc
jg
jge
and
or
and
cld
cmp
shl
in
inc
cmp
cmp
popa
addr16
retf
idiv
bound
inc
test
jge
lds
dec
sub
inc
add
in
lods
(bad)
js
sub
xor
adc
mov
or
shl
dec
sbb
movs
cmp
cmp
xor
aas
jge
in
cdq
push
in
scas
cli
and
aas
movs
enter
xchg
fild
inc
sbb
(bad)
dec
ror
cmps
dec
stc
and
scas
jne
in
dec
xchg
sub
cmp
pop
xchg
dec
xchg
test
xor
loope
(bad)
or
or
retf
in
sbb
lahf
or
cmp
jbe
not
mov
mov
icebp
add
dec
pop
push
xchg
data16
pop
out
pushf
xor
stos
retf
das
xchg
movs
inc
jle
pushf
push
int3
inc
inc
fwait
cld
sub
adc
ja
leave
ret
sbb
push
test
out
dec
push
sub
adc
fisubr
in
push
dec
fs
xchg
(bad)
mov
mov
outs
push
ins
push
shl
icebp
stos
imul
and
aaa
clc
das
push
nop
stos
or
xchg
jne
dec
fild
mov
jl
inc
jl
int
dec
mov
cmp
mov
mov
mov
xchg
sbb
pop
fwait
out
sbb
movs
into
movs
ins
adc
push
xchg
nop
rcl
cmps
fdivr
dec
add
fwait
cmp
sbb
in
mov
arpl
ss
push
loopne
pop
sub
sar
mov
leave
cmps
imul
dec
enter
dec
(bad)
hlt
(bad)
in
cmps
dec
leave
xchg
test
mov
xor
push
xchg
or
das
sbb
mov
jo
sub
and
rcl
and
push
pop
add
sub
dec
test
call
fstp
xchg
and
movs
lods
pop
icebp
test
nop
mov
xor
mov
into
les
mov
out
fst
sahf
sbb
and
sbb
and
dec
mov
lahf
or
and
sub
sub
lock
ss
fwait
push
and
leave
loope
retf
pop
mov
pop
loopne
fwait
pusha
ror
retf
mov
fst
ror
pushf
adc
in
mov
xchg
pop
add
pop
xchg
popf
cmc
lahf
add
adc
xchg
pop
lahf
push
dec
jmp
inc
test
pop
mov
sahf
xor
xchg
ins
xchg
in
mov
retf
add
call
fs
xchg
fst
sub
push
fst
std
mov
icebp
and
jne
mov
std
adc
mov
jmp
mov
je
ficomp
lods
aad
jp
ror
ja
fs
jecxz
mov
cmc
mov
and
add
fiadd
in
mov
push
pop
arpl
push
out
test
xchg
push
xchg
ds
and
shl
dec
cmps
mov
lea
mov
mov
test
jae
cld
sub
enter
xchg
mov
pop
cld
fnstsw
inc
pop
adc
mov
rcl
scas
dec
mov
cmp
or
push
push
push
scas
std
clc
xor
cmp
cld
jg
xchg
cli
dec
mov
leave
pop
ss
clc
xor
mov
mov
cli
sub
retf
les
pop
cdq
push
cmp
fmul
imul
lahf
arpl
sub
mov
cmps
jecxz
rcl
and
inc
push
in
xchg
inc
sub
mov
js
add
daa
jmp
test
inc
xchg
cmp
cmp
fnsave
inc
xor
mov
movs
push
in
mov
or
pop
out
sbb
jne
and
push
repnz
popf
outs
leave
or
xlat
repz
outs
fwait
mov
mov
xor
stos
inc
aam
jle
outs
lods
xlat
shr
sbb
xchg
test
ss
add
test
sti
push
cli
ret
call
mov
inc
leave
sbb
inc
(bad)
outs
jmp
pop
inc
arpl
xchg
jmp
mov
mov
xchg
mov
mov
inc
movs
push
out
mov
inc
mov
xchg
inc
dec
ins
ins
test
dec
(bad)
mov
stc
push
fimul
xor
mov
fstp
pop
inc
cmp
inc
adc
pop
in
aaa
arpl
sbb
in
pop
gs
sub
int
out
xchg
push
ja
mov
push
dec
inc
ins
dec
sbb
xchg
movs
mov
mov
pop
push
mov
loopne
sub
ror
inc
test
mov
cli
in
lds
sub
movs
and
push
sbb
stos
mov
xor
push
cmc
xor
pop
mov
push
(bad)
(bad)
fadd
xor
jno
mov
xchg
push
pop
cwde
sbb
lahf
loop
and
sar
lods
leave
jbe
(bad)
mov
std
mov
fistp
or
inc
inc
sbb
xchg
pusha
dec
inc
mov
dec
popa
mov
(bad)
pop
push
cwde
sti
cli
pop
adc
sub
repnz
inc
mov
adc
(bad)
in
pop
adc
push
lahf
aam
bound
lods
les
cld
mov
iret
(bad)
repnz
pop
mov
mov
inc
pop
sbb
hlt
adc
xor
sbb
cmp
fstp
xchg
lods
xlat
mov
mov
jbe
fisubr
sub
push
inc
inc
das
push
out
scas
pop
fnstsw
lds
rcr
pop
fstp
test
pop
xlat
(bad)
jmp
out
add
gs
nop
in
test
ins
ds
scas
out
popf
call
pop
push
dec
fisub
loopne
fs
lock
sub
jne
enter
pop
push
or
sub
pop
sbb
rcl
retf
stos
adc
(bad)
ror
(bad)
rcr
sub
into
aad
gs
dec
retf
(bad)
rol
(bad)
lahf
test
jbe
xchg
js
jns
arpl
xchg
cmp
pop
pop
(bad)
not
pop
sub
(bad)
rol
(bad)
mov
or
sub
pop
aas
mov
(bad)
lods
nop
xchg
jmp
out
cmp
test
cs
jae
(bad)
stc
mov
and
in
cmps
mov
fild
ds
loope
sub
xchg
mov
hlt
jp
mov
fs
mov
in
adc
sub
cmc
hlt
and
push
mov
push
and
mov
or
fs
jb
inc
pop
daa
jmp
rcr
pop
std
xor
dec
sahf
inc
dec
mov
call
inc
lods
xchg
jnp
sub
inc
dec
dec
jb
(bad)
mov
pop
daa
fsubrp
imul
mov
inc
mov
hlt
mov
sbb
cmc
mov
add
arpl
les
sub
add
add
add
add
add
add
add
adc
adc
and
xor
adc
jno
push
add
adc
push
inc
(bad)
fiadd
or
add
push
aas
add
aaa
xor
cmp
sbb
add
out
int3
add
fdivrp
pop
sbb
xchg
xor
fwait
xacquire
loope
adc
bound
ror
or
add
jno
adc
add
xor
or
icebp
jecxz
inc
add
push
test
jecxz
ss
mov
loope
sub
cmp
lock
cmp
jl
and
(bad)
lds
jl
sbb
es
pop
in
or
mov
loope
aaa
mov
cbw
jecxz
push
std
xchg
mov
cmp
aam
ss
setl
aad
xchg
dec
adc
gs
lods
scas
dec
nop
cmp
xchg
xor
cmp
jmp
xor
dec
jp
(bad)
ret
ret
sar
fcomp
sbb
xchg
loop
in
data16
mov
lods
lods
pushf
int3
xlat
aam
rep
jbe
pop
aaa
or
mov
outs
cdq
xor
cld
pop
mov
sub
adc
cwde
in
mov
mov
xor
add
mov
jne
push
imul
adc
inc
push
cmp
call
cmp
add
retf
push
add
dec
das
cmc
aaa
pop
jne
aam
push
sub
stos
push
or
add
addr16
ds
ds
sar
mov
call
ins
and
loope
xor
adc
test
dec
retf
scas
or
cmp
ins
inc
in
imul
push
push
push
movs
mov
pop
je
clc
mov
or
mov
imul
mov
mov
sub
mov
mov
ficom
dec
test
cmp
cmps
ja
movs
lock
movs
fidivr
cmps
sub
cs
ins
or
aas
add
dec
lds
or
and
inc
add
fs
add
cdq
cmp
xor
mov
xchg
(bad)
pop
adc
js
xor
loop
mov
xor
gs
sub
xor
adc
xor
sub
inc
cmps
ins
loopne
or
xchg
mov
mov
xlat
ins
repz
test
sbb
call
imul
jnp
imul
adc
and
and
loope
jp
xchg
mov
push
xchg
fisubr
shr
mov
cwde
sub
adc
xor
in
pop
cmp
jo
jbe
loop
sub
add
aam
inc
inc
and
add
or
mov
push
(bad)
and
jns
push
jae
outs
add
fsub
loope
sbb
shl
cmp
rcr
je
mov
and
inc
je
inc
sub
push
sar
repz
jne
xor
int3
outs
pop
popa
imul
fisubr
jne
inc
lds
test
in
or
mov
jns
and
cld
jp
shr
push
aaa
pop
sub
xor
push
daa
fld
add
inc
inc
jp
in
lea
push
ret
mov
mov
arpl
cmp
xchg
and
clc
cdq
xor
push
(bad)
aaa
push
ret
push
push
push
fwait
sbb
push
js
or
clc
loope
add
fwait
into
aam
jb
pop
cmp
or
ret
sub
retf
(bad)
aad
xor
adc
mov
ds
ret
pop
pop
ret
cwde
mov
stos
sbb
icebp
(bad)
into
mov
lods
es
mov
inc
sbb
push
test
jo
sahf
xchg
cli
xchg
pop
stos
(bad)
or
arpl
ret
in
jecxz
inc
lods
ins
push
dec
xchg
xchg
lock
xchg
xchg
lea
stos
shr
leave
mov
jmp
loop
stos
sbb
mov
push
pop
ja
iret
adc
in
inc
les
pop
and
inc
stos
shr
sahf
inc
ror
xor
in
jmp
(bad)
leave
mov
imul
adc
call
jns
push
mov
pop
jbe
sub
sahf
pop
ficomp
popa
mov
lods
das
xor
jno
mov
aaa
inc
cli
dec
(bad)
push
shl
jb
jmp
pop
call
ret
neg
jl
push
xchg
loopne
outs
sub
rol
loope
inc
out
sub
loope
in
or
lods
aaa
and
pop
jg
sub
stc
outs
lods
add
(bad)
mov
xor
pop
pop
pop
imul
popa
pop
retf
pop
lods
popw
in
fmul
jge
daa
sub
ss
inc
movs
mov
repnz
mov
stos
adc
mov
xor
mov
pop
sbb
sbb
jno
dec
mov
mov
pop
adc
mov
icebp
xchg
mov
imul
rol
jne
inc
push
mov
jne
jp
dec
push
add
imul
js
mov
ror
jo
mov
push
push
adc
cmp
inc
xchg
dec
sahf
lods
push
mov
clc
cmp
push
mov
lea
inc
dec
call
xchg
push
fwait
je
movs
hlt
adc
pop
pop
add
push
push
test
ret
pop
sub
add
mov
and
adc
aad
jl
inc
mov
stos
js
xchg
mov
bound
jge
sysret
jns
adc
scas
scas
fwait
cmps
inc
mov
aas
jno
dec
mov
stc
das
aam
leave
int3
lahf
inc
xor
mov
sbb
sbb
or
add
in
mov
clc
dec
and
daa
fild
enter
inc
rol
push
add
and
out
inc
into
adc
inc
nop
icebp
pop
inc
jns
sub
xor
add
fwait
or
jg
cmc
pop
(bad)
sbb
in
cwde
jmp
xchg
shl
les
push
mov
jo
fimul
fs
jns
test
xor
(bad)
adc
in
mov
cmp
dec
test
xchg
mov
(bad)
(bad)
pushf
dec
hlt
mov
jle
out
adc
cmp
loop
pop
mov
dec
je
sti
nop
sbb
test
xor
dec
add
mov
pop
or
add
jmp
inc
lds
push
(bad)
(bad)
lock
mov
pusha
or
es
push
js
mov
sbb
scas
lahf
out
inc
adc
push
jp
pop
scas
(bad)
add
add
aas
push
inc
gs
cmp
adc
dec
xor
lds
cmps
or
and
shl
add
dec
adc
adc
inc
pop
sti
sahf
stos
pop
loope
mov
cmp
xchg
loope
jp
movsx
into
cmps
(bad)
mov
(bad)
out
or
shl
cmp
test
aam
mov
mov
js
xchg
sub
cmp
jne
repz
scas
or
pop
ficomp
jge
lahf
enter
clc
add
adc
fidiv
stos
jo
mov
inc
sub
sbb
push
aad
aam
mov
sbb
cmps
fild
cmp
pop
stos
mov
cwde
(bad)
out
js
mov
push
dec
std
jno
pop
sbb
push
aam
leave
adc
cdq
pop
imul
aam
iret
adc
jns
clc
iret
popa
xor
xchg
push
pop
jae
imul
add
mov
xor
test
jo
ret
je
pop
into
jmp
jp
and
add
mov
mov
pop
mov
sub
clc
push
in
int3
mov
jge
stos
pop
scas
mov
repz
mov
lods
sub
lods
push
jle
fild
xchg
sub
fbstp
jle
lds
(bad)
gs
cmc
mov
sar
les
jp
or
je
stos
in
fstp
pop
mov
cmp
xchg
jp
(bad)
mov
into
jno
xchg
into
sbb
xchg
jo
cmp
push
jl
inc
icebp
aas
and
adc
ins
mov
xchg
js
push
jns
idiv
loopne
hlt
push
loop
leave
pop
add
stc
imul
gs
xchg
cmps
hlt
jg
les
adc
add
add
add
add
add
add
add
add
add
and
xor
push
popa
jno
adc
or
add
add
and
mov
or
(bad)
call
mov
enter
test
sub
xchg
dec
mov
push
inc
mov
mov
and
or
or
or
mov
mov
push
xchg
adc
shr
and
bound
and
adc
pusha
push
dec
or
sbb
adc
and
int3
inc
adc
test
pop
inc
pop
enter
adc
dec
ss
or
mov
test
cdq
cli
inc
pop
lock
and
adc
xchg
push
mov
push
out
movs
pop
dec
and
pushf
std
leave
cmp
push
add
mov
jmp
mov
or
or
mov
add
mov
sub
fistp
(bad)
fist
adc
jae
sub
sub
adc
inc
les
loopne
aad
and
xchg
inc
les
inc
add
and
mov
push
inc
sbb
xchg
mov
out
cmp
adc
dec
mov
add
push
pop
add
loop
sub
or
rcl
sbb
and
and
outs
xor
push
aas
inc
std
or
and
lea
sub
aaa
sbb
push
push
adc
mov
mov
gs
or
mov
and
lea
sub
sbb
imul
pop
cmp
mov
or
mov
xor
mov
cmp
xchg
das
and
push
adc
sub
and
js
push
les
inc
test
sbb
mov
or
xchg
inc
retf
adc
and
and
xor
pop
mov
xchg
sbb
adc
rcl
clc
lds
and
mov
sub
push
bound
jo
inc
add
inc
xchg
mov
mov
sbb
sub
mov
sub
mov
sub
push
ror
and
and
ret
xor
sbb
pusha
or
xor
inc
mov
(bad)
enter
(bad)
mov
adc
mov
jle
lods
and
sub
or
inc
mov
jbe
push
aam
cmp
leave
cwde
pusha
jp
(bad)
(bad)
and
in
cmp
cwde
addr16
mov
pop
mov
ins
rol
dec
add
dec
movs
xchg
fsub
sbb
xor
push
adc
add
mov
loope
inc
and
adc
sbb
and
or
mov
and
push
shr
fnstsw
mov
lds
cmp
or
push
lods
or
shl
xor
and
mov
xor
fidivr
rol
add
popa
and
lds
fwait
and
adc
fadd
pusha
mov
and
or
cmp
sar
and
or
or
add
nop
sbb
mov
js
push
xchg
mov
test
es
sbb
pop
pop
sbb
std
mov
icebp
imul
sbb
ins
mov
test
imul
add
xchg
mov
xchg
sbb
xor
or
xor
les
mov
xor
dec
sbb
lea
arpl
mov
cmp
lds
call
pop
mov
or
inc
add
fmul
xor
dec
leave
push
stc
test
rol
or
xchg
xlat
xchg
aad
js
mov
arpl
mov
ret
lds
mov
or
adc
cs
stos
adc
jmp
or
mov
in
inc
sub
lahf
jo
add
and
mov
dec
lock
mov
pop
cmovae
rol
ret
pop
add
push
mov
and
dec
(bad)
shl
mov
clc
mov
inc
mov
test
mov
mov
(bad)
js
mov
imul
cmc
xchg
les
add
hlt
push
cwde
sub
push
pop
dec
add
adc
stos
or
sub
xor
xor
cmps
ds
das
adc
and
fcmovb
inc
stos
and
lods
nop
ins
and
pop
mov
or
sbb
cmp
and
xor
push
es
clc
lds
shr
xor
pop
ret
das
clc
mov
dec
dec
xor
sbb
out
and
mov
add
sub
xchg
mov
test
popa
sbb
inc
and
jb
xchg
(bad)
gs
in
push
dec
add
adc
pop
or
mov
inc
adc
call
mov
pop
jl
xor
sbb
adc
sub
push
je
adc
test
dec
adc
mov
and
xchg
loopne
inc
ja
xchg
popf
inc
(bad)
push
mov
imul
inc
xchg
push
loop
push
(bad)
jnp
loopne
or
sub
mov
jmp
xor
adc
xor
xchg
ins
bound
inc
sbb
sbb
mov
mov
inc
das
fdivr
les
rol
push
sbb
mov
movs
lods
ins
xchg
retf
or
ret
ss
out
xor
mov
movaps
sahf
mov
push
mov
idiv
inc
push
jp
dec
push
push
xchg
sbb
add
int
push
or
jbe
push
cmp
clc
inc
test
pop
xchg
sbb
rcl
xchg
xchg
fdivr
shl
(bad)
sbb
cwde
int
outs
call
adc
call
and
mov
and
inc
pusha
dec
aaa
xor
or
and
in
or
arpl
add
xchg
or
jo
adc
sbb
fld
sub
dec
call
in
pop
hlt
mov
inc
push
push
push
dec
push
mov
pop
sbb
das
addr16
add
push
adc
loope
pop
and
adc
adc
je
or
mov
loope
aam
inc
adc
jbe
push
cli
xor
add
shl
test
loop
inc
dec
pmaddwd
outs
call
test
sbb
test
pop
push
mov
mov
or
or
retf
cmp
push
outs
rcr
cmp
dec
and
lds
jp
sbb
and
retf
xchg
mov
sar
jmp
rol
sbb
jnp
dec
dec
cdq
or
push
push
inc
and
inc
pop
cmps
jbe
adc
xchg
add
xor
in
mov
push
sub
jg
comiss
push
jnp
cli
adc
pop
mov
test
push
jae
fsub
mov
sub
cmps
cdq
pusha
in
push
cld
or
pop
or
mov
pop
mov
push
daa
movs
or
js
or
lea
mov
mov
jnp
hlt
xor
pop
sbb
adc
inc
or
and
xchg
jb
(bad)
rcl
xor
ds
fst
and
cmp
int
retf
fcom
lock
xchg
pop
xor
jnp
cli
or
xor
or
xchg
cmp
and
push
jo
shl
and
sar
mov
mov
jno
adc
lods
and
bound
loope
pop
pop
push
not
sub
shl
mov
inc
mov
mov
ins
cwde
frstor
in
and
push
retf
or
jecxz
and
mov
cmp
imul
ret
push
inc
(bad)
lock
ins
xchg
fadd
(bad)
xchg
mov
aad
jp
fsub
mov
mov
jnp
(bad)
mov
mov
inc
int3
in
jge
push
lods
or
push
rcr
sub
fiadd
cli
xor
aad
mov
or
inc
stos
arpl
push
or
es
jb
push
adc
mov
and
sahf
mov
cmp
ss
pop
mov
popf
retf
fdivr
xchg
mov
lds
inc
jo
add
dec
hlt
pop
dec
jb
test
ret
add
sub
cmp
fwait
repz
jp
pop
sbb
pusha
dec
push
dec
rcl
fcom
shr
xchg
or
dec
adc
mul
stos
leave
and
aad
pop
call
je
ds
xlat
mov
inc
mov
sub
dec
mov
inc
sub
test
xchg
arpl
movlhps
mov
mov
aaa
add
or
daa
gs
or
push
inc
call
inc
inc
and
movs
mov
leave
aad
sbb
out
add
loopne
call
and
cs
adc
ret
hlt
hlt
xor
and
je
inc
ins
push
xor
cmp
xor
push
push
push
mov
push
dec
les
fldenv
xchg
inc
fsubr
and
(bad)
mov
gs
punpcklwd
push
std
adc
sub
and
pop
add
inc
mov
inc
fcom
ss
jns
xchg
mov
mov
out
(bad)
cmp
scas
pop
lea
and
lahf
arpl
adc
add
les
jg
ins
push
jmp
inc
dec
enter
and
mov
nop
dec
fadd
inc
not
sbb
mov
les
jne
mov
jle
lds
(bad)
lds
arpl
popf
mov
inc
lock
push
stos
inc
cmp
dec
adc
pop
cmps
sub
jle
sub
dec
je
fild
push
lods
stc
rol
mov
xor
or
pop
add
xchg
retf
imul
out
jae
push
adc
movs
push
dec
popf
adc
outs
sub
and
mov
div
cmp
cmp
xor
in
aam
and
mov
mov
inc
sub
rcr
sbb
loop
les
dec
fdiv
aad
test
xchg
loope
xchg
or
leave
sbb
js
cmc
push
aad
scas
xchg
xor
sbb
dec
inc
scas
xor
cmp
test
and
(bad)
adc
lock
push
repz
icebp
shr
push
movs
and
popf
or
inc
xor
dec
push
(bad)
fst
shl
mov
sbb
and
adc
fld
mov
push
ret
stos
xchg
lds
pop
xchg
cwde
ins
addr16
sbb
jbe
push
dec
mov
test
xchg
aam
sbb
mov
ins
xchg
bound
sbb
outs
inc
mov
jg
data16
and
xchg
and
sbb
mov
xchg
loope
mov
sub
fstp
pop
adc
ins
out
and
(bad)
fs
shld
mov
inc
pop
int3
and
mov
inc
push
cdq
push
dec
arpl
and
xor
cmp
push
popf
or
and
call
xor
mov
push
push
hlt
imul
sbb
inc
mov
push
sbb
pop
dec
gs
inc
(bad)
nop
dec
mov
cli
retf
jmp
add
or
sub
jnp
sub
and
ss
aaa
lahf
mov
fcom
in
mov
pop
inc
xchg
das
retf
int
imul
push
(bad)
adc
in
inc
fsub
sti
shr
add
jp
(bad)
(bad)
mov
pop
adc
add
call
pop
jmp
push
jp
loope
mov
fwait
outs
mov
pusha
stos
push
xor
dec
cmp
mov
adc
fwait
es
shr
les
mov
sbb
lds
pop
jns
or
int3
cli
ins
xor
inc
inc
mov
cdq
arpl
xchg
sub
mov
shl
cmp
push
aas
js
xchg
arpl
mov
fmul
or
lds
and
or
adc
pop
hlt
frstor
push
adc
dec
dec
hlt
scas
pop
adc
out
adc
mov
push
mov
ins
lea
or
(bad)
les
adc
or
mov
mov
call
inc
inc
cmp
mov
mov
or
xchg
ret
adc
adc
leave
or
int
or
jp
mov
jge
cdq
xor
cmp
and
fcomp
fmul
xchg
adc
jecxz
cmps
cmp
mov
and
pop
ins
mov
mov
jo
or
xchg
and
or
dec
fs
mov
xor
xor
push
outs
arpl
inc
iret
adc
lods
and
and
pop
pop
inc
loope
lahf
push
repnz
dec
(bad)
sbb
push
xor
popa
adc
popa
push
pop
sub
mul
xchg
(bad)
rcl
leave
(bad)
dec
repnz
js
mov
rol
rcl
out
test
push
inc
adc
nop
nop
inc
jmp
xchg
mov
sub
push
xchg
ins
xchg
movs
call
sub
scas
shl
cwde
xchg
add
(bad)
push
sbb
pusha
dec
inc
push
pop
pop
ins
jae
call
outs
shl
ss
and
sub
call
push
mov
cwde
test
jp
cdq
enter
push
in
jnp
mov
sub
or
jg
cld
adc
(bad)
dec
popf
inc
test
jbe
xchg
or
les
in
or
sub
sahf
cmps
sar
mov
or
and
and
and
xor
les
add
mov
xchg
xor
mov
sub
mov
push
pop
pop
loopne
clc
and
inc
mov
(bad)
mov
inc
sbb
push
mov
dec
or
lock
not
push
mov
test
in
std
xchg
pop
sbb
cwde
icebp
arpl
repz
adc
sbb
test
mov
or
xor
xor
dec
mov
adc
and
repz
ror
jns
cmp
pop
sbb
das
push
ins
and
gs
push
es
call
xchg
mov
pop
inc
loopne
mov
adc
movs
js
in
mov
and
clc
xchg
out
and
mov
xchg
mov
lds
hlt
jae
aas
mov
cmp
and
in
jmp
pop
scas
push
scas
sar
lods
mov
retf
(bad)
cmps
mov
int
mov
inc
push
adc
xor
lods
adc
mov
dec
inc
mov
scas
nop
and
fprem
aaa
out
jb
xor
(bad)
shl
inc
aam
push
pop
adc
sbb
mov
jbe
jle
cld
or
mov
cmps
enter
je
call
fs
imul
sub
xchg
jmp
or
adc
sar
sbb
popa
ins
xlat
adc
in
outs
jb
push
push
pusha
rcr
test
add
out
iret
jl
shl
ficom
xor
adc
or
cmp
call
cs
data16
mov
mov
or
ret
xchg
inc
or
ins
or
cmps
mov
je
mov
shl
inc
retf
ret
adc
mov
sbb
mov
sub
push
inc
xor
sbb
enter
mov
aad
ins
dec
jp
dec
and
push
push
push
test
inc
ret
xchg
add
dec
clc
jo
cld
cdq
ror
or
out
dec
loopne
add
iret
(bad)
jae
in
and
fimul
loopne
sub
mov
dec
inc
fldenv
dec
adc
fs
or
sub
clc
push
loopne
leave
push
pop
or
jg
add
cli
sub
sub
add
sub
jle
ja
(bad)
pusha
(bad)
adc
movs
pop
cmc
mov
or
push
shl
aas
add
and
push
and
jg
popa
ins
push
jne
push
or
xchg
ins
dec
mov
sbb
popa
js
das
iret
mov
bound
xlat
adc
cwde
dec
or
xchg
test
sub
push
rol
inc
out
out
out
jo
test
and
adc
test
cmp
push
inc
fsubr
jmp
out
mov
sbb
xchg
js
mov
or
aaa
sbb
(bad)
shl
xchg
dec
xchg
mov
pop
int
pop
jnp
cs
nop
cmp
in
and
pop
or
or
js
das
leave
clc
aas
add
arpl
fcomp
imul
mov
rcl
push
push
in
xor
inc
and
pop
pop
xchg
push
push
les
shr
shl
dec
mov
jbe
dec
mov
mov
loopne
cmps
pop
rcl
mov
jg
test
ret
pop
sub
call
dec
adc
pop
mov
ret
mov
hlt
jp
das
ret
mov
lahf
mov
out
add
rcl
mov
pop
inc
hlt
jae
gs
(bad)
call
ret
repnz
mov
xchg
inc
dec
adc
pop
arpl
loope
and
shr
dec
mov
outs
mov
add
xor
sahf
xchg
inc
mov
sub
cld
es
xor
outs
sar
mov
fmul
lods
or
inc
xchg
arpl
outs
sub
jmp
adc
cwde
cdq
shr
xor
add
xchg
dec
imul
add
(bad)
inc
xchg
and
dec
mov
and
dec
test
add
or
mov
pop
shr
ds
or
sub
add
xor
cs
xchg
mov
xchg
or
mov
inc
pop
lahf
inc
jo
outs
aas
push
int3
xchg
jno
mov
mov
pop
add
gs
cmovs
or
jg
inc
loope
dec
add
or
test
test
ficomp
mov
ins
dec
es
cld
sbb
add
call
inc
adc
and
in
sbb
adc
cdq
xor
test
mov
jle
push
outs
mov
iret
loop
clc
and
or
loop
js
or
xchg
lods
and
and
rol
lods
xchg
xchg
cmp
call
push
pop
leave
xor
add
leave
inc
(bad)
or
jnp
lahf
gs
addr16
shl
cmps
xor
adc
call
(bad)
or
jp
sahf
lods
iret
cli
cmp
mov
mov
out
adc
ins
movs
push
inc
aas
in
imul
mov
stos
adc
sub
add
xchg
imul
and
inc
lea
xor
dec
pop
lea
inc
push
inc
inc
pop
mov
test
dec
int
and
daa
mov
dec
mov
mov
dec
or
add
xlat
mov
(bad)
rcl
rcl
hlt
xlat
push
and
test
mov
fcmovnbe
xor
add
repz
add
inc
sub
ficom
xchg
adc
inc
lods
adc
pop
jb
mov
mov
cmps
cli
dec
or
cmp
or
mov
mov
inc
cmp
das
adc
loope
loop
cld
push
push
js
lds
js
add
or
xchg
jg
push
lods
sbb
or
cmp
mov
push
icebp
sub
rcl
loope
cmp
icebp
inc
or
fadd
cmp
or
pusha
cmp
or
fld
test
mov
inc
leave
pop
mov
fmul
mov
or
shr
test
das
add
pop
cmp
or
lods
loopne
and
mov
xchg
adc
lock
(bad)
cli
sub
and
add
pop
and
xchg
cmps
out
adc
inc
ins
mov
add
sbb
add
repnz
push
call
mov
dec
push
shr
jl
adc
ins
test
xchg
dec
add
mov
call
xchg
push
(bad)
arpl
push
xor
and
stos
sbb
pop
lds
mov
jbe
inc
es
out
les
out
arpl
mov
add
sbb
pop
jle
bnd
mov
mov
mov
(bad)
mov
and
mov
lds
sbb
nop
cli
sub
adc
inc
add
(bad)
cli
jbe
mov
add
(bad)
xchg
jnp
sbb
arpl
sbb
int
pop
inc
cdq
mov
add
jmp
xchg
or
sbb
cli
imul
sti
inc
ret
xchg
and
xchg
sbb
xor
pop
call
xchg
ret
lea
mov
adc
xchg
bound
adc
inc
aad
test
fdivr
nop
xchg
sbb
xchg
or
cmp
sub
loopne
(bad)
xadd
adc
arpl
inc
mov
cmp
stos
sbb
rol
fdivr
nop
ins
inc
mov
fwait
arpl
dec
mov
lods
inc
ret
push
jp
inc
mov
xor
(bad)
mov
cdq
xchg
cmps
out
shl
shl
dec
sub
test
pushf
push
call
rcl
xor
cmp
pop
loope
mov
ret
and
aam
jecxz
cmp
test
dec
popa
stc
add
xchg
(bad)
outs
push
call
shl
or
cli
jl
(bad)
push
sbb
cs
lahf
add
icebp
lahf
movs
fisub
push
test
in
imul
je
add
adc
mov
xchg
imul
loope
inc
rol
adc
jno
loope
xchg
movs
lock
hlt
sar
and
inc
jae
lds
lea
mov
outs
pop
jl
arpl
retf
cwde
jnp
pop
in
and
test
push
mov
dec
xor
(bad)
adc
inc
popa
cmp
or
cmp
inc
sbb
xlat
push
xchg
adc
add
mov
out
call
pop
adc
shl
data16
xchg
inc
sub
or
sbb
call
or
test
shr
xor
mov
xor
sbb
fdivr
lds
retf
sbb
imul
cmove
scas
inc
jb
xchg
pusha
adc
arpl
cmp
hlt
outs
xchg
mov
jo
mov
push
add
or
and
xchg
cmp
or
mov
sbb
add
das
dec
test
adc
mov
pop
test
rcr
sbb
xchg
int3
repnz
aas
push
dec
shr
sub
or
xor
dec
xor
sub
mov
cli
pop
popa
ins
xchg
sub
mov
cwde
aad
cld
inc
add
adc
lock
shl
shl
scas
add
dec
iret
mov
lock
icebp
sar
mov
inc
cmp
movs
push
adc
add
loopne
push
mov
jmp
or
aaa
loopne
call
adc
dec
ret
or
mov
sub
push
mov
xacquire
inc
fstp
jae
xchg
xor
push
mov
je
fstp
call
adc
les
not
push
in
inc
dec
test
ret
call
adc
pop
inc
cdq
adc
sbb
pop
adc
mov
add
aad
xor
xor
nop
out
loope
or
icebp
cmp
or
outs
fcomp
mov
or
pop
xor
iret
or
rcl
addr16
out
lods
adc
inc
or
or
mov
and
mov
loope
add
lea
mov
mov
leavew
rol
jg
in
pop
pop
push
sbb
daa
xor
loop
mov
and
sub
inc
sbb
fidiv
and
leave
add
std
sbb
add
sub
clc
pop
xchg
inc
xchg
loop
outs
or
lds
mov
mov
push
push
(bad)
loopne
mov
xchg
or
jmp
dec
imul
inc
mov
aaa
scas
loope
pop
adc
shl
cmp
cmp
ret
mov
icebp
push
and
in
cdq
ret
aaa
push
cld
push
clc
daa
enter
inc
xchg
aas
test
ret
lahf
ret
adc
sbb
dec
sti
adc
sbb
push
ds
xchg
push
imul
call
sub
jle
cmp
ficomp
mov
inc
sbb
pop
sar
dec
push
(bad)
jle
sub
cmp
adc
pop
push
shr
popf
in
in
ror
add
cmp
leave
jge
push
mov
mov
fdivr
addr16
push
mov
loope
loope
jae
xchg
test
in
xor
cmp
(bad)
loopne
call
push
and
outs
pop
push
inc
(bad)
loopne
arpl
dec
push
loope
pop
adc
icebp
mov
mov
mov
adc
and
gs
cli
push
push
ja
mov
mov
or
inc
inc
mov
addr16
add
mov
dec
push
adc
pop
mov
or
adc
cmp
sub
aaa
sub
inc
jle
loope
bound
push
push
test
cld
sbb
cld
mov
xchg
daa
loopne
push
test
(bad)
and
mov
rol
and
fld
mov
(bad)
pusha
(bad)
mov
and
ins
mov
and
mov
repnz
adc
out
mov
in
popa
mov
shl
in
pop
(bad)
lahf
cld
adc
fiadd
cs
ret
dec
sub
fwait
sbb
xchg
leave
jle
push
scas
and
and
cmp
mov
or
daa
out
xchg
mov
inc
xor
push
mov
hlt
sub
lods
jo
(bad)
adc
inc
and
mov
and
outs
daa
test
push
clc
ret
movs
push
sbb
sbb
inc
(bad)
rcr
add
mov
jmp
in
rcl
das
adc
dec
hlt
addr16
xchg
and
retf
and
sub
test
pop
push
push
pop
mov
pop
inc
add
ss
push
mov
ret
in
mov
and
pop
push
out
cld
mov
outs
lock
shl
iret
loope
ret
shr
or
push
cwde
(bad)
xor
inc
lods
sub
mov
mov
nop
xchg
movs
test
sbb
ins
jns
call
jns
sub
mov
xor
xchg
or
aam
xchg
lock
ins
dec
xchg
xchg
xor
ins
xchg
in
or
movs
test
fdivr
or
push
aad
jnp
push
push
sbb
and
adc
and
and
inc
or
sub
push
mov
cmp
dec
inc
mov
sub
fcmovbe
cmovl
and
daa
not
inc
sar
test
mov
push
inc
loop
add
fdivr
cmp
test
jl
(bad)
sub
sub
fadd
mov
xor
and
inc
inc
add
sub
and
loop
pusha
(bad)
mov
ds
pop
clc
sub
test
dec
aam
xchg
call
and
mov
sub
ss
add
sbb
adc
dec
or
or
addr16
mov
cwde
arpl
or
adc
ficomp
sbb
inc
mov
cmp
xchg
pop
mov
sbb
paddusw
or
mov
jb
push
mov
mov
(bad)
in
(bad)
rcl
or
loope
loopne
adc
sbb
mov
lods
push
cld
push
add
inc
jmp
daa
inc
dec
test
and
enter
call
les
adc
repnz
push
jns
adc
lock
cmp
ror
inc
adc
mov
popf
push
adc
movs
les
inc
into
bound
cmp
and
mov
pop
fdiv
cmp
sar
adc
mov
sub
sahf
mov
(bad)
fxch
jp
ins
dec
das
push
cmp
(bad)
adc
loopne
pop
xchg
pop
rol
sub
and
aas
or
(bad)
sub
ss
sub
cld
mov
xchg
sbb
(bad)
adc
push
xchg
faddp
test
and
jnp
sub
cmp
and
gs
aas
shl
loopne
xor
sub
mov
push
inc
xor
fsin
push
pop
sti
(bad)
test
lods
mov
jae
(bad)
das
inc
pop
mov
xchg
add
push
imul
xor
sbb
adc
cdq
inc
mov
lods
lods
or
dec
fsub
dec
or
jmp
dec
ja
hlt
push
fdiv
cld
dec
sub
test
cli
adc
inc
mov
xor
xchg
and
and
sub
mov
ins
push
fs
adc
xchg
rcr
es
dec
sub
push
or
comiss
cmp
sub
loopne
and
arpl
xchg
jmp
inc
iret
xchg
cli
sbb
les
pop
mov
jge
and
es
inc
fwait
ins
inc
mov
pop
hlt
inc
and
and
nop
test
add
sub
push
jns
push
(bad)
fisub
or
mov
mov
dec
(bad)
mov
arpl
popf
push
lds
clc
and
jecxz
ret
cmp
xor
fbstp
add
test
mov
push
inc
in
aas
mov
adc
movs
call
test
jmp
jle
or
nop
pop
sbb
imul
and
hlt
fldenv
test
mov
pushf
ficom
pop
xchg
jno
or
retf
cdq
or
out
ins
or
shl
inc
call
mov
adc
mov
ret
jmp
and
or
sub
ret
ret
and
inc
ret
retf
mov
jp
or
cmp
or
xchg
inc
mul
cdq
inc
fisub
mov
ins
and
dec
ins
xor
jle
push
or
shl
add
dec
xor
mov
mov
arpl
daa
xchg
jge
in
inc
or
xchg
daa
mov
adc
cld
mov
push
pop
in
cmp
sub
movups
cmp
cli
sub
sub
in
adc
jp
and
test
push
xor
adc
and
test
data16
inc
push
retf
pop
mov
or
adc
dec
mov
test
pop
or
mov
sub
mov
mov
in
sub
fwait
pop
out
sub
xchg
in
cld
aas
in
(bad)
dec
ss
nop
test
cmp
inc
cmp
pop
adc
int
test
fs
mov
out
test
mov
adc
dec
pop
pushf
lock
push
adc
and
cmps
cdq
push
sbb
outs
inc
jo
or
leave
mov
nop
das
in
mov
xor
sahf
adc
out
dec
sub
xor
out
add
cmps
inc
mov
xchg
and
inc
nop
fcom
and
es
inc
sub
mov
adc
in
adc
xor
push
aaa
lds
pop
pop
xchg
or
push
fs
pop
adc
rcl
pushf
sbb
loope
and
aaa
mov
mov
add
jne
jnp
and
push
leave
inc
not
jne
xchg
push
loopne
and
sub
and
sar
pop
or
ds
loopne
cld
rcl
or
push
sub
and
call
inc
je
sub
xchg
mov
xchg
cld
sub
loope
clc
mov
xchg
inc
and
lock
adc
imul
imul
(bad)
mov
jge
inc
in
(bad)
sub
inc
mov
int3
(bad)
in
ins
sbb
jp
add
rol
and
sbb
add
add
pop
cmp
cmp
movs
ror
mov
pop
lock
hlt
xor
and
xchg
adc
adc
(bad)
xor
addr16
loop
adc
inc
mov
lock
pop
adc
dec
repz
popa
data16
push
sbb
xchg
movs
jnp
(bad)
iret
test
imul
nop
movs
cmc
inc
dec
adc
adc
ja
inc
call
inc
mov
xchg
mov
in
mov
dec
in
mov
into
and
aad
loopne
addr16
fcomp
loopne
out
push
test
ins
call
arpl
jae
in
inc
arpl
xchg
cli
movs
cmp
mov
mov
dec
mov
xor
call
fisttp
cli
cmps
inc
int
and
mov
cmp
inc
lock
jae
jp
dec
(bad)
jmp
ficom
add
test
imul
sahf
or
adc
dec
pop
inc
mov
inc
std
inc
or
fwait
gs
nop
fldcw
sbb
mov
xor
xchg
pmuludq
push
ins
mov
sar
jge
ins
or
bound
cmp
mov
mov
mov
mov
xchg
cmp
mov
ss
aam
jo
test
dec
mov
outs
and
dec
cli
sbb
inc
mov
mov
xor
retf
or
add
lahf
rol
dec
jne
dec
addr16
ficomp
cmps
std
sbb
mov
xor
ffreep
cwde
out
push
push
lea
das
mov
ret
pop
ret
popa
movs
inc
lods
and
xchg
retf
or
xchg
pop
lods
adc
sbb
dec
clc
and
sub
shl
(bad)
xor
mov
les
push
cs
and
cmp
add
pop
test
sbb
(bad)
mov
jmp
xchg
push
inc
test
arpl
push
ins
popf
jl
jmp
sub
clc
mov
or
xchg
and
mov
or
gs
adc
hlt
sub
xchg
ins
mov
add
inc
mov
mov
test
mov
push
push
iret
inc
jmp
push
or
rol
mov
mov
xchg
jo
es
std
or
pusha
aaa
mov
les
mov
dec
scas
sub
mov
and
dec
in
shl
lock
arpl
in
loope
shl
loope
pop
cmc
sbb
push
cmps
mov
mov
cwde
and
inc
pushf
cmp
iret
aas
xchg
xlat
test
or
cmps
test
data16
clc
inc
xchg
add
xchg
arpl
add
jp
pop
mov
call
(bad)
call
icebp
out
push
sbb
cmp
inc
mov
fwait
rcr
hlt
mov
and
xor
inc
mov
imul
pop
add
xor
adc
xchg
nop
fwait
cmp
dec
aam
sub
bound
cmp
sub
loopne
push
adc
mov
xchg
xor
adc
cli
sub
xor
mov
mov
dec
hlt
fcomp
jecxz
int
inc
sub
lds
xor
ins
call
xor
pop
inc
retf
les
sbb
cmp
nop
fcmovnb
test
xchg
enter
dec
rol
dec
adc
and
(bad)
mov
push
inc
dec
test
lahf
retf
mul
ds
ja
xchg
push
xchg
jmp
adc
push
sub
lds
call
and
mov
xchg
rdpmc
adc
imul
int3
scas
add
adc
xor
inc
sar
outs
or
sbb
pop
fldenv
retf
push
jle
js
loop
jecxz
push
pop
test
ret
add
les
adc
xchg
xlat
loope
jo
push
dec
push
mov
dec
xlat
mov
sbb
mov
movs
add
push
adc
mov
inc
push
push
and
enter
dec
or
jbe
xor
dec
loopne
arpl
(bad)
loopne
sar
cmps
in
pop
xchg
dec
(bad)
cwde
pushf
das
adc
jnp
mov
fdivr
mov
(bad)
loopne
shl
inc
fnstcw
mov
js
nop
pop
pop
adc
cmp
cld
sbb
xchg
or
mov
or
test
or
pop
or
fmul
inc
(bad)
rcr
sbb
mov
sbb
mov
arpl
fwait
inc
cmp
jecxz
mov
shr
and
int
int3
push
push
test
fdiv
retf
push
mov
sbb
cli
outs
dec
mov
movs
fild
jp
les
das
shl
pop
icebp
dec
leave
loope
mov
in
and
shl
cli
sub
mov
mov
scas
or
inc
push
sbb
mov
or
inc
dec
fsub
mov
jbe
sub
stos
cmps
loopne
adc
pop
(bad)
enter
inc
fsubp
and
movs
imul
add
and
cmps
cmp
retf
cmp
cmps
dec
push
int
shr
mov
nop
mov
scas
or
test
test
and
add
in
push
push
fild
cmp
cld
sahf
sbb
push
and
push
mov
push
pusha
neg
sbb
loop
arpl
rol
inc
pop
pop
rol
sub
push
lea
addr16
cmps
cmp
inc
xlat
push
pop
and
sbb
push
(bad)
inc
mov
imul
(bad)
jmp
add
data16
xchg
xor
push
sub
ret
dec
ret
xor
and
inc
pop
adc
and
in
sbb
xor
movlps
outs
dec
mov
push
xor
mov
fcomp
mov
je
dec
mov
adc
sub
fnstcw
fnstenv
mov
jmp
(bad)
fadd
loopne
retf
jle
cmps
cwde
push
das
loopne
sbb
imul
and
jmp
mov
jne
xchg
adc
bound
sub
xchg
and
push
pop
popf
xchg
add
adc
push
adc
data16
xchg
shl
push
gs
out
fdivr
dec
into
cld
pop
sbb
inc
dec
mov
xchg
inc
jae
dec
adc
dec
mov
mov
fdiv
cmp
ins
xchg
add
imul
xchg
and
or
dec
and
jge
add
push
loopne
xchg
(bad)
xor
mov
les
loope
adc
and
aam
cmps
hlt
daa
or
push
(bad)
push
inc
and
or
xor
xor
mov
lods
mov
cli
pop
mov
arpl
pop
pop
daa
das
xadd
jecxz
test
mov
test
sbb
inc
(bad)
stos
adc
adc
cli
or
mov
cs
adc
pop
lods
mov
pushf
out
adc
nop
test
hlt
pop
xchg
inc
movs
jbe
in
jge
mov
loopne
fist
mov
mov
mov
sub
mov
inc
push
cli
(bad)
jb
mov
xor
push
mov
lea
mov
add
repz
(bad)
cwde
jp
cmp
mov
inc
sub
sub
push
int3
div
xlat
hlt
jo
ret
or
ret
daa
addr16
fsub
mov
in
nop
clc
nop
lahf
mov
leave
jo
lahf
jnp
sub
fnstsw
xchg
pop
clc
aaa
dec
xchg
sub
(bad)
cs
mov
pop
pop
stos
rcl
mov
cmp
mov
and
mov
es
sub
ja
mov
adc
mov
xor
int3
push
xor
retf
add
nop
in
and
mov
js
push
xchg
mov
sbb
clc
mov
popa
push
addr16
inc
mov
loope
jl
mov
loopne
adc
mov
daa
push
jbe
jb
addr16
sub
inc
mov
or
leave
mov
jp
jle
outs
add
ins
dec
mov
pop
add
push
inc
adc
jmp
mov
sbb
call
js
jle
sub
and
mov
mov
test
mov
xchg
xor
fwait
addr16
xor
or
pushf
cmc
dec
cmp
ret
icebp
fimul
test
inc
sti
sub
int3
int
inc
mov
mov
cmp
xor
fsub
das
push
mov
hlt
into
popa
sahf
ret
mov
inc
sti
sbb
rcl
clc
and
popa
cmp
test
inc
jge
and
jl
arpl
cmp
mov
sub
mov
dec
cld
shl
pop
aaa
data16
add
mov
sbb
idiv
mov
cwde
repnz
inc
mov
bound
cld
cmp
ret
ret
sbb
cwde
inc
fistp
(bad)
mov
or
pop
xchg
sbb
fdiv
daa
inc
mov
and
in
jp
(bad)
mov
adc
pop
jno
sub
xchg
xchg
mov
dec
arpl
dec
js
jns
add
ins
and
inc
cmpps
push
sub
sub
adc
and
add
mov
ror
or
inc
xor
ja
es
iret
es
js
push
xchg
inc
xor
ret
int3
push
ret
mov
movs
cmps
cmp
cdq
mov
out
mov
outs
xchg
aas
push
dec
and
test
and
popa
jp
test
mov
lea
mov
(bad)
sub
cwde
pop
(bad)
cld
adc
or
and
add
loope
sbb
js
(bad)
in
sbb
xchg
aas
gs
dec
jae
sub
in
fs
cmp
(bad)
or
loope
cmp
pop
sbb
dec
dec
in
adc
sbb
adc
jbe
dec
lahf
cmc
inc
mov
ins
jp
or
test
retf
bound
pop
(bad)
clc
cmp
mov
dec
pop
out
push
(bad)
rcr
mov
loopne
or
(bad)
repz
or
xor
xchg
aaa
bound
data16
aas
inc
jmp
lea
jnp
les
(bad)
loope
sub
mov
fadd
xor
bound
enter
popa
or
movs
js
push
sbb
jnp
push
cwde
mov
push
test
adc
mov
mov
ret
adc
mov
jle
or
ds
mov
scas
adc
enter
adc
cmp
pop
pop
sbb
ret
les
inc
xor
and
out
iret
sti
mov
jns
push
aam
js
and
mov
popf
mov
call
push
xchg
rcr
mov
lock
push
xchg
pop
xor
repz
test
daa
pop
add
or
sub
jecxz
adc
xchg
inc
or
xor
ins
jg
fld
arpl
gs
je
int
adc
fwait
dec
mov
jle
xchg
mov
(bad)
leave
movs
popa
or
mov
inc
add
cdq
push
adc
push
xchg
les
aaa
mov
sbb
and
xchg
div
sbb
gs
mov
inc
test
popf
lea
loopne
ins
mov
push
dec
(bad)
movs
cmp
mov
aas
pop
mov
mov
je
sbb
add
push
xor
and
xor
sub
and
mov
fimul
jo
ret
and
call
loopne
cmc
fwait
adc
arpl
cmps
sahf
in
fcom
add
cmp
mov
cdq
es
cmp
xor
xchg
inc
xchg
xor
jmp
jle
jecxz
rcr
jmp
stos
call
lods
in
bound
lods
or
lock
xchg
dec
loopne
call
jo
or
xor
pusha
loopne
aad
or
sub
jno
and
or
xchg
mov
dec
mov
ss
nop
cmps
nop
xchg
jge
or
sub
iret
rcr
rep
or
ret
add
clc
dec
loope
xchg
sti
sbb
pop
jbe
inc
mov
rcl
pop
int3
and
push
jnp
and
sub
or
data16
call
leave
xchg
mov
call
sbb
dec
mov
fadd
inc
mov
aam
leave
push
dec
fnstcw
and
retf
fst
inc
pop
mov
mov
sbb
fcom
js
in
dec
cdq
(bad)
dec
lods
xchg
cwde
mov
test
push
xchg
sub
cmp
dec
lahf
ret
addr16
xchg
sub
test
test
push
inc
add
in
dec
icebp
xor
test
sub
xor
out
jae
push
or
add
call
mov
xchg
mov
in
test
arpl
sar
call
ins
and
mov
pop
fcomp
loopne
mov
call
dec
iret
sub
cmps
dec
sub
dec
stos
aaa
dec
adc
sbb
sub
stos
pop
push
test
pop
test
jecxz
push
cdq
ss
arpl
mov
mov
jmp
aaa
mov
cmp
sbb
loopne
cmp
adc
sub
enter
ret
mov
mov
sub
inc
add
retf
dec
nop
aam
cli
sub
inc
fnstenv
mov
sbb
mov
add
shl
ins
retf
sbb
scas
adc
gs
jl
adc
xchg
cwde
ror
mov
out
or
int3
jbe
mov
push
inc
xchg
aaa
shl
popf
dec
mov
lods
mov
adc
lock
out
adc
inc
xchg
pop
dec
bound
fwait
bound
lods
ror
inc
cmp
and
and
push
(bad)
jb
mov
ror
xchg
bound
lods
and
sub
adc
mov
ret
lahf
inc
jbe
les
lock
jnp
xchg
ret
jmp
xor
inc
fprem
push
or
inc
push
lock
dec
mov
popa
shr
sbb
and
sub
popa
jmp
mov
daa
mov
dec
iretw
cmps
push
add
inc
into
mov
xor
mov
mov
and
inc
test
add
xchg
xor
ret
lock
xchg
xchg
call
inc
fwait
ds
xchg
xor
dec
test
movs
data16
call
inc
inc
pop
dec
cld
sub
push
dec
(bad)
aad
cmp
sub
cmp
loopne
mov
fdiv
shr
stc
sub
test
sbb
mov
test
mov
shl
les
ins
xchg
mov
push
bound
dec
fwait
loope
mov
inc
rcr
adc
es
in
jo
(bad)
popf
xchg
jp
or
add
mov
mov
and
sub
test
mov
rcl
fmul
or
sbb
test
cmp
leave
mov
xchg
dec
inc
and
fnstenv
movs
xchg
stos
push
div
pop
jge
xor
cmp
adc
rcr
ss
or
fbld
mov
ret
aad
retf
(bad)
xor
dec
scas
mov
inc
stc
sub
sbb
lods
mov
ins
jbe
sub
and
jmp
jb
popf
cld
pop
or
add
loope
fld
imul
aas
lock
ret
cmp
sbb
inc
aas
psrlq
mov
shl
adc
pushf
inc
enter
mov
adc
mov
and
bound
push
ins
or
pushf
sub
sbb
std
or
fistp
daa
sub
push
adc
or
inc
sbb
adc
xchg
adc
fs
ins
mov
push
imul
inc
push
xor
aad
aaa
call
mov
or
int3
das
push
adc
dec
xchg
jle
addps
sub
fadd
ins
pop
sbb
inc
dec
xchg
push
(bad)
sub
jnp
shl
sti
sub
sbb
inc
mov
cmp
push
xchg
out
xor
stos
(bad)
mov
pop
test
sub
jl
nop
loopne
mov
and
(bad)
(bad)
or
push
mov
and
cli
adc
add
dec
mov
call
test
and
add
loope
pop
enter
stc
xchg
mov
adc
(bad)
loope
js
test
cs
test
add
nop
jmp
cmp
xchg
push
cmp
mov
push
ficomp
mov
dec
and
cmp
int3
dec
cmp
sbb
dec
mov
and
cmp
daa
sub
adc
inc
cmp
adc
mov
adc
xor
add
fxrstor
sbb
mov
and
mov
and
inc
dec
bound
call
dec
jp
or
mov
mov
stos
inc
and
lds
ds
fs
mov
es
std
sbb
push
cmp
sub
jne
dec
ss
push
bound
cmp
lock
dec
sub
mov
imul
(bad)
repz
pusha
xchg
xchg
mov
push
mov
fs
add
adc
dec
int
pop
jbe
mov
dec
or
sbb
ds
inc
adc
dec
and
arpl
xor
fcmove
fimul
pushf
das
inc
stos
pop
adc
jae
movs
sub
or
pop
bound
xor
mul
xlat
(bad)
and
add
aam
pushf
int
mov
cmps
jecxz
bound
dec
(bad)
repnz
fwait
cmp
loope
xor
arpl
ror
into
mov
pop
jae
imul
mov
sub
iret
sub
mov
jbe
ss
push
movs
push
pop
sbb
and
test
mov
popf
ret
mov
ins
inc
std
sbb
xchg
or
push
pushf
mov
mov
cwde
data16
fwait
sub
xor
iret
jmp
test
jo
sbb
nop
and
inc
and
es
mov
ins
dec
or
jp
rcl
mov
xchg
xchg
cmovb
add
xchg
jmp
push
and
mov
inc
mov
fisubr
sub
push
add
imul
pushf
sbb
imul
push
sub
inc
jns
test
(bad)
clc
xchg
adc
or
pop
adc
je
mov
push
mov
neg
ret
daa
xchg
call
dec
push
daa
or
mov
outs
or
movs
and
js
jp
mov
sub
(bad)
es
std
sbb
loope
es
popf
adc
or
push
mov
lea
jg
in
fisub
inc
mov
aaa
pop
mov
ins
fdiv
les
sbb
andps
add
adc
xchg
fwait
push
aaa
inc
jb
xchg
dec
mov
arpl
and
call
xor
xchg
xchg
test
mov
or
lahf
mov
dec
xchg
js
and
mov
ins
sbb
cmc
mov
daa
add
pop
sbb
mov
adc
xor
jg
cmps
sbb
popa
outs
mov
jl
hlt
nop
push
push
adc
fs
or
adc
adc
div
mov
adc
sbb
cli
xor
adc
or
mov
mov
int
and
dec
leave
sbb
dec
adc
retf
fsub
inc
test
inc
mov
inc
mov
mov
and
fld
cs
sbb
inc
cmp
or
ss
aas
mov
cs
dec
sahf
rcl
outs
pop
rcl
lods
dec
adc
pop
cmps
jl
jp
shl
test
es
xor
add
or
jno
xchg
inc
inc
mov
loop
in
js
js
bound
clc
les
inc
shl
daa
dec
retf
and
pushf
mov
xor
xchg
rcl
leave
gs
dec
lods
push
das
dec
xchg
loope
xchg
push
xor
push
mov
addr16
call
adc
adc
aas
dec
push
push
out
cmps
dec
pop
inc
icebp
xchg
sub
inc
int3
sub
mov
loopne
loope
call
push
mov
mov
xor
cmp
adc
arpl
inc
inc
fs
xor
leave
mov
jno
es
and
lods
xchg
mov
sub
cmp
or
adc
jle
fsubr
pop
adc
jg
mov
mov
cmp
cmps
xchg
inc
lock
(bad)
inc
inc
lahf
inc
nop
test
fwait
sbb
xor
and
and
popa
xchg
iret
inc
xor
sbb
rcl
xchg
pop
(bad)
cwde
xchg
dec
jmp
xchg
dec
mov
mov
adc
inc
jae
xor
or
cmp
aas
mov
push
sub
or
mov
and
mov
gs
sub
or
inc
inc
or
dec
pushf
cmp
adc
sub
test
inc
cmps
ins
dec
push
(bad)
pushw
test
inc
sar
xor
fsub
push
test
xchg
jl
test
cmp
push
retf
pop
lock
fcmove
test
adc
les
dec
push
mov
test
(bad)
or
leave
aam
xor
xor
or
cwde
jo
sub
mov
inc
pop
rcl
out
adc
test
push
popf
or
pop
inc
popa
mov
xor
adc
cwde
dec
mov
cwde
test
into
xchg
mov
(bad)
in
ret
dec
pushf
popa
push
push
rcl
xor
mov
mov
sub
fldenv
jbe
xchg
dec
fsub
hlt
pop
cmp
test
mov
or
adc
popa
ins
fimul
mov
adc
jo
pop
int3
cwde
mov
xor
inc
jge
push
mov
test
mov
cli
dec
add
scas
movs
shl
xor
nop
inc
dec
mov
dec
icebp
and
ins
aas
xchg
xor
aas
xchg
mov
mov
iret
pop
push
mov
mov
les
cmps
ins
push
dec
nop
and
push
mov
ficomp
ret
je
mov
bound
cli
aaa
xor
or
jle
push
(bad)
in
test
mov
inc
shl
mov
rcr
int3
ss
dec
fdivr
fldcw
sub
sub
sub
adc
xor
sti
adc
push
daa
inc
mov
fmul
ror
(bad)
daa
call
mov
sahf
(bad)
mov
jge
jnp
xor
call
enter
inc
sbb
lahf
arpl
push
test
and
sar
lds
xor
xchg
and
dec
or
and
or
pop
and
sbb
or
test
(bad)
fiadd
or
add
add
add
add
adc
pushf
push
mov
inc
(bad)
fcom
in
daa
jnp
jmp
mov
push
dec
mov
inc
push
jge
es
or
jmp
cmps
scas
(bad)
test
mov
and
or
xchg
psubusw
aaa
loopne
mov
cli
pop
add
mov
add
retf
data16
or
icebp
push
outs
out
adc
jne
test
mov
jecxz
out
push
dec
mov
jno
sar
bswap
cmps
mov
popa
rcl
divps
les
or
sbb
imul
push
loop
and
(bad)
cmc
jb
mov
fnstcw
(bad)
popa
xchg
test
mov
add
add
lods
fadd
sar
cmps
cwde
adc
push
dec
ret
mov
sbb
sahf
std
icebp
or
jnp
movs
aad
dec
push
xchg
outs
push
push
cmps
sbb
iret
rcl
sbb
out
mov
ror
sub
xor
ss
in
or
pop
and
mov
mov
dec
je
and
mov
push
ror
pop
inc
sar
stos
xor
pop
ja
push
xchg
and
dec
jo
xor
(bad)
push
push
push
pop
fst
inc
adc
ret
push
add
cmp
ret
sbb
cmp
push
dec
inc
mov
out
(bad)
into
retf
jae
mov
xchg
jae
mov
dec
jne
mov
(bad)
push
aas
lea
dec
nop
scas
pop
or
pop
data16
cmps
daa
and
aam
ja
sub
(bad)
xchg
mov
or
mov
bound
pusha
rcl
lock
test
bound
fidiv
inc
test
push
loop
adc
inc
mov
(bad)
scas
xlat
jne
inc
test
dec
push
fdiv
mov
jge
popa
fild
ret
jno
mov
inc
jecxz
out
sbb
pop
ins
mov
push
mov
inc
fild
out
cmp
sub
shl
les
cmps
sub
in
shl
add
addr16
std
cmp
fmul
mov
rcr
sbb
(bad)
jp
mov
xchg
adc
mov
dec
pop
aad
mov
mov
push
mov
jmp
je
pop
fisttp
push
js
mov
dec
test
xchg
mov
pop
(bad)
cwde
lea
stc
cmp
push
into
inc
ds
mov
mov
cdq
jmp
ret
push
test
add
adc
cmp
mov
ins
and
popf
lahf
fist
enter
jo
lea
sub
aaa
add
lds
pop
(bad)
je
mov
xor
cmps
cli
pop
imul
cmp
pop
(bad)
dec
jo
sub
mov
(bad)
in
das
sbb
lock
fadd
inc
arpl
pop
xchg
ja
cmp
test
ds
ror
out
cmp
and
call
call
jo
int
sub
scas
les
in
fsubr
sbb
mov
or
ss
jb
arpl
not
lods
fidivr
leave
jg
inc
clc
pop
ds
jae
dec
dec
mov
add
mov
fsub
mov
mov
test
cmp
nop
scas
adc
jne
or
or
in
cmp
rcl
lods
paddw
push
jle
xchg
mov
xchg
popf
repnz
add
xchg
ja
or
fsub
hlt
test
and
mov
leave
mov
clc
dec
out
adc
jae
out
xor
xchg
cdq
lea
xchg
cmp
sub
inc
cdq
int
dec
mov
sbb
sar
test
pop
rcr
loopne
mov
add
push
test
sahf
ror
rcr
in
ins
jmp
outs
inc
jbe
(bad)
or
pop
jp
jmp
inc
or
jo
pop
fiadd
(bad)
xor
xor
mov
xchg
push
push
or
les
popf
cmp
cs
sub
adc
repnz
clc
jge
xchg
jno
inc
fidiv
sbb
outs
(bad)
adc
mov
fadd
sbb
leave
xchg
xor
int
xor
fmul
or
neg
test
and
outs
nop
fcmovnb
and
mov
xor
bound
jl
icebp
in
xchg
inc
mov
mov
xchg
mov
xchg
add
je
fld
sub
cmps
cmp
aam
stos
push
ss
mov
pop
mov
xchg
add
fisub
aas
and
dec
bound
sbb
push
out
and
das
fcmovnu
cld
xor
ja
add
sbb
(bad)
outs
adc
test
dec
lods
or
out
retf
lea
jl
inc
sbb
retf
adc
fsub
push
loopne
mov
mov
movs
sbb
push
retf
inc
xor
in
iret
hlt
cmps
mov
(bad)
cli
dec
les
cli
cli
add
(bad)
inc
mov
test
push
jae
pop
(bad)
shr
inc
xchg
imul
call
xchg
jbe
(bad)
or
in
jae
ins
and
fmul
xor
or
push
adc
test
xor
sbb
mov
in
clc
outs
jns
in
dec
icebp
out
bound
in
hlt
inc
jb
and
das
mov
cmp
push
sti
lds
cmc
rcr
push
pushf
and
push
hlt
inc
cmp
xor
jns
adc
mov
fdivr
inc
inc
jp
or
iret
leave
pop
and
in
dec
push
mov
xor
jecxz
test
push
fild
sbb
movs
jae
pusha
ficomp
outs
mov
movs
jecxz
inc
mov
mov
sbb
push
push
xor
sub
inc
or
cmps
and
mov
cmp
ds
xchg
add
mov
mov
push
jnp
inc
jl
sbb
jb
mov
xchg
leave
add
jo
mov
pop
pop
aam
ins
loope
stos
aaa
jno
iret
fdivr
mov
fsub
inc
cmps
and
mov
push
xchg
mov
dec
mov
jle
fsub
xor
mov
arpl
xchg
lahf
sbb
mov
mov
test
mov
inc
sbb
in
pop
cwde
jp
out
mov
es
xor
inc
and
mov
adc
(bad)
cmps
out
out
sub
adc
xor
xor
mov
aaa
int
jbe
sti
sbb
jmp
cmp
ins
shl
mov
sub
mov
fstp
xchg
jmp
data16
clc
stos
xor
test
adc
test
jne
and
rcr
out
xchg
adc
sbb
int3
fidiv
ins
loope
leave
jbe
retf
ins
add
and
push
mov
aas
xchg
movs
pop
ror
je
mov
jmp
int
add
data16
stc
mov
pop
push
aaa
pop
or
mov
jo
push
mov
cmp
inc
test
imul
dec
ficomp
add
dec
shl
enter
mov
ss
mov
dec
sbb
dec
sti
sbb
shl
stos
int
mov
(bad)
jecxz
sbb
add
in
mov
icebp
mov
(bad)
and
push
test
sub
ins
pushf
mov
test
dec
inc
enter
jb
mov
test
ror
xor
mov
mov
inc
enter
xor
lods
mov
loopne
mov
fcmovnb
movs
sbb
sub
enter
add
fbld
adc
addr16
mov
jno
jp
and
jb
pop
pop
xor
mov
bound
shl
sub
push
ret
lods
stos
stos
mov
push
and
adc
mov
clc
repz
or
jg
stos
jmp
push
test
jge
cdq
cld
inc
mov
rcr
gs
sub
out
mov
mov
addr16
mov
xchg
adc
fdiv
and
imul
in
add
xor
(bad)
movs
push
push
mov
or
inc
rol
mov
ins
das
fdivr
ds
mov
add
xchg
jo
jbe
jp
lods
movs
adc
jno
and
neg
pusha
add
shr
ret
jns
bound
stos
fwait
push
rcl
fwait
(bad)
repz
xor
sub
pusha
shr
xchg
sbb
cmp
lea
enter
xchg
mov
cmp
mov
xchg
cwde
pop
retf
cmp
ret
test
aaa
out
mov
fs
xlat
sahf
ja
sub
or
iret
adc
dec
pop
pop
pop
lds
add
mov
jecxz
sar
or
daa
enter
test
(bad)
xchg
das
adc
(bad)
push
pop
into
sar
mov
adc
add
add
add
add
add
add
add
add
add
adc
xor
push
xor
xor
aas
adc
int3
daa
mov
adc
or
dec
xchg
shl
sbb
aaa
inc
or
pop
push
pop
mov
or
shr
push
inc
inc
adc
dec
les
cwde
jg
or
inc
push
xchg
sub
shr
inc
push
sub
lock
sahf
test
adc
lods
mov
loope
xchg
jo
mov
adc
xchg
sub
(bad)
jne
cdq
aad
and
je
fwait
mov
sar
add
push
mov
mov
and
dec
mov
mov
inc
mov
fld
xor
sar
imul
push
pop
aad
clc
push
mov
dec
xchg
sbb
adc
or
push
loop
daa
inc
mov
xor
ss
inc
push
inc
sbb
pop
retf
clc
test
mov
jl
movs
add
pusha
test
loope
hlt
pop
adc
imul
test
and
inc
or
das
xchg
mov
cs
sbb
clc
inc
jmp
or
outs
in
sbb
or
lock
mov
push
loope
inc
cwde
repz
mov
dec
pop
jno
(bad)
dec
bound
cmp
inc
arpl
push
das
iret
popa
mov
fsubp
add
mov
xchg
sbb
and
push
jp
pop
arpl
loope
or
dec
xchg
dec
js
xor
shr
mov
dec
(bad)
push
jb
call
dec
pop
adc
mov
aas
shl
sbb
push
enter
popa
sbb
rol
pop
movs
repnz
sbb
nop
mov
stos
fs
loope
mov
shl
cli
push
mov
sbb
bnd
and
push
cmp
lods
div
cmp
push
xor
mov
lea
fdivr
add
dec
mov
scas
or
rcr
xchg
xor
(bad)
sub
dec
aaa
and
push
ins
or
ret
test
and
mov
adc
(bad)
push
push
fidivr
dec
or
ss
push
mov
and
sub
xor
push
push
xchg
and
test
sbb
sbb
sbb
or
xor
push
sub
xor
pop
or
pop
inc
lea
sub
ins
hlt
lock
cs
cmp
or
mov
mov
pop
lods
and
call
dec
jnp
idiv
repnz
mov
adc
add
shr
or
mov
sub
mov
mov
mov
inc
jmp
in
mov
xor
pusha
mov
punpckhwd
aas
loopne
jae
test
pop
pmuludq
call
sub
add
jne
push
push
xchg
data16
xchg
cmc
and
lea
inc
cmp
inc
inc
xchg
loop
jbe
gs
je
sub
mov
stos
xor
shl
(bad)
in
retw
and
call
fild
or
lods
jno
or
mov
nop
jp
adc
xchg
pop
xor
cmps
(bad)
push
in
cld
dec
inc
mov
xchg
fistp
inc
test
lods
and
shld
punpcklwd
fbld
xor
movs
mov
ret
xchg
mov
jg
add
or
mov
xchg
inc
sub
test
xor
rcr
mov
sub
pop
leave
sbb
sbb
xor
or
mov
mov
hlt
jle
and
xchg
(bad)
mov
mov
loopne
and
arpl
or
test
inc
push
pop
imul
add
or
xor
arpl
pop
(bad)
ins
fldenv
push
jle
jge
adc
mov
je
mov
dec
mov
and
test
inc
and
in
mov
mov
and
outs
inc
std
sbb
cmp
inc
push
push
call
cmp
jne
xchg
mov
xor
fcomp
arpl
hlt
inc
xchg
adc
rcl
es
arpl
pop
nop
sbb
ret
scas
aas
test
inc
xor
xor
mov
es
sub
or
sbb
or
in
js
pop
push
int
mov
cmp
mov
outs
jo
jle
retf
inc
aam
sbb
cmp
xchg
pop
push
inc
mov
outs
inc
test
sti
out
xor
push
mov
leave
push
xchg
loopne
je
xchg
iret
(bad)
mov
(bad)
lahf
das
loope
cmp
or
dec
pushf
or
mov
(bad)
cdq
inc
fs
mov
lock
adc
arpl
adc
mov
loope
jl
mov
and
inc
jb
in
inc
push
or
rol
les
cmp
inc
ror
mov
xchg
jbe
sub
aas
add
inc
lahf
or
xchg
cld
popa
or
(bad)
mul
dec
call
bound
lds
(bad)
sar
dec
(bad)
mov
jbe
mov
fidiv
shl
aam
adc
movs
lock
inc
lahf
add
and
pop
xor
popa
das
or
cmps
push
loopne
movs
cmp
popa
std
hlt
ss
dec
je
cmps
and
and
cmp
shr
mov
or
clc
push
or
push
retf
(bad)
push
pop
jne
jnp
push
adc
call
xor
jge
shr
inc
cwde
nop
(bad)
call
pop
scas
push
xor
pop
pop
repnz
mov
pop
cmp
mov
push
push
pop
xchg
pop
or
lea
lds
clc
ja
mov
scas
jno
popf
ret
rol
movs
mov
xchg
inc
fild
xor
lock
idiv
lods
aaa
je
shr
adc
(bad)
bound
aas
push
or
imul
and
enter
cmps
inc
mov
pop
icebp
pop
call
les
lods
lea
int
adc
add
mov
ss
movs
es
jg
ins
inc
arpl
enter
or
pop
sti
imul
inc
stc
lea
xor
push
jmp
(bad)
hlt
push
xchg
movs
dec
rcl
pop
add
and
bound
inc
ret
xor
xor
mov
ror
xchg
sub
xchg
add
xor
(bad)
dec
ds
inc
cwde
inc
mov
jecxz
(bad)
pop
xchg
fmulp
movs
(bad)
stos
cld
push
push
xchg
push
mov
arpl
cmp
sbb
aam
jb
sbb
mov
ret
ret
aas
loope
and
rol
mov
sbb
and
aaa
call
stos
or
jge
add
leave
popf
xor
clc
(bad)
dec
mov
(bad)
fcomp
xchg
push
pop
js
adc
sbb
icebp
cmp
xlat
mov
fstp
popa
lahf
call
into
(bad)
sbb
push
jmp
adc
bound
adc
lods
shl
gs
rcl
(bad)
sbb
and
sbb
inc
inc
mov
mov
ins
sbb
das
and
pop
cmp
xchg
loop
or
test
ins
movs
xchg
ins
out
adc
ins
call
in
outs
jo
inc
xchg
outs
ret
fadd
rol
pop
(bad)
lods
pop
fild
cs
sub
cld
sub
ins
xor
xor
fisub
lea
je
mov
imul
dec
lods
push
cs
mov
int
(bad)
ins
inc
xor
mov
mov
lock
and
jo
xchg
lea
std
movs
xor
push
rcl
out
or
les
xchg
lock
inc
sub
test
push
or
push
into
dec
and
cmovne
mov
adc
rcl
(bad)
cmc
aas
test
shl
sbb
or
(bad)
or
and
rol
mov
adc
mov
es
mov
inc
push
jo
mov
in
sbb
add
les
push
mov
call
and
call
icebp
jg
inc
add
inc
call
jo
retf
std
inc
push
or
out
dec
test
and
pop
test
xchg
lock
gs
mov
jnp
add
hlt
mov
dec
or
xchg
or
(bad)
iret
loopne
clc
mov
or
add
stc
repz
pusha
lds
and
mov
dec
icebp
mov
inc
fcom
je
push
jge
lahf
jo
mov
rcr
cld
scas
cld
iret
mov
js
movs
jecxz
sbb
bound
(bad)
clc
cdq
test
ss
(bad)
in
bound
shl
fcmovb
test
imul
xor
ret
(bad)
sbb
and
adc
les
popa
mov
(bad)
xor
cmp
(bad)
xchg
cmp
leave
dec
inc
xchg
loopne
scas
inc
sbb
call
push
cdq
jmp
push
sub
es
xchg
dec
fsubr
adc
aaa
lods
or
sub
xchg
test
sbb
jg
mov
lock
dec
(bad)
mov
pop
cwde
repnz
sahf
cmp
adc
inc
ins
test
and
ss
or
inc
push
inc
or
nop
(bad)
xor
call
rcr
lock
dec
push
sbb
xchg
adc
add
mov
shl
add
ret
data16
inc
jmp
add
fwait
test
sar
ret
es
ret
sbb
or
mov
mov
mov
mov
add
mov
mov
js
movs
pop
inc
stc
loopne
add
fxch
jp
mov
mov
mov
mov
xor
sbb
sbb
mov
pop
popa
test
sub
rcr
jg
shr
in
mov
test
ss
cld
mov
test
outs
loop
inc
or
sub
lock
pop
sbb
aas
dec
ret
pusha
sar
xor
xlat
ret
push
mov
jp
pop
test
nop
xchg
inc
nop
ja
mov
in
cmp
pop
mov
adc
sbb
aam
mov
mov
ins
dec
hlt
out
push
hlt
dec
call
loopne
push
and
mov
jg
lea
sar
add
jo
and
ins
fnsave
mov
sub
shl
inc
jp
rcr
inc
and
fidivr
(bad)
test
adc
ror
(bad)
jecxz
call
inc
fs
cld
(bad)
push
jmp
es
movs
ss
and
test
push
dec
or
xchg
or
and
pop
xchg
ret
shl
cmps
dec
mov
mov
xchg
xor
add
adc
add
add
add
add
add
add
add
add
add
adc
xor
inc
push
popa
xor
fiadd
or
add
add
adc
ja
fwait
int3
lock
sbb
and
popa
sar
aas
icebp
pop
fcmovnb
in
jno
icebp
fxch
push
dec
pop
in
jo
xchg
hlt
jo
test
ja
fisub
lds
loope
out
arpl
inc
ins
mov
mov
ds
jae
push
jbe
int3
inc
stos
js
fucomp
push
iret
js
mov
pop
xchg
jmp
jne
int
mov
fimul
in
pop
jae
out
xchg
ret
or
jmp
mov
fwait
aaa
fwait
jns
js
add
sub
ins
dec
movs
mov
mov
mov
imul
fucom
sti
(bad)
stos
mov
neg
xor
js
(bad)
cs
mov
push
jno
mov
mov
pusha
int
aaa
mov
push
fisub
pushf
ja
xchg
push
mov
xchg
dec
icebp
mov
mov
jno
ins
pop
gs
mov
jecxz
out
mov
leave
loopne
outs
int
stc
pusha
mov
fstp
test
mov
mov
cmp
aas
mov
jp
jl
pop
cmp
call
(bad)
hlt
xchg
shl
into
das
(bad)
lahf
and
cdq
(bad)
(bad)
(bad)
shl
test
mov
scas
into
fistp
sbb
push
clc
pop
mov
(bad)
outs
fidiv
mov
movs
loopne
stc
rcr
or
cmp
in
gs
(bad)
fiadd
ret
cmp
(bad)
mov
mov
das
jae
pop
cmps
shl
nop
pop
jbe
mov
es
cs
sbb
leave
xor
adc
adc
repnz
sbb
pop
movs
enter
(bad)
ins
sbb
es
mov
cmp
cmp
cmp
retf
mov
mov
adc
ror
jno
jmp
inc
mov
into
cld
mov
xor
(bad)
stc
jbe
in
pop
aad
adc
fldenv
in
jb
nop
lds
in
jb
rsqrtps
idiv
popa
(bad)
xor
cs
clc
enter
mov
cmp
arpl
jns
loopne
jns
inc
or
fld
shl
stos
jne
bound
neg
cmps
shl
mov
cmpxchg
arpl
out
(bad)
leave
lea
and
xor
pop
sub
fidiv
ret
cmp
cmc
jg
dec
cmp
mov
fs
xor
ja
loop
fcomi
pushf
jmp
outs
adc
pop
out
xor
dec
push
ror
inc
cmp
pop
rol
xor
lock
sbb
inc
ss
mov
fs
cmp
adc
cmp
add
out
add
add
out
pop
or
add
push
(bad)
push
retf
sbb
mov
mov
dec
pop
dec
mov
xor
pop
jbe
movs
adc
adc
inc
mov
jmp
aas
add
sbb
jnp
adc
fstp
pop
ins
or
call
inc
test
in
aad
int
jo
dec
jmp
push
fisttp
mov
pop
(bad)
xlat
cdq
sbb
arpl
fsub
mov
ds
cmp
repnz
(bad)
shl
(bad)
int3
mov
enter
or
mov
jle
movs
cmp
mov
mov
xchg
shl
jno
inc
mov
jbe
ss
mov
sbb
xor
mov
cmp
dec
fsub
mov
mov
dec
mov
add
add
aam
mov
out
(bad)
jg
mov
add
push
addr16
dec
ret
stos
stos
cmp
iret
nop
pop
jnp
mov
mov
ja
xor
sub
call
jl
pop
sbb
mov
mov
and
cli
retf
aaa
mov
out
aaa
(bad)
clc
ja
jmp
fisub
inc
movs
inc
addr16
mov
sub
xchg
repnz
pop
ret
into
jne
xchg
mov
mov
fwait
popw
mov
movs
xor
cmp
or
jo
out
repz
(bad)
add
es
ret
call
jle
xchg
xchg
pop
leave
js
call
or
fsubr
jecxz
(bad)
xor
xor
aad
sbb
dec
ror
enter
ds
push
dec
(bad)
js
dec
jnp
int3
xor
xor
jo
cmp
mov
inc
or
fild
aam
jne
fs
jp
pushf
sbb
push
inc
rcr
or
lahf
xchg
iret
mov
gs
(bad)
iret
outs
ffreep
fld
repnz
out
lods
jmp
add
popf
mov
push
mov
aad
jmp
test
jo
mov
jno
daa
jns
mov
push
cmp
sub
and
sti
ds
cdq
(bad)
pop
leave
(bad)
fwait
shl
popa
(bad)
out
cli
dec
imul
mov
fsubr
push
scas
std
inc
and
xor
in
push
(bad)
(bad)
sub
mov
or
mov
jge
mov
fwait
outs
cdq
das
sbb
dec
movs
sar
pop
mov
js
mov
retf
add
ins
outs
test
sbb
pop
mov
gs
xchg
xchg
mov
enter
js
outs
xor
ins
nop
jne
aam
mov
or
mov
stc
and
sete
xchg
leave
xchg
ins
dec
pop
pop
mov
pop
(bad)
inc
adc
adc
arpl
mov
loope
mov
push
inc
sbb
inc
ds
xchg
out
push
neg
fist
cdq
js
mov
test
xlat
fnsetpm(287
sub
xor
xchg
xlat
jle
aam
inc
cmc
push
push
xor
mov
nop
loopne
popf
loope
sar
ins
mov
mov
and
sbb
fbstp
test
sbb
movs
call
in
mov
jno
cs
shl
lahf
dec
pushf
pop
movs
jno
leave
ja
or
sbb
inc
ja
jns
sahf
stc
hlt
mov
into
clc
in
inc
and
sahf
(bad)
jb
jo
or
mov
xchg
mov
jb
sti
push
mov
pop
push
mov
jmp
jnp
mov
adc
fild
sbb
adc
jns
leave
repz
xor
pop
loope
jo
mov
sub
push
out
sbb
test
addr16
aaa
movs
pushf
or
sahf
xchg
out
jl
add
cli
cmp
test
sar
mov
dec
dec
jnp
cli
pop
sub
outs
test
out
cld
xchg
adc
jl
jns
shl
xchg
(bad)
jl
out
retf
aam
cmc
and
mov
cmp
outs
lods
jmp
cmp
add
movs
jmp
in
loope
in
out
(bad)
lea
add
jg
mov
(bad)
adc
(bad)
stos
push
add
mov
loop
mov
adc
fsub
jb
sub
leave
mov
mov
stos
jle
or
out
jbe
or
pushf
or
(bad)
cs
mov
pop
cmp
pop
aad
rcr
push
shl
pop
das
aaa
mov
jnp
cmp
sbb
inc
mov
xadd
pop
shl
xor
pop
test
sub
dec
fwait
adc
adc
xchg
or
lahf
and
out
cmc
sar
jno
sub
fld
xchg
ins
loopne
sbb
sti
ds
in
pushf
icebp
xchg
dec
pop
retf
loop
stos
dec
push
xor
in
in
xchg
push
iret
aam
in
adc
xor
repz
retf
push
fdiv
or
(bad)
pushw
mov
or
xchg
adc
dec
mov
retf
bound
out
xchg
fstp
mov
mov
inc
sbb
addr16
addr16
lods
cdq
fidivr
sbb
mov
ss
mov
addr16
lods
jg
push
sbb
pushf
cmp
cmp
(bad)
mov
jge
pop
pop
push
iret
fcmovnb
jmp
cmp
inc
ins
repnz
pop
retf
mov
push
ja
mov
ja
not
repnz
mov
cmp
outs
pop
mov
xor
(bad)
div
sbb
out
pop
out
jae
les
in
sbb
push
fnstcw
jno
mov
stos
dec
repnz
lods
fmulp
retf
push
lods
xchg
enter
shr
sbb
retf
mov
mov
test
jo
out
and
xchg
inc
mov
jo
and
loope
out
aad
dec
int
lods
jmp
movq
dec
test
bswap
add
dec
ss
loopne
les
imul
in
mov
or
mov
push
icebp
adc
(bad)
and
sar
sbb
push
jb
paddsw
push
add
shl
xchg
mov
(bad)
icebp
ret
cmp
clc
push
jg
fcomp
fcmovne
sahf
mov
and
call
in
cmp
jecxz
fbld
addr16
jb
jns
mul
fidivr
mov
pop
nop
dec
mov
jo
xchg
inc
push
or
sti
pop
in
aas
rol
scas
lods
mov
neg
aaa
outs
loope
repz
into
pop
xchg
jecxz
xchg
test
fild
inc
div
pushf
sbb
mov
retf
lods
xlat
cmp
cmovne
(bad)
clts
test
icebp
mov
ret
arpl
ficomp
mov
clc
cmp
add
pop
and
loopne
mov
inc
mov
iret
fiadd
aam
fdiv
push
ja
add
cmp
icebp
sti
ds
std
mov
mov
repz
and
mov
cmc
or
test
lock
push
fsubr
pop
pop
aaa
push
fistp
jo
mov
and
int3
cli
movs
sahf
push
push
pop
jle
sbb
sub
jmp
ret
leave
mov
inc
mov
sub
in
adc
xor
pushf
add
fld
sbb
loopne
(bad)
jmp
and
xchg
fldenvw
and
mov
arpl
or
dec
inc
jns
leave
into
icebp
mov
addr16
cli
mov
leave
cwde
retf
and
in
xchg
inc
sbb
xchg
lock
popa
cmp
push
rcl
sub
out
and
sub
xchg
mov
fimul
jns
mov
pop
js
repz
cmp
dec
aas
outs
bnd
(bad)
mov
jae
add
jbe
cld
loop
jbe
inc
daa
test
sbb
pop
fwait
das
cmp
mov
add
and
and
cmp
cmps
outs
imul
xor
jmp
jae
ja
out
aas
cs
cmp
dec
pop
jo
neg
pop
in
jle
addr16
jge
mov
stos
rcr
hlt
lahf
and
not
cdq
mov
idiv
cmp
std
clc
cld
mov
stos
mov
rcr
sti
fs
cmp
(bad)
cld
ficomp
ja
fstp
icebp
mov
add
fist
jae
push
(bad)
icebp
xchg
fnsave
pop
pushf
stos
fsubr
cmp
cmps
ins
mov
mov
push
push
ret
sar
add
into
inc
inc
sahf
pop
data16
mov
lods
out
add
icebp
stc
cmp
pop
mov
(bad)
mov
(bad)
outs
sbb
mov
add
popf
jae
push
scas
and
mov
pmulhw
fld
jno
jge
dec
or
mov
test
sbb
aas
cmp
inc
and
and
bnd
and
cmp
and
cmp
sbb
in
mov
ja
inc
xorps
jecxz
or
sbb
and
clc
ins
mov
inc
add
adc
add
add
add
add
add
add
add
add
add
and
inc
push
popa
jno
xchg
adc
icebp
lock
fiadd
or
add
add
adc
adc
xor
test
add
push
mov
or
fcmove
push
out
adc
loop
cwde
sbb
xor
xchg
lock
retf
push
or
test
movs
sbb
jle
push
push
out
xor
inc
aam
mov
inc
loope
mov
mov
xchg
pop
xchg
arpl
ds
or
adc
arpl
pop
pop
test
cld
test
or
sbb
mov
rol
jecxz
cld
jmp
fild
mov
mov
jl
pop
stc
adc
jns
(bad)
push
adc
dec
out
cmp
retf
and
add
adc
or
int3
stos
xor
rcr
imul
xchg
lods
fisub
in
xor
sbb
pop
inc
and
jle
daa
clc
retf
sbb
push
popa
sbb
cmps
sub
in
add
lods
add
aaa
add
cdq
xchg
retf
test
jmp
(bad)
pop
mov
push
bound
clc
or
clc
sahf
or
ss
or
xchg
rcr
test
aam
into
loop
(bad)
jo
adc
add
fld
fist
test
jmp
out
mov
test
outs
movs
dec
inc
cmp
inc
inc
cmp
xchg
ja
adc
je
arpl
pop
div
mov
cmp
adc
aam
lods
repz
cmp
dec
or
fs
xchg
addr16
ins
fiadd
xchg
jno
or
stc
xchg
(bad)
adc
push
fadd
push
jae
sbb
pop
push
xchg
scas
rol
or
mov
add
xchg
mov
fsub
pop
dec
mov
cmps
js
xor
mov
or
and
nop
pop
jno
aaa
les
xchg
jno
lods
adc
lods
xor
xor
mov
jbe
mov
sub
and
jl
pop
mov
icebp
inc
test
dec
dec
outs
cli
pop
sbb
outs
jl
sahf
jbe
push
cdq
push
fs
stos
push
pop
xchg
push
sub
(bad)
and
xor
retf
xor
gs
ds
aam
pop
out
inc
sub
xchg
cmp
add
imul
and
les
pop
xchg
adc
popa
adc
inc
sub
retf
lods
push
icebp
mov
gs
outs
push
dec
push
pop
out
mov
dec
cwde
jb
jae
jo
call
inc
mov
mov
js
mov
pop
call
mov
in
ja
pop
push
popf
shl
out
xor
dec
ficom
test
adc
xor
mov
inc
fsubr
ret
ja
fistp
mov
aas
fnstcw
fs
inc
adc
dec
aam
add
mov
mov
inc
lods
pop
movs
arpl
mov
test
stc
inc
(bad)
movs
dec
icebp
test
sbb
sbb
jne
cmps
jno
adc
mov
pop
out
and
jmp
mov
push
jmp
sub
pushf
cmp
push
test
cld
sub
imul
cwde
(bad)
pusha
mov
sub
adc
pop
adc
sub
or
rcr
pop
push
mov
test
sub
mov
mov
jo
pop
xchg
mov
ret
inc
xchg
or
arpl
sub
retf
std
(bad)
cld
lahf
dec
cmp
gs
cmp
jle
xchg
push
sbb
pop
rol
scas
push
ins
into
xor
je
xchg
in
test
aad
mov
cmp
sbb
out
add
mov
and
xor
add
add
add
repnz
loopne
cmps
sbb
dec
push
xchg
sbb
push
adc
cdq
mov
cmp
lahf
cdq
mov
sti
xchg
inc
or
into
mov
or
pusha
ret
jo
inc
scas
mov
adc
pop
loop
jecxz
adc
cmp
mov
push
pop
into
imul
cmc
add
data16
je
mov
sbb
sub
ss
aam
nop
sbb
les
je
pop
sub
in
mov
sbb
jno
push
add
test
mov
inc
mov
js
jp
mov
and
aas
xchg
(bad)
adc
push
out
inc
jb
sbb
shl
vpmovusdw
imul
cdq
mov
fsin
inc
adc
dec
sub
test
pop
clc
test
aaa
(bad)
xor
gs
mov
jb
mov
jle
push
cli
mov
or
mov
xchg
jl
sub
jb
jne
push
out
xlat
adc
or
fcom
fidivr
movs
cld
pop
test
outs
push
fstp
mov
and
ret
xchg
add
or
add
js
ffreep
sub
es
xor
lods
aam
mov
loope
lods
push
das
repz
cdq
fcom
sbb
pop
test
lods
iret
mov
call
arpl
push
cs
cmp
(bad)
mov
pop
fsub
std
inc
or
aaa
pop
loopne
out
(bad)
sar
pusha
int3
push
mov
leave
adc
xchg
pusha
fcmovnb
movs
sub
push
clc
and
jmp
cmc
xor
push
cdq
jnp
xor
or
jbe
adc
push
sub
and
test
xchg
cmps
xchg
out
int3
push
gs
mov
xchg
sub
or
mov
cmp
cdq
dec
jge
mov
xor
mov
out
ja
int3
mov
jae
bound
out
sub
mov
inc
xchg
jne
nop
ins
(bad)
fdiv
sub
les
inc
in
sti
and
enter
loop
(bad)
cwde
mov
push
pop
xchg
xor
xor
test
add
push
and
cdq
pop
add
sar
call
add
inc
add
sbb
stos
and
scas
pop
leave
cmp
aam
in
fist
int3
cmc
sub
sub
add
push
fisub
cmp
mov
retf
stc
pop
jmp
es
dec
pop
cmps
shr
adc
jo
test
push
int3
ror
jne
das
js
inc
sbb
pop
push
and
(bad)
push
cdq
cmp
sub
jns
mov
retf
and
fsub
xor
sub
call
sbb
mov
cmps
cmp
add
sub
retf
lods
iret
popa
push
icebp
retf
cmp
pop
aaa
out
xor
aad
and
cdq
daa
adc
mov
pop
fsubp
hlt
mov
jae
adc
or
not
push
mov
dec
pop
loopne
arpl
pop
push
mov
xchg
pop
dec
fdivr
inc
sub
sbb
mov
mov
out
xor
sbb
icebp
xor
sbb
cwde
ds
add
adc
repz
cmps
or
lea
in
mov
mov
fbstp
xor
add
mov
xchg
ret
lods
(bad)
int3
sub
mov
shl
jg
inc
sahf
jmp
add
add
jb
leave
pop
or
fist
mov
xchg
xchg
cmp
add
test
(bad)
pop
mov
xchg
pop
cmp
outs
or
int
adc
in
fstp
lock
push
sbb
push
bnd
cdq
jp
mov
xchg
sbb
push
stos
adc
mov
jg
inc
mov
out
pop
sete
int3
popf
inc
mov
xor
repz
mov
add
sub
push
push
push
adc
fs
xchg
mov
cmp
stos
outs
jmp
push
jp
movs
push
jnp
outs
mov
or
sbb
out
cwde
rol
push
ins
jg
loopne
jo
xor
data16
aad
push
fdivr
mov
push
mov
mov
or
retf
or
aaa
add
adc
xor
sbb
xor
push
outs
mov
hlt
inc
dec
daa
or
rol
fnstsw
or
ja
xor
xchg
cmp
adc
les
xchg
inc
out
aaa
sub
int3
mov
into
aaa
js
pop
inc
mov
ret
mov
mov
push
xchg
aas
ret
sub
(bad)
in
mov
test
and
jae
jno
push
lahf
cmps
push
(bad)
pop
mov
mov
inc
jne
popf
sub
mov
jbe
sbb
sub
inc
sub
ja
cmp
xchg
and
mov
in
test
and
and
pop
push
out
les
test
mov
push
retf
push
xor
push
jg
jne
clc
sbb
jo
dec
xor
push
jns
xor
arpl
xor
cmp
ret
out
sub
mov
retf
sbb
mov
dec
sub
inc
jno
pop
xchg
push
mov
out
and
push
mov
imul
xlat
cdq
inc
jns
fldcw
mov
bound
ins
stc
mov
push
dec
pop
fwait
push
add
adc
xor
sbb
mov
sti
cwde
xrelease
sbb
adc
mov
push
and
clc
lahf
out
ja
test
cwde
xchg
pop
fdiv
lahf
test
cmps
jo
call
push
adc
jecxz
popa
gs
dec
mov
jnp
xchg
fbstp
inc
mov
enter
scas
dec
mov
inc
cmps
adc
cmps
add
sbb
jne
push
jecxz
cwde
fnsave
mov
pushf
xor
addr16
pop
mov
add
popa
cs
(bad)
in
(bad)
sbb
and
sbb
test
push
clc
push
push
int3
jmp
mov
jmp
fwait
xor
mov
adc
and
popf
(bad)
aam
(bad)
inc
imul
inc
out
std
retf
int3
scas
pusha
imul
dec
inc
rol
stos
xchg
in
mov
mov
std
test
adc
dec
sti
lea
sbb
and
xor
es
adc
mov
sbb
outs
pop
push
mov
sbb
inc
scas
xchg
push
add
xchg
int3
push
mov
inc
aam
pop
xchg
lods
pop
dec
les
mov
xor
dec
mov
mov
xor
dec
xchg
inc
and
and
mov
loop
xlat
test
sbb
outs
sbb
jnp
mov
xor
pop
mov
push
push
mov
sahf
loopne
cmp
add
mov
add
cs
lock
ret
xor
jb
test
inc
mov
adc
retf
loop
mov
add
cmp
push
add
aas
cwde
cmp
push
sbb
push
shl
adc
xor
pop
(bad)
jb
push
mov
retf
sub
push
pop
jo
pushf
inc
pop
or
mov
arpl
add
stos
cmc
add
pop
enter
imul
ficom
mov
xlat
push
enter
loop
jge
retf
mov
or
and
inc
js
and
out
add
popa
pop
pusha
(bad)
enter
push
les
les
pop
rol
inc
xchg
stos
aad
jmp
aad
push
sbb
push
ret
and
ins
out
pop
push
add
in
fwait
adc
xchg
inc
jmp
xor
jle
lods
out
ret
cmp
mov
push
gs
push
push
and
popf
imul
jmp
aaa
adc
push
fwait
mov
ds
pop
test
rcr
pop
out
jb
mov
jo
cwde
adc
mov
inc
gs
dec
add
call
and
test
mov
ins
int3
adc
ja
mov
cmp
in
add
sbb
push
dec
jmp
sub
aaa
adc
dec
gs
mov
popa
int
pop
pop
push
retf
or
mov
outs
fadd
push
add
sub
xchg
arpl
push
cli
std
dec
sbb
cmps
pop
jo
mov
push
jecxz
sub
adc
or
les
pop
push
(bad)
fwait
ins
mov
test
in
fucomi
xor
push
pop
mov
or
test
xchg
add
jbe
push
fnsave
jo
pop
push
dec
jo
shl
sti
add
dec
jmp
cmp
xor
fwait
cdq
ret
jne
push
mov
mov
mov
leave
les
add
scas
xor
push
iret
push
push
jb
push
fsub
pop
sbb
adc
cwde
xor
pop
ja
cmps
shr
into
push
gs
lods
pop
pop
(bad)
loopne
jb
sets
adc
mov
push
pop
cmp
jo
cwde
or
fsubr
xor
fstp
xchg
cmp
jne
(bad)
and
or
and
add
push
repz
loopne
push
mov
xor
mov
stos
mov
(bad)
rol
cdq
fcom
sbb
add
adc
arpl
mov
cmp
pop
shl
adc
push
push
pop
xchg
mov
push
and
call
lds
xor
(bad)
hlt
xchg
push
adc
mov
les
iret
cwde
neg
ins
out
adc
retf
dec
daa
mov
es
les
outs
push
push
xchg
push
(bad)
clc
push
mov
aam
inc
mov
cmp
pop
mov
scas
adc
adc
mov
iret
adc
jl
(bad)
cwde
pop
lea
loop
jbe
sub
(bad)
push
or
data16
inc
outs
jns
xchg
nop
add
lea
and
cmc
sbb
(bad)
adc
push
sub
sub
push
sub
mov
mov
cwde
add
pop
cmps
pop
xchg
sbb
cmps
ja
mov
jbe
mov
hlt
leave
out
push
mov
inc
mov
push
les
(bad)
nop
cdq
pop
push
dec
mov
xchg
dec
btc
arpl
retf
dec
fdiv
(bad)
into
lea
fisub
jb
cdq
xchg
pushf
(bad)
cmp
inc
stos
mov
adc
dec
retf
dec
push
ss
aaa
cmps
sbb
retf
add
call
sbb
retf
cld
es
cld
test
out
jns
dec
push
push
idiv
mov
jno
cmc
add
sbb
leave
aam
dec
fwait
pop
push
gs
lahf
xor
loope
xchg
jmp
inc
iret
pop
dec
mov
das
adc
xor
sar
bnd
test
xchg
icebp
xor
ret
jns
fdiv
xchg
push
and
xchg
cmp
aad
xor
(bad)
shr
ins
push
mov
sbb
or
xor
jp
shl
sub
sbb
mov
add
fadd
mov
out
mov
out
in
sbb
ret
xchg
push
je
sub
les
push
call
mov
popa
sbb
sbb
aam
aaa
sbb
sbb
or
mul
inc
cmps
jb
dec
inc
adc
cwde
sbb
ret
push
adc
push
jmp
fwait
aam
(bad)
push
sub
pushf
xlat
adc
jnp
xlat
xor
jno
mov
dec
sar
mov
pop
repz
jp
lds
mov
ror
mov
fsub
test
cmp
cvtps2pd
pop
sub
lea
(bad)
test
int
imul
or
mov
sti
(bad)
shr
mov
or
adc
add
mov
pop
xor
inc
cwde
xor
dec
adc
pusha
dec
jmp
xor
xchg
or
push
out
fbstp
mov
mov
mov
jae
mov
xor
xchg
push
push
push
loop
aaa
stos
or
push
jo
cwde
mov
adc
test
lea
sub
retf
test
sbb
adc
adc
data16
xor
mov
adc
sub
sbb
jne
push
xchg
xor
inc
(bad)
stos
pushf
in
dec
test
adc
in
push
cwde
sub
cmp
pop
jae
fdiv
mov
ins
jmp
and
in
(bad)
into
jecxz
ds
mov
pop
cld
inc
jl
sbb
and
sti
cmp
mov
out
addr16
dec
cmps
mov
ins
jns
push
fsubp
stos
add
mov
fsub
lock
push
daa
int3
stos
daa
jge
mov
int3
pop
mov
cwde
test
arpl
xor
push
mov
icebp
mov
cmc
xor
into
pop
dec
pusha
xchg
les
js
add
idiv
dec
lea
fwait
mov
push
push
sahf
loope
jno
pop
int3
dec
pop
and
shl
xor
push
sbb
jo
mov
int3
or
xchg
repnz
mov
fwait
cmp
inc
jecxz
dec
(bad)
mov
dec
xor
aam
nop
iret
jae
lods
lods
jb
jno
xchg
test
xchg
push
push
out
aaa
leave
test
push
and
aaa
lahf
dec
xor
sub
jno
xor
push
push
mov
push
das
pop
add
add
cmps
pop
(bad)
sub
mov
cmp
int
mov
clc
mov
sbb
int3
push
movs
jae
xor
add
sub
pop
js
imul
mov
dec
sbb
mov
dec
ss
out
mov
mov
add
xor
mov
scas
adc
jge
mov
mov
or
xor
adc
(bad)
jno
sub
data16
out
pusha
popf
es
out
xchg
jb
cdq
and
in
or
cmp
add
repnz
dec
out
in
repz
dec
fwait
mov
rol
pop
fs
pop
pop
pop
dec
xlat
mov
cmp
push
repz
jno
jno
arpl
inc
cld
retf
add
call
in
cmp
and
cwde
mov
sbb
cld
or
cmps
adc
sub
mov
fld
xchg
out
mov
dec
or
mov
out
jno
les
sbb
adc
pop
int3
lods
push
xchg
jge
mov
jno
mov
inc
jmp
mov
sub
mov
add
int3
inc
push
mov
dec
outs
add
adc
add
xor
jae
mov
pushf
add
inc
cmp
add
jb
mov
scas
mov
(bad)
jmp
add
cmc
xor
mov
push
add
dec
sub
dec
arpl
cmps
dec
jne
dec
loopne
arpl
lods
inc
adc
loope
mov
les
lea
jecxz
lds
pop
sahf
cmc
pusha
imul
cmp
sahf
scas
add
fs
add
dec
push
push
mov
pusha
adc
mov
js
in
ror
and
inc
enter
pop
ins
mov
push
dec
dec
mov
ds
retf
lds
cvtpi2ps
out
adc
lods
add
sub
sub
loopne
les
rcl
mov
scas
addr16
pushf
jmp
inc
icebp
sub
adc
mov
push
fiadd
cmps
pop
xor
jle
(bad)
les
cwde
sub
out
and
pop
jo
jmp
push
aam
dec
retf
add
sub
cmp
sub
mov
sub
or
mov
xchg
xchg
test
jno
(bad)
xchg
or
je
(bad)
jb
int3
pop
mov
sub
dec
mov
arpl
push
mov
adc
xor
pop
xor
loop
and
mov
jmp
xchg
call
jp
pop
loop
dec
call
dec
push
sbb
loop
frstor
(bad)
fst
mov
jae
push
xor
in
popf
mov
inc
pop
cld
inc
push
gs
sub
xchg
ja
je
push
ins
sub
xor
push
dec
icebp
adc
std
pop
inc
sbb
add
ret
mov
rol
mov
sub
add
sbb
mov
cs
fcom
xchg
sbb
les
mov
push
cmp
(bad)
inc
les
test
xlat
xchg
xor
cmp
dec
pusha
ja
mov
xor
dec
jae
arpl
mov
aaa
cmp
or
into
jp
call
inc
test
arpl
out
adc
sub
or
outs
pop
retf
pop
mov
and
test
and
mov
push
mov
fisubr
out
push
pop
in
test
cs
and
adc
cmp
pop
loop
push
(bad)
mov
dec
mov
sub
and
xor
or
lods
scas
push
add
push
or
das
xor
pop
or
pop
fmul
dec
dec
dec
sub
sahf
cmps
sub
sti
sbb
js
jmp
dec
push
mov
out
add
ja
xor
adc
sbb
pop
add
mov
or
movs
retf
sub
add
and
add
sbb
adc
xor
sbb
int3
scas
or
mov
push
mov
pusha
ja
inc
fmul
pop
sub
pop
adc
stos
xor
dec
adc
xchg
(bad)
(bad)
adc
jo
push
sub
sbb
pop
and
retf
sbb
mov
stc
or
adc
fcom
cs
dec
fild
or
mov
and
in
cmp
xchg
dec
es
mov
pop
jns
retf
xchg
xor
and
cdq
(bad)
mov
retf
jecxz
add
dec
dec
inc
pop
(bad)
jmp
enter
cmps
(bad)
aas
jno
add
and
adc
push
loop
mov
lds
inc
bound
pop
retf
jne
add
lahf
adc
outs
test
pusha
loope
outs
test
mov
cli
mov
inc
pop
push
cmps
inc
inc
mov
cwde
movs
inc
shl
xor
cmp
or
xor
fwait
cld
fs
fwait
(bad)
ins
mov
jbe
sub
pop
adc
pop
and
mov
pop
mov
push
lea
xchg
lods
fwait
clc
mov
pop
sbb
popa
mov
dec
cmp
and
push
push
leave
test
or
sbb
push
xchg
jmp
or
fldcw
jae
(bad)
fadd
out
adc
not
mov
or
arpl
or
outs
push
xchg
in
inc
jbe
lds
ds
jg
jb
mov
inc
(bad)
xor
push
dec
in
clc
jae
addr16
fldcw
leave
xchg
jge
outs
les
test
popa
push
(bad)
jb
jae
lock
shl
push
xchg
dec
neg
push
ror
dec
adc
retf
or
shl
push
dec
rol
out
mov
or
mov
fild
ins
pop
inc
nop/reserved
shr
or
pop
inc
inc
cli
add
lods
pop
out
mov
cmp
pop
aad
imul
xor
adc
dec
sbb
xor
inc
sti
test
push
ret
adc
out
aam
int3
(bad)
mov
or
call
mov
out
add
push
mov
xchg
rcl
cmp
rcr
sub
mov
add
mov
sbb
(bad)
and
ffree
js
mov
jae
pop
sub
lods
inc
sbb
cli
mov
mov
and
jb
pop
in
imul
imul
and
out
or
inc
popa
sbb
xchg
mov
mov
clc
or
movs
push
jns
lahf
adc
adc
pushf
cmps
adc
mov
test
mov
dec
adc
push
and
call
push
sub
dec
sbb
data16
mov
inc
icebp
sub
sub
sub
dec
in
adc
push
sbb
sbb
std
dec
sbb
test
jne
rep
inc
arpl
pop
sar
ja
(bad)
rol
push
int3
pop
sub
je
add
sub
fbstp
and
sbb
mov
xchg
call
outs
xor
jb
es
cmp
pushw
in
jle
into
bound
pop
fadd
mov
inc
test
sahf
std
retf
and
adc
xor
add
mov
loop
cs
xchg
xchg
outs
aas
test
mov
stos
jbe
or
popf
scas
push
call
or
out
cmp
dec
test
int3
cmps
call
ret
inc
push
aam
or
add
or
xor
add
lods
lahf
add
test
les
xchg
test
out
push
inc
fstp
ss
scas
fmul
fidivr
pop
mov
sub
and
test
outs
push
int3
shl
ffree
sub
popa
fsubr
call
les
lds
loope
pop
xchg
test
shr
js
aam
dec
ret
lods
out
push
inc
shr
mov
dec
jno
adc
fisub
repnz
(bad)
cbw
lea
xor
lods
dec
jne
pusha
cmps
xlat
jo
or
pop
test
sub
xchg
push
cmp
sub
test
stos
sahf
neg
pusha
out
ja
xor
push
push
push
and
rol
add
test
inc
dec
inc
jae
mov
popf
add
xor
xor
ja
test
inc
dec
shr
adc
push
push
push
pop
es
repz
dec
les
daa
mov
jne
(bad)
idiv
add
xor
cmp
pusha
mov
and
pop
iret
cmp
xor
fdivr
loop
call
mov
lods
mov
(bad)
inc
test
pop
sbb
pusha
out
daa
add
into
js
in
mov
push
dec
jmp
fwait
mov
dec
and
je
ins
push
shl
or
dec
sub
adc
sahf
stos
out
lock
inc
daa
push
scas
push
enter
iret
test
mov
rol
cmp
cmp
xor
xor
jnp
cmps
test
xchg
sub
pop
cmp
xor
mov
mov
jmp
xlat
xor
out
adc
data16
mov
inc
nop
and
loopne
adc
inc
inc
out
aas
xor
mov
xor
sub
sub
cmps
fs
mov
in
pop
push
cmp
push
cmp
or
mov
sbb
cmp
sub
sbb
and
outs
sub
cs
fdiv
jp
movd
stos
outs
mov
add
aad
dec
inc
add
cmp
je
jae
cmp
in
xor
add
test
sub
xor
fcmovnu
xor
adc
ins
ja
fsub
mov
or
call
xor
push
dec
ret
loop
push
and
fs
sbb
sub
fcomp
sbb
cmps
and
fisttp
les
mov
or
push
sub
mov
test
jb
jae
aad
push
(bad)
int3
push
in
mov
shr
mov
sbb
xchg
int3
cmp
push
ja
int3
cmp
xchg
mov
hlt
and
xor
je
mov
int3
sub
inc
movs
dec
sti
and
cs
jae
inc
arpl
adc
inc
(bad)
(bad)
or
cmps
inc
jmp
xchg
mov
pop
aad
ins
mov
mov
sub
fcmovne
ins
xchg
cdq
scas
and
mov
mov
loop
popf
dec
add
xor
out
aam
or
jbe
jo
outs
movs
sbb
int3
cmp
mov
or
lods
je
pop
inc
loop
dec
cs
sub
loop
jb
arpl
scas
sbb
movs
push
adc
les
jnp
repz
int3
add
data16
pop
inc
xchg
leave
pop
adc
adc
sbb
xchg
sbb
xlat
sub
imul
or
adc
adc
sub
out
mov
outs
pop
les
push
xor
push
lds
xchg
mov
jne
(bad)
xor
mov
and
xchg
sub
xor
pop
sbb
cmc
xor
inc
lods
dec
loop
fxch
sbb
inc
retf
xchg
aas
jl
je
sub
jmp
add
add
inc
push
jns
jnp
addr16
in
push
popa
rol
cmp
xor
jl
inc
xchg
xor
jb
loop
add
xor
jb
mov
add
mov
test
sub
cmp
inc
out
sbb
nop
imul
push
or
add
inc
push
xchg
mov
sbb
lds
mov
mov
xchg
out
fisub
cmp
mov
je
loop
mov
mov
add
mov
push
jns
fcom
push
mov
mov
out
mov
retf
jbe
stos
sbb
sub
loop
sub
shr
inc
dec
dec
or
daa
xor
adc
xor
push
js
xor
and
outs
push
sbb
and
fwait
xor
push
xor
cmp
ret
cmp
gs
jno
xchg
jb
mov
pushf
dec
mov
fmul
adc
mov
adc
xchg
and
pop
out
push
lods
icebp
test
mov
shl
fist
imul
inc
test
inc
ror
aam
pop
lods
inc
test
(bad)
gs
xor
ffree
(bad)
shr
sbb
cmp
pop
mov
add
mov
or
inc
xchg
adc
jg
mov
ret
or
jl
pop
adc
aam
pop
push
imul
jb
dec
arpl
rol
imul
dec
and
gs
hlt
mov
jnp
mov
adc
jo
mov
out
sub
shr
rol
sub
cmc
xor
jle
mov
cli
xchg
shl
or
push
xor
mov
rol
stos
xor
call
sbb
mov
add
fwait
xor
or
jb
sbb
jae
cmc
add
pop
pop
mov
movs
push
out
sub
adc
and
add
loop
(bad)
out
loop
fdivr
dec
retf
xchg
sbb
and
push
aaa
mov
inc
xchg
movs
xchg
cmp
cdq
movs
xchg
xor
das
fwait
mov
outs
test
inc
leave
leave
fstp
inc
rol
sbb
outs
and
sbb
cmp
(bad)
mov
ror
(bad)
leave
push
sub
push
loop
lahf
xor
and
popa
mov
add
adc
retf
push
arpl
mov
mov
mov
and
daa
cdq
mov
neg
mov
aad
mov
sti
add
mov
stos
sub
adc
pushf
add
push
imul
inc
push
cwde
xor
sub
jb
push
dec
dec
cs
int
jecxz
lds
fiadd
into
dec
mov
jmp
loop
pop
ret
sub
mov
test
ins
or
or
jecxz
inc
or
pop
les
inc
push
scas
add
sub
call
xchg
jne
das
push
pushf
mov
jg
(bad)
mov
scas
test
push
cli
addr16
jb
mov
xor
mov
push
jne
xchg
mov
sub
icebp
xor
int3
sub
xor
xor
stos
aam
jg
daa
daa
cwde
scas
nop
xor
jmp
cmp
dec
mov
mov
cld
and
aaa
mov
mov
les
adc
popf
stos
leave
sub
jo
scas
dec
jb
test
xor
and
xor
dec
or
fsubr
push
push
jno
mov
fs
add
mov
call
retf
(bad)
dec
jg
sbb
xor
add
and
int3
dec
jmp
leave
sub
inc
pop
arpl
sub
hlt
mov
mov
jne
cmp
or
jae
sub
pop
mov
push
sub
addr16
leave
mov
and
mov
neg
jp
push
sbb
mov
adc
stos
retf
(bad)
shr
xor
xor
pop
pop
jns
popa
jo
add
xchg
add
inc
xchg
jno
leave
add
bound
jns
pop
loopne
xor
adc
push
jge
test
lods
retf
pop
test
or
dec
or
xchg
pop
and
addps
ret
test
add
pop
inc
jbe
add
ficomp
out
div
xor
ins
push
sbb
xor
mov
fisub
push
lock
loop
mov
test
lods
xchg
sub
xchg
add
mov
cmp
sbb
in
rcl
stos
cmp
ins
adc
test
inc
cdq
xor
pop
pop
push
(bad)
push
cmp
cwde
xchg
pop
in
call
arpl
xchg
add
sub
or
mov
sbb
jb
inc
test
xchg
aad
daa
sub
or
sbb
(bad)
xlat
push
jg
jns
and
cmp
int3
sbb
mov
sbb
(bad)
mov
pop
xchg
cmps
or
mov
retf
jl
push
es
fsubp
out
push
adc
ss
add
arpl
ror
leave
leave
push
lods
sub
xor
out
sub
in
icebp
or
bound
gs
cmp
and
mov
iret
jno
loop
and
or
outs
jmp
retf
sar
ds
aam
dec
jle
xchg
pop
inc
loope
adc
and
out
cwde
mov
xchg
shl
sub
pop
xchg
fst
push
test
add
cmp
pop
pushf
scas
add
(bad)
jmp
push
jmp
inc
mov
(bad)
cmps
leave
mov
and
das
cmp
or
pop
rcl
xchg
pop
jmp
outs
pusha
movs
mov
lods
mov
xor
mov
add
inc
xchg
or
inc
cmp
xor
jp
out
mov
test
xor
mov
cmp
push
shl
or
pop
inc
xor
cwde
mov
sub
mov
ret
sbb
scas
push
mov
in
xchg
mov
add
fsubr
mov
not
popa
inc
mov
inc
shr
(bad)
mov
and
imul
add
xor
jl
int3
enter
loop
dec
or
inc
ret
stos
retf
sbb
aam
xlat
xor
sub
mov
pop
xor
int3
xor
add
xchg
sahf
into
fcomp
retf
xor
xchg
adc
pcmpeqw
add
inc
mov
xchg
sbb
aad
stos
outs
loope
mov
hlt
pop
mov
xchg
enter
push
icebp
cs
jmp
xor
xor
mov
neg
and
int
fdiv
mov
test
push
cdq
sbb
(bad)
or
push
data16
aam
adc
mov
test
sbb
cld
adc
test
pop
mov
pop
outs
push
out
xchg
fwait
jg
dec
xor
out
lock
and
test
push
mov
les
jl
pop
push
push
or
loop
dec
aaa
add
stos
mov
(bad)
lds
inc
adc
sbb
inc
mov
xor
test
pop
stos
int3
inc
mov
adc
scas
fs
and
pushf
clc
cwde
pushf
adc
or
mul
sbb
and
es
cmc
xor
and
int
lea
mov
pushf
add
sbb
pop
bound
cmps
push
mov
pop
addr16
outs
outs
push
push
push
fsubr
ss
xor
sub
sahf
(bad)
int
xchg
or
inc
add
je
or
ins
adc
adc
push
jl
stos
lahf
aam
enter
pop
shl
out
cmps
xor
out
aaa
aam
cmc
xchg
mov
xor
int
cld
les
int3
adc
mov
cmps
out
cdq
aam
sbb
add
(bad)
iret
adc
iret
ins
sub
(bad)
jecxz
jecxz
mov
dec
sbb
dec
ret
pusha
in
xor
mov
mov
aam
sub
test
fs
xchg
and
stc
pushf
pop
test
or
adc
cld
into
mov
push
pop
or
test
jecxz
adc
je
sahf
out
lds
pop
out
add
xor
xchg
imul
out
jl
add
add
fs
push
call
arpl
or
loop
les
mov
pop
dec
retfw
push
loope
or
cmp
sub
loop
xor
or
dec
cmps
popa
retf
jl
in
mov
pop
sub
cwde
pop
push
add
xchg
jne
push
shr
les
fs
pop
cmp
and
xor
addr16
in
clc
xchg
dec
jmp
inc
xor
stos
sbb
sub
xor
lods
mov
sub
pop
int3
int3
sub
cdq
inc
(bad)
pop
sub
inc
lods
lock
xlat
jp
imul
fadd
mov
pop
inc
jns
inc
enter
sub
aaa
xor
or
pop
int3
mov
sbb
add
or
add
push
rcr
adc
adc
retf
les
cmp
jo
ret
cmp
stos
adc
sbb
jae
out
mov
jg
push
mov
fldcw
sahf
and
aam
mov
into
scas
loop
(bad)
gs
loop
xchg
push
int3
fdiv
inc
add
push
pop
add
sub
jecxz
retf
sub
shl
add
into
sub
xchg
out
pusha
mov
adc
sti
aaa
adc
push
ins
ss
jmp
push
dec
fwait
dec
pop
mov
sub
mov
sub
nop
add
pop
jae
imul
cmp
sbb
sbb
push
inc
push
mov
inc
push
jne
or
leave
mov
xor
dec
pop
pop
loop
aas
xor
mov
loop
push
fwait
fwait
popa
mov
cmp
sbb
sub
lods
clc
add
push
movs
xchg
fwait
adc
(bad)
rcl
or
dec
stos
push
arpl
dec
xor
fs
fnsave
icebp
xor
dec
int
jno
js
inc
outs
mov
push
fmul
mov
push
xor
push
pop
int3
pop
(bad)
xor
rol
jbe
jecxz
add
sbb
ror
mov
xor
sbb
dec
push
adc
adc
jae
ja
dec
aam
test
(bad)
cdq
bound
popw
jno
ss
xchg
movs
loop
(bad)
mov
and
xor
sub
push
retf
xor
push
ss
xor
cmp
lds
xor
and
jmp
lods
or
mov
xor
loop
mov
sub
push
mov
and
xor
arpl
or
jae
add
or
xchg
les
push
sbb
or
mov
cmp
inc
mov
mov
(bad)
jmp
dec
pop
adc
xchg
push
cmps
imul
das
cmp
cmp
fwait
inc
fcmovnb
aam
clc
xchg
rol
and
cwde
jae
xchg
jmp
test
dec
xor
xor
mov
loopne
loop
xor
test
mov
out
out
mov
(bad)
xor
fsub
test
push
xlat
fist
retf
or
inc
jno
cmp
retf
push
cmps
nop
scas
not
aas
cld
mov
add
ja
pop
gs
xchg
jb
push
xor
xor
mov
and
imul
loop
and
or
xchg
pop
or
adc
jge
retf
mov
push
sub
cmp
retf
pop
jne
pop
sbb
stos
call
rol
mov
sub
daa
leave
loop
pusha
mov
jne
add
cmps
push
cmps
inc
shr
fild
mov
les
nop
pop
and
or
jae
lods
and
xchg
jmp
inc
push
pushf
les
push
and
jmp
mov
(bad)
sti
cld
cwde
popa
mov
(bad)
adc
mov
scas
loopne
ss
test
xchg
lods
icebp
test
hlt
mov
imul
push
js
add
icebp
adc
popf
fwait
and
sbb
inc
push
push
push
inc
xor
dec
jmp
es
retf
xor
and
icebp
or
jb
jp
test
mov
xor
push
sub
mov
push
pop
movs
dec
push
jmp
nop
adc
xchg
inc
outs
cmp
cmp
fild
dec
(bad)
xchg
adc
mov
xor
aam
sub
mov
out
and
mov
dec
or
push
mov
cmps
add
arpl
add
gs
pop
icebp
xor
das
ret
pop
dec
cmp
sub
sti
popa
bnd
mov
adc
das
push
push
int3
mov
pop
xor
mov
push
and
aam
sub
xor
pop
fadd
gs
push
les
and
xor
loop
push
(bad)
outs
test
dec
fsub
or
lock
xor
sub
je
lods
mov
and
pop
in
aas
sub
ret
jbe
mov
enter
push
imul
xlat
mov
shr
push
sub
retf
popf
cwde
pusha
or
mov
mov
imul
sbb
loop
mov
test
fwait
int3
and
repnz
test
mov
fdivr
cdq
xchg
cmp
pop
out
es
jno
jo
or
ret
popa
test
xchg
push
jo
jne
out
or
in
jp
mov
not
add
test
xchg
test
dec
in
jbe
popa
jnp
xor
addr16
aam
data16
push
das
int
xchg
out
xor
cmps
adc
add
popf
xchg
repz
lods
int3
mov
movs
xor
fwait
cmc
cs
xor
xor
lea
cdq
push
mov
cdq
xor
push
push
ret
cwde
adc
xlat
aam
dec
jmp
sbb
cmp
or
lea
arpl
adc
inc
dec
inc
xchg
mov
sub
mov
dec
(bad)
ffreep
pop
retf
retf
jb
stc
add
push
pusha
xrelease
cli
xchg
and
or
out
out
ins
fsubr
cwde
test
jo
ins
xor
and
clc
xchg
call
dec
xchg
push
and
adc
mov
cmp
sub
xor
sbb
mov
pop
xor
xchg
and
pushf
dec
push
pop
and
in
or
loopne
mov
scas
push
pop
xor
pop
sti
xor
dec
mov
outs
mov
inc
(bad)
jg
mov
sub
(bad)
fdivr
imul
sub
cwde
push
xchg
mov
jge
sahf
and
jns
adc
push
mov
lds
and
mov
and
add
mov
or
adc
and
scas
push
adc
loopne
(bad)
call
inc
sbb
pusha
cmp
mov
pusha
mov
into
jne
push
(bad)
xor
push
in
or
aas
mov
out
inc
loopne
pushaw
out
and
inc
pop
sub
sar
daa
inc
adc
jge
sbb
mov
cmps
ret
rdmsr
stos
sti
out
aas
in
fwait
repz
ror
jmp
int
pop
xchg
imul
call
fcmovu
cmp
adc
mov
cmp
pop
jo
add
test
aad
mov
cmps
ja
dec
sbb
retf
mov
add
test
lods
repz
lea
adc
pop
jno
sub
xchg
jmp
pop
mov
mov
mov
js
sub
add
xchg
sahf
and
sub
add
vsubss
(bad)
jae
adc
sbb
push
fdiv
mov
xor
mov
mov
addr16
in
mov
adc
adc
xor
add
fmul
add
xor
stos
xchg
in
lods
push
movs
sbb
bndstx
pop
ror
lds
inc
fcom
push
pop
xlat
inc
pop
in
pop
lods
rcr
out
push
push
test
dec
fcmovbe
cmc
sub
int3
dec
adc
test
pusha
add
xchg
and
and
adc
mov
retf
xchg
aaa
jb
jmp
stos
aam
sbb
sbb
pop
js
out
pop
jecxz
ror
scas
ret
and
ffree
out
(bad)
push
(bad)
stos
out
cmp
ret
or
and
xchg
pop
dec
or
xchg
popf
inc
int
mov
pop
daa
mov
xor
bound
pop
jne
adc
ret
add
fwait
mov
push
retf
addr16
add
sbb
jg
push
mov
sbb
fwait
icebp
sub
push
nop
jno
pop
jmp
outs
xor
ja
add
test
xor
sub
retf
and
mov
aam
lea
inc
jns
jle
out
mov
mov
stos
fwait
sub
xor
stos
out
pop
push
or
add
data16
adc
push
pop
ins
cmp
int3
mov
sub
mov
push
mov
push
mov
fucom
jae
cs
ins
dec
pop
adc
mov
sub
and
push
or
jne
push
and
ins
add
in
pusha
das
adc
ja
mov
test
clc
push
cmps
stos
xchg
popa
xchg
xor
dec
data16
mov
aam
push
cdq
dec
pop
mov
push
pop
popa
sub
inc
out
push
mov
and
call
mov
xor
ja
xor
mov
inc
call
push
imul
mov
stc
dec
mov
push
cmp
cmps
cdq
mov
fild
adc
xor
pusha
out
repz
xchg
ret
repz
mov
into
xor
idiv
test
cmp
mov
aam
pop
aas
push
mov
out
and
sbb
lds
xchg
ins
mov
jl
jnp
push
push
imul
cmp
dec
push
in
test
vcvtdq2pd
mov
add
push
shr
pop
sub
pop
mov
rol
or
loop
mov
stc
js
mov
les
push
mov
int3
and
movs
mov
sbb
mov
mov
jmp
dec
xor
rol
inc
pop
and
mov
adc
repz
cwde
jp
movs
push
cmc
clc
jp
retf
mov
push
cmp
out
jns
ins
loope
jle
div
jmp
push
push
dec
lods
popa
xchg
inc
sub
xchg
addr16
push
mov
popa
sub
mov
movs
cwde
int3
pop
mov
mov
push
mov
ss
dec
adc
mov
xchg
dec
fstp
mov
mov
cs
dec
jecxz
clc
inc
add
mov
js
mov
and
pop
add
nop
cmps
cwde
push
push
ins
xchg
and
inc
and
and
popa
(bad)
loopne
xor
sub
mov
icebp
mov
jg
and
adc
mov
pop
mov
pop
movs
jbe
dec
inc
pusha
retf
nop
lods
repz
mov
jae
adc
mov
pop
sbb
add
xor
clc
add
cmp
sbb
or
rcl
call
nop
cmp
jo
xor
pusha
or
mov
pusha
or
add
dec
shl
push
les
xchg
pop
loop
sub
cld
sub
dec
popf
pushf
dec
jg
ins
(bad)
test
aaa
fdiv
fs
cmp
imul
fcmovnb
mov
push
es
mov
push
jae
jge
lock
bound
rcl
int
jp
imul
lods
lock
ret
cdq
popf
bnd
xor
lds
arpl
(bad)
fmul
call
or
add
scas
xchg
jg
sub
loopne
cmp
arpl
adc
and
jne
push
mov
scas
cmp
inc
pop
sbb
cmps
mov
aad
bound
push
bound
idiv
ret
mov
loope
cmp
push
in
bound
cmp
outs
fsub
and
and
pop
xor
or
test
mov
ins
add
pop
sbb
retf
xchg
adc
mov
adc
enter
repz
aad
or
retf
or
mov
fsub
jo
mov
jecxz
sub
sub
push
das
sub
movs
or
cdq
test
push
cld
inc
inc
mov
adc
popa
cwde
cmps
pop
sub
adc
cmp
jnp
rol
lds
push
les
cmp
imul
cmp
loopne
sbb
nop
push
fyl2x
push
aaa
pop
sub
inc
add
int3
mov
or
std
shr
test
mov
pop
sub
pop
pop
or
sahf
cmps
push
xor
and
cdq
inc
mov
fcmovb
cmc
sub
ret
(bad)
sbb
addr16
sahf
js
out
cmc
sub
dec
pusha
jno
aam
ror
inc
stc
mov
div
ja
ret
pop
jecxz
jl
and
aas
or
or
mov
stos
imul
sub
and
cdq
dec
cmc
pop
xchg
xor
loop
sbb
repnz
jb
inc
cs
jno
and
(bad)
adc
push
cwde
out
or
(bad)
mov
xchg
(bad)
cmp
sub
sbb
aam
mov
loop
les
xor
adc
jnp
sub
pop
jp
push
add
sub
bound
and
cmc
push
ds
inc
test
push
es
les
enter
shl
adc
loopne
sub
mov
fwait
push
loope
cmp
je
adc
xchg
pop
dec
adc
mov
fwait
and
add
cdq
or
adc
int3
xor
push
sbb
fidiv
xor
das
sbb
test
ror
ins
push
into
and
fsubr
push
movs
sub
fst
lds
mov
jecxz
lock
cmp
ror
jmp
mov
(bad)
xor
push
popf
xor
retf
(bad)
adc
xchg
push
and
and
mov
jle
or
sub
pushw
test
pop
cwde
xor
aad
frstor
sub
data16
sbb
fdivr
mov
(bad)
push
pushw
gs
movs
test
adc
jmp
push
jecxz
adc
js
sbb
mov
add
je
aam
aas
jb
fnsave
cwde
setns
data16
test
push
scas
and
mov
dec
inc
mov
and
aad
inc
mov
bound
adc
sub
cs
(bad)
rcr
inc
je
lea
(bad)
out
retf
jp
ret
pop
nop
fisubr
xchg
call
add
iret
mov
pushf
out
jb
sub
movs
xchg
jb
(bad)
aam
pop
sbb
xchg
add
sbb
enter
mov
xor
adc
mov
cmc
or
xor
mov
sbb
push
cvtpi2ps
xchg
stos
(bad)
pop
add
retf
push
out
adc
lods
int3
adc
fst
inc
jno
adc
sub
out
mov
scas
and
mov
xchg
addr16
push
int
aam
(bad)
(bad)
cmp
mov
mov
inc
cmp
test
mov
sub
and
sub
fdiv
fdiv
clc
xchg
mov
aaa
sbb
adc
sbb
shr
(bad)
into
out
je
(bad)
jmp
aas
jae
popa
ins
push
or
cmp
pusha
or
cmp
sub
cmp
bt
add
out
fmul
mov
xor
xor
or
fcom
dec
sub
cmps
bound
(bad)
cwde
test
bound
stc
and
mov
retf
mov
mov
pop
test
xchg
sub
ins
lock
cmp
cdq
jns
aam
push
sbb
loop
jo
cdq
sub
mov
push
inc
sbb
repz
and
xor
sbb
ror
add
ins
pusha
repz
inc
sub
out
sub
push
push
ffree
lods
inc
jp
and
test
mov
scas
mov
sub
div
cdq
push
popf
push
loopne
xchg
outs
imul
cs
jle
int3
push
int3
sbb
and
adc
xor
fnstsw
test
cmp
std
inc
or
ret
jae
scas
cmp
retf
jle
loope
fisub
sbb
mov
or
or
xor
mov
daa
mov
push
stos
or
dec
push
xchg
in
sbb
adc
mov
pop
mov
leave
pop
sbb
stos
cmp
mov
add
out
ins
push
and
dec
test
inc
ss
add
test
nop
dec
inc
fisub
sbb
jecxz
les
js
pop
push
cmp
mov
push
loop
and
inc
ret
pop
xchg
jae
ja
pop
inc
cmc
sti
adc
data16
rcr
inc
les
cld
dec
outs
adc
shl
and
imul
fdivr
pusha
pusha
pop
mov
xchg
inc
or
push
test
adc
lea
push
mov
cwde
cmp
pop
retf
add
push
adc
loop
lea
pop
jo
clc
sub
outs
mov
inc
clc
xchg
pop
out
stc
xchg
ins
add
adc
mov
test
sbb
jle
jmp
fst
mov
push
mov
sbb
shl
pop
pop
jae
imul
fcomp
lock
ret
jo
jmp
adc
sbb
add
and
leave
arpl
movs
xor
bound
daa
les
push
aad
scas
gs
sbb
jecxz
and
int
dec
or
stos
pushf
xchg
mov
add
sub
int3
cmp
mov
adc
jae
int3
dec
test
xchg
push
push
js
xor
mov
dec
adc
xchg
or
dec
inc
jmp
pop
cmp
shr
test
pop
cmp
or
push
pop
(bad)
jo
xlat
pop
sub
ret
adc
test
int3
dec
ds
push
xor
pop
mov
in
les
xor
pushf
fsub
stos
mov
fstp
and
mov
mov
mov
pop
inc
mov
fcmovnb
sbb
mov
in
jmp
lods
hlt
mov
ror
or
mov
sub
mov
mov
test
stos
or
(bad)
sub
mov
test
scas
adc
xchg
fs
pop
dec
push
jp
fs
jae
cwde
and
pop
push
pop
ins
adc
mov
pop
aam
gs
push
xor
out
or
test
repz
mov
popa
pop
and
mov
xor
push
push
push
pop
mov
fisubr
imul
dec
add
adc
bound
imul
popa
adc
sti
add
mov
les
ins
jmp
push
push
jl
out
in
add
mov
es
lods
ret
sbb
fld
test
out
aam
xchg
add
add
imul
icebp
sahf
addr16
add
xchg
sbb
xor
jnp
enter
sbb
das
pop
sub
push
lods
repz
loopne
xchg
add
loop
outs
sbb
test
mov
or
cdq
xchg
cmp
rcl
pop
fs
enter
cdq
arpl
mov
and
adc
outs
push
movs
loop
pop
xchg
mov
sub
pop
shl
bnd
or
stc
cmp
sub
xor
push
int
push
dec
outs
test
and
rcl
mov
inc
out
xor
dec
cmp
xchg
inc
sbb
inc
dec
cdq
loop
and
xchg
xchg
xchg
int3
and
pop
xchg
lds
sub
inc
xchg
mov
add
xchg
xchg
mov
jns
ins
scas
and
sub
loop
sbb
jne
adc
push
sbb
repz
pop
pop
mov
add
enter
data16
sbb
mov
int3
movs
cdq
lods
ret
stos
rol
mov
xchg
xchg
cdq
cld
mov
mov
ds
xor
popf
dec
adc
movhps
(bad)
nop
xor
js
add
fmul
pop
stos
adc
jns
out
mov
pop
jge
add
or
sbb
fs
mov
cmp
mov
and
push
daa
sub
ins
mov
jb
sbb
push
jmp
or
dec
xchg
mov
jmp
popa
pop
adc
cmps
(bad)
xor
and
dec
test
sbb
retf
jno
and
inc
jg
movs
lock
call
mov
std
data16
popf
push
ins
xchg
movs
cmp
ss
sub
mov
push
shl
xchg
aam
sub
pusha
lahf
(bad)
cmp
out
and
mov
ins
adc
int3
inc
loopne
xor
jp
and
xchg
std
inc
fisub
pop
sub
aam
test
shl
mov
js
int3
inc
fsubr
sbb
pop
adc
xor
jno
fist
cmp
out
or
aam
sbb
mov
xchg
je
push
mov
inc
add
mov
aad
pop
pop
std
dec
push
pop
sub
mov
retf
and
inc
add
adc
fsub
push
test
mov
mov
cmp
dec
add
stos
jo
call
dec
add
lahf
push
mov
ror
inc
pop
repz
scas
clc
mov
or
jne
hlt
mov
pop
xchg
ficom
dec
cli
inc
mov
adc
ins
jo
push
xor
add
int3
stos
out
ins
pop
loopne
cmc
xor
sbb
retf
jmp
sub
movs
pop
clc
mov
push
nop
aaa
scas
jae
jo
dec
dec
or
dec
sub
scas
add
or
adc
test
xchg
cwde
shl
inc
push
xor
or
mov
stc
iret
add
pop
mov
xor
test
cs
or
add
(bad)
js
cmp
ror
add
cmps
push
ins
packsswb
ret
jno
mov
sub
(bad)
gs
add
ss
pop
pusha
(bad)
xchg
das
pop
iret
jle
pop
dec
xor
mov
sbb
inc
cs
loope
ds
scas
out
inc
pop
ins
push
fsubr
mov
out
adc
in
fwait
adc
pop
mov
rol
lds
(bad)
dec
jno
movs
test
sub
loopne
pop
sbb
pop
inc
pop
das
xor
into
pop
cld
inc
rcl
push
sub
inc
jno
push
stos
repz
push
push
or
jecxz
cmp
lods
movs
bound
push
jmp
arpl
stc
cdq
inc
jo
mov
or
es
cdq
in
loop
and
leave
pop
mov
cmp
add
xor
inc
cmps
jne
pop
mov
xchg
pop
cmp
jno
pop
inc
sbb
in
pop
push
add
retf
xor
adc
cmp
(bad)
pop
ins
and
lods
mov
xor
add
cwde
pop
retf
das
pop
xchg
in
in
sbb
or
movs
fstp
aam
aad
cmp
xor
cwde
push
cmp
js
pop
in
jge
push
xor
adc
mov
cwde
dec
loop
repz
pop
test
fdiv
jge
das
cmp
fdiv
int3
push
sahf
mov
mov
retf
inc
outs
sub
add
hlt
aad
rol
sub
dec
in
cli
mov
adc
div
cmc
add
js
sub
cmp
push
pop
bound
jns
fadd
inc
stos
xor
mov
inc
fstp
retf
pop
inc
mov
mov
and
push
add
mov
push
xchg
repz
cs
arpl
ins
stos
aam
push
xor
inc
call
int
pop
lods
inc
std
dec
sub
loop
out
and
in
and
mov
inc
sbb
sbb
push
loope
mov
mov
add
and
les
and
fdivr
retf
sbb
cmps
(bad)
les
adc
xchg
mov
ins
call
xchg
hlt
or
outs
jne
js
push
cdq
gs
inc
movs
rcl
ret
add
add
mov
ins
inc
xchg
int3
jnp
cmp
adc
or
push
int3
mov
pop
js
enter
fwait
jl
xchg
into
pop
psubb
xchg
and
cmps
pop
add
cmp
sbb
aad
in
pop
mov
mov
add
ror
or
pop
js
add
xor
out
and
pop
push
and
xor
lods
retf
popf
mov
lahf
push
add
push
scas
jecxz
mov
and
hlt
out
fs
scas
data16
sbb
sbb
cmp
out
cmp
xlat
js
(bad)
fsub
jg
pusha
cwde
cld
push
int3
out
data16
dec
mov
xor
push
sahf
pop
xchg
addr16
cmps
pop
xchg
sbb
pop
es
cmp
iret
push
mov
mov
jns
ins
imul
iret
xchg
mov
ja
pop
fwait
lea
mov
fidiv
push
sbb
lahf
xor
js
cld
xchg
gs
in
int3
inc
imul
shl
mov
jno
mov
push
pop
into
dec
xor
mov
inc
and
mov
adc
ins
mov
sbb
dec
sub
push
lods
out
pop
push
push
cwde
sbb
lds
jl
stos
es
or
or
fist
pop
jne
xchg
les
push
cld
retf
dec
sti
mov
sub
mov
add
jne
or
mov
movs
inc
imul
or
(bad)
jns
pop
add
add
mov
movs
pop
adc
sub
add
fwait
stos
arpl
dec
and
ret
int
push
test
mov
mov
dec
inc
ret
retf
int3
cmps
aam
sahf
and
push
bound
xchg
or
cmp
test
dec
arpl
pop
mov
into
jg
inc
int3
adc
adc
mov
xor
push
dec
test
mov
push
imul
xchg
cmp
xor
add
sub
int
and
pusha
mov
add
data16
xchg
fwait
pop
fwait
es
push
cdq
popa
mov
std
(bad)
or
retf
dec
xchg
stos
sub
movs
fcom
push
inc
cwde
or
pop
mov
cmp
xchg
xor
xor
repz
arpl
(bad)
mov
out
lahf
test
loop
rcr
gs
mov
dec
jecxz
jae
lock
push
mov
push
test
into
cwde
pop
stc
mov
ja
add
iret
jne
mov
in
shl
mov
pop
fimul
push
fst
jo
bound
dec
xor
cmp
mov
mov
xchg
or
add
ja
dec
or
addr16
cmp
aaa
es
imul
xchg
mov
mov
arpl
mov
(bad)
cwde
mov
mov
clc
sbb
lds
push
in
xor
push
mov
mov
jns
aaa
jne
jns
mov
add
xor
(bad)
fdiv
add
push
arpl
inc
ret
mov
or
aaa
inc
enter
movs
mov
cwde
cdq
retf
pop
pop
int3
inc
and
sub
jmp
add
cdq
retf
xchg
jmp
test
inc
cwde
mov
test
jmp
mov
mov
movs
adc
dec
cmps
sbb
outs
bound
dec
xchg
mov
sbb
out
push
jg
xor
jae
jns
int
fwait
mov
cli
mov
adc
or
mov
into
loopne
push
push
fnstsw
popa
push
xor
out
js
adc
jae
cmp
popa
push
jne
retf
arpl
sbb
pop
mov
inc
retf
test
or
or
inc
cwde
sub
xchg
push
or
fdiv
sub
(bad)
or
xchg
mov
mov
xor
ss
les
pop
out
arpl
add
clc
pop
mov
das
xor
ret
ret
push
(bad)
ret
cmp
lahf
cld
xor
repz
pop
movs
in
into
adc
jnp
and
int
in
test
xchg
sub
xor
jmp
add
shl
ins
dec
or
add
xor
mov
lock
jne
in
into
arpl
ja
sbb
dec
movs
mov
lock
add
and
(bad)
jno
push
loopne
ret
inc
rcr
les
adc
sbb
es
test
outs
movs
sbb
imul
push
ret
mov
sbb
dec
cld
sbb
scas
mov
xrelease
or
xchg
cmps
shl
fs
pop
and
cmp
pop
bound
movs
sysexit
push
ja
add
scas
or
pop
loopne
pop
outs
adc
shl
adc
and
cwde
push
aad
nop
test
pop
push
iret
mov
pop
icebp
test
pop
popa
cmp
push
jae
xor
push
and
mov
inc
mov
cmp
retf
fsubr
int3
mov
mov
iret
mov
cmc
sub
xchg
jae
movs
push
push
pop
push
stos
sub
add
repnz
cmps
adc
cmp
outs
adc
cdq
pop
mov
dec
mov
ja
inc
jo
mov
push
xchg
add
xchg
mov
or
cmp
movs
cs
scas
or
ret
sbb
dec
xor
mov
les
dec
mov
pop
add
mov
inc
hlt
inc
test
dec
push
xor
outs
adc
or
cmps
pop
mov
mov
mov
out
das
xor
into
loop
stos
mov
mov
lock
sub
push
enter
adc
inc
pop
push
mov
push
jae
mov
cmps
xchg
and
inc
jns
push
test
inc
int3
leave
xchg
xchg
mov
sub
ret
(bad)
or
lock
inc
fimul
loop
and
test
outs
xchg
ins
sbb
add
sbb
mov
cmc
xor
jle
retf
pop
cli
mov
adc
adc
mov
int3
jp
push
cli
mov
stos
pop
ret
es
inc
cmc
or
adc
pop
jle
sub
les
out
pop
std
and
je
in
imul
ins
mov
mov
retf
jno
mov
aam
add
not
popf
xchg
sub
cmp
mov
jmp
pop
movs
mov
inc
lods
outs
mov
xor
ins
push
xor
xchg
test
inc
push
(bad)
out
(bad)
cmp
mov
dec
scas
test
shl
jno
cs
cmp
jae
scas
movs
jbe
dec
pop
add
inc
movs
lods
cmp
add
sar
xchg
pop
sub
lea
dec
aad
call
in
add
mov
sbb
mov
adc
out
mov
pop
pop
pop
(bad)
fcom
stos
int3
sbb
add
test
or
xor
mov
push
mov
add
fxrstor
sub
in
repz
vpmulhuw
fild
int3
ret
push
pop
mov
rcr
mov
push
les
dec
jno
repz
push
add
xor
int
inc
test
push
sbb
and
or
dec
xchg
mov
retf
ret
jnp
mov
push
stos
cdq
fbstp
xor
push
out
mov
pop
addr16
ins
pop
pusha
ins
cmc
ss
inc
data16
pusha
cmp
out
test
jmp
push
movs
fisttp
adc
inc
xor
movs
mov
cmp
xor
imul
dec
lahf
add
das
mov
pop
xchg
call
jl
in
sub
(bad)
sub
test
push
mov
inc
je
or
xor
dec
mov
clc
xchg
add
mov
imul
adc
mov
aam
or
xor
popa
retf
push
push
jmp
pusha
bound
and
(bad)
cli
mov
int
jb
mov
mov
dec
sbb
push
adc
sbb
xor
push
arpl
xor
xchg
dec
lods
movs
hlt
inc
mov
repz
dec
sub
repz
test
(bad)
sbb
pop
and
push
outs
out
jmp
cld
jnp
enter
push
sbb
jmp
jge
sub
pusha
or
pop
out
mov
je
mov
stos
mov
pop
mov
fadd
stos
add
(bad)
adc
mov
pop
add
xchg
int3
inc
push
or
or
leave
push
add
inc
sbb
inc
and
dec
xchg
xchg
cmp
jp
dec
fdivr
mov
push
data16
inc
in
les
dec
iret
inc
mov
push
div
mov
push
add
outs
sbb
aaa
push
loop
repz
dec
inc
test
lods
inc
(bad)
cmps
inc
adc
lock
xchg
pop
scas
dec
mov
jae
inc
outs
push
sbb
jmp
pushf
dec
mov
loope
sbb
jp
mov
repz
push
mov
sub
sub
movs
mov
xor
(bad)
and
dec
push
lods
push
gs
int
xchg
stos
mov
imul
cmp
push
mov
xchg
bound
test
or
sub
call
cmp
retf
shl
fadd
add
cmp
repz
xchg
mov
push
or
sti
push
aas
xor
adc
je
ss
pop
test
mov
loope
push
sti
mov
sub
or
push
test
and
aaa
imul
mov
mov
inc
idiv
es
cmp
int3
sbb
aad
ret
fdivr
add
aam
jb
cdq
xchg
loope
movs
and
jne
addr16
adc
out
mov
pop
mov
clc
jno
imul
popf
vmovhpd
push
jg
fnstenv
ja
mov
pop
mov
cmp
lock
js
inc
inc
add
mov
mov
lds
pop
sub
push
test
xchg
pop
imul
pusha
sar
cmp
sbb
xchg
mov
pop
add
mov
sbb
aaa
jae
das
aas
in
push
jmp
arpl
test
jnp
add
sbb
shl
cwde
mov
pushf
movs
loop
js
jno
mov
dec
fsub
mov
ds
out
out
aam
jne
js
cmps
stc
shl
cmp
fs
repz
mov
bound
adc
jo
int
add
xor
sbb
mov
push
add
jl
add
pop
ret
sbb
jb
xor
sub
dec
adc
or
jae
loop
cmp
(bad)
out
xor
adc
sbb
add
icebp
xor
cmp
add
mov
xor
aam
xor
test
jno
aam
sub
mov
mov
jl
int
inc
adc
xor
sbb
retf
or
(bad)
repnz
test
xor
mov
loope
fisttp
xor
mov
cmc
das
rcl
xor
test
xchg
mov
pop
cmp
mov
push
mov
push
ror
mov
jmp
nop
sbb
push
mov
cmc
jae
sub
cdq
gs
add
xor
fnstenv
or
xchg
ss
loop
fcomip
push
scas
loop
mov
xor
xor
daa
sub
outs
xor
sbb
pop
sub
adc
push
mov
pop
adc
clc
das
jge
mov
and
gs
xor
mov
daa
adc
xchg
push
mov
lea
adc
mov
sub
cmp
adc
push
(bad)
out
data16
mov
push
aaa
mov
jo
in
sbb
push
and
or
xchg
in
push
retf
loop
mov
mov
push
or
jmp
xor
push
or
and
xor
in
mov
shr
xchg
cli
cld
jno
adc
mov
mov
out
(bad)
aam
lds
dec
jb
pusha
sbb
lea
sti
push
cmps
or
(bad)
mov
add
sbb
icebp
sub
ins
and
movs
jb
aaa
sbb
iret
xor
jl
xchg
out
add
aam
adc
adc
in
sub
lahf
add
xchg
add
add
test
jne
mov
cmp
xor
mov
(bad)
cmp
jno
cld
and
or
arpl
out
mov
add
ret
imul
(bad)
fisubr
jmp
lea
lods
dec
xchg
gs
sub
daa
sub
adc
stos
push
jne
jecxz
mov
popa
push
dec
pusha
pop
cmp
loopne
pop
push
call
mov
add
ror
add
mov
push
jbe
mov
gs
mov
lds
push
cld
dec
xor
cmp
out
cmp
or
leave
das
gs
mov
stos
fistp
sbb
rcpps
aad
jle
mov
(bad)
adc
sub
gs
cld
xor
jl
inc
pop
dec
push
mov
sub
(bad)
sahf
sub
loopne
add
cwde
stos
pusha
aad
xor
and
data16
call
push
mov
test
push
xor
pusha
push
leave
lea
and
jg
jns
stos
pusha
or
pop
push
push
adc
pop
test
int
jecxz
cmps
ficom
xor
cld
nop
sbb
jae
xor
jge
test
jno
out
(bad)
je
pop
jo
out
mov
pop
inc
leave
push
movs
fcmovnbe
adc
icebp
sbb
and
mov
popa
adc
inc
jmp
xor
inc
fcmove
cwde
mov
mov
mov
lods
add
sbb
or
xchg
in
inc
div
pop
mov
inc
stc
es
xchg
xor
xor
pop
jo
pop
sbb
int3
xor
test
adc
sti
or
mov
inc
xchg
lock
dec
imul
stos
sbb
in
xchg
retf
xchg
add
pop
or
xchg
outs
and
mov
jmp
mov
cmc
push
ret
push
not
cdq
mov
dec
jle
ret
or
fmul
xchg
inc
mov
cmp
push
mov
add
pop
test
pushf
lds
push
pop
das
push
pop
iret
cwde
adc
xor
push
fwait
cmps
cmp
mov
cs
inc
arpl
add
push
xor
aaa
xor
out
cmp
cdq
push
push
jmp
aaa
sub
in
je
ficom
js
cs
dec
fwait
fwait
popa
test
mov
ret
pop
test
mov
addr16
mov
jo
cmp
test
sbb
and
xor
xchg
jnp
loopne
push
dec
and
add
stc
and
test
adc
lods
mov
adc
push
jmp
in
mov
and
les
sub
push
clc
retf
cmp
mov
aas
adc
rdpmc
add
outs
and
or
adc
mov
lock
adc
inc
add
in
(bad)
fnstenv
or
mov
outs
loop
pushf
shl
pop
stos
mov
cli
inc
out
push
out
jmp
cmp
cs
pushf
outs
push
loop
cmp
enter
stos
leave
xor
or
and
es
sbb
jno
aam
push
popf
int
loop
out
xor
dec
jecxz
pop
test
mov
mov
mov
call
jg
es
fcomp
lahf
add
loope
inc
xchg
push
or
add
or
mov
jno
push
js
push
jmp
pop
cmp
not
out
sbb
sbb
fisubr
es
push
push
jecxz
mov
push
fdiv
(bad)
fdiv
mov
pop
jl
pop
jge
aam
aaa
sub
aad
xor
adc
bound
add
sbb
sub
mov
jne
rcr
mov
ret
xor
dec
and
mov
sub
and
inc
mov
cmc
or
mov
mov
inc
inc
and
add
mov
push
rcr
inc
jge
push
xchg
jmp
mov
sbb
add
xor
or
jae
js
loopne
adc
mov
out
sub
mov
sub
cwde
ins
cmp
ficomp
fwait
xlat
xor
bound
and
es
leave
mov
ficom
jnp
adc
daa
and
call
mov
loop
pop
not
loopne
add
rol
sbb
push
call
retf
fsubr
sub
movs
add
jb
sub
(bad)
jl
cmp
ins
mov
fsubr
pop
in
test
add
cmp
sbb
scas
loopne
jae
mov
ss
outs
sbb
sub
push
xlat
cwde
es
jno
fs
adc
mov
out
xor
cs
and
xor
pop
out
cmp
mov
inc
out
adc
dec
stos
jnp
mov
mov
add
inc
push
test
inc
gs
dec
fsubr
ret
les
sbb
test
adc
mov
and
mov
cmp
push
mov
push
and
test
pop
ret
mov
out
xor
imul
sbb
add
mov
into
add
xor
mov
jl
ja
and
sbb
xor
ror
aas
cwde
mov
cmp
shl
ror
fdiv
sbb
mov
xlat
fwait
mov
cli
cwde
gs
ins
mov
fyl2x
add
call
cli
scas
xor
ja
sbb
cwde
repz
loopne
fsubr
cmc
mov
stos
add
cwde
fwait
push
retf
inc
and
push
pop
inc
shl
dec
mov
jmp
inc
pop
stos
inc
ins
test
and
ins
rcl
mov
and
movs
test
test
mov
add
cdq
retf
xor
and
add
jp
sar
imul
jbe
(bad)
cdq
mov
mov
push
cmp
(bad)
cwde
mov
lods
xchg
adc
in
ret
bound
pusha
hlt
xor
jno
stos
iret
add
mov
pop
movs
push
cmp
outs
cmp
loope
mov
pop
call
inc
cmp
mov
and
fadd
stc
sub
sbb
and
lea
xor
mov
pop
push
clc
int3
xacquire
mov
scas
stc
inc
xchg
mov
or
pushf
pop
aaa
cmp
nop
push
cwde
add
jmp
pusha
and
movs
mov
pop
xor
in
inc
xchg
aam
add
int3
jp
mov
push
cmps
fistp
aaa
popa
cdq
sub
push
mov
movs
xor
popa
and
mov
and
jnp
outs
(bad)
and
pushf
xor
adc
mov
(bad)
sub
out
out
or
jno
mov
arpl
loop
or
mov
ret
mov
adc
mov
inc
and
pop
jno
int3
push
push
es
repz
dec
cmps
xor
mov
aam
js
cmps
and
jno
cmps
loope
repnz
mov
add
push
rcr
outs
in
or
lods
fist
sub
mov
xor
push
pop
sbb
push
cs
cs
movs
ret
repz
adc
push
je
(bad)
or
outs
and
(bad)
icebp
jb
sar
pop
pop
adc
adc
push
adc
xor
dec
ins
adc
adc
xchg
int3
rcl
cdq
pop
push
cwde
(bad)
retf
mov
call
cdq
fs
mov
out
in
imul
add
or
adc
inc
push
rcl
nop
push
ins
int
mov
dec
sar
sub
das
pop
ret
cwde
jmp
xchg
outs
out
pop
hlt
sbb
int3
mov
adc
and
jb
or
test
es
in
or
mov
fcom
cmp
les
mov
inc
mov
jb
or
in
imul
fisttp
push
jno
sub
mov
inc
cld
inc
inc
or
and
js
and
xchg
mov
out
pop
mov
(bad)
stos
xchg
fisubr
ins
lahf
cld
addr16
adc
inc
pop
gs
mov
mov
and
dec
add
pop
loope
push
push
mov
jnp
mov
mov
fcomi
xor
(bad)
push
in
push
es
add
mov
push
add
jbe
dec
adc
test
push
mov
and
jns
sub
mov
push
cdq
pop
or
adc
ss
rcl
aam
mov
xchg
add
sbb
xchg
int3
add
xchg
bound
jl
xor
in
cmps
mov
test
(bad)
cli
adc
loop
add
dec
fs
test
adc
out
ror
mov
xor
xor
cmp
jnp
jns
sbb
jo
jo
aam
jecxz
dec
out
fisubr
ins
mov
inc
jno
pop
loop
cmovl
sti
and
sub
pop
jb
loope
mov
dec
xlat
xchg
mov
stc
or
test
repz
push
or
pop
jae
sub
(bad)
sub
int3
jge
push
mov
inc
xchg
jmp
rcr
cwde
sbb
or
push
push
fs
push
gs
adc
ja
dec
shr
jae
(bad)
push
dec
xchg
push
or
dec
retf
lahf
xor
mov
sbb
adc
ss
inc
push
mov
mov
cdq
lds
pop
sub
cmp
adc
or
fisub
ins
nop
xchg
pop
shl
xlat
mov
and
push
adc
xor
jp
pop
inc
cmp
inc
mov
jmp
pop
rcr
add
outs
or
xchg
in
mov
mov
jb
aad
daa
adc
mov
int3
pop
int
cwde
sbb
mov
sar
add
push
push
adc
iret
aad
mov
ret
jecxz
cmp
js
fdivr
jecxz
stos
scas
push
pop
jmp
add
add
xchg
xor
cmp
adc
idiv
pop
cmp
push
xor
dec
jne
pop
lds
mov
cmp
sub
and
in
xchg
push
sub
enter
gs
push
jne
in
push
mov
mov
int3
inc
aad
dec
jb
gs
aaa
xchg
jo
inc
fs
(bad)
ins
(bad)
shl
int3
ins
pop
mov
fstp
cmp
icebp
(bad)
inc
jmp
xchg
lds
pushf
and
sub
adc
sub
pop
clc
mov
les
cmp
adc
mov
mov
int3
ins
shr
and
loop
or
adc
pop
fmul
sbb
fwait
dec
xchg
xchg
fisub
and
xor
mov
sbb
or
pop
sbb
adc
mov
add
dec
jno
and
and
out
loope
nop
adc
das
out
add
xchg
test
adc
mov
adc
push
add
out
sub
adc
inc
push
inc
les
loopne
xor
mov
push
mov
test
int
fwait
lods
xor
xchg
mov
scas
out
jae
into
fcmovne
fldcw
cdq
push
mov
icebp
xor
mov
xchg
sbb
add
dec
bound
cmp
jno
adc
fnstenv
mov
cmp
dec
sub
sub
jno
push
cmp
xchg
xchg
sub
xor
dec
fldcw
ror
mov
xchg
shl
add
jo
fsubr
ret
lock
push
dec
sub
fisub
jns
iret
adc
es
sub
adc
dec
mov
xor
cmps
fcmovnbe
and
sub
xlat
test
loop
pop
lea
dec
leave
gs
jb
mov
dec
stos
shr
adc
inc
xchg
cmp
leave
or
(bad)
retf
and
mov
adc
imul
fnstenv
or
sub
or
sub
gs
dec
mov
add
dec
aas
mov
xor
ror
and
rcl
pusha
mov
gs
call
fisubr
les
movs
jl
xor
jb
call
xlat
aaa
das
sti
add
cmps
das
ror
pop
mov
in
pop
dec
mov
mov
jmp
into
dec
test
shl
xor
cmp
das
(bad)
out
xchg
jle
loopne
jg
getsec
jle
fnsave
sti
out
out
jl
adc
cdq
mov
cmp
xor
inc
ins
push
mov
(bad)
in
or
das
aaa
popf
inc
repz
out
xor
or
int3
cmc
or
sar
xor
ret
test
arpl
inc
aam
std
xchg
ror
cmc
cmp
leave
add
mov
and
xor
inc
jae
arpl
push
nop
jo
fdiv
fbstp
scas
dec
sbb
out
and
pop
and
sub
jb
or
sub
mov
out
xor
xor
mov
mov
or
fisttp
ret
ins
arpl
(bad)
les
cdq
push
(bad)
cmp
xor
(bad)
cmp
or
cwde
xchg
inc
ret
xor
mov
sub
test
icebp
jl
in
push
push
xchg
sub
mov
retf
xor
out
sbb
jp
push
pop
lods
dec
and
ss
jno
cdq
imul
aaa
pop
jb
cmp
fsub
sub
jno
mov
xchg
jbe
xchg
cmp
sahf
bound
cmps
cs
and
inc
jecxz
jo
add
pop
inc
dec
out
mov
mov
jne
push
mov
retf
cmp
pop
jae
adc
repz
xchg
mov
jbe
add
xor
loop
jg
mov
xor
loope
sbb
xor
xchg
mov
inc
and
(bad)
adc
mov
inc
xor
or
or
inc
or
pop
sub
cs
cmp
or
outs
mov
mov
mov
out
push
inc
mov
add
sub
and
jnp
data16
test
add
mov
call
loop
int3
push
push
fucomi
add
lods
push
jge
das
inc
data16
pop
mov
mov
mov
(bad)
xor
mov
push
xchg
jne
je
pushf
lods
fist
ret
mov
popa
loop
sbb
in
mov
push
mov
mov
(bad)
shr
loopne
jo
icebp
cmp
pop
loop
aaa
mov
push
push
mov
cmp
(bad)
fbstp
pop
enter
push
dec
aad
lods
mov
mov
(bad)
or
pop
mov
dec
pop
popa
sub
xor
xor
sbb
imul
or
loop
or
inc
sbb
mov
jmp
mov
fdiv
mov
cmp
ins
push
ins
aaa
mov
loop
sub
dec
mov
test
data16
sbb
mov
pop
and
jne
(bad)
leave
push
outs
dec
lock
rep
cdq
push
sbb
es
adc
push
add
aaa
adc
bound
das
xchg
pop
adc
push
jnp
jp
and
movs
cs
push
mov
add
retf
and
mov
lds
mov
mov
repz
or
mov
sbb
pop
push
xor
mov
aam
neg
lods
clc
xchg
fstp
jne
fsubr
xchg
lea
fadd
mov
fld
ins
popf
and
jne
push
xchg
pop
icebp
cdq
ret
retf
cwde
sahf
pushf
xlat
cdq
xchg
and
fist
lea
loop
mov
sub
add
aas
test
cs
ja
mov
and
mov
outs
or
fidiv
sbb
jno
sub
dec
mov
out
adc
push
xchg
push
dec
fxch
pusha
clc
les
push
outs
cmp
jle
add
loop
enter
or
sti
pushf
xor
xlat
adc
cmp
dec
adc
out
jmp
retf
inc
push
push
iret
jl
pop
mov
xor
test
in
lods
aam
js
stos
fidiv
mov
inc
mov
xor
sbb
mov
sar
aam
or
retf
push
pop
test
jmp
mov
push
and
add
aaa
mov
pop
into
pop
ins
outs
jb
fwait
mov
xchg
xor
mov
cdq
popa
push
int
in
pushf
inc
ret
xchg
push
lds
scas
test
dec
dec
mov
loop
or
fadd
xchg
or
mov
pushf
bound
inc
hlt
sbb
and
mov
dec
repnz
lods
push
adc
pop
add
mov
js
out
int
les
pop
jnp
and
out
mov
xor
rcl
stos
jmp
test
push
ins
sbb
dec
les
shr
mov
aaa
ja
ins
les
pop
and
stc
cwde
arpl
rcr
xor
mov
sub
mov
mov
loop
xchg
sub
jle
pop
or
les
lods
push
xor
fisub
sti
call
sti
(bad)
aam
popf
lods
xchg
gs
and
cmp
(bad)
mov
inc
and
mov
jl
fwait
int3
fnstenv
ja
inc
inc
xchg
pop
loop
mov
movlps
push
stos
test
imul
add
fsubrp
add
cmps
cmp
cmps
pop
mov
test
or
push
dec
loop
js
mov
retf
movs
pop
jae
cli
xchg
arpl
and
out
push
cmp
jo
xor
push
scas
mov
fyl2x
adc
adc
push
jl
cmps
xchg
out
dec
bound
int
repz
out
pop
jecxz
repz
sub
shl
sbb
inc
lds
call
out
test
push
sbb
out
add
jbe
cmp
cmp
pop
ins
dec
dec
xchg
add
js
das
and
pop
(bad)
out
clc
mov
int3
sbb
ss
aaa
int
outs
cwde
adc
outs
cmc
cmp
out
mov
jmp
ror
xor
stos
push
and
nop
test
pushf
push
dec
lock
xchg
js
data16
and
dec
jle
ret
xor
xor
push
mov
xor
jb
les
lds
xchg
test
ret
adc
(bad)
pusha
sti
and
fcomp
mov
aaa
(bad)
jecxz
push
out
pop
push
sub
sbb
sub
arpl
stos
pop
retf
stos
out
pop
xchg
int3
mov
mov
cdq
pop
daa
mov
test
push
xchg
ror
or
inc
inc
loopne
add
in
repz
add
sbb
jno
xchg
sbb
dec
sub
pop
xor
into
push
mov
lods
xchg
loop
int3
sbb
push
pop
cmc
add
mov
xchg
ins
fist
inc
sub
jae
sbb
adc
dec
lea
jmp
leave
das
cmp
and
pop
test
ret
repnz
sbb
pushf
mov
into
(bad)
cmp
jmp
or
jno
xor
inc
cld
and
and
add
nop
and
sub
in
mov
scas
xchg
mov
dec
mov
inc
xlat
add
xlat
add
call
add
ror
mov
(bad)
sbb
push
fdivr
aas
loop
jae
jp
jns
pop
sar
add
fld
mov
loope
or
push
in
jno
out
in
mov
pop
mov
sub
sub
or
add
fisub
sbb
mov
popf
and
pusha
fdiv
adc
pop
add
imul
loope
adc
sub
cmp
mov
fld
add
jnp
cmp
mov
sbb
push
std
rcl
adc
aas
mul
push
lods
cld
cmp
fsub
mov
dec
dec
int
inc
jns
mov
jns
fucomi
add
mov
jno
mov
adc
or
adc
sbb
movs
and
out
jae
cmp
sub
cmps
or
out
push
fidiv
push
jg
sub
adc
inc
enter
sbb
jg
ins
shr
or
int3
add
push
mov
add
push
shl
push
add
push
jle
mov
cmp
and
mov
jae
xor
retf
(bad)
fcomp
jl
stos
pop
push
ret
dec
sub
cwde
and
int3
jg
sbb
ja
test
dec
and
jge
int3
add
fldcw
add
pusha
cs
sbb
xchg
sub
fs
das
or
rcr
add
mov
adc
inc
mov
(bad)
mov
(bad)
sbb
add
xchg
add
or
sub
add
pop
xchg
or
jge
loope
retf
cdq
fwait
mov
push
add
lock
sub
push
add
sbb
mov
movs
jo
cmp
mov
in
push
mov
and
mov
jg
scas
mov
jne
retf
icebp
clc
fadd
mov
dec
fs
stos
aad
lods
jae
and
inc
pop
xor
mov
ret
jae
jne
inc
repz
lds
ins
pop
aam
and
or
cdq
mov
xchg
push
or
mov
fs
or
jb
sub
ror
push
add
mov
inc
push
sub
and
mov
jno
adc
push
xor
jns
shld
mov
mov
sbb
aad
aad
mov
xchg
mov
test
xor
sub
movs
cbw
mov
sar
jno
jo
mov
(bad)
and
push
fsubr
out
mov
pop
ins
cmp
out
and
(bad)
shl
pop
fld
test
stos
xor
xor
sbb
cmp
mov
xor
jno
popf
nop
and
pop
sub
adc
(bad)
jmp
sub
adc
call
mov
or
stos
test
and
fs
cdq
dec
int
lds
adc
and
es
movups
xchg
sti
adc
jae
ins
das
out
push
imul
cmp
mov
cmps
ret
stos
xchg
jb
outs
jb
rol
sub
jl
dec
popa
in
xor
arpl
adc
(bad)
es
add
adc
hlt
scas
daa
push
cmps
mov
sahf
data16
(bad)
in
aaa
test
sbb
aam
jno
clc
xchg
ret
fcomp
frstor
xor
ins
mov
mov
jle
outs
jecxz
in
(bad)
in
sbb
fbstp
cmp
clc
mov
stos
xchg
pop
inc
cmps
sub
jle
lods
mov
or
xchg
sub
xor
ja
xchg
push
rcl
loopne
dec
mov
pop
out
add
mov
mov
xchg
push
(bad)
popf
dec
ret
xor
pop
jne
fs
(bad)
shl
arpl
int
cmps
lahf
pop
xor
jb
loop
cmp
xor
pop
cld
cmp
dec
lea
mov
shl
pop
adc
adc
sub
ret
fistp
add
fs
je
or
call
jb
test
xchg
aam
popa
mov
adc
cdq
xlat
sbb
cmp
dec
sbb
pop
adc
xor
push
jmp
push
loopne
sub
das
xchg
inc
jbe
inc
lods
cmp
lods
ret
mov
cmp
test
sub
add
jno
xchg
adc
mov
push
nop
mov
cwde
pop
push
stos
clc
xor
xchg
test
or
pop
jo
adc
xor
cmp
cld
lahf
add
not
cwde
mov
pop
pop
inc
lods
dec
xor
scas
test
sar
adc
pop
fs
and
sub
test
aaa
add
sub
outs
or
jmp
sub
sbb
lods
aaa
mov
les
neg
mov
cmc
sub
dec
into
sub
push
cmp
pop
sbb
bound
cli
inc
stos
push
mov
mov
cmp
or
js
add
add
test
sbb
ins
aam
sub
rol
(bad)
loop
iret
pusha
test
xor
sbb
push
adc
inc
js
and
aas
push
out
push
cld
int3
mov
mov
jbe
(bad)
xchg
test
lods
sub
and
fmul
sub
movs
or
mov
sbb
clc
cdq
(bad)
pop
retf
add
pop
jne
add
jne
cmp
mov
imul
adc
jo
cwde
inc
sub
jmp
inc
and
inc
cmc
adc
xchg
hlt
jae
push
mov
adc
add
xor
sbb
pop
int3
cmp
push
out
test
push
iret
xor
sbb
ins
inc
sub
sbb
push
xor
bound
cld
push
popa
adc
mov
dec
fbstp
dec
or
fistp
jl
pop
or
push
push
xchg
push
adc
les
bound
(bad)
xor
test
push
bound
jbe
int3
jae
test
inc
inc
xchg
fdiv
jno
dec
int3
jne
shl
gs
jne
icebp
add
stos
cdq
popa
je
or
popa
mov
push
movs
mov
pop
ror
(bad)
xor
mov
add
push
movs
cmp
mov
adc
rdpmc
jae
inc
jae
add
fwait
aam
icebp
cmp
mov
mov
repnz
or
jns
adc
mov
mov
scas
jnp
retf
jl
leave
out
push
xchg
jno
daa
add
out
mov
or
lds
(bad)
and
mov
das
bound
pushf
retf
adc
and
sahf
cmp
jo
dec
out
(bad)
mov
lea
adc
loope
xor
jae
jbe
cmp
ss
das
int3
iret
int3
shr
sbb
into
loopne
mov
dec
jb
push
retf
pop
mov
push
xor
mov
sub
push
xor
movs
(bad)
(bad)
retf
mov
out
pop
rcl
push
sub
add
scas
mov
add
cmc
add
mov
push
fwait
or
les
sbb
sub
aaa
mov
xchg
mov
add
into
enter
iret
push
pop
test
test
and
jns
pusha
shl
xor
xchg
or
fdivr
or
cmps
cmp
retf
test
sbb
pop
adc
inc
push
mov
push
sub
sub
pop
mov
xor
xchg
icebp
add
pop
ja
hlt
(bad)
fadd
mov
xor
pop
jne
ret
cwde
ret
xchg
cli
nop
gs
inc
add
dec
enter
fcom
(bad)
mov
(bad)
mov
add
cmps
push
fist
pop
sbb
and
jae
mov
add
or
push
cli
pushf
(bad)
jno
mov
popa
xchg
pop
dec
fst
cdq
jne
mov
and
(bad)
out
mov
icebp
test
push
ins
mov
sahf
es
jno
idiv
xor
gs
inc
cmps
out
movs
ret
xor
or
lds
ret
out
ins
cld
nop
sub
pop
addr16
mov
jmp
or
gs
out
pop
test
fst
rcl
sbb
jae
bound
imul
mov
inc
adc
test
(bad)
sbb
popf
cs
push
mov
jnp
push
fcomp
shr
shr
cmps
les
outs
add
adc
jg
push
jge
ret
jo
ds
dec
shr
hlt
sub
mov
cmps
repz
mov
mov
add
jmp
in
out
shl
inc
or
cmp
aad
jns
inc
push
jne
push
add
cmp
cmp
jmp
outs
mov
lea
add
rcr
in
pop
jl
cmp
add
shl
into
add
jae
mov
leavew
lods
push
movs
mov
sub
xor
dec
mov
out
mov
cmp
adc
outs
sub
push
mov
retf
pop
retf
cwde
scas
(bad)
cwde
repz
call
cdq
dec
pop
mov
add
push
sar
movs
mov
jns
adc
(bad)
aam
or
mov
js
shl
push
push
call
retf
adc
push
ret
xor
mov
push
sbb
dec
out
sub
movs
fst
mov
add
scas
sub
in
push
xchg
mov
outs
push
jb
ins
add
push
repnz
cs
push
adc
adc
mov
sbb
aad
sub
xchg
push
jg
inc
jmp
dec
cmc
aam
sbb
aaa
pop
sti
sub
cmc
or
les
jae
adc
loop
lds
push
inc
out
xor
cli
test
scas
adc
sbb
or
mov
cmc
mov
out
push
pop
(bad)
gs
mov
in
mov
xchg
pop
xchg
ins
js
test
push
fdiv
push
cmc
add
scas
jecxz
push
and
xor
push
loopne
dec
ss
pop
outs
cmp
cmp
addr16
cmc
sub
retf
xor
cwde
xchg
aad
xchg
jg
das
bound
retf
xchg
or
shl
fwait
xchg
cmp
sub
adc
cdq
nop
mov
jl
data16
mov
enter
jmp
out
dec
add
push
mov
or
out
into
ret
or
cmps
jbe
pop
lods
pop
mov
and
jb
das
dec
xchg
mov
xor
pop
xor
push
add
add
cdq
(bad)
aaa
add
mov
sbb
xchg
jo
mov
out
jb
push
sub
test
add
icebp
cs
repz
dec
in
sub
sub
xor
jno
cmp
jp
push
jnp
(bad)
cmp
iret
sbb
jne
mov
arpl
test
cmps
cwde
cmp
jl
adc
jne
ret
push
iret
cld
inc
test
push
cmps
mov
mov
add
inc
xor
push
jae
inc
inc
or
ficomp
inc
sbb
xchg
imul
mov
out
mov
shr
outs
jae
les
je
mov
out
pop
repz
mov
push
mov
inc
fcmovb
ja
jmp
dec
adc
inc
(bad)
aas
add
stos
les
inc
lods
inc
idiv
repz
push
inc
jmp
and
xchg
and
mov
push
ins
and
sub
cmp
fisubr
cs
xor
retf
call
sahf
movs
pop
push
mov
add
ret
repz
data16
xor
ja
mov
jecxz
out
lds
ja
add
jle
jmp
pop
test
xchg
outs
and
loope
test
es
add
repz
inc
int3
mov
or
mov
addr16
jb
mov
mov
icebp
clc
xor
loop
push
cmp
xor
jo
mov
jae
inc
repz
push
daa
add
aaa
mov
enter
bound
outs
mov
adc
mov
cmp
vcvtss2si
inc
shl
push
xor
out
adc
dec
add
data16
or
add
and
imul
mov
push
inc
popa
jge
xor
scas
and
(bad)
adc
push
outs
cld
inc
dec
out
fnstcw
xchg
push
xor
lods
(bad)
adc
vcvttps2dq
cmp
or
xor
jl
pusha
xor
sbb
jge
cmc
add
aam
sahf
cmp
je
sub
neg
inc
test
or
(bad)
cld
jp
push
loop
pushf
add
mov
push
mov
(bad)
sbb
retf
clc
mov
out
imul
ret
popf
dec
sub
xchg
add
imul
retf
in
mov
jb
ins
mov
int
and
mov
and
call
in
sbb
cdq
loop
pop
add
popa
sti
cdq
add
in
adc
add
jo
or
jg
bound
(bad)
and
out
pop
cmp
push
mov
sbb
daa
cwde
or
adc
push
dec
push
jne
sub
cdq
mov
xor
sub
bound
int3
sbb
push
retf
mov
and
mov
mov
push
test
add
fsubr
push
push
adc
cs
mov
inc
bnd
and
sub
xchg
push
mov
mov
pop
gs
xor
jle
lods
xchg
loopne
push
mov
xor
icebp
adc
sub
stos
sub
inc
popa
mov
inc
dec
xor
xchg
lods
and
mov
adc
push
mov
or
movs
test
sub
and
cmp
inc
test
das
xor
cmp
iret
cmp
xchg
mov
sub
mov
mov
jl
or
or
sar
out
ins
xlat
push
inc
shl
add
popf
(bad)
fisub
push
mov
mov
sbb
mov
test
xlat
fadd
rol
push
into
shr
adc
push
mov
sub
(bad)
outs
inc
dec
dec
lods
mov
icebp
sub
adc
and
in
sub
fs
mov
adc
mov
int3
retf
dec
add
jno
lods
dec
bound
or
or
jns
fcom
in
pop
out
jb
popf
jmp
sub
push
sar
adc
int3
pop
shr
pop
and
or
add
push
lods
fadd
mov
push
std
inc
or
(bad)
mov
and
int3
sbb
out
es
int3
movs
pop
pop
jp
and
push
clc
adc
mov
jge
mov
mov
sbb
push
jge
fwait
pop
shr
mov
scas
and
es
test
or
add
adc
fwait
push
sahf
and
scas
loop
pop
mov
fsub
dec
or
jle
jno
(bad)
loop
aam
dec
call
dec
popa
add
arpl
dec
jg
loop
dec
ins
pop
add
add
stc
ins
sub
push
nop
outs
in
mov
repz
iret
aam
jae
inc
xchg
dec
pusha
fisub
sbb
popa
push
out
pusha
mov
aam
jecxz
sbb
adc
cdq
js
xchg
arpl
jo
cmp
jno
and
into
add
gs
mov
imul
inc
movs
(bad)
mov
jmp
mov
loop
call
mov
icebp
adc
inc
(bad)
retf
mov
push
nop
pop
(bad)
popf
out
add
test
mov
cdq
test
clc
cs
mov
sbb
arpl
ret
adc
(bad)
ror
cli
xchg
rcl
das
push
and
(bad)
inc
xor
lahf
adc
bound
add
call
popf
mov
push
pushf
dec
dec
lds
sbb
sbb
and
int
pop
push
(bad)
imul
jno
fadd
mov
push
retf
xor
jns
add
or
ins
ins
aam
cmp
push
xor
sbb
loop
loope
sbb
cdq
xchg
fisub
pop
jae
and
fld
(bad)
dec
jmp
clc
xchg
sub
xor
ret
out
dec
pop
jmp
xchg
add
xor
dec
mov
ret
mov
shr
test
ja
mov
push
fisttp
inc
xchg
pop
jb
lods
clc
lahf
rol
cmps
sbb
ret
adc
or
mov
pop
int3
in
mov
adc
push
mov
(bad)
jmp
je
leave
xchg
or
pop
ret
push
inc
xor
xor
aad
popa
xchg
fsub
push
mov
adc
jmp
outs
xor
stos
push
gs
dec
mov
clc
jae
(bad)
das
mov
push
frstor
fisttp
inc
fist
jge
lock
add
push
loop
push
adc
mov
out
mov
out
sub
adc
aam
scas
test
sbb
pusha
and
adc
ret
push
stos
ret
xor
sbb
cmc
adc
sub
out
sub
loope
jl
adc
daa
popa
fs
or
ret
push
jp
mov
movs
ret
out
xor
mov
add
mov
xor
pop
lods
dec
push
int
outs
dec
xor
add
cmp
adc
mov
jbe
push
push
mov
mov
mov
add
icebp
or
jmp
test
test
push
pop
cmp
icebp
xor
(bad)
das
mov
cld
cwde
arpl
leave
xchg
push
cli
sub
jbe
es
mov
(bad)
cld
inc
adc
movs
shl
test
dec
push
pop
int3
sbb
mov
sub
push
inc
and
cmp
imul
arpl
push
scas
sub
pop
(bad)
out
test
pop
cmps
mov
sub
xor
adc
jmp
fcom
mov
ret
adc
adc
mov
pop
push
mov
lahf
mov
cmc
jb
std
dec
jb
mov
mov
loopne
fiadd
(bad)
out
cmp
jae
int3
mov
outs
cmp
inc
rcl
retf
cmp
pop
es
dec
push
movs
dec
stos
mov
(bad)
cmc
(bad)
movs
jl
mov
push
bound
gs
xchg
xor
in
test
or
movs
inc
mov
jb
dec
ins
sbb
cmps
push
mov
sbb
sub
push
or
not
jne
push
xchg
das
fsubr
cwde
pop
or
jecxz
das
les
out
or
scas
div
popa
in
xchg
cmps
popf
inc
and
adc
jge
das
dec
and
pop
fld
sbb
aaa
cdq
pop
fild
pop
xchg
push
push
push
xchg
sub
(bad)
pop
ret
test
pop
and
ret
push
mov
mov
pop
ret
js
push
sub
sub
adc
sbb
pop
loope
pop
sub
popf
sbb
mov
add
or
test
xor
aaa
sub
ins
int3
inc
sub
shl
sbb
dec
(bad)
iret
test
xor
jno
inc
cld
les
out
pop
pop
lods
shr
add
pop
inc
mov
jae
lods
xchg
js
sub
movs
cmc
sub
call
or
inc
mov
movs
or
push
sub
push
test
xchg
xchg
add
inc
sbb
sub
inc
pop
sub
int3
int
ss
dec
adc
sub
mov
xor
and
push
xor
push
xchg
fiadd
jge
sbb
repz
mov
mov
cwde
out
loope
das
adc
sub
sbb
xchg
pop
xor
pop
jp
or
les
cmp
dec
jecxz
add
fiadd
movs
mov
vhaddps
or
das
int
pop
ret
in
adc
out
mov
push
movs
scas
xor
loope
repz
sub
je
int
into
arpl
pop
arpl
push
js
xchg
or
xor
mov
ret
xor
jns
fdiv
iret
les
or
adc
mov
repz
movs
or
xor
out
imul
dec
cmp
sbb
push
das
cmp
mov
inc
in
test
jae
mov
mov
and
xor
jmp
in
jb
xor
jmp
jno
mov
popfw
adc
test
loopne
cmp
add
pop
cdq
test
sbb
mov
loop
(bad)
pop
popa
inc
push
cmps
in
pop
test
and
sub
aam
push
lods
int3
push
ins
xor
and
repz
and
dec
out
loopne
jp
bound
fcomp
retf
inc
test
test
sbb
xchg
xor
sub
xchg
loop
cmp
mov
xchg
push
mov
adc
xor
sbb
xchg
cmps
cmp
aam
inc
movs
dec
fisttp
lock
jl
test
into
jae
fisttp
dec
mov
loop
rcl
ds
mov
adc
lods
push
inc
leave
test
outs
cmp
xchg
sub
ds
mov
xchg
push
cmc
adc
aaa
outs
pop
xor
test
je
mov
jle
pop
push
mov
xchg
sbb
jno
mov
xchg
push
or
add
add
mov
dec
sub
sbb
sub
xchg
sbb
dec
xor
cli
mov
xor
imul
div
jnp
ds
cmp
pop
and
and
int3
pop
jno
adc
sub
jno
mov
mov
mov
add
push
movs
mov
ret
xchg
xchg
ins
xor
fbld
push
pop
jbe
adc
das
sub
and
inc
xor
cdq
nop
pop
mov
popf
les
add
jge
dec
pop
call
dec
sti
cwde
pop
out
mov
xor
mov
and
je
push
sub
cmp
add
loopne
inc
repnz
add
pop
in
(bad)
cmp
xor
out
mov
xchg
lods
jnp
cmp
pop
sub
push
stos
pop
out
push
dec
(bad)
retf
repz
std
ss
push
jne
push
sub
call
aam
xchg
xor
xchg
inc
cmc
les
sub
icebp
jo
pop
mov
xchg
mov
pushf
test
or
xchg
xor
gs
mov
sub
adc
xchg
xchg
(bad)
sbb
inc
stos
sub
mov
test
dec
mov
pop
dec
mov
or
push
int3
cmp
jmp
xchg
pop
loop
jae
ins
mov
imul
ds
in
fadd
push
cwde
mov
lock
mov
xor
adc
stos
addr16
outs
mov
out
push
leave
xchg
jns
inc
push
fs
pop
sti
adc
jmp
cmp
add
push
scas
mov
mov
pop
inc
fisubr
pushf
jmp
mov
retf
stos
dec
test
ss
sub
ins
cmove
(bad)
pop
dec
mov
test
lea
jecxz
les
arpl
jno
ins
mov
sbb
xchg
xchg
retf
and
and
jg
lods
or
add
jg
fldcw
mov
cdq
fst
scas
popf
retf
mov
push
ss
inc
fdivr
mov
adc
int3
or
jo
fdiv
mov
mov
retf
gs
jg
aad
sahf
daa
ret
or
in
mov
(bad)
repnz
and
sbb
cmps
mov
in
fst
xor
jbe
out
xor
push
enter
cs
adc
(bad)
push
mov
xchg
cwde
pop
push
les
mov
adc
(bad)
call
(bad)
repnz
gs
cmp
sub
retf
add
ret
sub
pop
ja
xor
mov
imul
(bad)
movs
push
icebp
xor
add
pop
jp
and
cdq
mov
xchg
push
nop
add
call
pop
jns
and
shr
cmp
mov
lock
test
cli
(bad)
(bad)
push
retf
test
mov
mov
mov
xor
mov
es
jle
inc
mov
mov
and
sbb
and
xor
xor
jb
sub
lods
outs
sub
cdq
nop
push
mov
lahf
dec
(bad)
sbb
outs
ds
and
data16
or
inc
(bad)
cmps
sbb
outs
cwde
ja
mov
movs
xlat
xor
les
mov
inc
xor
sbb
popa
mov
add
out
repz
inc
int3
iret
add
cmp
sub
movs
or
mov
adc
js
je
xchg
popa
les
push
mov
cwde
xor
out
loop
pop
scas
inc
pop
sbb
xchg
jnp
daa
mov
cmps
xor
push
mov
sub
(bad)
push
and
jbe
xor
adc
in
and
call
daa
cmps
mov
pop
out
cs
adc
loopne
scas
cmp
dec
push
and
jmp
in
test
adc
mov
imul
in
out
push
hlt
fisub
ins
jmp
inc
dec
xchg
xchg
mov
and
add
(bad)
sbb
mov
xchg
popa
or
test
ins
sub
test
and
lods
mov
pop
sbb
inc
outs
hlt
retf
inc
cmc
or
outs
mov
sub
and
mov
adc
mov
jbe
retf
xor
add
mov
jmp
inc
sub
adc
fadd
ins
mov
and
pop
ins
retf
retf
cmps
mov
(bad)
pop
jo
or
mov
pop
sbb
push
pop
sbb
or
std
or
adc
mov
and
pop
cwde
mov
sbb
push
push
inc
sub
cmp
data16
and
jae
mov
inc
fld
pop
adc
(bad)
aaa
mov
in
sar
mov
mov
lar
cdq
cmp
aaa
jmp
fcomip
popa
adc
xor
popa
pushf
dec
stos
and
or
int3
mov
cmps
or
sbb
jge
sbb
adc
das
adc
das
aam
push
mov
adc
loop
mov
pop
lods
int
xchg
jae
dec
dec
add
xlat
xor
add
outs
cdq
push
test
cmps
sub
test
xor
mov
cmp
sub
test
lods
add
retf
je
or
jns
fstp
inc
inc
xchg
mov
inc
gs
cmp
sbb
test
mov
stos
pop
sub
mov
cdq
sub
cs
add
mov
xchg
mov
xor
cli
fwait
sub
xchg
mov
mov
sub
sub
cld
push
aad
sbb
sbb
mov
adc
test
lock
inc
cli
test
sub
push
popa
mov
sub
sbb
xchg
outs
push
mov
pop
and
dec
cdq
movs
jl
imul
adc
jae
lea
mov
iret
iret
xor
push
jbe
and
dec
pop
test
jae
sub
lea
pushf
and
and
out
sub
js
mov
mov
cs
mov
(bad)
aam
mov
or
test
or
xor
aad
(bad)
cmp
mov
outs
dec
xchg
loope
in
push
or
mov
dec
mov
xor
xchg
mov
out
std
retf
rcl
mov
cmps
add
mov
ds
ins
dec
and
adc
jns
int3
inc
sub
cmp
or
test
mov
test
jb
add
jne
iret
es
dec
or
inc
or
fnstsw
mov
test
mov
jge
adc
daa
inc
sbb
or
add
mov
int3
jno
inc
aaa
icebp
xor
cmc
les
cmp
xor
inc
test
adc
fwait
cmp
sub
cmp
stos
sub
xor
ins
mov
loopne
pop
popa
xor
fild
mov
inc
sbb
add
arpl
push
push
mov
mov
add
add
loopne
cmps
and
adc
mov
lods
and
xchg
out
push
mov
jbe
dec
jae
out
imul
in
lods
pop
in
mov
pop
push
jmp
mov
pop
mov
(bad)
push
add
mov
push
mov
lock
pop
sub
add
or
lods
sbb
dec
adc
popa
and
fmul
pop
and
inc
out
ss
es
xchg
push
fstp
mov
pop
imul
pop
adc
pop
and
pop
adc
and
fdivr
fcom
push
or
inc
sbb
cwde
pop
mov
push
arpl
dec
mov
dec
test
fmulp
adc
cs
cmp
mov
cwde
cli
cwde
ins
iret
adc
jns
xchg
sbb
sub
cdq
xchg
aas
adc
and
push
int
addr16
test
xor
xor
push
imul
ret
js
cwde
or
repnz
pop
mov
xor
cmp
push
mov
or
sub
xchg
add
adc
and
pop
add
lds
out
mov
outs
inc
test
into
pop
xor
push
xor
push
scas
loop
outs
fdiv
imul
retf
jl
inc
mov
or
or
enter
adc
stc
xchg
add
dec
arpl
cmp
push
jecxz
jbe
fisub
dec
sub
xchg
aas
add
jo
das
aad
or
into
pop
mov
and
xor
add
dec
pop
out
sub
mov
test
jecxz
gs
xor
test
adc
loop
xchg
mov
or
(bad)
pop
xor
mov
mov
inc
pop
data16
pop
xor
stos
icebp
adc
jg
sbb
(bad)
clc
pushf
call
push
mov
sub
out
pop
mov
dec
push
sbb
xor
into
movs
cmps
icebp
cld
fwait
dec
or
fwait
ds
jmp
leave
or
pushf
mov
jnp
mov
and
test
jne
sbb
push
fisubr
mov
push
jnp
sub
jge
stos
(bad)
mov
mov
inc
mov
popa
mov
adc
jb
push
jmp
push
jo
adc
lods
inc
lea
mov
push
mov
mov
dec
xchg
push
cmps
or
jns
fstp
rol
sar
inc
mov
mov
xor
lahf
adc
jnp
mov
daa
jae
arpl
test
cdq
mov
ins
mov
add
sub
div
push
imul
xor
xchg
cmps
mov
xchg
test
mov
test
add
mov
rol
mov
xor
rcl
and
jns
xchg
scas
lahf
add
push
cmp
ds
data16
and
xor
dec
xor
add
mov
pop
inc
cmc
xchg
adc
test
out
mov
and
and
mov
xchg
outs
push
addr16
es
in
sbb
cmp
mov
xchg
ret
or
mov
adc
inc
ja
mov
pushf
lds
out
cs
pop
inc
mov
add
fisttp
out
mov
retf
push
rcl
mov
mov
aam
pop
mov
data16
cmp
sub
add
das
les
jl
push
inc
mov
(bad)
and
adc
inc
jae
jb
push
test
stos
repz
pop
sahf
and
stos
inc
mov
fdivr
fwait
mov
add
xchg
(bad)
dec
jp
cwde
or
mov
xor
mov
pop
addr16
jnp
cmp
out
or
pop
ds
cdq
xchg
mov
test
mov
pop
xor
xchg
retf
adc
push
cwde
add
xor
dec
jnp
sub
add
mov
cmp
adc
sbb
sub
sti
mov
out
push
sbb
adc
retf
add
int3
mov
cdq
icebp
push
mov
pushf
retf
push
and
out
cmp
(bad)
test
lods
push
sub
test
pop
out
mov
xor
out
jmp
mov
fwait
xchg
and
adc
xor
imul
aas
in
xchg
pop
cli
xchg
ja
mov
sub
push
and
(bad)
addr16
nop
xor
mov
fdiv
mov
js
jbe
(bad)
les
jno
mov
xor
popa
std
retf
sub
jb
ror
and
dec
mov
int3
mov
dec
jae
lds
lods
gs
cmp
dec
sub
fdiv
or
fwait
rol
push
fwait
cmp
push
mov
fdivr
repnz
mov
and
and
inc
dec
or
sbb
and
sbb
inc
mov
out
movs
(bad)
movs
adc
sbb
sub
adc
mov
push
stos
mov
mov
push
imul
xchg
das
pop
dec
mov
sbb
retf
loop
rcr
pop
sbb
mov
jmp
add
push
mov
pop
stos
call
rcl
stos
and
inc
ins
outs
sub
aam
jns
add
fmul
xor
add
add
adc
js
inc
repz
or
scas
sbb
jae
dec
outs
cmp
mov
jmp
sub
cmps
sub
pop
add
jno
dec
mov
(bad)
push
aam
aam
test
add
fidivr
test
xor
ds
fadd
adc
ss
xor
loopne
pop
mov
xchg
push
int
add
push
fcom
pop
int
sub
sub
sub
push
push
mov
xchg
sub
(bad)
jbe
dec
test
loop
mov
das
shl
inc
inc
into
movs
mov
adc
mov
dec
jmp
dec
pusha
stos
jecxz
xor
mov
mov
xor
jmp
rcr
xor
mov
(bad)
pop
cdq
cmc
sbb
rcl
ins
pop
jno
pop
mov
dec
xchg
sub
pusha
outs
and
push
fnstsw
call
jmp
push
xor
sar
jns
dec
mov
xchg
out
mov
out
push
gs
sub
push
mov
mov
cmp
cmp
fisubr
adc
aam
sub
push
jae
sub
les
add
jle
fbstp
push
scas
cli
mov
push
sub
xor
retf
int
clc
sub
cwde
sar
add
adc
inc
enter
dec
or
icebp
sub
dec
mov
cmp
jo
inc
popa
sbb
inc
mov
test
dec
cmp
ret
adc
pop
inc
or
adc
and
mov
mov
movs
mov
mov
push
jecxz
pop
retf
xor
es
test
stos
mov
test
xchg
fmul
(bad)
mov
mov
xor
and
sub
push
sub
popf
inc
shl
sbb
jo
cwde
gs
jecxz
int3
retf
fisttp
in
jbe
adc
dec
and
sbb
leave
push
lock
sub
es
xor
out
sub
cmps
repz
push
or
(bad)
cmp
push
push
mov
add
cmps
push
cmp
mov
adc
or
or
gs
ret
int3
inc
push
inc
mov
sub
pop
xchg
xchg
or
sbb
push
sub
(bad)
sub
stc
push
mov
ror
ficomp
xchg
repz
or
xchg
aas
mov
push
lahf
aam
or
fistp
mov
imul
mov
jae
jb
in
into
popa
jl
push
jbe
pop
leave
ret
push
into
jmp
loop
int3
jne
mov
bound
popa
pop
xor
xor
xor
sbb
(bad)
in
pusha
imul
lea
sbb
push
out
aaa
and
xor
std
les
lea
ret
and
mov
gs
add
or
fist
stos
jae
push
sar
(bad)
shl
mov
bound
xchg
stos
int
retf
mov
dec
mov
lods
test
shr
add
retf
mov
rol
int3
ret
or
in
pop
xor
aam
cmp
imul
sub
lea
mov
mov
adc
pushf
rcr
movs
push
(bad)
call
jo
mov
fisub
add
outs
add
in
cwde
daa
jmp
and
push
retf
jns
xchg
lahf
xor
dec
sbb
pop
cmc
aam
in
mov
shl
jmp
sub
repz
iret
adc
not
outs
cmc
add
fisttp
mov
inc
push
in
retf
or
ja
mov
xor
cld
into
movs
sbb
sub
mov
jmp
add
popf
add
ret
pop
je
mov
dec
add
mov
jecxz
push
push
dec
mov
adc
pusha
jno
xor
cmc
sub
mov
jle
fs
inc
fwait
xor
into
cdq
pop
push
pop
xchg
push
mov
mov
ins
adc
pop
push
push
cs
sub
add
int3
pop
into
and
lds
jno
xchg
mov
cmp
xor
daa
push
fsubr
sbb
sbb
jmp
jl
aam
xor
scas
xchg
fsubr
add
ins
rcr
gs
sub
lods
dec
xor
shr
dec
test
jne
pop
shl
mov
mov
cmps
adc
popa
inc
in
mov
push
xor
rol
sub
mov
inc
in
mov
jb
xchg
push
dec
bound
sub
mov
mov
ret
xchg
aam
(bad)
cwde
or
les
loop
test
cmp
adc
ss
lods
sbb
adc
mov
sub
cwde
mov
adc
sub
mov
push
xor
xor
ret
and
outs
into
pop
mov
push
mov
push
sub
mov
sahf
cmp
(bad)
fld
adc
clc
mov
fs
sbb
lea
xchg
pushf
push
mov
fs
xchg
int3
ret
ret
xchg
push
xchg
scas
pusha
(bad)
adc
push
lods
int3
mov
mov
and
xchg
inc
fs
js
sbb
rol
test
xchg
and
or
jo
xor
or
push
neg
sub
rcr
pop
add
push
std
inc
outs
sbb
out
xor
enter
xchg
sub
jnp
adc
es
push
das
sub
xchg
or
push
mov
out
push
loop
mov
xchg
jmp
xor
fwait
sub
aaa
adc
daa
sahf
and
add
or
je
fisub
xchg
xchg
cs
inc
in
mov
lds
cmps
push
jecxz
cmp
clc
cdq
and
mov
add
xor
fs
out
dec
inc
jl
xor
add
adc
lods
mov
popa
push
or
int3
push
push
popa
mov
call
ins
jg
ret
push
call
mov
leave
push
add
add
sar
dec
fcom
data16
cmp
inc
xor
adc
test
or
or
out
ins
mov
mov
sbb
ret
lea
jne
das
sbb
retf
xor
jge
xchg
stos
add
inc
test
loope
sub
lds
pop
xor
push
pop
sub
and
(bad)
loop
loope
in
cmps
loop
or
mov
out
pop
adc
xchg
push
cmp
inc
mov
loop
mov
jecxz
dec
enter
sub
daa
jnp
sub
out
pop
and
dec
jns
or
sub
mov
cwde
and
jo
inc
push
stos
lods
(bad)
loopne
mov
adc
cmp
mov
mov
push
dec
aam
and
xchg
out
sar
and
in
test
test
fadd
out
sub
pop
lds
pop
mov
loop
lahf
jb
shr
js
outs
in
js
dec
cmps
add
push
push
cmps
in
dec
push
mov
sbb
adc
xchg
mov
outs
loop
mov
push
push
adc
or
mov
enter
cwde
fdiv
loopne
or
retf
aam
icebp
adc
mov
inc
adc
sub
cdq
(bad)
ins
bound
movs
iret
adc
pop
mov
inc
retf
dec
inc
xchg
and
pusha
retf
cmp
dec
pop
data16
mov
adc
sbb
fadd
dec
dec
fcom
dec
(bad)
fnstcw
add
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
push
push
add
add
add
dec
push
add
add
add
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
