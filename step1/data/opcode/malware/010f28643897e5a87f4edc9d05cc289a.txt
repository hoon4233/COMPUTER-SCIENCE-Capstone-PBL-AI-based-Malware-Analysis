xchg
out
(bad)
inc
add
add
jmp
push
mov
push
mov
mov
sti
(bad)
std
inc
or
je
push
push
cmps
movs
pop
mov
pop
pop
ret
ret
popa
js
out
(bad)
nop
pop
js
push
push
lea
and
fild
xor
mov
adc
daa
mov
ret
push
mov
sti
outs
(bad)
push
jne
xor
xor
mov
dec
adc
push
mov
adc
jmp
sbb
and
inc
cld
add
add
push
rcr
mov
sar
ret
adc
sbb
mov
cmp
push
xor
add
lock
pop
sbb
lea
inc
adc
jb
cmp
add
push
jmp
(bad)
lea
aaa
iret
in
js
push
pop
push
into
inc
mov
repnz
push
sub
sar
add
push
push
push
test
mov
add
pop
pop
leave
xchg
outs
jo
cmp
cmps
nop
rol
push
or
fmul
adc
test
enter
mov
push
add
je
push
les
adc
clc
or
jmp
int3
add
jno
rcl
mov
dec
jb
or
and
test
jbe
push
jl
ins
repz
adc
test
in
cmp
mov
rcl
pop
dec
pop
cmp
je
movs
push
add
outs
add
jb
push
push
adc
iret
shr
int
add
mov
adc
sbb
mov
mov
sar
add
dec
fidivr
shl
sbb
sbb
adc
int
xchg
add
push
imul
pop
and
call
adc
and
and
push
aaa
and
mov
push
adc
mov
fldcw
or
jno
inc
sbb
mov
sbb
cmp
pop
repz
ret
sbb
pop
(bad)
push
push
sbb
aaa
sti
cmp
je
and
push
pop
add
loop
test
and
jge
cmp
pop
cdq
inc
aam
dec
mov
mov
push
cmp
fstp
sti
(bad)
fiadd
inc
mov
inc
lea
frstorw
(bad)
ss
xor
pop
cdq
mov
push
inc
mov
mov
test
je
ja
push
pop
ret
mov
xor
xchg
xchg
or
push
fcmovnu
adc
ffreep
pop
pop
ret
jmp
xor
cmp
dec
xor
ins
mov
ret
lahf
add
pop
popf
imul
cli
cmp
je
ret
inc
inc
push
pushf
adc
ffree
and
stos
fmul
mov
leave
cmp
mov
scas
add
or
and
enter
pop
hlt
mov
and
stos
cli
lock
and
jmp
push
mov
outs
mov
sbb
cwde
mov
pop
shl
adc
sub
mov
cmp
outs
push
and
sub
mov
jns
imul
sbb
aaa
sub
pop
leave
hlt
fcomp
fcomp
je
or
pop
lock
push
add
inc
dec
es
div
fstp
sub
je
sbb
adc
inc
es
inc
jecxz
call
sub
sub
inc
sbb
pop
mov
mov
lea
push
fwait
jle
mov
pusha
ror
dec
or
push
je
push
cld
sar
sub
sbb
jne
jmp
cmps
add
push
or
pop
lods
clc
push
test
(bad)
push
mov
stos
cmc
int
sub
out
sbb
add
sub
adc
mov
das
xchg
mov
inc
jne
push
inc
mov
cmc
mov
out
jno
push
adc
push
adc
add
dec
add
add
fcomp
sub
mov
push
add
fild
add
pop
add
push
popf
and
add
xlat
push
test
fnstenv
inc
std
sbb
scas
sub
push
pop
adc
push
adc
jnp
rep
movs
cmp
add
out
ret
pop
pop
adc
into
lea
loopne
icebp
mov
push
jno
adc
and
cli
fmul
sub
lock
in
xchg
mov
scas
in
pop
call
inc
cmp
cmp
lock
cmp
hlt
pop
fs
inc
in
push
push
and
mov
jbe
call
lea
cmp
jae
sar
xor
or
sar
dec
inc
mov
rcr
outs
mov
dec
cmp
pop
pop
cmp
jnp
inc
jg
and
ret
int
in
dec
push
mov
leave
je
jns
scas
push
sub
(bad)
call
adc
movs
ret
push
sub
push
xor
js
into
cld
or
cmp
pop
xchg
add
cld
sub
adc
test
xlat
xor
lock
add
outs
sub
add
adc
add
mov
fldcw
lock
jne
dec
xlat
daa
retf
mov
lea
rol
adc
sbb
mov
push
ss
add
ret
jne
hlt
(bad)
popa
fst
jle
sub
movs
cmps
jo
pop
jl
push
scas
retf
cmp
add
cld
push
jnp
leave
mov
hlt
and
inc
dec
mov
push
sti
push
cmp
jae
enter
xchg
cmp
sub
cmp
sub
popf
sbb
or
add
loop
xchg
sbb
fldcw
hlt
shl
sbb
sar
cmp
jge
js
inc
mov
out
or
or
pop
sub
adc
push
stos
add
cmp
jne
cmps
shr
(bad)
je
mov
mov
add
call
sbb
and
call
inc
aaa
test
lods
inc
test
mov
pop
shl
ins
push
mov
loopne
jl
jecxz
jnp
sbb
and
mov
pop
and
pop
sub
call
and
xor
dec
not
ss
sar
jnp
cld
or
add
pop
fist
std
push
adc
add
(bad)
je
lock
push
dec
and
lock
mov
lea
in
shr
mov
adc
push
shr
inc
in
cmp
shr
mov
or
add
pop
or
xor
ss
jae
jnp
push
inc
pop
repz
push
pushf
mov
mov
lock
mov
and
jb
outs
adc
sbb
and
cmps
xor
xchg
sbb
pop
test
sub
loopne
add
or
add
xadd
push
cld
or
aas
sub
mov
test
ss
jge
xor
inc
pop
pop
pop
inc
add
push
mov
(bad)
scas
mov
std
inc
xchg
mov
push
dec
push
add
or
lock
sub
mov
and
or
sub
sbb
lea
enter
ss
jl
ss
repnz
and
push
fs
icebp
sti
repz
pop
call
push
inc
dec
push
push
mov
mov
dec
inc
dec
inc
push
pop
cmp
ja
mov
mov
fnstsw
and
push
inc
xor
mov
(bad)
jmp
mov
je
ror
mov
hlt
xor
add
sub
mov
and
add
pop
mov
retf
mov
sbb
repz
setbe
sti
push
mov
xor
mov
push
rcr
and
sbb
ret
lea
push
push
popf
neg
cmp
and
jl
out
adc
sub
add
stos
dec
jle
movs
add
jne
jge
xor
add
je
sub
and
sub
adc
call
movs
or
adc
sar
mov
fbstp
push
push
push
pop
mov
(bad)
cdq
sub
mov
xor
inc
out
aas
pusha
sar
xor
add
add
loop
outs
sahf
bound
inc
jge
mov
sub
in
fucom
mov
retf
mov
cmp
pusha
cld
lock
jg
push
add
cmp
ret
push
push
push
nop
sbb
push
aaa
sbb
mov
int3
mov
scas
mov
pop
ret
sbb
loop
mov
out
jmp
ds
pop
mov
or
add
sbb
xlat
adc
jo
test
jl
mov
div
or
jae
je
pop
push
mov
repnz
and
inc
sub
iret
dec
push
sub
cmp
jne
or
inc
sub
fs
add
mov
in
cmp
jne
inc
data16
add
ins
rcr
(bad)
inc
mov
jmp
neg
sbb
xor
rol
ror
add
add
stos
sub
adc
adc
jle
jnp
loopne
mov
mov
mov
or
pop
imul
je
push
clc
inc
hlt
sbb
mov
cld
cmp
mov
sub
(bad)
push
cmps
test
cwde
push
push
push
call
add
hlt
dec
pop
and
add
sub
aad
sar
push
mov
push
in
push
push
push
jne
js
push
(bad)
(bad)
sbb
sbb
(bad)
push
sub
push
push
mov
stos
out
sahf
imul
stos
and
xor
sub
push
in
push
mov
in
aas
cmp
test
test
jge
push
nop
sbb
test
imul
mov
pop
call
xor
dec
jae
adc
push
mov
mov
fist
sbb
test
mov
popf
cwde
or
mov
jle
(bad)
test
xor
or
mov
jmp
shld
inc
shr
sti
imul
ficomp
xlat
xor
dec
inc
dec
ins
jg
fisub
iret
jbe
jo
or
inc
xlat
inc
(bad)
mov
sbb
xor
pop
les
push
stos
push
sar
in
shl
mov
dec
mov
push
or
mul
mov
sti
pop
mov
call
mov
pushf
outs
mov
ds
xchg
or
test
test
jmp
sbb
test
fdivr
sbb
adc
jecxz
lea
push
mov
mov
shl
lea
je
mov
in
out
push
add
inc
push
lahf
cmp
pop
shr
and
sbb
push
loope
inc
add
mov
jo
out
imul
fst
ret
cmp
add
cwde
cdq
xchg
lds
dec
js
and
pop
ret
outs
icebp
sbb
loopne
shl
gs
popa
(bad)
adc
cmp
pop
call
sbb
(bad)
(bad)
cdq
xor
leave
inc
adc
ficom
push
sbb
and
add
add
dec
iret
mov
dec
adc
sbb
mov
pushf
push
push
aam
mov
push
add
fs
lods
fwait
push
(bad)
sub
dec
push
push
mov
cmp
and
out
mov
jl
inc
pop
push
mov
adc
push
icebp
ja
je
cmp
jb
or
mov
cmp
mov
std
fsubr
xor
sub
ss
cmps
shl
sbb
inc
cli
outs
outs
jne
movzx
dec
cmp
ja
mov
mov
ds
stc
pop
loopne
adc
aam
enter
dec
jge
sub
or
push
adc
frstor
jb
adc
adc
sub
sbb
xor
call
or
adc
int
jl
xor
adc
call
sbb
adc
dec
add
add
hlt
fnstenv
jg
mov
pop
sub
or
das
shl
adc
cmp
cli
push
add
ret
sbb
or
and
sub
pop
aaa
outs
lds
movs
ror
adc
inc
bound
push
mov
gs
std
mov
stos
xchg
std
jae
add
push
push
data16
jmp
sti
rep
mov
pop
xor
inc
pop
push
sbb
mov
(bad)
mov
fst
aam
inc
lds
xor
std
int3
out
xchg
or
jp
or
test
jg
mov
dec
pop
lods
sbb
mov
cmp
inc
mul
mov
or
push
push
push
push
and
inc
xor
pop
push
or
imul
mov
xor
(bad)
adc
adc
(bad)
push
push
in
test
je
sub
push
jo
xor
push
popf
push
jp
push
(bad)
into
mov
mov
inc
mov
fs
movs
sahf
xor
ja
pop
sub
mov
push
mov
jbe
popf
ins
cmp
ja
push
or
out
mov
je
call
das
loop
jecxz
repz
cmp
adc
test
sbb
jl
mov
aaa
rcr
popf
test
(bad)
adc
repz
(bad)
lea
int3
or
jo
lea
setne
sbb
fld
ins
sub
popa
(bad)
adc
add
je
dec
fsubr
retf
mov
jmp
jns
and
push
call
outs
ror
movs
dec
sbb
pushf
enter
mov
int
loope
mov
add
loope
cmp
inc
lahf
fucomip
inc
sbb
jle
fadd
ja
or
lock
cmps
sbb
dec
inc
add
add
jle
(bad)
mov
pusha
rol
add
pop
cwde
mov
jg
jg
add
xor
push
push
mov
cld
(bad)
or
mov
inc
mov
push
test
sub
lods
loope
xchg
jmp
ss
jo
int
xchg
sub
in
sbb
cmp
push
add
mov
and
ds
xchg
add
push
loope
jno
dec
mov
sbb
adc
dec
adc
push
je
mov
push
push
shl
lahf
(bad)
sbb
add
inc
mov
mov
sub
xchg
push
je
popf
iret
imul
xor
adc
dec
xor
lea
xor
jo
imul
ss
push
jmp
mov
je
popf
mov
sub
cli
mov
in
out
or
(bad)
adc
cmp
outs
sar
xor
or
add
scas
fidivr
mov
adc
adc
jne
data16
mov
mov
or
cmp
and
or
ret
test
push
lahf
ret
ror
inc
mov
inc
test
jne
push
sahf
sub
ins
sbb
jmp
bound
shl
fdiv
xchg
mov
push
adc
cmp
jae
test
pop
clc
aas
bound
pushf
pop
sub
cmp
jae
or
div
lea
add
(bad)
sbb
leave
adc
dec
add
inc
int
pop
es
inc
mov
and
sbb
pop
(bad)
cld
inc
push
push
or
mov
fmul
icebp
inc
int3
ins
jmp
(bad)
pop
mov
sti
adc
jmp
fnstsw
repz
dec
sbb
push
sar
cmp
rcr
sbb
xor
pop
in
sbb
cmc
lock
or
cld
sti
adc
pop
leave
fsub
lods
add
pop
mov
xchg
dec
or
sar
(bad)
or
and
sbb
sub
arpl
adc
inc
jo
jne
arpl
or
sub
repz
sub
mov
mov
shl
fst
loopne
or
repnz
rep
adc
pop
js
ins
add
pop
ret
arpl
cmp
loope
std
mov
jae
clc
ror
aas
test
js
push
push
fiadd
add
(bad)
push
ret
(bad)
clc
pop
cmp
or
push
adc
sub
fidiv
outs
xor
loopne
sub
ret
dec
mov
inc
pop
ficomp
push
neg
cmp
mov
dec
xor
ins
arpl
test
xchg
and
ret
into
shl
jle
and
popf
add
or
enter
fbstp
push
pop
push
mov
or
push
jmp
shl
xor
adc
fbstp
lea
cld
cmp
jne
pop
mov
ins
sar
loope
lods
dec
add
jns
jne
repnz
pop
sar
dec
dec
ror
in
ret
jbe
loopne
in
repz
cmp
dec
jne
push
clc
test
inc
popa
dec
inc
sub
pop
sahf
pop
mov
bound
lea
push
jne
adc
mov
mov
sbb
add
shr
adc
cli
inc
mov
mov
jg
test
mov
jne
inc
jl
add
jo
pop
sbb
dec
imul
push
jne
(bad)
xor
cs
sbb
xchg
fdiv
pop
or
mov
mov
test
jne
jbe
mov
dec
adc
dec
add
iret
std
cmc
mov
pop
mov
adc
or
ret
or
cmp
mov
xor
dec
repz
pop
in
sbb
cmp
add
mov
dec
adc
push
add
adc
mov
add
test
xor
and
pop
cmp
jne
(bad)
xor
jo
out
adc
xchg
mov
pop
pusha
ss
mov
fwait
sbb
or
test
mov
ins
adc
xor
sahf
fstp
imul
call
mov
out
je
in
jb
fld
mov
loope
stos
inc
add
sbb
xor
mov
dec
jmp
inc
adc
call
sti
rol
inc
adc
int
scas
sbb
add
mov
xchg
mov
sbb
imul
xchg
ror
iret
ja
stc
sub
cmp
aaa
fsubr
and
adc
push
pop
push
pop
js
mov
dec
inc
jle
xchg
enter
pop
cmp
push
jl
xor
pop
leave
mov
int
enter
jle
jbe
sbb
and
push
mov
push
cmp
inc
mov
xor
fdiv
sub
fidiv
ret
adc
dec
enter
push
pop
ret
inc
push
pop
add
in
and
sbb
cmp
push
ret
pop
adc
in
lock
adc
inc
and
adc
and
adc
push
and
es
or
push
jnp
push
ret
or
xchg
xlat
hlt
adc
loope
loope
sbb
push
and
jecxz
pushf
mov
xchg
lock
test
pop
mov
fcmovnu
fwait
push
pusha
fisubr
pop
lea
test
sub
sbb
mov
adc
movs
cmp
je
pop
or
sbb
jle
adc
and
loope
inc
inc
push
push
push
sub
jo
adc
add
es
inc
adc
pusha
inc
ror
adc
dec
mov
push
clc
(bad)
pusha
fld
cmp
ja
dec
ret
mov
push
lea
out
dec
pop
test
mov
repnz
mov
add
rcl
adc
mov
icebp
popa
mov
test
ins
push
mov
(bad)
sub
ja
pop
add
dec
or
jge
mov
push
fld
es
jb
mov
sbb
push
push
push
or
scas
pop
fstp
pop
int3
outs
test
stc
mov
(bad)
cmp
mov
sub
cmp
jae
sahf
push
inc
sub
or
mov
cmp
jae
clc
fsubr
loope
mov
cdq
jmp
shl
adc
jne
and
clc
and
mov
sbb
neg
jle
fld
mov
and
outs
enter
sbb
ins
jbe
cmp
mov
hlt
xchg
mov
push
xor
ja
and
es
push
dec
aas
push
iret
call
pop
jle
jle
in
pop
and
into
xor
(bad)
sar
cmp
and
sub
inc
sar
cmp
jbe
or
mov
mov
cmp
pop
jae
rol
pop
xor
add
cmp
faddp
retf
sub
and
adc
(bad)
popf
icebp
adc
ror
mov
test
adc
pop
push
dec
dec
dec
mul
jmp
sub
or
add
and
dec
xchg
lds
pop
daa
lock
cmp
add
stos
jo
and
lea
jne
aaa
pop
mov
inc
mov
aam
add
dec
jne
add
fdiv
js
push
cld
adc
sbb
pop
adc
inc
jmp
inc
adc
clc
lea
out
push
xlat
test
push
add
inc
pop
out
mov
or
or
or
fstp
pop
std
rcl
jmp
jne
clc
cmp
sbb
ror
(bad)
and
test
dec
push
xlat
mov
jno
cmps
sbb
es
outs
jb
mov
push
push
xchg
pop
jmp
ss
sbb
xor
test
add
lahf
and
test
xchg
je
call
and
push
fcom
aad
repz
mov
stos
add
push
sbb
jne
ss
and
jb
sbb
jbe
mov
mov
mov
push
scas
mov
sbb
jae
push
mov
das
mov
das
xor
cmp
je
dec
adc
cmp
mov
cli
push
adc
ja
add
aad
mov
or
ins
sub
es
add
sahf
mov
pop
mov
add
fnstenv
sbb
sub
inc
in
mov
push
dec
pop
div
shr
push
in
jb
idiv
add
mov
sub
lea
cmp
jbe
fst
lea
sub
and
adc
cmp
push
add
pusha
les
fsubr
aad
fucomp
sub
sbb
add
push
push
or
sbb
or
dec
stos
call
pusha
push
mov
test
adc
imul
(bad)
push
push
or
data16
mov
or
shl
mov
repz
push
lods
fs
or
lock
inc
add
ins
pusha
inc
shl
pop
pop
mov
(bad)
push
in
es
int3
pushw
push
push
pop
mov
sbb
cdq
push
clc
and
in
jbe
sbb
xchg
inc
or
cmp
outs
ret
(bad)
mov
shl
or
xchg
icebp
inc
inc
call
push
jmp
ret
mov
or
clc
adc
cmps
rcr
call
and
outs
call
adc
imul
push
fstp
push
jb
xchg
daa
and
imul
loopne
push
cwde
aam
or
sbb
add
cmp
or
stos
jae
daa
mov
xchg
pop
mov
cs
push
pop
imul
test
rcl
test
hlt
hlt
cli
push
leave
mov
cmp
xchg
dec
test
sbb
stc
push
addr16
cmps
adc
xor
adc
shr
aaa
cmp
add
add
push
push
cmp
pop
int3
xor
mov
pop
ret
jae
scas
in
data16
daa
pop
(bad)
pop
div
fisubr
push
xor
push
push
mov
sub
cmp
clc
stos
loope
ja
data16
add
sub
into
xor
shl
outs
scas
addr16
xor
ss
into
scas
pop
jb
pavgb
cmp
cmp
xchg
push
outs
or
daa
xchg
adc
fwait
ret
popf
sbb
mov
cmp
adc
push
and
sub
push
ret
add
cmp
add
pop
hlt
add
dec
cmp
pop
mov
shr
std
jg
cmp
push
sbb
jo
jne
out
mov
lea
add
adc
and
imul
add
xor
(bad)
arpl
shl
xchg
push
jno
sbb
outs
or
mov
dec
test
outs
jo
or
cmp
lahf
add
adc
xor
ret
adc
sar
jg
pop
cld
jae
ins
jmp
add
rcl
push
sbb
cmc
cmp
(bad)
push
pusha
hlt
rcr
call
fidivr
xchg
pop
mov
clc
mov
dec
data16
mov
xor
ja
push
push
sub
sar
adc
mov
pusha
push
jns
or
aad
and
sbb
push
hlt
mov
cli
gs
pop
push
xchg
pop
mov
sar
cmp
ins
inc
mov
aas
jmp
jl
movzx
pop
sbb
push
dec
or
cmp
test
stos
shl
iret
pop
fdivrp
ret
push
imul
test
push
shr
repz
data16
loope
out
xchg
add
rol
xor
dec
clc
mov
mov
xchg
cli
(bad)
sub
setne
fisttp
sub
sar
dec
mov
push
hlt
mov
ins
inc
xchg
(bad)
push
clc
adc
(bad)
sub
add
or
in
pop
pop
pop
leave
cmps
dec
pop
add
mov
jo
(bad)
mov
pop
rcl
push
shl
jbe
outs
gs
add
scas
or
(bad)
push
push
gs
loopne
test
pop
bound
scas
mov
add
inc
sub
mov
add
adc
dec
(bad)
in
jo
mov
push
push
sub
xor
sub
sbb
or
fld
dec
aaa
and
inc
cmps
push
adc
inc
mov
jbe
jl
or
call
test
hlt
hlt
push
test
bound
rcl
push
(bad)
sbb
or
jns
and
setb
cmp
out
js
cmps
arpl
and
outs
aam
mov
mov
cli
pop
xor
(bad)
mov
es
cmp
add
or
inc
push
dec
test
jmp
fcomp
adc
cmp
sub
rcr
inc
add
dec
push
or
push
jmp
repnz
and
outs
inc
jmp
push
jns
mov
(bad)
leave
cmps
push
(bad)
jb
(bad)
jb
or
mov
sbb
jmp
pop
xor
sub
adc
adc
jmp
inc
ja
loopne
dec
xchg
adc
sbb
test
pop
adc
icebp
cmp
and
dec
aaa
push
xor
je
cmp
rol
pop
ja
dec
inc
sub
call
push
dec
iret
push
ret
jmp
test
mov
int
push
xor
sub
pop
or
into
gs
das
arpl
out
sbb
stc
cmp
pop
mov
or
jecxz
xor
xchg
add
mov
js
sbb
sbb
jmp
cli
adc
sbb
scas
imul
jne
aam
sar
mov
shl
xor
xor
inc
loop
cdq
in
dec
out
clc
pop
push
gs
ret
mov
cli
sbb
inc
or
ins
retf
adc
mov
mov
xor
push
mov
mov
mov
adc
sbb
push
cmp
cmp
ror
int
ficom
or
in
ffreep
adc
out
repnz
adc
jmp
sub
dec
pop
scas
or
sub
pop
add
push
mov
lahf
idiv
pop
arpl
iret
rcr
adc
adc
sub
enter
sahf
repnz
fdiv
inc
(bad)
and
and
retf
add
sbb
ret
add
in
or
mov
push
ret
clc
fs
sbb
push
imul
clc
pop
lods
push
mov
xlat
sti
jle
(bad)
neg
sbb
not
inc
and
outs
loope
push
ret
jle
push
jo
mov
cmp
jp
mov
enter
es
lods
push
add
outs
rol
or
cmp
je
xchg
xlat
popa
cmp
ret
mov
ret
push
xor
in
jge
jo
jg
jo
ds
popa
out
cmp
in
cs
inc
pop
inc
xchg
jmp
sbb
cmp
fcom
sub
outs
jne
sub
(bad)
imul
jo
pop
and
or
push
sar
loopne
push
loopne
aaa
bound
pop
shr
push
jle
mov
jo
jle
out
jg
or
pop
lods
or
jmp
movzx
ror
push
mov
ins
jg
cmp
je
push
lea
inc
push
push
aas
mov
inc
bound
iret
inc
cs
pushf
aaa
test
in
repnz
jmp
mov
adc
cmp
xchg
cmps
or
or
and
mov
push
mov
ret
xchg
cmp
xchg
mov
and
or
cmps
retf
popf
dec
mov
or
push
dec
inc
jns
in
mov
shl
in
ret
ins
cmp
cmp
mov
imul
mov
jecxz
jmp
jb
ror
data16
jne
cmp
gs
mov
push
scas
or
push
rol
inc
fild
lods
leave
dec
leave
sbb
mov
inc
popa
shl
pop
and
mov
and
push
push
fld
or
lock
dec
fmul
js
mov
inc
cmp
sub
pop
add
push
push
mov
fistp
xor
dec
jg
push
push
mov
push
adc
loope
sbb
jmp
retf
xor
js
inc
imul
mov
sbb
and
push
xor
cmp
add
cmp
inc
stos
push
into
shl
in
mov
push
div
cwde
ror
cmc
xor
mov
mov
mov
(bad)
mov
sbb
pop
in
cmp
cmp
popa
jl
mov
mov
fs
sub
push
jno
sbb
mov
je
mov
outs
(bad)
or
adc
fldz
iret
sub
lea
pop
lea
mov
cmp
mov
div
je
adc
pusha
shl
and
jge
mov
in
fcmovnb
jo
sbb
xchg
scas
xchg
jne
jne
jmp
mov
push
in
fwait
ins
pop
sub
movs
or
lock
outs
jns
xchg
cmp
jnp
adc
movs
adc
mov
std
bound
dec
inc
cmp
and
add
lock
lea
jmp
adc
lock
mov
xchg
in
adc
stc
pop
mov
clc
jmp
or
push
enter
neg
add
mov
cmps
adc
add
loopne
adc
adc
or
je
loop
sub
ds
(bad)
les
call
mov
or
push
inc
jl
and
pop
out
ins
inc
dec
push
shrd
push
mov
(bad)
out
mov
xchg
imul
not
ret
pop
stc
dec
jge
inc
sub
sub
sub
mov
dec
mov
xor
xchg
pop
jmp
jns
add
dec
jl
xchg
sbb
push
rcr
pop
and
movs
sub
adc
adc
sar
sub
ret
add
mov
jp
(bad)
push
adc
sub
fiadd
sub
es
xor
add
jo
data16
sahf
test
or
ffreep
jmp
dec
movs
loop
and
pop
pop
test
ins
mov
shr
(bad)
(bad)
rol
lea
jecxz
fs
inc
cmp
sub
pop
and
mov
adc
loope
out
inc
add
push
xchg
or
add
adc
jl
sub
or
xor
and
cld
or
mov
out
out
and
or
mov
les
cmp
retf
daa
div
sbb
add
lahf
lods
inc
cmp
aam
xor
push
rol
in
in
fiadd
push
cmps
outs
sti
in
jl
inc
call
push
push
adc
pop
cmps
jecxz
pushf
sbb
dec
rol
jge
push
js
inc
pop
jne
jo
lods
jo
mov
clc
nop
outs
cmp
xor
lock
push
or
pop
jae
lea
add
sti
sbb
mov
movs
mov
mov
adc
sbb
mov
mov
push
push
push
mov
clc
inc
and
dec
mov
mov
pop
push
mov
push
sub
dec
or
pop
stos
push
clc
inc
mov
cs
push
or
inc
lea
das
cmp
fild
clc
add
(bad)
jmp
(bad)
jne
dec
mov
pop
pop
test
mov
lea
les
in
dec
pop
pop
dec
fs
jb
push
out
repnz
je
or
mov
mov
and
ins
or
sub
in
je
(bad)
mov
shr
mov
int3
jb
imul
sub
xchg
cmp
pop
mov
jecxz
sar
test
push
clc
ret
movs
xor
xchg
int
fdivr
mov
lods
(bad)
jns
cmp
and
ins
xchg
test
xor
mov
rol
aas
sbb
test
pop
cmp
and
mov
sbb
pushf
(bad)
(bad)
sub
push
push
cmp
mov
mov
in
loope
jo
inc
ja
add
add
or
and
ds
test
inc
scas
fwait
jl
jnp
and
sbb
mov
add
mov
xor
mov
sub
imul
jge
pop
(bad)
mov
pushf
lods
into
xor
lods
adc
fbld
inc
mov
ret
sbb
sbb
nop
in
inc
dec
xor
imul
xor
inc
mov
push
ret
adc
push
mov
movs
cmp
scas
lods
stc
jmp
push
push
pop
mov
xor
xor
mov
jns
add
or
push
inc
cmp
jo
and
or
push
retf
je
js
pop
ret
test
pop
pop
or
sub
or
ret
push
jns
pop
pop
nop
sub
add
cli
fcom
pop
mov
xor
ret
in
add
call
mov
inc
sti
xchg
xor
sysret
add
or
mov
adc
gs
cli
in
std
pushf
out
mov
or
enter
cli
enter
sbb
ror
aam
in
into
fmul
cwde
mov
das
xchg
retf
movs
test
jo
xchg
out
repnz
std
ins
dec
test
jl
pop
fistp
sub
xchg
or
and
sbb
not
cli
das
cmp
or
cld
mov
cwde
cli
fs
mov
cwde
and
cld
mov
pushf
cli
add
sub
lar
xchg
push
std
mov
cmp
xchg
daa
pushf
sti
and
mov
mov
jo
cmp
or
dec
jbe
cli
pusha
jnp
or
or
(bad)
rcl
adc
in
std
pushf
cli
popf
push
(bad)
and
pop
sti
fs
ss
sti
cs
add
push
mov
in
nop
xchg
(bad)
aad
shr
or
sub
sbb
and
mov
add
adc
ror
loope
push
add
add
jo
dec
das
push
xor
add
dec
adc
mov
or
sub
movzx
movs
add
fimul
call
sub
add
adc
es
inc
cmc
mov
jns
movs
mov
xor
push
neg
pop
mov
dec
leave
mov
shr
pop
fmul
enter
or
jne
mov
imul
into
mov
mov
clc
add
or
jne
xor
dec
neg
es
pop
xor
push
push
sub
or
sub
mov
mov
js
dec
icebp
sub
xchg
aaa
inc
cmps
bound
shl
push
shl
push
dec
jp
daa
in
fsub
inc
icebp
mov
mov
pop
and
icebp
cmp
mov
mov
pusha
inc
stos
pop
jmp
retf
sti
push
test
jne
inc
ins
sub
dec
add
loopne
data16
lds
add
icebp
pop
mov
fs
outs
sbb
mov
jl
sbb
sub
mov
jl
inc
ret
fldenv
in
movs
inc
cmc
cld
clc
(bad)
mov
pop
cmp
xor
and
adc
imul
push
dec
cmp
rol
bswap
or
adc
repnz
or
and
loope
out
cmp
data16
aad
xor
mov
retf
outs
push
nop
xchg
out
sbb
and
mov
push
adc
sbb
sbb
cmp
mov
or
imul
rcr
hlt
shr
dec
pop
jg
add
push
scas
(bad)
push
or
sbb
mov
pop
mov
push
fstp
and
pop
or
mov
jne
pop
pop
push
jle
retf
add
mov
or
push
pushf
mov
cmc
sub
into
fwait
imul
retf
cmps
push
adc
jne
xor
add
in
ror
cs
inc
iret
popa
in
mov
push
(bad)
ins
dec
cmp
jb
(bad)
add
add
jle
pop
xor
pop
idiv
mov
push
dec
inc
jne
nop
loopne
fnsave
xor
js
inc
inc
inc
xor
imul
pusha
and
daa
cwde
pusha
add
movs
or
or
inc
jo
add
or
mov
jnp
mov
lods
sbb
or
movs
add
cwde
dec
jl
imul
add
mov
add
mov
nop
cmp
xor
jmp
(bad)
mov
stos
sub
add
hlt
icebp
jmp
pop
int3
xor
xor
bnd
adc
fcom
xchg
push
and
xor
movs
xor
rol
jmp
push
test
dec
test
mov
ins
xor
pop
in
inc
test
lea
xor
ds
inc
inc
adc
push
jmp
out
jmp
loope
mov
rcr
jmp
xor
int3
mov
inc
pop
inc
push
ins
push
imul
mov
and
jns
scas
movs
bound
mov
sbb
fdivr
je
ins
test
cmp
add
xor
fcom
clc
add
push
push
dec
push
push
cmp
xchg
adc
inc
hlt
push
fisttp
and
cmp
xchg
add
loopne
int3
mov
lea
enter
shl
fs
out
inc
clc
mov
pushf
add
ins
xlat
cmp
ret
mov
bound
jbe
dec
mov
sbb
cmp
adc
mov
(bad)
adc
cmp
pop
pushf
cmp
out
mov
cmp
push
push
push
push
mov
movs
add
jg
inc
mov
inc
je
add
xchg
jle
or
mov
sbb
cmp
imul
shl
sub
or
das
icebp
add
int3
pop
and
mov
sbb
push
std
sub
rcr
inc
inc
scas
and
adc
xor
mov
or
xor
push
push
add
je
xor
jns
push
xor
jae
repnz
xchg
jo
std
push
xor
rcl
inc
scas
and
inc
push
mov
lock
xchg
add
add
in
sbb
sub
hlt
mov
je
sar
popf
enter
rol
mov
imul
xor
sbb
xor
popf
pop
je
pop
jbe
and
or
jbe
aam
lds
or
faddp
sbb
adc
or
and
stos
xchg
xchg
inc
mov
and
clc
xor
xor
push
ss
pop
inc
mov
inc
pusha
aad
adc
in
leave
and
mov
mov
ss
pop
fmul
or
loope
movsx
imul
rol
cmp
pop
jbe
pop
sub
xor
pop
add
or
mov
enter
cmp
add
loopne
mov
adc
push
inc
adc
cmp
inc
add
lock
or
lods
in
sahf
xor
jne
lods
mov
jno
test
sbb
push
fadd
sbb
movs
pop
call
das
aam
mov
sbb
jno
shr
add
xor
or
rol
mov
outs
xor
cmps
loopne
and
ins
imul
mov
pop
sbb
dec
outs
rcl
and
push
push
push
inc
loop
ins
mov
call
pop
sbb
leave
sbb
jmp
sbb
repnz
addr16
sbb
xchg
inc
cmp
jb
cmp
sbb
add
or
jmp
jp
int3
(bad)
sbb
dec
loop
inc
add
scas
add
pop
sbb
cmp
(bad)
test
stos
sbb
icebp
es
add
or
ds
push
(bad)
xor
adc
repnz
fist
bound
add
jne
nop
fstp
cdq
jmp
sub
jg
scas
scas
mov
adc
lock
pop
jne
inc
mov
cwde
push
jnp
xor
add
lods
pushf
mov
arpl
pusha
sahf
cdq
mov
xor
push
mov
jl
arpl
ins
into
cmp
je
mov
and
loopne
or
mov
and
push
test
jo
cmp
sub
xor
adc
sub
mov
mov
sbb
shl
mov
cmp
call
xchg
ss
(bad)
(bad)
cmp
add
sbb
nop
fistp
pop
mov
add
xchg
dec
sbb
popf
test
jge
mov
rol
adc
ins
sbb
add
rcr
xor
loope
adc
or
movzx
pop
int
rcl
and
arpl
mov
adc
fstp
adc
jbe
and
pop
cli
fwait
mov
aam
xor
imul
inc
jg
xchg
enter
add
inc
sbb
dec
add
lods
imul
pop
sub
sub
and
xor
cmp
jp
xor
add
adc
inc
dec
in
aad
xor
(bad)
jbe
jl
push
or
jnp
mov
mov
adc
or
and
mov
movs
sahf
add
sub
jns
push
enter
push
mov
or
cs
je
ret
inc
adc
cmp
mov
xor
xor
in
or
or
lock
sbb
ror
(bad)
sbb
adc
xor
push
gs
pop
push
inc
push
xchg
sar
in
dec
push
dec
push
xchg
xor
sub
or
sahf
lds
imul
or
sub
push
mov
lods
ret
popf
repz
out
xor
mov
cli
dec
std
dec
cwde
je
outs
and
mov
imul
cmp
inc
bound
cmp
ja
jbe
mov
mov
pop
fucom
fst
and
imul
inc
mov
ja
std
or
clc
sub
and
inc
mov
xchg
push
dec
(bad)
iret
push
ss
(bad)
jp
add
call
call
add
mov
jnp
add
sbb
js
lea
add
test
add
add
sti
in
push
mov
push
lea
inc
js
es
arpl
inc
dec
or
leave
add
cmc
call
mov
add
and
cmp
mov
ins
jae
or
and
push
jmp
sub
fwait
cwde
mov
push
arpl
push
imul
inc
push
mov
cmp
dec
push
jne
push
push
cmp
hlt
adc
cmovl
jo
lea
movs
mov
aaa
jge
jae
push
pop
stos
fwait
and
mov
inc
inc
pushf
call
inc
in
retf
aad
add
daa
out
add
stos
jns
sub
stc
add
xchg
or
mov
mov
mov
inc
mov
rcr
out
dec
adc
xor
lds
lods
push
jmp
aas
lock
jp
cmp
and
aam
push
jmp
lea
pop
push
pop
mov
pop
sbb
cmps
cmp
sub
adc
sub
inc
cmp
jne
inc
or
enter
xor
mov
adc
jae
inc
sub
xor
mov
pop
or
jmp
cmp
sub
jg
add
shr
and
ja
movsx
outs
int
adc
pop
push
jne
jmp
sbb
call
pop
ror
sub
jbe
aam
adc
adc
xor
ins
fbstp
fcom
sub
push
xor
shr
mov
outs
repnz
outs
or
jae
jnp
int3
sub
je
and
data16
mov
nop
cli
mul
xchg
mov
inc
test
movlps
in
jae
push
or
lods
sti
add
inc
daa
xchg
bound
mov
movaps
add
xor
jne
call
cmps
rcr
jo
add
iret
out
sbb
ja
popa
adc
mov
movs
aaa
loop
add
sub
pop
push
add
inc
test
cld
mov
shl
dec
lea
neg
sbb
and
popa
sub
push
push
loopne
jle
setl
push
out
das
test
pop
into
xor
and
sti
dec
cmp
je
mov
adc
rol
pop
xor
push
xor
inc
out
and
into
sub
push
mov
dec
push
adc
loopne
scas
cmp
adc
push
or
mov
add
js
jne
jmp
call
clc
je
and
mov
stc
not
sbb
inc
enter
adc
dec
jp
or
xchg
push
sub
and
stos
ds
pusha
mov
mov
lock
jno
inc
jne
les
retf
mov
in
loope
shr
pop
fs
mov
mov
and
jbe
rol
jmp
xor
push
imul
pop
push
mov
add
(bad)
cmps
popf
popf
enter
rcl
push
push
add
pop
js
mov
push
mov
daa
lds
ret
jge
fwait
sub
cmp
or
js
jno
jo
jne
in
dec
add
push
push
aam
(bad)
jmp
pop
aas
(bad)
mov
push
lahf
fs
sub
inc
int3
push
lock
or
mov
add
fld
push
sub
jmp
or
xchg
loop
dec
dec
or
adc
into
or
add
fstp
push
je
call
test
sbb
shufps
je
ret
dec
mov
test
inc
xor
addr16
daa
inc
xchg
(bad)
or
dec
add
push
js
mov
pop
iret
sub
cwde
add
pusha
adc
dec
adc
imul
adc
jp
adc
ret
push
dec
pop
dec
shl
mov
scas
or
les
cmp
sbb
xor
sbb
adc
adc
push
test
stos
push
outs
mov
or
test
xor
ret
fwait
push
(bad)
jne
scas
mov
push
pop
jl
cmp
test
push
and
pop
push
adc
cs
push
jmp
inc
jo
ins
mov
pop
daa
dec
sub
je
sbb
inc
push
inc
adc
jbe
outs
jb
jno
cmps
jns
xchg
pop
ins
push
inc
xor
lods
inc
dec
int
popa
nop
sbb
jno
push
push
or
push
mov
das
(bad)
pop
not
and
push
ret
add
mov
push
mov
lea
es
aad
push
fs
popa
das
sbb
aam
shr
push
mov
inc
enter
push
xor
and
dec
fisttp
or
xchg
lods
adc
stos
push
out
cmp
jb
in
leave
in
sbb
sbb
ret
and
and
add
outs
imul
xchg
dec
cs
or
retf
jmp
pop
adc
retf
pop
daa
je
cmp
inc
add
rcr
sbb
shl
ds
test
pushf
pause
inc
loopne
js
scas
pop
dec
das
xchg
adc
stos
fild
iret
jl
add
mov
dec
push
rol
rol
push
test
cli
xchg
and
retf
or
xchg
mov
ja
mov
adc
dec
mov
mov
add
mov
pushf
imul
pusha
xor
xsaves
push
bswap
mov
or
adc
in
int3
sbb
ins
push
push
jmp
dec
mov
push
push
mov
adc
mov
bound
push
gs
push
fmul
dec
cmp
or
mov
and
aaa
inc
sbb
call
push
and
jb
xchg
push
jae
or
jnp
cmp
inc
add
leave
shl
inc
mov
clc
add
clc
jl
or
rol
push
shr
pop
sub
retf
aaa
mov
das
xor
pop
sbb
(bad)
cld
je
ret
xor
bound
jge
or
pop
xor
imul
retf
ror
pop
and
sbb
cdq
sbb
mov
js
cmp
jbe
sub
sahf
retf
icebp
ror
mov
inc
mov
fiadd
mov
adc
jge
inc
push
jmp
lock
repz
je
adc
sub
scas
ret
enter
dec
add
dec
mov
cs
into
cmp
ret
outs
mov
shr
frstor
je
leave
inc
adc
into
iret
shl
jae
adc
cmp
push
stos
add
in
repnz
rol
and
rcl
cmp
int
std
add
push
push
setne
fs
add
movs
mov
mov
ins
mov
sbb
pop
outs
push
dec
and
add
mov
mov
ret
or
push
jl
dec
mov
dec
push
dec
jp
hlt
scas
xchg
or
adc
lea
(bad)
es
lods
jnp
and
xor
inc
mov
inc
enter
enter
adc
inc
call
out
aam
iret
je
push
lea
dec
cdq
loope
push
inc
imul
or
aas
push
test
enter
dec
add
(bad)
pop
or
lods
test
add
xchg
sbb
sti
xor
or
dec
add
add
mov
sbb
das
dec
test
sbb
xor
adc
jne
cmp
xchg
or
(bad)
in
add
stc
ss
cmp
cmp
cld
sahf
mov
push
inc
dec
repz
call
ror
call
add
cmc
xor
sub
push
nop
pop
mov
push
aam
sar
mov
add
repz
fsubr
mov
(bad)
lods
pop
ja
or
add
mov
cs
idiv
jg
push
mov
jl
add
inc
inc
aam
(bad)
cmp
jbe
mov
shr
mov
cmp
xchg
rol
inc
out
add
mov
sub
ja
inc
pop
ret
sbb
mov
sbb
mov
add
push
fimul
mov
hlt
aas
add
movnti
sete
mov
and
lea
and
adc
and
mov
xor
and
popa
mov
ins
out
(bad)
gs
adc
fild
add
push
loop
repnz
pop
add
ins
or
fidivr
mov
pop
push
ret
lea
outs
push
scas
inc
stc
rol
dec
(bad)
in
xchg
clc
sbb
pop
dec
push
ins
xor
push
mov
ret
jmp
loopne
(bad)
mov
adc
in
mov
jg
je
or
inc
std
jo
mov
jmp
mov
pop
mov
add
push
dec
inc
push
jmp
and
out
xor
adc
mov
sar
call
mov
add
inc
add
int3
add
pop
rol
or
cld
jl
or
jne
cmp
and
and
and
mov
mov
movs
push
add
cmps
hlt
js
daa
pusha
pop
inc
inc
jb
dec
ret
or
lods
add
jnp
pop
lods
outs
movs
xchg
dec
xchg
push
xchg
and
push
adc
mov
mov
sbb
and
adc
into
pusha
pop
cld
cmp
js
sub
popf
push
sahf
fs
ja
adc
add
add
ins
jns
(bad)
sub
dec
pop
out
sahf
data16
adc
and
add
adc
int
add
sbb
add
sbb
push
shl
or
add
or
pop
add
lods
mov
mov
js
lods
xchg
push
push
mov
pop
je
pop
lea
sahf
retf
ss
sbb
pop
xor
jne
into
in
mov
mov
inc
sbb
mov
jbe
push
cmp
inc
fwait
cmps
imul
lea
xor
mov
or
or
fld
test
or
cmp
push
adc
adc
repnz
xor
repz
push
(bad)
adc
repz
jp
sub
imul
pop
add
ror
dec
push
add
add
daa
in
rcr
jmp
cs
push
xchg
jmp
adc
mov
lahf
inc
in
dec
mov
sbb
icebp
sbb
aaa
imul
mov
push
stos
bound
das
movs
inc
xchg
push
push
and
mov
ds
leave
scas
push
or
and
jo
mov
sbb
mov
cmc
mov
sub
sub
mov
jmp
repnz
ins
test
mov
adc
mov
movs
and
jmp
fdiv
sbb
mov
or
push
push
add
mov
xchg
hlt
fadd
jae
push
popa
add
adc
sbb
pop
inc
fmul
add
loopne
imul
and
mov
hlt
add
adc
mov
je
in
lock
pop
adc
shl
pop
add
dec
pop
add
add
(bad)
or
call
fist
jp
adc
call
adc
push
mov
out
jp
adc
add
sti
ins
retfw
cmps
sbb
cs
mov
jae
xchg
dec
add
js
pop
daa
pop
sbb
dec
xchg
adc
or
xchg
mov
pop
ror
xchg
mov
ds
(bad)
push
call
outs
jp
pop
jg
and
iret
lock
lods
inc
and
(bad)
jmp
in
or
fisttp
jge
add
test
sub
jmp
js
(bad)
inc
je
(bad)
ins
pushw
jb
sbb
mov
mov
pop
call
das
stos
xchg
jno
or
(bad)
fmulp
mov
mov
push
imul
xor
or
sbb
loopne
cmp
push
inc
mov
aam
jo
dec
and
icebp
push
and
aad
inc
mov
sbb
pop
add
das
mov
push
jmp
adc
push
rcl
jo
mov
pop
pusha
cmp
inc
aad
daa
xor
nop
pushf
dec
inc
scas
mov
mov
nop
inc
cmp
ja
cmp
in
inc
cmp
sbb
iret
movd
push
push
jne
mov
push
popa
mov
lock
xchg
adc
mov
cli
cmp
ja
cmp
push
retf
xchg
xchg
dec
ficom
xchg
or
and
mov
out
mov
cmp
pop
enter
push
mov
xchg
push
adc
xchg
xchg
or
enter
xchg
push
xchg
xor
aam
mov
div
ror
enter
movs
mov
int
out
mov
movs
or
xchg
sub
lea
and
bound
sbb
and
xchg
ss
and
sbb
adc
or
pop
adc
sbb
inc
mov
cmp
je
add
fcomi
push
and
arpl
cmp
hlt
or
ret
hlt
(bad)
cli
jg
xchg
jnp
or
push
push
lea
pushf
mov
leave
push
pop
dec
das
ret
stos
fstp
pop
mov
push
movs
sar
cdq
lock
pop
clc
push
adc
cwde
loope
push
push
dec
xor
lods
or
test
adc
xchg
and
cmp
push
shr
lods
or
push
inc
fs
sub
or
pushf
sub
call
les
mov
arpl
movs
pushf
pop
dec
jle
out
pushw
sub
jb
aam
mov
xchg
add
mov
adc
pop
sub
pop
in
pushf
shr
adc
mov
shl
not
es
push
jne
es
push
stos
jne
push
adc
cli
or
je
outs
mov
out
xchg
popa
xor
jg
out
sub
ins
add
inc
and
iret
add
and
xchg
fs
add
sbb
sbb
push
inc
cdq
les
mov
xor
aaa
inc
adc
push
cmp
jbe
pushf
dec
enter
or
jl
xchg
sbb
xor
add
cmp
jnp
ds
lahf
inc
sbb
sbb
mov
mov
lea
xchg
add
pcmpeqd
jl
test
ret
sbb
into
movs
js
popf
xor
adc
xor
(bad)
add
test
adc
cmp
jl
movs
push
mov
rcl
js
push
jge
xchg
jmp
push
int3
sub
xchg
sbb
jo
pusha
in
fsub
jbe
mov
and
mov
cmp
jbe
cmp
or
mov
mov
cmp
inc
mov
pop
mov
les
jmp
and
fdivr
dec
add
mov
or
fadd
loop
jge
sbb
xchg
dec
xchg
mov
push
mov
sub
scas
ds
ss
stc
stos
stc
cmps
movs
nop
push
dec
(bad)
retf
mov
inc
test
iret
mov
or
adc
and
popa
sub
cmps
push
imul
mov
pusha
ror
in
loope
mov
adc
add
or
sub
xor
push
mov
pop
mov
sti
(bad)
sti
or
mov
arpl
imul
pop
dec
std
std
dec
fbld
test
ins
fld
dec
jnp
out
mov
sub
dec
and
xchg
jbe
lea
jl
out
push
cmp
nop
cmp
xor
sbb
dec
adc
lea
pop
xchg
out
dec
sbb
adc
dec
cmps
or
lea
xor
and
dec
outs
sahf
mov
push
push
popf
inc
in
jmp
(bad)
cld
pop
cmp
popf
adc
sub
jp
push
add
call
sar
cmp
pop
adc
or
std
pop
xor
cmp
sti
mov
enter
xchg
fs
cmp
es
jnp
xchg
aas
lock
lea
icebp
jmp
arpl
mov
sbb
sbb
bound
xor
xor
inc
jnp
pop
jle
and
lds
xor
test
push
mov
jp
xchg
sbb
dec
loop
and
test
inc
or
(bad)
daa
or
pop
push
and
aam
sahf
adc
push
pop
ins
mov
sbb
fsub
sub
xchg
sahf
add
ds
jns
pop
loop
mov
ror
and
add
pop
(bad)
jno
mov
mov
xor
mov
test
pusha
push
out
sbb
aad
cs
add
inc
leave
mov
inc
out
outs
sbb
or
daa
and
fisub
enter
mov
fadd
test
pop
xor
test
sbb
call
fimul
and
cmp
stos
xor
stos
les
mov
add
add
xchg
daa
mov
xor
nop
adc
adc
jo
ds
adc
mov
xchg
push
dec
(bad)
fstp
mov
push
inc
lea
mov
cmc
sub
dec
and
sub
sub
retf
jge
xor
xchg
int
push
or
add
add
pop
xor
mov
add
add
and
cmp
fidivr
stc
push
sbb
add
xor
jb
push
cld
add
outs
mov
sbb
pop
xor
push
xchg
pop
add
leave
les
add
int
int
xor
cdq
pop
ja
fdivr
add
ins
out
mov
push
in
sbb
cmp
cmp
inc
and
adc
int3
push
inc
and
mov
or
fcom
retf
test
sti
shr
sbb
leave
imul
out
shl
adc
jae
cs
sub
push
cmps
pop
pop
aam
sbb
add
sbb
fistp
xchg
sub
mov
cld
pop
stos
and
mov
int
mov
push
push
mov
push
sub
pop
inc
pusha
aaa
adc
push
mov
cmp
mov
data16
fs
xor
mov
xlat
sub
sub
push
shl
mov
push
or
div
mov
or
js
scas
jl
test
or
dec
inc
sub
outs
jmp
push
inc
sbb
cmp
jl
data16
push
iret
sub
add
enter
pop
jl
inc
sbb
sbb
pop
mov
adc
and
lock
shr
jecxz
daa
enter
(bad)
sbb
sbb
clc
sbb
das
and
fwait
mov
add
idiv
dec
sub
jge
cmp
imul
retf
dec
test
jle
sub
sub
call
aam
sub
movs
xor
ins
cmp
inc
aam
cmp
sahf
add
adc
mov
cmp
in
jno
push
sub
dec
ret
lock
jle
mov
adc
dec
mov
add
inc
rcl
pop
xor
adc
movs
and
clc
fmul
inc
loope
mov
or
fcmovnu
dec
dec
fdivrp
fstp
fld
pop
sbb
jl
call
call
arpl
clc
test
je
mov
add
or
sub
jl
je
pusha
mov
mul
mov
(bad)
dec
dec
or
add
sbb
push
and
in
jle
cld
std
shr
sbb
out
push
adc
jmp
jbe
add
outs
cld
jp
rol
(bad)
mov
pushf
mov
or
in
bound
clc
inc
bound
mov
data16
fnstenv
push
bound
mov
shl
add
mov
mov
inc
push
add
inc
adc
in
clc
retf
sbb
dec
cmp
cmps
aad
fwait
or
dec
jmp
jl
js
adc
dec
jmp
add
rcl
cli
mov
pop
pop
pop
mul
and
(bad)
mov
shl
add
in
imul
sub
xchg
cmp
pop
push
mov
xchg
cs
(bad)
stos
adc
lahf
push
aaa
add
adc
sub
ins
pop
cmp
movs
xchg
adc
or
mov
mov
sbb
or
rcr
dec
push
js
das
ret
dec
push
pusha
dec
ret
mov
aad
add
push
jmp
aaa
icebp
add
inc
mov
mov
shl
pop
aaa
mov
loope
(bad)
cmp
xchg
xlat
push
cdq
adc
xor
jne
mul
pop
shl
adc
xchg
dec
pop
jmp
or
push
cdq
out
jg
or
mov
sbb
js
xor
mov
mov
adc
mov
mov
or
ins
add
adc
sbb
movs
sub
sub
push
push
push
cmp
sub
dec
inc
push
stc
outs
cmp
cmp
xchg
xchg
inc
dec
cmp
add
enter
dec
jl
xor
dec
dec
addr16
or
fild
pop
sub
(bad)
or
imul
push
pop
mov
aam
cmp
and
lea
mov
mov
ret
or
pop
push
lea
out
lods
std
mov
inc
pop
into
std
mov
int
mov
clc
mov
xchg
mov
outs
shl
mov
inc
nop
adc
adc
pop
adc
sub
pop
or
or
adc
push
popa
rcl
popa
nop
js
and
pop
inc
sbb
mov
js
adc
push
push
jb
pop
(bad)
loope
(bad)
pop
mov
adc
aaa
aam
inc
clc
dec
sub
ror
push
(bad)
fst
cmps
or
push
lea
inc
dec
pop
aad
ret
jae
jae
jp
ins
je
jnp
lea
fwait
jl
add
pop
lock
sub
jb
mov
xchg
push
enter
ret
jo
push
xchg
and
or
lea
push
cmp
stos
or
pop
dec
call
adc
adc
call
iret
or
adc
mov
sbb
fs
outs
xchg
adc
sbb
cwde
add
loopne
repz
push
call
lods
fwait
mov
scas
in
in
pop
ja
aam
mov
cmp
ror
cmp
jmp
dec
sbb
pop
stos
fsub
cmp
in
and
pop
nop
fmul
inc
dec
es
call
inc
mov
loopne
pop
sbb
loope
add
inc
popf
push
push
mov
jnp
outs
and
dec
and
mov
push
mov
repz
adc
push
sub
sahf
xchg
mov
cmp
movs
dec
das
xchg
call
mov
icebp
lea
cld
fmul
mov
jge
xor
adc
jl
mov
pushf
push
add
fs
cmp
mov
shr
daa
cmp
add
add
inc
pop
inc
jo
cwde
sub
lods
jnp
jmp
push
or
fsub
jne
push
loopne
nop
push
rol
neg
and
(bad)
add
idiv
mov
cmp
add
mov
ja
xchg
(bad)
or
or
mov
ror
ret
inc
cs
jmp
pop
adc
pop
cld
imul
jne
push
xchg
clc
sbb
or
pop
xchg
nop
add
pop
sbb
jg
aam
mov
das
pop
jmp
push
cmp
mov
sub
cmp
mov
adc
add
xchg
in
(bad)
sbb
fdiv
test
sbb
ins
sub
jnp
push
or
mov
popa
lods
add
mov
mov
fwait
mov
cmp
retf
ret
rcl
mov
sbb
imul
push
pop
and
adc
sbb
in
xchg
int
or
call
xor
data16
dec
test
aad
nop
popa
xchg
xor
cwde
xchg
jno
add
ins
nop
fwait
outs
sub
outs
sub
xchg
scas
mov
dec
inc
xor
mov
pusha
push
or
xor
ins
pushf
cwde
sub
xchg
retf
mov
aam
sbb
cld
mov
imul
xchg
xchg
dec
div
and
sub
mov
dec
test
jo
pushf
mov
xchg
xchg
dec
(bad)
shl
inc
int3
cld
clc
call
mov
or
adc
or
jge
cmp
in
das
sbb
and
leave
jno
and
cs
ss
mov
lods
test
pop
cs
retf
enter
loopne
mov
cld
das
jb
or
mov
and
sub
retf
in
push
inc
je
pusha
jb
pop
cs
nop
xor
pushf
int3
enter
pusha
adc
sbb
dec
ss
mov
stos
xchg
icebp
mov
idiv
jbe
jns
xchg
sbb
adc
inc
push
inc
and
cdq
lahf
ror
inc
adc
sbb
fimul
mov
outs
nop
lods
mov
popf
in
not
and
nop
mov
or
es
push
in
mov
sbb
jb
push
fs
clc
push
div
fnstenv
or
push
loope
push
push
xor
add
pop
nop
imul
lahf
and
xchg
dec
ss
call
frstor
xchg
mov
or
and
mov
dec
clc
or
(bad)
imul
mov
ss
fmul
lea
mov
or
in
adc
xchg
push
push
add
gs
cmp
sbb
add
sbb
iret
add
xchg
loop
loope
mov
fwait
add
lea
xchg
lea
ins
inc
pop
add
scas
in
push
shr
cdq
ror
push
inc
push
lahf
daa
jo
cmc
or
inc
add
and
sar
add
test
add
cmp
sub
inc
push
dec
lods
ja
fs
loopne
rol
sbb
push
cdq
shl
add
rol
in
rol
aam
test
mov
dec
jmp
jne
pop
inc
sub
mov
add
sub
(bad)
jne
cmp
mov
jle
mov
push
repnz
mov
add
les
ss
call
ret
push
shr
out
dec
hlt
add
jne
sbb
sbb
test
out
pop
(bad)
sub
sbb
push
jb
jo
ret
mov
aam
popf
imul
fiadd
loope
push
push
push
xlat
pop
push
or
xor
les
sbb
test
cmp
and
and
lock
ror
mov
leave
dec
mov
push
sbb
xor
lock
and
fdivrp
sub
add
inc
popa
pop
adc
ins
gs
mov
jg
xchg
lock
rol
push
call
popa
and
mov
ins
adc
push
stos
arpl
xchg
pop
cmp
mov
jp
pushf
inc
es
call
pop
adc
add
cmp
fsubr
xchg
push
dec
jne
adc
js
mul
add
jmp
add
jmp
sbb
fild
enter
test
pop
add
push
xor
pop
cmp
adc
xor
loopne
mov
sbb
or
adc
ja
jbe
addr16
lods
nop
push
xor
adc
daa
popf
and
or
jl
add
mov
ins
loopne
add
or
push
cmp
scas
add
pop
popa
or
cmc
sbb
mov
or
mov
jne
or
mov
mov
add
pop
fld
je
cmc
pop
cmp
or
mov
sti
fld
jle
sub
cwde
sub
or
je
mov
push
and
pop
enter
adc
sub
sbb
mov
and
mov
mov
and
je
xchg
pop
call
cmp
pop
pop
sub
add
jo
mov
or
sahf
lea
push
loope
xchg
popfw
adc
imul
stc
push
test
push
add
push
mov
ds
sbb
(bad)
loopne
frstor
in
xchg
dec
and
sahf
sub
retf
mov
outs
sub
cmp
lea
jmp
dec
fld
pop
add
in
mov
pop
mov
inc
nop
lahf
retf
jmp
ficom
enter
push
sub
adc
ret
push
push
mov
xchg
dec
adc
xchg
aaa
lahf
mov
fisub
inc
sbb
mov
lods
inc
jmp
mov
(bad)
mov
adc
push
(bad)
sbb
adc
cmp
mov
jmp
push
popa
xchg
pop
test
mov
lock
pop
nop
mul
seto
neg
or
push
add
test
jnp
adc
je
cmp
push
or
mov
imul
nop
mov
pop
pusha
and
stos
mov
and
adc
fst
mov
and
mov
into
push
push
xor
push
in
inc
add
pop
and
mov
pop
and
xor
xchg
mov
inc
test
add
cmp
add
jbe
push
dec
pusha
xor
dec
cmp
and
push
shl
push
dec
pop
adc
and
dec
jne
push
(bad)
lock
cdq
sbb
gs
adc
push
pop
or
or
xchg
cmp
or
lods
xor
movs
pop
ror
psubsw
les
add
les
pop
loopne
adc
add
or
xor
ror
lahf
in
(bad)
jne
xor
mov
ret
mov
jge
imul
call
mov
inc
push
daa
mov
xchg
push
xchg
sbb
mov
ds
xor
push
xchg
mov
in
jo
daa
mov
cmp
mov
dec
les
and
sub
inc
jmp
add
lock
jnp
cs
xchg
mov
lock
mov
mov
pushf
ds
lods
cmp
pop
movs
mov
pop
xor
mov
dec
movs
(bad)
adc
or
nop
xchg
sbb
mov
test
or
dec
adc
ret
inc
mov
test
dec
adc
push
add
push
mov
pop
add
jno
xchg
adc
push
add
mov
cmp
inc
leave
movs
imul
sub
test
push
cmp
int
push
adc
and
mov
inc
pop
mov
stos
out
jo
add
pusha
ficom
ds
lods
mov
adc
in
std
retf
cmp
mov
bound
cmp
outs
fistp
loope
sub
movs
jmp
scas
mov
test
dec
(bad)
cs
sub
in
mov
mov
add
popf
sbb
add
rol
(bad)
mov
mov
xchg
rcl
add
int
ss
or
cmps
imul
push
cmp
shl
test
sbb
cmp
and
mov
mov
add
sub
test
push
pop
inc
mov
sub
pop
adc
cld
cmp
xor
add
call
in
or
cs
add
dec
imul
or
pop
in
nop
jl
push
adc
mov
pop
add
ins
gs
mov
inc
out
fisttp
ss
in
mov
sbb
fisttp
retf
adc
inc
xor
cmps
jns
add
mov
jle
std
push
or
jp
sub
aas
adc
dec
rol
cmp
lods
cmp
cmp
loope
mov
in
mov
and
push
sbb
nop
sub
xor
jae
cmp
push
cmp
mov
mov
lods
sbb
jae
daa
inc
add
add
mov
not
push
and
js
jle
sbb
sub
fadd
dec
scas
add
push
pop
mov
jge
lahf
out
ret
mov
cmp
mov
push
(bad)
cmp
mov
jecxz
dec
mov
in
push
ffreep
into
or
and
pop
sbb
push
mov
push
push
inc
adc
pop
mov
aas
sbb
push
xchg
data16
xchg
and
or
call
add
xor
dec
or
xor
in
adc
lock
leave
in
inc
out
inc
pop
and
cmp
or
adc
into
push
push
and
jmp
les
idiv
aad
mov
mov
jge
fmul
fadd
ja
pop
xor
stc
cmp
push
movs
stc
nop
mov
add
dec
and
xor
xchg
je
adc
movs
xchg
and
mov
mov
sub
mov
xchg
adc
je
mov
adc
dec
inc
jb
inc
pushf
push
cwde
cwde
mov
cwde
cwde
dec
inc
movs
pop
xor
or
push
push
clc
push
loop
aas
adc
and
and
mov
nop
aas
in
(bad)
or
out
push
adc
imul
fistp
mov
mov
fwait
mov
mov
jle
pop
sbb
movs
sub
dec
jne
outs
cld
lea
dec
pop
add
lods
sti
jp
sub
adc
mov
inc
or
mov
mov
xchg
jne
loopne
fld
rol
in
xchg
test
xchg
nop
cdq
nop
add
imul
call
fwait
adc
add
mov
mov
add
outs
sar
add
imul
pop
xor
or
sar
aam
popa
mov
pop
xor
xor
xchg
scas
or
push
icebp
jae
mov
cmp
ja
mov
ret
cdq
pop
idiv
lods
out
inc
push
dec
mov
scas
out
daa
mov
cli
imul
add
add
jmp
pop
inc
(bad)
bound
cmc
add
jecxz
xor
jmp
fnstenv
shl
mov
std
push
jb
scas
inc
scas
sub
push
and
cli
jne
jo
xchg
inc
idiv
mov
addr16
mov
pop
call
cmp
(bad)
int
cmp
clc
std
dec
fisttp
ror
mov
adc
pop
dec
ss
jo
adc
sub
dec
jo
push
jmp
cmp
nop
lock
jmp
nop
cmp
clc
cdq
pop
test
xor
fdivr
and
adc
cmps
sbb
adc
(bad)
in
jne
scas
mov
call
call
add
js
pusha
add
push
and
dec
arpl
xor
jne
in
hlt
xor
pop
imul
or
pusha
and
jno
in
ret
ins
push
retf
and
xor
outs
out
xor
lock
mov
mov
sub
dec
mov
add
ja
imul
enter
xor
xor
xor
cmp
inc
push
leave
loope
lock
fcom
adc
fistp
inc
or
(bad)
sbb
fimul
mov
mov
jbe
rcl
in
dec
lahf
push
dec
mov
sbb
and
ds
mov
call
and
sar
or
(bad)
nop
ins
ins
dec
aam
push
add
pop
loopne
jo
mov
add
rcr
jmp
fstp
in
xor
rcl
jbe
ins
addr16
pop
xor
ror
jg
test
repz
clc
repnz
add
adc
(bad)
hlt
inc
cs
add
lock
inc
pop
xchg
std
mov
mov
sub
xlat
cmps
mov
add
outs
add
cmp
inc
retf
movs
dec
repnz
sub
cmp
mov
push
stos
adc
jbe
fsubr
dec
mov
in
pop
xor
add
xchg
cmp
sub
fbstp
jae
mov
inc
sub
cmp
mov
xor
loop
or
js
jns
mov
add
out
test
sub
aad
jb
scas
mov
or
dec
daa
jmp
nop
sbb
pop
nop
sti
jne
sub
dec
dec
stc
dec
or
push
repnz
ret
inc
mov
shl
add
sub
popa
push
das
movs
sar
mov
popa
and
cmp
les
pop
into
icebp
dec
adc
aad
lea
dec
cmps
adc
sti
jmp
mov
jl
(bad)
or
shl
lock
fs
cdq
iret
in
(bad)
jo
bound
(bad)
push
in
mov
into
pushf
neg
in
stc
pushf
pushf
sub
pushf
pop
loopne
fs
popf
les
adc
push
adc
cs
inc
div
aam
sub
je
ins
bound
xor
mov
push
fwait
adc
sub
idiv
sbb
lock
bound
mov
(bad)
fimul
mov
movs
ror
clc
mov
xchg
jmp
or
inc
pop
cmc
push
not
sub
cmps
pop
adc
stos
je
sbb
sub
push
push
js
add
mov
or
test
mov
push
adc
dec
je
nop
push
aam
push
imul
shr
push
rol
nop
jmp
enter
push
in
adc
(bad)
lods
dec
mov
mov
in
call
clc
add
pop
add
mov
adc
mov
push
pop
sbb
cmps
and
cli
dec
dec
xor
adc
ret
clc
jle
adc
nop
lea
test
stos
enter
cmp
ja
retf
rol
inc
retf
inc
or
xlat
sar
sub
or
outs
or
movs
dec
scas
or
inc
loop
and
cmp
xor
loope
mov
pop
pop
pop
aaa
xchg
out
jo
add
push
xor
push
sbb
dec
cs
retf
movs
or
push
pop
pop
cmp
shl
les
pushf
push
and
pushf
enter
sub
inc
mov
xchg
push
mov
clc
psubsw
mov
mov
sahf
adc
add
mov
out
or
in
jmp
pop
or
or
mov
sar
scas
mov
jne
sbb
ss
and
mov
mov
cmp
leave
sub
cmp
pop
and
dec
add
add
cmp
imul
jo
xchg
or
mov
je
dec
inc
gs
call
cmp
mov
pusha
daa
in
xor
pop
xor
enter
jno
sub
xchg
mov
ins
rcr
xor
xchg
or
enter
adc
pop
cmp
xchg
add
and
test
pop
gs
into
mov
sbb
xchg
jmp
sub
xchg
(bad)
out
inc
cmovno
mov
sar
dec
cwde
(bad)
cmp
jb
(bad)
std
jecxz
add
or
add
fdivr
or
stos
jns
js
or
(bad)
clc
enter
dec
or
mov
dec
cmp
adc
sub
xor
sar
mov
ficom
add
sbb
cmp
mov
cmp
xchg
aad
push
cmp
push
inc
mov
dec
add
mov
adc
je
add
mov
adc
push
and
cmc
xchg
out
adc
cwde
je
pushf
pop
sbb
dec
sti
dec
lock
pusha
mov
(bad)
jne
or
in
jne
and
es
jne
xchg
dec
leave
jecxz
xchg
je
dec
and
inc
cmp
jne
mov
add
jp
mov
daa
add
jg
pop
add
imul
sahf
and
popf
daa
sub
fiadd
cmp
pop
fisubr
sbb
mov
jle
(bad)
pop
test
jge
sar
cmp
jbe
aas
lock
in
aad
loopne
or
test
cmp
jb
cmc
jbe
xchg
movs
xor
rcr
imul
inc
and
imul
and
fwait
js
and
cmc
adc
sbb
add
xor
xor
cmps
jns
and
cmp
pop
in
add
mov
nop
test
movs
imul
mov
out
xor
shl
in
leave
adc
mov
pop
xchg
repnz
jge
mov
dec
or
sar
ss
cwde
cli
push
lea
jbe
inc
stos
ror
push
mov
ror
pop
aaa
cs
shl
mov
mov
xchg
sub
aas
(bad)
mov
jb
and
cs
add
add
push
nop
sub
lea
test
mov
or
cmp
mov
push
mov
sub
cmp
test
pusha
je
or
pop
nop
mov
in
leave
mov
fs
and
or
adc
mov
jnp
nop
cmp
and
add
xor
mov
push
mov
shl
cld
push
mov
popf
pop
movs
add
shr
jmp
inc
out
xchg
outs
xor
push
movs
pushf
mov
push
mov
add
add
pop
call
ret
aas
pop
sub
fbld
sub
sbb
and
jge
cmp
pop
sub
mov
add
jo
retf
sbb
int3
mov
movs
pop
aaa
xchg
and
push
or
test
adc
mov
jb
sub
cmc
sbb
push
js
jmp
push
js
sbb
mov
retf
mov
repz
adc
add
arpl
add
in
adc
and
add
mov
aad
ror
xchg
and
pop
adc
or
pop
add
push
jne
dec
dec
mov
fcomp
ror
mov
inc
(bad)
cmp
les
and
enter
pop
lock
pop
sub
jl
mov
xchg
mov
push
adc
mov
in
jno
ror
push
pop
(bad)
not
jmp
cmp
adc
mov
dec
jg
cmp
sub
fild
add
add
sub
fldcw
sub
mov
fcom
retf
mov
xchg
xchg
enter
mov
jae
push
sbb
mov
mov
rcl
cmp
xor
push
out
push
lods
mov
dec
push
xchg
mov
or
rol
lods
cmp
fcom
add
rol
dec
sub
jle
xor
movs
add
dec
or
adc
pop
sbb
mov
test
hlt
jl
push
and
outs
adc
(bad)
mov
fiadd
lock
test
cdq
aad
test
int3
in
enter
xchg
int3
add
cmps
push
outs
push
sbb
mov
fld
fist
xor
push
cs
jo
add
dec
mov
pop
mov
mov
shl
add
cmp
push
inc
push
arpl
add
pop
or
inc
mov
and
popf
ficomp
mov
in
inc
and
(bad)
gs
push
arpl
shr
jmp
cdq
and
adc
fbstp
in
add
rol
jge
fmulp
imul
add
cmp
jmp
cmp
fiadd
imul
fnsave
jb
push
dec
cwde
push
push
nop
push
retf
pop
jbe
xor
sub
or
adc
pop
and
push
pop
sbb
stc
push
jg
enter
push
xor
or
or
cmp
int3
cmp
adc
sbb
lea
push
fisub
call
loop
aam
les
mov
sub
xor
mov
sub
or
rcr
inc
and
lea
scas
mov
inc
sub
bound
mov
xor
inc
lea
bound
xchg
inc
adc
dec
pop
cmp
ja
cmp
jp
rol
xchg
mov
jl
dec
xchg
mov
in
push
or
inc
inc
cmp
out
ret
inc
test
push
push
hlt
mov
xchg
ja
rol
lea
js
pop
jo
mov
mov
jne
jo
jnp
pop
test
inc
ins
push
mov
loop
push
aas
xor
sub
mov
xor
aad
jo
jne
loope
into
xchg
xor
push
and
push
int3
std
and
enter
push
xor
call
sub
lea
jb
mov
cmp
bound
jge
adc
add
or
das
shl
adc
push
push
inc
and
xchg
xor
cmp
jb
pop
test
dec
fs
mov
js
xchg
and
ror
cwde
inc
dec
imul
or
xor
xor
imul
(bad)
test
lods
imul
(bad)
loope
popf
loope
fisttp
pop
xor
mov
in
and
push
push
cdq
dec
jge
daa
pushf
ss
popf
pusha
loopne
lahf
icebp
shl
xchg
dec
sahf
outs
push
add
dec
inc
test
add
sub
xchg
xlat
xor
cld
lods
sub
and
cmp
adc
leave
and
add
mov
fs
xchg
mov
cmp
cmp
mov
popa
sbb
cmp
lahf
mov
or
sub
int3
add
(bad)
ror
leave
inc
mov
jge
inc
sbb
jae
mov
retf
pop
push
ja
addr16
sbb
xchg
sub
mov
push
mov
add
(bad)
push
push
into
fdivr
and
mov
jecxz
rcr
shl
push
test
ret
jecxz
add
clc
push
std
loopne
in
repnz
push
push
loopne
xor
inc
ins
les
sbb
xor
xor
movs
int3
mov
jg
and
adc
jbe
sbb
jg
add
and
sub
js
sbb
popf
imul
out
jno
leave
fstp
adc
jmp
inc
jb
pop
leave
call
dec
push
not
jmp
push
push
adc
cli
in
add
sub
mov
push
pop
loopne
add
sub
add
pop
inc
arpl
adc
mov
or
outs
mov
push
add
inc
mov
or
enter
push
inc
inc
outs
mov
cwde
push
pop
pop
cmc
push
repz
and
pop
loopne
xchg
pop
cmp
push
push
fisub
ds
call
inc
pop
fld
add
dec
inc
test
mov
sub
(bad)
xor
sar
cmp
rol
jns
xchg
push
mov
pop
cs
jo
push
mov
cs
hlt
and
mov
fidivr
pop
xchg
add
sub
mov
sbb
retf
ja
dec
cmp
pop
inc
mov
adc
inc
mov
mov
adc
pop
fadd
jmp
outs
mov
pop
fimul
js
xor
and
xchg
das
fldcw
inc
sub
xchg
test
mov
xchg
bsr
or
inc
rcl
mov
inc
mov
les
sub
icebp
dec
(bad)
jae
dec
jb
xlat
pusha
pop
dec
pop
mov
mov
xchg
or
jmp
push
pop
leave
add
pop
xlat
and
mov
cmp
das
fcom
add
test
sub
mov
xchg
rcr
and
jmp
jb
les
push
jge
lds
push
std
xchg
scas
mov
inc
lods
mov
iret
and
push
js
test
adc
and
fmul
mov
mov
sbb
cmc
fisubr
jns
pop
cs
pop
jb
sbb
fs
popf
test
or
test
cmps
cs
jno
in
ror
cwde
cwde
add
loope
in
add
xchg
jge
mov
push
mov
call
jno
rol
xchg
push
or
xchg
hlt
inc
int
movs
(bad)
inc
loope
push
lods
xlat
jbe
sbb
jg
pop
popa
push
pop
(bad)
jp
jge
or
xchg
jo
(bad)
loope
pop
fiadd
dec
in
xor
add
adc
and
mov
or
or
and
jb
(bad)
pusha
pop
enter
xor
cmps
or
add
jno
enter
ret
and
sub
jle
jmp
out
int3
push
or
xor
and
in
jb
jb
pop
add
push
or
out
jmp
or
imul
ret
aas
jb
pop
xor
inc
imul
pop
pop
or
(bad)
adc
daa
cwde
cmp
and
jne
push
inc
(bad)
stos
jb
movd
xchg
sub
inc
push
inc
adc
cs
inc
adc
leave
adc
cmp
and
lods
adc
push
jb
test
fcmove
and
mov
add
ins
test
push
and
cdq
ss
daa
jl
jne
sub
popf
stos
xchg
xor
mov
pop
test
xchg
imul
mov
test
stos
adc
pop
cld
inc
mov
ret
inc
jno
sub
shl
pushf
imul
add
pusha
mov
or
out
mov
test
pop
push
mov
movs
sbb
mov
jmp
fadd
shr
call
mov
mov
add
xor
mov
shl
add
inc
int3
movs
sbb
adc
movs
push
cdq
cmp
and
or
(bad)
cmc
push
(bad)
(bad)
and
push
ins
cld
cld
in
fstp
mov
mov
jae
pop
xchg
pop
int
or
xor
push
adc
cmp
rcr
sbb
sub
cli
add
dec
cmp
or
xor
fs
xor
or
inc
(bad)
in
mov
cmp
mov
pop
sbb
push
mov
add
jbe
je
pop
sar
ins
mov
in
push
push
ud0
dec
int3
sbb
pop
add
cmp
adc
add
sahf
cmps
ror
and
or
pop
and
inc
dec
or
inc
jo
add
dec
add
xor
(bad)
(bad)
cmp
jmp
sbb
test
add
int3
add
scas
mov
sbb
add
lods
js
loopne
sub
imul
jmp
add
push
movs
clc
mov
mov
je
pop
inc
sub
or
test
in
pop
inc
je
xchg
add
dec
or
inc
nop
inc
cmp
mov
adc
sub
sbb
rcl
cmp
mov
cwde
and
divps
mov
mov
repz
pop
sti
mov
sub
or
or
dec
adc
and
pusha
fwait
jne
ja
(bad)
pusha
shl
aaa
jecxz
sbb
sar
add
mov
mov
imul
xor
enter
mov
jmp
js
pusha
std
adc
popf
out
cmp
test
iret
xchg
aas
mov
outs
arpl
aas
into
mov
inc
xor
push
in
mov
cli
movs
movs
push
mov
pusha
cmp
push
out
cmp
movzx
mov
mov
rcl
mov
and
sahf
jl
and
jnp
pop
cwde
ins
test
shr
cmp
jo
xor
mov
cmp
cmps
ins
mov
xor
xlat
cmp
pushf
pop
mov
ret
mov
or
lods
jecxz
cmp
sub
stc
mov
sbb
loopne
into
cmp
push
clc
or
mov
jo
or
shl
push
nop
dec
loop
cmp
stc
aam
rol
gs
dec
cld
jno
dec
jge
xchg
xchg
in
mov
(bad)
jne
dec
in
jo
pushf
inc
xchg
and
out
imul
cmp
shl
aad
mov
mov
test
sbb
sub
iret
add
pop
sbb
add
aam
dec
mov
or
push
mov
test
lea
push
push
aas
ror
jne
xlat
je
int
mov
dec
ret
push
push
(bad)
mov
cmp
scas
hlt
mov
sbb
sbb
pop
push
jmp
push
aam
in
dec
and
inc
mov
ret
sbb
mov
mov
pop
or
cwde
sub
or
sbb
lock
cmp
es
xchg
jo
in
(bad)
add
mov
movs
push
xor
or
push
movs
mov
sbb
je
push
mov
mov
inc
and
ror
inc
and
push
or
test
or
adc
push
jmp
shr
mov
inc
push
push
out
or
shl
shl
mov
adc
mov
iret
adc
(bad)
scas
adc
adc
stos
xchg
add
ficomp
cs
add
pop
add
and
adc
push
add
pushf
xchg
pop
mov
xor
shr
push
ins
mov
lahf
mov
pop
push
lock
shl
xchg
movs
sti
std
add
add
nop
cs
mov
loopne
les
and
cmp
mov
adc
cld
xor
push
xor
adc
cmp
jl
test
dec
inc
les
sub
dec
add
add
inc
addr16
dec
retf
cs
add
aam
push
ficom
inc
popa
ins
std
(bad)
aam
test
and
in
and
movs
fisubr
ret
mov
dec
add
fisubr
js
pop
jl
sahf
xchg
mov
push
ftst
and
xor
jnp
je
clc
jo
sbb
jg
shl
test
or
out
fs
add
les
inc
pop
clc
sbb
lods
and
andnps
pop
mov
mov
sbb
lods
cmp
and
sbb
dec
or
fsubr
ins
and
shl
pop
stos
cmps
iret
push
pop
ja
daa
push
push
xor
mov
xor
les
je
add
js
rol
or
int
mov
add
or
je
pushf
out
and
xchg
pop
add
add
(bad)
cmps
shr
add
push
jne
pop
sub
inc
mov
jo
lahf
or
imul
inc
jmp
test
outs
sbb
mov
ins
outs
xor
ins
adc
or
jo
push
cmps
ret
repz
sub
push
jmp
stos
mov
retf
movs
iret
mov
lods
ror
xor
xchg
mov
sub
xor
adc
outs
loopne
push
loopne
mov
jbe
nop
xchg
inc
xor
sub
sbb
xchg
pusha
ret
or
inc
aas
call
in
jmp
loopne
shl
test
and
cmp
sbb
iret
add
mov
clc
cwde
imul
cmp
loopne
pop
cmp
jecxz
es
and
adc
shl
cmp
adc
push
je
sbb
push
in
inc
int3
or
stos
mov
sub
adc
inc
test
or
mov
inc
sahf
or
nop
mov
xor
dec
dec
fs
int3
adc
pop
adc
dec
ret
sub
movs
pop
cmc
loope
mov
test
addr16
in
pusha
imul
rol
adc
lea
cmp
dec
cs
add
test
dec
add
dec
sbb
jo
adc
sbb
cld
aaa
dec
add
sub
in
mov
nop
lods
jo
push
mov
nop
test
push
ss
and
sti
rcl
pop
mov
call
and
push
dec
adc
jnp
mov
cmp
je
inc
adc
jl
jge
(bad)
push
leave
je
inc
ds
sub
mov
call
movs
jb
mov
out
lock
fld
mov
xor
test
or
popa
xor
sub
or
jmp
push
push
pop
and
pusha
xor
add
add
jl
mov
add
test
fidivr
test
add
add
jne
dec
jne
repz
lock
add
push
xchg
je
cld
cmps
xchg
(bad)
lock
push
adc
xchg
test
adc
xlat
adc
adc
ret
call
(bad)
jmp
add
sub
add
dec
out
dec
push
ins
je
pop
mov
push
inc
mov
mov
pop
fidiv
fptan
cmp
xor
mov
mov
dec
clc
cmovb
adc
pushf
adc
inc
or
fwait
jecxz
xor
mov
adc
sar
mov
or
aas
push
adc
inc
bound
enter
sar
cli
inc
imul
icebp
jno
xchg
and
adc
pop
or
and
mov
mov
ret
retf
ss
test
das
jmp
push
xor
inc
jno
clc
and
add
push
sub
or
clc
or
mov
cmc
(bad)
iret
jne
mov
xor
sub
ret
int
fsubr
aas
add
push
add
fistp
mov
and
xchg
push
and
ss
fcmovnb
sub
and
mov
enter
pop
stc
or
mov
ss
test
push
mov
aas
adc
mov
movs
push
adc
shl
test
punpckhbw
cmp
cdq
mov
(bad)
movs
and
xlat
jbe
jle
adc
sub
inc
mov
dec
jmp
push
lods
push
mov
fcom
lock
enter
in
xchg
ds
adc
dec
loopne
and
lea
sbb
dec
addr16
and
out
(bad)
rcl
cmp
cdq
pop
pop
in
dec
sahf
pop
add
mov
cmp
mov
sub
call
in
mov
mov
int
xchg
retf
mov
ror
out
or
push
fsubr
and
fs
lahf
push
adc
dec
fldl2t
adc
push
cmp
sbb
mov
add
ret
(bad)
pop
add
inc
or
push
cmp
jp
arpl
and
(bad)
mov
cmp
jmp
jbe
mov
sar
cmp
inc
adc
sbb
or
fbld
inc
call
jne
sbb
inc
push
adc
mov
js
cmp
xor
or
jl
jne
std
mov
add
pop
adc
push
or
or
leave
movzx
shr
mov
je
and
mov
mov
mov
add
cdq
inc
cmp
jl
(bad)
sbb
outs
and
mov
push
(bad)
in
hlt
es
or
xchg
mov
mov
mov
xchg
mov
sub
dec
fbld
push
sub
es
sbb
sbb
lea
cmps
xchg
sbb
jecxz
inc
xor
mov
xor
inc
jo
sti
pop
sbb
xchg
xor
lea
lea
add
push
push
xor
loopne
push
adc
(bad)
jle
dec
fld
push
xor
pusha
ret
nop
inc
or
pop
in
lea
add
sub
(bad)
mov
and
inc
xchg
inc
ins
call
and
and
push
xor
jmp
pcmpeqw
sub
enter
push
lods
dec
rcl
push
sbb
int3
cmps
pop
pop
mov
pop
push
movs
add
xor
(bad)
rcl
ja
ss
mov
bound
add
mov
push
pop
xor
ja
xor
(bad)
mov
bound
mov
pop
push
es
lods
pop
mov
or
fiadd
jae
movs
popf
xor
ins
push
pop
(bad)
and
int3
push
and
(bad)
inc
sub
loope
lds
push
or
pop
pop
cld
and
cs
mov
push
not
push
push
pop
sbb
enter
and
dec
inc
add
sti
sub
dec
(bad)
hlt
and
fcomp
pop
mov
and
cmp
shl
scas
int3
movs
nop
nop
imul
ins
pop
inc
xchg
(bad)
loope
sub
push
in
mov
(bad)
xchg
rcl
or
jnp
xor
cwde
mov
test
xor
pop
cmp
or
je
add
(bad)
cmp
sbb
jmp
fwait
add
mov
das
in
pop
repz
push
push
ss
pop
cwde
test
ficom
push
mov
adc
je
push
(bad)
hlt
sub
inc
adc
shl
ror
or
pop
xchg
xchg
add
fs
aam
adc
fisub
mov
push
sub
jmp
xchg
pop
out
xor
rcr
adc
fstp
push
imul
sbb
pop
(bad)
(bad)
popf
add
adc
pushf
and
dec
adc
inc
add
std
idiv
shr
shl
push
leave
or
shr
push
retf
sbb
jo
rcl
pushf
or
push
ret
fnstcw
imul
test
sbb
inc
in
hlt
imul
(bad)
mov
(bad)
mov
jns
inc
out
push
pop
pop
xchg
mov
fld
add
add
xor
push
xor
mov
push
xchg
mov
or
pop
or
sti
sbb
or
shl
mul
inc
ins
fwait
loope
mov
and
ret
loop
jmp
add
test
inc
mov
(bad)
jae
add
adc
jns
fild
inc
fmul
and
sub
sar
pop
inc
aam
inc
sub
pop
xchg
or
cmp
mov
push
jp
sbb
daa
icebp
inc
js
jecxz
je
sar
(bad)
mov
sub
(bad)
add
push
inc
sub
and
pop
sub
pop
add
shl
fadd
ret
enter
or
pop
jmp
mov
xor
add
adc
rcr
dec
mov
fild
mov
sbb
scas
fmul
add
mov
and
add
sub
pusha
sbb
and
sub
loopne
cmp
xchg
sbb
ds
sub
cmc
dec
cmp
pop
mov
and
and
jle
add
lods
mov
inc
sbb
mov
movs
inc
push
int3
push
push
ins
dec
and
add
(bad)
out
movs
dec
cmp
mov
loop
(bad)
jle
xor
push
inc
lea
cwde
push
xchg
or
into
ret
add
inc
lock
je
add
jge
out
inc
mov
mov
xor
jg
pop
js
add
inc
in
popf
jo
addr16
loope
je
jmp
shr
inc
jmp
push
loope
or
mov
dec
test
sub
sub
popa
jbe
mov
mov
dec
adc
or
mov
ins
xchg
cs
cdq
retf
and
int
or
cmp
leave
jl
sti
add
cdq
push
add
xchg
or
xor
aaa
and
adc
imul
mov
jmp
push
xchg
xor
fiadd
mov
fs
mov
adc
push
mul
xchg
adc
adc
mov
inc
inc
rcl
mov
and
or
leave
jl
push
xchg
xor
pop
das
daa
pusha
adc
int
xchg
or
lods
lods
sub
push
jp
loopne
rol
into
xchg
mov
push
push
imul
arpl
add
nop
mov
(bad)
loopne
add
xchg
jmp
pushf
shl
fsubr
fimul
dec
dec
fbld
outs
sub
mov
pop
sbb
cmps
pop
mov
mov
(bad)
lods
dec
loopne
movlps
icebp
dec
push
cmp
mov
push
push
push
bound
jo
icebp
hlt
push
adc
popa
sbb
xchg
jecxz
out
push
and
push
or
fnstsw
cmp
dec
inc
xchg
or
sar
dec
enter
call
jbe
ds
jmp
aas
fld
xchg
pop
inc
xchg
inc
lock
dec
inc
xchg
lahf
retf
shl
std
adc
sbb
inc
push
and
push
fsub
xor
inc
loopne
lods
push
retf
mov
mov
sub
cmp
add
pusha
push
push
dec
push
push
jo
add
pop
jne
data16
jb
add
lea
scas
sti
xchg
or
xor
pop
push
mov
pop
add
sub
sbb
jb
shl
hlt
daa
mov
or
sub
jl
fadd
inc
(bad)
in
sbb
test
in
ja
push
pop
int3
fnstsw
pushf
(bad)
push
sbb
das
mov
je
mov
jbe
mov
mov
jmp
and
int3
rcl
loope
ss
xlat
sub
inc
scas
out
repz
call
cmp
call
add
pop
dec
sub
add
jge
xchg
into
leave
fs
rol
sub
pop
and
mov
sub
cmp
js
sbb
push
dec
dec
outs
movs
aad
jmp
inc
nop
push
inc
retf
sub
sbb
bnd
ror
and
mov
stos
or
and
cmc
push
inc
mov
xchg
add
test
sbb
inc
or
retf
nop
jmp
in
and
inc
add
push
cld
push
mov
xchg
mov
jge
enter
mov
lea
jbe
ror
xor
cld
inc
mov
ss
test
adc
xor
sub
test
je
sbb
dec
jmp
jb
aaa
sub
mov
xchg
add
test
adc
lock
pop
or
mov
sbb
mov
in
xchg
and
adc
pop
inc
jb
das
mov
push
cmp
xchg
repz
or
xchg
push
dec
inc
push
lods
xor
sub
pop
add
or
push
out
push
jl
cld
jle
mov
imul
test
xlat
sahf
es
sbb
pop
push
mov
sbb
mov
stos
aad
jb
dec
loopne
sbb
outs
push
fild
cmp
pop
xor
pop
mov
and
in
adc
ds
sub
nop
inc
sahf
mov
inc
movs
push
mov
ret
xchg
ret
je
jl
dec
dec
mov
popf
ja
outs
imul
and
mov
and
push
pop
and
jg
jge
in
inc
mov
jmp
sub
scas
mov
adc
cmps
pop
fdiv
inc
mov
ja
mov
add
inc
mov
call
(bad)
loopne
test
or
cmp
push
dec
or
cmp
ins
shl
(bad)
mov
enter
push
dec
mov
cdq
push
adc
mov
(bad)
and
stc
lods
adc
es
imul
int3
and
or
clc
add
pop
test
add
mov
mov
add
test
es
push
inc
sbb
push
jae
adc
lds
rol
sbb
scas
xchg
inc
(bad)
cmp
xchg
test
add
cwde
aad
ins
inc
bound
test
aaa
push
add
sub
mov
sbb
mov
xor
dec
push
pop
hlt
cmp
cmp
call
inc
and
scas
sub
jo
pop
retf
and
and
add
xor
sbb
add
dec
movs
pushf
mov
add
icebp
icebp
xor
mov
add
push
into
sub
cdq
xlat
and
xor
lea
mov
lahf
mov
ins
lahf
inc
adc
arpl
cli
adc
dec
inc
or
add
add
adc
adc
xchg
aaa
or
adc
push
and
pop
ret
mov
mov
cmp
in
jae
push
xor
aas
xor
dec
andps
stos
(bad)
pop
mov
cmp
ror
stos
scas
sbb
mov
mov
nop
xchg
ret
and
mov
jmp
mov
imul
or
test
inc
dec
dec
xchg
mov
mov
cdq
inc
inc
mov
dec
xor
dec
or
repnz
fcomp
jae
push
push
fidiv
push
ds
adc
pop
mov
mov
je
aaa
dec
js
loopne
in
ins
jne
ror
ret
rdpmc
call
js
push
pop
inc
ret
in
mov
dec
add
test
or
or
jnp
xor
jmp
shl
mov
js
push
push
add
pop
cwde
sbb
mov
fisttp
cmc
xor
or
cld
or
and
or
sti
clc
mov
pop
mov
movs
pop
aaa
dec
inc
cmp
imul
dec
cwde
add
xor
mov
add
sub
xchg
lock
xor
pop
and
add
cmp
dec
push
push
mov
out
aad
mov
stc
inc
push
rcl
add
xor
jo
push
jg
mov
scas
mov
inc
dec
and
mov
push
xchg
es
sub
or
stc
pop
nop
test
imul
fdiv
inc
mov
adc
stos
out
sbb
lds
(bad)
and
xor
pop
push
cmc
adc
cdq
enter
cmp
stos
mov
ins
adc
or
and
or
and
(bad)
lea
mov
inc
xor
test
cli
out
mov
sahf
mov
out
cmp
sub
sbb
xor
aaa
stc
sbb
das
cli
cmp
(bad)
dec
xor
pop
push
sbb
mov
inc
sub
and
and
sub
jne
test
adc
clc
mov
outs
movzx
shl
xor
jns
enter
aaa
mov
int3
jns
jae
mov
dec
mov
pop
push
ret
mov
mov
ins
xlat
xor
call
dec
je
dec
jne
sub
(bad)
repnz
adc
aam
add
sub
mov
fs
mov
out
add
dec
sub
push
dec
adc
call
pop
cmp
(bad)
add
sbb
retf
xor
xor
cmp
push
mov
cmp
and
mov
pop
push
retf
xlat
movs
dec
enter
xor
test
fstp
add
add
call
mov
mov
(bad)
pop
rol
adc
mov
lea
mov
mov
sbb
add
bound
(bad)
data16
push
sub
pop
dec
cli
push
cs
xor
icebp
xor
dec
(bad)
fld1
bound
sub
push
fst
mov
sub
add
xchg
cmp
sbb
cdq
inc
mov
sub
dec
inc
leave
cmp
movsx
call
and
dec
test
add
or
jmp
pop
(bad)
pop
mov
and
in
push
aas
out
sar
stc
pop
ret
fnsave
push
daa
pop
add
imul
dec
fmul
ret
or
dec
mov
cmc
dec
xlat
js
push
mov
in
adc
aas
(bad)
clc
inc
or
mov
pop
cmp
cmp
mov
and
add
outs
inc
ret
xor
add
sahf
retf
inc
mov
bound
add
xchg
sub
sbb
mov
test
xor
sbb
push
push
sub
fisttp
iret
add
push
(bad)
sub
jo
mov
sar
mov
push
int3
push
mov
in
push
movs
inc
pusha
or
or
or
pop
loop
adc
inc
mov
mov
xor
pusha
test
jnp
push
leave
adc
ins
js
bound
and
sbb
cs
popf
sbb
mov
mov
jmp
retf
cmp
movs
test
jb
add
fnstenv
mov
ss
xor
cwde
sbb
push
push
aam
add
inc
(bad)
sti
cmp
out
imul
and
and
inc
fdivp
push
inc
arpl
adc
in
sbb
mov
xchg
adc
ret
lock
pop
leave
mov
xor
add
or
dec
cmp
add
mov
add
add
hlt
fdivr
mov
pop
fs
loopne
dec
inc
mov
lods
mov
xchg
cli
mov
xor
or
push
mov
fnstenv
pop
rol
cmp
xchg
cmp
int3
sbb
xchg
arpl
jg
push
repnz
push
mov
jge
or
jo
push
and
add
add
xor
cmp
or
sbb
addr16
sub
clc
or
iret
stc
sbb
inc
mov
cmp
pop
or
mov
out
or
js
xor
loop
lods
xlat
lods
shl
push
add
arpl
in
dec
mov
and
dec
lahf
mov
jns
cmp
jmp
push
push
sub
sbb
scas
and
or
pop
pusha
sub
call
mov
hlt
sub
mov
hlt
jbe
test
jo
xor
push
inc
mov
dec
std
inc
loope
test
gs
imul
enter
add
cmp
jb
movs
and
call
in
pusha
sbb
bound
push
add
push
or
inc
cld
add
lea
pop
dec
sti
mov
cmp
pushf
pop
ret
es
add
sbb
jle
lea
outs
cmp
push
cmps
or
in
mov
jne
sbb
ret
dec
dec
xor
daa
sbb
sbb
loopne
push
cmp
test
xchg
sti
ss
xchg
loopne
jmp
jmp
ret
in
rcl
movs
jmp
test
add
mov
and
mov
enter
cmp
cmp
jo
push
std
push
div
lock
mov
and
adc
movs
dec
out
jnp
(bad)
sbb
sub
mov
push
pop
imul
push
pop
pop
aam
or
ss
lods
adc
mov
rol
cmp
jnp
push
cwde
outs
imul
mov
test
sbb
dec
dec
test
add
adc
mov
push
xor
(bad)
(bad)
xchg
movs
push
std
jmp
dec
mov
sub
stos
inc
sbb
stos
mov
add
and
mov
or
lds
sbb
leave
inc
sbb
and
dec
loopne
jg
pop
inc
push
arpl
rol
imul
pop
lock
push
dec
fcmovnbe
or
adc
xchg
je
and
push
dec
fwait
xor
or
jmp
mov
adc
inc
pushf
adc
add
sbb
inc
and
ror
pusha
add
jl
inc
jns
xor
and
xor
inc
add
add
lea
adc
and
sub
adc
add
and
fistp
aaa
xor
cmp
test
pop
add
pop
inc
adc
add
add
push
xor
add
mov
mov
adc
mov
push
push
cli
loope
mov
pop
mov
cmp
and
add
cdq
(bad)
ins
rcr
repz
xchg
inc
out
adc
mov
das
popf
lods
cmp
cmp
push
or
jno
mov
add
cdq
add
add
aaa
js
mov
mov
loope
add
fild
or
mov
jns
test
mov
and
fnstenv
jmp
xchg
test
mov
bound
ss
inc
mov
popa
out
pusha
popa
addr16
shr
ins
xchg
leave
add
add
sub
and
and
mov
test
das
je
push
fist
retf
sbb
inc
sub
or
sbb
call
sub
pop
xchg
xchg
sub
push
mov
dec
fstp
mov
cwde
xor
sbb
ins
push
adc
call
lahf
sub
pop
dec
ins
push
or
jl
adc
add
pop
ins
sub
pop
out
not
adc
sub
je
dec
je
dec
jne
das
ror
mov
inc
into
shr
in
(bad)
jmp
sub
adc
adc
jnp
cmp
push
(bad)
call
mov
push
fidiv
push
adc
imul
mov
and
adc
dec
sub
add
push
xor
jmp
or
adc
cdq
in
dec
adc
dec
inc
push
sbb
ror
out
das
xor
sub
shl
rcr
push
push
movhps
xchg
dec
loop
dec
mov
cwde
hlt
push
mov
ficom
(bad)
xchg
and
ss
cwde
pop
inc
and
adc
(bad)
push
mov
fisttp
inc
(bad)
jecxz
pop
mov
mov
or
lock
sub
call
dec
cmps
adc
icebp
mov
and
cwde
push
push
test
sub
in
sub
jne
jmp
sub
cmp
inc
and
cmp
xor
cmp
(bad)
sbb
mov
daa
pop
out
jmp
mov
(bad)
bound
sahf
aaa
push
adc
push
mov
ror
fs
bound
test
mov
ins
inc
inc
dec
mov
or
mov
enter
adc
push
inc
in
nop
pop
pop
mov
and
aam
jg
inc
add
ins
jbe
pop
inc
add
mov
(bad)
pop
fstp
dec
clc
add
xor
dec
nop
add
mov
add
add
pop
shl
inc
vpcmpeqd
cld
mov
mov
add
adc
jmp
or
jp
repnz
and
out
rol
or
pop
mov
push
movs
jae
inc
xor
(bad)
push
pop
jne
and
xchg
test
adc
mov
retf
sbb
nop
inc
cmp
jbe
lods
aas
or
cwde
clc
inc
mov
add
jmp
dec
enter
ror
lea
mov
rcr
jg
cwde
mov
pusha
lods
mov
in
push
ss
mov
mov
pusha
cwde
sub
dec
mov
inc
mov
mov
sub
movs
sub
adc
pop
(bad)
inc
xchg
fdivr
shl
xchg
add
or
dec
dec
and
push
sbb
sbb
mov
in
cmps
add
xor
test
adc
das
xchg
cwde
shl
test
sub
jl
loop
xchg
push
add
outs
add
push
push
push
lods
pusha
add
sub
jns
jecxz
stos
inc
sbb
sbb
inc
inc
retf
pop
inc
clc
jb
(bad)
icebp
jl
adc
and
and
int3
hlt
jb
jne
cwde
ret
sub
pop
aaa
or
ret
scas
rcr
sbb
xor
or
cmps
and
xchg
dec
sub
dec
and
sbb
dec
movs
and
pop
cmc
lea
dec
shl
push
or
cli
call
cdq
mov
or
push
into
idiv
jmp
sahf
enter
popf
cmp
retf
popa
xor
ret
jbe
lea
pop
xor
cli
ja
and
jne
lea
ret
aaa
pop
sbb
xor
inc
inc
inc
cmps
setp
rcr
xor
inc
adc
xchg
adc
xchg
or
leave
dec
xor
stos
cmp
aad
mov
push
rol
cli
cmp
jle
int
retf
(bad)
aam
pop
adc
out
ins
arpl
push
sbb
cmp
xor
push
sbb
jb
or
and
and
loop
cwde
fdiv
js
lods
add
cmp
movs
dec
popf
pop
dec
sbb
inc
jb
shr
retf
add
add
push
sub
sti
inc
loopne
mov
inc
xlat
dec
jmp
or
xchg
(bad)
jb
(bad)
dec
pop
pusha
sub
sbb
jne
shr
xor
add
outs
adc
add
sub
push
xor
call
jns
call
and
sbb
ficom
call
aam
or
jg
(bad)
leave
add
retf
(bad)
add
dec
dec
jmp
mov
pushf
out
mov
test
push
rcl
test
sahf
rcr
icebp
cdq
or
mov
mov
sbb
popf
mov
jne
or
mov
enter
retf
jl
pop
fiadd
jbe
pop
out
or
add
add
add
jo
rcr
pop
xor
retf
enter
add
addr16
jmp
adc
cmp
test
cmp
daa
or
test
mov
in
test
push
cmp
lock
pop
xchg
xor
add
fist
fdivr
repz
sub
add
jl
out
adc
mov
jbe
(bad)
pushf
xchg
and
and
lods
sbb
je
dec
adc
dec
and
adc
inc
mov
mov
push
mov
mov
mov
sub
sbb
mov
jne
cmps
test
sub
(bad)
scas
test
test
(bad)
and
lods
sbb
ds
xor
jo
retf
lea
jns
cld
xor
ins
or
fld
pop
push
pop
jne
inc
cmp
sub
pop
add
push
clc
(bad)
hlt
jmp
repnz
add
or
pushf
je
(bad)
mov
call
pop
aam
repnz
and
add
or
add
push
push
xchg
(bad)
fdivr
enter
fiadd
adc
call
cmp
sbb
or
test
push
mov
cs
retf
(bad)
pop
mov
xor
mov
dec
jb
push
jnp
push
fs
jb
xor
pop
and
xchg
sub
adc
jne
jmp
inc
sbb
imul
or
mov
push
pop
cmp
nop
in
add
pop
add
adc
add
xchg
sub
pushf
mov
pop
pop
in
pushf
pushf
gs
cmp
in
xor
dec
push
ins
fs
xor
jb
fs
and
loope
add
loope
(bad)
lds
out
sub
fs
or
push
leave
pop
pusha
mov
aaa
xor
out
sub
xchg
dec
push
adc
fs
adc
sbb
(bad)
enter
nop
call
or
mov
pop
and
sub
adc
or
inc
dec
adc
or
fwait
js
or
jo
test
jle
cmp
add
xchg
pushf
and
lea
or
ret
aaa
div
inc
xbegin
add
cmp
sbb
sub
xor
dec
sbb
adc
cld
add
ror
cmp
mov
icebp
dec
jo
mov
sub
outs
fcos
xor
fistp
ds
xor
and
push
mov
sbb
ss
and
stos
sbb
mov
fstp
int
push
dec
mov
add
imul
jns
dec
xor
clc
into
mov
xor
in
sbb
je
mov
push
push
pushf
aaa
sti
popa
call
jl
cmp
lods
add
popa
repz
imul
(bad)
pusha
sub
adc
or
pusha
ret
ja
push
add
test
pop
mov
jecxz
mov
sub
inc
cmp
test
scas
sar
add
je
jl
add
push
call
arpl
and
push
pop
cmp
(bad)
iret
rcr
push
repz
cmps
test
nop
xchg
pop
jmp
xchg
fcomip
sti
movzx
std
dec
fild
dec
mov
sti
add
jmp
add
scas
lea
sub
add
and
add
enter
adc
lahf
xor
icebp
or
ret
loopne
jno
sysret
in
enter
mov
cmp
cwde
add
ret
inc
pop
add
imul
ins
push
push
mov
or
xchg
cs
adc
fadd
fdivp
rol
xor
call
push
lea
mov
ror
je
push
leave
jle
mov
cmp
xor
xor
je
push
popa
xchg
mov
call
cmp
push
inc
fsubr
add
mov
xlat
loopne
and
or
inc
movs
test
les
mov
xchg
mov
(bad)
lahf
dec
imul
sbb
sbb
mov
mov
push
dec
lea
sbb
xor
rcr
sbb
ja
push
(bad)
jbe
fidivr
add
in
sti
sbb
add
add
out
lea
fcom
mov
jbe
in
dec
push
jne
leave
js
mov
in
pop
jmp
cmp
or
push
mov
jecxz
mov
mov
enter
je
add
push
nop
mov
bswap
loopne
inc
push
pushf
sub
stos
and
cmp
and
or
mov
fld
data16
lock
add
inc
daa
pop
fcomp
or
jno
aad
jl
or
cmps
or
mov
cmovno
mov
inc
data16
stc
ret
pop
repnz
popf
fwait
sbb
pop
ret
dec
mov
inc
ret
push
sub
call
ins
mov
inc
xchg
or
enter
cmp
jb
push
jbe
add
outs
cmc
rol
mov
cmp
mov
pop
js
xchg
stc
jmp
cmp
pop
mov
adc
jbe
push
push
push
push
xchg
push
mov
sbb
pop
or
mov
or
cmps
pop
fmul
push
inc
mov
xor
push
shr
in
xchg
test
mov
mov
inc
mov
cmp
sbb
test
cmp
and
push
or
push
aas
sub
je
adc
aad
inc
ss
stos
jle
loopne
(bad)
cmp
aam
add
fcomp
cmp
xor
add
add
sub
dec
jns
inc
or
and
xchg
jo
loop
pop
outs
push
push
push
push
inc
pusha
dec
ret
jne
pusha
sbb
shl
push
stos
push
add
dec
sub
push
pop
imul
movs
pop
mov
xchg
shr
cwde
push
xor
sub
dec
or
xchg
js
js
xchg
fst
sub
xor
popa
test
xchg
sbb
add
leave
or
std
test
out
(bad)
ret
stos
mov
popa
sbb
enter
aaa
ret
and
out
mov
imul
sub
pop
in
pop
add
jp
retf
inc
and
test
adc
ret
add
loopne
inc
pop
mov
xchg
xor
popa
sbb
cmp
dec
mov
add
les
inc
sbb
leave
cmp
popf
xchg
ror
add
ret
or
add
or
mov
lea
lea
inc
adc
gs
xor
pushf
jno
adc
mov
cwde
push
mov
fwait
adc
fidivr
sbb
xor
sub
push
loope
xor
pop
ins
push
adc
and
test
ds
mov
ins
pusha
ins
dec
xor
add
or
dec
cmp
xor
and
xchg
sbb
fwait
push
(bad)
cmp
je
ins
loopne
div
cmps
and
pop
cmp
ins
int
icebp
sub
fwait
jl
and
dec
pusha
push
jl
sbb
mov
add
in
fs
pop
inc
fcomp
push
fs
or
adc
pop
sahf
mov
or
dec
ds
retf
je
cmp
pop
repz
cmp
mov
cli
fadd
cmp
inc
mov
in
mov
mov
jno
ret
mov
nop
mov
adc
jb
cwde
ins
xchg
test
dec
pop
mov
imul
sub
mov
mov
dec
je
add
sub
push
xor
adc
sub
inc
leave
dec
mov
dec
adc
xchg
cmp
mov
adc
mov
aaa
iret
mov
dec
imul
por
jno
nop
inc
pop
mov
adc
pop
mov
stos
mov
inc
les
jmp
pop
out
fnstcw
push
xchg
xchg
adc
xor
inc
rol
sbb
call
jne
mov
mov
or
xchg
inc
jno
dec
bound
mov
aam
sbb
sub
push
icebp
add
or
out
pop
adc
xchg
jnp
mov
jmp
add
outs
add
add
lds
adc
sub
or
sar
scas
arpl
outs
adc
mov
test
or
mov
nop
mov
xchg
mov
add
xchg
mov
mov
pop
pop
inc
sub
and
inc
nop
add
sbb
rol
and
and
inc
jmp
inc
and
sbb
rol
add
jecxz
push
inc
sahf
push
push
int3
gs
jp
test
push
xchg
xor
jbe
out
inc
and
push
and
xor
rol
xchg
scas
cmp
ficomp
repnz
or
sbb
inc
mov
pushf
shl
sbb
mov
int
cmp
pusha
pop
fadd
dec
sub
enter
or
and
or
sub
and
inc
jne
sub
dec
jle
cmp
dec
and
or
jp
or
test
fldenv
dec
mov
push
ret
and
jb
sbb
sub
pop
aam
and
sbb
fs
and
lods
mov
and
enter
and
add
enter
xor
add
xchg
out
xor
and
loope
xor
imul
aaa
aad
jo
clc
push
push
or
mov
stos
xchg
pusha
sbb
ror
or
jp
xor
xchg
mov
jb
fld
push
lods
rcl
test
push
mov
add
xor
inc
and
loope
test
inc
sbb
pop
add
mov
pop
pop
sbb
xchg
retf
cmc
adc
(bad)
push
rol
pushf
imul
dec
sub
dec
movs
retf
call
imul
popa
inc
or
dec
loopne
add
and
xor
add
test
int
or
or
add
mov
sahf
out
adc
pop
(bad)
mov
jle
dec
sbb
adc
mov
test
cmp
sub
cld
dec
inc
cmps
jle
adc
movs
into
or
mov
inc
inc
arpl
pusha
and
je
std
xor
mov
out
(bad)
out
push
cmp
js
mov
stos
pusha
xchg
or
mov
cld
jne
into
and
sbb
nop
movs
jge
fldenv
lods
pop
inc
pushf
in
rol
adc
dec
xlat
dec
in
mov
jnp
adc
adc
mov
pop
neg
adc
mov
adc
and
and
or
adc
sbb
jmp
mov
lar
inc
adc
push
call
sub
mov
hlt
loop
(bad)
xlat
cdq
sbb
add
dec
push
sbb
adc
push
and
xor
sbb
jne
cmp
frstor
or
mov
ins
inc
or
push
cmp
xchg
jmp
sbb
push
lea
mov
mov
cld
lea
(bad)
sbb
jae
add
mov
pusha
bound
inc
mov
xlat
cmp
or
jo
fisubr
mov
pop
xor
jl
dec
add
es
inc
add
mov
mov
cmp
fld
nop
jne
xor
clc
or
push
dec
cmps
pop
add
mov
mov
push
es
repz
je
(bad)
cld
and
jne
sar
jnp
and
or
in
jbe
inc
cld
je
popa
lods
or
xchg
fldln2
je
pop
or
outs
push
in
cmp
sbb
xor
pushf
push
subps
dec
adc
and
jns
cdq
and
add
adc
push
inc
or
push
cmps
ret
and
jns
rcr
les
or
dec
je
and
or
fsub
or
sbb
or
adc
clc
ret
cs
in
sbb
clc
sbb
adc
sbb
and
sbb
cli
mov
dec
cmp
pop
add
xchg
push
sbb
nop
fild
or
mov
jnp
or
push
stos
sbb
mov
and
xor
sbb
das
dec
mov
shl
pop
je
pushf
(bad)
or
rcl
and
mov
adc
(bad)
cmp
je
mov
inc
cmp
push
sub
sbb
adc
pop
xor
inc
outs
scas
or
pop
jmp
push
inc
std
into
sbb
add
leave
sti
pushf
jb
inc
sbb
mov
add
cmp
test
xchg
adc
(bad)
push
je
retf
scas
sbb
add
push
pop
sub
or
add
retf
adc
mov
add
sahf
movs
(bad)
outs
adc
xor
sbb
inc
adc
cwde
sub
add
cmp
call
test
xchg
adc
pushf
ins
or
pop
jl
pop
add
cmp
mul
inc
sub
cmc
out
jnp
mov
popa
pop
and
mov
movs
(bad)
pop
push
pop
dec
push
mov
jnp
mov
push
push
xor
cmp
popa
pushf
adc
(bad)
repz
push
and
ret
rcl
mov
jo
dec
inc
repz
outs
stos
rcr
pop
sbb
xchg
shr
pop
lods
out
aam
push
mov
jmp
jge
or
je
mov
sbb
mov
inc
push
nop
call
sbb
lock
jmp
fcom
aaa
sar
loop
adc
inc
cmp
clc
data16
pop
mov
rcl
popf
jns
shr
cmp
adc
rol
shl
lock
ss
(bad)
daa
and
int
sbb
or
rol
ss
or
in
jb
or
mov
mov
mov
div
aas
sbb
add
adc
ja
cmps
imul
fsub
sub
pop
cs
and
sub
xor
ins
dec
sbb
push
cmp
pop
cmp
inc
mov
shl
push
dec
dec
push
push
pop
aas
daa
cmp
pushf
push
mov
mov
jge
(bad)
lods
push
sbb
ror
push
neg
cs
add
scas
xchg
jmp
or
nop
rcl
push
adc
inc
sbb
and
test
jle
not
aaa
jbe
rcl
sbb
fnstsw
ins
cmp
jle
mov
sub
jne
mov
sbb
cmp
dec
es
std
adc
stc
lea
imul
nop
sub
adc
xchg
and
or
nop
add
inc
call
gs
add
int3
pushf
cmp
cmp
sub
jno
adc
inc
retf
nop
(bad)
shl
rcr
mov
push
cmps
rcr
shr
mov
or
push
jmp
inc
pushf
jmp
mov
das
push
fbld
push
sub
mov
jmp
jl
cmp
sti
adc
iret
or
(bad)
cmp
mov
pop
loopne
lods
bound
sub
push
inc
xchg
inc
and
cmp
cmp
jmp
sub
stos
ret
adc
or
jp
and
xchg
push
inc
out
popa
cmp
or
es
cmp
and
or
ficom
outs
push
scas
shr
fcom
cmc
inc
and
add
inc
inc
ffreep
movs
cmp
push
(bad)
shl
jo
dec
push
(bad)
fmul
jnp
das
leave
push
sub
xchg
retf
adc
aaa
sub
push
mov
add
lahf
mov
retf
(bad)
rcr
adc
enter
es
jmp
popf
cld
iret
or
push
cmp
jge
scas
or
sub
add
add
lds
mov
dec
imul
call
adc
cmp
sub
adc
retf
mov
jge
pop
adc
fmul
mov
aad
(bad)
in
lock
add
imul
daa
mov
ins
jmp
inc
icebp
es
mov
outs
mov
fidiv
sbb
call
shr
rol
push
dec
dec
fsub
dec
xor
dec
enter
into
das
ret
sub
xor
pusha
mov
pop
retf
sub
add
nop
inc
pusha
in
sub
or
pop
loopne
popa
push
mov
cmp
or
pop
add
add
mov
lea
push
pop
xlat
fild
sbb
loope
sub
shl
pop
lea
mov
push
xchg
test
inc
leave
inc
mov
rcr
sub
add
push
inc
dec
push
inc
pop
sub
daa
add
rol
xor
ins
test
mov
push
sub
or
outs
or
mov
daa
mov
push
ins
and
sub
clc
add
mov
ror
push
adc
fimul
inc
(bad)
cld
push
cmp
mov
pop
(bad)
sbb
ror
push
test
jle
scas
cmp
gs
xchg
imul
(bad)
sub
(bad)
cs
inc
es
or
test
adc
or
or
and
inc
ds
xor
sbb
retf
cs
test
sbb
stos
add
ftst
jg
jl
sbb
mov
push
mov
push
mov
js
mov
push
add
add
jl
adc
or
mov
jmp
jg
xor
add
rcr
add
lock
add
sbb
fwait
push
dec
adc
push
lea
pop
push
out
cmp
div
adc
inc
ss
or
inc
and
push
xor
fidiv
lock
inc
mov
cmps
jbe
push
inc
push
popa
dec
push
retf
add
jbe
pop
mov
test
and
pop
sub
popa
add
inc
lea
cmp
add
lea
adc
jl
sbb
sub
lea
cmp
xchg
js
xchg
out
mov
jbe
push
sbb
xor
xor
mov
cwde
xor
mov
inc
popf
xchg
aam
add
jns
jbe
add
add
push
inc
add
bound
or
ficomp
sbb
xchg
shl
dec
mov
(bad)
and
and
dec
jno
or
xor
ret
or
test
shl
fild
fmul
add
or
retf
pusha
cmp
jo
shld
and
push
mov
je
jo
push
mov
mov
push
shl
inc
xor
mov
mov
test
jne
jmp
add
xor
and
xor
mov
sbb
call
push
inc
inc
push
fs
xor
mov
inc
shr
pop
push
sub
mov
call
push
push
movs
add
sub
sub
cmp
or
movs
jp
dec
shl
ss
pop
enter
jmp
das
call
mov
pop
repnz
jl
push
pop
pushf
pop
add
adc
loope
ret
or
add
mov
inc
push
inc
sbb
sbb
push
pop
pop
jno
inc
call
cmp
mov
pop
lods
hlt
sbb
mov
movs
cdq
jbe
push
adc
stos
test
push
shl
popa
test
pusha
xor
adc
out
fsubr
sbb
mov
and
jo
xchg
mov
pop
mov
add
xchg
add
sahf
lods
and
push
or
push
test
loope
ss
cmp
add
inc
add
or
push
add
push
inc
add
or
(bad)
push
sbb
adc
lock
push
mov
and
arpl
mov
inc
pop
and
mov
mov
pop
call
push
enter
js
cld
js
scas
sub
clc
lahf
loopne
fild
stc
(bad)
mov
xor
(bad)
xchg
sub
xor
leave
lock
(bad)
push
clc
add
daa
xchg
mov
jae
mov
(bad)
int3
addr16
out
fld
fucomp
mov
fstp
pusha
inc
jp
jmp
sub
lock
sub
popa
(bad)
push
mov
(bad)
retf
xor
adc
clc
inc
je
pusha
fst
jle
in
or
jnp
fld
xchg
mov
imul
fcom
into
xchg
cs
push
jb
retf
loopne
and
fstp
gs
sbb
ss
sub
dec
push
outs
push
loopne
pop
scas
sbb
aad
fcomp
dec
push
scas
bound
call
repz
add
push
sbb
cs
ds
test
dec
xor
sbb
cdq
or
adc
mov
sbb
fwait
movntq
add
push
aaa
jle
nop
out
(bad)
sub
pop
dec
jg
adc
cmp
out
dec
stos
dec
lods
daa
or
cmp
daa
or
(bad)
(bad)
push
add
ja
or
fsubr
ja
dec
adc
jg
push
cmps
fwait
sbb
cmp
dec
or
mov
or
and
aas
add
mov
dec
dec
out
aaa
das
or
add
or
ja
mov
sub
xchg
bnd
mov
sub
sub
sub
or
cmps
inc
adc
fdiv
ret
mov
je
or
adc
inc
pop
mov
pop
popa
call
xchg
ror
inc
mov
mov
ss
adc
xor
pusha
push
inc
push
ret
sbb
mov
in
xor
jne
je
or
pop
mov
mov
in
cs
lahf
mov
fidiv
xor
out
cmp
nop
or
add
add
aad
inc
ins
into
lock
bound
lock
fwait
ret
mov
test
add
inc
mov
clc
ins
data16
mov
clc
mov
sub
push
xor
push
and
mov
idiv
push
lea
or
fcmovnbe
cwde
add
cmp
and
pop
inc
int3
stos
test
add
jl
leave
jmp
(bad)
and
pop
pop
mov
scas
adc
adc
mov
cmp
push
or
xor
sub
and
pusha
jl
mov
add
push
dec
mov
xchg
push
and
xchg
mov
mov
loop
mov
in
pop
ss
mov
fmul
loopne
dec
bound
in
pop
sbb
(bad)
sbb
jae
in
sbb
mov
sar
ins
enter
fistp
sbb
push
and
push
cld
mov
dec
fwait
add
push
xor
pusha
imul
js
cs
cmps
mov
xchg
xchg
mov
push
mov
mov
aam
in
pop
inc
rcr
loopne
bound
popf
retf
lock
ret
jns
xor
movs
dec
stos
jb
dec
dec
(bad)
adc
cmp
push
movs
inc
cmp
in
int3
dec
push
and
int
push
cli
push
xchg
xor
sbb
push
push
dec
imul
in
dec
mov
adc
mov
hlt
or
fisttp
lea
cmp
test
sub
push
xchg
std
popa
or
sub
push
or
std
inc
mov
pushf
rol
push
fdivr
mov
setge
mov
pusha
ds
clc
leave
xchg
xlat
xchg
jbe
add
hlt
(bad)
pop
mov
push
add
jae
inc
pusha
pushf
cmc
dec
xchg
mov
pop
or
sti
arpl
sti
lock
xor
or
push
nop
mov
pop
sbb
xchg
xor
imul
mov
mov
xchg
dec
ja
sub
dec
pop
jns
add
retf
mov
add
xor
leave
xor
sar
out
out
add
icebp
sti
mov
rcr
sar
sub
pusha
push
and
and
mov
add
or
inc
std
mov
cmovae
in
dec
test
inc
adc
or
or
leave
adc
push
cmp
xchg
adc
push
jne
rcl
adc
hlt
add
add
add
pop
sbb
mov
inc
jl
jge
adc
int3
push
aam
push
cmps
imul
or
pusha
or
jl
das
jne
int3
cmp
fadd
loopne
(bad)
je
loope
push
push
rol
mov
and
push
jp
out
and
ror
lea
fdiv
ret
test
sbb
jle
add
in
out
push
pop
cmp
mov
jo
movs
ins
test
jo
xchg
int3
pop
push
mov
scas
dec
rol
pop
and
mov
daa
sub
adc
addr16
lahf
stc
pop
inc
clc
push
popa
or
or
pop
mov
movs
mov
ins
ins
mov
mov
mov
int3
mov
jmp
stos
dec
(bad)
sti
inc
xchg
outs
movs
dec
and
aad
push
cmp
test
or
mov
icebp
dec
jmp
lahf
aam
cs
inc
(bad)
lahf
in
push
fldcw
nop
push
(bad)
adc
cmp
inc
les
test
sbb
and
jmp
sub
adc
fcomp
ja
pop
stos
dec
enter
add
or
data16
gs
and
imul
and
adc
sahf
scas
dec
ret
lods
popf
push
or
adc
shl
adc
adc
std
xchg
mov
inc
mov
inc
mov
ret
pop
les
xchg
jno
test
mov
int3
fidiv
aam
mov
fsubr
xor
(bad)
pop
test
les
push
mov
dec
loop
movs
mov
test
shl
sbb
lock
mov
ret
shl
sbb
mov
fmul
lea
loopne
mov
mov
sar
dec
rol
dec
push
test
mov
xchg
push
cmp
lea
inc
clc
sub
cmp
pusha
test
mov
push
mov
push
sub
sbb
and
ss
cmp
hlt
fsub
xchg
mov
loopne
scas
ret
add
pusha
pusha
mov
fnstenv
sub
loopne
dec
add
lahf
inc
inc
(bad)
clc
jge
sub
cmp
mov
loope
sub
out
addr16
mov
sbb
pop
in
(bad)
mov
loopne
sbb
(bad)
push
mov
mov
sbb
or
loop
add
or
les
xlat
ja
pop
pop
sahf
jl
es
fwait
call
stc
lods
adc
or
mov
js
mov
in
outs
sbb
dec
or
loop
jecxz
(bad)
je
imul
jg
pop
stos
je
pop
jns
jb
pop
test
push
mov
daa
jno
adc
in
xor
lods
pushf
or
push
or
outs
(bad)
mov
adc
frstor
push
js
add
fsub
mov
jg
addr16
mov
sub
pop
mov
jne
ins
add
icebp
sub
mov
(bad)
jecxz
mov
pop
pop
movs
xchg
test
mov
(bad)
mov
xchg
daa
retf
mov
(bad)
or
sub
imul
dec
cld
push
bound
mov
mov
cld
setb
popa
iret
imul
dec
rcr
dec
push
mov
ret
pop
popa
inc
xor
add
pusha
add
je
test
clc
or
sub
imul
(bad)
push
push
push
rcl
mov
jg
adc
jecxz
inc
xchg
out
jo
mov
lods
xor
movs
push
call
xor
mov
dec
sbb
test
sbb
out
mov
inc
call
repz
pop
add
jp
cmps
lods
jns
jp
mov
sub
ins
ins
daa
loop
enter
xor
xor
xor
mov
xchg
mov
movs
cmp
sbb
sub
shl
sbb
inc
cmp
jo
push
xchg
lea
sbb
pop
jecxz
test
adc
imul
xlat
pop
das
lock
cld
out
jl
loope
adc
add
push
push
pushf
mov
pop
or
lods
adc
push
add
mov
mov
rol
shr
popa
push
ret
arpl
jmp
or
movs
pushf
mov
retf
lods
mov
bound
data16
cmp
test
jge
pusha
or
mov
icebp
imul
dec
cld
jno
movs
mov
fnsave
adc
js
nop
out
in
js
nop
jnp
das
mov
test
fmul
xor
xchg
pop
xor
leave
sbb
adc
mov
sbb
js
xor
push
jns
mov
xchg
dec
cmp
push
mov
and
inc
mov
mov
jmp
mov
mov
ss
rcl
or
and
or
hlt
popa
adc
fsubr
movs
mulps
cld
add
push
pop
ins
enter
inc
mov
or
add
ins
imul
push
or
sub
in
push
xor
xchg
and
in
pop
dec
xor
adc
mov
xchg
lahf
dec
jl
lea
mov
and
ins
cld
lea
add
xor
mov
add
push
sub
push
bound
jl
js
ins
les
pusha
dec
cmp
stos
shr
pop
gs
xchg
and
or
mov
sbb
adc
dec
jne
push
sub
xchg
cld
or
or
push
imul
js
sti
outs
adc
movs
xor
xor
xor
add
jns
test
mov
je
cmp
dec
aam
add
and
jbe
add
adc
pop
inc
or
jle
lahf
sbb
mov
xor
into
mov
sub
dec
mov
pushfw
push
add
sbb
ja
cmp
and
xor
and
retf
(bad)
std
pop
add
or
dec
or
mov
jnp
xor
inc
and
or
push
adc
rol
jo
test
mov
or
nop
cmp
pop
nop
idiv
push
add
xor
sub
xor
shl
cmps
push
test
sar
jae
cmps
push
sub
cwde
rol
mov
fucomi
cmp
pop
jnp
add
imul
movs
xchg
fwait
or
adc
cwde
push
sub
or
fs
inc
(bad)
dec
sub
lds
ror
je
add
loope
and
scas
mov
enter
ja
or
dec
mov
add
mov
push
jp
add
sbb
loopne
cmp
pop
fadd
mov
mov
cs
add
add
ret
iret
idiv
pop
dec
inc
dec
mov
or
(bad)
mov
xor
int
dec
loopne
loopne
cmc
or
add
and
xor
pop
pop
adc
repnz
push
push
pusha
jle
mov
mov
xchg
jge
cmp
cwde
popa
mov
cdq
loope
clc
cmp
jnp
dec
ins
push
inc
(bad)
arpl
or
popf
mov
add
int
cmps
mov
add
jb
sub
adc
or
add
mov
ins
test
cmp
add
call
push
shr
pop
pop
sub
and
inc
cs
xchg
outs
fistp
xchg
cmps
movzx
or
mov
mov
xchg
lods
push
in
xchg
in
rcl
cmp
cmp
push
js
xor
in
lea
xchg
jmp
xchg
sub
pusha
imul
cmp
out
and
popa
(bad)
jne
(bad)
sar
or
fincstp
fcomp
add
or
sbb
bound
xor
adc
lea
clc
add
cmpltps
xor
je
lock
in
mov
repnz
mov
xor
int
or
call
push
push
inc
lock
fld
lods
idiv
ror
push
loopne
dec
dec
push
dec
jmp
movs
add
lods
fxch
fstp
fidiv
mov
xchg
add
mov
xor
outs
sub
and
add
xchg
mov
cli
push
lea
stos
xchg
(bad)
add
loope
mov
xor
es
(bad)
dec
cwde
(bad)
call
mov
push
pop
adc
dec
les
sub
cmp
leave
fidivr
out
sbb
mov
add
je
fsubrp
into
les
inc
cmp
and
xchg
nop
push
jbe
ror
cs
push
add
(bad)
and
push
push
push
or
ja
sbb
sub
or
mov
sbb
test
xor
push
shl
setg
mov
xor
xchg
jne
add
sub
dec
in
loope
sub
pop
adc
inc
scas
push
lahf
sub
mov
out
mov
push
add
sub
push
je
mov
cdq
jb
stos
pop
jge
mov
jbe
retf
mov
rol
adc
ss
xchg
ins
dec
enter
in
lea
ss
adc
std
inc
sbb
inc
add
loope
mov
call
lods
lock
jle
outs
in
jne
xchg
(bad)
jmp
adc
jle
xor
ret
(bad)
or
add
push
test
xor
mov
mov
inc
mov
mov
ja
lea
add
sar
cmp
jne
dec
sbb
(bad)
jge
jno
sub
int
pop
pushf
xor
out
sti
inc
repnz
and
xor
xor
jmp
or
lahf
lock
fdivr
in
pop
or
inc
pop
stos
rol
push
push
test
test
outs
cli
in
mov
pop
dec
int3
pop
movs
mov
inc
fnsave
push
test
push
push
(bad)
pop
mov
(bad)
loopne
cmp
push
push
push
dec
mov
mov
dec
loopne
loope
out
add
adc
fucomi
cmp
jl
rcr
push
into
jg
adc
or
nop
loop
outs
push
adc
and
ret
test
pop
and
dec
xchg
psubd
jmp
outs
or
fiadd
inc
push
loopne
(bad)
or
loopne
std
pop
mov
cmp
add
and
call
xor
je
mov
or
or
mov
clc
sbb
cmp
retf
dec
rcl
add
inc
cld
jne
cmp
jne
inc
loopne
aaa
test
or
clc
clc
out
add
dec
in
push
lock
mov
pop
sbb
ror
shl
adc
inc
xchg
xor
add
test
add
add
pop
xchg
mov
pop
retf
pop
sub
sbb
ficomp
lock
lods
pop
outs
mov
push
push
add
faddp
xor
mov
aaa
ja
jne
jmp
cs
or
shl
add
test
jne
push
stc
sub
or
inc
adc
inc
ror
dec
adc
es
test
xchg
xchg
arpl
cld
xor
cs
gs
call
rcl
push
pop
mov
push
cmp
aas
sub
pop
outs
pop
or
push
or
je
loope
jmp
es
inc
inc
cdq
adc
popa
ret
push
or
jmp
add
mov
or
add
adc
add
mov
adc
clc
std
retf
dec
inc
dec
pushf
xor
push
cmp
je
mov
pop
mov
push
and
xor
ja
arpl
fwait
jb
xor
and
add
sub
in
inc
ja
das
std
das
and
add
mov
icebp
mov
hlt
add
cmp
jno
add
cmp
or
mov
push
ror
(bad)
xchg
call
jb
sub
rol
pusha
pop
mov
pop
pushf
adc
das
xlat
ds
inc
xor
xchg
lock
rcl
or
push
jns
push
(bad)
(bad)
fmul
cmp
push
push
retf
lock
pusha
push
jno
jbe
inc
cs
movs
add
scas
std
cld
xchg
mov
pusha
daa
mov
(bad)
push
sub
sbb
push
leave
add
hlt
test
push
test
pop
lods
aas
jns
cmp
jne
sub
lock
fldcw
imul
scas
mov
popf
jge
lds
sbb
mov
dec
invlpg
push
push
cmp
popf
cmp
jbe
push
aas
leave
retf
les
mov
xor
aad
ror
scas
into
sbb
mov
dec
xor
push
ins
movzx
add
shl
or
push
inc
ins
and
pop
out
mov
xor
push
push
xor
sub
clc
xlat
inc
and
lods
push
xlat
mov
xlat
dec
cmp
dec
pop
test
mov
jnp
jo
jecxz
je
int3
or
xor
dec
sbb
or
inc
xchg
jno
sub
fnstenv
div
xchg
jo
cmc
xor
inc
add
xor
add
and
cmc
jae
int
push
jb
dec
ja
or
push
push
(bad)
push
and
add
sbb
add
add
cmp
jne
and
test
aad
mov
xchg
outs
shl
cmp
or
iret
fisub
popa
and
comiss
and
es
iret
mov
sbb
add
js
jbe
data16
or
mov
neg
mov
pop
enter
rcr
dec
xor
inc
les
xlat
ret
pop
cwde
cmps
or
(bad)
int3
jne
ror
pop
data16
adc
(bad)
ins
(bad)
stos
mov
add
xchg
out
sub
xor
push
xor
int3
scas
enter
xlat
fistp
call
mov
xchg
pop
sbb
or
pop
cmc
out
or
pushf
add
(bad)
push
cdq
push
sbb
call
in
in
pusha
inc
lock
xor
pop
or
inc
test
sbb
mov
nop
mov
cmp
bound
add
xor
mov
aas
int
retf
sar
leave
enter
loopne
aas
iret
mov
pop
cmp
or
pop
dec
les
xchg
mov
clc
dec
push
inc
add
cmp
xchg
clc
adc
clc
clc
(bad)
or
pop
sub
or
stc
js
pushw
inc
jle
hlt
add
cs
mov
xor
cld
sub
dec
and
xor
jmp
xor
lods
stos
inc
jmp
pushf
ins
push
sbb
(bad)
xacquire
pop
push
or
adc
adc
or
adc
loopne
in
call
lock
mov
sbb
dec
add
clc
dec
in
jo
shl
sbb
call
xor
push
scas
cwde
push
xchg
push
add
sub
clc
cmp
or
or
aaa
mov
lods
add
xchg
xor
cmp
movs
mov
xchg
adc
sub
rcr
ret
pop
add
cmp
jle
push
idiv
push
or
add
rol
out
push
hlt
cmp
les
lock
mov
fist
and
mov
pop
hlt
mov
(bad)
mov
and
jge
mov
cmc
or
mov
mov
jle
sub
addr16
jle
push
xor
adc
jmp
out
mov
cmp
(bad)
push
(bad)
push
push
cmc
aaa
rcr
push
inc
mov
mov
add
mov
add
dec
jecxz
scas
sub
xchg
mov
mov
retf
xchg
out
pop
and
xchg
dec
or
and
call
xor
dec
adc
inc
repz
adc
lahf
cmp
aaa
aad
shl
jo
rol
movs
in
xchg
and
xlat
mov
cld
mov
or
or
jmp
sti
ret
fs
cdq
and
add
jbe
cmp
jo
mov
push
pushf
add
jbe
xor
les
mov
pop
jnp
sbb
push
jo
or
pop
adc
ret
cmp
sub
push
and
push
fcmovne
aaa
ins
adc
fcmovnb
jmp
inc
push
sub
(bad)
rol
cmp
xchg
add
mov
xchg
dec
inc
sbb
sbb
adc
ds
mov
fsubr
inc
and
das
sbb
xor
and
pop
sbb
add
(bad)
ins
sub
adc
dec
fwait
cmp
(bad)
gs
or
push
add
es
clc
clc
(bad)
sbb
mov
add
add
fbstp
fidiv
add
in
or
or
stos
hlt
jb
xor
retf
pop
enter
mov
outs
add
dec
retf
add
inc
sub
mov
(bad)
hlt
jne
mov
push
jmp
call
push
loop
out
clc
sbb
mov
dec
and
lahf
push
shl
retf
push
dec
and
loope
inc
sub
pop
xor
adc
xor
dec
and
sub
addr16
arpl
lods
addr16
test
inc
xlat
lea
retf
es
mov
sub
push
jmp
push
nop
cmps
jmp
push
pop
dec
xchg
jp
sbb
retf
pop
cmp
sbb
rcr
fisttp
jbe
dec
jmp
jo
jmp
aam
push
push
push
jmp
ret
and
pusha
pusha
loope
xchg
rol
dec
sbb
xchg
aaa
neg
and
push
adc
sub
xchg
and
pusha
mov
in
pop
dec
scas
mov
jle
jl
mul
xor
or
dec
movs
or
(bad)
cmc
xor
sub
f2xm1
jmp
das
fadd
jg
adc
sbb
inc
sub
inc
int
ret
jg
daa
push
or
ss
pushf
sbb
jnp
cmp
clc
into
mov
ror
sbb
jnp
ret
xchg
inc
sub
(bad)
jg
cmp
sbb
loopne
and
lea
test
push
jae
pop
popa
inc
sub
in
ja
out
sub
add
mov
dec
adc
push
(bad)
push
fwait
mov
imul
mov
je
sub
lea
(bad)
cmp
inc
push
aad
not
pushf
aas
jmp
call
sub
lds
scas
dec
gs
enter
lock
push
add
not
test
imul
and
xor
or
or
inc
add
sbb
das
pop
pop
imul
lock
inc
add
in
es
not
jnp
sti
nop
sub
cmps
jns
dec
dec
clc
add
jne
sti
pop
pop
add
mov
sbb
test
or
mov
mov
pop
movs
pop
lea
mov
jge
dec
pusha
lea
inc
or
push
jge
fmul
sti
daa
test
add
inc
jbe
fld
loopne
(bad)
cmp
push
adc
mov
mov
cmp
ror
add
or
add
sbb
inc
(bad)
mov
sbb
sbb
cdq
cld
test
cmps
nop
xchg
dec
or
test
or
in
outs
cmp
dec
in
xor
inc
or
inc
fld
push
add
xchg
or
sub
push
pop
cdq
mov
ret
test
in
pushf
int
inc
movs
pop
inc
add
ins
je
cmps
jp
dec
fwait
call
pop
add
xor
test
ja
(bad)
jecxz
ds
jbe
les
retf
jne
pop
inc
cli
xor
popf
dec
ror
outs
or
pop
add
jmp
imul
dec
sbb
sti
xchg
mov
lods
div
pop
repz
es
lds
mov
sub
test
sbb
lods
test
sub
fdiv
cmp
test
adc
(bad)
sub
jg
ins
xor
pop
jbe
in
pushf
push
sub
jl
call
sub
inc
add
mov
pop
add
pop
sbb
test
mov
into
jne
iret
mov
cmp
pusha
or
push
add
outs
mov
(bad)
movs
cmp
add
dec
pusha
jbe
add
dec
inc
or
adc
jmp
add
dec
dec
stos
cmp
fcom
push
xchg
xchg
xor
lock
jmp
mov
dec
lea
or
inc
mov
mov
adc
xchg
jb
gs
dec
inc
inc
add
lock
sar
add
dec
or
and
and
adc
push
inc
scas
test
add
loopne
push
push
sub
jp
shr
mov
add
aas
fiadd
inc
test
cli
mov
pop
add
mov
or
pop
pop
pop
mov
popa
int3
add
ror
repz
dec
adc
adc
jmp
repz
dec
dec
loopne
sbb
dec
inc
mov
(bad)
mov
cld
mov
sbb
shl
push
jmp
add
stos
mov
push
shr
dec
add
add
mov
pop
ret
in
inc
sbb
stc
retf
test
add
(bad)
jne
js
push
cmp
mov
sub
mov
push
scas
enter
dec
sub
xor
add
adc
inc
push
pop
cmovl
popf
outs
adc
cmp
dec
loopne
loopne
clc
fild
mov
fcom
cli
loope
push
stc
popf
lods
sbb
mov
or
add
cmp
repz
pop
push
and
or
xchg
xor
cli
add
pushf
mov
rcr
stos
mov
cmps
jbe
test
cmp
mov
stc
push
sbb
addr16
shr
fnsave
movs
sbb
inc
mov
xor
adc
sub
das
jecxz
xor
inc
lock
jp
push
dec
repnz
rol
dec
inc
push
lea
inc
je
or
or
je
add
push
lock
mov
mov
lock
loopne
mov
xor
bound
je
loop
mov
push
shl
idiv
movs
jmp
cmp
inc
or
inc
xchg
(bad)
or
push
add
retf
test
and
retf
enter
cmp
xchg
lock
idiv
push
pop
add
sbb
adc
jne
popa
inc
std
(bad)
dec
mov
xchg
pusha
test
and
movs
xchg
push
out
(bad)
and
fbstp
xchg
adc
sub
test
jmp
cmp
jp
jge
ins
les
shl
mov
mov
xor
sub
into
outs
adc
add
mov
cmp
fadd
add
xchg
jae
mov
std
fwait
and
or
pop
jmp
cmps
mov
push
or
rcr
pusha
adc
mov
push
or
xor
mov
jo
enter
retf
and
mov
out
or
std
mov
cmp
pop
leave
fbstp
add
push
or
cld
jo
rcr
dec
ror
stos
arpl
adc
mov
add
add
sbb
fstp
aas
ret
fst
sub
stc
cmp
jae
aad
outs
adc
aad
sub
inc
ret
frstor
mov
sub
in
adc
enter
and
push
daa
or
or
pop
push
enter
add
mov
pop
test
mov
pop
mov
les
rcr
cdq
cwde
pusha
mov
call
aam
jnp
and
or
and
imul
mov
lods
stos
add
enter
fisub
jae
and
xlat
dec
push
in
mov
sub
mov
fsub
push
sar
or
xor
(bad)
mov
lods
inc
or
pop
pop
fild
mov
shl
test
rcr
adc
add
mov
sub
push
xor
js
xor
stc
repz
mov
test
out
mov
push
(bad)
sbb
cmp
imul
adc
scas
popa
jmp
xor
jle
adc
mov
mov
fnstenv
int3
add
jb
inc
push
mov
add
or
inc
(bad)
ss
and
inc
fucom
jb
xor
sar
push
sbb
dec
cmps
cs
or
(bad)
fst
adc
add
jg
loop
hlt
or
rep
jmp
cmps
(bad)
pop
mov
jb
cmp
add
cs
popf
jge
test
cmp
rcl
in
adc
mov
jg
xor
ror
inc
add
lods
adc
inc
mov
mov
push
push
imul
pushf
sbb
xchg
mov
jnp
and
push
movs
push
pushf
xchg
dec
repz
test
inc
mov
mov
cmp
repz
call
cmp
repz
hlt
clc
clc
add
out
addr16
cmp
pusha
sbb
(bad)
jmp
loope
jmp
mov
inc
pop
sti
and
or
inc
and
and
fcomp
lea
jl
cld
pop
and
int
loopne
std
(bad)
cld
out
stos
pop
neg
shl
out
stos
or
daa
stc
sub
mov
inc
pop
nop
push
jo
xchg
mov
xchg
jl
mov
add
sahf
inc
push
(bad)
cs
mov
loop
addr16
add
pop
bound
jb
pop
add
iret
repz
sbb
sub
cmp
cmp
iret
inc
push
ss
sbb
repz
sbb
adc
or
iret
repz
or
add
out
xchg
je
inc
sbb
add
sub
mov
mov
mov
fidivr
test
mov
fwait
sar
(bad)
sub
stos
dec
cld
or
jmp
mov
add
loopne
adc
mov
jae
loopne
or
xor
or
jg
mov
ins
adc
aam
mov
add
sar
pop
xchg
sbb
add
fisttp
sub
imul
push
fsubr
or
and
xor
push
push
xchg
dec
push
iret
or
sbb
pushf
adc
and
dec
jmp
mov
cld
lahf
add
add
test
jne
cmp
inc
xchg
adc
lock
pop
cs
adc
dec
(bad)
or
and
ret
cmp
in
aaa
into
pop
clc
mov
push
lea
sub
lock
je
push
lea
mov
js
mov
sbb
xlat
mov
mov
les
sbb
shl
lock
test
std
pop
test
mov
or
test
jbe
or
or
and
outs
pop
rcl
sub
lods
inc
test
loope
ins
ret
push
sub
ffree
mov
aaa
push
cmp
pop
cmps
movs
adc
leave
mov
add
int3
mov
push
lods
mov
ror
add
sar
js
add
mov
adc
dec
js
pop
nop
sbb
push
mov
test
add
sar
or
or
sub
stos
sub
hlt
mov
aas
pop
jbe
sbb
pop
push
xchg
fsub
push
or
imul
push
test
(bad)
pop
push
dec
sbb
or
adc
add
outs
push
jge
lock
jge
test
jne
lea
pop
add
movs
cmp
adc
rol
cli
add
xchg
pop
shl
add
add
shr
movs
sti
jg
adc
test
jne
push
sbb
sar
ss
add
mov
inc
and
cmp
dec
in
cmp
clc
das
dec
jne
dec
js
mov
es
clc
(bad)
ret
push
jmp
push
mov
pop
rcr
inc
dec
scas
js
push
add
or
or
sar
jl
lds
mov
adc
xchg
push
scas
(bad)
in
ins
cmps
push
mov
pop
and
push
or
and
xor
inc
das
or
push
loopne
push
mov
push
cs
sbb
sar
pop
jbe
dec
push
shl
inc
cmp
sbb
jmp
mov
pop
cld
pop
mov
and
out
sbb
mov
jae
out
std
aam
mov
jl
jns
dec
jl
pop
aaa
jmp
loopne
xor
add
cmc
mov
loopne
shl
std
sar
adc
ja
jmp
mov
dec
rcl
ins
or
or
xchg
(bad)
and
inc
xchg
cs
adc
in
rcr
mov
push
pop
push
fs
pop
inc
sbb
arpl
sbb
dec
repz
pop
cmp
loope
and
mov
dec
jl
aaa
pop
jmp
pop
and
pop
adc
dec
pop
fnsetpm(287
jno
mov
outs
mov
dec
fidiv
fadd
sti
sub
retf
mov
inc
test
outs
cmps
mov
ret
push
or
and
jle
mov
je
mov
or
retf
jns
test
jne
pushf
mov
adc
imul
add
inc
jno
test
adc
push
sub
mov
and
mov
sbb
ficom
out
push
add
ret
or
sbb
fwait
fwait
enter
add
adc
(bad)
jmp
cmp
inc
push
mov
ja
ror
jne
nop
pusha
shl
aad
sbb
jmp
(bad)
sub
fsub
retf
in
mov
dec
push
adc
jo
push
push
or
ins
add
fidivr
outs
push
ret
retf
je
sub
je
sub
sbb
adc
das
add
shl
add
or
inc
mov
fsub
cli
(bad)
out
(bad)
jne
pop
ret
push
in
or
retf
mov
add
xor
xor
push
cld
(bad)
ja
loope
add
xor
xor
sar
iret
push
or
or
jmp
pop
lea
sar
(bad)
pop
or
cld
outs
adc
test
je
mov
xchg
jmp
bound
push
bswap
mov
jle
lahf
add
pop
adc
xor
sbb
(bad)
pop
sbb
dec
cld
jmp
test
adc
sub
sahf
call
inc
sbb
out
mov
daa
pand
ret
xchg
icebp
(bad)
push
(bad)
sbb
loopne
les
jb
ins
rcl
outs
idiv
(bad)
fidivr
or
mov
in
pop
(bad)
out
push
mov
or
adc
fiadd
je
inc
test
cmp
clc
loopne
push
push
mov
inc
cmp
movd
paddw
repnz
jo
push
sbb
mov
xchg
mov
cmps
mov
test
das
mov
xor
test
push
mov
(bad)
es
int
or
add
and
fsubr
(bad)
fiadd
loopne
test
lea
pop
pusha
adc
mov
clc
(bad)
je
push
cmp
pop
cmps
ror
jae
inc
mov
or
xchg
test
das
cmp
adc
or
jmp
cmps
push
add
lahf
jne
or
jmp
mul
push
popf
push
leave
mov
cmp
popf
mov
add
sub
je
adc
jns
in
push
push
adc
inc
movs
dec
daa
int
enter
pop
add
lods
in
mov
dec
push
fdiv
push
xchg
pushf
mov
sbb
mov
sub
inc
mov
jmp
sbb
mov
or
pop
add
add
ret
test
lods
test
jo
jmp
pop
jmp
sahf
cmp
std
ss
mov
test
and
sub
dec
or
adc
and
sbb
sub
pusha
rcr
jne
push
mov
sub
bound
jnp
dec
adc
jmp
fwait
mov
mov
xor
sbb
out
adc
aas
sbb
inc
in
xor
jne
add
aas
pushf
lea
cmp
mov
sbb
out
mov
rcl
add
pop
and
outs
xor
loop
add
cmc
xchg
sub
jmp
sub
push
xor
and
jno
xlat
pushf
mov
stos
jmp
add
mov
jmp
add
nop
bound
sbb
pop
jo
mov
push
xlat
pop
inc
dec
xchg
aad
inc
sub
push
and
or
jle
xor
loopne
stos
sub
mov
mov
repz
jb
inc
and
lea
cmps
fdivr
cmp
test
add
jg
add
sar
stos
sbb
xor
pop
shr
push
retf
cmp
les
add
push
inc
sub
pop
mov
pop
js
outs
sub
cmp
adc
cmp
add
adc
popa
adc
mov
xor
(bad)
jmp
add
fdivr
je
cmp
adc
popa
jmp
std
mov
mov
sbb
xchg
add
sub
in
jmp
movs
pop
ror
and
ja
cmp
push
sub
xchg
leave
cmp
xchg
mov
add
add
(bad)
imul
sbb
inc
sbb
jge
mov
je
sbb
pop
(bad)
or
hlt
ror
mov
das
jecxz
scas
imul
sti
cmp
pop
mov
iret
cmps
fbld
clc
sub
add
mov
fistp
dec
cmp
or
pop
fidiv
hlt
or
jne
pusha
clc
mov
retf
div
sub
pop
pop
sbb
jge
sub
imul
ins
mov
jb
in
jmp
sub
mov
sahf
push
push
push
mov
sub
jbe
ja
or
js
jg
mov
push
lea
sbb
das
bound
push
mov
and
jmp
nop
pusha
push
loope
or
and
adc
mov
(bad)
xchg
call
test
inc
mov
mov
jns
(bad)
addr16
or
or
es
sbb
faddp
sbb
retf
push
add
(bad)
jmp
sbb
or
xchg
mov
adc
inc
punpckhwd
mov
add
fild
and
sub
sub
mov
add
aaa
lock
sub
add
pop
jo
add
mov
dec
or
clc
cdq
cmps
jo
add
lock
push
cdq
fs
cld
inc
adc
nop
push
jl
add
mov
push
sub
or
ret
cmp
mov
sbb
xchg
in
or
xchg
test
mov
push
mov
and
test
push
shr
or
in
xor
movs
mov
dec
imul
push
cld
js
icebp
inc
jo
add
dec
je
pop
call
mov
out
add
(bad)
cmps
xchg
cmp
inc
sbb
jle
mov
mov
add
mov
jb
aas
mov
sbb
fcom
add
push
out
int3
pop
lock
adc
mov
loopne
adc
mov
pop
bound
clc
into
ins
add
call
jg
push
call
(bad)
push
add
lds
or
xor
mov
dec
dec
(bad)
into
cmp
push
add
cmc
or
ds
dec
ret
push
mov
lock
mov
sbb
test
jne
dec
cmp
adc
jle
jp
loop
mov
and
xor
add
inc
jo
sbb
sar
xor
jmp
in
test
aas
push
xor
out
mov
inc
out
enter
add
add
std
mov
cmp
rcl
retf
xor
pop
aad
add
cdq
and
push
jne
jmp
and
or
jmp
and
sub
or
pop
sub
sub
ss
in
cmp
enter
(bad)
xor
add
push
cmp
bound
add
and
xchg
pushf
push
movs
add
sbb
sub
das
pop
xor
ins
or
xor
fcomp
pop
sbb
imul
ds
pop
(bad)
cmp
icebp
imul
pusha
mov
shl
shl
pop
mov
movs
push
loope
mov
push
jno
inc
xor
call
and
jae
cmp
add
out
xor
mov
push
cs
push
ss
mov
rcr
and
mov
sbb
adc
sub
lock
fimul
sbb
sar
in
imul
shl
and
cmp
or
mov
(bad)
mov
cvtpi2ps
daa
add
shr
std
add
xor
inc
push
push
push
jecxz
push
in
or
sbb
fist
test
(bad)
stc
test
ds
and
inc
or
or
ret
ja
mov
inc
push
(bad)
gs
repnz
adc
sar
add
add
mov
cmp
push
loopne
mov
and
and
push
movs
push
fbstp
shr
xchg
cwde
add
(bad)
fnstsw
pop
call
jg
cmp
jbe
out
rol
dec
and
stos
jbe
cmc
aas
lahf
ret
sub
enter
adc
adc
mov
sti
sbb
call
xor
shr
push
and
sub
data16
icebp
dec
je
push
or
adc
cmp
jl
mov
adc
inc
add
in
pop
dec
popf
push
mov
mov
adc
xchg
inc
cwde
je
pop
sbb
jmp
sub
add
nop
add
stos
add
int3
ret
dec
cmp
fisub
les
push
stos
and
aad
outs
popa
enter
or
pop
xor
imul
neg
int3
sbb
or
push
push
or
cmp
in
sti
push
xchg
adc
pusha
add
push
sub
xor
loopne
cmp
jb
and
and
rol
mov
and
xor
add
cmp
xor
(bad)
fcmovnu
pop
inc
push
not
mov
es
push
(bad)
cmp
test
cmp
fisttp
add
xor
push
loopne
sahf
ror
fidiv
jb
sub
xlat
sbb
push
or
out
push
push
(bad)
dec
sub
add
or
adc
or
jne
scas
jg
mov
dec
cmp
(bad)
ret
sub
hlt
imul
sbb
call
lea
cmps
adc
loope
data16
pop
inc
adc
fisttp
add
ret
mov
hlt
(bad)
out
ror
jo
or
sahf
cs
xor
jecxz
pop
pushf
ret
stos
pop
jmp
adc
mov
outs
jl
adc
xor
cs
je
rol
sbb
fbstp
push
jmp
sub
call
sti
cmp
jg
jl
cmp
jb
xchg
(bad)
(bad)
lods
push
rcr
jg
gs
fisubr
enter
push
adc
mov
mov
adc
pop
push
(bad)
in
shl
hlt
push
or
cld
mov
gs
sar
fwait
mov
mov
jl
mov
jbe
in
sub
or
clc
loop
retf
add
and
shl
(bad)
(bad)
dec
fnstenv
jecxz
sub
test
cdq
push
mov
mov
ins
sbb
push
arpl
pop
cmps
imul
and
enter
cmp
je
popf
add
cmp
and
add
dec
cmc
hlt
push
mov
push
clc
jo
sbb
xchg
and
dec
and
sbb
adc
mov
sub
jns
(bad)
jle
cmp
(bad)
int3
sar
aaa
push
popa
(bad)
jl
inc
add
add
sub
fisub
xchg
sub
sbb
data16
inc
sbb
sbb
xor
inc
imul
aam
(bad)
jl
xchg
sbb
shl
je
mov
mov
movs
sbb
(bad)
aad
jg
jl
out
pushf
gs
inc
add
push
push
mov
rol
pop
dec
mov
adc
mov
enter
add
pushaw
sub
xchg
lods
or
pop
not
pop
and
jl
aad
stos
cmp
ja
mov
push
dec
add
call
jmp
mov
les
or
test
sub
call
xor
mov
je
fwait
add
inc
pusha
jnp
dec
fwait
or
jmp
inc
lds
and
pop
rol
test
pop
push
pusha
add
inc
cmp
out
add
push
or
pop
pop
pusha
dec
popa
call
pusha
ins
aam
inc
pop
ss
dec
pop
mov
inc
packssdw
or
jne
push
cmp
test
dec
pop
jo
add
jle
push
loopne
mov
and
sti
sar
fdivr
sbb
xor
ss
mov
cmp
and
mov
jl
adc
add
push
leave
les
sub
lahf
inc
ud1
pop
call
aam
jns
scas
scas
pop
adc
jmp
sub
pop
jb
and
ror
cmp
jnp
cmc
dec
push
fld
test
movs
ret
inc
fcmove
jbe
test
xor
push
cmps
xchg
inc
aaa
add
jmp
cmp
ret
mov
pop
or
jo
and
lods
pop
aaa
sub
lahf
pop
pop
xor
fiadd
and
leave
in
mov
ins
pop
jp
fmul
jne
movs
movs
pop
pusha
pop
push
sbb
test
pop
ror
aas
push
inc
cdq
add
mov
ds
loopne
pushf
aam
xlat
inc
in
fstp
iret
push
ror
inc
test
stc
xchg
mov
jge
dec
and
test
popa
and
add
jle
mov
and
inc
or
movs
and
ins
inc
loopne
add
xor
pop
add
sti
sub
inc
cld
jb
test
mov
mov
xor
add
push
fcmovu
or
sbb
lea
retf
sub
ret
adc
ret
inc
std
cld
add
push
fdivr
int
fidivr
sti
stc
int3
hlt
dec
lock
pcmpeqb
pushf
sbb
aas
int
fimul
jns
int
xchg
jns
test
lods
sbb
movs
pushf
xchg
aas
out
cmp
sbb
jmp
or
into
add
aas
cmp
sub
add
mov
pop
mov
jns
jb
aas
iret
jl
jl
mov
xor
cmp
dec
push
pop
pusha
jae
or
push
aas
inc
sub
mov
xchg
movs
mov
aas
mov
mov
sbb
cmp
js
daa
pop
add
loopne
or
jge
pop
xchg
push
jno
add
imul
add
shl
cli
xor
pop
adc
adc
sub
cmps
mov
inc
add
loope
mov
mov
fisub
movs
or
xchg
pusha
scas
ror
mov
xor
fs
rcl
or
into
pop
cmp
jbe
jbe
js
pop
bnd
adc
je
xor
jne
xlat
fcom
push
ins
shl
inc
ins
pop
loop
jecxz
xchg
(bad)
add
cwde
push
sahf
cmp
inc
sbb
lea
sbb
scas
sbb
ror
and
rcr
ins
clc
cmp
adc
fsubr
sahf
enter
int3
or
sub
xor
push
aam
adc
push
aam
pop
mov
push
cmps
pushf
enter
data16
aaa
push
mov
jmp
mov
mov
adc
dec
sti
ret
cmp
std
data16
xor
add
inc
and
sbb
push
imul
adc
sbb
gs
in
inc
js
push
or
mov
rol
add
sar
xchg
jo
sub
mov
fidivr
mov
mov
clc
inc
jmp
mov
mov
and
adc
imul
add
add
add
add
or
loope
push
loop
movs
jge
pop
sbb
jp
inc
and
sbb
pop
or
add
repz
mov
mov
jge
in
movq
xlat
cwde
add
push
mov
mov
lods
(bad)
fild
arpl
inc
xor
and
test
hlt
push
fdivr
pop
call
inc
icebp
push
pop
rcl
rol
test
rcr
test
enter
loopne
or
and
lock
fcomp
mov
xchg
ja
call
clc
push
mov
bound
push
aaa
sbb
sub
or
inc
ins
inc
add
sub
adc
lahf
enter
das
(bad)
adc
or
call
mov
lock
add
fst
sub
jmp
sbb
sbb
sbb
sbb
sti
push
(bad)
or
cmp
jl
adc
xor
sub
icebp
xor
and
xchg
dec
mov
jne
js
fidiv
movs
jo
inc
or
mov
arpl
and
ret
clc
mov
mov
adc
sub
fst
ror
rcr
or
icebp
mov
cld
addr16
sbb
loope
push
inc
imul
popa
aaa
mov
push
xor
xor
pusha
pop
push
sub
adc
push
loopne
fidiv
xor
jne
les
inc
cmp
jl
sub
and
rcl
rol
nop
add
sbb
fiadd
inc
loopne
popa
sti
(bad)
lds
jne
sbb
adc
(bad)
lea
add
daa
vpmacsdqh
push
ja
dec
dec
push
jbe
ins
push
(bad)
push
popf
push
xchg
mov
mov
jne
(bad)
pop
adc
sti
cs
or
inc
outs
jmp
pop
push
js
mov
xor
arpl
or
jle
inc
push
add
adc
test
ds
inc
imul
sbb
fild
xor
je
jns
push
xor
add
call
dec
push
jne
jne
dec
popf
push
add
sbb
mov
mov
jg
mov
mov
lahf
int3
xor
sbb
xlat
aad
lea
xor
mov
cmps
inc
dec
test
aam
xchg
adc
cli
rcl
adc
ror
jmp
push
dec
scas
pop
les
jno
les
fs
inc
loop
xor
in
jo
or
inc
push
aaa
sbb
push
xchg
clc
mov
out
xor
xor
inc
or
xchg
mov
ss
pop
imul
or
and
ret
mov
in
mov
mov
shl
add
xor
inc
and
push
sub
dec
cmp
push
mov
xchg
add
mov
rol
xchg
daa
ins
push
inc
sbb
mov
nop
mov
or
dec
movs
add
and
fs
push
dec
pop
push
xchg
or
mov
mov
lea
push
pop
cwde
xor
xor
(bad)
stc
mov
push
(bad)
movs
or
repz
dec
xchg
clc
adc
push
cmp
jne
dec
dec
in
and
and
addr16
mov
mov
daa
sub
mov
inc
add
cmp
jnp
jne
pop
add
pop
jmp
fidivr
add
mov
dec
jmp
fiadd
adc
pop
loopne
inc
mov
movs
dec
ss
inc
dec
mov
out
in
cld
ss
aad
cmp
fcmovne
or
(bad)
jl
pop
xor
push
jmp
or
je
in
pop
mov
test
jb
adc
add
adc
je
stos
imul
push
cwde
fst
push
movs
lods
adc
push
call
in
je
push
xchg
push
cmp
or
or
fsubr
aas
jmp
push
add
sub
jne
lods
inc
gs
and
mov
popf
jo
push
xchg
clc
cmp
inc
sbb
int
push
push
push
xlat
cld
push
neg
xlat
shl
add
push
popa
mov
sbb
dec
jmp
add
mov
sub
mov
and
and
cli
xor
jbe
mov
and
addr16
sub
imul
add
mov
xchg
cmp
sar
push
mov
add
jg
add
loop
not
pop
pop
sbb
inc
jo
jo
sahf
mov
leave
inc
mov
add
or
(bad)
adc
lods
sub
inc
add
jae
pushf
add
fst
jo
mov
(bad)
and
or
inc
xchg
and
bound
push
mov
or
mov
cmp
or
test
add
xor
out
inc
jmp
clc
lea
movd
aam
lahf
mov
jb
add
aaa
and
jmp
inc
dec
enter
xchg
ss
mov
mov
jge
jmp
mov
inc
cmp
jb
mov
repnz
test
jo
or
add
inc
mov
out
cmps
push
lock
leave
das
mov
mov
sub
test
test
fs
loope
jp
nop
sub
cs
mov
xor
aas
ins
test
pop
das
rcr
or
dec
sar
ret
and
or
lods
inc
mov
mov
mov
jns
arpl
(bad)
jae
sahf
jo
leavew
(bad)
jmp
outs
sub
mov
mov
std
push
inc
call
dec
pop
add
bnd
push
sbb
cmps
fcmovb
pop
mov
push
stos
mov
push
dec
inc
lock
pop
jl
or
lods
pop
ficomp
cmp
adc
inc
adc
add
inc
jo
sbb
rcr
je
xchg
sahf
fsubr
add
mov
dec
cmp
cmp
adc
enter
cmp
dec
jne
pop
lods
ror
xor
jl
repz
cmp
jl
outs
ret
add
cmp
inc
push
or
das
mov
(bad)
jmp
test
ret
add
xchg
add
scas
cmp
push
jae
clc
sub
xor
je
mov
cmp
imul
xchg
data16
or
or
sub
into
mov
mov
in
(bad)
push
sbb
push
pop
lea
push
movs
aaa
rcr
mov
(bad)
xor
outs
and
pop
inc
cmp
in
or
je
or
(bad)
inc
stos
loop
mov
or
push
ret
and
mov
loope
shl
mov
dec
jo
jp
push
js
jge
xor
push
aad
or
stos
rcl
sub
mov
ret
jbe
pop
xor
int3
das
loope
jmp
pushf
fiadd
loopne
mov
ficomp
xor
sbb
inc
out
pushf
xchg
push
mov
adc
ins
lock
jno
mov
mov
test
inc
mov
imul
xor
ss
xchg
push
lock
nop
mov
mov
and
push
enter
lahf
adc
mov
dec
adc
sbb
mov
fmul
rcr
push
mov
imul
push
icebp
or
push
shr
add
popa
and
inc
in
dec
add
dec
push
dec
xor
adc
xadd
add
sbb
test
jp
mov
inc
add
push
or
clc
inc
cmp
and
push
add
test
inc
xchg
xor
add
or
in
sub
add
or
push
inc
icebp
add
inc
je
cmp
cmp
sbb
or
adc
jle
mov
and
mov
dec
mov
adc
xchg
jg
loop
xor
add
in
or
shr
cmp
je
jb
add
ss
push
mov
shl
and
and
jl
outs
adc
scas
and
ds
xchg
aad
jb
xchg
sbb
loop
xchg
and
sbb
cmps
xor
xor
rcr
je
in
ds
bound
fstp
add
or
xor
cmp
je
push
and
dec
push
or
jle
sbb
push
adc
push
or
push
sub
sub
and
push
push
int
test
mov
call
sbb
call
lea
in
leave
cmp
pop
mov
retf
sbb
xor
add
cmp
shl
dec
test
push
add
add
sar
pusha
and
or
pop
outs
jl
(bad)
movs
mov
xchg
cmp
jle
push
into
add
imul
(bad)
out
add
and
rol
push
add
fadd
ja
hlt
add
add
jmp
not
add
mov
jmp
hlt
add
pop
jl
pop
pop
mov
or
fs
lods
push
outs
pop
fist
cmc
cld
pop
cmp
popf
popa
lods
or
jle
push
shl
cmps
sub
mov
xchg
or
pop
in
call
push
cld
xor
and
jbe
xor
test
lods
fadd
fcomp
mov
retf
aaa
add
loope
iret
rol
js
test
adc
adc
(bad)
fdiv
cmp
enter
adc
pop
and
rcl
hlt
neg
cmp
dec
mov
outs
or
adc
stos
outs
sbb
jle
cmp
jg
jae
push
mov
pop
fstp
sbb
mov
jno
in
aam
ret
mov
jnp
xchg
enter
cmps
and
pop
mov
mov
pop
mov
rcl
fcomi
movs
push
jle
cld
adc
js
rol
push
cmp
and
sub
pop
fidivr
inc
dec
ret
repz
jo
pusha
add
int3
sbb
add
dec
mov
cmp
sub
or
xor
mov
or
inc
mov
test
push
inc
ret
outs
or
ja
inc
xchg
lods
repnz
jo
xchg
mov
sbb
dec
sub
add
fist
mov
test
je
(bad)
cmp
aam
sub
adc
add
pop
mov
push
jmp
cmp
and
out
mov
ja
popa
xchg
je
mov
cmps
cmp
mov
inc
mov
sbb
xor
cld
and
pop
add
pop
pop
add
adc
or
xlat
call
loope
cld
mov
sar
cwde
mov
cmp
test
xchg
pop
add
adc
lock
addr16
in
jne
adc
adc
add
jno
jge
mov
push
and
sbb
dec
shl
push
xor
das
jmp
and
popf
push
sub
sti
fsubr
and
lods
cmp
and
push
popf
push
icebp
mul
sub
inc
cs
sbb
dec
or
in
mov
mov
loop
inc
iret
int
push
sbb
fs
and
repnz
out
loope
inc
sbb
js
stos
xor
adc
inc
mov
les
and
push
sub
cmp
xchg
add
or
xor
or
rcl
push
clc
das
mov
cli
sar
push
cmp
jae
call
leave
adc
js
cmp
jl
cmp
jg
or
loope
add
sar
push
cmp
lea
test
jne
add
xchg
or
or
aam
(bad)
call
popf
cmove
mov
retf
adc
mov
or
movs
mov
sbb
lods
add
and
cmps
fidivr
stos
ins
or
(bad)
mov
fcom
cmp
jmp
sar
dec
pop
out
pop
adc
or
adc
adc
rol
scas
push
out
retf
stc
mov
jne
xor
mov
add
pop
fdiv
jne
adc
fisttp
xchg
(bad)
cs
push
aad
je
das
enter
adc
add
loopne
or
mov
sbb
add
add
je
or
cmp
in
adc
pop
cmp
jne
jl
lock
int3
int
(bad)
pop
mov
int3
inc
test
int3
xchg
ss
xchg
cmp
sub
add
scas
sahf
push
sar
fadd
mov
in
test
loopne
cmp
or
pusha
sub
jle
mov
or
(bad)
dec
hlt
adc
add
psubsb
jb
or
ja
and
icebp
push
rol
pop
fnstenv
cmp
fst
or
ja
mov
fmul
or
ret
and
and
adc
and
dec
ds
sar
jb
sbb
or
cmps
push
inc
scas
gs
pop
aaa
xor
aam
pop
pushf
and
mov
adc
pop
scas
or
mov
add
(bad)
push
jns
inc
bound
and
sbb
gs
adc
xchg
stos
add
es
adc
call
stc
jno
or
call
nop
or
stos
loope
or
fcom
jns
pusha
mov
push
dec
pop
mov
(bad)
mov
xlat
je
cmp
pusha
je
and
cmp
jb
test
fcom
(bad)
in
test
push
inc
push
lock
xor
mov
adc
push
sbb
je
cmp
jne
cmp
cmp
sub
pop
adc
daa
clc
push
push
or
sbb
movzx
push
out
sbb
push
call
pop
shl
das
xor
(bad)
adc
add
lods
pop
pop
pop
icebp
cld
stc
repnz
jge
cmp
ret
pop
rol
xchg
mov
sbb
retf
rol
push
mov
pop
loopne
add
imul
call
mov
loope
mov
mov
das
bound
popf
adc
int
test
nop
push
les
push
clc
and
jge
sub
push
pushfw
sbb
or
daa
add
xor
mov
push
xor
xor
hlt
mov
enter
add
adc
and
mov
out
ss
enter
lock
add
sub
cmp
es
jecxz
inc
sub
xor
dec
ror
pop
std
dec
loopne
mov
dec
push
or
retf
jne
outs
xor
dec
cmp
jge
xor
add
and
or
lea
repz
xor
lock
test
sbb
sbb
mov
icebp
and
(bad)
sbb
cli
jg
rol
push
xor
pop
div
call
jb
lea
cmp
cld
cwde
adc
sbb
int3
int3
cwde
ja
jge
push
(bad)
xor
sbb
push
loopne
adc
hlt
je
pushf
loop
dec
adc
jl
loopne
xchg
es
and
mov
mov
in
fidiv
cmps
stos
jo
sub
mov
jno
jno
and
adc
jle
jns
cld
adc
push
jae
cmp
je
mov
jp
sbb
mov
push
aas
pop
xor
mov
jne
or
pop
push
movzx
mov
xor
push
cmc
push
hlt
adc
out
ret
lea
gs
mov
int
iret
popf
fimul
adc
retf
stc
lods
adc
push
lock
das
lea
icebp
push
sbb
cmps
push
pop
mov
jo
mov
mov
or
mov
sbb
pop
adc
or
push
xor
adc
cmp
pop
inc
mov
inc
jecxz
repnz
inc
push
xchg
test
dec
push
add
xor
and
leave
add
add
jne
and
mov
lods
lahf
or
shl
add
or
cmp
inc
or
lock
and
push
or
imul
push
adc
inc
push
daa
pusha
and
retf
inc
fcom
(bad)
and
push
mov
adc
mov
jnp
loopne
add
fcomp
adc
movs
dec
mov
sti
cmp
loope
and
adc
fcomp
mov
push
add
add
add
bound
jl
pushf
or
dec
xchg
inc
nop
shl
mov
adc
sub
adc
cmp
movs
pop
or
in
(bad)
out
mov
cmp
je
movzx
push
leave
jmp
sahf
push
adc
mov
cmp
jle
jl
imul
mov
sahf
shl
adc
fisttp
jbe
dec
faddp
xor
cmp
mov
pop
push
push
inc
outs
rcr
jbe
push
in
gs
mov
pop
add
(bad)
pusha
imul
jo
push
mov
push
lods
std
xor
(bad)
out
mov
mov
sbb
mov
lea
push
in
call
adc
shl
mov
rcr
loopne
retf
mov
(bad)
or
or
sbb
stos
mov
fld
int3
es
or
jle
adc
in
or
mov
clc
arpl
and
mov
push
fsubp
jge
push
sbb
xor
jo
lea
loopne
loope
ror
mov
jns
mov
mov
xchg
adc
lock
rcr
rcr
enter
int3
imul
enter
push
jecxz
mov
mov
outs
sbb
push
in
outs
jmp
xchg
fsubr
inc
es
cmp
pop
mov
fucomi
fld
imul
dec
adc
push
or
mul
jmp
cmps
sbb
sbb
mov
movs
dec
cmps
jl
jecxz
mov
xor
adc
and
dec
fdiv
repz
in
add
cmp
add
jp
popa
adc
in
mov
mov
xchg
pushf
xchg
push
(bad)
sub
push
in
or
push
fwait
adc
add
and
in
pop
mov
call
push
dec
std
add
into
adc
add
jle
add
rcl
scas
and
add
or
pop
ror
clc
shl
enter
pushf
dec
in
add
test
cs
mov
xor
or
mov
push
add
imul
rol
xchg
lahf
out
sub
push
(bad)
dec
lods
in
push
add
test
fsub
xchg
fmul
aam
cmp
ja
or
daa
dec
loopne
add
rcl
add
js
sub
pushf
cmps
cmp
fcom
sbb
sar
sub
push
mov
rol
adc
cli
inc
shr
aaa
push
push
mov
dec
mov
sbb
inc
lds
inc
jo
movs
xor
mov
jmp
mov
sub
mov
mov
retf
push
and
fs
add
(bad)
ret
mov
push
dec
lods
push
jecxz
add
shr
je
jge
aam
sbb
push
dec
adc
fsubp
repz
pop
xor
push
dec
and
push
lahf
iret
div
jg
outs
inc
or
jbe
jle
lock
out
xor
jg
jg
jg
jo
mov
cld
add
jne
pop
cmp
into
dec
in
add
pop
ffreep
sub
adc
loope
je
popf
add
sub
or
mov
xor
dec
test
das
mov
inc
inc
push
neg
or
inc
ret
mov
retf
jnp
fmul
pop
shr
dec
push
sti
sbb
rol
jmp
adc
test
sub
pop
aaa
xchg
mov
jmp
mov
push
stc
push
dec
daa
jo
fcomp
inc
sub
xchg
mov
jns
push
add
sub
or
in
ret
int3
inc
cs
add
std
and
loop
mov
push
lea
loopne
test
and
mov
jno
push
adc
cs
mov
out
dec
ins
and
lock
xchg
add
xor
call
jnp
es
fcmovb
adc
iret
xor
je
add
inc
pusha
inc
popa
test
(bad)
dec
adc
test
pop
popa
mov
jge
mov
adc
(bad)
lea
dec
xchg
or
and
adc
inc
std
and
add
sbb
loop
jg
push
fcom
jl
cmc
nop
into
sub
push
add
push
cmp
mov
or
(bad)
and
popa
in
mov
add
mov
mov
xchg
and
adc
inc
rcl
push
cli
sar
and
ins
or
mov
sub
shl
or
add
lock
rcl
xchg
mov
cli
icebp
outs
cmps
call
jle
les
mov
jg
inc
push
pop
js
fstp
mov
cmp
jmp
ins
repnz
jmp
(bad)
fidivr
inc
xor
sbb
adc
mov
fst
xchg
les
push
ret
xchg
retf
mov
sbb
mov
push
mov
loopne
or
popf
adc
rcl
cmp
mov
sub
cli
loope
into
dec
js
mov
scas
sub
and
add
mov
jnp
inc
pop
pusha
jmp
push
out
sar
xchg
add
jecxz
inc
inc
movs
mov
lock
(bad)
jae
pop
fnstcw
out
jb
xor
ror
rol
je
push
push
ror
inc
sub
and
test
inc
sbb
clc
xor
(bad)
sar
popa
gs
mov
mov
jne
shl
dec
xlat
jecxz
cmp
movs
imul
inc
fistp
aam
jge
out
add
fwait
and
and
rcr
jae
in
sbb
push
ins
and
sub
lahf
and
mov
fdiv
mov
jmp
cmp
or
jns
ins
adc
add
out
loopne
retf
and
cmps
loopne
loopne
pop
jmp
dec
sub
jmp
sub
or
cmp
or
fwait
cmp
and
add
ret
test
sbb
sub
das
movs
add
and
dec
lds
dec
dec
push
out
ror
mov
cmp
sbb
xor
pop
mov
push
nop
push
and
and
adc
or
push
and
and
fsubr
add
add
shl
cmp
and
push
cmp
mov
sbb
adc
lock
push
xor
shr
adc
sbb
shl
add
xchg
je
mov
dec
mov
mov
push
mov
mov
into
mov
mov
sbb
add
or
bswap
push
sbb
or
test
lds
cs
pop
pop
data16
xlat
fsubr
add
test
je
and
clc
je
das
stos
imul
push
sub
cmps
mov
inc
sbb
add
(bad)
loopne
and
cmp
mov
fwait
pop
or
inc
jne
xchg
mov
push
xchg
adc
inc
or
sub
add
fidivr
pop
push
into
sbb
clc
dec
xchg
dec
sbb
xor
test
jmp
jns
stc
and
jbe
imul
add
xchg
lods
fwait
sub
push
mov
cmp
out
pop
js
or
push
cwde
fisttp
je
dec
dec
ror
or
nop
dec
mov
fdiv
push
sahf
pop
push
sbb
xor
push
pushf
lea
xor
pushf
fwait
lods
mov
xchg
xchg
inc
stos
or
mov
inc
and
xor
lock
push
sti
add
int
push
cmp
xchg
data16
aam
push
fucomi
retf
sbb
xchg
ret
mov
sub
repnz
fnstsw
mov
jmp
jmp
and
arpl
xchg
mov
mov
and
pusha
pop
or
add
sahf
pop
or
cmp
or
ror
cdq
add
js
add
sub
shl
out
fdivp
inc
les
adc
cmp
add
pop
pop
push
push
mov
or
je
or
push
cld
ror
and
mov
xor
xor
jns
push
jg
add
add
psrld
adc
aad
push
xchg
fcom
inc
cld
pop
jl
movs
sti
mov
xor
inc
mov
cwde
sub
(bad)
mov
fsubr
(bad)
ins
inc
or
aas
shl
xor
inc
into
mov
mov
push
aaa
xor
mov
mov
jne
js
push
inc
jmp
adc
jne
or
and
ins
lock
push
mov
mov
xor
sti
mov
add
icebp
popa
mov
inc
fs
iret
int
or
imul
and
or
jl
in
dec
fdivrp
jns
fcom
sar
cld
sub
jb
sbb
js
sbb
fsubr
xchg
out
inc
loope
dec
mov
in
in
data16
popf
enter
repz
movs
shr
pop
mov
dec
add
hlt
(bad)
(bad)
mov
dec
cld
xor
adc
call
cld
adc
pop
in
adc
shl
cwde
loope
lea
mov
test
jmp
pop
mov
mov
add
push
repz
cdq
push
or
cmps
dec
add
add
movs
cmps
xchg
clc
and
mov
mov
xor
add
mov
add
push
push
dec
sub
push
adc
push
pop
cmovge
add
adc
repnz
mov
rcl
pop
ret
lea
jbe
and
pop
mov
in
mov
add
xchg
or
cmp
add
xor
outs
xchg
lock
gs
mov
aaa
mov
xor
sub
add
cmc
(bad)
sar
cmp
retf
ins
jl
add
inc
retf
inc
addr16
sub
xchg
jmp
sub
add
inc
mov
int
mov
popa
add
inc
jmp
fild
or
add
dec
fnstsw
clc
sar
out
add
lea
pusha
cmps
xchg
(bad)
ror
sbb
push
addr16
or
cmp
jl
fnstsw
push
dec
mov
xchg
add
pusha
imul
pushf
adc
(bad)
dec
sbb
jmp
jge
es
or
pop
cmp
cmps
or
xchg
push
jne
sar
out
pop
add
mov
inc
mov
push
jecxz
mov
mov
loopne
(bad)
les
ret
fild
jge
mov
cmp
(bad)
(bad)
jmp
push
jmp
xchg
sti
jne
sbb
pop
inc
pop
jmp
push
dec
pop
add
popa
jne
pop
push
pcmpeqw
mov
(bad)
mov
or
popf
test
pop
xor
in
sbb
ss
pusha
mov
mov
cmp
add
call
cmps
xor
ret
sar
or
sbb
dec
or
mov
pop
or
cli
inc
adc
and
shr
mov
and
xchg
inc
dec
push
pop
test
adc
cmc
and
jno
fcomp
outs
push
xor
cmp
jl
add
and
ins
cmp
sub
add
lock
fdiv
rcl
jae
jbe
add
or
push
fimul
cmps
xor
adc
jnp
cld
dec
add
mov
add
sar
adc
jge
xchg
mov
outs
fmul
mov
xchg
push
mov
jmp
and
jle
in
test
je
jl
cmp
ins
sar
in
cmp
cs
push
loopne
push
add
or
dec
mov
fdivr
popf
push
push
add
push
sbb
cmp
idiv
je
sub
sub
cmp
push
test
movs
cmp
sbb
addr16
jmp
stos
iret
or
mov
scas
inc
push
jl
cmps
jge
aad
mov
clc
push
push
cmp
ja
sar
xchg
or
mov
push
stc
or
mov
push
sbb
cmp
fidivr
jmp
cmp
mov
add
inc
outs
cmp
(bad)
shl
(bad)
adc
dec
mov
xor
sub
pop
cmp
ins
out
inc
pop
cmp
test
xchg
cmp
jne
mov
addr16
js
sub
or
(bad)
test
sbb
popa
out
xchg
xchg
mov
pop
mov
dec
or
popf
out
add
inc
pushf
(bad)
or
add
cmp
mov
and
fstp
or
add
sub
inc
inc
dec
loope
adc
mov
jle
add
jb
xchg
xchg
std
mov
add
adc
pop
inc
pop
xor
and
test
inc
pop
jle
mov
test
je
ins
jne
dec
sub
xchg
pop
shl
(bad)
mov
and
loopne
imul
test
nop
retf
sbb
or
push
dec
pop
cmovl
dec
ret
push
xor
inc
or
(bad)
mov
pop
ins
stos
pop
dec
outs
mov
and
fmul
pop
es
xchg
adc
dec
xchg
out
pop
les
stos
pop
push
fs
shl
clc
mov
iret
mov
ja
mov
sti
xor
lea
mov
repz
and
push
bnd
je
retf
mov
loopne
add
loope
jb
dec
pop
add
ins
rol
fcmovb
fsubr
jmp
loopne
mov
rol
lea
nop
call
and
je
push
ins
lock
add
es
jp
or
push
shr
jmp
ret
jmp
fst
mov
shr
lods
pop
dec
in
icebp
xor
xor
xchg
sar
cmp
or
cmp
dec
add
mov
pop
ret
dec
popf
clc
jmp
loope
push
adc
(bad)
pushf
jb
xchg
xchg
add
div
call
adc
xor
inc
mov
not
retf
inc
or
mov
cwde
stos
test
push
xor
xchg
xchg
fcomp
fsub
dec
ret
inc
xor
pop
ret
dec
inc
sub
dec
repnz
add
lea
push
inc
into
sbb
pop
inc
pop
mov
adc
pop
pusha
pop
js
lock
jbe
push
push
aas
pop
call
push
push
sub
test
xor
and
js
fsub
imul
mov
pop
mov
outs
or
sbb
mov
dec
mov
mov
mov
and
mov
jmp
and
xlat
inc
gs
mov
xor
fdiv
not
dec
adc
sbb
lds
mov
shr
ds
dec
inc
add
pushf
outs
fisub
outs
and
dec
hlt
push
and
mov
lods
jnp
or
pop
rcr
retf
mov
inc
js
push
lahf
push
scas
out
rol
stc
push
lock
or
xor
shl
movs
cmp
add
outs
push
inc
imul
push
or
mov
jno
add
adc
xor
ret
mov
add
pop
movzx
xor
pmullw
(bad)
rol
add
sbb
test
cld
ret
jnp
repz
push
jmp
sub
es
cmp
or
dec
stos
iret
test
add
sub
shl
int
pop
sbb
sbb
out
and
jl
jb
push
dec
xor
adc
mov
push
sysenter
sbb
dec
push
sub
shl
sub
inc
mov
inc
sbb
dec
std
xchg
retf
xor
sub
sbb
cmp
mov
inc
jge
or
shufps
inc
inc
mov
push
sbb
sub
lds
lock
and
inc
fisttp
jne
ficomp
ret
sub
mov
imul
ins
inc
ret
dec
jne
push
push
pop
add
pop
jbe
or
clc
inc
fs
pop
jns
xor
aaa
outs
adc
fiadd
into
jg
sbb
mov
ret
loopne
dec
fld
(bad)
test
sub
and
mov
add
add
scas
jnp
jp
(bad)
dec
jne
lea
mov
stc
cmp
(bad)
fnstenv
mov
mov
inc
push
test
cwde
dec
jb
cmp
or
(bad)
lock
lods
rcr
(bad)
fistp
ss
mov
xor
adc
xor
or
and
js
and
jo
retf
jmp
inc
push
add
inc
mov
mov
mov
sbb
pop
xchg
aas
push
jae
push
push
imul
adc
sbb
mov
call
das
and
pop
cmp
xor
cmp
mov
adc
cmp
jne
cdq
pusha
add
or
sub
add
mov
sbb
pop
aaa
mov
call
sbb
push
imul
fstp
(bad)
shl
mov
or
and
push
fsub
adc
dec
push
clc
mov
pop
test
jmp
add
push
mov
repnz
pop
inc
mov
int
jb
push
into
sub
xor
pop
out
push
(bad)
sub
mov
inc
fbstp
sbb
movs
sbb
in
and
mov
addr16
mov
add
jns
cmps
cs
sbb
xor
out
test
lods
bswap
add
add
inc
aas
and
fist
add
lahf
xor
add
jbe
jno
mov
arpl
jo
std
arpl
cdq
shl
jne
xor
adc
mov
rcr
jle
sbb
jg
outs
pop
pop
pop
imul
cmp
pop
or
or
scas
mov
add
mov
retf
adc
add
icebp
mov
push
add
fimul
movs
sar
je
mov
cmps
das
lods
adc
push
movs
idiv
(bad)
jp
push
sbb
add
movs
ret
cwde
push
cmc
aas
mov
jae
push
xor
sbb
les
sub
inc
push
jmp
inc
pop
enter
addr16
repz
hlt
cmp
and
pop
add
jmp
and
and
daa
mov
push
adc
sbb
or
mov
call
aas
sub
sub
das
pop
pop
jg
sub
add
and
nop
int3
clc
lods
js
xchg
sahf
sub
adc
sbb
test
mov
or
xchg
retf
in
shl
fdivr
cmp
mov
pushf
stos
add
sub
dec
sahf
xchg
adc
rcl
rcr
push
inc
jge
inc
xor
pusha
rol
push
mov
pop
fidiv
shr
in
push
mov
inc
pop
add
dec
jo
cmp
adc
and
cdq
lea
sub
idiv
pop
ja
mov
mov
push
xor
push
mov
in
mov
or
mov
inc
mov
ins
xchg
push
js
pop
add
daa
fiadd
sar
mov
cmp
retf
mov
push
je
or
je
xor
sub
je
sbb
add
or
add
sbb
sbb
push
lock
push
xor
or
mov
adc
jl
(bad)
in
mov
push
add
sub
js
mov
or
xor
movs
mov
mov
mov
adc
movs
add
test
hlt
stc
clc
add
je
or
inc
ins
je
ja
iret
ss
cwde
or
push
cld
ds
jne
pusha
sub
scas
and
adc
and
outs
ss
js
add
xor
rol
inc
xor
movs
cmp
rol
stos
in
fidiv
or
outs
and
jne
js
pop
push
movs
loope
or
sbb
clc
test
call
dec
outs
xor
setae
fadd
(bad)
das
add
iret
sbb
sbb
jle
inc
je
pop
scas
or
add
call
inc
and
hlt
lea
pop
test
jge
xchg
iret
rol
arpl
sbb
ror
cmp
or
add
mov
xchg
dec
inc
add
dec
and
add
xchg
test
or
push
test
in
mov
push
mov
pushf
mov
loopne
adc
out
push
aad
push
and
ins
cmp
xlat
jp
jl
and
retf
bswap
cmc
sbb
or
add
and
mov
adc
cmp
test
pushf
enter
pop
loop
sub
call
xor
or
mov
scas
push
push
dec
mov
jmp
mov
and
lea
and
cdq
mov
jl
call
adc
sbb
addr16
sbb
je
pop
adc
outs
jo
add
pop
loopne
mov
inc
add
je
or
sub
fadd
test
mov
arpl
ins
push
enter
or
(bad)
push
mov
gs
xchg
mov
test
mov
in
sbb
imul
daa
sub
js
mov
sbb
sub
pop
mov
push
pop
cmc
push
xor
xchg
mov
xchg
out
xchg
jbe
add
xchg
hlt
jmp
cmp
cmp
jmp
jle
imul
and
pop
push
push
lds
cmps
cmp
fst
add
jo
ins
lock
nop
mov
pop
je
test
add
mov
js
pop
xor
inc
pop
lods
shl
clc
ror
or
repnz
dec
lods
push
add
and
adc
sbb
adc
add
and
push
cmp
call
xchg
mov
loopne
sub
mov
in
jp
mov
add
sbb
mov
adc
push
pop
data16
adc
sub
into
xor
loop
xchg
bound
mov
sbb
adc
xor
test
jle
jmp
into
mov
jmp
mov
add
test
push
sbb
jae
neg
js
outs
dec
shl
mov
fisub
mov
xchg
cmp
sbb
jge
jl
cmp
mov
mov
fwait
mov
test
sbb
out
push
inc
adc
jo
and
rcl
xchg
test
push
aas
lds
mov
repnz
sahf
add
jmp
sub
fadd
inc
cmp
adc
push
pop
(bad)
inc
jp
cmp
fdivr
lock
dec
les
jmp
in
dec
push
call
or
es
data16
sti
ins
add
repnz
sar
int
dec
retf
mov
or
pop
push
sub
jle
das
pop
add
sub
sub
push
nop
xchg
scas
retf
jno
push
stos
mov
mov
test
or
pusha
inc
clc
aas
out
test
jne
jmp
and
not
(bad)
and
and
inc
fst
(bad)
addr16
inc
in
or
lea
call
icebp
lods
xchg
test
or
adc
push
cmp
pusha
mov
cmp
imul
in
dec
sbb
imul
add
fadd
dec
stc
xchg
push
or
xchg
and
mov
(bad)
test
mov
inc
clc
jg
jmp
adc
push
pop
std
es
and
push
mov
leave
or
or
jl
mov
sub
(bad)
std
push
pushf
lods
je
mov
mov
mov
mov
sbb
or
or
xchg
mov
daa
addr16
jae
mov
add
call
xor
clc
iret
jbe
call
xchg
push
sbb
mov
out
ss
ss
test
and
add
or
ins
jmp
(bad)
imul
cli
imul
or
cmp
or
(bad)
cli
add
xor
f2xm1
or
ror
mov
add
lock
mov
adc
div
push
rep
mov
imul
mov
dec
jmp
pop
dec
movs
(bad)
bound
lods
and
test
or
mov
fiadd
loop
inc
inc
sub
push
outs
sbb
mov
imul
int
rcr
rol
cs
test
mov
or
mov
mov
push
(bad)
(bad)
imul
sub
cmc
xrelease
mov
cvtps2pi
adc
sub
pop
enter
mov
daa
icebp
std
adc
dec
sub
cmp
mov
inc
pusha
xor
jae
and
les
sbb
xor
xchg
cs
test
or
push
push
cmp
test
jl
push
push
ja
das
test
cmp
mov
dec
mov
shl
mov
sti
and
rcr
cli
jle
add
pop
dec
arpl
lods
inc
or
add
mov
mov
popa
push
jmp
push
push
inc
cmps
ins
ror
xchg
sbb
push
push
bound
cmp
mov
push
fsubp
in
push
mov
or
clc
call
loopne
dec
and
jne
mov
push
push
aas
add
jns
sbb
mov
shl
mov
push
mov
pop
or
pop
cmps
jp
fadd
mov
lea
inc
add
inc
push
movs
movs
dec
sbb
in
push
in
inc
inc
data16
inc
push
dec
pop
cmp
inc
xor
mov
repnz
mov
jmp
sub
daa
neg
jbe
and
in
pop
sbb
cmp
sbb
in
xor
mov
jmp
xor
arpl
lods
ret
pop
or
mov
add
je
xor
mov
daa
jmp
sub
adc
push
dec
pop
loopne
rcl
test
or
mov
jo
mov
add
aad
jmp
mov
sub
int3
ficomp
enter
mov
cmps
jno
mov
ja
sti
xor
ja
daa
lods
je
movs
xchg
adc
jge
lahf
hlt
mov
mov
xor
mov
ret
push
push
mov
nop
cdq
pandn
sub
push
fs
pop
and
lock
cmp
test
imul
adc
inc
scas
cmps
loope
inc
jnp
add
xlat
jae
movs
js
aaa
mov
rol
mov
xchg
pop
ror
rcl
pop
mov
or
mov
and
adc
jae
xor
push
or
test
inc
push
jne
cmc
popa
fsubr
push
shl
add
or
and
scas
add
cli
dec
test
sub
inc
jle
and
or
stc
add
inc
ja
jl
mov
les
cmp
adc
nop
gs
sub
pop
sub
or
pop
cmp
lea
ds
xchg
xchg
xchg
push
push
mov
cmp
or
mov
adc
inc
mov
shl
add
push
sbb
iret
adc
xor
retf
nop
xchg
add
popf
adc
scas
or
add
jg
pushf
add
in
repz
pop
movzx
push
(bad)
push
fmul
clc
pop
mov
sti
in
bound
fcomp
push
sub
mov
xor
or
pop
fadd
or
js
and
enter
sub
nop
fistp
adc
pop
jne
push
add
add
add
mov
cdq
xor
push
loopne
push
push
fld
jg
sub
pop
cmp
ja
pop
jbe
lea
adc
sbb
xor
add
leavew
(bad)
sbb
out
add
mov
push
clc
jbe
imul
dec
add
push
loop
push
fldpi
popa
mov
scas
pop
mov
push
mov
pop
jg
subps
dec
mov
sbb
cmp
ret
and
or
sub
loope
mov
push
clc
xchg
jp
jne
and
add
int
clc
dec
jno
pop
cmp
sbb
mov
ja
sub
mov
pop
push
sbb
or
mov
mov
or
and
inc
popa
retf
test
push
imul
and
cmps
enter
add
inc
lea
stos
add
jmp
mov
outs
adc
cmp
test
jl
or
aad
nop
aaa
or
and
outs
rcl
inc
pop
and
test
push
inc
xchg
hlt
mov
lahf
cli
adc
and
enter
push
add
push
sub
inc
push
add
inc
and
adc
pop
xchg
out
mov
xchg
jbe
loopne
ficom
add
not
cmp
and
add
pop
pop
and
mov
cmp
pop
and
or
mov
inc
int
ins
idiv
jl
or
mov
add
add
xchg
and
retf
mov
pushf
adc
mov
adc
push
hlt
mov
mov
or
ror
mov
sti
mov
push
and
(bad)
rcl
push
pop
cli
sbb
and
cld
jmp
add
int
dec
inc
dec
(bad)
mov
xor
inc
addr16
inc
jmp
jo
jg
ja
cmp
rcl
sub
mov
and
xor
dec
ss
push
cmps
ret
aaa
inc
out
dec
mov
mov
push
mov
popa
ins
std
xor
jmp
pop
ret
xchg
xor
add
inc
js
sbb
(bad)
jne
mov
push
jle
mov
dec
jle
and
cmp
std
jne
mov
jmp
sub
mov
outs
add
(bad)
div
xor
push
add
push
add
adc
dec
push
push
div
jp
inc
cmp
pop
test
iret
les
jne
mov
or
xor
into
std
mov
in
push
jmp
shl
shl
and
push
and
sub
inc
lea
push
aas
jg
shr
inc
mov
pop
jmp
jbe
rol
jne
mov
inc
movs
in
push
test
sbb
mov
stc
bound
lea
fdivr
imul
jp
mov
enter
mov
sub
sub
shl
mul
mov
cmp
aas
loopne
jmp
mov
into
sbb
jge
add
add
jmp
inc
or
dec
and
cdq
ret
fs
or
mov
inc
pop
adc
ss
sub
dec
fiadd
jno
xor
jle
sbb
mov
jle
xor
inc
push
mov
push
mov
jne
inc
scas
stos
mov
fnstenv
xor
js
add
push
jnp
cmps
cmp
iret
(bad)
loope
add
push
mov
mov
or
inc
or
int
jmp
in
xor
push
and
xchg
or
sub
test
xchg
cli
test
pusha
mov
add
mov
pop
cmps
add
test
inc
adc
cmp
push
popa
inc
push
xlat
shr
cmp
popf
xchg
add
fld
and
ror
ret
inc
push
call
xor
lock
add
out
or
imul
icebp
std
sub
inc
jmp
xor
dec
sbb
mov
add
and
sbb
cmp
mov
jmp
loopne
or
fwait
jno
cdq
gs
inc
adc
xor
push
cmp
sti
imul
push
sbb
rcr
pushf
int3
push
add
pop
popa
pushf
int3
and
and
jno
sub
mov
sbb
sbb
add
lea
add
jnp
aaa
mov
aaa
cmp
aam
cld
jo
pop
ret
adc
mov
adc
movs
and
add
sub
xchg
loopne
arpl
xchg
mov
adc
push
or
(bad)
loop
inc
push
mov
outs
cmp
push
jmp
sbb
pop
adc
imul
cdq
inc
mov
inc
mov
imul
outs
cmp
lahf
das
adc
movs
rol
ss
mov
xor
xor
sbb
cwde
daa
sbb
jle
imul
lea
into
inc
push
in
fadd
or
mov
jp
imul
cld
pop
inc
add
dec
test
das
add
(bad)
jns
sub
stos
(bad)
aad
imul
add
cmp
je
cmp
out
(bad)
stc
or
cmp
push
sbb
xchg
es
or
lock
jb
add
mov
jo
or
lahf
xor
dec
xor
push
pop
xor
cmp
ins
shr
mov
adc
inc
sbb
rcr
pop
mov
or
adc
dec
fs
int
adc
lock
add
loope
dec
mov
stos
jge
push
pop
pop
jecxz
iret
test
test
push
or
add
and
add
pushf
mov
and
adc
push
je
inc
js
add
clc
stos
mov
xor
dec
xchg
pop
cmp
adc
fs
jge
sub
push
mov
push
or
add
add
sbb
inc
(bad)
retf
ja
or
test
popa
dec
loope
clc
mov
mov
test
or
clc
mov
or
xor
cmps
xor
stos
sti
std
lea
push
mov
or
inc
hlt
cmp
push
or
inc
or
stos
xchg
add
pop
sbb
or
adc
pop
call
mov
adc
jg
fsubrp
shr
fmulp
mov
daa
shr
rcr
shr
shl
iret
jle
fmul
leave
jne
not
inc
mul
add
jb
cmp
or
push
jbe
dec
cwde
pop
daa
push
dec
cmp
adc
or
dec
dec
xor
nop
lock
jecxz
repnz
imul
mov
cld
fmul
jg
aas
pushf
cmp
add
jg
test
push
mov
push
or
push
es
cmps
pop
push
punpckldq
call
stc
xchg
xor
and
jg
inc
pop
mov
inc
jmp
cmp
fcomp
fimul
adc
jne
sub
jnp
mov
mov
fimul
jns
jg
mov
adc
mov
cmp
je
cmp
and
push
and
adc
adc
repz
pop
xor
fmul
ror
mov
sbb
xor
aaa
pop
sub
fs
jmp
and
xchg
adc
lahf
cmp
push
jne
sub
jmp
cmp
mov
add
add
and
push
xchg
and
and
sub
cwde
or
mov
push
mov
std
mov
sbb
mov
mov
(bad)
shl
(bad)
xor
mov
mov
hlt
jmp
sbb
daa
test
jg
add
add
or
add
or
test
sbb
inc
or
popa
dec
jmp
retf
mov
push
rol
mov
sub
push
add
test
lods
pop
cs
test
jb
call
rcl
push
or
loop
popf
xor
pop
js
mov
dec
popa
add
dec
jle
and
(bad)
mov
test
lock
or
les
adc
aad
adc
stc
test
mov
test
dec
mov
lea
mov
test
pop
aam
ss
jle
loopne
sar
dec
sti
xor
inc
jae
ror
inc
loopne
outs
test
cs
pop
dec
dec
xchg
sub
mov
inc
cld
xor
pop
cmp
stc
dec
ja
cs
mov
in
(bad)
lock
adc
mov
mov
dec
xor
adc
hlt
and
dec
hlt
jg
addr16
pop
sub
adc
add
add
fidiv
xchg
pop
mov
clc
inc
enter
xchg
mov
mov
mov
and
retf
movs
call
add
call
adc
inc
add
pop
pop
mov
push
or
inc
mov
ins
and
cmp
lock
or
outs
dec
cmp
inc
sub
xchg
pop
inc
xlat
adc
and
inc
cld
ss
cmp
ret
add
jno
mov
xor
fild
inc
xchg
cmps
shl
cmp
push
cmp
movs
test
retf
sbb
sbb
dec
add
outs
mov
dec
jmp
mov
mov
ror
and
xor
inc
xor
sahf
pop
inc
mov
push
mov
mul
lea
add
(bad)
adc
call
xchg
inc
repz
inc
dec
cmp
jne
xor
add
stc
mov
scas
jecxz
loopne
out
sti
lock
dec
xchg
add
mov
retf
push
and
test
ins
cmp
sbb
jg
out
dec
push
xlat
mov
xor
fsub
stos
lods
movs
lock
je
fmulp
retf
pop
ds
std
fdivr
mov
fcmove
mov
je
aam
jmp
mov
enter
sub
jno
push
cmp
adc
mov
not
add
push
inc
jecxz
xor
outs
lds
cmc
pop
push
loopne
mov
xchg
std
dec
sub
add
add
out
push
push
dec
in
jecxz
pop
and
add
je
sub
pop
pusha
add
jl
jo
gs
dec
jle
fisubr
gs
ret
dec
or
adc
cmc
fisttp
adc
jo
std
lock
out
mov
dec
cld
push
xchg
push
les
hlt
test
popa
nop
std
loopne
cwde
jg
rcr
push
push
addr16
add
push
and
cmp
fadd
std
call
call
ror
repnz
call
push
cmp
adc
js
mov
sar
push
loop
sti
pop
sub
cmp
das
lock
call
(bad)
loopne
cmp
jns
std
lock
loopne
nop
ror
loope
push
stos
rol
dec
push
shr
sbb
test
and
push
mov
or
repz
(bad)
cmp
rcl
ret
xor
aad
dec
add
pop
in
mov
std
or
nop
sub
std
inc
ins
or
mov
(bad)
fnstsw
mov
test
imul
sbb
dec
sub
add
xlat
fdivr
daa
pop
in
cwde
std
test
inc
pop
cwde
sbb
repz
das
xchg
aad
sar
cmp
xor
(bad)
or
add
inc
jmp
jb
sbb
add
add
xor
sub
add
inc
fdivp
jmp
dec
sbb
push
cmc
aad
cmps
movntq
movs
out
add
lea
adc
or
lock
add
sub
or
add
adc
int3
cmps
idiv
sub
stc
sub
mov
fisttp
sbb
retf
mov
jp
(bad)
(bad)
js
adc
dec
or
adc
and
shr
in
xor
mov
aam
xchg
mov
xor
adc
les
jne
add
or
jno
adc
stos
mov
push
in
rol
mov
jbe
and
mov
jne
cmp
hlt
push
mov
dec
ficom
js
cmps
jmp
inc
jl
popa
rcr
pop
cmp
dec
push
add
je
sbb
push
or
add
std
daa
pop
mov
rcl
mov
loopne
loop
cmps
xchg
mov
xchg
inc
xchg
js
or
xchg
adc
hlt
or
adc
mov
loope
fisttp
int3
add
push
inc
cld
inc
mov
loop
sub
call
adc
or
scas
imul
inc
push
jb
lods
cmp
push
inc
cmp
adc
or
cmp
in
std
push
jbe
dec
sub
sbb
adc
and
retf
cmc
or
and
and
fxch
pop
inc
jbe
(bad)
mov
or
fsub
push
adc
test
adc
or
inc
loope
cld
ror
push
jle
and
mov
xchg
retf
push
fld
and
xchg
push
js
sub
push
or
icebp
rcr
int
pop
in
mov
scas
xor
je
push
je
mov
jmp
push
dec
inc
fdiv
mov
popa
xor
fld
push
(bad)
out
inc
push
xor
push
pop
inc
xchg
in
sbb
mov
pushf
adc
stos
dec
xchg
and
sbb
int3
and
cmp
mov
fs
ss
call
rol
cmp
arpl
jne
dec
adc
cmp
ret
adc
mov
nop
xor
mov
jmp
fist
sbb
and
or
popf
jmp
in
into
and
jns
add
std
(bad)
pop
shl
mov
retf
xor
sbb
add
push
sub
adc
inc
add
or
xor
jge
dec
outs
mov
adc
bound
cdq
dec
fsubr
dec
mov
or
push
add
fidiv
aas
ret
pop
mov
mov
ds
and
sub
out
ret
sub
inc
sti
pop
imul
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
push
sub
xchg
cmp
imul
add
push
pop
inc
jo
jge
or
sar
sbb
cmp
jb
shl
test
test
rcl
dec
or
(bad)
lock
pop
fs
jl
mov
mov
xchg
popa
mov
or
adc
cld
daa
add
test
and
or
xor
add
inc
ret
sbb
lea
mov
mov
loopne
clc
(bad)
add
inc
jmp
sbb
out
iret
sub
lea
mov
inc
sbb
mov
sub
ret
dec
push
clc
sbb
popf
cli
lock
sub
je
inc
(bad)
mov
add
inc
xlat
imul
ins
pop
add
adc
fsub
cmp
cmp
jg
in
dec
push
movs
push
stc
jmp
lock
mov
sbb
inc
jo
pop
sbb
push
inc
cmp
jmp
adc
xchg
out
pop
leave
rol
jmp
cmc
xchg
sbb
sbb
mov
pop
adc
jne
imul
adc
and
leave
call
push
and
fcomip
pop
adc
sbb
add
add
ret
and
jne
fucomp
sbb
and
test
add
sub
add
call
fdivr
cmp
inc
inc
mov
popf
jae
sar
mov
xor
imul
sub
lods
dec
xchg
imul
mov
in
xor
jl
cmp
xor
push
cmc
jb
mov
fwait
jge
sub
jbe
or
movsx
push
push
push
xor
push
push
xor
fwait
pop
ret
push
push
push
push
and
stos
and
jb
jae
mov
push
adc
pop
in
add
xchg
mov
lods
mov
sbb
ds
cli
pushf
jmp
adc
pop
pop
leave
xor
imul
out
adc
pop
mov
or
add
pop
inc
push
pop
push
pop
jnp
cmp
icebp
ins
popf
pop
(bad)
push
das
stos
dec
mov
aaa
cmp
mov
enter
sar
shr
fstp
push
jle
jge
loopne
mov
jl
jg
push
jle
jge
stos
gs
add
shr
ss
xor
sbb
aam
es
sbb
pushf
shl
sbb
lods
or
sbb
aaa
test
push
mov
retf
and
xlat
sub
cmp
pop
daa
arpl
add
pop
inc
sub
cmp
mov
push
cmp
push
cdq
push
xchg
cmp
cwde
sbb
out
mov
xor
repnz
inc
sti
rol
pop
movs
cmp
or
in
mov
inc
push
fidiv
(bad)
jmp
xor
jl
jg
ds
test
es
xchg
ja
push
push
cs
add
cmc
ja
jge
jl
dec
inc
lea
pop
arpl
or
or
sbb
xchg
popa
pop
test
xchg
xchg
mov
dec
loopne
lea
mov
lea
mov
lea
(bad)
sbb
add
mov
and
pop
cmp
push
hlt
jecxz
dec
or
inc
mov
pop
enter
xlat
and
sbb
loop
cld
inc
mov
js
or
lahf
mov
daa
inc
add
outs
jmp
ss
push
xchg
popa
jae
pop
daa
ror
jns
sahf
mov
or
jo
ret
inc
inc
mov
cs
add
int3
outs
imul
mov
mov
mov
cmp
jge
ss
sbb
jl
or
sbb
add
push
inc
jl
pop
or
sub
add
push
fisttp
rsqrtps
or
sbb
lock
call
enter
push
dec
inc
inc
fld
add
adc
fsub
mov
pop
les
ins
dec
cmovnp
fadd
pop
mov
sub
repnz
sub
ficom
fadd
dec
call
clc
jge
inc
stos
neg
neg
sbb
enter
sbb
sbb
out
(bad)
loopne
sbb
sbb
enter
adc
xor
sar
cwde
daa
shr
rcr
dec
push
test
sbb
adc
cmp
adc
stc
scas
and
nop
pop
call
cwde
es
adc
popf
adc
icebp
xor
sbb
sbb
fbld
movs
ret
jns
jmp
popa
xor
scas
popa
enter
push
scas
xchg
jp
xchg
sub
adc
rcl
repz
or
call
rcl
or
jno
pop
ret
jg
cdq
and
push
pop
cmp
pop
movs
mov
xchg
or
vmovupd
popa
mov
push
jb
stc
push
cmp
ret
push
adc
xchg
das
pop
adc
and
cmp
lahf
xor
and
jecxz
pusha
xor
push
jo
pop
mov
(bad)
les
repnz
ret
push
mov
pushf
scas
mov
mov
add
dec
push
ret
mov
mov
push
cmp
adc
xor
sub
lea
stos
xchg
enter
sar
or
mov
mov
push
pop
sub
mov
movs
call
xor
test
add
sbb
cmp
dec
add
loope
outs
mov
or
push
inc
push
outs
mov
lea
inc
ret
mov
dec
adc
inc
je
dec
ret
hlt
jb
jp
or
ror
or
nop
cmp
mov
add
cmp
xchg
cmc
je
in
pop
jne
sub
mov
jp
pop
call
inc
js
mov
and
inc
repnz
and
ss
jne
(bad)
mov
add
lock
xlat
cmp
xchg
(bad)
cmp
icebp
popf
mov
dec
add
adc
jmp
dec
adc
and
imul
test
mov
test
and
push
mov
add
ror
lods
jno
xchg
jmp
push
movs
test
mov
xor
lods
aas
push
jmp
xchg
or
jmp
into
add
addr16
and
retf
adc
popa
and
nop
and
cmps
and
mov
imul
je
push
imul
and
add
dec
out
loopne
mov
add
lods
rcr
add
dec
jbe
push
sbb
inc
in
push
das
mov
push
jmp
xchg
mov
rcl
cld
push
add
adc
repnz
jmp
mov
push
adc
mov
inc
ror
dec
dec
fsubr
add
jb
push
jbe
or
xchg
adc
inc
rcr
into
shl
mov
rcr
loope
push
pop
xor
jne
cmp
or
or
xchg
add
inc
push
or
out
fcom
add
inc
inc
adc
mov
xor
cmp
out
cmp
xchg
add
sub
shr
inc
inc
pop
je
pop
es
push
push
push
mov
cmp
es
mov
push
or
mov
cmps
js
ror
nop
cld
pop
cmp
popa
push
inc
icebp
xchg
xor
inc
pop
fcomp
dec
je
js
loopne
or
push
pop
and
or
push
mov
out
mov
inc
add
xor
inc
jne
int
pop
pop
jns
pop
add
adc
dec
test
sub
loope
inc
add
and
xlat
sbb
mov
xor
xchg
mov
cmp
in
add
inc
mov
sub
cmp
add
ins
(bad)
jne
outs
and
hlt
sbb
test
sbb
jae
data16
jmp
loopne
sbb
shl
dec
psubusb
push
adc
mov
mov
neg
sub
(bad)
push
push
or
loopne
jecxz
mov
jne
and
mov
ja
nop
adc
xor
xor
clc
rcl
bound
es
mov
mov
iret
mov
mov
retf
test
lock
ins
rcr
test
scas
test
mul
out
adc
pop
fisttp
sbb
inc
mov
or
dec
pop
and
xchg
test
scas
adc
mov
sbb
(bad)
or
push
adc
xchg
jmp
push
jae
add
xchg
sub
dec
xor
lock
inc
in
lock
shl
pushf
xor
and
jg
into
pop
mov
test
xchg
push
sub
adc
dec
lock
adc
bound
pop
xchg
add
push
mov
mov
xchg
sbb
in
out
xlat
je
loopne
xor
les
in
or
or
or
jmp
aas
mov
jp
js
or
fsubr
out
mov
dec
dec
push
push
pop
inc
push
into
ds
lock
or
xor
fld
mov
je
test
pusha
sub
push
push
xor
test
and
mov
push
dec
in
lea
mov
xchg
pusha
fs
adc
or
arpl
retf
xchg
dec
and
xor
rol
sbb
sbb
add
dec
mov
inc
aas
mov
fidivr
sbb
fsub
or
data16
jl
inc
adc
sahf
ret
and
adc
outs
ins
cmp
inc
mov
adc
lds
pop
clc
xchg
cmps
add
push
fucomip
add
mov
ins
sub
(bad)
ror
in
push
or
pop
es
jmp
and
sub
inc
pop
pop
adc
xor
jo
loope
xor
mov
cmps
imul
aaa
repnz
mov
cmp
ja
gs
jne
bound
push
jb
adc
fldenv
cld
sub
repnz
mov
inc
data16
sbb
add
adc
or
out
pop
mov
dec
jle
mov
mov
les
ja
pop
push
mov
pop
or
mov
scas
or
and
inc
jmp
jmp
aad
push
push
shr
cli
mov
shl
push
pusha
and
or
or
xor
xor
dec
xlat
adc
jbe
nop
sbb
ss
push
push
cs
fwait
sub
and
and
push
ror
sub
sub
and
sub
sub
dec
ficom
movs
xor
xor
inc
cmp
xor
rol
inc
dec
xor
xor
ror
dec
push
dec
xor
push
ror
dec
pop
dec
pusha
and
nop
xor
fs
ror
xor
ins
cmp
nop
xor
jo
je
or
xor
cmp
inc
push
push
sar
imul
dec
cs
mov
inc
jb
fiadd
nop
inc
xchg
leave
gs
cs
cwde
sub
sub
or
out
push
cmps
test
add
cmps
mov
add
dec
test
jecxz
fwait
push
mov
ror
repnz
or
gs
and
and
mov
xchg
xor
xchg
retf
xchg
fsubr
loopne
cs
jb
in
mov
cs
das
xor
and
xor
xchg
pop
xchg
inc
hlt
inc
leave
aaa
and
clc
popa
inc
cld
sub
push
add
dec
add
leave
ja
dec
mov
dec
cs
mov
repnz
leave
gs
sbb
add
inc
sbb
nop
pop
mov
in
xchg
retf
and
sub
mov
sub
pop
leave
gs
xor
cmp
and
xchg
xor
inc
inc
aaa
and
xchg
dec
popa
inc
dec
sub
inc
push
xchg
sub
jp
gs
sub
push
pop
xchg
outs
pop
repnz
add
and
(bad)
pusha
es
clc
fiadd
or
test
movs
push
mov
dec
shl
or
leave
leave
leave
or
adc
daa
daa
mov
ss
sub
daa
daa
daa
xor
cmp
sbb
cmp
inc
and
jb
jb
inc
cmovs
pop
jo
push
pop
add
pushf
pushf
fs
pushf
pushf
je
jl
jnp
push
(bad)
sbb
and
dec
xor
xor
xchg
cwde
pushf
mov
movs
test
cdq
fs
mov
add
dec
int3
ror
cdq
ss
cdq
fs
loopne
call
dec
aam
hlt
jb
dec
es
cld
add
add
sbb
cmp
cmps
dec
mov
adc
cdq
fs
sbb
and
fs
dec
sub
fs
dec
es
cmp
xchg
sub
leave
and
push
dec
mov
and
dec
xor
pusha
and
iret
dec
outs
add
inc
push
test
sti
xor
cmps
rcl
arpl
iret
add
jo
dec
rcl
add
int3
xchg
xchg
faddp
test
js
sub
mov
fsubr
or
mov
mov
or
inc
pcmpgtd
cmps
cmps
add
mov
nop
push
dec
cs
xor
xchg
xor
xor
push
inc
(bad)
outs
movs
jne
cmp
jne
or
jne
adc
mov
ja
jno
push
stc
aas
in
push
(bad)
sub
data16
xor
mov
int3
sti
push
rep
dec
js
dec
mov
jmp
dec
add
test
pop
xchg
aad
test
lahf
dec
sbb
mov
aam
mov
movzx
push
push
js
adc
and
or
adc
pop
pop
sahf
outs
ja
jl
mov
adc
rcpps
cli
mov
mov
push
mov
jmp
cli
xor
cmp
sub
outs
push
sub
and
pop
add
add
mov
mov
inc
sub
jmp
cmp
outs
xchg
mov
dec
push
imul
aas
adc
add
fmul
rol
cmp
add
lock
add
pop
cmps
sbb
and
jge
idiv
mov
ret
sbb
out
xchg
dec
or
adc
cwde
in
leave
in
pushf
sbb
sbb
and
and
cmp
mov
les
in
inc
enter
cs
aam
shl
add
sbb
xchg
sbb
loopne
sbb
rcl
mov
inc
dec
shl
or
mov
nop
adc
adc
adc
dec
sbb
rol
push
sbb
movs
push
int
xor
and
sub
(bad)
inc
add
sbb
fist
sub
dec
ficom
push
xchg
ss
sub
push
stos
xchg
adc
cmp
add
push
inc
pop
xor
shl
push
or
xchg
and
xchg
inc
xor
xlat
sbb
in
add
mov
xchg
push
jno
and
pop
push
or
dec
bnd
jg
add
push
or
mov
mov
push
add
add
movs
add
mov
test
mov
adc
mov
repnz
inc
jp
pop
push
xchg
sbb
icebp
jo
mov
aam
aaa
stos
adc
xchg
mov
inc
test
cmp
mov
jg
imul
mov
jle
or
sbb
pop
loope
jmp
nop
leave
jmp
add
fidiv
sub
mov
fstp
adc
adc
cmp
pop
add
add
test
jg
adc
dec
in
and
cld
xor
shl
push
jle
loope
push
jmp
jns
dec
mov
lea
cmp
and
xchg
push
rol
push
popa
adc
push
dec
sub
sbb
dec
push
adc
dec
mov
and
xor
or
and
add
or
inc
ficom
adc
iret
push
dec
ror
arpl
dec
cmp
mov
and
add
sub
mov
push
(bad)
inc
lahf
inc
cmp
ja
add
jmp
sbb
add
lea
mov
fstp
call
push
push
inc
into
inc
jl
pop
jle
popa
add
cmp
xchg
xor
mov
ss
int
out
mov
push
sbb
and
inc
cdq
and
call
lods
inc
pop
inc
ja
scas
pop
nop
cwde
mov
fmul
jecxz
mov
mov
ror
ja
or
inc
not
aam
push
pop
adc
(bad)
hlt
xchg
test
inc
loope
sbb
cwde
and
push
sbb
jmp
je
rcr
push
cmp
pop
shl
(bad)
stc
out
cmp
fmul
sti
cwde
je
mov
mov
push
add
loope
std
or
xchg
sbb
adc
dec
sbb
data16
push
sub
lock
and
sahf
in
adc
add
imul
or
pop
retf
and
push
test
jne
js
dec
pop
cmp
push
mov
inc
call
sbb
outs
add
mov
push
jne
jno
mov
neg
jne
or
or
fs
and
pop
test
adc
inc
add
dec
inc
jecxz
push
sub
cmp
inc
mov
adc
and
out
test
dec
sbb
je
pop
daa
das
sub
imul
xor
das
out
fcom
xchg
hlt
mov
js
btr
js
pushf
ret
mov
dec
adc
lahf
clc
retf
adc
fldenv
cmps
push
and
mov
pusha
cmp
cmp
xor
data16
or
in
mov
push
push
or
xor
mov
cwde
lea
mov
ins
iret
fsub
xor
loope
push
pop
es
jp
ret
or
cdq
(bad)
into
add
fadd
iret
xor
mov
and
or
add
pop
inc
pop
mov
sbb
xchg
add
and
mov
sub
fadd
or
clc
jge
mov
cmp
dec
jecxz
into
add
adc
dec
call
inc
ins
jbe
sub
pusha
in
call
cmp
clc
scas
mov
mov
inc
jnp
push
adc
xor
jl
cmp
or
test
cmp
sbb
cmps
shl
push
clc
cmp
xor
dec
shr
jecxz
sahf
xchg
aas
sub
mov
inc
sbb
fisttp
push
inc
sar
mov
add
pop
test
pop
inc
push
mov
and
adc
outs
mov
mov
mov
pop
icebp
mov
mov
or
loopne
push
and
or
jns
test
sbb
out
imul
dec
xchg
and
sub
mov
ins
loop
and
cs
sub
sbb
jge
push
pop
popa
pop
imul
push
pop
ret
mov
jmp
adc
les
or
cmp
out
xor
inc
(bad)
cmp
enter
and
sub
adc
stos
aad
and
xor
sub
pop
push
lahf
ret
lea
adc
and
and
pop
add
xchg
cmp
in
add
add
xchg
cmp
inc
mov
retf
jno
je
lea
xchg
add
mov
in
add
nop
addr16
gs
pop
out
rcr
or
or
and
scas
in
mov
fnstsw
or
test
or
in
in
or
sub
push
push
push
jae
inc
sahf
(bad)
rdmsr
adc
aad
dec
adc
pop
adc
iret
adc
cmp
sbb
push
adc
add
adc
xchg
sub
adc
adc
xchg
adc
jns
scas
inc
pop
pop
repnz
and
sbb
xchg
sbb
cmp
sbb
sbb
add
sbb
cmp
cmps
repnz
sbb
repz
leave
repz
leave
sbb
nop
out
inc
neg
pop
jne
add
add
xor
jae
push
or
push
inc
stos
pop
xchg
jmp
add
cmp
push
in
push
in
imul
cmps
repnz
adc
in
jns
in
in
out
sub
jns
mov
imul
call
and
cdq
and
sahf
mov
cmp
cmp
cmp
push
jmp
xchg
mov
mov
or
cmps
in
or
in
xchg
mov
(bad)
in
cmp
mov
scas
in
out
out
xchg
out
jae
inc
push
or
je
and
dec
lock
icebp
iret
enter
das
repnz
adc
repz
hlt
hlt
imul
pop
hlt
xchg
(bad)
std
cmc
cmc
xchg
addr16
cmp
jns
mov
pusha
nop
cmps
repnz
clc
clc
clc
dec
sahf
xchg
stos
or
xchg
addr16
cli
cli
add
or
sbb
sti
fdivrp
aaa
mov
fwait
cld
cld
je
cld
push
push
nop
mov
jne
mov
xor
sbb
dec
xor
sub
jmp
inc
add
gs
daa
popf
stos
jb
lahf
ror
jp
fisttp
pop
cmp
adc
xchg
xor
ja
cmp
push
mov
cmp
push
mov
aam
pop
ins
nop
and
out
xchg
scas
dec
pop
push
(bad)
call
or
dec
stos
or
jmp
leave
or
or
add
xchg
pop
jmp
dec
in
cli
out
out
out
xchg
mov
lock
cmp
(bad)
cli
or
aas
repz
inc
scas
and
xchg
push
sub
stc
(bad)
rcl
imul
mov
xchg
clc
cmp
pop
push
cdq
jb
push
stc
sub
sbb
enter
sti
sti
xchg
or
repnz
fdivrp
cmp
jmp
mov
cmp
ja
or
stos
cmp
mov
(bad)
dec
loop
add
arpl
loope
leave
and
clc
and
or
out
jmp
mul
in
repnz
neg
mov
jnp
jmp
push
test
pusha
leave
pop
test
xchg
leave
or
scas
test
pop
nop
test
repnz
das
test
adc
loope
not
and
mul
out
div
test
dec
stos
nop
jo
dec
loope
repnz
scas
mov
pop
or
and
jmp
xor
cmc
cli
cli
xchg
pop
push
sub
sbb
or
or
xlat
inc
pushw
(bad)
data16
cld
push
push
add
xchg
stos
mov
push
or
adc
iret
movs
loope
loope
jp
repnz
pop
hlt
cmp
mov
cmp
mov
hlt
or
push
in
pop
in
xlat
jb
repz
repz
mov
or
xchg
repz
in
ins
repz
repz
or
or
in
mov
in
(bad)
repnz
or
test
icebp
cmp
add
sub
ds
leave
sub
cmps
jb
sbb
and
icebp
cmp
mov
icebp
cwde
icebp
mov
jne
cmp
movs
stc
mov
jne
xor
movups
mov
out
lock
aaa
push
leave
aad
adc
inc
mov
(bad)
pop
cdq
sub
push
sub
ffreep
mov
je
inc
jmp
pop
in
imul
cmp
cmp
push
repnz
fcom
mov
adc
jbe
mov
stc
xor
jmp
push
ja
mov
fbld
xor
add
and
mov
add
sbb
ins
mov
push
mov
(bad)
jmp
aam
test
int
cmp
mov
mov
ins
fcom
adc
ss
ds
xchg
mov
(bad)
mov
cmp
mov
(bad)
jne
xor
iret
mov
sahf
out
rcr
test
adc
into
and
cmps
push
add
cmp
xchg
sbb
and
loopne
dec
adc
sti
cmc
bound
jg
jg
cmp
jmp
jg
xor
mov
add
add
sbb
mov
pop
push
pop
or
add
aaa
sbb
icebp
dec
loop
das
lods
push
scas
xchg
jmp
cli
call
xchg
test
aad
and
add
loop
add
xchg
pop
sbb
lea
inc
fdiv
mov
test
je
cmp
dec
mov
push
mov
std
jne
(bad)
es
jne
ret
dec
cdq
cmps
call
or
aam
jo
push
cmp
jmp
adc
lahf
out
stc
(bad)
jmp
std
std
jmp
cld
cld
jmp
pop
sbb
or
adc
loopne
and
jb
cmp
cmp
fbstp
add
mov
xor
icebp
or
ret
cmp
repz
add
ret
les
adc
or
fadd
jmp
bound
je
jo
clc
pop
sub
je
cmp
je
cmp
je
adc
push
mov
add
(bad)
icebp
jmp
mov
leave
inc
shl
adc
mov
jns
mov
jl
leave
xor
mov
jg
add
adc
popa
outs
mov
lock
je
push
sbb
or
dec
ins
xor
mov
icebp
bound
mov
inc
cli
sti
movs
jo
retf
or
test
ins
sub
inc
dec
shl
cmp
nop
cdq
dec
mov
jl
xchg
mov
in
xor
je
sbb
scas
and
outs
jmp
inc
and
sub
fist
ret
add
pop
inc
or
jmp
es
sbb
mov
(bad)
sti
ja
adc
or
and
adc
push
ficomp
ror
mov
pop
inc
pop
mov
sub
cmps
mov
cwde
adc
push
sub
mov
retf
popa
sub
jle
cmp
lods
jne
push
add
leave
js
outs
mov
add
push
cmp
or
add
push
inc
or
cmp
push
movs
fistp
por
sub
inc
in
movs
and
dec
cmp
or
push
fadd
ret
and
push
call
xor
jae
or
add
test
or
push
xchg
and
inc
mov
bound
pop
xor
xchg
retf
aad
sbb
xchg
movs
dec
test
xchg
push
std
pop
ja
test
lods
pop
shl
add
rcr
das
push
in
pop
mov
cmps
adc
cmp
mov
mov
in
push
pop
lock
dec
ret
popa
outs
daa
jne
neg
mov
push
inc
or
cli
add
ja
mov
mov
push
and
lods
pop
test
ficomp
cs
or
dec
adc
ss
ds
jg
(bad)
outs
sub
retf
push
shl
push
mov
mov
call
or
fist
out
mov
sbb
sbb
je
xchg
cli
adc
bnd
js
(bad)
lea
lea
or
and
or
int3
adc
out
adc
loope
push
sbb
mov
pop
arpl
jg
add
loope
push
sbb
out
hlt
sbb
push
imul
(bad)
call
js
xchg
cdq
pop
inc
mov
sub
sahf
mov
pop
rcr
sbb
sub
rol
xor
push
mov
(bad)
mov
xor
pop
and
sub
shl
cmp
xor
fsub
pop
ret
push
push
sub
sbb
and
ins
rcr
mov
push
push
int3
mov
inc
mov
ins
pop
or
push
ret
or
cdq
mov
mov
lock
adc
add
(bad)
nop
xlat
and
add
call
and
popa
mov
daa
or
mov
mov
inc
or
dec
or
mov
clc
cmp
or
add
fwait
push
test
push
imul
and
dec
mov
xor
jp
fsub
mov
ret
mov
mov
add
(bad)
adc
test
push
stos
cmp
call
int3
push
add
jo
scas
or
cmc
lea
cdq
xor
inc
js
setge
inc
mov
dec
test
and
mov
push
sub
sbb
ins
into
mov
outs
sti
add
out
jae
icebp
jl
xor
dec
and
jne
loop
lock
stc
leave
cmp
jmp
repz
arpl
imul
jmp
addr16
ja
je
push
mov
or
ja
pop
inc
sbb
jmp
je
nop
int3
pop
into
sub
or
add
int3
push
lea
cmp
ds
sbb
retf
sub
pop
inc
stos
mov
cli
cdq
ret
stos
icebp
inc
add
sbb
push
out
mov
mov
ja
pusha
add
cld
sub
mov
pop
cmp
fwait
mov
ror
or
jns
mov
adc
push
test
jge
dec
stos
pop
jmp
inc
and
add
add
rol
adc
mov
(bad)
fnstsw
push
jbe
pop
xor
cmps
and
cmp
das
(bad)
or
cdq
xor
arpl
test
inc
push
mov
cmp
or
int3
and
movs
sbb
sbb
xchg
mov
popa
sub
push
cmps
inc
pop
and
scas
push
xchg
push
aam
or
je
pushf
push
cmp
pmaxub
mov
ss
jb
imul
push
pop
in
cmp
aaa
push
aam
mov
cwde
ret
popf
movs
fdiv
or
adc
nop
out
push
daa
jmp
push
jne
jno
mov
sbb
rol
push
mov
dec
lahf
mov
fistp
add
mov
pcmpeqb
ror
mov
sar
mov
rcl
jmp
fadd
or
ins
in
jp
es
loop
cdq
cmp
xchg
imul
cmc
sub
cwde
call
add
dec
pusha
jecxz
sti
push
loopne
pusha
cs
sbb
inc
fs
je
fisub
sub
nop
mov
out
out
adc
mov
popf
sbb
mov
adc
lock
(bad)
jmp
stc
push
dec
mov
dec
xchg
add
loopne
jmp
mov
loopne
ret
fs
mov
call
call
add
add
push
addr16
add
inc
cmp
cmp
add
cld
push
or
sete
mov
loope
and
mov
bound
fistp
inc
les
jno
push
jecxz
mov
fdiv
cli
dec
cmp
or
add
fimul
inc
movs
sub
cmps
push
sbb
and
jecxz
(bad)
xchg
mov
rol
loope
add
adc
mov
mov
jmp
cs
or
mov
in
inc
and
call
mov
sbb
pop
mov
add
repz
dec
nop
push
ins
je
jecxz
aam
vminps
push
mov
pop
cli
mov
stos
jmp
jb
push
fs
addr16
dec
loope
inc
in
inc
adc
ror
add
out
pop
mov
push
push
add
inc
xor
ret
cmp
(bad)
pop
and
in
lock
add
repz
xor
push
sbb
and
sub
test
inc
cwde
or
jle
dec
xor
cmp
jmp
addr16
rcr
fnstenv
(bad)
loope
inc
test
sbb
je
mov
add
sar
mov
in
or
and
fdiv
pop
inc
sub
and
psubusw
push
call
xlat
movs
rcr
or
es
lock
inc
add
lock
and
and
das
or
ins
loope
les
inc
or
sbb
ss
push
sub
mov
and
push
push
sub
add
out
sbb
inc
dec
adc
dec
retf
jb
ins
or
(bad)
cmp
mov
inc
dec
and
add
mov
lods
jb
inc
push
and
push
and
mov
aas
mov
and
arpl
and
mov
adc
mov
or
aaa
js
add
fld
jmp
mov
hlt
push
fs
xchg
add
push
cmp
inc
inc
or
repnz
fs
add
adc
mov
xor
add
fs
adc
fmul
adc
xchg
mov
cmp
mov
cmp
mov
pop
push
inc
or
test
jle
dec
cmp
sbb
add
ja
jno
or
adc
add
jmp
inc
data16
(bad)
jmp
enter
mov
repz
imul
call
pop
cli
(bad)
sbb
push
mov
adc
clc
mov
mov
(bad)
loop
inc
cmp
adc
pop
push
pop
xchg
sahf
add
mov
cmp
loopne
pusha
leave
call
ret
mov
add
mov
rol
inc
push
paddd
enter
test
js
inc
mov
inc
dec
rcl
test
jmp
jg
clc
jb
dec
push
or
mov
rcr
mov
retf
enter
clc
or
jp
sub
add
jmp
(bad)
push
mov
inc
mov
xchg
add
fldcw
and
add
inc
inc
and
neg
cdq
sub
dec
fs
sub
test
sub
push
cmovg
mov
ret
and
xchg
cmp
or
cmp
in
aam
mov
sbb
mov
push
clc
mov
inc
ret
dec
add
nop
mov
jmp
xchg
xor
push
push
sub
call
mov
push
xchg
adc
push
in
or
ret
test
repnz
test
imul
mov
sub
stos
cmp
aas
(bad)
sahf
mov
and
dec
add
pop
push
sub
data16
mov
shl
push
clc
adc
(bad)
cmps
leave
cmp
pushw
jmp
jae
in
lods
pop
pop
test
mov
mov
or
sbb
js
sbb
push
xor
and
mov
dec
sub
jl
push
xchg
push
or
pop
dec
test
js
ins
pop
add
sub
cmp
add
stos
or
ret
or
out
out
shr
sub
test
mov
dec
in
dec
int3
add
shl
cmp
enter
add
pop
inc
loop
pop
xchg
push
add
ret
sub
xor
mov
push
gs
adc
outs
pmulhuw
xor
pop
add
fdiv
adc
jne
mov
push
jmp
or
jmp
neg
or
sub
push
mov
ret
sar
dec
sbb
(bad)
jl
cmp
pop
mov
mov
xor
ss
ja
lds
and
pop
and
dec
or
mov
sbb
test
loop
pop
adc
mov
dec
rol
add
push
push
dec
push
movlps
and
arpl
sbb
or
and
lods
xchg
pop
or
or
outs
lea
sbb
shr
mov
and
pop
cmp
je
mov
lods
jg
fnsave
sbb
mov
or
ror
add
push
sbb
rcr
inc
nop
push
push
or
jnp
mov
xchg
scas
pop
daa
cli
dec
loop
pop
outs
inc
fadd
test
cmp
xor
lods
push
retf
mov
dec
jl
add
xchg
sbb
pusha
ins
cmc
ins
dec
lods
xor
loopne
or
sbb
daa
sbb
add
pusha
ror
popa
jmp
pop
into
aas
rcr
cmps
je
push
xchg
add
jmp
fistp
lods
sbb
mov
add
adc
mov
dec
shl
push
add
jno
je
jns
mov
inc
adc
add
lea
mov
jle
dec
(bad)
out
add
popa
fld
jbe
dec
and
aam
jmp
rcr
push
ds
cmps
adc
cmc
mov
(bad)
jno
les
jb
push
adc
scas
sbb
mov
push
das
and
mov
sub
pop
lods
and
add
out
add
cmp
xor
dec
pcmpeqb
dec
inc
(bad)
xor
or
je
daa
mov
repnz
js
sub
push
add
jne
loopne
dec
xor
dec
inc
out
loop
dec
loop
sbb
test
jno
ins
or
cmp
fidiv
(bad)
lock
dec
outs
jge
mov
mov
call
dec
add
setne
push
mov
test
inc
pop
arpl
scas
xor
pop
sahf
xor
ja
(bad)
ins
shr
xor
adc
xchg
mov
inc
mov
ja
adc
sub
mov
(bad)
fisttp
test
outs
mov
cdq
imul
call
xor
fdiv
xchg
and
add
add
inc
and
(bad)
push
mov
call
inc
sti
pop
push
int
push
mov
lea
pop
xor
mov
into
jle
je
cmp
movs
push
jns
jl
xor
and
stos
outs
mov
jl
por
add
js
pop
sbb
aaa
mov
or
sub
aaa
popa
dec
hlt
mov
ss
pop
add
pop
and
rol
pxor
push
push
pop
jne
adc
jg
call
je
xchg
xchg
ds
push
inc
adc
and
iret
repz
inc
inc
inc
mov
loop
jo
mov
shl
bound
mov
dec
jg
leave
outs
lods
or
xor
mov
je
xor
shr
je
mov
sub
add
adc
add
mov
inc
or
pop
outs
inc
cli
pop
pop
ret
pop
jbe
mov
sub
push
mov
bound
push
dec
cli
shr
add
jecxz
popa
cld
mov
lods
cdq
pop
sub
adc
xor
or
push
sbb
adc
jae
mov
adc
mul
adc
sbb
pusha
push
sbb
div
retf
push
or
pop
push
sub
push
lock
inc
jb
mov
enter
int
dec
jbe
pop
mov
add
sbb
xchg
fist
jns
xlat
dec
fidivr
shl
arpl
das
inc
xchg
xchg
fs
retf
push
jb
pop
sbb
addr16
nop
xchg
iret
out
add
jnp
inc
cmp
fld
loopne
daa
jg
(bad)
div
dec
movs
xor
xor
add
fst
add
mov
adc
iret
push
xor
call
popf
mov
or
into
sahf
push
jae
and
push
push
dec
or
ror
or
sti
inc
xchg
or
or
loope
add
or
push
or
enter
rcl
adc
push
stc
xor
cmp
inc
add
dec
gs
not
lock
add
jmp
je
inc
cwde
sbb
ins
cmp
push
xchg
add
or
rol
mov
inc
mov
ud2
push
movs
add
movs
mov
add
inc
imul
fs
jp
jmp
xchg
test
cmp
mov
out
pushf
mov
adc
ror
add
xchg
and
adc
adc
cmc
dec
rol
jo
jp
push
push
aaa
(bad)
nop
retf
je
push
jmp
adc
add
xor
repz
xchg
out
jae
sti
jbe
inc
mov
dec
add
xor
sbb
out
inc
push
sbb
or
jmp
and
and
je
int
das
popa
lods
div
test
cmp
fsub
push
sub
push
cmp
inc
out
sub
or
ins
jl
push
add
xchg
ror
sub
movs
hlt
push
xor
jb
add
jb
add
test
pop
and
jne
or
mov
push
push
int3
sub
xchg
hlt
(bad)
cli
std
and
jne
push
mov
mov
pop
shr
mov
add
inc
movs
fsub
mov
mov
cmp
les
or
loope
aas
inc
push
adc
add
fidivr
inc
mov
mov
mul
pushf
or
and
jmp
mov
cmp
ja
loope
and
in
ja
sub
(bad)
inc
addr16
daa
sbb
add
push
xchg
inc
jne
adc
and
dec
sbb
add
push
sbb
(bad)
rol
jmp
dec
sbb
add
test
sbb
test
icebp
fisttp
daa
mov
cmp
fs
(bad)
cs
xor
cs
adc
jne
mov
enter
sahf
xchg
adc
fcomp
gs
dec
(bad)
pop
cmps
je
data16
enter
xchg
jmp
rol
sub
xlat
dec
inc
inc
and
push
(bad)
xor
loope
(bad)
fisttp
add
mov
push
aam
sub
js
jle
or
cmp
dec
sbb
call
icebp
in
and
or
std
lea
adc
push
add
pop
dec
adc
and
add
or
xchg
add
xchg
mov
xlat
and
xor
cmp
loope
inc
call
mov
mov
sbb
dec
mov
icebp
cld
mov
pop
xor
or
mov
fdivr
fidiv
add
mov
fist
jne
xor
sbb
and
(bad)
in
mov
cmp
or
push
inc
xchg
cmp
xchg
cli
and
cmc
xor
stos
cmp
sbb
xor
and
mov
push
aas
push
push
inc
add
pop
adc
loopne
gs
ret
jl
lahf
xor
ret
dec
cld
lahf
int3
inc
pusha
mov
push
and
and
adc
ret
push
push
push
add
cdq
push
clc
add
add
mov
xchg
ret
cmp
sub
push
cmp
movs
mov
or
mov
sub
xchg
dec
loope
mov
pop
inc
mov
dec
(bad)
xor
mov
sbb
fwait
xor
sbb
lods
mov
jns
pop
rcl
push
or
push
(bad)
lea
xor
sub
and
or
cld
(bad)
sbb
push
push
push
pop
pop
ret
sbb
(bad)
rcr
int
test
sub
mov
lea
inc
cmp
mov
push
ficomp
adc
movs
pop
push
retf
sub
repz
(bad)
adc
retf
inc
push
xsaveopt
xor
ficomp
xor
rol
adc
outs
test
rol
js
push
out
or
pop
pop
clc
je
sub
sar
or
xor
xchg
movs
daa
ficomp
add
inc
aam
test
outs
scas
in
jmp
pop
movs
rol
push
js
cmc
and
mov
xchg
pop
test
and
mov
xor
push
pop
cmp
or
into
jl
sbb
xor
pop
or
outs
pop
mov
shr
mov
xchg
add
popf
(bad)
(bad)
les
mov
dec
inc
jno
push
add
mov
test
pop
aad
jne
pop
jbe
loopne
lods
sub
dec
inc
add
dec
or
cli
rcl
mov
mov
ror
mov
loopne
push
and
or
test
in
or
jmp
cmp
jb
or
test
dec
mov
push
adc
xor
mov
inc
inc
repnz
or
leave
popf
nop
addr16
cmp
test
jmp
cmc
add
xor
test
push
mov
pusha
mov
mov
stc
(bad)
fadd
inc
call
jmp
fadd
inc
call
aam
or
fild
jno
frstor
cmps
test
mov
pop
add
fcom
int3
or
dec
fisub
add
pop
(bad)
mov
out
mov
mov
add
rol
pop
sbb
fdiv
or
in
inc
jmp
ss
loope
mov
cmp
push
dec
mov
push
push
jbe
mul
sbb
sti
call
cmp
in
jmp
bound
jge
in
xor
adc
rcr
xchg
mov
add
ret
or
adc
jg
inc
sbb
dec
and
cmp
adc
rcr
adc
inc
push
add
fmul
je
je
ret
dec
and
cmp
into
adc
cmp
out
mov
pop
mov
lock
xchg
push
or
sbb
aaa
mov
xor
or
es
add
sbb
xor
ds
or
test
pop
aas
or
or
bswap
sbb
lods
(bad)
shr
dec
rol
and
inc
inc
mov
pop
sbb
adc
stc
push
rcl
mov
lock
or
xor
cmp
jne
call
test
icebp
mov
add
gs
int
push
jno
or
loop
mov
pop
(bad)
pop
pop
adc
push
dec
(bad)
jge
xor
gs
sub
jbe
adc
mov
xchg
fnsave
inc
or
dec
xchg
jnp
call
pop
dec
stos
loope
push
sbb
lahf
sbb
mov
leave
push
dec
add
cmp
ret
int
and
mov
and
or
jle
rol
cwde
inc
add
sbb
mov
popf
push
js
popa
cmp
and
dec
add
jle
daa
cmps
loopne
or
and
adc
push
sbb
adc
pop
das
jl
cmc
into
fisttp
ret
int3
jp
fwait
ins
mov
cld
sub
inc
mov
push
inc
loopne
and
pusha
or
jle
sub
sbb
mov
dec
adc
xchg
and
add
cmps
sbb
add
xchg
push
sub
jle
mov
push
cmp
jmp
add
add
jle
xor
push
inc
hlt
not
aaa
shl
xchg
das
and
mov
cwde
or
push
push
pop
inc
out
ret
jbe
or
sub
sub
mov
pop
push
test
clc
movs
je
inc
jge
cs
push
or
mov
xor
sub
push
and
xchg
xor
jo
push
add
lock
push
xor
das
ja
mov
clc
jmp
or
jbe
mov
jle
gs
repnz
adc
movs
push
(bad)
jns
push
adc
movs
dec
pop
daa
or
mov
or
inc
inc
or
rcl
std
shl
cmp
pop
or
mov
cmp
adc
sbb
rol
ret
std
cmp
mov
std
ds
xor
call
int3
pop
retf
mov
jp
cmps
lods
mov
cmp
jg
push
add
and
(bad)
(bad)
outs
and
or
dec
inc
inc
jg
movs
sub
adc
shl
and
or
cmc
mov
mov
jmp
push
call
cmp
comiss
xchg
adc
and
adc
sub
(bad)
iret
dec
pop
mov
pop
mov
or
add
adc
push
mov
inc
jne
jb
sbb
fild
xor
xor
or
push
(bad)
lahf
mov
adc
loopne
and
sbb
je
cdq
push
pop
jb
pop
je
mov
xor
in
(bad)
es
mov
stos
jge
mov
in
sub
loopne
add
lahf
jecxz
xor
pop
icebp
lods
fdiv
nop
sbb
adc
aas
sub
xor
inc
adc
pop
and
cmp
popa
and
sbb
jge
jecxz
pop
leave
push
pushf
lds
out
cwde
ret
ins
stos
mov
add
dec
rcl
add
pop
xor
push
dec
clc
mov
bound
shl
inc
add
stos
clc
je
jno
and
pop
xchg
(bad)
rol
pop
mov
xlat
dec
rep
aaa
dec
mov
retf
movs
xchg
add
loope
shl
retf
(bad)
fidiv
cmp
jb
or
iret
iret
out
mov
jmp
and
jb
sbb
sbb
stos
and
jmp
pop
movs
or
test
cmp
mov
test
push
jge
push
mov
inc
sub
je
in
adc
cld
cld
jmp
mov
data16
in
out
(bad)
div
inc
dec
in
dec
dec
inc
cs
retf
dec
dec
dec
dec
cld
dec
popf
cdq
inc
cld
test
in
push
jo
or
ss
(bad)
adc
je
into
add
lock
jmp
aaa
xchg
pushf
sub
(bad)
je
xlat
lea
cmp
cdq
jge
pusha
mov
daa
jae
stos
and
adc
mov
imul
mov
or
in
inc
cmp
mov
je
pop
push
xor
and
xchg
pop
mov
into
xor
sahf
or
enter
test
cmp
icebp
push
add
push
mov
enter
mov
pusha
or
hlt
inc
test
aam
sahf
adc
gs
rcl
dec
xchg
mov
leave
xchg
push
rcl
pop
sbb
ins
fcomp
mov
mov
ret
retf
je
inc
add
inc
cmps
mov
sbb
xchg
jp
inc
pop
enter
jo
stc
mov
lea
fst
pop
or
sbb
push
pop
add
test
jecxz
call
push
les
adc
pop
lea
add
push
sbb
pop
fdivr
sti
and
arpl
pop
add
add
add
ins
std
or
dec
sub
push
mov
sbb
arpl
adc
push
xchg
int
out
outs
mov
je
push
mov
push
loop
scas
aas
jno
or
push
aad
lock
aam
mov
sbb
daa
jmp
daa
push
or
jo
add
jmp
xor
and
add
cmps
scas
popa
int3
retf
add
mov
xor
fimul
ret
sbb
cmps
mov
mov
adc
and
dec
inc
push
aaa
dec
and
call
push
pushf
aad
jns
add
jae
imul
dec
mov
scas
push
pop
mov
loop
jo
push
hlt
pop
jne
popf
xchg
pop
push
inc
or
not
xchg
dec
and
pop
mov
xor
jmp
cs
mov
je
adc
lahf
idiv
int
add
out
push
cmp
ja
add
cmp
adc
(bad)
cmp
cmc
inc
loop
jne
cmps
shl
sbb
adc
pop
leave
test
popa
out
ret
cmp
dec
or
add
cmps
ror
dec
movs
dec
pop
je
daa
xor
stos
enter
cmc
pop
fwait
push
inc
xchg
sub
sbb
js
mov
or
mov
es
dec
fs
lods
movs
mov
or
ja
add
dec
cmp
loope
xchg
jmp
lock
xor
daa
sbb
mov
lock
xor
jg
inc
iret
mov
xchg
adc
add
sbb
shl
cmp
adc
mov
(bad)
out
jg
jl
jae
push
test
mov
sub
push
and
(bad)
lods
inc
mov
arpl
dec
sbb
mov
dec
fiadd
dec
dec
repz
test
iret
ins
imul
xchg
inc
sbb
adc
daa
and
or
or
or
push
movzx
mov
cmp
sti
scas
push
push
adc
call
push
adc
or
xchg
mov
dec
and
adc
retf
sub
outs
add
call
jmp
xor
sub
pop
mov
lds
add
ror
jge
add
jo
pop
inc
mov
xchg
adc
dec
add
inc
mov
mov
xlat
xor
dec
jne
aad
add
sub
ret
sub
test
add
jge
mov
xlat
or
outs
inc
lea
and
add
xchg
fs
pushf
cmc
sbb
mov
addr16
cdq
je
jle
sbb
add
add
in
jne
(bad)
je
dec
sub
inc
les
or
out
je
mov
mov
xor
ins
rcl
dec
loopne
loop
retf
sbb
pop
add
xor
movs
mov
xchg
loopne
mov
inc
xchg
loopne
mov
mov
and
push
loope
aam
push
int3
mov
mov
ret
iret
repz
bound
clc
sbb
and
in
repz
test
mov
and
xor
in
fcomp
push
pop
xchg
call
ret
loopne
ins
js
adc
push
mov
jno
mov
push
push
mov
aad
xchg
fst
and
and
movs
mov
add
int3
sti
fmul
mov
int3
mov
and
push
sar
ret
xor
push
rcl
adc
adc
dec
mov
jp
push
adc
sbb
adc
test
ss
cs
fmul
push
rcr
cdq
test
dec
js
jmp
or
jbe
call
or
fld
shr
add
ds
or
pop
sbb
clc
pushf
iret
dec
add
mov
adc
inc
mov
push
inc
cmp
or
pop
jp
test
fwait
adc
or
jo
mov
loope
es
ins
pusha
mov
adc
add
ror
ret
daa
cs
push
inc
(bad)
and
ins
fnstsw
js
cmp
sub
add
pop
mov
jne
sbb
and
and
gs
sbb
inc
sbb
add
hlt
cwde
cmp
xchg
add
int3
xchg
std
test
sbb
xor
and
sti
push
jns
movs
dec
lock
cmp
aad
dec
mov
mov
dec
lea
ss
mov
push
cmp
js
xlat
pop
pop
sbb
adc
(bad)
inc
dec
mov
jae
jmp
inc
push
add
cmp
test
mov
adc
add
mov
cmp
call
js
cld
mov
mov
adc
movs
dec
clc
dec
push
jb
sbb
cmp
xchg
sbb
adc
dec
xor
loop
retf
inc
inc
in
mov
inc
fwait
les
push
and
add
pop
xor
arpl
push
push
cmp
scas
sbb
retf
xchg
(bad)
pop
leave
aas
push
retf
dec
dec
jmp
pop
mov
or
ds
push
daa
adc
push
pop
xchg
jbe
and
xchg
loopne
cmp
cmp
xchg
jl
das
add
div
xor
shr
cmp
fnstcw
cmp
out
xor
inc
mov
cmp
cmp
mov
cwde
or
push
push
or
sbb
fst
out
adc
xor
data16
retf
inc
(bad)
out
push
xlat
aaa
push
lds
xor
ror
push
rol
ret
hlt
repz
xchg
lock
mov
sbb
adc
push
inc
in
sub
or
aam
inc
xchg
cli
je
push
adc
and
div
retf
add
and
loope
cmc
iret
xor
add
and
retf
add
add
nop
loopne
jne
mov
popa
jmp
(bad)
out
cmp
je
sahf
jbe
push
xor
shl
jns
aam
xchg
pop
pop
add
or
cld
sbb
mov
inc
cwde
scas
dec
or
inc
mov
inc
movs
loopne
movs
sbb
out
add
push
rol
jmp
or
add
or
sub
and
xlat
adc
icebp
js
dec
into
pop
in
outs
add
test
xlat
imul
les
and
inc
pop
ret
dec
iret
je
lock
jl
je
dec
cld
cmp
jg
add
hlt
aam
or
jne
repnz
arpl
mov
add
push
push
push
jp
cli
mov
enter
mov
mov
popa
ja
or
(bad)
mov
in
ficom
adc
mov
pop
mov
xor
or
add
or
lea
push
push
adc
sbb
or
sub
imul
pop
sub
push
(bad)
ret
adc
cmp
adc
jno
inc
cmp
mov
xchg
sbb
cwde
dec
mov
pop
sub
je
hlt
mov
push
push
sbb
or
cmp
cdq
xor
jmp
or
cmp
mov
in
mov
out
fdivrp
daa
in
cmp
mov
pop
hlt
xor
out
cld
mov
adc
add
add
stos
xor
push
xor
jl
mov
enter
fnclex
movs
pop
lock
arpl
es
push
or
lock
es
sbb
xor
and
and
loope
cmps
push
jg
pop
and
fld
fldcw
fistp
fild
and
fimul
test
jns
fstp
mov
shl
outs
or
jmp
cmp
fdivr
xchg
imul
adc
jne
adc
push
ja
stos
and
push
out
inc
in
jno
mov
lahf
nop
jb
cmp
push
sbb
inc
dec
pop
jne
cmp
loope
or
add
cld
and
add
push
mov
mov
pusha
mov
or
ror
repz
cmp
inc
(bad)
aam
out
or
xlat
and
xchg
adc
cdq
dec
adc
xchg
or
cmp
ss
lahf
xor
xchg
out
cmp
add
stos
pusha
and
mov
adc
(bad)
pop
jne
dec
inc
inc
mov
mov
and
call
add
jp
aam
mov
push
mov
je
cmc
sbb
jl
sub
stc
xchg
cmp
xor
jmp
jo
cmp
mov
fidivr
and
not
icebp
sub
adc
(bad)
and
frstor
cmp
popa
std
jle
mov
adc
fnstenv
dec
popa
add
inc
and
jle
imul
adc
cmp
ret
push
pop
sbb
(bad)
stos
push
adc
dec
setg
mov
xor
cmp
inc
clc
dec
movs
mov
fist
or
sub
mov
pusha
adc
push
mov
sub
ret
mov
inc
or
inc
sbb
fmul
adc
inc
jmp
sub
dec
or
xchg
aam
shl
add
sbb
mov
cmp
pop
mov
push
add
jns
neg
mov
fsubr
or
jl
cdq
ds
mov
sbb
or
hlt
mov
cdq
add
add
xchg
movs
add
mov
sysret
addr16
cmp
iret
js
pop
adc
fist
jmp
adc
mov
adc
push
aam
test
cmc
dec
iret
jmp
xchg
mov
xor
mov
push
ins
jns
cmp
pop
or
rol
adc
mov
adc
shl
enter
sbb
sbb
jbe
lods
adc
cs
push
sub
or
fistp
fwait
ror
call
mov
pop
and
and
adc
mov
mov
loop
cmp
xor
stos
es
jge
and
mov
mov
pop
and
or
dec
rol
loop
adc
enter
xor
xor
adc
ds
sbb
int3
push
retf
mov
push
jo
add
or
nop
pop
mov
push
push
push
je
sbb
in
or
in
clc
add
in
sahf
add
ins
or
xor
cld
enter
js
sub
ret
add
dec
popf
popa
xlat
jmp
leave
and
add
ins
mov
add
mov
and
enter
mov
add
popf
neg
sbb
mov
stos
les
(bad)
ins
xor
jg
ret
jo
fisubr
shl
add
xor
leave
add
jmp
sub
pmaxub
xor
inc
xor
mov
fidivr
push
xchg
inc
std
(bad)
adc
shufps
push
mov
or
retf
mov
push
hlt
inc
xor
add
dec
rcl
(bad)
and
fidivr
sbb
fsubr
cld
and
movs
push
fidiv
sbb
cmp
in
adc
cld
rcl
hlt
shrd
sbb
adc
in
imul
jge
sbb
jo
pop
add
cwde
xor
enter
mov
add
dec
jmp
add
xchg
lock
add
push
or
ror
inc
call
xchg
xor
adc
xor
cmp
movs
or
popa
or
mov
retf
jo
mov
in
and
imul
pop
sbb
js
les
jb
xor
scas
jmp
adc
pop
adc
neg
mov
cmp
sar
shl
xchg
shl
mov
xchg
sbb
xor
jle
mov
sar
pop
jmp
scas
add
fs
dec
enter
inc
dec
pop
or
or
sbb
pop
push
sbb
add
int
push
rol
cmp
clc
push
stos
mov
mov
test
out
cmp
pop
outs
mov
xor
sub
std
add
adc
mov
jp
add
sbb
sub
out
jo
ret
push
aaa
loopne
aam
adc
add
push
fwait
adc
mov
(bad)
xchg
inc
or
rol
xlat
ror
ret
aaa
push
shr
push
lods
push
fld
add
jno
push
push
inc
and
mov
push
aas
xor
movs
xor
loopne
xchg
fdiv
pushf
add
adc
jbe
and
or
inc
(bad)
rcr
mov
push
sbb
(bad)
repz
sbb
sbb
and
sahf
inc
push
sbb
jne
cmp
mov
addr16
out
inc
add
rcl
or
cmp
lods
mov
div
sub
sbb
push
jo
cli
push
push
stos
movs
push
xchg
push
push
dec
and
cld
jl
loopne
jge
loopne
ret
or
mov
inc
xchg
jae
add
into
sbb
sbb
mov
add
jp
aad
sahf
clc
gs
or
clc
data16
xlat
imul
(bad)
xchg
sbb
push
inc
je
dec
leave
psubusb
jmp
xor
mov
inc
pop
pop
popf
sbb
lods
inc
adc
sbb
mov
adc
cmps
clc
push
mov
ret
xchg
sbb
add
leave
push
scas
and
out
add
add
pop
mov
or
add
mov
push
push
adc
sub
jle
mov
sub
imul
mov
push
push
pop
lea
mov
jne
add
aaa
sbb
pop
call
pop
aam
das
xchg
sbb
add
call
pusha
push
jmp
sar
test
or
repnz
es
dec
dec
mov
lock
cmp
dec
jmp
pop
adc
push
sub
adc
inc
and
add
es
shl
nop
mov
aaa
lods
cwde
sar
and
test
mov
or
(bad)
add
dec
sub
jmp
int
adc
cmp
jl
ss
cmp
je
test
les
mov
adc
push
jl
push
mov
js
xchg
and
jmp
mov
push
jg
ficom
ins
fisttp
or
syscall
ins
test
cmp
push
loope
dec
cmp
add
sub
mov
xchg
push
add
sub
loop
stos
sub
add
push
xchg
pop
mov
loopne
or
or
cmps
mov
or
loop
sahf
std
mov
clc
pop
add
or
add
add
test
je
sbb
clc
mov
iret
pop
pushw
nop
arpl
xor
inc
rcl
in
dec
jmp
add
jl
loopne
mov
xchg
dec
hlt
cld
movs
cmp
xor
(bad)
stc
mov
inc
push
and
sub
mov
movsx
movs
stos
mov
mov
and
add
bound
push
jecxz
or
mov
add
push
cmp
mov
scas
in
inc
adc
or
sub
adc
sub
jno
aam
scas
inc
je
sbb
and
adc
ret
dec
jns
or
sub
pop
mov
in
cmp
jae
or
jae
lods
rcl
jmp
and
shr
sub
jg
mov
mov
and
inc
cmps
enter
cld
lock
je
dec
mov
push
add
pop
jne
adc
jl
sbb
dec
or
add
pop
retf
in
adc
xor
xchg
cmp
jb
dec
pop
pusha
and
jbe
push
or
add
lea
add
(bad)
aas
cmc
cmp
loope
xchg
cmp
sbb
mov
test
inc
pushf
jl
outs
std
xlat
add
stos
stos
push
stos
pop
or
shl
add
or
dec
cwde
out
add
in
pop
mov
add
or
mov
or
inc
lea
lods
fbstp
cwde
pop
sub
inc
shl
sahf
test
repz
or
or
shl
not
test
fadd
into
cmp
int
cld
pop
repz
jp
pop
and
mov
mov
mov
inc
adc
iret
test
and
mov
add
call
or
jb
cmp
add
and
xor
cmp
ds
jb
inc
jae
cmc
push
sbb
dec
div
adc
jns
sahf
sub
inc
cs
push
pop
and
xor
adc
jge
lea
enter
das
movs
stos
adc
in
dec
xchg
sbb
mov
cmp
jge
inc
sbb
icebp
and
sub
(bad)
sub
retf
xchg
loop
push
ret
das
movs
out
(bad)
daa
ds
(bad)
(bad)
out
and
js
lock
neg
lea
xor
mov
or
sbb
and
aam
out
fcom
sub
mov
rcr
pop
stos
shl
and
into
xchg
inc
mov
xor
pop
or
xor
pop
dec
lea
push
ror
mov
lods
pop
lds
adc
dec
and
repnz
dec
sub
lock
inc
rcr
jl
lea
mov
adc
mov
push
mov
add
pop
push
push
jb
mov
repnz
inc
xchg
mov
inc
clc
xor
cmp
and
(bad)
cmc
hlt
push
cs
mov
mov
pushf
adc
sbb
or
lea
(bad)
leave
fs
inc
movs
addr16
std
mov
stos
dec
nop
jl
mov
std
or
arpl
sub
sbb
loopne
jg
jne
movs
and
stos
dec
into
out
add
cmp
and
iret
and
dec
sbb
add
out
and
jge
sub
bound
push
jge
pop
mov
or
shl
pusha
mov
test
gs
loope
mov
or
(bad)
stc
inc
loop
shr
push
hlt
mov
jge
stos
retf
and
jne
mov
add
mov
xchg
mov
test
xchg
test
inc
sbb
nop
dec
in
into
mov
movs
repnz
mov
mov
mov
les
mov
cmp
or
nop
ror
push
nop
(bad)
adc
or
(bad)
fwait
cmps
pushf
mov
cmp
xchg
and
cmp
push
or
lods
mov
pop
or
cmp
(bad)
dec
ss
jne
inc
jmp
push
mov
cs
or
and
push
add
lea
cmp
ja
pop
dec
ins
add
xchg
into
mov
or
or
cmp
xor
sbb
leave
push
call
xchg
mov
or
inc
loop
jmp
inc
mov
out
mov
ins
movs
and
jmp
mov
inc
sti
test
stos
popf
add
scas
cmp
jg
dec
clc
and
cmp
jle
jle
aas
test
xchg
stos
push
jmp
test
cld
mov
or
test
jbe
mov
xchg
adc
add
lock
adc
dec
push
mov
add
mov
ret
(bad)
shl
mov
pop
jge
(bad)
out
jnp
into
push
stc
sub
mov
jmp
jne
repnz
jae
scas
and
sbb
popa
inc
cmp
jo
xchg
xchg
fist
dec
rcl
(bad)
bound
jns
js
lahf
and
cmp
dec
or
or
pop
or
stos
mov
shl
stc
sub
cmp
mov
lods
sub
rcl
jmp
mov
loopne
in
inc
sti
jge
les
test
nop
mov
jle
fs
add
jbe
lock
mov
test
and
mov
fld
repz
push
xchg
xor
enter
mov
call
sub
lock
les
stc
push
adc
stos
cmps
xor
(bad)
push
push
sbb
inc
jmp
push
jg
aam
sub
push
mov
dec
loope
jmp
cdq
inc
hlt
in
cmovne
jo
xor
pushf
xor
nop
push
cwde
push
jo
inc
dec
dec
adc
pop
push
sbb
test
test
inc
and
cmp
adc
rol
pusha
jp
cdq
sub
mov
mov
sub
and
xor
xchg
or
adc
inc
kmovd
push
and
fsubrp
lods
sar
mov
popf
jge
and
mov
sbb
pop
test
sbb
cmp
jb
mov
adc
or
test
into
pushf
mov
and
retf
or
(bad)
and
clc
jne
mov
rol
or
jne
push
xor
fisub
xor
and
(bad)
repz
and
pop
xchg
std
mov
or
mov
aas
into
ja
mov
clc
fwait
stos
push
and
(bad)
jne
inc
test
jno
cmp
and
jne
test
into
dec
push
inc
(bad)
jne
inc
or
cmp
push
outs
adc
and
hlt
int3
and
jne
xchg
lea
test
scas
cwde
xchg
test
mov
pushf
ins
push
lea
call
and
in
cmp
jecxz
sbb
scas
ret
inc
pop
into
lea
cmp
xor
mov
and
cld
je
mov
in
mov
lock
dec
pushf
sub
sub
cld
push
int
sbb
sti
jg
add
popa
mov
test
js
mov
rcr
gs
pop
add
jmp
or
push
scas
jne
mov
jae
bound
or
adc
inc
mov
add
fs
mov
fs
and
adc
mov
shr
shl
shr
xor
setl
dec
jo
push
ret
or
outs
mov
or
ret
mov
aam
sub
cmp
and
es
xor
add
ficomp
add
es
ret
jne
jmp
jmp
or
aad
mov
and
outs
or
mov
jo
add
mov
aam
cwde
or
(bad)
jmp
jmp
dec
nop
daa
mov
fwait
out
retf
into
jmp
lods
sbb
pop
and
xchg
shr
cmc
add
jp
sub
int3
and
sbb
jp
retf
bound
inc
jmp
sub
push
push
sbb
mov
in
mov
push
inc
xor
outs
pop
mov
inc
mov
(bad)
inc
xor
adc
mov
neg
clc
mov
stc
add
cmp
out
ret
sti
cli
punpckhbw
or
repz
je
je
add
xchg
leave
loope
adc
push
outs
mov
int3
int3
push
and
xchg
push
sub
jbe
pushf
data16
popf
movs
jo
or
fdivr
dec
sar
data16
jmp
or
repz
cmp
aaa
mov
sbb
ins
js
stos
mov
mov
or
pushaw
mov
jb
jae
mov
movs
scas
pop
xchg
and
push
inc
adc
and
mov
imul
inc
jne
ss
jmp
sbb
push
xchg
jb
mov
sar
aam
ja
dec
adc
sub
mov
pop
sbb
pop
cmp
outs
mov
jnp
add
fwait
cmc
aaa
sbb
dec
aas
push
retf
imul
jno
loop
sbb
into
add
shr
inc
sub
jg
push
mov
in
sar
int3
pusha
loopne
mov
fmul
not
es
jmp
mov
test
jns
mov
cwde
fiadd
xor
push
mov
adc
mov
fidivr
jbe
mov
sub
inc
xor
cld
rcr
jle
repnz
sbb
shl
in
mov
fnclex
adc
and
(bad)
and
push
inc
(bad)
xor
repnz
cmps
add
mov
dec
xchg
shr
sbb
int3
jae
sbb
and
sbb
call
enter
lods
fs
inc
or
test
or
jo
movs
add
pusha
mov
jne
lea
out
shl
out
dec
lods
rol
mov
lea
retf
and
dec
pop
xchg
inc
xor
xchg
dec
push
outs
dec
dec
lds
movs
jbe
test
ret
movs
movs
repz
movs
inc
push
nop
xchg
mov
add
dec
mov
mov
ror
mov
(bad)
(bad)
jle
cmp
add
and
sub
xor
add
shr
or
xor
int3
and
add
add
push
jo
sub
push
retf
(bad)
rcr
inc
rol
lock
mov
cld
hlt
or
shl
or
mov
(bad)
or
dec
sub
mov
enter
lock
in
add
std
stc
bnd
retf
jae
div
add
in
cli
inc
cli
div
sub
bound
out
add
loopne
cmps
adc
sub
outs
das
xor
xchg
sbb
push
push
mov
fimul
cmc
lahf
ins
test
adc
fidiv
fldenv
enter
fsub
jecxz
mov
ins
jae
cmp
dec
rol
xor
lock
aas
mov
ja
stos
inc
add
or
or
pushw
sbb
loop
xchg
mov
sbb
jne
sbb
inc
push
or
inc
lods
sbb
xchg
aad
ficomp
mov
mov
and
pop
sahf
fild
sbb
cmp
sub
fs
or
and
sub
inc
dec
ins
stos
or
or
mov
sub
test
fmul
or
sub
push
adc
sbb
fcmovu
mov
mov
ins
test
imul
mov
pop
push
sbb
test
sar
adc
adc
neg
jns
mov
(bad)
test
enter
mov
out
or
add
or
inc
lock
mov
retf
xchg
movs
jne
pand
leave
cmp
pop
ror
dec
jne
in
clc
je
cwde
sbb
add
jmp
sub
stos
mov
and
add
inc
mov
call
dec
cmc
add
pop
outs
add
adc
gs
add
sbb
sbb
add
mov
pop
pop
inc
rcr
mov
mov
adc
neg
js
xchg
(bad)
and
imul
pop
je
adc
imul
call
push
mov
mov
push
and
leave
and
call
push
push
in
xlat
add
fbld
es
sbb
jle
cli
sbb
cli
(bad)
mov
sbb
or
adc
shr
enter
jg
or
lea
or
sbb
pusha
add
ds
dec
clc
rol
jp
ja
fild
inc
dec
enter
sahf
mov
jae
add
xor
or
leave
les
ds
mov
add
lea
mov
or
mov
inc
test
call
mov
dec
(bad)
shr
cmp
jge
and
cli
jmp
cmp
or
add
dec
cmp
jae
(bad)
inc
dec
add
add
fadd
sbb
in
mov
mov
hlt
xchg
sub
dec
mov
jb
add
or
aas
add
and
mov
dec
and
add
lds
inc
mov
jo
ret
adc
dec
sti
sbb
add
add
add
das
or
ret
pop
fs
xor
mov
adc
push
mov
jl
lea
jl
adc
push
push
push
or
cmps
outs
fs
push
or
add
or
je
xchg
add
add
xchg
cmp
sbb
adc
sub
ret
and
lods
or
mov
or
fisubr
xchg
xchg
xchg
adc
or
jae
cmp
mov
(bad)
mov
mov
inc
and
cmp
xor
into
sub
xor
inc
and
ins
pusha
(bad)
pop
sub
and
pop
pop
xchg
xor
add
cvtpi2ps
fmul
dec
and
ret
or
pop
ins
scas
fstcw
xchg
adc
jl
inc
push
pop
jne
xor
jbe
or
or
add
mov
movs
push
or
loope
and
(bad)
in
or
jp
mov
or
adc
xlat
jp
inc
out
pop
imul
pop
iret
jnp
jnp
jb
jne
and
mov
add
and
fld
out
and
mov
cmp
movs
push
movs
push
arpl
jp
mov
mov
sub
test
sub
sbb
inc
jo
push
xor
shl
mov
xchg
xchg
push
pusha
fadd
add
or
add
add
mov
bound
cdq
dec
xor
push
ss
or
add
or
adc
xchg
xchg
mov
sub
repz
and
sbb
inc
jg
into
push
retf
into
mov
imul
in
sub
push
pop
xor
aaa
nop
pop
sahf
pop
mov
sub
inc
or
shl
(bad)
or
int3
cli
sub
inc
add
sbb
adc
adc
mov
test
lahf
pop
and
loop
xchg
out
adc
add
repnz
add
add
inc
mov
cdq
test
and
je
pop
inc
call
or
(bad)
sub
jmp
jb
sub
inc
xchg
movs
in
pop
xor
xchg
(bad)
pop
mov
ret
sub
xor
scas
cwde
or
push
cmp
mov
fadd
mov
dec
and
call
inc
sbb
adc
repz
inc
and
adc
pop
mov
iret
mov
aaa
or
add
mov
retf
add
and
and
cmp
movs
adc
dec
ins
mov
or
add
pop
fcmovu
(bad)
inc
jbe
add
jl
in
sbb
cmp
push
sbb
add
sub
pop
or
and
iret
dec
mov
(bad)
out
bound
in
inc
sar
retf
mov
mov
clc
or
xchg
jo
ror
or
es
push
or
mov
xchg
lods
push
dec
aas
movs
loopne
or
ja
cmp
mov
or
int3
lock
icebp
adc
inc
xchg
loop
out
adc
adc
pushf
shr
fmul
fld
ret
add
(bad)
outs
xor
cmps
push
lock
dec
retf
cs
dec
pop
je
and
arpl
sub
pop
(bad)
rcl
jmp
add
jmp
xchg
idiv
dec
xchg
je
cmc
sub
daa
pusha
scas
push
or
es
adc
cmp
mov
mov
out
and
dec
push
fcomp
retf
mov
jmp
mov
and
test
rcr
sti
ds
ja
add
mov
pop
mov
and
out
popf
or
push
nop
add
or
ss
and
sbb
lock
enter
ret
xor
in
jae
rcr
(bad)
fbld
daa
daa
cmp
ret
adc
pop
cld
cmp
ins
stos
in
ret
xchg
in
mov
jne
(bad)
or
rcl
pop
popa
loopne
adc
xchg
rol
dec
les
shl
jo
xchg
int3
mov
and
inc
call
ins
jecxz
push
pushw
push
mov
cs
jne
jb
cmp
sbb
sub
push
movs
inc
jmp
mov
dec
xchg
push
lds
fmul
and
into
fwait
xchg
(bad)
or
aam
fsubr
and
(bad)
cmp
mov
fs
enter
(bad)
lock
dec
pop
mov
(bad)
sbb
(bad)
je
mov
dec
jb
lock
ss
pop
xor
inc
push
retf
stos
mov
(bad)
jmp
add
dec
loopne
or
add
mov
lahf
fadd
lahf
in
mov
enter
sti
pop
(bad)
in
pop
stos
push
mov
pop
pop
push
popa
cmp
inc
jae
inc
je
inc
in
leave
cmp
jb
fldenv
mul
push
xchg
clc
adc
fs
je
mov
inc
ins
sbb
retf
or
mov
cmp
or
fiadd
cmove
in
or
add
lods
pop
shr
addr16
mov
xor
add
hlt
mov
imul
cdq
call
adc
mov
vmovaps
or
sub
lock
and
pop
(bad)
cmp
add
mov
mov
int3
xor
sub
fmul
sub
nop
or
or
dec
repnz
dec
mov
and
and
cmc
rol
mov
pop
jno
lock
movs
pop
test
xchg
mov
ja
add
ror
adc
ret
arpl
jo
jle
adc
enter
pop
push
add
push
repnz
enter
cld
pop
mov
push
call
in
xor
lods
mov
scas
xchg
retf
in
paddsb
jae
les
lock
push
ret
pop
or
dec
call
and
in
xor
or
ror
mov
lds
push
test
jno
loop
inc
addr16
in
adc
jo
rol
and
rol
sub
add
or
adc
nop
xlat
icebp
shl
mov
adc
pop
xchg
adc
push
sub
jmp
and
and
dec
mov
rcl
adc
shr
and
shr
jb
inc
call
stc
push
jnp
mov
cmps
gs
and
cmp
inc
cmps
dec
cmp
push
ficom
sbb
mov
popa
cmp
ficom
test
jno
mov
icebp
out
sbb
pop
add
test
push
mov
loope
pop
or
or
mov
addr16
int3
in
inc
dec
push
dec
enter
add
inc
mov
push
adc
ins
fwait
cmp
pusha
pop
mov
and
mov
push
adc
mov
daa
mov
aad
lea
jbe
xor
mov
or
xchg
and
sbb
xchg
std
mov
lods
std
push
test
adc
or
and
js
pushf
and
sub
jo
(bad)
mov
int3
fild
xchg
sub
xchg
lea
add
and
pop
stc
mov
int3
call
inc
dec
sbb
xor
or
cmp
inc
xlat
push
push
jo
push
test
pop
adc
xor
push
sub
mov
outs
sub
ins
jne
fs
push
jns
clc
(bad)
leave
dec
xlat
in
add
adc
sbb
in
add
sbb
or
sbb
add
fsubr
icebp
fmul
push
xchg
lock
add
cmp
xchg
mov
cmp
fst
xor
xor
enter
sbb
dec
or
je
ss
mov
pushf
xor
in
inc
movs
mov
sub
xchg
add
push
mov
imul
es
fs
jl
inc
pusha
rcr
or
add
or
pusha
push
lock
xchg
stos
in
fiadd
pop
(bad)
(bad)
add
movs
smsw
mov
pop
enter
add
xchg
gs
daa
nop
inc
stos
jge
push
sti
(bad)
push
jmp
push
jge
leave
stc
inc
add
fld
fisttp
shr
jb
daa
hlt
call
js
hlt
movs
push
and
pusha
xchg
fadd
pop
cmp
popa
xor
xchg
mov
pop
fcmovnu
(bad)
cmps
ins
into
or
std
loop
in
retf
inc
cs
pop
mov
sub
icebp
pop
mov
jno
adc
sbb
fsub
ret
sub
cmp
fisub
dec
je
daa
inc
movs
mov
fist
in
loopne
aaa
add
add
jno
jmp
pop
sub
mov
or
adc
adc
test
cmp
call
cmp
outs
pop
mov
adc
push
mov
mov
aas
push
fidivr
leave
cmp
int3
mov
mov
addr16
cwde
mov
adc
cmp
ror
mov
in
and
test
in
fs
jnp
xchg
sbb
and
enter
push
and
or
fist
xchg
pop
add
cwde
mov
mov
xor
adc
push
aam
enter
mov
fbld
aam
ins
stos
pop
pop
ins
mov
or
cmp
adc
lods
and
(bad)
push
loopne
addr16
jl
loope
add
das
mov
add
jns
and
push
and
inc
push
in
lock
jmp
fs
pop
jnp
mov
daa
stos
clc
mov
test
lods
add
push
sbb
cmp
cmp
push
fcomp
gs
(bad)
and
mov
sub
retf
fstp
cmps
adc
cld
inc
pop
sbb
inc
ins
and
imul
(bad)
jb
cmp
sti
loopne
adc
jmp
and
dec
xor
leave
mov
nop
and
jl
lds
imul
bsf
and
and
add
xlat
dec
jmp
or
call
pop
sub
sub
loop
dec
inc
sub
pop
mov
cmps
inc
inc
add
xchg
stos
xor
push
adc
mov
add
in
enter
cmp
fs
cmp
xor
adc
cmp
lea
adc
push
test
push
in
pop
lods
stc
ins
push
rcl
jbe
hlt
cli
add
(bad)
sar
mov
push
ins
dec
jnp
(bad)
lock
adc
aad
stc
cwde
stc
in
push
push
or
adc
push
xchg
push
cld
jno
cmp
sub
jg
cdq
mov
mov
rcr
nop
sbb
cmp
imul
lahf
and
adc
xchg
or
mov
es
enter
in
add
test
gs
and
add
ja
mov
fdivr
cmps
lods
idiv
sub
clc
adc
pop
leave
and
rol
dec
cs
out
jnp
pop
nop
fs
fdiv
adc
pop
rol
inc
push
sbb
xchg
imul
push
std
outs
and
adc
out
or
(bad)
push
xchg
or
adc
mov
or
inc
(bad)
in
pop
rcr
xor
inc
enter
pushf
movs
cs
dec
aam
test
jno
pop
outs
ret
adc
mov
nop
xchg
les
adc
xchg
pop
lds
adc
lock
mov
jns
test
jne
xchg
xor
mov
inc
psubsb
mov
pop
ins
sub
xchg
dec
pop
ror
je
adc
cmp
push
ficomp
cli
sub
push
loop
sub
in
popa
jl
inc
mov
jmp
mov
adc
pop
ins
nop
dec
fcmove
mov
mov
test
cwde
repnz
xchg
not
(bad)
sbb
adc
jbe
mov
dec
dec
shr
or
mov
sbb
ss
dec
add
ins
and
jb
add
movs
xchg
not
loopne
sbb
jae
fadd
jmp
jmp
jmp
lea
add
add
cmp
popa
outs
stos
sti
jno
das
xor
cmp
push
xor
arpl
pop
xor
mov
lds
mov
cmp
daa
sbb
jo
rcr
dec
das
mov
xor
bound
push
pop
jb
rol
lock
xor
xchg
mov
nop
add
and
rcl
out
and
xchg
dec
movs
jb
scas
xlat
cmp
jb
mov
ins
pusha
out
lds
scas
das
js
xlat
jae
push
in
dec
loope
jmp
jb
dec
je
cmc
clc
xchg
cmp
cmp
or
mov
das
sbb
xchg
dec
jb
je
xor
cmp
inc
push
in
inc
clc
dec
sbb
sbb
pop
mov
ins
das
js
sbb
add
xchg
or
and
mov
clc
(bad)
cmp
jne
cmp
mov
je
or
push
push
dec
pop
dec
cs
ror
add
das
test
fisttp
cs
js
inc
arpl
enter
dec
sbb
lds
stc
das
nop
add
fisubr
lds
add
dec
pop
mov
dec
lds
pop
sbb
and
sub
enter
dec
sub
dec
cmps
mov
add
mov
rcr
arpl
in
call
cmp
sub
nop
enter
in
pop
sbb
mov
push
jnp
arpl
(bad)
or
lahf
mov
cmps
pop
rcl
or
and
es
sub
retf
mov
outs
jae
dec
jb
popa
jo
adc
cmp
in
lock
shl
mov
bound
xchg
bound
mov
bound
ins
lock
xchg
mov
jae
in
(bad)
sbb
adc
jae
nop
inc
push
cmp
sbb
cwde
je
jae
sbb
enter
je
enter
je
enter
je
jne
xchg
jne
jne
sbb
enter
jne
or
jbe
cmp
lods
lods
or
call
adc
cmp
jns
sub
cmp
fcom
or
mov
mov
dec
mov
aaa
adc
or
nop
inc
push
call
push
cmp
jnp
jnp
and
jnp
dec
adc
cmp
or
push
adc
loopne
adc
cmp
inc
sub
movs
or
adc
adc
pop
jl
and
adc
clc
pmulhw
mov
push
stc
je
push
xchg
fdiv
dec
mov
mov
add
add
ret
iret
repz
fsubr
stos
mov
out
ss
xchg
sahf
xor
cmps
ror
ins
sahf
fptan
xor
cmp
repz
xchg
addr16
inc
sahf
out
out
jbe
ss
out
ss
aaa
aaa
aaa
out
sahf
out
aaa
aaa
aaa
aaa
sahf
out
lahf
aaa
cmp
push
sbb
dec
gs
out
jle
scas
enter
iret
mov
add
iret
repz
sbb
out
cmp
jns
out
test
cmp
mov
add
xor
mov
add
outs
jp
add
repz
outs
cld
adc
add
adc
retf
and
pop
adc
jne
stc
adc
pop
shl
nop
and
inc
cmp
sti
lock
adc
sub
in
ds
clc
mov
fcmove
push
(bad)
call
cdq
je
and
mov
push
sar
dec
call
sbb
sub
jmp
cwde
inc
nop
mov
mov
or
stc
add
jmp
or
pop
push
adc
dec
mov
shr
ds
dec
leave
loop
sti
aas
fdivr
mov
gs
dec
mov
stc
push
mov
xor
inc
xlat
add
fwait
test
(bad)
movs
inc
add
(bad)
frndint
shl
mov
mov
xchg
idiv
mov
sbb
mov
ds
pop
and
jg
dec
sahf
push
jno
movs
scas
shr
(bad)
mov
outs
inc
aas
and
into
mov
push
scas
cs
out
mov
cmps
lock
jl
fwait
and
shr
test
sbb
push
(bad)
test
push
push
outs
gs
div
push
inc
jbe
jg
mov
or
jb
popa
add
data16
and
out
fidiv
dec
gs
scas
cld
dec
jnp
ss
and
add
out
out
xor
mov
dec
sub
pushf
mov
mov
sub
xor
iret
leave
repz
inc
dec
into
cmp
push
pop
jne
sahf
out
sahf
ja
pop
bound
sub
dec
in
sub
bound
popa
out
pop
(bad)
cmp
and
xor
add
or
mov
sub
addr16
pop
cld
sbb
push
outs
imul
outs
into
js
gs
nop
pop
shl
outs
aas
lods
push
clc
xchg
bound
and
ins
outs
arpl
or
popa
inc
push
add
lea
push
imul
sub
mov
push
cmp
dec
outs
je
fidiv
push
adc
aaa
lods
jns
je
and
ins
jo
gs
lock
mov
dec
dec
inc
cmovle
dec
enter
dec
(bad)
ja
stc
inc
push
inc
push
pop
inc
push
pop
push
inc
aam
dec
dec
dec
inc
push
inc
or
sub
pop
fcomp
(bad)
ja
ins
push
pop
pusha
bnd
mov
xor
xchg
dec
(bad)
jg
cmp
inc
outs
ret
add
add
or
or
(bad)
(bad)
dec
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
(bad)
(bad)
jmp
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
dec
inc
inc
leave
add
dec
dec
dec
dec
dec
dec
dec
jbe
mov
pop
pop
pop
pop
pop
mov
pusha
into
arpl
sub
imul
xchg
ds
jb
jne
ja
jns
jnp
jge
jg
pop
cs
push
push
cmp
sub
xchg
cmp
push
movs
inc
loope
aaa
push
mov
inc
(bad)
adc
and
sub
push
leave
and
dec
add
pop
jb
pop
test
or
adc
pop
jb
add
adc
and
push
add
add
add
add
mov
ja
cmp
cmp
adc
or
add
or
out
call
add
test
(bad)
(bad)
dec
(bad)
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
(bad)
(bad)
(bad)
jmp
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
enter
(bad)
dec
retf
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
(bad)
jmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
add
add
ror
adc
sub
nop
dec
ret
ins
cli
jmp
inc
js
je
jb
arpl
jae
ins
add
arpl
outs
mov
add
add
add
inc
add
fnstcw
dec
outs
xor
inc
adc
repnz
fstp
add
jae
jb
rcpps
push
popa
ins
jne
inc
xor
inc
dec
push
daa
dec
test
add
and
or
(bad)
nop
xchg
xchg
es
and
inc
mov
in
cld
cmp
dec
add
add
jae
add
sub
dec
add
and
in
sbb
das
das
and
daa
(bad)
push
cmovno
xchg
mov
or
ja
jbe
dec
dec
je
outs
push
push
(bad)
lods
fnsave
dec
cmps
jne
addr16
jae
mov
mov
add
ins
out
pop
outs
dec
div
pop
cmp
ss
popa
push
mov
fdivr
outs
bound
jne
outs
popa
pusha
add
imul
inc
mov
pop
pop
imul
ins
out
iret
jns
out
out
idiv
sahf
jne
arpl
ins
loopne
pop
pop
push
pop
inc
ror
fidiv
fs
sub
mov
dec
pop
out
inc
addr16
lea
fidivr
pop
neg
iret
(bad)
fdiv
mov
lahf
(bad)
jg
iret
iret
cmp
dec
cmp
cmp
fs
dec
and
xor
add
push
das
das
adc
mov
inc
inc
gs
push
aas
test
pop
dec
arpl
push
inc
idiv
clc
popa
sub
addr16
xor
ins
xchg
pop
mov
inc
jo
imul
bound
push
inc
popa
outs
adc
jae
scas
cmps
xchg
pop
outs
into
cmp
addr16
popa
je
jb
xor
mov
jae
push
gs
fstp
ficomp
push
jne
dec
outs
outs
and
jbe
ja
pop
dec
inc
aas
sbb
cmps
call
data16
adc
push
add
fisttp
push
add
add
add
jg
push
and
push
pop
pop
or
aaa
xor
push
push
pop
and
mov
or
pusha
add
add
js
pop
sub
jmp
out
int3
add
sbb
xchg
jnp
rol
xchg
test
mov
div
add
pop
(bad)
daa
push
cmp
sahf
jge
push
push
and
sub
jb
int3
push
add
mov
or
test
ret
pusha
out
cld
or
mov
sbb
xchg
rcr
in
mov
bound
or
and
push
sub
jb
imul
in
mov
dec
scas
inc
or
fcmovnbe
out
out
add
es
cs
stos
nop
fadd
outs
dec
outs
push
adc
xchg
ss
push
ror
xor
sub
mov
and
and
aas
dec
fisttp
fs
data16
cmps
ins
push
push
rol
loopne
dec
pop
loopne
jge
dec
jne
outs
dec
and
popa
idiv
xchg
aas
imul
sahf
ins
jp
repz
ja
mov
arpl
and
out
add
add
aas
outs
jmp
and
add
jne
int
retf
stos
ins
sub
push
imul
and
scas
ja
cmp
mov
inc
push
data16
xor
xchg
sub
call
jb
inc
lock
add
lahf
cmp
pusha
sbb
outs
inc
xlat
fimul
or
mov
fisubr
cs
out
nop
mov
je
loop
sti
jo
jnp
sbb
jo
arpl
push
mov
outs
fist
(bad)
sbb
ins
mov
pop
and
mov
scas
fild
push
das
jb
(bad)
icebp
loopne
ret
fidivr
cs
xor
or
(bad)
xor
or
push
daa
outs
and
lds
add
(bad)
sub
sub
push
push
sbb
cmp
xchg
lahf
aaa
jg
dec
pop
pop
ja
iret
push
ss
(bad)
dec
fbstp
mov
jbe
jb
jne
ins
push
stos
jae
mov
mov
js
mov
mov
or
jg
cmp
ja
fild
(bad)
lahf
outs
mov
pop
ins
aas
or
arpl
cmp
xchg
adc
mov
xlat
pop
and
pop
(bad)
aaa
ins
xlat
imul
add
imul
inc
(bad)
test
imul
sar
(bad)
jae
jb
mov
pop
pop
mov
jae
push
lods
arpl
push
add
add
aas
inc
(bad)
pop
sbb
ins
pop
je
scas
jno
sub
mov
jg
loopne
loop
xor
jnp
jo
jge
mov
mov
xchg
mov
fwait
lods
popa
fs
add
lsl
or
ror
js
xor
pop
stc
jb
enter
adc
adc
sbb
pop
mov
sbb
sbb
sbb
repnz
xchg
sbb
call
loopne
inc
mov
and
js
jns
jp
enter
cld
sub
or
loopne
loop
add
mov
repz
sub
sub
outs
bound
dec
jb
in
fnsave
(bad)
or
add
cmp
loope
push
outs
mov
dec
ins
idiv
ret
idiv
imul
fdiv
inc
inc
and
mov
fwait
out
add
cmp
dec
ins
ins
gs
shl
jae
jno
outs
arpl
inc
imul
pop
lock
ins
jo
inc
inc
jne
fldenv
lock
pop
and
jg
jle
ins
fs
xchg
imul
jbe
imul
bound
outs
adc
popa
inc
mov
cmp
inc
gs
jne
mov
and
arpl
imul
pop
addr16
xor
outs
ins
sahf
outs
jnp
inc
or
inc
push
imul
out
int3
mov
push
push
cmp
repnz
pop
imul
and
and
dec
outs
es
fs
rcr
jae
popa
push
dec
data16
mov
pusha
sbb
sti
outs
popa
jo
fisub
lock
cmp
pusha
add
and
and
inc
lock
adc
daa
pop
outs
pop
cmp
add
jb
or
inc
je
loopne
mov
push
mov
idiv
gs
or
imul
(bad)
pop
aas
add
lock
mov
fs
ins
in
push
mov
sub
jae
or
xchg
pop
maskmovq
test
cmps
test
je
sub
imul
push
xor
inc
sbb
jo
add
idiv
jae
push
lar
test
adc
add
xchg
jp
mov
push
out
dec
cmp
push
and
jo
je
outs
push
or
call
je
jne
out
call
sbb
pusha
ins
pop
aaa
mov
sbb
dec
mov
js
inc
ja
bsf
sub
pusha
xor
pop
imul
outs
pop
or
enter
clc
es
out
pop
mov
inc
xor
out
fiadd
popa
data16
mov
xchg
popa
aaa
and
data16
cld
cwde
mov
sub
jb
(bad)
outs
aas
test
cmp
jp
gs
jp
cs
inc
inc
outs
pushw
lahf
push
cmps
push
jo
ins
daa
addr16
je
mov
pop
jle
outs
arpl
cdq
jge
or
inc
test
add
pop
add
jae
push
pavgw
or
adc
call
cs
ins
in
arpl
mov
jle
sub
pop
lahf
and
and
pop
in
imul
stos
popa
pop
mov
gs
ins
outs
fs
outs
ret
pop
cmp
pop
cs
pusha
in
fs
jae
cmp
or
popf
push
popa
cld
test
daa
arpl
inc
shr
cmps
inc
nop
data16
mov
jbe
loope
and
ins
bound
ror
imul
mov
xlat
sub
imul
ret
push
mov
(bad)
je
out
pop
xor
mov
dec
test
dec
outs
div
xor
sbb
jns
jae
daa
(bad)
mov
dec
imul
ins
hlt
into
ret
(bad)
push
push
addr16
cmp
pop
ins
jne
sub
addr16
mov
imul
push
popf
mov
pusha
jb
fcom
cmp
pop
(bad)
imul
addr16
push
pop
sub
push
pop
add
sub
xor
jns
(bad)
dec
popa
mov
push
imul
ret
cmp
fiadd
bound
jg
xor
sub
popa
imul
enter
add
test
pusha
mov
jbe
call
xlat
mov
jae
popa
lock
daa
ins
adc
daa
cs
retf
fisttp
mov
inc
jno
call
mov
sub
mov
arpl
jmp
sub
dec
push
prefetchnta
mov
inc
lock
dec
inc
pop
in
dec
in
inc
pavgb
dec
fmul
aam
dec
fsubr
xchg
push
shr
dec
xlat
push
(bad)
je
mov
mov
push
dec
mov
sbb
cmps
test
imul
sub
push
enter
push
call
xchg
imul
inc
test
dec
dec
xlat
ds
pusha
jg
lock
(bad)
inc
ds
imul
or
(bad)
jmp
dec
push
push
paddsb
push
fmul
(bad)
int
dec
lods
push
push
inc
dec
cwde
inc
push
dec
movs
test
js
fs
dec
push
imul
out
push
call
movs
test
dec
fmul
imul
dec
movs
rcl
inc
nop
pop
adc
xchg
cmps
ins
push
pop
pop
dec
fcomp
push
cmp
xor
xchg
imul
push
and
call
mov
scas
adc
inc
lahf
or
out
add
pop
inc
repnz
mov
cs
push
in
in
dec
inc
dec
sub
inc
int3
dec
pop
dec
enter
xchg
idiv
mov
push
push
dec
pushf
jbe
repnz
push
dec
lahf
mov
inc
or
pop
in
pusha
ret
in
lods
push
dec
pop
(bad)
out
sbb
wrmsr
dec
sub
or
sbb
adc
add
out
jg
or
sub
adc
sbb
add
dec
jge
inc
xchg
push
push
inc
sub
fst
rdtsc
ss
mov
push
retf
inc
add
es
pusha
movs
mov
cmp
or
loopne
mov
cmps
dec
ss
lock
and
inc
mov
bound
push
les
and
daa
aaa
jo
stos
(bad)
ins
popa
jae
and
jb
out
and
mov
and
les
jb
jns
daa
pop
jnp
mov
push
jns
gs
xchg
pop
pusha
push
or
pop
push
or
push
fild
jb
cmp
jo
fmul
xor
jbe
or
or
mov
and
inc
mov
pusha
inc
jbe
(bad)
push
test
stos
mov
fsub
push
push
sbb
push
(bad)
out
xchg
inc
inc
in
add
in
popa
clc
cmp
or
gs
rcl
and
lahf
out
or
adc
pop
pop
push
push
jae
or
jno
mov
cmp
xor
xchg
leave
jae
addr16
cmp
adc
or
xchg
mov
jp
inc
push
push
jp
test
fnstenv
repnz
and
stos
cmp
(bad)
fisttp
dec
jge
cmp
add
jg
sbb
and
push
inc
lds
push
call
mov
xor
inc
in
pop
lods
sbb
popaw
mov
shl
push
mov
pop
jns
pusha
push
(bad)
pop
das
je
cmp
xchg
daa
xchg
cmps
cmp
popw
pop
cmp
repz
es
cmp
push
das
push
sub
sub
inc
jl
push
addr16
mov
push
sub
sub
add
cld
jnp
cmp
push
and
add
sub
fnstsw
pop
sub
cmp
mov
cmp
and
add
xchg
pop
fdiv
cmp
das
jo
ss
sub
push
movs
imul
out
out
popaw
sbb
(bad)
pop
cwde
inc
cmps
dec
pop
sub
xor
(bad)
xor
push
jns
bound
je
push
add
jns
mov
clc
in
push
loopne
enter
sahf
sar
repz
push
dec
pop
mov
mov
jl
xchg
ins
push
push
fs
pop
pop
push
out
lahf
out
xor
dec
inc
sahf
out
sahf
inc
cmp
xor
sub
sahf
out
sub
sbb
out
sahf
out
adc
add
repz
add
clc
in
loopne
cmp
repz
mov
xchg
je
ss
repz
xor
jno
shl
jns
out
nop
jo
sub
out
sahf
sbb
adc
jo
aam
iret
repz
mov
sahf
int
sub
outs
fdivr
je
sbb
jg
in
test
mov
(bad)
cli
mov
outs
ja
je
ror
js
push
dec
jb
dec
outs
je
fsincos
mov
dec
clc
inc
div
mov
jne
daa
pop
lock
pop
lea
dec
mov
push
imul
push
push
and
inc
inc
aam
mov
or
(bad)
push
mov
test
xor
(bad)
dec
ins
mov
mov
sub
pop
ss
xchg
dec
sub
aad
popa
xor
xor
add
dec
sbb
ja
fadd
jg
cmp
and
push
es
imul
inc
pop
das
inc
jo
repz
pop
popa
rcr
mov
fidiv
ds
add
shr
sub
je
lahf
xlat
add
or
out
ins
fwait
jo
cdq
push
or
or
sahf
int
jmp
adc
adc
addr16
into
popw
into
sbb
inc
adc
mul
mov
je
rcl
aaa
pop
movs
imul
push
sub
(bad)
in
out
cmp
popw
or
push
push
jo
loope
push
data16
imul
add
fild
add
xlat
ss
je
sbb
pop
dec
call
push
inc
ss
jae
sub
pop
xchg
cmp
iret
mov
outs
fisub
push
aas
push
fdivp
sbb
xchg
imul
xor
mov
push
repnz
clc
clc
sahf
cmp
sub
stos
mov
or
popa
pop
test
das
dec
jo
inc
jnp
rol
mov
pop
ja
sub
js
add
in
mov
mov
stos
push
push
imul
inc
push
xor
xor
mov
xor
xor
xchg
push
cmp
outs
adc
adc
js
xlat
mov
inc
imul
xor
cmp
cmp
pop
daa
arpl
popa
test
bound
and
pop
jle
fcomp
pop
jg
push
pop
add
out
mov
dec
push
push
cs
les
daa
jecxz
div
adc
dec
push
mov
cmp
xor
sub
retfw
int
mov
retf
js
in
dec
push
add
xchg
mov
adc
mov
outs
sub
cmps
out
fisubr
xor
cmp
popa
mul
pop
cmp
add
retf
ja
cmp
fisubr
mov
dec
cmp
inc
loope
jae
pop
add
stos
(bad)
dec
push
adc
cmp
and
in
into
jl
outs
dec
je
aaa
add
mov
mov
xchg
jne
sub
pop
add
mov
push
fild
add
cmps
jmp
fidiv
and
fisttp
mov
xchg
or
rcl
dec
add
shl
push
mov
loope
(bad)
fist
scas
mov
outs
inc
test
pmaxsw
jae
jo
sahf
sti
cmp
pop
outs
(bad)
pop
jge
repz
add
push
jmp
add
push
xchg
push
pop
fimul
pusha
mov
adc
dec
mov
addr16
sub
lahf
dec
jmp
push
mov
add
aaa
and
fild
dec
push
out
push
pop
adc
retf
retf
fs
inc
(bad)
push
(bad)
ds
aad
dec
pop
jne
and
je
(bad)
(bad)
push
das
das
push
xor
arpl
aas
jae
arpl
jae
outs
xor
xor
jmp
cmp
shr
sub
addr16
pop
in
sbb
popa
retf
adc
dec
sti
arpl
(bad)
je
ja
(bad)
jo
jne
fisub
cmp
pop
shr
popa
pop
inc
add
sbb
pop
into
sbb
cs
push
(bad)
je
push
das
test
cmp
ja
sub
ja
push
dec
sub
bound
jecxz
sahf
(bad)
sbb
sti
cs
jbe
sub
add
fcomp
dec
sahf
in
stos
lods
push
addr16
pop
adc
push
jns
sahf
dec
pop
ret
aad
ss
out
(bad)
pop
rcr
rcr
adc
call
stos
ins
rep
fistp
or
popf
test
xchg
repnz
gs
pop
jmp
data16
pop
add
jp
fldenv
dec
test
cmp
push
cmp
sub
sahf
out
and
shr
rcl
or
iret
leave
xchg
in
cmp
push
nop
pop
jb
and
mov
stos
cs
add
and
dec
pop
bound
dec
jns
hlt
xor
xchg
sbb
cmc
hlt
fcmovu
push
or
dec
inc
mov
pop
pop
pop
test
push
xor
xor
mov
mov
add
pop
or
daa
outs
popa
ret
adc
dec
cmc
and
mov
jnp
push
xlat
dec
cmp
adc
add
test
mov
dec
je
mov
xchg
jb
push
inc
mov
aaa
test
dec
les
inc
and
ror
call
mov
(bad)
stc
jg
test
push
fdivr
(bad)
(bad)
jg
push
bound
dec
or
push
stos
mov
dec
push
add
daa
cmp
lods
xchg
sahf
lea
leave
data16
push
cdq
ss
xchg
cli
cdq
inc
cmp
cmps
mov
inc
xor
add
sbb
dec
sbb
pop
mov
or
out
mov
adc
xchg
js
ja
pop
popa
mov
jae
adc
ja
outs
pop
fnstcw
jnp
cmps
je
jle
das
out
xor
cmp
jno
cs
mov
pop
sub
popa
test
xor
jle
mov
push
xor
pusha
ret
sub
js
std
ja
mov
outs
xor
adc
push
push
add
add
outs
add
aam
and
or
inc
push
cmp
xor
pop
xor
dec
xor
xor
stc
add
pop
push
dec
xor
push
je
mov
xor
xor
xor
stos
jmp
xor
sbb
cli
xor
inc
xor
push
push
xor
push
inc
xor
fidivr
mov
xor
ja
push
add
mov
adc
test
dec
inc
xor
dec
addr16
jecxz
inc
jne
jmp
cmp
inc
push
icebp
mov
inc
push
inc
daa
mov
dec
popf
or
data16
dec
movs
add
jae
(bad)
push
or
aam
stos
arpl
jmp
add
add
jb
sub
dec
popa
push
rcl
es
loopne
pop
or
ins
mov
sbb
outs
(bad)
add
push
adc
push
out
shl
cmp
push
imul
push
js
fidivr
dec
inc
(bad)
(bad)
mov
add
dec
mov
pusha
(bad)
push
outs
mov
mov
pop
lds
lahf
addr16
add
lahf
pop
xlat
xor
out
cmp
and
inc
inc
cmovge
or
jae
fs
scas
jae
das
xchg
add
adc
aas
push
call
inc
push
jg
push
addr16
or
jne
pop
mov
pusha
adc
and
push
inc
sub
inc
add
shl
dec
outs
ins
outs
popa
fs
mov
pop
sub
cdq
frstor
cmp
jb
shl
jo
cs
jo
je
pop
and
sub
outs
sub
lea
aaa
cmc
cmp
and
stos
jo
sbb
pop
xchg
rol
pop
dec
sti
sub
ja
les
pop
xor
outs
add
sub
fs
dec
shl
gs
popa
jo
xchg
fiadd
sub
fs
ja
or
xchg
je
test
sub
cs
or
(bad)
fnstcw
add
sbb
mov
rol
mov
das
sub
xchg
sahf
push
ja
jbe
jmp
das
inc
xor
mov
andnps
fsub
inc
pop
mov
(bad)
fmul
repz
adc
push
add
or
adc
pop
pop
xchg
add
xchg
cmp
test
retf
push
adc
js
mov
sbb
mov
in
mov
outs
pop
xchg
rcr
outs
(bad)
dec
outs
shl
arpl
maxps
push
lock
dec
add
out
cmp
lods
push
mov
push
retf
fistp
imul
pop
dec
push
mov
cli
push
pop
cmp
popf
stos
sbb
push
out
in
jle
(bad)
(bad)
ins
outs
jae
or
ja
and
lods
shl
ss
das
dec
lods
and
dec
and
loop
dec
cld
and
xchg
push
cld
dec
push
xchg
dec
std
push
add
xor
jmp
jge
xchg
sbb
jbe
pop
dec
pop
ret
sar
lods
ss
sub
cmp
or
push
jp
xor
dec
test
push
test
mov
cmps
test
inc
add
add
cli
jbe
ror
cs
jp
push
dec
mov
std
in
jo
xchg
push
test
push
cmp
into
pop
in
or
xchg
cmps
adc
pop
imul
adc
pop
arpl
cmp
or
dec
ss
les
in
adc
cmp
aaa
retf
sbb
jnp
sub
jb
push
fisttp
dec
adc
clc
add
pop
shl
das
add
mov
dec
lock
pushf
push
test
sbb
adc
push
data16
dec
push
or
outs
cmp
repnz
iret
(bad)
dec
pop
sar
cmp
pop
adc
mov
and
test
inc
bound
push
inc
cmp
pop
cmp
outs
out
jg
bound
rol
outs
xchg
dec
push
rol
jae
mov
cwde
std
pop
nop
cmps
pop
sbb
xchg
dec
dec
add
cs
out
sbb
and
jbe
push
sub
(bad)
cli
int
adc
icebp
(bad)
mov
arpl
pop
mov
inc
sbb
cli
adc
inc
mov
ror
popf
jmp
je
es
xchg
xor
xor
lahf
popa
cmp
mov
pop
add
xchg
pop
mov
js
push
je
and
and
daa
inc
mov
jbe
std
ins
in
and
imul
xchg
(bad)
gs
aad
sbb
cmps
jno
pop
imul
addr16
arpl
and
add
test
pop
xor
arpl
ins
jl
jp
or
test
sbb
cwde
scas
sbb
inc
ss
dec
inc
and
jne
bound
imul
shl
adc
mul
(bad)
xor
pop
enter
dec
fs
push
xor
(bad)
jmp
and
mov
mov
into
les
sub
out
jmp
ror
loopne
fcom
retf
inc
shr
ja
out
(bad)
mov
arpl
cmps
mov
mov
icebp
outs
repz
ret
sub
fidiv
dec
mov
ins
ss
cmp
rep
jle
add
dec
dec
dec
scas
pop
push
pop
ins
mov
cmps
daa
dec
lds
dec
imul
and
push
dec
xchg
cmp
in
fistp
sahf
aam
or
arpl
jnp
mov
mov
(bad)
pop
repz
pop
fidiv
jle
xchg
mov
add
push
rcl
push
push
pop
mov
loopne
ja
dec
pop
movs
xchg
neg
dec
and
scas
aaa
neg
in
in
dec
outs
pop
push
imul
mov
dec
out
sahf
ds
xchg
sahf
shr
out
inc
test
push
lods
xor
and
sahf
mov
sbb
in
push
mov
das
pop
lahf
xchg
fidivr
push
retf
pop
add
imul
rcr
scas
call
push
ficomp
leave
add
bound
add
push
daa
push
test
push
shl
inc
xchg
js
xor
out
adc
inc
adc
cmp
inc
sbb
dec
scas
adc
es
cmp
jge
xchg
fwait
ins
dec
dec
and
and
push
jnp
xchg
loopne
cmc
push
les
icebp
jle
push
addr16
rcl
addr16
sbb
fwait
rol
ss
adc
push
cli
loop
mov
fadd
(bad)
jmp
int
int3
sbb
jle
pop
jb
mov
out
repnz
(bad)
idiv
mov
iret
dec
cwde
inc
mov
pop
sti
(bad)
retf
test
(bad)
test
(bad)
hlt
out
test
add
(bad)
out
inc
cmps
fstp
out
mov
push
lds
jb
ret
push
push
inc
dec
push
aas
cmpxchg
pushf
addr16
adc
push
or
ja
and
inc
loope
test
add
loopne
std
and
sub
add
push
dec
inc
dec
cmovns
add
popa
stc
inc
inc
das
push
aaa
les
push
mov
or
aas
or
push
inc
push
pop
test
idiv
ja
xchg
cmp
push
mov
cmp
dec
push
dec
jle
(bad)
mov
lods
cmps
in
mov
fwait
scas
pop
dec
gs
mov
fwait
cs
jmp
cdq
test
sub
out
lods
pop
inc
loop
pop
dec
in
(bad)
jnp
jno
in
xchg
in
cmps
in
mov
mov
jmp
sbb
mov
xor
xor
cwde
out
call
pop
ss
pop
xor
jo
bound
cmp
mov
shl
xor
inc
cmp
adc
dec
inc
inc
test
iret
lds
pop
enter
sahf
mov
add
or
pop
enter
add
repnz
jb
mov
sti
mov
(bad)
bound
in
xor
ja
mov
repnz
enter
aam
and
daa
fs
pop
fsub
and
xor
fadd
and
(bad)
ja
adc
pusha
aaa
ret
sbb
jo
cs
or
sbb
cmp
inc
cmp
rcl
in
lods
js
mov
mov
adc
adc
movs
or
push
out
movs
sbb
and
(bad)
addr16
add
fisttp
movs
fs
pop
lock
jo
inc
add
and
mov
sub
push
mov
sahf
or
nop
imul
mov
xchg
shr
fdivr
cmp
push
lock
(bad)
and
ret
mov
es
cmps
or
pop
int3
fdiv
cld
(bad)
int3
mov
xor
cmps
adc
and
fs
mov
aas
call
pop
xor
push
cmp
je
pop
fbld
cmps
movs
push
mov
test
or
nop
in
fldenv
sbb
or
lods
xor
mov
cmps
in
and
mov
cmp
dec
(bad)
push
repnz
mov
ja
or
lahf
and
pusha
push
lock
xchg
lahf
ja
pop
sbb
add
outs
mov
lds
les
cs
outs
cld
jg
pop
rol
lds
mov
out
ins
xor
jo
sbb
adc
ins
xchg
and
outs
pusha
xchg
and
sbb
in
add
ss
jns
clc
fadd
movs
pop
add
lock
arpl
xchg
data16
mov
inc
push
es
inc
inc
cmps
int
add
outs
or
jp
aaa
ds
cmp
cmp
cmps
stos
clc
enter
ss
fbstp
rol
or
pop
push
jo
fcomip
cs
inc
daa
dec
les
sub
cmp
les
stos
sub
iret
sbb
test
push
nop
push
lods
sub
pop
jb
add
and
pop
(bad)
pop
xchg
ror
mov
lahf
pop
ins
in
popf
lods
or
adc
test
xlat
aaa
shl
nop
iret
inc
lods
pop
lods
ins
push
js
jns
mov
inc
xchg
lods
pop
pop
mov
pop
mov
or
mov
outs
inc
lods
pop
or
(bad)
and
test
push
dec
push
outs
inc
cmps
ins
or
mov
xchg
les
daa
lods
xchg
push
movs
scas
mov
test
or
dec
aaa
call
sahf
in
xchg
call
pop
and
push
xor
dec
add
xchg
repnz
lock
pop
iret
pushw
outs
and
loope
nop
adc
sub
mov
int3
push
fmul
dec
add
mov
fdivr
and
pusha
cmp
jb
scas
or
pop
pop
or
test
js
mov
sbb
nop
out
mov
pop
enter
cld
nop
mov
sbb
rcr
jbe
push
nop
xlat
sahf
outs
lahf
pop
push
sbb
or
pmulhuw
idiv
scas
in
scas
add
add
iret
add
je
sahf
addr16
mov
lods
nop
mov
idiv
repz
movs
push
xor
cmps
fpatan
mov
push
mov
pop
rcl
mov
push
cld
daa
xchg
adc
mov
pushf
nop
pop
mov
test
ja
add
add
sbb
inc
cmps
movs
adc
mov
push
nop
or
mov
fisttp
cld
and
or
or
sahf
or
ins
jl
nop
(bad)
or
cdq
pusha
daa
cwde
add
and
jl
mov
mov
ss
iret
fwait
movs
sub
cmp
add
mov
lods
in
sub
add
test
nop
sub
pop
add
pop
xor
icebp
push
repnz
cwde
add
outs
xor
add
inc
add
fsubr
fist
xchg
je
inc
in
fidivr
fbld
dec
or
enter
daa
sub
mov
jo
hlt
dec
mov
push
sub
inc
out
xchg
and
xchg
inc
popa
iret
mov
js
inc
pushf
or
mov
or
mov
and
loopne
sahf
loope
iret
aaa
fwait
out
or
xchg
push
add
rcr
out
sub
inc
popa
jl
cmp
out
ret
and
jns
iret
repz
ret
xor
jl
out
mov
add
and
repz
outs
xchg
shl
sahf
out
call
out
fidivr
and
push
cdq
mov
jns
out
and
rcr
repz
repz
pusha
jnp
shl
jns
iret
cmc
and
dec
xchg
iret
sar
in
adc
jo
(bad)
sahf
out
ds
daa
pop
jle
cmp
out
into
jmp
jns
out
in
sub
lahf
out
jmp
pop
(bad)
out
ds
mov
imul
jl
mov
cdq
das
out
xor
loop
xor
jo
xor
repz
fdiv
push
cmp
xor
es
xor
ins
xor
push
sbb
test
stc
cmp
cmp
js
jmp
mov
add
sar
pushf
in
cmp
out
jl
cmp
cmp
out
xor
aad
aas
pop
inc
dec
out
jl
inc
mov
inc
xor
lahf
fcom
inc
inc
je
mov
or
pop
data16
jno
stc
add
hlt
add
fstp
ja
pushf
or
mov
add
mov
add
mov
mov
outs
cmps
movs
mov
scas
and
jmp
mov
out
outs
cmp
nop
stos
aam
std
aas
mov
fs
lods
pop
aas
daa
xchg
adc
lods
(bad)
scas
jns
mov
or
mov
jg
fwait
and
pop
xor
dec
mov
mov
aas
mov
inc
jb
dec
mov
enter
mov
and
mov
mov
xor
loope
mov
dec
pop
out
enter
jecxz
psrad
push
std
(bad)
fdiv
loopne
push
jecxz
push
loop
icebp
in
push
sysexit
pop
adc
dec
mov
mov
int3
jg
jns
or
aas
out
in
mov
and
jge
out
push
out
pop
mov
call
xchg
pmulhuw
add
je
adc
out
xor
jnp
or
ss
cld
inc
push
inc
aas
fs
iret
adc
mov
xchg
xchg
add
add
(bad)
cmp
movs
or
sub
push
das
jle
pushf
push
(bad)
aas
sbb
push
ss
sub
fdivr
fisubr
jbe
sub
jne
sub
pop
push
jo
loope
pop
xor
fist
lahf
cmp
cmp
mov
pop
mov
push
popf
pop
cdq
cmp
inc
(bad)
mov
(bad)
mov
add
stos
push
sbb
adc
sub
xchg
scas
and
pop
lods
pop
rsm
add
or
mov
xor
es
mov
sar
dec
or
in
xchg
outs
push
pushf
pop
jb
jge
sbb
xor
mov
fild
fbstp
fisubr
add
pop
es
rol
sub
sub
sbb
mov
fsubrp
xchg
xor
jg
push
cmp
test
inc
aas
jno
(bad)
test
add
outs
cmps
aad
jl
xchg
or
push
inc
(bad)
add
add
and
add
mov
fcom
add
mov
fidiv
scas
in
mov
xchg
cdq
scas
push
pop
js
std
jb
leave
xchg
shl
inc
seta
or
and
xor
scas
movs
and
arpl
jo
shr
ret
pusha
daa
add
into
icebp
ficom
dec
push
or
adc
xchg
and
sub
mov
xchg
push
pop
inc
add
adc
imul
add
xchg
xor
adc
or
out
add
xlat
xor
fdiv
daa
xchg
pop
add
sbb
mov
jg
xchg
add
lds
pop
lock
jb
inc
jno
pop
fucom
daa
sbb
in
cmc
add
lds
cmp
push
sub
cmp
xchg
dec
push
add
push
cdq
ja
add
pop
mov
mov
scas
xchg
pop
and
xor
pop
or
add
sub
jb
dec
leave
sub
daa
or
(bad)
mov
bswap
outs
adc
pop
xor
and
adc
and
and
mov
(bad)
push
mov
pusha
pop
pop
add
movs
pusha
push
jo
pop
outs
mov
push
lods
mov
in
fcmovne
sub
mov
xchg
mov
pop
leave
inc
jb
adc
test
leave
inc
jb
je
shl
mov
pushf
sub
daa
sub
and
add
mov
pusha
xchg
in
or
cmp
in
jmp
test
add
add
sbb
in
adc
adc
adc
adc
mov
ret
imul
mov
mov
pop
mov
dec
jb
bswap
inc
retf
push
pushf
xchg
adc
mov
retf
add
xchg
retf
lods
test
(bad)
addr16
cmps
xor
add
retf
sbb
rcr
push
add
jb
je
test
and
movs
jb
add
sub
retf
loopne
shl
lock
mov
and
test
ficom
sbb
dec
pop
rol
jbe
inc
int3
ins
int3
push
daa
jl
in
sub
ja
push
ret
mov
and
mov
int
lock
adc
and
xchg
sahf
addr16
imul
sar
in
cmp
sub
add
daa
daa
cmp
rcl
pop
sbb
or
nop
adc
pop
cmp
pushf
xchg
(bad)
into
xor
pop
test
icebp
bound
jo
leave
into
movs
into
xchg
daa
mov
mov
mov
xchg
dec
dec
and
pop
scas
js
sbb
jb
cmp
and
dec
mov
aam
inc
adc
or
cs
imul
xor
int3
mov
inc
add
push
pop
add
in
and
jmp
xchg
add
iret
sbb
in
and
into
shr
icebp
loopne
and
stc
sbb
cdq
xchg
adc
cs
sar
sbb
dec
and
rcl
xchg
fild
push
cdq
mov
and
add
push
repnz
shl
pop
pop
shr
xchg
pop
ror
out
or
sbb
add
push
jo
sbb
nop
(bad)
pop
pop
leave
and
enter
cmps
add
mov
mov
ror
aas
sbb
sar
mov
add
dec
push
xlat
and
adc
outs
fmul
jg
movs
pop
pop
and
pop
jge
stos
dec
cs
xchg
aam
fdivp
and
xor
fisub
nop
cs
dec
test
call
inc
push
aad
sbb
push
mov
aad
mov
fild
push
jo
leave
sub
mov
mov
cmp
sbb
enter
mov
add
add
push
jb
sbb
inc
mov
push
sbb
and
sub
enter
(bad)
add
cmps
push
pushf
pop
and
pushf
jbe
sahf
pushf
pushf
pushf
nop
popf
stos
mov
fisttp
into
dec
ret
fisubr
retf
mov
pop
or
int3
push
enter
pop
das
mov
repnz
sub
cmp
dec
add
fist
ja
xchg
(bad)
ins
jg
in
cmp
lea
outs
mov
xlat
enter
daa
fdivr
daa
cmp
das
ror
pop
xlat
pushf
sub
fcom
pop
and
fisubr
cmp
mov
dec
daa
je
je
jo
leave
sub
mov
pushf
jbe
inc
out
push
punpckldq
add
xchg
add
push
xchg
add
mov
add
sahf
fcomp
int
pop
jecxz
out
repnz
stc
or
add
(bad)
hlt
sbb
sbb
push
and
xchg
mov
packsswb
xchg
and
push
outs
add
test
in
enter
movs
pop
mov
loope
in
(bad)
rcl
leave
in
inc
xor
and
movhps
sub
add
fisub
call
adc
(bad)
fcmove
das
mov
jmp
nop
mov
fwait
pop
fucomi
xchg
mov
rol
cmp
and
les
sbb
pushf
das
and
push
mov
loopne
xor
dec
fcmovne
daa
lock
nop
xchg
fdivr
fsubr
daa
in
or
dec
(bad)
sahf
outs
cmps
addr16
push
jo
das
(bad)
jbe
and
xchg
xchg
add
add
and
add
adc
sbb
add
add
add
sbb
inc
pop
dec
or
fs
test
jmp
and
pop
pop
mov
(bad)
dec
in
pop
addr16
daa
hlt
cld
das
and
repnz
and
cwde
xchg
out
push
push
dec
add
pop
add
fs
mov
mov
iret
jl
clc
mov
mov
(bad)
dec
dec
inc
sahf
rol
mov
paddd
or
pop
mov
sbb
pusha
mov
es
add
sbb
dec
inc
jne
xchg
add
and
in
lds
int
aad
loopne
in
cmp
jmp
xlat
or
cmp
enter
daa
sub
xor
pop
leave
dec
add
daa
jo
popf
sub
add
dec
pop
loopne
loop
xchg
and
(bad)
pusha
fild
movaps
inc
mov
sub
mov
pop
arpl
leave
leave
inc
jb
cmps
scas
cmp
leave
mov
sub
dec
pushf
or
jmp
pusha
retf
retf
mov
sub
retf
retf
sub
dec
sub
fs
inc
mov
push
jp
test
out
or
in
ftst
out
sbb
sub
xchg
push
in
adc
loop
fild
dec
enter
sub
pop
fild
push
in
sub
xchg
jmp
sub
retf
xchg
xchg
int3
dec
sub
fsubr
or
ror
unpcklps
jecxz
and
pop
add
pop
and
xchg
daa
push
popf
fcmovne
enter
add
xchg
xchg
leave
aam
jmp
or
or
push
or
and
aas
aaa
inc
adc
pop
adc
arpl
inc
sbb
mov
mov
dec
sub
push
lds
sbb
jb
int
aad
fld
dec
push
in
adc
cmps
mov
and
sub
xor
shr
pop
leave
dec
jnp
addr16
sahf
jb
daa
and
rol
popf
or
movs
or
lods
mov
and
in
jmp
test
jmp
add
or
mov
sub
dec
xchg
outs
daa
pusha
packssdw
jbe
loopne
xchg
mov
test
cmp
and
iret
mov
or
das
adc
push
leave
enter
(bad)
add
add
leave
inc
dec
or
pop
fld
mov
dec
cmp
cmp
mov
inc
mov
push
aam
fsub
mov
cld
xor
dec
dec
dec
or
sbb
adc
xchg
xchg
and
aaa
inc
adc
movs
ror
loopne
cmp
xor
inc
mov
mov
rol
enter
or
or
or
jb
jb
or
cli
xor
cmp
cmp
or
sbb
adc
or
sub
xor
inc
add
out
xor
inc
ss
jnp
add
mov
setnp
mov
daa
rcr
out
pmaxsw
retf
xchg
add
add
pop
stos
mov
sbb
or
jb
enter
fbstp
pop
xor
outs
pushf
pushf
sbb
xor
test
pushf
movs
jmp
dec
dec
jecxz
stc
xor
enter
rdpmc
sbb
and
xor
shl
outs
daa
daa
ins
push
outs
jns
fisttp
call
add
dec
(bad)
or
aas
jmp
or
lods
and
in
and
(bad)
mov
pop
and
jmp
cmp
add
inc
push
push
and
push
bound
add
mov
xor
inc
push
ins
outs
sub
imul
bnd
inc
inc
aas
test
push
jle
dec
pop
outs
pop
jb
dec
gs
imul
jl
pop
mov
inc
pop
xor
ins
(bad)
pop
inc
mov
add
mov
pop
push
dec
add
or
lods
push
xchg
idiv
dec
inc
push
cmp
push
pushf
and
adc
nop
add
inc
jge
sub
add
xchg
gs
movs
xchg
mov
push
mov
loop
popf
and
arpl
and
cmp
xor
and
fbld
and
dec
or
sub
push
sub
arpl
dec
je
adc
xor
ror
jne
ja
cmps
cs
stos
dec
or
fwait
push
inc
dec
push
push
or
and
add
push
push
inc
inc
cs
clc
xor
xor
dec
bound
ja
sgdtd
pop
sti
rol
movs
pop
pop
and
add
call
dec
test
pop
add
adc
fcomp
rol
mov
mov
lahf
mov
push
out
sahf
fild
(bad)
sbb
sahf
push
or
or
mov
or
or
fisttp
imul
daa
adc
adc
mov
xor
in
jbe
push
addr16
das
push
xorps
pop
imul
push
and
mov
out
jb
pop
and
mov
or
pop
popf
pushf
cmp
xchg
sub
cmp
into
aas
xlat
pop
dec
sbb
push
mov
pop
xchg
add
ins
mov
fnstcw
pop
aas
jbe
adc
sub
add
cmp
in
adc
enter
ror
lds
and
xor
inc
and
adc
mov
repnz
add
movs
add
sub
cmp
fisttp
mov
cld
inc
jle
inc
mov
daa
mov
cmp
cld
dec
inc
mov
iret
mov
in
call
cmp
add
mov
repnz
xor
fcomp
loopne
jb
jle
ins
sbb
mov
repz
loopne
fdiv
cmp
repz
les
movs
pop
pushf
nop
mov
jns
jl
je
out
sahf
out
push
cmp
dec
inc
cmp
push
sub
sahf
int
cmp
adc
clc
hlt
sbb
jns
xlat
rcl
push
mov
out
sahf
out
xchg
mov
out
sahf
pop
dec
xor
adc
cmp
mov
add
lock
repz
enter
out
iret
mov
mov
je
iret
repz
cmp
adc
sahf
repz
lock
inc
movs
adc
(bad)
in
ds
and
xchg
push
xchg
jbe
push
push
sbb
cmp
cmps
mov
pop
cmps
mov
or
iret
lock
ret
mov
daa
push
push
push
or
mov
cmp
jle
and
cmp
out
or
lock
mov
repz
xchg
sub
sahf
out
cmp
fs
in
fmul
jns
out
shl
mov
cmp
push
iret
repz
arpl
fadd
mov
cwde
jns
in
cmp
push
push
inc
push
lods
mov
and
out
fsubr
pop
cs
ins
mov
add
iret
fild
enter
fist
pop
shr
sub
iret
add
and
pop
jb
add
jns
shr
push
cmp
pop
js
jns
out
mov
repz
jns
ds
xor
add
push
pop
out
sahf
out
xchg
mov
repnz
pop
cmp
dec
pusha
ins
pop
test
pushf
push
sub
jmp
inc
push
or
xor
(bad)
push
pop
pop
js
inc
lods
inc
bound
test
push
outs
fs
xor
adc
aaa
aas
jae
xor
jg
aaa
or
push
xchg
aad
mov
arpl
sub
je
inc
inc
dec
xchg
lods
nop
les
xor
retf
and
pop
dec
aas
data16
mov
div
lock
aad
outs
data16
push
inc
mov
jle
push
adc
std
sub
bound
mov
fsubr
mov
pop
xor
add
imul
movlps
jg
js
clc
mov
jb
outs
inc
popa
push
lods
add
mov
jne
je
shr
adc
test
push
push
push
pop
sbb
ins
sub
and
pop
adc
jg
or
inc
cvtps2pd
call
or
cvtps2pd
or
dec
mov
call
add
adc
call
cs
cmps
dec
lods
adc
movs
or
cmp
mov
mov
sub
adc
mov
and
arpl
push
js
add
(bad)
scas
lds
jmp
inc
push
add
add
dec
push
adc
aaa
es
cmp
enter
mov
adc
sub
loopne
sti
dec
add
pop
or
push
sbb
jp
pop
pop
or
or
or
pop
outs
test
das
push
test
leave
add
nop
add
and
stos
xor
das
mov
xchg
dec
and
lods
sub
and
push
(bad)
push
jo
inc
nop
add
stos
cmp
xchg
add
push
sahf
out
sahf
mov
js
dec
xor
mov
adc
clc
fadd
push
pushf
out
xchg
out
ins
dec
jns
sahf
out
fidivr
push
in
cwde
test
out
dec
xor
xlat
push
and
sysret
and
popa
les
push
sub
popa
loop
inc
fld
jo
outs
loope
ret
out
jg
mov
inc
adc
arpl
jo
popa
imul
jo
dec
sub
pusha
jmp
jle
inc
jb
jae
inc
inc
imul
mov
dec
ins
jbe
push
sub
xor
mov
imul
or
outs
cmovl
push
sub
jb
cli
mov
mov
xor
outs
lock
jecxz
iret
bound
sub
push
dec
dec
arpl
dec
inc
int
adc
ins
push
inc
mov
(bad)
popa
mov
das
dec
push
inc
inc
cmp
add
push
imul
shr
dec
push
shl
rcr
ins
adc
in
ds
jne
xor
dec
mov
or
ins
and
xor
outs
ins
test
add
ins
inc
inc
test
mov
inc
inc
dec
dec
cmp
cwde
push
jae
test
icebp
add
add
and
or
mov
and
xor
add
stos
sbb
or
jg
daa
jns
mov
add
pop
repnz
pushf
or
ret
mov
adc
xchg
cwde
push
and
(bad)
(bad)
jg
sbb
into
sbb
ror
and
sahf
mov
sub
inc
rcr
(bad)
(bad)
(bad)
std
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
in
(bad)
mov
cmps
iret
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
(bad)
(bad)
jmp
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
(bad)
jmp
adc
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
sbb
mov
or
add
cmps
xchg
cmp
xor
dec
cmps
in
(bad)
(bad)
(bad)
(bad)
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
addr16
(bad)
jmp
mov
sub
fwait
xchg
and
and
stc
int
add
sti
aas
jno
or
mov
(bad)
(bad)
(bad)
call
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
(bad)
(bad)
inc
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
mov
std
std
into
(bad)
(bad)
(bad)
jmp
adc
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
(bad)
(bad)
(bad)
fisub
xchg
cmp
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
(bad)
call
mov
das
lea
mov
inc
inc
aas
movs
jmp
jg
sub
jge
(bad)
mov
mov
fst
arpl
int3
and
cmp
cmp
jmp
inc
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
(bad)
(bad)
(bad)
(bad)
inc
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
(bad)
jmp
mov
cmps
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
out
cli
(bad)
(bad)
faddp
jge
call
mov
xchg
cmp
push
and
dec
dec
(bad)
std
or
push
xchg
jge
pop
ficomp
frstor
inc
movs
xor
movs
add
adc
rsm
mov
aas
inc
test
adc
jg
push
add
cmp
or
add
dec
dec
inc
push
ds
cld
mov
mov
jae
neg
mov
sbb
sbb
inc
dec
inc
or
(bad)
or
popa
add
stc
or
pop
jae
ret
pop
add
outs
test
sbb
push
(bad)
(bad)
(bad)
(bad)
js
in
cdq
fnsave
inc
adc
xchg
sub
jo
into
rol
sub
dec
iret
(bad)
(bad)
(bad)
dec
push
mov
push
in
(bad)
in
iret
in
aaa
fnstsw
and
and
(bad)
nop
mov
or
ds
(bad)
std
lods
aas
in
call
fisttp
movs
xor
xchg
sub
cmps
jg
(bad)
jmp
push
inc
pusha
dec
add
shl
and
dec
add
retf
int
mov
push
add
cwde
xchg
cmp
push
mov
enter
or
mov
ins
sub
pop
imul
dec
fnstenv
adc
add
(bad)
(bad)
(bad)
(bad)
fadd
mov
in
xor
or
lock
mov
rcl
add
or
jle
lea
adc
aad
repnz
mov
(bad)
(bad)
(bad)
(bad)
aas
cmp
push
shl
dec
jle
(bad)
mov
xor
push
sbb
dec
pop
inc
fisttp
adc
mov
push
pop
xchg
adc
sub
jge
inc
std
xchg
mov
lahf
sbb
stos
jne
cmps
fcmovnbe
sti
clc
fcom
(bad)
call
sub
jnp
or
popf
dec
imul
clc
ss
gs
test
cmps
push
enter
(bad)
cmp
cmps
xchg
adc
out
fstp
ret
imul
(bad)
imul
jmp
jnp
xor
sub
repnz
push
push
push
mov
cdq
adc
out
mov
push
mov
(bad)
(bad)
(bad)
mov
add
daa
pop
ins
xchg
sbb
xor
mov
pop
jo
push
in
lahf
mov
cmp
(bad)
(bad)
(bad)
jmp
rcr
jbe
lds
lods
out
dec
xchg
fcomp
and
(bad)
(bad)
jmp
sub
jle
add
hlt
xchg
retf
jae
sbb
mov
pop
xor
and
les
stc
sar
(bad)
(bad)
call
retf
ds
mov
jl
cmc
sub
jmp
fld
leave
xchg
sub
les
push
loop
(bad)
(bad)
(bad)
jmp
loop
mov
jne
cwde
retf
jp
dec
stos
sbb
sbb
not
mov
jmp
imul
jno
gs
ins
mov
dec
adc
dec
(bad)
cli
mov
stos
xchg
enter
(bad)
jg
stos
loopne
sub
jle
test
push
xlat
in
add
(bad)
(bad)
(bad)
push
xlat
cmp
fwait
movs
ins
aam
gs
mov
xor
shl
(bad)
(bad)
inc
(bad)
int
jmp
push
and
pop
mov
hlt
test
lods
or
(bad)
(bad)
jmp
scas
mov
xchg
outs
mov
fwait
movsx
mov
out
mov
sbb
(bad)
xchg
cli
in
or
xor
or
jl
mov
outs
call
inc
sbb
add
call
test
shl
cld
(bad)
jmp
push
sub
call
dec
mov
push
jns
add
ret
call
cld
jmp
clc
fsubrp
ficom
cmps
jne
pop
fisubr
imul
push
cmp
add
(bad)
(bad)
push
fld
sar
bound
push
mov
test
add
fisubr
outs
sub
adc
sub
loop
out
aad
stc
(bad)
pop
std
cdq
mov
cmp
test
adc
cs
call
pusha
sub
pushf
push
mov
dec
jmp
scas
push
fwait
outs
popa
and
(bad)
(bad)
(bad)
dec
push
jb
jns
adc
add
aas
dec
mov
out
repnz
(bad)
(bad)
(bad)
push
adc
sub
pusha
cwde
es
mov
aas
ins
mov
iret
mov
adc
push
(bad)
cld
(bad)
push
jg
pop
xchg
mov
loope
mov
retf
aaa
sahf
fidiv
js
pusha
(bad)
(bad)
(bad)
call
push
cmp
shl
and
inc
lds
jne
xor
gs
xchg
(bad)
(bad)
(bad)
(bad)
ds
dec
sub
cli
outs
lods
imul
ds
push
push
cmps
aaa
dec
cmc
(bad)
(bad)
and
and
loopne
jle
inc
icebp
xchg
and
fstp
mov
(bad)
(bad)
call
ins
pop
add
inc
(bad)
scas
and
pop
inc
je
sbb
xchg
sub
fdiv
loopne
(bad)
(bad)
inc
lods
ins
inc
cmp
or
mov
push
pop
mov
ret
(bad)
(bad)
jmp
clc
fist
cmp
dec
adc
cli
mov
sahf
ret
dec
mov
js
mov
push
(bad)
(bad)
(bad)
(bad)
mov
dec
lea
inc
imul
adc
test
js
cmp
dec
jae
pusha
aaa
mov
mov
je
mov
or
or
inc
push
fnstsw
test
adc
or
mov
mov
(bad)
retf
sbb
mov
fdiv
hlt
ficomp
(bad)
stc
(bad)
mov
xor
add
and
jmp
xchg
mov
or
push
shr
adc
and
mov
rcr
(bad)
rcr
out
neg
loopne
jp
es
loopne
cmp
out
pop
aam
jg
jmp
dec
jmp
out
nop
xor
dec
inc
scas
inc
pusha
adc
add
pop
or
mov
jns
cdq
jle
les
add
add
inc
pop
je
mov
add
lods
and
add
repz
mov
imul
adc
inc
cs
pop
mov
mov
pusha
gs
imul
cmp
and
adc
dec
xor
outs
dec
inc
gs
push
jp
push
arpl
cmp
mov
idiv
and
cmp
push
ins
outs
jae
pop
div
push
sub
imul
imul
mov
ss
and
cmp
xor
sub
xor
adc
xor
(bad)
fnsave
sub
xor
and
and
jb
data16
out
test
mov
xlat
sbb
stc
fild
cs
outs
jb
das
xor
xchg
das
xor
sub
imul
jns
je
js
and
and
lods
adc
and
arpl
js
jo
mov
outs
mov
dec
dec
push
ins
ins
(bad)
inc
repnz
pop
jae
push
gs
add
call
jnp
and
inc
xchg
inc
pop
add
mov
ins
mov
imul
push
jo
inc
imul
xor
and
xor
pop
xor
dec
les
dec
inc
push
and
imul
(bad)
push
inc
inc
inc
xor
inc
cmp
add
and
cmp
xor
ja
loopne
adc
xchg
popa
inc
addr16
xor
jnp
pop
pop
pop
movs
jbe
fs
and
adc
mov
cmp
ss
and
mov
fs
xor
sbb
das
sbb
fldenv
adc
and
into
loop
mov
and
jmp
scas
push
fist
dec
xchg
push
retf
dec
ret
cmp
add
push
pop
sbb
xor
or
xchg
inc
(bad)
(bad)
(bad)
jmp
inc
adc
sbb
push
mov
rol
aam
(bad)
or
scas
(bad)
(bad)
(bad)
call
fidivr
leave
dec
fistp
movs
dec
stos
aad
sub
(bad)
or
cs
fistp
jae
ins
cld
(bad)
call
(bad)
jmp
add
mov
lods
stos
shl
bound
mov
(bad)
jecxz
mov
cmc
jne
(bad)
(bad)
(bad)
call
or
dec
in
movs
(bad)
or
mov
loope
or
cmp
mov
inc
add
sub
jno
xor
sahf
xor
xchg
retf
in
jae
push
or
in
mov
(bad)
(bad)
push
push
xchg
leave
in
hlt
sub
add
pop
pop
icebp
hlt
clc
clc
ret
fnstsw
inc
outs
jg
std
xchg
addr16
mov
movs
or
(bad)
adc
cmps
ror
push
sbb
fsubr
loopne
dec
(bad)
(bad)
(bad)
call
push
int3
into
int
or
mov
push
sub
inc
add
push
push
jmp
aad
cmps
add
outs
sbb
add
add
rcl
clts
fcomp
fld
(bad)
(bad)
inc
out
inc
mov
clc
mov
in
mov
mov
or
push
ds
(bad)
(bad)
inc
jmp
retf
lods
xchg
lea
adc
shl
scas
inc
add
(bad)
(bad)
mov
mov
jae
rol
jb
and
call
gs
(bad)
(bad)
(bad)
(bad)
lock
mov
std
fstp
jg
test
mov
cmp
(bad)
sar
sbb
jmp
pop
push
test
loopne
jg
lea
sar
nop
iret
mov
dec
dec
push
sub
push
add
mov
and
dec
sub
(bad)
pop
scas
push
outs
sbb
pop
(bad)
jmp
scas
daa
cmc
(bad)
jl
jl
push
(bad)
jbe
scas
mov
into
stos
mov
mov
and
adc
jae
sbb
adc
mov
(bad)
dec
add
cmp
and
or
adc
daa
popf
(bad)
call
je
movs
rcr
dec
pop
jnp
jp
jae
test
jns
lahf
scas
(bad)
xor
push
out
push
out
jae
repz
fstp
and
and
inc
add
add
les
shr
sar
mov
cmp
mov
or
push
or
dec
fs
adc
jmp
pop
inc
iret
xchg
nop
xlat
mov
in
retf
mov
fs
(bad)
and
out
and
lods
xor
sub
(bad)
(bad)
(bad)
inc
loope
jbe
and
add
dec
retf
fld
mov
dec
js
call
mov
jmp
mov
mov
push
inc
or
addr16
mov
lds
pop
outs
icebp
sbb
popf
(bad)
(bad)
(bad)
call
dec
pop
data16
scas
mov
cmps
repnz
mov
fidivr
jg
(bad)
cmp
add
or
inc
ds
mov
loope
push
jmp
sbb
add
jle
pop
rol
aad
pop
and
add
jmp
xchg
inc
xchg
jne
and
repz
xor
sbb
inc
(bad)
jmp
(bad)
add
pushf
add
cmp
sahf
enter
ins
les
fsubr
mov
add
adc
mov
test
pop
lds
sub
(bad)
(bad)
(bad)
inc
jmp
ja
lods
stos
stos
or
stc
pop
inc
popa
test
mov
(bad)
(bad)
(bad)
out
add
push
mov
push
inc
cmp
test
jmp
(bad)
(bad)
(bad)
out
or
scas
not
icebp
adc
out
ror
inc
(bad)
xor
sti
mov
int
push
imul
(bad)
dec
(bad)
jns
cmps
jne
ficom
stos
test
push
dec
sar
icebp
in
jmp
(bad)
call
pop
mov
and
pop
clc
pop
addr16
cmc
les
jg
outs
jns
jne
xor
icebp
imul
jno
and
cmc
jp
fnstsw
ja
mov
out
jg
lds
add
in
and
jmp
ret
(bad)
push
js
int3
xchg
fwait
lahf
and
iret
mov
dec
jecxz
movs
jmp
jmp
das
sar
mov
retf
or
sahf
sub
imul
dec
push
lds
mov
jmp
daa
in
iret
xchg
mov
dec
in
jge
jmp
clc
call
adc
mov
or
mov
(bad)
inc
(bad)
(bad)
inc
imul
cwde
sbb
pop
es
pop
pop
pop
mov
(bad)
(bad)
jmp
stos
sbb
in
cmp
loope
cld
or
inc
(bad)
(bad)
jmp
or
jmp
or
mov
adc
push
pop
dec
leave
int3
pop
pop
fmul
retf
sub
call
fsub
out
cmp
sub
call
outs
adc
mov
rol
jne
jmp
dec
dec
mov
addr16
je
nop
cli
fdivrp
(bad)
call
or
sbb
cld
sahf
aaa
call
test
sbb
dec
aam
dec
aam
cmp
hlt
fldcw
push
add
pop
lahf
fucomip
out
jmp
xor
adc
jo
xor
or
jb
sub
(bad)
(bad)
call
scas
push
dec
stos
outs
loopne
mov
cdq
mov
mov
lods
push
mov
cmc
(bad)
in
(bad)
inc
loope
cli
dec
aas
push
iret
inc
and
jne
mov
(bad)
(bad)
(bad)
jg
sub
scas
xchg
push
and
mov
retf
gs
inc
inc
loopne
mov
add
mov
jp
xchg
icebp
push
mov
dec
retf
clc
mov
(bad)
mov
add
(bad)
(bad)
(bad)
dec
jnp
and
in
cmps
cmc
mov
push
cmc
mov
hlt
or
in
les
push
int3
(bad)
call
loopne
ret
mov
in
jmp
pop
sub
addr16
(bad)
(bad)
inc
in
mov
and
or
pop
pushf
mov
push
pop
adc
sbb
mov
clc
(bad)
(bad)
cmp
adc
pop
pop
add
inc
mov
in
jne
or
dec
into
push
and
jnp
jg
scas
add
sub
mov
cmp
jecxz
fisub
jno
(bad)
(bad)
(bad)
push
xor
pop
mov
dec
popa
cmp
lahf
add
jbe
mov
gs
sti
in
pop
jne
jp
call
mov
not
jle
out
jecxz
ss
dec
icebp
adc
pop
dec
scas
dec
mov
mov
xor
int3
ret
nop
repz
in
retf
sbb
adc
call
jge
push
clc
out
adc
call
mov
xchg
pop
out
int3
jecxz
xchg
mov
pop
mov
jle
jmp
es
inc
add
outs
mov
lea
add
out
cmp
jns
retf
mov
nop
(bad)
sahf
js
cdq
inc
mov
or
(bad)
(bad)
mov
call
xor
fldlg2
cs
inc
inc
int3
out
push
pop
(bad)
(bad)
(bad)
inc
xor
gs
dec
add
sahf
add
mov
mov
mov
movs
ret
dec
inc
mov
inc
test
mov
lahf
adc
loop
into
push
cmp
or
sbb
(bad)
(bad)
push
mov
lahf
stc
or
add
imul
inc
(bad)
(bad)
mov
or
rol
jns
mov
shufps
cmp
(bad)
push
std
or
inc
loopne
mov
in
or
out
das
adc
popf
mov
jmp
lock
cmp
popa
call
fs
in
adc
(bad)
(bad)
call
push
push
adc
add
je
dec
pop
ror
lock
sub
outs
sub
(bad)
(bad)
jmp
push
mov
xor
xchg
mov
mov
inc
xchg
jg
test
push
fnstenv
pushf
clc
clc
add
push
mov
cmp
ret
int3
(bad)
xchg
push
or
sbb
(bad)
(bad)
jmp
mov
arpl
sti
adc
dec
aas
cmc
cmp
cdq
xor
pop
push
xchg
js
push
add
(bad)
(bad)
jmp
popf
or
dec
adc
cmps
les
nop
out
test
mov
(bad)
(bad)
(bad)
inc
rcr
adc
pop
mov
jnp
mov
and
ds
or
xor
pop
mov
jmp
push
in
dec
data16
pop
mov
dec
sbb
rcl
(bad)
call
int3
call
test
and
imul
bound
enter
int3
or
(bad)
(bad)
inc
jae
loope
rol
adc
fisubr
iret
or
mov
add
pop
out
(bad)
jmp
shr
mov
stos
ret
adc
cmp
std
jmp
cmp
jmp
cmp
push
dec
push
out
(bad)
push
add
mov
(bad)
dec
(bad)
(bad)
(bad)
call
scas
ret
(bad)
sbb
inc
push
fbstp
cld
sub
bound
cmp
adc
(bad)
(bad)
jg
loope
cwde
add
pop
xchg
xchg
mov
jnp
cmps
inc
and
push
repnz
mov
adc
test
add
jb
movs
or
lahf
pop
iret
and
or
loop
lock
(bad)
jmp
push
in
dec
mov
fist
add
mov
hlt
pop
dec
add
jmp
pop
shl
lahf
mov
es
push
and
(bad)
(bad)
(bad)
call
loopne
ja
mov
mov
or
popa
cmp
pop
dec
ins
ss
std
ja
aad
enter
dec
(bad)
scas
mov
jns
add
dec
add
jae
mov
aaa
gs
(bad)
(bad)
call
shl
sbb
xchg
adc
sub
out
xchg
lds
and
das
jns
fcomip
call
mov
sbb
lods
lahf
and
test
mov
push
pop
dec
(bad)
mov
mul
and
adc
xlat
repnz
sbb
(bad)
(bad)
(bad)
jmp
retf
mov
cmp
int
test
xor
(bad)
pusha
push
(bad)
jmp
add
mov
xor
icebp
mov
adc
(bad)
mov
test
mov
mov
iret
(bad)
leave
or
(bad)
call
fistp
popf
(bad)
clc
inc
and
jmp
bnd
mov
int3
cmps
mov
outs
cmp
outs
gs
aas
in
pop
mov
xor
xlat
getsec
fwait
mov
movaps
push
adc
jle
add
fcomip
(bad)
call
retf
jns
test
and
cmps
int
ud0
(bad)
dec
inc
lock
addr16
add
ja
cmp
and
idiv
sti
(bad)
push
movs
sbb
jecxz
xchg
jns
xor
push
jp
cmp
mov
(bad)
(bad)
sti
imul
pop
mov
cmc
ins
push
out
test
rcl
adc
mov
call
movs
das
sbb
cmp
lods
loop
in
push
test
sbb
xor
mov
push
sbb
and
rcr
xchg
imul
les
xchg
pop
scas
mov
(bad)
jmp
xchg
pop
push
jb
cli
mov
aaa
pop
mov
dec
mov
sbb
jmp
jmp
inc
sbb
push
pop
ds
fidivr
ins
inc
fwait
std
push
cld
inc
pop
push
outs
push
jecxz
loop
dec
lahf
mov
icebp
(bad)
(bad)
(bad)
inc
sbb
(bad)
mov
xchg
sbb
loope
jo
stos
scas
mov
lods
mov
ja
(bad)
(bad)
(bad)
out
push
sbb
or
add
adc
add
std
adc
xchg
(bad)
(bad)
(bad)
fcomp
call
dec
dec
outs
popf
xchg
rcr
cld
call
and
(bad)
jmp
sahf
fnstcw
mov
push
bound
sub
aaa
mov
xlat
out
test
fstp
aas
scas
cmp
(bad)
(bad)
call
fnstcw
in
jb
push
sahf
sbb
sbb
push
sbb
mov
xor
loope
cmp
or
pop
cli
xchg
invd
adc
push
pop
sbb
and
mov
(bad)
(bad)
fistp
in
inc
leave
dec
inc
call
fcomp
push
inc
and
sbb
push
and
cmp
push
(bad)
hlt
cmps
pushf
in
mov
xlat
inc
jmp
mov
pop
cmc
mov
dec
sub
xlat
or
scas
mov
push
and
sub
sbb
outs
and
outs
call
mov
je
xlat
out
sbb
(bad)
mov
dec
int3
ds
mov
or
sub
call
jmp
fwait
(bad)
imul
cmp
div
jb
(bad)
call
ds
sub
ins
or
mov
or
add
pop
pop
pop
pop
vpmacsdqh
cmp
(bad)
inc
call
dec
fs
ins
ret
add
push
fs
(bad)
(bad)
(bad)
dec
sub
pop
(bad)
loope
in
push
lahf
xor
movs
jle
mov
xchg
lea
mov
jg
push
cmc
in
sti
inc
loop
cli
and
or
inc
(bad)
call
xchg
lock
(bad)
sti
data16
dec
adc
icebp
and
(bad)
jmp
test
jl
int3
add
das
or
mov
or
xchg
xchg
xchg
push
xor
mov
je
out
mov
popf
mov
sub
mov
adc
mov
push
test
retf
xor
int3
mov
sub
or
jns
(bad)
sti
sbb
stos
jmp
into
shl
jmp
fdivr
mov
stos
sub
sbb
ja
cmp
inc
je
(bad)
(bad)
(bad)
jmp
rcl
jnp
fdivr
out
imul
mov
stos
lods
test
pop
add
scas
iret
sbb
inc
inc
out
fld
aaa
inc
fisttp
pop
jo
nop
ret
loope
clc
js
ret
or
popf
ja
mov
jecxz
pusha
hlt
xor
sub
jl
pop
lock
mov
cmp
xchg
cmps
addr16
iret
push
stc
(bad)
cmps
push
sbb
mov
jmp
in
and
in
daa
popf
xchg
aad
lds
jo
retf
(bad)
(bad)
dec
xlat
push
cwde
es
dec
test
ja
in
sbb
push
xlat
int3
ins
mov
mov
sub
push
pop
lock
popf
push
mov
test
shl
mov
dec
xchg
xlat
xlat
xor
or
jecxz
inc
jae
or
jnp
sar
dec
fiadd
ror
sub
sub
or
fisttp
jmp
lds
pusha
push
popa
cmps
jmp
hlt
sub
dec
xchg
jg
pop
icebp
call
shr
mov
inc
je
loope
mov
push
imul
data16
cli
fmulp
mov
push
out
stos
jbe
adc
or
or
rcr
fidivr
jle
ja
stc
jl
(bad)
(bad)
call
fbstp
fdivr
in
imul
call
sti
retf
cmps
call
gs
mov
imul
(bad)
(bad)
(bad)
call
push
push
retf
add
pop
cmp
mov
fldenv
sbb
call
out
mov
pop
ret
adc
pop
or
and
mov
push
jg
pop
mov
dec
(bad)
(bad)
(bad)
dec
mov
mov
add
fucomp
mov
sub
jnp
retf
(bad)
(bad)
(bad)
jmp
ss
cmps
outs
js
sub
cmp
xchg
adc
(bad)
(bad)
(bad)
dec
loope
in
push
mov
xchg
mov
jl
outs
pop
pop
sbb
jbe
mov
inc
fnstsw
sub
icebp
mov
ret
test
xlat
inc
fnstsw
retf
test
(bad)
(bad)
(bad)
push
adc
outs
lods
add
mov
(bad)
loopne
jne
ds
fistp
pop
test
or
pop
add
mov
jnp
fwait
cmp
and
or
mov
mov
outs
or
mov
jne
push
pop
xor
and
das
cli
mov
mov
xor
mov
outs
lea
dec
fldenv
sbb
aaa
cld
in
psubd
add
xchg
jne
mov
pop
jmp
inc
and
scas
push
add
jns
mov
pusha
(bad)
(bad)
(bad)
push
mov
daa
push
sbb
fidivr
rol
icebp
sub
popf
xchg
jbe
sbb
inc
cmp
(bad)
push
jnp
jbe
add
inc
ds
pop
rol
cmp
ins
sbb
sar
(bad)
mov
shr
mov
or
lods
test
int
ss
(bad)
(bad)
jmp
lods
shl
push
pusha
adc
inc
pop
adc
pop
xor
push
std
jmp
cli
aad
outs
dec
push
mov
hlt
je
nop
push
fild
cmc
(bad)
call
mov
sub
sub
xchg
push
xor
mov
add
pop
cld
lods
mov
adc
xor
fidivr
je
daa
xchg
(bad)
outs
dec
hlt
mov
ret
sub
(bad)
jmp
cmc
xor
cmp
sbb
mov
pop
pusha
or
(bad)
(bad)
(bad)
inc
punpckhdq
jmp
out
mov
cmps
add
jg
dec
pop
inc
pushf
xchg
cli
call
(bad)
(bad)
call
aad
push
dec
addr16
cmps
sbb
adc
xlat
xchg
(bad)
sbb
addr16
shr
push
retf
and
(bad)
jg
test
lea
sbb
sub
pop
xchg
in
ins
pop
sahf
ds
(bad)
(bad)
(bad)
jmp
pop
mov
pop
mov
sahf
out
aaa
or
jge
pop
jge
jns
neg
ins
jne
mov
pop
inc
rcl
fwait
(bad)
cdq
push
pop
pop
popa
or
jmp
inc
mov
mov
retf
enter
test
push
test
pop
(bad)
(bad)
(bad)
inc
push
repz
inc
fdiv
rcr
xchg
arpl
bnd
scas
mov
ja
add
(bad)
call
mov
iret
mov
xchg
mul
mov
lock
sub
(bad)
(bad)
inc
icebp
sub
fdiv
adc
retf
mov
pop
stc
adc
(bad)
cmp
add
nop
mov
sub
sub
jnp
mov
sub
scas
hlt
mov
loopne
xor
lods
sub
gs
test
retf
test
inc
and
cs
cmp
lock
(bad)
lods
enter
or
icebp
sub
pop
and
ror
adc
push
(bad)
ror
sub
xor
jmp
bnd
(bad)
(bad)
(bad)
(bad)
mov
ja
cli
mov
in
adc
test
mov
xchg
push
test
int
out
imul
popf
push
push
lods
pop
and
dec
dec
push
and
in
jo
dec
or
in
(bad)
(bad)
jmp
xor
or
sbb
dec
cmps
cmps
mov
push
inc
popf
mov
lock
(bad)
dec
sub
sbb
pop
fdivr
pop
jae
aam
hlt
push
mov
enter
data16
(bad)
dec
aam
test
fwait
stos
jg
xor
push
inc
nop
stc
push
xchg
mov
dec
add
cmps
outs
clc
xchg
and
dec
sbb
clc
fild
and
(bad)
(bad)
dec
sti
cmps
mov
mov
and
popf
mov
push
inc
adc
dec
aas
cmp
(bad)
(bad)
(bad)
call
jecxz
rcr
inc
inc
outs
adc
add
repnz
sbb
pusha
in
idiv
inc
xor
jp
psadbw
adc
nop
xchg
ret
cmp
cmp
mov
(bad)
(bad)
dec
inc
shl
and
jmp
mov
data16
push
out
lds
push
jb
mov
push
jne
and
pop
xor
sbb
pop
xchg
xor
and
mov
popa
iret
dec
add
xchg
aam
cld
pop
dec
adc
pop
cmp
or
add
(bad)
push
pop
add
mov
outs
test
adc
mov
cmp
pop
je
lock
(bad)
(bad)
call
out
push
shr
out
push
dec
xchg
cmp
cdq
push
dec
pop
ret
test
aad
push
lock
(bad)
push
or
nop
pop
call
(bad)
mov
inc
fimul
jle
(bad)
(bad)
mov
pop
imul
test
xor
ror
sbb
sub
(bad)
mov
out
(bad)
inc
dec
jp
arpl
sbb
js
cdq
adc
(bad)
call
pop
cmp
ins
push
test
clc
mov
ficomp
xchg
mov
pop
jg
dec
cld
push
bound
fist
ror
inc
cmp
(bad)
jmp
push
mov
aam
adc
(bad)
mov
mov
mov
dec
les
sbb
(bad)
(bad)
add
fistp
out
mov
jnp
int3
jae
dec
ja
mov
(bad)
jnp
dec
fistp
(bad)
jbe
xchg
jnp
push
cli
cmps
jmp
cmc
inc
imul
jne
push
stc
jmp
mov
dec
cmp
sbb
pusha
and
stos
add
pop
push
jb
mov
daa
ins
cmc
and
mov
inc
call
jmp
(bad)
sahf
pop
mov
cmps
outs
jmp
cmp
aad
(bad)
xor
mov
xchg
add
aaa
rol
push
test
mov
add
pop
and
mov
(bad)
(bad)
jmp
cs
adc
xchg
mov
ins
sub
mov
call
sub
push
adc
push
pop
(bad)
jmp
(bad)
xchg
iret
jne
mov
mov
lods
aaa
push
in
imul
(bad)
(bad)
(bad)
push
sti
jmp
repz
pop
jo
mov
je
neg
sbb
out
call
(bad)
inc
xor
rep
in
xor
enter
add
rol
pop
jne
(bad)
jg
push
pop
aaa
xor
sti
push
cmps
fldcw
cmc
lods
cs
cmp
(bad)
(bad)
mov
jge
test
ror
xor
pop
cmps
aam
jmp
mov
mov
push
std
fcos
aaa
cld
dec
jo
mov
test
sti
dec
bound
ss
(bad)
(bad)
(bad)
fisttp
cmp
mov
xchg
fcom
pop
imul
pcmpeqd
std
(bad)
(bad)
jmp
adc
inc
mov
enter
je
fsub
push
test
test
(bad)
(bad)
(bad)
mov
jno
jle
(bad)
ins
(bad)
movs
mov
inc
in
das
adc
pop
lock
dec
push
mov
(bad)
int3
xchg
ret
fbstp
inc
jecxz
pop
out
(bad)
mov
in
in
sub
cmp
(bad)
(bad)
dec
mov
ins
mov
mov
and
and
and
mov
sbb
shl
sub
push
ret
mov
ja
and
xor
(bad)
(bad)
jmp
js
fcom
dec
iret
add
pushf
nop
cmp
aas
ja
fcomp
xchg
cli
(bad)
(bad)
jb
dec
(bad)
call
adc
mov
adc
imul
sbb
jg
fidiv
mov
fs
sbb
pop
(bad)
(bad)
(bad)
inc
pop
imul
xor
add
mov
cmp
out
retf
or
inc
cld
(bad)
call
loope
mov
jmp
xchg
jb
sub
push
(bad)
(bad)
(bad)
jmp
jmp
jbe
jne
pushf
mov
loop
stos
xor
gs
push
push
dec
dec
mov
adc
iret
movs
xlat
xor
ret
jb
sahf
pop
fist
cld
loopne
cmps
jg
scas
ret
xor
cli
(bad)
jmp
loopne
push
addr16
fild
xchg
jne
inc
jp
sub
mov
(bad)
(bad)
(bad)
ficomp
add
div
or
mov
pop
cmp
pop
lock
stos
(bad)
(bad)
(bad)
cmp
sub
daa
push
cmp
pushf
cmp
add
fiadd
add
adc
(bad)
(bad)
(bad)
dec
and
call
ror
int
into
mov
inc
and
jnp
mov
(bad)
inc
lods
add
ror
clc
jle
push
jno
and
sbb
ss
xor
mov
bound
sub
daa
outs
jge
aas
imul
aas
push
jecxz
xchg
stos
push
add
or
(bad)
(bad)
jmp
sub
xlat
cld
arpl
fstp
loopne
(bad)
scas
cmp
int
cli
pop
fld
inc
mov
sbb
pusha
mov
(bad)
(bad)
(bad)
jg
push
mov
add
mov
jns
setb
mov
pop
daa
lock
(bad)
(bad)
(bad)
mov
and
xor
sbb
iret
clc
or
push
pushf
jbe
sbb
loopne
sub
inc
sbb
retf
pop
clc
jae
mov
pusha
test
sar
(bad)
push
je
into
push
aam
shl
sbb
push
lock
pop
in
fisub
(bad)
(bad)
(bad)
push
icebp
jmp
xchg
fcomip
fmulp
aas
into
iret
mov
out
scas
pop
leave
es
mov
and
jbe
imul
pop
sbb
mov
sbb
popa
sbb
sbb
pop
mov
push
imul
mov
mov
push
popf
(bad)
push
add
mov
outs
or
jb
dec
lds
je
outs
cli
call
gs
or
sbb
outs
adc
dec
dec
sub
or
(bad)
(bad)
call
in
xor
popf
xchg
pop
pop
xchg
push
push
sahf
shl
push
pop
fidivr
in
or
jno
inc
sub
(bad)
(bad)
(bad)
jmp
(bad)
mov
push
das
cmp
jae
outs
jp
mov
out
xchg
mov
stos
(bad)
jmp
dec
neg
das
scas
pop
arpl
loopne
out
pop
(bad)
pop
icebp
loop
cld
jmp
push
pop
push
adc
ds
or
dec
lahf
adc
pop
xchg
lds
ror
push
movs
xchg
test
dec
pop
or
or
xlat
xor
(bad)
mov
xchg
or
cmp
jl
adc
or
fwait
sti
(bad)
(bad)
inc
aam
push
dec
pop
in
mov
push
stos
cmp
xor
(bad)
scas
inc
xor
push
movs
xchg
(bad)
dec
stos
loopne
mov
shl
push
fwait
inc
(bad)
(bad)
mov
xchg
repz
push
je
lahf
push
out
retf
mov
fst
(bad)
icebp
daa
(bad)
(bad)
(bad)
call
fnstenv
js
cld
jmp
sbb
sub
adc
(bad)
(bad)
jmp
dec
neg
inc
jne
leave
pop
fldenv
xchg
mov
mov
lock
add
push
sahf
movs
mov
jmp
mov
mov
sbb
pop
mov
adc
out
xchg
sbb
fsub
xchg
inc
inc
xchg
sbb
call
add
sar
or
jbe
cmp
hlt
hlt
inc
rol
in
pop
push
call
retf
push
div
jnp
(bad)
mov
rol
xor
sbb
and
push
es
gs
std
mov
jecxz
dec
sbb
mov
ror
jmp
retf
out
fild
ror
cmp
pop
rcr
std
jnp
stos
cs
mov
(bad)
(bad)
(bad)
jmp
pop
(bad)
cmp
in
call
lock
xchg
push
adc
cmc
mov
jp
call
cld
test
shl
adc
dec
mov
mov
pop
pop
pop
(bad)
(bad)
mov
sub
add
sub
shl
ins
dec
add
loope
loope
js
inc
xor
sub
repnz
xlat
cwde
and
rcr
fimul
mov
movs
add
retf
adc
iret
cmps
mov
and
push
ins
xchg
je
mov
mov
sar
(bad)
push
push
xchg
test
das
movs
lods
(bad)
jg
(bad)
sub
shl
in
(bad)
jg
leave
inc
aaa
jmp
mov
fmul
jle
shl
retf
push
add
scas
(bad)
xchg
adc
movs
sub
mov
loopne
(bad)
in
add
nop
push
and
xchg
and
pop
ret
add
push
add
and
add
pop
(bad)
mov
sbb
or
lods
xchg
iret
mov
jmp
retf
(bad)
(bad)
std
mov
cmps
arpl
or
(bad)
aaa
lods
xor
inc
lods
push
popa
xchg
sub
lds
sbb
sbb
mov
loope
aas
cmp
repz
(bad)
(bad)
(bad)
jmp
daa
mov
aad
mov
mov
js
rol
imul
inc
lock
and
sbb
jno
mov
call
sbb
sub
sbb
pop
mov
adc
add
in
xlat
pop
in
out
cmc
outs
sub
int3
test
sysenter
hlt
clc
out
imul
test
jg
dec
mov
jmp
pop
jmp
pop
pop
test
into
shr
std
lea
xor
xor
out
xchg
mov
aam
push
das
int
inc
mov
jmp
cdq
aad
cwde
push
xor
mov
sub
(bad)
call
pop
jae
scas
xor
cmp
js
mov
xchg
mov
shl
(bad)
mov
jp
and
loop
in
xor
jno
mov
mov
dec
mov
push
xor
call
gs
lods
pop
or
adc
adc
lahf
test
pop
enter
mov
bound
cdq
cdq
sub
push
sbb
mov
popf
jg
mul
mov
retf
(bad)
(bad)
(bad)
dec
fsub
in
rol
adc
inc
popf
pop
or
sbb
call
xor
xor
adc
repz
adc
push
xchg
cmp
inc
ss
(bad)
dec
int
push
mov
fwait
inc
fld
sbb
sub
pop
dec
mov
out
mov
cs
and
push
pop
int
add
mov
out
repz
cmp
jbe
fdivr
dec
sar
call
(bad)
(bad)
(bad)
(bad)
inc
fist
es
call
jno
mov
and
add
icebp
ja
jg
(bad)
call
or
xchg
add
push
fcomp
shl
inc
in
ins
popf
xchg
(bad)
(bad)
(bad)
call
cli
(bad)
push
dec
pop
test
je
inc
gs
movs
shl
out
mov
out
dec
mov
add
or
push
inc
sub
lock
mov
and
cli
test
stc
pop
jo
adc
cdq
and
mov
cld
and
push
jnp
mov
(bad)
call
sbb
or
mov
ret
das
bound
and
pop
lea
mov
jnp
dec
pusha
or
lahf
in
mov
dec
mov
retf
mov
(bad)
(bad)
(bad)
jg
iret
and
dec
and
popa
jmp
gs
js
imul
mov
mov
add
fild
call
inc
and
xchg
inc
clc
out
add
cmp
(bad)
(bad)
(bad)
inc
scas
inc
adc
(bad)
cli
jl
mov
add
or
jg
neg
(bad)
(bad)
(bad)
call
jns
pop
sub
push
adc
outs
pop
push
std
outs
jg
cld
push
adc
in
gs
adc
pop
lock
cmc
add
add
sub
gs
add
xchg
xchg
cli
(bad)
(bad)
cmp
dec
add
sub
dec
push
or
jg
inc
pop
mov
jmp
dec
out
pop
sub
inc
call
sahf
nop
(bad)
jg
jmp
dec
popf
neg
and
mov
inc
data16
mov
pop
mov
(bad)
mov
push
pop
imul
daa
int3
xor
and
cmp
(bad)
(bad)
inc
push
aam
aad
icebp
sub
push
pusha
adc
inc
cmp
sbb
push
ror
mov
iret
inc
pop
jbe
dec
test
xor
jns
xchg
stos
shl
stos
call
(bad)
outs
mov
mov
std
stos
nop
and
add
mov
mov
jmp
sub
stos
mov
push
push
xchg
retf
sub
dec
lods
mov
shr
mov
call
out
push
xor
sbb
adc
sbb
cmps
and
stos
mov
add
xchg
jno
mov
shr
sub
inc
shl
(bad)
push
jl
and
dec
ins
loope
sub
dec
or
push
sub
jmp
(bad)
cmp
mov
xchg
sub
sub
(bad)
push
sub
inc
ins
clc
xchg
inc
xor
daa
mov
adc
jge
les
inc
div
sub
mov
pushf
mov
jnp
mov
(bad)
(bad)
(bad)
inc
test
add
sbb
fsub
das
loopne
popa
push
mov
fild
stos
sub
(bad)
jmp
or
retf
imul
jl
or
fsubp
dec
push
dec
adc
(bad)
(bad)
(bad)
inc
shl
mov
mov
pop
cmovl
call
sub
sub
jns
(bad)
call
mov
add
pop
pop
iret
jbe
not
push
jb
jmp
mov
(bad)
(bad)
dec
int3
and
cmp
cwde
xor
stc
in
mov
loope
pop
pop
xor
inc
add
pop
out
hlt
das
cli
dec
pushf
add
gs
push
bound
out
imul
ss
pop
das
sar
mov
add
pop
pop
or
ret
sar
bound
or
jns
(bad)
(bad)
(bad)
jmp
cmps
out
outs
outs
jmp
icebp
test
push
jecxz
(bad)
fistp
lahf
(bad)
(bad)
(bad)
(bad)
js
fiadd
cmc
push
push
out
mov
push
sub
or
mov
es
mov
mov
(bad)
movs
dec
jmp
cld
mov
clc
push
xchg
int3
in
sbb
push
pop
jmp
test
stos
cli
cmp
aad
(bad)
(bad)
(bad)
jg
imul
cdq
lock
xrelease
xor
xchg
stos
cld
dec
(bad)
stos
daa
outs
lods
shr
int3
sub
cmp
dec
int
cwde
jg
and
xchg
sbb
adc
mov
(bad)
(bad)
(bad)
(bad)
push
cli
mov
outs
jg
test
and
cdq
and
adc
(bad)
(bad)
call
iret
(bad)
ficom
iret
push
push
xchg
or
mov
pop
rcr
xchg
aad
mov
add
mov
(bad)
(bad)
jns
mov
add
(bad)
fidivr
pop
add
(bad)
(bad)
(bad)
(bad)
add
mov
and
into
imul
inc
or
pop
dec
(bad)
(bad)
(bad)
(bad)
(bad)
xchg
mov
add
clc
push
add
int3
cmp
(bad)
push
repnz
jo
arpl
xor
cmp
mov
cmp
or
lods
mov
or
test
(bad)
(bad)
(bad)
jmp
std
cmp
and
(bad)
jnp
cld
sub
jb
push
sub
dec
mov
mov
mov
movq
shr
imul
outs
mov
cmp
push
xor
mov
mov
jp
outs
fdivr
(bad)
(bad)
(bad)
cmp
xchg
mov
lods
inc
ret
add
mov
ss
stos
or
inc
loopne
adc
outs
xor
mov
movs
or
xchg
pop
push
push
fldenv
(bad)
(bad)
(bad)
call
cmp
and
rcl
jns
dec
push
test
sub
add
sbb
(bad)
(bad)
jmp
inc
sti
fistp
sub
mov
cmp
push
das
mov
pop
jmp
lea
ins
or
(bad)
(bad)
(bad)
jns
not
idiv
ins
jl
outs
jge
cmp
jge
fcomp
in
jle
fnstcw
and
(bad)
inc
sub
push
jb
lea
xor
inc
adc
sub
jmp
or
sbb
xchg
xor
shr
sahf
push
push
cmp
call
(bad)
inc
sbb
(bad)
dec
mov
test
test
(bad)
call
mov
cmp
sub
(bad)
lock
mov
repz
data16
call
nop
pop
jns
not
xor
or
add
add
sub
(bad)
(bad)
(bad)
jnp
in
lds
inc
sub
pop
ins
in
(bad)
imul
cmp
cld
call
push
mov
iret
add
sub
cwde
sub
aad
sar
sar
adc
mov
dec
mov
mov
or
jg
mov
movs
sub
mov
inc
or
(bad)
(bad)
ffreep
ror
mov
adc
out
mov
inc
mov
std
ins
or
(bad)
(bad)
(bad)
push
test
and
xchg
sbb
mov
shl
pop
inc
movs
xchg
ret
(bad)
(bad)
(bad)
mov
stc
popf
arpl
inc
and
xor
out
test
iret
jae
(bad)
inc
or
fs
push
pop
mov
xchg
(bad)
pop
shl
fwait
data16
(bad)
(bad)
(bad)
jg
fiadd
outs
scas
sub
lods
push
retf
cmc
push
mov
(bad)
jg
repz
jno
inc
inc
inc
mov
mov
scas
pop
shl
cmp
add
jo
rcl
(bad)
inc
sub
int3
ss
js
mov
rol
les
fcomip
(bad)
(bad)
cmp
xor
mov
push
dec
dec
sub
or
push
push
(bad)
(bad)
(bad)
jmp
sbb
or
in
(bad)
mov
adc
(bad)
mov
push
leave
jb
(bad)
(bad)
call
push
or
mov
bswap
stos
xor
pushf
movs
lods
test
std
lods
repnz
push
xlat
bound
(bad)
(bad)
inc
inc
outs
gs
sar
daa
cmp
inc
repnz
sub
js
retf
xchg
das
xchg
inc
(bad)
(bad)
(bad)
jmp
rol
mov
xchg
xor
mov
rcl
dec
ins
cmc
mov
or
adc
jg
jmp
jp
sbb
mov
adc
sbb
push
adc
xor
dec
aaa
sti
mov
mov
pop
jmp
xchg
xchg
and
(bad)
(bad)
inc
cwde
shl
stc
cmps
fdivr
xor
add
repz
enter
cmp
mov
stos
ins
push
nop
cs
mov
ja
xchg
ins
xor
fisubr
ja
ins
loope
push
dec
cmps
aad
push
inc
lds
mov
jmp
add
cmp
mov
pop
pop
dec
ror
add
inc
jmp
ret
mov
lahf
mov
mov
es
jmp
jno
ja
call
dec
outs
jle
sbb
mov
(bad)
call
pusha
fldcw
cmp
or
xor
pop
and
inc
lahf
sbb
(bad)
mov
inc
call
(bad)
sub
out
xchg
test
mov
cmp
mov
pop
or
loope
arpl
jnp
xchg
pop
cmp
inc
inc
loope
add
or
(bad)
(bad)
(bad)
push
cmc
xlat
fbstp
mov
mov
fcomp
xchg
nop
add
(bad)
dec
inc
cmps
mov
or
cmp
mov
gs
pushf
push
add
xor
or
xchg
imul
call
in
push
fwait
iret
rcl
mov
jb
fistp
outs
mov
mov
stos
popa
ss
jmp
sbb
jmp
(bad)
rcr
or
jmp
fidiv
in
sahf
xchg
or
out
clc
jmp
add
mov
inc
(bad)
call
stc
dec
fisttp
cmp
mov
add
add
adc
(bad)
(bad)
(bad)
jmp
or
mov
or
xchg
jg
pop
iret
popa
mov
fcmovb
mov
(bad)
(bad)
jmp
jmp
pop
fistp
bound
pop
pop
test
jmp
retf
pop
sub
cmp
popf
call
out
sar
test
fwait
cld
jne
rol
mov
xchg
push
dec
(bad)
mov
or
aam
pop
loop
(bad)
jmp
mov
fnstcw
stos
stc
dec
aaa
popf
ret
lahf
dec
pop
mov
(bad)
(bad)
(bad)
mov
jmp
js
aas
or
jp
(bad)
repnz
rcr
xchg
push
pop
push
dec
in
adc
jmp
dec
repz
icebp
jae
arpl
mov
mov
dec
fs
(bad)
call
fcos
(bad)
in
test
inc
inc
mov
outs
lea
ret
inc
sbb
jnp
dec
(bad)
add
xsha256
cmps
(bad)
inc
cld
push
icebp
test
scas
push
lds
movs
sub
(bad)
jne
push
inc
adc
add
add
mov
test
jo
fiadd
inc
and
test
ds
ins
inc
push
clc
or
inc
je
shr
jae
inc
clc
fdiv
and
push
inc
push
outs
imul
sub
jbe
xor
inc
js
push
popa
imul
push
or
dec
lea
pop
lock
push
aas
movs
fld
imul
ins
in
jae
cmps
pusha
pop
scas
inc
pop
ins
cdq
inc
addr16
dec
dec
nop
ins
push
call
retf
dec
add
xor
pop
adc
adc
mov
fadd
aam
push
adc
adc
(bad)
inc
push
cs
xor
ins
int3
out
jne
test
xor
pop
push
xor
xor
bound
mov
not
fs
push
push
xor
inc
jns
fst
jae
xlat
or
or
push
jbe
dec
push
cmp
data16
movs
rcl
xor
push
mov
fild
lea
xchg
add
mov
sbb
sub
hlt
bound
es
jo
fsub
pop
sbb
cld
mov
not
push
push
outs
ins
push
and
sub
inc
popa
xor
fnsave
fs
out
dec
lods
(bad)
loope
ins
xchg
bound
jo
or
loope
jo
sbb
sub
dec
xchg
dec
jbe
push
gs
or
pop
sbb
xchg
int3
cmp
push
jp
xchg
pusha
xchg
jnp
popa
jne
jne
ret
and
cmp
jmp
inc
push
inc
sbb
std
xchg
outs
dec
inc
dec
inc
inc
jnp
cmp
sub
push
inc
jb
rol
xchg
inc
and
cmp
mov
popa
or
adc
(bad)
shl
ret
fdivr
add
push
pop
push
dec
inc
dec
xchg
je
inc
push
adc
push
add
and
inc
mov
add
push
push
pusha
iret
sbb
pop
outs
xor
gs
not
cmp
xor
sub
pop
mov
loop
mov
outs
outs
inc
jns
ret
pop
adc
xor
cmp
bound
(bad)
js
push
mov
xor
scas
call
and
push
mov
push
mov
lds
sti
xor
mov
xor
push
adc
dec
sbb
add
jecxz
push
je
ja
adc
push
pop
xor
xchg
mov
xchg
cmp
push
dec
int
dec
fsub
push
inc
jae
sbb
push
xchg
add
and
in
loope
jnp
mov
jp
arpl
push
sbb
jns
xor
jne
dec
js
xchg
inc
mov
mov
cmps
sub
fsub
adc
pusha
bound
xor
into
fsub
sbb
add
push
outs
jnp
loopne
jb
push
scas
adc
dec
sub
fmul
cmp
dec
jp
inc
fdiv
movs
inc
call
fs
jno
jb
inc
es
cmp
ins
mov
or
mov
jns
sub
ret
sub
mov
dec
xor
loopne
fsub
or
mov
popa
(bad)
int3
add
or
push
addr16
dec
gs
(bad)
lock
loope
rcr
or
inc
mov
aaa
sbb
or
lea
cwde
loopne
repnz
js
add
push
(bad)
sbb
cmp
xor
sub
xor
mov
adc
test
add
inc
je
fld
sub
fist
arpl
fiadd
inc
inc
daa
popa
adc
add
xchg
push
dec
arpl
jbe
push
xchg
inc
rol
lock
rcl
frstor
retf
push
adc
and
xchg
enter
add
lock
jmp
inc
pop
in
add
repnz
js
adc
add
shl
mov
mov
dec
daa
or
or
xor
ins
push
outs
mov
cmps
in
shl
pop
ins
lds
sbb
sbb
push
sub
xor
inc
ds
pop
movs
cmp
fimul
inc
dec
pop
sub
cli
or
outs
outs
repnz
sub
cmps
aad
adc
iret
mov
mov
popa
push
imul
adc
jl
mov
pop
cmps
dec
pop
imul
cmp
arpl
adc
sbb
jne
pop
dec
mov
sar
or
inc
mov
imul
pop
mov
push
add
mov
mov
add
out
(bad)
fiadd
adc
sti
pop
repz
pop
pop
mov
les
dec
bound
popf
dec
adc
sar
mov
and
adc
pusha
dec
aad
xchg
push
sbb
jle
mov
aas
inc
dec
push
dec
inc
mov
add
push
out
in
lods
fld
pop
in
cmps
pusha
mov
dec
sub
inc
call
in
push
pop
push
dec
cmp
scas
retf
adc
arpl
cmc
adc
add
inc
pop
outs
ins
pop
adc
pop
dec
and
gs
sub
data16
push
jge
push
daa
pop
(bad)
push
inc
push
retf
stos
add
xchg
xchg
in
jo
daa
loopne
add
push
std
inc
add
rcl
add
dec
hlt
test
call
outs
push
pop
dec
hlt
jl
jae
push
mov
rcr
pop
xor
add
adc
sub
jo
fs
sbb
ret
jo
sub
inc
dec
fsubr
push
sbb
xor
xchg
add
adc
push
push
dec
ds
(bad)
iret
call
inc
or
repz
push
mov
and
jg
pop
xchg
sub
or
push
mov
mov
fld
outs
jns
outs
jne
add
pop
sti
dec
cmp
add
push
mov
push
in
cwde
jo
call
nop
pop
sub
mov
cmp
lods
ret
sbb
sbb
in
jne
jb
shl
jb
adc
add
in
imul
ins
xchg
addr16
loopne
loopne
add
in
push
mov
shl
and
push
xlat
pop
adc
lock
or
mov
jnp
cmp
pusha
xor
mov
or
imul
test
dec
repnz
jo
bound
aaa
pop
or
xor
stos
pop
in
and
add
ins
jecxz
adc
popf
leave
and
jl
bound
ds
ins
dec
dec
or
test
adc
iret
arpl
push
xchg
fld
xchg
outs
outs
push
sub
jmp
outs
mov
lods
or
jno
inc
cmp
sub
xor
dec
clc
outs
or
(bad)
xlat
imul
add
call
adc
inc
mov
lea
inc
dec
pop
push
or
mov
mov
jbe
ins
imul
mov
imul
popa
inc
mov
(bad)
mov
out
or
out
and
fucomp
xor
ficom
test
pop
add
test
ror
and
mov
xchg
outs
xchg
cmp
xchg
in
pop
add
inc
jo
jnp
add
rcr
popf
pop
pop
lea
js
iret
add
push
jb
dec
jmp
(bad)
(bad)
call
and
cmp
adc
sub
das
pop
push
or
cmp
adc
or
push
mov
sbb
or
or
nop
sbb
push
push
dec
or
push
adc
(bad)
outs
mov
aas
adc
es
sbb
sbb
aaa
and
test
cmp
jnp
std
(bad)
xor
dec
push
dec
sbb
adc
movups
cmp
dec
adc
nop
or
(bad)
(bad)
jg
movhps
sbb
cmp
adc
pop
push
add
push
or
sbb
mov
or
adc
call
sub
adc
sbb
xor
idiv
jmp
or
or
or
outs
sbb
dec
and
pop
daa
stos
push
or
sbb
lock
jg
cmp
sbb
or
adc
adc
pop
dec
or
jb
mov
inc
or
or
or
pop
fwait
lock
jnp
inc
lock
add
sub
cmp
and
cs
mov
xor
call
cs
mov
pop
jp
ja
or
sub
(bad)
jg
inc
mov
lock
add
jle
test
inc
pop
lock
sbb
call
and
fs
adc
push
or
daa
or
push
sbb
push
sbb
or
adc
or
adc
push
pop
es
pop
das
add
lock
add
pop
push
add
cs
cmp
or
add
(bad)
sub
or
jg
lds
cmp
shl
imul
pop
sbb
es
inc
(bad)
(bad)
(bad)
dec
and
jnp
mov
popa
sub
and
and
or
sbb
dec
jb
and
adc
adc
inc
xchg
outs
out
call
jle
cmp
enter
xchg
pop
adc
inc
adc
push
lock
(bad)
push
inc
add
add
stos
or
pop
daa
push
leave
lock
adc
test
test
sbb
jno
and
call
(bad)
pop
and
lock
std
pop
rcl
push
in
or
xchg
lock
sbb
mov
mov
cwde
add
xor
or
mov
xor
jg
mov
or
push
pop
adc
lock
add
arpl
aas
mov
test
sub
push
pop
adc
mov
and
or
lock
cli
cmc
add
stc
mov
or
mov
pop
pop
or
add
or
add
adc
pop
lods
add
or
imul
add
lar
or
and
jbe
push
in
lods
or
(bad)
push
add
pusha
adc
aam
add
add
push
mov
add
mov
leave
push
lock
push
adc
adc
rol
adc
jecxz
mov
push
ds
jle
ins
sub
call
push
in
sub
and
cs
adc
and
mov
dec
sbb
sbb
inc
pop
or
sti
dec
adc
push
or
sbb
dec
sbb
xor
adc
cmp
push
cmps
push
add
and
es
stos
(bad)
xor
jle
imul
pop
movs
pop
in
mov
cmp
adc
lock
cmp
(bad)
(bad)
pop
push
sbb
or
or
mov
dec
xchg
sbb
pop
and
and
adc
dec
dec
gs
or
rdmsr
xor
ja
xor
adc
mov
jne
mov
cmp
in
and
add
and
and
dec
sub
adc
xor
adc
movlps
das
or
(bad)
(bad)
(bad)
(bad)
cmp
adc
cmp
and
adc
add
lock
or
add
sbb
sbb
lds
adc
daa
or
inc
or
add
push
mov
dec
or
sub
fwait
sbb
sub
(bad)
(bad)
imul
cmp
add
pop
or
and
xlat
adc
push
push
xor
mov
xchg
ret
iret
mov
adc
add
sbb
sub
data16
cs
arpl
pop
cmp
jno
outs
push
push
clc
pop
movs
cli
and
imul
or
lock
add
aad
(bad)
(bad)
(bad)
scas
push
pop
xor
inc
or
or
and
pop
sub
push
sbb
add
ds
retf
xchg
or
push
push
mov
test
or
push
mov
or
or
movs
sbb
and
adc
push
xor
add
sahf
adc
adc
sbb
adc
adc
or
adc
loopne
icebp
mov
ins
sbb
adc
mov
sbb
inc
xchg
pushw
sbb
mov
push
aaa
push
ins
or
jl
push
ss
adc
push
add
or
aaa
or
outs
clc
ins
add
or
xchg
daa
inc
retf
mov
ret
ins
push
imul
adc
sub
aas
cld
mov
sbb
pop
and
cmp
push
dec
push
push
cmp
add
cmp
pusha
fsub
aaa
mov
dec
or
add
dec
pushf
out
clc
push
ins
adc
sbb
adc
sub
adc
adc
popa
jmp
aam
sbb
pop
movs
sbb
dec
or
push
dec
sbb
mov
and
adc
inc
adc
and
push
int3
adc
jg
stos
cli
push
aaa
xor
dec
rcr
outs
pop
ss
xor
popa
out
js
sbb
pop
push
test
pop
scas
fcom
sbb
jne
cld
sbb
sbb
sbb
sbb
sub
packssdw
mov
sbb
inc
daa
hlt
pop
cvtdq2ps
or
pop
cmc
jmp
test
dec
cmp
repnz
or
xchg
mov
push
sub
retf
and
loop
sbb
cmp
(bad)
or
mov
hlt
sbb
pop
adc
lock
xor
and
jl
pop
sub
sub
jo
pop
or
sbb
or
in
push
mov
pop
xor
sbb
arpl
xor
pop
pop
push
cmp
inc
push
jge
sbb
test
push
shl
and
xor
adc
fist
or
push
dec
fs
or
sbb
inc
cmp
inc
sub
and
and
lock
ins
mov
adc
nop
sbb
push
sbb
icebp
jg
sub
or
cmp
and
dec
aaa
femms
inc
push
arpl
call
aaa
sbb
and
push
sbb
push
adc
pop
xor
(bad)
sti
call
and
dec
push
jl
inc
cmp
and
sbb
and
inc
xor
clc
jno
mov
das
dec
sbb
push
mov
shr
or
xor
adc
or
inc
push
push
push
ja
and
adc
pop
ret
push
adc
mov
or
mov
xor
cmp
and
fs
cs
pushf
adc
sahf
dec
adc
xchg
adc
mov
pop
dec
or
aaa
sti
cmp
ror
adc
adc
cmp
cmp
f2xm1
jno
or
and
jmp
or
dec
add
mov
cli
(bad)
or
ds
inc
push
dec
cmp
or
sbb
jg
or
adc
adc
push
sbb
xor
pop
pop
fcomp
lock
cli
(bad)
(bad)
(bad)
jge
outs
and
out
lock
add
lock
lock
add
fldenv
xor
fldenv
and
push
sbb
and
push
and
(bad)
(bad)
inc
adc
add
aad
lock
adc
(bad)
call
rcl
cmp
mov
lock
xor
mov
loopne
add
add
adc
push
adc
or
mov
wbinvd
pusha
and
mov
les
cmp
and
or
push
fiadd
bound
add
add
or
add
clc
xchg
adc
retf
xor
dec
add
adc
sub
pusha
add
loop
or
cmp
dec
pop
push
jo
out
push
push
mov
gs
mov
pop
jbe
sbb
(bad)
adc
ucomiss
popa
shl
push
mov
xor
and
and
out
call
pusha
mov
adc
lock
add
or
dec
cmp
cli
add
add
mov
ins
es
or
and
aas
data16
js
mov
das
test
and
sti
add
inc
add
aam
pop
(bad)
(bad)
aas
adc
add
dec
xor
ss
and
inc
xchg
push
and
ret
(bad)
cmp
or
adc
xor
add
xchg
nop
push
jo
or
sub
pushf
adc
loop
or
(bad)
mov
or
add
pushf
or
add
add
pop
lock
mov
lock
mov
add
mov
jb
jae
mov
loop
lods
add
push
out
push
sub
or
cmp
cmp
cmps
mov
enter
or
or
adc
or
ins
add
sub
idiv
sbb
push
cmp
cwde
inc
dec
add
js
adc
aaa
je
push
mov
adc
pop
hlt
fwait
or
into
pop
sub
lock
add
push
fisubr
inc
pop
adc
and
adc
and
aas
adc
in
or
pop
cmp
sbb
adc
cmps
and
daa
or
mov
and
sbb
clc
pop
(bad)
call
and
push
and
push
pop
fild
sbb
xchg
pop
mov
(bad)
out
sub
outs
add
shl
push
inc
pop
popf
test
sub
ss
lock
jg
pop
lock
jmp
lock
push
dec
add
and
outs
fadd
jne
leave
xor
sbb
pop
imul
je
add
ja
or
adc
aas
mov
adc
sbb
jp
or
or
mov
mov
cmp
xor
popa
mov
push
push
pop
adc
ret
sbb
mov
add
mov
cld
fwait
mov
or
push
sbb
mov
add
cmp
add
xor
adc
aaa
xor
jo
cli
dec
outs
pop
jne
jb
pop
sbb
lock
repnz
sub
adc
dec
dec
push
ret
cs
fs
pop
mov
jg
mul
lock
add
and
jecxz
(bad)
jbe
ins
movs
jo
add
pop
adc
add
inc
call
pop
data16
xor
xchg
add
lea
mov
scas
mov
pop
push
adc
or
or
or
add
or
loopne
js
sub
sub
or
adc
in
mov
adc
popa
mov
or
adc
aaa
adc
pushf
fisubr
sub
cli
adc
and
sub
dec
retf
outs
and
fstp
mov
test
pop
and
add
lock
jmp
fwait
jbe
xlat
mov
sub
sub
ins
cmp
(bad)
jg
test
scas
add
dec
inc
dec
or
push
adc
cmps
in
mov
bound
add
or
cdq
mov
sub
pop
pop
sub
or
adc
adc
sub
pop
or
push
adc
mov
mov
outs
js
sbb
push
jl
or
cmp
add
popa
add
inc
inc
sub
push
inc
emms
or
jle
adc
and
push
sub
dec
inc
adc
ds
and
lock
stos
sub
adc
push
push
or
adc
jo
sbb
dec
add
outs
clc
push
or
sbb
lock
push
(bad)
push
call
stos
ror
sub
add
in
xchg
add
cmp
jle
and
add
(bad)
mov
lea
or
mov
sbb
push
mov
mov
sub
jae
lock
add
adc
mov
add
ror
jp
mov
adc
adc
sbb
push
add
bound
ja
add
adc
mov
cwde
push
mov
enter
sbb
add
stos
(bad)
xlat
aad
ret
sbb
lock
push
xor
cs
mov
data16
and
inc
sub
sub
and
sub
and
and
sub
xor
repz
sub
push
cs
and
sbb
fistp
in
dec
push
gs
xor
xor
pop
jmp
std
push
xor
mov
int
pop
xor
sub
xor
dec
jmp
cmp
dec
push
xor
xor
dec
mov
(bad)
lock
xchg
jmp
mov
mov
pusha
and
movups
sub
inc
jbe
mov
add
add
adc
or
push
nop
imul
or
(bad)
xor
fidiv
add
mov
fisub
rcr
or
and
adc
dec
sbb
jge
add
add
je
sbb
sub
pushf
lock
add
or
pop
pusha
add
add
or
sub
add
lock
and
test
lock
push
in
mov
sbb
adc
cmp
add
or
or
pop
or
adc
mov
sbb
adc
dec
jnp
and
mov
add
add
pop
loope
and
ins
mov
imul
or
push
or
in
movs
ins
fwait
sub
pop
adc
pop
xor
lock
adc
and
or
add
add
add
or
add
or
sahf
adc
or
adc
pusha
(bad)
pop
imul
mov
or
add
in
jbe
dec
add
adc
pop
sbb
mov
in
int
sbb
cld
push
dec
adc
sub
cmp
sbb
ja
imul
add
cmps
aad
or
sbb
outs
imul
fisttp
pop
pop
sbb
ins
adc
ins
test
cmp
push
mov
dec
add
dec
sbb
arpl
ss
jl
and
inc
outs
mov
mov
or
pop
adc
outs
sub
(bad)
ins
arpl
sub
or
mov
adc
add
jae
inc
dec
add
bound
xor
aas
lds
and
add
fimul
xchg
cwde
stos
lock
add
sbb
lock
ss
sub
cmp
movs
or
nop
mov
sbb
dec
inc
mov
or
add
sbb
fwait
bound
mov
js
data16
mov
sub
and
and
and
aam
xchg
inc
dec
push
inc
ret
enter
adc
pop
ret
or
or
adc
add
pop
mov
adc
adc
pop
mov
jnp
(bad)
mov
cmp
push
pop
add
inc
adc
mov
in
push
sti
sahf
sbb
push
mov
push
pusha
mov
xor
xor
ds
and
movs
add
pop
mov
sbb
jno
add
xlat
pop
ins
or
cs
popa
cmps
xchg
or
jo
add
mov
jnp
dec
out
inc
cs
test
mov
stc
dec
or
sahf
sahf
out
push
es
xchg
dec
rcl
gs
and
pop
ss
push
inc
dec
inc
fdiv
adc
cs
and
loop
mov
dec
int3
add
dec
inc
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
lds
xchg
