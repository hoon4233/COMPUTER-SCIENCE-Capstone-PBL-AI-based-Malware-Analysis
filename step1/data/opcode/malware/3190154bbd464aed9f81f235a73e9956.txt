mov
mov
inc
inc
(bad)
(bad)
jmp
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
(bad)
(bad)
(bad)
jmp
arpl
addr16
ins
outs
outs
jo
jb
je
jbe
js
jp
xor
xor
ss
cmp
sub
push
pop
push
push
xor
xor
fs
ins
(bad)
mov
inc
push
dec
inc
dec
or
jns
imul
arpl
gs
arpl
je
push
inc
push
dec
daa
std
mov
imul
imul
dec
popa
outs
push
int3
ins
lods
sbb
cmp
inc
popa
je
mov
fistp
or
std
ss
sti
pop
inc
push
outs
imul
xchg
std
jae
outs
ins
cmp
outs
dec
gs
pop
jbe
and
dec
sbb
(bad)
push
popa
ins
jne
inc
js
or
sub
out
adc
push
jb
and
adc
push
add
push
jae
sti
fwait
mov
mov
push
inc
dec
shl
mov
gs
jb
inc
gs
dec
push
or
ins
and
dec
das
or
das
mov
(bad)
int3
jns
aaa
popa
xor
dec
xor
and
inc
jae
xor
out
xchg
inc
pop
push
test
and
mov
fs
movs
xchg
jg
and
jg
enter
and
push
xor
xchg
and
fisub
dec
push
lods
mov
movs
shl
or
push
mov
and
mov
dec
popa
mov
and
pop
or
arpl
add
fs
imul
fs
and
pop
xlat
lods
popf
pop
inc
or
inc
xchg
outs
pop
test
and
test
inc
pop
inc
inc
or
test
inc
mov
std
fisttp
and
and
jae
imul
outs
jb
pop
or
pop
addr16
ret
adc
iret
outs
ins
jp
jbe
push
arpl
js
add
sbb
rol
in
popa
add
xor
(bad)
repz
outs
je
aad
jecxz
call
push
into
or
jns
push
or
dec
dec
arpl
(bad)
mov
arpl
je
jo
xor
(bad)
(bad)
popf
fs
add
bound
xchg
(bad)
jno
push
je
mov
retf
or
jne
mov
sbb
xchg
mov
add
cwde
jnp
mov
outs
lock
adc
add
xor
ror
mov
jae
mov
xchg
js
push
cmp
inc
push
test
mov
add
sbb
push
add
lsl
and
xor
push
inc
inc
add
arpl
fs
add
and
sbb
outs
psraw
shl
push
into
enter
push
jnp
mov
enter
arpl
mov
xor
xor
xor
mov
addr16
xor
add
rol
inc
push
imul
jne
test
stos
dec
pop
shl
add
xor
arpl
jg
adc
add
push
add
call
pop
pop
inc
sbb
push
push
dec
dec
dec
pop
push
jns
int
push
ins
dec
and
push
mov
pop
sub
xor
jle
dec
jp
xor
dec
sub
add
inc
fwait
std
lds
xor
add
inc
bound
pop
rol
sbb
add
imul
neg
cmovbe
es
mov
enter
jge
call
addr16
addr16
push
mov
xor
in
pop
push
inc
inc
call
jmp
dec
not
or
jno
and
inc
push
sub
xor
push
das
cmp
or
outs
outs
pop
mov
cmp
or
das
xchg
sub
dec
push
cmp
or
gs
in
pop
lods
mov
and
das
sub
push
jge
js
out
sub
dec
outs
jp
pop
popa
das
xor
sti
xchg
mov
jae
and
dec
lds
and
cmp
or
fistp
sub
arpl
and
mov
test
push
gs
and
cmp
mov
aaa
xchg
pop
push
outs
js
in
pop
mov
gs
add
ins
mov
lods
add
das
sub
cmp
das
xchg
rol
or
mov
loopne
aam
not
es
fstp
add
sub
mov
ins
inc
jae
es
jo
sbb
xor
mov
jge
outs
xchg
popa
popf
bound
adc
xor
push
xor
outs
ja
dec
push
adc
xor
ret
xor
cmps
mov
sub
nop
shl
and
pusha
fxch
pop
mov
mov
sub
js
js
imul
push
or
mov
fwait
or
jo
popf
popa
push
das
mov
jno
jae
xor
jbe
jmp
test
jbe
cs
jae
and
push
jo
ds
mov
pop
add
imul
push
lods
sub
test
push
pop
and
mov
inc
addr16
outs
mov
call
adc
outs
(bad)
push
dec
or
dec
gs
inc
or
mov
jbe
addr16
adc
sbb
and
popa
enter
jge
xor
idiv
std
and
ret
dec
pusha
jbe
mov
call
and
pop
add
xlat
mov
and
sub
sub
sub
or
fsub
adc
es
cs
or
xor
push
push
sub
sti
test
(bad)
in
(bad)
(bad)
in
sub
mov
push
call
les
call
call
mov
mov
mov
mov
jmp
es
add
idiv
push
cld
cld
movsx
test
je
inc
ud0
or
mov
push
call
cmp
(bad)
jl
call
add
aaa
sub
shl
dec
hlt
mov
push
call
lods
mov
and
or
xor
sub
dec
loope
push
jg
add
(bad)
mov
add
in
jmp
push
mov
in
std
add
dec
dec
sub
rcr
add
push
inc
xchg
gs
dec
add
cmp
sbb
lods
add
and
movs
arpl
fld
cmp
mov
clc
adc
mov
jl
mov
pop
clc
clc
push
add
or
jge
pop
loope
cmp
sbb
jo
ins
test
xchg
and
in
sbb
push
out
retf
lods
xor
mov
in
ret
adc
sbb
push
(bad)
mov
adc
mov
inc
sbb
and
or
xlat
cdq
jnp
sti
cmp
jne
or
rol
inc
ss
mov
or
push
sbb
cmp
enter
xchg
jmp
mov
popf
cwde
cmp
add
sub
mov
sub
push
shl
xchg
ins
rcl
bnd
(bad)
or
jmp
add
mov
ins
mov
push
aam
rcl
mov
test
push
push
mov
(bad)
in
cmc
cmp
ror
add
test
leave
ret
adc
cmp
movs
cld
add
push
push
pop
lea
stos
stos
push
pop
in
int3
jne
push
enter
cmp
pop
add
xchg
push
push
in
iret
pop
(bad)
mov
mov
adc
push
gs
imul
pop
adc
or
jmp
in
push
xor
jp
jge
mov
push
jg
cld
mov
rcl
ds
adc
ja
fnstenv
jne
test
shl
popf
loope
push
sbb
dec
(bad)
sub
out
dec
(bad)
test
cli
int
jge
or
lods
(bad)
adc
mov
mov
out
push
sub
pop
aam
retf
jbe
ins
fistp
pop
fcom
fdiv
mov
ins
out
in
jns
lock
add
dec
outs
jecxz
pop
hlt
out
jecxz
mov
int
xor
mov
push
push
push
jae
jmp
xchg
int
inc
sbb
int
test
adc
ins
ins
ds
inc
push
push
sbb
sbb
test
fs
push
enter
add
in
es
sar
dec
enter
cmp
dec
mov
nop
movs
jbe
and
je
push
jb
inc
les
jmp
xchg
cmp
push
rcl
xor
push
movzx
inc
inc
push
mov
popa
mov
and
inc
shl
mov
les
pop
cmp
add
cli
aaa
xchg
into
inc
jmp
mov
pop
pop
pop
add
outs
xor
in
rcl
in
push
stc
cmp
in
hlt
cwde
cld
pushf
add
mov
sbb
adc
sbb
and
jb
enter
xor
mov
rol
enter
in
xchg
and
pusha
aam
fdiv
jg
jb
js
sbb
in
test
in
sahf
int
ror
mov
and
xchg
data16
sbb
cwde
sub
sbb
call
xchg
data16
mov
movs
sbb
inc
aam
fmul
or
push
int
xor
lock
hlt
pop
cld
movs
jns
and
sbb
call
jo
movs
sbb
je
js
setnp
adc
in
iret
dec
sbb
retf
cli
cmp
fisubr
stos
bound
pop
push
sbb
sbb
sub
xor
jne
(bad)
mov
jmp
arpl
mov
cmp
mov
dec
mov
jae
jge
inc
or
sbb
in
fcomp
ins
adc
inc
push
mov
jle
cmp
movsx
push
movs
pop
adc
adc
iret
cmps
popf
jp
lds
fldcw
imul
mov
dec
mov
imul
push
add
daa
xor
sub
and
loopne
js
aad
je
pop
nop
mov
pop
or
lea
adc
cmp
push
jge
aaa
ins
mov
add
cmp
jne
mov
ja
mov
cmp
jne
jmp
emms
loope
fisttp
mov
jmp
shl
add
fidivr
xor
je
adc
or
xchg
fidivr
inc
and
imul
ja
jb
xchg
test
aaa
push
mov
(bad)
(bad)
and
push
xor
cmp
and
pop
sub
jmp
sub
clc
adc
xchg
or
dec
je
add
inc
sub
je
data16
add
test
loop
sbb
aas
idiv
cli
mov
mov
mov
mov
sbb
or
repz
jo
mov
or
lock
sbb
mov
arpl
xor
jnp
je
mov
mov
pop
je
dec
dec
jne
mov
mov
and
jge
mov
sub
and
cmp
shl
fsubr
mov
add
test
or
loopne
outs
clc
jne
push
xor
test
test
sbb
test
adc
or
(bad)
movs
push
lods
adc
or
sub
mov
js
push
sbb
loopne
or
neg
sbb
not
and
pop
loopne
jbe
push
jmp
push
mov
(bad)
jmp
(bad)
scas
rcl
jne
pop
push
jno
lock
mov
cmp
repz
xchg
sbb
mov
pushw
enter
in
stc
push
pop
test
jmp
push
inc
mov
add
push
int
mov
je
shl
xchg
jb
dec
fwait
(bad)
pop
xchg
imul
fimul
aam
inc
mov
dec
xchg
bound
and
cmps
xchg
jo
inc
les
push
adc
push
imul
sub
adc
push
lahf
pop
mov
dec
sbb
lea
repz
adc
aam
mov
pminub
repnz
push
data16
call
(bad)
movs
fwait
or
push
jo
add
scas
jp
pop
mov
loope
je
enter
xor
shr
daa
or
rol
and
push
jl
xor
xor
and
pop
pop
fcomi
push
push
hlt
sti
mov
clc
and
inc
test
shr
xchg
push
push
cmp
fpatan
test
test
or
cmovp
add
aas
pop
or
xlat
xor
push
or
cmp
mov
add
repnz
xlat
icebp
jge
adc
adc
push
iret
call
push
add
dec
fnsave
rcl
jl
in
xor
cld
fs
outs
mov
push
fcomp
lods
cld
stc
ror
lods
cld
mov
push
mov
dec
std
and
cmp
push
adc
sbb
push
pop
sbb
cmp
adc
cmp
sub
int
adc
pushf
data16
sub
les
enter
pop
cs
int3
mov
xchg
fisttp
stc
jo
gs
outs
cmp
jbe
mov
and
aam
cmp
mov
mov
or
cwde
jp
sub
inc
lock
xchg
test
push
sub
push
sub
mov
ins
dec
add
outs
xor
ins
lock
arpl
pop
adc
call
xchg
sub
dec
lock
inc
(bad)
or
cmp
cwde
mov
retf
aaa
xchg
push
call
mov
ret
xor
mov
(bad)
sbb
mov
ins
loop
add
xchg
lea
in
leave
mov
nop
shl
sbb
cmp
aam
arpl
cmp
xor
nop
jbe
je
push
or
(bad)
in
mov
cmps
imul
test
pop
lods
lods
cmp
pop
add
sbb
(bad)
ins
cmp
or
jg
sub
rcl
sbb
pop
js
in
ja
cli
lahf
mov
xchg
xor
and
ss
pop
mov
inc
fsubr
ja
jnp
inc
ret
or
mov
mov
loopne
mov
push
mov
push
popf
out
or
xor
enter
cmp
lods
mov
(bad)
adc
ja
call
scas
mov
test
bound
push
sub
dec
cdq
jge
pop
ss
ins
mov
jne
lds
mov
(bad)
ins
enter
pop
ss
in
cs
fs
int
into
sub
push
mov
mov
mov
mov
pop
mov
mov
cs
es
int
fnstenv
mov
mov
(bad)
shl
inc
ret
or
cmps
jg
adc
sbb
or
stos
call
jo
sbb
iret
(bad)
dec
and
retf
inc
out
lods
add
fsubr
push
js
or
inc
dec
scas
adc
pop
sbb
mov
or
and
pusha
and
and
imul
jmp
pop
call
sub
adc
mov
dec
ret
fcomp
and
mov
or
iret
fsub
call
lods
in
xor
cmp
(bad)
jmp
fldenv
mov
xchg
in
and
fsub
or
in
hlt
mov
int
lock
mov
enter
add
pusha
xchg
adc
imul
cmp
adc
out
daa
cmp
sbb
(bad)
retf
cs
pop
jmp
jb
or
jb
test
or
jbe
test
mov
add
shr
retf
lea
xchg
gs
js
jo
mov
jbe
cdq
outs
call
popf
call
mov
push
rcl
rol
push
jo
cmps
std
fs
(bad)
std
jmp
dec
ret
clc
cmp
je
lock
jno
xor
push
inc
std
fscale
mov
imul
adc
xor
and
inc
push
push
nop
push
call
popa
pop
add
push
mov
ror
enter
inc
cs
clc
xor
bound
and
push
fs
shl
mov
aas
sahf
jbe
inc
loop
push
ficom
lea
pop
xchg
push
cmps
repnz
xchg
jmp
dec
add
aad
aam
and
stc
mov
aam
mov
adc
pop
stc
idiv
push
xor
aam
cmp
pop
sbb
ss
ja
add
mov
or
xchg
jno
mov
add
shl
jmp
test
push
dec
cs
ss
push
fstp
in
fld
(bad)
push
add
inc
loope
loop
pop
cs
pop
jecxz
in
in
out
outs
sub
sbb
je
pop
ss
jmp
paddsb
out
jb
xlat
jne
mov
ins
dec
icebp
repnz
pop
hlt
inc
jb
xor
mul
clc
jbe
stc
imul
movs
std
pop
(bad)
scas
sbb
icebp
cmp
dec
jmp
data16
adc
(bad)
call
xchg
add
cmp
cmc
shl
add
cmp
cmp
shl
add
loopne
nop
push
shl
sub
test
psllq
dec
sub
pop
dec
xchg
pusha
inc
out
mov
nop
jmp
loopne
dec
jmp
push
inc
hlt
leave
das
xchg
inc
or
or
inc
leave
out
sbb
sub
cmp
sahf
mov
fcom
imul
sub
and
adc
repnz
fcom
fwait
adc
nop
cmc
hlt
and
pop
sbb
hlt
or
out
add
out
leave
or
jns
in
(bad)
es
sub
or
cmps
or
and
daa
inc
push
jb
nop
fcom
jns
pop
and
push
sub
or
dec
push
enter
out
mov
repnz
ins
and
in
in
mov
ror
(bad)
add
es
mov
push
adc
bnd
sub
mov
in
and
sbb
xchg
push
jb
cmp
add
sbb
imul
dec
and
nop
jl
in
pop
aam
in
scas
sub
jae
ss
mov
and
xchg
mov
pop
jb
push
call
mov
push
and
mov
and
inc
pop
jmp
inc
push
aam
in
in
pop
repnz
add
in
push
jb
aam
in
inc
or
sub
std
push
adc
adc
jle
or
mov
sub
pop
lea
rep
mov
adc
rcr
inc
pop
in
add
cdq
and
adc
dec
mov
ins
inc
cmp
dec
ins
xor
push
mov
mov
popa
push
loope
cmp
mov
mov
mov
xor
js
ret
mov
jmp
pop
add
aam
add
nop
aam
test
into
dec
sub
and
mov
fsub
push
jae
int3
pop
jl
adc
leave
or
in
neg
lods
sub
add
jle
and
sar
retf
mov
ret
sub
sbb
leave
add
xchg
pop
cmc
mov
cld
sbb
mov
sub
shr
fdivr
fsubp
add
test
adc
mov
or
push
cmp
mov
jle
sahf
add
ja
(bad)
sbb
pop
mov
add
enter
jbe
ins
pusha
ss
cld
cmp
je
pop
or
mov
push
stos
popa
mov
ret
jo
jle
pop
push
push
loopne
mov
sbb
push
ret
dec
inc
fwait
adc
mov
adc
push
dec
sub
jo
dec
add
test
inc
adc
lahf
xchg
lea
mov
sbb
inc
inc
sahf
mov
rol
adc
(bad)
jecxz
gs
mov
retf
pop
xchg
gs
int3
int
iret
shl
xchg
gs
rcl
aad
gs
xchg
(bad)
xlat
fcomp
fcmovu
pop
xchg
gs
(bad)
(bad)
loopne
pop
xchg
gs
jecxz
in
gs
xchg
out
call
inc
xchg
jmp
inc
jae
test
cmp
lock
add
test
fist
shl
push
adc
or
pop
mov
pop
fdiv
popa
mov
fs
xchg
add
popa
pop
in
in
push
imul
inc
push
lock
push
push
push
mov
and
mov
sbb
clc
cmp
shl
mov
fidiv
ins
mov
cld
je
mov
mov
inc
push
push
les
test
(bad)
leave
push
(bad)
push
cld
test
and
aas
jl
ret
mov
or
add
or
inc
arpl
cld
xchg
cs
je
ins
arpl
pop
push
outs
lods
push
sbb
jo
and
mov
leave
add
ret
xchg
or
xor
loopne
je
in
xor
mov
mov
sbb
mov
inc
mov
mov
mov
mov
or
pop
in
sbb
xor
rol
call
hlt
add
pop
out
sub
call
or
cmp
fmul
popa
mov
and
in
out
push
jmp
dec
inc
dec
xor
sub
cmc
div
clc
mov
retf
push
es
gs
leave
mov
retf
popa
jae
inc
jb
lds
jb
out
not
inc
gs
mov
shl
mov
retf
ins
rcl
shr
push
xor
(bad)
push
(bad)
enter
fs
mov
dec
int3
int3
dec
shl
je
xor
shl
mov
add
lock
je
sbb
je
sub
xor
cmp
sbb
ins
mov
call
sub
and
and
imul
pop
cmp
pusha
jae
mov
jbe
sub
in
in
cmp
scas
ins
repnz
sub
scas
outs
inc
or
lods
(bad)
jmp
enter
jo
dec
mov
ret
js
dec
sub
mov
aam
push
cmp
cmp
mov
xor
jne
sbb
inc
mov
pop
push
mov
fcom
mov
add
sub
sbb
popa
push
into
push
ret
mov
sbb
cmps
add
add
jmp
cmp
and
inc
sahf
daa
enter
pusha
loopne
push
imul
push
and
and
gs
add
lock
push
push
pop
mov
outs
jmp
push
and
jae
(bad)
or
and
mov
add
xchg
jbe
(bad)
outs
(bad)
jbe
sub
add
pusha
jo
retf
xchg
jp
add
cmp
inc
push
movs
cmp
in
push
push
mov
push
outs
and
push
inc
mov
neg
adc
or
sbb
jo
jo
xchg
jne
adc
push
pusha
js
push
das
sbb
sbb
adc
adc
add
mov
add
ret
ss
out
sub
cld
sahf
out
and
popa
clc
push
adc
inc
int3
std
and
call
test
lods
or
shl
add
sbb
shl
mov
push
pop
sbb
push
fcmovb
cld
cmps
outs
push
rcl
push
adc
(bad)
fstp
int3
ins
or
or
xchg
add
dec
pusha
ss
test
inc
gs
leave
fstp
push
or
and
pop
fsubr
push
loop
sbb
fcom
sbb
xchg
jle
xor
movs
call
pop
push
cmp
jl
call
jmp
data16
add
push
lahf
mov
push
loope
fucomi
push
inc
mov
fcom
add
(bad)
inc
arpl
xchg
jne
mov
ret
(bad)
in
dec
or
jbe
xor
dec
into
cmp
and
enter
mov
adc
ins
mov
adc
jbe
mov
cmp
jmp
xor
inc
fmul
enter
dec
inc
xor
adc
daa
in
ins
data16
fsub
sbb
mov
xchg
ins
pusha
jp
xor
push
jne
jmp
fdiv
fisttp
sub
loopne
ret
mov
mov
xor
data16
ds
cmps
mov
jmpw
pop
or
lock
imul
imul
xchg
out
fs
xor
outs
jmp
je
sti
sbb
in
in
cld
std
(bad)
aaa
call
sbb
ins
test
cld
add
fs
cld
sub
pop
add
push
pop
cld
ds
jbe
movs
pop
call
clc
pop
call
push
xor
(bad)
pop
or
pop
lods
addr16
push
or
and
std
call
pop
and
cmp
cmp
es
je
nop
xchg
movs
cmp
sub
movs
pop
mov
nop
outs
outs
aaa
sub
cwde
das
movs
std
or
jl
es
push
scas
enter
jne
add
mov
sub
ins
scas
and
or
aad
mov
mov
loopne
jae
call
int3
fwait
pushf
add
xor
call
pusha
sbb
pop
scas
call
or
mov
push
xchg
sbb
retf
call
mov
lea
pop
xchg
sbb
sbb
cmp
dec
cmp
mov
or
pop
xchg
xor
xor
sub
imul
popf
sub
shl
pop
xor
(bad)
into
shl
xor
push
pop
pop
xchg
imul
daa
daa
daa
inc
inc
inc
cmp
cld
aaa
sub
push
imul
cmp
and
xchg
mov
mov
movs
cmp
cmp
aaa
dec
xor
mov
push
mov
and
push
hlt
cmp
mov
cmp
add
and
repz
xor
or
dec
popa
pop
pop
or
add
fsubr
add
add
in
repnz
call
call
sbb
pusha
mov
aad
leave
push
cmp
cs
clc
push
xor
add
repnz
(bad)
xchg
pop
mov
push
aad
enter
push
fidiv
pop
jo
hlt
cmp
fmul
mov
pop
lods
sbb
push
mov
mov
pop
cli
(bad)
cld
enter
sub
push
or
out
inc
sub
and
push
enter
popa
push
inc
inc
push
enter
add
xchg
or
repnz
jmp
mov
xor
sub
cmp
imul
xor
and
std
ss
leave
fmulp
sub
aam
push
lea
push
into
out
dec
popf
cmp
js
push
inc
mov
and
lods
mov
cli
add
cmp
sahf
adc
inc
out
cmp
jno
jae
mov
and
jne
stos
pop
enter
adc
add
inc
pushf
in
ins
inc
cmp
add
sbb
popf
int
dec
inc
mov
mov
add
daa
pop
call
or
dec
fstp
dec
or
or
or
xchg
les
loope
dec
jne
aam
inc
push
sbb
retf
and
out
cld
fs
dec
xchg
cmp
(bad)
xchg
jmpw
(bad)
fs
xchg
leavew
inc
retf
retf
push
sub
pushf
sub
int
inc
into
fstp
pushf
popf
iret
push
shr
or
sar
stos
push
jo
into
add
xchg
sub
ret
push
pushf
fwait
sbb
lock
jl
fidivr
pop
cld
fld
xor
push
ret
add
inc
and
mov
(bad)
and
mov
les
inc
push
out
lock
xor
or
ror
pop
in
sahf
outs
xor
movs
mov
fsubr
jae
and
jb
and
add
xchg
call
jle
or
ss
aad
fstp
ret
int3
jp
add
cld
and
add
mov
add
fs
in
cmp
rcr
adc
nop
fldenv
adc
add
jp
mov
cmp
jo
loopne
lea
imul
add
xchg
or
out
sbb
call
jl
add
xchg
cwde
or
or
(bad)
lock
mov
and
add
sbb
sbb
pop
sub
int3
sbb
mov
movs
jnp
cmp
cmp
repz
add
xchg
shl
test
add
jnp
xchg
pushf
add
mov
test
adc
fstp
adc
icebp
or
leave
and
cmp
ds
pop
aam
ins
push
push
cli
cmc
push
or
pop
add
sbb
mov
xor
fstp
fdiv
es
jle
leave
ins
ss
(bad)
sub
sbb
rcr
and
push
add
psrlq
(bad)
stos
jns
cmp
xor
push
std
jne
mov
cmp
(bad)
fwait
dec
int3
jmp
fcomp
sbb
sbb
cmp
inc
mov
sbb
pop
in
dec
int3
aaa
pusha
sbb
into
xchg
xchg
sub
and
add
call
inc
and
or
jne
mov
inc
mov
xor
pop
shr
inc
mov
mov
call
pop
sbb
jmp
rcr
or
jne
div
mov
mov
fs
add
jb
cmp
ja
xor
jb
cmp
jbe
dec
dec
fwait
pop
and
inc
or
add
sub
xor
gs
add
dec
xor
add
or
clc
sbb
ret
fmul
add
cmp
add
call
mov
(bad)
mov
imul
cmps
call
jl
hlt
sbb
inc
int
push
hlt
mov
xchg
mov
inc
in
xchg
pushf
push
add
mov
xor
call
mov
jne
cmp
jne
inc
or
fcomip
pop
add
ret
je
cmp
repnz
jbe
fld
xchg
shl
rol
je
or
or
aam
push
sub
jbe
jmp
add
fist
fsubr
add
cmp
sbb
(bad)
(bad)
dec
mov
punpcklwd
test
pop
ret
mov
mov
sbb
jge
sbb
sbb
add
ins
fsub
scas
pop
sub
ret
ret
pmuludq
inc
sub
or
ror
call
mov
sti
aaa
jp
scas
(bad)
js
or
ret
add
add
inc
cwde
fisub
inc
(bad)
sub
jge
or
inc
add
mov
mov
aam
dec
mov
pop
inc
or
add
xchg
popf
adc
xor
call
inc
inc
mov
sti
inc
jecxz
shl
nop
xlat
xor
and
and
cmp
clc
fbstp
cmp
jb
ins
mov
xor
(bad)
jmp
adc
clc
adc
fldcw
adc
ins
sbb
sbb
mov
mov
sbb
sbb
cmps
fnstenv
outs
and
and
daa
mov
jbe
sub
sub
sub
and
outs
cmps
sti
je
sub
xor
xor
out
imul
inc
sub
jne
cmp
sahf
sti
lods
lods
cmp
push
rcl
mov
hlt
std
minps
xor
or
mov
ret
ret
add
or
xchg
jns
dec
dec
cwde
call
dec
mov
mov
pop
aas
push
cmp
movs
mov
call
fs
sub
push
fs
mov
ror
sti
pushf
and
sbb
data16
sub
loopne
data16
jmp
sbb
pop
outs
rep
and
mov
sar
call
(bad)
lds
into
aad
shr
hlt
add
or
sub
sar
add
mov
push
push
cvtpi2ps
ds
je
mov
(bad)
mov
(bad)
data16
push
pop
pusha
ins
push
push
pop
loop
add
dec
jne
push
imul
rol
mov
pop
pop
fild
xor
pop
aas
int3
or
pop
pop
enter
fdivr
loopne
dec
mov
add
push
ret
rcr
test
xchg
loope
adc
add
ins
push
add
and
mul
push
popf
mov
aas
or
call
push
inc
xchg
mov
pop
sbb
dec
sbb
in
adc
int
push
pop
mov
ret
push
out
mov
mov
int3
in
loope
add
ror
mov
or
add
aad
xor
lds
inc
ficomp
mov
or
xor
sbb
fs
mov
pop
add
adc
hlt
sbb
and
or
or
jge
inc
jo
divps
push
jne
loopne
ret
outs
rcl
pop
xchg
stos
fld
mov
shl
sub
inc
lock
mov
mov
fcom
ins
xor
cmps
inc
mov
ins
and
(bad)
mov
or
popf
push
test
jg
aam
jo
adc
xchg
pop
cmp
clc
add
mov
jle
int
and
inc
xchg
ins
xchg
mov
mov
inc
push
imul
ret
and
mov
and
pop
push
loope
fsub
jmp
push
outs
jl
dec
cmp
sbb
and
sbb
sub
or
fidivr
daa
cmp
daa
xchg
and
shr
mov
adc
push
js
xchg
hlt
pop
je
(bad)
jmp
aaa
lods
adc
adc
jo
outs
cmp
retf
pop
aaa
add
jl
ret
das
jg
mov
inc
inc
sbb
or
unpcklps
adc
loopne
jg
sub
mov
mov
push
push
fidiv
sbb
movs
and
sub
and
outs
push
adc
mov
mov
add
cs
mov
ret
sub
sti
pop
mov
push
lea
add
dec
mov
pop
cmp
dec
sbb
aas
push
push
daa
not
inc
push
mov
and
mov
jmp
push
jl
dec
ror
cmp
sbb
stos
mov
iret
dec
xlat
sub
fs
mov
movsx
pusha
pop
cmps
aaa
sbb
xor
inc
xor
mov
ins
or
sahf
rcl
jl
frstor
and
(bad)
cmp
xor
mov
movs
push
clc
inc
push
call
or
fidivr
jl
jo
repz
aam
push
jo
and
out
ret
cs
push
sbb
add
mov
test
je
(bad)
and
push
mov
call
nop
sbb
cmp
call
div
mov
jmp
mov
sbb
xor
in
sar
dec
jmp
push
jo
neg
fdivr
push
or
out
jne
clc
push
fdiv
pop
add
imul
sub
xor
inc
mov
xchg
rcr
or
pusha
xor
mov
mov
cmp
push
push
sub
or
cs
test
call
test
jo
mov
je
sub
jmp
sbb
sbb
mov
lods
adc
mov
pop
test
stos
inc
push
mov
mov
cs
pop
cmp
(bad)
addr16
prefetch
mov
out
inc
mov
inc
int
movlps
inc
stos
das
dec
and
movs
stos
mov
push
sub
fisubr
or
test
scas
ret
fstp
int
adc
xor
std
push
mov
repnz
popa
add
adc
or
mov
(bad)
out
push
inc
add
push
jne
out
jbe
jge
dec
pop
xor
arpl
pop
push
shl
fucomi
and
adc
bound
pop
fwait
sbb
fs
dec
or
add
es
add
sar
sbb
and
outs
or
sbb
jo
xor
xlat
inc
(bad)
push
mov
add
je
push
xchg
js
call
or
ror
movs
sti
ins
fs
js
scas
adc
xor
pusha
or
xchg
cmp
scas
loope
out
jo
mov
jo
mov
nop
xchg
jns
dec
or
shl
inc
jne
mov
adc
jl
outs
movs
imul
(bad)
adc
mov
pushf
and
pop
push
sbb
test
cmps
cmp
xchg
xor
sbb
cwde
sbb
and
lock
or
call
sbb
or
out
or
xor
push
ror
out
ret
jo
je
mov
mov
pop
scas
xor
sar
dec
mov
sahf
xchg
ins
sub
sub
cld
je
pop
in
xchg
mov
and
mov
test
dec
mov
cmps
and
push
mov
or
outs
mov
push
mov
adc
data16
or
mov
xor
dec
lock
pop
cmc
pusha
push
push
rol
inc
cmp
jmp
push
scas
inc
add
xchg
adc
sbb
rcr
or
inc
in
push
jmp
pop
popf
pop
jg
add
mov
arpl
cmp
push
test
repz
mov
leave
ret
mov
imul
sbb
jl
or
dec
out
jge
fdiv
mov
jmp
and
iret
inc
sbb
adc
retf
jmp
mov
sahf
adc
sub
mov
cmp
and
or
std
dec
push
mov
xor
mov
add
or
lock
adc
jecxz
adc
shr
call
push
mov
pop
pop
jecxz
xchg
push
dec
movs
fs
out
repz
mov
mov
sbb
out
call
push
push
movs
lea
jbe
jmp
mov
lds
cmp
push
outs
add
jo
ins
(bad)
jb
ror
addr16
jb
jb
dec
ss
jne
ja
mov
cmp
enter
js
test
test
push
dec
sbb
mov
icebp
(bad)
sbb
or
dec
mov
je
arpl
iret
cmp
cmp
jne
mov
lahf
xor
adc
fs
sbb
push
push
push
test
jecxz
adc
call
sbb
push
xchg
iret
mov
popf
shl
or
xchg
jne
push
sbb
bound
pop
mov
inc
mov
and
cmp
inc
sahf
or
adc
push
dec
mov
sti
inc
inc
jne
call
wrmsr
fnstsw
ins
call
cmp
in
pcmpeqd
popa
fs
inc
sbb
inc
call
ret
loopne
pop
sti
movs
jecxz
fld
push
imul
xchg
adc
sbb
sbb
mov
enter
aas
rcr
or
(bad)
adc
test
adc
in
lods
add
fmulp
fwait
add
xor
push
sub
mov
fwait
mov
in
push
push
and
out
outs
xchg
mov
pop
pop
dec
xchg
add
jp
sbb
and
add
mov
lock
nop
dec
push
jb
sub
jo
add
call
or
inc
dec
sbb
icebp
mov
nop
or
cmp
and
xor
adc
xor
popa
ficom
sbb
push
cmp
loope
mov
or
push
inc
inc
and
jl
jmp
add
out
sbb
dec
(bad)
xchg
ret
aaa
icebp
sbb
or
mov
inc
adc
xchg
ins
nop
in
mov
pop
(bad)
jg
xor
push
push
test
inc
sbb
sbb
mov
cmp
mov
xchg
dec
mov
adc
adc
xor
popa
and
scas
push
dec
pushf
xchg
add
or
xchg
lods
mov
mov
xor
mov
in
mov
add
pop
mov
imul
rol
and
xor
xor
(bad)
jmp
aaa
xchg
cs
cmps
jmp
fs
popa
jmp
enter
daa
or
mov
shr
or
inc
mov
push
int
dec
adc
mov
das
inc
fsub
adc
sbb
adc
cmp
and
fsubr
mov
sub
jno
xor
mul
mov
popf
sub
sar
push
rcr
sub
std
bound
cmps
add
jb
mov
paddusb
jge
adc
mov
ja
scas
sbb
mov
out
nop
test
push
es
mov
push
outs
jg
dec
or
add
je
mov
rcl
sbb
out
rol
out
cli
xchg
push
js
push
or
pop
sub
adc
aam
push
add
xchg
data16
and
add
adc
inc
inc
xrelease
and
out
imul
mov
lea
lea
sbb
(bad)
push
jae
call
ins
adc
inc
or
mov
jno
push
test
mov
retf
push
cmp
fild
adc
rcl
enter
ds
mov
shr
in
dec
add
pavgb
xchg
lock
pop
addr16
cmp
sub
pushf
test
adc
pusha
adc
adc
sub
push
push
popf
sar
jae
test
mov
enter
mov
aaa
into
xchg
add
adc
cs
mov
inc
mov
lods
(bad)
and
call
push
sahf
arpl
cli
add
add
cmp
adc
repnz
push
mov
in
or
pop
daa
pop
ret
push
sbb
mov
lock
sub
loope
jmp
xor
add
jmp
push
adc
call
fstp
dec
test
jne
and
pop
fs
cmp
push
lea
add
sub
xchg
adc
enter
test
sub
test
xor
push
fdivr
test
sub
imul
je
(bad)
fisttp
int3
pop
sub
clc
pop
jle
adc
pop
inc
sbb
cmps
mov
std
pop
clc
inc
jle
rcl
jmp
dec
or
pop
mov
cmp
jne
pop
jmp
adc
sbb
mov
je
xor
mov
add
outs
xchg
outs
dec
mov
enter
shl
sub
js
fadd
pop
or
and
loope
mov
je
xchg
sbb
xchg
ss
push
scas
xchg
pop
inc
pop
lock
les
aam
mov
pop
ds
xor
je
je
hlt
cmp
aas
inc
cmovb
sbb
or
cmp
inc
push
dec
sub
mov
adc
inc
push
cmp
push
mov
ss
pop
data16
bound
test
add
leave
lock
mov
and
repnz
sub
in
cmp
loope
push
enter
and
pop
ins
in
push
lea
repz
fwait
retf
or
fs
adc
not
push
scas
and
fld
push
mov
inc
sbb
mov
iret
les
or
mov
sahf
jb
lahf
mov
xor
and
cmp
jg
sbb
pop
push
xor
xor
sub
adc
jge
add
mov
pusha
sbb
jge
jno
and
movs
xchg
js
sbb
test
jo
xchg
int
movs
lods
adc
sbb
js
clc
es
cmp
adc
mov
js
push
xchg
pushf
and
outs
sar
or
fwait
aam
repnz
xor
stos
adc
jo
inc
mov
repz
cmp
push
into
fdivrp
dec
jb
repz
into
push
arpl
aad
inc
fist
mov
mov
ss
sbb
in
push
(bad)
fldenv
mov
call
enter
sub
in
sub
loope
dec
ss
pop
fst
dec
ret
inc
and
ja
push
rep
call
and
and
push
xor
sub
cmc
adc
cmovne
ret
(bad)
mov
mov
add
or
leave
movs
xchg
adc
jo
inc
jb
xor
test
and
xor
mov
add
add
xor
pop
test
pop
ss
push
in
inc
xor
scas
in
add
mov
jmp
xor
xor
fnstsw
inc
js
pcmpgtb
add
inc
popf
sbb
in
jge
push
mov
mov
sub
add
add
mov
jl
add
ins
movs
pushf
leave
vcvtsi2sd
push
test
cmp
sti
jae
jmp
sbb
push
push
js
fisttp
fcomp
dec
pusha
jmp
mov
retf
add
popa
inc
or
and
and
(bad)
push
jns
sbb
ror
scas
clc
mov
pushf
add
sbb
leave
repnz
stc
(bad)
push
xor
retf
mov
test
out
dec
stos
dec
(bad)
jmp
push
xor
sub
aad
cmp
jns
mov
retf
sub
out
push
(bad)
clc
xchg
xor
pushf
cmp
or
sbb
push
or
call
das
test
jb
add
add
test
stc
pushf
add
sbb
sub
frstor
add
sbb
sub
lods
daa
mov
test
pusha
mov
xchg
push
(bad)
nop
int
test
xchg
and
nop
dec
das
movs
add
and
sub
add
bound
xchg
and
test
jmp
(bad)
fdiv
mul
mov
jmp
mov
std
inc
sub
and
add
mov
push
sub
int3
push
cmp
fild
jb
sub
add
jae
dec
shr
push
or
loope
inc
jle
jg
nop
xor
lea
lea
push
cmps
shl
and
mov
ret
adc
je
test
je
mov
jne
or
push
jmp
lahf
sti
aas
cld
pop
or
(bad)
jle
xor
add
add
xor
ret
ins
lock
xor
xchg
and
std
add
je
sbb
and
lods
jne
pop
pop
pop
xor
cld
cmp
call
ss
out
cmp
cmc
test
je
fnsave
fadd
aam
xchg
dec
cmp
lods
sub
push
std
cld
or
pop
jno
scas
inc
ret
out
rcl
pop
nop
call
mov
loope
fadd
pop
mov
pop
(bad)
mov
int
mov
imul
jb
ins
and
outs
outs
outs
je
cmp
jmp
and
outs
and
inc
dec
push
and
fs
jg
lock
adc
xlat
pop
or
fyl2xp1
out
(bad)
or
xlat
test
sbb
fdiv
or
xlat
(bad)
and
mov
ds
imul
fs
push
inc
mov
add
push
cmp
int3
jg
add
and
add
or
adc
cdq
jnp
mov
add
add
outs
dec
aaa
or
push
xor
mov
push
mov
pop
or
jge
push
dec
adc
jae
outs
sbb
add
add
push
mov
and
test
xchg
jge
add
pusha
cs
adc
mov
push
or
jmp
inc
cs
mov
xor
sbb
ror
add
jnp
arpl
daa
sbb
sub
jb
call
ins
mov
fwait
push
daa
inc
pusha
adc
sub
sbb
mov
imul
inc
mov
cmp
call
js
cmps
mov
enter
cwde
out
sub
xor
movs
sub
idiv
push
es
push
iret
repz
inc
cmp
movs
arpl
repz
pusha
push
adc
cmp
repz
add
mov
inc
xchg
scas
int
cdq
xchg
in
gs
aam
sbb
inc
push
adc
mov
push
aam
push
in
adc
test
or
in
xor
ss
adc
ret
inc
and
push
pop
pop
mov
and
lahf
sbb
test
cld
ins
add
test
pop
push
loopne
jo
mov
repz
sub
inc
fprem
je
cmp
adc
pushf
cwde
(bad)
push
sbb
js
cdq
xor
push
pop
add
inc
mov
ss
push
ins
nop
and
sub
inc
jo
push
jns
iret
jbe
xchg
push
xchg
and
cmp
mov
pop
cld
jne
push
daa
pushf
ficomp
or
loopne
cmove
std
cmp
push
sbb
data16
xchg
xor
fidiv
mov
mov
add
ret
inc
scas
in
adc
push
adc
inc
test
mov
push
not
push
sub
mov
sbb
and
pop
pop
add
mov
push
jmp
inc
pop
out
and
pushf
mov
aam
cmp
xchg
mov
cmp
cmp
jne
cmp
es
rcl
adc
pop
hlt
and
push
fisub
neg
mov
xor
push
je
fiadd
fwait
push
adc
inc
jl
mov
xlat
mov
add
call
mov
mov
cmp
ja
inc
push
adc
or
cs
and
inc
aam
pop
mov
xchg
out
sbb
adc
mov
(bad)
jmp
jg
jbe
arpl
jae
fwait
push
xor
cmp
dec
(bad)
mov
adc
adc
out
(bad)
shl
sbb
enter
and
shr
fcmovnbe
and
fnsave
add
call
mov
fnsave
inc
sbb
int
cld
add
test
jnp
adc
jnp
(bad)
push
out
test
stos
mov
and
xlat
or
outs
ds
rol
jo
mov
or
mov
sbb
mov
xchg
pop
or
pop
cli
pusha
xchg
or
outs
nop
xchg
add
popf
mov
in
jge
pop
repnz
stos
pop
xchg
std
xor
push
push
lock
inc
cmp
cmp
inc
pusha
in
and
adc
jne
lods
(bad)
scas
push
pop
adc
inc
add
jmp
es
mov
dec
inc
in
push
add
pusha
add
cmp
psubb
mov
pushf
lea
sbb
pop
cld
mov
xchg
sbb
add
dec
mov
pop
push
xor
xor
xor
push
js
mov
pusha
lea
push
dec
je
or
stc
sub
mov
xor
je
cld
not
inc
jnp
sbb
test
test
push
cdq
outs
push
add
sub
outs
xchg
inc
sub
adc
popa
or
jo
dec
jne
fucomi
xor
pusha
or
push
aaa
push
inc
add
int
jl
arpl
push
push
lock
fcom
mov
sbb
fs
mov
fdiv
push
adc
cld
push
jne
mov
pop
ret
call
mov
aas
push
mov
cmps
or
popa
mov
adc
loope
jne
call
push
call
call
pop
sbb
cli
and
js
(bad)
mov
icebp
mov
inc
(bad)
mov
pop
dec
jbe
pop
inc
mov
(bad)
js
addr16
inc
or
dec
fld
mov
inc
mov
pop
ret
xchg
xchg
jae
cli
or
sub
mov
loop
mov
test
ins
loopne
xchg
imul
jl
and
sbb
sbb
cmp
sub
cmp
inc
xchg
lods
int3
add
ins
mov
xchg
js
pop
xor
add
scas
jbe
cmp
add
test
or
loop
or
rep
jmp
(bad)
(bad)
(bad)
mov
jb
and
add
pop
test
scas
fnstenv
nop
pop
int3
sbb
ins
jmp
mov
mov
ror
inc
add
xor
pop
mov
int3
xchg
mov
dec
lea
sub
in
add
scas
cmp
das
push
sbb
int
imul
cmps
stc
ja
mov
mov
call
cmps
imul
push
outs
call
add
mov
adc
adc
push
mov
add
cmp
mov
push
mov
nop
popf
or
and
pop
ins
adc
xor
sub
addr16
cld
outs
jnp
and
or
or
neg
out
lea
jae
stc
sub
sbb
or
or
xor
ins
add
outs
leave
xlat
(bad)
dec
pop
dec
push
mov
ja
test
mov
sub
xchg
or
and
pop
fst
inc
pop
je
test
mov
xchg
fdiv
mov
sbb
sbb
sbb
adc
call
or
imul
or
loopne
call
pop
xor
mov
xchg
xor
add
test
add
or
add
inc
test
add
stos
push
cmp
or
add
sub
sub
cld
inc
dec
jne
mov
rol
push
adc
int
je
rep
cmp
and
push
and
in
ret
sub
test
out
add
sub
shl
loopne
cld
call
cs
dec
imul
imul
xor
or
adc
cmp
xor
shl
jp
cmps
mov
xor
ror
(bad)
hlt
add
xchg
cmp
or
or
add
or
or
repnz
push
adc
test
enter
mov
mov
pop
mov
adc
mov
je
icebp
add
add
mov
or
jb
add
lahf
inc
ror
or
add
rcl
dec
test
and
fs
add
popa
dec
jno
mov
or
iretw
outs
mov
inc
fcom
add
scas
ins
aas
or
movs
add
lea
or
mov
sub
rol
mov
clc
xor
push
fwait
xor
fdivr
aad
dec
jno
pusha
xchg
test
jb
jb
inc
jl
xor
pop
ret
retf
ins
jo
or
sub
fs
push
nop
mov
popa
inc
cmp
outs
addr16
ror
out
fild
in
in
fadd
adc
inc
scas
jbe
mov
jbe
jmp
or
into
dec
xor
mov
iret
(bad)
or
bound
sub
pop
push
and
pop
cwde
frstor
add
sbb
or
je
jo
cs
xchg
jb
cmp
fadd
add
xor
or
inc
xchg
or
outs
outs
jae
pop
fwait
ins
ret
sub
gs
sti
mov
dec
lea
jb
push
xor
dec
jne
pusha
sub
mov
bound
mov
cmp
inc
sbb
ror
adc
mov
popa
aaa
rol
in
test
sub
or
repz
or
mov
adc
outs
mov
adc
inc
jo
adc
dec
push
test
add
inc
and
mov
adc
sub
data16
add
cmps
jmp
mov
int
imul
dec
shl
lea
dec
rcr
jmp
outs
repz
mov
jnp
mov
lods
pop
xor
add
xchg
jo
cs
add
or
dec
or
(bad)
mov
aaa
mov
dec
outs
adc
adc
adc
ja
(bad)
iret
mov
test
js
push
and
adc
lea
add
push
pop
popf
popa
cmp
push
ins
mov
fldcw
pop
pop
mov
add
ret
push
aam
gs
push
clc
sbb
inc
inc
dec
push
imul
shr
mov
inc
mov
or
and
and
add
or
xchg
popf
into
dec
adc
pop
xor
add
sub
sbb
add
ror
js
loope
push
cli
sub
cs
dec
popa
pop
pop
dec
outs
in
dec
push
inc
push
inc
pop
inc
add
ins
xchg
add
inc
cmp
imul
cmp
(bad)
stos
sub
xchg
xor
(bad)
(bad)
dec
sbb
and
sub
das
xor
xor
xor
dec
xor
xor
jbe
xor
xor
call
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
jmp
inc
xor
pop
xor
outs
xor
lea
stos
xor
xor
xor
xor
(bad)
(bad)
dec
outs
xor
xor
xor
xor
xor
xor
xor
dec
xor
imul
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
push
xor
xor
xor
xor
inc
xor
jae
js
xchg
div
push
push
ss
ss
test
xchg
lods
shl
stc
and
xor
dec
aaa
push
aaa
pop
aaa
pop
aaa
push
(bad)
push
jp
xor
aaa
sahf
aaa
movs
aaa
stos
aaa
mov
jmp
cmp
cmp
sub
jg
add
add
cmp
ins
cmp
jle
mov
xchg
cmp
(bad)
(bad)
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
(bad)
(bad)
call
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
inc
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ins
cmp
xchg
(bad)
(bad)
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
inc
hlt
aam
shl
or
sahf
add
jge
jne
adc
push
rcr
adc
ret
pop
aaa
xor
popa
adc
xor
mov
imul
sbb
sub
lods
sbb
push
adc
add
sub
push
gs
xor
inc
xor
inc
lods
call
mov
movs
add
pop
xor
gs
dec
push
add
add
mov
aad
les
ret
jbe
inc
push
out
ins
sbb
or
shl
sbb
inc
test
fidiv
aad
inc
icebp
bound
push
lock
in
sahf
int
adc
sbb
pop
push
push
mov
add
or
stos
inc
cmp
push
dec
inc
stos
inc
xor
leave
add
and
xchg
imul
outs
dec
inc
sbb
popa
dec
in
inc
jno
dec
sub
dec
(bad)
rcr
or
dec
add
dec
pop
or
mov
(bad)
gs
cmp
mov
stos
ds
add
lods
call
ret
inc
push
loopne
sub
and
and
mov
outs
stos
jo
add
ins
push
xchg
jb
adc
leave
push
inc
ins
mov
add
or
iret
sub
mov
hlt
out
and
push
sub
ins
xchg
cmps
jae
lods
das
sbb
shl
inc
add
outs
sub
and
sub
ror
add
sbb
mov
je
inc
jo
call
or
and
sub
mov
ror
imul
push
fldenv
call
mov
lods
mov
jb
jae
test
inc
jp
mov
lea
mov
xor
mov
repnz
iret
push
inc
pop
inc
push
inc
pop
dec
inc
pop
xor
or
fild
aam
pop
shr
jo
lods
data16
xor
xchg
pop
call
jo
sub
xchg
mov
outs
pop
jbe
icebp
into
je
into
pop
push
cwde
jb
jns
push
lods
in
js
out
mov
inc
dec
outs
cmp
and
imul
jo
ficomp
leave
push
sbb
in
push
pop
jae
mov
or
pusha
(bad)
and
pop
xchg
lods
or
add
adc
outs
aaa
adc
push
inc
dec
mov
ins
pop
xchg
fisttp
add
xor
push
xchg
or
push
enter
add
or
smsw
push
dec
push
mov
dec
sar
or
mov
or
or
sub
mov
outs
fs
push
sub
sbb
les
pop
rcr
fwait
mov
xchg
sub
sub
cwde
or
mov
and
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
