sub
push
push
xor
push
mov
call
mov
call
push
mov
call
test
mov
je
push
push
push
push
push
push
push
push
push
call
test
je
mov
push
push
call
mov
add
push
push
call
call
mov
call
mov
push
push
push
push
push
call
push
call
jmp
call
mov
call
mov
mov
push
push
push
push
call
jmp
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
jne
push
call
mov
push
push
push
push
call
call
mov
mov
mov
mov
mov
lea
push
push
push
mov
call
add
jmp
lea
push
call
mov
call
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
jne
lea
mov
mov
mov
xor
mov
xor
mov
mov
push
mov
inc
mov
call
test
je
mov
xor
mov
sub
jne
mov
mov
mov
mov
mov
push
push
push
call
add
mov
mov
inc
dec
mov
je
jmp
mov
push
call
pop
pop
pop
add
ret
mov
lea
push
mov
mov
call
mov
add
push
call
mov
call
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
or
push
push
mov
call
push
call
mov
mov
and
push
mov
call
mov
test
je
mov
mov
mov
push
push
push
xor
push
push
mov
call
call
mov
mov
test
jne
mov
mov
push
mov
xor
mov
pop
call
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fwait
gs
test
cwde
add
push
ret
xor
in
pop
int
adc
xchg
out
xchg
and
cmps
adc
loope
icebp
jbe
rcl
mov
es
fmul
out
xchg
cmovp
mov
mov
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
ds
cmp
not
hlt
scas
pop
pop
aas
and
imul
aad
mov
sbb
pop
out
and
xor
inc
not
ds
or
fdiv
loopne
in
xor
and
call
js
imul
mov
sbb
cmp
imul
cld
xor
fs
add
mov
rcl
cmp
test
mov
or
data16
shl
jns
cmp
loope
es
xlat
out
xchg
push
push
outs
mov
and
jecxz
mov
outs
pop
mov
adc
mov
jne
xchg
inc
add
mov
xchg
lods
into
(bad)
or
jno
call
fiadd
mov
push
mov
mov
ds
dec
mov
cli
enter
jno
sub
inc
xchg
popa
shl
add
fnstsw
xor
mov
cmc
ss
xchg
ret
daa
mov
stos
fnstenv
fcom
inc
cli
loope
push
addr16
pop
ss
and
je
cmp
sub
inc
xchg
addr16
cmp
cmps
jmp
cmp
inc
movs
ss
iret
(bad)
or
jno
push
out
xchg
cmp
stc
inc
loope
icebp
add
(bad)
xchg
mov
out
cmps
test
pop
(bad)
mov
push
xchg
and
adc
lea
push
add
pop
and
das
xor
xchg
and
loop
push
or
jne
xchg
jmp
movs
mov
xchg
es
(bad)
sub
cwde
mov
out
and
xor
add
cmc
loope
in
ret
sub
inc
adc
imul
jno
add
xchg
mov
cmps
clc
adc
sbb
rcl
mov
into
xchg
pusha
(bad)
cmp
test
repnz
leave
xchg
xor
movs
in
sahf
(bad)
rcl
mov
pop
jb
es
popa
(bad)
jno
inc
unpckhps
add
push
jbe
jno
jmp
lds
mov
adc
mov
scas
add
xchg
scas
mov
ror
ss
shl
inc
inc
push
jg
and
out
push
sbb
xor
cmp
mov
iret
aad
popa
cs
xchg
mov
mov
stos
loope
icebp
lahf
test
sar
mov
dec
mov
js
ret
jecxz
or
xor
shl
and
cs
add
adc
sub
ds
xchg
mov
retf
fbstp
out
xor
mov
ror
popa
push
imul
xchg
(bad)
xor
int
mov
cwde
mov
(bad)
push
mov
into
outs
xlat
int
rcl
leave
and
jbe
cmps
push
add
cmp
mov
xchg
jnp
cmp
out
and
out
sbb
repnz
shl
mov
or
mov
sbb
test
mov
cmps
push
add
icebp
mov
in
mov
retf
adc
push
and
call
ja
je
(bad)
mov
or
sub
jbe
mov
mov
jmp
nop
and
inc
sbb
xchg
add
int3
psubw
mov
xor
inc
out
les
outs
ret
jmp
dec
js
or
add
push
stc
inc
mov
sub
mov
call
adc
cmp
pop
out
pop
jg
pop
mov
mov
loopne
xchg
data16
dec
mov
fstp
ret
test
pusha
sahf
inc
(bad)
push
outs
and
adc
adc
jbe
and
dec
sbb
xchg
aas
and
out
xchg
int
fdiv
mov
mov
inc
ror
ss
stc
(bad)
mov
push
and
xor
add
push
jbe
data16
push
pop
cs
xor
xchg
into
xchg
call
pop
icebp
cwde
rol
ficomp
(bad)
cwde
mov
out
mov
push
push
cmc
loope
jmp
sub
sbb
dec
inc
adc
imul
pop
add
xchg
mov
cmps
clc
adc
sbb
shr
mov
into
mov
(bad)
(bad)
dec
imul
pushf
xor
(bad)
adc
(bad)
push
adc
pop
jb
es
popa
sub
adc
mov
cmps
mov
add
sub
cld
mov
test
imul
xchg
scas
add
loope
mov
ror
ss
fbstp
inc
xchg
gs
clc
push
dec
inc
sbb
bound
pop
out
mov
or
push
xchg
leave
xchg
fadd
test
sub
ror
sbb
jb
jo
xchg
mov
or
inc
iret
clc
adc
inc
dec
jne
and
retf
nop
push
add
ret
add
imul
ror
ror
mov
daa
jns
mov
jnp
push
(bad)
and
mov
fst
adc
mov
ss
xchg
xchg
or
repz
fbstp
out
xor
movs
inc
push
arpl
sar
in
fdivr
sbb
pop
out
rol
dec
adc
dec
push
mov
and
aas
int3
cs
inc
pop
cmp
xchg
aaa
fwait
xor
mov
in
and
push
jge
dec
test
gs
push
loope
and
sbb
sbb
inc
mov
iret
cmp
jne
cmc
into
adc
push
cmps
mov
sub
pop
xchg
les
cmp
mov
cmp
adc
stos
jae
inc
or
adc
jno
inc
mov
imul
add
in
push
adc
cmp
xchg
cmp
adc
enter
mov
mov
icebp
lahf
test
sar
mov
es
ret
call
and
adc
cmp
loope
sub
jb
dec
sbb
aas
and
out
xchg
mov
cmps
stc
dec
loope
icebp
fcmovb
(bad)
xchg
mov
out
scas
ss
es
mov
push
dec
and
xor
add
sub
data16
push
pop
sub
das
xor
xchg
sti
xchg
mov
loop
push
or
scas
shl
jmp
movs
mov
pushf
es
(bad)
gs
cwde
mov
out
mov
pop
xor
add
cmc
loope
out
jbe
imul
adc
imul
jno
add
xchg
mov
cmps
clc
adc
sbb
mov
and
(bad)
(bad)
mov
test
xchg
leave
cdq
xor
not
mov
fisub
push
jno
pop
jb
es
popa
adc
inc
unpckhps
xlat
cmps
mov
or
push
jbe
jp
ret
mov
test
idiv
mov
stos
add
(bad)
loope
mov
ror
ss
fidiv
inc
out
push
jg
and
sub
xor
fstp
jle
push
push
scas
xchg
add
fsubr
jns
mov
push
cmc
jbe
cdq
rcr
or
leave
cmc
retf
xchg
cmps
xor
add
cmp
(bad)
push
mov
add
jo
inc
jno
nop
daa
aad
jmp
sbb
mov
(bad)
pop
icebp
mov
in
mov
xchg
push
or
das
cmc
pop
and
mov
pop
loope
jl
dec
call
xchg
and
pushf
dec
jae
pop
das
mov
ret
mov
inc
out
in
(bad)
and
mov
sub
and
sti
aad
mov
mov
push
xchg
dec
call
imul
cld
or
mov
dec
in
push
fcmovnbe
push
jp
xchg
jmp
adc
or
(bad)
push
xchg
xor
mov
xchg
into
bound
nop
mov
dec
and
ror
ret
inc
and
xor
push
fndisi(8087
push
mov
add
in
jnp
in
xchg
call
out
push
cmc
enter
loop
inc
ins
into
jnp
ds
pop
ret
cmp
mov
jno
or
fcmovb
dec
xchg
out
cmp
push
cdq
rol
mov
jle
nop
(bad)
inc
cmp
inc
(bad)
scas
(bad)
and
adc
push
es
jbe
cdq
mov
mov
daa
xor
mov
imul
add
jl
adc
push
not
out
ss
ja
ret
loop
jno
stc
in
pop
xor
out
test
xchg
rcl
lea
add
add
(bad)
cmps
jnp
loopne
shl
cs
icebp
add
mov
xor
pop
sbb
push
movs
adc
mov
icebp
jb
jae
pop
dec
inc
pop
mov
pusha
cmp
jecxz
and
xor
sbb
inc
rcl
lock
cdq
shr
imul
arpl
sahf
push
out
lahf
fiadd
out
pusha
adc
sbb
in
movs
mov
xor
xor
and
mov
jg
test
sbb
push
(bad)
mov
ret
icebp
cmp
icebp
int3
repz
adc
push
sbb
xchg
mov
adc
push
pop
xchg
or
mov
mov
push
mov
aas
setb
(bad)
mov
outs
xlat
sahf
xchg
mov
inc
ins
adc
retf
jo
rcl
xor
adc
xor
pop
mov
or
movs
xchg
leave
ins
pop
ret
and
fmul
loope
sbb
ds
push
pop
push
adc
test
outs
pop
scas
xchg
jno
mov
xchg
xor
pusha
inc
add
xchg
ja
popf
pop
pop
hlt
daa
cdq
arpl
retf
fcmovnu
outs
jne
dec
pusha
adc
test
cs
pop
(bad)
dec
and
aaa
outs
push
sahf
aas
cld
test
sbb
or
call
movs
inc
push
test
(bad)
out
daa
or
outs
and
sti
jg
sbb
fs
outs
jg
icebp
xor
shl
xor
into
pusha
(bad)
adc
or
fs
and
adc
pop
cmp
sti
cmp
add
jge
push
xchg
in
push
pop
or
es
dec
xchg
add
pop
mov
ficom
rol
rcr
jle
lea
scas
xchg
cdq
jge
mov
retf
stos
(bad)
and
pop
popf
adc
push
mov
shl
out
hlt
mov
pusha
(bad)
mov
movntq
jg
push
mov
movs
push
adc
mov
(bad)
fbstp
imul
xchg
cmc
idiv
fadd
mov
inc
fstp
jmp
adc
or
push
test
mov
inc
sbb
imul
scas
sbb
and
(bad)
in
xor
and
and
mov
shr
sub
mov
sbb
push
mov
out
xchg
and
cmps
dec
data16
fucom
inc
jg
dec
xor
hlt
sub
test
fidivr
rdtsc
mov
sub
jp
dec
adc
out
and
ror
lods
xchg
sbb
into
pop
mov
push
fisubr
rol
pinsrw
or
xchg
cmp
sbb
outs
jne
inc
pop
stc
adc
call
nop
arpl
jnp
cmps
scas
scas
or
inc
mov
sub
xor
mov
fisubr
cs
div
push
movs
loopne
into
pop
lds
mov
icebp
movs
jmp
fwait
dec
jmp
nop
aad
dec
xchg
stos
xchg
outs
add
ins
ins
inc
icebp
xor
ja
in
pop
dec
outs
inc
push
push
mov
pop
sbb
lods
loope
xchg
in
fstp
add
arpl
jmp
or
sbb
in
cmp
retf
sbb
sub
ins
ins
inc
icebp
mov
mov
mov
sahf
and
mov
xor
adc
out
mov
mov
cs
pop
ror
mov
int3
in
jmp
sbb
jl
jecxz
movs
fimul
imul
lods
sbb
leave
div
test
add
cs
mov
cmc
jae
es
sub
xor
jge
mov
shr
inc
xchg
and
mov
xchg
popf
mov
test
bound
movntq
out
cmps
in
xor
xor
push
inc
jbe
cmp
ret
out
pop
adc
jb
add
inc
imul
jb
test
adc
mov
pop
and
popf
inc
popa
mov
shr
cmp
and
push
test
adc
sahf
cmp
xchg
fsubrp
and
inc
cmps
rcl
adc
fwait
mov
mov
fcomp
aam
popa
hlt
and
ins
ret
inc
cmps
adc
hlt
inc
loopne
shl
adc
in
cmc
jnp
jno
frstor
xchg
and
fisub
scas
jp
xchg
jmp
xchg
mov
mov
vcmpss
adc
mov
out
(bad)
jno
je
push
pop
pop
xchg
mov
mov
(bad)
mov
es
in
jno
mov
inc
xor
imul
jl
pop
mov
jmp
jle
outs
xchg
mov
push
rol
stos
cli
je
std
xchg
cwde
adc
mov
jae
pop
dec
fimul
jle
push
(bad)
out
mov
outs
mov
idiv
bound
jbe
in
rcl
sub
xchg
fucomi
xchg
sbb
push
mov
fdiv
jb
add
call
xchg
xchg
pop
pop
mov
pop
sub
xor
int3
mov
pop
mov
movs
in
rcr
cmps
daa
jbe
and
add
mov
lds
push
lea
aad
mov
aad
dec
adc
push
adc
data16
add
mov
shl
inc
test
jne
xchg
adc
lock
rol
push
stos
aam
in
(bad)
lea
jns
inc
add
push
or
mov
inc
or
push
mov
cmp
scas
nop
sub
(bad)
jecxz
out
sbb
inc
mov
xor
push
mov
icebp
out
fldenv
out
and
and
loopne
rol
mov
pusha
sar
xchg
not
dec
mov
loop
arpl
test
mov
(bad)
ins
into
and
push
das
sbb
outs
mov
stos
mov
xor
neg
dec
or
sbb
popa
out
xor
pop
xrelease
jb
adc
retf
rcl
push
sub
pop
mov
cmp
add
pop
shl
mov
mov
adc
sbb
es
(bad)
jmp
pusha
test
push
mov
sub
push
push
shl
and
in
add
push
cld
mov
jmp
pop
cdq
test
sbb
inc
loope
icebp
jnp
inc
ficomp
adc
jns
je
fs
imul
ret
popa
mov
inc
xor
test
sbb
and
sub
movs
push
xchg
mov
int
int
daa
add
or
pop
jmp
xor
inc
fwait
cmp
mov
jo
lock
mov
mov
aad
(bad)
les
fsincos
in
mov
cmp
pop
out
xchg
fcmovnbe
in
inc
loopne
shl
and
aad
jo
movs
push
xor
pop
sbb
jne
mov
int3
mov
xchg
pop
push
call
(bad)
jo
jno
mov
ss
adc
mov
pushf
push
sub
mov
push
fldcw
popa
cmp
mov
mov
popa
out
adc
add
ins
inc
jl
cmp
stc
dec
jae
xor
(bad)
popf
cmp
or
mov
into
out
inc
cmps
out
test
xchg
mov
xchg
loopne
(bad)
cmps
adc
add
movs
in
sub
or
push
ja
cmp
stos
lods
mov
sbb
inc
(bad)
dec
or
mov
and
mov
mov
mov
xchg
dec
outs
add
(bad)
retf
in
cmps
fst
adc
push
add
shl
mov
jns
cli
test
sbb
dec
retf
stc
int
addr16
mov
inc
in
jb
sub
xchg
push
and
fucom
mov
aad
retf
cmp
clc
dec
mov
ror
jns
jmp
xchg
ficom
cmp
stc
jle
mov
xor
pusha
jge
popa
ret
retf
mov
add
cld
adc
icebp
jle
and
(bad)
pusha
add
pop
or
push
scas
retf
sahf
xor
jbe
mov
stc
sub
popa
push
mov
jle
mov
cmp
dec
in
mov
adc
call
jmp
in
rcr
aam
mov
or
cdq
shl
jb
xor
mov
pop
sub
fsubr
pop
adc
jo
ds
clc
lods
retf
jge
or
sbb
shr
pop
inc
mov
mov
mov
retf
sbb
pop
int
loope
popf
es
dec
cmp
dec
lods
imul
add
pop
jmp
and
mov
mov
(bad)
push
adc
shr
push
enter
cmp
mov
in
mov
leave
imul
jne
and
fwait
sub
dec
jge
mov
and
dec
fistp
dec
xchg
adc
or
sub
push
call
fist
ret
or
xchg
push
jmp
outs
mov
iret
div
shl
sbb
loop
jns
mov
inc
imul
outs
dec
add
mov
fldl2e
sub
mov
pop
addr16
ja
push
(bad)
leave
mov
push
stos
push
jge
dec
sub
adc
mov
and
push
iret
addr16
push
xchg
jmp
cmp
xor
cli
(bad)
fldcw
xor
push
stc
jp
jbe
and
fnstenv
sahf
(bad)
jo
or
fisubr
punpcklbw
pop
repz
in
push
sbb
cmp
mov
cdq
push
cmp
nop
sahf
sub
dec
push
mov
test
out
pop
out
sub
sbb
inc
push
push
stos
mov
pop
fstp
rol
lds
fnstsw
dec
jne
add
push
iret
sub
sbb
es
push
(bad)
(bad)
mov
mov
inc
mov
(bad)
jg
xchg
push
fs
jle
data16
test
inc
inc
fisubr
jg
out
jecxz
xchg
xchg
int
std
dec
in
fstp
(bad)
lods
xchg
pop
jmp
xchg
stos
lods
jl
shl
or
cmp
dec
sub
cmp
dec
cli
or
sbb
jae
jne
fcom
pop
push
bound
sub
mov
popa
inc
mov
out
xchg
leave
loop
dec
dec
shr
push
sub
cmp
and
cmp
xlat
aad
popa
dec
and
jb
push
xchg
cmps
into
cmps
mov
icebp
jle
and
push
inc
es
xor
pusha
jnp
imul
mov
lock
mov
ret
mov
adc
lds
adc
push
loop
or
mov
adc
push
pushf
xchg
cmps
mov
fild
adc
jbe
add
jp
xchg
mov
mov
lds
mov
adc
(bad)
gs
and
mov
mov
test
pop
ret
cld
mov
je
mov
leave
inc
scas
sub
push
inc
adc
daa
push
cld
push
out
xchg
pop
cmp
aas
cmps
push
sbb
repnz
not
movs
or
popf
std
pop
js
or
inc
mov
ret
cmp
aas
(bad)
mov
add
lock
rcl
cli
movs
leave
nop
scas
sub
xchg
cmp
add
xchg
cmp
in
fcomip
sbb
and
or
jno
(bad)
mov
imul
and
mov
xchg
dec
in
mov
inc
push
ja
push
out
push
dec
sub
mov
mov
bound
inc
cmc
ror
fisub
ins
push
xchg
push
mov
mov
rcl
cmp
or
imul
rcr
push
fs
jo
aas
xchg
addr16
out
fidivr
iret
pop
pop
leave
add
push
push
lock
and
pop
pop
ins
add
in
xchg
jl
push
mov
inc
jg
(bad)
fld
adc
cmp
xchg
loope
mov
ror
pop
not
lock
nop
push
popa
dec
mov
push
stos
fnstenv
(bad)
mov
test
shl
pop
inc
push
jmp
lahf
jo
mov
push
and
pop
repz
xchg
(bad)
xchg
cli
mov
dec
xchg
retf
mov
add
add
test
xor
mov
mov
jb
hlt
cmc
xor
daa
lods
and
pusha
pop
mov
adc
ds
repnz
xor
jno
cwde
cmps
test
shl
test
adc
ins
inc
xor
shl
(bad)
aad
(bad)
cmc
(bad)
into
sbb
and
xor
mov
inc
and
cmp
push
sub
imul
inc
shl
inc
mov
xchg
xchg
aad
add
(bad)
and
mov
pop
mov
icebp
adc
and
outs
fdiv
loopne
jb
aam
popa
nop
pop
mov
sbb
inc
int
aam
inc
dec
inc
push
cmp
std
outs
cdq
mov
mov
jg
sahf
and
and
xor
aas
pop
icebp
jbe
popw
push
leave
pop
jb
fsub
xchg
mov
mov
(bad)
iret
and
jns
and
rcr
in
mov
pop
jg
(bad)
dec
mov
sub
xchg
dec
js
xor
add
cs
shl
addr16
fnstenv
inc
stc
enter
jno
add
push
push
rcr
mov
cmps
pop
adc
shl
mov
in
(bad)
popa
(bad)
xchg
mul
mov
push
pop
movs
cs
aas
rcl
aad
pop
jae
daa
push
xor
(bad)
jno
inc
mov
shr
add
cdq
ja
test
cwde
les
adc
fucom
pop
ror
repnz
pop
cmps
adc
loope
mov
shl
ss
arpl
xlat
mov
jp
fsub
jne
call
push
inc
inc
pop
xor
push
mov
cmp
inc
xchg
addr16
pop
mov
inc
dec
push
loope
icebp
cwde
test
rcl
inc
pop
mov
mov
(bad)
mov
sbb
push
into
and
test
daa
and
cmp
xor
dec
jns
pop
push
dec
retf
add
and
adc
loop
es
push
adc
sub
mov
xor
adc
shr
dec
in
mov
ds
cld
xchg
test
je
std
loop
push
lods
or
test
ss
xor
jns
sahf
inc
xchg
mov
sub
into
out
je
std
cmp
pop
lods
sub
cmp
and
xor
sub
adc
shl
xor
in
ja
jmp
sar
mov
jns
repnz
(bad)
test
fisub
add
xor
sub
ficomp
adc
call
fisubr
dec
pop
hlt
retf
int3
nop
adc
sbb
int3
nop
mov
(bad)
jmp
rol
sub
retf
xchg
cld
inc
(bad)
es
popa
(bad)
and
retf
sbb
inc
je
in
stc
fistp
(bad)
icebp
sahf
dec
pop
push
imul
xchg
ds
push
dec
retf
lods
jns
mov
cmps
inc
je
or
jmp
outs
sub
jno
arpl
in
xchg
mov
bound
xor
test
jne
xchg
ret
adc
cld
jecxz
xor
and
adc
xchg
test
jno
push
lea
mov
mov
out
cmps
xor
push
jae
jbe
rcl
mov
es
xchg
test
ficom
and
jle
cmps
out
inc
popa
or
popf
sub
dec
lock
test
mov
rol
lds
add
ins
mov
pop
push
dec
push
mov
dec
jo
(bad)
jmp
aad
or
pop
sub
into
cmps
jbe
and
(bad)
mov
es
push
leave
popa
ss
xchg
out
or
test
pop
and
mov
xchg
sub
xor
imul
loope
fs
aaa
xor
in
fwait
sub
inc
dec
xor
test
movs
mov
stos
or
in
mov
stos
fcomp
mov
push
fcomp
fs
jo
dec
xlat
push
fidivr
rcr
jge
xchg
xchg
cmp
shr
fld
cmps
stc
test
into
in
xchg
pop
sub
loopne
pop
sub
pushf
or
scas
push
or
add
mov
dec
in
adc
icebp
and
jnp
jbe
aad
scas
(bad)
out
mov
sbb
add
jbe
mov
sub
push
icebp
add
hlt
aaa
jno
push
dec
push
int3
mov
xor
cmps
sbb
loope
add
dec
push
mov
mov
push
pop
test
xchg
rcr
outs
retf
jecxz
ficomp
mov
inc
imul
outs
sub
mov
xor
sub
pop
mov
push
mov
rcl
test
xchg
pop
push
xlat
mov
inc
add
cmc
cdq
fnstenv
loop
inc
daa
add
xchg
rol
ror
in
or
push
xchg
push
mov
pop
cmps
(bad)
loop
aad
mov
sahf
dec
jmp
pop
addr16
in
stc
add
jp
mov
mov
retf
push
xchg
(bad)
cmps
adc
adc
es
xchg
je
stc
movs
jnp
arpl
mov
lock
cmc
imul
stc
pop
ins
inc
mov
jl
dec
ror
or
aam
popa
retf
jno
adc
cmp
and
mov
jmp
xchg
xchg
xor
sbb
mov
test
xchg
shl
dec
mov
add
push
mov
ret
xor
loope
inc
imul
stc
cmp
inc
es
test
lea
jmp
xchg
and
and
fcmovnbe
das
or
ret
cld
push
imul
(bad)
cdq
jo
mov
sbb
pusha
movs
adc
mov
cmp
push
cmp
inc
into
into
sub
and
ret
(bad)
push
push
and
xchg
mov
jmp
xor
ret
inc
mov
div
loope
sbb
mov
or
(bad)
sahf
push
aad
or
xchg
shr
cmps
(bad)
mov
rcr
fcmovbe
xor
vhaddpd
dec
pop
call
jecxz
pushf
cmps
icebp
cmps
pop
daa
mov
sbb
cmps
(bad)
cdq
push
mov
mov
cmp
mov
movs
repz
and
push
mov
popa
rcl
xlat
add
xor
xor
data16
push
jmp
je
push
addr16
ja
imul
xchg
mov
or
cmp
sub
mov
shr
add
es
popf
inc
jge
add
or
fimul
mov
jmp
retf
icebp
mov
jmp
ror
dec
(bad)
and
(bad)
xor
mov
xchg
pop
std
sub
aaa
xor
data16
inc
lods
stc
popa
jae
out
add
out
(bad)
xchg
(bad)
xor
ja
ret
dec
ss
sbb
xor
cld
or
adc
imul
shl
and
leave
icebp
into
outs
and
mov
mov
jns
scas
popa
jbe
cdq
xchg
inc
std
stc
pop
daa
mov
sbb
in
cmp
jmp
xor
mov
adc
add
push
ja
inc
fadd
les
je
add
add
push
xchg
dec
lea
dec
leave
xlat
mov
mov
movs
xchg
xchg
and
push
and
out
std
cmp
stc
mov
or
cli
jnp
out
push
jns
dec
dec
sub
pop
and
movs
push
sub
cmp
or
and
sub
mov
adc
or
cmp
pop
mul
push
push
mov
and
(bad)
mov
adc
sbb
sahf
cs
and
inc
sbb
push
lds
imul
and
jmp
popf
sub
sbb
inc
cmp
fsub
ret
int
push
mov
fsubr
inc
mov
shl
mov
jmp
repz
stos
jns
push
daa
inc
lock
loop
xchg
sub
add
xchg
jo
test
push
(bad)
mov
sub
inc
jbe
and
jmp
jne
mov
into
mov
xor
push
retf
icebp
or
adc
pop
jp
push
sub
inc
out
or
ret
sub
popa
idiv
push
div
mov
sbb
dec
call
and
jno
mov
inc
jne
in
push
add
aaa
sti
test
rcl
add
shl
cmps
(bad)
lahf
lds
out
adc
les
pop
cld
leave
outs
adc
repnz
xchg
bound
lock
mov
call
or
aad
inc
stos
xchg
shr
jecxz
push
movs
or
shl
and
(bad)
and
cld
jecxz
sbb
ficom
adc
retf
sbb
sub
fxch
inc
loopne
(bad)
cmps
or
ins
inc
div
dec
and
sbb
jmp
mov
dec
and
sbb
xor
lods
xchg
mov
test
rcl
mov
jne
pop
jo
lea
fst
je
or
xchg
push
push
push
lock
cdq
les
adc
and
xchg
aaa
xchg
xor
push
mov
cmc
cmps
inc
cmps
mov
hlt
sbb
jbe
sub
les
ins
add
sbb
(bad)
ror
jmp
mov
js
cli
push
cmp
mov
lods
in
cwde
mov
rol
push
aad
cmp
jmp
xchg
rcr
add
sbb
ret
push
out
into
mov
sahf
mov
fstp
fs
ds
cmp
xchg
in
or
stc
jbe
cmp
dec
gs
arpl
push
out
imul
nop
push
repnz
inc
repz
stos
cmp
je
stc
repnz
sbb
dec
outs
mov
in
jmp
sbb
enter
push
push
cmc
adc
mov
enterw
mov
das
mov
(bad)
fs
xchg
movs
(bad)
aam
pop
xor
retf
retf
imul
jge
jb
sub
cmp
ds
out
outs
pop
xchg
mov
mov
in
stc
inc
addr16
xchg
sub
mov
pop
jmp
retf
pop
jl
shr
jp
and
or
aam
dec
mov
in
push
mov
ret
jno
arpl
mov
mov
out
cmp
sbb
adc
out
fucom
dec
mov
shl
sbb
adc
arpl
mov
push
xchg
stos
cmp
push
fadd
std
cmp
and
loope
out
jp
int3
adc
(bad)
fld
xor
inc
arpl
adc
cmp
dec
jne
dec
data16
mov
jg
jle
js
jmp
xchg
leave
jns
xor
loope
jmp
popf
mov
xor
jmp
adc
ds
out
jg
jbe
mov
push
test
adc
and
sti
scas
into
fstp
(bad)
rol
sub
sbb
inc
or
iret
or
in
std
push
mov
mov
rcl
push
movs
cmp
outs
(bad)
popa
adc
loop
(bad)
fld
test
or
out
inc
call
mov
sbb
xchg
fdiv
aad
shr
out
xchg
dec
std
mov
mov
xchg
or
mov
(bad)
mov
rcl
std
mov
cmc
mov
sahf
pop
fs
(bad)
out
xchg
ret
inc
pop
inc
inc
mov
fwait
inc
sub
push
into
retf
xor
out
sbb
and
rcl
in
cwde
cli
inc
inc
mov
pop
jmp
daa
call
popf
fwait
(bad)
in
or
push
icebp
push
push
lock
cmp
out
lods
fs
dec
or
call
cmp
mov
pop
fdivr
in
xor
fistp
and
jnp
loope
mov
shl
ds
in
cld
retf
adc
cmp
test
retf
xor
mov
adc
ret
int
mov
(bad)
movs
add
mul
inc
icebp
cmc
mov
pop
inc
popa
jae
imul
out
pop
dec
cmp
lock
sbb
push
mov
dec
xchg
push
and
xchg
ret
jno
int3
out
shl
inc
push
adc
dec
mov
and
fwait
mov
out
test
and
nop
adc
fiadd
mov
pushf
xor
je
out
pop
sub
xor
jle
push
or
lds
cmps
call
xchg
(bad)
pop
out
xor
les
fldenv
jo
push
in
test
(bad)
cmps
pushf
push
mov
jae
(bad)
sub
hlt
fidivr
mov
mov
cs
xchg
(bad)
mov
loop
fndisi(8087
(bad)
stc
cmp
stc
mov
es
dec
jno
mov
or
loope
mov
xor
sub
sub
sbb
mov
or
test
jns
pop
inc
inc
adc
imul
jmp
rcl
add
in
adc
inc
push
pop
gs
cs
movs
mov
int3
jno
daa
mov
scas
sbb
or
in
sub
arpl
pop
mov
add
call
or
fcom
ret
push
retf
in
xchg
inc
mov
fstp
mov
(bad)
or
and
pop
or
dec
push
out
mov
xchg
imul
hlt
scas
ins
retf
dec
data16
mov
std
retf
jno
pop
jmp
and
in
les
push
in
hlt
xchg
test
adc
jbe
inc
inc
inc
jb
xor
retf
inc
pop
les
jnp
ficom
outs
mov
fild
sti
mov
shl
and
shl
inc
xchg
xchg
ja
mov
fisttp
xor
and
stos
xor
in
mov
push
and
push
loope
js
rcl
cwde
repnz
cmp
jns
fcomp
mov
fadd
push
das
sbb
mov
jb
xchg
aam
mov
test
push
pop
les
cli
jl
popf
adc
test
mov
fnstsw
inc
mov
lahf
in
pop
popf
out
div
(bad)
xlat
or
pop
outs
pop
rcr
ja
shr
mov
in
movs
or
arpl
jmp
xchg
mov
sub
sbb
mov
cwde
push
xchg
adc
shl
cli
dec
mov
loopne
or
mov
xchg
sbb
bound
int
idiv
scas
pop
and
mov
aaa
stos
out
mov
mov
cmp
sti
inc
aad
dec
mov
xor
cli
cmc
jge
or
adc
aam
push
cs
ffree
xor
mov
scas
sub
mov
push
lds
ficomp
sbb
iret
add
loope
pop
test
push
movs
cs
data16
pop
out
out
test
jno
retf
imul
vmovntpd
mov
mov
lds
shl
mov
mov
pop
fcmovu
int
and
pusha
sub
icebp
and
fscale
fisttp
mov
mov
xor
add
jecxz
call
adc
ret
sub
test
test
sub
stc
std
inc
adc
and
mov
out
outs
test
cmps
mov
mov
cmps
dec
add
data16
mov
xor
(bad)
into
jns
call
outs
bound
add
sub
cld
add
fdiv
jg
pop
cdq
div
test
xchg
pop
mov
pop
cmc
push
or
icebp
call
mov
(bad)
jle
jp
mov
xor
fcomp
mov
xor
fst
fsubr
aam
sub
repnz
mov
retf
cmc
jmp
pop
in
add
scas
cmp
mov
arpl
test
stos
rcr
jmp
xchg
icebp
test
dec
jb
arpl
(bad)
and
xor
inc
xor
xor
mov
adc
jne
cli
mov
sub
lock
addr16
(bad)
inc
sar
jle
aad
jp
or
scas
xchg
adc
adc
jmp
or
fbld
add
inc
fsub
ins
jl
or
adc
xchg
push
loopne
push
mov
movs
xchg
pop
popa
mov
out
es
lods
(bad)
fsubr
ins
xchg
icebp
test
jno
push
arpl
add
fldcw
add
push
test
and
iret
es
loopne
out
mov
fidivr
pop
mov
sahf
fst
pop
push
mov
test
in
scas
fnsave
sbb
lods
imul
ficomp
scas
scas
mov
dec
rcr
inc
es
add
mov
cs
jns
pop
inc
or
shl
fwait
and
lahf
xlat
popa
mov
add
mov
(bad)
cmps
in
test
(bad)
or
jae
lea
(bad)
and
mov
push
push
jecxz
dec
repz
(bad)
rol
mov
push
dec
in
push
mov
cmc
aad
xchg
loop
popf
mov
out
ror
adc
push
xor
or
inc
aam
les
dec
scas
(bad)
ins
mov
(bad)
out
jp
or
adc
inc
mov
adc
mov
and
pop
(bad)
and
not
lahf
cmp
push
jmp
inc
scas
xchg
xlat
popa
xchg
cmp
scas
loopne
hlt
bound
jecxz
adc
add
data16
push
lods
or
mov
pop
dec
popf
jecxz
ins
pop
jge
or
pop
(bad)
inc
add
iret
out
xor
in
lds
mov
fist
cmp
cmp
push
int
cmovp
pop
mov
lods
fsin
popa
ret
fild
jl
enter
push
inc
shl
in
icebp
xor
out
hlt
or
in
adc
cli
aas
retf
xchg
addr16
call
les
add
fdiv
mov
call
outs
mov
xor
push
fadd
cs
fimul
aam
jl
jno
dec
outs
push
rcr
rcr
inc
mov
test
int
xchg
stc
pop
je
jge
into
cdq
dec
clc
mov
jmp
je
call
bound
push
mov
jle
stos
and
xchg
sbb
jl
xor
xchg
jmp
bound
test
jge
and
outs
movs
lods
icebp
ja
das
inc
push
and
fstp
cmc
repnz
push
xor
add
enter
and
ret
add
xchg
adc
mov
dec
cwde
add
ficom
adc
aam
sar
aam
mov
shl
jno
push
unpcklps
and
pushf
push
push
imul
lea
aas
mov
retf
xchg
mov
out
pop
out
ins
add
add
cmp
pop
rcr
pop
jmp
lds
ds
imul
jbe
sub
popa
jle
inc
cdq
sahf
int
and
movzx
inc
mov
xor
rcl
mov
dec
ins
pop
jmp
imul
sbb
repnz
mov
cmp
jle
jb
stos
xchg
sub
loopne
inc
xchg
test
push
inc
fstp
and
popa
pop
mov
xor
(bad)
loop
repnz
xchg
push
imul
lock
out
jecxz
jns
push
and
inc
call
pop
in
cmp
push
sbb
add
pop
call
push
sub
jle
bound
ror
jg
mov
iret
mov
movs
mov
xchg
lahf
mov
bound
xor
imul
and
dec
push
mov
cwde
or
and
dec
std
and
mov
and
pusha
fiadd
push
loope
jp
ror
in
loopne
pop
es
iret
cmp
push
inc
xor
and
xor
add
mov
rol
and
add
sub
idiv
sub
mov
adc
cmp
inc
and
sbb
repz
inc
out
xchg
stos
push
push
fnstsw
mov
enter
bound
mov
and
adc
movs
int
push
sar
frstor
mov
mov
xchg
stos
ret
and
inc
mov
shl
jmp
(bad)
nop
push
popa
dec
xor
iret
xor
xor
ret
iret
push
int
jb
cmp
pop
popa
push
cmp
arpl
test
mov
loopne
icebp
std
test
xchg
xor
and
jge
loop
enter
mov
jnp
jne
add
std
sahf
daa
adc
movs
push
fnstenv
aas
call
push
test
dec
xor
int
mov
nop
or
in
pop
leave
fcmove
nop
add
xor
inc
and
shl
cwde
test
ror
cmc
pop
jg
(bad)
push
mov
sub
xchg
dec
js
xor
mov
cs
shl
addr16
fnstenv
inc
stc
enter
jno
add
push
push
(bad)
fbstp
mov
cmps
pop
adc
sar
and
mov
xchg
loop
push
pop
movs
cs
mov
aas
rcl
add
es
aaa
cmp
jno
inc
mov
shr
add
cdq
jbe
test
cwde
les
adc
cmp
pop
ror
repnz
pop
cmps
adc
loope
mov
shl
ss
arpl
(bad)
mov
jp
fsub
jne
call
push
mov
xor
push
mov
cmp
adc
mov
inc
dec
push
loope
icebp
cwde
test
rcl
inc
pop
mov
push
es
xchg
or
mov
sbb
push
cli
and
hlt
psraw
jbe
and
xor
jno
cmps
mov
pop
repz
xchg
jle
lds
and
sub
inc
xchg
cmp
in
fs
stos
in
in
ds
fwait
mov
xchg
lds
mov
mov
fcmovbe
(bad)
xor
cmps
int
mov
push
jmp
xchg
fwait
sahf
xor
xchg
or
and
mov
pop
xchg
jbe
mov
rcl
lds
mov
out
push
add
lds
ins
jb
sti
cwde
inc
mov
jl
stos
ja
fistp
daa
sbb
or
pop
xchg
mov
and
mov
inc
es
test
cmp
vpcmpgtw
mov
push
imul
into
mov
dec
shr
push
in
loope
and
int
adc
adc
cmp
sbb
loopne
popf
pushf
add
dec
cmp
or
fadd
pusha
cmp
dec
sbb
repz
sub
loope
(bad)
cmps
ds
pop
sub
imul
(bad)
pop
jo
cli
sahf
xor
cmps
xor
icebp
mov
adc
arpl
xor
ss
test
aaa
(bad)
mov
jmp
xchg
rcl
movs
mov
xchg
sub
dec
jb
arpl
mov
add
push
jle
xchg
jecxz
sbb
retf
mov
test
xchg
dec
sub
push
fmulp
mul
cmps
(bad)
sub
mov
scas
jns
ret
add
(bad)
pushfw
jmp
xlat
fldlg2
or
push
out
xchg
faddp
popa
mov
push
push
push
and
rcr
jle
aad
adc
sbb
leave
ins
mov
push
mov
xchg
cs
add
dec
fidivr
adc
add
xor
data16
mov
icebp
mov
sub
mov
jle
fs
cmp
sub
jp
push
out
adc
dec
rcl
mov
fcmovb
sub
mov
mov
mov
cmp
stos
sbb
loope
icebp
push
inc
imul
jbe
adc
mov
and
movs
adc
and
cdq
sub
mov
jnp
test
jno
inc
fld
int3
add
loop
push
retf
icebp
es
inc
hlt
ss
xchg
sub
jge
and
je
ret
push
adc
sub
shl
jnp
(bad)
jmp
jp
outs
jne
xor
push
push
ja
jmp
outs
(bad)
xchg
xchg
xchg
out
xor
mov
jmp
push
or
rcr
jbe
mul
jno
int3
repz
xchg
into
in
push
mov
mov
shr
push
loope
inc
es
push
popa
mov
inc
loopne
loop
jns
les
stos
aad
cmp
sti
aam
rcr
stc
pusha
and
adc
fwait
bound
mov
(bad)
add
add
loope
cmp
mov
pop
not
popf
fsub
jns
or
adc
inc
cmp
cmps
stc
push
mov
push
std
aam
cwde
pop
leave
add
and
test
adc
dec
push
and
repz
out
mov
js
sar
in
hlt
push
adc
fs
in
xchg
lods
xchg
mov
pop
adc
loope
push
test
push
dec
pop
jno
and
or
cwde
xchg
xor
sub
aas
sub
or
push
hlt
shr
push
fldenv
and
les
add
and
pop
cmps
jnp
loope
sub
jmp
outs
mov
and
jecxz
mov
fs
pop
mov
adc
mov
je
xchg
inc
add
mov
xchg
lods
into
(bad)
or
jno
popf
mov
(bad)
mov
push
mov
mov
ds
dec
mov
sti
enter
jno
sub
ja
popa
shl
add
fnstsw
xor
xchg
ss
xchg
lock
and
retf
mov
(bad)
xchg
clc
sar
int
push
rcl
aam
xchg
jle
xlat
inc
movs
inc
push
or
(bad)
sub
cdq
ja
sub
dec
inc
adc
imul
jno
add
xchg
cdq
cmps
clc
adc
sbb
psrlw
mov
into
mov
imul
scas
xor
add
adc
call
push
pop
jb
es
popa
scas
jno
inc
unpckhps
imul
shl
jp
ffreep
test
mul
xchg
xchg
add
adc
scas
mov
ror
ss
out
jno
inc
cs
jg
and
ja
cmc
inc
sbb
bound
mov
iret
aad
popa
cs
mul
test
mov
mov
xor
jp
lahf
test
sar
mov
aad
icebp
es
ret
fild
push
and
adc
test
jbe
and
dec
das
mov
cmp
xor
mov
and
sbb
(bad)
xchg
mov
out
xchg
ss
push
(bad)
mov
push
hlt
and
adc
mov
push
pop
adc
das
xor
xchg
inc
xchg
mov
loop
push
or
push
sar
mov
push
add
retf
imul
adc
shl
add
dec
inc
imul
out
repz
cmp
adc
std
mov
cs
in
jns
or
rol
mov
mov
adc
inc
test
pop
push
dec
jb
es
nop
xor
add
inc
mov
mov
into
icebp
cld
shr
(bad)
retf
mov
push
popa
cmp
and
mov
loop
inc
loope
push
add
jae
push
not
cmp
imul
mov
rcr
stos
xchg
jne
pop
rcr
aam
fcomp
push
(bad)
mov
xchg
sub
retf
xchg
xchg
imul
test
out
(bad)
(bad)
pusha
push
jno
xchg
mov
mov
push
loope
cmps
mov
in
push
ss
sbb
test
pusha
lods
mov
xchg
loopne
jecxz
test
sub
jmp
pusha
fidiv
shl
fiadd
mov
test
jg
add
ss
in
and
jno
ret
push
retf
es
push
dec
fwait
cmp
mov
adc
aaa
aad
mov
mov
sbb
xchg
loope
out
test
mov
lds
(bad)
ds
jno
push
out
push
fiadd
mov
movs
push
xor
dec
mov
ss
xchg
xchg
mov
out
xor
ret
out
push
mov
rcr
xor
xlat
xor
ror
xlat
fnstcw
cmps
out
add
pop
xor
pop
enter
bound
mov
mov
mov
sub
in
jg
cli
out
mov
sub
adc
xchg
add
das
das
shl
addr16
fnstenv
inc
clc
enter
jno
add
push
push
(bad)
fbstp
mov
cmps
pop
adc
ror
mov
in
(bad)
popa
(bad)
xchg
mul
mov
push
pop
movs
cs
mov
aas
rcl
push
push
pop
jae
es
or
(bad)
jno
inc
mov
shr
add
cdq
jbe
xchg
cwde
les
adc
loope
pop
ror
repnz
pop
cmps
adc
mov
xor
push
popf
ss
arpl
(bad)
mov
mov
fsub
jne
call
push
add
hlt
clc
push
mov
cmp
add
mov
inc
dec
push
loope
icebp
cwde
test
rcl
inc
pop
mov
cmc
es
xchg
or
mov
sbb
push
ret
je
add
psraw
jbe
and
add
xor
jmp
cmps
shl
sar
outs
and
sbb
add
xchg
and
adc
std
popw
push
leave
push
jb
fsub
xchg
retf
xor
inc
and
sbb
imul
xor
pop
mov
xchg
loopne
and
cmp
inc
cmps
les
sti
je
adc
rcl
rcl
jo
xchg
cs
in
ins
mov
jle
outs
mov
xchg
imul
and
pusha
test
push
cdq
fsub
cmc
popf
cmps
adc
leave
xchg
sbb
cli
or
inc
cmps
and
icebp
out
push
icebp
add
jmp
fwait
test
xchg
popf
dec
or
inc
out
imul
cmps
jmp
rcl
inc
push
bound
arpl
push
sub
push
imul
int
inc
aam
rcl
jle
ins
sub
sbb
jg
jne
push
pop
pop
sub
xor
jmp
nop
adc
pop
sub
out
dec
daa
and
pop
loop
push
cmps
mov
sub
xor
dec
cli
repnz
jecxz
pop
and
stc
call
fs
test
in
aam
dec
jne
inc
push
fcom
pop
sub
xor
sahf
push
cmp
shl
push
sub
pushf
xor
inc
sahf
sub
call
mov
hlt
inc
or
adc
add
and
cld
mov
mov
xchg
shr
sub
mov
imul
test
mov
sub
movs
jae
outs
pop
lahf
sub
cmp
jmp
jle
lock
(bad)
int
xor
mov
push
mov
sub
je
dec
xchg
adc
aaa
outs
adc
loope
add
adc
or
jp
add
cwde
fistp
(bad)
cli
lea
inc
popf
push
xor
es
mov
push
xchg
retf
xlat
push
ret
dec
cmps
stc
add
loopne
xchg
(bad)
mov
push
jmp
xchg
sti
out
inc
popa
sar
jb
xor
mov
loope
ds
ja
push
mov
bound
test
xor
add
xchg
jbe
xor
dec
rcl
jne
push
adc
repnz
push
xor
popa
add
std
dec
imul
in
movs
ss
xchg
dec
ret
xlat
inc
movs
inc
or
xchg
leave
xchg
push
rol
mov
popf
mov
jg
and
sbb
je
call
mov
icebp
push
arpl
inc
mov
es
(bad)
fisttp
mov
mov
xchg
mov
cmps
push
add
mov
jle
mov
pop
adc
xlat
jno
inc
push
push
shl
jne
pop
cmps
stc
push
mov
mov
pop
mov
imul
mov
push
jle
out
xor
iret
add
ror
data16
(bad)
mov
sbb
jmp
xchg
test
dec
pop
movups
mov
xchg
and
dec
mov
cwde
pop
push
jae
mov
jp
or
fisttp
loope
in
xchg
(bad)
mov
pop
and
enter
fnstsw
xchg
pop
mov
cmps
push
add
cmp
mov
(bad)
mov
push
mov
inc
add
fdiv
data16
push
pop
push
or
xor
xchg
or
mov
or
pop
rcr
jmp
movs
mov
mov
mov
mov
out
cmps
and
push
cmc
loope
fbstp
in
dec
inc
adc
imul
jno
add
xchg
mov
cmps
clc
adc
sbb
inc
shl
mov
into
mov
imul
test
adc
icebp
data16
push
add
jns
popa
jecxz
pop
inc
unpckhps
and
adc
jbe
push
shl
mov
test
idiv
xchg
cdq
add
mov
ror
ss
div
inc
push
push
jg
and
xor
inc
sbb
bound
mov
iret
aad
popa
cs
mul
mov
jmp
jbe
lahf
test
sar
pop
nop
ss
es
ret
fadd
push
pop
and
adc
rol
sub
jb
dec
sub
shl
cli
inc
es
call
adc
loopne
js
aam
mov
data16
mov
add
push
aad
push
je
dec
mov
mov
xchg
stos
icebp
out
sub
mov
cmp
push
mov
bound
popa
cs
test
fadd
clc
in
adc
xor
cmp
pop
les
movs
jb
imul
fld
sar
es
fisub
je
mov
mov
adc
pop
popa
stc
xor
pop
movs
sub
inc
inc
retf
mov
sub
adc
in
pop
mov
leave
jge
adc
add
ret
mov
mov
add
jbe
and
pop
jns
sbb
loop
xor
or
fadd
in
cmps
stc
or
sar
lock
mov
scas
xchg
add
push
push
jl
xchg
dec
daa
or
xchg
adc
out
aaa
and
adc
shl
pusha
rol
mov
fldenv
popa
ins
daa
or
push
xor
jne
add
mov
sub
mov
jmp
ror
xchg
inc
xor
stc
fistp
sub
push
bound
sahf
mov
cmp
out
popa
jbe
bound
jbe
mov
rcl
jae
repnz
jo
mov
jp
jo
loop
rep
mov
cs
sbb
mov
sub
outs
lock
fdiv
cmc
in
jecxz
fsubp
mov
xor
test
test
sbb
out
shr
push
fbld
les
mov
mov
rcl
xchg
test
mov
dec
(bad)
div
(bad)
retf
mov
ds
mov
mov
into
rcr
ret
add
mov
outs
mov
aad
stc
shl
cmp
les
pop
and
in
addr16
neg
sub
xor
xor
mov
sub
retf
fidiv
scas
xchg
push
push
fnstenv
xor
lea
imul
outs
and
das
pop
fs
shl
shr
pop
(bad)
hlt
ss
in
and
sbb
push
gs
or
push
or
mov
shr
out
mov
std
jno
xor
add
add
in
add
pop
jmp
inc
in
leave
leave
les
cli
xor
test
lahf
cmps
inc
xchg
hlt
add
inc
icebp
stc
cld
test
cld
jecxz
imul
mov
pushf
push
lods
xchg
add
mov
mov
fld
sahf
sar
mov
ds
shr
out
inc
ins
xor
push
mov
sub
mov
je
add
fcomi
retf
or
pop
mov
aaa
ins
pop
shl
jne
sbb
stos
loop
pop
mov
in
test
mov
sar
pop
inc
sub
fucom
add
adc
and
adc
push
jl
lahf
cmp
mov
and
not
sbb
dec
pop
ret
add
loope
cmc
sti
aam
cwde
cli
in
mov
data16
cli
mov
inc
xor
or
inc
mov
ds
push
pop
push
hlt
ss
bound
sahf
adc
idiv
add
pop
fucom
adc
adc
pop
out
inc
popa
iret
cmp
jecxz
iret
ja
je
mov
jl
movs
scas
xchg
push
inc
or
test
aam
je
xor
inc
jmp
je
inc
sub
xor
lods
mov
xchg
mov
leave
jle
movs
xchg
sahf
push
jle
add
push
pop
daa
dec
sbb
xchg
push
push
lods
int
std
sbb
pop
push
pop
out
mov
sbb
xor
mov
xchg
sub
ficom
push
and
jp
jns
pop
push
mov
fld
(bad)
popa
ret
dec
mov
jb
adc
mov
shr
dec
pop
mov
sub
or
imul
push
pusha
out
test
sub
mov
iret
ss
dec
test
dec
cli
xchg
or
sbb
into
dec
or
test
rcr
push
inc
es
push
cmp
push
imul
ficom
xchg
inc
movs
mov
pop
push
ss
sbb
daa
or
inc
xchg
lods
ret
pop
pop
ins
add
in
xchg
shr
dec
dec
ss
in
scas
out
(bad)
jno
push
mov
jno
add
push
push
xor
movs
lea
adc
dec
cli
jne
ins
and
ja
rcl
xchg
and
push
cld
dec
cld
gs
rol
daa
xchg
xchg
stos
jne
out
inc
sub
jp
add
in
jae
and
cwde
(bad)
mov
sub
std
scas
sbb
mov
cmp
movs
dec
pop
into
inc
es
fistp
ret
pop
jg
fimul
scas
in
pop
jmp
adc
adc
and
(bad)
xor
pop
jecxz
jp
lea
inc
adc
lds
xchg
sub
enter
sub
mov
dec
mov
sub
sbb
(bad)
or
popf
mov
arpl
cmps
or
pop
gs
xchg
inc
(bad)
push
cmp
sub
jno
fiadd
inc
add
inc
sub
and
inc
inc
loope
(bad)
push
rcl
mov
(bad)
fprem1
shl
(bad)
mov
add
(bad)
out
sub
sbb
push
sbb
das
bound
loop
fldcw
xchg
sub
lock
push
push
push
nop
xchg
xchg
test
add
out
push
cmc
sar
data16
xor
mov
cmc
push
sbb
(bad)
xor
adc
fldcw
ins
add
and
xor
adc
mov
cmp
pushf
div
push
jmp
push
adc
je
add
sbb
std
mov
push
das
out
dec
ds
rcl
mov
leave
cmps
push
mov
mov
sub
in
dec
mov
cs
mov
inc
push
pop
xchg
and
bound
mov
cmp
cli
pop
jae
jb
imul
push
aaa
push
and
ja
jne
inc
pop
stc
push
les
dec
rcl
in
mov
or
outs
pop
mov
jno
push
sbb
shl
(bad)
cmc
mov
add
ds
ret
cli
pop
push
popa
add
jmp
test
sar
dec
mov
(bad)
aad
xor
jnp
mov
and
add
xor
mov
ins
inc
icebp
les
arpl
retf
mov
push
ret
pop
aad
rol
in
sub
jns
test
jp
xlat
popa
test
mov
stc
adc
ds
push
(bad)
stc
mov
dec
es
push
shl
mov
imul
xor
xchg
aad
out
loop
jle
hlt
ds
cld
out
ins
cmp
add
sbb
sar
ins
imul
inc
push
add
test
push
add
stc
adc
mov
mov
bound
out
les
outs
push
mov
mov
imul
out
or
dec
and
xchg
push
call
adc
retf
pop
jg
xor
sub
icebp
das
rcr
rcl
push
out
jle
test
scas
cwde
cdq
test
mov
push
movs
test
and
cdq
pop
add
out
pop
and
mov
repnz
jl
(bad)
inc
aas
sub
adc
cmp
es
xor
inc
mov
imul
int
std
test
dec
mov
mov
inc
es
pop
and
mov
or
out
jle
adc
push
sub
sub
call
pop
test
imul
test
shl
addr16
fxch
inc
clc
enter
jno
add
scas
push
(bad)
fbstp
mov
cmps
pop
adc
rcl
jle
dec
(bad)
popa
(bad)
cmp
imul
push
adc
cs
mov
aas
rcl
adc
pop
jae
fst
cmp
jno
inc
mov
shr
add
cdq
mov
xchg
cwde
les
adc
push
out
ror
repnz
pop
cmps
adc
mov
xor
push
add
sub
loop
fsub
jne
call
push
loope
pop
xor
push
mov
cmp
test
dec
ret
push
loope
icebp
cwde
test
cs
pop
mov
cmp
cmp
pop
and
cmc
psraw
jbe
and
ss
mov
xchg
repz
dec
sar
outs
and
sbb
add
xchg
and
xor
pop
pop
icebp
jbe
popw
push
leave
stc
jb
fsub
xchg
dec
popa
mov
mov
and
jns
and
pop
ret
mov
nop
lods
sbb
jmp
jae
dec
loope
xchg
push
ret
call
cmp
mov
(bad)
xlat
and
and
stos
loop
xlat
or
ret
lock
in
in
(bad)
dec
scas
xor
in
xor
push
sbb
push
mov
sbb
inc
out
dec
cdq
cmp
mov
sahf
inc
xor
imul
pusha
adc
(bad)
stc
shl
addr16
sbb
mov
ficom
(bad)
sti
into
cwde
and
jle
jg
imul
jo
mov
fnstcw
add
sub
lods
fcmovnu
into
and
in
pop
or
movs
adc
dec
jmp
call
cmp
mov
and
ret
in
ror
xor
adc
loope
in
jne
inc
mov
fst
nop
out
ret
and
xor
sar
or
or
bound
int
pop
add
lods
jmp
xor
sbb
imul
jecxz
or
call
outs
loop
mov
adc
cli
std
dec
jb
sbb
add
mul
pop
cmps
pop
and
outs
lds
push
ins
bound
test
mov
push
(bad)
jmp
add
out
adc
xor
stos
mov
and
std
int
pop
inc
test
bound
sub
mov
jge
sbb
cmp
pop
push
mov
adc
sub
mov
push
daa
popa
aaa
jno
add
addr16
gs
dec
inc
pop
xor
xchg
les
xor
mov
mov
cmps
loopne
xchg
sub
sar
loop
repnz
or
cs
or
adc
push
push
or
mov
shl
cdq
out
inc
gs
jmp
shl
sbb
jmp
jle
xchg
cmp
sub
int
jge
data16
cmp
les
jb
int3
sbb
push
mov
loop
fcomp
lods
pop
gs
push
pop
and
imul
out
scas
adc
and
call
mov
push
dec
push
mov
enter
ficom
cwde
inc
jmp
xchg
rcr
push
cmp
mov
ins
stos
xchg
dec
imul
clc
mov
cmc
sti
jnp
dec
(bad)
retf
fs
lock
add
and
bound
ins
inc
test
cmp
pop
push
dec
(bad)
(bad)
ss
ds
jno
add
fidivr
ret
nop
dec
inc
das
jmp
push
pop
icebp
stos
test
sbb
pop
call
sub
jns
mov
pop
inc
cmps
inc
pop
lahf
mov
push
outs
ret
lods
and
retf
shl
in
mov
loop
push
or
test
cmp
imul
xor
mov
mov
and
pop
sbb
retf
loopne
add
cmp
popa
rcr
frstor
jb
xor
aad
jb
dec
call
jmp
dec
pop
mov
nop
push
rcr
scas
mov
repz
(bad)
loop
test
test
rcl
add
(bad)
push
xor
test
mov
mul
fisttp
xor
in
cmp
inc
(bad)
out
ins
xchg
jne
sub
mov
and
jbe
and
pop
pop
or
push
(bad)
push
js
xlat
add
xor
aad
cmp
push
jae
push
movs
inc
jo
adc
jge
mov
mov
(bad)
jp
cdq
je
inc
dec
pop
in
push
fcom
jge
sbb
inc
fimul
push
cwde
sub
sub
data16
ret
(bad)
mov
jp
aam
stos
mov
bnd
fimul
outs
cmp
ss
cwde
adc
pop
es
jne
cmps
cdq
ds
sahf
rcr
call
adc
(bad)
dec
jl
mov
jne
pop
add
add
sti
and
inc
(bad)
sbb
lods
cld
dec
jns
js
pop
inc
adc
cmp
imul
fadd
or
dec
neg
out
(bad)
fisubr
pop
icebp
cmps
pushf
inc
or
fwait
jbe
xor
sbb
hlt
pop
xchg
les
outs
shl
jb
push
out
js
fnstenv
hlt
(bad)
mov
push
loope
and
sbb
sbb
inc
mov
iret
sbb
mov
into
adc
push
cmps
mov
sub
pop
xchg
les
cmp
add
sbb
adc
stos
jae
inc
jp
mov
pusha
push
pop
fist
ficom
add
mov
test
and
shl
leave
pop
xchg
shl
popa
cmp
out
and
in
out
cmp
lock
shl
mov
or
mov
mov
aad
enter
push
mov
push
std
aam
cwde
pop
leave
pop
mov
(bad)
jne
pop
or
mov
push
das
(bad)
xor
sub
mov
(bad)
cdq
push
adc
cdq
fnstcw
ret
int
inc
push
loop
outs
jne
add
push
inc
inc
cmp
dec
cmp
test
and
out
xchg
ins
jns
repnz
fdiv
idiv
(bad)
xchg
mov
out
mov
pop
es
imul
data16
pop
inc
add
ins
jbe
cdq
cmp
push
pop
push
cmp
imul
or
jmp
mov
mov
cmp
lods
and
xor
loope
retf
jbe
cwd
jmp
imul
pop
add
xchg
adc
sbb
rol
out
cmc
xchg
or
in
test
repnz
leave
mov
out
mov
cli
dec
push
icebp
stc
pop
jb
es
popa
pop
jno
mov
outs
or
or
push
jbe
pop
ror
lds
jmp
rol
adc
scas
mov
ror
leave
push
push
inc
ds
jg
and
xchg
mov
cmp
mov
in
(bad)
inc
mov
call
pop
push
mov
jb
adc
pop
push
(bad)
cmp
inc
ret
cmps
xchg
jno
add
push
out
addr16
push
and
into
xor
pop
call
dec
lods
in
ins
das
jne
inc
jmp
dec
movs
mov
out
push
add
dec
pop
push
jno
nop
js
pusha
mov
out
inc
inc
inc
cmp
stos
ret
dec
(bad)
retf
sub
test
push
mov
(bad)
jge
popa
inc
xor
gs
retf
addr16
es
test
shl
push
(bad)
mov
mov
sbb
rol
retf
aad
or
stc
mov
inc
cdq
cmp
sti
xor
stc
out
shr
(bad)
clc
cmp
mov
cmp
les
popa
ds
stc
or
jmp
xor
mov
in
jmp
fdiv
push
cmps
inc
arpl
(bad)
dec
inc
xchg
xchg
push
pop
(bad)
sbb
add
xor
mov
ss
(bad)
mov
jb
sbb
ins
js
push
xchg
sbb
mov
shl
sbb
push
mov
lea
sub
push
xchg
je
jl
je
je
jns
and
mov
pop
leave
stc
mov
mov
int
out
xchg
xchg
jge
jns
dec
std
mov
push
loope
sub
rcl
jb
fldcw
adc
fbld
mov
mul
and
sar
xor
fwait
popa
(bad)
and
retf
xchg
aad
xor
loope
icebp
std
jg
push
dec
dec
pop
jno
and
or
cwde
xchg
xor
stc
adc
mov
dec
popf
jle
test
pushf
frstor
sbb
inc
mov
imul
scas
icebp
dec
xchg
mov
push
mov
es
jmp
push
fidivr
and
fild
mov
mov
test
scas
inc
push
push
(bad)
fidivr
push
pop
fcom
pop
push
icebp
call
cmc
lods
fsub
jns
or
iret
cmp
aas
and
movs
adc
(bad)
mov
out
sub
or
and
data16
cmp
or
mov
adc
iret
pop
(bad)
nop
es
cdq
(bad)
xor
adc
xor
(bad)
sbb
xchg
repz
sar
mov
jbe
dec
cmp
cdq
imul
sbb
pop
loope
into
jg
pop
add
add
cli
and
inc
(bad)
xor
lds
out
iret
and
loope
pop
call
pop
rcl
out
cmp
retw
test
enter
push
xchg
fisubr
adc
sahf
inc
lods
mov
and
dec
cmp
aas
and
out
xchg
and
repnz
cmp
xor
(bad)
xchg
mov
out
(bad)
ss
es
imul
es
pop
inc
add
lea
cdq
cmp
push
pop
or
das
xor
xchg
pop
xchg
push
or
or
in
mov
mov
cmp
stos
and
xor
dec
cmc
loope
int3
jbe
cmp
inc
adc
imul
mov
add
xchg
test
inc
sbb
pop
rcl
pop
out
cmc
xchg
or
cmp
test
repnz
leave
mov
out
mov
cld
test
stc
pop
jb
es
popa
mov
adc
mov
cmps
mov
jbe
pop
shl
es
ffreep
test
test
mov
lea
rcl
mov
scas
mov
ror
leave
push
cli
jno
inc
xchg
scas
jg
and
addr16
sub
cmp
mov
iret
aad
popa
cs
div
cmc
xchg
cli
outs
jne
adc
loop
loope
in
mov
sub
leave
or
outs
out
aam
cdq
mov
out
xchg
xor
inc
adc
inc
inc
xor
xchg
inc
addr16
mov
inc
jo
movs
xor
fbstp
dec
adc
stos
in
mov
sub
adc
add
pop
or
mov
lods
mov
mov
fsub
cs
cld
pop
jns
lds
(bad)
popa
adc
xchg
and
loope
lahf
adc
dec
data16
outs
cmc
ss
pushf
push
and
mov
jl
jne
adc
loope
sbb
xchg
and
push
pop
push
mov
mov
push
div
xchg
idiv
or
pop
int
jmp
cmps
cmp
fst
sub
mov
lds
out
popa
cmp
out
mov
int3
or
add
jnp
cs
mov
int3
lods
in
popa
dec
jno
test
scas
imul
int
add
sbb
xor
xchg
fnstsw
jecxz
jle
pushf
xchg
xchg
mov
xchg
push
rcr
pop
xchg
gs
test
mov
into
cmp
pop
cmps
loopne
cmc
push
xor
cmp
(bad)
pop
add
imul
cs
pop
jb
jno
outs
push
and
fisttp
mov
mov
mov
shl
jmp
aad
popa
shl
fbstp
xor
shl
loopne
push
sub
aad
xor
(bad)
gs
into
inc
push
add
sbb
mov
sahf
mov
mov
(bad)
sub
cmp
adc
mov
jbe
pop
push
cmps
mov
push
or
xchg
rcl
dec
stc
call
inc
jno
xor
int
add
lock
in
cs
push
mov
dec
jo
xchg
movs
push
mov
inc
call
sbb
sete
mov
(bad)
in
les
adc
or
jmp
add
dec
push
pop
out
inc
and
in
sub
dec
leave
hlt
sub
(bad)
jo
hlt
or
xchg
out
sub
mov
cmps
push
and
lods
daa
popf
test
xchg
(bad)
and
outs
nop
jge
cmp
cli
jnp
mov
jge
mov
inc
add
loope
out
imul
cmps
adc
pop
inc
dec
jbe
mov
mov
stc
jbe
ins
test
jmp
sbb
jb
aas
(bad)
inc
mov
and
(bad)
mov
mov
inc
mov
loop
retf
jne
add
icebp
jbe
data16
push
shl
adc
push
cmp
leave
mov
adc
outs
push
and
packssdw
int
sbb
and
cmp
pop
(bad)
cmps
mov
loop
(bad)
pop
xchg
not
push
inc
push
xor
(bad)
jecxz
cmp
ror
xchg
jbe
xor
xor
inc
cs
imul
push
sbb
call
mov
sub
and
leave
jl
jbe
js
push
mov
sti
jns
pop
pop
pop
xchg
add
and
add
mov
mov
ret
fstp
mul
inc
xor
inc
pop
dec
jno
(bad)
mov
dec
xor
sbb
push
cs
adc
jp
jne
xchg
sahf
in
loope
xor
or
mov
pop
dec
shl
sbb
and
les
xlat
es
mov
(bad)
cld
jecxz
mov
push
dec
movs
into
mov
xchg
jmp
inc
mov
mov
sahf
lahf
mov
mov
xchg
xchg
jns
mov
or
gs
sub
loope
lds
pop
movs
xchg
imul
sub
jbe
jecxz
and
ss
(bad)
aad
movs
not
nop
sub
les
dec
cmc
jecxz
pop
in
mov
push
fwait
mov
and
sub
aam
jecxz
push
mov
dec
jmp
ret
adc
mov
xchg
inc
aad
xlat
bound
jmp
push
inc
mov
loop
mov
rcr
add
test
inc
sbb
stos
repz
not
inc
cli
arpl
(bad)
jno
add
(bad)
in
push
xchg
pop
xchg
and
pop
push
sbb
stc
dec
inc
xchg
pushf
mov
pop
test
cdq
enter
ss
xchg
jb
push
outs
add
sbb
dec
pop
(bad)
mov
mov
cld
mov
test
jp
push
push
mov
sbb
mov
fst
mov
gs
cmp
mov
adc
add
imul
mov
inc
out
sub
out
pop
fs
mov
rol
lahf
inc
adc
xchg
outs
aad
cld
jb
ds
cmps
xchg
sub
mov
pop
(bad)
dec
sub
push
sbb
and
(bad)
leave
mov
rcr
mov
add
push
cs
xchg
call
test
inc
mov
loopne
ret
jo
push
cdq
and
xor
dec
push
pushf
jle
fld
cs
out
push
inc
and
adc
add
mov
cmp
in
mov
xor
mov
lock
and
jnp
inc
popf
sub
jno
xor
cli
into
and
push
imul
dec
mov
jge
inc
bound
je
jno
ret
xchg
or
cld
push
mov
addr16
and
shl
add
dec
daa
mov
and
or
inc
rol
and
lock
fwait
jbe
jmp
dec
scas
inc
fldenv
arpl
mov
shl
mov
jns
rol
push
test
shr
in
mov
ret
sub
mov
xor
inc
(bad)
push
add
add
cmps
inc
push
mov
cdq
adc
movs
xchg
ret
and
mov
mov
push
ins
xchg
xchg
movs
and
sbb
jo
ss
inc
sbb
fld
xchg
add
std
sub
movs
mov
push
mov
xchg
popa
addr16
mov
or
fmul
jecxz
inc
movs
push
icebp
frstor
cmp
inc
shl
ins
push
das
mov
jecxz
sbb
fs
repnz
loopne
add
cld
daa
or
pushf
into
mov
sti
jg
xchg
fsubr
ins
jns
mov
pop
inc
movs
iret
cli
dec
push
push
inc
repnz
jge
outs
(bad)
popa
sub
(bad)
aam
jo
add
stc
push
mov
sbb
add
mov
cmc
or
mov
ja
cmps
push
push
add
fwait
pop
and
retf
cmc
cmp
jo
enter
mov
cmps
out
aad
int
inc
data16
aam
cld
cli
sub
out
and
cmps
push
xchg
outs
mov
mov
(bad)
xor
outs
rcl
mov
jne
pop
test
jge
inc
mov
test
xchg
mov
sbb
sub
push
mov
xlat
(bad)
into
(bad)
popa
inc
jp
add
push
push
lahf
fbld
push
test
sbb
mov
xchg
jl
shl
sub
sbb
fidiv
loopne
stos
inc
adc
retf
mov
mov
dec
in
lea
nop
fst
in
pusha
(bad)
push
mov
jbe
loop
adc
xchg
adc
nop
fst
xor
out
xchg
jg
jne
std
mov
inc
push
movs
push
mov
adc
imul
mov
dec
jne
out
sbb
add
push
sbb
mov
mov
push
jno
mov
push
jmp
xchg
test
cmp
test
jne
sub
and
inc
(bad)
(bad)
push
je
add
mov
jae
push
sub
out
les
data16
sub
(bad)
mov
(bad)
xor
rcl
sahf
push
sbb
ss
xchg
adc
inc
jle
aad
sahf
cmp
shl
xor
loop
push
movs
add
push
retf
push
pop
iret
add
adc
es
daa
test
shl
cmp
popf
clc
jnp
sbb
mov
sbb
mov
ret
mov
cmc
shl
xchg
adc
in
jo
or
pop
jge
gs
stos
xchg
leave
mov
loopne
rep
xor
inc
arpl
aaa
cli
int
and
(bad)
pop
dec
xor
pushf
inc
mov
push
mov
imul
ins
xor
add
je
or
dec
jne
loope
fucomp
pop
(bad)
call
pop
pop
or
fcomp
mov
push
mov
jl
rcr
(bad)
aam
fnstenv
inc
sub
aas
push
loopne
xchg
test
xor
add
icebp
mov
jb
hlt
es
xlat
and
lea
stos
mov
mov
mov
mov
pop
and
cli
idiv
pop
sahf
cmp
pop
shl
sub
jne
shl
sar
push
les
inc
in
popa
xchg
xor
popf
outs
lods
imul
push
add
cmp
adc
(bad)
ret
cmp
out
xchg
not
pushf
inc
add
mov
out
jp
mov
xor
mov
test
in
pop
add
push
xor
arpl
movs
push
add
and
jns
sahf
cmp
loope
add
(bad)
push
adc
adc
add
pop
hlt
and
mov
sbb
scas
inc
loop
add
int
std
xchg
sahf
mov
xchg
outs
(bad)
popa
cmp
sub
xchg
movs
mov
repz
sub
jp
xchg
in
push
and
mov
mov
sbb
push
jno
push
fst
loop
gs
cdq
mov
ffreep
push
bound
out
les
outs
push
mov
mov
push
mov
and
icebp
loop
stc
and
es
outs
dec
mov
fsub
nop
push
popa
dec
movs
scas
add
adc
jne
mov
mov
jmp
sub
(bad)
jno
push
out
jg
xchg
mov
sub
lock
loopne
cmc
test
rcl
mov
xchg
repnz
loop
pop
or
fwait
jbe
xor
push
(bad)
stc
mov
cmp
push
je
and
adc
fadd
pop
inc
push
mov
push
cs
pop
cmc
and
xor
sub
scas
shl
repnz
add
sub
aam
jge
in
loopne
or
ss
xor
fsubp
xchg
cmps
inc
mov
std
add
mov
jne
fst
push
mov
jne
push
cmps
leave
push
movs
int
mov
lea
push
aad
jmp
(bad)
fidivr
jmp
not
loope
xor
mov
pusha
fiadd
adc
and
iret
psraw
jbe
and
cmp
mov
and
pop
ror
sar
outs
and
sbb
cmp
xchg
and
out
xchg
ds
icebp
jbe
popw
push
leave
stc
jb
fsub
xchg
adc
xor
mov
xchg
test
shr
cmc
pusha
jg
(bad)
ffree
pop
mov
sbb
mov
mov
adc
shl
addr16
fxch
inc
(bad)
enter
jno
add
scas
push
ret
fbstp
mov
cmps
pop
adc
shl
mov
jb
popa
mov
loop
push
pop
movs
cs
mov
aas
rcl
cmc
push
pop
jae
fst
cmp
jno
inc
mov
aad
add
cdq
mov
or
les
adc
xor
pop
ror
repnz
pop
cmps
adc
movs
aaa
dec
mov
arpl
sub
(bad)
push
fsub
jne
call
push
mov
pop
xor
push
mov
cmp
mov
retf
xchg
ins
mov
retf
sbb
cli
hlt
(bad)
fcom
aam
xor
jge
xor
add
dec
add
rcl
cmp
jae
fld
sar
stos
push
lahf
into
and
rol
push
or
and
jle
sar
add
pop
stos
push
jge
push
mov
sar
push
in
pop
cld
sbb
jmp
push
loope
call
retf
mov
jmp
add
sub
mov
out
mov
cdq
mov
aas
call
or
sbb
mov
inc
sub
cmps
push
(bad)
ins
addr16
es
fwait
mov
mov
mov
pop
jg
cli
sti
add
loope
mov
jl
pushf
sub
mov
fst
or
mov
ss
dec
scas
sbb
add
dec
loopne
jmp
rol
push
push
push
leave
rol
aaa
add
fistp
mov
shl
std
pop
(bad)
mov
inc
out
mov
dec
inc
dec
xchg
xchg
shr
mov
jecxz
retf
movs
(bad)
xchg
test
sbb
jns
shl
dec
sub
(bad)
lds
shl
outs
mov
aaa
aas
test
push
xchg
and
xchg
xor
stos
mov
(bad)
leave
mov
xor
jno
ret
imul
sbb
jns
addr16
je
jae
inc
add
sub
push
mov
js
jno
ret
stc
dec
mov
jecxz
cli
mov
imul
fidivr
mov
js
sub
sub
mov
stos
xchg
rcr
repnz
fmulp
enter
xchg
sahf
push
push
push
sub
aam
call
(bad)
cli
inc
fisubr
jg
out
jecxz
sbb
int
jb
test
mov
ror
cwde
jge
frstor
jle
and
sbb
test
xor
mov
ds
jne
mov
std
xor
leave
push
bnd
xchg
mov
mov
ret
repnz
cmc
jns
or
sbb
shr
(bad)
sub
jbe
into
(bad)
popa
lods
xchg
xchg
pop
dec
mov
shl
in
add
inc
(bad)
and
xor
adc
lock
adc
mov
pop
cs
loopne
pop
es
iret
cmp
push
inc
xor
gs
add
loope
xor
xchg
cs
mov
jg
imul
cli
mov
out
xchg
je
add
loope
push
cmc
mov
mov
bound
mov
out
data16
stc
push
and
xor
xchg
push
clc
pop
push
ss
in
or
inc
xor
loope
loopne
shl
push
imul
dec
mov
mov
mov
retf
shl
push
xchg
loope
pop
xor
cdq
push
(bad)
dec
lds
out
iret
rcl
(bad)
xor
out
sbb
jle
push
xor
movs
xchg
and
mov
outs
xchg
cmp
xchg
and
out
xchg
aas
pop
icebp
jbe
popw
push
leave
clc
jb
fsub
xchg
dec
popa
mov
(bad)
iret
and
jns
and
rcr
in
dec
cmc
pop
jg
(bad)
fld
pop
mov
sbb
jbe
mov
cs
shl
addr16
fxch
inc
(bad)
enter
jno
add
scas
push
rcr
mov
cmps
pop
adc
shl
mov
in
(bad)
popa
(bad)
xor
daa
mov
push
pop
movs
lgs
aas
rcl
mov
pop
jae
fcom
cmp
jno
inc
mov
shr
add
cdq
mov
test
cwde
les
adc
xchg
out
ror
repnz
pop
cmps
adc
aas
movs
xor
push
imul
mov
cs
fsub
jne
call
push
add
xor
push
mov
cmp
sbb
dec
ret
push
loope
icebp
cwde
test
das
aad
pop
mov
std
es
xchg
or
mov
sbb
push
cmp
mov
test
daa
and
ss
(bad)
xor
sahf
dec
xor
and
inc
mov
(bad)
data16
push
(bad)
aad
in
xor
pop
aad
jne
add
sbb
mov
add
es
jmp
imul
in
mov
pop
out
xchg
jp
icebp
xor
cdq
cmp
popa
cli
xchg
ficomp
push
push
jle
(bad)
mov
test
dec
cdq
xchg
in
add
test
das
shl
aas
call
cmp
je
data16
dec
push
dec
mov
popa
inc
daa
or
xor
cmps
inc
dec
loopne
push
jbe
das
sub
push
icebp
or
fldcw
or
cld
icebp
test
or
out
push
int
cmps
mov
mov
dec
aad
dec
leave
jle
xchg
fsub
mov
sub
inc
sbb
ret
(bad)
lods
ins
push
or
and
leave
inc
sbb
pop
or
mov
add
push
push
push
mov
retf
pop
sub
pop
sahf
push
and
int3
out
xchg
or
or
mov
and
nop
and
(bad)
rol
idiv
jns
cmp
ret
mov
lock
mov
ss
jno
push
mov
inc
jb
mov
push
push
sbb
ds
int3
fwait
adc
aad
popa
dec
jbe
add
out
xchg
test
icebp
cmps
rcr
pop
inc
test
(bad)
ret
in
hlt
jnp
bound
push
lods
ds
imul
test
jae
repnz
js
test
std
cli
ss
rcl
mov
mov
fs
in
inc
std
pop
test
ins
cmp
mov
mov
jl
mov
into
jns
mov
sbb
shl
add
add
add
stos
xchg
jne
cmc
into
adc
loope
cmps
push
rcr
push
popa
and
retf
mov
(bad)
xchg
clc
sar
add
xor
sub
(bad)
cs
jmp
and
mov
and
gs
mov
or
shr
push
sub
mov
pop
ins
xchg
(bad)
pop
add
add
mov
fdivr
push
(bad)
xor
lds
out
iret
and
fdivrp
sbb
xchg
repz
sar
mov
jbe
test
(bad)
cdq
imul
sbb
pop
loope
into
jg
pop
add
inc
or
xor
fiadd
push
arpl
mov
xchg
push
dec
add
inc
push
movs
adc
mov
and
out
pop
outs
jo
popf
idiv
ret
add
ds
clc
aas
mov
cdq
sbb
sbb
mov
sbb
xor
xchg
dec
js
js
mov
lahf
(bad)
loopne
sub
push
inc
clc
fbld
sti
ret
popa
xchg
leave
or
inc
movs
jb
addr16
add
add
mov
sar
mov
ror
sbb
jb
xchg
dec
xor
loope
mov
jmp
imul
pop
add
xchg
mov
pop
clc
adc
sbb
shl
xchg
or
or
test
repnz
leave
into
xor
push
out
mov
mov
push
ins
stc
pop
jb
es
popa
add
mov
outs
ja
(bad)
cmps
sub
mov
test
mul
mov
inc
arpl
es
scas
mov
ror
leave
push
mov
inc
(bad)
scas
jg
and
aad
dec
mov
cmp
lds
jne
cs
and
imul
out
adc
test
sar
jmp
fnstcw
ret
mov
fisubr
adc
and
mov
and
dec
inc
mov
add
jno
or
nop
xchg
mov
cmps
stc
adc
xchg
scas
ds
xchg
mov
out
div
inc
mov
imul
test
inc
add
dec
jbe
cdq
cmp
push
pop
jno
cdq
xchg
(bad)
sahf
das
xor
xchg
sahf
xchg
mov
loop
jbe
mov
jbe
dec
and
mov
and
mov
retf
xor
lods
add
stos
shl
in
pop
mov
popa
add
inc
mov
mov
push
cmp
adc
dec
imul
pop
rcl
lods
mov
out
dec
loope
sbb
icebp
pop
mov
int3
ret
xor
ror
and
pop
cmps
push
add
inc
jp
lds
push
mov
int
add
mul
ret
mov
daa
push
jl
ds
mov
jb
xor
xchg
or
sbb
daa
or
adc
sub
out
or
(bad)
jmp
xchg
stos
xchg
lock
sbb
data16
pop
xchg
leave
jle
sti
fsubrp
rcr
xor
dec
dec
pop
in
loope
add
jmp
test
xchg
popf
mov
mov
xchg
aaa
dec
shl
push
push
and
cmp
shl
sub
mov
mov
or
adc
adc
aad
cmp
imul
jmp
shr
sub
test
arpl
adc
fld
(bad)
sahf
mov
adc
fstp
mov
mov
into
cdq
pop
add
mov
sbb
jne
sub
push
imul
pop
adc
mov
movs
rcl
jmp
or
retf
nop
jge
sub
xchg
fld
std
xor
and
sub
ret
xor
pop
mov
sub
mov
cmps
adc
ss
addr16
xchg
mov
push
mov
nop
shl
nop
das
jge
out
xchg
xor
popa
repnz
adc
adc
add
lds
popf
or
loop
xchg
xchg
mov
mov
or
and
(bad)
mov
adc
stc
mov
(bad)
or
(bad)
sar
and
cmps
adc
mov
stos
push
mov
daa
stc
mov
sub
scas
loope
xchg
retf
add
mov
dec
mov
cmc
mov
arpl
push
xchg
inc
test
shr
shr
pop
adc
xlat
lods
jns
rol
jno
inc
sbb
outs
inc
dec
inc
movs
add
mov
iret
rcl
(bad)
xor
out
sbb
jle
push
xor
push
adc
loope
push
sahf
ds
shl
sbb
inc
out
push
push
loop
push
movs
test
sahf
xchg
xor
loop
fwait
cli
mov
(bad)
in
popa
cmp
out
iret
and
dec
sbb
add
std
sahf
and
fxch
aas
call
push
test
mov
loopne
icebp
std
test
xchg
pop
mov
arpl
bound
enter
mov
loop
adc
xchg
aad
push
adc
or
xchg
sbb
cs
inc
ins
adc
out
adc
adc
and
aam
in
les
outs
pop
pop
aaa
inc
sbb
sbb
adc
mov
mov
popf
in
hlt
jg
jg
frstor
mov
push
inc
scas
sbb
jmp
fwait
test
adc
adc
test
stc
sub
or
xchg
fs
xor
daa
jecxz
test
hlt
(bad)
xchg
push
push
imul
cmp
jo
inc
mov
out
out
add
cdq
mov
mov
mov
les
adc
std
out
ror
repnz
mov
aas
movs
push
dec
mov
arpl
sub
xchg
fs
iret
jne
call
push
imul
leave
clc
push
mov
cmp
or
ret
push
loope
icebp
cwde
test
das
aad
pop
mov
lods
es
xchg
or
mov
sbb
push
push
and
lock
jbe
and
add
(bad)
xor
and
shl
mov
push
outs
and
sbb
add
cwde
inc
into
out
xchg
add
icebp
jbe
popw
push
leave
clc
jb
fsub
xchg
ds
mov
mov
and
jns
and
rcr
in
dec
cmc
fs
(bad)
cmp
pop
mov
sbb
inc
add
adc
shl
addr16
fxch
inc
ror
popa
pop
jno
add
scas
push
(bad)
fbstp
mov
cmps
pop
adc
shr
jg
jbe
popa
(bad)
in
mul
mov
fs
sub
xchg
adc
cs
jle
sbb
and
or
fdivr
mov
adc
jecxz
inc
in
cmp
sub
je
pusha
mov
out
sbb
xor
and
jmp
cmp
dec
cli
call
push
mov
dec
inc
test
shl
mov
and
xor
sbb
and
pushf
push
xor
cmp
inc
pop
push
mov
jle
(bad)
lock
mov
scas
mov
icebp
data16
dec
lea
or
xchg
sub
xlat
adc
xchg
dec
ret
add
daa
jp
push
cs
mov
push
stc
fsub
jno
sub
add
out
outs
mov
das
icebp
push
mov
jl
dec
mov
jbe
int3
es
sahf
xchg
popf
pop
add
(bad)
push
sub
rcl
nop
icebp
mov
xchg
movs
or
push
movs
imul
inc
cdq
repnz
rol
icebp
mov
mov
in
clc
sbb
jb
jae
sub
loopne
dec
mov
out
inc
push
adc
sbb
retf
mov
fisub
and
retf
xchg
aad
xor
add
inc
ss
icebp
std
jg
push
dec
dec
pop
jno
or
add
xchg
jle
sahf
xor
mov
mov
push
dec
pop
mov
or
adc
not
sbb
push
mov
icebp
jno
jae
push
pop
stc
jne
and
sub
mov
scas
and
out
dec
in
xchg
daa
mov
shl
dec
mov
(bad)
and
jmp
call
addr16
int
jae
push
or
push
or
mov
popa
dec
cli
jae
or
cmp
loop
mov
cmp
bound
xchg
int
push
popa
dec
into
cmp
xchg
icebp
ret
in
sub
cdq
sbb
sbb
hlt
cmc
xor
daa
lods
and
jne
inc
pop
icebp
cmps
movs
adc
mov
and
out
push
inc
clc
int3
es
popa
(bad)
mov
retf
fnstenv
icebp
cmp
in
out
test
sar
push
dec
pop
jmp
aam
add
cmp
add
adc
push
sub
sub
call
pop
test
imul
gs
movs
scas
mov
jmp
jle
xchg
outs
sahf
ss
add
ret
jmp
adc
xor
leave
stc
popa
xchg
nop
bound
adc
(bad)
and
mov
gs
push
loope
push
xchg
arpl
add
push
jb
ja
pop
or
mov
and
xor
add
adc
test
out
pop
leave
(bad)
rcl
mov
xchg
repnz
xor
clc
pop
loope
icebp
xor
cs
dec
pop
gs
enter
mov
push
movs
xchg
imul
lds
test
mov
add
jge
outs
xchg
iret
and
jns
and
rcr
in
dec
cmc
pop
jg
(bad)
sub
sbb
add
push
ds
test
das
shl
addr16
fxch
inc
stc
enter
jno
add
scas
push
(bad)
fbstp
mov
cmps
pop
adc
shl
mov
in
(bad)
popa
mov
loop
push
pop
movs
lgs
aas
rcl
pop
push
pop
jae
fcom
cmp
jno
inc
mov
shr
add
cdq
mov
xchg
cwde
les
adc
jmp
js
push
pop
cmps
adc
loope
mov
aas
movs
xor
push
and
daa
arpl
sub
inc
push
fsub
jne
call
push
sub
cwde
adc
clc
push
mov
cmp
rcl
ret
push
loope
icebp
cwde
test
das
aad
pop
mov
jns
pop
xchg
or
mov
sbb
push
and
hlt
psraw
jbe
and
sbb
xor
inc
xchg
repz
test
xchg
jle
lds
and
sbb
and
xchg
rcr
mov
inc
push
sbb
xor
jae
mov
dec
fadd
xchg
cs
test
mov
push
lods
sub
in
(bad)
dec
aam
adc
sbb
pop
mov
add
mov
jb
sub
jns
xchg
push
in
xchg
push
test
fld1
push
mov
div
jae
fimul
xor
mov
test
retf
cdq
(bad)
je
or
jecxz
adc
pop
push
xor
cmc
mov
mov
nop
enter
icebp
ins
xor
int
xor
movs
or
add
mov
mov
daa
adc
mov
pop
add
icebp
jbe
cdq
fst
mov
aad
and
not
pop
xchg
add
sbb
mov
or
mov
mov
call
mov
div
icebp
data16
int
mov
lock
cmc
into
xor
mov
xchg
and
stc
fucomp
int
push
dec
cmp
xor
aad
and
mov
jne
add
xchg
push
inc
jp
xor
(bad)
pusha
pop
popa
adc
mov
xchg
mov
ficom
and
adc
data16
xchg
mov
lods
xchg
fwait
mov
ss
mov
loope
and
rcr
xchg
or
imul
push
cs
vhaddps
add
clc
test
mov
push
push
xor
cmp
movs
movs
xchg
repz
push
jne
ret
rcr
xchg
xchg
dec
add
out
mov
in
shl
and
xchg
mov
add
push
mov
stos
scas
mov
inc
xchg
aam
adc
pop
push
in
dec
mov
push
pop
test
ins
cdq
push
stos
xchg
adc
add
sbb
sub
jo
dec
out
inc
and
sbb
mov
xor
ror
gs
fnstenv
lods
pminub
movs
pop
lods
sbb
addr16
xchg
pop
pop
mov
repz
adc
out
mov
xchg
xchg
and
mov
fwait
jno
cmp
jle
outs
repz
push
jne
pop
je
and
pop
fndisi(8087
add
dec
inc
mov
popa
jecxz
mul
mov
xchg
jecxz
pushf
fld
mov
stc
sbb
into
outs
push
sahf
xchg
push
or
imul
dec
and
pushf
sahf
push
retf
loopne
cmp
rcr
inc
cmp
movs
movs
xchg
repz
push
jne
ret
shl
or
xor
push
aam
rol
mov
es
mov
mov
add
xchg
rol
ror
scas
and
ss
add
(bad)
lea
cld
or
je
lods
pop
stc
xchg
inc
sub
dec
xchg
pop
dec
mov
(bad)
sub
(bad)
xor
xchg
mov
fucom
lods
aam
jge
pop
push
in
cmp
outs
add
sub
jno
les
add
sar
mov
or
cdq
push
fwait
mov
cmp
push
fstp
and
es
and
and
pop
rcr
pop
mov
imul
sbb
mov
sbb
dec
jmp
out
mov
ds
out
xchg
jb
es
popa
jecxz
jge
add
mov
xchg
push
push
arpl
in
shl
test
add
(bad)
inc
inc
jno
mov
xor
loop
push
(bad)
kmovb
and
inc
and
mov
pop
dec
jno
out
ret
scas
stos
lods
xchg
shl
lods
push
sub
cmp
jle
mov
sbb
imul
lods
or
ins
retf
jl
rcr
mov
and
sahf
mov
or
fadd
cld
mov
push
movs
mov
pop
fwait
sub
cmp
(bad)
out
jno
jo
mov
lea
in
and
and
lea
pop
mov
mov
or
sbb
in
(bad)
mov
sbb
and
and
jl
loopne
in
and
and
mov
add
and
clc
test
mov
pop
fwait
sub
dec
leave
(bad)
(bad)
jecxz
mov
jg
(bad)
cmc
bound
fld
mov
test
jl
outs
(bad)
sahf
cmp
imul
add
push
cmp
lods
and
fcomp
int3
sbb
cmp
pop
rol
and
sti
rcr
cmp
jle
ins
aas
popf
(bad)
lods
or
imul
cmp
pushf
stos
or
pop
jmp
clc
mov
jle
sub
cmp
lods
jnp
dec
add
test
popa
cdq
hlt
xchg
mov
add
(bad)
inc
inc
jno
ret
mov
or
retf
and
or
cs
lods
leave
int3
stos
sbb
popa
cmp
fld
push
stos
sbb
sbb
shl
fiadd
outs
xchg
and
out
imul
loop
push
movs
push
push
sti
shr
cmp
vpmaddwd
inc
xor
dec
jne
mov
mov
rcr
jge
outs
xchg
jo
jno
int3
out
mov
cmp
scas
out
jae
(bad)
mov
push
sub
cmc
daa
push
add
fcom
mov
jl
ds
jmp
jle
xchg
sub
jbe
imul
icebp
push
push
add
test
cs
and
es
popa
xlat
inc
test
adc
repnz
push
xor
jno
mov
rcr
or
sbb
in
jle
push
inc
ins
pop
sahf
ins
retf
mov
neg
mov
sub
test
push
aas
movs
ret
test
ret
scas
cmp
dec
and
pushf
push
xor
sti
rcr
test
and
out
mov
or
fstp
ins
inc
and
cmps
xchg
xchg
pop
dec
dec
adc
es
xchg
in
(bad)
xor
mov
push
jl
add
add
mov
pushf
fwait
mov
stos
xchg
xchg
jo
jno
inc
mov
fdivr
add
xchg
fucom
add
mov
pop
push
in
jns
jle
fcomp
xor
inc
inc
je
lods
xchg
xchg
(bad)
outs
pop
fndisi(8087
add
cmps
in
rol
in
mov
int3
in
repz
mov
push
ins
inc
jne
and
pushf
push
sub
xchg
xchg
sub
cmc
shl
rol
mov
call
inc
push
push
test
xchg
repz
mov
leave
sbb
scas
repz
jae
int
mov
imul
mov
test
mov
or
retf
pop
add
xor
loope
push
xchg
outs
xchg
popf
mov
out
mov
in
(bad)
xor
adc
ss
out
push
push
sti
rcr
mov
pop
popa
add
sbb
shr
test
and
int3
stos
loop
popa
cmp
or
push
shl
jns
cmps
(bad)
sub
test
rcr
cld
daa
push
cmp
retf
fld
out
cli
ins
push
push
sti
rcr
mov
pop
popa
add
stos
fcomp
ret
mov
jns
add
dec
data16
call
movs
fcom
mov
out
mov
bound
cmps
adc
shl
jmp
nop
fstp
sahf
dec
pusha
or
sbb
inc
adc
popf
jmp
push
and
xor
stc
sbb
pop
test
mov
jne
add
stos
jecxz
icebp
xchg
sub
scas
inc
fimul
popf
(bad)
cli
div
or
in
inc
sub
sub
data16
xor
fldcw
mov
lods
or
dec
inc
and
sti
shl
test
adc
or
sbb
dec
dec
sub
addr16
rcl
in
lds
lds
jno
add
inc
mov
lock
cs
mov
das
mov
in
(bad)
xor
pop
push
mov
out
xchg
push
arpl
or
pop
push
popa
dec
jb
movs
movs
xchg
push
and
and
xor
loope
iret
push
or
and
or
aad
inc
cmp
jnp
mov
xor
dec
xchg
push
mov
push
push
test
xor
cmc
daa
dec
es
and
imul
inc
mov
push
stc
sti
rcr
xor
cmc
daa
dec
into
mov
popa
bound
inc
mov
jne
rol
cmp
mov
(bad)
fcomp
and
sbb
sbb
xor
mov
jl
test
cmp
push
xlat
loope
out
ret
scas
sub
sbb
push
arpl
mov
mov
xchg
leave
repnz
xchg
arpl
jnp
mov
(bad)
sti
mov
out
push
arpl
ss
mov
jle
aad
jmp
sbb
push
mov
mov
dec
cmp
mov
outs
repz
sbb
and
dec
test
dec
in
iret
jmp
in
jnp
cmps
aad
inc
cmp
sbb
ret
and
xchg
xchg
arpl
jmp
xor
pop
jmp
sub
pop
loope
out
mov
shr
cmps
test
mov
jmp
jmp
sbb
ret
add
add
cmp
pushf
fwait
mov
fldcw
repz
or
out
out
imul
mov
fnstenv
pop
popf
scas
push
test
sub
add
out
xchg
xchg
out
outs
imul
mov
data16
sub
mov
xchg
sahf
es
inc
pusha
je
and
dec
inc
xor
jbe
cdq
pushf
fwait
mov
es
inc
fs
fld
pop
fndisi(8087
jmp
loope
cwde
(bad)
sbb
push
or
imul
retf
mov
jae
jb
mov
jmp
sbb
stos
xchg
jl
jecxz
jnp
jmp
xor
loope
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
aam
jo
jmp
fnstcw
mov
dec
mov
pop
xchg
gs
jle
push
arpl
fcmovne
scas
inc
inc
xor
int3
dec
xor
cwde
sbb
pop
mov
(bad)
adc
xor
or
push
cmc
ins
mov
mov
arpl
pop
push
mov
and
xor
(bad)
push
cmp
jbe
scas
cmp
cli
cmps
cli
xor
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
stc
jmp
push
mov
pop
cmp
pop
pop
pop
(bad)
jns
xor
and
adc
dec
jecxz
fstp
xor
sbb
nop
sub
xor
dec
call
or
dec
call
mov
test
adc
add
fcom
imul
mov
dec
call
leave
pop
inc
sbb
(bad)
int3
lods
in
aas
inc
sub
ds
pop
xor
inc
xor
sub
jno
jle
outs
sub
cmp
leave
(bad)
push
xchg
inc
xchg
inc
cmps
adc
or
jle
push
adc
mov
and
jno
inc
out
mov
xchg
inc
cmps
adc
ss
jbe
shl
and
jno
push
out
xchg
and
jno
loope
icebp
jbe
(bad)
rcl
adc
mov
and
jno
inc
in
xchg
or
mov
cmps
adc
mov
data16
push
mov
es
ss
(bad)
jo
inc
idiv
mov
cmps
adc
mov
inc
rcl
mov
(bad)
xchg
(bad)
arpl
jno
cdq
out
mov
add
jmp
jbe
shl
and
jno
push
out
xchg
and
out
jbe
inc
icebp
mov
scas
rcl
pop
es
ss
mov
add
push
imul
cmps
adc
hlt
jo
outs
xlat
sbb
or
(bad)
inc
out
jno
mov
xchg
mov
xchg
ja
gs
cmps
add
fiadd
jno
mov
jns
mov
movs
adc
into
shl
inc
push
mov
and
jae
inc
in
xchg
and
inc
shr
jbe
data16
add
push
push
into
inc
out
xchg
and
pop
call
scas
rcl
pop
es
ss
mov
inc
out
xchg
and
adc
push
add
jmp
test
xchg
shr
jnp
add
push
imul
mov
sti
push
add
jmp
and
inc
test
xchg
add
xor
jecxz
ror
shl
mov
es
sub
jno
mov
jns
mov
movs
adc
inc
stc
jg
ins
fstp
cmps
or
test
or
add
and
shl
inc
push
mov
and
jno
inc
mov
and
mov
xchg
ja
inc
add
mov
daa
xchg
shl
jns
dec
in
fisubr
dec
adc
add
inc
jbe
cdq
rcl
mov
and
test
xchg
and
ss
in
dec
(bad)
retw
retw
adc
mov
jns
outs
jmp
add
xor
inc
inc
icebp
mov
rcl
movs
add
(bad)
sahf
(bad)
jo
popa
scas
push
xchg
fiadd
adc
inc
jbe
cdq
icebp
into
mov
and
shl
dec
pop
call
adc
lds
adc
gs
and
inc
test
mov
push
xor
cmps
out
push
in
icebp
jo
outs
adc
cs
jno
jno
mov
and
adc
inc
cmc
jbe
fcompp
repnz
outs
(bad)
popa
cmp
inc
jecxz
sahf
lds
adc
shl
inc
push
mov
and
cmp
mov
xor
cmps
adc
div
gs
test
outs
test
or
push
xchg
fisub
adc
inc
cmc
jae
inc
add
mov
and
inc
test
xchg
and
out
test
(bad)
arpl
pop
test
sub
out
icebp
dec
xchg
popf
sub
jbe
inc
icebp
mov
shl
mov
and
jno
mov
jns
into
add
icebp
mov
scas
rcl
pop
es
ss
mov
add
push
imul
xchg
into
shl
mov
outs
test
or
jno
and
adc
inc
add
mov
outs
test
or
push
mov
xchg
dec
and
adc
inc
lock
add
jmp
jle
nop
test
or
push
xchg
fisub
xor
loope
push
push
add
jmp
sbb
jno
inc
mov
and
mov
xchg
push
add
jmp
test
xchg
shl
ja
dec
loopne
into
and
adc
shl
mov
daa
lahf
fldcw
jg
dec
repz
sub
mov
rcl
inc
into
ss
push
mov
and
ja
inc
out
push
mov
xchg
dec
add
div
pusha
fistp
mov
(bad)
jo
inc
out
xchg
xchg
into
add
lock
addr16
into
mov
and
shl
jbe
dec
in
jno
and
adc
gs
cmps
add
(bad)
popa
hlt
push
cmc
push
xor
sub
call
push
jecxz
cmc
xor
or
pop
(bad)
jae
mov
and
shr
mov
and
shl
jae
dec
jmp
call
pop
inc
jmp
or
cmp
jmp
add
fnstcw
dec
std
pop
out
loope
repz
arpl
xchg
sub
pop
mov
xchg
dec
add
push
jbe
rcl
movs
es
ss
mov
inc
mov
and
mov
movs
adc
into
shl
mov
and
or
push
xchg
and
scas
sbb
inc
icebp
mov
rcl
movs
es
ss
jne
inc
out
lahf
sub
add
push
ror
shl
mov
and
cli
dec
call
and
mul
jbe
cdq
shl
inc
push
mov
and
mov
add
push
imul
cmps
adc
rcr
into
and
jno
mov
jns
into
add
ror
shl
sub
outs
test
or
add
and
icebp
into
mov
and
xlat
fs
jbe
inc
out
jle
xor
push
inc
jbe
cdq
icebp
into
mov
es
sub
jno
mov
xchg
xchg
and
xlat
ss
push
mov
jle
mov
popa
(bad)
mov
mov
jns
into
add
lock
add
jmp
jle
adc
inc
out
into
and
adc
shl
inc
push
mov
mov
out
test
mov
xchg
dec
add
inc
jbe
cdq
icebp
into
mov
fldcw
fs
test
into
and
adc
add
jmp
and
scas
xchg
and
sbb
out
icebp
jbe
inc
add
mov
outs
test
or
push
xchg
add
xor
shr
jbe
data16
into
mov
es
aad
fidivr
popa
scas
push
xchg
fidivr
mov
pop
adc
out
clc
jl
cdq
fcomp
pop
push
mov
shl
test
xchg
and
adc
inc
repz
outs
shl
inc
push
mov
and
ja
inc
out
pop
xchg
sub
cmps
out
jbe
inc
icebp
mov
scas
rcl
pop
push
mov
and
shl
push
into
inc
out
xchg
add
xor
inc
inc
icebp
mov
addr16
into
mov
es
sub
jno
mov
xor
and
rcl
sub
nop
xlat
(bad)
lds
in
mov
xchg
dec
add
icebp
jbe
data16
es
ss
mov
add
push
imul
xchg
into
shl
inc
push
mov
mov
out
test
xchg
and
adc
out
icebp
jbe
data16
add
xor
retf
popa
scas
push
xchg
fisub
adc
inc
icebp
mov
rcr
mov
cs
(bad)
sahf
(bad)
jo
inc
in
nop
cmp
or
loopne
shl
into
mov
es
sub
jae
inc
jecxz
xchg
sub
adc
data16
add
xor
retf
dec
test
xchg
adc
add
inc
jbe
cdq
rcl
mov
and
sti
dec
jmp
and
push
loope
ror
shl
mov
and
cli
dec
call
and
loope
push
push
add
jmp
and
shl
jnp
dec
jmp
cdq
xor
adc
shr
mov
and
shl
jns
popa
scas
jmp
mov
mov
clc
jl
push
sbb
movs
push
and
jno
mov
jns
into
add
bnd
pusha
(bad)
ss
push
mov
and
ja
inc
loop
into
and
adc
inc
ror
shl
sub
mov
popa
(bad)
mov
inc
out
mov
xchg
dec
and
adc
inc
ror
shl
mov
es
sub
sbb
and
adc
shl
mov
es
sub
inc
test
into
and
adc
rcr
leave
jle
xchg
xlat
cmp
inc
out
xchg
and
adc
out
icebp
jbe
data16
inc
push
mov
and
inc
test
mov
xchg
dec
add
icebp
push
add
jmp
sbb
mov
add
push
imul
pop
adc
inc
icebp
mov
inc
add
mov
outs
(bad)
inc
out
jno
mov
xchg
dec
and
adc
mov
cs
push
mov
mov
(bad)
jno
inc
loop
nop
and
adc
gs
into
mov
cs
(bad)
sahf
(bad)
push
into
inc
out
xchg
add
xor
loop
hlt
jo
pusha
icebp
into
mov
push
adc
inc
in
xchg
daa
cmps
inc
mov
pop
adc
inc
lock
fst
mov
cs
(bad)
sahf
out
test
into
and
adc
inc
repz
add
jmp
test
adc
inc
in
xchg
add
xor
jecxz
repz
outs
icebp
into
mov
es
sub
sbb
and
sbb
dec
ror
shl
inc
push
mov
mov
out
test
mov
xchg
dec
and
adc
inc
ror
shl
inc
push
mov
and
jo
inc
out
popf
sub
cmps
adc
ds
xchg
into
and
jno
popa
scas
push
xchg
fidivr
xchg
and
rcl
mov
fst
hlt
inc
in
xchg
and
xor
loope
push
push
add
jmp
mov
out
test
mov
xchg
dec
add
icebp
mov
inc
add
mov
cs
(bad)
sahf
out
test
into
and
adc
ds
into
mov
and
rol
jno
mov
jns
into
add
icebp
jb
data16
ss
push
mov
jle
xchg
aad
ret
ja
inc
out
jno
and
xor
loope
push
push
add
jmp
jle
adc
inc
out
xchg
add
xor
loope
push
push
add
jmp
test
adc
inc
out
mov
xchg
dec
add
icebp
jno
scas
rcl
pop
push
mov
and
shl
jb
dec
jmp
(bad)
cmps
adc
out
icebp
jbe
inc
add
mov
and
inc
test
into
and
adc
data16
es
ss
push
into
inc
out
mov
xchg
dec
add
icebp
push
add
jmp
jle
nop
aam
ret
inc
out
push
pushf
daa
mov
mov
inc
inc
icebp
mov
inc
add
mov
outs
test
or
add
add
fnsave
data16
bound
es
(bad)
dec
mov
or
xor
pop
adc
call
sub
add
push
iret
adc
cmp
je
adc
xor
(bad)
aas
cld
sti
test
add
sti
outs
pop
les
js
mov
leave
xor
fadd
ins
aas
xchg
aaa
out
dec
cmp
pop
mov
xchg
lds
cmps
push
sub
loopne
rcl
cs
imul
inc
and
loopne
adc
adc
mov
mov
aad
std
pop
cmc
push
jmp
add
inc
repnz
ret
xor
or
adc
xchg
test
es
mov
aad
shl
rcl
xor
and
loop
cld
xor
movs
inc
repz
lds
pusha
iret
push
cmp
or
jno
es
(bad)
push
cmps
and
dec
repnz
rol
adc
xchg
mov
or
lds
inc
in
or
add
ror
push
in
icebp
jne
xchg
add
mov
into
jb
inc
(bad)
push
fdivr
es
in
retf
mov
data16
jle
xchg
xor
out
les
out
arpl
and
aam
lds
xor
and
push
aad
fadd
push
idiv
add
add
jb
xor
jae
jge
add
js
inc
ret
jbe
inc
rcl
push
mov
je
inc
and
xor
out
sub
push
lds
dec
loop
and
xchg
and
push
repnz
mov
jo
mov
es
bound
shr
or
arpl
cmp
out
aaa
mov
adc
fidiv
sbb
mov
mov
xchg
jae
pusha
test
pop
loop
and
movzx
inc
rol
push
rep
inc
cmps
add
movs
inc
mov
xor
and
jb
jbe
jns
mov
cdq
ss
xor
in
les
jo
mov
cmp
pop
rol
cmp
cs
xchg
adc
jne
jle
mov
inc
movs
sub
jne
inc
rcr
movs
xor
xor
cs
adc
and
jo
xchg
pop
icebp
push
mov
mov
data16
xchg
movs
or
arpl
gs
push
imul
inc
hlt
or
scas
mov
sub
jae
dec
cdq
js
xor
push
test
inc
repnz
jecxz
and
xor
push
(bad)
je
inc
cdq
bound
xchg
push
aad
mov
shl
push
rcl
das
mov
test
ret
bound
mov
mov
and
cmc
imul
(bad)
sbb
dec
(bad)
jno
je
push
add
xor
inc
test
inc
repnz
jecxz
mov
or
push
and
mov
pop
rol
and
cmps
outs
inc
inc
not
cs
ss
add
inc
icebp
or
push
lock
add
and
dec
out
inc
imul
push
fs
scas
xor
inc
clc
push
loopne
repnz
push
fldcw
je
jno
outs
aad
adc
jns
and
inc
icebp
push
fisub
xchg
pop
mov
mov
cmps
push
loop
mov
(bad)
push
pop
test
adc
add
icebp
data16
add
xor
adc
fdiv
inc
aad
ds
push
sahf
rol
shl
inc
cmc
jbe
movs
popa
mov
lahf
xchg
(bad)
inc
mov
out
cmps
imul
sar
js
jbe
ds
shr
inc
sahf
adc
add
push
pop
mov
pop
mov
inc
in
push
out
popa
movs
sbb
ffreep
call
bound
movs
data16
pop
in
jmp
mov
mov
jecxz
xchg
mov
cmps
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
cmp
test
dec
xchg
jae
inc
enter
pop
mov
xor
js
loopne
or
push
rcr
jnp
and
jo
mov
or
xchg
fdivr
and
stos
mov
clc
fwait
pusha
add
sti
inc
mov
pop
fwait
les
movs
fcmovnb
xchg
jg
(bad)
push
iret
pushf
ja
lahf
ins
out
scas
cmp
movs
aas
dec
xchg
lods
daa
xor
cld
pop
dec
aam
sbb
inc
pop
in
addr16
das
mov
pop
adc
pop
aaa
test
shr
dec
sub
add
shl
cwde
(bad)
mov
js
add
nop
repz
fwait
loopne
enter
mov
or
sbb
and
jmp
adc
jnp
ret
test
adc
scas
int
mov
push
dec
scas
mov
push
xchg
into
pop
(bad)
movs
jle
cmps
jne
jge
lds
(bad)
push
mov
out
cs
xchg
dec
cmc
outs
std
ss
fisubr
xchg
xchg
cld
jmp
ins
movs
cmps
(bad)
mov
repz
cmps
and
ins
aas
mov
sbb
test
dec
lahf
aam
mov
jg
xchg
xchg
or
xchg
out
iret
movs
aaa
in
mov
add
int3
pop
push
cmps
cmp
in
sub
je
fsubr
mov
xor
hlt
or
mov
jo
clc
jnp
ret
sub
nop
jae
fwait
pusha
jecxz
stos
xor
cmp
push
(bad)
adc
add
dec
adc
pop
sbb
arpl
sub
add
mov
dec
or
neg
jbe
pop
sub
xchg
in
dec
(bad)
adc
sahf
ins
es
outs
cmp
xchg
push
popf
test
xor
push
gs
pop
mov
push
in
cmps
jne
mov
(bad)
cmp
mov
ins
ds
sbb
sahf
aad
mov
jle
xchg
inc
xchg
or
into
movs
ss
mov
add
cmps
cmp
(bad)
jne
(bad)
adc
xor
mov
fcom
pop
push
cmps
cmp
in
sub
je
fsubr
adc
cld
dec
and
ins
aas
mov
sbb
test
dec
lahf
aam
mov
jg
xchg
xchg
or
xchg
out
iret
movs
aaa
in
mov
inc
sub
mov
call
or
xchg
sbb
inc
mov
js
pusha
add
dec
adc
pop
cmp
arpl
sub
cmp
inc
or
shl
jmp
mov
sbb
or
push
fdivr
mov
add
add
xchg
icebp
pop
cdq
loop
retf
sar
or
sbb
and
jmp
add
stos
leave
adc
sbb
dec
sub
add
shl
call
pop
adc
adc
out
cmp
xchg
popf
jbe
pop
lods
out
scas
std
push
in
dec
(bad)
xchg
dec
fnsave
cmc
outs
mov
push
aad
sbb
data16
jge
gs
adc
je
push
xchg
hlt
das
in
sub
xchg
out
dec
les
dec
fbstp
pushf
outs
and
ins
aas
aam
cld
je
inc
fsubr
adc
mov
pop
mov
sbb
movs
ja
mov
add
dec
adc
adc
mov
mov
xor
jp
loop
or
push
rcr
jns
and
jb
mov
or
xchg
fidivr
and
test
bound
mov
push
call
mov
fisub
loope
mov
mov
ret
add
mov
fwait
pop
and
sti
js
shr
xchg
jo
cwde
arpl
dec
test
push
mov
or
mov
fsub
adc
add
dec
adc
pop
sbb
pusha
retf
or
add
sbb
(bad)
leave
sub
add
mov
cdq
pop
and
stc
jp
ret
xchg
jb
call
mov
or
mov
fisub
adc
add
and
je
movs
cmp
sub
push
call
gs
(bad)
mov
popfw
jns
jns
enter
sub
cmp
cmp
xlat
pop
cmp
call
retf
jbe
xor
fsubr
push
or
sub
jo
inc
or
jmp
adc
aas
sbb
sahf
push
out
out
ins
aad
cmc
mov
mov
push
mov
repz
xchg
(bad)
std
outs
adc
ins
adc
aad
out
push
cli
inc
mov
xor
pop
scas
jno
jnp
jae
xchg
cs
sbb
int3
into
xchg
or
xchg
or
pop
sbb
push
cdq
ret
or
and
mov
aam
rcr
pop
mov
bsf
xor
cmp
dec
std
pop
and
popf
xchg
shl
int3
das
in
(bad)
inc
xor
jns
pop
leave
add
shl
mov
mov
es
cli
inc
jecxz
sub
adc
fst
in
jns
push
out
lods
daa
pop
pop
out
pop
jmp
dec
out
mov
sub
push
loopne
pop
in
xchg
mov
sub
ins
in
lds
pop
in
mov
mov
cmp
pop
loope
ret
jge
xchg
cmp
sbb
ins
fild
inc
mul
sub
(bad)
popa
(bad)
pusha
xor
mov
jl
inc
(bad)
es
mov
mov
aaa
repz
shl
shl
xor
add
in
push
xchg
lods
sbb
push
stc
dec
inc
fidiv
sub
or
enter
add
and
clc
inc
cld
sar
jno
loope
cwde
or
mov
out
loope
add
push
in
loopne
aam
(bad)
adc
sub
jo
les
dec
jmp
out
lock
jecxz
(bad)
jle
jne
cwde
xor
dec
(bad)
push
std
dec
xchg
mov
mov
cmp
je
push
leave
add
jp
xchg
das
xchg
or
outs
les
dec
jmp
xchg
call
ins
xlat
jno
sub
sbb
push
(bad)
jge
div
adc
jg
dec
mov
adc
mov
xchg
iret
outs
rcl
fidivr
neg
shl
dec
das
in
aas
iret
push
mov
enter
out
es
mov
or
inc
mov
retf
push
adc
test
fcom
push
mov
pop
stos
push
fdiv
out
inc
mov
xchg
es
shl
(bad)
arpl
inc
jns
jecxz
shrd
inc
push
jg
je
fs
pop
shl
mov
mov
outs
rcl
inc
fst
or
adc
les
retf
lods
and
mov
int
lahf
les
mov
lea
dec
push
fidivr
je
sub
xchg
xor
fdivr
pop
imul
push
xchg
and
fidiv
adc
loope
retf
adc
lds
inc
mov
(bad)
and
in
shr
jnp
loope
sahf
sbb
adc
mov
scas
push
(bad)
popa
cmp
dec
cmps
pop
ret
jb
xor
adc
les
out
push
hlt
mov
mov
ss
xchg
ret
and
inc
jbe
push
push
inc
dec
sbb
jcxz
add
push
mov
inc
xchg
(bad)
les
xchg
sub
js
rcr
push
mov
das
out
(bad)
and
xor
fldenv
dec
or
dec
mov
jb
gs
and
mov
movs
jno
dec
stos
jge
pusha
les
mov
sbb
fisttp
rol
mov
cs
repz
cmc
inc
loope
(bad)
jo
mov
cwde
push
mov
imul
out
dec
out
add
cmp
push
hlt
xor
(bad)
bound
iret
sub
into
inc
fcomp
push
aam
inc
mov
push
in
jmp
xchg
adc
inc
icebp
jbe
data16
lds
inc
mov
test
push
pushf
and
push
mov
aam
adc
and
jne
je
push
in
hlt
(bad)
adc
jmp
cmps
inc
les
pop
lea
mov
pusha
xchg
push
push
test
mul
and
and
jge
ins
and
(bad)
ss
push
in
mov
push
loope
jns
jns
push
out
adc
scas
sbb
inc
(bad)
push
bnd
je
nop
sub
xor
add
add
inc
jmp
iret
xor
sbb
dec
ret
inc
lds
pop
mov
mov
xchg
sbb
inc
in
les
jle
mov
mov
js
push
ret
push
or
lahf
xor
and
push
hlt
pop
frstor
push
xchg
sub
jo
rcl
addr16
jno
sub
xor
jae
arpl
xor
pop
movs
or
jae
arpl
mov
and
adc
outs
aad
rcr
aas
xchg
lods
sbb
jne
inc
jmp
not
aam
loopne
hlt
inc
lds
arpl
shl
adc
xchg
dec
fiadd
push
xchg
(bad)
add
push
cmc
dec
rcr
sub
adc
cmps
push
ret
inc
out
push
mov
xchg
sub
pop
fsub
daa
xor
add
push
out
(bad)
mov
test
jno
and
inc
les
xchg
inc
cmp
adc
js
imul
mov
adc
and
rcl
push
add
mov
mov
push
in
ret
mov
xchg
xor
push
fcom
bound
loope
icebp
ss
sub
dec
in
arpl
movs
add
xchg
ret
dec
cmps
inc
mov
enter
xor
sbb
jb
inc
repz
mov
popa
mov
xchg
cs
jno
inc
jmp
gs
xor
mov
mov
popa
out
jo
or
mov
mov
xor
add
icebp
js
aaa
out
mov
jecxz
add
mov
lds
xchg
ja
jg
shr
add
add
and
mov
jno
jbe
(bad)
xlat
push
ret
and
mov
mov
pop
xlat
inc
jmp
das
xchg
push
stc
jb
add
outs
sahf
jg
xchg
retw
jbe
adc
(bad)
jno
outs
loope
popa
cmps
and
and
xor
out
loopne
cmp
mov
pop
test
xchg
and
clc
inc
ret
jne
ins
cmp
adc
jle
dec
fsubr
jns
scas
or
cmp
xchg
fisub
xchg
daa
rcr
pop
mov
push
shr
push
cli
movs
or
push
jmp
jecxz
cli
pop
(bad)
dec
or
add
pop
mov
mov
push
outs
(bad)
xor
fisub
jb
xchg
sub
jg
je
dec
jns
(bad)
(bad)
adc
xchg
and
or
mov
xchg
xor
add
sub
inc
loopne
imul
xor
adc
jne
js
shl
movs
adc
les
sbb
es
das
xchg
jno
inc
hlt
or
stc
adc
shl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
les
inc
out
pop
cwde
cmp
adc
cld
dec
jmp
mov
xchg
sahf
popa
ret
inc
loop
xchg
and
xor
cmc
outs
shl
movs
pop
mov
cwde
es
iret
popa
ret
inc
call
cmp
or
pop
icebp
jb
data16
mov
das
xchg
sar
jne
and
fnstenv
bound
push
and
mov
mov
popf
repnz
loop
shr
and
adc
add
sub
jne
adc
out
xlat
jo
push
mov
push
mov
popa
fild
pop
fsub
mov
and
jg
ins
rol
mov
cmp
in
inc
cli
pusha
rol
mov
mov
mov
mov
pop
mov
jecxz
cmp
sub
inc
les
paddusb
add
movs
imul
test
ds
or
repz
and
es
leave
jbe
shl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
sbb
jmp
inc
rcl
mov
mov
adc
test
xchg
mov
mov
mov
mov
aas
and
mov
cmp
out
xchg
dec
ins
xlat
fisttp
cmp
leave
jle
cmps
dec
sahf
cmc
mov
js
scas
or
sub
jno
mov
cs
adc
pop
inc
mov
(bad)
jns
lahf
and
push
xchg
dec
push
cmp
stc
adc
std
sahf
daa
push
fistp
sbb
fisubr
fisttp
push
mov
and
inc
cwde
adc
dec
xchg
(bad)
mov
iret
sub
cmc
cmps
out
add
pop
xchg
jmp
in
mov
add
ret
xchg
sub
out
test
ds
dec
and
mov
mov
xchg
mov
cmps
adc
inc
icebp
jbe
cdq
das
out
(bad)
xor
sahf
(bad)
jns
mov
aas
jmp
aad
repnz
dec
mov
push
mov
iret
sbb
(bad)
push
cmp
test
loop
test
xchg
out
and
inc
ret
mov
push
mov
adc
mov
inc
jp
mov
mov
mov
mov
push
loopne
repz
hlt
jae
jo
inc
push
xor
mov
into
xor
imul
js
arpl
mov
outs
movs
inc
mov
cwde
xor
push
xchg
test
enter
inc
icebp
jbe
outs
rcl
cld
stc
add
xchg
(bad)
push
cmp
test
cmp
fs
push
adc
popf
add
push
rcl
xchg
stc
fbstp
and
stc
adc
repz
cmp
cdq
mov
adc
xor
shl
push
jmp
pop
mov
and
add
popa
loope
fisttp
pop
(bad)
jb
aas
push
jmp
xor
or
es
fsub
mov
cmp
inc
out
pop
sahf
and
xor
(bad)
xor
(bad)
push
or
es
sbb
(bad)
adc
cli
inc
xchg
hlt
push
icebp
jbe
jge
push
mov
inc
hlt
(bad)
popa
stc
cwde
mov
fdivp
pop
(bad)
jno
adc
cmp
jbe
pushf
call
int
push
clc
(bad)
popa
mov
inc
imul
iret
and
je
add
jbe
jmp
in
mov
add
jno
dec
mov
xchg
sub
push
push
out
push
jbe
push
cs
push
mov
jle
xchg
(bad)
imul
test
(bad)
xor
xlat
and
xchg
pop
xchg
data16
mov
imul
inc
out
xchg
and
out
add
adc
and
or
push
repz
ret
je
jb
xchg
cmp
mov
dec
not
mov
aaa
nop
cmp
push
icebp
dec
ret
ja
jp
cdq
cmp
popa
fnstcw
dec
not
mov
ss
cmp
pop
clc
dec
retf
jl
cdq
cmp
or
jp
dec
stc
pop
loope
sbb
ds
pop
dec
js
jp
fwait
cmp
or
sbb
ret
dec
out
test
ds
rcl
mov
jmp
add
adc
and
xor
inc
repz
into
dec
aad
call
(bad)
cmp
push
jo
and
movs
arpl
jle
jns
push
out
pop
mov
xor
daa
loopne
lock
sti
ja
and
add
jo
outs
not
mov
cmp
lock
out
ja
and
add
jo
outs
not
mov
ds
daa
loopne
lock
out
ja
and
or
jo
outs
not
mov
cmp
daa
loopne
lock
out
ja
and
or
jo
push
push
mov
mov
xchg
es
icebp
dec
call
popf
cmp
popa
(bad)
jno
push
push
mov
das
loope
icebp
dec
call
sahf
cmp
popa
(bad)
jno
push
not
mov
ss
sub
push
icebp
dec
aad
shl
xchg
xor
popa
(bad)
jno
push
not
mov
ds
es
icebp
inc
aad
fisubr
cdq
cmp
outs
fnstcw
push
stc
pop
jmp
mov
cdq
sub
pop
dec
jns
imul
mov
jle
push
stc
pop
jmp
mov
cdq
and
fidivr
imul
mov
jle
pop
clc
pop
call
(bad)
aas
cdq
sub
pop
dec
js
push
movsx
test
fdivr
pop
clc
pop
call
mov
call
js
push
or
jg
pop
clc
pop
call
(bad)
cmp
inc
aam
fild
cwde
aas
mov
mov
jg
pop
std
pop
jmp
popf
sub
pop
cli
pop
leave
imul
sub
sbb
dec
call
scas
sbb
dec
in
and
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
sbb
leave
jle
outs
test
inc
out
pop
mov
or
jb
repz
xchg
and
cmp
push
out
clc
adc
fbld
pop
out
push
(bad)
js
lds
movs
mov
shl
inc
out
add
cdq
sbb
pop
jmp
cmps
sub
sbb
or
jl
outs
jmp
mov
push
mov
sub
dec
leave
jle
outs
sub
out
and
js
fistp
dec
xchg
xchg
sub
cmp
call
jg
xchg
test
ds
cs
pop
test
jbe
rcl
add
jo
inc
out
pop
mov
daa
xchg
push
jecxz
repz
rcl
movs
adc
test
mov
and
push
mov
inc
and
movs
adc
(bad)
lds
shl
cmp
mov
and
xchg
pop
dec
mov
scas
sbb
push
popa
mov
add
call
mov
add
iret
js
in
pop
adc
into
aas
mov
call
mov
popf
lea
pop
fldcw
jle
icebp
fs
mov
sbb
shl
xchg
jnp
mov
outs
leave
jle
clc
pop
out
cmp
sbb
inc
xchg
ds
jne
gs
adc
movs
and
push
in
jle
lds
jle
mov
jne
gs
push
and
hlt
push
in
jle
dec
sub
mov
shl
add
push
sub
dec
cli
pop
jmp
pushf
sub
jp
push
jae
arpl
mov
stos
sub
cli
pop
jmp
popf
sub
jge
ins
jmp
lods
sub
pop
in
imul
int3
mov
sub
sbb
enter
outs
jmp
mov
cmp
dec
(bad)
pop
out
imul
cdq
cs
inc
out
(bad)
popa
(bad)
jno
and
cs
shl
push
loopne
lock
cmps
adc
and
adc
inc
icebp
jbe
rcl
mov
xchg
call
jg
outs
test
mov
das
push
minps
sub
sbb
enter
test
aad
dec
pop
cwde
das
push
call
sub
sbb
add
push
mov
cs
pop
out
sub
rcl
add
jno
inc
out
push
mov
es
push
loope
icebp
jbe
rcl
add
push
in
out
pop
mov
daa
nop
push
loopne
lock
rcl
xor
arpl
jae
inc
in
adc
add
xor
and
push
jecxz
repz
rcl
movs
adc
arpl
jae
inc
in
adc
add
xor
inc
repz
rcl
movs
adc
arpl
jae
inc
in
adc
add
xor
loop
icebp
je
rcl
movs
adc
(bad)
les
mov
mul
push
jecxz
bnd
rcl
xchg
xor
inc
repz
out
fld
push
adc
add
xchg
push
in
icebp
jecxz
repnz
add
mov
je
dec
out
pop
push
test
mov
sbb
push
lahf
sub
sbb
push
js
xchg
xor
cwde
pop
call
outs
fstp
mov
dec
rcl
pop
pop
test
cs
pop
call
(bad)
sub
sbb
imul
pop
pop
test
mov
and
dec
push
shl
fcomp
or
ja
jmp
or
sahf
sub
pop
call
ins
fistp
or
fisubr
fistp
jecxz
sbb
or
cmp
dec
clc
(bad)
outs
(bad)
enter
sahf
sbb
leave
jle
dec
call
mov
leave
inc
hlt
inc
(bad)
cmp
mov
cmps
pop
pop
fldcw
jp
not
mov
cwde
sub
addr16
imul
add
jno
into
dec
call
mov
pop
out
dec
cli
iret
jg
imul
push
test
jle
push
test
push
mov
mov
dec
pushf
into
jbe
xchg
xchg
and
jne
jg
(bad)
pop
inc
pop
(bad)
mov
test
push
in
aad
ret
xchg
and
sbb
ret
into
dec
push
cmc
inc
add
xor
loopne
jg
into
sub
(bad)
add
out
push
repnz
add
cwde
mov
stc
dec
enter
xor
add
jne
pusha
dec
(bad)
pop
fild
mov
test
push
in
aam
lds
mov
jns
dec
pop
repz
add
xchg
push
loopne
jle
outs
sub
mov
shl
jmp
movs
mov
cdq
das
jmp
fstp
lea
popf
sub
jp
dec
(bad)
pop
out
test
fwait
cmp
dec
sti
pop
jmp
popf
sub
pop
in
in
pop
cld
dec
or
call
outs
fdivr
(bad)
cmp
int
(bad)
pop
std
dec
or
call
ins
fidivr
lea
popf
sub
jge
ins
jmp
lods
sub
pop
in
imul
fwait
sub
sbb
or
jl
ins
jmp
sti
dec
or
mov
pop
out
push
aas
cwde
das
test
mov
ins
push
pop
clc
dec
or
cmp
push
aas
cwde
das
sub
mov
outs
jmp
mov
cmp
int
jns
mov
cdq
cs
jle
outs
jmp
mov
cmp
push
fidivr
mov
cmps
cs
inc
ftst
dec
jmp
push
mov
rcl
inc
icebp
mov
dec
mov
mov
out
(bad)
popa
(bad)
jo
and
pop
mov
repnz
and
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
mov
out
sub
sbb
enter
test
mov
in
test
call
sub
sbb
enter
test
mov
les
call
sub
sbb
enter
test
mov
jbe
push
aad
dec
(bad)
pop
out
sub
sbb
leave
jle
outs
test
ds
and
(bad)
pop
out
sub
sbb
leave
jle
outs
test
ds
fild
js
dec
(bad)
pop
out
sub
sbb
leave
jle
outs
test
ds
cs
js
and
icebp
jbe
rcl
add
jno
inc
out
pusha
jg
mov
and
icebp
jbe
rcl
add
jno
inc
out
imul
nop
push
loopne
lock
rcl
xor
pusha
(bad)
jo
inc
out
pop
test
daa
nop
push
loopne
lock
rcl
xor
pusha
(bad)
jo
inc
out
pop
cmps
add
xor
and
push
jecxz
repz
rcl
movs
adc
arpl
jae
inc
in
adc
add
xor
and
push
jecxz
repz
rcl
movs
adc
arpl
jae
inc
in
adc
add
xor
and
push
jecxz
repz
rcl
movs
adc
arpl
jae
inc
in
adc
add
xor
and
push
jecxz
lock
rcl
add
hlt
inc
in
adc
add
xor
and
push
jecxz
std
push
out
div
jbe
adc
arpl
jae
inc
in
adc
add
xchg
push
loop
fdivr
dec
out
pop
pop
test
mov
aad
lds
inc
in
adc
and
in
hlt
inc
add
adc
and
jb
aad
lds
inc
in
adc
and
in
hlt
inc
add
adc
and
aas
cmp
cmc
inc
in
adc
xchg
xchg
push
out
ret
loopne
lock
add
xor
icebp
inc
loope
adc
das
cwde
pop
call
dec
mov
ds
push
out
pop
pop
test
mov
pop
call
stc
jb
mov
cmp
dec
pop
pop
test
mov
pop
call
(bad)
jo
or
pop
push
out
pop
pop
lods
(bad)
aas
mov
cwde
pop
call
les
and
and
iret
js
dec
out
pop
pop
lods
(bad)
aas
mov
cwde
pop
call
les
sub
mov
sbb
out
pop
pop
lods
(bad)
aas
mov
cwde
pop
call
lds
(bad)
cmp
adc
js
dec
out
pop
pop
lods
(bad)
aas
mov
cwde
pop
call
into
jp
sub
mov
dec
pop
pop
lods
(bad)
aas
mov
cwde
pop
call
into
jbe
sub
mov
dec
pop
pop
lods
or
call
leave
jge
sub
mov
std
dec
in
pop
sbb
mov
sahf
pop
out
dec
(bad)
fdiv
jg
pop
cli
sub
mov
mov
stc
dec
jmp
mov
pop
out
dec
mov
(bad)
jle
aam
stos
add
push
mov
stc
dec
jmp
mov
pop
out
dec
leave
ret
jb
bound
xchg
xor
imul
jle
dec
jmp
mov
pop
out
dec
leave
shl
and
adc
stc
dec
jmp
mov
pop
out
dec
leave
shl
and
cs
outs
leave
jle
dec
jmp
mov
pop
out
dec
leave
int
(bad)
xchg
cmp
pop
fldcw
jle
dec
jmp
mov
pop
out
dec
leave
leave
jle
outs
es
cmp
or
leave
jle
dec
jmp
mov
inc
icebp
push
leave
leave
jle
addr16
jmp
adc
(bad)
jno
popa
out
test
adc
inc
cmc
push
leave
leave
jle
pusha
pushf
xor
ffree
jne
gs
repnz
add
xor
leave
jle
pusha
xchg
sbb
loop
repnz
add
xor
leave
jle
pusha
xchg
sbb
push
repnz
add
xor
leave
jle
pusha
xchg
sbb
loop
repnz
add
xor
leave
jle
pusha
xchg
sbb
loop
repnz
add
xor
jle
pusha
cmp
or
shl
repz
add
xor
jle
imul
sbb
jecxz
repz
add
xor
jle
outs
sub
sbb
jecxz
repz
add
xor
jle
outs
sub
sbb
ret
fs
repz
add
cmp
dec
sti
pop
retf
fldcw
sahf
cmp
int3
jnp
imul
cld
dec
or
sbb
mov
pop
int
jle
outs
sub
push
push
int
(bad)
pop
std
dec
or
call
leave
jle
outs
sub
mov
push
pop
std
dec
or
call
cmps
adc
cmc
stos
or
(bad)
pop
std
dec
or
call
shl
test
xchg
and
jp
push
pop
std
dec
or
call
ins
fidivr
lea
popf
sub
jp
push
pop
std
dec
or
popf
cmp
push
jp
mov
mov
ins
jmp
lods
sub
pop
in
push
jp
mov
mov
ins
jmp
lods
sub
in
imul
int3
mov
sub
sbb
or
jl
ins
jmp
sti
dec
or
cmp
fdivr
mov
sub
sbb
or
jl
ins
jmp
sti
dec
or
scas
sub
pop
out
push
aas
cwde
das
test
mov
outs
call
pop
sbb
dec
call
push
aas
cwde
das
test
mov
outs
call
cmp
cmp
imul
cdq
cs
jle
outs
jmp
adc
scas
sub
pop
out
imul
cdq
cs
jle
outs
jmp
push
(bad)
scas
sub
pop
out
imul
cdq
cs
jle
outs
jmp
push
sub
shl
loope
icebp
mov
cmps
adc
inc
out
(bad)
popa
(bad)
dec
mov
mov
rcl
inc
icebp
mov
cmps
adc
inc
out
(bad)
popa
stc
mov
push
mov
mov
shl
loopne
lock
cmps
adc
inc
out
(bad)
pop
sub
push
stos
push
add
ja
rcl
inc
lock
cmps
adc
inc
out
shl
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
jbe
rcl
mov
es
(bad)
popa
(bad)
jno
inc
out
xchg
and
adc
inc
icebp
adc
addr16
icebp
sbb
mov
test
les
es
dec
out
pop
fnstenv
popa
das
xlat
jb
adc
pop
test
les
inc
in
sbb
mov
mov
sub
adc
and
jb
nop
xor
add
pop
mov
or
pop
clc
jmp
outs
in
loop
xlat
mov
push
xor
and
push
test
add
aaa
mov
ins
cwde
gs
inc
(bad)
add
popa
out
test
and
pop
out
ds
and
je
sub
cmps
jecxz
outs
stos
lods
gs
not
adc
bnd
scas
jno
icebp
push
test
test
ret
jecxz
mov
or
add
hlt
fbstp
es
cmp
xchg
dec
lahf
pop
scas
inc
outs
cdq
jno
popa
out
pmulhw
xchg
shr
xchg
or
xchg
lea
movs
adc
not
add
mov
test
push
test
jnp
jno
pushf
mov
pop
es
cmps
jbe
repz
lds
dec
in
mov
mov
sbb
push
loope
and
imul
std
int3
pop
mov
cmp
or
dec
hlt
add
ret
rol
(bad)
repz
push
lods
outs
mov
jnp
xor
or
pushf
arpl
retf
or
(bad)
adc
mov
mov
xchg
pop
in
xchg
push
loope
and
xor
xchg
and
(bad)
je
push
out
mov
int3
es
pop
fst
mov
cmp
loope
repz
push
adc
add
daa
les
push
jecxz
shl
jl
ret
dec
or
inc
xchg
adc
add
mov
mov
movs
and
xor
push
cmps
pop
xchg
and
sbb
pop
nop
adc
add
inc
mov
out
(bad)
daa
xchg
dec
jmp
xchg
pusha
ret
jne
xchg
sub
jo
je
je
dec
mov
push
mov
call
push
mov
sbb
rol
sbb
push
loopne
loopne
std
mov
cs
xor
inc
movs
push
pop
xchg
das
int3
pop
scas
das
stos
data16
pop
in
(bad)
mov
mov
jae
dec
out
push
xchg
xchg
pop
xchg
xor
mov
sub
mov
mov
xor
out
ret
imul
mov
mov
aam
rcr
push
std
mov
test
adc
cmp
inc
je
sub
pop
mov
cwde
push
call
(bad)
fcom
or
js
dec
loop
adc
and
jb
(bad)
fcom
or
js
dec
loop
adc
and
jb
(bad)
fcom
or
js
dec
loop
adc
and
jb
(bad)
fcom
or
js
dec
loop
adc
and
jb
(bad)
fcom
or
js
dec
loop
adc
and
jb
(bad)
fcom
or
js
dec
loop
adc
and
jb
(bad)
fcom
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
mov
in
repnz
xor
je
sbb
sbb
pop
mov
sub
lea
lahf
je
adc
icebp
add
loop
inc
or
mov
das
sub
mov
sub
dec
mov
scas
mov
int3
sti
add
jmp
sub
or
repnz
adc
add
jg
sub
cs
lea
retf
or
mov
mov
and
lea
inc
or
jp
leave
adc
xchg
push
jle
or
data16
imul
mov
fdivr
cwde
loop
call
inc
jnp
or
(bad)
or
mov
adc
fisubr
cli
or
push
out
xchg
cmp
xchg
mov
test
dec
push
aaa
pop
mov
pop
jbe
ret
movs
stos
mov
cmp
imul
int3
mov
sbb
aad
fidivr
ds
push
and
retf
mov
dec
jno
cs
arpl
and
cld
jne
jle
rcl
dec
stc
pop
or
(bad)
sub
addr16
inc
stc
mov
pushf
xor
ss
pop
dec
jmp
and
inc
jbe
retf
call
je
xchg
dec
and
in
jl
and
dec
retf
pop
pop
data16
mov
aam
aam
in
cmp
pusha
out
cmp
cmp
pop
sbb
or
push
test
dec
rol
cmp
dec
mov
outs
ins
loop
push
cld
push
inc
add
in
lods
mov
fcom
mov
test
clc
in
mul
adc
add
add
jo
adc
push
std
or
sub
xor
jge
jne
enter
add
pop
or
test
cmps
lods
test
nop
stc
fistp
pusha
or
icebp
aas
repnz
pop
retf
shr
jge
std
gs
jle
shr
dec
stc
add
dec
sub
add
add
into
sub
popf
pop
popf
and
test
nop
cld
add
xchg
and
fs
add
lods
cmps
(bad)
push
je
mov
call
inc
inc
shr
icebp
cvtpi2ps
mov
sbb
mov
ins
or
pop
icebp
aas
repz
pop
cmc
retf
sub
popf
push
pop
pop
sti
or
imul
lods
push
jns
dec
sub
jns
scas
add
pop
aas
icebp
mov
loop
pop
sti
or
or
mov
outs
xchg
jno
(bad)
(bad)
ret
inc
cwde
retf
fs
test
jb
add
or
ins
repnz
cli
or
add
mov
movs
push
mul
xchg
xor
xor
ins
or
mov
sub
scas
inc
movs
adc
xchg
lahf
push
fst
push
jmp
loop
ja
retf
xor
call
or
dec
push
test
cs
ror
mov
jmp
inc
icebp
cmp
in
pop
std
retf
xchg
stos
xchg
adc
add
or
in
(bad)
cmps
sub
xchg
mov
repz
and
popf
jb
mov
cmps
mov
add
sub
jbe
push
mov
xchg
xchg
out
aas
mov
inc
(bad)
fcmovb
scas
mov
stos
out
and
cmp
je
xor
pop
push
pop
movs
iret
sub
(bad)
dec
cmps
cdq
pop
xchg
mov
sbb
aas
sbb
xor
je
or
dec
leave
mov
mov
ins
loopne
mov
add
jbe
xor
mov
loop
data16
call
sar
gs
data16
or
add
out
add
jmp
sub
xor
push
cld
jl
cmp
push
pop
add
movs
je
nop
mov
mov
je
aam
inc
out
cmp
scas
jl
test
pop
ror
mov
cli
push
out
retf
pop
pop
cmp
pop
les
xchg
cmp
pop
ret
add
sar
sub
mov
lahf
mov
pop
mov
cmc
fst
retf
pop
and
mov
and
cmp
pop
mov
jne
retf
lods
sub
pop
std
and
mov
out
cmp
ss
mov
pop
aas
add
cmp
cdq
mov
sar
pop
and
faddp
in
jle
inc
inc
sub
(bad)
mov
pop
push
jbe
sub
jbe
xor
out
mov
outs
jo
cli
pop
sti
mov
or
clc
and
cmp
std
addr16
sti
(bad)
pop
pop
add
inc
sub
xor
dec
sub
xchg
mov
jns
stos
out
lea
and
pop
popa
sub
out
fs
inc
je
js
sbb
cmps
and
imul
inc
dec
and
mov
test
sti
dec
mov
movups
jecxz
jno
dec
xor
xchg
cmps
and
out
cli
cld
ins
inc
cld
pop
ins
pop
push
ret
pop
jecxz
popa
push
or
cmps
stos
mov
cmc
push
(bad)
pop
xor
cmp
js
mov
or
jno
sub
dec
jl
jg
call
dec
leave
push
pop
fwait
ins
sbb
std
cmp
inc
pop
lods
sar
loop
jle
inc
cld
dec
inc
(bad)
sbb
fst
push
neg
les
cld
sub
jb
loop
out
loop
xor
sti
cmp
call
sbb
dec
pop
shr
jae
fisttp
loop
jle
add
mov
push
jno
cmps
in
test
in
mov
push
out
cwde
jmp
sub
ret
mov
ja
lods
jmp
retf
pop
or
mov
and
cld
mov
retf
xchg
nop
lods
pop
iret
(bad)
cmp
jne
and
jp
mov
pop
sub
or
cld
sub
xor
pop
lahf
outs
imul
pop
or
cmp
mov
cli
std
add
int3
jbe
pop
sar
xor
dec
lmsw
push
icebp
fld
sub
dec
stc
mov
(bad)
push
jmp
ins
lea
dec
mov
stc
hlt
push
inc
mov
jb
ja
xlat
addr16
call
aas
cld
int
adc
dec
cmps
jl
xchg
es
data16
inc
(bad)
mov
les
mov
cmc
mov
jp
rcl
ins
in
fld
jbe
mov
cdq
or
stos
test
in
pop
mov
or
push
xchg
cmp
imul
shl
rcl
ror
gs
sub
aaa
or
out
jmp
pop
push
leave
int3
jnp
dec
int
pushf
xor
cmp
ds
in
xor
cmp
mov
or
call
xchg
mov
or
add
int3
rcr
ror
loop
sahf
mov
dec
test
sub
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
imul
xor
pop
adc
or
arpl
push
jmp
xchg
stos
loop
repnz
fwait
shr
jp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
imul
or
mov
xchg
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
cmc
pop
xchg
dec
ret
(bad)
sti
jae
push
adc
jmp
loop
repz
ret
addr16
in
arpl
push
out
mov
retf
lea
sbb
or
jp
mov
adc
loopne
lahf
enter
add
pop
mov
rcr
ret
loopne
xor
jae
mov
aam
cmp
or
aad
adc
mov
xchg
std
pop
(bad)
repz
dec
aas
test
sbb
push
mov
inc
arpl
and
add
lods
out
mov
retf
and
iret
sub
cmp
dec
jnp
sbb
sbb
aam
cmp
or
inc
scas
mov
sub
(bad)
xor
inc
imul
xchg
test
jle
das
add
mov
daa
cs
or
mov
jl
xchg
jmp
inc
test
aas
mov
sar
popa
inc
in
jmp
cmp
call
sahf
add
sub
retf
shr
jl
jnp
hlt
inc
sbb
jmp
rcr
repz
xchg
mov
adc
cmp
adc
adc
repnz
dec
dec
les
or
or
inc
popa
clc
lods
push
inc
sbb
leave
inc
add
repz
repz
mov
cmp
xor
sbb
mov
mov
dec
add
jno
pushf
inc
push
jmp
sti
pop
mov
fst
mov
or
add
mov
xchg
sub
or
mov
push
mov
jns
stos
pop
pop
adc
arpl
arpl
mov
mov
sahf
sti
test
ret
mov
in
adc
mov
add
sub
pop
dec
sub
nop
or
sti
mov
or
loope
adc
ret
fwait
(bad)
imul
sar
sub
jae
sub
mov
mov
pop
out
mov
sar
or
and
cwde
div
cmp
pop
pop
cmp
pusha
pop
jmp
shl
dec
es
stos
jnp
push
imul
cmp
jae
inc
or
and
das
stos
pop
(bad)
fwait
mov
jge
imul
xor
xor
call
mov
cli
jo
fcmovu
xchg
ja
or
jecxz
pop
xor
and
dec
mov
fsubr
arpl
jns
pop
nop
jmp
sub
and
mov
rcr
adc
or
dec
cld
fadd
(bad)
mov
pop
mov
(bad)
aad
push
mov
ret
imul
mov
pop
fcmovnu
mov
cmp
push
sti
out
mov
fwait
mov
addr16
mov
movs
out
arpl
xor
repnz
jnp
test
enter
repz
leave
mov
mov
arpl
adc
or
(bad)
pusha
ja
(bad)
and
fist
xchg
es
dec
sti
stc
add
clc
clc
repz
repnz
sub
shr
mov
jno
outs
lock
cli
jp
mov
or
mov
mov
jmp
dec
dec
jae
xor
and
movs
inc
sub
clc
mov
inc
sbb
add
neg
inc
push
or
or
sbb
test
cmp
mov
pop
dec
sub
bound
fcomp
shl
adc
retf
pop
fcmovnbe
and
test
ret
loopne
and
adc
cwde
je
clc
mov
inc
jae
push
ins
das
dec
call
movs
sub
fwait
sub
repnz
lock
pop
jnp
mov
fist
out
mov
pop
adc
stos
call
add
inc
(bad)
clc
lods
push
inc
sbb
pop
mov
retf
xor
xchg
shr
sub
outs
or
mov
sbb
push
and
dec
repnz
pop
mov
push
fwait
push
add
jb
mov
sti
pop
mov
ficom
mov
or
add
mov
out
pop
jle
or
(bad)
mov
(bad)
mov
push
adc
lock
arpl
arpl
mov
mov
sahf
sti
stos
and
mov
add
in
adc
mov
add
sub
cmp
sbb
pop
or
loop
adc
ret
fwait
pop
imul
sar
sub
jae
sub
mov
(bad)
fistp
mov
shr
or
and
cwde
div
cmp
or
jmp
xchg
ins
cmps
shl
dec
and
jnp
push
imul
cmp
jae
inc
or
and
sbb
add
and
xor
xor
call
std
pop
pushf
mov
cli
jae
or
loop
xchg
fucomip
xor
jp
dec
mov
mov
sbb
nop
adc
sti
enter
jmp
push
(bad)
mov
loopne
mov
pop
pop
xchg
xchg
xchg
jb
mov
adc
js
daa
inc
mov
pop
mov
retf
push
imul
mov
mov
aaa
sub
dec
jmp
(bad)
mov
and
sbb
mov
ret
ficom
imul
dec
cld
fadd
(bad)
mov
dec
mov
pushf
sbb
mov
ret
mov
inc
ret
jmp
sbb
sub
inc
and
mov
sti
fistp
cmp
icebp
pop
dec
cld
or
imul
sbb
mov
xlat
inc
mov
jns
ret
test
mov
adc
sub
dec
stos
pop
inc
jmp
sti
xor
imul
fldenv
movhps
and
leave
jno
adc
sti
repz
ret
loop
cmp
jns
ds
push
or
sub
mov
sbb
mov
fwait
pop
mov
pusha
sti
(bad)
ror
les
add
pop
scas
retf
cli
jo
fcmovu
xchg
inc
jecxz
mov
ret
xor
jnp
dec
pop
push
jnp
mov
mov
mov
pop
adc
stos
call
add
inc
(bad)
clc
lods
push
inc
sbb
retf
retf
psllq
repz
dec
pop
pop
outs
or
mov
sbb
push
imul
jae
jecxz
or
call
es
jb
mov
sti
pop
mov
ficom
mov
or
add
mov
add
pop
jle
or
(bad)
push
out
pop
cs
jp
test
pop
adc
arpl
arpl
mov
mov
sahf
sti
stos
and
mov
scas
shr
adc
mov
add
sub
pop
dec
sub
nop
psubd
mov
or
loop
pop
rol
fwait
imul
ds
dec
sar
sub
jae
sub
mov
das
fistp
mov
rcl
and
and
cwde
cmc
jb
cmp
jmp
xchg
ins
cmps
shl
dec
and
jnp
push
imul
cmp
jae
add
mov
retf
add
mov
jle
(bad)
dec
push
inc
push
push
pushf
jmp
xor
fidivr
ins
inc
sbb
adc
sbb
sub
sbb
pop
fst
mov
and
mov
imul
bound
add
push
lahf
push
mov
dec
jl
inc
ins
cmps
inc
mov
imul
out
add
jae
clc
dec
fucom
leave
cli
test
mov
out
jecxz
jecxz
aas
jae
or
stos
sbb
addr16
fsubr
loopne
test
ins
mov
add
sub
jnp
pop
out
cmp
push
imul
adc
push
adc
stc
not
jecxz
repz
(bad)
jg
inc
xor
(bad)
push
or
and
push
add
neg
push
jae
xchg
jo
int3
or
movs
adc
mov
data16
mov
imul
fnstsw
sub
sub
repz
xor
dec
inc
pop
add
mov
jecxz
js
or
xor
call
inc
ds
mov
dec
push
jnp
sbb
mov
repz
faddp
imul
mov
fisub
jne
and
(bad)
sti
in
test
and
addr16
and
dec
or
jne
dec
mov
pop
test
dec
cmp
imul
cmc
lahf
add
lods
arpl
jae
or
xchg
aas
mov
xor
jmp
push
mov
inc
jmp
cli
add
add
fld
mov
gs
out
inc
test
cld
or
mov
pop
lods
and
add
push
and
ret
mov
push
dec
repz
arpl
push
out
bound
pop
inc
mov
dec
call
add
sahf
cmp
jg
jae
jns
adc
xchg
dec
pop
jge
adc
jle
add
inc
adc
add
jns
bound
xchg
inc
loop
or
sbb
ret
pop
pop
and
push
dec
sahf
outs
jb
jnp
inc
sbb
mov
(bad)
jnp
ins
inc
daa
mov
cmp
cld
adc
and
or
mov
xchg
out
jecxz
jo
aaa
fwait
cmp
stos
repnz
iret
jae
adc
push
jmp
jnp
inc
into
fist
pop
fs
retf
test
dec
cld
popf
adc
(bad)
out
cmps
sbb
sbb
and
jb
fiadd
jnp
aaa
shl
mov
fwait
adc
dec
outs
mov
add
stos
sub
sbb
xor
and
push
jecxz
stos
inc
pop
fs
fdivr
mov
jmp
lahf
mov
out
out
or
ja
xchg
lods
xchg
mov
add
ds
inc
xor
mov
push
inc
mov
div
push
mul
(bad)
xchg
test
ja
push
dec
adc
cmp
cli
pop
cli
test
fwait
daa
fadd
sub
lahf
rcr
jecxz
push
inc
jmp
jo
retf
inc
pop
ficom
mov
out
bswap
sbb
adc
push
xchg
push
scas
movs
jecxz
or
into
ret
fs
div
dec
push
(bad)
sahf
and
les
mov
into
test
shr
cs
and
push
xor
cmova
adc
sti
repz
push
fcmovne
(bad)
xor
sahf
dec
call
mov
dec
mov
mov
sti
std
dec
jl
xchg
inc
loop
add
fbld
xor
or
out
inc
jae
ffree
or
rcl
es
repz
mov
ja
add
aad
les
jmp
mov
mov
jp
mov
push
sub
sbb
adc
adc
retf
inc
pop
xchg
or
jmp
adc
sbb
(bad)
mov
xchg
add
retf
ins
in
jge
ja
mov
jp
lock
iret
mov
add
mov
add
leave
dec
pushf
movs
pop
cmp
loope
ret
iret
dec
push
push
push
xchg
jno
sbb
repz
and
imul
out
or
xchg
pop
lds
movs
inc
push
ror
mov
fisttp
out
sbb
or
add
test
jo
in
repz
aaa
int
xchg
popf
or
mov
(bad)
(bad)
mov
xchg
sub
jecxz
ja
sbb
add
data16
cli
pop
pop
mov
cmps
ss
inc
sub
out
test
jmp
(bad)
sub
call
loop
jmp
mov
push
es
mov
pop
xchg
and
aam
lahf
mov
pop
push
adc
add
and
lahf
ins
push
xchg
sub
aas
int3
xchg
imul
mov
(bad)
adc
arpl
arpl
arpl
fs
jecxz
stos
into
cmp
sub
outs
sub
scas
xchg
jg
hlt
into
add
mov
nop
and
push
test
adc
imul
pop
inc
(bad)
adc
cmp
xchg
fistp
cli
out
arpl
sub
mov
lahf
fmul
fild
ret
push
cwde
inc
pushf
cmp
xchg
sbb
pop
stos
mov
ficom
jle
xchg
rcl
lea
xor
push
add
xor
pop
movs
repz
iret
scas
out
xor
sahf
xchg
add
out
mov
hlt
push
xchg
fisttp
out
ds
and
sahf
dec
adc
ss
bound
popf
adc
cmp
hlt
push
xchg
push
scas
pop
mov
sbb
pop
mov
xchg
and
sti
outs
push
jg
hlt
mov
adc
or
clc
cmc
ss
cmp
rcl
adc
cmp
inc
sbb
inc
mov
mov
mov
mov
push
shr
xchg
dec
inc
pop
push
cmps
jb
jae
pop
out
adc
cmp
(bad)
test
xchg
jecxz
aad
dec
push
pop
sbb
pushf
std
jae
or
neg
mov
or
xchg
mov
and
std
mov
jmp
sub
retf
xchg
fcmovnu
inc
sbb
mov
out
aas
mov
xchg
ds
cmp
rep
cmp
daa
out
stos
push
fs
jnp
sbb
adc
mov
cli
mul
cmps
xor
xchg
mov
addr16
(bad)
adc
jae
inc
jmp
ja
sar
loop
xchg
sahf
cmp
pop
ds
ja
add
sahf
aam
repz
dec
fidivr
sbb
je
fs
mov
lds
outs
cmp
pop
mov
fnstenv
lahf
ins
jae
mov
loope
test
jge
cmps
imul
push
cmp
hlt
push
xchg
inc
lock
dec
faddp
and
or
mov
ret
jnp
dec
mov
mov
pop
dec
cmp
jl
ins
sub
scas
xor
push
xor
lahf
cs
jbe
retf
mov
xchg
mov
dec
sbb
rol
pop
cmps
mov
and
mov
mov
iret
and
sbb
fwait
fwait
cmp
aas
hlt
dec
mov
adc
les
dec
inc
sbb
(bad)
mov
sub
and
repz
retf
pop
out
mul
push
xlat
pop
cwde
scas
arpl
hlt
xor
jmp
jbe
xchg
dec
pop
lds
out
jmp
(bad)
and
test
or
or
push
jmp
inc
pop
mov
mov
fwait
ret
das
in
mov
mov
stos
sbb
and
cmp
and
stos
sbb
jle
ret
(bad)
fdivr
(bad)
cld
and
xchg
lods
mov
std
sbb
loop
ret
arpl
mulps
pop
pop
fstp
in
adc
mov
ins
mov
ret
(bad)
cmps
xor
imul
ins
mov
into
sbb
and
inc
mov
xchg
sub
jmp
cmp
out
cs
pminub
call
pop
jp
mov
inc
mov
sub
daa
mov
mov
out
mov
mov
inc
mov
jecxz
ja
add
pop
pushf
cs
sbb
jbe
nop
dec
fist
je
ret
aad
int3
mov
pop
inc
pop
daa
jae
hlt
inc
jae
scas
pop
xchg
mov
(bad)
push
inc
stos
adc
jle
ret
aas
rep
outs
mov
sub
or
dec
push
scas
mov
xor
add
mov
mov
xlat
pop
and
mov
push
outs
arpl
inc
mov
inc
push
sub
dec
shr
and
arpl
ror
out
pop
mov
clc
mov
jns
js
daa
fsub
jbe
mov
movs
les
pop
imul
sbb
or
arpl
ror
xor
and
jecxz
jbe
les
daa
mov
xor
(bad)
cmp
push
sbb
aas
or
scas
les
cld
cmps
xlat
cmp
aaa
xchg
scas
mov
ror
and
jecxz
xor
xchg
xor
jmp
mov
sti
jne
jl
ins
imul
jae
and
mov
adc
or
pop
mov
(bad)
cmp
xor
ret
retf
jecxz
ja
dec
dec
cwde
sub
dec
push
sub
test
ins
cmps
outs
mov
push
mov
jnp
cs
push
in
repnz
add
mov
into
cld
sbb
test
jae
inc
push
shl
inc
dec
dec
inc
inc
outs
push
shl
mov
rol
out
sub
mov
inc
dec
push
out
test
inc
add
daa
jp
sbb
out
stos
ffree
pop
xchg
xor
add
clc
add
out
mov
pop
sbb
sub
inc
call
and
lock
mov
mov
xor
in
repnz
dec
nop
adc
cs
sbb
imul
dec
add
mov
aad
loopne
xchg
xor
mov
dec
mov
nop
adc
mov
or
repnz
rcr
push
stos
xchg
iret
cld
ror
adc
mov
sub
mov
enter
cmps
movs
cmp
lock
cli
mov
fcom
loopne
jnp
adc
pop
and
nop
xchg
popf
arpl
mov
xchg
pop
and
js
mov
pop
loopne
jae
mov
pop
jmp
imul
sub
hlt
mov
sbb
outs
push
in
inc
or
fwait
mov
mov
cwde
sub
pop
pop
movs
out
add
xchg
rol
lea
ins
rol
jecxz
and
nop
fsubr
bound
(bad)
mov
and
add
sbb
imul
add
repz
int
imul
xchg
fsub
fs
sub
fwait
loopne
xchg
or
(bad)
and
stos
push
fwait
mov
daa
jge
mov
out
out
mov
dec
push
jmp
cmp
xor
popf
jnp
mov
adc
and
xor
mov
cwde
in
jae
mov
inc
push
call
push
push
fnop
mov
cmp
test
xor
mov
pop
arpl
xchg
shr
div
or
fist
xor
clc
pop
and
sbb
daa
fwait
ret
mov
outs
add
sub
js
adc
(bad)
enter
xor
cmp
or
dec
jbe
cmp
jmp
sbb
sbb
rcr
ret
and
pop
ins
mov
ss
jmp
jb
ret
adc
out
or
jp
clc
out
sub
loope
jge
add
pop
mov
pop
shr
movs
js
ret
lahf
sahf
sbb
retf
cdq
push
imul
cmp
pop
rol
stos
mov
mov
and
sub
mov
inc
sub
dec
adc
or
cmps
sub
dec
mov
mov
sar
sti
push
jp
imul
xor
shr
daa
xchg
repnz
or
dec
inc
sbb
stos
or
xor
and
inc
push
pop
push
outs
sub
sbb
cmps
mov
and
sbb
xchg
xchg
and
add
adc
scas
in
mov
test
inc
and
xchg
hlt
sub
or
pushf
fwait
aas
imul
jo
xor
mov
arpl
mov
sti
pop
xchg
ror
add
push
and
push
sbb
mov
test
scas
mov
or
xchg
and
fwait
ret
lock
add
cmp
(bad)
cmp
retf
pop
jmp
xchg
xor
xchg
xor
mov
dec
in
or
push
hlt
jae
fisttp
jmp
mov
stos
shl
xor
pusha
rol
js
jle
xchg
xchg
push
cli
cs
lahf
lds
in
mov
mov
stos
ret
xor
arpl
or
inc
movs
ja
mov
cli
xchg
cmps
pop
daa
push
scas
adc
pop
cwde
mov
push
in
bound
stc
inc
aaa
xchg
sbb
mov
mov
add
add
gs
out
nop
cmp
inc
or
and
pop
fistp
loop
repnz
inc
mov
cs
push
dec
lods
shl
scas
mov
push
mov
xchg
loopne
fld
push
push
and
dec
adc
retf
mov
cmc
add
clc
push
jbe
sbb
es
mov
(bad)
and
inc
xchg
ins
sub
js
xchg
pop
aas
cmp
mov
cwde
sub
mov
push
scas
nop
push
dec
pop
add
inc
inc
(bad)
jns
fs
xor
push
or
clc
push
inc
jno
jmp
fcmovnu
leave
cmp
push
stos
mov
icebp
(bad)
imul
sbb
cld
sub
stos
sbb
mov
cmp
or
mov
add
xlat
jp
ins
xor
stc
popa
inc
loopne
(bad)
push
or
adc
iret
xchg
jb
jle
lock
add
add
rol
dec
inc
repz
mov
dec
xchg
add
call
and
stos
cmp
jae
inc
pop
add
out
jmp
jne
cdq
cmp
push
shl
jnp
dec
sti
pop
push
jl
jg
push
inc
repz
and
pop
push
pop
stos
repz
arpl
cs
ja
pop
pop
sti
sub
cmp
lds
inc
mov
stos
cmps
in
mov
and
xor
int
add
stos
push
retf
not
mov
push
retf
mov
adc
mov
repnz
sub
pop
popf
mov
adc
mov
rol
add
retf
not
pusha
out
mov
dec
test
arpl
shl
adc
xor
sar
adc
dec
push
ret
mov
xor
mov
fbstp
retf
pop
xor
adc
daa
cwde
jae
popa
sbb
mov
fstp
jecxz
repz
jb
enter
dec
dec
pop
lahf
sub
cmp
mov
js
inc
ret
mov
cmp
cmp
add
adc
shl
test
repz
jmp
sti
jnp
push
xor
ret
xchg
rol
sbb
pop
sub
call
mov
xor
or
push
ror
retf
dec
jmp
adc
push
jae
pop
mov
stc
retf
pop
fstp
inc
mov
rcr
xchg
ja
add
sbb
stos
pop
lock
fidiv
inc
cmps
sbb
arpl
fwait
call
pop
sti
or
jae
inc
repnz
dec
mov
fld
or
push
mov
mov
xor
inc
cmp
or
sbb
jmp
pushf
xchg
cmps
jecxz
mov
ret
jae
imul
jmp
dec
inc
adc
pop
mov
mov
mov
cmp
cmp
push
mov
sub
cmps
mov
jecxz
addr16
es
mov
xchg
and
mov
xlat
arpl
aaa
outs
add
sti
dec
sbb
sub
sub
sub
push
jmp
aad
pushf
mov
dec
push
fst
mov
cwde
jg
mov
retf
iret
push
ss
pop
cmp
jae
jno
mov
cwde
push
xlat
jnp
pop
jg
push
ret
jae
jp
mul
daa
(bad)
inc
ret
xlat
test
fild
jbe
retf
xor
mov
aas
push
pop
imul
test
push
pop
pop
cmp
sbb
adc
hlt
ja
xchg
pop
out
sbb
mov
aas
pop
xchg
xchg
scas
xchg
cld
pop
call
sbb
pop
adc
mov
xor
sub
pop
imul
dec
(bad)
push
sahf
outs
arpl
sti
xchg
push
data16
cmps
inc
fstp
outs
mov
imul
dec
mov
adc
xor
clc
inc
inc
dec
mov
mov
aas
mov
scas
mov
sbb
add
hlt
inc
xor
jne
push
fcmovnbe
cmps
mov
ins
dec
data16
sub
lahf
push
or
push
out
inc
sti
jecxz
or
stos
ja
cmp
data16
fwait
jmp
in
push
arpl
add
sub
ins
and
jle
cmp
xchg
test
daa
sti
daa
es
inc
xor
pop
fwait
pop
xchg
shl
jnp
ret
retf
icebp
loopne
or
lahf
xchg
sub
sbb
inc
xor
xchg
mov
es
mov
push
xor
and
call
out
test
cld
push
pop
mov
xchg
imul
(bad)
mov
xor
jb
inc
fst
and
mov
mov
jnp
and
cmp
(bad)
fist
sub
inc
mov
and
shl
push
jle
rcr
(bad)
out
outs
mov
retf
call
inc
scas
sub
add
xor
xor
mov
aaa
out
mov
jp
sti
cmp
xchg
xchg
push
jmp
cmp
in
loop
lea
scas
test
add
adc
es
or
call
pop
pushf
dec
retf
(bad)
fld
pop
push
xchg
cmp
aaa
retf
and
out
mov
nop
dec
cmp
jmp
mov
push
stos
outs
jno
inc
rcl
(bad)
push
movs
push
aam
(bad)
arpl
adc
retf
adc
jecxz
fisubr
and
rol
cmps
add
imul
mov
sbb
pop
idiv
add
mov
push
outs
cmp
pop
out
(bad)
out
mov
jae
fild
movs
fbld
mov
outs
dec
xor
push
sahf
outs
arpl
sti
xchg
pop
shr
(bad)
adc
xchg
fistp
in
arpl
pop
inc
inc
es
xchg
cld
jecxz
mov
xchg
rcl
cmp
jecxz
sub
test
push
(bad)
sti
push
push
loop
pop
das
ret
sbb
jnp
cmp
add
sti
mov
sbb
jns
fwait
mov
fcomp
aam
(bad)
(bad)
hlt
jb
cmp
mov
sbb
jle
add
test
(bad)
mov
aam
cs
stos
jmp
(bad)
mov
xchg
push
outs
cmps
mov
ret
push
rol
fistp
sbb
cmps
sahf
xchg
ins
jae
inc
ja
jmp
fwait
mov
push
out
std
jecxz
repz
fwait
adc
xchg
adc
test
neg
pop
mov
pop
xchg
xor
add
out
sub
push
push
mov
mov
fwait
push
xor
dec
ret
cdq
sahf
cs
xor
mov
fwait
int
sbb
retf
or
fidivr
ss
dec
scas
hlt
es
cmp
add
mov
(bad)
cli
test
push
outs
es
jae
loopne
dec
int3
dec
cld
dec
in
sub
cmp
pusha
cs
mov
jge
ins
mov
and
test
(bad)
pop
pushf
mov
mov
(bad)
xor
out
sbb
or
aas
push
cmp
(bad)
iret
add
pushf
shr
aas
pop
add
inc
sbb
add
js
das
shr
jl
mov
fsubrp
lods
jnp
imul
scas
jae
je
enter
jns
push
mov
adc
(bad)
jg
mov
lds
dec
mov
mov
repnz
test
sti
out
cld
or
aam
cmp
push
pop
push
sahf
imul
inc
jg
xlat
push
repnz
repz
dec
fwait
pop
xchg
in
or
jle
dec
into
out
mov
imul
sti
inc
repz
xchg
cs
ds
(bad)
cld
add
pop
xor
fisubr
icebp
dec
call
js
fsub
addr16
in
or
dec
mov
adc
add
xor
stos
xchg
inc
sbb
push
imul
and
xlat
movs
inc
aam
les
xchg
sti
jne
inc
daa
xchg
inc
mov
inc
and
sbb
(bad)
push
fistp
fidivr
pop
pop
jmp
es
fiadd
out
fstp
retf
and
in
ret
jb
and
mov
sbb
push
je
enter
test
dec
movs
mov
cmp
mov
pusha
bound
mov
mov
rol
jecxz
out
jl
std
mov
(bad)
cs
dec
and
push
push
mov
repz
shl
jmp
xor
call
adc
mov
hlt
(bad)
cmp
jg
ins
jg
test
jae
mov
out
sahf
mov
pop
mov
sbb
(bad)
cdq
movs
outs
test
pop
movs
sti
cmp
(bad)
test
adc
into
sahf
sbb
clts
fcom
xor
std
(bad)
sahf
int3
cs
mov
dec
add
sub
xchg
xor
fst
addr16
pop
and
push
dec
sahf
mov
mov
jb
retf
pop
mov
mov
jnp
test
repnz
test
sub
clc
xlat
or
xchg
ds
mov
pushf
pop
pop
pop
or
dec
adc
lods
jo
aaa
push
inc
cmps
sahf
cmps
es
jae
inc
pop
add
inc
xchg
stos
mov
jae
es
xchg
mov
scas
out
mov
xchg
jmp
sti
into
inc
(bad)
sahf
xchg
inc
and
sti
xchg
sub
add
(bad)
hlt
mov
pop
loopne
fisubr
repz
fwait
test
or
inc
pop
in
out
xlat
sub
xlat
repz
pop
fidiv
div
scas
retf
push
pop
dec
out
and
push
mov
sub
cmp
ss
pop
cmp
ret
jnp
(bad)
adc
jb
adc
iret
lahf
pop
out
ja
(bad)
fist
out
add
rcr
mov
cmp
mov
cli
sub
ds
jl
ins
std
and
pop
shl
retf
sub
(bad)
or
push
outs
pushf
mov
dec
(bad)
pop
cmp
rep
xchg
fimul
daa
sbb
loop
mov
ret
(bad)
xchg
xchg
xor
xor
mov
bound
jle
in
xchg
lahf
les
xchg
jle
jnp
ret
push
fucomi
cmp
pop
(bad)
jle
xor
sahf
ins
xor
xor
xchg
jo
xor
arpl
aaa
test
test
leave
out
push
mov
aas
pop
adc
mov
mov
xor
rcl
sti
lock
push
and
(bad)
sub
push
push
pop
inc
loopne
test
dec
add
ret
arpl
jae
stos
fcomp
sahf
cmc
(bad)
cmc
jp
neg
cmp
pushf
fstp
rcl
jae
sahf
femms
push
es
(bad)
repz
dec
out
std
add
test
out
xchg
mov
add
mov
mov
popf
(bad)
rcl
ins
cmps
jmp
inc
lock
shr
das
cwde
(bad)
and
js
pop
or
lahf
dec
mov
lahf
das
stos
lock
cdq
cwde
adc
(bad)
lock
ret
in
test
inc
inc
pop
out
not
mov
lock
rcl
(bad)
mov
sub
adc
mov
fwait
retf
xchg
pop
pop
fmul
shr
mov
shr
sahf
test
sbb
adc
fisub
pop
cmp
fldenv
add
out
pusha
pop
jb
aaa
or
xchg
call
or
cs
jle
jle
sbb
or
lock
mov
dec
out
clc
mov
inc
jle
ja
sub
out
jbe
inc
repz
scas
sub
cwde
push
jb
sti
ficomp
lahf
pop
inc
sar
xchg
out
mov
jmp
fldpi
pop
sti
or
imul
scas
(bad)
repz
push
mov
or
sub
sbb
retf
push
clc
xor
cmp
ret
into
xchg
mov
jecxz
arpl
inc
outs
push
clc
sub
cmp
push
ret
adc
imul
jns
arpl
mov
jmp
hlt
out
pop
(bad)
adc
xor
ja
pop
pop
cmp
jnp
dec
jmp
adc
lahf
cmp
enter
sub
pop
mov
in
jb
push
fbld
sub
shl
jne
inc
mov
mov
imul
(bad)
xchg
loop
arpl
popf
rcl
mov
dec
in
adc
sbb
outs
add
dec
sti
sar
fbstp
mov
fwait
call
adc
add
scas
mov
jne
repz
fstp
inc
mov
cmp
ja
pushw
dec
push
pop
push
cmp
sbb
xor
inc
jecxz
cwde
fdivr
call
cmps
in
inc
mov
mov
sti
dec
sbb
jnp
mov
scas
aas
imul
mov
jecxz
sbb
jmp
sti
dec
sbb
stos
repnz
ret
xor
ror
mov
push
mov
(bad)
push
fcmovne
stos
mov
jae
imul
adc
stos
pop
mov
retf
jl
xchg
outs
js
pop
cmp
sub
mov
cli
pop
adc
mov
jo
or
ja
ror
xor
iret
pop
fwait
das
sti
cmps
arpl
xchg
fiadd
adc
mov
adc
movs
inc
adc
outs
jbe
jae
inc
jmp
jmp
jae
ror
das
xchg
or
mov
xchg
mov
aam
pusha
mov
scas
pop
jg
inc
jg
inc
stos
loop
test
ret
cmps
fild
outs
mov
and
jnp
sub
adc
jb
sti
mov
mov
les
sbb
dec
mov
faddp
out
nop
fadd
call
cwde
fiadd
(bad)
push
xchg
stos
loop
sbb
ret
fdivr
popf
sar
mov
inc
push
cwde
mov
data16
nop
inc
imul
adc
fist
call
or
cs
inc
push
shr
mov
push
stos
addr16
imul
ja
add
push
xor
sbb
sbb
push
pop
sti
jns
cmp
pop
imul
mov
test
test
xor
cmps
mov
outs
mov
sbb
sbb
mov
add
or
mov
add
loop
cmp
xchg
outs
and
repz
and
or
cmp
adc
leave
cmp
stos
xchg
cld
inc
push
lods
repz
mov
mov
cmps
xor
(bad)
cli
pop
cwde
push
xchg
or
fcmovnb
out
ss
stos
out
loopne
mul
inc
pop
push
cmps
aaa
std
aaa
not
inc
fisubr
add
mov
jbe
cmp
stos
ins
rol
xlat
xor
add
pusha
sar
outs
jg
mov
xchg
jnp
cmp
cwde
mov
ror
imul
mov
mov
adc
pop
stos
outs
jnp
mov
adc
pop
sbb
mov
or
inc
cs
mov
rol
jmp
mov
out
neg
rcl
dec
add
jbe
retf
not
mov
cmp
jbe
sbb
xchg
lods
sbb
mov
fisubr
mov
(bad)
repz
push
push
dec
arpl
inc
frstor
push
in
push
and
pop
into
scas
test
out
cmps
fmul
js
cmp
xchg
out
outs
xchg
jle
fstp
jecxz
sar
pop
in
push
mov
cmps
(bad)
stc
addr16
outs
jnp
sub
pop
or
imul
fistp
mov
outs
out
gs
dec
push
mov
add
xchg
and
sbb
into
iret
push
jg
mov
call
xchg
mov
xchg
aad
xchg
sub
sbb
outs
or
pop
daa
dec
mov
or
stos
cmp
push
adc
pop
adc
test
stos
cdq
and
or
stc
sub
inc
ret
sub
jbe
inc
add
out
cmps
inc
jle
xor
jbe
outs
not
pop
push
cmp
bswap
in
pop
sti
mov
push
in
test
adc
jbe
xor
call
dec
mov
jecxz
sbb
dec
mov
push
sub
fild
(bad)
cwde
outs
jb
mov
js
test
sahf
mov
mov
fwait
sub
rol
sbb
aam
and
pop
pop
leave
pusha
cwde
xchg
jb
sbb
push
mov
repz
and
(bad)
addr16
daa
push
jbe
sbb
ins
fisttp
sbb
push
mov
mov
popf
jne
into
or
mov
shl
fdivr
mov
ds
mov
jmp
(bad)
and
into
repz
jo
fs
and
inc
outs
pop
mov
jle
adc
fld
dec
imul
xchg
rcr
sub
xor
bound
cwde
(bad)
mov
push
imul
(bad)
mov
mov
(bad)
sub
jne
xor
add
mov
pusha
mov
and
rcr
cmp
retf
push
fist
pop
jns
bound
int3
push
gs
movs
pop
xchg
retf
jne
rcr
sbb
pop
inc
sbb
ja
inc
jne
xor
pop
push
xorps
cmp
fisttp
jecxz
repz
rcl
add
adc
fwait
add
add
pop
in
ficom
mov
and
dec
cdq
push
dec
pop
mov
idiv
push
les
cdq
cmp
cs
add
stos
shl
xor
out
sub
add
aam
jo
xor
pop
sbb
dec
sbb
mov
jae
adc
cmps
je
(bad)
xor
push
sti
inc
xchg
in
imul
scas
ss
sbb
and
test
lahf
fild
ja
jae
pop
cld
(bad)
push
jne
cmp
jmp
mov
aaa
out
or
pop
mov
inc
pop
dec
sub
push
ficom
jle
clc
mov
repz
shr
scas
xor
arpl
scas
xchg
push
(bad)
cld
jmp
mov
xchg
mov
repz
xchg
imul
mov
jge
loopne
or
jnp
pushf
arpl
repz
fwait
shr
jnp
mov
shr
clc
data16
jo
into
add
rcr
pop
shl
sti
call
push
les
repz
aam
mov
inc
sbb
ret
push
shr
(bad)
lock
add
and
mov
mov
cmp
das
imul
repz
pushf
pop
sti
outs
movs
cmp
clc
mov
mov
adc
jecxz
xchg
xlat
loopne
test
mov
in
jnp
data16
inc
adc
or
and
es
cli
inc
clc
nop
pop
imul
mov
data16
sub
cwde
lds
xchg
sbb
inc
movs
cwde
das
xor
lock
mov
push
jmp
shl
pushf
int
imul
xchg
test
xor
sbb
lock
pop
jg
(bad)
lock
stos
mov
lahf
mov
rol
mov
mov
popa
xchg
fcomp
adc
repnz
(bad)
imul
adc
jp
ss
cmps
pusha
rcl
ret
push
jp
loopne
nop
push
mov
xchg
xchg
jmp
xchg
fist
mov
pop
call
arpl
jmp
repz
jl
rep
push
adc
mov
es
or
gs
inc
xchg
cmp
(bad)
addr16
stos
test
cmp
inc
sub
mov
push
enter
cmps
lods
hlt
inc
stos
and
jae
mov
mov
inc
xchg
inc
and
mov
or
pop
jb
inc
sub
cmp
push
movs
sub
aas
mov
dec
adc
pop
jo
cmp
add
adc
adc
add
cmp
add
cmp
and
fild
data16
add
lods
add
xor
push
sbb
push
sbb
jo
dec
pop
jecxz
nop
push
mov
ret
imul
lahf
fnclex
jle
dec
pusha
sbb
in
mov
mov
push
push
or
sti
adc
cmp
ret
ja
mov
pop
shr
mov
outs
fcom
mov
div
and
push
je
jp
inc
pop
pop
inc
xchg
cwde
cmp
sbb
lahf
sub
mov
into
fist
fdivr
cmp
cmp
ja
jns
adc
outs
pop
mov
into
int
loop
or
xor
test
inc
fwait
cwde
mov
pop
sar
fcmovnbe
mov
inc
mov
(bad)
ins
retf
sar
data16
rol
outs
mov
inc
push
outs
lock
test
xchg
adc
cmps
mov
mov
or
fldcw
mov
ret
jmp
adc
dec
sbb
scas
jecxz
jle
cmp
shr
add
imul
les
push
dec
pop
out
repz
dec
repz
sbb
add
(bad)
push
std
dec
cld
movs
out
jnp
gs
pop
dec
push
cmp
cmps
jo
test
sar
cli
xor
fdiv
mov
inc
nop
push
sar
adc
outs
inc
repz
sar
fdivr
jge
call
aaa
loopne
mov
mov
sti
jecxz
push
mov
sub
push
cmps
mov
js
cdq
or
stos
cmps
or
fcmovbe
lahf
xchg
xchg
jp
pop
dec
cld
dec
and
pop
push
fsubr
xchg
xchg
fisubr
sub
and
xlat
jae
leave
aas
cmp
inc
and
mov
xchg
xor
push
pop
stos
sub
jg
or
sbb
leave
xchg
mov
dec
(bad)
cli
cmps
fbstp
mov
and
mov
dec
fisub
push
jno
inc
adc
sti
pop
scas
imul
es
jns
ret
test
pop
xor
imul
test
and
push
push
push
repz
cmp
inc
pop
in
ds
sbb
cmp
fistp
sub
test
mov
lock
dec
imul
jae
sbb
mov
ins
(bad)
stos
sbb
js
ret
icebp
(bad)
imul
outs
mov
adc
or
push
or
dec
mov
inc
(bad)
stc
mov
loope
xchg
imul
xor
sbb
cmp
mov
out
(bad)
stos
out
jecxz
fwait
mov
fwait
xchg
cmp
push
ror
cs
out
sbb
dec
mov
loopne
add
xchg
inc
jecxz
imul
and
adc
push
jmp
push
call
push
(bad)
mov
dec
cmp
imul
xor
add
ret
jae
gs
jmp
sti
pop
(bad)
and
jnp
jecxz
repz
ret
jb
enter
dec
xchg
pop
add
mov
or
mov
and
js
inc
(bad)
mov
cmp
cmp
add
adc
inc
repz
ss
push
retf
push
xor
ret
rcl
and
mov
ret
cmp
enter
aaa
xor
or
push
ror
retf
dec
jmp
adc
pop
mov
and
xchg
jp
inc
mov
shl
and
ss
cmp
or
fidiv
inc
cmps
sbb
arpl
fwait
inc
imul
push
pop
sti
push
arpl
pop
dec
mov
fisttp
or
push
mov
mov
xor
inc
cmp
or
sti
pop
out
adc
push
mov
ret
jae
imul
sub
jecxz
add
pop
mov
mov
mov
cmp
cmc
xor
add
push
or
sbb
retf
imul
es
repz
lock
mov
das
mov
stos
add
add
retf
ror
ja
fwait
outs
loopne
outs
enter
add
jg
jle
sub
not
mov
xchg
pop
imul
mov
push
push
jno
push
sbb
mov
fbstp
call
dec
add
jecxz
arpl
adc
xor
test
inc
mov
mov
aas
sbb
fsubr
push
ret
call
sbb
or
cdq
call
xor
mov
fsubr
gs
scas
pop
lods
mov
rol
enter
sub
and
dec
and
ficom
jmp
jno
xchg
jg
outs
inc
repz
adc
xor
jmp
dec
inc
sbb
out
mov
push
stos
and
js
ret
retf
ror
pushf
and
pusha
cld
das
in
aam
cs
and
sub
mov
xchg
cmps
in
mov
xchg
ds
mov
push
pushfw
fild
lds
inc
(bad)
(bad)
jo
jae
mov
inc
cmps
out
je
fwait
adc
jae
mov
outs
sbb
arpl
fisubr
fwait
jbe
fidiv
out
cmp
imul
enter
xchg
xchg
or
dec
cmps
cmp
(bad)
pop
push
out
add
fdivr
loopne
out
mov
pop
out
cmp
or
fst
xchg
cmp
arpl
adc
add
andps
in
aaa
arpl
sub
sbb
and
fcomp
mov
mov
shl
sub
mov
pop
fs
or
add
mov
cld
cmps
cmp
sti
ret
outs
mov
outs
pushf
pop
cmc
outs
push
in
add
pop
ds
imul
fld
jmp
push
add
push
aam
sub
retf
jmp
repnz
lods
sub
mov
arpl
add
or
sub
daa
ss
pusha
enter
sahf
sti
mov
dec
pop
sub
jbe
rep
loopne
jbe
mov
stos
and
daa
cmc
mov
jmp
bnd
ror
sbb
adc
movs
aam
xor
adc
cmp
jecxz
mov
dec
dec
adc
jb
dec
addr16
pop
sub
sub
mov
push
fcmovnbe
out
sbb
repz
xchg
retf
xchg
out
test
xor
arpl
jg
push
in
pusha
push
mov
(bad)
adc
mov
xchg
lahf
pop
lods
sti
aas
iret
sbb
push
(bad)
mov
jb
neg
loope
cmp
ins
push
jecxz
jle
rcr
das
scas
mov
clc
jnp
int3
fwait
dec
mov
pop
loopne
jg
out
sub
xchg
lds
pop
adc
imul
into
iret
add
cmp
push
stos
mov
pop
sar
xchg
mov
int3
pop
add
stos
push
retf
fcom
pop
mov
jg
in
mov
xor
ret
mov
push
lahf
push
outs
call
aad
jmp
mov
sbb
xchg
imul
adc
add
push
jae
mov
xor
xchg
stos
mov
shl
cld
add
sub
xor
arpl
mov
xchg
stos
mov
stos
sub
ffreep
test
and
push
mov
inc
arpl
and
add
lods
out
mov
retf
and
cmp
dec
jnp
sbb
sbb
aam
cmp
or
inc
scas
mov
mov
(bad)
xor
inc
imul
xchg
test
jle
jae
jae
cmp
cs
imul
dec
jno
retf
jl
xchg
jmp
or
xor
mov
adc
sar
popa
inc
in
jmp
cmp
adc
add
xor
pushf
pusha
fwait
or
(bad)
pop
int3
jmp
ins
movs
test
dec
inc
in
cmp
dec
inc
(bad)
mov
push
(bad)
fwait
pop
cs
jnp
xchg
pop
pop
adc
inc
fmul
retf
pop
sahf
sti
stos
and
ret
out
in
adc
mov
add
sub
cmp
sbb
mov
jecxz
sub
ret
fwait
jnp
pop
ds
dec
rol
push
jae
sub
mov
mov
mov
sar
or
and
cwde
repz
cmp
or
jmp
sbb
retf
sub
ins
cmps
shl
dec
and
shr
jnp
push
imul
cmp
jae
inc
or
and
arpl
add
imul
xor
xor
call
fwait
sbb
sti
jo
fcmovu
xchg
inc
jecxz
mov
ret
pop
xor
and
dec
pop
push
jnp
mov
xlat
push
in
out
mov
adc
pop
into
stos
fwait
adc
add
inc
arpl
xchg
push
inc
sbb
jmp
mov
retf
push
repz
repz
jae
pop
outs
or
mov
sbb
push
das
mov
sbb
jecxz
pop
mov
imul
push
add
jae
movs
inc
push
jmp
sti
pop
mov
fist
shl
xchg
and
mov
(bad)
les
fiadd
or
dec
or
dec
fwait
xchg
fcomp
push
shr
daa
(bad)
and
mov
into
jecxz
ja
xlat
mov
xchg
ja
lds
pop
push
sbb
mov
retf
xchg
loop
ret
stos
stos
and
or
aam
dec
cmp
ficom
dec
mov
jnp
lsl
in
cmp
jg
arpl
cmp
jl
or
movs
add
mov
neg
and
sub
mov
sti
out
mov
adc
repnz
mov
enter
mov
out
jmp
sub
and
xchg
add
jnp
xor
push
mov
push
push
mov
retf
xchg
cmp
sub
fwait
sub
repnz
ins
dec
jmp
mov
leave
jno
adc
(bad)
cmp
xchg
inc
pusha
(bad)
jge
xor
test
inc
jno
jb
pop
mov
xor
add
into
pop
loop
shl
cmps
ret
fld
mov
dec
ficom
sub
inc
jecxz
scas
hlt
stos
test
mov
sub
xchg
ret
out
pop
jmp
es
and
inc
push
add
sbb
call
sbb
dec
sub
aad
stc
pop
xor
stos
sbb
push
xor
xchg
xor
add
fucomp
jno
mov
pop
mov
mov
mov
mov
imul
sub
dec
add
or
shl
rol
cmp
adc
xchg
cs
pop
out
mul
sub
cmc
jecxz
out
xchg
jae
arpl
mov
mov
or
shl
inc
into
mov
cmp
cmp
add
repz
aaa
test
repz
in
sti
stos
retf
push
xor
ret
ret
rol
cs
pop
sub
cmp
(bad)
mov
xor
or
push
(bad)
retf
dec
jmp
adc
addr16
pop
mov
dec
dec
fstp
inc
mov
shl
xchg
ja
add
dec
or
xlat
mov
xor
cmps
sbb
arpl
fwait
cwde
imul
fimul
mov
jo
arpl
pop
dec
mov
fisttp
or
push
mov
mov
and
dec
xor
dec
cmp
or
sbb
out
xchg
xchg
or
push
mov
ret
jae
imul
dec
jmp
inc
inc
outs
push
add
pop
mov
scas
fcmovnu
stos
pop
mov
cmp
xor
sbb
mov
mov
pop
or
sbb
jmp
mov
xchg
in
jecxz
repz
jnp
dec
dec
pop
cli
outs
sar
and
push
jae
adc
push
movs
mov
jo
retf
push
xor
daa
cwde
fwait
mov
push
sti
out
mov
mov
iret
test
add
jnp
or
adc
or
inc
sub
inc
cdq
mov
jge
pop
add
or
mov
xchg
xor
and
movs
int3
test
jnp
out
mov
ror
adc
retf
ja
mov
xchg
fwait
jecxz
add
and
mov
outs
daa
int
pop
inc
ficomp
adc
sahf
xor
call
arpl
pushf
cmp
cli
mov
retf
jmp
test
mov
cld
shr
sub
sub
or
inc
jmp
mov
xchg
out
pop
mov
xchg
adc
inc
or
mov
push
xchg
add
jmp
outs
mov
iret
or
pop
imul
mov
pop
cmp
add
mov
xor
out
xchg
(bad)
sbb
sahf
out
jo
je
fdiv
bound
push
in
pop
(bad)
xor
sbb
and
push
push
jp
mov
jbe
xor
fsub
mov
push
cli
cmp
loopne
jnp
ds
das
movs
mov
in
outs
fdivr
jl
in
inc
jb
test
and
ror
pop
mov
sub
dec
jae
movs
ret
mov
mov
jl
stos
mov
mov
rdtsc
adc
(bad)
or
pop
lahf
hlt
sar
dec
sti
xchg
cmps
mov
xor
stos
fwait
mov
pop
xor
clc
retf
mov
dec
jl
frstor
inc
adc
call
retf
lods
rcr
call
test
pop
mov
add
sbb
xchg
inc
js
adc
xlat
mov
ret
push
pop
arpl
add
inc
xchg
push
xor
nop
test
retf
ins
test
movs
add
and
mov
lods
scas
cs
add
sbb
repz
ffreep
test
stos
ja
push
xor
cmp
enter
mov
mul
rcr
dec
stos
cmps
xor
cwde
jae
mov
add
adc
arpl
mov
sti
sbb
dec
mov
loopne
or
test
test
cmp
call
inc
es
or
cmp
xor
sub
jnp
popf
pop
imul
mov
in
jmp
sti
or
out
cmp
cld
xchg
test
aaa
test
adc
arpl
push
mov
pop
mov
inc
fcmovnb
test
out
or
jnp
js
sub
or
fcom
mov
fiadd
jnp
add
and
jns
push
shr
xor
mov
dec
cli
jae
or
stos
call
pop
mov
dec
pop
in
shl
inc
nop
pop
pusha
out
mov
xchg
sbb
mov
in
and
cwde
idiv
push
mov
stos
pusha
add
retf
jmp
sub
iret
cmp
pop
push
add
mov
jnp
test
enter
repz
repz
jae
pop
outs
or
mov
sbb
push
xchg
sbb
jecxz
inc
mov
imul
push
add
adc
jae
pushf
inc
push
jmp
sti
pop
mov
fist
mov
or
add
mov
xchg
sub
or
shl
push
xchg
fwait
pop
cs
jnp
stos
pop
pop
adc
arpl
arpl
mov
mov
sahf
sti
stos
and
mov
and
in
adc
mov
add
sub
cmp
sbb
rol
js
rol
fwait
sub
ds
dec
sar
sub
jae
sub
mov
xchg
pop
out
mov
shl
or
and
cwde
lock
cmp
jmp
sbb
retf
cmp
ins
cmps
shl
dec
daa
ret
out
pop
push
imul
cmp
jae
inc
or
and
ret
stos
pop
(bad)
fwait
mov
jle
imul
xor
xor
call
cmp
pop
scas
retf
sti
jo
fcmovu
xchg
cmp
or
jecxz
pop
xor
dec
pop
push
jnp
mov
stos
push
in
out
mov
adc
sub
pop
xchg
xor
rcl
mov
mov
push
pop
mov
mov
stos
pop
push
into
xchg
jbe
lds
sti
aam
les
into
xchg
push
scas
daa
jbe
cmp
inc
daa
je
push
fistp
mov
stos
ins
xor
inc
out
cmp
and
loope
push
sahf
imul
call
cmp
arpl
pop
inc
pusha
mov
mov
or
dec
fisubr
jnp
fwait
push
pop
jnp
cmp
push
sub
daa
push
mov
xchg
scas
fdivr
sub
in
arpl
into
push
out
jecxz
or
dec
jae
cmp
lahf
int3
pop
mov
fwait
push
scas
dec
pop
pop
mov
stc
xor
fist
movs
mov
repz
ror
xchg
imul
xor
pop
(bad)
out
cmps
les
push
repnz
dec
aaa
(bad)
(bad)
aas
stos
push
stos
pop
and
dec
pop
mov
cmps
jne
scas
jae
sbb
inc
cmp
lods
mov
cmp
pusha
rcl
jae
push
pop
lods
mov
xor
stos
push
daa
mov
(bad)
pop
outs
out
jae
or
shl
leave
stos
sbb
data16
adc
jecxz
(bad)
sub
scas
mov
aad
jecxz
(bad)
fisttp
dec
mov
lock
fimul
fcmovne
stos
int
xchg
rcr
jge
scas
jl
sbb
movs
xchg
sub
ss
rcl
into
or
jo
(bad)
retf
cmp
and
arpl
add
scas
mov
or
out
jne
jmp
push
stos
inc
(bad)
sbb
test
mov
cmp
pushf
mov
(bad)
scas
out
mov
pop
cmps
call
fwait
xchg
out
fcomip
mov
outs
pushf
push
sub
(bad)
xchg
push
sub
and
cmps
mov
ret
xlat
mov
aam
cmp
stos
(bad)
rcr
out
mov
mov
mov
pop
xchg
push
into
(bad)
dec
cld
push
jnp
xor
ficom
and
push
mov
xor
and
mov
fsubr
movs
cmp
pop
push
fisubr
mov
push
push
mov
in
xlat
cdq
and
imul
xor
mov
sub
sub
dec
pop
inc
lahf
outs
into
div
dec
mov
push
inc
cmp
pop
mov
(bad)
lahf
push
or
js
xchg
out
sub
pop
mov
cmp
ds
cld
jae
xchg
ins
cmps
rcl
dec
ret
add
es
push
js
mov
jle
dec
push
adc
lods
retf
retf
xchg
jnp
ss
ret
mov
data16
push
cld
push
sti
cmp
mov
scas
data16
test
or
fmul
cmc
packssdw
aad
xor
repz
push
push
(bad)
sahf
out
sbb
mov
dec
aas
sub
sbb
xor
jb
mov
mov
sub
pop
(bad)
sbb
test
dec
add
jns
cmp
jae
mov
lods
les
mov
cmp
jmp
aaa
mov
cmp
fdiv
repz
aad
push
cmp
adc
data16
mov
out
repz
xor
push
xchg
jae
cmp
pushf
dec
mov
push
es
setle
test
push
xchg
dec
aam
cmp
not
jo
fwait
sbb
je
fs
xchg
mul
mov
sbb
imul
inc
nop
push
out
repz
test
jae
out
or
loopne
jbe
ss
pop
cmp
cmp
pop
inc
jle
mov
push
push
pushf
sub
or
mov
xchg
xchg
jecxz
ret
dec
pop
rcr
cmp
inc
aas
inc
pop
or
retf
adc
into
addr16
mov
jnp
rol
dec
pop
loopne
mov
mov
mov
mov
fwait
ins
imul
int3
push
mov
and
add
sub
or
mov
stos
sbb
xchg
je
fwait
shr
test
out
cmps
jns
mov
aam
jmp
cmp
fisubr
xchg
mov
xor
mov
jno
sub
cmp
or
mov
cmp
fist
pop
inc
cmp
pop
out
mov
lods
test
mov
or
xchg
xchg
and
add
adc
sub
sbb
xchg
lods
cli
mov
fstp
sbb
jle
cmp
xchg
fs
pop
jl
jecxz
push
scas
nop
push
dec
pop
add
inc
inc
xchg
sbb
popf
mov
(bad)
out
aas
sbb
pop
sub
les
cmps
cmp
jl
xchg
inc
mov
or
or
or
jbe
mov
pusha
sub
jo
aaa
or
xchg
push
jb
data16
ret
and
push
or
in
repz
inc
push
sbb
pusha
cmp
mov
inc
mov
call
push
inc
sbb
lock
call
xor
adc
gs
mov
mov
push
push
push
mov
call
jne
jmp
mov
xchg
inc
or
test
les
arpl
sbb
mov
and
popa
mov
sub
mov
push
mov
or
ficom
mov
(bad)
(bad)
loop
add
and
pop
shl
sub
dec
push
sbb
repnz
repz
xor
sahf
xchg
push
fadd
ret
fwait
lea
mov
adc
loopne
dec
std
inc
cmps
jmp
sbb
dec
out
cs
push
test
inc
xchg
in
jae
cmp
ret
fimul
mov
push
sahf
test
dec
xor
inc
ja
nop
mov
mov
mov
sub
faddp
(bad)
into
inc
jecxz
aad
inc
sub
jns
icebp
mov
dec
es
hlt
inc
or
jmp
add
les
fist
push
ret
(bad)
mov
xor
push
push
fcomp
add
(bad)
mov
xor
(bad)
in
inc
or
aas
cmp
mov
adc
stos
mov
mov
pop
movs
jb
mov
mov
push
scas
push
xchg
sahf
cmps
arpl
rcr
pop
push
sbb
pusha
mov
loopne
mov
fiadd
sbb
adc
xchg
push
sti
inc
in
data16
sbb
and
or
cmp
(bad)
pusha
cmps
jnp
imul
sub
sub
sbb
push
adc
mov
xchg
lahf
jecxz
repz
jp
or
sahf
sub
sbb
push
rep
add
or
mov
mov
adc
call
fist
retf
sub
pop
int3
call
mov
arpl
mov
das
(bad)
les
mov
or
xor
rcr
data16
les
inc
or
xchg
data16
ss
lods
jmp
sti
cmps
popf
(bad)
push
mov
cmps
xor
(bad)
ss
add
mov
test
push
pop
imul
rcr
repz
es
mov
test
pop
shr
pop
mov
mov
mov
jecxz
repz
repz
fistp
mov
add
lods
push
mov
pop
(bad)
stos
adc
mov
sub
mov
in
ret
pushf
cmp
hlt
stos
mov
mov
sbb
stos
movs
call
sub
pop
jmp
jle
or
out
mov
push
and
ret
sub
jbe
cld
dec
cwde
je
push
or
ret
or
xchg
mov
movs
stos
mov
fs
loopne
jnp
pop
add
leave
jb
sub
or
mov
ins
mov
(bad)
fwait
xchg
add
xor
pop
push
adc
jo
retf
jmp
loop
pop
xchg
xor
push
ins
push
sub
inc
jmp
es
mov
cmp
dec
jnp
mov
jb
lahf
dec
enter
push
xor
xchg
(bad)
xor
shr
xor
call
jae
fbld
js
inc
xlat
mov
cmp
cmp
add
aaa
test
repz
sti
pop
xor
lahf
xor
ret
stos
sub
fdiv
mov
or
call
sub
xlat
or
push
les
retf
dec
jmp
adc
arpl
mov
pop
mov
retfw
jmp
out
inc
mov
ror
add
arpl
stos
pop
lock
into
mov
or
arpl
fwait
pop
imul
fimul
mov
out
jae
mov
adc
push
or
push
mov
lods
sar
inc
clc
adc
push
cmp
scas
add
pop
std
or
fistp
mov
ret
jae
imul
xor
jae
inc
pop
lods
add
pop
mov
mov
inc
stos
jnp
sbb
pusha
fwait
cmp
xor
mov
mov
inc
or
mov
xchg
jnp
jg
bound
jnp
dec
pop
movs
cli
outs
sar
ds
retf
push
mov
push
sub
pop
je
fbstp
retf
dec
xor
cwde
jae
jbe
pushf
jmp
add
retf
xchg
add
test
jge
shl
aam
hlt
test
jno
inc
pusha
sahf
push
out
xacquire
mov
mov
jnp
rcr
dec
dec
xlat
push
add
push
stos
or
pop
data16
pop
pop
jecxz
mov
test
mov
out
out
movs
xor
mov
pop
cmp
shl
jbe
jg
adc
push
enter
lods
xchg
ins
mov
imul
hlt
lods
call
or
mov
fsubr
cwde
leave
ins
and
xor
lock
cmc
call
inc
mov
jne
cmp
or
test
xchg
aam
fisttp
lea
ss
dec
(bad)
sub
test
push
into
sbb
loopne
fisttp
fdivr
into
in
movs
adc
push
(bad)
cmps
mov
push
sbb
mov
iret
ret
mov
inc
ret
pusha
add
xchg
(bad)
lods
sbb
rcr
push
xlat
lock
mov
cwde
pop
dec
aas
xor
retf
push
out
sbb
cmp
jle
cmp
push
rol
xchg
pop
lock
inc
inc
sbb
or
add
out
test
sar
loopne
jbe
or
js
xor
pop
mov
adc
and
dec
repnz
jg
sbb
mov
loopne
xor
add
mov
cmp
mov
mov
in
cmp
fcmovnbe
ins
es
jae
dec
stos
jmp
cwde
mov
leave
aam
retf
jb
mov
stos
repz
lock
lock
mov
pushf
retf
mov
iret
xchg
mov
(bad)
jl
loopne
test
inc
cdq
jbe
imul
mov
jmp
xor
stos
sub
sbb
push
data16
bound
add
jmp
sub
cmp
jne
stos
sbb
mov
ret
push
pop
imul
jle
cld
pop
adc
les
bound
(bad)
fidivr
xlat
out
dec
cmp
cmps
jo
jp
daa
in
cmps
jbe
data16
sbb
or
fmul
inc
pop
adc
cmps
mov
nop
scas
push
bound
or
es
(bad)
repz
imul
mov
mov
or
jae
fidivr
in
cmp
loopne
xor
and
jmp
aam
out
aad
shl
lea
call
cmp
sub
push
jecxz
mov
xlat
and
mov
push
je
xor
add
sub
cmp
adc
aaa
inc
fcmovnu
push
pop
loop
inc
xchg
shl
add
mov
in
push
mov
adc
cmp
into
cdq
sub
xor
cdq
aam
jle
or
push
jmp
or
xlat
and
js
dec
fwait
xchg
cmp
adc
push
callw
sub
adc
or
imul
pop
mov
inc
jae
xchg
xor
aad
arpl
push
xchg
pop
push
mov
push
and
out
jecxz
jle
cwde
push
push
cmp
scas
mov
(bad)
sti
push
adc
jmp
imul
ret
shl
(bad)
mov
sbb
out
cmp
sbb
sar
xchg
mov
adc
push
jne
repz
pop
cwde
mov
retf
sbb
and
mov
scas
sahf
push
dec
xchg
xor
add
dec
mov
cmps
test
mov
mov
jae
retf
(bad)
pusha
mov
int3
in
repnz
(bad)
jmp
mov
mov
sbb
stos
push
push
adc
repz
ret
clc
mov
jb
push
fcmovnbe
(bad)
rcl
in
push
and
sub
dec
mov
sahf
jno
inc
mov
sbb
sbb
loop
jns
push
mov
mov
lds
inc
mov
xchg
mov
out
and
cmp
cs
push
dec
(bad)
pop
div
(bad)
fcmovnbe
adc
ret
loopne
stos
xor
add
jnp
dec
sub
inc
fist
jo
mov
(bad)
sbb
hlt
mov
cmps
test
inc
push
repz
enter
push
inc
mov
(bad)
or
(bad)
sbb
je
dec
aas
test
imul
mov
mov
mov
xchg
jmp
sti
neg
xor
(bad)
fwait
mov
mov
pop
pop
sub
clc
jae
pop
pop
push
adc
sub
mov
push
jns
ret
test
mov
in
jmp
sub
push
and
scas
dec
stos
pop
inc
jmp
stc
xor
pop
xchg
push
fldenv
movhps
and
leave
jno
adc
sti
icebp
or
iret
sbb
push
call
ficomp
jmp
jns
pushf
ins
jae
and
jmp
add
imul
jae
add
test
cwde
in
arpl
mov
loope
pop
(bad)
pusha
int3
or
mov
adc
xchg
(bad)
aam
jg
or
fcom
pop
mov
jg
(bad)
stos
mov
xchg
fwait
or
lock
mov
mov
jmp
scas
push
jnp
pop
sub
movs
icebp
or
shl
or
jecxz
pop
or
dec
pop
push
jnp
mov
rcpps
out
dec
or
xchg
stos
cmp
adc
or
inc
pushf
clc
lods
push
inc
sbb
xor
add
stos
jecxz
repz
repz
cld
and
dec
out
pop
pop
outs
or
mov
sbb
push
outs
mov
sbb
jecxz
dec
mov
xchg
loopne
push
add
adc
mov
mov
sti
pop
mov
and
dec
mov
or
add
mov
aaa
sub
hlt
cmp
jmp
mov
sub
mov
push
fwait
fwait
pop
cs
test
test
arpl
arpl
dec
pop
sahf
sti
push
and
mov
mov
int3
mov
add
sub
cmp
in
or
sti
mov
or
sbb
pop
rol
fwait
xchg
ds
mov
mov
jae
push
jae
sub
mov
inc
fistp
inc
xor
fwait
ror
cld
cwde
cmc
jb
cmp
adc
sbb
xchg
ins
cmps
ror
and
jnp
push
imul
inc
or
sbb
sbb
ret
or
or
sahf
ret
scas
outs
pusha
push
mov
adc
out
imul
repz
xchg
mov
sub
jecxz
xor
push
add
adc
ins
mov
(bad)
mov
dec
add
mov
hlt
xchg
mov
add
jmp
pop
out
mov
cmp
pop
scas
or
add
jbe
push
mov
fwait
jb
xor
inc
aaa
add
inc
adc
xchg
test
mov
pop
imul
adc
out
push
jle
outs
add
add
mov
sub
cmp
test
jbe
push
or
outs
loopne
aaa
sbb
mov
daa
adc
fisttp
mov
arpl
push
mov
push
fwait
sub
sti
ss
rol
jmp
das
pop
into
jae
mov
scas
(bad)
cmps
scas
and
int
pop
push
aad
aas
cmp
jecxz
push
adc
clc
cmps
loop
pop
addr16
fwait
sub
mov
pop
pop
push
sub
in
mov
imul
stos
scas
xor
add
xchg
out
jp
push
add
daa
jmp
in
jae
dec
xlat
scas
arpl
jmp
mov
rcr
cld
mov
adc
inc
enter
fsub
jecxz
mov
push
sti
add
lock
call
cld
fsub
outs
sahf
mov
push
test
enter
jmp
mov
xchg
data16
mov
movhps
shl
push
arpl
(bad)
dec
xor
sbb
out
or
pop
data16
dec
cld
mov
mov
dec
cmp
xchg
push
int3
stos
mov
shl
cld
add
sub
sbb
jmp
add
xor
arpl
stos
rcr
adc
dec
add
in
xchg
lods
out
mov
cdq
push
scas
pusha
sti
pop
popf
xlat
and
push
jge
jo
xchg
xchg
imul
mov
sub
jae
xchg
inc
ins
(bad)
cmp
xchg
rcr
scas
jecxz
or
or
pop
xor
rcr
pushf
mov
jge
sti
cmp
mov
pop
sar
test
ret
(bad)
sti
jae
pop
nop
push
xlat
mov
sahf
push
stos
mov
or
(bad)
lahf
sbb
dec
mov
cwde
outs
pop
cmp
sbb
sbb
sub
into
xchg
gs
adc
adc
sbb
outs
mov
nop
inc
out
ins
movs
pop
retf
sbb
push
mov
imul
sbb
movs
cwde
ds
sub
pusha
jle
mov
(bad)
sbb
hlt
mov
repz
in
scas
int3
sbb
adc
cmp
push
and
repz
dec
xor
out
pop
push
jnp
mov
outs
push
in
out
dec
or
xchg
stos
xchg
mov
adc
add
inc
pushf
clc
lods
push
inc
sbb
jmp
mov
retf
adc
sub
repz
cld
and
dec
pop
pop
pop
outs
or
mov
sbb
push
outs
mov
sbb
mov
mov
dec
add
adc
mov
mov
sti
pop
mov
and
dec
mov
or
add
mov
stos
sub
hlt
cmp
jmp
push
mov
(bad)
mov
push
fistp
lock
arpl
arpl
dec
retf
pop
sahf
sti
push
and
mov
lahf
shr
adc
mov
add
sub
pop
dec
sub
nop
or
sti
mov
or
sbb
adc
ret
fwait
aaa
imul
sar
sub
jae
sub
mov
pop
fistp
inc
xor
fwait
sar
and
and
cwde
div
cmp
adc
push
jmp
ror
and
jnp
push
imul
inc
or
sbb
sbb
stos
pop
(bad)
fwait
je
jl
imul
xor
mov
sbb
sub
jmp
add
inc
neg
mov
xchg
push
sub
sbb
pop
adc
sbb
sbb
xor
sbb
or
ret
fs
mov
inc
pop
push
outs
or
sti
mov
pop
arpl
mov
ds
lock
cmp
jo
pusha
push
adc
movs
imul
sub
and
mov
imul
ds
inc
or
adc
and
inc
pop
daa
mov
(bad)
loop
repnz
fcom
movs
addr16
arpl
add
call
dec
mov
mov
jl
(bad)
jp
jnp
mov
loope
aam
ss
adc
fcomp
xor
cld
cmps
xor
nop
mov
das
das
sub
std
in
ds
jae
mov
daa
mov
and
call
(bad)
push
sub
and
sbb
sbb
dec
pop
xchg
stos
adc
imul
and
mov
pop
cmp
ds
sbb
fimul
mov
push
scas
xor
push
nop
add
cli
jnp
push
xlat
(bad)
cmc
push
adc
rcl
push
(bad)
push
out
retf
loope
sar
cmp
hlt
fistp
jmp
sar
and
or
cs
ds
fadd
mov
push
mov
ret
mov
stc
into
sbb
adc
pop
(bad)
stos
scas
jnp
mov
das
xchg
jp
mov
cmp
mov
mul
adc
jmp
add
and
and
jg
dec
mov
arpl
jnp
push
add
fucomp
cmp
popa
adc
push
mov
neg
repz
jnp
pop
pop
push
sahf
outs
cmp
dec
ds
repnz
mov
push
mov
lods
mov
fs
cmps
lock
hlt
push
push
test
cmc
mov
push
sbb
adc
movs
push
ret
imul
dec
mov
sahf
cmps
out
xchg
retf
jmp
lods
rcr
enter
cld
pop
inc
or
(bad)
fdiv
dec
ficom
repz
add
adc
mov
adc
repnz
fwait
push
jnp
test
aaa
test
adc
cmp
sbb
mov
pusha
mov
aam
daa
sti
fsubr
arpl
jo
inc
rcr
mov
sahf
adc
iret
xchg
xor
push
mov
jb
jp
push
int
cmp
movzx
ret
out
sbb
or
xchg
ss
fwait
push
xchg
adc
sub
test
add
sar
fs
lods
rep
int
sbb
arpl
jg
aaa
push
push
shl
rcl
into
ret
fs
js
mov
adc
pushf
jbe
push
pop
in
mov
xchg
js
std
div
test
(bad)
xor
inc
pop
mov
ficom
xchg
adc
xchg
loop
add
jae
mov
pop
dec
jmp
dec
and
xchg
mov
out
push
pop
clc
pop
sar
mov
aad
pop
in
pop
jmp
xchg
mov
sub
sbb
jae
inc
cmps
in
cmp
in
jmp
js
xchg
scas
jnp
cmp
pop
imul
mov
jo
mov
xchg
jmp
jae
sbb
mov
fisub
mov
pop
aam
imul
pop
test
mov
inc
stos
mov
out
cmps
cmp
cmps
push
in
mov
notrack
dec
xchg
rcr
repz
stos
fs
imul
fcmovne
jecxz
push
scas
cmp
adc
test
mov
mov
call
arpl
inc
or
dec
dec
jae
test
add
xchg
cmps
call
mov
(bad)
push
pop
pop
jmp
imul
repz
sub
ins
or
or
out
daa
iret
int3
stos
or
sahf
(bad)
xor
mov
xchg
push
adc
mov
xor
fiadd
fcom
mov
fcmovb
fst
data16
pop
cmp
xor
cs
std
dec
xor
lahf
(bad)
stos
pop
adc
dec
ret
fs
xchg
fild
jl
mov
sbb
push
adc
mov
lds
cmp
adc
xchg
je
cmps
mov
pop
xlat
arpl
mov
mov
xchg
and
retf
xchg
mov
out
add
cmps
cmp
dec
adc
(bad)
repnz
in
xchg
lods
jmp
repnz
mov
mov
sub
push
mov
jl
push
nop
scas
mov
adc
jecxz
fistp
fdivr
clc
xlat
xor
jnp
aaa
xchg
inc
cmps
mov
mov
aad
sbb
inc
mov
(bad)
push
xchg
jp
jg
dec
add
cwde
cmps
jb
dec
sbb
add
adc
retf
inc
sbb
(bad)
dec
shl
and
jo
mov
push
adc
pusha
jo
jp
push
xor
mov
retf
adc
cmp
push
adc
pusha
mov
pop
lods
out
lock
retf
(bad)
lods
out
ja
and
ret
not
imul
aaa
push
add
jb
mov
xchg
fdivr
std
test
retf
or
dec
out
cmps
imul
mov
sub
cs
sbb
iret
mov
jp
clc
jl
(bad)
ja
push
not
pop
shl
lds
push
mov
sbb
cmp
jnp
pop
xchg
mov
xchg
fcmovne
scas
cmps
xor
vcvttss2si
and
mov
sub
les
int3
xchg
or
daa
out
dec
retf
push
or
push
repnz
mov
rcr
rcl
rcl
outs
push
out
fistp
ds
and
mov
(bad)
(bad)
adc
xor
adc
push
mov
mov
leave
retf
mov
cmp
fistp
dec
add
fsubr
or
pusha
sti
clc
cmp
daa
(bad)
mov
into
xchg
sub
ss
push
bound
inc
push
in
leave
cli
(bad)
xor
into
int3
stos
sbb
icebp
sub
and
adc
mov
sub
or
jmp
(bad)
dec
jmp
mov
dec
out
xchg
xor
rcpps
sub
sub
mov
jb
fadd
hlt
jle
pop
mov
xchg
push
sahf
sub
imul
xchg
lods
cli
out
mov
push
imul
pop
xor
inc
pop
out
mov
pop
in
cli
xchg
cmps
dec
fidivr
ss
xchg
adc
mov
cmp
push
call
mov
push
ins
jecxz
mov
data16
xor
add
adc
addr16
add
sub
sub
lock
shr
aad
scas
scas
into
sbb
daa
out
dec
pop
js
repnz
js
or
retf
(bad)
fadd
imul
mov
sbb
sahf
sub
out
push
sbb
(bad)
fild
iret
mov
pop
push
sub
rol
jae
scas
adc
cpuid
sar
into
shr
mov
inc
test
adc
jmp
push
mov
clc
add
ds
mov
mov
rcl
jle
xlat
xchg
ret
mov
clc
cmp
mov
xor
sbb
and
jae
and
cld
and
jle
or
jbe
inc
jmp
dec
cmp
xchg
out
bswap
mov
push
xchg
jnp
mov
adc
pusha
out
cmps
inc
jl
outs
push
jnp
jle
cmp
pop
adc
aas
iret
push
push
cmps
adc
and
out
(bad)
pusha
cmp
movs
jmp
(bad)
mov
test
xor
push
push
jecxz
cs
jae
inc
dec
fdivrp
cs
mov
into
push
sahf
stos
and
mov
ss
pusha
push
mov
loop
push
mov
inc
fild
(bad)
out
(bad)
mov
mov
je
fild
jb
aaa
adc
arpl
hlt
inc
in
jmp
stos
mov
jl
cmp
mov
xchg
add
(bad)
jp
xchg
sbb
mov
or
cwde
fistp
rcl
cmp
sub
mov
or
sub
or
pop
sti
mov
mov
idiv
js
retf
sahf
xor
daa
outs
xor
mov
sbb
push
pop
sub
cwde
into
or
shl
fwait
mov
retf
clc
loop
and
mov
push
(bad)
ret
ret
outs
stos
ss
cmp
pop
mov
xor
mul
aad
mov
inc
js
cmp
fstp
test
ss
mov
ja
dec
pop
mov
xor
mov
out
xchg
cmp
(bad)
adc
test
xor
shr
pop
pushf
mov
hlt
movs
fnstsw
or
cmps
into
fisub
fstp
mov
xchg
push
jmp
jmp
jbe
in
jmp
dec
mov
shr
mov
test
and
test
sbb
jns
jo
test
imul
lea
fwait
mov
add
bound
adc
xchg
xchg
iret
stos
xchg
xchg
xor
arpl
ins
data16
mov
hlt
mov
sti
cmps
inc
mov
das
fdiv
pop
add
mov
sub
add
retf
push
mov
aam
out
test
xor
sbb
fwait
push
aam
aaa
push
and
sub
aaa
jo
out
in
push
je
jae
xor
ja
add
in
outs
daa
std
mov
inc
push
js
scas
dec
sbb
out
loop
arpl
xchg
ret
cmp
mov
in
ret
xchg
aaa
arpl
push
sub
sti
neg
mov
ins
out
jge
mov
adc
out
ds
jnp
dec
mov
push
pop
push
adc
jb
retf
ds
ins
jecxz
jecxz
aas
shr
jae
push
sbb
push
push
and
(bad)
cli
hlt
xor
jmp
jg
and
push
out
scas
sti
aad
into
test
ss
xor
sub
adc
mov
xor
and
call
sub
pop
adc
nop
dec
push
mov
mov
mov
dec
imul
sub
stos
sbb
mov
cdq
sahf
fimul
mov
sbb
mov
dec
adc
daa
mov
dec
inc
jmp
cmps
retf
(bad)
out
add
rcr
popf
mov
jnp
mov
xchg
sar
pushf
repnz
mov
sbb
pushf
rcr
repz
and
cli
(bad)
mov
ret
jae
adc
pop
in
cli
sti
pop
retf
jmp
sub
inc
push
and
imul
retf
dec
inc
or
outs
imul
inc
jae
push
ins
cmp
mov
ret
fiadd
jmp
jnp
(bad)
mov
mov
sti
pop
retf
jnp
(bad)
cld
mov
cli
rol
jae
add
(bad)
adc
out
nop
push
aam
or
xor
stos
popa
mov
cmp
jo
dec
jmp
inc
ds
mov
ret
cmp
pushf
sti
cmc
cwde
imul
sbb
push
and
imul
aaa
mov
pop
mov
mov
pop
inc
inc
lods
add
pop
mov
ret
stos
dec
inc
sbb
pusha
fwait
cmp
and
dec
cld
mov
mov
xor
push
sbb
adc
mov
xchg
mov
xchg
rol
mov
cmp
daa
pop
adc
push
repnz
jo
retf
inc
xor
retf
in
ret
jae
jl
inc
jmp
add
(bad)
and
jnp
jecxz
repz
cmp
xchg
enter
dec
adc
aam
jg
or
pop
dec
and
js
inc
mov
cmp
cmp
add
pushf
shl
test
repz
lods
sti
mov
push
xor
ret
shr
fdiv
mov
pop
les
stos
mov
xor
or
push
mov
into
fwait
out
retf
dec
jmp
adc
arpl
push
add
sti
mov
out
inc
mov
shr
fcom
sub
outs
cmp
jmp
mov
ins
inc
cmps
sbb
arpl
test
push
pop
sti
imul
ret
mov
adc
retf
mov
xchg
push
or
push
mov
fcmovnbe
popa
and
jge
aaa
fwait
or
lods
jmp
sti
mov
(bad)
pusha
retf
xor
pop
(bad)
push
cmp
mov
dec
into
push
out
out
mov
xchg
and
rcr
(bad)
mov
mov
arpl
add
fist
ja
fwait
adc
test
push
jbe
vpmacsswd
xor
fcmovne
fist
cmp
fcomp
and
arpl
jae
mov
jo
mov
dec
or
xlat
xor
mov
ds
dec
ss
sbb
mov
out
scas
pop
or
sub
test
iret
mov
cwde
inc
mov
aaa
pop
push
jg
jo
(bad)
push
leave
inc
test
dec
cmp
fmul
shl
fistp
pop
push
aaa
mov
mov
fwait
je
push
mov
mov
test
dec
jae
stos
jno
inc
mov
fcmovnu
push
xchg
sbb
cmp
and
and
lahf
adc
cmps
push
jl
jle
mov
nop
xchg
cli
mov
push
mov
mov
cld
push
inc
mov
xchg
rcr
or
test
in
cmps
iret
lock
shl
mov
cdq
cwde
jbe
jle
mov
nop
stos
jecxz
or
cmp
add
and
js
(bad)
mov
mov
add
dec
mov
mov
xor
lahf
cli
mov
dec
mov
jno
push
mov
mov
cmp
xchg
(bad)
fist
inc
repz
mov
add
mov
movs
pop
(bad)
call
jg
add
lods
test
repz
and
mov
cdq
or
jno
mov
adc
stos
inc
mov
push
xchg
in
jbe
(bad)
pop
adc
loopne
pop
enter
std
mov
in
daa
outs
xlat
out
and
mov
arpl
sub
sub
jle
fstp
(bad)
mov
push
sbb
cmp
cmps
arpl
dec
shl
dec
clc
repnz
and
enter
push
iret
mov
jmp
jnp
adc
or
aas
inc
xor
lahf
xchg
dec
mov
sub
or
sub
cmp
or
cmps
mov
lahf
sbb
and
loopne
mov
mov
mov
lea
xor
inc
sbb
sub
sub
sub
repz
dec
(bad)
sub
xchg
rcr
push
pop
inc
cld
cmp
dec
inc
out
cmp
out
repz
cmp
xor
sti
and
inc
pop
out
arpl
dec
adc
out
cmp
popa
stos
iret
jecxz
rcr
inc
or
data16
(bad)
mov
jmp
stos
pop
shl
iret
ret
fild
pop
mov
inc
jbe
es
sbb
scas
mov
fcmovnbe
std
jge
repz
adc
fiadd
push
stos
daa
cmp
lods
lock
mov
sub
call
xor
jbe
fstp
mov
fcmovu
jnp
mov
or
(bad)
push
call
movs
cli
outs
sar
dec
inc
not
pop
adc
push
btc
sub
jo
retf
xor
daa
cwde
jae
push
sbb
(bad)
and
jnp
jecxz
repz
jb
enter
dec
call
jg
or
cmp
js
inc
mov
cmp
cmp
add
aaa
test
repz
dec
sti
push
xor
lahf
xor
ret
mov
fdiv
mov
xor
call
adc
or
push
mov
sub
nop
dec
jmp
adc
arpl
push
add
sti
push
retf
jnp
jp
inc
mov
rcl
xchg
ja
add
add
stos
pop
lock
mov
ins
inc
cmps
sbb
arpl
test
push
pop
sti
outs
arpl
jae
mov
adc
retf
data16
mov
(bad)
mov
pop
int3
mov
and
xchg
or
sti
pop
mov
push
mov
ret
jae
imul
push
mov
pop
mov
mov
out
inc
mov
add
pop
mov
rcr
stos
pop
inc
sbb
pusha
fwait
cmp
and
pop
ret
cmp
push
nop
push
sahf
popa
adc
add
jb
push
mov
adc
add
or
scas
popf
mov
(bad)
fdivrp
push
jns
retf
jle
xchg
inc
dec
repz
in
mov
jae
mov
add
cs
mov
xchg
pop
cmove
mov
push
das
jecxz
aaa
hlt
adc
lods
sub
push
jnp
push
scas
jb
mov
ds
mov
pop
enter
and
sbb
loope
xchg
dec
mov
(bad)
sbb
jo
push
imul
add
jb
add
outs
(bad)
test
test
or
adc
xor
ds
out
push
mov
call
push
fwait
cmps
cwde
scas
popw
mov
out
xlat
(bad)
popa
test
push
scas
out
jmp
repnz
mov
test
mov
out
(bad)
push
jecxz
repz
mov
div
inc
mov
adc
pop
ret
loopne
jae
into
sbb
xchg
sbb
or
repz
xchg
outs
fldcw
ds
fs
adc
ror
mov
nop
(bad)
pop
jecxz
and
stos
aas
mov
mov
push
jnp
sar
sbb
mov
sbb
xor
jb
mov
scas
jb
cmc
adc
ret
adc
adc
mov
inc
dec
scas
jmp
mov
lahf
(bad)
out
fidivr
mov
jnp
mov
mov
mov
enter
cli
push
into
mov
or
repnz
mov
inc
pop
nop
or
cmp
push
mov
sbb
retf
inc
and
bound
and
xor
cld
push
in
pop
or
pop
mov
sbb
cmc
movs
and
mov
pop
inc
sub
or
(bad)
sahf
xchg
stos
div
lods
mov
sub
xchg
add
cwde
test
(bad)
jmp
sti
ds
push
and
push
loop
or
popa
mov
cmp
repnz
dec
inc
pop
in
arpl
mov
iret
lods
mov
inc
fstp
mov
es
rcl
addr16
cwde
mov
inc
fist
jne
sti
jae
sbb
hlt
mov
repz
sbb
adc
cmp
ins
movs
pop
retf
sbb
push
mov
imul
sbb
movs
cwde
ds
sub
pusha
out
test
xor
ss
adc
call
sbb
cli
cmp
test
mov
push
jae
stos
and
ja
inc
push
adc
pop
jae
sbb
and
iret
dec
test
and
xchg
imul
dec
inc
cwde
adc
clc
push
inc
aad
add
adc
cmps
jnp
aam
pop
sub
and
int
int
in
jp
pop
jae
sbb
in
out
dec
dec
push
aaa
push
not
call
fcmovb
inc
shr
test
int3
adc
pop
(bad)
sub
cmc
add
jmp
add
push
aaa
fwait
pop
cs
test
xchg
pop
pop
adc
arpl
arpl
sti
push
retf
pop
sahf
sti
push
and
ret
mov
in
adc
mov
add
sub
in
xor
sti
mov
or
sbb
fwait
arpl
ds
mov
mov
jae
push
jae
sub
mov
pop
fistp
inc
xor
fwait
rol
and
and
cwde
bnd
cmp
or
adc
sub
ins
cmps
ror
imul
ror
cmp
jae
inc
or
sbb
xchg
sbb
stos
pop
(bad)
fwait
jne
js
imul
xor
xor
call
out
pop
scas
retf
add
xchg
fninit
or
jecxz
pop
xor
and
dec
pop
push
jnp
mov
push
push
in
out
dec
or
xchg
stos
mov
adc
add
inc
popf
clc
xchg
push
inc
sbb
jmp
mov
retf
mov
sub
dec
sbb
outs
or
mov
sbb
push
stos
mov
sbb
jecxz
retf
mov
xchg
loopne
push
add
ins
es
push
sbb
mov
mov
arpl
mov
daa
imul
aaa
inc
add
push
aam
movs
or
push
data16
retf
or
jno
(bad)
shr
xchg
mov
mul
jnp
test
dec
fwait
imul
cmps
pop
das
mov
fs
loopne
mov
add
cdq
repnz
(bad)
dec
arpl
pop
(bad)
(bad)
fild
or
test
ret
pushf
les
push
inc
sbb
dec
mov
push
jo
cmp
aam
pop
shr
cmp
inc
xchg
cdq
jmp
add
xor
xor
scas
idiv
setle
aas
jbe
std
fdiv
mov
sub
lods
mov
pop
xchg
arpl
xor
jnp
dec
pop
push
repnz
(bad)
bound
xor
out
out
hlt
outs
xchg
xchg
out
xor
add
jg
mov
std
fwait
mov
inc
or
(bad)
in
pop
fisttp
pop
pusha
cld
pop
in
cmps
lahf
adc
push
push
cmps
mov
mov
and
out
sbb
packsswb
sub
xor
outs
arpl
dec
enter
out
jo
retf
or
jae
cmps
scas
stos
mov
adc
mov
or
xchg
push
pop
addr16
mov
jmp
mov
sar
scas
mov
out
stos
xor
ss
sub
dec
jo
aaa
rcr
ins
es
shl
lods
repz
jmp
jle
jno
cmp
sti
dec
retf
jl
xchg
stos
sbb
sbb
rol
cld
lods
adc
mov
ss
cwde
fisubr
(bad)
mov
inc
scas
stos
cmc
adc
mov
add
je
inc
sbb
aad
imul
fist
jecxz
sub
jo
xor
add
aam
and
sbb
gs
pop
mov
fist
pop
aaa
iret
repz
ror
fcom
or
sti
and
rcr
scas
dec
into
mov
(bad)
sbb
loope
lahf
mov
dec
jmp
adc
daa
retf
jae
inc
pop
cmp
hlt
mov
push
xor
and
addr16
sub
pop
add
in
dec
arpl
(bad)
popa
inc
push
push
jmp
cmp
fisubr
stos
std
iret
scas
xchg
outs
ins
scas
jnp
mov
pop
jb
or
fdiv
push
cmp
mov
out
dec
repz
int
outs
retf
jnp
and
or
aam
push
retf
not
sub
xchg
call
ret
ja
loopne
xor
mov
jbe
retf
or
pop
add
retf
add
ins
adc
xchg
adc
aas
xor
call
jae
mov
jmp
jnp
or
repz
shl
add
test
sbb
outs
or
jae
sti
in
dec
mov
loopne
cli
adc
dec
mov
and
adc
pop
add
inc
or
enter
mov
out
ficom
fwait
mov
xor
cs
call
mov
mov
mov
cmp
pop
xor
adc
dec
push
or
jg
jmp
sbb
jmp
lods
jge
and
mov
into
rdmsr
push
ja
div
adc
jnp
or
sub
jbe
repnz
ret
outs
mov
sbb
jbe
sub
sub
push
mov
xchg
call
repz
int3
jb
test
cli
add
xor
bound
and
leave
jno
adc
(bad)
cmp
xchg
inc
cmps
xor
xor
jmp
adc
pop
mov
sub
mul
out
inc
mov
shl
add
arpl
stos
pop
lock
mov
push
adc
arpl
test
push
pop
sti
arpl
mov
adc
retf
push
(bad)
or
push
mov
rcl
mul
xor
mov
sub
out
or
in
scas
add
pop
add
jae
imul
mov
mov
xchg
inc
lahf
lods
add
pop
mov
enter
out
sbb
pusha
fwait
cmp
and
xor
cld
mov
mov
cmp
fcomp
jmp
dec
mov
xchg
xor
xchg
or
xchg
rol
push
movs
cli
outs
sar
inc
inc
adc
xor
stos
jp
sub
jo
retf
aaa
xor
add
in
ret
jae
nop
jmp
add
(bad)
and
jnp
jecxz
repz
cmp
xchg
enter
dec
fwait
pop
mov
mov
or
add
js
inc
test
cmp
cmp
add
adc
inc
repz
xor
imul
xor
ret
xchg
sub
fdiv
mov
daa
cmp
jg
mov
or
(bad)
fstp
jmp
ja
fwait
pop
loop
xchg
ja
repnz
cwde
cmp
jae
pop
dec
inc
jnp
jbe
inc
sbb
es
adc
xchg
outs
mov
in
xlat
mov
inc
push
add
cmp
add
lahf
jecxz
fwait
adc
jnp
sbb
pop
mov
push
adc
mov
mov
mov
sbb
iret
scas
mov
pop
outs
lahf
ins
mov
dec
pop
cmps
sub
mov
(bad)
shr
enter
mov
fsubr
mov
inc
out
xor
ds
push
sub
jecxz
cli
lsl
adc
jmp
mov
xlat
mov
fstp
mov
pushf
test
inc
arpl
aaa
out
inc
cmp
push
add
mov
fcmovnbe
pop
sbb
sbb
rcl
in
push
fcmovnb
add
pop
aam
gs
pusha
dec
and
mov
(bad)
stos
sbb
stos
mov
rcr
add
adc
fs
dec
push
inc
inc
jmp
add
mov
sbb
pop
das
iret
enter
xor
sbb
sbb
scas
sub
outs
xor
mov
stos
cmps
dec
or
das
xchg
xchg
imul
gs
cld
mov
mov
dec
cmp
xchg
push
int3
stos
mov
sub
in
gs
or
pop
hlt
rcl
retf
fidiv
js
ret
xchg
push
add
outs
ja
pop
es
outs
stos
imul
gs
xchg
call
pop
sub
cmps
mov
in
xlat
out
pop
and
mov
jmp
outs
jnp
shl
push
das
out
xor
gs
jl
bswap
rcl
out
push
sbb
int3
dec
dec
or
pop
xor
jg
push
adc
xor
adc
mov
mov
icebp
loopne
jbe
mov
inc
arpl
inc
adc
jo
iret
dec
test
and
repz
jae
add
add
retf
cmp
lock
stos
pop
fdivr
repz
xor
sbb
cmps
jnp
add
cdq
shr
dec
outs
xor
xchg
or
inc
push
add
iret
xchg
sub
push
jle
inc
cwde
in
xchg
jb
lahf
dec
enter
push
xor
xchg
(bad)
fild
shr
xor
lods
sti
popa
hlt
mov
cli
mov
sahf
(bad)
sti
cmps
and
mov
fwait
mov
pop
cld
xchg
xchg
xchg
jb
lahf
or
mov
xchg
ret
sbb
fs
call
outs
xor
aaa
stos
sbb
mov
add
push
add
mov
fwait
sub
sub
pop
add
ret
arpl
mov
fild
push
or
xor
push
jecxz
movs
fild
jnp
mov
xchg
sar
pushf
repnz
mov
sbb
retf
jno
int
mov
or
dec
pusha
dec
cmps
add
ret
arpl
enter
mov
mov
sbb
jo
mov
(bad)
call
ret
jae
adc
sub
inc
(bad)
and
jnp
jecxz
repz
xchg
enter
dec
jns
adc
mov
or
mov
xchg
inc
mov
mov
cmp
add
adc
inc
repz
(bad)
jg
push
xor
ret
scas
sub
fdiv
mov
repz
cmps
mov
xor
or
push
mov
xchg
retf
dec
jmp
adc
mov
pop
mov
(bad)
and
out
inc
mov
ror
xchg
ja
add
fcomi
stos
pop
lock
mov
mov
cmps
sbb
arpl
fimul
mov
dec
jae
mov
adc
retf
neg
push
push
or
push
mov
retf
rcr
and
mov
xor
pop
or
in
scas
add
pop
test
push
mov
ret
jae
imul
mov
pop
mov
mov
js
ret
lods
add
pop
mov
int
loope
rol
pusha
fwait
cmp
cld
mov
mov
cmp
adc
mov
xchg
(bad)
mov
rol
scas
(bad)
adc
les
push
or
(bad)
gs
pop
sti
mov
push
sub
test
fwait
xchg
mov
(bad)
push
out
xor
mov
scas
(bad)
(bad)
and
xchg
push
push
push
xchg
mov
jae
inc
in
sub
popf
dec
dec
jl
sbb
inc
mov
imul
aas
inc
ret
jg
sub
mov
or
cmp
inc
jl
mov
das
sahf
loop
out
sar
cs
or
or
xchg
adc
push
mov
or
idiv
cs
mov
mov
cmp
sbb
(bad)
push
fdivr
ficom
jnp
sbb
repz
test
es
adc
pop
mov
jmp
outs
add
scas
xchg
ret
mov
cmps
and
xor
and
mov
sub
sti
mov
inc
(bad)
pop
mov
sbb
pop
pop
aam
daa
inc
fist
push
iret
mul
xchg
mov
jmp
(bad)
pop
enter
sbb
add
or
sti
stos
jmp
adc
xchg
stos
jecxz
loope
out
sub
out
aas
test
and
dec
and
rcl
outs
add
xchg
sub
sahf
or
add
mov
mov
xchg
push
aam
div
hlt
mov
add
push
mov
arpl
sbb
mov
ret
fwait
pop
imul
repnz
shl
hlt
inc
push
mov
into
sbb
stos
adc
sub
fdivr
and
out
mov
dec
push
in
scas
pop
jmp
cmps
ja
je
fild
addr16
paddb
(bad)
or
sbb
add
aaa
div
lahf
ins
pop
cmps
inc
add
cmp
imul
jmp
iret
dec
mov
ret
aaa
fs
add
xchg
fcmovnbe
mov
sub
ror
jnp
enter
sub
jae
mov
add
dec
cmp
stos
(bad)
cmp
scas
inc
push
adc
aas
xor
movs
jecxz
pushf
sbb
jmp
dec
js
add
idiv
xor
fmul
push
movs
pushf
adc
jmp
jmp
outs
imul
imul
inc
(bad)
in
(bad)
daa
inc
mov
pop
inc
lods
data16
dec
retf
cmps
and
mov
(bad)
je
push
xchg
fisttp
movs
movs
jecxz
pushf
retf
aaa
fs
add
inc
cmp
stos
cmps
inc
sbb
sub
fmul
in
(bad)
les
adc
shr
inc
xchg
and
mov
push
fs
xchg
retf
(bad)
retf
movs
sahf
cmp
jbe
xor
or
je
fild
addr16
paddb
mov
pop
in
daa
out
inc
(bad)
jl
pop
out
in
fld
mov
dec
fmul
ja
retf
jle
pop
daa
sub
push
pop
adc
lahf
add
mov
cmp
xchg
movs
fdivp
movs
and
and
jno
mov
(bad)
in
cli
jae
jg
(bad)
retf
das
inc
mov
sub
addr16
outs
sbb
push
div
fs
add
xchg
fcmovnbe
mov
cmp
sahf
out
aas
and
pop
cli
aam
jbe
or
sti
neg
jl
push
jnp
and
repz
int3
xchg
adc
jmp
hlt
(bad)
push
fsubr
dec
add
xchg
fstp
or
mov
pop
repnz
aam
mov
jb
pop
repnz
xor
sti
ins
out
in
retf
inc
xchg
fadd
shld
mov
or
xor
lahf
test
mov
cmp
xchg
xchg
sar
test
jg
hlt
jns
pop
adc
mov
xlat
movs
sbb
aas
iret
and
aaa
retf
fdivr
and
daa
sub
cli
dec
adc
jg
es
mov
sub
faddp
fimul
iret
movs
in
aam
les
pop
add
(bad)
jle
adc
fs
scas
sub
xchg
scas
idiv
xchg
push
cli
pop
fwait
dec
xor
and
push
sbb
or
out
shl
jmp
loop
repnz
or
sbb
das
inc
or
cmp
sub
addr16
mov
ret
call
aaa
dec
cmp
jg
(bad)
mov
imul
in
jnp
rcr
cmps
out
mov
inc
push
fld
inc
push
call
fisub
cs
xchg
xchg
push
adc
dec
dec
inc
jle
(bad)
push
mov
dec
xchg
xchg
fiadd
out
les
adc
add
inc
push
fld
push
sbb
push
pop
imul
int3
mov
inc
mov
pop
add
push
rol
dec
in
jmp
xchg
into
(bad)
retf
movs
sahf
(bad)
pushf
fwait
mov
sar
in
push
repz
jbe
push
sub
pop
add
in
cmps
sbb
repnz
jmp
cmps
dec
jae
and
out
sbb
aas
iret
cmp
xchg
xchg
iret
aas
int3
cmps
inc
(bad)
in
ins
scas
jg
out
inc
mov
xor
outs
mov
ret
fs
fiadd
sahf
sub
das
xchg
imul
(bad)
xchg
adc
iret
shl
jmp
mov
data16
cmp
or
pop
cli
imul
cmps
and
mov
mov
cmp
ret
test
shld
mov
jmp
pop
mov
(bad)
jle
outs
movs
sbb
xchg
je
retw
aas
push
mov
xchg
in
inc
out
jbe
xor
pandn
stos
cmp
and
int3
lahf
xor
mov
sti
xchg
xor
(bad)
ins
stos
and
xor
fistp
repnz
ja
jmp
in
aam
jg
hlt
xchg
cwde
push
adc
hlt
push
inc
mov
movs
xor
cld
inc
pop
ja
inc
dec
fld
scas
jg
ret
inc
xlat
pop
movs
dec
adc
push
pop
push
xor
inc
cmp
sub
fsubr
pop
cmps
out
cmp
movs
pop
mov
jp
pop
(bad)
ja
mov
and
mov
call
mov
adc
pop
movs
pop
test
(bad)
jle
arpl
in
jo
out
pop
das
xor
in
jg
jg
hlt
sti
push
fsubrp
out
dec
sub
push
pushf
mov
retf
cmps
addr16
dec
iret
jle
mov
push
shl
sar
xchg
out
sbb
mov
mov
adc
mov
scas
dec
add
xchg
fcmovnbe
mov
mov
shr
xor
pminsw
ror
xchg
push
scas
mov
xchg
xor
shl
add
inc
sub
sub
add
pop
xchg
mov
sbb
pop
movs
pop
jbe
xor
retf
sbb
sbb
add
sar
int3
adc
adc
mov
cmps
cs
mul
jl
xlat
push
cmove
fwait
addr16
mov
cld
movs
dec
ret
call
mov
xlat
movs
sbb
aas
iret
cmp
xchg
movs
(bad)
jle
add
ss
jg
sti
pop
in
scas
pop
jnp
dec
push
pop
out
in
add
and
lea
std
rcr
cs
cs
add
add
push
outs
jae
push
repz
pop
das
in
mov
fcom
push
loopne
push
mov
fsubr
out
add
out
(bad)
pop
xlat
movs
sbb
mov
imul
int3
mov
add
pushf
mov
hlt
into
shr
jl
ins
inc
pusha
xor
mov
ffreep
mov
ret
push
sahf
sub
les
dec
mov
add
add
push
outs
jae
push
repz
pop
das
in
sti
push
mov
aam
xor
xchg
lods
imul
(bad)
and
out
sbb
mov
and
sub
test
inc
(bad)
in
sti
cs
cld
mov
jbe
(bad)
xchg
adc
inc
jle
cmp
sbb
movs
jecxz
in
scas
inc
into
sbb
outs
sub
test
aaa
call
ror
jnp
mov
xchg
push
movs
pushf
pop
mov
jecxz
sti
(bad)
and
mov
push
jecxz
sbb
mov
push
xor
test
push
jmp
loop
imul
push
push
adc
fwait
test
enter
out
jg
sbb
lods
movs
pop
xchg
jg
push
push
xchg
movs
sbb
mov
rcr
test
stos
cld
xor
aam
inc
mov
out
arpl
dec
lahf
push
and
inc
or
pandn
retf
jb
and
pop
xchg
mov
xchg
xchg
inc
and
jbe
pop
ficom
sbb
aas
into
inc
adc
cli
ret
or
pop
pop
mov
cs
xchg
test
aas
mov
add
in
inc
scas
jg
hlt
xchg
cmp
add
movs
sbb
sub
cmp
mov
inc
scas
jg
hlt
repz
dec
pop
imul
dec
(bad)
ins
or
cmp
repz
int3
and
pop
xchg
mov
dec
ds
arpl
ins
adc
cmp
xchg
aas
dec
adc
mov
outs
pop
or
ficom
imul
push
mov
or
outs
in
add
pop
or
fidivr
push
fild
inc
fwait
imul
repz
pop
cmps
mov
dec
adc
pop
pop
inc
lahf
cmp
inc
ret
cmp
add
neg
ss
jbe
or
push
pop
pop
(bad)
jg
adc
stos
das
inc
or
cmp
pop
xchg
jecxz
mov
lds
cs
outs
mov
sub
out
test
out
mov
outs
scas
jg
hlt
sbb
lods
adc
add
pop
jl
xchg
addr16
js
add
mov
dec
(bad)
adc
jmp
hlt
jecxz
jmp
pop
cmp
and
out
mov
pop
xchg
jecxz
mov
mov
daa
pop
in
(bad)
dec
lahf
test
or
sub
sub
jecxz
mov
jmp
dec
(bad)
in
add
push
xchg
out
in
das
push
aas
jb
(bad)
outs
mul
outs
inc
xchg
in
aam
push
aaa
mov
mov
ins
imul
sub
retf
mov
dec
ret
push
daa
test
mov
(bad)
je
push
ret
div
pminsw
hlt
mov
aaa
mul
jge
xchg
out
repnz
xchg
out
test
mov
push
sahf
sub
inc
mov
push
xchg
push
scas
in
xor
jl
ficom
sbb
jo
aam
pop
xchg
mov
aad
cmp
inc
pop
lods
pop
cs
pop
inc
or
pandn
fdivr
push
cmp
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
jl
cmp
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
pop
jae
cmps
fist
stos
jecxz
rep
(bad)
lahf
xlat
outs
daa
jg
dec
pop
pop
pop
das
addr16
ja
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fcmovnbe
mov
ret
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fld
mov
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
mov
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
mov
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
aam
cmp
inc
sbb
mov
fist
je
fwait
shr
jnp
dec
add
or
push
adc
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
or
push
jmp
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
je
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
and
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
mov
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
repz
push
jmp
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
or
daa
test
mov
scas
xor
clc
lods
cli
mov
daa
imul
outs
es
mov
lahf
(bad)
retf
jmp
mov
push
push
dec
push
jbe
arpl
or
dec
push
test
sti
icebp
scas
xor
in
div
dec
ins
pop
jg
arpl
arpl
sbb
jmp
cld
enter
inc
ds
cs
sbb
or
dec
cmp
retf
imul
mov
stos
or
xor
bound
fs
jne
mov
loopne
xchg
fld
call
inc
pop
sub
cmp
outs
aaa
ja
mov
cli
rcr
or
div
aas
ja
jbe
pop
dec
cmp
sub
pop
cdq
lea
xchg
retf
xchg
out
cmc
mov
dec
xor
sub
cmp
lahf
mov
fcomi
ret
or
test
push
or
inc
dec
and
outs
jl
push
lahf
jecxz
fdivr
mov
shl
cmps
in
mov
fist
push
ja
aaa
inc
adc
js
jae
stos
int3
mov
loopne
xchg
sti
xlat
in
retf
rcr
dec
adc
ins
sbb
add
adc
xor
fptan
mov
lock
mov
ret
call
pop
or
adc
pop
xor
dec
xor
lock
fbld
mov
push
cmp
and
and
add
daa
stos
loope
repnz
test
ret
mov
jmp
sub
push
inc
or
add
mov
icebp
fwait
(bad)
cli
xchg
stc
ret
call
sbb
add
bound
ja
stos
xchg
mov
(bad)
fbld
fisttp
inc
push
push
jno
dec
es
aas
cmp
jecxz
mov
mov
mov
lods
shl
ins
sbb
pusha
pop
adc
pop
add
mov
call
xchg
call
daa
cmp
and
xor
push
fmul
nop
out
xchg
out
jecxz
and
push
or
inc
dec
and
or
inc
pop
mov
(bad)
(bad)
mov
and
out
scas
fist
and
ja
daa
jnp
push
xor
mov
lahf
fisttp
cmp
retf
xchg
cli
xchg
sub
push
and
ja
daa
jnp
jns
jg
jmp
mov
retf
in
test
xchg
out
loop
dec
cmp
jo
sub
and
adc
jae
stos
int3
mov
out
xchg
enter
fidiv
sub
pusha
dec
add
dec
jb
daa
mov
loopne
repnz
(bad)
mov
inc
pop
ja
pop
cmp
add
addr16
(bad)
jmp
cwde
repz
mov
mov
push
or
sbb
jl
jg
pop
adc
jecxz
hlt
xchg
(bad)
in
jmp
cld
int3
call
inc
cmp
jno
popa
inc
add
add
sub
stos
jmp
(bad)
mov
call
pop
or
popa
imul
dec
and
add
hlt
xchg
mov
lahf
pushf
clc
cmp
and
and
sub
sti
fnsave
mov
repz
dec
push
pop
adc
dec
dec
adc
adc
jne
jmp
sti
ret
test
fst
stc
mov
push
xor
sub
sub
pop
add
outs
ss
movs
fcom
mov
in
add
jno
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
test
cli
cli
sahf
retf
jecxz
mov
shl
or
dec
push
dec
or
ins
cmp
or
mov
mov
and
add
fs
imul
cmp
cwde
mov
enter
retf
jno
push
inc
dec
ja
push
jae
adc
or
sub
fwait
jecxz
xor
aaa
arpl
dec
leave
jne
in
sub
add
test
sub
adc
mov
xchg
jmp
mov
cmp
inc
imul
and
dec
and
xchg
fwait
xchg
fninit
fstp
test
adc
and
arpl
inc
cmp
push
add
or
sti
mov
fwait
mov
mov
mov
imul
xor
sub
cmp
pop
cwde
jmp
(bad)
xchg
ret
fmul
sub
adc
add
sbb
add
and
repz
sti
mov
jecxz
or
cmp
cmp
adc
aas
sbb
fs
cmp
out
and
cwde
mov
rcr
and
pop
jnp
or
imul
adc
pop
adc
out
test
mov
jecxz
add
cmp
dec
std
out
ins
sub
shr
push
and
jmp
sti
or
stos
mov
cmp
mov
jnp
test
retf
sar
cmp
pop
sbb
mov
mov
inc
mov
repz
and
sbb
sub
inc
cli
into
out
mov
btr
addr16
pop
in
cs
and
daa
jo
mov
arpl
out
inc
aas
dec
aam
fadd
mov
aam
jg
xor
xor
das
or
(bad)
cmp
add
icebp
stos
data16
cmp
dec
fwait
inc
xchg
(bad)
pop
xchg
ficom
arpl
stos
or
cmp
cmp
dec
test
arpl
ins
out
daa
and
push
sti
add
sbb
mov
stos
jmp
pop
rcr
xor
arpl
outs
pop
xor
and
add
mov
dec
fwait
pop
inc
xchg
add
pop
mov
es
jae
inc
mov
je
sti
lods
dec
not
stos
or
push
cmps
dec
shr
retf
jecxz
add
sub
jae
inc
sbb
mov
fist
mov
fwait
mov
dec
add
sub
jae
and
jmp
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
repnz
dec
add
sub
outs
outs
jmp
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
rcr
arpl
aas
dec
pop
sub
pop
jae
inc
jg
cdq
mov
(bad)
stc
cmps
(bad)
cmps
sbb
pop
dec
cs
adc
or
push
js
jns
mov
fcmovnu
mov
xchg
xlat
repz
adc
jbe
push
dec
push
arpl
fwait
retf
mov
sti
mov
jecxz
xchg
out
mov
mov
cmp
xor
pop
or
sbb
mov
(bad)
fbld
hlt
xchg
push
push
pop
xor
jnp
pop
push
movhps
sub
retf
retf
jmp
mov
into
ret
rol
imul
cmp
inc
push
pop
or
push
jmp
sti
mov
sbb
stos
jecxz
sub
fwait
shr
jnp
das
add
dec
push
imul
movs
mov
mov
mov
dec
pop
xor
push
cs
or
cmp
push
jmp
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
adc
cmp
ror
(bad)
jecxz
call
jnp
and
xor
adc
jae
inc
sbb
mov
fist
mov
jnp
aas
add
inc
inc
pop
push
arpl
jae
(bad)
sti
fidivr
mov
xchg
jecxz
icebp
add
pop
adc
pop
adc
pop
pop
jae
and
push
jmp
sahf
retf
stos
xchg
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
mov
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
pop
and
or
push
jmp
sti
mov
cmc
xchg
xchg
stos
jecxz
repz
mov
xor
pop
adc
inc
sbb
or
push
jmp
nop
mov
sub
mov
jnp
dec
add
adc
arpl
or
push
mov
fist
mov
fwait
ror
and
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
dec
add
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
inc
fwait
shr
add
ins
xor
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
adc
push
jmp
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
or
dec
ja
adc
arpl
jae
inc
sbb
mov
fist
mov
cmc
xchg
imul
xor
pop
adc
arpl
add
inc
jne
test
fist
mov
fwait
ror
jnp
dec
add
sub
jae
inc
sbb
mov
fist
inc
jnp
dec
add
sub
jae
cs
push
jmp
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
sti
mov
sbb
stos
jecxz
jae
ret
sbb
mov
pop
adc
arpl
shr
and
retf
add
sub
jae
ret
fwait
push
jmp
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
xchg
je
fs
imul
int
cld
movs
out
mov
mov
in
call
enter
sbb
or
fsub
fadd
repz
les
pop
add
retf
and
sbb
or
shl
test
dec
sbb
or
in
movs
jae
dec
loope
and
test
inc
or
imul
fbstp
cmp
hlt
xchg
dec
push
jmp
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
inc
sbb
stos
xchg
add
fist
mov
sub
enter
add
jae
les
mov
and
push
sbb
mov
fadd
sub
(bad)
mov
add
rol
inc
or
cmp
sub
and
mov
movs
in
aam
les
pop
add
xor
and
jno
scas
or
cmp
sub
fadd
aam
les
mov
and
push
sbb
or
ret
sahf
sub
fadd
cli
arpl
mov
mov
add
push
sbb
push
sbb
or
cmp
sub
and
mov
movs
in
aam
les
pop
add
xor
and
stos
jecxz
repz
cmp
sub
fadd
pop
cdq
les
mov
xor
push
sub
shr
dec
inc
sub
pop
adc
arpl
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fcmovnb
stos
jecxz
repz
fwait
shr
jnp
dec
add
jnp
cmp
inc
sbb
mov
fist
mov
fwait
sub
xor
add
sub
jae
inc
sbb
repz
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
sbb
arpl
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
sbb
pop
adc
arpl
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
xor
mov
sbb
stos
jecxz
repz
jnp
dec
push
pop
adc
arpl
jae
inc
sbb
and
mov
sbb
stos
jecxz
repz
retf
shr
jnp
dec
cld
pop
adc
arpl
jae
inc
sbb
mov
fist
mov
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
push
pop
adc
arpl
jae
inc
sbb
mov
ficom
mov
fwait
shr
jnp
dec
add
sub
cmp
inc
sbb
mov
fist
mov
fwait
sar
and
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
cmp
dec
adc
cmp
jae
inc
(bad)
shr
js
dec
or
sub
jo
push
sbb
idiv
ror
fcomp
or
add
inc
or
and
dec
push
inc
leave
fadd
add
pushf
lds
add
pop
adc
pop
push
adc
dec
lock
loopne
rcr
movs
(bad)
xchg
fisttp
popa
push
dec
aaa
maxps
das
cmp
(bad)
xlat
lahf
out
mov
xchg
xchg
fisub
mov
fist
dec
pushf
sti
mov
inc
sbb
arpl
jae
adc
mov
mov
adc
and
xor
outs
and
adc
push
call
sbb
lods
(bad)
push
add
daa
jg
dec
pop
pop
pop
das
addr16
lods
add
ret
std
mov
cmc
fst
add
jno
or
sub
dec
adc
fcom
cdq
mov
leave
xchg
fldenv
add
xor
push
sbb
imul
pop
loopne
test
mov
rcr
xchg
xchg
fbld
add
cmp
push
pop
daa
outs
es
fwait
int3
in
mov
sahf
cmps
out
cmps
sbb
int3
xchg
fsub
dec
and
ins
and
fadd
movs
in
mov
rcl
inc
xor
sub
pushf
sbb
inc
xchg
shr
mov
mov
xlat
pop
add
pop
jno
xor
pop
aas
ja
test
push
push
inc
inc
into
xchg
aam
les
dec
xor
dec
add
je
test
pop
add
fadd
mov
mov
retf
sub
jl
or
jp
test
pop
add
fsub
test
cld
(bad)
mov
fild
das
push
jl
getsec
jg
mov
fsub
lods
aad
(bad)
lea
fadd
adc
xor
and
sub
jae
fmul
mov
ret
fwait
or
loope
icebp
dec
pop
add
xor
jns
or
mov
pusha
cmp
nop
test
mov
clc
mov
rcr
dec
push
dec
js
es
push
inc
sbb
jne
test
xchg
in
movs
std
mov
lds
loopne
adc
js
push
or
sbb
mov
mov
enter
mov
cmp
sub
fadd
aam
inc
repz
fwait
shr
jnp
dec
add
sub
xor
inc
cmp
xchg
xchg
stos
add
xchg
out
cmps
(bad)
mov
scas
sbb
jne
or
arpl
jae
or
fiadd
mov
ret
cwde
pop
push
push
mov
stos
xchg
mov
sbb
sub
ds
(bad)
mov
cmp
out
xchg
into
xchg
push
cmps
push
pop
add
jns
imul
in
xchg
fadd
in
aad
cmp
inc
in
jmp
stc
mov
sbb
test
push
pop
push
or
mov
shr
jnp
dec
add
outs
es
mov
sahf
(bad)
mov
xchg
xchg
out
cmps
(bad)
mov
inc
push
push
cs
mov
add
jge
(bad)
lds
hlt
int3
test
xchg
in
movs
cld
mov
inc
sbb
sub
xor
sbb
jae
or
(bad)
mov
call
adc
push
jp
or
arpl
jae
or
fisub
mov
popa
and
je
dec
adc
push
jns
or
fst
xchg
fldenv
mov
inc
push
sbb
mov
adc
and
sub
adc
jmp
ret
mov
xchg
retf
dec
imul
cmp
arpl
dec
leave
out
clc
imul
repz
dec
addr16
mov
cmp
pop
push
dec
int
mov
(bad)
mov
xchg
into
dec
jle
ins
and
ds
pop
push
dec
mov
mov
mov
mov
xchg
into
xor
sub
ds
imul
ins
mov
cmp
jmp
je
loope
xchg
out
dec
xor
imul
addr16
mov
cmps
call
je
jg
xchg
cdq
add
js
outs
push
push
inc
mov
mov
xchg
mov
pop
adc
arpl
aaa
je
fs
pop
sti
mov
sbb
stos
jecxz
cmc
test
xchg
aam
and
dec
add
sub
jae
inc
sbb
mov
fst
mov
call
add
sub
jno
inc
sbb
mov
hlt
xchg
scas
out
test
add
pop
das
addr16
ja
inc
pop
push
out
cmps
push
scas
out
test
jle
dec
xor
jo
gs
push
in
movs
std
mov
call
sub
jae
inc
sbb
mov
fist
jne
repnz
inc
push
push
cs
push
pop
pop
outs
es
xchg
inc
add
sbb
xchg
xchg
out
cmps
(bad)
mov
inc
push
push
das
data16
adc
jle
mov
sahf
(bad)
scas
out
test
ficom
push
inc
mov
dec
add
jge
(bad)
lds
cmc
int
int
in
movs
std
mov
inc
sbb
sub
cmp
dec
add
adc
and
xor
les
hlt
int3
test
xchg
in
movs
std
mov
inc
sbb
sub
add
jae
add
(bad)
mov
fwait
jecxz
repz
and
jp
or
bound
jb
or
fisub
mov
lahf
loop
repnz
and
jp
or
bound
jb
or
fbld
mov
call
adc
push
jp
or
bound
jb
or
fldenv
mov
call
adc
imul
mov
sub
(bad)
fisub
mov
sahf
loope
icebp
mov
cdq
ror
sti
bound
jno
or
mov
(bad)
(bad)
shl
mov
outs
aaa
jg
xorps
jnp
imul
int3
xchg
imul
cmp
adc
jmp
sbb
pop
and
sub
adc
jmp
rcr
sbb
stos
cld
fist
hlt
mov
test
mov
xchg
call
int3
mov
movs
in
mov
les
out
mov
test
adc
xor
fwait
rcl
jecxz
mov
ins
cmps
jmp
sbb
inc
and
sub
adc
jecxz
outs
and
in
jecxz
mov
cmp
push
push
fsub
out
aad
in
push
call
out
xchg
retf
add
movs
pop
sti
xchg
fsub
push
dec
add
sahf
(bad)
mov
jae
jo
adc
inc
mov
cmps
pop
push
push
inc
aas
jbe
pop
pop
dec
xchg
mov
movs
push
push
or
out
xchg
into
test
mov
cmps
push
push
or
mov
xchg
retf
aaa
outs
es
(bad)
mov
mov
xchg
retf
cmp
mov
jbe
pop
push
dec
or
ins
and
xor
outs
and
inc
dec
(bad)
mov
movs
sbb
jns
imul
bound
pop
add
mov
mov
mov
mov
or
imul
sub
cli
mov
or
sbb
retf
jp
imul
popa
sub
jge
jmp
loope
adc
dec
xor
push
hlt
mov
add
dec
clc
mov
mov
mov
add
mov
lods
in
pushf
lds
nop
fadd
call
je
gs
fld
push
sbb
mov
fwait
shr
or
and
inc
hlt
inc
sbb
mov
fist
hlt
mov
xor
dec
add
sub
jb
inc
sbb
mov
ret
mov
fwait
shr
jnp
dec
add
sub
mov
mov
sti
mov
sbb
stos
jecxz
icebp
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
ficom
mov
call
add
sub
ja
inc
sbb
mov
fst
mov
cdq
shr
jns
dec
add
sub
jo
inc
sbb
mov
fcom
mov
cwde
shr
js
dec
add
sub
jo
inc
sbb
mov
fist
pop
lahf
xlat
outs
daa
jg
dec
pop
pop
pop
das
cmp
push
inc
pop
push
out
cmps
push
scas
out
test
pop
pop
push
cs
inc
push
push
out
cmps
push
scas
out
(bad)
in
lahf
(bad)
outs
es
dec
push
pop
push
cs
inc
push
push
out
xchg
xchg
lods
in
cmc
mov
popf
(bad)
ins
and
pop
adc
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
pop
add
mov
xchg
xchg
out
cmps
(bad)
mov
inc
push
push
cs
push
pop
push
jne
out
adc
inc
shr
xchg
xchg
out
cmps
(bad)
mov
inc
push
push
cs
push
pop
push
push
dec
xchg
xlat
scas
out
test
ficom
push
inc
push
push
cs
push
pop
push
outs
daa
sahf
scas
adc
lahf
aad
in
cmc
int
fst
or
gs
adc
pop
rcr
cmc
int
fst
or
gs
adc
add
popf
aad
in
cmc
int
fst
or
gs
adc
and
in
hlt
int3
test
xchg
in
movs
cld
mov
inc
sbb
sub
cmp
dec
add
adc
and
xor
pushf
aam
in
hlt
int3
test
xchg
in
movs
cld
mov
inc
sbb
sub
cmp
dec
add
adc
and
ss
retf
xchg
(bad)
mov
fwait
jecxz
repz
and
jnp
or
arpl
jae
test
xchg
(bad)
mov
fwait
jecxz
repz
and
jnp
or
arpl
jae
test
xchg
fisub
mov
call
adc
push
jp
or
bound
jb
test
xchg
fisub
mov
call
adc
push
jp
or
bound
jb
test
xchg
fisub
mov
call
adc
push
jp
or
bound
jb
test
xchg
fisub
mov
xchg
in
movs
cld
mov
inc
sbb
and
jp
or
bound
jb
xchg
xchg
fisub
mov
jne
inc
sbb
inc
sub
jp
or
bound
jb
test
xchg
fldenv
mov
cmp
movs
in
stos
hlt
int
xor
or
popa
sub
test
xchg
fldenv
mov
add
movs
xor
or
popa
sub
test
xchg
fldenv
mov
add
(bad)
jp
or
popa
sub
test
xchg
frstor
lea
mov
xlat
mov
or
jne
fwait
ror
jecxz
mov
push
sbb
mov
mov
xchg
pop
adc
jnp
imul
ror
jecxz
xchg
xor
push
js
mov
lahf
shr
adc
jnp
imul
ror
jecxz
xchg
sub
imul
enter
mov
add
imul
ror
jecxz
xchg
sub
imul
push
call
inc
adc
jnp
imul
ror
jecxz
xchg
sub
imul
adc
hlt
dec
adc
jnp
imul
ror
jecxz
xchg
sub
push
push
or
je
dec
add
imul
ror
jecxz
xchg
sub
arpl
jne
sbb
mov
dec
adc
jnp
imul
ror
jecxz
xchg
sub
arpl
jno
sbb
movs
mov
adc
jnp
imul
ror
loop
xchg
sub
sbb
repnz
adc
jp
push
lahf
(bad)
mov
mov
xchg
sub
push
inc
add
mov
push
dec
push
jle
outs
es
(bad)
mov
mov
xchg
sub
jnp
imul
loope
sar
dec
push
jle
outs
es
(bad)
mov
mov
xchg
sub
js
push
sar
dec
push
jle
outs
es
(bad)
mov
mov
xchg
sub
xor
and
aad
les
dec
push
jle
outs
es
(bad)
mov
mov
xchg
sub
xor
and
aam
les
push
dec
push
jle
outs
es
(bad)
mov
mov
xchg
sub
jo
pusha
and
fadd
pop
push
dec
push
jle
outs
es
(bad)
mov
mov
xchg
sub
cmp
and
mov
pop
push
dec
push
jle
outs
es
aad
lds
xchg
sub
cmp
dec
hlt
xchg
or
hlt
es
adc
ins
and
mov
mov
or
cmp
mov
mov
stc
imul
popa
sub
stc
mov
or
cmp
movs
adc
int3
mov
mov
sbb
jno
popa
sub
stc
mov
or
cmp
movs
adc
int3
mov
stos
fs
sbb
jno
popa
sub
stc
mov
or
cmp
movs
adc
int3
mov
cmps
push
sbb
jno
popa
sub
stc
mov
or
cmp
movs
adc
int3
mov
movs
addr16
sbb
jno
popa
sub
clc
mov
or
cmp
stos
adc
cld
movs
gs
sbb
jo
pusha
sub
clc
mov
or
cmp
sbb
cld
scas
fs
sbb
jo
pusha
sub
clc
mov
or
cmp
sub
fadd
push
sbb
jo
pusha
sub
mov
or
cmp
sub
fadd
push
sbb
jo
pusha
sub
test
mov
movs
in
aam
cs
cmp
sub
fadd
push
sbb
or
cmp
sub
and
dec
add
sub
or
cmp
sub
fadd
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
or
cmp
sub
fadd
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
push
cs
xchg
dec
cmp
mov
shr
jnp
dec
add
sub
mov
mov
add
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jp
dec
add
sub
jb
inc
sbb
mov
ficom
mov
call
add
sub
jb
inc
sbb
mov
ficom
mov
call
add
sub
jno
inc
sbb
mov
fst
mov
cdq
shl
jns
dec
add
sub
jno
inc
sbb
mov
fst
mov
cdq
ror
xor
pop
adc
pusha
cmp
inc
sbb
mov
fcom
mov
cwde
shl
and
dec
add
sub
jo
inc
sbb
mov
fcom
mov
cwde
ror
and
dec
pop
pop
pop
das
addr16
ja
inc
pop
push
out
cmps
push
scas
out
test
pop
pop
pop
das
addr16
ja
inc
pop
push
out
cmps
push
scas
out
test
pop
pop
pop
das
addr16
ja
inc
pop
push
out
cmps
push
scas
out
test
push
pop
push
cs
inc
push
push
out
cmps
(bad)
mov
xchg
xchg
scas
out
test
addr16
dec
push
pop
push
cs
inc
push
push
out
cmps
(bad)
mov
xchg
xchg
scas
out
test
sbb
adc
or
movs
std
mov
test
xchg
lods
in
test
add
bound
cmp
push
in
movs
std
mov
test
xchg
lods
in
sti
retf
lods
jmp
sti
mov
sbb
stos
jecxz
repz
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
fist
mov
fwait
shr
jnp
dec
add
sub
jae
inc
sbb
mov
test
retf
shr
mov
add
jbe
xor
inc
adc
add
cmp
leave
xchg
popf
shl
out
scas
neg
int3
aad
out
call
inc
and
jl
adc
add
jle
mov
sahf
(bad)
mov
mov
sahf
loop
imul
pop
push
dec
push
sub
push
sbb
daa
sub
rcr
repnz
xchg
into
mov
(bad)
push
inc
sbb
sub
add
jnp
jp
xchg
bound
pop
jecxz
push
mov
rcl
or
cmp
(bad)
ins
xor
or
ret
fisub
or
fstp
add
xor
arpl
sbb
arpl
in
mov
rcr
out
cmps
mov
ds
sti
mov
cmp
pop
scas
xchg
(bad)
test
or
push
cmp
dec
call
push
cli
test
neg
xchg
retf
jno
jae
fucompp
add
mov
jge
fs
xchg
fld
sti
inc
jg
push
xchg
retf
and
sahf
dec
push
sbb
ficomp
loopne
sti
test
ror
mov
cmp
sub
jmp
jmp
jecxz
and
stos
xchg
mov
pop
sub
cmp
push
add
scas
push
sar
mov
dec
xchg
jbe
imul
or
mov
pop
sbb
add
mov
out
std
mov
(bad)
ror
push
sub
push
cmp
mov
xchg
iret
nop
in
dec
add
rep
(bad)
ret
test
push
mov
cdq
mov
imul
cdq
stc
adc
cmp
or
imul
retf
scas
xchg
xchg
mov
shl
add
adc
and
pop
or
push
outs
popa
cmp
mov
mov
xchg
(bad)
leave
popf
stos
lods
xchg
repz
push
and
push
jge
or
pop
xor
cwde
int3
call
xchg
rol
jae
pop
imul
push
sub
cmp
leave
call
(bad)
cli
rcr
add
adc
and
pop
imul
jno
xlat
fcmovnu
movs
mov
rcr
inc
sbb
jbe
and
imul
in
sti
mov
xchg
fst
test
cs
pop
imul
jge
push
push
sbb
pop
jno
adc
call
or
push
jns
es
jl
sub
adc
aam
fmul
cmps
push
das
addr16
ja
inc
pop
push
outs
daa
jg
dec
pop
pop
pop
scas
out
test
xchg
xchg
das
addr16
ja
inc
pop
push
outs
daa
jg
dec
pop
pop
pop
scas
out
test
xchg
xchg
das
addr16
ja
inc
pop
push
outs
daa
jg
dec
pop
pop
pop
scas
out
test
xchg
xchg
das
addr16
ja
inc
pop
push
outs
daa
jg
dec
pop
pop
pop
scas
out
test
xchg
xchg
das
addr16
ja
inc
pop
push
outs
daa
jg
dec
pop
pop
pop
scas
out
test
xchg
xchg
das
addr16
ja
inc
pop
push
outs
daa
jg
dec
pop
pop
pop
scas
out
test
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
pop
pop
imul
aas
adc
push
jg
pop
xor
fldenv
lea
pop
push
mov
pop
sub
jg
out
fistp
mov
fwait
iret
stos
out
mov
pop
sbb
mov
mov
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
prefetch
xchg
cld
aas
sub
jmp
sbb
ds
cmp
and
mov
inc
mov
shl
fisttp
pop
add
jg
(bad)
xor
pop
sti
jg
fisubr
cld
pop
shld
inc
jns
lds
cmp
or
clc
inc
daa
fstp
xchg
out
imul
mov
rcl
(bad)
sbb
std
ss
(bad)
dec
push
shr
cdq
popa
cmp
sbb
test
sub
hlt
les
pop
in
sar
(bad)
push
(bad)
in
mov
out
sub
test
lock
outs
loope
xlat
or
jle
retf
(bad)
retf
jmp
mov
push
fwait
pop
loopne
lock
dec
inc
dec
inc
outs
jle
retf
fcom
pusha
pusha
mov
call
sbb
jp
jnp
enter
aam
cs
shl
sahf
sub
(bad)
fcomip
inc
push
int3
pop
dec
ins
shl
sub
add
push
(bad)
into
xchg
scas
outs
jo
retf
or
fisubr
(bad)
enter
outs
outs
(bad)
cld
sbb
add
jmp
out
mov
fwait
call
(bad)
pop
push
push
cmp
sub
cmp
out
pop
xor
iret
es
pop
jmp
dec
ds
or
jg
retf
sub
mov
out
xchg
pop
repz
es
dec
fadd
retf
mov
out
iret
repz
stos
sar
mov
add
imul
pushf
retf
cmp
(bad)
fiadd
iret
fwait
mov
dec
int3
mov
aas
inc
or
call
fld
(bad)
stc
jl
xchg
fcomip
out
es
xor
jnp
or
pop
aaa
sub
lahf
push
jmp
stos
stos
mov
fmul
dec
sbb
clc
pushf
xchg
(bad)
(bad)
mov
xchg
dec
xor
test
and
or
push
pop
cmp
scas
es
jecxz
pop
cmp
out
mov
ja
in
sahf
or
pop
push
sub
or
lahf
jmp
sti
push
cmps
call
(bad)
pop
add
mov
cmps
sub
pop
retf
(bad)
jmp
or
push
fistp
cs
sub
fwait
or
or
das
clc
or
dec
lahf
mov
outs
mov
idiv
push
aad
scas
rcr
pop
outs
lods
cmp
mov
mov
shr
or
pop
pop
add
push
jnp
push
sbb
xor
xor
xchg
daa
ficom
jb
mov
add
fld
retf
push
xchg
cmp
clc
jg
mov
push
dec
inc
imul
dec
shl
fisttp
sbb
sahf
inc
lahf
scas
ins
sti
call
scas
and
pop
dec
iret
pop
xchg
das
movs
ds
or
sub
clc
jg
jp
adc
stos
xor
fbld
stos
xor
inc
das
ds
or
out
mov
xchg
ficomp
and
xor
(bad)
fwait
xchg
(bad)
jmp
movs
outs
cmp
adc
pop
jmp
mov
inc
retf
mov
inc
mov
pop
adc
jmp
jnp
dec
les
sub
sub
retf
retf
mov
dec
dec
xor
xor
imul
hlt
adc
pop
jmp
mov
sub
dec
sahf
ffreep
out
add
pop
inc
das
ds
(bad)
push
sbb
outs
cmp
scas
sti
sti
mov
fidiv
dec
ud2
pop
push
push
ds
sub
cmp
out
pop
xor
sti
mov
ret
out
js
adc
pop
outs
imul
or
jg
retf
sub
mov
out
xchg
pop
arpl
es
dec
fdivr
retf
mov
out
iret
inc
fild
stos
sar
mov
add
imul
push
daa
sbb
(bad)
fiadd
iret
fwait
adc
int3
mov
aas
inc
or
call
add
push
(bad)
cli
jl
xchg
fild
es
xor
jnp
or
pop
aaa
sub
lahf
push
jmp
stos
jg
push
addr16
fmul
dec
sbb
clc
fwait
xchg
(bad)
fild
jmp
mov
xchg
dec
xor
test
and
or
push
pop
cmp
scas
es
jecxz
pop
cmp
out
mov
ja
in
popf
or
pop
push
sub
or
lahf
jmp
sti
push
cmps
call
(bad)
pop
add
mov
or
nop
call
(bad)
scas
inc
stos
xlat
into
mov
fild
gs
xchg
(bad)
sub
ror
aam
nop
pusha
xchg
retf
retf
sti
xor
out
add
mov
repnz
or
mov
jne
punpcklbw
or
aaa
std
mov
inc
pushf
imul
mov
aam
outs
add
retf
mov
lahf
pusha
jns
mov
hlt
scas
js
dec
rdpmc
push
aad
scas
rcr
pop
outs
lods
cmp
sub
mov
popa
movs
push
mov
fwait
push
out
fs
loop
push
dec
cmp
mov
aam
imul
and
jo
xchg
iret
ret
out
(bad)
cmp
pop
mov
icebp
push
cmps
sbb
mov
sti
cli
dec
iret
int3
aas
push
fs
sti
test
push
stos
das
lock
or
pop
jb
inc
jg
dec
fcmovne
xor
jo
pop
lds
stos
das
mov
add
jbe
jnp
or
pop
jl
(bad)
hlt
fimul
cmp
mov
dec
cwde
loopne
das
adc
mov
iret
mov
mov
push
jmp
fld
call
sbb
sbb
movs
aad
push
cmps
sbb
retf
(bad)
jmp
dec
mov
push
mov
jp
aad
sbb
outs
cmp
scas
sti
and
sub
cmps
dec
movsx
push
push
ds
sub
cmp
out
pop
xor
sti
mov
ret
out
js
adc
pop
ja
dec
ds
or
jg
retf
sub
mov
out
xchg
pop
comiss
jp
dec
fdivr
retf
mov
out
iret
jae
push
stos
sar
mov
add
imul
dec
daa
sbb
(bad)
fiadd
iret
fwait
jecxz
dec
(bad)
xchg
dec
int3
mov
aas
inc
or
call
rcr
push
(bad)
cli
jl
xchg
fild
push
cwde
cld
xor
jnp
or
pop
aaa
sub
lahf
push
jmp
stos
iret
mov
fmul
dec
sbb
clc
call
mov
xchg
dec
xor
test
and
or
cmp
scas
es
jecxz
pop
cmp
out
mov
ja
in
pushf
or
pop
push
sub
jle
mov
jae
fwait
iret
call
pop
pop
pop
(bad)
iret
xchg
mov
ret
jmp
ds
retf
mov
add
inc
sbb
out
jmp
fiadd
fild
sub
jae
mov
jb
mov
addr16
ins
stos
inc
inc
and
in
cmp
jg
(bad)
fistp
iret
xor
and
cmp
mov
dec
loopne
dec
mov
xchg
outs
cmp
into
(bad)
xor
in
and
xor
pop
fwait
stos
das
mov
pop
call
push
mov
cmp
xor
add
(bad)
push
scas
bound
pop
pop
add
ds
or
dec
iret
jle
outs
cli
fist
mov
int
xchg
adc
xchg
jle
push
sbb
sar
aas
mov
xchg
xor
mov
aas
and
sub
jb
and
or
outs
inc
jo
pop
scas
sub
mov
lahf
psubusw
pop
mov
sbb
iret
sub
xchg
and
add
add
pop
mov
and
mov
movd
pop
mov
pop
rcr
mov
outs
lahf
pop
and
hlt
dec
dec
rcr
xchg
fstp
or
aam
jge
sti
leave
(bad)
pusha
test
sti
je
adc
cli
ss
lock
xchg
jecxz
test
xchg
mov
fimul
out
xor
outs
fs
inc
out
dec
cvtdq2ps
push
dec
sbb
sub
push
sbb
scas
sti
mov
stos
lods
jmp
pop
jnp
jle
aad
xlat
out
dec
fiadd
fldenv
mov
jmp
mov
pop
dec
imul
mov
nop
mov
adc
sti
inc
mov
fbld
and
ret
int3
sbb
aad
cmp
pusha
loop
inc
fcmovu
addr16
add
push
mov
adc
pop
and
sub
push
and
mov
bound
das
jnp
or
sub
and
repnz
lahf
popa
push
(bad)
cli
ja
pop
or
out
inc
addps
jecxz
ds
pop
sub
ins
push
retf
loopne
lahf
jl
inc
fucomip
out
stos
call
popa
scas
stc
dec
mov
mov
fcmovnb
fist
push
lods
or
push
cmp
cmp
pop
mov
push
cmps
mov
or
mov
retf
mov
jmp
movs
jbe
iret
ficomp
lock
loopne
das
mov
retf
dec
sbb
outs
outs
(bad)
hlt
inc
aaa
fsubr
mov
fist
and
dec
ror
xchg
cs
retf
mov
call
jnp
dec
jnp
out
call
into
pop
rcr
or
jle
inc
call
inc
fcmovu
arpl
adc
sbb
popf
dec
jecxz
jnp
or
jle
mov
repnz
sti
jns
xor
add
movs
push
cmp
ss
pop
dec
cmps
push
mov
(bad)
push
mov
sti
ss
out
mov
mov
mov
push
imul
mov
cmp
and
pusha
pop
scas
sti
inc
frstor
test
nop
fs
pop
out
test
xchg
dec
sbb
sub
push
leave
dec
and
outs
stos
mov
sar
mov
jle
push
push
dec
pop
sar
nop
sti
jmp
mov
sbb
repz
(bad)
mov
addr16
jae
test
sub
clc
das
mov
pusha
sub
retf
nop
sub
(bad)
stos
jmp
test
adc
pushf
jp
cmp
in
cli
adc
cmp
dec
xchg
jmp
imul
sbb
jl
ds
(bad)
lea
cli
mov
out
out
sti
mov
mov
pop
push
das
sub
push
xchg
outs
outs
imul
(bad)
lahf
test
imul
sbb
lsl
ds
or
outs
xor
retf
dec
push
outs
(bad)
data16
lahf
or
fnsave
in
mov
pop
stos
imul
pop
outs
rcr
cmp
add
pop
or
and
adc
out
(bad)
shld
das
cmps
into
gs
inc
pop
sub
pop
push
pop
bnd
test
pop
inc
pop
(bad)
loopne
mov
push
mov
cwde
sbb
scas
scas
adc
add
outs
stos
adc
add
fimul
xchg
movs
jge
mov
js
in
ins
les
test
pusha
adc
jmp
je
(bad)
ins
stos
inc
jb
dec
pop
loopne
out
jnp
push
or
mov
rcl
mov
scas
(bad)
push
iret
inc
fwait
mov
xchg
pop
fwait
inc
lods
fld
aam
adc
retf
sbb
pop
inc
mov
test
pop
fst
and
outs
outs
or
fist
push
mov
mov
stos
inc
out
mov
push
dec
iret
shr
mov
retf
cmps
nop
mov
xchg
rcl
aas
and
xor
lahf
fwait
pop
inc
jb
or
test
xor
in
sub
fist
(bad)
out
xor
xor
aaa
cmps
iret
inc
push
test
mov
cdq
jae
les
and
iret
xor
pop
or
es
dec
push
pop
outs
sar
xor
sbb
out
fcmovnb
fmulp
ins
stos
inc
dec
xor
jmp
adc
sub
iret
jg
jae
mov
mov
mov
out
xor
pop
mov
into
or
dec
cmps
jle
sub
jo
push
mov
ja
xlat
and
xor
add
je
mov
xor
push
mov
scas
fs
es
add
dec
pop
lods
das
cmc
ret
inc
(bad)
pop
(bad)
sbb
outs
fiadd
push
adc
jg
pop
mov
push
ds
sti
pop
cld
cmp
mov
mov
jmp
jmp
sbb
loopne
push
fstp
retf
call
(bad)
mov
and
scas
jg
pop
pop
xchg
xchg
js
sti
int
sbb
xchg
fucomi
stc
repz
(bad)
outs
(bad)
imul
jmp
ds
dec
jae
shr
repnz
out
mov
dec
mov
mov
out
mov
pop
cmovp
stos
mov
nop
mov
fiadd
fist
jmp
sti
cmp
inc
and
mov
xchg
cmp
pop
dec
pop
daa
ret
sub
add
sbb
jg
je
xchg
adc
fsubr
xchg
stc
hlt
sbb
and
(bad)
sahf
(bad)
in
and
mov
jp
jge
sbb
pop
push
das
push
ret
mov
jl
sub
jg
jmp
arpl
aad
stos
(bad)
xor
rcr
retf
sub
ror
shl
xchg
jmp
stos
jmp
sub
xchg
inc
and
dec
or
outs
sti
out
mov
fbld
out
inc
inc
mov
cmp
js
add
sbb
and
mov
je
fild
ud2
mov
jecxz
dec
fsub
nop
mov
aaa
jmp
pop
xor
into
push
jae
add
shl
dec
hlt
lds
aad
outs
hlt
inc
inc
fstp
xor
fwait
xchg
push
stos
(bad)
dec
dec
pop
mov
fwait
pop
lahf
cmps
outs
imul
push
pusha
mov
mov
lods
out
inc
aas
cmps
test
out
and
mov
cwde
push
jnp
jbe
outs
sahf
fcmovu
mov
jo
into
inc
xor
mov
jp
aas
mov
outs
add
fcmovnb
jo
(bad)
das
repnz
iret
add
(bad)
call
pop
sbb
sti
test
mov
sbb
xchg
enter
lahf
push
jne
fwait
xor
std
push
push
xor
cli
or
cmps
sbb
retf
ficomp
mov
call
pop
fs
aas
adc
sbb
adc
mov
fiadd
jmp
stos
adc
fwait
or
pop
cmp
test
or
aam
mov
das
retf
out
ja
fwait
sahf
xor
ins
out
xor
sbb
rol
aam
or
push
fcom
in
inc
fcmovu
pop
es
ss
fcmovnbe
retf
imul
mov
dec
out
aam
xor
inc
call
xchg
fs
imul
pop
xor
mov
mov
retf
retf
jmp
sub
sti
dec
jnp
leave
pop
jecxz
ror
dec
outs
outs
mov
add
aaa
inc
cmps
es
out
or
ja
stos
jmp
dec
jns
jmp
and
sti
cmp
mov
jo
iret
push
ins
and
dec
popf
push
pop
sub
pop
xor
cmp
mov
mov
inc
mov
xor
cmp
pop
sbb
xchg
stos
pushf
jmp
retf
pop
into
push
add
pop
mov
ins
jmp
stos
shl
dec
mov
retf
ret
(bad)
stos
cmp
cwde
mov
pop
adc
wbinvd
or
push
fistp
out
jb
mov
xor
mov
je
fisub
inc
adc
xchg
imul
mov
fs
outs
aam
imul
jmp
xor
outs
xchg
sti
in
ja
pop
adc
jnp
sub
xchg
sbb
xlat
sbb
retf
push
rcr
pop
push
das
mov
dec
imul
in
out
aas
shl
xor
aad
pop
cld
mov
fbld
dec
pop
out
movs
mov
push
sub
cmp
and
iret
call
dec
pop
jecxz
cmp
jl
push
add
jae
pop
pusha
loop
xlat
or
xlat
push
inc
aas
fucomp
das
sub
stos
jg
pop
pop
push
shl
xchg
xchg
pop
inc
data16
mov
push
ret
hlt
ins
pop
aam
add
fistp
pusha
aaa
adc
fsubrp
inc
mov
push
jo
aas
jle
outs
push
push
xchg
push
and
std
retf
jae
out
call
imul
sbb
sub
imul
inc
sti
xor
dec
mov
stos
mov
cdq
pop
sub
xchg
lahf
push
and
les
sub
clc
rcr
xor
push
call
test
(bad)
mov
jmp
movs
cmps
scas
mov
mov
fwait
xor
xlat
jae
add
push
aam
inc
add
mov
(bad)
mov
mov
neg
xchg
out
sub
pop
dec
fstp
jne
aas
aas
cmp
cmp
int3
adc
mov
je
pop
rcr
hlt
imul
mov
addr16
xchg
mov
(bad)
adc
inc
repz
pop
bound
loopne
fidivr
iret
test
and
add
fwait
sub
inc
(bad)
adc
call
add
pop
das
inc
sti
mov
jecxz
jb
(bad)
out
xlat
(bad)
pop
xor
ss
aas
jge
xchg
aam
outs
dec
ja
xchg
push
lahf
inc
mov
stos
scas
les
and
in
cmp
mov
jmp
ja
jo
mov
leave
fadd
adc
and
xlat
add
cmp
adc
out
stos
movs
mov
inc
adc
push
out
mov
push
sub
std
enter
sub
or
enter
inc
jo
add
ja
in
ds
sbb
daa
lock
jns
pop
and
mov
leave
or
sbb
mov
jo
cwde
jmp
imul
jg
cwde
ins
sub
ja
jnp
fwait
sar
jmp
loop
inc
lock
lock
inc
loopne
mov
jbe
test
cld
add
repz
cmp
push
pop
push
retf
pop
loop
or
loop
scas
pop
repz
xor
je
jno
inc
push
das
ja
imul
mov
lahf
push
js
(bad)
in
aaa
cmps
jecxz
je
jno
out
loopne
lock
jns
sbb
ret
sub
ja
pushf
xchg
or
ficomp
or
in
mov
dec
pop
imul
ret
push
cmp
add
adc
sbb
movs
mov
pop
outs
je
mov
jmp
arpl
mov
push
das
xchg
aaa
mov
xor
out
xor
mov
popf
xchg
cmp
out
in
outs
sub
pushf
dec
mov
fsubr
scas
mov
fs
es
lods
jmp
outs
mov
shl
xor
enter
call
shr
ror
cmp
sbb
pop
shr
push
jg
inc
push
ficom
ins
adc
add
mov
mov
pop
pop
dec
ror
or
pop
mov
rcr
jae
inc
movs
cld
fdivr
adc
out
in
dec
lock
inc
imul
into
sti
dec
in
js
cmp
dec
setg
scas
mov
sub
fistp
out
fisttp
iret
add
sti
sbb
and
mov
jo
jle
jae
and
stos
test
repz
sete
jp
sub
les
enter
mov
inc
call
dec
cvtdq2ps
cmp
ret
retf
sub
stos
pop
sub
dec
fimul
adc
popa
mov
mov
shr
pop
cs
xor
mov
add
adc
inc
or
(bad)
retf
push
jbe
dec
rcl
mov
(bad)
jle
test
jcxz
pop
mov
xor
fbld
test
outs
sub
cmp
jg
push
xor
mov
movs
repz
adc
scas
sti
inc
jl
push
shl
cmp
dec
xor
mov
or
pop
jecxz
push
mov
fwait
xlat
jns
jae
mov
pop
loopne
push
mov
cmps
pop
push
mov
inc
popf
pop
mov
(bad)
xchg
test
sbb
leave
arpl
push
pop
and
add
lahf
ja
sahf
push
pop
jmp
mov
fisttp
das
pop
icebp
cs
jnp
popa
dec
dec
dec
aam
push
lahf
retf
and
int
jmp
inc
inc
pop
movzx
push
aas
stc
add
leave
out
iret
jmp
movs
repz
dec
aas
fadd
dec
dec
pop
aam
cs
sahf
mov
retf
mov
into
pop
sti
inc
push
mov
add
test
inc
inc
pop
outs
add
(bad)
mov
ret
out
in
test
and
adc
daa
sub
sbb
test
pop
xchg
mov
xchg
dec
cs
pop
cmp
pop
nop
add
add
cmp
int
fucomip
mov
dec
xchg
xor
adc
or
rol
mov
fnstcw
into
iret
fs
mov
ret
xor
push
jnp
mov
jnp
daa
retf
(bad)
and
mov
jbe
movs
xchg
imul
xor
pop
imul
jp
and
in
lahf
mov
fisubr
jmp
movs
outs
test
pop
xor
jge
and
out
jbe
jbe
fild
xor
xor
cmps
add
jnp
and
retf
js
add
fwait
ss
dec
mov
pop
mov
dec
repz
and
outs
retf
data16
cmp
inc
fnstcw
inc
stos
sbb
mov
scas
jnp
dec
in
sbb
addr16
xor
dec
scas
adc
stos
push
call
inc
pop
es
xor
loop
mov
xor
das
(bad)
or
push
xchg
iret
xlat
fist
push
mov
imul
or
sbb
(bad)
pop
lahf
add
pop
mov
stos
jmp
push
shrd
das
xor
inc
dec
repnz
(bad)
(bad)
jmp
mov
(bad)
out
xchg
jmp
push
jnp
or
sbb
jmp
sti
sub
jae
stos
cmps
mov
mov
inc
dec
dec
pop
ret
jg
lods
fcmovnbe
jmp
sti
push
iret
ins
fwait
aaa
mov
repz
lss
das
xchg
sbb
sub
sti
lahf
lods
scas
add
inc
iret
mov
imul
mov
sub
pop
stos
outs
sar
push
jmp
fistp
fwait
dec
imul
jecxz
outs
add
adc
inc
pop
fisttp
mov
pop
xchg
push
sbb
jecxz
pop
ja
pop
dec
sbb
mov
(bad)
push
adc
push
mov
fwait
iret
sub
mov
repz
jns
maskmovq
idiv
pop
mov
dec
cmp
push
fsub
inc
jmp
push
sbb
loopne
das
test
and
cmp
xor
retf
cli
sbb
ss
setg
das
stos
jnp
dec
(bad)
pop
in
sub
ret
mov
and
(bad)
into
iret
call
pop
movs
arpl
ds
dec
push
shr
loop
mov
jmp
cmps
mov
daa
imul
ss
lahf
dec
pop
sub
sahf
dec
sub
call
test
ud2
cmp
out
dec
pop
sub
aas
cmp
jmp
dec
std
data16
xor
(bad)
int
mov
sbb
out
aas
inc
ret
ret
out
icebp
xchg
cmp
push
dec
stos
inc
pop
sbb
dec
(bad)
and
dec
test
cmp
pop
push
aas
out
sub
jmp
mov
or
sbb
inc
(bad)
sahf
adc
shr
xor
das
or
sub
mov
mov
xchg
mov
cvtdq2ps
sub
jnp
dec
pop
mov
stos
jo
lahf
sub
ss
lods
imul
test
aas
lahf
retf
sub
inc
xchg
fwait
and
(bad)
(bad)
call
pop
xchg
mov
or
dec
outs
jle
stos
xor
cld
adc
das
sti
iret
mov
push
push
iret
sub
add
jp
retf
mov
xor
cmps
xchg
jle
and
adc
sti
push
add
xchg
sahf
out
mov
xchg
or
xor
jae
in
jmp
sar
es
pushf
call
adc
mov
sub
test
addr16
pop
push
jecxz
add
pop
xchg
iret
outs
imul
(bad)
aas
cmp
pop
cld
sbb
addr16
jb
mov
movs
outs
loop
cmp
mov
arpl
stos
stos
in
dec
jg
aas
sub
shl
aas
movs
mov
mov
ss
push
push
sbb
shl
inc
jmp
pop
sbb
mov
mov
ficom
imul
jb
jl
mul
das
mov
mov
nop
dec
jg
add
adc
inc
jae
push
or
add
bound
sbb
sbb
outs
outs
push
adc
jl
jmp
ins
stos
jae
dec
ud2
aas
loopne
jnp
retf
dec
pop
cmp
(bad)
jmp
retf
mov
jg
mov
and
pop
movs
mov
ds
or
sbb
inc
addr16
iret
scas
sub
fld
call
pop
pop
imul
aas
or
pop
mov
(bad)
sub
inc
fidivr
dec
out
pop
xchg
mov
in
outs
sub
and
pop
jne
iret
mov
or
imul
mov
inc
dec
sar
(bad)
lea
mov
jg
inc
mov
ret
push
adc
sti
xchg
cmp
pop
and
mov
mov
pop
fild
(bad)
xchg
xchg
jg
ror
sbb
outs
stos
jle
call
mov
out
out
jmp
das
jns
dec
mov
jp
(bad)
dec
retf
lahf
jmp
iret
retf
mov
pop
push
cs
aas
pop
(bad)
out
outs
sub
xchg
or
add
xchg
jg
ss
sub
out
rcr
adc
mov
xchg
mov
dec
mov
loopne
leave
pop
imul
mov
cs
outs
jle
retf
add
adc
and
retf
arpl
lea
cmp
ds
dec
mov
shl
lds
addr16
mov
ins
out
mov
sub
movs
xchg
dec
mov
sbb
dec
xor
adc
pop
inc
fsub
push
add
movs
mul
jp
adc
outs
nop
push
outs
or
pop
sti
push
into
inc
dec
xchg
push
sbb
dec
and
aas
pop
xlat
in
aam
bound
xor
fldcw
scas
aas
stos
daa
pop
mov
mov
(bad)
les
xchg
iret
retf
lea
imul
xor
sub
fldenv
test
fwait
pop
sar
addr16
call
ins
in
jb
lock
inc
imul
jnp
mov
dec
cmps
jl
xchg
mov
(bad)
call
adc
add
add
aas
div
les
or
scas
mov
into
xchg
and
mov
out
idiv
xchg
repz
mov
jmp
cmp
and
add
imul
stc
or
dec
and
fistp
add
mov
push
mov
sbb
lock
sbb
cmp
jmp
pop
mov
mov
lock
loopne
das
jnp
dec
pop
sbb
ds
mov
inc
ror
pop
mov
bound
sub
aas
jnp
dec
pop
sbb
xlat
and
jg
(bad)
xor
mov
push
cmc
fwait
call
movs
pop
xchg
pop
not
sub
les
add
jnp
push
call
into
pop
push
push
jg
mov
ret
popa
nop
(bad)
jg
addr16
jmp
pop
fucomip
mov
xlat
or
ret
hlt
or
dec
aam
sbb
fucomip
aad
scas
mov
call
cmp
or
es
jnp
inc
dec
xchg
dec
retf
nop
sti
xchg
or
push
adc
inc
adc
mov
cmp
repz
aad
mov
mov
retf
sub
ret
and
or
dec
xchg
jecxz
ds
mov
pop
sub
fistp
add
addr16
out
popa
scas
mov
jmp
push
xchg
sub
retf
retf
adc
cli
cdq
jp
lahf
xchg
or
movs
xchg
jle
jnp
out
stos
in
cmps
in
ja
add
pop
jmp
lock
inc
jae
stos
mov
dec
out
or
jb
mov
inc
iret
push
xchg
push
xchg
sub
mov
es
jge
dec
nop
ss
mov
sub
jbe
ror
xor
retf
call
push
fldcw
jnp
or
pop
ret
test
sbb
sti
into
iret
jae
stos
out
pop
add
imul
jecxz
sbb
les
pop
jmp
mov
pop
pop
fld
cmps
xchg
sbb
jle
retf
retf
push
mov
sub
xchg
and
(bad)
call
inc
lahf
jp
or
ins
jns
fistp
dec
(bad)
iret
lahf
pop
fisubr
aaa
ins
adc
push
mov
mov
mov
jmp
inc
fwait
mov
jnp
sti
(bad)
test
cs
rcr
or
sub
jbe
xchg
(bad)
fld
test
xor
out
cmp
push
push
mul
rol
jnp
jle
aaa
addr16
out
into
iret
das
inc
push
add
jmp
sub
xchg
mov
retf
jo
lahf
pop
sub
imul
add
mov
(bad)
jecxz
shr
cdq
outs
xchg
mov
lahf
add
scas
arpl
retf
(bad)
call
pop
pop
imul
jmp
data16
movs
jmp
(bad)
(bad)
bound
arpl
and
sbb
pop
repz
scas
add
and
add
sub
xor
int3
lahf
mov
cs
mov
push
push
fcom
in
jb
cwde
xchg
dec
add
movs
call
pop
sbb
push
push
mov
sub
xchg
sbb
out
std
xchg
shl
pusha
adc
cmp
and
out
push
or
pop
loop
lock
jo
adc
inc
ror
hlt
jae
fisub
ss
mov
push
imul
adc
cli
cmp
rcl
jmp
jnp
mov
test
aaa
or
imul
adc
inc
mov
mov
inc
jl
test
xchg
jp
das
mov
shl
pushf
add
xchg
fsubr
ret
lahf
stos
inc
out
push
mov
stos
adc
xlat
or
nop
(bad)
ret
in
hlt
xchg
mov
retf
cwde
stos
push
out
mov
ror
loopne
daa
test
jmp
je
push
repz
fbld
add
mov
and
xchg
adc
sbb
daa
xchg
pop
mov
leave
scas
jbe
add
jae
push
stos
push
jmp
cmps
div
in
cmp
adc
scas
jno
mov
push
add
stos
(bad)
sub
movs
mov
add
or
sti
inc
pop
fcmove
push
sub
jnp
dec
into
pop
sti
imul
mov
les
mov
scas
jmp
test
pushf
mov
inc
xchg
adc
rol
in
and
mov
push
rcr
mov
fisubr
in
jg
add
xor
leave
jae
sub
xor
inc
jge
dec
dec
push
and
jnp
cmp
adc
(bad)
(bad)
fadd
jnp
aas
(bad)
dec
stos
movs
jnp
xor
add
scas
scas
pop
mov
rcl
jmp
jnp
jg
fwait
xlat
repz
jb
dec
cmps
imul
inc
mov
pop
rcl
sbb
cmps
lahf
push
scas
in
jo
or
xor
(bad)
jmp
stos
mov
daa
loopne
bsf
bound
xor
jae
adc
jmp
xor
imul
sbb
add
sahf
mov
inc
cli
out
or
jo
push
shl
xchg
je
outs
ret
mov
ret
jns
pop
dec
ins
sub
add
call
jg
je
fwait
inc
scas
psubw
cmp
daa
cs
int3
imul
loop
retf
retf
xor
out
mov
retf
add
jnp
sub
jbe
aaa
(bad)
(bad)
adc
inc
mov
(bad)
lahf
cmp
clc
jp
sbb
sub
(bad)
jle
add
and
jecxz
out
test
repz
daa
mov
add
(bad)
das
sbb
repnz
jmp
jnp
and
and
push
test
arpl
jnp
or
addr16
(bad)
fcomi
add
xor
ffree
xchg
(bad)
out
mov
dec
mov
jne
cmp
or
adc
setg
loop
ja
adc
sbb
push
xchg
adc
inc
shr
call
orps
(bad)
dec
jg
imul
(bad)
mov
pop
and
pop
jno
cmp
addr16
xor
fdivrp
push
adc
pop
es
loopne
mov
pop
les
sub
cmp
add
lahf
sbb
add
gs
cmp
inc
sub
xchg
data16
adc
sti
jl
sbb
(bad)
sti
xchg
out
and
mov
gs
cmc
bound
dec
(bad)
jg
cmps
mov
and
pop
push
adc
fbstp
xchg
paddsw
out
sbb
in
mov
mov
mov
mov
adc
shr
add
jecxz
mov
fimul
push
sub
inc
dec
jmp
stos
mov
mov
jns
sti
int
pop
mov
(bad)
retf
lea
mov
(bad)
into
movs
pop
jmp
shufps
ds
sub
xchg
pop
cmps
xchg
jbe
fwait
pop
and
aas
scas
xchg
mov
call
jl
pop
mov
cmp
sub
mov
cmp
lds
inc
xor
push
sub
mov
push
loop
sub
aam
in
cli
mov
sub
mov
inc
pushf
outs
push
mov
stos
nop
cs
fisubr
mov
mov
and
fld
dec
or
repnz
mov
stos
push
dec
push
aas
(bad)
stos
push
dec
mov
ror
sub
adc
js
ja
retf
scas
push
popf
push
pop
ds
dec
and
sahf
fidivr
dec
jbe
add
fwait
and
dec
inc
pop
stos
retf
jmp
xchg
mov
push
sub
mov
fwait
mov
cwde
arpl
pop
sbb
out
stos
push
dec
into
pop
dec
stc
pop
pop
addr16
fimul
inc
mov
or
add
fisubr
cmps
rdmsr
mov
mov
jp
movs
(bad)
jb
(bad)
not
daa
jg
adc
cmps
test
lock
(bad)
ds
aad
xchg
cmps
outs
(bad)
out
rcr
xchg
mov
arpl
ret
retf
repz
sti
cmp
mov
or
cld
sbb
mov
sub
cdq
sti
imul
sbb
dec
push
or
mov
fwait
sti
push
sti
mov
stos
fcomip
pop
inc
into
ror
xor
lock
cmp
in
rcr
das
pop
xchg
fwait
rcr
fwait
mov
fcomp
in
pop
jle
pop
mov
xchg
and
xchg
je
imul
or
mov
sti
fbld
sub
inc
loopne
jnp
add
sbb
outs
out
or
cmp
loope
popf
jnp
out
cmps
cmp
sub
jle
jae
jge
or
xchg
retf
pop
jmp
adc
fnstsw
je
stos
cmp
cwde
pop
imul
mov
mov
ret
mov
cmps
pusha
sub
mov
push
call
pop
lock
imul
lds
pop
pop
jae
cmp
pusha
pop
add
mov
rcr
imul
aaa
cmp
outs
pop
ins
pop
les
mov
push
xchg
sti
stc
neg
push
adc
and
xor
and
pop
mov
mov
sub
mov
mov
or
xchg
or
test
cmp
adc
loope
retf
std
daa
adc
test
daa
fmul
mov
and
jecxz
sbb
ins
cmp
pop
adc
ins
repz
sbb
xor
fsub
imul
or
test
les
dec
in
lahf
pusha
cmps
add
shl
je
xchg
test
mov
pop
sub
ror
jecxz
xor
nop
adc
out
pop
(bad)
pushf
ror
dec
xlat
or
add
jmp
push
adc
pop
dec
movs
fsub
stos
jb
retf
mov
hlt
pop
retf
outs
mov
out
stos
out
dec
test
loope
shl
(bad)
fimul
sub
inc
add
fild
addr16
pop
ins
das
mov
pop
jmp
and
sahf
cmps
int3
retf
jbe
jp
fwait
dec
xchg
call
dec
jl
mov
sub
pusha
mov
iret
fwait
pushf
inc
mov
fwait
pop
mov
or
mov
ret
inc
jg
inc
call
push
stos
dec
or
pop
das
mov
push
retf
pop
adc
lahf
add
inc
fwait
(bad)
out
stos
in
dec
outs
cmp
aaa
cmp
nop
fcom
cmps
cli
jg
(bad)
fcmovne
adc
adc
out
push
repnz
out
pop
pop
das
xchg
aas
hlt
cmps
xchg
aam
outs
aas
outs
or
out
add
cmp
xchg
pop
mov
mov
xor
inc
in
push
addr16
pop
jnp
cmc
jmp
js
(bad)
stos
outs
xchg
out
das
mov
dec
test
outs
ret
test
pop
out
in
nop
rol
pusha
pop
sti
pop
ja
lods
sbb
mov
pop
inc
sub
add
cmp
scas
not
imul
push
out
inc
jb
(bad)
adc
mov
je
pop
sub
jg
into
rcr
cli
push
add
ret
mov
scas
pop
xchg
test
pop
(bad)
aad
das
cdq
jg
dec
ret
pop
push
jle
push
retf
fadd
adc
mov
nop
aam
ins
shl
ret
cwde
fisttp
std
call
mov
or
and
mov
scas
nop
cmp
jo
pusha
dec
cmps
mov
xchg
out
mov
inc
fild
xchg
lahf
dec
je
sbb
adc
das
in
jnp
push
fist
out
and
mov
out
mov
pop
jnp
push
push
add
jns
sub
out
fnstenv
xchg
and
mov
dec
test
sbb
sub
push
dec
lods
mov
mov
stos
repz
cmps
push
mov
pop
test
dec
dec
mov
xchg
dec
into
mov
mov
inc
ins
jp
int
or
inc
int
out
scas
jmp
imul
inc
add
xchg
sub
outs
sub
sub
fcmovnu
sahf
es
into
xor
mov
test
arpl
inc
add
mov
sar
or
pop
ret
push
sti
cdq
lahf
fild
lahf
mov
mov
sub
aam
dec
xchg
iret
(bad)
lahf
out
xchg
adc
fbld
lock
xchg
loopne
jp
jbe
jle
dec
lahf
lods
int3
sub
test
daa
mov
je
pop
sbb
cmp
dec
xlat
outs
sub
inc
movs
xor
iret
sub
inc
add
loopne
pop
lock
pop
and
sub
fldcw
dec
fcom
and
(bad)
push
mov
stos
in
dec
mov
test
arpl
arpl
data16
inc
pushf
out
and
mov
movs
lock
hlt
adc
dec
sbb
push
movs
call
faddp
call
or
inc
test
mov
aaa
mov
es
mov
push
jp
sub
ret
pop
sub
fistp
mov
pop
fist
sti
mov
jmp
adc
push
mov
or
stos
sbb
dec
xchg
ins
mov
sti
popa
or
xchg
or
pop
pusha
push
lods
jns
sahf
pop
sub
stos
mov
(bad)
vzeroupper
test
outs
les
cmps
(bad)
lea
sar
(bad)
daa
push
xchg
test
jne
jnp
aas
pop
pop
pop
sbb
(bad)
sbb
(bad)
push
jo
je
and
mov
sti
cs
jnp
sti
mov
mov
retf
push
and
cmp
into
je
fwait
imul
sbb
cs
stc
mov
jg
and
sti
push
aam
ficomp
sbb
dec
pop
imul
cmp
dec
outs
les
xor
push
mov
cli
jg
iret
fisttp
clc
dec
(bad)
enter
call
in
das
repnz
dec
mov
sti
sti
dec
inc
adc
inc
out
(bad)
xchg
pop
femms
fwait
imul
cmp
fidiv
sar
fmul
cli
(bad)
das
fwait
inc
pop
fs
sti
test
pop
test
ret
mov
cmp
(bad)
scas
scas
or
mov
pop
add
(bad)
pop
in
dec
(bad)
sub
(bad)
and
or
mov
loopne
mov
or
ins
das
(bad)
or
mov
push
es
pop
xchg
das
ds
sub
adc
mov
ficomp
mov
xor
xchg
aas
arpl
xchg
jmp
les
pop
scas
add
sub
addr16
mov
ret
dec
sub
fld
icebp
sti
aad
iret
into
stos
neg
out
js
pop
xchg
xor
xchg
aas
pop
xlat
in
cmps
jb
mov
cld
adc
mov
bswap
pop
outs
das
xchg
jnp
dec
repz
clc
cmp
retf
data16
cmp
inc
fidivr
inc
stos
sbb
mov
das
jnp
dec
in
sbb
(bad)
(bad)
xor
dec
scas
adc
stos
push
call
jle
(bad)
das
fstp
loop
mov
jmp
sti
push
test
pandn
btr
mov
pop
cld
sub
sub
arpl
fwait
dec
stos
retf
mov
test
repnz
sbb
jae
inc
mov
fistp
out
fwait
jmp
or
or
sbb
out
(bad)
scas
adc
sub
jae
stos
jle
mov
out
mov
call
jg
stos
fisttp
jmp
sti
push
iret
ins
fwait
aaa
(bad)
out
sub
jg
mov
enter
or
sbb
sub
call
bound
mov
imul
mov
sub
pop
rep
sar
push
and
(bad)
mov
fistp
lahf
inc
movntps
sub
jecxz
sbb
sub
(bad)
scas
jbe
mov
jb
or
push
fisttp
pop
pop
adc
or
pop
jmp
aas
cmp
(bad)
popw
mov
into
adc
pop
pop
push
xchg
ds
lock
aam
ins
mov
inc
xchg
sahf
(bad)
and
mov
iret
lds
imul
jl
sbb
pop
ds
jl
dec
shr
add
and
pop
ins
repz
mov
das
das
sub
imul
out
mov
scas
mov
fist
pop
mov
dec
jp
jnp
or
sbb
in
mov
mov
mov
es
scas
mov
sub
repz
cmp
(bad)
jmp
rcr
sahf
mov
mov
mov
mov
and
sbb
imul
dec
xchg
retf
sar
sub
aas
mov
enter
pop
call
pop
dec
imul
ret
rep
jle
mov
fxch
mov
mov
jg
inc
lods
push
dec
scas
push
jp
jecxz
xchg
fisttp
nop
sub
(bad)
fsub
sub
cld
addr16
into
es
jl
dec
test
or
pandn
imul
jmp
js
fmul
pop
mov
push
aas
ins
hlt
(bad)
sbb
jle
pop
pop
retf
popf
dec
push
mov
(bad)
pop
jecxz
push
(bad)
dec
shr
lods
test
xor
retf
and
cmp
fs
pop
sbb
(bad)
loopne
imul
xor
sar
jg
dec
dec
lahf
arpl
cmp
fwait
imul
call
movs
outs
rcl
repnz
retf
jns
imul
jbe
pop
fmulp
retf
call
or
xchg
or
mov
pushf
retf
loopne
mov
jmp
mov
popf
push
arpl
jno
sub
push
das
retf
lahf
mov
aaa
(bad)
jmp
into
iret
fist
bound
imul
hlt
ret
data16
jg
(bad)
lahf
lahf
arpl
repnz
(bad)
push
outs
push
add
dec
dec
and
sbb
(bad)
push
enter
jmp
inc
xor
mov
imul
(bad)
xchg
or
in
or
push
sti
repnz
mov
pop
jnp
push
jecxz
cmps
cs
jge
mov
popf
jg
pop
pop
xchg
jbe
push
iret
fimul
xadd
xor
pop
outs
nop
les
ret
jmp
aaa
out
jmp
add
mov
cmp
ds
jg
pop
fist
outs
sub
cmp
in
ss
shl
dec
xchg
bound
pop
sub
push
arpl
cld
add
pop
pushf
fwait
aaa
pop
stos
in
clc
(bad)
xchg
jl
ret
hlt
or
and
imul
mov
jnp
sti
je
adc
mov
fnsave
mov
pop
(bad)
xchg
aam
jecxz
xchg
pop
add
fsubr
xor
fucomip
sub
cli
dec
fistp
or
or
les
out
and
sbb
lods
and
mov
add
sbb
int3
push
(bad)
fcomi
inc
mov
fucomip
fs
retf
imul
jecxz
nop
mov
mov
outs
scas
scas
psraw
and
out
sub
test
call
jg
mov
outs
jecxz
mov
imul
mov
pop
test
sub
hlt
les
pop
in
sar
(bad)
push
(bad)
sar
out
sub
test
lock
outs
loope
xlat
or
jle
retf
(bad)
retf
jmp
mov
push
fwait
pop
loopne
lock
dec
inc
dec
inc
outs
jle
retf
fdiv
jno
daa
call
sub
jp
jnp
enter
aam
cs
shl
sahf
sub
mov
dec
int3
pop
dec
push
push
ror
jg
call
inc
shl
call
cmps
pop
fnstsw
jo
cld
hlt
dec
sbb
sub
cmc
stos
xor
lahf
cmp
jmp
stos
dec
(bad)
xchg
dec
int3
test
das
(bad)
aas
inc
or
call
pop
fld
(bad)
sti
jl
xchg
fbld
out
es
xor
jnp
or
pop
aaa
sub
lahf
push
jmp
stos
push
mov
fdiv
sbb
clc
lahf
xchg
(bad)
fcmovnbe
jmp
mov
xchg
dec
xor
test
and
or
push
pop
cmp
scas
es
jecxz
pop
ds
mov
ja
in
call
sub
or
lahf
jmp
sti
push
cmps
fwait
sbb
mov
inc
das
mov
pop
sub
pop
retf
dec
cmp
jmp
xor
push
retf
pop
push
inc
jnp
call
outs
cmp
scas
sti
jg
or
mov
sub
cmps
dec
jae
aas
enter
sub
cmp
out
pop
push
idiv
mov
ret
out
js
adc
pop
ja
dec
ds
or
jg
retf
sub
mov
out
xchg
pop
retf
das
es
dec
fdivr
retf
mov
out
iret
int3
ficom
push
int3
xor
pop
jl
push
repz
cmp
xchg
lahf
js
gs
mov
sti
and
sti
stos
dec
lahf
fwait
stos
inc
jl
fisttp
mov
dec
mov
call
imul
mov
cmps
pop
cmp
xchg
dec
mov
sbb
and
repnz
fcmovu
(bad)
sahf
push
repz
xor
(bad)
stos
or
int3
inc
out
xchg
imul
ror
mov
mov
jg
push
xchg
(bad)
fild
in
sbb
sub
dec
(bad)
dec
dec
(bad)
sub
sbb
aaa
mov
push
pop
pop
mov
mov
dec
cmp
bound
add
mov
(bad)
mov
mov
fimul
je
shl
mov
pop
jnp
les
pop
scas
shl
std
out
cli
cmp
mov
pop
xchg
jp
dec
jmp
push
aaa
(bad)
scas
(bad)
cli
xlat
mov
addr16
out
add
pop
paddsb
pop
jl
(bad)
hlt
fiadd
mov
iret
(bad)
mov
pop
ficom
mov
(bad)
push
and
push
inc
outs
jle
fimul
pop
scas
mov
out
push
call
movs
xchg
jle
xor
arpl
pop
imul
cmp
jo
adc
scas
xchg
stos
mov
(bad)
(bad)
mov
outs
sub
dec
mov
(bad)
mov
test
fiadd
dec
pop
loopne
movs
and
popa
pop
sbb
lock
(bad)
(bad)
das
imul
test
(bad)
(bad)
fist
mov
repz
jecxz
sbb
mov
pop
(bad)
push
out
xor
iret
icebp
retf
data16
popa
aaa
pop
pop
lahf
inc
jp
or
dec
dec
outs
outs
les
rcr
cmc
(bad)
scas
scas
adc
mov
mov
cmp
test
outs
adc
fdiv
adc
sahf
push
push
mov
cdq
loope
aas
popa
pop
sbb
ror
adc
stos
push
call
jbe
and
mov
loop
mov
xor
lahf
(bad)
or
push
cmps
iret
aad
out
push
mov
imul
or
push
jg
(bad)
ja
add
pop
mov
stos
btc
shrd
das
ss
inc
dec
repnz
ret
jmp
mov
(bad)
out
inc
jmp
add
sbb
out
nop
lahf
outs
scas
adc
sub
jae
stos
movs
mov
mov
inc
dec
push
pop
ret
jg
mov
sti
push
iret
ins
fwait
aaa
xchg
icebp
jmp
mov
enter
or
jg
retf
neg
outs
mov
inc
ret
mov
imul
mov
es
push
pop
jnp
sar
push
out
outs
mov
fistp
nop
inc
bndstx
sub
jecxz
sbb
sub
cmp
shr
fwait
or
push
aad
dec
pop
daa
imul
pushf
or
mov
lahf
add
ss
dec
mov
pop
arpl
xchg
jnp
dec
repz
jecxz
add
fimul
add
(bad)
into
jae
(bad)
je
and
pop
sub
aas
push
imul
test
sub
stos
mov
and
cli
cmp
mov
(bad)
or
dec
sbb
aam
mov
mov
pop
ror
cmp
pushf
dec
fistp
pop
sbb
jle
pop
jnp
dec
inc
pop
push
add
fldcw
cdq
fidivr
mov
das
jnp
ds
pop
ins
jmp
mov
ficomp
je
fimul
movs
test
sbb
mov
retf
addr16
pushf
imul
mov
stos
adc
cli
push
lock
jle
aaa
jecxz
pop
pop
sub
cs
fiadd
and
inc
sahf
inc
call
test
push
xor
xchg
push
ins
xchg
cmp
scas
ficomp
retf
int3
retf
push
and
out
adc
mov
out
movs
(bad)
cmp
pop
in
sub
ret
mov
ins
xor
jmp
jecxz
xchg
dec
jecxz
call
sbb
iret
fcom
jmp
push
out
adc
fistp
adc
xlat
sub
inc
push
test
mov
add
adc
xchg
mov
push
les
pop
dec
inc
push
daa
in
in
inc
cli
and
mov
jo
test
pop
push
inc
sub
xor
jnp
inc
sar
add
outs
mov
adc
shr
int
sahf
mov
mov
push
loopne
shl
sti
nop
imul
adc
sbb
pop
dec
hlt
cmps
dec
outs
adc
xor
(bad)
jmp
retf
and
adc
test
jns
jo
movs
pushf
push
push
lds
add
mov
cli
sahf
fs
fild
fist
sbb
sub
shl
or
mov
inc
mov
fist
test
iret
adc
mov
or
out
fist
adc
pop
jge
cmp
pop
dec
lahf
mov
pusha
fs
mov
pop
test
sub
jecxz
mov
mov
ss
scas
lods
push
iret
fs
jp
js
ret
dec
mov
xchg
(bad)
or
out
jp
hlt
mov
sti
push
ror
call
xchg
pop
fnstsw
jo
cld
hlt
dec
sbb
mov
(bad)
sti
add
mov
pop
out
mov
idiv
das
mov
mov
retf
add
(bad)
fisttp
ficomp
jmp
das
cmp
push
ret
in
jg
fcomp
fisubr
push
(bad)
mov
mov
aaa
pop
idiv
(bad)
icebp
push
or
les
out
xchg
mov
fwait
inc
mov
movs
dec
imul
push
dec
and
int
cmp
dec
sbb
add
cli
cmp
or
imul
cs
pop
fcomp
and
sti
dec
sahf
fcomip
out
ret
pop
pop
dec
dec
fsubr
dec
ret
pop
outs
in
adc
es
push
fistp
and
pop
ja
xchg
mov
hlt
push
pop
cmp
sub
jg
mov
push
dec
jno
fwait
ret
out
js
adc
pop
sbb
ds
or
jg
retf
sub
mov
out
xchg
pop
pop
das
es
dec
fadd
retf
mov
out
iret
repz
stos
sar
mov
add
imul
pushf
hlt
cmp
(bad)
fiadd
iret
fwait
jecxz
dec
(bad)
xchg
dec
int3
mov
aas
inc
or
call
retf
fld
(bad)
sti
jl
xchg
fistp
sets
xor
jnp
or
pop
aaa
sub
lahf
push
jmp
stos
pop
mov
fmul
dec
sbb
clc
pushf
xchg
(bad)
fild
dec
mov
xchg
dec
xor
test
and
or
push
pop
cmp
scas
es
jecxz
pop
cmp
out
mov
ja
in
lahf
or
pop
push
sub
or
lahf
jmp
sti
push
cmps
fwait
sbb
mov
jmp
das
mov
das
sub
pop
retf
dec
cmp
mov
push
cmps
pop
push
inc
jnp
in
push
sbb
outs
cmp
scas
sti
or
sub
sbb
pop
or
cmps
push
hlt
inc
sbb
scas
std
jg
pop
out
inc
ficom
mov
loopne
lock
mov
mov
fld
aas
neg
jmp
mov
je
ins
aaa
out
adc
add
cmp
cs
pop
enter
rol
fcmovbe
pop
pusha
pop
call
iret
fwait
ins
fisub
jmp
aas
rcr
or
sub
sbb
jo
shr
stos
dec
cdq
xor
or
cld
pop
push
xchg
pop
push
and
push
lahf
ins
sub
inc
retf
and
scas
and
outs
fisub
adc
dec
mov
push
pop
xchg
mov
push
aam
outs
mov
gs
(bad)
push
fwait
push
call
push
pop
mov
or
pop
cmp
(bad)
mov
iret
jg
push
jp
retf
(bad)
jecxz
shr
hlt
pop
sbb
cmp
cmp
and
mov
mov
pop
dec
pop
sub
sub
dec
or
sub
call
int3
mov
retf
push
push
(bad)
xchg
xchg
mov
sbb
cmps
sub
repnz
jo
lahf
jmp
and
and
dec
jle
add
pop
outs
xchg
jg
dec
into
fild
lahf
retf
and
das
mov
jecxz
cmp
add
mov
inc
mov
repnz
or
mov
or
push
out
or
fwait
xor
push
pop
scas
sub
arpl
ja
cmps
adc
pop
out
and
jp
retf
outs
outs
cmp
pop
and
push
mov
shld
das
js
popa
dec
inc
xchg
sub
cmp
mov
and
loopne
das
cli
push
ins
pop
mov
lock
jp
idiv
pop
repz
push
sub
xchg
jae
pusha
lods
jbe
fmul
xor
lock
xchg
cmp
jp
xchg
in
cmps
jmp
dec
lahf
out
inc
dec
xor
pop
ins
dec
jmp
ror
loopne
jg
xor
mov
fwait
jnp
les
iret
fist
mov
(bad)
mov
or
dec
loope
repz
cmp
inc
pop
push
retf
xchg
fisub
add
inc
xor
retf
scas
je
leave
pop
sbb
jg
ret
xchg
imul
push
sahf
lahf
sub
iret
mov
stos
(bad)
nop
ret
shld
shr
dec
dec
ret
mov
inc
jge
arpl
and
and
inc
add
lock
loopne
adc
outs
outs
mov
lahf
sub
xor
adc
sar
jp
jnp
sbb
xchg
outs
fwait
hlt
inc
dec
fist
push
xor
cmp
pop
pop
push
stos
sar
cmp
dec
mov
and
retf
push
(bad)
add
out
push
xor
xchg
mov
xor
ret
in
push
retf
cli
jmp
cmps
stos
push
push
xchg
pop
xchg
mov
xor
outs
jmp
stos
jns
push
stos
adc
jb
stos
(bad)
fld
xchg
pop
push
sub
neg
(bad)
push
pop
jmp
mov
ds
pop
jge
mov
mul
test
cld
retf
push
lahf
shl
xor
mov
mov
and
mov
or
mov
add
call
jmp
aas
dec
or
mov
(bad)
jo
cmp
jbe
mov
push
and
stos
mov
pop
imul
cmp
jmp
mov
movs
mov
and
mov
xchg
pop
imul
xor
jle
xchg
sar
push
pop
iret
sbb
ins
mov
mov
cs
mov
int3
mov
or
sub
hlt
inc
add
or
clc
mov
fdivrp
pusha
mov
lods
ret
lock
ins
jle
dec
imul
arpl
pop
fist
out
inc
cmp
xor
(bad)
pop
paddb
imul
add
out
sti
retf
push
xchg
push
bound
cvtdq2ps
sbb
cmp
retf
scas
scas
pop
push
je
lds
push
out
dec
inc
cmp
xchg
xchg
push
mov
mov
xor
mov
mov
pop
imul
pop
mov
push
loop
rcr
dec
push
xor
inc
jmp
outs
adc
out
mov
es
lods
jmp
outs
scas
jg
pop
pop
outs
mov
iret
ins
scas
add
test
dec
push
xchg
jle
sbb
xor
pop
aam
lahf
ja
sahf
push
pop
jmp
mov
stos
inc
fwait
mov
inc
xchg
shr
and
fwait
mov
iret
out
pop
cs
mov
push
cs
sub
adc
sub
xchg
xchg
ja
xchg
out
ja
inc
add
xlat
push
ins
out
inc
out
sbb
cmp
jb
cld
sub
sbb
add
push
fs
sbb
pcmpgtb
aam
xchg
or
sub
mov
lahf
xlat
scas
rdmsr
sti
pop
lock
jle
pop
push
cs
xchg
jmp
loopne
jmp
call
aam
cmp
call
inc
inc
mov
dec
add
call
lds
push
pop
in
mov
stos
mov
push
adc
outs
pop
cmp
int
dec
sbb
stos
mov
out
clc
aas
jns
sahf
fsubr
outs
pop
jo
jmp
xchg
mov
ret
mov
mov
out
and
cmps
xchg
or
in
sub
push
jmp
xchg
and
stos
add
movs
nop
out
mov
call
call
add
pop
iret
xor
sub
sub
data16
ret
jmp
jo
push
into
push
fucomip
stos
mov
adc
stos
and
dec
dec
pop
mov
jg
retf
jmp
add
dec
inc
pop
and
aas
into
scas
mov
pop
or
dec
aad
sub
das
iret
push
and
retf
cmps
mov
in
mov
jb
pushf
out
out
mov
stos
aas
outs
mov
adc
mov
cli
(bad)
(bad)
xchg
and
out
loop
js
pop
pop
arpl
xor
pushf
cwde
push
and
fistp
sahf
outs
ror
mov
adc
inc
pop
into
je
(bad)
cs
push
das
clc
rol
dec
sub
lahf
push
ds
movs
mov
stos
adc
xchg
das
loopne
pop
test
out
outs
pop
outs
outs
dec
jp
iret
(bad)
cli
inc
mov
fbld
mov
jmp
push
call
ret
cmps
jle
cmp
and
adc
sti
sti
push
daa
fs
cwde
out
push
(bad)
(bad)
mov
outs
pop
adc
or
mov
sbb
push
mov
pop
out
xor
mov
push
xchg
cs
stos
dec
xchg
lahf
in
cmp
xchg
retf
lahf
adc
scas
jp
mov
(bad)
inc
scas
(bad)
pop
mov
mov
xlat
ds
jae
dec
adc
scas
lds
mov
xor
cmp
push
icebp
or
gs
add
jo
mov
sar
hlt
dec
fwait
pop
xor
inc
aas
dec
and
(bad)
jmp
call
mov
stos
adc
daa
cmp
push
das
dec
ds
hlt
int3
retf
outs
sar
mov
jno
mov
retf
add
dec
stc
fcomp
iret
mov
cmp
jle
retf
(bad)
retf
fist
sti
mov
fwait
mov
jmp
jnp
pop
cmps
xchg
xor
add
inc
mov
loop
mov
loope
sub
cmp
jg
(bad)
sahf
enter
out
daa
fwait
mov
push
jne
pop
lock
mov
ds
or
jg
xchg
(bad)
xor
dec
frstor
push
stos
jmp
js
jnp
push
sbb
add
mov
scas
mov
fwait
daa
stos
stos
in
scas
cmovp
pop
sub
shl
push
lahf
adc
fiadd
xchg
lock
mov
jnp
sbb
mov
retf
je
mov
mov
scas
mov
fist
mov
jne
das
xlat
hlt
iret
mov
cmp
scas
adc
push
push
call
ins
pop
mov
repz
mov
cmps
retf
push
and
scas
or
push
mov
adc
call
clc
jnp
hlt
cmps
pop
cld
sub
push
pusha
add
pop
mov
stos
pop
inc
push
shrd
das
lods
aas
push
ror
pop
fcmovnb
adc
mov
fistp
jae
mov
sbb
or
mov
int3
cmp
xlat
push
adc
sub
jae
stos
cmp
mov
fisttp
mov
and
add
iret
ins
fwait
aaa
popf
out
push
pop
enter
or
fmul
addr16
lahf
cmp
cmp
inc
fnstcw
imul
mov
cmp
leave
pop
rcl
xor
je
fistp
mov
call
aas
jecxz
sbb
(bad)
sub
ja
scas
sub
or
push
retf
pop
adc
cs
sti
outs
ja
and
js
add
fs
dec
mov
pop
adc
jnp
dec
repz
mov
lahf
cmp
sub
retf
push
push
lods
test
push
ficom
mov
ins
sub
imul
fsubr
cli
(bad)
sti
(bad)
nop
jp
push
rol
xchg
out
cmp
and
sub
mov
int
jb
(bad)
mov
loopne
ret
dec
dec
cli
sbb
sub
fsub
aaa
loope
popf
xor
cs
std
stos
or
adc
push
or
sbb
jle
jg
retf
cmps
mov
scas
cmp
retf
pop
repz
pop
sub
sbb
sahf
mov
pusha
xchg
mov
sbb
fucomi
mov
mov
or
cmpxchg
hlt
rol
sub
inc
push
inc
nop
push
cwde
in
shr
popf
jp
push
out
lock
mov
ret
mov
pop
outs
and
lods
shr
sbb
movs
leave
popf
or
xchg
xchg
xor
je
pop
sub
cmpxchg
dec
or
fcom
mov
imul
cmp
xorps
dec
sub
les
push
ss
cmp
fisubr
or
add
int
(bad)
or
and
addr16
push
dec
push
pop
sbb
or
imul
pushf
in
sti
sbb
fs
adc
add
not
mov
(bad)
hlt
mov
loopne
mov
add
je
pushf
add
dec
dec
pop
into
cmc
movs
cmp
mov
rcl
dec
inc
pop
push
in
mov
inc
dec
fist
inc
pop
test
or
mov
(bad)
or
pop
pop
jge
inc
mov
fldenv
sti
xor
ja
pop
into
xchg
xor
rol
sub
pop
fimul
in
xor
retf
or
cmp
sub
pop
call
rcl
fidivr
outs
(bad)
push
mov
sahf
mov
pop
mov
jg
outs
ficomp
into
dec
push
mov
xlat
pushf
movs
lock
or
xor
clc
ret
test
add
xor
bound
out
or
push
hlt
cmp
outs
jecxz
adc
js
jnp
fist
mov
push
dec
sbb
cdq
outs
sub
test
jg
xor
add
iret
inc
fwait
push
and
imul
imul
retf
mov
pop
cmp
jg
sahf
fcmovu
out
loop
push
or
push
push
iret
cli
adc
jmp
push
mov
mov
scas
add
sub
xor
push
jo
dec
adc
cs
leave
stos
cmp
pop
sbb
jp
fsub
jecxz
js
add
and
mov
les
lock
dec
outs
psrlq
mov
daa
retf
adc
cli
repnz
out
out
iret
mov
loopne
jnp
xor
(bad)
sub
outs
cmp
movs
aaa
inc
je
retf
push
push
out
sar
mov
dec
xchg
xchg
iret
add
push
adc
sub
js
enter
mov
sti
cli
stos
into
xor
test
xlat
(bad)
sbb
mov
fmul
scas
loope
addr16
mov
push
push
mov
jnp
xor
cmc
xor
sahf
fucomi
mov
int
and
and
sbb
mov
pop
xchg
dec
adc
pop
jb
jo
dec
push
pop
jbe
jnp
(bad)
and
xor
aam
or
xchg
xor
fmulp
pop
lahf
arpl
fs
mov
mov
cmp
push
aam
sub
adc
loop
xor
daa
es
mov
pop
jl
imul
sub
xor
mov
pusha
pop
cli
in
imul
and
out
or
xor
adc
aas
dec
hlt
les
cmp
jmp
dec
fwait
sar
(bad)
dec
pop
ss
shl
(bad)
adc
je
fsqrt
mov
(bad)
xlat
inc
xor
scas
xchg
into
xchg
lods
push
inc
pop
repz
addr16
clc
jmp
and
add
ds
mov
pop
dec
addr16
pop
test
cmp
fisttp
add
sahf
les
fist
out
mov
movs
pop
xchg
push
aas
dec
dec
outs
mov
cmps
lahf
iret
jmp
(bad)
push
pop
xor
push
aas
push
les
jp
cmp
(bad)
inc
jmp
jo
je
jae
jg
(bad)
jmp
(bad)
pop
mov
mul
cmps
mov
sub
push
mov
shr
fs
cmp
sbb
test
xchg
imul
mov
lahf
adc
jo
mov
mov
mov
out
lock
dec
mov
pop
sub
vcvtps2dq
scas
sbb
cli
dec
iret
int3
jp
fs
sti
test
push
stos
das
lock
or
pop
jb
inc
jg
dec
fcmovne
dec
push
jo
pop
lds
stos
das
mov
imul
or
fcomp
retf
(bad)
hlt
fimul
cmp
xchg
out
loop
inc
nop
imul
sbb
jne
cmp
scas
cwde
sti
out
sbb
pop
mov
dec
sbb
dec
nop
sbb
sahf
inc
lahf
scas
ins
sti
call
scas
and
pop
dec
iret
pop
xchg
mov
inc
jg
(bad)
nop
add
les
out
and
sbb
push
shld
repnz
sub
and
add
repz
loop
dec
out
push
inc
test
aad
sbb
outs
cmp
scas
sti
xchg
mov
fidiv
dec
jg
ror
inc
pop
sub
push
out
pop
xor
sti
mov
ret
adc
adc
pop
out
dec
ds
hlt
mov
push
sub
jg
retf
sub
mov
out
xchg
push
pop
pop
out
es
mov
mov
retf
mov
out
iret
stos
fild
stos
rol
mov
add
imul
push
daa
in
leave
cmp
(bad)
fiadd
iret
fwait
scas
stos
dec
(bad)
xchg
mov
mov
aas
inc
or
call
repz
mov
aas
out
es
xor
jnp
or
pop
aaa
aam
fsub
retf
pop
inc
dec
sub
fild
movs
fmul
dec
sbb
clc
call
mov
xchg
dec
xor
test
and
or
les
scas
es
jecxz
pop
cmp
out
mov
ja
in
popf
or
pop
push
sub
or
lahf
jmp
sti
push
into
nop
enter
(bad)
mov
shr
int
ins
bound
scas
daa
sti
repnz
fdivrp
addr16
pushf
mov
shl
(bad)
pop
or
mov
into
mov
dec
fiadd
into
dec
stc
adc
inc
cwde
mov
mov
leave
(bad)
pop
je
icebp
into
stos
stos
loopne
shl
xchg
cmp
pop
das
or
push
cmp
addr16
mov
and
pop
into
test
loopne
jp
mov
in
aaa
(bad)
(bad)
xor
and
repnz
ficomp
add
add
outs
mov
pop
out
ret
cmp
and
mov
imul
jmp
icebp
jnp
mov
out
sub
inc
retf
ret
test
dec
xchg
int
fidivr
jmp
ret
push
sbb
es
add
aas
xchg
pop
ficom
xlat
jbe
inc
call
dec
aam
xchg
mov
jp
int3
xchg
inc
js
jle
daa
pop
pop
pusha
sbb
sub
neg
xor
inc
fld
nop
stos
test
push
shl
add
xlat
add
add
outs
imul
mov
dec
shr
(bad)
out
mov
fs
stos
inc
jl
sbb
sti
das
cs
push
pop
in
ds
sti
mov
and
pop
mov
stos
mov
shl
xchg
out
and
dec
aas
or
outs
inc
(bad)
test
dec
lahf
xchg
and
xchg
loopne
aas
push
pop
inc
pop
outs
lods
cmp
sbb
cmp
inc
xor
into
out
sub
test
call
iret
pop
mov
cmp
jg
leave
icebp
imul
add
idiv
rcl
push
stos
das
lock
jb
sbb
in
cmp
lock
mov
fist
rol
cmc
rcr
popa
pop
imul
cmp
adc
adc
repnz
pop
test
jle
pop
mov
std
cmp
cs
mov
xor
fucomip
sub
cli
dec
mov
das
leave
ds
sub
push
sub
ret
cmc
mov
in
cmp
iret
repz
int3
dec
comiss
sub
and
(bad)
iret
ficomp
mov
xor
xchg
js
jge
mov
pop
sub
into
pop
std
jg
push
fisub
adc
or
movs
sbb
test
pop
pop
dec
call
(bad)
inc
jmp
jo
je
jae
jg
xor
adc
pop
stos
movs
and
enter
inc
nop
test
inc
scas
mov
call
dec
lahf
das
inc
test
aad
sbb
outs
cmp
scas
sti
sbb
sub
cmps
dec
movnti
push
push
ror
inc
pop
sub
cmp
out
pop
xor
sti
mov
ret
adc
adc
pop
jae
dec
ds
hlt
mov
push
sub
jg
retf
sub
mov
out
xchg
push
pop
pop
pop
das
es
mov
mov
retf
mov
out
iret
cmps
fild
stos
rol
mov
add
imul
push
daa
in
retf
jg
(bad)
fiadd
iret
fwait
iret
stos
dec
(bad)
xchg
mov
mov
aas
inc
or
call
push
fld
mov
jae
es
xor
jnp
or
pop
aaa
aam
fsub
retf
(bad)
iret
lahf
push
jmp
stos
aas
mov
fmul
dec
sbb
clc
fwait
xchg
(bad)
fistp
dec
mov
xchg
dec
xor
test
and
or
les
scas
es
jecxz
pop
cmp
out
mov
ja
in
popf
or
pop
push
sub
or
lahf
jmp
sti
push
cmps
fs
mov
jmp
(bad)
pop
add
mov
pop
or
xor
and
scas
cmps
push
mov
push
push
add
push
mov
or
repnz
fldenv
imul
inc
fisttp
mov
lea
push
cs
jns
jecxz
xchg
pop
not
into
das
scas
lock
cmp
ficomp
stos
pop
das
in
dec
add
push
cmps
jnp
pop
pop
out
test
(bad)
cmp
push
mov
fld
out
in
mov
jp
sub
cmp
pop
cmps
outs
cmp
mov
pushf
mov
stos
cmp
(bad)
pop
push
sub
dec
in
es
xchg
mov
and
mov
xchg
out
inc
lods
pop
nop
mov
push
dec
scas
outs
in
cmp
icebp
mov
dec
out
dec
pop
dec
das
push
jnp
pop
pop
sbb
idiv
push
cmp
xor
imul
cmc
dec
pop
push
xchg
pop
mov
ror
pop
aam
cs
mov
fucomi
sub
in
mov
in
mov
stos
xchg
imul
dec
mov
jg
cmc
bound
adc
inc
adc
mov
xor
aas
cmp
mov
mov
sahf
fbld
out
shr
mov
jge
xor
or
sbb
ins
cmp
xchg
loop
sbb
(bad)
mov
jbe
lds
pop
pop
loop
jecxz
dec
push
inc
or
outs
inc
fisttp
call
out
loopne
cmps
jnp
xchg
dec
cmps
nop
sub
sub
iret
scas
movs
movs
imul
mov
out
jge
mov
pushf
push
xchg
je
pushf
pop
sbb
mov
inc
fldcw
mov
lahf
out
mov
mov
cmp
xchg
es
rcl
jno
pop
nop
mov
fcmove
lahf
adc
inc
mov
push
iret
sub
mov
shl
dec
jne
imul
std
sti
cli
arpl
mov
into
movs
jmp
cmps
mov
dec
sti
xor
adc
hlt
mov
push
call
pop
adc
pop
aam
les
(bad)
inc
call
out
push
cli
(bad)
jae
cvtdq2ps
addr16
pop
pop
outs
outs
ror
xchg
(bad)
jmp
mov
sar
ficomp
jmp
xadd
dec
cwde
mov
mov
fisttp
jmp
mov
fs
jmp
dec
or
add
jnp
or
sub
(bad)
(bad)
fisub
pop
push
jmp
into
push
adc
je
push
dec
loopne
push
ror
adc
sub
push
in
cli
sti
jg
fs
fild
jge
jg
pop
push
sete
add
cmps
jae
retf
push
ret
lahf
out
sti
fisttp
add
cmp
nop
pop
dec
pop
icebp
pop
push
outs
(bad)
nop
jg
pusha
sahf
dec
jmp
aad
mov
fist
mov
neg
movs
imul
aam
outs
dec
jp
push
push
jg
jmp
and
cmp
lods
test
xchg
clc
or
sub
fmul
add
adc
inc
pop
movs
inc
arpl
clc
rol
js
clc
push
sbb
mov
mov
adc
cmp
ja
dec
out
jb
les
scas
(bad)
push
fiadd
into
out
out
jge
mov
xchg
pop
xchg
rcl
pop
mov
and
mov
into
iret
fs
out
inc
cmps
dec
ucomiss
sub
pop
mov
addr16
cmp
(bad)
and
das
cld
jle
aas
xor
fisub
add
pop
pop
push
stos
sar
sbb
mov
lahf
adc
mov
je
call
jp
dec
outs
cmp
ret
lahf
jbe
sbb
and
das
cld
mov
push
push
stos
out
idiv
add
sar
lahf
cmp
mov
inc
mov
stos
cmps
ins
stos
call
jecxz
fwait
addr16
or
les
jmp
push
mov
pop
loopne
push
data16
jl
aam
jle
dec
mov
or
xchg
push
(bad)
adc
pop
imul
sbb
les
aam
push
cmp
jae
jmp
addr16
es
dec
movs
jne
mov
push
stos
sub
jns
fdiv
cmc
sub
in
fbld
jmp
fild
pop
push
pop
outs
imul
retf
int3
aaa
adc
stos
pop
mov
and
xor
add
les
sub
dec
pop
pop
cmps
cmp
fimul
dec
cli
repnz
out
dec
inc
pop
push
xchg
ror
rcr
in
mul
les
xor
fmul
fdiv
(bad)
pop
xchg
adc
cmp
movs
mov
lahf
outs
jp
mov
pop
fcmovnb
and
push
and
pop
push
cs
repnz
inc
sbb
daa
and
nop
lods
and
mov
push
jmp
test
imul
jnp
dec
sbb
cwde
xlat
mov
scas
(bad)
jmp
xor
pop
or
aas
jle
sbb
mov
add
je
fstp
push
jp
outs
test
adc
cmpxchg
add
hlt
jg
sahf
sbb
push
jb
aam
out
inc
fist
scas
je
sbb
push
hlt
jbe
dec
jge
dec
sub
rcr
cmp
fwait
add
out
xor
inc
sbb
adc
rol
outs
hlt
ret
sub
jg
or
and
(bad)
xchg
sti
call
dec
repz
pushf
pop
xchg
imul
jle
in
mov
retf
sti
imul
mov
stos
mov
pop
sub
dec
ret
dec
mov
sbb
loop
cmp
sbb
out
mov
and
bound
enter
jnp
mov
sbb
sbb
retf
xchg
lahf
pusha
ret
(bad)
mov
ret
adc
loopne
cmp
dec
pop
push
aam
stos
xor
push
lahf
(bad)
lods
inc
test
into
iret
mov
sti
adc
fldcw
sub
daa
or
push
sub
mov
xchg
jmp
xchg
scas
dec
iret
fwait
call
movs
adc
cmps
push
stc
or
bound
mov
inc
ret
adc
aas
mov
sub
mov
rol
jb
clc
dec
jg
cmps
cmp
daa
jae
outs
jmp
sti
dec
jbe
jae
pop
sub
push
cmp
(bad)
or
sub
mov
add
out
mov
nop
and
dec
cs
push
jno
hlt
pop
pop
lahf
sub
or
xchg
fist
mov
inc
mov
mov
pop
pop
push
shr
sbb
adc
test
stc
mov
out
jnp
ror
loopne
movs
mov
or
jnp
cmp
xchg
mov
sahf
int3
scas
mov
push
or
push
test
sub
in
jg
jo
rcl
mov
stos
out
mov
pop
scas
jb
mov
call
add
mov
(bad)
shl
aas
xchg
loopne
sub
hlt
imul
pop
retf
aaa
sub
mov
stos
(bad)
in
(bad)
gs
loop
sub
popa
sbb
inc
loop
ins
pop
mov
in
mov
test
dec
loop
ds
mov
mov
mov
pop
jo
mov
mov
lock
imul
mov
nop
push
jnp
ins
repnz
add
pusha
jmp
stos
ds
xchg
rcl
out
or
push
test
hlt
imul
retf
inc
aam
cli
pop
dec
mov
xor
cmps
dec
jle
jnp
adc
mov
sbb
mov
adc
pop
sbb
shr
loop
xor
pop
sahf
dec
adc
sub
dec
mov
jne
mov
dec
xchg
jle
jnp
add
push
aam
cmp
ja
lahf
adc
mov
fs
ret
xchg
lock
aaa
mov
cmp
xchg
and
int3
add
loopne
ret
mov
mov
adc
and
pop
lea
pop
(bad)
jnp
ficomp
or
ret
jg
(bad)
(bad)
imul
push
mov
call
push
dec
mov
pop
pop
nop
cmp
(bad)
fcmovne
mov
into
fwait
mov
es
aas
sbb
shl
call
je
mov
xchg
fcomp
popf
mov
jo
cmc
push
arpl
and
xor
pop
into
push
popw
or
ja
mov
arpl
repz
push
inc
nop
xchg
into
(bad)
into
cdq
sar
lods
test
mov
and
push
adc
div
mov
fs
adc
popa
push
cmp
mov
ja
addr16
repz
out
adc
mov
stos
dec
jp
xchg
loop
xor
in
imul
push
lahf
add
stos
and
xor
sub
mov
pop
stos
in
or
daa
mov
test
test
stos
stos
inc
pop
mov
pop
pop
movs
lock
xor
pop
and
(bad)
and
cmp
jno
iret
adc
pop
mov
push
push
rol
push
adc
mov
fwait
xchg
push
scas
jle
cmps
pop
imul
ins
hlt
mov
std
xchg
popf
dec
jo
outs
mov
int
sti
and
or
push
rol
les
xchg
fwait
in
and
loopne
mov
push
test
jp
jnp
mov
out
sbb
fsub
cli
scas
cmps
xor
inc
cmps
mov
add
inc
loop
ss
sbb
mov
daa
call
outs
inc
fwait
push
pop
stos
ss
sbb
dec
xchg
in
jp
jg
add
mov
or
and
cmp
ds
pop
adc
dec
ds
mov
xchg
cmp
dec
xchg
lahf
pop
lds
xor
cmp
fisubr
or
and
jp
(bad)
xchg
ret
rcl
(bad)
(bad)
fisubr
lahf
out
iret
mov
lods
dec
dec
cmp
or
dec
xor
lahf
mov
sbb
fwait
mov
inc
dec
ja
outs
jnp
or
inc
jnp
cmp
retf
xchg
sbb
and
sub
inc
pop
movzx
push
aas
stc
add
retf
outs
fist
jmp
add
je
aaa
and
dec
stos
mov
push
cmp
dec
sbb
aad
outs
ror
scas
pop
sti
add
in
and
pop
dec
mov
dec
out
aaa
sub
cmp
popf
imul
mov
loop
mov
jmp
das
cmp
dec
sbb
sbb
nop
cs
xchg
(bad)
mov
jmp
and
retf
outs
(bad)
pop
xchg
dec
cs
test
adc
xor
xchg
iret
imul
pop
xchg
mov
daa
stos
mov
pop
add
jnp
(bad)
push
and
outs
outs
iret
pop
retf
mov
fistp
ficom
sub
add
imul
arpl
pop
ins
cmp
cmc
mov
callw
iret
ja
and
add
push
mov
std
cmp
rcl
ja
clc
out
inc
add
push
xchg
mov
mul
xor
maxps
sar
push
mov
fistp
stc
call
mov
sub
jecxz
sbb
les
test
xor
or
push
mov
xchg
(bad)
aas
pushf
or
sti
and
js
add
fs
dec
mov
pop
pop
rcl
pusha
sub
fwait
xor
lahf
cmp
inc
les
inc
stos
sbb
mov
jg
(bad)
dec
in
sbb
add
fisttp
adc
mov
fwait
retf
push
push
call
sbb
fs
test
ret
cmp
ja
jbe
or
push
retf
fist
btr
and
hlt
cmps
pop
cld
sub
imul
pop
mov
stos
jecxz
push
shrd
das
jbe
xchg
mov
sbb
sbb
adc
mov
fbld
dec
clc
pop
adc
xor
mov
mov
int3
cmp
not
sti
sub
jae
stos
in
lahf
mov
pop
mov
add
mov
and
fist
iret
ins
fwait
aaa
jmp
mov
push
lock
adc
inc
pop
mov
cli
sbb
xlat
pop
scas
jmp
jmp
stos
imul
mov
imul
aaa
pop
add
fst
(bad)
scas
jmp
out
mov
rol
imul
dec
push
mov
inc
jbe
jmp
(bad)
jg
xor
dec
je
sbb
inc
jo
imul
add
cmp
or
cwde
and
das
out
jmp
mov
jbe
jbe
loopne
mov
cmps
sub
scas
lds
and
mov
jmp
pop
movs
test
or
adc
pop
call
and
xor
call
lods
mov
repnz
in
nop
lods
retf
retf
fisttp
jmp
mov
ret
mov
push
out
mov
loopne
das
dec
jecxz
ret
imul
jnp
dec
dec
fisub
lss
fs
add
and
or
adc
imul
pusha
movs
pop
stos
loope
ficomp
add
bound
pminsw
jnp
jo
shr
cli
jo
or
xchg
fwait
mov
(bad)
ret
jae
add
mov
fist
pusha
outs
lea
inc
adc
(bad)
jbe
inc
sbb
(bad)
retf
fisub
dec
sbb
(bad)
cmp
push
inc
lahf
hlt
push
sub
ror
call
les
hlt
retf
jmp
mov
fcmovu
push
(bad)
jnp
ds
dec
pop
(bad)
jnp
jle
nop
push
cmp
sbb
pusha
rcl
mov
test
dec
das
cwde
pop
out
das
test
shl
jge
stc
jo
loope
scas
pop
sti
cwde
mov
jnp
pslld
sub
ds
retf
sbb
add
cmp
push
mov
aad
fbstp
es
push
idiv
outs
mov
mov
or
stos
stos
add
fwait
sbb
or
out
loopne
lock
jns
sbb
ret
sub
ja
push
xchg
bound
rcr
in
jb
int
lock
pop
stos
sbb
add
sti
push
xor
push
xchg
outs
outs
shl
adc
and
push
push
daa
loope
cmp
push
les
jp
sub
outs
sti
out
sbb
stos
xor
retf
mov
and
sbb
xor
daa
dec
scas
sub
sti
inc
mov
mov
das
das
cmp
pop
rcr
retf
sub
or
fisttp
ror
xor
pop
cld
xor
mov
into
push
mov
iret
fisttp
clc
dec
(bad)
enter
out
jecxz
outs
cmp
out
(bad)
mov
out
dec
jecxz
out
push
outs
dec
popa
inc
pop
ret
outs
push
xor
call
fist
(bad)
test
dec
je
imul
push
cmc
icebp
aad
cmp
(bad)
push
sti
cli
fcomp
push
jmp
icebp
in
stos
cmp
or
outs
ret
jg
fmul
push
mov
test
push
imul
(bad)
or
dec
movq
jg
(bad)
mov
and
jbe
fdivp
fucomip
out
std
lods
mov
fsubr
mov
or
sub
push
mov
xchg
stos
mov
stos
int3
sbb
push
pushf
or
adc
add
sti
push
mov
ss
dec
mov
pop
mov
xchg
jnp
dec
repz
cmp
xor
lahf
cmp
inc
mov
and
sbb
mov
mov
sbb
jg
xor
dec
scas
adc
mov
call
sbb
sub
mov
xchg
retf
inc
and
scas
or
push
enter
mov
btr
jnp
hlt
cmps
pop
cld
sub
ja
add
pop
mov
stos
jecxz
push
shrd
das
xchg
aas
arpl
sar
retf
fild
inc
mov
fisttp
add
imul
daa
in
outs
int3
cmp
dec
push
adc
sub
jae
stos
or
mov
in
dec
outs
mov
and
fstp
push
add
iret
ins
fwait
aaa
out
out
pop
call
lock
enter
or
jg
retf
addr16
lahf
imul
inc
bound
mov
imul
mov
dec
dec
call
nop
sar
push
dec
sti
push
je
fistp
clc
jmp
imul
jnp
or
lods
ins
xor
mov
mov
stos
(bad)
cmp
sbb
jecxz
sbb
jmp
pusha
scas
jo
or
push
fisubr
dec
rol
aad
aas
dec
mov
cmp
mov
lahf
sbb
js
sbb
(bad)
lock
push
loop
sar
mov
hlt
xor
sahf
ja
jmp
mov
dec
pop
sbb
xchg
aam
xchg
xor
aam
into
jmp
mov
(bad)
cmps
popa
mov
loopne
das
test
jbe
push
test
sti
fiadd
xchg
stos
fisubr
push
movs
das
sbb
cmp
aad
mov
mov
pusha
stos
jo
jbe
popf
and
dec
in
loopne
das
outs
cmp
mov
mov
daa
inc
or
xor
mov
inc
call
mov
aam
aaa
mov
mov
into
fisttp
push
test
dec
jle
lock
cli
or
jge
xor
jmp
pop
stos
mov
loopne
cmp
call
nop
mov
retf
add
lahf
adc
sti
mov
stos
rol
xchg
xchg
xchg
or
shl
jo
rol
call
mov
adc
sbb
daa
in
dec
outs
cmp
mov
out
pop
ja
fild
mov
mov
outs
aam
or
mov
mov
pmullw
inc
pop
xor
adc
ss
(bad)
idiv
push
adc
mov
add
mov
out
mov
jne
stc
ja
arpl
mov
xchg
mov
or
fcomi
mov
cmp
loopne
jnp
mov
fistp
jle
jg
dec
fcmovne
cmp
sbb
bound
out
push
int3
pop
dec
push
push
ror
jg
(bad)
arpl
jmp
and
push
pop
and
jnp
retf
dec
nop
mov
sbb
or
fsubr
push
(bad)
mov
stos
xchg
mov
xor
aad
mov
pop
inc
jp
cmp
(bad)
inc
jmp
jo
je
jae
jg
xor
adc
pop
stos
movs
and
enter
jnp
fcmovnu
fcmove
into
pop
mov
push
fisub
adc
or
movs
sbb
test
test
or
xor
mov
add
lods
dec
pop
jle
sbb
mov
(bad)
cwde
pop
adc
sti
xchg
into
out
cli
js
sti
dec
mov
and
sbb
nop
ds
jo
cmp
jmp
fbstp
cli
pop
xor
sub
test
or
in
mov
push
rcr
fild
(bad)
sti
mov
push
mov
(bad)
lahf
(bad)
ret
pop
jnp
les
nop
ds
jno
push
aas
push
stos
sti
inc
iret
ficomp
mov
fmul
xchg
es
dec
daa
in
cmc
cmp
(bad)
fiadd
iret
fwait
imul
int3
test
das
addr16
inc
or
call
mov
push
mov
mov
xor
jnp
or
pop
aaa
aad
in
retf
(bad)
jmp
push
jmp
stos
pop
mov
fmul
dec
sbb
clc
lahf
xchg
(bad)
fild
jmp
mov
xchg
dec
xor
test
and
or
sbb
pop
lds
scas
es
jecxz
pop
ds
mov
ja
in
cdq
or
pop
push
sub
or
lahf
jmp
sti
push
cmps
gs
mov
jmp
(bad)
pop
add
mov
sub
dec
jle
xor
scas
addr16
push
pop
pop
push
inc
test
out
push
sbb
outs
cmp
scas
sti
sti
mov
fidiv
dec
setae
push
push
ror
inc
pop
sub
cmp
out
pop
push
idiv
mov
ret
adc
adc
pop
push
imul
cmc
mov
push
sub
jg
retf
sub
mov
out
xchg
lods
push
pop
pop
push
das
es
mov
sub
nop
cmp
leave
xchg
sahf
jmp
test
iret
dec
adc
and
xor
das
pop
test
sub
and
push
jbe
outs
aas
(bad)
fsub
out
mov
mov
hlt
mov
adc
sub
or
push
fwait
jmp
and
aad
jbe
sti
push
pop
cmp
ror
out
add
rcr
call
adc
cmovns
imul
pop
(bad)
fistp
inc
or
push
outs
inc
cmp
fistp
push
fsubr
jle
mov
sti
(bad)
(bad)
jne
xor
(bad)
sub
dec
iret
mov
push
(bad)
jge
push
(bad)
jne
dec
test
push
and
sub
popf
dec
fstp
fadd
dec
jmp
out
mov
add
pop
out
loop
dec
xor
pop
jmp
mov
cdq
and
mov
mov
sbb
dec
dec
xor
nop
fnstenv
ror
xchg
xor
add
jb
xchg
dec
mov
xor
lahf
pusha
out
stos
mov
(bad)
test
mov
das
shr
or
pop
aas
aas
fidivr
inc
out
adc
pop
clc
add
push
mov
mov
cwde
jo
rcl
xchg
inc
mov
test
dec
fmul
ret
pop
aam
aas
rol
sti
push
out
repnz
mov
push
push
test
sbb
cmp
mov
jo
pusha
sub
inc
fwait
mov
push
cs
nop
retf
outs
das
add
es
inc
clc
jae
test
jge
mov
repz
mov
sbb
outs
mov
inc
out
lahf
data16
jo
mov
pop
dec
xor
int
pavgw
sbb
das
test
or
fbld
ja
mov
inc
inc
ja
fist
jge
push
test
push
cmps
xor
mov
lods
add
mov
in
fadd
(bad)
loopne
das
xchg
jle
dec
sbb
jg
(bad)
or
mov
push
cmp
jae
fdivr
leave
addr16
jnp
pop
xchg
sbb
pushf
(bad)
arpl
jmp
out
(bad)
aas
mov
sbb
mov
mov
mov
jmp
xor
fs
sar
outs
jnp
mov
je
stos
(bad)
and
pusha
adc
jo
daa
call
test
pop
nop
fsubr
mov
or
in
jno
mov
iret
repnz
ins
rol
xor
inc
nop
das
cs
sbb
pop
xchg
(bad)
xor
mov
cmp
pop
mov
bound
enter
sub
fld
icebp
sti
aad
iret
into
jecxz
(bad)
sbb
js
pop
xor
xchg
aas
arpl
les
pop
scas
add
shl
movs
mov
ret
dec
sub
mov
scas
aam
mov
adc
(bad)
call
aas
repz
pop
or
inc
es
addr16
adc
xor
adc
mov
pop
cmp
aas
inc
push
dec
repz
inc
xchg
test
enter
addr16
arpl
out
mov
pop
imul
test
loop
sub
lahf
adc
out
dec
inc
xchg
fwait
mov
out
out
inc
mov
stc
push
pop
jl
inc
push
dec
repz
jl
(bad)
hlt
fiadd
mov
pushf
jae
shr
or
call
aas
cmpxchg
sbb
das
fcmovnb
adc
mov
fbstp
adc
mov
arpl
or
mov
int3
cmp
scas
push
adc
sub
jae
stos
jno
xchg
aaa
aas
xchg
dec
mov
jg
ret
fild
jmp
add
iret
ins
fwait
aaa
loope
es
jg
mov
enter
or
sbb
aam
jg
retf
addr16
lahf
ja
or
mov
fild
mov
imul
mov
inc
dec
xchg
nop
sar
push
xor
push
je
fistp
idiv
ror
jnp
sub
jecxz
sbb
sub
les
cmps
scas
popa
mov
or
push
mov
xchg
pop
push
xchg
(bad)
aas
pushf
or
inc
and
js
add
sti
mov
fs
dec
mov
pop
pop
rcl
adc
idiv
iret
xor
lahf
cmp
inc
mov
adc
mov
jmp
scas
test
dec
in
sbb
adc
fisttp
adc
mov
out
push
push
call
adc
cld
das
or
loop
mov
call
scas
or
push
ror
fild
btr
mov
nop
aam
cmp
ja
sbb
arpl
jmp
leave
mov
xor
mov
movs
adc
cmovg
sub
repnz
dec
and
dec
stos
cmp
das
addr16
scas
into
inc
xchg
sbb
popf
pop
xchg
js
ret
retf
sbb
sub
shr
mov
xor
dec
or
aas
add
outs
pop
in
imul
dec
scas
and
mov
sti
adc
cmp
sub
push
sbb
adc
test
mov
jmp
cmps
ficomp
or
jae
pop
(bad)
je
cmp
mov
push
test
test
pop
xchg
cmp
push
or
pandn
imul
fcomi
adc
push
push
iret
cmp
jne
das
jnp
js
push
add
in
test
ficomp
push
stos
push
push
int3
push
call
mov
out
jnp
gs
pop
popf
fisub
jnp
fst
stc
pop
cmc
and
je
jp
inc
imul
sub
dec
and
mov
xor
adc
pmaxsw
adc
stos
out
xor
mov
or
add
jnp
(bad)
mov
adc
xor
sahf
jmp
and
add
loopne
aas
push
pop
inc
pop
outs
lods
cmp
sbb
cmp
inc
xor
into
out
sub
test
daa
jnp
nop
sbb
mov
add
iret
mov
fcomp
ins
dec
sbb
rcr
out
xlat
aas
imul
daa
enter
mov
outs
dec
mov
imul
retf
sbb
outs
aas
sbb
retf
sub
iret
das
fwait
push
mov
or
jp
xchg
pop
hlt
ret
jmp
jg
xchg
adc
push
daa
inc
std
adc
stos
push
stos
daa
jle
or
loop
outs
cmp
push
cmp
sbb
inc
(bad)
adc
cs
mov
push
movzx
dec
aam
pop
ret
outs
push
cmp
dec
jnp
cmp
out
jl
outs
(bad)
inc
out
in
jnp
test
and
adc
inc
dec
mov
das
dec
(bad)
mov
imul
mov
push
sbb
push
imul
mov
add
lods
in
cmp
sti
scas
jbe
inc
xor
stos
inc
inc
push
jmp
das
xchg
ds
add
sbb
mov
retf
je
mov
mov
scas
mov
fist
mov
jne
das
cs
sub
fwait
leave
daa
jmp
sar
stos
xchg
push
adc
push
or
sbb
jge
jle
xor
push
shr
out
mov
jnp
mov
pop
sub
jp
mov
aam
outs
push
push
fiadd
(bad)
movs
dec
mov
xchg
stos
scas
in
mov
shld
jo
push
push
dec
dec
xor
cmp
jnp
lahf
cmps
scas
mov
and
sbb
mov
cmovg
aaa
sub
cmp
cwde
addr16
cmc
jmp
or
inc
xor
into
stos
add
je
inc
pop
in
movs
jno
push
push
dec
dec
(bad)
aam
cdq
outs
clc
(bad)
cmp
mov
push
mov
movhps
xchg
rcl
adc
adc
aaa
xor
lahf
cmp
inc
stos
mov
inc
stos
sbb
mov
ret
test
dec
in
sbb
sti
jo
fisttp
adc
mov
call
or
adc
out
shl
mov
push
retf
dec
and
scas
or
push
(bad)
iret
jecxz
mov
btr
push
jnp
hlt
cmps
pop
cld
sub
aas
pusha
add
pop
mov
stos
inc
lods
pop
mul
das
or
pop
mov
sbb
clc
fist
inc
mov
(bad)
out
scas
add
pusha
jnp
or
in
outs
int3
cmp
adc
sti
sub
jae
stos
call
imul
aas
jle
imul
rcr
jmp
add
iret
ins
fwait
aaa
sti
out
iret
inc
mov
enter
or
sbb
aam
jg
retf
mov
test
mov
movs
imul
mov
inc
dec
push
cmp
xor
jmp
sti
mov
stos
pop
cmc
(bad)
cmp
cmp
sub
jecxz
sbb
(bad)
sub
ja
scas
mov
or
push
mov
jle
add
xor
outs
mov
das
sahf
daa
adc
jmp
ins
in
mov
fldcw
outs
mov
dec
out
(bad)
retf
mov
mov
imul
push
pop
jp
outs
cs
dec
sbb
sub
stos
fdivr
mov
imul
mov
loop
cmp
cmp
in
cmp
mov
mov
repz
das
jnp
neg
pop
mov
xchg
add
sub
cli
mov
cmp
xor
sbb
pop
movzx
dec
or
inc
mov
xchg
cli
(bad)
mov
mov
sbb
imul
jge
add
inc
dec
xchg
adc
scas
mov
(bad)
call
fs
add
enter
das
push
ror
jg
js
jbe
and
sub
scas
fcom
lods
fmul
ins
fwait
out
mov
ror
mov
jnp
mov
mov
test
push
pusha
call
mov
fstp
inc
aaa
or
push
shr
mov
jecxz
cmp
stos
retf
fwait
movhps
mov
retf
pop
data16
les
arpl
rol
sub
(bad)
(bad)
jnp
inc
cli
dec
pop
pop
push
loopne
jnp
add
(bad)
xor
sbb
outs
jo
dec
inc
push
push
and
test
mov
jnp
mov
rcr
and
(bad)
pop
jae
lahf
pusha
scas
mov
jnp
pop
into
inc
mov
push
xchg
imul
cs
mov
xor
push
lahf
scas
mov
jb
and
jp
or
xlat
stos
movs
mov
sbb
pop
pop
mov
sbb
cmp
push
adc
push
jae
pop
lahf
pop
pop
loopne
mov
mov
repnz
jae
dec
into
push
sub
push
iret
push
and
pop
out
push
push
imul
ss
in
push
out
repz
cli
(bad)
mov
retf
or
dec
cvtdq2ps
(bad)
rcr
and
sub
cmp
sbb
fidiv
ja
jb
jg
inc
aaa
mov
jb
mov
pop
cmps
xchg
rol
scas
inc
add
iret
xor
fwait
push
ja
add
out
ret
rol
mov
xor
mov
jmp
adc
fwait
into
ror
stos
xchg
test
retf
sahf
xchg
nop
les
adc
jbe
je
and
add
sahf
mov
loopne
mov
xchg
jmp
pusha
into
push
sti
call
inc
push
mov
(bad)
not
mov
fidiv
fild
push
sti
sti
call
je
into
rcl
stos
movs
mov
test
mov
retf
ret
sub
mov
stos
mov
mov
out
aas
(bad)
jmp
xor
pop
and
mov
mov
push
push
adc
jae
rep
fist
out
sti
outs
jbe
inc
(bad)
lahf
mov
iret
ret
es
push
das
mov
(bad)
pop
das
ds
dec
xchg
adc
aaa
and
into
push
addr16
iret
pop
xchg
push
xchg
push
xchg
imul
cld
loope
mov
out
jo
shl
fiadd
mov
inc
nop
mov
les
sbb
mov
and
into
push
repz
je
push
add
repz
push
imul
dec
cmp
sbb
jg
aaa
retf
scas
arpl
ja
bts
xchg
pop
es
test
retf
pop
data16
mov
pusha
jg
pop
je
fwait
xchg
adc
jae
rol
cmps
xchg
out
jb
xchg
out
cmps
cmp
inc
inc
sbb
adc
sti
repnz
dec
(bad)
push
inc
aaa
outs
dec
push
xchg
imul
sbb
xchg
pop
outs
jle
xor
ds
and
mov
xchg
bound
loopne
(bad)
ss
add
data16
xchg
xchg
shl
xor
(bad)
cmp
int
mov
ja
mov
iret
jae
jg
inc
(bad)
xor
cmps
loop
repnz
dec
movs
and
retf
scas
jmp
scas
sub
jbe
(bad)
xchg
out
div
arpl
lahf
(bad)
cmps
fstp
sbb
push
jmp
push
push
add
ret
jp
fwait
imul
xchg
mov
pusha
packssdw
repnz
add
repnz
push
jmp
push
mov
mov
stos
xchg
push
arpl
push
jbe
je
data16
adc
xlat
mov
add
jg
add
pusha
or
pop
repnz
dec
jmp
(bad)
loop
dec
test
sub
xchg
xor
pop
pusha
sbb
adc
pop
fs
push
adc
add
fistp
(bad)
test
mov
xor
and
xchg
rol
je
fs
aam
pop
mov
mov
outs
in
aam
mov
xor
push
bound
aaa
ja
inc
push
(bad)
fs
rol
xchg
mov
dec
push
aam
scas
add
loop
xor
iret
inc
mov
push
adc
imul
shr
mov
xor
lahf
mov
call
fidiv
div
cs
sar
mov
lahf
pusha
mov
fisub
out
sahf
add
dec
loopne
xchg
test
jmp
or
and
add
jbe
xor
push
cli
out
mov
dec
mul
(bad)
rol
in
mul
and
cmps
arpl
test
add
je
pop
jecxz
mov
dec
into
pop
ret
mov
jo
adc
push
jbe
je
pop
and
adc
push
ds
push
rcl
test
mov
push
les
stos
sub
jnp
mov
aas
push
int3
pop
or
dec
ret
sub
pop
xor
lods
in
cdq
mov
outs
lods
inc
mov
stos
loopne
(bad)
ds
aam
jg
jae
sub
cmp
pop
mov
(bad)
nop
sbb
rcl
cmps
cmps
cmp
jae
or
dec
ja
jo
mov
pop
pop
fisub
sar
push
out
mov
arpl
mov
sub
adc
mov
pop
das
xor
ret
push
fwait
data16
cmp
pop
and
and
push
cli
push
outs
div
dec
dec
mul
mov
sbb
data16
mov
into
push
dec
repnz
iret
(bad)
arpl
inc
aaa
push
sbb
in
mov
or
mov
sti
xchg
fcmovnu
cli
jg
mov
movs
out
add
imul
add
xchg
pop
out
cmp
jae
and
cmps
loop
mov
pusha
daa
jp
mov
call
cwde
rcl
dec
dec
rcl
xor
pop
pop
xchg
push
add
je
into
rcr
sub
enter
loope
clc
mov
(bad)
xchg
daa
adc
sti
repnz
dec
(bad)
imul
lock
xchg
xchg
test
xchg
shl
nop
mov
xor
adc
(bad)
ja
pop
push
inc
iret
dec
inc
(bad)
pop
das
ds
add
in
outs
jle
pop
xor
lahf
pusha
add
add
iret
xor
and
mov
test
bound
inc
pop
dec
adc
pop
jbe
cmp
adc
xor
dec
cli
push
dec
ss
test
mov
or
xchg
mov
pusha
fwait
jmp
fild
mov
out
add
jb
dec
movs
xchg
es
(bad)
xchg
xchg
outs
aam
repz
xor
lahf
pusha
aas
jmp
jnp
xor
and
mov
iret
dec
shl
mov
mov
push
cmp
cmp
xor
lahf
pusha
or
jbe
je
push
and
daa
inc
jb
lock
das
imul
fld
jmp
retf
and
cmps
and
sti
je
fbld
add
sub
dec
mov
retf
xchg
push
nop
xchg
xor
shl
adc
dec
pop
mov
mov
add
push
movs
push
out
jnp
mov
retf
pop
data16
les
push
mov
pop
and
pop
push
sub
mov
in
or
jo
dec
xor
jle
idiv
pop
cs
sahf
add
cmps
outs
sti
xor
or
xor
dec
cli
push
aas
dec
imul
xchg
iret
dec
imul
dec
add
sbb
mov
test
and
jnp
test
mov
mov
inc
mov
or
and
sub
call
mov
pop
stos
bound
jp
lahf
xor
inc
adc
mov
xchg
addr16
aas
pop
call
push
xchg
fs
ret
rcr
push
out
mov
(bad)
mov
cli
out
mov
jle
mov
push
out
cmps
xchg
adc
mov
fucomip
(bad)
push
mov
nop
mov
inc
mov
outs
retf
retf
cmps
pop
add
inc
jmp
stos
(bad)
mul
mov
in
outs
jle
pop
dec
(bad)
or
cmps
and
jg
or
into
jnp
inc
aas
push
sbb
call
inc
mul
(bad)
sub
mov
(bad)
sahf
and
scas
fidivr
pop
fist
pop
(bad)
pop
pop
imul
mov
cmp
mov
mov
test
jle
mov
mov
(bad)
lahf
cmps
push
fdivp
je
(bad)
xchg
mov
dec
fcomip
push
jecxz
aas
inc
add
jg
stos
and
into
push
sti
sti
jne
add
fwait
movhps
das
test
cmps
push
out
lahf
clc
int3
xor
and
fsubp
mov
sahf
and
stos
mov
pushf
imul
scas
inc
ret
cmp
or
scas
xor
xchg
adc
in
push
dec
fcomip
adc
fcom
aaa
outs
cmp
cli
inc
mov
je
fwait
xchg
xchg
adc
not
jecxz
rol
sbb
xchg
jnp
lahf
adc
mov
fs
sub
jle
pop
dec
ret
sbb
xchg
daa
adc
adc
into
dec
jb
addr16
sahf
mov
xchg
(bad)
idiv
dec
pop
repnz
rcl
cmp
inc
inc
je
fs
mov
sub
hlt
ret
outs
and
(bad)
sahf
xor
push
push
add
mov
pop
mov
cs
call
stos
add
jmp
aaa
and
jmp
mov
enter
and
scas
movs
iret
dec
sar
jnp
mov
sar
nop
jbe
sbb
mov
(bad)
sbb
jnp
test
mov
es
(bad)
mov
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
adc
in
hlt
mov
(bad)
xchg
(bad)
mov
add
jo
add
and
popa
(bad)
xchg
mov
mov
adc
cvtps2pd
or
(bad)
in
stos
(bad)
mov
scas
jmp
ins
sub
dec
or
sub
out
aaa
jae
adc
in
cmc
mov
ret
cmps
loop
repnz
add
jmp
jae
add
ffreep
out
mov
pop
pop
das
jnp
or
pop
xor
fstp
fisubr
mov
iret
fwait
lds
pop
cs
pop
push
jnp
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
pop
jmp
fistp
mov
fld
or
outs
sub
cmovnp
pop
das
imul
shr
call
ficomp
loopne
jmp
stc
lods
pop
push
lods
iret
lahf
jmp
fbstp
mov
nop
aas
or
cmp
pop
jb
scas
adc
fild
cvtdq2ps
adc
cmp
pop
lahf
jmp
sti
mov
mov
mov
pop
imul
or
inc
int3
outs
cmp
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fild
mov
xchg
stos
out
mov
pop
imul
or
pop
sub
jg
popf
fistp
mov
xchg
stos
out
cmps
dec
pop
pop
jne
jnp
adc
outs
and
lahf
jmp
sti
mov
mov
mov
pop
imul
aas
or
pop
xor
cmp
adc
in
mov
sahf
shr
pop
loopne
(bad)
aas
hlt
dec
cmp
nop
cmp
(bad)
fistp
mov
fimul
or
imul
cmp
dec
sbb
retf
(bad)
and
jmp
sti
mov
stos
out
mov
pop
imul
sbb
sub
jg
(bad)
fistp
mov
fist
dec
pop
pop
imul
aas
or
pop
sub
jg
mov
lahf
jmp
sti
mov
stos
out
mov
sbb
jnp
or
pop
sub
jg
(bad)
fistp
mov
sahf
sti
stos
out
inc
cli
outs
sub
imul
aas
or
pop
sub
jg
stos
(bad)
mov
mov
stos
out
mov
pop
outs
or
hlt
dec
sbb
outs
cmp
(bad)
fistp
je
fimul
divps
imul
aas
or
pop
sub
fistp
mov
fild
or
imul
pop
or
pop
sub
jg
(bad)
fistp
mov
fild
es
pop
xchg
das
jle
or
pop
cs
cmp
(bad)
fidiv
mov
fist
dec
pop
pop
imul
adc
sub
push
retf
(bad)
and
jmp
(bad)
xchg
mov
out
mov
pop
imul
aas
and
pop
add
or
fidiv
iret
fild
and
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
or
fistp
mov
fild
lock
pop
imul
aas
or
adc
mov
scas
add
movs
iret
fwait
and
cvtdq2ps
imul
aas
or
pop
cs
adc
xor
fistp
mov
fwait
and
divps
imul
aas
push
jg
pop
aam
cmp
jmp
sti
inc
mov
sahf
out
call
pop
imul
ror
push
outs
sbb
jg
jo
lahf
jmp
retf
iret
ficomp
shld
das
jnp
or
or
(bad)
and
jmp
sti
lea
out
mov
lea
jnp
push
jl
pop
aam
cmp
(bad)
fistp
mov
out
mov
pop
xchg
sub
or
les
(bad)
fistp
mov
fild
divps
imul
aas
or
push
outs
les
jmp
sti
mov
stos
out
mov
pop
imul
aas
or
pop
sub
jg
mov
sti
mov
push
out
mov
pop
imul
or
dec
in
sbb
cmp
adc
int3
mov
stos
out
inc
cli
jae
pop
loopne
pop
jnp
hlt
dec
and
nop
ds
retf
(bad)
and
shr
ficom
ss
pop
xchg
das
jnp
xor
mov
retf
(bad)
and
jmp
inc
xchg
out
mov
pop
xchg
das
jnp
push
jne
pop
aam
add
jo
lahf
out
xchg
sti
mov
stos
adc
pop
xchg
sub
or
les
(bad)
(bad)
xchg
sti
mov
stos
out
inc
dec
pop
pop
xchg
das
jle
or
pop
sub
inc
retf
(bad)
and
out
xchg
sti
mov
stos
out
mov
pop
imul
cmp
dec
sbb
xor
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fist
dec
pop
pop
imul
aas
push
jo
pop
aam
cmp
(bad)
fistp
mov
fild
lock
pop
imul
aas
or
pop
imul
retf
(bad)
fistp
retf
iret
fwait
and
cvtdq2ps
imul
cmp
sbb
retf
(bad)
and
jmp
sti
mov
stos
out
mov
pop
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
cs
jg
(bad)
fistp
je
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
push
or
pop
aam
cmp
(bad)
(bad)
scas
sti
mov
stos
out
inc
cli
or
pop
loopne
das
jle
or
pop
sub
jg
(bad)
fistp
mov
fild
inc
pop
pop
xchg
das
jnp
or
pop
sub
jg
(bad)
fistp
mov
sahf
xchg
stos
out
inc
dec
pop
pop
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
(bad)
jmp
add
mov
mov
loopne
fs
hlt
mov
mov
xor
(bad)
jmp
add
mov
(bad)
out
mov
pop
imul
aas
hlt
mov
pop
outs
cmp
cmps
scas
sti
inc
mov
xlat
fild
inc
pop
pop
xchg
das
jle
or
mov
xor
(bad)
jmp
add
(bad)
iret
fwait
and
cvtdq2ps
imul
aas
mov
push
jg
jo
shr
scas
add
(bad)
and
or
imul
cmp
mov
xor
and
adc
add
mov
inc
cli
sbb
pop
loopne
sar
or
pop
jnp
cmp
out
(bad)
sti
mov
stos
adc
loopne
das
jnp
pop
dec
sbb
xor
fistp
mov
jmp
dec
imul
aas
push
sbb
cmp
(bad)
fmulp
jmp
add
fxch
fwait
and
add
test
pop
dec
sbb
xor
fistp
je
fild
cvtdq2ps
aas
jnp
ror
sbb
outs
outs
jg
mov
jmp
iret
fs
out
mov
pop
xchg
das
jnp
or
pop
sub
mov
ficomp
mov
pop
imul
aas
or
les
(bad)
and
jmp
add
mov
fild
divps
das
test
or
or
jg
(bad)
fistp
mov
mov
pop
imul
aas
or
pop
jae
cmp
adc
mov
fild
cvtdq2ps
xor
jnp
or
pop
sub
fistp
ror
fwait
and
or
pop
imul
aas
or
pop
cs
faddp
jmp
add
mov
rcr
adc
pop
imul
aas
push
adc
pop
aam
cmp
mov
mov
stos
out
inc
cli
pop
cvtdq2ps
outs
jae
aas
hlt
dec
inc
pop
sub
and
mov
sti
inc
mov
out
dec
lock
inc
imul
aas
or
pop
sub
jg
mov
mov
stos
out
mov
pop
imul
aas
or
les
rcr
lahf
adc
sti
mov
stos
jmp
imul
aas
or
pop
sub
jg
(bad)
fistp
aam
fwait
and
cvtdq2ps
imul
aas
or
pop
cs
jg
mov
mov
stos
out
mov
pop
imul
aas
or
pop
dec
outs
cmp
jmp
add
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
sbb
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jp
(bad)
(bad)
int3
sti
mov
stos
out
mov
pop
imul
aas
or
pop
sub
sbb
(bad)
and
out
retf
sahf
mov
stos
out
mov
pop
imul
pop
or
cmp
(bad)
fistp
mov
mov
pop
imul
pop
or
pop
dec
outs
cmp
jmp
sti
mov
push
out
mov
pop
imul
cmp
mov
retf
jo
call
cld
fild
cvtdq2ps
imul
aas
push
daa
sbb
push
jg
jo
call
fild
lock
jbe
das
test
bound
mov
xor
fistp
mov
fild
divps
das
test
popa
dec
sbb
xor
fdivp
jmp
add
mov
mov
sbb
das
jnp
or
xor
outs
les
mov
mov
push
out
mov
jae
das
test
push
and
pop
aam
ds
(bad)
and
out
ret
sti
mov
stos
out
inc
cli
es
outs
inc
jnp
hlt
dec
push
xor
outs
les
loop
lahf
adc
(bad)
ror
out
mov
pop
imul
cmp
sbb
retf
jo
call
fist
dec
pop
pop
imul
aas
or
pop
sub
adc
(bad)
and
jmp
sti
mov
stos
jmp
sbb
jnp
or
pop
sub
fistp
sti
iret
fwait
and
shld
das
jnp
or
sub
jg
(bad)
fistp
mov
fild
lock
ins
imul
cmp
sbb
retf
(bad)
fistp
je
fild
shld
das
jnp
or
pop
sub
fistp
clc
iret
fwait
and
lock
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
into
dec
pop
push
das
test
push
cmp
pop
aam
dec
jg
jo
call
fist
dec
pop
pop
imul
aas
or
pop
sbb
jg
mov
inc
je
fs
out
mov
pop
xchg
sub
or
cmp
(bad)
fsubrp
jmp
add
mov
sahf
test
out
inc
dec
pop
pop
imul
aas
or
daa
sub
jp
(bad)
(bad)
xlat
sti
mov
stos
jmp
imul
aas
push
sbb
outs
cmp
neg
lahf
adc
inc
mov
fild
lock
imul
cmp
sbb
xor
mov
mov
stos
out
mov
pop
imul
inc
or
pop
push
outs
cmp
jmp
sti
mov
push
adc
cvtdq2ps
imul
cmp
sbb
mov
(bad)
sar
mov
stos
adc
sbb
das
jnp
or
pop
sub
(bad)
sar
mov
stos
out
mov
sbb
xor
pop
aam
cmp
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
movs
lahf
jmp
inc
mov
fist
dec
pop
lahf
imul
cmp
out
cmp
mov
jmp
sti
mov
stos
out
inc
dec
pop
sbb
das
jnp
push
into
sbb
outs
ds
(bad)
and
out
cs
mov
stos
adc
cvtdq2ps
imul
aas
or
pop
sub
jg
or
(bad)
cmp
sub
mov
pop
xchg
das
jle
or
pop
sub
int
(bad)
fist
jmp
sti
xor
mov
and
mov
pop
jns
jmp
or
sti
lods
outs
sub
pop
push
adc
and
inc
adc
xor
test
xchg
loopne
lock
les
loope
adc
ja
popa
and
cmp
sub
or
fistp
(bad)
int3
cdq
out
retf
sub
dec
or
cs
jp
dec
push
pop
out
test
fstp
sub
cmp
inc
add
and
add
bound
jb
adc
out
repz
(bad)
xchg
iret
sub
pop
adc
(bad)
retf
fsubr
ficom
pop
inc
sbb
sub
sub
(bad)
sti
scas
lahf
lods
fstp
faddp
in
fdivrp
cs
pop
add
dec
jns
sbb
retf
out
sahf
lahf
in
sahf
test
jge
jae
dec
adc
dec
sub
sub
mov
lahf
scas
cwde
call
into
mov
push
pop
dec
sub
or
dec
or
pop
jg
out
test
fucomi
int
mov
in
(bad)
mov
imul
cmp
cmp
retf
loopne
sti
jmp
sti
int
mov
jmp
jno
ins
push
bound
jle
pop
push
cmp
cmps
fdiv
out
stos
fwait
lods
stos
mov
jmp
mov
aas
inc
dec
pop
jg
jne
inc
outs
push
jg
(bad)
mov
movs
rcr
(bad)
scas
out
nop
dec
jge
outs
packssdw
push
jle
outs
pop
or
stos
loope
inc
nop
fadd
push
dec
pop
and
jp
jg
and
sub
pop
or
stos
(bad)
mov
lods
fmul
add
sbb
sbb
movq
adc
jnp
mov
mov
(bad)
jmp
stos
(bad)
scas
cli
mov
sub
jg
dec
pop
add
jg
mov
rcl
cdq
fld
or
jg
add
jle
jnp
movs
cld
cdq
lahf
(bad)
in
cwde
(bad)
stc
(bad)
int
jmp
enter
xor
push
aas
sub
(bad)
aam
scas
retf
retf
jmp
out
fwait
mov
sar
das
pop
dec
inc
or
cmove
je
add
mov
and
(bad)
stos
mov
imul
adc
or
jb
dec
sbb
sbb
ficomp
int
scas
out
mov
(bad)
fstp
xor
ins
or
jle
dec
jns
femms
dec
adc
fstp
fdivrp
mov
sti
jmp
ins
sbb
jns
jg
jg
pusha
pop
cmp
out
loopne
(bad)
aam
mov
mov
call
ror
fs
sbb
dec
dec
and
jno
jp
mov
fwait
leave
mov
retf
mov
retf
mov
sbb
jg
and
jnp
pop
or
std
test
cdq
fld
mov
sbb
js
dec
sbb
sub
imul
lods
out
test
mov
call
nop
cmp
add
dec
dec
sub
push
sub
dec
aas
sti
mov
int
lods
jmp
mov
imul
push
cmp
pusha
inc
add
mov
mov
retf
out
lods
repnz
cmp
pop
dec
inc
dec
add
jp
imul
or
stos
fwait
lahf
(bad)
nop
xchg
sti
aam
stos
(bad)
stos
pushf
rcl
pop
jle
dec
bound
jp
imul
mov
mov
lahf
ret
xchg
aas
dec
xor
sub
sbb
imul
out
(bad)
jmp
fisttp
test
xor
sub
cmp
pop
add
aas
mov
fwait
(bad)
cwde
rcl
jmp
dec
or
cmp
pop
imul
sbb
scas
cdq
int
scas
out
mov
mov
xchg
or
aas
pop
or
jg
cs
add
scas
out
fstp
jmp
cli
mov
sub
sbb
sub
sub
aas
mov
scas
popf
jmp
xchg
int3
mov
cdq
fisubr
movntps
das
jnp
or
sub
cmp
mov
lock
loopne
lods
dec
pusha
add
das
pop
pop
jnp
sbb
outs
cmp
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
pop
dec
or
sbb
jne
rcl
loopne
xchg
rol
loop
adc
jne
and
jo
pop
jmp
sti
mov
stos
out
mov
(bad)
js
dec
or
sbb
imul
out
cmc
mov
adc
lock
mov
jnp
imul
push
dec
push
cmp
ins
sbb
dec
clc
mov
iret
mov
fimul
sub
dec
or
sub
adc
inc
div
mov
popf
call
dec
pop
pop
das
imul
dec
or
outs
sub
(bad)
leave
popf
fsubr
rcl
add
push
and
jne
add
jo
add
pop
sub
add
adc
je
fisttp
out
ficomp
jmp
dec
cmp
imul
or
outs
sub
stc
lods
call
cld
mov
cmps
adc
inc
xor
push
adc
les
(bad)
fcomp
add
(bad)
mov
add
jo
add
daa
arpl
jae
adc
out
cmc
mov
rcl
inc
add
jnp
imul
pop
or
jle
ins
fstp
aad
mov
fisttp
sub
dec
or
sub
sbb
add
mov
cmps
rcl
mov
les
pusha
and
adc
aaa
jae
bound
push
push
inc
cmc
mov
mov
mov
fstp
pop
inc
push
push
and
sub
pop
dec
push
jp
push
cdq
fisttp
in
fcomp
stos
pop
pop
push
dec
ds
imul
ins
sub
mov
xchg
mov
movs
daa
bound
dec
js
outs
sub
dec
or
fmul
rcl
and
push
add
xor
and
adc
add
rol
mov
xor
push
ret
xor
(bad)
mov
sub
xor
pop
push
push
bound
jb
add
aad
in
hlt
rol
pop
inc
push
push
bound
jb
add
and
rcl
sahf
retf
call
pop
push
add
fild
push
pop
push
push
jns
or
pop
sub
enter
out
stos
(bad)
mov
scas
jmp
pop
sbb
cmp
adc
xor
xchg
mov
mov
movs
xchg
rol
fisubr
jp
dec
or
cmp
sbb
stos
(bad)
mov
scas
jmp
ins
sub
or
and
ja
inc
adc
cmps
icebp
mov
test
xchg
mov
imul
out
div
cmps
loop
repnz
add
and
inc
adc
cmp
outs
fistp
jmp
cld
test
pop
sbb
or
outs
sub
pop
push
dec
ds
push
loope
div
mov
fmul
sub
dec
or
jp
imul
cwde
int3
xchg
(bad)
add
ss
and
xor
adc
div
mov
fistp
out
test
cmp
and
pop
inc
push
jb
bound
xchg
aad
lds
xchg
rol
push
inc
ss
bound
inc
add
and
fucomip
scas
cli
test
xor
bound
iret
fisubr
or
jns
or
sub
jnp
mov
call
popf
fldcw
or
daa
jae
add
push
and
jbe
call
stos
out
mov
fisubr
jle
dec
or
sub
dec
adc
cmps
repz
xchg
xchg
mov
lds
xor
add
adc
arpl
jb
inc
push
push
out
cmc
mov
adc
pop
sub
cmp
ret
out
push
cmp
out
dec
add
jl
add
pop
and
jnp
std
call
(bad)
xchg
aad
call
push
push
and
inc
pop
pop
sub
test
xchg
loop
stc
mov
mov
pop
pop
sbb
je
add
imul
rcr
mov
push
es
cs
mov
lock
or
(bad)
add
test
xor
xchg
xchg
in
hlt
mov
stos
xchg
mov
arpl
or
push
aaa
or
xor
mov
cdq
mov
fisubr
pop
adc
jns
add
pop
sub
js
pop
lock
enter
vmovd
adc
adc
ja
xor
sbb
mov
test
add
popa
and
dec
pop
pop
sub
aas
jno
int3
mov
mov
fistp
int3
push
mov
sub
add
push
and
jns
mov
xchg
in
mov
nop
fistp
or
imul
imul
ss
mov
fwait
in
scas
inc
sbb
ins
or
or
gs
lods
push
stos
sbb
fdiv
jae
or
and
mov
mov
add
out
into
jb
push
pop
sub
mov
int3
pop
jo
stc
sub
jmp
scas
sti
push
sbb
mov
ds
sub
dec
push
pop
mov
test
(bad)
dec
cmp
ds
add
sbb
mov
push
iret
sub
test
pop
repnz
scas
test
mov
repnz
push
dec
dec
packuswb
push
inc
scas
cmps
sub
jo
dec
push
push
lahf
(bad)
ds
stos
je
pop
cmp
pop
sub
mov
aas
(bad)
sahf
push
jg
retf
js
lods
ds
or
(bad)
mov
ss
jnp
and
sub
mov
cmp
adc
cwde
dec
loopne
js
adc
adc
stos
psubusw
mov
inc
dec
fild
xchg
das
in
add
dec
cs
cwde
out
pushf
push
jmp
pop
imul
sub
stc
aam
mov
xor
jge
neg
push
ins
cmp
dec
mov
mov
or
pop
sub
jg
(bad)
fistp
mov
fild
jge
pop
imul
aas
or
pop
xor
or
jmp
sti
mov
stos
out
mov
pop
imul
aas
or
pop
sub
fistp
mov
mov
pop
imul
aas
or
pop
sub
jg
(bad)
fistp
xchg
lock
call
arpl
jg
dec
sbb
and
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
jge
pop
push
pop
adc
sub
sbb
in
lahf
cdq
sar
fsub
iret
push
das
xor
push
add
bound
jno
sub
pop
sbb
retf
xchg
(bad)
cmps
call
xchg
xchg
cmp
pop
dec
pop
pop
push
jg
outs
jg
or
movs
out
out
retf
(bad)
out
cli
mov
daa
push
jno
pop
adc
jp
or
jmp
in
stos
(bad)
jecxz
retf
(bad)
xchg
adc
dec
popa
jnp
adc
push
or
pop
inc
add
movs
out
icebp
test
pushf
(bad)
cmps
hlt
mov
adc
cmp
jl
pop
push
pop
or
je
pop
dec
sbb
mov
scas
sti
retf
and
popf
mov
and
cmp
add
movs
scas
sti
in
lahf
fist
fild
push
ins
add
aas
cmp
sbb
retf
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
dec
push
pop
sbb
(bad)
jecxz
clc
scas
jmp
lea
dec
push
aas
outs
imul
(bad)
fistp
mov
mov
fisttp
aas
xor
adc
jp
sub
pop
push
stos
std
loope
or
fucomi
iret
out
mov
mov
xchg
dec
jnp
jle
pop
inc
aas
or
sub
push
jg
(bad)
scas
cli
jmp
cdq
mov
stos
out
mov
pop
imul
aas
or
pop
sub
jg
jne
lahf
jmp
sti
mov
stos
out
mov
pop
imul
(bad)
lock
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
pop
jns
je
dec
outs
pop
jg
(bad)
fistp
mov
call
lea
sub
dec
adc
sub
dec
outs
cmp
retf
(bad)
(bad)
jmp
sti
fimul
out
aam
dec
arpl
or
jnp
or
cmp
outs
inc
jg
in
fistp
mov
int
dec
pop
pop
imul
aas
or
pop
sub
jg
loopne
lahf
jmp
sti
mov
stos
out
mov
pop
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
bound
jle
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
(bad)
popf
mov
imul
push
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
dec
jno
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
in
fild
xor
pop
jae
adc
or
pop
sub
jg
(bad)
fistp
mov
fbld
cvtdq2ps
imul
aas
or
pop
sub
push
scas
iret
fistp
mov
fild
push
pop
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fwait
(bad)
xchg
xchg
pop
imul
aas
or
pop
xor
jg
mov
lahf
jmp
sti
mov
stos
out
mov
pop
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
mov
lahf
out
scas
sti
mov
stos
jmp
dec
pop
sbb
jg
or
pop
das
outs
cmp
(bad)
fistp
(bad)
iret
fld
or
outs
dec
jg
(bad)
pop
sub
sbb
push
iret
cmc
(bad)
out
sar
aas
(bad)
dec
lahf
pop
scas
outs
mov
or
cmp
cmovg
pop
sub
jg
(bad)
fisttp
mov
mov
xchg
nop
jmp
dec
adc
jnp
push
rcl
out
lods
aam
in
out
lods
aam
adc
das
ins
adc
sub
sub
dec
lea
in
mov
in
cmps
(bad)
mov
sub
jl
data16
dec
or
adc
mul
jmp
iret
test
xchg
repz
add
adc
dec
sbb
pop
or
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
cmps
(bad)
push
jbe
out
mov
fbld
mov
jnp
or
fsub
or
inc
inc
jp
fs
mov
into
xchg
fcmovnb
and
outs
sub
adc
and
inc
xchg
push
rcl
out
mov
cmp
pop
sbb
ja
and
push
push
inc
daa
(bad)
mov
mov
mov
fcmovnb
xchg
cmovb
add
ds
add
lock
stos
fsubrp
test
mov
mov
xchg
nop
out
jle
and
das
dec
sti
dec
xor
and
dec
xchg
sti
pop
cmc
movs
fwait
into
mov
fwait
cmp
pop
imul
sub
sbb
es
mov
jnp
hlt
mov
out
xor
or
adc
stos
out
mov
loopne
rol
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
shld
das
jnp
or
pop
sub
or
fistp
mov
fild
or
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fist
dec
movs
pop
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
fistp
mov
fild
shld
das
jnp
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
aam
cmp
(bad)
fistp
mov
fild
cvtdq2ps
xchg
das
jnp
or
mov
retf
(bad)
fistp
mov
fild
cvtdq2ps
imul
ror
sbb
outs
cmp
(bad)
fistp
mov
fist
dec
pop
pop
imul
aas
or
pop
sub
jg
(bad)
fistp
je
fist
dec
pop
pop
imul
aas
or
pop
das
outs
cmp
(bad)
fistp
mov
fld
cvtdq2ps
das
jnp
or
cmp
jo
lahf
jmp
clc
mov
test
mov
sbb
das
jnp
hlt
dec
adc
outs
cmp
(bad)
(bad)
scas
sti
mov
push
out
mov
packssdw
jnp
or
pop
sub
jg
(bad)
fisub
scas
sti
inc
mov
fild
maxps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
xor
pusha
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
mov
fist
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
jnp
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
or
pop
sub
jg
(bad)
fistp
mov
fist
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
jo
pusha
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
and
adc
add
je
and
add
test
hlt
mov
mov
xor
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
mov
fild
cvtdq2ps
imul
aas
or
pop
sub
jg
(bad)
fistp
jmp
xchg
dec
bound
dec
es
outs
dec
or
or
into
mov
out
mov
enter
and
dec
or
cmp
push
push
dec
or
fcmovb
fucom
mov
cdq
pushf
cmp
sub
dec
add
push
ins
push
or
stos
int3
mov
jmp
das
cmp
push
add
sbb
das
js
pop
push
mul
mov
cmp
add
mov
cmp
fistp
cmp
jg
retf
dec
xchg
mov
das
imul
xor
sbb
into
mov
jmp
scas
sbb
call
aas
out
pushf
imul
aas
ror
sbb
sbb
scas
js
stc
in
test
fld
jg
push
pop
cdq
nop
daa
daa
cmp
xchg
(bad)
out
fld
(bad)
mov
or
mov
cld
mov
push
cmp
mov
clc
out
fistp
jmp
xchg
mov
cmps
cli
mov
iret
aad
jbe
mov
sub
cdq
loop
and
dec
cmp
dec
push
mov
mov
mov
ror
add
xor
stc
stos
repnz
pop
int
fistp
dec
or
fcomi
mov
adc
mov
popf
or
mov
fmulp
fwait
nop
sub
jnp
jmp
outs
mov
pop
jmp
rcl
(bad)
shr
imul
fistp
jmp
(bad)
fldcw
pop
(bad)
mov
fnstsw
jmp
add
aaa
pop
pop
cs
dec
bound
sbb
fcomip
lahf
mov
jmp
mov
push
inc
push
push
sub
cmp
es
pop
jne
in
mov
int
in
mov
stos
imul
jo
nop
and
inc
sbb
mov
(bad)
fcmovnu
in
call
fild
imul
pop
and
or
mov
sar
mov
jnp
sbb
pop
addr16
push
pop
shl
mov
out
mov
mov
jnp
dec
and
ja
js
sbb
jmp
fisttp
mov
in
(bad)
daa
daa
push
jo
inc
or
outs
ja
or
push
push
mov
out
mov
sahf
frndint
mov
iret
mov
inc
pop
sbb
es
imul
loope
icebp
ret
xchg
loop
repnz
inc
adc
popa
xor
add
bound
jb
add
shl
adc
mov
inc
adc
popa
xor
add
bound
jb
add
shl
adc
mov
inc
adc
popa
xor
add
bound
jb
add
shl
adc
mov
inc
adc
popa
xor
add
bound
jb
add
shl
adc
mov
inc
adc
popa
xor
add
bound
jb
add
shl
adc
mov
inc
adc
popa
xor
add
bound
jb
add
shl
adc
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
dec
stc
mov
fbld
jno
dec
add
nop
nop
nop
nop
nop
nop
nop
imul
pop
retf
dec
add
out
or
sbb
push
mov
mov
dec
lock
mov
fucomi
push
pop
iret
dec
mov
or
or
stc
imul
fmul
cmp
jmp
mov
pop
stos
sub
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
sub
sar
mov
or
cld
loopne
pop
adc
lods
pop
iret
jecxz
xchg
jl
fwait
into
xchg
pop
cmc
stos
cmp
scas
(bad)
hlt
into
xchg
movhlps
sti
clc
jmp
nop
xchg
test
retf
xchg
sbb
ror
cld
and
aaa
stc
dec
sbb
and
mov
sub
into
sbb
movs
mov
mov
int3
outs
sub
mov
push
mov
ds
mov
cld
xchg
mov
clc
aas
cmc
sbb
stc
ret
leave
mov
stos
rcr
das
stc
add
mov
(bad)
fisttp
cli
ins
aaa
pop
xor
sti
push
jnp
imul
inc
xchg
mov
sti
cmp
push
cmp
cs
xor
cmps
int3
ret
mov
sbb
sti
xchg
jmp
(bad)
add
inc
and
cs
pop
test
dec
and
push
pop
ins
fdivr
fild
dec
push
cmp
sub
lds
in
add
dec
fmul
lods
loopne
push
inc
cmp
cli
ins
fstp
push
js
sub
or
add
sub
lods
mov
loop
pop
jl
jnp
pop
retf
dec
mov
hlt
pushf
or
cld
das
in
mov
call
test
in
gs
pop
iret
dec
sbb
push
jnp
imul
xor
lods
sbb
ins
xor
dec
mov
mov
imul
cwde
mov
or
(bad)
sub
pop
sub
jmp
jg
sub
or
pop
and
cmp
iret
scas
jnp
jl
pop
fmul
sar
mov
xor
test
cmp
sub
sbb
dec
fdivr
cmp
and
cmp
bndstx
add
fild
push
rcr
pop
imul
ret
pushf
jecxz
sti
sub
(bad)
mov
or
mov
dec
xor
mov
inc
pop
aas
or
push
ins
stos
pop
and
sbb
cmp
adc
pop
int3
(bad)
mov
test
adc
nop
(bad)
mov
sbb
sbb
jb
pop
arpl
or
in
dec
sbb
popa
cdq
sti
sub
jg
cmp
jne
hlt
mov
cld
imul
pop
push
dec
jbe
xchg
jmp
pop
and
test
mov
dec
std
outs
inc
cmps
icebp
sbb
sti
outs
xor
repnz
jle
retf
pop
pop
retf
out
cmp
ret
pop
xchg
pop
(bad)
es
fistp
or
add
add
push
mov
jecxz
xchg
jl
fwait
into
xchg
pop
cmc
stos
cmp
sub
sbb
pop
sub
dec
movs
cmp
in
or
inc
inc
ins
jmp
(bad)
add
adc
aad
fwait
into
mov
cmp
repz
add
stos
xchg
push
fcomp
std
pop
xor
cmp
jl
pop
mov
mov
jl
ins
gs
or
cmc
fst
cmp
mov
cmp
sbb
lds
and
bound
mov
int3
dec
iret
and
cld
sub
das
mov
cs
mov
mov
pop
xor
mov
dec
lock
adc
stc
repz
inc
cs
movs
call
jns
push
cld
sub
dec
sub
jne
das
sti
xchg
lock
sub
push
js
sub
pop
mov
jnp
imul
mov
loop
pop
jl
ja
lods
retf
sar
nop
or
cld
fucomip
mov
call
inc
sbb
gs
pop
and
out
inc
push
jnp
imul
movq
push
xor
cmp
xor
mov
mov
xchg
neg
mov
mov
jno
cmp
scas
iret
(bad)
sub
pop
sub
out
add
dec
and
add
sub
and
shr
scas
jnp
jno
mov
jmp
sar
mov
test
test
cmp
sub
sbb
dec
fdivr
xor
ss
xor
push
outs
bndstx
adc
xor
push
(bad)
fwait
lods
mov
aas
pop
imul
mov
call
sti
xchg
jmp
(bad)
mov
jb
adc
mov
dec
and
push
sub
aas
or
add
and
sbb
jnp
or
or
xchg
push
lods
cmp
daa
movs
cwde
(bad)
rcl
jge
jo
sbb
xlat
ins
or
ret
push
fadd
mov
dec
cwde
arpl
aad
mov
(bad)
or
dec
(bad)
mov
fdiv
cmp
dec
dec
push
sti
sti
cwde
scas
and
pop
das
mov
(bad)
sbb
iret
test
in
mov
ror
pushf
popa
cdq
sti
sub
ins
mov
cmp
jne
hlt
mov
movs
sub
and
inc
sbb
lods
sub
push
sbb
cmp
je
cmp
in
mov
mov
jle
jnp
lds
fs
adc
rcl
inc
adc
jnp
cmp
pop
loop
int3
sar
sahf
add
pop
aad
pop
daa
dec
inc
cmp
jnp
pop
mov
jnp
imul
loop
mov
test
sub
inc
sub
sbb
xchg
and
xlat
clc
mov
inc
movs
jl
jns
or
arpl
retf
adc
mov
repnz
cmp
sbb
popa
push
(bad)
adc
jnp
das
dec
pop
xor
int3
out
ja
repnz
mov
hlt
retf
movs
call
push
or
cld
sub
pusha
sub
sbb
das
sti
xchg
cmc
ins
pop
pop
mov
push
js
sub
add
add
and
pushf
loop
pop
jl
jo
xchg
js
aad
(bad)
fwait
hlt
xchg
or
cld
sti
in
mov
call
jbe
ins
or
fucomip
test
pop
adc
inc
push
jnp
imul
lods
ret
mov
cmp
xor
xchg
mov
mov
mov
repz
mov
inc
or
(bad)
sub
pop
sub
loop
cmp
dec
and
add
jl
sub
and
jmp
sbb
adc
in
(bad)
fdivr
int3
sar
mov
pop
jmp
lahf
dec
movs
movs
cmp
sub
sbb
dec
fdivr
xor
or
cmp
bndstx
cs
ins
xor
push
stc
fwait
ins
mov
aas
pop
imul
lahf
int3
repz
jecxz
sti
test
ins
(bad)
mov
dec
sbb
or
daa
bound
inc
xchg
ds
test
mov
mov
cld
mov
cs
or
in
lods
inc
push
add
ss
mov
sbb
xchg
add
mov
(bad)
sub
pop
pushf
inc
(bad)
mov
test
mov
jmp
imul
fcomp
cmp
dec
mov
aas
aas
fcmovnbe
jae
dec
jb
shr
arpl
jnp
mul
cwde
mov
lods
sbb
out
out
or
sahf
dec
mov
or
sbb
xor
inc
dec
clc
xlat
and
adc
pusha
aas
sub
nop
and
aaa
sar
call
cmp
inc
iret
daa
out
dec
jo
jl
xchg
pop
call
dec
hlt
push
push
lahf
cld
add
leave
scas
fnstsw
xchg
cmp
sti
icebp
(bad)
outs
retf
or
jns
jmp
pusha
adc
xor
imul
jl
lods
rol
dec
imul
push
in
jno
popa
mov
pop
or
inc
cmps
inc
nop
xchg
or
lods
nop
scas
cmp
adc
or
cld
cmp
xchg
add
mov
jg
mov
add
sub
(bad)
imul
mov
imul
xor
or
pop
inc
lea
das
and
clc
sti
mov
cmp
mov
(bad)
in
pop
sbb
push
enter
cld
rcr
jg
sti
sub
pop
add
jo
stos
sub
fcomp
int3
mov
sub
rcr
and
loop
mov
push
pop
das
cmp
mov
or
fistp
imul
dec
out
pop
outs
imul
jb
cmp
fcmovne
js
call
or
les
mul
jmp
pop
jmp
sub
ja
or
retf
retf
stos
pop
stos
sbb
(bad)
jnp
jle
dec
fcomp
and
in
sub
add
jnp
sbb
lds
mov
jecxz
cmp
ret
outs
mov
sti
mov
aaa
or
out
dec
fdiv
add
in
rcl
je
leave
sub
jl
ins
into
sub
or
or
imul
fadd
int3
cmp
mov
clc
sub
daa
and
xor
jae
hlt
jp
test
in
pop
data16
punpckhbw
sar
adc
push
rcr
sub
lahf
je
jbe
imul
stc
sub
cwde
arpl
mov
cmp
dec
clc
push
cmp
mov
scas
xchg
out
push
xor
mov
ret
icebp
mov
fisttp
or
or
imul
push
dec
cmp
jl
(bad)
sbb
mov
addr16
rcr
jl
sbb
pop
enter
jp
push
or
or
mov
ja
push
cmp
cmps
adc
lds
jbe
cmp
mov
inc
pop
movs
mov
lahf
aaa
pop
inc
pop
ss
(bad)
pop
aas
mov
stc
add
mov
pop
rcr
or
jbe
jmp
push
dec
inc
mov
ret
inc
sub
sbb
repz
xchg
test
mov
aam
arpl
xchg
sbb
popa
(bad)
call
leave
ret
inc
shl
xlat
cld
sbb
or
faddp
inc
cmp
repz
lods
imul
mov
pop
dec
mov
scas
nop
lahf
pmaxub
int
mov
std
xchg
adc
pop
inc
cmp
dec
inc
pusha
(bad)
xor
mov
hlt
mov
lsl
pop
fldcw
pop
inc
cmp
in
jg
lods
cmp
ret
cli
cmp
lods
imul
in
jnp
pop
je
enter
ins
sbb
mov
mov
adc
out
rcr
mov
lods
fstp
push
retf
movs
idiv
mov
repnz
sub
lods
pop
lods
sub
sub
mov
(bad)
xor
mov
lds
adc
mov
mov
or
das
lods
xchg
(bad)
(bad)
dec
xor
scas
movs
test
ja
sub
int3
jle
pop
inc
sbb
or
fisubr
jl
sbb
dec
sub
xor
xor
cli
pop
pushf
pop
leave
add
mov
lods
outs
call
pop
or
adc
sub
cmp
mov
(bad)
jmp
shl
pushf
out
and
or
cli
xor
cwde
dec
and
inc
pop
push
fs
hlt
pop
cmp
pop
inc
les
clc
push
fwait
xchg
lea
inc
and
int3
inc
sub
nop
pusha
hlt
enter
test
ins
fwait
shl
repz
adc
popa
dec
aam
sub
push
je
fs
aam
mov
jmp
imul
inc
inc
push
mov
test
rcr
fidiv
fs
xchg
adc
outs
push
push
dec
pop
hlt
je
ins
push
sbb
pop
mov
cmps
nop
xchg
mov
push
jbe
sub
xchg
mov
xlat
call
jo
cli
ins
fistp
retf
movs
push
push
push
in
fwait
hlt
aam
xchg
cld
add
push
fimul
xchg
jle
das
mov
xchg
test
sti
pop
sbb
mov
pop
bswap
adc
jmp
daa
outs
fadd
popf
jmp
scas
sub
js
cmp
pop
iret
pop
outs
mov
jb
pop
fcomp
mov
fstp
dec
xor
pop
scas
mov
test
mov
push
mov
adc
and
inc
hlt
mov
or
push
rcl
(bad)
xlat
xor
or
xchg
adc
xchg
js
mov
ret
inc
cmp
cdq
add
clc
es
cwde
enter
retf
sbb
(bad)
mov
or
pusha
(bad)
push
rcl
sbb
sbb
in
out
shl
and
cmp
cmc
in
jbe
aas
sub
and
(bad)
ins
mov
adc
cwde
movs
leave
mov
jle
mov
out
hlt
sar
scas
outs
mov
or
cmp
push
dec
retf
loopne
pop
xchg
rol
mov
sbb
xor
inc
js
scas
push
test
jnp
outs
nop
dec
adc
mov
pop
jo
sub
sti
or
cs
hlt
xchg
lock
mov
mov
pop
int3
imul
jbe
jmp
(bad)
stos
out
fwait
sbb
test
push
push
int
add
dec
fadd
sar
xchg
cmp
fimul
inc
sub
or
xchg
in
pop
and
int
push
data16
nop
pop
inc
popf
enter
xor
into
push
das
cmp
mov
adc
int
pushf
sub
inc
push
test
xor
add
jmp
retf
ins
mov
or
jle
sbb
lds
clc
aam
mov
jl
jge
ins
retf
dec
and
push
sbb
iret
or
add
sub
jp
mov
dec
mov
jl
push
cmp
out
pop
in
sbb
test
js
outs
or
pop
adc
aas
push
retf
test
mov
(bad)
xchg
push
or
je
stc
push
sbb
(bad)
icebp
jmp
sbb
gs
add
push
imul
adc
or
mov
dec
ret
out
inc
fcom
sub
(bad)
push
cli
stos
lahf
sbb
xor
out
ja
je
test
das
adc
mov
inc
pusha
pop
or
pusha
out
dec
clc
sbb
aas
dec
call
test
lods
jb
or
inc
sbb
dec
test
stos
fsub
mov
dec
fistp
mov
jmp
xor
bswap
les
(bad)
mov
shl
inc
and
shl
enter
sbb
and
icebp
fwait
arpl
cmp
sub
inc
(bad)
mov
jecxz
retf
push
iret
sub
imul
adc
test
daa
dec
xor
mov
loopne
fdivr
lahf
sub
dec
call
dec
push
aaa
ins
cmps
jge
bnd
(bad)
ins
scas
imul
pop
xlat
pop
dec
inc
xor
inc
retf
mov
xchg
retf
adc
mov
ror
into
test
add
test
jle
xchg
fadd
jae
jmp
push
dec
retf
push
mov
xchg
inc
or
jmp
dec
xor
xor
jno
jecxz
movs
sub
adc
cmp
(bad)
or
daa
imul
mov
mov
sbb
(bad)
std
cwde
pop
pop
sub
mov
das
add
pushf
jle
cmp
pushf
stc
sbb
ret
hlt
outs
ja
fmul
movs
lahf
xchg
xchg
and
jmp
sub
push
call
(bad)
sbb
pop
mov
mov
dec
mov
sti
sub
ins
and
xor
call
pop
into
rep
mov
pusha
ret
mov
dec
(bad)
div
and
add
addr16
mov
cmp
fisttp
sub
in
cmp
or
stc
mov
or
out
ret
pop
int3
fs
rcl
mov
mov
xlat
push
stos
ins
or
ds
mov
inc
outs
pushf
xchg
popa
push
push
mov
jle
data16
sbb
jl
jl
push
push
push
call
daa
iret
xchg
cld
push
daa
pop
push
pmaxub
pop
test
xchg
sub
push
pushf
popf
or
cmp
cmps
adc
mov
imul
adc
or
push
nop
push
inc
xchg
mov
push
or
iret
push
stos
sub
xchg
dec
int
jmp
pop
mov
mov
ffreep
div
lods
scas
push
mov
jae
sbb
dec
nop
add
imul
pushf
sub
push
inc
iret
push
cmp
pop
cdq
mov
add
hlt
sub
mov
add
pusha
sbb
pop
xchg
or
stos
sub
in
outs
mov
inc
dec
(bad)
(bad)
fcmovnu
sbb
push
xor
add
hlt
gs
mov
test
adc
cli
mov
sbb
mov
xor
dec
adc
jg
sub
cmps
jmp
mov
cmp
add
jmp
nop
and
pop
ja
inc
cmp
pop
xlat
adc
imul
xlat
test
and
sbb
lds
and
in
mov
test
arpl
cli
mov
add
mul
rcr
(bad)
iret
cmp
jne
xchg
(bad)
stc
jnp
sub
ins
sbb
dec
mov
xchg
jmp
cld
xor
aad
add
(bad)
ja
in
cs
leave
mov
sub
js
xchg
cmp
push
jne
(bad)
in
and
or
mov
das
xchg
mov
test
je
sub
xlat
mov
rcl
(bad)
daa
(bad)
ja
mov
clc
mov
inc
sub
repz
lods
movs
sbb
out
cmps
adc
dec
and
in
push
fiadd
and
mov
xlat
or
std
arpl
xlat
fwait
push
test
push
adc
dec
ja
test
pop
xchg
inc
out
jp
sub
sbb
add
sti
mov
lods
inc
pop
ret
js
and
mov
and
ret
push
lock
enter
cs
lahf
call
sub
add
adc
jns
movs
test
les
inc
daa
push
mov
or
cmp
fild
pop
xchg
mov
std
dec
test
mov
pop
cld
repz
mov
aad
dec
js
mov
adc
mov
ds
bound
in
cwde
dec
dec
(bad)
pop
stos
adc
(bad)
daa
inc
ins
jae
stos
(bad)
jnp
push
mov
jnp
int3
repz
mov
addr16
sbb
test
int3
pusha
pop
sti
leave
and
jmp
shr
xlat
mov
pop
lahf
jecxz
(bad)
nop
inc
push
xor
and
ins
adc
lahf
xchg
shl
xchg
aad
dec
lock
xchg
xor
dec
ins
xor
or
xchg
popa
lds
cmps
stos
fwait
lahf
je
jnp
es
mov
mov
jbe
sub
xor
cwde
fwait
call
test
(bad)
lahf
call
fcomp
das
ins
mov
cmp
mov
jns
and
leave
rdpmc
sub
aam
sbb
outs
dec
or
popa
xlat
int3
pop
inc
mov
xchg
ds
test
stos
jae
icebp
arpl
and
inc
les
ret
mov
pop
aas
mov
push
int3
ins
addr16
add
dec
scas
xor
pop
cwde
jg
popf
fwait
sub
or
jp
or
xor
ds
sbb
test
pusha
test
mov
push
cmp
outs
mov
mov
daa
sbb
dec
jae
hlt
dec
xchg
into
rol
inc
sub
movs
cmp
sahf
xor
mov
arpl
mov
enter
das
lea
adc
imul
retf
imul
dec
inc
mov
stos
jge
ins
daa
(bad)
add
sbb
sub
pop
inc
xlat
js
pop
clc
stc
jbe
and
dec
outs
push
out
and
dec
mov
clc
arpl
shr
data16
outs
cwde
and
loopne
or
std
and
scas
jae
(bad)
jae
xchg
aas
cmps
add
inc
retf
mov
add
(bad)
fadd
ja
jp
loopne
xor
sub
add
rcr
(bad)
sub
or
arpl
jle
mov
dec
repz
push
adc
sub
ror
mov
dec
cld
ins
jp
lods
pop
pushf
mov
adc
sub
retf
sbb
fbld
aas
adc
push
int3
cmp
push
xchg
mov
pop
mov
adc
enter
push
imul
dec
and
mov
sbb
fnstcw
mov
rcr
sub
dec
and
call
sub
mov
mov
(bad)
bound
sbb
xor
mov
cld
call
lea
aas
xchg
mov
test
jnp
jecxz
sbb
xor
inc
jg
outs
lea
lds
mov
cmp
ins
mov
xor
scas
cmp
jae
dec
or
mov
adc
idiv
jae
imul
mov
cmp
push
push
imul
aaa
ds
ret
cmp
push
sbb
dec
loop
imul
fisttp
stc
pop
adc
daa
pop
pop
dec
xchg
sti
and
or
push
cmps
mov
inc
push
xchg
std
stos
in
rol
adc
mov
jmp
inc
fmul
jae
jl
ins
gs
pop
mov
js
sub
fisttp
adc
or
outs
inc
dec
pushf
ror
mov
cwde
mov
fist
jnp
push
in
mov
and
clc
bound
sbb
jmp
cmp
imul
cld
imul
cmp
movs
cmp
cmc
sbb
ins
sbb
stos
sbb
je
iret
movs
movs
imul
fcom
jae
pushf
or
scas
add
lahf
sub
mov
jecxz
mov
or
jle
sub
lds
mov
jl
sub
cmp
lods
fwait
cmp
fs
mov
idiv
inc
lods
fdivr
mov
pushf
jmp
sahf
xor
(bad)
pop
gs
sub
sbb
dec
adc
test
add
dec
or
js
les
pop
call
ins
mov
mov
sub
clc
mov
ds
push
mov
mov
enter
jmp
fstp
mov
dec
fwait
sbb
or
mov
adc
cmp
sbb
or
and
xchg
or
cmp
mov
pop
pop
scas
xchg
cmp
lea
call
(bad)
push
stos
out
jge
mov
cld
xchg
test
bound
in
mov
lahf
dec
idiv
out
inc
pop
lea
mov
mov
cmp
push
push
push
or
dec
xor
ss
sub
(bad)
sbb
(bad)
push
movs
ss
push
(bad)
lods
xchg
and
test
jl
fcomp
or
sar
loope
push
add
add
mov
mov
mov
and
jecxz
jns
adc
push
pop
pop
inc
mov
pop
retf
movs
pop
cmp
sub
imul
sub
jb
cmc
pop
icebp
(bad)
xchg
push
mov
out
popa
adc
(bad)
aad
lock
fcom
cmp
jnp
dec
adc
jae
imul
mov
or
arpl
pop
out
dec
inc
dec
out
and
push
or
sub
movs
ss
sub
xchg
mov
ds
in
mov
mov
cmp
fstp
ret
push
(bad)
les
int
scas
movs
imul
push
sbb
xor
pop
adc
and
push
mov
scas
imul
push
pushf
shl
aam
sbb
data16
pop
and
fwait
hlt
dec
or
movs
xchg
test
push
add
retf
sbb
mov
pop
fwait
sbb
dec
xchg
test
sar
xor
cmp
mov
test
dec
addr16
fmul
int3
jl
scas
jmp
adc
xor
inc
jns
les
fmul
adc
in
pusha
lds
int3
rol
push
out
add
mov
test
stos
mov
sbb
mov
dec
xor
leave
outs
stc
add
and
adc
jnp
(bad)
dec
dec
push
imul
push
data16
inc
jl
pushf
xchg
and
dec
sub
mov
hlt
or
xchg
je
jnp
stos
in
pop
rol
aaa
cmps
lods
in
or
or
add
mov
sub
sub
xchg
dec
sub
push
int3
jmp
outs
sbb
add
sub
outs
stos
xor
shl
stos
les
arpl
or
sbb
mov
inc
stos
pop
xchg
sbb
mov
cld
or
cld
lock
out
and
icebp
push
lods
sbb
mov
mov
dec
add
pop
fwait
dec
stos
test
out
popf
and
loope
xchg
inc
mov
and
cmp
sub
xchg
or
jne
out
pop
or
inc
mov
sub
push
ror
jmp
xchg
ror
adc
mov
mov
mov
add
cdq
jo
in
or
jno
fild
sbb
jl
sub
cmps
fwait
pop
out
and
jecxz
lods
jl
sub
pushf
retf
movs
ss
fisubr
hlt
push
retf
das
adc
inc
test
xchg
call
sbb
bound
ja
ds
push
or
icebp
outs
sbb
pop
pop
div
mov
mov
sbb
sbb
add
mov
mov
push
int3
xlat
lods
fnstsw
push
fcmovbe
and
fwait
loopne
lock
comiss
mov
int3
cmp
xchg
mov
lds
div
pusha
popf
xor
rcl
imul
stos
out
push
sbb
cmp
cmps
mov
sti
and
xor
ins
push
cmp
xor
js
jae
icebp
pusha
popa
aad
inc
pop
jge
inc
enter
retf
jp
(bad)
leave
(bad)
int3
rcr
push
out
add
pop
and
adc
pushf
repz
lods
in
mov
scas
xor
xor
cdq
cmp
mov
mov
fwait
loopne
jbe
stos
imul
mov
std
sbb
js
pusha
inc
shr
xor
cmp
mov
jge
cmp
(bad)
dec
iret
jecxz
mov
jle
ret
push
pushf
pop
leave
scas
cmp
fsub
jg
fwait
xchg
ja
mov
cwde
mov
or
pusha
ins
mov
shl
rol
mov
xchg
xor
std
clc
in
lods
pop
retf
sti
je
xchg
push
push
std
mov
ret
mov
inc
test
pop
std
imul
jae
mov
retf
mov
rcl
jecxz
dec
ds
mov
enter
push
adc
xchg
das
pop
adc
mov
sub
dec
push
repnz
lea
dec
pushf
jle
outs
hlt
sbb
push
sub
and
sbb
mov
retf
jmp
movs
cdq
sbb
scas
and
fld
sub
push
popa
into
ja
repz
adc
inc
cmps
push
pop
leave
hlt
or
sbb
shr
jno
adc
clc
cmps
push
xchg
mov
and
push
ret
dec
inc
ret
(bad)
xchg
jp
mov
(bad)
loope
push
fadd
jno
mov
dec
test
fwait
(bad)
dec
lods
out
(bad)
and
xor
je
jae
fcom
mov
retf
or
shl
fs
add
add
loope
and
jg
sub
dec
ja
sbb
or
pushf
mov
aaa
mov
ret
mov
in
jns
adc
push
data16
jle
cmp
arpl
sti
adc
and
retf
rol
fcomp
sahf
icebp
or
and
fimul
cld
sbb
push
cld
add
add
mov
cld
mov
add
adc
ds
in
mov
popf
add
sub
ins
inc
mov
adc
sub
lds
hlt
jae
icebp
jmp
xor
stos
rcr
xor
jle
outs
and
adc
push
jl
test
xlat
mov
sbb
pop
jnp
cmps
mov
std
cld
out
push
push
popa
or
lods
jl
cld
mov
mov
or
ds
in
popf
and
and
arpl
repz
dec
inc
mov
fidivr
test
jecxz
push
int
xor
mov
dec
jo
mov
aaa
or
sub
movs
adc
mov
fsub
push
out
pushf
dec
(bad)
sbb
push
sbb
jl
enter
(bad)
mov
movs
retf
dec
popf
cmp
mov
nop
push
mov
sub
aam
rep
mov
test
les
mov
test
adc
sbb
mov
push
cmp
mov
xor
mov
dec
mov
mov
mov
or
xor
outs
mov
ror
xor
or
push
mov
idiv
cmp
pop
sbb
(bad)
xor
jmp
stos
sub
sti
pop
aaa
ror
hlt
movs
pop
pop
add
jmp
push
fnsave
pushf
stc
shl
pusha
sahf
pop
mov
imul
dec
clc
cld
es
mov
push
pushf
xlat
or
mov
inc
xor
in
enter
mov
shl
test
arpl
mov
pop
mov
ret
mov
xchg
or
mov
add
inc
repz
neg
jbe
mov
jge
cli
out
rcr
jecxz
fsub
mov
cmp
call
pop
aam
mov
out
shl
ja
jg
adc
dec
inc
(bad)
aas
in
scas
adc
inc
pop
add
out
xchg
push
push
inc
pop
out
ret
and
or
repz
cs
les
cld
sahf
fsubr
and
dec
fwait
dec
push
out
sbb
mov
js
test
mov
mov
dec
sar
and
sbb
add
movs
loopne
ja
dec
and
mov
mov
fbld
inc
pop
mov
rcl
jg
call
aas
jg
cld
fdivr
add
pop
in
push
ret
(bad)
and
jne
adc
xchg
loopne
sar
enter
inc
movs
in
sbb
daa
push
lea
xlat
push
call
sar
add
sbb
lea
sahf
dec
out
jns
les
add
rol
icebp
mov
jo
jnp
push
sahf
(bad)
mov
stos
cmps
arpl
jo
sub
push
loopne
cmp
mov
in
dec
stc
shl
(bad)
mov
daa
push
clc
lds
xor
mov
sar
and
and
fcmovnb
js
imul
xor
addr16
push
dec
into
ds
jb
push
xor
into
xor
popa
xchg
pop
cld
dec
mov
dec
push
cmp
jmp
not
scas
addr16
mov
lock
popf
xor
inc
mov
sub
enter
iret
js
dec
mov
out
sbb
add
cli
jg
outs
xchg
outs
push
add
xor
fistp
mov
cmp
sbb
sbb
sbb
cld
shr
or
sahf
mov
pushf
out
icebp
mov
(bad)
(bad)
aam
mov
push
cld
cmp
inc
jb
jnp
push
arpl
sar
mov
inc
shl
hlt
mov
leave
sbb
add
in
test
mov
push
jnp
or
pusha
and
ss
mov
adc
cwde
addr16
push
lock
sub
xor
or
retf
ret
mov
rol
or
push
jg
mov
dec
add
mov
or
iret
mov
fist
push
out
mov
xor
ins
push
outs
lods
push
scas
loopne
fisub
retf
(bad)
(bad)
ss
jae
(bad)
or
jno
in
mov
dec
movs
mov
sti
and
out
and
retf
mov
sbb
and
(bad)
data16
enter
pop
retf
outs
mov
mov
stos
pushf
push
test
mov
inc
cmp
add
adc
xor
mov
sete
push
mov
dec
and
xchg
les
pop
dec
cmp
mov
mov
and
retf
int3
pop
mov
xchg
imul
cmp
or
mov
mov
pop
pusha
xchg
mov
mov
je
movs
scas
movs
(bad)
cmp
jbe
cmp
into
test
inc
mov
and
ret
call
jno
cmp
ins
inc
aad
or
jg
call
out
jbe
mov
push
add
pusha
or
cmova
out
sub
xchg
jp
add
(bad)
fcomp
int3
fstp
(bad)
repz
jo
cmp
push
xlat
mov
and
fwait
popa
add
add
push
inc
in
(bad)
aas
iret
loope
pushf
ja
mov
jmp
fwait
addr16
movs
mov
lahf
dec
xor
cmp
mov
pop
popa
scas
dec
aas
dec
scas
js
mov
nop
mov
outs
cmc
adc
or
jecxz
sbb
or
push
mov
push
fild
dec
icebp
je
addr16
pop
retf
rcr
push
cmp
cmp
in
scas
dec
push
mov
jecxz
sbb
pop
sbb
sub
jecxz
sbb
in
and
mov
outs
cmc
cmp
cmp
fstp
scas
mov
and
outs
retf
pop
(bad)
cld
es
adc
fdivr
xchg
pop
dec
xchg
pop
sbb
add
pop
ror
cmp
or
pop
add
leave
sar
cwde
adc
pushf
mov
push
popf
or
rcl
pop
dec
test
in
and
xlat
test
lods
sbb
dec
pop
js
lahf
sbb
pop
loopne
push
imul
dec
inc
add
retf
leave
cmp
repz
or
or
push
(bad)
push
stos
das
push
or
sbb
cld
cmp
les
jecxz
sti
or
sub
sbb
inc
sub
rcl
jecxz
cld
xchg
(bad)
xchg
in
dec
push
dec
inc
mov
jo
sbb
pop
jle
das
mov
push
sbb
sub
loopne
gs
jo
xor
sub
pop
adc
bound
inc
(bad)
iret
jp
loop
sbb
int3
jl
cmp
int3
xlat
icebp
sub
shl
push
xlat
inc
sar
(bad)
jns
mov
dec
jl
arpl
add
stc
inc
sbb
clc
pop
pop
ds
loopne
stos
adc
mov
in
scas
sub
icebp
dec
imul
repz
cdq
lods
fsub
cs
sti
push
push
inc
jle
test
outs
pop
xchg
add
pop
sub
adc
in
sub
xchg
mov
cs
(bad)
and
ja
mov
jo
jmp
jle
outs
dec
mov
push
jns
hlt
mov
mov
(bad)
mov
aaa
jmp
sub
pop
fisttp
outs
mov
jns
out
xchg
xchg
or
pop
into
test
pop
leave
sub
pop
fxch
test
icebp
jmp
loopne
inc
sar
push
xchg
xchg
dec
xchg
adc
ret
cmc
nop
jmp
pusha
adc
into
dec
push
sbb
adc
call
mov
and
jo
iret
das
push
dec
retf
cmp
fstp
rcl
int3
dec
jge
inc
or
jmp
jb
mov
mov
jg
pop
adc
push
test
pop
jns
les
popf
or
clc
and
fnstenv
call
mov
lea
pop
aaa
mov
jno
dec
jae
or
xor
cdq
push
mov
and
push
push
inc
cmp
aam
sbb
or
pop
mov
inc
imul
adc
mov
fmul
fdiv
mov
push
ins
xor
fwait
mov
ror
add
pop
xor
int3
cmp
pop
adc
cmp
mov
dec
cmp
and
pop
mov
mov
jle
cwde
arpl
push
ds
cmps
fstp
mov
fisttp
inc
ss
pop
je
test
mov
outs
pop
movs
sub
pop
test
aad
lock
cs
ror
mov
hlt
test
mov
mov
mov
and
adc
or
cmp
mov
mov
push
sbb
pop
pop
aad
jne
pop
stos
inc
icebp
sbb
repz
jmp
or
retf
int3
jge
or
sbb
mov
(bad)
cmc
push
inc
outs
ja
or
push
push
push
out
xor
mov
sbb
xlat
dec
cli
and
sub
pop
(bad)
cs
mov
mov
aas
cli
scas
shl
mov
hlt
jmp
or
cmp
popf
push
push
imul
imul
jmp
sar
or
sub
aad
pop
fs
das
and
inc
mov
dec
add
pop
adc
sahf
in
jmp
jmp
lock
imul
mov
cmp
pop
sub
cmp
arpl
stos
dec
mov
in
call
jae
adc
into
ror
dec
mov
jecxz
sbb
mov
dec
mov
xchg
pop
or
jle
arpl
fimul
jns
pop
push
xor
sub
and
jg
sbb
sti
fadd
jnp
pushf
sub
and
inc
dec
mov
lock
repz
push
cwde
mov
lahf
int3
leave
icebp
test
sbb
sub
mov
and
or
(bad)
stc
outs
push
fcomp
test
xchg
out
call
popa
nop
sbb
inc
test
mov
adc
mov
mov
rcl
mov
(bad)
out
aam
pop
mov
add
xor
inc
mov
and
xchg
sub
scas
stos
sbb
and
in
mov
mov
jmp
sar
xor
push
aam
sub
jecxz
(bad)
mov
fdiv
xchg
mov
pop
stos
jmp
hlt
rol
jns
mov
cwde
test
sbb
or
hlt
call
out
ret
fdiv
jecxz
mov
mov
push
sub
les
add
mov
in
das
and
mov
push
iret
adc
cmc
in
jno
das
sub
xlat
sbb
inc
das
fst
cwde
add
mov
add
ins
pusha
in
add
push
xor
pop
pop
cmp
jecxz
retf
mov
and
push
pusha
test
imul
mov
rol
jo
bound
fist
or
xchg
pusha
jns
clc
outs
les
fadd
mov
mov
fdiv
mov
or
dec
loopne
adc
js
clc
loopne
cmp
jb
jmp
int
(bad)
out
push
inc
mov
mov
aad
pop
mov
repnz
dec
fdivr
mov
or
pop
xchg
or
(bad)
push
xchg
in
call
test
dec
mov
daa
icebp
add
pusha
fist
xchg
(bad)
call
inc
mov
repnz
inc
inc
cmp
aam
sbb
leave
(bad)
or
int
pop
mov
pop
movs
xchg
mov
(bad)
test
pop
hlt
or
xor
jnp
mov
aas
mov
inc
xor
or
sub
sbb
jecxz
sar
loopne
ror
sub
sub
cmp
dec
push
lahf
inc
xchg
pop
jge
dec
xchg
stos
pop
sub
dec
stc
stc
and
ret
inc
xor
dec
mov
pop
rdpmc
cmp
and
jo
jmp
pop
mov
je
into
repnz
ins
in
movs
int
(bad)
xor
or
retf
mov
mov
and
push
xchg
jmp
sahf
cmp
daa
xchg
xor
xchg
cs
mov
sub
movs
sub
retf
mov
adc
sahf
push
xchg
mov
inc
xchg
pop
enter
outs
lahf
pop
inc
dec
inc
in
mov
inc
jnp
shr
fsubr
mov
adc
jae
imul
(bad)
inc
dec
sub
jge
nop
push
test
jno
push
dec
and
les
out
xor
mov
fsubr
into
(bad)
pop
lsl
xchg
js
sub
shl
or
sub
inc
jo
ins
out
sub
xchg
sahf
push
cwde
jg
adc
cmp
sar
pushf
mov
shl
jmp
in
movs
cs
movzx
mov
add
cli
xchg
aaa
pop
dec
loop
dec
push
rcr
sbb
cld
xchg
ja
adc
push
inc
xlat
and
lods
jmp
ds
xchg
and
aaa
(bad)
adc
push
mov
test
mov
or
inc
mov
ins
or
(bad)
jmp
scas
mov
jns
xchg
(bad)
repnz
sub
mov
or
lods
pop
scas
out
push
(bad)
movs
clc
shr
aas
jnp
iret
pop
dec
cmp
rcr
data16
fwait
lds
lea
jl
mov
jnp
hlt
ins
pop
jecxz
or
xchg
das
mov
(bad)
(bad)
inc
lods
movs
push
retf
sahf
add
jmp
mov
xor
push
ins
stos
hlt
fwait
pop
add
(bad)
fadd
sbb
mov
fist
push
int
sub
mov
stos
js
out
stos
(bad)
iret
in
adc
xchg
sbb
jp
aam
sbb
xor
ins
scas
jns
ins
jae
push
ins
inc
cmps
icebp
sbb
pop
jnp
test
pop
fsub
int3
mov
pop
and
mov
ss
mov
cmp
out
sbb
std
pop
leave
mov
xchg
clc
ret
push
popa
mov
jmp
sbb
repz
movs
das
add
cmp
lods
pop
pop
hlt
mov
and
xchg
jns
(bad)
pop
js
push
push
jnp
loopne
movs
xchg
jno
mov
mov
sbb
adc
dec
idiv
cs
pop
mov
jge
pop
and
add
xchg
imul
cld
imul
cmp
movs
cmp
cmc
sbb
ins
sbb
stos
sbb
je
iret
movs
movs
imul
fcom
jae
pushf
or
scas
add
lahf
adc
mov
pop
jecxz
mov
jo
sbb
sub
lds
mov
xchg
sub
cmp
mov
jnp
mov
idiv
inc
lods
fdivr
mov
enter
xor
(bad)
pop
gs
sub
sbb
dec
adc
test
add
dec
pop
cmp
les
pop
jmp
ins
mov
mov
sub
inc
mov
ds
imul
test
arpl
outs
mov
cmp
jne
sbb
or
mov
adc
cmp
sub
pop
hlt
or
and
xchg
or
cmp
enter
xor
test
scas
xchg
cmp
mov
cdq
mov
(bad)
sbb
push
stos
out
jle
mov
cld
xchg
test
bound
in
mov
jecxz
idiv
sub
cli
ror
mov
sbb
mov
paddusb
sub
jl
cmp
dec
(bad)
pop
fnstsw
inc
mov
hlt
idiv
imul
push
dec
jb
add
or
sbb
les
sbb
push
ds
adc
adc
mov
imul
pop
pop
sar
ins
push
pop
popf
mov
lods
bound
add
in
rcr
ret
inc
mov
pop
jmp
fistp
jg
jg
mov
mov
dec
shl
or
mov
ds
or
or
and
ror
and
bound
pop
push
pop
cmp
cmp
xchg
xlat
ror
call
lahf
outs
fsub
test
jecxz
add
(bad)
adc
scas
mov
mov
fsubr
cmp
in
movs
cwde
mov
enter
push
sbb
xor
fcmovnbe
pop
dec
dec
jno
cmp
jecxz
dec
xchg
imul
mov
mov
and
lahf
rcr
dec
imul
iret
in
jnp
jle
dec
or
out
fucomi
push
in
test
mov
sbb
or
mov
jecxz
dec
aas
lods
jle
pop
lahf
cmps
inc
mov
imul
pop
pop
jg
scas
(bad)
pop
scas
jns
jl
pop
mov
lahf
sbb
cmps
les
jnp
xchg
fcom
inc
cmp
sbb
clc
dec
scas
das
add
cdq
mov
out
imul
fs
data16
pop
leave
sbb
call
mov
mov
sbb
inc
retf
aam
lods
dec
arpl
jecxz
sti
and
int3
sar
pop
mov
popf
fiadd
clc
std
clc
outs
call
imul
je
pop
stos
cmp
cli
fs
push
or
sub
imul
retf
dec
jmp
fsubrp
sub
mov
(bad)
aas
sub
push
int3
hlt
shr
scas
nop
lea
out
scas
sub
rep
imul
cdq
dec
or
stc
sub
jle
test
jns
sub
jecxz
sti
lock
ins
cdq
out
pushf
cmp
je
and
or
mov
clc
(bad)
pop
mov
cmp
test
cmp
lods
repz
or
xchg
das
push
inc
movs
scas
cmp
fwait
sbb
(bad)
sub
push
std
add
xlat
cld
xchg
mov
in
and
retf
dec
repz
xchg
ja
je
jnp
push
std
add
dec
jmp
cmp
add
or
cmp
or
out
imul
clc
jnp
in
je
push
into
call
sub
loop
in
test
out
push
pop
js
xor
repz
pop
(bad)
cmp
dec
scas
hlt
es
xchg
arpl
out
int
int3
cs
sar
or
jae
imul
mov
xchg
add
mov
clc
arpl
jmp
test
push
mov
sbb
dec
loop
imul
jbe
or
test
stc
int
lahf
cmp
jb
repz
loope
sti
jl
nop
nop
je
add
js
sub
lahf
pop
loopne
cld
sub
hlt
dec
mov
mov
cdq
xor
push
jge
mov
pop
push
aas
ja
retf
pop
test
mov
or
mov
fisub
adc
add
pop
pushf
stc
xchg
(bad)
repnz
push
sub
pop
fdivr
pop
mov
ds
mov
cld
xchg
mov
clc
fwait
cmc
sbb
sti
ret
leave
mov
stos
rcr
das
pop
add
mov
(bad)
fisttp
cli
ins
aaa
pop
xor
sti
push
jnp
imul
pop
xor
inc
xchg
mov
sti
cmp
push
cmp
sub
ror
test
cmps
int3
ret
mov
mov
cmp
jne
inc
cdq
cmp
xchg
mov
mov
mov
add
es
cmp
les
scas
imul
mov
mov
test
sti
xchg
scas
iret
(bad)
sub
pop
sub
aad
test
dec
and
xor
sub
and
push
stos
je
cmc
iret
scas
jnp
inc
in
xor
(bad)
int3
sar
mov
enter
dec
movs
pushf
cmp
sub
sbb
dec
fdivr
or
mov
outs
bndstx
pushf
jl
ins
xor
push
dec
fwait
adc
in
pop
imul
sub
call
sti
sbb
rcr
(bad)
out
mov
sbb
or
mov
dec
test
pop
aas
or
mov
and
sbb
add
jnp
das
dec
pop
xor
int3
pop
mov
test
adc
(bad)
retf
movs
call
out
or
cld
sub
fild
fcomp
jne
das
sti
xchg
ret
pop
aaa
dec
push
js
sub
xor
imul
mov
loop
pop
jl
dec
fstp
retf
inc
mov
hlt
lods
or
cld
daa
in
mov
call
int
add
gs
pop
stos
dec
push
cmp
push
jnp
imul
xor
mov
jae
xchg
jmp
xor
ss
rol
imul
sbb
fcom
cmp
sub
push
fs
adc
or
or
pop
test
cdq
dec
xchg
jbe
outs
jmp
cwde
jno
cmp
dec
leave
pop
arpl
out
hlt
ffreep
iret
inc
lock
popa
push
leave
rol
daa
nop
(bad)
push
mov
aad
cmp
dec
call
fadd
inc
lods
fild
jge
xchg
mov
jno
pop
sar
jnp
cmp
pop
xchg
mov
sub
sbb
js
es
push
pushf
retf
mov
xor
in
jnp
cmps
test
int
fnsave
and
and
rol
and
(bad)
dec
mov
pop
sahf
iret
xchg
lods
das
add
jle
sub
out
movs
scas
test
mov
rol
hlt
mov
jnp
imul
aam
mov
dec
mov
addr16
sbb
ret
cmp
cmp
sbb
call
jmp
mov
mov
sub
inc
mov
add
sti
mov
aaa
je
fsub
mov
mov
out
out
fwait
dec
fcomip
lock
dec
or
aaa
outs
daa
pop
mov
aad
imul
sbb
sub
arpl
rcr
imul
and
xchg
xchg
movs
mov
xchg
into
daa
jnp
jp
pop
cdq
mov
ins
out
aam
push
cwde
vmovlps
ins
push
sbb
xchg
cmp
cmp
jnp
cmp
ror
dec
add
sub
dec
pop
mov
imul
jge
xchg
sahf
or
fadd
adc
arpl
fist
push
int
sub
mov
jne
outs
ret
cli
push
jnp
xchg
test
xlat
jg
test
pop
mov
jl
out
mov
stos
sbb
je
iret
movs
movs
imul
fcom
jb
pushf
or
clc
scas
add
lahf
adc
sub
pop
jecxz
mov
add
jle
sub
lds
mov
jl
sub
cmp
hlt
fwait
cmp
fs
mov
pop
fmul
idiv
inc
lods
fadd
mov
aam
sbb
gs
sub
sbb
dec
adc
test
add
dec
pop
cmp
les
pop
jmp
sti
jl
ins
mov
mov
sub
and
sbb
xchg
imul
test
adc
outs
mov
cmp
jne
sbb
or
mov
adc
cmp
sub
pop
hlt
or
and
xchg
or
cmp
iret
ret
nop
jnp
test
test
cmp
mov
lahf
mov
fstp
sbb
push
stos
out
jg
mov
cld
xchg
test
bound
in
mov
sbb
ret
sub
stc
ror
nop
imul
mov
pmaxub
sub
jl
mov
js
inc
fild
jnp
push
in
mov
and
clc
pop
jb
sbb
scas
cmp
retf
dec
scas
cmp
imul
imul
clc
jecxz
dec
(bad)
test
mov
ins
stos
movs
popf
sbb
dec
lock
stc
dec
adc
cmps
mov
add
cmps
mov
in
inc
imul
std
imul
xor
ror
mov
in
enter
jno
cld
pop
in
imul
inc
cmp
jbe
out
loopne
loopne
cmps
ins
das
sub
aad
xor
(bad)
fadd
mov
pop
and
mov
fcom
fiadd
jnp
out
pop
inc
fadd
inc
js
iret
das
push
int
fldenv
fabs
xchg
arpl
jae
add
call
dec
push
jp
push
pop
retf
xchg
mov
xor
inc
out
repnz
sbb
sub
sub
ror
jno
dec
movs
leave
(bad)
and
push
cmps
lods
sbb
pop
enter
out
sbb
sbb
mov
scas
mov
cld
arpl
sbb
push
(bad)
sti
das
popa
movs
popf
pushf
fwait
dec
xor
sub
inc
je
jnp
xor
mov
pop
jmp
retf
and
xchg
fnclex
cmp
cmps
pop
push
or
hlt
outs
jmp
sub
mov
mul
jl
xor
inc
mov
jne
inc
in
call
out
cmp
imul
retf
lea
push
xchg
cmp
jno
pop
fiadd
add
mov
cdq
out
mov
xor
cpuid
je
sbb
dec
push
out
push
dec
xchg
sbb
aaa
fisub
and
enter
xchg
test
inc
stos
popa
adc
(bad)
jns
in
lea
out
inc
(bad)
retf
pop
sahf
sub
mov
add
test
div
nop
loope
xor
fcmovnu
xor
mov
js
mov
mov
fnstcw
and
or
mov
imul
sub
out
push
(bad)
jl
lea
mov
pop
mov
ror
sahf
iret
mov
das
in
mov
sbb
les
ds
lea
aam
dec
ins
iret
pop
stc
sbb
cmp
sub
jnp
loopne
movs
sub
clc
inc
xchg
mov
mov
add
es
cmp
sub
mov
adc
jo
cmp
lods
outs
mov
cmp
sub
(bad)
pop
cmp
xor
push
in
dec
ds
loop
(bad)
push
pushf
pop
pop
mov
test
dec
xchg
cmp
jp
pop
mov
outs
ja
in
xor
dec
cdq
jecxz
add
pop
pushf
jmp
cli
push
jmp
lea
mov
and
jbe
or
es
inc
cwde
dec
cmp
add
pop
retf
sti
cmp
test
mov
xor
or
xchg
push
pop
pushf
sbb
mov
out
jl
mov
jno
or
sbb
pop
nop
mov
adc
push
test
es
mov
jno
or
aam
inc
fwait
out
sbb
xor
inc
jle
sub
ret
out
jl
mov
mov
fld
sbb
or
xlat
xchg
addr16
adc
push
lods
jecxz
loop
pop
jl
inc
(bad)
add
aad
(bad)
fwait
hlt
mov
in
mov
call
test
jo
gs
pop
loop
mov
push
jnp
imul
sbb
cmp
xor
mov
mov
dec
in
dec
fsub
sbb
or
sti
xchg
scas
iret
(bad)
sub
pop
sub
shr
pop
int3
dec
and
xor
jl
sub
and
sbb
scas
jnp
pop
in
jle
pop
int3
sar
mov
lock
lahf
dec
movs
xchg
cmp
sub
sbb
dec
fdivr
add
clc
dec
lock
bndstx
fistp
xor
push
or
pop
imul
push
call
sti
pop
jmp
(bad)
fwait
sub
sbb
or
mov
dec
out
cmp
sub
aas
or
leave
ins
pop
pop
and
sbb
add
adc
gs
sbb
mov
push
jmp
fcomi
retf
movs
call
stos
or
cld
sub
pushf
sub
jb
pusha
adc
add
cmps
fimul
inc
xor
int
jecxz
icebp
xchg
jl
push
leave
sti
imul
inc
cli
sti
in
push
hlt
dec
pop
imul
adc
dec
push
sbb
jae
jl
ins
xchg
push
sbb
int
aas
add
stc
rcl
dec
fmul
xchg
lods
jmp
mov
mov
pop
xor
loope
fcmove
das
mov
lahf
sbb
nop
mov
sar
nop
push
call
mov
shr
cld
jle
pop
cdq
push
jecxz
clc
ret
push
xchg
arpl
add
adc
dec
inc
shr
jecxz
mov
add
or
dec
lods
add
repnz
mov
and
push
inc
lock
adc
in
inc
xor
test
cld
in
arpl
movs
stos
xor
jg
mov
sti
cmp
into
cmps
mov
adc
int3
cmp
mov
pushf
sti
mov
or
jmp
imul
in
js
in
or
pop
cmp
into
pop
retf
mov
cmp
sub
loopne
cmp
imul
int
int3
cmp
js
sbb
dec
sti
mov
(bad)
pop
jmp
cmps
fwait
movs
mov
cwde
(bad)
mov
lea
jmp
leave
mov
fmul
push
jae
retf
std
push
pop
mov
mov
cmps
jp
fnstenv
pop
push
mov
out
or
outs
mov
push
dec
std
sbb
dec
push
sti
sub
shl
sti
mov
jnp
xchg
popa
dec
pop
rdpmc
das
push
jp
sbb
jns
xlat
xor
mov
sbb
pop
stc
xor
cmp
fdiv
ins
jbe
cmp
lahf
or
mov
mov
push
cmps
jmp
stc
daa
and
fnsave
dec
dec
leave
inc
mul
mov
bound
jo
push
sub
mov
dec
push
(bad)
xor
xchg
sbb
xchg
and
xor
pop
je
test
mov
les
imul
(bad)
cli
cmp
lock
pop
mov
repz
shr
push
mov
imul
sbb
inc
mov
mov
popa
sub
sbb
xchg
dec
inc
out
out
outs
repz
hlt
push
mov
mov
cmc
shl
je
(bad)
cmps
mov
dec
aaa
clc
jnp
pop
jmp
sahf
fldcw
pop
xor
ror
pop
test
mov
mov
scas
call
or
or
sub
sbb
cmc
push
in
out
pop
xchg
fwait
mov
outs
and
arpl
jbe
add
inc
gs
rol
add
repz
cmp
adc
leave
rol
cmp
stos
xor
fucomp
cmp
rcr
(bad)
mov
pushf
cld
rol
sub
out
ins
(bad)
loop
sahf
pushf
cmc
mov
(bad)
cwde
inc
aam
ds
xchg
ja
test
aas
adc
fadd
js
sbb
lods
or
add
lods
jge
call
add
add
xchg
ss
(bad)
repz
push
jle
xchg
out
dec
add
pop
lea
sbb
je
and
push
mov
push
lods
mov
mov
icebp
mov
movs
jge
es
(bad)
hlt
mov
xchg
js
jg
sub
sbb
clc
in
sub
mov
push
push
clc
fs
into
push
jnp
push
push
xadd
cmps
cmps
xchg
pusha
pop
leave
sti
mov
retf
cs
das
mov
xchg
shl
outs
fstp
adc
jp
fs
pushf
and
dec
jne
inc
fimul
xchg
imul
fdiv
mov
pop
std
cli
int3
ins
popf
sub
(bad)
dec
jb
stos
jne
lahf
outs
inc
jbe
shr
or
aaa
xor
adc
in
fistp
js
add
xchg
add
cmp
xor
lods
in
hlt
leave
jbe
gs
js
rcl
jl
pop
jnp
imul
sub
cmp
imul
sbb
and
pop
inc
pop
je
stos
rcl
fcmove
lock
out
cmps
xor
xor
pushf
pop
add
adc
mov
sub
or
(bad)
xor
int3
cmp
pushf
dec
or
(bad)
pop
inc
mov
out
pop
add
jne
mov
cmp
fcomp
das
ins
fwait
pop
fwait
mov
mov
mov
push
out
sti
fadd
jl
xor
add
sub
xor
sub
ficomp
std
(bad)
mov
and
jmp
mov
and
mov
psubb
mov
and
rol
pop
add
nop
rcl
mov
push
add
jae
outs
(bad)
pop
push
aas
and
leave
adc
sar
test
push
into
lods
xor
mov
xchg
dec
inc
dec
push
or
and
or
call
ins
xchg
fld
mov
in
push
fisttp
in
js
in
and
daa
sahf
cdq
dec
aad
sub
mov
dec
xchg
mov
fdiv
js
dec
mov
retf
dec
(bad)
js
hlt
sahf
xlat
inc
and
repnz
out
loop
mov
push
mov
sbb
pop
mov
pop
iret
out
(bad)
rcr
jmp
dec
aaa
dec
sub
fs
shr
adc
sahf
pop
or
jo
pushf
push
xlat
fyl2x
cmp
imul
ja
fwait
pop
add
mov
and
pop
pushf
xlat
js
jmp
ficom
jb
out
mov
jnp
fwait
test
les
hlt
stc
add
inc
aam
fcom
cmp
cdq
add
dec
xor
cmp
mov
mov
push
test
cmp
mov
cwde
test
mov
mov
outs
push
and
fwait
sar
(bad)
pop
mov
dec
icebp
cmp
arpl
add
mov
movs
in
std
sub
adc
in
mov
push
fwait
rol
xchg
pop
jp
div
ins
adc
movs
enter
imul
push
push
pop
les
aaa
pop
push
jmp
test
or
inc
cmp
pop
adc
fwait
(bad)
ds
xchg
adc
jle
cmp
push
add
add
sub
cmp
jnp
jecxz
pop
cmp
ins
cwde
xor
adc
dec
jmp
ret
inc
mov
test
ret
mov
xlat
dec
or
inc
(bad)
pop
jge
xchg
and
mov
in
jns
movs
(bad)
pop
iret
or
scas
xchg
adc
aam
int3
adc
mov
sti
cmp
(bad)
out
popa
int3
ins
add
test
das
sub
jmp
dec
push
dec
add
stc
or
sbb
dec
idiv
dec
cmp
paddb
rcr
cmps
xor
jb
fist
pop
dec
mov
fist
and
mov
jno
xchg
arpl
dec
fcomp
ins
pop
jmpw
dec
ins
mov
mov
mov
iret
jnp
imul
mov
pop
mov
jl
cmp
cmp
sar
sti
mov
mov
ds
js
sbb
cmps
mov
mov
loop
rcl
mov
mov
push
int3
les
cli
inc
fsubr
fwait
enter
ins
add
dec
dec
sar
mov
lods
das
gs
jg
les
lds
sub
or
out
sub
lahf
pop
loopne
(bad)
jae
mov
mov
sti
sbb
enter
setae
(bad)
fldcw
(bad)
icebp
xchg
imul
fmul
pinsrw
popf
mov
sbb
sbb
fs
mov
add
aas
and
sub
outs
imul
(bad)
push
sub
in
das
stc
cwde
lods
sub
jno
hlt
(bad)
sub
or
in
aas
adc
dec
xor
outs
in
or
add
and
or
cmp
or
jg
add
in
sub
and
daa
add
pop
inc
xchg
loop
sub
xchg
aam
mov
fcom
jb
pushf
or
sti
clc
scas
add
lahf
adc
sub
pop
jecxz
mov
test
jle
aam
(bad)
lds
mov
xchg
sub
cmp
jo
cmp
test
mov
pop
fmul
int3
idiv
inc
push
fadd
mov
adc
sbb
gs
sub
sbb
dec
adc
test
add
dec
hlt
cmp
(bad)
in
jmp
sti
jl
ins
mov
mov
sub
add
sbb
xchg
xchg
das
mov
mov
enter
jmp
fstp
mov
dec
fwait
sbb
or
mov
adc
cmp
pop
hlt
hlt
dec
sbb
xchg
or
ret
push
sar
test
xchg
lods
mov
arpl
lahf
mov
(bad)
push
out
js
mov
cld
xchg
test
bound
in
mov
pop
dec
idiv
rcr
ror
mov
mov
fsubp
sub
sub
sbb
js
inc
fild
jnp
sti
in
mov
and
clc
pop
jb
sbb
or
mov
add
xchg
imul
cld
imul
mov
rcl
outs
sub
call
push
in
rcr
popa
shl
js
or
mov
ins
or
xor
test
jge
dec
test
outs
mov
mov
lods
pop
fadd
jns
(bad)
es
push
cld
movs
fisubr
jns
daa
fwait
pop
jns
neg
pushf
scas
sbb
outs
cmp
sub
pop
aad
ds
arpl
imul
dec
pop
cmp
bound
mov
nop
(bad)
jecxz
mov
xor
mov
or
dec
jmp
out
cwde
in
cwde
das
and
sub
icebp
stc
inc
inc
or
pusha
fs
std
and
pop
fld
aas
sbb
push
adc
pop
cmp
loopne
call
(bad)
mov
pop
in
cwde
das
ins
pop
js
pop
or
xor
(bad)
sbb
jmp
xchg
or
and
xor
push
pop
fld
(bad)
sbb
cdq
ss
rol
sub
cld
scas
xchg
dec
clc
movs
fadd
mov
mov
jnp
(bad)
pop
mov
out
pop
sbb
ficomp
outs
lods
push
outs
(bad)
push
mov
in
add
jo
stos
addr16
mov
pop
repz
add
xchg
pop
cmp
xchg
fistp
pop
adc
fisttp
(bad)
daa
adc
stos
sub
mov
push
ins
retf
pop
(bad)
dec
mov
call
dec
sti
mov
test
mov
loopne
dec
aas
hlt
sub
jecxz
ret
jge
xor
adc
pop
(bad)
aaa
jne
out
dec
jae
out
pusha
sub
sbb
or
inc
push
jg
loope
ror
rcr
push
inc
pop
imul
(bad)
cmps
call
out
lds
or
or
mov
push
test
fbstp
into
mov
test
or
scas
push
xchg
stos
out
pop
and
mov
sbb
dec
fldenv
dec
cmp
jmp
sub
jecxz
repz
jae
(bad)
or
js
arpl
xchg
add
mov
mov
add
je
sbb
push
pop
inc
cmp
mov
mov
icebp
adc
sbb
cli
out
jne
inc
into
data16
out
push
sub
sar
mov
mov
mov
or
cld
inc
sbb
jg
call
aas
xor
and
(bad)
ins
pop
xchg
sti
xlat
inc
addr16
sbb
and
add
xlat
shl
mov
das
pop
push
cmp
pusha
push
and
or
(bad)
mov
shl
xchg
or
dec
dec
test
cmp
stc
cs
sbb
sbb
cmp
xchg
ja
cmps
cmp
in
dec
mov
sbb
xor
mov
sub
mov
imul
xchg
iret
cmp
ds
(bad)
mov
dec
add
and
(bad)
and
add
mov
or
jge
mov
in
in
mov
add
cmp
lea
sbb
sub
sub
push
test
cwde
adc
pop
data16
hlt
mov
pusha
stos
sub
and
ret
out
out
je
test
jmp
sbb
inc
jmp
repz
push
and
sub
sub
push
hlt
es
(bad)
shr
push
das
(bad)
jmp
call
lods
icebp
data16
ffreep
xor
inc
xor
jp
sbb
fisubr
cld
sub
nop
cmp
mov
clc
pop
(bad)
icebp
mov
movs
xor
pop
mov
je
jbe
sbb
jl
and
lds
cmp
mov
gs
or
sbb
cld
xchg
outs
push
jl
sbb
add
aam
jl
mov
add
lock
call
cs
sub
clc
adc
sbb
lds
pop
mov
pmaxsw
jp
ret
retf
add
mov
mov
fcmovb
test
out
adc
cmp
mov
shl
out
ins
(bad)
xchg
lea
leave
mov
dec
dec
dec
xchg
sbb
cs
sub
popf
xor
pop
inc
repnz
fdiv
xor
mov
cs
adc
ret
out
or
iret
inc
out
repnz
pop
dec
xchg
icebp
imul
push
mov
int3
outs
cmp
mov
sti
add
ins
xor
ins
gs
sub
pop
(bad)
in
jnp
cwde
addr16
fadd
push
mov
imul
adc
and
in
pop
mov
sar
sahf
add
pop
aad
pop
daa
dec
inc
cmp
jnp
pop
icebp
push
jnp
imul
loop
mov
test
sub
inc
sub
jecxz
ret
xchg
and
xlat
mov
pop
enter
test
xor
bnd
mov
sbb
pop
cdq
sbb
jg
jb
repz
arpl
mov
jle
xchg
pop
cmc
stos
cmp
sub
sbb
pop
sub
dec
movs
les
in
or
inc
inc
ins
jmp
lahf
xlat
mov
gs
jbe
or
inc
xchg
cld
stc
int
lahf
cmp
jb
repz
pop
sub
xchg
dec
mov
jg
xchg
loope
or
and
fwait
mov
test
adc
int3
fild
xor
call
sub
add
idiv
and
lods
in
dec
das
sti
xchg
shr
(bad)
mov
js
sub
daa
mov
pop
jg
and
mov
loop
pop
jl
push
fcmovnb
retf
add
fwait
hlt
mov
in
pop
adc
test
xor
or
gs
pop
push
dec
dec
ret
inc
push
jnp
imul
xor
adc
cmp
xor
sar
mov
lock
jnp
mov
xchg
sbb
or
xchg
scas
iret
(bad)
shl
sub
(bad)
imul
mov
jg
sub
xchg
mov
pop
and
cmps
stos
call
jnp
push
in
ret
xor
clc
mov
int3
adc
lahf
dec
movs
cmp
mov
cld
adc
inc
dec
dec
les
bndstx
arpl
xor
push
mov
sub
in
pop
imul
fmul
dec
inc
ret
pushf
jecxz
sti
jmp
movs
and
(bad)
out
mov
sbb
repz
mov
dec
pop
cmp
jecxz
and
mov
sbb
mov
es
sbb
test
sub
jbe
mov
stc
jmp
adc
pop
sbb
jns
cmp
popa
mov
enter
and
cmp
jmp
repz
aam
fwait
jecxz
or
add
fcomp
and
loope
call
mov
sbb
sbb
out
jecxz
pop
mov
mov
popf
mov
jle
jb
outs
lock
lods
cmp
jmp
add
clc
out
popf
cli
rcr
popa
add
mov
add
jmp
stc
pusha
sbb
dec
iret
add
aam
hlt
sub
idiv
pop
adc
test
in
leave
aam
inc
xchg
xor
movs
dec
xchg
inc
xor
sub
hlt
femms
sub
push
sbb
int
sub
jl
pop
cmps
or
loop
in
addr16
aam
mov
push
fadd
rcl
ja
adc
xchg
rcr
mov
ja
ins
lahf
ss
inc
pop
out
inc
fs
or
test
sbb
fstp
mov
xchg
in
int3
retf
push
cld
and
or
dec
les
pop
sub
fcomp
stc
jnp
outs
sbb
pop
cwde
mov
xor
xchg
mov
retf
in
ins
push
test
in
dec
pusha
jbe
mov
fisttp
enter
sub
jbe
push
mov
cmp
(bad)
push
jl
fsub
cmps
jns
dec
ret
adc
sbb
js
xchg
jp
push
int
int3
jae
pop
popf
push
arpl
test
ficomp
jmp
cmp
fwait
hlt
mov
scas
or
(bad)
psubusw
mov
or
jae
pusha
jns
adc
stos
lea
jg
test
mov
jecxz
outs
daa
mov
dec
pop
daa
or
jns
sub
rcl
or
jmp
dec
inc
cmp
in
cmps
jae
fdivrp
sub
add
movs
mov
dec
arpl
dec
adc
(bad)
call
or
retf
sbb
jl
sbb
fs
imul
mov
mov
sbb
mov
fisttp
dec
jnp
jle
add
and
cmp
icebp
cmc
mov
unpcklps
push
fistp
cmp
inc
mov
cld
xor
loope
mov
dec
inc
lods
es
dec
ficom
xlat
xchg
dec
shr
stos
jns
inc
mov
aas
cld
lahf
test
dec
mov
outs
lods
in
adc
push
(bad)
ins
mov
stos
fdiv
sbb
and
mov
cs
adc
jo
shr
xchg
dec
shr
stos
jns
jecxz
scas
push
cmp
sti
test
cmp
push
push
nop
mov
vunpcklps
push
(bad)
les
add
repnz
sub
jne
das
sti
xchg
aad
movs
pop
daa
mov
js
sub
and
add
add
arpl
enter
push
(bad)
retf
fadd
(bad)
fwait
hlt
mov
push
cld
stos
adc
sub
sbb
test
pop
mov
mov
arpl
jnp
imul
xor
pop
lods
pusha
pushf
sbb
cmp
xor
aaa
mov
mov
adc
xchg
and
xchg
sbb
or
(bad)
shl
sub
shr
and
and
es
jb
mov
stos
pop
fs
iret
scas
jnp
push
in
and
sti
xor
clc
mov
jo
test
cmp
sub
jecxz
dec
fdivr
adc
stos
dec
rol
outs
bndstx
mov
xor
push
pop
fdiv
pop
imul
cmp
call
sti
or
or
mov
out
mov
sbb
repz
mov
dec
mov
pop
aas
or
sahf
ins
(bad)
mov
out
inc
pop
or
lods
in
pop
push
mov
push
clc
jnp
in
sbb
adc
cld
mov
push
jg
jle
or
sbb
mov
aam
sbb
xchg
daa
or
aam
out
test
repnz
mov
test
or
xor
das
aaa
sub
sbb
in
js
loopne
fadd
or
add
sti
xor
lods
fmul
xchg
pop
xor
mov
scas
jnp
xchg
inc
jno
in
movs
add
jg
outs
xchg
movs
lds
popf
clc
sub
pop
mov
cmps
mov
cmps
icebp
popa
out
or
sar
jne
fstp
dec
retf
or
ins
ret
push
push
imul
test
int3
les
cmps
sbb
inc
pop
pop
jmp
fistp
or
js
sub
dec
call
and
xchg
lods
mov
ss
xor
rcr
mov
push
pop
mov
add
in
mov
mov
mov
mov
sbb
daa
jmp
push
in
ficomp
sbb
imul
jge
or
call
or
dec
lock
sub
mov
add
or
dec
add
sbb
push
xor
sub
sub
xlat
inc
es
lock
int3
xchg
loopne
or
aas
xchg
add
fadd
sbb
inc
jb
in
dec
cvtpi2ps
retf
sub
je
pop
std
push
pop
fisttp
les
inc
add
data16
sbb
div
iret
add
cs
pop
dec
mov
scas
movs
and
or
or
and
xchg
cmp
or
inc
(bad)
push
adc
mov
add
retf
pop
xor
stos
shl
into
sbb
xor
mov
cmp
outs
xchg
leave
dec
pusha
jmp
enter
call
lahf
dec
dec
dec
stos
jle
fwait
push
ror
mov
inc
or
stc
jo
and
rol
push
shr
or
cld
movs
pop
int
ins
mov
fldcw
cmp
and
or
pop
dec
neg
adc
pusha
xor
jo
icebp
adc
daa
adc
dec
add
imul
mov
mov
cmp
mov
pop
add
cmps
test
call
pop
or
call
dec
cmp
jp
cmp
(bad)
and
mov
add
lahf
mov
cld
fs
and
int3
lock
pop
arpl
inc
pop
sub
push
add
mov
aad
in
sbb
xor
cld
fistp
data16
fld
iret
mov
loop
inc
xchg
repz
aam
test
rol
cmp
stc
jmp
sub
clc
mov
sbb
pop
ror
mov
outs
mov
add
(bad)
jne
push
push
cmp
jb
sbb
aaa
push
cmp
ds
stos
ret
mov
rcr
mov
sub
in
xchg
adc
shl
pushf
mov
add
push
and
mov
jo
cmp
les
pop
pop
add
outs
out
les
sub
ficomp
cmps
fcomp
xor
in
call
add
arpl
jmp
dec
mov
xor
mov
mov
mov
sub
fnstcw
lods
jl
or
ss
and
jecxz
or
mov
jmp
and
faddp
test
cvtdq2ps
popa
mov
mov
stos
imul
jg
popa
dec
pop
stos
mov
jge
pop
sbb
sti
jo
aas
fcmovnbe
fidiv
dec
inc
imul
cld
cmp
dec
and
mov
pop
fisttp
dec
sbb
or
bound
cld
add
pop
push
pop
pushf
cmp
cmps
mov
xor
cmps
xchg
xor
cs
pop
xchg
push
adc
pop
and
pushf
jmp
sub
or
cmp
leave
mov
test
repz
out
xchg
stc
popf
xor
sub
cmp
fcmovnbe
mov
ror
lahf
adc
int3
inc
int
rcl
sahf
pusha
int3
mov
out
ins
repnz
mov
retf
repz
dec
in
dec
and
sar
test
pop
inc
sub
popa
or
or
mov
jnp
jnp
push
fmul
push
lods
in
stos
push
pushf
out
movs
and
push
test
stos
les
mov
(bad)
sbb
jg
outs
jo
jmp
jmp
and
fidivr
ret
mov
sbb
or
pushf
mov
xchg
mov
test
scas
ins
ficomp
jmp
sub
push
fmul
mov
mov
dec
mov
jmp
rcr
and
call
cs
add
cwd
xor
or
xchg
xor
mov
test
data16
gs
fs
daa
call
ret
add
sub
mov
(bad)
jnp
adc
test
inc
cmp
lods
ret
arpl
mov
mov
hlt
out
sbb
lods
dec
mov
push
inc
mov
jmp
jmp
push
or
enter
jnp
sub
push
ret
jl
lods
adc
(bad)
sub
dec
or
call
push
jle
fwait
pop
shl
lods
das
cmc
sbb
adc
jno
outs
ins
into
sbb
jl
sbb
retf
xor
mov
cdq
mov
mov
mov
jae
ins
mov
fistp
les
pop
call
fsubr
pushf
sub
das
sbb
dec
leave
sti
adc
pop
pop
dec
ins
sub
enter
mov
mov
mov
fadd
minps
mov
das
mov
clc
imul
in
jmp
jmp
dec
mov
cmps
imul
jne
sub
int
mov
ret
cmps
xchg
(bad)
test
mov
sbb
xchg
fdiv
push
mov
ins
rcr
out
inc
jp
sar
fisub
dec
mov
inc
(bad)
stc
ret
jmp
(bad)
cmp
sbb
(bad)
mov
sub
arpl
or
pop
push
cmp
rol
mov
js
pop
adc
fadd
scas
loope
mov
clc
cmp
mov
cwde
dec
mov
icebp
jmp
sbb
js
dec
(bad)
pop
inc
sub
(bad)
sbb
dec
bnd
mov
xor
jmp
ret
lahf
pop
rcl
and
lock
add
les
push
js
sbb
xor
cmp
sub
pop
(bad)
adc
int
cmps
add
mov
xor
inc
fild
jge
dec
int3
sbb
out
cmp
mov
sbb
sub
inc
mov
jno
gs
in
ret
push
sbb
jbe
enter
into
xlat
retf
push
mov
pop
repnz
cwde
or
push
inc
jbe
dec
outs
repz
add
jge
add
push
cmp
jno
adc
(bad)
xchg
xor
enter
pusha
adc
jl
pop
sahf
aam
or
sub
cmp
add
das
test
imul
and
push
adc
stos
stos
sub
mov
xor
je
lock
rcl
cli
and
jno
int
jbe
cli
ins
xchg
dec
xor
inc
cmp
jmp
call
inc
or
sub
jno
int
stos
jl
loope
sbb
neg
les
call
and
div
arpl
jo
cmp
sbb
(bad)
pop
imul
mov
pop
xchg
cmp
hlt
enter
mov
mov
xchg
out
inc
mov
imul
pop
movs
or
mov
sub
dec
mov
jge
mov
push
push
sub
dec
sub
aas
mov
jae
cmp
ins
mov
cmp
jp
cmc
jmp
js
pop
push
pop
int3
sub
sub
pusha
dec
in
adc
xchg
xlat
dec
fild
jecxz
mov
repz
xchg
adc
enter
inc
jbe
sbb
imul
adc
(bad)
push
pop
pop
xchg
add
add
in
call
daa
fsub
mov
push
sbb
scas
xor
sbb
mov
lock
mov
xor
sti
popf
out
jmp
in
fimul
lock
ja
mov
daa
clc
test
fst
jmp
aam
or
push
call
push
ja
imul
test
in
xchg
mov
clc
js
cmp
jno
or
push
xor
adc
in
popa
add
aaa
shl
inc
loopne
rol
retf
mov
ja
(bad)
(bad)
jnp
xchg
adc
clc
dec
mov
push
jmp
inc
pusha
jle
js
jmp
fst
retf
int3
pop
pop
adc
(bad)
sbb
xchg
jle
fcom
and
aaa
es
sbb
int3
cdq
jne
jmp
xor
cmps
dec
adc
push
ds
cmp
pushf
jg
pop
dec
addr16
adc
sub
retf
in
cmp
jecxz
lea
loopne
call
jmp
cli
jae
dec
pop
mov
(bad)
xor
dec
mov
push
dec
add
dec
outs
je
lods
cmp
mov
xchg
lahf
mov
lahf
ins
mov
int3
jnp
jle
pop
fdivr
mov
rol
int3
sbb
jg
cmp
ins
cmps
sub
jns
fs
popa
dec
cdq
dec
ins
mov
aam
or
mov
adc
push
sbb
stos
shr
addr16
xchg
mov
cld
push
fmul
inc
sub
sub
jmp
jmp
mov
mov
push
fdiv
ss
lahf
in
fisub
in
lods
cwde
out
jl
mov
(bad)
aas
out
fisttp
sbb
and
call
mov
pop
mov
fwait
lods
xchg
imul
fmul
int3
les
lds
sub
or
ret
shl
arpl
jnp
jp
shl
je
sbb
push
jl
xchg
mov
(bad)
adc
enter
ret
sub
inc
push
and
dec
mov
and
(bad)
bound
(bad)
mov
jecxz
fst
xor
outs
daa
mov
push
fs
test
out
xlat
mov
gs
or
in
addr16
fadd
lods
nop
fadd
jge
pop
mov
adc
pop
and
push
cmova
sub
or
leave
cmp
and
fimul
bound
pop
sbb
dec
lock
test
jg
sti
or
mov
test
pushf
retf
(bad)
push
call
leave
mov
cs
retf
mov
pusha
sub
pop
xchg
pop
idiv
out
fwait
dec
xchg
dec
jnp
call
pushf
jg
jp
ret
pushf
dec
pop
push
xor
gs
sbb
fadd
push
cmp
xchg
jmp
cmc
push
or
cmp
retf
sbb
push
push
out
inc
inc
mov
cld
xchg
test
bound
in
mov
fisttp
ret
rcr
ror
and
push
mov
pmulhuw
sub
sub
sbb
js
inc
fist
cld
mov
xor
pop
jb
sbb
mov
add
xchg
imul
cld
imul
movs
les
cmc
sbb
xchg
sbb
stos
sbb
je
iret
call
mov
call
sbb
clc
scas
add
lahf
sub
mov
jecxz
mov
push
dec
sbb
aam
clc
lds
mov
mov
stos
pusha
fwait
cmp
test
mov
idiv
inc
push
fdivr
mov
xor
sbb
gs
sub
sbb
dec
adc
test
add
dec
sbb
js
(bad)
in
out
aad
jl
ins
mov
mov
sub
in
mov
ds
xchg
das
mov
mov
enter
jmp
fstp
mov
dec
fwait
sbb
or
mov
adc
cmp
sub
pop
hlt
hlt
dec
sbb
pusha
push
scas
pop
xchg
(bad)
(bad)
mov
arpl
push
or
mov
inc
push
or
dec
fadd
cmp
or
mov
sbb
stos
xchg
mov
mov
call
jmp
fidiv
leave
enter
dec
fisttp
xchg
xchg
icebp
push
rol
daa
mov
and
pop
or
cmp
sub
cld
out
pusha
fistp
xchg
sbb
cld
jecxz
pop
rcl
mov
mov
(bad)
inc
add
(bad)
mov
adc
pop
je
psubq
inc
ins
push
inc
adc
stos
sub
(bad)
out
test
stos
call
fwait
dec
xchg
adc
jmp
xchg
adc
mov
push
jecxz
(bad)
repnz
add
movs
fmul
push
inc
inc
movs
enter
xchg
mov
xchg
fcomp
adc
push
jno
sub
hlt
push
or
mov
ror
jmp
les
and
sbb
in
jae
jbe
jg
std
sub
pop
sbb
cmp
dec
jae
cld
push
sub
mov
cmps
xor
(bad)
js
in
pop
push
mov
mov
sub
cmp
pop
xor
dec
mov
cmps
pop
outs
mov
in
fcomp
aas
jae
outs
sahf
pop
sbb
mov
sbb
neg
daa
(bad)
(bad)
imul
(bad)
loopne
shr
fild
mov
repnz
add
and
xchg
les
pop
enter
out
pop
mov
sub
sbb
push
je
outs
add
cwde
sub
outs
mov
pop
add
jl
je
or
jmp
mov
jg
daa
push
jno
hlt
test
add
mov
aas
lds
cmp
mov
sbb
psubb
loop
push
and
sub
out
mov
jmp
aam
rcr
dec
das
mov
enter
aaa
jl
in
hlt
xlat
repz
cmp
cmc
test
sub
jns
add
cli
enter
push
js
lock
xor
push
or
or
sub
pop
movs
push
mov
aas
jl
hlt
and
fiadd
sahf
pop
mov
mov
fmul
sbb
int
pushf
jg
jb
sbb
sub
inc
adc
call
xchg
(bad)
and
push
xchg
stos
int3
into
dec
mov
xlat
xor
push
jge
lahf
retf
sbb
jns
rcr
int
iret
repnz
das
add
imul
les
or
add
mov
inc
and
jle
rcr
xor
int3
jle
sub
mov
or
lods
pop
scas
pop
je
movs
jmp
or
aas
xchg
jmp
cdq
lods
outs
mov
adc
xor
mov
sbb
repz
jp
dec
pop
int
jg
jp
xchg
test
lods
jl
scas
and
retf
sub
cmp
imul
int3
(bad)
jmp
out
fsub
mov
sbb
aas
dec
out
(bad)
add
add
sbb
mov
cmp
dec
cdq
cmp
sub
xor
push
jnp
pop
dec
repz
add
in
lahf
xor
imul
cmp
xchg
pop
lea
(bad)
cmp
or
ja
adc
xor
sbb
aaa
div
pop
or
dec
jo
test
and
retf
inc
mov
fist
jnp
fucomip
mov
and
clc
bound
sbb
or
mov
add
xchg
imul
cld
imul
movs
lds
cmc
sbb
xchg
sbb
stos
sbb
je
iret
movs
movs
imul
fcom
jae
pushf
or
and
cmp
sub
pop
jecxz
mov
in
sbb
aad
cli
lds
mov
jl
sub
cmp
xchg
fwait
cmp
test
mov
idiv
inc
push
fdivr
mov
movs
jmp
sahf
xor
(bad)
pop
gs
sub
sbb
dec
adc
test
add
dec
and
js
(bad)
in
call
ins
mov
mov
sub
aam
sbb
xchg
xchg
das
mov
mov
enter
jmp
fstp
mov
sbb
or
mov
adc
cmp
sbb
cmc
dec
push
and
xchg
or
ret
ret
js
clc
test
mov
arpl
call
(bad)
push
push
out
jge
mov
cld
xchg
test
bound
in
mov
jg
rol
out
movs
mov
movs
shr
rcr
cs
sbb
(bad)
jmp
cmps
bound
test
fmul
out
daa
sub
mov
pop
dec
dec
(bad)
push
jmp
push
mov
add
add
ffreep
mov
pusha
sub
int3
movs
mov
pop
mov
int3
retf
push
imul
xchg
pop
mov
stc
sub
push
scas
or
mov
pushf
xor
div
(bad)
jge
das
mov
aas
pop
mov
stc
and
fwait
inc
xor
test
mov
xchg
adc
inc
aad
sbb
push
sub
xchg
dec
ins
push
ss
je
jnp
xchg
fadd
daa
in
add
fcmovnbe
or
pop
rol
mov
adc
cmps
pusha
mov
pop
xor
mov
test
loopne
pop
daa
int3
les
sub
sbb
jae
cmp
xchg
sub
ror
add
push
(bad)
and
lds
js
or
jns
pushf
addr16
jge
ins
shl
push
jnp
push
in
dec
(bad)
rcr
enter
mov
(bad)
jge
sti
rol
xchg
push
repz
xchg
call
out
aaa
sub
nop
jmp
enter
ins
leave
sub
dec
shl
imul
sbb
xor
pushf
(bad)
mov
jl
arpl
retf
mov
pop
adc
xchg
hlt
into
(bad)
jnp
cwde
cmp
fcomp
imul
dec
lods
neg
leave
lahf
xchg
dec
dec
addr16
xchg
fbld
int3
push
inc
inc
inc
int3
pushf
or
xor
es
jmp
sub
jbe
movups
fldcw
jmp
add
shl
sahf
add
mov
retf
pop
(bad)
push
jnp
imul
outs
mov
sti
xchg
jmp
or
mov
lods
jnp
imul
dec
movs
cmp
dec
pop
push
sbb
cwde
lahf
xor
stos
cmp
push
mov
xor
je
pop
sub
sbb
add
inc
xchg
mov
arpl
or
scas
and
mov
cs
adc
jo
mov
dec
shr
stos
jns
inc
int3
in
aas
cld
lahf
test
dec
mov
outs
lods
in
adc
push
(bad)
ins
mov
fdiv
sbb
or
stos
mov
pop
and
fs
rcl
mov
xor
or
sbb
sbb
mov
push
adc
fwait
call
mov
sbb
mov
mov
sub
or
mov
fdivr
in
dec
pop
dec
mov
pusha
xor
fimul
repnz
pop
mov
adc
sub
inc
push
mov
fnstenv
push
sbb
sub
or
dec
dec
out
sbb
ins
in
inc
sbb
ret
imul
or
mov
mov
mov
push
or
xchg
scas
iret
(bad)
shl
sub
mov
sub
mov
jg
sub
int3
mov
pop
and
sti
stos
mov
jnp
and
popf
fmul
lods
repz
dec
sti
ins
adc
lahf
dec
movs
std
cmp
sub
jecxz
dec
fdivr
sub
push
outs
bndstx
ds
xchg
xor
push
jmp
aas
pop
imul
(bad)
int3
repz
ret
pushf
jecxz
sti
mov
(bad)
out
mov
sbb
repz
mov
dec
(bad)
inc
aam
pop
aas
or
sub
and
sbb
fisttp
dec
pop
xor
int3
stc
mov
test
adc
xor
call
dec
or
add
test
jge
mov
sti
xchg
mov
mov
js
sub
pop
mov
jnp
xchg
add
jge
jmp
pop
arpl
enter
sub
pushf
retf
sub
aad
(bad)
fwait
hlt
int3
or
cld
(bad)
adc
sti
sub
sbb
gs
pop
je
cmps
ret
(bad)
and
adc
jg
add
cmp
sub
sti
or
sbb
lods
inc
aam
sub
add
in
jp
js
pushf
test
sub
mov
sbb
ss
lock
in
mov
mul
in
push
sub
pushf
shl
das
and
xlat
icebp
adc
jmp
fcmovnbe
xor
xor
push
pop
push
into
xchg
cld
out
fisub
xor
jmp
xchg
push
pop
xchg
jmp
mov
in
xor
ret
mov
jecxz
sti
sub
(bad)
push
(bad)
(bad)
(bad)
repnz
cwde
or
hlt
(bad)
int3
jle
outs
test
pop
push
jmp
mov
cmp
jb
fmul
repz
in
pop
xchg
vpcmpeqd
pop
not
and
sahf
xchg
xchg
sub
mov
cdq
(bad)
xor
add
xor
push
sub
inc
nop
jnp
out
or
adc
sub
mov
imul
addr16
cmp
daa
pop
fwait
xchg
into
ja
dec
push
ret
fdivp
add
outs
mov
fwait
pushf
lds
xlat
and
mov
call
xchg
hlt
or
mov
enter
in
call
mov
dec
jo
jmp
or
jecxz
pop
sub
rol
or
pop
lahf
sbb
arpl
retf
mov
cmp
hlt
retf
hlt
iret
repz
pop
out
xor
inc
and
popf
hlt
add
jg
scas
jp
fwait
in
mov
aaa
lods
ficomp
imul
and
and
mov
add
push
or
xchg
inc
arpl
or
(bad)
int3
imul
xchg
arpl
add
out
xchg
and
retf
mov
scas
fwait
jbe
cmovbe
mov
cmps
les
pop
inc
sti
xor
in
fistp
ss
stos
pop
push
xchg
dec
dec
lock
cmp
fld
xor
jmp
and
stos
xchg
pop
sahf
(bad)
or
stos
cmps
call
pusha
aam
scas
imul
and
pop
jae
push
pusha
xchg
mov
dec
push
sub
add
repz
add
xor
cwde
int3
cmp
mov
push
jmp
and
mov
inc
push
stos
das
out
mov
mov
jle
xlat
das
mov
jl
mov
ror
pop
out
fwait
jbe
fidiv
imul
fsub
not
jmp
jmp
fs
or
imul
fisttp
dec
xchg
sbb
inc
xchg
mov
ja
jmp
pop
lea
pop
lock
call
sbb
mov
popa
lods
jmp
and
inc
cwde
loop
or
xchg
aam
mov
mov
pushf
cmp
aad
out
arpl
mov
jle
test
dec
shr
sub
dec
mov
jnp
loopne
movs
xchg
jnp
shl
enter
das
sbb
retf
mov
pushf
das
add
cmp
lods
pop
pop
hlt
mov
les
jns
(bad)
pop
js
jmp
jb
arpl
pop
lahf
mov
ds
sbb
out
mov
call
sbb
iret
test
imul
in
jmp
fwait
sub
loop
adc
sub
scas
sub
jecxz
scas
push
jle
ins
cmp
and
sbb
mov
add
int3
sbb
or
lods
imul
shl
ret
lods
iret
pushf
adc
dec
sub
xlat
xchg
vmread
scas
sub
loop
ret
cmp
cmp
xchg
jmp
pop
mov
xor
sub
sbb
dec
adc
test
add
dec
cmp
(bad)
in
aad
sti
jl
ins
mov
mov
sub
cwde
mov
ds
xchg
das
test
xchg
jmp
mov
cmp
jne
sbb
or
mov
adc
cmp
cmc
dec
sbb
xchg
or
ret
ret
adc
clc
test
mov
arpl
popf
mov
(bad)
sbb
push
push
out
jp
mov
cld
xchg
test
bound
in
mov
xor
ret
rcr
ror
sbb
push
mov
psubusb
sub
sub
sbb
js
inc
fild
jnp
ja
mov
and
clc
pop
jb
sbb
sbb
add
xchg
imul
cld
imul
cmp
movs
lds
cmc
sbb
xchg
sbb
stos
sbb
je
iret
sahf
movs
imul
fcom
dec
inc
pushf
or
clc
scas
add
lahf
sub
sub
pop
jecxz
mov
or
sbb
aad
cld
lds
mov
xchg
sub
ret
ins
rcr
imul
fcomp
sar
cs
nop
pushf
lds
jmp
imul
fmul
mov
ins
in
das
test
pushf
push
lea
scas
ins
(bad)
fimul
stos
pop
adc
mov
pop
xchg
dec
int3
sub
add
sub
push
ds
mov
push
xchg
pop
lahf
fcomip
xlat
and
arpl
leave
jo
mov
or
mov
mov
ss
ret
mov
mov
sti
cmc
sub
xchg
or
ja
imul
lds
dec
je
xor
inc
imul
test
mov
jmp
lea
add
ret
out
ror
cld
add
call
jae
hlt
mov
xor
mov
stos
ja
pop
addr16
mov
test
mov
in
jecxz
clc
idiv
and
retf
sbb
aam
and
sbb
xchg
in
pop
mov
cmp
add
jecxz
lea
and
cmp
(bad)
aad
iret
pop
lock
sbb
lea
outs
push
jno
out
stos
mov
mov
pop
fwait
inc
iret
loopne
mov
inc
xor
in
lods
push
push
xlat
jae
mov
sbb
ficomp
jmp
ds
hlt
mov
scas
cld
movs
(bad)
psubusw
mov
arpl
pop
pusha
repz
movs
mov
dec
push
dec
je
jnp
mov
mov
adc
fimul
mov
movs
loop
push
push
ds
arpl
or
mov
jae
in
popa
mov
mov
push
shl
lahf
in
add
push
fadd
les
mov
jae
sub
xchg
lahf
lahf
mov
ror
cmp
in
pop
cwde
mov
lods
sbb
mov
fbstp
cmp
sub
dec
aam
icebp
mov
push
inc
(bad)
dec
lods
ror
and
xor
mov
sbb
or
lock
movs
cmp
sub
pushf
arpl
mov
xchg
mov
test
(bad)
enter
push
adc
in
(bad)
int
inc
push
mov
or
or
and
scas
cld
xchg
in
adc
in
ret
das
in
push
rcl
cwde
test
push
or
jg
add
in
sub
and
daa
add
pop
inc
or
jns
sub
or
imul
jb
inc
sbb
mov
add
push
xchg
movs
mov
fisttp
jmp
idiv
fisttp
mov
xor
scas
loop
hlt
mov
jnp
das
addr16
xchg
dec
xchg
sub
jmp
add
(bad)
push
jnp
and
pop
(bad)
or
in
imul
push
pop
dec
fwait
inc
inc
mov
fs
mov
mov
mov
pop
dec
or
clc
cs
movs
pop
call
int
push
sti
cmp
and
and
cmp
icebp
ret
dec
mov
and
push
inc
xchg
(bad)
iret
arpl
idiv
push
add
xchg
imul
cld
imul
cmp
movs
lds
cmc
sbb
xchg
sbb
stos
sbb
je
iret
movs
movs
imul
fcom
jae
pushf
or
sti
clc
scas
add
lahf
adc
mov
pop
jecxz
mov
fmul
jle
aad
sti
lds
mov
jl
sub
cmp
clc
fwait
cmp
test
mov
idiv
inc
push
fdivr
mov
mov
sbb
gs
sub
sbb
dec
adc
test
add
dec
or
js
(bad)
in
jmp
ins
mov
mov
sub
cwde
mov
ds
xchg
das
mov
mov
enter
jmp
fstp
mov
sbb
or
mov
adc
cmp
sbb
cmc
dec
pop
and
xchg
or
ret
ret
pushf
jnp
test
mov
arpl
cdq
mov
(bad)
push
out
jle
mov
cld
xchg
test
bound
in
mov
xchg
dec
idiv
rcr
ror
movs
imul
mov
paddusw
sub
sub
or
xor
scas
mov
mov
mov
mov
loopne
jmp
adc
mov
int3
addr16
add
cld
das
xor
jg
inc
call
xchg
cmp
ins
lahf
xlat
mov
lods
fwait
sbb
push
xchg
call
pop
jl
and
repz
cmp
int
sub
in
retf
add
clc
loopne
push
pop
pop
cmp
mov
dec
(bad)
pop
retf
(bad)
stos
rcl
pop
shr
adc
sbb
xor
sbb
or
ror
adc
int
retf
pop
add
clc
sub
cwde
repz
dec
pop
or
adc
and
(bad)
mov
push
stos
sub
loopne
ret
xchg
mov
outs
clc
mov
mov
pop
and
(bad)
cmp
js
or
sbb
pop
popa
adc
mov
mov
mov
shl
aas
mov
sub
dec
mov
shr
pushf
test
push
enter
cmp
call
add
and
pop
ja
sbb
sub
push
dec
inc
jmp
lods
imul
lds
je
jg
imul
pop
in
jg
sub
or
hlt
mov
add
imul
stos
xor
in
jnp
dec
in
push
(bad)
cmp
push
arpl
test
fcmovnbe
retf
mov
imul
int
clc
loopne
push
and
call
jmp
pop
jae
inc
sar
push
lahf
test
pop
int
inc
das
inc
push
lea
shr
cmps
jge
adc
int3
(bad)
cmp
sub
cmc
or
mov
int
sub
rcr
or
jl
ins
xchg
mov
test
das
shl
call
stc
mov
jbe
mov
push
div
cmp
lahf
mov
mov
aas
mov
sbb
and
push
jmp
or
jp
pop
stos
jno
lds
je
aas
xor
clc
les
inc
mov
mov
cli
pop
sub
mov
sub
mov
cmp
and
ins
jmp
retf
mov
sub
ror
add
movs
aam
xor
clc
aam
pop
arpl
inc
jmp
pop
stos
jno
sbb
jecxz
repz
mov
cmp
and
mov
add
push
out
fisttp
dec
mov
stos
pop
out
sbb
jnp
stos
in
adc
xor
push
xchg
pushf
hlt
jmp
icebp
pop
nop
xor
arpl
push
or
xchg
in
lea
(bad)
int3
jg
ret
lea
shr
cmps
jge
adc
int3
inc
rol
mov
sbb
jnp
pop
and
repnz
inc
add
cmp
xchg
xchg
ror
or
pop
call
and
mov
jmp
add
push
dec
push
push
ss
add
dec
push
inc
cmp
js
and
popf
add
cmps
loope
sbb
mov
jecxz
in
aam
std
mov
mov
jbe
and
mov
add
push
ret
hlt
inc
sub
inc
sbb
push
push
fwait
jmp
sbb
hlt
ins
mov
jmp
retf
mov
jno
sub
or
cmps
std
mov
mov
test
fs
and
ret
mov
xor
sub
jecxz
add
cld
arpl
pop
aam
int3
retf
hlt
aam
repnz
inc
popf
(bad)
cli
test
test
imul
inc
add
push
int
mov
ret
arpl
pushf
mov
fld
and
or
dec
and
int
cmp
inc
cmp
in
popf
sub
arpl
out
fwait
pop
out
call
dec
push
ret
add
inc
out
cmp
neg
es
test
fmul
jg
outs
call
lahf
xchg
push
inc
mov
cmps
lods
in
div
xchg
add
mov
xchg
mov
ss
push
or
jl
cmp
arpl
jo
add
pop
mov
push
shl
jbe
xchg
adc
aad
movs
les
ins
fistp
push
pushf
scas
call
inc
rcl
or
cmp
and
xor
lods
scas
sub
xchg
or
pop
pop
sub
addr16
out
shl
or
mov
mov
jmp
loope
adc
sub
mov
or
lahf
pop
pop
adc
and
ffree
test
mov
adc
jge
mov
out
mov
add
leave
mov
mov
mov
push
out
loop
add
stos
xchg
(bad)
mov
push
lds
jbe
jno
add
mov
aam
in
cmc
add
retf
test
retf
jecxz
repnz
xor
jne
mov
and
mov
es
fs
push
icebp
test
jle
xchg
sub
cmp
rcr
lods
mov
stos
and
cmp
mov
aad
popa
mov
xrelease
push
xor
out
dec
dec
xor
movs
inc
fsubr
(bad)
push
mov
xchg
(bad)
int3
jg
sti
lods
call
xchg
jmp
and
inc
pop
jae
push
js
or
imul
fmul
xor
clc
aam
push
adc
jae
jl
xchg
pop
les
ja
je
aas
xor
(bad)
xchg
push
sbb
and
shl
ror
pushf
adc
jb
iret
shr
add
rol
and
dec
jmp
jg
jmp
retf
test
test
cld
push
sbb
pop
and
mov
pusha
and
repz
arpl
repnz
jg
inc
mov
xor
in
xchg
pop
dec
add
mov
add
pushf
xchg
mov
sbb
in
dec
add
ror
in
out
out
inc
out
aas
mov
and
push
jge
jecxz
call
movs
xor
je
lods
jecxz
sbb
das
or
daa
popa
push
or
jp
inc
xchg
push
fisttp
(bad)
push
in
dec
push
aas
xor
or
hlt
fs
imul
or
dec
cmp
or
cmps
loope
xchg
mov
sar
push
push
or
in
xchg
popa
dec
adc
xor
xor
fs
shl
rol
adc
jnp
push
add
xchg
std
xchg
stc
mov
jbe
sub
or
dec
xor
shl
xor
push
fsubr
ror
mov
in
pop
int
int3
jg
imul
lahf
arpl
jae
jge
sub
pop
sub
aas
ret
out
fs
adc
je
inc
xor
data16
lea
in
add
sti
and
mov
mov
sar
jae
xchg
pop
xchg
and
jbe
sbb
push
sti
shr
cmps
nop
xor
pop
movs
add
inc
xchg
fs
xor
push
fwait
pushf
movs
int
sub
inc
cmp
rcr
lods
jmp
cli
movs
(bad)
mov
push
mov
test
fdivr
xchg
aam
or
hlt
sahf
adc
iret
mov
pop
call
fsubr
cmp
or
les
and
(bad)
mov
js
(bad)
jecxz
sub
xor
std
jmp
outs
cmp
inc
cmp
add
xor
(bad)
mov
mov
fwait
cmp
pop
add
movs
fsubr
test
shl
xchg
push
add
inc
nop
es
call
fsubr
cmp
or
or
jge
jns
xor
aad
sub
jecxz
or
add
movs
je
ffree
xor
push
xchg
(bad)
hlt
add
and
lods
mov
stos
hlt
mov
and
inc
idiv
dec
adc
xchg
(bad)
int3
push
inc
sub
sti
pop
adc
(bad)
sbb
pop
stos
dec
push
cmp
ds
dec
movs
int
int
clc
jecxz
in
dec
jae
cmp
push
dec
and
sub
or
cld
fwait
out
call
ins
out
mov
sti
imul
pushf
mov
cmp
pop
pop
loopne
xchg
das
xor
sbb
je
push
test
jno
mov
mov
add
pop
popa
(bad)
xchg
test
add
sbb
jl
jne
mov
cmp
jge
pop
ret
mov
int3
xchg
shl
xor
lds
popa
pop
bound
push
or
mov
ins
jmp
ret
cmp
mov
inc
repz
dec
adc
adc
push
clc
out
retf
jl
popf
sti
pushf
cmps
out
push
jae
inc
sar
aas
xor
pop
cwde
mov
in
in
or
mov
dec
aam
or
rcl
dec
or
sub
dec
inc
xor
ins
cmp
jae
stos
aad
in
fs
jp
movs
push
dec
mov
je
and
fsubr
push
mov
jmp
retf
or
ret
adc
mov
(bad)
leave
mov
ins
aam
sbb
neg
add
jae
stos
in
push
mov
fwait
cld
jp
mov
sub
or
cmp
data16
lahf
dec
sbb
push
cmp
jnp
xchg
inc
push
push
fwait
sub
lods
sub
mov
mov
stos
or
sub
xor
jle
pop
retf
pushf
sti
xor
ins
cmp
inc
dec
jmp
iret
repz
jp
stos
and
cmp
or
dec
outs
push
sbb
nop
jecxz
lahf
nop
fisub
mov
je
xchg
sub
popa
mov
(bad)
int3
les
dec
inc
jmp
dec
push
xor
xchg
adc
das
call
dec
aam
cwde
pushf
or
ins
cmp
jno
sub
or
jp
mov
cdq
aam
mov
nop
jecxz
lahf
nop
aaa
mov
ret
shl
fs
add
retf
adc
lock
and
lods
ret
push
hlt
mov
nop
jecxz
lahf
nop
fidiv
fbstp
mov
add
movs
cwde
mov
mov
jmp
cwde
push
mov
push
push
mov
and
xlat
mov
call
or
adc
and
xchg
mov
jecxz
or
add
add
rol
lods
pop
(bad)
(bad)
lods
into
xchg
or
aaa
pop
inc
mov
cld
fwait
enter
mov
mov
lods
mov
sbb
xchg
jecxz
and
sbb
mov
ror
sub
std
mov
cmps
les
out
sahf
pop
enter
daa
jge
jns
dec
call
push
dec
(bad)
pop
sub
xchg
and
mov
or
push
add
cli
test
lods
ret
cmp
stos
sub
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
js
ins
fistp
dec
mov
sbb
call
aas
mov
js
fistp
dec
mov
sbb
call
aas
mov
jl
fistp
dec
mov
sbb
call
aas
mov
js
fistp
dec
mov
sbb
call
aas
mov
or
pop
retf
dec
mov
pop
retf
or
mov
or
sti
mov
dec
int
cmp
jl
cmp
sub
sbb
(bad)
mul
(bad)
push
out
sbb
add
sub
xor
mov
pop
xchg
das
fcom
pop
in
addr16
pop
pop
lds
out
les
pop
lahf
in
addr16
dec
cld
ja
jg
pop
xchg
outs
fcom
dec
cmp
or
pop
fisttp
mov
pop
mov
clc
jg
outs
fcomp
dec
cmp
dec
int3
aaa
mov
dec
iret
add
adc
and
(bad)
dec
mov
sbb
or
cld
das
test
fmul
int3
cmp
sub
jl
sub
pop
retf
dec
(bad)
js
sub
sbb
or
cld
das
in
pop
fmul
jg
sub
cmp
dec
mov
sbb
dec
jnp
imul
cwde
bswap
cmp
sub
jl
sub
pop
retf
dec
mov
pop
mov
cld
imul
mov
or
pop
(bad)
out
sub
sbb
or
mov
dec
int3
cmp
mov
jl
ins
lahf
sbb
dec
(bad)
cmp
sub
sbb
dec
jnp
das
in
pop
fmul
jg
sub
cmp
dec
mov
sbb
repz
dec
bswap
cmp
call
mov
sbb
dec
inc
scas
out
sub
jecxz
or
cld
imul
fmul
cmp
jae
out
scas
ins
(bad)
stos
rcr
cld
xchg
in
pop
fmul
cmp
mov
out
scas
ins
(bad)
push
sub
sbb
or
cld
imul
dec
xor
pushf
or
pop
retf
dec
mov
sbb
or
outs
das
in
pop
and
cmp
mov
jl
call
cmp
sub
sbb
or
cld
imul
dec
bswap
cmp
call
mov
pop
retf
dec
mov
sbb
or
mov
dec
int3
les
mov
jl
ins
dec
sbb
dec
inc
cmp
sub
sbb
or
cld
imul
cwde
dec
int3
les
jae
jl
sub
pop
xor
mov
jecxz
repz
imul
dec
xor
mov
or
mov
push
sub
sbb
or
cld
imul
fmul
cmp
mov
jmp
and
pop
or
pop
mov
cld
clc
test
fdiv
in
or
pop
pop
or
sbb
dec
jnp
xchg
in
pop
(bad)
mov
aam
sbb
ins
fistp
(bad)
cmp
mov
jnp
clc
test
fdiv
sbb
xchg
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
pop
mov
call
fmul
cmp
mov
sub
fcmovne
(bad)
dec
mov
(bad)
iret
or
add
test
fdiv
sbb
ins
fistp
mov
pop
iret
or
cld
imul
fmul
cmp
sub
fmul
mov
js
fistp
sub
sub
sbb
repz
imul
cwde
dec
xor
mov
hlt
mov
jmp
fistp
retf
mov
cmp
push
jnp
imul
fmul
int3
les
jae
jl
ins
fistp
mov
pop
iret
or
cld
xchg
in
pop
fmul
cmp
lods
sbb
sub
sbb
dec
sub
sub
sbb
or
cld
imul
fmul
jg
sub
pop
pushf
or
cmp
ins
and
(bad)
dec
mov
sbb
or
cld
imul
(bad)
mov
mov
or
pop
xor
mov
sbb
repz
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
mov
dec
int3
test
sub
out
scas
ins
(bad)
push
mov
call
dec
bswap
cmp
call
mov
sbb
dec
inc
scas
out
sub
jecxz
dec
jnp
xchg
jg
fmul
cmp
jae
cmp
ins
and
retf
(bad)
cmp
rcr
cld
xchg
in
pop
(bad)
mov
mov
or
cmp
ins
and
retf
dec
sub
sub
(bad)
iret
or
add
enter
les
outs
lods
sbb
mov
jmp
and
(bad)
dec
mov
sbb
lahf
aas
cld
imul
cwde
dec
int3
les
mov
jmp
and
pop
or
sbb
dec
jnp
xchg
in
enter
les
mov
jl
ins
fistp
(bad)
cmp
ror
pop
mov
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
test
sub
jl
ins
fistp
sub
sub
sbb
or
cld
imul
fmul
cmp
mov
sub
fistp
mov
sbb
repz
imul
fmul
jg
sub
pushf
or
pop
retf
(bad)
cmp
rcr
cld
xchg
in
pop
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
pop
mov
cld
imul
cwde
dec
int3
les
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
sub
sub
sbb
lahf
aas
cld
imul
fmul
cmp
pop
mov
pop
pop
or
sbb
or
cld
imul
dec
xor
mov
or
pop
retf
dec
mov
sbb
or
mov
dec
int3
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
dec
xor
mov
or
pop
retf
dec
mov
sbb
or
cld
clc
test
fdiv
in
or
mov
sbb
dec
inc
ret
push
ror
pop
mov
add
test
fdiv
pop
pushf
or
out
scas
ins
(bad)
push
mov
jnp
xchg
jg
fmul
cmp
outs
lods
sbb
jae
cmp
ins
and
pop
or
pop
mov
add
test
fdiv
sbb
ins
fistp
clc
cmp
sub
(bad)
iret
or
add
test
fdiv
mov
or
mov
stos
ror
pop
mov
cld
xchg
in
movs
fdiv
in
hlt
pop
mov
mov
push
mov
test
imul
cwde
dec
int3
les
outs
lods
sbb
enter
xchg
fistp
(bad)
cmp
ror
pop
mov
cld
imul
dec
xor
cmovg
pop
xor
sub
sub
sbb
or
cld
clc
test
fdiv
in
hlt
jae
jl
sub
pop
xor
(bad)
cmp
ror
pop
mov
cld
imul
cwde
dec
int3
les
mov
sbb
mov
cmp
sub
sbb
or
outs
das
in
pop
and
mov
mov
or
cmp
ins
and
retf
dec
mov
jecxz
or
outs
das
in
pop
and
jg
sub
pushf
or
iret
(bad)
dec
mov
sbb
or
cld
xchg
in
pop
fdiv
sbb
sub
pop
xor
mov
sbb
or
cld
imul
cwde
dec
int3
test
sub
jl
ins
fistp
mov
sbb
repz
dec
bswap
cmp
lods
sbb
call
scas
out
sub
jecxz
or
mov
dec
pop
jg
sub
fmul
mov
scas
ins
(bad)
stos
sub
pop
mov
cld
clc
test
fdiv
sbb
mov
jl
ins
fistp
sub
sub
sbb
or
outs
das
in
pop
and
cmp
pop
mov
sbb
dec
inc
scas
out
sub
jecxz
dec
jnp
xchg
jg
fmul
test
sub
cmp
pop
xor
mov
sbb
or
outs
das
in
pop
and
cmp
mov
jl
ins
fcmovne
(bad)
dec
mov
sbb
or
mov
dec
int3
jns
outs
lods
sbb
dec
mov
sub
fistp
mov
sbb
or
cld
imul
fmul
jg
sub
fmul
mov
jmp
fistp
mov
pop
mov
outs
das
in
pop
and
cmp
mov
jl
ins
fistp
mov
sbb
repz
clc
test
fdiv
sbb
ins
fistp
mov
sbb
dec
jnp
xchg
jg
fmul
cmp
mov
jl
ins
fistp
mov
sbb
lahf
aas
cld
imul
cwde
dec
int3
les
mov
jl
ins
fistp
mov
sbb
dec
jnp
xchg
in
enter
les
mov
jl
ins
fcmovne
vprotq
sub
sbb
or
cld
imul
fmul
cmp
sub
out
scas
ins
(bad)
push
mov
jnp
imul
fmul
test
sub
jl
ins
fistp
(bad)
cmp
rcr
add
pop
fmul
cmp
outs
lods
sbb
pop
mov
pop
retf
dec
sub
sub
(bad)
iret
or
add
pop
fmul
cmp
mov
js
fistp
(bad)
cmp
ror
pop
mov
cld
imul
dec
xor
mov
or
pop
xor
(bad)
cmp
ror
pop
mov
cld
clc
test
fdiv
in
or
pop
retf
mov
cmp
push
jnp
das
in
pop
and
test
sub
jl
sub
pop
xor
sub
sub
sbb
dec
jnp
xchg
in
enter
les
pop
mov
sbb
dec
inc
cmp
push
call
(bad)
mov
mov
or
out
scas
ins
(bad)
stos
shl
or
add
test
sub
sub
fistp
mov
sbb
dec
jnp
xchg
in
pop
fmul
jg
sub
cmovg
pop
retf
mov
scas
out
sub
jecxz
or
cld
imul
fmul
jg
sub
arpl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
cmp
pop
xor
(bad)
cmp
rcr
cld
imul
cwde
dec
int3
les
enter
ins
fistp
mov
jecxz
or
cld
imul
fmul
jg
sub
fmul
mov
js
fistp
mov
sbb
or
cld
imul
dec
xor
cmovg
pop
xor
sub
sub
(bad)
iret
or
add
pop
fmul
test
sub
jl
ins
fistp
mov
pop
mov
outs
das
in
pop
and
les
jae
cmp
ins
and
(bad)
dec
mov
pop
mov
cld
clc
test
fdiv
sbb
ins
fistp
mov
sbb
lahf
aas
cld
imul
cwde
dec
int3
les
mov
cmp
pop
xor
sub
sub
sbb
or
mov
fmul
sbb
dec
mov
cmp
pop
xor
(bad)
cmp
ror
pop
mov
outs
das
in
pop
and
jg
sub
pushf
or
mov
push
mov
jnp
imul
fmul
test
sub
jl
ins
fistp
(bad)
cmp
rcr
cld
imul
cwde
dec
int3
les
outs
lods
sbb
enter
call
scas
out
sub
jecxz
lahf
aas
cld
imul
cwde
dec
int3
les
enter
call
js
sub
sbb
or
cld
imul
dec
bswap
cmp
lods
sbb
ins
fistp
mov
jecxz
or
outs
das
in
pop
and
mov
mov
or
pop
xor
(bad)
cmp
ror
pop
mov
outs
das
in
pop
and
cmp
mov
jl
call
js
sub
sbb
dec
jnp
xchg
in
enter
les
outs
lods
sbb
mov
jl
xchg
fistp
mov
sbb
or
mov
fmul
pop
pushf
or
cmp
ins
and
pop
or
sbb
dec
jnp
imul
fmul
aas
mov
or
fistp
mov
sbb
or
clc
outs
call
aas
mov
js
fistp
dec
mov
sbb
call
aas
mov
js
fistp
dec
mov
sbb
call
aas
mov
js
fistp
dec
mov
sbb
call
aas
mov
js
fistp
mov
dec
in
adc
sbb
cmp
ins
in
pushf
jns
scas
xor
and
jmp
cld
aas
xor
mov
dec
loopne
iret
js
mov
cwde
je
xor
clc
push
(bad)
js
mov
mov
add
lock
loop
adc
iret
dec
into
dec
int3
dec
bnd
mov
cwde
or
sub
push
inc
pop
int
out
ins
cld
fstp
mov
fist
retf
and
pop
stos
inc
out
outs
clc
mov
fwait
or
dec
retf
jl
imul
mov
and
push
fmul
jae
jnp
mov
sbb
jle
push
jmp
loopne
call
mov
push
sub
imul
inc
and
push
enter
jmp
lahf
cmp
dec
iret
jge
pop
(bad)
dec
mov
daa
test
push
adc
sub
pop
fild
push
add
lahf
cmp
gs
jle
pop
mov
aam
scas
arpl
jae
inc
jmp
sahf
or
outs
lock
call
mov
mov
ins
stos
inc
int3
push
cmp
pop
lods
push
jecxz
lods
push
fild
ja
dec
int3
retf
xor
add
adc
sub
dec
cld
jge
pop
aad
sar
sbb
or
dec
(bad)
pop
movs
outs
clc
ins
or
adc
fs
adc
pop
pushf
(bad)
call
sbb
jle
add
pop
mov
cwde
jno
jg
je
dec
fstp
pop
fistp
pop
pop
mov
add
jns
pop
scas
arpl
mov
enter
mov
je
xor
fisttp
aam
test
mov
ins
jmp
mov
sub
pop
fdivr
mov
sbb
jb
inc
clc
jne
pusha
cmp
cmp
movs
pop
shr
lock
cmps
mov
arpl
or
and
jg
mov
mov
scas
aas
xchg
or
pop
hlt
sub
dec
mov
mov
stos
aas
sti
pop
cdq
ins
fwait
push
das
shr
pushf
or
(bad)
fld
jb
addr16
dec
scas
arpl
ins
fldenv
jmp
sbb
or
pop
fild
pop
retf
mov
sbb
or
pop
jmp
retf
adc
outs
cmp
or
imul
cmc
or
pop
jmp
push
push
push
lods
push
jecxz
mov
inc
iret
jb
addr16
or
aas
mov
repz
jnp
push
aas
ret
pop
lods
push
jecxz
mov
je
dec
test
inc
cdq
pop
mov
jl
ins
fistp
imul
clc
cmp
and
gs
mov
fdivr
int
retf
dec
xor
dec
cwde
fs
cmp
jne
ins
in
mov
pop
mov
retf
pop
out
pop
cmp
mov
aas
call
cdq
sbb
dec
(bad)
pop
fstp
in
cmp
sub
pop
mov
lods
push
scas
sbb
jae
push
fist
ret
dec
or
movs
pop
aad
rcr
loopne
lea
or
ret
mov
mov
rcr
jle
fadd
and
dec
(bad)
scas
sbb
or
cmp
inc
lds
out
pop
aas
mov
fwait
mov
iret
pop
repz
dec
and
push
imul
fld
sbb
(bad)
clc
cmp
add
cmp
cmp
sub
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
cmp
sub
sbb
or
jl
ins
fistp
cmp
mov
imul
fmul
mov
sbb
or
jl
ins
fistp
cmp
mov
imul
fmul
mov
sbb
or
jl
ins
fistp
cmp
mov
imul
fmul
mov
sbb
or
jl
ins
fistp
cmp
mov
imul
fmul
mov
sbb
or
jl
ins
fistp
cmp
mov
imul
fmul
mov
sbb
or
jl
ins
fistp
cmp
mov
imul
fmul
mov
sbb
or
jl
ins
fistp
cmp
mov
imul
fmul
mov
sbb
or
jl
ins
fistp
cmp
mov
imul
fmul
mov
sbb
or
jl
ins
fistp
cmp
mov
push
pop
fisttp
mov
sbb
jmp
mov
or
pop
fisttp
mov
sbb
jmp
mov
or
pop
fisttp
mov
sbb
jmp
mov
or
pop
fisttp
mov
sbb
jmp
mov
or
pop
fisttp
mov
sbb
jmp
mov
or
pop
fisttp
mov
sbb
jmp
mov
or
pop
fisttp
mov
sbb
jmp
mov
or
pop
fisttp
mov
sbb
jmp
mov
or
pop
fisttp
mov
sbb
jmp
mov
or
pop
fimul
mov
push
mov
stc
jle
outs
fstp
dec
cmp
or
pop
fimul
mov
push
mov
stc
jle
outs
fstp
dec
cmp
or
pop
fimul
mov
push
mov
stc
jle
outs
fstp
dec
cmp
or
pop
fimul
mov
push
mov
stc
jle
outs
fstp
dec
cmp
or
pop
fimul
mov
push
mov
stc
jle
outs
fstp
dec
cmp
or
pop
fimul
mov
push
mov
stc
jle
outs
fstp
dec
cmp
or
pop
fimul
mov
push
mov
stc
jg
outs
fcomp
dec
cmp
or
pop
fisttp
mov
pop
mov
clc
jg
outs
fcomp
dec
cmp
or
pop
fisttp
mov
pop
mov
clc
jg
outs
fcomp
dec
cmp
or
pop
fisttp
mov
pop
mov
clc
jg
outs
fcomp
dec
cmp
or
pop
fisttp
mov
pop
mov
clc
jg
outs
fcomp
dec
cmp
or
pop
fisttp
mov
pop
mov
clc
jg
outs
fcomp
dec
cmp
or
pop
fisttp
mov
pop
mov
clc
jg
outs
fcomp
dec
cmp
or
pop
fisttp
mov
pop
mov
clc
jg
outs
fcomp
dec
cmp
or
pop
fisttp
mov
pop
mov
clc
jg
outs
fcomp
dec
cmp
or
pop
fisttp
mov
pop
mov
clc
jg
outs
fcomp
dec
cmp
or
pop
fisttp
mov
pop
mov
clc
jg
outs
fcomp
dec
cmp
or
pop
fisttp
mov
pop
mov
mov
jge
popa
pop
mov
mov
pop
fild
fidiv
inc
repz
pop
popf
movs
test
push
loope
push
inc
stos
jnp
adc
test
xor
push
in
mov
daa
and
adc
push
xchg
mov
add
adc
(bad)
cmp
ins
fsubr
mov
stos
leave
or
mov
(bad)
out
xor
std
inc
ret
xchg
or
dec
add
dec
jl
pop
(bad)
push
or
inc
in
inc
xor
mov
xor
push
outs
ds
push
fdivr
mov
in
out
push
(bad)
sti
xor
call
(bad)
fiadd
rcl
retf
in
dec
cld
sub
repnz
cmp
xor
leave
imul
add
(bad)
iret
or
push
and
stos
and
mov
sub
sbb
not
(bad)
addr16
adc
xor
xlat
rcr
outs
les
mov
mov
pop
add
xor
pop
ret
pop
mov
lods
std
sahf
xor
mov
out
fld
(bad)
and
xor
daa
inc
cmc
mov
fcom
lods
push
ror
push
(bad)
ins
jmp
mov
inc
(bad)
sub
ja
jp
xchg
adc
pop
ret
jl
jbe
xchg
sbb
and
data16
cld
imul
mov
or
nop
sbb
mov
retf
and
idiv
or
call
dec
aam
lock
jnp
pushf
sbb
dec
enter
std
jl
arpl
or
pop
fcom
bound
push
mov
push
(bad)
inc
sti
jae
jnp
cld
add
fmul
in
call
mov
mov
rcr
dec
loop
jmp
sub
xor
jg
push
sahf
jl
or
push
ret
push
shl
or
and
inc
enter
leave
jge
mov
mov
pop
ret
sbb
imul
xor
xlat
jns
outs
sti
cwde
jl
ins
mov
cmp
dec
cld
jl
ja
xchg
adc
push
std
imul
in
neg
sbb
ins
mov
xchg
cmp
pop
fistp
js
dec
int
cmp
sub
jae
sub
pop
in
adc
fsub
push
rcr
and
or
xchg
jl
das
xchg
adc
les
gs
adc
add
xor
jno
push
mov
or
mov
sti
das
retf
dec
iret
dec
mov
jb
outs
adc
dec
test
dec
int3
jg
push
jb
dec
call
mov
inc
xchg
push
cmps
jb
push
jnp
sub
dec
fstp
jne
sub
scas
ds
sbb
dec
int
cmc
pop
in
sbb
cmp
sbb
pop
out
push
jmp
mov
cmps
and
and
jle
xchg
push
in
or
sub
jp
js
mov
xor
lds
jae
or
cld
pop
in
pop
loope
mov
imul
mov
retf
sub
sbb
dec
fwait
jnp
outs
or
or
xor
and
sbb
push
int
mov
retf
ins
mov
push
les
cmp
push
ds
dec
leave
cmp
(bad)
in
fild
add
fcomp
dec
cmc
jae
imul
jge
pop
call
cwde
sbb
cmp
sub
jb
or
fwait
push
mov
test
stos
pop
iret
inc
leave
outs
jmp
test
mov
xor
in
fmul
jg
outs
in
ins
fsub
jl
sub
fwait
pop
leave
or
jne
bound
mov
in
cmp
out
lahf
push
mov
mov
push
mov
jns
jl
xchg
inc
in
aaa
test
mov
outs
mov
loop
or
add
adc
sub
jns
jle
cld
dec
cwde
jnp
jge
cmp
add
dec
xchg
arpl
cld
imul
fmul
jb
or
push
ror
mov
pop
fwait
dec
cli
gs
cdq
dec
pushf
sub
push
cli
sti
aas
call
cmp
push
out
push
icebp
pusha
push
cld
add
pop
mov
jns
fs
adc
mov
pop
fwait
xor
aas
pop
mov
gs
or
call
mov
(bad)
loopne
into
dec
ror
movs
pop
mov
(bad)
jle
sub
push
fisttp
mov
jmp
call
dec
neg
fidiv
test
mov
jo
fs
xchg
adc
mov
sub
jge
addr16
xchg
imul
(bad)
lods
je
gs
sti
sbb
retf
ds
stos
inc
div
jne
popf
push
(bad)
pop
scas
cs
dec
rcr
sbb
push
sti
jl
ins
fstp
scas
sub
cmp
sub
xor
in
pop
scas
cmp
inc
fstp
(bad)
ja
adc
cli
push
in
adc
mov
lea
ja
jle
push
jmp
add
pop
(bad)
jno
jle
cmp
sub
outs
stos
jg
stos
add
sub
inc
fistp
clc
sub
fs
dec
leave
pop
ret
cmp
or
mov
sahf
aas
mov
pop
ficomp
clc
sub
sub
cmp
dec
mov
jb
cmp
xchg
add
mov
jb
push
mov
mov
or
cs
gs
add
pop
pushf
pop
mov
sub
mov
cdq
pop
jmp
push
int
call
nop
push
mov
mov
dec
leave
imul
sub
and
push
retf
jno
or
and
push
adc
mov
inc
fwait
jge
dec
adc
push
lahf
aaa
mov
lods
dec
stc
inc
lods
push
jl
pop
mov
movs
push
fcom
inc
retf
jne
gs
dec
cwde
pop
mov
sbb
or
cmp
sub
bswap
sub
pushf
or
ins
lods
gs
sahf
adc
mov
dec
retf
jne
push
xor
cmp
jb
pop
in
sbb
pop
ficom
pop
cld
jns
cmp
mov
sahf
imul
mov
ins
cmc
or
fisttp
(bad)
jmp
int3
pop
fstp
pop
mov
pop
mov
js
outs
out
jnp
lahf
jl
or
mov
jge
or
mov
sub
ja
or
sti
cmp
xchg
xlat
dec
in
fwait
jae
dec
adc
adc
pop
rcr
dec
ret
dec
out
sbb
ins
ficom
stos
add
outs
into
arpl
paddsb
sub
push
in
ror
cmp
(bad)
dec
repnz
pop
aas
cdq
pop
sahf
add
daa
mov
jp
or
sbb
fisttp
jge
js
xchg
push
sub
sub
pop
fmul
sti
or
or
jae
cmp
sbb
sub
pop
retf
mov
and
push
mov
dec
enter
push
mov
mov
aam
(bad)
jne
js
xchg
or
int3
push
into
dec
call
mov
xor
or
pop
stc
or
mov
dec
int3
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
dec
mov
sbb
jmp
cmp
or
fistp
dec
mov
sbb
or
cld
imul
enter
lods
add
jp
add
jl
lea
scas
jno
daa
cmps
pop
(bad)
out
mov
loopne
(bad)
sbb
pushf
mov
sub
xor
ins
pop
jb
pop
xchg
dec
rcr
mov
pop
fdivr
sub
add
pop
stos
pushf
mov
cwde
jne
jg
push
out
pop
(bad)
sbb
call
jne
xor
shl
lock
jl
sahf
sub
cmp
fisubr
js
jnp
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
shl
jge
pop
imul
mov
xchg
fs
jae
fistp
mov
dec
lock
imul
mov
xor
pushf
or
sub
xchg
mov
and
ja
dec
jg
mov
cmp
in
aam
in
cdq
rcl
fsubr
adc
dec
hlt
jne
add
sub
sbb
mov
adc
hlt
sub
mov
icebp
jmp
push
dec
leave
push
ja
xor
mov
pushf
imul
ficomp
or
in
add
pop
sub
xchg
mov
sbb
dec
imul
push
mov
xchg
dec
adc
arpl
mov
cmps
lods
cmp
les
outs
in
pop
fisubr
pop
retf
mov
aam
arpl
dec
adc
test
imul
and
push
sbb
xchg
and
stos
sub
sbb
or
cld
imul
fdiv
sbb
adc
fistp
xlat
lods
mov
sbb
sbb
cld
imul
cld
cmp
pop
mov
or
pop
fmulp
shl
pop
fwait
sbb
push
fstp
push
lods
sbb
jmp
rcr
cmps
dec
mov
mov
or
inc
imul
mov
or
pop
retf
sub
sbb
dec
xchg
dec
out
dec
jnp
jb
cs
mov
sbb
sbb
cs
sub
jnp
imul
lods
dec
int3
cmp
aam
das
scas
cmp
pop
retf
dec
ficomp
mov
sti
hlt
sbb
cmp
add
ins
fist
sub
sbb
or
inc
in
pop
xlat
leave
mov
sbb
jmp
dec
mov
js
ss
imul
mov
loop
out
dec
call
(bad)
or
pop
fistp
aad
retf
jns
and
imul
pushf
or
fst
aam
enter
jmp
fmul
mov
out
pop
mov
aad
add
fwait
cmp
es
jge
or
in
in
pop
inc
dec
loop
mov
fs
jl
ins
mov
mov
mov
jbe
push
in
pop
jmp
(bad)
daa
mov
(bad)
sti
jl
ins
fistp
and
add
outs
out
or
std
gs
fmul
mov
cmc
gs
xchg
push
jmp
dec
pop
scas
dec
inc
cmp
sub
cmp
pusha
jnp
fild
inc
dec
push
mov
outs
mov
jbe
add
ins
stos
and
sub
imul
mov
dec
loope
clc
ins
mov
jl
push
hlt
pop
retf
push
mov
sub
cmp
xchg
mov
lahf
or
fidiv
cmc
gs
cmps
add
daa
push
xlat
xchg
das
jo
jb
adc
mov
mov
mov
out
dec
in
mov
or
jns
add
cmps
pop
and
(bad)
std
popf
popa
dec
out
xchg
ficomp
aas
or
jl
jmp
sub
cmp
dec
fstp
push
or
cld
imul
fmul
cmp
lods
in
sub
jl
ins
fwait
sbb
shl
push
call
mov
mov
add
scas
fcomp
dec
clc
jg
outs
cwde
or
pushf
sar
test
pop
fisttp
js
push
out
inc
mov
ret
sub
sahf
sbb
pop
add
jmp
dec
mov
movs
rol
cs
adc
mov
das
movs
and
adc
and
and
loope
xchg
push
or
push
rol
adc
pop
mov
mov
xor
adc
and
adc
add
pop
mov
mov
and
or
adc
leave
add
or
cmp
jmp
push
cdq
add
sub
gs
mov
js
cmp
xchg
and
std
jp
or
cmp
adc
sbb
and
fild
add
add
add
test
adc
mov
xchg
add
add
shl
mov
add
mov
pushf
push
in
xor
test
xchg
sbb
pop
retf
add
lea
push
pop
fisttp
mov
mov
call
dec
mov
jle
outs
call
add
or
jnp
sbb
push
ret
inc
xor
test
arpl
mov
mov
add
fstp
or
pop
fistp
dec
retf
pop
fld
sti
or
loopne
fs
mov
fisubr
jge
or
pushf
or
pop
retf
dec
mov
sbb
or
cld
cmp
mov
mov
test
je
jnp
dec
int3
pop
fsubr
sahf
cmp
jmp
jnp
pop
test
mov
sub
jb
psrad
popf
and
aas
out
loop
cmc
jb
add
xor
jo
adc
dec
into
xor
and
sbb
jno
fstp
dec
mov
mov
popf
sbb
and
aam
(bad)
jno
popa
out
xchg
add
rol
inc
div
pusha
xchg
dec
sub
jl
ins
pop
pop
retf
mov
mov
mov
hlt
jae
arpl
adc
jae
xor
je
fs
int3
cmp
sub
pushf
jmp
sti
jl
dec
sbb
cmp
push
jp
dec
int
fisubr
scas
cmp
jmp
dec
fcomp
cs
push
imul
pop
fild
scas
cmp
jmp
dec
fcomp
das
mov
xor
js
dec
iret
pop
fild
scas
cmp
test
dec
fcom
mov
ret
dec
rcl
jb
inc
les
and
dec
les
inc
rcl
and
sahf
sbb
sahf
cmp
inc
lds
and
sbb
mov
mov
ret
push
mov
jo
adc
nop
xor
inc
lds
and
in
and
xchg
or
jb
inc
aad
movs
and
jp
mov
inc
ret
and
in
cmc
adc
lds
push
movs
and
addr16
jne
inc
ret
sbb
adc
dec
stc
jle
outs
cdq
push
mov
arpl
into
jns
imul
fs
mov
stc
jle
outs
cwde
pop
mov
add
dec
iret
js
push
mov
repz
dec
(bad)
jns
fs
adc
or
arpl
jae
int
les
arpl
adc
mov
repz
fs
adc
add
xor
and
aam
les
arpl
adc
and
bnd
xchg
push
add
push
(bad)
inc
(bad)
jno
pusha
out
xchg
add
rcl
inc
lock
arpl
xor
shl
xchg
pop
nop
pop
xor
daa
mov
div
xor
adc
and
inc
shl
mov
sbb
or
cld
imul
fmul
cmp
lods
in
stos
add
fs
rol
mov
mov
jmp
xchg
adc
xor
jne
fs
rol
mov
sar
add
hlt
jae
arpl
push
les
xor
je
jg
jbe
pop
fsubr
lods
cmp
ins
sti
jl
dec
fistp
movs
inc
mov
jp
dec
int
fsubr
lods
cmp
jmp
pop
stos
sub
cmp
push
jp
dec
int
(bad)
lods
cmp
jmp
pop
test
push
cdq
push
imul
pop
fisubr
scas
cmp
jmp
dec
fstp
cs
pop
imul
pop
fild
scas
cmp
call
dec
fcomp
das
mov
pop
push
iret
pop
fild
scas
cmp
jmp
dec
fcomp
das
mov
push
push
iret
pop
fild
scas
cmp
stos
sub
fcomp
das
mov
pop
imul
sbb
or
clc
jg
dec
ficomp
sub
pop
das
test
mov
cs
adc
add
bnd
or
cmc
inc
les
and
imul
xchg
push
mov
add
adc
cmp
je
jns
adc
ret
inc
rcl
mov
cli
jle
adc
jmp
and
adc
mov
and
dec
inc
(bad)
in
cmc
inc
lds
and
imul
mov
push
xchg
push
popa
out
shl
mov
aam
movs
inc
ret
adc
mov
movs
and
pop
pusha
iret
add
xor
push
shl
adc
and
dec
fistp
xchg
adc
jne
inc
ret
and
jmp
test
push
movs
and
adc
jne
sub
cmp
cmc
or
popa
div
inc
aad
cmps
and
jnp
adc
and
adc
arpl
push
movs
and
push
mov
jecxz
repz
imul
fs
xchg
in
xchg
adc
jle
outs
cdq
sbb
test
shl
and
sbb
push
rol
sub
cli
jle
outs
cdq
sbb
loop
pop
mov
imul
cmp
leave
push
movs
and
push
out
ds
into
js
imul
fs
mov
mov
call
push
mov
fisttp
and
ret
inc
mov
leave
dec
clc
jg
outs
cwde
pop
mov
in
cmc
jae
adc
jmp
sbb
and
and
mov
fild
jae
ins
in
xchg
or
fs
repz
nop
pop
cld
je
imul
lods
and
aam
(bad)
outs
call
xor
push
ret
dec
repz
fs
adc
or
dec
les
in
xchg
add
push
ret
inc
repz
fs
adc
add
xor
and
aam
les
(bad)
in
xchg
add
rcl
inc
bnd
gs
adc
mov
(bad)
jno
popa
out
xchg
add
rcl
inc
icebp
jbe
xchg
push
add
aaa
mov
(bad)
jno
pusha
out
xchg
add
rcl
inc
lock
addr16
pop
add
aaa
mov
xlat
jne
pusha
loopne
nop
pop
xor
daa
mov
div
pusha
xchg
adc
and
inc
shl
loopne
nop
pop
xor
and
test
adc
and
inc
shl
loopne
nop
pop
shl
daa
mov
div
popa
xchg
adc
and
push
xchg
and
xchg
pop
xor
mov
div
popa
mov
push
sbb
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
xchg
push
std
dec
les
xor
je
fs
rol
mov
mov
test
call
xor
je
fs
rol
mov
mov
test
(bad)
(bad)
aam
les
xor
je
fs
rol
mov
mov
test
out
retf
dec
fistp
mov
sbb
in
jnp
dec
int3
pop
fsubr
lods
cmp
and
jl
dec
fistp
mov
sbb
in
jnp
dec
int3
pop
fsubr
lods
cmp
push
sti
jl
dec
fistp
mov
sbb
in
jnp
dec
int3
pop
fsubr
lods
cmp
push
ficomp
sub
call
int
(bad)
lods
cmp
ret
jge
dec
ficomp
sub
call
int
(bad)
lods
cmp
fidiv
jle
dec
fstp
cs
push
imul
pop
fisubr
scas
cmp
out
ins
stc
jle
dec
fstp
cs
push
imul
pop
fisubr
scas
cmp
jmp
dec
fstp
cs
push
imul
pop
fisubr
scas
cmp
jmp
dec
fcomp
das
mov
pop
push
iret
pop
fild
scas
cmp
call
dec
fcomp
das
mov
pop
push
iret
pop
fild
scas
cmp
call
dec
fcomp
das
mov
sbb
dec
iret
pop
fild
scas
cmp
call
dec
fcomp
das
mov
sub
dec
repnz
into
pop
fild
scas
cmp
call
dec
fcomp
das
mov
pop
sub
pop
fild
scas
cmp
call
dec
fcomp
das
mov
pop
sub
push
fisubr
scas
cmp
call
dec
fcomp
das
mov
pop
sub
add
sub
sbb
int3
dec
fcomp
sub
pop
sub
mov
jmp
stos
cmp
or
sbb
in
gs
inc
rcl
and
rcl
cmps
xor
movs
xor
loop
bnd
inc
rcl
and
aad
sbb
sub
add
bnd
inc
rcl
and
(bad)
ds
ficomp
cmp
xor
loop
bnd
inc
rcl
and
jmp
fadd
movs
xor
loop
bnd
inc
rcl
and
out
es
in
sti
cmp
movs
xor
loop
bnd
inc
rcl
and
in
es
in
(bad)
cmp
xor
loop
bnd
inc
rcl
and
loope
(bad)
in
sti
cmp
and
test
xchg
loop
bnd
inc
rcl
and
loopne
(bad)
in
sti
xor
mov
test
xchg
loop
icebp
jbe
inc
rcl
es
es
in
icebp
xor
cmp
add
cmc
jb
inc
aad
movs
and
sub
js
sub
mov
adc
lds
push
movs
and
pop
sub
mov
add
(bad)
cmc
jb
inc
aad
movs
and
js
mov
lahf
sub
xor
xchg
in
cmc
jb
inc
aad
movs
and
jns
mov
fwait
sub
xor
mov
adc
jb
inc
aad
movs
and
jnp
mov
sub
shl
adc
lds
push
movs
and
jnp
test
xchg
and
xor
xchg
in
cmc
jb
inc
aad
movs
and
je
mov
shl
adc
les
push
movs
and
dec
inc
mov
shl
xor
add
adc
in
leave
dec
stc
jle
outs
cdq
push
mov
in
hlt
daa
gs
xchg
and
cmp
sbb
sub
stc
jle
outs
cdq
push
mov
in
hlt
cmp
fisttp
and
xor
mov
mov
leave
dec
stc
jle
outs
cdq
push
mov
in
hlt
cmp
and
xor
sbb
sub
stc
jle
outs
cdq
push
mov
in
hlt
cmp
and
xor
sbb
sub
stc
jle
outs
cdq
push
mov
in
hlt
and
dec
nop
and
xor
sbb
sub
clc
jg
outs
cwde
pop
mov
in
hlt
and
sub
and
xor
sbb
sub
clc
jg
outs
cwde
pop
mov
in
hlt
push
das
stos
adc
sbb
sub
clc
jg
outs
cwde
pop
mov
in
hlt
jae
adc
mov
or
fcomp
dec
clc
jg
outs
cwde
pop
mov
in
hlt
jae
adc
mov
or
fcomp
dec
cld
jnp
imul
jae
adc
mov
or
cmp
sub
fcom
repz
fs
adc
pop
in
hlt
jae
adc
lods
(bad)
jmp
xchg
add
push
ret
inc
repz
fs
adc
pop
in
hlt
jae
adc
out
ins
in
xchg
add
push
ret
inc
repz
fs
adc
adc
inc
ret
dec
cli
arpl
adc
movs
rcl
repz
fs
adc
or
pop
fisttp
jl
arpl
adc
movs
rcl
repz
fs
adc
add
xor
and
aam
les
arpl
adc
movs
rcl
inc
bnd
gs
adc
mov
lds
(bad)
in
xchg
add
rcl
inc
bnd
gs
adc
mov
lds
(bad)
in
xchg
add
rcl
inc
icebp
jbe
xchg
push
add
push
(bad)
inc
(bad)
jno
popa
out
xchg
add
rcl
inc
icebp
jbe
xchg
push
add
push
(bad)
inc
(bad)
jno
popa
out
xchg
add
rcr
inc
lock
addr16
pop
add
aaa
mov
(bad)
jo
pusha
out
xchg
add
rcl
inc
lock
addr16
pop
add
aaa
mov
(bad)
jo
pusha
out
xchg
add
les
inc
div
pusha
xchg
adc
and
inc
shl
loopne
nop
pop
xor
daa
cmps
scas
xor
out
xchg
adc
and
inc
shl
loopne
nop
pop
xor
daa
cmps
popf
adc
inc
div
pusha
xchg
adc
and
inc
shl
loopne
nop
pop
xor
daa
mov
div
pusha
xchg
adc
and
inc
shl
loopne
nop
pop
xor
and
test
mov
div
popa
xchg
adc
and
inc
shl
loope
xchg
push
xor
add
popa
xchg
adc
and
inc
shl
loope
xchg
push
xor
add
xchg
adc
and
inc
shl
loope
xchg
push
sub
repz
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
cld
imul
fmul
cmp
mov
jl
ins
fistp
mov
sbb
or
std
push
cmp
inc
fild
repnz
clc
sbb
push
sti
xor
lds
(bad)
je
outs
adc
or
pop
ficomp
jne
push
push
mov
pop
fld
and
js
cdq
sbb
movs
push
xchg
retf
xor
inc
mov
dec
clc
sbb
cwde
sbb
imul
fs
push
stos
outs
mov
inc
fwait
aas
test
or
pop
movs
jg
outs
push
test
or
call
and
pop
fcmovnb
xchg
push
sub
inc
fimul
mov
jbe
sbb
cmp
mov
cmp
jge
mov
out
daa
mov
cmp
jecxz
enter
sbb
jb
sub
jbe
jmp
loope
sbb
int
adc
cld
and
or
cmp
call
dec
fld
jl
int
or
adc
mov
pop
vprotq
in
fld
dec
(bad)
imul
cld
add
icebp
dec
pop
fsin
and
mov
out
in
(bad)
enter
ficomp
pushf
imul
mov
fadd
push
loope
movs
pop
pushf
sti
jl
iret
jns
dec
lods
cmp
mov
movs
outs
or
jp
dec
int3
test
into
mov
add
loope
inc
cmp
imul
cld
mov
sub
cmp
mov
dec
cmp
mov
aam
jecxz
pushf
or
or
or
push
jns
or
xchg
pop
cmp
xor
mov
test
test
imul
outs
jmp
mov
movs
cmp
pop
loop
xchg
outs
std
cs
cdq
bswap
ds
repz
outs
jmp
xchg
cmp
or
jne
cs
inc
lea
(bad)
and
js
outs
mov
add
mov
or
cmp
cs
mov
test
enter
cmc
sub
jl
sub
push
in
jbe
add
mov
cmp
push
loop
adc
add
push
into
pop
(bad)
outs
fdivr
xchg
sbb
sbb
outs
scas
fist
sbb
jl
das
fwait
inc
(bad)
pop
std
jo
js
mov
xor
pushf
pop
shl
or
jno
or
ds
cs
icebp
add
jns
add
jmp
fild
mov
movs
sub
jnp
imul
lds
mov
add
jmp
fild
mov
movs
sub
jnp
imul
lds
mov
add
jmp
fild
mov
movs
sub
jnp
imul
lds
mov
add
jmp
fild
mov
movs
sub
jnp
imul
lds
mov
add
jmp
fild
mov
movs
sub
jnp
imul
lds
mov
add
jmp
fild
mov
movs
sub
jnp
imul
lds
mov
add
jmp
fild
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
jp
push
pop
mov
dec
mov
call
fstp
retf
dec
mov
jg
(bad)
das
lahf
push
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
into
pop
mov
sub
sbb
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
outs
pop
out
cmp
sub
mov
mov
and
sbb
int3
in
pop
sbb
mov
pushf
(bad)
stos
sbb
cli
dec
lods
mov
(bad)
pop
mov
outs
ror
mov
pop
pop
jle
mov
or
mov
mov
pop
cwde
rol
sahf
scas
pop
aad
ja
ss
ret
test
(bad)
fucomi
retf
push
mov
sar
pop
xchg
stos
pop
out
dec
push
cwde
into
outs
cli
fstp
dec
adc
movs
mov
xor
nop
lahf
jg
pop
cmp
aad
jle
jnp
nop
xchg
or
lods
pop
stos
in
and
pop
or
push
adc
fild
iret
lds
(bad)
cmpps
(bad)
retf
jnp
mov
aaa
out
xchg
xchg
add
jp
cmp
retf
sub
mov
xor
xor
vmaxps
call
scas
loop
pop
mov
sbb
push
pop
push
pop
mov
scas
movs
je
xchg
cmps
mov
es
push
ds
loope
sbb
cmp
cmc
pop
mov
aas
pushf
test
pop
push
in
dec
xchg
dec
adc
cdq
popa
adc
cmp
or
and
jmp
pop
imul
pop
jl
xchg
cmp
xchg
out
cmp
mov
fiadd
test
inc
mov
xor
sub
sbb
dec
addr16
fdiv
dec
jns
ret
lahf
ror
pop
xlat
dec
or
xchg
out
dec
call
dec
xchg
sbb
retf
in
pop
cwde
mov
push
scas
cmp
and
stc
ds
sbb
or
ja
in
cmp
dec
jmp
ins
and
(bad)
cmp
mov
call
psubw
sub
mov
pop
mov
push
jbe
sbb
inc
dec
pop
cli
in
inc
(bad)
sub
mov
cmp
mov
mov
test
sub
cmps
or
push
pop
sbb
or
call
neg
(bad)
iret
jns
inc
out
fstp
push
psubd
retf
mov
outs
sahf
jg
retf
test
daa
cmp
outs
xchg
cmp
push
cli
pop
loop
cmp
dec
jns
rep
call
ins
pop
cli
dec
mov
retf
pop
repnz
jb
fistp
jmp
(bad)
icebp
dec
xor
gs
jmp
pop
cs
addr16
and
scas
mov
mov
sahf
and
push
dec
cli
mov
ins
in
out
in
fninit
cmp
es
inc
movaps
jl
dec
jp
push
or
fdiv
out
in
or
mov
mov
int3
in
pop
xor
gs
cmc
pop
cli
pop
sub
fistp
cs
mov
mov
xchg
jbe
inc
rcl
dec
xor
push
in
or
sahf
sub
les
sbb
jb
loopne
test
push
cdq
inc
dec
iret
pop
(bad)
dec
or
scas
(bad)
mov
inc
and
fidivr
xchg
scas
push
(bad)
push
add
nop
pop
adc
mov
pop
mov
fstp
xlat
push
push
sbb
mov
sub
dec
dec
add
add
call
scas
movs
cmp
and
pop
jb
repz
or
cli
pop
popa
and
addr16
adc
out
cdq
inc
dec
iret
cli
fistp
stos
jb
leave
shl
in
daa
mov
jg
(bad)
stc
fiadd
scas
cdq
popa
adc
cmp
sub
pop
xchg
or
and
aas
sbb
rcr
mov
jg
stos
jp
das
(bad)
pop
jl
xchg
cmp
out
cmp
mov
fimul
retf
aaa
stos
lods
inc
mov
xor
sub
sbb
dec
addr16
fmul
jbe
aas
cmp
sbb
outs
pop
sahf
ror
pop
xlat
dec
or
xchg
out
push
sbb
push
sub
cmp
and
mov
cli
scas
cmp
and
stc
cmp
or
ja
in
cmp
dec
push
pop
sbb
bnd
ins
and
(bad)
cmp
mov
dec
cs
xchg
dec
mov
pop
mov
push
into
mov
jmp
xchg
cli
in
inc
(bad)
cs
mov
cmp
mov
mov
test
sub
cmps
or
(bad)
pop
sbb
or
call
neg
adc
jns
inc
out
fstp
push
psubd
les
push
stos
outs
(bad)
jg
retf
test
mov
(bad)
push
push
ins
pop
scas
in
fisubr
cmps
cmp
xor
mov
ins
pop
jmp
test
(bad)
mov
test
mov
(bad)
cmp
retf
cwde
popa
pop
mov
jmp
pop
sub
pop
rol
fisubr
mov
jnp
xchg
lds
mov
aad
sbb
pusha
sbb
add
out
or
icebp
push
xor
jle
(bad)
icebp
dec
xor
gs
jmp
punpckldq
mov
(bad)
mov
xchg
adc
sub
dec
ja
cmps
mov
pop
jmp
xor
stos
das
pop
or
dec
sti
pop
or
xchg
dec
pop
and
mov
dec
mov
outs
into
call
mov
mov
call
jmp
pushf
fidiv
xchg
(bad)
cmc
push
or
fisubr
mov
inc
test
mov
jnp
push
mov
shl
xchg
sahf
mov
aam
fwait
jmp
pop
sub
icebp
push
mov
sbb
mov
push
fldcw
or
pop
outs
xchg
cmp
push
cli
pop
scas
das
cmp
dec
jns
rep
call
ins
test
dec
iret
out
fistp
stos
jb
leave
shl
in
daa
mov
jg
(bad)
stc
fiadd
scas
cdq
pusha
adc
cmp
les
or
and
aas
sbb
rcr
mov
jg
jecxz
in
(bad)
pop
jl
xchg
cmp
push
out
cmp
mov
fisubr
test
aaa
stos
lods
jp
mov
xor
sub
sti
fmul
jbe
aas
ds
jns
ret
sahf
ror
pop
xlat
dec
or
xchg
out
sub
sbb
push
sub
cmp
push
mov
mov
jb
cmp
and
stc
cmp
out
sbb
or
ja
in
cmp
dec
out
pop
sbb
bnd
ins
and
(bad)
cmp
mov
inc
psubw
cs
xchg
dec
mov
pop
mov
push
fidivr
jmp
daa
cli
in
inc
(bad)
das
push
mov
cmp
mov
mov
sub
cmps
or
adc
sbb
or
call
neg
mov
out
fst
es
push
mov
dec
jmp
dec
(bad)
(bad)
aas
lahf
hlt
scas
xchg
cli
dec
ins
fcmove
in
stos
pop
dec
inc
jecxz
jl
icebp
dec
mov
sub
(bad)
pop
imul
mov
(bad)
sub
pop
sti
inc
out
pop
sti
movs
push
aas
jo
mov
outs
(bad)
call
pop
iret
jne
outs
out
fdivr
scas
das
sbb
ss
adc
fiadd
loope
push
jmp
rcl
out
cmp
cmp
shr
lahf
daa
scas
push
xor
cdq
cld
fs
in
retf
jl
hlt
(bad)
cs
mov
mov
pop
mov
cmp
out
sti
sti
or
call
jg
retf
xchg
mov
mov
into
inc
out
leave
cli
jg
push
push
stc
mov
mov
repnz
pop
cmp
or
mov
(bad)
mov
pop
jb
fist
dec
(bad)
jmp
call
scas
pop
cmp
retf
mov
in
mov
cli
xchg
mov
outs
cs
jmp
or
(bad)
mov
sub
inc
mov
mov
lods
or
retf
scas
ret
daa
stos
imul
lods
jnp
mov
cmps
sub
dec
jno
jmp
mov
mov
jne
test
cmps
dec
sbb
push
cs
outs
pop
stos
mov
sti
mov
sub
js
xchg
jmp
aam
lods
jb
dec
jp
sahf
scas
sbb
jns
fwait
out
sub
push
pop
pusha
pop
pushf
mov
push
mov
jg
rcl
das
neg
jo
in
fwait
rcr
jmp
setp
push
out
push
test
call
xor
mov
jnp
ret
test
fistp
dec
(bad)
mov
pop
and
mov
retf
imul
mov
gs
mov
push
rol
aad
in
push
setle
stos
fsubr
mov
add
test
call
lock
jmp
pop
stos
cmp
jg
retf
jp
push
pushf
sti
mov
lds
outs
sbb
jno
ret
jle
fidiv
(bad)
icebp
cdq
adc
inc
icebp
dec
mov
fwait
je
imul
mov
lods
pushf
mov
dec
jmp
bnd
mov
xor
in
push
add
(bad)
dec
jmp
fcmovbe
or
inc
fistp
push
mov
and
dec
iret
mov
inc
lods
loopne
shl
dec
out
nop
int
mov
arpl
scas
xlat
mov
ret
cld
imul
xchg
mov
or
xchg
mov
jno
lods
inc
pop
xor
cdq
cld
fsub
add
sbb
jns
pop
ins
sub
iret
(bad)
aas
pop
xchg
loop
aaa
dec
xor
cld
or
(bad)
(bad)
jmp
xlat
out
sbb
shl
sahf
xor
push
ds
push
retf
(bad)
and
out
retf
test
lods
xlat
and
pop
pushf
das
fwait
jae
xchg
mov
ret
stc
xor
(bad)
sar
retf
xchg
mov
arpl
mov
in
sahf
rdpmc
fsubrp
mov
mov
push
loop
cmp
sahf
jle
push
fidiv
cli
pop
push
jno
sbb
pop
rol
call
scas
pushf
jg
cdq
cld
fild
fs
dec
lock
jmp
or
adc
mov
lds
push
push
retf
bound
fidivr
inc
ins
scas
sbb
sbb
fild
xchg
push
shl
fimul
mov
xchg
(bad)
(bad)
xchg
jmp
dec
aaa
mov
push
out
test
pusha
cmp
pop
mov
cmp
jmp
ficom
inc
mov
push
sub
repnz
mov
popa
cmp
cmp
fbld
push
inc
or
je
sbb
or
and
mov
jmp
das
iret
jg
sub
xchg
pop
push
jmp
cmp
jg
mov
movs
mov
jne
pop
std
or
loopne
pop
fidivr
xchg
cmps
push
cmp
repnz
jo
mov
call
xor
xor
cmps
adc
adc
mov
and
lds
int3
add
jp
stos
imul
(bad)
aad
bnd
lock
dec
mov
fidiv
and
adc
retf
aaa
lahf
loope
pop
out
dec
ret
mov
bts
fisubr
mov
pop
push
adc
retf
adc
mov
push
sub
(bad)
dec
mov
mov
sahf
inc
rol
add
jmp
inc
adc
(bad)
mov
add
xor
adc
shr
call
out
push
gs
je
test
push
shl
outs
test
add
and
sbb
stos
das
mov
(bad)
imul
mov
lds
pop
add
pop
sti
test
sbb
pop
out
in
jg
or
cmps
push
pop
imul
pop
jl
mov
jecxz
js
jp
inc
idiv
xchg
mov
fist
cmps
inc
icebp
mov
retf
mov
clc
and
or
sbb
inc
sahf
test
jg
dec
xor
mov
sbb
cmc
push
ja
mov
adc
lahf
call
scas
pushf
imul
sbb
out
sub
int3
(bad)
pop
jmp
mov
(bad)
push
popf
mov
sub
(bad)
sbb
mov
jle
add
mov
iret
retf
and
test
leave
cmp
aas
retf
push
push
bound
jg
dec
ds
push
ror
retf
fsubr
fidivr
scas
jg
sti
inc
sbb
mov
bound
aas
neg
call
push
shl
call
mov
jmp
mov
outs
cwde
lahf
test
mov
mov
ret
test
sti
cmp
sti
push
xchg
mov
pop
push
sahf
neg
and
stos
aad
stos
out
dec
(bad)
pop
(bad)
push
ss
outs
(bad)
mov
bound
inc
adc
pop
dec
lock
mov
outs
gs
dec
(bad)
daa
imul
jg
ret
mov
mov
dec
aaa
mov
mov
daa
lds
mov
(bad)
fbstp
mov
sbb
sahf
pop
or
add
(bad)
ficom
dec
(bad)
jle
stos
out
dec
or
fdivr
and
stos
stos
and
into
dec
neg
fnstenv
mov
cmp
je
paddw
adc
or
or
and
sbb
retf
pop
mov
stos
retf
pop
fidivr
cli
retf
call
and
xor
in
push
(bad)
mov
cli
and
xchg
iret
push
or
stos
aas
fwait
das
pop
pop
test
jg
mov
sub
ficom
pop
pop
cli
push
jmp
or
arpl
jg
ja
mov
add
ror
mov
sub
push
sub
outs
fild
jnp
sahf
loop
scas
mov
dec
stos
repnz
or
push
pop
cmps
sbb
mov
test
jnp
das
scas
cmps
pop
cmps
add
add
ds
fisubr
push
scas
mov
(bad)
jmp
jnp
jg
iret
push
jp
xchg
add
movs
pop
aas
int
inc
lahf
inc
in
fidiv
imul
ss
call
dec
nop
pop
push
das
sbb
cdq
clc
aaa
mov
nop
repnz
arpl
jno
mov
jp
in
int3
movsx
loop
mov
xchg
gs
xchg
jp
loope
pop
retf
push
and
or
leave
js
aas
inc
or
lods
xor
lahf
loope
mov
iret
jns
jns
sbb
sbb
mov
add
fwait
mov
lods
inc
not
aaa
div
jmp
jmp
daa
ins
sub
outs
add
daa
shl
retf
cwde
push
rcr
xor
stc
pop
push
ja
outs
(bad)
call
loop
retf
setbe
add
in
addr16
aas
cmp
fidivr
stos
outs
xchg
mov
shl
sahf
imul
xchg
(bad)
loop
rcr
jl
mov
cmc
xor
inc
aas
cwde
jae
fcom
arpl
fsubrp
push
or
addr16
inc
dec
stos
pop
jmp
aam
sub
jae
(bad)
sub
xchg
and
ret
xor
sub
xchg
stos
push
push
add
push
pop
loop
das
fwait
aam
sar
cmp
aad
pop
das
dec
lock
jnp
iret
mov
jg
add
enter
stos
push
inc
cmp
or
xchg
sti
rcr
mov
(bad)
imul
dec
scas
stos
or
push
outs
mov
stos
push
mov
test
sbb
sub
sbb
jmp
aad
(bad)
pop
es
adc
sub
xor
(bad)
aas
mov
outs
stos
pop
(bad)
jmp
aaa
inc
mov
out
out
push
cs
loop
out
data16
call
pop
jno
lahf
movs
retf
push
mov
or
(bad)
das
jp
js
xchg
loop
xor
repz
outs
mov
jb
adc
adc
or
mov
xchg
push
xlat
ret
cmp
push
adc
into
cli
imul
jle
and
jno
je
stos
jno
add
repnz
pop
jmp
sub
std
dec
les
and
sbb
push
test
wrmsr
arpl
jmp
or
xor
ficom
mov
pop
add
mov
inc
sahf
ret
fistp
ss
add
push
pop
dec
sahf
scas
outs
mov
xchg
xchg
jcxz
das
mov
ins
ins
outs
mov
lahf
daa
cmps
xlat
inc
or
sbb
push
sub
or
jecxz
sar
mov
sbb
lahf
mov
cmp
addr16
adc
pop
cmps
xchg
dec
shl
scas
out
cmps
cmc
shl
iret
stos
push
cmps
or
jno
inc
fnstcw
shl
xor
mov
add
jns
xchg
popa
movs
fidiv
int3
scas
xor
outs
sbb
aad
add
sub
(bad)
int3
(bad)
sbb
jnp
cdq
scas
xchg
ja
xchg
clc
jmp
shr
sub
outs
mov
jmp
sub
push
adc
cli
call
stos
fcomip
pop
jecxz
lods
mov
xchg
pop
push
rcl
into
cmp
ja
cmp
stos
add
leave
daa
mov
jnp
sbb
rcr
mov
jp
(bad)
rcr
and
setae
mov
in
mov
push
jmp
aam
sbb
xchg
add
loopne
and
lahf
dec
retf
fs
pop
out
push
cmps
dec
test
fistp
das
pushf
cld
retf
dec
jmp
ins
in
jg
add
and
inc
ds
aad
inc
test
popa
rcr
mov
dec
jecxz
stos
in
or
sub
bound
xlat
dec
add
xchg
add
sbb
add
call
sub
js
inc
sub
and
sti
(bad)
call
jnp
push
imul
sbb
xchg
movs
mov
sub
pop
lds
sbb
hlt
push
loop
and
inc
leave
scas
dec
mov
fs
les
ja
(bad)
jle
push
push
fnstenv
or
xlat
sub
lds
loope
test
sub
les
ja
mov
adc
mov
rcr
sbb
inc
out
add
xor
(bad)
mov
mov
icebp
pop
push
es
mov
cmp
enter
in
lods
push
out
into
cmp
mov
ds
mov
xor
ins
cmp
in
jmp
add
stos
in
gs
mov
cdq
inc
pop
mov
jg
inc
movlps
outs
ins
push
xchg
mov
out
inc
outs
ror
stos
mov
cmp
pop
xchg
movs
repz
jmp
fwait
stos
pop
call
cld
sti
inc
pop
iret
cmp
sub
push
pop
or
cli
in
jl
aas
ffreep
stos
dec
out
cmp
test
daa
in
mov
das
push
cmp
pop
lods
inc
xchg
imul
das
fcmovb
mov
outs
pop
mov
dec
xor
into
lahf
sahf
icebp
dec
imul
push
fs
cmc
pop
(bad)
popa
push
std
and
xor
lea
adc
xchg
leave
sahf
mov
dec
push
pop
movs
jg
ins
enter
ins
outs
sbb
cli
ds
jnp
dec
sti
or
test
jbe
(bad)
pop
cmps
cmps
(bad)
retf
dec
mov
jg
add
pop
xlat
adc
inc
sub
mov
xchg
imul
stos
call
push
pop
jg
mov
(bad)
sub
push
lahf
cli
(bad)
iret
popa
add
pop
out
in
jg
fincstp
lahf
add
pop
sbb
call
popa
popa
fidivr
xor
out
jge
sar
sahf
scas
mov
and
cmp
sub
xchg
dec
and
xchg
sar
inc
dec
cmps
jns
sub
jb
sub
retf
vmovdqa
loop
mov
iret
add
jp
scas
out
cld
stos
xchg
leave
pushf
xor
in
jno
loope
pop
out
les
push
inc
scas
das
sar
mov
(bad)
imul
bound
enter
xchg
jl
paddd
pop
test
ret
sbb
xchg
jge
fstp
lods
fcmovnbe
loop
(bad)
(bad)
fistp
stos
push
mov
scas
popa
ficomp
adc
(bad)
into
test
push
pop
jmp
jb
sub
mov
mov
and
nop
hlt
xchg
int3
and
push
inc
push
or
les
outs
xor
dec
fidivr
dec
add
xchg
dec
scas
pop
aad
iret
outs
pop
sub
cli
xlat
mov
xor
jmp
ins
push
inc
outs
int3
cmp
outs
jp
cdq
and
mov
jmp
jecxz
xchg
scas
push
fcmove
add
mov
inc
mov
mov
pop
jne
iret
rcr
inc
out
movs
xor
sbb
retf
aas
es
inc
pop
out
cmp
cmp
jp
push
pop
add
mov
out
push
outs
mov
jle
inc
mov
push
pop
iret
(bad)
(bad)
out
pop
test
dec
ss
jmp
lahf
mov
sahf
jp
push
pop
cli
sbb
out
bnd
inc
shr
cmp
stos
pop
inc
outs
bound
fsubr
(bad)
cmp
das
or
ret
dec
inc
push
jmp
lods
xor
daa
push
clc
scas
jns
cmp
jae
repnz
add
mov
cmp
cmc
loopne
sub
iret
push
cs
repz
jmp
cld
stos
xchg
lahf
sub
mov
sub
sbb
dec
lods
cli
test
dec
push
sbb
outs
jb
mov
jp
push
push
sbb
daa
sbb
fs
mov
pop
add
mov
xchg
xchg
(bad)
aaa
lahf
pop
scas
mov
jmp
mov
mov
aas
xchg
pop
inc
sub
jg
nop
jp
push
pop
push
push
ins
cmp
or
push
(bad)
jp
adc
das
xor
retf
mov
xchg
fmul
scas
jp
mov
into
sbb
mov
xlat
jmp
lock
scas
outs
jae
sub
pop
test
cmp
inc
jbe
aas
and
push
stos
stos
call
scas
adc
mov
repnz
inc
cli
scas
jmp
pop
loop
mov
lahf
or
outs
dec
sbb
adc
das
xor
dec
push
jg
sub
cmp
inc
jp
or
stos
mov
pop
jmp
mov
outs
fdivr
(bad)
xchg
fcmovne
scas
mov
dec
mov
aaa
xchg
in
into
call
add
cmp
retf
scas
ds
dec
out
push
mov
xchg
inc
pop
inc
pushf
retf
das
xchg
aad
sbb
pop
(bad)
outs
(bad)
dec
mov
jg
(bad)
stc
nop
xchg
scas
pushf
mov
ret
(bad)
cmc
repz
push
addr16
mov
add
cld
data16
mov
imul
pop
mov
xor
push
ret
cmps
push
syscall
sub
das
lea
inc
dec
loope
cli
xchg
push
mov
daa
imul
out
adc
pop
and
stc
retf
push
mov
xchg
dec
xchg
jmp
into
stos
sub
adc
ja
cmps
mov
mov
mov
nop
xlat
stos
jne
scas
pusha
lock
adc
out
pop
pop
push
(bad)
adc
jmp
imul
call
inc
shl
xchg
push
jb
movlps
retf
adc
sub
ficom
lahf
(bad)
sbb
pop
fcom
or
push
pop
or
xchg
sahf
xchg
outs
mov
(bad)
mov
mov
mov
or
push
outs
jb
fwait
(bad)
jg
das
push
mov
cmovb
call
mov
dec
ss
mov
(bad)
idiv
jmp
mov
sub
mov
ins
push
push
aas
popf
push
mov
xor
imul
daa
fiadd
jle
xchg
out
mov
mov
pop
pop
push
ss
arpl
push
movs
inc
adc
stos
sti
sbb
adc
xchg
and
sbb
dec
cs
sahf
into
ficomp
inc
push
(bad)
mov
sub
add
stc
xor
bound
add
pop
push
adc
mov
jne
imul
out
fchs
movs
mov
pop
cli
dec
adc
mov
xchg
bswap
rcr
sub
retf
adc
inc
or
stos
nop
fcomip
iret
(bad)
outs
adc
nop
dec
aas
or
aad
pop
out
inc
fild
(bad)
pop
js
test
adc
mov
aaa
shr
cli
pop
add
pop
pop
ret
imul
pop
das
addr16
mov
sub
(bad)
dec
cmc
push
xchg
addr16
fild
loop
xor
jae
fild
and
leave
mov
jmp
ja
(bad)
retf
xchg
movs
dec
dec
stos
add
pusha
jg
pop
mov
mov
sti
imul
jmp
mov
xor
sbb
jp
or
fbld
dec
aas
or
xchg
pop
cmp
jb
xchg
pop
aad
sub
hlt
into
inc
jns
mov
iret
lds
(bad)
pop
mov
push
lahf
jns
das
fidiv
dec
aaa
mov
xlat
add
fisubr
sar
or
sub
mov
cmp
add
outs
iret
sahf
aaa
dec
jle
pop
ffree
inc
pop
sbb
out
repnz
stos
xor
jecxz
mov
xchg
cmc
outs
loop
inc
mov
mov
mov
push
stc
xchg
leave
adc
imul
(bad)
nop
scas
aaa
test
jb
lock
xchg
push
sub
mov
xchg
(bad)
(bad)
mov
push
pop
or
(bad)
out
inc
iret
inc
push
scas
jmp
aas
fwait
les
xchg
dec
(bad)
jp
das
fwait
pop
fimul
jle
sub
fdivr
or
add
mov
add
daa
jle
repnz
push
dec
repnz
mov
lock
(bad)
pop
loopne
bound
jp
jle
rcr
jo
sar
inc
bswap
addr16
mov
pop
addr16
mov
push
not
pop
retf
and
movs
pop
pop
sahf
and
push
mov
scas
jmp
mov
fwait
mov
into
add
mov
in
out
repnz
pop
mov
aas
retf
jle
cmp
shr
mov
mov
fs
ror
dec
add
adc
adc
(bad)
pop
mov
mov
es
out
xlat
nop
(bad)
loope
aaa
dec
out
push
add
popf
loopne
ds
retf
or
repnz
dec
xchg
fist
movs
cld
fwait
push
sub
test
lock
jnp
jmp
aaa
mov
jne
aas
pusha
or
aad
inc
shl
sub
ja
push
das
mov
sbb
mov
ds
cld
cmps
xor
push
inc
mov
mov
jmp
mov
dec
retf
jns
push
fisub
jge
push
sub
xchg
loope
ror
xor
(bad)
lahf
daa
outs
data16
retf
xchg
scas
pushf
jg
or
retf
outs
cmc
rep
pop
sub
sahf
mov
ret
mov
add
iret
push
cmps
mov
aas
adc
dec
fistp
fidivr
(bad)
sbb
outs
bound
pusha
jp
mov
jae
shl
outs
sub
cmp
add
outs
call
pop
out
cmp
aas
adc
(bad)
pop
lds
jbe
fadd
add
and
adc
mov
scas
cmp
cmps
xor
(bad)
in
loop
add
ins
(bad)
dec
call
push
loop
xor
ja
and
xchg
mov
cld
fwait
in
out
pop
test
lahf
out
outs
inc
mov
sbb
gs
(bad)
xchg
mov
push
movs
xor
(bad)
cmp
cmc
inc
add
stos
call
mov
xchg
loope
cmp
dec
pop
cmp
xchg
jp
or
iret
and
call
sbb
repnz
jnp
out
dec
lock
jmp
mov
bound
pop
sbb
fucomip
out
push
add
mov
outs
inc
mov
mov
pop
jo
ja
push
xchg
sbb
stos
fadd
xchg
push
je
or
push
mov
neg
dec
push
shl
add
jg
cmp
into
add
jg
jmp
mov
bound
or
retf
xchg
and
sbb
scas
rcr
sbb
pop
mov
add
test
xchg
sub
not
xchg
jno
push
cmp
call
jmp
imul
sti
inc
scas
rcr
aas
retf
pop
cli
sub
cmp
pop
repnz
ja
jp
repnz
cmp
ds
push
bound
out
xchg
pop
mov
out
mov
cmp
stos
jo
mov
shl
mov
mov
pop
add
xchg
xchg
and
dec
daa
xor
or
mov
outs
adc
shr
imul
mov
jb
dec
cmp
in
das
lahf
ins
mov
loop
xor
cld
xor
ja
sbb
add
mov
mov
call
idiv
shr
aas
ja
push
or
jp
add
jmp
fcom
call
push
xlat
jmp
fsub
jb
add
test
gs
fisubr
movs
scas
bswap
cld
fwait
aad
pop
add
shrd
stos
retf
rcr
jmp
add
jg
pop
sti
rcr
fbld
mov
add
push
xor
sbb
aas
cs
loope
mov
mov
div
or
sbb
lahf
cld
xchg
pop
(bad)
aas
dec
dec
jle
stos
aas
cwde
retf
fwait
jo
pusha
jg
movs
repnz
xor
retf
aad
into
jb
test
stc
mov
call
loop
xor
ja
(bad)
mov
mov
ror
in
test
push
pop
imul
and
out
outs
dec
or
push
add
aas
mov
add
movs
call
test
sbb
addr16
jbe
xchg
mov
cmp
ret
and
daa
pushf
das
inc
or
or
xor
test
clts
fisub
dec
jp
(bad)
cmps
push
cli
nop
test
pop
test
cmp
in
out
jmp
mov
mov
push
jb
cmp
add
(bad)
mov
mov
xor
daa
mov
retf
jp
xchg
loop
jns
or
ins
in
nop
(bad)
cli
icebp
mov
fiadd
push
jmp
out
inc
add
inc
pop
add
pop
out
outs
ins
push
xchg
movs
and
or
clc
fucomip
sub
fistp
cmps
adc
pop
dec
retw
pop
push
arpl
jb
jb
cmp
(bad)
cmp
jns
xor
movs
les
stc
pop
dec
(bad)
push
std
data16
cld
jo
jmp
arpl
and
jg
jae
push
mov
dec
jnp
and
and
scas
mov
stos
push
mov
push
fsub
cmp
or
sub
cmps
jbe
jne
add
xchg
and
push
mov
inc
sbb
dec
pop
loope
ins
aas
xor
ins
adc
xchg
sbb
mov
repz
cmps
call
jmp
pop
sub
or
push
les
sbb
bnd
jg
xchg
sbb
xchg
push
stos
rcl
(bad)
jl
aam
jae
das
pop
mov
jmp
pop
jmp
rcl
pop
outs
mov
push
xchg
scas
pop
mov
ret
rol
(bad)
push
das
mov
mov
in
or
cmps
shl
sub
(bad)
mov
aas
or
imul
jo
push
addr16
adc
mov
loop
fldenv
les
mov
(bad)
mov
fisub
xor
xchg
dec
out
xchg
mov
jmp
fucomi
loop
xor
mov
adc
sub
bound
push
int3
mov
repz
pop
dec
mov
mov
mov
daa
scas
pop
push
ret
(bad)
out
dec
sub
jp
call
aaa
movs
stos
jmp
cdq
jmp
cmp
das
mov
sub
test
aas
(bad)
dec
aaa
mov
jne
dec
int
and
call
(bad)
mul
inc
mov
jg
cmp
sar
aad
cli
add
sbb
pop
jmp
and
in
adc
mov
aas
dec
hlt
mov
jl
jo
hlt
jmp
push
aas
xor
outs
pop
das
mov
sahf
and
sbb
std
mov
mov
jno
movs
lahf
xor
stos
adc
or
scas
icebp
push
outs
jmp
mov
icebp
pop
jmp
mov
mov
and
pop
adc
dec
iret
rcl
out
push
stos
dec
addr16
adc
retf
mov
(bad)
jg
iret
push
popf
mov
iret
cmp
and
seto
call
mov
ret
add
sub
add
and
and
mov
lock
pusha
data16
and
(bad)
repnz
mov
dec
out
test
outs
retf
xchg
push
mov
iret
xor
jl
(bad)
mov
mov
mov
pop
cli
aam
sbb
pop
xchg
pop
rol
dec
mov
sbb
pop
push
pop
and
and
pop
and
pop
pushf
sahf
scas
call
adc
cmc
in
pop
popa
jle
jnp
mov
lock
add
xchg
adc
shr
cmp
std
lock
(bad)
movs
push
xchg
sbb
dec
jle
xlat
push
pop
aaa
pusha
sahf
mov
mov
aas
fucomip
mov
mov
das
xchg
int3
aaa
shr
scas
inc
test
ror
dec
mov
test
jno
ror
dec
sbb
sbb
hlt
push
(bad)
jmp
lods
xlat
push
shl
mov
mov
stos
xchg
push
lods
fidiv
mov
xlat
stos
out
ss
js
xchg
sub
repnz
xor
and
ror
pop
xchg
xchg
add
cmp
leave
hlt
dec
(bad)
ja
or
push
sub
jno
lods
das
fistp
arpl
xlat
jecxz
cwde
dec
add
es
mov
dec
retf
pop
fistp
call
sub
cld
bswap
or
das
inc
cmp
popa
mov
pop
mov
sbb
(bad)
imul
lahf
xchg
and
inc
out
das
push
jp
fs
xchg
ret
xor
or
bound
bswap
push
fst
imul
fs
add
or
mov
fbstp
xchg
repnz
inc
mov
aaa
cmps
sbb
scas
pop
cli
repz
and
mov
retf
(bad)
jo
pop
or
sbb
jg
mov
pmaxub
fimul
dec
stc
sub
in
jg
lea
sbb
inc
into
jp
fs
je
pop
pop
mov
and
pop
jmp
add
lahf
loope
scas
(bad)
aas
push
shl
jp
sub
pop
stos
add
scas
mov
inc
icebp
push
inc
icebp
repz
lahf
push
add
outs
push
(bad)
xor
std
sub
cmp
sub
inc
aam
outs
int3
jg
inc
xchg
adc
pop
cmps
inc
mov
cmp
sbb
xchg
aas
inc
mov
out
imul
retf
pop
hlt
dec
lahf
jp
sub
ficomp
(bad)
push
arpl
jg
or
jmp
mov
push
jle
push
ss
mov
stos
cli
dec
scas
cmps
push
pusha
fwait
sbb
outs
adc
jo
adc
mov
lahf
out
bound
add
xlat
mov
jmp
mov
jbe
bound
jle
sub
lods
pop
sub
cmp
outs
fistp
frstor
dec
push
pop
mov
xchg
mov
aam
pop
xor
sub
pop
scas
das
mov
xchg
les
mov
outs
icebp
loop
scas
dec
sti
mov
(bad)
outs
stos
repnz
imul
out
jns
rol
aam
push
outs
add
fwait
push
loop
mov
mov
loopne
icebp
add
push
jns
jl
push
jmp
sbb
push
pop
loopne
inc
jg
aad
xchg
movs
ret
into
xor
out
addr16
jb
les
pop
inc
or
adc
and
jg
inc
cld
mov
test
(bad)
movs
sbb
cmp
mov
scas
mov
jg
jo
pusha
loope
push
cld
xor
sbb
push
and
push
inc
nop
jb
fst
dec
inc
add
cmp
call
(bad)
repz
or
les
push
xor
mov
adc
sbb
dec
pop
jmp
mov
fwait
jae
stos
xor
mov
mov
mov
sahf
out
sub
mov
cmp
clc
sub
pop
xchg
pop
aas
stos
mov
jmp
adc
mov
adc
inc
inc
dec
cld
outs
les
(bad)
or
pusha
lods
movs
movs
dec
jns
jle
in
cli
xchg
add
xchg
out
es
(bad)
hlt
fadd
mov
jmp
iret
jns
imul
inc
sbb
jnp
pop
hlt
pop
stos
mov
jge
retf
and
mov
outs
push
xchg
mov
add
adc
adc
add
jp
cmovg
fcmovbe
and
push
(bad)
ficom
sub
jb
adc
dec
mov
sbb
fisubr
mov
dec
iret
addr16
cs
ret
xchg
cs
loope
cmp
loop
jp
dec
jp
push
mov
pop
jmp
jle
push
and
les
push
cmp
jnp
cli
test
stos
and
dec
rol
jmp
mov
(bad)
push
nop
(bad)
mov
call
sar
ins
push
lock
fst
cmps
mov
(bad)
data16
icebp
ficomp
xor
cmps
adc
inc
inc
neg
mov
ret
push
jb
mov
iret
outs
and
inc
cmps
cmp
jg
daa
mov
shl
call
in
hlt
inc
call
pop
(bad)
dec
pop
addr16
sbb
das
scas
cld
test
mov
call
jmp
dec
ins
push
add
jns
dec
ret
aam
sbb
xchg
add
sub
adc
fidiv
xchg
daa
shr
icebp
cmps
jecxz
scas
inc
cdq
and
jle
adc
(bad)
out
ds
adc
xchg
cmp
or
cmp
xchg
mov
adc
xchg
cld
ja
rcl
xchg
xor
out
pop
vpsllw
push
scas
fidiv
sub
adc
adc
test
push
add
adc
jl
mov
ss
arpl
call
cmp
cmp
push
or
dec
ret
aaa
in
sbb
and
mov
repz
test
mov
outs
mov
lods
shl
leave
pop
push
push
loope
cmps
loope
cwde
(bad)
shr
xchg
jbe
dec
jmp
les
jnp
(bad)
outs
ds
fnstcw
ss
iret
or
push
cmp
push
xchg
and
push
or
xor
inc
cmp
sbb
mov
(bad)
xor
xchg
out
or
into
jb
loope
pop
mov
(bad)
mov
sbb
cmp
mov
jg
(bad)
icebp
sbb
or
or
call
mov
jae
mov
xor
cmp
lods
sbb
mov
sub
xor
sahf
mov
dec
iret
sub
xor
jmp
(bad)
adc
test
mov
jmp
fistp
test
jmp
popa
sti
jnp
inc
jb
(bad)
and
les
dec
xor
iret
mov
jle
repnz
ror
pop
fcmovbe
xor
xor
(bad)
call
jmp
mov
mov
pop
repnz
inc
jae
pop
gs
inc
out
xchg
jmp
push
stos
nop
pop
cmp
and
dec
or
sbb
mov
sub
sbb
int3
cmp
pop
inc
xchg
ins
adc
sub
push
xchg
lds
adc
sbb
sub
xchg
dec
in
or
adc
dec
jp
pop
jle
je
cld
push
cmp
push
out
adc
cli
pop
mov
outs
retf
inc
sub
inc
vmovaps
pop
jb
pop
jno
movs
ds
inc
push
call
inc
icebp
fist
xor
(bad)
aad
cdq
push
pop
cmp
mov
mov
push
mov
ror
(bad)
pop
mov
vcvtsi2sd
mov
jb
adc
cwde
nop
ficomp
mov
push
rcl
rcr
inc
stos
push
cmp
sub
in
out
push
mov
pop
std
iret
gs
lahf
inc
xor
jmp
fbstp
or
fidivr
loope
stos
stos
cs
xor
jp
cs
call
ud0
das
adc
and
cmp
call
dec
mov
mov
sbb
cs
ds
mov
(bad)
jp
popf
push
and
js
fwait
xchg
mov
sub
dec
sbb
ror
mov
dec
ror
cmp
scas
aaa
ds
sahf
(bad)
pop
fwait
dec
(bad)
ins
lds
in
adc
in
imul
stos
fwait
bnd
(bad)
cmp
cmp
pop
inc
pop
inc
fild
sbb
scas
das
cs
enter
cld
in
jg
call
pop
adc
jb
sbb
bound
sbb
mov
aam
outs
lock
fisub
mov
sub
cli
in
cmp
cs
mov
pop
mov
shr
mov
mov
sub
das
lea
jecxz
bnd
pop
mov
sub
cli
test
dec
push
sbb
outs
jb
mov
jp
push
push
sbb
daa
pop
fistp
pop
pop
add
fisubr
out
int3
call
scas
mov
jmp
jp
aas
or
mov
aas
pop
dec
stos
pop
inc
sub
jg
lods
jp
push
pop
push
push
ins
cmp
or
mov
out
movlps
das
xor
fdivr
fmul
scas
or
ret
ins
or
cli
imul
dec
sub
outs
jae
sub
pop
xor
jle
sub
aas
call
imul
push
into
stos
push
call
scas
retf
mov
mov
repnz
sahf
cli
scas
jmp
pop
cmp
jg
retf
fstp
dec
push
cmp
outs
dec
sbb
sub
push
out
xor
dec
push
jp
loopne
adc
inc
jns
(bad)
ffreep
stos
mov
xchg
jmp
mov
outs
adc
jmp
fwait
dec
inc
cmp
push
pop
pop
or
ficomp
addr16
cs
and
sbb
dec
call
lds
fild
stos
adc
scas
rcr
cmp
mov
dec
int3
outs
retf
or
push
push
pop
xor
jne
dec
psadbw
mov
inc
test
xlat
push
sub
jbe
imul
inc
pop
push
adc
ins
das
outs
adc
push
jmp
dec
out
cmp
jbe
test
mov
mov
jnp
cmp
bound
xchg
mov
or
inc
push
stc
out
jg
call
dec
(bad)
cmp
cmp
jnp
pop
(bad)
aas
int
call
arpl
ins
add
js
jg
and
pop
iret
mov
daa
out
push
add
adc
outs
and
mov
xchg
sbb
jo
jae
(bad)
or
aas
mov
outs
das
xchg
push
invd
push
sub
fcmove
xchg
pop
cmp
or
shl
popa
loop
push
mov
push
pushf
mov
pop
in
pop
push
xchg
lahf
add
cmp
jle
sub
(bad)
pop
gs
mov
sbb
xlat
stos
(bad)
mov
jnp
pop
sti
mov
imul
sub
fidiv
add
fistp
sti
add
sub
scas
cdq
in
sbb
and
and
pop
out
outs
fwait
sbb
inc
jg
mov
push
fst
cmc
in
dec
iret
ja
sahf
jg
dec
mov
ja
add
shl
out
stos
ins
or
mov
sub
mov
das
push
dec
adc
pop
mov
xchg
iret
sti
cmp
mov
xor
add
cli
pop
sbb
(bad)
fmul
mov
xchg
test
lods
mov
jae
or
pop
inc
jno
pop
jl
aas
retf
sub
loop
sbb
mul
out
dec
mov
adc
sbb
test
pop
jle
retf
push
sahf
aas
lahf
jle
dec
out
mov
jle
addr16
call
scas
ja
add
mov
cli
test
jp
test
cdq
xchg
mov
sar
cmps
es
outs
mov
cmp
retf
bound
adc
inc
xchg
cmp
mov
sbb
pop
push
sahf
mov
retf
pop
mov
mov
scas
cmps
into
cmp
and
add
dec
out
mov
jecxz
dec
fs
inc
or
lahf
sahf
retf
sbb
in
sub
jp
cmp
inc
xor
jp
cmps
mov
mov
mov
rcl
jge
sub
pusha
daa
jnp
sti
mov
ss
sub
mov
adc
or
mov
pushf
repnz
lahf
cmp
imul
push
in
out
pop
xchg
pop
add
jb
test
add
xchg
jmp
leave
xlat
sub
inc
mov
jmp
nop
hlt
xchg
(bad)
push
pop
scas
sbb
jle
jae
sbb
or
inc
sti
pushf
push
push
js
pop
and
stos
iret
dec
sub
cli
shl
push
ds
cld
retf
sbb
dec
jl
cs
sbb
mov
sbb
retf
pop
scas
js
jnp
daa
mov
jg
pop
push
mov
iret
jg
sub
jns
push
in
fistp
mov
call
stos
pop
pop
dec
xchg
sti
inc
dec
adc
movs
mov
xor
nop
lahf
jg
pop
jl
aaa
jle
jnp
nop
xchg
or
lods
pop
stos
in
and
push
or
push
lea
cmp
xor
sub
es
or
aaa
out
xchg
xchg
add
jp
cmp
retf
sub
out
dec
sbb
push
push
imul
and
rcr
cmp
lahf
add
imul
pop
stc
pop
jmp
(bad)
out
xchg
jg
(bad)
aas
adc
push
add
sbb
push
div
jno
stos
in
and
in
pop
call
scas
cmp
and
stc
add
sbb
add
ja
in
add
retf
pop
sbb
bnd
push
and
(bad)
cmp
psubw
das
sbb
xchg
dec
mov
pop
mov
push
cs
jmp
add
in
inc
(bad)
sub
mov
cmp
(bad)
mov
(bad)
mov
sub
cmps
or
ficomp
sbb
aas
or
call
neg
out
jns
inc
out
fstp
jmp
push
stos
outs
jp
sbb
adc
dec
sub
in
xchg
cmp
push
cli
pop
ds
cmp
dec
jns
rep
call
ins
mov
fistp
stos
jb
leave
in
mov
in
daa
mov
jg
(bad)
stc
fiadd
scas
cdq
pop
adc
cmp
sub
pop
xchg
or
pop
inc
jmp
pop
imul
pop
jl
xchg
cmp
push
out
cmp
mov
fisub
stos
lods
jl
mov
xor
sub
in
addr16
fmul
or
sub
sub
repz
imul
inc
pop
mov
outs
mov
icebp
xchg
scas
push
outs
(bad)
fwait
xchg
into
jae
cdq
scas
imul
mov
dec
dec
or
call
imul
pusha
xchg
loop
in
push
movs
cli
fild
xchg
call
leave
push
pushf
outs
inc
scas
jp
dec
inc
shl
fld
mov
daa
mov
(bad)
mov
add
inc
stos
outs
mov
ds
push
sti
xchg
ror
je
test
jnp
cmp
(bad)
call
sbb
ror
aas
cli
ins
push
sbb
(bad)
pop
xchg
call
mov
stos
pop
out
data16
cs
out
mov
ins
push
aas
stos
sbb
bound
rcr
movs
jns
aas
xor
mov
push
lahf
sub
mov
and
shr
es
inc
sbb
adc
pop
push
fcom
ret
push
mov
mov
mov
jg
sbb
test
leave
dec
jmp
or
jg
retf
push
test
xchg
sub
cli
repz
movs
lahf
adc
mov
(bad)
jg
mov
aas
enter
dec
add
jb
mov
cmp
fisttp
pop
push
outs
fild
fcmove
mov
push
pop
xlat
dec
jno
pop
cmp
shr
jmp
xchg
rep
jb
loop
les
mov
sub
(bad)
out
loop
dec
pop
stos
pop
es
xlat
retf
loope
scas
mov
push
pop
inc
dec
mov
outs
and
loop
xchg
pop
push
loope
sub
mov
(bad)
aas
enter
out
daa
cmp
sbb
xor
push
ds
mov
push
popf
push
and
pop
pop
cmps
call
and
loop
lods
dec
adc
pop
rcr
outs
fsubr
add
dec
jbe
jbe
fistp
push
jmp
dec
pop
pop
add
fidiv
adc
xchg
cmps
(bad)
xor
sti
jmp
mov
mov
aas
test
pop
inc
sub
jg
mov
pop
push
push
ins
cmp
push
out
push
jmp
das
xor
retf
xchg
stos
xchg
fmul
scas
outs
mov
ret
mov
lahf
cli
imul
dec
neg
outs
jae
sub
pop
fwait
dec
es
sub
inc
mov
add
aas
and
adc
sbb
inc
scas
adc
mov
repnz
inc
cli
mov
(bad)
sahf
pushf
retf
pop
loopne
sahf
jg
retf
fstp
dec
xchg
outs
dec
sbb
cmpxchg
xchg
das
xor
dec
push
jae
es
inc
ja
add
push
ffreep
stos
mov
push
jmp
mov
outs
sar
(bad)
xchg
fcmovne
scas
mov
dec
xchg
pop
sub
pop
pop
or
rcr
lods
das
add
and
sbb
inc
call
or
push
popa
iret
jge
pop
out
repz
jmp
cld
stos
xchg
lahf
sub
mov
sub
add
outs
outs
jg
xlat
stos
test
and
cli
ror
sbb
xor
xor
adc
mov
add
inc
jnp
pop
inc
rcl
pop
xor
push
xlat
sbb
(bad)
iret
sbb
imul
mov
sar
call
push
ficomp
mov
mov
shr
aas
mov
out
ret
(bad)
pusha
sbb
leave
in
pop
sbb
cld
pop
test
fwait
inc
add
mov
cmp
jp
aad
adc
push
sub
sahf
sub
cmp
icebp
or
retf
or
fisubr
outs
xlat
push
iret
iret
fcmovbe
cmps
cli
(bad)
dec
syscall
xchg
mov
jmp
mov
out
dec
iret
push
mov
aaa
pushf
out
fistp
bound
pop
cmp
mov
dec
pop
push
jno
add
or
push
ret
jg
outs
add
mov
movs
les
dec
cmp
pop
repz
sub
sub
pop
cmps
daa
push
ror
mov
jno
out
das
push
(bad)
into
mov
ldmxcsr
ins
push
cmps
pusha
data16
rol
mov
loope
push
add
dec
jno
jmp
cmp
xchg
sub
rol
loope
ffreep
pop
mov
cmp
add
jno
out
(bad)
xor
dec
jae
das
inc
pop
mov
test
or
push
cmp
adc
or
popa
stos
sbb
or
gs
cli
icebp
gs
pop
test
neg
fistp
fiadd
and
test
push
mov
xchg
es
mov
xchg
ret
mov
test
push
xchg
lahf
dec
iret
push
and
adc
xchg
push
shr
pop
iret
dec
push
sub
and
lahf
movs
int3
mov
or
xchg
sub
lahf
cmp
retf
rcl
scas
add
push
popa
jmp
push
push
dec
inc
stos
cmps
outs
push
add
pop
jp
jecxz
dec
sti
sbb
sbb
popa
adc
lea
test
cmp
pop
outs
dec
or
icebp
aas
stos
sbb
bound
aam
adc
icebp
je
push
fiadd
cmp
mov
sub
pop
and
sbb
and
retf
jg
(bad)
aas
adc
push
add
sbb
or
shl
sbb
push
out
(bad)
pop
pop
xor
xor
cmp
dec
xor
iret
dec
out
pop
xor
lahf
mov
mov
mov
mov
aas
mov
test
mov
fistp
in
pop
or
add
sbb
inc
or
sbb
(bad)
aas
pop
push
je
rcr
adc
aas
or
data16
int
jne
outs
fwait
movs
icebp
mov
mov
mov
mov
push
ins
pop
scas
in
fisubr
mov
dec
scas
mov
jp
cs
xchg
dec
xchg
sub
pop
and
xchg
jmp
adc
and
pop
and
adc
cmps
(bad)
and
dec
cdq
jns
sub
cdq
cs
cmp
scas
(bad)
mov
adc
aam
nop
rcl
div
push
cmpxchg
or
mov
mov
ret
jg
xchg
das
(bad)
pop
jl
xchg
cmp
scas
out
cmp
mov
fisubr
stos
lods
inc
mov
xor
sub
cli
fdiv
dec
jns
ret
mov
push
pop
xlat
dec
or
xchg
out
push
call
dec
xchg
pop
sub
cmp
pop
mov
mov
jbe
cmp
and
stc
aas
jae
sbb
or
ja
in
cmp
dec
sbb
bnd
outs
and
(bad)
cmp
mov
inc
psubw
das
sbb
xchg
dec
mov
pop
mov
push
xchg
mov
jmp
psubd
scas
inc
(bad)
sub
mov
cmp
(bad)
mov
jnp
test
sub
cmps
or
sub
sbb
aas
or
call
neg
xchg
iret
jns
inc
out
fstp
push
psubd
les
push
stos
outs
fidivr
retf
test
cmps
cmp
outs
xchg
cmp
push
cli
pop
sahf
das
cmp
dec
jns
rep
call
ins
mov
fistp
stos
jb
leave
jmp
(bad)
(bad)
daa
mov
jg
cli
ds
jnp
cmps
mov
outs
adc
or
(bad)
sahf
jb
lds
mov
mov
mov
das
jmp
jae
or
adc
cmps
dec
pop
sbb
fistp
aas
sub
push
dec
cli
dec
iret
cmp
aad
in
dec
syscall
jecxz
push
push
dec
xor
cwde
push
ret
es
xor
xchg
icebp
(bad)
adc
dec
stos
nop
pop
mov
fidiv
mov
cmp
pop
sar
aas
sub
mov
inc
sbb
or
sti
iret
fbld
jecxz
movs
inc
sbb
cmp
and
das
add
pxor
mov
scas
mov
mov
jp
pusha
jmp
mov
mov
dec
(bad)
and
mov
gs
addr16
cmp
lds
outs
inc
jmp
or
stos
xchg
jmp
and
sub
out
repnz
sar
pop
inc
imul
dec
jmp
mov
sbb
sbb
mov
jmp
mov
scas
ds
mov
ret
and
stos
outs
aad
xchg
into
fwait
mov
lds
in
out
lods
push
test
sbb
jmp
out
out
sbb
not
or
inc
lahf
les
or
sub
scas
sar
(bad)
fs
jo
imul
push
cmp
xor
mov
scas
and
(bad)
push
or
shr
pop
jg
(bad)
adc
push
mov
pop
sbb
aaa
scas
std
fidiv
mov
aas
(bad)
cmps
stc
or
outs
retf
mov
adc
cwde
ja
cs
sbb
xchg
cs
repz
sar
retf
das
scas
movs
dec
dec
mov
xchg
loop
add
or
ret
je
and
repz
dec
jle
and
jo
jmp
cs
xchg
mov
retf
mov
iret
cld
(bad)
call
adc
mov
mov
add
and
pop
iret
mov
call
dec
pop
loopne
and
jmp
mov
mov
push
inc
xchg
jg
dec
xor
out
xchg
sub
and
ror
pop
aaa
pop
hlt
outs
mov
iret
daa
(bad)
cmp
mov
scas
mov
cli
dec
bound
cmp
xchg
je
shr
add
mov
les
scas
dec
add
mov
(bad)
pop
rcr
inc
jg
arpl
fnstcw
jo
xor
sub
fwait
sar
out
mov
sar
mov
out
outs
(bad)
repnz
aas
dec
lods
jmp
inc
(bad)
xor
aad
in
cmc
inc
mov
jp
mov
fcmovnb
nop
mov
fist
daa
push
and
nop
pop
outs
das
mov
ss
aas
and
fimul
loop
mov
cmps
lahf
in
into
lock
loopne
ror
test
ds
and
scas
rcr
fist
dec
sti
jecxz
bound
cdq
stos
imul
xchg
cld
movs
scas
(bad)
xor
add
cmps
lahf
adc
dec
(bad)
mov
nop
sahf
xchg
mov
aas
lahf
imul
ins
mov
lods
dec
push
cli
or
sahf
inc
call
out
mov
jae
sbb
cdq
inc
mov
jbe
fst
imul
mov
scas
imul
bnd
aas
lahf
xchg
and
mov
mov
push
cli
dec
pusha
out
enter
push
mov
add
fwait
inc
pop
xlat
pop
adc
xor
sub
cli
xchg
bound
mov
scas
dec
sub
nop
jmp
mov
push
add
cmovg
sbb
xchg
aad
loop
mov
mov
or
sub
lock
xchg
jmp
mov
jbe
jle
sub
mov
test
cli
pop
popa
das
cdq
outs
inc
or
outs
push
loop
stc
pop
pop
test
xor
jle
aad
pop
dec
cmp
mov
rol
sbb
or
test
inc
fiadd
inc
ds
sub
(bad)
call
aas
adc
inc
mov
sub
fisttp
mov
je
stos
mov
daa
(bad)
das
lahf
sbb
fwait
stos
jg
pop
jne
test
fs
je
jmp
fidivr
outs
outs
retf
mov
push
inc
adc
fwait
push
mov
scas
popa
fidivr
or
jp
aaa
or
pop
inc
(bad)
fisttp
stos
dec
mov
mov
dec
xor
stos
sbb
jmp
(bad)
das
test
iret
dec
fild
in
sbb
sub
daa
mov
addr16
es
in
ret
sar
dec
mov
aad
pop
mov
shr
fadd
xchg
cld
addr16
mov
or
fld
adc
test
inc
cmp
in
scas
retf
jo
mov
dec
cld
jecxz
ins
aaa
out
xchg
dec
jno
sub
or
je
arpl
xchg
jb
inc
jmp
mov
mov
jp
bound
movs
lahf
dec
(bad)
movs
xor
jnp
jnp
sub
cmp
nop
ja
leave
mov
cmp
mov
xchg
cdq
fistp
stos
or
fcmovb
(bad)
psubd
loop
mov
mov
(bad)
(bad)
into
(bad)
cmps
jg
or
int3
adc
pop
add
jp
pop
(bad)
mov
pop
div
iret
and
push
mov
jp
out
jbe
aas
dec
dec
neg
push
cmp
sahf
aaa
adc
mov
push
pop
or
movs
pop
lods
loopne
rcr
mov
sub
xchg
push
lods
xor
xor
out
dec
aas
inc
sbb
loop
ficom
aas
push
cli
or
push
xlat
mov
mov
push
repnz
loop
popf
std
inc
cmp
repz
mov
icebp
pop
imul
jbe
inc
ficom
cdq
fistp
xchg
sub
xlat
jmp
xor
cmp
sub
mov
pop
lods
leave
add
xor
in
sbb
pop
cli
test
in
rol
cmp
push
mov
pop
test
sti
das
push
pop
or
stos
mov
into
(bad)
repnz
fisub
mov
mov
mov
shl
lahf
sbb
xchg
out
cwde
fistp
pop
push
bound
lahf
loop
ja
sbb
pop
pop
nop
pushf
adc
mov
rcl
xchg
inc
iret
das
mov
popa
shl
fs
imul
and
pop
ret
lahf
jnp
mov
sbb
call
(bad)
fidivr
and
fistp
popf
popf
mov
push
addr16
fdivrp
pop
aaa
push
sbb
dec
out
jae
(bad)
aaa
sbb
jns
xor
outs
mov
add
rol
add
sbb
xchg
stc
pop
std
mov
or
add
dec
cmp
in
and
ficom
dec
add
sub
jle
jo
arpl
(bad)
movs
add
(bad)
jmp
push
mov
adc
mov
push
mov
mov
pop
nop
xchg
or
lods
pop
out
fidivr
pop
mov
fstp
neg
dec
cwde
in
mov
addr16
sub
outs
mov
and
call
cdq
sbb
dec
cmp
sbb
pop
test
jmp
or
scas
(bad)
into
(bad)
mov
imul
(bad)
cli
xchg
mov
mov
or
jg
fstp
fisubr
dec
xor
iret
push
retf
(bad)
cmps
outs
mov
or
paddsb
out
outs
gs
sar
jg
punpckldq
sti
mov
ds
dec
cmp
rcr
in
sar
es
cmp
or
cmp
sub
xor
inc
fisttp
retf
mov
add
mov
sar
jg
sub
out
pop
add
(bad)
retf
mov
int3
call
push
mov
jmp
aaa
sbb
cmc
out
mov
sbb
sub
jg
mov
movs
push
push
ins
cmp
sbb
lock
das
xor
retf
repz
xchg
fmul
scas
mov
ffreep
ficomp
sub
inc
add
xlat
dec
pop
or
xchg
stos
push
pop
inc
mov
jle
sub
das
(bad)
fisttp
retf
imul
jns
mov
sub
ja
scas
mov
mov
repnz
or
cli
push
adc
cmps
mov
outs
and
sbb
outs
dec
sbb
cmp
sub
mov
dec
push
imul
inc
ins
mov
ret
stos
mov
into
jmp
mov
outs
dec
jg
jo
fcmovne
scas
mov
dec
push
cmp
or
int
cmp
jp
and
sbb
pop
call
or
push
jg
jmp
movlps
jmp
cld
stos
xchg
pusha
sub
mov
sub
in
dec
lods
cli
neg
das
(bad)
push
cmps
sub
cmc
add
jg
pop
pop
scas
jg
cmp
push
int3
or
leave
sbb
(bad)
(bad)
iret
pop
and
pmaddwd
fidiv
test
fild
mov
out
jl
stos
jmp
dec
push
pop
fwait
test
ficomp
mov
iret
and
addr16
cmp
lds
call
dec
dec
(bad)
mov
mov
mov
pop
jg
call
(bad)
ins
jmp
jmp
mov
and
test
xchg
fldcw
ret
xor
pusha
aam
out
or
sahf
mov
cmp
or
inc
or
test
dec
pop
and
cmp
fstp
jp
pop
and
pop
out
out
dec
inc
jns
aam
shr
std
cmp
sub
fdivr
xchg
fs
xchg
mov
call
xor
xor
xchg
jecxz
push
std
or
jae
push
cli
xchg
inc
int3
adc
push
mov
inc
movs
rol
mov
and
imul
jne
(bad)
jp
pop
add
lock
jg
jno
mov
sbb
sub
mov
popf
mov
pushf
and
xchg
or
icebp
in
xor
cmp
adc
mov
inc
mov
fwait
ins
pop
xor
or
sbb
and
call
sbb
sar
inc
mov
iret
ds
mov
jae
jbe
pop
pop
xchg
repz
jns
out
shl
dec
ja
adc
dec
outs
jmp
gs
mov
test
sub
jns
(bad)
add
outs
adc
jne
pop
dec
push
pop
mov
fstp
iret
sub
cmp
popa
mov
xor
and
stos
lahf
scas
push
mov
xor
pop
ja
xchg
js
dec
mov
les
aam
ja
add
fistp
dec
mov
inc
jg
sub
jge
or
and
lahf
add
ss
cli
sub
pop
push
ins
stos
ret
mov
jg
bound
rcr
(bad)
hlt
inc
mov
or
int3
lds
test
mov
cmp
xchg
jnp
les
xchg
lahf
dec
scas
mov
aas
pusha
xor
or
mov
mov
push
adc
dec
out
aam
push
hlt
jb
and
sub
jbe
pop
mov
cmp
mov
aam
ins
call
xchg
pop
data16
jne
scas
fnstcw
push
(bad)
pop
adc
pop
xor
arpl
(bad)
lahf
mov
cli
pop
loopne
aas
jg
aas
fwait
icebp
bswap
jecxz
jmp
(bad)
sar
shr
dec
xor
popf
stos
pop
shr
mov
pop
jne
push
fisubr
xchg
mov
gs
(bad)
(bad)
lahf
cmps
mov
push
into
jne
pop
inc
cli
aaa
adc
pop
inc
sub
sub
jmp
jle
aad
(bad)
mov
mov
xchg
pusha
iret
scas
bswap
adc
sbb
sub
push
mov
push
jo
aas
rcl
jmp
add
ins
and
stos
ficomp
outs
call
daa
cmp
ds
fldcw
ret
sub
jg
or
fld
dec
cmp
adc
and
push
jno
lahf
rcl
mov
in
loop
scas
dec
inc
mov
mov
jl
in
push
mov
pop
cs
into
push
in
outs
imul
jmp
mov
into
outs
stos
dec
jmp
and
outs
pop
add
mov
xor
fbld
retf
pop
push
hlt
ss
mov
pop
stos
outs
cld
mov
push
and
pop
retf
idiv
outs
das
fisubr
mov
test
imul
sub
jmp
ficom
jmp
pop
pop
sbb
jb
shufps
cmp
out
test
movups
into
pop
and
sub
pop
cmp
adc
jmp
and
in
or
push
das
push
add
call
sub
jo
ffree
push
inc
push
or
scas
das
and
bound
retf
call
push
outs
xlat
sbb
mov
(bad)
retf
push
nop
jg
mov
xchg
stos
pop
and
push
inc
adc
add
add
sar
mov
xchg
fisttp
hlt
inc
adc
cmp
sub
xor
cwde
cld
xor
mov
mov
out
mov
mov
call
push
shr
fisttp
scas
pushf
xchg
(bad)
xchg
(bad)
cmc
push
or
fisubr
xchg
outs
test
mov
jnp
push
push
aad
outs
sub
scas
bound
ins
sub
dec
out
mul
fcmovb
popf
dec
clc
pushf
push
push
jg
(bad)
mov
mov
ror
cmc
pop
cli
pop
sub
fistp
xchg
mov
std
mov
jg
jbe
scas
cmp
pop
sbb
or
inc
clc
pushf
push
push
pop
jne
mov
xchg
(bad)
push
or
pop
push
mov
repz
fidivr
mov
xor
add
not
iret
and
sbb
mov
in
daa
inc
pushf
jne
call
push
cdq
pusha
adc
cmp
sub
pop
xchg
cmc
int3
and
aas
sbb
shl
mov
movs
jl
xchg
cmp
mov
cmp
mov
fimul
push
lods
jp
mov
xor
das
arpl
sub
in
addr16
aas
dec
jns
ret
sahf
ror
pop
xlat
mov
fild
sbb
loopne
int
aas
retf
in
pop
gs
ds
cmp
and
stc
cmp
out
sbb
adc
dec
ficomp
sub
or
lahf
push
pop
in
cmps
lds
mov
dec
stc
pop
adc
fist
(bad)
fist
jne
sahf
(bad)
push
outs
mov
jmp
mov
in
inc
and
pop
retf
cmp
jo
jp
scas
pop
push
dec
test
aad
cld
cmps
or
(bad)
pop
sbb
ror
jecxz
stos
dec
call
neg
or
jns
inc
adc
sbb
cli
xor
les
pop
mov
out
mov
jno
push
call
bound
push
arpl
jb
mov
pop
cmp
jnp
or
ret
dec
retf
neg
(bad)
cli
bt
cmps
push
sbb
inc
mov
outs
xchg
mov
xlat
sub
cld
adc
iret
scas
mov
stos
and
test
mov
sbb
cmp
pop
xchg
xchg
sub
mov
sub
mov
ror
mov
cmps
scas
add
mov
fild
push
stos
or
cmc
shrd
call
mov
stos
sbb
pop
cli
test
sbb
fisubr
cmps
(bad)
int3
aas
or
mov
ins
xor
pop
pop
hlt
fsubr
sbb
push
pop
xor
sub
pop
cmp
stc
adc
lahf
push
dec
les
ror
scas
dec
stos
and
fiadd
sub
(bad)
or
jno
cli
scas
test
ss
inc
lahf
imul
sahf
mov
or
adc
or
dec
cmp
cmp
dec
(bad)
push
inc
sbb
pop
push
ins
xlat
out
mov
mov
add
push
jno
adc
mov
fwait
push
cdq
les
ret
das
and
repnz
sbb
addr16
or
mov
ja
sahf
jp
adc
push
mov
push
stos
stos
sub
pop
imul
scas
dec
and
leave
cmp
xchg
xchg
sti
mov
cmp
ret
adc
cmp
arpl
jo
push
mov
iret
jg
sub
dec
xchg
cmc
out
test
cwde
(bad)
and
jmp
out
dec
pop
cmp
loop
cs
mov
out
pop
outs
pcmpeqw
gs
shl
jbe
jbe
call
add
and
stos
mov
cmp
and
mov
pop
out
inc
out
mov
mov
rol
xchg
hlt
xchg
adc
xchg
pop
out
cmp
jge
test
sbb
xor
or
sbb
sub
lahf
das
ins
pop
call
and
iret
cli
xchg
scas
movs
lahf
add
push
stos
sub
stos
xchg
loope
into
cli
fbld
bt
dec
das
lahf
cld
retf
mov
aam
jnp
push
push
xor
hlt
cmp
leave
shrd
das
and
dec
push
jae
mov
(bad)
add
fbld
dec
cmp
dec
shl
fcmovne
ins
lahf
das
ins
xchg
dec
iret
cmp
sbb
mov
in
daa
inc
pushf
je
call
push
cdq
popa
adc
cmp
les
cmc
int3
and
aas
sbb
shl
mov
jp
das
(bad)
movs
jl
xchg
cmp
xchg
out
cmp
mov
fidivr
test
aaa
push
lods
jp
mov
xor
das
arpl
sub
sbb
dec
addr16
aas
fimul
sbb
nop
pop
sahf
ror
pop
xlat
mov
fild
sbb
loopne
into
cmp
inc
mov
mov
bound
stc
cmp
or
ja
in
cmp
dec
mov
or
lahf
push
pop
in
cmps
lds
mov
dec
psubw
rcr
fcom
(bad)
fist
jne
sahf
(bad)
push
sahf
mov
jmp
sar
in
inc
and
pop
out
cmp
loop
mov
sti
dec
test
aad
jmp
sbb
ror
jecxz
stos
add
pop
mov
pop
mov
inc
adc
sbb
cli
xchg
les
push
stos
outs
and
retf
test
mov
inc
dec
enter
adc
mov
out
mov
pop
jo
pop
xchg
jmp
sub
xchg
jmp
aad
and
mov
out
in
xchg
xor
jae
fisubr
xlat
stos
mov
jp
jmp
push
mov
xor
daa
sub
pop
push
xchg
mov
inc
cmp
xor
addr16
mov
and
xor
add
mov
sbb
xor
cmc
push
pop
mov
in
and
pop
stos
and
pop
into
pop
call
aas
inc
(bad)
fdiv
mov
ror
sbb
pop
(bad)
jnp
cs
push
xchg
imul
bound
mov
retf
sub
outs
mov
daa
and
cs
inc
cmp
ret
stos
dec
mov
sti
das
sahf
lahf
call
outs
dec
pop
add
lahf
cmp
sbb
(bad)
out
or
pop
add
and
push
inc
add
outs
leave
mov
mov
fistp
out
pop
sbb
sar
fild
stos
add
mov
pop
jnp
push
cli
dec
iret
jle
sub
inc
pop
sub
push
mov
ret
push
in
pop
pop
call
jns
fisubr
pop
sbb
jnp
fisub
dec
inc
fs
nop
pop
cmps
inc
(bad)
sub
push
popf
jle
nop
fs
jmp
fidivr
xor
jp
(bad)
iret
or
shr
addr16
cmp
dec
mov
jp
mov
mov
mov
sub
and
pop
dec
mov
retf
scas
out
or
sti
enter
shl
iret
mov
pop
(bad)
xchg
nop
popa
daa
pop
out
mov
dec
aaa
fimul
lods
pushf
and
sahf
imul
bound
add
jp
xchg
lea
test
cli
xor
sub
mov
jmp
fsubr
in
out
add
add
inc
mov
and
call
xchg
sbb
xchg
scas
sub
xor
test
jne
add
outs
push
pop
retf
dec
iret
(bad)
mov
cmps
xor
push
adc
fisttp
mov
adc
mov
into
fbstp
sub
xor
sahf
or
ins
retf
(bad)
retf
cli
jns
add
fidivr
stc
ins
dec
mov
xor
test
retf
pop
jmp
dec
xchg
addr16
adc
push
aas
popf
mov
or
mov
push
hlt
xchg
sub
dec
dec
mov
imul
(bad)
aaa
fisubr
sahf
cmp
or
cmps
jle
jg
mov
(bad)
pop
(bad)
ja
push
out
push
mov
mov
aad
in
dec
int3
mov
aas
retf
pop
and
push
xchg
dec
retf
jp
add
retf
retf
outs
push
and
sbb
add
mov
test
call
lahf
div
aas
jmp
jl
sub
sbb
imul
cmc
and
in
cli
not
pminub
(bad)
sub
fcom
pop
adc
cmps
push
fidivr
ss
(bad)
stos
scas
call
jmp
sub
mov
mov
out
sbb
call
pop
inc
cmp
stos
in
add
repnz
loopne
jbe
cmp
sbb
pop
push
nop
jp
inc
adc
cld
pop
cmp
dec
into
fild
outs
jbe
add
ret
dec
sbb
ss
sar
data16
jmp
out
(bad)
iret
push
(bad)
jmp
cmps
cmc
cmp
dec
outs
sub
sub
rol
nop
iret
jg
out
adc
scas
pop
jg
iret
(bad)
jmp
push
dec
mov
dec
jmp
mov
fdiv
pop
push
xor
ror
inc
mov
iret
ja
scas
das
pop
retf
inc
dec
mov
mov
jo
dec
jg
movs
push
leave
das
mov
jp
sbb
scas
das
fld
mov
mov
push
test
cmp
push
mov
ds
mov
data16
jp
stos
adc
pop
scas
das
mov
js
pop
jbe
sub
adc
mov
gs
mov
jge
cmp
scas
retf
xor
jne
dec
add
jnp
or
or
push
stc
test
mov
fcom
movlps
fisubr
dec
(bad)
pop
stos
fwait
call
hlt
cmovo
cmp
dec
test
pop
rcr
dec
inc
pop
push
into
stos
mov
adc
pop
fs
mov
dec
sub
jmp
cdq
out
sbb
hlt
jbe
mul
push
push
test
cmp
outs
mov
push
push
arpl
mov
jg
mov
enter
repz
xor
(bad)
cli
xchg
call
xor
das
inc
cmps
mov
jg
xchg
cmp
ror
jns
push
(bad)
add
stc
jle
outs
retf
or
outs
les
push
pop
ror
push
jns
jo
add
adc
cmp
and
(bad)
test
mov
xlat
ds
mov
gs
pop
outs
inc
mov
(bad)
cmps
test
stos
nop
xchg
ins
jne
setg
ins
shl
(bad)
shr
mov
jmp
add
ja
neg
imul
(bad)
ds
dec
xchg
int3
dec
add
or
(bad)
sbb
cmps
adc
call
stos
dec
daa
mov
les
add
dec
mov
(bad)
nop
push
sbb
xor
in
wrmsr
mov
jmp
jecxz
push
xor
jle
jbe
js
cmp
xchg
sbb
mov
fild
dec
pop
loopne
(bad)
sahf
outs
mov
pusha
outs
cmp
jo
adc
sbb
push
retf
inc
lahf
xchg
dec
mov
fidiv
sbb
dec
push
sub
jg
retf
aas
lahf
xchg
and
inc
ror
(bad)
retf
sti
cs
mov
adc
push
stc
sbb
jg
retf
mov
daa
es
adc
jns
cmp
dec
test
mov
push
dec
inc
cmp
mov
pop
aas
fwait
test
push
mov
or
std
pushw
xchg
pop
aam
jnp
jl
dec
(bad)
daa
es
push
xchg
jp
jo
fisttp
dec
mov
aad
ficom
or
rcr
jp
push
xlat
repnz
jo
lahf
daa
jmp
inc
pop
(bad)
push
outs
and
jp
adc
sahf
es
dec
imul
mov
lds
xchg
aad
sbb
add
xchg
(bad)
cmp
pop
dec
xor
out
cmp
push
mov
mov
out
idiv
mov
(bad)
int3
dec
mov
mov
icebp
pusha
push
movs
mov
ins
sbb
clc
retf
pushf
mov
out
into
(bad)
pop
mov
cmp
repnz
daa
add
cmp
pop
xchg
inc
dec
aaa
push
sub
pop
(bad)
das
pop
cli
repnz
fwait
dec
sub
minps
sbb
jg
jecxz
xchg
dec
(bad)
mov
push
not
jnp
mov
mov
ins
out
stos
(bad)
mov
adc
or
leave
xor
dec
xchg
lahf
stos
addr16
dec
xchg
jg
inc
(bad)
sbb
xchg
cmp
xor
mov
mov
push
pop
inc
push
lahf
sub
ins
cli
pop
sub
pop
jmp
outs
leave
cmp
daa
push
inc
pop
xor
das
outs
out
adc
nop
cmps
das
sbb
xchg
dec
aam
outs
leave
cmp
mov
mov
stos
sbb
push
rol
je
sbb
loope
mov
cmp
sbb
test
dec
out
dec
mov
mov
xchg
mov
mov
sub
daa
in
jle
shl
sub
mov
mov
jg
hlt
loopne
push
fisubr
in
inc
sbb
str
not
ret
push
pusha
dec
mov
imul
sub
leave
lods
pop
jmp
push
push
lock
daa
(bad)
dec
pop
cld
push
mov
pop
xchg
push
fcomp
(bad)
cmp
cmp
popf
and
sahf
push
mov
mov
mov
cs
adc
or
mov
in
mov
adc
dec
mov
div
repnz
xchg
adc
xor
imul
add
mov
push
dec
iret
mov
jp
test
pop
and
sub
push
inc
imul
inc
sub
jle
retf
sub
push
dec
movs
xchg
and
nop
out
jg
dec
dec
pop
outs
cmps
push
test
mov
ds
jno
jmp
cwde
and
inc
and
lock
sub
xchg
imul
jp
adc
cmp
(bad)
stos
out
jae
jmp
pop
aad
pushf
mov
ss
les
sbb
daa
out
jmp
neg
ds
cmp
test
jg
mov
ror
sbb
fwait
xchg
jl
pop
cli
dec
stc
daa
sar
dec
xor
nop
sahf
js
sahf
pminsw
retf
and
outs
out
pop
out
xchg
das
jo
mov
fistp
mov
(bad)
xor
fld
aaa
ds
jne
adc
leave
(bad)
out
loopne
(bad)
(bad)
mov
(bad)
(bad)
sbb
add
cli
rcl
fwait
sub
(bad)
pop
gs
bound
jmp
dec
out
int
mov
jp
xchg
inc
aad
sahf
mov
stos
aad
mov
out
jmp
cmps
imul
cmps
or
sub
sub
push
jmp
sub
or
dec
cvtpi2ps
scas
rcr
xchg
inc
or
fisubr
jo
adc
push
fptan
(bad)
lahf
cmp
cwde
outs
dec
jb
iret
mov
shl
inc
fisubr
jo
(bad)
dec
mov
cmp
outs
jecxz
jbe
push
(bad)
pop
popa
cmps
iret
push
leave
or
stos
jl
inc
add
cmp
and
cmp
dec
iret
cli
inc
sti
sbb
or
nop
mov
fwait
mov
pop
push
dec
push
ins
(bad)
mov
mov
sbb
ror
add
(bad)
cmp
and
push
inc
push
or
or
imul
jg
sahf
push
pop
(bad)
mov
aad
(bad)
inc
push
xchg
pop
stos
das
pushf
ins
and
rcr
cwde
(bad)
mov
imul
cwde
push
sub
sbb
or
mov
add
dec
stos
sbb
cs
mov
xchg
and
in
cmc
mov
sti
das
ss
xor
or
sub
not
xor
scas
xchg
(bad)
sbb
or
cli
pop
mov
dec
push
pop
ret
mov
popf
test
push
dec
mov
outs
mov
cli
imul
inc
and
mov
mov
addr16
or
ffreep
out
dec
jmp
mov
dec
cld
or
in
jg
js
push
ret
push
dec
mov
adc
seto
jmp
ins
stc
outs
xchg
mov
cmp
inc
gs
ret
stos
mov
or
cmps
and
mov
outs
mov
jo
fcmovne
scas
mov
dec
fdivr
(bad)
aad
pop
pop
or
mov
shl
sbb
sub
test
or
push
or
sub
sahf
adc
mov
jmp
cld
stos
xchg
pusha
sub
mov
sub
in
dec
lods
cli
not
das
retf
mov
sbb
outs
jb
mov
push
sbb
daa
jnp
cmp
mov
jecxz
pop
pop
add
xor
inc
inc
mov
int3
call
push
mov
jmp
loopne
and
out
mov
les
mov
(bad)
into
jp
push
movs
push
push
ins
cmp
imul
jmp
das
xor
inc
mov
fmul
scas
cs
mov
lods
sbb
or
add
xlat
mov
pop
cli
nop
jae
sub
pop
lgs
jle
sub
and
loopne
imul
jo
push
stos
and
into
sub
ja
scas
push
mov
mov
repnz
adc
cmps
cli
pop
mov
retf
fnstenv
cmps
and
(bad)
cmp
retf
out
xchg
out
or
and
pop
mov
jo
test
mov
fimul
adc
or
push
aas
push
xchg
dec
dec
stos
sub
aaa
fisub
adc
and
mov
and
xchg
aas
out
clc
leave
adc
mul
sbb
jle
xchg
cmc
sahf
jmp
mov
cmp
sbb
mov
dec
call
and
call
lods
mov
dec
(bad)
pop
xor
dec
and
dec
jmp
mov
into
push
or
cmp
es
cli
icebp
fwait
push
xor
adc
ins
fild
mov
nop
push
jmp
sub
aam
sbb
test
scas
mov
aad
xchg
mov
adc
dec
imul
(bad)
jp
xor
movs
out
sub
mov
pop
mov
les
sbb
push
jg
jo
daa
fimul
cs
jbe
add
push
xchg
pop
sub
ss
(bad)
retf
jae
pusha
jp
or
iret
lds
jmp
test
or
mov
or
in
push
adc
jecxz
das
mov
jl
sbb
or
xor
mov
or
es
mov
int
push
pop
jecxz
test
lods
xor
xchg
xchg
xchg
daa
mov
shr
loop
cmp
das
scas
shr
or
cs
mov
lds
ret
jmp
push
int3
cli
dec
stc
pmullw
ds
push
or
add
and
in
push
adc
dec
xor
jmp
jns
or
retf
dec
movs
dec
jecxz
inc
popa
iret
and
mov
mov
iret
xchg
jmp
mov
or
mov
mov
retf
in
jae
mov
rcr
sbb
jmp
repz
cmp
fs
mov
sbb
aad
pop
and
outs
cmc
add
sbb
pop
add
les
or
push
xor
inc
push
or
out
mov
rcr
jg
retf
icebp
fisubr
scas
test
adc
push
retf
sbb
adc
es
mov
nop
retf
cmp
dec
repz
cs
mov
sbb
es
out
bound
mov
push
xor
fbstp
bound
pop
mov
iret
jg
aas
out
dec
inc
cmc
aaa
pop
push
fnstcw
xchg
dec
push
pop
std
pushf
gs
lahf
inc
xor
or
pcmpeqb
nop
or
jp
data16
(bad)
pop
pop
pop
call
scas
movs
stos
rcl
es
dec
cli
pop
jmp
or
sub
lahf
add
jle
outs
out
out
xchg
or
pop
mov
pop
xor
stos
add
and
sbb
pop
dec
and
js
push
sbb
mov
mov
retf
push
call
out
(bad)
or
bswap
(bad)
mov
xchg
pop
imul
stc
sbb
outs
rep
jb
frstor
adc
adc
ins
mov
add
jmp
ret
xchg
dec
push
sbb
sub
jg
inc
and
add
xlat
fbstp
adc
mov
jmp
cld
stos
xchg
jg
(bad)
mov
sub
mov
sub
in
dec
lods
cli
imul
mov
sbb
outs
jb
mov
xchg
inc
push
sbb
daa
jg
shr
add
dec
pop
pop
add
aad
scas
inc
mov
int3
call
push
mov
jmp
add
mov
aas
and
mov
(bad)
int3
jp
push
movs
push
push
ins
cmp
outs
out
repz
das
xor
cmps
mov
fmul
scas
adc
mov
pop
or
fcmovbe
mov
pop
adc
fld
pop
out
mov
jle
sub
pop
(bad)
in
movd
add
aas
and
mov
xchg
into
sub
ja
scas
mov
fwait
mov
repnz
adc
cmps
stc
pop
dec
outs
fiadd
sub
pop
dec
outs
lds
outs
dec
sbb
dec
nop
adc
xor
dec
push
sbb
mov
cmp
inc
sbb
ret
stos
mov
cld
jmp
mov
outs
jns
xor
leave
scas
mov
shl
stos
or
jno
jmp
pop
stos
outs
int
jg
jp
stos
xor
leave
sub
stos
outs
pop
inc
jnp
cdq
jmp
fidiv
adc
stos
test
ja
pop
movs
out
mov
shufps
hlt
add
jp
mov
mov
imul
push
emms
loope
loop
sbb
mov
aad
pop
add
xchg
push
(bad)
xlat
(bad)
dec
inc
fsubr
(bad)
jns
jg
dec
inc
mov
cmp
fsubrp
sbb
cli
pop
popa
stos
(bad)
dec
cmps
jp
and
sub
pushf
mov
dec
and
fild
jmp
dec
out
loopne
jbe
jns
dec
inc
mov
dec
jo
pop
xchg
mov
retf
mov
push
add
psubd
push
(bad)
aas
sahf
push
jge
cli
pusha
pop
fist
scas
push
xor
(bad)
(bad)
fiadd
or
or
adc
mov
adc
sets
mov
sbb
xor
and
fsubr
cmc
jns
ja
imul
retf
aam
outs
dec
mov
sbb
movs
mov
lahf
lds
xchg
dec
adc
sar
xor
sub
xor
pusha
call
call
leave
sbb
(bad)
mov
out
pop
call
inc
pop
out
les
pop
mov
addr16
lahf
ror
neg
xchg
xchg
mov
push
push
sub
out
xchg
dec
or
cli
loopne
push
cmps
mov
xor
mov
call
mov
sbb
push
outs
pop
mov
sti
or
jnp
mov
mov
fild
fwait
push
and
mov
sub
aas
fidiv
add
mov
add
test
add
push
fistp
add
or
and
xor
push
or
cmps
cwde
push
sbb
sbb
das
mov
pop
pop
pop
call
push
in
sahf
xor
dec
out
pop
cmp
out
ja
(bad)
mov
dec
inc
in
jg
js
shr
stos
mov
aaa
sbb
add
push
aas
push
dec
cld
mov
in
das
xor
jmp
fs
inc
push
or
scas
das
and
cmp
sub
mov
(bad)
add
fbld
bt
dec
das
lahf
cld
retf
mov
aam
jnp
push
push
xor
mov
xchg
sbb
rcl
adc
push
adc
add
cmp
mov
out
xchg
jmp
fidiv
mov
cmp
retf
hlt
add
dec
jno
lods
das
sub
dec
call
call
dec
inc
jle
outs
test
cli
pop
sub
mov
(bad)
dec
inc
fdivr
pop
and
retf
xchg
into
push
pop
cli
shl
ret
inc
imul
xchg
or
mov
xor
scas
pusha
cmp
ins
mov
sub
mov
sbb
loope
icebp
cmp
inc
mov
mov
jb
cmp
and
stc
add
sbb
or
ja
in
add
pop
sbb
repnz
pop
in
cmps
les
psubw
rcr
loopne
dec
mov
pop
je
call
mov
jmp
stos
cli
in
inc
and
sub
mov
cmp
jno
jle
scas
pop
jg
test
aam
sti
cmps
or
mov
ror
jecxz
stos
sti
call
neg
fcmove
jns
inc
adc
sbb
jmp
push
stos
outs
adc
retf
test
lahf
cmp
outs
xchg
cmp
push
cli
pop
cmps
das
cmp
mov
mov
mov
not
jb
sbb
mov
in
daa
inc
pushf
dec
ss
push
cdq
pop
adc
cmp
sub
pop
xchg
hlt
int3
pop
inc
jmp
mov
mov
in
(bad)
movs
jl
xchg
cmp
push
out
cmp
mov
ficom
retf
aaa
push
lods
jl
mov
xor
sub
inc
call
in
movs
jbe
mov
add
jb
jg
mov
mov
sub
sub
and
pop
stos
aas
gs
imul
dec
mov
and
xchg
sti
int
inc
ret
jmp
pop
out
lahf
gs
data16
lahf
pushf
scas
mov
push
fsubr
pop
imul
jmp
inc
dec
neg
dec
cmp
test
dec
cwde
lds
mov
(bad)
call
mov
or
push
sar
outs
out
(bad)
cmc
or
push
sub
xor
mov
pop
stos
add
jnp
out
pop
cmp
fidiv
call
(bad)
mov
and
ins
fwait
sbb
hlt
mov
pop
push
inc
push
movs
fs
stos
out
sbb
dec
lock
inc
adc
mov
pop
jp
pop
add
test
push
mov
pop
inc
cmp
cmps
das
xchg
or
add
dec
dec
and
das
nop
adc
retf
or
leave
lds
dec
iret
cli
inc
push
push
outs
or
aas
pop
out
call
clc
pop
mov
sub
cmp
lock
fbld
ret
stos
ins
pop
repnz
(bad)
imul
daa
mov
jb
lock
out
and
cmp
dec
iret
aaa
push
outs
call
stos
pop
xor
js
(bad)
cmps
(bad)
clc
dec
movsx
scas
das
fldcw
or
inc
lahf
(bad)
nop
pop
push
cmp
mov
ret
pop
inc
dec
xor
int3
sub
add
lock
pop
out
shr
pop
jl
not
jp
pop
loopne
ss
adc
sub
push
pop
retf
hlt
jmp
mov
mov
mov
mov
inc
retf
fild
or
dec
dec
(bad)
jne
das
fcmovnbe
retf
cmps
out
lods
call
xchg
pop
mov
cmp
das
adc
xchg
popa
shl
dec
push
neg
inc
arpl
fld
pop
xor
arpl
mov
adc
mov
adc
dec
xchg
mov
std
out
sar
push
xlat
inc
mov
aas
stos
inc
adc
jge
nop
idiv
push
fst
pop
inc
dec
shr
mov
pop
xor
(bad)
and
or
ja
mov
mov
pop
xlat
nop
div
sub
sbb
(bad)
adc
xchg
(bad)
lock
jne
das
mov
jb
mov
and
daa
lahf
xchg
scas
sbb
jle
jae
bnd
rcr
sbb
or
mov
jg
test
adc
mov
push
jmp
das
(bad)
dec
xchg
mov
mov
mov
jg
sub
out
pop
push
das
mov
mov
jne
fmul
mov
test
cli
in
cmp
cs
mov
xor
lds
pop
sbb
dec
stos
sbb
bound
mov
stos
jns
jp
mov
aam
outs
lock
fisub
mov
sub
add
push
fisttp
test
and
cmp
scas
sbb
js
cmp
aas
fs
jmp
cli
dec
ss
jle
and
aas
fsub
aas
lahf
xchg
mov
das
fistp
inc
mov
dec
cli
jmp
das
xchg
aas
mov
sbb
stos
nop
(bad)
hlt
aad
adc
add
(bad)
xchg
mov
dec
test
les
jle
xchg
into
add
(bad)
push
xchg
loope
movs
das
fistp
in
test
leave
dec
jmp
call
(bad)
mov
sahf
adc
mov
movs
sbb
inc
add
xlat
xchg
pop
xor
xchg
shr
pop
push
mov
jle
sub
push
call
imul
add
xchg
into
sub
ja
scas
les
mov
repnz
xchg
cli
fist
cmps
lock
aaa
outs
mov
and
and
lds
outs
dec
sbb
inc
packuswb
push
shl
jnp
dec
push
adc
jne
ds
inc
adc
ret
stos
mov
test
out
(bad)
mov
mov
jg
jo
fcmovne
scas
mov
dec
push
cmp
push
pop
pop
or
mov
jo
and
and
sbb
and
in
mov
jbe
or
push
add
mov
mov
jmp
cld
stos
xchg
jg
(bad)
jbe
sub
mov
sub
push
dec
lods
cli
mul
mov
sbb
outs
jb
mov
jp
xchg
inc
push
sbb
daa
jae
mov
fiadd
jecxz
pop
pop
add
test
push
inc
mov
int3
call
push
mov
jmp
js
push
cmc
out
mov
pop
dec
dec
mov
(bad)
lds
push
movs
jmp
dec
mov
outs
das
mov
mov
dec
push
and
xchg
jb
jp
xchg
xchg
and
mov
push
xchg
sub
out
test
mov
add
arpl
mov
es
cli
dec
outs
das
aad
inc
(bad)
jmp
data16
call
xor
push
cli
enter
jnp
mov
pop
out
sub
adc
push
inc
dec
xor
in
stos
out
cmc
repz
jp
sub
pop
and
inc
adc
mov
ins
adc
mov
loope
gs
movs
sub
mov
inc
fmul
jp
or
jae
adc
and
mov
pop
stos
imul
retf
sub
jecxz
test
pop
jbe
cmp
xlat
and
push
fucomip
int3
adc
inc
mul
push
jp
xchg
mov
dec
(bad)
(bad)
aaa
adc
inc
xchg
int
or
cmp
mov
lods
fwait
mov
add
lahf
push
movs
push
test
add
cmp
sub
outs
(bad)
jo
enter
mov
(bad)
mov
sbb
(bad)
push
cmp
xor
add
mov
sti
mov
cmp
movntq
cmps
cmp
adc
xchg
js
push
cs
iret
dec
push
(bad)
pop
push
je
shrd
mov
jge
(bad)
scas
fist
inc
jg
aad
pop
cmps
xchg
lods
loopne
out
sbb
enter
push
jp
jg
jae
pusha
xor
xor
jp
lahf
mov
ror
mov
sbb
imul
jne
neg
loope
das
mov
in
stos
out
pop
lock
sahf
adc
jnp
mov
dec
repz
sub
outs
dec
mov
dec
mov
adc
cmps
xor
sbb
addr16
adc
rcl
mov
cmovne
das
sub
dec
push
jne
fmul
adc
rcr
stos
mov
sbb
bound
fdivr
les
mov
push
shl
scas
mov
cli
push
imul
dec
outs
jp
hlt
iret
ret
jnp
cdq
test
sub
xor
inc
fidiv
or
mov
add
mov
sar
cmp
push
movlps
adc
icebp
or
xchg
inc
(bad)
mov
pop
sti
jmp
inc
(bad)
iret
call
cs
cmps
stos
sub
das
into
and
hlt
add
int
es
inc
sbb
push
pop
adc
lahf
push
stos
xchg
pop
js
xchg
repz
xor
pop
sbb
mov
xor
mov
jge
mov
imul
cwde
push
mov
xchg
popa
cmp
jbe
daa
mov
xchg
add
jp
popf
mov
cmp
outs
fs
mov
std
xor
jmp
pop
or
sub
sub
lahf
sub
mov
sub
in
dec
lods
cli
idiv
mov
sbb
outs
jb
mov
jp
xchg
inc
push
sbb
daa
push
push
out
add
jecxz
pop
pop
add
inc
retf
mov
int3
call
push
mov
jmp
xchg
sbb
out
mov
mov
dec
mov
(bad)
jp
push
movs
push
push
ins
cmp
addr16
(bad)
inc
lock
das
xor
cmp
fmul
scas
inc
mov
mov
add
xlat
test
pop
cmps
nop
jae
sub
pop
xlat
mov
jle
sub
push
(bad)
jl
es
imul
add
xchg
into
sub
ja
scas
das
mov
mov
repnz
jp
mov
retf
pop
fisubr
and
lahf
cmp
retf
dec
mov
sbb
pop
jle
jnp
dec
push
rsm
sbb
das
jne
ds
inc
adc
and
stos
mov
ins
jmp
mov
outs
call
fcmovne
scas
mov
dec
mov
pop
pop
or
mov
fwait
das
xor
and
sbb
and
jbe
or
cmp
mov
nop
sbb
cli
dec
push
stos
mov
arpl
jge
retf
xchg
data16
mov
adc
sbb
cmps
fisubr
dec
test
sahf
jp
out
scas
pop
scas
dec
add
fist
push
jno
sahf
inc
ficomp
inc
fcomp
outs
cdq
hlt
(bad)
adc
inc
retf
dec
or
xlat
sub
xchg
test
dec
mov
jg
or
xchg
pop
pop
mov
aad
stos
mov
mov
xor
or
pop
sbb
adc
push
lea
call
mov
jmp
inc
(bad)
or
jg
outs
jnp
cmps
mov
outs
movs
out
sub
xchg
out
cmc
pop
sbb
sbb
rol
mov
cmp
lock
inc
inc
inc
cmp
sub
jns
mov
cmp
mov
add
lods
mov
or
dec
hlt
add
xchg
into
or
test
in
mov
mov
scas
pop
iret
sub
push
mov
retf
sbb
dec
sar
out
pop
rcr
dec
mov
retf
mov
jne
push
sbb
shl
fwait
push
adc
xor
movzx
imul
jnp
dec
mov
hlt
mov
xchg
push
sbb
aas
jle
aad
pop
add
ret
mov
iret
mov
mov
lahf
loope
pop
push
mov
neg
(bad)
lock
push
adc
mov
stos
xchg
gs
inc
retf
xchg
pusha
mov
xlat
mov
movups
jb
lock
cmps
mov
jns
push
sbb
retfw
test
push
mov
dec
iret
cmp
test
sbb
add
sar
inc
scas
out
nop
push
mov
test
pop
lds
aad
(bad)
mov
scas
or
xor
sub
scas
or
mov
dec
jmp
or
psadbw
(bad)
mov
(bad)
in
call
mov
jae
xor
fwait
push
push
cdq
je
(bad)
loopne
out
(bad)
shl
fidiv
sub
mov
neg
fisubr
add
rol
mov
mov
jmp
xchg
xchg
in
(bad)
fild
aas
out
mov
jp
outs
mov
jae
push
jo
push
xor
fwait
aad
(bad)
mov
sti
(bad)
inc
retf
jne
nop
fisubr
jo
fist
mov
das
outs
out
mov
loopne
ds
dec
push
and
repnz
jo
pusha
xchg
pop
movs
xor
xor
push
cmc
psubsb
addr16
and
pop
push
lahf
fiadd
cs
stos
sti
dec
ja
and
stos
in
dec
pop
add
jnp
mov
xchg
out
pushf
gs
mov
pop
xor
lds
bound
mov
adc
das
inc
sbb
push
cmp
mov
xchg
loop
mov
sub
mov
adc
test
into
test
daa
and
pop
or
pop
aad
(bad)
mov
scas
adc
xor
aas
cmp
jmp
loop
pop
xor
sub
adc
mov
(bad)
push
loop
pop
jne
aaa
adc
jmp
outs
outs
xor
xchg
mov
sub
sbb
scas
xlat
(bad)
jne
and
div
xchg
adc
cmc
push
adc
mov
and
xchg
out
pushf
gs
into
jo
fcmovnbe
push
bound
xor
fwait
push
adc
mov
adc
cmp
push
push
push
cmp
ds
push
arpl
sbb
aas
jle
adc
pop
pushf
cmc
(bad)
mov
sbb
je
sbb
mov
pusha
mov
lds
bound
sbb
fisttp
ret
lahf
mov
stos
out
into
sahf
test
mov
push
repz
jecxz
adc
add
ds
xchg
not
daa
loop
xor
jle
jle
jle
inc
mov
mov
push
je
pop
ja
add
xor
and
pop
jg
ret
push
movs
inc
mov
lds
aad
in
cmc
lock
div
xchg
arpl
outs
arpl
lds
aad
pop
jp
sysret
pop
add
push
aas
xor
jle
sti
inc
(bad)
mov
das
outs
loop
mov
adc
neg
jns
and
sbb
cmps
inc
mov
mov
movs
sti
mov
sub
daa
xchg
jle
out
loope
lods
and
shl
pop
xor
stos
cs
mov
dec
adc
xor
idiv
and
sbb
cmps
inc
fist
cmp
stos
xchg
pusha
out
movs
xor
adc
loopne
rcl
xor
loop
add
test
xchg
jle
xor
adc
loopne
shl
mov
pop
inc
test
out
mov
mov
stos
push
sub
jecxz
out
repz
jbe
jne
ds
xchg
movs
stc
xchg
in
(bad)
lock
add
and
mov
arpl
sub
jmp
inc
inc
mov
adc
dec
dec
nop
cs
jo
adc
fdivp
cli
aad
pop
pushf
cmc
mov
push
aas
out
mov
jp
retf
pop
outs
jne
neg
push
dec
mov
push
push
cdq
je
(bad)
pop
rcl
jle
jle
jbe
mov
ret
mov
mov
pop
mov
xchg
inc
dec
jmp
mov
push
jnp
pop
inc
xchg
xlat
cmp
shl
sbb
aad
in
dec
push
xor
adc
push
pop
bound
push
sbb
jbe
loope
inc
mov
push
pop
xor
sub
jmp
dec
dec
outs
cmp
jo
adc
movs
outs
pop
ja
and
mov
ss
shl
xchg
push
mov
xchg
(bad)
dec
cmp
and
push
cmc
pop
adc
shr
jb
mov
dec
stos
outs
fidiv
sub
sti
pop
pop
pop
and
xchg
pop
pushf
cmc
pop
ss
rcl
sub
mov
sbb
jo
rcl
push
movs
jmp
mov
out
ret
dec
es
sub
pop
sub
hlt
mov
daa
pop
movs
inc
dec
mov
pop
movups
loopne
imul
out
mov
sbb
ret
movs
push
xchg
repnz
addr16
fidivr
scas
adc
xor
sub
(bad)
push
call
stos
or
das
lock
push
addr16
sahf
mov
inc
mov
retf
call
mov
pop
rsm
adc
cmc
push
ss
(bad)
retf
push
xchg
mov
inc
ds
call
fwait
(bad)
dec
fimul
jne
jnp
mov
cmp
outs
xchg
mov
das
pop
lds
cmc
dec
mov
mov
sahf
sbb
adc
push
nop
push
jne
mov
jnp
jg
(bad)
iret
jle
cmp
retf
cs
shl
les
daa
and
stos
iret
(bad)
pop
aad
sbb
and
push
div
cmps
gs
jne
and
mov
test
into
jmp
scas
das
(bad)
xor
mov
jb
out
jg
scas
xor
xchg
add
bswap
add
xlat
xor
test
jmp
sbb
add
div
cmps
gs
jne
sbb
mov
pop
aas
sub
in
xchg
add
dec
jg
or
movs
fadd
adc
das
iret
sar
jb
xchg
bound
mov
out
pop
jae
xor
outs
dec
(bad)
jecxz
cmp
les
jg
jo
mov
mov
neg
or
sahf
xchg
and
(bad)
adc
jbe
ret
inc
inc
dec
adc
mov
test
fist
aad
repnz
mov
or
call
push
pop
jnp
push
xor
out
daa
jbe
mov
sahf
jp
cs
lds
mov
add
sar
lahf
sub
loopne
ds
scas
icebp
inc
xchg
(bad)
pop
mov
stos
out
cmc
inc
ja
iret
imul
fistp
fwait
jg
test
sub
fwait
cmp
cli
call
(bad)
pop
outs
movs
ficomp
mov
mov
xchg
mov
inc
and
jecxz
sub
imul
xor
xchg
xor
adc
mov
mov
inc
and
pop
mov
or
(bad)
jne
aaa
adc
icebp
inc
mov
stos
lahf
je
pop
jns
and
stos
repz
loop
or
icebp
pop
rcl
pop
mov
sub
bound
mov
add
cmp
mov
shr
jo
shl
scas
push
scas
mov
pushf
in
inc
cmp
adc
dec
(bad)
mov
lahf
gs
or
movs
sti
pop
pop
lds
retf
fimul
pop
sti
(bad)
inc
jle
aaa
pop
out
jle
cmp
mov
iret
jle
cli
retf
das
dec
ss
shr
mov
sub
push
data16
lahf
cdq
scas
xchg
sti
shl
lds
stos
or
xchg
jmp
addr16
jp
outs
push
jbe
sbb
repnz
iret
mov
pop
and
push
cmp
out
push
shl
mov
bound
mov
push
outs
outs
xor
out
fimul
ss
rcl
mov
jp
pop
push
cmp
stc
lahf
jbe
xchg
inc
mov
pop
fwait
out
fidiv
addr16
imul
cmp
inc
sub
arpl
lahf
jno
xchg
sti
mov
out
stos
pop
add
add
cmp
mov
xchg
out
jle
inc
jne
imul
pop
adc
inc
in
(bad)
dec
mov
xchg
jecxz
nop
and
mov
outs
arpl
pusha
cs
movs
jg
inc
cmp
pop
in
jecxz
jno
icebp
or
adc
outs
fisubr
add
dec
push
(bad)
inc
push
xor
cmp
repz
inc
cmp
adc
mov
adc
nop
inc
mov
or
scas
call
das
das
lock
scas
sbb
mov
push
scas
xlat
(bad)
jne
ds
cs
push
cli
aad
aas
add
dec
jmp
lahf
in
jno
dec
dec
lods
pop
sub
or
fcmovnbe
inc
fnstcw
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
or
jg
(bad)
jp
push
pop
mov
sub
sbb
mov
cli
pop
jmp
mov
mov
cmp
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
push
das
ficomp
retf
cmp
dec
mov
jnp
mov
outs
stos
pop
mov
cs
sti
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
gs
jo
pusha
push
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
xor
sbb
cmc
push
cli
pop
jmp
inc
stos
outs
call
mov
mov
sub
in
or
cli
pop
jmp
pop
mov
call
scas
movs
mov
aad
sbb
or
cli
loopne
das
fidivr
retf
pop
stos
outs
call
scas
movs
cmps
dec
iret
cmp
sub
sbb
or
cli
pop
repz
fidivr
xor
nop
call
scas
pop
mov
sub
sbb
or
jecxz
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
inc
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
adc
mov
pop
stos
outs
call
mov
mov
sub
sbb
or
cli
pop
jmp
pop
mov
call
scas
pop
inc
dec
iret
and
sub
in
cmc
psubd
repz
fidivr
xor
jbe
jg
jo
lahf
push
movs
cmps
dec
iret
cmp
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
push
pop
cmps
dec
iret
cmp
sub
sbb
or
cli
push
jmp
pop
stos
nop
call
scas
pop
cmps
dec
iret
cmp
sub
sbb
or
cli
loopne
das
fisub
retf
mov
mov
pop
mov
xor
sbb
cmc
psubd
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
cmc
push
cli
pop
jmp
pop
stos
outs
cmp
test
dec
iret
vcvtsi2sd
add
or
add
rcl
mov
jg
(bad)
jp
push
pop
mov
sub
sbb
or
cli
pop
jmp
pop
push
jbe
jg
jo
xchg
pop
inc
dec
(bad)
cmp
sub
sbb
cmc
psubd
jmp
inc
stos
outs
call
scas
pop
mov
sub
sbb
or
add
aas
retf
pop
mov
call
scas
pop
mov
sub
sbb
or
cli
loopne
das
fidivr
retf
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
mov
call
push
inc
mov
sub
sbb
or
cli
pop
jmp
mov
mov
pop
inc
dec
iret
cmp
sub
sbb
cmc
lock
aas
retf
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
nop
call
scas
movs
cmps
dec
iret
cmp
xor
sbb
cmc
push
cli
pop
jmp
inc
stos
outs
call
mov
mov
sub
in
or
cli
loopne
das
fidivr
xor
outs
call
push
pop
mov
aad
sbb
or
cli
loopne
das
fisub
retf
mov
jne
jp
push
pop
mov
sub
add
or
add
aas
retf
pop
stos
outs
gs
xchg
jp
push
inc
mov
sub
sbb
adc
cli
pop
adc
mov
inc
stos
outs
call
push
pop
cmps
dec
iret
cmp
sub
sbb
or
cli
loopne
fidivr
retf
pop
stos
outs
call
scas
pop
mov
aad
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
nop
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
cmp
test
dec
iret
cmp
xor
sbb
cmc
psubd
jmp
pop
push
outs
call
scas
pop
mov
aad
sbb
or
cli
loopne
das
fidivr
retf
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
adc
cli
pop
adc
dec
mov
adc
pop
cmps
dec
iret
cmp
sub
sbb
or
cli
pop
repz
fidivr
xor
outs
call
push
pop
mov
sub
sbb
or
cli
pop
jmp
inc
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
repz
fidivr
xor
outs
call
scas
pop
mov
sub
sbb
or
cli
push
jmp
pop
stos
nop
call
mov
mov
aad
sbb
or
add
ror
mov
jg
jo
lahf
push
movs
mov
xor
sbb
cmc
psubd
repz
fidivr
xor
outs
xor
lahf
push
pop
cmps
dec
iret
cmp
aad
sbb
or
add
rcl
mov
jg
(bad)
jp
push
pop
mov
sub
add
or
add
rcl
mov
jg
jo
lahf
push
movs
inc
push
iret
cmp
aad
sbb
or
cli
loopne
rcr
ror
mov
adc
movs
cmps
dec
iret
cmp
xor
sbb
cmc
lock
pop
jmp
pop
stos
outs
data16
pop
mov
aad
sbb
or
cli
pop
repz
fidivr
xor
nop
cmp
test
dec
(bad)
cmp
sub
sbb
or
cli
push
jmp
pop
push
nop
xor
xchg
pop
inc
push
iret
cmp
aad
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
jecxz
jmp
mov
jne
jp
push
pop
mov
sub
in
or
jecxz
jmp
pop
push
outs
call
scas
inc
mov
sub
sbb
or
cli
loopne
das
fcmovb
retf
pop
stos
outs
call
scas
pop
inc
dec
iret
cmp
sub
sbb
or
cli
pop
jmp
pop
stos
nop
call
scas
pop
mov
xor
sbb
cmc
push
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
in
or
cli
pop
jmp
pop
push
jbe
jg
jo
lahf
push
movs
mov
sub
sbb
or
cli
push
jmp
pop
stos
outs
gs
(bad)
jp
push
pop
mov
sub
sbb
or
jecxz
jmp
inc
stos
outs
call
mov
mov
sub
in
or
cli
loopne
das
fidivr
xor
nop
cmp
test
dec
iret
cmp
sub
sbb
or
jecxz
jmp
pop
stos
outs
call
scas
inc
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
cmp
test
dec
iret
cmp
sub
sbb
or
cli
pop
jmp
pop
push
jbe
jg
jo
lahf
push
pop
mov
sub
sbb
or
jecxz
jmp
pop
stos
outs
call
scas
pop
mov
xor
sbb
cmc
psubd
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
loopne
das
fidivr
xor
outs
call
scas
pop
mov
sub
sbb
adc
cli
pop
adc
mov
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
loopne
fidivr
retf
pop
stos
outs
call
scas
inc
mov
sub
sbb
or
cli
pop
jmp
pop
stos
jbe
jg
jo
lahf
push
movs
cmps
dec
iret
cmp
xor
sbb
cmc
psubd
jmp
pop
stos
nop
call
scas
pop
mov
aad
add
or
add
aas
xor
outs
gs
(bad)
jp
xchg
scas
pop
mov
sub
add
or
add
aas
xor
jbe
jg
jo
xchg
pop
inc
push
iret
cmp
aad
sbb
or
cli
pop
repz
fidivr
xor
jbe
jg
jo
xchg
pop
inc
push
iret
cmp
aad
sbb
or
cli
push
jmp
pop
stos
nop
gs
(bad)
jp
jae
pop
mov
sub
sbb
or
jecxz
jmp
pop
stos
nop
call
scas
pop
inc
dec
(bad)
cmp
sub
sbb
or
cli
loopne
fidivr
retf
inc
stos
outs
call
mov
mov
sub
sbb
or
cli
pop
jmp
mov
jne
arpl
push
iret
cmp
aad
add
or
add
aas
xor
nop
cmp
test
dec
iret
cmp
sub
sbb
or
cli
loopne
das
fidivr
ror
pop
push
outs
cmp
test
mov
and
sub
in
or
cli
pop
jmp
pop
push
outs
data16
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
cmp
test
push
iret
cmp
aad
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
in
or
cli
pop
jmp
pop
push
jbe
jg
jo
xchg
pop
inc
dec
iret
cmp
sub
sbb
or
cli
pop
repz
fidivr
xor
nop
cmp
test
dec
(bad)
cmp
sub
add
or
add
aas
xor
nop
call
scas
pop
mov
sub
sbb
or
jecxz
jmp
mov
jne
jp
push
inc
mov
aad
sbb
or
cli
push
jmp
inc
stos
outs
call
scas
pop
mov
sub
sbb
adc
cli
pop
adc
mov
pop
stos
outs
cmp
test
dec
(bad)
cmp
sub
sbb
or
cli
pop
jmp
mov
mov
pop
inc
push
iret
cmp
aad
sbb
or
jecxz
jmp
pop
push
outs
call
scas
movs
cmps
dec
iret
cmp
xor
sbb
cmc
psubd
jmp
pop
stos
nop
or
pop
mov
aad
sbb
adc
cli
pop
adc
mov
pop
stos
outs
data16
pop
mov
sub
in
adc
cli
pop
adc
mov
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
in
or
jecxz
jmp
mov
mov
pop
inc
push
iret
cmp
aad
sbb
or
jecxz
jmp
inc
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
loopne
fidivr
retf
pop
stos
outs
or
pop
mov
sub
sbb
or
cli
pop
jmp
mov
jne
jp
push
pop
cmps
dec
iret
cmp
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
outs
test
jl
jno
pop
test
fimul
call
shl
mov
jns
data16
cli
ja
inc
mov
xor
sbb
jp
push
mov
jg
arpl
jbe
jnp
jb
dec
sti
pop
ret
outs
fcomp
out
(bad)
sbb
sub
xor
das
mov
jne
pop
imul
into
sub
jle
mov
enter
mov
inc
mov
lahf
jno
pop
xchg
aas
test
push
(bad)
jg
loop
lahf
add
lods
dec
stos
jge
je
inc
or
lods
movs
and
sbb
(bad)
adc
and
out
dec
jmp
xchg
dec
sbb
cmp
pop
lds
dec
mov
jnp
push
or
sub
pop
pushf
inc
mov
xor
mov
icebp
add
sbb
es
push
mov
or
jno
sbb
pop
stos
imul
fcomp
or
or
jle
mov
pop
mov
pop
test
gs
or
cmp
mov
xor
or
imul
mov
add
sub
mov
retf
jle
cmp
push
pop
fld
call
das
fadd
fimul
fisttp
sub
adc
jnp
dec
sahf
inc
jmp
in
lahf
cmp
jnp
pop
call
int3
push
mov
dec
mov
sbb
xor
pop
(bad)
push
ret
sbb
adc
push
stos
adc
jnp
pop
mov
pop
mov
or
inc
retf
in
or
sbb
jp
ins
mov
sar
pop
mov
xchg
dec
movs
daa
into
pop
lds
ror
out
test
push
(bad)
jnp
cmp
dec
mov
push
mov
cs
aas
(bad)
mov
retf
jle
cmp
ds
jle
mov
pop
nop
push
in
lock
daa
aad
and
sub
sbb
or
jle
jns
mov
inc
jmp
sbb
adc
fldenv
out
or
jle
mov
jl
arpl
xchg
jnp
pmulhw
cmc
sub
fwait
sub
push
loopne
lock
lahf
outs
lods
push
mov
aad
call
push
out
adc
jmp
cwde
sub
push
loopne
lock
lahf
outs
out
jae
dec
dec
lds
outs
in
mov
sbb
adc
(bad)
paddsw
scas
xor
dec
mov
imul
mov
or
cs
ret
sbb
jne
jle
outs
pushf
pop
movs
jle
test
dec
cmc
cmp
stc
sbb
sar
mov
or
outs
mov
cwde
or
or
iret
sub
sub
sbb
sub
pop
mov
or
or
outs
stos
or
push
fisttp
in
cmp
pop
pushf
jnp
jle
lods
pop
(bad)
dec
call
pop
lds
fimul
fisttp
sub
and
push
lahf
adc
push
mov
dec
movs
daa
into
pop
lds
fidivr
in
jnp
push
fmul
retf
or
push
out
sub
jns
imul
mov
jle
dec
mov
aas
mov
or
or
cmp
dec
xchg
outs
mov
enter
call
ret
pop
mov
dec
out
outs
mov
mov
mov
cmp
outs
cmc
jle
(bad)
cmp
sbb
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
mov
fst
pop
repnz
out
dec
dec
sbb
sbb
jp
sbb
mov
fucomi
ficom
cs
mov
sub
jp
jp
or
stos
outs
call
aas
ficomp
pop
retf
fistp
call
fistp
jmp
fistp
mov
mov
push
clc
stc
rol
cdq
lock
inc
pop
mov
scas
cmp
mov
pop
call
outs
popf
aas
stc
or
rol
mov
pop
retf
outs
aas
cdq
pop
rcl
jge
aas
fimul
jg
pop
fcmovu
dec
fisttp
out
dec
out
sub
push
dec
jg
dec
mov
sub
lods
mov
or
fstp
dec
das
stos
(bad)
pop
mov
aas
jmp
jmp
dec
iret
cmp
sbb
(bad)
or
test
je
inc
call
popf
push
or
or
dec
scas
sbb
mov
mov
pop
cli
das
stos
sbb
adc
scas
jno
js
push
fstp
scas
pop
out
jp
mov
jp
sahf
push
fisttp
cli
out
in
pop
jle
sbb
dec
bound
sbb
iret
sub
fisubr
jmp
call
cmps
and
dec
iret
cmp
outs
ror
pop
pop
push
fidivr
cs
mov
jg
jnp
mov
out
jne
sub
stos
push
mov
cmp
mov
fdivrp
add
(bad)
mov
sbb
scas
mov
dec
jge
mov
xlat
divps
jecxz
dec
xor
mov
lahf
mov
jb
lods
cmp
dec
(bad)
mov
jnp
stos
dec
push
cmp
(bad)
mov
dec
aaa
pop
cmps
or
pop
xchg
jnp
fstp
dec
sub
jecxz
jp
adc
loopne
push
pop
lock
(bad)
fst
ret
xchg
pop
cmp
jl
mov
jp
xor
scas
pop
mov
(bad)
sbb
pop
sub
or
pop
enter
add
stos
push
scas
jge
jmp
shl
call
fcmovbe
cmc
cmp
push
out
leave
js
sub
mov
dec
iret
cmp
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
dec
mov
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
das
fadd
call
scas
pop
mov
inc
shr
pop
psubd
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
stc
jmp
pop
fist
push
pop
jmp
cmp
mov
sbb
or
pop
mov
pop
out
cmp
int
mov
jg
sbb
jg
out
pop
in
push
sub
dec
mov
jb
outs
outs
cli
jno
pop
scas
pop
test
sbb
adc
jmp
lahf
or
aas
int3
sub
pop
fild
iret
push
dec
mov
fidivr
pushf
and
pop
stos
cmp
adc
blcmsk
jp
cmp
cmp
sub
ins
fisttp
jnp
js
dec
cli
pop
scas
dec
call
loope
jmp
(bad)
aas
int3
and
sbb
or
cli
pop
out
fidivr
cmps
dec
mov
jg
(bad)
jp
cmp
sbb
sub
lahf
pop
retf
pop
mov
outs
out
adc
mov
aas
int3
dec
mov
je
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
cli
imul
fbstp
retf
cmp
pop
in
pop
mov
dec
mov
sbb
or
cli
pop
jmp
pop
fmul
push
jecxz
pop
mov
push
sbb
data16
cdq
cmp
mov
dec
mov
jmp
cmp
or
cli
jle
das
mov
retf
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
jnp
sbb
das
xchg
dec
retf
xor
add
or
cld
push
in
add
ds
pop
pop
test
out
sbb
outs
psubd
sahf
das
fidivr
scas
dec
mov
jg
(bad)
jp
push
pop
mov
inc
out
sbb
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
sar
(bad)
jp
push
scas
or
dec
iret
cmp
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
jbe
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
or
or
cmp
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
cmp
jg
fstp
lahf
push
pop
mov
sub
dec
lea
shrd
fidivr
retf
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
mov
and
jb
xchg
gs
push
(bad)
jp
xchg
push
movs
inc
mov
cmp
aad
cmp
loopne
fs
xor
je
xor
pusha
xchg
lods
pop
inc
mov
xlat
and
out
sbb
cmc
lock
loopne
das
fcmovb
xor
ins
call
mov
inc
mov
je
aad
sbb
cmc
lock
loopne
jecxz
shl
xor
movs
push
lahf
iret
cmp
jge
in
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
sub
popf
mov
pop
stos
outs
test
jne
test
outs
scas
pop
mov
aad
in
jns
cli
pop
jmp
mov
mov
pusha
xchg
push
movs
inc
mov
cmp
and
in
cmc
lock
aas
mov
xor
lahf
loop
movs
inc
mov
lds
aad
sbb
loopne
shl
pop
js
xor
pusha
xchg
push
ja
popf
xor
and
adc
add
lock
pop
daa
shl
mov
and
test
push
movs
inc
mov
fistp
in
cmc
lock
aas
out
inc
mov
jne
jp
push
xor
and
inc
sbb
or
add
shl
xor
pusha
mov
mov
aad
in
dec
psubd
jmp
sub
(bad)
jp
aaa
fsub
dec
iret
cmp
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
jmp
pop
stos
outs
call
scas
or
sub
dec
dec
psubd
das
fidivr
retf
pop
stos
outs
retf
(bad)
jp
cmp
cmp
sub
sbb
or
cli
pop
jmp
rsm
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
retf
(bad)
jp
push
pop
mov
jp
sbb
or
cli
pop
jmp
mov
mov
jp
push
pop
mov
sub
sbb
or
pop
jmp
pop
stos
outs
retf
(bad)
jp
push
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
retf
(bad)
jp
push
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
rsm
outs
call
call
dec
iret
cmp
sub
sbb
or
cli
pop
jmp
rsm
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
pop
psubd
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
stos
pop
jmp
rsm
outs
call
scas
pop
mov
sub
sbb
or
stos
pop
jmp
pop
cli
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
pop
int3
cmp
sub
sbb
sbb
inc
repz
gs
jl
test
or
stos
pop
loope
sti
sbb
mov
add
cmp
pop
(bad)
jl
push
mov
cdq
addr16
mov
ins
pushf
pop
test
add
xor
aaa
aam
(bad)
inc
icebp
jno
jno
scas
inc
out
adc
jmp
sub
(bad)
xor
add
push
in
bound
pop
or
cli
pop
jmp
pop
stos
nop
jmp
jmp
fild
scas
gs
jne
pop
lods
test
mov
ins
call
pop
cmc
or
sbb
sub
cmp
dec
mov
jmp
mov
outs
stos
pop
mov
fcomi
sbb
or
mov
int3
dec
mov
jns
mov
ror
ret
repnz
add
movs
dec
rol
inc
jb
jne
test
loopne
shl
aad
repnz
add
pusha
xchg
push
lods
xor
inc
mov
inc
jb
jae
xor
rol
inc
ret
ss
repnz
repnz
add
adc
inc
mov
inc
je
jo
sub
ror
mov
shl
add
push
movs
pop
lds
push
inc
je
ins
cdq
fadd
rcr
int3
(bad)
in
sbb
pop
stc
cmp
inc
fstp
inc
jbe
imul
dec
fistp
cs
fdiv
pminsw
sbb
ins
xchg
push
xchg
sub
pop
scas
dec
pop
js
push
adc
fsubr
out
pop
test
inc
movs
jge
push
mov
xchg
xchg
add
leave
push
(bad)
and
fdiv
add
adc
inc
rcl
pop
jae
arpl
mov
rcl
ret
fdiv
add
adc
test
hlt
xor
push
jo
pusha
xchg
nop
add
leave
push
shl
fild
das
test
inc
movs
jge
outs
call
lods
inc
loopne
shl
std
aad
cmp
sub
imul
dec
mov
mov
outs
jmp
sub
fdivr
int3
or
sbb
imul
pop
pushf
imul
push
mov
fs
adc
push
aad
sahf
xor
pusha
xchg
push
movs
inc
mov
lds
(bad)
jp
push
pop
mov
sub
sbb
or
cli
or
adc
mov
sbb
jmp
sub
inc
mov
xchg
bound
jbe
lods
push
mov
(bad)
lods
dec
stos
or
push
out
sbb
jle
mov
mov
jg
push
test
sub
mov
test
cli
pmulhw
dec
(bad)
push
fidiv
fild
xchg
jne
popa
xchg
into
and
fild
jmp
call
dec
mov
jnp
mov
outs
stos
pop
mov
stos
outs
call
mov
pop
mov
outs
push
jp
dec
outs
shr
cmp
or
sbb
jmp
and
jl
ins
imul
int
std
sbb
call
cmp
mov
xchg
bound
ja
inc
mov
mov
push
repz
jecxz
adc
add
xor
and
jb
bound
jbe
inc
mov
mov
lds
aad
sbb
(bad)
and
enter
push
jbe
inc
mov
movs
and
xor
mov
cmps
push
push
mov
sar
mov
lds
out
sbb
mov
lea
out
cwde
pop
sbb
sub
cmp
std
xchg
jp
pop
leave
call
das
les
xchg
push
sbb
sub
aas
mov
jmp
pop
scas
dec
mov
call
pop
fisubr
retf
dec
stos
pop
push
jecxz
repz
lahf
pop
scas
dec
mov
nop
gs
pop
fisubr
retf
inc
movs
pop
adc
mov
push
mov
and
std
jo
out
aad
lds
mov
movs
push
adc
test
push
mov
and
nop
gs
jle
test
adc
and
aaa
mov
mov
cmc
lock
bound
iret
cmp
aam
xor
pop
jmp
pop
push
pusha
xchg
jo
jbe
lahf
push
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
fwait
jle
mov
imul
(bad)
in
sbb
or
fdivr
dec
mov
jnp
mov
outs
stos
pop
cmps
inc
retf
fld
jmp
sti
push
or
sbb
sub
jno
dec
mov
jp
mov
outs
stos
pop
les
cmp
sub
sbb
or
cld
sbb
and
inc
dec
iret
cmp
sub
sbb
or
cli
pop
jmp
pop
stos
nop
jbe
out
jmp
cli
push
retf
das
stos
pop
mov
outs
imul
scas
sub
cmp
or
sbb
jmp
cs
pop
arpl
ss
outs
push
jp
dec
mov
cmp
or
sbb
jmp
sub
pop
mov
ins
imul
dec
push
std
sbb
jmp
cmp
mov
ins
push
mov
cmp
or
sbb
jmp
cmp
sub
pop
mov
bound
ja
inc
mov
mov
pop
repnz
loop
adc
add
xor
and
jae
arpl
jbe
inc
mov
mov
push
repz
jecxz
adc
add
xor
and
jae
arpl
jbe
inc
mov
mov
push
repz
jecxz
adc
add
xor
and
jae
arpl
jbe
inc
mov
mov
push
repz
jecxz
adc
add
xor
and
fnstsw
int
cmp
push
mov
push
lock
idiv
ins
cwde
sbb
jo
pusha
gs
jne
inc
mov
cmps
and
xor
dec
stos
pop
pop
scas
dec
mov
mov
jne
gs
xchg
jo
test
adc
not
in
adc
iret
and
xor
pop
mov
lods
push
mov
pop
cmc
psubd
or
retf
dec
mov
add
or
mov
inc
stos
dec
movs
aas
aad
or
push
jl
dec
out
cmp
push
jp
mov
retf
ds
and
mov
push
adc
call
iret
cmp
repnz
add
adc
aas
aad
ficomp
jmp
sti
dec
out
into
inc
mov
cmp
lods
mov
mov
pop
scas
dec
mov
sub
stc
loop
call
stos
pop
call
dec
fild
shr
lods
dec
scas
pop
pushf
out
or
cli
pminsw
fld
retf
dec
stos
(bad)
sbb
or
stc
or
dec
mov
sbb
or
cli
pminsw
pop
lods
dec
mov
sub
jp
imul
iret
sub
cmp
popa
rcr
retf
dec
stos
pop
cdq
ins
mov
imul
mov
cld
stc
or
sbb
and
xor
in
jge
and
inc
mov
ret
and
lock
add
int
movs
pop
xor
pusha
test
and
mov
add
xlat
popa
xchg
inc
and
xor
pusha
test
and
and
mov
lock
add
adc
and
xor
pop
xchg
test
loopne
(bad)
mov
and
adc
add
cmc
add
ret
inc
mov
and
jno
and
shl
xor
and
xor
jg
(bad)
jp
inc
shl
mov
or
cli
pop
jmp
pop
xchg
in
cmc
lock
mov
sub
sbb
or
cli
pop
out
aaa
ret
push
stos
lods
stos
outs
call
scas
pop
mov
aad
in
cmc
lock
aas
retf
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
fwait
jle
mov
imul
fisubr
in
sbb
or
fdivr
test
cwde
jge
lea
push
int
fsubr
in
sbb
or
sbb
leave
dec
mov
jl
mov
imul
cld
or
sbb
fidivr
into
dec
mov
jnp
mov
outs
stos
pop
mov
imul
sti
push
or
sbb
sub
cmp
dec
mov
jnp
mov
sbb
pop
mov
das
jmp
out
sub
cmp
dec
mov
jnp
mov
outs
stos
pop
mov
das
jmp
xchg
push
cmps
add
dec
mov
jns
mov
test
bound
mov
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
xor
fistp
iret
or
sbb
jmp
das
stos
pop
mov
cmc
lock
pop
scas
sub
cmp
or
sbb
jmp
das
stos
pop
mov
div
add
mov
pop
scas
sub
cmp
or
sbb
jmp
das
stos
pop
mov
shl
or
dec
mov
cmp
or
sbb
jmp
cmp
sub
pop
mov
(bad)
repnz
dec
mov
cmp
or
sbb
jmp
cmp
sub
pop
mov
(bad)
std
je
mov
pop
lods
sub
cmp
or
sbb
jmp
cmp
sub
pop
mov
outs
fist
pop
lods
sub
cmp
or
sbb
call
cmp
mov
ins
xchg
fwait
js
dec
mov
cmp
or
sbb
call
cmp
mov
ins
jo
ja
inc
mov
mov
pop
repnz
loop
adc
add
xor
and
jb
bound
ja
inc
mov
mov
pop
repnz
loop
adc
add
xor
and
jb
bound
jbe
inc
mov
mov
push
repz
jecxz
adc
add
xor
and
jae
arpl
jbe
inc
mov
mov
push
repz
jecxz
adc
add
xor
and
jae
arpl
jbe
inc
mov
mov
push
repz
jecxz
adc
add
xor
and
jae
arpl
jbe
inc
mov
mov
or
sbb
call
xor
and
jae
arpl
jbe
inc
mov
mov
jmp
cld
sbb
leave
xor
and
jae
arpl
jne
inc
mov
mov
mov
mov
movs
adc
aad
movs
push
mov
test
pusha
gs
jne
inc
mov
mov
mov
test
mov
movs
push
mov
test
pusha
gs
jne
inc
mov
mov
mov
test
mov
movs
push
mov
test
pusha
gs
jno
inc
mov
movs
and
ss
dec
test
mov
mov
je
fs
mov
pop
stos
dec
mov
mov
cmps
push
push
mov
test
push
jp
mov
pop
stos
dec
mov
mov
mov
mov
pop
xchg
mov
push
jp
mov
pop
stos
dec
mov
mov
sbb
dec
mov
scas
pop
lahf
push
jp
mov
pop
stos
dec
mov
lea
or
jno
pop
test
dec
scas
pop
lahf
push
jp
mov
pop
stos
dec
mov
lea
add
or
sbb
pop
test
dec
scas
pop
lahf
push
jp
mov
pop
stos
dec
mov
mov
add
or
add
pop
test
lahf
push
jp
mov
pop
stos
dec
mov
xchg
push
dec
out
add
mov
mov
lahf
push
jp
mov
pop
stos
dec
mov
xchg
add
or
add
mov
mov
lahf
push
jp
mov
pop
stos
dec
mov
sub
dec
lock
outs
dec
scas
pop
sahf
imul
pop
scas
dec
mov
sub
jmp
movs
inc
dec
stos
pop
call
lahf
pop
scas
dec
mov
lahf
push
inc
dec
mov
dec
mov
call
lahf
pop
scas
dec
mov
pushf
imul
mov
outs
mov
(bad)
scas
dec
mov
cwde
ins
mov
lea
pop
lods
inc
int3
mov
outs
mov
(bad)
scas
dec
mov
cwde
ins
mov
lea
pop
mov
cmp
outs
mov
(bad)
scas
dec
mov
xchg
popa
test
and
sar
mov
outs
mov
(bad)
scas
dec
mov
nop
cmp
popa
xchg
push
mov
ds
outs
mov
(bad)
lods
dec
mov
nop
cmp
fdivr
push
movs
add
mov
ins
mov
gs
push
mov
sub
push
stc
lsl
inc
movs
push
xchg
pusha
test
and
mov
sub
sbb
add
xchg
push
movs
inc
retf
movs
push
xchg
pusha
test
and
mov
sub
sbb
add
fwait
push
movs
inc
les
pusha
test
and
mov
sub
sbb
add
cwde
push
movs
inc
shl
pusha
test
and
mov
sub
sbb
add
xchg
push
movs
inc
in
mov
movs
push
xchg
pusha
test
and
shr
nop
sbb
add
xchg
push
movs
inc
call
xchg
popa
test
and
shr
nop
sbb
imul
xchg
popa
test
and
shr
nop
xor
pusha
xchg
push
movs
inc
into
mov
movs
push
xchg
popa
test
and
inc
mov
shr
nop
xor
pusha
xchg
push
movs
dec
xor
test
test
push
movs
inc
mov
lds
inc
nop
xor
pusha
xchg
push
movs
jl
mov
mov
jne
jp
push
pop
mov
inc
nop
xor
pusha
xchg
push
mov
xor
outs
call
scas
pop
mov
pop
nop
xor
pusha
xchg
pop
iret
ror
mov
jg
(bad)
jp
push
pop
mov
xor
sub
cmp
ret
and
retf
pop
stos
outs
call
scas
pop
mov
rcl
jecxz
repz
adc
fidivr
retf
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
sti
push
jmp
fstp
retf
dec
mov
jle
mov
imul
fisubr
out
sbb
or
sti
push
jmp
fstp
retf
dec
mov
jle
mov
push
int
(bad)
in
sbb
or
fdivr
test
cwde
jge
lea
push
int
(bad)
in
sbb
or
fdivr
test
cwde
jge
mov
mov
sub
sbb
or
sbb
sub
cmp
dec
mov
jl
mov
imul
cld
or
sbb
sub
cmp
dec
mov
jl
scas
push
outs
stos
pop
mov
cs
sti
push
or
sbb
sub
cmp
dec
mov
jnp
int
pushf
outs
stos
pop
mov
cs
sti
push
or
sbb
sub
cmp
dec
mov
jnp
rcr
dec
retf
fld
jmp
sti
push
or
sbb
sub
cmp
dec
mov
jnp
cmc
add
retf
das
jmp
out
sub
cmp
dec
mov
jl
lock
mov
das
jmp
out
sub
cmp
dec
mov
jno
lock
mov
sub
sbb
or
cld
sbb
sub
cmp
dec
mov
sub
lock
mov
sub
sbb
or
cld
sbb
sub
cmp
dec
mov
add
lock
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
pop
stos
outs
call
scas
pop
mov
sub
sbb
or
cli
pop
jmp
cmp
dec
(bad)
sbb
mov
jmp
sar
or
jae
fs
jl
or
(bad)
cmp
in
or
ud0
fisubr
mov
xor
jbe
push
scas
push
cmps
and
xor
add
inc
(bad)
jmp
lods
pop
call
sbb
mov
mov
ja
or
or
push
(bad)
scas
or
inc
sar
arpl
jnp
dec
mov
adc
pop
inc
cli
repnz
jp
das
mov
mov
and
clc
pop
sbb
sub
pop
loope
dec
mov
pop
mov
das
fisubr
div
(bad)
mov
cmp
mov
stos
dec
out
pop
aaa
sbb
push
jmp
or
jbe
sub
mov
sbb
pop
out
adc
sbb
out
adc
setnp
jmp
sub
sbb
rcr
xchg
bswap
or
pushf
inc
int
das
add
mov
xlat
dec
sbb
das
les
(bad)
adc
lods
clc
mov
call
dec
imul
xchg
inc
in
push
test
sti
adc
scas
stos
dec
mov
jg
psubd
je
mov
or
cwde
in
(bad)
or
add
pop
test
outs
scas
repnz
mov
idiv
push
jmp
sti
pop
stos
sti
pop
sub
sbb
outs
clc
ja
popa
xchg
stos
cmp
xor
pop
and
xor
add
dec
mov
pop
sbb
ds
mov
inc
jge
ins
sub
push
xchg
pop
and
sbb
retf
aas
fisub
mov
cmp
sub
mov
jmp
or
scas
pop
test
stos
dec
mov
int
call
mov
push
ficomp
not
clc
fistp
push
into
xor
mov
pop
bound
push
mov
add
sbb
out
dec
js
cmp
mov
fdiv
dec
loopne
jmp
push
jmp
sbb
and
mov
xchg
xor
cs
push
rcr
sti
jne
scas
push
xchg
dec
fstp
inc
popf
jne
js
xchg
imul
push
fisttp
jmp
aas
shr
repnz
cmps
inc
popf
jae
sub
cmp
test
dec
hlt
push
stos
jmp
inc
in
js
pop
int
fld
das
lock
jg
js
or
sbb
sub
cmp
enter
call
bound
push
dec
mov
js
or
sbb
sub
cmp
enter
call
bound
push
dec
mov
js
or
sbb
sub
cmp
enter
call
bound
push
dec
mov
js
or
sbb
sub
cmp
enter
call
bound
push
dec
mov
js
or
sbb
sub
cmp
enter
call
bound
push
dec
mov
js
or
sbb
sub
cmp
enter
call
bound
push
dec
mov
js
or
sbb
sub
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
call
add
mov
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
push
push
call
cmp
jbe
mov
push
call
push
mov
call
add
mov
pop
cmp
je
test
je
mov
call
push
push
push
call
mov
push
push
push
push
push
call
xor
pop
ret
nop
nop
cmc
mov
pop
(bad)
ins
(bad)
jge
rcl
mov
test
cmp
and
mov
imul
dec
push
pop
(bad)
ins
(bad)
jge
or
xchg
cmp
push
in
inc
std
lea
inc
push
lods
push
leave
test
mov
ins
cmps
sbb
jbe
fst
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
cmp
cmc
xchg
inc
ret
in
push
adc
test
leave
es
cli
or
pop
das
adc
add
cmps
or
movs
rcl
mov
lods
inc
jle
hlt
neg
sub
mov
sub
gs
push
pusha
inc
xor
mov
or
add
test
mov
jle
in
cmp
jbe
push
std
fcmove
lods
fadd
lods
hlt
jae
dec
mov
cmp
and
xchg
loop
bound
sub
xor
in
mov
test
pop
sahf
sbb
cdq
scas
jle
or
xchg
arpl
fnstsw
inc
test
aam
lds
repnz
pop
out
sub
dec
sbb
cmp
ds
xor
div
lods
push
xor
enter
dec
jae
(bad)
jecxz
mov
(bad)
jns
cmp
sub
or
lods
sbb
ss
popf
cli
jmp
adc
mov
push
jle
xchg
push
and
add
lods
mov
in
aad
pop
out
(bad)
test
sbb
lahf
mov
fnstsw
adc
push
push
loope
jecxz
cmp
cmp
sub
jle
add
dec
popf
(bad)
jmp
out
(bad)
stc
(bad)
xchg
repnz
cmps
cmc
sub
scas
call
push
inc
inc
push
mul
mov
sbb
jbe
data16
dec
inc
adc
push
lods
out
stc
push
dec
push
dec
(bad)
outs
(bad)
sub
xchg
lds
fnstsw
call
mov
out
shr
cmp
outs
sub
and
add
xor
pop
or
ds
jge
jge
hlt
ror
cdq
fucom
in
scas
mov
push
push
push
mov
movs
mov
jge
or
and
and
inc
adc
cs
lods
clc
mov
jne
cs
xchg
(bad)
and
pop
std
(bad)
test
imul
(bad)
xchg
mov
sub
mov
push
adc
ss
push
inc
adc
ds
cmp
mov
mov
pop
jne
sub
and
fdiv
sub
leave
(bad)
fst
push
mov
(bad)
xchg
ja
(bad)
js
cmps
ja
sub
fidivr
in
inc
add
and
jns
in
mov
and
xchg
mov
pop
loop
cmp
movs
gs
push
jbe
jmp
(bad)
xchg
push
xor
movs
ins
aaa
(bad)
xchg
xchg
jge
pop
cmps
pop
cld
cmp
jg
ficom
jne
cli
inc
pop
das
adc
add
lock
sub
data16
in
adc
outs
xchg
fst
pop
outs
mov
lahf
sub
and
xchg
xchg
jg
adc
mov
xor
sub
mov
(bad)
pop
sar
(bad)
inc
imul
mov
dec
lods
ins
test
sbb
add
inc
cmp
movs
add
xor
cdq
enter
xchg
and
jle
idiv
xchg
lahf
dec
cmps
loop
cmps
fnstcw
cli
in
into
pop
daa
mov
push
push
neg
adc
xor
movs
add
cld
cmps
mov
pushf
es
es
movs
idiv
sar
adc
xchg
xor
xor
inc
(bad)
iret
fnstenv
mov
sbb
in
sbb
lahf
mov
fnstsw
shl
push
push
push
push
in
dec
push
pop
push
ins
das
cmp
fld
jle
add
(bad)
popf
(bad)
jmp
out
(bad)
and
cmps
cmc
(bad)
sub
(bad)
cdq
cmc
in
scas
in
arpl
popa
push
inc
inc
push
mul
idiv
dec
add
shl
data16
dec
inc
adc
adc
push
inc
(bad)
add
mov
loop
xchg
lds
mov
xchg
es
test
push
mov
out
int3
ins
sub
or
outs
daa
jbe
dec
push
add
pop
ss
std
lods
fidivr
ds
xchg
mov
cmps
hlt
ror
mov
xchg
scas
mov
push
inc
push
std
mul
jge
or
and
xor
adc
es
lods
out
mov
jne
cs
cmps
popf
xchg
(bad)
and
sahf
std
(bad)
test
test
xchg
into
(bad)
xchg
scas
or
shr
cmc
aas
fnstsw
dec
push
(bad)
vmovlpd
mov
call
out
ds
fld
mov
sahf
or
test
repz
pop
or
rol
xor
data16
cwde
mov
xchg
and
mov
xlat
rol
adc
loop
leave
sub
data16
add
jbe
mov
jne
lods
mul
(bad)
(bad)
js
cmps
ja
sub
(bad)
cdq
push
sbb
(bad)
sub
push
inc
jecxz
mov
sub
mov
push
jne
popfw
add
std
leave
cwde
lods
ret
adc
mov
(bad)
mov
push
mov
js
xor
or
sub
ss
les
lds
add
nop
dec
repz
xchg
int
add
icebp
pop
mov
or
out
ret
out
jge
sbb
test
int
mov
test
lods
not
push
icebp
test
cmc
pop
dec
(bad)
add
push
arpl
xor
add
lods
out
mov
ret
movs
(bad)
ins
fimul
mov
jns
int
rcl
mov
bound
push
inc
sbb
aas
sub
pop
adc
aam
outs
xor
call
lods
out
mov
(bad)
test
sbb
lahf
mov
fnstsw
dec
es
push
push
push
jmp
cmp
test
push
add
ret
jmp
out
(bad)
jge
xchg
repnz
cmps
cmc
mov
(bad)
cdq
cmc
in
scas
loopne
push
es
push
inc
inc
push
mul
sar
dec
add
in
inc
data16
dec
inc
adc
out
lods
out
stc
push
dec
push
inc
(bad)
mov
inc
mov
loop
xchg
lds
fnstsw
xchg
es
push
sbb
out
leave
ins
adc
or
outs
and
inc
push
add
pop
ss
pop
or
ds
stos
mov
cmps
hlt
ror
mov
xchg
in
scas
mov
push
js
mov
(bad)
test
jge
or
and
or
inc
adc
cs
lods
sar
jne
cs
mov
cmps
add
inc
mov
imul
ss
out
jmp
pop
(bad)
cmp
loop
xchg
sub
push
frstor
inc
jae
fcmovbe
lahf
movs
stc
mov
scas
pop
pop
in
xor
sbb
cdq
cwde
mov
not
enter
sub
test
lds
js
xor
and
cwde
jbe
push
lods
add
and
mov
sub
repnz
leave
repnz
loop
mov
data16
add
pushf
push
lods
inc
xor
sub
mov
pop
push
in
push
jns
push
mov
lock
(bad)
arpl
mov
cmp
push
xchg
mov
test
into
cmp
(bad)
push
inc
adc
sbb
jo
(bad)
fcmovnbe
dec
jns
xor
add
sbb
inc
in
mov
rcl
test
cmp
sub
sbb
ret
retf
jmp
adc
pop
cmp
pop
call
out
jb
xchg
daa
ds
es
arpl
ja
push
pop
push
mov
push
lods
mov
xchg
cmp
lock
or
shl
jbe
mov
stos
test
cs
sahf
daa
push
inc
movs
imul
xor
ins
dec
sbb
pop
xchg
sub
fstp
xor
push
jmp
mov
cmp
sbb
pop
sar
jns
mov
scas
and
popa
fstp
mov
pop
xlat
leave
(bad)
jge
and
es
inc
cmp
adc
jl
sub
pop
cmc
push
test
(bad)
(bad)
ins
nop
cmps
mov
cmc
xchg
xchg
ret
inc
inc
call
(bad)
popf
call
in
fisttp
lea
or
add
inc
pusha
retf
add
jmp
jnp
xchg
push
(bad)
and
add
push
jge
cmp
xor
(bad)
add
xor
mov
js
shl
xor
ja
push
pusha
ret
sbb
push
inc
xlat
or
in
and
loop
rol
mov
add
leave
jle
popf
sar
mov
ret
loopne
div
mov
in
(bad)
out
into
fwait
push
push
clc
test
js
sbb
or
sub
sub
adc
pop
dec
mov
lods
push
jge
mov
out
inc
(bad)
jns
jle
js
in
ja
sbb
dec
adc
fwait
and
or
jo
inc
sbb
shr
jbe
xor
pusha
sar
jmp
xlat
cwde
mov
int3
or
sub
cdq
fstp
adc
jle
loop
es
mov
pop
sub
pop
sbb
sub
add
add
arpl
push
mov
xchg
lds
out
cmps
cwde
call
xor
mov
mov
mov
std
dec
inc
pop
jmp
mov
or
cmp
mov
jne
daa
popa
jae
stc
stc
jg
in
shr
(bad)
ins
xchg
or
sbb
div
call
lea
xchg
xchg
mov
sub
cmp
cmps
dec
dec
push
ret
ss
mov
imul
ins
outs
inc
or
dec
jge
push
jecxz
cld
movs
xchg
xchg
cld
mov
xor
(bad)
mov
sbb
loopne
xor
loop
pop
daa
sub
push
mov
es
sahf
daa
pop
stc
movs
pop
imul
sub
sub
push
cmps
cmc
ins
jns
arpl
inc
std
cmc
or
clc
(bad)
sahf
cli
stc
or
(bad)
push
not
xor
cmp
lea
(bad)
rcr
and
mov
sbb
mov
mov
push
add
or
cmp
jbe
mov
xchg
cmp
push
in
add
jmp
popf
jmp
rcl
call
es
fld
pop
fst
push
mov
es
idiv
adc
movs
sti
nop
pop
and
std
xor
nop
mov
rcr
add
jge
icebp
mov
push
sti
sahf
jae
or
jns
jb
mov
lds
mov
or
cwde
sahf
jge
cmp
inc
adc
adc
and
in
jge
imul
push
stos
cmc
cmps
or
fisttp
cmp
inc
fucomp
add
std
call
out
lds
sub
cmps
jns
mov
pop
and
sub
cmp
shr
mov
ds
int
outs
dec
jecxz
pop
movs
xchg
addr16
mov
xlat
test
loopne
sub
call
cmp
jmp
push
adc
mov
arpl
push
push
pop
inc
and
dec
mov
adc
xor
dec
sub
cmp
push
and
xor
xchg
xlat
or
aas
imul
retf
fnstcw
push
(bad)
jno
sub
lahf
mov
or
dec
je
mov
adc
div
lock
mov
or
inc
fisttp
(bad)
cdq
aad
cmp
lea
xor
pop
sub
nop
lds
push
add
jne
sahf
or
mov
pop
sub
lock
jecxz
sbb
js
inc
xor
scas
mov
daa
inc
lods
jnp
imul
std
(bad)
daa
jo
fistp
xor
add
imul
mov
(bad)
mov
xchg
sub
sub
sbb
ss
bound
lea
dec
loopne
sub
rol
sbb
(bad)
ret
cdq
aad
mov
xor
imul
mov
mov
mov
pop
(bad)
es
int
(bad)
mov
es
fldenv
mov
pop
aad
cmp
cmp
daa
(bad)
ins
lahf
mov
(bad)
add
cmp
loopne
jnp
add
mov
jo
mov
retf
shl
xchg
(bad)
in
scas
add
push
lods
ins
push
and
mov
pop
sub
loope
sub
and
inc
mov
sub
fwait
mov
and
or
jge
icebp
sub
mov
mov
gs
jbe
shl
inc
jmp
movs
jmp
div
cmps
jns
pop
jne
jbe
jae
push
in
iret
inc
xor
cs
neg
xchg
sub
(bad)
fmul
push
mov
ss
fld
jns
shl
mov
(bad)
out
jl
inc
data16
out
retf
std
mov
cdq
push
fsubrp
push
jo
(bad)
std
or
sti
outs
xchg
sub
sbb
addr16
ja
add
add
mov
pop
cmp
lds
jge
jo
inc
mov
push
or
jne
jg
adc
pop
stos
popf
add
jbe
cmps
loop
(bad)
rcl
sti
int
(bad)
repnz
jno
xchg
es
mov
mov
jl
fstp
imul
or
nop
test
cmp
jmp
mov
sbb
jl
xchg
xor
ret
inc
cmp
pop
in
std
and
push
inc
mov
test
mov
inc
pop
pop
std
jg
jns
std
fsub
mov
in
popa
adc
push
arpl
add
pop
ins
xor
cmp
xchg
jo
sbb
sbb
iret
cmp
cli
mov
dec
adc
mov
pop
bound
int3
jmp
(bad)
int
cmp
jno
jmp
shl
(bad)
sub
xor
push
cmc
sar
js
add
push
inc
daa
enter
inc
lea
scas
loopne
xchg
out
mov
ffreep
or
repz
(bad)
in
retf
xor
jb
stc
dec
fs
clc
(bad)
(bad)
push
lods
mov
or
or
adc
or
leave
out
push
and
mov
outs
pop
sub
dec
xchg
ds
call
add
fcom
es
jb
mov
outs
cmp
rol
and
ficom
xor
loopne
jmp
dec
push
repz
dec
lock
imul
xchg
dec
inc
sbb
xor
sbb
mov
ins
sbb
adc
pop
ja
mov
dec
in
xchg
jl
ins
repz
xchg
fs
dec
and
or
jp
mov
sahf
and
retf
push
pop
mov
sbb
cmps
icebp
cmps
sahf
sbb
and
inc
pop
lea
pop
mov
retf
loopne
jge
sub
sbb
sar
nop
adc
and
xor
fwait
lods
push
push
div
xor
pop
ret
sbb
xor
and
mov
adc
jb
es
jmp
dec
data16
jge
int
or
fxch
ins
je
or
repnz
adc
lods
out
jnp
and
dec
pop
mov
push
xchg
xor
mov
fldcw
out
push
test
fidivr
repnz
or
fist
adc
std
leave
stc
lods
icebp
jle
(bad)
in
jnp
imul
mov
ror
mov
jp
ret
xchg
cmp
and
imul
lods
sar
fmul
push
sbb
inc
(bad)
leave
push
outs
iret
mov
adc
dec
out
pop
in
dec
hlt
cmp
mov
outs
test
jno
lods
fcomp
pop
repnz
cmp
jne
xchg
push
cs
push
push
in
cmp
in
pop
clc
jge
out
(bad)
adc
and
ss
dec
dec
mov
inc
cmc
jo
fcom
jecxz
xchg
fwait
inc
jecxz
adc
icebp
pop
andnps
mov
jge
and
push
outs
(bad)
leave
test
cmp
pop
popa
push
retf
dec
jbe
sbb
push
test
outs
enter
xchg
cmp
das
dec
jle
fbstp
lahf
stos
mov
(bad)
inc
inc
jg
(bad)
aam
cwde
jne
add
repnz
scas
push
jg
push
imul
dec
push
lods
(bad)
sub
pop
leave
jp
ret
out
xchg
xor
ds
lods
pop
popf
fimul
mov
mov
pop
pop
xchg
sub
frstor
(bad)
and
into
clc
out
mov
aad
ret
add
mov
xor
test
std
ds
out
(bad)
scas
lea
adc
(bad)
(bad)
gs
mov
lods
cmps
pop
cld
add
adc
and
mov
(bad)
push
(bad)
cmp
imul
push
(bad)
(bad)
lahf
vdivpd
sar
movs
out
cli
xor
in
test
sub
adc
neg
and
adc
imul
push
fst
in
mov
adc
pop
pop
sub
(bad)
cld
cmp
and
add
popf
pop
and
mov
movs
ins
fadd
gs
ret
push
dec
jo
jo
iret
outs
mov
sub
mov
inc
call
es
inc
jne
nop
push
adc
in
inc
enter
std
sub
inc
ins
sub
push
push
loopne
lock
and
xchg
mov
icebp
sbb
gs
jmp
push
sbb
push
fild
dec
in
mov
cmp
dec
jge
in
mov
sbb
jbe
mov
not
xor
sahf
out
xchg
iret
pop
sub
cmc
inc
arpl
push
add
movs
rcl
and
stos
adc
and
out
inc
mov
xchg
movs
add
push
icebp
ins
stc
mov
retf
sahf
les
xchg
xchg
dec
mov
scas
and
pop
push
xchg
mov
in
cli
fild
xchg
mov
jno
or
(bad)
jle
xchg
push
xchg
adc
mov
(bad)
jmp
inc
arpl
pop
aad
lea
ror
adc
loopne
std
mov
lods
popf
bound
mov
and
and
xchg
(bad)
and
add
adc
stc
test
or
mov
sbb
jne
aad
cld
int
imul
popf
jmp
cmp
ins
cmp
sub
sbb
mov
push
pop
xor
ins
sbb
test
cmp
dec
std
test
inc
fnstsw
mov
ins
cmp
icebp
pop
push
xchg
ret
data16
test
mov
push
dec
push
dec
sbb
test
jb
mov
ret
js
inc
cdq
sub
xchg
mov
and
lahf
mov
not
(bad)
dec
cmp
xchg
loop
mov
jmp
push
stos
into
or
es
or
xlat
jl
or
xchg
sbb
add
stos
cmp
ds
clc
stos
popf
fsub
push
mov
sub
push
pop
data16
sub
adc
call
sbb
push
ds
repz
fisttp
xacquire
push
scas
pop
and
mov
pop
(bad)
mov
mov
js
loope
push
cmp
test
lock
push
push
fadd
jg
ins
sbb
scas
nop
cmp
pop
sbb
lea
mov
cli
out
cdq
and
mov
(bad)
push
push
dec
hlt
dec
repnz
pop
pusha
ret
ret
cmps
out
cmps
in
adc
(bad)
lods
push
mov
fidivr
jge
sbb
ja
sub
or
jbe
loop
and
es
jne
mov
rep
dec
ret
cmps
inc
xchg
js
int
push
mov
lahf
fst
pop
clc
xor
ins
cmp
addr16
lock
imul
cmps
test
bound
push
lea
dec
cmp
out
(bad)
ins
(bad)
mov
mov
ret
xchg
es
test
leave
jbe
jle
push
inc
pushf
and
aam
inc
or
ret
int
fst
callw
gs
dec
push
es
xlat
movs
mov
mov
xchg
or
movs
aaa
jbe
scas
lods
fiadd
dec
popf
jmp
mov
pop
outs
ins
(bad)
fbld
sub
in
mov
adc
std
jbe
fstp
push
pop
mov
cmp
dec
xchg
cld
sub
movs
and
jle
(bad)
das
aaa
fld
outs
loope
mov
mov
pop
pop
mov
sub
int3
adc
test
scas
leave
iret
int3
(bad)
daa
ins
mov
adc
or
xchg
(bad)
nop
cmc
and
in
sahf
std
jae
mov
inc
pop
imul
xor
out
imul
test
test
enter
cmovae
adc
or
ret
iret
sub
and
lea
mov
xchg
mov
das
repz
fimul
xchg
ds
test
outs
lea
fst
cmovae
test
into
sbb
repnz
adc
es
cli
lods
pushf
clc
sahf
dec
and
xor
int
fnstsw
jg
push
test
out
aaa
xor
jge
or
inc
fsubr
int
mov
aaa
dec
mov
jl
mov
lahf
jge
mov
das
rol
(bad)
xchg
xchg
data16
in
pushf
mov
dec
lods
push
sbb
xlat
scas
and
sbb
mov
aas
fst
inc
das
jae
daa
pop
cmc
hlt
push
mov
mov
or
ret
push
ja
add
dec
pushf
aad
pop
mov
xchg
add
cmps
sbb
push
int3
movs
cmp
in
inc
int
dec
arpl
pop
outs
loopne
test
mov
jmp
sbb
xor
inc
std
mov
lods
lds
dec
out
(bad)
jae
sbb
xor
test
jno
test
pusha
fbld
(bad)
int
or
adc
leave
push
ret
bound
sub
dec
test
fcmovnbe
or
jbe
cmp
ror
mov
lea
int
and
or
inc
mov
es
adc
mov
xchg
out
add
pop
mov
js
mov
xchg
mov
sbb
fwait
lods
push
mov
add
cs
jp
xlat
hlt
add
adc
add
inc
jbe
sbb
out
push
and
sub
adc
rcl
lods
mov
adc
sbb
bound
nop
loopne
ret
rcr
outs
std
mov
inc
pop
loopne
sbb
cmp
pop
sbb
lds
cmp
push
add
into
popf
xor
movs
out
add
(bad)
lock
adc
and
js
call
sub
popf
fwait
movs
sar
in
add
xor
or
popf
mov
xchg
inc
call
repnz
push
lahf
jge
xchg
sbb
and
mov
pusha
sbb
mov
int
pop
(bad)
ficomp
cmps
mov
int
add
cmp
mov
sbb
jns
fnstcw
mov
shl
sbb
popa
xchg
push
or
out
adc
sub
repnz
imul
mov
pop
inc
fwait
movs
add
mov
mov
xchg
movs
ret
cmp
(bad)
adc
add
inc
push
aad
or
pop
push
rcl
mov
sbb
push
xor
fiadd
es
push
gs
mov
(bad)
xchg
add
in
repnz
push
outs
and
jmp
or
cdq
mov
int
frstor
sbb
cs
es
jbe
mov
mov
push
push
push
cwde
jbe
imul
fmulp
jmp
sbb
std
fimul
popf
ror
fidiv
stos
(bad)
mov
cmp
aad
dec
neg
fld
pop
(bad)
cmps
sbb
xchg
sbb
cmp
dec
cmp
inc
inc
mov
stos
test
and
enter
cdq
stos
xchg
add
cmp
sbb
std
int
pop
add
inc
add
(bad)
cwde
cmc
jmp
pop
xchg
xchg
sbb
jbe
call
frstor
xchg
pop
dec
jnp
add
into
cmc
pop
cmp
sub
xor
push
add
jbe
adc
pusha
inc
mov
xor
push
cmp
rep
sar
in
cdq
sbb
lods
out
imul
pop
mov
neg
sub
inc
xor
test
pop
lds
cmp
mov
gs
test
loopne
sbb
ins
les
repz
jecxz
(bad)
cmps
jp
ja
mov
sub
lea
jmp
rol
xchg
(bad)
xor
xor
xchg
sar
sti
jmp
push
cwde
inc
std
aaa
jb
mov
xchg
xchg
into
push
sahf
push
cdq
fbstp
das
mov
test
dec
ss
jmp
pop
mov
or
sar
push
sub
cmp
pushf
fcmovbe
jbe
dec
mov
cdq
push
dec
out
adc
stc
fs
(bad)
rcr
mov
lea
out
lods
(bad)
mov
dec
sub
cwde
in
in
leave
jle
mov
mov
les
xor
into
mov
imul
in
mov
test
xchg
sar
je
and
adc
pop
jbe
lea
push
inc
sar
xor
repnz
movs
outs
sbb
int
adc
adc
jp
fwait
and
mul
(bad)
jmp
jecxz
pop
or
mov
xor
and
jb
adc
std
push
xor
dec
and
adc
push
loop
mov
adc
mov
jo
add
adc
inc
cmp
jl
sub
push
sub
data16
mov
jo
add
adc
jns
ss
mov
sub
inc
adc
retf
push
ja
mov
push
fs
jmp
es
(bad)
stc
dec
hlt
dec
and
cmp
push
ret
data16
retf
mov
push
call
and
cmp
cmps
dec
or
cwde
test
test
pop
push
mov
out
(bad)
sub
ins
repz
(bad)
or
cbw
add
retf
call
sbb
sbb
pop
jns
cmp
pop
leave
imul
add
in
retf
add
dec
(bad)
pop
jmp
push
sbb
loopne
pop
int
sub
cdq
push
dec
(bad)
retf
and
push
imul
sub
cmp
out
xchg
sti
fcom
and
pop
(bad)
mul
icebp
push
jnp
or
pop
dec
dec
pop
xchg
(bad)
sbb
sub
mov
addr16
stos
sbb
leave
cmp
in
cmps
pop
sbb
or
xor
mov
jb
pop
push
imul
mov
sbb
lods
out
pop
loop
rcl
xor
mov
push
pop
inc
and
(bad)
sub
push
push
inc
mov
xor
test
inc
and
inc
mov
popf
xchg
cmp
in
xchg
fwait
adc
mov
mov
std
leave
pushf
(bad)
call
mov
xchg
xor
lock
sbb
jns
and
mov
jo
add
dec
sbb
test
dec
out
pop
nop
push
jns
xor
and
retf
bound
push
push
(bad)
mov
movs
es
icebp
pop
pop
imul
push
stos
test
add
imul
je
out
mov
cmp
dec
icebp
cmps
inc
xchg
(bad)
mov
in
sub
lea
pop
jmp
mov
or
loopne
div
sbb
loop
sub
aad
cs
mov
lods
out
clc
jg
test
and
retf
cmps
sbb
jle
jmp
nop
in
inc
std
(bad)
adc
stc
cli
mov
xchg
outs
and
fld
mov
or
(bad)
jb
dec
loop
fnstsw
xor
and
push
and
clc
or
jae
push
jne
cwde
add
ds
xor
or
loop
push
or
imul
cmp
mov
jne
inc
sbb
movs
bound
out
pop
fst
mov
fst
push
cld
leave
cmp
lahf
pop
call
ins
mov
mov
jecxz
push
jp
jbe
scas
popf
push
mov
arpl
fs
inc
and
dec
sub
or
cmc
xor
cmp
xor
cmp
imul
dec
not
ret
sub
mov
cmp
aad
xor
mov
adc
mov
mov
sbb
stos
add
leave
(bad)
mov
int3
and
nop
test
jb
(bad)
mov
ins
(bad)
xor
icebp
cmc
loop
stc
aad
adc
std
frstor
add
mov
pop
(bad)
hlt
add
pop
(bad)
out
lock
pop
loop
jns
shl
iret
arpl
leavew
fisub
lods
sar
pop
sbb
dec
fstp
adc
ret
jne
mov
leave
push
add
std
add
(bad)
sbb
dec
adc
jo
cmps
or
cmp
gs
in
jle
aaa
out
(bad)
std
jae
jge
mov
mov
adc
dec
push
shr
shl
pop
jmp
popf
pop
lea
lea
pop
gs
and
icebp
pop
loope
cs
dec
mov
add
inc
int
dec
scas
push
jle
inc
and
jne
jns
ficomp
inc
out
cwde
pop
adc
jae
jbe
das
xchg
jae
sbb
jne
xchg
movs
aad
mov
jbe
mov
test
push
bound
mov
pop
test
ja
pop
mov
pop
or
out
adc
mov
sbb
sub
lock
xchg
test
cmpxchg
xchg
push
push
inc
ss
mov
jne
test
lds
adc
jbe
gs
std
add
(bad)
stos
sub
xchg
lea
dec
xchg
in
mov
movs
punpckhdq
pop
je
cmp
jmp
cmp
cmp
outs
mov
pop
lea
push
stos
xchg
ins
imul
lods
inc
add
pop
pop
in
jl
or
jns
jp
pop
cwde
sbb
cmp
push
lea
enter
test
fiadd
aaa
jns
out
data16
push
(bad)
push
pop
push
dec
mul
sbb
ror
cmps
push
pop
add
xchg
mov
xor
inc
inc
mov
push
cs
rcl
xchg
add
mov
leave
arpl
jns
fnstcw
dec
mov
push
ret
pop
push
data16
add
push
loopne
mov
(bad)
loopne
xor
inc
ins
push
mov
or
push
mov
pop
sub
mov
mov
jg
xchg
mov
sahf
sbb
scas
sti
lea
bound
mov
jo
iret
xlat
or
or
jmp
(bad)
sbb
popf
fcom
xchg
pop
aad
jbe
lds
repz
sub
pop
push
adc
fmul
jp
popf
pop
mov
sbb
js
rcr
and
push
pop
and
dec
sub
xchg
push
mov
(bad)
fldenv
repz
push
jg
(bad)
movs
mov
fstp
shl
mov
imul
retf
push
faddp
fldenv
inc
push
test
lea
xchg
outs
dec
cmp
scas
sub
inc
adc
ins
jmp
push
ds
mov
or
cwde
loope
xchg
xchg
cmps
add
push
sub
mov
out
ror
outs
fdivr
mov
sbb
dec
jno
lods
sbb
push
test
call
inc
mov
mov
fwait
out
lock
sub
call
shl
adc
add
dec
js
jge
inc
sub
jmp
mov
movs
into
adc
rcl
out
mov
jge
movs
push
sbb
xor
dec
mov
xor
push
dec
push
mov
je
(bad)
pop
bound
mov
sbb
(bad)
pop
cs
inc
jo
mov
inc
or
cmp
cmps
mov
vcvtsd2si
and
pop
xor
movs
lods
repz
sub
ins
mov
mov
cmp
hlt
cdq
cmp
(bad)
stos
popf
adc
daa
fstp
xlat
jb
mov
sahf
jb
inc
cmp
shr
dec
sbb
in
push
sbb
sbb
or
call
xlat
dec
sub
data16
mov
fwait
arpl
jae
dec
popf
sub
(bad)
xchg
sbb
lds
loop
jbe
fsub
add
cwde
inc
bound
lods
push
test
xor
sub
sbb
mov
sbb
pusha
ins
bound
jmp
add
cmp
div
leave
stos
leave
jle
inc
xor
test
lock
scas
push
mov
fwait
ins
fst
and
push
or
xor
and
lahf
in
(bad)
cwde
pop
add
jnp
or
sbb
pop
sub
cmp
sub
and
cmps
mov
push
xchg
clc
inc
xor
push
adc
pop
leave
imul
adc
push
adc
cdq
out
sti
inc
retf
cmps
mov
shl
cs
ins
sahf
mov
push
push
in
inc
cmc
fmulp
out
adc
ss
not
cmp
push
loop
xchg
loope
fdivr
inc
mov
fwait
lods
(bad)
mov
push
xchg
cmp
dec
or
mov
dec
jecxz
adc
sub
loopne
pop
push
or
mov
or
pop
mov
frstor
adc
ret
rcl
jae
mov
lds
adc
repz
sbb
jecxz
mov
mov
loopne
(bad)
out
es
and
cwde
sti
int
int
adc
popa
fwait
or
sbb
(bad)
xchg
mov
adc
jbe
sahf
inc
inc
aad
fs
jo
lods
add
push
es
xchg
mov
popf
dec
(bad)
loopne
cmp
add
xchg
iret
cmp
repz
mov
es
mov
movs
in
xchg
mov
movs
cmc
sbb
out
sub
mov
and
popf
inc
push
repz
pop
mov
imul
fisttp
test
jle
sti
arpl
xor
pop
ins
mov
ret
inc
out
sbb
inc
in
push
frstor
fisttp
inc
xor
dec
outs
mov
ds
xchg
(bad)
ss
mov
std
cmp
stos
sbb
xor
out
(bad)
rcl
sub
push
int3
pusha
or
cmps
cmps
mov
xor
stos
inc
push
lods
xchg
inc
call
push
sahf
and
jge
xchg
adc
cmps
ffree
mov
sub
xchg
push
repnz
jmp
(bad)
out
(bad)
mov
cmps
loop
je
cmp
inc
push
inc
std
fimul
push
mov
les
je
scas
cs
aas
or
iret
add
inc
jbe
push
xlat
(bad)
ficom
out
jb
mov
sub
dec
sub
ds
push
push
es
mov
push
nop
push
sub
sbb
(bad)
sub
jl
int
push
shl
push
push
jmp
ret
aad
(bad)
pop
adc
repz
lahf
xchg
sahf
xor
(bad)
std
int3
in
fstp
dec
jbe
inc
cs
sbb
cmp
push
sub
outs
cmp
cmp
pushf
movs
push
mov
fild
mov
jle
and
int
xor
jl
loopne
pop
ss
into
cdq
(bad)
ds
cmp
jmp
leave
jp
mov
out
fld
push
lods
in
outs
ffree
pop
(bad)
aam
jne
xchg
in
push
cmp
mov
outs
in
add
(bad)
cld
lea
xchg
dec
sbb
adc
jnp
int
int
cwde
test
enter
and
ss
neg
popf
adc
dec
sub
fcom
add
mov
movs
or
inc
sbb
or
xchg
jns
xor
push
in
paddsb
fcom
jmp
shl
idiv
sub
jae
xchg
pusha
inc
lods
jb
sti
inc
or
push
dec
xor
(bad)
in
cmp
push
std
retf
sub
iret
and
ja
addr16
push
mov
cmp
es
sub
xlat
cmp
icebp
sbb
xor
or
mov
pop
(bad)
hlt
sbb
sbb
xor
push
stc
inc
jle
sahf
mov
fmul
ficomp
inc
mov
stc
pop
jne
jl
jns
es
inc
jl
mov
aad
jmp
cld
jbe
stos
fstp
mov
(bad)
pop
cmp
xchg
aad
xor
inc
cdq
adc
add
popf
and
pop
jg
stos
mov
mov
and
ret
bound
sub
movs
test
jmp
mov
cmp
jmp
(bad)
sub
cs
jge
push
pop
xchg
jl
sub
pop
xchg
push
xchg
ret
in
sbb
inc
jne
jno
aad
ins
(bad)
xor
lea
cmp
cmps
loop
ins
xor
push
out
(bad)
inc
gs
test
lahf
fmulp
xchg
jne
dec
mov
or
sbb
inc
(bad)
xor
js
push
movs
out
cli
xor
xchg
mov
ins
cmp
in
test
cdq
xchg
or
cld
scas
xlat
outs
pop
inc
push
dec
mov
push
mov
ror
cmp
or
push
jbe
outs
movs
retf
(bad)
ss
rcl
push
ret
inc
sub
sar
inc
cs
(bad)
iret
adc
(bad)
inc
mov
pop
xchg
inc
inc
into
xchg
mov
mul
aad
aas
test
push
push
in
lods
les
(bad)
outs
jne
in
imul
retf
mov
add
push
in
jo
ja
ret
popf
mov
jmp
aad
sbb
cmps
repnz
in
cmps
jmp
fcmovu
push
push
pop
(bad)
repnz
inc
mov
sub
popf
iret
aaa
fldcw
cwde
mov
xchg
sbb
stc
mov
ror
cmp
test
adc
popf
in
out
test
cmc
out
push
adc
fadd
fs
ds
test
sub
retf
ss
dec
mov
loope
push
ja
test
jl
pop
sub
cli
std
lds
push
cwde
or
je
push
test
add
pop
push
dec
mov
jle
fcmovnbe
inc
sbb
sbb
mov
lea
jnp
test
add
mov
(bad)
in
mov
sar
and
data16
in
int
cmc
lea
xchg
out
push
(bad)
in
cmp
xchg
xchg
cmp
ins
mov
inc
inc
jp
outs
dec
jbe
pusha
jns
in
dec
inc
ss
jne
inc
repnz
(bad)
push
mov
pop
jle
ins
lods
mov
push
adc
push
(bad)
popf
jg
neg
jmp
les
(bad)
sar
stc
or
push
les
test
push
push
sahf
inc
push
lods
lea
mov
sub
and
movs
stos
xor
and
shr
dec
ss
outs
adc
ins
and
dec
pop
mov
cwde
outs
into
dec
sub
xchg
addr16
ffreep
repnz
sub
jmp
dec
pop
push
shl
lock
jns
sub
cwde
push
test
jo
(bad)
int
xchg
jl
inc
lds
mov
jge
sbb
sbb
es
jle
fiadd
xor
loopne
xor
push
out
lahf
jl
cmp
sub
hlt
jbe
xor
push
int
aaa
jb
cmp
push
cli
push
adc
jmp
mov
hlt
add
sahf
shl
pusha
sub
pop
jmp
out
push
jno
lods
mov
in
ret
xchg
out
or
mov
push
loope
jmp
adc
(bad)
sbb
jg
ret
cdq
adc
adc
loope
shr
in
rcr
xchg
xchg
push
mov
arpl
(bad)
std
leave
mov
cmc
push
adc
imul
sub
sbb
jbe
ja
fadd
jns
push
(bad)
adc
movs
mov
push
ins
xor
repnz
cmc
xchg
stc
xchg
fnstsw
push
add
fld
add
das
cmc
outs
jl
mov
xchg
rol
ins
adc
std
out
lea
mov
cdq
out
xchg
out
pop
mov
mov
xchg
push
cdq
push
inc
jmp
out
popf
jmp
mov
mov
sbb
and
add
test
push
clc
xor
out
jns
push
dec
sbb
sub
inc
fisttp
cld
stc
std
jae
es
lea
xlat
lods
(bad)
div
xchg
ds
je
mov
add
jbe
mov
ret
(bad)
lods
(bad)
mov
hlt
ins
lahf
ins
stc
or
pushf
js
xor
or
imul
lods
inc
ss
mov
mov
mov
test
aaa
push
cdq
fcom
inc
inc
clc
pop
fxch
push
pop
push
clc
xor
in
das
repz
fimul
xchg
ds
test
outs
lea
lea
cmovae
test
jge
dec
into
sbb
jbe
data16
adc
es
lods
pushf
clc
sahf
dec
and
inc
mov
jecxz
xchg
out
pop
fs
stos
fnstsw
jg
push
gs
das
mov
out
ss
jge
or
inc
(bad)
int
inc
push
lsl
push
lods
mov
pop
adc
xor
(bad)
xchg
xchg
data16
in
pushf
mov
dec
lods
push
xor
(bad)
scas
and
mov
jmp
das
aas
fst
inc
das
jae
es
cmc
hlt
push
mov
mov
or
ret
push
jbe
test
enter
dec
pop
mov
xchg
add
cmps
sbb
push
int
cmp
in
inc
xor
dec
arpl
push
outs
jecxz
test
mov
call
xchg
xor
inc
std
ret
fdivr
lds
dec
out
(bad)
jae
inc
xchg
sub
push
fst
int
das
push
lds
jle
adc
lods
(bad)
jl
push
xchg
movs
or
fnstsw
(bad)
fidiv
inc
ror
out
sub
jns
sti
fldln2
push
neg
push
int
xchg
js
push
push
adc
or
and
arpl
add
mov
out
jmp
pop
mov
sub
cmp
sub
data16
or
rol
xor
dec
adc
pop
sub
push
pop
push
inc
call
fst
inc
stos
lock
scas
dec
ins
jne
popa
sar
in
sub
push
into
mov
pop
shl
add
add
jecxz
xchg
pop
(bad)
add
pop
sbb
cmc
arpl
xor
adc
push
inc
mov
mov
mov
repnz
push
lea
out
cmps
test
es
ror
pop
lods
(bad)
cmp
or
or
push
push
mov
frstor
arpl
jmp
mov
xchg
test
push
iret
in
xchg
xor
add
arpl
out
repz
scas
sub
iret
mov
sbb
test
xchg
push
push
(bad)
hlt
sbb
sbb
and
cmp
pop
int3
sub
test
push
cld
jb
in
pop
and
jno
mov
dec
mov
dec
inc
jne
das
or
std
into
jmp
sub
mov
pop
stc
dec
mov
sub
ja
add
jp
popf
sti
popf
mov
retf
pop
push
jmp
out
jecxz
(bad)
lock
scas
dec
(bad)
imul
inc
outs
cwde
aaa
pushf
xchg
pusha
stc
jnp
cmp
lods
std
cmp
sub
out
test
mov
bound
push
sar
mov
mov
pop
repnz
xor
mov
mov
push
std
clc
dec
mul
xchg
jge
repnz
stc
dec
je
xchg
mov
and
add
push
and
clc
or
pop
(bad)
popf
cmc
outs
in
and
fistp
mov
push
mov
jb
mov
call
imul
pop
cmps
sbb
sub
or
(bad)
add
mov
ret
add
jecxz
lods
cmp
sbb
mov
mov
xchg
xor
xchg
popa
ror
sub
adc
inc
in
add
inc
or
push
movs
sar
sub
jg
pop
pop
adc
jge
xor
iret
ja
inc
dec
push
mov
jecxz
inc
pop
sti
inc
mov
ret
(bad)
lock
in
pop
dec
(bad)
int3
adc
mov
push
mov
push
inc
sub
sbb
arpl
xor
data16
fst
pop
mov
icebp
pop
add
xchg
xchg
cmp
jle
mov
push
adc
in
(bad)
ins
cmp
fimul
xlat
jns
push
popa
pop
adc
scas
std
popa
(bad)
fst
add
sahf
dec
into
pop
dec
ins
rcl
out
sub
or
test
lea
add
inc
dec
in
(bad)
shr
or
jns
arpl
int3
ds
outs
std
jbe
mov
ss
cmp
and
inc
loop
bound
adc
adc
mov
test
push
sbb
cdq
scas
jg
or
xchg
arpl
fnstsw
inc
test
aam
xchg
push
lods
repnz
gs
sub
dec
sbb
cmp
ds
add
div
lods
push
mov
ret
movs
fs
push
lods
adc
(bad)
jecxz
mov
(bad)
movs
fs
test
test
and
paddsb
add
pushf
dec
sbb
les
push
cmp
cmp
inc
adc
push
lods
out
stc
push
dec
push
je
pop
(bad)
or
lds
fnstsw
movs
es
push
mov
out
jmp
jge
or
outs
adc
movs
pop
push
add
pop
ss
stos
mov
ds
(bad)
adc
ror
add
push
in
scas
mov
push
retf
mul
jge
or
and
mov
jb
es
lods
pusha
mov
jne
cs
mov
cmps
sbb
and
push
std
(bad)
test
div
out
xchg
into
(bad)
xchg
sahf
or
outs
jns
int
cmc
push
mov
ss
push
inc
cs
aas
sub
pop
and
xchg
xor
xor
data16
iret
fnstenv
cs
(bad)
test
sbb
lahf
mov
fnstsw
sub
push
push
ror
pop
cs
das
cmp
dec
xchg
push
add
cmps
popf
(bad)
jmp
out
(bad)
mov
xchg
repnz
cmps
cmc
mov
out
jle
(bad)
cdq
cmc
in
scas
fidiv
std
(bad)
ror
call
mov
cmp
cs
add
and
sahf
adc
mov
push
lods
xchg
mov
xchg
pop
(bad)
jnp
sbb
or
sub
and
mov
dec
(bad)
sar
dec
push
jl
jge
sbb
sbb
lahf
dec
add
mov
inc
push
xor
dec
in
mov
jbe
loop
sbb
call
mov
daa
mov
push
jbe
sbb
leave
dec
mov
repnz
mov
retf
cmp
nop
or
push
adc
push
(bad)
jnp
push
or
sub
js
pop
push
push
sub
and
leave
loopne
push
push
push
mov
push
stos
(bad)
jge
mov
fst
mov
jle
inc
jp
jmp
or
jge
mov
push
ror
lahf
or
loop
push
es
xchg
idiv
lahf
jge
int
xchg
inc
je
and
pop
cs
fld
outs
mov
(bad)
ror
mov
xchg
inc
xchg
lds
and
fisttp
jb
jne
jns
and
std
xchg
lods
dec
and
into
pop
sbb
fsub
enter
mov
jl
stc
jmp
jle
push
scas
mov
sub
test
and
xor
popa
lea
jmp
aad
dec
xchg
js
xchg
cs
dec
dec
jle
in
cmp
xchg
adc
push
lea
jle
in
mov
test
repnz
sbb
jbe
test
cld
add
cmc
imul
cld
out
aaa
pushf
dec
sbb
(bad)
sub
xor
xchg
jns
push
and
lea
mov
cdq
out
or
gs
inc
xlat
out
jns
jbe
data16
pop
es
lods
push
das
mov
sbb
pop
add
cmp
adc
es
lods
pushf
clc
sahf
dec
and
imul
int
fnstsw
jg
push
push
push
das
mov
out
or
jge
or
inc
loop
int
cmc
push
lsl
push
lods
stos
mov
adc
mov
das
rol
(bad)
xchg
xchg
data16
in
pushf
mov
dec
lods
push
jns
iret
mov
and
or
out
cmp
push
fld
jae
es
div
push
mov
mov
or
ret
push
jbe
test
enter
dec
pop
mov
xchg
add
cmps
sbb
push
int
paddsw
ss
arpl
push
outs
in
test
mov
jmp
xchg
xor
inc
std
or
lds
dec
out
(bad)
jae
inc
xchg
sub
push
fst
jge
das
push
lds
jle
adc
pop
xchg
ins
pushf
cmp
or
xchg
push
mov
popf
mov
stos
mov
das
repz
fimul
lock
data16
mov
adc
pop
(bad)
imul
(bad)
jmp
data16
adc
mov
jmp
and
sub
cmp
ror
jle
jp
shr
cmp
and
scas
lods
(bad)
jge
bound
add
mov
dec
inc
das
sbb
sub
data16
repnz
pop
leave
dec
imul
sub
pop
repz
loop
test
and
(bad)
sub
xchg
lods
call
mov
mov
retf
test
and
xor
bound
xor
pop
and
xlat
pop
mov
pop
push
inc
jmp
shl
sub
jb
repnz
call
outs
(bad)
pop
aad
jne
sbb
(bad)
rcl
int3
(bad)
jbe
jbe
jbe
add
jae
xchg
(bad)
ins
aad
inc
les
jle
inc
xor
pop
call
es
lahf
repnz
int3
xor
outs
pop
std
outs
and
mov
out
mov
std
cmp
out
cs
xor
into
les
es
(bad)
aad
mov
cmps
jmp
cmc
lods
lds
pop
push
sub
cs
clc
arpl
sbb
bound
dec
cmc
call
dec
push
inc
fcomp
int
aaa
stc
and
out
mov
gs
ds
cmc
mov
fdiv
cmc
xor
xchg
lahf
push
mov
jge
fadd
inc
adc
or
mov
xor
fistp
lods
xchg
sbb
aad
xchg
sbb
and
repnz
inc
sahf
cmps
bnd
and
xor
clc
add
mov
push
jge
and
xor
test
jnp
aaa
lods
outs
(bad)
cmc
cmp
jnp
push
adc
out
pop
xchg
retf
popf
das
aam
and
cmp
inc
adc
mov
lods
push
xor
(bad)
and
mov
add
cmp
adc
lods
fdivr
lods
adc
test
cmp
adc
xchg
je
mov
push
mov
aaa
scas
inc
lods
jmp
ins
mov
imul
aaa
pop
or
pushf
dec
sbb
les
sub
int
fwait
mov
mov
jb
ret
dec
mov
push
pop
sbb
(bad)
sub
cmp
cmp
mov
and
lods
jmp
sub
and
in
jne
xchg
dec
std
xor
adc
jne
fadd
inc
dec
scas
dec
push
pop
mov
pop
pop
aam
xchg
xchg
cmp
adc
es
lds
add
(bad)
hlt
mov
mov
cmps
in
push
aas
fnstsw
inc
out
jmp
dec
or
ins
sub
dec
push
inc
xchg
lds
sbb
(bad)
pushf
es
push
push
clc
mov
ins
cs
and
and
sub
int3
dec
fst
mov
(bad)
fs
add
dec
or
pop
sub
jge
ret
clc
sbb
sahf
int
jg
ficom
je
push
push
push
fmul
pop
(bad)
ins
das
cmp
pop
xchg
push
add
(bad)
popf
(bad)
jmp
out
(bad)
jne
xchg
repnz
cmps
cmc
cmps
sub
(bad)
cdq
cmc
in
scas
int
movs
adc
inc
inc
push
mul
jb
pop
dec
add
adc
adc
adc
dec
lods
out
stc
push
dec
push
jae
dec
(bad)
mov
in
mov
push
int
fnstsw
mov
push
push
mov
out
stc
ins
loopne
sbb
outs
or
push
add
pop
ss
popf
xor
inc
pop
ds
(bad)
pop
mov
cmps
hlt
ror
inc
frstor
scas
mov
push
mov
aad
movs
mov
jge
or
and
(bad)
push
adc
es
lods
and
sbb
cs
mov
cmps
loope
(bad)
and
push
std
(bad)
test
idiv
out
xchg
into
(bad)
xchg
cwde
or
outs
jns
int
repz
int3
inc
mov
bound
push
inc
sub
aas
sub
pop
and
aam
outs
xor
data16
and
push
dec
push
dec
sbb
test
addr16
cmps
sub
(bad)
jbe
data16
in
mov
jae
xor
loopne
jmp
pop
cmp
sub
rol
sub
ret
adc
xchg
test
jo
jae
pushf
fwait
push
push
jnp
rcr
adc
cmp
out
cmps
loop
sar
and
in
int
pusha
dec
int
jae
cli
stc
sti
movs
out
mov
test
sub
addr16
mov
mov
mov
or
sub
dec
push
das
leave
shl
je
adc
jg
mov
(bad)
mov
adc
loop
xchg
cmp
sbb
jo
sub
inc
xor
out
(bad)
mov
in
sub
dec
lock
popa
push
imul
and
add
lds
push
push
clc
sbb
push
(bad)
lea
dec
in
mov
mov
cmp
pop
loope
shl
jp
mov
lea
lea
mov
retf
pop
std
cmp
mov
neg
jbe
sbb
lea
call
mov
xchg
ins
(bad)
ins
cmp
ret
pop
adc
and
push
dec
sub
test
nop
adc
cmp
push
imul
(bad)
jb
sbb
mov
mov
sbb
addr16
or
shr
push
icebp
retf
fstp
sub
movs
sub
outs
sub
(bad)
add
mov
push
and
push
call
xchg
and
out
adc
stc
stos
sbb
arpl
inc
lods
data16
pop
push
hlt
bnd
sbb
dec
or
inc
and
or
int3
test
rol
sub
jle
sbb
sub
xor
mov
mov
mov
or
add
xchg
jb
push
sbb
adc
ds
cmps
loop
jge
cmp
ins
sbb
dec
mov
movs
cdq
out
pop
jge
cmp
inc
das
sbb
sub
push
enter
add
scas
fldl2t
sti
inc
in
cmps
dec
stos
popf
pop
or
cdq
xchg
test
xor
push
pusha
push
xor
fucomip
pop
mov
outs
aad
xchg
stos
add
jge
sti
mov
jmp
not
push
add
jb
push
ror
push
jge
inc
mov
dec
repnz
(bad)
fidivr
jbe
cs
inc
sub
int
xchg
push
jmp
dec
inc
push
pop
jge
fadd
rol
dec
cmps
fst
mov
movs
jns
test
loop
(bad)
mov
cmp
ror
ret
xor
std
add
popf
add
(bad)
xor
or
mov
push
and
cmp
in
sbb
jb
fsub
stc
xor
movs
mov
cmp
pop
cmc
(bad)
pop
(bad)
xor
sub
data16
lods
bound
cli
inc
xlat
and
pop
mov
cmps
test
xchg
out
fisttp
arpl
jne
out
pop
js
cmp
push
jecxz
mov
cmp
xor
enter
std
leave
lea
mov
mov
sbb
cmc
sbb
cmp
fsubrp
mov
leave
jno
push
push
or
stc
icebp
or
cmp
dec
pop
imul
mov
mov
mov
push
sub
aas
or
xchg
xor
in
stc
mov
or
das
imul
sahf
jbe
shl
and
cmp
aas
add
stc
repnz
rcl
pop
adc
push
xchg
jnp
outs
imul
sbb
xchg
xor
mov
data16
adc
test
fcomp
movs
in
(bad)
xor
xor
nop
(bad)
or
mov
adc
retf
dec
push
lods
scas
cmp
lods
pop
xchg
ins
(bad)
ins
repz
in
ret
gs
ror
add
jb
daa
push
enter
daa
repz
or
xchg
and
dec
std
ret
push
lods
mov
(bad)
mov
(bad)
push
(bad)
sub
dec
dec
sar
aad
int
enter
jbe
push
aaa
adc
stc
test
or
mov
imul
sbb
idiv
xchg
lea
mov
inc
inc
xor
outs
xchg
and
repnz
adc
inc
or
jbe
cmp
call
dec
repz
(bad)
xchg
sar
icebp
sbb
ja
lds
cmp
(bad)
std
sahf
add
lods
popf
adc
dec
test
in
loope
mov
xor
mov
lock
out
aad
sub
sub
mov
(bad)
push
add
stos
sahf
add
pop
arpl
lahf
mov
std
sbb
or
das
es
jp
xor
out
and
push
xchg
imul
or
aam
ds
imul
rcl
mov
lods
add
ror
mov
cmp
sbb
out
mov
fmulp
in
push
lods
add
dec
out
mov
dec
das
loope
push
pop
push
cmp
(bad)
cmp
(bad)
push
jnp
xchg
cs
sbb
imul
add
mov
push
sub
mov
ret
xchg
xlat
hlt
push
or
lds
fcom
lea
std
mov
bound
imul
or
neg
xchg
js
movs
mov
data16
mov
and
fadd
lock
es
cs
lock
mov
and
addr16
mov
int
dec
jbe
mov
lods
push
mov
push
xchg
inc
popf
ret
in
pop
adc
fnstsw
mov
data16
in
inc
adc
inc
or
xchg
and
in
(bad)
rcr
movs
in
mov
jle
mov
fucom
inc
mov
sbb
mov
fst
mov
jecxz
ins
sub
std
cs
mov
xor
dec
jecxz
std
adc
xchg
std
ret
cmp
mov
lods
cmps
std
push
push
and
and
xchg
ror
(bad)
in
xchg
(bad)
fnsave
add
leave
xor
jae
push
repnz
and
sbb
push
cmp
mov
mov
push
stc
or
mov
xor
sbb
loope
(bad)
shr
xor
(bad)
cmp
outs
sbb
shl
add
movs
xchg
cmp
cdq
jmp
mov
aam
sub
(bad)
jo
jecxz
aaa
sub
sub
mov
dec
out
push
movs
inc
pop
test
jge
jg
icebp
sti
fcmovnbe
aad
shl
fnsave
mov
dec
jecxz
jmp
and
and
mov
jbe
data16
inc
bound
inc
clc
mov
out
pop
xor
pop
mov
sub
enter
inc
sub
push
push
imul
xchg
mov
sbb
jbe
arpl
ds
xor
jb
fyl2xp1
lods
inc
jle
movs
mov
sub
cmp
jmp
lahf
push
in
fst
mov
cld
test
stc
ss
mov
jge
repnz
inc
rcl
jns
int
push
push
mov
and
inc
pop
jge
(bad)
mov
and
pop
cmps
pop
push
sub
jae
cwde
mov
cld
test
mov
xchg
scas
(bad)
sub
sub
aad
or
add
ss
jp
call
sbb
ret
imul
sbb
inc
int
int3
stc
in
add
ss
bound
movs
out
(bad)
out
div
cmp
js
int
add
push
stc
clc
ror
pushf
(bad)
lods
lea
jns
sbb
out
aas
jne
mov
repz
in
add
fistp
sbb
xchg
jge
or
fst
ja
data16
adc
es
jle
pushf
clc
sahf
mov
or
jecxz
imul
retf
test
add
push
jg
push
stc
push
das
mov
sbb
sub
inc
loop
int
lea
add
push
lods
jle
jl
mov
mov
cmps
das
rol
(bad)
xchg
xchg
data16
in
pushf
mov
dec
lods
push
mov
iret
mov
and
or
out
ret
aas
fst
inc
das
jae
fstp
hlt
push
mov
mov
or
ret
push
mov
test
enter
dec
pop
mov
xchg
add
cmps
sbb
push
xor
jmp
jmp
dec
push
pop
mov
out
call
xor
inc
std
mov
lds
dec
out
(bad)
jae
inc
xchg
sub
push
and
imul
jle
adc
pop
cmps
ins
pushf
cmp
repnz
iret
sub
and
lea
inc
xor
(bad)
repz
fidiv
xchg
mov
lea
clc
pop
or
push
pop
ins
xor
pop
in
xchg
inc
inc
into
fdiv
out
sbb
cmp
clc
dec
or
lods
and
aad
addr16
call
pop
mov
enter
dec
rol
inc
push
sbb
shl
out
stos
xchg
(bad)
pushf
and
mov
adc
mov
ret
mul
cmps
loop
es
inc
stc
popf
aaa
ss
dec
stc
and
scas
pop
stos
and
xchg
rcl
fcomp
xlat
test
mov
jbe
add
arpl
ss
(bad)
outs
pop
nop
sbb
sahf
rol
shl
into
outs
xchg
outs
jbe
xor
xchg
fsubp
pop
lods
lds
cmp
movs
push
mov
test
push
out
dec
test
add
(bad)
fisttp
mov
sbb
cmp
xchg
pusha
xor
cs
in
push
stos
or
div
sub
std
(bad)
outs
push
mov
lock
sahf
scas
test
xchg
lods
pushf
mov
js
test
mov
xor
push
or
adc
ss
jle
dec
aad
out
lahf
inc
stc
sub
mov
hlt
jae
push
mov
or
push
sub
mov
inc
adc
test
cmp
into
mov
xchg
dec
std
sbb
mov
or
jae
and
retf
push
inc
stos
test
xlat
push
in
mov
lea
mov
cmp
rcr
aad
retf
test
fucomp
into
inc
repz
ss
pop
vpmaddwd
in
xchg
test
push
jbe
data16
pop
push
dec
or
lea
outs
jle
dec
dec
pop
ds
std
xchg
xchg
fucom
lods
neg
xor
inc
mul
inc
add
imul
or
aad
adc
adc
push
test
les
push
cmps
in
es
retf
mov
or
jo
enter
jmp
xchg
cdq
sahf
loopne
or
sub
xchg
rcl
xchg
test
jb
xchg
scas
push
mov
sub
lock
jbe
jmp
push
xlat
push
sub
dec
fwait
mov
xor
pop
cmp
cs
dec
mov
add
and
and
popa
in
or
push
scas
cdq
pop
or
sahf
test
adc
mov
mov
or
xchg
out
retf
das
jns
and
inc
inc
je
inc
dec
popf
(bad)
fld
jp
inc
bound
(bad)
sub
xor
sti
pop
sahf
mov
xchg
daa
mov
imul
pop
xlat
lea
loop
xchg
icebp
add
push
adc
icebp
cwde
aaa
rcr
jmp
out
pop
mov
or
jb
inc
int
fisubr
enter
jge
stc
jnp
mov
push
fnstcw
imul
sbb
and
jle
fchs
jl
inc
in
mov
sbb
jge
ins
xchg
pusha
pop
loop
xchg
fsub
fld
adc
clc
and
out
test
jp
cmps
rcr
xor
cdq
xor
lea
push
mov
std
adc
(bad)
sub
nop
rcr
adc
sar
lea
and
dec
xchg
cdq
push
mov
loop
xchg
mov
xor
stos
es
leave
lods
popf
lahf
in
je
dec
scas
push
xchg
popa
xchg
push
sbb
sub
int
lds
gs
mov
jo
mov
jbe
out
xchg
xchg
xlat
cmp
jle
jg
or
sbb
daa
lea
jae
or
(bad)
aam
dec
mov
sahf
sub
mov
inc
adc
ss
aad
out
mov
mov
or
xchg
(bad)
leave
jnp
sub
dec
cwde
sbb
cwde
xor
out
test
jge
or
shl
sar
mov
push
add
pop
daa
(bad)
arpl
push
push
mul
cmp
imul
aad
call
daa
in
cmps
push
or
test
(bad)
add
jle
shl
and
test
leave
lods
fsubr
mov
aad
lods
mov
cmps
aad
lds
fidiv
push
jg
test
daa
pop
das
lods
inc
out
push
(bad)
mov
call
jp
or
adc
in
sub
ss
les
jge
mov
(bad)
sub
pop
or
int
add
ss
pushf
das
lods
inc
jmp
or
mov
fcomp
cmps
dec
dec
je
lods
xor
xchg
mov
aam
mov
jmp
daa
repz
xor
jmp
ss
mov
jbe
lea
clc
fnsetpm(287
into
sbb
mov
sub
data16
in
adc
outs
mov
outs
mov
ds
jge
cli
mov
not
cwde
outs
in
mov
push
clc
(bad)
inc
(bad)
out
imul
ins
mov
dec
aaa
ror
mov
aad
add
push
inc
ds
aas
sub
pop
cmps
mov
xor
xor
fidiv
fnstenv
shl
ins
sub
sbb
lahf
mov
fnstsw
sbb
je
push
push
push
int
js
push
xchg
das
cmp
mov
sub
push
add
pop
(bad)
(bad)
jmp
out
(bad)
mov
xchg
repnz
cmps
cmc
scas
sub
(bad)
cdq
cmc
in
scas
lds
adc
int
inc
inc
push
mul
push
sbb
sbb
jbe
cdq
xor
dec
inc
adc
call
addr16
test
dec
in
mov
in
int
and
mov
pop
push
(bad)
push
mov
out
in
ins
pop
jge
repnz
pop
xor
push
shr
gs
inc
pop
or
ds
(bad)
in
add
ror
(bad)
fnstsw
adc
movs
push
xor
mov
jge
or
and
dec
push
lea
jne
lods
xchg
mov
jne
cs
mov
cmps
jmp
jbe
pop
ffree
in
pop
add
jg
sbb
push
mov
or
cmps
sbb
addr16
cdq
cmp
call
loopne
or
xlat
ins
(bad)
and
js
cmc
adc
mov
inc
and
mov
lea
mov
push
stos
leave
add
inc
or
iret
pop
in
and
(bad)
imul
loopne
sar
aaa
ret
call
inc
loop
add
stos
cwde
adc
arpl
lahf
jmp
sbb
push
jmp
mov
jns
or
xor
mov
jno
lods
ror
jl
mov
fwait
jl
or
or
xor
fnsave
(bad)
xor
cli
mov
sahf
(bad)
ins
xchg
xor
push
shr
repz
ins
in
push
add
or
(bad)
fdiv
or
push
sbb
out
push
xchg
sub
cmps
mov
dec
dec
add
jbe
mov
pop
ds
sbb
dec
jg
or
ret
fs
xor
mov
std
mul
aaa
(bad)
(bad)
push
loopne
adc
pop
push
pop
push
sub
loop
mov
sbb
stc
or
xchg
push
out
les
cmp
mov
cmps
adc
jle
ja
(bad)
in
in
inc
or
out
aaa
and
out
xchg
sub
or
stos
sbb
mov
in
cwde
cmps
cld
add
mov
mov
outs
dec
pop
ins
push
sbb
mov
push
jge
jns
popf
mov
cmps
mov
pop
and
mov
test
xlat
xchg
push
(bad)
push
sub
cwde
xchg
in
pop
in
stc
lea
add
inc
dec
in
(bad)
in
or
xchg
inc
xor
das
jae
fstp
mov
pusha
(bad)
sub
out
cmp
iret
fsub
aad
call
sar
out
(bad)
or
cmc
xchg
jp
ret
scas
xchg
inc
test
ss
jne
pushf
mov
cmc
outs
jl
xchg
mov
cmps
pop
sar
das
int
fnstsw
adc
xor
lahf
fst
pop
mov
xchg
cmp
cmc
xchg
inc
jns
mov
cmc
(bad)
in
ss
es
call
mov
or
punpckhwd
(bad)
test
mov
scas
in
add
push
inc
push
aad
repz
nop
js
popf
and
in
scas
std
pop
jb
push
(bad)
mov
neg
ins
ds
pop
neg
je
aad
call
daa
in
cmps
push
jmp
push
jl
out
and
cmc
nop
push
jbe
test
push
xchg
arpl
sbb
imul
mov
jge
xor
aam
outs
xor
cmp
mov
lods
out
xor
out
sub
sbb
lahf
mov
fnstsw
aad
je
push
push
push
enter
pop
xchg
das
cmp
push
xchg
push
add
shl
jmp
out
(bad)
xor
xchg
repnz
cmps
cmc
stos
sub
(bad)
cdq
cmc
in
scas
shl
es
jmp
movs
ficomp
ins
cli
sbb
sbb
jbe
cdq
xor
dec
inc
adc
sbb
stc
push
dec
push
arpl
pop
(bad)
adc
xchg
lds
and
mov
in
popf
stc
push
mov
out
jmp
mov
pop
xor
mov
jge
add
pop
ss
pop
or
ds
mov
mov
(bad)
(bad)
into
mov
or
jge
or
and
stos
push
loope
adc
cs
lods
jo
mov
ins
cs
mov
cmps
test
ret
and
scas
add
leave
test
neg
mov
into
cmp
mov
sub
push
lea
jb
xchg
jmp
mov
mov
sahf
dec
cmc
dec
imul
and
(bad)
or
cld
rcr
sub
adc
sahf
movs
jns
sahf
fwait
and
sbb
fcom
mov
inc
jne
mov
jge
sub
sbb
nop
(bad)
jo
jle
adc
jnp
mov
or
push
imul
pop
psubb
popa
shr
neg
dec
jge
sub
jne
sar
fs
(bad)
fld
jb
nop
sbb
push
lock
push
pop
pop
ins
(bad)
xchg
repnz
loop
xchg
rcl
sub
mov
lea
test
aaa
test
dec
dec
sbb
sti
xchg
jne
mov
xor
daa
lea
inc
lds
dec
adc
dec
mov
cmp
loop
xchg
ret
int
imul
movupd
jb
mov
jmp
mov
ret
test
pop
enter
sti
sub
add
in
sahf
pop
sbb
ins
mov
rol
das
jo
sti
into
mov
loopne
cli
call
neg
js
cdq
lock
loop
xor
lea
ss
retf
pushf
adc
inc
jnp
out
jbe
(bad)
(bad)
cmp
cmps
jns
int
fst
inc
xchg
scas
dec
jne
adc
stc
add
fwait
xchg
cmp
dec
push
mov
xchg
mov
push
sbb
xchg
in
mov
add
test
sar
jecxz
or
push
and
icebp
jne
mov
(bad)
(bad)
xchg
cmp
(bad)
popf
sub
mov
jp
rcl
inc
push
shl
mov
cmc
cmp
neg
sar
cmp
clc
adc
test
test
jno
mov
aad
cmp
sbb
sub
and
pop
sub
fwait
movs
xchg
cmps
inc
mov
ds
dec
jne
inc
(bad)
mov
sub
mov
inc
jmp
and
mov
xchg
jbe
xor
(bad)
int3
aad
int
mov
or
dec
adc
(bad)
mov
xchg
test
mov
push
data16
std
xor
stc
push
(bad)
push
jge
repnz
xchg
cmc
xchg
ja
sti
and
xor
and
lods
push
arpl
stc
test
(bad)
gs
mov
dec
pop
inc
xchg
sub
data16
adc
test
push
lods
cli
mov
push
xchg
jmp
(bad)
sbb
xchg
ror
aaa
jbe
popw
mov
mov
popf
test
into
cmc
or
fist
mov
cmp
int
in
mov
lea
mov
idiv
push
cwde
jne
xchg
lods
cmps
inc
dec
inc
enter
mov
fnstsw
scas
dec
enter
test
push
not
loopne
push
sub
adc
(bad)
aam
sbb
(bad)
stc
mov
mov
add
sbb
cmp
cmp
add
cmp
inc
inc
sahf
pop
out
push
sub
lock
sub
call
test
lock
fcmove
jmp
or
dec
xchg
jl
mov
(bad)
cmp
and
xor
add
dec
mov
out
mov
shl
xor
std
leave
pushf
ficomp
or
in
sbb
xchg
dec
xor
repnz
pop
repnz
jo
cdq
imul
dec
shr
aaa
pop
(bad)
xlat
sub
loop
xchg
push
xor
lods
retf
cwde
loopne
popf
push
push
xor
lods
mul
mov
loop
(bad)
jge
ret
fst
push
mov
pop
ror
popf
xlat
xchg
inc
mov
(bad)
and
add
dec
test
mov
sbb
mov
sub
cdq
int3
stos
in
add
pushf
rcr
push
out
add
or
shl
push
test
mov
jmp
xchg
adc
test
std
jbe
adc
push
mov
ss
push
push
push
ins
mov
frstpm(287
(bad)
out
sub
dec
cmps
test
popf
xor
adc
mov
popf
dec
lods
push
xchg
or
mov
mov
and
call
inc
cbw
test
mov
bound
or
(bad)
xor
repnz
xchg
jl
cmp
mov
mov
popf
out
or
ret
out
mov
push
sbb
sbb
scas
xor
jo
pop
in
mov
inc
and
mov
dec
loop
jmp
mov
and
inc
adc
cmps
test
(bad)
out
mov
mov
ins
gs
retf
je
push
jno
lahf
test
mov
push
dec
xchg
stos
and
js
cmps
sar
test
mov
push
(bad)
xchg
dec
call
xchg
repnz
xchg
push
jns
jbe
xor
jmp
popf
arpl
inc
enter
dec
mov
cmc
xchg
imul
mov
push
jmp
xor
test
sahf
repnz
xchg
push
xchg
xor
adc
push
jbe
lea
jl
jnp
loop
sbb
(bad)
out
lock
leave
sub
and
cdq
push
mov
(bad)
(bad)
jle
adc
jmp
fiadd
js
cmps
fs
xchg
rol
jo
fnsave
push
(bad)
ins
mov
xchg
and
inc
test
mov
mov
mov
popf
push
mov
stos
dec
adc
cmp
loop
xchg
pusha
jns
xor
cmp
imul
pop
xchg
jl
or
imul
cdq
fucomi
or
dec
repz
out
mov
mov
test
jg
xchg
pop
ror
cmp
mov
mov
jmp
mov
or
jbe
cmps
xchg
fwait
sub
xchg
sbb
sbb
es
(bad)
lods
stc
xor
jbe
mov
inc
dec
sub
pop
cmp
bnd
jae
test
ja
mov
clc
or
rol
cmps
sbb
cli
aad
xor
push
stos
data16
pop
mov
out
mov
jl
jge
add
enter
xchg
sbb
and
arpl
push
push
test
mov
fidiv
cmps
mov
frstor
retf
push
ret
stc
outs
or
fcom
ds
dec
push
xor
sub
mov
in
test
sahf
adc
cs
jo
push
popf
jbe
pop
and
inc
mov
enter
xchg
lea
lds
cmps
xchg
cs
out
push
mov
push
sub
mov
mov
ds
pop
ret
pop
shl
xchg
movs
xchg
(bad)
pop
test
xor
mov
repnz
popf
out
pop
mov
test
xchg
xor
sbb
(bad)
inc
mov
jge
dec
lea
sub
data16
ds
pop
adc
cli
sbb
mov
sbb
sub
(bad)
ret
inc
fld
sub
add
lds
add
repz
mov
push
repnz
out
mov
out
xchg
and
push
shr
adc
inc
mov
cmps
dec
push
aaa
out
inc
ins
xchg
xor
(bad)
mov
ret
pop
ret
movs
cdq
test
fnstcw
dec
push
out
cmp
fidivr
xor
repnz
scas
in
inc
add
mov
aad
push
fst
aas
ins
std
inc
mov
cmps
push
add
data16
jno
mov
(bad)
push
lea
sub
mul
ror
lods
push
cwde
dec
mov
adc
fnsave
call
and
jbe
cdq
push
push
mov
jmp
add
push
test
sbb
div
stos
in
sub
int
stos
clc
or
lea
xchg
sub
popa
push
jne
pop
int3
push
mov
lds
lods
push
add
inc
jmp
int
sbb
mov
in
xchg
in
in
test
ss
daa
pushf
aas
out
mov
jecxz
jl
cmc
mov
stos
add
enter
push
sub
sbb
ret
inc
cmps
cmc
xchg
test
shl
iret
cld
cmp
pusha
popf
push
lods
lea
xlat
xor
jge
jp
xchg
jle
icebp
dec
xor
jbe
pop
std
(bad)
(bad)
jns
fld
cli
lods
neg
popf
mov
jl
adc
call
inc
mov
es
xchg
out
or
imul
dec
or
push
lods
lea
xchg
jl
clc
cmp
jns
dec
adc
dec
data16
into
lea
fadd
mov
push
pop
sub
dec
repz
ja
ja
(bad)
bound
cmps
dec
mov
jge
sbb
mov
mov
in
cmp
bound
std
push
mov
fst
neg
jbe
(bad)
fstp
sub
lods
mov
pop
mov
cmp
or
retf
std
dec
cmp
pop
fisubr
enter
out
adc
mov
mov
lods
ins
push
jle
sti
retf
xor
xchg
pop
icebp
inc
jbe
pop
push
into
push
outs
push
clc
test
pop
sbb
cs
or
idiv
push
mov
cld
test
stc
ss
mov
jge
pop
jb
cmp
shl
jge
not
clc
xor
ins
cmp
addr16
lods
mov
outs
jns
int
(bad)
aad
cs
sub
gs
call
mov
ins
cmp
gs
mov
xor
cwde
xchg
in
adc
jae
fstp
mov
or
out
jge
pop
cmps
pop
push
rol
jg
test
bound
mov
div
cmp
sbb
mov
out
mov
(bad)
fxch
push
out
lds
dec
and
into
or
cld
cmps
data16
in
add
inc
jmp
pop
and
sub
xchg
sbb
mov
arpl
jb
push
pop
daa
leave
xor
in
inc
push
cmps
movs
ins
aaa
(bad)
xchg
xchg
jge
into
pop
sbb
sbb
mov
push
lods
stc
ds
mov
das
sub
aad
pop
sbb
int3
mov
fnsave
pop
ret
out
dec
out
lds
dec
outs
pop
mov
sar
sbb
xor
inc
std
adc
lds
dec
out
(bad)
jae
inc
xchg
sub
push
and
popa
es
push
vmovd
adc
pop
ret
cmp
bnd
xchg
jbe
and
lea
inc
xor
movs
(bad)
das
repz
fidiv
xchg
adc
xor
or
(bad)
jge
dec
into
loop
int3
fistp
adc
es
dec
lods
pushf
clc
sahf
mov
mov
mov
jecxz
imul
or
mov
outs
jg
push
icebp
push
das
mov
sbb
dec
inc
fisubr
int
mov
leave
dec
(bad)
lods
pop
mov
adc
imul
fnstsw
in
pushf
mov
dec
lods
push
ins
test
xor
mov
push
sbb
mov
aas
fst
inc
das
jae
fstp
hlt
push
mov
mov
or
ret
push
mov
add
dec
(bad)
aad
pop
mov
ds
xchg
mov
cmps
pop
adc
int
out
clc
push
scas
loop
stos
pop
push
loopne
clc
cmps
sbb
and
adc
imul
lds
ins
lea
mov
dec
sub
call
jecxz
mov
adc
jle
mov
inc
xchg
or
inc
mov
sbb
leave
ja
dec
mov
inc
sub
lods
adc
out
mov
mov
(bad)
shr
xor
test
shl
adc
(bad)
fnstsw
mov
sub
ins
ret
pop
sub
ins
es
and
aad
mov
pop
adc
or
pop
ds
sub
or
adc
(bad)
mov
popf
pop
pop
stc
mov
dec
ins
add
jne
popf
mov
mov
cmp
fucomi
dec
std
fidivr
jmp
(bad)
push
mov
aad
jge
pop
das
and
jbe
cbw
test
out
int3
popf
inc
push
in
mov
or
cmp
pusha
xor
xor
mov
lock
cdq
out
add
mov
idiv
cmps
ins
cld
inc
pop
aas
int
push
mov
ins
stos
pop
bound
loop
cwde
test
lea
les
sub
xor
lods
dec
adc
or
test
xchg
dec
jge
inc
mov
sbb
push
jle
lea
xchg
adc
es
ds
mov
out
test
sub
in
xor
in
std
lea
loopne
dec
or
sub
ret
movhps
push
fisub
dec
mov
push
mov
push
pop
jmp
adc
sbb
mov
inc
dec
cmp
push
adc
mov
mov
popf
popf
cs
repz
dec
imul
xor
push
xchg
jnp
mov
mov
mov
pop
cmp
dec
mov
std
out
inc
mov
xchg
movs
add
aad
jg
hlt
push
ins
cmps
inc
lods
lea
dec
daa
pop
pop
mov
push
aas
xchg
inc
add
out
fdiv
fs
(bad)
dec
data16
lahf
fcom
ss
adc
pop
sub
repnz
dec
imul
push
in
push
jbe
lea
jmp
out
pop
ret
cmp
pop
or
sbb
sti
int
and
add
push
xor
dec
movs
pop
sub
adc
imul
mov
jno
fst
dec
sbb
out
push
out
or
push
fs
and
leave
mov
cmc
call
sbb
jp
sub
xchg
sub
arpl
test
jg
stc
lods
inc
jle
sbb
mov
call
cmps
ret
mov
inc
pop
inc
mov
jmp
adc
pop
push
ins
dec
cmp
cmp
cmp
mov
inc
js
pop
ins
push
ss
mov
cmp
ret
arpl
test
mov
leave
lods
fcom
lods
stc
dec
mov
cmp
xchg
jbe
mov
cmp
jmp
repz
mov
gs
mov
xor
fsub
inc
push
call
push
pop
add
cmp
repz
iret
sub
and
lea
mov
xchg
mov
das
repz
fimul
xchg
adc
xor
cmovae
or
cmps
jge
dec
into
jecxz
repnz
adc
es
lods
pushf
clc
sahf
mov
mov
mov
jecxz
push
int
fnstsw
jg
push
add
sahf
aaa
xor
jge
or
inc
fsubr
int
ins
push
lsl
push
lods
es
adc
or
js
xchg
xchg
data16
pushf
mov
dec
lods
push
mov
iret
mov
and
or
out
ret
mov
aas
fst
inc
das
jae
fcomp
hlt
push
mov
mov
or
ret
push
mov
add
dec
arpl
dec
pop
mov
xchg
add
cmps
sbb
push
xor
jge
dec
arpl
call
dec
jle
mov
jmp
sbb
xor
inc
std
mov
lds
dec
out
(bad)
jae
add
or
cmps
arpl
xor
es
lea
mov
imul
jge
inc
mov
and
mov
es
cmc
inc
push
mov
xchg
add
imul
cmp
leave
dec
imul
cmps
mov
(bad)
sub
sub
and
add
loop
push
std
pop
mov
sub
dec
inc
xchg
sub
mov
add
lods
rcl
lods
lea
test
jge
in
cmps
ja
pop
xchg
mov
push
pop
and
inc
gs
std
push
clc
or
xlat
ins
push
or
outs
arpl
adc
scas
jle
cli
cdq
(bad)
sub
inc
lock
scas
call
loop
cmp
push
mov
adc
jne
lods
stc
xchg
lss
clc
mov
pop
mov
push
mov
loope
add
mov
jle
push
mov
into
mov
js
or
fst
inc
mov
call
push
jmp
test
dec
nop
dec
adc
cmp
pop
push
imul
push
aam
adc
imul
ins
mov
inc
xor
jge
aaa
aam
dec
cmp
jecxz
imul
cmps
cwde
push
sbb
es
jle
jb
hlt
mov
mov
dec
or
xchg
cmps
test
or
adc
push
inc
test
sub
stc
cmp
mov
addr16
fst
inc
cmp
enter
or
psraw
rcr
xchg
int3
scas
lods
into
cmps
sbb
mov
data16
sub
xor
(bad)
stc
into
pushf
fwait
jmp
or
xchg
test
popf
mov
into
loop
pop
imul
or
int
call
jg
stc
lods
inc
xlat
jecxz
mov
sub
ins
test
push
iret
sub
data16
(bad)
mov
push
lods
stc
ds
mov
adc
mov
cmc
cmc
sbb
xchg
sbb
inc
clc
mov
mov
fbstp
pop
mov
and
imul
jbe
test
mov
in
aad
jmp
push
jl
out
and
cmc
nop
js
popf
and
jae
push
(bad)
mov
neg
ins
ds
pop
neg
je
aad
movs
cwde
arpl
jne
mov
inc
push
inc
test
or
pop
or
inc
das
mov
fs
in
stos
std
into
lea
inc
jmp
out
sub
or
das
cmp
shl
cbw
add
into
popf
jle
mov
xchg
jbe
xlat
jge
or
(bad)
jns
xchg
xor
mov
mov
lds
sti
test
mov
pop
mov
cmp
shl
inc
and
ss
popf
inc
inc
stc
lods
push
pop
aad
(bad)
cmp
sbb
jbe
cdq
xor
dec
inc
adc
sahf
push
out
stc
push
dec
push
adc
movs
(bad)
movs
dec
in
mov
mov
test
es
push
cmc
stc
push
mov
out
lahf
ins
add
repnz
pop
xor
or
test
gs
popf
shr
inc
pop
ds
mov
ror
mov
mov
push
push
mov
jge
or
and
sbb
mov
jne
lods
ret
mov
sbb
cs
imul
fst
leave
test
idiv
mov
into
(bad)
xchg
dec
outs
jns
int
xchg
push
das
inc
pop
leave
bound
push
inc
dec
mov
aas
sub
pop
inc
cmps
fist
outs
xor
xchg
retf
fnstenv
mov
or
mov
out
sbb
lahf
mov
fnstsw
sbb
push
mov
es
call
pop
xchg
in
xchg
push
add
into
(bad)
(bad)
jmp
out
(bad)
jns
xchg
repnz
dec
ins
sahf
jmp
nop
call
daa
popf
pop
lods
pop
mov
push
stc
aam
xor
push
cbw
cmps
add
es
rcr
inc
dec
push
shl
xchg
rcr
jge
loope
fisubr
pusha
xchg
xor
xor
mov
ins
push
push
out
xor
out
push
xchg
scas
xor
(bad)
cmp
adc
push
add
pushf
imul
push
add
jmp
bound
xchg
loopne
sub
push
fld
mov
pop
sub
jge
and
(bad)
ret
cdq
cwde
mov
dec
lods
popf
push
mov
adc
loopne
jl
ret
cmps
xchg
jg
out
loope
enter
in
inc
in
call
pop
push
cmp
jg
imul
inc
dec
adc
push
jne
jbe
ss
inc
call
sbb
push
cmp
repnz
xchg
xor
leave
ss
fldl2t
arpl
mov
mov
cmp
addr16
pop
loope
add
jae
div
xchg
cmp
loop
inc
mov
ja
sahf
mov
fcmovb
jl
inc
scas
test
and
adc
in
retf
mov
mov
fmul
lods
jp
cli
mov
mov
adc
js
xor
fst
add
add
mov
mov
jge
adc
sbb
add
push
and
push
cmp
arpl
into
aad
shl
stc
popf
std
push
sbb
arpl
retf
add
fld
hlt
add
lods
sub
sub
xor
push
in
cmp
mov
std
sar
lods
add
cmps
loop
lds
mov
inc
and
fisttp
pop
cmc
jmp
(bad)
out
mov
dec
mov
pop
nop
imul
test
mov
lods
shl
(bad)
sub
push
inc
add
gs
in
inc
xchg
leave
cli
dec
test
(bad)
xchg
mov
mov
or
ret
xor
push
jge
scas
xchg
xor
clc
xor
push
pop
mov
repnz
pusha
loope
adc
movs
int
fld
mov
cmp
es
cli
add
(bad)
(bad)
pushf
mov
and
in
imul
push
inc
test
ins
popf
jmp
repz
mov
gs
sahf
test
lods
push
pusha
push
adc
loope
pop
mov
xchg
test
xchg
cmp
fst
ja
data16
scas
mov
xchg
push
shl
mov
xor
cmc
nop
ficom
xor
or
cs
jb
ja
into
lods
inc
ss
mov
mov
mov
jecxz
xchg
je
mov
add
jbe
mov
ret
(bad)
lods
(bad)
mov
popf
ins
lahf
ins
stc
or
and
adc
add
bound
push
out
in
pop
out
adc
xchg
cmp
int
cdq
(bad)
stc
popf
push
outs
push
jmp
cwde
xchg
mov
cmps
xchg
shl
ja
push
test
std
popa
sub
push
add
es
pop
sub
dec
ret
(bad)
jbe
pushf
cwde
push
adc
sub
dec
adc
inc
push
mov
js
popf
xchg
mov
cmps
xchg
dec
je
lea
or
mov
and
jns
in
mov
out
adc
sbb
js
test
data16
in
pushf
mov
dec
lods
push
and
sub
ss
mov
aas
fst
inc
das
jae
fcomp
hlt
push
mov
mov
or
ret
push
mov
mov
std
cld
enter
dec
pop
mov
xchg
add
cmps
sbb
push
xor
fnsave
dec
arpl
call
dec
cmps
pop
mov
in
call
xor
inc
std
and
lds
dec
out
(bad)
jae
inc
xchg
sub
push
and
test
das
push
(bad)
adc
ins
pushf
cmp
repz
sub
and
ss
(bad)
popf
mov
test
(bad)
das
repz
fidiv
xchg
adc
leave
push
cmovae
or
mov
dec
into
jecxz
enter
mov
mov
popf
push
pushf
clc
sahf
mov
mov
mov
jecxz
push
int
fnstsw
jg
push
gs
das
mov
sbb
ret
or
xchg
rol
out
sbb
inc
push
and
sub
mov
(bad)
mov
mov
jbe
jns
jb
and
retf
enter
cli
adc
rol
std
xlat
lock
jge
xchg
sub
push
inc
push
push
fld1
pop
(bad)
xor
mov
dec
cmps
hlt
xchg
jecxz
jmp
xor
sub
add
dec
jmp
adc
jl
pop
mov
sub
sub
xchg
ret
popf
in
(bad)
xlat
or
test
mov
pop
xor
push
xchg
outs
sub
(bad)
cmps
out
mov
jae
inc
icebp
out
or
dec
stos
pop
jecxz
(bad)
stos
je
aas
adc
ret
push
out
xchg
jo
sub
sahf
mov
mov
popa
mov
mov
or
nop
push
test
add
stos
sahf
fwait
call
sbb
pop
or
mov
cmps
dec
xchg
sub
(bad)
adc
push
daa
fstp
sbb
xchg
pop
daa
cmp
mov
rol
in
in
mov
popf
repz
mov
dec
ins
push
aas
fistp
imul
lea
mov
jbe
fwait
push
pop
lock
(bad)
xchg
and
push
sub
cwde
xchg
in
pop
in
stc
lea
add
push
hlt
dec
out
(bad)
push
jne
std
sbb
jbe
cdq
push
inc
in
inc
add
jge
mov
pop
ins
adc
leave
popf
mov
inc
jae
inc
test
repnz
xchg
ret
xor
mov
cmp
or
push
pop
pusha
push
sti
leave
xchg
in
or
sbb
movs
repnz
pop
xchg
sub
dec
and
inc
scas
and
xor
ror
sar
sub
daa
jge
xor
enter
lods
stc
lods
test
xchg
rol
mov
in
fst
ins
data16
add
daa
pop
push
es
mov
xor
add
jbe
and
mov
test
dec
pop
mov
cmp
out
xchg
ins
xor
xor
push
jle
in
adc
sbb
xor
sar
repz
in
add
fistp
sbb
xchg
xchg
cmp
cmps
loop
sub
cmp
cwde
in
push
jmp
mov
cmp
ds
mov
lahf
mov
inc
pop
add
lods
not
push
push
mov
(bad)
or
mov
push
ds
jns
pushf
mov
in
mov
bound
lods
fiadd
out
neg
ret
scas
aam
repnz
cmc
sbb
xchg
and
and
fxch
std
test
or
or
out
jge
pop
cmps
pop
push
rol
adc
lea
push
sti
pushf
clc
div
(bad)
sub
dec
sub
cmp
jbe
aam
fst
(bad)
loop
mov
pop
(bad)
aad
das
repz
fimul
xchg
adc
leave
push
cmovae
or
fidivr
dec
into
jecxz
repnz
adc
es
or
and
cmp
out
pop
fs
dec
fnstsw
jg
push
imul
sahf
ss
jge
or
inc
(bad)
int
xor
enter
push
lods
fidivr
adc
cmps
das
rol
(bad)
xchg
xchg
fnsavew
in
pushf
mov
dec
lods
push
xor
sub
ds
mov
aas
fst
inc
das
jae
fcomp
hlt
push
mov
mov
or
ret
push
mov
test
enter
dec
pop
mov
xchg
add
cmps
sbb
push
xor
popa
ss
arpl
call
dec
out
mov
call
xchg
xor
inc
std
add
lds
dec
out
(bad)
jae
inc
xchg
sub
push
and
fldenv
das
push
(bad)
adc
pop
mov
sub
dec
sub
and
add
stos
pop
ins
(bad)
ins
xor
adc
in
adc
pop
shl
std
or
int
leave
test
popf
ins
stc
mov
jbe
popf
sub
inc
dec
or
(bad)
cmp
add
add
jl
jmp
sub
imul
dec
cmps
sbb
jo
in
(bad)
lea
ds
mov
xchg
jmp
aas
xchg
adc
inc
add
popf
stc
mov
mov
add
mov
int
pop
pop
inc
mov
mov
mov
cmp
cmp
cmps
sbb
mov
mov
(bad)
es
inc
es
lds
dec
push
cmp
cmps
sbb
jbe
imul
cld
adc
pop
inc
jge
or
pop
mov
loop
out
sub
xchg
leave
dec
leave
inc
in
jl
rcl
div
inc
out
lea
and
cmp
push
std
jmp
mov
(bad)
(bad)
jmp
ret
sbb
cmp
out
imul
std
mov
lods
dec
inc
dec
mov
js
ins
cmp
xor
sub
inc
pop
push
enter
push
es
push
mov
adc
popf
cmp
xacquire
cmp
int
clc
xlat
cmp
es
test
xor
dec
jge
sbb
aad
rol
ret
cdq
jge
pusha
inc
cmp
xchg
lods
and
imul
pop
repz
(bad)
jge
or
inc
jns
jne
clc
aad
arpl
test
popf
xor
push
mov
push
mov
cmp
cmps
xchg
mov
mov
leave
mov
lea
(bad)
cs
pop
movs
pop
idiv
mov
shr
xor
dec
lods
push
xlat
es
lock
dec
jge
mov
sub
inc
in
aaa
jbe
mov
mov
lods
lea
pop
cmc
cmp
xchg
sub
call
mov
adc
jge
imul
(bad)
(bad)
dec
xor
sub
xchg
xchg
or
mov
xor
push
xchg
retf
sub
fwait
jge
imul
pop
repz
xchg
mov
in
push
xor
cdq
inc
cmp
bound
fwait
lods
inc
addr16
out
push
ins
jecxz
mov
and
mov
adc
dec
mov
sahf
loopne
inc
pop
mov
shr
dec
or
rol
sti
push
cdq
push
stos
adc
mov
(bad)
leave
mov
imul
pop
repz
(bad)
jge
repnz
call
inc
adc
leave
lods
popf
sti
mov
jge
shl
sub
pop
popf
(bad)
jmp
call
push
es
mov
pusha
mov
pop
bnd
xchg
rol
jns
and
jb
mov
into
push
leave
jne
or
xchg
push
mov
fst
cld
mov
leave
popa
das
mov
out
ret
mov
cmp
or
test
add
bound
(bad)
cwde
or
xlat
lods
xchg
repnz
sbb
jmp
adc
xchg
std
mov
movs
mov
and
pop
mov
and
jmp
je
dec
das
xchg
test
out
leave
lods
popf
icebp
mov
mov
xchg
mov
sbb
inc
data16
aad
arpl
push
es
cwde
jne
ret
sbb
and
or
pusha
sbb
int
cdq
fucomp
mov
js
jmp
ret
mov
and
pop
(bad)
xchg
jns
mov
jmp
push
adc
mov
mov
mov
lds
movs
push
test
movs
push
inc
push
movs
push
test
mov
rcr
mov
jnp
pusha
fist
inc
cmp
mov
imul
push
lds
movs
push
test
loopne
mov
ror
loopne
lock
or
mov
push
add
push
test
movs
push
inc
leave
push
xor
sub
sbb
xchg
mov
push
sti
lods
pop
(bad)
ins
adc
push
cmp
dec
inc
sub
xor
fwait
int3
aad
mov
push
test
je
dec
ret
add
or
loopne
scas
add
push
movs
cdq
push
stos
add
std
push
jb
mov
pop
stc
cwde
pop
movs
sbb
movs
cmp
dec
sub
jecxz
xor
int3
xlat
ins
mov
push
test
adc
movs
sbb
(bad)
xchg
test
mov
jmp
test
lea
bound
push
dec
sbb
test
xchg
ret
inc
and
pusha
mov
bound
mov
ins
sub
out
mov
jnp
mov
add
std
adc
es
xor
push
cwde
jne
ret
(bad)
dec
xor
xlat
sbb
(bad)
scas
test
enter
retf
or
push
inc
shl
addr16
push
cmp
jns
ret
and
xor
push
(bad)
stc
or
imul
jge
sbb
loop
sub
jmp
test
add
mov
and
imul
inc
gs
retf
sub
inc
data16
scas
adc
add
ftst
mov
inc
pop
add
push
dec
xor
dec
mov
out
push
outs
mov
mov
mov
test
push
ficom
test
pop
dec
inc
sub
xor
scas
and
and
mov
and
js
xchg
lahf
out
add
or
fst
in
mov
push
mov
mov
std
stos
in
dec
cmp
jbe
jns
xor
push
(bad)
add
stos
and
sbb
shr
es
mov
imul
test
lea
popf
lods
pop
inc
mov
loopne
cmp
sub
data16
add
std
adc
lods
push
(bad)
ins
mov
inc
sub
div
sub
and
test
iret
adc
ins
dec
jle
push
cmp
mov
mov
mov
push
jo
int
and
push
xor
pop
and
add
repz
jp
xor
mov
mov
bound
call
leave
cmp
push
jmp
and
dec
jge
sub
nop
xchg
imul
mov
inc
add
push
jge
xor
lea
(bad)
mov
pop
inc
sbb
push
adc
ds
fld
popf
lods
and
jge
ret
(bad)
cmps
cmp
cmp
push
fnsave
scas
clc
adc
fdiv
push
and
imul
(bad)
adc
repnz
imul
inc
cdq
fucomp
mov
jb
es
xor
push
cwde
mov
out
(bad)
mov
and
or
push
xor
shl
xor
leave
lods
popf
xor
lea
fwait
loopne
jl
repnz
(bad)
jmp
test
pushf
fst
pop
push
out
inc
ror
ins
(bad)
push
lods
dec
mov
xchg
sbb
mov
push
push
mov
fld
jge
clc
jb
push
rol
movs
jecxz
push
xor
addr16
int3
test
push
call
shl
ror
sbb
addr16
int3
test
pushf
fst
pop
push
xchg
inc
ror
imul
push
cmp
cmps
sbb
fs
int3
sahf
enter
jae
mov
imul
pop
adc
dec
mov
imul
adc
daa
jb
mov
and
inc
jnp
sbb
les
sbb
cmc
int
cdq
fucomi
mov
mov
push
mov
shr
sub
pop
repnz
xchg
cmps
and
inc
or
popf
lods
pusha
idiv
dec
jge
loop
loope
cmps
xchg
cmp
and
imul
pop
div
into
mov
imul
xor
bound
inc
sub
pop
xchg
pop
mov
xchg
(bad)
mov
and
loop
int3
std
jns
mov
cdq
or
ss
bound
push
adc
stc
jnp
adc
(bad)
xchg
rol
ret
ja
push
pusha
inc
mov
push
sub
lods
fisttp
lock
xchg
inc
sbb
cli
fdiv
lods
(bad)
lock
movs
xor
mov
pop
sbb
or
test
es
mov
sar
mov
lock
sbb
jns
cmp
cdq
test
leave
(bad)
or
jecxz
mov
loop
xchg
in
retf
dec
sub
retf
jo
leave
fnstenv
add
repz
mov
mov
pop
xchg
(bad)
out
adc
adc
jmp
push
adc
and
dec
sub
cmp
clc
test
lea
xchg
es
jl
dec
stos
mov
cmps
repnz
int
sub
inc
cwd
inc
cmp
stos
popf
push
inc
and
jnp
mov
xor
or
or
jbe
pushw
mov
ret
push
and
or
lods
out
aas
loopne
leave
inc
sub
xchg
imul
adc
fidiv
push
push
out
ss
fstp
stc
adc
push
repnz
icebp
mov
jl
cmc
test
dec
imul
mov
lods
xchg
repnz
push
sbb
outs
jae
retf
std
jb
idiv
or
cmp
frstor
mov
out
adc
mov
push
pop
or
aas
loopne
pop
xchg
bnd
cs
inc
mov
sub
push
inc
clc
xor
or
mov
retf
movs
imul
inc
cdq
fst
mov
fwait
lods
inc
addr16
xor
inc
dec
cmp
jmp
fbld
sub
xchg
add
jb
rcr
or
(bad)
pause
dec
jge
repnz
pop
in
retf
jne
clc
adc
sub
jmp
loope
fstp
sub
nop
xchg
imul
std
leave
fs
push
sbb
imul
cmp
cmp
loop
in
ret
cdq
aad
adc
sbb
push
pop
and
jnp
out
xor
cmps
sbb
jbe
data16
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
loop
mov
out
sbb
movs
mov
fs
sbb
push
and
mov
fmul
xor
clc
xchg
dec
pop
add
into
test
bnd
call
sbb
out
xchg
in
xor
mov
mov
std
push
retf
jl
push
xchg
xor
cmp
cdq
das
stos
push
stc
xor
js
and
push
or
test
bound
mov
mov
cdq
lea
lods
push
mov
mov
(bad)
jge
or
add
jecxz
pop
jno
inc
std
leave
(bad)
fnstcw
mov
push
xchg
jge
or
xchg
jle
jbe
dec
icebp
data16
mov
inc
stc
mov
xor
imul
(bad)
xor
push
mov
pop
aaa
and
test
inc
dec
mov
out
fisub
push
sub
pop
std
cmp
push
xor
mov
in
imul
push
jg
sbb
movs
inc
das
cmp
data16
inc
std
cdq
ret
pop
rol
test
test
mov
sub
data16
adc
push
mov
(bad)
jne
int
or
sbb
jbe
(bad)
fst
inc
add
push
lods
out
es
out
(bad)
movs
(bad)
jge
or
xchg
cmps
in
inc
add
inc
es
fisubr
out
(bad)
ins
fidivr
or
xchg
push
adc
leave
lea
popf
push
dec
out
(bad)
ins
(bad)
jl
or
xchg
jbe
cdq
(bad)
in
inc
pop
ss
pushf
jmp
mov
cmp
or
xchg
int
fst
inc
add
push
lods
out
xchg
dec
out
(bad)
ins
(bad)
push
mov
cmps
sbb
sub
data16
inc
std
ss
ds
xlat
ins
(bad)
jge
add
mov
imul
test
mov
lahf
push
lods
push
movs
xlat
dec
out
(bad)
push
xchg
or
mov
iret
dec
test
mov
out
(bad)
and
jge
or
adc
(bad)
jb
fcom
inc
adc
mov
outs
int
jmp
mov
(bad)
fs
pop
mov
data16
cmps
adc
mov
cmp
inc
out
xchg
and
in
mov
outs
enter
repnz
aad
popf
push
lods
push
test
jge
or
push
cmp
xchg
inc
pop
in
inc
std
fidivr
xchg
push
mov
cmp
xchg
add
call
std
add
push
fstp
ins
dec
jmp
xchg
xchg
inc
(bad)
mov
in
inc
or
test
mov
into
dec
out
(bad)
and
jge
or
push
mov
push
lds
mov
shr
push
aad
test
hlt
dec
out
sub
jge
or
xchg
push
in
sbb
push
xchg
and
es
push
mov
jge
or
cmp
mov
dec
jmp
inc
in
push
lds
lea
xchg
sub
outs
fst
inc
hlt
and
xchg
test
jge
stos
adc
pop
sti
fbld
jle
push
enter
xor
mov
add
bound
xchg
sub
data16
pushf
cmp
sbb
(bad)
jge
test
cmp
xchg
push
in
xchg
in
lea
jne
push
add
outs
jmp
arpl
int
fucom
push
loope
aaa
(bad)
out
adc
push
mov
(bad)
ins
sub
xchg
and
fist
pop
fsubp
and
push
mov
xlat
pop
cmp
dec
push
int
push
push
out
inc
cmp
pop
lods
push
mov
ins
outs
les
mov
xchg
mov
inc
std
neg
or
(bad)
ins
leave
pop
mov
fnstcw
jbe
outs
int3
dec
into
inc
cld
ss
pushf
push
lods
push
in
dec
out
mov
lea
test
out
sub
std
lea
jecxz
clc
mov
(bad)
ins
xor
push
test
lock
inc
inc
in
dec
mov
in
dec
ror
push
dec
in
dec
retf
dec
test
inc
lock
jb
data16
jo
push
xor
retf
dec
out
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
ss
daa
popf
push
lods
jle
test
xlat
ins
(bad)
jge
or
sbb
jbe
mov
push
in
inc
adc
push
lods
push
popf
cmc
dec
out
loop
(bad)
jle
or
cmp
inc
inc
std
ss
loop
push
lods
push
gs
out
cmp
cmps
sbb
jbe
daa
nop
push
in
inc
std
push
mov
popf
push
aad
xor
dec
out
jb
(bad)
jge
mov
sbb
jbe
cmp
inc
std
ret
popf
push
lods
push
movs
hlt
dec
out
cli
pop
ret
or
test
pop
in
inc
std
mov
adc
mov
nop
sar
add
std
pop
popf
push
mov
pop
sbb
pop
cld
pop
lahf
sbb
sbb
sbb
cli
and
jbe
lea
popf
loop
scas
or
push
lea
sbb
dec
mov
mov
mov
mov
stos
or
pop
test
test
test
sub
sub
lea
add
xor
xor
or
mov
popf
sbb
clc
pop
sbb
cmc
es
pop
mov
xchg
inc
mul
adc
and
inc
or
mov
cmp
je
adc
cmp
push
in
inc
std
mov
mov
mov
mov
xor
sbb
iret
imul
shl
cmp
push
into
dec
jmp
jp
push
(bad)
rcr
fidivr
adc
lahf
xor
xor
(bad)
sub
in
out
or
dec
cmp
cmp
inc
lock
test
popf
push
lods
cmp
(bad)
mov
ficomp
(bad)
je
aam
in
inc
sub
push
gs
movs
pop
movs
cli
dec
out
cli
pop
stc
xor
out
add
jo
data16
inc
hlt
inc
repnz
xor
add
in
dec
leave
inc
out
bound
imul
cmp
inc
test
sbb
jno
lods
pop
test
lods
jb
sub
jo
(bad)
in
fst
jnp
xor
lds
test
shr
jge
mov
xchg
push
in
scas
or
je
lahf
push
lods
push
popf
fimul
pop
(bad)
push
xor
push
rcr
sub
icebp
fist
inc
push
or
addr16
dec
out
das
popf
les
or
xchg
push
in
adc
lea
push
jle
jnp
jns
inc
in
push
cmp
and
xchg
push
in
inc
cld
lea
test
lods
push
mov
(bad)
sub
cmps
jge
sub
shl
dec
out
xor
pushf
cmp
test
(bad)
vmptrst
or
xchg
push
in
inc
std
test
test
cs
into
jl
or
xchg
push
in
inc
cdq
aaa
lea
popf
outs
lods
push
mov
(bad)
ins
(bad)
iret
mov
cmps
sbb
or
pop
cli
lea
mov
xchg
inc
in
scas
sub
pop
(bad)
ins
mov
xchg
xchg
sub
xlat
pusha
push
in
inc
std
loop
into
ins
jmp
xchg
pop
xlat
ins
(bad)
jge
pop
cmps
sbb
mov
data16
inc
std
lea
pushf
push
lods
push
in
repz
out
mov
mov
sbb
fmul
data16
call
mov
mov
xor
mov
call
mov
add
or
or
test
pop
(bad)
ins
std
pop
lahf
aas
mov
pop
jbe
data16
mov
cmp
fwait
sbb
cmp
inc
or
xchg
ja
data16
out
std
and
js
xchg
(bad)
inc
pop
(bad)
ins
(bad)
movs
pushw
cmps
sbb
jne
data16
pop
cld
lea
stc
pop
lods
push
mov
(bad)
xlat
dec
jmp
xchg
push
in
inc
lock
xchg
popf
push
aad
xchg
add
mov
cmps
sbb
scas
enter
sbb
daa
popf
push
lods
xor
ins
(bad)
jge
or
sbb
jbe
neg
push
in
inc
pop
aaa
lea
popf
scas
lods
push
mov
(bad)
ins
es
inc
int
add
frstor
push
jae
call
sub
cmp
aam
ins
(bad)
jge
int
sbb
ja
frstorw
and
push
mov
int3
dec
in
clc
pop
lds
push
add
cdq
mov
popf
sbb
into
imul
sub
data16
mov
call
mov
(bad)
iret
shrd
mov
mov
push
xchg
sub
jle
push
in
outs
or
add
xchg
and
pop
(bad)
add
imul
jbe
lds
inc
mov
nop
add
(bad)
retf
jle
jnp
arpl
dec
in
cmp
cmp
int
cmc
inc
in
inc
std
pop
mov
rol
data16
jge
inc
hlt
fs
add
cdq
test
pop
in
inc
std
mov
jnp
jns
push
mov
xchg
jge
mov
dec
jmp
and
addr16
aaa
(bad)
(bad)
or
lods
push
mov
(bad)
and
jge
or
xchg
pop
clc
jno
and
es
jmp
add
or
xchg
push
in
inc
add
push
mov
mov
sahf
cmp
cmps
sbb
jbe
(bad)
fcom
inc
adc
pop
clc
jp
lods
push
mov
(bad)
ins
idiv
cmps
push
xchg
sub
push
fcom
inc
jne
pop
mov
mov
(bad)
ins
sbb
cmps
in
xchg
sub
fst
jg
xor
imul
(bad)
jno
(bad)
ins
(bad)
rol
mov
sbb
stos
into
data16
dec
in
xor
inc
icebp
mov
ins
push
icebp
mov
cmps
sbb
jbe
mov
push
in
inc
std
das
popf
daa
popf
push
lods
cmp
ins
(bad)
jge
pusha
movs
sbb
je
data16
dec
inc
std
lea
jno
dec
out
(bad)
test
jg
or
xchg
push
in
inc
shl
es
inc
mov
xor
clc
pop
xlat
add
into
cmp
(bad)
pop
push
lea
movs
es
push
mov
(bad)
ins
(bad)
cmc
push
pop
cmps
sbb
mov
test
mov
mov
lea
mov
test
xchg
and
xchg
sub
mov
jnp
test
test
xor
pop
(bad)
ins
xchg
je
or
cld
mov
push
in
inc
std
out
ins
retf
mov
mov
push
sub
xchg
mov
fistp
popf
cmp
ins
adc
push
mov
(bad)
ins
out
test
popf
das
shl
imul
adc
push
in
inc
jno
lea
popf
mov
push
mov
(bad)
ins
push
movs
mov
cmps
sbb
jbe
data16
inc
shl
lea
popf
into
in
mov
xor
or
mov
mov
data16
pop
fcomp
sbb
in
test
jge
jno
mov
(bad)
fst
mov
jmp
lods
adc
lahf
aas
popf
sbb
jnp
sbb
jbe
data16
in
inc
std
xor
push
into
lods
push
mov
(bad)
ins
into
jge
or
mov
fnsave
mov
std
lea
mov
(bad)
ins
add
cmps
lds
iret
data16
inc
sti
lea
mov
in
dec
out
lods
dec
out
(bad)
sbb
and
sub
shr
sub
es
ret
dec
or
dec
cmc
dec
sar
or
aad
jbe
data16
in
inc
std
dec
mov
popf
push
cmp
inc
pop
(bad)
ins
(bad)
mov
xchg
leave
imul
data16
inc
std
and
pop
mov
(bad)
ins
(bad)
adc
cmps
adc
ret
std
ss
dec
int
jmp
hlt
inc
icebp
jge
pop
sti
xor
or
inc
cmc
int3
data16
dec
std
lea
outs
and
out
(bad)
ins
cs
or
xchg
push
leave
imul
lds
popf
push
lods
pop
fcomp
ins
(bad)
jmp
test
push
in
inc
std
ss
es
push
aaa
adc
stc
dec
fstp
stc
inc
(bad)
jns
push
add
out
pop
inc
std
ss
cli
pushf
push
lods
push
dec
hlt
dec
out
shl
jge
or
xchg
cmp
pop
and
sbb
dec
out
mov
jge
jne
in
xchg
cmc
xchg
pop
fstp
ss
xchg
inc
in
mov
aad
(bad)
xchg
pop
lock
push
mov
xchg
jb
je
in
jecxz
or
cmp
cmc
bound
mov
sub
push
adc
loopne
in
and
add
add
outs
sahf
or
jb
mov
mov
inc
test
cld
imul
push
mov
pop
adc
ror
xchg
mov
xor
addr16
arpl
call
cmp
pop
shr
add
adc
xor
inc
(bad)
jne
jae
or
(bad)
sbb
fs
dec
in
add
sub
fcmovu
jb
mov
xchg
xor
push
mov
les
jecxz
sbb
and
jns
inc
fdiv
push
les
dec
out
adc
adc
sahf
inc
std
pusha
jmp
cmps
aas
(bad)
fimul
repnz
and
mov
push
cld
inc
shl
and
sbb
pop
(bad)
jns
dec
ret
test
adc
inc
lods
sub
pushf
or
xor
in
outs
sbb
scas
pop
jmp
arpl
mov
cmp
jecxz
repz
xcrypt-cfb
cmps
fs
mov
cld
(bad)
or
scas
sbb
dec
out
ficom
out
pop
pop
mov
inc
xchg
inc
jecxz
jmp
les
xor
or
cmp
mov
mov
test
push
in
push
fnsave
aaa
mov
movs
or
or
jle
outs
mov
repnz
ss
xor
repnz
and
leave
aas
xchg
cmp
sbb
je
inc
loop
xor
xor
inc
inc
push
vpmadcswd
or
jge
jae
pop
(bad)
push
lea
aaa
test
fist
xchg
push
lahf
cs
cmp
outs
aam
neg
jge
(bad)
das
mov
pop
leave
retfw
ja
ds
and
xor
add
dec
loop
mov
frstor
lods
das
call
arpl
cwde
and
xchg
xor
jp
pop
(bad)
pop
inc
pushf
push
loop
mov
mov
adc
push
into
aaa
adc
fldcw
movs
or
or
or
out
pop
sbb
push
std
pop
out
popfw
inc
leave
pop
jmp
cdq
cmp
ins
mov
mov
or
inc
cld
gs
gs
dec
mov
push
scas
sbb
dec
out
fild
push
mov
cmpps
jae
push
mov
mov
fldenv
cmp
pop
rcl
mov
stc
cmp
dec
(bad)
jg
push
mov
fldenv
cmp
inc
test
cld
cmp
ja
inc
cld
gs
pop
sbb
aad
cmps
and
pop
mov
test
jbe
retfw
ja
inc
fcomp
sub
loop
xchg
mov
xor
push
stc
frstor
call
movs
sub
rcr
inc
cmc
add
mov
and
push
repnz
loop
jb
sbb
fsub
pop
stc
ins
(bad)
pcmpeqd
push
xchg
jbe
adc
ja
gs
and
adc
jg
jl
inc
(bad)
pop
and
dec
popf
or
data16
and
leave
aas
xchg
cmp
sbb
and
add
das
call
inc
faddp
jb
jns
push
mov
xlat
jg
push
repnz
fst
movs
or
imul
jmp
test
fldcw
xchg
push
mov
lds
bnd
mov
sub
pop
push
rol
xor
je
dec
cmc
pop
jmp
or
cmp
push
iret
inc
ret
pop
mov
sbb
xor
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
hlt
xchg
pop
jle
mov
lds
ficom
in
or
mov
cli
mov
int
test
jge
adc
repnz
cmp
or
aad
ins
mov
fnstsw
ret
add
loop
mov
adc
loopne
mov
inc
shr
xchg
inc
push
cdq
xor
mul
stc
push
xchg
scas
dec
(bad)
sbb
mov
jle
(bad)
push
out
mov
rcr
jbe
ds
adc
leave
push
add
or
stos
sbb
pushf
pop
fdivr
jmp
dec
retf
fstp
jne
ins
sub
loop
mov
adc
push
mov
cli
xchg
mov
pop
call
mov
mov
push
lods
xor
and
loopne
pop
out
dec
enter
js
nop
outs
sub
mov
js
inc
shr
fsub
iret
dec
xlat
sbb
xchg
out
test
and
daa
jo
or
in
in
inc
int
retf
pop
aas
cld
mov
push
loope
or
jno
cmp
adc
push
and
stc
jbe
into
imul
icebp
sahf
mov
inc
xchg
(bad)
sbb
mov
fidivr
add
scas
fldcw
xor
ret
xor
cmc
sub
movs
repnz
mov
popf
pop
xor
mov
jp
mov
fstp
and
loop
or
xchg
sbb
push
xor
adc
adc
(bad)
lds
xlat
inc
fistp
mul
das
dec
xchg
add
fsub
loopne
clc
pop
push
out
or
pop
sbb
jo
call
(bad)
adc
pop
daa
mov
sub
xor
out
push
outs
or
jo
cmp
adc
push
and
clc
ja
iret
push
xchg
pusha
out
mov
lahf
mov
inc
nop
call
xlat
mov
fistp
add
xchg
cmp
clc
cmp
cmp
inc
xchg
(bad)
sbb
mov
fidivr
add
push
push
mov
or
jno
cmp
adc
push
and
stc
jbe
into
imul
mov
inc
xor
mov
dec
jmp
ins
mov
jb
mov
lds
sub
cli
jne
int
add
(bad)
in
or
sbb
stos
inc
adc
call
test
test
jae
retf
adc
fdivr
les
cld
fwait
movs
xor
inc
pushf
sti
add
lods
sub
mov
or
xchg
add
adc
imul
sbb
int3
or
jnp
les
pop
pop
cmp
pusha
(bad)
js
shr
xlat
inc
fistp
addr16
and
mov
pop
sbb
mov
jg
xchg
mov
pop
cwde
out
(bad)
mov
enter
lods
push
and
xor
test
jns
and
push
adc
pop
shr
push
loope
dec
(bad)
push
push
cdq
jbe
out
imul
mov
pop
fnstenv
icebp
jle
(bad)
js
add
xchg
add
retf
push
sbb
movs
repz
mov
cld
mov
adc
pushf
sbb
sub
arpl
test
sub
aam
pop
(bad)
mov
mov
in
or
int3
stos
sub
lock
inc
aaa
les
sbb
inc
sbb
stos
cmc
and
dec
adc
xchg
in
push
loop
call
popf
jp
push
lods
sub
cmp
retf
fnstsw
test
retf
test
mov
sub
in
jl
adc
int3
dec
add
pop
sbb
sub
movs
repz
aam
or
inc
adc
fs
jnp
mov
fcomp
and
mov
xchg
das
mov
xchg
add
dec
call
mov
in
mov
xor
inc
movddup
call
ja
lahf
lds
cmps
sbb
arpl
inc
in
pop
or
popa
(bad)
dec
inc
clc
jns
ins
call
test
shr
push
sub
outs
cmp
mov
shl
enter
xor
daa
mov
in
dec
add
call
inc
mov
pusha
adc
(bad)
sbb
or
out
mov
dec
in
(bad)
jo
jp
cdq
and
or
je
inc
out
dec
cs
xchg
add
mov
push
inc
aad
cmp
push
sub
jae
stc
call
hlt
push
pop
stos
pop
and
add
jp
inc
fiadd
cmp
fsub
push
sub
mov
fcomp
jl
cld
dec
mov
mov
ins
xchg
push
cli
push
adc
xor
xor
xchg
xchg
js
ins
jmp
lock
stc
inc
adc
inc
sbb
push
rol
mov
arpl
dec
clc
push
jbe
or
xchg
inc
std
es
popa
mov
(bad)
aam
iret
outs
xchg
jg
dec
adc
ds
pop
cmc
dec
idiv
imul
aaa
mov
shl
jne
jns
pop
sub
sub
ss
dec
push
js
mul
xchg
aas
test
movs
or
or
jmp
mov
and
out
jo
rcl
call
dec
out
or
and
jbe
push
fistp
ins
mov
js
sub
push
fnstsw
in
cmp
(bad)
jnp
push
ret
test
mov
mov
or
in
pop
and
and
inc
cli
jbe
push
popa
retf
(bad)
and
xor
arpl
jnp
push
(bad)
cmp
cmp
aas
cdq
dec
icebp
es
jg
push
ret
fwait
xor
jns
sbb
adc
mov
sub
pop
les
push
fisub
idiv
fsub
sub
test
in
xor
das
repz
in
xor
pop
lods
push
mov
call
jge
pop
jmp
xchg
imul
std
ins
test
mov
inc
hlt
ss
add
mov
ins
shr
out
add
pop
mov
inc
test
repnz
and
(bad)
sub
pop
nop
sbb
aad
repz
sbb
push
out
enter
fimul
js
inc
rol
ins
(bad)
sbb
push
cmps
inc
xchg
dec
hlt
outs
push
mov
cmp
shl
push
fcom
ins
xchg
sub
(bad)
imul
mov
sub
repz
and
popf
and
push
repz
pop
in
leave
pop
add
jns
arpl
out
nop
or
sbb
pop
mov
mov
mov
push
stc
inc
mov
test
sub
or
ja
(bad)
hlt
sbb
cmp
inc
xchg
pop
jecxz
hlt
fsub
inc
sbb
sbb
jg
jp
dec
cmps
sbb
and
in
clc
jae
popa
fcomp
add
cmp
pop
int
mov
pop
(bad)
es
push
int3
shl
push
movs
or
jns
dec
clc
dec
repnz
push
test
fnsave
and
(bad)
inc
jmp
xchg
cmp
or
arpl
imul
xchg
inc
xlat
jbe
sbb
aad
lods
push
sbb
jle
pop
clc
dec
call
mov
xor
push
enter
sub
pop
sar
sbb
pop
mov
ds
inc
inc
jg
(bad)
xor
jle
dec
stc
dec
hlt
pop
add
or
and
inc
scas
pop
call
les
iret
cmp
jge
sbb
dec
cmp
and
add
jae
(bad)
les
imul
(bad)
dec
xchg
dec
jecxz
adc
pushfw
push
fisttp
jo
fldenv
(bad)
psubusb
aas
xchg
inc
ret
pop
adc
xor
(bad)
arpl
push
xor
out
loop
mov
scas
add
aas
fdiv
push
mov
and
call
fld
pop
repz
lds
daa
xchg
push
in
add
push
clc
dec
repnz
scas
add
pop
in
push
inc
cmps
add
push
mov
xchg
push
lea
jns
jne
sub
sub
js
dec
in
aad
pop
cmps
xor
xor
std
imul
loopne
aad
and
psubusb
sbb
cmp
and
ja
jb
movs
ds
sbb
add
add
in
in
xor
and
dec
(bad)
pop
jmp
mov
push
hlt
jnp
inc
cmc
popa
adc
adc
les
shl
outs
out
jmp
ret
jnp
dec
out
lock
sbb
mov
inc
repnz
ret
mov
dec
xchg
xor
jns
outs
mov
out
adc
adc
and
push
jmp
ret
fwait
sub
or
jns
je
dec
cmps
sbb
jbe
xor
inc
jecxz
mov
(bad)
cmp
jge
inc
mov
dec
repz
or
pop
fiadd
jae
push
rol
push
test
jns
inc
cmc
pop
and
lahf
and
fld
fadd
mov
les
je
dec
les
mov
sub
bound
(bad)
das
mov
jns
jb
dec
jecxz
sbb
add
(bad)
(bad)
arpl
cdq
js
sbb
jns
jo
pop
loop
and
mov
xchg
gs
jne
cwde
ds
jge
dec
test
mov
aad
mov
rcl
call
pop
mov
repz
(bad)
cmp
xor
sub
rcl
mov
sub
js
push
rol
push
stos
sbb
arpl
jb
pop
cmps
push
sbb
sub
ficom
movs
sub
jno
jg
das
clc
pop
rcl
test
pop
cmp
mov
outs
int
or
cmp
stc
inc
jmp
sub
dec
lea
jae
inc
cld
mov
and
pop
lds
bound
xchg
adc
push
cmc
dec
cld
lods
outs
fistp
inc
xchg
lds
mov
jmp
add
push
mov
cwde
jne
jns
(bad)
xchg
dec
xchg
mov
test
fs
jb
dec
pop
mov
sbb
lods
sub
test
pop
(bad)
sub
cmp
repz
loopne
add
adc
xor
dec
loope
lods
dec
rcr
sbb
jb
sub
pop
mov
int
call
jp
cmps
sbb
cmp
jns
ins
cmc
inc
ret
cmp
and
sub
inc
ret
mov
or
sbb
jbe
or
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
pop
mov
(bad)
sbb
out
data16
xor
es
inc
lds
mov
ins
(bad)
mov
or
xchg
cmp
outs
in
inc
mov
lea
push
lds
mov
(bad)
ins
pop
jge
movs
cmps
sbb
jbe
mov
std
into
lea
xchg
push
lods
push
mov
out
inc
(bad)
cmc
mov
cmps
adc
jbe
xchg
push
out
xor
lea
fwait
push
fwait
neg
lods
(bad)
loop
cli
mov
jmp
cmp
inc
sti
push
std
lea
lods
das
cwde
and
int3
dec
repz
mov
xchg
xor
dec
call
jl
sub
inc
mov
or
inc
(bad)
ja
dec
xchg
inc
xchg
push
xchg
sub
pop
(bad)
push
in
or
adc
sbb
adc
fnstcw
jno
aaa
popf
dec
jecxz
xchg
xor
addr16
cld
xor
push
mov
pusha
mov
dec
sar
add
dec
mov
xchg
sub
aad
fld
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
lds
es
push
ds
dec
add
jle
ins
(bad)
push
xor
loop
sbb
adc
data16
leave
mov
add
push
sub
jg
mov
dec
loope
dec
or
jns
mov
in
and
(bad)
jmp
pop
sbb
(bad)
mov
sub
inc
pop
cs
xor
mov
movs
aas
push
clc
xchg
fist
test
dec
div
jb
mov
adc
aam
cmp
stc
icebp
inc
mov
je
sub
or
dec
imul
aad
mov
mov
push
add
pop
or
fdivp
mov
sub
dec
hlt
jnp
arpl
retf
(bad)
les
mov
dec
cwde
lea
mov
push
iret
jbe
data16
pop
fldenv
lods
push
mov
sub
cmps
sbb
jbe
data16
mov
sbb
or
mov
jno
sub
jge
add
daa
fwait
or
push
mov
(bad)
pop
sub
int3
dec
mov
jbe
lahf
xor
jb
popf
push
int3
cld
test
dec
out
sub
push
pop
sbb
jbe
cdq
mov
ss
fist
out
mov
pop
sbb
(bad)
adc
jge
outs
push
or
fwait
and
sub
push
loop
popf
push
fwait
add
xor
dec
cmps
sbb
or
jecxz
jne
cdq
fld
mov
scas
daa
cdq
push
mov
(bad)
cmps
(bad)
jge
sub
loope
push
and
std
adc
(bad)
cmc
repnz
sub
mov
shl
(bad)
dec
loope
sbb
adc
push
loope
popf
push
xor
test
xchg
add
pop
cli
dec
hlt
cmp
and
icebp
push
movs
leave
rcr
ins
or
repz
frstorw
in
adc
nop
pop
lods
push
(bad)
pop
out
xchg
pop
fstp
jae
inc
jmp
in
push
div
(bad)
in
lea
pop
mov
mov
xchg
sbb
or
cmc
cmp
push
fistp
bound
leave
test
mov
dec
fcomp
sub
pop
fst
mov
enter
shl
dec
mov
xor
icebp
cmp
push
in
inc
loope
lea
call
out
xchg
cmps
sbb
jbe
js
push
shl
lea
ret
or
jbe
neg
sbb
neg
test
push
repz
adc
xor
cld
pop
enter
dec
out
mov
or
xchg
xchg
sub
or
js
push
add
and
loop
fld
cmp
and
jnp
fs
out
dec
add
sub
jmp
cdq
and
jbe
arpl
push
jmp
push
mov
cmps
and
pop
loope
aad
les
adc
add
je
addr16
push
jmp
cmps
sub
sub
out
fidivr
mov
cdq
and
lea
popf
jmp
lahf
xor
add
adc
ror
(bad)
jb
(bad)
xor
and
adc
add
jns
(bad)
add
xor
jl
jo
cmp
sub
jnp
push
loop
lock
add
cmp
shl
jo
xor
sub
jnp
inc
out
pop
lock
add
cmp
outs
(bad)
xor
test
jnp
inc
out
pop
lock
add
xor
outs
(bad)
cmp
and
jnp
inc
out
pop
lock
add
xor
outs
fidiv
cmp
mov
sar
out
pop
icebp
dec
add
cmp
ret
outs
fidiv
lea
cdq
and
jp
inc
out
pop
icebp
dec
or
cmp
outs
fidiv
xor
mov
jp
jle
pop
icebp
dec
add
xor
popa
fidiv
cmp
mov
sar
out
push
inc
mov
mov
dec
cmc
pop
(bad)
outs
aad
lds
adc
jle
push
inc
mov
movs
cs
cmp
outs
aad
lds
adc
jle
push
inc
mov
movs
cs
cmp
outs
aam
les
adc
jne
push
inc
sbb
hlt
pop
cmc
outs
aam
les
adc
jne
push
inc
sbb
dec
hlt
pop
cmc
(bad)
aam
les
adc
add
je
jne
push
inc
pop
movs
das
xchg
aas
test
pop
(bad)
jge
jge
lea
popf
lods
push
mov
je
push
clc
inc
or
cmp
imul
mov
fisub
bound
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
data16
lea
sub
fldenv
push
stc
inc
mov
pop
xlat
ins
(bad)
jl
(bad)
and
xor
arpl
lods
js
fdiv
stc
jo
inc
pop
push
clc
in
test
xchg
xchg
pop
jns
imul
mov
out
and
dec
fwait
jle
and
mov
(bad)
jne
pop
out
push
mov
and
push
stc
inc
leave
jb
bound
mov
mov
push
imul
jmp
mov
jge
ins
mov
adc
jecxz
dec
mov
mov
enter
call
xor
add
pop
loop
shl
ret
data16
inc
std
mov
cmps
sbb
test
aaa
mov
pushf
pop
lods
add
je
fist
push
test
hlt
dec
in
xlat
ins
(bad)
jl
(bad)
and
adc
add
je
fadd
jb
pop
xchg
das
test
cmc
dec
in
inc
call
push
and
adc
lds
into
jp
gs
stos
adc
inc
dec
repnz
pop
movs
lfs
outs
(bad)
dec
inc
sti
cmp
(bad)
xor
inc
out
pop
jae
shl
xchg
pop
movs
movzx
(bad)
inc
inc
cmc
mov
mov
stc
inc
jmp
inc
cwde
cmp
or
jecxz
icebp
dec
add
mov
stc
inc
jmp
les
mov
imul
or
test
sub
pop
repnz
imul
xor
test
jmp
mov
or
pop
repnz
imul
aaa
mov
mov
jae
jmp
mov
or
pop
icebp
dec
imul
xor
ins
(bad)
jge
jmp
ds
es
push
std
inc
in
hlt
dec
and
sbb
(bad)
dec
neg
lods
push
mov
and
push
cli
inc
retf
popa
sub
sbb
dec
lock
loopne
adc
and
push
stc
inc
leave
jb
bound
xchg
cmp
imul
pop
loop
adc
shr
(bad)
jge
dec
out
push
lods
push
mov
lods
in
inc
cld
ja
fcom
cmp
mov
cmps
sbb
jbe
data16
inc
std
push
lea
popf
jmp
jae
pusha
call
xor
add
call
mov
mov
enter
jmp
sti
inc
mov
or
inc
adc
jecxz
sar
or
cmp
movs
push
stc
inc
mov
cdq
and
repnz
loop
sar
or
inc
std
mov
cmps
sbb
test
(bad)
ins
(bad)
jge
lea
push
push
int
fst
inc
std
mov
cmps
sbb
test
(bad)
ins
(bad)
jl
mov
popf
pop
lods
pop
mov
push
in
inc
cld
mov
cmps
push
xchg
das
test
hlt
dec
in
aam
les
(bad)
and
adc
add
je
fcom
push
test
hlt
dec
in
aam
les
(bad)
and
adc
add
je
fist
push
test
hlt
dec
in
aam
les
(bad)
and
adc
iret
data16
push
test
cmc
dec
in
sub
repz
scas
add
fist
(bad)
mov
movs
fiadd
adc
fbstp
outs
lds
mov
mov
ret
imul
sub
pop
fisub
jne
test
push
(bad)
xor
daa
in
push
inc
dec
cmc
mov
and
out
xchg
dec
int
stc
mov
xchg
jg
outs
aam
in
cmc
mov
mov
cld
je
iret
je
test
xchg
push
movs
lgs
outs
adc
dec
retf
cmc
mov
ret
inc
fbld
aas
test
push
mov
xchg
mov
(bad)
repnz
dec
hlt
mov
and
xor
inc
out
nop
jle
push
je
test
mov
les
pop
out
idiv
adc
js
int3
ja
xchg
sbb
push
in
cmps
xor
lods
cmp
mov
stc
inc
jmp
jae
sub
cmps
sbb
(bad)
ins
in
dec
repnz
and
lea
jo
cmp
sub
ret
pop
loop
repnz
fwait
xor
shl
jae
sub
sbb
imul
cwde
and
push
(bad)
jge
ins
es
ss
test
stos
arpl
std
push
in
cmps
sbb
xchg
cs
repnz
pop
ins
sbb
test
inc
stc
push
jmp
sub
pop
jecxz
jns
imul
mov
jb
call
aam
mov
loop
repnz
ret
imul
adc
(bad)
cld
stc
push
jmp
cmp
sub
pop
repnz
mov
xor
adc
inc
clc
push
call
sub
pop
loop
js
push
add
jo
jmp
mov
mov
loopne
lock
int
frstor
xchg
cmp
add
jb
ins
dec
neg
lods
push
mov
es
push
cld
mov
jns
mov
sahf
stos
or
sbb
(bad)
dec
neg
lods
push
mov
add
jle
inc
int
frstor
xchg
cmp
or
sbb
(bad)
dec
hlt
pop
in
adc
push
mov
popf
es
push
std
inc
int
frstor
xchg
cmp
cmps
ins
(bad)
jge
dec
neg
lods
push
mov
and
push
cli
inc
retf
popa
sub
sbb
dec
lock
loopne
adc
and
push
sti
inc
retf
jo
pusha
sub
sbb
dec
repz
loopne
adc
and
push
clc
inc
retf
jae
arpl
xchg
cmp
push
repz
jecxz
adc
and
push
stc
inc
leave
jb
bound
xchg
cmp
imul
pop
loop
adc
and
push
stc
inc
leave
jb
bound
xchg
cmp
mov
in
jns
jbe
pop
fst
or
shl
push
lods
push
mov
push
in
inc
std
jbe
data16
xchg
ins
sbb
ins
(bad)
jge
dec
out
push
lods
pop
mov
inc
inc
fldenv
push
stc
inc
or
cmp
imul
cdq
and
jb
(bad)
jmp
mov
mov
dec
repnz
loop
or
cwde
push
xor
sbb
enter
call
xor
ret
mov
or
cmp
call
xor
ror
js
or
cmp
call
xor
out
mov
pop
loop
sar
or
cmp
jmp
xor
pop
mov
loop
sar
or
cmp
jmp
xor
jl
mov
jns
or
cmp
jmp
xor
add
lods
push
mov
push
in
inc
std
mov
cmps
sbb
test
(bad)
ins
(bad)
jge
sti
es
push
lods
push
mov
push
in
inc
std
mov
cmps
sbb
test
(bad)
ins
(bad)
jge
icebp
daa
pushf
pop
lods
pop
mov
push
in
inc
cld
mov
cmps
sbb
sub
cmp
dec
out
xlat
ins
(bad)
jl
mov
pushf
pop
lods
pop
mov
push
in
inc
cld
mov
cmps
sbb
sub
cmp
dec
out
xlat
ins
(bad)
jl
(bad)
and
adc
add
je
fist
push
test
hlt
dec
in
aam
les
(bad)
and
adc
add
je
fist
push
test
hlt
dec
in
aam
les
(bad)
and
adc
add
je
fist
push
test
hlt
dec
in
aam
les
mov
adc
add
je
mov
leave
or
test
hlt
dec
in
aam
les
(bad)
and
adc
add
je
addr16
jo
pusha
fist
sub
aas
hlt
dec
in
aam
les
(bad)
and
mov
fbld
aas
test
xchg
js
test
cmc
dec
in
aad
lds
(bad)
and
mov
les
outs
and
xor
add
xchg
aas
cmc
dec
in
aad
lds
(bad)
and
mov
les
outs
and
xor
add
jbe
cmc
dec
in
aad
lds
mov
call
dec
sar
and
sbb
icebp
dec
loope
shr
jp
test
xchg
pop
movs
lfs
sbb
je
sub
xchg
mov
mov
inc
out
push
fbld
aas
test
xchg
pop
movs
lfs
addr16
retf
dec
fsub
xchg
add
inc
out
push
fbld
aas
test
xchg
pop
movs
lfs
fs
test
test
(bad)
and
(bad)
inc
out
push
fbld
aas
test
xchg
pop
movs
lfs
arpl
dec
in
mov
mov
lahf
aaa
inc
out
push
fbld
aas
test
xchg
pop
movs
lfs
arpl
dec
loop
mov
(bad)
and
sub
fbld
aas
test
xchg
pop
movs
lfs
arpl
dec
loopne
mov
mov
push
fbld
aas
test
xchg
pop
movs
lfs
arpl
in
int3
mov
test
xchg
pop
inc
out
push
fbld
aas
test
xchg
pop
movs
lfs
arpl
inc
in
int3
mov
test
xchg
adc
fbld
aas
xchg
mov
(bad)
arpl
pop
jmp
push
cmp
in
push
frstor
jbe
sub
sbb
outs
jp
pop
not
retf
cld
es
ss
fild
push
fldenv
jb
sub
sbb
outs
je
pop
idiv
clc
and
out
jmp
jb
sub
sbb
ins
je
pop
cmc
dec
add
xor
fldenv
jb
sub
sbb
ins
ja
pop
icebp
dec
add
cmp
clc
inc
jmp
jb
sub
sbb
ins
ja
pop
icebp
dec
add
mov
push
fldenv
jb
sub
sbb
ins
jbe
push
std
dec
add
xor
inc
jmp
jb
sub
sbb
ins
jno
push
stc
dec
push
mov
xchg
xor
inc
jmp
jb
xor
push
mov
ins
jno
push
stc
sbb
cmp
out
test
(bad)
ins
es
xor
(bad)
fldcw
jmp
add
sub
repnz
ret
imul
mov
push
(bad)
mov
xchg
cmp
loop
repnz
ret
imul
mov
jbe
jmp
sbb
push
loop
repnz
ret
imul
mov
jbe
jmp
sbb
stc
loop
repnz
ret
imul
mov
jbe
jmp
sbb
lock
repnz
ret
imul
mov
jbe
jmp
adc
sub
repz
ret
js
push
add
jbe
jmp
(bad)
adc
jecxz
repz
ret
js
push
add
jbe
jmp
mov
mov
jecxz
repz
ret
js
push
add
jbe
jmp
mov
mov
jecxz
repz
ret
js
push
or
sbb
ins
xlat
ja
jmp
mov
mov
in
push
cld
inc
int3
ja
addr16
cmp
cmps
ins
(bad)
jo
jmp
mov
mov
in
push
std
inc
int
frstor
xchg
cmp
cmps
ins
(bad)
jo
jmp
mov
mov
in
push
std
inc
int
frstor
xchg
cmp
cmps
ins
(bad)
jg
xchg
sub
fsubr
xchg
xor
es
push
std
inc
int
frstor
xchg
cmp
cmps
ins
(bad)
jge
inc
(bad)
push
out
movs
push
mov
mov
popf
es
push
std
inc
int
frstor
xchg
cmp
cmps
ins
(bad)
jge
dec
neg
lods
push
mov
es
push
std
inc
int
frstor
xchg
cmp
push
jp
dec
icebp
pop
loope
adc
and
push
cli
inc
retf
popa
sub
sbb
dec
icebp
pop
loope
adc
and
push
cli
inc
retf
popa
sub
sbb
dec
lock
loopne
adc
and
push
sti
inc
retf
jo
pusha
sub
sbb
dec
lock
loopne
adc
and
push
sti
inc
retf
jo
pusha
sub
sbb
dec
repz
jecxz
adc
and
push
clc
inc
enter
sub
sbb
dec
repz
jecxz
adc
and
push
clc
inc
enter
lock
sbb
dec
repnz
loop
adc
and
push
stc
inc
leave
jb
(bad)
(bad)
push
cmp
imul
pop
loop
adc
and
push
stc
inc
leave
jb
arpl
mov
mov
dec
repnz
loop
adc
and
push
stc
inc
leave
jb
push
(bad)
aaa
or
lea
popf
push
in
inc
std
jbe
data16
or
(bad)
jge
dec
fcomp
or
inc
std
jbe
data16
or
(bad)
jge
jb
ror
lea
pushf
push
in
inc
cld
ja
fcom
cmp
or
sbb
ins
(bad)
jl
inc
dec
ret
mov
cdq
sub
in
inc
cld
ja
fcom
cmp
or
sbb
ins
(bad)
jge
loop
ret
data16
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
push
in
inc
std
lea
popf
push
lods
push
mov
(bad)
ins
(bad)
jge
or
xchg
das
iret
and
sub
jbe
retf
sub
jnp
aas
in
movs
push
adc
sub
jns
arpl
cdq
jle
sub
push
mov
shl
int
neg
push
dec
mov
sub
fldenv
xchg
push
stc
(bad)
out
cs
adc
adc
fs
leave
dec
std
sbb
sub
sub
shr
mov
test
pop
jmp
jmp
pop
xchg
fistp
push
dec
(bad)
push
xlat
ins
jb
fmul
fcom
push
dec
push
mov
mov
dec
mov
(bad)
outs
push
fild
dec
mov
test
(bad)
cmps
mov
or
adc
pop
(bad)
hlt
push
pop
lods
aaa
adc
in
cmps
out
or
out
push
dec
(bad)
jl
aam
aas
xor
inc
jbe
sub
imul
std
dec
cld
ss
pop
daa
popf
les
dec
push
ret
or
pushf
jb
popf
xor
adc
mov
jbe
fs
jmp
mov
es
lea
dec
jbe
fnsavew
test
out
pop
fiadd
mov
arpl
aam
fs
imul
lods
addr16
movs
pushf
inc
cmps
in
cmps
rol
iret
std
cwde
inc
pop
push
dec
(bad)
fild
dec
pushf
ss
or
jecxz
fnsave
inc
cld
mov
xchg
pxor
outs
fcomp
dec
jle
xchg
fdiv
out
std
push
dec
push
sbb
xor
jne
mov
rol
ror
pop
fnsave
sbb
imul
cmp
sbb
cdq
popf
ss
dec
mov
outs
jmp
xor
mov
sub
cmp
sbb
xor
arpl
sahf
outs
cmp
mov
shr
push
push
out
adc
stc
add
xor
jb
xchg
add
adc
jg
pop
loop
jecxz
push
lods
or
push
lods
sub
test
cmp
cmp
retf
inc
repnz
sbb
sub
retw
push
xor
xor
push
push
movs
dec
mov
iret
das
xchg
inc
mov
or
retf
and
jg
add
cmp
pop
hlt
push
sbb
add
cmp
sub
jp
sbb
out
xchg
js
cmp
push
movs
xor
aas
int
mov
push
cld
ss
xchg
aas
test
dec
out
std
das
stos
cmp
push
out
add
data16
lds
push
in
adc
xchg
and
(bad)
jne
gs
test
mov
movs
data16
lds
push
in
adc
xchg
and
(bad)
jne
gs
test
mov
movs
data16
lds
push
in
adc
xchg
and
(bad)
jne
gs
test
mov
movs
data16
lds
push
in
adc
xchg
and
(bad)
jne
gs
test
mov
movs
data16
lds
push
in
adc
xchg
and
(bad)
jne
gs
test
mov
movs
data16
lds
push
in
adc
xchg
and
(bad)
jne
gs
test
mov
movs
data16
lds
push
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
emms
mov
sbb
ins
(bad)
xor
aaa
pop
stos
(bad)
out
pop
push
mov
shr
test
fwait
out
aas
bound
out
cmp
aas
inc
mov
iret
xlat
jb
or
dec
addr16
aaa
sti
xchg
mov
pop
ja
daa
jmp
scas
out
lock
imul
(bad)
cmp
jp
jg
retf
mov
imul
retf
jo
std
push
sbb
cmp
cmp
add
pusha
fsubrp
inc
jne
mov
out
push
outs
push
shl
jmp
out
fnsave
stos
xchg
imul
sti
inc
dec
addr16
mov
jbe
arpl
push
mov
mov
iret
mov
push
aas
sbb
lods
pop
gs
fbld
xchg
jo
adc
(bad)
out
xchg
pop
es
jg
pusha
mov
dec
sti
xlat
inc
mov
dec
lock
jge
sub
nop
movs
xchg
mov
xchg
xchg
mov
(bad)
mul
(bad)
cmc
xlat
test
push
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
icebp
rol
out
repnz
xor
aaa
gs
jne
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
or
push
call
nop
icebp
mov
pop
pop
ss
and
push
mov
test
jae
(bad)
or
adc
aaa
call
jbe
xchg
mov
(bad)
dec
pop
fucom
cmp
ret
ins
out
mov
in
xor
mov
add
adc
fisub
in
cmc
or
pop
loop
dec
and
push
xor
cmp
ins
xor
test
dec
in
mov
test
jmp
fwait
out
push
addr16
rcl
sub
das
cmc
mov
aaa
clc
cld
xor
jne
adc
adc
xchg
in
movs
sub
aad
push
fwait
pop
(bad)
test
jo
jae
push
jne
inc
xorps
imul
dec
xor
in
cmc
das
lds
ins
pop
in
daa
jge
fisttp
fwait
into
mov
pop
xchg
jge
shl
mov
in
mov
pmullw
int3
outs
add
push
jne
push
(bad)
fistp
dec
xor
in
mov
xor
add
adc
inc
fbld
xlat
inc
jbe
push
ins
cld
xchg
cmps
jge
in
cmc
inc
push
xchg
push
and
daa
popf
aaa
mov
(bad)
push
lods
jo
jb
pop
mov
rol
fucom
cmp
xchg
fld
add
scas
xor
inc
pop
mov
jecxz
mov
shl
rol
push
aad
popa
movs
xor
aaa
xchg
inc
pushf
adc
addr16
retf
test
adc
das
loopne
(bad)
out
test
xor
mov
mov
mov
mov
(bad)
sbb
pop
and
iret
add
fs
jns
lods
and
ja
nop
mov
test
xchg
pop
mov
out
idiv
pop
fcom
daa
std
and
jne
inc
mov
aam
outs
mov
mov
adc
lock
and
test
push
mov
xchg
test
ret
in
mov
lds
int
fiadd
leave
pop
in
arpl
test
loope
mov
xchg
cmps
imul
out
loop
stc
xor
xchg
gs
pusha
push
mov
ret
push
xchg
ins
mov
dec
in
cmc
add
in
daa
cld
jae
inc
popf
inc
inc
fwait
push
arpl
bnd
xor
lods
in
imul
push
pop
cli
daa
sahf
mov
sub
jecxz
pop
sbb
lock
fwait
outs
aam
ins
je
out
jo
(bad)
ja
mov
xchg
sub
add
mov
mov
cmc
(bad)
addr16
movs
and
daa
xor
push
(bad)
push
mov
jg
sbb
mov
sub
sbb
jo
add
sub
push
xchg
pop
xchg
xchg
test
popf
(bad)
jnp
adc
scas
adc
stc
aaa
popf
inc
xor
adc
outs
mov
test
pop
ja
cmp
jl
aad
and
ja
push
cmp
popf
push
sub
xchg
dec
pop
sbb
test
xor
inc
xchg
mov
mov
test
ret
in
lods
xlat
sub
leave
cmc
add
je
cdq
push
mov
ret
cdq
into
test
(bad)
jns
pop
xlat
sbb
pushf
push
xor
das
gs
or
inc
ja
aas
mov
daa
mov
in
jmp
fimul
xor
inc
xor
jo
pop
sbb
test
sub
jbe
int
xor
fisub
in
mov
or
cmps
jge
in
cmc
xlat
lds
xchg
push
and
daa
push
aaa
mov
(bad)
push
lods
jl
xchg
add
pop
inc
add
mov
pop
fisttp
scas
xor
inc
(bad)
dec
ja
xchg
mov
fdivp
cmp
ja
push
popa
movs
xor
aaa
xchg
inc
pushf
adc
addr16
mov
dec
rcl
out
test
cmp
jne
add
push
lahf
mov
cmps
jl
inc
(bad)
sbb
pop
and
iret
getsec
mov
push
lods
and
ja
popf
mov
test
xchg
pop
mov
out
neg
fcom
daa
std
sub
inc
mov
aam
outs
scas
xchg
outs
cmps
mov
xlat
sub
mov
inc
adc
push
gs
mov
cs
lds
int
iret
pop
in
pop
in
arpl
mov
loope
mov
pushf
cmps
jl
xchg
(bad)
sbb
out
out
and
into
push
xchg
gs
ins
push
lods
addr16
ja
ret
push
xchg
ins
mov
jg
fsub
sar
add
clc
xor
movs
ret
test
in
mov
gs
xchg
out
scas
and
daa
adc
aam
and
xor
stc
xchg
pop
in
call
jge
pop
into
loopne
out
sbb
add
mov
loope
ret
jecxz
repnz
(bad)
lods
(bad)
mov
pop
fst
push
ret
jmp
fs
ja
aam
sbb
lock
fwait
outs
aam
cmp
fld
jo
push
arpl
outs
gs
jne
inc
fstp
xor
xchg
pop
in
cmc
xchg
xchg
mov
retf
fst
ins
es
stc
movs
push
mov
dec
xchg
shl
repz
aam
jmp
daa
call
gs
jne
inc
and
daa
loope
in
xchg
ins
cmps
std
mov
or
dec
xor
fst
std
daa
push
pusha
xor
(bad)
push
pop
movs
cmp
xchg
pop
pop
xor
cmp
pop
aad
jb
jno
pop
daa
std
aaa
xor
sbb
int
test
cmp
shr
fwait
dec
xor
fst
bound
aaa
xchg
mov
push
das
jb
and
jge
xchg
xchg
(bad)
mov
sahf
cmc
add
sub
inc
popf
dec
inc
mov
icebp
xor
dec
mov
sub
jbe
int
xor
fisub
in
mov
std
xchg
cmps
jge
in
cmc
pop
lds
xchg
push
and
daa
mov
push
lods
jnp
lods
movs
jae
jle
add
pop
stc
(bad)
xlat
cdq
out
mov
pop
fisttp
add
scas
xor
inc
(bad)
xchg
mov
fcomi
or
popa
movs
xor
aaa
leave
inc
pushf
adc
addr16
fwait
test
adc
das
jmp
sbb
mov
pop
in
cmp
mov
mov
cmps
jl
inc
(bad)
sbb
lahf
and
iret
or
mov
aad
lods
and
ja
cwde
mov
test
pop
mov
out
not
fcom
daa
std
sub
jne
inc
mov
aam
outs
stos
xchg
push
cmps
lds
sub
mov
inc
adc
push
dec
addr16
mov
cs
lds
leave
div
pop
lods
pop
in
arpl
add
sahf
loope
mov
cwde
cmps
inc
mov
(bad)
sbb
pop
push
jl
add
add
mov
push
mov
hlt
xchg
jge
ret
cmp
jl
inc
mov
cli
lahf
(bad)
enter
fadd
xchg
(bad)
test
dec
xchg
cmp
dec
hlt
xlat
dec
pop
(bad)
xor
xchg
adc
fist
xchg
sbb
or
xchg
rep
xor
dec
in
pop
std
test
movs
call
add
jmp
fisub
lahf
xchg
enter
fld
pop
rol
jmp
jmp
stos
sbb
cmps
push
repnz
aam
and
daa
jg
call
and
test
sbb
inc
pop
inc
cmp
or
inc
leave
call
sbb
mov
rcr
cmp
cmp
mul
inc
ins
rol
push
xor
test
mov
add
push
sbb
mov
into
mov
cmc
push
adc
aad
gs
inc
jbe
(bad)
cmp
repnz
xlat
and
xor
daa
sub
mov
xchg
js
pop
psrad
add
fwait
mul
jno
lea
or
mov
test
push
mov
(bad)
js
lds
jbe
ss
mov
gs
ficom
in
adc
aam
rcl
js
dec
mov
jo
mov
je
es
pusha
push
mul
jecxz
in
addr16
addr16
movs
xor
inc
mov
sbb
gs
(bad)
push
std
fidiv
xchg
movs
leave
dec
or
mov
or
vdivss
scas
daa
jb
xor
adc
xchg
inc
cwde
or
mov
mov
pop
mul
call
call
cmps
cld
xchg
das
and
pop
cmp
nop
scas
cmc
clc
xor
rcr
call
xchg
fsub
sbb
or
pop
shr
cli
sub
xor
aaa
call
pushf
jmp
rcl
pop
adc
push
icebp
adc
mov
mov
mov
imul
je
mov
(bad)
rcl
jnp
and
(bad)
rcl
loope
aaa
xor
xor
cwde
fstp
jnp
rol
(bad)
mov
(bad)
push
movs
popa
out
imul
(bad)
push
jo
add
push
mov
push
ja
js
ror
push
arpl
out
cmc
popa
inc
xor
je
jae
push
mov
test
inc
push
pop
lds
adc
test
cli
addr16
sub
pop
movs
jbe
fs
jecxz
je
mov
xlat
or
inc
mov
pop
inc
xchg
call
sbb
(bad)
imul
sbb
mov
pop
in
out
inc
enter
pop
or
sahf
test
shr
sub
push
icebp
daa
popf
out
and
jb
mov
cmps
push
or
movs
test
icebp
bound
aaa
lea
fdivrp
movs
inc
in
nop
and
mov
sar
lds
(bad)
bound
or
adc
fadd
ins
ja
outs
mov
repz
and
pop
ret
and
addr16
add
cmp
iret
js
imul
xchg
out
retf
dec
sbb
call
clc
inc
mov
or
mov
cmps
les
in
fmul
fs
xchg
test
movs
xchg
aas
mov
ss
mov
adc
call
lock
xor
sbb
test
loopne
(bad)
outs
nop
scas
jecxz
xor
jb
add
push
add
xor
mov
ins
sub
repnz
imul
or
outs
leave
xchg
iret
nop
ds
xor
gs
out
jp
push
jno
cmp
xchg
(bad)
ja
dec
retf
rcl
adc
repz
mov
cmp
ret
xchg
movs
stos
sysexit
push
outs
fist
inc
add
mov
mov
dec
cmps
ret
ret
jle
cmp
adc
lods
(bad)
push
stc
sbb
scas
xchg
add
fisubr
in
xor
out
pop
push
ins
cwde
mov
mov
test
sbb
or
outs
adc
fnsave
retf
aad
push
lea
sub
add
jmp
loope
mov
push
inc
into
dec
xchg
adc
jl
dec
cmp
and
dec
test
dec
stos
daa
loopne
lock
and
aas
retf
or
sar
add
ret
sbb
aam
pop
(bad)
cdq
mov
pop
out
and
xor
add
push
mov
jmp
rcr
sbb
adc
inc
ja
das
fwait
scas
clc
and
and
loope
mov
jp
jne
cvtps2pi
aas
stc
jmp
jl
out
and
cli
arpl
push
or
mov
pop
xchg
repnz
push
jl
mov
and
in
mov
pushf
jp
ret
(bad)
aas
xchg
adc
mov
pop
rcl
add
mov
xchg
mov
dec
in
mov
cmp
fdiv
jae
xor
out
xor
sbb
shl
cmps
iret
in
cmc
idiv
neg
test
mov
jno
scas
and
mov
xchg
xchg
sbb
not
cmc
sbb
inc
add
cwde
enter
aaa
mov
js
xchg
push
cmps
ret
(bad)
mov
neg
es
inc
and
cli
aam
aaa
add
data16
cmp
outs
dec
in
les
retf
inc
(bad)
add
sub
add
xor
outs
pop
adc
and
shl
sbb
jo
fs
fwait
add
push
aam
cmps
xchg
cmp
nop
mul
bound
ins
mov
push
add
addr16
std
inc
xchg
inc
ja
mov
movs
aam
seto
aad
sbb
test
movs
lahf
test
repz
sbb
jo
add
push
mov
or
ja
and
xor
cdq
jno
cmp
fnstsw
xor
ins
inc
add
inc
mov
cmp
and
jnp
cmps
cmp
das
jno
add
nop
ja
sbb
add
iret
jne
or
fdiv
lfs
mov
icebp
pusha
pop
and
add
adc
xlat
mov
xchg
xchg
int
xchg
mov
enter
mov
push
or
mov
popf
mov
jge
fmul
(bad)
add
jmp
pop
out
and
xor
mov
mov
(bad)
push
push
mov
inc
in
and
ss
xchg
inc
push
add
push
test
jl
dec
mov
retf
es
fwait
mov
xor
mov
rol
cmps
call
cmp
pop
jmp
inc
fadd
mov
jnp
add
cmp
sub
mov
iret
mov
movs
mov
movs
or
adc
cmps
xchg
lahf
or
pop
dec
out
neg
sti
and
lods
sahf
jp
je
adc
xchg
jb
inc
mov
or
and
mov
ret
int
lea
icebp
push
into
(bad)
push
mov
dec
mov
push
pop
bound
jae
aas
ror
push
cmp
mov
mov
jb
xor
xchg
stos
or
stc
(bad)
lds
sub
ror
dec
gs
stos
add
movs
push
test
mov
dec
mov
xor
jb
inc
clc
xchg
enter
clc
unpcklps
outs
mov
in
mov
cld
inc
cmc
jp
xor
sub
mov
loop
cmps
sub
dec
std
daa
xchg
pop
push
adc
iret
lahf
popa
and
(bad)
push
test
ret
jg
test
xchg
hlt
xchg
(bad)
stos
fst
rcl
outs
mov
out
hlt
inc
fucom
mov
in
shl
lock
aad
mov
mov
xchg
sub
call
mov
push
pop
daa
adc
test
pop
pop
mov
xor
cmps
shl
cmp
xchg
pop
add
xchg
push
xchg
mov
dec
push
mov
dec
xor
mov
clc
inc
push
pop
retf
inc
popa
popf
push
stos
inc
push
mov
mov
push
pushf
sbb
xor
lds
sub
and
movs
adc
orps
int
sbb
cwde
ja
cmp
(bad)
cmc
sub
push
outs
jmp
not
gs
not
and
mov
shl
dec
sbb
aad
neg
and
fmul
or
and
pop
call
jmp
lds
adc
inc
ss
xor
stos
mov
js
xchg
dec
mov
mov
mov
bound
jb
add
and
and
sar
pop
imul
mov
jno
adc
aad
jo
mov
push
pop
pop
int
icebp
ja
cmps
push
outs
xchg
repz
jmp
clc
mov
addr16
and
xchg
and
inc
call
outs
mov
jne
xor
jno
push
and
add
test
jnp
mov
stos
test
xchg
aaa
jne
mov
ins
xchg
jl
test
outs
add
dec
jmp
outs
pop
popf
mov
dec
out
sub
adc
dec
inc
(bad)
and
repnz
mov
outs
shl
and
lods
adc
pusha
cmps
cld
push
push
addr16
(bad)
cli
ror
jg
movs
sbb
outs
enter
aam
jl
mov
push
loopne
mov
xor
push
sbb
jmp
(bad)
mov
jmp
out
mov
into
addr16
cld
bound
push
cli
mov
icebp
mov
cmps
ds
mov
into
(bad)
and
repnz
mov
iret
or
aad
cmp
scas
test
pop
add
mov
int3
and
or
push
inc
movs
push
inc
push
sahf
mov
vdivsd
pop
inc
push
add
dec
(bad)
int3
xor
add
loope
cs
leave
or
mov
cmp
mov
fidiv
fsubr
test
aam
jmp
dec
stos
adc
push
(bad)
cmp
jp
clc
add
add
pop
dec
call
cmps
pop
movs
sbb
pop
ins
scas
mov
std
scas
(bad)
mov
movs
out
push
arpl
fnstcw
out
scas
pop
retf
icebp
push
lds
mov
into
cmps
pop
add
inc
ret
repnz
test
mov
pop
jb
aad
movs
inc
(bad)
movs
fnstcw
adc
movs
xchg
test
xchg
jle
in
shr
pop
popa
stc
aas
popa
adc
pop
arpl
repz
shr
sbb
test
stc
push
ins
sbb
ins
shr
and
xchg
loopne
dec
icebp
xlat
sub
jb
iret
pusha
pushf
or
inc
mov
test
stos
xchg
ds
mov
(bad)
sub
repz
jae
push
and
cmc
out
jl
test
pop
adc
add
xor
mov
and
cmp
dec
sub
(bad)
push
mov
add
fdivr
jge
outs
mov
pop
or
inc
inc
sub
inc
adc
call
bound
fidiv
icebp
adc
in
sub
sub
inc
and
in
pop
jge
mov
dec
out
inc
cmps
loope
aaa
or
mov
push
inc
push
push
aas
popa
inc
ja
les
retf
sbb
nop
dec
or
std
pop
pop
add
fiadd
xchg
sahf
into
outs
pushf
add
icebp
ror
icebp
les
inc
mov
or
xor
enter
sbb
xor
imul
nop
mov
aas
int
call
daa
push
mov
add
ja
ret
mov
clc
pop
test
hlt
dec
cmps
jbe
repnz
or
and
push
and
mov
aam
push
push
ins
sub
cmc
daa
jmp
mov
jae
aam
gs
cmp
sub
inc
ret
jmp
push
mov
movs
inc
popa
xchg
movs
cmps
push
arpl
div
xchg
xor
or
or
xor
cmp
inc
call
loopne
les
xor
xchg
daa
rcr
je
jne
mov
lods
mov
jecxz
out
cmp
cmc
and
lods
adc
cmps
mov
stos
xor
inc
mov
test
mov
(bad)
xor
(bad)
xor
pop
jne
inc
scas
inc
jno
sbb
adc
stos
mov
jbe
lock
pop
mov
aam
test
xor
sbb
sbb
pushf
test
push
int
mov
(bad)
cmp
inc
(bad)
repz
fadd
add
cmp
cmp
xlat
xchg
sbb
jno
das
adc
ja
outs
push
add
push
add
dec
ins
dec
jbe
dec
outs
sub
add
fmul
je
pop
jle
jne
test
cmps
loopne
pusha
dec
jle
add
cwde
mov
add
aad
sub
jg
pop
mov
mov
int
xchg
repz
(bad)
add
dec
mov
mov
xchg
mov
xchg
out
loopne
(bad)
in
add
and
xor
je
pushf
adc
mov
les
lds
movs
pop
jmp
inc
cmp
mov
imul
and
pusha
iret
and
(bad)
scas
xor
movs
repz
cmc
pextrw
mov
fst
shl
cld
aaa
inc
scas
xor
xchg
aaa
xchg
hlt
pop
push
in
mov
push
fwait
outs
aam
push
div
jo
cli
movs
(bad)
(bad)
ss
scas
movs
ret
jp
jge
xor
jle
dec
mov
xchg
pop
inc
in
pusha
xor
or
shr
in
in
lds
retf
and
imul
xchg
xchg
cmps
sub
sar
jnp
xor
add
addr16
push
sahf
push
xor
loop
jp
xor
out
mov
inc
sub
pop
ss
and
bound
addr16
cmp
dec
mov
lds
not
push
(bad)
push
aaa
call
xor
dec
test
push
sbb
pushf
sbb
sub
push
lds
push
sub
js
shl
cmc
xlat
or
push
test
daa
adc
aas
inc
movs
mov
movs
xchg
xchg
in
loop
mov
sbb
pusha
outs
xor
fidivr
aaa
jns
int
sub
xchg
(bad)
add
mov
out
imul
clc
dec
aaa
gs
jne
add
push
mov
fidiv
repnz
(bad)
ss
pushf
out
sub
in
outs
gs
lods
push
in
and
xchg
test
out
scas
hlt
adc
mov
int
ins
es
(bad)
cmp
jne
inc
(bad)
adc
movs
inc
push
into
test
popf
(bad)
push
add
xor
hlt
xchg
jne
lea
xor
xchg
fsub
mov
les
scas
and
bound
cmps
movs
sub
inc
call
loopne
mov
popa
(bad)
xchg
mov
(bad)
int
lods
out
adc
mov
(bad)
push
pop
test
ja
ret
inc
inc
int3
mov
retf
cmc
out
(bad)
aam
rcr
sub
inc
mov
sbb
push
inc
movs
pop
lock
xchg
xlat
in
mov
ins
pop
add
das
je
mov
xchg
shr
cmps
push
push
mov
out
mov
test
xor
addr16
je
inc
out
in
jne
xchg
test
lahf
(bad)
sahf
cs
push
retf
xor
jecxz
mov
adc
(bad)
or
movs
xlat
add
adc
and
js
icebp
daa
fidiv
adc
xchg
or
popf
jmp
cmp
clc
ins
pop
jge
pusha
bndldx
mov
jno
mov
xchg
mov
add
rcr
aad
sub
icebp
push
and
cmp
xchg
and
cmp
ret
or
dec
mov
les
aas
ficom
push
mov
mov
push
arpl
xchg
pop
jp
xchg
shl
adc
cli
scas
clc
arpl
aam
inc
dec
adc
jne
add
dec
adc
and
pop
or
loope
inc
out
lahf
movs
jle
mov
xchg
adc
xlat
dec
xchg
xor
inc
push
push
add
add
aaa
ja
call
loop
push
in
js
dec
jle
ret
fst
adc
adc
lahf
mov
cmps
or
mov
xchg
pop
in
mov
test
mov
daa
cwde
add
jmp
add
jno
test
mov
mov
inc
shl
inc
addr16
and
cmps
std
test
dec
popa
push
mul
daa
stos
aaa
imul
mov
movs
or
nop
sub
cli
mov
cdq
xlat
dec
popa
sub
test
fnsave
add
stos
clc
jecxz
fwait
adc
cs
jnp
aam
push
nop
or
sub
inc
lock
shl
iret
sbb
cmp
sbb
inc
mov
cdq
loope
mov
sub
xchg
mov
aad
test
scas
dec
xor
mov
lods
add
cli
cs
cmp
ror
dec
pushf
(bad)
repz
and
xlat
add
sub
mov
dec
jg
jmp
dec
out
mov
adc
ret
cli
test
jne
inc
xor
cmp
jmp
sub
iret
rcl
push
ret
adc
push
mov
push
ja
daa
mov
mov
in
call
jle
movs
bound
call
addr16
cmp
cmps
jge
pusha
dec
mov
push
lds
and
arpl
out
and
inc
std
pop
xchg
lock
pop
std
jno
(bad)
mov
dec
mov
xor
jle
jb
push
dec
sub
xor
jmp
and
jg
jle
and
add
adc
fdiv
dec
inc
loop
out
ror
and
adc
nop
imul
mov
jp
retf
jo
push
or
sbb
vaddsd
jecxz
rcl
lods
push
jp
ins
cmp
jbe
ja
ret
jp
xchg
pop
outs
(bad)
es
push
out
or
pop
mov
ss
bound
mov
sub
pop
push
inc
sub
push
iret
sbb
or
mov
xchg
pop
xchg
pop
mov
xor
div
mov
and
xchg
inc
pop
scas
dec
push
sub
xchg
retf
dec
in
cmc
xchg
cmp
xchg
std
inc
or
ja
fbstp
push
mov
ret
test
push
dec
mov
or
(bad)
mov
daa
xor
jae
inc
popf
xchg
inc
addr16
xchg
retf
mov
add
xlat
xchg
mov
jp
inc
daa
std
icebp
gs
and
ja
ret
lock
ins
popa
xchg
mov
xor
call
rol
add
push
or
adc
inc
mov
aad
mov
mov
xor
dec
out
mov
xchg
call
cli
sub
jae
cmps
cmps
shl
and
(bad)
mov
out
repz
inc
stos
jmp
sub
or
xor
xor
sbb
rol
adc
inc
add
popf
mov
or
push
mov
push
cmps
and
mov
popf
test
(bad)
fadd
xchg
mov
cmp
jb
clc
mov
leave
je
pusha
test
shr
scas
jp
fsub
cmp
dec
cmps
sub
cli
ret
pop
lds
ret
xchg
inc
xor
movs
ret
fld
mov
dec
sbb
jp
(bad)
js
mov
retf
inc
jmp
or
push
mov
(bad)
mov
aam
aad
jecxz
fstp
dec
xchg
adc
test
sbb
cmc
xchg
sbb
test
mov
mov
(bad)
fimul
es
mov
mov
mov
add
nop
mov
jo
adc
adc
xchg
aas
jp
jge
push
push
daa
and
fdiv
push
into
fwait
stos
xor
dec
xchg
inc
cmps
jge
pusha
out
pop
dec
(bad)
aad
ficom
retf
jne
aaa
call
mov
mov
add
xchg
or
shl
mul
xor
inc
mov
fdiv
dec
push
setne
push
fdivr
es
pop
clc
stos
enter
sub
mov
sub
mov
mov
aas
lea
push
mov
inc
mov
rol
push
push
rcpps
jae
mov
aaa
mov
jmp
test
push
cs
or
aam
test
mov
push
cli
(bad)
jmp
push
cmc
xchg
test
sbb
out
js
test
cmps
and
pop
ror
jo
imul
shl
lock
or
test
repz
adc
fadd
ins
mov
inc
cmp
jp
clc
retf
stos
sub
call
ja
jnp
fiadd
dec
jle
push
inc
sbb
push
loope
add
jmp
movs
xor
bound
(bad)
rcl
xor
mov
cwde
jg
xchg
shr
adc
adc
movs
icebp
and
loop
retf
cmps
ror
cdq
cmp
lds
fldcw
stc
out
neg
or
xchg
add
cld
test
popa
shl
in
cmc
test
out
out
sti
mov
icebp
and
test
push
lahf
sub
dec
lahf
aad
xor
(bad)
cmc
xlat
xchg
out
div
xor
jae
mov
mov
xchg
xchg
push
in
mov
add
scas
jmp
sub
push
xchg
jg
pop
shl
dec
popa
cmp
fbld
add
inc
lods
outs
fdiv
dec
adc
jmp
cmp
hlt
jp
mov
xchg
push
push
es
in
sbb
loopne
mov
mov
push
mov
add
nop
mov
vsqrtpd
xor
inc
push
scas
mov
xchg
lgs
cld
loopne
mov
out
ins
xor
adc
test
(bad)
loope
cmc
xlat
mov
push
push
jae
push
cmp
stc
je
aaa
cmp
mov
pop
push
jae
inc
(bad)
shl
mov
mov
jl
cs
popa
bt
push
add
icebp
adc
mov
stc
xchg
lds
xchg
mul
mov
enter
dec
loope
test
sar
shl
and
pop
mov
stos
add
mov
ret
dec
xchg
cmps
lds
xchg
js
adc
pop
test
jo
jp
int3
add
jne
aad
push
xchg
or
lahf
xlat
xor
mov
sub
jmp
mov
das
pop
sar
cmp
xor
xor
mov
mov
cmps
ds
movs
das
add
enter
(bad)
loop
stos
imul
int
push
mov
mov
sahf
inc
dec
int3
popf
pop
dec
out
fidiv
cmps
sahf
mov
jmp
mov
adc
aaa
dec
(bad)
fisub
push
les
into
movs
and
mov
cmps
mov
sub
ins
pop
fmul
daa
mov
mov
into
pop
mov
adc
outs
jns
into
inc
jo
add
push
aaa
daa
repz
xchg
cmp
and
jg
js
xchg
fsub
jbe
iret
std
in
cmp
sub
(bad)
jo
sahf
aas
gs
xchg
outs
adc
mov
lods
pop
jg
sub
push
nop
cwde
jle
mov
cwde
div
ficomp
inc
fwait
shr
dec
js
push
push
shr
cmc
dec
jl
(bad)
neg
in
mov
hlt
sub
cld
test
lahf
or
mov
popf
mov
push
or
sti
push
(bad)
ds
fdiv
xor
xor
inc
in
sbb
xor
xor
push
(bad)
or
xor
cmp
int3
(bad)
adc
out
(bad)
cli
das
inc
popa
sbb
mov
cmp
dec
mov
hlt
jae
xor
mov
add
imul
stos
jecxz
mov
mov
mov
add
retf
inc
and
mov
jecxz
test
xchg
mov
(bad)
cmp
shr
jge
dec
ss
cdq
mov
and
ja
sub
mov
mov
push
dec
jecxz
inc
mov
xor
sub
fimul
xchg
std
dec
push
mov
mov
adc
out
push
push
test
sbb
daa
adc
pop
(bad)
dec
xchg
sbb
test
in
mov
pop
dec
popa
xlat
mov
cmp
ret
or
retf
ds
or
ins
pop
jg
jb
jmp
je
or
and
movs
or
(bad)
mov
jle
xchg
xchg
aad
push
inc
xor
test
hlt
and
mov
cs
icebp
retf
xchg
pop
outs
inc
jbe
dec
sbb
idiv
xor
(bad)
int3
icebp
aam
(bad)
push
xor
ficomp
or
out
scas
jno
repnz
mov
push
sbb
sub
mov
lds
add
dec
leave
xor
push
inc
sbb
gs
push
mov
dec
cmp
mov
sbb
mov
enter
test
push
push
aas
(bad)
or
lahf
loopne
loopne
aaa
enter
aam
mov
mov
outs
fcomp
and
test
fidivr
xchg
imul
aad
int
mov
jp
sbb
(bad)
xor
sbb
jle
hlt
cmp
xchg
sub
in
push
adc
jge
xor
mov
aas
(bad)
adc
xchg
jg
(bad)
stos
xlat
xchg
and
test
xor
jp
sub
mov
xchg
lea
ins
mov
cmp
xchg
xor
aas
gs
popf
adc
fsub
bnd
mov
aas
in
and
dec
mov
leave
in
push
ss
gs
mov
xchg
repnz
enter
mov
(bad)
cmc
sub
jecxz
adc
push
xchg
adc
pop
mov
lahf
gs
jl
(bad)
or
aam
ds
jb
xchg
inc
(bad)
push
fisttp
in
adc
sub
mov
lea
cmc
xlat
lds
aad
cs
in
push
ss
sbb
mov
int3
dec
sub
loopne
mov
pop
arpl
push
ret
add
xor
jne
or
sbb
inc
mov
mov
loope
cmc
fcom
aaa
das
cmps
xor
retf
daa
push
fstp
adc
xlat
in
movs
movs
test
out
mov
cmp
and
push
or
std
cmp
loop
scas
adc
xchg
shl
sbb
mov
stc
fist
cmc
fs
or
cmps
je
inc
(bad)
outs
ja
js
xchg
hlt
popa
xchg
cmps
aam
jns
and
test
adc
dec
inc
cwde
stos
pop
pop
out
dec
jg
pop
xchg
in
(bad)
xor
and
stos
rcl
int3
jne
inc
in
(bad)
cli
dec
dec
mov
or
sahf
arpl
push
sub
mov
je
pop
int3
adc
push
or
(bad)
std
push
lods
repnz
xlat
dec
cld
pop
jle
pop
jae
lds
jno
dec
cmp
ja
repz
loop
fcmovu
adc
(bad)
or
aaa
ficom
inc
call
jne
cmp
push
shl
movs
xchg
mov
mov
dec
push
je
popf
in
aam
imul
mov
add
jne
ins
cmps
sar
cs
sub
push
test
cmps
add
loopne
lock
lahf
mov
and
xchg
jne
nop
cmc
pop
pusha
inc
shl
retf
mov
xchg
mov
adc
popa
outs
ss
or
ret
cmp
vsubsd
xlat
mov
dec
or
addr16
xchg
or
push
mov
shr
jl
or
out
movs
jge
cmp
inc
sub
out
push
cmp
repnz
sbb
xchg
(bad)
shr
sub
ins
mov
int3
jne
pop
gs
lahf
rol
sbb
fwait
iret
(bad)
fistp
in
repz
cmc
out
dec
lods
xor
scas
sub
test
js
xchg
imul
pop
dec
out
push
push
add
mov
ds
(bad)
call
jle
ror
out
and
inc
hlt
pushf
mov
popa
movs
lods
movs
and
xchg
mov
in
in
fwait
mov
jl
mov
pop
in
sbb
inc
ss
shl
jmp
sar
ret
nop
push
sub
mov
mov
push
(bad)
call
cmp
lahf
ins
loop
mov
ret
lds
push
in
sbb
call
ja
jbe
aaa
jp
xchg
ret
sub
xchg
adc
jp
retf
fdivr
imul
(bad)
dec
pop
xchg
mov
popa
jecxz
inc
sbb
cmp
add
xor
arpl
(bad)
push
push
cwde
push
dec
mov
pop
test
or
les
ja
sub
int3
jno
jae
sbb
push
retf
outs
mov
xor
sub
cmp
jmp
aas
addr16
aam
xchg
push
scas
push
mov
pushf
jle
lea
xor
inc
adc
mov
inc
and
sub
mov
or
shr
mov
sub
cld
cmp
retf
popa
lea
cwde
dec
gs
jg
cmp
fbld
cmc
mov
pop
imul
xor
add
je
fmulp
in
inc
jbe
(bad)
push
lahf
lea
add
lods
mov
out
and
pop
enter
not
sbb
mov
push
sbb
cmp
mov
adc
xchg
mov
inc
mov
jne
rol
(bad)
cmc
pop
loope
aad
test
pop
and
arpl
xchg
mov
or
enter
push
or
xor
inc
aaa
mov
adc
rcr
fmul
(bad)
jge
ret
or
out
jp
pop
test
ja
ret
jne
test
fbstp
daa
pop
neg
pop
mov
dec
aaa
adc
push
lea
xchg
out
cmp
aaa
fstp
dec
clc
(bad)
and
arpl
in
adc
mov
js
xchg
frstor
cmc
xlat
xchg
out
sub
cld
mul
mov
sub
(bad)
hlt
(bad)
lea
and
lods
hlt
mov
jge
pusha
idiv
sub
xchg
lods
jg
jae
jo
xchg
add
cmp
sub
ret
cmc
push
mov
inc
inc
popa
or
push
outs
dec
sbb
in
ret
or
repz
jecxz
pusha
inc
mov
xor
dec
shl
dec
mov
xlat
inc
add
inc
add
cwde
xor
add
stos
xchg
pop
push
bound
inc
ja
jle
adc
inc
cmps
imul
cmp
fdiv
gs
ss
jno
mul
or
cld
lods
js
xchg
lds
cmc
xlat
(bad)
aad
pop
fst
or
inc
(bad)
movs
sar
cld
movs
(bad)
(bad)
repz
outs
pop
xor
dec
jecxz
jmp
and
inc
addr16
mov
jg
or
cwde
sub
mov
test
int3
fstp
addr16
jae
rcr
rol
xchg
fnstsw
add
or
or
ins
cmp
and
push
fisttp
fsub
arpl
fdivr
or
xchg
or
push
repz
and
add
pop
adc
adc
imul
add
pop
mov
lds
fisub
sub
sub
ins
std
push
cmp
aad
push
ret
pop
dec
push
pop
retf
xor
iret
(bad)
xchg
mov
xor
aas
mov
outs
in
iret
mov
xor
cs
dec
mov
or
cmp
inc
mov
lock
ins
pop
push
mov
pop
icebp
(bad)
movs
pop
(bad)
scas
cmp
xchg
inc
pop
fadd
addr16
cs
xchg
test
push
mov
sub
aad
sub
dec
scas
cs
into
arpl
cmps
xor
mov
ss
mov
retf
das
sahf
inc
call
jae
inc
repz
movs
xchg
jne
cmp
das
shl
jb
pushf
or
inc
jne
mov
es
mov
inc
mov
mov
push
push
lods
adc
mov
xor
cmps
jne
fwait
in
mov
call
cmp
out
int3
pop
movs
lds
sbb
xor
or
repnz
add
aad
in
xor
add
(bad)
xchg
add
mov
enter
hlt
push
jae
imul
mul
je
popa
xor
out
jg
or
xor
dec
cmc
push
jnp
into
dec
and
daa
adc
loope
xchg
fcmovbe
cwde
xchg
xor
inc
js
lds
arpl
sub
pop
adc
ins
iret
daa
mov
retf
shr
add
stos
xlat
add
jae
pop
in
es
ficom
adc
or
in
cmps
xchg
xor
cmp
shl
aad
jae
(bad)
adc
aam
gs
mov
enter
pop
jle
sbb
jmp
xchg
stos
ds
push
xor
jb
inc
pop
push
or
jle
mov
das
sbb
jmp
hlt
xor
jb
int3
iret
fmul
adc
rcr
mov
jmp
cmps
cmps
inc
(bad)
pushf
dec
cmp
push
inc
addr16
xor
stc
jge
and
out
div
gs
jp
adc
test
pop
xor
jmp
nop
and
push
lods
add
sub
cs
fiadd
xchg
out
cmps
push
xor
ss
mov
test
xchg
jge
jns
jne
inc
and
daa
loope
fst
in
cmc
imul
sahf
xor
out
inc
mov
xchg
mov
(bad)
ins
sub
cmc
xchg
push
sbb
test
arpl
hlt
push
(bad)
xor
movs
js
xchg
les
in
cmc
scas
not
aaa
dec
push
in
jbe
mov
inc
es
mov
add
ficomp
push
test
scas
ins
xor
hlt
call
data16
jbe
ins
jecxz
out
dec
lahf
xlat
cmp
xor
and
sub
xchg
push
outs
aas
std
test
mov
add
rol
(bad)
aad
jmp
retf
sahf
adc
out
stos
hlt
je
jbe
popf
jecxz
out
pop
cmc
xchg
dec
dec
sub
cli
dec
adc
add
mov
loop
mov
sbb
pusha
outs
xor
aaa
jns
int
sub
xchg
(bad)
add
mov
out
imul
clc
dec
aaa
mov
push
mov
fidiv
repnz
(bad)
or
jo
add
inc
stc
push
in
and
xchg
test
out
scas
cmc
adc
mov
int
ins
daa
(bad)
(bad)
cmp
jne
inc
(bad)
adc
movs
inc
push
into
test
popf
xlat
push
push
mov
and
dec
adc
push
adc
xchg
fsub
mov
lds
scas
and
bound
cmps
movs
sub
inc
xor
loopne
mov
data16
xchg
mov
(bad)
int
lods
out
adc
pop
xor
pop
test
ja
ret
inc
inc
int3
mov
fwait
cmc
out
(bad)
aad
rcr
popa
daa
int
or
addr16
mov
test
in
sbb
in
mov
ins
pop
add
das
jne
mov
xchg
shr
cmps
push
push
mov
(bad)
nop
lahf
and
daa
or
lods
add
ja
stos
out
dec
cmps
push
jecxz
sbb
je
inc
add
aaa
xchg
inc
mov
shr
mov
dec
imul
ja
sahf
in
sub
inc
mov
icebp
movs
cmp
push
xor
inc
jbe
or
push
je
xchg
mov
dec
cmc
sub
and
aam
retf
xlat
jbe
int3
xor
movs
xchg
ds
jns
ins
(bad)
movs
xlat
and
int3
scas
inc
pop
call
sub
ret
loope
inc
push
in
loopne
(bad)
movs
push
jno
xor
xchg
in
fidiv
aam
rol
add
idiv
pop
repz
add
pushf
jecxz
inc
es
clc
movs
add
mov
ds
lds
inc
mov
sbb
xlat
fcmovbe
and
and
(bad)
push
bound
lock
psrad
cmp
sub
mov
out
mov
and
pop
xor
arpl
neg
pop
or
sub
lods
inc
xor
xor
push
in
push
add
and
jge
xor
mov
adc
xlat
cmps
cwde
mov
xchg
dec
in
test
xor
jmp
and
push
sbb
jno
mov
ds
ficom
jae
jp
inc
jne
inc
pop
add
xchg
and
xchg
cmps
nop
xchg
cmc
and
(bad)
push
in
adc
push
push
xor
mov
cmp
xor
stc
shr
hlt
push
and
or
dec
repnz
mov
daa
inc
push
pop
jmp
stos
xor
sar
push
call
fsubr
xor
xor
dec
lods
sbb
ss
jne
mov
js
ja
hlt
(bad)
dec
push
push
mov
inc
ja
enter
test
mov
clc
inc
inc
jecxz
cmp
cmp
mov
xchg
outs
leave
adc
call
and
xchg
inc
pop
xchg
cmp
retf
loopne
dec
mov
arpl
daa
cwde
addr16
and
xchg
mov
ja
push
shr
adc
jl
push
and
ficom
and
xchg
cld
cmc
xchg
(bad)
cmc
aas
fwait
sbb
push
mov
rol
add
inc
add
(bad)
push
mov
sar
cmp
(bad)
adc
sbb
mov
push
xor
je
mov
jle
add
xchg
rcr
xor
or
inc
push
or
mov
and
hlt
movs
retf
test
mov
test
and
jne
mov
aaa
xchg
loop
jg
ds
(bad)
mov
jo
or
enter
(bad)
sbb
sub
test
cmc
xchg
add
pop
push
jo
and
inc
cmp
repz
push
sub
aad
jbe
mov
and
(bad)
push
dec
ret
aad
push
dec
ss
rcl
daa
pop
jl
sahf
xor
(bad)
push
push
push
ja
fidiv
popa
mov
stos
xor
add
jmp
mov
push
addr16
xchg
ja
retf
mov
shl
cmp
cmc
push
xor
popw
stos
jle
fbld
jne
mov
or
test
dec
in
mov
test
jmp
fwait
out
push
addr16
rcl
and
in
cmc
mov
aaa
clc
cld
xor
jne
adc
adc
cld
xchg
in
cmps
sub
aad
push
fwait
pop
(bad)
test
jo
jae
push
jne
inc
andnps
imul
dec
xor
in
cmc
das
lds
ins
pop
in
daa
jge
fisttp
fwait
into
mov
pop
ror
loop
mov
or
mov
adc
inc
aaa
rcr
jne
inc
xor
mov
xchg
jl
xchg
iret
xchg
xchg
in
cmps
aas
dec
(bad)
aad
rcl
cld
xor
jne
add
push
lahf
mov
jl
inc
(bad)
sbb
pop
and
iret
cmp
or
jne
lods
and
ja
scas
mov
test
xchg
pop
mov
out
neg
fcom
daa
std
push
gs
jne
inc
mov
aam
outs
pushf
xchg
in
cmps
pop
mov
adc
rcl
and
test
push
aad
mov
mov
rcl
lds
repnz
mov
lea
xor
push
sahf
loope
mov
lods
cmps
repz
(bad)
sbb
out
fisub
into
push
xchg
gs
pop
push
and
ja
ret
push
xchg
ins
(bad)
xchg
shl
ret
cmc
add
dec
daa
cld
jae
inc
popf
jle
add
movs
outs
icebp
xor
dec
mov
xlat
sub
jbe
int
xor
fisub
in
mov
adc
cmps
jge
in
cmc
test
out
sbb
addr16
xchg
aaa
mov
(bad)
push
lods
inc
push
adc
rol
cmc
out
mov
pop
fnsave
add
scas
xor
inc
(bad)
jb
les
ss
loopne
mov
out
push
popa
movs
xor
aaa
jae
xor
push
gs
dec
call
icebp
test
stos
aad
int
mov
mov
xor
push
cli
dec
ret
xor
mov
(bad)
mov
mov
(bad)
jnp
xchg
adc
xchg
xchg
cmps
pop
ret
or
xor
xor
sbb
mov
cmps
fidivr
push
test
or
int
mov
pop
adc
mov
mov
mov
or
sbb
jecxz
mov
dec
in
(bad)
loop
dec
arpl
push
xor
movs
outs
aas
sbb
push
scas
(bad)
out
loop
and
pop
add
int3
mov
enter
loope
mov
sar
pop
mov
movs
xchg
cmp
xor
push
daa
(bad)
cmp
xor
andps
mov
in
cmps
sub
cmp
and
iret
jo
lea
inc
lods
in
aas
ja
jo
enter
mov
lds
aad
scas
test
shl
inc
pop
mov
adc
inc
fmul
stos
push
fwait
pop
les
inc
daa
jmp
and
push
or
or
mov
ins
push
mov
push
hlt
adc
test
jb
mov
test
cmp
in
cmc
mov
sahf
aad
out
bound
add
stos
sbb
xor
ret
fdiv
cmc
adc
imul
out
mov
inc
ds
jle
ret
shl
push
lock
cmp
scas
inc
mov
es
xor
xchg
mov
fisttp
ja
dec
mov
or
scas
xor
xor
out
inc
mov
xchg
mov
mov
or
fisubr
arpl
mov
inc
addr16
push
mov
out
imul
stc
dec
aaa
gs
jne
add
push
mov
fidiv
repnz
(bad)
or
jo
add
inc
mov
ja
pop
in
xchg
test
cmc
adc
mov
int
ins
daa
(bad)
call
inc
(bad)
adc
movs
inc
push
into
test
popf
xlat
push
pop
mov
and
dec
adc
push
frstor
xor
xchg
fsub
mov
lds
scas
and
bound
cmps
cmps
sub
inc
jmp
out
out
mov
addr16
xchg
mov
(bad)
int
lods
out
adc
add
test
ja
ret
inc
inc
int3
mov
(bad)
cmc
out
(bad)
aad
(bad)
pop
xor
jb
inc
mov
sbb
push
daa
movs
pop
lock
(bad)
mov
in
mov
ins
pop
add
das
jne
mov
xchg
shr
cmps
push
push
mov
(bad)
nop
lahf
and
daa
std
aaa
lods
add
ja
jae
out
iret
xchg
je
sahf
cmc
xlat
loope
int
dec
pop
div
pop
daa
adc
aas
inc
movs
mov
movs
xchg
xchg
in
loop
mov
and
push
rol
call
js
js
ror
jecxz
jno
xchg
mov
push
jecxz
dec
pop
add
inc
xor
cwde
mov
sar
cmp
ds
pop
dec
ins
test
jb
mov
popa
mov
ja
xor
xchg
cmp
dec
cmc
outs
les
add
add
add
ja
ret
mov
mov
push
push
out
je
out
repz
in
lods
adc
pop
adc
retf
clc
loop
dec
sbb
push
sub
adc
pusha
pop
mov
aaa
jo
cmp
enter
dec
xchg
dec
(bad)
sbb
mov
mov
push
out
ins
or
dec
arpl
(bad)
or
and
daa
shl
mov
in
stos
sub
push
mov
xor
mov
push
mov
xor
mov
stos
lahf
movs
(bad)
ds
inc
addr16
cmp
xor
cmps
mov
sbb
out
fsub
bound
pop
xchg
lahf
push
shr
fadd
and
and
push
push
and
sub
stos
ja
fidiv
dec
inc
inc
pop
sub
sub
sti
push
movs
jmp
int3
lea
fwait
add
jo
inc
push
loopne
or
adc
(bad)
inc
lods
push
xor
test
ins
xor
dec
pusha
retf
cmp
inc
mov
repnz
retf
lods
(bad)
cmp
scas
lods
repnz
xchg
or
xchg
je
xlat
jbe
add
pop
out
movsx
(bad)
adc
xchg
lods
in
xchg
mov
js
shl
sub
cmps
data16
cmp
xor
js
outs
fidivr
lea
ror
mov
lea
aas
ds
mov
push
(bad)
xchg
daa
add
push
sub
movs
xchg
jecxz
jae
(bad)
pop
xlat
dec
xchg
xchg
cmp
xor
aaa
lea
cmp
ins
xor
test
cdq
outs
jmp
aad
out
mov
add
push
push
sbb
in
jecxz
mov
(bad)
cmc
sub
ror
inc
inc
inc
(bad)
lock
jne
inc
xor
cs
jl
xchg
iret
xchg
cwde
in
cmc
ret
lods
out
xchg
int
xor
pop
gs
push
xor
xchg
mov
cmp
hlt
cmps
xlat
sub
add
jle
das
je
inc
daa
add
loopne
dec
or
xchg
(bad)
(bad)
mov
mov
repz
push
sub
push
popa
ret
test
in
or
xchg
mov
pop
(bad)
mov
mov
jae
jo
cli
xor
push
adc
arpl
cmps
mov
xchg
lds
sar
add
das
xor
andps
(bad)
jecxz
shl
mov
jl
lea
sar
dec
inc
xor
mov
mov
loop
(bad)
cmp
not
pop
xor
enter
push
push
andps
shl
bswap
xchg
dec
adc
cmp
jl
aad
popa
mov
add
sub
push
pop
movs
lahf
mov
rol
mov
cmp
xchg
frstor
add
scas
xor
inc
(bad)
gs
xchg
mov
div
inc
stos
aad
popa
movs
xor
aaa
in
pushf
adc
addr16
cmp
das
(bad)
out
test
or
mov
mov
jl
inc
(bad)
sbb
or
iret
cmp
inc
inc
inc
push
lods
and
ja
test
mov
and
aas
jmp
push
cmps
daa
std
sbb
jne
inc
mov
aam
outs
call
adc
enter
das
xor
fisttp
push
push
adc
xchg
test
mov
lds
cli
test
arpl
je
aaa
push
sahf
loope
mov
mov
mov
xor
out
fldenv
into
push
xchg
gs
inc
push
addr16
ja
ret
push
xchg
ins
mov
add
cmp
inc
popf
jns
inc
push
mul
dec
mov
xlat
sub
jbe
int
xor
fisub
in
mov
mov
pop
test
add
push
arpl
bndldx
out
push
bound
xchg
sbb
test
xchg
or
out
mul
cmps
dec
mov
fmul
jns
push
mov
mov
mov
rcr
fdivrp
movs
(bad)
out
or
cmp
nop
aam
adc
and
xchg
inc
enter
repz
addr16
mov
pop
test
popf
(bad)
or
xor
add
dec
mov
lods
jbe
repnz
(bad)
pop
sbb
xor
jle
or
test
cli
inc
jmp
addr16
jae
xchg
xor
cmc
xchg
mov
sub
pusha
cmp
cdq
adc
mov
ret
dec
cmp
pop
ret
repnz
or
sub
mov
dec
xor
ret
mov
(bad)
stos
bound
unpcklps
sub
pop
fs
jp
cmps
retf
scas
mov
jo
std
idiv
xchg
mov
test
imul
lds
(bad)
mul
test
mov
adc
call
mov
(bad)
in
mov
mov
jae
xchg
call
and
imul
jns
ror
xor
stos
jecxz
aaa
call
mov
enter
call
pop
push
mov
out
jg
jecxz
push
jo
lock
loopne
mov
(bad)
int
and
or
in
hlt
sub
shl
fcom
cmps
mov
xchg
xchg
fistp
jl
add
and
pop
sub
xor
sbb
dec
fwait
push
jb
add
adc
ret
mov
jle
cmp
pop
ret
arpl
push
jo
js
add
fsub
jns
push
sbb
mov
cmp
ds
dec
daa
sahf
retf
je
xor
hlt
pop
inc
dec
adc
pop
push
mov
xlat
movs
xchg
lds
cmps
pusha
pop
xor
mov
mov
ret
jnp
jns
test
dec
cmc
outs
les
dec
xor
push
pop
scas
adc
jmp
loopne
jae
jp
lds
lock
call
in
sbb
jno
inc
fimul
pop
sbb
cmp
xchg
bound
call
pusha
daa
and
dec
cs
push
in
hlt
sub
dec
in
in
lods
shl
push
mov
inc
data16
mov
fldcw
in
xchg
adc
in
add
retf
and
stos
xchg
sub
xchg
or
out
mov
add
clc
js
mov
dec
aaa
dec
mov
sti
(bad)
sub
adc
inc
push
push
(bad)
mov
lea
sahf
neg
aaa
mov
rol
(bad)
or
sbb
push
ins
outs
shl
(bad)
cmp
add
cld
loope
in
out
das
xor
mov
ins
pop
cmp
xor
mov
and
jmp
sbb
lahf
pop
lds
xor
imul
fs
push
jbe
out
push
sub
sbb
imul
jne
(bad)
adc
js
adc
push
lds
(bad)
pusha
xchg
push
or
dec
dec
jecxz
add
(bad)
js
jg
mul
adc
(bad)
aad
lods
add
ss
mul
add
sbb
xchg
and
leave
pop
aaa
inc
xchg
rcl
cmp
call
cmps
xchg
into
scas
add
add
lods
shl
add
les
int
push
jb
inc
inc
sbb
and
inc
fidiv
dec
in
add
add
inc
imul
iret
in
out
sti
push
pop
(bad)
push
aam
(bad)
mov
inc
pop
sar
sbb
js
cmp
jno
ror
dec
int3
or
daa
gs
mov
ja
or
jp
shl
les
pop
and
fcom
mov
or
test
fsub
repnz
cmc
mov
out
adc
mov
bound
add
inc
inc
cwde
test
enter
inc
popf
(bad)
sbb
int3
sub
daa
dec
xchg
call
data16
adc
nop
jecxz
rep
xchg
push
out
out
cmps
add
adc
push
retf
push
aam
pop
fdivr
(bad)
jp
xor
jnp
lds
and
xor
push
adc
add
test
cmp
in
push
imul
inc
add
adc
fcomp
mov
shl
dec
bound
adc
sbb
test
movs
mov
xchg
or
mov
add
cld
ins
mov
jne
lods
add
adc
jl
clc
retf
scas
pop
jb
push
inc
xchg
jbe
pop
dec
dec
cmps
ds
sub
adc
sbb
inc
fs
sahf
imul
mov
test
clc
rcr
call
movs
or
mov
push
mov
cdq
outs
and
jne
xor
add
mov
popa
pusha
xor
dec
sbb
add
inc
repz
push
inc
je
cmc
cmp
arpl
sbb
ds
sub
not
push
lock
jno
inc
and
jae
inc
mov
movs
outs
inc
std
xchg
cmps
xchg
mov
inc
(bad)
mov
out
loop
pop
and
(bad)
and
add
mov
(bad)
mov
out
pop
mov
lds
pop
mov
ins
(bad)
std
mov
adc
xchg
in
clc
mov
mov
mov
arpl
sar
ss
out
inc
pop
shl
ret
les
mul
dec
or
xchg
mov
xor
jae
xchg
lock
adc
jmp
fiadd
pop
cdq
dec
ins
xchg
mov
not
aaa
dec
or
or
outs
push
cld
push
or
sbb
aad
mov
das
lods
mov
dec
mov
daa
sbb
jnp
inc
ja
inc
pusha
inc
xchg
nop
sub
sub
sub
iret
popf
push
jge
adc
outs
cmps
mov
xor
pop
mov
xchg
cmc
pop
mov
sbb
fld
and
adc
aas
push
outs
mov
xchg
lock
cdq
je
(bad)
jge
inc
xchg
mov
and
sahf
add
cmp
out
push
cld
dec
inc
pop
sbb
xchg
pop
out
cmc
pop
cmp
ror
out
mov
aaa
in
les
bound
inc
sbb
mov
hlt
mov
jmp
mov
das
retf
mov
lock
fucomp
xchg
mov
test
xchg
aam
aad
xor
retf
jb
xor
or
gs
mov
mov
call
popa
or
add
push
sub
mov
dec
outs
shl
push
lods
cmc
mov
ins
aad
scas
mov
add
add
hlt
pop
dec
jmp
push
hlt
xor
xchg
(bad)
nop
neg
test
sti
(bad)
push
xchg
jae
add
adc
xchg
add
rol
(bad)
mul
xor
cmps
and
stos
jb
repz
aad
std
dec
in
lahf
mov
aaa
clc
rcl
dec
add
scas
and
popf
addr16
or
jg
jae
cmp
sahf
ret
daa
pop
test
(bad)
retf
ja
addr16
push
xor
adc
pop
sbb
in
ss
out
or
in
pop
and
push
mov
xchg
push
jp
xchg
fistp
xlat
push
mov
fadd
lods
jg
call
ja
js
xor
xchg
out
ds
maxps
inc
in
xor
mov
callw
ins
idiv
pop
or
and
ins
call
jo
sbb
add
lock
pop
into
pop
in
cmc
pop
sbb
mov
xor
mov
mov
mov
inc
cmps
ret
out
(bad)
or
push
call
dec
aaa
gs
stos
mov
fidiv
repnz
or
jo
cli
in
outs
gs
add
and
xchg
test
xchg
out
scas
or
mov
int
ins
fcom
call
inc
(bad)
adc
pop
inc
push
test
popf
sub
pop
mov
and
dec
jmp
addr16
int
jbe
fsub
mov
cmp
scas
and
bound
cmps
cmps
sub
inc
retf
push
out
out
dec
push
fs
xchg
mov
(bad)
int
lods
sbb
adc
add
test
ja
ret
inc
inc
int3
mov
pop
cmc
out
(bad)
pop
xor
jb
mov
push
jnp
pop
lock
jp
jbe
in
xor
in
mov
ins
pop
add
das
mov
xchg
shr
pop
push
push
mov
(bad)
nop
lahf
fcmovb
ror
daa
cmc
aaa
lods
add
ja
out
mov
ror
je
sahf
cmc
xlat
jns
int
dec
clc
div
pop
daa
adc
aas
mov
xchg
in
loop
dec
and
pusha
outs
retf
xor
enter
adc
adc
ror
ror
jl
iret
cmp
or
popf
ss
ret
xor
das
and
dec
mov
jnp
jp
int
mov
xchg
cwde
jg
inc
mov
or
xchg
aaa
and
sub
inc
fs
add
or
repnz
mul
or
sub
xor
in
sti
test
mov
sub
scas
pop
jp
popf
aas
inc
mul
push
cmp
fdivr
mov
in
in
jbe
and
adc
data16
jae
inc
pusha
(bad)
cmp
mov
cmp
(bad)
jg
xor
out
and
xchg
leave
mov
test
push
lods
sbb
out
add
mov
xor
call
mov
jbe
dec
inc
or
push
stos
sbb
pushf
and
pop
jno
out
scas
or
mov
and
data16
jbe
stos
push
cmp
xchg
cmp
daa
pop
cld
push
xor
mov
sahf
fs
in
pop
push
sbb
ins
or
mov
aas
add
inc
in
lds
jmp
out
shld
mov
sub
out
adc
jns
(bad)
(bad)
retf
int
out
stos
movs
int3
jbe
cmps
push
leave
mov
test
jg
pop
push
mov
test
es
fsubp
aad
push
cmp
xchg
cmp
je
pusha
mov
push
lods
sahf
sub
mov
in
dec
lock
pushf
push
sub
imul
je
inc
inc
shl
inc
sub
rcl
mov
popa
push
push
adc
push
inc
pusha
xchg
xor
push
fistp
jge
iret
sbb
scas
int
xor
pop
mov
outs
inc
and
add
lods
cmp
ins
pop
jl
or
add
cwde
jl
mov
inc
int
frstor
lods
xor
movs
or
dec
cmp
lds
fist
arpl
jae
add
cld
std
dec
mov
dec
mov
xor
(bad)
lock
mov
aad
and
je
mov
jmp
xchg
das
aaa
or
ja
sbb
loop
dec
in
loopne
dec
mov
mov
js
out
and
inc
xchg
and
ror
repz
xor
retf
loope
push
call
mov
mov
or
jecxz
mov
mov
cmp
imul
and
(bad)
(bad)
pop
dec
arpl
rcl
out
jmp
ins
mov
push
pop
das
pop
ret
inc
pop
add
xor
loopne
pop
mov
jmp
test
mov
movs
or
adc
std
(bad)
movs
fidivr
imul
fmulp
cld
mov
enter
mov
aad
adc
pop
add
inc
xor
in
xor
pop
mov
aad
sar
in
mov
mov
inc
mov
add
add
xor
xchg
shr
xor
mov
mov
sbb
loop
dec
ds
cli
ss
jb
push
jne
mov
test
add
xchg
mov
cmp
adc
data16
sahf
lds
jmp
aaa
adc
adc
cmps
push
xchg
pop
cmp
rcr
dec
add
fmulp
pop
fidivr
xchg
mov
or
xchg
out
xor
pop
ss
bound
mov
cmp
imul
pushf
enter
or
out
nop
repz
test
icebp
call
jne
xchg
mov
aad
adc
xchg
cmc
inc
shr
and
sub
imul
pop
xor
aad
adc
test
les
xchg
test
or
lahf
fs
jge
dec
pop
xchg
jbe
mov
loop
mov
cmps
movs
daa
loopne
and
into
jae
mov
push
dec
mov
pop
lock
jae
fucom
xchg
mov
lds
in
(bad)
adc
xor
stc
sbb
pop
sbb
xchg
xchg
gs
sbb
pop
popf
sbb
mov
or
arpl
outs
out
into
(bad)
xchg
mov
xor
cmp
jmp
or
and
aaa
loopne
dec
inc
dec
mov
push
shl
mov
sub
cmp
push
dec
inc
or
fst
mov
(bad)
shl
jg
pop
cmps
ss
lods
addr16
movs
js
imul
push
cli
mov
fs
jnp
fst
rcr
adc
cmp
ins
xor
test
bnd
xchg
xchg
fst
loop
mov
add
jl
adc
push
and
js
or
in
cmc
xchg
xchg
maxps
int3
xor
inc
and
daa
loope
in
xchg
ins
cmps
std
dec
pop
or
dec
xor
fst
std
daa
push
pusha
xor
(bad)
push
pop
pop
cmp
xchg
pop
pop
xor
cmp
pop
aad
jb
jno
pop
daa
std
aaa
or
jne
mov
imul
aad
and
out
enter
inc
inc
mov
movs
ret
rcr
mov
(bad)
popf
sub
adc
scas
adc
stc
aaa
popf
inc
xor
adc
outs
mov
daa
pop
push
mov
(bad)
(bad)
mov
out
mov
and
adc
loopne
mov
dec
stc
xchg
(bad)
(bad)
mov
out
push
xor
jae
inc
popf
outs
inc
(bad)
push
pop
pop
outs
icebp
xor
dec
scas
mov
(bad)
jge
sub
jbe
int
xor
fisub
in
mov
mov
cmps
jge
in
cmc
(bad)
cmp
xchg
push
and
daa
cdq
enter
push
lods
pop
push
jmp
rol
xor
cmp
xchg
(bad)
add
scas
xor
inc
(bad)
ins
ja
xchg
ins
jecxz
mov
push
dec
vcvtsi2sd
popa
movs
xor
aaa
pop
mov
mov
cmp
rcl
out
or
inc
xchg
pop
in
sbb
mov
lahf
xchg
xchg
pop
pop
jl
inc
(bad)
sbb
(bad)
(bad)
jno
add
inc
sbb
ja
mov
push
mov
out
neg
clc
fcom
daa
std
or
fidiv
mov
outs
mov
or
push
xlat
sub
push
retf
test
push
cmc
cwde
mov
scas
test
xchg
mov
lds
in
idiv
arpl
rol
sahf
loope
mov
mov
cmp
out
into
and
into
push
xchg
mov
push
inc
cmps
stos
mov
pop
dec
pushf
or
xchg
cmc
in
lods
in
push
cmp
push
icebp
arpl
inc
popf
(bad)
cmps
fsub
test
movs
ds
sbb
and
pop
jl
pop
mov
cmc
enter
fnsave
mov
fst
int3
and
stos
push
in
push
je
mov
sbb
jmp
add
or
pop
push
iret
xchg
aaa
fs
add
jmp
fcomp
faddp
cmps
push
(bad)
adc
add
inc
popf
add
sbb
and
xchg
sbb
push
xor
call
cmp
mov
rcr
int3
dec
or
in
or
adc
out
push
repz
popf
push
dec
(bad)
fmul
mov
cmps
and
fwait
aam
in
and
aaa
xor
and
clc
xchg
adc
mov
test
stc
push
and
pop
push
dec
ss
jne
adc
sub
test
call
mov
jge
(bad)
jle
not
or
pop
loopne
cmc
xchg
popa
mov
(bad)
out
dec
and
aaa
ss
movs
dec
jl
or
xchg
test
add
neg
test
popa
call
and
(bad)
push
loop
mov
xor
enter
push
mov
inc
mov
mov
outs
mov
out
cmps
lds
aam
cmp
sbb
inc
aaa
daa
test
xor
ret
ja
retf
mov
shl
outs
les
retf
dec
jge
fisttp
xor
cmps
ret
dec
loopne
mov
mov
pop
adc
fild
scas
add
std
iret
xchg
test
loopne
nop
pop
sub
xchg
push
inc
add
inc
and
mov
xchg
fst
ret
sub
ins
mov
dec
adc
ja
inc
cmp
repz
xchg
jp
push
call
nop
ds
aad
xor
aaa
and
cwde
inc
cld
cli
xchg
add
mov
xor
arpl
inc
daa
jmp
add
aad
test
mov
(bad)
mov
ret
or
mov
outs
xor
out
addr16
mov
shl
lds
retf
ss
lods
addr16
pop
or
pop
int3
mov
mov
(bad)
mov
sub
lock
sbb
(bad)
adc
cmps
mov
test
mov
(bad)
in
sub
jbe
int
xor
fisub
in
mov
ins
js
shl
cmps
jge
in
cmc
(bad)
cmp
xchg
push
and
daa
pop
enter
push
lods
pop
push
or
add
pop
fcmovnb
mov
imul
(bad)
add
scas
xor
inc
(bad)
xchg
push
or
inc
sub
popa
movs
xor
aaa
cdq
mov
mov
cmps
jp
rcl
out
or
inc
xchg
pop
in
sbb
mov
cwde
xchg
xchg
int
jl
inc
(bad)
sbb
dec
(bad)
jno
add
inc
pop
test
and
ja
mov
push
mov
out
div
daa
std
or
jne
mov
outs
mov
or
push
xlat
sub
xlat
retf
test
push
add
xchg
test
xchg
pop
sbb
mov
lds
jmp
call
lea
and
stos
sahf
loope
mov
mov
cmp
out
retf
and
into
push
xchg
gs
dec
push
xor
mov
xchg
ins
fwait
xchg
jae
dec
and
out
sub
daa
aaa
retf
iret
sar
gs
fisubr
add
sub
adc
xchg
or
xor
retf
xor
mov
dec
ficom
sar
ins
cmp
jb
pop
push
pusha
dec
arpl
mov
sahf
pop
and
test
mov
ror
or
ror
sub
or
rol
sti
hlt
sti
movs
push
jp
lea
inc
mov
pop
(bad)
cmps
in
jns
lods
mov
and
push
ss
cli
inc
jmp
test
mov
cld
out
movs
xor
jno
push
dec
push
leave
ficomp
pusha
inc
cdq
or
push
mov
jle
fwait
out
mul
jno
inc
push
adc
adc
cmp
adc
xlat
cmp
fdivr
and
js
jno
adc
adc
and
aam
xchg
shl
fistp
add
fcmovnb
sbb
pop
stc
adc
jae
xchg
push
or
xor
pop
xchg
out
or
pop
aam
lds
mov
mov
inc
pop
adc
push
in
jo
xchg
cmp
inc
cld
loopne
xor
lds
or
mov
push
dec
rcl
mov
jl
inc
mov
inc
retf
dec
lock
xor
pop
inc
cmp
mov
int3
sub
cmp
or
cwde
ss
pusha
stos
add
lock
or
mov
and
cmps
popa
dec
retf
stos
inc
mov
xchg
jmp
push
cmps
(bad)
pop
(bad)
das
mov
xchg
out
jp
jmp
xchg
(bad)
fadd
adc
jbe
and
mov
jp
sbb
aad
sbb
ficom
retf
jp
(bad)
out
push
or
data16
pop
(bad)
loop
push
or
dec
or
jle
sub
jb
leave
xor
pop
aaa
inc
mov
jl
or
shl
ja
ins
jo
inc
(bad)
xchg
cmps
(bad)
push
gs
in
adc
xchg
xchg
addr16
adc
xchg
jne
jns
pop
and
icebp
sahf
fdiv
fcom
bound
in
dec
push
in
mov
test
je
mul
push
inc
test
add
sar
out
das
push
mov
mov
repz
lahf
gs
mov
cwde
push
sbb
cwde
addr16
mov
imul
lds
xor
outs
je
mov
bnd
sub
dec
repnz
pop
mov
imul
mov
call
mov
pop
xchg
mov
lds
jmp
sbb
gs
sahf
cmp
stos
xor
cmp
shl
mov
jle
in
cmc
xor
clc
inc
pop
out
fcomp
aas
mov
push
fwait
pop
repnz
test
jle
retf
jl
les
out
push
in
imul
repz
inc
out
fiadd
pusha
dec
fnsave
pop
imul
mov
ss
and
mov
int
aad
scas
fild
add
dec
dec
fdiv
xchg
iret
jge
jge
or
push
mov
jae
adc
sbb
in
jne
out
cmps
(bad)
repz
mov
push
call
movs
mov
push
mov
ret
(bad)
mov
lods
call
sbb
addr16
arpl
les
mov
sbb
pop
movs
and
fadd
pusha
sbb
mov
xchg
dec
push
out
sub
adc
arpl
add
cwde
inc
mov
ret
or
mov
sti
mov
fcom
ficom
stos
data16
inc
rol
aad
arpl
pop
adc
call
je
mov
(bad)
(bad)
xchg
sub
sbb
push
in
xor
and
pop
push
daa
jmp
push
adc
pop
mov
pushf
ins
dec
outs
ret
mov
lds
sbb
std
push
push
hlt
gs
mov
jae
xchg
xchg
pop
pop
mov
inc
cmc
ror
xchg
pop
mov
push
mov
fistp
jg
sub
xor
add
jle
pop
mov
outs
sbb
jb
iret
push
mov
cmp
sub
lods
jmp
inc
pop
sub
enter
inc
add
stos
add
mov
or
cmc
pop
add
mov
ror
cli
arpl
and
sti
inc
inc
fnstsw
dec
xchg
push
sbb
mov
inc
in
test
repz
inc
je
aas
popa
dec
xor
cwde
pop
mov
or
adc
hlt
(bad)
cmp
dec
inc
gs
cmc
test
xor
ret
jp
dec
aas
xor
and
or
sub
pop
adc
les
call
arpl
inc
scas
jmp
and
loopne
dec
ror
mov
add
ficomp
pop
inc
(bad)
jmp
adc
xchg
fsubr
in
xlat
or
movs
mov
xor
mov
ja
pop
jbe
lgs
mov
repnz
repz
xor
daa
adc
mov
add
dec
fwait
test
test
push
call
inc
xor
clc
inc
or
mov
mov
mov
and
inc
repz
cli
pop
inc
cwde
fsub
inc
mov
and
xor
(bad)
push
xchg
call
jo
jo
dec
xor
add
or
add
xchg
jns
xchg
repnz
mov
xchg
cmp
mov
mov
clc
fisubr
js
cmp
movs
and
mov
jl
fmul
xchg
loope
jmp
cmp
shr
mov
push
mov
mov
aaa
dec
clc
and
or
inc
enter
sub
ficom
cmc
and
addr16
sub
and
clc
pop
inc
sub
sbb
mov
out
lock
mov
xchg
pop
jae
inc
std
push
xchg
jb
daa
dec
or
mov
sub
push
clc
and
(bad)
push
cmp
mov
xor
dec
cmps
push
cmc
fcomp
push
and
push
scas
and
out
inc
mov
(bad)
jae
dec
sub
jecxz
xchg
cmps
xchg
mov
add
xchg
xor
or
pushf
mov
push
sbb
out
dec
loop
pop
push
jne
dec
jo
sbb
outs
ficom
retf
stos
pop
in
in
int3
pop
xchg
sub
repz
mov
in
sbb
not
jb
(bad)
cli
iret
push
enter
ficom
jns
ret
test
dec
int
mov
sbb
leave
out
lods
or
dec
jne
inc
adc
xchg
dec
xor
rol
mov
lds
jae
push
data16
pop
adc
xchg
push
gs
in
test
adc
bound
test
mov
jp
mov
push
mov
loop
repnz
and
push
mov
push
aas
stos
xchg
xlat
mov
cmp
daa
sub
fidivr
xor
jb
push
fs
rsm
out
dec
das
movs
retf
lock
(bad)
lock
inc
neg
inc
in
jle
mov
and
inc
inc
rcl
cmp
fdivr
xchg
push
pop
loopne
push
sbb
movs
fimul
xor
mov
push
and
xchg
push
ret
push
shl
mov
mov
cli
gs
pop
pop
or
or
in
mov
std
fstp
sub
and
jo
pop
cmps
int3
xor
rsm
addr16
mov
mov
sbb
test
dec
push
xor
xor
adc
pop
inc
cwde
or
loop
stc
jns
mov
xchg
adc
cmp
push
cdq
and
or
xchg
fsubr
aad
sar
pop
in
inc
push
mov
sar
push
jae
xchg
ret
sub
dec
push
fiadd
mov
mov
mov
inc
addr16
hlt
sub
ds
and
scas
mov
and
pop
add
fdiv
rol
lods
add
adc
xchg
in
cmps
sub
lods
scas
ret
lock
xchg
nop
sbb
out
adc
pop
out
jno
xchg
adc
(bad)
mov
test
test
cmp
xchg
mov
jle
test
cdq
xchg
ror
mov
mov
push
repnz
pop
in
jbe
inc
sahf
ins
shl
sub
jl
test
sub
hlt
push
(bad)
or
call
pop
sbb
mov
push
ja
xchg
jae
or
sbb
out
jle
jmp
pushf
mov
enter
test
dec
push
add
rol
push
retf
push
outs
cmp
not
jb
bound
nop
enter
pop
lds
mov
or
ror
xchg
ss
lds
(bad)
xlat
add
adc
inc
and
push
mov
test
or
sub
lods
inc
xor
fbstp
call
adc
adc
rol
xchg
(bad)
cmc
call
leave
inc
mov
cs
call
and
mov
outs
mov
mov
ins
adc
cmps
inc
jno
in
lods
jmp
inc
xor
cmc
xor
xchg
jae
ins
popa
jl
mov
push
and
inc
push
aam
stos
out
call
jbe
js
adc
rcl
movs
cmp
out
test
inc
sahf
inc
arpl
cmp
and
fs
out
mov
mov
mov
xlat
and
adc
or
jg
jae
and
mov
pop
lds
sub
fiadd
(bad)
call
ss
cld
aas
inc
daa
push
mov
imul
and
stc
cwde
push
mov
add
adc
inc
cld
xchg
mov
adc
jp
imul
add
jge
fisttp
push
ja
inc
mov
pushf
pop
push
mov
les
aad
popa
mov
add
add
cld
mov
jnp
ins
cmps
push
mov
cmp
out
out
pop
jo
add
push
jno
sbb
icebp
sbb
out
out
hlt
sahf
cmc
xchg
push
out
loope
mov
adc
jns
movs
inc
(bad)
adc
and
cld
xchg
xchg
xchg
shl
cmp
shr
pop
and
xor
or
fs
repnz
dec
sbb
mov
xor
enter
pushf
pop
fs
enter
test
test
xchg
xchg
shl
xor
inc
cmp
aaa
jno
push
daa
int
and
fld
movs
pop
lock
jp
dec
out
in
or
or
fldcw
rcl
xchg
fwait
ds
ja
xchg
shr
pop
push
push
(bad)
lahf
fcmovb
jmp
add
ja
addr16
ror
je
sahf
cmc
xlat
int
int
dec
clc
test
daa
adc
aas
mov
xchg
in
loop
dec
es
lods
xlat
lds
out
outs
retf
jle
aaa
leave
inc
int
sub
xchg
fistp
add
mov
out
imul
lds
out
out
rsm
mov
fidiv
repnz
ss
and
in
outs
gs
stc
push
in
and
xchg
test
xchg
out
scas
or
mov
int
ins
fcom
aam
inc
jne
inc
(bad)
adc
pop
inc
push
into
test
popf
sub
add
inc
dec
jmp
addr16
int
jbe
fsub
mov
cmp
scas
and
bound
cmps
mov
push
out
out
dec
push
arpl
xchg
mov
(bad)
int
lods
sbb
adc
das
add
test
ja
ret
mov
cld
xlat
movs
push
faddp
and
ss
adc
ret
jns
push
adc
sub
test
jmp
xchg
inc
pop
fimul
xchg
mov
sub
(bad)
pop
add
pop
mov
jmp
retf
xor
fwait
pop
js
jnp
bnd
adc
sbb
mov
push
xlat
adc
jl
adc
not
dec
rol
sub
div
jecxz
push
xchg
inc
aaa
gs
fldenv
inc
cwde
push
(bad)
cli
ror
in
icebp
xchg
dec
mov
pop
popa
cli
imul
inc
aaa
push
mov
sar
loope
pop
(bad)
mov
adc
inc
ret
gs
stos
movs
es
pop
pop
xor
jns
mov
out
push
push
daa
dec
(bad)
sbb
push
dec
addr16
sub
in
sbb
cmp
mov
mov
mov
mov
rcr
pop
lock
adc
push
and
sahf
(bad)
push
adc
je
sbb
mov
push
inc
cmps
xchg
out
push
and
in
pusha
(bad)
aad
out
jle
xchg
into
movs
adc
mov
cmps
mov
xlat
shr
fcomp
inc
push
out
fcomp
pop
lods
jmp
retf
cmps
xchg
pop
test
mov
loope
mul
push
push
daa
adc
stos
mov
xchg
ja
icebp
pop
xchg
cmp
dec
push
sub
in
div
cmp
push
aaa
mov
cwde
movs
mov
fstp
in
mov
icebp
xlat
(bad)
or
pop
xor
enter
push
dec
adc
bound
out
out
sub
dec
mov
test
jo
std
mov
adc
mov
sbb
imul
or
xchg
call
repz
mov
mov
fcomp
out
inc
cmps
loope
aaa
or
mov
pushf
or
into
test
test
ret
xchg
xor
and
out
call
loop
into
dec
out
movs
pop
into
jmp
cmp
mov
(bad)
xchg
xlat
and
retf
enter
inc
add
push
outs
push
mov
or
jno
(bad)
jecxz
jae
add
push
mov
sbb
fidiv
arpl
mov
dec
push
addr16
mov
or
jne
jp
xchg
mov
shl
sub
aad
and
jl
ss
inc
gs
aam
pop
nop
mov
cmp
xor
addr16
push
iret
lahf
pop
gs
stos
jb
aas
dec
xlat
daa
mov
mov
sub
cmp
inc
add
inc
sbb
xor
dec
les
lods
cmc
sub
add
and
shl
mov
xchg
jp
xchg
hlt
es
xlat
lds
xor
aam
(bad)
push
fidiv
(bad)
cmp
out
dec
xchg
test
push
inc
(bad)
mov
push
fs
mov
push
xor
cdq
call
stos
cld
lds
hlt
es
xlat
lods
sbb
icebp
clc
fs
mov
push
hlt
gs
adc
(bad)
cmps
dec
inc
xor
ror
je
sahf
cmc
xlat
leave
out
mov
stc
test
daa
adc
aas
mov
xchg
xchg
in
loop
dec
sbb
pusha
outs
retf
aam
jle
aaa
in
int
sub
xchg
fistp
add
mov
out
imul
clc
dec
aaa
gs
out
bts
cmps
int
lea
ss
pushf
out
out
and
in
outs
gs
cmp
and
xchg
test
or
mov
int
ins
(bad)
(bad)
cmp
jne
inc
(bad)
adc
pop
inc
push
into
test
popf
sub
add
xor
hlt
xchg
jne
movs
addr16
int
jbe
fsub
mov
cmp
scas
and
bound
cmps
movs
sub
inc
mov
out
out
dec
push
popa
(bad)
xchg
mov
(bad)
int
lods
sbb
adc
rol
test
ja
ret
inc
inc
int3
mov
aaa
cmc
out
(bad)
sub
pop
xor
jb
mov
push
mov
jnp
jae
in
inc
xlat
in
mov
ins
pop
add
das
mov
xchg
shr
pop
push
ret
in
xlat
dec
mov
xor
pusha
gs
mov
sahf
test
or
add
(bad)
call
xchg
(bad)
xor
jg
lods
mov
mov
push
test
gs
mov
js
dec
mov
leave
call
and
push
cld
cmp
dec
leave
test
jns
mov
mov
daa
int
jo
pop
mov
(bad)
push
add
mov
inc
jae
enter
and
out
imul
push
in
gs
pop
or
rol
mov
cmp
or
or
mov
mov
mov
mov
ret
mov
sar
add
jbe
cmc
add
sahf
shl
(bad)
sub
loop
out
mov
lods
mov
add
mov
stos
pop
gs
ds
mov
mov
lods
loop
hlt
repnz
xor
cmp
push
clc
test
loop
mov
out
mov
jg
xor
xchg
cmp
sar
out
es
packuswb
dec
bound
data16
dec
xchg
jns
xchg
mov
sti
sbb
pop
jbe
fcom
add
inc
lods
aam
out
push
mov
inc
std
sbb
and
cmp
inc
js
fcmove
cwde
sbb
inc
inc
xchg
fmulp
int
mov
inc
int
mov
cmp
in
outs
aad
and
es
dec
inc
inc
ds
test
pop
push
jnp
retf
mov
mov
dec
sbb
movs
pop
js
in
sub
jbe
jno
inc
xchg
push
es
shr
shl
lahf
cmp
jle
mov
adc
jge
gs
cmp
xchg
test
popf
mov
dec
pop
xor
aaa
cmp
jne
inc
cwde
adc
out
mov
or
pop
movs
lds
cs
dec
xor
fst
inc
lods
push
pop
and
stos
into
mov
pop
ror
loop
mov
or
dec
and
dec
jmp
cdq
sub
or
or
ins
sar
push
pop
pop
dec
daa
mov
jno
mov
sub
push
in
xchg
xlat
or
scas
cmps
ss
sub
lods
add
mov
mov
(bad)
mov
ret
or
mov
outs
xor
xchg
addr16
shl
sbb
jle
lds
ins
push
test
ret
or
xor
xor
cmps
jmp
xor
shr
push
add
inc
mov
cmp
mov
loopne
fsub
gs
popf
xlat
and
mov
adc
add
xchg
test
xchg
div
repnz
test
ins
and
push
mov
addr16
push
inc
add
xor
dec
xchg
pop
jp
cmp
popf
xlat
and
movs
int
pop
pop
(bad)
rol
(bad)
fwait
(bad)
fs
test
xchg
(bad)
mov
or
int
int3
inc
xchg
pop
in
outs
adc
mov
in
xchg
dec
pop
jl
inc
(bad)
sbb
out
out
jno
add
inc
cmp
dec
iret
mov
test
push
mov
out
test
xor
movs
outs
repz
inc
cmps
fisttp
adc
mov
retf
test
push
mov
xchg
test
xchg
cs
lds
popf
mul
pop
mov
in
arpl
xchg
inc
arpl
jg
cmps
push
mov
cmp
out
mov
cli
into
push
xchg
gs
cmp
mov
xchg
ins
out
xchg
je
xchg
or
add
xchg
fdivr
jae
inc
popf
pop
inc
movs
push
scas
pop
outs
icebp
xor
dec
fdiv
sub
jbe
int
xor
fisub
in
mov
in
pop
shl
cmps
jge
in
cmc
ja
push
xchg
push
and
daa
in
enter
push
lods
and
movs
mov
xchg
pop
mov
sbb
xchg
fst
cwde
adc
hlt
inc
(bad)
adc
xchg
mov
cmp
pop
aad
jnp
ret
xor
mov
push
scas
inc
dec
movs
xlat
jne
icebp
cmps
xchg
dec
sbb
jl
lds
call
add
mov
fdiv
mov
push
(bad)
mov
cmp
jo
fldenv
in
call
stos
pop
fdivr
scas
xchg
inc
mov
ins
fs
add
mov
jne
mov
js
xchg
nop
(bad)
popa
arpl
cmp
mul
pop
xor
enter
aam
addr16
pushf
mov
popa
shl
outs
daa
mov
xchg
mov
mov
mov
mov
inc
movs
push
shl
mov
mov
mov
pop
sti
inc
adc
fs
ja
jno
xchg
mov
retf
xchg
sbb
jp
inc
mov
xor
bound
xchg
xchg
rol
push
fs
in
lds
pop
mul
xchg
cli
out
pop
enter
test
ja
ja
shl
dec
sbb
aad
and
fsubr
ja
xchg
adc
inc
dec
cmp
fdiv
cmp
sbb
pushf
add
push
mov
popa
inc
jne
shl
xchg
mov
xor
mov
das
adc
mov
mov
repnz
not
cmp
push
cli
jne
sbb
cmp
test
mov
adc
and
fiadd
xor
daa
(bad)
retf
cmovbe
test
(bad)
(bad)
mov
cmp
xor
cmp
cmc
dec
mov
adc
xlat
mov
mov
iret
add
and
je
mov
mov
xchg
mov
mov
push
aad
push
test
push
mov
push
aaa
and
push
mov
add
shr
fisubr
cmp
loop
das
test
push
aam
xchg
loope
mov
inc
movs
movs
ret
add
(bad)
loopne
lds
and
or
add
mov
push
mov
in
lods
xchg
out
add
mov
jg
in
clc
mov
mov
push
(bad)
aas
cli
add
sub
sbb
aad
and
daa
jmp
adc
xchg
mov
cdq
sbb
mov
pop
lds
adc
inc
jae
push
jne
test
movs
cld
int3
and
hlt
es
xlat
clc
mov
scas
push
pop
xchg
push
dec
(bad)
adc
sahf
or
push
mov
inc
cmps
ret
out
(bad)
or
push
retf
test
push
jmp
inc
sbb
(bad)
movs
ret
shr
mov
(bad)
or
lds
retf
sahf
adc
out
stos
hlt
je
jbe
lods
jecxz
out
dec
lahf
xlat
cmp
xor
loope
inc
xchg
je
pusha
xchg
jl
adc
test
mov
add
rol
imul
xchg
jno
(bad)
push
adc
(bad)
stos
and
cmps
icebp
dec
cmc
gs
shl
dec
inc
ss
mov
not
xchg
mov
adc
mov
push
(bad)
fcom
aaa
inc
mov
inc
mov
inc
icebp
jle
dec
pop
fucom
cmp
repnz
repz
addr16
loopne
dec
adc
dec
push
add
xchg
aas
aad
scas
test
shl
call
cli
les
test
popf
sub
cmp
inc
dec
jmp
mov
addr16
int
jbe
fsub
mov
cmp
scas
and
bound
cmps
cwde
sub
inc
or
loopne
dec
push
pop
(bad)
xchg
mov
(bad)
int
lods
sbb
sub
imul
stos
push
inc
addr16
ja
ret
inc
inc
int3
mov
(bad)
cmc
out
(bad)
sub
daa
int
or
addr16
pop
movs
pop
lock
jnp
je
in
dec
xlat
in
mov
ins
pop
add
das
mov
xchg
shr
pop
push
push
mov
(bad)
nop
lahf
fcmovnb
xlat
dec
add
add
ja
pop
mov
ror
je
sahf
cmc
xlat
or
stc
div
pop
daa
adc
aas
mov
xchg
in
loop
dec
and
pusha
outs
retf
aam
jle
aaa
mov
adc
xchg
fistp
add
mov
out
imul
ror
jne
add
stos
mov
fidiv
repnz
xor
jo
sti
in
outs
gs
rcl
and
xchg
test
ret
fisttp
out
(bad)
push
adc
mov
rol
push
sub
mov
xchg
in
sbb
pusha
lea
or
jb
pop
mov
inc
cwde
push
lods
data16
push
test
jmp
mul
es
mov
adc
xlat
mov
shl
retf
ret
in
cmp
lds
push
add
ret
fisubr
add
xlat
in
add
cmc
aad
repnz
test
adc
mov
test
cwde
push
lahf
sahf
cmp
adc
ds
loop
mov
daa
push
daa
xor
in
popa
xchg
jmp
dec
aaa
add
popf
gs
jmp
addr16
adc
iret
xchg
mov
(bad)
or
inc
cmp
pop
push
stos
push
mov
mov
stos
mov
ret
jno
xchg
ret
xor
lds
mov
jo
fisttp
loopne
jg
mov
inc
ja
js
retf
xchg
cmp
mov
xchg
int
popa
mov
int3
out
jae
xchg
in
inc
lods
scas
shl
mov
pop
test
xchg
mov
mov
cmc
cld
lods
jecxz
pop
cli
ja
mov
cdq
adc
push
sbb
fwait
outs
aam
cmp
imul
mov
push
or
jae
test
repz
imul
cmp
push
push
inc
jns
inc
and
sbb
test
sbb
push
mov
and
add
retf
clc
push
add
inc
mov
pop
sbb
sbb
mov
adc
pusha
adc
fdiv
cmc
js
sbb
data16
in
js
dec
repnz
mov
in
lods
xchg
add
jbe
popf
pop
dec
add
sub
xchg
cmps
lock
or
push
fld
mov
fadd
ja
xchg
xchg
jp
shl
sub
mov
pop
adc
adc
cmp
jge
xor
adc
gs
div
clc
fucomp
add
jmp
out
cmp
xchg
test
imul
adc
xchg
pop
fld
fsubr
retf
ret
sbb
sbb
ja
xchg
ds
cmp
mov
pop
cmc
pop
adc
mov
xor
mov
mov
mov
inc
cmps
ret
dec
loopne
or
mov
aaa
cmp
xchg
push
add
add
cmc
pop
sub
add
cmp
sub
jne
push
jecxz
repnz
(bad)
lods
(bad)
mov
nop
xor
push
dec
call
cmp
adc
loopne
mov
xchg
sahf
xchg
repnz
mov
repz
fst
lds
sahf
jae
add
push
sbb
push
ja
inc
mov
stc
pop
push
mov
les
aad
clc
pop
js
inc
out
push
inc
bts
imul
rcr
out
out
je
jmp
pop
gs
data16
jne
into
leave
stos
sub
xchg
in
loop
dec
sbb
pusha
outs
retf
aam
jle
aaa
inc
inc
int
sub
xchg
fistp
add
mov
out
imul
clc
dec
aaa
sbb
add
stos
mov
fidiv
repnz
or
jo
sti
in
outs
gs
xchg
push
in
and
xchg
test
or
pop
int
ins
(bad)
xlat
cmp
jne
inc
(bad)
adc
pop
inc
push
into
test
popf
sub
push
mov
and
dec
jmp
xchg
jne
xchg
addr16
int
jbe
fsub
mov
cmp
scas
and
bound
cmps
movs
sub
inc
fist
loopne
dec
push
data16
xchg
mov
(bad)
int
lods
sbb
adc
pop
xor
pop
fwait
test
ja
ret
inc
inc
int3
mov
mov
sub
pop
xor
jb
mov
push
jg
pop
lock
jnp
jo
in
push
xlat
in
mov
ins
pop
add
das
mov
xchg
shr
pop
push
push
mov
(bad)
nop
lahf
fcmovnb
ror
daa
jge
lods
add
ja
retf
mov
ror
ds
or
push
neg
jecxz
push
jo
cwde
aaa
add
clc
call
or
test
dec
pop
mov
mov
pop
inc
(bad)
pop
in
jge
mov
sbb
(bad)
popf
xchg
lods
out
aaa
and
movs
pop
inc
pop
dec
(bad)
xchg
mov
ret
ds
mov
(bad)
repnz
loope
fyl2x
sub
jno
enter
jnp
cwde
fidiv
inc
jbe
loope
std
ins
sbb
cmp
push
fidiv
adc
push
xchg
mov
sbb
jo
loop
rcl
cmp
retf
daa
jge
imul
jae
rcr
in
xchg
cmp
pop
xor
aaa
call
pop
mov
mov
dec
shr
sbb
xlat
sub
clc
xor
sti
inc
adc
ins
mov
int3
mov
jbe
shl
mov
mov
vsqrtps
and
movs
xor
imul
in
jle
cmp
retf
jb
pushf
push
and
jae
inc
sub
add
movs
jle
punpckhdq
aam
and
adc
bound
cmps
pop
iret
dec
xchg
iret
or
aad
les
aad
and
dec
ss
jp
daa
cmp
and
movs
retf
dec
imul
pop
not
call
adc
or
out
jnp
pop
mov
(bad)
or
xor
std
xor
ret
push
mov
gs
inc
call
xlat
fmul
loop
xor
sbb
jl
and
push
adc
push
and
mov
xor
xor
jecxz
(bad)
sub
add
pop
mov
push
es
clc
stos
mov
mov
push
mov
out
or
retf
leave
call
and
jo
ins
inc
movs
daa
ror
cli
hlt
out
sub
push
push
not
test
ficomp
(bad)
movs
cmp
pop
cmps
or
std
sub
pop
mul
in
sti
stos
lds
call
fwait
call
mov
pop
test
sbb
mov
cmp
fisub
retf
fdivr
call
fwait
call
dec
gs
hlt
out
(bad)
sub
sub
add
push
pushf
pop
xchg
sub
mov
test
test
test
(bad)
fstp
imul
mov
pusha
mov
(bad)
jp
imul
cmp
cmp
or
adc
mov
xor
std
mov
inc
inc
call
xlat
fcomp
or
(bad)
mov
in
ficom
and
enter
(bad)
mov
daa
cmp
push
daa
cwde
jp
jmp
gs
cmp
xchg
sbb
sub
mov
or
sbb
out
and
stc
fst
and
(bad)
cli
pop
xchg
gs
dec
pushf
xchg
cmp
pop
aad
aaa
out
stc
pop
mov
push
es
jne
inc
stos
sbb
movs
ret
movs
inc
cmps
test
or
cwde
aaa
inc
mov
adc
mov
xchg
repz
pop
shr
and
dec
or
das
mov
push
adc
cmp
das
dec
sub
clc
(bad)
je
test
mov
mov
push
hlt
out
sub
neg
push
and
test
jle
out
cmps
cmc
mov
ds
dec
and
cmc
daa
jmp
mov
inc
test
nop
and
out
pop
loope
dec
push
mov
int
mov
sub
push
sub
sbb
or
cli
enter
fld
dec
popa
push
mov
aad
dec
push
or
cmc
sub
ret
in
clc
(bad)
call
cwde
mov
movs
jle
dec
inc
inc
jno
add
ja
ja
inc
test
push
sub
mov
xchg
mov
rol
addr16
mov
retf
fdiv
and
fdiv
ja
push
or
adc
adc
mov
retf
not
lea
push
dec
outs
dec
jae
jae
cli
test
js
lds
sub
mov
mov
cwde
fsub
push
dec
fimul
pop
push
sub
in
aam
mov
fsubr
retf
pop
cli
fcom
cwde
push
mov
test
pop
push
hlt
cmp
sub
sbb
mov
xchg
call
call
mov
xchg
dec
pop
jp
imul
cmp
sub
aad
fimul
jmp
cwde
jo
movs
popa
imul
jl
in
or
cdq
sub
popa
cli
fsubr
add
addr16
xchg
retf
enter
xor
idiv
sub
jno
clc
ss
pop
mov
sti
leave
pop
test
dec
mov
fwait
sbb
fist
xor
ror
test
scas
stos
cli
ins
mov
push
push
aaa
sub
in
and
pop
and
popa
jae
jae
inc
lea
xchg
rcl
sub
push
push
div
(bad)
call
mov
sub
cmp
js
jl
test
cmc
sub
sbb
das
push
ret
pop
scas
call
jbe
ret
pop
jae
pop
push
sub
imul
mov
cmp
dec
and
(bad)
push
mov
sbb
ins
scas
sub
sbb
(bad)
and
pop
(bad)
out
hlt
movs
or
ja
mov
pop
xchg
mov
mov
(bad)
shl
sti
cwde
dec
cdq
pop
mov
jne
aam
adc
cmp
out
bswap
pop
or
or
pop
dec
jmp
xor
and
cmp
out
out
call
je
test
mov
nop
ror
jl
push
cmp
ds
stos
pop
mul
fadd
dec
stos
adc
mov
jecxz
call
gs
imul
dec
cmc
xchg
aam
lock
stos
adc
fiadd
inc
mov
xchg
ja
xor
pop
mov
aam
xor
pop
mov
push
lods
bound
xor
jne
sbb
sbb
mov
mov
xlat
adc
and
push
inc
and
cmp
and
int3
outs
retf
ss
mov
inc
sahf
push
retf
adc
push
mov
jb
les
in
retf
pop
es
or
addr16
ins
popf
dec
in
or
int
aad
ins
clc
and
cmc
mov
popf
test
ja
dec
dec
clc
sbb
dec
in
dec
imul
jp
clc
js
or
popf
enter
sbb
neg
jge
jp
push
test
cmc
repnz
jp
and
pop
and
adc
test
inc
adc
rcr
sbb
mov
xor
mov
and
inc
and
test
test
cmp
repnz
lock
fcom
jb
stos
inc
mov
jns
push
je
(bad)
or
sbb
pop
and
adc
test
inc
adc
or
xor
or
ss
jmp
jp
jl
test
cmc
xchg
sub
aad
add
xor
enter
push
pusha
cdq
push
push
pop
xchg
cli
hlt
cmp
and
jno
mov
or
push
add
icebp
xchg
push
or
std
sub
push
and
pushf
add
inc
(bad)
push
mov
push
xchg
cmps
gs
neg
xchg
rcr
popa
stc
inc
mov
test
daa
jne
mov
in
adc
div
adc
adc
fiadd
xchg
cmp
push
fidivr
(bad)
sbb
cmp
in
inc
jmp
ss
jge
xor
pop
test
mov
xor
mov
into
push
gs
mov
push
and
daa
cwde
xor
(bad)
cli
aaa
jmp
and
mov
js
xchg
test
jl
xor
stos
ins
or
xor
es
cmp
mov
retf
xchg
ja
push
jge
in
jne
nop
jae
mov
call
mov
data16
dec
pop
cmc
pop
test
and
fiadd
fucomp
sub
mov
xor
outs
lds
outs
xchg
outs
test
and
jl
jge
aaa
je
mov
mov
nop
push
hlt
cs
cmp
add
push
aad
sahf
cmp
mov
xchg
adc
test
or
and
call
mov
std
cwde
inc
sahf
inc
retf
xchg
ja
dec
sub
test
call
and
adc
push
xor
dec
sbb
sbb
mov
or
in
mov
xor
call
xchg
js
xchg
mov
xchg
or
ds
aad
(bad)
test
fdivr
jae
scas
not
out
ja
retf
lea
xchg
repz
pop
shr
inc
stos
pop
not
into
sar
xor
ret
sub
push
xor
jge
in
jne
xor
clc
fsubr
jl
add
test
test
xchg
in
mov
ds
xor
pop
shr
mov
mov
jmp
cmp
mov
fcomp
sbb
or
test
and
cmc
pop
fxch
loopne
mov
mov
xchg
jns
inc
xchg
sbb
ins
or
clc
add
sbb
sub
cmps
pop
or
cmp
cmp
rcr
js
push
in
mov
jae
xchg
push
adc
js
xchg
push
jmp
mov
mov
out
ror
cli
fcom
mov
pop
dec
popa
fimul
cmps
mov
mov
mov
mov
les
push
jmp
mov
test
mov
cwde
inc
sahf
jno
mov
jns
push
je
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xor
loope
icebp
rol
jecxz
repz
xor
add
adc
popa
inc
jno
inc
addr16
jae
xor
loope
icebp
rol
jecxz
repz
xor
add
adc
popa
inc
jno
inc
arpl
mov
mov
icebp
rol
jecxz
repz
xor
add
adc
popa
inc
jne
inc
arpl
mov
mov
icebp
rol
jecxz
repz
xor
add
adc
gs
jno
je
push
ja
xchg
mov
(bad)
cmc
xlat
test
jbe
inc
adc
cmps
call
vmovq
(bad)
cmc
xlat
(bad)
repnz
and
sbb
xor
dec
push
bound
xor
retf
fdivr
hlt
ror
(bad)
rcl
jnp
cmps
int3
jmp
mov
mov
mov
jbe
inc
fs
je
add
adc
and
xor
(bad)
icebp
aam
in
repz
test
mov
pop
xor
aaa
mov
jne
push
and
ja
xchg
dec
in
or
and
xor
enter
push
add
ja
js
xchg
test
xchg
repz
or
and
jno
add
inc
mov
adc
xchg
mov
(bad)
mov
lds
aad
and
daa
adc
push
add
ja
js
rol
(bad)
cmc
sub
mov
jno
add
inc
xor
and
loope
mov
test
xchg
mov
(bad)
mov
lds
retf
daa
adc
push
mov
ret
mov
test
cmc
xchg
lds
jno
add
inc
mov
adc
xchg
repz
cmc
xlat
(bad)
mov
pop
xor
aaa
gs
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
lds
push
inc
fs
je
add
push
inc
addr16
xor
xchg
mov
(bad)
cmc
xchg
xchg
push
inc
fs
je
add
adc
and
xor
xchg
mov
(bad)
mov
xchg
pop
add
inc
jne
push
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
pop
xor
je
add
adc
and
xor
(bad)
not
cmps
test
mov
inc
jbe
inc
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
mov
xchg
push
add
add
adc
and
xor
(bad)
not
test
mov
xchg
push
add
add
push
inc
addr16
xor
les
hlt
cmps
(bad)
cmc
xlat
lds
pop
add
add
adc
addr16
ja
xchg
mov
(bad)
mov
xchg
push
inc
fs
je
add
adc
and
xor
xchg
mov
(bad)
mov
(bad)
mul
xor
je
inc
jne
push
and
xor
(bad)
not
(bad)
in
mov
(bad)
mov
xchg
push
inc
fs
adc
addr16
xor
(bad)
not
(bad)
in
mov
xor
inc
xor
je
add
adc
and
ja
xchg
mov
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
pop
xor
je
add
adc
addr16
ja
(bad)
not
(bad)
cmps
xchg
mov
test
mul
daa
push
aaa
gs
jne
push
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mul
jbe
inc
fs
aaa
gs
xor
inc
addr16
ja
les
hlt
in
cmc
xlat
lds
pop
add
pop
jne
inc
addr16
xor
(bad)
not
mov
out
mov
pop
jbe
add
add
ja
les
mov
xchg
mul
daa
adc
pop
add
mov
shl
xlat
xchg
push
inc
fs
push
inc
addr16
xor
xchg
mov
test
xlat
(bad)
mov
inc
jbe
inc
fs
adc
and
xor
les
hlt
cmps
test
xlat
(bad)
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
pop
xor
je
inc
jne
push
and
xor
xchg
mov
(bad)
mov
(bad)
mov
pop
xor
aaa
gs
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
lds
pop
add
add
push
inc
addr16
xor
xchg
mov
(bad)
cmc
xchg
xchg
push
inc
fs
push
inc
addr16
xor
xchg
hlt
in
cmc
xlat
xchg
aad
and
daa
adc
push
inc
and
xor
xchg
mov
test
xlat
(bad)
mul
daa
adc
push
inc
addr16
xor
xchg
mov
(bad)
mov
xchg
push
add
add
adc
and
xor
(bad)
not
(bad)
in
mov
(bad)
cmc
xchg
(bad)
mul
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
inc
jne
push
and
xor
(bad)
not
(bad)
in
hlt
in
cmc
xlat
xchg
push
inc
fs
je
add
adc
addr16
ja
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
aaa
gs
jne
push
and
xor
(bad)
not
(bad)
in
mov
(bad)
cmc
xchg
xchg
push
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mul
jbe
add
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
in
cmc
xlat
xchg
push
inc
fs
je
add
push
inc
addr16
ja
xchg
mov
(bad)
mov
xchg
pop
add
add
adc
and
xor
xchg
hlt
cmps
test
mov
pop
xor
je
add
push
inc
addr16
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
add
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
xor
je
inc
jne
push
and
ja
xchg
mov
test
mul
xor
je
add
push
inc
addr16
xor
xchg
hlt
cmps
test
mov
inc
jbe
add
inc
jne
inc
and
xor
xchg
mov
(bad)
mov
(bad)
mul
xor
aaa
gs
jne
push
and
xor
(bad)
not
(bad)
jecxz
mov
xor
and
xor
aaa
gs
jne
inc
addr16
ja
xchg
mov
(bad)
cmc
xchg
(bad)
mul
jbe
inc
fs
je
inc
jne
push
and
ja
xchg
mov
(bad)
mov
(bad)
mov
inc
jbe
add
inc
jne
inc
and
ja
xchg
aam
in
mov
(bad)
cmc
xchg
(bad)
mul
jbe
add
inc
jne
push
addr16
ja
les
hlt
in
cmc
xlat
xchg
pop
add
inc
jne
push
and
xor
les
mov
(bad)
cmc
xchg
(bad)
mul
jbe
add
add
adc
(bad)
icebp
xchg
test
cmc
xlat
(bad)
mov
pop
xor
aaa
gs
ss
inc
addr16
xor
xchg
hlt
cmps
(bad)
cmc
xlat
lds
pop
add
inc
jne
push
and
ja
xchg
mov
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
les
hlt
cmps
test
xlat
(bad)
mov
inc
xor
jbe
inc
jne
push
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
pop
xor
aaa
gs
adc
and
xor
(bad)
not
cmps
(bad)
cmc
xlat
lds
pop
inc
fs
aaa
gs
jne
inc
addr16
ja
xchg
hlt
cmps
test
mul
xor
je
inc
jne
inc
and
xor
(bad)
not
(bad)
in
hlt
in
cmc
xlat
xchg
pop
add
add
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
lds
pop
add
inc
jne
push
addr16
ja
les
hlt
cmps
or
lds
xor
je
add
adc
and
xor
(bad)
not
(bad)
cmps
xchg
mov
test
xlat
(bad)
mov
pop
xor
aaa
add
add
ja
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
aaa
gs
jne
inc
addr16
ja
(bad)
not
(bad)
in
hlt
cmps
test
mul
xor
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
xor
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mul
daa
adc
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mul
daa
adc
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mul
daa
adc
adc
and
ja
xchg
mov
test
mov
inc
jbe
inc
fs
aaa
gs
xor
out
mov
test
xchg
mov
(bad)
mov
(bad)
mov
inc
jbe
inc
fs
je
inc
jne
push
and
xor
(bad)
not
(bad)
in
mov
(bad)
cmc
xchg
xchg
aad
and
daa
adc
push
inc
and
ja
xchg
hlt
in
cmc
xlat
xchg
aad
and
daa
adc
adc
addr16
ja
les
mov
(bad)
cmc
xchg
(bad)
mul
jbe
add
add
adc
addr16
ja
les
mov
(bad)
cmc
xchg
(bad)
mul
xor
je
inc
jne
push
and
xor
(bad)
not
cmps
test
xlat
(bad)
mov
pop
xor
je
inc
jne
push
and
xor
les
hlt
in
cmc
xlat
xchg
push
add
add
push
inc
addr16
ja
xchg
mov
test
xlat
(bad)
mov
pop
xor
aaa
gs
ss
inc
addr16
xor
xchg
mov
(bad)
cmc
xchg
xchg
aad
and
daa
adc
push
push
addr16
ja
(bad)
not
(bad)
in
hlt
cmps
test
mul
fs
aaa
gs
jne
push
addr16
ja
(bad)
not
cmps
(bad)
cmc
xlat
lds
push
inc
fs
aaa
gs
jne
push
and
ja
xchg
aam
in
hlt
cmps
test
xlat
(bad)
mov
inc
jbe
inc
fs
je
add
adc
addr16
ja
les
mov
(bad)
cmc
xchg
xchg
push
add
add
adc
and
ja
xchg
aam
in
hlt
cmps
(bad)
cmc
xlat
lds
push
inc
fs
aaa
gs
jne
inc
addr16
ja
les
hlt
cmps
test
mov
inc
jbe
add
inc
jne
push
addr16
ja
les
hlt
in
cmc
xlat
xchg
aad
and
daa
adc
push
add
adc
loope
icebp
rol
jecxz
repz
out
mul
xor
jae
add
push
inc
addr16
xor
cmps
xchg
mov
xor
popa
inc
xor
jae
add
inc
adc
loope
icebp
rol
jecxz
repz
out
mul
daa
adc
adc
addr16
ja
ret
mov
test
cmc
xlat
and
adc
adc
addr16
ja
ret
mov
test
cmc
xchg
(bad)
mul
xor
aaa
gs
jne
add
adc
loope
mov
test
xchg
mov
(bad)
mov
(bad)
mov
inc
jno
inc
arpl
gs
jne
add
adc
loope
icebp
rol
jecxz
mov
(bad)
cmc
xchg
and
adc
push
inc
and
movs
xchg
xchg
test
cmc
xlat
lds
xor
aaa
and
xor
add
push
ja
xchg
xchg
test
cmc
xlat
and
adc
adc
and
xor
ret
icebp
rol
jecxz
repz
mov
xor
aaa
gs
xor
add
adc
loope
mov
test
cmc
xchg
(bad)
mul
xor
jae
add
inc
adc
loope
icebp
xchg
test
cmc
xlat
and
adc
push
inc
and
xor
ret
icebp
rol
jecxz
repz
mov
xor
aaa
gs
xor
addr16
xor
jecxz
mov
(bad)
mov
sbb
mul
jno
add
adc
push
inc
addr16
jae
xor
loope
cmc
rol
jecxz
mul
and
xor
jno
inc
arpl
mov
mov
icebp
rol
jecxz
repz
xor
add
adc
popa
inc
jno
inc
arpl
mov
mov
icebp
rol
jecxz
repz
xor
add
adc
popa
inc
jno
inc
arpl
mov
mov
icebp
xlat
shl
repz
xor
add
adc
popa
inc
jno
inc
arpl
mov
mov
cmc
ror
dec
jp
push
daa
addr16
sub
jne
and
push
sbb
lds
xchg
pushf
pushf
dec
inc
push
jle
popa
push
inc
sbb
or
push
(bad)
jmp
fmul
test
mov
jle
add
adc
cmp
int3
hlt
(bad)
fldz
stc
fiadd
mov
gs
push
jnp
or
and
shr
(bad)
mov
xchg
mov
mov
inc
xchg
push
pop
pop
xor
xor
inc
push
adc
into
repnz
in
cmps
ret
sbb
nop
push
pop
bound
dec
popa
xor
add
repnz
in
scas
nop
mov
mov
jge
test
and
cmp
xor
sbb
repz
sar
leave
(bad)
frstor
xchg
mov
dec
xor
mov
sub
adc
sbb
shl
in
xchg
jecxz
nop
mov
mov
push
push
pop
pop
popa
jb
pop
push
sub
aaa
xchg
xchg
(bad)
loop
out
xchg
mov
mov
mov
inc
jno
pop
push
pop
pop
pop
adc
adc
enter
mov
mov
push
add
sbb
push
(bad)
out
(bad)
(bad)
loope
shl
in
xchg
gs
pop
pop
cmp
adc
sbb
and
xor
(bad)
out
sar
shl
call
xchg
xchg
pop
inc
add
pop
inc
jl
or
sbb
pop
pop
push
lock
mov
aam
loope
mov
xchg
mov
adc
inc
je
and
pop
and
ret
xlat
out
(bad)
or
mov
dec
or
inc
data16
jne
jae
cmp
aam
(bad)
not
xchg
mov
test
dec
and
cmc
cmc
shl
aam
movs
imul
and
daa
pop
pusha
dec
jo
xor
add
loope
shl
mov
(bad)
mov
inc
xor
inc
adc
repnz
pop
sbb
sahf
cmc
mov
cwde
out
test
mov
inc
outs
push
jnp
gs
or
pop
and
in
(bad)
(bad)
loop
out
xchg
movs
xchg
lahf
xor
inc
gs
inc
pop
xor
adc
cmc
test
mov
add
jnp
inc
inc
aaa
or
adc
ss
ss
in
shl
test
mov
push
add
sbb
or
pop
and
call
mov
mov
inc
imul
addr16
inc
xor
xor
push
ret
xlat
out
cmp
xchg
jecxz
mov
imul
adc
inc
push
popa
adc
push
(bad)
repz
loope
loopne
xchg
jecxz
mov
and
push
push
push
push
push
xor
add
aad
icebp
aam
mov
and
inc
push
and
add
in
xchg
mov
test
xchg
mov
inc
or
jno
addr16
add
add
inc
add
(bad)
out
sar
ret
fbld
test
push
inc
pop
dec
jae
add
add
mov
cld
ror
adc
pusha
adc
push
push
cmp
call
cli
out
xchg
mov
jp
dec
ins
push
and
xor
cmps
sbb
hlt
jmp
mov
mov
jp
inc
inc
cmp
jne
sbb
cmp
ret
(bad)
(bad)
lds
out
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
(bad)
cmc
xlat
(bad)
mul
cmps
xchg
mov
inc
jne
inc
addr16
ja
pop
xor
aaa
in
cmc
xlat
(bad)
mul
cmps
xchg
mov
inc
jne
inc
addr16
ja
pop
xor
aaa
in
cmc
xlat
(bad)
mul
cmps
xchg
mov
inc
jne
inc
addr16
ja
pop
xor
aaa
in
cmc
xlat
(bad)
mul
cmps
xchg
mov
inc
jne
inc
addr16
ja
pop
xor
aaa
in
cmc
xlat
(bad)
mul
cmps
xchg
mov
inc
jne
inc
addr16
ja
pop
xor
aaa
in
cmc
xlat
(bad)
mul
cmps
xchg
mov
inc
jne
inc
addr16
ja
pop
xor
aaa
in
cmc
xlat
(bad)
mul
cmps
xchg
mov
inc
jne
inc
addr16
ja
pop
xor
aaa
in
cmc
xlat
(bad)
mul
cmps
xchg
mov
inc
jne
inc
addr16
ja
pop
xor
aaa
in
cmc
xlat
(bad)
mul
cmps
xchg
mov
inc
jne
inc
addr16
ja
push
xor
add
adc
in
hlt
(bad)
(bad)
out
mul
xchg
mov
inc
je
inc
push
jbe
push
xor
add
adc
in
hlt
(bad)
(bad)
out
mul
xchg
mov
inc
je
inc
push
jbe
push
xor
add
adc
in
hlt
(bad)
(bad)
out
mul
xchg
mov
inc
je
inc
push
jbe
push
xor
add
adc
in
hlt
(bad)
(bad)
out
mul
xchg
mov
inc
je
inc
push
jbe
push
xor
add
adc
in
hlt
(bad)
(bad)
out
mul
xchg
mov
inc
je
inc
push
jbe
push
xor
add
adc
in
hlt
(bad)
(bad)
out
mul
xchg
mov
inc
je
inc
push
jbe
push
xor
add
adc
in
hlt
(bad)
(bad)
out
mul
xchg
mov
inc
je
inc
push
jbe
push
xor
add
adc
in
hlt
(bad)
(bad)
out
mul
xchg
mov
inc
je
inc
push
jbe
push
xor
add
adc
in
hlt
(bad)
(bad)
out
mul
xchg
mov
inc
je
inc
gs
jne
add
pop
xor
(bad)
in
cmc
cmps
test
mov
inc
ja
inc
gs
jne
add
pop
xor
(bad)
in
cmc
cmps
test
mov
inc
ja
inc
gs
jne
add
pop
xor
(bad)
in
cmc
cmps
test
mov
inc
ja
inc
gs
jne
add
pop
xor
(bad)
in
cmc
cmps
test
mov
inc
ja
inc
gs
jne
add
pop
xor
(bad)
in
cmc
cmps
test
mov
inc
ja
inc
gs
jne
add
pop
xor
(bad)
in
cmc
cmps
test
mov
inc
ja
inc
gs
jne
add
pop
xor
(bad)
in
cmc
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
cmps
test
mov
inc
jbe
inc
fs
je
add
adc
and
xor
(bad)
not
(bad)
in
hlt
in
fcmovnbe
mov
dec
jbe
inc
adc
(bad)
cli
ficom
ja
test
adc
inc
add
mov
xchg
push
and
jae
loope
mov
jmp
inc
xchg
stos
mov
ret
in
addr16
test
in
dec
push
push
es
pop
jp
sbb
nop
and
mov
and
push
sbb
jne
adc
(bad)
movs
mov
and
add
(bad)
xchg
mov
ffreep
je
cld
push
call
mov
mov
or
call
or
add
ret
xor
(bad)
not
sbb
out
(bad)
mov
test
test
push
lods
in
xor
sbb
sbb
push
inc
shl
cmp
push
and
cmp
lds
add
aam
jbe
dec
rcl
stc
rol
leave
in
(bad)
mov
jg
in
mov
sub
(bad)
push
xor
dec
pop
or
pop
fs
jbe
push
or
les
lds
and
shl
loop
and
push
cmc
sub
jnp
jg
arpl
jb
or
adc
out
in
ret
in
jmp
mov
mov
js
dec
dec
inc
sbb
and
xor
xchg
retf
cmc
mov
mov
test
addr16
add
add
add
xchg
repz
icebp
(bad)
in
lahf
mov
inc
pop
dec
pop
ja
jae
and
sbb
xchg
stc
in
cmps
test
xchg
out
popf
inc
jns
imul
adc
xor
xor
int3
sti
fcom
in
xchg
mov
test
jbe
dec
adc
xor
push
push
add
cmc
retf
clc
test
xchg
mov
push
push
pop
jbe
jg
adc
jne
xor
push
pop
int3
jmp
mov
cwde
mov
push
jnp
jg
daa
js
or
pop
xor
add
add
idiv
xchg
std
jmp
mov
(bad)
mov
inc
ja
pop
je
jg
adc
jne
xor
out
lds
call
push
xor
push
gs
jne
inc
or
and
(bad)
movs
xchg
xchg
mov
jle
daa
jp
or
add
sub
push
add
div
mov
(bad)
movs
xlat
lds
pop
inc
and
addr16
cmp
and
fcmovnb
loop
in
out
mov
xchg
cmps
test
dec
adc
cmp
push
add
out
(bad)
xchg
in
xchg
mul
push
aaa
popa
push
jns
gs
and
(bad)
stos
cmps
xchg
aam
xchg
cmc
add
inc
imul
sbb
ss
cmc
(bad)
jmp
mov
mov
xchg
mov
add
jae
pop
push
xor
cmp
xor
sbb
jmp
out
mov
movs
stos
dec
jne
push
inc
jnp
push
add
add
addr16
ja
jmp
xchg
aam
mov
xlat
call
xor
and
sub
cmp
or
shl
aam
mov
out
mov
sar
push
adc
cmp
add
fsub
cmc
leave
loope
test
mov
gs
pop
jo
add
sbb
xor
push
int3
repz
movs
ret
lds
aad
and
daa
adc
push
and
and
enter
test
fimul
xchg
cmc
xchg
inc
daa
adc
inc
adc
add
adc
sar
rcl
out
mul
daa
adc
and
and
xchg
fld
mov
cmc
xlat
add
inc
sbb
inc
adc
inc
adc
movs
cmps
fnstenv
xchg
out
xlat
cmps
xchg
aad
push
sub
dec
cmp
es
sbb
retf
loope
xor
fld
push
adc
sub
retf
cmc
mov
in
scas
ret
xchg
mov
add
ja
inc
cmp
push
inc
push
and
es
out
mov
in
loope
mov
mov
push
pusha
inc
je
pop
aaa
sbb
sub
xor
loop
mov
lds
aad
dec
dec
dec
arpl
jl
or
jne
and
cld
icebp
cmps
hlt
jmp
movs
xchg
(bad)
fldenv
or
pop
dec
ja
cmp
inc
push
push
int3
loop
repz
shl
mov
out
mov
dec
daa
dec
xor
ds
sbb
add
movs
aad
aam
cmc
xchg
fnstenv
adc
add
inc
inc
push
sub
daa
push
fadd
xchg
mov
mov
xor
push
pop
outs
push
popa
aaa
push
and
ds
xor
fucomip
ftst
jmp
xlat
test
pop
push
addr16
daa
jbe
gs
pop
sub
sbb
out
(bad)
call
cmps
lea
push
outs
pop
jb
daa
addr16
sub
sbb
xor
sub
loop
retf
call
xchg
test
mov
fs
addr16
add
add
push
add
adc
xchg
mov
mov
mov
inc
imul
push
inc
pop
xor
adc
int3
hlt
xchg
rep
cmps
cmps
ficom
aad
xlat
inc
pop
inc
pop
fs
addr16
add
xor
gs
out
fcomi
loope
cli
ret
mov
lods
mov
pop
push
jle
bound
xor
add
out
rcr
in
vpinsrw
aad
add
push
xor
xor
push
push
adc
shl
xchg
xchg
out
mov
dec
daa
pop
fs
js
adc
and
push
push
sbb
out
fninit
in
cld
lahf
xor
jbe
pop
addr16
dec
jnp
add
push
add
xor
popf
repnz
mov
mov
cmps
sahf
dec
push
je
pop
sbb
and
daa
push
retf
repnz
in
cmps
lock
mov
jno
jl
add
and
cmps
ret
movs
movs
cmps
icebp
xchg
in
aad
test
inc
jb
push
daa
pop
adc
xor
xor
loopne
mov
movs
cmps
icebp
xchg
xchg
xchg
fwait
mov
adc
dec
popw
or
inc
push
and
adc
xchg
(bad)
aad
in
out
inc
daa
inc
and
adc
xor
cmp
shl
movs
in
rcl
xlat
mov
jne
and
adc
push
xor
call
(bad)
repnz
mov
test
push
add
inc
adc
ss
add
xchg
xlat
loope
rol
mov
push
adc
cmp
xor
xlat
jmp
stc
faddp
in
cmc
xlat
test
push
jns
or
cmp
sbb
cmp
xchg
fsubr
clc
div
scas
stos
mov
js
inc
inc
aaa
adc
sbb
ss
movs
out
xchg
test
cld
mov
mov
mov
dec
jle
addr16
jns
pop
sbb
inc
addr16
shr
mov
mov
out
mov
add
sbb
sub
ja
jmp
loop
and
cmps
movs
mov
pop
jae
addr16
pop
and
sub
push
ja
mov
xchg
xchg
mov
xchg
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
mov
mov
(bad)
cmc
xlat
(bad)
out
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
out
mul
xor
aaa
gs
jne
inc
addr16
jbe
xchg
in
cmc
(bad)
(bad)
mul
daa
adc
push
inc
push
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
test
and
movs
xchg
aaa
gs
cld
xchg
or
cmp
and
push
das
add
pop
or
add
xchg
lods
jmp
imul
inc
sub
push
mov
shl
test
cmps
popf
sbb
and
daa
push
push
dec
and
neg
int3
ret
in
ret
mov
xchg
jp
pop
in
push
and
and
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
inc
mov
gs
jne
inc
hlt
cwde
cwde
cs
fidiv
pusha
inc
sbb
nop
mov
xor
int3
sub
push
int3
add
clc
iret
fimul
shl
les
xchg
sahf
sub
icebp
xchg
lea
rcl
mov
xchg
dec
adc
jnp
pop
je
push
cmp
xchg
je
push
retf
sub
or
cwde
stos
es
dec
ja
ja
in
cmp
xchg
fcmovnb
dec
xchg
fmul
add
pusha
js
vandnpd
es
sbb
inc
in
out
push
loopne
add
push
aad
jnp
test
lods
cmp
inc
push
pop
push
addr16
push
lods
pop
stc
sahf
inc
jne
lahf
xor
(bad)
imul
out
outs
mov
pop
and
fld
test
addr16
ja
js
ins
jnp
push
in
cmc
xlat
(bad)
mul
daa
jmp
push
js
js
pop
shr
cld
shl
mov
mul
push
arpl
inc
ja
mov
rcl
test
xlat
lds
xchg
and
dec
adc
push
inc
push
push
inc
mov
aad
mov
retf
ja
vxorps
and
push
js
gs
leave
push
and
ja
add
aam
test
mov
xchg
imul
inc
inc
push
add
hlt
fprem
jecxz
sti
xchg
xchg
(bad)
cmc
push
lds
mov
add
dec
mul
push
push
ja
xchg
xchg
test
sti
mov
aad
scas
pop
inc
addr16
adc
push
inc
ins
push
pop
shl
xchg
test
out
xlat
mov
cmc
xchg
dec
sub
push
or
add
andnps
xchg
xchg
mov
pushf
cmc
mov
and
pop
jp
gs
xor
pop
add
call
popf
xor
movs
nop
sti
mul
push
pop
gs
push
push
push
addr16
jns
in
xchg
xchg
pop
loopne
lds
mov
jb
daa
pop
aaa
gs
push
push
sub
ja
xchg
lock
(bad)
cmc
fadd
aad
movs
or
gs
jp
aaa
inc
and
test
sahf
in
nop
mov
and
sub
pop
mov
adc
in
movs
xlat
mov
xor
aaa
gs
in
and
cmp
(bad)
and
pop
xlat
mov
xor
push
or
mov
add
ja
xor
div
mov
shl
(bad)
cmc
mov
imul
inc
adc
adc
sub
in
test
aad
(bad)
mov
inc
ja
inc
jge
push
inc
fs
je
and
sub
jo
mov
adc
into
in
fmul
cwde
retf
or
sbb
(bad)
outs
imul
cmc
js
addr16
mov
push
not
out
adc
retf
adc
push
pop
mov
popa
dec
cwde
xor
push
movs
pop
mov
test
call
jo
cmp
adc
and
and
shl
rcl
dec
rcl
aad
and
daa
cmp
test
inc
jne
test
mov
lds
mov
inc
bound
pusha
inc
jo
push
or
out
push
jbe
xchg
xchg
rcl
aam
and
xor
add
adc
fs
inc
jo
aad
nop
mov
dec
mov
shl
repnz
ret
sti
clc
sbb
sbb
sub
ins
dec
jl
xor
mov
int3
out
movs
repnz
into
cld
fimul
retf
leave
cmp
dec
outs
and
pop
(bad)
cs
push
iret
in
movs
bnd
sub
call
dec
imul
push
stos
jbe
int3
mov
(bad)
jmp
call
dec
push
jp
xor
push
retf
push
aad
(bad)
retf
fdivr
add
ja
addr16
pop
bound
test
cmc
mov
icebp
shl
ret
cmc
xor
xor
push
jae
jnp
push
arpl
fmul
jp
mov
sti
repnz
rcl
retf
in
add
inc
jnp
pop
ins
dec
popf
js
ds
lods
(bad)
(bad)
int
(bad)
fucomp
int
clc
jo
(bad)
fsubr
or
jns
imul
pop
ror
sti
fldpi
leave
sar
sub
fmul
pop
jns
popa
jp
push
jne
mov
(bad)
retf
cmps
xchg
mov
clc
or
fcom
push
xor
push
and
xor
js
or
cmps
test
mov
clc
retf
not
and
xor
and
xor
test
mov
scas
popf
mov
dec
outs
pop
jg
ucomiss
es
in
into
cld
fmulp
out
fdivr
lods
mov
xchg
inc
fs
je
inc
jbe
push
ret
xor
adc
add
xor
and
push
push
jne
jne
jecxz
adc
add
xor
and
push
or
ja
xchg
mov
(bad)
cmc
xchg
(bad)
cmc
pop
adc
pop
adc
fmul
call
and
daa
jne
addr16
push
jne
gs
cmps
test
shl
ret
nop
mov
loop
push
sub
or
pop
ins
dec
sub
cmp
mov
repz
sti
fsubr
retf
sub
and
imul
sub
push
xchg
retf
out
(bad)
jmp
sub
cmp
dec
add
jl
dec
jle
mov
fwait
mov
movs
inc
jne
inc
addr16
ja
scas
cmc
xchg
test
jp
dec
push
mov
cmps
jmp
clc
sub
cmp
or
dec
daa
jne
gs
push
ja
addr16
movs
xchg
(bad)
in
aam
(bad)
out
push
and
adc
add
push
jne
gs
cmps
test
aad
(bad)
(bad)
in
adc
add
push
inc
push
jne
gs
cmps
test
aam
stc
clc
(bad)
int3
xor
add
xor
and
push
adc
xor
cmps
test
fucomip
xchg
popf
mov
sub
cs
ins
adc
adc
pushf
mov
in
sahf
cmps
scas
ret
and
sbb
ucomiss
sbb
shl
mov
in
call
and
sbb
or
jnp
imul
aas
gs
imul
test
mov
mov
or
cmp
sub
imul
pop
and
ret
mov
fldpi
xchg
sbb
or
cmp
adc
cmp
xchg
mov
test
test
push
pop
xor
inc
gs
add
fcmovu
xchg
mov
test
test
dec
push
xor
add
adc
push
add
fisubr
mov
cmp
sbb
pop
dec
outs
pop
jge
dec
jp
sub
(bad)
in
iret
std
fisttp
(bad)
push
dec
outs
pop
jle
dec
jl
mov
movs
popf
iret
in
(bad)
out
int
fisttp
sub
push
sbb
ins
pop
jl
dec
jle
mov
fwait
leave
jmp
sti
jmp
sub
cmp
or
dec
imul
dec
jns
mov
jmp
retf
or
sbb
inc
pop
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
cmp
test
mov
cmp
or
sbb
push
jp
dec
push
retf
test
cli
fmul
jmp
cmp
or
sbb
imul
push
mov
mov
retf
clc
sub
js
or
add
inc
push
ja
addr16
movs
xchg
xlat
out
mov
test
xor
ss
inc
push
ja
data16
movs
lods
xchg
mov
cmps
hlt
(bad)
in
aam
(bad)
out
push
and
adc
add
je
gs
push
jne
gs
cmps
test
aad
(bad)
(bad)
in
adc
pop
and
push
jne
gs
cmps
test
aad
rcl
(bad)
in
adc
add
xor
and
push
inc
push
je
fs
cmps
adc
hlt
(bad)
in
adc
add
xor
and
push
je
fs
cmps
test
aad
(bad)
(bad)
in
adc
add
xor
and
push
fs
adc
into
test
xchg
mov
movs
not
out
(bad)
hlt
(bad)
in
adc
inc
gs
adc
inc
gs
cmps
adc
out
xchg
mov
mov
adc
add
jo
pusha
dec
pop
jg
outs
mov
lock
in
mov
dec
out
cmp
sub
sbb
or
jge
pusha
aaa
and
out
neg
mov
in
int
dec
out
cmp
and
or
js
pop
xor
mov
mov
jecxz
movs
test
out
cmp
push
jne
xor
cs
ins
dec
pop
jle
outs
mov
ror
mov
push
sub
sbb
or
jl
arpl
sub
popf
(bad)
in
mov
scas
cld
fsubrp
int3
(bad)
iret
in
aas
sbb
comiss
sbb
sub
ins
mov
mov
in
cmps
stos
xchg
retf
pop
pop
js
cmp
sub
imul
dec
push
cdq
scas
in
xlat
std
fisttp
cli
enter
sub
sbb
or
jnp
outs
and
adc
add
lock
in
movs
mov
call
jmp
jae
bound
xor
js
jp
imul
(bad)
lods
mov
jns
or
cmp
sub
imul
dec
push
cli
fcom
repnz
mov
retf
sbb
xor
inc
gs
push
movs
test
cmc
out
not
pop
and
xor
fs
je
test
mov
(bad)
out
stos
mov
jnp
push
inc
gs
jb
inc
ja
xchg
mov
sar
aad
and
aaa
adc
cmp
outs
inc
sti
clc
retf
test
repnz
not
push
and
imul
dec
sbb
or
addr16
jbe
xchg
xchg
(bad)
in
stos
mov
jns
arpl
add
adc
fs
jle
dec
jge
lea
jmp
call
fisttp
add
adc
push
sub
sbb
or
clc
loop
mov
out
(bad)
in
iret
repnz
adc
add
push
jo
inc
jb
and
lahf
int
(bad)
loop
repnz
and
pop
dec
outs
pop
jge
dec
jge
lea
mov
(bad)
in
iret
std
fisttp
push
cmp
dec
outs
pop
jle
dec
jl
mov
mov
cld
out
int
fisttp
sub
aas
sbb
outs
dec
jg
(bad)
lods
lahf
scas
scas
lea
cld
out
int3
(bad)
fmul
sub
cmp
or
sbb
ins
pop
sbb
jle
mov
pushf
into
in
fdivrp
out
int3
(bad)
fmul
sub
jle
or
sbb
imul
dec
jns
mov
mov
stos
out
int3
(bad)
fmul
sub
cmp
or
sbb
pop
jl
dec
jle
mov
fwait
leave
jmp
sti
jmp
sub
cmp
or
sbb
adc
aaa
push
jns
mov
mov
cli
call
inc
dec
push
dec
push
jnp
dec
js
mov
mov
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
inc
aad
(bad)
int3
aad
test
mov
retf
clc
sub
cmp
or
sbb
push
jp
cmp
or
stc
stc
fwait
mov
cli
fmul
call
cmp
or
sbb
push
jp
dec
jno
or
cmc
mov
mov
retf
clc
sub
cmp
or
sbb
push
jp
dec
imul
xchg
mov
cmps
cmc
xlat
in
aad
(bad)
pop
and
daa
jne
gs
push
ja
adc
lahf
movs
xchg
xlat
in
aad
(bad)
pop
and
daa
jne
gs
push
ja
dec
retf
xchg
xlat
in
aad
(bad)
pop
and
daa
jne
gs
push
ja
popa
call
test
aam
(bad)
out
push
and
adc
add
je
fs
push
jbe
jp
xchg
movs
xchg
in
aam
(bad)
out
push
and
adc
add
je
fs
push
jbe
js
xchg
cmps
test
aad
(bad)
(bad)
in
adc
pop
and
push
jne
gs
mov
movs
not
out
xlat
cmc
(bad)
in
adc
pop
and
push
jne
gs
cmps
test
aad
(bad)
(bad)
in
adc
pop
and
push
jne
gs
cmps
test
aam
(bad)
(bad)
hlt
(bad)
in
adc
add
xor
and
push
inc
push
je
fs
cmps
test
aam
(bad)
(bad)
hlt
(bad)
in
adc
add
xor
and
push
inc
push
je
fs
cmps
test
aam
(bad)
aam
(bad)
out
push
and
push
xor
and
push
inc
push
je
fs
cmps
test
aam
icebp
jecxz
repz
and
add
xor
and
push
inc
push
je
fs
cmps
test
aam
test
push
arpl
push
and
push
inc
push
je
fs
cmps
test
aam
test
push
addr16
data16
and
push
inc
push
je
fs
cmps
test
aam
test
push
addr16
push
jl
and
push
je
fs
mov
mov
xchg
mov
mov
push
jae
and
bound
jo
pusha
mov
mov
fmul
jle
ins
dec
pop
jg
adc
pop
jle
outs
mov
mov
fmul
inc
fs
ja
js
or
dec
pop
jle
outs
mov
mov
fdiv
add
jno
addr16
je
jl
ins
dec
pop
jle
outs
mov
mov
(bad)
xor
and
inc
ja
jae
ins
dec
pop
jle
outs
mov
mov
(bad)
cmp
and
inc
ja
jne
ins
dec
pop
jle
outs
mov
mov
(bad)
push
sub
inc
jbe
imul
outs
mov
mov
fstp
cmp
sub
ins
dec
jge
push
ins
dec
pop
jle
outs
mov
mov
fstp
push
sub
ins
dec
jge
jne
ins
dec
pop
jle
outs
mov
mov
fstp
cmp
sub
inc
jae
outs
dec
pop
jge
ins
mov
mov
fstp
xor
push
gs
jns
imul
dec
imul
(bad)
movs
mov
movs
mov
jne
gs
pop
imul
dec
imul
(bad)
mov
push
jno
fs
ins
adc
imul
dec
imul
(bad)
mov
push
jno
pusha
jb
ja
jnp
imul
dec
imul
(bad)
mov
push
jo
pusha
jo
push
sub
imul
dec
imul
(bad)
lods
mov
jl
ins
jno
or
jnp
imul
dec
imul
(bad)
test
cwde
stos
test
dec
push
jnp
imul
dec
imul
fisubr
sbb
dec
push
jp
push
pop
js
push
cmps
test
test
cwde
mov
push
inc
gs
jne
inc
ja
xchg
mov
(bad)
in
test
cwde
mov
push
inc
gs
jne
inc
ja
and
les
pop
and
data16
push
jne
inc
ja
and
xchg
(bad)
in
test
cwde
mov
push
inc
gs
jne
inc
ja
and
xchg
(bad)
in
test
cwde
mov
push
inc
gs
jne
inc
ja
and
(bad)
in
test
cwde
mov
push
inc
fs
je
inc
jbe
and
(bad)
in
test
cwde
lods
mov
jp
arpl
inc
fs
je
inc
jbe
and
(bad)
in
test
cwde
stos
mov
dec
push
inc
fs
je
inc
jbe
and
(bad)
in
test
cwde
stos
mov
dec
push
inc
fs
je
inc
jbe
mov
mov
ret
test
cwde
stos
mov
dec
push
inc
pusha
push
jo
inc
jb
(bad)
scas
popf
mov
int
(bad)
test
cwde
stos
mov
dec
push
dec
outs
pop
jg
dec
jge
(bad)
scas
popf
mov
int
ret
test
cwde
stos
mov
dec
push
dec
outs
pop
jg
dec
jge
(bad)
scas
popf
mov
int
fucomip
sti
fldpi
leave
sbb
add
sbb
cmp
jg
dec
jge
(bad)
scas
popf
mov
int
shl
in
hlt
(bad)
add
adc
sub
outs
pop
jg
dec
jge
(bad)
scas
popf
mov
int
(bad)
in
iret
std
fisttp
(bad)
pop
dec
outs
pop
jg
dec
jge
mov
mov
(bad)
in
into
cld
fimul
sbb
sub
cmp
dec
outs
pop
jle
dec
jl
mov
mov
(bad)
in
into
cld
fimul
sbb
sub
cmp
dec
outs
pop
jle
dec
jl
mov
mov
std
out
int
fisttp
sub
aas
sbb
outs
dec
jg
mov
mov
std
out
int
fisttp
sub
aas
sbb
outs
dec
jg
out
sahf
mov
into
in
fdivrp
out
int3
(bad)
fmul
sub
cmp
or
sbb
ins
pop
jl
dec
jle
repnz
sahf
mov
into
in
fdivrp
out
int3
(bad)
fmul
sub
cmp
or
sbb
ins
pop
jl
dec
jle
iret
lods
cdq
mov
leave
jmp
sti
jmp
sub
cmp
or
sbb
pop
jnp
dec
jns
shr
fwait
leave
jmp
sti
jmp
sub
cmp
or
sbb
pop
jnp
dec
jns
fidivr
mov
sti
jmp
sub
cmp
or
sbb
pop
jnp
dec
jle
fcmovu
lahf
mov
leave
jmp
sti
jmp
sub
cmp
or
sbb
pop
jnp
dec
jl
(bad)
(bad)
mov
enter
call
sub
cmp
or
sbb
pop
jp
dec
sbb
(bad)
fisub
jmp
or
sbb
sub
cmp
dec
push
jnp
and
retf
mov
cli
call
sub
cmp
or
sbb
pop
jns
adc
or
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
mul
daa
adc
push
inc
addr16
ja
xchg
mov
(bad)
cmc
xlat
(bad)
div
mov
inc
pop
add
add
adc
jecxz
stc
loopne
icebp
ficom
test
mov
cmp
inc
push
jnp
and
mov
lock
cmps
xchg
push
arpl
sub
dec
inc
and
cmp
dec
and
mov
(bad)
out
dec
cmp
pusha
adc
pop
xor
addr16
xchg
mov
mov
mov
mov
sub
sub
cmps
adc
test
fucom
aaa
out
call
mov
jmp
mov
jp
mov
cld
xchg
xor
ficom
cmc
inc
or
adc
jne
push
sbb
or
xchg
pop
jo
cmc
in
dec
daa
cmc
or
mov
xchg
mov
add
out
mov
jbe
pop
pop
jl
push
jle
outs
std
sbb
les
xchg
mov
cmps
je
fdivr
icebp
ja
xor
test
cwde
inc
daa
in
mov
sub
ss
cmp
cmps
fs
push
and
xor
enter
nop
imul
or
or
cld
repz
or
pop
cmp
add
or
inc
addr16
xchg
es
and
sbb
xchg
enter
ja
adc
xchg
not
nop
xlat
cmc
or
cmp
loope
js
sub
pop
retf
adc
pop
addr16
pop
and
sahf
cmc
(bad)
in
inc
pop
jns
or
add
sub
loopne
jne
add
adc
and
jnp
xlat
pop
xchg
dec
push
jne
and
push
rcl
loop
sti
mov
mov
and
jo
and
push
pop
pop
adc
call
out
mov
nop
mov
or
and
sub
cmp
pop
push
enter
movs
retf
cwde
ficom
iret
mov
dec
outs
adc
pop
adc
ja
inc
daa
pop
(bad)
movs
fneni(8087
stos
ret
out
mov
out
stos
inc
pop
push
pusha
and
addr16
sub
and
(bad)
scas
shl
retf
in
cmc
xchg
dec
popw
arpl
sbb
add
and
ja
xchg
xchg
stos
movs
ret
mov
sbb
inc
push
addr16
or
jg
shl
fsub
not
das
pusha
inc
xor
sbb
adc
or
sbb
lods
mov
(bad)
cli
xlat
nop
out
cmc
mov
push
push
jbe
push
xor
add
adc
loope
icebp
(bad)
shl
mul
cmps
xchg
mov
inc
jno
inc
push
jbe
push
xor
add
adc
loope
icebp
(bad)
shl
mul
cmps
xchg
mov
inc
jno
inc
push
jbe
push
xor
add
adc
loope
icebp
(bad)
shl
mul
cmps
xchg
mov
inc
jno
inc
push
jbe
push
xor
add
adc
loope
icebp
(bad)
shl
mul
cmps
xchg
mov
inc
jno
inc
push
jbe
push
xor
add
adc
loope
icebp
(bad)
shl
mul
cmps
xchg
mov
inc
jno
inc
push
jbe
push
xor
add
adc
loope
icebp
(bad)
shl
mul
cmps
xchg
mov
inc
jno
inc
push
jbe
push
xor
add
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
push
push
call
mov
pop
ret
nop
nop
mov
sub
push
push
push
push
push
call
lea
push
call
mov
cmp
je
test
je
call
mov
mov
xor
push
mov
mov
push
mov
call
push
call
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
mov
call
mov
push
call
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
cmp
jle
call
push
call
mov
add
mov
add
mov
xor
mov
mov
cmp
jne
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
call
test
jne
ret
push
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
push
call
pop
push
call
ret
push
mov
push
push
push
push
mov
push
mov
xor
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
push
pop
mov
inc
cmp
je
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
mov
or
jmp
cmp
jne
mov
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
mov
and
jmp
cmp
jne
mov
or
jmp
test
je
xor
jmp
or
jmp
push
push
push
push
call
mov
add
cmp
jge
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
push
push
xor
xor
xor
cmp
push
jle
mov
mov
mov
cmp
je
test
je
inc
add
cmp
jl
jmp
mov
jmp
mov
push
shl
call
pop
mov
mov
mov
mov
cmp
je
mov
cmp
je
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
push
push
mov
test
je
mov
cmp
jne
push
call
pop
test
push
je
push
call
pop
pop
jmp
cmp
jne
lea
push
lea
push
push
call
add
test
je
push
push
push
call
add
jmp
push
push
push
call
pop
leave
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
pop
test
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
test
inc
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
push
mov
push
and
call
cmp
jne
mov
test
je
add
mov
mov
mov
mov
pop
ret
push
mov
mov
call
lea
push
push
mov
call
test
je
cmp
jne
cmp
jb
push
pop
jmp
lea
push
push
push
call
test
je
xor
lea
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
push
push
call
add
test
jne
lea
jmp
lea
push
push
push
call
cmp
lea
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
lea
push
call
pop
pop
cmp
je
push
push
call
pop
cmp
pop
je
inc
mov
cmp
je
cmp
jne
mov
jmp
inc
cmp
jne
push
push
push
call
add
cmp
je
cmp
je
cmp
je
lea
push
call
cmp
pop
sbb
add
pop
leave
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
cmp
mov
jne
push
call
pop
jmp
cmp
jne
call
test
jne
push
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jb
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
push
mov
sub
mov
push
xor
push
test
push
mov
mov
je
mov
mov
jmp
and
mov
mov
test
jne
test
jne
cmp
je
or
push
mov
pop
and
sub
je
dec
je
dec
je
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
and
mov
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
jmp
mov
jmp
mov
mov
mov
test
je
mov
not
and
test
jne
push
pop
test
je
or
or
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
and
mov
jmp
push
push
push
lea
push
push
push
push
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
pop
mov
pop
mov
mov
or
sar
and
mov
lea
shl
mov
and
mov
jne
test
je
test
je
push
push
push
call
add
cmp
mov
jne
cmp
je
jmp
and
lea
push
push
push
call
add
test
jne
cmp
jne
push
push
call
pop
cmp
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
or
jmp
cmp
jne
test
je
mov
or
lea
mov
pop
pop
pop
leave
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
mov
push
mov
cmp
jne
cmp
ja
push
call
test
pop
je
pop
ret
cmp
jne
mov
test
je
lea
and
jmp
push
pop
cmp
ja
mov
shr
push
call
test
pop
jne
jmp
test
jne
push
pop
add
and
push
push
push
call
pop
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
push
mov
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
push
push
mov
mov
push
mov
add
sub
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
mov
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
mov
shr
lea
not
and
dec
jne
mov
and
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
and
dec
jne
mov
and
jmp
lea
mov
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
dec
nop
nop
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
cmp
push
push
push
push
jne
mov
jmp
push
push
push
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
mov
push
push
push
call
test
je
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
xor
mov
xor
cmp
setge
dec
and
dec
inc
mov
mov
add
cmp
jl
push
push
push
call
add
mov
add
cmp
jae
or
lea
mov
mov
add
jmp
mov
jmp
push
push
push
call
cmp
je
push
push
push
call
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
push
call
pop
ret
or
pop
ret
push
mov
push
push
push
mov
push
cmp
je
and
lea
mov
cmp
jne
mov
push
add
push
push
call
test
je
or
dec
mov
test
je
cmp
jbe
mov
inc
dec
je
sub
sub
test
jge
cmp
mov
mov
je
cmp
jne
push
lea
pop
cmp
jne
inc
add
cmp
jl
cmp
jne
push
call
pop
cmp
je
cmp
jg
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
pop
sar
lea
ret
xor
pop
ret
mov
mov
sub
sar
lea
mov
movzx
add
and
cmp
mov
jne
inc
cmp
jne
push
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
lea
add
cmp
mov
jb
jmp
mov
mov
mov
lea
mov
cmp
mov
jae
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
add
add
cmp
jb
jmp
mov
mov
cmp
je
jmp
mov
sub
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
cmp
je
jmp
mov
and
mov
mov
sub
sub
sar
shl
add
cmp
jne
cmp
jge
add
inc
cmp
je
mov
push
shl
push
push
push
mov
call
cmp
jne
push
push
push
call
mov
add
test
mov
jle
lea
mov
or
lea
mov
mov
mov
mov
mov
add
add
dec
jne
mov
lea
cmp
jae
cmp
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzx
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
and
lea
mov
lea
jmp
add
cmp
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzx
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzx
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jb
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
push
push
push
or
xor
xor
mov
mov
test
je
lea
cmp
jae
test
je
add
jmp
or
sub
sar
add
mov
cmp
jne
add
inc
add
cmp
jl
jmp
mov
push
call
test
pop
je
add
lea
lea
mov
cmp
jae
and
or
mov
mov
add
add
jmp
shl
mov
pop
mov
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
and
mov
or
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
inc
inc
add
add
add
add
add
add
add
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
test
pop
test
test
ins
test
je
inc
add
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
test
fadd
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
push
push
call
add
ret
push
mov
sub
push
and
push
push
mov
mov
lea
mov
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
or
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
div
mov
mov
cmp
movzx
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
sub
jmp
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
push
call
pop
mov
sub
cmp
jae
mov
or
cmp
jb
jne
or
xor
div
cmp
jbe
or
jmp
imul
add
mov
mov
inc
mov
jmp
mov
dec
mov
test
jne
test
je
mov
mov
and
jmp
test
mov
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
test
mov
je
or
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
test
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
mov
imul
cmp
push
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
mov
cmp
jne
mov
cmp
ja
push
call
mov
pop
test
jne
jmp
cmp
jne
cmp
ja
mov
shr
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
push
jmp
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
push
mov
mov
call
push
mov
push
xor
cmp
jae
mov
mov
sar
and
mov
test
je
push
push
push
call
add
cmp
mov
je
push
push
push
call
add
cmp
je
push
mov
sub
test
jle
push
lea
push
push
call
push
push
call
add
mov
mov
cmp
jge
mov
push
lea
push
push
call
add
cmp
je
sub
test
jle
jmp
cmp
jne
mov
or
push
push
call
pop
pop
jmp
jge
push
push
push
call
push
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
mov
call
mov
push
push
push
call
add
mov
pop
jmp
mov
or
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
cmp
jae
mov
and
sar
shl
lea
mov
add
mov
test
je
and
mov
cmp
mov
je
test
jne
test
je
mov
cmp
je
dec
mov
mov
lea
mov
mov
lea
push
push
mov
push
push
push
call
test
jne
call
push
pop
cmp
jne
mov
mov
jmp
cmp
jne
xor
jmp
push
call
pop
jmp
mov
mov
add
lea
mov
test
je
test
je
cmp
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
inc
jmp
dec
cmp
jae
mov
inc
cmp
jne
add
jmp
mov
inc
mov
jmp
lea
push
push
inc
lea
push
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
mov
cmp
je
mov
mov
inc
mov
jmp
cmp
jne
cmp
jne
mov
jmp
push
push
push
call
add
cmp
je
mov
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
nop
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
nop
inc
add
inc
add
inc
add
add
add
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rcl
inc
add
nop
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
xchg
inc
add
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
xchg
inc
add
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
cmp
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
leave
ret
push
mov
push
mov
lea
cmp
ja
mov
movzx
jmp
mov
push
mov
sar
movzx
test
pop
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzx
and
leave
ret
mov
push
cmp
jae
mov
and
sar
mov
lea
mov
test
je
mov
mov
and
cmp
jne
and
jmp
cmp
jne
or
neg
sbb
mov
and
add
pop
ret
mov
jmp
mov
or
pop
ret
int3
jmp
