call
loop
sbb
fnstenv
push
(bad)
or
adc
bound
les
adc
pop
movs
repnz
fiadd
cmc
out
jno
lock
fnstcw
sub
mov
cli
mov
push
inc
js
hlt
out
and
pop
js
test
adc
sub
(bad)
mov
push
push
mov
call
lea
js
inc
jmp
pusha
lea
je
rol
btr
test
xor
aaa
mov
or
sete
pusha
dec
shr
inc
shl
mov
stc
cmp
cmp
or
lea
jge
pusha
mov
lea
je
rol
add
or
adc
push
not
mov
inc
ror
sub
btr
inc
bt
shl
shr
xor
inc
jmp
mov
mov
push
mov
mov
lea
jmp
outs
jle
or
pop
je
sar
sti
imul
lods
cld
aad
lock
push
mov
sar
jmp
sub
(bad)
cs
push
rol
gs
xor
mov
lock
adc
hlt
bound
cmp
jge
xchg
jne
push
sbb
mov
mov
gs
loopne
stos
push
xor
lahf
push
imul
ffreep
xchg
test
call
mov
lea
jne
sete
not
jne
mov
pushfw
or
mov
bt
test
stc
not
test
test
pushf
pusha
add
pusha
jmp
add
inc
js
je
jb
arpl
jae
push
push
outs
arpl
jne
and
je
jns
jo
imul
arpl
ins
and
je
bound
ins
outs
arpl
gs
and
and
popa
ins
imul
and
jb
jb
and
push
inc
push
dec
xor
inc
dec
dec
add
lahf
das
xchg
mov
int
(bad)
(bad)
movs
pop
sub
xor
mov
add
inc
sbb
dec
jl
dec
dec
dec
jmp
mov
jecxz
sbb
mov
sti
sub
pop
xchg
movhlps
xlat
pusha
mov
xor
push
xchg
mov
lea
xor
sbb
mov
out
cmps
mov
call
add
mov
call
and
mov
pusha
and
cmc
cmp
add
push
push
pushf
lea
jmp
clc
cmp
add
push
push
lea
jmp
mov
or
mov
lds
jge
sbb
adc
dec
sbb
adc
push
imul
mov
adc
inc
push
push
sbb
fsub
adc
(bad)
pop
(bad)
jle
mov
cwde
sub
dec
pop
xchg
push
xchg
mov
cmp
ret
inc
into
aas
into
retf
xchg
pop
outs
mov
cmp
mov
shl
adc
or
(bad)
stos
pop
inc
lock
mov
cmp
aas
daa
test
(bad)
and
add
lahf
lds
add
dec
fldenv
mov
mov
bswap
lea
jmp
push
rep
push
not
mov
pushf
pushf
pushf
pushf
lea
jmp
jne
call
repnz
ins
sar
nop
sti
push
mov
mov
ret
movs
dec
cdq
lock
sbb
push
retf
sub
es
stos
lods
loop
ins
dec
add
mov
jge
movs
cmp
jo
push
pop
cld
add
das
outs
xor
aad
pop
xlat
mov
aam
dec
mov
inc
mov
aaa
push
ror
mov
xchg
cs
lods
(bad)
push
mov
fnsave
mov
mov
sub
or
sar
aaa
pop
hlt
call
mov
repz
das
cmps
sub
stos
adc
sub
dec
add
jp
jbe
cmp
jns
call
sbb
or
sub
in
pushf
clc
xor
jmp
scas
mov
mov
mov
adc
cli
add
in
adc
add
jecxz
lods
stc
cmp
pushf
sbb
mov
add
mov
nop
out
adc
stc
out
xchg
jp
xor
scas
jmp
pop
int
lea
je
call
inc
stc
mov
cmp
setne
lea
call
not
lods
test
cmp
push
cmc
not
lea
jnp
add
test
not
test
cmc
clc
neg
jmp
sub
and
xchg
adc
cdq
jmp
dec
js
jmp
pusha
sar
stos
and
sub
xor
dec
lea
outs
and
fdivrp
mov
mov
fisttp
adc
fwait
pop
push
pop
mov
stos
pop
jae
ror
adc
(bad)
imul
cli
mov
fs
dec
mov
arpl
dec
jae
(bad)
mov
retf
js
xchg
xchg
shr
mov
dec
mov
dec
fnstcw
inc
mov
fstp
xchg
bound
in
loopne
push
push
mov
fsub
xor
xor
pusha
pusha
das
add
cmp
or
or
mov
outs
in
mov
ss
mov
pop
faddp
je
add
add
mov
dec
mov
inc
call
add
dec
(bad)
adc
mov
sub
mov
imul
dec
int
xor
mov
mov
jns
retf
push
not
popf
xor
push
inc
mov
jbe
fwait
ins
popf
in
mov
xor
idiv
mov
(bad)
pop
mov
pop
(bad)
(bad)
jno
aas
pop
sti
mov
(bad)
cwde
bswap
mov
pushf
call
stos
pushf
pusha
push
lea
jmp
cmp
ja
in
aad
adc
jge
push
cs
ror
xor
jle
retf
cwde
sbb
ret
call
push
test
popa
aad
(bad)
lods
pop
inc
cld
movs
daa
jecxz
jmp
mov
sub
push
dec
enter
mov
(bad)
pop
aaa
jmp
jno
mul
shl
dec
push
fwait
das
xchg
mov
loopne
not
cmp
(bad)
hlt
push
push
mov
call
sub
mov
push
dec
mov
xchg
dec
in
nop
neg
sbb
lods
fist
mov
mov
in
sub
push
or
fsub
addr16
and
inc
scas
xchg
inc
sub
and
mov
jg
(bad)
mov
loopne
js
ja
jge
lds
xor
in
clc
fstp
das
loopne
sbb
ret
push
mov
movs
cmps
xchg
daa
dec
inc
test
sbb
cmc
push
iret
test
dec
cmc
jmp
push
int3
and
fld
mov
push
icebp
pop
sbb
cmc
aad
xchg
xchg
retf
xor
stc
fstp
je
cmc
sub
and
jo
inc
test
push
xchg
dec
push
retf
mov
xor
gs
sbb
stc
bt
test
mov
lea
jne
jmp
and
mov
js
ds
cmps
cld
or
lock
mov
in
adc
loopne
jecxz
and
(bad)
(bad)
jae
nop
into
jg
out
jge
mov
mov
addr16
cmps
inc
repnz
sub
ds
mov
enter
fidiv
inc
mov
cdq
je
xchg
outs
sbb
mov
dec
xor
mov
lahf
test
push
das
jne
adc
push
lds
mov
dec
(bad)
scas
and
and
pushf
pusha
mov
jmp
push
jmp
mov
adc
lea
pushf
mov
push
ret
ss
dec
js
popa
rcr
lock
inc
mov
lock
jp
(bad)
aam
inc
xchg
push
hlt
fild
xor
mov
sub
cmp
aam
mov
(bad)
mov
mov
sbb
adc
push
jge
push
ds
or
aad
mov
sub
gs
mov
xor
add
mov
xor
push
xchg
aad
push
loop
hlt
mov
jo
leave
call
call
out
add
out
lods
jecxz
stos
cmp
pop
mov
bound
push
push
mul
xchg
in
cmp
nop
mov
pop
icebp
sub
mov
jmp
cmps
popf
xor
es
add
dec
jo
add
pop
into
stc
push
fwait
call
repz
aad
jle
ret
cld
and
aas
mov
aam
(bad)
lea
call
push
adc
pushf
mov
lea
jae
call
pusha
pushf
add
lea
stc
add
push
dec
mov
jmp
movzx
mov
pushf
movsx
movsx
add
setnp
inc
btc
add
sub
ror
bswap
not
setns
mov
call
call
pusha
push
adc
push
lea
call
pusha
lea
jb
push
pusha
mov
pusha
push
ret
(bad)
aam
mov
xlat
imul
int3
inc
mov
push
mov
pop
push
mov
adc
aam
add
sbb
xchg
xchg
cmc
xor
ficomp
adc
movs
out
jnp
push
cmp
cli
pushf
movs
std
dec
push
ja
loop
adc
or
mov
push
aam
outs
cdq
mov
push
fsub
cmp
xchg
ret
je
cmp
shr
movsx
mov
stc
shl
sar
mov
stc
neg
ror
rcl
xor
lea
pushf
lods
pusha
shl
not
rcl
add
mov
add
not
bt
neg
or
xor
push
stos
jmp
adc
jmp
imul
gs
xor
cs
ins
add
aad
retf
jmp
data16
mov
arpl
jecxz
mov
pop
popf
mov
and
dec
icebp
daa
sbb
in
mov
cmp
sub
or
dec
add
xchg
imul
loopne
add
retf
dec
or
xchg
pushf
pusha
push
ret
mov
lds
inc
mov
(bad)
mov
enter
jns
sub
aam
push
add
push
outs
jb
cld
in
ins
xor
aad
mov
(bad)
adc
mov
dec
cmp
sbb
push
ja
popa
shl
pop
mov
jae
cmc
cmc
cmp
pushf
mov
call
not
lea
bswap
movzx
lea
bswap
movzx
push
not
mov
pusha
jmp
test
add
pushf
push
lea
jmp
mov
jmp
lea
movzx
pushf
mov
jmp
inc
shr
ror
or
test
xchg
mov
mov
pushf
mov
push
clc
pushf
test
xchg
xor
mov
jmp
mov
ficomp
jbe
aas
inc
and
jl
in
inc
sar
dec
cmp
jmp
and
popa
das
mov
into
je
retf
and
rcr
jo
sbb
push
mov
out
(bad)
adc
(bad)
fst
inc
ins
ror
jno
iret
adc
sub
cmp
imul
adc
add
xchg
mov
and
shr
pushf
adc
pusha
push
lea
jae
pushf
lea
jne
push
push
pushf
stos
push
mov
mov
lea
jmp
push
pop
mov
test
out
into
or
add
adc
jmp
jg
stos
(bad)
mov
adc
jge
sub
stos
shl
or
repnz
dec
jle
jbe
inc
cmp
cmovae
mov
mov
rcl
mov
mov
and
sub
mov
push
ja
loope
jl
popa
les
mov
pop
xchg
adc
push
fimul
mov
adc
shr
cmp
lods
mov
adc
sbb
or
popf
idiv
dec
std
pop
mov
repz
jnp
je
shl
pop
xchg
call
mov
cmp
je
sar
bound
sbb
data16
cdq
push
push
cmps
iret
(bad)
imul
in
fld
mov
xchg
xchg
xchg
cdq
pop
leave
or
and
mov
cmp
les
xchg
push
aaa
mov
loop
inc
mov
xor
scas
mov
iret
or
add
(bad)
test
xchg
push
mul
into
xlat
daa
stos
int
adc
jmp
test
sub
cmp
test
or
push
lods
sbb
addr16
retf
loop
push
dec
cmp
and
data16
shr
xchg
jmp
cld
pop
rcr
inc
xchg
ins
mov
push
sub
adc
push
pop
stos
retf
aaa
inc
sub
xor
pop
mov
mov
and
fcom
(bad)
mov
cmp
enter
popa
outs
and
mov
push
(bad)
and
pop
push
push
cmp
mov
fld
(bad)
xlat
retf
xchg
xor
pop
(bad)
retf
push
out
dec
into
(bad)
jae
(bad)
cli
sar
jmp
inc
xchg
or
leave
xor
sub
jmp
call
call
or
into
cmp
dec
mov
mov
cmc
imul
mov
leave
std
sub
xchg
ins
in
sub
in
fnsave
dec
jecxz
(bad)
xchg
(bad)
fstp
xchg
sbb
add
imul
loop
jmp
aad
lea
repz
in
(bad)
jne
dec
push
addr16
mov
jmp
adc
or
mov
sbb
push
xor
shl
jns
mov
xor
push
inc
mov
push
mov
ret
stc
ja
imul
imul
aaa
jb
scas
lods
or
xor
or
mov
sub
mov
outs
mov
mov
mov
sub
pop
js
adc
xchg
call
or
xchg
xlat
pop
pop
fist
pop
add
dec
out
xor
ja
test
push
pop
scas
aas
jl
scas
cmps
xchg
into
or
xor
jecxz
or
mov
imul
out
xor
gs
cmp
clc
mov
clc
fist
xor
hlt
ret
mov
lods
stc
push
xor
and
jle
leave
inc
lds
push
xor
fcom
aam
push
scas
out
sbb
jmp
lock
imul
xchg
out
jbe
dec
push
sub
mov
mov
bound
cmp
inc
lea
jae
pop
lods
call
pop
pop
in
push
mov
mov
sbb
mov
out
sub
out
dec
xchg
in
mov
lds
mov
fnstsw
xchg
mov
cdq
into
(bad)
int3
cmps
mov
loop
shl
jle
mov
ins
mov
pop
fiadd
fild
inc
loop
ficom
cmp
and
mov
mov
(bad)
inc
and
inc
jnp
jp
jne
jg
les
imul
jge
jne
pop
les
adc
or
or
pop
scas
sbb
push
fisttp
scas
sbb
pop
fimul
mov
das
sub
sbb
push
pop
in
cmp
ja
fbstp
mov
cli
and
ret
push
dec
and
or
aam
outs
enter
sbb
stos
cmps
push
jp
(bad)
mov
ins
(bad)
aas
stos
scas
pop
cmp
loopne
jmp
je
sub
mov
sub
jge
jge
mov
cs
jge
push
jb
push
loopne
je
jmp
pop
ins
cmc
imul
jns
pop
jno
call
adc
cmp
std
sub
je
outs
outs
cld
outs
xor
ja
lock
int3
adc
and
adc
(bad)
gs
repnz
pop
xor
shl
cmps
outs
dec
or
add
imul
sbb
or
sbb
psubsb
ja
dec
push
or
rcl
popa
jnp
push
lock
popf
js
nop
mov
imul
stc
push
push
js
adc
and
push
sbb
fdiv
loopne
cmp
ror
push
adc
jo
fs
or
pushf
jp
gs
jge
add
dec
dec
sub
cld
mov
push
ins
sbb
fs
(bad)
sbb
jmp
fisubr
cmp
sar
cld
xor
mov
mov
jp
in
ins
js
aam
js
mov
ins
jbe
mov
dec
add
inc
mov
test
mov
ins
dec
cmp
sub
pop
sbb
or
mov
repnz
int
pop
aam
bound
inc
ret
jo
pushf
mov
adc
or
mov
hlt
jne
jo
test
ins
div
cdq
pop
pop
div
jae
dec
and
push
jmp
dec
cld
xor
add
and
fisttp
or
pushf
push
or
jp
add
add
(bad)
cmp
(bad)
jne
(bad)
std
stc
retf
neg
aaa
call
out
out
je
out
mov
in
popf
mov
call
pushf
loop
loopne
or
outs
(bad)
(bad)
jnp
xlat
aad
sbb
sar
ror
int3
popf
loopne
int
into
leave
les
(bad)
je
outs
lds
jp
out
mov
mov
in
mov
mov
test
or
xchg
movs
or
cwde
lahf
or
or
mov
cwde
cdq
pop
ja
xchg
pop
js
(bad)
mov
sti
test
cmp
jge
clc
jns
sub
xchg
jno
call
fwait
pop
push
push
mov
jmp
xchg
cmps
dec
jne
addr16
adc
sbb
outs
(bad)
pop
push
push
pop
je
xchg
jae
push
push
jbe
adc
jb
lods
inc
jno
push
imul
sub
push
xchg
jae
pop
push
je
pop
dec
pop
mov
ja
sub
lods
jge
push
aam
sbb
push
jno
or
cmp
jnp
pop
mov
fistp
jns
pop
mov
pop
jns
movs
ins
(bad)
hlt
push
mov
outs
arpl
pop
ret
stc
popa
arpl
enter
push
mov
xchg
stc
push
outs
cmp
pop
repnz
adc
push
pop
mov
fsub
push
push
(bad)
push
jbe
jge
gs
imul
sub
inc
push
push
jb
popa
mov
cli
push
push
pop
ds
bound
imul
or
jns
add
fs
push
push
popa
jb
jp
jnp
inc
shr
push
ja
jno
jne
or
sbb
ins
pop
clc
mov
mov
sub
pop
outs
jno
mov
jne
call
jle
jg
(bad)
je
clc
cmp
mov
cmp
popf
jnp
cli
aas
data16
cmp
jle
jge
mov
addr16
jnp
out
cmp
jbe
stos
aas
jne
dec
popf
jle
jge
aam
fs
test
loop
je
jnp
pop
jae
stos
neg
ja
push
push
stc
jp
mov
or
clc
jnp
fst
mov
loopne
pop
push
xlat
bnd
pop
pop
enter
ja
sbb
sbb
pop
cs
test
and
aas
das
imul
xlat
add
shl
pop
das
bound
pop
aaa
dec
mov
(bad)
push
jb
add
clc
pop
icebp
sbb
pusha
cmp
popaw
arpl
imul
js
sbb
mov
lea
mov
pop
retf
mov
mov
sub
imul
jnp
inc
sub
lods
jnp
sub
out
sbb
sub
sbb
test
movs
xchg
pop
add
cmc
mov
cmp
into
xor
sub
sbb
jecxz
pop
ds
movs
lahf
das
mov
out
imul
pop
cmp
adc
or
test
aad
ss
and
addr16
sbb
loop
repnz
push
xor
adc
cmp
xor
dec
ins
outs
ret
gs
dec
xchg
mov
xor
fcomi
inc
or
stc
fs
popa
push
mov
(bad)
xlat
cld
adc
push
les
leave
or
cmp
dec
sub
popf
adc
mov
ja
das
xor
xor
test
mov
push
stos
leave
and
jno
dec
(bad)
mov
retf
iret
push
xlat
jne
sbb
xor
push
rcl
mov
hlt
jmp
adc
out
mov
pop
cmc
cmp
retf
stc
sar
sbb
cs
in
repz
aad
sbb
in
jae
aad
sub
repz
pop
push
add
jge
pop
stc
rcl
jge
fstp
nop
rcr
jge
pop
cmp
js
int
push
hlt
jp
int
test
js
mov
cs
jp
jp
lock
fdivr
or
gs
ins
fnstcw
outs
xchg
sub
out
xchg
nop
mov
push
sub
jo
fs
push
jle
ins
mov
jp
bound
jp
cmps
test
loop
fidiv
(bad)
in
out
inc
mov
inc
out
fimul
ins
and
mov
mov
cld
and
scas
mov
ins
int3
inc
fwait
xor
icebp
fcom
icebp
cmp
jne
pop
mov
outs
cwde
xchg
xchg
test
mov
jbe
mov
pusha
movs
adc
lahf
je
xchg
enter
pop
pop
push
leave
ficomp
cmp
repz
js
mov
inc
lock
xor
xor
dec
push
jmp
in
dec
push
mov
cmp
cmps
mov
add
retf
xor
cmps
jns
fcomp
xlat
mov
dec
gs
inc
mov
gs
jno
jmp
(bad)
or
cdq
jns
mov
and
adc
test
jae
adc
mov
lods
test
xchg
imul
lock
outs
jle
adc
dec
mov
je
push
ret
cmp
adc
or
lods
movs
cmp
sub
or
leave
push
or
add
push
cmp
push
pop
pusha
cdq
mov
data16
clc
stc
xchg
jae
outs
ins
ficom
fnstsw
mov
cmp
test
cmp
inc
and
jne
in
lock
jb
repnz
jle
sti
ret
mov
std
adc
cwde
int
(bad)
clc
clc
sbb
jne
xor
jmp
(bad)
js
pop
cld
clc
cmp
mov
je
jnp
ins
call
pop
adc
pop
dec
inc
sbb
jne
je
daa
call
je
out
div
push
xchg
push
jp
daa
xor
je
idiv
loopne
imul
dec
(bad)
jp
js
ja
jp
repz
icebp
cwde
jg
cdq
xchg
hlt
mov
sub
aas
jp
jp
jbe
push
cwde
into
adc
cmp
and
dec
outs
iret
sbb
jnp
ins
jp
xor
test
pusha
repz
out
xchg
pop
imul
xor
cli
jp
(bad)
cld
cli
out
jbe
lahf
popf
mov
out
in
jae
fs
jp
iret
imul
lods
test
(bad)
xor
sbb
inc
sbb
mov
mov
(bad)
aad
push
mov
and
lock
js
cld
push
repz
in
xchg
jg
or
ins
add
push
bound
sbb
mov
mov
popf
call
jp
fwait
jp
and
dec
pop
js
imul
and
fadd
es
cmps
sbb
retf
xchg
push
sbb
pushf
mov
mov
mov
dec
cmp
je
push
mov
data16
outs
xor
cmps
mov
mov
mov
test
(bad)
lea
out
(bad)
pop
test
ret
les
pop
jp
rcl
mov
mov
inc
call
fwait
arpl
add
cld
call
xchg
push
xor
and
pop
mov
adc
(bad)
and
or
cs
add
adc
adc
movs
pop
dec
call
arpl
sbb
(bad)
sbb
div
pop
out
cwde
fsub
sub
popa
or
cmp
or
outs
sub
mov
xchg
stos
dec
xchg
cmp
out
jp
not
pop
jb
pop
ja
pop
jne
pop
pop
pop
add
inc
cmp
pop
jp
cmp
pusha
test
pop
mov
ret
and
dec
dec
es
push
jl
pop
arpl
push
or
inc
or
push
and
ror
sub
lds
xchg
jg
xchg
or
div
xchg
cmp
fadd
fcmove
enter
cld
mov
sbb
jns
hlt
das
enter
sbb
add
xchg
push
and
inc
in
jl
int3
int
dec
dec
dec
dec
or
push
inc
cmp
xchg
lods
or
add
rol
mov
mov
stos
pusha
mov
adc
sahf
xor
daa
int3
inc
sub
stos
in
jnp
hlt
dec
push
nop
mov
or
(bad)
xchg
into
fmul
xchg
mov
std
lahf
call
(bad)
mov
jns
fdiv
jp
jno
cmp
jl
(bad)
xchg
test
outs
lea
test
cmp
test
fidivr
mov
jne
pop
adc
out
cwde
mov
pop
xor
lods
sbb
and
jp
sub
and
mov
add
and
test
lock
and
mov
fild
push
jae
jp
cmp
sub
xor
jl
add
xor
pop
mov
movs
xchg
loopne
jo
bound
cmp
imul
sub
(bad)
js
jbe
fs
cmc
retf
or
mov
and
popf
pusha
scas
imul
ficom
adc
dec
ja
jp
adc
outs
pop
xlat
rcr
(bad)
hlt
xchg
sbb
push
push
xor
mov
sar
out
in
ins
fiadd
aas
cs
jne
je
and
jge
jnp
out
fcomp
outs
mov
ja
jge
pop
sbb
fld
in
mov
cld
cmp
dec
idiv
(bad)
push
out
jns
dec
js
ins
or
call
adc
movs
and
cmps
jp
loopne
es
dec
adc
scas
sub
clc
movs
xor
int3
xchg
dec
dec
jp
or
stos
mov
mov
sbb
cli
or
sub
outs
mov
enter
xchg
ror
and
adc
mov
dec
stos
pop
and
push
cmps
mov
xchg
sbb
push
test
and
xor
sub
fs
jp
sbb
sbb
mov
sub
xchg
ret
addr16
pop
jl
jp
xor
add
jp
mov
jg
(bad)
rcl
or
je
mov
xor
aam
out
cdq
inc
push
mov
mov
xchg
das
jp
cmp
pop
ficom
pusha
pop
test
ins
mov
pusha
jecxz
jle
shl
sbb
xchg
sub
out
cmp
in
div
xchg
jne
xchg
xchg
mov
js
jp
jmp
add
pop
loope
xor
hlt
sub
lock
mov
int
push
test
js
out
jmp
xchg
xor
test
adc
push
lahf
fwait
cwde
mov
test
and
inc
imul
inc
or
jne
dec
sub
adc
stc
xor
sahf
pushf
mov
movs
mov
jp
iret
add
cld
xchg
call
xchg
xchg
push
xchg
jnp
pushf
cmp
repnz
xor
fdivr
in
jp
pop
addr16
push
jne
push
addr16
and
and
(bad)
adc
lods
sub
sbb
push
call
xor
jae
loopne
nop
pop
push
shr
mov
pop
jmp
adc
jmp
aas
cmp
and
idiv
(bad)
cdq
jg
scas
xor
sbb
test
popf
mov
repnz
loop
xor
and
sub
pop
je
or
jns
adc
adc
adc
pusha
sbb
xchg
xchg
inc
std
cli
movs
or
das
and
jge
aam
mov
hlt
leave
xchg
mov
jg
jp
(bad)
xlat
xchg
daa
jp
js
imul
mov
lock
jp
iret
je
les
mov
out
or
and
add
pushf
jge
fcmovnbe
rcr
in
mov
or
addr16
xor
imul
outs
je
xlat
ror
cmps
and
out
xor
aad
stos
lock
push
cld
mov
or
jae
mov
int3
in
in
add
pop
cld
add
fsubr
aad
aam
outs
movs
mov
mov
or
and
ror
stos
or
(bad)
fidivr
xchg
push
jb
cmp
jbe
div
mov
ja
bound
outs
jne
jnp
je
pop
jns
cmp
cmp
pusha
cmp
pop
cmp
jnp
ja
jb
mov
std
xchg
jmp
jne
iret
int
movs
cmp
mov
inc
xor
jns
inc
bound
inc
data16
popa
push
or
dec
fnsave
mov
aam
data16
sbb
sar
xor
ret
cdq
ror
int3
lahf
(bad)
jl
popf
adc
or
sub
fwait
xchg
push
push
push
outs
pop
cs
pop
loope
aad
xchg
jbe
lock
mov
aad
nop
jp
fbld
mov
pusha
(bad)
scas
lods
adc
stc
jge
stos
cmps
jge
(bad)
std
div
fwait
sub
inc
repnz
pop
inc
adc
and
mov
cs
mov
cdq
xchg
js
ins
and
scas
cld
mov
add
mov
sar
dec
sbb
mov
mov
mov
or
sub
aam
(bad)
sbb
call
and
and
mov
sbb
xchg
jl
call
pop
retf
and
cld
cld
sbb
das
sub
shl
push
cmp
shr
outs
or
js
clc
in
jnp
outs
jl
loopne
mov
fcom
jmp
sbb
push
std
sbb
push
push
loop
jl
xchg
cdq
sbb
pop
scas
and
sbb
shl
loope
aam
ins
xlat
or
and
inc
sub
push
enter
cmp
ins
in
pushf
jg
lea
mov
mov
mov
stos
aas
test
and
js
retf
(bad)
push
adc
into
enter
data16
sub
push
fstp
or
or
inc
mov
pusha
mov
jp
or
mov
xchg
push
je
js
jge
xchg
xchg
or
mov
ret
push
outs
ret
inc
sbb
jl
cli
clc
stc
mov
mov
(bad)
sti
fmul
jl
or
rcr
(bad)
std
cwde
mov
jmp
mov
je
(bad)
xchg
in
cmc
call
xor
sbb
xchg
movs
add
call
dec
dec
mov
jp
je
jae
pop
cmp
repz
(bad)
xchg
jle
std
jl
call
xchg
sbb
push
enter
nop
push
dec
sti
mov
cmp
test
inc
xor
pop
dec
pop
popa
mov
push
call
(bad)
xor
inc
in
jns
int3
retf
xchg
mov
mov
pop
je
imul
xor
into
nop
xchg
add
jbe
cld
fldcw
pop
mov
sbb
in
jmp
xchg
pop
sbb
sbb
sbb
lahf
push
adc
out
sub
adc
fcom
fnsave
lods
mov
cli
div
cdq
xor
add
pop
pop
pop
pop
push
pushf
movs
ja
scas
jp
ins
xchg
clc
jnp
js
dec
js
ds
cmp
retf
js
cmp
and
cs
fs
add
stc
or
ins
push
pop
jno
movs
inc
add
js
mov
xchg
ja
outs
push
pushf
js
pop
mov
loope
sbb
bound
jge
imul
sub
push
mov
outs
mov
pop
jmp
sbb
aam
pop
inc
fs
out
mov
jne
pop
aaa
mov
sbb
jnp
xchg
mov
xor
and
hlt
dec
cmp
test
push
in
pop
adc
pop
mov
sub
enter
jp
mov
inc
stos
js
fdiv
mov
xlat
scas
jae
fcomp
(bad)
loopne
jns
jge
add
mov
or
pusha
cmp
lahf
mov
xor
repz
jns
mov
(bad)
cmps
sub
mov
xchg
adc
adc
lods
rcl
pop
iret
cmps
inc
jmp
mov
jecxz
into
adc
jmp
sub
xchg
adc
jle
sbb
mov
jne
(bad)
pop
jnp
jb
dec
mov
std
xchg
mov
pop
add
mov
test
call
clc
mov
jo
outs
jmp
cmp
jmp
jp
jg
jbe
xchg
fwait
cli
loopne
cs
cld
stos
jae
adc
ins
ja
je
pop
fcom
cmps
pushf
fwait
in
clc
movs
stc
icebp
pop
out
stos
push
test
aaa
movs
inc
mov
fwait
xchg
ins
test
repz
dec
inc
std
fwait
or
add
xchg
test
mov
cmc
xor
jge
cmp
mov
imul
cmc
push
rep
popa
sbb
icebp
sbb
mov
fucomp
scas
or
mov
pop
fmul
fdivr
mov
pop
stos
xchg
lods
jmp
and
in
jbe
mov
push
pusha
loopne
aad
sbb
mov
fmul
push
dec
xchg
mov
push
ins
hlt
fwait
pop
sub
sbb
fsub
push
in
cmp
push
adc
lods
add
mov
jl
js
lods
rcl
addr16
enter
add
mov
xchg
jp
cmps
movs
mov
jl
stos
mov
jo
aad
fbstp
div
lods
aam
mov
xchg
pop
mov
mov
call
jp
je
sub
adc
cwde
fiadd
pop
adc
mov
push
sub
fsubr
ss
leave
cdq
movs
push
jae
cmps
pop
pusha
cdq
pushf
movs
dec
call
sub
push
xchg
loop
push
(bad)
movs
lock
lds
cdq
cwde
push
jns
or
je
(bad)
shl
cld
jge
lock
out
stos
sub
sbb
clc
in
loopne
jnp
mov
jp
jp
cmp
outs
inc
jb
in
pop
and
sbb
inc
js
out
js
and
mov
or
cld
stos
or
sbb
fst
mov
mov
ja
repnz
xor
push
sbb
xchg
cmp
jnp
jp
inc
jbe
pop
pop
sbb
imul
js
js
and
xchg
jns
stc
cmc
test
(bad)
stos
push
test
push
cmp
jmp
enter
pop
push
jns
imul
add
in
jge
sbb
jp
sub
jp
push
data16
jns
pusha
mov
cmps
nop
outs
lahf
mov
push
add
mov
fnstsw
cmp
or
jo
or
push
clc
push
pop
xor
dec
jp
and
xchg
jmp
cmp
jg
jge
xchg
xchg
xchg
lods
sbb
inc
push
mov
sub
imul
into
out
cmp
xchg
jge
jp
enter
jp
pop
jns
mov
jge
jmp
clc
mov
and
and
xchg
mov
fcomp
movs
jmp
or
stc
ds
jge
in
pushw
clc
cmp
jo
les
cmp
pop
add
loopne
sub
dec
push
jp
jg
jbe
outs
dec
jp
and
cwde
sbb
cmp
xlat
int
mov
jp
lods
push
mov
inc
stos
and
add
arpl
adc
ret
rcr
jp
arpl
in
ja
add
fidiv
jo
fisubr
mov
es
fsub
sar
dec
mov
das
dec
mov
mov
fmul
(bad)
cwde
pushf
add
push
jo
cmc
out
sbb
rol
fcom
inc
mov
cmps
pop
add
mov
and
mov
add
jmp
pop
mov
or
js
mov
jp
sahf
popf
lea
outs
enter
mov
sub
jo
and
pop
push
adc
jmp
mov
hlt
imul
cmps
xor
test
jae
adc
daa
jne
call
mov
les
ja
dec
jno
js
jae
mov
adc
je
imul
jp
pop
jl
mov
stc
test
ror
call
je
jb
push
jnp
pusha
scas
mov
push
ins
ins
mov
ins
add
dec
outs
mov
jp
pushf
fs
jp
cmp
xor
cld
aaa
xor
imul
rcl
ins
pop
jp
dec
mov
mov
xchg
xchg
test
sbb
cmp
cmp
js
in
xor
pop
pop
jmp
inc
cmp
imul
jne
jo
pusha
pop
int3
mov
or
std
dec
cmps
push
jmp
push
lods
push
mov
clc
and
jl
mov
stos
cld
popa
hlt
rep
mov
pop
repz
xchg
add
mov
jne
sub
jne
push
mov
sub
(bad)
mov
lea
pop
in
pop
mov
mov
pop
adc
test
shl
lahf
sub
in
in
add
push
xchg
jno
outs
dec
fsub
(bad)
cli
cwde
lahf
mov
lds
pop
jnp
mov
mov
mov
xchg
xchg
pop
lods
sbb
sub
mov
or
jl
fstp
test
test
cmp
fs
add
mov
sub
out
sub
xchg
outs
fsub
sbb
mov
loopne
or
add
scas
jmp
mov
int3
xor
and
sub
sbb
call
in
add
cmps
pushf
mov
and
lods
gs
ja
popa
jmp
ins
or
lods
mov
je
sbb
cld
jle
or
push
nop
sbb
or
test
lea
cs
sbb
or
and
aam
push
test
mov
lods
jmp
mov
mov
adc
fxch
enter
loop
xor
sbb
mov
leave
call
mov
mov
lds
loop
jp
sub
out
jne
fsub
aad
sbb
mov
hlt
fnstenv
push
popf
mov
clc
cld
mov
jl
add
push
fnstsw
mov
dec
push
pop
jl
out
call
mov
sub
lock
push
push
pop
hlt
mov
ins
jp
push
jge
(bad)
repnz
lods
jg
mov
fcomi
je
fbld
push
mov
lods
int3
cmp
in
pop
addr16
xor
lods
xlat
or
call
cmps
adc
pushf
jae
data16
cmc
lods
mov
dec
inc
xor
call
xor
cld
repnz
jmp
test
test
mov
stos
cmps
mov
add
mov
cmps
movs
sub
mov
(bad)
cmps
cld
ror
mov
(bad)
lock
xor
mov
pushf
prefetch
movs
pushf
fwait
mov
jl
inc
out
inc
scas
sub
nop
ins
cmps
adc
cmc
fldcw
pop
shr
or
int3
lock
and
adc
out
add
jb
loop
test
leave
mov
push
(bad)
in
jne
inc
mov
xchg
or
add
scas
lds
push
test
inc
xchg
cld
je
cs
sbb
cmc
and
movs
loope
mov
mov
dec
jp
sub
pop
add
dec
jle
sahf
jae
mov
inc
in
sbb
or
push
mov
pop
jp
dec
jge
sub
clc
pop
sbb
push
out
adc
popf
dec
dec
jp
cmp
fs
jns
jmp
out
in
and
movs
hlt
cld
retf
add
out
stos
in
sub
mov
test
jmp
hlt
dec
aas
inc
jp
pop
jnp
dec
in
addr16
scas
in
lock
imul
mov
rol
jns
and
pop
cli
imul
cmp
jns
xchg
pushf
test
out
mov
or
js
mov
xor
in
jmp
pop
test
or
push
pop
xchg
add
inc
fsubr
push
in
mov
mov
push
xor
test
push
jp
and
(bad)
mov
sub
rcl
mov
repnz
ins
push
daa
jl
shl
mov
(bad)
in
jnp
inc
xchg
sub
popf
jl
(bad)
cmps
xchg
mov
mov
xchg
add
mov
pop
add
cmp
bound
push
inc
xor
sub
jo
leave
js
cmp
sub
jmp
mov
cmps
inc
rcl
cld
push
pop
add
(bad)
sti
and
push
pop
jp
add
jne
mov
stos
push
ins
pop
push
pop
je
popa
dec
gs
outs
loopne
js
shl
je
and
xchg
mov
jne
int3
cwde
push
jge
ret
sub
je
sbb
ins
nop
cld
cmc
aas
push
inc
in
inc
pushf
inc
mov
popa
ins
test
cwde
outs
or
ss
stos
je
aaa
sbb
inc
jge
mov
jg
cmp
cld
(bad)
je
mov
repz
mov
ja
mov
outs
cmp
cmp
pop
dec
je
je
aam
cmp
sub
inc
ins
test
jnp
fs
pop
outs
jle
js
jecxz
mov
sbb
outs
pop
icebp
xchg
aam
jge
fdiv
cmp
pop
jg
inc
ret
or
data16
mov
jle
xlat
ds
pop
cld
rol
sub
gs
pop
lahf
lods
xchg
mov
jl
mov
fs
jl
(bad)
cmp
jl
call
add
xchg
pop
xchg
sbb
cmps
jle
push
popa
shl
outs
call
mov
ja
ins
js
cdq
ins
(bad)
fidivr
mov
fdivr
call
jnp
push
in
sar
into
or
xor
jne
xchg
mov
sbb
xchg
push
ds
(bad)
outs
pop
and
sbb
mov
mov
hlt
(bad)
dec
dec
mov
push
push
dec
call
xor
nop
sub
push
scas
aaa
(bad)
ins
cld
pop
bound
loope
mov
mov
mov
pusha
mov
adc
icebp
adc
push
pop
mov
and
outs
iret
js
out
pop
jmp
add
xor
mov
push
xchg
scas
push
add
mov
cmp
add
jl
cs
jnp
aas
out
frstor
fsubr
inc
call
lods
sahf
nop
jnp
push
xlat
loop
or
inc
xchg
mov
or
sbb
jl
retf
dec
test
ds
cld
jne
xchg
es
sar
add
int3
sub
jo
fsub
push
jl
sbb
outs
cli
imul
jl
clc
pushf
inc
cmp
push
jl
pop
jmp
inc
jne
pushf
iret
ds
outs
pop
or
clc
pushf
pop
ffreep
out
lds
ficom
jl
jbe
add
(bad)
jl
inc
lds
jl
mov
in
jl
mov
fs
jl
mov
icebp
xchg
push
push
bound
les
aam
pop
es
adc
mov
jo
mov
sub
xor
lods
sahf
in
(bad)
jl
arpl
aaa
movs
cwde
jl
test
scas
xchg
(bad)
mov
ss
mov
mov
ror
mov
xchg
jle
mov
jl
and
adc
sbb
(bad)
xchg
sub
xor
lods
lods
cmp
push
sbb
fsubrp
and
call
inc
pop
dec
jns
repz
and
out
sbb
pop
cmp
mov
mov
addr16
ror
mov
xor
mov
jl
movs
ds
and
fnstsw
push
adc
in
jl
not
in
aas
jo
mov
icebp
aam
iret
sbb
xchg
cwde
jge
cmp
push
push
mov
dec
mov
jne
fild
lock
pusha
dec
jge
pushf
repnz
inc
sbb
or
xchg
sti
pushf
les
sub
mov
pusha
xlat
push
jl
cmp
push
ja
jl
jns
sub
push
das
jne
daa
pop
in
xchg
mov
(bad)
jl
sub
out
pop
pop
fstp
xchg
or
jge
loope
movs
cwde
pushf
scas
lods
sub
or
loopne
or
arpl
mov
cmp
mov
mov
movs
or
and
mov
test
mov
jecxz
mov
jae
sbb
xchg
(bad)
adc
xchg
cdq
cld
pop
ds
xor
aas
mov
hlt
lea
mov
adc
pop
push
xchg
xchg
or
in
jge
outs
stc
xchg
push
ja
mov
retf
ss
or
mov
out
(bad)
jl
out
sar
add
push
loopne
inc
cmps
xchg
sti
cld
adc
ins
ss
jg
xor
test
test
mov
jecxz
mov
enter
call
das
call
pop
outs
sbb
loopne
add
cmp
sar
pxor
mov
mov
das
movs
retf
js
sub
gs
fsub
in
stos
jl
int
cmp
xchg
in
inc
lahf
inc
cld
repz
retf
leave
and
mov
sbb
jae
xchg
mov
pop
jl
sbb
sbb
adc
jl
and
int3
cmp
femms
sub
mov
cmps
add
mov
mov
jae
ja
mov
(bad)
movs
repnz
loopne
repz
xchg
sbb
jle
sbb
mov
ja
test
ret
sub
data16
sub
cld
fcmovnb
sub
adc
cmp
loopne
je
outs
imul
shl
sub
mov
sbb
arpl
inc
jne
cld
pushf
mov
sbb
push
js
dec
jbe
jl
jg
xchg
xchg
fild
loopne
mov
push
mov
or
and
ja
adc
pop
scas
cld
test
mov
jl
jne
pop
(bad)
inc
cmp
jl
nop
mov
bound
pop
ss
js
mov
mov
rcl
into
cld
(bad)
sbb
cmp
jns
pop
cmp
xchg
js
pop
(bad)
stos
jbe
cld
mov
mov
loop
mov
ja
jg
cmp
mov
lock
push
(bad)
push
xor
xor
pushf
push
adc
leave
or
and
jp
mov
cmps
out
mov
pop
jmp
and
aad
lods
jl
mov
and
sub
and
sti
jl
pop
(bad)
adc
add
and
and
jl
aad
add
inc
jmp
das
hlt
pop
inc
inc
mov
fld
std
(bad)
dec
cmp
neg
dec
xor
lds
and
lea
fnstcw
daa
gs
nop
xor
sub
jo
clc
out
pop
ret
jge
test
and
ss
push
and
fistp
cmp
jae
in
movs
je
scas
cli
gs
fdecstp
pop
push
lock
xchg
sub
js
cmc
mov
test
in
loop
push
cld
lods
xchg
jo
xor
cdq
gs
js
(bad)
das
jl
sbb
jg
lock
mov
push
movs
loopne
pop
push
sub
aad
jle
pop
mov
sub
shr
inc
xchg
jle
push
sub
js
(bad)
loopne
adc
adc
push
cmp
out
inc
jl
xchg
cmp
mov
push
sbb
ins
cmp
jno
mov
ror
and
cwde
and
sub
adc
push
ins
ja
bnd
push
pop
ins
or
imul
js
inc
adc
mov
push
idiv
fs
inc
lods
cmp
sbb
xor
pop
xchg
adc
addr16
inc
or
pop
push
push
mov
add
mov
fcomp
jl
into
xor
mov
jbe
clc
inc
shr
(bad)
jp
scas
hlt
dec
mov
bswap
lods
jl
(bad)
pop
or
sub
es
jno
aas
ds
jp
xchg
out
pusha
push
cld
jl
add
cmps
or
or
je
mov
int
lods
adc
pop
jl
stos
lea
cmp
test
inc
sbb
pusha
cld
push
sub
xchg
test
jl
cs
stc
fcomp
inc
lahf
dec
sbb
das
xor
outs
jl
stos
mov
test
jle
jo
adc
dec
cmp
dec
hlt
loopne
ja
dec
sbb
inc
jae
test
push
cmp
mov
cmps
jl
push
adc
bound
sti
dec
xchg
jge
lahf
in
mov
cmc
lods
sub
pop
repz
dec
loope
retf
int3
je
lahf
jbe
jge
xchg
jnp
aad
loopne
pop
jl
idiv
lods
xchg
mov
pop
mov
stos
sahf
xor
ds
rcl
inc
xchg
lock
cmps
jno
mov
jle
sub
cld
mov
outs
pop
jno
icebp
mov
jae
jl
retf
cmp
mov
push
(bad)
fstp
xor
imul
inc
xchg
add
or
mov
jl
adc
call
push
std
jl
jmp
jl
pop
fisub
mov
dec
icebp
jl
pop
aas
(bad)
in
retf
jge
jecxz
(bad)
std
test
mov
xor
in
das
xchg
jl
gs
sub
jns
cld
jge
mov
sub
xor
xchg
pop
fmul
jns
fidivr
lahf
cld
pop
or
push
dec
pop
mov
les
pop
cld
(bad)
push
in
in
sbb
or
push
(bad)
hlt
jl
loopne
mov
jne
enter
not
mov
sbb
loope
nop
xchg
mov
push
pop
test
iret
pop
mov
mov
jge
and
inc
ficomp
jnp
mov
xchg
outs
jns
mov
push
jo
sar
jno
mov
cmp
clc
icebp
lods
int3
enter
push
jle
ret
fdivr
cwde
pop
out
push
in
(bad)
sbb
xchg
cmp
test
popf
push
cmp
mov
lods
clc
jl
out
ret
leave
and
or
or
std
jno
jl
int
mov
outs
push
in
es
pop
pop
add
call
out
push
sbb
jae
ror
cmc
cld
call
outs
jl
push
add
rol
std
int3
repnz
call
adc
loop
mov
(bad)
cmps
add
arpl
lods
jl
mov
ins
adc
ds
lea
lahf
add
pusha
inc
scas
xchg
cmp
push
leave
xchg
lock
cld
or
sti
push
xor
lock
mov
jo
inc
lods
movs
pop
adc
aad
aaa
shl
sbb
mov
sub
dec
shl
mov
mov
cld
pop
inc
jl
inc
mov
bound
lods
add
push
cld
xchg
sbb
mov
outs
pop
sahf
mov
push
mov
pushf
and
mov
imul
mov
pop
mov
(bad)
jl
fcmove
inc
mov
call
mov
inc
ret
pushf
add
hlt
jge
push
mov
mov
call
(bad)
(bad)
mov
inc
sub
repnz
scas
clc
dec
leave
dec
jl
ja
(bad)
push
mov
das
push
jno
mov
add
dec
call
xchg
xchg
sbb
rol
je
xor
adc
mov
in
inc
adc
cmp
mov
jbe
lods
gs
jp
jo
and
jge
shl
mov
shl
sub
jl
fs
das
push
je
stc
mov
jge
(bad)
jecxz
inc
xor
pop
maxps
jl
(bad)
mov
mov
repz
in
cmp
ja
inc
push
inc
frndint
and
cmp
loopne
bound
aas
push
fnstenv
pusha
mov
jnp
arpl
(bad)
int
movs
or
stos
jl
hlt
sub
sbb
jl
out
sub
mov
nop
mov
add
scas
rol
test
xchg
cmp
pop
inc
outs
or
sbb
jl
movs
jg
push
popa
xor
fdiv
and
inc
repnz
jns
mov
mov
or
push
add
jb
pop
cli
les
nop
pop
in
(bad)
pop
jge
repnz
inc
xor
lods
test
lods
mov
cld
cmp
xor
js
arpl
lods
pushf
addr16
mov
pop
or
inc
dec
arpl
(bad)
xchg
rcl
sub
out
and
add
jbe
push
mov
or
outs
jnp
(bad)
das
adc
arpl
add
mov
bound
les
ja
pop
jns
ret
xor
arpl
std
js
push
popf
cld
pop
inc
lock
jecxz
nop
loopne
call
mov
js
jle
mov
outs
loop
shl
cld
movs
cmc
test
cld
jl
dec
dec
xchg
gs
adc
jmp
fist
mov
push
popf
push
add
sbb
xchg
mov
retf
data16
outs
repz
sbb
pop
pop
mov
or
cmp
scas
push
pushf
cmp
or
jb
or
push
aas
dec
mov
push
xchg
inc
add
stos
(bad)
repz
jl
push
xor
xchg
adc
popf
push
loopne
sti
sbb
pop
fdivr
mov
cmc
loop
push
test
mov
ffree
js
jl
loopne
push
mov
into
xchg
cmp
sbb
sub
push
xchg
inc
inc
ss
fnsave
loopne
nop
sbb
stos
pop
jl
mov
aam
cmp
je
sbb
ret
xchg
push
jnp
cmp
sub
fmul
xchg
cmp
(bad)
outs
out
xchg
xor
mov
jo
xor
aaa
in
loopne
jl
adc
test
ins
jl
add
pusha
adc
(bad)
bnd
push
dec
dec
mov
and
ficom
ss
or
in
cmp
aam
inc
in
jl
call
and
mov
add
stos
mov
add
mov
retf
push
jmp
repnz
in
jl
out
int3
xchg
pop
fdiv
push
push
out
(bad)
nop
stos
jl
pop
add
je
pusha
push
pop
add
sbb
jbe
cld
ret
cmc
jmp
dec
cmp
aam
and
jl
sar
(bad)
jl
xchg
sub
jl
sub
sahf
or
and
clc
sbb
jp
(bad)
push
sbb
das
sbb
stos
xchg
int3
cli
inc
std
outs
inc
or
pop
inc
pushf
and
xchg
push
jno
ss
jp
mov
mov
cmp
push
scas
ja
aas
outs
scas
jl
add
shr
add
imul
mov
stos
loopne
js
adc
out
les
int
push
int3
mov
or
in
jl
es
dec
stos
push
sub
jl
push
xor
jle
adc
add
outs
call
xchg
xor
pusha
jns
add
sbb
test
mov
push
fisub
adc
xchg
mov
sar
cmp
(bad)
dec
xlat
or
xchg
ins
or
iret
jl
mov
mov
outs
jmp
jl
add
hlt
fld
movs
jle
in
loope
jg
imul
scas
fstp
daa
nop
jmp
int3
aad
cdq
out
(bad)
fidivr
icebp
add
jl
cli
popf
or
aas
outs
jns
clc
idiv
sbb
shr
pusha
test
fimul
popf
cmp
pop
inc
sbb
sub
je
in
loope
jl
jecxz
xchg
aas
es
mov
sub
xchg
shr
ja
movs
and
mov
int3
push
fistp
std
xor
add
sub
mov
push
cmc
dec
stos
mov
or
dec
inc
rcl
mov
cmc
jle
js
jnp
xchg
adc
hlt
sar
jl
or
add
mov
sbb
lea
dec
movs
test
dec
jnp
mov
jp
mov
jge
jmp
ja
ins
xchg
mov
sub
mov
xchg
sbb
mov
test
dec
std
sub
aaa
inc
popa
jne
lock
repz
outs
or
fcom
ret
jl
xchg
pop
loope
dec
jge
fwait
or
jge
and
jbe
movs
cs
jl
or
(bad)
mov
shl
jae
addr16
sub
inc
lods
imul
div
ja
js
jl
dec
sub
jge
jb
xchg
xor
jl
mov
xor
js
fs
stos
dec
jl
pop
sub
cwde
sub
lods
imul
pop
jmp
adc
jge
js
loopne
adc
jnp
xlat
adc
loop
mov
push
or
int3
push
repnz
mov
mov
mov
cmps
sti
nop
sub
sub
mov
pop
js
jge
jg
nop
push
xchg
inc
mov
jle
test
push
nop
pusha
pop
movs
mov
inc
movs
xor
ja
jmp
mov
xchg
or
std
fstp
lods
sub
aad
lahf
jl
pop
ins
mov
push
in
lods
call
mov
lods
inc
sbb
jmp
and
mov
mov
int3
popf
outs
mov
call
imul
dec
aad
jl
xor
jecxz
in
jge
lods
inc
add
outs
fild
daa
sbb
push
xor
inc
cld
cmps
and
jge
jmp
sbb
sbb
mov
push
(bad)
mov
add
lods
cmp
lock
push
cli
jl
add
inc
ja
pop
ffreep
dec
in
push
call
stos
adc
pop
mov
push
cmp
call
pop
cmc
and
repz
fistp
adc
xchg
push
xor
xchg
enter
sub
std
push
scas
cmc
mov
dec
mov
or
pop
jg
mov
cmps
push
dec
jl
loopne
lahf
xchg
out
add
mov
jne
mov
xor
imul
xor
repz
ja
or
jge
adc
ins
sahf
inc
loopne
pop
je
dec
jns
int3
cmp
xor
sub
mov
sbb
fwait
mov
aaa
shl
sahf
sub
pop
mov
and
lea
pop
add
jae
aad
xor
xchg
push
shl
mov
jl
fwait
add
std
or
in
out
cmp
xchg
xchg
sub
or
iret
lea
xchg
mov
imul
mov
or
inc
(bad)
fcmovnu
adc
rcr
jl
aas
ss
dec
mov
inc
adc
cmps
pop
add
pop
add
mov
and
jl
pop
push
mov
jl
adc
pusha
ret
movs
and
pop
jb
jle
ret
pushf
mov
jne
jl
(bad)
icebp
push
mov
test
jmp
lods
lahf
sbb
outs
mov
leave
jge
jmp
push
enter
sti
mov
xchg
call
stos
mov
pop
or
jp
aas
jnp
lahf
dec
pushf
test
jo
inc
lock
cli
out
cdq
rcl
adc
dec
and
pop
jne
das
adc
pop
jnp
adc
call
sub
loope
inc
enter
mov
dec
jl
sub
pop
and
xchg
inc
inc
ja
mov
and
cwde
mov
popa
into
aad
sahf
add
mov
dec
mov
sbb
xor
sbb
js
in
sbb
jmp
mov
aam
cli
stc
pop
push
jne
test
pusha
mov
jg
loopne
jp
xor
fadd
push
fbstp
je
lea
mov
cli
popa
data16
cmp
popf
(bad)
jo
inc
dec
xor
cmps
fldcw
push
mov
cld
jg
mov
pop
push
mov
cli
jle
push
jno
mov
inc
pushf
add
in
js
sets
inc
mov
mov
aad
fnstenv
adc
invd
jge
loope
dec
cmp
adc
mov
hlt
mov
call
mov
or
popa
cmps
aas
dec
xlat
ret
test
(bad)
cmp
cld
dec
aaa
popa
mov
xlat
and
mov
jge
and
and
test
test
jl
pop
lahf
ror
inc
pop
jecxz
int
mov
cmp
outs
push
inc
and
pop
cmp
xor
inc
ja
or
hlt
mov
call
adc
or
mov
pop
popf
aas
pop
xchg
xor
pop
xchg
jo
jp
push
mov
pop
fsubrp
ja
mov
in
loopne
xor
pop
jno
outs
push
mov
icebp
xor
jne
ja
xchg
ror
cmps
cmc
xchg
xchg
jmp
dec
adc
pusha
jnp
mov
arpl
ret
aam
int3
adc
push
cwde
sub
bound
clc
mov
fdivr
int3
push
push
mov
shl
test
sbb
or
mov
mov
inc
scas
repz
fld
cwde
fdivr
(bad)
outs
sub
dec
jae
cmps
call
pop
retf
aaa
jne
nop
adc
adc
imul
sbb
je
addr16
(bad)
jl
jecxz
(bad)
test
movs
dec
push
jge
adc
add
jl
push
loop
mov
js
inc
test
popa
ins
lock
out
data16
jge
add
jae
jl
retf
jge
ss
inc
xor
add
rcl
mov
cmp
sub
xor
popa
ror
xchg
sub
loopne
mov
xchg
sub
jnp
imul
movs
shl
cmp
and
mul
shr
daa
repnz
stos
jl
ror
mov
xchg
xor
ret
pop
xchg
mov
jmp
pushf
add
or
(bad)
or
in
sub
cmps
push
jbe
pop
clc
int3
inc
fidivr
fidivr
sub
in
dec
pop
inc
inc
mov
stos
ret
xor
repz
js
sar
in
jmp
cmp
mov
pop
movs
test
adc
or
mov
adc
iret
sar
outs
push
push
pop
add
loopne
fwait
or
jge
xchg
push
adc
arpl
mov
ins
sub
frstpm(287
sbb
jl
xor
mov
imul
add
jmp
xor
inc
rcr
loopne
mov
lods
sti
sbb
inc
pop
pop
mov
je
leave
sbb
(bad)
iret
jb
adc
mov
xor
sub
xlat
test
daa
pop
xor
cld
data16
mov
fcom
lods
call
mov
sub
je
jbe
inc
test
lahf
fnstcw
das
mul
jo
mov
mov
loop
aad
stos
adc
dec
dec
xor
into
stc
jl
mov
ret
sahf
lods
jne
add
movs
(bad)
into
mov
ret
repnz
sbb
jnp
enter
frstor
out
push
cmp
dec
mov
jg
imul
mov
mov
cld
push
js
mov
adc
cmc
xchg
xchg
dec
lds
push
icebp
popf
push
fbstp
jns
retf
add
or
outs
repz
stos
fdiv
call
adc
push
sub
idiv
nop
addr16
jl
ficomp
push
inc
cmp
neg
mov
jl
jb
and
mov
pop
cmp
fs
jmp
xchg
test
jge
ja
inc
xor
pop
cmp
sub
sti
mov
out
push
ins
fmul
push
sub
popa
xchg
fstp
retf
mov
test
icebp
adc
inc
jl
sub
imul
cdq
pop
jb
cmp
or
pop
cld
or
cmp
jl
cmp
mov
jl
inc
sub
or
dec
xor
cld
xchg
dec
and
jge
sahf
pushf
and
fcmovb
or
pop
inc
pop
in
pop
je
cld
xchg
mov
jl
mov
inc
add
arpl
(bad)
out
(bad)
test
jmp
or
add
out
xlat
push
push
pop
cmp
pushf
stos
sbb
in
fld
pop
cmp
jl
push
cwde
sti
push
add
test
leave
das
or
inc
xchg
sub
xchg
test
ds
or
pop
ins
add
cli
sbb
xor
ins
xchg
mov
sar
mov
cdq
lods
push
dec
dec
test
ins
lods
xchg
fistp
jge
sub
xchg
mov
add
mov
cmp
mov
jl
in
lds
xor
arpl
call
lds
or
popa
icebp
push
sub
adc
aam
test
fsubr
dec
cmps
jmp
pusha
inc
xor
or
out
leave
mov
ja
fnstenv
add
jg
mov
xchg
je
lods
cmps
xchg
xor
mov
push
outs
cmp
push
out
sub
scas
cwde
popa
dec
std
data16
jbe
xor
pop
dec
push
popa
inc
adc
mov
dec
cmp
cwde
dec
inc
lea
loopne
add
mov
(bad)
xlat
jno
mov
lods
push
jg
xchg
shl
jp
test
hlt
es
cmp
shr
pop
xchg
icebp
jl
pop
dec
inc
lods
es
jl
adc
leave
jl
les
sub
mov
iret
pop
sbb
jle
add
pop
adc
jmp
ror
aas
dec
xchg
mov
sub
(bad)
jecxz
in
or
fidiv
cmp
in
push
aas
jl
scas
ss
iret
fcmovnb
inc
mov
jl
call
stc
jl
shr
xor
ins
cmp
(bad)
xchg
dec
out
jl
xor
repnz
mov
fnsave
movs
imul
xchg
repz
dec
cmp
in
dec
xor
jo
out
or
test
push
movs
jmp
cmp
cmc
leave
stos
push
ins
std
xor
dec
popa
adc
add
adc
div
(bad)
pop
jge
or
lea
jl
out
fst
dec
(bad)
leave
cmps
jge
js
loopne
adc
mov
retf
lahf
mov
mov
add
jl
and
jl
iret
and
push
(bad)
add
add
sahf
rol
adc
imul
and
push
dec
push
out
inc
sub
ret
sbb
and
aas
mov
xchg
jmp
les
shr
or
or
mov
jl
dec
push
xor
jl
nop
push
fisttp
aad
cmp
je
pop
jl
into
mov
pop
adc
in
pusha
bound
push
xor
mov
push
mov
or
retf
mov
dec
es
(bad)
jg
and
sbb
push
push
sbb
mov
pop
pop
ds
iret
cld
gs
push
test
retf
pop
or
ins
xchg
or
mov
test
adc
in
mov
or
jl
adc
outs
(bad)
dec
add
pushf
ret
adc
nop
jl
pop
mov
ja
push
sbb
jnp
test
fsubr
iret
sub
test
jge
sbb
hlt
mov
aad
pop
jle
jae
cs
cmp
jl
mov
jne
xchg
mov
jl
push
cli
inc
xchg
inc
enter
mov
dec
add
mov
adc
imul
cld
inc
push
jae
jg
ja
out
sbb
out
mov
jl
dec
mov
xchg
jl
mov
jns
outs
jnp
mov
and
mov
mov
pop
aas
dec
in
adc
jl
xchg
add
cmp
cwde
and
mov
push
outs
ja
ret
sbb
loopne
aaa
test
cmp
jae
inc
in
mov
dec
rol
push
and
enter
and
pusha
inc
scas
cwde
js
fiadd
(bad)
sti
or
cmps
jmp
inc
pop
xchg
cld
mov
mov
xchg
stc
ja
pop
dec
inc
mov
cmps
push
or
rol
jl
mov
adc
gs
push
das
cmp
(bad)
push
inc
inc
mov
cld
fdivr
in
jl
and
inc
cmp
sbb
inc
pop
stc
jl
xor
mov
jl
rcl
pop
ss
outs
sbb
mov
mov
adc
xor
mov
xor
dec
adc
add
or
mov
(bad)
in
jl
scas
mov
jo
push
mov
dec
xor
addr16
ret
scas
(bad)
cli
loope
jl
aas
dec
xchg
jmp
cmp
cmp
mov
lods
sbb
out
fadd
adc
bound
leave
call
aam
stc
and
pusha
enter
mov
push
in
pop
jl
sub
jl
fcmovnbe
add
adc
lds
and
lock
dec
adc
arpl
add
scas
mov
ret
les
pop
add
call
xchg
mov
fcmovnb
sahf
jge
outs
push
mov
sar
jl
xlat
xchg
dec
pop
scas
in
jl
mov
idiv
xor
jge
loope
stos
mov
cmp
inc
movs
jmp
ins
pop
mov
pop
leave
cmp
or
and
mov
jne
scas
pop
jl
into
cmp
and
adc
stc
jno
push
jnp
jmp
jmp
clc
jg
sbb
sbb
fadd
mov
adc
jmp
push
outs
loop
outs
pop
jmp
dec
stos
jl
xchg
outs
(bad)
rol
test
loopne
data16
popa
sbb
enter
xor
or
(bad)
dec
cmps
mov
and
xchg
jge
xchg
das
icebp
mov
mov
int3
mov
pushf
inc
xor
in
mov
and
mov
pushf
jo
sbb
rcr
xlat
scas
loope
jl
inc
mov
popf
adc
jbe
jmp
aad
cli
fdiv
test
adc
pop
inc
movs
pop
jl
or
sbb
inc
pop
dec
pop
jl
(bad)
mov
aas
push
cmp
jmp
or
mov
push
push
xchg
out
iret
jp
pop
jmp
and
push
sbb
mov
dec
jl
sbb
ffreep
inc
outs
mov
cmps
push
jmp
mov
jl
cdq
push
fisub
call
or
test
fidivr
mov
ja
in
pushf
sbb
xlat
adc
pusha
jl
scas
mov
ds
push
not
ds
fs
sti
lahf
and
jl
loope
dec
(bad)
out
push
nop
jl
dec
lds
jge
add
jns
pop
sub
xor
inc
ret
cld
adc
in
cld
cmp
adc
loope
movs
sub
sti
mov
test
xchg
aam
jmp
mov
test
pop
push
rol
aaa
lods
outs
cmps
lea
aad
pusha
pop
inc
add
jl
in
push
jge
xchg
xchg
sub
mov
mov
loopne
sbb
stos
xor
repz
pop
aas
push
ja
int
sbb
aaa
nop
cmp
adc
inc
dec
mov
imul
push
movs
and
cld
mov
jge
xchg
jle
or
jl
loope
push
push
and
ret
jl
lods
fmul
fsub
mov
sahf
add
(bad)
mov
jns
mov
retf
sbb
js
ss
or
sub
ins
stos
jbe
inc
jmp
gs
lahf
jp
jge
in
sub
(bad)
bnd
adc
adc
dec
aam
mov
mov
xchg
push
loopne
or
and
out
cmc
nop
mov
and
pop
jae
movs
sbb
movs
fbstp
loopne
xor
mov
fwait
repnz
movs
lods
inc
inc
push
push
xchg
cmp
xchg
shr
adc
ror
mov
xchg
pop
pop
fdivr
popa
call
inc
mov
fidiv
out
or
inc
adc
jl
push
shr
pop
add
ins
cwde
adc
ret
idiv
jl
loopne
mov
sub
mov
cld
in
stos
xchg
mov
cwde
ror
(bad)
int3
fadd
jl
aam
bound
pop
enter
repz
pushf
pop
aaa
and
in
loopne
jbe
mov
xchg
outs
jnp
xchg
ins
mov
xor
lods
imul
cmp
fdiv
sub
push
xchg
loope
mov
jge
loopne
hlt
sub
test
inc
xchg
mov
jae
out
mov
xor
cld
sbb
(bad)
jl
lds
xor
sub
dec
push
pop
mov
inc
mov
jg
lds
sar
lock
outs
push
cmp
jmp
stos
fcom
daa
sub
in
dec
mov
push
test
push
inc
popa
mov
pop
fild
push
mov
jge
call
cld
mov
adc
xchg
inc
imul
(bad)
mov
fdivr
xor
in
(bad)
or
(bad)
hlt
cmc
dec
jl
imul
rcr
xchg
jl
push
pusha
addr16
cmp
push
jmp
dec
push
int
jl
sub
dec
jmp
test
xor
stc
push
jl
sub
imul
(bad)
sub
clc
inc
xor
mov
and
out
jne
sub
mov
sub
mov
jo
lods
add
and
int3
popa
es
or
ds
inc
sub
cli
inc
aaa
jmp
sbb
popa
retf
mov
mov
dec
xchg
push
cmps
cld
jb
in
pop
popa
xor
imul
jnp
fdivr
cs
push
pop
xlat
sbb
daa
ja
pop
cmp
lods
out
xor
clc
or
jl
pusha
push
retf
nop
sub
pop
push
sbb
mov
pushf
mov
(bad)
sbb
jg
xor
in
mov
lock
xlat
jl
pop
pop
or
out
enter
and
or
jge
data16
(bad)
xchg
mov
cmp
jl
mov
xor
test
inc
fwait
sti
sti
inc
das
sbb
(bad)
jae
inc
jge
cmps
(bad)
out
retf
cmp
ds
inc
jl
retf
xchg
or
xlat
add
popf
dec
mov
xchg
add
outs
addr16
fnstcw
push
xor
scas
fmulp
outs
jne
cmps
mov
cmc
adc
lds
add
aad
sub
mov
sbb
jnp
test
out
cs
jl
div
cwde
imul
mov
mov
ss
sbb
sub
and
in
mov
outs
das
mov
into
dec
cmp
and
jl
fnstsw
inc
jne
test
cld
xor
jl
movs
xor
mov
dec
jp
xchg
(bad)
out
into
xor
movs
jecxz
je
jge
jns
inc
aas
push
xor
int
shl
adc
cmp
jl
test
mov
dec
pop
mov
mov
fs
inc
in
rcr
mov
push
and
pushf
push
dec
inc
cmps
shl
cmp
push
ret
inc
and
jecxz
mov
inc
in
push
xchg
push
sub
int
mov
mov
jne
icebp
arpl
dec
inc
xor
mov
cmp
out
xchg
inc
adc
jno
call
pushf
inc
jp
(bad)
iret
cld
ret
inc
fnstenv
jp
mov
stos
rcr
std
jl
out
xchg
dec
pop
pusha
les
and
cld
add
mov
int
cmp
les
ss
pop
jl
lock
push
jl
mov
inc
xor
(bad)
mov
cld
scas
jno
das
mov
and
mov
mov
jecxz
adc
cld
jle
dec
sub
inc
mov
xor
icebp
xlat
mov
mov
pop
pop
and
push
rcr
mov
mov
(bad)
je
les
jb
sbb
ja
dec
inc
xor
fidiv
push
jne
push
add
inc
sbb
lds
out
(bad)
int3
aad
push
(bad)
mov
sub
popa
or
inc
jl
movs
or
jae
pop
fcmovne
inc
jns
dec
pop
cld
xor
gs
jl
mov
std
fimul
jl
sub
mov
jmp
cld
xor
mov
ss
add
mov
js
arpl
ror
xor
lea
jl
stc
out
arpl
mov
and
fs
pop
inc
xchg
and
jl
dec
int
clc
aad
xchg
in
scas
xchg
mov
jl
jecxz
inc
sub
inc
and
jl
mov
cmp
xchg
pusha
dec
scas
jnp
cwde
ss
pop
cs
and
adc
add
sbb
xchg
or
pop
fadd
pushf
stos
mov
out
mov
outs
or
stos
cmp
mov
popa
cmc
jnp
cmps
mov
push
push
into
hlt
(bad)
int3
sbb
inc
inc
out
push
mov
adc
dec
int3
and
(bad)
cmps
xchg
or
jl
popa
push
inc
and
jmp
mov
aas
lods
jno
or
hlt
jb
cdq
and
pop
dec
jns
pop
fsubr
xor
or
sub
dec
jmp
or
gs
scas
outs
stc
fldcw
dec
jmp
test
push
xor
pushf
outs
mov
xchg
stos
mov
sbb
imul
out
addr16
push
sahf
idiv
popa
sbb
cmp
mov
mov
add
xor
or
sub
jl
sbb
jle
push
mov
jnp
xchg
jbe
repnz
mov
jae
bound
movs
or
cmp
cmp
mov
push
pop
and
jl
pop
lahf
jmp
jl
fmul
retf
daa
sbb
add
(bad)
jnp
xchg
xor
(bad)
and
xchg
test
jl
add
cld
outs
push
mov
pop
ja
cld
icebp
stos
xor
sub
sbb
ficomp
cmp
cmp
dec
cmp
imul
xor
sub
dec
(bad)
jb
and
jecxz
jl
sbb
pop
sar
cmp
sbb
jl
mov
and
sub
adc
loop
jns
mov
nop
jl
cs
mov
jmp
push
ds
lods
jnp
adc
xchg
hlt
int3
mov
cld
in
mov
or
loop
ret
or
push
sbb
nop
call
add
test
dec
jmp
test
daa
xchg
push
and
in
jl
loopne
push
fs
sbb
or
dec
xor
mov
sti
mov
pop
or
cmp
in
dec
adc
stc
scas
xchg
repnz
and
or
js
xchg
cwde
sbb
cld
sar
mov
sub
mov
push
cmp
cmp
hlt
cmp
sar
xor
adc
pop
data16
push
dec
shl
dec
mov
or
push
cmps
jl
sub
dec
pop
and
popf
dec
inc
mov
fistp
fisub
repz
(bad)
xor
shl
mov
and
inc
and
(bad)
pop
mov
and
or
lahf
and
xor
inc
repz
(bad)
pop
add
cmp
cmp
mov
(bad)
(bad)
adc
adc
and
xor
bound
int3
jl
or
pop
add
div
shl
cmp
pop
mov
push
mov
mov
xor
fisub
xlat
ret
jl
mov
mov
popa
rcl
cld
movs
in
mov
fld
mov
push
aad
pop
mov
in
mov
sub
stos
mov
xchg
ds
jnp
fsubr
sbb
repz
mov
add
pop
jle
sub
add
jl
jp
dec
push
ss
pop
outs
popf
push
dec
dec
pop
inc
pop
cs
les
sti
or
nop
pop
int3
jbe
mov
push
cmp
inc
stos
jnp
test
jmp
jp
mov
dec
mov
lock
clc
cld
aam
jmp
mov
inc
jge
movs
sbb
jno
jl
xchg
xor
mov
push
mov
pushf
xchg
les
inc
nop
sub
ds
pop
mov
les
add
xor
iret
jnp
fild
retf
adc
int3
cwde
jg
sti
outs
cmp
test
ficomp
pop
pop
rcl
and
jl
cmp
test
fimul
cli
jnp
sbb
mov
pinsrw
sar
iret
inc
mov
mov
jl
movs
retf
mov
scas
aad
push
xchg
fisttp
sbb
data16
mov
or
jmp
inc
jns
adc
ins
std
fst
adc
mov
xlat
(bad)
jp
sbb
(bad)
rcl
mov
inc
retf
push
lea
aad
int
mov
das
jno
imul
pop
jl
jnp
scas
fnstsw
sub
jmp
dec
test
pushf
(bad)
cmp
push
mov
repnz
xchg
jns
js
fisub
jmp
lea
jmp
push
repz
or
stc
inc
pop
inc
(bad)
arpl
dec
mov
mov
fdivr
data16
popf
mov
and
fucomip
stc
add
mov
test
sbb
fnstsw
imul
jns
jl
sbb
cmps
not
lods
xor
mov
test
cld
movs
not
push
adc
aaa
jl
dec
pop
mov
inc
xchg
mov
cmp
and
xchg
inc
fdivr
mov
jge
sbb
jmp
jl
push
inc
das
xchg
jge
jg
arpl
rol
ret
mov
cdq
pop
xchg
ins
mov
aas
pushf
push
sbb
mov
mov
mov
test
cmp
push
mov
data16
out
ja
rcr
mov
jl
cmp
lea
jae
push
pop
lods
test
dec
inc
dec
xchg
sub
mov
add
xchg
dec
ja
sub
xchg
or
imul
dec
cdq
xlat
mov
int
jl
jge
jb
mov
cmp
jge
imul
fsub
shl
out
pushf
psubq
or
push
fcompp
sub
out
adc
cwde
push
fistp
jl
push
sub
push
and
sar
push
sbb
fnstsw
mov
fild
jl
and
fdivr
jne
and
aad
jnp
(bad)
pop
neg
pop
jmp
inc
push
hlt
(bad)
jl
cmps
nop
or
lahf
dec
scas
mov
jl
cmp
aad
loopne
ja
mov
ss
cmp
mov
loop
jge
xchg
sub
jmp
call
add
call
jecxz
jl
stc
mov
rcr
push
popa
push
mov
mov
loopne
add
mov
arpl
jmp
pop
jnp
cmp
dec
jmp
shl
imul
stos
sub
jmp
jl
push
daa
jg
inc
cmp
(bad)
jle
mov
idiv
push
pop
xchg
mov
sub
jmp
xor
outs
sbb
repnz
mov
lods
pop
jp
push
add
dec
dec
sbb
gs
push
adc
sbb
fnstsw
push
mov
aam
jl
(bad)
jns
sub
lods
int
repnz
cmp
imul
pop
mov
sbb
aam
jle
jae
xchg
repz
shr
out
jl
xchg
iret
jl
dec
pop
jl
add
or
fdiv
or
inc
xchg
jmp
add
fsubr
sbb
push
cld
jle
inc
dec
ja
mov
or
and
mov
jl
scas
inc
dec
push
aam
mov
data16
test
inc
sub
pop
dec
push
mov
add
in
jnp
mov
scas
xchg
(bad)
and
mov
mov
fistp
shl
add
adc
xchg
xchg
jmp
jle
inc
movs
pop
jb
ret
mov
popf
push
call
jl
adc
loope
nop
mov
fnstenv
jl
pop
inc
(bad)
mov
fdivr
out
or
pop
sbb
icebp
push
dec
frstor
push
pop
mov
and
call
inc
pop
outs
stc
xchg
and
(bad)
xchg
pop
aad
pop
ja
jge
lods
mov
int3
ror
lods
inc
enter
sahf
jl
icebp
daa
lock
adc
jl
in
(bad)
aad
or
add
adc
(bad)
div
jl
out
into
movs
shl
fldenv
stc
mov
jl
xchg
mov
mov
scas
mov
std
xchg
outs
sbb
jno
mov
inc
pop
mov
stos
aad
iret
(bad)
jno
pop
ret
scas
jecxz
sbb
or
(bad)
adc
(bad)
(bad)
dec
ror
cmp
dec
cmp
ds
pop
jp
outs
not
mov
hlt
int3
mov
jb
movs
xor
pop
popa
jl
jns
add
cs
jl
push
mov
pop
std
sahf
(bad)
jge
xlat
in
cs
jns
or
out
leave
lds
lods
fld
and
cdq
cwde
cmp
scas
adc
retf
xchg
jecxz
jns
mov
fxch
ror
mov
mov
jae
popa
ins
leave
jl
cmps
mul
fidiv
out
fcom
test
add
ror
mov
jo
add
xchg
push
jae
mov
cmp
sbb
ret
jl
rol
call
inc
and
push
xchg
jg
push
jnp
mov
adc
sub
mov
adc
jl
pusha
mov
cmps
or
jl
in
mov
push
sbb
les
outs
add
jge
sti
mov
out
psllw
fwait
test
stc
les
out
jge
push
mov
pop
js
jns
jmp
clc
mov
aas
jl
lea
pop
jnp
scas
mov
repz
cmps
jmp
les
mov
loope
mov
jl
push
push
mov
jl
jmp
mov
jne
cmp
cld
iret
pushf
add
stc
je
push
dec
sahf
cmp
mov
xchg
or
add
mov
das
mov
popa
push
cmp
aaa
jns
mov
sub
jmp
mov
pop
cmps
push
in
inc
jmp
xchg
aad
rcr
dec
repnz
sub
pop
add
iret
jl
aad
mov
mov
adc
in
ret
fsub
xchg
jl
jmp
cmp
jl
jecxz
dec
mov
stos
sub
into
call
gs
out
jge
add
sub
jecxz
test
jl
sub
imul
dec
(bad)
jns
stos
movs
cdq
jbe
dec
int3
popf
push
(bad)
fsubr
leave
(bad)
sti
dec
dec
mov
jl
mov
(bad)
mov
rol
add
push
out
das
pop
bound
adc
in
jns
in
jl
cmovo
jle
popa
idiv
mov
jl
pop
mov
mov
mov
sbb
or
popa
test
mov
mov
idiv
leave
loope
pop
lods
clc
outs
jmp
out
fmul
adc
cmp
push
div
mov
push
retf
(bad)
jl
cmp
dec
retf
enter
popa
in
pop
fist
fwait
in
add
xchg
sbb
inc
jl
pop
std
fcom
loope
and
jb
sub
leave
pop
stos
add
lea
mov
jmp
not
popa
pop
call
jmp
sbb
in
lock
stos
xor
jge
cmp
fild
pop
nop
mov
enter
jmp
jbe
leave
mov
scas
jnp
not
div
push
int3
lods
fcom
jl
fld
xor
cld
mov
xor
(bad)
mov
push
or
loope
cmc
(bad)
mov
xchg
bsr
mov
cmp
add
xor
jl
dec
neg
mov
ss
mov
and
idiv
in
loopne
lods
mov
jl
lahf
add
xchg
mov
or
jle
outs
aas
dec
pop
cld
inc
test
push
add
jl
retf
jecxz
cdq
pop
jl
rcl
call
inc
mul
cld
fyl2xp1
xchg
clc
jb
mov
fs
inc
mov
jl
pop
fbstp
pop
in
push
add
push
imul
or
sbb
jb
addr16
pop
ss
mov
iret
cld
cmp
movs
jg
mov
scas
mov
inc
sub
mov
jge
mov
into
test
test
pop
outs
ja
(bad)
aam
cmp
jl
lea
dec
jmp
push
daa
cld
add
imul
test
mov
sbb
jmp
popa
or
js
inc
test
jg
xchg
mov
pop
jl
rcl
cdq
es
jne
cli
push
arpl
push
dec
mov
jl
sar
int
ins
iret
and
shl
add
jl
adc
arpl
inc
jl
lds
dec
ret
outs
dec
or
cmps
frstor
stos
test
cmc
stc
dec
add
xchg
sub
push
repnz
dec
(bad)
xchg
std
outs
call
loop
mov
bound
xchg
icebp
(bad)
nop
imul
jne
fisttp
mov
adc
mov
idiv
inc
imul
xor
mov
or
bnd
or
mov
popa
push
int
jb
icebp
jne
xchg
cmp
ja
dec
inc
sbb
loope
popa
pop
jl
punpckhdq
sti
push
int
test
jl
inc
(bad)
cmp
outs
call
(bad)
stc
sub
dec
adc
test
mov
jo
test
jb
cmp
pop
retf
std
and
xor
cmp
ret
or
jl
dec
dec
mov
ins
in
stc
cld
mov
les
mov
pop
aas
mov
mov
(bad)
rcr
jmp
push
out
aam
and
inc
scas
adc
test
pop
in
xchg
fnstenv
pop
sub
rcr
cld
sahf
push
pop
xor
data16
add
or
pop
add
jl
mov
and
jl
sbb
out
xor
ss
out
mov
jl
jg
retf
ror
int
jb
adc
test
loope
pop
push
add
jb
dec
femms
and
aad
int3
mov
dec
xor
jl
pop
je
div
aas
neg
or
dec
int3
scas
fist
in
jmp
fistp
fcomp
mov
cdq
dec
int3
outs
mov
iret
(bad)
into
mov
jl
pop
mov
pop
push
lds
aam
jb
in
cwde
inc
retf
movs
out
jl
adc
mov
rol
push
cdq
fdiv
aad
xlat
xor
pop
jns
pop
cld
loop
call
popa
movs
mov
add
pop
mov
xchg
gs
fldenv
popa
xchg
hlt
and
test
mov
add
out
mov
popf
xchg
data16
fwait
jl
pop
cmp
push
ds
jl
and
dec
jp
leave
lds
xor
jns
jl
mov
cmp
inc
movs
dec
cld
push
mov
xor
fsubr
lods
rcl
ficomp
test
(bad)
cmps
jl
pop
push
inc
xchg
scas
mov
mov
sub
jns
push
aaa
pushf
fldenv
mov
xchg
mov
popa
push
push
sahf
sub
in
ja
test
aad
in
popf
sub
test
btc
sub
cmp
out
sahf
sbb
clc
inc
xor
clc
jl
xor
movs
daa
sbb
out
js
inc
iret
cmps
pop
mov
inc
adc
lea
dec
aam
jl
lahf
lods
pop
test
and
mov
jl
das
mov
xchg
inc
into
mov
adc
fcmovnbe
jl
mov
adc
mov
pop
cmp
push
lock
sar
jl
push
push
lods
out
push
int
jl
div
fdivr
jl
scas
inc
jns
idiv
jl
gs
jl
pop
aad
sub
lods
jl
mov
inc
sar
fild
jge
js
dec
in
cdq
test
nop
fnstsw
push
leave
daa
std
(bad)
inc
jl
jge
and
or
jmp
dec
xchg
jl
mov
mov
mov
push
xchg
xchg
sub
loop
xchg
sub
(bad)
jle
rcr
rep
das
mov
sbb
or
add
jl
sub
scas
jl
mov
shr
sti
pop
jl
test
mov
jmp
inc
jl
hlt
out
push
cli
xor
pop
push
fisttp
add
loop
outs
mov
sbb
fdivr
jl
call
leave
cmp
fwait
xor
(bad)
div
jl
loope
jecxz
adc
dec
jg
mov
xchg
jp
mul
mov
inc
push
jl
in
or
leave
jbe
mov
popa
pushf
outs
fdivr
xor
pop
popf
jno
mov
xchg
xor
jp
stc
repz
cmp
push
jl
pop
cld
dec
cmps
int3
ror
je
mov
jmp
rcl
les
test
sub
aad
ror
mov
(bad)
jl
sar
jp
sub
ins
jl
dec
pop
xor
push
jle
xor
jmp
jl
loope
adc
push
push
popa
jns
xor
dec
cdq
ja
jl
aam
xchg
(bad)
adc
js
mov
dec
pop
xchg
frstor
fdivr
jl
mov
test
jl
dec
or
xchg
push
mov
inc
mov
ins
jns
fild
sti
sar
jl
xor
(bad)
(bad)
sar
jmp
outs
out
pop
in
(bad)
das
lds
inc
mov
jl
outs
not
jmp
jnp
xchg
and
dec
cmp
clc
pop
jl
add
push
dec
repz
inc
adc
jb
(bad)
iret
xor
jge
push
and
test
xchg
mov
outs
adc
mov
fistp
dec
dec
adc
pop
neg
test
inc
xlat
pop
cmp
sar
mov
jae
pop
fld
mov
leave
or
lahf
popa
cmp
cdq
sahf
jge
scas
rcl
ret
sbb
outs
mov
mov
mov
retf
aad
into
aas
mov
jnp
movs
les
push
test
dec
sahf
ja
std
push
push
push
jl
mov
popa
int
cwde
jg
xor
jne
mov
mov
jl
push
jno
mov
adc
loopne
scas
sub
xlat
out
jnp
jl
jp
pushw
ins
cmp
mov
mov
inc
adc
cmp
add
sti
push
lea
call
and
cmps
fmul
mov
gs
das
and
inc
lods
cdq
xchg
jl
std
mov
rcl
popa
pop
cld
jl
inc
xchg
lds
icebp
jl
shl
mov
popf
addr16
mov
adc
jp
mov
pop
jl
std
xchg
inc
mov
jl
sbb
add
iret
imul
cld
jae
ss
xor
mov
lahf
jl
mov
loope
outs
sahf
and
mov
call
push
jge
sub
mov
inc
mov
aas
cdq
lods
push
pop
fucom
mov
pushf
stc
jns
xor
xor
idiv
xchg
fst
cmp
jns
ins
jl
inc
test
sahf
cmp
pop
outs
cdq
and
stos
or
addr16
std
outs
add
call
sbb
push
hlt
cmp
mov
sbb
jne
pop
sub
fstp
mov
push
ja
pop
int
push
pop
sahf
outs
movs
lock
mov
mov
jl
clc
ss
(bad)
aad
mov
out
loope
call
push
aam
hlt
std
cli
inc
mov
dec
xchg
pop
cmc
jno
mov
das
fnsave
push
pop
jl
ret
push
aad
xchg
xor
mov
inc
es
aam
mov
(bad)
stc
ds
push
popf
pop
pop
inc
fimul
imul
shl
mov
in
cmp
addr16
mov
pushf
xor
jns
jb
stos
(bad)
shr
neg
test
ja
stos
popf
fdivr
test
jle
jb
dec
or
in
pop
xchg
cdq
mov
es
out
pushf
sahf
cmps
mov
in
mov
xchg
loopne
mov
jle
jl
sbb
mov
rcr
xchg
mul
in
int3
dec
(bad)
pop
movs
call
xchg
enter
sbb
imul
and
mov
jl
imul
loopne
scas
sbb
mov
in
add
inc
int
cmps
mov
ret
nop
adc
test
jge
xchg
movs
test
icebp
aam
out
xchg
add
fwait
pusha
push
(bad)
pop
cmp
aad
dec
mov
jl
sub
rcl
(bad)
xchg
enter
fucomp
jl
lods
call
pop
mov
mov
jl
idiv
add
dec
xchg
and
cmc
jnp
shl
lds
test
add
neg
jl
dec
pop
sar
cmps
jl
ss
cmp
jae
pop
dec
shl
pushf
pop
pop
ss
xchg
sbb
mov
dec
lahf
test
adc
jno
push
dec
loopne
add
jns
inc
(bad)
mov
pop
ja
sub
je
int3
mov
fs
scas
test
les
push
inc
movs
or
ror
mov
rol
xchg
xor
stc
adc
push
std
xor
and
call
jmp
push
je
addr16
ins
pop
pop
inc
lahf
cmp
fs
push
and
pop
stc
jge
inc
stc
jb
jl
into
mov
in
pop
jg
jl
call
jl
mov
pop
pop
jl
lock
mov
pushf
jns
jo
xchg
push
stc
pop
arpl
xlat
ins
jl
test
pop
and
push
mov
mov
jl
aaa
lods
shl
dec
imul
fist
pop
cmp
mov
or
mov
loope
jno
add
fs
hlt
jge
push
movs
mov
div
xchg
js
mov
stos
sub
jl
out
push
mov
fdivr
mov
adc
aaa
rcr
nop
sbb
aas
test
push
xor
cld
jnp
in
enter
je
jmp
add
mov
cmps
out
jl
shr
add
xchg
cmp
movs
movs
sub
jl
in
lock
call
lds
inc
dec
and
inc
sti
bound
jne
xchg
jp
jl
(bad)
int3
mov
in
daa
imul
cwde
pop
xor
fistp
movs
popf
add
dec
js
cmc
jle
inc
movs
and
jp
popa
xlat
retf
cmp
sbb
test
cld
(bad)
adc
ds
push
div
fldcw
jl
push
jne
lods
shl
pop
outs
mov
mov
add
jl
xchg
push
dec
adc
mov
mov
push
ja
mov
add
popa
pusha
stos
loop
mov
sahf
xchg
sar
add
jae
fstp
pushf
adc
out
test
cmp
(bad)
jge
dec
rcr
xor
pop
stc
int
ror
jne
cmp
loopne
ins
stc
mov
lock
pop
aaa
nop
push
xor
dec
cmp
push
mov
and
jge
stc
outs
int
mov
addr16
mov
les
jnp
jl
push
pop
inc
dec
fisub
cmp
(bad)
mov
jl
xchg
(bad)
in
jmp
pushf
mov
jl
push
xor
inc
or
jl
xchg
cmp
lea
push
inc
outs
lods
jl
mov
xlat
pusha
lock
retf
push
pop
sub
lahf
inc
xchg
mov
loopne
loope
adc
stos
nop
mov
call
lock
or
scas
sub
jne
add
push
dec
inc
mov
cmp
xchg
adc
xchg
cld
push
mov
outs
add
inc
cmps
xchg
mov
and
mov
lods
adc
cbw
push
and
ja
fld
mov
sub
xchg
out
jmp
sti
cmp
cmp
xchg
mov
hlt
gs
aaa
stos
cwde
xchg
push
mov
push
imul
push
test
push
in
dec
ja
or
sahf
xchg
clc
jl
xchg
add
stc
pushf
push
mov
xor
adc
(bad)
xchg
push
fdivr
and
test
cwde
jmp
out
or
jne
icebp
dec
and
outs
cld
cmp
mov
add
mov
sub
push
je
stc
dec
jl
or
jl
adc
xchg
xchg
jg
jl
mov
fstp
sbb
sub
mov
mov
retf
retf
push
add
fs
add
fs
lock
inc
std
sti
jecxz
call
cld
sti
sub
mov
loop
dec
jg
jmp
add
fwait
inc
popf
xlat
std
mov
xchg
pop
pop
call
add
jo
mov
test
sar
movs
jb
mov
or
jecxz
mov
not
outs
sti
xchg
adc
mov
jbe
outs
mov
test
mov
add
scas
in
sti
std
or
pop
inc
cld
and
dec
xchg
xlat
aad
xchg
sub
daa
fild
sbb
aas
fs
lock
dec
add
cmps
scas
jmp
xor
and
mov
test
fs
out
fild
pop
dec
mov
fs
xor
xchg
sbb
xor
in
mov
inc
inc
int
xor
ins
pop
je
popa
mov
ss
mov
cmp
cmp
aad
push
ds
jbe
and
scas
sbb
icebp
fsubr
dec
mov
mov
jmp
sbb
dec
loope
cwde
ss
pop
mov
jmp
add
sub
movs
shr
mov
cld
cdq
call
or
inc
inc
xchg
xor
inc
icebp
or
add
mov
xor
in
sbb
mov
jns
fst
dec
mov
sbb
push
ja
shr
stos
pop
adc
cli
sub
add
pop
mov
mov
pop
xor
xor
cli
std
paddd
inc
fbld
push
add
mov
cmp
adc
ja
movs
xchg
jns
outs
idiv
mov
hlt
test
and
pop
dec
jl
(bad)
lock
mov
imul
mov
leave
bound
jmp
int
jbe
ror
mov
xchg
or
jl
stc
push
mov
ds
fs
push
aaa
inc
jl
fisubr
into
test
jl
and
sti
jbe
fisubr
popa
dec
sub
test
outs
jl
push
sahf
sbb
sub
stos
push
sbb
leave
aas
jnp
sbb
xor
jo
mov
cmps
sbb
aad
jge
cmps
pushf
mov
dec
dec
pop
sbb
mov
or
lods
jnp
in
(bad)
movs
repz
jle
inc
jl
jmp
mov
loop
inc
mov
lods
adc
jecxz
jns
push
xor
dec
lods
mov
mov
mov
dec
pop
popf
retf
imul
xchg
mov
pop
cld
sub
data16
rcr
mov
ins
mov
jb
xor
mov
sti
mov
test
in
fst
leave
fs
jg
mov
jl
pop
dec
dec
add
mov
sbb
mov
xchg
jl
inc
(bad)
adc
dec
jne
loop
test
(bad)
mov
pop
add
mov
(bad)
jl
stc
into
ret
arpl
push
adc
inc
jl
js
xor
pop
imul
neg
mov
into
add
mov
pop
mov
jmp
cmp
fnsave
enter
fiadd
push
ret
ins
jb
jns
jl
add
sahf
adc
bnd
and
xlat
xor
cmp
(bad)
aaa
fisub
adc
enter
xor
xlat
push
cmp
das
push
stos
mov
mov
fisub
sub
imul
movs
(bad)
ja
(bad)
in
(bad)
sbb
or
add
xor
add
push
in
loop
(bad)
fs
sbb
mov
pop
cmp
int3
pop
(bad)
mov
mov
jl
jo
push
xchg
fnsave
sbb
sub
sti
out
and
clc
je
fmul
les
jl
call
inc
aaa
mov
sub
dec
mov
add
jnp
repnz
call
jl
dec
ror
ds
ins
loop
lods
mov
mov
jl
or
pusha
sti
std
jl
jae
scas
dec
jecxz
inc
js
imul
cld
retf
dec
jl
push
fisub
mov
cld
jl
inc
enter
push
pop
jl
lods
jle
cwde
cmps
and
jge
xlat
pusha
dec
popf
(bad)
js
push
clc
sub
add
jl
mov
sar
outs
dec
xor
mov
cmc
push
jle
mov
push
mov
mov
(bad)
xor
scas
jle
dec
jl
xchg
int3
mov
jge
mov
(bad)
fisttp
data16
(bad)
ja
sub
sub
mov
mov
cmp
fs
cmc
and
outs
(bad)
jns
pushf
pop
dec
aas
xor
jl
xor
mov
push
push
jl
fwait
sbb
add
ja
test
shl
pushf
loopne
popf
mov
movs
dec
sbb
outs
(bad)
popw
push
mov
test
sbb
sub
jo
mov
les
in
mov
cld
clc
cmps
test
lods
push
clc
xchg
dec
add
stc
jg
jbe
lock
ror
mov
inc
clc
sub
mov
add
or
fstp
dec
arpl
cmps
test
inc
jl
rcr
sbb
push
ins
inc
add
pusha
cdq
mov
or
les
jl
xor
int
je
xchg
jl
jb
and
push
in
repz
xchg
cld
rcr
lds
sub
sbb
pusha
cwde
push
ins
add
jl
test
push
je
mov
arpl
jae
addr16
jnp
sbb
xchg
jl
and
int3
test
jmp
bnd
fldenv
rcl
push
sbb
clc
inc
mov
xchg
mov
cmp
out
xor
and
cwde
adc
mov
jge
pop
push
int
mov
jl
loop
mov
push
cs
mov
ds
jo
outs
enter
jmp
inc
cs
bound
mov
jns
fld
fwait
(bad)
mov
ins
mov
call
cdq
scas
xchg
jl
in
rol
mov
jae
outs
inc
cmp
mov
dec
mov
sbb
pop
inc
cld
jb
push
xor
add
(bad)
sub
or
cmp
sub
test
clc
sbb
xchg
pop
cmp
jge
adc
inc
fcomp
in
sub
dec
xchg
and
daa
sub
sbb
scas
fidiv
push
and
cmps
push
jmp
jge
mov
xchg
push
movs
stc
and
or
imul
inc
sub
jl
jg
and
jl
dec
cmp
movs
cmps
sub
stos
xchg
call
and
test
addr16
rcl
gs
add
js
cmp
adc
jnp
enter
pop
test
jl
inc
imul
jb
jl
and
neg
cmp
add
push
mov
jp
mov
das
dec
jmp
xchg
dec
popa
addr16
movs
jl
outs
(bad)
mov
jne
lea
inc
je
jp
sub
mov
mov
mov
cmp
cmc
adc
mov
jp
xchg
xor
fisttp
fmul
data16
loopne
adc
adc
mov
pop
mov
jecxz
test
mov
std
cmp
retf
ins
movs
mov
js
test
mov
clc
addr16
xchg
add
dec
int3
mov
mov
test
ja
mov
adc
in
jl
jmp
mov
lock
sti
cmp
pop
pusha
mov
popf
push
add
jl
mov
or
stc
pop
xchg
push
test
mov
inc
sub
(bad)
cld
sub
jbe
jle
jl
out
(bad)
cs
dec
test
mov
sbb
sbb
jl
jg
daa
ins
pop
push
ds
add
inc
cld
dec
mov
clc
pop
cmp
jl
xor
cmp
sbb
xlat
cld
add
into
xchg
out
jae
xor
jl
ret
popa
jmp
push
pushf
push
sbb
jp
mov
jne
jge
dec
lds
jge
push
inc
pop
mov
mov
sub
leave
movhlps
pop
ss
and
rcl
jl
(bad)
and
push
and
es
jmp
mov
dec
jle
dec
hlt
cld
fwait
outs
sbb
sar
cld
test
push
cmp
inc
popa
pop
add
push
loopne
xchg
adc
cmp
icebp
dec
(bad)
sar
jo
pusha
inc
test
cmp
add
sbb
jle
mov
lds
inc
mov
in
into
jns
pop
aam
stc
jl
ficomp
sbb
cmps
jmp
pushf
movs
xchg
xor
xor
lods
push
repnz
xchg
in
inc
jl
icebp
fyl2xp1
shl
sbb
xchg
in
cmp
(bad)
push
sub
int
or
mov
sahf
stc
jge
mov
aad
std
adc
(bad)
pop
xchg
add
in
add
ins
(bad)
mov
sar
leave
loop
cmp
xchg
mov
(bad)
retf
mov
push
jl
cmp
fidivr
sbb
js
lock
cwde
test
imul
jl
data16
adc
or
jl
fcomp
push
sub
in
xchg
jns
dec
and
jl
stc
imul
fwait
ror
xchg
in
cmp
pop
mov
ja
cld
test
les
and
aas
cmp
sub
loopne
jg
stc
outs
fistp
jl
and
leave
cs
pop
pushf
fnsave
test
retf
ffreep
scas
cmp
jl
lds
or
stos
xchg
fcomp
leave
adc
movs
repnz
gs
sti
xor
rcl
inc
ds
inc
ja
push
(bad)
(bad)
daa
nop
jle
mov
outs
push
sbb
ja
jl
sbb
mov
jl
int
in
push
inc
xchg
ja
dec
jns
lods
or
(bad)
call
jl
xchg
(bad)
and
mov
jl
xor
jge
and
mov
movs
push
clc
into
add
ds
mov
sbb
pop
push
ins
(bad)
cdq
jl
js
xchg
pop
fcmovbe
xor
jmp
mov
pop
ins
aam
mov
cmps
test
nop
xchg
aad
jl
fnstsw
inc
adc
jl
mov
mov
cwde
inc
sbb
push
pop
xchg
shl
push
fwait
jae
jl
aam
sbb
daa
jl
mov
call
mov
int
push
sbb
std
ret
popf
mov
out
lea
fisttp
out
cld
gs
aam
pop
jl
fsubr
cdq
ss
push
(bad)
pop
jl
shl
mov
ret
enter
call
inc
retf
mov
fbstp
sbb
jle
cmc
cld
cmp
inc
sbb
add
push
div
ins
ret
cld
sar
mov
ror
repz
aad
and
in
neg
ret
mov
inc
loopne
loopne
ja
sbb
int
cmps
push
add
push
(bad)
into
or
popf
jl
sbb
call
movs
lods
call
or
in
push
(bad)
cs
popa
adc
xchg
cld
add
mov
jmp
mov
in
add
out
(bad)
sub
jl
(bad)
xchg
fdivr
out
or
(bad)
lods
cmp
mov
pop
pop
in
call
jmp
(bad)
cld
sbb
fnstcw
xchg
ret
jmp
ins
iret
xchg
mov
in
cmp
jl
pop
mov
call
clc
jge
cmc
jl
push
fwait
(bad)
jmp
push
push
pushf
fstp
add
fstp
add
in
ss
add
ja
jl
mov
inc
push
int
fld
test
jl
mov
jnp
cdq
bts
sub
mov
ds
jno
aad
outs
pop
test
test
lds
into
xlat
xor
mov
in
xchg
test
mov
retf
inc
mov
mov
xor
push
jl
es
leave
xchg
push
aam
pop
rol
rol
mov
lahf
mov
jnp
inc
fstp
xor
mov
or
fmul
and
fisubr
fistp
dec
test
jge
jl
popf
fcmove
sbb
fisttp
iret
jl
stc
js
dec
gs
push
aas
mov
add
jne
loop
sar
fstp
retf
imul
xchg
mov
ins
xor
mov
lahf
lea
clc
sub
es
jne
sbb
fstp
lods
sbb
push
pop
inc
inc
pusha
pop
cmp
fwait
xor
test
dec
jnp
mov
cmp
enter
test
aaa
cmc
mov
test
jg
ja
sbb
ret
jl
mov
jnp
fwait
test
frstor
ficom
icebp
mov
aam
in
call
sar
jo
push
jl
xchg
mov
movs
xchg
mov
in
paddw
dec
inc
sbb
jno
cld
jmp
lods
js
lods
jae
push
leave
cli
pop
inc
call
imul
inc
ins
add
pop
aas
pop
pop
cld
stos
fxam
(bad)
push
jle
jge
cs
dec
fbld
pop
cwde
add
sub
das
in
inc
cdq
push
mov
test
xor
das
push
xor
pushf
jnp
xchg
mov
add
inc
xchg
(bad)
ins
stc
ficom
add
jl
out
(bad)
cdq
test
push
mov
mov
fdivr
fld
cmovs
outs
cld
mov
dec
mov
sar
xchg
cmps
das
mov
std
add
gs
jo
push
add
jmp
add
sbb
inc
in
xlat
pop
sar
out
ja
scas
push
(bad)
mov
jne
mov
pop
jl
jg
add
cld
sbb
mov
lods
icebp
cmc
movs
cwde
jl
xchg
add
cmp
inc
lock
push
and
hlt
mov
jl
das
icebp
xor
jl
inc
adc
pop
xchg
or
(bad)
xchg
loop
daa
jl
not
js
aam
inc
jl
mov
(bad)
or
cld
pop
inc
nop
test
mov
lds
push
aaa
mov
cmps
pop
and
in
scas
out
mov
pop
popa
lock
xchg
mov
adc
aaa
popf
pop
push
jp
scas
or
call
dec
mov
outs
es
push
stc
fld1
(bad)
mov
lods
pop
sar
movnti
imul
into
inc
aad
jl
sub
inc
fnstenv
xor
xchg
pop
inc
jg
cld
pop
jnp
out
cmp
aad
sti
cmp
sub
ss
pusha
pop
mov
cli
jl
sbb
mov
add
arpl
mov
mov
fcomp
xchg
or
xor
jne
dec
outs
sar
push
xchg
(bad)
jl
jp
icebp
cmp
push
data16
mov
mov
or
push
test
call
pop
mov
(bad)
int3
or
jg
fdiv
hlt
fild
sbb
rol
retf
pop
stc
adc
je
jnp
push
lahf
add
lods
call
jl
rcl
sahf
pop
push
mov
cld
daa
loopne
test
stc
pop
adc
mov
fnsave
popa
ja
pop
ins
sahf
cmc
pop
in
nop
mov
lds
je
jb
outs
jns
jmp
in
sahf
adc
jl
pop
call
mov
push
movs
ds
rol
ret
pop
sbb
mov
ficomp
mov
fsubr
aam
(bad)
not
idiv
inc
or
mov
push
dec
xor
jl
mov
(bad)
aas
pusha
push
xor
jl
cdq
inc
mov
rol
not
push
fld
fidivr
data16
inc
lods
pop
cmp
xchg
aad
mov
shr
xchg
or
jl
inc
inc
push
mov
jns
dec
shl
loopne
jns
sub
cmp
std
dec
sbb
int3
xchg
push
fdivr
jge
pop
(bad)
xlat
inc
push
mov
fidivr
lods
inc
sub
call
(bad)
aam
inc
jbe
icebp
ficom
retf
fiadd
add
test
cdq
mov
jnp
shl
cld
pop
xor
pusha
lea
jl
xchg
cmps
sub
scas
add
popf
lea
test
dec
in
aaa
outs
jl
gs
sub
aad
push
pop
lea
sub
xor
dec
xchg
nop
clc
movs
outs
sbb
(bad)
das
int3
add
movs
jp
cmc
mul
sti
xor
jl
fwait
cmp
push
jl
ins
xchg
mov
lods
mov
out
jl
push
push
mov
jl
xchg
in
pop
ins
bound
rcr
or
or
sub
out
sbb
pop
call
jl
std
out
lods
pop
mov
icebp
sub
sbb
jl
jno
inc
mov
mov
test
scas
xor
fidivr
aam
outs
aaa
scas
add
jl
mov
xchg
in
out
fwait
rcl
adc
jl
sbb
pop
in
xor
add
ficom
and
jl
(bad)
sub
popa
inc
mov
fcom
lods
ds
xor
add
popf
dec
jecxz
xchg
mov
ins
mov
ins
jnp
pop
retf
adc
aam
fstp
jnp
cmp
push
mov
jl
xor
xchg
es
push
cmps
inc
ret
or
cld
sbb
jl
or
repnz
xchg
(bad)
inc
push
stc
cld
pop
daa
mov
jl
cmps
mov
add
cld
cwde
ret
ds
or
sbb
daa
test
add
push
sahf
jl
mov
mov
shl
add
jne
inc
or
jbe
fstp
jmp
jecxz
scas
xor
jp
fild
jnp
ins
mov
push
cwde
pop
mov
outs
pop
(bad)
xchg
outs
adc
jnp
test
sar
dec
and
mov
hlt
xlat
cmp
xor
fnstcw
xchg
std
jae
icebp
imul
mov
jb
mov
mov
or
jmp
popf
ins
or
sub
cmp
jb
out
(bad)
cwde
push
cmp
jnp
mov
(bad)
lock
add
(bad)
ret
add
cmps
xchg
cli
in
jl
test
push
out
pop
jl
jg
mov
jl
cmc
stc
mov
pop
cmp
into
call
icebp
mov
ret
movs
xchg
daa
push
jnp
jge
pop
(bad)
cmp
jne
push
rep
mov
pop
jno
imul
ret
sub
(bad)
fcom
pop
sar
popf
popa
inc
ror
mov
cmp
cs
jge
adc
mov
add
lods
iret
cmp
fild
addr16
ret
fldcw
add
outs
aam
mov
push
pop
xchg
rcl
sub
cmp
ss
jl
(bad)
imul
mov
in
pushf
push
lods
push
xor
sahf
and
neg
movs
sbb
clc
mov
nop
sar
cmc
xor
enter
mov
mov
das
jl
pop
mov
enter
jl
mov
rol
pop
or
in
adc
dec
cmc
retf
and
mov
ins
and
je
int
jns
ds
jl
cdq
add
data16
sbb
or
adc
dec
sub
jl
jne
xchg
cmp
popa
pop
jl
mov
jl
mov
xchg
jb
cmps
dec
cmp
jbe
pop
mov
push
xor
sub
adc
jmp
movs
inc
push
jge
fstp
nop
jl
(bad)
mov
adc
ret
cld
fcmovnbe
(bad)
ffree
jnp
mov
(bad)
test
xchg
sbb
pop
inc
cwde
lds
cmps
cmps
push
ficomp
jo
mov
out
call
pushf
test
mov
mov
mov
mov
lods
mov
xor
outs
mov
fcomp
push
pop
push
test
jl
stos
xchg
packsswb
les
add
(bad)
ins
int
push
fistp
xchg
and
les
jnp
mov
push
adc
adc
sbb
pop
dec
xor
clc
cmp
cld
sbb
cmp
add
jno
jl
ror
fistp
neg
xchg
mov
jns
inc
sbb
ficomp
gs
movs
cwde
ja
sbb
push
jmp
xchg
sub
pop
inc
mov
ja
js
in
mov
mov
ja
xchg
fnstenv
shr
sub
icebp
scas
inc
test
jl
fiadd
ficom
outs
xor
mov
test
int
test
call
jmp
(bad)
adc
(bad)
retf
ss
push
add
iret
push
add
rcr
pop
test
jnp
mov
xchg
sub
(bad)
adc
ja
add
or
aam
jne
mov
fst
addr16
xor
cld
lea
stc
aas
cmp
jmp
(bad)
and
pop
and
inc
mov
imul
dec
ja
mov
cmp
adc
jg
jp
fnstenv
add
jl
lds
stc
sbb
jge
adc
and
jmp
or
pop
sbb
mov
adc
aam
dec
push
aaa
pop
clc
imul
mov
outs
dec
jne
pushf
jl
lods
das
jnp
jl
xor
and
jl
mov
mov
sub
in
cmp
sar
mov
jne
(bad)
lea
pop
xchg
cmc
jl
mov
retf
push
scas
jl
ror
xlat
dec
or
mov
jno
xchg
mov
or
jg
adc
neg
sub
and
dec
pop
adc
fs
mov
jnp
jl
out
(bad)
pop
mov
push
ja
fwait
aad
jnp
pushf
cwde
xchg
pop
xchg
fdiv
mov
mov
jne
dec
jl
inc
lds
jl
push
adc
xchg
jl
in
sub
cmc
cmp
pop
sub
fnstenv
inc
or
iret
mov
stc
push
cli
mov
xor
or
and
dec
cmp
xlat
add
aam
jmp
in
sbb
mov
jp
jl
(bad)
push
xchg
ficomp
ja
mov
(bad)
movs
jl
in
es
mov
mov
scas
push
retf
cwde
mov
jmp
jl
cmps
popf
mov
pop
cdq
les
xor
mov
xchg
cmp
jl
daa
sti
shr
call
sbb
mov
mov
xchg
jl
out
fld
jl
sub
cmp
mov
push
ja
cmps
sub
(bad)
mov
jmp
in
jl
(bad)
dec
inc
sub
fmul
js
fnstsw
lds
aas
inc
add
faddp
inc
sti
lahf
jl
sar
mov
jns
test
jge
into
repnz
shr
and
sub
ins
ret
sbb
sbb
mov
test
fmul
rol
sbb
pushf
imul
outs
xor
adc
jg
cmp
sub
repnz
lahf
push
jl
das
out
push
cmps
pop
jb
jl
fs
jbe
fadd
push
inc
mov
push
and
mov
xlat
jge
stos
aas
ret
push
mov
nop
cld
sar
sti
ja
fstp
jl
popa
ins
(bad)
fistp
jnp
aam
mov
iret
fistp
mov
or
mov
lods
data16
jnp
inc
scas
kandb
mov
mov
sub
adc
jge
lds
fwait
cld
and
in
add
ins
mov
cmc
pop
in
es
add
cmp
and
xor
retf
push
xchg
retf
ds
iret
in
aas
mov
jl
enter
xchg
les
cli
push
xchg
cmp
xchg
xlat
(bad)
xchg
inc
sbb
mov
xor
xor
jmp
inc
push
dec
not
dec
jecxz
push
into
jl
scas
pop
pop
loopne
test
jl
arpl
fnstsw
icebp
mov
push
in
jl
stc
mov
push
shl
int
ins
ins
mov
fwait
leave
dec
xor
(bad)
stc
iret
pop
xchg
gs
jge
lahf
pop
mov
and
fcomp
call
icebp
(bad)
xlat
jp
pop
jl
test
cmp
xchg
dec
push
sbb
fidivr
nop
pop
lahf
fistp
sub
scas
jb
ins
in
ds
jl
(bad)
pushw
mov
inc
pop
sar
adc
mov
hlt
mov
mov
ficomp
dec
sub
push
fnsave
cmps
jl
out
sub
jmp
jl
inc
inc
xor
popf
adc
jl
jmp
ins
test
test
mov
lahf
bnd
inc
dec
adc
push
aaa
xchg
pop
retf
gs
ins
cmps
sub
jl
fld
sub
das
jl
pop
test
in
jle
dec
xchg
movs
xchg
push
cmps
mov
adc
ins
push
cmp
cmp
cwde
xor
std
outs
vsqrtpd
clc
mov
fwait
ja
call
mov
jnp
or
push
jecxz
fld
dec
inc
shl
in
mov
out
pop
mov
xor
fwait
mov
xchg
pop
lds
test
neg
outs
inc
sub
in
jbe
mov
int3
cmp
jecxz
sub
jl
mov
cld
push
jo
push
pop
cld
xchg
fnstenv
int3
(bad)
fist
mov
dec
cmp
xchg
xor
xchg
es
aad
(bad)
ins
(bad)
rcr
jge
dec
xchg
int
std
push
ret
call
fsubr
test
jl
pop
rcr
lahf
test
call
push
inc
pop
add
jl
lahf
mov
mov
jp
xlat
ja
cli
pop
mov
cmp
or
push
dec
jno
pushf
mov
cmp
popa
ret
out
jge
mov
add
into
idiv
jg
mov
lahf
adc
pop
call
pop
jge
push
inc
jl
outs
(bad)
or
jp
loopne
cmps
lods
jl
vcvtdq2ps
(bad)
jbe
popa
mov
adc
les
xlat
cmp
xchg
das
mul
dec
gs
mov
inc
out
pop
sahf
xor
mov
lods
push
mov
mov
xchg
pop
out
call
pop
retf
sbb
and
lahf
not
mov
xchg
push
jmp
int
iret
pushf
inc
pop
cmp
fimul
mov
(bad)
enter
cmp
leave
fcom
int3
jl
add
arpl
mov
adc
in
push
ja
adc
ds
or
jge
mov
jnp
add
(bad)
jge
lods
(bad)
aam
in
jl
sub
dec
jl
sub
push
pop
dec
lds
inc
jns
adc
imul
stc
jl
fld
enter
pop
jl
or
xlat
jl
fidiv
inc
jl
fndisi(8087
test
outs
push
popf
add
sbb
outs
outs
pop
fidiv
mov
test
bsr
std
mov
repz
stos
test
jl
xchg
ror
cmp
jl
not
pop
jl
add
loopne
outs
mov
(bad)
adc
mov
xlat
enter
inc
mov
push
mov
xchg
div
pop
jnp
xor
fistp
or
sub
ds
sub
mov
shl
fadd
inc
jle
or
mov
test
mov
sbb
into
ja
pop
sbb
push
movs
mov
mov
jbe
(bad)
fst
ds
movs
xchg
xchg
xchg
jl
dec
stos
mov
inc
jl
std
or
xor
pop
in
pop
jl
pop
dec
push
js
pop
jl
cld
not
push
mov
pop
push
mov
ss
push
push
jl
iret
(bad)
mov
jl
lods
mov
jge
add
call
repnz
and
jl
adc
pop
popf
xchg
xchg
cmp
mov
adc
dec
sub
sbb
xlat
lock
jne
add
xchg
xchg
sub
pusha
push
test
mov
bound
cmps
in
jl
sub
mov
cmp
aam
nop
out
cdq
jl
mov
bound
jl
ins
sar
stos
and
mov
scas
jl
mov
mov
dec
(bad)
pop
sbb
(bad)
scas
(bad)
mov
std
outs
arpl
jmp
retf
outs
movs
stc
mov
cld
ins
dec
dec
stos
cmp
iret
push
mov
lods
int
mov
sbb
sbb
jnp
xlat
outs
cli
fnstsw
and
(bad)
loopne
xlat
pusha
jnp
mov
das
mov
dec
jl
mov
(bad)
js
inc
test
cld
add
cdq
jnp
cmp
stc
pop
jl
popa
jg
iret
outs
mov
push
jae
pop
call
mov
lods
jl
test
int
add
mov
dec
jl
inc
xor
ja
arpl
cmps
xchg
xor
or
das
enter
mov
les
out
xchg
ja
in
fidivr
sbb
sbb
cmp
(bad)
dec
push
cmp
inc
(bad)
push
jp
jp
mov
pushf
rsqrtps
xor
shl
pop
imul
and
sbb
mov
jle
stc
jp
cwde
jns
das
(bad)
leave
pop
aad
xchg
pop
adc
jl
xor
ja
hlt
push
add
xor
call
adc
jl
jns
lea
cli
fwait
jl
add
push
cmp
fcomp
adc
ins
pop
cld
(bad)
out
nop
jl
loop
cmp
jl
fld
xor
and
aad
stc
jmp
sbb
mov
sbb
ins
jl
pop
ja
jbe
call
add
test
into
stos
jnp
xchg
fwait
jmp
mov
mov
popf
sub
call
dec
(bad)
cmp
or
cs
cdq
or
cwde
pop
sar
sub
std
scas
pop
jge
inc
dec
inc
(bad)
pusha
add
inc
fstp
sbb
dec
fs
jl
cmp
mov
jl
dec
sub
out
mov
movs
jl
sar
clc
fdivr
addr16
add
sub
sbb
cmps
add
pop
stc
mov
and
dec
pop
jl
aaa
pop
dec
aad
je
jl
in
and
pop
dec
neg
cld
into
push
jl
mov
retf
xor
out
shr
mov
stos
outs
loopne
rol
xor
adc
dec
call
push
cs
dec
jl
enter
sar
pushf
ret
cmp
dec
repnz
mov
cld
add
adc
add
inc
pushf
sbb
mov
lds
xor
rcl
mov
inc
cmp
add
in
fdiv
jp
aad
sub
sbb
idiv
das
stos
cmc
ss
mov
(bad)
fst
fld
sbb
mov
xchg
(bad)
jl
push
push
cs
mov
push
pusha
pop
mov
push
jl
mov
test
xor
sbb
ror
gs
aad
pusha
jge
sahf
pop
jl
push
lock
adc
lods
sar
jmp
xchg
sahf
jge
test
xchg
dec
pop
mov
xor
push
jo
xor
pop
fdivr
ins
jne
imul
or
in
add
add
ror
js
mov
push
ret
dec
xchg
sbb
sbb
adc
mov
ss
imul
sbb
repz
jbe
jp
add
mov
pushf
dec
shl
outs
pop
dec
pop
jg
xor
ja
cmp
fwait
dec
daa
inc
sub
dec
lds
add
int3
mov
push
(bad)
jb
push
cmc
js
aaa
push
mov
pop
cmps
xor
cmp
mov
outs
test
stc
xor
pop
xchg
dec
mov
pop
mov
push
cmp
lahf
pxor
mov
aas
dec
mov
fnstsw
cmc
dec
push
ret
or
xchg
mov
fistp
lahf
pop
test
sub
pop
push
xor
pop
in
push
push
xor
mov
popf
push
(bad)
push
pop
retf
add
stc
neg
jne
in
aaa
jnp
scas
mov
cli
mov
das
xchg
ret
mov
sub
cdq
add
jl
lods
fwait
dec
(bad)
aad
shl
or
adc
fistp
jl
pop
sbb
mov
adc
push
and
stos
js
pop
cmc
jo
std
cdq
movs
call
int
std
push
xchg
cwde
in
ret
dec
jg
cli
adc
mov
outs
mov
and
dec
repz
jns
mov
lock
dec
fcom
and
imul
aam
div
loop
(bad)
dec
ds
mov
mov
mov
fisttp
jp
pop
sbb
and
mov
loopne
jge
std
fstp
add
xchg
and
adc
jge
mov
movs
sub
daa
pushf
jne
in
pop
sahf
xor
hlt
mov
test
mov
sbb
fldenv
push
icebp
pop
add
cmp
jl
(bad)
push
or
dec
sub
jl
sbb
push
xchg
fcom
and
test
and
xchg
mov
or
fadd
fwait
and
cwde
jl
in
cdq
xchg
xor
adc
inc
mov
dec
cmp
jl
in
add
aam
aad
lds
rcr
imul
cmps
popf
sbb
rcr
jl
pop
aam
mov
rcl
inc
inc
(bad)
stc
xor
jnp
mov
test
jns
sbb
push
in
jl
add
jecxz
jl
or
dec
mov
gs
(bad)
fs
daa
iret
jl
test
sub
retf
add
shl
jl
xchg
adc
sbb
sub
push
jl
adc
pop
sub
cdq
das
mov
mov
inc
push
in
jl
or
sub
dec
mov
or
cmp
neg
xor
jno
pop
in
push
jae
or
cmc
test
sti
fldenv
sub
pop
mov
cmps
(bad)
lods
cmp
dec
or
jl
imul
aam
pop
pop
mov
fiadd
push
aad
rol
lahf
outs
fild
fs
fdiv
ror
cwde
dec
mov
jl
sbb
cmc
jl
dec
int3
xor
and
jl
jg
das
imul
test
pop
jl
loopne
movs
in
leave
mov
(bad)
jge
xor
inc
jmp
cmp
push
jl
adc
call
and
loopne
stos
push
jl
or
pop
xor
mov
jl
data16
lock
idiv
mov
test
sbb
adc
mov
pop
push
repz
outs
test
sbb
fld
mov
rol
in
popf
(bad)
sti
cwde
jl
aas
neg
sbb
inc
fbld
xor
scas
arpl
leave
adc
pop
pop
mov
inc
jl
pop
int3
mov
shl
push
pop
inc
add
hlt
mov
xchg
mov
jbe
(bad)
int
fwait
retf
test
add
sub
jno
js
in
cmp
lea
dec
pop
sub
fnstsw
pop
xchg
add
mov
xchg
push
jl
xor
lods
fs
sub
xchg
clc
scas
xchg
jl
imul
jge
pop
mov
jbe
outs
hlt
rcr
jecxz
push
mul
pop
retf
scas
mov
inc
push
stc
jl
pushf
lods
cs
out
scas
xlat
(bad)
and
rcr
dec
mov
outs
sbb
add
sbb
lods
inc
rol
jl
aaa
mov
repz
dec
pop
ret
xor
jmp
and
bound
imul
into
sbb
movs
call
ins
mov
shl
inc
xchg
xor
aas
fisubr
(bad)
movs
cmp
test
cli
bnd
outs
sub
cdq
imul
sbb
bound
inc
mov
retf
push
sbb
icebp
repz
jl
mov
jl
ret
mov
mov
mov
mov
dec
and
jmp
repz
movs
ja
aas
and
push
sbb
mov
pop
add
ins
mov
mov
cmp
mov
ret
add
enter
ret
xor
dec
pushf
daa
movs
inc
jl
scas
push
iret
dec
jmp
int
mov
dec
mov
xlat
sbb
pop
mov
cmc
add
mov
sub
sub
outs
jl
(bad)
ror
(bad)
faddp
pop
inc
pop
mov
fstp
sbb
adc
outs
push
sub
mov
icebp
push
sub
mov
xor
jl
mov
popa
into
push
es
pop
xlat
push
push
les
jl
fisubr
and
fadd
pop
inc
fldcw
pop
jg
pop
cwde
push
and
xlat
pusha
(bad)
in
mov
call
sub
daa
pushf
xor
sbb
push
mov
jg
scas
movs
or
xchg
jl
fbld
mov
mov
inc
outs
sti
sar
jge
mov
and
mov
adc
cmp
and
imul
push
cmp
inc
ins
mov
cmp
in
outs
daa
push
leave
inc
mov
fs
test
ins
in
mov
neg
xchg
pop
jl
movs
cmps
cs
shr
nop
lahf
add
jl
arpl
pop
cmc
mov
push
rcr
push
popa
cmp
dec
pushf
pop
mov
call
adc
rol
repnz
hlt
sbb
pop
clc
sbb
pushf
pop
rol
or
repz
and
je
cmp
rcr
ret
(bad)
out
pop
aad
sti
outs
in
add
in
add
and
pusha
test
je
jl
iret
jle
repz
inc
cdq
(bad)
and
outs
popf
cmp
ret
test
jg
aad
jle
pop
jmp
cmp
xor
ds
rol
push
xor
loope
xor
jle
jae
fstp
jl
rcl
repz
jl
sbb
aad
lock
in
in
jl
aaa
(bad)
jmp
jl
repz
(bad)
jl
add
jno
jl
outs
pop
mov
jl
and
int
retf
ins
mov
stos
in
jl
xchg
mov
jl
repz
push
(bad)
lock
outs
and
mov
cli
jno
sti
xor
pop
add
test
mul
lock
js
adc
ins
mov
rcr
ja
lods
pusha
test
mov
ja
and
mov
mov
dec
jnp
inc
mov
imul
or
in
pop
into
mov
pop
xlat
outs
jmp
cmc
xor
pop
dec
cdq
mov
pusha
jl
add
retf
inc
pushf
into
jl
sysenter
adc
(bad)
aad
rcl
dec
pop
loop
fisttp
test
cmp
pushw
in
test
mov
mov
push
not
sub
call
(bad)
fnstcw
retf
sub
mov
mov
push
pop
stos
adc
or
in
fild
mov
aam
es
xchg
mov
push
cmps
aad
in
cs
daa
les
add
lea
pop
(bad)
cwde
mov
test
xchg
mov
in
imul
pop
mov
jns
push
mov
jge
add
mov
fcomp
je
pop
inc
int
sar
and
mov
jl
mov
call
rcr
or
dec
fs
and
mov
in
jl
mov
into
aaa
cmp
push
jnp
mov
iret
mov
sar
jns
cld
aaa
pop
aad
ret
test
pusha
push
jl
or
push
pushf
out
dec
fcomp
(bad)
or
cmp
retf
ds
ins
mov
aad
mov
cwde
push
jbe
push
mov
mov
jnp
cmp
movs
mov
lds
rcl
mov
(bad)
xchg
jno
bound
xchg
jle
sbb
popf
xchg
mov
sub
pop
imul
jl
fst
int
mov
inc
aad
in
into
jle
mov
mov
xchg
lods
mov
lds
add
mov
jns
dec
loope
dec
int3
outs
repnz
shl
jle
jne
test
repz
cmp
cmp
mov
jnp
dec
xchg
mov
int3
ret
push
ficomp
fnstsw
inc
push
and
or
repnz
mov
ret
cmps
jl
adc
jl
aas
sbb
cwde
jbe
mov
and
jle
into
add
jne
and
inc
aas
sub
bound
mov
mov
cmp
jp
outs
(bad)
mov
in
sbb
jno
int
jne
mov
jne
pop
cmp
sbb
fldcw
jae
and
dec
push
sbb
adc
es
jg
push
ins
inc
jl
pop
cld
int3
mov
inc
cmp
(bad)
call
sbb
mov
rcr
mov
inc
sbb
cli
test
sub
leave
sbb
xor
and
dec
cwde
inc
(bad)
jl
scas
in
dec
aas
jmp
mov
add
pop
ror
mov
dec
gs
inc
bound
std
jg
scas
jl
xor
fidivr
out
mov
jge
pop
leave
aad
cmp
pop
shr
ss
iret
adc
addr16
cmp
mov
out
or
cmc
inc
jl
call
shl
popa
jl
fdivr
vpsubw
aaa
sub
adc
adc
pop
pushf
loop
xchg
mov
push
mov
popf
outs
into
imul
dec
sar
sar
fs
mov
icebp
push
icebp
jmp
mov
mov
fdiv
and
bound
ffreep
cld
rcr
scas
ror
idiv
cmp
mov
test
call
cmp
push
pop
jbe
add
dec
out
fadd
lahf
leave
push
int
or
enter
adc
cmp
jge
sbb
add
iret
popf
cwde
daa
push
jl
aas
fild
mov
fimul
jnp
cld
sahf
es
jl
pop
rcr
mov
pushf
(bad)
aam
jbe
jl
cwde
mov
(bad)
jb
mov
mov
jns
cld
mov
add
arpl
jbe
jmp
(bad)
cmp
push
sbb
fbld
jl
inc
rep
outs
fst
cmps
cld
add
aad
adc
cmps
out
js
aam
fcomp
mov
sar
pop
sbb
out
xor
aam
ret
call
std
jnp
in
loope
out
mov
xor
dec
jl
or
enter
mov
cmp
(bad)
mov
(bad)
aad
(bad)
std
inc
pushf
pop
pop
jge
push
stc
sub
push
test
push
imul
push
mov
or
(bad)
out
data16
retf
pop
in
dec
or
xchg
sub
(bad)
jl
mov
clc
out
stc
int
jl
in
aas
vmovsd
xchg
or
loop
imul
outs
or
mov
adc
dec
fcomp
call
adc
scas
jl
sbb
xlat
sar
call
cmc
xchg
inc
(bad)
cmp
ds
aam
in
cmp
jl
iret
sbb
mov
xlat
pop
ja
stos
out
cmp
in
jl
or
sti
pop
mov
cmovae
adc
(bad)
scas
mov
sbb
inc
push
xchg
sbb
fldcw
jns
mov
fdiv
push
shr
int
xor
out
ja
call
shl
mov
int3
push
pop
inc
fmulp
mov
ds
jb
xor
inc
lahf
push
mov
loopne
stos
retf
jg
cdq
outs
sbb
mov
jecxz
shl
add
inc
(bad)
retf
jnp
in
lock
mov
jnp
loop
mov
inc
aad
mov
lods
jl
pop
cmps
mov
jl
enter
(bad)
aad
jne
int3
into
repz
pop
fist
vhaddpd
jnp
sub
pop
mov
xchg
xchg
lods
jl
push
(bad)
std
jmp
pop
pop
out
and
add
add
outs
xor
out
sar
leave
mov
(bad)
and
in
popf
jmp
lahf
mov
jmp
mov
push
jge
imul
imul
sbb
lods
mov
ja
inc
push
loopne
lods
push
outs
lds
dec
int3
adc
retf
jo
push
push
pop
into
jnp
adc
out
and
and
add
xor
mov
jnp
int
shl
daa
dec
mov
push
mov
inc
in
out
jl
int3
xlat
sbb
popa
pop
fstp
mov
fisub
scas
pop
pop
(bad)
push
pop
cmp
in
int3
jl
pushf
push
dec
cmp
add
jl
and
mov
int3
lds
jnp
pop
out
call
xchg
ds
mov
aad
sar
fistp
shrd
stc
iret
jge
fstp
cdq
dec
pushf
jns
mov
or
cmp
aad
jg
test
outs
sbb
int3
mov
jl
sti
shr
and
mov
sar
nop
mov
imul
mov
xor
mov
jl
aas
test
shr
sbb
shl
add
(bad)
sar
bound
sub
retf
repnz
in
mov
jl
stos
push
xor
jb
pop
pop
pop
retf
sbb
xchg
arpl
inc
or
test
mov
xor
dec
stos
sar
mov
and
call
shr
jecxz
xchg
in
and
dec
cwde
push
call
sbb
ret
(bad)
test
mov
sbb
mov
xchg
rcl
retf
or
nop
push
lods
lods
loopne
inc
pop
cdq
in
mov
mov
jl
out
out
or
sbb
call
lahf
cmp
lods
inc
push
ret
xchg
or
iret
mov
inc
pop
push
fimul
mov
sub
loop
add
inc
out
ins
jl
aad
and
std
pop
mov
add
dec
cmp
iret
popa
fimul
cli
cld
lods
or
and
adc
jno
push
loopne
or
jl
mov
xchg
int
or
ffreep
adc
xor
dec
sbb
fs
stc
out
dec
es
dec
xor
cs
cli
mov
add
push
ret
stc
nop
inc
ds
out
clc
xchg
push
mov
pushf
mov
jl
scas
cwde
aad
sbb
pop
jl
in
std
or
jnp
repz
mov
mov
mov
jmp
jl
cmp
jl
(bad)
xchg
test
inc
cs
aam
out
xlat
iret
rcr
inc
cld
push
add
adc
lods
out
jb
push
cld
dec
int
push
fnstcw
test
mov
icebp
in
dec
cmc
jno
push
lahf
fstp
nop
shl
jnp
adc
mov
xchg
sbb
pushf
inc
push
dec
push
ja
mov
cmp
mov
xchg
xchg
nop
sbb
mov
push
cld
pop
(bad)
or
(bad)
inc
ret
jle
call
into
mov
sar
or
mov
or
adc
je
dec
dec
mov
fiadd
xor
(bad)
add
cwde
mov
add
jl
push
mov
nop
mov
jo
jnp
(bad)
ja
jmp
test
data16
rol
cmc
out
in
inc
mov
in
mov
add
pop
(bad)
(bad)
jl
dec
lods
clc
icebp
outs
jl
add
cli
int
(bad)
jl
and
movs
pop
test
mov
dec
das
gs
test
(bad)
cli
push
lahf
movs
add
popa
jmp
aam
fisubr
jl
dec
outs
mov
xor
aam
jl
(bad)
je
ins
hlt
pop
pop
sti
(bad)
cld
add
gs
mov
add
xor
cwde
jecxz
xchg
ds
ffree
mov
jl
mov
fwait
adc
adc
ret
mov
push
inc
pop
jl
stc
rcr
adc
call
idiv
outs
cs
mov
aam
popa
js
hlt
jge
fdivr
xchg
cld
sbb
xor
dec
jl
adc
shr
sub
jge
mov
in
movs
mov
jl
mov
cmpps
dec
mov
nop
test
jns
test
pop
jl
dec
pusha
(bad)
dec
in
int
sub
mov
xchg
mov
jbe
out
pop
xor
(bad)
xchg
push
xchg
jl
pushf
inc
pop
or
cmps
pusha
jge
dec
pop
pop
popa
cmp
cmc
lahf
jl
(bad)
mov
adc
push
mov
or
pushf
fidivr
push
dec
mov
add
aam
xchg
pushf
stc
in
adc
pop
jnp
or
les
ja
loop
jle
sub
add
test
fstp
pushf
xchg
nop
retf
jnp
and
rcl
adc
xor
sub
into
(bad)
cmp
mov
add
jnp
lds
lea
mov
adc
ret
jl
inc
enter
xor
inc
iret
pop
mov
sti
ss
sbb
(bad)
jl
pusha
aas
mov
inc
or
jmp
and
mov
cli
loopne
jl
ss
fcomip
pusha
jl
mov
lock
mov
(bad)
mov
jne
add
cmp
pusha
push
dec
sti
push
dec
jbe
out
cld
pop
push
data16
imul
int
jle
sub
fstp
jmp
retf
test
lds
jge
ss
mov
rcr
leave
mov
and
stc
cdq
movs
(bad)
adc
fs
pop
(bad)
in
pop
test
shl
pop
mov
mov
(bad)
loope
std
jl
inc
add
pushf
clc
outs
sbb
or
std
rcr
and
scas
jne
outs
pop
pop
clc
add
aam
jl
add
cmp
xchg
pop
(bad)
push
mov
ds
retf
cld
mov
jl
std
(bad)
pop
ja
(bad)
push
out
inc
jl
test
mov
jl
hlt
pop
push
es
jmp
push
and
mov
xchg
push
sbb
jns
push
pop
loop
mov
in
xchg
cld
rcr
dec
popa
mov
inc
adc
sbb
push
retf
jl
pop
(bad)
inc
jmp
mov
jl
sub
jnp
or
aam
sbb
push
in
cld
cdq
lahf
cmp
inc
cmps
mov
fistp
out
or
jl
add
sub
arpl
call
test
lea
inc
popa
movs
mov
sbb
stc
or
movs
lods
jge
push
hlt
cs
push
test
jl
daa
mov
xchg
ss
jl
arpl
lds
repnz
pop
icebp
fsubr
jl
xchg
sbb
inc
ss
cs
cld
jnp
nop
outs
aas
mov
xchg
cld
addr16
inc
push
jl
(bad)
bound
sbb
ja
sbb
into
addr16
sbb
ss
pop
ret
ss
aam
lock
lahf
enter
pop
xor
sub
xor
in
clc
std
das
pop
sbb
or
xchg
add
hlt
jge
xor
mov
cs
jl
mov
xchg
or
out
pushf
pop
repz
and
jl
cmps
adc
movs
jl
jmp
shr
push
retf
push
push
add
xchg
lock
push
add
cmp
mov
lds
mov
jge
(bad)
ja
mov
adc
pop
mov
dec
jl
in
fidivr
mov
lods
gs
jl
and
jl
les
ret
sbb
cli
or
jl
push
(bad)
lahf
aad
pop
jge
push
test
mov
pushf
stc
cmps
inc
pop
add
jl
inc
popa
pop
icebp
neg
cwde
jmp
mov
mov
sub
xchg
jge
mov
fidiv
fdivr
ficomp
stc
call
iret
mov
(bad)
mov
sbb
push
dec
inc
jl
lods
and
pop
jl
fst
sbb
pop
loop
add
test
adc
cld
cmps
jnp
popa
and
push
fdivr
ror
aas
jl
lahf
outs
scas
out
(bad)
mov
fwait
pop
mov
lea
mov
(bad)
mov
rcr
outs
fld
imul
jbe
pop
lea
or
pop
pop
popa
mov
(bad)
fldln2
cld
mov
xor
mov
push
pop
popa
mov
push
outs
hlt
into
mov
mov
dec
sub
jmp
xor
jne
pushf
or
and
stc
dec
add
sub
shr
mov
fnstsw
dec
aaa
gs
mov
jno
pop
xchg
aad
(bad)
aam
std
or
cmps
and
test
ins
dec
je
in
jl
sbb
imul
xchg
mov
pop
arpl
mov
mov
enter
fsubr
movs
or
jbe
test
stc
loopne
cmc
mov
sar
add
xor
cld
jl
xchg
sub
sar
std
loope
inc
mov
pushf
fs
jne
jge
lock
test
xchg
jnp
adc
fwait
mov
push
aas
xchg
jno
sub
sti
fstp
rol
and
int
mov
or
adc
arpl
rcl
int3
xchg
adc
(bad)
clc
iret
mov
jle
(bad)
or
cmp
jecxz
cmp
jns
pop
pushf
fldenv
mov
popa
xchg
out
cs
jbe
cli
inc
loope
ror
cwde
mov
leave
jl
pop
push
and
(bad)
shr
loopne
jl
mov
out
or
inc
pop
dec
inc
pushf
fwait
xor
ins
(bad)
or
inc
pop
mov
mov
xor
or
fwait
jge
es
xor
movs
or
mov
mov
or
vpaddusw
xchg
cld
mov
int3
mov
movs
lock
mov
ja
addr16
ja
fs
xchg
push
xchg
das
mov
cmps
int3
pop
add
jg
(bad)
movs
pop
into
cs
sub
mov
fdiv
or
cdq
(bad)
dec
popa
movs
sbb
jl
test
loop
leave
iret
sar
mov
cmps
jl
xlat
(bad)
fcmovb
sbb
jmp
push
rol
in
test
les
pushf
push
inc
fldenv
push
inc
aas
adc
pop
mov
mov
call
push
std
jne
test
pop
in
pushf
enter
xchg
movs
mov
xor
in
mov
popf
shl
inc
lds
neg
scas
jno
push
push
mov
lods
pop
stos
test
sbb
adc
or
jl
cmps
leave
xor
jl
or
shl
aam
and
scas
push
jmp
jl
and
mov
ja
(bad)
retf
sub
shl
add
lds
pushf
mov
pop
icebp
lahf
add
mov
or
pushf
or
bound
in
push
fisttp
psrlq
mov
adc
div
or
jecxz
or
(bad)
cmp
arpl
jl
mov
add
ja
mov
adc
mov
ins
loopne
jl
dec
cmp
fs
lds
ja
mov
shl
(bad)
lock
adc
add
and
test
repz
ror
cmp
jmp
dec
hlt
add
jl
cwde
mov
cmp
dec
and
cli
xchg
in
mov
pop
push
ja
call
cmp
mov
cmp
dec
xchg
push
or
int
jmp
mov
add
lods
outs
add
adc
adc
jge
or
pop
cld
push
mov
inc
mov
jnp
stc
inc
retf
push
in
dec
repnz
mov
push
xchg
sub
popf
jl
add
sbb
mov
mov
adc
mov
pusha
cs
js
mov
sbb
gs
pop
out
mov
pop
nop
jecxz
mov
cmp
cmps
sbb
add
pushf
stos
add
push
aad
mov
mov
sub
daa
(bad)
ja
add
cmp
bnd
(bad)
outs
xchg
int
mov
out
pusha
and
ret
inc
std
mov
jl
rol
mov
jg
pushf
jl
mov
mov
scas
int3
retf
xchg
in
fdivr
pop
js
push
lods
pop
idiv
or
(bad)
mov
mov
xchg
push
inc
std
jp
jne
js
jg
push
fadd
push
cwde
inc
aam
pop
into
test
(bad)
mov
popf
sar
in
lock
not
seta
mov
pushf
dec
sbb
jne
jl
push
out
inc
xor
xchg
dec
outs
fucomip
pop
fdivr
push
fstp
movs
inc
fadd
ja
mov
js
xchg
add
adc
jmp
fild
add
jl
mov
(bad)
imul
out
jl
std
add
inc
jge
lea
aam
call
jl
xchg
leave
and
fistp
pop
add
nop
sbb
outs
jecxz
sbb
int3
int
adc
mov
jl
repz
mov
jns
inc
arpl
jmp
popf
sti
cmp
inc
push
ins
xchg
ror
jns
jge
in
aad
inc
add
adc
xchg
imul
loope
rcr
xlat
fstp
(bad)
cld
int
enter
xor
jge
sar
(bad)
push
sahf
fist
call
aad
(bad)
xchg
outs
outs
push
inc
out
cwde
cld
pop
push
or
jl
and
jmp
lock
ret
test
pushf
xchg
mov
fnsave
xor
stos
das
aad
mov
and
adc
lods
int
cld
outs
mov
jnp
ss
test
xlat
call
jg
in
ret
push
sbb
stos
cmp
cmp
lods
test
or
fcmovne
ja
retf
mov
mov
push
ret
shl
pop
jl
ds
scas
rcl
aas
jl
lods
fadd
jl
cmp
and
out
in
mov
repz
test
jno
add
add
mov
leave
push
inc
sbb
push
jl
mov
pop
add
fs
sub
and
pop
jbe
add
gs
adc
jl
(bad)
sbb
mov
fcomi
add
test
lock
sbb
gs
add
movs
retf
jmp
cmp
mov
mov
pop
cwde
push
pop
xchg
sub
sub
int
sub
outs
cmps
xlat
addr16
cmc
jl
xchg
push
sahf
inc
cmps
sub
cmp
sbb
mov
mov
popf
icebp
repz
dec
pop
movs
push
sar
idiv
aam
mov
inc
int
movs
pop
fwait
clc
jmp
xor
cmp
stos
or
mov
pop
mov
cmp
push
ds
xchg
rcl
xor
push
adc
sbb
cmps
sbb
cld
fstp
mov
cmp
dec
es
inc
mov
push
data16
sbb
or
push
int
cmp
adc
es
cld
mov
pop
jl
add
push
bound
xchg
hlt
dec
jo
outs
push
stc
cld
into
push
div
jl
xor
jne
mov
jl
rcr
jnp
fnsave
push
push
cmc
test
retf
mov
sbb
push
fwait
xchg
ins
pushf
sbb
shr
sub
sbb
ret
into
add
call
mov
outs
sub
push
sub
cmc
sbb
jl
mov
inc
or
sub
scas
jl
pop
rol
icebp
fnstcw
sbb
lahf
aad
jl
sub
test
mov
fisubr
jl
nop
or
pop
jl
xchg
mov
aad
in
popa
cmp
mov
fucom
das
inc
in
in
jl
xchg
and
out
jl
xor
jno
push
pop
pushf
mov
mov
jnp
lahf
xchg
sbb
in
sub
aam
xchg
jmp
(bad)
leave
movs
sub
(bad)
fldenv
or
cmp
shl
mov
pop
push
(bad)
mov
fsubr
test
jl
adc
or
cmp
mov
mov
call
pop
dec
xor
in
aam
out
int
mov
jl
push
xor
inc
add
jl
add
bound
jno
mov
pop
jl
push
jecxz
push
add
push
add
std
push
jl
sbb
pop
push
icebp
dec
mov
int
mov
mov
mov
xchg
idiv
sbb
pop
aad
or
sub
dec
jge
mov
sub
outs
mov
dec
jl
imul
push
push
dec
jl
fld
loopne
inc
xchg
hlt
add
int3
sbb
(bad)
dec
mov
leave
fbstp
fs
cs
das
mov
xor
test
aaa
ja
or
push
gs
and
inc
add
popf
xchg
pop
sbb
jmp
repnz
jae
jl
das
xchg
ror
std
cmp
mov
jnp
outs
cmps
jle
jbe
adc
cdq
fnstsw
out
mov
(bad)
jl
sbb
sub
(bad)
fisttp
fs
fldcw
lods
ds
xlat
dec
xor
mov
pop
fnstcw
mov
xlat
xchg
jmp
ds
loopne
fwait
pushf
push
xor
fmulp
jl
jg
jmp
add
cmp
and
jl
jns
jb
push
mov
jl
push
nop
test
mov
mov
and
sub
add
jge
sbb
test
mov
push
jnp
fisub
stc
cmp
pop
call
xor
adc
push
pop
xchg
mov
cmp
cdq
and
test
mov
out
fisubr
hlt
repnz
jmp
dec
cmp
jl
pop
adc
adc
dec
daa
jp
cmp
sbb
mov
mov
shr
ja
pop
mov
fsub
jmp
sub
ret
inc
stos
(bad)
cdq
cmp
push
or
push
adc
add
fsubr
add
jl
add
push
(bad)
and
std
jl
adc
bound
xchg
adc
jl
mov
and
pop
jne
pop
xchg
(bad)
push
mov
rcr
neg
cld
icebp
ja
fisubr
mov
ins
jge
cs
loopne
dec
std
dec
imul
pop
fnstcw
or
ins
enter
inc
adc
fwait
xchg
cmps
(bad)
adc
das
nop
xor
and
jl
inc
xor
add
pop
jl
lods
jmp
fs
and
aad
sub
cmps
jge
cmp
out
push
or
(bad)
jl
dec
mov
imul
pop
xlat
ja
xor
jl
scas
pushf
pop
mov
and
push
in
popf
jg
into
jge
sub
sbb
icebp
sar
test
nop
jl
xchg
push
inc
ins
jge
stc
lods
(bad)
lods
sar
pushf
dec
pop
jnp
push
xchg
(bad)
call
je
push
int
jmp
clc
jne
or
fstp
lds
in
fcomp
(bad)
ret
cwde
xor
movs
or
push
cmc
stos
add
cld
dec
sbb
inc
call
mov
rcr
pop
je
ret
inc
push
lds
retf
jmp
pop
popf
in
or
mov
ins
cmps
in
jl
sub
(bad)
aaa
mov
fcomp
std
ds
sbb
repz
jl
adc
jmp
xchg
fstp
shl
test
sahf
outs
cwde
ss
movs
stc
int3
pop
jl
push
mov
jl
test
imul
mov
mov
outs
fstp
(bad)
push
int3
pop
sbb
sbb
jmp
outs
scas
xlat
std
aam
mov
cld
mov
fisttp
jae
mov
jl
mov
cmps
mov
call
lahf
or
int3
mov
ja
sar
cmp
data16
jmp
cli
jl
aas
or
outs
inc
mov
(bad)
mov
and
inc
sub
ins
xor
or
cwde
in
(bad)
cmp
xchg
popf
jl
ret
(bad)
movs
fsub
pop
jl
mov
inc
imul
(bad)
scas
das
jge
js
cmp
adc
jl
dec
lahf
fiadd
or
jl
pop
ret
das
mov
xlat
sbb
sbb
fnstenv
or
pop
mov
jmp
dec
pop
cmps
mov
in
mov
xchg
fstp
sub
mov
cld
push
cmps
push
jl
fisub
jbe
xchg
xchg
into
pop
hlt
jl
int
rcl
shl
outs
dec
fst
xlat
sub
jne
(bad)
xchg
jecxz
jbe
cmc
imul
xlat
jae
pop
cld
es
mov
lds
aas
fwait
(bad)
sbb
pop
outs
clc
loope
xor
das
mov
cvtps2pi
inc
cmp
sub
ror
movs
jl
xor
(bad)
push
or
ss
xlat
lods
data16
mov
pushf
outs
adc
outs
mov
out
or
sub
cmp
div
push
jl
xor
dec
mov
ss
and
int3
cmc
adc
mov
popf
sbb
into
stos
xlat
jl
or
adc
mov
mov
ins
test
push
add
jnp
sub
xor
mov
push
push
lahf
push
shr
add
outs
and
cmp
jl
xor
repnz
hlt
sub
jb
or
mov
loop
imul
pop
add
or
jl
dec
and
jge
pop
(bad)
mov
dec
sahf
adc
je
dec
hlt
or
push
fsubr
dec
js
or
loop
jecxz
fs
mov
mov
in
cli
push
cmp
adc
outs
lahf
cld
das
int
les
jl
jecxz
stos
push
sbb
jge
dec
in
sbb
mov
int
xor
mov
mov
popa
pop
jns
cld
(bad)
inc
(bad)
jl
sti
sbb
inc
push
bound
in
cmc
mov
outs
icebp
std
lahf
sub
mov
dec
sar
add
or
ins
jne
sub
jl
int3
aas
adc
dec
push
in
jl
call
and
sbb
cmp
in
mov
cmps
jl
(bad)
aas
add
test
pop
mov
mov
lods
movs
std
sbb
loopne
loope
xor
jge
test
cld
fs
mov
std
fldenv
aas
adc
mov
push
retf
sar
inc
sar
das
xchg
xchg
sub
mov
pop
lock
dec
cld
adc
icebp
jnp
pop
pop
int
stc
mov
je
jl
sub
cmps
xchg
jmp
data16
inc
ja
or
aaa
push
mov
inc
leave
mov
mov
inc
movs
sub
ds
mov
aaa
or
jmp
ins
mov
push
in
retf
data16
shl
jmp
ret
pop
shr
bound
mov
sahf
jl
nop
out
cmp
les
in
test
movs
sbb
mov
mov
adc
in
inc
int
jl
bound
add
stos
rcr
shr
jne
cmp
sti
adc
sub
mov
pushf
(bad)
mov
xchg
xchg
dec
cmp
cs
scas
ret
aas
jno
cld
dec
adc
retf
outs
xor
xchg
cmc
pop
push
add
fcom
popa
or
vandnps
into
sbb
jnp
inc
fs
call
es
inc
inc
mov
xchg
jl
aad
mov
cmp
sub
sbb
aaa
cmp
push
lahf
inc
cmp
imul
jl
je
(bad)
xchg
jp
inc
push
dec
pop
lahf
sbb
mov
add
or
push
jb
jmp
jl
jmp
xchg
loop
fucom
outs
sub
inc
out
cli
int
sbb
scas
ja
nop
or
popa
or
lds
imul
xor
fadd
cmp
iret
pop
xor
icebp
jge
mov
xchg
sub
test
inc
retf
dec
cmp
mov
dec
ins
call
jl
mov
inc
pushf
inc
inc
inc
outs
or
outs
jl
clc
les
jl
lahf
fistp
jl
lds
jl
aas
arpl
jl
adc
lahf
inc
pop
popf
loopne
xor
mov
int3
scas
pop
cmp
(bad)
dec
js
pop
jl
mov
jge
cs
cmp
push
cmc
mov
(bad)
mov
aas
pop
and
mov
stc
out
aam
cli
or
lods
jecxz
jp
inc
test
dec
pop
cmc
push
xchg
adc
jl
jp
lods
jb
inc
dec
pop
cld
stos
cli
mov
es
sub
cmps
jae
mov
xchg
cmp
das
pusha
push
xchg
loop
test
inc
(bad)
bound
pop
inc
cmps
jl
out
mov
jl
inc
fcom
and
sub
mov
inc
cld
pop
pop
dec
adc
mov
pop
inc
sbb
xlat
std
mov
dec
mov
lods
sbb
ins
pop
repz
dec
arpl
pop
ins
aam
rol
mov
ret
out
lods
pop
mov
jge
rcl
out
out
push
xlat
nop
pop
fidivr
mov
inc
dec
ins
int3
(bad)
(bad)
(bad)
cs
jl
in
pop
pop
push
xchg
mov
adc
imul
mov
mov
aas
push
pushf
xor
or
jl
pushf
xlat
(bad)
out
stos
(bad)
popa
icebp
imul
sbb
gs
imul
mov
mov
shl
fistp
pop
dec
lock
pushf
adc
xlat
cmc
bound
cmp
sub
iret
inc
and
in
jl
dec
mov
nop
out
inc
jb
loop
aas
retf
into
xlat
jl
sub
xchg
jl
mov
xor
outs
in
jl
jecxz
jmp
pop
cdq
lahf
pop
pop
aam
or
jle
retf
push
ret
cdq
shl
iret
enter
test
inc
popa
cwde
movs
stc
loope
std
jno
and
jl
pushf
push
in
and
pop
ror
sub
jmp
dec
adc
jl
adc
push
pusha
inc
out
cmps
jl
add
jl
pop
push
inc
sub
sub
pop
push
jno
dec
addr16
inc
ds
cmp
std
std
adc
inc
ins
out
jg
call
ja
mov
mov
mov
inc
push
out
xlat
(bad)
(bad)
rcl
sub
jmp
pushf
test
jl
cmp
pushf
inc
and
mov
mov
jnp
jg
push
enter
mov
dec
and
jl
jecxz
loop
jg
out
jl
jmp
ja
push
push
mov
pushf
gs
ins
and
fdivr
push
in
fldenv
jl
mov
inc
push
je
imul
xchg
and
and
jl
push
push
sbb
add
pop
inc
bswap
icebp
das
and
mov
inc
out
std
repz
and
hlt
sub
jecxz
dec
mov
inc
inc
jl
aam
push
dec
push
cmp
sbb
fdivr
in
push
aad
sar
or
inc
ret
jnp
bound
ss
rcl
repz
or
jl
sbb
push
fldenv
arpl
enter
into
mov
jmp
mov
jno
jl
leave
in
std
daa
fdivrp
outs
int
stc
arpl
loopne
pop
in
call
sub
out
mov
data16
cdq
mov
gs
jl
test
push
inc
or
leave
jecxz
xchg
or
xor
iret
sbb
fnstenv
test
sbb
cmp
ja
ins
inc
in
fdivr
xchg
retf
xor
jno
lea
jl
mov
aad
imul
jnp
aas
movntps
inc
jl
neg
mov
pop
jnp
in
mov
sub
jl
out
jp
and
fnstenv
cmp
dec
lds
out
pop
and
adc
test
lea
jl
pop
std
loopne
pop
pmaddwd
xchg
mov
fbstp
jl
jns
cli
adc
mov
jl
push
data16
xchg
mov
mov
push
cmp
mov
les
jl
fxch
push
ds
jne
add
ror
cld
xchg
dec
jne
fistp
ins
retf
cmp
ds
stos
pusha
xchg
je
jl
fnstsw
aam
mov
cmp
sar
and
xchg
loopne
cmp
dec
into
scas
lahf
int
(bad)
popf
xor
xchg
cmp
mov
sbb
stos
jl
jb
jmp
sbb
cs
pop
cld
mov
jnp
or
inc
dec
aam
pop
dec
jl
jg
std
cmps
or
jge
pop
sub
shl
(bad)
jl
aas
cmc
add
sbb
int
push
or
xor
xchg
sbb
jecxz
(bad)
cld
push
jl
stc
mov
mov
loopne
jge
pop
(bad)
test
bound
ret
fstp
sbb
nop
jo
add
push
jl
int3
mov
rcr
int
mov
repz
lods
lea
jl
je
mov
jl
mov
int
pop
push
test
dec
in
mov
or
sub
cld
(bad)
aad
int3
inc
arpl
leave
cmc
push
rcr
pop
pop
push
cwde
sub
popa
xchg
in
stc
lea
jbe
inc
clc
pop
dec
inc
xchg
jnp
jge
data16
lea
outs
nop
int
inc
fdiv
mov
sub
iret
mov
add
outs
icebp
stc
out
int3
jl
ds
ja
jge
imul
jl
std
mov
xchg
pop
test
idiv
inc
mov
movs
xchg
jl
mov
leave
fcomp
js
addr16
imul
aam
mov
fwait
outs
es
cs
icebp
hlt
clc
(bad)
or
cmps
fadd
fnstenv
xchg
(bad)
fist
mov
cld
inc
sbb
sub
mov
xchg
addr16
pop
mov
pusha
pop
cwde
retf
xor
pop
dec
push
xor
jle
movs
inc
add
call
mov
hlt
cmps
loopne
je
inc
adc
shr
mov
push
test
cmp
mov
jl
xchg
adc
mov
mov
dec
scas
sbb
loopne
pop
sbb
jl
repnz
mov
adc
scas
add
mov
push
lds
jae
xchg
aam
jmp
mov
jns
xchg
xchg
outs
outs
enter
mov
inc
pop
mov
aas
clc
mov
loopne
fist
push
fstp
mov
repnz
mov
cmp
jle
sbb
out
push
or
mov
jl
ror
movd
lahf
jl
pop
lods
xchg
mov
xchg
ss
hlt
sbb
cmps
jl
sub
(bad)
dec
sbb
jge
popf
jmp
sbb
out
adc
jecxz
xchg
ja
fnsave
add
mov
jae
add
outs
jl
xor
test
jmp
push
push
jnp
mov
movs
rcl
ins
ret
or
xchg
aas
aaa
xor
xchg
push
xor
ja
loopne
into
fdivr
push
sub
mov
pop
cmps
jg
mov
mov
fsubr
cmp
imul
jl
push
push
rol
stos
fistp
jmp
retf
add
jl
push
or
mov
add
jl
pop
lahf
push
fldcw
xor
(bad)
mov
pop
mov
mov
push
aas
xchg
mov
mov
cmp
dec
cld
stc
cmp
int
dec
pop
shl
inc
and
and
loopne
inc
jp
outs
and
pusha
pop
push
lds
sbb
aam
gs
(bad)
and
push
(bad)
push
inc
sti
cmp
test
adc
push
jl
in
out
dec
jno
pop
fwait
imul
add
mov
clc
cmp
adc
pop
push
or
jl
dec
inc
iret
mov
or
out
pop
fild
jl
jge
(bad)
sub
out
mov
xchg
out
sbb
cmp
cwde
pop
rol
add
or
push
mov
mov
mov
cmp
push
sub
pushf
into
(bad)
sar
and
jl
rol
std
jl
mov
add
pop
sbb
or
jl
ret
in
sahf
jg
cmp
adc
pop
jnp
dec
inc
js
sbb
push
bnd
repz
add
xchg
rol
retf
test
jmp
jbe
cmps
sbb
retf
es
xlat
sbb
push
neg
adc
out
fisubr
mov
mov
out
call
outs
jl
enter
mov
ja
rcl
rcr
int
push
in
jge
and
mov
mov
push
adc
scas
cmp
and
ss
das
xor
jl
icebp
push
leave
inc
cmp
jl
sub
push
ror
or
sbb
or
lock
inc
aaa
popa
retf
inc
fwait
cmp
or
pop
test
dec
call
jmp
xor
out
pop
scas
jl
jae
movs
dec
(bad)
push
jl
mov
je
push
or
or
push
loop
mov
outs
jecxz
test
cmp
call
jbe
pop
fnstcw
aad
popa
sbb
les
push
mov
test
in
add
mov
jl
std
xchg
inc
push
in
xchg
mov
jl
mov
les
in
aam
outs
mov
cwde
sbb
or
mov
jl
stc
rcr
fidiv
enter
pop
sbb
pop
not
clc
ja
lahf
addr16
ret
test
dec
jl
int3
pop
js
cmp
pop
sbb
pop
cld
push
lds
add
xchg
das
outs
adc
add
xchg
out
and
cli
in
pop
and
fnstcw
add
stos
js
push
out
mov
jb
clc
jne
lods
jl
nop
sub
push
jl
dec
inc
out
pushf
jne
add
idiv
rcl
or
lds
or
stc
mov
into
push
or
mov
pop
aam
cmc
pop
nop
mov
outs
jmp
pop
into
adc
cmc
xchg
nop
pusha
cld
xchg
ds
xchg
mov
mov
aas
pop
rol
popa
(bad)
jecxz
ret
adc
jl
mov
rcl
out
movzx
movs
sub
retf
fs
jl
and
js
adc
into
or
pushf
retf
neg
fmul
scas
es
xchg
jl
lock
push
or
jl
mov
stc
inc
sub
jl
jmp
outs
mov
icebp
sar
outs
cmp
inc
add
jno
cmc
jl
add
movs
cli
adc
sar
loopne
fisub
push
dec
sub
ja
test
jnp
mov
in
sbb
push
imul
sbb
jns
(bad)
mov
fs
das
int
inc
push
jl
retf
lea
sbb
rol
xchg
daa
jl
mov
jbe
jl
out
jmp
in
lock
push
jl
xchg
and
je
inc
aad
call
push
das
pop
mov
out
add
jl
(bad)
add
push
pop
cwde
std
popf
jne
sar
jae
jge
jno
jl
sub
call
push
lock
jl
mov
inc
int
enter
ja
jl
aas
addr16
in
xchg
jl
mov
add
jp
xchg
mov
ss
mov
xor
shl
jge
lahf
or
jbe
jl
aad
(bad)
cld
ret
jl
je
scas
cmp
enter
loope
inc
jnp
xchg
cs
xor
jl
fdivr
or
fs
daa
dec
ds
xor
scas
cld
imul
pop
sub
sub
mov
aaa
jo
(bad)
mov
retf
jl
fstp
jne
(bad)
inc
pushf
sbb
push
sbb
adc
cmc
or
pop
out
mov
std
xchg
adc
dec
jl
movs
sti
cmp
pop
sar
aad
(bad)
scas
adc
mov
mov
xchg
jecxz
out
jge
jno
inc
lea
jl
xor
jecxz
fimul
in
int3
bound
int3
out
cs
test
aas
cwde
je
enter
loopne
add
int3
(bad)
aam
sbb
sub
mov
mov
das
pop
dec
movs
pop
push
cmp
dec
repnz
sbb
jge
ja
enter
mov
fwait
jl
push
sub
stos
in
ja
cs
xchg
stos
in
test
aam
fnstcw
jge
aad
mov
mov
(bad)
pushf
sub
pop
mov
jne
or
mov
jp
cmp
mov
(bad)
into
jnp
cdq
add
sub
pushf
xor
mov
fstp
outs
xchg
pop
push
mov
pusha
cmp
fwait
pop
test
sti
sbb
mov
mov
jl
push
add
push
add
cmp
or
dec
mov
mov
addr16
sbb
mov
cld
jne
pusha
aad
jl
adc
mov
jge
popf
cmp
or
aas
jnp
mov
into
sbb
pop
jl
mov
sub
pushf
jae
xor
hlt
or
je
pop
mov
mov
xchg
dec
xor
iret
jmp
pusha
dec
pcmpgtd
addr16
aaa
mov
push
cmp
mov
inc
xchg
out
shrd
jl
sbb
dec
push
aad
push
test
rcl
jne
movs
cmp
cld
xchg
mov
sahf
icebp
jl
loop
push
cmp
movs
mov
mov
iret
add
inc
mov
sti
or
fcmovnbe
xlat
out
stos
jns
movs
jl
sub
ss
sub
push
xchg
(bad)
jnp
push
jl
cli
cmp
int3
ja
cwde
jae
adc
icebp
dec
jl
adc
fnstcw
add
lea
jb
push
pop
or
ret
inc
in
call
or
daa
sbb
mov
loopne
fwait
je
push
nop
jl
stos
jmp
call
mov
mov
in
sbb
neg
sbb
jl
ret
enter
jl
ins
sbb
xchg
cmp
jge
cld
jp
mov
test
pop
xor
fdiv
mov
aam
sub
mov
shr
out
adc
mov
cmp
dec
or
(bad)
ror
xor
mov
cld
push
fidivr
out
fsubr
jge
pop
outs
sub
pushf
dec
push
cmc
jnp
inc
(bad)
mov
jl
push
ror
out
pop
mov
mov
ret
fstp
mov
(bad)
ja
(bad)
sub
fimul
in
xor
scas
sar
out
mov
jns
pop
cmp
nop
xchg
sub
xor
push
mov
add
mov
mov
mov
pusha
mov
movs
cmp
mov
addr16
pop
mov
jl
xor
or
mov
(bad)
jl
bound
into
cwde
sbb
pop
pushf
mov
mov
jmp
sahf
mov
jno
inc
les
push
lea
(bad)
data16
lock
das
mov
inc
retf
push
mov
stos
fwait
mov
dec
push
into
jno
outs
pop
push
jl
shl
xchg
mov
add
xor
push
push
shr
dec
jns
(bad)
mov
push
mov
daa
gs
stos
jl
fidiv
mov
sbb
sar
cmp
icebp
sub
jmp
pop
add
es
inc
outs
jl
and
mov
ja
call
pop
addr16
outs
jbe
pop
iret
xchg
(bad)
adc
mov
data16
icebp
push
jl
in
outs
mov
aam
cwde
xchg
jp
xchg
out
popf
in
pop
xchg
icebp
push
mov
jnp
mov
xor
adc
jl
jecxz
inc
mov
in
jl
pop
enter
leave
pop
jae
push
mov
retf
add
jl
imul
retf
iret
jae
test
cld
sbb
(bad)
fsubr
es
push
stc
arpl
cli
sbb
mov
cld
iret
xor
xor
out
mov
jb
jp
xor
movs
mov
clc
mov
sbb
mov
xchg
cmp
mov
cmps
in
pop
adc
inc
loope
int3
xor
jecxz
pop
push
out
sbb
cmp
mov
test
cwde
jo
mov
pop
stc
mov
cmp
dec
aam
and
ficom
mov
jl
nop
ror
int
test
les
cli
popf
dec
push
jbe
dec
mov
imul
jge
dec
popf
xchg
xor
jl
jmp
dec
data16
jp
mov
mov
and
add
rcl
js
inc
pusha
jg
fldenv
mov
pop
dec
mov
int3
mov
ss
lods
mov
rcl
rol
mov
jnp
ja
push
into
dec
repz
pop
add
lahf
sahf
mov
jnp
test
enter
inc
jl
push
cmp
mov
stc
jl
test
sub
lods
mov
mov
mov
mov
jl
cmp
dec
jl
jge
aaa
xor
dec
mov
jmp
and
or
pop
test
push
cmp
xor
pop
inc
(bad)
stc
sub
fild
jl
test
mov
jmp
sbb
pop
jg
xchg
xlat
jp
out
sbb
outs
int
repz
jg
xor
iret
aad
stc
or
sbb
jl
movs
jns
cld
push
xchg
jl
dec
push
and
jbe
repz
xchg
loopne
std
leave
(bad)
jl
daa
mov
pushf
stos
xor
xchg
fidivr
add
and
lea
cmp
loop
cmc
cwde
icebp
dec
js
jecxz
test
mov
(bad)
xchg
mov
mov
cmps
jbe
xor
adc
loopne
out
push
shr
sbb
sbb
cmp
cwde
jg
in
mov
push
cmp
(bad)
adc
ins
std
jbe
es
in
fdiv
jl
stos
mov
pop
dec
enter
std
xchg
xor
mov
ret
jecxz
push
mov
in
ja
std
cmp
(bad)
(bad)
cmp
dec
pushf
mov
sub
jl
jmp
outs
jmp
dec
jl
shrd
mov
mov
int3
ins
jl
lahf
and
add
cmp
ja
gs
and
bnd
and
fwait
xor
fdivr
out
push
jmp
xchg
mov
rcr
je
loopne
lea
loope
jge
mov
sub
in
ret
aaa
add
addr16
dec
push
lods
jnp
aas
sbb
cmps
aad
vcvtps2pd
or
mov
push
jl
pop
mov
enter
mov
push
jl
xchg
ss
fs
aad
xchg
pop
in
shr
fwait
pushf
jmp
arpl
(bad)
mov
xchg
and
jl
add
jl
iret
std
pop
push
movs
push
jl
cli
mov
(bad)
int3
dec
jl
mov
pop
stos
in
nop
and
jne
mov
movs
xchg
in
stc
mov
stos
xlat
push
fadd
std
pop
inc
lods
sbb
xchg
sbb
in
jns
(bad)
pop
icebp
mov
mov
es
xchg
rcl
mov
out
idiv
movs
test
mov
jl
mov
jge
aam
fidivr
pop
cmp
jbe
in
pop
xchg
aad
xchg
in
ja
sub
cmp
jmp
jl
repz
cli
mov
leave
retf
mov
test
cmp
add
adc
jl
punpckhdq
jl
ds
rcl
mov
mov
inc
daa
push
jl
inc
stc
add
sbb
scas
jno
pop
jne
mov
rol
scas
mov
imul
jge
mov
ffreep
fisubr
dec
fnstsw
sbb
jl
add
(bad)
dec
outs
loopne
xchg
adc
sbb
and
jl
hlt
xchg
xor
scas
nop
jl
ret
pushf
dec
arpl
jl
sbb
dec
cmc
hlt
jbe
jl
movs
jecxz
xchg
or
adc
mov
pop
mov
cs
adc
jp
xchg
add
dec
mov
stc
mov
jno
pop
xchg
icebp
frndint
fidiv
not
jl
(bad)
xchg
mov
in
call
sti
pop
mov
pop
mov
popf
jecxz
pop
push
(bad)
sbb
jg
outs
nop
enter
repz
adc
pushf
clc
mov
pop
scas
jl
cdq
inc
jnp
fwait
and
jl
push
xchg
mov
mov
mov
in
mov
add
jl
push
and
fist
ins
scas
and
fnstsw
fld
jl
stos
cdq
mov
jnp
cmps
sbb
mov
cmc
hlt
mov
leave
mov
xchg
repnz
lock
and
mov
add
ror
jl
cmp
sub
rol
pushf
hlt
sar
xchg
fst
addr16
mov
mov
lock
jp
cli
add
add
jl
call
mov
(bad)
nop
out
std
lds
jns
les
arpl
xchg
xchg
in
aam
cmp
movs
push
pop
jl
mov
aaa
loope
adc
jnp
add
xchg
rcl
mov
and
jge
inc
outs
pop
in
jl
cmps
idiv
movs
mov
(bad)
push
push
mov
fisttp
cwde
mov
mov
xchg
shl
push
cld
adc
(bad)
jmp
push
dec
add
xchg
(bad)
xlat
xchg
daa
mov
mov
(bad)
retf
cmps
add
xchg
pop
test
add
push
adc
sub
test
sbb
jl
shl
jecxz
jl
ja
(bad)
fsub
sbb
je
stos
test
fidivr
sub
jl
push
mov
(bad)
cmps
inc
cld
(bad)
movs
retf
jae
mov
stc
mov
ficomp
pop
(bad)
jmp
or
int
jp
pop
mov
or
cmp
in
dec
aas
add
leave
neg
ds
jl
shr
mov
cdq
or
jnp
mov
dec
fwait
js
mov
mov
sub
retf
jl
push
inc
int3
sub
rcr
jl
mov
cmp
sbb
jg
dec
aam
push
js
aaa
xchg
mov
sbb
pop
ins
sub
pop
fnstsw
mov
cmc
push
cmc
frndint
dec
xchg
add
mov
leave
mov
mov
test
outs
scas
aad
cmp
push
sbb
jl
pop
(bad)
jecxz
push
imul
sti
and
cs
jne
pop
enter
ja
idiv
mov
xchg
add
push
sub
and
in
or
jl
cmp
imul
mov
jnp
mul
dec
add
mov
jbe
or
xor
xchg
and
int
jno
fiadd
dec
je
enter
(bad)
cmc
int3
daa
jl
xchg
sar
mov
nop
mov
xor
(bad)
add
(bad)
pop
inc
cmps
xchg
movs
sbb
out
ss
clc
sbb
jl
sbb
jl
xor
xchg
jns
dec
jl
inc
or
jl
scas
rcr
inc
out
dec
jl
rcl
mov
adc
popf
pop
mov
mov
idiv
push
out
xchg
in
ret
test
jns
jge
cmps
jae
repnz
(bad)
xor
movs
xchg
ret
sbb
pushf
pop
jne
(bad)
xchg
pop
jl
or
call
adc
imul
outs
sub
pop
pop
mov
std
leave
jl
xor
lock
dec
and
inc
(bad)
test
(bad)
popa
lods
enter
(bad)
cld
ins
daa
sub
mov
gs
jns
outs
(bad)
sub
lods
pop
ins
and
addr16
stc
outs
jne
xchg
inc
sbb
jge
dec
add
imul
shl
cmp
and
sti
out
fdivr
fwait
inc
dec
cli
std
pop
add
or
push
mov
jg
push
fistp
in
xchg
inc
push
adc
xor
xor
lds
push
add
rcr
sahf
int3
in
ja
scas
dec
sbb
pop
fdivr
adc
fstp
sar
sbb
inc
push
cmps
bound
shl
or
iret
xlat
inc
and
sahf
addr16
into
push
rol
mov
imul
pop
mov
cmp
or
inc
stc
scas
dec
js
pop
ror
in
ins
cmp
mov
push
out
mov
adc
jmp
into
push
cld
push
pop
add
ja
or
(bad)
repz
out
jg
xor
xchg
push
pop
(bad)
mov
cmp
fdivr
or
pop
mov
stc
mov
jl
ins
mov
mov
aaa
gs
(bad)
cld
xor
iret
mov
arpl
int
lahf
jmp
jl
add
retf
stos
mov
sub
maskmovq
idiv
or
iret
push
int
jl
test
jl
inc
mov
aas
js
mov
cmp
sub
fisubr
and
adc
aam
mov
pop
mov
pop
mov
fstp
movs
and
mov
ins
repz
aad
sahf
cmp
sbb
fisub
cs
inc
jl
psraw
mov
fistp
push
mov
mov
mov
push
mov
mov
xchg
out
les
adc
call
xchg
xor
or
push
shr
mov
add
call
scas
ds
xor
pop
movs
clc
jl
xchg
mov
xor
jbe
adc
inc
movs
outs
inc
push
add
(bad)
cmc
aam
fs
jl
mov
jl
das
xchg
ins
xlat
jnp
xor
dec
push
iret
sbb
scas
inc
fldenv
sbb
lahf
dec
in
lahf
jge
xchg
std
vcvttsd2si
jmp
mov
jbe
mov
cwde
scas
xchg
mov
mov
int3
dec
movs
clc
jl
sbb
push
pusha
sbb
jl
fwait
sub
add
mov
mov
lahf
fdivr
(bad)
cmp
and
dec
les
pop
aad
jl
ins
and
xchg
or
std
popa
mov
sbb
xchg
cdq
cmps
jl
cmp
sub
and
mov
jge
and
sbb
pop
mov
cmc
jns
jmp
and
jne
inc
ja
pop
mov
int3
sahf
push
cmps
(bad)
jl
dec
repz
mul
(bad)
ja
cmp
das
ds
ret
xchg
enter
movs
inc
(bad)
jl
mov
jl
cld
jbe
pop
test
leave
jl
push
xchg
push
cmps
std
push
in
pop
fld
jl
jnp
mov
mov
jns
jl
xlat
sti
popf
jbe
adc
int
sub
mov
jmp
add
jge
jg
jl
in
loopne
bound
sbb
(bad)
sub
cmp
mov
out
test
jns
mov
mov
xor
aam
jl
xlat
xor
ficomp
inc
enter
jl
xchg
xchg
out
rcr
dec
inc
mov
test
pop
jge
push
cmp
leave
lock
movs
std
xor
aam
mov
jo
cmp
pop
dec
or
movntq
xchg
clc
mov
jl
pop
bound
xor
mov
xor
in
jl
inc
jne
xor
pop
jno
mov
mov
jp
dec
fwait
popa
push
jnp
and
sbb
mov
lods
pop
jns
sbb
xchg
xchg
sub
cwde
mov
jge
popf
and
dec
cld
prefetch
jl
lds
inc
sub
data16
loopne
jl
stc
and
mov
pop
mul
jl
outs
rcl
jl
rcr
call
jno
cmp
cmp
and
pop
scas
aam
push
xchg
mov
mov
push
push
xchg
dec
hlt
mov
xchg
jl
fs
or
add
jl
mov
sbb
enter
div
and
jp
cmp
clc
push
add
push
push
or
add
cld
jmp
mov
shl
xor
add
xor
ds
scas
aam
shl
mov
retf
mov
xchg
jl
nop
cmp
pop
mov
aad
jl
rcl
jo
ja
dec
(bad)
nop
jl
sbb
lods
(bad)
and
or
lahf
clc
mov
jne
push
fild
sub
in
dec
jg
fmulp
or
mov
ds
out
and
push
sti
pop
ret
mov
aad
fwait
mov
stos
mov
sub
push
gs
dec
ss
inc
jl
adc
sub
retf
(bad)
test
hlt
mov
lahf
fsub
dec
aad
jl
mov
mov
jl
pop
movs
scas
pushf
xor
popa
pop
imul
movaps
dec
push
test
lahf
inc
iret
retf
jl
cwde
mov
xor
jl
inc
xchg
jl
adc
mov
in
mov
pop
movs
push
xchg
and
mov
fmul
jo
retf
inc
xchg
mov
(bad)
mov
inc
push
cld
sub
adc
jl
addr16
std
(bad)
je
sub
jl
xchg
pop
shr
sub
nop
and
pop
shl
mov
outs
ror
jl
push
mov
aad
div
data16
jl
pop
push
jecxz
inc
sub
jl
add
sbb
cs
(bad)
pop
jge
jnp
jbe
sub
test
sbb
int
lods
xor
jecxz
call
cmp
add
call
or
sbb
cmps
ss
jne
stos
xchg
inc
mov
mov
test
jnp
outs
ror
jg
fidivr
std
push
jge
or
aad
add
lock
daa
jge
jns
dec
lea
cmp
cmp
into
cmc
stc
repz
mov
test
and
hlt
ficom
mov
dec
imul
(bad)
pop
mov
jl
(bad)
lahf
dec
mov
add
or
es
dec
ins
jl
pop
push
xchg
and
jnp
pushf
mov
ss
mov
jae
out
inc
shl
ret
pushf
stos
cld
nop
sub
ja
enter
int3
call
xor
add
sahf
pop
jb
inc
and
jle
jo
mov
in
aaa
iret
pop
daa
push
inc
fbld
jl
dec
mov
jge
mov
das
mov
cwde
popf
add
pushf
aas
(bad)
icebp
retf
sbb
dec
cmp
cmp
scas
pop
ds
lds
into
cdq
mov
pop
jmp
mov
fimul
aaa
movs
jl
stc
retf
fwait
test
pop
and
pop
lea
sub
cmp
inc
ins
jge
and
scas
movs
fldenv
jmp
pop
fisub
test
(bad)
ds
out
sub
jg
rcr
jmp
pop
mov
imul
test
jl
pusha
pop
xor
(bad)
lock
clc
(bad)
mov
mov
leave
stos
mov
jl
cmp
sti
lahf
imul
ins
pop
fsubp
daa
jl
push
pop
sub
jl
and
pusha
clc
jmp
out
xor
lds
jbe
cmp
jecxz
push
mov
in
jl
dec
adc
test
ss
and
dec
ja
aaa
xchg
or
in
add
inc
cwde
sbb
call
sbb
xchg
ret
jl
inc
adc
shl
aas
in
fsubr
add
stc
ret
pop
or
cmp
inc
cli
jl
(bad)
jecxz
sbb
mov
js
jg
mov
outs
(bad)
adc
mov
jmp
lock
and
lahf
pop
movs
daa
ds
xchg
cld
add
mov
jp
dec
fucomp
call
pop
sbb
or
stos
jl
push
dec
and
dec
xchg
xor
sahf
cmp
dec
retf
fs
inc
fdivr
in
out
jl
mov
pop
popf
imul
jl
outs
or
es
push
or
call
push
fild
and
mov
add
scas
leave
adc
dec
pop
std
fdiv
rcl
mov
jp
pop
outs
es
mov
lahf
pop
cmp
xchg
mov
jl
stos
push
push
ds
(bad)
lods
jl
push
mov
jl
jle
cmps
sub
sbb
scas
enter
mov
es
push
push
jl
pushf
push
in
hlt
rep
jg
jecxz
loop
ja
mov
xchg
mov
test
test
sub
mov
mov
fnstcw
xchg
shl
mov
xlat
int3
ds
cdq
jl
fldcw
mov
push
fidivr
scas
jne
cmp
or
mov
push
xchg
mov
sbb
lods
sbb
inc
jl
pop
sbb
cmps
or
xchg
lods
sahf
shl
in
adc
loop
stc
enter
jle
jo
xchg
aas
jnp
jp
sbb
mov
xchg
jb
jl
shl
mov
jl
push
xchg
leave
xlat
mov
inc
ret
dec
and
je
inc
mov
or
mov
sar
jl
xchg
movs
dec
(bad)
ins
jl
jmp
mov
add
sar
(bad)
mov
retf
add
(bad)
mov
cld
outs
fst
add
jecxz
push
(bad)
stos
jnp
push
adc
pop
in
ja
aad
mov
hlt
out
stc
imul
jl
add
mov
push
push
xlat
pop
pop
push
sar
jle
or
mov
mov
repz
adc
and
pop
int3
cmc
push
test
fist
pop
xor
add
fisub
pop
mov
pop
std
jmp
fucom
cwde
fistp
add
add
inc
fstp
(bad)
dec
addr16
or
jnp
aad
cmp
jnp
ror
mov
xchg
mov
pushf
xor
ret
sti
out
xchg
jl
jmp
and
push
popf
mov
xchg
push
scas
ret
cmp
adc
in
sub
pop
dec
mov
jl
push
lds
and
xor
push
repz
(bad)
jmp
jecxz
sub
out
mov
jns
test
in
(bad)
aaa
pop
ret
jl
js
mov
jl
ss
fnsetpm(287
aam
jl
repnz
lds
clc
shr
call
movs
call
cmps
test
test
adc
mov
xor
add
xlat
and
retf
stos
jl
movs
sbb
cdq
cs
int3
in
not
mov
lahf
aas
push
push
xor
sbb
stc
inc
aas
jl
fadd
les
adc
or
rcr
mov
jmp
xor
mov
mov
lock
rcr
ror
xchg
test
int
or
push
mov
jnp
hlt
call
rol
in
mov
cwde
push
pop
sbb
jl
xchg
icebp
mov
les
das
out
repz
popa
imul
jbe
and
je
inc
movs
push
or
xor
add
fld
and
cmp
push
inc
add
lds
jl
mov
push
imul
jl
sbb
mov
repz
pushf
inc
sbb
data16
sar
leave
(bad)
loop
ret
ret
les
inc
les
mov
std
inc
hlt
cmps
dec
cwde
shl
leave
sub
inc
jl
xor
and
dec
(bad)
cmps
pop
mov
add
add
jbe
dec
addr16
mov
into
aad
cmp
dec
jmp
or
jecxz
add
add
(bad)
int
call
movs
enter
xchg
adc
sub
ds
push
mov
sbb
adc
xchg
lahf
jmp
cmp
sub
lods
jle
jl
mov
mov
cmc
push
ss
sub
retf
jl
arpl
sbb
ret
dec
imul
test
mov
mov
mov
pop
sub
push
cld
scas
ror
clc
cmp
inc
repnz
push
jmp
scas
int3
sbb
jae
inc
mov
test
dec
jecxz
dec
push
pushf
mov
pop
push
lods
mov
lds
ret
test
fwait
mov
jne
repnz
sar
repnz
mov
enter
mov
jl
outs
cmp
int
pop
cmp
mov
dec
xchg
sub
mov
jl
inc
(bad)
sub
mov
out
cmc
mov
outs
mov
inc
out
add
sbb
fld
pop
mov
xchg
jl
mov
add
jl
xchg
sbb
add
fwait
leave
push
in
xchg
mov
jns
int
push
(bad)
cld
xor
outs
and
mov
dec
fcmovb
mov
xor
call
inc
cmps
or
xor
mov
push
out
xchg
jl
mov
add
jl
inc
push
or
into
cmp
xchg
hlt
sbb
cdq
lea
in
jp
sbb
fsub
dec
pop
xchg
out
shl
sahf
outs
cmp
and
out
scas
out
mov
addr16
or
and
(bad)
mov
lods
arpl
push
pushf
std
scas
inc
sbb
sar
jl
xchg
cmp
sbb
push
and
(bad)
clc
adc
cmp
aad
xchg
fnsave
jl
(bad)
sub
stc
loop
aam
sub
and
lea
sub
mov
mov
out
xchg
jl
dec
(bad)
imul
ins
loop
and
xor
fidivr
mov
cmp
add
out
sub
inc
and
cld
mov
mov
rcl
cmp
jnp
push
test
inc
dec
xchg
cmp
jne
ror
in
fld
cmps
ins
xchg
xchg
and
pusha
mov
and
movs
or
and
mov
out
dec
cmp
inc
and
call
adc
jl
xor
cli
rcl
std
xchg
stc
push
call
cmp
mov
neg
jl
(bad)
(bad)
adc
lods
ins
mov
outs
add
leave
push
xchg
jl
and
fs
fisttp
mul
repnz
mov
cmp
shl
jae
push
and
mov
jl
ds
bound
ins
lahf
cld
pusha
push
sub
dec
adc
jge
sbb
test
jp
mov
scas
dec
sbb
call
je
jecxz
push
mov
fmul
jl
lods
lahf
adc
jl
mov
shl
mov
pop
cmp
in
jl
aad
cmp
add
mov
jge
cs
jl
jmp
dec
div
(bad)
popf
inc
cmps
aad
fld
sub
adc
dec
test
mov
xlat
jl
jb
movs
jns
sbb
or
daa
cld
push
cmp
test
dec
shl
bnd
es
inc
push
adc
gs
jl
dec
int
retf
push
scas
test
cwde
add
movs
mov
scas
xor
bound
dec
cmp
sar
push
jl
enter
dec
shl
jl
pushf
sar
stos
dec
out
inc
cmc
jae
jl
pop
movs
xor
(bad)
in
call
pop
jl
(bad)
fcomp
jnp
inc
hlt
rol
cmps
ja
or
push
sub
mov
movs
outs
sbb
loop
fsubr
aad
xchg
jl
stos
in
hlt
dec
pop
lea
cdq
push
adc
mov
cli
push
pop
jge
div
sub
xor
mov
jb
jnp
or
ret
inc
loopne
icebp
in
jl
in
outs
cmp
jl
mov
(bad)
outs
inc
mov
dec
jmp
mov
rcr
jl
adc
addr16
jmp
adc
jb
mov
adc
call
int3
jmp
gs
lahf
ins
pop
pop
pushf
ins
add
xchg
adc
stc
fucomp
jl
inc
xchg
mov
sub
popa
push
leave
push
rcr
dec
jl
outs
add
sbb
xlat
ret
mov
and
pushf
sub
mov
xor
mov
lahf
loop
mov
and
pop
into
inc
jo
add
cli
retf
ja
in
data16
daa
retf
pop
add
fdiv
adc
aam
fldenv
icebp
les
inc
mov
shl
test
adc
jp
jle
dec
add
push
cmp
jg
mov
fadd
div
or
scas
jge
aas
(bad)
(bad)
std
inc
xlat
jae
and
jl
push
test
or
sahf
sbb
(bad)
jge
jp
pop
imul
std
sub
aad
sti
jnp
mov
mov
mov
xchg
pop
dec
dec
add
ja
or
lahf
dec
mov
rcl
xor
and
cld
ja
sub
imul
or
ret
mov
sub
sub
test
mov
dec
into
(bad)
mov
add
call
jl
or
inc
movs
outs
xchg
jge
sub
push
xchg
adc
fnstenv
sbb
cmp
and
sbb
xor
cmps
mov
fstp
mov
jg
or
adc
inc
xor
bound
push
inc
gs
outs
and
add
jle
mov
ss
inc
xchg
fild
cld
loope
mov
jl
jno
pop
mov
enter
cld
pop
shr
inc
loop
jl
in
jbe
ja
cli
jne
xor
aaa
cs
aam
cmc
jp
movs
cwde
pop
out
cmps
and
xchg
aam
std
jl
pusha
das
push
repnz
mov
addr16
or
jl
rcr
mov
push
add
jmp
ins
xor
mov
sbb
dec
outs
jmp
cld
ins
int
jp
jnp
adc
dec
jmp
(bad)
test
fidivr
sub
jge
cld
push
push
pop
jg
push
sbb
fsubr
scas
cld
jge
mov
jl
pop
jnp
in
arpl
pop
(bad)
dec
(bad)
sub
(bad)
jl
fidivr
xor
mov
xchg
cld
dec
lods
cli
leave
inc
jl
push
fwait
dec
push
mov
out
jl
shl
mov
leave
js
mov
(bad)
jl
mov
nop
clc
jge
into
sti
fild
xchg
mov
shl
imul
sbb
icebp
add
dec
jl
je
(bad)
enter
and
ret
jl
ret
sub
jg
addr16
pushf
jmp
jge
push
lahf
cwde
mov
retf
leave
xor
mov
jnp
lds
out
outs
ficomp
paddw
xlat
xor
or
out
dec
jl
ret
mov
add
jl
fs
rol
jl
rcr
sbb
push
push
stos
lods
into
push
jl
mov
add
movs
mov
jl
mov
jo
jl
in
mov
adc
sub
cdq
or
jecxz
push
dec
jge
(bad)
outs
or
jnp
retf
ss
dec
or
jl
cld
test
shl
jns
jl
sahf
(bad)
adc
pushf
fild
or
and
adc
push
fst
movs
push
out
jl
das
pushf
neg
imul
jge
fcomi
(bad)
(bad)
mov
in
pusha
pop
lahf
jge
adc
lea
lds
sahf
or
mov
ror
jl
pop
int
aam
leave
sbb
xchg
mov
retf
(bad)
push
fcomp
mov
cdq
movs
sti
jge
(bad)
fidiv
mov
or
jl
test
pop
mov
call
pop
fld
jl
sub
mov
jmp
xchg
cmp
push
dec
repz
pop
sar
mov
stc
cmp
pop
mov
test
lods
cmp
stc
mov
into
outs
and
das
mov
xchg
jl
cmp
loope
mov
jae
jns
pop
cld
mov
icebp
pop
jmp
mov
lds
jne
stc
out
jl
mov
cmp
xchg
sbb
jnp
mov
fsub
jl
lea
jae
arpl
in
in
sbb
mov
js
dec
push
xchg
lea
lahf
sahf
mov
dec
mov
daa
mov
cmps
ds
pop
sbb
sbb
mov
jl
movs
sbb
jp
ins
mov
pop
dec
sahf
jl
pop
mov
addr16
shl
jne
popf
jmp
sub
mov
jecxz
fistp
dec
and
ja
or
int
ds
jae
lods
movs
sbb
nop
cmp
retf
cmp
movsx
rol
out
mov
ds
adc
lods
nop
push
cmp
imul
push
fnstsw
push
cmp
and
ret
inc
inc
pop
push
(bad)
fsub
or
jl
test
movs
sbb
aad
cmc
adc
in
jp
(bad)
ins
enter
sti
call
movs
fstp
cmp
cmps
adc
mov
iret
jl
or
xchg
mov
repz
jl
sbb
int
jl
nop
pop
and
jmp
cmp
test
jl
cmp
repz
jge
cmp
ficomp
outs
rcr
cmp
fimul
push
jl
xchg
push
inc
test
adc
mov
ret
jns
jp
clc
inc
cld
mov
out
mov
xchg
mov
mov
sbb
(bad)
jl
adc
and
outs
shl
pop
mov
fbld
mov
push
ret
mov
iret
rcl
xor
xor
aas
cmp
push
dec
mov
xchg
mov
nop
jl
pop
int
mov
(bad)
sar
mov
jne
dec
pusha
les
fnstsw
xlat
pop
xchg
and
pushf
pop
adc
loope
out
xor
push
xchg
pop
jl
add
nop
cli
idiv
sar
push
inc
lock
repz
frstor
jl
pushf
or
push
scas
fnstenv
jl
and
or
sbb
push
ja
mov
jecxz
test
lds
(bad)
push
fnstsw
int
jl
adc
inc
add
mov
cmp
iret
xchg
in
jl
push
aad
jmp
jl
jns
sbb
lea
xor
jl
add
jl
cdq
mov
movzx
ret
mov
cmps
mov
cmp
and
xchg
xchg
push
rol
inc
in
mov
out
jl
push
push
sub
(bad)
jns
mov
cmp
mov
mov
mov
push
pop
mov
jl
(bad)
hlt
mov
retf
fld
ror
inc
jl
jns
pop
pop
addr16
xchg
pop
cld
int
shl
jl
dec
xchg
shl
mov
jle
sahf
cdq
mov
dec
jge
mov
ror
jb
and
loopne
xchg
and
and
push
inc
into
mul
pusha
out
mov
fstp
or
mov
inc
hlt
test
es
out
retf
xchg
add
repz
leave
shr
iret
mov
sbb
aad
adc
inc
xor
mov
add
setg
lods
popa
mov
mov
jmp
pop
xchg
int
mov
lods
pop
mov
das
push
dec
ins
sub
mov
aad
mov
xchg
xchg
add
mov
cli
xor
ins
and
nop
mov
jl
out
jne
mov
loop
and
rcr
jl
ins
aad
inc
call
das
pop
test
and
retf
shl
xlat
(bad)
cld
mov
movs
pop
cmp
push
lods
leave
mov
pop
movs
mov
mov
mov
push
jl
mov
ins
jl
pop
or
jl
mov
mov
jl
jne
sbb
adc
mov
sub
xor
dec
push
pop
ja
fnstcw
rcl
mov
cdq
dec
mov
mov
jl
leave
retf
mov
mov
lods
in
lahf
loop
ror
cdq
jnp
pminsw
repnz
outs
push
push
adc
shr
cmp
test
loop
dec
pop
and
push
fistp
add
jl
pop
aas
idiv
cmps
push
in
rol
jnp
retf
dec
loop
(bad)
in
div
jl
lods
xchg
jns
mov
inc
scas
mov
jl
push
sbb
pusha
jl
fstp
jl
icebp
push
aad
fisub
mov
mov
xchg
mov
or
xor
mov
mov
dec
imul
ins
pusha
fcomip
rcr
dec
dec
(bad)
lods
cdq
mov
mov
push
and
leave
cwde
push
movs
jmp
pop
hlt
aam
mov
stos
jl
(bad)
ficomp
ja
adc
call
or
pop
jge
sbb
leave
fidivr
push
jl
cmp
cld
jecxz
call
jl
push
ret
mov
gs
fnstsw
js
jae
fldcw
mov
outs
fdiv
fistp
add
mov
popf
pop
xchg
jl
sbb
ins
int
daa
jl
das
sub
stos
mov
jl
mov
in
out
jne
lock
push
mov
pop
sbb
mov
cld
mov
rcr
fstp
iret
lods
add
mov
jl
(bad)
dec
popf
sbb
mov
inc
test
in
ja
fwait
mov
jbe
sar
pusha
xchg
jl
mov
leave
js
das
mov
enter
mov
cmp
push
push
mov
push
div
ficom
add
jno
fwait
jl
ins
ror
int3
ins
imul
fdiv
jp
jnp
dec
popa
cmps
loop
mov
dec
fdiv
cmp
mov
pop
sar
inc
sub
fadd
stos
retf
push
mov
inc
push
jl
pop
pop
paddsw
js
imul
hlt
jl
addr16
arpl
fisttp
push
sub
jl
ins
inc
ror
sbb
outs
ret
stc
pop
arpl
mov
jg
enter
leave
inc
dec
movs
inc
lahf
out
xchg
mov
inc
dec
int
idiv
(bad)
pop
cdq
call
test
push
(bad)
(bad)
jecxz
(bad)
mov
fcmovbe
xlat
sar
jge
cmp
mov
test
fsubr
jl
mov
ffreep
jp
jg
mov
pop
mov
mov
jl
cmps
sbb
or
mov
or
add
pusha
fdivr
loope
call
test
fldcw
out
jecxz
sub
rcr
aaa
xchg
outs
mov
jl
iret
mov
cdq
ror
push
bound
jl
stc
jae
inc
mov
inc
pop
fdivr
cmps
mov
jecxz
jl
data16
adc
fisubr
call
pop
jl
jmp
arpl
pop
fsub
xlat
ins
mov
ret
xchg
fild
add
push
add
ins
mov
or
push
in
mov
test
cmc
std
inc
ds
jl
jmp
add
inc
push
sar
movs
movs
sahf
frstor
jl
cmc
scas
loopne
hlt
shl
dec
fdivr
push
ins
fninit
iret
xor
data16
sbb
popf
push
ds
jnp
scas
dec
ficomp
arpl
mov
ror
add
jl
iret
push
shr
jl
lahf
xor
mov
outs
dec
leave
add
sbb
sbb
(bad)
jl
xchg
jmp
inc
outs
push
mov
fisttp
adc
sahf
lods
xlat
mov
mov
ins
mov
mov
test
bound
aas
mov
scas
or
xchg
(bad)
xor
xor
punpckhbw
icebp
jl
jae
push
call
iret
push
push
xchg
das
xchg
cmp
loope
icebp
push
inc
stc
ret
sti
adc
add
aas
mov
jl
push
push
mul
mov
int
das
cmp
pop
jl
jge
(bad)
stc
jle
aad
mov
retf
int
adc
xchg
xchg
mov
mov
into
mov
loopne
int
mov
jl
xchg
push
aad
fst
mov
jl
lahf
fwait
push
mov
mov
pop
nop
push
sar
fdiv
outs
mov
push
pushf
or
cli
adc
enter
cld
push
mov
pop
shr
outs
jl
mov
mov
mov
test
inc
pusha
je
adc
push
xchg
mov
stos
sbb
push
lds
in
push
xchg
mov
out
cli
out
sbb
std
icebp
in
imul
jl
mov
push
test
xlat
mov
lahf
outs
sbb
fbld
mov
jbe
rcl
or
adc
jl
arpl
jmp
or
and
out
push
test
ffree
inc
jl
arpl
fdiv
sbb
stos
xor
add
lahf
jmp
jp
in
pusha
sbb
jl
xor
xchg
jl
add
stos
leave
push
ins
fs
jns
push
shl
outs
push
jo
push
pop
fstp
test
dec
cwde
aad
outs
adc
daa
les
mov
sahf
fyl2xp1
(bad)
jp
icebp
call
push
cmp
mov
jmp
mov
jl
(bad)
sbb
mov
dec
sub
push
dec
ror
pop
pop
clc
or
shl
mov
fisubr
mov
jl
leave
push
mov
jl
daa
stos
stc
sbb
push
push
mov
add
jl
retf
int
aas
in
jl
lods
xor
scas
lds
jl
dec
in
lock
rcl
jno
jge
xor
sub
mov
mov
lods
jl
pop
(bad)
inc
adc
jmp
ds
test
pushf
lods
sbb
test
jl
fst
add
lahf
pop
jl
inc
mov
xlat
jge
dec
outs
int3
pop
inc
adc
enter
repnz
cmp
cdq
inc
jl
ins
jnp
(bad)
pushf
mov
adc
pop
add
aaa
mov
ja
sub
outs
retf
pop
push
jl
mov
sbb
push
mov
push
(bad)
jl
mov
xor
mov
pop
cld
aad
cld
mov
mov
les
xchg
xchg
push
lods
ja
(bad)
arpl
pop
push
call
jl
mov
fnstcw
xchg
(bad)
xor
or
in
push
sahf
push
shl
(bad)
out
(bad)
push
scas
rcr
sub
pop
sbb
jl
aam
jno
mov
or
mov
fwait
lock
and
jl
cdq
popa
(bad)
and
(bad)
or
outs
ins
scas
pop
add
mov
movs
sbb
movs
dec
jmp
out
out
popa
aas
cmp
aad
fisttp
sub
mov
mov
or
and
lds
jl
add
cmp
jno
pop
add
(bad)
jl
cmp
fld
lods
ja
pandn
pop
(bad)
test
add
das
mov
sbb
jl
adc
sar
ins
retf
sbb
int
push
scas
pushf
add
fabs
sahf
cld
mov
(bad)
scas
jl
jae
lods
cmp
mov
ds
mov
or
pushf
fidiv
jo
imul
repnz
inc
rol
inc
pop
fcom
pusha
dec
mov
repz
movs
int
movs
jmp
adc
jl
xlat
mov
jge
dec
out
int3
popf
rcr
mov
hlt
jl
aas
sti
xchg
test
jge
mov
(bad)
jl
loopne
inc
add
outs
push
ror
cmp
dec
stc
mov
and
aam
pop
fldenv
cmps
in
fcom
mov
or
and
add
add
outs
mov
(bad)
out
pop
cwde
fdivr
sbb
arpl
push
mov
pop
jl
je
mov
mov
dec
pop
retf
jl
arpl
inc
xchg
xchg
scas
jno
scas
mov
xchg
out
push
ja
fs
sub
pop
jg
lahf
lods
push
mov
mov
loopne
clc
jl
xchg
shl
adc
movs
jl
stc
sahf
lods
lahf
mov
les
sti
aaa
test
jns
call
call
jge
popa
xor
hlt
dec
outs
mov
js
rcr
mov
fisubr
dec
xchg
xchg
ror
lea
cmp
inc
(bad)
stc
jb
mov
jl
cmp
pop
out
sbb
jno
lods
lea
pushf
popf
fisubr
(bad)
mov
jno
jmp
push
in
and
jl
cdq
hlt
mov
xchg
and
outs
dec
mov
(bad)
sbb
xchg
cmps
(bad)
cmps
sbb
xchg
xchg
mov
loop
cdq
leave
stc
scas
mov
ja
jl
(bad)
inc
jl
and
movs
call
cmp
fdiv
loopne
jl
xchg
jnp
iret
sub
or
aad
or
(bad)
neg
mov
cmp
(bad)
popf
mov
iret
xchg
add
stc
out
jl
or
ja
fisttp
cwde
add
jl
stos
push
mov
jl
ret
rcr
ja
ins
mov
mov
std
jl
sbb
pop
dec
and
or
ret
mov
adc
mov
push
pop
mov
jl
mov
mov
jnp
dec
(bad)
cld
adc
dec
cwde
jno
or
or
xor
mov
mov
ins
test
pusha
xchg
jl
pop
sbb
je
popf
ja
leave
fcom
fsub
retf
ins
into
push
lods
pop
xor
loopne
jl
mov
pop
mov
mov
mov
xchg
mov
mov
call
(bad)
cmp
les
push
mul
pushf
cs
push
sti
jl
xchg
loopne
mov
loop
jns
int
ret
cld
in
push
push
mov
xchg
sub
jbe
jl
cdq
cs
pop
adc
mov
or
outs
mov
pop
(bad)
sbb
push
xchg
fdivp
add
addr16
ins
sbb
jl
dec
add
in
jl
or
xchg
jge
sbb
ror
inc
or
add
dec
or
xchg
imul
outs
loope
lods
sar
pop
clc
push
sbb
cmp
mov
inc
mov
stos
test
fsubr
xlat
push
xchg
inc
or
mov
sti
aam
cld
and
xchg
rcl
mov
jl
ins
pop
(bad)
cmp
inc
dec
xchg
push
jl
mov
(bad)
mov
jmp
cmps
shl
ins
aam
jecxz
jl
xchg
fnsave
pop
cmp
enter
scas
cmps
hlt
jl
loop
repnz
jle
mov
sti
stc
enter
mov
ins
(bad)
mov
sar
xor
sbb
jl
pop
imul
push
aas
hlt
jl
push
lds
mov
movs
jl
mov
sub
iret
jl
push
movs
lea
loop
scas
addr16
retf
jl
mov
xor
stos
cdq
xlat
jl
call
mov
push
adc
call
xchg
fstp
adc
jl
fistp
lds
into
js
fidivr
shr
push
jl
push
test
shr
stc
inc
jl
inc
dec
cmps
push
aam
mov
lods
setle
ja
enter
mov
jl
pop
xchg
sub
jl
loope
inc
fild
mov
sub
aas
fcmovbe
cmps
adc
mov
(bad)
jnp
ret
pop
ja
in
adc
pop
(bad)
mov
jne
and
xor
loope
xor
aad
push
xlat
jl
add
cmps
pop
mov
jl
sub
fadd
sar
movs
mov
push
leave
jl
push
jnp
push
(bad)
or
jl
dec
fnsave
jl
out
mov
jge
xlat
jns
test
arpl
mov
push
add
pop
aam
dec
push
xor
pop
pusha
scas
or
push
sar
jl
push
lds
out
jbe
aam
in
rcr
das
xor
neg
aaa
into
jnp
mov
icebp
les
add
push
ja
outs
jbe
jl
jns
stc
mov
les
sahf
aad
frstor
fcomp
sbb
adc
pushf
push
scas
sar
movs
cmp
idiv
mov
xchg
jl
das
scas
adc
dec
mov
inc
lods
ja
and
lods
mov
popf
or
jl
mov
pusha
dec
cwde
or
test
std
xor
pop
inc
cs
jl
xchg
jl
popa
cmp
shl
cmp
int
or
push
arpl
jge
out
shl
pop
ja
mov
jno
cmp
scas
add
jl
fisttp
cmp
xchg
adc
sbb
fst
test
dec
out
in
adc
aam
and
sbb
or
jae
call
retf
movs
pop
in
fsub
sub
xor
push
retf
cmp
ds
jns
in
push
mov
jl
xor
lods
pushf
jl
(bad)
leave
jge
push
inc
in
int3
jnp
mov
jge
sub
pop
das
cdq
jl
call
push
jl
mov
and
dec
jl
sbb
dec
jl
push
loop
into
ja
xor
push
sbb
jb
mov
mov
mov
in
and
xor
neg
fcmovnbe
and
rcl
cmp
adc
into
add
(bad)
nop
mov
jl
dec
test
jns
cmp
fcom
mov
xchg
jl
add
mov
cdq
pop
adc
int3
push
inc
dec
jl
mov
popf
es
hlt
js
xchg
cdq
fwait
mov
and
(bad)
leave
inc
add
int
cmps
mov
or
xchg
mov
int
lock
(bad)
jge
mov
fstp
xor
push
and
sar
mov
dec
jmp
fimul
push
jl
sub
inc
xor
iret
add
jl
mov
push
pop
ins
push
sbb
lds
es
pop
in
jl
cmp
pop
adc
pop
fsubr
jbe
ja
push
(bad)
push
fisttp
or
int
hlt
mov
pop
mov
aam
sbb
jbe
hlt
jge
cmps
movs
call
js
bound
mov
ins
ret
jl
int
or
test
cmps
xchg
jmp
lock
loopne
sti
jl
add
ficom
sbb
les
frstor
pushf
dec
ja
add
add
xchg
jmp
fs
mov
lahf
cmp
jl
ficom
les
sbb
cmp
aam
ficomp
lahf
push
scas
(bad)
retf
mov
pushf
sbb
inc
adc
or
xchg
sbb
cli
jno
jl
add
mov
popa
call
sti
(bad)
loop
test
in
adc
sub
mov
popa
mov
jbe
xchg
and
ficom
aas
mov
rcr
nop
adc
mov
jl
(bad)
shl
mul
xor
push
jl
pushf
cs
push
outs
movs
pop
imul
cld
mov
mov
xor
std
xchg
jl
ss
mov
shl
aad
xchg
shl
int3
push
jl
nop
enter
clc
lods
jl
mov
gs
adc
(bad)
sbb
xor
test
sbb
cdq
jl
arpl
rcr
pop
and
cmc
lods
cmp
dec
(bad)
push
and
cwde
jne
jl
inc
retf
rcr
std
jl
mov
jge
jl
test
push
xchg
jge
hlt
jp
mov
jle
jle
stos
inc
inc
out
jl
and
ficomp
mov
call
int3
jl
inc
xchg
and
aas
push
scas
adc
(bad)
jmp
jl
rcl
mov
inc
jp
cld
xchg
pop
(bad)
pop
in
adc
mov
dec
repnz
xchg
pop
mov
cld
movs
mov
out
dec
aas
adc
jl
imul
jl
inc
retf
sbb
add
adc
cmp
jnp
imul
imul
addr16
pop
fdivr
xchg
in
inc
pop
mov
mov
test
jl
fcmovnbe
sbb
icebp
(bad)
out
xor
out
mov
outs
mov
stc
jge
mov
test
mov
sti
add
cld
addr16
inc
int3
cld
iret
mov
outs
rcr
sbb
retf
xchg
pop
loopne
outs
xor
popf
(bad)
test
movs
ja
or
call
jbe
loope
xchg
jl
sbb
jl
retf
xchg
lahf
shl
jl
and
sbb
push
jg
jge
or
out
ja
ds
pop
int
sbb
xor
cmps
arpl
mov
or
pop
out
scas
pop
sub
xlat
fcom
sub
pusha
outs
inc
in
jecxz
sti
or
mov
ja
pop
sub
stc
xchg
add
in
dec
shl
fadd
inc
mov
retf
sahf
push
mov
xchg
sar
push
mul
push
xor
and
mov
jp
adc
es
mov
add
sbb
or
push
jl
pop
mov
dec
cmp
rcr
push
jl
daa
pop
mov
mov
xchg
jl
pop
rcr
lock
outs
xchg
movs
test
data16
inc
jge
aas
sbb
pushf
add
mov
and
jl
sub
mov
jno
(bad)
fsub
(bad)
sbb
scas
cmp
or
ss
jl
push
ins
mov
mov
cmp
add
xchg
cmps
jl
lahf
xchg
mov
jg
or
(bad)
iret
outs
(bad)
fdivr
outs
mov
dec
mov
(bad)
jnp
pop
fnsave
cs
loop
jbe
pop
push
mov
jp
retf
cmps
sahf
cld
in
loopne
lods
fidivr
iret
stc
inc
je
cmp
mov
int
push
or
inc
and
loope
js
aad
adc
pop
out
fnstsw
xchg
fnstcw
rcl
jl
fild
sar
(bad)
arpl
xchg
js
jl
xor
out
stos
dec
int
mov
push
ds
xlat
and
xchg
outs
pop
(bad)
call
mov
jl
sub
mov
cmp
int3
or
int
xchg
mov
mov
dec
xchg
test
sub
push
mov
jl
mov
ror
jl
push
(bad)
fmul
aaa
mov
sbb
pop
shl
call
dec
fdivr
icebp
or
into
jnp
test
out
dec
xchg
fisttp
(bad)
pop
jl
xlat
cmps
fidivr
fiadd
cwde
(bad)
clc
fild
push
jmp
dec
pop
dec
ja
xor
mov
call
imul
ret
push
fldcw
jp
fcmovnbe
cmps
lods
push
jns
jl
pop
dec
(bad)
jecxz
in
int3
ins
inc
(bad)
fldcw
add
sahf
mov
jl
inc
jge
sub
push
xor
ins
jnp
pop
fidiv
mov
outs
int
push
mov
shr
popf
test
inc
jge
(bad)
bnd
mov
pop
mov
jne
jl
int
aam
sar
pop
push
adc
hlt
jl
jmp
fnsave
imul
ds
js
lahf
jle
loope
fstp
push
pop
jns
pop
xchg
sbb
mov
add
jmp
jl
shl
test
inc
push
jbe
sbb
add
pop
inc
cwde
iret
enter
jge
xor
or
(bad)
aas
and
jl
icebp
or
xchg
lahf
jl
leave
mov
mov
aad
cmp
mov
mov
xchg
test
mov
cmp
xchg
out
cld
sub
ror
aad
movs
xchg
int
test
loopne
cmp
popa
mov
fbstp
jns
xor
adc
xlat
cmp
fldz
ja
mov
in
inc
mov
icebp
rol
pop
or
xor
inc
push
(bad)
std
sahf
jl
into
retf
and
ss
(bad)
fistp
fmul
jl
xchg
(bad)
cdq
xchg
cmps
dec
(bad)
pusha
mov
mov
and
retf
dec
lahf
popf
lds
aaa
xchg
push
pop
ja
movs
push
mov
lds
pushf
jl
(bad)
sar
inc
push
pop
les
inc
sar
fcomp
xchg
hlt
into
push
(bad)
stc
sub
pop
xchg
adc
push
mov
jl
test
call
jl
inc
cmp
adc
ret
mov
fidivr
sbb
mov
jae
nop
movs
jecxz
movs
cld
xlat
fcom
pop
xchg
pop
in
fidiv
pop
lods
jl
popa
retf
rcr
jge
ret
cld
or
ror
jl
mov
lods
jbe
cmp
cmp
mov
test
xchg
jbe
lds
call
pop
fadd
mov
imul
jl
push
xchg
ret
dec
jge
pop
fiadd
sar
mov
xchg
int3
xchg
js
lock
popf
cmp
pop
ja
push
fimul
int3
iret
bound
jl
add
push
mov
mov
dec
mov
in
pop
adc
test
jl
rol
dec
jl
stc
inc
mov
sbb
dec
call
mov
out
ret
stc
ja
xchg
adc
aad
push
retf
cmps
jl
es
rcr
mov
pop
fistp
mov
fwait
shr
and
sub
jo
mov
cs
dec
jmp
mov
cwde
movs
mov
sti
shr
mov
mov
les
mov
sbb
push
mov
mov
fsubr
fsub
out
xor
jl
push
sub
shr
jae
adc
cld
sbb
mov
jl
hlt
not
push
popa
sub
jl
add
xor
mov
cwde
(bad)
(bad)
stc
xchg
into
mov
pop
push
mov
sbb
jl
loopne
ror
sbb
ja
pop
movs
jmp
pop
idiv
push
pop
stos
xchg
popw
imul
dec
xchg
hlt
jl
into
add
fdiv
ins
add
sbb
popa
mov
xchg
jge
pop
mov
sub
mov
sahf
cwde
jne
dec
pop
ror
dec
out
mov
out
mov
fldcw
pop
jae
cld
inc
aaa
add
into
lods
jle
ror
cld
test
imul
jl
int
mov
jl
xchg
mov
xchg
add
outs
or
mov
sub
jnp
xor
test
popf
push
dec
stos
jl
sbb
mov
cmp
aam
call
dec
sahf
jl
add
imul
xchg
das
aas
popa
or
xchg
xchg
jnp
xchg
cld
fnstenv
push
hlt
stos
scas
movs
jge
pop
sub
aad
outs
mul
aam
sbb
pop
leave
enter
pop
sub
shr
loop
(bad)
xor
test
cli
rcl
push
popf
cmc
cmp
ja
pop
jl
mov
sar
adc
(bad)
ja
jmp
data16
pop
ja
int3
aam
push
popf
(bad)
sar
sub
add
call
lock
and
int
jnp
into
push
(bad)
fst
pop
sub
ins
fdivr
cld
jl
mov
sbb
pop
pop
sub
xlat
or
rcr
or
inc
loopne
jl
push
std
xchg
fild
imul
jl
ins
push
xchg
(bad)
sbb
xor
dec
cmps
shr
jp
mov
cmp
mov
test
cld
cmp
jecxz
movs
add
xchg
in
sbb
push
mov
ret
and
push
mov
xchg
sbb
mov
mov
jl
or
in
pop
in
push
jl
(bad)
stc
dec
lods
fs
jl
popf
ss
enter
mov
xchg
jl
movs
sbb
ins
std
ja
cmp
cs
or
jl
shr
inc
adc
adc
push
shl
lahf
scas
jl
mov
xchg
jbe
push
iret
imul
jl
mov
cmp
loope
test
sbb
jl
ja
sbb
rcl
push
fimul
pop
dec
dec
cmps
je
cmp
jl
test
inc
mov
cmp
cmp
(bad)
xlat
xor
ficomp
std
stc
dec
mov
and
cmp
(bad)
(bad)
in
and
jge
dec
jbe
fbstp
lea
mov
test
popa
jl
pop
sbb
xchg
fadd
movs
mov
fnstenv
add
jmp
xchg
pop
sub
adc
hlt
jl
mov
test
mov
loop
into
sbb
mov
ins
adc
and
(bad)
fiadd
cmp
(bad)
out
popa
or
jno
jle
cmp
pop
mov
bound
scas
mov
retf
jl
inc
push
movs
fmul
pop
mov
fs
daa
repnz
cwde
dec
xchg
add
jl
aad
or
jl
(bad)
(bad)
or
jge
mov
xlat
dec
adc
jmp
and
mov
cdq
and
fdivr
test
cmp
jl
repz
lods
ret
jl
mov
pop
and
or
jl
cmp
(bad)
jge
xchg
addr16
ins
pop
scas
xchg
int3
pop
(bad)
jl
inc
pop
int
push
stc
mov
ss
mov
sar
push
(bad)
les
xchg
ja
call
fldenv
xchg
(bad)
stos
dec
mov
nop
outs
cmp
mul
popf
xlat
test
inc
jl
stc
ss
retf
push
or
jle
jl
push
(bad)
xchg
inc
jl
mov
stc
add
(bad)
sbb
jl
mov
imul
test
test
ret
jl
stc
inc
xchg
fiadd
add
add
adc
sahf
hlt
lods
mov
xchg
jge
or
aad
mov
sub
ins
je
ja
mov
jno
or
stos
mov
in
dec
push
xor
outs
mov
add
cdq
and
(bad)
adc
jl
test
inc
pop
outs
jl
sti
xchg
inc
mov
xchg
jl
mov
bound
idiv
or
mov
xchg
or
cmp
add
dec
adc
aad
jl
stc
jnp
push
cdq
jne
jl
and
fsubr
mov
shr
add
mov
jl
hlt
ret
pop
adc
popa
pusha
popf
rcr
mov
stos
test
out
or
add
rcr
jmp
sbb
pushf
inc
jne
push
icebp
cwde
scas
inc
push
sub
mov
jg
jl
inc
add
inc
push
add
xchg
push
jecxz
retf
jl
add
jnp
lds
jae
or
repz
in
mov
adc
add
jl
add
fstp
outs
retf
jl
in
cmc
jae
jl
mov
inc
div
add
adc
(bad)
(bad)
loope
mov
push
xchg
push
xchg
loop
(bad)
movs
movs
mov
mov
jl
loopne
shl
icebp
aam
jl
call
and
fidivr
lods
mov
cmp
fwait
jp
jecxz
nop
loop
arpl
mov
sub
rol
sti
jl
cmps
cli
in
adc
push
movs
lock
retf
dec
test
jnp
pop
fcmovnu
(bad)
mov
hlt
out
inc
mov
pcmpgtd
pop
push
cmps
pushf
jbe
movs
fcom
iret
pop
sbb
jno
hlt
jl
push
fcmovu
pop
sbb
pop
jl
ret
movs
not
ins
outs
mov
imul
jno
mov
sbb
dec
ins
int3
mov
test
hlt
and
test
fbstp
jl
fcomp
out
jae
ds
xlat
out
xchg
ds
ins
mov
jl
ins
fstp
jae
enter
int
inc
lds
loopne
sahf
arpl
fcmovnu
adc
push
mov
imul
pop
ins
add
pop
call
jl
sbb
fxch
scas
push
sbb
xor
jnp
shr
jnp
or
ds
enter
and
mov
test
fcom
sbb
push
sub
or
call
aad
retf
inc
adc
add
movs
in
ja
shl
dec
cmp
call
xor
outs
mov
in
sbb
and
lods
iret
mov
jl
or
mov
cmp
inc
test
inc
or
sar
lock
pop
jbe
loop
pushf
ror
int
inc
mov
fild
mov
xor
daa
icebp
sub
add
lds
jmp
jge
add
cmp
mov
rcr
shl
adc
dec
out
pop
inc
out
jl
shl
int
push
or
push
jl
dec
mov
lods
inc
cmp
fsubrp
addr16
jl
lock
aad
ret
jl
fsubr
lods
xchg
inc
jl
in
sbb
rcr
mov
and
movs
fcom
je
jae
fmul
dec
cld
fs
fnstsw
stc
xchg
lahf
mov
pushf
jnp
dec
(bad)
mov
push
jp
mov
fdivp
add
(bad)
sti
pop
neg
adc
popa
mov
cld
aaa
int3
mov
lea
xchg
pop
lahf
out
jl
jns
and
push
stos
pusha
mov
stc
cmp
ror
fwait
adc
jl
pop
(bad)
lock
xchg
push
ja
or
and
retf
cmp
popa
push
out
cmp
in
cwde
lods
sbb
aam
call
ror
and
jl
outs
lock
mov
push
rol
fiadd
mov
dec
jl
inc
int3
fist
push
or
popf
dec
arpl
mov
add
icebp
pop
ins
push
dec
xor
(bad)
fist
mov
cwde
scas
inc
jg
jl
fwait
add
arpl
or
ret
sbb
xor
popa
mov
push
(bad)
int3
repnz
mov
sar
popa
stos
mov
mov
pop
stos
out
arpl
pushf
xchg
sbb
mov
out
and
imul
into
jl
sbb
ret
jl
es
or
stc
cmp
dec
lds
fidiv
ror
xor
test
scas
test
xor
mov
xchg
pop
and
sub
push
fcomp
jl
jecxz
jmp
fdivrp
push
dec
(bad)
outs
vpackssdw
mov
xor
icebp
or
xchg
inc
mov
jl
mov
mov
jae
adc
mov
cmp
jl
dec
rol
xchg
daa
ret
(bad)
outs
aad
pop
push
and
mov
shl
sbb
push
cld
mov
sub
jno
(bad)
jl
fidivr
inc
adc
test
iret
sub
adc
push
jl
xchg
mov
mov
pop
lahf
cmp
push
mov
jl
add
loopne
popf
lods
popa
enter
(bad)
in
in
mov
add
pop
adc
cmp
jl
into
call
mov
xor
pop
in
xchg
fld
icebp
push
sub
inc
jl
jmp
mov
mov
ins
sar
mov
out
cmp
rcl
jl
push
ins
scas
adc
imul
xchg
mov
pop
std
in
cwde
and
push
ja
jne
icebp
jl
dec
popf
out
mov
and
mov
cmp
jne
jl
add
add
mov
jge
inc
push
mov
mov
jge
or
xchg
mov
or
lock
jl
mov
jnp
shr
cli
popa
pop
push
push
iret
jl
mov
jne
xor
and
leave
neg
rcr
aad
(bad)
or
inc
mov
cmp
or
jp
mov
(bad)
lea
in
mov
rol
xchg
stos
cmps
mov
pop
mov
push
mov
add
or
fidivr
mov
mov
xchg
shl
clc
fld
adc
xchg
mov
add
jge
push
pop
cld
push
push
les
pop
imul
dec
es
add
iret
pusha
popa
repz
sbb
outs
mov
jbe
(bad)
jl
ror
and
mov
cmps
fidiv
mov
xchg
das
psubusb
or
jl
xor
movs
push
mov
cmp
pop
jl
sbb
jl
sbb
aad
dec
adc
mov
loope
popf
or
add
(bad)
pop
imul
push
mov
dec
(bad)
dec
jge
icebp
mov
aaa
xchg
pop
mov
jmp
jp
jns
cwde
fiadd
inc
int
aas
inc
xchg
inc
mov
pop
outs
jp
jg
push
and
icebp
in
cmp
ret
cwde
rcr
(bad)
test
(bad)
stc
inc
sbb
inc
(bad)
xchg
pop
mov
iret
mov
(bad)
xor
enter
mov
lahf
aad
rcl
mov
jo
(bad)
call
or
pop
jl
hlt
sar
add
jl
fnstsw
push
jns
mov
outs
cmc
int
inc
pop
jl
pop
lahf
ins
mov
mov
xlat
enter
int
lods
shr
les
jl
lds
ds
push
out
jg
fistp
jl
cmps
mov
inc
and
dec
jl
ror
jge
sbb
jecxz
out
pop
pushf
xor
jbe
xlat
push
fisubr
xchg
sbb
cmp
pop
cmp
xchg
mov
mov
cmps
xchg
lahf
outs
shl
fcom
fist
pop
shr
dec
jl
stos
cmp
enter
jnp
adc
mov
les
sahf
jns
cmp
cmp
adc
pop
jl
or
or
mov
xchg
adc
xor
movs
in
xchg
cld
retf
mov
jl
ins
repnz
les
popa
pusha
push
dec
(bad)
jl
or
xchg
pop
int3
scas
inc
pushf
cmps
cld
fisub
jl
cdq
jae
pop
retf
mov
or
jl
cmps
sub
pusha
jl
repz
sbb
ins
into
mul
(bad)
mov
scas
hlt
sti
jge
add
pushf
(bad)
mov
mov
ja
push
mov
leave
jl
jg
push
popf
mov
and
in
mov
xchg
jl
sbb
lea
add
pop
test
and
push
ja
mov
mov
retf
jns
mov
jl
rcr
addr16
sub
xchg
or
dec
jl
inc
push
xor
cmp
mov
jno
aad
dec
jl
add
fstp
retf
outs
repz
mov
cmp
in
pop
in
ds
fimul
lods
sbb
and
inc
inc
int3
mov
xor
add
shl
or
jne
jge
ja
stc
and
icebp
jge
(bad)
fmul
mov
push
les
sbb
pop
jl
jne
ror
stos
pop
xchg
jl
or
ins
popf
jae
add
cld
pop
retf
scas
push
sahf
(bad)
jl
test
push
and
adc
xchg
gs
js
xor
test
sar
pop
jl
xor
mov
cld
enter
rol
jl
pop
lods
mov
jge
(bad)
popf
inc
push
movs
fstp
or
mov
inc
cmp
out
bound
pop
adc
das
add
int
xor
test
and
dec
and
sub
popa
cmp
(bad)
cld
in
jge
into
mov
jl
jns
sar
jl
pushf
(bad)
xlat
hlt
or
loope
in
mov
jns
sti
test
or
cwde
cwde
pop
jp
fcmovu
inc
jnp
mov
outs
rcl
mov
pop
outs
cld
mov
pushf
jle
mov
adc
outs
jg
fwait
into
imul
gs
jl
jno
mov
jae
mov
sahf
jge
adc
aad
les
jl
out
retf
mov
in
sti
inc
addps
test
jl
aam
(bad)
push
cmp
in
jl
scas
stc
xchg
test
mov
cmps
shr
es
inc
leave
push
cld
push
js
sbb
outs
lock
pop
push
cld
and
ins
(bad)
dec
mov
xchg
xor
out
outs
cmp
sbb
std
into
dec
jl
jge
xor
jl
adc
jl
js
sub
mov
mov
test
jge
or
pop
out
aad
repnz
push
test
mov
sbb
(bad)
sbb
hlt
(bad)
rcr
jae
pushf
dec
popf
pop
pop
rol
pop
xchg
fist
lahf
int
mov
pop
sbb
inc
dec
popf
push
rol
pop
sub
rcr
push
pop
loopne
fs
in
inc
in
aaa
jl
(bad)
call
test
repz
aam
mov
xlat
jl
scas
test
dec
jl
sub
mov
aam
ja
add
mov
shl
cld
mov
push
int
dec
ret
out
mov
retf
das
enter
jl
fwait
sbb
fdivr
(bad)
test
add
mov
mov
sub
imul
ja
and
cmp
mov
jl
imul
sub
pop
mov
jle
jl
jge
push
jmp
push
mov
adc
call
dec
dec
adc
mov
mov
jmp
pop
add
mov
push
pop
xchg
pop
xchg
cwde
fld
fsubr
dec
pop
rcr
cmp
imul
jp
mov
jmp
mov
bound
hlt
mov
aas
cmp
mov
push
in
inc
mov
out
sbb
ficom
add
dec
ins
(bad)
addr16
jl
fst
hlt
pop
xchg
in
add
mov
sub
pop
cmps
sbb
in
hlt
movs
loopne
ss
lahf
mov
inc
fist
mov
xchg
push
fwait
stc
dec
jge
nop
(bad)
int3
mov
xlat
inc
pop
add
les
sbb
cld
pop
add
loope
xor
shl
popa
in
jne
mov
pop
dec
fstp
lahf
xchg
mov
clc
sahf
cmp
retf
or
inc
(bad)
or
(bad)
or
ds
call
add
pushf
and
sbb
ins
out
xor
cmps
push
fidivr
sar
dec
sub
jl
fstp
je
rol
sbb
pop
push
test
fild
dec
push
adc
or
mov
fstp
out
test
shl
aad
test
cli
lods
ror
inc
gs
jge
stc
push
lods
mov
aaa
inc
(bad)
idiv
pusha
in
pop
push
outs
scas
loope
rcr
ror
sub
add
or
add
(bad)
xor
jl
add
dec
fld
pop
mov
ds
(bad)
and
or
push
stos
xchg
jl
test
and
and
out
movs
idiv
mov
mov
ds
jl
lea
jl
pop
mov
lahf
cwde
jmp
fst
sub
mov
jl
mov
xchg
xchg
test
jl
sbb
sahf
push
push
loop
jl
cmp
pop
pop
outs
jge
mov
stos
fcomp
push
movs
test
pandn
inc
mov
stc
or
jl
sahf
push
mov
shl
dec
icebp
pop
or
push
jae
ja
push
fbstp
push
sbb
pushf
cmp
xlat
push
(bad)
ins
test
mov
sti
cmovbe
mov
loopne
imul
fwait
or
aad
mov
sub
(bad)
repnz
jl
ret
xor
hlt
push
cmp
sub
jnp
jecxz
icebp
ja
call
loope
ja
push
lods
ja
xchg
jge
xlat
cmp
lods
test
in
cmc
sbb
shl
fist
push
ins
inc
cmp
cmp
je
ror
cmps
ficomp
in
outs
jnp
mov
neg
push
jl
shl
jl
adc
xchg
sub
in
jl
pop
sbb
movs
or
adc
xchg
mov
fnstcw
ror
adc
jp
(bad)
fld
and
fistp
pop
repnz
je
and
aas
push
stc
mov
jns
pop
fisub
ss
fdivr
ins
scas
dec
repz
lods
jl
jnp
shr
ss
jl
push
or
adc
movs
push
outs
(bad)
cdq
pushf
sahf
cmp
hlt
scas
and
xlat
xor
or
and
lods
test
ins
div
and
pop
xchg
fldcw
outs
mov
jnp
fsub
sti
sar
push
jmp
fcmovne
fsubr
mov
adc
outs
pop
fstsw
sub
jl
dec
retf
jge
fsub
mov
loopne
sbb
jmp
dec
adc
in
push
fidivr
in
xlat
pushf
stos
lahf
and
pop
in
popa
cmps
xchg
fst
hlt
outs
sbb
dec
cld
repnz
jge
xlat
push
pushf
loopne
neg
jl
fst
jno
sti
cs
addr16
lahf
(bad)
(bad)
mov
outs
fisub
xchg
inc
outs
lods
call
or
mov
cld
(bad)
mov
or
popf
mov
sub
sbb
add
fcomp
rcl
(bad)
retf
in
cmp
fidiv
sbb
mov
aam
test
jb
lahf
fidivr
ud0
push
mov
retf
push
mov
pop
mov
popa
push
jnp
out
add
and
push
jl
and
int
sar
ret
or
fwait
cmp
gs
dec
inc
mov
stos
mov
stos
mov
adc
mov
jge
(bad)
pop
fld
pop
int
outs
popa
sub
imul
test
cmp
and
jl
shl
cmp
fwait
ins
test
mov
xchg
loopne
push
mov
arpl
(bad)
pop
mov
pushf
rcl
js
pop
inc
ja
mov
pop
loopne
imul
dec
out
inc
dec
add
jl
aad
sub
push
bound
xchg
call
cmp
hlt
sub
jl
jecxz
xchg
add
pop
retf
and
sbb
lock
jl
and
pusha
adc
dec
scas
cmp
xchg
push
fistp
dec
fwait
iret
jge
dec
arpl
movs
jl
dec
mov
xchg
jns
fistp
fdivrp
cmc
mov
pop
jl
xlat
mov
xchg
outs
aad
dec
xchg
sbb
sbb
xor
ja
mov
aas
push
jl
icebp
jle
aaa
out
aam
cmc
sbb
mov
xchg
or
push
std
sbb
in
inc
pusha
or
mov
mov
jl
dec
sbb
cwde
shr
sub
into
fwait
jl
cmp
clc
mov
in
cmp
lods
into
jl
pop
movs
sbb
jp
leave
popf
push
fwait
sub
bswap
cmp
test
dec
iret
cmp
rcl
jns
das
ret
mov
sbb
pusha
pop
dec
sub
test
push
into
pushf
popf
mov
mov
mov
mov
int
jge
dec
and
mov
push
ret
int3
mov
jl
push
mov
pop
mov
sar
sahf
push
aad
popa
sbb
mov
(bad)
jl
out
test
pusha
jmp
aam
(bad)
jmp
scas
mov
mov
mov
or
(bad)
cmp
rcl
xchg
and
adc
outs
fwait
int
sbb
sbb
jl
std
stos
jg
mov
fsub
push
rcl
outs
sub
jl
jmp
mov
rcl
lods
push
dec
or
ret
popf
movs
stc
mov
fs
cmps
cmp
call
or
xor
mov
sbb
(bad)
mov
stos
iret
sti
cmps
xor
repz
ja
mov
cmp
in
jp
(bad)
in
fcomp
jecxz
push
or
cmp
push
or
adc
fwait
mov
mov
dec
les
adc
push
xchg
ret
xchg
pop
shl
mov
xchg
rep
push
sar
jg
pop
bound
jl
fst
cmp
mov
push
jl
push
int
pop
aam
push
outs
jge
sbb
aaa
pop
sar
jne
popf
push
jp
xchg
add
cs
out
jl
lods
sbb
mov
out
fiadd
jl
cmp
(bad)
sahf
xchg
pop
int
push
shr
xchg
jae
jl
pop
sbb
aad
mov
dec
int
stos
lea
jl
loopne
not
xchg
jecxz
jmp
sbb
loope
adc
cdq
dec
mov
pop
jmp
jl
rcr
inc
mov
cld
outs
addr16
push
xor
pop
sub
sahf
test
iret
loopne
sbb
pop
jl
gs
xchg
jl
addr16
push
outs
icebp
inc
jns
cmp
int
or
scas
dec
and
inc
popa
pop
imul
dec
or
push
(bad)
mov
bound
popf
dec
imul
pop
cmps
(bad)
mov
jl
sbb
or
(bad)
hlt
push
add
cmps
sbb
jae
je
scas
jne
mov
repnz
retf
mov
shr
(bad)
loopne
sti
fstp
ja
mov
mov
xor
mov
lds
jl
stc
stos
mov
jl
popf
xlat
dec
inc
cld
(bad)
in
jl
iret
(bad)
cdq
fnstcw
(bad)
(bad)
frstor
jl
inc
cmps
out
aad
sub
mov
pop
dec
test
mov
mov
jmp
mov
jnp
and
jmp
out
lods
push
add
sbb
(bad)
call
cwde
hlt
jl
mov
stc
in
xchg
adc
or
(bad)
leave
jle
mov
std
xor
out
sbb
clc
jg
rcl
jne
mov
pop
jmp
mov
mov
jl
nop
sub
hlt
rcr
inc
imul
and
icebp
push
jnp
lods
call
aas
int3
aaa
cld
mov
ss
fild
mov
fisubr
sbb
pop
push
stc
outs
out
fcomp
outs
(bad)
movs
in
jecxz
jl
sub
mov
int
mov
add
mov
fbld
xlat
push
sub
sar
das
xchg
mov
fcomp
adc
jl
(bad)
xchg
retf
lock
imul
jl
movs
adc
test
and
movs
icebp
sub
jl
xor
aad
fisubr
jl
cmp
stos
add
mov
inc
pop
imul
mov
and
jl
mov
pop
adc
mov
xchg
jge
cmp
mov
adc
xchg
cmc
sar
jl
mov
push
retf
les
js
shr
add
mov
dec
mov
add
xchg
xchg
repnz
aas
ss
jl
inc
shl
scas
mov
std
cmp
mov
jl
ss
retf
test
mov
pop
push
cmps
pushf
test
and
hlt
(bad)
out
mov
cmp
sbb
pop
int
mov
jl
daa
aaa
jns
call
dec
fistp
rcr
pop
cdq
cmp
jno
sub
jnp
fidiv
ja
ror
cwde
sahf
sub
and
fild
jl
add
xlat
jge
push
adc
mov
in
jnp
aad
and
add
fnstcw
push
aas
xchg
cld
imul
xor
pop
inc
hlt
aad
outs
jl
xchg
xchg
xchg
pop
jl
(bad)
fistp
inc
add
iret
(bad)
fcomip
push
stc
or
imul
jl
mov
jl
pusha
loope
push
faddp
jl
xchg
stc
je
stos
cld
mov
loop
push
aam
xchg
adc
js
(bad)
pop
mov
sahf
shr
mov
or
or
pop
jp
test
pop
cmp
(bad)
jne
cwde
pop
mov
nop
sar
cmps
mov
push
push
sbb
push
sub
inc
fild
or
pop
sub
or
jge
stc
scas
adc
and
cmps
(bad)
jecxz
jmp
push
mov
jl
xor
loope
jl
xor
mov
jle
jns
xor
xlat
cdq
xchg
lea
push
sbb
test
jp
jg
mov
retf
jl
ss
fcom
ret
sar
jl
popa
outs
mov
ds
jl
push
xchg
out
push
jl
mov
mov
outs
dec
retf
icebp
movs
jecxz
cld
pushf
js
retf
call
pop
add
add
sub
mov
cdq
cmps
dec
rcr
shl
mov
xchg
push
jl
add
adc
sbb
div
sub
sbb
mov
ja
jl
jmp
inc
retf
mov
and
jl
jns
mov
jl
dec
ss
(bad)
fist
icebp
pop
popf
sbb
aas
jne
cld
push
pop
mov
mov
xchg
jnp
fdiv
stos
fcmovu
pushf
mov
retf
adc
sub
mov
div
aad
fucomp
adc
fidivr
xchg
cmovo
lahf
les
pop
stos
push
popa
out
outs
mov
loopne
cld
add
sbb
adc
push
outs
enter
cmp
neg
dec
mov
je
xlat
inc
dec
jl
push
int3
popf
fst
jle
jl
div
nop
jl
add
pop
mov
and
mov
add
mov
sbb
jl
mov
addr16
sahf
leave
mov
pop
cmp
test
mov
xor
mov
jge
mov
and
test
shr
pop
push
fdivr
stos
push
popa
pusha
fidivr
inc
pop
jmp
fild
movs
aam
les
mov
lods
jl
scas
mov
scas
sbb
xlat
int3
out
fld
jo
inc
ds
imul
push
xchg
pop
cmp
test
push
aas
pop
cs
enter
cld
lock
mov
ins
mov
jl
dec
sub
push
ja
adc
xchg
mov
jns
stos
mov
mov
stc
ficomp
jl
push
sbb
mov
out
mov
(bad)
stc
sahf
ins
sar
mov
mov
jl
shl
push
jl
jb
das
in
mov
jl
and
adc
sub
dec
mov
jl
or
xchg
cmps
(bad)
imul
adc
scas
cmp
xor
pop
cmp
call
frndint
cdq
jnp
ss
push
xlat
test
push
jl
les
test
push
jo
int3
pusha
cmp
(bad)
movs
pushf
std
push
jl
sbb
jl
ds
stos
ror
pop
mov
fild
jecxz
xchg
cmc
stos
push
lahf
lods
mov
sar
es
dec
adc
jl
sub
lahf
inc
in
int3
mov
and
jp
sbb
pop
and
push
dec
lods
pop
mov
mov
add
cmps
jle
div
fmul
fmul
lock
add
cmp
ds
and
jecxz
std
popa
int
inc
mov
push
mov
sbb
jl
mov
enter
cmp
cmp
push
cmps
jl
scas
neg
cmp
in
lahf
fisub
jl
sub
leave
js
push
lods
jp
mov
mov
imul
mov
jl
cmp
jg
sub
mov
pop
jge
hlt
mov
stc
mov
arpl
(bad)
cmps
out
iret
test
and
jnp
outs
call
(bad)
inc
lods
inc
(bad)
jl
neg
fnstsw
inc
jnp
cmp
call
jnp
aas
mov
or
cmp
mov
add
nop
sbb
arpl
cmc
iret
mov
or
jmp
jl
js
mov
dec
push
jnp
sub
call
fnstcw
inc
pop
push
jmp
cwde
js
inc
mov
dec
xchg
or
push
jl
scas
iret
push
mov
dec
adc
xchg
jge
stc
das
jmp
mov
pusha
xor
add
adc
dec
jge
inc
pop
pop
scas
cld
or
ins
jl
repz
fimul
int
jl
mov
mov
jo
pop
add
test
mov
jl
add
jle
mov
or
cdq
jl
sub
shr
in
or
push
cwde
dec
leave
fwait
sub
mov
rcl
jl
jno
lea
frstor
or
jl
aad
push
(bad)
not
ret
cld
int
pop
jmp
in
leave
rcl
retf
ds
cmps
hlt
mov
stos
dec
push
inc
add
push
retf
mov
mov
aas
pusha
enter
mov
or
lea
std
add
lea
add
movs
bound
(bad)
pop
mov
inc
pop
nop
int
jl
aam
push
mov
out
in
dec
xchg
jo
push
pusha
fcmovnb
jl
ins
mov
out
inc
pop
xchg
jl
stc
and
add
inc
lods
enter
scas
jl
inc
fcomp
xchg
hlt
jge
inc
call
jp
(bad)
push
(bad)
mov
jl
jg
cmp
adc
jl
add
loop
sub
inc
pop
fistp
fidivr
jnp
scas
fadd
jl
(bad)
push
int3
mov
pusha
push
jl
hlt
mov
add
xchg
inc
xchg
cld
ja
(bad)
and
(bad)
in
pop
jl
fsubr
sar
leave
cmp
ja
shl
into
push
sub
outs
cwde
adc
push
add
pushf
jmp
jne
xchg
mov
xor
dec
rcl
rcr
push
add
xchg
cld
cmp
int3
adc
shr
fld
xlat
fcmovu
push
hlt
(bad)
ja
xchg
inc
arpl
in
xor
popa
jnp
jge
(bad)
sbb
ins
lea
in
cdq
xchg
shr
fist
in
mov
xchg
dec
add
stc
cdq
outs
xchg
mov
pop
rcr
test
xchg
pop
cmp
ja
xchg
cwde
mov
hlt
ins
retf
js
push
aaa
xchg
iret
mov
cmp
dec
mov
mov
jg
xchg
xor
fistp
dec
out
call
jl
add
addr16
push
sahf
jl
pop
test
test
ds
inc
enter
call
adc
sbb
call
call
dec
xor
and
sbb
jge
fstp
mov
mov
jl
mov
adc
cmp
push
popf
test
push
xor
xor
inc
jl
stc
xchg
(bad)
or
add
popf
ja
pop
into
jl
or
lock
add
jl
mov
adc
int3
out
inc
rcl
movs
and
push
jge
jg
adc
jmp
cmc
pop
mov
pop
sbb
xor
dec
outs
inc
sub
fst
xchg
in
aaa
sub
mov
jl
xchg
xchg
in
loopne
dec
jl
inc
dec
xchg
iret
rcl
mov
sar
in
lods
(bad)
fcmovbe
jl
ja
leave
mov
cmp
sar
sub
push
jle
dec
(bad)
mov
jge
aad
jmp
add
jl
sti
ja
and
jno
fnsave
rcr
mov
jecxz
inc
cmc
xchg
jl
arpl
pop
test
jl
cmp
add
cmps
mov
stc
jl
and
adc
jl
loopne
dec
lea
mov
iret
call
pop
call
outs
fnsave
cmp
mov
cdq
xor
shl
ror
jge
sub
loope
jl
movs
sbb
and
fnstcw
sbb
cld
popa
push
fsub
mov
mov
jg
popa
inc
addr16
jl
add
push
ds
pop
int
lock
shl
mov
movq
inc
jbe
repnz
mov
and
movs
into
nop
jl
mov
sbb
outs
sar
cld
inc
pop
in
jl
cmps
adc
jl
and
xor
xor
mov
ja
fadd
iret
push
jl
ficomp
jno
sbb
movs
mov
jl
ins
pop
and
bound
or
xchg
(bad)
cld
or
push
jp
cmps
pop
jae
mov
outs
aad
cmps
stos
mov
and
mov
xlat
call
sub
push
mov
jl
push
leave
cmps
mov
int
lahf
pop
mov
cld
sbb
add
jl
add
fidivr
mov
iret
inc
nop
jp
pop
(bad)
popf
icebp
mov
out
mov
pop
fldcw
sar
(bad)
into
addr16
mov
inc
mov
cmp
inc
fidivr
jp
fld
pop
mov
push
jl
fsub
call
shl
jge
jecxz
jge
int
int3
sbb
sbb
mov
lds
fs
jge
pushf
push
xchg
iret
push
push
fptan
jl
fnsave
xor
adc
out
jmp
dec
sbb
pop
cmp
or
fisubr
cmp
(bad)
jecxz
sbb
stc
jl
popa
movs
mov
jge
or
add
shr
pop
sub
cmps
mov
ds
jmp
cs
stos
scas
xchg
cld
(bad)
int
mov
xor
ins
fidivr
shl
push
xchg
cmps
jl
icebp
mov
push
or
fwait
jle
push
test
gs
add
cs
sbb
hlt
ss
jle
scas
in
jns
xchg
add
lahf
jl
inc
cmps
and
push
xchg
jl
aas
push
pop
imul
fstp
cwde
cdq
aad
push
mov
rcr
mov
mov
fidiv
mov
sub
loopne
dec
push
cmp
xlat
pop
in
call
jmp
add
push
adc
fcom
ja
sbb
outs
int3
or
fild
jl
xchg
mov
mov
(bad)
jl
in
dec
mov
mov
cli
pop
cmps
retf
cld
rol
imul
fldcw
(bad)
xchg
mov
(bad)
adc
gs
out
and
jl
push
leave
add
cmp
jno
pop
je
outs
push
fcomip
cmps
jge
sub
aam
hlt
int
bound
xchg
lds
lods
inc
int3
rcl
mov
lock
outs
(bad)
fsubr
cmp
sub
clc
bound
jl
sbb
inc
jmp
xor
jp
mov
stc
not
loop
mov
pop
jl
movs
js
pop
jl
sub
mov
add
mov
jl
pop
(bad)
inc
jmp
std
fdiv
xlat
icebp
mov
and
in
sbb
std
jl
test
pop
jge
imul
rcl
aam
jl
(bad)
push
xchg
sub
mov
std
push
test
daa
sub
pop
add
cmps
mul
xchg
add
pop
push
xchg
lock
stos
scas
fmul
jl
sbb
push
mov
fistp
fwait
(bad)
into
(bad)
cmp
jmp
fidiv
add
sub
xor
jl
call
jl
add
imul
imul
mov
or
jl
mov
cmp
jl
lds
add
xor
test
sbb
mul
inc
fisttp
sbb
jl
pusha
pop
fs
call
xor
jl
ret
jmp
mov
paddq
mov
jl
mov
fucomi
lods
sub
add
jl
fdiv
cmc
xchg
jl
jno
and
pop
lods
lods
push
jl
(bad)
mov
push
pop
loope
jl
enter
pop
mov
call
mov
jne
mov
jl
stos
es
cmp
pop
xchg
jl
mov
mov
inc
shl
push
jmp
xchg
pop
cdq
cmp
mov
cmps
imul
sbb
adc
jl
in
or
jl
sbb
pushf
push
add
int
aaa
ret
aas
sub
dec
jp
call
mov
xchg
scas
push
outs
inc
xchg
and
add
jno
mov
jl
rep
int3
adc
pusha
enter
adc
cmp
out
jmp
or
mov
into
dec
emms
mov
jl
inc
mov
jge
push
jns
imul
jl
lods
push
jnp
jno
jl
fcomp
mov
adc
mov
cdq
jl
mov
push
imul
outs
(bad)
add
data16
or
mov
mov
or
pop
push
xchg
jecxz
inc
movs
movs
pop
gs
je
(bad)
push
outs
(bad)
mov
mov
nop
rcl
mov
das
sahf
ins
mov
je
in
jl
jns
aam
fimul
gs
hlt
adc
(bad)
adc
xchg
cwde
pop
jp
xchg
fwait
mov
pop
pop
into
xlat
outs
leave
push
push
test
cmp
aas
shl
shl
inc
mov
sti
cmp
icebp
xchg
fcom
xchg
jnp
fistp
xchg
stc
outs
hlt
and
shr
sbb
mov
jl
sti
in
imul
shl
retf
or
push
mov
out
fdivr
(bad)
mov
xchg
jl
mov
lds
stc
add
jl
(bad)
adc
aaa
lds
and
cmps
ror
jl
push
mov
mov
call
dec
inc
(bad)
mov
popf
or
fdivp
mov
xchg
popa
mov
and
jle
push
fcomp
(bad)
jae
movs
jnp
aad
imul
jb
cmp
pop
hlt
sub
test
sar
call
ds
sbb
jne
inc
in
pop
ds
ds
jg
or
fbld
je
dec
es
mov
ror
adc
jmp
or
mov
and
stc
xchg
aas
jecxz
sar
adc
mov
leave
push
inc
mov
retf
or
jg
add
push
test
xchg
sbb
cld
inc
xchg
out
push
mov
jl
adc
or
xor
ret
push
movs
mov
out
in
and
adc
mov
loop
push
outs
fild
mov
test
inc
push
pop
jl
in
mov
icebp
int
jp
sub
mov
pop
push
jecxz
mov
push
fisub
mov
loop
scas
adc
lds
push
sbb
inc
dec
nop
mov
leave
dec
bnd
jl
daa
adc
jmp
xlat
clc
aaa
xchg
jnp
push
inc
jg
data16
into
int
movs
pushf
jle
ret
xlat
jl
or
lds
mov
mov
mov
xor
or
xor
mov
sub
xchg
mov
(bad)
sub
jl
stc
xchg
in
mov
push
jl
aad
push
mov
mov
sub
jl
or
scas
aam
inc
jl
jmp
pusha
mov
and
xlat
jns
ds
dec
pop
fnsave
jl
enter
(bad)
mov
push
mov
loopne
rcl
add
stc
dec
(bad)
pop
push
mov
jmp
and
push
cs
cld
arpl
sbb
jl
ret
leave
scas
fcmovnb
ja
jl
mov
mov
addr16
rol
iret
sbb
inc
inc
jle
ins
xchg
leave
(bad)
jmp
fbld
jno
adc
fdivr
mov
pop
cmp
mov
pop
mov
mov
aad
mov
adc
push
sahf
jl
sbb
cwde
fidivr
movs
addr16
fst
push
cld
inc
push
pop
jl
lods
lahf
xchg
fs
test
mul
test
xor
std
jl
hlt
adc
xchg
jge
sbb
test
jl
cmc
jge
(bad)
ret
or
inc
push
jl
xor
jge
cs
rcr
cmps
ret
mul
xchg
pop
jl
dec
or
pop
mov
pop
sahf
add
push
pop
jns
aad
ja
sub
mov
je
mov
cmp
test
cld
in
xor
pop
out
dec
dec
loope
popf
push
cdq
frstor
in
dec
push
ins
bound
jl
into
jns
cmc
popf
test
stc
mov
call
int3
add
ja
pop
retf
inc
fwait
icebp
xchg
js
push
inc
adc
cld
jp
out
add
jnp
call
push
es
pop
sbb
jl
dec
or
jne
push
jmp
adc
(bad)
int3
mov
sti
cmc
push
scas
cmp
jl
test
jmp
cli
dec
cld
enter
loope
stc
jb
inc
js
xchg
or
shr
pop
xchg
jnp
jnp
push
mov
pop
mov
arpl
pop
inc
mov
xor
or
jl
fidiv
pop
nop
adc
cmp
adc
jnp
(bad)
jae
fisubr
out
inc
push
dec
pop
ror
enter
jns
sahf
stc
jne
jl
fbld
mov
popf
addr16
sbb
into
jmp
jae
shr
or
pushf
mov
ja
jle
in
or
cld
loope
jl
dec
std
icebp
push
xchg
push
es
push
stc
dec
leave
aam
jnp
ror
add
xchg
push
mov
enter
(bad)
pushf
popa
ins
adc
jl
out
adc
pop
cld
and
pop
jecxz
dec
fidivr
movs
pop
xchg
rcr
cmps
jl
mov
scas
fsub
retf
mov
std
popa
daa
lock
outs
mov
mov
pushf
fcmovbe
aam
repz
xlat
popa
shl
bnd
xor
cmps
pusha
jecxz
jb
jae
pop
ftst
push
pop
cmp
in
hlt
sti
and
shr
sar
or
jge
mov
lds
int
cmp
int3
mov
add
sbb
(bad)
icebp
push
lahf
mov
dec
sbb
adc
push
ror
mov
test
cmp
(bad)
faddp
fsub
sbb
sbb
int
inc
xchg
imul
out
xor
call
add
cli
test
outs
xchg
call
fistp
aam
mov
sbb
ret
mov
jl
or
sbb
aas
daa
ss
loopne
jge
mov
enter
call
(bad)
fcomp
daa
inc
jne
xchg
xchg
test
jl
rcl
std
pop
out
test
int
sti
mov
mov
inc
(bad)
cld
mov
jae
sub
(bad)
sub
in
(bad)
pop
push
jge
xchg
repz
pop
sub
scas
jl
fnstenv
mov
shl
pop
mov
cmc
leave
jno
sti
repz
mov
pop
pop
fiadd
inc
mov
pop
push
shr
jmp
arpl
popa
sub
test
sub
dec
pop
jl
adc
lods
xchg
clc
jl
aad
mov
add
jl
dec
adc
into
stos
in
push
jl
xchg
fisttp
pop
aas
outs
sbb
add
jl
sbb
icebp
push
jl
sbb
xchg
and
in
push
out
mov
cmp
inc
mov
mov
cmp
jl
sbb
add
mov
or
jmp
jecxz
jl
mov
jl
mov
(bad)
in
cwde
cld
aas
aas
stos
ja
scas
rcr
int3
sbb
and
mov
jno
mov
sbb
jl
cmp
sar
gs
pop
pop
ja
aam
cmp
pop
mov
push
inc
jge
jle
pop
jg
mov
in
lods
nop
mov
es
sahf
shl
lahf
jl
int
out
lods
lock
fpatan
scas
into
in
imul
or
push
adc
pop
jl
lahf
rcl
push
mov
jl
sbb
data16
inc
mov
es
or
dec
and
mov
xchg
push
js
fiadd
jns
mov
xor
jl
sub
call
idiv
gs
mov
jp
and
sar
sbb
mov
ficomp
mov
jl
add
mov
jl
test
cmp
jl
lods
xor
outs
mov
scas
mov
add
pop
ins
pop
icebp
sbb
or
hlt
ret
pusha
mov
shl
push
xor
cmp
repz
push
(bad)
sar
(bad)
daa
adc
fimul
add
push
xor
imul
jl
scas
daa
les
pusha
inc
lea
sar
pop
pop
cmp
je
mov
dec
jl
cdq
outs
adc
int
inc
xor
retf
push
aaa
ror
bound
popa
jl
out
stos
jno
dec
(bad)
jnp
push
cwde
add
add
sbb
ret
mov
cmp
aad
sbb
jl
iret
retf
push
mov
jl
adc
lds
mov
std
dec
push
sbb
(bad)
idiv
jl
aaa
sub
jl
xor
pop
loop
pushf
mov
xchg
rcr
(bad)
cs
xchg
daa
lds
idiv
pop
jmp
xchg
jl
pop
adc
lods
fdiv
test
mov
and
pop
movs
rcr
pop
xchg
repz
aad
xchg
jl
push
stc
sbb
pop
mov
pop
pop
jl
jmp
pop
out
pop
mov
adc
ins
int
sbb
or
pop
outs
enter
mov
js
xchg
mov
pop
sbb
jl
cmps
xor
jl
mov
pop
daa
jl
scas
js
push
mov
dec
pop
jg
jge
push
mov
pushf
xor
pop
retf
sti
mov
push
mov
mov
or
add
mov
fnsave
fistp
enter
pop
push
jl
xor
push
call
mov
mov
mov
int3
mov
mov
hlt
inc
jno
jl
ret
lea
mov
mov
inc
dec
jl
out
pop
popf
inc
loope
call
fdivr
(bad)
arpl
fcom
xchg
jb
jmp
ret
mov
call
mov
popa
in
pop
cmp
mov
mov
sbb
cmps
std
jns
jmp
sbb
sahf
adc
fadd
cld
push
(bad)
outs
pusha
xchg
add
not
cmp
xchg
pop
out
dec
jnp
jno
inc
nop
jmp
jl
jge
fisttp
sbb
movs
loop
jl
adc
mov
jl
xchg
and
jl
neg
push
(bad)
cdq
cmp
mov
jnp
imul
ins
fiadd
out
lea
push
cli
or
pop
lahf
nop
cmps
mov
mov
rcr
xchg
push
jnp
jns
icebp
mov
out
in
leave
cdq
sbb
ja
mov
sbb
lods
pop
adc
pop
cmps
jl
jo
aam
push
cmp
mov
push
sbb
jno
jecxz
xlat
repnz
movs
xor
test
jmp
push
jmp
pop
jle
mov
ins
ffree
jns
in
pop
mov
loop
jl
aad
test
call
jl
add
or
hlt
xor
fdivr
movs
cmp
out
(bad)
push
mov
sbb
repnz
and
ficomp
pop
sbb
jns
lods
inc
fmul
test
lods
cmp
xor
xchg
not
pop
sbb
mov
fisttp
popf
lahf
ins
ja
(bad)
repnz
imul
dec
rcr
test
inc
mov
inc
pop
mov
aaa
cdq
xchg
imul
ficomp
outs
fmul
inc
xor
and
add
jnp
pop
push
dec
movs
in
jae
push
mov
dec
repnz
in
mov
(bad)
mov
jl
add
in
pop
mov
nop
cmp
ret
inc
mov
mov
imul
mov
in
shl
xchg
int3
fstp
imul
fld
ja
mov
int3
shr
jl
jb
jbe
pop
push
popa
addr16
push
jl
push
xchg
inc
or
or
jl
dec
clc
jecxz
mov
ret
int3
ficom
jnp
mov
pushf
aad
xchg
aas
pop
cli
pop
dec
clc
jl
xor
fcom
int
adc
push
rcl
(bad)
xchg
out
push
push
inc
pop
mov
std
popa
pop
adc
pop
fmul
pop
addr16
loopne
sbb
mov
mov
jl
(bad)
movs
mov
mov
cli
dec
loop
sbb
daa
ss
pop
lock
fst
(bad)
jl
push
(bad)
stc
push
mov
sub
hlt
and
out
dec
sbb
les
jg
das
xor
jl
into
jbe
mov
sbb
pushf
xchg
(bad)
into
lock
mov
int3
clc
hlt
mov
pop
jbe
mov
sub
mov
mov
retf
jge
push
shl
ret
dec
pop
jl
cmp
jmp
ins
cmc
xor
in
mov
vcvtpd2ps
mov
mov
repz
sub
and
call
xor
mov
jnp
pop
(bad)
fld
jl
daa
push
adc
cmp
inc
cld
add
fdivr
pop
and
fstp
sbb
int3
pop
sub
push
fild
jne
fnstcw
rol
std
hlt
ja
xlat
jmp
lods
int3
int
and
repnz
aas
jmp
adc
push
sub
loopne
push
jb
jl
rcl
sar
push
(bad)
call
pop
pop
add
cld
pop
sbb
ja
movs
idiv
xor
jl
hlt
push
mov
sub
push
cmp
mov
jl
aas
(bad)
nop
aad
fs
fs
imul
xchg
mov
inc
lods
ret
int
pop
sbb
hlt
loop
sar
mov
std
mov
fcom
pop
fdivr
push
add
add
xchg
inc
add
scas
pop
mov
jl
xchg
inc
jmp
sbb
(bad)
mov
popf
sar
icebp
mov
in
sbb
pop
stc
or
cmp
xchg
jl
int3
pop
mov
jnp
inc
stc
push
pop
scas
mov
pop
jns
mov
cmp
mov
loop
fstp
ja
mov
out
rcr
push
push
sub
fmul
dec
jmp
es
enter
int
popa
cmps
test
movs
jns
fidivr
test
jge
jl
aad
lods
sahf
inc
jl
iret
rcr
push
sub
inc
jo
jl
int3
cmps
xchg
mov
movs
call
sbb
cdq
div
dec
pop
(bad)
jmp
(bad)
call
pop
fwait
in
aaa
jge
ficomp
push
fadd
add
push
jl
or
lahf
xor
jnp
xor
hlt
mov
xchg
push
rol
cmps
(bad)
cmp
jl
xchg
jl
cmp
jecxz
dec
mov
sub
out
ja
int3
rcr
shr
fmul
pop
gs
dec
pop
popf
vpunpcklwd
stc
mov
xor
fist
add
jl
xor
shl
add
retf
icebp
jge
data16
fidiv
xchg
mov
adc
or
and
mov
mov
arpl
es
pusha
jecxz
fdivr
dec
aas
jno
popa
fwait
cmps
mov
dec
sbb
gs
movs
fstp
loop
push
shl
sbb
in
(bad)
fistp
jl
fistp
retf
mov
fcom
cld
rcr
iret
push
fwait
(bad)
inc
mov
lods
push
dec
(bad)
mov
jl
sbb
stos
jl
shl
mov
push
fst
cld
(bad)
pop
ja
jl
adc
retf
out
ja
fnsave
xchg
in
xor
sbb
adc
jge
test
pop
and
mov
xchg
jmp
xchg
jl
arpl
cmp
imul
loop
sbb
rcl
mov
mov
jg
push
movs
xor
in
outs
mov
jmp
fnstsw
mov
pop
nop
mov
rcr
fdivrp
pusha
(bad)
mov
hlt
test
push
shl
pop
int
dec
ja
cmp
aad
cmp
popa
push
xchg
jge
mov
(bad)
nop
or
jnp
mov
out
imul
stc
ja
xchg
jmp
adc
fisubr
dec
ins
sahf
jl
in
hlt
sar
mov
mov
dec
inc
pop
iret
mov
test
and
sbb
sar
xchg
mov
jmp
xchg
out
loop
cmps
fidivr
push
hlt
push
fdivr
jl
stos
xchg
mov
cmp
cmps
in
rcr
jl
mov
mov
inc
push
and
add
pop
mov
pushf
ja
ins
int
dec
mov
inc
push
test
leave
sub
fwait
mov
inc
mov
mov
bound
stc
jl
call
push
fadd
call
cmps
mov
xor
sbb
ret
mov
outs
jl
inc
rcr
(bad)
fmul
adc
jl
mov
bound
nop
das
(bad)
xchg
push
jge
cdq
jp
mov
call
(bad)
lods
jno
leave
push
pop
pop
outs
ja
das
or
jmp
ins
aas
jo
cld
xlat
rcr
mov
mul
mov
push
xor
or
jge
jle
pop
dec
les
xor
hlt
and
leave
sar
(bad)
jge
lahf
mov
mov
test
imul
ror
(bad)
hlt
push
mov
out
jl
popa
mov
imul
push
and
inc
ja
sbb
into
jmp
mov
(bad)
in
bswap
jl
popf
mov
(bad)
jl
fisubr
cmp
inc
bound
pop
cld
add
xchg
mov
movs
mov
cmp
sbb
sbb
call
js
ret
(bad)
stos
pop
xor
add
ret
outs
idiv
sbb
cmc
xchg
push
mov
fmul
ja
mov
push
inc
pop
mov
adc
retf
push
and
hlt
xchg
jge
push
cmp
cwde
pop
sar
lods
hlt
fdivr
stc
daa
xor
mov
lea
pop
xor
jl
(bad)
pusha
cld
loope
sahf
add
xor
mov
ins
mov
fnstcw
adc
outs
jno
jl
mov
cmp
cwde
jl
ins
into
stos
mov
jae
retf
leave
sbb
fidivr
sub
shl
pop
scas
inc
test
cld
jnp
mov
fwait
mov
scas
and
loopne
popa
jl
aad
pop
sti
bound
xor
sbb
in
jl
repz
add
jl
xchg
movs
add
jl
mov
mov
jl
cmp
mov
sbb
jl
xchg
test
pop
cld
mov
jl
xor
out
xor
xor
dec
jl
test
xor
(bad)
jl
ds
pop
pop
mov
mov
push
retf
sbb
jb
mov
push
jnp
cld
or
js
cdq
sub
mov
mov
lods
mov
xchg
or
popa
or
and
sbb
retf
mov
or
sub
push
mov
in
cmp
bound
xchg
ret
jg
mov
jl
sbb
in
imul
cld
pop
jl
ja
mov
cdq
iret
inc
ret
add
int
mov
inc
ja
add
mov
dec
mov
cdq
jl
sub
sar
adc
dec
out
test
xchg
jl
sub
sbb
in
jp
push
sbb
mov
add
popa
ss
jl
loope
test
sar
xchg
push
mov
adc
jb
xchg
call
jl
push
sub
xchg
jl
mov
mov
mov
push
nop
mov
enter
xchg
xor
ss
add
scas
jnp
out
lods
ffreep
mov
cmp
push
stos
cli
jl
mov
mov
pop
jecxz
dec
aaa
adc
stc
mov
pop
stos
retf
scas
fistp
mov
xchg
in
call
or
xchg
sar
scas
push
pop
xlat
jp
add
adc
push
xor
mov
jnp
out
push
pop
push
(bad)
les
stc
cmp
hlt
into
call
scas
fisubr
cmp
pop
aas
(bad)
ja
mov
fwait
add
cmovno
mov
enter
mov
stc
cs
and
and
jl
xchg
mov
rcr
stc
rcr
jl
jecxz
cdq
cmps
cmp
xchg
outs
fwait
in
xor
mov
jnp
ss
fdivr
nop
ins
jl
sub
std
inc
addr16
mov
rcl
mov
mov
ds
fdivr
nop
mov
out
jl
jo
mov
xchg
imul
jno
js
mov
in
punpckhbw
sub
imul
push
or
jl
sub
ficomp
test
jl
imul
jae
cdq
lock
dec
jmp
add
ja
je
xchg
sbb
scas
adc
in
cmc
aad
ins
(bad)
jl
dec
jle
cwde
push
shr
mov
sub
ja
pop
mov
mov
push
fs
stc
pushf
cld
loope
pop
not
inc
cmp
test
xor
pop
sub
xchg
pushf
jns
cld
jg
mov
popa
and
imul
push
outs
sub
inc
add
xor
push
ds
jl
adc
dec
jb
jl
jp
mov
add
mov
and
xchg
std
jle
jl
push
push
fisttp
iret
jl
push
test
mov
pop
fistp
leave
stc
imul
xchg
in
aad
gs
jb
jp
jmp
dec
outs
xchg
dec
dec
pop
loope
outs
mov
int3
pop
arpl
fidivr
or
cmp
push
or
fstp
out
dec
gs
outs
fld
(bad)
inc
jl
fcomp
mov
test
lods
sbb
mov
jp
sbb
pop
sar
dec
out
cwde
mov
xlat
ret
dec
push
xor
lods
ret
pop
jl
not
mov
aaa
dec
pop
dec
jl
ret
xchg
ins
fmul
hlt
jb
mov
push
call
jp
jmp
pushf
sbb
cmp
ins
dec
mov
xchg
mov
enter
aam
cmp
mov
imul
enter
add
jg
fstp
hlt
aam
or
sbb
test
xor
jl
mov
pop
pop
mov
add
mov
fnstenv
icebp
(bad)
pushf
(bad)
or
jl
retf
pop
xchg
sub
or
fisub
dec
loop
add
and
fisttp
fld
jmp
aad
xor
sub
movs
sbb
cmc
xor
or
add
dec
jg
out
popf
jl
stc
into
mov
inc
out
cmp
scas
xchg
cdq
and
fisttp
lock
xchg
mov
or
fnstcw
sbb
pop
mov
movs
(bad)
(bad)
and
ds
hlt
ja
push
stc
cmp
jno
inc
fcomi
in
aas
dec
pop
pop
jl
scas
xlat
out
mov
jmp
fdiv
and
jge
retf
out
dec
idiv
sar
mov
aas
mov
std
cdq
adc
xchg
inc
scas
sub
int3
nop
bound
dec
fstp
or
(bad)
lds
mov
std
and
jl
imul
ja
punpckhdq
and
sbb
cmp
scas
in
jl
rol
mov
jns
push
iret
pop
mov
nop
dec
sub
mov
mov
shl
ja
xlat
mov
jl
test
into
jle
call
pop
sub
cmps
ins
fistp
mov
jl
add
outs
jl
mov
lea
int3
ret
loop
aam
lds
std
repz
push
mov
xlat
popa
int
and
sbb
jmp
cmp
inc
ret
jl
pop
(bad)
aas
lock
or
jge
fistp
pop
test
jns
lods
maskmovq
idiv
scas
or
rcl
mov
and
sbb
sub
jl
outs
fisttp
mov
lds
arpl
jp
cdq
xchg
out
sbb
push
jl
popf
out
xlat
xchg
lahf
ja
or
jge
cwde
inc
xchg
pop
mov
jns
sbb
mov
aad
ds
test
jnp
or
call
and
bound
test
mov
mov
cmp
jae
int
(bad)
movs
stc
jl
push
cmps
push
hlt
mov
call
pop
test
mov
arpl
cdq
push
retf
jl
hlt
xchg
mul
out
inc
jl
pop
and
scas
mov
xchg
pusha
push
fucomp
mov
ins
movs
pop
push
push
ficomp
xor
cmp
(bad)
pop
push
fdivr
push
fidiv
or
(bad)
je
or
(bad)
push
std
sub
scas
mov
inc
int3
rcl
adc
out
mov
int
aam
loop
in
or
pushf
xor
jb
mov
dec
shl
retf
out
jl
cmc
pop
lahf
mov
jns
stc
push
push
bound
mov
das
inc
lods
idiv
enter
(bad)
shl
sub
or
xchg
outs
sub
xchg
push
into
stc
sbb
mov
jns
xlat
(bad)
mov
xor
lahf
outs
cmp
addr16
retf
jmp
cdq
jl
xor
call
xchg
jle
and
pop
ins
int
cwde
cmps
shl
pop
fstp
inc
or
lea
mov
jl
push
in
(bad)
sub
mov
je
lods
aad
(bad)
jl
aam
fucomi
call
xchg
pop
cdq
xor
popa
pusha
lods
ds
push
movs
inc
add
jl
dec
sahf
mov
jl
pop
movs
ds
(bad)
mov
sar
sub
int3
int
push
mov
jb
xchg
lock
fidiv
sub
sti
xchg
in
and
retf
adc
(bad)
xchg
add
ja
jno
daa
inc
imul
jl
push
add
or
cmps
jl
cs
pop
fist
jle
jl
xor
pop
jl
push
fild
lods
out
mov
repz
inc
pop
jl
stc
pop
(bad)
jl
mov
hlt
aaa
and
jl
xor
fcom
add
push
nop
cmps
mov
jl
iret
adc
popa
in
loope
pop
aas
ja
sub
pop
lea
jl
dec
adc
or
in
inc
out
mov
out
push
into
ror
ret
imul
pusha
arpl
mov
scas
(bad)
lods
scas
push
jl
and
hlt
pop
push
cmp
cld
add
mov
mov
leave
shl
xchg
mov
xchg
jecxz
jl
idiv
adc
sub
or
imul
dec
pop
mov
cld
jl
ffree
push
jmp
sbb
(bad)
jmp
or
adc
cmp
aad
adc
fldcw
fdivr
imul
jl
xlat
or
ds
pop
jl
mov
fsubr
xchg
jl
push
dec
pop
jbe
enter
es
movs
cwde
jl
push
in
in
idiv
lods
xchg
push
cmp
icebp
mov
sub
adc
in
push
mov
int
pushf
es
ret
movs
mov
and
sbb
cmc
xchg
sahf
jl
and
add
mov
xchg
jle
call
push
(bad)
stc
test
ja
enter
std
rcl
mov
xor
in
aad
push
mov
xor
pop
fnstcw
mov
icebp
xor
and
je
push
jl
lds
(bad)
jl
movaps
xor
mov
mov
mov
ja
jg
fbld
pushf
xor
pop
test
in
jl
shl
push
jl
ret
dec
xchg
add
cmc
into
(bad)
mov
push
cmps
jl
xor
mov
fild
push
mov
int
pop
pop
(bad)
ficom
cs
mov
mov
cmp
(bad)
mov
xchg
mov
fsub
add
cmp
loope
xchg
(bad)
jl
or
dec
push
dec
push
pushf
jl
fisubr
or
mov
popa
je
xchg
in
std
popa
xchg
imul
add
jne
sar
mov
je
stc
cmp
or
jl
loopne
sub
pop
aad
mov
call
sar
call
fimul
fild
lahf
retf
lods
dec
pop
and
shr
jl
out
inc
aaa
(bad)
into
add
jl
(bad)
mov
std
jl
inc
sbb
aad
mov
push
pop
sar
ret
fcom
xchg
xchg
int
(bad)
push
mov
mov
loop
out
ret
aad
rol
sbb
outs
lock
mov
jl
push
out
fucomi
fnstcw
sahf
addr16
sub
outs
repz
mov
loop
xchg
jl
jecxz
enter
sbb
sar
sub
add
dec
test
jp
(bad)
fs
jo
mul
push
stos
mov
jl
test
pop
pop
jl
push
sbb
sbb
push
cwde
jns
push
push
mov
jo
mov
lds
ficomp
mov
sahf
in
push
stc
xchg
and
inc
mov
fst
ret
pop
pop
outs
jecxz
jge
mov
adc
mov
jl
mov
dec
test
call
test
mov
or
(bad)
mov
fidiv
nop
ja
mov
sbb
adc
or
shl
sbb
inc
stc
jge
jnp
shr
bound
rcl
pushf
shl
sub
mov
jle
cmps
jnp
test
(bad)
dec
sub
jl
icebp
enter
ds
jl
fld
test
cmps
inc
pusha
sbb
jb
dec
jl
mov
or
pop
sub
fxch
test
cmp
jle
pushf
lds
lods
jl
lahf
jecxz
in
fadd
ins
jnp
addr16
pop
sbb
repz
retf
jl
push
ror
push
sub
outs
mov
mov
lahf
cmp
cwde
call
push
fadd
add
cs
inc
and
mov
push
fwait
inc
cmp
ja
jae
(bad)
idiv
movs
fld
popf
jl
inc
jmp
imul
mov
jnp
ficom
xchg
fist
bound
idiv
inc
ins
mov
jp
hlt
jl
fist
aad
jl
cmp
movs
push
dec
xchg
push
scas
adc
mov
lods
dec
push
pop
(bad)
retf
std
in
jl
int3
not
and
fadd
fstp
xlat
jl
imul
and
outs
xchg
mov
sahf
mov
cdq
jl
fcos
mov
jl
call
xor
cmp
pushf
add
fs
cmp
adc
xchg
sbb
sub
inc
test
jl
(bad)
jns
scas
fwait
add
mov
mov
xor
add
retf
jns
in
sub
loop
inc
adc
(bad)
and
inc
or
xchg
fwait
push
es
xchg
and
in
jl
pop
mov
sub
call
jbe
push
(bad)
mov
xor
cmc
jl
lods
mov
jl
mov
jp
jl
push
(bad)
cmp
or
inc
adc
fwait
jno
jge
jae
and
(bad)
jl
add
pop
(bad)
cmp
cmp
cwde
jbe
push
adc
adc
mov
push
fucomip
push
fisub
jl
xchg
pushf
add
inc
addr16
and
stc
(bad)
mov
sar
leave
lds
(bad)
mov
idiv
sub
test
sti
loopne
sub
mov
lods
adc
xor
int
inc
jl
jle
xor
push
sbb
mov
rcr
stos
rcr
pop
adc
add
int
ret
pop
and
push
cli
fmul
outs
ja
stc
mov
add
adc
in
and
inc
jl
imul
dec
lods
push
jl
mov
and
addr16
sbb
jl
xchg
pop
mov
js
cmp
sbb
(bad)
jl
push
fdiv
cmp
mov
or
pop
or
mov
pop
jge
leave
movs
dec
retf
cwde
icebp
cmp
mov
call
mov
pop
stos
repnz
cld
mov
stc
stos
sub
ret
sbb
scas
xchg
fidiv
dec
mov
cmp
pop
cwde
adc
jl
push
pop
push
mov
stc
inc
movs
test
and
int3
jl
(bad)
xlat
les
aas
sub
push
sbb
xor
pop
(bad)
fs
or
add
cmp
push
sub
jl
fldcw
popf
or
fistp
push
adc
adc
cmp
outs
int
mov
mov
inc
and
fdivr
pop
and
add
in
push
jl
mov
std
mov
and
lds
das
enter
retf
dec
dec
lods
sub
stos
jp
scas
sub
pop
jl
movs
mov
push
jnp
xor
cmp
int3
mov
fnstsw
and
mov
mov
dec
(bad)
das
pop
scas
mov
adc
pushf
mov
mov
adc
pop
into
xchg
push
jl
pop
(bad)
outs
or
mov
enter
dec
cmp
jle
jl
(bad)
lahf
or
imul
arpl
pusha
push
xor
dec
mov
jl
sub
or
mov
stos
jl
ds
jl
dec
push
mov
test
jl
aad
imul
jl
call
xor
stos
jl
mov
les
repz
enter
push
pushf
jl
and
ins
jmp
adc
jl
sar
imul
lea
jl
icebp
inc
and
fistp
(bad)
cwde
enter
or
jl
xor
repz
loope
xchg
jl
xor
shl
sbb
pop
xchg
mov
mov
lods
and
jnp
sub
iret
into
popf
or
jl
leave
mov
jnp
add
inc
stos
sti
sbb
jge
mov
or
jns
(bad)
ds
aad
xchg
mov
out
popa
mov
push
call
pop
cmp
push
cdq
jl
fs
push
mov
pop
ret
sbb
hlt
jl
xor
out
test
sbb
add
nop
jl
xor
push
ins
lods
sub
jl
cdq
inc
pop
sbb
jp
jl
sar
add
sar
int
mov
or
jl
mov
push
mov
jge
fcmovne
fbld
stc
retf
pop
lahf
push
mov
out
mov
sub
mov
dec
stos
push
mov
test
jl
push
ja
jg
mov
push
sahf
mov
sti
stos
jl
jno
(bad)
(bad)
jns
adc
fild
jl
jne
pop
(bad)
mov
jl
(bad)
sub
stos
and
sbb
shl
mov
in
jb
sub
fisub
sbb
ins
mov
(bad)
cdq
aam
iret
jl
hlt
xchg
xor
pop
xchg
in
inc
repz
sbb
sub
or
lds
and
in
rol
dec
(bad)
pusha
sbb
lock
fstp
mov
popa
shl
jl
add
out
int3
test
lahf
push
ss
dec
mov
jecxz
sar
nop
mov
test
movs
int3
pop
cli
(bad)
add
ds
imul
fldenv
(bad)
jle
aad
jl
lahf
and
add
enter
mov
and
movs
(bad)
pop
gs
and
pusha
in
arpl
xchg
jl
fstp
pop
in
test
loop
mov
mov
jl
or
lahf
or
int3
in
jge
aas
loop
hlt
mov
jg
inc
dec
sub
and
add
in
mov
fidiv
inc
sub
(bad)
sbb
cmp
sbb
lock
jns
and
push
mov
cwde
or
push
shl
cmp
stc
jbe
(bad)
daa
fbld
in
lahf
cmp
leave
not
outs
pop
jl
mov
mov
pushf
mov
loope
stos
test
adc
movs
push
inc
jl
ss
push
mov
dec
fbstp
aaa
fisubr
jl
ins
aam
push
add
jl
stc
and
dec
cdq
ret
cmp
mov
dec
fwait
(bad)
test
pop
pop
data16
xchg
mov
jmp
fadd
jl
mov
in
fild
std
add
(bad)
push
retf
stc
(bad)
cmp
ds
rcr
repnz
pop
pop
pop
xchg
imul
mov
mul
pop
jbe
mov
ins
aad
jl
inc
rcr
fild
int3
push
outs
mov
bswap
xor
xchg
jl
pop
mov
mov
stos
pop
jl
sar
arpl
jl
push
sub
mov
add
push
popa
ret
pop
imul
cld
xchg
lods
pop
mov
jl
xchg
jmp
into
sub
jl
scas
into
loope
stc
jnp
jl
push
inc
fimul
fild
mov
fcomp
and
pop
cmp
popf
ja
mov
jmp
mov
fstp
les
mov
jl
cdq
xor
call
ja
push
xchg
in
jmp
cwde
mov
jl
cdq
mov
lahf
jge
xchg
add
ja
mov
repz
jl
mov
movs
mov
stc
jl
gs
aaa
jl
(bad)
call
push
cmps
sub
rcl
lock
jl
and
loope
inc
call
test
leave
shr
scas
or
xchg
mov
mov
out
xor
jl
xor
mov
movs
sbb
fild
sar
repz
jecxz
ja
sub
cmp
cwde
push
(bad)
mov
loopne
or
jns
(bad)
xchg
(bad)
mov
into
cld
mov
mov
out
jmp
pushf
aas
sar
inc
jl
dec
shr
retf
push
jge
xchg
xor
out
popa
push
neg
cld
sahf
push
rcl
push
jl
pop
lea
jl
add
div
fisttp
jl
push
inc
inc
mov
mov
cmp
test
lea
dec
ja
xchg
ins
test
adc
jmp
inc
(bad)
cmp
sbb
jl
sahf
call
xlat
push
cs
sbb
loop
jg
cmp
mov
(bad)
int3
or
sbb
dec
outs
jno
mov
sbb
push
add
jl
lahf
fbld
adc
lods
jnp
mov
add
add
idiv
adc
(bad)
jl
iret
pop
cmp
daa
dec
fsubr
push
and
popf
pushf
popa
xor
fadd
std
pop
adc
mov
outs
fiadd
pop
enter
pop
pushf
int3
fld
pop
and
jecxz
sbb
sub
mov
mov
mov
jle
sbb
mov
cmc
mov
jl
xchg
push
push
aas
shl
cwde
out
mov
jle
iret
fdivrp
cmps
sahf
(bad)
fld
shl
cmp
jp
and
push
cmp
jo
jge
fisttp
hlt
xchg
dec
retf
mov
push
push
sbb
mov
mov
pop
jnp
iret
out
or
jl
in
xchg
sbb
and
jl
stos
addr16
jecxz
jl
adc
sub
outs
shl
aam
stc
mov
mov
test
push
test
aam
mov
data16
cs
jmp
push
xor
scas
lea
pop
jge
mov
cmc
or
shr
push
pop
jge
mov
mov
cmp
pop
fnstsw
mov
push
adc
outs
add
inc
adc
test
pushf
adc
inc
fisub
(bad)
jl
pop
and
jl
lds
in
jl
push
aad
push
jp
push
jl
mov
mov
jl
imul
jp
xor
mov
jmp
xchg
push
mov
jl
pop
add
add
cmps
mov
xchg
mov
cs
mov
fcomip
mov
jl
dec
add
pop
out
mov
inc
add
lods
dec
push
pop
push
jl
jae
or
sahf
pop
std
jl
enter
xchg
xchg
(bad)
ins
or
test
mov
xchg
jl
and
mov
jl
mov
sub
xchg
push
stc
movs
ror
fiadd
pop
xchg
aad
or
add
outs
(bad)
hlt
into
push
cld
fst
int
inc
(bad)
cs
outs
sbb
jle
mov
jl
retf
in
sar
mov
dec
(bad)
clc
push
iret
mov
cmp
xor
fcomip
add
(bad)
icebp
aad
jl
nop
or
jg
sub
jl
ds
scas
mov
int
or
add
push
fild
push
stc
cmp
(bad)
int3
mov
pop
or
dec
xor
in
sahf
jl
push
lds
(bad)
(bad)
fidivr
(bad)
mov
ss
jl
ds
enter
push
jl
jle
fstp
(bad)
xlat
jl
div
cmp
push
pop
push
loop
nop
out
push
or
jp
bnd
bndstx
pop
fstp
addr16
sbb
push
dec
stc
pusha
std
mov
mov
xchg
xor
xor
jl
pop
and
push
xor
pop
jp
add
icebp
outs
sbb
pop
jl
push
mov
jnp
cmp
cld
mov
jl
aad
ja
mov
int3
sbb
mov
sub
jl
jae
sub
xchg
and
fcmovnu
rol
mov
cwde
push
(bad)
scas
loop
call
test
out
mov
adc
loopne
std
mov
push
idiv
xchg
fsub
mov
ret
cld
mov
out
inc
int3
lods
sti
scas
cmp
dec
mov
jmp
fiadd
stc
jl
aas
pop
inc
or
jmp
dec
push
mov
jl
pusha
xchg
fld
jns
jmp
jl
push
add
add
ret
jl
adc
jl
ror
xchg
and
clc
jbe
daa
xor
pusha
imul
stc
add
jnp
sbb
mov
outs
mov
pop
jne
mov
pushf
pop
push
in
ds
add
es
(bad)
add
leave
lds
aam
or
xchg
mov
jp
sub
sub
mov
jb
mov
mov
(bad)
sahf
jge
fistp
or
sub
xor
cmp
dec
sahf
cld
pop
jns
scas
mov
cmp
mov
int
iret
push
cmp
jl
psrlq
(bad)
fmul
ins
jle
jl
shr
ja
jmp
ins
and
jb
hlt
and
jnp
iret
cmps
dec
or
jo
(bad)
push
aaa
ss
jge
rcr
into
fst
push
mov
test
jl
dec
mov
cli
adc
aad
sub
fdiv
xchg
cmp
jl
neg
pop
xchg
es
dec
mov
jne
and
add
(bad)
out
(bad)
or
sub
aas
sbb
jge
mov
mov
cbw
mov
mov
xor
call
call
int
call
outs
shl
push
xor
xchg
jl
mov
lods
les
dec
in
aad
pop
jmp
pop
xchg
or
push
push
jns
sbb
es
mov
push
jmp
int
iret
inc
loop
mov
push
jb
add
retf
pop
out
jecxz
movs
out
fdiv
mov
nop
sti
ds
cmp
outs
scas
call
aad
push
aaa
add
jl
push
sub
jl
lahf
fcom
mov
call
or
xlat
mov
(bad)
sbb
pop
rcr
lods
jnp
mov
lods
dec
retf
pop
sub
sbb
int3
jae
mov
sub
into
(bad)
jle
jl
sbb
mov
jl
pop
add
pusha
mov
dec
jae
inc
cmc
pop
jl
add
retf
inc
pop
pop
hlt
or
mov
iret
dec
adc
cmp
(bad)
xchg
call
imul
push
dec
bound
aad
mov
call
jl
(bad)
idiv
mov
inc
mov
addr16
xor
pushf
add
jl
stc
cmp
aad
push
or
ins
(bad)
cld
call
push
pop
loop
cmp
aad
int3
xchg
inc
mov
es
and
sbb
lock
xor
in
jl
in
loop
sahf
cmp
inc
jns
push
mov
iret
jl
(bad)
mov
sbb
push
out
cs
mov
jl
das
idiv
push
sbb
ins
outs
and
xor
idiv
out
jle
retf
pushf
out
sar
jl
(bad)
mov
into
adc
sahf
jl
stc
jecxz
mov
or
cmp
inc
call
fmul
or
dec
scas
fisub
outs
out
in
jl
xlat
push
mov
mov
jl
push
cmp
pop
mov
call
or
mov
push
lds
pop
cld
test
jl
cld
movs
push
sbb
pop
mov
cmp
jl
scas
out
test
add
jl
int
std
xchg
sub
dec
outs
push
ins
jl
push
stc
lock
mov
sbb
push
cmp
fdivr
imul
mov
dec
mov
pop
sti
mov
rol
jmp
jle
pop
retf
mov
push
jl
aam
cmp
imul
mov
pop
leave
fnstcw
mov
test
ds
popa
int
iret
mov
jl
ud0
outs
ins
xchg
call
scas
push
repnz
jnp
sbb
mov
pop
cld
add
jl
push
xor
mov
call
mov
add
inc
push
mov
dec
outs
movs
dec
jl
xor
in
pop
mov
jge
or
mov
int3
mov
push
sbb
push
movs
out
fstp
sbb
movs
fdiv
or
sar
shld
daa
cmp
pop
aas
ror
xor
ja
shl
lahf
mov
das
jl
dec
cmp
outs
ja
ins
adc
shr
jne
leave
push
out
fsubr
(bad)
or
push
pop
sbb
dec
jae
(bad)
outs
xchg
mov
adc
cdq
fsqrt
push
push
mov
sti
pop
cmp
inc
fisub
add
loopne
fistp
retf
add
pop
enter
cmp
adc
sbb
test
cmp
push
jne
xchg
(bad)
frstor
or
xor
fcom
test
fimul
clc
jl
add
movs
sub
ins
jl
ja
(bad)
iret
mov
pop
jl
cmp
frstor
cwde
call
push
pop
pop
dec
daa
jnp
xchg
cld
cwde
outs
mov
cmp
test
aam
mov
mov
lea
mov
popf
jl
cdq
out
jge
scas
leave
retf
ror
ret
dec
inc
fnstsw
fsubr
cmp
and
pop
cmp
sbb
or
jbe
dec
xor
fcmovb
dec
jl
sbb
cmps
jns
icebp
mov
shl
mov
fidivr
test
fisttp
cmp
hlt
xchg
mov
or
pusha
cdq
mov
lea
push
in
lock
fst
jp
xor
cs
jge
jmp
mov
ins
sar
fstp
ds
push
jl
and
pushf
cdq
jne
fwait
stos
test
mov
mov
outs
push
dec
jl
mov
push
int3
outs
and
nop
lds
inc
shl
test
cdq
stos
jl
shr
dec
outs
ror
jecxz
cmp
push
lahf
fstp
push
jl
inc
int3
(bad)
mov
adc
stc
xchg
iret
les
dec
xor
cmp
js
aam
bound
xchg
push
repz
jl
fld
es
cld
mov
bound
push
mov
aad
and
into
mov
cdq
rol
mov
jecxz
push
fistp
or
aam
adc
icebp
pop
mov
fsubr
lods
mov
inc
ja
mov
xor
rol
jl
icebp
push
jmp
fisubr
jmp
shl
pop
ins
sar
leave
out
cmp
daa
mov
sar
std
(bad)
fmul
xchg
movs
cwde
lods
(bad)
jl
shl
xchg
ds
int
push
add
jns
add
ret
jl
iret
mov
sub
xchg
std
and
adc
cmps
jmp
loop
ja
sar
in
fst
lock
lea
push
fisub
sbb
or
ins
cdq
js
jl
aam
fild
rcr
push
cld
dec
or
in
jge
fstp
adc
call
rep
mov
mov
fs
ins
retf
jl
jnp
mov
jnp
pop
ror
push
fadd
mov
popf
lds
sahf
xchg
jl
rcl
add
adc
sti
sbb
(bad)
ins
mov
push
pop
int
adc
xor
pop
je
ret
ret
add
cmp
std
test
sti
shr
test
mov
jl
jae
jo
call
imul
sahf
jnp
rcl
inc
sbb
fbld
ja
adc
call
lea
test
(bad)
rcr
push
repz
add
jb
mov
or
fs
hlt
cdq
xor
retf
pop
ret
mov
(bad)
fimul
cld
mov
fldenv
adc
jp
xor
fnstsw
mov
ja
(bad)
dec
adc
jnp
add
in
jl
mov
in
outs
or
movs
or
out
ja
stc
add
popa
or
arpl
cmc
in
mov
out
adc
jl
(bad)
add
add
test
cwde
or
xchg
sbb
jl
out
daa
(bad)
sbb
sub
in
jnp
movs
retf
bound
pop
lods
pop
xchg
outs
sbb
(bad)
jl
push
jb
lds
and
pop
xchg
lods
lock
popa
gs
push
cmc
add
pushf
jns
sub
sub
aas
dec
mov
mov
daa
test
fldlg2
mov
cmps
mov
mov
or
fnstsw
fcom
lock
mov
mov
popa
cdq
retf
and
fsub
stc
adc
jl
movs
mov
nop
fwait
jge
fnstsw
(bad)
enter
jnp
mov
sbb
fbld
inc
sub
pushf
or
cmps
sar
aad
leave
jno
jl
movs
push
loope
jge
pop
jl
ret
repz
or
jl
inc
xor
push
test
pop
cmc
mov
mov
in
shl
outs
jl
jns
pop
cmp
jmp
repnz
jl
xchg
cli
mov
push
or
and
jl
hlt
inc
xor
pusha
(bad)
mov
jl
inc
out
je
jl
adc
aad
pop
sbb
sbb
ins
loopne
mov
ret
iret
push
aas
jl
xor
(bad)
sar
test
test
jl
mov
push
ret
or
(bad)
int3
sahf
jne
je
daa
cld
push
mov
popa
push
fsub
ins
rcl
leave
xchg
jl
ror
cmp
iret
ja
ret
jecxz
leave
lods
(bad)
xchg
cmps
jnp
rol
jg
(bad)
pop
cmc
pop
ja
into
jp
scas
jo
sbb
cmp
int3
mov
cmc
jge
add
outs
and
push
pop
cld
push
push
outs
mov
jl
add
ret
enter
neg
sub
or
int3
and
sub
add
test
jl
push
push
in
add
cwde
int
xchg
mov
mov
lods
cmp
push
add
pop
(bad)
shl
jl
aam
jbe
jecxz
mov
nop
out
dec
jp
pop
xor
xlat
xor
mov
popf
cmp
aaa
or
xchg
ds
sub
xor
pushf
cld
add
and
hlt
popf
std
aaa
xchg
cld
ror
cdq
call
push
aam
cmp
enter
pop
in
mov
idiv
mov
rcr
xchg
inc
pop
jge
out
fs
push
je
lahf
rol
xchg
mov
or
jge
push
adc
inc
in
push
jp
jl
(bad)
fldenv
push
pop
pop
jl
das
faddp
out
jbe
add
xchg
sti
mov
lock
stos
sar
jb
jno
(bad)
jl
sub
add
loop
jl
into
add
jge
mov
mov
jl
mov
push
test
adc
enter
fst
cmp
fiadd
jl
ds
call
xchg
into
mov
xchg
mov
mov
(bad)
jo
je
jl
push
jb
inc
mov
push
jl
xchg
es
fcmovbe
add
jge
or
ja
int3
inc
cmp
sub
iret
dec
sub
les
xchg
inc
mov
(bad)
mov
push
pop
and
hlt
fwait
(bad)
xor
inc
pop
or
push
cdq
fisub
jl
enter
jnp
adc
pop
jmp
outs
xchg
and
mov
and
ret
psadbw
sbb
ja
sahf
xchg
popf
pop
loop
push
hlt
or
jl
stc
test
cmc
xchg
add
push
push
sti
in
jl
stos
int3
ins
and
test
ins
(bad)
mov
jl
mov
fxch
jl
aad
cmp
cmc
gs
mov
cmps
scas
fcmovnu
jl
not
enter
pop
mov
retf
pop
fstp
ror
xchg
jp
sar
mov
jmp
push
push
push
mov
nop
adc
xlat
retf
inc
aam
jl
mov
adc
xchg
jl
dec
fwait
push
mov
cld
fadd
xor
fsubr
pop
ror
pop
les
pop
dec
cs
(bad)
cld
xchg
leave
and
or
cmp
stc
in
pop
call
into
push
mov
test
arpl
adc
jnp
stos
pop
ffree
ins
xchg
push
jge
or
and
xor
cmp
push
pusha
dec
cmp
sbb
add
popa
jo
sbb
push
or
adc
jl
and
in
cdq
mov
aad
lods
jmp
out
pop
add
jl
sub
aam
and
jl
jnp
or
ret
jl
dec
test
rcl
loopne
push
add
ds
popa
mov
mov
aad
inc
es
mov
sahf
mov
pop
pop
dec
inc
and
mov
mov
add
pushf
fisub
shl
popa
inc
movs
hlt
cmp
addr16
push
jmp
out
xlat
and
inc
pusha
pop
cld
mov
dec
aaa
loopne
(bad)
jnp
mov
adc
pushf
pop
jno
ja
mov
test
pop
(bad)
sbb
jge
not
lods
sub
int3
mov
mov
(bad)
mov
and
(bad)
mov
imul
or
(bad)
movs
jg
or
test
pop
lahf
push
cmp
shl
push
jl
xchg
sti
push
xchg
mov
cmc
cld
leave
shl
stc
jl
mov
sbb
cmps
and
xchg
in
mov
jecxz
inc
cs
lea
inc
jl
dec
xlat
push
push
jl
mov
adc
sbb
mov
fwait
outs
cmp
push
pop
fdiv
test
push
out
jl
or
aad
jle
mov
rcr
jl
rcr
into
jl
fdivr
jmp
and
(bad)
jl
push
pop
push
push
xchg
adc
pop
add
fbld
jnp
in
je
mov
les
lods
cld
xchg
adc
and
cdq
jl
mov
pop
retf
movs
inc
sub
mov
bound
mov
jl
mov
ins
iret
jge
ja
push
cmp
fidivr
jp
cmp
test
dec
pushf
xor
xchg
dec
and
adc
(bad)
lods
sbb
mov
icebp
ins
pop
pushf
lahf
sub
das
xchg
int3
ds
inc
inc
add
rcr
jge
(bad)
xchg
(bad)
push
not
gs
pop
imul
popf
clc
scas
ror
sbb
mov
mov
adc
inc
pop
cld
cmp
jmp
mov
(bad)
sar
lahf
cmp
add
or
jl
mov
inc
inc
(bad)
sbb
daa
cmp
icebp
dec
pop
jmp
aad
mov
mov
mov
pop
cmp
in
ds
mov
outs
sar
test
jl
push
(bad)
iret
and
les
add
int3
ja
mov
or
adc
jl
dec
std
sub
inc
fcmovne
fsub
mov
stos
stc
lahf
mov
adc
rcr
jne
add
push
or
fldcw
cwde
in
jl
call
jl
mov
add
cmp
cmps
fimul
ds
add
mov
aad
and
sub
pop
inc
jne
jl
inc
push
pop
fnstsw
stc
outs
jmp
dec
je
inc
jl
call
jl
ins
push
aas
imul
jns
int
xchg
(bad)
and
xchg
jl
dec
mov
pushf
xchg
or
mov
test
sbb
hlt
pop
fstp
dec
rcl
enter
jbe
test
xor
cmp
arpl
pop
sub
pop
pop
xchg
test
mov
inc
out
jl
mov
gs
mul
xchg
int
rol
mov
push
les
fnstsw
jbe
adc
mov
leave
push
dec
push
fstp
adc
mov
movs
jl
inc
jge
or
fmul
push
popf
mov
fistp
int3
push
sbb
lds
push
mov
xchg
js
sar
dec
(bad)
pop
push
jl
pop
and
xor
fdivr
xor
ins
xor
lock
(bad)
cmp
and
sbb
push
xchg
and
ja
dec
fnstcw
test
jl
test
popa
ins
pop
xchg
popa
shr
cmp
rcr
xor
push
push
cmp
lds
daa
push
bound
gs
arpl
loope
push
push
mov
sahf
in
les
jl
sbb
daa
dec
(bad)
jecxz
jnp
fidiv
push
ror
mov
sbb
std
sub
xchg
pusha
cs
cwde
xchg
or
mov
fld
bnd
xchg
xchg
jl
pushf
mov
lock
iret
(bad)
jne
outs
(bad)
(bad)
daa
push
in
jl
push
jp
std
pop
jae
pop
mov
push
add
movs
dec
ss
xor
(bad)
jl
repnz
cmps
push
fbstp
cli
ins
push
cmp
jl
cmps
pop
mov
sbb
or
xor
ror
sahf
movd
jp
pusha
shl
cmp
clc
add
lods
dec
in
push
xchg
lods
test
mov
mov
mov
mov
jmp
push
mov
popa
ja
cmp
pop
leave
xchg
mov
jl
fisttp
add
xchg
call
sbb
adc
pop
mov
hlt
jecxz
lds
repz
stos
ret
mov
add
sar
cmc
dec
mov
iret
jl
pop
xor
out
adc
ficomp
jl
jmp
ja
mov
or
retf
mov
cld
jl
push
popa
fdivr
add
and
and
cmp
shl
ds
data16
in
jl
call
pop
aam
jl
stc
test
out
cmps
jo
jbe
pusha
xchg
stos
rcr
xchg
mov
mov
dec
mov
jl
mov
daa
ja
out
repz
sbb
jle
jl
ret
imul
jl
cmc
leave
cmp
stc
fcomp
mov
jl
sbb
xchg
jl
fcom
leave
ja
jae
imul
mov
mov
inc
xchg
jbe
shl
or
cmp
jnp
mov
test
mov
icebp
xchg
pop
imul
stos
aaa
sbb
pusha
ror
mov
mov
mov
shr
enter
jl
dec
lds
popf
fldcw
icebp
call
mov
int3
call
cdq
sbb
mov
adc
inc
mov
and
js
pop
xor
jl
jns
inc
aad
ja
dec
pop
xchg
jno
lock
int3
cmps
mov
imul
xor
cmps
and
pop
pop
aam
scas
pop
into
and
pop
sub
call
dec
popf
mov
dec
into
gs
dec
mov
test
jbe
cli
jnp
repnz
call
scas
ja
into
adc
int
sub
xchg
in
(bad)
sub
xchg
aam
or
add
add
pop
sbb
popf
gs
imul
aad
stc
push
test
in
popf
jge
scas
jmp
out
pop
mov
stc
fidivr
(bad)
jl
fst
sub
aad
xchg
xlat
mov
jns
aam
jl
imul
lds
push
sbb
mov
cmp
rol
lods
popf
dec
jp
test
jp
mov
or
cdq
into
test
in
xchg
mov
pop
xchg
lods
lahf
inc
lea
mov
mov
sbb
push
jnp
movs
fidivr
jmp
mov
mov
mov
jl
dec
adc
into
jl
sbb
jbe
test
pop
div
cmps
xchg
movq
jl
out
scas
fwait
aad
ins
inc
cmps
pop
xchg
mov
int
fbld
jle
cmp
popa
lds
push
fwait
inc
mov
mov
les
add
cmp
jge
fnstcw
std
xchg
jg
fnstsw
push
scas
cdq
fbstp
cmps
outs
and
jle
pushf
jecxz
test
inc
xchg
adc
adc
jge
ss
aam
dec
lahf
mov
(bad)
jl
lods
or
hlt
outs
xor
scas
mov
sbb
shl
xchg
mov
mov
adc
jl
pop
xor
mov
(bad)
jns
dec
and
gs
jle
test
add
jl
pop
sub
inc
cmps
pusha
lahf
test
fcomip
mov
cmp
push
jmp
xor
imul
and
jle
mov
out
sahf
jnp
mov
and
pop
mov
add
ins
aad
xchg
imul
jns
mov
cmp
xchg
jl
jne
xchg
fldcw
bound
ja
std
mov
or
test
dec
rcl
jb
pop
ins
mov
or
movs
add
lahf
sub
stos
pop
test
cmp
adc
ret
adc
rcl
imul
ja
fdivr
jmp
jge
aaa
jne
outs
pop
mov
mov
push
push
enter
(bad)
test
shl
out
dec
out
pop
mov
movs
pop
aam
(bad)
aas
pushf
pop
push
out
push
mov
inc
enter
xor
rol
sub
adc
(bad)
fdivr
push
in
adc
(bad)
mov
xor
cmps
cmps
adc
xchg
stos
and
mov
dec
test
ffree
stos
out
mov
jne
(bad)
std
loopne
in
jp
stc
mov
cmps
sbb
es
scas
jl
outs
out
imul
xchg
add
jnp
retf
pop
adc
sub
jl
test
mov
imul
xchg
mov
sbb
xchg
mov
fs
jae
xor
std
retf
jl
xchg
in
jb
inc
popa
ja
mov
leave
cmp
std
mov
jl
push
dec
retf
sub
inc
test
sub
daa
lods
mov
test
in
(bad)
stc
jl
data16
shr
cdq
jl
fcmovnb
shr
rcl
sub
jge
hlt
mov
mov
mov
jb
retf
mov
jl
add
shr
dec
jl
push
xor
nop
(bad)
pop
inc
stc
loop
sar
add
outs
shr
push
popa
jmp
es
jnp
out
sbb
xchg
iret
cld
sub
in
jl
push
cmp
mov
ja
out
sbb
retf
mov
nop
test
jl
xchg
hlt
and
sub
jl
cwde
jecxz
or
outs
mov
pop
gs
mov
jno
xor
cld
outs
xlat
cmp
mov
test
jl
sar
pop
es
jmp
pop
and
cmc
add
ds
int3
jl
mov
lea
das
cwde
fbld
pushf
mov
outs
sar
rcl
mov
adc
sbb
scas
jl
mov
jl
inc
sar
loopne
xor
cmp
scas
(bad)
push
jl
hlt
test
retf
jle
add
jl
or
sbb
js
aas
(bad)
xor
cs
ss
imul
arpl
add
jb
fimul
ud0
test
jl
rcr
pop
and
outs
push
ds
pop
int
fadd
jle
cmp
jle
add
mov
cld
fwait
(bad)
push
daa
mov
mov
gs
jl
jp
xor
scas
shr
pop
add
fild
or
adc
es
ds
cld
mov
xor
mov
cld
retf
adc
pop
retf
in
jmp
jecxz
int3
movs
(bad)
xor
rcl
retf
enter
aam
test
mov
sbb
jge
lahf
dec
inc
dec
xchg
test
shl
jmp
mov
(bad)
xchg
loopne
mov
popf
ret
sahf
hlt
(bad)
cmps
jl
dec
mov
imul
lea
mov
les
mov
call
mov
hlt
pop
or
(bad)
jl
add
push
shl
call
pop
jns
add
dec
mov
int3
shl
xor
aas
jl
mov
pop
jo
pusha
dec
pop
test
outs
sub
lock
mov
(bad)
sahf
cld
(bad)
fcmovb
popf
mov
mov
sbb
popa
push
cdq
push
stos
pop
packssdw
jl
frstor
hlt
fcom
jl
mov
jmp
jl
ins
lds
jl
or
fst
mov
xchg
xchg
jl
jmp
pop
out
sahf
pop
lahf
jl
mov
add
mov
movs
lods
gs
jl
inc
jge
rcr
sahf
xchg
sahf
sbb
jl
push
xchg
loope
test
test
dec
loop
ins
ficom
ds
movs
sbb
cmp
icebp
fild
cld
push
dec
sti
out
aad
mov
in
fidivr
push
int3
inc
call
ror
gs
fdivp
dec
addr16
jl
push
lds
xor
ja
fistp
loope
mov
mov
jl
push
mov
cmp
push
mov
cld
nop
push
cwde
fiadd
jl
rcr
or
jl
pop
retf
adc
popa
fld
or
ficom
lahf
scas
push
ins
sub
inc
xchg
in
lahf
mov
add
xchg
daa
or
loopne
(bad)
call
cmp
sbb
gs
aad
add
ja
push
sbb
sub
mov
pop
clc
fwait
mov
adc
cwde
pushf
push
mov
or
jns
cmps
fsub
jp
jmp
mov
hlt
les
shr
addr16
outs
nop
out
jl
sbb
xchg
ins
or
and
jl
push
into
pop
movs
or
jl
and
adc
adc
mov
xchg
js
dec
(bad)
xlat
push
xor
fldcw
and
in
popf
push
mov
mov
std
sbb
in
jl
push
(bad)
iret
push
(bad)
call
push
aam
into
jl
call
jl
cmp
mov
js
push
cmps
leave
fld
dec
ja
push
in
call
clc
dec
jnp
rol
mov
xchg
or
test
data16
int
inc
mov
repz
aam
mov
movs
enter
jp
fsubr
mov
adc
push
jl
jge
xchg
and
adc
cmp
popf
xchg
jl
jge
or
pop
push
stos
shr
push
fwait
jl
xor
mov
dec
mov
cmp
out
or
outs
mov
cmp
sbb
jl
xchg
xlat
pop
adc
fwait
(bad)
jl
inc
fimul
cmp
retf
movs
jecxz
aam
push
enter
jg
mov
cld
or
dec
jp
ret
inc
xor
xchg
pushf
jecxz
out
outs
xchg
aaa
jecxz
pop
loope
cwde
push
scas
jl
adc
or
das
or
jl
aaa
inc
cld
push
out
aas
jl
push
sahf
and
adc
adc
jo
jbe
push
mov
lods
jl
(bad)
movs
ret
push
jl
mov
pop
imul
pop
das
adc
push
cs
sahf
push
jl
(bad)
fadd
jno
nop
and
and
icebp
in
inc
aad
cld
mov
adc
or
dec
push
dec
gs
mov
xor
mov
retf
aaa
or
int3
loopne
adc
lahf
cmp
cmp
mov
cld
pop
sbb
push
mov
les
cmp
sbb
pop
jae
icebp
add
jl
pop
out
push
mov
jl
xor
fdivr
jl
xlat
fnstcw
jl
mov
call
cli
mov
jmp
loop
xchg
(bad)
loopne
shr
(bad)
ja
fldl2t
pop
mov
aad
popf
pop
jne
lahf
lods
in
rcl
xor
sbb
push
push
mov
test
retf
aad
mov
push
mov
jnp
sub
xchg
dec
lea
movs
cmp
jl
rol
inc
mov
cmps
fistp
data16
jne
popf
movs
fcomi
inc
test
(bad)
ja
pop
ret
push
fst
xlat
cld
frstor
shr
fcomp
sub
call
pop
imul
fldcw
adc
xor
adc
mov
(bad)
mov
add
cmps
out
jns
ja
mov
jl
pop
stc
mov
ret
inc
add
mov
outs
hlt
xor
push
or
outs
sbb
add
daa
outs
cmp
imul
or
dec
mov
mov
fistp
icebp
call
cmp
fcomi
push
push
cmp
mov
inc
(bad)
rcr
cmp
xchg
jge
push
mov
sub
(bad)
xor
in
(bad)
movs
cmps
push
ins
pusha
xchg
xlat
shl
jl
mov
pop
fcomp
sub
xor
jl
cdq
sbb
dec
popf
push
jl
test
or
pop
xchg
push
cmps
(bad)
jge
push
pop
xchg
cdq
cwde
ins
gs
jge
sub
mov
jl
(bad)
std
hlt
and
cmp
push
sbb
in
xor
rcr
repnz
dec
jge
pop
fdiv
test
xchg
mov
dec
mov
jl
pop
xchg
dec
retf
mov
mov
shl
arpl
jl
xor
pop
out
mov
cdq
movs
mov
mov
mov
jge
push
dec
pop
fsubr
test
jl
sbb
mov
call
jne
(bad)
fdiv
jl
mov
call
jecxz
jnp
mov
out
dec
jnp
mov
call
(bad)
cdq
mov
loop
pop
in
(bad)
push
imul
push
xchg
scas
(bad)
adc
out
jmp
in
aas
cld
(bad)
mov
xchg
(bad)
int3
mov
adc
call
mov
pop
mov
js
in
push
(bad)
sbb
push
pushf
mov
jl
lods
btr
push
cmps
mov
fisttp
inc
int
jl
rcl
mov
lds
mov
outs
pop
xor
jg
mov
es
jl
and
xor
jne
(bad)
(bad)
cld
test
es
sbb
jne
stos
pop
int
push
arpl
std
retf
jge
fwait
sbb
mov
stos
ss
rol
fcomp
xor
jl
sub
je
and
fsubp
mov
mov
jl
in
rcl
gs
jl
daa
add
loop
mov
cs
xlat
popf
(bad)
repz
pop
sti
movs
mov
push
aad
in
push
fwait
ja
ret
or
iret
sbb
jl
rcl
dec
mov
sbb
and
push
sbb
aad
or
sahf
call
in
jl
bound
xlat
jl
cmp
mov
adc
idiv
test
cdq
and
sub
cmps
ins
fld
iret
jl
dec
jnp
jmp
fistp
mov
pop
fcom
retf
or
xor
mov
xchg
paddusb
xchg
or
popf
ficomp
jmp
aad
mov
pop
sub
sbb
pop
sbb
mov
push
lods
fild
mov
inc
cdq
push
sub
in
jge
fdivr
fadd
or
jb
inc
test
inc
add
shl
leave
jge
jl
cmp
arpl
push
pop
pusha
jnp
lea
ss
fdivr
push
bound
mov
push
or
or
pusha
pushf
jbe
or
jl
movs
aam
and
or
pop
xor
push
cmp
adc
jl
xchg
retf
jg
data16
push
fdiv
cld
adc
mov
push
xor
xor
push
jb
push
add
jl
lock
and
(bad)
jl
stc
rol
push
bound
out
jl
test
jnp
and
push
add
adc
movs
ds
out
aad
push
cs
or
push
imul
pop
push
inc
int
cld
add
aaa
gs
lahf
add
fdivr
mov
in
and
scas
fnstcw
std
mov
in
lods
iret
outs
mov
push
sub
mov
xchg
sbb
and
sub
adc
mov
pushf
push
sbb
pop
rcl
or
scas
ret
cmc
push
sbb
jl
cmps
ficom
ret
in
cs
dec
inc
xor
mov
(bad)
pop
xchg
mov
mov
(bad)
(bad)
pop
jmp
push
daa
popf
pop
mov
mov
sub
setns
call
cwde
jl
inc
dec
sahf
pop
fcomip
mov
lahf
xchg
ss
cmp
(bad)
retf
cmp
sub
std
jl
mov
fnstcw
push
add
mov
cmp
add
ins
das
add
jae
(bad)
shl
xor
ja
pusha
sahf
cmp
jmp
mov
xchg
inc
rol
cmp
ror
in
mov
fist
cwde
fistp
fst
xchg
shl
jl
movs
paddsw
adc
test
pop
xchg
inc
pop
pushf
fdivr
mov
loope
or
pop
add
sbb
fidiv
pushf
aam
(bad)
out
jne
dec
retf
and
jl
mov
or
mov
into
jl
cmps
int3
jns
mov
addr16
outs
popf
cmps
push
fiadd
int
dec
mov
adc
mov
test
pop
mov
mov
push
xchg
fisttp
jns
jl
xor
jl
(bad)
(bad)
les
jl
ret
dec
inc
xchg
jge
imul
pop
mov
mov
push
jl
push
rcl
leave
xchg
push
jnp
pop
enter
mov
and
(bad)
jl
mov
push
and
mov
sbb
push
mov
cmps
sti
sbb
push
push
pop
add
cli
sub
into
retf
mov
jl
enter
fcom
push
in
pop
stc
jl
mov
inc
mov
jg
imul
(bad)
fs
sbb
sbb
ja
sub
icebp
(bad)
jmp
scas
push
lods
repz
shr
mov
adc
stos
jg
lahf
ja
and
mov
sbb
inc
dec
pushf
push
(bad)
pop
jl
shl
push
stc
jl
std
fld
test
aas
outs
ficomp
shl
(bad)
div
sub
jl
pop
rcl
cmps
jno
fucom
daa
pop
jl
sub
push
out
adc
addr16
pop
or
jl
call
rol
jl
xchg
xchg
pop
mov
mov
sub
jl
sbb
push
enter
ins
or
push
std
call
fstp
cdq
dec
mov
ins
jge
movs
arpl
xor
loope
pop
sbb
(bad)
loopne
movs
xor
ja
scas
jl
dec
xchg
in
push
mov
in
cmps
std
jl
fsub
push
test
jl
push
sub
outs
out
and
or
ficom
enter
mov
out
pushf
icebp
test
dec
adc
xchg
push
jno
mov
aam
inc
and
aam
add
mov
xchg
(bad)
sbb
mov
inc
xchg
dec
jl
mov
rol
mov
aam
mov
xchg
out
inc
cmc
cwde
(bad)
fldenv
inc
sbb
(bad)
jl
or
cmp
aad
jl
dec
stc
and
pop
pop
add
sbb
(bad)
jecxz
shl
jmp
inc
fistp
push
mov
retf
cmp
cmp
aam
jnp
mov
movs
dec
and
test
cmp
xchg
aam
fistp
adc
sti
int3
sub
and
jl
fcomp
mul
pop
into
aam
cmp
push
rcl
mov
jg
idiv
and
mov
push
inc
pop
push
popf
test
jle
jnp
ret
lock
hlt
xchg
int3
dec
aas
int3
popa
push
out
fcomi
rcl
push
iret
(bad)
dec
sbb
js
adc
leave
call
(bad)
xlat
fdivr
mov
mov
test
shr
cmp
push
cld
or
jl
lods
ror
call
pop
and
pop
xchg
lds
pop
lahf
aaa
iret
lods
movs
and
cmp
mov
shl
and
dec
pop
fwait
sbb
jmp
pop
push
mov
in
push
push
(bad)
outs
repz
jg
icebp
int
xor
jo
(bad)
outs
popf
xchg
icebp
push
pop
mov
dec
mov
(bad)
(bad)
lods
neg
xchg
movs
jl
or
xchg
sti
(bad)
jge
jg
pushf
lock
mov
jl
cdq
xchg
pusha
mov
jo
jle
jnp
inc
mov
call
nop
idiv
dec
mov
ja
xor
scas
ffreep
repz
jecxz
cmp
or
inc
int3
fisttp
aaa
jl
loop
push
sti
inc
mov
aam
mov
mov
jl
imul
and
and
scas
call
loopne
jge
mov
jb
dec
fld
push
jl
mov
xor
lods
in
dec
sbb
xchg
jecxz
xlat
push
sub
jl
xchg
mov
imul
ja
xchg
rol
or
xchg
shr
jb
sub
jbe
or
sbb
pusha
(bad)
xor
mov
sbb
sbb
idiv
push
movs
(bad)
fsubr
outs
jb
leave
lahf
loopne
and
jmp
in
jl
mov
push
int
mov
inc
or
xchg
adc
jp
aaa
xchg
mov
add
fdivr
jmp
jbe
push
fidivr
cmps
icebp
pop
xor
cld
std
sbb
xchg
bound
mov
sti
loope
stos
mov
rcr
popa
movs
loope
(bad)
ja
fdiv
ins
out
dec
push
inc
fnstcw
lds
mov
jl
mov
xchg
mov
and
dec
jl
sbb
cdq
inc
xchg
gs
lods
push
imul
jmp
jl
rcl
inc
lock
inc
adc
inc
sbb
popa
leave
jecxz
shl
adc
jl
xchg
mov
movs
iret
jmp
sbb
cmp
jecxz
and
push
(bad)
mov
pop
fidivr
sub
mov
daa
out
dec
ficom
mov
loopne
dec
jl
push
mov
aam
pop
mov
rcr
ds
pusha
cmc
jl
fisub
sbb
mov
aad
xor
sbb
ficomp
sbb
mov
scas
xchg
rcl
dec
push
jl
pop
out
sub
mov
cmp
lahf
xchg
jo
int
jl
call
pop
call
xchg
jnp
pop
and
movs
adc
mov
sbb
mov
fcom
pusha
out
call
outs
fstp
mov
push
jl
mov
jl
lock
mov
or
ret
jb
mov
xchg
pop
push
inc
inc
imul
fstp
cmp
push
leave
sbb
or
sbb
mov
mov
and
mov
jnp
iret
aam
cld
mov
xor
mov
out
iret
int
(bad)
jno
fidiv
aas
jl
cdq
fst
dec
popf
outs
mov
and
mov
cmp
mov
scas
jl
or
fsub
lods
jl
jmp
push
add
mov
sahf
sbb
mov
push
popf
aad
push
int3
(bad)
jl
pop
cmp
(bad)
lods
repz
fwait
sbb
mov
pop
or
xor
cmp
mov
mov
inc
mov
jl
out
xor
jge
movs
pop
das
xor
test
inc
jl
adc
int
lods
and
or
ja
fild
mov
ins
xor
or
push
sbb
ror
ja
xlat
lds
mov
sbb
dec
adc
jl
lahf
mov
sbb
out
pop
test
jns
(bad)
mov
push
push
lods
xchg
xchg
add
jp
xor
ins
call
data16
sar
div
stos
stc
xchg
int3
pusha
(bad)
push
xchg
jl
pop
adc
mov
mov
mov
or
fsubr
call
(bad)
pop
retf
movs
str
bound
or
push
cmp
ds
cdq
dec
or
adc
nop
push
sbb
mov
adc
push
xchg
pushf
std
xlat
ins
(bad)
pop
js
or
ret
ja
sbb
into
pop
std
jmp
xor
mov
popa
mov
inc
jge
fisub
or
adc
mov
sub
bound
es
loope
xlat
jne
out
dec
jl
shl
mov
dec
stos
or
fistp
int
ins
repz
pop
jl
xor
adc
ds
aad
fucomip
push
fwait
loopne
xchg
in
nop
jnp
fxch
aaa
fadd
push
(bad)
in
and
xchg
push
and
jl
retf
lahf
fcomp
inc
jns
lods
ja
xor
pop
jne
daa
add
dec
sub
sub
sbb
and
adc
pop
jp
stos
mov
cmp
xchg
jl
fimul
stc
and
or
hlt
popf
jmp
fwait
pop
ja
test
sub
mov
pop
cmps
lea
mov
fadd
leave
addr16
fimul
pop
sub
(bad)
fwait
add
aas
sbb
jl
mov
in
push
xchg
aad
jecxz
les
cwde
fnstcw
push
sub
std
sub
cmp
dec
out
mov
add
mov
pusha
pushf
cli
jl
call
add
(bad)
fstp
xchg
cs
sub
fs
mov
gs
push
fcmove
hlt
or
jmp
inc
stc
sar
jns
pop
sahf
cmp
wbinvd
jl
clc
or
add
stc
es
jbe
test
js
inc
ds
adc
sub
cld
icebp
das
fstp
movs
xchg
add
sbb
jbe
lock
retf
jl
retf
xor
(bad)
push
jl
sbb
jbe
aas
and
dec
mov
test
or
dec
(bad)
leave
test
cmp
xchg
cwde
pop
mov
jnp
fcmovnu
jecxz
pop
icebp
imul
mov
jl
cmp
dec
(bad)
mov
mov
les
pop
cmps
or
cli
push
dec
jno
nop
jl
clc
push
not
cwde
mov
adc
mov
jle
jp
aad
stos
push
hlt
jl
adc
or
imul
or
rol
add
fwait
ins
mov
and
movs
jecxz
jl
fs
mov
jl
jge
xchg
cmc
mov
test
movs
nop
add
pop
add
fadd
xchg
icebp
xchg
jmp
dec
aas
out
inc
dec
into
cmp
add
fdivr
or
jns
scas
mov
daa
cld
scas
cmp
adc
jmp
xchg
mov
xchg
jl
rcl
out
in
iret
xchg
loopne
sub
cmp
sahf
dec
adc
xchg
mov
outs
(bad)
xchg
in
pushf
bound
pop
pop
xchg
and
cs
jl
(bad)
add
js
pop
sahf
loopne
mov
ins
int3
(bad)
fcomi
jbe
shr
movs
(bad)
daa
(bad)
lea
ja
xchg
sbb
adc
je
dec
xlat
repz
sbb
dec
push
outs
jecxz
mov
pop
cdq
xor
mov
ins
or
jnp
retf
imul
call
data16
or
(bad)
mov
lock
neg
push
pusha
cmc
push
jl
inc
pop
xor
in
cdq
icebp
jns
scas
pushf
(bad)
xchg
cld
fs
retf
cmp
(bad)
out
inc
sub
cld
sbb
je
sub
xor
das
lahf
inc
mov
loope
lds
int
cmp
mov
icebp
mov
mov
xor
mov
das
xor
in
int
jl
pop
pop
xor
jl
xor
mov
lds
fs
jl
shl
movs
mov
pop
jo
inc
push
sar
pop
pop
hlt
shr
cmp
imul
add
aaa
fcomp
mov
pop
jbe
es
or
fstp
add
shl
push
cmps
xchg
jge
ins
mov
cwde
cmp
push
cmp
push
lods
fimul
fadd
mov
popa
pop
sar
bound
out
jge
repz
mov
cmp
jl
inc
and
scas
std
movsx
and
jne
out
mov
push
mov
rep
mov
jl
shr
shr
mov
mov
int3
jl
mov
imul
movs
mov
lea
jmp
pop
sub
fistp
out
mov
mov
mov
cli
pop
ret
jnp
lods
aaa
in
repnz
jl
jbe
sub
xlat
scas
(bad)
pop
fst
inc
jl
shl
sar
and
jl
mov
mov
(bad)
fild
jnp
sub
lahf
jnp
shr
les
call
out
pop
movs
xlat
jne
stc
jmp
jnp
in
fdivr
mov
mov
out
inc
mov
jmp
arpl
fs
jl
dec
es
xchg
pop
(bad)
jl
or
add
ins
ret
data16
(bad)
jl
sbb
test
pop
jnp
mov
push
sub
ror
xchg
jb
sub
jge
cmp
push
push
aas
xchg
and
jl
sahf
(bad)
sub
sub
stc
push
mov
fdivr
jl
xchg
mov
fsub
inc
cld
push
call
sbb
jge
and
push
pop
or
loopne
outs
(bad)
call
test
xchg
and
aam
jmp
call
sahf
push
fistp
sbb
mov
retf
sbb
mul
cs
mov
das
jl
pop
fimul
cmc
loope
stos
jl
and
mov
jl
mov
pop
push
out
mov
jl
rcr
cmp
dec
add
test
in
xchg
and
mov
aaa
fwait
push
daa
lods
jp
push
jae
or
mov
loopne
psubb
xchg
cmp
fsub
push
adc
ja
dec
stos
jl
xchg
sahf
(bad)
jge
sti
and
push
push
dec
mov
or
push
outs
sub
jmp
nop
xor
or
data16
jl
xchg
push
and
ins
jl
cs
in
jns
sbb
xor
mov
dec
jg
pop
(bad)
stc
cmps
mov
imul
ror
cmp
cld
fwait
sub
cli
add
jns
ja
jmp
(bad)
and
test
fstp
mov
or
out
aad
stos
jbe
add
loopne
out
cmc
out
xor
and
cmp
cmps
mov
(bad)
mov
mov
iret
dec
and
rcl
sub
ja
or
bndstx
sbb
(bad)
push
syscall
pop
xchg
adc
jg
mov
adc
jg
jle
bndldx
sbb
inc
ret
(bad)
adc
pop
lahf
adc
adc
adc
or
outs
into
cdq
cld
xchg
fs
dec
aas
movs
test
pop
jl
mov
sbb
and
mov
jl
sahf
pop
stos
lods
cmp
mov
jmp
dec
push
fldcw
cmp
js
out
(bad)
sbb
pop
push
in
jb
stos
cmp
pop
(bad)
mov
and
jl
xor
dec
sbb
and
addr16
jl
and
adc
push
jl
aas
bound
mov
sub
popf
and
cld
mov
ds
pop
jl
add
jg
pop
cs
sub
jle
sub
fs
cmc
push
sub
push
push
jo
pop
dec
jg
js
mov
cld
outs
repnz
jp
jae
sti
sahf
lea
test
mov
aam
push
dec
ja
ja
(bad)
ins
mov
sub
jo
int3
mov
xor
pop
dec
jl
and
in
jl
jo
pop
jle
dec
xor
add
call
mov
loopne
mov
mov
jl
push
sub
dec
push
mov
mov
and
iret
ja
xchg
jg
inc
int3
xchg
scas
mov
cmp
ds
sub
and
mov
and
adc
xchg
mov
sub
xor
lea
jb
jge
inc
out
pop
xchg
xchg
cld
lock
fmul
mov
sub
jl
(bad)
out
jmp
jo
pop
test
arpl
cli
fs
repnz
pop
movs
into
adc
jg
or
test
mov
cmp
fdivr
aad
jl
jbe
daa
cwde
sub
inc
mov
js
or
clc
mov
jl
mov
loope
sbb
xor
or
jl
sbb
pop
and
adc
retf
jl
aad
cmp
jnp
lods
mov
xchg
je
ds
push
push
outs
mov
jae
(bad)
fstp
xor
push
in
enter
pusha
xchg
adc
cld
not
inc
dec
out
jl
xor
mov
retf
mov
ficomp
mov
mov
xor
xor
push
or
mov
jl
mov
lods
(bad)
lds
fiadd
pop
mov
push
jae
out
cmc
jge
jne
xchg
in
mov
imul
mov
nop
rcl
daa
or
inc
cs
cld
imul
stos
imul
movsx
add
sbb
jbe
(bad)
sahf
js
sbb
in
outs
inc
xor
sub
shl
cmp
jbe
xchg
mov
pushf
push
add
cmp
ret
jp
mov
jmp
sub
jl
jae
(bad)
ins
ja
push
mov
sbb
loopne
stos
lahf
mov
push
pop
mov
jne
call
adc
cld
and
or
pop
jl
jle
in
xchg
dec
jl
movzx
jne
push
(bad)
out
jo
add
loope
xchg
stc
or
push
inc
add
fsubr
push
push
cmp
push
mov
cli
popa
inc
mov
or
mov
js
movs
imul
stos
retf
popa
div
mov
jb
pop
mov
mov
push
cmc
pusha
pop
hlt
stos
jbe
loopne
fnsave
mov
mov
(bad)
loopne
sti
fs
add
cld
pop
mov
jno
dec
rcr
and
jl
mov
mov
clc
jmp
mov
xchg
rcl
sub
daa
iret
(bad)
ins
and
das
and
push
sbb
xor
rol
movs
mov
inc
jl
mov
sbb
enter
xor
sub
jp
mov
ds
out
imul
imul
mov
xchg
pop
(bad)
xchg
jns
jl
and
jne
fild
mov
push
xlat
aam
or
cld
fnstenv
fimul
or
jl
mov
sbb
jl
js
jns
sub
jae
psubusb
ret
mov
cmp
inc
jl
fs
xlat
inc
adc
cmp
dec
les
ret
lahf
mov
cmp
movs
xlat
fnsave
enter
mov
inc
xchg
sbb
leave
aaa
push
out
std
jle
dec
fistp
out
mov
add
pop
stos
push
loope
and
dec
mov
jae
aas
push
add
loop
popf
and
add
(bad)
push
and
jno
das
pop
dec
cld
mov
lahf
sbb
jl
sar
test
test
sbb
dec
fwait
and
je
pop
push
xor
jl
dec
popf
out
jb
(bad)
fistp
or
call
lahf
pop
sahf
pop
js
pop
repnz
jl
(bad)
mov
jp
sub
push
dec
inc
aas
cmps
or
xlat
popa
mov
data16
jae
sbb
in
xchg
jl
push
pop
std
pusha
fwait
jg
pop
retf
jne
fdivr
test
mov
xchg
jb
out
outs
in
hlt
jge
int3
ins
sub
sub
dec
mov
inc
mov
ret
xor
aad
clc
mov
dec
pop
inc
jl
xchg
jnp
test
nop
mov
fs
shr
mov
ss
test
xchg
cmp
mov
cmp
cmps
fild
loop
mov
xor
adc
inc
or
mov
mov
push
pop
dec
sub
cwde
jo
(bad)
dec
outs
clc
jnp
xchg
xchg
cmp
jl
sbb
xor
sbb
adc
xchg
jo
jae
adc
cmc
adc
addr16
dec
das
call
pushf
sub
ins
mov
mov
cwde
cmc
jl
xchg
push
dec
jl
sub
outs
imul
shl
push
fbld
jle
stc
sbb
dec
sbb
cmp
js
call
ds
mov
jl
imul
scas
mov
add
sub
fwait
sbb
jp
in
cmp
enter
pop
inc
jae
sub
mov
inc
clc
popa
mov
iret
sti
push
aas
idiv
cld
push
xor
jge
jge
or
(bad)
repz
xchg
data16
jge
es
and
ficomp
imul
jl
sub
jbe
test
popa
out
leave
xlat
mov
iret
mov
jl
test
pop
retf
jl
inc
jnp
and
in
adc
jl
mov
or
(bad)
fsubrp
repnz
retf
and
or
inc
mov
sub
jl
and
ja
sub
xor
jns
pop
in
sub
cmc
faddp
movs
mov
cmp
jnp
dec
jmp
data16
cld
popa
data16
repnz
loope
shr
mov
jl
mov
rcr
fadd
mov
mov
mov
loopne
jnp
jnp
imul
fld
jl
(bad)
aad
stc
cdq
or
retf
push
cmp
mov
sub
scas
and
jo
pushf
add
fistp
mov
jl
mov
mov
imul
jl
leave
pop
outs
push
lock
sbb
mov
inc
jmp
popa
push
mov
cmp
add
xor
jl
jecxz
retf
or
lds
pushf
cmp
jl
sar
dec
fcmovb
add
jl
fdivr
aaa
cmc
mov
data16
xchg
enter
mov
in
ret
jl
adc
rol
push
cld
fdiv
cmp
out
xchg
outs
ss
pop
fwait
cdq
pop
xchg
jmp
cmp
enter
mul
sbb
push
scas
js
xchg
inc
sbb
lods
xchg
test
jl
add
mov
adc
push
ds
in
add
pop
adc
pop
jl
pop
idiv
or
aad
jae
fild
ds
outs
cld
lods
mov
and
jle
jl
push
push
mov
jl
push
jb
jecxz
jmp
or
lea
add
sub
or
jl
and
icebp
xlat
pop
arpl
mov
aaa
bound
lods
xchg
adc
xchg
mov
cld
neg
fisub
xchg
sbb
pop
fsubr
jl
stc
loop
push
shr
jl
popa
les
or
pop
jl
xor
(bad)
jl
stc
jnp
fst
mov
jl
aad
(bad)
aam
leave
loop
cmpps
sbb
cli
push
jl
push
mov
push
jp
loopne
fisubr
sbb
cmp
mov
test
jecxz
aaa
mov
lods
stos
add
(bad)
retf
mov
in
pop
push
mov
jl
pop
push
adc
adc
sub
jl
test
sub
jns
loop
cwde
jb
icebp
stc
outs
imul
jl
out
push
bound
jne
adc
mov
mov
and
idiv
fcomi
gs
aad
sub
jl
inc
loop
cwde
popa
dec
push
jl
sbb
and
add
out
fnstcw
push
fwait
jecxz
mov
jge
adc
dec
mov
jl
xchg
ss
lock
mov
push
jl
fdiv
push
jl
xlat
push
and
popa
push
int
adc
ins
dec
gs
inc
mov
jl
movs
cmp
mov
pop
cmp
jmp
and
inc
jg
jl
cmp
sahf
cmps
ficom
fdivr
ud0
jl
mov
imul
stc
xchg
cdq
cs
mov
jmp
es
stos
mov
mov
xchg
push
or
inc
push
fsubr
pop
and
fnstsw
repz
(bad)
and
inc
cmp
inc
imul
jo
jecxz
cld
push
xchg
dec
sbb
jae
movs
inc
and
jl
inc
dec
xchg
pop
fidivr
test
popa
stc
dec
loop
mov
jae
mov
retf
popf
pop
jl
ror
test
jl
ss
mov
jl
movs
pop
(bad)
aad
cmp
jnp
call
sbb
clc
add
push
pop
add
sahf
int
(bad)
xchg
lods
pop
(bad)
idiv
fsubr
outs
dec
mov
jle
fyl2xp1
cld
adc
dec
bound
xchg
jg
add
cmp
ficom
sbb
stc
mov
fild
jmp
fstp
dec
add
jg
sar
pop
mov
mov
idiv
mov
pop
fadd
stos
jl
out
mov
sub
dec
pop
stos
push
retf
mov
jae
icebp
cmps
and
leave
cwde
xchg
ja
sbb
fisttp
lods
sbb
and
int3
mov
fisubr
out
pop
add
shl
aas
rcr
mov
(bad)
movs
xor
mov
inc
pop
loopne
push
jl
gs
mov
jl
loop
pushf
test
ret
sar
cmp
and
or
jl
jecxz
push
xchg
fnstsw
and
std
(bad)
test
jl
sbb
adc
iret
sub
inc
cmovb
jl
popf
xchg
push
(bad)
jmp
sbb
sar
jb
jle
stos
test
pop
dec
jae
lods
jp
sbb
in
jl
ror
es
push
jp
ja
out
popa
xchg
fild
pop
test
lahf
ret
aad
jmp
mov
add
sar
(bad)
mov
call
mov
sbb
test
rcl
fcomp
mov
mov
jns
jmp
paddb
cmp
xor
dec
cmp
mov
(bad)
fst
psubw
jl
ror
mov
not
std
mov
popa
push
mov
aas
jl
stos
adc
jo
push
jb
inc
stc
cmps
add
mov
mov
add
sti
(bad)
jbe
jnp
ja
(bad)
cmp
xchg
jle
inc
jl
fdivrp
sub
xchg
mov
cmp
jnp
mov
mov
mov
mov
stos
lahf
add
scas
mov
jnp
pop
sti
mov
leave
mov
jnp
or
jecxz
add
jge
pop
(bad)
cmp
imul
cdq
test
push
in
lea
xor
mov
mov
pushf
fnstenv
mov
out
test
loope
fs
push
pop
aad
ja
jne
dec
or
sub
fidivr
sub
mov
mul
popf
xor
xchg
jl
sbb
repz
pop
pop
sub
add
dec
or
fistp
push
inc
adc
rcl
mov
sbb
(bad)
jg
dec
jno
jnp
mov
or
test
xor
pushf
jl
inc
xchg
jmp
jl
mov
mov
add
jl
fimul
sbb
add
js
mov
jne
int3
jnp
xchg
(bad)
lahf
(bad)
aas
xor
jl
or
adc
int3
jl
inc
sbb
or
cs
popf
je
inc
cmps
or
add
lahf
rcr
xor
leave
jl
add
jl
dec
dec
mov
shr
jl
retf
scas
and
mov
mov
jl
dec
push
pop
cdq
int
pop
jl
not
xchg
mov
test
scas
inc
cmp
and
mov
jl
lds
pop
jl
add
or
(bad)
das
pop
jg
(bad)
jl
jmp
pop
out
stos
jae
test
call
xor
iret
fstp
scas
(bad)
out
outs
push
ja
or
add
jbe
loopne
cmc
and
jl
cmp
std
sub
and
ss
jl
in
stc
push
mov
fisubr
cwde
cld
mov
int3
push
dec
fcomp
dec
pop
push
pop
outs
jmp
enter
ss
shl
popa
loop
mov
jns
jl
mov
inc
push
jl
int
fwait
adc
scas
or
test
jmp
or
in
mov
es
jl
xor
fdivr
(bad)
jmp
mov
jp
fstp
sbb
dec
jl
pop
loope
jmp
jmp
jecxz
popa
xor
mov
jno
adc
ret
mov
jns
sbb
sbb
sahf
or
dec
call
pop
je
inc
mov
sbb
xor
jl
jmp
jl
jne
jecxz
or
cmc
jl
dec
jo
dec
mov
mov
add
clc
rcr
fstp
jo
pmaxub
fsubr
pop
sbb
pop
sub
push
inc
push
adc
idiv
jl
dec
vpmuludq
aad
jl
mov
popa
scas
or
mov
aas
push
fwait
jl
fistp
mov
sub
mov
push
sbb
cmp
pop
fldcw
xor
ins
pop
jns
push
fcom
mov
cmp
sbb
mov
jmp
int
ins
add
xchg
xor
mov
jle
jmp
rol
js
movs
mov
pop
push
div
cmp
jmp
jl
movs
inc
sahf
xlat
fndisi(8087
outs
jl
clc
popf
in
adc
jl
dec
xor
mov
mov
jl
adc
daa
xchg
mov
inc
jl
adc
pushf
add
jecxz
in
sbb
xchg
lahf
jge
mov
xchg
inc
pop
leave
shl
jl
mov
(bad)
fcom
mov
addr16
sub
mov
mov
hlt
fldcw
mov
ins
stc
pop
cmp
inc
(bad)
xlat
retf
jl
popa
stos
push
inc
mov
xor
jnp
cmps
test
movs
xchg
repz
jl
mov
sub
jl
das
out
iret
lds
mov
ins
aad
add
jl
and
xchg
jl
sub
push
and
fsubr
cld
ja
push
add
rcl
mov
xor
jl
cmp
sbb
and
pop
jl
nop
arpl
loopne
and
mov
lock
jns
adc
jb
rol
jl
pop
add
jl
in
mov
sbb
sub
call
jl
aas
and
ret
dec
shl
ret
jl
out
push
adc
add
pop
(bad)
fild
pop
jne
add
outs
ins
xchg
pop
mov
out
dec
jns
jl
sub
ror
jl
repz
mov
pop
mov
sub
pop
movs
mov
and
(bad)
in
jl
mov
aad
pushf
leave
lock
clc
nop
cld
add
fs
ja
mov
scas
mov
jl
loop
rol
and
add
sbb
cld
push
aad
(bad)
adc
adc
pop
mov
(bad)
pop
jge
lods
push
or
mov
ja
adc
imul
jle
pop
mov
xlat
inc
lods
cdq
pop
dec
xchg
jne
sbb
pushf
mov
cmps
push
dec
int3
ins
pop
xchg
stc
jge
jbe
inc
stos
pop
lods
cld
dec
pop
rcl
outs
jae
mov
cmp
mov
in
push
and
fstp
jnp
dec
xor
xor
test
jge
dec
pop
mov
aaa
outs
ja
scas
fs
lods
test
stc
and
jl
adc
and
mov
xor
rol
push
jbe
enter
mov
push
outs
mov
pop
idiv
out
xchg
in
jecxz
pushf
fisttp
fsub
js
mov
jl
jno
inc
push
ret
mov
jl
stos
shl
jnp
imul
lds
inc
jns
stc
jno
jl
jecxz
xchg
push
fiadd
inc
jl
mov
in
jl
sbb
int
sub
imul
cdq
popa
aam
ins
lea
(bad)
jge
jecxz
stc
sbb
bound
or
mov
jle
jl
dec
mov
mov
push
les
out
and
cld
mov
or
arpl
mov
lea
or
fsubr
xor
dec
jnp
icebp
pop
clc
outs
cdq
movs
jp
test
mov
repnz
bound
cwde
push
dec
jl
retf
cmp
das
jl
dec
sbb
pop
stos
int3
push
or
jl
mov
loopne
dec
into
mov
mov
cmp
jl
out
(bad)
imul
pop
mov
and
arpl
jnp
mov
je
inc
jmp
jns
push
jl
cmp
loope
jmp
jp
adc
mov
cwde
daa
mov
pop
adc
mov
int3
mov
leave
jl
adc
inc
test
or
mov
fwait
cmp
jg
dec
fcom
xor
fs
popa
jns
fidivr
dec
les
pop
scas
pop
mov
mov
jnp
mov
adc
xchg
popf
pushf
fdivr
gs
js
sar
loope
and
xor
cmp
mov
pop
cmp
jl
(bad)
fsub
jmp
imul
dec
fdiv
out
jl
push
jp
xchg
push
loope
jge
xor
sub
adc
push
aad
std
neg
lahf
mov
sub
in
pop
retf
jl
sbb
test
jge
mov
rcr
fucom
jl
fsub
das
jp
inc
jl
pop
jb
ret
push
int3
dec
jl
inc
mov
nop
fsub
jl
sub
push
or
xor
add
outs
pop
icebp
fdivr
sbb
test
add
inc
inc
(bad)
jmp
adc
ins
mov
jle
push
push
(bad)
inc
aad
jl
jmp
sbb
cld
pop
push
jb
inc
test
fwait
pop
stc
loopne
push
sar
shl
fdivr
push
fs
adc
fiadd
mov
std
mov
pop
stos
mov
jmp
mov
scas
test
xchg
js
sub
add
addr16
loope
cs
add
fnsave
lea
mov
mov
rol
popf
pop
cmc
sbb
pop
pop
push
jge
rcl
push
aaa
hlt
lods
push
pop
popa
mov
adc
jp
data16
cmp
ret
ins
ficomp
repnz
add
jl
or
xor
jl
xor
sub
lods
mov
mov
out
jae
out
ds
aam
add
inc
add
out
fmul
cmc
xchg
xchg
sbb
mov
jmp
jne
inc
loopne
sbb
sub
push
out
(bad)
aam
ret
mov
test
arpl
jl
xor
nop
inc
jl
jbe
dec
int3
jb
test
adc
call
pop
jl
xchg
sbb
sub
xor
ss
jl
and
mov
test
loopne
mov
pop
dec
mov
out
inc
in
loope
and
pop
add
push
jl
(bad)
inc
pop
push
and
jl
loope
xlat
nop
ret
jge
or
mov
dec
dec
adc
lds
outs
cdq
sub
and
mov
mov
fist
xor
jl
arpl
shl
pusha
fisub
adc
fsubrp
ret
jmp
jl
rol
push
jl
or
scas
js
cmp
add
popa
mov
movs
test
in
cli
leave
loope
jl
jmp
push
jl
add
ins
enter
cmp
cmp
jl
xor
or
add
jmp
inc
leave
jl
xlat
(bad)
shl
frstor
(bad)
cmp
adc
dec
jae
inc
fnstcw
push
sbb
pop
inc
stc
lods
jl
sti
inc
aas
scas
sub
mov
mov
adc
(bad)
jb
test
jl
fstp
xor
popa
jl
push
icebp
call
repz
sbb
cdq
retf
in
cmps
test
dec
popa
mov
jge
fcmovbe
shr
jno
xor
push
mov
jge
push
in
cmp
pop
jl
xchg
retf
pop
pop
jmp
jecxz
loope
das
jl
fsub
fdivp
call
movs
fmul
ja
and
movs
sar
push
xor
test
sub
rol
ficom
jmp
cs
les
mov
rcr
inc
mov
daa
aaa
cmp
aas
pop
ins
aas
outs
aam
push
scas
shl
stc
pop
mov
test
mov
lahf
movs
jnp
or
push
mul
jnp
jmp
movs
adc
pushf
xor
jecxz
shr
sar
adc
jl
test
or
jge
inc
push
push
fwait
psubb
pop
ss
push
cmp
xor
(bad)
popa
fadd
jl
push
outs
mov
jge
nop
xor
xor
shl
in
jl
leave
daa
outs
add
mul
fcmovne
imul
int
in
add
push
jg
xchg
outs
test
jle
jl
add
rcl
shr
sbb
iret
fcomi
call
stc
leave
ins
mov
push
mov
ret
ds
fldz
movs
mov
pop
int
jns
dec
leave
retf
jge
xchg
inc
jns
out
mov
mov
lods
pop
and
out
mov
stc
(bad)
in
outs
jno
ja
in
pop
cmp
scas
dec
jl
das
pop
test
leave
test
fistp
jl
popa
adc
jl
loope
in
and
xchg
and
in
test
mov
dec
push
mov
jl
xchg
out
jle
stos
in
cdq
jge
test
jb
fbld
cmc
inc
cmps
jbe
mov
aam
ja
cwde
xlat
retf
ins
test
sbb
fs
sar
sar
cmp
cmp
xchg
aad
push
mov
cmc
add
cmp
test
ja
xchg
inc
fistp
xor
mov
jmp
clc
jle
jo
add
fldenv
vsubsd
retf
std
pop
jne
imul
mov
ds
inc
retf
fdivrp
sub
lock
pop
movs
pop
popa
or
add
idiv
mov
pop
(bad)
cld
and
jl
fsub
ret
in
mov
mov
arpl
pusha
cmps
fadd
jns
lea
push
fidivr
or
push
cmp
retf
and
cwde
(bad)
jnp
xchg
aaa
jae
xchg
mov
mov
adc
ds
push
fild
dec
in
jl
pop
adc
jns
int3
jl
aas
mov
cmp
mov
mov
adc
push
lahf
jl
mov
sbb
jp
dec
jbe
aad
cmp
push
add
mov
and
fnstsw
rol
cmp
dec
idiv
ins
mov
jl
aaa
or
retf
and
xlat
pop
(bad)
jl
inc
pop
stc
outs
pop
push
jne
int3
jp
xor
stos
xchg
adc
pop
add
out
jl
push
in
call
inc
nop
pop
push
dec
sbb
cmps
jl
lea
cwde
(bad)
sbb
push
jae
cld
sbb
rcr
(bad)
cmp
add
jl
loop
or
jl
inc
xor
iret
aas
(bad)
jge
mov
cmp
mov
and
xor
dec
pop
or
fidivr
ja
inc
mov
adc
in
jge
rcl
imul
lods
test
inc
jl
mov
mov
ja
pop
test
push
aas
cmp
sbb
push
jl
rcr
ja
mov
pop
int
stc
jl
popa
mov
jbe
xor
xchg
jle
or
adc
icebp
in
cmp
(bad)
(bad)
jl
cdq
push
aaa
and
sub
and
push
add
and
jl
cdq
dec
rcl
jmp
dec
inc
dec
aad
lds
mov
mov
lods
out
sahf
cmp
(bad)
shl
pop
push
mov
cmc
lea
and
int3
sbb
stc
jl
adc
daa
dec
repnz
jge
and
les
jne
scas
rol
cmc
pop
mov
dec
outs
or
cmp
mov
ja
out
push
mov
jl
sub
mov
push
arpl
and
mov
ss
icebp
leave
fcomp
jne
jl
lods
adc
jnp
push
xor
lock
fwait
out
adc
jp
mov
mov
loope
or
in
and
jnp
ftst
sbb
and
dec
dec
shr
dec
fnstenv
(bad)
xchg
cld
jecxz
mov
jg
push
aam
arpl
or
cwde
pop
jge
push
loope
pusha
xor
and
add
and
jl
aas
in
mov
enter
jecxz
in
sbb
sub
out
stc
pop
test
aas
mov
xchg
mov
popa
jge
es
push
or
shl
add
jl
imul
cmp
push
pusha
movs
jl
mov
in
jl
lahf
aam
in
jp
outs
popw
mov
sahf
imul
sub
sub
mov
bnd
add
mov
retf
rcr
sub
mov
cmp
mov
mov
mov
out
xor
(bad)
aaa
div
lds
aad
adc
stc
pushf
or
pop
jge
xchg
mov
nop
inc
xchg
ja
xchg
(bad)
and
and
jl
sahf
fwait
adc
dec
rcr
pop
inc
and
daa
push
mov
jp
jl
imul
jl
fnstcw
movs
jl
mov
jns
add
mov
idiv
xor
inc
sbb
dec
ss
pop
retf
jl
push
cmp
es
mov
jl
rcr
pop
jne
pop
test
jl
fisttp
or
pop
xor
inc
jle
sti
(bad)
idiv
jnp
dec
jae
mov
out
pushf
push
shl
hlt
mov
sub
jnp
xchg
jl
fist
jecxz
add
push
sub
fld
lods
mov
push
jl
out
inc
xor
fild
push
ds
sub
dec
cmc
dec
loope
jl
lods
jns
ret
adc
jle
and
je
(bad)
cld
out
fistp
jnp
xchg
cmp
mov
lahf
add
jb
push
outs
mov
inc
aam
pop
ins
fcmove
mov
xchg
xchg
jmp
movs
and
outs
ja
int3
aam
out
rol
jl
mov
ret
cmps
pop
aad
popa
(bad)
xor
push
jl
or
(bad)
jl
neg
popa
pop
dec
sub
jmp
mov
arpl
enter
push
xchg
mov
sub
pop
gs
dec
dec
jl
inc
int
dec
dec
int3
fnstcw
push
out
mov
mov
mov
cmp
fldcw
push
push
sahf
test
fidiv
inc
xor
ficomp
xchg
lahf
outs
jl
sbb
int
cmp
jmp
int3
sub
inc
loop
pop
movs
idiv
popf
shl
add
adc
jno
test
jl
mov
movs
fisub
pushf
jl
pop
adc
pusha
fild
mov
scas
xor
push
inc
jl
xchg
pop
je
push
push
xor
int
adc
scas
fist
js
aad
sbb
xchg
iret
retf
add
push
adc
pop
std
jl
mov
mov
xchg
inc
jge
xor
lods
mov
jl
or
(bad)
mov
xlat
mov
cmp
push
(bad)
or
addr16
or
mov
div
push
sti
push
and
dec
jl
lahf
into
fisttp
cdq
cli
ja
dec
jns
jnp
adc
adc
dec
test
xor
sbb
popf
pop
idiv
daa
mov
js
ret
inc
adc
dec
stos
mov
mov
push
adc
(bad)
add
retf
mov
popa
(bad)
adc
sub
test
jl
cmp
xchg
pop
push
xchg
push
pop
jno
pop
cmps
or
das
cmp
inc
pop
inc
ds
jl
jg
add
xchg
int
inc
jl
(bad)
cdq
mov
mov
stos
pop
push
adc
xchg
int3
sub
ja
inc
xchg
mov
movs
(bad)
data16
and
xor
stc
(bad)
xchg
in
push
adc
mov
jp
mov
and
pop
dec
mov
mov
and
retf
cmp
and
fdivr
adc
aad
jl
sbb
idiv
or
jns
fild
stc
jae
fdiv
mov
frstor
and
jns
sbb
jnp
mov
xor
sti
mov
cdq
cmp
rcl
loop
pop
mov
pop
shl
in
adc
cmps
push
iret
add
sub
adc
xor
cmp
jecxz
xchg
icebp
shl
jnp
cmp
dec
sub
push
jno
repz
(bad)
push
pop
push
xor
and
mov
lock
stos
stos
pop
mov
pusha
jne
mov
cld
data16
cli
fimul
jl
test
mov
jge
mov
fcomp
push
dec
sahf
out
push
sti
fadd
dec
cld
int
pop
and
cmp
std
or
popa
jl
push
push
push
jmp
retf
inc
sbb
movs
iret
or
call
test
lea
xchg
loope
out
inc
and
idiv
inc
fist
loop
jl
xor
dec
outs
pop
pusha
fnstsw
pop
leave
sbb
sbb
jl
popf
stc
and
pop
jl
sub
call
adc
push
iret
jb
fistp
(bad)
pop
cmp
or
sbb
movs
test
jnp
push
add
xchg
(bad)
jl
pop
hlt
mov
xchg
add
loope
gs
stc
jge
neg
popa
push
xor
jl
fcomp
jae
stos
idiv
test
lods
cdq
(bad)
mov
or
jl
dec
xor
arpl
xor
mov
xchg
(bad)
lods
sar
xchg
mov
push
and
xor
je
jl
mov
lahf
jbe
push
jl
fwait
adc
push
jl
and
scas
sbb
stos
mov
jmp
(bad)
or
jl
inc
cmp
fdivr
adc
dec
push
fwait
pop
imul
cwde
and
mov
jl
fst
psubw
mov
xchg
and
cdq
aam
jge
xchg
pop
add
retf
in
xchg
fcmovu
ss
lods
mov
pop
shr
stos
and
xchg
jl
mov
fstp
stc
repz
push
jge
cli
pop
test
xor
sub
mov
pop
imul
lods
sub
xlat
sar
pop
cld
aad
out
jge
add
lahf
out
ins
dec
pop
fisttp
sar
ja
cli
inc
(bad)
out
sub
rcr
test
xrelease
cli
push
mov
fadd
sub
sbb
cld
ins
pop
stc
in
sbb
mov
push
pop
add
cmp
xchg
jl
stos
movs
mov
or
(bad)
pushf
and
push
dec
inc
sbb
retf
out
je
cmp
shr
add
(bad)
mov
mov
xor
push
mov
jl
sub
(bad)
pop
nop
cmp
test
stos
popa
cs
jp
dec
xor
loop
jecxz
mov
fsub
add
mov
stc
push
call
in
xchg
cs
push
lods
cmc
pop
jge
jne
loop
adc
repz
dec
add
pop
dec
je
push
and
jl
test
sub
xchg
mov
or
lods
mov
das
mov
fisttp
and
sets
mov
sbb
jae
sub
jl
and
jl
cmc
ins
inc
xor
dec
fiadd
push
sbb
add
sahf
mov
push
cdq
sbb
jl
jg
retf
mul
icebp
hlt
popa
stc
scas
add
ds
adc
and
or
retf
pop
loope
outs
in
hlt
sub
test
lods
cld
adc
sub
jne
mov
(bad)
outs
or
push
push
push
stc
jl
mov
or
mov
stos
cwde
mov
mov
retf
hlt
addr16
(bad)
or
icebp
or
mov
ror
jle
mov
mov
jl
cmp
jl
mov
ds
pop
mov
or
adc
jge
test
ja
sti
(bad)
mov
jl
mov
xor
jmp
jl
or
pop
cmps
jno
jl
aaa
es
lods
mov
jl
nop
inc
jg
mov
fldenv
sahf
cmp
clc
fistp
movs
pop
test
test
and
push
mov
push
jl
scas
jnp
sbb
add
jl
aaa
lods
mov
movs
fxch
jl
push
pop
mov
mov
in
jge
retf
mov
popf
adc
in
pop
dec
cli
bound
lods
xchg
push
and
jge
daa
iret
leave
mov
or
stos
add
outs
fisttp
add
jmp
jl
sub
ja
ds
popa
mov
mov
jnp
sar
jmp
int3
arpl
je
cmp
cmps
jl
js
in
push
jo
test
jl
jb
pop
push
icebp
aas
aas
fstp
cmp
jns
in
push
shr
test
jl
shl
dec
lods
jl
mov
fucom
rcr
add
int3
mov
jns
cmp
mov
fstp
repz
jl
and
ror
mov
push
sbb
and
inc
jnp
sbb
cwde
cs
or
(bad)
fistp
mov
popa
add
fcomp
xor
pop
jl
mov
daa
inc
shr
xchg
jmp
pop
stos
inc
jl
mov
sbb
pop
sbb
jmp
sub
imul
std
scas
add
dec
mov
test
jl
mov
(bad)
sub
adc
repnz
inc
cmp
out
scas
outs
fild
inc
cmp
iret
popa
sbb
jl
xchg
cdq
dec
lods
pop
pcmpgtb
jl
dec
popa
sub
fldenv
inc
sar
xlat
mov
div
ret
mov
jle
add
cmp
mov
or
xchg
(bad)
into
aas
dec
push
ja
lea
adc
pop
retf
sbb
fimul
jmp
dec
jl
sub
jl
push
ror
jl
mov
pop
loope
outs
push
jl
cmps
ret
das
rol
sbb
scas
jge
mov
mov
ja
popf
jns
jmp
cmp
clc
jl
pop
int
xchg
scas
aas
mov
dec
push
dec
out
add
iret
mov
sbb
pop
cmp
cmp
mov
push
jno
ret
xor
and
xchg
lds
sub
mov
jae
mov
xor
jns
mov
mov
xor
ret
test
(bad)
stc
push
jl
jg
retf
rol
pop
adc
je
jb
xor
leave
xor
fstp
adc
icebp
ds
out
jl
or
shl
sbb
out
stc
sbb
xor
stos
mov
cmp
jnp
in
mov
hlt
inc
lods
jl
cmp
test
inc
sub
add
jl
enter
and
sbb
inc
jb
jns
cwde
in
fnstsw
mov
stc
adc
mov
jl
adc
mov
stos
xchg
add
shl
xchg
ja
jo
cmp
aad
lea
idiv
dec
sar
test
sub
xor
dec
cli
aaa
cmp
jp
fimul
xchg
ins
mov
sbb
test
mov
ret
sub
xchg
jl
call
jl
jne
sbb
pop
sar
mov
mov
les
lods
retf
pop
in
es
xchg
xor
aam
lea
int
jnp
stc
cld
jne
add
outs
pop
push
lods
mov
jl
(bad)
and
inc
jl
cmp
mov
sbb
inc
jns
sahf
lea
cld
jp
cmp
mov
fdiv
jl
ins
lea
pop
jne
sbb
loope
retf
jl
or
dec
dec
inc
dec
dec
ret
retf
xor
or
data16
or
enter
fldcw
pop
ja
test
mov
mov
mov
mov
add
pop
xchg
mov
inc
(bad)
fnsave
sbb
shr
movs
xchg
test
sbb
jl
outs
and
in
inc
xor
sub
add
push
lds
jns
into
sub
cmp
jl
adc
push
aam
(bad)
inc
xor
rol
dec
lds
outs
clc
mov
xor
popf
or
sub
sbb
jl
ret
mov
jg
mov
dec
xlat
and
pop
push
mov
xor
jl
ja
sbb
jl
popa
int
aad
iret
push
outs
mov
lahf
mov
push
scas
jnp
dec
add
ror
pop
pop
in
shr
cmps
sahf
jnp
push
xchg
cmc
dec
ret
mov
dec
adc
fiadd
mov
and
jp
and
or
xor
imul
xchg
cmp
fsubr
mov
xchg
and
add
inc
inc
fbld
lods
sub
pop
in
fst
jl
enter
(bad)
jl
jle
and
mov
inc
jl
adc
popa
jns
(bad)
(bad)
jge
xchg
pop
pop
jne
mov
dec
repz
movs
fs
into
push
fcomp
add
jge
mov
dec
ror
jl
mov
shr
push
bound
cli
push
jns
xchg
jl
loopne
pop
sbb
(bad)
add
fimul
cwde
inc
loop
cld
add
push
xchg
sar
lods
popa
movs
cmp
jl
ds
cli
mov
xor
sbb
out
adc
inc
int
xchg
jmp
push
or
adc
jmp
or
fdivr
scas
ficomp
xchg
pop
iret
adc
(bad)
push
lea
jge
mov
arpl
mov
idiv
stc
sahf
adc
mov
cld
fisub
cmps
shl
pop
stos
mov
bnd
fmulp
and
cli
das
jl
pop
pop
stc
push
or
push
jle
sub
imul
jl
adc
mov
repz
lock
loope
adc
cli
jl
mov
dec
aam
or
pop
push
sar
or
jae
jae
ret
jle
sub
jl
call
pushf
push
jl
cmp
imul
stos
pop
and
(bad)
ror
js
inc
fcmovbe
lock
push
jl
xor
mov
jl
push
(bad)
enter
lea
fadd
jl
aaa
ja
fcom
add
aad
cmps
es
jl
pop
push
inc
jl
fnstsw
jp
cwde
cmp
sub
out
fistp
enterw
cmps
outs
out
pop
xchg
pushf
jg
div
pop
jae
arpl
cld
(bad)
push
jo
xor
mov
sti
ja
or
lahf
js
xor
addr16
dec
popf
and
xchg
mov
in
jmp
mov
sbb
xchg
add
jl
xchg
iret
scas
dec
xor
adc
jge
test
int
mov
jl
mov
leave
jl
inc
inc
xor
push
(bad)
sub
cld
mov
push
dec
push
popa
leave
ja
fidivr
mov
imul
push
fdivr
and
adc
fstp
cmp
stos
jl
pushf
repnz
test
popa
xchg
cmp
enter
jl
mov
and
sub
xchg
sub
pusha
fstp
aad
jns
mov
outs
inc
adc
mov
jl
cmp
fnstcw
leave
mov
jl
fwait
lahf
call
inc
jecxz
sar
dec
or
cmp
cmps
jl
out
not
pop
mov
cmp
xor
aas
lds
fld
mov
cmp
icebp
ret
jl
add
lds
sub
jl
push
in
loop
mov
adc
mov
mov
ins
out
jecxz
or
movs
sub
fst
ins
hlt
cmp
push
dec
sbb
cld
cdq
push
fst
inc
les
push
jne
retf
pop
cld
cld
sub
std
push
sti
bound
and
fdivrp
outs
(bad)
leave
pop
jge
rcl
dec
mov
pop
push
adc
mov
imul
pop
popf
scas
mov
shl
adc
xor
jl
out
cmp
adc
in
jl
or
push
jl
push
xor
jl
cmps
jp
cwde
fisub
int3
jl
iret
sbb
ja
sub
aam
mov
xchg
add
fld
mov
daa
mov
or
ins
aam
dec
cli
and
sbb
push
xchg
pop
add
and
push
cmps
push
add
jl
mov
push
xchg
jl
into
xchg
popa
mov
sub
jl
mov
stos
pop
pusha
stc
mov
cld
aaa
jle
fist
jl
add
inc
add
jl
cmp
mov
and
pop
int
ins
jecxz
jl
xchg
out
(bad)
inc
pop
inc
push
jbe
rol
outs
push
repz
pushf
test
jl
test
dec
mov
jns
jae
shr
push
xchg
fisub
outs
jl
loopne
dec
fxch
xchg
jl
and
(bad)
xor
popf
dec
jl
cmp
mov
and
jl
pusha
movs
push
iret
push
inc
fld
cld
fild
scas
mov
js
jecxz
xchg
leave
sbb
push
test
and
cmp
addr16
pop
out
cmp
lds
xchg
popf
jb
jl
jge
sbb
mov
rcr
xor
cmp
dec
mov
jbe
(bad)
hlt
rol
loope
data16
or
xor
and
push
jl
popa
push
push
jmp
es
jl
sbb
inc
clc
movs
movs
jns
fxch
into
xchg
lods
push
jl
(bad)
aam
loop
sar
jl
rep
pop
addr16
mov
inc
inc
cmps
sub
fdiv
mov
and
sbb
add
push
jl
mov
lods
jp
mov
jl
shl
push
je
mov
jl
dec
int
rcl
adc
ror
sub
inc
push
retf
test
repnz
gs
shl
popa
in
cld
stc
jl
or
sub
jl
jp
sbb
and
push
fdivr
sbb
mov
push
jg
jns
xchg
stos
xchg
jl
dec
or
sar
xchg
repz
nop
push
inc
int3
gs
pextrw
mov
jl
dec
mov
ss
inc
loop
adc
inc
xchg
pop
xor
xchg
jl
lahf
dec
jbe
aad
jl
inc
(bad)
jmp
icebp
sbb
xchg
sbb
cmp
add
mov
jae
xor
pop
ja
pop
pop
add
sbb
pop
mov
into
(bad)
sar
dec
dec
xchg
push
lods
nop
dec
out
stos
xor
pushf
jl
xchg
or
jge
fld
mov
xor
or
cmp
push
out
femms
popf
inc
sub
jl
inc
sub
inc
jnp
stc
pusha
add
inc
sub
ins
js
xchg
loope
les
mov
rcr
sar
add
inc
push
push
icebp
jl
and
mov
idiv
dec
lods
mov
jge
je
addr16
jae
add
jl
loope
dec
add
jl
cdq
mov
ja
retf
jnp
push
xchg
sbb
jl
fcom
add
pop
mov
mov
sahf
or
jl
arpl
and
out
xor
stc
mov
sub
aad
push
ja
call
push
fiadd
movs
dec
add
popf
xor
inc
int3
dec
jmp
jl
(bad)
xor
push
sub
sar
cmp
mov
ror
(bad)
dec
fst
or
aam
jl
pop
std
cmc
push
xchg
jmp
neg
jns
jl
stc
mov
dec
dec
cdq
(bad)
jl
sbb
xor
jl
cmp
mov
mov
jl
out
retf
cs
outs
cmp
retf
and
mov
test
dec
add
push
call
int3
jmp
push
pop
pop
jne
mov
or
push
ins
dec
fnstsw
fimul
pop
and
loop
enter
mov
inc
movs
scas
sti
mov
inc
popa
sub
add
push
inc
push
cmp
or
fiadd
sbb
or
dec
mov
xlat
fdivr
test
lahf
das
jl
sub
push
dec
and
jnp
jns
and
push
pop
dec
fdiv
call
inc
pop
daa
neg
jl
outs
cmc
call
jae
xchg
jns
cmc
les
jl
int3
jae
pop
jl
xchg
fbld
shr
stc
xchg
jnp
outs
jbe
lahf
sbb
pop
neg
inc
mov
pop
popa
(bad)
mov
mov
fwait
test
outs
mov
cld
sbb
call
pop
out
add
adc
xchg
or
jl
call
cmp
push
jl
sbb
test
popa
cwde
ss
jmp
push
inc
mov
stos
rol
outs
test
mov
cmps
jbe
add
mov
mov
fidivr
push
int
pop
test
pop
and
xchg
or
outs
inc
(bad)
cld
pop
xchg
xchg
cdq
sar
inc
out
mov
mov
dec
push
and
retf
jl
shl
in
adc
(bad)
mov
add
ja
jbe
pusha
int3
sub
fstp
mov
push
cmc
xchg
outs
ffree
je
or
test
jge
jmp
pop
mov
(bad)
outs
hlt
add
idiv
sbb
jge
dec
xchg
cmp
push
cwde
add
cli
stos
jge
jae
rcl
stos
pop
jl
dec
int
add
pop
(bad)
jo
sahf
jbe
jl
jp
mov
jge
push
jl
imul
sub
ja
adc
dec
fild
popa
fidivr
(bad)
mov
mov
ror
and
pop
add
dec
cld
test
push
out
mov
and
inc
jl
(bad)
jmp
jge
pop
ja
repz
fnstenv
pop
fadd
xchg
pop
jae
pop
aad
mov
ds
and
xchg
shr
mov
pop
mov
popf
jl
nop
cmps
dec
fadd
retf
(bad)
mov
adc
sahf
shl
movntq
out
jl
xchg
or
xchg
loope
shr
cli
div
outs
inc
iret
jbe
les
cmp
hlt
jmp
js
pop
mov
mov
jl
jne
int3
and
push
mov
jl
fistp
loopne
(bad)
je
inc
xchg
dec
cld
mov
aam
sbb
jl
push
icebp
inc
int
es
popa
test
(bad)
mov
jl
jmp
jl
push
jmp
leave
jl
mov
imul
loopne
mov
adc
jl
mov
push
outs
ins
jl
and
js
stc
cld
popa
jl
jns
cwde
mov
push
and
jb
jl
pop
stos
fld
or
or
jl
push
aad
mov
sahf
stc
or
ja
adc
pop
call
jg
adc
xchg
inc
pop
lods
lock
and
cld
push
add
jl
mov
jl
and
dec
or
pop
push
repz
cld
test
jle
xor
pop
les
xchg
in
xchg
loope
pop
imul
or
sbb
xor
lds
fwait
jo
jns
mov
loopne
into
bound
mov
pop
pop
adc
shl
mov
jnp
mov
enter
add
push
sahf
cli
cmp
sub
mov
inc
fdivr
add
daa
or
std
jge
add
cmps
in
sbb
xchg
cdq
test
and
jl
add
jns
pop
stc
mov
retf
and
mov
xor
add
in
int
icebp
push
outs
dec
jge
fimul
loopne
stos
into
jl
add
scas
jl
fild
push
ds
cld
add
adc
push
out
mov
jge
imul
stc
jecxz
test
mov
jno
xor
jl
cmp
xchg
xchg
mul
mov
mov
adc
sar
adc
jmp
xchg
sub
jl
push
inc
mov
jae
nop
sub
pop
call
sti
add
xchg
out
jp
jnp
das
jmp
(bad)
jl
mov
pop
loope
and
and
test
sahf
ja
dec
not
jns
int3
or
jnp
movs
(bad)
mov
int3
lods
jl
mov
in
sub
dec
fcmove
and
clc
xor
shl
ins
jg
inc
sbb
aad
jl
sahf
ror
mov
sbb
push
iret
popa
loop
mov
enter
or
jbe
mov
and
hlt
jl
adc
movs
jae
and
adc
aad
mov
ja
outs
and
lahf
cld
stc
adc
jnp
popa
jno
sub
aam
mov
enter
sbb
into
jl
jno
nop
jns
loop
jl
in
xchg
xchg
pop
inc
mov
shl
retfw
cmp
pop
adc
dec
fs
fnstsw
test
push
arpl
jl
rol
lds
pop
mov
sahf
jns
jb
mov
jmp
xchg
div
push
push
jl
xchg
xlat
mov
jl
mov
scas
dec
and
js
ja
jb
aam
jno
stc
add
loopne
in
jge
gs
(bad)
push
loope
jl
jae
stos
(bad)
jbe
jl
mov
pop
push
jge
int
ror
jno
pop
(bad)
stc
jl
imul
or
jl
retf
mov
(bad)
jge
pop
out
test
pop
mov
mov
mov
sub
jnp
sar
push
dec
cmp
es
xchg
fadd
div
ja
mov
push
adc
pop
je
(bad)
test
mov
xor
movs
inc
add
data16
jl
pop
rcl
stc
icebp
jl
push
mov
push
jge
ror
(bad)
jmp
pop
jl
inc
pushf
adc
and
xchg
adc
inc
dec
ss
pop
sar
test
jl
push
add
inc
cdq
cmp
jge
dec
and
test
mov
jle
fidivr
leave
jg
cwde
jmp
test
es
mov
cdq
fstp
mov
push
cld
es
or
jnp
and
mov
jg
movs
mov
jl
repnz
(bad)
mov
fdivr
add
fild
jp
mov
mov
pushf
jo
fs
mov
inc
std
pop
mov
push
mov
enter
pop
aas
inc
sar
mov
and
test
dec
pop
cld
and
cmps
fdivr
jo
cmp
jmp
enter
push
xor
fistp
mov
jl
repz
cld
cmp
mov
mov
jp
shr
(bad)
test
inc
jl
daa
xor
and
jl
enter
cli
push
jae
dec
jmp
int3
sub
jle
and
cmps
jl
pop
outs
or
shld
not
ret
stos
push
jl
xchg
iret
jae
inc
pop
mov
or
inc
ins
xor
inc
or
sbb
sub
and
push
cmp
xor
push
and
jmp
or
adc
(bad)
adc
dec
mov
js
and
jl
mov
dec
popf
jl
lea
bound
hlt
sar
push
out
add
fcomp
jl
ret
aam
and
fcomip
ja
jno
fdivr
js
leave
jl
sub
call
sbb
jbe
pop
sub
jge
xchg
mov
div
nop
xlat
mov
add
dec
adc
mov
call
mov
jge
mov
and
adc
ja
pop
int3
test
jne
or
mov
jb
cmp
mov
(bad)
jl
jmp
mov
inc
leave
or
xor
push
jmp
cmp
mov
xor
pop
(bad)
cmp
jl
(bad)
bound
jo
out
pop
inc
sbb
cmp
mov
jl
mov
(bad)
push
mov
(bad)
jl
push
icebp
xor
pushf
ficomp
xchg
mov
ret
or
loope
neg
jl
sub
cmp
jns
xchg
jl
xlat
test
mov
jl
xor
fcom
nop
imul
pop
neg
add
aam
cmp
in
sub
xchg
pop
push
sbb
xchg
fs
mov
fstp
and
jl
shl
mov
je
outs
jl
cmp
popa
jl
hlt
call
cmc
jl
dec
sbb
dec
(bad)
addr16
jl
and
add
and
pop
cmp
dec
ins
ja
xchg
adc
pop
ret
and
(bad)
out
je
aas
pop
out
cld
retf
aaa
add
dec
jl
mov
inc
pop
aas
stc
jbe
cmps
rol
std
jge
jmp
sbb
jl
(bad)
sbb
mov
push
cs
gs
mov
xchg
stc
out
icebp
sub
fistp
sbb
sub
into
popa
int
pop
mov
pop
retf
inc
xchg
pop
stc
inc
mov
outs
fiadd
sbb
jg
xchg
(bad)
jl
push
sub
ret
movs
idiv
jns
and
mov
cld
sbb
cld
jl
xor
adc
mov
jl
neg
jno
mov
jl
out
or
xchg
aas
jl
and
xor
cmps
mov
mov
inc
pop
jl
inc
popa
xchg
scas
jp
test
outs
repnz
push
mov
cs
sbb
mov
and
and
icebp
ror
push
sbb
inc
jl
pop
mov
jl
cmp
adc
ficomp
mov
outs
nop
push
sbb
mov
outs
fild
pop
call
jl
xchg
ret
out
rcl
pop
push
xchg
add
pop
push
mov
or
shr
popf
mov
jecxz
dec
(bad)
enter
cmp
fild
int3
fisttp
pop
and
jmp
jl
rcr
retf
jl
and
(bad)
stc
add
ror
out
jae
sbb
daa
arpl
mov
add
into
xor
mov
jbe
cmp
and
gs
add
fnstcw
pop
out
mov
fidivr
pop
xchg
pusha
leave
add
outs
or
mov
cld
jle
and
jae
adc
movs
mov
mov
sbb
dec
(bad)
ss
jl
imul
mov
(bad)
ror
test
or
and
sbb
in
xchg
ja
push
xchg
neg
push
fidivr
inc
or
aas
jne
jl
and
jmp
stc
or
jl
push
inc
into
push
push
jl
mov
sub
push
jmp
arpl
jmp
push
aad
(bad)
mov
stc
adc
push
and
and
jl
push
inc
sar
jl
(bad)
cmp
jl
jecxz
shl
sti
mov
cmp
push
mov
xchg
jl
pop
xchg
outs
int
test
(bad)
mov
aam
cwde
out
loop
xchg
and
test
stos
aad
jne
jnp
int3
ss
shl
test
sub
cmp
jl
pop
xchg
dec
sub
stc
jl
pop
inc
pop
pop
push
das
loop
in
sbb
adc
mov
push
mov
jmp
or
jnp
pop
in
jecxz
jl
aaa
push
cmp
mov
sub
pusha
xchg
pusha
fidivr
out
mov
sar
mov
mov
lods
leave
sub
(bad)
inc
xchg
mov
pop
pop
push
cwde
in
lds
lahf
mov
mov
adc
add
mov
dec
sub
inc
popa
cdq
aas
pop
jl
or
fild
jl
mov
(bad)
push
dec
mov
xchg
fcmovbe
arpl
(bad)
pop
movs
jmp
int3
into
jl
inc
lods
lds
cmps
sub
jl
jo
sti
clc
push
sbb
dec
rcl
jecxz
imul
aam
jl
iret
es
jl
icebp
sbb
adc
push
arpl
jno
or
inc
xor
fistp
cmps
cmp
lea
dec
imul
jl
pop
mov
sub
xchg
cmp
stos
push
pop
mov
or
xchg
lds
aam
push
mov
jb
(bad)
push
mov
shl
and
stc
test
sbb
jl
and
hlt
push
imul
push
popf
es
or
adc
inc
push
fstp
loope
in
js
mov
scas
mov
jmp
popa
push
xchg
mov
popf
mov
rol
add
mov
ds
xlat
sbb
repz
test
test
xchg
mov
hlt
and
ja
mov
xchg
jl
and
adc
and
std
mov
sub
aam
pushf
je
out
retf
aas
popf
jns
test
push
mov
inc
iret
test
xchg
mov
daa
ror
(bad)
cwde
jl
xor
xchg
jge
jmp
in
iret
popf
test
pop
cmp
xor
lahf
sbb
mov
popa
retf
pop
mov
dec
adc
repz
je
sbb
mov
mov
jle
call
mov
mov
fst
lea
into
(bad)
ins
lds
and
and
inc
sar
push
adc
sbb
dec
movs
adc
pop
iret
cld
cs
lahf
ss
jl
dec
imul
add
int
(bad)
popf
and
mov
rcl
fimul
dec
dec
ret
xchg
mov
push
jl
jle
arpl
mov
popa
and
dec
xchg
out
jl
mov
repnz
jnp
mov
push
dec
stc
push
lods
in
xchg
inc
jl
jno
mov
xchg
aaa
ja
arpl
(bad)
test
sub
xchg
push
lahf
dec
sub
push
sti
jnp
xlat
dec
es
lea
jl
out
ficom
mov
push
mov
jmp
and
fist
or
ja
xor
dec
push
int3
sti
xchg
lods
pop
ja
mov
cdq
xor
jl
mov
int3
adc
push
and
jl
and
stc
jl
mov
les
sahf
idiv
pop
pop
loope
dec
jns
dec
sub
popa
pop
jp
jo
sbb
outs
repnz
fdivr
movs
loope
xor
push
js
cli
outs
leave
pushf
mov
jl
adc
lock
inc
retf
test
imul
ja
(bad)
and
fnstcw
fwait
jl
push
and
cmp
ds
(bad)
pop
push
cdq
inc
imul
and
jl
inc
push
(bad)
stc
inc
jno
outs
popa
inc
(bad)
jae
cmp
dec
pop
leave
mov
(bad)
ds
mov
adc
ret
jl
dec
xor
je
popa
jl
in
dec
mov
shr
stc
or
(bad)
lea
aam
js
outs
pop
mov
(bad)
sbb
cld
or
gs
mov
lods
fcmovu
in
inc
jl
loope
jns
or
dec
jae
cmp
mov
jecxz
data16
or
mov
(bad)
stc
mov
sbb
jge
xchg
dec
pop
jl
sub
scas
cmp
stc
ja
jle
jg
dec
(bad)
(bad)
pop
push
stos
mov
ja
in
jl
xchg
stc
jl
ds
movs
pop
pop
mov
sbb
jmp
ficom
out
(bad)
popf
fxch
or
xor
inc
jl
lea
(bad)
repz
jl
ins
test
pop
jl
inc
hlt
shl
dec
jmp
inc
xor
pop
mov
jl
das
bound
inc
adc
retf
xor
push
xchg
scas
mov
cdq
inc
dec
movs
fisub
mov
jl
int3
mov
cmc
mov
push
jb
jge
cmps
sbb
(bad)
push
jmp
dec
and
arpl
cmps
sub
sbb
fnstcw
scas
icebp
jge
pop
jne
dec
jl
cmp
cmps
and
inc
dec
arpl
cmp
fcom
(bad)
jl
and
repz
or
jl
or
mov
jp
xor
enter
add
xchg
cmc
mov
mov
jl
aad
cmps
imul
loope
retf
shl
xor
loop
sbb
imul
fdiv
mov
mov
test
jl
add
mov
add
jne
sub
shl
jl
pop
shr
ja
push
enter
pop
mov
jge
sbb
xor
xchg
push
pop
mov
fcmovb
mov
lahf
mul
(bad)
fs
out
aam
mov
pop
popf
pop
jp
and
mov
imul
mov
push
pop
pop
ret
lea
call
jns
shl
das
xor
xor
jns
(bad)
dec
jno
lea
or
stc
dec
inc
sbb
xchg
mov
(bad)
mov
sbb
xchg
lods
lods
jl
push
sbb
sub
stc
cdq
scas
mov
inc
pop
pop
jl
dec
jle
sub
es
imul
jo
xor
pop
cmp
fmul
mov
pusha
mov
jge
mov
mov
mov
mov
or
pop
ret
mov
fisub
fmul
xor
jl
test
in
jp
and
adc
push
and
jmp
retf
or
std
mov
out
scas
addr16
test
push
(bad)
jge
dec
and
adc
ja
stc
popa
inc
out
inc
shl
sub
or
and
jg
mov
retf
aas
jns
jl
inc
push
adc
jl
fs
dec
dec
adc
jl
stos
pusha
dec
mov
or
mov
fcom
mov
sbb
jns
adc
shl
sub
xor
adc
jecxz
data16
jb
jl
icebp
and
(bad)
pop
ret
dec
rol
das
aam
sbb
ja
dec
push
inc
sar
cmps
xchg
stos
sahf
ja
push
cmps
add
fiadd
inc
arpl
jnp
(bad)
and
pop
jns
mov
jl
mov
(bad)
inc
cli
mov
xchg
das
mov
(bad)
xchg
jns
rol
in
in
jmp
scas
jl
fisttp
(bad)
fldenv
sub
push
cmp
mov
jge
int3
sub
mov
ja
push
loope
mov
sub
scas
jl
sbb
idiv
ins
mov
stos
jae
(bad)
push
lahf
out
mov
retf
test
gs
sahf
fcmovnbe
and
aad
dec
mov
int
pop
or
jecxz
xchg
jnp
fsubr
rcr
movs
mov
dec
(bad)
jl
imul
jmp
add
out
jmp
int3
lods
xchg
jl
adc
cmp
push
stc
fdivr
sbb
cli
mov
mov
addr16
pushf
arpl
aam
pop
cld
cmc
cmp
mov
cmovp
sahf
inc
ss
cmps
jl
jns
stc
dec
xchg
rol
pop
scas
test
jl
repnz
push
xchg
and
jg
leave
sar
push
inc
out
xchg
jl
fdiv
bswap
cwde
jnp
(bad)
xor
sbb
jo
dec
xchg
mov
or
pop
les
ds
pop
fsubr
and
jl
cmp
sub
mov
jl
movs
dec
mov
jl
jp
inc
lea
iret
pop
jl
mov
cli
inc
push
jnp
inc
dec
in
enter
fisttp
bound
push
or
jl
in
call
jl
pop
add
mov
inc
sbb
loope
je
sub
jns
fwait
xor
js
stc
lods
xchg
repz
jnp
lea
push
cld
fild
mov
xchg
fist
jl
sub
adc
out
cmp
dec
hlt
push
int3
aam
aad
xor
mov
and
jl
stos
mov
mov
outs
xchg
cs
(bad)
sbb
sbb
pop
mov
test
xchg
inc
pop
xor
icebp
(bad)
jnp
enter
(bad)
push
rcl
test
pop
hlt
stc
and
adc
addr16
ficomp
cmp
std
daa
neg
add
push
jl
fsubr
ss
mov
jl
pop
dec
xchg
add
mov
sbb
or
cmp
jl
fsub
not
jl
push
loop
imul
es
outs
mov
adc
inc
jl
icebp
inc
stc
xchg
push
jl
test
push
jl
dec
push
xor
inc
jl
scas
jbe
or
das
shl
and
test
jnp
xchg
rol
cld
push
mov
arpl
je
dec
mov
or
and
or
add
lahf
pop
stc
sbb
sbb
or
lock
sar
or
push
xchg
in
jnp
mov
mov
idiv
pop
xor
mov
and
jl
or
cmp
rol
or
xor
cld
rol
clc
mov
xchg
lock
mov
int3
mov
sub
jo
add
lea
cli
or
out
shr
popa
and
mov
lahf
mov
ja
sbb
in
stc
in
ins
or
aam
movs
leave
stos
int
pushf
inc
sbb
xchg
call
sub
jge
adc
outs
pop
nop
lds
mov
out
cmps
jl
(bad)
enter
les
inc
mov
idiv
jl
xor
aas
push
jge
(bad)
dec
pop
inc
(bad)
jl
xor
jl
idiv
je
int3
mov
ret
jnp
adc
call
lds
and
inc
ds
cld
test
int
jl
test
popf
mov
jl
imul
cld
in
adc
cdq
and
jno
dec
cmp
int
enter
lods
jnp
pop
dec
retf
mov
jl
stc
mov
cmp
ret
jl
xchg
lock
in
pushf
cmp
stos
aas
mov
call
pop
push
test
ja
mov
ins
jl
popa
jns
test
cmp
pop
jno
leave
dec
jl
pusha
xchg
retf
fldenv
xchg
mov
adc
out
mov
bnd
sbb
jno
fisubr
mov
movhps
popf
push
push
sub
aaa
push
jno
mov
stos
daa
xchg
xchg
and
mov
icebp
fisttp
sub
shr
sbb
aam
scas
out
pushf
popa
idiv
or
jns
push
add
sbb
dec
jl
jle
cmp
add
lahf
popf
adc
jnp
xor
in
les
dec
test
sar
add
mov
add
sub
out
sbb
rol
add
inc
nop
pusha
jge
stc
jmp
jl
and
xchg
mov
(bad)
mov
push
add
lods
adc
jge
outs
sbb
test
jns
outs
cli
sub
sub
jge
js
lahf
lds
popa
inc
jl
test
add
dec
jno
pop
xor
adc
les
test
jp
cli
sbb
in
outs
pop
jl
sub
in
sbb
js
fistp
out
cld
mov
xor
ins
sbb
xlat
and
retf
mov
jl
shl
jl
lods
or
dec
loope
jl
popa
repz
xor
or
fdiv
stc
push
xchg
aad
xlat
jl
(bad)
arpl
adc
mov
adc
push
aaa
cmp
stc
out
jbe
lock
repnz
xchg
imul
xchg
dec
fstp
mov
mul
(bad)
mov
jns
push
dec
and
push
mov
jl
xchg
jnp
jno
mov
retf
add
out
or
jg
cld
outs
mov
jl
sbb
cmps
mov
loopne
inc
scas
pop
cld
mov
or
mov
mov
jl
pop
jmp
push
inc
pop
dec
mov
dec
push
or
jl
mov
push
in
mov
mov
mov
cmp
jl
sbb
mov
jl
xor
(bad)
dec
push
mov
cmps
dec
and
add
fmul
retf
sbb
inc
mov
xchg
sub
inc
icebp
scas
outs
inc
jns
pop
cmp
jbe
xchg
add
inc
fimul
enter
cli
jl
div
aas
jl
mov
stc
rcl
sub
imul
xchg
test
jle
ds
jl
or
xchg
js
lahf
jl
sar
jmp
in
sub
movs
les
xor
lahf
shr
aas
std
cmp
mov
mov
enter
rcr
jl
mov
or
jl
mov
icebp
test
retf
idiv
mov
sub
mov
add
xchg
mov
inc
xor
cli
pop
jl
xchg
pop
addr16
fmul
popf
and
outs
sub
pop
loope
jl
push
test
mov
icebp
mov
(bad)
es
pop
or
fs
push
adc
inc
mov
jnp
adc
adc
int3
stc
push
repz
cmp
jne
pop
lods
cmp
cmps
pushf
mov
sar
mov
movs
jl
imul
jl
xor
cmp
inc
cmp
inc
dec
sub
fdivr
aam
jno
mov
adc
mov
ss
daa
mov
push
dec
imul
push
test
cmp
cdq
outs
jno
xchg
(bad)
xor
dec
out
jg
jmp
sbb
jl
test
jge
inc
jo
inc
rcl
mov
jb
jl
fidivr
fist
mov
cld
jp
or
xor
mov
mov
fiadd
shr
pusha
mov
dec
loop
in
or
in
pop
xchg
ret
push
sub
out
sbb
jg
(bad)
jae
and
mov
jecxz
ret
aad
pop
jbe
jge
inc
pop
adc
mov
(bad)
leave
pop
cmps
jl
dec
jp
adc
ret
and
add
mov
test
pop
(bad)
mov
cmc
nop
aas
pop
mov
xchg
repz
xchg
jl
dec
and
jmp
push
jl
mov
mov
pop
call
dec
ret
mov
(bad)
jmp
hlt
cld
nop
lock
sbb
xchg
mov
jl
nop
sbb
push
outs
mov
dec
fidivr
test
mov
ror
sbb
test
push
out
stc
pop
jl
test
jo
outs
iret
sub
ins
test
popf
mov
push
lods
test
cmps
inc
xchg
push
outs
mov
popa
xchg
sub
fidivr
jl
aam
loop
das
mov
jl
retf
mov
dec
nop
cmp
jl
xchg
test
pop
stc
(bad)
sbb
inc
inc
es
fwait
lahf
jbe
jl
and
daa
repz
mov
and
fistp
fidiv
lods
outs
or
jl
xor
inc
scas
xor
retf
sahf
(bad)
test
jl
push
xor
ins
pushf
les
jl
or
fst
sbb
enter
out
int3
in
xor
pusha
ficomp
jl
mov
xlat
pushf
pop
aaa
xor
fnstenv
jo
and
sbb
das
add
mov
adc
std
sbb
int3
jl
jnp
test
ds
fimul
jl
push
push
es
and
jge
out
movs
cmp
adc
dec
daa
mov
jbe
mov
lods
test
and
mov
xchg
pop
mov
jl
mov
shl
lock
xor
and
outs
cmp
(bad)
in
jnp
sbb
int3
movs
test
jae
mov
inc
jge
rol
fs
shl
jl
mov
jb
popa
add
fisttp
and
stc
sub
retf
test
retw
jp
xchg
and
cmp
xchg
and
out
outs
mov
test
mov
stc
in
icebp
jl
push
idiv
dec
adc
pop
jge
sub
mov
mov
jns
or
loop
frstor
and
gs
or
xchg
or
in
rcr
(bad)
ja
jnp
adc
xchg
jl
into
sub
mov
xchg
outs
push
add
cdq
jbe
pop
and
jl
lahf
jae
loope
shl
lea
mov
mov
mov
adc
sbb
xor
in
mov
sub
enter
mov
(bad)
xlat
movs
mov
dec
add
addr16
stc
icebp
cmp
dec
mul
(bad)
int
jne
test
int3
dec
pushf
ror
test
sbb
ja
clc
test
dec
jl
pushf
mov
xor
std
out
inc
movs
fdivr
es
js
movs
inc
and
push
push
push
fiadd
dec
ret
adc
or
jl
xchg
(bad)
test
mov
xchg
cmp
xchg
fstp
das
mov
test
jl
push
push
call
outs
push
loope
inc
cdq
push
jle
pushf
cmp
sar
leave
loop
mov
jl
shr
clc
add
mov
jl
imul
mov
jl
push
neg
pop
jno
push
push
aam
jl
xchg
xchg
jl
shr
lods
into
xchg
dec
xchg
popa
(bad)
stos
mov
aaa
push
les
sar
inc
push
sti
inc
xchg
sub
idiv
repnz
popa
leave
mov
add
(bad)
outs
test
mov
arpl
js
sahf
push
jecxz
call
jl
shr
call
cmc
call
mov
outs
jmp
jp
jmp
cmp
mov
js
cwde
jbe
dec
cld
dec
jle
adc
jno
stc
pop
and
in
pusha
or
lea
jl
and
lods
and
or
cmp
leave
add
jl
pop
push
jg
jge
add
jmp
xor
outs
pop
add
stc
jl
nop
imul
jecxz
jne
and
fcom
fucomip
push
jge
jo
mov
add
inc
jle
daa
lea
jl
dec
inc
mov
(bad)
fdiv
mov
jl
call
pop
pslld
mov
cld
mov
mov
xor
cmp
jl
(bad)
inc
sbb
cmps
mov
int
cmovge
arpl
push
mov
pop
mov
jl
fwait
(bad)
jne
sbb
jnp
rcl
mov
ins
add
test
scas
js
adc
mov
adc
jge
jecxz
leave
and
and
test
sub
sbb
in
push
jnp
or
call
or
rcr
add
(bad)
retf
xor
ins
mov
cmps
ds
cmp
xchg
xor
mov
or
idiv
jo
pop
pop
adc
mov
dec
jl
cmp
pop
cmp
or
push
ret
xchg
push
test
mov
cdq
jg
mov
mov
arpl
adc
jl
fistp
sbb
out
lods
aad
pop
not
clc
push
(bad)
push
jge
mov
sub
outs
hlt
push
sahf
mov
pop
pop
aad
ins
xlat
aam
shr
xor
inc
push
adc
mov
jl
push
mov
aam
inc
stc
outs
xor
and
popa
cld
mov
and
jns
ja
ins
sbb
or
or
scas
(bad)
jl
mov
int
ja
pop
es
cmc
jl
push
icebp
dec
mov
cld
stc
enter
sbb
test
cmp
test
sbb
ins
inc
pushf
(bad)
popf
dec
mov
inc
sub
cld
rol
(bad)
aas
lods
shl
jl
popa
and
jmp
rcl
jl
bound
mov
pop
xchg
push
inc
push
sbb
rol
inc
jl
push
jp
inc
adc
dec
mov
jl
cld
pop
push
jl
test
jnp
popf
add
hlt
pop
jmp
cmps
cld
arpl
jns
(bad)
mov
xchg
push
jl
(bad)
das
pusha
dec
jl
lahf
leave
cmps
jg
test
jl
mov
lea
mov
and
add
push
or
xor
jl
lahf
iret
popa
lock
sbb
cmp
sahf
dec
cld
sbb
repz
push
jl
gs
frstor
cmp
outs
and
mov
cmc
jl
xchg
mov
(bad)
jl
or
ds
adc
jl
jp
mov
jl
add
xchg
test
jecxz
dec
ins
sar
mov
mov
neg
xchg
fstp
outs
mov
in
(bad)
pushf
cld
jbe
mov
jl
rcr
stc
jge
push
nop
sbb
xor
test
or
aas
jl
stos
mov
cld
push
fist
ja
outs
push
push
add
nop
outs
push
fldz
jns
enter
and
cmp
xchg
cmp
ins
cmp
sahf
xchg
and
adc
sar
repz
pop
sbb
jne
rol
jge
aam
xor
cmps
xchg
inc
ret
dec
sbb
std
sbb
xor
and
into
push
push
jl
loope
rcr
jmp
sub
das
jecxz
xor
ret
fmul
pusha
mov
cdq
scas
or
fwait
inc
inc
sbb
fistp
mov
(bad)
mov
adc
int3
pop
xor
mov
push
mov
cld
mov
stc
repz
in
movs
sti
jg
inc
setg
popa
aad
dec
inc
pop
jl
fadd
stc
push
(bad)
pop
cdq
bound
jl
xor
push
sub
jle
out
sbb
out
push
call
dec
stc
mov
dec
jl
loop
push
and
fdiv
aas
ss
(bad)
loope
pop
cmps
popa
mov
ja
pop
pop
mov
sub
popf
cmp
push
in
adc
enter
dec
jmp
jmp
jmp
js
jmp
push
(bad)
cmps
jl
test
jb
jl
sub
jl
adc
sub
lahf
shr
retf
mov
jl
xchg
mov
addr16
mov
inc
sub
jl
int3
mov
inc
jl
outs
leave
std
call
enter
pop
dec
pop
xchg
mov
mov
stc
jl
(bad)
mov
lods
gs
jl
int
or
fisttp
out
and
ins
and
shl
jl
mov
lock
ficom
jb
lahf
xchg
scas
sub
cmp
mov
adc
lods
add
ror
es
add
mov
jl
mov
jl
dec
pop
xor
mov
cmps
pop
push
(bad)
sbb
cdq
wbinvd
dec
lahf
mov
or
jl
les
mov
jl
imul
push
and
jl
jg
out
adc
lea
jns
mov
imul
fild
jmp
fwait
inc
push
and
dec
jne
mov
cwde
cmp
sub
js
jg
jl
adc
mov
pop
call
inc
es
jno
cmps
scas
lods
pop
in
das
jns
retf
aaa
stos
pop
mov
jl
sub
sbb
out
int
mov
jno
jl
dec
cmpxchg
imul
xchg
xchg
jl
imul
or
and
popf
jle
inc
jg
jnp
movs
mov
arpl
add
retf
sbb
xor
data16
adc
jle
mov
dec
fwait
cmp
popf
sbb
cmp
xchg
loope
ja
mov
sti
mov
dec
dec
add
dec
add
jl
mov
div
mov
or
mov
(bad)
jl
mov
mov
mov
pop
gs
aas
xor
loopne
pop
popa
push
std
xchg
rcr
sub
mov
cld
jl
sub
dec
or
cmp
jl
fstp
dec
jl
xchg
mov
mov
add
aas
cld
xor
(bad)
jge
jl
out
stc
mov
pushf
mov
xchg
jbe
enter
pop
int
inc
fild
xchg
fsubr
pop
mov
hlt
jo
lods
inc
out
xchg
pop
xchg
fild
ret
inc
iret
mov
push
or
xchg
xchg
mov
cmps
add
pop
outs
pushf
fld
in
lods
jl
xchg
ss
or
sub
daa
int3
in
pushf
fcom
dec
pop
and
jnp
add
xor
push
inc
jl
cmp
(bad)
ja
fnstenv
sbb
mov
adc
test
xchg
dec
retf
cmp
(bad)
xchg
push
mov
cmp
dec
test
clc
jp
and
loopne
cmp
out
mov
jae
mov
and
jl
mov
popa
inc
js
(bad)
call
arpl
cdq
inc
adc
mov
mov
retf
cld
cmp
push
aaa
xlat
inc
adc
jl
add
rcr
mov
ja
push
mov
sar
rcr
pushf
xor
mov
pop
cmp
mov
pop
enter
dec
or
sbb
jns
aas
jl
loop
sub
daa
out
mov
push
pop
push
fstp
mov
adc
movs
mov
xchg
pop
je
sbb
ficom
ins
mov
dec
dec
jl
jp
es
sub
jl
push
sbb
xchg
jl
xor
or
dec
jns
jl
adc
hlt
jnp
pop
inc
and
in
hlt
nop
pop
push
jl
lahf
jp
scas
xor
jl
fist
ins
jns
push
nop
jl
data16
push
mov
sub
xor
mov
data16
jae
loop
nop
iret
ret
cdq
test
popa
sahf
mov
popa
xchg
jbe
mov
jns
inc
mov
popf
aad
lods
jmp
jl
xchg
ficomp
lea
sbb
icebp
xchg
mov
das
pop
pop
xor
xchg
and
jl
mov
test
jl
retf
int3
retf
(bad)
jecxz
jmp
mov
cld
jg
int3
push
fstp
push
jl
cmp
xor
jnp
fadd
push
dec
sub
ins
cli
xchg
adc
inc
cmp
pop
jl
in
or
mov
jl
pusha
stc
inc
fs
mov
aad
jl
jmp
pop
sbb
and
mov
jl
ret
icebp
cli
imul
jl
mov
cld
cs
jmp
dec
sub
cs
cmps
mov
fcmovbe
pop
int
rcr
out
push
ret
push
outs
mov
push
jl
ror
pop
xor
cld
pushf
pop
psubw
push
popa
and
(bad)
aam
adc
sub
jns
iret
cmp
repz
sbb
push
fisubr
movs
xchg
outs
jge
xchg
idiv
jbe
mov
xor
call
pop
pop
mov
push
adc
mov
fidivr
sub
mov
test
das
sahf
or
(bad)
cmps
xchg
jnp
push
rcl
push
mov
mov
lods
pop
add
(bad)
(bad)
stos
enter
ja
data16
add
mov
or
dec
movs
and
and
aam
ret
cmc
pop
add
mov
mov
lahf
jl
cdq
push
in
pop
jmp
mov
jae
sti
dec
dec
and
jge
mov
xchg
lods
add
das
adc
leave
mov
sub
nop
add
and
cmp
test
pushf
sub
jl
xchg
stos
out
mov
imul
cmp
pop
add
jl
push
(bad)
cmps
(bad)
mov
jnp
mov
in
jl
lahf
adc
ja
daa
push
ja
mov
iret
sbb
rcr
(bad)
div
dec
fcomp
inc
inc
adc
out
mov
sub
stc
or
cmps
mov
jmp
cld
fild
fadd
ror
dec
movs
ja
jl
scas
fstp
fs
jl
lock
jl
shr
das
addr16
test
sbb
or
mov
stos
ror
sbb
and
test
cs
push
lock
mov
mul
push
movs
push
add
pusha
jnp
leave
stc
xchg
enter
mov
xor
jl
jns
ins
sbb
xchg
lea
mov
push
and
adc
jl
imul
dec
mov
jg
or
mov
cmc
cmp
xchg
mov
sbb
jl
jns
sub
stos
and
ss
stc
icebp
and
dec
cmp
not
mov
pop
add
push
and
add
push
popa
jge
pop
fistp
inc
mov
dec
ins
sub
mov
inc
je
popf
movs
inc
dec
jl
pop
inc
sbb
add
pop
jg
xchg
(bad)
sbb
add
(bad)
xor
cmp
sahf
pop
cmp
pop
jl
sbb
add
jl
adc
push
cs
push
fst
dec
mov
jl
daa
inc
mov
jl
(bad)
js
xchg
ror
jl
not
jl
mov
ds
dec
xchg
mov
aas
pop
jl
jns
push
test
and
popa
inc
pop
cmp
lds
outs
js
sbb
pushf
dec
jmp
pop
adc
inc
push
pop
pop
mov
outs
add
aas
inc
lea
push
(bad)
cld
loope
fist
gs
pusha
sub
out
rcl
cmp
lock
pop
jl
jne
loope
cmp
jge
test
test
sub
popa
bound
xchg
scas
ins
mov
cdq
pop
jge
jns
shr
scas
xchg
xor
jl
mov
jb
jmp
test
pop
sub
pop
cmp
sub
lods
mov
cdq
add
or
jl
mov
cmp
inc
sub
push
jl
sar
aaa
bound
and
fstp
jl
cmps
sar
es
icebp
xchg
fwait
ror
bound
loope
mov
or
xchg
xchg
aad
xor
cmp
mov
pushf
add
cwde
aaa
cmp
cmp
push
cld
icebp
xchg
pop
ffreep
and
xor
dec
jl
js
(bad)
stc
jns
jge
retf
cmp
mov
cs
lds
scas
pop
push
adc
mov
movs
sbb
stc
jl
repnz
fidivr
and
pushf
(bad)
mov
lods
jo
jl
xor
dec
test
pop
icebp
jl
pop
add
cdq
mov
jg
adc
cld
jl
mov
jp
jl
fisub
pop
gs
fsub
mov
cld
(bad)
cmp
lods
outs
loop
push
add
jae
xchg
push
mov
or
ja
test
add
aas
pushf
int
jl
retf
sub
(bad)
and
jnp
adc
mov
dec
push
outs
dec
add
stos
inc
push
jl
jbe
aas
jo
push
jns
retf
and
mov
ror
mov
jl
je
(bad)
xchg
test
adc
sub
stos
jl
int3
push
lds
cmp
jl
aaa
jns
retf
adc
cmp
mov
sbb
stc
sub
and
dec
fdivr
dec
lahf
frstor
xchg
in
jnp
hlt
mov
dec
add
pop
dec
dec
mov
mov
and
mov
int3
stos
jl
(bad)
fadd
dec
das
xchg
sbb
add
and
int3
inc
mov
iret
inc
mov
mov
mov
jl
mov
push
pop
dec
and
add
lods
repnz
lods
jnp
xor
outs
(bad)
or
push
aas
js
sar
and
xchg
push
in
cmps
popa
aam
sbb
jmp
xchg
jbe
ror
add
push
push
fnstcw
fisub
pop
inc
jl
jb
ins
inc
test
dec
popf
outs
leave
pop
shl
jns
iret
sub
push
idiv
xor
(bad)
ja
xor
vmovmskps
dec
mov
and
(bad)
icebp
mov
jl
popa
pop
and
mov
dec
cmp
iret
not
std
jnp
pop
jo
mov
in
stos
mov
neg
shl
retf
jecxz
stos
inc
jge
and
or
fist
pop
mov
int
jl
and
cmp
fmul
(bad)
fld
ja
data16
stc
jne
outs
xchg
and
ja
push
sbb
loop
pusha
xor
rep
adc
adc
sar
xor
cmc
mov
jl
in
ins
jo
outs
(bad)
jge
push
sub
fisttp
out
jl
jbe
inc
shr
cli
add
jl
push
call
and
xor
jl
and
pop
int3
mov
imul
and
cmps
inc
(bad)
shl
xchg
mov
xchg
push
xor
push
ins
mov
xor
jnp
ret
add
call
ins
adc
outs
dec
lea
mov
xchg
jl
jmp
lahf
sub
jge
cmp
mov
sub
push
jmp
jl
xchg
inc
(bad)
mov
fcom
cmps
mov
sbb
call
mov
jl
aad
popa
and
loop
xchg
test
pusha
daa
out
outs
mov
aaa
and
pop
jl
and
popf
dec
or
cld
daa
ins
lods
in
or
aas
fadd
and
jl
movs
repnz
xchg
mov
out
dec
iret
cli
cmp
pushf
bnd
jl
lahf
sar
mov
push
in
add
and
jl
add
mov
xor
bound
fnstsw
sbb
jp
mov
sti
mov
loopne
scas
int
in
and
stc
and
aam
jp
call
shr
jl
test
jl
xor
test
outs
pop
jae
sub
loope
clc
dec
sbb
jnp
adc
das
mov
push
pop
arpl
leave
repnz
fst
and
jl
fst
xchg
sbb
jnp
aas
sub
movs
fxch
jl
adc
pop
cmp
mov
dec
jnp
xchg
stc
mov
and
cmp
mov
cwde
push
jl
lea
pop
jl
mov
lock
push
xlat
ret
jns
pushf
xor
cmp
jl
mov
ficomp
ror
sub
cmp
inc
dec
scas
sbb
outs
je
(bad)
pop
pop
cmp
lods
adc
xchg
cmp
ror
aad
aaa
mov
clts
movs
mov
dec
jl
call
(bad)
and
cmp
sbb
mov
mov
cld
enter
mov
pop
jp
int
jl
inc
dec
mov
jnp
jle
sub
inc
jnp
inc
test
sahf
cmp
sbb
push
mov
or
xchg
mov
not
xchg
push
xchg
jnp
inc
and
fisub
cmp
and
or
or
mov
mov
jmp
inc
sar
imul
stc
push
dec
inc
mov
aas
fnsave
sub
nop
sub
push
inc
data16
pop
fdecstp
lahf
in
aas
xchg
mov
arpl
or
and
pop
jl
jmp
cs
cmp
xor
jge
mov
stc
push
jl
sahf
jmp
mov
(bad)
jns
out
jl
cmp
jle
mov
jl
(bad)
and
outs
daa
dec
int
pop
mov
enter
mov
or
mov
push
out
or
pop
mov
lods
icebp
mov
jo
or
add
mov
adc
int
pop
aam
in
jl
test
(bad)
fdivr
jmp
mov
movs
imul
cmp
add
jl
ror
(bad)
sub
lea
ins
lods
add
pop
ret
aas
mov
jl
add
gs
xlat
sub
push
jg
cwde
pop
dec
cmp
sub
fidivr
xlat
outs
sar
push
ins
jmp
es
jl
dec
mov
push
(bad)
inc
jl
xchg
adc
rcl
cmp
aad
mov
dec
cmp
(bad)
and
mov
dec
mov
fsub
jl
loope
rol
xor
fiadd
fisub
outs
dec
sar
add
fimul
adc
jl
enter
xor
inc
xor
sub
stos
fidiv
loope
jl
loop
loope
les
jl
jne
sub
lods
lods
cmp
out
and
sub
dec
mov
popa
mov
dec
test
sub
loope
xor
adc
jl
sub
fld
fidivr
mov
ss
sti
arpl
ret
fnstenv
ficomp
loope
jl
jp
push
aad
int3
cmp
clc
and
push
and
mov
xchg
add
test
popf
test
sbb
fld
cmp
jl
mov
bound
stc
sbb
cmp
xchg
lahf
test
mov
dec
jo
int
dec
ja
bound
lods
inc
cli
scas
loope
jl
cs
and
sbb
add
pop
cmp
ret
ja
fist
xchg
sbb
xor
adc
mov
fwait
int3
fnstcw
outs
cwde
popa
sbb
fbstp
pusha
ss
add
xchg
mov
in
or
sbb
clc
add
ja
iret
mov
loope
cwde
out
push
dec
in
dec
jl
inc
pusha
fsub
or
cmps
or
dec
inc
ins
cli
sub
rcl
fstp
cmp
loope
ret
dec
push
test
fisttp
jge
mov
cmc
mov
push
jg
out
sahf
pusha
jp
es
pop
xchg
pop
push
stc
sub
ins
rcl
popf
imul
or
mov
mov
dec
sub
movs
(bad)
jp
cdq
(bad)
aam
mov
outs
jl
inc
stc
popf
xchg
in
cmp
jb
jl
scas
pop
(bad)
dec
mov
push
add
je
sti
xchg
xchg
jl
adc
clc
dec
out
inc
ja
icebp
daa
and
or
mov
xchg
jl
pop
out
jns
mov
adc
popa
add
mov
call
pushf
stos
push
rcl
jl
out
xor
stc
cmp
popf
mov
mov
pop
mov
xchg
dec
pushf
xchg
(bad)
dec
xchg
(bad)
dec
inc
and
scas
jne
ret
jl
add
dec
aad
leave
jnp
or
mov
fisub
lods
lahf
or
lea
bound
jmp
not
(bad)
jecxz
dec
ja
pop
mov
int
imul
jo
ret
jl
push
xor
lea
pop
adc
or
aam
(bad)
cmc
out
lods
pushf
into
cmps
aad
hlt
push
enter
dec
jbe
(bad)
jl
ss
jge
mov
xchg
gs
pop
rcr
sahf
sub
mov
cli
test
loop
jl
cmp
xchg
jne
or
lods
cld
cmp
inc
inc
pusha
sbb
cmp
mov
scas
sub
inc
cdq
jge
dec
pop
ror
vhaddps
adc
popf
jl
and
clc
(bad)
sbb
dec
jl
push
add
loope
jns
adc
jnp
jl
xor
mov
pop
and
sub
mov
lods
fnstsw
js
int
and
xchg
or
mov
or
dec
mov
xchg
jl
jecxz
retf
jo
jae
jl
lahf
or
jl
and
push
enter
jl
std
jle
test
popf
jae
inc
adc
sub
sbb
sar
int3
sub
cmp
lods
sub
push
shl
inc
mov
cwde
inc
outs
cld
or
and
mov
je
pop
test
dec
into
gs
mov
ret
mov
mov
int
and
loop
stos
or
jl
jne
outs
retf
ds
scas
jl
cmp
mov
popa
push
(bad)
rcl
push
add
push
jl
inc
xchg
out
push
jge
jl
shr
imul
sbb
jns
push
paddsb
lahf
mov
mov
cmps
cmps
dec
call
inc
cmp
stos
das
sahf
mov
fstp
mov
rdmsr
pop
lods
add
in
out
addr16
xchg
sar
dec
jl
out
xlat
xchg
test
mov
jl
rol
mov
cmps
ror
lds
pop
jp
loope
ins
jp
movntq
and
cmp
sar
xchg
jge
jmp
enter
xchg
ds
cmp
leave
repnz
pop
push
and
xchg
ins
fbstp
movs
jns
test
retf
cs
rcr
mov
leave
mov
scas
jge
mov
push
or
and
sbb
sbb
sbb
jl
or
mov
mov
sub
cmp
jl
rol
shr
dec
jl
or
mov
addr16
cld
jae
pop
arpl
push
or
shl
xchg
jnp
jg
adc
sub
addr16
sbb
cmp
sbb
in
sub
out
mov
outs
in
or
jl
call
stc
jno
rol
push
xchg
adc
fst
pop
out
cmps
jge
sbb
jmp
outs
mov
pop
(bad)
cld
adc
push
jl
not
push
outs
adc
or
mov
xchg
mov
push
in
sar
cmps
retf
es
mov
jmp
int3
inc
pop
push
jl
sar
arpl
sbb
push
mov
jl
push
adc
xchg
shl
(bad)
fdivr
lea
ja
test
xor
sbb
jmp
and
dec
push
inc
in
pushf
gs
push
jge
rol
jmp
xor
jge
pop
jo
or
popa
mov
and
inc
xor
jbe
sub
pop
sbb
mov
mov
dec
sbb
pop
and
adc
arpl
jl
aas
ret
inc
xchg
sub
in
dec
jg
push
mov
and
cmp
ficomp
mov
clc
cmp
dec
mov
mov
push
xchg
pop
fwait
dec
dec
push
add
and
jle
jl
call
jl
aas
shl
pop
or
(bad)
jl
pop
push
inc
shl
add
mov
popa
sar
sub
sub
mov
in
mov
jnp
and
(bad)
adc
dec
dec
jns
int3
jl
je
loop
inc
aaa
push
jge
bound
mov
dec
jl
icebp
sub
push
in
cmps
and
jge
jge
inc
mov
cmp
xor
jecxz
adc
pop
sbb
test
inc
sti
jl
dec
jge
nop
xchg
dec
lods
jl
jo
jb
ror
inc
jl
(bad)
cdq
push
jns
iret
je
popa
imul
or
clc
jl
imul
into
neg
mov
cmps
ja
jle
mov
xchg
mov
daa
mov
outs
jl
mov
je
jl
xchg
add
inc
pop
fnstcw
ror
push
dec
aaa
jnp
sbb
push
(bad)
movs
inc
lock
fnstsw
data16
lds
xchg
ja
scas
ret
and
test
jl
dec
arpl
jl
push
call
and
sti
inc
jl
mov
sub
les
sub
jo
jl
loope
jns
ret
push
(bad)
jge
sbb
add
pop
imul
mov
mov
jbe
loope
cld
or
aaa
xor
and
mov
jge
iret
mov
fsub
mov
jl
fdiv
dec
jl
xor
lahf
dec
xchg
repnz
daa
cmc
stc
and
push
and
mov
xor
mov
outs
ret
jl
pop
std
mov
inc
jmp
sub
jl
stc
or
fimul
or
fbstp
push
pop
sbb
outs
mov
mov
mov
sar
in
sbb
jae
jp
scas
outs
jne
xchg
dec
icebp
and
jl
jo
ins
mov
sub
jnp
dec
idiv
iret
fsub
sub
mov
mov
popa
xchg
cmps
pop
cld
test
iret
xchg
pop
jl
mov
repz
push
push
cmp
and
jl
xor
mov
jl
mov
jmp
cwde
add
shl
mov
ja
jmp
push
fisttp
sbb
pop
call
ja
pop
movups
lahf
sbb
pop
fistp
rcl
mov
(bad)
enter
clc
inc
cmps
nop
out
addr16
cli
mov
xchg
sahf
jl
mov
xchg
sbb
outs
or
sub
pop
addr16
fnstenv
mov
add
in
test
cmp
xchg
xchg
mov
sbb
lahf
mov
les
push
cmp
shl
(bad)
push
push
stc
sbb
mov
es
pop
add
or
dec
call
ja
push
jmp
jp
(bad)
stc
rcr
cld
in
and
inc
sahf
jl
pushf
repz
lahf
mov
retf
jl
cli
sub
mov
push
jno
jmp
xchg
cmp
adc
jns
ds
sub
mov
mov
gs
dec
add
xchg
mov
inc
out
mov
cmp
mov
jl
push
aam
(bad)
pop
xchg
movs
jl
or
pusha
imul
cmp
imul
fdivr
aam
xor
ret
cli
cmps
pop
jae
pop
nop
int
jnp
add
mov
push
push
fs
in
or
popa
pusha
push
test
daa
adc
in
dec
in
ja
cld
jns
mov
inc
repnz
(bad)
push
stc
adc
or
retf
sahf
mov
push
xchg
outs
mov
push
jno
pop
sbb
jbe
std
sub
sbb
sbb
loopne
mov
pop
fild
enter
mov
xor
jl
adc
push
popa
mov
mov
mov
sar
mov
jnp
js
add
ficomp
add
xor
rcr
out
cmp
cmp
cmp
fnstcw
pop
imul
shl
iret
into
mov
call
push
les
ja
jmp
fstp
pop
jl
adc
sub
(bad)
dec
movs
or
(bad)
push
out
les
lea
sub
dec
push
jnp
or
or
cs
pop
xchg
hlt
push
test
cmp
pop
idiv
retf
cmp
xor
jge
mov
sbb
aad
mov
xchg
push
stos
jl
pushf
out
xchg
jl
adc
jne
cdq
repz
mov
xlat
sbb
mov
xor
fnstsw
and
xor
mov
add
out
adc
mov
jge
jl
dec
cwde
aam
nop
xchg
cld
jl
xchg
cmp
jl
in
push
mov
ja
jl
jns
cmps
xchg
dec
mov
sbb
push
lea
cmp
icebp
push
test
inc
mov
rol
cmp
(bad)
test
mov
int
fmul
fdivr
ja
std
mov
add
lahf
pop
loopne
mov
shl
enter
adc
and
call
jl
loope
loopne
arpl
push
jmp
ret
out
stos
mov
mov
xchg
aas
adc
jbe
xchg
mov
test
mov
push
xor
vcvtdq2pd
shl
test
xrelease
outs
xor
cmp
pop
mov
inc
out
mul
lods
jns
into
dec
aam
stos
jl
add
mov
adc
cwde
jnp
mov
cmp
adc
adc
test
test
push
iret
push
jl
pop
push
leave
and
sub
lea
jl
das
xchg
shr
add
dec
mov
jl
push
les
sti
inc
ficomp
jns
pop
push
sar
pop
mov
movs
aaa
bnd
in
dec
ds
xor
mov
jl
adc
sbb
mov
int3
mov
stc
ins
jl
push
mov
push
and
fidiv
rcr
je
dec
dec
mov
jl
mov
pushf
inc
mov
idiv
loope
xchg
xchg
outs
sbb
sub
sti
jmp
clc
jge
pop
outs
ins
add
leave
inc
in
fdivrp
mov
movs
scas
mov
inc
retf
and
sub
jno
pop
push
cmp
stos
jl
loope
jge
pop
test
dec
mov
xchg
mov
out
mov
sbb
sahf
mov
jl
loope
(bad)
cmp
jg
jo
ins
pusha
sti
pop
fbld
mov
ret
inc
or
lods
cld
fld
aad
dec
loope
xor
test
daa
jl
mov
sbb
jl
pushf
in
mov
jl
jno
test
cli
outs
inc
out
cs
sub
paddusw
loop
xchg
mov
neg
shl
cmps
push
mov
sbb
(bad)
je
mov
lds
pop
test
sub
dec
and
scas
cmp
pop
xchg
rcl
xchg
inc
mov
cmc
es
cld
inc
loope
inc
sar
push
push
xlat
mov
jl
mov
out
aas
mov
cld
jle
mov
stos
sti
es
mov
push
pop
sbb
sub
test
outs
lods
push
popa
fldcw
jns
jae
or
imul
and
icebp
cmp
loop
dec
jl
cld
arpl
jl
in
popf
std
daa
stos
lods
jl
or
shr
mov
jl
mov
and
into
or
or
ja
sahf
in
mov
or
outs
jp
mov
jl
stc
out
jge
not
mov
pushf
xchg
sub
idiv
(bad)
test
les
xchg
sub
push
add
mov
addr16
js
sub
mov
fs
bound
push
cdq
(bad)
mov
jbe
mov
fwait
jl
fistp
data16
inc
jge
lds
mov
rol
dec
in
cmp
dec
sub
popa
ds
jle
or
pop
and
fdivr
mov
retf
cmp
xor
cmp
adc
test
jl
pop
pop
enter
(bad)
jl
inc
pop
movs
cmp
neg
daa
adc
xchg
push
jge
mov
sbb
ss
jns
cwde
lea
mov
cmp
not
leave
movs
or
jae
outs
cwde
fdivrp
mov
ja
stc
retf
dec
sahf
mov
aas
push
or
cmp
xchg
or
adc
cwde
sbb
pop
jge
mov
dec
cli
dec
xchg
jo
xchg
pushf
ret
jl
jle
adc
sahf
jne
fwait
cmps
aam
popf
fisubr
mov
movs
add
jl
cmp
or
mov
push
test
sub
jnp
stos
push
fdivr
jns
shl
sbb
cmps
and
test
jl
mov
sbb
dec
lahf
xor
mov
dec
in
test
icebp
cmp
fnstsw
and
jge
xor
xchg
ret
mov
jns
jp
das
je
int3
in
mov
mov
add
jl
cmp
aas
push
pop
sub
mov
jg
sub
(bad)
fldenv
jmp
ins
jl
push
popa
sbb
jno
mov
out
add
enter
fidivr
popa
mov
jo
outs
mov
in
cmp
adc
test
clc
and
or
cmp
xchg
mov
test
dec
enter
outs
mov
addr16
push
les
ror
gs
mov
stc
sbb
push
jmp
jbe
fs
inc
fwait
cmps
xchg
mov
add
data16
imul
inc
frstor
xchg
cld
cmps
cs
in
fistp
je
mov
scas
jl
daa
mov
cmp
jg
lea
shl
jo
jl
push
add
jp
(bad)
or
jl
fisttp
mul
xor
enter
mov
xchg
jl
rol
ja
xor
inc
cld
test
(bad)
das
and
mov
jl
std
adc
neg
repnz
jl
pop
fstp
(bad)
stc
mov
jnp
retf
inc
push
imul
rol
inc
cld
mov
cmps
int
lds
rcr
imul
mov
and
xor
lods
div
jl
mov
stc
mov
sbb
aaa
push
shl
(bad)
in
jmp
jl
pop
loopne
dec
xchg
xchg
aas
jl
jmp
inc
and
repz
(bad)
inc
cmp
jl
xor
lahf
imul
mov
or
fidivr
sub
jp
pop
sbb
xchg
or
(bad)
jl
dec
ficomp
jl
cmp
push
push
xchg
inc
(bad)
jge
jge
aas
or
test
dec
mov
jl
push
dec
std
xchg
sbb
ja
or
retf
pop
in
cmp
bound
adc
loop
mov
jns
rcr
sbb
hlt
popa
mov
adc
push
push
cli
xchg
jl
mov
popa
or
or
sbb
test
push
mov
adc
jge
sbb
retf
aaa
ins
sub
push
sbb
popf
mov
in
mov
fwait
cmp
jecxz
test
jl
(bad)
xor
jl
push
lods
movs
jl
push
mov
and
rcl
adc
nop
test
jecxz
pushf
jmp
int3
aas
xor
inc
xor
dec
pop
jmp
mov
xchg
out
push
jl
mov
test
jl
cmp
mov
jns
xlat
jns
jp
sub
mov
xor
jl
pop
push
fdivr
adc
mov
jne
dec
aaa
jl
stc
jns
sbb
mov
jl
jo
sub
push
ja
cmp
jae
mov
mov
cld
mov
cmp
xor
xchg
test
dec
xchg
xchg
push
jge
pop
rol
(bad)
out
inc
pop
xchg
ss
fist
test
(bad)
stc
jp
mov
xor
dec
fsub
push
or
push
inc
in
clc
push
jns
jl
cmp
adc
push
aaa
jl
mov
xchg
inc
aam
or
or
jge
dec
cdq
pusha
shl
and
imul
bound
mov
into
jge
test
js
push
mov
icebp
lods
inc
jge
push
fsubr
retf
in
inc
adc
jl
imul
ja
jb
push
ret
mov
in
jp
jl
aad
jbe
stc
ja
mov
popf
fdiv
dec
mov
popa
inc
xchg
sbb
not
mov
rcl
repnz
(bad)
jl
push
sub
xchg
or
or
xchg
or
jl
pushf
fs
fisubr
in
push
dec
xchg
out
jl
mov
lock
jl
dec
inc
pop
out
fwait
jge
xchg
jo
mov
jnp
sub
popf
fist
call
cmp
int3
aad
xchg
inc
push
mov
and
jl
push
cmovg
aaa
dec
lea
mov
mov
mov
xor
and
xor
hlt
pop
je
sbb
clc
call
push
outs
jl
fisttp
loope
cmps
push
sub
xor
pop
bound
jl
mov
sbb
mov
cmc
push
mov
cmp
iret
test
mov
mov
retf
jnp
fsub
jl
(bad)
sti
in
cmp
out
clc
ret
jl
xchg
ficomp
aam
pusha
push
jl
fld
loop
movs
sar
into
push
mov
loopne
sub
outs
mov
sbb
pop
adc
stc
jl
push
cmovb
addr16
jl
pop
jecxz
pop
in
into
aam
inc
jl
das
retf
cmc
jp
sub
push
and
or
xchg
or
lea
ret
sub
test
jl
jnp
aas
inc
pop
fs
loop
outs
and
int
xchg
nop
imul
mov
loope
enter
inc
int3
fld
call
leave
dec
jl
inc
lea
jl
cdq
repnz
xchg
xor
push
jl
push
lahf
mov
jl
fild
scas
jl
mov
aas
xor
pushf
in
mov
jl
mov
inc
pop
nop
out
fs
sub
pop
push
add
cmc
and
pushf
ja
inc
daa
dec
sub
and
fistp
mov
loope
pushf
jns
jae
cmp
ficomp
jl
test
pop
shl
sbb
ret
stc
mov
or
add
sub
ja
xchg
(bad)
ja
or
pop
mov
(bad)
imul
ror
pusha
pop
mov
idiv
movs
fistp
sbb
mov
enter
test
add
stc
mov
cmp
dec
out
jns
int3
jl
inc
jno
and
pop
jl
adc
ret
jl
nop
mov
jge
icebp
jl
mov
out
dec
out
sahf
mov
jp
lock
pushf
jns
and
push
jbe
jnp
repz
call
stc
add
(bad)
jl
or
and
xchg
ins
inc
das
mov
fdiv
int3
inc
fnstcw
cmps
icebp
and
or
jge
imul
xchg
(bad)
mov
in
fld
mov
stc
jle
jl
and
lahf
jnp
mov
sar
ja
jo
idiv
fwait
and
les
idiv
jmp
test
div
add
jl
jns
bound
nop
addr16
es
sbb
add
ja
jmp
das
mov
xor
aam
lea
pop
nop
mov
xlat
mov
cmp
aam
jl
adc
js
push
test
sbb
int3
and
aad
int
dec
in
mov
repz
addr16
pop
xor
fdivr
imul
pusha
call
out
mov
mov
pop
test
movs
ins
jl
mov
adc
xor
enter
push
mov
or
(bad)
jb
mov
sahf
push
jge
dec
mov
xor
jae
daa
xor
jecxz
cmp
xor
retf
loope
cmp
and
cmovne
sahf
cld
push
jae
add
scas
jl
mov
mov
retf
lahf
jle
add
fild
sub
sub
xlat
stc
cmc
imul
and
xchg
lock
ret
add
test
dec
in
cld
cmp
sbb
inc
ins
int
dec
adc
(bad)
and
dec
jl
xor
mov
pop
bnd
cmps
cld
sub
lahf
es
mov
mov
leave
adc
ja
pop
inc
cld
inc
cld
jg
fidivr
jne
jl
cmp
mov
mov
inc
jecxz
cld
jmp
sub
inc
fwait
jl
sub
jb
lahf
enter
jno
test
jl
push
mov
lahf
jl
or
rcr
sbb
xchg
ja
rol
mov
stc
xor
jl
jns
retf
call
ds
mov
mov
in
jg
inc
cmp
or
and
and
lock
push
dec
outs
shl
jnp
call
scas
jl
xor
mov
push
mov
outs
out
mov
push
cmp
mov
sar
xchg
push
into
iret
stc
mov
loope
call
sub
jmp
xchg
sbb
lods
sbb
mov
mov
inc
push
mov
push
sub
mov
repnz
add
js
fisub
jl
outs
sub
mov
push
xchg
jne
adc
xchg
rcl
adc
pop
mov
pop
pop
stos
loopne
jl
mov
xchg
mov
lahf
jmp
xchg
arpl
test
dec
adc
inc
add
mov
cmps
mov
test
out
jbe
push
ja
ins
pop
mov
pushf
cmp
gs
push
cmp
in
idiv
and
jmp
ja
inc
(bad)
fs
ins
and
pop
jl
in
jmp
(bad)
jnp
mov
mov
jle
mov
cmp
xor
dec
or
push
maxps
stc
or
sbb
pop
jp
jg
std
add
ficomp
jb
xchg
retf
sar
scas
push
jge
or
movs
pop
idiv
mov
sar
in
(bad)
sbb
loope
jle
fist
pusha
in
xchg
gs
cli
push
inc
xchg
jl
jae
in
int3
pop
outs
ins
es
sti
mov
push
pop
(bad)
sub
jl
loopne
fst
dec
mov
jl
cmpxchg
jl
aad
or
jmp
int3
not
scas
fwait
jp
xchg
xchg
mov
es
dec
ror
jl
mov
jbe
adc
cmp
popf
inc
jge
jns
push
es
jge
sub
cli
push
push
mov
jl
mov
in
popa
jl
or
nop
add
fisub
xchg
cmp
mov
mov
pop
jmp
jne
inc
and
cwde
jns
jl
or
je
mov
pop
jne
test
not
push
jl
jno
fs
xchg
mov
jge
dec
push
jnp
daa
or
mov
sbb
cmc
dec
lods
mov
pop
push
and
cmp
jge
xor
lds
mov
(bad)
jne
leave
xchg
push
add
jns
retf
nop
add
pop
fsub
sar
jl
sbb
jge
and
shr
daa
push
hlt
xor
cmp
xchg
pop
aam
dec
mov
xchg
inc
inc
jns
jl
push
jmp
jg
mov
xlat
mov
aad
xor
push
std
dec
mov
lods
mov
fiadd
xchg
mov
scas
ret
popf
fist
es
cmp
mov
dec
(bad)
std
int3
adc
sbb
daa
add
jmp
imul
neg
popa
pushf
jl
sub
jae
js
jge
pop
xchg
push
mov
pop
cwde
test
jl
mov
outs
xchg
loop
xchg
and
sub
outs
xlat
loopne
jl
das
pop
jns
mov
cmp
test
push
mov
push
xchg
jl
mov
es
mov
and
and
(bad)
sahf
in
jg
fs
es
hlt
hlt
sub
stc
jbe
jmp
sbb
and
stc
cmps
jns
mov
jl
jno
adc
mov
pushf
mov
jl
lock
xor
inc
add
jnp
add
sahf
loop
mov
mov
popf
adc
retf
jmp
gs
aas
into
aam
jle
jge
dec
inc
cmp
dec
fcomp
push
push
or
jbe
inc
test
jo
loope
out
jmp
movs
stc
push
lock
ins
jle
mov
adc
cmp
out
jge
repnz
retf
ret
jmp
and
and
leave
dec
jl
dec
in
sti
outs
jmp
mov
jl
jns
movs
and
mov
jnp
sbb
aaa
stos
cmp
mov
sbb
(bad)
jl
scas
addr16
popa
sbb
fadd
cmp
sbb
jl
xor
fild
sbb
stos
repnz
mov
jbe
fsub
pop
mov
ins
addr16
or
cmp
dec
lea
minps
sub
inc
sub
jg
cdq
lds
xchg
cmp
jl
call
jl
dec
loope
mov
int
xor
mov
dec
jnp
aaa
ret
fbstp
movs
fist
xchg
pop
xchg
jbe
in
fild
imul
leave
loope
pop
cld
cld
mov
(bad)
out
mov
sub
lock
pop
sbb
test
xor
or
mov
test
mov
dec
loop
popa
jl
fst
sar
mov
aad
aaa
push
jl
mov
popa
retf
push
arpl
or
int3
lods
fstp
sbb
xchg
nop
bound
idiv
(bad)
cmc
cmp
pop
test
mov
fcomp
out
fnstenv
or
jmp
pop
inc
fcmovu
jnp
cmc
fs
(bad)
imul
ss
movs
sbb
and
jl
call
mov
push
sbb
jl
cmp
or
rcr
or
mov
push
push
popa
sub
push
les
jl
push
lock
mov
push
push
pop
dec
xchg
aam
jl
(bad)
sahf
mul
cmp
fwait
test
ins
stc
pop
add
xchg
push
adc
leave
sub
cld
mov
hlt
ftst
push
outs
mov
mov
xchg
mov
inc
pop
out
ret
push
fnsave
pushf
aad
js
std
jl
aam
adc
test
cmp
pop
dec
cmp
add
xchg
repnz
outs
nop
add
jae
inc
xchg
cld
hlt
sbb
cmps
jl
xchg
xchg
jl
aad
inc
sbb
cmp
dec
jns
test
jl
ret
push
push
icebp
dec
xchg
or
mov
gs
imul
pop
nop
ds
in
add
leave
aam
inc
xchg
shl
lods
xsaveopt
jl
js
gs
add
or
or
mov
add
(bad)
jl
pop
scas
shr
cmp
xchg
adc
lahf
imul
(bad)
mov
lods
xor
and
sar
cs
cmp
sub
mov
and
test
mov
sahf
repnz
lods
inc
ret
(bad)
mov
adc
push
inc
movs
mov
test
das
pop
or
leave
jne
or
sub
jbe
cdq
xor
outs
out
inc
pop
inc
cld
pop
imul
fsub
fiadd
cmp
pushf
inc
aad
push
iret
ja
(bad)
popa
cmc
(bad)
jl
cdq
stos
inc
add
fdiv
in
xchg
(bad)
sub
aam
jl
jne
and
out
pusha
pop
pop
adc
adc
jmp
ja
int
sbb
mov
outs
mov
aad
std
imul
push
mov
sbb
pop
jl
push
push
ins
jg
inc
inc
inc
pushf
stos
cld
push
(bad)
mov
mov
sbb
and
pop
sti
jl
sbb
leave
xchg
jl
lea
cmp
xor
jl
sub
jl
(bad)
test
push
jl
rcl
mov
fldenv
jbe
das
jmp
scas
jle
es
pop
jl
sar
sar
add
pop
or
cmp
out
mov
jb
shr
cmp
cmp
jl
lods
ret
sub
jp
xchg
scas
aas
data16
push
int3
mov
fild
cwde
ss
imul
dec
xchg
mov
jle
mov
int
dec
add
cwde
jmp
cmp
pop
jl
pop
dec
inc
sbb
popf
pop
push
dec
push
ds
(bad)
or
dec
xchg
scas
clc
(bad)
push
jl
int3
cmp
jl
xchg
jle
fsubr
jl
popf
or
jae
mov
add
pop
(bad)
pushf
xchg
fidivr
fld
mov
inc
jns
cmp
pop
jge
mov
xchg
cmp
loope
out
dec
imul
(bad)
mov
lock
jmp
push
jl
shr
push
mov
inc
add
aaa
push
nop
cdq
lahf
popa
int
jbe
mov
sbb
into
xchg
mov
fadd
and
iret
cld
mov
jl
add
in
adc
cmp
leave
sbb
test
jno
sti
or
retf
out
jg
jl
add
sti
lahf
mov
fiadd
sub
pop
pop
cmp
jnp
cdq
push
inc
mov
cmp
(bad)
mov
or
test
xchg
ja
mov
shr
jl
pop
rcr
cmp
dec
pop
xor
push
icebp
scas
mov
pushf
mov
das
pusha
mov
(bad)
add
lock
int
sti
icebp
jne
xchg
jge
sbb
pop
inc
outs
and
push
(bad)
aaa
loopne
cmp
xor
inc
jnp
push
hlt
add
jle
das
icebp
retf
pop
jmp
mov
call
xlat
enter
rcl
sbb
(bad)
jns
dec
imul
stc
cwde
stos
shr
cld
and
fsubr
and
or
das
or
mov
into
(bad)
fdivrp
repnz
leave
xchg
imul
add
jl
hlt
lods
jae
(bad)
lahf
adc
push
xlat
mov
mov
jnp
cmp
rcr
xchg
gs
es
or
sahf
mov
pop
lods
fcomi
and
outs
imul
ja
mov
push
cld
pop
mov
inc
jne
fsubrp
push
jle
xor
mov
ins
xor
fisttp
enter
jl
cmp
into
mov
imul
mov
jl
ret
xchg
popf
add
sahf
in
repz
mov
repnz
fs
or
scas
arpl
and
ja
nop
(bad)
mov
ficom
js
dec
dec
hlt
es
mov
aam
inc
sti
sbb
sbb
aam
popf
js
ror
call
(bad)
retf
jge
mov
fdivr
and
sbb
fsubr
(bad)
imul
cld
xchg
mov
jge
and
sbb
cli
aaa
pop
ja
inc
sub
cli
aad
test
fimul
push
addr16
ror
jl
dec
xchg
fadd
mov
jl
(bad)
mov
sar
repnz
loopne
cmp
call
scas
jl
push
test
cdq
adc
ja
ror
test
jp
dec
mov
cld
mov
leave
jl
mov
cdq
xor
not
mov
jge
lahf
pop
leave
pop
xor
jl
cli
ret
fimul
dec
popa
call
rol
aad
fsub
cdq
into
jl
sbb
popa
fisub
lahf
pop
pop
lds
inc
xchg
mov
ins
imul
scas
into
pop
sub
fcmovnbe
push
test
test
mov
in
jnp
inc
fwait
mov
(bad)
lea
xchg
fild
jp
cmp
ins
sbb
push
aad
dec
in
jae
sbb
mov
leave
or
mov
aad
sti
sbb
xchg
cmps
jb
scas
cdq
in
jl
or
jl
pop
int
repnz
pop
jl
inc
mov
jg
jle
xchg
xor
pop
cwde
jne
cld
mov
jle
xlat
(bad)
ud0
xchg
or
mov
dec
jl
mov
dec
hlt
or
mov
sti
lods
(bad)
inc
pop
inc
xchg
inc
test
xchg
popf
xchg
push
(bad)
test
push
les
inc
stos
push
nop
mov
(bad)
jg
aam
jl
pop
cmp
mov
mov
cld
add
fmul
mov
or
sub
dec
add
test
sbb
jge
cdq
pop
sahf
or
outs
push
push
or
xchg
cmps
dec
mov
jl
adc
dec
ffreep
push
jl
sysret
(bad)
leave
sbb
jne
pop
lods
or
add
sub
jmp
movs
in
in
jl
das
ss
inc
sub
fisttp
aad
mov
jge
mov
jbe
imul
mov
jl
leavew
mov
les
jge
(bad)
sar
push
mov
ins
and
xor
mov
and
cld
jl
mov
fsubr
test
and
push
shl
lods
(bad)
cld
add
(bad)
pop
nop
inc
je
jnp
(bad)
cmp
pop
in
sub
sbb
or
lods
pop
mov
cmp
mov
or
in
adc
pop
jmp
(bad)
pop
icebp
outs
mov
xchg
or
mov
jl
popa
cdq
xor
push
jl
jmp
mov
jnp
xor
or
and
inc
jl
in
dec
xor
mov
pop
repz
mov
jnp
nop
and
lods
sub
imul
mov
scas
jl
mov
adc
jl
je
xchg
shl
mov
jnp
dec
dec
mov
add
pop
cmp
rol
mov
jge
ret
jmp
push
xchg
rol
sub
cmc
xchg
(bad)
cld
in
dec
sar
mov
sar
add
pop
(bad)
lods
mov
pop
inc
push
and
jl
sahf
inc
xchg
outs
cmc
jg
mov
mov
jge
(bad)
push
jge
aad
fiadd
loope
pop
sub
fs
rcr
inc
adc
push
mov
jb
jl
mov
hlt
cmp
mov
outs
jge
jns
pop
xor
jl
pop
scas
or
push
jl
call
or
push
scas
(bad)
stc
mov
jl
int
ins
mov
push
in
div
push
dec
leave
jl
inc
int3
cmp
mov
out
and
ins
fnstsw
repnz
sub
jns
ds
jno
pop
jp
push
jg
and
mov
imul
push
jl
loope
cld
call
cmp
bt
arpl
jl
(bad)
popa
movs
jae
cmps
stos
ja
cmp
test
mov
add
test
iret
(bad)
bnd
pop
in
jge
rcr
mov
add
xor
int3
push
stos
adc
jae
retf
(bad)
jle
fistp
pop
(bad)
fdivr
ss
push
mov
jle
jl
test
fisttp
loope
add
mov
into
loopne
or
rcl
push
sbb
out
lea
xchg
(bad)
test
outs
jl
push
int3
add
pop
cmp
sub
jg
imul
cmp
sbb
stos
push
popa
mov
cmp
in
mov
adc
xchg
sub
popf
cdq
inc
in
cs
ja
pop
jne
push
dec
popw
test
test
jl
jnp
pushf
test
push
inc
jl
mov
mov
mov
add
ds
cmp
pop
dec
jp
mov
loope
fnsave
idiv
stos
fnsave
cld
pop
jns
sahf
jnp
jg
push
mov
pop
js
sar
call
adc
push
sub
sar
cs
cwde
test
lds
sbb
inc
add
js
lods
adc
das
mov
jl
retf
lock
inc
scas
int3
movs
mov
jl
and
add
jp
push
daa
push
push
xchg
adc
mov
ret
mov
mov
inc
out
cld
sbb
popa
test
or
push
cmp
inc
xchg
sbb
add
jle
icebp
adc
call
jns
sbb
mov
out
jmp
fnstsw
push
movs
jl
lods
call
xchg
mov
and
sub
sahf
xchg
int3
jge
and
sub
lock
pop
call
into
and
push
mov
shl
pop
cmps
jle
ins
mov
repnz
xchg
das
addr16
add
mov
loopne
js
jge
jbe
sbb
jl
xchg
xor
jl
push
mov
ficomp
jl
push
mov
(bad)
add
les
cmp
lock
and
adc
jl
fdivr
push
jnp
clc
outs
jecxz
bound
adc
out
das
sbb
ret
jns
jne
lahf
(bad)
push
dec
jle
fistp
shl
outs
sub
aad
cmp
pop
cmp
call
dec
xlat
aaa
jl
pop
add
jl
push
adc
ins
pop
adc
popf
xchg
cmps
adc
jle
sbb
mov
jl
mov
fs
jae
xor
fsubr
xchg
inc
outs
std
or
into
nop
fisub
cmp
jge
add
fisttp
dec
add
popf
adc
rcl
jge
fldz
jg
pop
push
mov
jl
mov
and
jl
and
lds
scas
jl
inc
push
xchg
xacquire
inc
call
xor
sub
jmp
pop
inc
xchg
dec
int3
loop
in
add
pusha
mov
lea
jne
or
add
int
movs
movs
xor
ficomp
addr16
or
fistp
jl
mov
mov
jl
(bad)
dec
out
test
(bad)
mov
dec
jmp
imul
and
pop
xor
loopne
mov
scas
enter
sbb
jl
adc
inc
or
addr16
sbb
jp
ss
pop
rol
jl
lahf
and
dec
jl
outs
and
jl
clc
push
lds
movs
lods
jl
cdq
jp
cwde
scas
sub
jl
xor
and
fiadd
movs
sbb
sahf
xchg
jl
aad
dec
pusha
pop
cdq
cmp
adc
xor
sbb
jl
fst
jp
mov
sbb
mov
mov
dec
pop
rcr
ja
(bad)
mov
out
in
jl
or
lock
jb
jne
int
dec
into
jl
repz
adc
jbe
jp
mov
inc
xor
cld
pop
ror
scas
and
jl
sbb
xchg
jne
stc
adc
outs
fs
pop
outs
jg
cmp
and
adc
std
inc
mov
and
jle
cmp
pop
push
ss
push
leave
jl
mov
jno
jbe
mov
inc
jl
sub
pop
xor
mov
jl
test
stos
lahf
leave
fild
jne
mov
mov
icebp
or
mov
jl
fs
xor
or
lock
inc
icebp
jp
jae
rol
pushf
mov
or
and
lods
jl
mov
mov
jl
push
xor
adc
mov
test
std
out
repnz
cwde
xlat
or
pop
rol
jl
aad
fdiv
inc
jg
imul
mov
ror
pusha
not
pop
movs
sub
iret
jl
je
(bad)
push
push
push
dec
sbb
sar
xor
js
ins
outs
xor
out
fnstenv
inc
int
xchg
jmp
in
push
push
int3
jge
cmp
mov
jns
push
popf
or
movs
es
sti
pop
icebp
push
xor
xchg
out
popf
outs
xchg
retf
mov
sbb
cld
push
dec
pop
sti
xor
pop
std
sbb
bnd
into
fsub
cli
dec
inc
fstp
cmp
popf
xchg
jl
push
jl
mov
pop
imul
push
clc
mov
cld
sbb
adc
inc
xchg
adc
std
fidivr
pushf
in
cmp
jl
es
mov
(bad)
popa
js
cdq
(bad)
pop
ss
push
inc
stc
add
pop
pop
cmp
lds
cmp
dec
pop
nop
jb
jl
call
jl
or
push
jns
movs
sub
popf
jecxz
fadd
daa
(bad)
dec
pushf
in
jl
jo
mov
jl
jae
(bad)
imul
neg
sahf
sahf
add
mov
fnstcw
add
cmp
outs
cdq
imul
je
push
iret
inc
xchg
sti
mov
xor
jnp
adc
test
add
test
jnp
ret
fwait
mov
xor
int3
std
sub
mov
xchg
cdq
stos
mov
add
sahf
cld
fsubr
inc
ja
jl
pop
out
mov
jnp
adc
jge
pop
pop
ret
ds
sti
or
and
icebp
sbb
fdivr
fist
push
or
sub
out
mov
mov
sub
mov
leave
ja
add
mov
movs
imul
enter
push
in
push
mov
test
mov
jo
popf
xor
scas
stc
outs
mov
call
test
sti
or
shl
add
leave
sub
sahf
(bad)
in
mov
stc
rcl
daa
mov
iret
mov
and
jl
sbb
push
lock
mov
jl
fwait
dec
inc
or
out
dec
jl
repnz
in
ss
jl
inc
add
repz
fild
xchg
push
jl
not
push
adc
fcomp
(bad)
jl
ret
push
in
fistp
cld
inc
jp
push
sub
movs
je
mov
jl
cmp
lea
inc
jp
jl
shl
dec
and
jmp
pop
add
and
imul
dec
jecxz
jp
adc
mov
js
sahf
icebp
adc
jl
mov
adc
(bad)
aas
adc
outs
(bad)
sub
xchg
dec
jl
mov
sahf
cdq
cwde
push
jl
mov
ret
xchg
xor
(bad)
pop
call
mov
js
fcomp
dec
shl
jge
mov
mov
fistp
mov
pop
test
jl
sar
lahf
inc
fnstcw
cld
in
int
jo
xchg
aam
imul
add
fimul
jl
nop
ja
fist
and
jmp
jl
fiadd
pop
push
push
outs
jl
hlt
cs
jl
cmp
aad
cdq
or
sbb
ss
xchg
sahf
pop
lahf
pop
imul
nop
rcl
xchg
pop
xchg
add
mov
sub
mov
pop
jl
test
adc
lods
adc
(bad)
fist
cmp
neg
mov
pop
(bad)
xchg
xor
cmp
and
dec
mov
or
test
mov
(bad)
mov
push
sub
adc
mov
test
mov
jl
pop
xor
mov
fistp
jp
pusha
cmp
mov
out
pop
or
aas
push
jl
outs
fcomp
test
mov
repnz
dec
jl
aas
add
dec
movs
aaa
jle
adc
xchg
mov
rol
jl
mov
sbb
mov
sub
pop
cld
fist
nop
xchg
out
jle
and
imul
push
enter
lock
sbb
and
outs
pop
dec
xchg
add
jl
call
rcl
jns
push
jl
or
dec
push
jl
xchg
dec
cmc
out
jmp
ds
fnstcw
or
mov
xlat
fld
(bad)
outs
jmp
aad
xor
ret
pop
mov
leave
das
sub
or
add
pop
leave
dec
add
mov
(bad)
mov
add
mov
mov
popf
rcl
push
mov
ret
(bad)
dec
jl
mov
cmps
mov
cmp
jbe
mov
mov
jmp
jl
mov
icebp
aam
cmp
pop
movs
mov
leave
outs
imul
cwde
pop
fld
outs
mov
jl
retf
push
int3
xor
pop
je
mov
mov
pop
cdq
ja
cmp
mov
(bad)
std
cmp
jne
rcr
les
sbb
pop
jl
scas
dec
syscall
outs
out
shl
repz
cld
out
jbe
lods
scas
jb
xor
lahf
mov
push
cmps
mov
jge
mov
sbb
pop
fdivr
or
xchg
ins
jl
ss
push
mov
jl
add
shl
mov
xor
jnp
mov
dec
shr
int
jmp
dec
cmp
jl
dec
rcl
into
and
dec
mov
xor
leave
xor
jge
and
jge
inc
retf
inc
inc
mov
mov
imul
and
in
jl
fimul
mov
mov
adc
jl
dec
cmp
cmp
jg
leave
push
mov
pop
xchg
adc
cdq
jl
sub
and
cmp
(bad)
push
pop
mov
xor
mov
jl
aad
jmp
mov
jns
jnp
xor
pop
movs
or
jle
adc
jl
int
or
pop
pop
dec
jl
stos
icebp
mov
xchg
ret
mov
ja
loop
cld
push
or
movs
(bad)
pop
jl
mov
push
and
xchg
jl
jne
shl
fnstcw
pop
es
adc
test
mov
into
jl
ins
fisttp
push
pop
movs
outs
dec
retf
call
loope
add
and
pop
into
cmp
mov
adc
sbb
popf
stc
mov
dec
adc
jl
lock
aad
jp
mov
sbb
ror
xchg
cld
addr16
push
jl
sbb
js
psubb
popf
fidiv
(bad)
jmp
xlat
jl
and
jns
gs
jl
mov
imul
pop
leave
je
icebp
jl
or
fsubr
jl
push
sub
int
hlt
sbb
jl
ficomp
push
icebp
addr16
out
(bad)
cmc
sahf
cld
mov
leave
pushf
pop
inc
repz
pop
jmp
jp
mov
in
mov
xchg
jecxz
(bad)
pop
jl
pop
aam
cdq
(bad)
movs
scas
jl
outs
pop
push
or
std
sahf
jl
push
nop
adc
leave
loop
cmp
sub
cmp
mov
cmp
leave
cmc
cld
mov
mov
jl
adc
imul
sub
dec
jge
or
ins
pop
fnsave
cmp
jne
add
jl
(bad)
jb
cmp
fbstp
test
cmps
pop
dec
je
add
in
fucomi
fsubr
mov
or
adc
add
add
xor
shl
cmp
push
lock
lods
mov
enter
dec
pop
xchg
and
dec
cmp
jne
mov
jl
icebp
in
xor
pop
cmp
pop
or
out
jl
test
aas
(bad)
ja
pop
dec
mov
retf
inc
popf
fisttp
leave
or
data16
ja
imul
stos
dec
mov
and
(bad)
xor
jge
push
add
mov
jl
aad
adc
xchg
mov
mov
mov
mov
(bad)
js
cmp
push
pop
cld
pop
mov
nop
cdq
pop
dec
mov
push
pop
or
pop
(bad)
pop
cmp
and
rol
sub
xchg
(bad)
in
outs
outs
leave
inc
enter
pushf
mov
xlat
xchg
cmps
jge
adc
popf
jge
mov
les
add
btc
shl
rcr
adc
fld
movs
cdq
es
add
repz
ja
icebp
add
push
stos
jae
aas
sbb
je
in
jl
hlt
in
mov
jae
inc
popa
(bad)
cld
fsub
xchg
jl
movs
inc
shl
adc
jl
icebp
ffreep
dec
mov
dec
xsave
cli
mov
mov
shl
cld
repnz
xchg
fld
(bad)
mov
std
fidivr
add
inc
mov
jl
rcr
ror
push
jg
push
imul
jl
frstor
or
fistp
clc
lock
js
sbb
int3
leave
mov
not
sub
fisttp
add
mov
or
pop
ds
xchg
jl
fucompp
add
addr16
jle
leave
dec
fst
cmp
jecxz
mov
or
mov
xchg
leave
inc
jl
aas
inc
test
scas
cmc
jl
and
cdq
adc
cli
repz
mov
loope
add
adc
sbb
push
and
push
test
push
enter
sbb
add
popa
push
mov
adc
xchg
sbb
jl
adc
sub
sub
(bad)
dec
hlt
pop
pop
jl
cdq
add
jge
ins
xchg
adc
xchg
mov
loop
inc
jmp
xchg
std
xchg
xchg
cli
or
and
pop
scas
xor
or
mov
mov
mov
jo
and
ja
je
cs
mov
enter
std
lods
adc
jnp
sbb
jp
mov
cmp
mov
movs
cld
sar
shl
mov
jl
adc
aad
in
sahf
cmp
jl
test
jb
cmp
cdq
xlat
(bad)
jl
and
imul
lea
pop
mov
push
repnz
call
xchg
sub
fstp
pop
or
add
scas
mov
push
push
jl
fdivrp
push
cmps
or
jns
push
push
in
adc
mov
jl
(bad)
popa
jl
es
adc
out
jl
jg
outs
cmp
scas
and
adc
inc
mov
aas
int3
mov
dec
das
movs
mov
scas
pop
mov
push
cld
pop
scas
lods
fild
adc
mov
jle
cdq
jl
addr16
test
inc
jg
cmp
sub
int3
cmp
pop
cmp
xchg
mov
push
ds
out
pop
mov
xor
cmp
jl
fcomp
aad
mov
jnp
jo
add
jl
xchg
xchg
cdq
imul
popa
jnp
add
dec
sar
or
dec
dec
outs
mov
leave
jp
pop
pop
jl
pop
add
imul
or
leave
into
data16
movs
in
mov
xchg
and
ss
mov
jnp
adc
rol
mov
mov
pop
fld
(bad)
push
(bad)
out
adc
xchg
xlat
ror
aam
jl
bound
jp
clc
push
cdq
int3
ret
sbb
iret
imul
xchg
add
or
cdq
icebp
lock
ds
es
frstor
jl
mov
mov
jne
sar
inc
or
adc
mov
jle
pop
pushf
and
xor
inc
addr16
pop
xchg
jl
pop
jb
repz
addr16
xchg
cdq
and
fdivr
(bad)
mov
inc
sub
or
into
sar
mov
jl
jmp
jl
cdq
add
and
mov
dec
sub
jl
iret
leave
jb
sub
jae
cmp
mov
fisttp
mov
mov
or
jl
cmp
clc
mov
popa
xchg
pop
fwait
inc
pop
xchg
retf
jl
pop
(bad)
mov
xchg
sbb
les
inc
sbb
out
sub
div
(bad)
enter
jl
repz
cdq
sbb
and
sbb
std
cld
cmps
jecxz
inc
jl
pop
(bad)
cmp
repz
dec
jl
xchg
mov
cmp
cmps
inc
xchg
mov
mov
int
imul
les
add
sar
push
mov
(bad)
xor
mov
into
jl
ja
stos
mov
adc
jecxz
popa
jl
and
std
sar
xor
mov
adc
dec
xor
mov
cmp
adc
jl
mov
ss
test
in
and
inc
aam
(bad)
sub
rcr
jge
push
cs
dec
(bad)
add
jl
jne
lea
or
cs
in
jl
adc
data16
jne
loopne
imul
ds
pop
jl
sbb
(bad)
iret
dec
xchg
xor
pop
jl
call
jp
xchg
fld
mov
add
cdq
add
popa
sbb
es
add
pop
lds
ffree
mov
inc
pop
gs
(bad)
(bad)
push
inc
sbb
mov
xor
fdivr
cmps
das
push
push
add
cdq
outs
push
or
jl
sahf
int
sti
jl
pushf
ins
and
xchg
fwait
leave
pop
retf
add
rol
repz
mov
lods
or
jl
mov
xchg
xor
ficomp
and
cmps
test
or
pushf
adc
nop
mov
fistp
jb
popa
into
aam
pop
fcmovbe
and
js
icebp
test
mov
or
inc
jo
xor
test
push
jmp
pop
mov
call
mov
sbb
jl
shl
push
cmc
push
mov
pop
scas
jl
test
imul
das
fidivr
mov
int3
outs
mov
or
les
sbb
test
ret
jl
push
and
jl
mov
repz
xchg
inc
jl
or
fs
fcmovu
int
push
cmp
call
pushf
cmp
pop
ja
retf
xchg
mov
mov
adc
jl
xchg
lock
mov
fidivr
es
jne
mov
push
or
scas
push
aam
jl
gs
ror
fiadd
cli
jl
mov
mov
popa
xchg
cld
fcmovnb
mov
cld
mov
jl
outs
es
fnstsw
add
dec
mov
ja
leave
pop
rol
ins
pusha
adc
pop
inc
dec
outs
add
leave
loop
popa
iret
and
cmp
xchg
scas
mov
xchg
ds
lahf
in
(bad)
aad
sub
add
sbb
inc
jge
mov
cmc
xchg
jl
adc
xchg
jp
or
in
jge
aam
sbb
mov
stos
mov
adc
loope
or
inc
jle
movs
sub
jl
ins
add
dec
jnp
xchg
fsubrp
jge
mov
mov
sub
cmp
or
ret
in
jl
push
or
mov
rcr
cmc
cmps
ins
pop
aad
cmp
icebp
(bad)
and
cld
mov
arpl
mov
mov
xchg
fistp
jns
cmc
jl
cmp
sub
ror
inc
xchg
sub
nop
jl
pop
ss
push
xchg
int3
jnp
mov
aam
xor
or
sub
and
jl
xchg
fs
fistp
pop
mov
jl
sub
iret
jl
(bad)
enter
mov
scas
int3
mov
pop
jmp
mov
(bad)
les
push
stos
fstp
neg
jo
jl
sahf
jns
sub
mov
xor
aam
sub
jge
mov
jge
xchg
adc
jl
enter
pusha
cmp
adc
test
mov
and
popf
pop
xchg
jle
jl
dec
dec
fiadd
mov
leave
dec
in
cmp
mov
mov
shr
cmc
jl
dec
data16
or
test
xor
cdq
inc
cmps
int3
jns
cmp
xchg
cld
cmps
into
dec
test
xchg
xor
jl
adc
(bad)
mov
(bad)
test
xchg
stos
dec
jns
cwde
push
jl
or
outs
not
mov
int
dec
cmc
mov
(bad)
jl
pop
fcomp
jl
stc
shl
cmp
jmp
cmp
jmp
cdq
in
pop
popf
sbb
jl
add
jo
shr
push
sbb
or
push
inc
or
arpl
xor
(bad)
movs
clc
cld
pop
and
push
jl
mov
pop
jmp
adc
fnstsw
test
out
jl
inc
ja
jle
cmp
jl
out
(bad)
xor
mov
jl
leave
scas
cmps
mov
pop
sahf
jns
jbe
cdq
ret
(bad)
push
push
jl
fsub
cld
inc
sbb
jl
xlat
xchg
shr
scas
inc
ret
lea
pop
inc
scas
outs
or
rcr
shl
cmp
mov
inc
xor
or
sbb
popa
jp
imul
adc
jns
sub
dec
mov
fnstsw
das
call
adc
jo
mov
dec
cmc
xchg
outs
push
stc
push
inc
ja
retf
mov
jl
ret
into
cld
fwait
add
js
cmovb
xor
inc
les
jne
fst
mov
sub
sbb
fsubr
mov
inc
pop
xchg
es
jns
push
mov
cdq
out
test
jl
pushf
pop
in
jmp
test
enter
cwde
mov
dec
inc
jge
movs
rcl
(bad)
(bad)
mov
fiadd
into
ja
inc
lea
inc
add
push
jl
pop
rcl
add
mov
cmps
(bad)
adc
mov
or
and
mov
frstor
xor
fwait
xchg
jl
xchg
or
pop
push
test
jl
fnstcw
xor
jmp
cdq
mov
test
mov
dec
xchg
in
dec
out
test
fnstenv
jb
push
test
in
mov
mov
xchg
pop
dec
outs
nop
sbb
jle
mov
or
push
and
lock
sar
ficomp
addr16
xchg
cmp
ficomp
mov
xor
aas
or
mov
adc
movs
icebp
loopne
stc
pop
jl
ret
pop
jmp
mov
emms
pop
dec
sub
icebp
les
call
int3
cld
nop
push
and
retf
or
movs
(bad)
hlt
sahf
fsubr
scas
pop
jl
mov
pop
mov
mov
sahf
push
inc
inc
mov
icebp
jmp
scas
test
je
mov
add
fdivr
cwde
jecxz
fst
jne
add
push
cld
repnz
ror
mov
mov
arpl
addr16
jnp
jl
int3
sbb
mov
xchg
pop
fst
loopne
sub
sbb
cdq
stc
sar
or
cmc
jg
test
and
adc
cwde
xchg
xlat
jge
mov
fcom
sub
pop
xchg
pop
arpl
jle
push
test
iret
inc
dec
add
pop
test
dec
add
gs
jno
enter
xchg
or
ficom
or
fidiv
jl
dec
imul
retf
jl
out
shl
push
aad
add
jl
js
imul
arpl
mov
jmp
mov
jl
mov
rol
push
mov
sbb
cmc
pushf
lds
cdq
shr
leave
mov
jns
sar
cli
loopne
cmp
cmp
and
outs
sbb
sub
push
idiv
cmps
fdiv
fcmovnb
imul
ins
mov
jl
mov
rcl
cmp
ins
add
jo
jns
das
adc
jmp
jl
push
cmps
dec
int
dec
inc
jl
pushf
xchg
mov
data16
pop
jl
sub
shl
sub
adc
cdq
mov
fs
ss
xor
(bad)
rcr
push
addr16
pop
pop
jle
mov
mov
push
jl
out
mov
add
push
jge
fisttp
pop
cmps
(bad)
xchg
jge
jl
jp
pushf
add
int
push
imul
imul
sub
or
sub
jg
(bad)
jmp
mov
lds
daa
jl
test
dec
int
cmp
les
mov
ret
pop
mov
mov
ds
ins
test
movs
mul
jl
jecxz
pop
rol
cld
sahf
int
mov
push
stos
and
int3
jl
(bad)
outs
leave
jg
std
scas
inc
mov
and
add
sar
mov
jl
add
mov
mov
jl
cmp
dec
push
jle
outs
int3
xchg
cmp
pop
jl
lea
inc
mov
fnstsw
cli
stc
in
sbb
add
(bad)
jp
sbb
jecxz
or
push
cdq
pop
dec
mov
rol
push
idiv
mov
cdq
pushf
mov
bound
popf
pop
jl
leave
adc
es
(bad)
adc
sub
int
cmp
fld
jge
push
pop
outs
mov
cmp
sub
xchg
cmc
xor
jns
fs
jg
jl
pushf
sub
enter
jnp
fsubr
inc
(bad)
sbb
iret
adc
pop
adc
sub
test
js
or
sub
stos
jge
aad
pop
pop
xor
test
dec
pop
and
jl
mov
leave
adc
pop
fidivr
jmp
rol
add
dec
inc
dec
js
xchg
mov
jl
in
clc
cmp
dec
mov
icebp
movs
cmp
and
cmps
and
push
ja
pop
ds
int3
bound
pop
popa
jne
xchg
jo
adc
in
sahf
and
shl
push
mov
ins
fild
push
inc
jl
fs
dec
jl
(bad)
das
xor
leave
aam
int3
pop
inc
cmp
std
mov
add
outs
sbb
stc
dec
int
cld
ss
(bad)
repnz
push
adc
add
rcl
inc
mov
and
por
popf
call
xor
mov
int
ja
xchg
xchg
jle
sbb
sbb
sar
jl
fcom
int
mov
inc
cmp
call
nop
std
sar
jl
push
xchg
lods
xchg
sub
jl
stos
add
cld
jl
fdiv
pop
fimul
pop
lods
mov
pop
mov
jo
fcomi
arpl
jl
lahf
xchg
xor
out
jl
lea
sub
loop
push
gs
pushf
aad
mov
sbb
mov
or
out
pop
jns
outs
mov
xchg
xlat
pop
retf
fsubr
adc
jno
lds
dec
mov
inc
jl
icebp
and
fistp
mov
test
ja
lea
in
xchg
shr
ss
shl
imul
inc
je
push
dec
mov
add
adc
jl
add
inc
sti
shr
sub
fucomi
sbb
xchg
aad
fs
mov
inc
xor
js
cld
ja
cld
imul
pop
jbe
dec
cmp
pop
or
and
sbb
jnp
mov
mov
scas
add
inc
jl
stc
jb
fisubr
xor
inc
out
sahf
les
pop
jl
and
into
jmp
pop
in
test
or
pop
test
int
add
xchg
mov
push
and
xlat
or
pusha
stos
fnsave
add
outs
cmp
cmp
jl
cwde
cmp
sbb
mov
jl
xlat
scas
pop
fcom
dec
jl
pop
sbb
retf
xor
mov
cdq
addr16
lds
push
daa
inc
or
add
adc
cdq
popa
cwde
pop
ror
cld
sbb
hlt
and
pushf
fs
mov
loope
push
mov
(bad)
add
rcr
mov
push
or
popa
call
mov
xor
icebp
xor
imul
sbb
jl
mov
pushf
sar
lods
das
cdq
sbb
ret
jnp
fst
icebp
jno
jge
pop
pop
or
jmp
xor
and
popa
pop
outs
cmp
mov
iret
add
push
call
jl
lahf
mov
mov
jg
leave
push
jbe
mov
outs
ss
mov
mov
repnz
or
sbb
mov
outs
push
xor
xor
push
(bad)
dec
jp
cmp
fnstsw
mov
int3
in
jp
jmp
ss
jl
sahf
arpl
in
pop
icebp
sub
jae
xor
and
sub
cdq
shr
movs
and
bound
(bad)
cli
pusha
imul
cwde
in
adc
sub
cmps
sbb
out
cmc
jne
mov
fdivr
(bad)
shl
outs
add
jl
pop
mov
hlt
add
jl
fcmovnu
jne
into
shl
sbb
jl
cmp
mov
sub
in
jl
sub
fisttp
into
and
mul
add
sbb
dec
outs
mov
ret
jl
adc
scas
(bad)
xchg
sub
cmc
shr
jl
push
sub
(bad)
sar
push
rcr
xor
loope
or
ret
push
dec
adc
add
xor
push
sbb
add
jl
in
and
mov
xor
xchg
das
or
xchg
(bad)
movs
mov
scas
mov
dec
lods
into
ds
cmps
ins
cld
out
outs
mov
(bad)
les
lds
jmp
push
cmc
aad
fdivp
(bad)
dec
jl
sti
jg
cdq
mov
arpl
push
mov
jl
sbb
jl
icebp
lock
jae
and
xor
pop
jbe
xchg
jle
pop
scas
cwde
xchg
jl
out
in
into
sbb
cmp
gs
rcr
clc
mov
mov
fcom
push
pop
xchg
(bad)
or
push
xor
fninit
fmul
jp
mov
add
cmp
inc
jl
lds
push
add
cmps
dec
push
rcl
jnp
daa
retf
lods
repnz
sub
(bad)
fistp
sub
inc
jmp
stos
adc
mov
xor
cwde
mov
jmp
jl
cmp
mov
mov
cmp
fsubr
leave
jl
or
or
push
clc
div
adc
popf
js
leave
push
push
jl
mov
pop
cs
rol
aad
jl
lahf
push
aam
ins
aas
in
cld
(bad)
push
inc
dec
pop
push
sbb
xchg
mov
neg
jl
movhps
jge
leave
cld
mov
jae
mov
xor
and
dec
pop
hlt
jl
jno
mov
jl
ds
mov
inc
jne
popa
cmp
popf
sar
xor
push
jmp
fs
cmp
or
xchg
loop
jne
call
cmc
shl
cmp
jl
jmp
sub
pop
or
fcmovne
cmp
or
ja
std
mov
ss
and
sub
jmp
push
mov
mov
jl
or
lea
rol
(bad)
mov
ja
out
ret
stc
lods
pop
movs
mov
jge
pop
imul
test
push
sbb
fdivrp
inc
jl
fwait
dec
shr
dec
pop
(bad)
ja
mov
mov
jnp
jg
sub
jbe
jmp
pop
enter
(bad)
jl
xor
dec
sar
push
sbb
cmps
outs
in
add
jns
dec
outs
in
jl
ds
add
push
or
js
mov
cmp
(bad)
popa
sbb
cmp
mov
cdq
xchg
push
fist
add
imul
fyl2x
adc
stc
ds
daa
rol
xchg
jmp
xchg
in
jl
pop
std
in
fnstsw
popf
outs
or
jl
test
fcom
push
cdq
cli
add
jl
adc
push
cmp
mov
cld
adc
in
jnp
xchg
outs
aaa
push
leave
sti
das
xchg
mov
add
arpl
cwde
(bad)
pop
cld
enter
jnp
push
xchg
sbb
mov
jge
fisttp
jbe
cwde
pop
mov
in
(bad)
mov
sbb
add
loopne
mov
mov
jmp
xor
inc
push
outs
jl
fsubr
aas
std
ror
jp
xchg
div
xchg
mov
mov
jge
hlt
sbb
cmp
call
mov
lea
data16
int3
(bad)
js
sbb
xchg
outs
leave
cmp
cmp
fnstcw
nop
hlt
rcr
call
adc
dec
cmc
sbb
jmp
inc
mov
outs
dec
leave
jae
fdiv
sar
jl
lods
mov
test
int3
adc
cli
mov
cmp
stos
mov
xchg
leave
or
jg
(bad)
jl
int3
lea
clc
outs
add
jl
jnp
aaa
push
mov
mov
adc
jl
cmp
xchg
jl
pusha
int3
popf
int
add
xor
leave
aad
and
ds
outs
(bad)
es
mov
pop
adc
pusha
sub
pop
jl
lea
xchg
jl
xor
arpl
and
sbb
ja
outs
and
popf
mov
jecxz
add
sti
in
mov
scas
test
outs
popa
cwde
daa
popf
jl
jge
mov
outs
sub
cdq
das
cli
pushf
stc
bswap
aad
jl
pop
jne
push
or
inc
xchg
jle
mov
fwait
push
les
ja
pop
fidivr
or
mov
mov
jge
std
fst
es
sbb
pop
in
stos
inc
bswap
cld
stos
inc
push
iret
cmp
mov
cmp
sar
js
cdq
and
jns
xlat
sub
test
fnstcw
jl
ss
jl
into
xor
lods
fisttp
or
jl
jne
(bad)
leave
sar
lahf
stc
rol
mov
jl
add
js
ror
cmp
rol
(bad)
out
in
ja
xor
loopne
int3
mov
retf
scas
in
add
int3
pop
mov
or
sub
call
mov
xchg
ins
pop
and
test
test
pop
stos
mov
mov
jl
enter
push
mov
jl
fcos
add
jl
sbb
divps
iret
int
cld
js
repnz
loope
xchg
sar
add
jl
outs
jns
jno
mov
jl
leave
js
rcl
popa
sbb
jl
cwde
xchg
mov
loope
push
jl
pop
sub
cmp
adc
scas
leave
movs
call
pop
popf
jmp
jl
push
icebp
out
rol
in
jl
jle
and
lea
ror
imul
jne
in
leave
adc
ror
mov
sub
xchg
(bad)
mov
mov
lods
jl
sub
xchg
and
arpl
leave
je
es
mov
jle
sti
mov
xchg
pushf
mov
in
jno
in
mov
ror
pop
das
or
outs
cmp
cld
movs
mov
mov
test
mov
xchg
pop
xchg
xor
push
mov
pushf
mov
jl
and
nop
sbb
and
(bad)
pop
adc
xor
sbb
jl
push
mov
fmul
(bad)
sbb
sbb
mov
jnp
xchg
aam
and
fnstsw
lahf
imul
jl
push
push
pop
jge
sahf
mov
jnp
push
cmp
lods
push
vhaddps
or
fwait
pushw
xchg
adc
in
or
jg
jl
or
add
jl
sbb
sub
sub
mov
and
push
sbb
or
sub
and
daa
jge
cdq
cmp
fbld
sbb
scas
jl
jecxz
or
mov
leave
jmp
rcr
xchg
mov
jge
shl
add
push
fidiv
jl
mov
mov
jl
or
sub
loope
leave
push
out
and
add
sti
int
es
adc
mov
add
outs
aas
out
pop
mov
mov
push
jge
dec
test
and
or
popf
push
into
inc
xchg
add
sbb
cmc
mov
push
jle
jl
pop
data16
enter
and
sub
(bad)
js
jne
xchg
mov
in
push
mov
jno
pusha
cmps
aas
(bad)
clc
ja
jl
xchg
xor
or
jl
and
and
jl
fld
and
leave
push
rcl
fbld
in
jge
loope
sar
ja
popf
rcr
sti
mov
fs
inc
sbb
and
pop
mov
jl
and
cmc
arpl
dec
cmp
fldcw
or
inc
lods
xchg
sar
lods
test
inc
dec
sub
fnstcw
add
inc
imul
jns
shr
data16
mov
add
icebp
add
mov
dec
fs
imul
scas
ins
sti
mov
jl
fisub
in
push
rcr
inc
xor
out
call
mov
jl
pop
sti
xchg
(bad)
aad
fistp
popf
and
mov
loop
or
mov
dec
ja
mov
cdq
push
mov
inc
dec
imul
fisttp
xchg
leave
mov
mov
mov
test
lea
shl
xchg
jne
aas
jno
cld
aaa
jle
aad
jnp
jg
mov
jecxz
mov
ja
add
int3
retf
fmul
mov
pop
sbb
add
into
pop
cmp
in
inc
shl
outs
loop
fstp
push
mov
cmc
pop
xchg
sbb
sub
shl
push
xchg
cld
es
add
jl
add
cmp
fsubr
dec
(bad)
mov
lea
outs
popf
(bad)
push
leave
cld
arpl
sbb
cmp
shl
jl
rcr
add
xor
inc
popa
push
pop
jae
cdq
mov
(bad)
or
cmc
pushf
cmp
mov
je
mov
add
jl
sbb
ficomp
ss
fcmovnbe
aaa
inc
fld
mov
mov
adc
movs
dec
push
mov
mov
mov
jl
inc
adc
or
bnd
loope
cs
fcom
jl
add
int
(bad)
enter
add
push
jnp
rol
jl
adc
jge
fbstp
retfw
out
or
int
xor
leave
push
mov
or
add
cdq
jl
mov
mov
jle
aad
cli
cld
sub
lahf
mov
jo
jp
dec
inc
addr16
movs
mov
cdq
xor
mov
data16
pop
fcom
ins
inc
neg
jge
or
lock
cmc
mov
shl
dec
out
clc
sub
lahf
sar
mov
jge
dec
cmc
jne
stos
add
jl
mov
cmp
jl
add
icebp
jl
fbld
(bad)
dec
aad
jl
cli
jmp
mov
mov
xchg
int3
sar
mov
sub
mov
xor
repnz
ja
inc
pop
(bad)
cdq
je
shl
xchg
jl
adc
sub
inc
shl
scas
push
sar
imul
popa
add
pop
mov
ins
mov
cmps
inc
xchg
jge
mov
pop
pop
leave
sbb
jp
sub
xor
push
xchg
xor
add
out
in
mov
mov
add
jl
sbb
stc
mov
into
jl
xchg
mov
es
call
jl
mov
test
pop
and
mov
and
xor
fdivr
jbe
fimul
cmp
or
xchg
jns
sub
dec
mov
repz
out
mov
and
dec
and
pop
push
push
das
cld
(bad)
pop
cmp
fdivp
mov
and
push
jns
xlat
fcomp
ins
or
push
sahf
int3
pushf
sar
mov
pop
cmp
jno
hlt
fmul
loopne
repnz
jnp
aam
xor
mov
and
es
xchg
gs
pop
jl
xchg
test
pop
dec
pop
into
sbb
jl
aad
sub
scas
rcl
jmp
mov
shl
std
push
pop
clc
shl
inc
mov
lock
pusha
dec
sbb
inc
out
jg
icebp
add
outs
pop
(bad)
into
call
ss
jl
sar
leave
or
jp
movs
xor
sub
push
jge
mov
enter
fcmovnu
les
jp
push
gs
xchg
scas
iret
sub
xchg
inc
js
sti
jmp
test
std
dec
sbb
or
repnz
jl
mov
fistp
push
mov
inc
mov
sub
dec
sar
dec
cmp
pop
ds
out
jl
lahf
dec
cmp
imul
fidiv
pop
and
jl
hlt
lea
jl
fsub
jmp
push
mov
sub
xchg
and
jl
rcl
sub
add
imul
pop
outs
mov
and
cmc
add
(bad)
jno
pop
push
sbb
cld
lea
imul
ret
fmul
cmp
xchg
js
mov
inc
mov
outs
mov
imul
lds
movs
sub
jnp
rol
adc
push
sbb
mov
cmp
aad
and
mov
cmp
icebp
pop
nop
cmp
(bad)
mov
call
cwde
enter
push
xchg
in
adc
out
push
jmp
pop
pushf
xor
outs
mov
fst
pop
add
stc
lahf
outs
movs
push
ja
aas
mov
movs
sbb
ds
add
(bad)
push
outs
or
ins
or
sub
ja
enter
fmul
cdq
dec
sar
scas
fild
jl
push
mov
leave
jl
or
scas
mov
inc
outs
xchg
pushf
popa
inc
cmp
and
arpl
push
cmps
jns
add
(bad)
sar
fs
aas
(bad)
daa
push
sar
jmp
jge
imul
jecxz
cmp
cmp
imul
jno
or
adc
inc
(bad)
cld
dec
mov
jl
cmp
(bad)
fcomp
or
out
fcomip
(bad)
and
sbb
sub
jp
xor
dec
aaa
jp
cdq
rcl
sub
inc
jge
shr
sti
fbstp
fstp
in
push
jl
leave
mov
nop
popa
jl
push
(bad)
or
jns
pop
dec
retf
xlat
(bad)
out
aam
fbld
scas
jl
jecxz
mov
cmp
xchg
ins
test
pop
jae
iret
idiv
xor
lea
and
jmp
pop
add
icebp
sbb
sbb
cmp
(bad)
cdq
out
inc
lods
inc
fdivr
dec
cmp
outs
and
xor
or
mov
and
test
mov
inc
lds
cli
xor
idiv
(bad)
(bad)
push
fidivr
(bad)
jl
js
rol
add
xchg
sub
outs
movs
mov
sti
ret
mov
in
sub
pusha
xor
popf
test
enter
push
cdq
fadd
xchg
inc
(bad)
fldenv
out
inc
add
cld
mov
imul
inc
inc
dec
or
ja
xor
icebp
jmp
aaa
xchg
inc
fst
pop
xlat
sbb
push
fcomip
pop
inc
xchg
test
ds
jecxz
jne
xor
aam
jl
cmp
aad
push
cmp
jge
push
es
mov
cld
(bad)
rcl
and
mov
xor
test
shr
sar
add
sahf
ins
sbb
pop
loope
movs
mov
xchg
jnp
into
scas
fcomp
adc
mov
xor
pushf
inc
pusha
inc
ds
int
jnp
mov
add
xchg
mov
loopne
ja
in
cmps
sahf
in
iret
test
fild
mov
xor
jns
mov
lods
jl
test
pop
cdq
or
mov
ja
shl
or
cmp
ret
inc
pop
push
jl
daa
test
jbe
xchg
push
jl
in
adc
cmp
pop
icebp
inc
(bad)
push
jl
loope
mov
add
or
sbb
icebp
sub
push
dec
mov
pushf
aam
test
outs
movs
lods
inc
neg
rol
fst
cld
sub
xchg
jl
into
push
add
push
cmp
xchg
aam
jl
fdivr
jl
sub
jg
hlt
fidiv
pop
in
and
sbb
mov
mov
in
pop
lock
add
sub
mov
xchg
jnp
arpl
lahf
(bad)
icebp
repnz
in
cmc
xchg
pop
mov
and
xchg
jl
add
fild
ja
test
jne
mov
cmp
in
cld
fs
inc
jl
fisubr
popa
clc
xchg
mov
push
imul
test
cmp
push
xchg
add
test
sbb
scas
xlat
dec
mov
aam
mul
mov
aad
mov
pop
sbb
loop
sbb
jns
push
lods
push
jl
and
mov
ins
mov
push
xchg
cdq
fnstsw
rol
into
mov
aas
pop
(bad)
cld
push
aaa
jle
loopne
jns
sbb
or
(bad)
inc
jl
inc
icebp
cmc
leave
xchg
outs
loopne
scas
sub
scas
mov
out
into
sbb
fwait
mov
sub
mov
jl
rcr
loope
xchg
adc
mov
cmp
and
dec
jge
inc
or
ficom
sub
rcl
data16
cmp
jl
jle
out
loope
movs
xor
data16
or
icebp
mov
inc
sub
jae
popa
xchg
jl
rcr
jl
add
mov
jl
mov
or
and
sbb
pop
or
outs
xor
add
inc
xchg
repnz
or
test
ja
out
mov
cdq
cmp
mov
jecxz
arpl
int
call
cld
or
jno
jle
int3
stos
jl
or
jecxz
loope
ds
or
(bad)
push
xor
cmp
mov
jl
aam
popa
loope
jl
sar
cmp
or
pop
jbe
ror
jge
inc
cmp
test
jb
xchg
xor
(bad)
jl
dec
cdq
jge
test
pop
jl
mov
int3
(bad)
push
jbe
nop
ja
mov
xchg
sub
pop
mov
enter
in
ja
gs
mov
jl
dec
dec
mov
cld
ret
cmp
das
add
xlat
fucomp
push
sub
das
cdq
mov
push
jl
mov
in
pop
jl
push
mov
leave
sub
aam
mov
lock
(bad)
mov
add
(bad)
rol
jge
out
imul
cld
into
les
jne
test
cmp
call
mov
jbe
cmp
sbb
sub
data16
xchg
sar
pop
jl
cdq
aas
fldenv
pop
out
jl
dec
leave
jne
icebp
add
xchg
add
addr16
pusha
clc
mov
jl
jle
into
lock
(bad)
ss
mov
in
push
pop
jl
das
outs
movs
leave
mov
add
push
jns
mov
sbb
sbb
mov
imul
js
cld
sub
hlt
jmp
pop
cmc
and
mov
aas
xor
jmp
xchg
xchg
cmc
jl
inc
mov
add
mov
icebp
ret
into
xor
xchg
dec
or
adc
mov
movs
push
and
dec
jl
ret
ss
mov
fistp
addr16
mov
pop
test
pusha
jl
adc
scas
add
inc
mov
or
das
inc
push
jl
mov
repnz
xor
or
ja
inc
and
add
rcr
mov
cmp
or
push
jl
int
fsubrp
xchg
jl
leave
pop
mov
push
push
fnstenv
jmp
jl
or
shl
cdq
jp
inc
pop
sub
mov
dec
ret
sub
pop
loop
add
pusha
movs
outs
ret
cmp
ja
and
pop
fdivr
div
cmp
mov
xchg
call
(bad)
in
jl
cmp
cmp
xor
test
ficom
jnp
gs
push
push
jl
je
mov
jo
aad
ja
or
jge
data16
ins
fwait
mov
pop
pushf
outs
jmp
xchg
jl
fnstenv
jne
shl
mov
add
sbb
popf
loopne
sbb
or
fnstsw
fild
shr
cmp
jl
aad
add
test
or
pushf
nop
mov
pop
fst
cmps
push
mov
and
addr16
sbb
(bad)
mov
xchg
jl
jnp
arpl
in
sub
aaa
jmp
jnp
dec
popf
lahf
sbb
popa
push
mov
test
inc
jl
inc
scas
int3
aam
vhaddpd
jbe
adc
jg
jl
push
sbb
lea
sbb
fcomp
jl
mov
mov
mov
push
mov
mov
pop
xchg
icebp
jne
push
xchg
data16
iret
leave
inc
(bad)
dec
cs
pusha
popa
adc
mov
leave
push
scas
xchg
add
jae
into
add
std
test
mov
jl
das
mov
jge
in
cmp
add
sbb
and
test
call
jns
(bad)
pop
movs
cld
add
mov
xchg
mov
push
aam
inc
add
into
jo
cmc
cmps
or
and
(bad)
fsin
mov
pop
xor
jl
push
shl
rcr
inc
mov
adc
add
test
xor
stos
cmp
(bad)
clc
movs
xchg
dec
ins
jl
jmp
popa
sub
mov
xchg
arpl
jp
xchg
dec
out
rcr
pushf
mul
aas
(bad)
sti
in
or
cdq
adc
daa
jnp
pop
push
sahf
add
fadd
jmp
xchg
imul
sub
lods
mov
cmp
mov
pop
je
add
int3
jl
sti
rcl
test
adc
std
cld
retf
aaa
leave
icebp
pushf
imul
mov
xchg
jbe
int
(bad)
jns
int3
stos
cmp
call
ja
lea
pop
out
fnstsw
sbb
std
jmp
aad
or
mov
jl
dec
mov
ffreep
add
mov
jge
in
sbb
(bad)
push
ins
jl
icebp
mov
leave
ja
scas
sub
xchg
inc
adc
movs
fnsave
cwde
or
mov
push
sub
jno
adc
data16
mov
push
popa
jl
scas
add
(bad)
mov
stos
pop
or
jmp
sbb
pop
jl
ret
mov
adc
xor
jl
mov
pusha
dec
sub
std
inc
das
pop
out
imul
xchg
hlt
jl
icebp
push
imul
rol
jge
or
cmp
std
jbe
jl
pop
dec
mov
fiadd
lds
jl
lock
(bad)
imul
cmc
lea
test
xlat
xchg
mov
js
les
push
mov
pop
mov
fild
push
icebp
ja
movs
lods
aam
or
push
mov
mov
daa
add
jg
mov
jmp
(bad)
les
adc
jge
call
push
mov
out
out
movs
jl
lds
sbb
jl
pop
mov
mov
(bad)
and
jns
fisubr
fistp
or
int
test
add
pop
push
mov
aad
or
jge
jle
leave
ja
lds
mov
xor
int
sbb
bound
jge
dec
jns
(bad)
and
test
fsub
adc
and
sahf
js
add
dec
repnz
ret
in
jl
xchg
mov
mov
mov
xchg
jl
sbb
ins
fld
push
rol
xchg
dec
sbb
out
frstor
arpl
test
clc
jmp
out
cdq
push
ins
les
jl
sub
add
mov
fdivrp
icebp
aad
xlat
dec
xchg
int3
jge
xchg
pop
ret
add
sub
(bad)
sar
popf
out
jl
and
pop
jg
mov
stc
outs
xor
sbb
jge
mov
shl
pop
mov
js
ja
cmp
test
test
cmp
mov
push
push
sahf
nop
or
std
jl
sub
xchg
inc
iret
jl
stos
fisubr
jl
jge
mov
cmp
jne
xor
out
pop
jnp
push
push
sub
pop
or
cli
cdq
mov
jecxz
mov
or
cs
add
jl
add
mov
jp
mov
fwait
daa
mov
jmp
jnp
adc
test
mov
les
and
das
dec
ins
hlt
lods
fst
sbb
outs
jl
fs
inc
inc
pop
push
jl
clc
rcr
and
rcr
jl
(bad)
cdq
xor
add
out
push
enter
jl
aad
loope
test
gs
pop
clc
xchg
jle
cmp
jnp
mov
mov
sbb
jg
fmul
imul
mov
sub
jl
ins
std
mov
or
popf
fnstenv
fild
(bad)
jl
test
adc
and
popf
jge
mov
jecxz
or
push
sub
addr16
sub
lahf
mov
or
mov
pop
jle
xor
inc
sar
and
inc
outs
sbb
fldcw
xchg
jl
ds
mov
add
mov
mov
icebp
fs
add
mov
ins
push
imul
leave
pushf
mov
outs
enter
sbb
(bad)
jno
int3
inc
jl
pop
imul
mov
push
fprem1
in
jl
mov
scas
js
sahf
arpl
lock
mov
leave
or
push
push
sub
ins
and
and
popf
xchg
dec
dec
lock
jl
scas
mov
fs
pusha
imul
cmp
loopne
mov
jl
das
std
enter
in
pop
or
dec
jl
mov
ds
jle
pop
xchg
xchg
outs
test
lods
add
mov
mov
xchg
inc
cmp
popa
or
dec
jl
das
rcr
es
cli
movs
mov
shl
mov
add
xchg
dec
jl
addr16
sbb
call
cmp
push
xor
add
sahf
fstp
add
and
imul
sub
push
dec
add
sub
adc
lods
jne
add
and
fwait
mov
retf
push
mov
push
mov
jb
push
pop
jle
xchg
jmp
jmp
(bad)
mov
(bad)
jl
js
repz
inc
and
and
leave
loop
xchg
jl
sub
adc
sbb
out
push
xor
add
cli
jl
(bad)
(bad)
cmps
imul
enter
popa
mov
xor
dec
popa
leave
lods
xor
jl
jle
ror
xchg
pusha
ror
push
cmp
(bad)
jb
fdiv
in
or
mov
mov
clc
lods
les
jl
mov
rol
push
aad
inc
pop
lahf
push
(bad)
mov
sub
int
lock
push
xor
frstor
and
call
mov
test
ret
dec
ds
xchg
cmp
xchg
adc
add
jp
mov
jg
stos
add
jo
push
imul
out
aam
adc
aad
inc
in
pop
jl
leave
outs
adc
jb
jl
sar
jle
jl
xchg
retf
xchg
mov
cmp
loop
fistp
cwde
fadd
xchg
cmp
or
vpsrlw
cmc
inc
mov
popf
cmpxchg
ins
dec
jp
lea
sbb
mov
mov
dec
add
fwait
fs
(bad)
ins
xchg
cmp
in
pop
sbb
and
push
sbb
repnz
sub
pop
lds
in
jl
leave
push
mov
jne
stc
xchg
shl
sti
std
mov
inc
cmps
inc
xchg
outs
lahf
xchg
xor
add
push
cld
push
dec
jl
arpl
mov
call
leave
mov
sbb
out
jl
pop
xchg
dec
or
(bad)
fild
imul
xor
daa
jl
test
jns
shl
jl
out
push
fisubr
xor
rcl
(bad)
jnp
nop
mov
pop
and
jl
pop
aad
sbb
or
test
mov
cmp
jo
mov
ins
or
or
(bad)
mov
cmp
test
xor
push
sub
cdq
scas
mov
arpl
cmp
mov
mov
call
sbb
push
leave
push
jp
mov
cld
jmp
xor
fdivr
jl
push
(bad)
mov
imul
mov
ja
and
mov
mov
sbb
push
xchg
pusha
mov
cmps
push
lahf
ds
xor
mov
movs
in
cmp
fst
aam
mov
sub
jl
mov
adc
stos
jg
jno
adc
inc
and
jmp
shl
leave
sbb
add
jl
pop
cmp
(bad)
fstp
jl
push
jne
push
fcom
or
sar
and
mov
inc
imul
mov
or
jge
sub
pop
ss
std
xlat
jns
add
cmc
dec
and
sub
lods
adc
sbb
test
xor
int3
ins
jl
bound
dec
fld
inc
mov
inc
or
(bad)
pop
xchg
pop
inc
leave
push
out
jl
or
stc
sar
pop
adc
(bad)
in
jl
fsub
jge
fucomip
jl
int3
jno
(bad)
loopne
vmread
mov
jge
cdq
fwait
mov
sbb
outs
xchg
push
xor
jp
or
jns
jg
push
adc
fldlg2
mov
scas
xchg
jge
test
fstp
aam
xlat
jge
out
sub
into
stos
cmp
fdecstp
and
cmp
or
mov
push
pop
outs
fnsave
int3
cld
xchg
add
lods
leave
push
stc
push
push
icebp
mov
push
jle
out
stos
cld
jo
sub
jge
leave
xchg
dec
std
popf
adc
inc
sahf
inc
inc
in
jl
mov
and
(bad)
fxch
jl
cmc
mov
lock
mov
sti
sahf
les
inc
adc
addr16
jle
std
mov
and
cli
out
mov
enter
sbb
push
(bad)
lods
pushf
(bad)
cs
dec
sahf
cdq
and
cmps
inc
jl
ds
test
or
(bad)
rol
adc
sbb
mov
enter
push
aad
and
imul
or
lods
xchg
add
cld
jno
jmp
jl
(bad)
into
scas
movs
jle
and
ins
adc
pop
shl
dec
mov
lods
out
xchg
cld
scas
test
pop
inc
aam
cld
mov
sbb
fimul
(bad)
rcr
jl
pop
jne
xchg
sbb
test
sahf
add
fdiv
pop
pop
outs
adc
mov
push
loop
jl
cld
cmp
and
stc
pop
mov
jl
cs
repz
int
mov
xchg
ins
jp
fcomp
jge
scas
pop
pop
adc
push
sbb
or
mov
jl
push
scas
mov
add
mov
jge
xchg
fs
jg
nop
mov
outs
push
push
iret
int
cmp
jl
rcr
inc
cmp
outs
ja
ds
mov
sbb
sahf
popa
jge
push
call
fstp
jmp
scas
pop
aam
and
retf
jnp
adc
dec
fwait
mov
sti
xchg
push
jae
cmp
inc
and
and
jle
sub
jl
or
or
cmp
or
imul
push
dec
jl
shr
pop
ins
ror
ja
adc
fsubr
pop
push
cwde
jb
cld
mov
lock
dec
or
jmp
xlat
jl
pusha
xchg
in
(bad)
test
pusha
mov
ret
fidivr
cld
and
jle
call
inc
fsub
dec
out
fimul
dec
push
pop
(bad)
sub
enter
jbe
rol
xor
stc
pop
inc
push
mov
imul
inc
shl
scas
jbe
jmp
(bad)
mov
ins
mov
adc
ficomp
jl
push
mov
ror
push
fdiv
jns
mov
in
jl
xor
jno
test
mov
ins
pop
lahf
dec
cmp
icebp
ret
ret
bound
xchg
dec
mov
(bad)
mov
lds
cmc
push
jbe
cld
aad
sub
rol
jno
pop
mov
and
pop
and
repz
mov
and
test
(bad)
or
push
jge
leave
or
cmps
lock
or
jl
fdivrp
jmp
jl
fld
call
cs
jns
cmc
push
fistp
or
and
dec
mov
push
inc
test
std
add
mov
sub
cli
rcl
jae
xor
fidivr
push
xchg
aam
loop
in
leave
hlt
jge
ret
(bad)
sub
nop
not
pop
and
mov
fld
sar
hlt
sub
out
or
adc
jl
pop
icebp
leave
push
pop
mov
rcl
out
mov
leave
jl
sub
(bad)
or
(bad)
retf
jne
mov
mov
ins
adc
cmp
(bad)
dec
ret
jmp
jno
repnz
into
in
jl
add
sar
adc
pop
xchg
cld
movs
jge
cmp
cmps
jl
cmps
mov
nop
adc
jl
push
and
jo
jl
cmp
dec
cdq
ffree
jl
(bad)
dec
cmp
jge
jb
das
pusha
jbe
jl
add
xchg
jmp
fdivr
into
cdq
dec
(bad)
(bad)
mov
and
popf
lds
pop
clc
popa
cmp
mov
loop
stos
cmp
loopne
xchg
outs
and
and
clc
out
xchg
jl
test
leave
mov
mov
jne
sahf
add
pop
mov
popa
cmp
add
jo
and
fimul
movs
mov
fstp
push
outs
scas
cmp
mov
mov
leave
mov
pop
or
sub
jl
sahf
mov
sub
jnp
jle
push
movs
jg
pop
sbb
cmp
jl
add
dec
into
mov
cli
inc
cmp
xor
nop
jl
retf
mov
jnp
and
ins
xlat
cs
mov
sub
push
sub
inc
xor
ror
jnp
fld
ss
ret
lea
cdq
outs
fsub
jns
jecxz
ja
mov
xchg
fs
leave
add
cmp
jp
(bad)
sbb
icebp
lods
rol
mov
btc
cmp
cdq
lods
int3
xchg
mov
add
jne
xor
cmp
or
xchg
cmp
jo
mov
fisttp
jl
rcr
jge
push
ins
clc
jl
xor
sbb
pop
in
jl
mov
pushf
(bad)
dec
jl
into
push
js
mov
pop
test
add
fidivr
sbb
inc
std
fst
jl
lea
popf
mov
jl
jle
xchg
or
cmps
mov
data16
fbstp
jl
clc
mov
fidivr
and
sbb
cmp
jnp
shr
mov
pop
jl
adc
jne
out
sbb
imul
jl
mov
lods
xchg
jl
ss
js
imul
jecxz
retf
data16
mov
mov
pop
stc
lods
pop
add
daa
fisubr
add
add
es
pop
add
cmp
in
mov
xchg
addr16
test
and
or
adc
addr16
mov
jl
mov
ror
cmp
mov
sbb
outs
push
cmp
pushf
push
dec
stos
jmp
out
into
jge
in
pop
mov
aad
dec
fcomi
sbb
cmp
mov
and
hlt
add
sar
mov
bnd
aad
cmp
or
add
jns
shl
push
pusha
mov
jl
sub
fwait
mov
jnp
fistp
or
dec
mov
nop
leave
int3
push
sub
jl
mov
dec
pop
jae
loop
xchg
cld
lahf
icebp
test
aad
xchg
or
xchg
and
jns
sub
movs
xor
aas
(bad)
sahf
fdiv
sub
loopne
mov
jl
mov
out
mov
popf
xchg
push
mov
cld
pop
out
cmp
imul
test
jl
fiadd
dec
xchg
inc
dec
jne
xchg
psraw
inc
add
jl
inc
mov
ret
mov
shr
and
jl
in
cmc
leave
pusha
not
arpl
js
repnz
jl
xor
enter
in
dec
mov
mov
ja
jmp
out
aas
mov
jp
shl
mov
push
sahf
lods
sar
mov
outs
rcl
lock
inc
(bad)
popa
retf
cmps
mov
xchg
into
jl
mov
repz
std
jg
sbb
nop
push
jl
xchg
pop
xor
mul
sahf
out
adc
inc
jl
mov
cmc
aad
rcl
add
lods
jp
retf
out
aad
fwait
mov
mov
cli
sar
adc
popf
outs
mov
inc
ja
pop
cld
cmp
jmp
xor
push
mov
sbb
jl
xor
jl
xor
lea
test
adc
test
or
xchg
adc
mov
or
lock
aam
sbb
enter
pop
hlt
loop
jb
fist
inc
mov
repz
xor
jl
lods
mov
ja
cdq
pop
or
jns
mov
jns
sbb
cld
adc
leave
cld
dec
mov
outs
jmp
lds
int3
leave
outs
xchg
cli
loop
pop
test
sahf
test
data16
sar
jl
jle
and
add
(bad)
push
sub
stos
xchg
jl
pushf
mov
loope
pop
mov
jmp
jnp
dec
inc
jns
ins
lods
clc
sub
ja
mov
and
push
cdq
call
mov
nop
sbb
data16
xor
adc
push
mov
dec
jns
fldenv
mov
lea
pusha
or
stos
sub
sar
(bad)
scas
jle
(bad)
out
cld
idiv
xor
in
sbb
mov
pop
call
mov
(bad)
cmc
jl
aam
out
fisub
fstp
into
scas
enter
ja
icebp
(bad)
pushf
imul
inc
ror
cwde
pop
leave
jnp
mov
test
ins
jl
test
(bad)
retf
mov
int3
into
jge
mov
int3
out
push
sub
scas
dec
int
xor
arpl
rcl
or
mov
jl
or
mov
push
stc
adc
(bad)
push
in
outs
mov
fstp
jl
push
pop
(bad)
aad
xchg
and
jle
popf
out
arpl
test
scas
jl
mov
mov
lds
pop
pop
cld
cld
pop
mov
adc
jl
mov
daa
popa
sahf
add
pop
mov
or
jl
ret
idiv
enter
jl
in
test
lods
jl
jnp
icebp
in
leave
pop
push
in
jl
nop
ins
iret
mov
mov
stos
hlt
jecxz
fstp
aad
jl
jge
xchg
mov
inc
jl
adc
mov
imul
test
rcl
dec
cmp
mov
pop
inc
stc
in
movs
and
mov
(bad)
loopne
inc
sti
or
cmp
fwait
mov
cwde
xchg
popa
icebp
jl
mov
lock
inc
fidivr
loop
mov
and
jl
int
imul
inc
jl
adc
cli
shl
jl
inc
pop
fcmovnb
and
xchg
in
fwait
push
gs
lock
add
ret
add
ja
and
cmp
mov
jl
pop
into
adc
or
xchg
leave
nop
mov
sub
int
sti
add
aas
jl
mov
pusha
pop
push
aad
pop
sub
neg
lods
adc
jge
jp
mov
pop
lahf
pop
sub
cli
xor
push
jge
out
pop
mov
xor
scas
sub
out
outs
pop
leave
jp
pushf
lahf
inc
sti
in
jl
fstp
add
nop
jp
aas
cmp
sub
int
pop
xor
sahf
jno
sbb
cwde
sbb
icebp
jl
into
or
adc
pop
jl
pop
mov
ror
xchg
push
jl
jno
xchg
test
sbb
cld
mov
lea
std
jp
jno
dec
fcomp
into
adc
pop
mov
aas
cdq
icebp
stos
jl
push
mov
fcmovbe
ret
fbld
jl
push
mov
xchg
rcr
int3
cdq
push
jl
dec
jmp
pop
ja
xor
and
fdivr
cmps
(bad)
outs
rcr
aaa
mov
int3
int
mov
popf
mov
and
sar
inc
mov
sbb
add
cmp
in
cmp
add
mov
lock
xchg
jmp
es
mov
jg
cdq
xchg
popa
movs
push
jns
ror
call
jle
jge
xor
repnz
xor
lahf
adc
test
xor
(bad)
or
mov
sub
push
sar
ins
popf
rol
or
push
cwde
ftst
fistp
icebp
aad
mov
pusha
mov
fnstenv
imul
std
loop
mov
jl
mov
pop
and
dec
jl
pop
ficom
jl
repnz
push
push
cmp
and
or
and
push
(bad)
jae
xor
jl
add
pmaxub
out
out
and
jge
cdq
ds
clc
(bad)
sbb
xlat
inc
jle
not
sub
inc
arpl
xor
xchg
pop
mov
jmp
dec
lock
(bad)
xor
rol
fldenv
jp
jo
pop
ins
or
mov
xor
sub
cmp
cmp
(bad)
aam
imul
or
jae
scas
outs
sbb
xor
xchg
icebp
push
mov
fdivr
div
cdq
(bad)
retf
stc
adc
fnstcw
cs
add
xchg
push
ss
or
retf
dec
push
cld
aad
dec
cmp
adc
int3
sti
adc
imul
pop
push
jl
add
sahf
pop
jl
jmp
cmp
in
push
enter
out
outs
push
mov
aaa
mov
jl
pop
cmc
push
mov
dec
not
js
sbb
and
cmp
push
add
test
adc
dec
ja
pop
aam
or
push
push
sub
adc
or
mov
mov
jl
pop
(bad)
stc
adc
jl
cmp
std
out
jp
ret
lods
xchg
cmp
pop
daa
ins
jge
inc
jl
fst
adc
cli
xchg
add
sub
and
aas
(bad)
ss
int3
mov
ficomp
sbb
push
test
mov
cdq
leave
sar
inc
iret
inc
or
cmp
mov
popf
cmp
cmp
add
mov
jecxz
mov
fiadd
leave
xchg
outs
dec
mov
mov
lahf
jl
push
push
bswap
xor
or
push
cld
adc
stc
sahf
call
mov
adc
adc
sbb
push
sbb
stc
jl
mov
ror
jmp
jp
or
test
jl
sub
push
jl
mov
gs
cli
mov
mov
mov
inc
ss
rcl
jmp
push
sahf
push
into
pop
add
cld
ins
sub
sbb
cmp
jne
sub
(bad)
dec
icebp
pop
idiv
leave
mov
jge
scas
ret
addr16
push
mov
jl
leave
and
aad
pop
mov
(bad)
pop
jl
aam
leave
sbb
push
pop
jl
or
fidivr
fs
push
js
fstp
xchg
in
ins
leave
mov
cwde
sar
or
mov
mov
sbb
int3
xchg
jno
inc
jl
ins
jmp
or
sbb
xor
cmc
jge
cld
mov
adc
cmp
mov
xchg
loopne
fldenv
xchg
arpl
cmps
mov
or
mov
jl
inc
dec
pop
pop
mov
cli
fidivr
sub
xor
jl
jo
xchg
jle
pop
and
data16
push
test
mov
icebp
mov
mov
lods
xor
fs
mov
(bad)
cmp
mov
(bad)
in
imul
or
cmp
inc
aad
sbb
clc
jge
add
fiadd
mov
pop
pop
frstor
sar
cli
adc
or
xor
cs
cmp
shl
icebp
push
cwde
out
xchg
sbb
xchg
or
mov
jo
push
fld
cli
xchg
lahf
xchg
iret
jl
push
sub
xchg
ror
dec
jne
mov
imul
sti
ins
shr
(bad)
fcomi
inc
pop
and
or
cmc
adc
mov
mov
into
dec
dec
fld
mov
cmp
aam
cmps
lods
cmp
dec
jge
leave
stc
inc
dec
icebp
pop
movs
jg
inc
mov
mov
jns
or
cmp
xchg
int
jb
(bad)
adc
push
loop
jg
pop
jl
scas
ins
sbb
js
jl
lahf
pop
mov
cld
shl
xchg
sbb
mov
jbe
pop
cs
xchg
jl
and
push
sbb
mov
or
sti
jl
repz
jge
mov
scas
mov
idiv
imul
aam
jge
push
xchg
push
fimul
pop
mov
jno
mov
ins
ss
stos
xor
icebp
int3
xor
xor
add
out
aaa
pop
cmp
adc
push
pushf
mov
jl
add
dec
imul
mov
aad
inc
mov
retf
add
daa
clc
mov
leave
push
mov
jl
mov
xchg
dec
movs
fisubr
stos
cwde
mov
push
adc
fdivr
shr
ss
jnp
retf
add
in
mov
or
in
jl
cmc
daa
mov
hlt
mov
inc
push
sbb
jg
jno
les
aaa
sub
call
or
jbe
ror
fbld
ror
jge
lods
cmp
pop
and
mov
fcomp
ds
and
jl
push
inc
in
xchg
mov
test
adc
js
cmp
test
jg
push
icebp
rcl
and
cmp
push
movs
mov
arpl
jl
(bad)
xlat
sar
xor
test
or
jns
pop
jl
ins
loop
sub
or
leave
ficom
aam
or
add
out
inc
push
jl
out
fld
aam
or
mov
in
neg
(bad)
or
add
pop
mov
mov
mov
cmp
lock
mov
repz
inc
dec
mov
imul
mov
sbb
jne
pop
push
pop
hlt
mov
adc
pop
xor
jp
addr16
inc
dec
xor
es
mov
or
add
mov
pop
cli
dec
or
jge
pop
jg
fist
jle
jge
cmp
ins
data16
xlat
push
mov
pop
(bad)
jnp
les
lds
mov
jb
jl
scas
xor
cdq
sub
ds
popf
jl
test
cmp
jne
sub
mov
mov
loop
ins
pop
leave
rcl
sub
loop
lahf
or
js
sahf
fwait
mov
pop
leave
or
pop
add
or
xchg
push
nop
in
fistp
add
pop
icebp
std
mov
push
jl
cmp
dec
jl
je
xchg
push
jnp
jl
mov
jge
sbb
aam
push
imul
mov
outs
ror
or
or
and
lds
nop
popa
push
pop
ins
add
movs
icebp
or
xchg
cld
retf
or
sbb
popf
leave
pop
or
fadd
xchg
mov
mov
xchg
inc
or
jl
dec
xchg
(bad)
popa
jne
movs
test
mov
and
pop
xchg
bnd
mov
retf
mov
test
add
push
std
push
push
mov
jne
xlat
jno
ror
pushf
addr16
in
out
jl
leave
xor
sbb
mov
mov
cmp
cdq
cwde
push
xchg
jb
push
jl
mov
sbb
mov
iret
cmc
ja
ret
inc
bswap
imul
push
mov
add
jl
fstp
xor
loope
cs
jmp
dec
movs
mov
jno
frndint
cmp
cmp
jl
test
jl
inc
adc
aam
jl
adc
xchg
mov
mov
jae
jnp
popa
mov
cwde
xor
jnp
inc
test
mov
lods
jecxz
in
xchg
sbb
ret
jl
sbb
push
fwait
push
xchg
bnd
lock
pop
cld
test
add
xor
(bad)
dec
push
retf
jl
cmps
imul
fucomip
add
mov
xor
fidivr
or
into
mov
daa
inc
mov
aaa
jb
sahf
add
(bad)
outs
pop
mov
mov
pop
sub
pushf
dec
in
loope
ret
into
add
adc
aam
out
lock
in
sbb
xor
outs
sti
dec
push
pop
push
pop
xchg
dec
scas
pop
or
jne
and
cs
sti
and
push
outs
js
sub
mov
pop
fs
sub
jecxz
fmul
jl
dec
div
mov
cmp
add
ret
cmps
or
bound
xchg
arpl
add
sbb
fsubr
cmp
mov
aaa
jl
ret
and
jl
loope
adc
add
outs
retf
stos
imul
popf
push
mov
jns
aad
cld
push
cmp
sbb
dec
cwde
mov
jmp
and
je
inc
xchg
pop
jl
pop
xchg
stc
aaa
push
loope
std
cwde
in
jmp
scas
inc
popa
jl
mov
fwait
movs
outs
and
pushf
sbb
jp
cld
dec
push
mov
jl
out
and
repz
and
add
jl
mov
pop
sbb
fadd
xchg
clc
test
aas
loope
push
fdivrp
jl
adc
outs
rcl
jns
jl
add
loope
bound
mov
sub
jle
mov
movs
jge
cmp
cmps
nop
mov
jnp
shr
jge
jno
push
mov
push
and
mov
mov
aas
push
dec
inc
aas
xor
cld
outs
mov
xchg
add
cld
mov
popf
retf
gs
mov
cmp
pop
pushf
add
lea
lods
sbb
xlat
(bad)
dec
das
inc
pop
dec
xor
movs
pushf
cmp
call
pop
adc
xor
mov
xchg
je
loope
enter
imul
jl
aaa
xchg
or
cld
jecxz
jl
out
icebp
fnsave
dec
and
fimul
pop
xchg
sub
int
sbb
fwait
adc
retf
call
jge
mov
cmp
cdq
cwde
dec
xor
mov
fld
lds
fsub
lea
loope
rol
fistp
jmp
sub
cld
push
adc
add
adc
push
mov
dec
int
pop
jbe
mov
sub
ins
mov
adc
ret
sub
or
jge
mov
stos
sbb
ret
(bad)
rcr
jge
inc
jl
out
sbb
fdivr
lea
jo
or
fwait
jl
movs
fs
fdivr
jl
add
mov
pop
jl
sbb
int3
loope
shl
mov
in
jg
pop
cmp
repz
xchg
pushf
cmp
std
and
jge
fisubr
push
idiv
adc
aad
outs
mov
iret
cmp
push
cli
addr16
jp
out
jecxz
ret
adc
out
jg
pop
push
mov
mov
stos
or
or
(bad)
jge
jl
jb
xlat
ret
mov
outs
in
xchg
es
sbb
pop
mov
mov
rcl
push
inc
scas
rcl
sub
inc
mov
push
hlt
jl
inc
test
mov
jl
mov
mov
push
sbb
dec
push
push
add
sbb
inc
ins
pop
mov
adc
outs
idiv
add
inc
mov
call
outs
test
or
dec
scas
in
pop
xor
cmp
mov
sub
shr
jl
loope
loop
jmp
std
add
jge
call
mov
es
call
jl
xchg
sbb
icebp
movs
outs
add
sub
ds
rol
adc
xchg
arpl
icebp
jae
push
out
mov
mov
cmps
aas
cdq
lahf
pop
dec
mov
lock
mov
sbb
jl
out
gs
popa
fdiv
pmulhw
call
mov
jns
add
and
jb
and
mov
ret
jle
cwde
icebp
ret
js
outs
retf
retf
and
test
mov
aad
js
mov
xor
and
dec
xlat
pushf
lods
fild
cmp
mov
cmp
xchg
pushf
sbb
jmp
repz
dec
es
out
fstp
int3
in
ja
dec
push
and
(bad)
fsub
cmp
cmp
push
pusha
jge
(bad)
loopne
pop
add
pop
cmp
lock
lods
mov
(bad)
push
(bad)
jo
cmp
mov
test
pop
popa
sbb
aad
fdivr
sahf
ins
jl
push
stos
xchg
cdq
jge
cld
jl
mov
fist
adc
fwait
sbb
shr
dec
lahf
cld
popa
std
inc
xor
mov
jge
fadd
pop
lock
ins
enter
pop
cmp
cmp
inc
jl
xor
fbld
ss
lds
push
jl
mov
iret
shl
sti
mov
jnp
dec
inc
nop
xchg
cld
stos
idiv
popa
dec
dec
xor
jl
cmp
cmp
mov
pop
mov
cwde
out
fs
jnp
jne
or
sub
repz
aam
mov
mov
mov
aam
add
ja
jmp
sub
mov
cld
out
lods
jp
sub
or
mov
add
mov
add
in
jg
lods
lds
ror
in
addr16
or
cwde
sub
and
rcl
jne
mov
pushf
or
sbb
movs
push
jl
jmp
and
outs
xor
lock
xor
add
gs
rcl
pop
jge
and
xlat
jp
sbb
test
cmp
lock
bound
out
pop
imul
cmp
mov
sub
sub
push
fldenv
cmp
(bad)
cmp
push
fcom
loop
or
jp
jo
inc
push
cmp
mov
outs
int
sbb
push
mov
mov
sbb
mov
fwait
bound
dec
mov
nop
jl
lea
(bad)
and
(bad)
loope
imul
call
shl
or
js
mov
sbb
or
rol
dec
(bad)
int3
ja
mov
enter
test
out
jl
cmps
sbb
jge
adc
repnz
(bad)
inc
(bad)
jl
cmp
ja
fiadd
jl
adc
sub
retf
fs
jae
fnstcw
cmp
jl
and
fsubrp
dec
mov
jl
or
loope
jge
push
add
adc
or
inc
xor
mov
jne
jp
cmp
cmp
cmp
cld
pusha
call
jl
push
out
pop
xor
jl
arpl
dec
sbb
push
jns
mov
out
fsubr
popf
pop
jl
mov
call
jl
mov
mov
jl
stos
jbe
fxch
ja
add
dec
shl
push
or
into
in
mov
push
in
pop
adc
movs
xor
push
xchg
scas
les
retf
idiv
fsub
xchg
jnp
jl
xchg
ficomp
(bad)
xchg
jl
and
rol
loope
mov
sbb
movs
jbe
test
iret
fs
lods
fidivr
outs
inc
popa
cmp
les
ret
fdivr
stc
pop
in
sbb
cmc
adc
and
imul
ins
inc
lods
test
ret
sar
adc
enter
les
sti
sbb
cmp
mov
nop
or
or
retf
or
loope
(bad)
mov
jo
add
fild
xchg
jnp
and
nop
into
xor
aam
sbb
stc
call
loope
jl
xchg
pop
cld
xchg
jl
mov
sbb
jl
mov
pusha
sidtd
mov
out
sub
adc
mov
cli
jl
imul
lds
xor
jl
or
jl
push
cmps
cmp
fsubr
or
outs
inc
sar
jnp
in
aas
jne
fs
mov
jae
icebp
dec
push
jl
sub
les
sbb
bound
sbb
and
cmp
cdq
xchg
jmp
or
mov
out
cmp
cwde
cmp
lock
out
and
ja
xor
inc
add
mov
mov
ret
and
add
(bad)
jno
add
lods
jl
std
add
xchg
mov
fsub
add
mov
int
xor
mov
jae
int
pcmpgtd
fs
aam
in
mov
fwait
add
jge
inc
pop
xchg
test
push
push
push
jnp
fldenv
retf
movs
scas
mov
cmp
xchg
in
and
mov
xlat
cmp
jecxz
sbb
(bad)
js
mov
sar
loopne
test
iret
ja
fisubr
mov
mov
cmp
jl
scas
jge
xlat
add
xchg
pop
jl
out
or
fld
arpl
jne
sub
dec
dec
cld
mov
adc
push
jg
out
jge
lock
test
inc
hlt
in
cld
xchg
test
jl
fisub
mov
mov
in
das
outs
or
lock
(bad)
jl
sti
cmp
pop
pop
pop
jns
popf
enter
loopne
or
sar
sbb
add
lds
and
jl
popf
(bad)
arpl
test
mov
aaa
jle
pusha
scas
mov
aam
and
out
cs
and
out
ins
sbb
push
jl
popf
jle
dec
xchg
ja
mov
adc
mov
pop
rcr
rol
pushf
lea
mov
addr16
ja
int
out
dec
jge
dec
shl
fistp
jmp
shr
inc
and
fstp
bound
mov
fdivr
xchg
and
push
inc
cmp
sbb
shl
test
mov
imul
std
xlat
jl
mov
inc
leave
jl
or
xchg
das
fcom
idiv
pop
ss
dec
jae
stos
sbb
ret
scas
jno
call
mov
les
cs
jl
outs
hlt
xchg
fiadd
jle
pop
inc
mov
out
jl
loope
repnz
cwde
push
cmp
jmp
lea
jl
rcl
ret
jne
inc
movs
idiv
retf
push
cmp
jl
mov
outs
mov
jmp
sbb
aam
(bad)
neg
ins
ja
ret
cmp
sbb
retf
lods
cmps
inc
ret
and
or
lods
loope
dec
inc
sub
sbb
dec
xor
adc
jno
sub
add
jmp
fdivr
jae
jle
mov
dec
js
inc
mov
mov
push
lds
ud1
pop
jbe
adc
push
(bad)
add
mov
shl
add
jl
inc
mov
mov
in
jae
popa
icebp
enter
pop
stc
les
mov
mov
jo
fs
mov
addr16
lods
cmp
or
push
adc
mov
stos
xor
iret
jl
out
repnz
jno
jo
outs
cmp
xchg
jmp
lods
add
outs
and
add
jge
(bad)
mov
in
mov
jnp
sbb
cmp
mov
jnp
jge
loop
xor
int
popa
fidivr
mov
addr16
outs
(bad)
mov
xor
sbb
call
movs
jl
test
xchg
jl
loope
(bad)
stc
push
or
jmp
imul
or
sbb
jl
hlt
popa
jnp
cmps
push
dec
jl
fcom
lahf
mov
nop
sar
stos
push
push
cmc
jl
bound
mov
jl
out
cli
cmps
into
hlt
data16
jns
ret
jbe
sbb
test
sbb
js
stc
and
push
test
pop
loope
cld
jbe
fwait
ins
aas
ds
rcl
push
sbb
pop
div
js
mov
hlt
test
cmps
add
data16
xchg
jl
push
or
jl
mov
imul
imul
cwde
jmp
dec
sbb
jl
mov
loopne
mov
fdivr
fst
push
push
icebp
loope
mov
ja
fild
sbb
jnp
jl
cmp
in
fwait
sbb
or
mov
imul
dec
xchg
jb
loop
pop
mov
sbb
adc
or
xchg
pusha
scas
xchg
pop
(bad)
jl
and
out
fidivr
sub
jl
xchg
into
cwde
and
jp
push
xor
jle
mov
not
ficom
dec
cld
sbb
jl
add
inc
mov
sahf
(bad)
(bad)
jge
arpl
pop
xchg
(bad)
cwde
rol
fsubr
fbld
mov
shl
jl
sahf
xchg
sti
mov
pushf
in
das
xor
xchg
daa
xor
fs
jnp
ins
iret
sub
or
sub
xchg
cmp
(bad)
adc
fwait
cmp
or
jae
(bad)
callw
pop
push
fsubr
loopne
ror
arpl
pop
fisub
ret
popa
movs
jecxz
add
test
outs
aad
lods
dec
cld
mov
xchg
xchg
loope
mov
sbb
jle
or
push
jl
mov
sub
adc
add
std
jp
fwait
pushf
dec
sbb
add
(bad)
push
clc
retf
xor
sub
dec
movs
cmp
mov
in
jno
and
cs
jecxz
sar
jl
jne
mov
loope
enter
mov
mov
mov
pop
jl
jp
dec
xlat
cli
and
push
div
popf
jl
test
add
sar
cmp
mov
cmc
fs
jl
and
jl
aaa
test
sar
sub
popf
and
jl
retf
arpl
pop
ins
pop
cmp
xchg
out
pop
pop
sub
into
adc
in
mov
jl
stc
mov
push
jns
aas
xchg
inc
je
loop
mov
outs
and
aaa
dec
pop
xor
jg
pop
jns
jb
mov
jno
popf
clc
sub
in
rcl
jl
out
cmps
xchg
repnz
cmp
cmp
ins
jl
add
pop
popf
dec
test
or
jne
push
mov
jl
cmp
xlat
jl
icebp
shr
jl
push
rcr
clc
sub
pop
loope
mov
push
ror
cmps
cmp
div
or
or
pop
loope
add
ret
lock
gs
cld
pop
call
xchg
mov
sbb
xor
push
jl
pushf
in
mov
imul
cmp
dec
inc
outs
(bad)
inc
jb
pop
xor
ja
ins
jl
dec
mov
movs
or
mov
sar
jmp
enter
push
imul
mov
sub
fst
jmp
mov
jl
pop
ins
dec
outs
loope
mov
sbb
or
fmul
mov
call
xor
mov
or
jb
jl
mov
mov
jp
or
jae
cmps
jl
lds
adc
cli
in
jecxz
push
retf
sub
push
jl
cmps
(bad)
cmp
pusha
stos
and
pop
cmp
adc
push
les
test
fstp
cmc
inc
sub
call
jl
inc
sub
mov
stos
jl
arpl
fst
pop
jge
je
(bad)
sbb
call
jge
jo
lock
mov
test
call
mov
pop
aam
mov
icebp
movs
fmul
popf
jmp
scas
jp
fucom
and
int
aam
sub
pop
dec
dec
rol
inc
jnp
inc
test
int
push
imul
iret
mov
outs
cld
add
sub
sbb
aaa
jge
(bad)
jecxz
out
in
cld
in
mov
cmp
xor
js
data16
mov
rol
test
ret
sbb
dec
cmp
es
mov
fnstsw
adc
shl
stos
nop
dec
cmp
push
mov
xor
jl
icebp
mov
mov
hlt
test
int
jae
test
jo
sbb
movs
jl
addr16
nop
fmul
jle
jl
or
loope
ins
cmc
(bad)
xor
pop
sbb
and
dec
mov
call
sbb
xchg
or
jge
or
enter
mov
popf
arpl
sub
adc
not
loop
jl
inc
jmp
sub
or
(bad)
sub
adc
xchg
loope
dec
jnp
push
mov
dec
cmp
icebp
xchg
dec
ja
sub
cmp
push
sbb
call
jl
retf
xor
ja
int3
daa
mov
lods
cwde
xchg
scas
neg
lods
sub
or
fadd
out
adc
loopne
outs
mov
(bad)
jl
punpckhdq
xor
mov
loop
inc
mov
jl
or
pop
jno
loopne
jl
cmps
loope
xor
jle
jl
inc
not
xlat
dec
dec
add
jmp
cmp
mov
loopne
sub
cwde
cmp
jl
(bad)
dec
cmps
sar
jmp
xchg
call
mov
mov
gs
pop
xor
ja
cmp
mov
imul
or
push
mov
call
in
lods
xor
nop
(bad)
icebp
jl
out
or
iret
mov
xchg
popa
inc
sbb
loope
ficomp
push
ret
inc
daa
repz
jp
sub
and
js
mov
mov
xor
and
sub
jnp
mov
loop
mov
jne
jns
jg
dec
and
fsubr
pop
fs
push
cmp
into
leave
addr16
int3
out
and
fcom
cdq
pushf
pop
rcl
jnp
rcr
(bad)
mov
jl
mov
sti
xor
fcomp
adc
dec
xor
loope
neg
clc
inc
inc
jno
cld
push
mov
cli
js
ret
arpl
dec
jmp
jbe
cmp
cwde
test
sub
jl
add
sahf
ds
ins
add
jl
pop
or
imul
inc
inc
ror
(bad)
jnp
and
call
movs
jo
lds
iret
jl
fistp
test
fcomip
es
xor
jl
pop
cmp
mov
push
in
dec
repz
loope
aam
aad
jl
and
sahf
pop
and
lahf
mov
fadd
ja
popa
and
fiadd
push
les
stc
cs
jl
lods
fwait
leave
xchg
jns
(bad)
in
jl
inc
imul
movs
mov
leave
scas
and
mov
or
and
add
mov
push
shl
inc
jl
xchg
sub
outs
inc
fcomp
js
mov
scas
mov
push
jl
dec
jmp
or
or
js
ss
imul
hlt
ins
sub
fs
fidivr
inc
cld
ror
movs
pop
jle
mov
dec
jl
repnz
test
ja
jns
cs
iret
cld
ficomp
cmps
popa
sti
sub
adc
jl
stos
faddp
jge
pop
inc
xor
sub
ja
push
gs
test
adc
es
jne
mov
or
pop
mov
ins
xchg
mov
inc
jmp
xor
mov
test
(bad)
cld
inc
cli
mov
add
push
xor
ins
das
or
mov
lahf
pop
popa
mov
pop
popf
pushf
inc
lods
jae
dec
pinsrw
inc
int3
std
loope
jl
xchg
repz
inc
fbstp
ja
mov
pop
stos
mov
les
jge
cli
mov
cwde
jge
jl
jno
mov
jl
jo
pushf
mov
enter
ds
jmp
loopne
jne
inc
mov
inc
pusha
jl
jo
jmp
clc
mov
jbe
ja
repz
mov
icebp
lds
fcomp
test
int
jl
jmp
jne
adc
cld
in
pop
dec
add
inc
faddp
pop
jecxz
aaa
out
push
in
pop
xor
jmp
scas
jl
adc
enter
lods
fdivr
mov
fwait
addr16
pop
pop
icebp
loop
gs
cld
push
fdivr
add
nop
in
lea
inc
daa
(bad)
ret
sub
hlt
adc
mov
loope
and
out
into
das
pop
fld
sbb
mov
jl
mov
sbb
jl
loope
cld
pop
mov
ins
jge
shl
jbe
mov
cwde
stc
push
mov
out
adc
call
sub
add
daa
sbb
xchg
popf
jl
push
pop
(bad)
call
inc
push
jl
jle
sub
and
dec
push
cmp
push
jl
mov
repz
les
mov
int3
jnp
outs
add
add
rol
jl
icebp
cmp
daa
sub
ficomp
jl
xor
xchg
sub
repz
inc
inc
mov
xchg
xor
clc
inc
cdq
mov
outs
inc
jb
push
pop
push
mov
sbb
movs
cmp
or
inc
rcr
xor
shr
dec
push
and
and
and
sbb
add
mov
mul
(bad)
jl
jmp
add
or
mov
mov
lds
stos
rcl
outs
jge
xor
inc
cmp
adc
xchg
inc
xchg
and
dec
mov
jo
jl
xor
mov
adc
icebp
clc
mov
pop
ret
sahf
pop
call
call
icebp
(bad)
les
jl
or
lods
ja
adc
fs
push
scas
ficom
xor
sub
fcmovu
dec
retw
mov
inc
movs
test
setle
cmc
les
push
mov
jmp
or
pop
push
dec
arpl
jnp
sbb
xor
jg
div
lock
sbb
xor
js
sub
(bad)
jl
push
push
cwde
cmps
leave
and
cs
fisub
outs
dec
js
fsub
jp
popa
ret
mov
push
cld
(bad)
sti
scas
xchg
aad
pop
retf
dec
fs
cwde
mul
add
jge
shr
sub
xchg
jp
cli
inc
int3
mov
pushf
mov
mov
xchg
out
add
aaa
lds
mov
inc
sub
loope
add
(bad)
retf
(bad)
jl
cmp
add
xchg
rcr
jbe
cmp
xor
mov
mov
xor
cmp
push
clc
je
jle
ret
(bad)
mov
(bad)
outs
push
push
ins
mov
rcr
ja
mov
cld
ror
jge
in
add
cmps
mov
cmp
and
fdivr
push
xchg
pop
add
xor
test
mov
dec
xchg
fimul
pop
mov
xlat
jl
sub
test
mov
pop
leave
fstp
(bad)
(bad)
test
fst
push
mov
stc
cmp
cmp
lock
sbb
loope
in
dec
test
inc
pusha
jl
fcom
addr16
popf
outs
jl
sub
cmps
out
outs
test
jl
push
out
repnz
fdivr
scas
rcl
jnp
push
ins
(bad)
in
aam
ss
jnp
repz
das
sbb
jbe
sar
call
nop
mov
pop
stos
jnp
cmps
mov
in
mov
mov
jb
ja
popf
retf
pop
sahf
mov
adc
or
fstp
inc
ss
rol
xchg
pop
popa
xchg
hlt
push
add
push
jl
adc
cmp
call
enter
(bad)
ja
es
mov
or
cli
inc
cmp
fsubr
adc
clc
fndisi(8087
popf
(bad)
loopne
shl
sub
push
mov
or
sbb
push
popa
sahf
jg
pop
adc
es
sub
(bad)
in
or
ficomp
(bad)
dec
jl
pop
push
inc
lods
call
jnp
int
ret
mov
mov
sbb
out
jge
jl
in
out
ficom
and
shr
dec
sbb
jns
sbb
sub
push
ja
aam
mov
mov
cdq
pop
out
cmp
clc
jl
mov
cmps
pop
push
popa
jno
xor
inc
xchg
fadd
int
cmp
inc
jl
sbb
cmp
cmp
cmc
mov
jl
loope
adc
pusha
pop
xor
or
in
ds
test
mov
cwde
xchg
sub
push
imul
pop
cli
push
xor
jl
cmp
sbb
push
cmps
iret
fs
lds
push
jae
mov
mov
or
(bad)
ds
jl
inc
ja
and
(bad)
int3
jl
rol
stos
inc
pop
frndint
stc
scas
mov
jl
movs
sbb
jle
dec
jl
mov
pop
shl
jl
outs
push
sbb
in
in
jl
mov
rol
inc
mov
add
sahf
jbe
xchg
mov
retf
or
xchg
push
mov
ja
sub
push
out
jl
inc
loop
xor
xor
or
or
pop
jl
mov
loope
jl
adc
sub
cmp
(bad)
icebp
fdivr
sub
and
outs
cld
and
outs
cmps
(bad)
in
pop
loop
out
test
jl
daa
dec
jmp
fidivr
xchg
jl
gs
mov
in
jb
outs
loope
pushf
mov
pushf
(bad)
or
jne
sahf
jne
cld
jae
mov
hlt
rcr
and
inc
adc
jge
sub
pop
and
dec
cwde
or
jle
(bad)
fcom
div
scas
jbe
inc
push
push
les
out
pop
arpl
inc
sub
icebp
outs
pop
nop
ja
jl
inc
cmp
(bad)
sbb
xchg
adc
mov
add
inc
repz
inc
or
xchg
jecxz
push
out
cld
mov
adc
(bad)
outs
pop
in
pop
pop
imul
cmp
dec
pop
push
push
fdivr
cmc
sub
cmp
shl
fstp
jl
add
sub
sahf
xor
push
adc
or
loope
daa
sbb
cld
pop
dec
sub
call
inc
mov
pusha
xchg
fmul
in
pop
jl
in
and
and
jmp
retf
dec
call
jnp
std
mov
mov
repz
pop
cld
mov
jl
outs
cmps
rol
test
clc
sub
push
loope
xchg
jl
outs
jnp
cs
mov
pop
xor
and
sub
pop
jp
adc
pushf
sub
popa
dec
fwait
(bad)
mov
imul
xor
lds
add
(bad)
repnz
fs
and
jne
xchg
test
outs
out
mov
mov
jmp
push
inc
add
loope
scas
dec
ins
and
push
mov
xchg
pop
jl
mov
fbld
xchg
sar
fdivr
mov
adc
pop
je
cmp
sub
fild
adc
push
sub
push
int3
xor
add
mov
or
ret
cwde
popa
in
mov
les
push
dec
fisub
add
xchg
adc
fmul
test
mov
ret
int
push
loope
and
addr16
jl
out
bound
and
cwde
shl
mov
xchg
mov
cmp
pop
mov
pop
jle
xor
(bad)
sbb
cs
stos
stos
and
pop
cdq
shl
add
and
adc
jl
mov
mov
loope
lods
or
sub
ficomp
xchg
lods
es
pop
jp
push
jl
pop
pop
add
push
mov
cdq
adc
cli
xlat
dec
jl
mov
xchg
sar
fwait
repz
add
push
mov
and
jl
imul
fcmovnbe
cmps
daa
or
mov
push
xor
fs
mov
inc
adc
and
cmps
gs
jge
mov
jae
fst
xchg
add
shl
mov
fsubr
sar
mov
adc
jl
fcomi
mov
cmp
adc
push
inc
clc
add
cmps
mov
iret
retf
out
sub
jmp
(bad)
dec
mov
sub
mov
loopne
or
imul
(bad)
pop
popa
push
aad
or
push
jle
outs
sub
mov
lea
jne
mov
call
mov
add
jns
jle
jmp
inc
lods
aam
in
and
and
scas
ret
jl
fiadd
das
jl
in
jnp
jecxz
mov
jmp
in
fsub
cmc
iret
jnp
int
mov
jbe
mov
enter
adc
add
jp
fldcw
cwde
icebp
and
cwde
in
clc
adc
(bad)
jl
cmp
xor
jl
stc
or
int3
enter
adc
loope
jno
inc
dec
cmp
jl
fucomip
mov
jl
mov
loope
jb
jl
dec
jge
das
fisub
dec
adc
jmp
jge
sbb
cwde
inc
retf
xchg
into
cmp
sar
xor
gs
sbb
inc
jl
rcl
or
jge
add
push
or
mov
call
jnp
pop
add
jle
test
pop
test
pop
push
ret
pushf
sti
loope
cld
or
aam
inc
jl
sbb
push
cdq
or
cld
xor
add
aas
xchg
jp
ret
pop
jne
mov
cwde
mov
fstp
outs
hlt
add
in
jns
sub
out
scas
mov
fsub
cmp
mov
xchg
cs
mov
sbb
es
loope
or
mov
repz
jl
shr
inc
adc
shl
push
cs
and
or
jl
sbb
mov
jl
gs
jmp
add
mov
icebp
shr
in
pop
jo
push
test
rcr
sbb
into
shl
sub
(bad)
sbb
xor
mov
push
and
dec
adc
jl
call
xchg
pop
cmp
jl
aam
xchg
and
jae
jp
xchg
std
ficomp
push
mov
(bad)
mov
and
jnp
xor
outs
not
inc
pop
repz
repnz
inc
sbb
aad
pop
pop
rcr
out
cmp
push
inc
xor
cld
mov
fwait
out
jmp
dec
lds
std
add
(bad)
jae
(bad)
jg
ins
inc
push
jl
pop
aad
dec
cld
fsubr
shl
addr16
push
xor
adc
pop
sahf
arpl
ret
ins
jl
aam
xor
sub
fdiv
sti
test
out
pop
lds
dec
inc
div
adc
add
or
arpl
cwde
popf
fs
cmp
inc
imul
test
aaa
inc
and
nop
add
cmc
loope
cmps
inc
fsubr
aam
push
pop
imul
ins
push
fs
popf
dec
jl
lahf
xchg
out
pop
mov
adc
outs
sub
mov
fisttp
jl
xor
mov
or
jl
bt
pop
ds
cwde
or
in
fidivr
pusha
mov
push
fwait
xchg
pop
int3
mov
in
jl
adc
push
dec
out
repz
or
shl
loope
jnp
and
adc
xchg
ret
cs
jl
popa
hlt
sub
add
jl
(bad)
mov
jl
pop
test
sub
leave
gs
js
bound
push
jge
mov
cld
xor
repnz
movs
sub
mov
shr
lea
stos
pop
loope
fadd
xchg
xor
daa
push
out
fisttp
popa
jmp
mov
mov
xchg
sar
enter
fmulp
pushf
test
adc
jb
push
mov
(bad)
jge
inc
pop
sahf
fadd
lds
(bad)
jnp
push
jo
mov
movs
jge
(bad)
mov
fdiv
inc
popf
pop
and
loopne
mov
ror
adc
xchg
test
add
in
test
(bad)
fs
cmp
adc
fsubr
dec
adc
fdivr
ror
mov
sahf
jge
popa
add
pop
in
jae
inc
shl
neg
stos
in
mov
mov
cwde
push
adc
ret
fstp
mov
sub
in
sbb
inc
jp
movs
mov
cs
data16
jl
enter
loopne
movs
inc
mov
les
cmp
cdq
std
test
jl
(bad)
ror
call
mov
mov
into
in
stos
in
jl
int3
mov
xchg
jo
cmp
jp
sbb
test
stos
outs
xor
sbb
pop
pop
jmp
mov
aam
fbstp
jl
push
fidivr
jl
push
imul
mov
lds
popa
rcr
xor
dec
jl
jnp
test
rcr
fs
std
int
add
mov
iret
jb
sub
sbb
pop
into
jl
mov
das
int3
jge
jecxz
push
(bad)
add
jge
nop
and
cwde
jmp
repz
mov
test
dec
icebp
sbb
loope
cmp
in
jmp
cli
imul
loop
lahf
cwde
sub
into
scas
repz
ror
js
or
shl
jl
les
sub
xchg
cmp
sbb
cwde
jns
jl
hlt
std
ins
sbb
fiadd
test
mov
sar
adc
aad
outs
mov
mov
mov
mov
pushf
add
push
jnp
inc
(bad)
loopne
ret
dec
xchg
ja
cmp
mov
loop
jecxz
mov
dec
jp
stc
sub
mov
xor
fisttp
shl
xor
and
in
test
popa
mov
sub
jl
jb
sub
jnp
push
jl
push
xor
jg
sbb
lods
out
(bad)
mov
sbb
repz
cdq
ror
jl
mov
jecxz
in
xor
or
mov
push
fcom
pop
shl
inc
in
push
pop
mul
sar
and
mov
jp
ja
push
sahf
xor
jle
jl
push
test
ret
in
jmp
sbb
mov
and
push
xchg
jl
pop
popa
mov
mov
jns
push
cmp
sar
mov
fmul
and
js
(bad)
dec
stos
(bad)
xor
jge
test
fimul
cmc
jl
inc
(bad)
stc
mov
xor
ins
lahf
inc
cmp
(bad)
xchg
inc
cmps
mov
inc
cli
cmp
jl
lods
mov
jl
pop
or
jnp
(bad)
ret
mov
test
ret
mov
les
aad
shl
mov
mov
jl
fsubr
mov
and
mul
sub
jl
dec
je
(bad)
(bad)
jbe
pop
outs
mov
jg
and
cmp
jp
icebp
inc
mov
sbb
fdivr
mov
and
jl
dec
ins
cmp
js
js
mov
mov
loop
fdivr
daa
cld
jl
pop
cmp
or
jl
push
dec
mov
jl
add
mov
jl
loope
ret
cmc
arpl
cld
test
shl
lds
popa
aaa
int3
pop
adc
jl
(bad)
sub
jl
aas
mov
jl
add
adc
xchg
mov
and
rcr
or
cmp
outs
xor
ds
outs
int
ret
(bad)
jl
and
xchg
cmps
pop
lods
or
cwde
in
xchg
mov
jnp
rol
into
ret
es
movs
pusha
sbb
and
push
(bad)
xchg
out
jp
(bad)
addr16
fstp
and
in
add
jmp
mov
dec
adc
fiadd
test
jl
test
mov
jl
(bad)
fsubr
in
imul
and
jl
lahf
in
fnstcw
xor
lea
jno
jp
lods
stos
xchg
push
loope
(bad)
fwait
movs
outs
aam
(bad)
sbb
sub
inc
jl
jmp
ja
mov
lds
lods
cli
idiv
or
mov
cmp
aam
mov
xor
inc
cmp
sub
jp
cmp
xlat
mov
movs
pushf
jl
mov
fsub
ins
jl
ja
stos
ret
or
mov
dec
mov
call
or
dec
outs
dec
fcom
imul
das
jl
push
jl
jmp
(bad)
or
push
pop
and
pop
bound
mov
xchg
inc
add
jl
leave
push
mov
jb
fsubr
jg
data16
and
in
(bad)
fnstsw
sub
push
pop
std
jl
das
adc
in
pusha
jl
out
mov
and
mov
jge
(bad)
outs
in
or
cmp
nop
jge
call
call
bound
jl
dec
hlt
xchg
mov
rcl
dec
(bad)
out
inc
push
sbb
adc
xor
ret
cwde
aam
jmp
fdiv
mov
xchg
movs
add
scas
adc
fdiv
out
and
mov
push
lahf
sti
pop
jl
fs
xor
cld
xchg
add
push
xlat
jecxz
pop
mov
jl
ins
jbe
or
iret
sub
jmp
jl
cmps
lea
and
jp
jl
sub
stos
mov
in
into
jl
fist
mov
jl
ins
mov
fistp
jmp
and
iret
jp
and
sbb
jns
ret
add
retf
jl
mov
push
outs
mov
xor
popa
pushf
icebp
std
jl
push
adc
cmc
inc
je
data16
sar
xchg
popa
jl
sub
fs
mov
jns
cld
adc
imul
ins
add
call
fstp
repz
loop
aas
jp
sbb
ins
stos
shl
pop
mov
aam
fsubr
loope
enter
sahf
dec
dec
xchg
mov
jmp
push
push
or
(bad)
mov
es
ja
pop
aas
outs
stc
in
xor
icebp
int
pop
mov
xor
test
cmp
adc
sub
in
cdq
pop
jl
out
add
daa
mov
or
pop
cmp
test
loope
cld
hlt
mov
sbb
push
fwait
mov
add
xchg
in
lea
(bad)
dec
jnp
out
shl
aas
in
fnsave
les
jl
and
(bad)
xor
push
xlat
or
popa
xchg
cmp
(bad)
das
inc
mov
cld
xor
jmp
add
add
pusha
popa
test
mov
push
(bad)
pop
jl
adc
lds
fcomip
cmp
jl
push
rol
dec
repnz
(bad)
outs
fsub
sub
jg
pushf
inc
xchg
(bad)
mov
dec
sub
and
imul
jl
xchg
push
and
fstp
js
outs
lods
dec
inc
add
mov
mov
jbe
inc
dec
jno
jmp
jnp
fidivr
adc
jmp
xchg
cmp
dec
mov
add
push
mov
jnp
xchg
add
movs
dec
daa
pshufw
add
fcomp
jl
les
xor
loope
inc
xchg
push
pop
dec
mov
(bad)
jge
dec
and
stos
mov
jge
addr16
ficom
jl
out
lock
sub
jl
sti
mov
sbb
popa
dec
cmp
nop
test
jns
dec
mov
ja
test
jl
push
xor
enter
add
cdq
or
fs
or
xor
xchg
lock
aaa
pop
jmp
jns
and
aam
pop
inc
cld
jl
add
shr
push
ins
mov
inc
cld
popf
xor
cld
xchg
push
jl
fcomp
xchg
mov
adc
jl
popa
fiadd
xchg
xor
(bad)
outs
movs
scas
fidiv
cmp
lds
jp
jmp
sbb
clc
and
cwde
ins
mov
enter
shl
pop
xchg
or
mov
add
jl
fidiv
in
push
in
adc
jl
xor
mov
jl
and
cmp
add
jmp
test
push
lea
adc
scas
xor
cs
mov
cmps
out
xchg
or
inc
jl
scas
imul
in
xor
sub
ja
aaa
sar
mov
lods
push
mov
mov
pop
out
stos
shl
test
shl
dec
cld
fs
ja
outs
adc
sbb
stc
out
ficomp
enter
repnz
mov
jl
fcomp
jl
in
push
jl
fsubr
inc
sbb
in
sar
xchg
cmp
cs
inc
movs
out
fwait
cld
xchg
mov
mov
pusha
(bad)
push
fs
outs
ja
inc
pop
jne
(bad)
sbb
jl
add
jae
outs
mov
into
add
neg
and
cmp
outs
add
repz
adc
icebp
jl
retf
mov
jne
mov
push
add
cmp
jo
cmps
inc
ins
jl
xor
fsubr
lds
jbe
call
jl
fsubr
jecxz
fimul
ins
pusha
fs
ret
xor
pop
clc
fs
or
rcl
jno
jl
adc
push
imul
dec
pop
xchg
fs
sub
shl
mov
shr
and
pop
adc
fdivr
rcr
or
jl
loope
push
out
cmp
data16
push
jmp
push
test
in
movs
(bad)
xor
scas
aas
retf
mov
out
jl
sar
xchg
int3
loope
jl
icebp
xchg
xor
leave
pusha
outs
in
jl
jo
inc
xchg
int
inc
arpl
cld
jbe
call
jge
mov
lods
add
jl
mov
xchg
scas
addr16
shr
sub
ds
jl
xchg
loope
mov
jne
jmp
test
cli
inc
inc
(bad)
cld
dec
out
mov
in
dec
mov
cmps
fstp
and
lahf
pop
loope
and
jl
mov
push
xchg
cmc
test
or
pushf
mov
addr16
jbe
retf
mov
pop
dec
xchg
jl
movs
stc
ret
mov
jp
cmp
jmp
(bad)
movs
imul
add
xchg
jl
sbb
outs
or
cmp
lahf
xor
popf
cmp
fs
inc
jns
push
cmps
pop
jl
in
adc
sub
push
sbb
outs
mov
scas
mov
ds
mov
fcmovu
jl
aas
fucom
mov
mov
xchg
out
pop
jne
dec
sub
add
outs
jl
adc
jge
adc
mov
sub
daa
or
xor
xchg
fsubr
cdq
retf
jb
shl
cmp
jbe
lds
or
mov
push
dec
outs
punpcklwd
sar
or
loope
jl
mov
lahf
cmc
mov
xor
jle
dec
jmp
test
jae
jmp
jl
call
jl
mov
ret
fiadd
popa
pop
fnstsw
mov
pop
loope
nop
xchg
cld
jl
sbb
fmul
daa
repz
sahf
mov
retf
das
adc
jl
mov
or
jl
xchg
loope
mov
outs
and
test
fisubr
in
pop
retf
jl
pop
loope
imul
lods
lods
(bad)
mov
jl
jge
repz
stos
loopne
outs
sar
out
xor
jns
ret
jo
mov
mov
aad
outs
mov
gs
pop
or
xchg
adc
and
sbb
and
jl
fisttp
retf
jl
lahf
rol
push
jl
loope
lock
test
sbb
adc
push
scas
jp
xchg
ins
imul
in
cs
outs
aad
push
js
aaa
stc
mov
adc
sti
jl
das
cmps
pop
add
dec
jl
cmp
not
loope
(bad)
jnp
in
retf
add
mov
inc
xor
in
sbb
xlat
jp
dec
jecxz
mov
les
jl
mov
xor
jl
inc
cmc
mov
or
sbb
ins
in
jl
popf
es
jns
xchg
xor
jl
arpl
adc
pop
jnp
mov
or
inc
sbb
dec
jl
cmp
pop
cmc
adc
jl
out
push
jp
add
repz
jb
ja
fwait
xchg
fidivr
mov
mov
leave
push
call
dec
jl
and
push
cli
sbb
fld
jl
neg
adc
jl
ins
fsubp
sbb
out
shr
xor
(bad)
ficomp
mov
xchg
adc
cmp
cmps
jle
cld
call
iret
push
pop
ins
jno
std
(bad)
pop
stos
or
arpl
aas
jmp
(bad)
fmul
outs
cmp
jg
cmps
jl
outs
popa
mov
mov
jge
daa
repnz
xchg
jp
pushf
std
pop
in
daa
cld
xor
jae
dec
pop
(bad)
es
xchg
inc
jl
mov
inc
xor
cmp
popa
scas
movs
ds
push
scas
mov
sbb
aas
(bad)
aas
std
daa
jp
sub
adc
add
aad
sbb
and
cmp
push
rcr
lds
mov
cdq
jl
(bad)
push
push
sub
mov
and
jae
push
gs
rol
push
shl
ret
cld
call
das
ret
shr
cmp
mov
jl
cmp
fdivr
sub
push
push
mov
das
ins
jl
push
pusha
push
cmc
stos
lds
sbb
and
sti
dec
inc
jl
loope
mov
mov
xor
popa
push
or
jl
pop
xchg
call
add
jl
mov
loope
jl
sbb
shl
lods
jge
dec
loop
jae
jl
enter
loope
ja
mov
mov
test
jns
mov
(bad)
jl
ret
movs
mov
sbb
mov
clc
mov
jl
outs
jmp
jp
daa
jnp
sub
cmc
jl
int
inc
data16
scas
xor
dec
jl
xor
xchg
xor
fiadd
in
and
mov
in
popa
in
mov
ins
sar
aaa
ds
adc
test
pop
or
out
pop
out
aad
cs
dec
sub
ja
xchg
sbb
push
xchg
push
jne
lahf
repnz
sbb
push
mov
push
or
test
shl
push
hlt
jl
sbb
ret
push
jl
cs
stc
fmul
mov
pushf
sbb
pop
loope
mov
(bad)
cmp
ins
out
in
jae
xchg
lods
cld
cmp
mov
mov
je
jo
jnp
mov
jge
lock
add
(bad)
push
jl
xchg
sbb
mov
ret
dec
inc
into
xor
sub
xlat
out
loop
mov
imul
mov
mov
aas
dec
out
retf
push
fild
jl
icebp
pop
inc
or
lock
loop
push
adc
jl
push
cdq
in
shr
jl
mov
sbb
test
jl
inc
cdq
rcl
jb
jl
cmp
movs
sbb
xor
retf
ja
xchg
jl
div
jmp
shr
int
(bad)
jmp
or
out
and
jl
push
and
stc
ret
in
call
sbb
mov
dec
add
pop
jmp
loop
jae
mov
outs
add
out
ds
dec
retf
inc
out
sbb
(bad)
push
sti
sub
std
dec
fs
jmp
xor
frstor
test
ror
out
fidiv
jns
pop
add
rcr
jl
sbb
jle
popa
dec
mov
lods
mov
or
fdivr
daa
scas
ret
loopne
add
lods
dec
jl
add
ret
iret
(bad)
xor
jmp
mov
jl
movups
push
mov
and
and
mov
fsubr
jl
push
xchg
dec
adc
cdq
std
jl
loope
add
and
jg
cld
imul
xchg
dec
xor
std
jl
mov
xchg
mov
je
retf
dec
leave
sar
jns
addr16
ja
js
movs
loope
lock
mov
nop
jl
and
pushf
push
ret
pop
jo
ja
xchg
dec
mov
cwde
sbb
jns
adc
repnz
cli
pop
mov
outs
lods
adc
popf
pop
ins
out
fwait
jno
(bad)
mov
aaa
mov
xchg
js
std
adc
inc
mov
data16
retf
dec
pushf
stos
ins
ja
inc
setge
jbe
push
sub
imul
les
jl
sub
xlat
outs
shl
and
daa
rcl
jl
dec
cld
jne
js
bound
jl
mov
or
mov
mov
ja
test
jnp
jbe
jp
jge
push
(bad)
and
icebp
retf
dec
call
and
mov
mov
push
sbb
mov
add
push
js
test
and
jl
fdiv
sbb
cld
clc
jl
test
les
fmulp
jns
arpl
(bad)
cmc
sbb
dec
pop
or
cmps
leave
repz
jl
xor
in
jb
fsubr
jmp
stos
inc
sub
push
lock
lds
pop
into
dec
jl
addr16
nop
cmps
mov
movs
jl
mov
shl
xor
stc
jl
int
popf
arpl
dec
pushf
ins
je
inc
lea
jp
call
int3
inc
pop
and
dec
les
xor
mov
xchg
dec
or
jl
push
es
pop
mov
bound
enter
imul
or
popa
sbb
out
mov
dec
and
sbb
retf
jne
xor
inc
cld
stc
ficom
jae
in
jbe
mov
pop
scas
add
out
ret
inc
pop
jnp
and
xor
mov
adc
fmulp
aad
loop
div
add
mov
pop
das
sbb
outs
mov
pusha
in
push
std
cld
iret
out
dec
cdq
sub
jge
les
sbb
push
dec
jl
inc
push
cmp
jl
xchg
popa
jge
adc
mov
scas
fdivr
dec
ja
jno
ins
adc
stc
out
xchg
mov
jl
shld
pop
and
cld
fiadd
pushf
jl
outs
sbb
lods
aam
pop
jl
movs
add
and
out
push
imul
pop
jne
jns
xor
adc
lods
pop
sbb
int
cmp
das
jbe
sbb
fwait
iret
es
movs
xchg
add
bnd
ja
mov
cld
adc
jbe
cmc
jl
and
sar
das
dec
or
mov
inc
ret
mov
jae
mov
jl
sbb
rcr
das
xchg
lahf
jge
push
nop
push
movs
sbb
push
jl
pop
jnp
adc
cmps
jl
jne
popa
hlt
mov
jl
icebp
shl
into
int3
push
outs
enter
fmul
jne
add
les
jmp
sbb
mov
mov
ins
popf
jo
jne
aaa
fdivr
mov
pop
jmp
bound
jl
push
arpl
shr
xor
sahf
lahf
adc
dec
pop
sub
sbb
and
jmp
sbb
outs
in
xchg
mov
es
pop
push
mov
cmp
popf
dec
mov
jns
stc
mov
fidivr
push
ret
push
nop
sahf
ret
into
cmps
in
push
mov
out
jno
push
daa
sbb
cmp
aas
aam
jge
add
cld
cld
aad
cmps
leave
cmps
or
dec
mov
stc
cld
psrld
dec
jl
ror
xchg
inc
or
fidivr
mov
pop
dec
add
cmp
cmp
and
push
outs
dec
cmps
(bad)
out
jmp
and
sbb
cmps
rcr
pop
xor
dec
inc
ds
mov
mov
mov
int3
pop
test
loope
dec
(bad)
in
rol
add
cmp
(bad)
sub
jno
hlt
cmp
(bad)
jge
sub
cwde
jecxz
js
cmp
xor
push
cmp
xor
addr16
outs
sub
pop
push
int3
ret
sub
ja
inc
jno
mov
sahf
icebp
xchg
test
es
xchg
rcr
and
jl
stc
sub
fimul
jl
cmp
pop
std
add
data16
arpl
jg
fnstcw
jl
mov
add
int3
mov
ficom
push
pop
or
mov
pushf
outs
mov
jge
js
int
fincstp
sbb
je
mov
jp
sti
sbb
pop
std
dec
fld
fnsave
xor
sub
mov
push
mov
jge
add
arpl
xchg
frstor
sar
stos
jne
and
mov
cmc
mov
lods
mov
int3
cld
ja
inc
sbb
in
retf
xchg
aad
rcr
add
jl
jp
movs
push
and
jno
adc
xor
mov
lds
fnop
dec
and
test
sub
cwde
icebp
or
jl
jns
mov
shl
loope
mov
imul
adc
push
jae
and
and
sti
pop
and
in
jmp
mov
mov
jmp
(bad)
xlat
loope
or
test
push
lahf
sbb
lods
dec
xor
push
ja
jnp
inc
jl
mov
cmps
loope
adc
push
mov
fcom
jl
(bad)
jno
push
js
jp
mov
xchg
or
and
outs
ja
movs
movs
(bad)
cmps
mov
jl
add
fcomp
mov
xor
sbb
movs
cmc
jl
(bad)
clc
xor
jl
pop
(bad)
gs
jl
mov
mov
inc
xchg
cmp
call
fs
jnp
mov
bound
jl
adc
jae
enter
jl
pop
test
xor
in
push
jp
mov
push
lods
xor
push
xlat
(bad)
push
sub
mov
les
pop
mov
out
jnp
and
mov
dec
add
mov
fcom
push
ins
dec
fmul
ret
jl
push
dec
ficom
in
dec
fs
add
fadd
mov
imul
pusha
push
(bad)
je
js
mov
lock
das
shl
gs
imul
pop
cld
int
inc
jmp
jl
fcomp
popa
push
movs
sub
scas
jo
call
std
or
jl
int3
fsubr
outs
adc
push
cmp
ja
out
jge
or
test
xchg
mov
jmp
aaa
xchg
pop
aam
iret
int
jecxz
push
xchg
mov
mov
mov
pop
js
xor
fmulp
pop
push
fstp
cmp
cmp
fld
xchg
jbe
out
inc
iret
push
jl
les
add
sub
mov
pop
out
in
jbe
jge
fdivr
test
stos
or
mov
inc
popa
retf
jl
mov
mov
scas
les
outs
or
xchg
cmps
jno
in
int3
test
push
and
int3
inc
sbb
cwde
push
mov
jl
enter
adc
dec
js
jecxz
mov
dec
into
jns
cmp
xchg
cld
sbb
stc
push
mov
in
lds
add
and
jnp
mov
mov
xchg
mov
adc
jnp
(bad)
idiv
mov
cmc
pop
fiadd
adc
sub
aad
push
cld
test
push
adc
sub
cwde
ds
popa
pusha
cmc
pop
loop
cmp
add
out
mov
dec
push
mov
es
ret
and
or
leave
sub
add
push
xchg
sbb
retf
test
jl
in
and
jl
movs
loopne
daa
jmp
cwde
inc
jl
cdq
fnclex
(bad)
jb
sbb
mov
(bad)
mov
or
loope
fcmovne
punpckhbw
clc
aam
jl
aad
inc
jno
add
sbb
xor
jg
adc
jl
outs
xor
shr
or
dec
xchg
jl
fucomip
rcr
add
push
jb
ficomp
cmp
sub
add
pop
jl
sub
pop
inc
mov
fbld
test
cmp
ins
iret
fcomp
(bad)
add
sbb
jge
jl
test
in
rol
mov
lock
sub
and
xchg
adc
(bad)
js
aam
lods
pop
mov
jl
scas
ficomp
mov
les
pop
mov
xchg
sbb
mov
inc
inc
mov
jl
movd
xchg
xor
jl
out
mov
ror
shr
or
in
pop
jo
std
mov
mov
mov
fs
test
dec
mov
pusha
adc
pop
and
xchg
push
in
xchg
pushf
iret
and
cs
(bad)
out
cmp
js
jno
dec
fst
sbb
dec
sti
xchg
movs
inc
sbb
push
mov
mov
jo
mov
dec
push
aad
sub
enter
sbb
inc
dec
jnp
or
arpl
jl
outs
nop
jne
in
mov
mov
pop
jbe
mov
movs
mov
and
stos
or
lds
ins
jns
hlt
fistp
xchg
cld
add
js
cmp
xchg
rcl
mov
cld
xor
jl
je
rol
pop
lds
(bad)
jl
retf
fadd
sub
jl
cwde
mov
sar
cmps
jl
sbb
fwait
jg
push
mov
jl
cs
add
out
out
call
and
imul
xchg
jg
sar
test
adc
je
push
jae
xlat
jl
repnz
inc
cmp
mov
jnp
imul
push
mov
cld
jmp
xor
pop
fiadd
jnp
mov
fdivr
xchg
sub
xchg
test
push
jp
outs
mov
cmps
dec
clc
cmp
pop
repnz
jl
into
xchg
pushf
cmp
dec
fstp
(bad)
sti
mov
lods
jl
(bad)
xchg
ins
sub
mov
jne
shl
out
daa
adc
gs
movs
xor
mov
mov
jns
movs
(bad)
clc
nop
mov
jl
enter
imul
fcomp
mov
daa
dec
frstor
and
out
pop
sahf
loope
jge
push
or
mov
jle
out
jp
xor
push
jae
cld
test
mov
sub
add
mov
adc
mov
mov
sar
xchg
adc
cmc
(bad)
cld
mov
clc
jmp
jl
xor
jne
nop
inc
pusha
je
call
push
pop
int3
test
inc
mov
mov
cmps
push
jne
mov
jge
cli
sbb
mov
jns
out
add
cmc
inc
ja
mov
stos
push
dec
icebp
scas
jge
jbe
iret
add
adc
xchg
jo
fcom
mov
pop
jmp
mov
aam
pop
jl
movs
sub
imul
out
add
jl
xor
fistp
and
js
push
sub
pop
fdiv
jo
int
cwde
mov
adc
call
dec
add
add
cli
pop
push
(bad)
out
and
push
cmp
ds
sar
sti
mov
pushf
sbb
jns
sbb
jl
jne
mov
sub
jg
loop
leave
popa
in
adc
fdiv
push
out
std
ficomp
pop
pop
nop
xchg
mov
push
sub
mov
mov
das
jl
ins
hlt
stos
repnz
pop
les
jge
into
push
cld
les
jnp
mov
je
(bad)
mov
dec
push
jl
or
in
inc
shr
jns
into
std
xchg
dec
inc
cmp
mov
in
scas
jl
fsub
sar
fld
fwait
test
ja
xchg
pop
mov
cmp
arpl
pop
outs
loopne
sub
cmp
sub
aam
or
js
inc
or
mov
outs
lahf
jge
(bad)
pop
ss
aas
xchg
pop
jne
mov
push
push
icebp
jecxz
sar
adc
inc
ja
in
call
inc
out
int3
mov
pop
movs
fdivr
fwait
jl
ficomp
aaa
xchg
sub
adc
imul
sub
popa
dec
jl
dec
jg
cmps
aam
fidivr
inc
sub
jl
cdq
pop
pop
loope
push
or
xchg
jle
iret
ja
neg
dec
jle
jge
xchg
cmc
add
xchg
pusha
mov
sub
sbb
pop
mov
fcom
xchg
fist
jg
add
jl
out
nop
cli
jne
imul
fiadd
xor
mov
push
jle
jmp
leave
jmp
pop
loope
jae
outs
cmp
mov
js
fnsave
jp
lods
shl
cmp
dec
out
jl
scas
retf
ja
loopne
daa
cdq
cld
xchg
cmp
(bad)
sbb
jl
into
ret
popa
leave
test
icebp
arpl
ins
jmp
jl
xchg
inc
ficomp
ins
sbb
mov
loope
and
mov
jl
adc
popa
std
jecxz
fcmovnu
call
jg
retf
jl
imul
pop
sub
ds
ins
push
xor
leave
jl
and
jbe
cmps
jl
or
js
xchg
inc
out
cld
add
mov
out
cmp
sbb
xchg
shl
or
in
inc
xor
xchg
dec
push
cdq
cld
outs
add
out
aad
or
jmp
call
dec
push
lock
enter
pushf
mov
aaa
sbb
shl
frndint
pop
sub
jl
inc
loope
inc
mov
add
mov
stos
popf
cli
std
push
ins
xchg
or
xor
int3
repz
(bad)
xor
mov
pop
jl
push
xor
cmp
hlt
pop
shl
dec
jne
ja
dec
jnp
add
rep
das
jns
sbb
fwait
jp
fadd
dec
pop
ins
adc
fcom
loope
cmps
and
xchg
cmp
in
pop
push
push
mov
aas
add
push
int3
stc
jl
cmps
lods
adc
mov
and
mov
ds
fdivr
jl
push
imul
icebp
shr
jae
mov
sar
xor
mov
jl
stos
in
into
fcmovnbe
jl
outs
fnsave
xchg
sub
pop
dec
and
loopne
xchg
or
and
stos
sbb
test
jl
inc
pop
in
adc
pushf
rcr
xor
ss
sbb
loope
pop
sub
sbb
sar
push
cmp
mov
jge
popf
and
jne
jl
(bad)
jecxz
(bad)
ja
cmps
ds
aad
imul
cmp
xor
dec
in
fstp
in
add
pop
lea
cmp
ins
movs
loope
scas
js
in
iret
add
push
pop
sub
add
mov
in
pop
in
outs
fdiv
movs
jl
mov
adc
jl
jae
sbb
jl
jo
sub
jl
mov
push
pusha
xlat
sar
popa
lods
data16
cwde
imul
add
ja
lock
push
jbe
cmps
test
leave
outs
sub
call
or
add
mov
jl
adc
xlat
int3
jb
mov
push
mov
cmc
inc
jo
rcl
mov
dec
idiv
pop
dec
retf
adc
les
aam
imul
add
jge
scas
or
cmp
out
or
clc
xor
jl
mov
xor
movs
pop
loope
shr
jg
pop
sar
fst
add
jl
scas
xor
dec
jl
xchg
mov
jp
inc
jmp
fidiv
cmp
push
adc
ds
aad
pusha
lds
cmp
pop
stos
mov
or
cmp
fucomi
inc
and
mov
out
rol
mov
jl
cmps
lahf
cmps
pop
jns
aaa
and
imul
jl
or
push
pop
mov
dec
xchg
repz
mov
inc
mov
cld
into
leave
fwait
jnp
and
xor
cmp
jl
cmc
push
and
ja
popa
xor
ret
loope
mov
shr
push
outs
jge
sbb
mov
add
jl
call
jl
sahf
cmp
ret
jl
xor
push
sub
in
aam
sub
mov
sub
repnz
lea
rol
mov
es
mov
aas
cld
mov
and
clc
icebp
stos
cmp
cmp
mov
bound
push
cld
jg
adc
(bad)
mov
in
lock
aad
idiv
daa
or
push
arpl
jb
or
mov
sbb
lds
loope
mov
mov
inc
cvtdq2ps
shl
inc
sub
(bad)
jp
call
or
int3
xor
jl
xlat
ins
mov
jl
dec
or
pop
jmp
jl
mov
cld
mov
rcl
fsubr
in
sub
cmp
mov
or
sar
out
pop
pushf
mov
adc
sub
repz
push
pop
xor
xchg
(bad)
push
and
jl
(bad)
adc
sbb
bnd
mov
sbb
aad
pop
jl
ja
pop
fdiv
pop
cmp
push
cld
int
mov
pop
std
(bad)
sar
xor
loopne
test
and
xchg
ficom
cmp
iret
push
hlt
aam
sub
les
xchg
mov
pop
retf
and
xor
outs
das
cmp
ins
or
std
stos
jb
adc
jg
inc
jl
fdiv
mov
imul
push
ja
add
push
adc
and
mov
aam
pop
js
cmp
jl
fld
sbb
es
sub
outs
pop
xor
xor
dec
jbe
jl
idiv
aam
add
les
add
jl
push
data16
sti
cmps
in
arpl
(bad)
addr16
jno
jl
add
ss
inc
mov
aaa
test
cwde
push
mov
inc
movs
and
cmp
mov
(bad)
add
or
xchg
fbstp
xchg
adc
jmp
fidiv
push
mov
jle
xor
je
jmp
sbb
ins
dec
pop
pop
mov
add
inc
jns
jl
shl
movs
and
xor
ds
jl
push
fild
jl
loope
inc
and
inc
inc
and
cld
sbb
shl
mov
jmp
push
adc
inc
fisub
mov
aas
jl
enter
(bad)
fmul
outs
xor
pop
nop
fsubr
mov
ja
loope
out
sar
xor
sub
jno
in
cmp
stos
daa
push
jl
icebp
xchg
mov
add
outs
or
mov
or
sbb
fild
jl
pop
xor
repz
add
lea
jns
ss
loopne
cld
adc
mov
xchg
je
inc
aam
jge
cmp
fadd
movs
pop
aad
adc
fwait
arpl
retf
imul
enter
adc
push
and
xor
or
dec
or
jge
mov
cmp
hlt
into
pop
push
js
idiv
mov
sbb
retf
int3
jae
cmp
outs
bound
mov
pop
sub
cmp
sub
mov
dec
popa
mov
adc
jl
fcmovnbe
pusha
hlt
mov
inc
sub
sbb
jge
das
iret
cmp
ss
push
pop
jl
mov
test
jo
jge
les
lahf
adc
dec
sbb
popa
and
aam
test
sti
out
pop
or
jl
mov
push
cmps
scas
jl
and
jl
mov
out
jne
inc
sbb
mul
jl
xchg
mov
pop
jl
aam
xchg
add
cld
mov
mov
and
mov
stos
xor
dec
dec
sub
jle
int
adc
xor
fild
dec
and
jp
fs
jecxz
cmp
and
ja
(bad)
fdiv
fsubr
in
popa
inc
jmp
jne
push
(bad)
aas
push
jl
adc
dec
pop
and
in
jb
lea
push
sub
xor
jl
nop
(bad)
pop
repz
jl
sti
rcl
or
xlat
pushf
jp
jmp
mov
leave
or
into
jo
xor
xchg
retf
ins
int3
clc
stc
add
jl
push
mov
test
imul
test
xchg
jl
jne
outs
sbb
scas
adc
jmp
add
mov
pop
add
fmul
in
xchg
and
jl
loope
in
push
cmp
inc
sub
cld
lock
cmp
pop
test
mov
cmp
mov
ja
mov
nop
mov
jecxz
push
lods
sbb
mov
cld
push
jne
pop
lods
adc
cmp
popa
in
test
xor
sbb
or
shr
cmp
cdq
call
mov
jnp
jle
dec
add
cmps
lds
pop
xchg
mov
inc
sahf
push
fwait
enter
mov
popa
cwde
and
js
mov
jle
out
ins
div
retf
jl
jmp
add
dec
test
jno
fidivr
neg
retfw
mov
in
sub
movs
dec
rcr
push
push
jl
xchg
ficomp
dec
dec
add
xor
or
jp
push
cmp
repz
pop
jne
imul
mov
jl
xchg
pop
xlat
lea
xchg
in
jl
scas
and
jmp
add
pop
fimul
sar
fistp
push
and
jl
mov
inc
ja
xchg
pop
jp
lods
push
bound
mov
jl
sub
cld
ja
sub
push
sub
data16
stos
outs
loope
movs
push
mov
dec
pop
nop
test
jnp
mov
push
movs
push
dec
mov
das
cld
adc
outs
addr16
pop
js
inc
fcomp
imul
xchg
jl
pmullw
adc
fmul
xor
xor
dec
repz
add
sbb
pop
cli
repnz
jl
mov
jl
mov
jne
fild
jae
aaa
xor
jl
mov
retf
loopne
ret
fild
and
jp
jge
loope
jl
in
popf
in
cmc
xchg
jl
mov
dec
adc
iret
fsubr
rol
js
jbe
test
push
push
jl
lds
rcl
movs
jl
adc
cmc
inc
jl
jns
cmps
xchg
ror
iret
jnp
push
fwait
je
dec
cli
sub
jl
mov
fdiv
out
icebp
ins
imul
(bad)
test
add
sbb
sub
outs
mov
cmp
out
pop
cmps
cld
fisubr
aad
aas
movs
push
in
test
jl
leave
rol
xchg
jl
mov
and
cli
dec
sub
or
sbb
mov
and
xor
mov
pop
xor
in
cmp
gs
aam
push
xor
in
jl
xor
popf
dec
jp
sbb
enter
or
cmp
mov
jmp
ss
sbb
mov
bound
push
dec
jl
cmp
ret
jl
mov
mov
jl
cmps
pusha
(bad)
popa
mov
ja
jns
mov
pop
imul
push
and
push
ret
lods
(bad)
jl
inc
fld
push
mov
icebp
push
fdivr
out
adc
retf
jl
jae
dec
jmp
mov
lods
inc
xchg
iret
ret
cld
inc
adc
dec
rcr
aad
jns
pop
or
mov
sbb
jp
inc
loope
pop
cdq
mov
adc
inc
dec
inc
iret
or
les
push
mov
lods
push
dec
aam
xchg
adc
push
mov
pop
sbb
or
pop
mov
idiv
stos
mov
xchg
jl
aam
(bad)
jge
fld
xor
and
call
retf
jo
cmp
jmp
sbb
adc
cmp
scas
pop
jl
fwait
out
add
clc
loope
mov
jae
xor
pop
jne
int
repz
clc
xchg
dec
jno
inc
outs
and
mov
iret
or
retf
or
dec
mov
fist
xlat
fisubr
add
loope
sar
sti
ds
lds
add
mov
ret
dec
mov
fwait
jl
pusha
in
movs
retf
dec
xor
jl
mov
(bad)
jecxz
loope
jge
retf
jns
test
adc
lods
cmp
mov
test
hlt
fsub
pop
inc
les
mov
sbb
xchg
sbb
out
stc
movs
add
or
into
pusha
jl
cld
movs
cmp
adc
mov
jb
mul
mov
push
pop
jecxz
jl
test
arpl
jg
ret
xchg
push
inc
jnp
out
sub
pop
das
mov
jne
ja
loop
jle
call
mov
mov
jnp
mov
movs
aas
mov
cdq
jmp
icebp
cmc
jecxz
push
sub
xor
pop
adc
cmp
in
inc
cs
dec
jg
daa
sbb
pushf
cld
(bad)
retf
xchg
push
jb
and
mov
fiadd
mov
or
sub
paddusb
shl
mov
mov
sbb
jl
dec
lahf
pusha
xor
jl
test
xchg
jl
fmul
xchg
jmp
add
(bad)
bound
nop
cmp
mov
and
fadd
mov
fistp
inc
rol
mov
loope
xchg
add
xor
test
repnz
outs
xor
or
jge
pop
in
dec
outs
(bad)
push
cld
ficomp
mov
and
mov
sbb
sar
sbb
cmp
mov
jmp
(bad)
in
xchg
mov
ret
push
add
or
cmps
jl
test
sar
jno
jae
cmp
dec
in
jle
sbb
xchg
imul
in
jge
rcl
jl
dec
scas
xchg
add
and
dec
add
jg
fsubr
or
fidiv
jl
push
icebp
mov
mov
push
and
cs
add
outs
lock
sar
fyl2xp1
mov
mov
jno
aas
sti
mov
pop
pop
push
stc
add
jl
loopne
ret
sub
jl
dec
push
shl
jmp
jl
ret
mov
shl
mov
jne
sbb
clc
pusha
fcom
dec
aaa
inc
inc
in
mov
sbb
sub
jge
outs
inc
push
sbb
retf
sbb
out
call
popf
sbb
sub
clc
jg
in
stc
adc
adc
scas
mov
push
sub
inc
in
xor
add
fiadd
jl
jnp
dec
outs
push
adc
push
jl
xchg
cwde
je
fnstsw
test
mov
jae
outs
mov
in
cld
sbb
push
add
mov
or
ret
jp
push
sbb
mov
mov
jnp
adc
mov
dec
jbe
sub
imul
bound
mov
mov
xchg
sar
aam
jg
xor
addr16
icebp
jl
inc
gs
cdq
jl
in
rcr
sahf
neg
xchg
xchg
dec
jl
jmp
outs
pop
ja
in
xor
popf
mov
sbb
sahf
pop
mov
(bad)
cmp
adc
mov
jecxz
pop
mov
pop
(bad)
dec
imul
jl
ins
mov
mov
dec
jmp
cmps
add
jmp
outs
mov
call
adc
add
fisub
imul
sub
or
lods
sub
jbe
ret
hlt
or
push
and
test
data16
adc
mov
add
jecxz
das
mov
dec
movs
mov
add
cmp
bound
fmul
mov
stc
jne
mov
icebp
mov
sub
push
sub
inc
int3
push
jl
xor
clc
mov
pop
dec
push
dec
sub
lahf
(bad)
fcomp
dec
push
leave
loopne
cmp
mov
mov
retf
call
ins
or
shl
rol
jnp
int3
add
ret
jl
out
fimul
dec
test
xchg
sub
jmp
(bad)
aam
xchg
or
lods
jl
cdq
stos
scas
xchg
out
loopne
test
mov
jl
adc
jnp
dec
das
aas
add
inc
stc
int
loope
sbb
and
xchg
popf
cmp
push
dec
jp
loop
cmp
outs
cmps
jnp
in
cld
xor
mov
mov
ror
push
ins
nop
inc
or
cmp
sub
jl
(bad)
popf
or
aam
cmps
das
cmps
fsub
shl
out
lahf
cld
outs
xchg
nop
outs
sbb
jnp
pop
mov
pop
cmps
mov
and
push
cmc
inc
pop
jl
dec
ret
jl
cmps
push
sti
popa
sbb
jmp
xor
sbb
jbe
cld
(bad)
xchg
cmp
ins
fild
in
outs
jb
dec
jl
jo
fcmovbe
mov
popa
outs
push
out
loope
jp
into
add
xchg
bound
pop
sub
push
jl
inc
sub
movs
dec
mov
loop
(bad)
por
mov
adc
imul
popa
fwait
es
sti
cmp
push
scas
fdiv
cwde
jl
pop
sub
(bad)
jmp
push
not
sub
mov
jl
retf
daa
call
lahf
leave
cmp
cdq
repnz
fwait
(bad)
mov
stos
jl
dec
clc
push
or
fdiv
mov
xor
(bad)
arpl
push
xchg
and
sahf
cwde
data16
nop
jo
neg
int
jl
dec
dec
jmp
jl
cld
add
arpl
mov
loope
iret
jbe
jnp
mov
repnz
data16
scas
mov
dec
dec
jne
sar
imul
push
push
data16
test
jmp
loope
inc
push
jge
sti
test
mov
lods
inc
adc
pop
add
rcl
mov
icebp
cmps
lds
(bad)
jl
sub
les
stos
je
fcmovne
ins
movs
fisubr
ret
pop
and
inc
jp
xchg
add
push
xor
rcl
xchg
sbb
sub
mov
fmul
dec
pop
jae
std
jl
dec
lea
xchg
imul
in
out
pop
loope
ins
xor
add
push
push
sub
jae
loope
std
out
cs
dec
mov
cmp
js
jl
stos
fst
jl
sub
pop
jl
mov
jmp
jl
sbb
adc
xchg
push
add
je
xchg
and
in
iret
pop
arpl
shr
xor
(bad)
fdivr
stos
rol
aaa
cld
dec
sbb
mov
mov
sub
push
lock
mov
hlt
xor
ins
call
fiadd
sbb
adc
sahf
sar
ret
pop
mov
dec
jl
jo
popa
je
out
les
jge
mov
jne
scas
inc
and
ret
sub
dec
sar
call
jle
je
pop
push
jl
lahf
addr16
xor
adc
jp
shl
pop
popa
jl
xchg
pop
sbb
call
inc
jl
push
popa
sub
mov
loope
aam
xlat
pop
xchg
enter
(bad)
out
addr16
cld
stc
and
bound
popa
imul
mov
jl
cmp
cmps
(bad)
jl
stos
mov
fidivr
test
in
jl
cmps
fadd
mov
stc
xchg
ret
gs
das
sub
sub
sbb
lahf
jne
dec
sbb
jl
das
repnz
imul
push
inc
jl
pushf
test
jae
adc
pusha
sti
(bad)
ins
jbe
dec
jl
push
outs
rcr
cmps
cld
add
xchg
cwde
jl
mov
jae
pop
sub
inc
ja
push
and
enter
imul
add
or
int3
inc
lods
pop
jns
ja
ins
jle
(bad)
int3
or
ret
inc
cmp
pop
xor
fcom
cmp
retf
cmc
mov
pop
outs
push
mov
cwde
mov
or
fisub
and
mov
mov
ja
xor
pushf
iret
jno
mov
sub
jl
call
pop
pusha
pop
xchg
popa
inc
(bad)
mov
cld
inc
mov
les
pop
stos
call
fmul
xor
in
std
sub
call
or
and
mov
stos
cmp
ror
int3
ss
inc
arpl
inc
push
leave
out
mov
aaa
mov
mov
inc
xor
inc
shl
in
mov
sub
nop
scas
call
mov
pop
pop
loope
xchg
sbb
xor
iret
push
icebp
das
fadd
mov
(bad)
jl
mov
sti
iret
dec
arpl
sub
rol
jp
lea
dec
push
inc
stc
in
jge
int3
cmc
or
(bad)
fistp
and
push
cmp
push
push
xchg
ret
mov
dec
adc
pop
mov
mov
pushf
push
fiadd
mov
jl
mov
loopne
jge
or
rcr
mov
hlt
(bad)
mov
inc
(bad)
cmp
cmp
jl
test
xchg
fiadd
mov
jno
lods
push
loope
mov
sbb
stos
xor
jl
xchg
popa
mov
pop
jge
hlt
jge
cmp
cmp
mov
mov
call
ds
inc
add
pop
pop
xchg
pop
xchg
js
cmp
sub
dec
loop
mov
jmp
pop
aas
retf
lds
mov
shr
pop
mov
stos
fdiv
cmp
cld
fld
outs
repz
pop
push
retf
sub
aad
in
jmp
cld
dec
out
fwait
cmc
fsub
mov
pop
jl
cmp
outs
mov
adc
(bad)
jl
jmp
cmp
push
cmovl
add
not
mov
dec
mov
in
push
jl
push
and
shr
xchg
loopne
jnp
push
xchg
dec
cld
or
xchg
jmp
add
pushf
mov
arpl
sub
(bad)
jl
pop
out
icebp
inc
jl
ins
(bad)
aaa
fbld
add
test
jl
repz
rol
outs
ds
scas
push
ss
cmp
inc
mov
jp
div
into
cmp
sbb
rcl
pop
int3
ins
mov
cmp
jo
rep
pop
sbb
inc
scas
sub
fnstcw
mov
or
jl
mov
inc
ret
mov
dec
inc
adc
out
mov
xor
loopne
lds
pop
and
(bad)
jl
outs
mov
push
add
int
add
dec
adc
std
fidivr
adc
sub
add
lock
fnstcw
push
hlt
ror
xchg
jae
mov
fsub
inc
push
or
js
jl
(bad)
fstp
dec
fisubr
mov
pop
std
mov
inc
inc
pop
jl
clc
inc
pop
ret
xor
leave
ja
and
pop
dec
or
xchg
jecxz
outs
push
jae
sbb
fist
sbb
cmp
and
jl
mov
sahf
ja
iret
fstp
lahf
sub
call
and
retf
xor
mov
popf
lds
bound
pop
rcr
jl
adc
data16
shl
shr
mov
xchg
add
xchg
loope
jge
dec
shl
pop
cli
cwde
push
ret
jbe
sbb
xor
sar
setnp
out
mov
jge
jmp
bound
mov
jl
(bad)
aam
add
mov
cld
sbb
ja
data16
shr
stos
fmulp
pop
jge
xlat
rol
test
push
(bad)
jnp
mov
jmp
movs
imul
ja
mov
mov
adc
popa
xor
daa
loope
jno
cmp
xchg
jl
lea
and
outs
push
scas
cmp
mov
sahf
mov
cmp
cli
call
inc
cmp
pushf
hlt
cmps
jl
lea
xchg
ss
jl
ror
out
xor
iret
cmp
mov
jl
call
int3
scas
jl
(bad)
outs
fwait
or
push
fdivr
enter
imul
call
repnz
mov
call
or
fisub
sar
sbb
mov
lds
push
sbb
mov
mov
mov
inc
mov
std
mov
inc
outs
fcmovnb
outs
fdiv
repnz
adc
mov
in
mov
xor
test
push
inc
das
cmp
mov
and
out
pop
mov
inc
inc
in
add
dec
outs
push
repz
ror
pop
or
outs
cmc
jl
fsubr
add
jae
sbb
xadd
xor
mov
js
add
push
popa
push
jo
outs
push
sbb
jmp
(bad)
xor
sbb
sub
cld
adc
push
clc
shr
xchg
jg
adc
mov
aaa
scas
loope
adc
outs
in
mov
cmc
pusha
jnp
iret
mov
in
cmp
cmc
add
ret
jp
fcmovnbe
mov
in
int3
mov
jo
fidivr
cmp
dec
mov
lods
in
loope
jl
test
je
ja
test
dec
ins
in
ss
in
sbb
push
movs
add
(bad)
(bad)
mov
push
pop
jl
outs
sbb
jl
loope
adc
clc
inc
sbb
into
adc
mov
mov
mov
dec
xor
ds
push
jl
cld
jns
fsubr
inc
jl
xchg
jg
aaa
loopne
int3
jge
movs
mov
or
push
push
call
arpl
inc
add
shr
(bad)
pop
lea
dec
out
push
ins
ror
sub
fcmovnu
dec
inc
jp
jl
call
fsubrp
jl
or
xor
in
jl
mov
xlat
aas
pop
mov
push
mov
or
jl
cmps
mov
mov
dec
add
jl
mov
mov
jnp
daa
sbb
jl
pop
mov
jb
add
xor
pusha
xchg
jl
or
inc
mov
cmp
and
xor
out
addr16
in
jl
and
inc
cmp
jl
bound
mul
in
jl
dec
iret
sbb
jmp
jge
int
je
add
sub
adc
pop
fstp
test
and
jl
shl
addr16
dec
out
xchg
xor
jl
mov
adc
jb
es
jns
push
jl
mov
cmc
xchg
out
fcomp
mov
aad
push
lods
adc
(bad)
xor
fcomp
aad
xchg
cmp
cs
or
int
aad
jge
jl
cmp
mov
jge
lahf
mov
mov
cmp
and
retf
jge
sub
cwde
int3
jg
push
cld
daa
std
xacquire
addr16
mov
lock
stc
mov
jl
push
cs
xchg
sbb
call
jne
and
ins
sar
ds
js
push
pop
fnstcw
jbe
jae
inc
(bad)
sti
cld
add
sbb
dec
cmp
imul
xchg
out
jl
popa
push
add
adc
jl
cdq
loope
cli
(bad)
ins
ds
push
push
fsubr
fs
jne
jne
int
adc
cmp
aaa
jl
shr
and
hlt
add
cmp
retf
outs
jb
and
sbb
mov
jo
pop
sub
cmp
rcr
mov
call
and
addr16
(bad)
test
mov
dec
ja
dec
cwde
stc
aaa
in
ret
jns
test
ins
jne
loopne
push
push
sar
fdivr
push
inc
mov
out
mov
gs
or
aad
jecxz
das
cli
jl
add
sub
shl
jl
add
xor
int3
xlat
jae
test
leave
in
loope
bound
or
mov
jp
cmp
cmp
stos
push
jl
push
dec
(bad)
xor
sbb
mov
inc
cmp
imul
loope
xchg
jl
jnp
(bad)
aas
cli
outs
jl
and
push
jl
mov
xor
bnd
cmp
push
pushf
jl
mov
xchg
lea
push
ss
jl
(bad)
shr
inc
inc
leave
paddb
in
mov
hlt
add
scas
nop
mov
aam
mov
and
pop
repnz
icebp
enter
imul
jl
mov
jl
inc
fst
inc
(bad)
fwait
jle
jl
pop
sbb
push
jne
and
jl
cmp
and
jl
pop
mov
mov
dec
mov
or
out
mov
jo
mov
jnp
leave
aaa
xor
jns
sub
fwait
les
mov
pop
jmp
sbb
jle
add
gs
shl
xchg
les
stos
push
push
pop
jl
push
in
lds
jae
call
or
call
test
cwde
sar
add
dec
mov
cmp
shl
mov
jg
adc
mov
scas
push
jl
fs
retf
aam
loopne
jl
call
add
mov
out
jae
jl
mov
scas
jbe
jnp
xchg
jl
fsub
adc
mov
popa
das
xor
iret
mov
lods
cld
je
pop
fidivr
jl
shl
fdiv
das
cmc
and
fnsave
mov
lods
imul
test
ret
jne
dec
(bad)
jnp
jbe
imul
ins
sbb
lahf
xor
xor
push
sub
fiadd
xor
lea
inc
jo
ja
into
mov
out
push
jl
sbb
fidivr
push
mov
jl
sub
cld
push
jl
cmps
xchg
push
dec
aam
jnp
mov
mov
bound
xor
cmp
es
popa
pop
dec
xchg
imul
lods
jl
xchg
loop
js
mov
sub
fdivr
cmp
inc
test
outs
iret
jl
or
mov
es
mov
sub
in
sub
xchg
push
retf
add
jl
fcom
(bad)
jnp
out
in
cmc
daa
jl
out
cmp
fadd
std
data16
popa
inc
jl
ds
or
cli
jl
or
mov
jp
hlt
movups
pop
mov
aaa
inc
cdq
push
mov
or
sbb
or
pop
xchg
repnz
jle
dec
xor
jl
ja
ret
dec
mov
popa
jl
call
loope
jp
mov
ja
pushf
outs
dec
outs
jl
ror
leave
inc
jmp
fist
retf
inc
sbb
xchg
push
mov
dec
sahf
js
xor
inc
mov
inc
jne
test
cld
cwde
push
mov
push
loopne
jl
pop
clc
and
leave
fcom
pop
(bad)
or
cmp
sbb
loop
jns
pop
dec
(bad)
or
xor
icebp
adc
int3
test
add
jl
imul
call
inc
icebp
aad
xor
push
sar
xchg
xchg
popf
mov
mov
fisubr
mov
sub
sar
cmp
out
jl
jae
ja
std
imul
leave
xchg
jg
adc
push
sar
xchg
push
jge
pop
xchg
lods
mov
pop
push
push
mov
jp
dec
cs
push
add
popf
jne
xor
jl
fldenv
or
mov
sti
cmc
cli
loope
pop
jnp
mov
dec
mov
mov
div
ja
hlt
dec
ror
jne
adc
rcr
cmps
ret
aam
(bad)
mov
or
mov
sub
add
jl
mov
jae
ficom
gs
add
popf
scas
sbb
in
test
mov
loope
seto
mov
jp
push
xchg
xor
daa
sbb
test
jp
lds
lea
mov
pop
xchg
push
mov
test
sub
jnp
retf
push
shl
movs
inc
fwait
addr16
nop
xor
push
cmp
in
push
test
out
jl
out
push
pop
mov
jl
and
jg
cmps
pushf
mov
sub
jl
mov
ret
outs
and
mov
dec
(bad)
mov
inc
mov
imul
jp
xchg
cmp
hlt
mov
ror
(bad)
jp
fcmovnb
imul
sar
sub
pop
jl
fmul
mov
push
cmps
mov
jae
mov
add
mov
repnz
leave
cmp
sbb
pushf
jp
je
lea
aam
sbb
(bad)
(bad)
mov
test
jnp
dec
push
lahf
cmp
out
mov
jne
mov
rcl
xor
sub
ja
jl
push
enter
cmp
dec
popa
retf
adc
fisttp
xor
push
add
(bad)
bound
pop
inc
push
cmp
push
adc
or
cmps
dec
shl
jnp
cli
cmp
fidiv
nop
popf
jb
pop
in
push
jns
inc
or
cmp
mov
adc
arpl
les
lahf
mov
loope
ins
cwde
ja
dec
sbb
das
in
frstor
scas
pusha
pushf
sbb
out
retf
mov
pop
inc
sahf
mov
les
sbb
push
outs
mov
fdiv
call
sbb
movs
cwde
jae
stos
cmp
int3
dec
out
pop
jge
mov
mov
stos
imul
fmul
and
push
adc
dec
sbb
fsub
scas
sub
inc
out
mov
mov
pop
cmps
sar
sbb
enter
(bad)
call
jl
push
int
shl
ss
cmp
mov
lds
inc
mov
das
and
mov
outs
pop
dec
adc
iret
fiadd
inc
mov
cld
in
call
popf
add
cmps
ret
mov
jb
cwde
jl
adc
push
sbb
outs
out
outs
nop
pushf
je
mov
or
das
mov
or
xor
jge
daa
inc
(bad)
sahf
sbb
data16
sti
scas
xchg
sub
xor
inc
xlat
sub
push
cld
pop
cmp
std
add
xchg
mov
sbb
inc
jns
fucomi
mov
call
pop
sub
jl
xchg
add
ret
pop
rcl
mov
sub
test
xor
loop
dec
cmp
jmp
jl
lods
or
ss
sar
xor
mov
dec
jns
and
mov
mov
cwd
das
sub
jl
rcl
cmp
fsub
in
popa
jge
out
pop
cdq
add
cmp
in
jl
sar
movs
jecxz
add
add
push
ficom
jp
mov
in
loope
push
jnp
rcr
or
jne
imul
sar
dec
and
loop
xor
xor
aam
test
lds
(bad)
jmp
sti
in
cs
jnp
(bad)
inc
jmp
jecxz
inc
leave
adc
fistp
push
mov
jl
inc
repz
inc
xor
popa
or
test
fdiv
jl
(bad)
das
cmp
pop
jnp
lock
cmp
adc
xchg
xor
imul
mov
data16
lods
jp
(bad)
(bad)
xchg
sub
scas
xor
cld
loopne
jl
lahf
and
movs
cmp
jl
jg
ret
int3
inc
mov
not
sahf
jge
sbb
test
sbb
rcl
and
jl
lds
fwait
gs
dec
mov
fdiv
addr16
jl
jno
lock
jl
ds
mov
push
mov
test
push
mov
mov
cmps
pop
cs
ja
inc
add
dec
ins
(bad)
sub
xchg
mov
imul
sti
(bad)
jl
sahf
pop
dec
test
dec
jmp
bound
jl
cmp
cmp
ds
int3
je
enter
rol
mov
mov
jne
jno
inc
mov
aaa
sub
(bad)
mov
arpl
jle
test
lds
ins
jl
rol
fcomp
xchg
push
mov
pop
cwde
mov
adc
fst
sar
loop
daa
push
inc
xor
fidiv
addr16
lds
je
dec
mov
jecxz
inc
push
cwde
sti
mov
jge
loope
sahf
js
(bad)
fwait
bound
sbb
pop
or
push
push
call
std
daa
fiadd
(bad)
stos
sbb
add
xor
cwde
jg
popa
ds
mov
add
jl
or
xchg
out
or
jo
bound
loope
ins
jmp
or
mov
outs
jmp
jne
pop
jl
cmp
jmp
sbb
test
xor
xchg
jl
and
rol
inc
outs
pop
cdq
sub
movs
mov
sbb
add
inc
cmp
cmp
dec
jl
(bad)
lods
mov
ret
sub
jl
rcr
and
in
imul
dec
jl
mov
and
mov
out
jl
mov
jl
imul
imul
dec
out
sub
(bad)
jl
mov
lds
jl
mov
adc
push
dec
les
jl
ficom
jae
pop
sbb
add
int
pop
jge
jl
mov
outs
mov
adc
jl
out
popa
cmp
scas
test
arpl
push
jl
pop
das
mov
fsub
add
aad
mov
ret
std
xchg
xor
ins
xchg
add
xor
cmp
pop
test
call
pusha
outs
or
push
mov
stc
dec
int3
jmp
pushf
pop
(bad)
fisttp
jo
aam
mov
data16
jmp
es
push
aam
jns
ret
movs
test
jl
(bad)
jg
push
pop
sub
in
(bad)
cld
sti
pop
stos
jl
fidiv
xor
imul
jl
jae
fadd
fadd
mov
jl
pop
jg
inc
and
outs
icebp
add
les
js
rcl
xor
jne
jne
ds
pop
mov
mov
addr16
or
jg
pusha
(bad)
jl
ret
sbb
jl
pop
xchg
sbb
ja
(bad)
(bad)
cld
add
jnp
aas
inc
push
push
je
cmp
jge
xor
scas
hlt
inc
or
cmc
jge
sbb
or
xchg
cli
mov
cmp
mov
stc
test
push
in
add
adc
jl
repnz
out
dec
movs
imul
bound
xchg
sbb
xor
mov
push
ins
in
into
imul
xchg
add
add
xchg
pop
jle
repnz
cld
cmp
push
xchg
dec
iret
pop
sub
mov
jns
jne
xor
bound
push
push
ret
add
jge
(bad)
es
test
aas
dec
mov
out
cld
icebp
rcl
mov
xchg
push
ret
ds
push
mov
cld
ficom
sar
out
jl
out
pop
xor
jmp
mov
inc
shl
add
jl
mov
in
sbb
cmp
in
cmc
loope
jl
arpl
movnti
jl
sar
inc
cld
scas
jl
mov
and
jp
sub
nop
stos
jp
jle
push
fcomip
pushf
push
adc
ret
jmp
add
or
mov
sub
jl
dec
pop
fnstsw
nop
and
fucomip
aam
rcr
xchg
ror
call
xor
cmps
in
jl
test
test
push
ficomp
cmc
(bad)
mov
cli
aas
inc
lock
inc
sbb
xchg
mov
into
add
mov
cmps
dec
shr
scas
(bad)
sbb
fisub
loopne
cmp
loope
inc
push
xchg
fcmovu
pop
mov
ret
sub
sbb
jl
in
aad
lahf
jl
sahf
fidiv
rcl
mov
push
mov
loopne
sub
add
dec
dec
aad
test
jne
add
test
jl
adc
jge
xor
mov
out
jp
mov
xchg
add
cs
cmp
test
js
jge
jmp
sub
add
mov
and
adc
push
outs
mov
(bad)
mov
add
ins
jl
cli
faddp
iret
adc
fs
jne
xchg
add
mov
jl
adc
aas
add
nop
inc
ins
xor
jl
daa
jmp
popf
cdq
mov
gs
(bad)
outs
sub
aam
mov
jl
mov
xor
and
jmp
cmps
jl
dec
fisubr
jnp
or
xchg
jns
cld
push
inc
sar
ja
sti
fwait
popa
pop
out
jl
fcomip
in
ja
(bad)
movs
sbb
pushf
xchg
imul
stos
jl
inc
and
xchg
mov
add
arpl
test
ficom
or
xlat
jl
movs
xor
jl
popa
pushf
outs
bound
or
daa
mov
mov
inc
jnp
cmp
mov
mov
fdivr
jl
jno
sti
adc
pop
ror
xchg
inc
and
fs
test
xor
push
mov
sbb
mov
and
jns
xchg
mov
or
out
cld
dec
inc
push
(bad)
rcl
xor
cmp
jmp
mov
pop
mov
daa
popa
ja
add
sar
inc
xor
loopne
jp
retf
push
push
pop
cmp
lods
dec
ja
repnz
in
pop
(bad)
hlt
xchg
jl
pop
loopne
cmps
rcl
cmp
ret
ins
sbb
jmp
mov
out
idiv
inc
pop
mov
pop
stc
jl
fbld
adc
xchg
xor
(bad)
jl
adc
dec
fstp
mov
jl
test
fdiv
das
js
cmp
retf
jns
sbb
cdq
inc
pop
jle
pop
aas
adc
inc
arpl
sub
sahf
cmp
sbb
mov
cmps
nop
int3
imul
mov
jl
lods
cli
jbe
or
outs
xchg
mov
jge
and
or
jmp
sub
pop
ror
inc
mov
test
jne
and
loope
pop
sbb
dec
pop
push
xchg
jnp
lock
sub
je
mov
dec
jl
dec
rcr
iret
inc
and
add
in
jge
jne
jp
std
rcr
lods
in
repnz
fcomip
jl
pop
mov
lods
and
jl
or
jb
test
push
ret
loop
inc
shr
or
cli
mov
adc
xchg
leave
mov
lahf
std
stos
cld
jge
fimul
lock
push
fwait
jp
pop
or
sar
dec
std
inc
jno
(bad)
cld
into
mov
fiadd
sub
adc
xor
icebp
jecxz
cld
jge
loope
fs
sbb
xchg
mov
jge
test
mov
mov
js
int
push
(bad)
call
shl
pop
fcom
pop
xor
push
jl
ror
std
sub
inc
es
push
jge
loope
dec
cs
jmp
sub
fmul
jo
xchg
mov
fdivr
aas
sar
xchg
jnp
jbe
mov
fist
pop
vphaddubq
in
test
(bad)
in
fstp
fwait
scas
cdq
adc
(bad)
cld
sahf
xor
add
sbb
repz
inc
or
mov
push
retf
sub
ror
(bad)
cmp
mov
stos
and
test
xor
jl
push
scas
aas
neg
and
dec
cld
or
repz
add
jb
aam
out
(bad)
sub
mov
in
xor
adc
(bad)
or
int3
xchg
call
repz
xchg
push
xor
jl
mov
jl
inc
faddp
leave
pop
mov
pop
push
retf
xchg
jl
es
pop
mov
cdq
lahf
pop
lea
add
retf
scas
in
into
fsub
loopne
mov
lods
ja
fcmovbe
sub
leave
inc
adc
jns
fucomp
in
xchg
cld
retf
push
mov
cld
and
int3
adc
fdivr
stc
data16
shl
jg
inc
pop
jb
mov
inc
mov
retf
dec
push
or
jnp
xchg
push
shl
mov
imul
jl
and
jne
fnstenv
jl
frstor
mov
lds
sti
add
pop
das
pop
ret
jl
es
dec
sbb
clc
adc
pop
je
inc
inc
aaa
movs
cld
cli
mov
(bad)
lds
lods
jne
ret
lods
cdq
jl
xor
xchg
jge
arpl
scas
cld
sub
cmps
dec
inc
inc
mov
bound
mov
xrelease
mov
jb
xchg
loope
adc
push
shr
mov
adc
fucom
aaa
push
sbb
dec
psrlq
popf
pop
jl
inc
mov
loope
jns
and
rcl
fld
fwait
pop
pusha
adc
and
jb
jl
loope
data16
in
pop
and
int3
inc
jmp
add
mul
sub
adc
mov
fcmovu
dec
adc
(bad)
cmps
inc
mov
or
mov
jge
js
jmp
loop
cs
jbe
add
pushf
sbb
adc
in
xor
enter
stos
es
shl
xlat
leave
ins
xchg
pushf
push
fisub
inc
pop
loope
jp
ins
cmps
sbb
jle
idiv
adc
cmp
jno
hlt
jge
mov
inc
dec
stos
jl
icebp
fcom
jp
test
pop
jbe
sar
jp
fsub
popa
mov
movs
lods
adc
icebp
fimul
out
dec
ja
adc
or
jnp
or
mov
sbb
xchg
push
jl
lods
jle
cwde
outs
(bad)
push
stos
pop
(bad)
mov
iret
repnz
popf
in
adc
jl
aad
retf
push
jae
out
addr16
inc
mov
xchg
jl
pop
sbb
inc
out
add
cmp
sbb
cs
sbb
movs
jl
mov
rcl
aam
das
loop
mov
pusha
jl
mov
popa
lahf
jmp
inc
stos
jl
and
mov
add
cmp
push
inc
pop
or
nop
cmps
jl
mov
call
or
sahf
mov
stos
push
jl
fs
pop
and
xor
cdq
jl
sub
push
(bad)
jo
jb
mov
jl
fsubr
jno
xchg
cmp
fistp
mov
xlat
jl
out
cdq
imul
pop
loope
xor
xor
mov
mov
outs
mov
out
in
pop
jbe
je
jl
jno
mov
jl
add
jle
mov
in
mov
xchg
in
ret
cmc
ja
inc
ds
jl
fsub
jl
fldenv
ret
nop
jl
mov
mov
jl
in
sub
sbb
ficom
jl
fld
push
jnp
push
or
mov
mov
ja
xor
fs
dec
inc
les
push
ror
and
sbb
xchg
stc
dec
and
xchg
test
jl
cld
sub
mov
int3
cmp
ds
das
add
sbb
fadd
inc
sub
add
dec
jmp
jl
pop
or
scas
push
lods
sbb
xor
popf
retf
add
jmp
xchg
push
or
cmp
push
push
test
ds
loope
mov
lods
mov
xchg
sar
shl
push
js
jge
adc
push
inc
push
in
(bad)
mov
out
xchg
jl
mov
cmp
movs
rol
cdq
pop
sub
jl
scas
sahf
mov
jns
(bad)
lock
mov
pop
jne
cmp
sbb
cmp
mov
jmp
fdivr
jp
or
xor
jle
nop
pop
pop
mul
xchg
sbb
jmp
jmp
or
cld
jge
sub
xchg
pop
pop
movs
sbb
lock
and
in
rcr
leave
cmp
jnp
dec
cmp
fidiv
leave
ja
int3
ja
sar
out
adc
adc
xor
dec
dec
in
jl
pusha
push
xchg
in
push
pop
mov
lods
sbb
lods
jp
mov
dec
scas
cmp
and
sar
add
pop
jge
fimul
leave
ret
in
xchg
jbe
inc
stc
adc
jl
sahf
loope
push
xchg
shr
pop
push
mov
mov
and
sbb
jl
shr
jl
fdivr
cmp
jl
jmp
jo
popa
movs
xor
mov
nop
xchg
and
jl
cmp
(bad)
lds
or
ret
cmps
cmp
adc
jmp
movs
cmp
sti
jb
hlt
push
pop
ja
gs
mov
mov
test
pop
or
add
push
and
imul
scas
mov
aaa
push
sub
and
fcomp
pop
jl
mov
push
arpl
retf
mov
int3
bound
adc
inc
pop
popa
outs
and
or
shr
xchg
inc
ins
mov
mov
inc
je
in
fmul
lds
jb
mov
adc
in
mov
or
jl
or
imul
rcr
add
jl
ins
push
icebp
mov
cmp
and
push
imul
call
add
add
dec
mul
(bad)
jl
mov
inc
leave
in
jl
push
(bad)
inc
add
pusha
scas
mov
outs
mov
fisub
mov
mov
ja
loopne
stos
popa
in
pop
sbb
jnp
data16
gs
lock
or
out
js
push
shl
jl
or
sbb
push
bnd
mov
cmp
pop
nop
jl
and
retf
pusha
ss
cwde
cmp
mov
into
inc
sub
and
cld
rcr
add
inc
shl
iret
cwde
mov
dec
xchg
mov
cmp
outs
popa
enter
push
jl
test
pop
or
(bad)
mov
jl
fstp
sbb
mov
mov
dec
push
jnp
cmps
retf
mov
jae
ja
imul
fwait
jne
mov
mov
pop
cmps
outs
fdivr
test
mov
inc
rcr
mov
mov
dec
enter
test
das
xchg
into
cmps
pusha
add
sub
pop
mov
jge
add
jnp
les
inc
push
jno
lea
mov
push
pop
xor
pop
jl
rcl
or
in
jl
fmul
in
jl
int3
lldt
outs
jge
jl
and
mov
jl
ins
stc
jo
rcl
imul
jnp
aam
or
(bad)
in
add
cld
(bad)
mov
jl
xchg
(bad)
pop
mov
jge
jl
jnp
xchg
cwde
fcom
scas
jl
int
pop
push
jbe
in
loope
in
(bad)
mov
dec
jl
(bad)
cmps
jp
add
push
jp
in
into
sbb
cmc
or
ds
fistp
adc
or
sbb
dec
fidivr
nop
in
pop
adc
xchg
neg
nop
and
adc
push
test
out
jge
push
ja
cli
inc
or
enter
or
push
xchg
outs
xor
mov
jge
push
mov
pop
sbb
sbb
xchg
add
jge
in
ins
xor
xchg
pushf
mov
jnp
outs
(bad)
push
mov
jns
fisttp
add
retf
push
inc
std
add
je
adc
fdiv
push
mov
and
jl
sub
inc
dec
es
jne
and
sar
lods
pop
xor
int3
push
or
ror
inc
mov
sbb
mov
push
or
mov
mov
push
or
pushf
cli
shl
sbb
lods
jb
arpl
or
aad
xchg
mov
jae
sub
pop
shr
jl
pop
jae
dec
inc
cld
outs
jmp
in
xor
jl
fdivr
shl
jnp
jl
dec
push
pop
push
dec
and
xchg
add
sub
in
outs
jae
xor
cld
dec
pop
pop
fwait
sti
jl
inc
in
fadd
pop
fbstp
jp
out
cld
dec
add
cmp
jl
or
fstp
test
and
jbe
(bad)
arpl
lock
jp
or
aad
adc
cmc
cld
pop
outs
mov
jnp
loopne
dec
jl
mov
dec
scas
jl
or
mov
jno
int3
cmp
fcmovb
repnz
cwde
inc
and
enter
cmc
lock
add
mov
loope
sub
push
pop
xor
jl
sbb
lds
pop
std
mov
nop
data16
fcom
cmp
mov
and
mov
jmp
jl
cmc
(bad)
adc
(bad)
pop
dec
movs
and
lds
push
inc
cmp
or
leave
sti
fidiv
shr
pop
cld
xchg
dec
call
(bad)
dec
mov
push
add
outs
aaa
outs
cwde
sbb
out
jge
inc
in
fs
int
retf
jne
(bad)
fs
mov
jl
ja
mov
sti
ror
rol
out
jl
mov
hlt
mov
sbb
xchg
mov
mov
sub
xor
adc
xchg
fimul
dec
jl
jmp
cmps
cwde
(bad)
fidivr
jns
jnp
sar
push
sahf
mov
iret
xchg
cdq
cmps
mov
mov
retf
xor
jl
and
fcom
sbb
pop
add
loope
jl
fadd
(bad)
outs
sbb
sar
test
loope
fld
sub
or
mov
repnz
jnp
out
(bad)
sub
push
cld
fdivr
jecxz
add
xor
gs
mov
stos
jl
rcr
icebp
jl
stc
jne
gs
dec
jl
loope
in
push
cmps
mov
outs
mov
sbb
mov
jl
outs
push
lds
pushf
or
stos
sub
sahf
add
das
(bad)
fidivr
inc
psubsw
mov
aad
cmp
or
movs
jnp
leave
xor
iret
ja
mov
dec
enter
ret
imul
or
mov
out
adc
(bad)
push
cmp
pop
test
push
cmp
cmc
adc
sti
out
xchg
or
loope
shl
cmp
or
mov
jg
aas
fwait
cmp
fcmovu
mov
fnstenv
jl
in
sub
jl
cli
leave
cmp
push
mov
arpl
cld
jp
(bad)
push
pop
inc
test
cld
jno
jp
mov
push
add
cs
(bad)
lds
jl
imul
je
scas
repz
stos
js
(bad)
mov
pop
jge
js
pop
out
cmp
push
jo
sub
cmp
jmp
int
adc
leave
les
jl
std
jae
scas
neg
fidivr
mov
clc
(bad)
adc
mov
jns
adc
fmul
iret
push
jl
jbe
mov
ret
pop
cmp
add
inc
(bad)
jp
test
push
jecxz
(bad)
and
add
and
imul
lahf
scas
or
imul
ret
bound
std
sti
mov
in
(bad)
cmps
push
sbb
push
and
in
addr16
ret
rcl
push
or
cdq
clc
mov
cmps
lock
hlt
xchg
mov
ja
mov
mov
in
mov
ds
stc
pop
cdq
xchg
cld
push
push
js
push
sbb
xlat
mov
jl
ins
ss
fdivr
popa
push
outs
mov
push
mov
push
mov
jl
and
and
cmps
or
add
xor
xchg
sub
sub
push
(bad)
sbb
mov
lahf
dec
daa
mov
loope
addr16
jl
push
or
test
mov
(bad)
repz
jge
out
jb
icebp
add
jp
push
rcl
push
enter
mov
mov
jl
daa
pop
pop
jb
cmp
jl
cdq
and
(bad)
std
jp
in
jl
sub
push
sbb
aad
jl
or
xchg
pop
xor
(bad)
call
jo
jge
inc
scas
mov
int
jns
cli
loopne
in
jl
jle
out
idiv
fmul
dec
adc
jmp
jmp
mov
sbb
outs
inc
inc
mov
cwde
sbb
jnp
jns
ror
mov
stos
out
sub
dec
hlt
adc
xlat
std
xor
jb
add
jg
jle
and
mov
dec
cmp
jl
fsub
xchg
pop
add
and
push
fwait
lods
add
cmp
mov
jl
loopne
adc
movs
popa
jl
dec
fidivr
xchg
stc
ret
fdivr
push
inc
fwait
outs
vpackssdw
sbb
xchg
scas
xchg
jmp
xchg
jge
jl
hlt
and
(bad)
jl
push
sub
mov
jl
std
daa
or
data16
jl
jg
lahf
ficomp
push
jl
ja
cs
and
ficom
jl
cmp
cmc
out
shl
lea
xor
js
jge
cld
fld
movs
dec
mov
jp
cmp
cdq
and
mov
jbe
loopne
mov
pop
sub
cmp
and
fs
mov
jne
jmp
out
jl
fnsave
aaa
jl
pop
js
jnp
add
push
jl
sbb
ret
popf
ins
xchg
lock
and
cmp
fimul
adc
rcr
jns
scas
out
xor
mov
inc
mov
in
dec
or
push
dec
pop
arpl
fwait
cwde
jle
dec
jns
(bad)
jl
rcr
inc
js
push
xchg
int3
mov
jl
and
out
pop
test
jmp
sahf
lds
mov
fdiv
sbb
sbb
jp
ficom
adc
int3
jge
xor
dec
retf
xchg
test
xchg
imul
jl
cli
mov
jl
xor
mov
xor
in
pop
retf
jno
jl
jmp
shl
rol
xchg
mov
icebp
pop
(bad)
std
jl
pop
outs
mul
and
mov
lock
repnz
sub
ins
outs
jnp
fcomp
mov
dec
enter
jb
outs
inc
out
test
pop
shr
cmp
mov
fidiv
mov
jl
ja
loope
das
enter
shr
in
push
and
jl
lods
lods
adc
bound
(bad)
sbb
out
push
(bad)
fcom
test
xor
out
adc
add
xor
out
or
xlat
xchg
and
cld
adc
popf
mov
dec
jge
mov
jmp
faddp
jns
push
test
mov
pusha
ret
pop
popa
dec
lea
jp
mov
int3
movs
and
add
cld
push
fwait
das
inc
push
int
add
leave
dec
call
xchg
jl
out
mov
jnp
test
leave
int3
jno
(bad)
jge
jl
jecxz
loope
iret
dec
jl
imul
xor
aam
inc
lods
or
adc
jge
pop
ror
xchg
loope
jl
scas
and
out
cmps
jl
cwde
dec
leave
imul
sbb
jnp
movs
bound
mov
mov
ins
out
repz
not
jl
xchg
fadd
mov
mov
ins
jl
loope
push
popf
pop
cmc
xor
jge
xchg
ds
sbb
mov
mov
or
repz
cmp
jl
dec
ret
xor
and
inc
jl
mov
ja
call
mov
ds
nop
(bad)
(bad)
pop
das
pop
fdivr
or
dec
mov
push
adc
nop
add
pop
rcl
xchg
sbb
cmps
jl
stc
sbb
ficom
call
rcr
das
cld
dec
push
(bad)
xor
rol
jl
sbb
mov
sar
mov
mov
pop
pop
push
(bad)
sbb
ins
pop
loope
je
ja
aad
scas
sub
imul
dec
dec
outs
push
mov
pop
mov
ins
jmp
jae
cmps
or
xchg
test
and
rcl
push
retf
pop
jl
or
jno
outs
pop
dec
cs
and
in
inc
outs
out
outs
or
enter
cli
or
test
cmp
ss
jb
mov
jbe
shr
jns
mov
pop
jge
cmp
jns
jl
es
pop
scas
cmps
cmp
push
and
popf
hlt
jl
loope
dec
sbb
jle
stos
mov
mul
outs
ficomp
jl
add
xchg
jae
mov
jns
jbe
sub
hlt
pop
test
imul
pop
sahf
es
jl
xchg
ror
js
call
std
mov
pop
fsubr
push
sub
pusha
dec
ja
and
sbb
xchg
jl
xor
cmp
mov
pop
jl
pop
inc
jo
loope
inc
jl
(bad)
leave
out
or
dec
loopne
cwde
push
and
fidiv
cli
push
sar
jp
and
mov
not
and
das
(bad)
jns
and
ins
xchg
sub
xchg
outs
ror
std
pop
loope
arpl
outs
ss
(bad)
jl
cmp
xor
or
pop
test
xchg
jbe
popa
pop
jge
pop
push
or
cs
aaa
or
or
js
sub
xchg
int3
pop
jl
pop
xchg
jmp
cwde
push
jl
and
dec
loope
rcl
jae
fnstcw
pop
xlat
add
outs
test
pop
aad
leave
cli
sahf
pop
hlt
inc
arpl
pop
cmp
jnp
jne
jle
dec
xchg
les
sbb
aaa
rol
adc
or
stos
cli
sbb
inc
push
dec
pop
push
sub
popf
pusha
lock
int3
adc
shr
pop
es
or
dec
ins
jl
(bad)
shl
jb
fwait
idiv
outs
lds
loope
mov
cmps
push
pop
mov
lahf
mov
add
(bad)
jns
add
shl
std
ja
push
fimul
jl
shl
inc
add
cmps
jl
or
mov
push
and
push
js
add
rcr
push
test
jae
adc
fidivr
imul
(bad)
push
pop
test
stos
gs
push
jge
out
imul
cmp
mov
(bad)
cmp
inc
mov
mov
mov
pop
daa
shr
rcr
and
sub
cwde
gs
ins
adc
mov
(bad)
in
jnp
test
mov
in
bound
push
jl
outs
pushf
out
ins
stc
dec
lea
push
ss
cmp
pop
mov
add
mov
cmp
sbb
mov
xchg
lock
cmp
mov
mov
dec
add
mov
xchg
imul
xchg
inc
ror
inc
adc
jl
pop
sbb
jge
and
mov
stos
ret
and
or
jl
jae
fisubr
push
dec
in
das
fmul
inc
and
cmp
jl
adc
call
mov
xchg
sub
jl
push
or
add
icebp
jl
pusha
push
loope
popa
xor
pop
cmc
mov
cs
pop
sub
pop
mov
scas
pop
push
jno
fnsave
inc
call
dec
repz
stos
addr16
in
int3
and
mov
pop
pop
out
cmp
jmp
sbb
sub
fstp
lahf
loopne
jmp
cmc
or
in
jl
cmp
dec
jl
(bad)
adc
clc
jl
sti
pop
ins
pop
loope
std
jl
(bad)
mov
add
stos
inc
test
jns
ja
mov
sub
jl
fadd
call
jl
jecxz
aad
(bad)
in
jl
and
retf
add
jnp
mov
clc
lods
or
(bad)
rcl
dec
jge
test
in
mov
add
xchg
iret
push
mov
cld
dec
lahf
pushf
xor
nop
add
push
jecxz
jl
pop
pusha
shl
mov
test
jae
cmp
pop
ja
xchg
enter
inc
cmp
adc
push
and
xchg
push
sbb
sbb
cld
lock
sub
dec
sahf
mov
jp
clc
fwait
cmc
popf
mov
mov
call
jno
cld
add
push
test
pop
pop
and
dec
shr
sub
jp
add
cmp
pushf
adc
sar
mov
in
or
scas
jl
(bad)
mov
inc
(bad)
cmp
aas
repnz
inc
cld
inc
psubd
dec
mov
push
in
jge
inc
xchg
push
in
dec
or
(bad)
in
stos
in
cmp
jb
jl
aad
daa
mov
add
jbe
sub
call
sbb
cmps
xchg
mov
fistp
cmp
shl
add
fdivr
mov
sbb
mov
ja
sbb
xor
sbb
or
out
xchg
or
jecxz
ins
inc
push
jl
and
fcomp
sub
xchg
jl
mov
pop
gs
push
enter
or
adc
cmp
dec
jnp
jg
repz
add
test
cmp
adc
jl
loope
in
pop
add
adc
movs
bound
dec
jnp
fs
scas
out
cmp
ja
jbe
outs
sub
(bad)
push
mov
fistp
aam
cld
(bad)
movs
outs
cdq
or
jl
mov
ret
pop
add
jl
jo
cmp
sbb
xchg
popa
xchg
and
out
loope
mov
and
mov
ror
sti
jge
add
adc
mov
gs
das
stos
inc
lock
shl
xor
push
xchg
xlat
gs
xchg
cdq
js
push
cmps
cmps
push
mov
jae
fucomip
in
add
xor
hlt
(bad)
dec
std
mov
imul
scas
fdivr
(bad)
xlat
retf
dec
cmp
pop
cld
imul
jl
cmp
inc
imul
jl
xchg
and
arpl
int
jl
dec
cmc
xchg
jne
adc
scas
mov
daa
bound
shl
inc
jl
adc
retf
xchg
lahf
xchg
ins
jl
mov
in
xchg
xor
push
jl
ret
mov
in
dec
mov
adc
xor
xor
jl
ret
dec
loope
cmp
cwde
pusha
pushf
or
in
and
push
outs
fwait
dec
rol
jl
out
vpmaxub
outs
push
adc
mov
int3
loope
and
lahf
cli
sbb
enter
cld
push
shl
repnz
add
out
mov
dec
and
bound
imul
xchg
jl
dec
push
pop
cmps
jmp
fstp
mov
lods
nop
or
rcl
ja
dec
or
gs
mov
enter
xor
ds
ins
mov
sub
sub
repnz
add
addr16
pushf
pop
xchg
adc
dec
or
ds
push
push
push
mov
pop
or
jae
adc
aas
mov
movs
inc
jl
daa
mov
adc
dec
ja
add
push
(bad)
add
push
jl
enter
push
add
stos
and
dec
push
loope
mov
adc
jae
push
retf
or
jae
retf
outs
fdiv
cmp
dec
mov
cli
and
(bad)
mov
adc
mov
fld
enter
dec
cmp
push
xchg
out
das
in
jnp
popa
pusha
test
aam
fst
jl
pop
ins
fist
imul
and
lds
adc
inc
mov
xchg
call
inc
jl
(bad)
in
sar
and
mov
mov
mov
inc
xchg
call
jo
mov
dec
xor
mov
aaa
js
cmp
jp
(bad)
jae
dec
out
(bad)
mov
xor
pop
iret
popa
xor
ret
and
call
cmps
jl
idiv
popa
(bad)
iret
pop
push
aad
or
movs
add
ins
lds
jl
popa
jo
retf
in
ds
nop
cmc
pop
mov
unpcklps
(bad)
mov
cdq
scas
les
test
out
inc
cmc
ja
mov
imul
sbb
push
fdivr
jmp
or
push
popa
jns
and
jmp
hlt
mov
jne
out
scas
cld
fimul
in
sbb
dec
pop
or
jl
sbb
fcom
int3
(bad)
jl
cld
add
sti
ins
push
sub
xchg
fld
outs
mov
mov
mov
jno
jl
call
ja
jge
mov
test
jl
pop
sbb
jge
xor
jns
into
dec
cwde
hlt
cmps
jge
loop
jbe
jmp
or
cli
in
dec
ja
sub
mov
xor
pop
inc
adc
cmp
push
int3
bnd
sub
es
push
or
aas
jl
cmc
in
out
in
sahf
push
pop
jl
jo
daa
test
cmp
jp
stos
fnsave
jb
jl
stc
mov
sbb
popa
stos
dec
jl
mov
xlat
mov
shl
ja
inc
and
and
sbb
jecxz
arpl
push
test
xor
jle
fnstsw
imul
fcom
xlat
add
fisubr
mov
jge
sub
daa
push
xor
fbld
out
sar
in
dec
cmp
add
stos
xrelease
bound
jl
pushf
xor
aam
in
cmps
pop
popa
jmp
loope
jl
loopne
sub
lods
ret
fdivr
aas
std
mov
push
(bad)
loope
mov
adc
loopne
aaa
or
inc
jl
adc
test
jmp
loope
fmul
xchg
aad
add
push
std
pop
xchg
adc
mov
popa
mov
call
sub
sub
imul
adc
data16
dec
jg
jns
ins
lock
cld
pop
xor
aaa
outs
xchg
push
sahf
pop
rcl
cmp
sbb
cs
sub
fnstcw
ins
jl
dec
jno
add
ja
mov
push
lds
fistp
mov
dec
add
jl
sub
add
jl
pop
and
lahf
jno
cli
xor
mov
in
jl
jne
fst
mov
ins
cld
jmp
ja
lds
ficomp
or
xchg
in
cld
pop
add
jne
adc
mov
xchg
jae
out
xor
or
shl
je
inc
neg
(bad)
inc
dec
jl
add
mov
jl
cwde
add
fidivr
mov
dec
popf
std
jmp
adc
mov
shl
push
pushf
jl
shr
pop
hlt
and
jp
ins
out
sbb
rcr
test
mov
mov
dec
ficom
adc
in
jl
fld
cmps
jl
mov
mov
(bad)
jge
mov
sbb
cmps
jl
(bad)
mov
jl
arpl
jno
inc
in
dec
pushf
mov
xchg
rcr
and
dec
ja
jp
lods
outs
in
jo
shl
mov
jnp
add
in
repnz
cmp
call
lea
std
mov
(bad)
xchg
mov
inc
jge
xchg
rcr
rcl
cld
push
cmp
fsub
mov
(bad)
jae
mov
ja
mov
mov
jl
mov
push
cmp
xchg
add
movs
jg
fucomp
into
rol
outs
jp
sbb
pop
add
adc
pushf
out
jecxz
int3
imul
daa
pop
cwde
fs
mov
mov
inc
mov
inc
ins
into
jl
stos
fsubr
movs
sub
mov
nop
inc
cwde
push
jl
xchg
test
jge
pusha
out
mov
std
addr16
pop
icebp
mov
ds
or
jl
sbb
push
push
jnp
xchg
pop
xor
adc
inc
into
jmp
sbb
jge
shl
jge
push
lea
jo
je
js
js
mov
jmp
fsubr
js
mov
call
test
jl
dec
inc
pop
rcl
jnp
outs
xor
mov
fsub
jnp
test
test
mov
mov
mov
mov
mov
mov
mov
inc
dec
sub
ror
mov
outs
ds
xor
es
je
adc
leave
pop
stc
stos
icebp
mov
jge
dec
sbb
test
jl
lahf
jbe
or
lock
pushf
mov
or
jl
bound
sbb
fsubr
aad
ret
into
push
pop
push
test
xchg
push
mov
pop
stc
lods
sub
push
mov
fidivr
retf
ret
pop
jnp
shr
xlat
bound
outs
movs
cmp
pop
jns
mov
in
inc
jl
xor
loope
mov
gs
mov
mov
ja
cli
cmps
push
sub
mov
cmp
loop
mov
jl
pushf
or
mov
push
push
jp
fst
aas
xchg
mov
or
ror
test
es
int3
js
adc
icebp
loop
push
cmps
out
jge
jmp
daa
push
int3
popf
mov
addr16
xor
fidivr
lock
sbb
imul
or
stos
xor
jge
cmp
fcom
addr16
and
mov
int3
push
lds
outs
cmp
div
pop
jp
dec
sbb
push
jmp
add
xor
xchg
das
sub
(bad)
aam
jl
mov
push
dec
fist
jbe
(bad)
jns
jl
pop
push
ins
dec
fadd
or
jl
mov
push
and
loop
jl
pop
add
dec
cmp
xchg
jnp
adc
arpl
cmp
sti
dec
fsubr
(bad)
bound
call
loopne
sar
outs
adc
and
movs
ret
adc
aad
bound
jns
mov
fisubr
push
mov
and
popa
hlt
sub
or
and
xchg
repnz
sti
push
les
jl
add
jmp
fcomp
xor
lods
mov
sbb
xchg
iret
loope
push
jns
(bad)
adc
cs
pop
(bad)
jl
fimul
fst
mov
jl
je
sti
pusha
push
pop
pop
jl
inc
test
add
or
sub
inc
add
add
mul
scas
fs
movs
sub
aas
sar
aaa
jns
and
and
ins
add
sub
pmulhuw
ins
outs
jmp
or
cmp
jne
pop
out
cmps
jle
jl
xchg
arpl
sbb
into
jmp
xor
rcl
cmp
ins
mov
enter
daa
adc
cwde
adc
cmps
out
mov
popa
rol
(bad)
dec
pop
in
pushf
dec
jns
jne
addr16
cmp
daa
ins
sbb
adc
scas
sub
retf
xchg
jl
and
inc
in
pusha
jnp
loope
add
fwait
test
in
cmp
js
fidiv
add
cmp
leave
gs
and
jl
imul
mov
test
jl
jge
xchg
mov
xor
call
adc
xor
sub
test
xor
fwait
pop
or
mov
les
jl
adc
repnz
adc
cmp
pushf
inc
xchg
cli
lea
ss
mov
rol
ficom
test
jno
jl
cli
cmp
test
sub
and
add
add
paddd
push
ja
cwde
xor
fadd
imul
sub
or
aas
jge
mov
fstp
(bad)
cmp
jbe
sub
(bad)
fidivr
pop
or
ins
sub
jae
or
jl
ret
ss
pop
push
add
mov
gs
mov
(bad)
ret
add
sub
inc
sub
nop
iret
mov
cmp
outs
arpl
test
lahf
cmp
pusha
inc
jl
adc
fsubp
fstp
jl
add
push
mov
bound
(bad)
call
cwde
ins
push
jle
ja
pop
movs
cmp
in
jl
or
cli
and
jl
pushf
jmp
int3
xor
jge
cdq
mov
sbb
mov
sub
shl
and
popa
adc
inc
aam
nop
cli
je
pop
jl
mov
(bad)
mov
clc
int
retf
(bad)
rcl
leave
fdivr
je
int
xchg
mov
jbe
ja
daa
iret
stos
xchg
into
or
jl
add
mov
xchg
lods
jecxz
xchg
js
fdivr
lods
cmc
mov
ret
mov
mov
xor
jmp
add
jecxz
jl
sub
mov
mov
sub
xor
cld
gs
nop
out
out
add
mov
test
xor
out
inc
sbb
add
mov
sbb
in
stc
xor
data16
dec
sar
sbb
adc
cld
mov
push
cmp
sub
xchg
addr16
xchg
call
jl
loop
cmp
push
call
not
xchg
jge
shl
mov
pop
push
jl
leave
and
dec
xchg
mov
xor
in
data16
lock
mov
jl
int
cmp
xchg
inc
sub
ficomp
inc
jbe
jge
pop
in
jmp
jl
ds
daa
push
imul
jl
lods
ror
cmp
sar
stc
repnz
mov
sbb
jnp
sti
or
cmc
jp
jmp
sbb
jecxz
dec
inc
out
jp
retf
mov
push
popf
xchg
jne
and
cmc
cld
jae
iret
xor
jle
ja
leave
test
fbld
mov
add
es
daa
out
dec
loope
pop
jnp
(bad)
cli
inc
mov
ds
push
shr
sahf
fidiv
jl
int
dec
xchg
icebp
sbb
fsub
inc
mov
test
or
jne
jl
mov
(bad)
shl
(bad)
mov
mov
repz
loope
adc
dec
pop
cmps
sbb
and
inc
lods
mov
push
(bad)
in
jl
dec
scas
xchg
cmc
xchg
fsub
push
push
jl
outs
neg
rcr
add
inc
scas
xor
mov
fcomp
xchg
mov
stos
aaa
mov
mov
int3
sub
das
jl
arpl
and
jnp
mov
cld
jg
mov
sahf
xor
ds
push
pop
jl
jmp
mov
jle
jns
ds
sar
jge
fnstcw
int
lahf
mov
sti
jl
fistp
pop
mov
jmp
cdq
scas
ja
jne
mov
add
les
cli
sbb
pushf
adc
jnp
fs
mov
jne
shr
test
movs
aaa
in
add
push
mov
in
jl
xor
inc
(bad)
cli
dec
fmul
jo
jl
add
popf
xor
cmc
xchg
fidivr
pop
fidivr
or
in
rcl
call
xor
fsubr
jl
(bad)
inc
dec
push
pop
mov
neg
dec
jns
sahf
dec
rcr
out
lea
pop
cmp
sti
cld
xchg
scas
movs
addr16
shl
sbb
into
dec
sbb
cmps
jecxz
add
mov
mov
jl
jb
pcmpeqb
mov
sub
bound
fdivr
retf
mov
sbb
call
jl
aas
aam
fdiv
addr16
xor
adc
stos
lods
out
out
sar
inc
xchg
pop
jo
push
fwait
outs
ret
imul
lods
pushf
mov
ins
sbb
jbe
in
jnp
add
call
cmp
popa
(bad)
in
sbb
or
push
xor
mov
cmp
sahf
mov
fnsave
ucomiss
mov
daa
push
ja
dec
inc
jecxz
in
mov
ret
sar
pop
in
cmps
or
les
enter
mov
outs
fadd
pop
inc
pushf
push
pop
aaa
mov
aam
rep
jae
out
les
or
shl
mov
dec
popf
dec
jl
mov
mov
into
jl
fadd
cdq
mov
cli
adc
aad
(bad)
mov
jb
imul
jl
dec
out
stc
pusha
test
loope
cmp
pop
fcos
xor
mov
lahf
loopne
les
fild
(bad)
jns
fdivr
adc
mov
adc
mov
mov
int3
in
mov
sti
test
std
push
out
(bad)
jl
jmp
dec
add
cmp
mov
pop
mov
ins
ja
aam
sub
sti
mov
cdq
cld
dec
out
jg
clc
int3
xor
in
jl
fdiv
pop
xor
and
jnp
(bad)
and
int3
cwde
js
xchg
test
sti
jb
cld
iret
fst
jl
sbb
adc
or
jle
les
in
mov
jns
ficomp
rcr
fistp
test
or
jl
ja
test
jl
hlt
add
imul
jl
mov
xlat
sbb
push
loope
dec
or
nop
cld
mov
push
out
mov
or
cmp
out
mov
hlt
in
test
loope
jp
xor
stos
movs
data16
retf
mov
sbb
pop
stc
fdiv
out
dec
sbb
out
loope
mov
ins
je
jmp
dec
outs
and
and
mov
sub
push
nop
inc
rol
sub
rol
pop
adc
push
adc
jo
in
jl
push
loop
jl
rcr
stos
lods
add
jae
xchg
mov
jp
popa
dec
mov
jle
push
mov
fild
jge
adc
lea
pusha
pusha
imul
cmps
sub
xchg
in
iret
out
jl
jno
daa
repz
jp
cdq
aas
ror
push
adc
pop
jnp
add
inc
or
mov
sti
fbstp
jl
ins
sahf
shl
push
mov
dec
and
jl
and
jb
xor
pop
jle
mov
test
dec
call
mov
lods
rcl
inc
add
and
popa
dec
inc
jl
inc
push
iret
sahf
fild
shl
into
xchg
push
pushf
test
cld
mov
xor
adc
arpl
push
xor
xchg
(bad)
jp
rcr
addr16
cmp
fs
xchg
lods
mov
js
jg
(bad)
pop
cmp
xchg
call
hlt
(bad)
je
cs
jl
mov
xchg
movs
jl
cmp
xchg
adc
int
jmp
fadd
aad
pop
call
pop
xchg
mov
add
inc
push
sub
ja
and
cwde
fsub
dec
mov
jno
xchg
fst
pushf
lock
xor
xchg
fisubr
jnp
rcl
nop
das
popa
movs
in
in
(bad)
jl
and
ds
sub
cld
dec
jnp
inc
fstp
or
sti
pop
sub
or
jl
neg
out
inc
sar
pop
test
mov
xor
add
ret
jl
xchg
add
test
lods
mov
fadd
and
sub
lds
mov
push
sub
aam
and
popa
push
or
fstp
leave
test
push
fcomp
rcr
xor
xor
jl
cmc
push
inc
lds
inc
loope
dec
mov
add
test
jns
hlt
in
jl
xor
xchg
fwait
inc
adc
or
outs
sub
mov
mov
cmp
out
ins
inc
lds
push
jns
leave
and
mov
sub
jl
add
aam
adc
xchg
in
loope
sbb
push
test
mov
pop
mov
fwait
mov
jl
es
ins
xor
cmp
sahf
pavgb
jnp
xor
push
(bad)
mov
mov
outs
loope
jl
xchg
out
inc
lahf
gs
mov
in
mov
mov
fidivr
xor
pop
loope
cwde
cmp
cmp
lea
inc
addr16
(bad)
sbb
sub
jl
pop
rcl
cmp
mov
jl
fisubr
jnp
(bad)
adc
add
enter
imul
or
jl
pop
adc
sti
out
mov
fcomp
push
and
push
addr16
adc
sbb
retf
jbe
jae
cld
in
sub
mov
outs
xchg
movs
mov
sbb
cmp
adc
call
mov
sub
add
das
stc
ins
jo
or
push
jl
stos
mov
pop
push
cdq
sbb
call
jbe
fcom
add
pop
mov
(bad)
rcr
or
setb
stos
push
cld
dec
test
jge
call
in
dec
jl
pop
jo
inc
jle
mov
cld
mov
sbb
adc
(bad)
jl
mov
je
into
inc
fs
out
adc
(bad)
jge
iret
xchg
pop
pop
jecxz
sbb
xor
mov
jnp
neg
(bad)
jns
movs
int
push
jl
jbe
xchg
pop
iret
jl
push
cli
xor
shr
jp
movs
xchg
in
jecxz
ds
shl
mov
mov
add
mov
fimul
jo
lea
jne
test
ret
das
outs
dec
cmps
jno
pop
in
in
cmc
sbb
cmp
mov
jl
sub
neg
jl
push
xchg
or
add
loope
mov
les
inc
jge
pop
cwde
into
push
xchg
sti
cwde
xchg
jl
stc
sbb
push
idiv
jl
mov
sbb
push
loope
cmps
xchg
mov
ins
sub
jl
xchg
std
daa
dec
outs
jl
xor
mov
pop
or
push
sbb
repz
add
div
jl
mov
lods
outs
push
and
or
mov
dec
pop
or
sub
add
fmul
std
mov
sbb
adc
aam
pop
fdivp
jl
mov
shl
jg
push
cwde
jl
rcr
out
add
xchg
mov
scas
jl
jmp
jb
push
cmp
loope
sti
sbb
adc
or
mov
fisubr
mov
mov
mov
dec
in
jl
cmp
pop
(bad)
push
retf
pop
and
cmp
xor
jle
and
jp
dec
pop
aad
jmp
jnp
stos
out
test
push
mov
ret
sub
push
and
pushf
xor
cdq
jl
fistp
add
adc
inc
loopne
loope
sbb
repz
mov
test
pop
das
push
push
pop
lods
pushf
push
sti
mov
jl
xchg
cmp
or
inc
mov
mov
loope
inc
sub
jmp
push
loopne
mov
sbb
rcr
and
aas
ret
in
jbe
sbb
aad
mov
test
sub
aaa
xor
cld
(bad)
popa
sub
fs
outs
jmp
data16
and
jg
jl
enter
fnsave
popa
mov
scas
sahf
jecxz
mov
loope
stos
sar
cmp
sar
sub
loope
js
leave
pushf
fldenv
test
adc
jg
cdq
iret
mov
imul
test
sbb
aas
push
pusha
cmp
sub
clc
fs
mov
mov
cld
push
rcr
outs
mov
imul
mov
add
jge
out
popf
push
pushf
into
sbb
mov
mov
mov
adc
inc
fcmovbe
lahf
in
pop
hlt
mov
outs
mov
sbb
xchg
jb
lds
into
jl
test
imul
push
xchg
call
jge
fadd
or
pop
push
fldcw
pop
push
shr
cwde
cmps
out
sbb
mov
outs
and
loopne
pushf
sbb
push
js
pop
pusha
cs
cmp
xor
or
sbb
icebp
or
pop
cmc
test
jl
add
jl
repnz
push
imul
mov
xchg
loope
add
push
fisub
dec
mov
sahf
xor
pop
lahf
jno
cwde
xchg
cmp
pusha
mov
mov
js
push
push
gs
mov
push
jl
mov
sbb
retf
repnz
fstp
push
mov
dec
add
pop
adc
jle
shr
cmp
and
xor
cld
sub
jecxz
ret
out
jl
pop
ror
jl
enter
loope
dec
jnp
std
adc
sbb
push
mov
cdq
jp
pop
adc
xor
inc
outs
or
mov
pop
retf
jp
or
jl
mov
imul
add
mov
repz
inc
lock
adc
mov
jl
mov
adc
sar
popa
mov
sub
inc
pop
cmc
cdq
das
sar
imul
(bad)
pop
retf
int3
adc
pop
mov
cdq
enter
add
jl
stos
xchg
sbb
int
and
int3
xchg
jmp
pushf
cmp
mov
jl
aad
rol
inc
repnz
sub
mov
dec
aam
inc
std
data16
sbb
out
jg
sar
jno
aam
lds
movs
ja
cmp
ds
mov
repnz
(bad)
jge
lahf
xchg
pop
clc
cmp
xor
jnp
and
fdiv
inc
inc
int
in
addr16
jbe
jl
pop
iret
xor
lea
scas
ficom
jp
jo
jge
jecxz
les
in
pop
retf
jl
cmc
dec
mov
pop
test
dec
ja
fs
sub
in
cmp
pop
fstp
sbb
push
fcomp
cld
nop
retf
xchg
push
push
xor
sub
pop
push
mov
out
mov
out
push
cmc
fmul
xchg
and
sti
call
jle
jl
sbb
fidivr
xchg
retf
out
jl
fcmovbe
test
outs
cmp
jecxz
scas
xchg
mov
jl
shl
push
jmp
mov
add
and
adc
and
hlt
push
cs
sub
or
fsub
jl
popa
cmp
and
sbb
xor
(bad)
std
loopne
aas
and
pop
mov
test
aaa
sub
jl
ficom
jne
in
jl
ins
jnp
cmp
imul
mov
mov
call
popa
cdq
dec
pop
xor
dec
inc
or
movs
sbb
mov
outs
jmp
mov
loope
cmps
pandn
sbb
test
pop
or
push
mov
and
xor
addr16
test
imul
ins
adc
sbb
jl
jmp
add
daa
shr
movs
mov
pop
ss
mov
cmp
jnp
add
rcl
cli
mov
xchg
fwait
jp
jle
mov
(bad)
jmp
xor
jb
mov
test
(bad)
lock
jl
push
push
fcomp
push
popf
xchg
pop
sbb
xchg
fistp
pop
lds
cmps
icebp
lods
pop
pop
movs
(bad)
arpl
or
cmc
loopne
fistp
add
fcmovu
pop
mov
xor
cmp
pop
out
jl
mov
inc
sahf
jno
sar
loope
sbb
(bad)
fs
push
clc
jmp
and
xchg
std
iret
pop
mov
outs
inc
jnp
jg
cmps
lock
push
pop
dec
jl
push
add
sbb
jl
sub
cs
jp
add
xor
adc
test
pop
jl
sti
push
das
int3
pop
or
mov
add
mov
add
dec
dec
movs
mov
jl
xchg
mov
cli
outs
fisubr
jl
arpl
jecxz
fs
movs
shl
push
mov
aaa
lods
adc
bound
jl
xor
test
xchg
add
ins
scas
dec
sub
stos
xchg
xchg
pop
jl
pop
fsub
adc
loopne
jl
ret
outs
mov
xor
fild
je
or
cwde
(bad)
jno
dec
push
mov
sbb
xchg
jns
loope
in
shl
enter
lods
or
js
outs
imul
cmp
ja
out
(bad)
pop
mov
pop
es
cmp
mov
inc
add
aaa
xchg
mov
xchg
push
ficomp
sbb
xor
adc
test
dec
je
icebp
or
push
jnp
dec
in
imul
cld
(bad)
mov
or
cmps
jmp
mov
push
lds
mov
stos
fwait
inc
add
jl
test
cwde
xchg
adc
jl
sbb
push
loope
aas
(bad)
ja
cmps
in
lock
aad
sbb
jmp
movs
cmp
xchg
jl
add
lea
push
sbb
push
(bad)
jne
pop
add
cmp
faddp
shl
popa
frstor
or
mov
cld
push
xchg
into
(bad)
pop
dec
jl
ja
out
pusha
and
cld
ja
inc
imul
test
lods
fwait
or
into
push
(bad)
pusha
jl
xchg
dec
ret
jl
sbb
retf
jl
jae
movs
inc
xchg
shl
call
inc
aas
cld
(bad)
(bad)
jl
(bad)
mov
adc
pand
jmp
aad
push
int
jmp
int3
ret
pop
retf
mov
xchg
inc
jl
pop
mov
cs
(bad)
fdivr
push
push
(bad)
xlat
push
adc
pop
imul
call
or
jp
inc
mov
fcom
stc
sub
jns
sbb
aaa
jo
scas
mov
cmp
sub
xchg
jmp
rol
hlt
xchg
movs
js
test
jl
imul
in
in
shr
pop
pop
in
push
mov
ja
and
xchg
sar
(bad)
les
dec
jbe
push
mov
jl
or
jl
fbld
clc
jge
fsub
fadd
das
xchg
or
jns
xchg
add
mov
mov
rdtsc
lahf
test
ret
outs
movs
dec
and
int
sbb
push
xor
sbb
jns
nop
push
int3
jl
push
pop
inc
or
push
xor
pop
outs
rcr
inc
ins
jl
inc
into
movs
or
jno
jo
mov
jecxz
stc
jmp
jl
inc
sbb
jl
adc
ins
xchg
rol
sub
(bad)
ins
outs
outs
pushf
js
mov
inc
jl
mov
adc
sub
cld
sahf
int3
ja
xchg
es
pop
retf
pop
(bad)
mov
cmp
call
dec
xchg
jl
enter
or
jmp
loopne
mov
mov
es
call
mov
addr16
repnz
jge
sub
inc
(bad)
push
mov
adc
aam
in
lds
out
jl
sub
mov
cli
cdq
dec
sbb
inc
jb
mov
jno
xchg
outs
sub
or
mov
pop
imul
out
sub
cmp
or
and
mov
and
cld
xor
jl
sti
xchg
div
dec
fisttp
mov
clc
cwde
mov
in
add
jge
mov
bound
(bad)
jl
mul
fcomip
(bad)
xchg
sbb
adc
jns
ja
inc
std
repz
and
xor
test
mov
adc
(bad)
gs
fdiv
test
loope
fwait
popa
sar
lods
pusha
or
xchg
scas
test
jge
std
xor
out
jnp
jle
call
sub
pop
mov
aaa
sahf
leave
in
push
imul
scas
out
xor
fs
push
jl
sub
or
scas
dec
std
inc
aas
add
loope
in
jg
jl
nop
lock
fs
shl
std
shl
push
and
xchg
jl
loope
in
lahf
jns
inc
and
cs
or
xor
push
fisttp
test
stos
cmc
or
ret
loopne
push
cmp
aad
jl
loop
test
fidivr
jl
pop
mov
movs
daa
add
ror
mov
lods
sbb
push
popa
lahf
sub
jl
rcl
in
add
stc
jne
pop
push
push
cld
xchg
aaa
or
sar
cmp
jecxz
add
sbb
aad
inc
ret
inc
test
jae
scas
movs
pop
jl
adc
and
mov
jge
out
add
outs
lea
call
jg
xor
aam
xor
jb
add
or
or
inc
push
jnp
xchg
push
in
(bad)
ds
fidiv
cld
push
pusha
not
and
outs
leave
xor
xchg
pushf
mov
into
pcmpgtw
neg
mov
lods
push
or
jl
add
jl
jo
and
jmp
mov
sar
xchg
in
jecxz
jne
mov
pop
jl
dec
movs
push
inc
xchg
cld
inc
in
sub
popa
jns
jge
cwde
push
mov
mov
jl
inc
push
fdivr
mov
(bad)
xlat
mov
adc
and
sbb
or
jns
(bad)
hlt
cmp
jl
cmp
jp
jle
add
sar
aad
mov
jo
mov
xchg
xor
sbb
mov
popf
push
or
cmps
movs
add
jle
add
jl
fsub
jge
int
lods
jl
pop
mov
ret
add
dec
adc
jl
cmp
fstp
or
out
pop
mov
fcomip
mov
mov
xchg
mov
cmp
jl
lds
sub
jnp
imul
pop
loope
xchg
ja
inc
cmp
jg
cdq
jl
(bad)
mov
mov
xor
jge
and
test
cmp
ins
in
das
jl
or
or
add
daa
jl
dec
jns
sbb
jl
mov
hlt
or
int
push
push
cdq
out
ja
or
mov
cli
xchg
daa
mov
push
les
aas
repz
cmp
mov
mov
popf
jnp
jo
stc
jg
in
call
mov
test
mov
cmp
(bad)
mov
cmps
inc
sub
stc
clts
xchg
xor
fld
cld
dec
xor
ror
cdq
(bad)
in
dec
ins
mov
retf
dec
push
jl
rcl
and
iret
mov
xor
ja
ficom
les
cwde
ds
call
(bad)
jl
inc
and
sti
jbe
xchg
mov
pop
out
stc
ins
jl
dec
pop
popa
stos
es
imul
sar
and
pop
cmp
sahf
pop
jns
dec
mov
mov
jp
jne
out
inc
pop
cld
jmp
pop
lahf
fldlg2
loope
outs
jl
mov
inc
daa
jl
push
imul
jmp
inc
sti
je
pop
inc
dec
icebp
cld
in
int
dec
inc
aam
jl
mov
lods
xor
das
(bad)
ja
mov
repnz
jl
loopne
xor
and
jge
fnsave
adc
mov
imul
pop
xor
cmp
push
int3
out
jge
mov
fstp
fsubr
cmp
mov
add
jl
push
and
pop
push
mov
in
dec
imul
iret
and
leave
imul
dec
(bad)
lea
push
hlt
jl
bound
aam
fstp
or
enter
and
mov
mov
push
(bad)
or
hlt
push
frstor
lods
xchg
ds
cs
sub
inc
push
cld
ror
(bad)
div
xchg
test
xor
pop
jl
(bad)
mov
and
loop
mov
sub
leave
adc
pop
stc
into
cld
dec
daa
jge
pop
mov
jp
test
sbb
int3
rcr
sbb
cld
pop
(bad)
ret
(bad)
jmp
jno
fnstcw
int3
lock
mov
sar
out
cdq
pop
push
inc
repz
add
adc
mov
popf
jl
sub
in
xor
pop
or
pop
ja
rcr
sbb
or
hlt
pop
and
not
adc
push
push
inc
jl
mov
mov
jl
ss
scas
(bad)
ret
sub
jl
mov
mov
rol
or
sub
cmp
shr
xchg
(bad)
fdivr
mov
mov
fs
cmp
into
int
cmps
pusha
fucomip
jae
call
fnstsw
jl
adc
jbe
xchg
int
fimul
jl
adc
push
xchg
fwait
jl
inc
retf
popa
pop
test
popf
mov
hlt
test
mov
pop
jl
push
pop
xchg
cmp
(bad)
and
add
mov
sub
jbe
std
les
xchg
push
pop
inc
jnp
cmps
fcom
dec
arpl
adc
sub
inc
ja
mov
gs
call
add
pop
sbb
mov
jge
ins
fdivr
rol
push
daa
jl
jp
sahf
outs
pushf
bound
rcr
mov
cld
iret
test
push
test
aam
jl
or
sbb
push
fdivr
adc
xor
inc
and
ss
xlat
mov
jl
mov
sahf
add
jg
rcl
mov
in
or
fld
push
leave
dec
js
add
cmc
dec
inc
jl
ret
ud2
xor
adc
add
dec
(bad)
push
mov
cmp
pop
ficomp
jnp
movs
fild
stc
mov
xchg
(bad)
out
jl
dec
shl
sub
cmp
jmp
cmp
or
cs
xchg
push
push
pushf
jge
gs
add
loope
imul
cmp
js
pop
add
enter
loope
sbb
int
es
and
sub
or
in
sbb
push
or
mov
add
ja
cwde
jo
jnp
cmps
pop
push
mov
xor
sub
fisub
xchg
popf
ins
dec
movs
fisttp
ja
fdivr
lahf
in
mov
push
adc
je
jle
cld
call
sbb
mov
movs
jmp
jne
push
xchg
add
pop
loop
in
mov
ja
les
dec
adc
xchg
sbb
das
outs
jmp
or
fild
mov
call
sub
push
inc
push
jl
clc
ficomp
ror
pop
mov
adc
outs
loope
js
xchg
(bad)
inc
push
call
add
adc
add
daa
outs
nop
add
ja
mov
sbb
popa
fistp
call
mov
(bad)
pop
dec
mov
lds
pop
test
sahf
data16
aaa
loop
push
addr16
fnstenv
adc
xchg
mov
mov
nop
cmps
add
jl
adc
in
inc
pop
push
cmp
xor
or
jle
jns
js
jp
jl
xchg
aas
repnz
cmp
jge
aad
into
jl
xchg
fsubrp
xor
mov
xchg
mov
cmp
adc
inc
movs
test
xchg
ja
dec
lods
out
lahf
push
jl
inc
pop
fimul
cmp
icebp
and
enter
jl
add
in
push
jl
test
sbb
jl
es
ins
pop
loope
jp
mov
dec
mov
jnp
fbstp
dec
pop
imul
loopne
addr16
daa
fdivr
popf
mov
jne
push
jl
mov
loope
pushf
xchg
jl
iret
cwde
sbb
aam
push
inc
fmul
jl
add
les
fisubr
popa
or
mov
mov
test
adc
ins
sub
jl
out
std
adc
(bad)
repz
xchg
sbb
pushf
xor
imul
cmp
mov
mov
sub
sbb
xor
sbb
ins
mov
test
cld
faddp
pop
cmps
(bad)
jl
bound
popa
test
xlat
daa
loope
cmp
ds
in
xor
data16
arpl
nop
mov
jecxz
imul
inc
push
sub
adc
mov
pushf
mov
xor
fcomip
scas
pop
mov
and
fcmovbe
mov
push
imul
les
cld
int3
jp
or
sbb
pusha
retf
pop
mov
cmp
xchg
jae
jl
or
rcl
add
dec
sbb
cdq
or
xchg
in
mov
sbb
sub
fnstsw
adc
sbb
arpl
jno
in
pop
inc
xor
push
out
jmp
or
and
jl
sub
xor
cld
in
popa
jl
test
jl
aad
fdivp
pop
subps
add
inc
adc
or
mov
out
mov
es
jl
repz
dec
ret
loop
nop
xor
call
lds
leave
cmc
cmp
movs
sbb
xchg
xor
cmp
add
pusha
push
mov
int3
and
push
pop
out
in
pop
inc
es
test
xchg
ss
js
cmp
and
in
jae
cmp
(bad)
es
add
mov
mov
dec
jns
mov
rol
int3
imul
sbb
or
out
sub
xchg
fild
push
imul
inc
or
test
jl
rol
xor
xchg
(bad)
not
repz
scas
mov
xchg
jnp
sbb
mov
adc
stc
push
xchg
jl
mov
mov
icebp
test
hlt
shl
jl
cmp
xor
push
int
ds
jl
mov
or
sub
cli
mov
pop
int
div
sbb
scas
mov
sub
jmp
and
jns
fs
into
jl
leave
movs
test
inc
cmp
or
lds
movs
add
ret
or
dec
or
fsub
lea
jl
int
(bad)
mov
fbld
jl
mov
push
cmp
test
mov
push
pavgb
ror
outs
rep
jg
mov
(bad)
jl
xor
pop
mov
and
mov
jl
mov
fdiv
(bad)
xchg
leave
clc
mov
adc
pop
in
xchg
mov
sub
movs
hlt
jo
fstp
xchg
jl
lea
rcr
adc
push
xchg
and
das
inc
pop
mov
movs
fstp
pushf
lods
mov
jnp
push
(bad)
or
dec
outs
(bad)
xlat
pushf
mov
ja
mov
repz
shl
jl
js
push
push
lods
xor
xchg
add
pop
dec
aad
(bad)
mov
(bad)
mov
jl
mov
lahf
fsub
jg
jne
xor
enter
cmp
fstp
sub
push
nop
push
jge
in
js
stc
inc
and
push
push
nop
push
jl
cmps
imul
jl
add
out
jl
call
leave
add
xchg
jl
cli
aam
push
dec
fstp
sub
les
out
dec
imul
stc
test
sbb
pop
je
sbb
lods
cmps
jl
jmp
popa
mov
cld
(bad)
push
pop
cli
dec
pop
pop
push
inc
xchg
loope
stc
movs
cmp
sub
and
scas
jl
xchg
xor
fs
inc
outs
xchg
pop
xchg
lds
mov
or
int3
ficomp
xor
pop
jl
inc
xchg
lea
int
jnp
xchg
enter
aam
pop
cdq
cmp
cmp
push
mov
adc
dec
fist
dec
std
outs
mul
mov
pushf
sub
(bad)
pop
or
sbb
clc
cmp
gs
aas
mov
test
pop
jg
mov
jo
and
pop
mov
gs
sbb
push
cld
mov
sbb
adc
jge
sbb
idiv
push
mov
jl
push
fs
sub
loopne
mov
xchg
bound
adc
stos
jge
ja
mov
inc
xchg
enter
rcl
push
push
into
sbb
xchg
add
inc
ret
es
rep
cmp
inc
xchg
dec
cmc
push
push
movs
xchg
mov
clc
test
fmul
fld
mov
and
stc
nop
les
push
jl
into
ins
dec
mov
jp
clc
jmp
out
pushf
xchg
stc
leave
jge
xor
or
jl
cmp
push
int
sbb
adc
fnstcw
push
fst
cmp
popf
call
cdq
aam
jmp
mov
stos
(bad)
lea
loopne
ja
stc
call
dec
pop
dec
mov
jl
pop
retf
and
jns
inc
and
pop
scas
jl
mov
fsub
ja
and
mov
and
inc
jl
cld
inc
(bad)
lds
push
mov
mov
jl
cmp
retf
xor
push
jmp
and
xchg
jl
outs
sbb
call
fldcw
xor
dec
jl
mov
aaa
mov
mov
dec
add
iret
add
pop
aaa
jl
idiv
and
add
daa
stc
pop
sub
sbb
xchg
jae
push
in
xchg
stos
adc
xchg
rcr
pushf
jg
fs
scas
loopne
std
aas
cmp
cld
xchg
sbb
loop
push
stc
fistp
jl
add
cmp
or
jl
dec
jns
out
popa
mov
inc
fisttp
in
adc
icebp
nop
jl
jecxz
and
jge
nop
jl
inc
jae
inc
test
xchg
aaa
fcomp
jl
out
pop
out
dec
mov
loope
push
cs
jl
std
ins
mov
jbe
jl
xchg
pop
shl
pop
cmps
jl
(bad)
retf
jl
mov
sbb
inc
ins
outs
xor
lahf
cmp
lock
mov
jle
push
sbb
inc
dec
jl
frstor
mov
and
lods
cdq
xlat
nop
test
iret
rcl
vhaddpd
leave
xchg
xor
pop
jge
test
loope
(bad)
or
in
jl
inc
mov
mov
pop
and
xor
sub
ja
outs
adc
adc
retf
out
push
ins
or
rol
pop
inc
mov
sub
sbb
or
cdq
bnd
fdivr
ins
call
sub
cld
cld
adc
aaa
mov
inc
js
cld
out
xor
cmps
xor
idiv
jns
daa
adc
nop
sti
pop
adc
xchg
sar
mov
push
mov
jl
(bad)
je
pop
inc
add
(bad)
sbb
(bad)
dec
mov
cli
ret
bnd
mov
lods
stc
call
jle
imul
int3
cmp
push
jmp
in
dec
jl
push
lea
mov
test
pop
push
adc
jl
pop
test
push
mov
cmc
test
mov
jl
mov
push
jnp
dec
cmp
nop
aam
dec
adc
retf
mov
fld
and
fldcw
mov
ret
idiv
call
jl
repnz
daa
pop
bound
lods
mov
jl
shr
fistp
movs
inc
xchg
jge
lahf
dec
fidiv
jecxz
je
mov
xor
inc
jl
xor
lods
repz
jge
sub
pop
cmp
dec
dec
mov
jne
sbb
cmps
aad
or
cdq
ja
sub
movs
popa
in
or
jbe
loope
add
cmp
add
mov
dec
mov
jge
mov
aas
ds
lahf
mov
or
fsubr
movs
dec
xchg
jl
fcomip
sub
and
loope
adc
in
pop
add
leave
es
inc
push
mov
jl
mov
sub
jl
(bad)
(bad)
pusha
shl
xchg
(bad)
hlt
inc
inc
xor
shl
or
cmps
mov
jmp
dec
les
mov
cwde
fimul
jb
dec
or
xor
stos
jae
nop
ins
jg
push
arpl
iret
xchg
(bad)
cwde
imul
xor
and
sar
cmp
xchg
mov
sub
pop
push
nop
sbb
push
sub
or
(bad)
int3
mov
pop
rcr
jl
mov
jl
xor
call
mov
sbb
push
pop
jl
into
xor
cmp
iret
pop
outs
sub
sub
mov
xchg
jnp
dec
pop
pop
and
aam
jl
test
jl
popf
neg
fistp
(bad)
lahf
adc
icebp
sbb
popa
sbb
out
out
cmp
xlat
jo
pop
push
stc
cmp
jl
cmc
pop
fsubr
test
adc
mov
jl
add
outs
dec
dec
int
pusha
push
data16
mov
call
imul
lock
dec
mov
popf
retf
cmp
sahf
and
jl
xor
mov
adc
adc
jl
pop
jne
int
xor
sub
sub
mov
test
sbb
sbb
dec
add
popa
aad
xchg
hlt
(bad)
in
push
add
xchg
push
adc
adc
fidiv
jl
shr
pop
inc
popa
cmp
arpl
dec
loop
jle
inc
(bad)
push
jl
bound
jge
add
adc
popa
mov
and
inc
mov
sub
(bad)
push
sbb
aad
jl
pop
dec
xchg
push
cli
and
or
xor
jge
jmp
xchg
jl
adc
pusha
dec
inc
jl
xchg
pop
aad
mov
xchg
mov
cld
or
pop
div
jl
mov
in
jns
(bad)
retf
mov
xchg
xchg
xchg
div
sub
and
popa
push
int3
cmps
sbb
inc
jno
addr16
push
les
jge
sbb
cmp
pop
inc
cmc
jnp
cmp
mov
adc
xchg
repnz
jmp
std
cmp
out
lahf
inc
(bad)
jl
imul
xchg
push
jge
add
mov
jg
dec
int3
in
ja
sub
push
xchg
adc
sbb
shl
xchg
mov
mov
outs
lea
jne
neg
lods
sub
mov
mov
scas
outs
imul
sbb
lods
aas
pop
xlat
jl
in
sbb
out
push
cmps
jmp
std
shr
jl
es
dec
push
sub
sbb
xor
mov
lahf
mov
ins
(bad)
mov
sub
stos
test
rol
mov
cmc
add
jl
push
jne
pop
fisub
hlt
jl
arpl
test
push
mov
push
es
mov
pop
and
js
popa
imul
jge
call
retf
or
adc
dec
inc
xchg
xchg
fild
jl
cmp
popa
lods
(bad)
sub
js
cli
xchg
push
mov
scas
push
jl
mov
fs
cld
stos
or
imul
or
addr16
jl
dec
out
lahf
fstp
xchg
jl
stc
sbb
loop
mov
xor
inc
sbb
pop
sub
push
(bad)
(bad)
push
push
jge
or
pop
or
cmp
neg
add
dec
jl
push
inc
jl
daa
in
xchg
jge
xor
out
clc
ds
mov
xchg
retf
jno
ins
jae
xor
jp
jns
xor
in
jl
ja
mov
ja
cld
mov
adc
fcmovu
jl
add
out
push
pop
repnz
jl
mov
xchg
inc
push
jp
jl
fidivr
mov
(bad)
stc
jl
pop
addr16
call
das
add
push
mov
(bad)
pop
push
inc
cli
sar
jg
popa
xchg
add
xor
addr16
shl
adc
fisttp
cmps
xor
jl
fwait
push
inc
and
jae
ja
enter
fcom
repz
ins
ja
inc
cld
out
push
dec
xor
push
jae
imul
lods
test
and
std
push
pop
push
xor
popa
cmc
pop
mov
fld
xor
sbb
(bad)
xchg
pushf
xchg
rol
sbb
sub
mov
jl
xor
out
fild
xor
jl
inc
or
mov
fisttp
jge
pop
daa
push
xchg
push
dec
bound
jl
jmp
lea
push
shr
jl
data16
aaa
jb
cmp
pusha
(bad)
jl
fistp
mov
loope
movs
xor
jl
xor
idiv
push
(bad)
and
mov
push
shl
test
out
ficom
dec
iret
dec
mov
fdivr
mov
fsubr
aaa
xchg
imul
sbb
mov
clc
jae
pop
jl
xchg
fstp
sbb
dec
ja
stc
leave
lea
mov
movs
cmps
xchg
out
push
scas
cld
(bad)
out
and
lock
les
lods
mov
sbb
mov
cld
or
mov
jl
mov
(bad)
(bad)
fsubr
and
jl
dec
adc
into
dec
add
dec
mov
fcmovnbe
jae
fcom
jb
jl
jg
popa
arpl
fwait
or
inc
fst
and
cmp
pop
aad
cmp
xchg
or
sub
inc
sub
out
aam
sub
jmp
pop
das
jl
mov
ss
jmpw
jl
push
sar
inc
pop
add
jl
mov
sub
daa
shl
jl
scas
imul
aas
ror
or
rcl
fdiv
adc
jge
mov
xor
jns
mov
div
jl
xchg
jmp
sbb
mov
mov
jl
cmp
or
xlat
rcr
add
test
sbb
fwait
dec
jnp
aas
push
popa
push
xor
adc
stc
lods
movs
(bad)
inc
ror
push
mov
cmp
call
ret
mov
and
rcl
push
cld
adc
mov
jl
pop
int3
and
scas
dec
and
inc
add
jp
hlt
pop
dec
pop
cli
xor
mov
pop
mov
test
xchg
dec
jge
fidivr
and
push
sub
lds
inc
loope
jae
mov
sub
cmp
jge
pop
xchg
inc
cmps
test
cmp
xor
out
push
pop
jmp
loop
lea
and
out
mov
jge
xchg
mov
mov
xor
icebp
jg
int3
std
int3
push
jl
loop
sub
jl
dec
cmps
push
movs
fist
dec
dec
or
xchg
popa
test
(bad)
stc
jl
cdq
outs
jns
xor
xchg
loope
jl
les
or
jnp
dec
dec
ror
(bad)
jmp
sbb
daa
nop
popa
sahf
and
sbb
pop
add
cmp
fcomp
pop
lods
mov
and
sbb
inc
jl
push
frstor
push
rcr
in
or
or
sbb
ins
sub
inc
fdivr
push
test
repnz
faddp
jmp
sbb
mov
inc
aas
cmp
not
ja
test
dec
add
aad
mov
and
xchg
call
outs
mov
not
mov
dec
jmp
xlat
mov
jo
stc
jl
push
loop
push
pop
js
ja
fs
fstp
and
icebp
test
push
add
jl
inc
xor
in
and
jl
pop
dec
call
cdq
jp
leave
cmps
bound
js
cs
jne
in
jnp
mov
jp
add
cmp
retf
aam
xor
outs
jl
(bad)
push
mov
enter
test
mov
cdq
cld
into
clc
mov
jge
loope
jns
mov
jl
jo
cs
int
xor
dec
jl
fxch
and
repz
dec
xchg
rcr
mov
jg
(bad)
pop
popa
jl
ins
fisttp
shr
cmp
mov
addr16
push
pop
jl
retf
push
dec
add
pop
jl
shr
pop
stc
jns
pop
mov
pop
shl
loop
jl
fdivr
js
into
sbb
in
mov
jl
mov
int3
add
hlt
cmp
mov
div
xchg
test
sbb
and
sbb
pop
not
and
mov
mov
push
outs
arpl
fnstcw
test
sar
xchg
shl
fidivr
jb
pop
loop
and
loope
xchg
mov
les
sub
call
mov
mov
mov
and
dec
sbb
pop
jmp
inc
lahf
push
cld
ror
jl
daa
dec
jecxz
int3
idiv
shr
aad
jl
push
pop
aaa
icebp
mov
inc
jae
retf
cld
out
popa
or
pop
dec
and
jnp
out
inc
push
ja
xlat
jno
fiadd
fs
(bad)
lea
adc
inc
or
cld
in
sub
jl
push
je
xchg
int3
push
push
jl
jle
out
data16
mov
mov
mov
imul
outs
mov
daa
mov
jl
pop
nop
cmp
sub
jp
pusha
in
dec
mov
xchg
cdq
shl
jl
inc
cmc
in
push
lock
(bad)
sahf
push
push
mov
or
outs
int
aad
inc
not
popa
mov
mov
push
pop
and
(bad)
dec
js
fidivr
pop
pop
add
or
sar
mov
pop
and
jl
fucom
cmps
xchg
aaa
mov
inc
inc
jp
loopne
pop
fidivr
imul
ins
push
and
inc
pop
push
jge
cld
pop
or
mov
push
or
pop
mov
aad
popf
xlat
mov
jl
pop
cmps
dec
lock
test
mov
pop
sbb
std
sbb
or
mov
jo
jl
lahf
mov
sbb
outs
sbb
inc
out
mov
mov
sbb
jmp
ja
sbb
push
mov
push
cmp
aad
popf
inc
sbb
mov
dec
mov
fwait
popa
rol
pop
jg
addr16
xchg
or
das
jae
fidivr
fwait
mov
xchg
imul
and
stc
push
jl
sbb
mov
mov
arpl
sub
call
xchg
pop
lock
push
jl
or
xor
pop
(bad)
mov
cld
inc
addr16
fistp
dec
mov
call
jl
pop
pop
add
sbb
and
aas
out
sbb
mov
dec
xor
pop
push
cmc
jb
pop
or
cmp
call
fwait
jl
inc
ret
sar
aam
jl
push
shl
inc
int3
xchg
mov
mov
inc
enter
cmp
cld
ds
mov
xchg
jl
leave
mov
cmps
jno
push
inc
jecxz
xor
out
inc
dec
or
jp
cmp
out
inc
jl
stc
push
and
scas
xchg
jo
test
outs
ret
sar
stc
imul
xchg
in
(bad)
(bad)
fcomp
push
lods
push
jl
imul
cdq
jb
dec
jns
dec
loop
xor
ja
fimul
jl
call
mov
je
imul
adc
mov
fsub
jge
mov
fisttp
stc
pusha
or
xchg
mov
xchg
pushf
ins
and
out
clc
jl
iret
mov
inc
out
loopne
stos
xchg
outs
inc
xor
in
gs
mov
ret
neg
(bad)
adc
jl
inc
out
mov
ja
push
push
inc
mov
popa
stc
pop
jl
add
cmps
mov
lock
xchg
fnstsw
cmp
cdq
jl
and
xor
mul
dec
sbb
and
or
ja
xchg
stos
dec
mov
popf
retf
aaa
lods
jp
adc
inc
rcr
rcl
in
cdq
(bad)
jbe
jl
mov
imul
ret
rcr
xor
mov
jl
xchg
cmp
mov
icebp
outs
out
dec
mov
push
xchg
dec
(bad)
test
jl
xor
jl
dec
in
retf
or
fidivr
mov
inc
shl
and
jp
call
mov
inc
iret
pop
jl
mov
jns
or
mov
jae
mov
inc
in
and
jl
retf
inc
lods
das
xor
jl
push
aaa
mov
ja
rcr
mov
fld
adc
pop
pop
int3
xchg
jl
mov
jmp
adc
dec
mov
cmp
jl
std
push
popf
dec
into
(bad)
stos
or
(bad)
mov
inc
ds
stc
jl
lods
pop
pop
not
aaa
jl
sar
ss
jl
jbe
xchg
sbb
mov
lds
xchg
pop
push
rcr
jge
paddq
xchg
jl
sbb
xchg
sar
mov
test
jns
jge
cmps
adc
adc
dec
cmp
jl
ja
push
and
pop
jl
cmp
(bad)
cmp
push
sub
xlat
out
retf
and
xlat
jl
dec
ss
lahf
(bad)
and
cld
jbe
mov
es
and
aad
mov
leave
pop
jge
loop
sahf
cmp
mov
in
sbb
pop
jl
jno
test
ins
shl
inc
pause
dec
xor
inc
jl
pop
mov
sub
xchg
mov
rol
jl
stc
or
mov
ds
out
sub
mov
ror
pop
mov
sbb
fcomip
cli
mov
cld
fcmovbe
mov
sub
cmp
pop
iret
popf
pop
pop
mov
sbb
inc
int
js
stc
aam
or
mov
outs
rcl
fwait
mov
popf
dec
aaa
retf
jl
das
dec
jle
sub
cli
aam
jp
sub
xchg
aad
mov
std
cmp
(bad)
sahf
ret
mov
in
in
jge
jl
inc
leave
sub
idiv
mov
jge
jle
popf
dec
iret
jbe
je
shr
jl
ds
jmp
shl
dec
test
push
jns
jecxz
xchg
sbb
mov
(bad)
xchg
stc
jl
add
int3
jb
movs
jl
mov
lahf
sbb
imul
pusha
data16
dec
fnstenv
and
inc
(bad)
frstor
jecxz
xor
in
mov
dec
dec
pop
loop
repnz
cs
sub
mov
fbstp
call
mov
sbb
jl
dec
pop
fadd
xchg
jl
imul
ja
(bad)
aad
jo
das
push
icebp
(bad)
mov
mul
jg
sub
sbb
mov
dec
mov
bound
mov
and
xchg
mov
div
ret
aas
leave
shl
xlat
imul
fnstcw
dec
pop
xchg
fsubrp
jl
add
scas
jb
or
lods
sbb
in
sub
or
dec
xchg
cld
test
shl
mov
push
stc
int3
popf
mov
or
std
mov
push
stc
imul
mov
mov
int
pop
fsubr
push
add
stc
cmp
push
ds
mov
fisubr
cmps
pop
mov
jl
mov
(bad)
mov
call
mov
inc
pop
or
pop
pop
jns
mov
adc
sub
add
adc
icebp
xchg
je
shl
or
xor
gs
cmp
sti
cmp
movs
push
push
xchg
jl
es
fisub
jae
jl
xchg
cdq
push
lock
jl
addr16
xchg
mov
push
mov
rcl
push
in
xor
jl
and
xchg
stos
jne
pop
jl
or
sbb
mov
dec
test
mov
xchg
cmp
or
mov
mov
icebp
jb
test
sti
mov
fld
movs
out
xchg
stc
sbb
sub
lea
jge
jae
push
out
iret
test
mov
xchg
xchg
mov
fdiv
mov
jne
push
push
jl
mov
cld
mov
mov
outs
or
jl
cmps
dec
imul
jl
add
jge
sub
cmp
mov
and
fdivr
out
pushf
lahf
aas
sub
fbld
pop
jmp
test
ror
jl
loope
das
shr
pop
cmp
dec
out
or
mov
popa
or
sbb
or
out
dec
xchg
nop
test
or
in
push
cmp
popf
pusha
aaa
push
mov
and
mov
fnstenv
push
pop
add
mov
pop
dec
and
push
and
xchg
and
push
shl
jl
add
mov
icebp
jge
or
jmp
xor
mov
int
sbb
mov
jl
popf
ss
icebp
inc
into
jge
sbb
stc
aaa
(bad)
movs
test
xchg
(bad)
dec
fdivp
jl
outs
mov
mov
outs
aam
fcomp
push
jnp
mov
cmp
mov
push
xchg
jl
mov
(bad)
add
inc
pop
and
sbb
xchg
mov
mov
mov
(bad)
xchg
jl
hlt
fcompp
pusha
stc
cmp
pushf
dec
jl
imul
jl
sub
int
mov
jl
mov
int3
xchg
ds
mov
(bad)
cmp
rcr
push
cli
mov
movs
xor
ja
mov
mov
xchg
cmp
fs
pushf
js
mov
out
mov
je
sbb
ret
dec
pop
xlat
rcr
mov
push
dec
mov
cmp
cmp
sub
and
(bad)
(bad)
enter
arpl
mov
add
sbb
jge
mov
dec
push
push
and
jl
cs
mov
and
sbb
jb
ja
inc
or
cmp
icebp
and
inc
jl
push
or
mov
jns
jl
mov
ins
js
cmp
fmul
stc
fistp
lock
inc
dec
adc
shl
jl
das
jns
adc
pop
sub
jmp
stc
cmovge
mov
sbb
pusha
cs
mov
fistp
mov
es
pop
push
jno
and
or
xor
fidivr
xchg
mov
jl
daa
push
add
jns
retf
jl
ficom
(bad)
es
shl
sub
push
fmul
push
pop
sub
ins
cmps
fst
sub
mov
leave
jp
mov
jl
(bad)
sahf
sub
xchg
out
pop
jl
imul
popa
in
out
scas
fwait
lea
mov
retf
jmp
pop
sar
kmovw
sahf
jns
jns
mov
retf
mov
or
int
jmp
jb
jl
ja
or
lahf
idiv
mov
jl
cwde
out
fisttp
dec
adc
es
outs
jl
cmp
popa
imul
mov
or
xchg
push
push
and
pop
das
aas
sbb
ss
or
push
jmp
mul
js
inc
jl
scas
(bad)
cmp
jecxz
or
jl
cmp
jge
cdq
push
icebp
fild
outs
(bad)
pop
loopne
adc
imul
retf
cmp
ja
cmp
imul
cwde
jp
rcl
push
cmp
pop
outs
jl
imul
fnstsw
add
sbb
sub
imul
ret
popf
add
mov
mov
int
into
(bad)
ja
dec
jl
aas
xchg
or
and
add
std
push
pop
aaa
push
and
pop
xchg
jl
and
(bad)
sbb
ja
cdq
cmp
outs
sub
push
xchg
jae
pop
enter
div
push
loope
cmp
add
jl
mov
gs
pop
lods
jl
inc
pop
inc
rcr
cld
cwde
enter
xor
cmps
cmp
cli
sahf
sub
mov
mov
div
fstp
sub
sub
inc
outs
scas
pop
inc
sbb
jnp
push
mov
std
retf
les
cmps
pop
out
cwde
jno
xchg
(bad)
push
pushf
sbb
push
mov
test
xor
jl
popf
adc
repz
jl
or
js
and
daa
outs
mov
mov
cmp
call
mov
(bad)
mov
in
hlt
cmp
jnp
adc
les
pop
push
sahf
mov
fwait
add
fsubr
loop
in
jl
add
arpl
xchg
xor
mov
jl
push
je
sar
icebp
jl
jbe
int
leave
push
mov
or
cli
shl
int3
in
pop
out
jl
outs
cmp
xchg
(bad)
push
pushf
and
mov
xchg
jno
popf
sub
scas
jl
int
lods
xchg
lds
jl
in
outs
mov
nop
cld
xchg
pop
ds
cmps
jl
or
mov
icebp
inc
dec
sub
pop
jl
mov
jl
loop
sub
inc
xchg
adc
mov
dec
cld
xor
jl
mov
test
xchg
jns
std
or
jl
jecxz
add
jne
mov
pop
jl
jae
mov
pop
or
jl
cs
mov
ja
cmp
into
pop
push
lea
xor
daa
jmp
jl
retf
clc
iret
das
out
and
lahf
adc
leave
pop
add
popa
nop
and
cld
daa
push
in
rol
lock
icebp
and
jl
out
xchg
mov
pop
jmp
jmp
add
mov
dec
mov
mov
in
jl
dec
xchg
or
add
or
cmps
lods
sbb
jl
mov
push
sbb
loop
fimul
jb
shl
inc
ss
jl
jno
pop
dec
imul
lock
cmp
sub
adc
push
lock
cmp
(bad)
idiv
out
mov
mov
xor
inc
adc
es
dec
pusha
test
pop
repz
inc
pop
jl
(bad)
jle
sahf
jo
dec
call
addr16
or
jl
clc
add
sbb
cmc
jge
or
sbb
leave
sbb
jl
(bad)
sub
xchg
xchg
or
jl
shl
mov
push
fcom
movs
xchg
popf
jns
ins
mov
pop
and
cmps
push
jl
hlt
imul
sahf
and
jl
cmp
int3
stc
jl
xchg
push
lock
arpl
outs
hlt
mov
or
mov
pusha
out
in
xor
in
cmp
(bad)
mov
lds
adc
pop
cmps
mov
in
xor
loope
jnp
std
(bad)
xlat
outs
stc
in
jne
outs
pop
cmp
mov
pandn
adc
xchg
sbb
jecxz
aad
aas
pop
iret
out
push
or
adc
push
inc
mov
jl
mov
dec
loope
sub
ja
retf
stc
pushf
mov
inc
aas
jl
fprem1
mov
jl
mul
mov
in
js
sub
lods
ja
add
mov
jnp
rcl
mov
fild
lds
jns
or
out
cmp
stos
xor
stos
les
mov
xchg
inc
dec
movs
push
push
inc
jl
(bad)
dec
mov
ja
xchg
stos
lahf
cld
xchg
mov
(bad)
sbb
jbe
test
ds
in
in
(bad)
jl
std
xchg
cmp
cmc
xchg
pop
add
outs
push
cmp
repnz
aas
jl
or
xchg
push
movs
xlat
xchg
and
sub
cdq
les
sti
icebp
jl
aaa
pushf
xor
adc
cmps
sete
in
hlt
mov
jl
xchg
push
ret
jbe
mov
sbb
stc
sbb
in
jl
xor
retf
dec
inc
fimul
push
jl
push
ins
int3
jl
in
sub
cdq
lahf
sahf
add
jl
dec
xchg
mov
aam
push
jl
push
mov
outs
jno
ds
neg
test
or
xor
icebp
xor
jge
test
sbb
inc
cmp
aaa
xchg
call
out
ja
adc
(bad)
(bad)
addr16
cs
xor
lods
retf
pop
jl
idiv
jo
icebp
and
dec
cmp
mov
push
adc
adc
xchg
mov
dec
jg
mov
xor
jns
jmp
imul
rdtsc
cdq
(bad)
scas
mov
add
xchg
jl
sbb
fnstcw
mov
jl
jnp
jns
push
stos
sahf
push
cmp
push
fistp
(bad)
or
mov
cmp
and
lods
inc
cmp
push
mov
popa
cmps
jecxz
mov
(bad)
xchg
les
mov
das
dec
ret
jnp
adc
sar
addr16
iret
into
outs
addr16
test
fcom
inc
pop
push
sbb
ret
pop
push
nop
loopne
mov
pusha
lods
das
pop
jbe
or
jl
inc
sub
xchg
fimul
jl
push
dec
cmps
mov
and
jl
data16
in
and
pop
jl
push
sbb
add
mov
movs
and
repz
dec
jl
mov
and
clc
mov
out
add
stc
gs
push
or
jnp
cs
lock
xchg
and
or
call
idiv
push
stc
and
xor
push
mov
int3
and
sub
movs
mov
mov
mov
inc
cmps
mov
jl
mov
xchg
pop
jae
iret
add
movs
dec
sub
(bad)
pop
repnz
jp
inc
sbb
sub
int3
jl
xor
out
dec
adc
inc
ja
movs
mov
loope
dec
jge
push
jmp
ss
push
mov
adc
stc
(bad)
xchg
cmp
cli
xor
push
sbb
inc
jl
jo
idiv
mov
add
or
adc
sub
jl
jp
mov
outs
adc
mov
pop
mov
addr16
test
add
jl
and
int3
jl
scas
mov
mov
xchg
jl
jle
and
inc
jl
inc
mov
adc
mov
cs
mov
cmp
and
jnp
pop
(bad)
in
pop
popa
hlt
mov
jl
inc
cs
fisttp
jle
mov
cmp
cmp
jnp
loope
ja
push
lds
clc
mov
pop
les
mov
jp
xchg
sub
mov
mov
aas
or
add
add
fdiv
xchg
mov
or
(bad)
cmp
sub
out
jl
push
adc
pop
in
dec
jl
fidivr
fs
mov
xchg
mov
jmp
jl
and
fdiv
popf
jl
or
sub
jl
mov
das
hlt
sbb
pop
mov
xchg
icebp
out
mov
jl
in
push
xor
movs
cmps
mov
jl
and
aas
push
push
mov
inc
cmp
and
cld
lds
ret
or
enter
adc
add
out
adc
mov
pop
mov
loopne
adc
cld
inc
repz
fadd
add
outs
mov
fld
push
sbb
cld
fild
sub
jne
pop
hlt
mov
out
push
xchg
cwde
jl
jmp
mov
lods
addr16
jg
mov
mov
dec
pop
loopne
mov
ds
add
and
jg
(bad)
dec
or
mov
cmc
and
cwde
ins
jl
and
pop
loope
loop
mov
mov
add
pop
mov
mov
push
repz
outs
loope
inc
cmp
jl
es
popa
xor
jp
or
xchg
push
(bad)
jl
test
jne
mov
scas
ja
ins
sti
(bad)
xor
mov
inc
in
push
rcl
cdq
fcmovb
popf
inc
jl
inc
and
jbe
sar
(bad)
imul
pushf
push
pop
sbb
loope
sub
add
add
mov
mov
and
out
mov
pop
test
mov
jnp
jl
jne
mov
pusha
or
sub
inc
mov
jl
cmp
shr
out
das
add
cmp
bound
pop
jl
aaa
xor
jl
cmc
xor
pop
mov
jmp
popf
jl
push
sbb
push
jl
movs
cli
iret
shl
mov
cmps
push
shl
in
sub
xor
pop
call
push
and
call
cli
loope
add
cmps
outs
or
mov
cmp
fstp
out
mov
pop
dec
and
sahf
jp
pop
loope
add
stos
fidivr
retf
adc
jl
lea
push
aad
std
cmp
fsubr
in
push
xchg
lods
cmp
jge
jl
jo
push
pop
sub
xchg
pop
stc
pop
ins
movs
pushf
jl
(bad)
es
pop
sbb
mov
add
lds
jmp
pop
pop
gs
mov
repnz
cli
jecxz
mov
idiv
fstp
cdq
test
jl
mov
and
jmp
test
cld
pop
mov
dec
jl
mov
fld
jmp
cld
push
mov
outs
pop
mov
push
js
cwde
jl
jno
cmp
jl
mul
xor
push
jne
ja
xchg
(bad)
int3
mov
fs
xor
sar
in
aad
xor
and
mov
sub
pop
mov
lock
test
lahf
stos
mov
and
into
lea
pop
(bad)
pop
dec
adc
addr16
and
cwde
stos
sub
out
popf
mov
dec
clc
in
fs
xchg
jnp
jle
das
jb
jp
mov
ds
movs
test
mov
cmp
push
inc
test
imul
mov
call
mov
jne
inc
mov
cld
std
loop
icebp
je
std
cld
push
ins
data16
int
movq
stc
sub
(bad)
mov
adc
mov
sub
je
pop
jl
fbld
dec
jae
cmp
pop
adc
ja
push
sbb
div
jl
inc
jnp
xlat
leave
loope
jl
mov
mov
fs
pop
mov
push
adc
pop
cli
imul
inc
add
dec
push
clc
daa
dec
jne
not
xor
jae
loop
adc
(bad)
mov
test
ret
outs
jl
mov
fwait
adc
cmp
mov
mov
inc
lea
movs
outs
xchg
lahf
mov
pop
add
test
mov
test
leave
outs
mov
push
jecxz
cmp
xor
outs
les
cmp
jle
mov
adc
mov
sar
xchg
push
mov
add
data16
and
jl
rcl
aaa
xor
and
stos
data16
in
idiv
sub
es
in
pop
cmc
out
jmp
pop
add
and
cmps
rol
xor
data16
cli
jl
add
cmp
jl
hlt
leave
adc
ror
xchg
mov
iret
inc
ror
mov
mov
ja
ins
mov
in
in
lods
aas
retf
cwde
aad
jnp
mov
mov
fisubr
lock
jl
retf
push
hlt
and
shl
pop
and
clc
jl
mov
ja
push
jbe
fistp
mov
and
iret
pop
xchg
(bad)
cmc
movs
dec
adc
(bad)
in
jg
mov
ja
int3
cmp
mov
cmovne
js
pop
sti
xchg
cld
std
push
dec
test
popa
xor
mov
jl
xchg
data16
inc
outs
or
fiadd
push
rcr
shl
jl
jmp
xor
adc
aad
(bad)
dec
std
test
xor
(bad)
and
pop
jl
ds
mov
imul
jmp
pop
in
jl
jno
fdivr
jl
lods
jle
loope
xor
ja
cli
bound
xor
js
pop
and
mov
mov
outs
js
adc
cld
jl
or
jl
loopne
dec
dec
int
aam
sbb
jl
fnstsw
or
push
jl
xor
cmp
jmp
dec
je
mov
jmp
arpl
out
jl
xchg
push
repnz
jl
sahf
outs
add
daa
push
jnp
rcr
lods
popa
cmp
stc
daa
jae
aaa
jl
sub
inc
data16
inc
imul
dec
dec
sub
fsubrp
lds
mov
sar
sbb
inc
jbe
push
out
xor
or
es
sub
icebp
mov
pop
sub
add
dec
nop
mov
sbb
sar
mov
and
jo
jns
sub
push
jmp
out
mov
jo
pop
jle
jl
push
mov
add
arpl
jae
les
push
int
into
fsub
mov
loope
in
arpl
pop
fmul
outs
sbb
jle
jge
test
das
adc
pop
push
fs
enter
sub
jl
and
imul
gs
adc
(bad)
test
popf
fcomp
add
fsubr
jg
dec
jl
jae
mov
outs
test
and
outs
and
dec
jne
mov
xchg
cld
push
xchg
dec
and
jmp
pop
and
jne
ins
inc
fild
xor
jl
mov
adc
jnp
mov
aam
rol
adc
cmps
adc
mov
outs
mov
jno
hlt
jnp
mov
sbb
outs
rcr
int
jbe
lods
loop
cld
movs
adc
sahf
pop
jae
imul
jl
enter
(bad)
jl
cdq
call
out
js
mov
or
(bad)
cmps
jl
xchg
fmul
arpl
loope
daa
mov
leave
pop
cmps
repz
pop
pop
mov
jl
ficomp
rol
jl
sbb
sar
clc
hlt
push
xchg
inc
lds
xor
repnz
cmp
fsub
mov
sub
inc
loop
(bad)
in
jl
push
loope
adc
mov
mov
nop
xor
dec
or
xchg
jl
call
lahf
cld
xchg
add
dec
and
js
cli
xor
mov
adc
jl
cmp
enter
dec
add
loope
sar
leave
mov
retf
jl
push
xor
outs
jb
gs
mov
repz
adc
stc
or
and
aaa
inc
mov
jb
cmps
das
xor
or
adc
sar
repnz
jmp
ja
dec
les
aas
dec
jl
lds
call
jnp
sbb
pop
xchg
jns
jae
pop
sub
mov
ja
scas
dec
test
push
jne
xor
push
js
stos
cld
fsub
inc
lock
fnsetpm(287
xor
(bad)
iret
in
ja
fisub
nop
or
sahf
aad
inc
jns
cdq
pop
outs
stos
jl
cmps
movs
lods
ret
(bad)
and
sar
out
and
ja
fidivr
in
sub
adc
push
gs
pop
mov
shl
iret
xor
xor
pop
fidivr
or
add
push
jne
ret
pop
addr16
jbe
cld
jno
sar
mov
mov
in
xchg
or
iret
jnp
int
and
jl
cwde
inc
sub
xor
loope
lods
mov
xor
dec
or
xchg
fmulp
imul
pop
mov
test
loop
(bad)
mov
jle
add
jnp
inc
and
add
call
and
xor
mov
loope
jge
jne
fdivr
jnp
lods
(bad)
jecxz
and
jnp
gs
jns
pop
add
ja
aas
jb
pop
fwait
jecxz
cli
movs
pushf
pop
xchg
fdivr
cmp
push
jl
fnstcw
sbb
dec
push
in
jge
push
lds
shr
jl
stos
punpckhwd
das
retf
call
sbb
and
mov
jl
data16
movs
popf
push
cmps
mov
mov
jge
cmc
pushf
sti
or
pusha
add
int3
adc
cmp
jl
push
(bad)
fsub
xchg
pop
jl
pop
cli
out
es
sub
ss
adc
pop
jl
cmp
pop
mov
popf
mov
ds
mov
mov
ret
mov
jl
lea
outs
xor
rcr
mov
jb
mov
test
or
arpl
xchg
inc
cmp
mov
inc
ins
xor
addr16
jl
ins
jg
sub
sub
movs
sub
pusha
bound
inc
push
and
mov
jl
or
fbstp
imul
xor
mov
fsubr
lock
pop
fucom
sti
jl
rol
out
jl
and
xor
sar
(bad)
test
sti
popf
cld
jl
mov
push
fs
inc
xor
jl
adc
cmp
add
(bad)
mov
stc
(bad)
jmp
jl
outs
mov
xor
movs
pusha
jmp
nop
or
cmp
push
ja
mov
pop
repnz
imul
mov
jl
mov
or
dec
and
clc
jl
cmps
lods
les
js
xor
enter
inc
test
add
(bad)
bound
mov
xor
xor
lods
jnp
add
je
nop
cld
cmc
lock
leave
and
add
jl
xor
mov
jl
and
push
ret
xchg
imul
je
mov
lods
loope
mov
(bad)
pop
pop
push
cmp
cmp
adc
(bad)
pop
dec
outs
mov
arpl
xchg
ins
pop
ror
cmp
sbb
jbe
sahf
sbb
jae
or
adc
xchg
cld
inc
inc
mov
popf
and
stc
jge
dec
int3
dec
xor
fidivr
fsub
pushf
mov
aam
and
repz
jl
inc
fimul
stc
jle
mov
sbb
sub
and
push
pop
int3
pop
test
inc
cmp
aam
dec
pop
mov
add
daa
movs
adc
mov
adc
stc
cli
sub
mov
xchg
lods
jns
std
outs
jl
out
aas
push
pop
neg
aam
xchg
sbb
mov
fisttp
sub
cmp
pop
les
leave
pop
lds
pop
cld
dec
lea
xor
int
jnp
lock
(bad)
daa
jl
inc
sahf
out
enter
ja
arpl
xor
test
call
test
jl
xchg
push
imul
adc
mov
(bad)
dec
stc
and
sbb
or
jl
mov
fadd
repnz
dec
popa
dec
mov
jnp
push
fsubr
jb
lahf
aam
ja
cmp
inc
or
jl
test
and
in
mov
jl
dec
out
ins
push
lods
inc
jae
and
test
cmp
mov
dec
stc
push
pop
mov
mov
xchg
int3
and
push
push
sbb
fmul
fucom
pop
dec
mov
dec
lea
jl
ror
jl
cmps
pop
mov
sub
jl
xor
out
fidiv
mov
cmp
movs
mov
dec
movs
push
retf
pushf
fsub
or
jl
and
add
mov
push
jnp
jne
mov
adc
adc
sbb
adc
jl
push
xchg
rol
cmp
pop
inc
dec
das
repz
imul
xor
push
cmps
jae
cli
hlt
xchg
or
int
xor
jl
mov
cdq
mov
and
fdivr
into
popf
xchg
push
jle
ja
pop
xlat
xor
std
jl
push
data16
div
cmp
out
dec
(bad)
jl
clc
std
lods
mov
pop
mov
push
inc
jl
pushf
imul
aas
addr16
jecxz
xor
stc
jl
ror
push
adc
shl
sbb
call
pop
jl
sub
xchg
jo
pop
dec
pop
sar
outs
xchg
data16
outs
stos
cld
retf
and
cmp
push
iret
jns
fwait
in
pop
jnp
pop
sub
sub
test
or
inc
xchg
les
fwait
lahf
fnsave
pop
sbb
jl
sbb
rol
push
jl
in
xchg
add
and
inc
mov
jl
jge
icebp
sub
dec
xor
aam
mov
popa
jns
out
push
pop
idiv
sar
push
dec
inc
jl
ss
mov
stc
addr16
not
leave
iret
mov
popa
jns
int3
pushf
push
xchg
or
or
data16
jl
in
(bad)
mov
jae
xchg
cmp
pop
sti
mov
jl
lahf
and
pop
rcl
jl
pop
mov
aad
mov
movs
sbb
pushf
cmp
push
inc
push
fst
mov
jl
call
sub
push
fmul
test
cmc
sbb
(bad)
jns
std
push
push
mov
test
cmp
pusha
mov
movs
xor
add
pop
or
jg
adc
jle
jl
stc
cwde
int3
push
sub
out
hlt
mov
jns
ds
stc
pop
(bad)
jge
mov
inc
mov
jl
or
cmps
push
pop
jl
or
std
jl
out
xchg
push
dec
xchg
lea
cmp
pop
jne
lahf
loope
cmps
lods
ins
dec
jns
dec
jl
add
mov
jl
sahf
popf
aad
ins
sub
jl
push
mov
or
fs
add
jl
aad
test
jp
mov
jle
mov
ret
fnstcw
fcom
cli
add
scas
inc
jl
add
dec
and
jbe
jl
xchg
arpl
ins
push
test
mov
js
xchg
xchg
inc
mov
shr
pop
inc
out
jl
fucomp
pop
jge
stc
ds
shl
pop
cmp
movs
jl
or
inc
or
(bad)
cs
jl
adc
idiv
ins
cmpxchg
jbe
adc
ds
test
mov
jb
stos
jns
mov
mov
cld
ja
int
test
adc
aas
shl
jl
out
mov
jmp
or
cld
loop
push
xchg
cwde
mov
mov
lods
or
pop
jmp
push
jnp
gs
fsubr
ds
pop
jmp
stos
pop
cld
jl
adc
dec
push
fst
test
jae
call
jp
or
add
mov
(bad)
xchg
test
pop
cld
mov
jns
jl
aad
push
iret
adc
xor
add
mov
xchg
jge
cmp
mov
xor
inc
push
out
mov
jmp
aaa
pop
dec
push
daa
mov
outs
retf
shl
xchg
jl
and
or
bound
mov
in
xchg
and
push
pop
xchg
adc
idiv
and
outs
jmp
xchg
out
leave
push
pop
mov
dec
mov
pusha
and
push
jg
movs
dec
mov
je
adc
not
stos
nop
(bad)
jl
lds
or
jle
jl
call
jl
xchg
jle
pop
into
xchg
fmul
test
jae
popf
cmp
mov
bound
push
pushf
in
and
xchg
lea
retf
mov
and
lahf
aas
sbb
push
jl
inc
pop
push
inc
pop
in
outs
xchg
xchg
jge
cld
jnp
stc
(bad)
pusha
inc
jo
std
ins
adc
mov
xchg
nop
aam
jmp
add
xchg
les
jge
jns
imul
cmp
mov
stc
outs
jl
mov
mov
out
add
popf
xor
xchg
sub
fsubr
push
or
stos
out
cld
cmps
cmc
mov
sub
fld
pusha
in
(bad)
cmp
stc
sbb
fwait
inc
sahf
sbb
mul
jl
cmps
push
push
jmp
xchg
pop
movs
in
rcr
push
gs
jne
mov
adc
adc
out
push
mov
call
fisttp
jns
jle
out
jl
test
outs
ja
inc
pop
pusha
and
jle
fmul
movs
js
(bad)
xor
popf
xchg
jl
mov
hlt
das
push
jl
imul
stc
sbb
pop
jno
lods
jae
imul
xchg
shl
jl
(bad)
std
test
xchg
push
sti
(bad)
movs
ins
test
fnstcw
push
fwait
mov
dec
arpl
xchg
outs
sub
out
out
jbe
cld
je
lods
adc
dec
cld
dec
dec
mov
mov
jge
inc
out
test
xchg
xchg
mov
mov
cmp
nop
sbb
(bad)
in
sahf
pop
push
movs
(bad)
mov
loope
pop
mov
cmp
push
inc
jl
push
and
dec
pop
add
push
cmp
pop
lods
sbb
inc
mov
jl
mov
(bad)
xchg
call
(bad)
jl
aaa
xor
inc
jl
pop
mov
out
jne
push
jge
cld
adc
dec
retf
jnp
gs
push
cs
movs
xor
aam
jmp
and
jl
in
int3
cmps
mov
sub
and
cmp
stc
add
and
jl
call
aam
mov
inc
ja
pop
mov
ret
or
push
mov
cli
fdiv
pop
ja
adc
xor
mov
xor
jae
fist
movs
sti
inc
and
xor
ds
xchg
cmp
mov
mov
xor
mov
jmp
jle
cmp
jae
mov
jl
and
retf
sbb
ja
pushf
and
add
sbb
stc
pop
fwait
mov
push
(bad)
dec
lods
pop
push
jns
xor
mov
jl
(bad)
mov
jne
pop
push
or
fdiv
ret
xor
adc
mov
lods
mov
jns
das
hlt
test
cld
stos
daa
mov
jl
sub
dec
jl
arpl
int3
cli
dec
mov
data16
fidivr
imul
pop
popa
mov
outs
mov
push
jge
sub
jl
imul
lds
jl
cmp
(bad)
xchg
xchg
stc
aaa
(bad)
jl
ror
loopne
fiadd
sbb
loop
jae
inc
jg
cld
ja
and
bound
jns
jl
call
jne
repnz
lods
jl
xchg
les
std
popa
rcr
fdivr
cmp
fst
push
mov
and
jge
outs
cmp
jp
jle
jmp
pop
cmp
sub
push
mul
mov
dec
push
dec
mov
sar
mov
pop
pop
call
cmp
(bad)
mov
mov
rcr
test
xor
mov
pop
sti
mov
out
inc
stc
int3
jl
pop
jae
popf
out
jl
mov
mov
jl
ret
jge
inc
add
out
jne
rcr
int3
jl
jo
mov
mov
jl
cmp
shl
inc
or
int3
iret
sbb
mov
xor
sbb
data16
movs
jl
rcr
jl
fidiv
pop
in
jae
xchg
fild
jl
daa
mov
loope
test
push
add
cmp
cmp
sar
shl
and
jl
push
popa
in
scas
mov
loope
cmp
sub
into
fmul
mov
dec
inc
push
movs
in
sbb
sar
push
xchg
call
or
xor
lock
cmc
jl
cmps
out
arpl
stos
xor
xchg
mov
mul
jle
jge
inc
sub
fucomp
(bad)
jl
mov
ins
daa
inc
xchg
sbb
loope
(bad)
cld
mov
jb
mov
add
(bad)
fild
inc
xlat
mov
loope
test
jnp
(bad)
push
sub
pop
pusha
es
fdivr
sar
pop
xchg
out
add
hlt
lods
xchg
dec
jl
jae
jmp
dec
fistp
or
mov
jge
xchg
sub
stc
cmp
push
cld
stos
fistp
push
xchg
add
xchg
aad
hlt
xor
and
cmp
push
dec
lods
inc
xor
jl
jmp
fdivr
in
rol
out
cmps
out
scas
popa
dec
lods
adc
jl
lock
je
mov
jl
mov
mov
add
sbb
(bad)
sti
enter
in
mov
or
clc
mov
cmp
loope
inc
jl
shl
pop
and
ret
inc
mov
sahf
jl
xchg
popa
lock
add
js
daa
outs
or
lds
enter
dec
adc
je
add
leave
out
sub
out
mov
dec
sbb
adc
xchg
outs
pop
scas
cmps
cmp
lods
xchg
pop
sub
cli
adc
jno
cld
inc
out
xor
fstp
popa
cmc
mov
and
test
sbb
cli
mov
push
push
(bad)
cdq
jmp
xor
inc
mov
es
mov
ja
jecxz
ins
clc
in
xor
aas
push
test
pop
pop
(bad)
jmp
jl
or
in
jl
loop
data16
xlat
jl
mov
shl
jl
add
aas
loope
fdivr
cmp
push
mov
and
mov
in
add
sub
push
fs
jl
push
xor
and
jl
ret
std
mov
pop
inc
sub
popa
fisubr
jl
out
dec
push
arpl
inc
fadd
inc
add
jnp
add
popa
mov
fimul
loope
xchg
popf
pushf
outs
pop
(bad)
ins
or
imul
jae
jo
mov
jno
clc
ss
sub
and
jle
mov
or
xor
lds
data16
jl
or
stos
mov
jl
adc
cli
xor
mov
fcmovbe
push
adc
loope
dec
stos
sbb
jl
add
fadd
mov
sub
push
movs
inc
push
jno
mov
push
sub
cmp
xor
outs
jbe
icebp
xchg
sbb
cld
addr16
pop
stc
adc
or
or
shl
cmp
test
pop
mov
inc
js
sub
stos
jge
xchg
fwait
push
scas
xor
test
jnp
arpl
sub
jl
sbb
mov
sar
dec
cmp
jl
shl
fs
(bad)
(bad)
mov
shr
movs
inc
pushf
jo
mov
xchg
pop
xor
(bad)
cmp
inc
call
mov
jns
dec
jne
lods
or
mov
adc
xchg
outs
xor
jbe
aaa
dec
pop
pop
and
icebp
mov
xchg
inc
jl
daa
or
xor
and
pusha
sbb
aaa
stos
xor
mov
mov
add
mov
sbb
jmp
jne
jl
xchg
and
cmps
addr16
jl
xchg
push
mov
div
push
loope
sub
inc
sahf
(bad)
fcomi
inc
jns
arpl
pop
dec
and
cmp
sub
jp
xchg
add
addr16
or
mov
xchg
std
retf
jmp
lods
add
xlat
fdivr
and
pop
jl
(bad)
mov
cmps
(bad)
ds
sbb
test
jge
leave
or
pop
add
dec
jo
jl
jno
xor
jnp
iret
jl
(bad)
cld
ficomp
dec
and
enter
(bad)
xchg
cwde
pushf
sub
jl
sub
fcom
mov
enter
ret
push
pop
dec
addr16
inc
sbb
in
jmp
shl
jl
cmps
(bad)
mov
imul
jl
jo
add
add
pmaxub
push
or
cmc
mov
jnp
push
div
les
jecxz
inc
cmp
push
retf
dec
sub
shl
jl
and
mov
cld
hlt
jecxz
push
mov
inc
fwait
dec
and
and
into
outs
loope
jae
dec
add
cld
pop
jl
add
mov
mov
pop
jl
fs
push
inc
repnz
das
pop
pop
lods
loop
icebp
jp
mov
dec
push
fdiv
fucomip
xor
mov
arpl
fwait
int
mov
lds
push
jl
mov
inc
les
push
jl
add
fstp
jge
mov
mov
repnz
repz
inc
xchg
xchg
and
ss
mov
inc
sahf
sub
jge
imul
and
jge
adc
add
sti
and
div
fwait
lods
ja
cwde
popf
mov
aaa
xor
ds
pop
mov
or
(bad)
lahf
ret
xchg
jl
pop
mov
(bad)
jp
out
adc
cmp
jnp
mov
mov
jl
shl
cmp
jb
mov
(bad)
in
sbb
cmp
sar
rcr
test
sub
aad
ss
or
cdq
in
push
jge
add
mov
in
jnp
adc
lods
jbe
mov
adc
(bad)
mov
jl
add
jl
xor
lock
(bad)
hlt
js
sub
(bad)
out
in
arpl
fsub
cmp
pop
jecxz
jl
add
dec
push
jl
enter
fcom
mov
mov
pop
mov
mov
icebp
or
jge
push
mov
dec
rcl
jno
jl
mov
sub
fdiv
mov
(bad)
cs
in
jl
and
mov
push
inc
push
sub
mov
and
lods
fiadd
jo
outs
push
dec
sahf
xor
hlt
in
retf
pop
add
test
or
cmp
into
sub
ins
sub
ins
cmp
enter
mov
xchg
pop
scas
jbe
inc
and
xchg
adc
fsubr
cmp
enter
sbb
push
loope
fnstcw
call
ss
js
sub
cwde
cmp
jl
lahf
outs
das
fbstp
in
jae
cdq
pop
and
xchg
jl
add
dec
jl
inc
mov
sub
in
enter
pop
xor
push
jl
aaa
add
inc
idiv
mov
sbb
add
cld
push
and
fcom
xchg
push
jl
test
outs
fidivr
pop
mov
adc
jmpw
jnp
pop
fisub
loop
ds
fnstsw
mov
or
pop
xchg
lea
jl
jnp
(bad)
repnz
jl
ins
aam
add
cs
jp
fdivr
adc
sub
int
dec
jl
shr
xchg
cmp
sbb
fmul
movs
inc
loope
test
jb
in
nop
lea
fs
jle
xchg
push
mov
jl
pop
div
jae
inc
sub
xchg
jns
mov
stos
sbb
movs
clc
daa
jl
add
fbld
pop
pop
jl
(bad)
mov
daa
jl
popa
mov
idiv
push
xchg
dec
dec
push
jb
scas
rcr
mov
jl
jbe
pushf
pop
jo
stos
jl
fwait
sbb
pop
jl
mov
call
jp
pop
mov
jnp
cmp
push
idiv
inc
out
sub
xchg
mov
jl
cwde
pop
(bad)
dec
sub
inc
popa
bound
adc
xchg
loopne
jno
ficomp
push
das
mov
xchg
rcl
adc
dec
dec
and
jl
in
pop
test
jl
pop
neg
inc
out
inc
inc
push
jmp
cmp
clc
adc
pop
mov
ss
mov
outs
mov
fs
jne
popa
xor
daa
jl
adc
mov
dec
add
inc
lock
retf
jnp
push
dec
ins
stos
rcl
cmp
pop
jne
lds
cmp
mov
mov
stc
test
xchg
dec
daa
pop
sub
jl
mov
popf
push
rcl
repnz
sbb
aam
mov
mov
inc
fstp
jne
lods
sti
leave
cdq
loopne
aad
jl
and
push
push
movs
push
jl
jns
loop
or
scas
(bad)
xchg
inc
das
add
jl
mul
mov
pop
mov
cmc
jmp
push
retf
and
jl
adc
fisubr
sahf
add
mov
test
push
inc
jmp
enter
aad
jl
shl
idiv
push
jl
pusha
inc
adc
sub
xchg
dec
test
ins
inc
std
jl
jp
int3
and
xchg
inc
jl
jmp
adc
jle
ja
xchg
ds
scas
mov
int3
dec
shr
mov
mov
jp
push
aad
sub
fisub
jge
dec
cmp
test
xchg
cmp
pop
add
fstp
stc
ret
repz
jl
mov
imul
popf
jl
adc
jno
fsave
pop
and
mov
scas
sbb
adc
cmp
ja
mov
ror
pop
fwait
out
jnp
or
cld
cmp
sar
push
pop
jl
(bad)
pop
jmp
inc
sub
mov
xchg
je
xchg
std
fwait
jns
cld
mov
sub
jnp
ds
and
xchg
fst
call
or
pushf
iret
sub
push
jnp
movs
adc
mov
jmp
and
jge
int
imul
cld
pop
in
mov
push
cmp
cdq
adc
mov
idiv
sbb
dec
js
mov
cmp
add
fiadd
nop
jge
inc
pusha
adc
jge
jl
sbb
jns
std
adc
cmps
fstp
lock
jl
xchg
ret
ja
mov
(bad)
xchg
jecxz
fwait
pop
sbb
mov
add
and
or
pop
fadd
test
jl
int
jecxz
iret
std
sti
mov
sbb
sub
(bad)
loop
mov
push
lahf
outs
xor
xchg
cs
jl
cmc
rol
sub
stos
ja
xor
pop
jl
or
scas
jl
push
jns
add
cli
mov
mov
mov
ret
mov
push
mov
jl
ficomp
and
inc
mov
in
loop
(bad)
fsub
mov
int3
popa
aam
movs
and
push
pop
sahf
mov
retf
adc
push
outs
push
scas
push
sbb
mov
push
fstp
xchg
pop
mov
jb
retf
jecxz
push
xor
push
inc
stos
and
outs
neg
aad
loope
mov
mov
repnz
test
xor
out
inc
out
cmc
fdiv
(bad)
outs
jecxz
jmp
mov
pop
and
mov
sub
mov
mov
or
lods
pop
shl
lock
jns
adc
inc
dec
out
iret
lods
jl
dec
call
std
jmp
push
mov
rol
pop
sub
xchg
popa
fstp
loope
push
int
movs
ret
ja
and
sbb
mov
sub
aaa
jl
mov
fiadd
cli
mov
xchg
outs
inc
(bad)
jl
bound
iret
shl
cmps
cmp
movs
idiv
dec
stos
adc
xchg
mov
mov
mov
mov
pop
rcr
sbb
and
xchg
sub
xchg
loope
and
lods
test
in
jnp
imul
mov
jl
mov
out
jl
scas
(bad)
stc
cwde
push
sub
adc
push
inc
xor
retf
pushf
mov
sub
and
pop
popa
jl
xchg
xchg
jnp
add
dec
in
in
test
xor
mov
sub
mov
mov
jns
jp
sbb
push
and
data16
dec
clc
jl
xchg
test
push
add
iret
dec
dec
xchg
je
dec
add
jl
mov
mov
rol
mov
(bad)
mov
xchg
mov
or
jl
loop
in
push
xchg
scas
imul
bnd
pop
add
xchg
or
out
sbb
es
mov
mov
push
and
inc
sahf
pop
aas
jl
or
add
mov
fild
jl
idiv
jl
mov
hlt
push
jge
dec
jl
leave
mov
fistp
jl
push
lods
jne
xchg
test
in
scas
and
xchg
mov
or
jl
mov
xor
push
stc
arpl
iret
loopne
sub
jl
std
xor
jmp
stos
pusha
outs
fstp
push
inc
and
aaa
popa
mov
push
movs
jmp
mov
stc
int3
mov
icebp
dec
mov
jns
pop
std
(bad)
mov
jmp
sub
adc
xor
dec
sar
(bad)
inc
shl
jge
mov
stos
lods
pop
mov
or
mov
and
popa
jl
mov
xchg
fdivp
mov
jl
div
popa
sbb
add
das
sub
popf
jl
out
cmp
jl
(bad)
sbb
fsub
mov
leave
push
ja
lahf
lea
out
dec
inc
ffreep
fldenv
add
sbb
lods
xor
test
sub
jmp
jl
imul
frstor
add
mov
fld
(bad)
xchg
jl
pop
imul
cmp
sar
xchg
xchg
pop
jp
ja
outs
mov
xor
hlt
cmp
pop
pop
mov
popa
bound
adc
lahf
test
mov
lods
loope
or
or
dec
add
out
xchg
pop
or
push
xor
stos
lea
inc
sub
mul
jl
xchg
stc
jmp
mov
jbe
arpl
add
sub
jg
inc
jl
ins
mov
push
pop
stc
cmp
push
sub
add
stos
inc
mov
mov
jle
mov
lods
mov
jb
scas
and
pop
ja
mov
dec
int3
fwait
ja
nop
and
pop
pop
out
or
jl
in
stos
xchg
pushf
mov
(bad)
(bad)
and
out
cmp
xchg
mov
(bad)
scas
std
inc
imul
jl
scas
shl
retf
in
jl
cmp
aaa
jl
add
dec
fistp
fwait
jge
sar
cli
adc
fadd
jl
mul
xchg
out
call
lea
xor
push
xor
jmp
sbb
jge
test
lds
mov
pop
int3
pushf
xor
dec
jnp
daa
frndint
(bad)
fdivr
dec
cmp
adc
fidivr
popf
jecxz
mov
cmp
mov
xor
add
jl
iret
mov
es
inc
lahf
loopne
pusha
cmps
fwait
xor
pop
jnp
xor
(bad)
mov
dec
outs
lock
adc
inc
mov
sahf
xlat
jl
std
push
dec
aaa
enter
mov
daa
adc
add
js
or
push
add
stc
jl
mov
mov
lods
xor
outs
cld
sub
push
imul
mov
and
call
and
adc
into
xor
in
scas
inc
test
jl
(bad)
jbe
int
and
jl
addr16
cmps
cmp
jl
lds
pop
jl
dec
cwde
xchg
sbb
jmp
mov
mov
push
cmps
xor
ds
push
aam
shl
stc
dec
jl
div
in
and
mov
(bad)
jl
mov
mov
ficom
outs
movs
pop
push
mov
gs
cmc
xor
int
jo
leave
jl
(bad)
or
jge
dec
and
mov
sub
idiv
inc
aas
sub
jne
pop
cmp
iret
inc
rdtsc
sbb
or
mov
lds
gs
jae
cwde
jl
xchg
ficomp
daa
xor
dec
sahf
adc
sbb
mov
jnp
(bad)
xor
in
xchg
mov
in
idiv
stc
fwait
pop
movs
dec
sbb
jns
imul
and
mov
movs
dec
dec
jl
xchg
jne
sbb
(bad)
mov
cmp
mov
idiv
xchg
push
pop
dec
pop
loope
push
jl
scas
jb
sahf
(bad)
jl
sub
pusha
sbb
pop
sbb
popf
fnsave
mov
pop
jl
push
retf
or
mov
call
cli
lock
imul
inc
jo
stos
jmp
sub
arpl
rol
push
mov
rol
outs
(bad)
sti
and
adc
dec
pop
add
jl
stc
xchg
lahf
lods
cwde
lods
mov
hlt
mov
cmp
pop
jl
arpl
ins
es
inc
test
cld
inc
jmp
mov
push
iret
sbb
call
lods
xchg
call
ja
adc
enter
mov
dec
mov
jl
mov
pop
iret
mul
in
outs
sub
ret
popa
and
pop
mov
adc
shl
ja
or
mov
jmp
add
jl
out
jb
mov
xchg
jl
lods
cmp
sar
jmp
xchg
add
push
sbb
mov
call
add
push
jl
adc
cmp
sub
mov
rol
scas
stc
jl
aas
fs
jnp
gs
cs
dec
jle
jl
add
mov
call
dec
mov
jae
ror
ins
sbb
mov
je
push
dec
mov
outs
adc
enter
push
sbb
mov
push
gs
enter
lods
ja
adc
cmp
bound
jl
pop
ins
and
push
lea
xor
xchg
lahf
jl
and
dec
inc
ja
pop
ret
lods
not
aaa
dec
ds
add
jnp
or
not
adc
inc
popf
jns
aas
(bad)
loopne
sub
dec
jl
sahf
test
sbb
(bad)
inc
xchg
mov
repnz
xchg
ficomp
add
inc
fs
push
fsubr
push
jns
ja
or
pop
ja
stos
(bad)
imul
popa
rcl
jl
pop
dec
push
(bad)
sub
inc
movs
sbb
inc
jl
add
je
xor
mov
or
dec
jl
call
jne
fnstcw
jl
imul
aas
xchg
sahf
int
dec
out
xor
scas
mov
jnp
xchg
popf
aam
jl
mov
mov
sbb
arpl
test
mov
je
in
jl
push
in
xchg
xor
scas
jmp
jge
sub
push
movs
out
or
addr16
dec
push
sub
mov
xchg
test
add
dec
jl
cmps
or
scas
pop
stc
out
fist
test
ja
xor
pop
iret
outs
add
call
xor
push
ja
xor
mov
dec
popa
aam
sbb
mov
inc
fnstcw
lea
inc
adc
cwde
pop
and
adc
aad
outs
jl
sti
je
inc
cmp
xchg
push
jl
jge
inc
xchg
bound
jl
sti
adc
popa
jbe
test
xchg
cmp
stc
cld
out
fst
out
jl
cmp
and
fild
(bad)
in
and
jb
loope
xchg
out
mov
ja
cmp
sbb
xor
xchg
cmp
pop
mov
xchg
retf
lahf
sti
sub
xchg
rcl
mov
cmp
ja
jnp
xchg
jl
das
xchg
pusha
or
lds
lea
cmp
(bad)
test
outs
dec
std
inc
mov
mov
inc
ja
push
sbb
sbb
jmp
cmp
and
addr16
mov
push
jl
jecxz
mov
popa
and
mov
sbb
xor
cmp
adc
dec
pop
pop
fisub
adc
jge
jbe
(bad)
jl
(bad)
mov
jl
mov
pushf
and
clc
cdq
pop
and
stc
stos
arpl
jg
mov
jl
imul
inc
jl
dec
scas
cmp
cmps
push
mov
push
pop
je
loopne
adc
dec
in
mov
mov
jne
(bad)
ins
ins
jno
inc
pop
mov
push
icebp
rcl
cmc
push
and
add
(bad)
pop
cmp
loop
jp
js
or
sar
arpl
cmp
and
jns
xchg
int3
cmc
jecxz
add
fbstp
dec
(bad)
into
jl
fldenv
cmp
out
inc
aas
ficom
pop
(bad)
(bad)
pop
xor
and
pop
ja
into
fld
lods
pop
retf
(bad)
lods
jl
outs
pop
clc
mov
xchg
mov
jl
test
iret
fdivr
int3
sti
pop
mov
scas
jl
inc
mov
ffree
jge
lahf
in
test
getsec
jl
addr16
(bad)
aas
sub
jecxz
jg
aam
movs
sub
loopne
mov
jl
and
lods
fisubr
push
test
pop
adc
mov
or
jl
jns
jg
bound
pop
out
push
mov
in
pop
stc
cmp
imul
jl
(bad)
mov
mov
stc
inc
xchg
lods
dec
repz
jl
push
and
push
jmp
mov
es
jl
mov
jno
jl
test
jl
xchg
inc
push
xchg
ins
fidiv
jl
push
das
jnp
lods
inc
jae
jns
pushf
mov
cmps
pop
push
jl
stc
inc
bound
loope
jp
fistp
ins
in
cmp
xlat
ss
jmp
mov
mov
(bad)
fnstcw
push
or
mov
jl
push
push
inc
clc
movs
mov
sbb
stc
mov
cwde
push
mov
dec
aad
call
mov
fbld
sbb
add
(bad)
cmc
movs
push
fstp
dec
repnz
mov
jp
shl
ficom
dec
jl
mov
sub
imul
lock
jge
sbb
cmp
push
aaa
out
dec
div
cmp
aam
jbe
mov
cmp
mul
cdq
push
or
jge
push
mov
mov
jl
push
push
dec
es
mov
or
stc
mov
push
pusha
push
fidivr
mov
int
(bad)
(bad)
enter
inc
mov
ja
and
pop
sbb
push
cmp
add
ss
mov
ins
jl
xchg
push
mov
mov
rcr
(bad)
jg
push
mov
sub
aad
in
mov
ds
pop
jno
cmps
cmp
jnp
xchg
inc
dec
mov
aam
inc
jge
cmp
pop
xchg
jl
xor
cmps
mov
add
fsub
push
lock
mov
addr16
or
test
mov
jl
pop
dec
das
inc
mov
lds
js
mov
add
add
outs
fs
jl
or
fisub
cmp
(bad)
out
jl
add
jbe
ror
test
jl
jns
pop
mov
inc
loop
mov
sub
mov
jge
dec
mov
sbb
jl
mov
(bad)
jl
das
idiv
jmp
clc
fisub
xor
push
outs
aad
lahf
jl
mov
dec
inc
movs
cld
mov
mov
xor
pop
stc
test
shl
or
mov
enter
mov
fisttp
jl
call
xchg
mov
jl
fsub
pop
stc
jp
jl
ss
mov
int3
rcr
(bad)
daa
sahf
push
xor
mov
inc
fst
imul
and
adc
push
xor
iret
sbb
sub
pop
mov
jmp
pop
fucomip
jns
or
mov
jne
cmp
pop
(bad)
fldenv
idiv
dec
pop
mov
cmp
push
mov
push
jecxz
ja
sub
cdq
dec
cld
(bad)
pop
mov
jl
xchg
std
jge
popf
adc
inc
or
lods
dec
mov
jl
movq
sbb
in
fstp
int3
jmp
jne
sbb
sub
jl
(bad)
adc
pop
rcl
pop
fcom
or
sbb
xchg
jl
jo
mov
fsubr
das
jl
mov
push
xor
or
dec
jl
ret
pop
ss
sub
cmp
int3
shl
jl
arpl
mov
inc
jp
cdq
jl
inc
test
jl
or
lods
or
pop
into
jl
fstp
mov
jl
xchg
cmp
out
push
mov
adc
mov
(bad)
idiv
pop
mov
repz
(bad)
push
in
sbb
sub
cmc
retf
jp
inc
cld
lods
adc
xlat
mov
mov
movs
retf
sub
xor
pop
pushf
xchg
jl
or
daa
sub
lock
(bad)
jp
jl
inc
(bad)
dec
push
div
cmp
jge
cs
adc
jl
pop
fs
addr16
(bad)
sar
xchg
mov
or
cld
cmps
push
sub
adc
xlat
jmp
dec
jl
jmp
mov
ja
xchg
int3
test
inc
es
mov
aad
lock
scas
sub
jl
dec
retf
xor
dec
mov
jnp
leave
and
stc
pop
jl
pop
cmp
(bad)
sbb
inc
mov
and
ss
dec
cmp
push
inc
dec
pop
xor
jl
(bad)
mov
mov
std
cmp
sub
test
add
jl
movs
fsubp
rcl
mov
ja
jl
movs
add
mov
jl
dec
daa
inc
fisubr
sub
pop
shr
xchg
dec
push
mov
jl
add
shl
cmp
xor
sar
pushf
stc
jne
jl
cmps
mov
dec
jl
fstp
ror
cmp
add
jl
outs
popf
ins
jns
push
imul
scas
sbb
fdivr
cmp
pop
push
inc
push
pop
or
stos
outs
shl
sbb
jae
pushf
jnp
pop
push
cs
test
jl
inc
sbb
shr
stos
outs
cmc
(bad)
xchg
inc
inc
jns
pop
pop
jmp
and
add
enter
ins
jl
lds
sub
fdivr
pop
mov
mov
jl
js
pop
out
les
mov
repz
jp
sub
cld
xchg
push
push
movs
jl
sar
push
jl
adc
shl
cwde
pushf
lods
add
xchg
stos
cmp
std
test
jl
cmc
xor
jl
ja
jno
jmp
out
mov
arpl
adc
adc
movs
and
add
mov
cwde
call
xchg
inc
ret
scas
mov
js
aaa
jp
adc
jmp
jnp
ror
lods
push
xchg
mov
jl
dec
sub
adc
mov
pop
stc
leave
ret
cmps
jl
dec
movs
aaa
mov
jl
xchg
mov
sbb
cmps
sbb
popa
sti
cld
movs
jbe
xchg
movs
mov
inc
nop
bnd
mov
push
aas
or
mov
fs
ds
or
dec
or
scas
adc
sbb
and
and
cli
or
add
jl
lds
inc
jl
in
xor
jmp
sbb
js
scas
push
cmps
ret
jl
in
jae
leave
scas
out
push
std
sar
cmps
or
jns
pop
xchg
jp
popa
ja
shr
jl
cdq
mov
outs
push
int
xor
cmp
cmps
fsub
cld
push
jecxz
fldenv
std
mov
mov
mov
popf
push
ja
jge
mov
scas
sbb
(bad)
pop
mov
lods
push
std
sub
jns
std
mov
sbb
xor
dec
xchg
xor
call
pushf
std
pop
mul
cmps
mov
ss
movs
mov
cmp
retf
outs
jae
ins
adc
lods
pop
rol
mov
xor
and
inc
clc
fcom
inc
xchg
movs
in
pop
push
aaa
jl
(bad)
jmp
jbe
adc
in
push
iret
or
int
or
mov
pop
std
and
rol
movs
lds
or
scas
fwait
lods
outs
out
mov
cmp
jl
pusha
iret
in
fcom
stos
jb
mov
mov
push
cmps
or
xchg
inc
(bad)
cwde
push
cld
dec
idiv
pop
mov
push
adc
pop
outs
jl
in
imul
ds
pop
jmp
jl
cdq
icebp
adc
jl
xchg
mov
inc
xor
jl
jbe
imul
mov
ds
adc
jl
test
or
in
jl
fsub
stos
mov
cmp
sbb
pop
jg
push
aaa
xor
inc
jns
movs
frstor
repz
mov
pop
xor
or
mov
mov
jl
push
inc
(bad)
sbb
hlt
lahf
outs
jne
(bad)
mov
or
jg
cmps
inc
in
jge
icebp
mov
test
std
push
push
(bad)
jl
pop
shl
jl
mov
(bad)
jl
pop
sbb
cwde
out
cmp
cwde
popa
cmp
sbb
sbb
jl
jge
fidivr
outs
(bad)
pop
dec
std
push
inc
jl
scas
dec
lods
xor
test
sub
jne
push
or
add
imul
cmc
out
icebp
jge
cmps
stos
inc
cmps
sub
out
retf
nop
cmp
sub
test
dec
cmps
movs
jl
push
xchg
out
xlat
(bad)
mov
imul
sub
mov
cmps
scas
not
xchg
scas
add
(bad)
lods
fsubr
pushf
inc
stos
xor
cmp
sbb
ins
or
ja
cmps
push
pop
lods
ja
fwait
mov
iret
fcom
inc
movs
stos
pop
xchg
jl
(bad)
mov
push
xchg
push
cmp
out
stc
(bad)
scas
ins
jl
mov
pushf
pop
push
cld
pusha
dec
in
cmp
adc
mov
daa
mov
gs
mov
std
jbe
push
and
test
jl
adc
and
repz
jge
shr
xchg
js
dec
lea
lods
lahf
dec
jl
cmp
sub
sbb
adc
lods
sahf
ja
stc
dec
in
daa
icebp
hlt
inc
jl
outs
mov
fidivr
test
test
jmp
lds
xchg
inc
add
or
xor
jl
jns
sbb
push
sub
(bad)
mov
int
sahf
imul
stos
sbb
test
mov
mov
lahf
cmc
mov
sbb
cmps
outs
cmp
mov
or
mov
xchg
inc
pop
push
adc
leave
stc
jl
jo
pop
imul
xchg
jmp
scas
movs
and
and
adc
mov
mov
jl
ins
jne
aam
fld
lods
xor
shl
fnstenv
(bad)
cld
movs
jge
mov
jge
or
push
dec
repnz
fisub
and
in
ja
jmp
add
clc
sbb
aaa
adc
jl
mov
js
jl
dec
cmp
sbb
xchg
in
xchg
sar
push
xchg
mov
push
in
xor
das
in
mov
cmps
jl
lods
gs
inc
cmc
xor
sti
pusha
or
mov
cmp
gs
arpl
inc
or
or
aad
mov
into
mov
les
pop
sub
jl
dec
addr16
sub
jl
sti
or
add
scas
jg
dec
rol
jmp
(bad)
lods
mov
cwde
and
pop
mov
stc
pop
inc
cld
das
dec
outs
xchg
ins
lea
jae
sub
or
dec
dec
shr
test
dec
cmp
mov
stos
dec
imul
in
jl
movs
outs
es
ret
pop
ss
pushf
fwait
push
(bad)
xchg
xchg
mov
mov
scas
dec
jl
sub
lods
outs
push
ins
outs
adc
fcomp
stos
leave
mov
fwait
lahf
inc
push
cmp
sub
outs
out
shl
or
inc
jae
inc
pop
add
dec
out
sar
frstor
int
mov
fdivr
(bad)
push
scas
cmp
mov
fsubr
mov
xor
jge
dec
dec
and
imul
jae
(bad)
jl
outs
movs
ins
pushf
add
xchg
add
mov
add
outs
stc
imul
sbb
dec
jl
stos
mov
push
pusha
cmp
cmp
test
cld
push
push
arpl
jl
sub
js
lods
pop
pop
cmps
dec
lods
stos
add
cmc
mov
movs
mov
cmp
jl
xchg
or
mov
(bad)
pop
js
xchg
sbb
sbb
push
pop
cdq
shl
mov
inc
jns
scas
sub
sbb
push
pop
in
mov
jl
push
idiv
js
icebp
cli
stc
cmps
cld
push
cmps
xchg
mov
dec
loop
mov
enter
jmp
cdq
fmul
mov
mov
outs
ja
xor
dec
add
popa
xor
cld
and
stos
jl
(bad)
std
mov
movs
dec
pop
push
pusha
movs
jmp
sub
lds
dec
int3
mov
dec
popa
mov
push
inc
push
mov
jo
push
stc
xchg
aam
inc
test
cld
or
push
mov
jnp
out
push
fld
jmp
ins
mov
mov
jl
dec
lea
aas
mov
push
jnp
repz
mov
or
sbb
clc
and
icebp
sbb
cmps
mov
test
push
dec
div
sub
movs
cdq
(bad)
jnp
xchg
rcl
and
inc
leave
push
outs
xor
mov
div
cmp
test
loope
dec
cmp
cmp
ins
repnz
jl
sub
outs
std
shl
cmc
pop
icebp
lahf
fsub
cmp
js
sbb
cmp
(bad)
popf
mov
fst
cmp
movs
(bad)
mov
pop
sti
test
cmp
mov
outs
mov
jle
outs
jno
hlt
scas
popa
in
dec
xlat
cld
inc
inc
fdiv
mov
sbb
aas
icebp
adc
stc
enter
cmps
mov
mov
out
mov
cmps
(bad)
cmc
fbld
or
cmp
sub
std
js
icebp
pop
outs
dec
mov
fs
or
pop
push
push
add
add
jl
pop
int3
movs
dec
mov
pop
cdq
push
mov
cmp
rcr
mov
(bad)
xchg
sub
mov
inc
push
pop
jo
jl
inc
stc
std
dec
dec
ret
lock
call
mov
lahf
sar
cmp
mov
jnp
jg
test
mov
pop
sub
movs
xchg
shl
loope
popa
xor
sub
and
adc
(bad)
stos
rcr
mov
mov
loope
jge
mov
arpl
cld
or
jge
mov
cmp
inc
clc
jne
sub
fisub
pop
sbb
test
push
ds
mov
lods
push
cmp
(bad)
cmps
rcl
sar
mov
jmp
in
outs
ja
add
fadd
aas
sti
mov
movs
aad
test
in
jl
out
xchg
cmps
std
xchg
stc
ja
cmc
xor
sub
mov
cmps
jge
mov
lahf
popa
mov
jl
pop
ins
push
imul
jl
test
cdq
mov
push
addr16
push
std
pop
sub
mov
ins
jl
out
popa
(bad)
cmc
jns
ja
lds
pushf
lods
xchg
jl
adc
xor
jl
mov
push
clc
push
cmp
cwde
dec
mov
outs
xchg
cmp
(bad)
in
push
out
dec
ja
std
cmp
xor
sbb
adc
cld
dec
stc
inc
cmc
call
jnp
mov
pop
inc
mov
ja
mov
cmp
div
jno
out
inc
pusha
inc
pop
jnp
jne
mov
xor
or
sub
pop
xchg
pop
or
jecxz
icebp
xor
pushf
(bad)
leave
cmc
add
jl
in
test
dec
jle
or
or
add
repz
movs
int
inc
xchg
inc
add
jl
sahf
mov
push
or
add
jmp
jge
frstor
test
mov
ins
xchg
dec
xchg
test
inc
js
imul
jno
ins
push
jp
(bad)
mul
cld
std
dec
outs
popf
out
mov
xchg
ins
jae
xchg
jns
popa
cmp
aas
pop
jl
lds
jl
push
mov
sub
adc
in
fdivr
sub
scas
xchg
jl
xchg
jo
push
fild
and
or
add
cmc
mov
mov
retf
int3
sahf
jl
pop
jp
pop
jb
outs
cwde
push
xchg
bound
push
cmp
xchg
inc
fist
xchg
xor
mov
nop
mov
inc
repz
xor
test
nop
sbb
mov
pop
or
sahf
push
stos
push
jge
jl
test
out
xchg
jl
push
in
add
clc
in
fwait
ss
ins
push
dec
push
ds
xor
scas
cmps
and
and
mov
jns
jl
dec
jnp
inc
mov
outs
pushf
std
test
jl
pop
icebp
sbb
jl
(bad)
stos
mov
scas
and
xchg
test
imul
adc
lods
add
jno
scas
mov
mov
push
adc
cli
out
push
xchg
dec
sahf
cmp
lahf
outs
mov
test
jnp
mov
fld
lods
icebp
or
aas
xchg
test
xlat
addr16
lds
test
adc
xchg
jecxz
mov
frstor
mov
add
in
aaa
jl
out
or
or
cwde
adc
jnp
xor
mov
xchg
sub
int
out
cwde
out
mov
sub
call
ror
jge
add
inc
into
mov
jp
xchg
(bad)
jns
cmp
test
jnp
nop
adc
gs
push
push
dec
cmp
pushf
mov
out
and
add
add
dec
xchg
lahf
in
dec
jl
ins
test
lds
retf
sti
and
bound
not
out
or
vmwrite
rcl
jl
sahf
jne
push
add
stc
jne
pop
loope
jl
mov
jns
push
dec
sub
xchg
mov
jl
fdivr
in
cmp
cmp
sub
jnp
cmc
sti
popa
mov
inc
pusha
sbb
fcom
scas
mov
mov
mov
cmps
cmp
jl
xchg
dec
arpl
xchg
add
mov
pop
popa
icebp
jl
(bad)
(bad)
movs
mov
push
jl
push
sbb
or
mov
scas
(bad)
aas
mov
fistp
cmp
and
push
lods
mov
pop
cmp
push
mov
inc
jno
out
fist
mov
and
xchg
out
movs
dec
jae
pop
fldcw
icebp
fst
movs
xor
sti
inc
add
jl
fsubr
sar
dec
loope
cld
pop
out
ja
sbb
in
push
push
dec
std
dec
xchg
cmp
xor
sub
jge
sbb
stos
jb
pop
pop
aaa
imul
and
jl
(bad)
out
mov
lods
mov
xchg
arpl
push
int3
push
jo
pop
cmps
test
(bad)
jl
shr
or
push
sti
jae
jle
cwde
cld
and
mov
fcomp
ins
clc
popa
push
push
aaa
push
pop
dec
cld
inc
cli
cmp
xor
sar
test
mov
jns
mov
mov
ror
xor
xchg
inc
mov
add
pop
das
mov
scas
jo
mov
jl
gs
repnz
jp
pop
pusha
std
pop
ja
ret
adc
mov
sbb
shr
outs
or
stos
lea
nop
dec
in
imul
div
test
test
adc
adc
mov
mov
js
sti
frstor
sub
pop
cdq
mov
scas
clc
sbb
push
test
aas
jl
jno
xchg
push
adc
lods
jl
adc
adc
retf
xor
fwait
jge
xor
pusha
mov
paddq
js
pop
pop
call
xor
xor
xchg
gs
inc
cmps
cmp
and
mov
les
mov
inc
jl
fcmovu
and
rol
adc
adc
jno
imul
mov
imul
and
lods
fst
adc
aam
mov
sar
dec
inc
mov
outs
mov
inc
test
jmp
ficomp
jl
dec
fcom
and
adc
std
dec
scas
jl
in
dec
in
mov
imul
mov
lods
loopne
popf
in
out
add
iret
mov
aam
xchg
push
jl
and
sbb
jl
test
leave
pop
jl
mov
in
js
jmp
mov
movs
aad
ja
int
leave
mov
mov
addr16
lods
jmp
fsub
push
mov
aaa
xchg
pop
(bad)
test
jne
out
ins
jl
in
and
int3
outs
pop
mov
(bad)
cmp
xor
pusha
xor
sub
arpl
xchg
out
int
or
xor
std
sub
leave
in
dec
in
aad
cmps
fisttp
pop
movs
sar
fcomp
std
push
mov
or
mov
mov
jl
cli
test
xchg
fsubr
pop
clc
push
cs
out
inc
cmps
jl
xor
cwde
icebp
xchg
in
outs
jno
sahf
jge
movs
cmc
push
cld
leave
(bad)
arpl
push
jl
lods
xchg
xchg
or
pop
sahf
mov
rcr
and
add
jge
test
dec
inc
popa
loop
or
push
add
xchg
sar
inc
inc
inc
shl
adc
dec
jnp
cmp
int3
fmul
sbb
outs
xchg
xchg
jg
pop
stc
ja
outs
jmp
fwait
cmc
mov
push
jl
pop
dec
clc
inc
std
inc
stc
xor
jae
aaa
jl
jno
rcr
xchg
popa
mov
jl
pop
test
push
xchg
jl
dec
mov
cmp
icebp
xor
outs
jl
push
jne
jno
ins
xchg
pusha
or
mul
pop
aas
iret
push
fdiv
inc
in
ror
outs
dec
xchg
gs
outs
dec
lea
pop
jne
sub
addr16
lds
mov
or
cld
(bad)
in
test
aaa
jne
ins
mul
pop
mov
std
test
test
imul
sbb
pop
jmp
jl
sub
or
ss
xor
sub
and
rcr
dec
push
jns
inc
scas
xchg
mov
jl
mov
jae
aad
inc
cmc
xor
sti
inc
into
xchg
stos
mov
mov
iret
ret
xchg
test
outs
or
aaa
cmp
mov
xor
jl
xchg
cmp
xlat
call
pop
pushf
mov
sbb
cmps
mov
ficom
jp
cmc
stc
lea
jno
push
adc
xchg
mov
jl
scas
sbb
inc
stos
loope
stos
sbb
cmps
push
hlt
ins
jmp
movs
pop
mov
xchg
jmp
mov
aas
stc
jno
mov
iret
xor
daa
sub
int3
xchg
pop
arpl
lods
xor
fadd
enter
retf
jns
shl
test
cmps
sbb
cld
ins
sub
sbb
invd
ds
mov
mov
jl
jecxz
lods
rcl
in
xchg
scas
mov
xchg
mov
cmps
pop
movs
cmp
pop
push
lods
adc
lahf
jl
hlt
aad
test
jnp
addr16
fisttp
retf
xchg
pop
(bad)
inc
enter
std
and
jno
pop
push
ss
pop
pop
add
ror
add
xor
cmps
dec
(bad)
xchg
jp
sti
mov
pushf
popf
dec
inc
leave
iret
out
pop
dec
dec
pop
sub
ins
(bad)
jno
dec
add
out
xchg
jl
sbb
fisub
ss
loopne
shl
scas
xchg
pushf
mov
lods
push
int3
fadd
or
fdivr
stos
pop
mov
sbb
in
cwde
sar
scas
add
mov
mov
stc
ja
popf
fidivr
mov
adc
push
jl
pop
sbb
lods
retf
push
jl
mov
fucom
stc
jns
jge
cmps
xchg
popa
pop
shl
jl
and
jl
ret
call
pop
jl
xchg
cmp
inc
jp
jne
xchg
int
mov
mov
nop
movs
pop
xchg
jecxz
pop
dec
imul
(bad)
adc
movs
(bad)
jge
popa
mov
or
push
jp
or
add
cmp
int3
ins
adc
popa
push
test
sub
jl
dec
xlat
repz
outs
outs
ins
jnp
sbb
(bad)
out
sub
push
pop
imul
mul
or
or
lods
jp
das
mov
jmp
fcomp
imul
daa
mov
mov
pop
icebp
iret
ja
addr16
(bad)
or
xchg
test
fimul
adc
lods
jl
mov
fsubr
aas
mov
out
jge
fcom
cmps
enter
sahf
jl
and
push
stc
or
mov
cld
test
xchg
jl
mov
lds
mov
pop
(bad)
stc
xor
scas
outs
not
cwde
pushf
push
pushf
shr
adc
cmps
add
and
ret
hlt
cmp
outs
call
movs
jno
mov
sbb
fsub
test
ficomp
lods
mov
stos
ins
pop
sbb
or
inc
mov
and
jle
or
ds
outs
push
jl
mov
xor
jnp
lds
ret
and
mov
jl
jle
(bad)
int
test
mov
nop
jl
in
cmps
rcl
mov
dec
rol
enter
jne
inc
fcmovne
jl
inc
add
fadd
adc
mov
jp
pop
sbb
dec
xchg
pop
imul
inc
fs
fstp
mov
mov
hlt
repnz
add
jle
pop
inc
pushf
sub
mov
xchg
mov
jl
stos
ss
(bad)
jecxz
movs
jl
mov
ret
mov
mov
jbe
xchg
ins
inc
jl
ds
dec
cli
add
jl
sti
outs
scas
out
sbb
jl
add
and
jmp
inc
sbb
jecxz
hlt
(bad)
sub
mov
retf
xor
outs
adc
lds
mov
or
in
jl
add
imul
aaa
jl
add
stos
adc
xor
or
pop
inc
and
jl
fisubr
jl
push
or
loope
jge
mov
and
push
jl
push
mov
ja
popa
fdivr
cmp
push
out
dec
jl
add
lahf
mov
or
push
xchg
jae
inc
dec
jnp
enter
sbb
aad
push
jl
aam
les
push
pop
shl
(bad)
test
pop
jl
ror
fdivr
cdq
(bad)
aam
jo
daa
nop
cld
dec
mov
xchg
rcr
jbe
pop
jle
test
das
jne
xor
jmp
mov
daa
xchg
mov
repz
dec
(bad)
cmp
jmp
mov
jmp
jl
fbld
sbb
or
inc
jge
cld
lock
dec
push
addr16
cli
push
jl
inc
ins
mul
iret
stos
outs
repnz
sbb
nop
das
aas
fmul
jne
fsubrp
adc
add
jl
shl
bnd
mov
lods
mov
push
mov
jl
pop
out
push
add
(bad)
loopne
pop
(bad)
fstp
call
pop
bound
mov
jl
ins
inc
dec
pop
push
mov
daa
jl
scas
pop
jne
ret
aas
mov
and
dec
popf
mov
es
movs
bound
pop
das
test
xor
jb
in
scas
push
mov
jge
popf
xchg
jg
sub
cld
mov
mov
test
outs
fs
jge
inc
mov
cwde
sbb
jg
jl
fsubr
mov
jnp
cmp
mov
jl
out
not
leave
jne
jl
xchg
mov
shl
ror
cmp
adc
pop
or
pop
adc
xchg
mov
xchg
jne
ret
jl
add
ror
mov
rol
xchg
test
xchg
(bad)
xor
or
ret
mov
or
jl
jmp
jnp
repnz
mov
sub
out
es
cdq
fist
aad
cld
mov
clc
lods
push
jg
mov
ins
xchg
xchg
push
push
push
add
jl
addr16
out
in
and
jl
enter
sub
push
pop
inc
and
pusha
jno
jbe
data16
lea
adc
ret
mov
inc
adc
add
push
std
jmp
jl
add
loop
mov
popf
jl
arpl
fucomip
xor
aas
aad
cmp
les
push
pop
and
xchg
and
lods
or
adc
cmp
pop
je
outs
clc
dec
stos
cmp
or
inc
jne
int
sti
rep
cli
sar
jno
arpl
fcomp
pop
cld
push
leave
ins
xchg
ret
dec
jl
jecxz
(bad)
cmps
stos
add
daa
popa
adc
cmc
in
jl
fcmovb
(bad)
mov
sbb
xor
imul
mov
jg
mov
jl
ror
mov
push
daa
jl
out
jmp
lods
adc
mov
jecxz
adc
cmp
push
ins
sahf
xchg
push
je
jmp
(bad)
mov
jp
pop
out
add
push
iret
mov
aaa
aas
or
mov
push
jl
arpl
jnp
sub
jl
ds
fnstsw
push
cmp
add
(bad)
stos
sub
mov
ins
mov
inc
jp
outs
stc
or
(bad)
mov
mov
lods
xchg
mov
fs
stc
dec
mov
xchg
pop
mov
icebp
jns
mov
outs
xchg
hlt
push
retf
mov
mov
mov
aaa
fs
test
xchg
jl
mov
pop
pop
daa
pop
dec
jl
sub
jb
push
imul
and
mov
xchg
imul
adc
scas
mov
jns
adc
ins
and
xor
(bad)
or
mov
outs
js
stos
jno
or
fs
pop
scas
jmp
imul
rcl
into
xor
pushf
enter
add
dec
test
push
fsubp
sub
mov
add
jb
xor
jmp
jns
jge
loopne
div
inc
pop
mov
js
out
push
jge
adc
movs
les
cmp
xor
daa
outs
sar
mov
sub
in
dec
retf
mov
repz
push
std
sbb
retf
sti
js
mov
pop
xchg
mov
loopne
int
xchg
jecxz
test
ret
mov
cdq
mov
cmp
xchg
popf
imul
jnp
mov
out
jns
inc
xor
mov
jg
sti
xchg
jl
cmc
xor
inc
xchg
adc
data16
add
cli
jne
mov
xchg
out
sbb
hlt
ss
xchg
jo
pop
addr16
adc
cwde
push
jl
pop
push
inc
inc
mov
sbb
mul
fistp
dec
pop
std
pop
jl
jmp
xor
and
mov
clc
mov
outs
pushf
mov
push
cld
stos
(bad)
pop
add
fstp
push
cmp
jl
and
dec
push
adc
movs
sahf
sbb
jl
jecxz
push
mov
outs
jl
mov
inc
jl
pop
in
mov
jbe
xor
and
ror
xchg
bnd
cmp
ret
jl
and
call
xor
add
repnz
into
jl
rcr
mov
ret
add
sbb
std
outs
loop
inc
sub
add
es
or
jl
mov
stos
cmp
jno
in
cli
lahf
sub
mov
je
jmp
jb
jl
repz
cwde
and
fild
icebp
stos
popf
fwait
outs
inc
pop
in
add
inc
jl
pop
and
dec
jl
or
sbb
jmp
movs
jge
std
cmp
mov
jnp
adc
es
repz
sub
xor
stc
sahf
xchg
inc
jae
sti
(bad)
js
or
popa
jbe
xchg
retf
push
xor
mov
jge
pop
loopne
and
dec
mov
or
clc
stc
add
out
mov
sbb
pop
mov
ja
repnz
rcl
xor
xchg
dec
sbb
ret
aas
pop
mov
pusha
out
mov
movs
adc
in
stos
pop
movs
je
in
inc
jp
ret
fstp
mov
xchg
push
jle
mov
scas
and
popa
hlt
outs
push
mov
shr
push
and
sbb
xchg
cmp
sub
fcmovnbe
cmps
push
test
jl
push
mov
jns
fadd
cld
xor
mov
mov
jge
lahf
jge
shr
lods
fwait
(bad)
xor
pop
(bad)
jecxz
or
mov
cld
jmp
fidivr
xchg
xchg
hlt
and
sbb
cmps
jl
xchg
js
mov
jp
shr
out
or
inc
sub
jnp
call
out
ja
xor
push
push
and
inc
aad
jo
push
xor
jl
outs
sar
and
shr
xchg
xchg
jmp
cli
mov
mov
mov
mov
jl
push
dec
lds
xor
data16
std
outs
test
in
icebp
mov
mov
test
jl
or
mov
lods
lahf
ret
mov
in
les
dec
cmp
mov
stos
jg
jl
mov
popa
and
cld
mul
mov
dec
cmp
mov
ja
inc
sbb
jbe
(bad)
daa
or
mov
std
jmp
mov
fbld
outs
push
jl
ds
out
mov
cwde
jl
vmwrite
and
jl
aaa
cs
sub
sbb
sbb
ja
cwde
ins
jmp
mov
pop
cmp
loop
or
jl
pop
inc
sub
inc
or
fcom
in
in
ss
lods
or
mov
xchg
dec
ja
aam
xor
int3
mov
addr16
loopne
arpl
movs
clc
cmp
mov
jg
ins
or
inc
pop
icebp
imul
inc
jl
cs
adc
call
stc
(bad)
repz
xchg
add
out
mov
push
mov
sar
lea
stos
das
imul
imul
push
test
jg
and
and
lahf
test
icebp
in
jl
aaa
sahf
cli
imul
push
sbb
lods
jl
in
js
sub
gs
sahf
jg
arpl
test
push
retf
test
lock
dec
jns
push
ja
dec
add
fdivr
enter
mov
or
jl
sbb
jecxz
or
or
xor
or
lods
or
mov
mov
into
fistp
mov
enter
loope
and
lea
lds
sti
pop
ret
movs
pop
fdivr
jne
mov
in
fwait
jle
mov
jno
sub
icebp
inc
xor
aad
dec
test
pop
je
push
inc
or
cmc
ds
or
out
mov
jbe
icebp
ins
(bad)
retf
and
ins
dec
pop
mov
repz
dec
mov
push
jnp
rcr
push
fstp
pushf
and
inc
adc
jl
sub
daa
push
in
call
inc
lock
push
xchg
jl
mov
add
aad
xchg
inc
and
jl
dec
fs
daa
stos
jae
push
ret
or
push
and
in
sbb
pop
fsubr
push
inc
inc
adc
mul
pop
cmp
stos
jl
jp
in
int3
pop
les
sub
test
fsubr
ins
mov
icebp
fwait
xor
dec
fs
sub
pop
xchg
inc
test
cmp
lods
xor
jno
xor
pop
je
retf
and
cld
or
xchg
and
into
xor
call
xchg
dec
and
cwde
xchg
inc
sar
jb
retf
inc
inc
in
dec
leave
jl
hlt
xchg
sub
sub
iret
ret
mov
jnp
shl
stc
cmps
jns
mov
xor
xchg
push
adc
int
lods
adc
repnz
(bad)
fs
cmp
test
pushf
ins
in
div
push
xchg
js
jl
imul
outs
test
fsub
in
or
aad
mov
(bad)
jb
adc
fisubr
dec
xor
(bad)
add
cmp
jl
imul
aas
stos
outs
jnp
mov
(bad)
fcomp
loope
cld
pusha
int3
sub
ja
cld
push
cmp
xchg
cld
xchg
dec
push
gs
pop
jne
and
mov
jmp
fistp
inc
push
mov
sbb
mov
out
es
ss
push
sub
movs
in
jns
data16
mov
or
and
sub
mov
mov
aam
push
add
dec
mov
jnp
dec
sub
mov
(bad)
cld
mov
movs
push
jge
sbb
sub
std
mov
and
fmulp
jp
xchg
add
jne
cmps
jl
xchg
dec
(bad)
xchg
outs
ret
in
aaa
push
repz
ss
or
scas
je
pop
jnp
mov
outs
jbe
mov
sbb
mov
mov
test
push
jge
fst
in
in
stos
leave
jo
jae
jno
xchg
cld
mov
pop
lds
das
jle
or
ds
add
cmp
xor
aad
jnp
mov
cld
(bad)
xchg
jae
pop
xor
xor
test
ins
loop
mov
fiadd
pop
retf
sbb
jl
test
xchg
jl
gs
enter
or
std
out
jl
xlat
cmc
pop
push
ja
mov
leave
loope
data16
stos
xchg
ja
in
and
shr
inc
push
int3
ret
fldl2t
add
jae
ds
cwde
(bad)
push
mov
sbb
add
jae
inc
mov
stos
mov
inc
push
sbb
dec
add
outs
cdq
or
addr16
pop
or
mov
call
cld
jl
mov
(bad)
lahf
inc
btr
jl
lea
adc
gs
xor
mov
add
and
in
cmp
call
mov
jmp
fdivr
sbb
or
add
jbe
and
xchg
addr16
mov
xor
jno
mov
jl
add
pop
inc
jae
jge
in
pop
sub
loopne
mov
jge
scas
mov
ins
mov
jl
jle
inc
in
pop
and
mov
mov
jmp
push
aas
mov
rol
jge
iret
adc
mov
popf
cmps
hlt
enter
icebp
xor
cmps
arpl
dec
mov
popa
push
in
clc
cmp
inc
mov
out
ret
push
cld
gs
jl
call
jge
fwait
bound
movs
jl
sbb
xor
and
lods
cmp
popa
or
fwait
cld
out
js
in
loope
xor
cli
jecxz
mov
dec
aas
cmp
lds
sti
mov
or
cmc
cmp
dec
std
rcl
(bad)
xor
cmc
fs
push
xchg
dec
adc
adc
daa
mov
sbb
mov
cmp
sub
es
sub
test
xchg
idiv
mov
push
sub
in
nop
jl
mov
jl
data16
jp
inc
sti
addr16
das
push
repz
fild
jmp
jge
mov
and
out
int
inc
and
adc
js
cwde
and
call
rol
pop
adc
sub
rcr
mov
fistp
push
cmp
inc
(bad)
or
dec
mov
jg
pop
jmp
push
clc
arpl
sub
jns
bound
or
push
mov
mov
sbb
mov
cld
sbb
jns
xchg
or
jl
nop
inc
xor
mov
add
pop
hlt
mov
test
sub
adc
push
ss
mov
pop
add
add
inc
fs
fucomi
loopne
jo
shl
xor
push
pop
mov
sbb
jg
mov
add
outs
jbe
mov
xor
call
cld
ss
retf
fnstenv
cmps
jl
and
pushf
jnp
push
data16
outs
mov
xchg
fucomip
mov
sub
pop
jb
sub
ss
mul
mov
ins
ins
ss
jns
adc
jl
sbb
dec
outs
inc
cmp
push
inc
outs
jl
(bad)
daa
iret
imul
pop
sbb
sub
rcl
dec
out
mov
pop
cmp
(bad)
or
jl
je
mov
mov
jl
push
sbb
in
dec
aam
push
or
sahf
les
leave
sub
rcr
cmp
jbe
and
out
jns
jo
xchg
lea
aaa
mov
jge
repnz
aas
test
sub
sbb
xor
jno
mov
pop
xchg
daa
pop
ret
(bad)
(bad)
sbb
dec
xlat
jmp
mov
jmp
cdq
mov
jl
popaw
push
pop
inc
sub
jnp
sub
or
test
fld
cmp
sti
fcmovne
ret
sbb
jl
repz
into
and
jl
ja
mov
shr
jl
or
pop
sub
sbb
cwde
jno
cmps
jl
mov
push
ja
pmulhuw
xor
push
add
popa
or
and
lahf
jl
in
sbb
mov
add
jl
sub
mov
cmps
addr16
in
add
leave
enter
nop
jo
outs
call
ins
dec
and
push
movs
stos
xchg
push
jl
adc
sub
mov
test
jl
test
and
sar
mov
les
push
and
(bad)
test
movs
or
pop
push
jge
das
or
mov
retf
aaa
cmp
cdq
add
int3
xchg
pop
outs
push
pop
ins
sbb
cld
iret
pop
xchg
out
popf
outs
adc
jle
jo
daa
ss
ins
sub
jl
(bad)
jl
popa
(bad)
mov
mov
js
data16
sbb
idiv
sub
jmp
add
cmp
add
dec
mov
pop
pop
inc
fmulp
cmp
push
leave
jle
cmp
stos
test
es
jp
iret
jno
fs
stc
ss
sbb
jmp
ror
fidivr
jne
xchg
(bad)
pop
(bad)
ds
ret
mov
pmuludq
adc
jl
outs
jns
cli
leave
cmp
xor
or
pop
and
sub
nop
ror
push
push
movs
stc
ins
push
jl
dec
clc
sub
adc
test
into
mov
leave
jl
jo
jmp
ds
scas
jl
(bad)
cmps
icebp
loope
(bad)
jge
push
ret
(bad)
sub
mov
pop
cli
call
rcr
jnp
dec
rcl
aam
jl
mov
push
loop
mov
or
aaa
mov
mov
jnp
mov
bound
ja
cmp
stos
mov
sub
mov
jle
aaa
cmc
call
jmp
jae
inc
div
and
jge
ja
lods
call
les
cld
cmps
imul
jo
dec
jno
repnz
cmc
sub
mov
stos
es
sahf
repz
iret
js
es
mov
push
retf
int3
jl
repnz
aas
cld
add
xor
hlt
jb
loop
(bad)
cmp
jl
movs
jecxz
cld
adc
inc
in
xchg
gs
cs
mov
mov
data16
or
(bad)
sbb
lock
jl
stos
lea
ret
jl
outs
jne
in
jle
arpl
jnp
pop
inc
sbb
dec
inc
jl
mov
mov
daa
fsub
jae
mov
mov
sub
call
jb
cmp
sbb
retf
xor
aaa
test
sub
jl
fsubrp
push
xchg
das
add
not
mov
mov
sti
jne
pop
jl
inc
mov
fs
and
dec
sbb
addr16
(bad)
sar
mov
cld
dec
fidivr
jl
lock
lods
js
(bad)
scas
xchg
pop
jl
sahf
sbb
enter
cli
pushf
sti
cmp
call
scas
sbb
sub
sub
es
jecxz
(bad)
loopne
xchg
jmp
sbb
adc
test
cld
stos
xchg
mov
cmc
mov
and
aas
pop
xchg
shl
push
and
mov
inc
mov
jb
jnp
int3
dec
mov
daa
test
sbb
pop
mov
imul
or
xchg
pop
fst
(bad)
jl
dec
retf
fadd
cmp
sbb
stos
lds
jp
push
mov
cld
jb
mov
or
lock
jle
mov
(bad)
jl
jo
pop
inc
aas
jg
pop
pushf
jl
int
inc
adc
or
jbe
mov
retf
adc
push
cmp
cld
jnp
xchg
test
pusha
imul
add
mov
or
sti
mov
lods
stos
sbb
pop
mov
js
jecxz
lods
je
fidiv
mov
mov
jge
aaa
sub
std
jl
repz
jne
ja
ficomp
call
retf
fisubr
(bad)
ja
jge
pop
fmul
jecxz
pop
dec
icebp
(bad)
jp
and
mov
popf
add
mov
sub
push
jge
jl
dec
shr
xchg
dec
and
retf
sub
icebp
mov
or
jno
xor
mov
and
leave
test
sub
jecxz
jg
scas
outs
(bad)
pop
jo
fwait
enter
xchg
fwait
xchg
inc
test
jl
mov
pop
jl
adc
scas
push
and
test
and
mov
add
dec
jl
jnp
popf
sbb
pusha
bound
xchg
stc
mov
inc
xchg
pop
mov
cmp
pop
adc
mov
cmp
xchg
add
call
stos
jl
push
adc
fimul
add
call
sbb
fdivr
(bad)
das
in
stc
xor
movs
fs
jp
(bad)
outs
jp
pushfw
scas
pop
lods
jl
or
mov
ja
stc
loopne
sub
aaa
mov
inc
jp
not
push
and
cs
pushf
pop
push
outs
cli
or
jb
mov
ret
(bad)
pushf
leave
push
inc
cmp
xchg
pusha
mov
mov
lahf
pop
es
add
aad
sub
daa
cmp
sbb
inc
dec
in
(bad)
out
fsubrp
mov
inc
test
sub
(bad)
clc
xor
mov
add
in
push
mov
hlt
mov
fistp
sbb
mov
popa
mov
dec
mov
xor
les
hlt
ds
mov
pop
mov
xor
movs
add
imul
mov
mov
xchg
gs
cmp
jns
mov
das
sub
jae
mov
in
addr16
inc
leave
aam
pop
xchg
jbe
or
lods
sahf
js
jnp
xchg
cdq
ja
arpl
sbb
cmps
sbb
jl
jge
and
cld
(bad)
pop
adc
out
repnz
mov
mov
(bad)
rcr
in
popa
jge
adc
mov
dec
(bad)
jg
sub
outs
loopne
iret
dec
mov
je
arpl
jl
dec
call
iret
popa
mov
mov
pop
jl
mov
(bad)
maxps
dec
jg
out
jbe
jp
adc
rol
cld
(bad)
mov
or
popf
(bad)
xor
pop
jl
dec
es
repz
dec
into
out
sbb
leave
xor
out
xchg
jno
jg
loopne
mov
xor
outs
fstp
inc
cmp
sub
call
imul
mov
in
ficomp
mov
inc
icebp
js
mov
push
test
bound
cmc
movs
and
ret
scas
std
call
lds
jge
lock
xchg
dec
mov
shr
mov
jl
xor
cli
fs
push
pusha
aas
movs
jl
ja
mov
mov
mov
int3
dec
sub
(bad)
jmp
je
aam
movs
ss
cld
stos
dec
fchs
ror
push
jecxz
cmp
out
leave
pop
imul
xchg
jp
aam
mov
gs
sahf
pop
jo
cmp
call
push
(bad)
jl
push
lods
xchg
loope
lahf
cmps
movs
pop
in
out
mov
sbb
xchg
jb
jmp
adc
pop
adc
pushf
inc
retf
aas
push
or
loop
mov
imul
inc
and
repnz
inc
mov
sub
add
arpl
enter
and
push
cmp
cmp
cmp
push
jp
push
clc
mov
call
mov
mov
cmp
jl
xor
add
sbb
(bad)
inc
ret
mov
fwait
bound
fistp
shl
cmp
addr16
mov
jl
push
aas
jle
xor
pop
sub
push
cmp
cmp
retf
adc
jo
adc
adc
jl
inc
xor
pusha
ds
add
scas
aas
xor
xor
call
cmp
sub
or
xchg
inc
repnz
cmps
or
dec
mov
cmp
push
dec
inc
jl
xchg
popa
aad
in
outs
dec
dec
cmp
jl
dec
xor
mov
jb
repz
or
mov
enter
cmp
add
adc
cmc
loope
loopne
mov
fs
mov
mov
jnp
nop
pusha
inc
enter
add
lahf
test
std
mov
jnp
pop
mov
mov
xor
jnp
movs
sub
test
and
aad
mov
push
mov
xor
xor
mov
adc
mov
jl
add
mov
pushf
jb
pop
das
pop
push
dec
cmp
xchg
icebp
cmp
je
jl
mov
movs
test
out
add
call
cmp
or
jecxz
mov
fist
or
xor
int
mul
ret
fld
cmps
outs
push
scas
mov
test
pop
dec
ret
cli
cmp
cld
(bad)
pop
and
jl
daa
ins
jns
and
int3
mov
into
mov
int
out
jbe
mov
mov
push
pop
call
js
in
push
jl
sbb
outs
push
imul
mov
arpl
(bad)
xchg
cmp
repnz
jmp
mov
push
mov
cmp
test
inc
call
or
and
pop
pop
mov
daa
dec
xchg
mov
jl
mov
sub
(bad)
xor
add
lahf
jp
mov
add
es
jl
popf
cld
jecxz
scas
xchg
xchg
not
icebp
movs
(bad)
ficomp
or
mov
cld
repz
in
inc
jo
outs
into
push
mov
cmps
jge
sub
rol
cmp
repz
stos
sbb
js
sbb
mov
mov
inc
and
xor
inc
jnp
ret
mov
enter
aad
shl
xchg
les
js
(bad)
out
mov
test
jge
enter
mov
push
mov
cs
in
jnp
pop
pop
add
xor
movs
push
mov
mov
popf
mov
push
fdivr
int3
loopne
in
adc
adc
inc
cwde
jge
shr
push
cmp
sbb
outs
sbb
fcmovnbe
cmp
sar
add
imul
jmp
lods
jae
stc
jle
dec
or
add
mov
movs
or
sub
(bad)
add
dec
dec
cmps
fsubr
jl
sub
sub
std
pop
mov
xor
lea
mov
je
scas
ja
sub
or
mov
mov
ret
mov
inc
sub
jne
ret
and
mov
retf
sar
dec
ins
ret
leave
xor
fdiv
jbe
mov
jle
test
or
jb
in
mov
int
loope
xchg
push
adc
jl
ins
jmp
adc
fwait
sub
push
sbb
in
sbb
mov
mov
push
mov
in
xlat
and
out
sbb
jp
loope
fidivr
sbb
add
or
dec
imul
sbb
mov
stc
jl
push
jg
cli
fs
les
jl
sar
test
jge
jmp
pop
out
mov
lock
xchg
xchg
ret
out
fld
jb
and
outs
sbb
push
mov
add
adc
ficomp
inc
aas
and
jl
push
dec
inc
cmp
mov
hlt
dec
and
repz
jg
outs
sar
js
cld
or
fistp
jl
fmul
or
(bad)
xor
ret
(bad)
out
mov
xor
xor
lods
out
add
inc
jge
xchg
fs
add
dec
div
mov
fwait
jp
repz
jne
lods
(bad)
cmp
pop
pushf
sub
or
pop
ins
sbb
stos
mov
push
jmp
les
xchg
in
sbb
je
loopne
adc
rol
xchg
and
bound
dec
loop
dec
dec
cmp
mov
jl
fist
ror
jl
jnp
or
jl
xor
mov
mov
stos
sub
scas
push
jl
push
stc
shl
jg
jl
ret
jno
sahf
xor
xor
inc
sbb
jns
imul
imul
dec
outs
push
fst
sub
ja
popf
xor
jl
lods
aad
inc
push
pop
ds
popa
out
ss
fdivr
cld
fstp
jecxz
in
rcl
js
ror
xor
in
rcl
pop
gs
and
lods
outs
pop
xchg
shl
popf
and
cwde
shl
or
fstp
cld
popf
test
in
jbe
stos
jle
jmp
cs
xor
aam
lods
cmps
sar
call
inc
scas
or
dec
mov
or
mov
mov
jns
scas
lock
jge
cdq
cld
loope
mov
pop
push
or
xchg
js
and
or
mov
hlt
jbe
(bad)
shr
push
or
jge
movs
retf
mov
xor
and
jl
retf
sbb
shr
lods
ins
jl
aad
movs
cs
ja
jle
or
push
out
jge
inc
mov
sbb
in
fimul
cmp
out
push
jl
(bad)
push
jns
jg
outs
or
cld
pushf
retf
and
jl
mov
cwde
fst
xchg
jl
xchg
add
data16
lahf
ja
out
cmp
inc
jl
(bad)
popf
mov
jl
cmp
and
mov
sar
xchg
cld
adc
or
je
retf
hlt
xor
jmp
popa
jmp
or
jl
fiadd
(bad)
and
xchg
sbb
lods
neg
jmp
inc
inc
lds
push
jle
jl
pop
stos
fbld
hlt
jl
xchg
sub
scas
jl
xchg
mov
cmp
adc
mov
inc
scas
imul
sub
sar
in
jl
cmp
js
push
ret
jl
jae
add
push
(bad)
jnp
push
(bad)
mov
sbb
sar
sub
jle
jp
div
jg
sbb
xchg
mov
push
mov
push
adc
es
pop
imul
int
sahf
jl
movs
loopne
in
jp
jmp
imul
inc
sub
jae
int
push
loop
(bad)
cmps
outs
add
mov
lea
mov
pushf
jg
ret
sahf
inc
jge
add
mov
test
into
fnstenv
sti
(bad)
cld
and
adc
aad
cld
push
gs
test
packsswb
nop
jo
out
add
jl
int3
xor
or
fcmovnbe
mov
xchg
imul
nop
in
jge
mov
mov
jmp
jmp
jns
mov
cmp
ins
mov
ret
cld
and
add
fldcw
ja
pop
cmp
pop
shl
mov
dec
fnsave
push
es
and
jl
clc
sub
jl
and
cmc
mov
pop
lds
push
imul
ins
ds
enter
cld
push
pop
lods
cmp
cmp
cld
or
fnstenv
pop
ja
daa
mov
in
lahf
cmp
adc
jl
inc
es
adc
push
outs
push
add
pop
pop
mov
outs
mov
cs
mov
aad
sub
outs
sbb
xchg
out
jp
fdivr
jl
out
call
pop
pop
fild
imul
int
jnp
popa
add
inc
mov
enter
pop
xchg
ja
sub
test
mov
sahf
inc
sbb
shr
jne
jge
jl
add
sub
xchg
push
jl
outs
xor
ja
ret
add
inc
pop
div
xchg
loop
out
jl
in
(bad)
movs
aad
pop
jl
pop
mov
push
gs
mul
lods
inc
mov
les
jl
fidiv
daa
xchg
std
sub
ret
mov
xor
aaa
inc
repz
mov
jg
xchg
push
xchg
shl
adc
inc
outs
adc
jge
push
test
or
inc
adc
ja
scas
int
or
jge
ja
mov
jns
pop
jl
pop
inc
and
jns
mov
into
mov
jl
cmc
rol
mov
push
lea
daa
pop
adc
scas
icebp
cli
mov
push
or
(bad)
into
add
sbb
cmps
or
retf
iret
enter
cmp
sti
xchg
hlt
popa
mov
pop
cld
sbb
or
inc
pop
jl
xchg
or
cdq
das
lods
mov
jge
pop
push
jnp
dec
pop
xchg
cli
add
das
adc
int3
in
enter
mov
jle
mov
cld
(bad)
jl
fs
test
mov
inc
dec
cli
jo
lods
jb
inc
and
mov
or
addr16
lods
sub
cld
push
mov
cmp
mov
jl
retf
mov
ins
and
sbb
adc
cmp
add
mov
jl
xchg
push
lahf
cmp
xor
shl
repnz
lods
scas
fwait
add
dec
out
pop
cmps
jnp
or
repnz
add
(bad)
lods
and
pop
jl
js
xchg
cwde
mov
jb
not
rol
shl
test
scas
mov
jl
jg
dec
data16
jl
jecxz
shr
shr
jl
sbb
iret
movs
bound
dec
adc
pushf
and
mov
cmp
je
ins
inc
movs
jae
(bad)
xchg
push
jl
add
xchg
mov
cmc
mov
mov
ds
jbe
call
jl
sub
jle
(bad)
cmp
js
loope
add
iret
loopne
pop
lods
mov
xor
(bad)
mov
shl
cmc
cld
push
cmp
inc
dec
nop
(bad)
mov
aam
or
add
ins
ror
in
mov
in
inc
mov
aad
mov
dec
ficom
inc
inc
and
jl
in
push
add
popf
add
jl
pop
sub
inc
xchg
loopne
shr
aam
inc
(bad)
jl
fcomi
mov
jl
dec
std
ins
xor
in
test
repz
mov
inc
jl
sbb
int
mov
adc
aam
mov
push
and
sbb
xor
in
lea
shr
or
adc
movs
jecxz
(bad)
jno
cmp
jae
push
push
popf
jl
imul
cwde
(bad)
mov
sbb
jo
mov
data16
retf
jl
cmp
ret
jl
cmp
jo
lds
int3
nop
dec
cs
hlt
jge
rcr
inc
js
ror
clc
adc
(bad)
stc
lods
test
sbb
in
fisubr
mov
aas
loop
and
popa
out
sbb
jl
mov
lds
jl
das
pop
loopne
mov
aam
popa
mov
pop
push
add
jnp
ds
xor
jl
inc
pop
fiadd
dec
pushf
adc
sbb
pop
inc
xchg
cdq
iret
sbb
(bad)
jge
js
(bad)
fwait
mov
pop
push
lods
jl
rcr
push
into
movs
fidivr
enter
mov
mov
sti
jle
jl
pop
inc
fstp
jp
sbb
adc
loop
sub
mov
fs
mov
clc
iret
mov
scas
inc
imul
pop
push
pop
imul
scas
jmp
popf
and
bound
xor
nop
outs
rcl
test
cld
xor
retf
out
int3
pushf
pop
or
aas
sar
or
mov
out
push
or
addr16
mov
inc
xchg
jl
scas
cdq
mov
jno
test
xchg
(bad)
mov
push
(bad)
mov
sbb
bound
in
js
repnz
push
cmc
scas
mov
enter
xor
ret
adc
inc
jl
inc
add
jge
pop
push
mov
hlt
jge
test
jl
(bad)
xchg
add
adc
imul
jl
inc
ret
ins
bound
fmul
or
ins
inc
ja
iret
sub
cmc
or
cld
lahf
mov
pop
pop
mov
addr16
dec
into
xchg
daa
inc
mov
fsub
pop
mov
pop
in
mov
jl
imul
xor
pop
pusha
adc
push
xchg
xchg
pop
adc
scas
jl
add
daa
mov
inc
sbb
push
call
ret
inc
or
enter
bound
mov
and
add
xchg
cdq
add
jg
stos
mov
push
js
(bad)
(bad)
in
sti
jmp
inc
jl
cmps
inc
shl
inc
das
or
inc
xor
repz
iret
daa
jl
test
pusha
jecxz
mov
adc
ret
cmps
ret
adc
push
sub
or
jae
cld
dec
ret
mov
jg
fld
retf
aaa
sub
fsubr
adc
movs
fcmove
sbb
add
je
mov
cmp
fmul
fld
sub
pop
push
jl
enter
dec
jecxz
stos
ror
mov
jl
int3
xor
test
jl
xor
dec
ja
(bad)
pop
push
jbe
repnz
(bad)
cli
jl
or
cs
xor
fidivr
mov
addr16
ins
ror
mov
jl
sbb
cdq
jge
push
out
lods
loop
das
or
and
leave
jl
enter
sbb
cmp
cmc
jl
jmp
push
jl
push
push
dec
mov
xor
sbb
jge
xor
bound
in
ja
mov
repz
cld
sub
cld
pop
sti
fnsave
mov
push
mov
or
jge
dec
and
repz
rcl
jmp
jl
sub
movlps
adc
ins
pop
ins
hlt
cdq
pushf
cld
mov
jmp
jmp
out
dec
mov
jl
xchg
or
push
xchg
pop
cld
rcr
mov
shl
sub
mov
loope
repnz
mov
loop
das
ds
cld
bound
cmp
stos
out
int
sbb
mov
adc
dec
cld
das
dec
pop
ins
test
outs
inc
test
push
ins
repnz
add
mov
dec
ss
mov
or
ret
popf
or
aas
jl
jge
out
int
in
jge
jne
mov
fdiv
jmp
add
int3
add
push
les
aas
mov
loope
(bad)
imul
jl
inc
(bad)
retf
cdq
das
bnd
adc
adc
aam
jmp
call
mov
pop
jnp
and
int
stc
cld
addr16
mov
arpl
mov
cld
aas
jmp
pop
dec
cmp
jmp
pop
outs
fcom
cld
ss
mov
test
mov
dec
xor
out
popf
in
xor
jle
fisub
pop
push
fcom
push
std
(bad)
bound
mov
sub
icebp
mov
mov
jl
sbb
jl
test
daa
out
jl
mov
aad
jl
lods
inc
int3
add
mov
add
jl
fsubrp
xor
jb
dec
push
outs
pop
dec
aad
inc
jl
xor
movs
mov
std
mov
mov
cmp
inc
cmps
pop
mov
cmc
jmp
jl
fld
xchg
rcr
push
imul
in
inc
cmp
xchg
sbb
xor
sub
scas
xchg
repz
mov
idiv
mov
in
sbb
aad
ret
ja
test
ror
ja
pusha
jp
aas
sbb
dec
scas
pop
jl
dec
(bad)
test
sub
pusha
cld
sub
or
outs
jl
adc
mov
data16
scas
sub
call
fld
mov
jl
rcr
xor
add
adc
pop
(bad)
cld
ja
fadd
jnp
and
mov
js
sub
pop
dec
pop
leave
cld
jle
arpl
inc
push
xor
(bad)
retf
add
clc
mov
adc
mov
das
mov
mov
or
lods
je
xor
out
mov
icebp
jmp
add
xchg
or
or
push
out
cmps
adc
jmp
fadd
pop
retf
jnp
outs
dec
into
pushf
pop
in
xchg
sub
sar
or
sbb
inc
outs
scas
leave
cli
ds
mov
sbb
nop
xchg
sbb
daa
add
sbb
enter
jbe
sbb
dec
jne
add
loopne
aam
pop
jl
jo
jns
mov
mov
adc
cmp
xor
sub
jle
(bad)
or
test
std
sbb
mov
retf
sub
test
xchg
in
lock
jl
mov
js
sar
push
jl
je
fcmovnu
jmp
pop
jl
jecxz
pop
ror
jns
sbb
inc
(bad)
movs
and
dec
mov
cwde
jl
jmp
ja
xchg
pop
outs
pusha
dec
jnp
cmp
mov
ins
je
pushf
mov
arpl
push
mov
outs
aaa
cmp
or
xchg
(bad)
shl
push
and
and
xor
cmp
fild
cs
inc
(bad)
push
add
nop
adc
mov
sbb
hlt
jbe
fild
fwait
and
or
mov
cli
fwait
out
adc
adc
cmovb
mov
mov
jae
jl
mov
cs
xor
push
jl
out
push
xchg
dec
mov
(bad)
fwait
push
push
dec
inc
fsubrp
cdq
mov
or
jl
sbb
cmp
sar
aam
jge
inc
fdivr
adc
in
dec
sbb
xor
pop
push
inc
daa
ja
sub
out
jl
mov
lods
loopne
dec
cmp
jecxz
cld
mov
add
imul
outs
sbb
xchg
adc
jl
pop
aam
int3
sub
jns
mov
out
jl
xor
jnp
cmp
add
dec
out
pushf
jl
sahf
std
(bad)
mov
fwait
data16
in
jl
mov
mov
add
jmp
cld
test
popa
adc
jae
retf
mov
ss
add
jmp
shl
mov
les
sub
pop
imul
xchg
(bad)
cld
jnp
popa
xlat
push
aaa
jmp
xor
ja
je
shr
jp
pop
pop
mov
loopne
jl
adc
ret
in
pop
popf
test
cmps
jl
(bad)
pop
mov
mov
push
jl
lock
loopne
push
test
push
mov
out
jl
ud0
bound
jns
retf
xlat
pop
dec
push
lods
jae
std
push
aad
mov
dec
push
mov
push
fsub
(bad)
mov
mov
jl
popa
aas
lock
xor
jl
or
cmp
out
jge
dec
int3
fsubp
adc
cwde
add
jp
pushf
sbb
lea
(bad)
fstp
fst
mov
cld
xor
mov
add
daa
jl
dec
cs
and
xchg
pusha
in
data16
div
xchg
pop
push
xchg
mov
pop
sbb
addr16
scas
mov
fwait
imul
ja
mov
fidivr
inc
mov
jl
lods
adc
mov
push
jmp
jl
xchg
or
scas
push
enter
jbe
cmps
adc
xor
lods
or
push
ja
popf
pop
call
enter
cli
ss
adc
xor
stc
add
cli
call
cmp
mov
adc
mov
out
pop
xchg
mov
repz
add
outs
push
xchg
fstp
ja
sub
int3
lods
adc
(bad)
movs
xchg
jno
into
jl
inc
nop
dec
xor
daa
outs
xchg
xor
fild
and
push
sub
scas
push
aaa
jne
js
pop
sbb
or
or
mov
ds
dec
ja
adc
or
fild
adc
sbb
std
adc
add
add
mov
push
fstp
jbe
sbb
(bad)
call
cld
jecxz
cmp
push
push
pop
jbe
femms
push
or
or
cmc
add
dec
add
cmp
aad
sbb
cld
mov
inc
xor
jmp
(bad)
(bad)
mov
sbb
psubw
ret
repnz
inc
and
pop
sbb
pushf
mov
ret
inc
outs
adc
push
sbb
out
lds
int
popf
stos
mov
hlt
jmp
jge
lods
add
push
aad
and
and
lds
pop
fwait
shr
mov
int3
jne
enter
clc
and
pushf
inc
jbe
jns
push
div
(bad)
aaa
sub
dec
jae
jl
stc
bound
mov
fmul
pop
ds
in
cmp
fs
pusha
retf
stos
pcmpeqw
jl
sti
lods
ficomp
popa
jecxz
mov
pop
fwait
pop
sub
inc
mov
movs
adc
xchg
ins
bound
fcomip
or
jl
sahf
push
cdq
inc
push
cli
fidivr
in
sbb
jmp
jl
popf
repz
popa
cmp
jge
imul
cld
inc
jmp
inc
cmp
mov
fnstcw
jne
aaa
pop
daa
mov
xchg
pop
jl
sbb
xchg
or
clc
pop
ret
dec
mov
jge
pop
inc
in
xchg
mov
jl
dec
mov
ja
int3
jmp
cmp
jge
stos
or
and
outs
xor
add
cld
sub
lea
xchg
jno
xchg
jne
ds
cmps
mov
push
sub
pop
inc
lods
test
mov
das
dec
fistp
push
stc
or
out
jne
mov
xchg
pop
sbb
retf
jo
les
or
xchg
cld
xchg
pusha
cli
lds
adc
jl
sub
imul
mov
jp
pop
ins
adc
mov
adc
sbb
pop
dec
inc
ret
xor
cmps
adc
cmp
inc
aaa
mov
cmps
test
cmps
jl
jp
jmp
mov
xor
js
jl
jae
xchg
inc
push
xchg
clc
jl
iret
dec
mov
(bad)
pop
out
daa
outs
aad
inc
test
dec
mov
mov
fstsw
mov
outs
inc
sti
jle
fst
xchg
mov
pop
xchg
jo
jns
cmc
mov
mov
aad
ins
popf
loopne
xchg
fstp
xchg
xor
cld
mov
jl
pop
hlt
jge
es
sar
out
call
jne
add
idiv
add
xchg
retf
cmp
mov
jnp
iret
inc
inc
and
mov
ret
das
jl
pop
xchg
mov
jl
dec
aad
cmc
dec
(bad)
stos
js
ret
scas
or
jl
adc
lds
cmps
xchg
ror
jl
inc
jns
xor
sub
jl
push
cli
xor
mov
pop
scas
cmps
in
push
adc
ja
push
xor
or
(bad)
xor
mov
cs
push
aaa
dec
xor
jl
mov
add
pop
outs
and
pop
cmp
jge
jne
pop
cmp
jl
in
shl
pushf
jnp
out
scas
popf
movs
pushf
shl
jnp
stos
push
cmc
out
iret
sbb
or
iret
sub
movs
loopne
hlt
jg
jl
mov
test
xchg
mov
imul
ficomp
push
out
fstp
cmps
fnstsw
push
adc
rcr
ret
add
or
push
mov
lea
xor
or
jl
xchg
cs
sub
or
pop
loopne
jmp
pop
addr16
mov
sbb
movs
cmp
idiv
popf
mov
es
inc
mov
push
and
push
popa
adc
out
fld
and
inc
imul
push
xchg
adc
jl
mov
xor
data16
popf
push
jl
jns
pusha
dec
sub
sar
(bad)
lahf
mov
jl
repnz
movs
repz
dec
gs
lahf
pop
mov
repnz
scas
sbb
cmp
mov
jecxz
jl
and
stos
out
mov
dec
test
jl
inc
cmp
and
mov
(bad)
dec
dec
int3
fistp
or
mov
pop
data16
out
jne
sbb
dec
jl
push
jns
(bad)
stos
or
fdivr
sbb
add
(bad)
jnp
cmp
and
ret
les
dec
div
jl
push
out
test
xor
sub
shld
or
inc
sub
cld
mov
or
outs
ja
rcr
rcr
jl
add
pushf
les
loopne
xor
ins
out
jl
dec
cmp
mov
scas
add
inc
mov
sub
ja
and
dec
rcl
xlat
retf
cld
ret
(bad)
loopne
data16
sub
popf
gs
mov
mov
jl
shl
icebp
int
sahf
jp
loop
stos
adc
xchg
fmul
ins
(bad)
dec
cs
xchg
arpl
test
jne
sbb
or
push
dec
fs
fstp
push
push
(bad)
pop
sub
or
push
sbb
push
ret
out
mov
pop
(bad)
jmp
xlat
dec
sar
xchg
or
jbe
jp
push
cs
movs
mov
loop
and
push
pusha
jl
std
push
xchg
sahf
in
mov
mov
ins
outs
js
popf
jl
rol
lods
mov
jmp
mov
(bad)
sub
jl
sbb
jl
lock
push
pop
adc
shl
jl
jnp
loop
mov
stc
outs
arpl
or
ds
lea
int3
jl
push
sbb
jl
add
int
jl
es
pop
xchg
sar
jnp
sub
inc
outs
int3
movs
mov
jnp
loopne
xor
mov
lods
jp
mov
mov
mov
mov
jbe
add
jl
arpl
in
enter
inc
xchg
lea
xor
mov
jl
inc
sub
inc
enter
mov
dec
inc
popf
ins
pop
imul
dec
cmp
cmps
jl
add
jl
(bad)
aad
std
xor
jl
out
cmp
aam
cmp
and
ins
call
std
pop
idiv
push
add
add
cmp
jb
xor
(bad)
push
(bad)
jl
ja
cmps
scas
and
push
jge
jecxz
xchg
lock
xor
call
jb
ss
dec
fistp
inc
xchg
dec
cdq
mov
mov
shl
and
(bad)
pop
lods
pop
fnstcw
add
daa
(bad)
outs
stos
fdivr
in
je
and
sub
jp
inc
dec
mov
loop
cld
fsubp
cmc
jnp
mov
cmp
mov
hlt
loop
cli
scas
test
dec
mov
push
pop
pop
popa
int
xor
and
xor
out
cdq
jnp
jg
pop
mov
mov
jne
mov
xor
dec
movs
jo
pushf
shl
mov
push
inc
dec
jo
lock
jg
dec
push
pop
jl
cmp
and
test
call
ds
dec
xor
lods
ins
push
enter
xlat
add
ja
(bad)
(bad)
idiv
loopne
scas
or
jl
or
(bad)
xchg
and
jl
push
pop
jp
test
jnp
loope
imul
lods
xchg
xor
jp
inc
and
(bad)
mov
and
add
dec
pop
mov
scas
add
push
jecxz
lods
(bad)
ret
repz
dec
out
loopne
cdq
jg
xchg
jg
js
outs
jge
pop
add
daa
int3
push
xor
jl
or
adc
cmc
dec
lds
call
sub
cmc
ret
test
and
imul
sub
(bad)
test
int
cmp
arpl
sub
lods
outs
clc
ror
sub
cld
lea
mov
fsub
sti
mov
fbld
test
mov
mov
push
xchg
pop
idiv
aaa
or
or
rcr
adc
gs
fs
dec
jl
outs
xlat
jno
mov
jp
loope
adc
push
xchg
ins
data16
ror
mov
call
aam
popf
inc
loopne
jns
mov
push
std
xchg
and
xchg
shl
sbb
dec
dec
xor
scas
das
pushf
adc
push
retf
inc
inc
cs
and
inc
das
inc
adc
adc
imul
shl
cld
int3
out
rcl
enter
jp
xor
jne
pop
pop
xchg
cdq
xchg
ss
(bad)
jp
inc
cmp
adc
jl
add
sbb
sti
jl
into
add
stos
xchg
aaa
nop
xchg
bound
mov
jle
inc
movs
jge
repz
mov
test
sti
mov
popf
test
xchg
ret
or
pushf
sub
cmps
(bad)
cmp
push
mov
mov
xchg
mov
test
mov
stos
jl
je
bnd
ins
push
dec
clc
leave
inc
xor
xor
ds
movzx
std
xchg
pop
mov
mov
or
jns
dec
in
aam
je
jl
sbb
imul
inc
pusha
jl
ror
cmp
jo
pop
fiadd
or
cwde
inc
inc
push
mov
retf
push
int
sub
sbb
sbb
ror
mov
inc
dec
idiv
sti
mov
adc
aaa
mov
pop
xchg
inc
mov
pop
retf
(bad)
adc
or
pop
in
push
loopne
jle
rcr
fwait
clc
cmp
gs
lods
adc
cmp
jmp
jge
dec
scas
mov
pop
sub
lock
mov
test
loop
fisttp
push
jl
out
xchg
inc
mov
mov
retf
xor
aam
and
call
repnz
popa
test
cwde
jp
pop
add
and
aaa
ret
(bad)
add
push
and
and
mov
jl
mov
jle
dec
ret
sub
loop
fadd
jp
mov
cmps
mov
retf
popf
jnp
dec
sub
lea
mov
sub
cmp
mov
sar
test
hlt
fld
outs
out
and
mov
jo
pusha
addr16
jl
push
jb
inc
push
jnp
jl
or
in
mov
add
mov
jne
inc
dec
add
add
push
imul
arpl
lahf
aam
cmp
jl
loope
int
jns
hlt
sti
popa
nop
add
adc
les
out
stc
jnp
aas
pushf
xchg
inc
xor
cmp
out
push
ss
js
xor
pop
and
dec
mov
rcr
xchg
mov
dec
adc
push
cdq
or
push
xchg
xor
popf
and
push
xlat
loopne
hlt
adc
jno
out
pop
ds
rcr
lahf
cwde
jmp
in
and
or
pop
pushf
xchg
dec
outs
pop
pop
mov
popf
inc
out
cmp
iret
daa
fwait
int3
mov
pop
mov
sub
mov
addr16
ja
movs
cmp
pushf
in
mov
outs
lock
jno
enter
xor
and
xchg
cmc
and
cmp
stos
adc
pop
test
or
sti
hlt
cmps
sub
jge
out
dec
iret
adc
movs
nop
ins
scas
outs
or
and
cmp
or
jl
xchg
pop
ficom
shl
jb
cmp
sar
xchg
jnp
pop
inc
lods
or
sbb
out
das
push
ins
push
mov
push
test
ret
xchg
push
mov
jmp
jl
retf
fnstcw
cmp
pop
cwde
xchg
cmp
jmp
stos
add
clc
outs
nop
jge
fstp
or
mov
xchg
sub
jl
push
pinsrw
mov
mov
pusha
mov
pushf
enter
xchg
jl
mov
into
inc
dec
mov
jl
sub
loopne
lods
cli
mov
inc
pop
sub
out
push
mov
or
leave
sub
pop
mov
aaa
adc
les
loopne
popf
ror
or
push
sahf
pop
xor
adc
sbb
pop
inc
jne
sbb
jge
movs
xchg
xchg
popa
mov
imul
push
jae
out
retf
icebp
enter
ror
inc
stos
fisub
mov
(bad)
xor
sub
outs
adc
in
int
xchg
in
ja
stc
ins
cld
mov
push
ds
out
add
jl
adc
nop
jl
mov
(bad)
stc
jb
add
add
sbb
pop
jl
ja
xor
mov
and
(bad)
shr
aas
mov
dec
jl
push
jg
cld
xchg
dec
jl
nop
ja
inc
sub
ret
jae
dec
cmp
push
ins
ja
jecxz
mov
in
jle
ins
pop
jl
mov
repz
dec
mov
xchg
bound
jl
scas
adc
jl
call
addr16
mov
fnstcw
push
or
push
cmps
lods
adc
or
enter
stos
jnp
mov
int3
ds
xchg
inc
or
loopne
cmp
add
inc
scas
xchg
je
aad
sahf
add
add
push
fcmovu
jae
adc
test
js
scas
call
ins
jmp
jnp
xchg
fst
dec
ja
sbb
xor
mov
adc
sar
outs
cs
xchg
dec
out
add
repnz
mov
sti
retf
sbb
push
xor
jl
push
enter
mov
pop
imul
fwait
jl
or
outs
int3
movs
push
stos
scas
sbb
xlat
mov
jl
inc
or
jl
inc
shl
stos
push
mov
bound
pop
idiv
in
shr
cmc
push
add
push
add
movs
js
pop
loopne
daa
cld
lock
jns
aad
cmps
xor
data16
mov
(bad)
in
mov
xchg
xor
mov
sbb
rcl
inc
push
jp
les
pushf
cmp
test
sbb
in
jl
paddd
push
sar
jl
test
push
xor
push
jl
push
jle
pushf
mov
sub
xor
jl
lods
mov
fnstcw
push
daa
xor
sbb
jl
ret
mov
mov
jns
(bad)
aaa
ins
or
call
or
add
mov
mov
jnp
sub
(bad)
not
inc
(bad)
jl
lods
fcomp
loope
fsubp
or
popf
sub
jecxz
das
inc
sbb
inc
or
ja
sbb
outs
pop
in
cmp
add
jne
popf
ffreep
jl
cmps
dec
test
push
fnstcw
jl
repz
loope
sbb
inc
outs
add
dec
dec
pop
pop
in
push
pop
jl
ror
jmp
jl
stc
inc
adc
jecxz
bnd
dec
jmp
ds
fcomi
push
inc
fs
in
inc
fdiv
out
add
mul
fild
dec
or
ja
pop
jmp
push
inc
adc
std
sbb
add
js
pop
jl
dec
frstor
jns
mov
jle
xchg
cmps
xchg
test
fadd
arpl
(bad)
shl
sub
clc
pusha
and
cli
fisttp
popa
push
push
repz
cmps
jl
xchg
push
sbb
inc
aad
jl
xchg
ins
inc
ficomp
icebp
push
mov
mov
pushf
je
loope
jl
mov
cmc
(bad)
xor
addr16
cmp
pop
inc
pusha
mov
push
cli
mov
test
mov
mov
jno
jge
cmps
retf
jg
mov
(bad)
mov
aam
fld
(bad)
loop
mov
aad
jl
out
dec
jno
cdq
fisttp
ins
or
mov
push
ret
retf
ja
lahf
(bad)
pop
jmp
loope
cmp
aad
arpl
inc
ffree
sar
cwde
mov
sti
pop
adc
jns
das
mov
jl
fdivr
or
fld
loope
loopne
loop
fcom
push
jno
ja
or
xchg
movs
mov
addr16
rol
cmps
jl
in
loope
in
in
outs
jno
pop
ret
out
cmps
mov
jmp
push
mov
jl
popa
xor
or
shl
sub
add
fs
add
and
rol
int3
pushf
retf
popa
dec
cwde
js
ins
fcmovnu
jge
test
jl
pop
in
add
xor
and
mov
push
jl
call
xor
jmp
gs
add
jge
jne
mov
hlt
cwde
adc
jl
and
xor
int
jg
pop
inc
icebp
stc
mov
jl
add
mov
shl
scas
xor
pop
pop
or
jl
lods
dec
mov
jl
test
jg
fmul
xlat
mov
jl
fdivp
loopne
hlt
inc
inc
jl
mov
or
fldenv
jle
xchg
rcl
retf
push
xchg
fiadd
dec
jl
sar
fsubr
cmps
fstp
cmp
xchg
inc
icebp
jl
test
mov
jnp
mov
sbb
in
into
mov
pop
test
mov
lahf
(bad)
aad
(bad)
(bad)
loopne
jl
std
pushf
imul
xor
fisttp
es
leave
test
cmp
sbb
fsub
mov
cld
xor
jl
test
sbb
fild
ss
arpl
popa
jl
jnp
cs
jno
mov
xchg
add
inc
push
(bad)
rcl
push
cmp
stc
fwait
mov
push
sbb
mov
pushf
add
inc
out
or
jl
shl
fnstcw
aad
out
(bad)
pop
jl
sbb
fsubp
sti
mov
mov
scas
mov
(bad)
mov
adc
pop
call
push
adc
test
sub
fmul
cwde
in
and
jl
ud2
sub
pop
pop
stos
jl
xor
jp
pop
mov
jl
or
xchg
popa
mov
clc
xor
jl
mov
push
jge
movs
hlt
inc
imul
add
inc
sub
in
stos
test
(bad)
popa
xchg
jl
pop
mov
loope
sbb
in
and
inc
xor
and
xor
dec
in
cld
ja
mov
jl
rcr
xchg
retf
fsubr
int
xchg
mov
jl
or
faddp
jl
and
(bad)
sub
shl
xchg
fsub
inc
fdivr
adc
jnp
lea
jbe
test
jno
jp
js
jle
inc
cmp
test
bound
inc
js
push
sub
rcr
jge
fsub
jp
ror
(bad)
mov
mov
jl
dec
into
fcomp
push
push
push
mov
fwait
mov
jl
ins
hlt
mov
xlat
mov
jl
ffree
sar
jbe
jns
movs
out
xchg
and
xchg
sbb
jnp
adc
icebp
fisubr
push
jge
inc
psubusb
sbb
popa
jl
(bad)
retf
or
ror
adc
cwde
int3
rcl
pop
and
loope
rol
push
(bad)
jmp
jo
fist
retf
jl
and
ret
fild
cmp
fcmovu
xchg
dec
lock
inc
aad
outs
adc
movs
pop
fmul
int3
xchg
mov
fidivr
sbb
jp
imul
add
fcomip
pop
jno
pop
test
outs
jge
ins
dec
jl
(bad)
(bad)
std
popa
sahf
into
add
dec
cmp
outs
and
cmp
cdq
mov
out
mov
xchg
mov
push
int3
popa
sbb
loope
(bad)
sbb
jl
xchg
sahf
cwde
test
dec
jp
or
fnstsw
nop
xlat
jmp
sahf
fadd
adc
repnz
sar
fistp
fxch
sahf
jmp
cld
call
jp
test
loope
lds
(bad)
fisubr
leave
adc
loop
lahf
xchg
jl
frstor
outs
rcr
push
push
inc
es
idiv
pop
xchg
push
popf
gs
cmps
jl
push
adc
mov
mov
and
ret
jnp
jmp
scas
mov
cld
xor
in
popa
mov
icebp
jge
add
mov
movs
iret
push
das
mov
bound
adc
mov
jl
jle
cmps
int
or
inc
push
fadd
das
lea
sbb
inc
jge
popa
aad
stos
fst
(bad)
fdiv
mov
lods
adc
ins
stos
(bad)
(bad)
outs
(bad)
fnstenv
mov
das
mov
and
(bad)
mov
mov
popf
fld
lods
mov
and
or
dec
mov
add
fisttp
gs
pop
or
inc
les
sar
out
cld
into
in
pop
std
sar
dec
aad
(bad)
xor
(bad)
dec
jp
sahf
pop
dec
adc
or
ss
mov
jl
fnstsw
mov
pushf
pop
jl
cmp
popf
mov
test
mov
pushf
mov
leave
mov
scas
lods
adc
mov
xchg
mov
rol
cmp
pop
pop
mov
scas
fstp
jae
jle
add
jnp
jo
mov
ficom
sub
jp
ret
xchg
push
sbb
mov
stos
jmp
jge
or
std
jecxz
xor
jl
add
adc
push
cmp
rcl
int3
aaa
push
loopne
jle
jl
mov
inc
jl
mov
(bad)
loopne
ja
push
ret
mov
aad
push
or
psubq
xor
hlt
fistp
and
les
jl
iret
pop
(bad)
fmul
daa
cmp
push
jl
je
dec
mov
loope
push
pop
fwait
hlt
mov
jl
ds
repnz
stc
jne
mov
fnsave
in
scas
jbe
mov
jl
push
std
(bad)
fisubr
adc
xlat
pop
pop
int
repz
cmp
aad
fcom
lock
inc
sar
int
(bad)
int3
jl
pusha
sbb
aad
dec
mov
lods
loopne
bound
fistp
push
push
out
fwait
scas
jl
add
jno
sbb
jl
push
popa
xchg
in
sbb
fdivp
jmp
loope
cmp
inc
jne
hlt
cld
jbe
arpl
in
jns
retf
lahf
mov
mov
push
mov
pop
ins
jl
loope
pop
xlat
fstp
rcr
xor
cs
shr
rcl
inc
jl
sbb
xchg
scas
mov
aad
pop
cmps
push
(bad)
jl
mov
xchg
arpl
sub
ret
pop
add
jl
cdq
popa
or
fild
movs
push
mov
add
mov
addr16
stc
jl
arpl
lods
xchg
fs
push
out
and
rcr
sahf
cmp
inc
gs
push
ja
iret
xchg
jmp
outs
inc
jnp
xor
pop
jp
shl
aaa
sar
lahf
(bad)
or
jl
push
nop
test
je
cs
ret
mov
stc
punpcklwd
fidivr
jl
imul
mov
js
ret
rcl
(bad)
pop
outs
push
add
inc
lds
jmp
mov
jl
fist
(bad)
test
jl
mov
repnz
test
fnstcw
dec
imul
test
sbb
mov
icebp
in
jl
stc
xor
push
popa
cdq
inc
sbb
adc
mov
mov
push
int
outs
pusha
lock
xor
mov
mov
jo
arpl
leave
jl
sbb
fcmovbe
jge
or
xchg
adc
jl
adc
fdivp
les
std
test
(bad)
retf
xchg
(bad)
xchg
add
inc
jl
hlt
int3
loope
or
mov
addr16
fisubr
inc
outs
icebp
rcr
cmp
popa
fstp
(bad)
jl
or
sub
mov
jnp
fisttp
fist
loopne
push
or
cld
pop
(bad)
icebp
cld
call
cdq
mov
push
movs
add
jge
push
push
rcr
sbb
push
mov
jmp
mov
push
dec
push
lods
xor
(bad)
dec
mov
addr16
cmp
mov
jl
cmps
add
cmp
fistp
and
fdiv
popf
push
popa
outs
pop
scas
jae
pushf
jg
(bad)
jnp
push
loopne
neg
sbb
pop
and
adc
sub
mov
ja
ficomp
(bad)
rcr
mov
xor
sub
mov
inc
loopne
push
mov
xor
and
fsubr
lahf
mov
cld
enter
imul
cmps
(bad)
mov
gs
mov
jl
adc
fild
adc
mov
or
mov
imul
fnstsw
ficom
cdq
pop
xchg
jl
stos
(bad)
push
popf
(bad)
jns
dec
mov
out
int
jl
pop
inc
loope
imul
jl
retf
push
pusha
jno
js
adc
xlat
jl
rol
aad
cmp
fstp
ja
imul
shr
fstp
mov
xchg
and
(bad)
jge
adc
ror
or
or
fmul
ja
(bad)
shl
test
fnstcw
mov
idiv
popa
dec
movs
loope
jge
je
ja
mov
int3
mov
retf
test
jl
aad
outs
cmc
mul
jl
cli
cmps
jle
mov
shr
jmp
fidivr
xor
hlt
ja
jge
and
push
fmul
ja
jl
inc
lahf
fsub
call
shr
jl
mov
or
icebp
push
mov
shl
movs
jl
outs
scas
(bad)
shl
xchg
and
lds
(bad)
jmp
pop
and
dec
hlt
xchg
jno
fdivr
jg
shl
hlt
loopne
xor
neg
popa
mov
retf
inc
jl
xor
and
mov
jl
and
sar
fsubr
sub
iret
sub
(bad)
xlat
pusha
into
aad
sti
sbb
xchg
xchg
and
cmp
pop
cmp
xchg
(bad)
loopne
test
je
lods
cmp
in
cmps
xor
or
inc
mov
sub
push
fmul
sbb
shl
std
or
fld
cmps
cmp
xchg
pop
pop
sahf
cld
sub
stc
cmp
sub
mov
enter
dec
std
fistp
ret
in
cmp
enter
cmps
mov
jl
or
push
push
cmc
jge
stc
or
mov
cwde
(bad)
out
jl
shl
ins
cdq
sar
arpl
add
mov
and
xor
jmp
test
add
int3
jne
pop
(bad)
jl
pop
cmc
push
mov
lea
push
leave
dec
xchg
repnz
fdivrp
hlt
outs
test
cmps
xor
sub
jl
mov
(bad)
adc
ret
jns
mov
jl
stc
mov
push
jl
imul
fnstcw
push
ins
pushf
popf
ss
ret
add
cmp
lods
and
ins
(bad)
shl
jl
ds
fisub
paddsb
push
popa
cmps
js
pop
ins
jecxz
cld
mov
pushf
sbb
jnp
jl
pop
(bad)
xchg
int
fld
jl
out
pusha
test
mov
add
and
jl
push
lds
hlt
les
mov
push
mov
mov
fst
sub
or
lods
sahf
aad
cmp
pop
jl
and
push
pop
jmp
ret
add
inc
bound
inc
add
aad
clc
jge
pop
fcmovnu
movs
mov
sti
mov
jnp
test
les
ficomp
ficom
adc
repz
jl
mov
cmp
retf
pop
mov
jge
mov
push
sbb
into
or
jl
(bad)
jne
cs
lods
mov
outs
push
sub
call
aad
jl
shl
(bad)
mov
pop
jle
pop
popa
jmp
int3
orps
push
cmp
mov
xchg
fdivr
ja
cmp
rcr
mov
push
push
xor
mov
cwde
jl
pop
adc
mov
sbb
out
pusha
push
cwde
xor
hlt
cli
mov
pusha
sar
jle
pop
cmps
mov
js
(bad)
jmp
sahf
mov
push
sub
pop
mov
lahf
std
cmp
cmps
sbb
sbb
jb
fisttp
movs
fxch
mov
cmps
jmp
test
jl
iret
jg
push
popa
test
fwait
aad
fistp
jp
mov
ret
mov
inc
add
lds
loope
adc
mov
jae
xchg
call
fnstcw
aam
out
jae
sbb
push
jl
ud1
(bad)
xor
imul
dec
retf
nop
jmp
sub
test
push
mov
jl
cmp
push
and
pop
ret
rcr
mov
leave
add
jl
fsub
ret
inc
push
jp
add
sbb
jns
or
jge
pop
ret
pop
xchg
pusha
mov
enter
std
push
fdivp
push
int3
push
jl
mov
push
push
jl
pop
leave
mov
jl
mov
test
arpl
adc
jl
bound
or
dec
jns
fdivrp
movs
fidivr
(bad)
sbb
jge
jmp
mov
fwait
imul
enter
sti
mov
(bad)
push
sti
ffreep
pop
mov
mov
cdq
stos
mov
inc
push
push
adc
(bad)
mov
cmps
push
movs
mov
mov
jg
mov
aaa
(bad)
in
push
jp
cmps
lahf
int
jno
cmps
cmc
jg
lods
jl
fcmovne
mov
jnp
push
adc
jl
adc
(bad)
pop
retf
jns
rcr
mov
jp
(bad)
(bad)
mov
jnp
jl
fistp
lea
fist
pushf
stc
(bad)
jnp
loopne
dec
mov
lods
ret
jl
cmp
cli
test
leave
inc
mov
xchg
loopne
(bad)
stc
xor
and
fstp
add
shl
sub
sub
jne
ds
bound
mov
popa
mov
mov
pop
arpl
push
and
fstp
in
inc
cdq
jns
push
adc
pushfw
add
rcr
xchg
pop
mov
jge
shl
cmps
pushf
sub
dec
adc
hlt
mov
(bad)
mov
push
fiadd
cmc
dec
aad
ret
mov
mov
retf
loopne
xlat
(bad)
in
in
fistp
inc
lds
inc
jnp
cmp
mov
push
xor
sub
(bad)
(bad)
ja
neg
clc
jmp
push
jl
push
inc
cmc
jle
fdiv
gs
sub
add
jl
loope
test
cdq
stc
sub
rcr
or
out
mov
jnp
fist
iret
test
jge
mov
jbe
in
pop
ins
or
xlat
fadd
mov
iret
jl
cmp
push
popf
sar
retf
fwait
jl
cmps
loopne
mov
call
push
add
pop
fild
push
(bad)
push
jae
in
fld
push
adc
fdivr
jl
inc
mov
aad
or
outs
(bad)
inc
pushf
faddp
or
mov
daa
(bad)
jl
dec
loope
popa
(bad)
sbb
xor
fstp
push
mov
rcl
cwde
cmp
enter
fdivr
pop
fcom
mov
movs
imul
push
pop
ror
aam
mov
or
fimul
xor
fdivr
mov
push
ror
mov
push
dec
push
add
push
jns
(bad)
add
xor
push
call
mul
imul
pusha
loopne
cdq
rcl
mov
mov
adc
mov
ds
and
pop
add
ss
xor
sar
push
lahf
aad
shr
test
fadd
jl
jle
fmul
push
in
cmp
sar
out
mov
ret
in
imul
and
(bad)
imul
cdq
mov
fsubr
fistp
mov
mov
ja
jnp
add
jno
and
mov
sar
fst
ds
jle
mov
and
jl
fisttp
fldenv
dec
inc
mov
rcl
cmp
jno
scas
mov
lds
cmp
jl
jns
push
xchg
xchg
sar
fcomi
push
mov
in
popf
dec
mov
scas
sahf
jge
push
icebp
and
loopne
push
xchg
cmps
into
jno
shr
jg
ror
and
out
mov
je
leave
outs
mov
stc
mov
push
mov
sbb
jno
jae
fistp
out
movs
pop
pushf
(bad)
out
pop
jl
and
dec
pop
jmp
bound
dec
adc
cmp
pop
pop
rcl
adc
xchg
pop
jbe
call
inc
ret
je
jg
jge
push
jne
or
mov
adc
imul
push
jl
or
and
sub
cmc
xchg
rcr
jl
aaa
not
fnsave
aam
out
push
sar
(bad)
mov
popa
sbb
stos
in
mov
shl
pop
mov
fistp
out
push
mov
jl
push
add
aam
nop
xchg
jl
mov
pushf
jnp
neg
test
popf
mov
pop
jl
xchg
jecxz
jno
sbb
jl
loopne
dec
(bad)
adc
mov
push
ja
xchg
mov
jmp
out
push
ror
movs
iret
sar
mov
fst
mov
push
pop
xor
xchg
ror
xchg
jnp
rcr
cmp
pusha
cmp
jl
cmp
jl
iret
(bad)
ret
cmp
jl
imul
jnp
jmp
mov
loop
js
stos
rcr
iret
inc
(bad)
jno
and
pop
mov
or
inc
mov
jmp
mov
cmp
cmp
mov
lods
add
repz
movs
push
fcomp
pop
and
jl
in
pop
pop
and
jecxz
mov
adc
mov
leave
pop
mov
repnz
loope
(bad)
fld
enter
adc
jp
sub
mov
jnp
xchg
mov
neg
xchg
mov
jl
xor
aas
lea
icebp
and
fstp
mov
aad
adc
fsubr
mov
(bad)
shl
adc
popf
scas
adc
(bad)
outs
or
push
ss
shld
fistp
les
adc
out
rcl
add
xchg
and
leave
jl
jno
xor
mov
les
outs
jp
add
mov
inc
pushf
fidivr
push
ins
jnp
fwait
xchg
movs
jne
mov
fisttp
xchg
pop
and
jo
jge
mov
outs
mov
stos
int3
sub
test
xchg
fcomp
add
xchg
and
mov
lea
mov
xlat
std
jecxz
push
shl
jmp
fcom
jnp
pusha
sbb
scas
xchg
call
data16
inc
fist
fcom
dec
into
je
jno
outs
inc
add
jl
pop
pop
xchg
lock
(bad)
xor
pushf
push
outs
xor
and
call
xchg
push
push
mov
pop
fwait
loope
outs
xchg
mov
jno
sbb
fstp
jl
adc
xchg
mov
ret
scas
pop
cmp
jl
cmp
cli
jl
mov
fimul
(bad)
jb
jo
call
cmp
fdiv
out
rcl
mov
jge
jle
xchg
mov
xlat
sbb
pop
push
dec
ror
in
adc
lods
movs
fimul
push
sbb
lahf
push
and
or
adc
jae
jle
jl
pop
xchg
xchg
fdiv
into
mov
imul
jns
shr
jne
test
inc
ins
(bad)
mov
popf
sub
jns
mov
jns
ds
in
jge
xchg
fistp
(bad)
mov
inc
data16
mov
pop
jl
push
xchg
pop
dec
je
sar
xor
retf
outs
sar
xor
push
sub
mov
or
icebp
push
daa
mov
sar
nop
jnp
imul
cmp
dec
shl
dec
push
push
fstp
popa
sbb
out
popa
iret
xchg
data16
aad
cs
test
cmp
popa
jae
leave
fnsave
rcl
loope
jl
popf
outs
jbe
imul
cmp
lea
dec
add
jl
clc
fsubr
fstp
mov
hlt
mov
jl
mov
cmps
inc
pop
jl
nop
out
and
(bad)
sahf
push
outs
inc
jecxz
data16
shr
fdiv
cmp
and
jl
fsubrp
cli
stc
push
cmp
jle
cmc
or
imul
add
aam
sti
mov
pushf
fnsave
xlat
pop
clc
int3
cmc
pop
call
mov
jl
jnp
pushfw
mov
adc
cmp
movs
(bad)
loop
in
xchg
push
jae
cmp
outs
in
mov
jl
enter
jle
sbb
lea
pop
movs
jo
lods
jl
pop
ins
cli
cmps
dec
fwait
mov
add
sbb
jl
dec
lahf
mov
loop
clc
lock
xchg
sti
xchg
cwde
cmps
in
jl
mov
cdq
jno
sti
and
stos
inc
sar
sahf
mov
lds
popa
push
(bad)
xchg
lea
jl
mov
cmp
ror
cmps
jnp
push
and
(bad)
xchg
mov
test
pop
fbstp
aad
arpl
mov
hlt
retf
rol
mov
xchg
xchg
mov
int
leave
add
hlt
xchg
cdq
jge
jmp
inc
popa
and
shr
add
mov
lods
outs
xor
jl
call
aam
jl
mov
pop
outs
arpl
add
int
jl
lds
data16
fs
sahf
or
lods
int3
jne
cmp
std
sbb
pop
test
mov
and
jl
xchg
dec
adc
ds
or
jl
cmp
stos
fmul
test
jl
pop
ins
push
sar
pop
fimul
popf
jl
push
jl
adc
dec
xor
sub
jl
mov
popa
add
xor
add
out
pushf
pop
cmps
movs
push
mov
call
movs
aam
ret
mov
popa
push
pop
dec
pop
add
loope
mov
lods
pushf
mov
psadbw
and
push
fmul
add
mov
jl
je
imul
inc
iret
inc
mov
xor
jl
cmp
imul
icebp
dec
scas
inc
lds
pop
arpl
loopne
ja
fld
ror
mov
sub
xor
xchg
fnstcw
jl
dec
mov
mov
mov
jl
inc
cld
xor
retf
stos
rol
push
jl
fld
test
fistp
jl
cs
rol
jl
loopne
out
in
rcl
jl
pop
xchg
cmp
jl
mov
(bad)
dec
popf
(bad)
fdivr
in
mov
jge
adc
pop
jp
xchg
push
jl
fidivr
xchg
sbb
(bad)
jge
into
dec
sar
lahf
fidiv
int3
rcl
mov
jg
(bad)
jl
mov
sbb
retf
movs
inc
sub
jl
adc
fistp
mov
cmp
jl
dec
push
or
inc
sbb
les
jl
sub
daa
ror
clc
add
adc
mov
adc
mov
jge
iret
cmc
jnp
retf
fdivr
in
jmp
jo
int
sti
mov
xor
inc
push
and
mov
inc
cmp
jl
les
lahf
push
dec
loop
jo
fidiv
in
jnp
dec
dec
and
jl
and
xlat
or
lods
push
into
cld
dec
(bad)
movs
ficomp
push
mov
push
mul
ss
aas
popa
mov
jnp
out
sbb
xlat
iret
hlt
mov
lock
rol
jl
rcr
jae
push
push
movs
stc
(bad)
jl
sub
push
sbb
dec
ret
or
push
sbb
cld
pop
mov
jge
push
xor
mov
test
inc
lea
pop
jge
test
jl
jae
dec
emms
jl
shl
mov
iret
js
push
jns
into
cmp
adc
adc
stos
and
sbb
loope
adc
test
adc
test
jl
mov
call
push
push
jl
xchg
loopne
push
gs
xor
fstp
outs
rcl
mov
xor
out
mov
jl
nop
int
scas
shl
clc
mov
jmp
int3
xchg
sub
jae
jne
scas
mov
sub
jge
jbe
shl
push
lods
xlat
sar
push
add
les
jl
(bad)
xchg
enter
xchg
jp
out
xchg
jo
ret
mov
mov
xchg
and
imul
jb
outs
jle
or
mov
mov
or
xor
pushf
xchg
jne
in
sar
cld
adc
cmps
xchg
jl
mov
pushf
xchg
jle
fistp
sahf
dec
rcl
iret
imul
pop
pushf
mov
dec
add
rol
out
das
jl
mov
arpl
movs
mov
fwait
imul
jbe
add
push
push
pusha
xor
popa
or
xor
sar
mov
(bad)
in
sbb
jge
pushf
jns
jg
lods
jl
data16
mov
inc
(bad)
cli
std
test
mov
mov
mov
mov
lea
add
sbb
scas
dec
pop
add
jl
sub
jo
xchg
mov
jl
mov
adc
fwait
js
mov
out
mov
cmps
cmp
push
jl
rcr
xor
int3
jl
sbb
jmp
sbb
je
test
(bad)
lea
push
jb
gs
dec
sub
dec
push
add
cmps
stos
jl
lods
mov
lds
std
xlat
sbb
je
jge
xchg
jge
inc
mov
jl
shl
push
jl
ret
pop
enter
inc
sbb
and
xchg
les
mov
in
test
outs
xor
push
popf
jo
pop
outs
rcl
ret
inc
jp
sub
jno
mov
xchg
scas
popf
(bad)
call
add
lahf
div
repz
xchg
or
dec
mov
sahf
pop
xchg
ror
jae
cmp
lea
sbb
xchg
xor
xchg
xchg
mov
dec
xor
aas
cdq
fidivr
aam
cmps
hlt
into
ja
in
retf
shr
outs
(bad)
pusha
daa
test
ins
in
jne
mov
mov
dec
test
jnp
das
and
cld
aad
mov
hlt
loope
stos
lods
mov
jl
and
sti
scas
(bad)
jle
test
outs
pop
les
pushf
sub
inc
aad
nop
sbb
hlt
mov
or
mov
xchg
cmp
jl
push
mov
push
dec
mov
fsubr
jl
int3
add
jge
sbb
aam
sahf
mov
mov
jl
ret
hlt
cmp
and
ds
cmp
into
loopne
popa
xlat
popa
mov
push
mov
in
jge
fnstenv
mov
mov
jl
sbb
cmps
cmp
lock
cld
inc
(bad)
dec
xlat
jl
sbb
retfw
xchg
movs
fild
rcl
jl
dec
leave
sbb
out
jl
pushf
lds
dec
leave
mov
dec
mov
jp
scas
xchg
jb
aas
jl
jno
(bad)
es
popa
xor
mov
ror
pop
inc
cdq
jge
xchg
inc
sar
push
cli
cmp
sub
adc
rcr
dec
aad
lods
mov
outs
push
fld
mov
data16
jp
jbe
(bad)
lods
shl
outs
(bad)
stc
ror
fst
fistp
cmp
out
cld
fcomp
in
xchg
sti
mov
(bad)
and
inc
xor
stc
rol
mov
jl
loope
jnp
js
jbe
je
fbstp
jae
jno
outs
add
push
imul
imul
pushf
popf
loope
fwait
cwde
cdq
jb
xchg
xchg
xchg
mov
or
mov
pop
int3
push
jl
aaa
dec
ja
jmp
pushf
or
lods
xchg
cmp
pop
dec
mov
add
imul
in
jl
arpl
push
cmp
popa
jl
ds
jecxz
mov
sub
popf
sub
cmps
aas
std
test
movs
stc
mov
push
ds
xlat
mov
cmps
pop
and
xor
or
add
out
scas
idiv
xchg
leave
xor
ret
int
(bad)
popf
cmp
inc
iret
jl
mov
pop
mov
jg
int
adc
movs
(bad)
(bad)
mov
mov
mov
fdiv
enter
jmp
push
stc
add
jl
and
mov
pop
jl
fisttp
xchg
mov
iret
jns
sbb
rcl
into
jmp
or
sbb
popf
sbb
dec
adc
ins
cmp
stos
test
pop
sar
cmc
(bad)
or
push
sbb
cdq
inc
dec
imul
pushf
xchg
shl
(bad)
jns
sub
fdivr
sar
dec
popa
and
mov
popf
push
ror
iret
fbld
leave
xchg
mov
xor
jp
mov
movs
add
jge
into
mov
mov
les
pop
or
into
std
cdq
ins
rol
scas
sar
mov
inc
jne
fcmove
jge
ret
push
enter
sbb
xor
fistp
in
iret
retf
jle
ins
add
jl
int3
lea
xchg
leave
call
movs
out
enter
iret
mov
mov
mov
mov
pushf
icebp
pusha
jge
scas
jmp
pushf
pop
out
push
jae
pop
push
jl
cdq
aad
mov
mov
fimul
xor
inc
std
outs
in
cmp
xchg
lods
out
fwait
cld
test
mov
ror
dec
(bad)
fs
in
cmp
stos
pop
jl
cdq
mov
outs
retf
(bad)
pop
mov
jl
xor
inc
fistp
bound
sbb
aad
out
pop
and
xor
sbb
xor
enter
ror
retf
jl
shl
jl
push
les
fnstcw
ret
jl
adc
xchg
and
inc
sub
jno
cmp
sbb
sbb
and
mov
nop
(bad)
hlt
gs
xchg
dec
or
rcr
push
rcr
inc
es
gs
repnz
cmps
iret
jl
inc
pop
mov
cmp
loopne
shl
xchg
loope
push
cwde
daa
dec
cmp
je
mov
outs
rol
lahf
fadd
push
add
inc
pop
in
hlt
arpl
mov
jl
out
mov
pop
pop
mov
ror
aaa
jmp
sbb
inc
mov
call
addr16
adc
dec
rcr
inc
(bad)
cld
ja
fwait
shl
enter
pop
pop
jl
imul
xchg
mov
lahf
jl
cmp
stos
sub
jl
repnz
cli
and
inc
dec
xchg
jl
cmp
icebp
shl
jl
push
test
jle
loop
add
push
leave
jl
js
dec
jmp
and
sbb
xchg
push
inc
fisttp
push
jl
(bad)
push
leave
mov
adc
scas
fisub
xlat
mov
fcmovb
jmp
jl
nop
push
fmul
iret
pop
jl
and
mov
faddp
jp
mov
sub
out
cmp
rcl
jl
pop
cwde
les
repz
pushf
sub
xor
and
lods
mov
cli
or
jl
clc
rcr
loop
adc
pop
into
push
loope
xchg
jl
(bad)
xchg
sbb
jl
push
sbb
mov
int
inc
xor
jl
js
dec
cmps
call
jl
sbb
sbb
and
jle
gs
jge
loope
push
arpl
mov
or
push
(bad)
dec
pop
les
popf
cdq
icebp
cmp
cmps
jl
mov
mov
jne
xor
jge
fwait
adc
mov
adc
jne
lds
pushf
jg
(bad)
or
outs
mov
xor
jp
test
cmp
or
fld
cs
cld
pop
pop
mov
pop
call
push
add
cmps
lods
outs
lds
bsf
xchg
push
xchg
and
mov
cmp
dec
aas
sub
add
into
cmp
inc
cld
popf
xchg
shl
mov
jl
nop
mov
adc
(bad)
fnstsw
bound
sbb
inc
outs
clc
pop
xchg
xchg
pop
jl
leave
xchg
rcl
jl
fisttp
or
adc
fstp
pop
add
or
jl
mul
xchg
dec
mov
jnp
inc
ja
pop
sub
ins
test
mov
jg
popa
into
enter
mov
js
jl
and
ins
jl
inc
sbb
push
xor
ja
xchg
idiv
pop
dec
arpl
fidivr
pop
jmp
jl
stos
jae
sbb
cli
mov
push
pop
pop
jl
jmp
jl
(bad)
or
mov
repz
iret
je
imul
cmp
cmp
fmul
xchg
jl
jmp
ins
clc
pop
cmp
stos
push
fstp
sbb
sub
fwait
clc
loope
ja
adc
movs
pop
mov
mov
and
dec
or
sbb
mov
mov
jge
jl
and
in
test
cmps
pop
jp
dec
jo
jmp
lahf
sbb
scas
xchg
jl
dec
jecxz
pop
xchg
dec
xor
bound
sub
(bad)
jl
(bad)
jp
(bad)
push
xor
pop
jl
jnp
pop
int
lahf
sub
or
out
inc
clc
movs
xor
inc
das
mov
into
jae
jl
jecxz
retf
ss
repnz
jl
xor
adc
or
int3
call
xor
jl
ror
mov
push
xchg
xchg
mul
or
add
push
(bad)
jl
cli
(bad)
adc
jl
mov
fnstenv
pop
(bad)
sahf
mov
xchg
sub
jno
mov
mov
pop
shr
or
fimul
mov
cs
xchg
out
and
outs
sub
mov
sahf
pop
jg
push
xor
addr16
fidivr
xchg
add
cld
xchg
mov
clc
jae
pop
dec
dec
inc
sub
add
pushf
push
and
pop
lock
add
add
push
jnp
pop
mov
mov
jl
punpckhbw
(bad)
into
mov
ds
pop
movs
imul
jmp
pop
ficom
push
sub
jl
pop
inc
test
push
ret
xchg
loop
out
add
inc
iret
idiv
jl
push
jg
stc
adc
pushf
mov
xor
cmc
jmp
nop
jbe
movs
inc
movs
inc
add
lock
jle
or
fdivrp
out
fst
inc
ss
cdq
mov
ja
fs
dec
sub
add
int
cld
add
test
sub
cld
add
jl
inc
and
nop
dec
mov
dec
lods
inc
push
(bad)
mov
pop
jle
lds
jg
or
cld
outs
fnstenv
outs
mov
mov
into
imul
dec
add
jg
stc
dec
or
jo
stos
mov
stos
mov
mov
test
jmp
and
lods
cmp
push
outs
ret
push
clc
mov
push
dec
(bad)
outs
pop
mov
test
adc
fwait
call
jne
cld
inc
push
outs
div
stos
jg
std
adc
sti
cld
xor
or
ins
or
jae
leave
aas
mov
mov
ins
fcomp
(bad)
lahf
lea
jl
push
aad
loop
scas
cmp
in
retf
cld
xchg
and
popa
push
data16
xchg
pop
jecxz
adc
cli
xlat
xor
mov
ins
ret
mov
icebp
sbb
cs
and
(bad)
jmp
aaa
jl
cmp
mov
jl
es
rcr
jge
jmp
loop
push
imul
call
sub
xor
rcl
xor
pop
shl
cmp
mov
mov
sub
pop
imul
xchg
test
adc
cmp
js
pop
cld
mov
sbb
inc
inc
push
mov
inc
jns
stc
stos
push
popa
outs
repnz
jl
pop
retf
jl
adc
push
cmc
addr16
fstp
push
ss
sub
xor
in
pop
jl
or
mov
jl
les
jl
(bad)
js
jl
mov
pop
jge
fstp
inc
adc
rcr
mov
je
xor
mov
dec
cmp
adc
jge
not
inc
mov
jl
cld
test
loope
adc
jl
and
sub
scas
jl
sbb
jne
test
jg
sar
cmps
push
popf
sub
jl
sub
adc
mov
adc
jg
xor
pop
div
pop
jl
fsub
(bad)
stc
repnz
cs
cdq
ja
das
mov
enter
loopne
mov
into
add
ins
shl
xor
and
daa
jl
mov
pop
add
dec
jge
loopne
sahf
add
push
pop
call
jnp
shl
sar
loope
stc
sbb
jno
loop
in
and
daa
sub
movs
pop
sbb
pop
fcom
cmp
dec
cmp
jmp
jl
and
fsub
jbe
loope
retf
cli
(bad)
cld
fst
mov
jl
dec
jle
pop
mov
ret
in
out
pop
retf
inc
ret
int3
sbb
scas
sbb
adc
hlt
xor
in
arpl
sbb
adc
jmp
push
fsubp
xor
sub
mov
hlt
in
lock
inc
jns
sahf
jl
fmul
push
jl
mov
movs
rcl
popa
in
(bad)
pop
std
cmp
(bad)
dec
mov
cmp
jl
mov
frstor
cmp
ins
jl
add
neg
ret
icebp
jne
cmps
mov
jl
shl
and
cmp
push
mov
push
icebp
mov
jl
jns
adc
inc
inc
inc
stos
cld
fstp
mov
add
add
xchg
mov
cmp
sar
aam
sbb
mov
test
cmp
mov
mov
xchg
movs
jl
ret
push
inc
jle
jl
mov
movs
jge
and
test
mov
fdiv
add
adc
fidiv
sahf
add
jb
icebp
loopne
fsubr
loop
imul
lods
cmp
push
cmps
cmp
stc
shl
pop
pushf
mov
sub
jae
stos
jmp
nop
cmp
shl
fisubr
jg
inc
jmp
add
sbb
test
add
fsub
popa
inc
pushf
jecxz
add
add
sub
mov
cmp
popa
stos
dec
jl
jmp
push
in
cmp
pushf
cmp
inc
or
cld
xor
jle
mov
push
pop
jge
(bad)
push
pop
popf
js
add
push
pop
test
aad
pop
cmps
arpl
jl
pushf
and
outs
sub
pop
xor
inc
and
mov
xchg
fidivr
outs
loope
out
push
repnz
mov
sbb
test
ja
scas
cmps
xor
mov
cmp
jmp
xchg
sub
lds
lahf
aad
ja
ftst
mov
pop
sbb
mov
rcr
fldcw
adc
jl
ror
rcl
and
and
pop
pop
icebp
(bad)
xor
popa
leave
push
jmp
push
icebp
mov
fisttp
sar
scas
pop
pop
and
push
popa
pushf
retf
push
int3
mov
mov
jge
rcr
and
hlt
jl
adc
inc
rcr
pop
std
cmps
sbb
sbb
outs
scas
fstp
rcr
mov
scas
imul
loope
jle
ins
shr
movs
jo
ret
test
and
pop
fidivr
popa
faddp
xchg
cld
rcr
stc
xchg
imul
pushf
jl
outs
call
cmp
cld
jp
clc
shl
js
pop
add
outs
mov
pop
pop
lds
cmp
ja
jbe
inc
mov
(bad)
outs
mov
xchg
cdq
xor
lds
ffree
mov
mov
cmps
test
jb
rcr
jl
(bad)
iret
stos
rcl
or
fnstsw
mov
scas
mov
xor
push
fs
jnp
jo
add
popa
jl
xchg
aaa
jae
push
lea
ja
jge
dec
jnp
mov
mov
jns
ins
adc
jle
retf
scas
data16
stc
adc
push
outs
jl
mov
aad
jl
jmp
imul
cdq
rcr
(bad)
mov
movs
mov
inc
mov
add
xchg
sar
jae
add
and
sahf
jl
sahf
adc
jne
adc
push
mov
pop
mov
jb
jl
cmp
mov
je
cmps
jl
mov
xchg
cmp
pop
out
jl
xchg
adc
sbb
mov
xchg
les
xchg
lods
gs
mov
push
inc
jnp
(bad)
mov
dec
or
mov
jae
cmp
outs
jnp
rcr
push
popf
mov
dec
dec
js
mov
mov
adc
jl
push
ret
dec
or
jl
add
repz
aaa
lahf
(bad)
mov
movs
jns
scas
mov
xchg
icebp
jl
jp
jno
pushf
dec
lea
outs
xor
xor
inc
push
mov
leave
pop
retf
cmps
lahf
jl
cmp
push
jge
scas
pop
jae
outs
mov
retf
jl
jp
fisttp
(bad)
xchg
rcl
jl
push
lahf
jno
clc
jnp
cmp
mov
stos
test
push
sti
imul
dec
jb
popf
xchg
cmps
imul
stos
xchg
mov
xor
mov
imul
or
jle
inc
sbb
xchg
cmps
icebp
bnd
fld
pop
jnp
sar
(bad)
stc
cld
xchg
mov
add
jl
sub
cmp
jl
cdq
outs
test
adc
es
sti
jbe
outs
mov
mov
jl
cmp
jno
cmp
jl
sub
mov
leave
xchg
repz
mov
jg
dec
shl
push
mov
outs
repnz
cmp
or
pop
repz
jle
movs
mov
(bad)
mov
mov
fwait
pop
inc
mov
mov
jo
mov
jl
push
sysenter
(bad)
ds
sbb
popf
jge
aad
mov
test
into
add
pop
jnp
pop
mov
rcl
sbb
int3
rcr
popf
leave
imul
(bad)
cmp
or
les
cmp
jmp
push
ror
icebp
or
dec
sub
imul
scas
addr16
test
mov
pop
lods
lods
mov
jnp
dec
rcr
jl
retf
push
pushf
shl
inc
xchg
outs
fwait
jae
in
dec
fwait
cli
pusha
mov
fistp
js
cmp
jbe
es
sbb
xchg
outs
scas
push
push
or
call
nop
xor
(bad)
aam
jl
inc
ret
lds
jl
push
mov
push
inc
ret
pushf
sbb
sar
fist
ja
adc
xchg
add
outs
push
mov
rcl
push
popf
and
sbb
fwait
jl
jne
inc
outs
jp
fnstcw
shr
or
aad
cwde
cli
sahf
pop
inc
fdiv
sti
fwait
pop
fnsave
loopne
stos
aam
xlat
fcmovnu
inc
(bad)
fmulp
sahf
pushf
jl
shl
inc
fisttp
call
lea
test
test
jl
shl
or
push
jge
jns
fdivr
loopne
call
inc
fcmovbe
mov
jns
sti
push
cld
pop
pusha
scas
fchs
jl
add
test
cmps
sti
mov
into
idiv
leave
pop
out
mov
outs
jl
out
sbb
jmp
jge
fcompp
(bad)
pop
ins
jle
push
jo
jne
mov
jnp
cmp
xor
pushf
pushf
jp
or
sar
mov
out
sbb
das
jbe
les
mov
jge
sub
sbb
and
jp
fwait
mov
fdiv
adc
jl
mov
dec
rcr
and
repnz
mov
push
mov
mov
mov
jl
stc
adc
rcr
mov
fbstp
leave
xor
jg
rol
push
add
fwait
ds
outs
aad
retf
push
sar
add
inc
(bad)
push
outs
mov
in
dec
outs
out
push
or
pop
xor
outs
(bad)
(bad)
movs
or
into
jnp
adc
xor
push
mov
js
pop
call
jmp
jg
push
jecxz
ds
les
pop
cli
jbe
lahf
mov
mov
clc
pushf
cli
add
inc
push
inc
jnp
pop
and
fisttp
mov
lds
add
sbb
xor
cs
in
inc
fs
mov
neg
jmp
cld
leave
mov
pusha
(bad)
shr
xchg
aam
scas
sti
pop
mov
jbe
xor
movs
mov
sub
(bad)
cmp
push
sub
mov
fucomp
inc
out
mov
lds
sub
cld
rol
jge
lods
pop
call
adc
cmp
mov
jae
pop
test
stos
std
mov
fwait
add
les
pop
popa
cmp
ins
sbb
outs
jg
mov
sahf
cmps
mov
dec
sbb
mov
jle
loop
loope
mov
in
inc
mov
mov
jl
sti
dec
mov
jl
cmc
call
call
or
jl
rol
and
mov
ins
add
sub
loope
xor
and
fcom
push
div
loope
cli
les
dec
enter
outs
jg
dec
sub
popf
fadd
into
mov
mov
jp
mov
push
sub
fild
es
(bad)
jl
repnz
cmp
pushf
mov
outs
stc
sub
outs
outs
loope
and
ss
and
jnp
pop
or
test
fcmovnu
in
push
jo
pushf
stos
popa
mov
push
mov
xor
pop
xchg
js
xor
cmp
mov
jl
pop
push
ins
xchg
mov
jl
xor
mov
and
adc
jns
stos
jne
arpl
loope
cmp
jmp
jl
pop
nop
(bad)
sbb
out
jl
sbb
or
mov
ja
push
push
adc
jnp
mov
pop
lds
inc
mov
jl
mov
lods
jge
xor
mov
and
mov
adc
test
jl
dec
add
push
push
pop
jl
adc
jmp
cld
xor
lea
mov
jge
(bad)
or
fild
jl
loope
das
mov
push
xor
rol
pop
movs
loope
icebp
cld
push
cmp
arpl
repz
popa
xor
ret
cmp
popa
stc
push
mov
mov
popa
shl
jl
out
add
mov
jl
or
add
cld
lahf
push
jl
retf
xchg
jle
popf
pop
loope
fisttp
xchg
ds
inc
fwait
movs
adc
jecxz
add
fild
adc
inc
mov
jl
loope
pop
js
cld
and
(bad)
neg
test
in
jne
arpl
js
mov
popa
shl
in
dec
mov
push
arpl
mov
popa
push
pusha
or
shl
aas
xor
dec
jno
mov
push
add
push
jl
push
pop
push
sub
retf
popa
jl
cmp
mov
outs
fnsave
loope
jbe
inc
push
(bad)
cld
push
mov
jl
and
xchg
and
jl
and
or
jle
inc
jl
pop
fist
shrd
sbb
push
mov
mov
and
pop
adc
scas
push
jl
jp
add
sbb
xchg
sub
imul
shl
rol
sub
mov
daa
add
sub
jl
retf
(bad)
loope
(bad)
jl
fidivr
mov
sahf
mov
add
fnstsw
stc
dec
xchg
repnz
out
(bad)
jl
shl
out
data16
jle
icebp
stos
xor
outs
loope
mov
add
retf
cmp
in
aad
or
sub
shl
int
mov
test
popa
jno
aad
lods
jl
add
dec
mov
jae
mov
jl
inc
jbe
mov
jge
js
movs
popa
data16
fdivp
push
nop
clc
iret
cmp
mov
dec
mov
imul
sar
(bad)
jbe
hlt
adc
cs
mov
mov
fdivr
jl
mov
add
packsswb
pop
pop
rcr
cdq
ins
ds
loope
addr16
jl
enter
dec
push
jae
lahf
and
fidiv
shl
fld
xor
shr
pop
ficomp
mov
aam
jns
(bad)
and
cmp
popa
fcomp
mov
retf
int
mov
dec
aas
xchg
adc
stos
lds
pop
and
lahf
jmp
xor
fcmovne
cld
popa
push
das
fld
pop
loopne
loope
cmp
inc
push
leave
jl
jmp
in
sub
add
fsub
leave
mov
mov
pop
sti
push
fst
shl
pop
jae
cwde
ret
ficomp
fcom
pusha
inc
cmps
sub
and
cmp
popf
inc
call
jl
aas
cmp
and
mov
clc
fadd
or
mov
cmp
xchg
mov
jmp
push
xlat
sbb
or
loopne
add
shl
dec
daa
push
mov
ds
rcr
clc
daa
scas
jl
ret
loope
add
jl
and
in
ja
test
pop
cld
push
scas
scas
jl
xchg
inc
add
mov
jg
mov
jl
mov
jl
loope
pop
inc
or
mov
push
leave
pushf
retf
pusha
aad
sub
push
dec
ffree
add
jae
jge
dec
fld
daa
movs
mov
scas
cmp
test
mov
inc
xor
xchg
loope
dec
sub
imul
pop
jl
cmp
jl
aad
or
jbe
cmp
lods
sbb
and
jl
or
jle
add
pop
xor
pop
push
or
add
imul
mov
jns
fstp
outs
jbe
retf
inc
outs
arpl
sbb
push
(bad)
sbb
imul
and
(bad)
arpl
pop
pop
adc
jl
loopne
cmp
fadd
xchg
xor
push
jp
and
jge
popa
cmp
stc
dec
jl
adc
fscale
addr16
fidivr
ret
adc
cli
test
jl
mov
inc
mov
rcl
inc
test
xchg
nop
pop
and
sbb
popa
jae
dec
xor
popf
dec
mov
ja
push
and
adc
cmp
cdq
(bad)
jl
mov
out
jne
daa
push
xchg
jl
mov
sbb
mov
ja
push
sbb
ds
jge
sahf
mov
lods
sbb
pop
jns
shl
mov
loopne
loope
jge
and
dec
fmul
fst
mov
dec
sbb
jl
int3
dec
dec
mov
(bad)
sbb
test
iret
jl
(bad)
xor
mov
ja
imul
stos
cdq
pop
mov
sub
xor
cdq
mov
sub
jle
push
and
cmp
sub
mov
dec
and
jmp
jl
mov
sahf
mov
aam
inc
cld
or
push
sub
(bad)
mov
jl
and
pop
pusha
or
in
push
mov
jno
mov
daa
imul
stos
(bad)
jmp
jnp
push
cmc
daa
and
pop
adc
mov
das
and
and
cwde
or
out
push
test
pop
jp
dec
or
call
repz
sti
jecxz
aam
fsub
popa
pop
mov
scas
movs
sahf
div
cwde
sbb
into
dec
mov
popa
aas
dec
mov
sub
inc
leave
cld
les
adc
and
inc
int3
mov
bound
popa
add
jne
cmp
scas
retf
mov
aas
pop
jl
and
jl
mov
push
jns
and
jl
aaa
and
jl
mov
pop
push
int3
loop
sbb
mov
jl
jbe
sahf
popa
or
jl
jb
dec
fwait
lahf
mov
sahf
jbe
cmp
xchg
mov
adc
popf
dec
shl
stos
icebp
inc
cld
and
jl
scas
xchg
loope
scas
bound
shl
fcom
shl
pusha
(bad)
dec
and
jnp
stc
jl
icebp
xchg
shl
mov
lods
xchg
mov
imul
popa
(bad)
adc
jl
sbb
jo
push
icebp
jecxz
loop
in
in
fnstcw
mov
call
jmp
cwde
out
mov
or
jl
sbb
std
cmc
outs
hlt
cmps
fs
jnp
dec
sti
sbb
std
hlt
outs
cld
cmps
fs
(bad)
pop
add
add
add
pop
lds
jl
mov
sbb
std
or
sbb
pop
push
mov
sbb
jl
outs
adc
pop
pop
push
mov
sbb
jl
outs
sbb
push
jae
push
cdq
pushf
jl
pop
and
pop
jl
popa
push
into
push
fld
sbb
movs
pop
outs
inc
pop
pop
pop
sbb
jno
mov
sbb
mov
lock
aam
mov
add
pop
test
cwde
add
(bad)
pop
sar
push
scas
push
lds
push
(bad)
out
push
mov
xor
sub
cmp
push
(bad)
in
fdivp
clc
pop
inc
jl
in
je
hlt
adc
mov
jl
mov
(bad)
fs
(bad)
mov
lods
lods
cld
ret
scas
aad
mov
and
add
movs
cld
mov
jae
add
call
fnstsw
push
adc
je
loope
mov
sar
pop
mov
rcl
dec
xchg
add
jnp
mov
addr16
jge
movs
jl
mov
xchg
lea
loope
pop
cmc
int
dec
push
icebp
jae
shl
cld
hlt
lahf
xchg
jecxz
mov
jnp
cmps
rol
push
adc
aam
rol
(bad)
add
scas
sbb
jmp
stos
lds
or
xchg
pop
add
jle
inc
jns
mov
into
cdq
int3
(bad)
int3
adc
push
pop
aas
cld
jp
scas
dec
sub
jge
shl
pop
xchg
in
mov
fstp
stos
jl
xchg
pushf
dec
ds
add
sahf
xchg
jge
(bad)
push
and
(bad)
jns
test
jp
jl
shl
loop
aas
mov
scas
outs
into
inc
ficom
int
test
cmp
sti
adc
sbb
loope
pop
jne
and
into
cmp
test
aas
xor
mov
sahf
loope
pop
or
mov
mov
add
xchg
mov
jae
jl
addr16
sar
ins
xor
mov
outs
jle
jl
mov
mov
call
jl
fmul
jp
fsubr
pop
or
cli
inc
jge
arpl
pop
clc
add
ins
mov
jl
mov
mov
cld
mov
icebp
inc
pop
mov
xor
mov
sar
push
jp
sub
mov
push
jle
sti
jo
dec
jl
inc
(bad)
sbb
mov
movs
cmp
(bad)
push
(bad)
std
pop
mov
mov
rcr
xor
mov
popa
push
xchg
sbb
pop
sub
aas
jp
cld
mov
aam
mov
popa
mov
fcomp
jl
sub
int
movs
pop
or
sar
cmp
dec
sub
jl
jge
cwde
rcr
push
jl
pop
stos
loope
mov
neg
pop
fcomp
sbb
mov
scas
mov
sub
jl
jmp
mov
jge
dec
movs
add
popa
lods
lds
inc
mov
cmp
data16
xor
dec
jp
sbb
dec
fstp
sar
in
je
jnp
cmp
and
enter
pop
mov
and
xchg
adc
or
ror
adc
xchg
jl
shr
xchg
mov
sub
pop
mov
test
pop
popf
call
ficomp
jp
lock
jnp
add
addr16
stc
jl
fisubr
push
or
pop
add
int
jge
lahf
mov
(bad)
jl
jmp
jne
rcl
loopne
test
pop
rcl
jl
and
pushf
jl
jmp
fisub
pop
shl
in
call
out
fdivr
retf
out
or
cdq
add
outs
ror
and
into
jl
mov
or
jl
ds
ret
add
test
pop
jl
retf
or
daa
jl
cmp
leave
jmp
jl
rcr
pop
jne
jg
or
out
xor
jno
pusha
movs
sub
mov
mov
stc
inc
rcl
inc
(bad)
sahf
cmp
mov
pop
xor
xchg
sub
jl
test
test
fld
cwde
adc
jne
out
popf
fwait
add
push
(bad)
jmp
push
jl
in
mov
pusha
fsub
cmp
cmp
mov
push
or
mov
popf
xchg
icebp
jl
or
ins
and
nop
mov
inc
push
pop
jl
xchg
ret
inc
jns
mov
mov
aaa
cmps
inc
jl
fnstcw
call
outs
ins
and
pop
cmp
mov
ror
push
mov
arpl
sbb
jl
es
dec
stos
fidivr
push
fidivr
jl
cmc
imul
mov
ins
push
cmp
xchg
push
sbb
pop
popf
nop
and
fidivr
jl
(bad)
pop
stc
mov
and
stos
in
mov
xchg
push
shl
add
adc
cld
mov
fdiv
bnd
and
cmp
in
out
test
mov
sbb
and
test
xor
adc
mov
pop
jl
xchg
and
mov
scas
in
inc
jae
int
popf
cs
frndint
ficomp
(bad)
dec
xlat
add
jl
jb
and
out
mov
iret
adc
push
sbb
mov
push
pop
xor
mov
dec
call
popf
xchg
xor
push
jl
jle
and
sub
jl
cmp
imul
jb
dec
mov
jge
loope
icebp
jbe
push
jp
arpl
aaa
ret
sar
xchg
jle
loope
test
xor
mov
jl
(bad)
popa
jns
je
(bad)
in
sub
sbb
and
test
pop
dec
cmc
mov
rcr
sar
mov
xor
cmp
lods
dec
mov
jl
inc
sub
adc
leave
enter
jge
fbld
nop
cmp
test
fdivr
in
xor
push
pop
jl
xchg
xor
retf
sbb
cmp
(bad)
jge
popf
loope
xor
push
and
fild
fucomp
scas
not
or
mov
sub
lahf
test
rol
fcmovu
add
and
hlt
jl
sub
and
fistp
sbb
movs
push
xor
loope
and
sbb
cld
shl
jl
sbb
imul
movs
and
push
add
and
in
sub
cmps
xchg
fidiv
cli
out
test
cmc
push
jl
adc
jmp
add
and
je
jl
mov
xchg
mov
mov
pop
xchg
push
jl
pop
mov
pop
into
pop
xchg
jl
loope
jp
mov
pop
nop
(bad)
inc
aas
int3
mov
xor
ja
mov
sub
loop
jge
sahf
jbe
xchg
lea
aaa
push
retf
movs
pop
and
(bad)
gs
cld
adc
mov
cwde
jge
or
adc
sbb
test
or
sbb
popa
pop
jnp
push
aas
cld
aas
mov
test
pusha
inc
rol
jmp
in
push
jno
xchg
jl
out
rol
int3
cwde
and
jmp
jle
sbb
mov
int3
push
jne
fisub
jle
or
out
cmps
mov
imul
stos
in
jge
and
fsubr
cwde
std
jo
xchg
adc
sbb
inc
ds
int
cdq
hlt
cmp
fiadd
or
jl
(bad)
retf
push
add
mov
scas
or
add
jl
cwde
retf
mov
call
ja
pop
popa
sahf
lods
sub
cmp
pushf
and
mov
test
add
mov
in
ja
and
inc
jnp
mov
fdiv
mov
in
mov
xchg
clc
jnp
lods
pop
lds
inc
fs
pop
int
int3
mov
inc
cwde
jl
mov
and
jbe
mov
inc
(bad)
(bad)
fcomp
fnstsw
mov
scas
and
cdq
mov
fwait
in
jo
scas
out
jge
ja
and
fs
push
jmp
push
icebp
js
nop
jae
repnz
cmc
jnp
hlt
pop
popa
idiv
pop
sti
sar
mov
cli
jnp
cld
dec
call
add
jbe
cmps
add
push
or
or
movs
or
paddw
adc
jge
lds
cmp
sbb
outs
push
mov
and
sbb
and
daa
out
js
cmps
sub
sub
lock
outs
xor
cld
xor
aaa
dec
cmp
cmp
cmp
ds
jns
dec
inc
je
inc
jl
outs
inc
cmps
dec
lds
dec
icebp
dec
ja
dec
sbb
fsubr
cmp
cmp
sub
xchg
ds
inc
js
jmp
jge
jge
push
out
inc
(bad)
pop
inc
jg
cmp
dec
movs
sbb
dec
push
out
lds
(bad)
dec
mov
dec
dec
fwait
cld
adc
ror
sbb
std
push
sbb
push
jne
push
ret
push
push
fisubr
inc
mov
sub
mov
lds
pop
inc
push
pop
mov
pop
push
cmp
or
pusha
mov
fcom
pop
mov
lods
pop
outs
push
xor
data16
sbb
push
cmps
add
push
rep
ins
stc
stc
outs
cmp
cmp
jo
push
jne
je
push
cmp
ins
jnp
jp
scas
jge
add
push
jg
jle
sub
xor
jp
ins
xchg
sbb
mov
mov
cmp
mov
nop
xor
ins
xchg
out
les
ja
pop
jmp
jl
clc
loope
fdivrp
mov
jp
sub
mov
mov
test
mov
sub
mov
sti
call
push
mov
fcomp
or
jl
(bad)
mov
jle
jle
add
ja
pop
mov
fsub
cmp
sti
add
mov
std
loope
pop
xchg
mov
push
jnp
popf
pop
test
mov
loop
jl
lds
fdivr
add
dec
mov
repnz
rcr
icebp
loope
popa
push
inc
fiadd
shl
pop
mov
push
(bad)
pop
add
shr
and
out
adc
jl
into
and
jno
(bad)
mov
shr
inc
adc
mov
jmp
dec
ret
dec
pop
aam
add
aas
(bad)
ins
jge
ja
shl
inc
jmp
(bad)
jl
adc
nop
rcl
fdivrp
lahf
and
aad
push
loope
add
jl
ja
mov
or
iret
and
cld
add
popa
fst
mov
cmp
jle
mov
jne
shl
cwde
push
retf
and
aad
jnp
lock
jne
scas
xchg
int
aad
inc
loope
xor
or
adc
lahf
add
(bad)
jecxz
mov
ffree
or
jb
xchg
mov
mov
mov
mov
sar
and
cld
xchg
jbe
push
add
dec
loope
mov
test
out
sahf
outs
std
into
mov
fisttp
jmp
jb
xlat
fistp
cmp
mov
loope
jge
inc
fisubr
shl
xor
sbb
in
dec
(bad)
jge
xchg
enter
fisubr
mov
mov
mov
(bad)
js
in
movs
mov
mov
pusha
js
inc
cmp
les
daa
fldcw
ret
adc
popa
xlat
mov
ins
pop
or
sahf
jo
mov
or
lea
mov
fist
pop
inc
mov
lahf
aad
fs
fnsave
add
add
in
out
arpl
aam
or
sar
das
sti
and
(bad)
cmp
mov
adc
repz
jnp
inc
test
xchg
icebp
jl
fldenv
jmp
fs
lods
inc
pop
xor
push
cld
fisttp
add
mov
js
xlat
fadd
test
icebp
shl
mov
jl
dec
cmp
or
fbld
sar
xor
add
lods
movs
xchg
popa
jle
ret
adc
outs
or
pop
jnp
fld
lock
mov
shr
xlat
ret
and
push
(bad)
stos
aaa
adc
ror
aam
out
adc
movs
and
fisubr
mov
jl
mov
ja
in
and
and
mov
mov
test
fucomp
mov
rcr
(bad)
sti
fs
xchg
les
pop
mov
imul
lahf
jl
retf
pop
cmps
jl
inc
mov
(bad)
fstp
mov
popa
scas
xor
mov
mov
retf
mov
out
jecxz
das
lods
rcr
xor
mov
stos
jb
mov
jl
lock
iret
jecxz
nop
fldenv
jl
push
jg
jno
lahf
iret
jle
xor
mov
mov
adc
xor
jmp
scas
pop
fwait
sbb
nop
outs
xlat
add
mov
int3
shl
xchg
pop
dec
fstp
sbb
(bad)
xor
pop
ja
mov
jl
add
mov
push
shl
cmp
push
es
jge
or
loop
pushf
xchg
mov
icebp
mov
dec
cmp
adc
rcr
jl
test
mov
add
jno
xchg
fs
xor
sti
lahf
and
xor
inc
jmp
mov
push
sbb
movs
sahf
jl
fwait
popa
fcom
jbe
ss
mov
cdq
add
arpl
jo
loop
push
xchg
fsubp
xchg
jp
ret
lea
ja
not
adc
pop
or
jle
fiadd
lahf
jl
adc
xlat
(bad)
jl
and
ret
push
mov
jl
jecxz
mov
jns
jno
mov
cld
sub
xlat
outs
pop
push
scas
mov
sub
mov
popa
sbb
mov
xchg
jae
movs
push
sbb
adc
test
xchg
or
mov
xchg
ds
jl
shl
jns
icebp
cmp
stos
out
adc
test
fadd
adc
or
mov
cmp
pop
xchg
leave
scas
icebp
popa
jl
mov
int3
sar
scas
add
cmp
retf
popa
cld
aad
xchg
loope
cmp
ret
lahf
popf
lds
adc
call
stos
cmp
add
inc
enter
or
mov
cmp
fnstcw
dec
sahf
mov
cwde
jl
call
cld
int3
jp
jle
cmps
test
imul
mov
jl
jg
pushf
int3
pop
inc
and
adc
fdivrp
jne
cld
pop
cli
push
aam
pushf
lahf
scas
push
jge
add
popa
pop
adc
adc
cmp
outs
shr
inc
dec
(bad)
outs
cmp
jno
xchg
cdq
jl
lods
lods
retf
pop
inc
and
shl
xchg
bound
call
(bad)
xchg
sbb
fcom
int3
xchg
scas
add
call
inc
pop
lods
outs
in
mov
or
jl
pop
xchg
inc
aad
cdq
in
push
and
jp
push
fstp
xor
iret
outs
(bad)
test
fsubr
pop
lods
add
inc
aam
stos
fild
xchg
stc
xchg
loopne
sbb
cmp
leave
(bad)
mov
xchg
push
ret
icebp
shl
jp
mov
add
sahf
pushf
nop
imul
cmp
fwait
out
mov
mov
sbb
aad
push
retf
push
dec
(bad)
std
in
pop
test
xchg
mov
mov
xchg
out
outs
ins
mov
and
jge
mov
mov
in
(bad)
pop
jl
push
xchg
cmp
pusha
ret
adc
(bad)
mov
mov
mov
sub
jl
pop
js
sbb
int3
test
jae
int
jge
mov
(bad)
ror
jl
repz
scas
mov
pop
outs
mov
str
test
shl
xchg
pop
xchg
or
stc
ret
inc
inc
mov
sub
rcr
movs
leave
mov
sbb
sbb
(bad)
mov
or
mov
cmp
out
jge
cld
dec
lods
or
addr16
jge
fxch
or
cmp
scas
xor
outs
jl
inc
lahf
scas
fld
inc
jl
pop
jle
sbb
pop
ror
jl
pop
repz
movs
aas
cmps
sar
mov
jae
mov
cmp
je
mov
mov
jl
jno
pop
lock
and
xchg
dec
inc
movs
je
sbb
or
cld
and
test
jl
pop
lahf
frstor
push
sar
push
clc
adc
xchg
mov
cld
in
push
and
fnstsw
xchg
jmp
cld
jmp
mov
cmps
cld
xor
jl
push
mov
or
sub
mov
dec
add
inc
pop
inc
lock
outs
or
fdivr
xor
or
sub
add
sub
nop
les
adc
popa
mov
push
add
jb
jae
shl
mov
sbb
(bad)
(bad)
lock
jl
mov
fisttp
ret
cld
out
hlt
xor
sahf
push
pushf
(bad)
jl
xchg
mov
xchg
push
out
cld
add
lahf
std
in
ins
cld
cmp
(bad)
pushf
out
push
pop
mov
adc
mov
dec
in
push
jns
mov
xlat
mov
push
ja
fwait
jl
mov
add
dec
cli
pusha
loope
mov
jl
jmp
ins
jno
test
inc
nop
sar
sub
sbb
pop
out
int3
adc
das
jl
mov
jbe
jl
mov
push
aaa
jl
test
mov
loope
mov
and
lods
push
dec
cmp
stos
mov
mov
adc
js
xor
cmps
mul
sti
out
push
mov
loope
arpl
cmps
mov
pop
or
pop
rcl
repnz
lahf
jb
aad
or
xchg
rcl
int3
xchg
and
in
bnd
mov
mov
jl
mov
in
jl
push
or
jae
(bad)
pop
push
sub
mov
int
adc
rcl
pop
or
add
sub
pop
pop
pop
cmp
jl
mov
mov
rol
mov
neg
sti
xor
pop
in
jl
mov
sar
jl
inc
pop
stc
add
ret
push
jl
xor
adc
out
test
wbinvd
fimul
pop
out
retf
or
dec
int
add
xlat
shld
stos
jnp
dec
inc
and
and
xor
js
lahf
fwait
mov
(bad)
jge
xchg
mov
dec
xchg
dec
outs
xchg
mov
or
cld
inc
fsubrp
inc
ja
and
pop
mov
retf
pushf
scas
inc
test
mov
and
fnstenv
inc
clc
imul
jno
pop
mov
jl
sbb
add
and
or
jl
sbb
cmp
inc
xor
imul
aad
xor
pusha
popa
xchg
inc
jl
sbb
leave
call
jl
xlat
dec
add
and
push
jl
not
fistp
and
sbb
idiv
retf
sti
cs
mov
loopne
scas
sub
add
outs
push
iret
out
cmp
mov
fsub
cmp
(bad)
and
rcr
mov
jge
pusha
rcr
xchg
dec
add
repz
ja
fs
jg
lahf
jl
loope
fsub
jge
out
mov
or
cmp
jl
xchg
imul
aas
cmp
icebp
rol
jmp
das
mov
pop
dec
xor
popf
aad
out
fsubr
aam
jl
je
std
pop
sahf
ror
and
enter
mov
popa
mov
ret
jl
fbld
(bad)
call
or
sbb
pop
cwde
nop
pop
dec
cmp
loopne
fdivr
mov
adc
jl
aam
fsubrp
or
pushf
cmp
shr
dec
jl
pushf
test
icebp
loopne
sub
cdq
call
or
scas
sbb
test
cmp
fldcw
cmp
push
jl
loop
and
movs
jl
aas
add
mov
and
loope
xchg
adc
je
mov
pop
cdq
std
rol
pop
mov
mov
loope
in
sub
dec
or
mov
icebp
out
or
sbb
jl
dec
xchg
popa
pop
out
loopne
sbb
ins
push
pop
fsub
out
jle
repz
in
dec
jl
inc
adc
jnp
jmp
cld
or
jnp
cmc
add
fdiv
fst
mov
dec
push
jnp
loope
loopne
mov
fsubr
aam
or
jmp
adc
call
popa
and
xor
ja
dec
jmp
in
pushf
fistp
jge
mov
(bad)
shl
xor
mov
or
add
pusha
in
and
mov
mov
jl
popa
jmp
jp
fild
pop
push
ja
ror
out
mov
std
imul
(bad)
cmp
in
pop
inc
pop
mov
xlat
lahf
movs
loope
out
pusha
icebp
and
std
ret
not
xchg
mov
jno
mov
mov
retf
mov
repz
or
mov
jl
loope
call
pop
pop
imul
test
jmp
outs
jb
test
mov
test
cmp
jb
mov
stc
jl
inc
(bad)
inc
icebp
pop
ja
sar
dec
mov
xchg
and
pusha
cli
mov
rcl
xor
sar
sbb
cld
fdivr
aam
lahf
jnp
leave
pop
shl
cld
mov
mov
add
call
aas
pusha
(bad)
jl
cmp
enter
xor
fwait
or
jl
xor
mov
pop
into
(bad)
call
lods
push
and
jnp
xchg
pop
in
fcomp
mov
push
loope
cmps
std
cmp
int3
push
jo
icebp
ror
jl
out
cmps
push
stos
mov
adc
je
enter
jb
call
out
pop
pushf
outs
lea
sbb
(bad)
mov
in
cmp
fidivr
and
add
pop
or
mov
scas
jnp
cmp
test
xchg
jl
sub
loope
pusha
sbb
jge
std
call
sub
cwde
xchg
sub
pushf
mov
or
and
mov
adc
inc
mov
jle
inc
movs
sbb
mov
sbb
mov
outs
and
stc
retf
or
faddp
lds
and
or
mov
sub
push
movs
jl
fucomp
add
mov
dec
push
and
push
leave
pop
shl
mov
jle
pop
in
sbb
lods
mov
or
cdq
dec
movs
rcl
jne
jl
sub
fistp
xchg
mov
cmp
gs
outs
leave
mov
dec
adc
dec
add
aas
push
(bad)
cmc
(bad)
cld
jl
sbb
jl
les
jecxz
jnp
sar
xchg
sbb
jl
mov
jl
mov
rcr
jnp
and
mov
mov
jl
cmp
sub
sub
mov
xor
fdivr
cmp
mov
push
jp
push
cmp
js
cmp
(bad)
xor
repz
pop
movs
ret
mov
sub
push
jl
es
push
ficomp
div
push
test
ror
cmp
ror
push
jl
hlt
rol
fs
push
push
movs
or
pop
add
fsubr
outs
mov
pop
mov
jl
pop
or
aas
ja
jae
inc
and
in
xchg
jns
popa
push
sub
std
jbe
add
pop
movs
(bad)
pop
dec
pop
xchg
jne
pop
push
jl
dec
add
jle
jl
cmp
arpl
jl
popa
test
addr16
shr
sbb
jl
push
cmp
nop
adc
in
pop
loope
push
push
jl
add
(bad)
jp
je
rcr
mov
and
pop
cld
jmp
(bad)
xchg
inc
jl
in
add
shr
inc
inc
jl
mov
xor
stc
inc
pop
mov
adc
sub
cmp
test
sahf
jl
aam
std
cmp
(bad)
or
cwde
(bad)
jp
mov
fwait
rcr
call
sub
xlat
int
idiv
emms
and
jecxz
or
rcr
xlat
jl
clc
inc
popa
(bad)
jl
jge
div
cmp
jl
stos
pop
mov
jnp
dec
rol
fwait
xchg
jl
repz
push
and
cmps
test
jl
(bad)
neg
popa
cld
jnp
fcmovb
jb
push
jl
pop
fstp
push
dec
inc
jl
call
add
jl
(bad)
fsubrp
jle
stos
std
jl
and
sbb
jl
or
sbb
iret
jnp
cmp
fsub
pop
add
frstor
in
out
push
out
mov
mov
jge
call
mov
mov
jbe
and
push
jmp
jl
add
mov
js
sbb
cmp
frstor
cdq
jl
mov
ret
sahf
ja
imul
xchg
dec
inc
cmps
movs
jl
fstp
sub
pop
loope
jl
push
sub
ins
dec
inc
mov
sar
in
mov
bound
and
fstp
pushf
and
jl
add
ja
jl
cmc
popa
push
cmp
das
out
cld
mov
sub
and
aas
pop
mov
jmp
push
jl
fisub
mov
lods
dec
shl
popa
and
pop
cmp
inc
cli
repnz
jns
mov
stos
cwde
ja
pop
sahf
dec
ret
and
add
dec
or
outs
clc
inc
push
dec
pushf
adc
add
xor
loope
fidivr
scas
dec
movs
sub
push
mov
les
xor
jo
mov
mov
out
xor
add
(bad)
mov
popf
imul
xor
sbb
jl
mov
mov
adc
sub
fisub
mov
jge
lods
jl
xchg
sub
inc
and
or
add
test
jl
pusha
jnp
inc
iret
mov
jl
int3
lods
add
mov
push
and
aad
loopne
mov
push
imul
jl
movs
das
mov
pop
mov
cmps
cli
jl
pop
dec
mov
bound
les
jl
pop
mov
loope
cmp
shr
mov
pop
cwde
jae
sar
cmp
mov
jne
push
int3
fcom
jp
lahf
leave
mov
sbb
lods
mov
nop
jbe
jb
xor
(bad)
sub
cmp
int
cmp
mov
fnstsw
retf
and
fdivp
cmp
inc
push
xchg
jl
inc
movs
jg
adc
arpl
retfw
sbb
iret
cmp
mov
xor
jg
gs
and
xchg
inc
push
mov
or
jl
xor
mov
loope
adc
or
dec
popf
inc
dec
push
jns
jl
jmp
push
and
jge
and
ins
or
cmps
jae
(bad)
gs
jae
jl
add
mov
jl
cli
xor
iret
dec
mov
sub
ja
popf
sub
scas
jne
aam
cld
lock
or
and
lock
ror
fidivr
adc
loopne
cld
aam
int
mov
leave
mov
or
cli
sbb
adc
test
cmps
and
jp
pop
sbb
sbb
popf
add
dec
pushf
gs
imul
pop
(bad)
sar
adc
jl
fcom
jno
inc
loope
jge
adc
test
push
icebp
outs
cmp
dec
sbb
outs
xor
gs
test
(bad)
sti
stc
jl
jae
sti
imul
jp
fild
out
jl
lds
xchg
add
xchg
cmc
inc
jg
rcr
(bad)
mov
cmp
aas
sar
add
mov
pop
mov
rcr
pushf
sbb
arpl
daa
and
in
mov
inc
shr
add
addr16
aad
and
dec
push
jne
clc
pop
lods
dec
pop
and
jmp
jle
mov
in
call
sub
fcom
in
xor
popa
xchg
jmp
aad
sub
lods
fcmove
cld
adc
and
and
push
outs
in
jl
jb
and
outs
inc
sar
fucomp
imul
cmps
xor
hlt
add
xchg
jns
ds
cmp
pop
mov
push
jl
or
and
nop
jl
push
ret
adc
jl
adc
(bad)
ds
test
out
jl
outs
inc
je
jp
loop
mov
rol
inc
in
cld
cdq
xchg
push
jp
pop
inc
call
mov
pop
add
xchg
push
mov
sar
loopne
pop
dec
outs
cmc
sub
clc
cmp
push
pushf
popa
popf
test
and
push
push
aad
mov
sub
add
xchg
test
jl
and
out
or
dec
aam
mov
aam
mov
push
fcom
loop
inc
addr16
test
add
fstp
sbb
push
fs
push
mov
cmp
leave
mov
fcmovnu
jl
test
fcomip
loope
dec
loope
out
or
mov
stc
add
ret
push
ja
fcomp
add
sti
ss
jb
enter
ja
sub
out
pop
leave
icebp
imul
lods
dec
jl
faddp
test
popa
xor
push
imul
pop
jl
sub
popa
mov
clc
push
mov
pop
ja
adc
inc
pop
movs
pop
jl
sbb
mov
(bad)
push
jnp
leave
pop
mov
lds
dec
jnp
inc
ja
and
mov
mov
call
into
sub
xor
in
rcr
sbb
inc
movs
dec
daa
data16
mov
ja
mov
and
mov
call
push
pop
or
or
adc
(bad)
jne
xor
fs
(bad)
stos
cmps
test
push
inc
jl
mov
cmp
ret
dec
cmp
mov
ja
shl
jp
push
ins
hlt
add
jmp
pushf
xchg
call
jns
ror
xchg
pop
pusha
lods
and
out
jl
mov
jle
jl
xor
jo
xor
fdivr
fcomp
and
or
popa
lock
pop
mov
mov
dec
mov
neg
imul
jg
pop
jl
and
dec
in
dec
jl
idiv
call
inc
rcl
push
cwde
xlat
fs
add
jnp
jl
mov
mov
(bad)
loopne
pushf
jl
dec
(bad)
jmp
and
jl
pop
fdivr
jno
lds
int
out
test
pushf
repnz
mov
mov
and
stos
pop
jns
sar
pop
dec
push
(bad)
mov
ja
outs
(bad)
cwde
aas
mov
xor
fbstp
mov
sbb
imul
outs
movs
push
in
jl
push
popf
lahf
aad
mov
xchg
(bad)
shl
mov
pusha
sbb
mov
mov
ins
jb
enter
in
(bad)
rcl
cwde
jp
in
jl
mov
jge
push
mov
lahf
cs
mov
outs
nop
out
ja
jne
daa
js
jo
jg
(bad)
mov
xchg
or
scas
jl
jbe
pop
xchg
jo
push
mov
jl
mov
cmp
out
repnz
in
dec
xchg
in
in
cdq
test
or
push
popf
int
cmp
ja
mov
dec
push
sbb
data16
mov
cmp
adc
xchg
mov
jnp
or
aam
aad
jl
int
pop
jo
imul
dec
iret
push
mov
sar
xor
out
sbb
mov
test
jbe
pop
jl
gs
jle
xchg
movs
popa
pop
cmp
jns
fcomp
ret
inc
adc
aam
mov
xchg
xor
cmp
xlat
mov
xchg
imul
pop
push
cwde
ins
xchg
cwde
pop
cdq
jl
ds
cmps
jge
scas
jb
pop
xor
ja
inc
mov
adc
dec
out
(bad)
mov
shl
stc
and
or
out
mov
test
inc
cdq
jl
push
mov
mov
jbe
inc
ret
fdivr
rcl
mov
loop
jl
leave
in
jp
mov
(bad)
popf
push
sub
jb
jg
leave
add
aad
nop
mov
das
jge
retf
push
dec
cld
push
movs
xchg
mov
popf
sbb
rcr
outs
movs
xchg
jle
jl
rcr
push
(bad)
mov
aam
pop
sbb
mov
outs
data16
fild
mov
lods
rcr
stos
add
and
lea
mov
mov
jp
pop
out
sar
xor
popa
cmp
adc
cmp
mov
ja
fsub
pop
sti
pop
mov
cwde
imul
jmp
sbb
pop
movs
jl
mov
xchg
pop
and
inc
jl
mov
cdq
ja
test
and
sar
rol
fcomip
fmul
jmp
test
call
jnp
or
jl
aaa
pop
bnd
int
jl
mov
mov
je
adc
test
mov
jg
jne
xlat
jne
mov
xchg
ret
outs
ins
(bad)
xor
(bad)
scas
xchg
mov
push
dec
jl
xchg
xor
xchg
jl
fmul
fstp
fistp
jge
xlat
aam
rcl
rcr
int
retf
enter
(bad)
ja
(bad)
shr
mov
mov
mov
mov
pop
mov
mov
mov
scas
lods
lods
stos
inc
stos
test
test
mov
mov
or
or
js
(bad)
mov
out
in
jl
test
int
dec
jp
inc
jnp
fisubr
mov
outs
or
jne
imul
jl
fs
pusha
(bad)
mov
push
dec
xor
outs
lods
cdq
dec
fnstcw
fidiv
mov
dec
std
mov
clc
xchg
(bad)
je
pop
lods
in
jl
fistp
fiadd
pop
mov
inc
sub
mov
mov
lahf
mul
mov
popf
lods
mov
cmps
add
cli
aas
mov
cld
in
push
vcvtpd2dq
inc
mov
out
add
in
in
jns
iret
in
loop
popa
jmp
pop
pop
pop
pop
pop
pop
mov
pop
push
push
push
push
push
push
cwde
push
push
jnp
dec
dec
dec
dec
dec
mov
dec
inc
ja
inc
inc
inc
inc
in
inc
inc
ds
outs
cmp
cmp
pop
cmp
ss
xor
xor
xor
das
sub
inc
sub
cld
sub
es
and
and
push
pop
sbb
sbb
mov
jge
push
pop
adc
adc
cwde
adc
jnp
(bad)
or
or
ja
add
add
in
add
(bad)
push
std
cli
sti
cld
pushf
stc
div
hlt
pop
cmc
repnz
icebp
out
out
in
in
dec
jmp
in
loop
jecxz
loopne
(bad)
cmp
mov
push
sahf
jo
loope
xchg
xchg
jno
inc
fwait
shl
jl
mov
test
pop
fstp
inc
leave
rcr
push
pusha
cmp
pop
fdivr
outs
mov
repnz
jl
xor
jnp
mov
lock
out
jno
mov
jp
mov
jl
mov
add
cmp
imul
jge
xor
or
mov
mov
jl
and
movs
xor
cmp
rol
sub
add
pushf
add
mov
fxtract
xor
sub
xchg
jmpw
dec
sar
imul
dec
pop
mov
popf
stc
sbb
addr16
push
and
dec
fnsave
shl
clc
add
sub
repz
cmp
test
ins
push
pop
movs
shr
ret
xchg
mov
in
ins
repz
push
mov
jae
push
sbb
jnp
fwait
cmps
pop
push
xchg
in
mov
(bad)
lea
pop
gs
call
in
xchg
dec
add
jl
adc
jl
mov
sti
xchg
xor
test
dec
mov
popf
sub
ins
dec
mov
xchg
pop
and
aaa
(bad)
dec
lods
in
jecxz
add
xchg
dec
dec
pop
jp
jl
call
ds
jl
mov
retf
inc
inc
add
jbe
xor
jl
jmp
add
stos
popf
jl
cld
cdq
cmc
jg
pop
inc
ds
std
aad
sbb
or
mov
xlat
mov
scas
(bad)
mov
mov
mov
mov
gs
fld
mov
js
frstor
cwde
mov
mov
mov
sub
aad
jo
inc
les
fwait
xor
cmp
add
movs
lods
dec
iret
jae
mov
mov
jmp
jge
js
ret
sub
outs
dec
les
fmul
jno
int
jl
into
and
jg
aas
ror
pop
outs
outs
mov
cmps
xchg
int3
shr
leave
add
jp
jge
push
jno
(bad)
pop
(bad)
mov
pop
arpl
dec
popa
sub
pop
int
jl
pushf
push
or
jl
popf
xor
(bad)
mov
jno
cmp
lahf
aad
into
ja
sbb
test
mov
mov
xchg
popf
xor
lds
ror
(bad)
push
into
in
pop
jmp
fcomip
cld
stc
popf
std
add
aas
iret
or
adc
and
inc
lahf
dec
lahf
gs
jno
test
(bad)
mov
test
mov
jae
jg
jge
or
mov
push
mov
movs
mov
mov
adc
lea
test
xchg
mov
fucom
pop
cld
push
mov
aad
xchg
jl
inc
pop
fstp
sub
lods
fistp
inc
scas
mov
mov
xor
pop
cmp
inc
cmps
out
aam
pushf
lea
mov
rcr
mov
push
and
mov
lods
adc
mov
inc
test
pop
or
into
leave
rol
(bad)
pop
jmp
jb
mov
in
jl
and
jge
jge
inc
adc
xchg
mov
lahf
jno
jl
in
(bad)
inc
in
sub
sbb
inc
adc
cmc
in
pushf
jl
enter
add
arpl
cmp
ret
jl
into
sbb
sbb
nop
xor
pop
xor
mov
push
push
bound
mov
mov
jl
test
inc
shl
in
jl
(bad)
fs
add
mov
retf
and
leave
mov
jne
iret
std
dec
lods
imul
mov
sar
and
jge
imul
push
mov
lds
mov
mov
test
shr
jb
loope
cmp
mov
pushf
push
jbe
xchg
adc
jl
fcomp
cs
pop
jo
jnp
xor
in
xchg
les
pushf
ins
fs
mov
xor
icebp
(bad)
leave
jge
sbb
in
jle
cmc
aaa
or
xchg
out
xchg
sub
sbb
sbb
pop
sbb
(bad)
adc
inc
iret
pop
mov
dec
outs
mov
fstp
jnp
leave
(bad)
mov
pop
iret
inc
mov
jle
jle
jnp
mov
mov
mov
pop
jae
stos
pop
sbb
(bad)
std
iret
outs
icebp
mov
cmps
pop
sar
push
(bad)
xchg
jge
mov
pop
or
jle
jle
jl
fld
inc
add
adc
mov
popf
jl
xchg
push
test
daa
ror
jl
mov
scas
into
jl
(bad)
add
jl
mov
popf
or
push
call
mov
outs
iret
mov
push
das
out
add
(bad)
push
or
fld
(bad)
inc
addr16
mov
jl
dec
sbb
retf
adc
mov
cmps
jns
cdq
jne
pop
(bad)
cld
inc
cmps
gs
cmp
cmc
in
inc
xor
add
loop
mov
je
fisttp
aas
sbb
rcr
sar
fwait
jle
std
cmps
test
cdq
xor
lock
pop
mov
movs
jl
popa
loop
inc
imul
fistp
jbe
mov
nop
add
popa
addr16
xchg
xchg
loope
mov
mov
jl
cmp
cmp
jl
xor
xchg
mov
inc
(bad)
aas
mov
or
int
inc
int3
test
iret
mov
ja
inc
mov
in
stos
bound
jl
loope
sub
(bad)
lock
les
and
push
and
test
xor
jne
pushf
pop
xor
loope
loop
es
fcmove
sbb
hlt
mov
mov
mov
fwait
rol
or
rol
mov
mov
(bad)
inc
jno
jl
xor
popa
movs
cmp
fs
mov
cmp
inc
loope
push
sbb
mov
xor
shr
jl
std
sub
mov
push
jge
inc
lock
inc
not
jno
jnp
jbe
jmp
movs
call
push
pop
or
ins
gs
mov
jl
popa
mov
xchg
ds
cld
leave
retf
jns
fadd
dec
pop
push
jne
cmp
mov
jl
and
xchg
jge
mov
jle
jnp
sbb
mov
mov
lahf
jl
push
test
xchg
in
ja
ficom
fistp
jl
clc
inc
jge
or
mov
jcxz
cld
scas
pop
rcl
enter
ins
in
call
ja
int3
push
mov
mov
and
cld
jne
bound
sub
ins
jl
aad
adc
sub
inc
or
jl
sbb
fstp
xchg
aaa
shl
jge
rcr
ins
retf
mov
jl
imul
xlat
jns
mov
dec
mov
pop
jmp
scas
jl
nop
aaa
fdivr
jl
pop
call
push
ja
mov
sub
stos
dec
jl
lods
and
fistp
add
fmul
mov
mov
sbb
mov
sbb
xchg
clc
aaa
mov
vpunpcklbw
popf
arpl
jle
add
or
shr
jnp
cmp
pushf
ret
outs
inc
pushf
shl
cmp
xor
ja
pop
out
lock
push
fidiv
add
cmps
xor
and
js
sbb
sbb
test
and
jp
cmp
cmp
fisub
hlt
push
mov
adc
lahf
jl
push
loope
mov
mov
add
jnp
xchg
mov
cmp
jno
add
lds
add
jnp
cli
sub
mov
je
ror
and
jmp
xor
xor
mov
mov
jl
mov
sub
jl
mov
mov
ja
fld
lock
in
jecxz
je
jl
xchg
int
leave
mov
jle
inc
shr
jno
jl
xchg
jo
add
loope
jl
icebp
clc
dec
lea
cmp
stos
pop
jl
sbb
mov
test
jl
xor
stc
and
and
fcom
arpl
xor
sahf
xchg
stc
pop
loope
inc
xchg
add
jl
imul
mov
pusha
pop
adc
xor
into
or
test
test
and
sbb
dec
mov
sahf
push
(bad)
out
inc
jl
mov
pop
int3
movs
or
repnz
xor
call
mov
imul
sahf
in
(bad)
pop
xchg
int
jl
push
jl
add
pop
mov
repz
jl
int3
pop
mov
jl
sbb
stos
jl
sti
call
(bad)
popf
jbe
leave
push
and
add
jl
test
lds
jl
stc
xchg
inc
imul
loope
jl
cmps
bound
imul
ficomp
push
adc
mov
jl
sbb
pusha
outs
inc
fdivr
inc
std
add
movs
icebp
mov
inc
inc
mov
jl
gs
rol
sbb
or
sub
call
xor
jmp
xchg
jl
popa
out
and
jecxz
jl
arpl
and
or
pop
adc
jl
imul
fwait
data16
xor
addr16
test
push
gs
lahf
jno
add
cmp
loopne
clc
jl
xor
pop
cli
outs
mov
loope
jg
aaa
jl
push
ficomp
aas
cmps
mov
pop
std
ja
cdq
push
cmp
mov
and
(bad)
xchg
pusha
xchg
cld
sub
cdq
pop
sub
pop
repnz
fmul
addr16
enter
xor
xor
mov
cmp
jle
jl
dec
daa
xor
loopne
jno
mov
cwde
jl
imul
dec
jp
adc
lea
clc
addr16
add
imul
sar
push
cmp
jno
or
aam
call
mov
pop
test
into
in
mov
push
and
jl
loopne
leave
mul
mov
test
hlt
cs
or
repnz
jmp
add
adc
pop
mov
dec
stos
jecxz
and
mov
adc
pop
mov
enter
mov
addr16
fcomp
std
pop
mov
xchg
cmp
sti
sbb
xchg
jl
cmp
rcr
pmaxub
sub
jne
retf
mov
jecxz
mov
pop
xor
push
cmp
mov
mov
jl
popa
add
lods
in
inc
dec
dec
loope
mov
mov
enter
sub
fidiv
jl
test
or
add
inc
pushf
ret
lea
out
(bad)
outs
into
(bad)
cld
in
jo
sbb
sub
iret
stos
mov
int
cld
and
jne
xlat
push
mov
mov
cmps
cdq
jl
(bad)
aad
js
aaa
adc
mov
jl
int
pop
enter
jl
add
popa
cmp
mov
jno
sahf
mov
retf
jl
ds
cmp
xor
popa
repnz
bnd
clc
jge
push
outs
int3
xor
scas
cmp
popa
xor
pop
mov
bound
idiv
ret
sbb
aad
jl
or
mov
lods
(bad)
xor
mov
adc
iret
mov
push
pop
jns
add
mov
jae
jl
ds
or
fdiv
rcl
jg
cld
push
loope
mov
repz
cmp
loopne
add
lods
(bad)
sub
stc
mov
outs
sti
sar
xor
xchg
pop
in
cmp
dec
pop
(bad)
enter
jge
jb
das
popa
fnsave
sub
add
jl
pop
jmp
test
popa
push
push
xor
sub
js
mov
out
jl
and
adc
(bad)
fidiv
ins
pop
mov
cmps
jl
jne
mov
jl
pop
adc
popa
and
jb
jl
(bad)
repnz
out
dec
repz
jbe
mov
nop
outs
cmps
cld
fwait
sub
pushf
inc
data16
jl
mov
add
jl
xor
cmp
jl
inc
push
cmps
push
lods
mov
jl
sub
ss
dec
lods
movs
dec
jmp
leave
outs
jg
xchg
mov
sbb
ret
jae
cmp
ins
retf
ja
dec
mov
mov
aam
mov
pop
or
mov
and
inc
stc
hlt
fidivr
div
dec
sbb
push
ja
mov
(bad)
xor
sbb
jl
xchg
loope
xchg
jbe
push
jo
jl
call
test
adc
fwait
cld
cwde
add
cmp
mov
jb
mov
ret
xchg
scas
dec
push
jl
in
les
loope
xor
pop
idiv
cmp
cmps
jl
sub
cwde
jbe
mov
fidivr
pop
fldcw
dec
cmp
cld
fld
add
js
xor
loop
cld
into
mov
sbb
hlt
int3
fld
call
test
mov
xor
jl
sub
jl
fcomp
aam
jo
lahf
jl
mov
xchg
outs
jl
adc
mov
jl
scas
ins
jp
leave
xchg
cmps
in
call
loope
pop
jl
ret
aaa
fidivr
mov
stos
test
ja
std
shr
cld
xor
out
rcr
outs
mov
jne
xchg
cmps
popa
sbb
loope
lds
cmp
and
es
data16
(bad)
js
(bad)
inc
jl
jmp
jns
cld
mov
mov
jl
popa
fisub
sbb
and
xor
xchg
dec
call
leave
pop
test
ret
inc
jge
jl
fsubr
jl
cwde
adc
jl
pop
movs
inc
dec
setl
jl
lock
mov
(bad)
call
std
div
jle
sti
xor
mov
sbb
mov
aaa
jns
pop
add
sbb
jmp
outs
repnz
adc
ret
test
test
in
jl
nop
mov
xor
sbb
and
jl
ss
push
movs
ret
push
mov
fbld
sub
scas
adc
jnp
sbb
ds
jl
pushf
outs
call
(bad)
fild
leave
or
cmp
(bad)
adc
popf
cmp
jns
lahf
(bad)
cld
dec
(bad)
mov
mov
jl
mov
add
sub
stos
cmp
cld
sub
jo
imul
jl
cmc
sub
inc
xchg
ja
xchg
test
scas
mov
loop
xor
cdq
or
je
shl
arpl
leave
outs
sub
loope
sar
push
jl
dec
dec
add
daa
lds
and
les
xchg
push
push
jge
aas
dec
lods
into
add
test
sbb
addr16
ret
and
cmp
mov
jl
fild
xchg
fdiv
mov
pusha
ret
call
xor
fsubr
pop
repz
adc
ss
adc
je
jl
pushf
add
imul
retf
add
cld
ss
icebp
jl
jbe
cmp
xchg
popf
repz
ficom
adc
aaa
sub
(bad)
cwde
jns
leave
rol
or
add
out
out
sub
lds
les
mov
outs
sbb
scas
sub
xchg
adc
bnd
mov
jl
cli
xchg
sbb
adc
gs
dec
loop
ret
retf
jns
add
shr
push
mov
daa
mov
(bad)
jg
inc
enter
mov
sbb
xchg
add
jl
movs
stos
jae
cmp
cmc
cld
mov
sbb
jl
dec
push
inc
cmp
popf
fsubr
add
sbb
dec
jl
adc
fidiv
sbb
sub
jb
shl
inc
ror
pop
xchg
jl
sti
iret
add
pop
(bad)
jl
mov
sbb
leave
dec
push
jge
jle
out
add
mov
and
sbb
mov
or
jbe
addr16
std
mov
dec
mov
fldcw
push
test
aad
inc
cmps
add
add
ins
sar
cmp
adc
and
dec
jge
mov
mov
sbb
cmc
xor
loopne
adc
push
call
sub
mov
and
adc
mov
cmp
jns
(bad)
icebp
aad
xchg
(bad)
push
das
(bad)
shl
cmp
pusha
sbb
pop
in
cmp
jg
jmp
dec
jl
cs
addr16
rcr
sti
adc
cld
repnz
inc
fidivr
cmps
xor
and
in
call
sti
xchg
pop
jl
repnz
xchg
scas
lock
sub
inc
inc
pop
mov
pop
push
jl
cmc
stos
in
cmps
adc
(bad)
dec
loope
test
mov
test
mov
push
cmp
sar
xor
jle
cmp
sbb
call
add
enter
in
les
xchg
jnp
cmp
call
xor
sbb
nop
or
ins
jl
fcom
lds
xor
test
jl
retf
mov
jle
lahf
das
dec
movs
(bad)
retf
int
aad
cld
cld
xchg
scas
loop
cmp
sub
lock
mov
mov
push
push
adc
cs
adc
ret
push
cld
and
adc
cdq
(bad)
cld
loop
shl
and
jne
push
mov
inc
inc
xor
cli
xchg
fldenv
cmp
pop
adc
(bad)
cs
dec
je
jl
xlat
leave
mov
xor
cmp
xor
jp
(bad)
jecxz
and
fcom
mov
jle
jnp
mov
ror
outs
xchg
pushf
xchg
rcr
pop
xor
push
jno
cmps
jl
xchg
stos
adc
jl
inc
sbb
pop
xchg
je
jl
dec
dec
pop
jecxz
jb
jge
and
les
daa
inc
add
loopne
pop
jl
sbb
arpl
in
cli
cld
jmp
jl
(bad)
mov
data16
jns
mov
fiadd
ret
int3
lds
push
idiv
or
test
test
retf
lock
stos
jl
(bad)
mov
jno
imul
inc
sub
retf
push
push
dec
ja
push
jne
mov
dec
pop
imul
jl
xlat
mov
fsubp
jb
jns
mov
int
jl
in
neg
iret
ja
(bad)
mov
fstp
jl
xor
ret
and
or
ins
mov
sub
sbb
or
hlt
jmp
add
mov
sub
loope
jl
sbb
pop
fild
ret
sbb
or
jl
loopne
imul
sub
mov
sub
cwde
test
jp
cld
js
sub
fdivr
ja
aam
and
jp
cmp
or
daa
daa
into
in
cwde
mov
mov
into
dec
adc
pop
jl
hlt
pusha
pop
xchg
sbb
sub
arpl
nop
addr16
sti
das
push
outs
sti
pop
or
dec
mov
sub
stos
iret
and
je
imul
jle
mov
add
cmp
pop
push
ja
das
cmc
xchg
lods
xchg
jnp
mov
test
sti
(bad)
js
aaa
jae
(bad)
cli
test
mov
xchg
push
jl
cmp
jl
data16
xchg
rol
jno
pop
dec
(bad)
mov
or
mov
(bad)
out
xor
pop
(bad)
(bad)
jl
(bad)
fnstenv
stos
cs
mov
add
pushf
ret
cmps
xchg
repz
cmp
push
outs
dec
pop
sti
or
les
bound
dec
pop
push
nop
jl
cld
(bad)
dec
sub
jae
push
sbb
jl
loop
jecxz
stos
outs
jmp
mov
xchg
xchg
dec
imul
ins
cld
sub
xor
pop
mov
(bad)
sti
push
sbb
cmc
adc
icebp
das
jg
dec
rcl
std
jb
ss
pusha
push
xchg
mov
ins
test
jp
outs
pop
fs
jl
setp
mov
jmp
lea
cmp
jle
jns
xchg
or
jl
stc
pushf
push
and
ret
js
xor
dec
aaa
jl
dec
lds
jl
das
movs
adc
loope
or
std
icebp
loopne
into
cld
nop
aaa
xchg
mov
lds
push
cdq
fsub
jns
test
mov
sahf
dec
hlt
jl
pushf
or
jl
enter
mov
pop
xchg
stos
xchg
jae
les
je
aaa
add
jbe
mov
pop
sub
pop
sub
loopne
cdq
inc
push
shl
cs
movs
sbb
stos
mov
mov
mov
inc
test
cmc
lahf
mov
cmp
int3
dec
inc
xchg
xchg
loopne
cwde
out
js
(bad)
jne
push
imul
inc
aam
or
hlt
mov
pop
xchg
add
stos
lahf
stos
cdq
xchg
ss
push
jae
jo
and
inc
mov
(bad)
jge
xor
mov
call
popf
inc
xchg
push
sbb
jp
or
lea
sbb
add
pop
lahf
bound
pop
sbb
outs
repz
sbb
xchg
or
(bad)
ins
imul
push
sar
push
mov
push
repz
dec
pop
xchg
pop
stos
jecxz
int
add
pop
mov
cld
mov
retf
xor
xchg
sbb
inc
fadd
mov
sub
ins
xchg
outs
or
outs
test
cmps
adc
lds
mov
sbb
call
in
pop
fstp
outs
and
jge
jl
ret
pop
sbb
outs
xchg
or
xchg
daa
rcl
or
sbb
sub
fimul
cld
push
ret
and
lea
ja
dec
jbe
pop
cmp
pop
cmp
jl
js
cmps
dec
hlt
mov
jl
dec
sbb
xor
pop
xor
cmps
adc
fisub
lea
in
test
jl
cmp
mov
jns
mov
out
mov
and
or
out
dec
sub
fild
sub
mov
mov
xchg
sti
retf
sbb
sub
cmp
mov
dec
pop
dec
ds
sti
repnz
test
jne
adc
cmps
out
cwde
int3
mov
xchg
dec
mov
rol
je
(bad)
cmp
adc
or
hlt
jl
mov
dec
push
(bad)
xchg
inc
cmps
mov
ret
mov
test
jl
cwde
fsubr
sbb
rcl
addr16
popf
push
jg
mov
outs
jl
xor
rcr
das
mov
hlt
test
add
inc
jl
(bad)
retf
stos
adc
xlat
shr
jne
jbe
push
jmp
and
cli
mov
cmps
sbb
jne
jl
(bad)
dec
xor
push
fdiv
jl
xchg
sub
imul
shl
or
jnp
jl
push
arpl
movs
adc
aam
mov
mov
enter
inc
fcom
inc
mov
jle
ret
mov
test
outs
xchg
shr
aad
les
add
sbb
adc
pop
inc
and
xchg
test
mov
or
inc
bndstx
add
mov
or
ds
movs
xchg
pop
push
push
jl
adc
addr16
fwait
in
aas
xchg
cmc
sbb
or
mov
mov
jno
loope
jl
xor
add
or
jl
inc
and
imul
xor
gs
jmp
push
scas
loopne
imul
fidivr
xor
int3
sub
mov
jg
inc
adc
les
and
jl
jle
mov
popf
or
dec
inc
loope
xor
push
jge
sub
(bad)
stos
sbb
xchg
xchg
div
pop
lods
dec
inc
out
pushf
or
jl
ret
xor
cdq
or
(bad)
test
or
mov
fsubr
xor
push
cmp
mov
aam
js
mov
mov
cmps
or
mov
test
inc
sub
jb
icebp
jae
or
int
jmp
aad
jbe
inc
push
mov
jl
push
adc
in
fdiv
mov
cmp
leave
sub
xchg
jge
adc
and
jl
inc
mov
cdq
ja
call
push
addr16
imul
fld
fist
mov
sbb
out
aam
dec
cmp
out
jne
xor
ins
mov
test
js
push
sbb
outs
and
dec
mov
ins
mov
repnz
mov
inc
and
addr16
loop
mov
hlt
leave
jl
in
sbb
jl
or
clc
call
rol
dec
mov
leave
dec
xor
sbb
fistp
xor
aaa
pusha
aas
sub
mov
rcr
push
jns
xchg
sub
jl
mov
fdiv
inc
into
jl
adc
fbstp
hlt
mov
cwde
stc
jl
out
nop
es
xchg
add
lea
mov
lods
inc
dec
mov
jg
fsubr
out
sub
inc
adc
sub
fcom
jbe
mov
pop
clc
stc
pop
mov
mov
fwait
push
popf
jp
xlat
dec
jp
loopne
add
pop
pusha
jl
outs
pop
gs
std
aam
loope
mov
cmps
xchg
jl
cmp
ja
add
data16
cld
sbb
mov
add
inc
lods
ret
scas
std
test
dec
movs
aas
xchg
cmp
jae
jp
add
add
xor
add
mov
ins
mov
es
into
nop
or
jl
mov
out
push
mov
ss
dec
push
(bad)
or
xchg
jl
fcomip
jmp
sub
mov
jge
cmp
out
fst
les
outs
sbb
mov
lock
pop
pop
js
jno
jg
jl
or
fist
mov
fcom
jl
dec
xor
jae
lds
jl
in
push
push
dec
arpl
jmp
jp
push
xor
xchg
mov
adc
push
sub
xor
cmp
rcr
xchg
pop
and
cmc
push
inc
sub
and
int
fcom
xchg
push
std
jl
gs
retf
and
and
sahf
jl
loop
shl
leave
idiv
clc
fist
aam
popa
rol
mov
inc
jl
aam
iret
push
cmp
imul
sbb
jge
pop
cmp
pop
and
mov
icebp
inc
jmp
jl
cmp
push
mov
pop
mov
and
cmc
jns
fiadd
jl
cwde
sti
fdivr
shr
jp
call
lock
add
jl
pop
dec
push
scas
fidivr
(bad)
jmp
movs
dec
sar
outs
inc
or
fwait
pop
sub
xlat
pushf
enter
pop
sar
in
lods
inc
jb
push
inc
enter
dec
(bad)
mov
add
in
mov
mov
cmp
jae
(bad)
fst
addr16
popf
sbb
loop
xor
jp
pusha
mov
std
xchg
xor
test
sti
nop
or
cmps
test
mov
in
fimul
call
or
rcl
jbe
mov
push
cmp
ror
addr16
test
pushf
cmc
lahf
ins
lods
jge
dec
test
cmp
cmp
mov
test
daa
fadd
outs
push
inc
lahf
xchg
add
sbb
inc
xor
cmp
es
popa
adc
out
push
dec
mov
xor
fs
into
shr
pop
popa
jnp
or
dec
add
inc
sub
add
push
sub
pusha
in
xchg
mov
es
pop
punpcklwd
das
sbb
cld
ins
clc
out
mov
mov
mov
push
pop
sbb
fstp
jl
stos
leave
jmp
les
es
scas
in
jge
mov
test
sub
xor
inc
aaa
mov
lods
fstp
push
jl
or
fs
push
xor
inc
jl
mov
push
mov
xor
fwait
jl
test
cmc
jbe
xor
mov
jmp
sub
pushf
js
xor
jl
jbe
fdivr
push
jge
xor
loopne
or
fs
jl
mov
jg
jge
in
and
or
jl
test
icebp
(bad)
movs
adc
jl
es
sub
and
(bad)
jl
ret
mov
mov
inc
mov
mov
or
adc
pop
sub
adc
into
mov
or
mov
dec
pop
and
ficom
lock
sub
inc
xchg
xchg
in
test
jl
fistp
test
ins
loope
loopne
sub
or
ins
jg
fild
xchg
dec
mov
les
jp
aad
sbb
jl
mov
mov
movs
jl
sti
push
in
jge
push
dec
retf
and
cmp
sub
push
xor
std
les
idiv
outs
cmp
and
xor
mov
cdq
call
sar
xchg
out
pop
fbstp
or
pop
mov
cwde
cmp
xchg
sar
std
cmp
push
hlt
jne
out
mov
call
or
int3
xor
dec
lods
xchg
jo
fiadd
ins
aas
ret
(bad)
data16
jo
push
xchg
dec
test
or
mov
jp
push
scas
xchg
or
cdq
or
pushf
xchg
and
sbb
jl
imul
dec
jl
stos
movs
sbb
jl
retfw
cmps
adc
mov
jl
sbb
test
xor
cli
jl
lea
pusha
jns
mov
(bad)
sub
inc
fidivr
adc
dec
mov
stos
adc
sub
pop
icebp
int3
sti
test
outs
(bad)
or
mov
into
aas
outs
sub
push
mov
mul
cmps
push
lock
rcr
imul
into
out
mov
xchg
sbb
cmps
sbb
push
jae
scas
pop
lds
or
xchg
ja
cmp
push
int3
push
das
pop
jl
dec
inc
mov
and
or
jle
mov
ja
sbb
pushf
jae
and
lods
pop
clc
popf
cli
cmp
jnp
stos
into
mov
pop
and
dec
ja
inc
mov
sar
aas
push
leave
mov
jl
mov
(bad)
loopne
hlt
outs
dec
mov
out
jb
jl
aam
xchg
cld
pop
inc
sub
cli
jge
pop
xor
aam
les
sub
lea
hlt
nop
sar
lods
mov
add
push
push
mov
xchg
jle
sub
std
cmp
jb
jl
int3
shr
and
scas
fsub
push
sar
jl
pop
fwait
test
xchg
pop
push
inc
cs
fdivr
cmp
mov
and
imul
ret
sbb
sub
mov
out
cld
shl
sbb
call
call
outs
mov
cld
out
sub
sbb
shl
sbb
jbe
pop
retf
loope
jl
pop
lahf
and
adc
loop
(bad)
js
lahf
(bad)
mov
clc
mov
cdq
cli
(bad)
or
pop
jo
je
sbb
xchg
mov
mov
call
je
mov
dec
ret
jp
cld
cmp
cmp
add
mov
retf
cmp
outs
jmp
mov
fld
clc
cld
loop
mov
inc
stos
aam
int
xor
jl
pop
pop
sub
push
pop
aaa
jnp
sbb
scas
les
sbb
clc
jl
icebp
in
add
xor
enter
pop
or
into
fcom
rcr
pusha
out
mov
mov
or
xchg
in
jl
mov
cmp
dec
scas
jl
cld
imul
hlt
xlat
push
add
outs
sub
and
sbb
inc
jge
mov
es
cmp
jl
test
cmps
jl
push
cs
aad
xor
jl
pop
cmp
loopne
in
inc
and
cmp
mov
js
(bad)
retf
fist
mov
loope
cs
fisubr
iret
pop
or
out
cwde
adc
jl
stc
in
stos
xchg
test
cld
jl
(bad)
jns
outs
jp
jl
add
pop
cmp
ds
mov
adc
fcmovne
jl
nop
pop
in
add
fs
mov
fbld
push
jl
fnstcw
push
fwait
inc
retf
fs
es
push
sbb
cld
mov
sbb
xor
pop
pop
jno
push
scas
js
outs
outs
js
sub
sar
fbstp
test
push
lods
pop
xor
dec
sub
sbb
and
pop
mov
jmp
mov
push
sar
xor
nop
jl
mov
hlt
jecxz
pop
pop
inc
and
jl
add
sub
loopne
pop
or
mov
arpl
sub
(bad)
iret
jl
jns
xchg
sbb
mov
mov
jmp
jl
xor
arpl
fnstcw
dec
ins
pop
imul
cld
sahf
test
mov
jl
jne
inc
xchg
cmp
xchg
shl
sub
lahf
add
add
daa
mov
xchg
jmp
scas
mov
mov
inc
repz
xlat
fidivr
nop
in
cmp
je
jno
imul
jl
add
fisttp
mov
cmp
stc
data16
sub
mov
in
pop
pop
and
ins
jl
int
cmps
fwait
jns
ds
int3
pop
pop
cmc
lds
jno
jmp
(bad)
repz
fucomp
fsubr
dec
jl
mov
sar
jle
int
(bad)
cmc
jl
retf
fidivr
cmp
ja
push
push
xchg
mov
in
data16
push
aam
dec
cmp
jl
(bad)
mov
clc
ja
jmp
loop
pop
ret
add
pop
aaa
mov
js
xchg
pop
sbb
retf
jnp
movs
fsubrp
jb
je
mov
enter
loop
std
test
dec
inc
cmp
or
jb
adc
jl
aam
xor
mov
(bad)
fbstp
jp
push
push
mov
mov
dec
out
std
pushf
leave
das
xchg
clc
push
jp
mov
cld
mul
daa
in
sbb
nop
or
in
sub
add
pushf
int3
add
push
push
or
push
push
cmp
inc
or
out
and
mov
jl
into
test
fwait
jl
daa
das
adc
arpl
cmp
sti
jl
push
sub
xor
data16
inc
aas
mov
jl
pop
jg
sub
and
leave
pop
sbb
or
loopne
out
in
jl
in
mov
fimul
dec
mov
jl
cli
mov
dec
xor
ins
push
mov
ja
push
ret
jge
aas
jge
xchg
mov
xchg
hlt
xor
pop
ins
jmp
or
add
xor
mov
adc
xchg
lock
and
pop
outs
mov
pushf
jl
loopne
and
cmp
push
inc
adc
jl
adc
pop
(bad)
sbb
push
sbb
(bad)
sbb
movs
or
jg
add
out
xor
adc
sbb
adc
xor
jl
jno
mov
scas
pop
push
cmp
cmp
ficom
popf
jl
aam
mov
inc
into
mov
jno
push
movs
pop
scas
ficomp
sbb
jl
mov
mov
jl
or
popf
sub
jle
jl
xchg
out
hlt
inc
out
inc
xor
cld
idiv
out
fwait
jne
jl
and
outs
jmp
or
pop
jp
les
mov
mov
push
cmp
cmp
add
out
jno
aaa
pop
dec
and
jno
cmp
add
loop
jecxz
lea
mov
xchg
jl
inc
mov
xor
fwait
pusha
jl
adc
hlt
jl
jns
and
cwde
or
mov
adc
lods
jbe
pop
pop
cs
cli
jl
xor
jge
js
sbb
cmp
inc
popf
jl
cli
movs
xor
jnp
fcomp
and
call
push
or
ja
xor
xchg
icebp
jl
dec
fcmovbe
jl
sbb
pusha
mov
push
and
mov
push
jp
es
(bad)
movs
nop
push
mov
jmp
out
push
jl
mov
adc
mov
cli
dec
pop
imul
push
sar
dec
jl
mov
cmps
inc
dec
fisttp
lock
mov
mov
ret
mov
mov
movs
xor
push
(bad)
clc
les
in
repnz
shl
cld
jne
ds
xor
pop
retf
ja
xor
aas
jp
out
dec
mov
cmp
jl
gs
push
xchg
add
jl
mov
hlt
nop
nop
xor
cmp
ins
jecxz
pop
lds
fldcw
or
ret
dec
daa
xchg
adc
cmp
outs
ja
cmp
cld
(bad)
pop
jmp
jns
xchg
fmulp
dec
xor
mov
and
jge
mov
hlt
mov
sahf
ret
mov
mov
mov
pop
mov
data16
rcl
sub
outs
pop
movs
cld
mov
mov
jge
pusha
inc
xor
sbb
jl
mov
(bad)
data16
pop
sahf
ja
(bad)
retf
mov
sbb
push
scas
je
retf
ds
daa
inc
xchg
popf
cld
mov
sub
jl
xchg
lock
int
ds
outs
lea
sti
(bad)
lds
mov
cmps
adc
arpl
sub
ret
push
add
xor
cli
int
jle
push
mov
outs
push
pop
sub
sub
jl
dec
test
retf
jge
add
mov
jl
mov
dec
enter
je
addr16
hlt
jnp
mov
popf
cmp
loopne
jmp
cs
pop
dec
imul
pop
inc
dec
jle
dec
add
adc
mov
push
sbb
idiv
popa
dec
inc
retf
sub
jl
add
jge
mov
fld
(bad)
aas
inc
sbb
dec
pushf
mov
mov
inc
adc
movs
add
repz
test
sbb
(bad)
aaa
jl
or
dec
icebp
jl
add
push
(bad)
lock
fdiv
in
adc
sar
mov
xchg
add
inc
xchg
js
ret
mov
sbb
scas
(bad)
jl
ins
pop
push
inc
ret
mov
add
pushf
mov
ds
mov
fnstcw
xlat
sub
cmc
ret
mov
repz
movs
cld
ret
pop
mov
xchg
cmc
mov
ficomp
sar
adc
inc
push
(bad)
and
jnp
pop
retf
xor
mov
cmp
dec
cs
cmp
jl
sbb
cmp
imul
jecxz
(bad)
leave
adc
xor
push
push
fnstcw
inc
das
xor
adc
in
xor
nop
push
jge
mov
and
int3
mov
jge
mov
mov
fwait
dec
inc
ret
sbb
sahf
into
xchg
mov
jns
mov
xchg
or
xor
xor
scas
data16
jnp
stos
sbb
lahf
xchg
mov
add
jl
mov
adc
jmp
sbb
mov
sub
in
add
mov
mov
mov
popa
jl
sti
in
pop
push
test
add
mov
sar
jl
and
cld
push
mov
add
jp
jno
push
mov
scas
mov
jno
mov
xlat
mov
xchg
xor
xor
jp
bound
inc
xor
xchg
or
inc
xchg
jl
out
inc
mov
lea
es
mov
das
add
dec
jnp
sahf
push
in
jnp
in
sar
sets
fwait
inc
pusha
add
push
hlt
imul
adc
adc
cli
les
mov
cmps
sar
popa
test
adc
jmp
jl
fldenv
inc
jl
mov
or
pop
or
add
push
jge
inc
movs
push
adc
lods
fstp
push
test
mov
cwde
std
jnp
call
jnp
rcr
xchg
mov
inc
rcr
outs
mov
cmp
mov
loopne
jl
cmp
(bad)
jl
cdq
retf
out
inc
jne
outs
mov
mov
(bad)
aas
sub
arpl
add
fwait
adc
add
xchg
sub
lods
adc
mov
mov
cmc
push
lods
mov
popf
(bad)
nop
sub
leave
jg
pop
jno
bnd
jo
(bad)
sub
jl
fsub
aam
mov
or
jno
cmp
pop
lods
and
cmc
pop
jp
pop
dec
scas
cmp
pop
mov
sbb
movs
test
popa
arpl
xor
inc
(bad)
fidiv
pushf
cs
jp
or
pusha
loopne
idiv
or
cmp
pop
sbb
pop
movs
int
sbb
ins
std
mov
es
les
nop
ins
popa
aad
mov
adc
sbb
inc
fisub
repnz
jnp
dec
xor
stc
imul
scas
sbb
adc
std
jl
jle
movs
shr
xor
mov
test
push
leave
jl
add
daa
sbb
out
jnp
mov
test
mov
xchg
pop
push
mov
popa
jmp
sub
in
pop
les
sub
imul
test
enter
add
xor
stos
in
outs
int
and
xor
icebp
into
mov
cmp
ror
cli
or
push
sar
push
ja
cmp
int3
(bad)
pop
mov
mov
movs
adc
push
pop
in
in
mov
push
pop
das
sar
lea
dec
fwait
jns
ret
retf
cld
dec
sub
pop
into
or
jmp
out
or
popa
es
jge
push
into
jge
cmp
imul
loop
int3
adc
movs
pop
inc
mov
ret
test
jmp
mov
(bad)
and
in
std
fmul
loopne
sahf
sbb
call
and
jl
not
aaa
movs
and
jnp
popf
ss
std
out
in
inc
imul
in
xchg
cmp
outs
mov
(bad)
mov
fcom
mov
in
and
scas
stos
cmp
icebp
cmp
dec
fnstsw
adc
mov
ins
mov
mov
add
mov
dec
(bad)
xchg
pop
mov
xchg
pop
and
repz
jge
xchg
sub
clc
sub
cli
jmp
dec
pop
sub
inc
lods
adc
pop
movs
fldcw
int3
out
out
(bad)
aaa
dec
outs
cli
inc
clc
(bad)
sub
jno
mov
ss
cmp
mov
out
aas
cwde
mov
jo
mov
movs
inc
rcr
repz
fs
sub
inc
sub
mov
jmp
push
(bad)
cmp
ja
or
jnp
push
dec
jge
cmp
add
mov
sar
in
leave
fidivr
mov
ja
pop
mov
mov
(bad)
sbb
out
xchg
addr16
xchg
jp
icebp
stos
jge
dec
mov
nop
ss
add
pushf
push
ror
mov
jl
ja
js
aaa
outs
int
retf
jl
dec
sub
aas
xchg
sub
xor
das
pop
cwde
inc
lock
mov
mov
dec
inc
xor
or
clc
jl
pop
fs
jo
in
ja
mov
inc
push
and
sbb
adc
sbb
mov
clc
imul
pop
jl
arpl
sub
jl
pop
pop
adc
fidiv
or
in
push
mov
jns
pusha
js
adc
mov
pusha
push
or
rol
mov
mov
jl
into
xor
pop
shr
(bad)
cld
pop
mov
sbb
inc
adc
adc
lock
cmps
jp
xchg
lds
jb
push
mov
das
gs
inc
pop
xchg
fild
test
mov
shl
cli
movs
fstp
icebp
sbb
pop
js
or
mov
outs
loopne
ins
jb
pop
imul
shl
loope
mov
lds
jno
mov
jge
retf
nop
dec
mov
dec
cmp
inc
xchg
pop
inc
xor
mov
mov
clc
stos
sti
mov
cwde
adc
sub
jne
xchg
into
retf
lea
test
push
mov
xchg
ins
jge
jnp
push
push
or
jl
pop
(bad)
push
jno
in
dec
jl
and
adc
arpl
push
call
outs
inc
(bad)
shr
iret
enter
jl
or
mov
mov
ret
mov
jl
(bad)
add
xchg
mov
icebp
jl
jge
xor
loopne
mov
cmp
es
xchg
jge
fild
pop
mov
xor
or
retf
outs
jb
inc
mov
(bad)
imul
dec
hlt
mov
add
daa
and
mov
in
jo
mov
and
cmp
cmp
std
sub
shr
fadd
inc
(bad)
fs
ins
dec
adc
inc
repz
xchg
inc
dec
sub
addr16
and
xlat
(bad)
test
push
sub
test
mov
pop
jl
movs
or
add
out
out
sti
mov
lock
pop
sbb
cmp
loopne
inc
sbb
mov
out
xchg
jg
sti
or
mov
cld
xor
cmc
mov
mov
cmp
mov
sub
jns
call
jae
scas
inc
xor
pop
jle
or
addr16
mov
mov
push
xchg
pop
std
xor
inc
outs
fsincos
repz
push
or
add
(bad)
lea
cmc
mov
adc
test
mov
jne
xchg
or
push
mov
sub
idiv
cmp
inc
jp
popf
movs
repz
lods
call
sbb
lods
push
jl
mov
inc
cmc
xor
jo
in
jnp
(bad)
jecxz
iret
cmc
or
gs
inc
fbstp
add
cmp
sti
jb
pusha
push
stc
test
xchg
jbe
jl
adc
push
icebp
jl
mov
fisttp
mov
or
inc
jl
cmp
(bad)
mov
jl
dec
inc
and
mov
stos
shl
jbe
jl
cmp
lods
aad
jle
mov
popa
pop
push
int3
idiv
fwait
sbb
and
adc
pop
xlat
or
fild
inc
and
loopne
cmc
ficomp
por
jl
dec
call
(bad)
jl
fadd
scas
push
jne
mov
push
outs
loopne
lahf
jmp
std
jle
pop
ins
mov
hlt
xor
or
(bad)
sub
jge
cmps
cmps
and
xchg
jns
mov
mov
mov
lock
icebp
or
jp
xor
js
xor
or
dec
dec
icebp
lock
out
fcomi
cmp
icebp
mov
xor
sub
hlt
out
push
outs
fs
hlt
or
dec
sbb
jb
fs
sub
xor
ins
xchg
inc
ins
sub
das
xchg
cmp
cmp
fdiv
inc
jo
xchg
sbb
hlt
push
ins
jp
xor
std
sbb
movs
icebp
cmp
cmp
hlt
loope
push
push
jecxz
fwait
rol
xchg
dec
xchg
sbb
shl
pop
loope
icebp
mov
push
ror
aam
(bad)
in
jp
xchg
outs
mov
sub
test
movs
cld
jg
popf
rcr
shl
push
mov
je
adc
jne
or
aaa
jbe
mov
retf
pop
es
js
xchg
loopne
push
cmp
fdiv
fs
xor
dec
stos
out
call
bound
xor
xchg
dec
mov
jns
jg
mov
mov
in
push
push
or
loopne
pop
sub
imul
mov
mov
stos
xchg
repnz
pop
xchg
lock
popa
jae
cmp
cmp
lods
jne
cld
test
(bad)
or
sub
out
and
cmc
mov
pop
cwde
mov
jo
ror
adc
push
aaa
adc
mov
push
in
out
shl
hlt
in
xlat
cli
add
mov
addr16
test
ss
out
push
js
dec
push
xchg
loope
xchg
cmp
pushf
popa
jge
xor
xlat
imul
xchg
jl
mov
push
fcom
cmp
fcomp
mov
call
out
pop
xchg
cmp
daa
repz
mov
mov
test
in
cs
in
sti
inc
cmc
ins
sub
outs
or
mov
sub
xchg
inc
xchg
mov
dec
sub
mov
push
repnz
test
jge
mov
mov
aam
cmp
pop
(bad)
inc
jb
fstp
daa
hlt
dec
popa
pop
movs
mul
jbe
mov
mov
js
stc
xchg
inc
xchg
or
inc
mov
(bad)
inc
scas
call
cmps
jns
loopne
dec
add
sbb
ret
jb
(bad)
(bad)
(bad)
mov
xchg
xchg
push
call
xchg
sub
loop
dec
rcr
jge
xchg
mov
sub
sub
fs
mov
retf
add
pop
not
into
imul
std
and
pop
(bad)
dec
je
dec
jmp
or
dec
xchg
jge
dec
stos
rcl
sub
push
mov
lods
xor
cmps
ret
in
outs
shl
cmp
rcl
movs
(bad)
pop
lahf
cmp
and
popa
push
push
imul
leave
in
js
fistp
sbb
cmp
sahf
sub
fldcw
addr16
in
repz
ins
xchg
fwait
sub
adc
dec
nop
mov
ins
xor
popf
dec
jecxz
loopne
mov
jae
pop
push
je
cmp
sub
ds
pop
xchg
rcr
not
mov
retf
rcr
xchg
sub
loopne
mov
jg
call
sbb
repz
out
ins
loope
in
jne
imul
push
sub
jbe
xchg
out
pop
retf
mov
(bad)
jns
cmp
jns
jge
pop
sub
(bad)
xchg
dec
call
or
loop
inc
mov
dec
jp
cmp
lock
fsubr
pusha
xor
inc
mov
mov
outs
loopne
sub
inc
imul
sbb
jmp
push
cmps
imul
retf
movs
pop
dec
aad
(bad)
daa
fldcw
sbb
shl
xor
or
dec
stos
aad
adc
jge
loop
(bad)
jge
xlat
jge
call
clc
adc
jo
sub
mov
mov
(bad)
add
iret
js
adc
(bad)
cld
mov
pop
mov
mov
ins
mov
dec
in
push
out
cld
sub
je
shr
in
in
je
in
lods
mov
inc
loop
imul
ins
movs
fdivr
aam
mov
fcomp
in
loope
push
out
fsubr
fmul
dec
lods
cmp
adc
cld
or
xlat
fcom
lods
dec
dec
clc
xchg
out
in
xor
test
jge
xor
xor
out
mov
gs
cwde
push
inc
xor
ss
cld
pop
lock
add
les
jp
mov
jmp
add
mov
sub
xor
sub
cwde
es
loopne
fs
pop
ins
ins
mov
in
test
or
push
aam
clc
add
in
dec
shl
aam
jl
adc
clc
mov
and
enter
js
jl
ins
shr
mov
call
fs
xor
cmp
ins
ins
adc
imul
dec
adc
pop
add
test
call
xor
xor
sub
fcomp
cmp
loopne
cmp
out
lock
je
loop
aaa
int3
dec
cld
sbb
push
clc
and
ss
adc
or
cwde
pushf
or
ins
js
out
lock
lock
aam
mov
pusha
shl
mov
movs
cmp
pop
js
xchg
clc
je
push
sbb
pop
les
in
sub
mov
xchg
sub
push
fst
sbb
adc
rol
inc
adc
jge
jp
loopne
aaa
inc
pushf
outs
push
jg
mov
sub
call
pop
inc
dec
pop
mov
xchg
daa
test
ret
mov
pop
data16
adc
sbb
xchg
xor
pop
push
in
sub
xchg
or
js
pop
pop
jg
and
jnp
push
outs
shl
lea
mov
and
ret
and
mov
mov
xchg
pop
cmp
adc
push
add
mov
mov
out
sti
adc
dec
cmps
shl
xchg
mov
dec
je
imul
daa
sub
retf
xor
js
cdq
pop
stos
pop
imul
jge
jo
push
aas
inc
dec
xor
xchg
inc
mov
pop
cmp
xchg
add
jns
or
push
cmc
js
mov
(bad)
ss
sub
js
jbe
movs
mov
bound
xchg
mov
jmp
(bad)
cmp
add
pushf
inc
hlt
mov
jo
add
push
mov
pop
inc
sub
xchg
adc
inc
sub
dec
dec
jecxz
xor
cld
mov
add
movs
shl
inc
loop
pop
pushf
ja
jge
jns
xchg
or
adc
pop
aam
xchg
add
sub
mov
leave
mov
scas
push
push
mov
js
mov
lahf
loope
sbb
in
push
push
xchg
aas
into
das
test
dec
jle
retf
fsubr
dec
push
push
jmp
cld
mov
xor
xchg
aas
jmp
mov
dec
xchg
les
adc
pop
fisttp
sub
sub
dec
inc
dec
push
jne
xchg
loopne
rol
int3
in
add
(bad)
fwait
rol
mov
sbb
cmp
mov
pop
(bad)
sar
sbb
push
jo
mov
fidivr
jge
push
xchg
fnsetpm(287
loopne
movs
push
xchg
stc
ror
push
mov
jge
icebp
out
adc
and
push
sub
dec
mov
bnd
cmp
inc
adc
push
stos
mov
stos
cmp
test
retf
lods
gs
inc
push
cld
inc
mov
stos
or
sar
in
mov
sbb
push
pop
inc
xchg
mov
or
ss
popf
ins
test
jge
xchg
div
xchg
pop
sbb
in
in
or
call
movs
aas
outs
out
retf
mov
jle
jne
cld
xchg
xchg
jp
inc
out
push
cmp
pop
sahf
and
cld
and
cmp
mov
sub
pop
lock
mov
fcom
pusha
cli
test
push
(bad)
sbb
inc
daa
mov
mov
(bad)
addr16
sub
add
xchg
jnp
sar
mov
fs
pushf
test
jbe
stos
sbb
js
arpl
push
test
dec
push
cmp
inc
stc
stos
cmp
outs
pop
dec
cmp
xor
in
jae
dec
mov
ins
and
cmps
ins
jne
dec
pusha
cmc
es
outs
jecxz
push
or
mov
push
sub
push
aaa
adc
add
shl
cmp
xchg
sbb
fnstenv
mov
xor
dec
rcr
in
cmp
ins
pop
repz
stos
(bad)
fisubr
mov
test
in
fs
jle
movs
jnp
push
jmp
xchg
jns
pop
xchg
frstor
cmp
and
inc
sub
lods
hlt
js
xchg
in
cmp
sbb
xchg
aad
push
pop
call
xor
movs
pop
(bad)
jmp
scas
cmp
pusha
or
jo
mov
sbb
cdq
cwde
je
mov
xchg
in
je
jne
data16
sbb
fidivr
dec
fld
call
ja
movs
sti
mov
mov
test
loopne
adc
pop
adc
cmc
loopne
lock
in
loop
or
call
out
and
repz
jne
mov
cld
inc
test
and
sub
mov
shl
push
cwde
(bad)
hlt
ss
jns
adc
mov
fmul
jne
inc
in
sbb
sbb
fsubr
imul
jmp
stc
pusha
mov
ins
rcr
pop
sar
jl
stos
adc
inc
inc
xor
jb
lock
cwde
outs
cdq
rol
dec
dec
ja
sub
sub
test
dec
adc
pop
pop
addr16
sbb
jnp
sub
lea
addr16
cdq
hlt
dec
push
adc
cmp
xchg
int
mov
cld
dec
xor
sub
stos
mov
xor
mov
cmps
test
icebp
dec
mov
sahf
lods
dec
adc
dec
je
dec
sti
out
pop
sub
(bad)
sbb
jnp
test
cmc
dec
mov
in
xchg
cmps
sbb
xchg
movs
arpl
sub
sbb
inc
mov
jbe
jb
xor
xor
pop
clc
cmps
lock
in
outs
pop
cmc
fs
(bad)
in
push
push
jo
cmc
xchg
test
mov
or
leave
cmp
stos
mov
jge
jle
call
xchg
hlt
jl
inc
adc
rcl
popa
add
add
ror
rcr
xchg
sar
inc
js
test
jb
push
sub
cmp
pop
rcr
js
nop
jge
adc
rcr
dec
sbb
test
loope
xchg
shl
xor
ins
sub
xchg
fcomp
fnstcw
xchg
cmp
xchg
lock
mov
push
pop
jle
sub
mov
and
xor
mov
call
inc
sub
push
push
in
mov
jecxz
pop
inc
push
xor
jae
mov
hlt
xchg
int3
push
sub
pop
jo
pop
ja
jb
(bad)
ds
in
sbb
mov
sub
mov
ja
dec
cmp
push
jbe
and
aad
lock
fwait
jne
lea
push
inc
push
mov
jne
inc
inc
int
scas
dec
cmp
sbb
jbe
test
sti
mov
pop
clc
sbb
cld
iret
sbb
ret
jb
mov
push
retf
ror
cmp
xchg
mov
je
rol
and
movs
adc
dec
in
jl
hlt
mov
xchg
push
stc
mov
xchg
mov
sbb
mov
stos
retf
adc
hlt
add
sbb
push
pop
es
cmps
daa
fwait
mov
jmp
sub
data16
fsubr
xchg
inc
clc
inc
jmp
movs
xchg
or
cmps
fldenv
dec
cmp
inc
nop
xchg
mov
adc
lahf
pop
or
idiv
pop
mov
(bad)
aam
xor
mov
out
jp
and
sbb
mov
add
jne
dec
stos
mov
fild
icebp
test
sub
and
jp
xchg
mov
mov
sahf
mov
and
lock
dec
scas
cmp
outs
rep
or
add
pop
dec
adc
es
mov
iret
add
and
in
jge
das
jp
push
cmps
cwde
push
cmc
adc
adc
jns
push
xchg
push
xchg
imul
lds
xchg
push
test
data16
sbb
sti
jne
(bad)
xor
ins
stc
fs
pop
or
dec
clc
xchg
jb
mov
fwait
inc
push
fldcw
jne
test
mov
ins
inc
cmc
pusha
stos
fsub
sub
or
test
xchg
ins
xor
mov
mov
adc
call
and
dec
xchg
out
pop
sub
jne
cli
aad
jp
jb
inc
sub
jl
xchg
call
jne
test
movs
adc
or
push
jge
jg
mov
inc
sbb
mov
ret
lods
jne
cwde
test
cmp
stos
hlt
sahf
cs
push
dec
pop
xchg
dec
cli
jmp
sub
xchg
lods
dec
ins
sub
aas
rcr
mov
xchg
sbb
and
retf
jns
xchg
cmp
cmp
out
inc
js
pop
fadd
xchg
lock
adc
cwde
push
inc
jb
adc
ins
push
pop
or
cmp
outs
dec
xchg
outs
mov
leave
mov
fadd
jne
gs
dec
(bad)
popa
pop
cwde
dec
fbstp
(bad)
test
cmp
cmp
xchg
or
dec
fmul
cmp
jns
cli
mov
inc
(bad)
mov
test
stos
ficom
icebp
jmp
jmp
mov
sbb
in
fistp
push
jle
stc
xchg
sub
ja
sahf
jmp
retf
test
xchg
mov
ins
xchg
ret
mov
aam
mov
fiadd
push
fxch
jle
jae
adc
adc
rcl
in
imul
xor
sti
adc
test
jb
pop
icebp
cli
repnz
(bad)
call
imul
jne
push
cmp
push
mov
test
push
dec
pop
hlt
xchg
test
mov
jo
popf
jp
mov
xchg
fwait
inc
ficomp
or
inc
push
(bad)
popf
cmps
push
mov
xor
xchg
mov
shl
out
retf
movs
ret
stos
movs
loopne
mov
jp
jle
outs
stos
pushf
loopne
push
sahf
sub
popa
jmp
(bad)
sbb
push
mov
xor
cs
je
jg
sti
iret
or
mov
jle
loope
xchg
addr16
mov
mov
addr16
sbb
ds
pop
clc
stc
(bad)
jmp
sub
mov
sbb
aas
dec
cmps
data16
jo
xchg
mov
sar
stos
or
loop
popa
mov
or
xchg
xchg
and
int
cs
cmps
push
rcr
jge
push
shrd
mov
dec
in
pop
icebp
cmp
cmp
sbb
or
call
push
jl
xor
icebp
mov
mov
xchg
scas
in
cmp
dec
jl
cmp
test
xchg
jo
test
cmp
xchg
mov
dec
into
lds
mov
pop
add
test
jns
xor
int3
stos
mov
inc
mov
and
ins
cmp
jb
js
sbb
pop
xchg
(bad)
stc
xchg
sahf
aad
imul
mov
in
ins
fist
outs
or
pop
fsubr
push
cmp
cli
sub
push
sub
popa
mov
mov
loopne
xchg
movs
mov
xchg
imul
and
add
xor
push
mov
mov
je
jg
stos
ins
sbb
jnp
jmp
push
mov
test
aad
sbb
rcl
aad
jo
xchg
test
dec
out
add
jne
and
push
loopne
psllq
xor
fadd
jo
xor
idiv
sbb
mov
jp
dec
xchg
js
mov
repnz
leave
loop
rcr
stos
fwait
sub
mov
aaa
retf
je
int3
cmp
adc
(bad)
cli
push
imul
stos
sub
fstp
push
imul
jge
pop
loopne
inc
hlt
ins
cmp
mov
mulps
clc
push
sub
ins
(bad)
aas
sub
arpl
fidiv
(bad)
xor
mov
imul
cld
fisttp
aam
in
adc
je
test
loop
and
cmp
mov
sbb
xor
pop
xor
das
sbb
cwde
dec
xchg
and
loop
xor
xor
dec
pop
imul
(bad)
mov
sbb
ret
inc
cwde
jne
aaa
pop
sbb
sub
test
xor
xor
enter
stc
rcl
xchg
jp
mov
call
neg
xor
cmc
sbb
stos
lods
pop
aaa
mov
enter
aam
mov
cmp
cli
test
test
inc
into
push
neg
push
mov
jnp
lock
sbb
fcomp
in
xchg
popf
and
aaa
retf
cwde
pop
pop
(bad)
xchg
repnz
div
cmp
shr
inc
popa
test
jmp
pop
mov
jmp
out
dec
stos
leave
sbb
mov
cmp
es
push
pop
cmp
scas
mov
sub
dec
or
(bad)
pop
jmp
sbb
stc
fwait
pop
cmp
xlat
jo
inc
xchg
lods
sbb
push
push
push
std
cmps
retf
pushf
in
adc
xchg
push
inc
cli
cmp
mov
mov
icebp
int
xchg
jge
rcl
sbb
push
xchg
dec
imul
call
jg
sub
jbe
gs
sub
sbb
sbb
dec
jp
cmp
xor
fwait
aaa
jecxz
jno
or
js
sub
push
lahf
lods
xchg
stc
sbb
inc
fldenv
adc
nop
jmp
mov
out
pop
fimul
sub
loop
xchg
lock
retf
xor
cmps
call
mov
mov
movs
mov
cdq
in
hlt
pop
xchg
cmp
jle
jp
mov
mov
push
fild
mov
aam
and
fcomp
ret
xchg
fnstenv
fst
dec
mov
fdiv
xchg
jge
push
mov
xchg
mov
jl
xchg
icebp
das
cmp
test
je
lods
jmp
rcr
push
std
imul
rcl
outs
xchg
jo
xor
and
popf
cli
xchg
inc
xchg
and
mov
cs
push
js
push
lea
dec
outs
test
sbb
scas
bound
mov
xchg
outs
cmp
mov
cs
pop
mov
mov
jbe
inc
mov
retfw
xchg
jno
mov
mov
cmp
ja
xchg
push
dec
in
pushf
js
xor
aas
xchg
mov
mov
fucomip
je
jo
mov
add
(bad)
sub
test
dec
xchg
imul
pop
sub
stc
mov
retf
xor
mov
jno
xchg
in
nop
inc
inc
push
sub
outs
stc
mov
pop
nop
cld
bound
cwde
jns
loope
enter
mov
cmp
cmps
stos
lea
push
sub
scas
sub
(bad)
icebp
push
adc
push
pop
lods
sti
jmp
cld
mov
inc
stos
or
mov
cdq
add
imul
mov
cmc
rol
or
cmps
push
pop
lock
call
mov
test
sbb
jne
inc
ss
adc
lock
pop
dec
hlt
or
xchg
cmp
pop
jb
(bad)
fwait
jns
adc
cld
bound
stos
xchg
push
xchg
mov
mov
outs
test
in
mov
add
jl
cmp
test
lea
cdq
xchg
mov
lock
loopne
aad
arpl
jno
jecxz
(bad)
pushf
cmp
pop
call
mov
mov
jnp
ss
test
(bad)
pop
outs
std
unpcklps
dec
cwde
adc
sbb
leave
pushf
jge
icebp
out
mov
mov
sub
outs
push
push
test
jae
(bad)
mov
mov
in
test
pop
cmps
out
push
xor
cmp
and
push
xchg
pop
mov
jo
cmp
stos
cmp
imul
jb
nop
cmp
not
xor
mov
rcl
icebp
aaa
sub
cld
jae
cmps
inc
popa
mov
xor
imul
mov
inc
and
mov
retf
add
cmp
mov
or
dec
test
call
mov
imul
push
imul
mov
lods
retf
sbb
mov
inc
and
test
(bad)
es
je
jle
outs
shr
in
and
mov
stos
xchg
fldcw
add
call
jns
loopne
loopne
mov
sub
leave
jge
inc
cld
ja
outs
dec
inc
inc
cwde
inc
xchg
cmp
xor
or
sbb
dec
jo
addr16
jb
jo
ret
repnz
lods
je
out
dec
jnp
jb
pusha
mov
jle
call
mov
jo
and
jae
push
cmp
inc
add
vsubps
dec
(bad)
cwde
jecxz
inc
pop
inc
lock
std
outs
jge
mov
jne
out
int3
mov
pop
fs
jge
jp
jnp
jbe
xlat
xlat
push
jge
pop
retf
jne
mov
xchg
jp
bound
(bad)
outs
loopne
pop
push
adc
jne
jbe
push
sbb
jno
ret
ins
in
je
jbe
gs
cmp
jo
cmp
cmc
imul
outs
or
jns
outs
inc
ins
hlt
xchg
inc
gs
jns
push
jne
je
fdivr
int3
daa
jnp
add
je
xchg
sub
xchg
jecxz
js
icebp
and
jp
js
jno
jne
call
pushf
push
ja
mov
js
mov
jne
jne
mov
mov
jg
shl
jns
js
inc
sub
push
add
fst
imul
fs
in
pop
jne
jge
pop
jnp
add
pop
gs
pop
je
fs
jns
dec
pop
pop
push
jne
jnp
pop
jge
inc
xchg
dec
sub
jne
je
int3
inc
les
jo
pushf
ss
popf
gs
fs
mov
add
adc
mov
je
inc
xor
js
sbb
or
ja
sub
fsub
cld
jge
cld
jns
cli
and
mov
or
mov
add
pop
inc
add
ja
hlt
mov
mov
in
sbb
repz
xor
in
lods
outs
aaa
lock
xor
mov
inc
repnz
inc
inc
ja
add
mov
pop
test
das
je
push
jp
pop
pop
data16
jge
pop
imul
rol
or
jge
in
cwde
mov
cwde
stos
push
fdiv
popf
pop
mov
push
xlat
dec
jb
dec
fsub
aas
imul
ss
push
pop
push
jne
jmp
or
xor
out
imul
cli
push
sbb
leave
popf
ds
cmp
inc
repnz
inc
ds
stos
outs
dec
jmp
dec
in
test
dec
call
popf
ja
mov
mov
sbb
movs
popf
push
out
div
mov
dec
inc
jne
pop
mov
popa
cmp
ja
inc
xor
jo
enter
call
jns
mov
stos
js
test
nop
lods
dec
jecxz
xor
xor
and
fst
jp
adc
mov
dec
js
and
imul
jo
or
adc
ja
cmc
mov
cmp
cmp
jbe
dec
in
fs
jmp
popa
test
mov
push
sbb
out
test
pushf
icebp
cmp
xchg
dec
imul
je
mov
mov
neg
fsubr
xchg
lock
cwde
sub
add
js
stc
mov
mov
sbb
or
adc
pop
mov
js
mov
js
idiv
jns
je
pushf
or
js
js
aad
das
mov
ins
je
jne
pop
mov
test
jb
popf
add
outs
inc
sub
call
out
test
in
xchg
push
repz
push
out
call
pop
movs
inc
icebp
test
mov
stc
mov
retf
sbb
fs
mov
nop
adc
iret
pop
fs
jne
clc
jp
arpl
cmp
data16
fld
repnz
pop
mov
in
dec
out
int3
xor
in
je
cs
dec
subps
cmp
pop
outs
push
push
jge
hlt
scas
push
ja
mov
shl
je
jmp
mov
lahf
je
(bad)
push
rcl
xchg
dec
xchg
and
je
in
cmps
push
lock
fcom
sub
jns
lock
sub
mov
jmp
pop
push
mov
call
jmp
rcr
xor
and
inc
jge
dec
push
mov
pop
jb
dec
push
mov
xor
jo
jmp
mov
xchg
test
mov
ss
icebp
movs
push
dec
in
and
inc
out
lods
mov
jo
hlt
or
sbb
in
jns
ins
js
ja
pop
push
dec
int3
jbe
jns
test
js
jo
shl
cdq
js
xor
mov
and
jne
aas
adc
add
pushf
cmp
cmp
test
icebp
stos
pop
fwait
push
aam
std
mov
int3
int3
pop
cmp
pop
push
sub
inc
loop
mov
push
js
fs
pop
ja
xor
dec
jecxz
pushf
(bad)
inc
push
cmp
outs
jo
jo
mov
pop
xor
clc
pop
cmp
stos
ins
out
clc
inc
add
imul
push
sbb
fs
xor
xor
js
cwde
mov
ins
xor
jb
mov
jg
push
cmp
jnp
clc
in
les
push
movs
push
stc
sub
pushf
dec
icebp
jae
push
pop
cwde
dec
loopne
pop
jl
mov
call
jp
push
out
xchg
sbb
inc
jmp
pop
in
imul
xor
push
ja
ror
ror
sub
sbb
pop
in
jl
cmp
repnz
ds
jb
out
stos
enter
cmp
and
pop
bound
jmp
in
cmp
out
adc
fs
jmp
cld
pusha
xor
mov
in
push
sub
push
push
inc
pop
xchg
sbb
out
sub
mov
jg
icebp
pusha
sbb
push
push
test
add
movs
xor
or
lock
dec
fimul
je
cwde
dec
and
mov
pop
adc
sbb
cmp
imul
stc
js
or
mov
das
aad
in
jo
sub
lods
jmp
push
push
dec
call
jl
int3
std
movs
ja
adc
cld
dec
jp
mov
cmp
inc
adc
cmp
cmp
add
sub
pop
sbb
lods
inc
sub
fcomp
js
dec
lock
jp
jno
jb
lods
pop
test
ins
pop
test
mov
xchg
mov
call
ror
loopne
sbb
push
push
sbb
nop
int
inc
loop
movs
or
in
imul
push
cdq
std
in
out
les
loopne
xor
fisttp
dec
jae
jbe
retf
dec
add
jne
mov
and
jns
push
dec
data16
add
in
je
sti
and
je
sub
fdiv
push
pop
test
add
push
loop
clc
dec
lock
push
ficom
call
xor
jae
(bad)
jmp
and
je
lock
jns
sub
inc
add
jae
cmp
push
push
clc
jmp
mov
pop
jl
and
call
je
ins
pop
imul
cld
and
pop
xor
fs
push
ja
hlt
pop
in
jp
or
js
dec
dec
enter
gs
xor
push
sbb
pop
inc
loopne
dec
xor
cmp
in
pop
and
sub
jbe
es
push
fidiv
cmp
dec
out
jne
call
test
pop
inc
push
sbb
lea
cwde
test
adc
rol
mov
enter
bound
jge
sub
mov
adc
aam
loop
mov
add
fisttp
cli
pop
jmp
xchg
loop
cld
enter
cld
inc
cli
xor
sub
inc
and
mov
stos
je
call
enter
pop
pusha
pop
outs
(bad)
sbb
jno
xor
sbb
in
inc
and
je
ins
xor
pop
(bad)
call
arpl
adc
sti
call
sub
(bad)
sub
aas
jp
push
cmc
movs
sub
mov
mov
jno
std
jp
mov
dec
enter
pushf
mov
ins
addr16
jb
in
enter
push
sbb
push
jbe
jmp
fsubrp
inc
or
nop
dec
icebp
int3
and
int3
jae
jecxz
cld
dec
in
or
dec
add
dec
in
mov
ss
loopne
in
mov
fsub
popa
jns
push
xor
jmp
clc
clc
call
fs
push
clc
retf
fcmovu
pop
sbb
aad
xchg
xor
clc
lds
ficom
jge
jb
jne
les
push
mov
and
les
icebp
aam
aas
out
jne
fist
xor
cmp
imul
adc
repnz
data16
jb
add
dec
jnp
push
js
xchg
dec
and
enter
xor
std
lock
jecxz
adc
pop
daa
out
pusha
xor
pop
add
imul
push
aad
jo
xchg
jmp
div
cli
(bad)
mov
call
ret
clc
scas
sbb
jb
fcom
mov
xor
sub
arpl
push
loopne
and
jmp
sub
cld
pushf
js
dec
sub
cmp
sbb
jns
sub
ja
dec
aam
inc
inc
dec
movs
cld
or
cli
in
int3
sub
int3
ds
out
ins
push
pop
aam
dec
and
and
xor
cmp
lods
cwde
mov
mov
call
mul
mov
cmp
retf
in
inc
fmul
cmp
jmp
push
fcomp
inc
in
push
ficom
xor
inc
out
lods
fdivr
push
jbe
(bad)
rcr
adc
in
out
jns
aas
sbb
push
loope
mov
mov
(bad)
mov
in
je
inc
idiv
mov
hlt
jg
aam
(bad)
push
int3
les
inc
push
outs
pop
inc
aam
hlt
pop
adc
test
int3
je
out
mov
xor
call
mov
xchg
push
mov
mov
mov
in
je
arpl
xor
daa
mov
add
push
in
loopne
push
cmp
lock
add
aam
out
mov
push
imul
jb
fadd
rol
push
in
mov
adc
mov
into
jl
jns
or
mov
cmp
popa
xor
add
jecxz
cmp
bound
xor
fisttp
imul
adc
xchg
jnp
mov
add
mov
fcom
cld
jmp
repnz
les
inc
and
int3
push
ds
push
xor
cmps
xor
or
pop
xor
or
test
mov
fidivr
in
loope
mov
loopne
add
fdivr
cmp
sub
pop
int3
in
in
push
sbb
in
loope
inc
fisub
xchg
les
ds
jne
stc
mov
jp
lock
and
in
or
shl
shl
mov
pop
xor
cmp
mov
sti
cmp
mov
mov
jp
pop
sub
ss
xchg
jge
mov
xor
mov
xor
outs
outs
push
sti
data16
and
loope
in
in
in
sub
ret
js
stos
or
jne
int
js
add
sub
scas
mov
jae
dec
sbb
cmp
in
in
pop
adc
inc
bound
mov
jge
sbb
push
push
loope
or
jl
push
in
lock
mov
fisub
sub
dec
sub
sbb
or
xchg
outs
add
jp
icebp
mov
loopne
jl
ficomp
mov
enter
pushf
test
repz
js
xchg
stc
fadd
out
add
mov
sar
dec
or
cmp
push
in
mov
out
ins
pop
xor
addr16
(bad)
pusha
inc
std
dec
add
sbb
fcomp
fs
call
pop
inc
and
push
sbb
jae
in
cmc
push
sbb
inc
fstp
jo
fisttp
or
fnstcw
adc
and
fwait
mov
js
jmp
mov
dec
fcomp
loopne
mov
test
inc
sbb
imul
mov
aad
xor
cmp
mov
jecxz
hlt
or
or
sbb
inc
pop
inc
or
mov
push
pusha
ss
xor
mov
jecxz
sbb
push
pop
adc
push
imul
imul
or
aaa
push
adc
lods
or
in
imul
std
cmp
mov
inc
pop
xor
bound
push
aam
js
add
imul
or
or
and
pop
pop
(bad)
js
loope
lock
dec
mov
adc
aad
push
mov
xor
mov
int3
xchg
loopne
mov
test
mov
add
sbb
test
sub
mov
fs
je
out
mov
mov
adc
jnp
nop
js
std
jo
in
inc
or
mov
fstp
dec
loope
test
js
aaa
out
nop
dec
and
test
dec
mov
js
fdivr
push
dec
das
sbb
mov
rcr
test
js
push
fimul
pushf
(bad)
jp
cmp
sar
inc
movs
push
js
pop
mov
sub
jmp
xor
xchg
shl
sub
ins
adc
fcom
int3
push
daa
(bad)
sbb
push
cld
ret
int3
jb
outs
mov
int3
mov
movs
lods
inc
addr16
sbb
mov
and
cli
nop
sub
fdivr
jl
fistp
inc
push
or
dec
push
lock
int3
hlt
push
repnz
jns
inc
fstp
push
stc
mov
mov
popa
and
mov
cmp
call
dec
mov
add
je
js
jo
fcomp
xlat
xor
(bad)
les
(bad)
push
cmp
jp
arpl
add
pop
sub
jge
sub
inc
add
mov
push
loope
je
aam
push
fcom
sar
cld
inc
outs
push
aaa
mov
sub
(bad)
cmp
ja
lods
enter
jbe
jp
sub
push
and
ja
aam
gs
mov
adc
fiadd
mov
cwde
jge
sub
jne
mov
xor
or
hlt
cmp
in
xor
cmps
js
cs
clc
arpl
inc
pop
xchg
fs
jne
jnp
push
inc
jo
pop
adc
sbb
adc
mov
jl
int3
mov
push
push
fwait
lods
sbb
xchg
dec
add
xor
pop
push
jp
ss
xchg
add
pop
pop
dec
sbb
movs
push
lods
push
pop
fmul
and
ds
jae
cmp
ret
hlt
jmp
add
jl
push
js
in
or
es
jne
mov
or
sub
fcom
call
push
int
rcr
fcom
adc
in
mov
cmp
jp
xor
pushf
mov
jne
xor
les
xchg
out
inc
(bad)
arpl
mov
cmp
cld
dec
jecxz
lods
ficom
xchg
pop
xor
push
xlat
fstp
fs
pop
es
push
int
call
std
in
push
stos
jo
pop
fimul
pop
rcl
pop
sub
jns
(bad)
push
cmp
jl
xor
je
test
shl
aas
shl
mov
repz
mov
fxtract
cmp
mov
adc
in
in
movs
jmp
adc
add
call
dec
fnstenv
fld
cmp
dec
(bad)
sub
and
repz
jmp
push
sub
xchg
std
adc
add
mov
(bad)
pop
ins
pop
dec
fst
bound
push
leave
fs
fdivr
pop
dec
aam
pop
fnstsw
test
ins
push
cmp
fcom
dec
sub
add
aad
ins
jbe
test
hlt
adc
cmps
add
dec
sub
fmul
push
sbb
add
nop
shl
retf
das
fyl2xp1
push
(bad)
jp
fisub
xor
jmp
pop
sbb
mov
je
add
int3
mov
sbb
add
std
adc
rcr
jmp
pop
fdivr
push
rol
shl
iret
mov
frstor
jp
and
bound
and
ss
inc
call
mov
xchg
clc
mov
test
fdiv
clc
outs
test
scas
test
pushaw
icebp
adc
js
jne
js
std
hlt
sub
cmp
jmp
mov
loopne
(bad)
clc
jns
loopne
data16
xor
cld
int3
sub
test
test
cmps
ins
cld
hlt
loop
add
rcl
mov
jnp
mov
or
dec
aam
test
inc
xor
nop
dec
push
rol
nop
push
aad
inc
push
dec
mov
into
je
inc
adc
daa
shl
push
adc
jae
push
call
jnp
les
fsub
jnp
pop
data16
mov
loopne
in
xor
pop
jl
fucomp
dec
imul
clc
test
pushf
cmp
in
pop
xor
js
xor
mov
adc
mov
mov
ret
adc
cs
jnp
ins
ds
cld
loope
inc
(bad)
aam
jne
aad
jl
repnz
(bad)
jp
push
sar
pop
fdiv
std
jo
ror
stos
jne
dec
ror
pop
(bad)
std
dec
sub
dec
js
bound
xor
and
icebp
rol
cmp
xchg
in
dec
jne
and
out
in
loopne
jp
je
cs
and
cmp
aad
in
jl
fstp
and
addr16
lods
pop
jo
xor
cli
cwde
xlat
cmp
xor
enter
leave
push
pop
das
inc
dec
fs
aas
push
xor
in
(bad)
popf
xlat
jl
fisubr
imul
mov
aad
or
mov
test
int
mov
jae
pop
dec
xchg
push
jl
mov
aam
and
push
sbb
jp
pop
xor
jge
add
and
jne
js
lock
and
or
pop
mov
fadd
cli
movs
rcr
push
iret
sahf
fwait
loopne
push
(bad)
cmp
aaa
rcr
add
nop
cmp
dec
sar
in
jb
in
pop
jne
push
cwde
sbb
cmp
hlt
int3
mov
shr
sub
test
xchg
fidivr
mov
test
and
and
and
clc
out
xor
cmp
sbb
lock
test
pop
sub
loopne
or
cwde
and
test
(bad)
jne
mov
push
lock
(bad)
shl
jne
sar
jl
retf
jl
mov
retf
push
xor
xor
je
pop
push
call
jne
sub
lock
cmp
or
fs
test
js
(bad)
fdivr
inc
iret
fisttp
dec
retf
adc
je
enter
rcr
cmp
call
cwde
fs
in
mov
lods
push
jbe
or
dec
mov
inc
movs
pop
jl
popf
imul
fs
fcomp
push
in
es
cwde
mov
or
and
jl
jl
jmp
das
dec
ins
push
or
cwde
pop
and
dec
jl
adc
shl
stos
xor
mov
nop
or
in
sbb
lods
inc
sar
dec
into
in
or
nop
retf
jl
lea
push
jo
mov
ins
and
clc
pop
adc
mov
mov
gs
or
push
mov
test
xchg
push
js
dec
jnp
mov
jl
jl
ss
push
iret
or
int3
js
or
fs
cmp
cmp
std
sub
js
add
push
imul
xor
adc
pop
clc
push
fcomp
pop
sar
jbe
outs
pop
adc
cmc
xor
sbb
rcl
jl
dec
jo
dec
ins
inc
pop
enter
dec
retf
in
jl
inc
sar
ins
xor
test
pop
popf
pop
js
hlt
jmp
add
aam
shl
adc
jl
jg
mov
fs
cmp
loopne
fdiv
jl
shl
or
jo
jl
clc
push
retf
sahf
push
cmp
sub
pop
cmp
fdiv
pop
ss
or
jbe
sbb
into
add
add
dec
mov
pushf
jns
sar
xor
movs
inc
inc
pop
xchg
jl
dec
mov
bound
je
xor
test
retf
jge
ss
cmc
sbb
inc
(bad)
in
xor
shl
cmp
xchg
jmp
movs
dec
sbb
cwde
or
pop
jbe
lods
xor
lods
cwde
shr
pushf
in
lock
pushf
(bad)
iret
cwde
je
js
retf
mov
push
jl
cld
or
shl
fwait
je
xchg
pop
je
add
mov
add
mov
cmp
xlat
cmp
mov
push
jl
cmp
imul
js
cmp
int
in
jl
push
aad
pop
dec
pop
js
dec
into
(bad)
pop
sbb
dec
cmp
jno
sub
movs
sbb
cmp
js
xor
mov
cmp
mov
cmp
jne
les
stos
popf
add
adc
icebp
mov
or
xchg
jo
je
int3
jl
cmp
loope
mov
retfw
xchg
dec
cwde
sbb
test
jl
mov
rcr
pop
enter
retf
add
js
cmp
rcr
pop
push
js
cli
out
mov
and
lahf
jne
ins
int3
cmp
in
cmp
(bad)
xor
leave
add
push
into
ins
dec
adc
dec
enter
(bad)
js
inc
or
jmp
adc
cdq
hlt
push
sbb
test
add
dec
jo
jne
(bad)
pusha
test
daa
lock
add
or
out
push
in
in
clc
cmp
std
or
cmps
or
leave
sub
pushf
mov
pop
push
fnstenv
adc
das
jmp
nop
cmp
leave
loopne
das
sar
pop
cdq
shl
push
cmp
push
ins
sbb
jp
xor
and
cli
clc
retf
xchg
sbb
(bad)
je
dec
ret
mov
lea
fild
movs
js
adc
xor
xor
call
push
adc
lock
fstp
ins
je
mov
out
pop
mov
pop
cli
out
shl
sub
jge
sub
rol
jo
js
stc
fs
clc
aad
pusha
(bad)
adc
int3
out
cmp
mov
inc
js
jns
dec
push
sbb
push
and
test
and
push
ds
jl
leave
mov
int
js
enter
ror
retf
js
je
ins
inc
leave
std
jo
(bad)
jmp
and
or
cmp
adc
inc
mov
js
data16
push
ins
mov
xor
movs
imul
pop
inc
ss
push
mov
mov
push
in
adc
cld
xlat
fldenv
add
leave
mov
sar
ins
push
idiv
mov
test
fwait
(bad)
xor
shr
pop
jo
mov
push
sub
ss
jl
hlt
xor
cmp
(bad)
mov
stos
int3
sbb
pop
cmc
int3
pushf
push
jns
cmp
jns
dec
leave
ja
dec
ret
jg
push
pop
jo
pushf
test
mov
retf
cmp
mov
xor
adc
or
or
and
push
push
fsubr
xor
iret
les
dec
cmp
jl
mov
mov
loopne
cli
jl
xchg
ss
push
retf
cwde
inc
or
or
pop
les
or
lock
lea
mov
mov
jmp
push
fadd
js
jae
popa
sub
je
dec
push
or
cld
(bad)
pop
cmp
push
sbb
lods
call
sbb
ss
ret
fisttp
je
and
dec
(bad)
jp
adc
js
(bad)
in
je
and
mov
sar
sbb
mov
mov
pop
jp
je
sub
jns
add
inc
repz
push
cli
rcr
sbb
jl
ja
push
dec
mov
hlt
outs
jae
dec
push
repnz
dec
jne
and
sbb
rcr
es
cmp
sub
and
lods
mov
push
js
je
dec
xor
mov
mov
dec
ss
clc
cli
shl
jae
push
je
add
add
js
call
pusha
dec
jne
not
mov
mov
js
add
call
js
xchg
iret
fucomp
ss
(bad)
xor
ret
pop
cmp
sbb
push
ret
(bad)
jge
cmp
push
out
je
sub
or
mov
jl
mov
js
sbb
data16
push
fs
add
in
outs
jo
lods
push
mov
sub
lock
fdivr
add
dec
loopne
adc
sub
sbb
ins
push
dec
lock
xor
lock
xchg
sub
cld
inc
and
mov
mov
hlt
pop
adc
sbb
aam
cwde
pop
ins
cmp
outs
pop
jbe
(bad)
loope
cmp
aaa
xor
movs
inc
inc
and
dec
sub
dec
and
jl
lds
xor
xor
ss
cmp
fs
aaa
shr
jo
leave
dec
js
jmp
mov
jp
mov
clc
pop
add
cmp
mov
ffreep
mov
lea
call
in
or
outs
push
cmp
mov
retf
cmps
xor
mov
ret
ins
cwde
and
and
push
push
pop
fs
test
les
mov
sub
jne
sar
pop
daa
lods
lock
fidiv
js
cmp
das
sub
sbb
int3
dec
mov
shl
ins
and
jne
and
push
add
pop
adc
xor
inc
movs
stc
dec
rol
js
lds
inc
les
je
jmp
js
jmp
enter
mov
fdiv
push
dec
inc
gs
(bad)
cs
cmp
les
and
in
pusha
dec
push
or
loopne
push
sub
jae
int
jb
dec
inc
arpl
and
lods
sub
cld
pop
shr
in
pop
pop
add
xlat
jl
shl
inc
jp
out
int
test
nop
add
dec
je
xor
or
push
aam
jmp
jl
loope
push
pop
xor
or
inc
sbb
cli
push
lds
mov
mov
add
inc
shr
pop
inc
ret
inc
jne
addr16
(bad)
pusha
hlt
psrld
fsqrt
push
in
sbb
retf
fs
jmp
push
sbb
test
fs
cmc
sub
fdiv
js
jns
lock
jbe
pop
gs
in
(bad)
ins
adc
outs
xor
test
jl
xor
sbb
mov
enter
sbb
pop
pop
aad
test
mov
add
and
mov
hlt
ret
(bad)
mov
dec
sbb
cdq
ins
or
into
imul
mov
mov
add
in
std
mov
xor
dec
adc
xor
inc
push
mov
mov
add
fld
inc
ret
sub
xor
jge
sbb
or
out
lock
shl
aas
int3
pop
cmp
fs
adc
aas
mov
pusha
sbb
call
pop
and
std
int3
dec
push
add
and
and
bound
sub
and
sahf
or
sub
dec
mul
sti
xor
out
mov
out
cwde
xor
add
jge
jp
cmp
pushf
hlt
aad
clc
mov
xchg
and
cmps
movs
sub
sahf
inc
sbb
and
adc
ret
js
jb
jbe
cmc
jge
jnp
aas
cli
addr16
sbb
cmp
jl
inc
mov
cmp
mov
mov
ins
dec
xor
cmps
push
add
xor
xor
(bad)
lea
ins
inc
cmp
mov
sub
fwait
loopne
and
xor
outs
je
shr
push
in
cli
push
push
xor
(bad)
fs
and
adc
jne
clc
int3
call
loop
add
adc
(bad)
dec
and
dec
sbb
and
(bad)
iret
or
fdiv
xor
in
push
jb
in
mov
push
in
jns
lock
pop
sub
sbb
or
push
xor
cld
pop
cs
cmp
pop
data16
mov
inc
xor
inc
pop
pushf
cmp
mov
and
mov
ins
(bad)
xor
adc
mov
dec
cmp
ds
lock
ret
sbb
mov
sbb
ret
sbb
dec
push
loope
test
adc
loopne
and
rcl
hlt
loop
xor
mov
jmp
mov
fwait
mov
(bad)
js
test
dec
loopne
mov
and
mov
cld
adc
push
sbb
cmps
sbb
dec
js
lock
pushf
push
sub
mov
je
cmp
enter
jg
inc
sub
ds
ins
dec
cmp
jo
movs
pop
cmp
popf
neg
mov
push
push
mov
pop
adc
sti
call
mov
mov
pop
cld
not
jo
cmc
je
dec
repnz
stc
fisub
fxsave
mov
push
sub
(bad)
stc
and
pop
and
mov
sbb
pop
(bad)
jp
pop
inc
(bad)
and
retf
mov
mov
pop
inc
mov
outs
pop
cmp
jp
adc
mov
std
lock
cmp
ds
ja
mov
outs
mov
inc
icebp
sub
push
push
jae
fs
cmp
ret
int3
clc
inc
ret
cmp
jmp
pop
xor
les
in
jns
test
jl
mov
sti
and
rcr
pop
neg
and
in
dec
push
std
cld
jo
icebp
pushf
dec
xor
(bad)
je
pop
clc
int3
sub
and
int3
arpl
mov
outs
in
stc
jae
int3
sub
ss
(bad)
cmp
nop
rcl
xchg
sub
push
pop
mov
pop
mov
cmc
fs
es
pushf
or
pop
sub
push
enter
pop
and
jae
push
cmc
js
sub
jb
ins
jno
in
jnp
cld
push
aaa
in
push
aam
lock
mov
movs
mov
je
mov
and
mov
pop
dec
or
sub
out
cwde
jae
cmp
dec
addr16
pop
adc
ja
jnp
add
retf
mov
sbb
outs
dec
pushf
pop
or
mov
(bad)
cli
pusha
xor
sbb
and
xor
(bad)
jp
pop
sub
xchg
les
enter
adc
test
jne
add
fsub
fsub
xor
bsf
jl
es
xor
shl
push
sub
(bad)
dec
or
push
pop
push
jns
ins
mov
cmp
rcl
mov
mov
push
pop
inc
cmp
js
sbb
cmp
aas
mov
cmp
xor
or
or
scas
add
sbb
movs
cld
xchg
clc
out
and
mov
(bad)
jl
popa
dec
gs
fadd
ficom
cwde
and
dec
movs
mov
sub
mov
mov
hlt
inc
sar
xchg
das
retf
mov
out
(bad)
jle
int3
(bad)
xor
cmp
cli
mov
sbb
sbb
pop
pop
cmp
and
push
jns
cmp
mov
cld
jno
ret
push
in
je
lds
hlt
or
fsubr
ret
mov
jne
ret
js
aaa
mov
sub
mov
fadd
es
xor
push
icebp
push
xchg
jne
cmp
scas
or
test
nop
xchg
xor
cld
inc
jo
mov
pushf
jl
iret
ret
xchg
mov
es
mov
and
xor
mov
pop
into
mov
jae
add
jp
test
or
xchg
dec
loope
ja
leave
je
test
mov
xchg
pop
add
inc
add
movs
sti
xor
ret
test
sbb
popf
pushf
push
inc
clc
xor
push
inc
jmp
mov
xchg
xor
inc
adc
pop
sbb
fdiv
test
je
mov
push
sbb
mov
push
cmp
pushf
jne
jo
cld
or
jb
sbb
hlt
sbb
sbb
imul
mov
cwde
mov
xchg
shr
mov
int3
pop
imul
mov
sar
jl
test
xchg
fs
jmp
imul
xor
std
sub
(bad)
pop
and
xor
sbb
lds
or
pop
cmp
in
ins
xor
cmc
sub
push
test
and
int3
and
mov
(bad)
sbb
adc
stos
add
mov
sbb
mov
adc
sub
jbe
mov
push
xor
popf
clc
fs
mov
in
int
cmc
cmc
sbb
fst
sti
xor
out
imul
call
mov
or
xchg
lods
cwde
pop
xchg
jb
jae
push
mov
cdq
lds
call
ja
lds
xchg
in
or
and
gs
push
sbb
cmp
hlt
fsub
cs
popa
and
das
inc
dec
xor
les
pop
sub
cs
sar
push
push
cmp
ins
dec
inc
repz
mov
pusha
jp
mov
pop
mov
in
movs
and
sbb
sub
cmp
adc
in
ins
bound
hlt
mov
xor
push
dec
inc
lods
jne
mov
jb
(bad)
jg
repz
cmps
add
lea
adc
ins
pushf
xor
mov
loopne
cmp
mov
je
mov
push
mov
push
and
xchg
ja
in
int3
mov
in
inc
sub
inc
jns
pop
movs
int3
lods
pop
xor
jnp
dec
icebp
and
loope
cmp
scas
jnp
mov
inc
clc
add
and
xor
jnp
enter
mov
and
sbb
xchg
and
sbb
mov
fstp
ins
pop
retf
cld
push
xchg
call
mov
sub
push
cmp
enter
ficom
push
cmp
push
inc
mov
mov
jmp
sub
nop
cld
fimul
push
mov
popa
sbb
imul
je
push
jne
mov
aaa
icebp
sar
pusha
cs
jmp
ins
push
xchg
rcl
sar
loope
mov
pop
imul
jo
lock
push
aad
mov
mov
test
mov
(bad)
mov
movs
adc
inc
cli
loope
jne
sub
inc
cmps
pop
stc
jae
lods
adc
add
adc
(bad)
imul
fst
hlt
movs
pusha
sbb
jne
dec
in
cld
ror
add
addr16
retf
mov
push
lods
test
mov
std
mov
ins
and
pusha
sbb
popf
test
adc
push
sar
int
clc
mov
idiv
sub
ds
outs
inc
cmc
(bad)
cli
xor
ret
lods
les
lods
inc
push
mov
mov
adc
inc
push
dec
test
fs
je
pop
mov
popf
ret
cmp
xor
ins
pop
push
pop
mov
jge
push
pusha
retf
retf
dec
lods
and
sub
mov
jl
scas
js
fidiv
cmps
lock
xor
sub
dec
lock
jo
js
cmp
loopne
rol
fcom
mov
aam
mov
sub
cmp
es
test
mov
nop
sar
mov
dec
sub
je
xchg
pop
push
sbb
mov
and
xchg
popa
dec
cmp
mov
cwde
push
sbb
or
dec
push
les
push
pop
sti
jae
dec
pushf
mov
data16
cld
add
sub
jns
mov
inc
je
jl
test
js
push
ins
into
jne
sub
je
enter
push
fwait
and
pop
push
xor
mov
or
xchg
test
and
jns
cli
fld
xor
adc
cli
les
mov
push
and
fs
mov
stos
inc
and
call
and
or
mov
sbb
mov
dec
adc
imul
dec
sbb
scas
test
mov
push
test
and
jns
push
popf
outs
adc
out
test
mov
mov
pusha
xchg
(bad)
push
stos
push
ins
mov
pusha
cmp
and
pop
imul
sar
pop
js
rol
pop
push
pop
call
test
xor
cwde
jae
in
rcr
je
jns
shl
add
stos
clc
pushf
std
jmp
sti
push
jne
nop
xor
js
add
std
mov
in
aaa
adc
push
sbb
xchg
dec
pop
xor
jnp
dec
sbb
jo
retf
clc
push
sub
jbe
dec
cmc
pushf
push
xchg
ins
jmp
js
je
mov
adc
xchg
add
int3
loopne
sbb
sbb
or
ja
inc
jl
aas
sbb
jae
ja
movs
inc
ret
gs
call
mov
xor
push
test
js
pusha
jmp
cmp
ja
js
sub
dec
sbb
nop
(bad)
aam
loopne
jns
retf
(bad)
stc
icebp
mov
ret
fwait
test
mov
js
test
mov
sbb
pusha
dec
je
sub
mov
jbe
sbb
jne
sub
clc
loop
lods
dec
(bad)
cdq
mov
lahf
in
(bad)
call
retf
pop
fs
sub
sub
dec
outs
cmp
sar
data16
dec
add
hlt
and
mov
int3
js
fsubr
add
clc
add
loop
or
js
push
loop
sbb
pop
sub
mov
pop
jmp
jo
and
adc
js
jge
jns
mov
ja
jae
jo
push
mov
xchg
pop
mov
sbb
xor
pop
fdivr
jo
data16
pop
adc
pop
jnp
push
jns
outs
gs
jp
test
mov
push
ins
pushf
xchg
dec
shl
jnp
test
jne
fucomi
js
push
or
mov
jne
pusha
jae
js
test
jne
ins
jb
jp
clc
imul
pop
imul
push
cmp
pop
cmp
call
pop
mov
out
js
jo
jmp
jne
sar
jne
pop
adc
js
dec
movs
enter
jne
adc
js
outs
les
xor
dec
ins
xor
cmp
cli
and
in
pushf
cmp
adc
cmp
pusha
push
inc
inc
popa
pop
and
pusha
add
jo
mov
pop
ja
loopne
rcr
add
jmp
call
add
in
add
xchg
dec
bound
fs
je
daa
mov
add
pop
sub
(bad)
pop
dec
fs
xor
mov
jb
xor
inc
and
mov
bound
jo
int
cmp
jns
add
fisttp
jbe
add
jl
mov
add
test
cmc
imul
dec
mov
mov
xchg
inc
push
dec
(bad)
inc
aad
addr16
popf
dec
xor
push
sub
inc
push
dec
nop
(bad)
jo
bound
jns
jne
mov
and
jl
push
jg
jp
jne
or
shr
dec
imul
push
jno
pop
sub
outs
cs
dec
sti
lods
outs
push
out
cli
inc
pop
scas
jp
fdivr
sar
jnp
jmp
jmp
clc
push
jb
pop
outs
outs
stos
mov
dec
push
dec
ds
call
cwde
pop
jl
push
jl
js
gs
and
je
sub
sbb
outs
xor
loope
sub
mov
sub
xchg
jmp
stc
nop
test
imul
add
jge
xchg
inc
xor
mov
call
jo
xor
js
js
mov
sub
jge
retf
test
imul
sub
int3
dec
and
mov
xor
inc
cs
jbe
das
into
je
cmp
pop
ds
xor
dec
sub
pop
icebp
fwait
mov
leave
cli
test
adc
pop
and
sub
imul
sbb
push
pop
sub
js
add
shl
mov
clc
ret
outs
xor
in
arpl
outs
cmp
aam
inc
add
push
mov
lds
fdiv
xor
jo
mov
dec
leave
xor
loopne
xor
jnp
mov
js
repz
mov
test
outs
loop
ja
push
cld
jno
test
or
push
in
and
stc
mov
pusha
lods
ins
push
ins
outs
mov
outs
or
inc
sbb
inc
inc
nop
jo
inc
mov
xor
jl
sub
pushf
pop
dec
icebp
sahf
mov
cwde
pop
imul
xchg
inc
push
mov
fs
out
cmp
aas
into
mov
fisttp
je
or
sub
inc
jmp
je
jno
ins
cld
outs
into
jne
jnp
pop
mov
pop
and
push
adc
jne
jmp
aam
push
ja
cmp
cmp
clc
cli
fs
sbb
and
add
push
dec
out
movs
pop
inc
fild
inc
repnz
mov
dec
push
es
mov
mov
pop
dec
mov
xor
loopne
ror
jnp
push
cmp
in
js
popa
sbb
ins
pop
je
jl
mov
mov
jo
nop
(bad)
aaa
sbb
hlt
pop
js
inc
push
push
push
jae
call
outs
dec
js
fs
xchg
jne
idiv
xchg
sbb
loop
je
out
push
std
xchg
pop
jne
test
ins
loope
push
repnz
pop
out
cmp
jle
and
in
xchg
cmp
xchg
fisubr
dec
call
imul
jge
jb
ss
pop
mov
je
ja
je
fsubr
inc
frstor
mov
sub
jo
mov
jne
jns
es
push
cld
jne
sub
xor
out
inc
imul
div
inc
mov
jo
mov
cmp
sti
jl
mov
mov
scas
fsubr
mov
xor
in
or
call
dec
js
push
adc
pop
ds
pop
daa
arpl
rcl
pop
js
sub
and
jo
je
ins
pop
push
jb
pop
fs
mov
sub
test
sbb
or
out
ins
(bad)
jo
inc
mov
push
loopne
jo
leave
jne
cld
jns
lahf
cld
push
nop
sbb
mov
gs
je
in
pop
jne
pop
js
sbb
lea
and
inc
jne
sub
cli
test
clc
fs
inc
pop
pop
ret
pop
add
repz
js
loop
inc
js
or
test
hlt
data16
ja
pop
daa
mov
dec
fmul
push
pop
out
js
add
in
addr16
sar
lods
stos
push
mov
pop
outs
xcrypt-ctr
cmps
pop
lock
inc
mov
neg
or
pusha
pop
dec
in
in
jno
sub
add
fs
sti
nop
inc
push
das
imul
and
push
js
js
hlt
nop
loopne
scas
enter
mov
pop
mov
hlt
add
inc
shl
leave
test
repz
jl
ins
mov
std
gs
call
mov
jnp
and
mov
mov
mov
push
jnp
outs
je
push
mov
imul
mov
int
loopne
js
jl
ins
es
push
jbe
jl
lea
adc
arpl
adc
sti
add
xor
movs
jbe
sbb
fsub
cld
jns
out
pop
jge
in
cdq
js
rcl
mov
dec
jne
loope
push
mov
jns
dec
push
je
jge
arpl
pop
cmp
jo
cld
ja
out
and
push
cmc
dec
jge
and
inc
int3
loopne
pop
xor
jae
idiv
mov
loope
test
push
test
fstp
push
mov
ins
je
jo
mov
imul
or
and
push
movs
cld
jns
mov
data16
jnp
jo
pusha
imul
xchg
idiv
fmul
xor
js
adc
cld
and
cmp
fucom
inc
add
adc
jae
push
in
je
xor
cld
addr16
outs
jae
sub
pusha
fnstcw
xchg
cmp
sub
xor
push
in
jl
js
sbb
cmps
push
sub
xor
pop
dec
ja
jno
pop
jns
sbb
push
jbe
pop
and
inc
add
cdq
adc
add
and
push
test
retf
push
xor
mov
ins
pop
test
and
push
pop
outs
cwde
jo
jb
cmc
mov
mov
aaa
les
fs
clc
mov
mov
mov
fs
ins
fdivr
dec
fisubr
icebp
cdq
clc
or
mov
jae
call
in
mov
movs
or
dec
pop
jmp
jb
ja
out
js
push
mov
jl
je
movs
call
test
mov
pop
pop
dec
js
sbb
jne
(bad)
xor
add
push
fisttp
add
cli
nop
addr16
mov
loopne
stc
cmp
or
push
enter
mov
ins
shl
jo
mov
into
mov
outs
enter
pop
gs
stos
cld
jne
mov
cmp
jnp
mov
mov
nop
jae
mov
push
ss
push
mov
inc
xor
dec
jmp
jns
inc
add
cmp
rcr
and
icebp
mov
in
push
or
and
fsubr
pop
dec
dec
mov
call
inc
jns
les
lods
rcl
ins
push
fsubr
jmp
sbb
push
sbb
xor
mov
sbb
and
cwde
les
pop
in
pop
aaa
jne
cmp
cli
call
or
aam
add
fdiv
xchg
jge
or
cmp
test
sbb
inc
pusha
xor
cwde
imul
jno
cld
ins
enter
sub
xor
push
lods
sar
int
cld
inc
shr
push
mov
sbb
pop
cmp
dec
add
xchg
cmp
jnp
pop
aam
push
and
outs
push
push
mov
sub
inc
cmp
gs
lock
pop
adc
aad
hlt
jbe
xor
(bad)
out
gs
xlat
ins
call
push
test
adc
lods
jp
or
sbb
(bad)
loopne
push
lock
cmp
stc
pushf
sub
sahf
test
mov
sub
pusha
(bad)
enter
push
push
mov
pop
cld
sub
fild
or
push
and
and
push
leave
pop
out
adc
inc
outs
xor
std
je
int
pop
fidivr
lods
mov
dec
pop
fisub
adc
push
int3
push
aaa
out
jns
test
jo
and
lahf
dec
inc
mov
je
addr16
cld
js
(bad)
imul
call
cwde
add
js
jp
ja
ins
jbe
mov
test
jno
inc
pop
jne
in
xchg
push
or
gs
movs
mov
add
mov
dec
cmp
fs
in
in
mov
out
pop
adc
xor
push
loope
in
ret
mov
jne
fisttp
pusha
in
fs
add
xlat
sub
sub
test
shl
mov
cmp
inc
cmp
inc
call
je
out
inc
fs
icebp
xor
(bad)
cli
dec
retf
test
cld
push
clc
(bad)
adc
jl
jmp
in
pop
inc
in
pop
in
jp
and
cmp
dec
xchg
outs
xor
mov
jne
shr
xor
ins
loope
cmp
mov
sbb
arpl
js
jbe
push
mov
outs
adc
test
dec
inc
cli
call
push
hlt
add
cwde
mov
pop
cmc
test
jp
jae
add
pop
jne
sub
cwde
data16
xchg
push
in
jno
adc
and
push
pop
es
cmp
hlt
js
fdivr
test
sbb
and
xor
fstp
aaa
fist
dec
repnz
test
sbb
cld
mov
mov
pushf
push
stos
ins
push
aas
ficom
fnstsw
xor
sub
jae
pop
sbb
push
icebp
xor
jne
cmp
add
adc
enter
js
cmp
mov
jl
jp
jmp
jne
addr16
jl
aam
repz
sub
or
xchg
adc
hlt
mov
mov
and
nop
lea
hlt
lea
jmp
dec
jne
fsub
pop
int3
enter
push
call
adc
mov
xor
push
cmp
inc
int3
ror
dec
sub
mov
jne
xchg
cmc
mov
ins
je
mov
push
mov
pop
ins
mov
and
push
xor
je
repz
pop
cli
cmp
pop
in
sbb
fs
lock
xlat
mov
push
in
add
js
push
gs
rol
xor
cmp
mov
je
mov
and
imul
push
mov
es
scas
rcr
addr16
pusha
sub
sbb
add
js
and
iret
push
xor
cmp
imul
lea
data16
outs
push
mov
loop
cmc
jl
mov
in
xchg
push
int
je
in
mov
sbb
ins
and
fiadd
mov
and
lods
push
xor
mov
jne
test
pop
push
xchg
push
jle
inc
pop
ficomp
rcl
xchg
sbb
sbb
je
js
jo
int3
pop
pop
jmp
xchg
pop
adc
cld
sub
int3
jo
fs
bound
test
cmp
std
mov
ins
dec
js
jl
or
jmp
lods
jae
inc
test
addr16
jmp
push
cmp
ja
pop
mov
loopne
sub
adc
pop
ins
push
sub
shl
outs
imul
je
dec
loopne
jo
out
fadd
in
xor
xchg
div
jmp
sub
or
jmp
and
pop
sub
mov
ss
mov
mov
cmps
call
fstp
inc
cmp
sub
push
fcom
cmp
mov
pusha
xor
in
pop
jge
sub
pop
fdiv
addr16
outs
cld
pop
xchg
push
pop
jo
cli
cmp
retf
sbb
or
pop
add
gs
push
pop
jmp
inc
cmp
nop
cmp
push
or
inc
ins
fsubr
pop
call
pop
push
cmp
popa
xor
jb
or
inc
out
cwde
pop
stos
shr
movs
movs
ins
pusha
sbb
push
arpl
ins
push
lea
cwde
jp
enter
js
add
jbe
sti
je
popa
ss
push
or
call
and
and
jmp
push
or
fsub
imul
mov
push
aaa
dec
mov
in
test
cmp
inc
cmp
sub
mov
cmp
cmp
dec
(bad)
xor
xor
push
in
pop
jnp
and
jno
pop
iret
adc
sub
xor
adc
push
loopne
dec
js
jmp
dec
ins
in
push
and
dec
out
push
jo
mov
xchg
imul
mov
dec
dec
addr16
push
push
mov
daa
out
pop
aam
je
call
test
in
int3
pop
out
cmp
enter
mov
and
lock
pop
cs
mov
cli
aad
push
loope
push
pop
jp
push
or
das
ret
xor
daa
(bad)
js
aam
dec
jge
dec
neg
sbb
sar
mov
lods
mov
js
sub
add
cli
and
cli
test
cmp
push
ret
inc
mov
inc
pop
dec
je
shr
inc
jno
stos
sub
or
dec
cmp
popa
retf
push
into
movs
lods
js
sti
xchg
mov
(bad)
jle
sbb
mov
xor
js
ja
adc
jmp
xor
repz
jb
add
jns
push
and
jge
cmp
dec
dec
pop
xor
dec
mov
enter
loopne
cmc
push
ins
cmp
js
int3
fcomp
int3
sub
je
addr16
nop
js
push
mov
dec
inc
mov
add
sub
sbb
xchg
add
fistp
jmp
pop
inc
in
pushf
outs
std
stos
icebp
sub
sub
inc
jae
loop
ins
gs
ds
test
xor
inc
adc
cld
leave
inc
rol
ins
pop
dec
mov
adc
pop
mov
pop
jns
outs
outs
std
xor
aam
pushf
cmp
inc
mov
inc
xor
hlt
pop
hlt
loope
movs
sbb
pop
icebp
cwde
clc
lods
xor
loopne
and
jo
pop
push
jns
add
and
sahf
xchg
inc
push
test
cmp
jnp
addr16
out
bound
in
movs
lods
pop
xor
push
pop
out
rcr
mov
je
and
and
pusha
scas
or
jp
adc
pop
ss
and
cmp
dec
loopne
push
(bad)
div
add
dec
enter
mul
xchg
je
loopne
je
into
mov
js
int3
xchg
js
push
jbe
sti
je
xor
dec
stos
dec
aas
retf
repnz
adc
mov
dec
sbb
in
sbb
fs
lods
pop
inc
cmp
jmp
mov
push
and
ror
push
dec
not
push
jecxz
ins
jo
(bad)
(bad)
cld
cmp
sub
cld
dec
fsubr
push
fs
mov
nop
xchg
cmp
imul
test
push
sbb
loopne
push
outs
add
xor
inc
stos
xor
repnz
dec
(bad)
cli
in
in
mov
adc
pop
test
dec
xor
cmp
jge
data16
mov
cmp
xor
daa
mov
cmp
dec
aam
dec
mov
pushf
pushf
mov
xor
dec
cmp
iret
cmp
pop
push
dec
inc
mov
cmp
cmp
je
inc
call
ds
and
adc
pop
das
sub
les
hlt
popf
pop
cdq
pop
sbb
arpl
in
jo
mov
mov
pop
and
pop
cmp
xor
jb
imul
push
ds
les
ins
(bad)
aam
lock
sub
lock
test
or
and
xor
out
dec
(bad)
or
ror
cmp
cmp
sbb
jge
clc
xor
pop
mov
popa
imul
in
mov
inc
ins
push
pop
mov
es
dec
retf
xchg
mov
cmp
cs
cmp
sub
stc
push
sub
int3
dec
es
cmp
pop
and
jl
adc
dec
test
jmp
cld
pop
lods
cmp
es
pop
lds
ins
jb
imul
jge
into
jp
std
les
mov
xor
aam
add
pop
cmp
xchg
pop
mov
sbb
and
cld
cmp
mov
mov
aas
mov
push
sbb
push
imul
inc
shl
jl
es
inc
fnstenv
cwde
fs
int3
test
sbb
in
js
fadd
(bad)
aam
jp
jbe
int3
jle
adc
int3
lods
in
fistp
inc
in
clc
fadd
cmp
pop
xor
lock
jmp
sub
enter
inc
pop
and
inc
aas
jmp
sub
xor
gs
lock
int3
mov
retf
sub
xchg
mov
jg
mov
jbe
push
std
aam
bnd
inc
cld
jo
jne
imul
cmp
jne
add
xor
inc
call
enter
retf
and
cmp
lock
sbb
je
int
sbb
fbstp
sub
fdivr
jne
pusha
jnp
xchg
and
pop
mov
jae
jnp
aas
jmp
jo
sub
xor
js
pushf
aam
pop
in
pop
inc
lock
jp
push
adc
mov
test
outs
frstor
mov
and
push
dec
clc
xor
or
mov
ins
mov
iret
(bad)
inc
mov
push
(bad)
cld
inc
jmp
or
enter
xchg
dec
je
dec
sbb
sub
mov
nop
xor
sbb
loop
cmp
xor
in
dec
jno
fsubr
mov
or
xor
fisttp
sub
retf
std
aam
mov
mov
jns
mov
test
jmp
out
jne
aaa
jmp
xor
loop
fs
cmp
sub
xor
js
outs
aam
ins
call
cmp
not
and
call
push
call
jp
inc
jmp
mov
xor
xor
add
jbe
mov
dec
fdivr
xor
in
or
sub
sbb
aad
fdivr
add
or
xor
nop
sub
shl
mov
js
push
ja
xor
aam
and
nop
push
adc
push
xlat
mov
ins
stc
movs
cwde
push
sub
hlt
call
out
je
lock
fnstsw
push
dec
jecxz
pop
fdiv
and
lods
jns
jne
jno
ja
mov
dec
sub
pop
hlt
mov
jo
mov
cmp
xor
xor
push
or
push
js
jbe
aam
outs
jb
fs
ror
fs
gs
je
jns
push
mov
fld
cmp
dec
loop
jp
in
cmp
mov
in
js
fbstp
jne
xor
pusha
and
fst
jp
xchg
adc
inc
nop
fs
rcr
xchg
pusha
push
int3
data16
inc
inc
mov
jbe
ret
push
add
xor
les
mov
and
pop
and
mov
or
sbb
daa
out
xor
mov
sub
mov
call
cmp
sub
clc
outs
adc
sbb
data16
je
iret
jl
shl
jns
inc
repnz
inc
shl
out
adc
lahf
shr
jp
jns
cld
jns
fdiv
aaa
sbb
push
dec
fs
jne
mov
push
adc
push
dec
add
movs
rcl
hlt
pop
pop
push
and
ficomp
push
sar
js
je
popf
or
jb
js
and
rcr
pop
sub
push
jae
aad
pusha
push
iret
ins
ds
inc
add
xor
cmc
aaa
ss
sbb
cmp
jl
clc
lods
xor
lock
into
adc
sbb
or
in
movs
or
sti
jo
stos
dec
sbb
lds
jbe
cmp
out
js
loopne
imul
adc
ja
push
push
jae
push
clc
retf
push
movs
xchg
adc
in
cli
call
sub
jecxz
add
mov
inc
add
push
lock
loopne
jbe
jnp
pop
jmp
sbb
push
xor
ds
push
jne
xor
sub
(bad)
dec
es
push
adc
addr16
pop
(bad)
pop
retf
sar
retf
mov
stc
mov
ins
inc
std
dec
add
xor
inc
imul
nop
pop
cmp
fcomp
aaa
ficom
pop
adc
(bad)
cmp
mov
xor
push
gs
push
lea
cmp
add
jp
and
and
je
cmp
cmps
sub
hlt
jne
mov
push
ret
test
sbb
jge
ficom
js
inc
clc
jbe
adc
and
jo
jnp
sub
nop
imul
mov
add
mov
sbb
into
js
bound
jb
mov
or
inc
div
loop
loopne
mov
sub
cld
ins
xlat
cld
jno
les
push
fdivr
pop
(bad)
pop
popa
aad
in
loopne
pop
add
ins
xor
push
xor
fdivr
sub
sub
hlt
dec
dec
or
js
sub
mov
mov
xor
cmp
push
fistp
gs
cli
dec
bound
retf
mov
sbb
push
xchg
hlt
imul
jno
jl
jbe
cmps
push
pop
mov
outs
fndisi(8087
in
sbb
add
sbb
stc
sbb
cs
inc
cwde
stos
jmp
ja
outs
outs
retf
ins
jns
(bad)
movs
aaa
pusha
mov
jb
dec
inc
jns
xchg
addr16
jb
sub
push
outs
call
imul
int3
pop
adc
push
dec
push
fsubr
inc
retf
xor
shl
ins
jo
js
ins
ret
jb
loopne
jae
mov
fcomp
pusha
imul
pop
dec
daa
mov
pop
sub
push
fst
or
in
je
add
inc
push
or
les
faddp
ins
and
sub
sbb
pusha
xor
sub
sbb
mov
sbb
or
std
add
nop
unpckhps
sbb
cmp
sub
outs
inc
push
test
push
xchg
cmp
ror
xchg
pop
mov
push
aam
push
push
xor
js
pusha
push
jp
pop
popf
stos
and
movs
mov
sbb
bound
push
sub
xor
inc
mov
and
jl
sti
mov
push
xchg
js
cld
add
shl
jns
push
test
je
in
popa
std
loopne
dec
int3
jmp
push
repnz
gs
(bad)
and
cmp
jbe
out
cmp
inc
push
cmc
in
push
dec
pop
sti
in
dec
jmp
retf
push
std
pusha
hlt
popf
push
mov
movs
jp
std
push
outs
bound
cmp
pop
in
pop
add
dec
pop
mov
in
imul
cmp
mov
mov
in
jne
jo
or
js
and
add
enter
adc
js
js
push
xor
les
cmp
jne
icebp
jle
data16
lods
xor
xchg
dec
add
(bad)
js
sub
cwde
jmp
popa
mov
ja
fsubr
push
bound
xor
lea
sbb
fsub
test
xor
sub
mov
dec
sub
and
pop
dec
or
jo
dec
add
jb
and
jnp
in
dec
fbstp
and
adc
or
push
sub
push
call
xchg
sbb
fadd
in
fcom
pushf
inc
call
jmp
push
jl
aaa
add
jae
lea
cmc
and
int3
rcr
arpl
and
mov
ja
push
ins
and
mov
pushf
jmp
or
pop
gs
sbb
ins
arpl
gs
int3
addr16
ins
jne
popaw
mov
jl
mov
push
cld
push
xor
cdq
test
call
dec
sbb
addr16
jno
mov
mov
fdivp
sub
mov
fild
jge
xchg
or
jo
not
dec
cmp
data16
push
sub
fadd
push
js
arpl
pusha
pop
inc
hlt
and
cmp
jl
pop
retf
jp
ja
aas
sbb
inc
pop
pop
jp
xor
(bad)
or
dec
dec
jl
imul
push
jge
dec
fisub
imul
xor
nop
xchg
test
hlt
fsubr
leave
and
js
push
in
js
test
push
adc
aam
pop
out
das
sbb
sbb
hlt
or
dec
dec
adc
mov
je
mov
fs
in
das
in
js
fistp
fdivr
ins
push
shr
pushf
or
or
pop
popa
mov
jno
in
push
push
push
xchg
cmp
add
cld
and
call
imul
inc
jne
sbb
js
test
pushf
sub
stc
mov
pop
mov
fistp
js
jnp
jo
(bad)
push
je
fstp
pop
hlt
test
js
jns
push
add
and
mov
jbe
xchg
and
or
xor
jne
xor
nop
push
mov
cld
pop
(bad)
push
(bad)
std
(bad)
stc
pop
pop
movs
imul
push
es
sbb
addr16
idiv
jns
push
std
int3
popa
rol
jne
mov
pushf
mov
mov
mov
int
or
dec
sbb
aam
imul
mov
out
jo
in
in
in
pusha
pop
and
dec
sub
lock
cmp
push
and
js
outs
das
stos
int3
inc
popf
bound
les
jo
xor
xchg
dec
jl
in
jnp
jp
aam
mov
hlt
cs
push
movs
jl
shl
dec
lds
mov
pop
add
aam
div
cmp
arpl
xor
dec
pop
daa
jmp
push
mov
push
ds
adc
jl
dec
sbb
xor
push
dec
cld
int3
dec
dec
adc
mov
call
jns
or
cmp
push
dec
fs
dec
out
jns
cld
push
or
int3
push
clc
mov
dec
pusha
sub
jo
aas
cmp
xor
jno
not
stos
and
sbb
jae
inc
neg
nop
and
inc
xor
test
push
pop
dec
push
push
test
outs
aam
push
das
jnp
fsub
inc
stos
js
xchg
movs
xor
jbe
sub
add
lock
(bad)
pop
inc
ja
fs
inc
cmps
xor
je
xchg
dec
dec
subps
pop
adc
sbb
not
jmp
addr16
mov
and
js
dec
mov
repz
sti
ror
gs
jbe
imul
les
mov
jbe
je
jnp
cwde
hlt
push
int
dec
adc
inc
push
enter
in
pusha
loop
dec
popa
loope
dec
gs
adc
cwde
jo
cmc
xchg
dec
es
inc
sbb
fcom
cmps
xchg
mov
mov
je
cwde
jne
lods
ds
cmp
or
jnp
jl
jle
xchg
cmps
dec
adc
jne
retf
xchg
nop
dec
je
pop
sub
push
jb
out
aaa
dec
gs
(bad)
jmp
dec
movs
adc
adc
pslld
push
sub
sbb
mov
nop
xor
sahf
and
xor
mov
adc
pushf
jb
call
dec
shl
data16
je
outs
test
mov
xor
sar
lods
xchg
push
into
adc
stc
sub
nop
dec
pop
in
xor
and
jmp
sub
and
mov
js
jmp
and
or
dec
jno
cmp
mov
cs
mov
stos
mov
add
sar
pop
or
and
mov
xchg
shl
jne
hlt
lods
shl
dec
dec
ja
jge
sub
push
and
fnstenv
scas
clc
je
jp
in
mov
out
popa
fcom
les
aam
lods
dec
bound
gs
test
cld
fs
mov
gs
(bad)
jp
mov
push
(bad)
mov
fistp
push
pop
sub
test
cmp
and
adc
cmp
sub
push
inc
mov
jge
pop
scas
lods
jmp
jl
les
data16
inc
or
cwde
ret
shl
js
and
ja
push
ins
mov
inc
in
push
fdivr
jo
enter
cmp
ins
sub
(bad)
push
icebp
test
and
and
cli
les
mov
ins
mov
sub
push
je
fwait
push
adc
sub
push
in
and
push
sub
pusha
daa
(bad)
je
in
jns
pop
push
in
aas
push
jne
sbb
jl
loope
or
push
and
je
jne
sub
mov
add
fdiv
or
fs
or
loop
mov
jmp
xor
jp
jne
clc
test
jbe
ja
ins
in
pusha
out
push
pop
test
lock
(bad)
xor
sti
or
call
sub
sub
cli
lock
push
jnp
sub
aad
fs
jns
rcr
(bad)
bound
inc
mov
push
pop
cs
test
add
push
mov
jne
push
jnp
jne
push
inc
ret
mov
stos
mov
dec
mov
push
push
gs
lods
or
mov
aam
mov
je
jnp
sbb
pop
or
push
inc
jo
int3
xor
int3
sbb
ins
pop
sbb
or
sub
addr16
aam
mov
shl
aad
xchg
mov
add
push
fs
xor
pop
sbb
pop
xor
mov
js
pushf
jl
out
xor
pop
dec
std
cld
test
loop
xor
inc
call
out
xchg
jne
mov
add
pop
out
mov
loope
in
xor
mov
push
gs
pop
dec
sbb
das
popf
push
test
scas
jbe
xchg
mov
jnp
jl
xor
pop
ja
data16
pushf
cmp
jmp
jmp
test
add
imul
(bad)
fsubr
int
xchg
out
cmp
inc
loope
in
fs
icebp
pushf
xor
stc
mov
rol
(bad)
sub
cld
ds
mov
xor
clc
dec
out
rcr
xor
pop
jo
sub
and
cli
test
in
jp
add
dec
dec
mov
jns
jae
into
sub
cmp
es
js
jne
data16
mov
and
outs
js
push
jb
int3
inc
shl
dec
dec
(bad)
sub
not
cdq
(bad)
cmp
push
and
jne
loop
movs
push
fidivr
inc
leave
out
dec
pop
ror
mov
sub
xor
cld
inc
sbb
or
push
fs
and
cmp
or
adc
je
jmp
lods
loopne
js
jl
mov
js
ins
je
xor
sub
js
mov
sbb
push
cmp
push
sbb
js
mov
jns
inc
cmc
stos
imul
movs
push
and
push
js
(bad)
scas
push
add
dec
in
fmul
xor
test
cs
hlt
add
pop
pop
and
and
in
push
pusha
add
retf
leave
jl
adc
xor
fadd
adc
nop
push
loopne
ins
in
xchg
dec
out
push
mov
mov
and
pushf
(bad)
pushf
jecxz
jne
aad
cmp
jp
retf
gs
xor
fs
xor
js
push
adc
cwde
sub
clc
cmc
push
in
movs
jge
xor
fsubr
or
(bad)
int3
push
add
mov
jl
or
leave
adc
loope
js
inc
lods
outs
jg
arpl
outs
nop
push
cmp
sbb
and
pop
jle
addr16
push
out
mov
in
sub
jge
in
adc
push
dec
push
jo
cmp
and
retf
in
inc
je
js
cmps
fstp
jae
push
iret
sub
shl
leave
sbb
test
popf
daa
js
inc
cmp
sbb
ins
push
lahf
ins
je
pop
cmp
push
and
jo
inc
fdiv
sbb
push
pop
inc
iret
dec
je
shl
pop
cmc
cli
inc
das
fnstcw
ins
sub
popa
pop
jae
fwait
mov
in
in
ja
icebp
js
sub
shl
ins
je
pop
and
stos
ins
imul
bound
int3
inc
push
mov
mov
jne
dec
sti
je
dec
jno
push
shl
jne
xor
movs
lods
push
and
adc
popf
sub
icebp
in
(bad)
(bad)
idiv
jbe
enter
sub
rcr
jbe
js
lock
lock
fdiv
test
scas
ja
pop
cli
addr16
mov
jno
cmc
je
and
jl
out
cmp
into
test
jecxz
dec
push
cmp
nop
dec
outs
and
inc
test
dec
outs
pop
bound
imul
sub
(bad)
fadd
push
dec
mov
jp
cmps
xchg
sbb
int
imul
arpl
push
cmc
push
add
mov
cs
sub
add
xor
dec
inc
rol
push
ins
push
xor
or
outs
(bad)
fsubr
xor
jnp
pop
lods
pop
jge
or
and
pop
cmp
jne
cmp
pop
jne
jne
jbe
jb
inc
js
js
data16
push
mov
dec
dec
dec
mov
jae
les
pop
push
imul
addr16
leave
loopne
sbb
dec
sbb
xor
data16
pop
imul
les
inc
js
add
xor
jl
outs
call
je
jo
mov
adc
cmc
jne
rol
(bad)
cld
jns
in
cmc
push
dec
sub
cld
jnp
out
and
adc
fdiv
(bad)
in
push
pusha
jne
int
outs
jge
dec
scas
or
jp
sub
pop
pop
add
sbb
in
call
push
js
jl
mov
and
enter
iret
push
mov
jbe
cwde
mov
jb
jge
xchg
add
xor
inc
movs
xchg
sub
ins
clc
sub
ror
add
cld
dec
xlat
pushf
add
dec
dec
jg
or
das
aam
fcom
push
mov
mov
xchg
sbb
out
push
xor
or
(bad)
xor
ins
xchg
les
jo
pop
hlt
fxch
hlt
sub
out
push
or
not
sbb
jp
sbb
fnstsw
mov
jg
adc
retf
call
cli
lods
scas
jl
push
fwait
test
lahf
test
jecxz
test
jo
push
shl
pusha
mov
fisub
pop
fs
inc
inc
jbe
fstp
adc
push
mov
cmc
repz
icebp
lock
push
es
push
and
das
lea
cmp
mov
jmp
pop
add
cmp
or
cwde
jmp
push
mov
push
sub
mov
push
and
fcomi
mov
nop
jno
xor
sub
push
fnstcw
inc
mov
loop
inc
fsubr
lods
pop
pop
push
jno
xchg
cmp
js
mov
pusha
ror
or
aam
js
cmp
hlt
clc
ins
fisttp
xchg
adc
hlt
mov
jno
jp
jae
jp
jne
outs
in
push
je
jno
ins
gs
jo
jne
retf
mov
gs
fs
int3
push
push
push
jnp
gs
stos
mov
enter
loope
pusha
dec
pop
jns
addr16
hlt
(bad)
push
sbb
or
pusha
add
lsl
or
sti
cmp
add
(bad)
neg
add
in
mov
or
movaps
adc
cld
pop
es
bnd
pop
clc
mov
daa
push
mov
test
ds
or
sbb
or
adc
outs
dec
sub
stc
add
fwait
cld
xchg
cmp
dec
or
push
cmovo
xor
fs
inc
push
adc
mov
fs
and
lahf
les
in
xor
hlt
mov
sub
add
add
push
std
mov
je
inc
pop
add
jne
cmp
fdivr
lea
loopne
js
pop
sub
jne
cmp
adc
fsubr
mov
outs
jp
jl
repz
mov
jae
outs
enter
rcr
xchg
pop
xchg
ins
fcomip
test
dec
ficomp
mov
xchg
push
add
add
imul
pushf
outs
lock
lahf
sti
or
scas
pushf
or
lods
fdiv
add
retf
clc
out
repnz
and
out
xor
hlt
cmc
cmp
pop
ds
jmp
jbe
sub
adc
das
test
cmp
in
repnz
push
lock
dec
jmp
call
sbb
int3
lock
fnsave
fcomp
fadd
fadd
add
xchg
xor
dec
(bad)
jne
mov
xchg
inc
fldenv
stc
retf
nop
sahf
sbb
pop
cmp
push
mov
cmp
les
add
in
(bad)
js
cmc
int
add
(bad)
icebp
pop
jne
xchg
inc
cmp
(bad)
out
ja
jecxz
test
push
test
jp
or
mov
fs
mov
hlt
sub
mov
ds
out
add
mov
daa
in
adc
cmc
dec
pop
in
dec
pop
js
mov
repnz
mov
int3
jne
repz
push
cld
jnp
pop
add
popf
or
pop
sub
scas
sahf
sbb
cli
stos
mov
mov
lods
jmp
fwait
or
imul
aam
pop
loopne
in
jne
mov
adc
add
ins
push
xchg
cld
or
jnp
jl
sbb
fsubr
hlt
mov
cld
repnz
je
xchg
xor
div
sub
out
cwde
sti
fld
cdq
js
adc
or
or
movs
push
inc
jns
out
jmp
cld
mul
mov
js
add
mov
jl
mov
sub
push
push
out
pushf
retf
fst
out
pop
pop
fdivr
out
or
lock
add
and
or
fmul
sub
je
sbb
not
xchg
push
pop
cli
js
fcomp
inc
sub
dec
lock
dec
pusha
jmp
mov
loopne
je
mov
pop
test
mov
jl
xchg
mov
mov
test
fdivr
xchg
sub
cmp
xchg
lahf
je
sbb
test
jl
sahf
cld
idiv
xor
adc
adc
hlt
push
or
loope
cld
add
ja
sti
les
js
fsub
sub
pop
push
pop
out
pop
ja
mov
add
push
push
in
je
out
push
fucomp
adc
cld
xor
add
in
cmp
sub
pop
dec
add
int3
in
jmp
popf
jns
stc
xchg
sub
add
std
xchg
std
clc
push
repnz
js
call
push
jl
daa
pusha
shr
sar
or
jl
jmp
xor
rcl
je
loope
je
add
mov
cli
in
adc
and
cld
sub
cld
add
mov
js
mov
cmp
xor
jl
sti
add
jl
repz
pop
shr
add
xlat
test
loop
in
pop
mov
pop
jl
dec
scas
or
xchg
call
jl
jmp
in
dec
pop
jl
sbb
adc
mov
mov
or
sbb
adc
mov
dec
lods
jbe
xchg
je
cli
fwait
cld
push
call
jne
add
call
nop
fsubr
adc
jnp
jo
or
pusha
xor
rcl
test
add
add
je
js
fs
js
mov
cmp
test
mov
adc
sbb
fs
adc
mov
imul
and
mov
ins
vunpcklps
cdq
test
adc
cmp
jl
ins
mov
jmp
sub
clc
push
or
xor
nop
jo
adc
adc
lods
xchg
hlt
cdq
sti
call
je
add
js
cmp
add
stos
inc
sbb
ins
mov
cmp
jl
js
pushf
xor
inc
sbb
sub
mov
(bad)
sti
xchg
cmc
fiadd
xchg
jmp
jle
loop
adc
clc
and
add
in
pop
mov
sbb
xor
shl
fs
hlt
add
in
rcl
imul
imul
das
cwde
inc
sti
ret
pushf
retf
jmp
in
ds
jne
xchg
jecxz
jl
mov
shl
and
pusha
sbb
pop
push
add
or
sbb
mov
mov
push
ins
and
sbb
(bad)
mov
test
data16
add
in
js
inc
je
imul
jne
xchg
mov
cmp
jl
sub
hlt
ja
fnstenv
repnz
jmp
or
call
out
xchg
xor
popf
jo
mov
adc
out
and
cli
stc
and
cmp
pop
adc
enter
jnp
out
(bad)
pushf
iret
jmp
div
add
mov
icebp
jl
fdivr
pop
sti
mov
sub
add
jl
lods
mov
test
in
pusha
mov
repz
sbb
sub
xlat
dec
mov
(bad)
adc
les
dec
or
inc
or
push
je
hlt
js
sti
xchg
pusha
jl
or
add
sbb
pop
cmc
xchg
or
xchg
leave
or
dec
sub
je
in
int3
xor
jl
test
in
mov
xor
push
in
sti
call
jns
aam
jb
push
movs
loopne
vmwrite
sbb
adc
xor
stos
call
add
push
add
inc
popa
xchg
pop
push
fdivr
mov
int3
cli
cwde
adc
sti
xchg
mov
dec
sub
push
int
push
les
clc
push
xor
and
sti
out
add
js
test
dec
adc
jl
sbb
cmc
ds
jecxz
cmc
mov
clc
mov
loopne
mov
fidivr
add
jmp
pop
pop
push
stc
inc
push
add
dec
cmp
adc
ja
loopne
jl
xchg
jl
xchg
test
jl
cmp
clc
xchg
mov
call
pop
lock
sub
xor
idiv
and
test
adc
je
ins
add
cld
rol
and
pushf
jo
or
add
jl
add
pop
aas
out
dec
xor
jecxz
cli
lods
xor
mov
fisttp
dec
loop
ss
or
fdivrp
retf
add
xor
or
scas
lods
sbb
adc
fs
add
adc
xor
cmp
js
rol
xor
icebp
stos
pop
push
push
push
daa
cdq
cwde
dec
dec
mov
jbe
jl
enter
pop
jl
or
or
add
fsubr
loop
pop
out
dec
hlt
mov
inc
sub
cmps
loopne
add
or
shl
jmp
ins
or
dec
and
ins
es
test
adc
xor
fs
lock
cmp
shr
ins
pop
cmps
(bad)
fidiv
iret
jmp
inc
lock
push
ins
adc
js
jmp
jo
add
sbb
test
adc
or
and
sub
sbb
add
dec
in
cld
sar
test
rcr
sbb
jmp
xchg
push
and
cmp
sbb
jl
aad
sub
sub
lock
cwde
call
in
cld
out
mov
hlt
jno
or
sbb
inc
sbb
add
ds
outs
inc
xor
out
inc
shl
lock
pop
xor
mov
(bad)
pop
add
in
sub
xor
imul
mov
mov
pop
neg
aas
fdiv
xor
ins
or
imul
jl
sbb
fisttp
or
sub
xor
sub
adc
je
and
in
je
pop
pop
jmp
mov
sahf
or
je
xchg
cmc
test
xor
aam
mov
sub
mov
ds
and
hlt
stos
fcmovnb
xor
les
xor
jl
xchg
mov
xchg
daa
xor
jne
cmp
out
and
cld
clc
int
fcomp
idiv
test
xor
in
push
pop
pop
sbb
inc
repz
pop
push
jmp
test
test
daa
sub
into
neg
and
xchg
cmps
mov
test
es
je
push
clc
and
fs
cmp
or
pop
dec
sbb
jns
sub
mov
push
sub
xchg
fidiv
and
cwde
je
popf
jmp
mov
pop
test
addr16
das
ins
icebp
or
out
int3
pop
repnz
push
clc
popf
mov
add
push
fdiv
cmp
lock
call
sbb
mov
inc
jl
cdq
xor
stos
add
in
cmps
lds
pop
xor
pusha
push
and
test
add
stos
or
(bad)
je
adc
inc
mov
pop
pushf
ja
adc
scas
mov
std
fs
add
mov
daa
sbb
cmp
pop
mul
fs
std
lods
pusha
and
movs
inc
push
adc
sub
out
fsub
push
sbb
repnz
dec
jecxz
fdivr
pop
dec
in
add
jne
or
psubq
sub
dec
sbb
test
mov
mov
jo
test
inc
shl
adc
fnstsw
jo
enter
loop
jae
ret
lods
js
mov
in
xchg
ins
cmc
mov
ins
ficomp
push
xor
push
(bad)
movs
fld
out
xor
mov
pop
pop
xchg
inc
retf
call
movs
imul
and
mov
adc
mov
fisub
add
or
mov
add
jmp
int
add
pushf
push
es
jo
lds
push
int
sub
xor
sti
pop
pop
cmps
mov
test
jmp
cmp
and
sbb
rcr
clc
aas
xor
mov
sbb
les
or
(bad)
push
add
or
push
out
sub
arpl
or
addr16
sbb
(bad)
cmc
je
push
add
addr16
jp
aaa
push
mov
test
mov
push
sbb
int
and
fs
pushf
test
nop
mov
lds
scas
jp
sub
push
sub
int
je
retf
jo
mov
mov
shl
ret
sbb
icebp
and
dec
inc
add
lea
cmc
jmp
xchg
push
cwde
xor
test
xchg
loopne
or
ins
add
lods
gs
dec
cmp
loopne
xor
test
sti
rol
cmc
clc
clc
or
jmp
sub
add
mov
ins
push
std
adc
inc
add
aam
ret
in
scas
sti
sbb
out
ins
and
call
cmp
jbe
cs
inc
es
mov
test
inc
sbb
pop
mov
sub
add
dec
ret
int3
or
dec
sbb
pop
push
pop
cdq
add
cld
in
pop
or
xchg
gs
fs
add
js
adc
mov
add
retf
movs
call
adc
jp
sbb
loope
mov
push
out
jle
push
or
and
pop
adc
inc
jne
or
sbb
(bad)
lock
xor
fdiv
test
adc
cld
test
xor
les
pop
je
sub
lock
mov
sbb
adc
pushf
cmp
adc
and
push
cmp
dec
sub
push
aad
mov
dec
ds
pop
push
in
cmp
sbb
jns
and
js
ss
jo
add
xor
and
rol
pop
add
sbb
push
hlt
push
lods
inc
pusha
aam
inc
ins
adc
fs
dec
fsubr
or
mov
adc
fsub
xchg
sti
aam
adc
aam
and
cli
mov
or
test
cmp
test
fldcw
adc
xchg
add
jl
mul
mov
cmp
jbe
pop
aam
sub
push
pop
outs
je
push
les
adc
jbe
xor
mov
and
lods
or
xor
push
xchg
clc
dec
sub
or
mov
sar
mov
jp
dec
sub
pusha
and
in
adc
nop
jae
cmp
adc
mov
in
and
cmp
cmp
xor
mov
je
in
dec
inc
lds
ds
mov
mov
rol
fs
je
mov
je
inc
xlat
clc
js
cmp
mov
sub
js
cmp
jge
mov
adc
in
pop
adc
enter
jns
and
xchg
sar
jmp
mov
dec
dec
sar
fcom
or
inc
adc
cmp
sbb
push
movs
xchg
sar
ds
pop
inc
out
cwde
cmp
daa
adc
(bad)
add
pop
outs
xor
jb
into
pushf
xlat
jle
cmp
pop
hlt
jae
imul
mov
rcr
fs
inc
xlat
mov
dec
mov
jns
inc
int3
jp
aas
retf
mov
push
dec
xor
inc
push
mov
fs
mov
push
(bad)
je
arpl
jl
push
mov
out
les
loopne
jno
push
push
pop
adc
sti
add
mov
cmp
mov
cmp
push
or
lea
ins
sbb
les
in
(bad)
loopne
adc
ret
xchg
sbb
pop
mov
stc
(bad)
scas
in
push
mov
dec
push
fldcw
or
mov
inc
jno
mov
aas
mov
enter
(bad)
cmp
shl
sub
movs
orps
add
int3
push
aaa
cmp
call
es
pop
jmp
inc
xor
mov
(bad)
fdivr
fdivr
sbb
jecxz
je
adc
div
mov
push
(bad)
fdiv
dec
xor
add
sub
hlt
cmp
pop
xor
test
pop
dec
mov
mov
xchg
cmp
inc
js
es
ret
test
and
les
push
jbe
hlt
or
dec
je
xchg
pusha
add
add
mov
fcomp
and
jmp
enter
pop
test
(bad)
sbb
aaa
sbb
pop
mov
in
stc
mov
cmc
std
mov
clc
cld
mov
jne
pop
jge
inc
and
lock
in
in
(bad)
sbb
mov
in
xor
xor
je
dec
and
pop
es
int3
pop
cmp
scas
fs
xor
inc
mov
std
aam
and
jmp
jae
push
fisttp
xor
sub
cs
push
or
dec
bound
je
cli
cwde
inc
mov
pop
add
inc
pop
or
mov
and
push
cmp
pop
add
jns
inc
and
sbb
cdq
(bad)
(bad)
lahf
out
out
mov
pushf
fdivrp
mov
je
add
repnz
mov
int3
je
sbb
adc
jae
lock
js
xchg
jo
outs
outs
fsubr
(bad)
fucomp
psubb
icebp
std
push
loop
cmps
add
xor
jo
sti
les
sbb
es
aam
idiv
mov
les
sbb
js
inc
sbb
enter
out
cli
sbb
pushf
dec
sub
xor
and
dec
gs
push
pop
pop
sbb
movs
addr16
cmp
je
aaa
mov
jno
sub
cli
mov
js
les
adc
pop
in
mov
adc
mov
cld
dec
dec
test
and
and
nop
pop
sub
add
imul
lock
aad
fnsetpm(287
fucompp
sbb
fucomp
add
pop
jecxz
fs
jmp
loop
aam
xchg
(bad)
fucomi
sahf
mov
das
xchg
clc
jo
in
cli
je
(bad)
int3
fs
sbb
cmc
sub
cld
clc
int3
stc
or
and
mul
xchg
pop
sub
sub
sbb
daa
jns
cmps
jns
sub
cld
push
pop
adc
mov
arpl
out
mov
sbb
imul
inc
pop
and
sbb
inc
sub
xchg
bound
push
sub
mov
ss
and
fdiv
loopne
test
push
push
(bad)
mov
mov
mov
imul
cld
push
add
dec
adc
push
fld
mov
je
out
sbb
les
std
and
pop
cmp
add
and
or
js
hlt
cld
jo
std
aas
loope
sbb
pop
dec
repnz
in
sbb
pushf
fsubr
repz
pop
push
xchg
(bad)
jmp
ins
inc
test
or
je
sbb
xor
cmp
test
inc
(bad)
inc
(bad)
jns
inc
les
ss
and
nop
gs
mov
sub
jns
jo
call
je
dec
cld
cmp
scas
jo
lods
je
adc
xor
push
cli
sub
in
push
cld
in
mov
dec
mov
pop
fstp
out
test
mov
dec
popf
int3
pop
fisubr
push
inc
addr16
cli
adc
(bad)
nop
ss
pop
cmp
hlt
jo
ror
cs
cli
adc
dec
inc
mov
repnz
or
ja
movntps
ror
push
mov
push
xor
in
add
sub
shl
mov
pop
jmp
push
xor
jno
js
mov
jl
pop
push
(bad)
out
mov
enter
in
neg
mov
out
jge
adc
adc
mov
adc
mov
jns
add
jl
cli
mov
adc
(bad)
(bad)
aad
pop
mov
fdivr
aam
int
inc
or
lock
fs
sets
adc
bnd
dec
cmp
rcr
je
fnstsw
fnstcw
out
in
mov
popa
repz
sar
stos
push
das
xor
sub
rol
xor
rol
dec
hlt
fbld
jno
or
pop
and
and
std
adc
cli
out
adc
pop
(bad)
stc
pop
fmul
in
mov
rol
aam
inc
jns
lock
dec
cli
movs
outs
xchg
or
(bad)
xor
cmc
jl
push
fs
cmp
iret
jmp
inc
in
sbb
or
in
aam
push
pop
sub
sti
in
or
or
in
jo
add
add
add
xor
js
adc
jns
mov
mov
cmp
or
in
dec
stos
fsub
js
test
adc
fs
(bad)
cmp
jmp
popf
dec
ins
sar
lods
adc
pop
cmp
push
adc
adc
int3
fs
or
rcr
rcr
(bad)
mov
and
loope
and
pop
dec
mov
lock
dec
xor
lea
push
adc
pop
xchg
jae
push
and
cld
aam
repz
f2xm1
in
jo
retf
loop
jae
jmp
cli
or
adc
cmc
sbb
cmc
cmp
push
dec
(bad)
cmp
data16
(bad)
push
sbb
cmp
adc
in
xor
lods
leave
adc
and
std
sbb
scas
push
add
sbb
daa
pushf
gs
js
aas
jns
pop
stos
jae
popw
cli
jo
scas
cmp
fldenv
test
jmp
lods
jbe
dec
mov
push
jo
fldcw
idiv
jae
std
xchg
inc
test
mov
fidiv
jp
or
sbb
fistp
add
cmp
push
sub
int3
fsubr
in
xor
xchg
push
in
mov
(bad)
fimul
iret
ds
or
mov
call
(bad)
mov
test
xor
fmul
in
retf
lods
jo
outs
mov
pushf
popf
stos
iret
repnz
xchg
cld
lods
test
sbb
xor
not
mov
mov
xchg
sub
pop
add
mov
dec
nop
loopne
arpl
pop
pushf
aad
mov
nop
dec
push
test
push
lods
fdivr
push
shl
js
dec
scas
jmp
push
inc
sbb
ins
inc
scas
ja
xor
push
sbb
jb
les
pop
(bad)
cmc
call
jl
in
sub
pop
mov
dec
cmp
sar
pop
mov
or
mov
jl
and
fdiv
sub
shl
inc
test
xchg
popf
sub
mov
les
stos
into
jns
cmps
rol
loope
(bad)
cmp
jne
fwait
je
repnz
lock
or
test
cli
adc
stc
adc
repz
test
add
pop
lock
cmc
js
push
clc
mov
sub
out
inc
jmp
add
out
dec
jae
cmp
or
iret
mov
les
mov
dec
mov
aam
sbb
mov
sub
inc
sbb
dec
fmul
aas
scas
jp
pop
xor
sub
dec
xor
outs
pop
pop
les
pop
lods
mov
adc
fdiv
xor
push
out
jb
or
sub
call
mov
in
aad
xchg
and
and
mov
xchg
sbb
or
mov
mov
inc
mov
jp
ss
xchg
sub
test
pop
mov
jp
mov
out
in
pop
mov
cmps
cdq
jne
lods
sti
xchg
les
xchg
or
leave
xor
lods
pop
adc
jae
sbb
inc
(bad)
xchg
cmp
je
jmp
mov
iret
mov
push
rcr
jbe
je
sbb
cld
popa
or
je
or
ins
xor
push
sar
push
idiv
mov
cmp
pop
movs
xor
lock
jmp
xor
jl
xor
out
push
aam
push
repz
mov
dec
pop
sbb
shr
les
les
cld
or
fwait
dec
pop
test
fwait
mov
jbe
movs
inc
xor
sub
xor
ins
shl
xchg
clc
push
cwde
mov
hlt
mov
out
cmp
adc
fsubrp
fmul
jmp
jl
xor
enter
push
mov
fcmovb
fadd
push
stos
mov
js
sti
sbb
je
sbb
std
mov
arpl
sub
addr16
adc
mov
mov
sbb
inc
loope
and
ins
dec
add
or
(bad)
push
or
sti
jge
fmul
fucomip
or
dec
int
jne
mov
sahf
out
jmp
xor
push
(bad)
call
push
jecxz
fdiv
in
inc
mov
add
and
add
or
sub
inc
mov
inc
fwait
test
leave
sub
ins
xor
jne
and
or
sub
test
js
mov
xchg
mov
pop
mov
and
cmc
adc
aaa
clc
pushf
sbb
jo
and
xchg
xor
les
in
inc
push
jbe
imul
cld
rcl
push
jg
cwde
add
mov
inc
mov
clc
jae
fsubp
dec
data16
inc
daa
or
dec
sub
or
mov
push
and
cwde
push
(bad)
dec
xor
sar
addr16
sbb
ja
sub
test
mov
(bad)
jp
sub
push
dec
push
les
jmp
sbb
cmps
in
ret
pusha
sub
xor
sub
mov
adc
and
ja
inc
dec
scas
mov
push
mov
ret
mov
pop
and
add
(bad)
sub
xlat
and
xor
jl
js
inc
sub
js
push
sbb
sub
add
std
fld
test
cmp
popf
cwde
xor
mov
les
std
js
add
je
out
fs
ins
push
push
mov
dec
mov
lods
(bad)
movs
push
dec
sub
dec
out
jns
push
fidivr
cmp
cli
cwde
mov
inc
mov
cmp
mov
xchg
sbb
inc
fisub
inc
test
and
mov
mov
pushf
pop
adc
mov
in
es
or
call
pushf
daa
cmp
mov
test
ins
mov
add
xchg
jnp
fld
jp
xchg
cwde
push
cmp
js
inc
xchg
inc
and
cmp
add
push
rcr
stos
aam
popf
nop
dec
enter
js
dec
pushf
les
jns
push
add
pop
push
cmps
pop
aaa
test
push
jmp
add
ins
and
rcr
pop
jne
aad
je
imul
lds
xor
jle
pusha
cmp
js
das
movs
imul
xchg
sub
xor
pop
cld
es
out
pop
clc
(bad)
mov
pushf
aam
sbb
jb
sbb
in
adc
aas
mov
jmp
sub
je
or
in
jl
daa
mov
jmp
arpl
test
fsub
xor
jae
lock
clc
out
movs
dec
ss
in
idiv
shl
pop
shl
mov
in
push
xor
je
test
in
jo
inc
mov
sub
imul
jne
out
fs
dec
repnz
push
imul
inc
je
loope
fs
neg
add
ins
je
jmp
jae
in
pop
bound
repnz
mov
push
fst
mov
xor
add
outs
enter
nop
out
ja
xabort
std
jo
sub
in
push
mov
ss
xor
jl
xchg
and
mov
test
adc
cs
jbe
add
mov
(bad)
push
jl
cmp
xor
xor
loopne
sbb
xor
clc
dec
sub
or
and
test
cmp
clc
ins
data16
js
shl
mov
lods
pushf
push
lods
test
pushf
pop
and
jo
rcr
je
in
data16
movs
and
inc
inc
inc
push
ret
cmp
hlt
jnp
or
add
push
jmp
push
test
jp
inc
retf
cmp
je
adc
enter
(bad)
idiv
mov
int3
fs
sar
js
neg
jge
cmc
push
sub
mov
lea
and
test
dec
xor
jge
(bad)
sub
jbe
or
les
xor
je
mov
cmp
adc
mov
and
mov
sbb
int
cmps
pushf
and
int3
je
daa
ins
dec
sub
pop
mov
jp
je
and
int3
enter
mov
jne
scas
test
and
mov
push
push
cwde
push
push
sar
cli
shr
cwde
xor
movs
and
es
cmp
inc
loopne
jno
clc
mov
aam
xchg
and
movs
jbe
cmps
fs
sbb
lods
or
je
xlat
cli
test
hlt
add
int3
jmp
in
sbb
xchg
pop
jl
retf
xchg
sahf
mov
test
jne
sar
jge
or
mov
js
ss
adc
mov
jge
or
cli
dec
enter
int3
or
mov
ins
add
lock
jns
sub
pop
ins
je
cmp
pop
sar
pushf
js
daa
in
push
or
push
or
push
test
mov
les
outs
mov
call
leave
mov
test
mov
pop
pusha
dec
fsubr
lods
dec
inc
dec
lods
lock
mov
xor
imul
adc
loopne
js
cld
les
xchg
call
jns
scas
mov
mov
test
push
cli
mov
out
rol
lods
sub
jl
int
push
outs
imul
js
sub
jp
or
xor
jp
aam
cmp
shl
cld
fild
in
movs
push
in
or
xor
cmp
popf
pop
sub
dec
xor
int3
xchg
and
shr
sti
hlt
inc
or
dec
xor
je
cli
jge
or
cld
stc
push
icebp
mov
inc
cwde
test
rcl
es
push
test
les
fs
push
xor
push
es
pop
cli
test
cli
mov
das
enter
dec
js
or
js
xchg
icebp
sub
sar
fiadd
jmp
push
shl
push
cmp
sub
mov
add
cmp
xor
mov
ja
retf
mov
(bad)
in
adc
ins
xor
cwde
jo
jmp
je
int3
rcr
hlt
xchg
jns
add
test
add
pop
dec
xor
jae
adc
sbb
cmp
in
push
gs
cmp
repz
mov
ins
xor
and
inc
cld
mov
aaa
loopne
cwde
push
push
(bad)
test
cmps
sbb
push
sbb
or
adc
jecxz
in
dec
fcom
or
fisubr
mov
and
sbb
jl
enter
push
or
shl
fmul
add
stc
test
pop
cmp
out
scas
pop
or
mov
mov
es
mov
add
in
or
add
and
push
adc
fsubp
fstp
retf
scas
mov
ins
and
lods
add
and
push
pop
les
and
js
inc
popf
push
and
push
and
clc
jmp
mov
mov
push
add
cwde
imul
ret
lods
adc
and
out
push
and
add
xchg
jns
adc
mov
nop
frstor
adc
mov
or
lock
xor
push
add
adc
push
repz
xchg
add
xor
repz
shl
mov
in
xchg
sub
cmp
cwde
pop
rol
mov
fwait
push
out
mov
jg
sub
pop
xor
add
stc
(bad)
int
shl
fsubr
adc
clc
bound
cld
lock
iret
cmps
les
jns
mov
push
sub
shl
add
xchg
or
and
js
xlat
fs
mov
les
std
inc
ds
jp
pop
xlat
pushf
outs
lock
inc
xor
push
nop
jne
cmp
fs
cmps
add
mov
add
push
mov
shl
mov
int3
xor
pop
jle
movq
xchg
or
addr16
push
pop
jo
jns
and
xchg
sub
push
jbe
jl
gs
pop
js
sahf
scas
mov
push
and
jne
sbb
cld
xlat
jecxz
dec
jo
fadd
les
rcr
scas
sub
ins
adc
sbb
daa
push
cld
fcom
clc
push
push
sbb
and
popf
xor
clc
imul
push
inc
and
fs
gs
cmps
jg
pushf
pusha
inc
push
mov
mov
add
push
adc
fs
mov
imul
sbb
aas
dec
add
pop
out
xor
lea
sar
ret
cmc
jp
pop
mov
mov
mov
push
cmp
fdivr
test
in
pop
mov
aaa
inc
push
mov
add
mov
mov
mov
icebp
sub
mov
fcomp
mov
cmps
sub
inc
lods
mov
sub
mov
mov
push
or
inc
inc
mov
and
push
cmp
add
mov
les
ss
mov
mov
pop
inc
scas
xor
cmp
stos
lock
lods
pop
adc
add
mov
pop
jo
in
push
xlat
fidiv
jae
fsubr
sbb
sti
jns
nop
fwait
xor
push
test
adc
js
jl
push
cs
rcl
js
js
mov
adc
xchg
je
in
jo
test
xchg
fdivr
rcl
int3
add
in
mov
add
jnp
adc
pushf
push
shr
pusha
es
jne
mov
jg
and
pop
rol
idiv
sbb
push
les
add
dec
add
sub
frstor
daa
or
dec
cli
xchg
lods
sbb
push
jle
cmp
movs
cmp
sub
scas
jne
lock
into
in
pop
dec
es
js
aaa
cs
in
stc
jp
xchg
push
fsub
enter
sbb
jl
push
cwde
pop
mov
lods
jne
pop
rol
test
sub
(bad)
jp
jo
add
mov
lods
push
xor
jae
push
cli
fsubr
stos
pushf
fadd
in
movs
int3
mov
nop
push
sub
xor
test
sub
adc
idiv
retf
ins
clc
div
enter
test
mov
ins
cmp
int3
cwde
pop
inc
sub
jo
cs
sub
xchg
push
xor
pushf
jo
neg
aam
les
inc
mov
cmp
xor
pop
pusha
xchg
mov
sub
mov
pop
xchg
and
jl
or
loope
psraw
fst
aaa
pop
bound
or
ins
mov
add
in
jmp
call
mov
inc
and
mov
outs
lods
cmp
and
in
(bad)
fadd
enter
cmc
leave
push
jo
mov
call
xchg
inc
pop
cld
call
adc
and
(bad)
jno
sbb
mov
xor
sbb
inc
inc
test
mov
mov
nop
mov
fcom
jl
pop
push
pop
and
add
xor
sub
jne
aas
sub
fs
ja
iret
lds
inc
dec
inc
pop
enter
sbb
pop
pushf
cmp
js
loope
pushf
push
clc
fdiv
dec
mov
push
push
jbe
sbb
dec
mov
jo
shr
addr16
and
pushf
and
ds
add
pop
nop
out
and
out
and
daa
sti
pusha
cmp
inc
fsub
sub
xchg
icebp
push
test
test
loopne
adc
int3
xor
mov
test
push
and
cmp
adc
retf
push
pop
cmp
nop
mov
test
in
jp
das
xor
call
sub
psubw
push
jns
retf
add
call
fmul
xor
jl
jo
test
mov
in
loopne
xor
pusha
dec
or
or
je
sbb
(bad)
adc
xor
std
xor
adc
mov
xchg
mov
xor
add
sub
daa
jl
pop
fs
lds
push
sahf
lods
push
jne
sbb
movs
and
pop
cmp
repnz
sub
movs
push
xor
jne
push
jns
cmc
shl
outs
mov
mov
inc
test
sbb
sub
sbb
cli
push
cmp
push
jns
aad
jne
pop
adc
push
mov
inc
jl
(bad)
jl
cmp
test
mov
out
jmp
xchg
and
inc
adc
and
push
push
mov
mov
sar
mov
cmp
das
inc
data16
push
push
outs
mov
fidiv
mul
jmp
pop
mov
adc
add
sti
mov
fcomp
(bad)
and
cli
sbb
xchg
js
and
mov
nop
cmp
cmp
push
fcom
jp
and
mov
sub
xor
xlat
lods
adc
pop
adc
sub
mov
data16
cmp
call
cmps
ds
outs
mov
(bad)
out
ret
stos
mov
cwde
mov
retf
mov
fs
xchg
mov
add
popf
xor
adc
mov
test
xor
movs
xchg
test
jmp
cwde
adc
js
adc
push
or
mov
pop
jae
mov
out
xor
call
sub
xor
adc
cmp
ins
shl
or
xor
xchg
loop
push
xchg
push
icebp
xchg
add
add
mov
movs
fiadd
mov
sahf
ret
lock
js
test
xor
and
js
ins
adc
push
push
test
sub
dec
pop
nop
fmul
jp
shl
sub
js
jecxz
pop
int3
mov
je
movs
clc
jecxz
push
rcr
xchg
adc
fstp
jecxz
es
call
xor
shl
fxch
lods
popa
sub
mov
jl
repnz
clc
or
mov
idiv
repz
ja
mov
dec
mov
or
jge
jl
ins
or
adc
js
inc
loopne
inc
pop
sub
pusha
xor
das
dec
shl
cwde
push
lods
jb
in
jge
inc
jl
sub
popa
js
jnp
lds
stos
iret
test
adc
or
fnstcw
fs
xchg
dec
jbe
sub
jp
je
mov
jne
add
(bad)
xor
fbld
out
in
push
or
fisttp
cld
mov
popf
out
aam
add
fisubr
sub
jo
jno
enter
mov
cmp
(bad)
clc
pusha
sub
inc
outs
js
jl
inc
js
(bad)
outs
call
cs
adc
pop
daa
sub
les
ror
fsubr
pusha
stos
mov
and
xrelease
iret
or
dec
lods
js
sub
jl
fst
jp
xchg
fild
push
clc
xchg
jle
mov
jne
retf
xor
dec
les
dec
div
inc
ror
cs
inc
inc
inc
rol
loope
mov
push
push
(bad)
push
cdq
jg
lods
push
fadd
cs
jl
sub
xor
xor
test
movs
inc
and
adc
jle
aam
rcr
push
stos
add
xor
push
or
aam
xchg
add
sub
rcr
xor
jo
mov
xchg
retf
jl
sub
lahf
xchg
ficom
push
push
xor
pop
pushf
mov
fisttp
jne
movs
push
xchg
js
fisubr
ror
rol
es
push
jo
out
push
lock
xchg
hlt
cmp
hlt
jle
cmp
push
sbb
test
ss
in
test
repnz
sub
lods
jge
test
ss
hlt
jle
mov
lds
sar
adc
dec
cmp
je
call
jp
adc
outs
jp
enter
je
push
sbb
push
(bad)
mov
(bad)
aaa
adc
xor
or
xor
push
sbb
xchg
lods
sbb
shr
jecxz
cmp
push
fcom
dec
cmp
dec
xor
pop
aam
outs
mov
mov
test
pushf
ror
push
pusha
push
xor
and
dec
mov
ret
dec
mov
cmp
addr16
fwait
xchg
(bad)
inc
and
xlat
and
mov
iret
jl
sar
push
adc
js
pop
pop
mov
imul
or
nop
repz
cmp
xchg
pop
jl
fadd
or
mov
jg
push
mov
jno
mov
mulps
push
jl
mov
add
cmp
xchg
jle
hlt
xchg
jp
cmps
iret
jl
push
gs
pusha
lock
pop
cwde
push
pop
(bad)
(bad)
cli
div
loope
in
test
loopne
mov
dec
test
fiadd
jl
test
shl
retf
movs
add
pop
mov
popa
inc
test
mov
push
or
or
ret
xchg
add
movs
cmps
(bad)
jp
mov
fnstcw
jge
and
jne
test
cld
cli
fwait
mov
int
retf
(bad)
jmp
in
ins
push
ret
mov
xchg
enter
push
rcl
test
sub
xchg
xchg
pusha
cmp
popf
loopne
jl
(bad)
nop
outs
aam
sar
cmp
popf
sub
xchg
fwait
mov
add
push
push
push
rol
and
adc
and
and
idiv
ds
lea
push
scas
inc
addr16
cmp
daa
jo
lahf
pushf
test
outs
ds
mov
lods
xor
pop
sub
dec
test
mov
mov
push
call
movs
cmps
movs
leave
outs
or
outs
sbb
pop
cmp
outs
repnz
clc
(bad)
ja
aaa
cmp
aam
cmps
jp
nop
call
mov
in
in
sbb
mov
pop
stc
lods
test
mov
fdiv
push
ins
mov
add
dec
cmp
jle
sbb
stos
xor
je
xchg
xchg
or
pop
push
and
push
inc
fsubp
and
mov
(bad)
cmp
pop
cwde
xchg
call
push
or
ins
mov
jl
and
sbb
dec
cmps
jp
and
movlps
pushf
mov
xchg
mov
test
push
fcomp
fdivr
outs
jne
ror
iret
repz
enter
ss
mov
xchg
xchg
cld
mov
out
mov
popf
or
push
int
(bad)
je
mov
into
and
outs
sbb
push
fs
stc
cs
(bad)
in
sti
test
cmps
lods
test
movs
mov
ins
outs
in
mov
(bad)
lods
call
mov
or
sub
data16
adc
sbb
push
mov
sbb
sbb
hlt
mov
mov
(bad)
cwde
inc
sub
xchg
sbb
(bad)
sub
out
and
push
outs
loop
jno
retf
fwait
enter
fadd
mov
pop
aam
cmp
ins
icebp
in
mov
push
test
cmp
call
xchg
in
jmp
js
xchg
xchg
mov
js
hlt
cmc
(bad)
push
sar
aam
enter
sbb
cmps
jp
inc
shl
fstp
add
mov
adc
pushf
mov
gs
mov
xchg
lahf
add
(bad)
int3
push
ja
jbe
imul
jae
pop
jnp
jae
fwait
stos
(bad)
mov
xchg
pop
fs
mov
fs
inc
cmp
sar
(bad)
mov
in
xor
or
lods
pop
jno
gs
pop
mov
add
sub
enter
(bad)
pop
push
jno
mov
sbb
jl
jl
xor
or
sbb
xor
cld
and
push
leave
cmp
lods
test
je
ins
movs
add
aam
jae
in
sub
xchg
stos
sub
shl
pop
hlt
je
pusha
ds
arpl
jp
mov
cmp
lods
xchg
jmp
pop
push
pop
add
js
mov
pop
and
mov
xor
hlt
ins
mov
mov
call
pop
sar
sub
or
mov
mov
xor
iret
sub
sbb
xchg
clc
cmc
or
and
mov
clc
popa
jb
sar
pop
popa
test
ins
test
jp
jmp
push
ins
imul
pop
pushf
mov
and
push
fld
jb
mov
pop
sbb
sbb
leave
xor
and
fadd
enter
dec
jl
ins
fisub
and
loopne
mov
in
push
sub
jns
movs
mov
fld
xor
fdiv
sar
mov
js
ret
push
je
push
les
lea
sub
xchg
popa
push
jp
je
ja
je
pop
sti
mov
jb
ins
cmps
fs
jmp
pop
lods
cld
out
in
xchg
mov
iret
mov
jmp
jmp
adc
xor
jle
lods
add
je
jl
adc
imul
cmps
fild
dec
dec
pop
loopne
or
sub
in
jl
and
aas
inc
(bad)
retf
pop
inc
rol
jne
fwait
mov
dec
arpl
dec
gs
mov
ins
xchg
mov
gs
jbe
pop
lods
test
jo
inc
push
in
jmp
jp
sub
fcom
xor
jl
jne
mov
mov
pop
xchg
and
call
or
inc
or
push
pop
shl
jbe
popa
imul
ins
inc
leave
push
sti
mov
int3
xchg
or
in
pop
xchg
jp
pusha
xchg
push
pusha
imul
stos
mov
xlat
loop
add
add
gs
aad
fcom
mov
aam
mov
int3
dec
mov
jl
xor
enter
sbb
movs
(bad)
fs
add
mov
or
int
push
dec
repz
loopne
or
jae
(bad)
std
lods
adc
outs
add
dec
fcomp
xlat
jo
int3
cwde
pushf
cmp
mov
ja
and
outs
ins
lods
jo
cmc
jecxz
push
sti
pop
or
xchg
sbb
sub
sahf
dec
lods
movs
push
jl
mov
push
test
jl
sbb
sub
js
es
xchg
sbb
lea
test
mov
mov
cld
cmp
xor
js
fs
je
cmp
inc
je
test
dec
ins
mov
sbb
sti
repnz
(bad)
sti
xor
mov
inc
stc
test
pop
mov
cs
sbb
xor
test
imul
dec
jl
daa
jl
ins
shl
inc
aam
in
and
and
fild
mov
je
dec
push
xchg
push
sbb
ins
pop
cmp
ja
pop
leave
lea
mov
dec
lods
popf
mov
add
jne
outs
cli
lods
cmp
sti
fs
mov
cli
popa
lds
je
fwait
loope
and
(bad)
mov
pushf
call
ds
fimul
push
sub
jmp
jns
xchg
iret
outs
inc
jl
pop
xchg
or
js
in
into
call
xor
inc
xor
or
cdq
push
fdivr
(bad)
fcom
js
xchg
xor
mov
hlt
jl
mov
test
(bad)
fadd
ins
ins
bound
inc
addr16
jne
mov
jno
mov
xor
scas
pusha
pop
pop
mov
add
mov
mov
mov
imul
push
jmp
pop
xor
pusha
cs
inc
xchg
sahf
or
cld
mov
jae
xchg
(bad)
xchg
and
in
ss
aam
push
shr
je
cmc
je
and
xor
dec
xor
rol
(bad)
loopne
adc
adc
ret
add
push
adc
ins
ja
jp
scas
nop
jne
push
ins
lea
in
ins
pop
pop
jbe
jo
inc
pushfw
pop
xor
gs
ins
imul
jo
ins
aaa
data16
push
pusha
mov
mov
sar
daa
mov
mov
test
push
jl
cmps
sub
out
mov
xchg
test
clc
comiss
(bad)
fcmove
fucomi
cmp
push
pop
int3
jl
popa
imul
ins
jae
jl
ja
xchg
je
cld
jl
ins
mov
mov
mov
and
pushf
mov
dec
outs
dec
gs
push
imul
pop
mov
inc
stos
(bad)
dec
adc
repz
call
jl
dec
add
add
sbb
fild
push
js
xor
aam
jmp
add
aad
xchg
xor
imul
xchg
pop
xor
pusha
push
jnp
test
mov
pop
lock
or
ins
push
jno
xor
dec
push
jne
lods
jnp
popa
int
mov
jg
mov
les
sub
pop
adc
in
adc
pop
mov
pop
dec
adc
(bad)
jl
sub
je
hlt
test
cmp
add
mov
icebp
cmp
add
cdq
cwde
jge
(bad)
cld
dec
sbb
imul
dec
outs
jo
call
bnd
mov
push
outs
fwait
pop
jl
fwait
dec
je
push
fs
pop
fistp
mov
lods
mov
mov
or
add
sbb
rcl
aam
js
loop
jmp
jl
sub
ins
mov
jp
aad
aam
mov
enter
jmp
lods
ror
js
aad
add
push
fdivr
cmp
out
sub
mov
in
jl
or
imul
dec
jo
pushf
stc
ins
pusha
mov
push
and
pushf
je
push
fsubr
test
lea
(bad)
pop
in
pop
sti
push
push
pop
xchg
xchg
xchg
or
push
dec
pop
jo
pop
mov
aam
jne
les
jl
imul
pop
jl
or
dec
mov
int3
push
jnp
das
jb
(bad)
hlt
jns
xchg
nop
shl
in
mov
hlt
xchg
mov
pushf
(bad)
je
pop
push
cmp
movs
imul
cwde
arpl
xor
dec
je
dec
pusha
xchg
stos
bound
pop
pop
mov
lea
test
test
shr
pop
cmp
std
shr
add
mov
sub
sub
dec
ds
fdivr
dec
jl
mov
xchg
sub
adc
mov
push
mov
in
mov
(bad)
jne
adc
movs
mov
mov
xchg
mov
xchg
std
mov
in
jmp
shl
pop
fidiv
pop
fnstenv
cmp
leave
adc
mov
mov
xchg
sbb
mov
scas
lods
xor
movs
cmp
jl
jmp
out
clc
push
fdivr
push
test
jl
mov
jp
inc
repz
imul
(bad)
lds
jmp
push
or
xor
xchg
lea
jae
lods
push
mov
leave
pop
retf
retf
rcr
mov
add
cmp
mov
das
inc
jae
dec
dec
dec
test
cmp
lock
add
les
jp
mov
int3
fcmove
leave
(bad)
mov
je
add
(bad)
sti
nop
cmc
repz
xor
(bad)
in
jp
cmp
leave
push
je
push
dec
int3
into
test
div
adc
ins
arpl
mov
push
xchg
cwde
and
pushf
outs
movs
xchg
ror
adc
mov
scas
stos
sti
stc
clc
hlt
(bad)
popf
test
add
jp
stos
jp
clc
xor
ret
lods
mov
adc
dec
jp
dec
mov
mov
inc
push
add
push
pop
sbb
mov
cmc
cwde
movs
mov
jne
ja
mov
jne
mov
test
sbb
xchg
jmp
mov
pop
jmp
jmp
repnz
sbb
icebp
cld
inc
div
repnz
sar
shr
daa
imul
test
dec
pop
sahf
mov
test
lods
in
push
cmc
int3
jne
adc
stc
aam
push
mov
sub
cmps
(bad)
(bad)
xor
mov
inc
cwde
push
jns
jnp
retf
int
mov
les
sbb
adc
jo
and
and
repz
mov
sub
shl
out
and
fcom
lea
pusha
xor
in
pop
rcl
xlat
neg
fsub
mov
dec
push
mov
pop
dec
xor
sar
sub
(bad)
(bad)
repnz
or
pop
push
in
xchg
xchg
mov
mov
xor
adc
imul
lods
fsub
rol
test
jae
adc
sbb
lods
add
test
mov
imul
mov
test
cmp
push
cmp
jp
cld
mov
loop
sbb
dec
ror
or
cld
leave
enter
push
xchg
and
fwait
test
push
jl
sub
xchg
cmp
aam
fld
mov
mov
add
ret
push
mov
and
pop
mov
and
cli
pusha
sbb
xor
dec
mov
and
xchg
jp
push
out
fcom
shl
jle
cdq
jl
jg
js
loop
jmp
adc
shl
test
out
dec
mov
jl
fldenv
sub
inc
pop
stc
push
mov
jl
fld
jl
add
jl
xlat
mov
jl
sub
js
sub
jle
sbb
jl
jmp
sub
xchg
dec
xchg
dec
sar
xor
fst
aas
or
aad
nop
jl
sbb
into
push
jge
cmps
icebp
cmp
pop
sbb
or
ss
das
jg
cld
mov
push
bound
js
jge
cmp
idiv
jnp
aam
sbb
sbb
je
leave
rcr
jb
ret
ins
sar
pop
dec
jo
xor
test
sbb
js
mov
ins
jnp
jp
push
cmp
fld
cmp
jge
js
daa
sub
loop
(bad)
and
stos
jmp
fcom
js
xor
jbe
pop
push
dec
inc
inc
in
loopne
jno
ins
pop
dec
jbe
mov
js
push
jbe
outs
dec
push
lea
rcr
cmp
ins
push
js
daa
into
adc
pop
sti
fwait
pop
pushf
jns
pop
mov
fs
inc
ins
and
jbe
mov
dec
fs
jp
and
gs
jns
jo
jne
jle
mov
add
stc
pusha
push
js
addr16
sub
pop
jp
idiv
imul
push
lds
mov
ss
cld
arpl
in
pusha
dec
ja
lods
cmp
dec
icebp
js
cdq
imul
push
dec
je
movs
jns
mov
jo
dec
inc
jp
ja
repz
push
or
scas
outs
inc
dec
dec
xor
dec
out
and
push
push
and
push
outs
and
push
ins
or
sbb
cmp
ins
ss
push
pop
dec
inc
sbb
inc
pop
dec
ds
cs
fs
in
sub
scas
dec
dec
les
inc
push
and
sub
sub
aas
inc
mov
pop
pop
inc
daa
pop
dec
dec
les
ret
inc
lods
pop
push
xor
pop
sbb
sub
push
cmp
push
add
pop
push
cmp
and
or
gs
push
(bad)
inc
inc
std
lock
pop
ds
jge
cmp
fcmovbe
dec
lock
aam
ret
inc
inc
jnp
dec
dec
cmp
dec
xor
or
inc
xchg
cmp
cwde
push
jmp
jb
imul
dec
adc
cmp
inc
fistp
cli
jns
xor
cmp
xor
xchg
dec
das
out
xchg
dec
sub
sub
sti
sub
out
ins
pop
cmp
or
fsub
jg
adc
mov
aaa
je
ss
jg
mov
in
sub
sti
xor
add
and
in
sub
ins
dec
inc
jp
push
dec
cmp
inc
cmp
mov
xor
aaa
sbb
in
xor
xor
pop
push
or
dec
in
cmp
mov
outs
inc
push
pop
rcl
cmc
cmp
xor
or
sub
mov
sbb
cld
or
dec
xor
sbb
shl
sbb
std
hlt
gs
mov
mov
leave
jle
sar
or
dec
push
hlt
push
icebp
jp
inc
inc
clc
cmp
cmp
jmp
(bad)
xchg
inc
sub
cld
lock
fwait
aaa
mov
inc
out
cmp
inc
in
mov
inc
jp
dec
dec
std
fdivr
inc
lock
push
add
push
or
jb
push
jns
imul
shl
shl
aas
xchg
ins
in
hlt
dec
outs
imul
les
popf
bound
dec
xor
mov
cld
dec
dec
cmp
dec
adc
inc
mov
mov
ss
inc
sub
inc
aaa
in
mov
xor
dec
push
add
xor
ds
push
pop
and
dec
aas
adc
dec
pop
pushf
push
push
dec
xor
push
cmp
add
xor
dec
dec
xor
push
outs
data16
jnp
sub
arpl
repz
add
hlt
jne
cld
adc
gs
mov
mul
in
cmp
jmp
ins
dec
out
push
fbld
dec
pop
or
(bad)
pushf
nop
inc
dec
scas
cmp
icebp
stc
push
xchg
std
mov
popa
xor
frstor
push
test
call
pop
arpl
imul
outs
jb
or
cmc
jge
dec
dec
cmc
les
pop
adc
adc
jae
cmp
aas
inc
test
dec
outs
clc
xor
je
jnp
push
inc
push
push
xchg
test
jmp
lahf
pop
and
ins
sub
sbb
test
in
add
pop
gs
push
push
cmp
jmp
pusha
hlt
adc
mov
je
cmp
pop
push
push
js
xor
fs
std
dec
mov
lock
aam
push
push
fstp
dec
fidiv
pop
jge
je
das
repnz
icebp
sub
dec
inc
inc
add
je
lock
sbb
dec
lods
inc
add
xchg
adc
inc
je
cs
pop
pusha
add
arpl
dec
push
out
mov
dec
cld
push
leave
(bad)
cmp
jnp
js
outs
pop
ins
ret
mov
push
cmp
fmul
jecxz
cmp
push
dec
push
adc
in
aam
adc
dec
cs
imul
dec
imul
cmp
dec
push
adc
mov
pop
clc
adc
sbb
lock
inc
retf
in
je
stc
aas
cmp
stos
xor
xor
lods
test
fisubr
cmp
int
xor
ror
mov
cwde
out
fs
cmp
xchg
test
push
fst
call
push
les
dec
jns
inc
push
xchg
mov
inc
xlat
mov
inc
hlt
push
pop
pusha
sbb
or
dec
movs
dec
xor
pop
add
push
jb
inc
inc
loopne
gs
jne
push
stc
inc
push
ins
fs
ja
in
cmp
cli
hlt
inc
adc
cmp
fcomp
cmp
xor
jnp
cmp
jne
push
push
adc
lods
dec
dec
inc
push
xor
xor
cli
jno
dec
pushf
mov
dec
add
and
jbe
test
push
ins
push
adc
sub
in
cmp
test
mov
pop
dec
ins
dec
loope
mov
test
ins
jne
loop
xor
pop
and
mov
jno
jp
dec
hlt
ss
pop
inc
inc
cmp
pop
sbb
jne
pusha
std
in
pop
bound
pop
pushf
dec
pushf
cmp
in
push
aad
int3
push
(bad)
je
sbb
in
push
rcl
ins
les
popa
addr16
inc
iret
dec
dec
push
fidiv
js
inc
inc
push
sbb
stc
hlt
ds
sbb
sub
mov
push
sbb
jae
jns
nop
sub
lock
sub
inc
sub
pushf
dec
lods
popw
addr16
gs
in
cmp
dec
dec
jns
pop
pop
mov
inc
arpl
adc
sub
movs
xor
adc
pop
adc
ja
pop
jl
pop
pop
outs
adc
mov
push
lock
pop
aam
xor
jae
push
out
movs
xchg
jne
push
jge
push
pop
loope
push
js
sti
jb
adc
js
dec
sar
pop
pop
cli
mov
pushf
cld
cmp
in
mov
js
pop
repnz
mov
cmp
fwait
pop
add
inc
hlt
nop
dec
in
dec
pop
(bad)
aam
mov
sbb
push
push
in
add
push
cmp
aaa
cmp
into
adc
cmp
sub
mov
xor
sub
int3
or
and
jb
jbe
hlt
jo
add
ds
fisttp
sbb
pop
push
push
retf
push
xor
inc
sbb
das
xor
loopne
sub
pushf
ficom
dec
lods
adc
sub
jns
inc
fsub
lods
cmp
fdiv
cmp
js
movs
jl
xor
pop
inc
xor
inc
pushf
imul
mov
jbe
aas
retf
movs
push
cmp
retf
rcr
lds
enter
fcomp
push
mov
dec
fsubr
jne
cmp
dec
test
adc
or
sub
mov
call
inc
push
mov
dec
xor
in
inc
push
ret
mov
jo
ins
jbe
add
push
out
inc
fs
aas
inc
test
ds
dec
add
ins
stos
je
and
push
inc
adc
dec
xchg
ins
je
xor
gs
push
fistp
ins
dec
dec
adc
inc
fbstp
xor
inc
xor
ins
xor
out
fmul
pop
je
inc
jo
push
add
dec
push
repz
dec
in
(bad)
cmp
dec
test
sbb
or
dec
sbb
inc
push
fdiv
dec
pop
fsub
pop
imul
or
movs
push
xor
les
imul
jp
push
pop
(bad)
cmp
inc
mov
push
sbb
cmp
enter
mov
jmp
sub
mov
push
push
ficomp
rcr
push
dec
sar
mov
pop
mov
adc
mov
push
arpl
inc
ss
(bad)
sub
inc
iret
call
call
test
pushf
ds
int3
cld
dec
std
inc
sub
cmp
sub
jmp
pop
or
xor
loop
push
mov
pop
sbb
xor
inc
pop
lods
sbb
jne
dec
jne
jnp
dec
ss
jns
or
sub
sub
sub
ins
inc
fadd
xor
aad
lods
jb
inc
pushf
inc
pop
inc
dec
xor
mov
js
cld
pop
add
push
sub
mov
jmp
cmp
ds
leave
pushf
dec
repnz
inc
nop
ds
dec
xor
cwde
jns
push
ret
dec
cmc
mov
jne
cmp
push
jno
cmp
cmp
pop
ins
cld
mov
gs
cmp
cmp
int
pop
dec
push
dec
loopne
pushf
cmp
in
push
or
es
pop
sub
cmp
sbb
dec
in
xor
fcomp
ret
push
hlt
movs
inc
(bad)
push
sub
pop
bound
cmp
push
cld
sub
sbb
sub
cld
mov
push
or
or
sub
dec
loop
inc
test
in
pop
jo
push
jns
enter
dec
inc
sub
mov
cmp
xor
push
fnop
mov
ins
and
push
pop
jns
and
js
sub
jns
pop
std
sub
add
pop
pop
loopne
push
pusha
jp
push
popa
xor
pushf
cmp
xchg
push
inc
dec
aad
jl
int3
cmp
xor
pusha
push
inc
push
push
dec
inc
aam
outs
stc
in
arpl
je
inc
addr16
hlt
push
push
pop
int3
pop
dec
push
adc
pop
mov
aam
push
les
push
movs
bound
inc
mov
sub
jo
das
cmp
sub
hlt
xor
iret
std
push
dec
xor
jo
push
fs
cmp
in
dec
sub
cmp
imul
inc
call
sub
out
mov
jbe
or
dec
jo
ins
dec
mov
fdiv
sub
mov
xor
jno
ins
shl
imul
outs
or
inc
inc
mov
pop
mov
pop
push
movs
and
rcr
push
pushf
pop
mov
mov
sbb
je
cld
cwde
pop
xor
mov
mov
int3
test
jmp
and
nop
outs
dec
push
sti
clc
sbb
std
xor
sub
push
loope
mov
push
sbb
mov
in
fwait
pop
hlt
aaa
call
cwde
jne
daa
sti
in
sub
push
pop
push
(bad)
je
cmp
imul
pop
daa
std
je
sub
jnp
adc
inc
mov
je
nop
ja
sub
sub
and
or
das
jno
pop
in
jnp
pusha
adc
push
pop
jbe
aaa
sbb
xor
cmp
xor
les
sbb
cmp
inc
and
sub
nop
push
push
sar
adc
aaa
lods
inc
call
cli
sbb
cmp
loopne
xor
sbb
dec
xor
gs
aaa
out
pop
cmp
or
dec
in
mov
cmp
add
pushf
add
cld
inc
aaa
sub
sub
push
or
and
paddd
js
xor
mov
adc
sub
sub
cmc
xchg
cmp
cli
nop
ja
cli
in
dec
inc
mov
cmp
std
loopne
push
mov
inc
inc
push
xor
cs
aaa
les
dec
sub
je
sub
jns
jns
fidivr
jno
aam
test
inc
sbb
cmp
jl
sbb
jp
mov
sbb
push
push
das
pusha
je
pop
rcr
push
mov
mov
dec
jnp
stos
nop
pop
mov
sbb
je
ret
fcom
enter
int
ins
dec
dec
dec
inc
jns
les
js
je
mov
in
dec
cld
jno
enter
mov
mov
pop
shr
je
bound
lods
jns
jae
div
int3
mov
(bad)
enter
jb
pop
je
arpl
jae
mov
(bad)
loope
ins
stos
push
mov
mov
xchg
push
test
and
cdq
jae
je
xchg
fmul
aam
inc
sub
mov
je
outs
push
dec
sub
jo
dec
pop
and
sbb
and
and
push
fs
push
dec
pop
pop
in
add
cmp
pop
ins
int3
pusha
push
std
test
pop
inc
mov
dec
cmp
cmp
pop
inc
pop
in
dec
jmp
push
jbe
push
dec
mov
outs
push
cmc
and
data16
jo
ds
push
cmp
xchg
ds
test
inc
outs
inc
clc
ins
idiv
(bad)
std
fdiv
hlt
ins
outs
imul
fcomp
aaa
pop
xor
sbb
adc
ror
or
xchg
xchg
cmp
xchg
mov
jns
mov
in
clc
push
mov
jmp
ds
adc
dec
pop
sbb
or
inc
test
and
jno
inc
push
pop
dec
dec
add
int3
mov
push
call
sbb
dec
ja
push
pusha
pop
dec
xor
call
jo
push
xor
je
ja
mov
inc
aam
jl
in
bound
cmp
fs
pop
push
or
add
push
dec
adc
xchg
and
pop
xchg
clc
inc
pop
push
aas
les
and
outs
les
inc
add
adc
cmc
adc
push
jno
xor
jbe
add
jl
shl
daa
jle
or
mov
jo
pushf
pop
dec
inc
sbb
pop
test
je
push
push
jl
pop
pop
add
cmp
popaw
xchg
jmp
inc
push
sbb
cmp
push
pop
dec
adc
(bad)
or
out
call
cs
or
shl
adc
xor
test
pop
cmp
cmp
push
add
xor
or
in
dec
mov
pop
mov
icebp
mov
push
xor
mov
lds
push
test
pop
sbb
in
inc
xor
add
sbb
sbb
addr16
jg
or
cmps
push
fadd
sub
js
or
jge
push
sub
jb
mov
je
inc
out
addr16
mov
sub
js
push
lock
pusha
ds
sbb
push
in
inc
fistp
hlt
int3
or
test
and
fcomp
fcomp
push
test
loopne
push
sub
push
cmp
ss
pop
fs
(bad)
mov
pop
rdpmc
js
aad
cli
js
dec
test
or
push
push
cs
cmp
ds
push
adc
cmp
push
adc
add
mov
(bad)
adc
pushf
cli
mov
or
clc
jmp
stos
push
into
mov
and
pop
add
xor
imul
bound
fs
mov
arpl
ret
jo
gs
dec
pop
cmp
push
pop
and
push
mov
repz
dec
test
mov
ins
mov
repz
sub
pushf
mov
mov
pop
fs
jne
sar
sub
push
push
push
adc
imul
js
dec
adc
(bad)
jmp
or
xor
lock
int
sbb
dec
dec
outs
movs
push
push
adc
ja
push
ss
repz
sub
sub
(bad)
fild
cmps
xor
scas
or
or
nop
das
push
cli
enter
data16
xor
cmp
mov
test
add
fidivr
dec
aam
cmp
add
pop
inc
int3
dec
jae
std
cmp
push
in
cs
inc
pop
arpl
(bad)
lods
xor
lods
or
push
or
sbb
dec
pop
dec
repnz
je
dec
jnp
jo
das
imul
adc
pop
enter
push
dec
in
mov
pop
jae
dec
outs
sub
push
je
ds
push
jne
jae
cmp
cs
jl
nop
(bad)
xor
sbb
jle
cld
xor
cmp
dec
xor
push
push
sub
xor
in
push
in
xchg
pop
mov
pop
fisub
fistp
fsubr
pop
push
add
pop
std
fcom
imul
pusha
inc
push
in
imul
xor
inc
jne
loopne
push
lods
pop
jne
dec
inc
enter
adc
fdivr
inc
ror
push
xor
lods
jbe
adc
jmp
out
fsubr
jmp
add
jnp
xor
push
cdq
push
mov
jl
cmp
dec
sbb
je
dec
sub
adc
jne
jno
pushf
popf
(bad)
aad
mov
mov
sub
sub
add
cmp
cwde
push
inc
inc
aad
aas
push
rcr
ins
shl
dec
shl
fcmovnbe
cwde
cld
add
movs
jne
cmp
mov
mul
cmp
ja
cmps
jmp
or
inc
or
nop
xor
pushf
das
mov
ins
push
sub
hlt
sbb
ss
cmp
mov
js
jbe
push
push
out
retf
xor
push
xchg
lea
mov
mov
jae
push
ins
push
jne
inc
hlt
sti
sbb
push
dec
push
inc
jl
jnp
(bad)
jmp
jl
push
mov
je
jl
sbb
fmul
mov
pop
or
mov
push
fdivr
dec
shr
fisttp
jecxz
push
xchg
jnp
dec
push
aad
test
mov
ins
push
je
test
mov
ss
jl
pusha
fs
and
and
scas
jg
cwde
lea
fs
inc
ins
cmp
in
dec
cld
xchg
pop
push
hlt
cmp
js
sbb
aam
or
inc
inc
in
pop
icebp
mov
push
sbb
mov
push
jne
xor
fidivr
scas
inc
add
es
jl
ins
enter
inc
iret
les
jne
mov
jb
cmp
jb
dec
mov
push
fbstp
fist
iret
pushf
dec
inc
enter
sbb
les
retf
dec
ins
dec
xchg
in
fs
fsub
and
test
inc
pop
ins
test
and
das
std
sub
(bad)
cmp
cs
mov
inc
shr
push
dec
int3
cmp
sbb
jb
(bad)
jnp
push
fisubr
shl
inc
(bad)
mov
jno
cmp
pop
fsubr
arpl
inc
jmp
or
sbb
lods
mov
xchg
mov
adc
inc
xor
fisubr
lock
cmp
fdiv
clc
xchg
jp
push
pop
in
test
or
push
mov
stos
rcl
cmp
int
retf
loop
sbb
std
inc
and
imul
xor
cmp
inc
pop
push
fild
sub
jp
inc
dec
loop
fcomp
nop
aam
jno
inc
out
cmps
and
cmp
bound
add
gs
cmp
sbb
sbb
jbe
pushf
rol
retf
push
test
(bad)
adc
mov
aas
mov
je
inc
std
dec
mov
dec
inc
jae
push
into
fdiv
out
test
das
in
mov
mov
in
cmc
cmp
test
nop
inc
push
xor
inc
push
sti
movs
std
nop
jbe
inc
mov
jo
cmp
mov
fadd
fsubrp
dec
pushf
jne
jb
out
sbb
cmp
idiv
cmp
push
inc
push
movs
cwde
nop
sub
cmp
xor
shl
js
mov
jns
inc
add
pop
imul
and
aas
sbb
cld
dec
cli
push
jp
dec
jl
jl
ret
iret
pop
es
or
push
ficomp
fs
xor
sub
sar
push
jne
sub
fsub
mov
xlat
js
mov
sub
xor
shr
cmp
js
dec
cmc
(bad)
in
enter
push
ins
push
sti
pop
retf
sub
and
pop
lock
nop
add
sbb
fadd
push
lods
imul
rol
push
outs
mov
jo
sbb
push
loope
inc
push
inc
xor
(bad)
pop
hlt
gs
push
add
dec
ud2
in
ror
je
mov
cmp
addr16
clc
mov
pop
cli
lock
add
pop
pop
mov
ret
xor
dec
jle
push
pop
test
ins
xor
jl
xchg
push
inc
fs
and
mov
pushf
inc
dec
add
cmp
sar
dec
pop
gs
rcl
push
xor
mov
jns
pop
adc
cmp
mov
sbb
jnp
sbb
sub
sbb
sbb
mov
cmp
push
cs
dec
pop
xor
movs
cs
push
and
fadd
in
pop
inc
push
fcmovnu
push
push
and
out
daa
jbe
adc
adc
adc
int3
neg
dec
add
jmp
pop
pusha
pop
inc
and
xlat
cmc
pushf
cmp
pop
pushf
pop
mov
pop
lahf
xchg
aam
imul
xlat
inc
out
pusha
inc
inc
cmc
jbe
jo
adc
push
push
cmp
mov
cmp
lock
outs
dec
ja
push
pop
dec
sbb
lods
bound
sbb
ins
jo
inc
push
sbb
push
inc
clc
aam
fmul
sti
pop
inc
mov
pop
inc
retf
cmp
movs
xchg
sbb
sbb
xor
addr16
aam
xor
movs
jne
es
ds
xor
inc
mov
sbb
ss
mov
aaa
add
pop
xor
pop
xor
jne
adc
pop
inc
pusha
pop
push
js
das
dec
push
and
fiadd
cmps
sbb
aad
daa
lods
int3
mov
leave
je
js
jl
cdq
pop
add
and
js
mov
je
jp
ins
mov
sbb
mov
enter
push
out
inc
dec
push
addr16
ins
xor
mov
dec
je
fstp
mov
outs
cld
pop
cmp
imul
mov
test
sub
jge
out
fs
add
imul
and
jo
jb
push
push
lahf
cs
sahf
sub
out
js
jo
adc
xor
cwde
ret
add
pusha
and
aaa
dec
fistp
or
js
je
jns
arpl
xchg
outs
inc
cmp
xor
enter
enter
adc
mov
rcl
jne
mov
mov
es
stos
xor
pusha
or
jp
and
jb
pop
ja
mov
jo
outs
gs
inc
ins
in
jne
push
jnp
leave
adc
cld
jbe
mov
outs
fs
je
fnstcw
retf
jne
(bad)
std
lahf
or
jge
jns
dec
add
out
push
jae
je
ja
dec
ins
aad
push
or
jne
jbe
pop
aad
out
js
dec
int3
loopne
xor
mov
push
xchg
pop
loopne
fs
add
push
imul
jbe
inc
xor
mov
jmp
add
pop
loope
lds
les
out
retf
iret
outs
ror
mov
sbb
cmp
(bad)
sar
fidiv
fcmove
push
les
pop
fst
int
(bad)
int3
and
in
scas
ins
loope
xor
rol
(bad)
ins
(bad)
mov
(bad)
ins
test
mov
fcmovnbe
mov
and
mov
in
fisttp
fcmove
ins
rcl
inc
out
enter
icebp
mov
xor
out
push
mov
bound
push
pop
js
mov
mov
mov
dec
scas
jbe
pop
xchg
in
mov
in
jns
add
rol
pop
cmc
aam
ja
(bad)
mov
sbb
repnz
daa
push
add
ds
(bad)
ins
adc
std
pushf
aam
test
pop
push
add
xor
fdivr
sub
and
add
pop
outs
xor
sbb
cmp
sub
cmp
add
ins
ds
ret
test
add
std
cmp
pop
push
add
and
adc
pop
addr16
inc
jbe
xor
adc
psadbw
cld
(bad)
jnp
cli
(bad)
pushf
adc
push
imul
daa
sub
shr
pop
ret
jl
mov
jb
retf
hlt
sub
ins
push
mov
xor
rol
test
pushf
inc
xor
lods
mov
xchg
test
adc
(bad)
cmc
je
push
outs
push
adc
hlt
sbb
fdivr
fnstsw
push
xor
rcr
sub
cli
rol
pushf
inc
cmp
jmp
ss
test
nop
xor
and
iret
mov
xor
cmp
inc
xor
and
inc
jecxz
add
aas
add
ds
push
xor
inc
adc
jo
sub
arpl
sbb
mov
not
mov
test
pop
push
mov
and
clc
sub
jl
je
test
repz
push
call
dec
popf
hlt
into
mov
push
in
push
adc
mov
or
mov
test
cs
call
and
add
sbb
pop
add
out
je
stc
mov
adc
sub
fs
fbstp
in
and
ss
push
sub
sti
cmp
adc
ins
sub
inc
out
je
and
and
adc
cmc
and
jge
xor
or
out
movs
(bad)
or
pop
inc
dec
dec
daa
sbb
fdiv
outs
loope
clc
dec
adc
xor
and
sbb
push
test
shr
mov
fimul
nop
test
fst
test
mov
cmp
dec
jae
mov
jl
push
or
fdiv
mov
mov
mov
hlt
(bad)
fmul
ins
adc
gs
jmp
push
out
mov
movs
push
push
or
js
and
mov
sbb
add
aaa
std
shr
das
xchg
fwait
and
jmp
lods
sbb
mov
push
and
pop
je
xor
adc
sub
sbb
cld
push
inc
fistp
imul
cwde
lock
cld
std
cmp
(bad)
call
pop
sbb
push
pop
mov
popf
cmp
rol
mov
cwde
pop
add
leave
or
xchg
jg
hlt
cmps
inc
dec
sub
add
(bad)
mov
push
sub
inc
add
lods
dec
sbb
fcomp
dec
inc
or
cmp
adc
shl
cs
dec
ss
clc
and
shr
cmp
adc
sbb
push
xor
sub
test
cmp
sub
je
sub
test
and
inc
xchg
movhps
adc
out
jl
pop
je
and
outs
or
(bad)
out
rcr
push
jns
push
jmp
aam
clc
pushf
movs
btc
cli
int
imul
cmc
sub
xor
or
ins
mov
hlt
outs
adc
cmp
jne
xor
fadd
in
mov
pushf
imul
mov
enter
in
or
mov
fs
xor
ret
ss
inc
cmp
je
cs
imul
js
sub
cld
movs
das
sub
mov
aas
cld
ds
sub
sub
xor
js
es
in
jle
les
fdivr
cwde
pop
push
addr16
mov
or
int3
dec
(bad)
clc
mov
add
mov
sub
xor
jbe
adc
pushf
push
cmp
and
(bad)
mov
add
js
adc
fcom
in
push
mov
cld
loopne
js
ret
js
xor
fs
test
nop
pop
mov
pop
fdivr
sbb
hlt
inc
sbb
sub
in
jl
lock
jns
xor
gs
mov
hlt
imul
fdivr
fcom
retf
clc
dec
fmul
cmp
sub
test
and
js
test
xor
jl
jae
xor
aad
jge
dec
dec
cmp
cmp
je
call
sbb
or
ins
adc
out
(bad)
jnp
in
fstp
retf
int3
mov
jmp
nop
mov
cmp
push
shr
push
or
hlt
and
sar
lock
mov
xor
ins
add
bound
or
jb
je
mov
(bad)
push
push
cmp
sbb
dec
sub
in
cmp
xlat
in
and
repnz
popa
js
call
push
and
icebp
fs
cmc
ret
xchg
adc
dec
xor
daa
pop
cwde
jmp
sbb
ins
and
in
sahf
je
sbb
cs
and
dec
and
xor
sbb
cwde
cmp
fs
cmp
cmps
je
pushf
sub
daa
dec
cmp
and
jmp
cmp
xor
lock
in
in
jno
ret
test
ins
push
and
mov
jmp
dec
clc
mov
loopne
leave
repnz
aaa
pop
shl
in
jns
clts
stos
loopne
popf
cmp
clc
sub
push
dec
in
jne
(bad)
push
js
ja
cwde
pop
push
aas
test
call
aas
imul
jbe
out
(bad)
hlt
push
out
mov
mov
daa
js
(bad)
cld
in
aad
test
pop
mov
dec
ret
shr
jae
int
jns
div
dec
xor
cli
push
and
in
movs
pop
sub
daa
xor
push
inc
in
and
lods
mov
xchg
mov
dec
fs
cmp
aaa
js
sbb
inc
pop
sbb
cwde
jns
dec
cmp
jo
push
cmp
mov
xor
pop
inc
inc
ficom
mov
inc
aam
fsubr
ret
mov
hlt
mov
sbb
fdivr
stc
repnz
int
(bad)
cmp
mov
loop
mov
ficomp
mov
sub
out
in
cmp
fsub
fs
and
jno
push
inc
lods
add
leave
in
jecxz
jns
sbb
push
es
adc
in
sbb
jmp
add
outs
inc
or
jge
sbb
out
cld
mov
out
cmc
outs
cld
ds
and
js
das
std
jl
sub
cmp
sub
and
sbb
pusha
(bad)
(bad)
pusha
sub
inc
sub
push
or
add
mov
adc
mov
sbb
aam
fdiv
inc
movs
data16
jb
aaa
xor
sub
xor
dec
inc
daa
(bad)
ins
stos
push
sub
cmp
add
sbb
add
and
das
dec
pop
add
jmp
inc
loop
fsub
out
call
cmp
xlat
cmp
in
adc
and
popf
fs
adc
adc
mov
out
imul
mov
jns
je
adc
mov
outs
inc
inc
mov
aaa
add
mov
aad
mov
sbb
out
mov
cmp
(bad)
cld
popa
cmp
in
cmp
shl
inc
sbb
push
cmp
jo
sub
cmp
ss
hlt
jecxz
(bad)
mov
sub
mov
sbb
fisttp
(bad)
ins
fdiv
sbb
adc
int3
ds
pusha
push
gs
sbb
loop
xor
test
into
hlt
push
sub
adc
sub
pop
adc
or
add
cld
sbb
xlat
mov
pushf
adc
das
sbb
dec
es
lock
inc
cli
in
sbb
jbe
mov
hlt
loop
pushf
push
in
dec
cmp
movs
adc
adc
xchg
fbstp
mov
adc
cli
jbe
jl
in
in
lods
pop
jmp
xor
in
inc
push
xor
mov
jo
test
push
scas
xchg
pop
hlt
in
and
rcl
loope
pusha
das
push
js
fsubr
ds
cmp
xor
les
xlat
shl
and
js
sub
xchg
sbb
sbb
or
xor
mov
jne
or
fwait
add
push
stc
icebp
outs
test
inc
push
adc
mov
and
jo
les
mov
cmp
mov
sti
sbb
sbb
and
or
cmp
hlt
or
or
jo
mov
and
mov
clc
pop
lods
sub
and
rcl
jo
in
stc
movs
hlt
ret
div
icebp
scas
scas
jbe
or
not
rcl
int3
jl
push
dec
inc
sbb
add
call
stc
clc
out
mov
in
scas
test
cld
ret
pop
call
mov
daa
aaa
fadd
pop
clc
xor
mov
sub
and
jne
xor
jp
es
lods
sub
fsubr
ins
pop
cmp
push
pop
sahf
je
adc
fcomp
adc
rol
cli
jmp
mov
aaa
or
jmp
dec
test
inc
xor
cli
adc
lods
test
cli
test
xor
xor
cs
orps
sbb
or
int3
fs
mov
out
repz
test
outs
aam
mov
enter
movs
and
pop
push
and
jp
dec
sbb
hlt
sub
fisubr
enter
cmp
test
push
sar
push
and
std
int
xor
sub
sbb
popf
add
xchg
xor
jo
loop
sub
sbb
sbb
lock
pop
lock
mov
pop
repz
mov
cmc
shl
cli
lock
call
std
sub
fdivr
ds
jmp
mov
mov
add
outs
adc
pop
sub
cmp
cs
mov
add
push
test
nop
sbb
mov
or
in
int3
sbb
sub
clc
and
sub
stos
fs
jne
mov
fs
mov
xor
enter
test
cmp
(bad)
cwde
cmc
push
xor
enter
inc
push
movs
dec
bound
cmp
call
add
push
fld
or
lock
mov
cwde
(bad)
push
xchg
je
sbb
add
das
mov
sub
js
(bad)
or
cmp
sub
pop
and
movs
jae
pop
popf
pusha
adc
adc
push
jo
movs
push
mov
out
ins
repz
sbb
hlt
add
pop
pop
sti
fiadd
arpl
(bad)
repnz
js
and
daa
and
sbb
pop
in
test
mov
je
and
les
push
aam
adc
dec
es
pop
pop
sbb
sub
cmp
cli
sbb
dec
inc
imul
and
pop
jns
inc
add
dec
jmp
stc
or
fdivr
pop
mov
sbb
pop
retf
ret
call
(bad)
int3
and
ret
mov
push
lds
cli
jo
mov
inc
out
(bad)
cli
inc
sub
push
les
push
inc
cmp
mov
shl
inc
mov
inc
aam
dec
dec
push
dec
inc
(bad)
mov
cmp
pop
cld
xor
inc
ja
dec
inc
shl
je
jmp
cmp
les
adc
pop
js
adc
lea
and
aam
repnz
jl
adc
cmp
cmp
xchg
pop
test
daa
add
and
xor
adc
or
adc
cmp
pop
dec
sbb
cmp
cs
cmp
jp
push
push
cli
add
cld
cld
sub
add
fld
retf
mov
ins
mov
scas
data16
test
addr16
jnp
addr16
inc
push
or
sbb
int
mov
sub
jbe
mov
leave
int3
jo
inc
xor
js
test
mov
jns
in
std
test
sar
xchg
aas
aaa
lea
call
popf
clc
scas
fcom
mov
dec
test
aas
cmp
jmp
xchg
sbb
cmpxchg
and
fcomp
or
mov
in
in
adc
jmp
pop
jns
sub
test
es
cmp
cmp
or
int3
sbb
je
js
loop
and
jl
(bad)
pop
inc
inc
sbb
je
stos
js
adc
sub
sub
cmp
mov
adc
or
mov
xor
shr
clc
xlat
mov
daa
or
inc
sub
clc
push
cmp
push
mov
ss
fisubr
cmp
jae
ss
cld
cmp
out
cmp
pop
dec
cmp
dec
pop
sbb
dec
push
fsubr
lea
jmp
out
sbb
int3
femms
(bad)
rcl
mov
adc
mov
sbb
in
and
push
push
xor
sub
cld
push
and
dec
mov
lock
in
pop
jmp
int
xor
enter
ror
and
fs
or
and
xor
fadd
and
cld
sub
ud0
dec
cmp
and
pop
add
icebp
mov
bnd
sbb
call
fs
dec
mov
dec
cmp
cmp
sbb
sub
loope
in
fdiv
cmp
sub
ss
jne
aas
lods
xor
mov
jl
jp
leave
mov
add
sub
sub
inc
mov
sbb
and
add
pop
fdiv
in
fbstp
xor
jae
or
cmc
mul
or
sti
and
mov
lock
add
out
or
ror
or
sbb
aam
and
nop
das
jmp
pop
ffreep
mov
(bad)
mov
in
(bad)
in
xchg
pop
loopne
xor
je
sbb
and
push
fnsave
adc
mov
adc
fadd
mov
sbb
mov
or
int3
mov
push
(bad)
rcr
and
retf
jo
sub
(bad)
lods
fucomp
mov
dec
sbb
sbb
fistp
fdivr
adc
repnz
add
push
add
add
das
adc
ds
xor
cmp
ins
mov
js
retf
cs
int3
shl
add
cli
shl
sbb
les
je
adc
jne
pop
clc
hlt
cmc
jmp
add
icebp
aam
pusha
sbb
fs
in
movs
mov
arpl
loop
into
ins
pop
add
pop
jne
sar
adc
sar
jb
fdivr
in
js
in
mov
(bad)
jmp
outs
and
mov
cli
clc
sbb
inc
adc
mov
xor
mov
inc
dec
loope
inc
lea
push
js
loop
and
lods
inc
cmp
cld
inc
jmp
pop
in
adc
ds
jnp
adc
jmp
je
sbb
mov
adc
sub
stc
nop
xlat
pushf
cwde
jge
outs
addr16
push
add
mov
mov
xor
push
lock
pop
xchg
shr
add
in
push
sti
xor
or
add
and
fs
fstp
add
loopne
xchg
or
cmc
push
call
loope
inc
call
aad
inc
jmp
cmp
shl
dec
hlt
neg
and
dec
xor
sbb
dec
xor
lahf
loope
mov
sbb
pop
pop
daa
xor
mov
int
je
mov
les
ins
and
mov
js
das
into
mov
jae
aam
and
in
fcom
repnz
aam
aaa
mov
mov
and
mov
cs
dec
pop
mov
and
retf
mov
pushf
ret
in
inc
adc
gs
dec
push
and
sub
pushf
in
loopne
pop
cmp
test
or
icebp
lods
push
(bad)
push
and
adc
in
pop
or
xor
sub
jbe
push
stc
push
sub
mov
aam
in
loope
lds
sbb
scas
mov
outs
push
mov
mov
or
test
fs
stos
add
js
lahf
jle
push
xor
jne
adc
inc
add
cmp
fdiv
push
inc
(bad)
movs
lea
in
int3
or
fst
add
aam
xor
xor
rcr
dec
je
adc
jne
fistp
push
stc
jo
pushf
les
mov
fdivr
dec
or
aas
lea
aaa
or
push
mov
in
jl
mov
js
mov
mov
test
lods
or
adc
and
add
sbb
leave
push
sbb
push
or
add
in
lock
mov
or
sub
dec
lock
jg
mov
sbb
adc
fadd
cmc
pushf
pop
cwde
iret
sar
out
cmp
jns
lods
das
mov
mov
mov
xlat
js
not
mov
movs
xor
push
inc
lds
dec
sbb
js
sar
rol
pop
je
movs
jb
ret
aam
adc
pop
dec
mov
push
mov
fdivr
stos
movs
in
jmp
adc
pop
or
ins
ret
cmp
sbb
lds
sbb
mov
push
dec
(bad)
xor
jo
add
into
cld
out
jecxz
and
fld
mov
(bad)
mov
in
sub
cs
jne
pop
xlat
jl
gs
aam
cld
cmp
push
pop
in
pop
pop
cld
cmp
out
xor
stc
fimul
pushf
xchg
add
in
mov
das
adc
add
call
sti
add
aam
sbb
movs
jecxz
mov
int3
repnz
(bad)
fadd
cmps
ins
jne
mov
mov
cmps
add
jb
movs
cmp
test
xor
movs
push
add
or
sub
aam
imul
js
sbb
std
xor
loopne
ins
xor
clc
jo
mov
sub
aam
mov
popa
movs
pop
popf
mov
jmp
sbb
sub
jmp
push
int3
push
nop
push
iret
sbb
or
sbb
in
or
js
call
push
jmp
std
rcl
mov
jl
js
mov
out
inc
and
in
and
popa
xchg
icebp
push
out
fs
jl
push
push
idiv
stc
lock
inc
shr
mov
push
mov
out
push
repz
pop
add
sbb
out
fstp
fmul
sbb
aad
fadd
jecxz
mov
jl
lds
xchg
outs
mov
xchg
stc
movs
popf
jp
mov
lahf
xchg
mov
dec
js
ins
mov
jmp
xor
cmps
mov
jmpw
push
sub
nop
sti
pushf
or
std
xor
icebp
ds
sar
sbb
pushf
adc
test
jmp
pop
sti
pusha
sub
pop
jne
dec
and
dec
daa
sti
pop
cmp
sub
int3
sub
stc
pop
aas
in
movs
sbb
pop
sar
retf
mov
mov
push
sar
je
jl
icebp
xor
pop
xchg
mov
or
ins
add
jnp
and
(bad)
in
aam
pop
or
add
inc
je
call
and
add
push
cmp
int
in
out
sti
or
cmp
shl
mov
nop
mov
mov
nop
cld
xchg
lahf
xchg
fadd
ins
mov
pop
test
fwait
mov
and
mov
mov
test
mov
hlt
dec
ins
outs
inc
xor
ja
and
pusha
dec
add
push
pop
inc
mov
int3
call
dec
fs
push
inc
cmp
pop
bound
out
pop
rdpmc
ficom
cmp
push
dec
arpl
in
out
cmp
and
stc
xchg
push
lods
js
mov
enter
inc
push
jo
push
add
nop
jne
cli
add
out
xchg
ret
fs
mov
pop
sbb
or
jmp
test
fsubr
cmp
fdivr
push
addr16
shl
fbstp
jne
xlat
cld
sti
adc
sub
iret
mov
push
cmps
test
xor
cld
fs
fs
sahf
sub
mov
xchg
jl
into
xchg
mov
xchg
jns
cdq
gs
je
jge
pushf
test
ins
jmp
scas
xchg
(bad)
xor
cmp
sti
(bad)
mov
pushf
ins
pop
push
test
dec
inc
sub
push
cmp
cld
cmp
(bad)
imul
sub
frstor
cmp
loopne
mov
mov
scas
jg
dec
fs
jnp
xchg
dec
cmp
xor
fwait
cmp
pushf
(bad)
mov
xor
adc
call
cmc
jne
stc
out
push
xchg
test
sub
movs
push
les
fild
jp
cld
lock
xchg
push
std
out
or
in
loopne
or
pop
loop
shr
cli
lahf
jb
ret
nop
jne
(bad)
(bad)
cli
enter
jl
loop
enter
sar
lea
cwde
jp
mov
xchg
std
xchg
mov
je
mov
mov
cdq
xchg
push
xchg
sub
jle
sub
ins
mov
dec
std
jmp
hlt
pushf
adc
add
fadd
cmp
fs
ja
sbb
cwde
movs
push
xchg
xor
pushf
shl
sbb
daa
test
mov
rcl
cmp
lods
dec
test
addr16
push
dec
nop
enter
shr
inc
pusha
dec
shl
jl
pop
jl
sbb
sbb
or
or
imul
jne
push
jno
dec
or
add
sub
icebp
sub
lock
xor
jne
js
mov
in
xor
dec
shl
mov
lods
test
xor
je
fsub
scas
test
lahf
cli
xchg
mov
xchg
cmp
cmp
pop
mov
test
lock
pushf
xchg
ins
mov
sbb
pushf
and
jbe
in
ret
bnd
add
adc
dec
test
or
jne
in
pop
or
xor
pushf
adc
lds
ins
or
and
xor
in
push
add
mov
mov
dec
sbb
mov
pop
div
adc
outs
in
test
fwait
nop
push
jno
jl
pop
pop
mov
dec
and
cld
add
add
jecxz
mov
test
and
jnp
jmp
out
(bad)
je
int3
js
sar
shl
sbb
mov
xlat
mov
ret
aam
test
lods
lods
popf
cli
cwde
movs
xchg
mov
add
jns
lahf
jbe
mov
stos
cdq
fs
pop
pop
cmps
xchg
pop
call
mov
les
scas
out
lock
and
push
int3
cmp
inc
sbb
ins
(bad)
std
jo
mov
or
fcomip
nop
mov
shl
aam
(bad)
mov
(bad)
mov
mov
rcr
loopne
ins
pop
stc
xchg
mov
add
(bad)
in
push
cli
in
arpl
or
dec
push
jae
jl
mov
adc
and
jl
pop
sbb
cmc
in
add
xchg
jecxz
fadd
fsubr
or
loopne
jne
jmp
sub
mov
in
sar
test
push
mov
mov
mov
sub
test
mov
std
jl
movs
mov
mov
xchg
movs
mov
mov
nop
test
xor
dec
pop
cmp
sbb
add
loop
mov
mov
mov
jo
fmul
inc
mov
add
popf
sbb
or
int
test
fdivr
push
out
frstor
sar
clc
mov
dec
xchg
fdivr
rol
in
dec
fisub
sbb
push
push
std
hlt
fdivr
mov
sbb
sbb
in
pop
sbb
sbb
pop
mov
mov
lods
cmps
ss
and
mov
(bad)
mov
mov
jns
adc
ins
or
out
call
es
dec
adc
in
push
mov
dec
je
test
mov
aam
fcmovnb
in
mov
arpl
movs
std
test
dec
test
dec
js
and
dec
add
jecxz
xchg
in
les
add
pop
fstp
and
leave
les
adc
lock
mov
addr16
mov
ins
adc
hlt
ins
or
cwde
or
jge
loope
pop
or
add
jnp
sbb
(bad)
mov
pop
mov
mov
fs
aam
jo
jmp
test
mov
fcmovbe
sbb
sbb
nop
sub
cwde
in
ffree
adc
push
or
xor
imul
(bad)
lock
cwde
dec
mov
pop
stos
(bad)
mov
cwde
pop
jl
ret
(bad)
push
scas
xchg
mov
push
push
cmp
dec
ins
loop
mov
or
in
pushf
dec
stos
call
pop
loopne
in
xor
add
shr
mov
movs
jmp
out
or
cld
cli
jp
out
les
push
sahf
clc
hlt
js
cld
aam
ins
cmc
ror
mov
add
xor
xor
test
mov
stos
pushf
fidivr
aam
call
fnsave
loope
in
out
lods
test
movs
mov
imul
mov
test
ret
mov
jne
in
sub
nop
sub
push
jmp
push
icebp
jp
adc
cmp
pop
push
add
mov
add
loope
or
call
push
sar
cld
ffreep
sbb
(bad)
adc
je
mov
mov
lds
ret
iret
or
mov
mov
js
sahf
les
mov
fs
je
jmp
cmc
div
js
call
sar
jl
jmp
fcomp
mov
mov
std
cmp
cmp
add
jo
jno
jne
hlt
add
scas
fs
push
mov
je
add
bound
mov
dec
sbb
pop
or
jnp
adc
sahf
mov
pop
jl
xor
cs
cmp
and
fisttp
cli
outs
add
or
or
int3
dec
adc
mul
mov
mov
cmp
pusha
cs
popa
test
mov
jns
int3
mov
mov
jnp
lods
pop
(bad)
mov
int3
mov
or
pop
nop
push
mov
cmp
loope
mov
jne
sahf
jns
fwait
lods
ins
test
cmc
cld
mov
jnp
fcmovnbe
(bad)
stos
loopne
mov
test
retf
(bad)
xor
(bad)
fcomp
out
fs
stos
adc
cli
and
add
sub
mov
and
jae
add
movs
lods
sti
mov
or
aas
jne
fwait
fs
mov
lods
add
cmps
je
mov
cdq
test
sub
js
cmps
mov
mov
gs
js
jl
cmps
inc
and
ja
sub
xor
in
sub
adc
mov
add
jns
adc
ins
add
in
jl
or
jp
out
fnstcw
hlt
ret
movs
mov
(bad)
mov
and
mov
shr
clc
sbb
cdq
mov
out
ja
xchg
cmp
popf
out
rol
jbe
mov
push
xchg
jle
dec
or
mov
ror
ja
cmc
jmp
fadd
std
std
adc
fcomp
xor
add
aas
xchg
ins
xor
ins
jae
ror
repz
adc
adc
cli
mov
xor
push
lods
mov
or
jge
scas
lods
out
lods
outs
hlt
or
push
adc
pop
mov
mov
lock
shr
lds
jl
mov
dec
adc
loope
movs
sub
add
jne
adc
ins
out
out
in
push
loope
lock
xchg
mov
fstp
call
adc
shl
xchg
sub
popf
mov
jmp
xchg
pop
hlt
js
je
mov
mov
and
mov
in
fstp
and
aam
lock
sbb
repz
sbb
adc
xchg
in
scas
sbb
xor
sbb
stos
adc
push
mov
inc
push
add
call
mov
std
xor
sti
lods
or
xchg
mov
jb
jl
lods
call
pushf
fs
je
add
cmp
adc
(bad)
lods
sbb
sar
js
and
fadd
pop
fcmovb
loopne
js
mov
out
mov
jl
jl
ja
test
ins
cmps
xchg
or
test
outs
mov
jne
cmp
cmc
mov
jp
(bad)
cmp
ins
in
xlat
sti
js
rcl
mov
nop
and
push
es
push
cmp
cmp
div
leave
mov
mov
fcom
dec
je
cmp
js
mov
or
pusha
lahf
gs
ins
adc
ins
or
stos
frstor
mov
inc
je
mov
pop
mov
pusha
sub
cmc
(bad)
fimul
push
sbb
cld
mov
and
or
cs
fnstenv
hlt
sbb
stc
loopne
jl
jl
or
pop
xlat
mov
clc
jne
lods
jnp
jmp
test
lea
jl
mov
xchg
xchg
je
jp
stos
xchg
cli
nop
stos
nop
sbb
mov
cwde
test
mov
push
retf
xor
(bad)
and
mov
or
in
lock
sti
lock
nop
jo
je
shl
sub
retf
pushf
add
scas
xor
mov
and
cmp
jnp
cli
mov
fwait
and
(bad)
mov
sahf
inc
and
jl
add
xchg
dec
or
jmp
mov
jae
xor
mov
out
and
jl
sbb
std
add
sbb
cmc
push
out
sbb
jne
cli
popf
jl
pop
int
fidivr
lea
mov
mov
retf
xor
clc
cmp
test
js
lods
test
scas
mov
shl
xor
mov
mov
push
push
mov
mov
call
add
xor
lock
fbstp
add
adc
sbb
movs
inc
or
push
add
fiadd
in
adc
pop
std
adc
push
mov
xchg
or
lods
adc
adc
push
cmps
mov
(bad)
or
mov
jno
js
call
out
fisttp
adc
add
js
cmps
pushf
push
mov
out
clc
lock
adc
jbe
fmulp
mov
arpl
jl
lods
sbb
(bad)
xor
sub
jl
stos
xor
mov
mov
mov
mov
inc
movs
mov
inc
mov
push
(bad)
(bad)
std
jmp
icebp
faddp
push
das
cli
test
test
imul
jne
inc
push
adc
loopne
or
mov
mov
adc
lods
cli
lods
push
test
repnz
clc
mov
dec
mov
add
mov
test
movs
call
clc
xor
push
push
je
mov
jae
sbb
imul
add
sbb
or
nop
and
mul
jo
push
pop
enter
aam
jns
leave
mov
add
xchg
cmp
jl
cdq
sbb
aad
scas
(bad)
jmp
mov
or
cmp
mov
ins
test
jo
mov
test
inc
rol
ret
in
mov
loopne
or
inc
test
mov
aam
and
in
adc
in
adc
push
jo
jl
pop
je
cmc
pop
jo
push
pop
sub
ins
push
pop
sbb
sbb
cmps
test
xor
mov
movs
test
or
sti
in
mov
js
add
mov
int3
push
mov
aam
cli
les
jl
mov
pushf
pusha
push
mov
in
leave
jp
sub
and
jmp
mov
test
fld
data16
jl
enter
les
js
enter
fadd
pushf
dec
sub
xchg
sbb
mov
cdq
fs
cmp
ret
sub
mov
imul
mov
je
loope
sub
fsub
jge
fimul
fs
icebp
loop
cmp
repnz
xchg
daa
lock
push
nop
sbb
dec
adc
inc
ins
test
loopne
jb
stos
movs
js
cmps
lahf
mov
add
jne
jl
jle
imul
sbb
jge
movs
popf
push
jl
add
add
push
mov
mov
xchg
cli
jl
ss
lds
and
mov
adc
fistp
and
neg
call
js
or
jne
lock
test
int3
js
fcmovb
std
adc
rcr
fldl2t
outs
rol
cmp
les
xor
cmp
mov
xor
push
jbe
mov
or
les
in
pop
cmove
mov
pop
fnstenv
in
and
sub
sbb
(bad)
retf
neg
imul
sbb
test
daa
adc
sub
shl
int
stos
cmps
jl
and
mov
sbb
push
mov
push
test
js
mov
inc
fs
jno
mov
sbb
jo
sbb
test
or
fwait
cdq
movs
jl
xor
xor
fmul
dec
(bad)
mov
cmp
xor
or
fs
clc
js
add
in
fucomp
movs
(bad)
aas
je
mov
lock
mov
ret
xor
fbstp
lods
call
jns
ret
in
jns
mov
jmp
(bad)
fcomp
sbb
ror
mov
mov
sub
xchg
int3
mov
mov
je
adc
jmp
adc
jne
cmp
test
shr
repnz
fs
sbb
mov
popa
mov
xchg
push
cmps
jne
or
push
jmp
add
add
stos
mov
cmp
mov
loop
out
cmp
push
ja
repnz
idiv
aam
rcr
or
das
out
call
es
jmp
mov
jo
mov
std
sub
lock
icebp
movs
idiv
nop
out
fadd
lds
hlt
fmul
pop
jo
mov
enter
xchg
and
lock
int3
jge
call
mov
(bad)
fxch
clc
lods
fdiv
mov
int3
std
mov
mov
xor
shl
(bad)
aad
and
loopne
enter
mov
pop
lock
cmp
or
adc
dec
sub
ret
push
mov
sbb
mov
inc
adc
add
movs
mov
lahf
xchg
imul
daa
je
test
cmps
shl
dec
mov
les
rcr
adc
js
adc
push
push
rcr
enter
xor
xor
sub
test
mov
out
dec
and
(bad)
in
or
dec
(bad)
call
call
loopne
pusha
adc
cld
push
mov
ror
stc
(bad)
int3
out
cli
nop
inc
push
jmp
in
call
enter
mov
dec
je
mov
ins
into
mov
ror
fisttp
xor
jl
in
push
inc
mov
sti
out
retf
test
mov
cs
add
or
mov
sbb
dec
test
cld
loope
loopne
repnz
cmp
fistp
xchg
xchg
aam
stc
je
mov
lock
mov
mov
push
cdq
cmp
mov
cwde
inc
std
mov
mov
imul
push
lods
out
or
or
fmul
in
enter
cmp
pop
pop
or
push
ffree
neg
lock
xchg
pop
icebp
loope
sbb
push
jmp
hlt
out
mov
(bad)
lods
jmp
retf
cmps
lods
jne
xlat
jns
mov
arpl
ret
je
mov
loope
xchg
jae
movs
in
sbb
mov
adc
test
adc
imul
jl
xor
aaa
fsubr
call
sbb
jl
mov
nop
push
adc
or
or
ins
add
(bad)
test
adc
int3
sub
hlt
push
fistp
push
or
and
jne
(bad)
loop
add
mov
fs
sub
xchg
sbb
inc
mov
jne
sbb
clc
xchg
les
and
stc
and
scas
xchg
aam
cwde
jns
mul
dec
mov
cld
cmp
rcl
in
cli
in
repnz
mov
test
fadd
sar
cld
add
ds
mov
addr16
jmp
pushf
int3
xor
jo
aad
lods
arpl
iret
cmp
rcr
jl
xchg
dec
js
and
sub
shl
dec
xor
je
xchg
sbb
mov
mov
mov
push
xor
xor
pop
inc
icebp
loop
pop
int
mov
int3
or
push
call
ror
xchg
sub
mov
jmp
jl
sub
mov
xchg
jp
mov
mov
mov
cli
sti
outs
les
xor
enter
into
popf
inc
mov
out
js
mov
retf
mov
cld
imul
xchg
sub
cli
or
clc
in
ret
jns
ffreep
jns
sti
loop
mov
stc
fmulp
retf
xchg
loopne
std
call
das
mov
add
sub
jne
call
pop
in
(bad)
sub
aam
je
xchg
mov
fxch
(bad)
rol
jae
(bad)
pop
cld
call
in
fsubp
popf
and
je
daa
js
cs
mov
jne
aam
pop
and
outs
int3
sbb
and
sbb
(bad)
push
cmps
mov
sbb
mov
sbb
mov
push
(bad)
je
mov
push
nop
mov
movs
mov
or
or
jmp
das
lahf
fwait
xchg
push
cli
jl
or
enter
or
mov
sbb
jmp
std
pop
sbb
nop
jcxz
add
jle
xchg
shr
dec
int
cli
loopne
test
in
cmp
(bad)
nop
mov
ins
add
pushf
addr16
(bad)
je
push
ja
add
iret
cli
adc
test
sbb
push
cld
popa
in
xor
fsubr
in
arpl
into
int3
les
ds
xchg
pop
icebp
jnp
jecxz
into
push
in
std
dec
push
cmp
sbb
ret
cld
enter
mov
jae
or
mov
stos
lods
lods
ror
pushf
addr16
mov
rol
aam
fdivr
pop
xchg
xchg
adc
pop
jb
(bad)
inc
push
nop
aam
mov
je
ins
js
setnp
add
jbe
add
fdivr
dec
retf
leave
and
std
hlt
inc
pop
sbb
in
int3
push
fs
out
mov
and
sti
dec
mov
lea
in
pop
pop
out
aam
jne
idiv
je
int3
enter
aam
out
sub
jae
add
aad
jns
or
in
sub
int
or
in
aam
lock
jbe
jmp
adc
stc
xor
add
dec
jo
call
xchg
aas
jp
and
pop
cmc
nop
sbb
je
repnz
and
cli
mov
fdivr
nop
xlat
lea
lds
in
push
jbe
rcl
(bad)
rcr
rcr
jns
cld
int
and
xor
add
inc
or
lock
lods
mov
js
sbb
movs
jl
mov
(bad)
leave
repz
xchg
cdq
jmp
cmp
or
loop
jecxz
aad
pop
ins
cmp
xchg
cmps
sbb
adc
jns
or
xor
in
xchg
inc
push
jbe
movs
mov
push
dec
cmp
cs
sbb
not
xor
pushf
add
in
fadd
stc
in
and
call
pop
js
hlt
sti
jecxz
mov
test
push
sbb
or
cmp
add
hlt
ja
add
and
sbb
pop
sub
pop
test
pop
lahf
stc
inc
sbb
lock
mov
nop
(bad)
out
scas
mov
leave
(bad)
in
sub
shl
retf
rol
add
jl
inc
mov
mov
enter
xchg
dec
mov
cmps
xor
push
or
or
in
cld
ds
fwait
(bad)
pop
stos
push
out
test
inc
fdiv
sub
cmp
cmp
stos
in
sbb
leave
clc
adc
xor
int
cld
sbb
mov
test
xchg
push
jmp
add
je
jl
cld
out
pushf
std
test
add
pushf
add
jbe
fild
jmp
in
dec
push
hlt
fs
sti
mov
retf
xlat
(bad)
int
mov
mov
js
iret
xchg
mov
in
push
jl
and
hlt
jecxz
xor
rcl
mov
cli
cmps
adc
scas
(bad)
fnstsw
or
cdq
lea
in
jl
imul
cmp
sbb
shl
fcomp
call
fs
mul
lahf
(bad)
inc
and
(bad)
(bad)
push
sub
les
sar
mov
(bad)
jle
shl
cld
enter
cmp
mov
fld
xor
call
add
jle
jmp
mul
in
pushf
inc
add
sub
or
pop
movs
push
push
cli
div
retf
push
je
daa
or
adc
mov
stc
movs
and
mov
sbb
push
sub
and
imul
mov
mov
mov
jmp
and
xor
pop
jns
loopne
dec
mov
add
push
inc
inc
out
mov
loopne
sub
adc
jne
jo
jb
fs
je
sahf
ins
sbb
push
pop
outs
add
aas
outs
mov
aas
js
cmp
mov
lods
and
fistp
inc
and
xor
fcomp
mov
out
mov
pop
xchg
je
mov
cmc
jne
and
je
test
mov
or
mov
(bad)
jmp
(bad)
out
sbb
mov
sbb
out
dec
sub
les
mov
sbb
mov
sub
jno
fst
je
jp
cmp
(bad)
cmp
cwde
out
jnp
rcl
jne
(bad)
jp
loopne
add
test
ins
lock
push
rcl
aad
ja
movs
cwde
xchg
int
js
retf
nop
jb
push
jne
push
je
loop
cmps
mov
lahf
push
and
pusha
push
pop
sbb
fwait
xor
in
sbb
mov
mov
mov
je
je
test
sti
rol
out
ins
or
out
jmp
push
jp
or
stc
add
leave
idiv
je
add
or
jl
or
repz
xchg
cmp
test
out
in
fs
xor
loopne
test
imul
js
add
xlat
xchg
mov
leave
retf
mov
xchg
jmp
or
movs
aam
daa
adc
push
sbb
je
call
jge
icebp
jae
pop
push
xchg
data16
test
mov
mov
mov
into
ror
cmp
xor
or
jge
sar
out
mov
ins
pop
or
test
fstp
jo
icebp
adc
lods
sbb
add
push
adc
fwait
adc
xchg
ins
test
rol
pop
or
and
xor
add
add
daa
dec
(bad)
push
mov
and
mov
mov
or
out
ja
pushf
call
(bad)
adc
mov
test
add
xchg
dec
lods
xchg
pop
jl
xor
mov
push
mov
js
and
or
and
or
mov
cmp
sbb
xor
push
cmp
adc
inc
js
push
sbb
or
pop
inc
xor
cld
sbb
fstp
jmp
add
add
cli
sbb
add
push
lock
and
inc
pop
stos
ins
sub
ins
sub
mov
mov
shl
mov
pop
int3
push
jp
pop
mov
mov
mov
mov
nop
inc
mov
mov
(bad)
shl
xor
mov
add
jmp
mov
inc
or
push
xchg
inc
int3
push
xchg
inc
mov
cmc
or
xrelease
fwait
ins
scas
js
pop
(bad)
push
xor
xor
in
fsqrt
cld
mov
pushf
lahf
pop
icebp
sbb
pcmpeqw
jnp
inc
xor
cmp
cs
cmp
pop
aaa
mov
sbb
fidiv
sbb
and
lahf
je
or
fs
push
adc
aam
sub
adc
ins
sahf
xor
sbb
and
lock
sub
retf
xor
or
xor
push
inc
int3
jne
int3
int
dec
pushf
out
push
enter
or
int3
pop
cmc
add
les
fdiv
addr16
nop
outs
test
dec
dec
xchg
mov
jg
cld
mov
inc
jmp
or
rol
loop
arpl
jp
scas
add
add
push
ins
or
push
movs
clc
and
sar
fs
xchg
ins
cmps
popf
xchg
mov
dec
xchg
pop
fwait
lea
ins
and
in
push
call
or
push
movs
cli
or
mov
xchg
push
loopne
jg
xor
xchg
cmp
xchg
xchg
ficomp
pushf
(bad)
std
cmp
cmp
mov
lods
xchg
sbb
push
cwde
dec
mov
cmp
add
nop
or
test
movs
or
ror
push
and
das
sar
mov
push
mov
xchg
mov
push
leave
test
add
cmp
xchg
mov
jno
js
mov
popa
stos
jbe
dec
cmc
jb
xor
jae
lahf
adc
sub
dec
jecxz
fnstsw
push
xor
js
add
aad
clc
adc
jo
js
test
mov
aad
shl
js
loopne
outs
retf
fsub
out
out
retf
call
aam
push
retf
in
add
add
and
jl
sar
je
jg
fs
push
test
shr
push
ficomp
test
push
cld
ins
pop
mov
imul
jno
je
mov
bound
push
data16
addr16
pusha
push
mov
push
jno
dec
dec
hlt
pop
push
jbe
pop
dec
test
js
jne
mov
(bad)
mov
dec
push
arpl
inc
mov
loopne
outs
cmc
push
jo
jnp
push
int
aam
inc
cld
push
fdivr
arpl
pop
dec
ins
dec
jbe
xor
xor
ins
addr16
in
je
ins
sbb
pop
and
xchg
ins
jne
and
jns
neg
cld
hlt
push
sbb
fs
push
and
in
ja
dec
in
pop
pushf
je
sub
rcr
inc
cld
push
inc
jbe
dec
cmp
inc
fs
cmp
ins
dec
xor
and
aas
scas
or
dec
lods
ds
xchg
mov
hlt
jae
je
addr16
call
mov
jnp
cmc
outs
pop
jo
push
push
je
enter
imul
test
push
jp
jns
cmp
mov
sub
hlt
jge
push
fidiv
aas
inc
dec
pop
sti
push
inc
push
push
inc
xor
dec
pop
cmp
ins
arpl
mov
ins
dec
jo
in
repnz
sbb
jmp
mov
mov
jne
out
cmps
in
data16
inc
cmp
cld
mov
mov
mov
aam
push
enter
pop
aad
xchg
jae
test
jo
xlat
mov
push
gs
cdq
mov
cmps
pusha
push
repz
mov
ror
and
add
ja
mov
mov
imul
int3
mov
test
cwde
inc
pop
iret
mov
push
(bad)
or
iret
mov
test
pop
mov
mov
cld
fnstcw
pop
lods
mov
sbb
sahf
movs
push
(bad)
in
arpl
test
pop
(bad)
ins
and
mov
push
fcom
and
jb
ss
push
call
js
jnp
arpl
sub
mov
imul
xor
and
in
fmul
int3
movs
scas
ror
mov
pop
in
idiv
lds
cmps
cmp
(bad)
lods
ror
call
mov
repz
loop
in
gs
mov
adc
mov
(bad)
es
dec
in
rol
mul
jae
or
mov
clc
out
js
(bad)
in
inc
inc
pop
in
test
inc
or
and
add
push
and
pushf
sub
xor
pop
push
sub
or
not
test
mov
adc
fwait
in
js
mov
push
call
mov
fisubr
xchg
sub
cld
outs
or
ret
div
mov
cwde
ins
push
mov
imul
mov
dec
jmp
mov
sbb
in
dec
push
or
imul
dec
or
adc
leave
pushf
mov
(bad)
mov
fdivr
sub
shl
mov
cld
pushf
dec
loop
cmps
inc
or
repz
stc
adc
xchg
std
or
jecxz
or
mov
add
and
jne
stc
jp
loopne
sub
lods
test
dec
repz
jmp
pop
or
or
adc
push
ins
cmps
ja
or
cld
and
adc
sbb
push
add
js
adc
lock
and
mov
inc
add
xor
mov
push
das
xor
pushf
and
sub
push
subps
jne
fst
fcomp
addr16
int
push
loop
mov
clc
(bad)
sbb
jmp
push
inc
xor
jne
dec
mov
mov
xor
js
sub
les
in
mov
push
das
lock
push
fistp
cmp
scas
jbe
ret
sub
add
cli
shr
je
or
lods
pop
sub
imul
mov
cld
out
aad
cwde
ins
xor
sbb
leave
mov
or
(bad)
in
sbb
lock
fs
out
je
sbb
sub
popa
and
sbb
pop
add
cli
out
add
neg
and
cmp
push
push
ret
inc
or
cmp
test
and
aam
hlt
ret
jnp
sbb
(bad)
pop
je
les
mov
pop
enter
sub
aam
lods
lock
dec
and
ds
inc
push
push
popf
mov
pop
xchg
in
cmps
cmp
test
ins
sbb
mov
dec
adc
sbb
jmp
mov
imul
js
pop
sar
and
mov
adc
cdq
add
icebp
test
sbb
leave
inc
push
lock
inc
push
mov
pop
hlt
or
cmp
add
stc
or
adc
movs
add
add
mov
icebp
fnstcw
pushf
lods
add
add
lods
and
sbb
push
cld
test
adc
test
div
clc
sbb
push
add
push
mov
sbb
lods
add
cld
sub
mov
xor
push
movs
xor
inc
je
retf
and
je
add
(bad)
shl
mov
sbb
xor
dec
push
add
pop
push
imul
test
(bad)
xchg
push
jb
add
les
jp
jnp
cmp
in
cmc
call
scas
push
sub
jns
push
adc
add
les
test
jge
push
fdiv
and
pushf
jl
movs
test
jnp
jmp
test
xor
adc
cld
and
cmp
es
xchg
ss
sbb
sbb
fadd
pop
adc
ins
inc
gs
add
cmp
icebp
neg
mov
into
jo
jmp
out
in
xor
mov
sub
pop
or
sub
sub
add
sub
pop
or
cmp
and
sbb
add
adc
add
mov
cmp
std
mov
out
add
stos
test
das
mov
pop
jbe
sub
in
data16
movs
in
mov
shl
ds
movs
jp
fisub
jne
out
lods
popa
sbb
add
ins
push
dec
jecxz
sbb
lds
out
outs
je
pushf
jle
sar
cmp
je
cmc
dec
cs
add
xor
adc
retf
push
dec
sbb
push
pusha
and
or
cld
repnz
mov
retf
test
test
call
lock
dec
dec
or
inc
aaa
cld
sbb
js
and
fdiv
add
xor
ret
or
imul
js
and
cli
xor
sbb
je
out
loopne
mov
add
ret
cmps
and
lea
rcl
and
(bad)
enter
pusha
mov
xor
jmp
mov
xchg
nop
movs
dec
lods
cmp
jge
inc
test
pop
ficomp
or
je
or
imul
and
mov
in
sub
cdq
inc
sbb
mov
lods
pop
pop
retf
sub
or
mov
fcom
aam
sbb
inc
and
repnz
(bad)
shr
or
cmc
int3
js
or
xchg
sub
cli
les
jmp
popf
adc
push
jl
xor
jo
out
inc
scas
sti
fs
mov
pop
es
sub
dec
jge
and
xor
jo
fsubr
inc
jnp
adc
pop
dec
in
and
pop
mov
push
adc
add
cli
cwde
jmp
mov
bound
rep
mov
cmc
cs
lock
(bad)
outs
(bad)
movs
cmc
iret
sub
retfw
jle
ins
dec
adc
les
fnstsw
adc
outs
xor
ins
jae
push
push
jae
in
cli
adc
sbb
bound
in
push
xor
mov
jns
aad
sti
add
ds
inc
lods
int3
push
sub
movs
fidiv
mov
jne
scas
(bad)
mov
dec
xchg
sbb
sub
push
in
les
aam
in
clc
mov
std
sar
and
repz
and
xor
loope
or
inc
cmp
rcl
cmp
xor
or
ins
repz
outs
inc
inc
inc
inc
sbb
je
aas
dec
in
fdivr
daa
and
add
jo
pop
mov
sub
xchg
and
mov
cmp
inc
push
and
pop
and
fsubr
sbb
int3
aam
std
hlt
fxch
mov
or
div
test
in
mov
fdivr
mov
loopne
cmps
sar
aam
nop
pop
test
imul
jo
push
in
out
jne
push
cli
sub
clc
inc
or
lock
add
fldcw
popf
sbb
stc
lods
inc
pop
out
jo
cli
mov
or
mov
jo
cmc
and
jmp
cld
push
das
hlt
leave
in
mov
(bad)
cmp
call
and
mov
xchg
add
lahf
pop
sti
call
bound
icebp
pop
sub
sar
addr16
in
inc
inc
ds
push
jo
jae
mul
in
fadd
inc
imul
out
les
leave
lea
jmp
sbb
xor
cmc
lock
mov
and
jne
fmul
mov
(bad)
(bad)
rol
sbb
push
(bad)
mov
fs
popf
addr16
fdivr
jae
or
mov
fcom
sar
sub
mov
mov
aam
fidiv
sub
xchg
cld
push
mov
pushf
sub
cmp
pusha
push
adc
jo
clc
mov
dec
sub
sub
leave
int
cmc
sub
mov
aad
cmp
xor
test
lods
sub
sbb
fnstsw
adc
int
mov
repz
cld
js
or
ret
shl
xor
loopne
data16
das
sub
loopne
addr16
dec
je
stos
pop
ss
je
ret
imul
push
loope
mov
xor
int3
js
fistp
shl
mov
int3
je
mov
int3
loopne
mov
sbb
in
xor
add
push
jl
sbb
and
pop
std
hlt
inc
or
(bad)
repz
aas
or
sbb
cld
iret
std
loopne
sub
and
mov
cld
sbb
push
in
inc
or
mov
js
int3
sub
lock
in
hlt
dec
push
out
jo
adc
mov
and
inc
jae
in
(bad)
lock
mov
out
jge
daa
adc
pop
sbb
cmp
aas
xor
aam
jmp
add
movs
pop
push
repnz
hlt
dec
xor
and
cmp
xor
fsub
pop
mov
fnstcw
enter
push
test
(bad)
pop
pop
or
jmp
xchg
leave
sbb
(bad)
push
in
lea
mov
rol
aam
icebp
adc
ins
add
cdq
mov
cmp
mov
fucomp
mov
sub
(bad)
add
fistp
rcr
jns
jmp
push
sub
push
std
cwde
inc
adc
pop
add
dec
cld
cmp
or
add
jne
add
jl
idiv
mov
scas
xchg
push
pushf
ins
adc
fcom
in
ins
sbb
fcom
jmp
jns
sbb
lods
jo
push
out
cmp
out
adc
jmp
and
push
and
jae
sub
das
sub
popa
dec
dec
sbb
add
dec
sbb
push
push
mov
dec
inc
mov
mov
jne
push
dec
daa
in
add
adc
nop
sbb
cli
push
cli
mov
adc
cld
mov
jg
cmp
imul
xor
in
fsubr
mov
pop
mov
jne
or
or
mov
movs
sbb
les
popa
jecxz
sar
sar
pop
cmp
fdivr
mov
or
in
push
into
cwde
test
push
mov
xor
test
stos
test
mov
xor
dec
dec
push
jne
(bad)
mov
ret
call
stos
cmp
inc
pop
aad
cmp
jbe
push
fcom
jne
(bad)
std
movs
and
repz
and
or
push
cs
adc
xor
pop
movq
test
pop
ins
jle
or
pop
sbb
add
mov
cmp
sbb
ds
lea
dec
adc
adc
add
fcom
adc
inc
cli
repnz
and
jb
pop
dec
fs
ret
ror
cmps
mov
cmps
or
lods
lods
mov
stos
movs
jp
ret
mov
mov
cmp
and
adc
cmp
fist
or
jbe
add
pushf
lock
cmp
sti
hlt
ds
cmp
xlat
mov
push
push
fidiv
movs
popa
mov
jg
clc
fisubr
mov
push
xor
xor
pop
mov
enter
int3
mov
adc
hlt
nop
clc
sub
adc
mov
call
aam
or
movs
pusha
adc
inc
adc
push
nop
(bad)
mov
push
sub
pop
pop
xor
mov
adc
imul
es
or
dec
data16
(bad)
in
and
(bad)
mov
enter
fmul
cs
les
dec
sar
mov
sti
mov
xor
xor
or
xchg
push
pop
cmp
inc
or
js
or
mov
mov
sub
jbe
sub
les
stc
mov
frstor
dec
nop
out
mov
fs
lahf
fs
fld
ror
pop
add
loopne
xor
jnp
inc
sub
pop
hlt
sbb
outs
inc
cs
and
pop
inc
xor
xor
and
pusha
ja
adc
add
jo
mov
ja
daa
arpl
ss
dec
xor
and
das
pop
js
xchg
popa
pop
pop
dec
je
mov
(bad)
inc
xor
sub
je
ins
(bad)
repnz
cmp
loope
mov
fnstsw
mov
cmc
hlt
and
jecxz
jne
test
ja
jecxz
shl
in
jl
sbb
repnz
data16
retf
test
fs
add
js
cmp
into
jbe
rcr
cmc
sub
call
fld
js
shr
test
cwde
jp
sahf
cmp
ins
call
mov
xlat
mov
push
inc
adc
add
inc
rol
mov
jle
jb
das
mov
add
dec
xor
test
push
je
popf
les
xchg
jne
and
(bad)
or
sbb
in
mov
adc
add
xor
cmp
ds
dec
pushf
pop
cs
sub
clc
icebp
jge
out
in
mov
repz
(bad)
fcmovne
rcr
cmp
push
xchg
inc
push
loop
jl
cdq
mov
ja
gs
xlat
rcl
push
fcomp
addr16
jns
inc
push
sti
nop
inc
fcmovnbe
imul
lods
dec
js
in
std
icebp
or
sbb
xlat
test
js
mov
mov
stc
jle
xchg
mov
or
xor
fwait
pop
mov
adc
jbe
adc
fsubr
in
sar
sbb
in
sub
jnp
dec
cmp
popf
cmp
pop
jo
ror
adc
sub
not
pop
mov
(bad)
loopne
jo
or
or
or
push
and
cli
call
and
pop
clc
ins
push
enter
cmp
cmp
out
inc
or
jp
out
jmp
out
add
fs
add
sub
sub
loope
lods
fs
inc
dec
mov
int3
call
jae
inc
xor
test
xor
mov
aaa
add
cmp
nop
xor
ret
sbb
int3
test
add
xor
mov
popf
jae
repz
cmc
mov
mov
pop
retf
jl
retf
lds
sahf
test
pop
stos
xchg
pop
add
mov
psubusw
pop
and
push
imul
and
dec
fs
loop
mov
(bad)
xlat
mov
repz
xchg
push
cmp
xor
adc
xor
and
xor
lods
jne
out
frstor
cmp
xor
push
pop
and
inc
mov
push
or
push
fs
xor
sub
dec
outs
jl
aas
pop
pop
aas
sbb
sub
sbb
sbb
sbb
adc
sub
or
cmp
jmp
mov
mov
ins
push
jl
cmp
xor
rcr
sub
cli
call
sbb
fadd
cmp
xlat
movs
in
dec
les
loop
xor
ins
mov
xor
jbe
into
mov
jo
xchg
rcr
and
pushf
mov
xor
sub
and
jp
adc
xlat
mov
std
(bad)
pushf
je
cld
and
(bad)
clc
js
mov
int3
call
enterw
fcom
mov
js
sbb
(bad)
cmc
adc
rol
lods
in
push
push
in
ficomp
inc
pop
and
jo
sub
mov
inc
push
popa
mov
jne
push
jae
cmps
hlt
mov
push
das
jl
adc
ins
pop
inc
cmp
test
jne
xor
clc
xchg
inc
ror
cmp
movs
jo
pop
and
in
je
rol
scas
inc
push
jno
xor
push
out
test
ss
dec
je
lock
fsubr
jns
test
mov
lock
cmp
add
pushf
sti
mov
test
stos
mov
cmc
jl
in
ds
mov
dec
cli
jl
lock
in
aam
add
jns
xor
call
in
cld
stc
sbb
cli
pusha
in
xor
(bad)
and
shl
or
out
pushf
adc
icebp
in
add
push
sub
mov
fsub
jecxz
sub
cli
cmp
jl
das
and
dec
pushf
cmp
dec
xor
and
outs
dec
sub
out
arpl
jne
pop
push
dec
ja
dec
mov
jns
and
fcomp
cs
imul
dec
sub
leave
scas
call
js
xor
jl
shr
mov
repnz
fwait
jl
pop
adc
jns
pop
loop
mov
test
test
xor
mov
fcomp
cmp
fdiv
scas
nop
add
mov
push
cmp
adc
in
jo
les
inc
jecxz
or
adc
je
ins
jae
sbb
adc
and
add
sbb
repnz
aam
mov
into
retf
movs
mov
fadd
fisttp
pop
push
sub
repz
out
(bad)
mov
mov
nop
inc
cmp
cmp
fs
pop
in
movs
xchg
dec
mov
sub
push
xchg
js
sbb
xchg
push
into
js
inc
and
xor
mov
test
sti
in
sub
fidivr
daa
lods
ins
loop
xchg
sbb
rcl
leave
jmp
hlt
std
pop
jmp
inc
fs
xchg
or
int3
cdq
push
adc
sub
push
shl
fldenv
cli
xchg
mov
jo
pop
test
inc
add
jp
clc
sar
add
mov
cmp
das
loop
push
shl
pop
add
push
fs
mov
or
cmc
test
jl
loopne
dec
aad
add
in
into
mov
fadd
in
ror
lods
fmul
fcmovnbe
fdivr
jmp
cmp
mov
pop
pushf
cmp
jmp
addr16
lods
push
pop
pop
dec
jle
cmp
sbb
or
mov
imul
cmp
adc
repz
jmp
addr16
das
add
xor
shr
iret
pusha
aam
pop
mov
fdivr
push
dec
mov
ja
clc
mov
mov
sbb
sub
xor
push
fstp
sub
sub
sbb
fsub
cmps
pushf
jne
sahf
adc
aad
or
aas
(bad)
xchg
call
addr16
(bad)
cmp
and
stc
sbb
ret
jbe
into
mov
cmp
adc
and
jl
inc
aaa
pop
push
loopne
xor
call
loope
pop
add
call
mov
paddb
test
xlat
pop
sar
jne
or
add
je
aad
loopne
push
lock
fcomp
mul
fwait
mov
jmp
mov
dec
mov
in
movs
mov
stos
mov
les
out
in
xor
aam
add
jl
mov
jae
dec
je
jl
fistp
int3
mov
xor
je
out
or
xor
repz
or
out
mov
mov
cwde
fsub
nop
push
loop
sbb
(bad)
loop
xor
dec
out
stos
fs
cmp
push
das
paddusw
inc
jbe
in
hlt
push
or
imul
jnp
push
or
add
pop
add
repz
mov
mov
stos
test
mov
(bad)
sbb
movs
lods
(bad)
jp
mov
sub
add
test
xchg
dec
sub
push
aad
mov
xchg
push
adc
(bad)
and
mov
xor
adc
dec
call
aam
mov
jne
aas
add
or
adc
loopne
cmc
hlt
in
sar
es
cmp
das
repnz
test
xor
mov
sub
xchg
jns
mov
mov
pop
sub
shl
les
das
in
or
xor
movs
push
mov
sub
fld
nop
imul
jae
add
inc
data16
mov
xchg
je
push
out
mov
add
pusha
mov
cmc
call
or
daa
add
add
xor
je
in
into
mov
mov
mov
dec
xchg
pop
js
xchg
cmp
shl
mov
xor
ret
mov
jo
jecxz
xor
jne
aad
ins
test
jno
add
push
outs
sub
retf
fmul
mov
mov
les
out
enter
lea
enter
mov
cmp
push
xor
cld
je
lds
out
ins
or
mov
xor
cmp
pop
sti
loope
adc
cmp
loopne
xchg
in
jl
jmp
pop
fs
je
mov
jbe
and
test
and
neg
mov
ins
xchg
and
lock
push
dec
add
cmp
cmps
test
mov
lods
jne
imul
jp
mov
xchg
sub
pop
pop
xchg
mov
lea
jne
cwde
daa
sti
cmp
cmps
dec
sar
mov
es
and
call
shl
addr16
test
clc
cld
adc
out
jae
test
fisub
aad
or
jbe
aaa
std
sub
cmp
shl
mov
dec
jl
jl
dec
xchg
lods
jl
mov
xor
les
lock
jmp
cs
add
mov
mov
nop
fild
cmp
sub
leave
nop
les
pushf
js
shr
or
js
or
cli
or
test
nop
gs
fnstenv
pop
inc
xchg
lods
(bad)
je
ins
add
ret
stos
sti
xchg
add
cdq
sbb
xchg
sub
cwde
xchg
scas
cmps
xchg
or
div
sti
test
retf
imul
mov
pop
clc
mov
or
mov
std
xor
scas
cdq
out
add
aam
pop
xlat
je
pcmpgtw
mov
push
push
mov
inc
(bad)
xchg
jl
imul
sbb
repz
lods
sub
pop
jl
mov
sbb
call
xor
icebp
(bad)
xor
jl
cmps
mov
add
jns
push
or
and
nop
and
call
or
stc
xchg
(bad)
nop
nop
fs
mov
fdiv
cmc
adc
(bad)
push
mov
dec
mov
xchg
lea
int3
sbb
xchg
int3
sub
push
nop
test
mov
mov
int3
and
int3
adc
and
mov
imul
mov
mov
mov
adc
mov
sbb
jmp
not
add
add
fld
lods
mov
movs
fdivr
loop
mov
pop
jl
mov
mov
mov
sub
mov
pushf
adc
pop
fistp
push
shl
out
mov
pop
(bad)
call
(bad)
stc
cmp
int3
dec
push
sti
or
mov
and
je
or
push
jmp
xchg
adc
int3
sti
push
jp
mov
sub
cmp
scas
stos
ja
popf
inc
ja
xchg
mov
mov
pop
hlt
fwait
ins
xor
outs
sub
and
popa
ret
(bad)
retf
mov
sbb
(bad)
and
in
jle
imul
sub
mov
dec
ror
clc
pop
cmp
add
inc
fnstcw
pop
into
mov
jne
popf
sbb
bnd
xor
xor
rol
push
es
jl
in
js
cdq
inc
cmp
sub
les
loope
lods
sti
inc
mov
jmp
xor
adc
(bad)
sbb
and
adc
jl
mov
add
sti
cwde
in
loop
push
jl
(bad)
jbe
aad
int3
gs
neg
fcomp
stos
(bad)
sbb
mov
test
xchg
test
xchg
lea
nop
mov
mov
in
popf
xchg
mov
push
(bad)
mov
retf
mov
xchg
cmc
int
ins
enter
cmc
jmp
add
fs
sgdtd
std
pop
cld
or
ins
gs
sar
cmp
std
aam
icebp
leave
dec
pusha
inc
je
add
cwde
jne
call
jp
je
sbb
mov
cmp
cmp
sub
and
sbb
xchg
and
cmp
or
in
adc
retf
dec
mov
sub
test
and
clc
push
in
and
cmp
mov
mov
loopne
addr16
pop
cmps
cld
(bad)
or
repnz
(bad)
mov
add
call
xchg
mov
movs
lahf
mov
cmp
test
js
jge
mov
cmp
jne
mov
cli
fmul
test
mov
ficom
rcl
pop
adc
push
and
nop
out
ds
jns
or
mov
imul
movs
jl
sbb
mov
outs
push
loope
cmp
popf
sub
jl
jmp
shr
sub
sub
test
in
dec
sbb
je
(bad)
cmp
test
int3
cmps
cld
ds
dec
cmp
repnz
repz
cmp
and
adc
adc
xchg
pop
bts
jo
add
pop
out
icebp
(bad)
fcomp
jo
and
in
jmp
inc
lahf
pop
xchg
and
fiadd
movs
popf
gs
add
pop
cmp
sbb
lds
dec
ret
mov
xor
int3
lods
int
mov
sub
mov
sub
or
xor
pop
sub
lea
jns
hlt
int
fmul
fstp
pusha
mul
pop
pop
add
leave
jge
add
mov
jecxz
lahf
in
jmp
fwait
in
sub
pop
in
mov
and
mov
repz
fst
pushf
add
loop
sbb
ins
sti
(bad)
jp
add
movs
or
dec
sub
in
and
sub
push
and
push
or
call
clc
repz
mov
ficomp
adc
dec
out
mov
mov
fcomp
stos
scas
pop
test
retf
xchg
fcom
ret
leave
in
aam
mov
(bad)
xchg
xchg
fs
mov
sub
icebp
add
xchg
sahf
pop
ins
mov
nop
add
pop
jl
xchg
fbld
push
add
bnd
mov
int
test
or
cmps
mov
loope
dec
mov
jl
jns
repz
jl
sti
xor
and
mov
daa
loopne
jb
(bad)
jne
fdivr
adc
jnp
rcl
pop
jl
jl
cli
(bad)
mov
inc
adc
iret
in
ins
in
(bad)
sbb
jb
retf
sbb
add
hlt
mov
mov
add
mov
sbb
xchg
sti
cli
enter
sbb
mov
cmp
mov
fidivr
ficomp
stc
lock
loope
dec
add
mov
retf
mov
pop
fist
retf
jae
loope
test
sbb
jmp
push
stos
jl
jns
(bad)
in
mov
add
stos
ins
pushf
mov
fbstp
cdq
add
jne
sahf
(bad)
fcom
push
mov
lock
adc
cld
add
in
push
push
into
call
sbb
cmp
lds
popf
test
jb
sbb
fstp
mov
adc
mov
sbb
je
and
push
pushf
sti
clc
xor
jl
xor
mov
les
call
lock
lds
adc
sti
push
cmp
pop
xor
fsubr
fsubr
enter
es
pop
inc
in
mov
pop
pop
adc
sbb
dec
fcmovb
inc
retf
mov
in
test
mov
cli
mov
repz
pop
fst
dec
clc
fiadd
and
aam
inc
adc
fs
fwait
and
xchg
pop
jmp
lahf
or
cli
jns
int
push
add
mul
push
mov
and
stc
sub
test
mov
std
leave
sahf
push
xor
cli
test
in
or
mov
in
in
or
loopne
inc
test
xor
sbb
jmp
rol
ds
daa
outs
dec
dec
xor
scas
push
xor
or
sub
sar
add
fsubr
adc
sbb
add
ret
push
add
sbb
sub
push
out
loop
int3
xchg
fisttp
cmc
hlt
mov
je
sbb
push
ret
sar
clc
inc
clc
jg
sbb
cli
enter
lock
clc
in
jo
xor
fdiv
mov
jl
and
retf
sub
jl
js
sbb
adc
add
pop
mov
mov
fsub
aad
dec
shl
nop
mov
std
xchg
icebp
mov
mov
clc
add
mov
stc
mov
sub
jg
xor
add
adc
or
fcmovne
mov
cmc
sub
stc
jmp
and
js
cmp
jg
cmp
jp
sub
lock
mov
mov
(bad)
retf
(bad)
hlt
fcomp
int3
fcomp
retf
popa
and
mov
mov
xor
std
movs
or
mov
outs
mov
enter
mov
aad
jne
movs
nop
sub
pop
xor
jl
dec
and
out
mov
je
lds
shl
jne
mov
ja
mov
retf
fidivr
cmovo
add
cld
leave
cmp
in
and
mov
js
not
shr
cmp
shl
jmp
xor
mov
repz
add
mov
fxch
mov
xor
adc
(bad)
sti
js
jecxz
call
mov
out
aas
mov
hlt
popf
ret
aam
mov
pop
inc
std
repnz
inc
out
add
pop
lds
scas
and
imul
loop
std
add
or
cmps
ds
sub
jnp
leave
nop
fsub
in
out
rol
int3
xor
imul
clc
js
and
sar
imul
jne
pop
imul
adc
(bad)
data16
and
sahf
loope
imul
movs
jl
mov
mov
clc
push
pop
jl
push
xor
dec
and
js
jl
out
mov
std
stos
jl
movs
dec
xor
std
push
shl
fs
idiv
pop
cwde
or
add
xor
hlt
rol
jp
or
out
js
mov
aam
and
push
scas
movs
sub
mov
mov
mov
movs
lahf
int3
jo
adc
xor
bound
and
xor
xor
enter
mov
movs
push
xchg
sub
push
jne
stc
jl
mov
std
cmp
jmp
xor
jl
adc
and
adc
clc
and
nop
jne
in
int
int3
rcl
ins
stc
mov
test
imul
jp
fidivr
jae
dec
js
jl
xchg
js
cmp
into
jne
call
or
xor
adc
cld
cmp
hlt
or
stos
test
mov
jo
ret
sahf
sbb
dec
xor
std
mov
ins
adc
dec
not
jne
or
cld
adc
test
pushf
xor
fsubr
nop
dec
mov
add
sub
jne
retf
ror
mov
adc
into
jp
popf
mov
xchg
mov
jecxz
mov
inc
clc
scas
cmps
mov
ss
test
pushf
das
movs
jo
lds
mov
mov
pushf
push
test
pushf
jl
iret
push
mov
xlat
movs
aas
enter
push
jmp
and
jnp
sub
hlt
dec
mov
aam
add
test
out
jmp
mov
and
fucom
fst
call
pop
push
and
dec
fs
les
cmps
jmp
not
xor
mov
xor
repz
cmp
mov
ror
mov
fdivr
pop
add
enter
adc
cli
mov
cmc
out
js
ror
push
mov
add
idiv
(bad)
stos
movs
xchg
xchg
js
sbb
xchg
fld
int3
ret
mov
lods
push
movs
call
push
fs
dec
mov
adc
popf
mov
pushf
(bad)
mov
je
push
(bad)
mov
fsubr
add
pop
aam
test
xor
call
inc
mov
lock
jecxz
cvtps2pd
sbb
addr16
mov
push
mov
mov
and
dec
xchg
rcl
inc
jne
(bad)
(bad)
inc
jmp
scas
xchg
test
add
mov
lock
test
mov
and
xor
fdiv
jae
test
inc
add
xor
in
mov
hlt
xlat
sar
ror
mov
fs
xor
mov
pop
mov
dec
mov
je
movs
xchg
xor
(bad)
and
jmp
jmp
inc
ror
cld
push
cmp
std
add
mov
in
enter
je
cwde
clc
(bad)
(bad)
nop
movs
push
and
mov
std
ror
and
mov
inc
adc
int3
int3
stos
jmp
push
or
call
or
add
in
fmul
out
sbb
pop
js
loope
pushf
push
fnsetpm(287
les
shr
pop
and
fdiv
enter
test
jl
into
cmps
mov
mov
int3
add
xor
cmp
test
aad
les
push
ret
jb
cmp
scas
movs
jp
ror
jns
imul
stos
xchg
jbe
mov
call
aam
data16
mov
adc
mov
push
ds
mov
je
std
mov
jno
sahf
clc
cmp
fidivr
(bad)
jmp
ss
adc
fnstenv
or
mov
sub
mov
movs
inc
push
pushf
in
retf
xor
test
push
aaa
pop
jge
pop
fidiv
adc
js
into
cmp
repz
leave
jp
shl
jge
cmps
(bad)
shl
(bad)
mov
lock
cwde
or
out
pop
sbb
add
in
je
sub
sub
cmp
mov
outs
xchg
jns
nop
into
enter
leave
in
(bad)
scas
test
xchg
ret
pushf
xor
aam
xchg
mov
nop
mov
mov
call
pop
clc
push
pop
gs
mov
xchg
or
mov
xor
das
ret
sbb
xor
out
(bad)
cmc
aam
jl
psubb
xor
jp
or
mov
lods
and
mov
mov
nop
std
nop
retf
sbb
out
xor
push
sbb
push
rcl
clc
movs
test
mov
aam
cmc
loop
pop
push
xor
pop
int
xchg
mov
out
push
or
add
les
dec
add
push
add
cli
jg
or
test
push
mov
mov
rcr
out
xor
test
xor
out
and
imul
mov
lds
adc
mov
lea
test
pop
lods
mov
lahf
fs
mov
stos
push
lds
push
int3
shl
jl
xor
dec
or
push
(bad)
scas
test
jae
pop
movs
mov
sub
aam
xor
arpl
xlat
and
jp
inc
sbb
jl
repz
test
or
cmp
js
add
hlt
push
clc
mov
cmps
cmp
and
cmp
mov
pushf
add
loope
add
call
(bad)
mov
fnstenv
(bad)
pusha
xor
cld
mov
cmps
sbb
fwait
pop
cld
mov
add
xchg
nop
fnstcw
xchg
mov
ror
retf
sbb
movs
mov
(bad)
sahf
mov
jl
popf
xchg
ret
cmp
mov
dec
retf
xor
cld
dec
xchg
(bad)
scas
je
(bad)
in
movs
in
jl
stos
mov
add
test
ja
fmul
(bad)
stc
loope
mov
test
int3
mov
xor
jl
sbb
je
out
mov
mov
jne
int
daa
ss
jo
je
dec
(bad)
ficomp
add
jge
xlat
or
test
mov
jne
cld
or
jo
mov
in
mov
les
stos
je
(bad)
jp
psadbw
int3
sbb
in
loopne
mov
mov
addr16
lahf
les
mov
ret
mov
xchg
test
lahf
cwde
les
nop
mov
xchg
mov
mov
scas
push
test
pop
mov
pop
push
pop
pop
clc
jo
xchg
fsubr
sahf
mov
nop
adc
scas
in
(bad)
into
mov
sub
int3
sbb
out
test
in
mov
cld
or
jecxz
popa
and
cmc
pop
inc
or
fsub
leave
or
jl
jo
out
rcr
in
lods
test
ret
nop
das
xchg
shl
add
retf
stc
sar
mov
and
call
jl
or
mov
xchg
cmc
jecxz
xor
ret
mov
ror
retf
cmp
cmp
pop
xchg
push
xchg
fdivr
cmp
movs
mov
mov
loop
jne
mov
pop
jnp
sub
dec
js
into
hlt
xor
popa
pusha
(bad)
je
(bad)
mov
clc
xor
mov
je
mov
pop
out
inc
or
push
test
into
jns
sub
jne
and
push
sub
jl
push
push
jge
clc
shl
pop
jmp
xor
push
leave
sbb
fnstenv
test
movs
int
imul
loopne
cmp
mov
js
int3
mov
dec
ret
xchg
js
mov
ja
sbb
jecxz
add
fdiv
(bad)
std
or
(bad)
mov
cmp
xchg
xchg
fwait
sbb
lock
mov
xchg
xchg
js
je
test
lock
mov
imul
pop
icebp
push
retf
je
push
push
ins
inc
sub
ret
loop
and
adc
das
fsub
lock
into
pop
pop
loopne
nop
push
inc
outs
mov
lods
add
inc
data16
xchg
jl
outs
mov
pop
jne
push
push
push
push
mov
das
neg
push
mov
push
std
les
(bad)
add
mov
sbb
mov
jmp
mov
sub
jae
fldenv
and
mov
js
mov
xor
stos
xor
mov
je
cwde
xchg
test
cwde
jmp
lods
jno
mov
out
mov
neg
js
inc
aas
pop
xchg
push
mov
arpl
and
nop
pop
and
cmps
bound
in
call
push
jae
in
cmp
int3
pop
sub
shr
mov
fstp
xchg
js
jl
adc
pushf
jbe
sub
addr16
cwde
movs
cs
in
gs
or
and
mov
jae
rcr
je
mov
dec
sub
cmp
jmp
fldenv
jl
retf
fwait
lea
pushf
jo
mov
and
outs
sbb
test
stos
and
xchg
xor
scas
movs
mov
add
mov
xor
pop
mov
pop
nop
xchg
mov
adc
inc
jl
xchg
gs
dec
shl
fnsave
ins
sar
or
jp
xchg
rcr
pop
int3
cmp
out
rcr
cld
or
in
ins
cs
add
popaw
sub
pop
xchg
je
shl
sub
push
ja
es
mov
retf
cmps
or
mov
mov
movs
test
or
and
cmp
xor
sbb
test
mov
mov
js
(bad)
pop
repnz
and
das
or
clc
js
(bad)
mov
add
cwde
mov
fdiv
popf
xchg
sar
push
mov
xchg
xor
ins
nop
xlat
adc
and
mov
int
push
mov
js
xchg
push
xor
mov
mov
cmps
mov
ins
jecxz
std
mov
and
or
jbe
jmp
mov
jmp
std
xor
mov
call
push
lea
mov
fstp
xor
pushf
mov
cmp
cli
mov
mov
cld
xor
in
xor
fs
(bad)
in
clc
ret
hlt
and
sub
test
out
je
sub
mov
movs
cmp
nop
js
add
xor
mov
int3
(bad)
dec
mov
mov
js
lods
mov
test
retf
fnstcw
(bad)
push
mov
xchg
xor
pop
mov
cmp
js
jne
call
push
jbe
pushf
xchg
cmp
cdq
mov
je
enter
out
mov
lods
fsub
mov
enter
aad
mov
movs
pop
dec
out
lods
xor
int3
mov
sbb
rcl
(bad)
movs
in
xlat
adc
mov
mov
call
mov
push
fidivr
in
jnp
call
mov
push
fnstsw
std
and
mov
ins
loop
jnp
cmc
mov
dec
idiv
pushf
repnz
lods
call
in
mov
lods
xor
lods
mov
movs
mov
sahf
mov
sbb
lods
movs
clc
push
cmps
pushf
xchg
mov
mov
scas
mov
fisttp
mov
lock
sahf
pushf
stos
xchg
cmp
test
call
adc
popf
daa
xchg
cmp
rcl
push
inc
icebp
xor
in
jno
ffreep
je
pop
adc
mov
and
std
mov
push
jbe
jmp
inc
fild
jnp
cmp
outs
push
inc
out
or
mov
sahf
and
movs
mov
add
push
fdiv
inc
test
xor
mov
ins
in
test
mov
sub
fcom
leave
nop
sar
mov
fsubr
das
shl
clc
shl
add
rcr
xor
js
mov
ret
inc
push
mov
scas
or
xchg
mov
mov
push
ret
jo
mov
mov
mov
jns
shl
inc
cmps
loop
sbb
xor
mov
or
jne
fadd
movs
in
in
test
and
sub
shl
in
cmps
jnp
push
int
fdivr
add
shr
ins
jbe
movs
xchg
enter
or
test
inc
sar
(bad)
xor
inc
test
dec
and
sbb
out
cmps
mov
neg
loopne
fmulp
lods
push
test
cmc
mov
lods
inc
dec
in
not
scas
(bad)
les
ins
push
add
pop
retf
adc
int3
push
fild
dec
psrad
repz
call
fidivr
push
shr
hlt
test
sbb
je
mov
jl
in
enter
xchg
loope
ret
mov
pop
in
(bad)
inc
out
sbb
lds
push
cmp
repnz
sti
out
scas
cmp
sbb
les
push
loopne
mov
sub
loop
jo
mov
fbstp
cmps
mov
cld
outs
inc
or
out
je
xor
bound
push
imul
nop
cwde
dec
icebp
adc
rcl
dec
ret
in
ret
rcr
je
nop
push
add
xchg
ror
xor
and
mov
xor
jmp
sahf
push
ins
retf
sbb
movs
das
out
sti
clc
sub
sbb
jecxz
fcomip
call
cli
call
add
jo
(bad)
in
and
xor
loopne
mov
clc
retf
aam
inc
out
rol
add
dec
(bad)
in
je
cmp
mov
shl
jmp
sub
lock
push
jae
sbb
xor
mov
test
fs
stos
iret
les
dec
out
pushf
or
pop
sub
dec
jecxz
in
cli
shl
cmps
clc
mov
mov
clc
cdq
pop
nop
aam
push
fimul
lods
inc
xor
mov
dec
ja
pop
dec
mov
shl
jmp
xor
xchg
out
je
mov
jmp
jbe
loop
in
dec
loopne
hlt
jecxz
cwde
push
hlt
shl
add
fsub
xor
out
(bad)
fcom
cld
shr
in
lods
push
and
and
ins
repnz
adc
nop
pop
icebp
retf
je
lea
mov
rcr
mov
pop
icebp
call
sti
(bad)
call
add
fist
sub
xor
mov
ss
xchg
fadd
xor
or
mov
(bad)
out
inc
sbb
fisub
jmp
mov
movs
out
mov
dec
push
or
les
lods
sbb
pcmpeqw
sub
cs
aam
dec
clc
lods
mov
fmul
adc
sub
cwde
xlat
loope
cmp
cld
jmp
stc
jle
lods
ja
dec
sbb
mov
fadd
pusha
imul
xchg
(bad)
cld
xchg
push
(bad)
mov
lfs
js
loopne
call
(bad)
stos
mov
push
outs
mov
scas
jne
fisttp
ja
std
ret
push
mov
je
retf
mov
loopne
mov
pushf
sbb
xchg
mov
scas
shl
ins
mov
fdiv
sbb
jne
mov
cmp
jns
out
into
mov
call
fadd
jne
rcr
dec
js
movs
xchg
fcmovb
add
movs
xchg
movs
or
and
in
mov
lea
pushf
mov
dec
ss
inc
je
dec
nop
jae
cmp
adc
fsub
and
cmp
adc
mov
push
inc
in
ins
ds
inc
jo
arpl
imul
imul
test
inc
jo
aas
inc
pop
dec
in
ins
jb
cmp
sub
jbe
push
arpl
cmp
push
inc
sti
sub
push
gs
shl
pushf
iret
je
sbb
outs
jg
cwde
jae
jp
push
add
jae
into
dec
je
js
nop
xor
ja
jmp
pop
xchg
pop
sub
cld
push
fstp
jae
jne
push
inc
jo
gs
sub
hlt
dec
cld
ja
mov
pushf
push
cmp
fwait
addr16
fbld
cwde
push
imul
xchg
jmp
movs
sti
(bad)
int3
in
leave
pushf
dec
call
js
sub
push
mov
pop
lea
mov
push
hlt
and
push
and
jge
outs
push
jnp
push
scas
pop
loopne
pushf
jno
(bad)
aam
mov
adc
js
xchg
fcom
jp
jbe
jo
stos
daa
dec
cld
and
ins
ret
loopne
xor
push
lahf
stos
push
push
mov
(bad)
cld
mov
dec
jns
dec
sbb
ins
stc
loopne
xchg
inc
ds
dec
jp
push
jo
xchg
xchg
stos
mov
pop
adc
call
push
cmp
je
fs
jne
jp
addr16
data16
gs
gs
mov
jge
xor
push
jo
jbe
push
push
arpl
push
jb
push
pop
pop
pop
xor
push
popa
cmp
test
js
imul
mov
outs
jmp
inc
fs
je
outs
js
(bad)
or
ins
push
stos
mov
ds
fs
frstor
push
gs
aam
add
sub
js
std
ja
jae
inc
jno
outs
ds
imul
inc
pop
inc
or
and
movs
jns
jle
cmp
jnp
fs
ins
mov
and
dec
pop
add
xor
sub
pop
sub
ja
arpl
pop
jae
std
jbe
mov
lods
shr
add
add
in
sti
sahf
mov
or
fwait
loope
jo
xchg
scas
xchg
outs
mov
pushf
bound
xchg
pushf
mov
cmps
inc
mov
pop
jne
movs
les
mov
scas
cmps
sti
je
mov
pop
js
mov
dec
movs
mov
cld
arpl
stos
mov
inc
cwde
inc
test
mov
mov
xchg
cmc
movs
retf
(bad)
nop
push
bound
movs
scas
lds
jge
jno
pusha
push
fdiv
push
daa
inc
inc
outs
pop
ss
jne
push
stc
sbb
xor
fadd
and
mov
sub
mov
fsub
mov
mov
fstp
lahf
shl
loop
mov
arpl
aad
mov
js
scas
mov
js
ds
nop
mov
adc
push
loopne
repz
in
cmp
leave
mov
push
int3
pushf
(bad)
or
ds
ds
mov
into
mov
jmp
push
in
aas
idiv
out
loopne
and
pushf
lods
call
hlt
add
idiv
clc
std
xchg
popf
add
mov
int3
(bad)
or
fwait
lea
push
out
pop
push
lock
or
stos
jne
pop
jl
push
sti
test
fdivr
cld
ds
mov
mov
fcomp
rcr
fistp
xchg
inc
jmp
in
gs
retf
fdiv
mov
or
mov
xchg
mov
test
jne
dec
clc
mov
stos
outs
xchg
mov
sar
xchg
aam
xchg
jp
stc
daa
and
jl
sbb
pop
xor
sbb
add
test
sar
rcr
mov
pop
cwde
push
std
cwde
(bad)
retf
call
retf
dec
push
cli
adc
jnp
aam
dec
xchg
fstp
(bad)
sar
sub
sbb
dec
xlat
mov
in
push
(bad)
pusha
pop
xchg
lods
adc
sub
pushf
pop
aad
pop
dec
mov
js
jbe
cmp
retf
inc
xchg
lods
sbb
cwde
mov
lods
mov
int3
mov
sub
pushf
mov
stos
mov
movs
outs
and
fsubr
fsubr
xor
dec
cmc
in
jb
push
push
cli
je
std
cwde
test
push
retf
movs
shl
data16
jge
xchg
mov
jns
rol
jae
jmp
(bad)
test
fcmove
jg
test
sbb
mov
adc
fild
xor
cli
inc
movs
or
and
cwde
push
in
mov
test
push
scas
mov
les
pushf
add
sbb
aaa
sahf
mov
jne
mov
jmp
test
cmp
shl
lods
cmp
dec
les
loop
xor
add
ja
sahf
mov
jo
push
jae
hlt
enter
pop
in
(bad)
mov
xchg
jnp
mov
fld
outs
adc
cs
push
xor
mov
cmp
icebp
add
push
loopne
js
sbb
hlt
ins
jmp
jb
lock
mov
mov
(bad)
in
mov
jb
or
imul
int3
mov
pop
inc
test
dec
je
pop
inc
dec
pop
ins
jns
lods
fcomp
clc
cmp
cmp
cld
les
stc
mov
je
xor
int3
(bad)
(bad)
out
in
dec
jns
cmps
xchg
js
mov
ror
or
sub
aad
lods
inc
pushf
push
scas
mov
iret
mov
call
mov
mov
clc
lock
ins
mov
clc
retf
enter
sub
pop
popf
mov
sbb
and
loopne
push
jae
mov
in
into
xor
movs
mov
mov
int3
hlt
or
(bad)
pop
jge
and
cmp
add
(bad)
leave
hlt
mov
cmp
xchg
dec
mov
int3
push
inc
les
dec
mov
xchg
sbb
pop
in
ds
inc
fcmove
adc
iret
cli
nop
mov
push
test
ds
sbb
(bad)
sar
into
prefetch
or
sub
hlt
in
outs
fmul
div
and
mov
and
mov
in
xor
sub
test
inc
test
clc
and
aam
loopne
stos
xchg
cmp
js
shl
pop
mov
cmp
mov
fcomip
fsub
mov
(bad)
pop
mov
dec
push
cli
pushf
xor
xchg
retf
jnp
mov
ret
jmp
sar
das
cld
jnp
mov
ret
rcl
(bad)
push
loopne
sbb
sub
jne
stc
inc
xor
adc
outs
cld
sub
cli
adc
inc
cmp
pop
push
ds
imul
or
jp
push
sbb
xchg
mov
in
lea
pop
jae
adc
js
sub
call
push
sti
jbe
(bad)
cli
adc
lds
ficomp
std
je
stc
stc
adc
mov
jne
lahf
ja
sahf
bound
stos
jne
mov
pushf
jbe
cmps
xchg
je
test
rcr
pusha
lods
sub
mov
movs
mov
mov
ret
xlat
loopne
pushf
mov
pop
std
pop
push
es
jo
xor
xor
fs
mov
inc
aam
loopne
mov
test
dec
scas
adc
imul
shr
xor
sub
mov
ficom
loopne
jae
js
jnp
push
jne
call
lods
push
xchg
ret
sahf
sar
mov
jl
add
(bad)
psubd
lock
dec
mov
(bad)
sti
xor
mov
shl
js
popf
int3
cld
jae
mov
add
cmp
out
cmc
push
mov
hlt
leave
(bad)
mov
push
cmp
test
test
test
je
sahf
xor
scas
pushf
push
jl
out
je
rcr
fs
sbb
mov
movs
bound
xchg
mov
ror
jno
stos
mov
inc
test
les
xor
jne
sti
out
sbb
fadd
add
mov
addr16
mov
rol
enter
rol
mov
adc
xor
jl
sahf
(bad)
sbb
sbb
pop
(bad)
mov
call
sti
aam
cli
dec
pushf
cld
je
out
in
fstp
out
or
xlat
xor
lods
jae
pop
pop
out
in
sar
push
addr16
xor
push
dec
push
ins
out
jne
push
sti
in
sub
(bad)
mov
jb
mov
jbe
lock
cli
out
call
shr
mov
les
mov
cmp
cmp
cli
cmp
outs
js
push
pushf
fdivr
cmp
inc
retf
loopne
into
mov
mov
les
clc
in
dec
lock
ret
fild
xor
imul
fcmovb
in
add
jae
ror
shl
add
pop
fadd
mov
mov
or
mov
scas
cli
les
movs
stc
jbe
out
les
test
add
repz
push
lods
sbb
fs
sub
push
adc
pusha
push
push
or
add
sub
imul
mov
je
cmp
call
jae
or
jp
(bad)
sub
xchg
das
enter
mov
xlat
into
jmp
retf
cli
push
push
mov
test
push
xor
xor
inc
int
mov
add
in
xor
aam
in
into
aam
leave
push
xchg
mov
mov
(bad)
or
lahf
ja
add
fnstsw
adc
sar
sub
std
js
aaa
mov
mov
cmp
fs
pushf
mov
mov
add
movs
(bad)
(bad)
mov
repnz
pop
repz
or
mov
movs
and
dec
scas
in
jne
cmp
pop
push
int3
lock
or
and
push
test
stos
in
sub
sub
out
mov
jae
xor
jo
jl
jnp
test
cmp
es
ds
push
clc
jmp
mov
enter
jo
(bad)
adc
mov
cdq
add
mov
popf
mov
pop
inc
mov
xor
sar
shr
mov
dec
iret
ret
leave
inc
imul
enter
pop
or
in
pop
imul
cwde
push
paddsb
mov
cli
add
jg
mov
jbe
xor
lods
push
scas
mov
mov
push
mov
push
cli
xor
std
test
add
js
mov
movs
mov
shl
or
imul
dec
push
pop
js
xor
aam
in
mov
clc
dec
push
xchg
in
or
sbb
pushf
mov
fisttp
sub
mov
mov
jle
fdivr
js
jmp
mov
push
and
mov
lahf
loop
sbb
mov
add
scas
packssdw
mov
mov
cmp
mov
pop
mov
pop
(bad)
adc
fmul
add
gs
mov
cmp
pop
les
std
mov
in
jl
loope
(bad)
cmc
jmp
dec
mov
add
sbb
push
adc
and
jne
and
pushf
cmp
data16
and
lods
dec
mov
ins
js
sub
loopne
aam
sub
dec
fadd
mov
int3
push
sbb
(bad)
jmp
gs
jae
push
adc
loopne
jp
cdq
in
cwde
jmp
dec
int3
test
out
or
push
popa
popf
jp
test
and
push
iret
outs
or
mov
fstp
xor
lods
das
sar
mov
js
mov
js
dec
popa
mov
lods
fs
lock
dec
imul
mov
jbe
ret
add
je
int3
(bad)
stos
in
xchg
mov
jl
mov
(bad)
movs
les
aam
push
or
fdiv
sbb
jns
sbb
shr
bound
imul
addr16
mov
fs
outs
sub
push
ins
add
and
dec
push
je
stos
loop
fsubr
in
out
(bad)
jecxz
sbb
ds
out
das
cmps
aam
imul
popa
aam
or
imul
into
loope
mov
xchg
xchg
les
sub
inc
movs
ins
push
mov
xchg
mov
mov
xchg
add
lahf
js
je
mov
sbb
mov
retf
std
mov
shr
scas
or
cmp
ret
(bad)
lods
je
out
loop
mov
cmp
mov
mov
mov
inc
sbb
sbb
jb
jl
cmps
jnp
adc
and
fadd
or
xor
in
jno
les
nop
into
shl
push
dec
clc
push
add
mov
jmp
mov
jmp
dec
mov
pushf
inc
cmp
xor
mov
jns
ins
iret
inc
adc
enter
das
ins
mov
jne
popa
push
and
mov
sbb
mov
jl
mov
pop
pop
pop
lea
aas
mov
push
mov
cmp
mov
mov
jl
mov
stos
gs
xlat
ins
sub
inc
loope
and
retf
sbb
rol
fstp
pop
dec
pushf
loopne
and
jl
sub
aam
test
gs
jl
jl
cmp
cmp
fcomip
cmc
cld
pop
add
jb
outs
in
js
jo
xchg
movs
hlt
jge
movs
lock
test
je
and
rcl
fs
in
sahf
jmp
sbb
fs
in
je
fidiv
rcl
adc
cld
fsubr
dec
test
in
js
ds
dec
lahf
std
pusha
dec
dec
aas
(bad)
mov
jne
jbe
lods
cmp
xchg
pop
stos
sar
lods
push
into
shl
nop
and
inc
das
lea
or
xor
cmp
mov
lods
mov
inc
xor
mov
loop
push
jmp
ffree
xchg
cs
loopne
call
(bad)
xor
jb
(bad)
fsubr
sbb
lock
jne
es
cmp
sti
hlt
inc
pop
(bad)
pushf
or
lds
sub
pop
jne
loopne
pushf
inc
ja
jne
jp
pusha
arpl
inc
mov
js
mov
lahf
out
xchg
imul
xchg
cmp
mov
fcom
mov
and
sbb
sub
mov
push
int3
(bad)
lock
jmp
sub
xor
pop
pusha
gs
test
jns
test
stc
pop
pop
mov
les
rol
movs
imul
mov
mov
cwde
popa
sbb
mov
test
shl
jb
test
push
mov
(bad)
mov
in
enter
hlt
out
jl
sbb
fcmove
pushf
mov
jne
or
inc
inc
mov
sbb
stos
mov
fdiv
cmp
arpl
push
cmp
shl
pop
loope
lock
pop
jb
dec
js
pop
pop
jns
dec
push
sub
nop
test
xlat
sbb
mov
jmp
sbb
jne
pop
add
popf
pop
inc
addr16
adc
daa
push
dec
retf
jecxz
mov
inc
std
dec
cld
not
in
dec
dec
aas
lods
jae
or
cmp
xor
das
push
fcmovnbe
loop
repz
int3
mov
mov
xchg
sub
xchg
mov
js
lods
scas
and
mov
pop
jmp
in
fild
loope
fs
mov
movs
movs
push
adc
pushf
lock
jmp
xor
xor
mov
or
fdiv
inc
dec
lock
mov
out
clc
adc
data16
fadd
sub
cmp
jge
js
fiadd
jno
dec
pop
fs
call
shl
cli
(bad)
mov
popa
fimul
add
imul
xchg
rol
xor
out
xlat
mov
in
call
xor
outs
aad
aas
push
fcomp
dec
ss
jns
xor
xchg
pop
or
into
pop
js
ds
lea
dec
popf
mov
in
js
cs
in
add
in
iret
and
push
fs
int3
call
fidivr
cmp
sti
hlt
mov
cli
rol
cmp
sub
fild
sub
xor
jl
inc
cs
xor
test
cli
cmp
hlt
sbb
lock
dec
daa
and
pushf
add
adc
jp
mov
and
imul
jnp
adc
ins
jmp
imul
mov
ins
nop
inc
(bad)
mov
or
out
je
aad
mov
adc
fstp
mov
push
std
mov
sub
or
jbe
sub
pop
and
inc
xor
sbb
jecxz
jl
call
pop
test
je
ret
pop
sub
loope
cmp
mov
mov
xchg
(bad)
mov
cld
arpl
add
loop
mov
aam
sbb
mov
loopne
ror
or
mov
xchg
ds
(bad)
cmp
(bad)
loope
pop
pop
aaa
xor
movs
in
in
cmp
pop
add
imul
ins
ins
mov
or
push
dec
(bad)
xor
ins
sbb
jnp
xchg
dec
mov
mov
xor
and
std
pushf
mov
shl
push
push
scas
shr
sbb
in
ins
fnop
fstp
sub
jmp
mov
adc
adc
sbb
pop
add
in
lods
push
adc
xchg
mov
popf
cmp
xor
pop
mov
mov
(bad)
cld
mov
loope
rol
and
popf
fs
stc
jne
sbb
jmp
imul
cmp
mov
and
hlt
fcomp
das
nop
mov
inc
mov
int
in
and
imul
pop
or
pop
loop
cs
(bad)
out
in
inc
out
in
xor
cwde
test
popf
jp
movs
pusha
or
sub
loope
outs
test
xor
jo
retf
shr
ret
sub
ror
aad
sub
iret
(bad)
retf
hlt
sbb
add
es
int3
out
and
rcr
cmp
xchg
jle
movs
pop
cwde
sub
daa
xor
ror
jnp
push
add
call
clc
enter
in
in
ret
mov
jmp
sar
into
dec
je
les
pop
sti
pusha
xor
imul
jp
imul
mov
cmc
mov
jns
ins
pop
js
mov
cmc
push
pop
add
push
mov
mov
retf
imul
xchg
cwde
jne
call
les
add
pop
(bad)
out
fs
ins
rcl
sub
or
adc
loope
jmp
sub
jae
sub
cmc
adc
std
adc
rcl
loopne
mov
lods
push
fsub
shl
int3
mov
sbb
jne
repz
std
jp
push
sbb
sbb
add
jecxz
mov
push
nop
mov
add
adc
add
mov
ror
ins
jo
and
aaa
dec
cs
pushf
xor
jb
inc
pushf
lock
dec
sbb
xor
cmp
inc
dec
sub
adc
xor
sti
fcom
mov
adc
jl
jecxz
inc
sti
adc
sbb
dec
movs
shl
js
xchg
mov
sbb
xchg
mov
and
adc
in
sbb
adc
adc
xor
dec
jno
ins
or
add
push
imul
jp
mov
jecxz
hlt
out
adc
daa
clc
add
sub
dec
cmps
stc
iret
int3
mov
int
stos
push
enter
push
ins
in
push
jns
sbb
xor
push
aam
jne
icebp
fcom
cmp
int3
ins
iret
xor
pop
pop
xchg
aam
sub
push
adc
out
fist
add
jne
xor
sub
xor
add
dec
cmp
ins
xor
xor
pusha
mov
jns
push
mov
pop
icebp
test
jne
aaa
das
stc
push
movs
jne
pop
sub
in
jl
je
mov
movs
in
pop
test
inc
pop
pop
jae
sar
xchg
xchg
std
enter
test
cmp
sbb
sub
in
sbb
mov
add
call
push
shl
je
cli
fs
shl
mov
aad
aam
mov
retf
movs
iret
stos
call
mov
mov
mov
xlat
fsubr
xor
sbb
cld
mov
or
mov
pop
pop
cmp
(bad)
fs
mov
dec
fs
aam
jmp
jae
xor
es
ins
xchg
nop
push
sub
lock
out
cmp
pushf
push
xor
cmp
arpl
std
cwde
jbe
pop
jl
sbb
lock
hlt
(bad)
push
das
std
int3
mov
dec
pushf
pop
push
jb
jl
sahf
mov
fwait
add
out
xchg
push
aaa
xor
nop
shr
scas
cmp
retf
shr
lds
rcr
xor
rcr
cli
or
(bad)
mov
dec
adc
add
iret
into
pop
jo
leave
cmps
jmp
lods
pop
mov
pushf
sbb
mov
jl
je
iret
movs
and
jmp
add
add
in
cmp
fcmovbe
mov
(bad)
loope
pushf
mov
mov
cmps
js
mov
mov
xor
sti
jmp
mov
push
adc
das
adc
dec
cli
clc
and
jo
pop
and
mov
sub
push
mov
xor
cmp
icebp
les
push
jns
mov
jl
sbb
cmp
dec
dec
jl
ror
cmp
and
imul
pushf
retf
in
push
sub
cmp
xor
call
add
sbb
leave
fbld
dec
into
iret
sub
loopne
out
cld
shr
rcl
xchg
shr
jl
xor
lds
fs
cmp
jl
int
mov
sub
hlt
pop
aad
and
jl
rcl
pop
ficom
cmps
div
and
cmp
jne
in
jns
mov
push
out
cmp
dec
cld
and
nop
fcomp
jo
iret
jecxz
mov
addr16
sub
mov
pop
imul
repnz
out
(bad)
mov
mov
mov
fsub
test
inc
push
adc
xor
xchg
fcomp
xor
push
(bad)
jns
shr
jnp
or
jmp
pop
mov
in
mov
adc
inc
call
jns
ret
jecxz
aad
fstp
mov
nop
int3
ret
out
rcr
sbb
sar
cmp
push
test
fsubr
pop
sub
call
fs
aad
iret
mov
push
pop
mov
mov
fnsave
add
mov
push
sub
or
sbb
add
dec
aad
in
rcr
hlt
add
cmp
hlt
repnz
hlt
push
and
cmp
daa
pop
loop
(bad)
hlt
pop
mov
or
dec
inc
in
lods
and
sbb
inc
hlt
fmul
jl
xchg
mov
jno
or
mov
les
data16
addr16
jp
pop
jb
xchg
xchg
push
inc
out
and
jbe
and
movs
(bad)
loope
or
push
nop
xor
and
push
inc
cli
jo
repnz
cwde
ret
push
mov
in
ins
add
into
lods
test
xchg
mov
not
adc
jl
xchg
jge
(bad)
out
jmp
std
cli
mov
fcmovbe
mov
movs
push
xor
sbb
and
jne
and
and
out
cli
pushf
aad
adc
add
adc
cmc
xchg
in
hlt
or
imul
fcomp
loop
sbb
mov
jge
cld
loope
xchg
js
sbb
sub
mov
push
add
jl
call
in
(bad)
mov
pop
add
ss
loope
mov
sub
and
pop
paddusb
and
int3
js
and
add
je
gs
add
and
retf
leave
mov
pusha
imul
cmps
xor
add
pop
mov
test
in
ins
mov
test
adc
ret
retf
xor
test
hlt
pop
in
sar
call
rcl
clc
push
and
sbb
inc
sub
test
or
pop
adc
sub
push
push
add
ds
and
loopne
sar
push
out
outs
cmp
jg
pop
std
xchg
add
enter
out
mov
jnp
pop
mov
cmc
int3
ret
loop
cmp
mov
jne
bound
jl
xchg
push
push
push
js
adc
cld
pusha
mov
pushf
mov
mov
in
ins
pop
jmp
adc
ret
mov
or
aam
enter
mov
stos
nop
int3
cmp
sti
cwde
lods
lods
inc
je
lods
cmp
cwde
movs
rcr
js
enter
(bad)
mov
movs
les
in
sub
inc
fsubr
push
dec
(bad)
les
sbb
mov
out
adc
js
or
nop
add
push
imul
push
inc
inc
in
cmp
movups
cmp
popf
add
push
push
pop
loopne
or
fdivrp
mov
cs
lock
dec
js
clc
jl
into
pop
ins
pop
jnp
(bad)
lods
dec
rcr
pop
clc
hlt
fistp
stos
retf
movs
mov
dec
sub
aas
mov
test
sbb
mov
and
sbb
xor
sbb
shl
adc
xor
sub
int
ret
stos
mov
popf
rcr
mov
lock
fs
mov
dec
mov
lds
mov
jl
(bad)
mov
sti
and
and
or
es
int3
add
movs
sbb
sbb
pop
daa
add
bound
and
dec
inc
pop
cs
sbb
xchg
stos
aam
out
pop
and
mov
clc
sbb
shl
(bad)
jne
imul
js
and
pop
jl
cwde
stc
jo
ret
leave
sar
js
push
push
aam
in
jns
mov
jl
pop
jl
push
shr
test
clc
inc
ror
lods
sbb
repnz
rcl
mov
mov
mov
xor
jae
movs
mov
mov
les
sahf
jmp
mov
cmp
int3
mov
push
adc
cdq
je
mov
and
sub
fdiv
sub
add
inc
and
int3
clc
dec
das
sub
sbb
inc
add
push
or
xor
sbb
std
fcomp
push
jmp
jmp
add
out
jbe
or
bnd
dec
pop
push
aam
jmp
cmps
lods
out
pop
and
xor
ret
stc
or
cli
dec
mov
and
and
and
ins
adc
mov
jno
push
pushf
dec
les
adc
jne
sbb
adc
sbb
mov
mov
into
daa
clc
dec
out
test
xchg
int3
in
pop
mov
pop
push
dec
cmps
nop
repz
and
pop
mov
xor
mov
ins
push
nop
dec
cmp
not
adc
in
sub
sbb
stc
mov
and
add
pop
(bad)
js
and
jp
inc
inc
pushf
ins
inc
inc
and
test
cs
sbb
add
inc
push
jl
sub
rol
sub
inc
xor
jno
repnz
push
mov
jns
inc
inc
test
push
mov
ja
pop
je
movs
movs
shl
cld
out
add
out
std
mov
cli
jnp
enter
rcr
or
adc
push
dec
je
pop
and
rcl
iret
mov
mov
call
jle
jl
js
mov
xchg
cmp
je
js
or
pop
jl
mov
push
mov
in
out
nop
les
cld
sbb
loop
xchg
sub
mov
sub
and
inc
cmp
sub
jo
push
dec
xor
rcr
and
xchg
and
xor
pop
mov
add
test
jne
cmp
pop
ret
or
and
jne
xor
pop
cmp
jl
std
mov
push
jl
push
push
in
inc
jmp
pop
out
shl
mov
and
push
jmp
cld
push
adc
call
clc
in
in
js
xchg
ret
and
(bad)
aad
mov
daa
popf
cmp
sbb
cmp
dec
jl
in
pusha
mov
pop
mov
mov
pushf
icebp
cmp
mov
ss
or
jmp
pushf
in
xor
in
sbb
xor
call
sahf
pop
jge
inc
cmp
lea
imul
es
bound
cmp
adc
sub
sub
push
add
(bad)
fmul
jae
sahf
int3
push
jle
and
retf
fidivr
out
jbe
xchg
mov
sub
dec
in
test
scas
mov
jo
sub
cmp
cli
mov
outs
or
jl
cs
nop
daa
dec
icebp
aas
mov
sbb
mul
sub
push
out
fnstsw
add
jmp
dec
xor
adc
mov
mov
sahf
xchg
sub
test
xor
sub
cmc
pop
bound
dec
xchg
pop
jl
sbb
xor
in
mov
inc
cmp
dec
jl
lods
pop
pop
mov
or
and
pop
xchg
adc
js
lods
cmp
cmc
inc
xor
js
and
js
xor
int
cmp
cmp
es
ins
pushf
push
mov
in
out
sub
adc
jmp
pop
mov
mov
cmp
in
push
(bad)
test
pop
xchg
mov
ins
pop
jae
outs
ja
jl
mov
in
dec
repz
jno
sbb
push
dec
ins
jb
jne
xor
mov
jl
and
ins
adc
ror
adc
sbb
aad
iret
gs
fsubr
dec
cmp
jo
scas
jg
adc
mov
dec
jl
lahf
xchg
and
mov
mov
fld
shl
nop
mov
(bad)
(bad)
mov
cmp
and
add
dec
sbb
aam
or
and
adc
ds
lods
inc
inc
inc
and
mul
push
sbb
adc
or
test
in
f2xm1
push
or
ja
fmulp
mov
mov
mov
mov
shl
loopne
aam
mov
jp
in
jl
dec
cli
dec
imul
push
jl
js
inc
fdivr
addr16
pop
sbb
ret
cmp
sub
xchg
jl
loop
xor
cwde
and
or
in
sar
enter
loop
mov
call
xchg
jne
mov
call
js
int
push
xchg
inc
fs
sbb
and
cmp
aam
sbb
push
push
xor
push
cmp
pop
push
adc
test
ja
sub
sub
inc
aam
ss
test
cmp
loop
xchg
sub
fsubr
daa
adc
repz
add
adc
and
dec
fmulp
xchg
in
out
call
cmps
cli
xchg
sahf
jg
sub
jns
pop
ja
test
dec
ins
sub
aaa
in
dec
out
cwde
out
jne
test
mov
xor
or
mov
call
lds
pop
adc
cmp
xor
mov
jmp
mov
cdq
or
add
pushf
in
mov
pop
call
ins
js
mov
into
xchg
imul
sar
adc
int3
pushf
xchg
retf
cmc
in
dec
pop
pushf
cmp
or
add
dec
mov
inc
cmp
mov
sub
adc
sub
loop
xor
pop
push
inc
pop
jno
sub
je
ds
push
aaa
sbb
cmp
push
daa
add
or
cs
jo
aas
push
add
lods
fdiv
loope
jo
pop
repz
ror
(bad)
in
pop
sub
pop
stos
jl
shr
hlt
lahf
mov
pusha
push
into
retf
fst
iret
mov
sbb
sbb
pop
inc
push
and
pop
nop
movs
mov
xchg
jl
mov
sbb
aas
std
dec
mov
call
jne
test
loop
ins
sub
out
(bad)
jecxz
ret
(bad)
imul
loopne
sbb
fwait
inc
add
and
and
not
lods
push
dec
sub
nop
and
in
js
and
ins
sbb
cmp
sub
or
cmc
and
pop
adc
pop
cmp
mov
pushf
aam
xor
cmp
or
xor
rol
dec
or
je
clts
push
xchg
cli
mov
xor
xor
data16
jb
pop
shl
push
cmp
cmps
shl
cli
adc
sbb
test
pushf
push
and
cmp
cmp
jp
test
xchg
and
xor
js
mov
jo
movs
sbb
cmps
mov
or
inc
in
cmps
cli
pusha
mov
fwait
mov
mov
pushf
jae
fbld
repz
js
push
sbb
pop
push
in
(bad)
lods
je
dec
and
cmp
inc
ds
arpl
mov
cmp
test
movs
push
inc
and
js
inc
rol
push
stos
push
ins
mov
sub
cmp
and
xor
inc
or
and
pop
pop
jns
lock
je
or
imul
sbb
mov
pusha
jp
loop
pop
jne
cwde
push
nop
test
out
inc
jl
loope
test
sbb
test
and
xchg
daa
call
shl
push
jl
mov
les
mov
std
mov
sar
pusha
shl
sbb
mov
addr16
in
in
mov
pop
loope
inc
add
and
jne
mov
push
imul
xor
and
add
push
clc
dec
dec
mov
mov
adc
mov
inc
dec
inc
sub
test
gs
lahf
xor
test
xor
sbb
inc
mov
jne
int3
mov
or
and
rcl
pop
xor
dec
mov
mov
jns
cwde
lods
mov
fs
inc
adc
ins
add
push
ins
mov
lock
js
and
sbb
jmp
xor
mov
fdivr
cmps
mov
jne
add
mov
jp
fxch
mov
call
jecxz
xor
and
in
jp
(bad)
stc
(bad)
mov
ins
fs
ds
imul
mov
sbb
sbb
push
js
and
cmps
add
add
aad
iret
jl
cmp
dec
cs
(bad)
or
clc
xor
push
xchg
mov
add
cmp
(bad)
nop
imul
mov
add
and
ins
lock
stos
xor
cdq
mov
jne
shr
xchg
mov
js
adc
inc
push
pop
stc
xchg
sbb
js
mov
sbb
aam
jae
cmps
cdq
mov
movs
popf
cmp
sub
pop
je
sub
pop
sar
in
out
pop
cmp
add
push
jns
xor
adc
in
pop
mov
lea
cdq
fnstcw
pop
jo
mov
mov
jno
dec
xor
pop
mov
cs
es
jo
mov
pop
enter
test
push
mov
sub
push
sbb
xchg
ins
fs
adc
pop
in
or
call
in
or
mov
ds
aas
xor
pop
cmp
mov
fdivr
cmp
outs
sub
pop
retf
js
pop
jl
mov
and
lock
call
sub
and
test
push
xchg
xchg
mov
sahf
pop
je
mov
push
sar
in
stc
icebp
pop
xchg
or
add
in
jmp
and
add
fstp
fdivr
aam
shl
nop
sub
adc
or
cmp
cmp
cmp
fs
adc
add
in
pusha
mov
sub
sbb
cwde
add
sub
fnstenv
dec
ja
sbb
or
ja
test
sub
ins
lock
cmp
pushf
lods
mov
jae
fs
jns
jl
jbe
es
call
mov
sub
sub
sub
sub
les
mov
mov
cwde
mov
dec
test
xlat
sar
and
inc
inc
sub
xor
in
aam
int3
repnz
loopne
sub
or
mov
fnstcw
addr16
pop
inc
push
mov
js
add
inc
fs
dec
inc
fdiv
pop
lds
push
jmp
xor
imul
ins
es
inc
cmp
(bad)
idiv
mov
sbb
mov
inc
and
cdq
inc
int3
dec
adc
jl
xchg
test
push
jo
jo
adc
cmp
cdq
fdivr
es
shl
mov
xor
and
call
sbb
dec
cwde
mov
xchg
dec
js
jo
mov
mov
retf
jne
call
pop
add
jmp
daa
test
push
ja
xor
and
sub
xor
or
cmp
adc
and
cmp
sbb
xchg
cli
and
sbb
js
xor
in
pop
cmp
nop
inc
cmp
mov
jo
push
adc
adc
gs
xchg
xor
fadd
or
lahf
mov
lea
mov
imul
loopne
cmp
dec
call
and
fdivr
js
in
mov
sbb
cmp
shr
mov
call
sti
test
pushf
pop
(bad)
jmp
(bad)
in
dec
ror
mov
mov
and
gs
sbb
lods
inc
fwait
je
add
fcmovb
inc
adc
out
pushf
in
cmp
jo
sub
clc
inc
cmp
cmp
xor
cld
and
cmp
mov
and
cdq
or
in
je
pop
push
jp
addr16
dec
add
shr
xor
sub
pop
sbb
inc
dec
cli
push
pop
pop
cmp
xchg
retf
pushf
call
xchg
xor
jl
js
ins
inc
inc
aaa
test
mov
daa
popf
js
movs
push
adc
rcr
mov
iret
clc
xchg
pushf
add
enter
mov
rcr
in
or
jmp
test
and
mov
sbb
cmp
add
fcomp
sub
cs
or
aaa
mov
ja
es
std
fs
sub
sbb
or
push
nop
cmp
jne
inc
rcl
test
push
xor
js
pop
push
aas
push
cmp
retf
mov
add
stc
ins
jae
bound
test
arpl
mov
js
cmps
fsubr
outs
test
jl
jo
ja
call
pop
popa
push
rol
mov
xchg
adc
ins
dec
push
addr16
jo
clc
mov
mov
shl
lock
repnz
sbb
pushf
inc
and
mul
call
hlt
sbb
sti
repnz
(bad)
push
mul
pop
add
sub
movs
xchg
popf
sbb
push
pop
test
or
das
and
push
xor
jae
inc
jge
dec
cmp
and
sub
sbb
ins
loopne
and
(bad)
ss
push
sub
cmc
cmp
jmp
cs
daa
nop
es
ret
es
shr
push
pop
pop
daa
ins
mov
cmps
add
mov
test
jl
add
xchg
push
js
ins
jno
and
shl
or
mov
sub
inc
xor
jae
(bad)
or
into
nop
mov
in
loop
outs
or
retf
mov
sti
in
shl
in
xchg
repnz
mov
(bad)
jb
fmul
add
icebp
sbb
fild
jns
push
add
rcl
clc
test
mov
dec
inc
adc
or
nop
push
push
cmp
dec
cmp
dec
repnz
mov
jl
daa
nop
test
sbb
inc
popf
je
mov
mov
push
aam
sub
loopne
push
clc
cmps
pushf
jle
cld
inc
dec
enter
out
and
xor
jp
dec
pop
push
push
cwde
pop
mov
rol
cmp
jns
jl
mov
jo
lgs
jne
je
mov
cs
jno
sub
in
(bad)
adc
adc
pop
sbb
cld
add
lods
jo
or
jno
pop
add
jg
cmp
add
test
hlt
mov
addr16
sar
(bad)
retf
loopne
loop
dec
sbb
call
in
push
cmc
out
pop
pop
div
das
ins
shr
nop
sub
es
jne
xor
ins
xor
punpcklwd
push
mov
xor
xchg
add
das
sub
popf
sbb
inc
cmp
jns
cs
jbe
add
in
push
js
movs
adc
inc
stos
or
cmps
scas
test
jne
in
jl
mov
mov
shl
adc
and
sbb
clc
pop
mov
cmp
cmp
mov
ja
sub
push
fild
adc
xchg
xor
xor
cmp
add
mov
cld
adc
cmps
xor
sub
or
int3
fs
push
fnsave
repz
aad
or
push
fsubp
cwde
jle
scas
and
les
cmc
cdq
aaa
test
jmp
jecxz
sub
inc
stc
adc
std
shr
sub
je
mov
sub
jne
inc
cmp
push
mov
das
or
xor
add
sti
pop
dec
inc
xchg
or
outs
aam
xchg
and
sar
add
xor
(bad)
aad
pushf
push
sub
aad
fs
jl
jmp
js
stos
sar
enter
jne
mov
outs
fsubr
call
lea
pusha
dec
popa
les
and
cmp
sbb
(bad)
xlat
fmul
hlt
cmp
enter
fld
jno
shl
mov
mov
loop
out
dec
dec
push
sti
lods
or
aas
hlt
or
aad
cmc
cmps
add
leave
sbb
fsub
loope
lock
out
out
push
mov
arpl
hlt
jmp
mov
mov
add
pushf
test
adc
cli
pop
jo
inc
sub
jns
or
push
lods
dec
add
rcr
int3
sbb
fdiv
mov
mov
add
fs
in
mov
adc
fs
push
dec
dec
in
adc
test
mov
sahf
mov
mov
nop
rol
fld
into
scas
jne
mov
jl
and
jl
(bad)
mov
jo
jae
cmps
movs
ret
cmp
or
das
leave
sbb
bound
push
add
in
cmp
mov
mov
data16
ror
stc
jno
and
loopne
mov
ins
cdq
mov
adc
rol
pushf
rcr
or
js
cli
test
call
out
sar
aam
fnstsw
push
push
fsub
lock
jmp
(bad)
repnz
loop
mov
cmp
pop
movs
jae
cmp
cwde
xor
iret
fs
jmp
inc
adc
test
jg
mov
sahf
mov
adc
call
xor
xchg
push
sub
jne
popf
test
pop
mov
leave
cwde
jl
pusha
pop
cmp
fcom
cmp
int3
cmp
cwde
mov
adc
add
xor
ins
not
sub
pop
mov
mov
mov
push
mov
cs
xor
cdq
mov
jb
out
sbb
add
and
sbb
js
push
push
int3
mov
out
addr16
and
cmp
and
aas
pop
aam
pop
repnz
fwait
scas
ins
push
cmc
pushf
push
cld
(bad)
cli
loope
cmp
sbb
sub
call
mov
cmp
movs
mov
cmp
xchg
dec
and
movs
fdivrp
stc
aam
rol
fs
push
pop
adc
in
push
pop
mov
ins
jne
mov
clc
pushf
mov
sub
jp
adc
cmp
nop
push
and
mov
jne
mov
shl
cld
dec
sbb
cs
xor
nop
jmp
pusha
or
sbb
(bad)
out
mov
in
ins
shl
dec
push
shl
cmp
jbe
xchg
mov
pop
xchg
stos
sbb
cs
dec
push
push
dec
inc
int3
jmp
and
inc
data16
jne
and
pop
imul
dec
sbb
cli
clc
pop
call
push
add
lock
mov
add
add
jmp
jl
adc
stc
test
cmp
push
cmc
sub
pop
jl
add
gs
pop
inc
sbb
inc
dec
pop
dec
and
daa
cmp
into
call
mov
in
hlt
aam
stos
xchg
mov
mov
sub
pop
cmp
sahf
cwde
jns
jmp
dec
fnstsw
inc
push
fs
or
je
dec
dec
sub
adc
dec
sbb
jbe
xor
repnz
cmc
or
leave
js
mov
cdq
mov
or
sbb
adc
fdivr
leave
int3
jo
mov
(bad)
push
pop
lods
int
lods
cmp
pushf
and
pushf
pusha
or
movs
mov
das
es
sbb
sti
sub
lea
add
or
adc
je
push
aas
and
push
pop
sub
dec
cmp
sbb
and
mov
and
sti
js
jmp
pop
or
aam
in
sub
nop
pop
xor
xor
pop
ret
je
int3
scas
cmp
mov
repnz
mov
jp
cmp
(bad)
jp
in
pop
or
push
popa
mov
mov
mov
jo
(bad)
dec
mov
sub
mov
jbe
and
sbb
hlt
inc
cmps
loopne
push
push
pop
mov
cs
inc
jb
dec
dec
mov
js
sub
lods
test
adc
mov
push
mov
sbb
or
(bad)
loopne
sbb
sub
xor
ins
cdq
and
sbb
sub
mov
add
aaa
(bad)
mov
inc
dec
inc
mov
in
add
in
pop
loope
sub
xchg
lods
adc
call
pop
jo
jo
inc
cmp
ds
mov
loopne
call
test
into
aam
dec
pop
pop
lods
mov
and
mov
jg
dec
cmp
mov
rcr
pop
(bad)
mov
int3
pop
imul
mov
mov
sub
loopne
inc
cmp
pop
sub
scas
ror
sbb
shr
in
lods
mov
mov
adc
les
sub
cmp
in
jo
cmp
int3
dec
xor
sbb
mov
int3
push
xor
and
mov
xor
dec
push
xor
push
sub
mov
je
xchg
mov
je
xor
rcr
or
sbb
pop
inc
mov
sti
and
jp
loopne
test
rcl
lock
les
je
inc
dec
pop
ja
loope
mov
scas
mov
test
jmp
nop
jae
xchg
jle
clc
jb
jns
hlt
cmp
jp
jg
sub
ds
lea
cmp
push
(bad)
xor
jne
jnp
mov
dec
movs
mov
int3
cmp
jmp
pop
cmp
mov
jae
mov
cld
jne
stos
sbb
mov
mov
stos
je
jae
cmps
and
add
test
jmp
mov
int3
push
dec
mov
push
lods
test
lock
jno
mov
fsub
mov
push
fdiv
nop
lods
sahf
hlt
push
cmp
mov
pop
xor
cli
hlt
shr
mov
jo
jnp
fwait
test
repz
test
mov
enter
pop
cmp
inc
dec
test
fidiv
imul
movs
outs
jno
leave
cmp
dec
xor
and
jo
jae
xor
dec
imul
dec
outs
jne
je
push
ja
dec
xor
push
fcomp
enter
cmp
in
imul
repz
push
pushw
fs
push
js
jmp
gs
fs
repnz
js
lods
push
push
cs
lock
jmp
mov
scas
inc
fs
je
out
outs
push
shl
adc
adc
loopne
addr16
adc
jae
pop
xchg
ds
xchg
aas
sbb
push
or
int3
or
je
jbe
pop
cld
rcl
adc
je
or
les
rol
cmp
clc
sub
mov
(bad)
and
rcr
sahf
jnp
jo
jo
aam
add
inc
push
test
mov
je
push
int3
rcl
aas
lds
mov
ja
dec
(bad)
xchg
jnp
mov
mov
mov
mov
mov
ja
fstp
adc
push
(bad)
(bad)
loop
(bad)
lods
sub
retf
loopne
leave
lods
xor
(bad)
(bad)
jns
pop
rol
cli
xchg
xchg
xchg
daa
cmps
or
mov
test
inc
rol
inc
cmp
sub
xchg
mov
push
push
push
loop
cmp
inc
inc
dec
inc
push
dec
inc
or
ins
int3
sub
ja
or
fadd
jo
daa
jne
and
mov
aam
bnd
sbb
js
outs
push
xor
mov
cmp
cwde
das
jmp
mov
adc
dec
dec
rol
adc
loopne
(bad)
jae
dec
dec
bound
sbb
fwait
add
xor
js
shl
jp
push
pop
cmp
in
iret
stc
dec
cli
rep
pusha
test
jbe
ins
jae
cwde
lock
push
sbb
in
fild
fimul
add
xchg
mov
sub
loop
in
jns
sub
or
test
mov
sub
mov
xor
je
cmp
mov
mov
fsubr
outs
ja
push
pop
mov
inc
cld
push
pusha
js
mov
hlt
repz
test
xor
cmc
mov
xchg
pop
ss
jae
cwde
xchg
add
xor
xchg
mov
pop
xchg
jo
mov
hlt
sahf
cwde
in
dec
push
jmp
lods
mov
cmp
mov
xchg
dec
fwait
mov
std
cld
repnz
pop
jmp
test
imul
dec
jle
ret
enter
out
and
dec
mov
inc
jne
shl
test
push
in
lahf
es
rol
ja
sub
push
in
ins
sub
ret
pusha
sahf
enter
(bad)
push
xchg
sbb
lds
push
pop
xor
das
pop
cmp
cmp
nop
cmp
repnz
mov
adc
addr16
push
dec
xchg
jo
in
movs
xor
inc
in
sbb
xchg
stos
daa
add
mov
jge
mov
call
mov
cmp
jg
rcr
jo
mov
lahf
adc
pop
stos
mov
add
mov
test
xchg
jo
mov
aam
pushf
cmps
adc
fwait
lods
(bad)
loopne
stos
push
mov
js
lods
mov
mov
cmp
mov
cmps
test
aas
ret
mov
dec
test
jmp
xchg
jg
and
add
dec
xchg
mov
hlt
jo
cwde
dec
stos
aam
mov
scas
and
xchg
movs
hlt
test
fbstp
or
fsub
mov
pushf
stos
(bad)
cmp
mov
or
xchg
adc
and
mov
xor
jb
outs
push
inc
jp
mov
xchg
xchg
pusha
sbb
lock
stos
movs
sar
(bad)
(bad)
mov
fmul
jae
out
fidiv
pop
std
mov
enter
xlat
fcom
das
rol
je
into
ror
xlat
mov
fabs
cmp
les
mov
adc
and
fld
jne
mov
jmp
sub
cmp
mov
dec
pop
lock
(bad)
mov
xor
add
pop
cli
hlt
(bad)
sub
test
fmul
mov
in
out
movs
add
add
sub
(bad)
pop
mov
or
stos
dec
aaa
add
sbb
cli
sbb
adc
in
fadd
mov
(bad)
rcr
lds
mov
push
jp
mov
jle
jb
xchg
dec
fnstcw
jp
test
nop
xchg
inc
imul
(bad)
adc
or
cld
or
push
push
fcom
int3
pop
idiv
sub
mov
sahf
xchg
enter
test
mov
jle
data16
rcl
enter
cmp
xor
fcom
mov
dec
test
pop
enter
loopne
lahf
jns
sti
fnsave
(bad)
stc
fdivr
sar
adc
and
in
js
sub
fs
sub
jmp
aam
pop
or
cld
in
add
test
sbb
je
cmp
(bad)
mov
fcomip
cmps
pop
ds
out
cwde
fs
push
sbb
dec
pusha
int
mov
(bad)
ret
mov
xlat
or
jo
fisub
test
jle
in
xor
mov
mov
call
jmp
sbb
cmp
lock
les
push
push
(bad)
cld
push
jmp
xor
sub
test
int3
call
ins
sahf
dec
cmps
mov
test
mov
mov
popf
adc
mov
sub
movs
test
mov
dec
das
fcom
rcl
jo
in
repz
std
mov
loope
push
lock
movs
icebp
push
cli
bnd
lock
sbb
inc
xor
push
add
jp
out
sbb
fcomp
in
cmp
repz
jmp
hlt
adc
lea
lods
ja
test
pop
lods
int
sbb
dec
sbb
aam
and
lock
test
sbb
in
iret
outs
mov
fnstcw
shl
sbb
fsubr
out
mov
loopne
(bad)
cmp
push
adc
or
fmulp
in
pop
int
cwde
(bad)
les
mov
mov
jmp
xor
mov
sbb
mov
gs
xchg
xchg
aad
mov
ss
mov
shr
lock
ror
and
lock
cmps
in
pop
push
pop
sbb
adc
enter
test
xchg
xor
sbb
jmp
cmp
call
std
in
jmp
xchg
sbb
in
enter
mov
xchg
rcr
scas
movs
mov
shr
mov
dec
jmp
clc
mov
imul
mov
clc
xor
call
jmp
mov
fild
addr16
lods
js
mov
call
lock
cwde
mov
mov
dec
test
xor
je
scas
dec
test
mov
cmp
jmp
xchg
(bad)
cmc
adc
inc
inc
cli
cwde
pop
cmp
pop
pop
xor
cmp
pop
(bad)
(bad)
xchg
lods
(bad)
cld
in
in
in
out
jecxz
pusha
call
pop
jge
cli
add
aas
push
fdiv
adc
or
xchg
and
mov
cmps
dec
loopne
scas
mov
ret
int3
inc
iret
fadd
push
sub
pop
bound
jne
outs
in
iretw
movs
or
ins
jae
shl
in
out
shl
mov
test
push
xor
jae
lods
sbb
cmc
cli
aam
scas
mov
popf
js
pushf
sahf
mov
movs
sub
mov
je
jecxz
cdq
pushf
fcom
jp
xchg
fwait
xchg
js
loopne
(bad)
call
movs
mov
scas
inc
je
pop
nop
jl
sar
lods
call
int
jo
dec
push
dec
movs
cs
pop
popa
add
or
push
test
xchg
push
shl
mov
mov
gs
mov
or
mov
cmp
in
sbb
hlt
leave
mov
nop
mov
fs
sub
clc
mov
cmp
loope
sar
inc
data16
repnz
mov
xchg
outs
enter
cmp
jp
loop
loopne
sbb
dec
lahf
test
sbb
xor
data16
fsubr
in
pop
lock
sahf
cmps
fs
retf
cli
adc
mov
mov
lea
push
mov
popf
or
add
dec
mov
dec
lahf
mov
dec
mov
popf
enter
push
cld
js
in
fbld
mov
retf
loopne
in
fild
fdiv
xchg
(bad)
call
and
jo
sti
je
and
nop
jne
pop
or
movs
mov
mov
mov
jge
mov
cld
jo
mov
call
sbb
xchg
xchg
lods
pop
ja
dec
inc
sahf
jne
retf
jge
jle
les
pushf
inc
inc
dec
sbb
je
cmp
ins
add
cmp
push
outs
fcmovnbe
test
int3
lods
mov
aam
js
movs
movs
call
xchg
sbb
pop
call
sbb
push
lds
dec
pop
mov
loopne
push
aam
fstp
int3
jns
cmc
fld
and
mov
nop
call
test
push
xchg
dec
cwde
push
int3
int3
in
test
inc
add
sbb
mov
mov
cdq
shr
pushf
or
fwait
pushf
push
popf
clc
lock
lahf
hlt
scas
cmp
mov
mov
lods
iret
xlat
(bad)
mov
aaa
hlt
cmp
mov
pop
mov
test
xchg
pop
lods
cli
jl
repz
out
in
lock
mov
cmp
and
out
inc
int
fadd
mov
fidiv
mov
xor
fwait
cmp
call
mov
ss
dec
pop
cmp
cmp
jecxz
sbb
div
add
push
add
jns
add
xchg
int3
ins
leave
int3
int
xor
dec
ja
clc
test
or
rol
mov
push
mov
mov
pushf
cmp
mov
mov
repnz
movs
popf
mov
mov
mov
test
fs
mov
test
(bad)
xor
xor
fidivr
jp
jl
clc
xchg
std
xor
(bad)
cdq
mov
mov
mov
xchg
xchg
fcomp
mov
mov
xchg
jmp
mov
(bad)
xchg
scas
call
cdq
js
lea
adc
pushf
pop
pop
outs
retf
enter
(bad)
js
out
sar
retf
pop
mov
mov
add
or
ins
data16
test
adc
adc
dec
mov
pop
fcomp
mov
mov
scas
pop
adc
and
mov
movs
jb
mov
ins
pop
mov
cmps
mov
mov
in
(bad)
das
(bad)
shl
pop
test
pop
dec
inc
mov
jae
jl
inc
ror
mov
cmps
test
push
fcmove
cwde
xchg
cmc
sbb
mov
fdiv
lods
ror
lahf
pushf
je
hlt
pusha
(bad)
or
ins
xor
xchg
les
(bad)
fdivr
xchg
outs
jo
push
mov
mov
jl
push
xor
dec
push
fdiv
cli
lahf
pop
sub
in
sbb
rcr
retf
jo
mov
jo
or
mov
dec
jae
add
mov
and
les
call
cdq
test
mov
jp
mov
sbb
add
lods
adc
adc
fs
mov
mov
(bad)
call
cs
push
cwde
imul
je
test
imul
jns
cmc
out
jb
mov
jb
lods
xchg
outs
rcr
pop
jo
rcr
jmp
ret
movs
ret
mov
loop
fnstenv
push
mov
cli
clc
or
xor
jne
lahf
xchg
sub
jl
xchg
in
stos
ffree
mov
cli
clc
ret
ret
fcmovu
add
imul
loope
pushf
stc
in
out
xchg
jmp
lods
movs
out
sbb
xchg
sbb
mov
mov
les
aaa
xchg
cmp
mov
xchg
mov
(bad)
js
mov
adc
dec
jne
movs
mov
test
mov
mov
jne
dec
and
fcom
jmp
jl
sub
int3
jmp
sahf
pop
jl
nop
cmp
cmp
scas
mov
daa
push
cmp
lea
leave
enter
je
stos
pop
inc
(bad)
shl
jns
fdiv
mov
(bad)
ret
sbb
or
pop
push
push
cmps
mov
aam
jae
lods
cdq
bound
mov
ret
xchg
(bad)
fnstcw
cmc
adc
pop
jo
jmp
mov
mov
cmps
lods
in
mov
scas
mov
lods
and
sub
movs
int3
xor
jmp
xchg
push
pop
movs
jl
mov
mov
jle
jbe
leave
xchg
in
lds
or
jl
in
push
mov
fisubr
xor
icebp
in
xor
jns
imul
out
in
pop
sbb
stos
cld
mov
cmp
cli
sub
cmp
iret
aad
into
mov
mov
mov
xor
jns
(bad)
mov
ret
add
mov
pushf
mov
lods
nop
mov
je
scas
test
add
aaa
lock
jl
or
idiv
in
int3
shl
int3
adc
movs
hlt
mov
dec
sahf
mov
dec
xor
leave
(bad)
xchg
add
std
lahf
xchg
adc
dec
movs
into
lock
mov
mov
mov
cmc
(bad)
adc
dec
fild
stc
ror
jne
push
inc
movs
mov
jnp
jl
bnd
out
test
test
and
jmp
push
retf
rcr
xchg
cdq
aam
retf
in
das
(bad)
outs
adc
aas
sbb
lock
xlat
sbb
enter
push
pop
mov
repz
xchg
xchg
xlat
clc
cwde
ret
sub
mov
fwait
call
test
dec
mov
fwait
sbb
add
stos
inc
push
fcmovnu
adc
mov
scas
push
aam
mov
nop
add
xor
shl
nop
xor
dec
and
push
add
ret
ins
sbb
cmps
test
lods
mov
push
jp
int3
cmp
mov
in
push
push
fbld
xchg
out
add
shl
nop
push
jne
push
dec
pop
test
fisttp
jnp
xchg
loope
dec
add
test
jl
or
addr16
or
inc
aad
add
pop
push
xlat
cmps
or
rcl
or
hlt
jo
add
inc
fstp
rcl
sbb
jl
mov
mov
pop
sub
push
scas
ins
and
ret
mov
ror
mov
mov
or
repz
or
lock
sub
sub
shl
jb
mov
push
std
lock
xchg
sbb
fild
adc
push
test
sbb
cmps
pop
test
sbb
dec
ror
rcl
clc
mov
std
je
icebp
dec
sbb
mov
pop
jl
lock
fwait
inc
xor
cmc
test
jl
or
push
mov
mov
test
dec
cwde
jmp
pop
fstp
hlt
(bad)
test
add
jmp
xchg
into
sahf
cmp
test
jne
je
js
ins
js
mov
dec
mov
pop
int3
fadd
out
mov
add
rcl
jno
rcl
mov
mov
pop
push
call
add
xchg
jne
cmp
adc
sahf
test
sbb
cmps
ins
aas
inc
inc
cmps
push
xchg
pop
cmp
jo
mov
mov
leave
frstor
enter
in
add
jl
sub
jle
or
test
push
push
pop
jmp
daa
ja
leave
lods
int
mov
add
je
ret
std
add
in
clc
cld
cli
clc
out
fdivr
pop
or
or
mov
mov
js
mov
sbb
sahf
in
je
in
mov
fs
pop
mov
out
mov
and
xchg
push
fmul
push
add
mov
cli
js
mov
ins
sub
pop
stos
cmp
adc
xor
cmp
popf
sbb
mov
sub
shr
mov
pop
mov
pop
nop
lods
mov
inc
stos
scas
enter
jl
pop
xor
cmc
push
cwde
mov
dec
mov
cmp
(bad)
pop
add
das
icebp
xchg
fmul
pop
fcomip
cmp
mov
or
cmp
ja
mov
adc
call
stc
fidiv
ret
(bad)
cmps
mov
shr
(bad)
rol
adc
fadd
jecxz
push
clc
iret
and
std
in
mov
(bad)
js
ror
cld
add
ret
cwde
pop
shl
sbb
or
test
les
int3
(bad)
stos
rcr
xor
jmp
inc
add
fisttp
(bad)
xchg
test
jmp
mov
sar
mov
xor
cdq
and
add
scas
scas
bound
(bad)
scas
or
lods
mov
mov
push
ins
in
fs
(bad)
mov
out
(bad)
popa
mov
xchg
xchg
add
or
fdivr
xchg
push
cmp
jmp
fistp
arpl
adc
cli
into
iret
mov
add
in
or
add
in
(bad)
cmc
push
out
xlat
lods
pusha
dec
xchg
mov
push
mov
es
fstp
shl
mov
push
hlt
push
inc
dec
fcomp
test
push
mov
adc
mov
lods
jne
and
ret
xor
sub
push
mov
nop
int
ret
shl
mov
jp
jp
mov
push
js
pop
jl
call
cli
mov
xchg
or
jb
and
pop
lods
and
xor
cmp
pop
stc
(bad)
in
cld
leave
add
or
stos
xchg
js
fsubr
sub
rcl
push
repnz
rcl
push
jne
int
mov
dec
mov
pusha
xor
les
mov
rcl
loope
ins
jne
jmp
fs
jmp
fld
iret
int3
push
retfw
std
rol
mov
aad
cmps
js
mov
enter
lock
popf
enter
mov
xor
mov
les
(bad)
int3
nop
mov
jl
cmps
mov
jo
(bad)
sub
rcl
xchg
(bad)
cli
jl
(bad)
cmp
mov
add
inc
sub
pop
retf
imul
jae
jo
je
inc
push
push
(bad)
retf
cmps
fldlg2
xchg
popf
or
or
xchg
add
xchg
out
fmul
test
push
add
rcr
push
ins
mov
fdivr
push
(bad)
mov
rcl
push
js
(bad)
into
js
(bad)
mov
in
dec
cld
fnstcw
inc
arpl
or
cld
mov
stos
js
mov
fisubr
jo
sub
or
add
fwait
adc
xor
xchg
cmp
test
mov
pop
(bad)
jl
aam
aam
mov
stc
js
sbb
mov
xor
add
dec
int
add
add
lock
pop
inc
ss
nop
imul
dec
jl
jae
fwait
je
push
jo
fs
fstp
mov
mov
je
dec
dec
fwait
add
sub
push
mov
mov
cmp
mov
js
sbb
hlt
sti
(bad)
mov
in
js
sar
je
mov
jo
loopne
retf
adc
jns
loopne
jl
pop
push
xchg
or
cmp
adc
call
jne
sti
iret
or
mov
push
mov
cmp
mov
clc
mov
inc
jb
lds
adc
cmp
inc
jo
mov
js
push
xlat
cdq
mov
stc
das
rcr
je
in
(bad)
out
sbb
fwait
ja
loopne
jns
sbb
mov
icebp
call
push
in
int3
mov
or
and
and
in
aam
test
sub
adc
fimul
loopne
mov
xor
sar
and
loope
mov
rol
lods
loope
mov
es
icebp
in
loop
inc
enter
icebp
enter
ds
push
fist
xor
add
add
cld
clc
call
pop
mov
xchg
push
cld
pop
test
js
xchg
mov
push
shl
dec
into
lock
scas
(bad)
dec
lods
sub
fadd
xchg
pop
jl
shl
xchg
and
xor
out
push
xor
cmp
jae
and
push
cld
jp
jle
loop
jp
push
pop
adc
mov
cmps
out
hlt
cs
cli
xor
es
fbstp
add
stos
add
mov
int
int3
dec
adc
or
loope
mov
sbb
mov
in
cwde
push
or
(bad)
daa
jl
inc
jne
mov
cwde
jo
or
int3
std
lods
(bad)
mov
adc
movs
and
lds
sti
adc
xchg
pushf
xor
test
or
mov
fcomip
sar
jbe
int
or
xor
pop
mov
lods
scas
jno
mov
pop
and
in
mov
iret
int3
fs
dec
scas
(bad)
lods
rol
jmp
movs
lock
jo
test
mov
sbb
jb
jae
xchg
rol
jle
push
(bad)
dec
jl
fdiv
rol
mov
push
mov
adc
in
ins
cmps
lods
add
fnsave
sub
sbb
sub
in
xor
js
push
sbb
test
add
leave
shl
cmps
js
push
mov
fstp
int
inc
jmp
mov
imul
stos
mov
pusha
lods
test
dec
ret
fsubp
cmp
or
in
pusha
pop
fucom
cmp
mov
mov
xlat
mov
bound
sbb
mov
xor
shr
adc
pop
sar
ret
js
fidivr
or
dec
add
pushf
mov
mov
ds
sbb
movs
ins
mov
sub
mov
repnz
mov
loopne
cmps
scas
aam
sbb
fucom
sub
xor
or
sbb
clc
dec
stc
mov
pop
enter
mov
scas
js
js
ret
scas
test
enter
mov
movs
pop
sahf
cdq
add
loopne
movs
test
add
sub
out
mov
in
jmp
jae
stc
int3
cmp
push
in
adc
push
mov
mov
loop
add
das
retf
test
aam
jo
(bad)
fs
mov
adc
je
int3
jmp
aad
jl
pop
and
lods
inc
add
jmp
ret
or
add
pushf
jmp
rcr
and
or
cli
mov
in
jl
das
and
dec
push
test
xor
int3
out
push
cwde
iret
or
(bad)
je
mov
mov
les
sahf
fwait
test
sahf
je
cwde
xchg
sub
test
mov
mov
jne
icebp
retf
sbb
loopne
in
lock
lock
out
(bad)
fstp
add
add
test
pop
adc
mov
sub
ins
sahf
mov
iret
test
fstp
rcr
jo
into
int3
mov
inc
mov
sbb
(bad)
icebp
cmp
in
add
jl
mov
pop
inc
add
bound
dec
pop
jmp
test
loopne
in
mov
scas
mov
cmp
dec
mov
aam
out
(bad)
int3
and
outs
pop
bound
dec
xor
adc
repz
shl
dec
leave
sbb
fwait
xor
add
adc
movs
test
cwde
xlat
jle
mov
fcmovu
dec
js
or
jle
and
shl
repnz
pop
leave
add
sbb
(bad)
jmp
je
paddusw
xor
aam
inc
mov
in
call
fsubr
mov
nop
ret
and
mov
js
jmp
sbb
in
ja
jmp
aad
hlt
js
shl
shl
pop
jge
sub
daa
pcmpgtd
jne
sbb
shl
adc
retf
dec
jno
sbb
les
neg
mov
cdq
aam
pusha
das
repz
inc
dec
sub
test
dec
loopne
add
nop
jae
scas
pop
xchg
in
stc
mov
mov
jl
lods
mov
or
xchg
sub
inc
xor
mov
js
mov
test
sub
ja
fisub
in
shl
adc
mov
pop
cmc
cli
jo
and
pop
adc
lock
leave
push
in
imul
mov
test
(bad)
mov
mov
aam
shl
push
mov
jne
xlat
mov
ja
call
sbb
in
cs
in
ja
cs
pop
je
sub
sub
daa
sbb
int3
fucompp
cmc
int3
add
dec
stos
mov
mov
add
aam
clc
aad
sbb
fsubr
fsub
adc
cs
int3
les
jmp
pusha
dec
push
jl
sar
mov
cld
loopne
enter
lods
test
cmps
pop
aam
movs
cwde
sbb
pop
nop
popf
mov
push
mov
repz
mov
xchg
add
retf
repz
mov
xor
mov
in
js
repz
lock
xor
data16
outs
sbb
xchg
pushf
test
and
je
movs
scas
and
sbb
sbb
sar
jns
mov
pop
mov
in
jae
aad
jl
(bad)
xchg
jl
sub
pop
inc
jns
out
cmp
inc
jl
xor
dec
cli
ins
outs
addr16
call
stc
push
fdivr
jl
cmp
ret
vpsrad
mov
add
ja
or
mov
cmp
inc
mov
inc
pop
sub
push
jne
and
xor
popf
fcom
jne
mov
mov
xor
or
push
ror
or
xchg
mov
mov
jmp
rcl
test
outs
ins
jecxz
jns
std
pop
std
mov
je
dec
stos
sub
in
call
jmp
lock
lods
mov
test
js
mov
jne
aad
push
mov
stc
iret
xchg
outs
js
add
adc
in
jae
and
mov
pop
cmp
cli
sbb
retf
lods
mov
rcr
in
jo
dec
adc
or
or
clc
call
and
das
sub
(bad)
ins
movs
mov
and
in
aam
ds
and
mov
sub
pop
into
add
ins
dec
cmp
jmp
fmul
lds
jg
and
repz
std
aam
ror
or
fsub
mov
add
pop
sub
mov
mov
cmp
adc
jo
shr
xor
cmp
mov
cli
js
js
lods
jl
fnstsw
cld
dec
jecxz
out
aam
xchg
nop
jns
inc
fiadd
xor
xor
xor
fs
push
int3
mov
shl
fs
fldenv
mov
push
or
add
imul
adc
push
cmp
sub
jmp
mov
mov
ror
mov
pop
push
lahf
sub
and
cld
pop
mov
add
jg
fstp
test
hlt
or
enter
popf
test
je
test
xlat
lock
retf
retf
dec
enter
cmp
stc
(bad)
in
ins
sbb
sti
dec
add
enter
pop
mov
mov
pop
mov
fild
jecxz
pop
leave
jmp
pop
in
je
pop
fisttp
lods
mov
inc
xor
nop
in
jb
loope
adc
mov
mov
add
in
push
(bad)
jge
(bad)
mov
add
sbb
inc
adc
xchg
ss
int3
rcl
push
xchg
push
add
push
adc
aad
test
cld
sti
call
mov
jae
(bad)
lods
mov
push
repnz
popf
push
daa
cmp
inc
or
xchg
fbstp
pushf
mul
cld
cld
std
sti
(bad)
enter
lds
jmp
add
adc
add
test
(bad)
in
cs
jl
cli
pop
mov
jl
mov
loope
clc
mov
sbb
xchg
push
cld
out
jae
sti
fcmove
hlt
retf
xchg
mov
xchg
inc
dec
jge
ss
jge
sbb
mov
sahf
movs
jl
test
std
mov
clc
add
jo
xor
mov
mov
pusha
aaa
sar
jl
div
test
aad
imul
pop
loopne
repz
jp
(bad)
mov
sar
xchg
xchg
test
xchg
xchg
jg
mov
ins
mov
xchg
mov
sbb
cmp
push
pop
cmc
and
mov
jae
(bad)
cli
pusha
add
cmp
pop
adc
test
push
and
test
mov
call
xchg
pop
push
out
clc
jl
std
js
in
ins
shl
jge
iret
out
lods
cmc
hlt
add
cmp
jl
(bad)
mov
xor
or
push
jbe
jge
icebp
add
pop
cld
add
jp
stc
(bad)
mov
sub
lock
xor
push
daa
jl
ss
test
push
jg
inc
pop
inc
pop
mov
sti
fwait
cmp
add
aam
adc
jmp
jl
mul
pop
mov
mov
mov
sbb
mov
lea
xchg
mov
and
mov
leave
aam
mul
shl
add
sti
or
out
dec
pop
test
push
push
jmp
nop
sub
je
xchg
xchg
xchg
nop
cmp
cmp
fnstcw
shr
xchg
lock
out
inc
fdivr
mov
lods
test
mov
jne
push
pop
xchg
jl
add
jecxz
jnp
stc
adc
pop
movs
and
nop
das
xor
test
js
sub
std
jo
inc
sbb
dec
mov
and
push
jo
mov
cmp
and
addr16
ficom
rcr
ret
mov
xchg
xchg
xchg
xchg
clc
adc
xchg
sbb
mov
mov
clc
sbb
in
sbb
js
cli
cld
das
cli
in
adc
cmp
jecxz
sbb
test
adc
ret
in
or
in
fadd
jmp
sar
ror
add
call
xchg
aaa
jl
mov
shr
pop
add
aad
sub
sbb
mov
jmp
loop
jnp
or
cmp
push
sub
sbb
and
jo
je
add
int3
jo
inc
sbb
pusha
inc
mov
add
jle
sahf
push
icebp
dec
sub
or
and
push
pop
mov
repnz
ficomp
das
shl
call
pushf
cdq
mov
and
xor
adc
js
xchg
mov
push
push
nop
jnp
call
xchg
push
imul
sub
or
les
popf
(bad)
pop
jo
in
push
in
sub
xchg
call
dec
mov
les
js
jmp
aam
lock
mov
push
ret
mov
cmp
lock
sub
cwde
xor
das
add
daa
sub
stos
jp
movs
cli
cmp
cmp
mov
cld
lock
or
test
xor
sbb
ins
adc
test
or
xor
xchg
fdiv
dec
xor
jl
jne
and
mov
xor
pop
inc
in
js
xor
mov
sub
pop
sbb
ins
or
clc
xor
leave
jo
push
fcomp
(bad)
mov
in
ror
mov
inc
cmps
pop
movs
cwde
ins
push
mov
add
xor
inc
cs
adc
imul
js
add
imul
pop
(bad)
mov
(bad)
push
jl
scas
shl
mov
loopne
cli
(bad)
icebp
cdq
jne
in
jecxz
shl
stc
jl
int3
and
or
cwde
jl
cmp
retf
popf
adc
adc
rcr
popa
in
mov
pop
or
push
cli
dec
out
mov
sbb
jns
adc
jbe
sbb
ins
push
daa
mov
xor
jns
dec
sub
js
mov
inc
and
es
mov
sbb
sbb
or
jo
sbb
and
sti
ror
mul
std
sub
sbb
cmc
push
or
fild
jmp
iret
outs
add
inc
pop
lods
mov
enter
jne
mov
adc
sbb
cmc
adc
stc
adc
les
adc
mov
cwde
fcomp
mov
mov
jmp
pop
jo
in
or
repz
out
std
cld
(bad)
stc
mov
test
(bad)
fcom
call
mov
ja
or
xor
sub
jl
jl
out
or
or
retf
add
push
and
daa
xchg
imul
jp
ss
and
jl
pop
jb
es
dec
push
cmp
xor
out
mov
cmp
sbb
int3
aam
sub
js
xor
lods
mov
adc
push
fs
lds
push
jmp
test
sub
je
push
stc
loop
pop
shr
mov
pushf
jo
cld
push
in
or
sbb
sub
pop
repz
aad
retf
in
popf
sbb
dec
jl
push
in
mov
loope
fwait
mov
cmp
(bad)
jmp
jp
fcom
repnz
js
lock
mov
xor
cmp
cmc
jnp
jl
je
je
test
jae
mov
scas
clc
lock
js
or
mov
loop
and
ins
mov
or
xor
nop
xchg
js
inc
daa
mov
call
xor
clc
push
cmp
icebp
js
xchg
sbb
loope
mov
sbb
or
repz
sbb
mov
sti
neg
fisubr
loop
jecxz
or
js
cld
inc
jmp
push
add
adc
inc
enter
add
dec
out
in
leave
mov
sub
test
das
loop
sbb
mov
cmp
xor
(bad)
jmp
js
into
cmc
cld
xor
stc
mov
test
call
imul
jl
test
add
nop
jge
psubsw
jl
in
push
add
or
or
mov
les
das
repz
xor
push
adc
or
and
je
inc
jne
cmp
xor
and
je
jmp
je
push
mov
add
pop
pushf
ins
adc
push
add
jecxz
push
sbb
leave
(bad)
out
iret
clc
push
or
jns
and
mov
in
loope
cld
fbstp
jmp
ins
jns
xor
jmp
setge
or
push
cli
shl
fsubr
jmp
sti
mov
mov
loope
sub
in
jo
out
stos
sbb
fadd
hlt
or
or
pop
push
jl
sbb
out
jl
mov
cli
sbb
movs
sbb
fsub
xor
jo
jecxz
jns
call
sti
jns
pop
daa
jns
inc
dec
mov
in
push
inc
sub
fs
jbe
inc
sub
push
jg
int3
das
(bad)
jp
xor
ins
inc
je
mov
xor
mov
and
xchg
push
add
fcmovnu
cmp
in
add
or
call
pop
push
xor
push
dec
sbb
dec
in
popf
sub
mov
in
xor
repz
jge
shl
mov
pushf
mov
add
jnp
mov
add
dec
mov
adc
shr
jp
repnz
and
jl
adc
jp
icebp
jo
jl
mov
mov
in
or
out
inc
mov
adc
aam
inc
jmp
mov
lea
shl
clc
mov
das
ds
ja
push
xor
aaa
inc
loope
pop
cmp
in
sar
dec
jl
sub
mov
test
or
sbb
push
(bad)
movs
xor
adc
repz
mov
hlt
(bad)
mov
data16
in
mov
cmp
pusha
inc
xor
or
or
fs
icebp
scas
stos
test
adc
scas
in
mov
cmps
mov
sub
push
mov
adc
jge
or
or
lea
push
add
jo
ins
adc
cmp
adc
jge
or
loopne
loop
pop
jecxz
inc
js
add
int3
sbb
cli
in
jo
repz
push
add
dec
inc
cmp
nop
dec
pop
ss
ds
pop
sub
pop
inc
xor
nop
xor
call
mov
popf
enter
ja
add
cmc
xor
adc
or
add
stc
cmc
cmp
in
aad
pop
inc
pop
adc
in
loope
cmp
or
icebp
mov
jmp
jb
dec
push
in
fdiv
sub
and
test
fistp
cmp
fsub
mov
in
test
dec
fdivrp
fdiv
or
nop
icebp
jl
nop
mov
jae
jo
test
sub
sbb
cmps
fwait
loopne
cmp
xchg
lock
mov
mov
push
jns
loope
mov
adc
xor
js
shl
jns
(bad)
test
sub
push
dec
pop
loopne
dec
xor
sbb
sub
clc
ins
pop
xor
pop
test
mov
or
in
popf
mov
push
pop
pop
pop
xchg
icebp
call
sub
(bad)
movs
xor
nop
cmp
out
jmp
xchg
add
jae
and
inc
dec
push
das
or
sbb
adc
cld
push
fprem
mov
ret
and
test
out
clc
mov
in
js
in
xchg
fwait
sbb
jo
cmps
je
push
fidiv
clc
jge
repnz
dec
mov
out
mov
sbb
inc
xor
call
ins
inc
fs
jmp
out
jl
or
inc
ror
test
pop
ja
ret
(bad)
test
enter
cmc
mov
add
jl
pop
xor
pop
xor
jl
lea
sub
dec
and
cmps
ficom
adc
xor
cmc
fcomp
xor
out
inc
out
into
jg
test
adc
fadd
sbb
adc
jne
inc
clc
sbb
or
jmp
call
repnz
int3
mov
xchg
mov
in
jb
movs
sub
add
mov
mov
(bad)
cmps
sbb
mov
shl
add
mov
cwde
jae
das
cwde
mov
nop
xor
push
dec
xor
cld
aam
jl
sbb
mov
cld
icebp
loop
inc
and
ret
(bad)
out
mov
and
lods
sbb
int
and
dec
in
stos
mov
xor
sbb
cmp
and
cs
jmp
add
ins
push
jl
pop
ret
push
dec
mov
cwde
jmp
cmp
xor
fild
mov
lods
cmp
pusha
xor
icebp
cld
ss
les
add
(bad)
hlt
mov
lods
xor
js
in
jne
cli
int3
mov
cmp
jne
mov
in
jne
lock
ret
pushf
pop
fcomp
stc
dec
(bad)
cli
mov
cld
stc
aam
xor
pop
cwde
jae
jne
pop
call
js
jle
out
(bad)
js
jle
jne
push
in
js
or
xchg
add
add
mov
sti
test
in
xchg
inc
cld
xor
pop
into
std
and
cmc
mov
cwde
ds
and
fmul
js
dec
cmp
jb
es
inc
cmps
mov
or
adc
lods
call
pusha
dec
js
repnz
adc
ficomp
fisub
add
sbb
lock
loop
data16
or
jb
out
and
fsubr
(bad)
mov
(bad)
jae
rcr
in
sbb
leave
in
das
cmps
pop
push
cmp
shl
dec
(bad)
(bad)
leave
fnstcw
clc
add
mov
lock
lods
jp
adc
jo
xchg
xor
cld
cwde
stos
in
jns
jmp
inc
or
ret
retf
out
leave
lods
pushf
test
mov
cwde
mov
adc
sbb
je
cli
cmp
icebp
pop
sub
mov
int3
fcom
push
out
pusha
aad
push
enter
cmp
push
xor
adc
pop
test
sub
cli
out
xor
movs
ret
mov
pop
jns
and
dec
adc
lds
sbb
pop
and
cmp
and
jae
lock
push
clc
jnp
iret
hlt
stos
call
retf
out
mov
mov
stc
pop
mov
in
jl
fild
int3
jne
or
out
mov
cld
fwait
test
mov
xchg
add
mov
cmp
hlt
(bad)
cmp
pop
mov
lods
js
mov
aam
loop
int3
add
out
retf
cmp
fist
lock
adc
hlt
or
fstp
cmc
mov
or
das
cmp
inc
dec
cld
inc
dec
cmp
inc
sub
xor
into
jp
or
repz
xchg
jae
sub
and
add
inc
das
jns
add
cmp
sbb
adc
sti
shl
or
jmp
jne
fdivr
mov
add
mov
push
mov
aad
jns
aam
fs
in
in
adc
in
add
int
inc
stos
mov
test
mov
imul
into
xchg
clc
out
push
fisttp
pop
(bad)
rcr
loop
stos
je
xchg
movs
mov
addr16
lock
std
adc
dec
pop
xor
fcmovnbe
pop
jp
out
add
test
out
or
popf
dec
bnd
sub
popf
jo
fs
push
aaa
jo
dec
je
loope
movs
jg
outs
pusha
xor
sub
mov
jae
ss
xor
pop
sti
mov
xor
call
xor
cmp
add
xor
mov
mov
or
icebp
or
clc
pop
lock
or
js
or
dec
dec
out
shl
std
push
in
pop
or
jne
ror
sbb
xchg
jmp
mov
mov
jns
jl
test
test
enter
dec
gs
mov
dec
xchg
nop
in
mov
test
stos
cwde
nop
mov
in
movs
pop
stos
scas
setge
aam
mov
add
je
cmp
mov
fdiv
pusha
mov
mov
stos
push
fs
push
xchg
out
test
in
mov
or
test
in
xchg
imul
cmp
and
mov
in
mov
add
cwde
mov
out
test
jmp
sbb
shl
dec
push
push
inc
jl
or
data16
mov
push
push
das
jmp
jp
dec
push
inc
sbb
mov
in
adc
xchg
out
cdq
les
cwde
cmp
xchg
mov
daa
clc
dec
and
loopne
mov
stos
xchg
xrelease
in
into
ror
js
xor
mov
and
cmps
push
jmp
std
mov
fdiv
sub
jge
outs
jp
push
popf
or
ins
mov
test
movs
and
in
fdivr
push
inc
dec
rcl
bound
nop
test
jb
ja
aam
call
lea
push
stc
cmc
ret
pop
jne
pop
add
jmp
xchg
test
movs
xor
loop
jmp
cmp
ins
jg
adc
retf
xor
test
(bad)
nop
push
cmp
mov
ror
cmp
jns
push
dec
jo
push
sub
or
nop
pop
pushf
in
inc
sub
sbb
or
push
iret
jp
jb
outs
aam
in
das
xchg
xor
enter
jmp
xor
jns
movs
xor
mov
(bad)
jl
pushf
call
out
mov
xor
fsub
jnp
jp
pop
and
pop
dec
add
test
and
repnz
sub
dec
dec
dec
and
push
push
xor
cmp
adc
jne
jbe
mov
outs
int
in
lea
xchg
test
push
icebp
in
sbb
dec
mov
scas
push
push
xchg
repnz
int3
rcl
sub
fwait
rol
ss
imul
xchg
movs
jmp
out
test
adc
push
adc
push
adc
jne
pop
mov
out
push
call
dec
xor
mov
aam
mov
call
test
fadd
jae
je
adc
jb
sub
lods
xor
lock
pop
imul
cmp
mov
add
pop
mov
arpl
lods
loop
daa
test
sub
mov
nop
nop
loope
xor
xor
push
mov
stos
into
xchg
mov
xchg
fs
inc
sub
xor
ins
outs
sub
and
xlat
aam
lock
je
mov
mov
sahf
push
and
or
jae
adc
ffree
sub
nop
jmp
iret
add
xchg
dec
int3
and
jg
loopne
gs
fwait
cld
cmc
jbe
sub
lock
ja
push
ret
xor
out
hlt
hlt
js
es
pop
jle
mov
ins
in
jl
sar
push
stos
rol
xchg
imul
jo
xor
fidiv
fs
mov
test
or
and
or
mov
pusha
adc
pop
sar
loope
test
bound
mov
or
push
lock
test
and
rol
fdiv
(bad)
loope
jne
and
or
test
lock
mov
jno
or
push
push
int3
push
cmp
clc
movs
mov
add
push
cmp
pop
sub
int3
push
pop
test
cs
sbb
or
fdivr
shl
mov
or
cld
ds
(bad)
dec
test
mov
inc
test
ja
or
stc
pushf
aam
jmp
mov
inc
movs
adc
xchg
push
and
dec
mov
ror
gs
pusha
pop
pop
cmp
adc
(bad)
push
repz
inc
idiv
fs
adc
test
add
sub
push
or
or
push
or
or
jo
std
(bad)
cld
les
ds
xor
test
and
mov
test
ins
fs
dec
jns
(bad)
and
js
ret
inc
jecxz
punpckhdq
(bad)
adc
dec
ins
aaa
test
(bad)
out
enter
dec
jb
adc
inc
add
cld
aam
mul
in
aam
in
(bad)
out
dec
mov
xchg
cli
xchg
mov
push
(bad)
and
sbb
jmp
icebp
dec
or
xchg
iret
mov
lea
mov
call
jo
cli
and
in
in
(bad)
cmc
dec
pop
aam
xor
test
inc
xor
or
iret
rcl
mov
call
sbb
inc
xor
test
inc
mov
sbb
clc
push
push
dec
inc
enter
pop
cmp
js
and
or
jmp
mov
or
std
aaa
int3
xchg
fwait
or
div
cmp
rcl
nop
cmp
jmp
or
(bad)
ficomp
add
or
jp
pop
jp
and
sbb
je
idiv
iret
jmp
clc
cmp
bound
je
and
or
xor
dec
jne
imul
js
aaa
lods
fidivr
or
xchg
mov
add
mov
out
jp
pop
pop
push
cmp
xor
inc
mov
aad
jae
cmp
mov
in
addr16
je
les
jmp
mov
cmp
xor
jmp
idiv
std
add
dec
inc
add
mov
jp
in
cli
jp
and
mov
out
or
dec
mov
das
test
sbb
test
pop
aad
sbb
push
sub
mov
jo
jmp
fnstsw
iret
pop
fcom
loop
nop
sbb
adc
jge
dec
dec
inc
pop
mov
fsubr
add
and
stc
test
jl
fnstcw
mov
mov
fsubr
call
(bad)
nop
ins
pop
(bad)
push
jns
cmp
fcomp
pop
pusha
lods
cmps
pop
jg
hlt
inc
inc
aas
cmps
fs
int
fdivr
call
test
or
jp
(bad)
aam
call
push
push
sub
jmp
or
cmp
cmp
lea
mov
cmp
inc
inc
daa
mov
sahf
pop
int
cmc
jp
ss
test
sbb
call
cmps
lea
push
test
retf
cmp
xor
xchg
(bad)
int3
in
imul
in
test
jle
jl
mov
call
cwde
in
jb
fild
fs
out
in
push
mov
push
fbld
shr
sub
in
(bad)
mov
inc
sbb
add
ins
pop
sbb
in
fadd
mov
mov
std
fisub
or
es
and
test
jae
mov
(bad)
mov
and
adc
cli
repnz
add
pop
cli
les
add
movs
inc
jnp
xor
repz
pushf
enter
sub
or
je
xor
ret
mov
cwde
sbb
fild
int3
xor
movs
sub
sbb
sbb
sbb
adc
fistp
push
push
push
and
sbb
push
xor
mov
mov
sub
test
or
ins
xor
sub
lds
std
movs
loop
in
inc
test
fsub
inc
dec
or
mov
sub
sahf
sub
lahf
add
or
sub
xchg
pop
inc
je
xor
pop
push
test
test
mov
push
ror
ficomp
mov
pop
and
mov
jne
repnz
and
(bad)
and
mov
outs
std
push
icebp
fldcw
inc
nop
pusha
or
xchg
cmp
sub
stos
push
mov
fsub
mov
inc
fild
xor
xor
sub
clc
jecxz
(bad)
int3
pop
xor
push
fistp
cmp
ja
xor
jp
in
int
jmp
and
push
clc
jne
popa
dec
sub
sub
xor
fstp
jge
cld
sti
or
clc
int3
je
div
pushf
mov
cs
mov
ror
push
inc
pop
mov
imul
and
inc
dec
dec
xchg
loopne
jo
xor
adc
outs
hlt
jbe
sti
lods
adc
cwde
stos
mov
cdq
add
mov
lahf
mov
dec
cmp
ins
xor
lahf
js
sub
jg
inc
push
ds
dec
jae
in
cmp
mov
mov
sbb
sbb
out
inc
inc
inc
mov
cmp
call
jmp
call
cmps
sbb
fbstp
pop
push
xor
loopne
sti
lock
xchg
(bad)
xor
int
call
mov
push
bound
cmp
nop
call
enter
(bad)
adc
jne
jns
bound
cmp
or
(bad)
fild
adc
xchg
dec
icebp
in
cwde
js
sti
in
mov
push
call
xchg
xor
push
push
cmp
test
pusha
les
fcom
rol
pop
fcmovu
or
aad
test
push
(bad)
enter
xchg
add
enter
cli
sub
add
push
sbb
and
sahf
adc
stc
mov
fbld
jp
cdq
xchg
jle
or
push
pop
sete
stc
out
jno
div
or
cmps
popf
icebp
clc
cmp
inc
dec
push
in
cmp
pop
mov
jns
push
iret
xchg
jae
push
mov
je
ret
jb
push
pop
mov
int3
push
and
sbb
mov
mov
add
sti
cwde
mov
lock
fdivr
es
(bad)
jl
mov
(bad)
xchg
mov
add
fsubp
fst
xor
or
stc
cmp
nop
cmps
xor
jmp
push
lock
and
nop
sub
push
mov
push
sbb
pop
push
push
xor
inc
pop
les
sbb
xchg
pushf
nop
fwait
xor
sbb
ret
push
fs
imul
in
ret
adc
pop
adc
and
cmp
xor
pushf
ins
push
sub
outs
inc
ins
jnp
test
pop
mov
stos
iret
(bad)
fdivr
jo
stos
push
push
sbb
and
adc
aam
push
inc
cld
outs
in
cmc
inc
int3
neg
call
sahf
std
test
loope
in
adc
sub
sbb
pop
xor
sub
xor
popa
sbb
jecxz
and
sub
bnd
lock
fisttp
out
les
movs
iret
dec
outs
jl
dec
ret
aam
inc
dec
retf
mov
mov
js
jp
sbb
push
int3
sbb
nop
fnstcw
push
das
xchg
int3
dec
dec
xor
cmp
js
lods
mov
mov
addr16
std
lea
fcomp
pop
push
xchg
cli
inc
dec
dec
and
mov
js
add
add
xor
ja
js
jae
nop
daa
sub
sub
pop
pop
je
jne
ins
cmp
dec
push
push
pusha
pop
mov
add
inc
mov
in
sar
lods
jmp
fild
out
fs
xchg
mov
add
fadd
sub
lods
loop
(bad)
pushf
add
sub
mov
xchg
leave
push
retf
lds
xchg
int3
retf
int
scas
mov
ror
jmp
call
mov
jp
pop
xor
sbb
push
(bad)
cmp
cmp
sbb
call
test
frstor
mov
je
out
hlt
jmp
in
inc
je
add
jns
sub
sbb
ds
fs
in
add
push
imul
dec
xor
call
xor
imul
hlt
pop
xor
in
mov
(bad)
adc
xor
lock
aas
mov
test
enter
leave
(bad)
pushf
cmp
or
pop
fdiv
cs
loop
loopne
js
fstp
rcl
les
pop
mov
iret
fsub
mov
jbe
rol
or
cmp
mov
outs
adc
pushf
outs
sbb
sbb
mov
jo
mov
js
adc
adc
mov
dec
sbb
test
repz
out
stc
dec
rol
(bad)
inc
cmp
std
sbb
push
(bad)
mov
mov
sbb
xor
pusha
mov
cwde
push
jb
and
push
clc
dec
arpl
pop
and
push
mov
idiv
fadd
sti
test
cli
push
pusha
and
cmc
jmp
mov
jg
test
es
or
out
icebp
out
out
adc
pop
xlat
pushf
push
xchg
cmc
loop
std
je
mov
mov
pop
(bad)
(bad)
mov
push
mov
mov
add
mov
or
jp
mov
push
sti
xor
sbb
data16
adc
push
adc
pop
fimul
int3
push
push
cmp
cmp
jp
outs
imul
cmp
test
(bad)
call
pop
loopne
inc
inc
int3
and
dec
arpl
(bad)
aam
or
rcl
and
mov
dec
jne
jne
in
jns
jnp
jbe
mov
loopne
test
adc
sbb
cld
clc
enter
sbb
cli
inc
jmp
jge
es
fsubr
imul
sub
mov
push
dec
ror
shl
push
(bad)
cmp
in
movs
fs
(bad)
cld
fmul
ret
jl
mov
mov
mov
(bad)
pop
ins
sbb
jne
shr
pop
in
out
cs
sbb
test
mov
into
pop
js
fcomp
pop
sub
sbb
cmp
out
dec
sbb
push
fidiv
pop
call
aas
mov
pop
hlt
mov
in
stos
sub
and
cli
js
dec
test
xor
retf
call
fistp
push
sub
das
adc
xor
mov
cwde
js
jnp
test
sbb
inc
pop
enter
stc
pop
std
adc
cmp
cmc
(bad)
mov
ins
mov
mov
jl
fistp
ins
stc
div
loop
fadd
daa
and
sbb
es
in
dec
dec
pushf
jnp
rcr
les
add
hlt
pop
mov
out
inc
nop
retf
sar
pop
mov
(bad)
fst
fs
mov
jp
pop
adc
xor
sbb
test
sbb
inc
aam
cmp
and
or
jne
sbb
sbb
pop
lods
outs
ds
jne
adc
or
jae
test
xlat
rol
aam
int3
mov
or
and
ins
and
xchg
and
dec
in
(bad)
and
sub
cmp
lods
js
fs
in
jl
ja
retf
hlt
pop
pop
jg
je
pop
nop
add
mov
cld
pop
lock
dec
sub
xchg
xchg
scas
sbb
sar
lods
jae
push
dec
jmp
daa
std
add
imul
jp
(bad)
shr
fwait
pop
test
(bad)
pop
pop
les
mov
mov
inc
xchg
dec
ret
xor
xchg
push
pop
dec
mov
push
mov
mov
int3
nop
sbb
pushf
adc
push
pop
pop
js
or
mov
lock
(bad)
pop
jo
sbb
xor
or
push
sbb
fs
dec
sbb
pop
lods
ins
adc
cmc
dec
test
push
cmps
mov
cmp
sub
cmp
push
shl
hlt
adc
mov
jge
std
cvtpi2ps
loop
and
les
fisttp
fs
cmp
sbb
mov
hlt
mov
lock
mov
nop
xchg
cmp
adc
sahf
cdq
retf
pop
xor
jae
lsl
pop
repz
rcr
cmps
das
call
imul
jle
mov
mov
cs
xchg
mov
or
ss
or
push
repnz
sbb
mov
(bad)
and
push
shl
push
mov
out
cmp
and
pop
sbb
add
sub
in
push
dec
out
je
dec
dec
imul
jne
lea
fisttp
popf
xchg
popf
mov
mov
sbb
cld
aam
mov
xor
cmp
dec
loop
xor
pop
push
jl
pop
and
test
lods
xlat
std
std
sub
in
movs
stc
sbb
ins
inc
cmp
xchg
sahf
xchg
xchg
js
mov
adc
sbb
call
iret
mov
mov
test
ret
xchg
call
lods
xor
lea
mov
xchg
jnp
xchg
or
call
in
adc
test
mov
cmp
loopne
xor
mov
pushf
repz
cmp
sub
fs
push
jnp
inc
inc
icebp
call
imul
mov
xchg
out
mov
call
jns
xor
push
mov
mov
movs
ret
loopne
fstp
call
js
imul
push
push
sub
out
push
add
mov
push
ins
out
add
test
cs
jae
sbb
daa
sub
xchg
call
sub
and
mov
sub
(bad)
mov
sahf
xchg
int3
nop
pop
mov
pop
frstor
fmul
test
jne
cmps
cmp
je
jns
cdq
xchg
std
xor
out
enter
adc
push
in
fild
sbb
sbb
hlt
in
or
pop
test
push
clc
cmp
inc
imul
jmp
dec
add
aas
xor
pushf
jae
dec
inc
movs
hlt
in
push
push
sbb
add
inc
std
add
or
aam
xchg
adc
std
fs
dec
pop
mov
ret
dec
enter
leave
in
mov
in
jo
bound
and
je
fld
mov
in
cld
gs
es
repnz
sti
xchg
jo
and
and
push
mov
cmp
adc
cs
dec
push
add
xor
aam
sti
lock
out
(bad)
cwde
outs
shr
cmc
inc
lahf
xor
sar
je
std
cli
or
fisub
jl
jl
mov
push
shl
in
jmp
cmc
sbb
je
es
sub
out
jp
(bad)
mov
test
hlt
nop
adc
mov
adc
test
arpl
inc
inc
cld
sbb
cli
rcr
cs
push
sub
or
mov
sbb
mov
repnz
push
ficom
aam
jmp
call
inc
adc
add
lock
je
dec
xor
cmp
scas
loopne
je
cli
sti
dec
stc
imul
jbe
cmc
sbb
fs
pop
sub
aaa
sbb
cmp
sbb
icebp
into
fnstcw
jae
repz
adc
in
cwde
mov
push
call
pop
dec
out
rcl
xchg
xchg
push
popf
mov
scas
lods
rcr
out
push
fmulp
push
cmp
xor
mov
xor
or
and
fsub
sbb
xlat
xor
push
neg
cmp
add
pop
out
add
stos
popf
mov
jo
mov
and
popa
pop
std
fdiv
cmp
or
cmp
or
cmp
es
mov
sbb
je
sbb
std
sub
mov
popa
popf
jl
pop
int3
mov
fcom
fiadd
sbb
inc
in
inc
push
pop
jae
dec
imul
inc
ret
test
sbb
sbb
mov
aaa
clc
repnz
std
jl
push
pop
inc
icebp
sbb
sub
jl
cmp
pushf
sbb
inc
iret
mov
test
fistp
loope
mov
je
(bad)
std
push
jmp
stos
xchg
or
sub
stc
femms
or
ror
xchg
out
or
jo
loope
aam
mov
lock
in
push
rcr
mov
sar
dec
pushf
jmp
iret
leave
rol
cmp
lock
mov
sub
sahf
jle
rcl
pusha
cs
pop
icebp
std
lods
pop
push
or
sub
sub
mov
mov
push
sbb
sub
aaa
fnstcw
out
fcomp
inc
pushf
mov
fdiv
jae
in
inc
add
xor
add
pop
pusha
push
stc
push
add
fld
mov
loopne
jl
(bad)
clc
xlat
adc
cld
es
mov
sbb
dec
push
sub
xor
dec
pop
xor
xor
xor
ss
jne
cmp
jmp
pop
in
mov
mov
lods
js
es
sahf
dec
fnstenv
pop
repz
dec
cmp
cld
jne
jno
lea
inc
imul
loope
int3
gs
push
js
mov
enter
jae
mov
fdivr
and
xor
lods
stos
mov
(bad)
call
dec
or
rcl
fsubr
sub
mov
mov
pop
fadd
push
and
enter
sub
int3
jecxz
push
dec
in
adc
pop
(bad)
out
sbb
mov
fdiv
fiadd
cmp
pop
dec
push
loopne
je
push
in
jge
mov
out
cld
dec
cmps
(bad)
cmp
sbb
cmp
xchg
dec
mov
push
cli
fs
sbb
pop
sub
inc
mov
dec
push
in
mov
rol
inc
inc
je
out
adc
les
pop
xor
pop
xchg
or
mov
push
push
xchg
pop
sub
or
jmp
jp
pushf
js
inc
cdq
dec
fwait
add
and
or
data16
mov
push
fcom
cwde
movs
xor
mov
push
movsx
inc
dec
sbb
jb
ja
sahf
movs
cmp
fs
pop
adc
in
jo
push
sub
and
je
mov
push
or
dec
cli
pushf
sbb
ins
jns
scas
pop
lods
jns
fmul
xchg
std
sbb
clc
pop
jo
sub
or
je
in
std
sar
call
imul
jmp
int3
loop
jl
stc
pop
sub
imul
sbb
jnp
inc
inc
push
jne
daa
and
mov
sbb
pushf
fwait
cs
mov
push
dec
mov
sbb
push
js
sbb
and
sub
add
sbb
pushf
jbe
nop
jle
push
int
push
xor
cmp
loope
push
adc
je
cmp
stc
cmp
(bad)
pop
fisttp
(bad)
xchg
xlat
and
and
add
fs
repnz
inc
dec
fst
cmp
jns
int3
push
sbb
das
div
(bad)
mov
(bad)
xor
pushf
pushf
jmp
sub
xchg
adc
push
outs
cmp
xor
jne
cmps
call
mov
sub
sbb
push
jl
and
push
xor
int3
pop
ja
add
push
int3
nop
mov
mov
dec
fdivr
jne
fwait
cdq
mov
mov
mov
mov
jo
mov
rcl
dec
cs
mov
mov
mov
lahf
nop
mov
xchg
and
xchg
jp
call
pushf
lea
sbb
in
inc
jne
in
and
xor
mov
and
ins
dec
sbb
rol
test
fcmovbe
sti
lock
dec
popf
pop
pusha
mov
lods
test
push
ds
nop
and
sbb
adc
pushf
pop
loope
mov
jns
adc
pop
mov
pop
mov
hlt
mov
xor
jl
ins
pop
dec
imul
aad
mov
sar
dec
in
sahf
mov
or
inc
data16
xor
add
fcomp
push
test
ja
or
pop
cli
scas
mov
sub
sub
rcr
movs
sbb
jmp
or
mov
xchg
xchg
jmp
mov
pusha
icebp
and
pop
in
push
fstp
push
dec
mov
jo
mov
ret
in
dec
add
div
or
test
and
test
cs
jno
adc
add
mov
pop
shld
mov
lods
xchg
sbb
fndisi(8087
fisub
lahf
mov
dec
ja
daa
cmp
sti
loopne
and
or
js
std
aaa
mov
cmc
jge
cli
arpl
sub
cwde
into
in
pop
enter
mov
js
push
stos
jl
jb
mov
int3
mov
retf
xor
xor
inc
adc
or
dec
sbb
pop
test
jmp
fidivr
pop
rcl
ja
mov
mov
mov
je
cmp
jle
sbb
ins
cmp
cdq
xchg
xor
sub
shl
inc
inc
jae
cmp
inc
xor
sbb
minps
daa
add
mov
int3
lock
add
or
pushf
cmc
xchg
enter
xchg
add
mov
loope
js
dec
mov
mov
arpl
popa
cmc
or
cmp
int3
idiv
adc
outs
mov
or
mov
int3
outs
pushf
mov
nop
outs
mov
jmp
jge
shl
push
fsub
std
(bad)
cli
pusha
jecxz
cmp
fild
mov
sbb
pop
adc
or
sbb
jno
sar
sbb
lea
cdq
sbb
xchg
xchg
xor
icebp
pusha
aad
jl
jp
cmps
mov
mov
(bad)
jp
dec
dec
cli
fadd
cld
cli
clc
out
call
sbb
ins
jmp
loope
add
and
lock
adc
sti
or
xchg
hlt
or
cmc
or
fdivr
in
je
add
retf
add
dec
out
sub
and
push
and
sbb
aaa
test
sub
repnz
cmp
add
ins
dec
ret
icebp
sbb
jl
int
mov
add
cmp
vpsubq
cmp
js
mov
in
test
or
(bad)
or
loope
add
jmp
sub
xor
jl
push
test
in
sbb
sti
pop
mov
imul
jne
lahf
mov
sub
mov
lock
adc
pop
int
xchg
sbb
dec
(bad)
fdiv
aas
ins
cmp
cmp
or
pushf
in
stos
and
hlt
push
hlt
fbstp
or
add
pushf
sti
xor
aas
test
mov
lods
add
add
push
adc
lock
int3
nop
and
je
cmp
or
and
and
shl
sub
adc
adc
push
imul
nop
shl
pop
and
and
mov
jl
pop
addr16
sub
mov
push
call
jmp
in
test
jmp
pop
out
adc
add
xchg
fs
(bad)
pusha
jne
jecxz
jmp
test
test
adc
mov
js
push
adc
aas
sub
das
dec
hlt
mov
or
movs
fbld
mov
cmc
or
xchg
fsubr
test
jl
loopne
inc
pop
gs
dec
adc
jae
jmp
jmp
int3
inc
sub
adc
mov
xor
or
(bad)
add
cmp
shl
int3
and
push
fsubrp
push
push
ins
js
jno
fdivp
std
ins
test
sub
sbb
das
dec
in
xor
js
inc
in
or
dec
aaa
push
in
or
nop
xchg
push
imul
adc
mov
mov
adc
retf
adc
cld
mov
mov
jp
xchg
mov
xlat
mov
test
jmp
scas
nop
out
test
adc
clc
or
and
loope
nop
cld
adc
xchg
push
xor
cmc
inc
(bad)
pusha
xor
lods
inc
push
adc
sti
in
imul
xor
mov
int
fmul
in
pop
into
lock
retf
mov
xlat
jmp
jl
leave
dec
mov
add
ret
lock
adc
push
sbb
lea
sbb
cmps
and
xor
lahf
mov
in
jl
sub
add
sti
sub
icebp
outs
mov
retf
dec
ror
stos
jb
lods
xchg
js
or
jl
xor
jne
mov
fs
xchg
jge
(bad)
in
adc
push
mov
mov
out
jmp
hlt
mov
sbb
icebp
mov
jo
add
test
jmp
mov
lock
adc
jle
in
mov
xor
and
mov
cmp
and
fld
fadd
shr
movs
(bad)
xchg
popf
popf
mov
pushf
pushf
mov
clc
mov
fld
push
pop
inc
stos
xor
hlt
jae
(bad)
idiv
mov
pop
mov
mov
fs
and
fwait
not
sahf
add
cmps
pushf
idiv
mov
mov
mov
add
mov
fcomp
ret
iret
fstp
jns
fcom
into
ins
mov
push
push
mov
jmp
mul
js
test
pop
adc
jl
jl
pop
dec
cmc
pop
jmp
push
pop
fsubr
or
loope
cmp
dec
(bad)
les
cs
shl
push
mov
sbb
and
sub
jbe
mov
mov
sbb
xor
dec
(bad)
idiv
xor
js
mov
mov
cmp
sar
mov
mov
push
and
int3
push
inc
bnd
rcl
xlat
inc
retf
xchg
xchg
xchg
xchg
jl
jg
mov
out
push
mov
test
nop
hlt
cmp
pushf
push
mov
mov
in
test
mov
mov
sub
sub
add
cmp
hlt
adc
push
sbb
inc
pushf
cld
and
in
inc
push
bound
xor
push
ret
js
cli
cld
xchg
out
inc
fsubr
push
mov
mov
(bad)
ins
sub
jo
pop
push
cld
je
fnstenv
hlt
hlt
js
and
jp
iret
repnz
inc
cli
xor
rcl
sbb
aam
fsub
arpl
push
movs
jae
les
xor
test
add
push
jo
je
sbb
dec
mov
jo
mov
xlat
rcl
dec
pushf
push
inc
(bad)
adc
cld
xor
pop
adc
imul
adc
cld
pop
fs
pushf
cmp
jg
clc
adc
jl
jmp
movs
pushf
jne
cmp
pop
xor
jmp
adc
out
js
ret
loop
(bad)
aam
xor
mov
lahf
mov
fsub
fistp
ret
outs
jbe
push
test
and
stos
into
mov
xchg
mov
lods
jmp
loop
push
retf
and
cmp
cvttps2pi
hlt
stc
bound
mov
add
aaa
cld
cwde
cli
mov
test
mov
sahf
or
test
js
push
cmp
(bad)
xchg
cmps
mov
mov
loopne
jmp
jnp
std
adc
test
ins
cli
or
pop
mov
add
adc
and
sbb
imul
repz
inc
cmp
and
and
add
in
push
retf
loop
outs
mov
in
and
frstor
outs
pushf
mov
jb
mov
jne
stc
clc
test
nop
jl
je
xor
or
cmp
rcr
jl
mov
inc
mov
mov
(bad)
cmc
sub
dec
in
sub
sbb
push
push
jb
pop
hlt
jns
daa
es
ds
outs
cdq
call
(bad)
sub
add
mov
rcl
shl
mov
ins
push
int
or
xor
data16
xchg
xchg
jg
pop
(bad)
aad
in
int3
sbb
add
sub
or
adc
js
sbb
cld
nop
clc
and
imul
ins
not
or
adc
sub
push
rcr
sub
in
sbb
mov
pop
sub
mov
in
in
cmp
test
xchg
scas
mov
sti
cwde
mov
dec
out
test
jl
int3
jl
leave
in
push
jo
fld1
test
movs
fimul
mov
cmp
cld
mov
dec
inc
sbb
dec
in
push
or
call
cli
idiv
arpl
cld
mov
cmps
je
test
xchg
dec
or
xlat
fadd
les
mov
xchg
imul
call
xchg
jno
fidivr
cmp
push
add
test
add
(bad)
jnp
sbb
adc
or
test
cmc
out
or
cld
push
jmp
add
xor
popf
and
sub
ins
in
cmp
loopne
loopne
mov
cmp
fdivr
cmp
xchg
mov
data16
cmp
stc
cmp
fadd
movs
and
jno
ss
pop
std
or
jb
mov
jne
stos
cli
je
into
std
lock
repnz
inc
xor
js
(bad)
clc
adc
fadd
je
xchg
cdq
cwde
or
test
dec
and
cwde
cwde
push
mov
nop
push
mov
jo
mov
rcl
pushf
cmp
adc
cmp
cwde
fsubp
lods
mov
fsubr
jecxz
adc
or
test
xlat
cwde
sti
sub
xor
or
ins
out
call
test
das
sbb
cmp
jge
sbb
pop
pop
je
(bad)
in
pop
sbb
pusha
sbb
pusha
sbb
ins
mov
jecxz
imul
js
loope
mov
dec
mov
aad
lods
shr
and
inc
imul
ja
into
icebp
pop
inc
xchg
sub
aam
in
inc
dec
add
scas
mov
popf
mov
fs
mov
repnz
iret
in
add
xor
fdiv
cmp
add
test
and
test
cwde
push
adc
lods
push
daa
js
aaa
xor
loopne
(bad)
lods
addr16
xchg
jae
lds
scas
mov
test
mov
js
leave
ret
iret
enter
les
inc
mov
fstp
jnp
xlat
fld
stc
or
sbb
xor
pop
or
push
jle
(bad)
jl
cmp
sub
xor
xor
push
lods
iret
xor
xor
lea
test
retf
loopne
pop
or
movs
dec
mov
jne
push
fs
jo
or
push
mov
js
cmps
ins
fincstp
adc
cli
cmp
aam
xor
cld
leave
cli
fsubr
inc
popf
loopne
sbb
std
sbb
cmp
mov
jp
adc
or
jmp
in
add
dec
sub
xor
cli
loopne
sub
fdivr
sub
pop
jo
mov
es
pop
push
pop
mov
daa
xor
ins
imul
mov
daa
in
add
adc
sbb
adc
call
push
and
cli
cmp
push
mov
in
mov
sar
retf
pop
call
xchg
mov
cld
cdq
xor
jns
xchg
stos
jnp
in
std
and
pusha
outs
jno
or
pop
jp
ins
ins
cmp
cmp
arpl
js
mov
cli
js
cmp
xchg
scas
mov
in
fyl2x
repnz
jmp
jo
out
adc
adc
lea
mov
data16
cmp
div
or
cwde
jne
mov
fcom
push
cmps
fdiv
rcl
or
adc
pusha
lea
movs
imul
out
mov
pop
sti
dec
ins
push
jns
or
xchg
adc
sbb
and
push
and
pop
in
cld
xor
dec
push
mov
test
int3
xor
jb
(bad)
cld
mov
sbb
aam
outs
cmp
ins
jne
push
test
cmc
and
shl
ss
jo
pop
imul
cdq
stos
iret
(bad)
jne
fdivr
test
mov
add
pop
push
loopne
pop
pop
pop
stos
dec
stc
enter
fdiv
je
xchg
test
or
mov
add
add
push
or
mov
(bad)
out
cwde
fmul
or
mov
stos
mov
xor
wrmsr
js
or
es
fs
sbb
adc
pop
and
and
and
jo
sub
jmp
mov
mov
mov
(bad)
mov
sub
mov
mov
test
pop
sub
je
test
lds
mov
ins
ja
addr16
shl
jge
sahf
scas
aad
pushf
sbb
call
js
int3
jecxz
jl
push
sub
enter
pop
sbb
adc
in
add
(bad)
loop
add
or
sahf
jo
enter
dec
jne
pop
loop
xchg
test
nop
shl
test
sub
js
dec
mov
xor
cmp
sub
imul
add
mov
adc
and
mov
jge
ins
shr
sbb
lock
je
mov
fxtract
cmp
out
sbb
rol
test
loop
jmp
jne
shr
fs
icebp
push
adc
jg
or
ins
jbe
xor
dec
jb
ret
sahf
stos
push
inc
movs
fcom
cmps
je
mov
mov
sti
sub
mov
frstor
sar
xor
xchg
xchg
retf
pop
jns
paddusb
lahf
mov
add
jg
pop
gs
movs
aas
mov
movs
addr16
mov
sub
or
or
daa
jb
test
jbe
add
and
xor
repz
test
and
sub
dec
mov
xor
jl
mov
retf
out
cli
mov
mov
dec
je
mov
mov
sub
inc
(bad)
dec
data16
dec
push
pop
pop
xor
nop
xor
int3
jbe
mov
lahf
mov
call
loopne
sbb
lds
fmul
jne
call
lods
int3
xor
mov
aam
out
je
xchg
pop
clc
push
or
imul
or
test
popa
mov
je
xor
xchg
call
retf
pop
pushf
adc
pusha
adc
push
sysenter
add
sub
cmp
sbb
add
xor
cld
mov
repnz
fs
ficom
in
fcomp
jecxz
mov
xchg
mov
loopne
int3
xor
lods
pop
ins
sub
outs
xchg
ja
xchg
jl
(bad)
test
sbb
cmps
je
pop
loopne
mov
pop
jo
and
jb
pop
dec
repnz
movs
data16
cmp
rcr
movs
and
ret
xchg
mov
cmp
stc
(bad)
clc
push
xlat
out
jns
(bad)
push
fdivr
cmp
cmc
in
jge
jecxz
hlt
pop
pop
rol
aam
add
add
mov
adc
xchg
xchg
sbb
add
out
lea
jl
add
jb
jl
jmp
xchg
loopne
adc
mov
ins
lods
add
pop
push
je
mov
xchg
das
les
pop
repnz
jae
loopne
xchg
in
pushf
nop
retf
in
push
test
fild
push
jmp
stos
mov
movs
aam
add
push
imul
add
adc
mov
inc
adc
adc
cmp
mov
js
mov
dec
push
jne
push
cmp
lahf
movs
and
jo
sub
cwde
cmps
jnp
mov
enter
lods
imul
adc
jo
sbb
push
das
dec
jp
sbb
or
adc
sbb
cmp
pop
jmp
or
aad
dec
xor
cli
test
cmps
cmp
daa
js
pop
sbb
xchg
cmc
push
push
stos
mov
and
cwde
and
xchg
and
int3
xchg
in
in
lock
and
fs
icebp
nop
pop
jecxz
mov
mov
cdq
cmp
xchg
movs
les
fsub
fdiv
cld
mov
ins
jae
mov
and
pop
sbb
jns
js
arpl
ror
(bad)
(bad)
mov
jae
jo
loope
push
sti
mov
push
movs
mov
push
adc
leave
stc
data16
sub
push
add
in
cmc
add
push
cs
mov
sbb
dec
or
cwde
inc
and
cmp
add
out
xor
cwde
or
or
lods
dec
js
ins
adc
sub
adc
and
in
leave
cli
or
and
xor
in
push
loopne
dec
or
fisttp
test
cld
dec
test
les
(bad)
sub
mov
jo
mov
test
jp
mov
jne
jb
stos
jae
outs
sahf
nop
sub
lods
or
div
pop
adc
scas
mov
fst
leave
pop
mov
out
mov
dec
ret
jl
je
stc
push
fsubr
pushf
enter
je
inc
mov
and
pushf
mov
mov
pop
sub
je
xor
or
leave
jne
jo
pop
dec
pop
xor
mov
mov
pop
sbb
xchg
add
push
inc
fs
inc
xlat
out
pop
dec
fcomip
and
out
dec
push
fwait
scas
cli
aam
(bad)
jnp
retf
push
int
jo
movs
ins
scas
push
mov
xor
jb
xchg
adc
adc
push
rcl
add
scas
inc
clc
js
popa
aas
loop
xor
push
js
pop
cmp
xchg
mov
aam
addr16
cmps
les
xor
or
je
mov
or
xlat
cli
cwde
(bad)
sbb
cld
aam
jmp
sbb
pop
adc
jb
cmp
pop
lods
and
sbb
inc
pop
test
je
push
adc
sub
jns
xor
pusha
xor
sbb
ins
dec
shl
pop
mov
sub
mov
pop
push
mov
sbb
xchg
int
lods
xchg
mov
mov
mov
fsub
ins
shl
retf
sub
les
jle
hlt
pop
xlat
mov
popf
inc
lss
jnp
jne
jb
xor
fucom
cli
mul
data16
mov
jns
mov
xor
call
je
std
fs
fisttp
or
fistp
sbb
loop
mov
ins
xor
fsubr
in
rcr
neg
aad
jge
into
loop
dec
mov
loopne
sti
and
sub
sbb
jmp
xor
sahf
in
nop
dec
mov
mov
dec
je
pop
xor
mov
mov
push
mov
(bad)
nop
cmps
rcr
ss
push
ja
jp
cld
int
ins
jb
jae
push
out
dec
stc
mov
xchg
mov
in
addr16
cmps
jbe
xchg
mov
out
mov
xchg
dec
pusha
nop
mov
mov
xchg
jmp
aam
pushf
push
jle
les
add
mov
clc
sbb
fidivr
lock
loope
cmp
sbb
fwait
dec
test
les
adc
sbb
or
in
les
jmp
clc
ins
sbb
jae
jl
fld
(bad)
xchg
jl
test
jnp
sbb
nop
gs
gs
clc
loopne
rcr
sub
mov
movs
lea
in
push
repz
or
cdq
or
xchg
xor
aam
nop
and
jbe
cwde
retf
inc
push
xchg
ret
ins
sbb
xor
std
movs
xchg
les
cwde
ja
mov
cmp
pop
sub
mov
xchg
dec
cs
les
mov
sbb
outs
jmp
clc
test
jno
jle
and
sbb
stc
dec
dec
jl
xchg
jmp
fnstcw
mov
mov
call
cli
outs
jae
test
cwde
add
xchg
inc
cmp
push
das
repnz
dec
(bad)
xor
call
jns
sahf
jmp
fwait
push
ins
xchg
cwde
mov
mov
sahf
jp
stos
mov
dec
les
push
popf
ret
jo
xchg
(bad)
xor
mov
jmp
xor
pushf
inc
cmps
retf
inc
xchg
mov
xor
adc
add
aas
inc
push
push
nop
cmp
cs
mov
call
(bad)
mov
bnd
mov
cmp
inc
pop
js
xor
jl
pop
xor
sbb
or
mov
adc
hlt
xchg
jne
hlt
add
outs
adc
cli
pusha
jecxz
pushf
sar
push
movs
mov
mov
stos
fidiv
jl
lahf
push
cmp
lods
cdq
test
sahf
dec
jae
retf
push
push
xor
pop
xchg
mov
and
xor
xlat
lods
dec
add
xor
outs
sahf
rol
jbe
lods
call
mov
xor
int3
fnstcw
cmp
js
mov
(bad)
jle
mov
(bad)
dec
call
lods
fwait
stc
and
dec
in
je
push
in
ins
jno
sub
dec
jmp
shl
mov
js
movs
pop
adc
fstp
push
or
fstp
pusha
and
pushf
or
push
das
inc
and
cwde
jae
pop
adc
jnp
jp
xchg
mov
mov
mov
and
enter
ret
or
pushf
adc
sahf
mov
data16
sbb
movs
pop
sub
pop
mov
or
xchg
xchg
and
sub
ret
jl
mov
cmp
sub
jecxz
je
jnp
jae
sbb
fisttp
pop
enter
inc
gs
cmc
addr16
sbb
dec
pop
ins
dec
push
jae
xchg
jne
fsubr
jbe
outs
(bad)
ja
adc
pushf
sub
xchg
mov
jg
int3
cmp
pop
js
jns
jmp
cmp
call
jns
jb
jo
fstp
xor
enter
xor
stos
push
sub
jb
repnz
adc
in
sub
call
lock
ins
(bad)
mov
hlt
and
out
jae
dec
push
js
xchg
mov
push
repz
push
into
mov
jmp
js
adc
cwde
in
mov
add
push
sub
js
mov
sub
push
(bad)
and
jo
jae
or
xchg
adc
popf
call
push
dec
add
pop
push
dec
dec
jae
xor
cmp
ds
xor
xchg
(bad)
xor
dec
inc
inc
mov
dec
dec
add
adc
aad
mov
int3
daa
adc
mov
mov
clc
add
mov
jl
pop
mov
leave
pop
sub
loopne
stos
inc
shl
jo
mov
test
outs
cmc
mov
cli
enter
test
inc
cmp
cwde
and
js
and
push
adc
jle
lods
and
sub
test
xor
xchg
and
and
je
xchg
jae
sub
fs
dec
sbb
and
in
push
inc
inc
cmp
pop
dec
sbb
adc
jne
je
pusha
inc
scas
inc
je
pop
and
inc
pop
lods
and
stos
xchg
mov
sbb
xor
call
jp
add
repnz
cmp
adc
fcmovb
add
xor
xchg
js
aad
xor
mov
inc
cmp
jne
pop
add
ds
push
or
pop
dec
inc
pop
mov
xor
pop
(bad)
cld
push
inc
pop
test
ss
sub
sbb
and
(bad)
into
pop
and
dec
inc
inc
lahf
push
push
push
test
mov
inc
mov
push
test
push
rcr
scas
test
push
pusha
push
js
scas
pusha
xor
sub
fnstcw
and
inc
add
xor
cmp
mov
lahf
pushf
enter
push
ds
push
cmp
pushf
mov
or
xor
inc
mov
mov
inc
sbb
test
xor
dec
dec
and
daa
repz
inc
aaa
jle
jno
sub
lea
ins
dec
xor
adc
nop
rol
psrlw
outs
out
call
push
jle
xor
push
je
jne
and
stos
je
inc
sub
sahf
pushf
(bad)
call
and
ret
or
nop
loop
jne
outs
imul
aas
cmps
in
fadd
std
add
cwde
jmp
fimul
xor
jmp
pop
nop
cmp
lods
inc
xor
jne
pop
dec
cmp
std
jo
add
call
xor
push
sbb
push
add
mov
cmp
test
sub
pop
cmp
sub
pop
arpl
adc
xor
inc
pop
pop
adc
mov
or
in
in
mov
fwait
dec
pushf
imul
iret
pushaw
xchg
jo
mov
pop
fiadd
test
mov
rol
data16
lock
dec
push
push
std
das
jl
sti
jecxz
int
xchg
lea
test
cli
aam
mov
pusha
imul
test
nop
pop
add
jo
mov
pushf
push
push
bound
fs
dec
dec
aas
add
pop
cmp
mov
inc
xor
push
and
imul
js
es
pop
adc
inc
xor
inc
inc
jmp
push
push
push
sub
mov
in
hlt
out
dec
addr16
imul
xchg
add
sub
imul
into
sbb
mov
shl
inc
and
dec
and
fcomp
in
loopne
arpl
or
addr16
dec
xchg
cli
push
rcl
mov
xor
xchg
dec
pop
in
jl
outs
popa
test
mov
sbb
or
mov
inc
arpl
test
call
fs
xor
inc
ss
push
pop
push
jns
fs
and
pop
push
mov
cmp
sti
and
or
push
cmp
movs
push
xchg
add
mov
mov
call
out
out
add
fs
clc
push
dec
dec
jmp
shr
enter
js
adc
cli
jae
jb
test
jnp
icebp
retf
cld
xor
ins
inc
ins
test
inc
inc
das
aam
cli
add
cld
in
or
clc
xchg
push
xchg
js
fcmove
mov
sbb
(bad)
sbb
or
(bad)
sub
pop
dec
inc
inc
jae
and
mov
adc
aas
ds
dec
pop
lods
test
test
push
push
push
push
jp
outs
push
out
sbb
pop
push
dec
xor
mov
xchg
xor
sbb
mov
pushf
pushf
xchg
test
add
mov
sub
inc
add
pop
xchg
jo
ret
sub
imul
inc
jne
ss
mov
add
shl
jno
jb
mov
movs
jmp
fs
je
test
in
scas
sub
clc
and
cmp
add
mov
add
jp
pop
jge
call
inc
leave
(bad)
or
cwde
xchg
xchg
jne
mov
dec
fld
or
mov
pop
and
and
and
inc
aam
ins
and
mov
clc
push
push
push
jmp
sti
and
dec
stos
mov
and
xor
sbb
stos
adc
inc
cld
fwait
sbb
clc
xchg
lock
push
pop
in
call
push
mov
pushf
mov
lods
dec
adc
test
je
pushf
out
inc
mov
jae
outs
cld
dec
xor
aam
daa
pop
enter
push
or
loopne
test
jae
mov
jmp
xchg
jae
xchg
and
out
sub
jnp
push
adc
(bad)
pop
mov
adc
(bad)
out
inc
bound
loop
sub
push
mov
inc
cmp
sbb
mov
inc
push
mov
mov
outs
data16
xor
pop
ins
jae
sahf
xchg
pop
ins
add
mov
int3
mov
push
add
rcr
mov
push
or
loopne
and
call
shl
or
sar
ret
call
jp
xlat
push
pop
jne
in
gs
jge
sub
das
idiv
inc
sbb
cmp
jp
adc
inc
xor
mov
mov
cmp
xchg
das
cmp
push
push
mov
enter
test
pop
pop
mov
dec
fadd
and
mov
int
sar
jp
ins
or
int
retf
shl
icebp
mov
sub
mov
and
sbb
adc
mov
pop
push
dec
mov
and
pushf
mov
dec
in
loop
repnz
imul
cmp
je
add
or
fucom
cmp
jp
sub
sbb
repz
outs
imul
loope
mov
jo
or
jl
cmp
cld
pop
xor
push
push
and
push
call
pop
xor
call
xor
add
jecxz
add
cmc
repz
jae
pop
repz
adc
push
lods
xor
sti
cmp
ins
jp
jne
fsub
fmul
bound
popa
mov
aam
loop
pusha
cld
or
aad
pop
adc
pop
fs
je
sbb
fbld
or
or
cmp
cs
xor
or
mov
idiv
xlat
aam
dec
jmp
jno
hlt
out
adc
cmp
cld
pop
push
sub
stos
hlt
sar
fdivr
xor
pop
sbb
xor
mov
ins
lods
in
je
js
retf
jo
ins
stos
js
jbe
je
ja
outs
inc
push
sbb
sub
mov
dec
fld
je
sbb
sbb
in
pop
das
repz
dec
and
call
or
add
push
jns
(bad)
js
dec
inc
lock
sbb
lods
jmp
mov
js
out
enter
push
mov
(bad)
jge
pop
pop
pop
mov
in
xor
fnsave
jge
pop
pop
cmc
fs
or
jp
js
fcom
sub
mov
cmp
and
test
fimul
mov
pusha
mov
movs
pusha
loope
iret
xor
sub
push
xor
jo
ffree
and
cmc
jp
sub
sbb
jge
sbb
jo
mov
shl
jp
mov
jb
sub
mov
mov
jo
xlat
fdivr
sub
in
out
cld
push
adc
xor
dec
pop
lods
xor
out
(bad)
or
cli
fdivr
stc
std
mov
test
ds
inc
push
repnz
jmp
or
cld
test
test
xor
xor
fcmove
inc
xor
and
fs
out
push
adc
clc
div
mov
test
lods
sub
push
dec
cmp
pop
push
adc
lock
movs
sbb
js
or
push
stc
inc
cmp
ret
popa
push
pop
push
mov
cld
add
icebp
call
lock
arpl
in
sbb
loopne
xor
sub
es
xor
js
dec
sbb
pushf
(bad)
call
mov
add
inc
xor
sbb
mov
gs
xor
repnz
fld
inc
mov
inc
push
or
pop
jae
push
jae
sub
jl
out
out
mov
in
sti
icebp
out
cmp
in
das
shl
and
sub
les
jmp
out
jmp
mov
adc
xlat
je
dec
dec
dec
mov
and
in
scas
int3
mov
push
dec
dec
dec
jo
cmp
or
jne
sub
sub
clc
dec
je
mov
sub
xor
js
ds
or
mov
cli
mov
lods
and
(bad)
aam
xor
std
les
fnstsw
sub
add
js
test
je
jge
cmps
mov
push
mov
cwde
outs
jne
dec
jne
push
push
adc
xchg
aam
mov
cmc
movs
sbb
dec
std
add
and
fs
aaa
dec
lods
push
lds
les
inc
pushf
dec
inc
ss
fnsave
call
xor
jo
imul
ins
cmc
jmp
mov
dec
push
or
(bad)
mov
lds
les
rcr
push
jecxz
adc
iret
lods
js
ror
aam
push
or
sub
pop
es
dec
and
or
xor
je
ret
jnp
pop
push
dec
push
or
add
test
mov
sahf
and
sub
clc
pushw
mov
aaa
rol
fs
(bad)
int3
std
jo
sti
and
cli
sub
mov
je
push
pop
sub
and
or
test
mov
fidivr
pusha
adc
movs
cs
or
hlt
shr
retf
test
jp
jmp
fcomp
les
hlt
(bad)
cmc
out
test
out
xlat
lods
rcl
les
sar
loopne
aam
cwde
or
fsubr
loope
mov
bound
fscale
test
ror
aam
pop
jae
ss
push
inc
cmp
js
sub
mov
dec
gs
and
xor
pushf
inc
cmp
das
cld
stos
mov
out
xchg
shl
fsubrp
clc
xor
mov
fimul
mov
shr
sbb
push
js
jbe
ss
cmc
cmp
test
jno
dec
fsubr
fsubr
leave
jbe
xor
or
xor
sub
push
std
mov
clc
adc
in
fnstcw
popf
sti
add
add
and
and
push
cmp
mov
adc
enter
or
mov
imul
out
(bad)
jo
(bad)
cld
or
and
jle
imul
mov
mov
pop
jl
imul
fcom
in
dec
sub
stc
js
pop
js
mov
sar
mov
pop
push
inc
jns
pop
push
ror
aam
dec
call
sahf
shr
pushf
stos
jbe
dec
sbb
push
jo
sbb
dec
cld
sub
(bad)
sti
add
retf
loopne
xchg
dec
les
dec
arpl
je
jnp
ja
jecxz
call
dec
and
adc
sub
std
mov
int3
xor
std
add
push
add
sub
push
es
or
(bad)
mov
gs
cmp
aam
shl
iret
scas
mov
or
add
xor
dec
fcmovnbe
jae
or
add
adc
sub
shl
cwde
xor
stos
mov
movs
js
cmp
jmp
sub
or
and
hlt
inc
add
pusha
cmp
js
push
es
dec
in
xor
sbb
les
push
add
test
jne
xor
imul
adc
call
push
jne
aam
jo
mov
push
and
dec
fs
jo
fs
jo
push
retw
movs
(bad)
sub
add
jae
push
mov
adc
movs
mov
pop
cmp
push
je
dec
push
add
shr
pop
and
adc
jmp
int
dec
jnp
nop
std
cmc
mov
add
mov
pop
xor
in
jmp
or
call
sbb
jne
add
loope
pop
jae
xor
and
dec
js
add
std
inc
or
dec
xor
dec
sub
xor
test
in
sub
mov
adc
sub
jmp
cmp
inc
sbb
inc
adc
sub
pop
sahf
push
pop
outs
pop
js
inc
lock
adc
xchg
int3
push
sbb
pusha
jne
sbb
js
xchg
ins
inc
in
lods
push
push
aad
push
or
inc
push
iret
lock
adc
bound
dec
js
aaa
cli
js
jge
sub
lea
fsub
and
adc
pop
cmp
dec
call
add
in
push
jmp
(bad)
dec
pop
retf
int3
mov
add
jae
adc
or
inc
sbb
movs
repz
mov
jne
mov
mov
and
clc
jbe
cmp
dec
sbb
sbb
jbe
inc
movs
pop
pop
and
cwde
es
adc
mov
in
dec
inc
cmp
pushf
lds
mov
mov
sbb
push
cmp
aam
cli
jl
jg
pushf
jbe
cli
test
pop
cmp
xor
in
fsub
adc
pusha
sbb
cli
sbb
and
cmp
jnp
je
ins
test
adc
mov
int3
mov
pop
cmp
sub
sub
dec
adc
xchg
push
mov
mov
pop
pop
cmc
inc
jo
sub
xor
mov
jp
push
lock
stc
repnz
jne
sbb
(bad)
mov
rcr
mov
mov
scas
mov
stos
movs
stos
cli
mov
cmps
popf
call
mov
or
adc
or
sub
jb
push
or
sar
inc
or
std
idiv
mov
cli
test
or
and
sub
hlt
and
pop
cld
push
sti
std
push
test
jmp
cmp
cli
xor
add
dec
push
cs
push
and
xor
les
or
mov
dec
out
jb
enter
retf
div
mov
gs
pop
aaa
add
js
ins
adc
sbb
cld
inc
es
push
pop
ds
gs
cmp
outs
push
inc
dec
sbb
call
cli
inc
sub
xor
sti
mov
dec
pushf
jmp
mov
mov
ret
test
retf
into
idiv
daa
outs
in
sub
int3
sar
inc
into
jp
(bad)
mov
inc
or
cmp
aaa
aam
dec
inc
dec
gs
dec
int3
movs
adc
mov
push
pop
sti
pop
jb
or
div
icebp
dec
mov
or
mov
adc
nop
sbb
sti
nop
cmc
repz
fisub
sub
pop
xor
and
and
mov
pop
xor
call
pop
sbb
and
jb
add
push
push
enter
jmp
aad
hlt
jno
push
fadd
(bad)
fcomp
pop
adc
mov
add
test
sub
inc
in
and
cmp
repz
push
int
jl
sbb
or
dec
sbb
std
test
mov
in
adc
test
add
js
vpcmpgtb
sahf
test
ins
inc
sub
pop
inc
test
aas
(bad)
lods
fs
cld
aad
ror
rcr
inc
ins
lock
or
mov
test
mov
adc
mov
imul
jne
push
sub
addr16
popa
fisubr
sub
rcr
push
in
jo
bound
je
push
sbb
mov
cmp
push
dec
movs
leave
out
shl
js
lock
call
ins
and
pop
call
ret
std
jl
fmul
pop
and
test
test
in
pop
xor
in
inc
mov
jmp
test
pusha
inc
and
test
lods
gs
jp
sbb
inc
mov
cmps
cmp
enter
cmp
mov
mov
jl
mov
into
jl
and
aas
bound
cmp
mov
pop
sbb
push
ss
jns
and
cli
pusha
aad
xor
xor
imul
jbe
(bad)
clc
mov
xchg
add
rcr
pop
loope
or
sub
xor
adc
adc
inc
xor
popf
xor
inc
pusha
fnstcw
sub
push
and
test
ja
pop
sbb
cwde
je
pop
ret
xor
jp
add
call
cwde
mov
cld
xchg
leave
sbb
aam
call
jne
jmp
cmp
push
sti
fmul
push
lods
push
sub
dec
dec
and
inc
and
fld
lock
cmps
fs
mov
popa
pop
repz
jne
js
and
jl
retf
retf
mov
lods
mov
sbb
jp
movs
mov
xor
cld
push
pop
gs
dec
mov
xchg
sub
cs
sub
jne
sub
dec
rcr
sub
call
pop
sub
nop
call
(bad)
mov
or
je
movs
xor
add
or
in
and
and
lock
push
jl
dec
aas
cmp
push
lods
dec
push
mul
loopne
cmp
sti
sub
imul
jns
inc
or
or
or
shl
sti
mov
and
adc
mov
jl
lods
xchg
cmp
and
sbb
out
and
lds
mov
repnz
sub
pop
cmp
pop
das
inc
shl
jb
push
clc
outs
dec
cs
jae
call
add
pop
push
pop
pusha
push
sbb
cmp
jl
in
cld
push
(bad)
int
test
ret
retf
aam
clc
pushf
mov
test
push
cmps
lods
out
test
dec
mov
push
clc
xchg
fadd
sbb
out
mov
je
clc
xor
cmp
mov
in
adc
nop
cld
clc
add
jns
pop
lock
xchg
stos
xchg
jl
sub
jns
outs
outs
fisubr
loopne
inc
inc
xor
adc
std
inc
cmp
cmp
in
sub
int3
push
xor
pop
push
adc
lods
pop
push
mov
rol
stc
adc
stc
cmp
fcomi
mov
in
ret
cmp
mov
test
or
and
xor
in
hlt
xor
pop
cwde
xlat
add
and
cwde
adc
mov
jne
pop
pop
mov
aam
in
in
sub
je
push
enter
mov
js
stos
cld
nop
sahf
fwait
mov
test
sbb
mov
mov
cmp
dec
jmp
(bad)
(bad)
jl
push
in
not
inc
ret
lock
leave
xor
ins
adc
je
xchg
xchg
dec
jae
or
mov
jo
ins
cmp
stc
add
sub
int3
scas
sub
sbb
ins
sub
mov
jl
add
mov
jo
mov
cmp
int3
cwde
fild
and
imul
adc
std
pusha
sub
repz
and
pushf
movs
pop
pop
in
and
dec
jl
popa
xor
sub
fwait
cwde
mov
ds
inc
test
push
pop
jg
pop
jo
mov
or
js
rcl
mov
mov
mov
mov
push
xchg
adc
pushf
sahf
jmp
mov
clc
movs
and
jp
adc
push
loop
pushf
fs
out
dec
movs
add
jne
add
jo
and
xchg
add
in
and
bound
test
loop
ins
jnp
xor
push
sub
add
push
dec
sub
fs
or
data16
cli
mov
jg
dec
push
ds
mov
adc
nop
fs
in
jmp
ins
imul
push
push
mov
sbb
dec
cld
push
jbe
inc
cld
movs
int3
xor
in
add
ss
sbb
xor
into
pop
and
push
dec
jmp
fwait
adc
xor
jne
adc
sar
retf
popf
mov
mov
mov
scas
mov
je
push
test
xor
cli
fs
out
mov
cmc
sub
sub
daa
stc
les
in
js
sti
repz
shl
push
cmp
push
pop
cli
adc
or
push
rcr
dec
dec
ja
popa
arpl
jno
js
arpl
js
push
cmp
xor
pop
aaa
sbb
xor
cmp
push
call
add
sub
dec
adc
push
std
jl
mov
jge
addr16
xchg
mov
std
add
dec
ss
add
xor
fsub
sub
es
das
pushf
sbb
fistp
cld
inc
cmp
addr16
aas
cmp
nop
les
dec
ja
add
dec
jo
int3
je
ret
in
js
(bad)
js
mov
mov
xor
sub
clc
jecxz
(bad)
mov
loopne
test
jmp
cmp
inc
cmp
cmc
in
repz
clc
add
cli
fs
mov
sbb
and
pop
aaa
ins
test
mov
ins
mov
push
js
pop
lea
push
rcl
mov
push
jl
dec
add
clc
jns
pop
test
les
jge
(bad)
mov
xor
sti
lock
add
jl
adc
in
sbb
hlt
add
cld
cmp
xchg
sub
push
test
lods
xor
bound
sub
and
xor
movs
push
cld
mov
cmp
jb
jno
arpl
jo
push
movs
dec
and
dec
xor
jne
and
sbb
push
test
fsubr
add
fild
or
enter
(bad)
cli
test
out
dec
aaa
fs
repz
and
cmp
mov
movs
pop
cmc
push
pop
mov
clc
in
nop
pusha
addr16
push
xor
das
mov
mov
fs
cmp
or
loopne
and
jbe
inc
neg
gs
pop
jge
pop
push
sbb
icebp
pushf
test
sar
mov
(bad)
mov
xor
pop
mov
in
hlt
arpl
mov
mov
xchg
push
cmp
or
clc
jnp
cmp
fsubr
pop
in
add
xor
pop
adc
xor
lock
cmp
jb
cmp
in
push
inc
ds
hlt
pushf
pop
leave
cli
ins
pop
push
std
mov
sbb
jbe
jo
je
ins
popa
scas
into
cmps
je
outs
xchg
dec
mov
enter
pop
push
jb
push
inc
ins
movs
xchg
inc
pop
aad
nop
idiv
sub
xor
inc
push
xor
in
push
sub
movs
inc
sbb
dec
mov
mov
cmc
std
jl
sub
dec
fs
xor
push
hlt
jbe
dec
call
hlt
push
push
scas
cwde
push
adc
add
leave
xchg
inc
imul
js
dec
jp
clc
lods
into
sbb
adc
mov
cwde
imul
mov
stos
sar
or
js
int3
je
ds
call
push
xchg
ja
idiv
ins
sub
sbb
or
adc
cmp
adc
imul
jmp
add
push
pop
test
pop
jle
fs
repnz
xchg
call
mov
dec
adc
nop
cld
scas
dec
adc
pop
scas
aam
add
pop
and
push
sbb
mov
dec
mov
dec
cmp
cs
jns
ss
jne
cmp
pop
pop
das
inc
jbe
or
xor
cmc
sbb
addr16
js
ja
mul
cdq
mov
shl
push
aad
add
push
dec
in
stc
pop
sahf
mov
adc
int3
pusha
push
push
lock
repz
aam
fimul
sbb
adc
push
mov
add
jns
xchg
shl
mov
push
push
dec
cs
xchg
sub
xor
push
cmps
add
pushf
pop
xor
pusha
call
jl
adc
pop
pop
push
ins
pop
sub
push
lods
cli
dec
or
test
in
test
add
adc
and
(bad)
ins
ds
xor
aas
mov
pop
xor
mov
jmp
cmp
js
popf
in
cmp
inc
dec
test
xchg
pushf
inc
stc
sbb
sbb
adc
add
std
xchg
call
mov
jp
aad
jecxz
cli
ins
sbb
out
lods
jae
or
js
sbb
sub
clc
xor
adc
push
aas
in
dec
ss
je
and
cmp
fcom
add
pop
movs
xchg
xchg
ja
xchg
lods
mov
xor
movs
sbb
xor
pop
int3
sub
jns
xor
ja
xor
fist
xchg
sub
inc
imul
jo
xor
shl
add
and
or
sbb
nop
loop
push
sbb
or
push
adc
push
lods
jne
push
cmp
repz
xor
xor
push
adc
inc
jmp
out
int3
pop
icebp
in
cmp
call
popf
lss
xor
js
imul
mul
cmc
mov
or
or
mov
dec
cmc
inc
fistp
cmp
xor
pop
sub
xor
cld
cld
dec
test
xchg
test
test
test
pop
(bad)
test
push
mov
push
xor
jl
jae
sub
dec
imul
inc
sub
jbe
dec
and
cld
and
stc
fs
push
pop
inc
jb
pop
pop
enter
inc
cli
sub
add
js
cmp
sub
inc
pushf
push
add
cli
sub
push
sub
aam
inc
hlt
fadd
inc
in
xor
inc
fnsave
push
rcr
push
sar
or
lods
fdivr
out
movs
rcr
jg
pop
cmp
pushf
pop
imul
mov
iret
mov
mov
outs
(bad)
jne
push
pop
inc
dec
loope
in
pushf
xor
out
mov
daa
add
cwde
adc
or
pusha
mov
xor
icebp
(bad)
jmp
shl
xor
fidiv
dec
je
adc
xor
lahf
push
dec
inc
xor
mov
daa
or
sub
sub
inc
sub
dec
add
jp
or
jne
cmp
pop
js
and
(bad)
xchg
sub
sub
fs
daa
je
xor
test
cld
sbb
loopne
and
loope
inc
sbb
sub
fstp
je
mov
cs
jge
sbb
add
fs
mov
cld
adc
out
test
js
push
xor
sbb
test
(bad)
cld
enter
sbb
std
xor
push
in
dec
inc
fldlg2
cmp
or
call
xor
jo
adc
into
ds
jp
popf
lea
jmp
int3
aam
mov
xor
pop
sar
jmp
adc
dec
mov
js
jmp
xor
push
or
je
cmp
cvtps2pi
xor
push
sub
and
aam
xor
or
in
sbb
fadd
out
cmp
sbb
je
dec
add
push
or
fnsetpm(287
dec
inc
loope
in
fcomp
in
dec
imul
leave
mov
or
mov
mov
dec
mov
js
clc
je
retf
js
in
js
mov
fdecstp
dec
fdivrp
pop
pop
icebp
and
(bad)
jnp
dec
fild
cs
jae
or
xor
cli
sbb
inc
xchg
(bad)
movs
mov
push
lods
mov
adc
test
test
mov
jo
pop
xor
test
sub
fdivr
js
sub
cwde
push
add
sub
pop
push
or
in
aaa
out
cmp
cs
mov
cmp
and
ins
sub
js
sub
mov
fsub
mov
pop
retf
mov
jns
dec
and
retf
imul
ja
push
iret
ror
js
ja
and
mov
dec
js
xor
push
pop
and
aam
fstp
adc
(bad)
cld
push
aam
clc
cmp
loop
pop
pop
add
xor
sub
daa
mov
pusha
lods
xchg
(bad)
push
xchg
jnp
outs
rol
mov
addr16
adc
inc
mov
mov
sar
sbb
test
cmp
hlt
add
push
dec
inc
cmp
xchg
into
ins
push
data16
jp
cmp
and
fld
imul
test
les
test
ror
rcl
ror
push
pop
data16
mov
jp
pop
mov
(bad)
jg
loopne
jb
sbb
mov
cmp
pop
cmp
test
jb
pop
dec
pop
xor
sbb
or
sar
aaa
sar
pop
xor
mov
pusha
sub
cmp
xor
xchg
cmps
mov
dec
and
clc
sub
pop
or
fsub
sbb
sbb
push
sub
xchg
js
pop
adc
push
nop
cmp
sub
nop
add
xor
cmp
cs
xor
es
test
aas
les
fsubr
test
jbe
push
(bad)
cs
mov
push
out
jo
in
cmp
adc
int3
int3
push
pop
mov
jne
sub
push
ins
jb
push
sbb
js
jnp
ftst
pushf
jmp
mov
repnz
mov
adc
xlat
jp
(bad)
repz
out
pop
stos
hlt
fsubr
int3
les
(bad)
mov
jnp
ins
sub
cwde
add
fmul
gs
adc
nop
push
or
shl
add
mov
mov
jl
test
js
sub
adc
jno
ins
stos
sbb
cmp
push
sbb
in
sub
and
pushf
cld
sub
test
or
retf
pop
ins
ins
xor
mov
mov
push
push
enter
fmul
rol
and
fadd
xor
outs
jmp
movs
test
jae
push
ja
pop
sbb
and
fsub
addr16
mov
sti
sbb
dec
js
mov
dec
aam
pop
xor
shl
pop
and
mov
lods
xor
mov
je
les
add
lods
enter
sub
lods
dec
test
test
cdq
in
call
leave
je
ins
jnp
xor
or
test
mov
ds
call
and
loope
xlat
test
fst
dec
into
cmp
les
in
jl
adc
xchg
cld
test
(bad)
fild
sub
or
test
lahf
xchg
aam
jns
imul
and
cmps
add
popf
mov
add
ret
int3
push
retf
cmc
and
clc
lock
jl
int3
div
rcr
arpl
sbb
lods
sbb
fidivr
scas
sahf
add
cmp
dec
enter
cwde
or
xor
push
xor
mov
xor
or
and
sbb
imul
mov
daa
ja
sub
cmc
inc
cmp
dec
es
imul
clc
mov
inc
(bad)
in
inc
enter
push
test
(bad)
jp
push
sahf
sbb
mov
movs
xor
jns
inc
dec
mov
jns
jo
js
add
fs
cmp
jmp
lahf
les
jmp
push
inc
js
dec
sar
xor
mov
(bad)
jp
sub
sbb
shr
test
fcmovb
shl
cmc
mov
mov
xor
push
aaa
lods
je
xor
mov
nop
pop
dec
nop
call
js
addr16
das
push
aaa
ds
in
cmp
and
cwde
add
inc
and
pushf
push
daa
out
mov
jnp
push
sub
ja
shl
scas
mov
call
jl
lods
adc
cld
push
push
in
mov
retf
repz
aam
in
xchg
test
jmp
cli
in
into
xor
js
jbe
jne
pop
mov
and
imul
test
sub
mov
jmp
(bad)
xchg
pop
inc
shl
adc
cs
sbb
push
(bad)
loop
lock
pushf
pop
sub
lds
nop
xchg
mov
dec
in
loope
and
movs
or
cwde
inc
pushf
or
push
in
jl
js
xor
add
cmp
fs
or
aaa
ror
test
hlt
inc
dec
and
add
in
push
sbb
aam
retf
pop
call
jbe
test
sbb
or
xor
or
fild
lea
mov
pushf
pop
jbe
and
outs
fs
jno
ss
movs
jl
mul
cld
js
(bad)
in
mov
mov
mov
das
mov
cmp
movs
pop
cld
add
fninit
test
fistp
push
add
or
je
jl
mov
push
pop
fs
push
pusha
mov
movs
retf
cwde
xor
push
mov
stos
pop
clc
jo
mov
and
je
std
inc
dec
jp
dec
daa
sub
pop
or
cs
sti
push
(bad)
push
int3
out
mov
vpmulhuw
or
outs
xor
mov
in
pop
(bad)
jmp
js
sbb
mov
ins
ds
mov
adc
push
scas
dec
aam
mov
add
jb
sub
js
icebp
stos
stc
jl
outs
mov
push
xor
mov
push
and
sub
je
(bad)
jp
dec
add
pop
cli
enter
xchg
fwait
stos
mov
dec
and
je
or
cmp
cmp
mov
xor
or
xor
dec
push
cwde
xchg
xchg
xor
movs
mov
je
or
jl
fwait
jo
pop
push
sub
nop
test
out
and
(bad)
inc
into
int3
test
outs
xor
pop
aam
js
nop
mov
mov
js
in
movs
std
je
jmp
mov
outs
mov
sbb
js
jb
push
adc
xor
pop
ror
lock
mov
fadd
push
mov
inc
sar
fnsave
out
sbb
cld
sbb
sbb
dec
mov
inc
stc
and
mov
xchg
or
inc
sub
sti
mov
fldenv
mov
ins
inc
push
or
sub
sub
sub
or
xor
stc
sbb
add
js
daa
xor
push
push
cmps
imul
les
sbb
hlt
jb
(bad)
cld
inc
cmp
pop
jmp
cld
dec
lahf
jge
test
mov
cmc
in
rol
test
rcl
loopne
dec
call
cmps
xchg
or
mov
push
je
outs
jne
jo
inc
and
or
lock
jbe
mov
in
cwde
jo
pop
test
sbb
cmp
stc
cli
enter
mov
hlt
and
pop
adc
aam
add
push
adc
pop
jne
iret
cli
je
pop
sub
push
or
(bad)
push
cmp
or
sbb
adc
lea
push
cmp
pop
push
ins
or
adc
sbb
stos
mov
jns
dec
and
cld
dec
add
and
lods
ins
sub
int3
js
cmc
sub
mov
aam
mov
or
leave
cli
clc
or
imul
(bad)
in
or
rol
xchg
sbb
int3
jmp
pop
dec
and
push
ins
xchg
lods
or
nop
retf
jns
jp
nop
pop
and
shl
xchg
cmc
jae
nop
xor
ins
sub
cmp
loope
xor
cli
mov
fnsave
movs
(bad)
pushf
xor
js
push
aad
push
sub
(bad)
jl
pop
dec
(bad)
jo
fs
pushf
xor
mov
or
cmp
je
xor
les
int3
js
jmp
mov
inc
test
sbb
(bad)
inc
inc
mov
enter
ins
sub
test
or
idiv
cmp
rcr
sbb
xor
enter
xor
push
sbb
jo
sbb
mov
mov
loopne
mov
in
jl
or
pusha
jb
mov
js
dec
xchg
cwde
push
jae
stc
jp
jnp
inc
jl
sahf
test
lahf
inc
lods
mov
test
sub
jns
mov
sub
ins
mov
int3
call
push
(bad)
ins
pop
xchg
adc
mov
xor
sbb
or
js
dec
sar
jo
int3
dec
jo
dec
mov
dec
jo
mov
int3
add
enter
push
push
and
hlt
ss
jbe
inc
lods
mov
pop
xor
mov
add
xor
je
cmp
sub
jbe
or
fmul
cld
mov
(bad)
or
sub
enter
ret
in
mov
mov
sbb
fidivr
push
call
cld
add
(bad)
mov
adc
shr
mov
test
xchg
ja
sar
aas
xor
loopne
in
jl
je
push
je
loope
and
jp
test
jb
je
fiadd
pop
in
dec
out
mov
ins
and
sbb
mov
sbb
lods
sbb
inc
ins
cmc
arpl
cmp
push
rcr
sub
ins
sub
aam
cwde
pop
mov
sub
adc
and
dec
mov
lods
test
fs
xlat
je
aad
and
mov
sub
push
sub
je
lds
aas
int
mov
pop
cmc
inc
mov
or
add
fmul
mov
mov
in
and
mov
iret
popa
pusha
es
mov
mov
int
jo
jne
bnd
int
push
mov
jns
mov
aaa
or
ins
sbb
sub
push
or
or
dec
call
jl
push
mov
cmp
xchg
pop
loope
add
fld
and
jl
ret
pop
enter
xor
mov
jno
mov
lea
pop
test
xor
push
mov
jbe
xor
ins
cmp
out
mov
shl
or
pop
dec
fprem
jb
call
push
hlt
or
test
and
movs
out
xchg
stos
dec
mov
cwde
pop
in
jle
in
dec
push
add
outs
mov
push
adc
xor
call
xor
and
(bad)
repnz
retf
je
push
sbb
je
lds
movs
mov
int3
cwde
pusha
xchg
mov
add
add
mov
enter
push
pop
jmp
add
sar
cmp
call
cmp
jmp
cmp
jl
cmp
mov
test
mov
in
push
mov
mov
cmp
div
fistp
popa
in
sbb
push
in
dec
imul
nop
push
movs
pop
clc
cli
xchg
sti
nop
neg
cld
add
call
call
enter
sahf
lahf
nop
cmps
je
xchg
(bad)
loope
imul
ret
inc
mov
fwait
inc
into
pop
je
iret
mov
xchg
jb
test
scas
ins
push
lea
std
in
push
or
fcmove
dec
fdivr
rcr
fcomp
sbb
pop
push
out
lods
in
push
inc
int3
js
(bad)
std
fs
enter
mov
repnz
les
dec
sar
fs
xor
out
sti
pushf
pop
jmp
(bad)
in
cmp
and
or
xchg
stos
aad
imul
in
or
fisttp
mov
lock
pop
push
xor
sub
jb
mov
mov
ins
xor
jg
test
and
mov
test
and
js
hlt
je
stos
movs
jae
and
leave
shl
mov
je
cmp
cmc
push
fwait
mov
push
jnp
add
test
in
mov
add
inc
ss
jb
ins
jae
fnstsw
pop
out
sub
sub
je
pushf
sbb
and
in
pushf
inc
mov
std
pushf
pop
stos
int
or
stc
xchg
lock
xchg
in
dec
pushf
mov
int
inc
jmp
pop
or
dec
push
sub
or
enter
xchg
pop
test
xchg
inc
or
sahf
mov
xchg
and
jns
in
jb
xor
js
jns
adc
into
cld
addr16
ins
mov
pop
inc
bound
test
push
stc
add
aam
sahf
stc
retf
jle
push
jmp
mov
jns
mov
fwait
mov
pop
or
fcmovbe
mov
add
mov
push
call
sub
xchg
scas
lahf
xor
mov
mov
aam
nop
mov
xchg
ins
lahf
fs
and
in
imul
mov
aam
test
fdivr
fild
push
je
loope
dec
add
jl
jbe
ss
push
(bad)
push
pop
js
arpl
daa
lea
mov
clc
push
hlt
mov
test
sub
cwde
repz
js
test
rcl
lock
pusha
mov
and
xchg
or
fcom
pop
lahf
cld
js
mov
cmp
sbb
mov
cdq
ja
div
cli
pushf
in
cmp
fbld
retf
daa
cli
std
cmp
dec
push
pop
mov
mov
stos
nop
loopne
ja
jb
mov
enter
mov
add
js
mov
js
fs
push
pop
and
or
xchg
push
mov
sbb
cmp
cmp
sbb
add
dec
add
js
ficom
jo
std
mov
call
cdq
fs
adc
cli
loopne
lahf
std
cwde
out
lods
fidiv
inc
int3
sbb
in
mov
sbb
add
jo
pop
sub
outs
sbb
jne
sar
jp
ja
lods
adc
je
sbb
jg
cwde
pop
xchg
je
adc
mov
inc
pop
(bad)
mov
push
out
cmp
push
cmp
sub
mov
ss
retf
js
inc
ins
add
jae
add
outs
push
xor
xor
pop
popf
fsub
pop
ins
cld
and
fs
dec
mov
mov
int3
mov
jb
movs
mov
or
les
iret
je
add
data16
out
mov
pop
push
cmp
das
jns
shl
jbe
mov
mov
mov
push
mov
call
fs
fs
jne
push
push
call
shr
js
jp
sbb
jns
cmp
jae
shl
aad
fstp
cmp
mov
push
jne
fdiv
xor
push
jnp
ds
push
retf
inc
in
jae
adc
jnp
cmps
cmps
shl
mov
ret
or
outs
pop
shrd
push
mov
cmp
ins
not
call
jns
adc
shl
out
cld
xor
jbe
js
arpl
jle
xchg
add
and
sbb
imul
pushw
mov
js
iret
dec
jl
push
cld
les
shl
jbe
daa
inc
int3
jae
fdivr
das
cmc
jnp
test
test
test
xor
(bad)
dec
jmp
dec
jo
jl
sbb
and
adc
pop
cmp
and
sbb
mov
add
cmp
adc
add
add
mov
les
pop
into
lds
fist
mov
and
bswap
cmp
push
dec
sar
dec
inc
mov
jnp
hlt
call
je
lea
xlat
in
cmp
ins
inc
xor
fs
js
nop
xchg
mov
add
xor
call
inc
cmc
int
sbb
loop
xor
aam
dec
dec
pushf
inc
cmp
adc
jo
test
clc
xchg
test
cmp
adc
(bad)
in
mov
scas
(bad)
pushf
mov
ds
inc
retf
outs
aam
movs
neg
or
sbb
pop
sbb
sbb
cli
fs
cli
inc
cmp
xor
push
(bad)
hlt
sub
xchg
xor
xor
aam
jg
jl
aam
dec
and
ins
fisttp
repz
inc
and
sbb
in
inc
jmp
ins
in
call
arpl
and
outs
or
cmc
adc
cmp
inc
jbe
push
push
push
xor
mov
test
mov
lods
add
ja
stos
test
fadd
add
ja
push
(bad)
mov
das
and
lods
mov
xor
dec
inc
dec
mov
and
cmp
push
test
das
jne
dec
xor
add
call
lahf
xor
jl
jbe
or
es
pushf
les
xchg
or
js
mov
jmp
jns
les
adc
sbb
ds
mov
fbld
pop
cmp
cmp
sbb
and
mov
jne
mov
or
xchg
mov
jle
sar
sahf
jns
aam
test
out
pop
outs
or
clc
push
(bad)
mov
in
and
jne
(bad)
sub
cmp
dec
mov
aas
push
aaa
sub
cmp
cli
pop
pop
push
cli
loopne
outs
test
jmp
xor
dec
xchg
pop
pop
shl
xor
jl
into
mov
add
sbb
imul
(bad)
jns
mov
(bad)
mul
or
mov
stc
out
sbb
mov
pop
mov
push
out
ins
push
test
out
outs
xlat
mov
cdq
call
test
rcr
loope
in
test
ficomp
popf
pop
(bad)
fwait
jp
lods
mov
inc
and
je
std
jmp
in
inc
xor
inc
imul
cmp
jnp
or
add
and
mov
mov
int
mov
ins
ins
arpl
ror
lea
sar
stos
and
loope
add
push
inc
dec
into
cld
jl
pop
push
fdiv
inc
jne
fwait
std
les
aam
sar
shl
adc
add
cmp
test
shl
pusha
(bad)
jmp
fld
scas
imul
icebp
(bad)
xor
xor
add
(bad)
fmul
into
sbb
sub
test
in
arpl
call
sbb
mov
rep
mov
jg
in
mov
in
xor
call
pop
pop
adc
je
jmp
jne
adc
push
jecxz
enter
push
jl
mov
jp
xchg
inc
inc
or
sbb
or
pop
lods
test
jne
stos
jge
(bad)
sti
in
cwde
fcmovb
cmp
ret
adc
adc
and
js
(bad)
lea
test
sbb
sub
add
pop
pop
add
movs
sub
xor
fsub
and
xor
cmp
or
mov
push
idiv
push
lock
sbb
mov
lods
dec
inc
xlat
dec
iret
mov
scas
sahf
pop
js
xchg
test
dec
inc
cmp
loop
sub
out
jmp
js
call
adc
jo
jns
lods
sub
outs
xchg
in
push
loopne
clc
imul
call
aam
jae
add
xchg
adc
xor
ins
adc
mov
movs
xor
mov
mov
mov
ins
mov
addr16
outs
add
enter
adc
sbb
pop
jne
std
jns
or
mov
mov
(bad)
mov
xor
inc
push
and
xor
cmp
sub
jo
or
mov
lods
mov
cmps
pop
enter
lock
mov
jbe
adc
cmp
leave
test
pop
js
xlat
call
hlt
sar
je
call
cmp
outs
cwde
call
jb
imul
js
inc
xor
pushf
clc
xchg
je
cmp
cmp
add
adc
pop
push
frstor
int3
dec
dec
inc
ss
add
push
push
js
clc
jp
repz
mov
jae
jb
nop
jno
sti
sbb
cwde
out
sbb
popa
les
test
(bad)
in
loop
ins
test
hlt
in
push
std
xchg
aam
in
loope
push
shl
adc
pop
or
xor
out
sbb
pusha
push
pusha
sub
(bad)
in
inc
mov
sub
imul
sbb
mov
jle
or
loopne
adc
xor
es
cmc
ret
mov
or
mov
loopne
sbb
shl
loopne
cmps
adc
je
pusha
push
(bad)
je
sbb
adc
out
jp
daa
and
push
sbb
jmp
push
add
jbe
add
clc
aam
es
push
test
cmp
mov
or
adc
adc
cwde
sbb
test
icebp
mov
stc
pushf
jmp
pop
adc
sbb
push
sub
and
add
sub
mov
in
fnsave
mov
mov
nop
rcl
mov
lds
cmp
pop
cs
xor
ins
gs
inc
(bad)
push
push
test
jmp
vmwrite
aad
pop
jl
mov
int3
pop
dec
sub
js
shl
clc
std
fsubr
call
add
jmp
int3
xchg
jmp
(bad)
fs
in
mov
fs
in
loope
sbb
mov
call
cmps
pop
and
scas
rep
mov
sti
lods
mov
sub
(bad)
imul
add
jp
das
and
push
jmp
out
xor
test
pop
in
fcom
jg
clc
push
inc
dec
je
ds
jne
shl
(bad)
js
imul
mov
sub
sub
jmp
dec
(bad)
dec
or
push
ins
imul
sub
jmp
scas
call
mov
mov
jne
jne
cli
test
sar
les
lods
neg
jmp
mov
cmc
fdivrp
pushf
lods
pushf
call
cld
mov
fucomp
mov
inc
stos
dec
popf
xchg
fcom
mov
jecxz
cmp
ins
std
in
sar
mov
outs
push
cmp
mov
cmp
int3
add
cli
inc
sbb
jno
dec
repnz
push
mov
add
jne
xlat
sar
adc
ret
pop
loopne
xor
sub
fwait
jae
xor
sbb
js
ret
popf
out
hlt
xor
jae
ins
(bad)
fcom
jp
je
xchg
loopne
pop
jnp
sar
nop
push
inc
sub
sbb
shr
clc
inc
call
and
hlt
dec
ss
jmp
popf
(bad)
mov
ds
out
aad
or
jne
std
std
nop
and
add
das
clc
scas
(bad)
test
pushw
clc
fdiv
pop
hlt
idiv
out
ins
fxch
sub
mov
js
(bad)
test
loope
mov
lock
dec
and
pop
into
ret
dec
mul
aam
in
int3
jo
cmp
and
ret
jp
mov
pop
jmp
cmp
aas
cmp
lods
lock
sub
push
cmp
loopne
js
mov
mov
into
mov
inc
sub
call
and
les
ins
aad
stos
loope
add
fild
data16
in
retf
jl
out
rcr
in
dec
sub
add
ds
sbb
xchg
ja
mov
mov
mov
dec
aas
add
std
jmp
xchg
xor
and
scas
sahf
call
mov
push
js
out
std
push
retf
mov
xchg
mov
int
xchg
ins
xchg
jmp
gs
mov
push
mov
pusha
jbe
fidivr
inc
sub
mov
adc
sbb
dec
out
push
cld
push
sub
mov
mov
jae
jmp
mov
xchg
mov
sar
jo
cs
push
daa
std
sbb
sbb
enter
jge
cld
jmp
mov
icebp
les
out
pop
ret
jmp
dec
adc
xor
enter
je
add
clc
inc
and
fadd
push
dec
or
ror
xchg
enter
adc
fs
sbb
mov
sar
jl
test
mov
cld
mov
test
cmpxchg
inc
cld
mov
scas
or
jg
jle
ds
sbb
sti
or
mov
mov
mov
add
into
mov
repnz
and
mov
jl
adc
or
pop
mov
mov
shl
and
sub
stc
sbb
js
loopne
std
js
mov
adc
mov
shl
sbb
mov
lea
push
retf
bound
clc
mul
mov
sbb
inc
sub
aam
sub
js
or
mov
dec
or
mov
mov
pop
clc
jae
sar
test
cwde
dec
cmps
pushf
pop
icebp
jecxz
je
sbb
(bad)
cld
enter
movs
fcomp
hlt
les
pop
stos
mov
cmp
call
les
mov
pop
push
stos
jnp
shr
movs
ret
hlt
xor
cmp
sub
aam
sti
in
sahf
jae
scas
cmps
xchg
cmps
xor
loope
sbb
dec
cmp
pop
dec
mov
enter
clc
push
push
rcl
and
or
out
push
sub
test
or
push
inc
cwde
adc
cmp
inc
mov
test
add
in
push
mov
push
loope
lock
cmp
sub
in
daa
out
cld
adc
ret
sbb
mov
(bad)
data16
js
and
or
pop
retf
mov
shl
addr16
fisubr
test
fs
mov
and
fs
stos
lods
imul
pushf
mov
int3
mov
mov
sti
mov
in
jnp
loopne
cmps
and
enter
fs
in
retf
mov
nop
and
std
push
iret
mov
hlt
(bad)
fnsave
mov
adc
adc
sbb
hlt
add
jne
das
out
xor
aam
cmp
je
push
fdiv
push
loope
lea
sbb
jns
mov
outs
ja
or
jne
jnp
pop
dec
cmp
xlat
mov
pushf
mov
mov
mov
and
test
add
(bad)
dec
add
mov
pop
cmp
sbb
js
ret
mov
aad
jb
and
hlt
jo
in
je
xor
je
cwde
mov
mov
and
lods
js
shl
mov
ins
mov
cmps
test
mov
sub
lods
mov
dec
retf
ss
push
movs
or
xor
adc
push
adc
adc
cli
in
mov
xchg
in
je
dec
mov
rcl
std
pop
sbb
mov
in
xor
fnstcw
mov
test
cmp
nop
jge
or
mov
leave
fcom
fisub
fsubr
rcr
cmp
inc
int3
or
mov
xor
xor
sbb
pop
sub
mov
(bad)
scas
movs
in
rcl
sbb
add
mov
aam
enter
movs
test
and
xchg
shr
mov
pop
repz
jmp
ss
stc
jmp
xor
jns
add
mov
stos
sub
out
jbe
or
sub
rol
pop
jne
retf
std
clc
sbb
cli
adc
sbb
lods
push
(bad)
jp
rol
mov
xchg
dec
xor
add
leave
sbb
adc
jbe
je
cmp
lds
mov
in
add
cld
push
or
jp
sbb
iret
dec
fs
(bad)
mov
mov
lods
std
inc
sub
cmc
int3
daa
iret
div
and
pop
xor
shl
jge
pop
pop
mov
aam
enter
inc
sbb
xor
mov
xchg
jle
pop
mov
stos
jns
lods
js
lock
inc
pop
dec
xor
sbb
cwde
xchg
push
hlt
jmp
and
popf
fwait
mov
lahf
es
xchg
xchg
ds
ins
jecxz
xchg
xchg
mov
je
call
jp
add
sub
and
aas
int3
push
push
enter
jo
cld
in
es
or
push
and
daa
mov
sub
retf
fidivr
sbb
js
sub
std
shr
push
pop
je
dec
push
les
shl
out
inc
aad
mov
adc
js
sub
imul
(bad)
sbb
sub
cmp
leave
mov
std
mov
sbb
pop
sub
ret
sbb
push
mov
sub
retf
fld
vxorps
mov
sahf
addr16
test
in
push
dec
xor
mov
cmps
cmp
mov
and
sub
hlt
dec
and
xor
test
and
sbb
test
cli
xchg
mov
adc
inc
mov
jmp
fwait
mov
mov
pop
jne
sub
jp
sub
xor
fs
mov
jecxz
int3
lock
sbb
jae
in
cli
pop
mov
push
or
sar
fdivr
stc
scas
mov
add
ret
dec
js
inc
es
je
aam
int
scas
xor
aad
pop
and
pop
ficom
push
mov
sbb
cmp
pop
js
and
test
mov
iret
cs
fcomp
pop
fisttp
test
and
movs
mov
add
cwde
fmul
shl
pushf
ins
push
mov
or
fistp
hlt
sub
adc
fsubr
xor
rcr
sti
in
loope
dec
je
test
jmp
nop
pop
push
dec
cmp
nop
xor
rcr
dec
cs
cmp
mov
test
jge
in
stos
inc
imul
adc
std
adc
mov
lods
sub
clc
sub
cmc
fst
pop
call
inc
dec
je
js
lods
(bad)
frstor
sub
in
mov
xlat
mov
jl
push
fs
mov
add
inc
sub
sub
sbb
dec
pop
cli
pop
or
sbb
(bad)
cld
int
cmp
mov
call
sahf
xchg
xor
jp
sbb
cmp
dec
ds
mov
stos
clc
gs
je
call
(bad)
cld
mov
xor
pop
xor
hlt
dec
xor
push
cwde
cwde
mov
xchg
in
mov
(bad)
out
push
fcmovbe
cli
mov
stos
mov
or
int3
pop
pop
fadd
mov
mov
(bad)
std
cld
in
jecxz
call
test
inc
and
rcl
leave
xchg
sbb
push
cld
mov
fnsave
inc
mov
jmp
js
pop
push
and
xor
push
pop
pushf
repz
lahf
loope
int3
cli
nop
inc
daa
sbb
mov
jnp
push
int
fs
dec
je
data16
ffree
jns
xor
jae
out
sbb
movs
xchg
fucomp
mov
sub
or
in
shr
js
mov
(bad)
fist
popa
jne
leave
cli
xor
push
mov
lods
pop
loope
movs
sbb
jnp
sub
adc
je
sbb
push
ins
mov
or
and
out
mov
mov
mov
imul
dec
fcmove
mov
mov
iret
mov
mov
mov
and
adc
push
inc
daa
pop
les
fs
retf
jb
adc
inc
test
aam
lock
cmp
pop
shl
jo
cmp
inc
adc
repnz
(bad)
call
popf
test
mov
lds
fstp
xor
cli
nop
in
sar
jg
cld
pushf
nop
inc
pop
out
fdivp
js
or
mov
(bad)
mov
pop
retf
xlat
clc
fs
mov
fcomp
mov
cmp
cmps
movs
jbe
lods
movs
mov
lahf
mov
adc
cli
fs
repnz
inc
imul
jg
fsub
movs
mov
mov
sti
lock
fcmovnu
inc
(bad)
int3
push
pop
test
in
popa
or
int
retf
mov
int3
(bad)
mov
aad
mov
inc
and
dec
fisttp
cmp
aam
xor
fdiv
mov
out
(bad)
sbb
mov
leave
mov
pop
and
cmp
outs
aam
clc
sar
clc
cld
dec
sub
lock
sbb
or
(bad)
(bad)
neg
cmp
jl
(bad)
mov
mov
pop
ds
cmps
fwait
mov
cmc
idiv
and
cmp
mov
and
mov
mov
hlt
sub
fadd
jmp
in
sar
fs
in
lahf
lea
nop
mov
mov
sub
movs
(bad)
ds
enter
jnp
or
test
cld
or
or
test
dec
aad
xlat
mov
in
fistp
jl
loopne
mov
lock
dec
cmp
push
add
je
sar
sti
dec
int3
lea
shl
repnz
mov
push
or
mov
dec
push
mov
add
push
mov
pop
push
inc
xor
fcom
and
push
inc
fnsave
shl
lock
hlt
xor
js
shr
or
jp
push
cmp
mov
mov
cmp
les
(bad)
mov
fisubr
sub
xor
sbb
sbb
and
nop
loope
ret
leave
test
icebp
lods
movs
fcomp
push
adc
enter
pushf
call
enter
xor
mov
gs
sti
jmp
fnsave
jmp
add
sub
cmp
or
leave
pop
stc
inc
cmp
sub
idiv
mov
loop
xchg
cwde
jge
repnz
adc
in
xor
cmc
fnsave
aas
daa
cli
mov
aad
jne
in
loope
pop
lods
mov
push
mov
cmp
jge
es
sub
imul
shl
push
push
fsub
sub
int3
add
(bad)
xor
dec
cmp
mov
xlat
jg
sub
ret
(bad)
pop
or
shl
std
mov
sub
add
pop
adc
addr16
pusha
arpl
sbb
add
and
and
out
pusha
cmps
mov
cmp
std
shl
or
cs
rol
outs
and
pop
in
or
lahf
xlat
nop
in
fdiv
sub
sub
mov
push
ror
cmp
jb
inc
js
fbld
jl
cmc
hlt
adc
lods
and
fsubr
sbb
and
nop
fnsave
iret
or
sbb
lds
test
rol
mov
das
adc
and
jmp
mov
sub
test
shl
aaa
adc
fdivr
(bad)
mov
outs
cld
test
jp
cmp
sub
sub
or
add
enter
mov
fwait
popf
xor
fcmovnbe
mov
sub
jmp
cmp
sub
xor
ret
mov
mov
jmp
xor
rol
cmp
ds
add
bnd
cld
rol
std
jl
inc
dec
or
dec
or
cmp
lods
dec
mov
dec
pop
in
jo
pop
push
jnp
sub
jno
sbb
scas
je
mov
int3
mov
(bad)
mov
and
cli
int3
rcr
cmp
and
sbb
fidivr
neg
push
jmp
les
pop
in
shl
std
loop
mov
push
ds
mov
stos
xchg
aam
test
jg
xor
inc
dec
pop
mov
add
int3
call
jb
cld
mov
inc
mov
dec
add
pushf
xor
loopne
lds
adc
dec
xchg
pusha
jb
mov
ret
jne
xor
cmc
int
jnp
rol
sbb
sahf
xchg
int3
mov
rol
lods
add
pop
add
stc
or
icebp
xor
cmp
mov
mov
xchg
push
inc
push
jmp
xchg
js
in
fld
repz
mov
inc
jge
sti
fisttp
and
gs
fs
lods
sahf
xor
mov
retf
mov
xor
adc
sbb
fdiv
(bad)
fcom
shr
jne
xlat
sti
push
stc
fsubr
test
sub
std
mov
sar
push
jp
lods
mov
div
out
icebp
mov
nop
dec
jp
and
push
or
shl
shl
xchg
cwde
cmp
or
adc
mov
dec
push
mov
cli
xor
cmps
jp
pop
or
fadd
xor
and
cmps
aam
cmp
fsubp
adc
fs
lahf
std
push
push
push
pop
pop
or
xor
pop
lods
sti
mov
sti
and
stc
jne
adc
cmc
cmp
movs
xchg
or
pop
call
in
or
rep
or
push
fld
push
rol
mov
jb
mov
cmp
(bad)
in
jl
xor
dec
push
xor
xor
das
fcomp
dec
push
or
lods
std
jo
mov
lods
adc
xor
add
jae
pop
push
pusha
fidivr
dec
sbb
mov
in
test
mov
enter
jp
xor
fwait
lea
pop
jl
sub
in
and
pushf
inc
dec
add
aaa
cmp
jae
sub
and
push
mov
adc
mov
sub
xor
(bad)
xor
into
das
fcom
mov
xor
ins
push
push
dec
movs
mov
add
mov
add
adc
pop
std
sahf
adc
add
and
push
mov
jnp
popa
dec
pop
push
sahf
jne
mov
js
dec
push
push
scas
xchg
mov
dec
mov
(bad)
push
ror
js
pop
rcr
adc
stc
(bad)
cmp
jp
push
neg
lods
(bad)
in
jl
pop
inc
fmul
adc
pushf
xchg
loope
lock
cld
mov
punpcklwd
xor
ret
cmp
mov
pop
and
adc
cmp
and
xor
pop
push
in
mov
fbld
mov
int3
cli
movs
retf
and
in
loope
and
out
xor
fadd
adc
and
mov
and
dec
push
pop
sub
sti
lock
push
mov
mov
sub
and
test
or
lock
jb
out
mov
test
cld
int3
sub
stc
xlat
ror
pushf
fcmovne
cmps
test
xor
retf
idiv
dec
loopne
add
cmp
into
js
js
out
sub
mov
pop
ss
cmp
sub
dec
jo
fisttp
shr
push
or
dec
call
mov
in
cmp
ret
rcl
inc
add
mov
xor
dec
mov
adc
lods
or
popf
js
gs
jmp
add
fmul
std
push
cli
test
(bad)
lahf
imul
cld
mov
xor
lods
xor
in
clc
out
lods
imul
push
xor
sbb
adc
mov
jae
sar
inc
out
(bad)
out
aad
loop
push
test
sbb
push
cwde
mov
test
xlat
outs
dec
xchg
mov
js
push
(bad)
lea
sub
mov
add
pop
gs
repz
cmp
pop
in
clc
repz
imul
call
enter
fsubr
mov
mov
int3
xchg
ins
push
jmp
xchg
or
cs
nop
cwde
cli
adc
add
sub
jmp
xor
jne
push
push
sbb
clc
sar
loop
inc
stc
retf
iret
mov
pushf
push
(bad)
les
xchg
or
out
inc
pop
or
or
pop
and
fldenv
(bad)
shl
sub
stc
lods
mov
xchg
jmp
fucomp
pop
add
and
lods
jg
lahf
call
test
mov
jmp
js
in
loope
sub
adc
xchg
inc
dec
adc
movs
push
pop
sub
pop
sub
or
and
inc
pop
faddp
xchg
ins
sub
std
cs
fcmovne
lods
mov
lea
mov
jne
jmp
jne
call
mov
mov
pushf
movs
scas
leave
clc
fs
(bad)
mov
clc
rcr
clc
inc
nop
cmp
mov
fs
fadd
sahf
pop
sub
and
ret
fdiv
(bad)
(bad)
add
push
loop
dec
sbb
mov
mov
add
mov
test
mov
xor
jl
add
aad
nop
inc
and
div
push
sahf
jb
ret
test
mov
mov
push
fidivr
not
sar
push
repnz
cmp
and
adc
int3
add
jecxz
jne
sbb
and
add
xor
jecxz
int3
mov
pushf
pop
popf
lea
loope
int3
(bad)
int3
add
cmc
inc
out
call
cmp
sub
dec
mov
mov
in
inc
mov
outs
(bad)
int
int
xchg
mov
push
jbe
into
mov
test
xor
loopne
cli
mov
(bad)
out
movs
mov
out
adc
stos
movs
cli
mov
rol
dec
push
jae
mov
adc
lods
fs
mov
(bad)
stos
movs
ret
cmp
sub
push
xchg
cmp
sbb
aaa
cmp
(bad)
(bad)
sbb
aam
fcmovnbe
lahf
loopne
sbb
div
dec
dec
ds
adc
mov
clc
aad
dec
or
cmp
mov
jne
sbb
aam
movs
js
(bad)
xchg
popf
inc
repnz
loope
xchg
pop
cmp
clc
jl
std
inc
clc
in
fdiv
and
add
in
add
jmp
add
fld
mov
add
fdiv
jecxz
in
sub
enter
in
ret
fnstsw
jge
xlat
sar
retf
loope
in
cld
pop
jmp
xchg
adc
mov
ror
ror
mov
les
cmp
mov
je
mov
jbe
movs
pushf
mov
shl
in
int
(bad)
jl
adc
pop
mov
xor
adc
loopne
and
xor
(bad)
lds
lock
test
and
loopne
sti
fsub
pop
das
cli
icebp
je
js
inc
pushf
sbb
mov
mov
clc
cmp
xchg
jne
sub
cmp
fstp
sti
push
cmp
mov
jl
in
sahf
in
sub
sbb
cmp
pushf
xchg
mov
stc
rcr
mov
pop
dec
jl
mov
lods
out
fcom
mov
jbe
(bad)
in
xor
push
shl
sbb
fs
popf
push
sbb
rcl
pusha
inc
pop
test
imul
aad
dec
scas
fwait
retf
xor
aad
adc
js
sti
jp
stos
mov
aas
sub
cld
mov
mov
fsubr
call
loopne
ins
cmp
jne
cmp
jne
ror
mov
add
push
sub
pushf
adc
xlat
sbb
push
fadd
push
jecxz
push
cmp
jne
loope
call
push
ret
add
mov
cld
lock
mov
jo
mov
lds
mov
pop
fild
sub
les
lods
outs
cwde
mov
cmps
dec
js
mov
lods
ret
sbb
pushf
mov
mov
test
scas
movs
dec
dec
cmp
lds
test
cmp
jmp
in
test
(bad)
call
and
inc
loop
xchg
push
cmp
jb
mov
in
loope
ret
jmp
das
pop
ret
(bad)
test
adc
cwde
js
(bad)
mov
xchg
mov
jge
jne
jnp
cmp
stc
fld
fs
in
loope
leave
je
mov
xor
test
ror
js
je
sbb
push
out
and
sub
dec
int3
or
and
repz
push
pop
(bad)
cld
pusha
fcmovnb
shr
mov
jb
mov
(bad)
jo
int
cmps
dec
fs
cmp
js
cmp
mov
mov
sahf
xchg
pop
sub
cmp
ret
pop
movs
mov
jl
sbb
mov
stos
or
dec
(bad)
cld
sbb
add
xabort
(bad)
aam
cli
and
jmp
loope
aam
sub
push
and
cmp
popf
xor
cmp
or
fcmovu
or
push
int3
xor
jae
mov
xor
into
pop
xor
dec
data16
dec
sub
stos
sub
les
icebp
fucomi
push
or
mov
sahf
into
std
(bad)
fmul
dec
mov
push
in
jl
test
and
movs
mov
inc
push
sbb
les
rcl
repnz
jmp
aaa
cwde
cwde
xchg
std
cmp
mul
sti
cmp
scas
imul
int
pop
xchg
enter
lds
mov
movs
pusha
in
in
xchg
ret
mov
movs
sbb
aad
aam
test
dec
aas
fadd
in
daa
xor
(bad)
ret
nop
in
cld
neg
std
sub
addr16
daa
outs
add
xor
int
inc
jno
inc
bound
dec
sub
xchg
js
(bad)
mov
adc
add
mov
je
mov
xor
push
sub
sti
sub
sbb
cld
(bad)
xchg
and
xor
adc
xor
(bad)
pop
mov
pop
push
sub
nop
cmps
lahf
adc
ds
push
retf
rcr
sbb
mov
mov
cld
cmps
xchg
(bad)
ins
xchg
cmp
cld
cdq
xchg
mov
js
jmp
ins
sahf
mov
inc
fadd
test
mov
dec
je
mov
sub
sar
shr
dec
cmp
fld
in
mov
jne
sbb
pop
xor
js
cmp
jp
sub
jmp
fnstenv
jne
jl
fwait
push
push
psllq
mov
in
loopne
jae
and
rcr
aam
std
ficomp
push
sbb
hlt
and
xchg
jmp
jmp
(bad)
mov
movs
sub
lods
mov
int3
push
mov
inc
add
pop
rol
mov
mov
sub
mov
mov
cmps
mov
ror
movs
xor
mov
mov
in
jl
add
in
mov
cmps
xor
xor
(bad)
in
ss
sbb
jp
std
fdivr
sbb
mov
jo
pop
mov
jne
push
xor
into
fsub
jmp
rcl
and
jbe
pop
js
push
pushf
call
mov
xor
or
dec
push
fdiv
and
cmp
sbb
jp
mov
jo
add
dec
adc
mov
ja
fbstp
jnp
and
aam
mov
mov
inc
and
ret
stos
xchg
mov
lds
pushf
dec
lods
lods
mov
push
inc
jo
scas
cld
test
popf
xchg
xchg
sbb
pusha
jb
mov
xor
enter
rol
clc
jae
out
in
mov
adc
cmp
lods
mov
clc
test
xor
aam
adc
xor
xchg
push
(bad)
cmc
jl
lock
pmaddwd
fistp
(bad)
lock
pop
push
push
cmp
and
jnp
loope
jl
ja
mov
xor
jl
mov
mov
inc
sub
gs
and
aam
cmp
sub
lods
mov
nop
dec
ins
and
fsubr
ss
out
mov
cmps
fdiv
sbb
mov
lods
mov
cmp
cmc
xchg
cli
in
cdq
jge
enter
cmp
xchg
cmp
xor
in
mov
lahf
push
test
rcl
mov
sub
clc
mov
sahf
hlt
jmp
je
fwait
xchg
jmp
daa
cwde
lock
add
xchg
hlt
xchg
dec
mov
dec
pop
fmul
pop
ret
shl
cli
mov
or
loopne
or
nop
sub
test
das
fucomi
mov
lds
pop
sbb
jmp
retf
mov
push
sbb
pop
lock
fmul
xor
add
out
(bad)
xor
cmp
dec
sub
jl
sub
adc
scas
or
fdivr
jmp
loopne
pop
lock
enter
push
cld
jge
cmp
sbb
je
lds
mov
mov
shr
mov
sbb
mov
jle
int
jmp
shl
push
(bad)
mov
or
cmc
ins
cwde
or
mov
(bad)
les
mov
mov
add
jne
and
adc
sub
inc
daa
dec
lods
pop
adc
adc
sar
rcr
clc
inc
sub
clc
retf
mov
jmp
mov
pop
xchg
dec
fidiv
stos
add
and
pop
daa
outs
dec
je
pop
jl
pushf
cwde
faddp
frstor
inc
daa
cld
je
sub
mov
ins
sbb
adc
push
cmp
(bad)
fcom
rcr
sub
std
out
dec
or
in
pushf
push
sar
jo
nop
cmp
jmp
(bad)
mov
les
fwait
cdq
jne
xchg
test
push
cmp
stos
fwait
mov
xchg
mov
mov
mov
or
lds
xlat
leave
mov
in
fs
imul
xor
or
xor
call
int3
in
jl
fiadd
in
int3
mov
jmp
xchg
jo
mov
push
jl
(bad)
adc
js
mov
jo
addr16
sti
jmp
out
inc
(bad)
jmp
sub
sub
sub
and
ret
hlt
jae
or
sub
jmp
jmp
shr
xchg
shl
xor
adc
div
or
stc
out
pop
lods
pop
lock
mov
mov
in
(bad)
scas
je
test
mov
scas
pusha
cmp
mov
mov
xchg
push
push
ret
jp
add
mov
cmc
add
(bad)
push
fmulp
cwde
dec
sti
jmp
fistp
inc
xor
or
loopne
cmp
push
dec
sub
out
int3
inc
fs
xchg
sbb
retf
fs
test
cmp
cmps
hlt
xor
rcr
fidiv
inc
das
cli
(bad)
int3
lods
sub
rcl
jae
xor
sti
xchg
pop
mov
pop
jge
and
mov
add
or
in
nop
addr16
ds
xor
test
mov
sar
ds
jmp
clc
inc
sub
fsub
retf
xor
jecxz
mov
popf
(bad)
(bad)
imul
mov
hlt
pop
neg
retf
xor
inc
jno
stc
out
gs
les
cmp
enter
or
sbb
pop
dec
sub
mov
mov
push
mov
call
dec
xor
mov
and
add
in
xlat
jae
loopne
dec
imul
mov
jl
hlt
test
add
mov
jne
lods
mov
sub
jl
sti
test
retf
push
pop
cmp
mov
es
dec
pushf
cmp
cmp
sub
mov
in
or
adc
mov
ins
mov
retf
fdiv
mov
in
(bad)
popf
je
xchg
(bad)
dec
movs
hlt
jecxz
clc
cmp
std
stc
fdivr
retf
and
pop
mov
int
ins
rol
pop
je
xor
adc
push
cld
imul
aad
scas
movs
js
xchg
xchg
test
sbb
and
and
mov
sbb
push
add
nop
and
cwde
sub
mov
cmp
push
xor
adc
dec
xor
dec
fdiv
ficomp
dec
cmc
mov
ins
jbe
push
js
xor
ficomp
pop
xor
sub
and
pushf
mov
xor
mov
lods
xor
loope
lods
and
xor
cmp
sub
ins
dec
sub
mov
enter
push
dec
dec
cmp
mov
jp
lods
call
movs
mov
in
jmp
test
js
add
push
out
out
js
test
xor
les
retf
ret
test
lahf
sub
push
rol
and
das
jmp
rol
pop
mov
dec
clc
cmp
or
dec
loop
sub
rcr
sahf
cmc
sub
repnz
and
xor
shl
clc
test
push
jl
ins
inc
mov
ret
jne
loop
enter
test
test
js
test
mov
sub
sbb
je
jmp
hlt
pop
and
inc
daa
imul
xor
popf
dec
clc
cmp
mov
pop
je
pushf
sahf
xchg
test
sub
scas
cmps
mov
and
out
mov
call
dec
pushf
cmp
movs
push
pushf
push
js
dec
mov
or
mov
adc
shl
and
loopne
cs
mov
mov
jne
add
es
mov
jae
sbb
jo
push
test
jl
repz
outs
mov
jne
add
fsubr
in
or
sar
jnp
inc
sub
inc
sub
(bad)
pop
cmp
mov
pop
nop
cmps
vmread
sbb
mov
or
mul
loopne
inc
sub
cmp
leave
xor
in
lds
je
lods
xchg
int
push
mov
int3
test
stos
js
xlat
std
nop
push
test
push
xchg
and
hlt
or
jbe
and
je
sub
shl
dec
push
xor
pop
lock
aad
in
in
aam
vpinsrw
loop
cmp
xchg
push
inc
cmp
add
and
jne
les
lahf
out
(bad)
fcomp
ins
push
js
dec
push
cli
cwde
out
int3
cmp
rcr
add
sub
hlt
clc
je
sbb
mov
and
std
cmp
lahf
call
repz
adc
retf
sub
ja
cmp
mov
fs
movs
enter
outs
mov
adc
dec
pop
cmp
push
or
shr
xor
pushf
rol
cmp
shl
rcl
hlt
inc
and
mov
test
loope
fsub
int
xor
and
int3
stos
push
mov
jne
lods
ins
adc
cmp
jg
fs
cwde
cmps
pop
stos
das
xor
pusha
inc
add
bound
aaa
lods
sub
aad
jo
mov
je
fdivrp
cwde
inc
and
clc
inc
sar
jne
cli
stos
js
aam
hlt
imul
int
jl
pmuludq
cs
pop
retf
ins
shl
add
lods
sti
rcl
fs
mov
int3
mov
adc
test
jl
retf
aad
and
mov
adc
addr16
loope
xchg
(bad)
push
pusha
fs
scas
loopne
cmp
test
imul
adc
and
fwait
ja
pushf
dec
aas
es
cld
cmp
(bad)
pop
cli
sub
(bad)
aad
add
xor
jge
inc
sub
inc
pushf
mov
mov
push
jns
add
out
mov
add
jbe
bswap
pop
push
in
int3
outs
into
xchg
clc
push
icebp
std
cwde
adc
pop
js
ror
add
sahf
cwde
sar
pop
(bad)
in
ins
adc
adc
lock
in
inc
daa
test
icebp
dec
movs
loop
aad
test
mov
hlt
inc
jp
dec
ds
movs
xor
mov
xchg
xor
sub
add
fbld
cmp
jl
xchg
fs
pop
or
mov
xor
pop
sbb
idiv
fistp
imul
jns
in
sar
(bad)
in
stos
stos
jo
mov
jp
cmp
rol
out
add
dec
mov
xchg
add
pop
(bad)
fnstsw
in
sbb
xor
jmp
std
js
pop
mov
inc
sub
cmp
jl
sbb
mov
test
push
sbb
cmp
cmc
mov
stc
shr
xor
adc
inc
xor
fs
xchg
xchg
aas
rcr
jecxz
xor
and
rol
and
leave
xchg
pusha
ds
jne
push
xchg
in
cwde
shl
mov
call
aam
cli
sbb
mov
mov
cli
nop
xor
push
cld
sub
or
(bad)
enter
push
and
adc
sub
aam
and
xlat
sbb
mov
pop
(bad)
(bad)
mov
lea
cwde
lods
test
stos
retf
mov
jne
xchg
jg
or
test
daa
pop
push
fsubr
ins
cmp
fwait
pop
mov
je
shl
push
cmp
mov
jmp
mov
nop
mov
adc
mov
in
sub
(bad)
jns
sub
jmp
in
addr16
jmp
and
and
int
repnz
sbb
cmc
std
je
loopne
aas
addr16
push
mov
imul
scas
mov
or
jne
push
cmp
mov
call
stos
(bad)
out
dec
pop
xchg
je
push
js
jg
push
mov
sub
push
pop
pop
add
(bad)
sub
mov
xlat
mov
idiv
je
mov
in
mov
xchg
and
imul
(bad)
push
hlt
cld
iret
and
mov
jbe
fs
shr
pop
push
cmp
cwde
sub
jp
je
dec
aam
cmp
leave
xchg
mov
rol
jle
dec
cwde
shl
sbb
push
push
scas
inc
pop
fnsave
pop
lea
mov
mov
add
push
js
cmp
retf
add
pushf
fsubr
push
fdiv
inc
xlat
xchg
cmc
je
push
sbb
mov
mov
add
fistp
sbb
enter
xchg
int3
pop
imul
retf
pushf
sub
aam
in
sub
push
inc
sub
push
and
fst
ss
adc
aad
popa
jae
ja
push
dec
push
mov
jb
jae
js
jnp
add
ss
add
outs
call
jne
pop
pop
xor
call
pop
pop
push
jnp
nop
jb
outs
inc
adc
jns
jns
loope
inc
iret
sbb
dec
jo
push
shl
or
js
jl
loope
adc
pop
rcl
cmp
mov
rol
cwde
mov
mov
or
jne
sub
jb
push
retf
ins
jns
xchg
xor
and
js
rcl
jne
pushf
push
add
je
xor
sub
imul
outs
push
xchg
ins
cmps
mov
stos
pop
add
mov
mov
mov
pop
test
jo
xor
mov
pop
add
stos
sub
outs
(bad)
cdq
cdq
lods
sub
and
jp
je
repnz
mov
sbb
call
mov
lds
pusha
das
je
dec
add
lea
xchg
adc
jne
js
bound
xor
mov
pop
(bad)
jne
test
div
je
imul
(bad)
test
adc
retf
fldcw
push
js
fistp
xchg
or
sti
clc
cli
cmp
aaa
jmp
push
xlat
cs
cmp
mov
mov
inc
jp
fcom
mov
jmp
stc
ins
or
std
mov
pop
cli
ds
push
ins
jns
dec
pop
outs
movs
jno
xor
mov
in
jne
mov
xchg
push
outs
ins
and
jne
outs
jb
imul
jge
sti
jns
dec
mov
xor
js
add
sub
jno
jae
outs
push
push
mov
je
js
in
cld
bound
mov
loopne
mov
push
add
pushf
and
mov
mov
pop
mov
add
retf
ret
add
mov
fcomp
mul
call
cdq
mov
sub
pop
stos
test
and
leave
lods
hlt
or
dec
into
cmp
jo
sub
ret
stos
rol
jle
xchg
ins
shr
imul
shl
ret
js
and
xchg
push
test
fadd
leave
add
sub
ja
jbe
fisub
lea
mov
les
outs
mov
or
les
xor
in
xchg
cmp
loope
xor
movs
lahf
addr16
mov
call
jae
verr
in
sbb
lahf
sbb
rcl
retf
repz
jl
mov
xchg
call
inc
xor
lock
and
sbb
pusha
jmp
mov
or
in
xor
and
sub
or
test
push
js
stc
imul
js
jl
js
je
js
je
mov
jmp
js
je
jne
test
push
jge
jge
js
loopne
xor
cwde
test
push
pop
sub
pop
push
push
add
push
sbb
or
dec
pop
inc
cmp
xchg
mov
ds
retf
js
sahf
inc
jl
les
dec
or
(bad)
adc
lds
out
nop
test
sbb
or
std
sbb
loope
(bad)
repz
inc
data16
out
xchg
jae
sbb
(bad)
stc
enter
dec
or
mov
sub
mov
push
dec
les
dec
in
push
into
dec
pop
bound
int3
enter
les
std
lea
mov
fdiv
xor
ficomp
jl
ja
sub
js
push
pop
push
(bad)
enter
das
imul
and
int3
bound
daa
cmp
push
ja
cmp
cmps
cwde
dec
pop
(bad)
imul
add
mov
push
jp
add
out
add
movs
shl
pop
sub
push
clc
sbb
fld
jg
adc
mov
scas
gs
push
dec
jmp
ins
push
je
into
pop
ficomp
js
adc
ret
pop
push
icebp
jmp
out
hlt
not
inc
mov
cmp
xor
mov
pop
fdiv
xor
in
sbb
js
ins
push
fcmovb
xor
mov
pop
js
push
js
jb
in
dec
inc
adc
mov
test
test
adc
jecxz
and
adc
(bad)
xchg
cmp
jmp
test
sbb
push
xor
clc
setno
aas
xchg
js
enter
and
jne
(bad)
mov
xor
mov
pop
in
pushf
push
sar
iretw
mov
or
je
mov
nop
leave
fmul
js
es
sbb
into
mov
in
jg
and
add
bound
add
pop
rcr
fadd
cmps
mov
lock
call
pusha
xor
mov
sbb
push
retf
test
js
mov
ret
xchg
xchg
mov
xor
js
stos
mov
call
or
adc
sub
shr
fsubr
iret
outs
jl
enter
cmps
xchg
mov
xchg
and
cld
nop
cmp
int3
movs
pop
or
mov
cli
xchg
mov
js
iret
cld
xor
repnz
ins
das
stc
std
fs
lea
cmp
cmps
ins
mov
add
pop
test
jmp
test
mov
ret
mov
mov
cli
mov
jl
out
dec
mov
ret
mov
fcomi
int3
leave
jb
loope
retf
sbb
or
cdq
xchg
pop
inc
cmp
push
fdiv
adc
outs
push
adc
push
push
push
inc
pop
pop
mov
pop
xor
jg
cld
cmps
fcom
jp
in
nop
jo
cli
or
imul
call
in
stc
jl
test
push
scas
js
movs
lea
or
test
dec
dec
inc
js
pop
add
pusha
int
adc
push
aam
clc
dec
or
cwde
and
leave
mov
push
dec
(bad)
ins
push
jp
dec
cmp
cmp
xor
leave
popf
fcomp
ins
xor
outs
movs
mov
xor
and
or
dec
fcmovbe
sbb
das
es
js
lock
lods
test
push
sub
and
mov
sub
iret
fsubr
loope
shr
xor
pop
jo
inc
mov
sub
outs
scas
sub
fist
ins
pop
imul
mov
xchg
pop
or
jae
push
les
sub
test
xor
ret
cmp
in
add
pop
fs
rol
mov
(bad)
mov
sahf
mov
pop
pop
bound
mov
mov
sub
inc
inc
add
inc
sub
lahf
nop
adc
iret
bound
mov
cmp
pop
lahf
enter
inc
xor
cmp
cmp
cmp
fcom
es
push
jnp
mov
mov
inc
or
jbe
daa
sub
stc
sub
out
loop
call
push
(bad)
int3
ins
jb
ja
xchg
idiv
cmc
mov
js
push
js
cmps
adc
imul
sub
aam
mov
adc
imul
xchg
jae
icebp
cli
hlt
push
inc
cmp
xor
xor
xlat
jns
and
cmc
mov
xor
pop
adc
adc
sub
popf
or
jne
pop
pop
cmps
xor
sbb
push
jno
push
jp
or
pop
pop
adc
push
or
mov
nop
inc
add
mov
std
pusha
sbb
test
dec
push
xor
mov
pop
lods
and
shl
xchg
cld
push
pushf
pop
neg
in
daa
adc
xor
mov
sbb
cmp
sub
in
pop
ds
inc
push
push
push
call
dec
mov
out
js
sub
pop
dec
pop
push
movs
cmp
mov
push
shl
fs
daa
xchg
out
rcr
rol
jnp
pop
cmp
sbb
add
pop
adc
sbb
sar
push
pop
push
push
pop
adc
pop
or
push
add
test
add
aam
jo
in
icebp
fs
in
js
bnd
inc
cmp
std
cmp
(bad)
ficom
mov
or
icebp
pop
test
pushf
adc
(bad)
enter
pushf
adc
dec
mov
(bad)
sbb
sbb
dec
aas
das
je
in
lahf
jle
cwde
aam
retf
mov
js
lea
jnp
ins
scas
mov
mov
or
cmp
push
add
jbe
scas
mov
pop
sti
fsubr
jo
sti
sar
imul
mov
les
jmp
pop
or
mov
cli
mov
and
adc
and
jne
fcom
pop
sub
mov
call
fsubr
fcom
outs
push
into
cdq
sub
jmp
or
push
pusha
pop
dec
mov
or
cmps
add
pop
add
sar
and
int3
inc
ror
xchg
and
mov
es
sbb
hlt
mul
mov
out
cli
call
daa
std
xor
ins
(bad)
clc
inc
push
int3
sbb
pop
xor
je
popa
jns
sbb
je
mov
in
cmc
les
jmp
push
jne
pusha
jne
xor
adc
(bad)
call
cmps
stc
js
pop
dec
push
and
shl
test
scas
shl
xlat
retf
sbb
test
in
es
test
inc
jmp
inc
int3
xor
cmp
cld
in
sti
mov
or
dec
inc
cmp
std
mov
cli
pop
push
test
pop
repz
push
inc
mov
mov
lock
cld
ror
adc
push
les
jne
cmps
cwde
jg
test
sar
dec
dec
pop
cmp
out
clc
jmp
les
bswap
fadd
push
enter
mov
(bad)
jno
dec
and
rol
adc
je
jns
mov
jbe
ja
lds
dec
dec
mov
sub
jo
arpl
add
retf
dec
(bad)
mov
xor
xlat
mov
(bad)
hlt
imul
push
inc
sbb
retf
dec
leave
mov
dec
dec
pop
mov
adc
adc
inc
mov
jae
cwde
nop
nop
ret
lods
xchg
or
cmp
loope
or
sbb
cmp
gs
jg
sub
dec
(bad)
push
cmps
pop
aam
(bad)
aam
xor
or
jp
rol
std
fcom
mov
jbe
dec
pushf
je
rcr
push
lods
and
pusha
pop
pushf
adc
dec
shr
cmp
jge
inc
xor
test
jns
test
jge
inc
pop
jbe
dec
mov
pop
jp
pop
popf
add
pop
cld
out
mov
in
enter
in
ss
out
iret
sahf
and
pushf
aam
add
push
push
xor
js
xor
cli
jl
cmp
shl
cmp
or
test
clc
adc
dec
or
xor
in
imul
fs
aad
imul
je
cmps
jge
xor
pop
or
sbb
gs
sub
or
or
mov
hlt
popf
cmc
inc
je
jne
adc
push
sar
inc
mov
xchg
jg
pop
ror
int3
movs
push
cmp
rcr
mov
scas
mov
xor
cmp
cli
loopne
mov
or
push
adc
jp
add
cmp
mov
je
cs
sub
mov
ins
cmp
pop
pop
fs
push
pop
pop
cmp
fnstsw
add
mov
jl
cmps
leave
and
fld
or
sti
push
lea
fcom
enter
in
mov
test
mov
pushf
jb
pop
cwde
js
das
and
inc
cli
pushf
ins
adc
push
clc
mov
push
nop
data16
xchg
js
repz
hlt
jmp
mov
inc
jmp
ja
ds
mov
fisub
test
pop
or
repnz
inc
inc
dec
add
cld
jo
aam
push
mov
test
xchg
shr
ins
add
add
mov
mov
sahf
std
in
jmp
jnp
push
or
cli
fmul
mov
pushf
iret
in
mov
mov
pop
inc
dec
pushf
jns
fs
shl
int3
and
dec
pop
jne
popf
inc
adc
loopne
(bad)
xchg
les
xor
sub
out
adc
mov
mov
push
xor
cld
adc
cmp
cld
or
out
push
(bad)
out
ins
push
dec
inc
call
pop
js
add
and
and
int3
inc
gs
pushf
and
add
ins
or
xchg
fsub
enter
out
jge
push
and
push
and
inc
and
addr16
test
clc
sub
je
mov
std
les
xor
push
enter
pop
(bad)
cmc
cld
(bad)
pop
pop
imul
jne
and
pop
cld
mov
cwde
mov
dec
sar
fcomi
pop
jns
jno
jne
dec
rcr
ja
outs
sub
cmp
and
cmc
sbb
cmp
xor
out
pop
(bad)
xchg
pop
and
xor
or
jl
and
mov
mov
outs
inc
clc
mov
pop
sbb
mov
idiv
std
enter
mov
icebp
jb
movs
hlt
pop
mov
cli
and
int3
cli
fdivr
mov
shl
fs
and
inc
xlat
sub
rol
fst
sbb
sbb
pushf
nop
or
call
hlt
push
sub
dec
pop
clc
sub
jnp
mov
or
xlat
sub
fsub
js
fistp
sti
nop
jo
lods
xchg
adc
int3
mov
sub
jne
dec
arpl
gs
pop
je
js
jmp
or
jl
mov
in
hlt
push
adc
dec
push
data16
or
sub
xor
xchg
sbb
in
test
cmp
inc
call
xor
in
je
cmp
add
push
jo
(bad)
mov
ins
add
pop
loope
dec
push
cs
adc
aam
scas
mov
or
cmp
into
jp
scas
mov
xchg
xor
pop
cwde
ds
repz
or
xor
test
in
repnz
sbb
mov
in
add
sbb
and
push
cmp
movs
clc
jmp
xchg
cmps
cld
loop
(bad)
jmp
cmp
je
mov
pop
(bad)
sbb
bnd
xchg
pop
dec
cmp
jae
sbb
add
sub
retf
sar
ds
mov
inc
push
sub
jmp
leave
pushf
cmp
loope
mov
into
sub
jp
push
cmp
cmp
adc
aam
arpl
adc
cmp
jle
stc
cmc
lock
rcr
fs
mov
or
xchg
mov
mov
mov
push
mov
in
retf
dec
and
shr
push
stos
fwait
sbb
lahf
ja
lods
xor
pop
test
js
(bad)
cmp
add
lods
nop
leave
or
adc
add
dec
dec
inc
and
jne
push
adc
adc
lds
jo
(bad)
mov
fcom
mov
cli
hlt
mov
mov
mov
shl
pop
fs
ret
movs
sub
les
cmp
jp
fs
ins
pop
bound
mov
cli
sub
test
mov
xchg
add
xor
or
sar
mov
add
out
shr
sub
adc
xchg
stos
jns
mov
and
add
mov
dec
test
dec
int3
mov
jns
sub
mov
xchg
jo
add
fdiv
in
sub
sbb
idiv
lock
hlt
fs
push
xchg
sub
mov
sub
dec
cmc
push
adc
aaa
out
push
inc
repz
sub
lock
in
cmp
sbb
and
shl
or
loopne
les
cmp
jo
xor
std
aam
xor
mov
pop
fiadd
je
inc
pushf
shl
mov
sti
adc
lods
push
ins
mov
inc
add
dec
enter
les
xor
rol
(bad)
jno
and
inc
lods
push
repz
ins
clc
cli
fwait
adc
and
xchg
add
add
lock
les
pop
dec
into
int3
adc
and
into
pop
in
aam
dec
mov
mov
pushf
cmp
ins
mov
xchg
sub
loop
rcl
test
pop
or
pop
mov
icebp
pop
hlt
push
test
add
inc
sbb
cmps
or
int3
adc
and
jg
pop
xor
pushf
outs
inc
and
movs
mov
loop
cmp
xchg
push
inc
retf
sub
xor
sbb
and
rcl
dec
adc
stos
pop
mov
das
jecxz
je
mov
or
jo
data16
test
mov
dec
je
jns
and
push
jbe
ss
pop
and
pushf
xor
ds
outs
inc
or
stc
pop
ss
mov
sbb
movs
out
stc
lods
ret
fmul
add
(bad)
cwde
mov
or
les
mov
pop
push
sbb
add
xor
test
inc
adc
clc
test
loopne
lods
jb
cmp
mov
test
or
pop
xor
cmp
or
loope
data16
hlt
cmp
push
sbb
xor
mov
je
sbb
push
into
lods
jne
int3
cli
sbb
mov
sbb
add
in
or
mov
mov
mov
in
sar
mov
ins
cli
xor
and
push
or
sbb
out
test
in
cwde
push
jmp
retf
mov
and
stos
jnp
xchg
push
lods
adc
sub
shl
clc
sbb
mov
cmps
jo
in
pushf
pop
(bad)
inc
mov
std
enter
pop
xor
mov
push
pop
add
jle
fstp
(bad)
xor
sub
pop
leave
jl
pusha
(bad)
mov
or
pop
mov
and
std
lea
jecxz
or
(bad)
int3
sbb
repnz
jp
adc
pop
push
xor
in
cwde
inc
and
test
jne
jae
xchg
imul
and
js
popf
lahf
cmp
je
sbb
out
mov
push
(bad)
aad
dec
fstp
cld
out
cmp
dec
dec
(bad)
inc
jno
pop
add
sbb
repz
fsub
jns
(bad)
fnstsw
or
mov
fs
iret
cld
add
mov
popf
jbe
cmp
mov
test
adc
imul
fadd
dec
add
and
or
nop
sbb
sti
lods
add
data16
sbb
outs
int3
or
add
mov
adc
inc
mov
xchg
lods
push
dec
push
cli
test
add
or
push
lmsw
pop
push
xor
push
or
push
adc
sub
stc
cmp
invd
les
adc
lods
and
or
repz
cmps
test
sub
jo
adc
pop
sbb
dec
jb
cmp
push
(bad)
adc
xor
retf
mov
fdivr
push
movs
out
les
(bad)
jmp
pop
clc
test
mov
dec
arpl
aam
cmp
shl
std
and
pop
sbb
jno
in
pushf
scas
push
cld
jbe
out
test
in
je
xor
and
mov
fdiv
add
inc
bound
inc
adc
loope
jmp
fwait
cmps
push
test
aam
inc
pop
jo
fwait
call
push
push
fs
push
movs
test
adc
sbb
cmp
mov
cld
push
jo
hlt
xor
and
cld
call
in
or
hlt
and
pop
cli
std
retf
and
jbe
inc
adc
and
clc
jno
cmp
les
mov
mov
sub
mov
sub
fcom
(bad)
cmc
je
loopne
call
ret
(bad)
push
out
sbb
xchg
(bad)
pushf
pusha
push
xor
inc
add
add
jo
jmp
mov
mov
movs
test
fsub
(bad)
ror
lock
in
js
call
dec
mov
cmp
repnz
xor
add
jl
std
aam
adc
dec
into
sub
cwde
js
sub
clc
sub
sub
jae
adc
jmp
(bad)
mov
cli
and
in
or
add
jmp
xchg
ins
or
sbb
sbb
sbb
sbb
sbb
sub
mov
adc
sbb
psubusw
cwde
adc
test
jb
pop
mov
push
dec
cmp
or
mov
retf
pop
xor
call
mov
in
in
std
mov
out
sbb
sti
mov
pop
xor
je
sub
test
mov
pop
cmp
jo
mov
jp
(bad)
(bad)
int
cmp
add
mov
add
movs
push
pop
xcrypt-ctr
cmps
pop
hlt
add
es
pushf
repnz
fadd
and
push
outs
xchg
lea
out
pop
(bad)
test
in
sar
mov
les
adc
pop
cmp
(bad)
push
test
je
or
ror
test
nop
adc
out
adc
cmp
mov
pop
jb
xlat
in
push
cwde
sbb
inc
repz
jae
daa
and
mov
sbb
loop
and
in
sub
nop
pop
and
aam
daa
xor
mov
in
and
in
mov
mov
mov
out
inc
mov
sub
rol
add
sub
xor
jp
xor
in
sar
add
inc
(bad)
in
in
test
call
stos
mov
int3
xor
js
sbb
in
test
or
adc
or
xchg
adc
xor
ret
mov
pop
test
fcmovne
in
shl
mov
js
xchg
cdq
inc
aam
inc
inc
inc
fisubr
out
in
jmp
inc
test
push
add
add
sub
inc
push
out
or
mov
shl
mov
mov
push
mov
mov
cld
jae
xchg
lea
pop
sbb
hlt
sbb
bound
je
or
aaa
aam
mov
pop
pop
cmp
mov
icebp
adc
mov
sub
js
add
inc
or
cli
js
loope
xor
imul
pop
fs
movs
into
sub
mov
xchg
test
popf
retf
out
rcl
pop
add
mov
mov
adc
bnd
mov
sbb
push
jae
stos
or
cld
test
(bad)
jmp
popf
xchg
xchg
jle
sub
add
cli
cs
xor
add
xchg
mul
lock
clc
cld
pop
xor
lods
dec
sbb
xor
stos
cli
je
cld
jo
xchg
hlt
xchg
mov
xchg
rcl
mov
test
cwde
mov
jecxz
bsf
xchg
mov
dec
push
jnp
and
sbb
jae
mov
jo
sub
jl
ret
popa
rcl
fwait
mov
mov
sub
xchg
idiv
lods
in
mov
xor
jp
aaa
data16
sbb
lds
mov
dec
scas
rcr
mov
xchg
test
cld
loopne
adc
in
sbb
(bad)
pop
mov
mov
sbb
out
jnp
lds
xchg
imul
frstor
push
out
mov
inc
aas
push
inc
jne
jge
xor
pop
pop
xor
push
push
xor
add
push
call
in
cli
test
and
and
fmul
xor
std
mov
push
jle
mov
idiv
xor
cwde
aam
dec
pop
test
pop
int
scas
addr16
pushf
sbb
ret
xor
add
sbb
das
jo
imul
xor
mov
ds
ret
fsub
pop
scas
jne
stos
jp
cmps
les
xor
mov
pushf
inc
push
test
xor
lock
les
test
mov
sbb
xchg
mov
adc
cmp
sbb
add
(bad)
div
or
xor
les
daa
adc
or
sar
mov
xor
dec
dec
lea
icebp
mov
cmp
pusha
xor
jo
cmp
cmp
cwde
add
push
adc
pop
xor
cmp
add
and
mov
lods
sub
dec
mov
in
not
cmp
test
inc
dec
cmp
nop
sbb
jne
mov
pop
shl
outs
xor
inc
int3
add
fcomip
add
in
sbb
imul
ss
cmp
std
sub
xor
(bad)
in
mov
dec
out
adc
mov
sbb
inc
outs
fst
mov
in
pop
int3
icebp
ficomp
mov
mov
fs
in
inc
or
xor
xor
jae
adc
sub
leave
repnz
js
loope
into
lds
sti
out
aad
and
cdq
push
jp
scas
test
sub
aas
jns
cmp
je
je
push
sbb
pop
pop
das
pop
ret
pop
sub
test
and
adc
fs
push
push
inc
test
mov
ss
lock
hlt
cmp
mov
hlt
pop
sub
mov
out
and
mov
(bad)
stc
in
mov
and
adc
repnz
rol
dec
pop
test
sti
push
mov
aaa
mov
in
mov
test
dec
out
je
cmp
(bad)
repz
out
jne
ss
aas
jo
je
jmp
and
push
push
fcomp
push
jmp
jbe
mov
ror
in
and
dec
inc
xchg
pop
sbb
loopne
mov
adc
je
dec
aam
jne
mov
in
stos
sahf
xchg
lods
sbb
push
(bad)
stc
jae
gs
enter
or
pop
pop
popa
pop
lea
dec
dec
dec
mov
pop
aam
int3
fcom
sbb
repnz
inc
les
iret
jns
pop
adc
aam
aaa
cld
and
ss
pop
in
add
push
and
hlt
(bad)
ins
fmul
push
fnstsw
add
pop
hlt
jmp
aam
push
or
hlt
and
add
aas
sbb
jg
mov
test
jl
jecxz
test
ret
cwde
mov
mov
mov
cld
aaa
jne
add
imul
js
mov
std
and
fld
inc
sahf
sbb
mov
in
std
rcl
lock
push
adc
sbb
push
adc
add
push
aam
lds
test
psubd
push
jns
pop
push
pop
cld
loop
in
cmps
call
(bad)
hlt
ret
mov
retf
leave
mov
xchg
test
pop
sbb
add
xor
fdivr
push
scas
test
lods
xchg
mov
jmp
lock
sub
mov
push
xor
sub
mov
rcr
std
inc
daa
sub
or
adc
jg
je
adc
dec
cli
clc
in
cmp
mov
out
data16
mov
js
mov
(bad)
xor
mov
aam
lahf
push
add
sub
jp
push
add
jb
fst
push
loope
and
movs
movs
loopne
mov
push
leave
out
jns
fdiv
ja
call
xor
and
add
mov
xchg
es
jae
aas
jge
inc
xor
cmp
fcom
data16
cmp
int
push
ret
sar
pop
pop
cmp
js
div
jp
push
sbb
inc
cmp
xchg
adc
mov
stos
jp
pop
pushf
fwait
lea
fcomp
lods
or
pop
mov
cmp
adc
and
xchg
sub
movzx
lods
outs
sbb
mov
cmp
dec
out
sub
scas
jo
stos
jmp
jmp
cmp
shl
mov
add
in
push
inc
rcl
es
repz
push
fs
mov
fs
xlat
fadd
(bad)
out
cwde
shr
int3
push
repz
mov
cwde
lock
cld
inc
push
xor
mov
sahf
mov
test
jle
adc
mov
and
call
(bad)
jge
jmp
dec
(bad)
mov
cmp
sub
mov
ret
adc
ins
cmp
xor
test
out
mov
movs
fs
ret
loope
out
stos
add
add
add
adc
jp
or
adc
lea
mov
jmp
adc
pop
dec
cmp
cmp
clc
(bad)
in
push
fldl2e
pushf
ret
cli
cld
pop
in
jo
out
test
dec
in
pop
pop
lods
jl
sti
repz
sub
push
(bad)
dec
dec
outs
pusha
aam
aad
fs
mov
jle
jno
(bad)
mov
loopne
call
pop
(bad)
cmp
ficomp
gs
pop
js
loop
and
outs
mov
pusha
mov
js
stc
(bad)
fnsave
and
push
pushf
and
lock
xor
hlt
push
cmp
inc
push
sub
nop
lods
jmp
push
adc
mov
mov
pop
cmp
or
sub
lods
enter
or
add
xor
(bad)
push
inc
adc
(bad)
mov
or
dec
jmp
rol
loop
rep
js
jmp
aad
jl
rcr
mov
shl
repnz
data16
jno
dec
push
dec
inc
dec
fs
fist
add
loope
hlt
rcr
js
pushf
nop
stc
retf
hlt
leavew
popf
jns
movntq
out
cwde
inc
sbb
cmp
in
test
mov
ret
sbb
inc
lods
pop
cld
or
or
repnz
imul
in
ret
enter
clc
test
pop
cld
idiv
adc
in
sub
or
(bad)
mov
add
sub
dec
aam
pop
out
or
push
adc
inc
add
in
test
call
sbb
dec
push
mov
mov
add
cld
dec
out
mov
loopne
hlt
shl
repz
dec
sti
jmp
(bad)
inc
out
popf
hlt
dec
dec
dec
inc
mov
xchg
jo
mov
adc
imul
adc
aam
int3
std
mov
cmp
ret
mov
je
jns
sbb
mov
sti
enter
outs
dec
dec
aam
sub
rcl
mov
stc
pop
hlt
sti
clc
jmp
fwait
push
sbb
call
mov
call
leave
jmp
adc
xchg
adc
stc
ror
mov
adc
xchg
jne
in
cli
mov
int
or
pop
pop
adc
clc
rep
cld
enter
jne
pop
jl
or
or
(bad)
std
mov
bnd
(bad)
push
mov
sbb
and
xor
pop
enter
mov
pop
int3
lods
cmc
lods
les
imul
lds
scas
mov
pop
neg
retf
ins
sti
jne
jbe
jo
inc
aaa
imul
push
fdiv
sar
mov
sbb
sub
mov
jl
loope
fcomp
loop
jae
cmp
shl
xchg
push
mov
test
mov
cmp
(bad)
or
out
icebp
cmc
leave
jbe
add
in
ins
add
xchg
dec
push
mov
jbe
or
add
or
lods
inc
icebp
cli
pop
mov
jmp
or
mov
cdq
cmp
push
adc
icebp
add
adc
(bad)
jbe
fucomp
ja
fs
jns
sbb
fcomip
push
lock
inc
and
mov
adc
(bad)
lods
sbb
pop
mov
pop
movs
dec
jmp
sar
enter
push
lods
xchg
jbe
daa
sbb
cld
je
test
(bad)
hlt
inc
(bad)
and
shl
mov
xor
add
outs
add
mov
fadd
mov
ror
mov
hlt
sub
and
mov
or
or
loopne
push
out
push
shr
xchg
in
or
jmp
mov
pushf
inc
adc
sahf
cmps
mov
lods
push
or
jecxz
je
sar
idiv
inc
mov
out
pusha
mul
adc
cmc
add
push
in
cdq
dec
jae
sbb
inc
push
adc
mov
push
std
add
loop
data16
test
xor
ja
xor
mov
daa
rcl
push
mov
jg
loopne
xlat
nop
jo
imul
pop
pushf
push
shr
cld
mov
sub
pushf
loopne
mov
aam
fs
mov
xor
dec
pop
adc
sbb
xchg
cmp
cdq
push
je
cli
shr
out
loopne
lahf
outs
fcmovnu
retf
jne
in
mov
pop
cmp
cmp
test
dec
mov
add
xchg
pop
pop
pop
dec
and
or
ja
clc
es
ins
sahf
hlt
fsub
or
sbb
mov
or
dec
pop
js
cld
or
sbb
pmulhuw
pop
adc
cli
jo
push
push
push
sub
jno
sbb
int
or
add
shr
mov
adc
adc
loopne
loopne
jb
les
mov
jl
out
fld
outs
js
int3
dec
outs
pop
jnp
call
mov
mov
add
nop
cmp
jne
xchg
mov
call
inc
xor
sub
mov
nop
push
stos
rol
add
fstp
cmc
(bad)
mov
xchg
inc
imul
add
xchg
retf
add
pcmpeqw
add
xchg
add
pop
ret
sub
fild
or
rdpmc
jo
movs
sub
fnstcw
cmp
add
xor
ss
int3
sub
pushf
and
mov
lahf
stc
shr
rol
or
cmps
fs
fcomp
mov
pop
add
mov
jp
add
mov
shl
pop
push
aaa
jne
rcr
jl
stos
push
in
mov
in
jmp
xchg
and
sub
add
cmp
fmul
mov
jecxz
add
xor
jmp
dec
outs
sar
sub
loope
imul
or
jne
xchg
lods
arpl
add
add
xchg
add
pop
xlat
xor
sahf
retf
es
sub
lea
sub
push
cmp
and
sbb
sub
cli
inc
inc
and
test
mov
call
in
lock
xchg
jne
add
or
push
pop
into
pusha
jns
pop
inc
xor
push
add
arpl
push
adc
push
ror
jo
mov
out
test
xor
sub
mov
cmp
std
sbb
out
pop
mov
rol
loopne
push
mov
fucomp
pop
or
dec
pushf
lds
add
mov
cmp
push
pop
cmp
shl
in
push
test
adc
sti
retf
cmp
add
xchg
add
loop
(bad)
outs
mov
push
cmp
sbb
inc
call
std
xor
faddp
call
push
js
aaa
and
popf
dec
add
dec
mov
adc
mov
lds
sti
(bad)
push
ins
xchg
mov
js
push
jmp
addr16
mov
cmp
test
jo
xchg
lods
int3
js
mov
in
data16
enter
mov
ds
mov
or
les
cmc
test
mov
fdiv
xchg
dec
dec
adc
les
adc
aam
xor
out
fs
inc
leave
jecxz
out
push
sahf
bnd
mov
cmp
mov
mov
add
fisttp
or
jle
mov
xor
cld
lods
push
add
jp
call
and
xor
adc
jno
jge
and
es
lock
and
lea
pop
sbb
out
ins
(bad)
mov
fcomp
add
push
inc
js
pop
push
sub
out
outs
inc
mov
mov
pop
cmp
(bad)
repnz
jbe
or
gs
pushf
mov
test
pop
sub
push
ss
fmulp
mov
xchg
fisttp
call
add
cld
sub
mov
je
stos
sub
mov
mov
or
mov
push
add
pop
or
jo
add
lock
dec
adc
mov
pop
hlt
cmps
adc
popf
inc
aaa
ds
ds
std
jo
sub
test
mov
pushf
es
stos
cmps
sbb
jl
lods
cld
loopne
movs
test
jmp
js
lods
test
jb
cmp
test
loop
add
mov
pop
sti
fs
push
das
hlt
jnp
adc
stos
push
cld
ret
inc
jo
enter
mov
jne
shl
js
sub
push
lahf
ja
cmc
out
cwde
aam
invd
or
movs
pop
lock
std
xchg
je
adc
test
inc
push
mov
xor
call
add
std
sti
and
mov
dec
jmp
imul
jmp
lock
dec
pop
push
mov
add
clc
push
sub
dec
xor
xor
cli
pushf
add
mov
jns
test
nop
std
les
ret
adc
es
sbb
cmp
hlt
pushf
pop
and
loopne
inc
inc
push
outs
mov
inc
dec
jns
shl
pop
ja
leave
mov
add
dec
jecxz
pushf
(bad)
cmps
in
retf
push
cmp
add
mov
in
ror
xor
ss
sub
fcom
pop
out
clc
lahf
or
xor
mov
adc
mov
js
int
stos
cli
nop
std
push
aad
jle
outs
add
mov
add
pop
mov
ins
mov
fdiv
scas
je
int3
ins
out
or
cli
stc
cmp
test
clc
stc
sbb
or
es
je
xor
xor
fisttp
adc
stos
jo
int3
js
in
shr
(bad)
nop
xor
sub
aam
mov
xchg
xor
xchg
cmps
lds
sbb
jg
or
jo
clc
push
pop
cmp
mov
cmc
in
or
js
jmp
cmp
sti
out
adc
addr16
pop
jae
pop
std
jo
aam
dec
jo
in
xor
pop
xchg
push
mov
push
sar
out
call
lock
popa
mov
xor
je
jl
sbb
sub
mov
push
ins
stc
push
push
je
sbb
sti
adc
add
inc
xor
aad
js
sbb
movaps
pop
cs
jo
push
cmp
add
push
aam
sbb
iret
cld
pop
jecxz
scas
adc
cld
or
lods
jo
and
inc
pop
sub
fs
imul
sub
xor
mov
fnstenv
dec
jae
push
inc
mov
pop
addr16
ins
xor
cmp
cmp
in
scas
cld
(bad)
mov
imul
das
sti
cmp
rcr
call
inc
ins
push
push
lock
shl
fdiv
clc
call
fnstenv
movs
add
test
sti
cmp
loopne
xor
call
and
js
scas
push
mov
mov
or
test
mov
dec
adc
fstp
sbb
fs
aam
mov
xor
mov
movs
clc
push
dec
mov
pusha
xor
gs
ja
imul
adc
mov
cmp
push
cmc
pushf
lea
or
push
pusha
jmp
test
(bad)
push
test
mov
pop
sar
clc
jo
loopne
hlt
xor
clc
jb
inc
push
hlt
jb
jecxz
push
std
pushf
add
or
hlt
or
je
stc
(bad)
clc
mov
add
lods
das
stos
hlt
ins
push
sti
mov
inc
ins
add
xor
and
pop
loop
dec
and
icebp
sti
in
adc
cmp
lsl
xchg
adc
add
push
int
ja
stc
adc
aam
add
jo
fcomp
add
loope
lock
loop
push
je
test
addr16
js
je
mov
jle
rcl
out
aam
loopne
outs
cmp
or
push
jp
cmp
(bad)
cmp
iret
out
int3
pushf
dec
mov
ins
(bad)
repnz
and
mov
push
popa
test
sti
mov
das
mov
sbb
push
pop
jl
add
test
or
cld
adc
(bad)
adc
add
inc
or
add
in
or
jns
adc
js
adc
js
inc
push
cmps
pushf
(bad)
jp
test
cmp
hlt
movs
ror
or
movs
rcl
sub
adc
pop
out
push
loopne
cmp
addr16
pop
ins
movs
adc
clc
test
mov
stos
inc
jo
jne
push
cmp
sub
cmp
retf
je
sbb
xchg
mov
lods
ret
mov
rol
xor
jne
in
repz
stc
nop
imul
(bad)
mov
lods
or
in
add
push
cld
aam
add
js
nop
xor
std
mov
xor
sub
aas
push
jb
rol
mov
pushf
scas
loope
dec
enter
mov
(bad)
adc
xor
shl
gs
mov
jno
prefetchwt1
or
jb
lahf
aad
stc
pushaw
fisttp
cwde
iret
or
push
jb
dec
loopne
push
jne
ins
rcl
jb
ins
ja
iret
stos
loopne
xor
nop
push
inc
clc
test
int3
data16
jns
(bad)
mov
in
loopne
cmc
or
cdq
mov
xor
js
and
clc
pusha
in
rol
push
not
hlt
add
lods
mov
dec
cli
ins
neg
pushf
pop
add
jp
push
cmp
mov
jmp
addr16
cli
pop
and
xor
sti
ins
out
into
les
unpcklps
fsubr
inc
pop
jo
and
or
mov
jbe
mov
repnz
fstp
jmp
daa
lods
pusha
pop
jae
mov
cmps
mov
jmp
lahf
mov
add
jb
out
jp
data16
add
and
jmp
pop
outs
mov
cmp
enter
mov
repnz
call
outs
xchg
(bad)
in
xor
call
sub
mov
xor
cmp
sub
xchg
push
(bad)
lods
or
stc
cmp
sbb
es
les
mov
xor
sub
xchg
add
in
ins
inc
aad
jne
ds
jp
push
das
out
mov
cld
jo
mov
retf
in
mov
sbb
shr
or
in
xor
mov
push
call
neg
je
and
push
mov
cmp
jmp
in
js
ja
retf
movs
call
jnp
lds
pop
outs
and
je
jbe
mov
xor
(bad)
push
aam
ds
js
lods
sar
sar
and
jmp
loop
in
add
add
pop
cmp
xor
dec
xor
inc
imul
mov
ins
adc
push
add
pop
enter
nop
xor
in
dec
add
inc
mov
mov
inc
adc
cmp
loope
nop
loopne
int3
push
or
add
xchg
fist
jmp
mov
or
xor
cmp
addr16
arpl
jb
mov
sbb
dec
cmp
push
jb
icebp
jne
je
pop
je
imul
stos
gs
ins
jbe
cmc
je
xor
adc
cwde
and
jb
(bad)
in
fs
popa
ja
or
pop
cmp
nop
in
fcomp
add
jnp
scas
in
mov
in
loop
pusha
imul
in
jae
out
out
cwde
xchg
jecxz
pusha
add
push
enter
movs
push
cmp
or
jb
sbb
es
add
pop
sbb
dec
or
pop
and
sbb
sbb
(bad)
jmp
pop
push
mov
in
je
push
(bad)
jns
out
adc
lock
in
pop
jmp
mov
outs
xchg
test
ret
les
mov
jo
pop
lods
hlt
jo
jnp
or
xor
push
lea
lods
inc
mov
loopne
jne
add
call
inc
shl
sub
sub
push
les
fs
data16
cmp
or
dec
rcr
add
imul
js
iret
loop
mov
sub
xor
lods
jns
mov
jp
or
cmps
pushf
jo
cwde
les
or
sahf
and
fistp
push
fnstenv
add
sahf
mov
in
out
push
aam
(bad)
xchg
fsubr
push
xor
cmp
dec
dec
cmp
test
jns
push
push
lea
mov
and
or
ss
mov
je
jg
xor
je
in
pop
jb
ins
je
cmps
xchg
mov
addr16
repz
push
pusha
cmp
mov
xor
dec
pop
clc
pusha
push
pushf
xor
sub
and
xor
mov
mov
cwde
je
(bad)
mov
movs
std
js
scas
mov
test
std
pop
add
push
pushf
jbe
aam
and
les
cwde
inc
mov
imul
jp
and
push
sbb
push
pusha
aam
dec
sub
cwde
and
ror
and
pop
loopne
ja
and
jg
and
cmp
movs
xchg
leave
mov
mov
js
pop
fs
cwde
call
pop
jne
loop
and
bound
test
dec
push
inc
in
ins
into
jbe
adc
pop
popa
dec
pop
xor
xor
xchg
data16
data16
mov
ins
loop
inc
imul
inc
cmp
scas
cmp
pop
stc
xor
push
les
xor
(bad)
xor
test
ret
lods
jo
(bad)
ins
test
mov
xor
clc
loop
pop
cmp
inc
dec
cs
into
jmp
imul
test
fsubr
jns
mov
jne
adc
pop
enter
add
mov
jg
add
mov
lock
xor
jmp
sahf
push
jg
(bad)
cld
retf
outs
cli
or
push
xchg
or
test
pop
mov
jmp
jo
and
ja
fs
lock
xor
and
mov
hlt
addr16
outs
adc
clc
pusha
jae
sbb
xor
push
jge
push
jge
pop
in
jno
bound
imul
ins
imul
pop
in
inc
push
imul
call
arpl
ins
sahf
pop
jae
test
gs
les
jns
dec
stos
fcomp
pushf
aaa
fs
fisub
sbb
jno
cwde
aam
retf
les
push
cwde
in
xchg
shr
mov
and
add
js
jp
or
js
pusha
fwait
lea
sub
test
rol
sar
add
(bad)
jo
out
js
xor
repnz
mov
xchg
push
pusha
add
int
mov
xor
push
add
and
push
mov
je
jp
js
sub
jl
and
mov
jmp
or
dec
dec
into
test
repz
fs
xlat
jl
pusha
je
and
push
cs
aaa
inc
clc
mul
fs
sbb
sbb
mov
sbb
dec
adc
xchg
jo
es
jl
or
cmc
adc
xor
daa
test
pop
pop
daa
cmp
jp
jl
lods
cmp
stos
es
je
mov
xchg
lds
add
inc
lods
dec
add
imul
xchg
test
es
daa
xchg
xor
push
fsub
pop
pop
pop
or
jle
jne
inc
or
sub
add
xlat
jl
push
repz
shl
xchg
cmp
push
push
add
and
mov
ror
mov
in
test
dec
push
mov
mov
pusha
aaa
leave
cmc
cld
or
mov
push
pusha
loop
leave
es
add
adc
ror
jl
pop
jo
movs
and
inc
test
dec
dec
mov
js
dec
inc
inc
pop
je
imul
jne
outs
jne
add
aam
adc
jl
or
jns
jl
push
ins
mov
test
aas
ss
mov
cld
sbb
jo
aaa
ins
jb
jae
nop
fld
scas
(bad)
push
ins
dec
rcl
fidivr
jbe
call
sti
pop
push
pop
pushf
pop
dec
push
test
dec
dec
sub
outs
jl
push
ja
xor
adc
cmp
xor
cmp
mov
arpl
jne
jp
push
repz
test
jl
mov
test
into
cwde
stc
aas
cmp
nop
or
cmp
(bad)
push
inc
cld
jl
inc
dec
test
loope
ins
and
sbb
cmp
push
dec
ret
dec
add
cmp
cmp
dec
cmp
xor
test
inc
jl
jge
or
pusha
sbb
into
in
sbb
sbb
mov
cmp
inc
cli
mov
and
mov
js
pop
push
mov
fbld
cmp
stc
pop
test
jmp
adc
enter
inc
pushf
adc
movups
mov
mov
jo
push
and
jo
ret
ins
dec
mov
cmc
xor
and
clc
push
sub
je
pop
pop
pop
lea
pushf
push
jl
mov
test
aas
ror
and
test
inc
xor
sub
mov
pop
xor
imul
push
sbb
pop
ds
inc
mov
stos
stc
pusha
mov
rcr
xchg
hlt
add
jp
push
int3
add
lods
nop
in
mov
jnp
fidiv
inc
cmp
in
sub
and
js
xor
add
cs
sub
jns
cmp
jp
arpl
pop
xor
das
pop
cmp
pusha
dec
pop
test
aam
fmul
xchg
cwde
or
inc
cs
lds
xor
dec
and
jo
inc
cmp
push
or
test
push
pop
je
push
xor
push
push
cmp
add
jmp
addr16
mov
mov
daa
add
push
std
test
and
push
sub
pop
jo
xor
mov
pop
ja
adc
cmp
js
sbb
pop
out
xor
xor
imul
jge
jns
aaa
jl
fcmovbe
out
sub
out
mov
mov
cmp
adc
je
das
cmp
sub
in
ins
xor
jns
sub
cld
push
adc
or
pop
call
push
jl
xor
xlat
xchg
stos
add
inc
inc
inc
jg
hlt
mov
cmp
and
sbb
(bad)
xor
inc
test
adc
add
std
pop
clc
cmp
mov
je
jae
jbe
mov
fwait
jne
inc
xchg
add
imul
cs
jo
ins
inc
xor
jo
sbb
movs
and
out
xchg
push
pop
fidivr
idiv
mov
and
ja
(bad)
scas
pop
test
rcr
in
sbb
cs
or
js
mov
daa
pop
and
pushf
or
mov
in
test
and
je
xor
jl
call
dec
inc
pop
dec
pop
je
inc
xor
cwde
call
enter
js
cmp
cli
sbb
sbb
pushf
jle
sbb
and
mov
sbb
push
mov
leave
add
jp
cmp
je
out
jl
xor
jl
rol
mov
fdivr
dec
push
or
add
xor
add
push
or
jo
dec
inc
dec
mov
test
and
and
dec
jl
inc
push
jl
inc
mov
jo
popa
arpl
or
test
ds
push
call
movs
sub
cmp
mov
push
mov
dec
dec
sub
test
push
xor
jl
xlat
outs
dec
add
outs
ds
push
pop
add
xor
jnp
or
add
sub
nop
dec
cmp
jo
jl
cmp
cmp
pop
jp
mov
sub
call
jl
jge
ins
adc
es
sti
cwde
adc
or
cmp
and
js
and
cdq
pop
ins
inc
cs
in
jge
jl
sub
jl
out
mov
(bad)
jo
xchg
adc
jns
adc
push
sub
dec
cmp
and
retf
sbb
xlat
sbb
sbb
ins
pop
push
pop
popa
dec
addr16
jne
jl
call
movs
mov
jo
mov
jle
sub
js
idiv
std
push
stc
add
push
or
movs
or
pop
jmp
and
cmp
fnsave
jmp
xchg
sbb
pop
add
pop
mov
addr16
ds
push
mov
jecxz
mov
clc
jmp
xor
cmp
repnz
rcr
push
or
pop
xor
jl
mov
adc
xchg
xchg
(bad)
mov
push
ins
mov
push
iret
jp
dec
inc
dec
or
sar
sbb
sbb
dec
add
mov
fsub
xchg
in
jns
pop
sbb
dec
js
mov
xor
in
sub
xlat
pop
pop
movs
lock
and
jo
(bad)
sub
push
add
sub
addr16
out
clc
mov
test
and
mov
adc
outs
pusha
sbb
mov
(bad)
pusha
jmp
jns
test
pusha
les
inc
fdivr
sub
cli
cwde
unpckhps
js
push
std
push
sbb
push
pop
ins
cmps
ins
fwait
sbb
pusha
leave
sub
test
sbb
jl
jl
and
aam
shr
call
jne
jns
push
cmps
sub
mov
imul
push
cmp
aaa
sub
test
dec
xor
add
hlt
js
sub
or
dec
xor
jl
loope
ins
syscall
fs
ins
xor
sub
ror
jmp
and
and
nop
(bad)
xor
jo
xchg
cld
test
dec
test
cmp
inc
push
mov
dec
arpl
ins
in
cmp
pop
jo
ds
inc
(bad)
clc
fs
inc
cs
ins
imul
jp
je
push
mov
jle
xor
pop
push
mov
ins
movs
and
inc
sti
dec
cmp
inc
test
dec
pop
outs
pop
dec
push
cli
push
dec
push
add
push
out
sbb
stc
scas
sbb
bnd
sbb
call
mov
jb
js
inc
inc
ror
cld
daa
sbb
add
test
sub
aas
sub
xchg
pop
and
lods
ins
and
mov
or
pop
popaw
and
pushf
adc
cmp
ret
push
test
pop
or
mov
and
dec
lods
dec
cs
imul
movs
pop
dec
(bad)
and
mov
inc
adc
push
inc
pop
cli
jmp
popw
cli
push
inc
cmp
add
jp
and
stos
jne
test
ins
sahf
fcomp
mov
fdivr
jp
arpl
clc
jecxz
jmp
pop
fs
dec
ja
dec
dec
scas
es
int
aas
int3
pop
adc
cli
int3
sbb
(bad)
mov
add
add
push
jecxz
fs
inc
cmp
jl
pop
mov
fmulp
cmp
jns
jmp
movs
fsubr
cs
and
dec
cmp
ret
push
cmp
test
ds
mov
xchg
stc
jecxz
cmp
cmp
sub
mov
push
fcomp
jmp
fsub
add
pop
jmp
ficomp
addr16
pusha
and
push
mov
jne
pop
push
cmp
mov
mov
jl
cs
rcr
cmp
xor
call
sub
sub
mov
mov
retf
mov
lods
push
lds
std
mov
lock
pushf
out
fadd
(bad)
dec
shl
fild
shl
xchg
ja
inc
dec
mov
or
lods
lock
jbe
sub
lock
imul
ds
mov
ins
jae
or
nop
pop
pop
dec
inc
ja
movs
pushf
mov
test
inc
ins
call
cmp
xlat
ds
in
xlat
add
pop
(bad)
fsubp
xchg
retf
xlat
loope
out
fld
fadd
addr16
enter
push
dec
dec
push
int3
sar
add
mov
pop
into
sbb
test
cmp
mov
mov
sbb
pop
dec
pop
test
into
mov
test
popf
jae
test
ins
lahf
xchg
std
nop
add
repz
cwde
or
je
out
test
push
mov
iret
cmp
cld
repz
aam
ds
imul
enter
pop
jl
push
clc
push
lods
mov
and
sbb
or
imul
jnp
loop
rcr
nop
xchg
daa
cmp
sbb
fs
mov
mov
mov
or
cld
in
dec
das
xor
or
cld
jo
mov
lds
fxch
mov
in
dec
jae
outs
loope
fs
je
arpl
sbb
adc
ror
or
push
and
aad
lods
mov
cmp
sahf
int3
sbb
xchg
mov
pop
jo
xor
inc
sub
push
pop
push
js
pop
cli
cld
cmp
fsub
in
sub
test
ds
lea
dec
out
neg
dec
leave
cmc
je
jl
js
and
clc
push
jp
ins
mov
fcmovnb
shl
call
xchg
mov
test
xchg
cmc
xchg
ins
xchg
jle
jne
mov
cmps
xchg
sub
cmp
push
push
test
jmp
les
faddp
test
(bad)
or
sbb
mov
add
lods
add
sub
and
mov
inc
ins
sub
and
jecxz
mov
mov
movs
nop
mov
imul
nop
mov
sbb
test
ins
cmc
retf
lods
sub
add
gs
out
lods
push
icebp
repnz
iret
les
fmulp
je
rcr
test
jle
test
push
push
pop
cwde
je
test
das
jp
js
stc
jge
ror
je
or
and
sbb
mov
lds
mov
out
sub
js
ds
add
cmps
push
push
mov
js
test
js
jae
fdivr
cmp
test
leave
jg
enter
dec
(bad)
clc
je
sub
call
inc
jl
jl
mov
jmp
aam
arpl
sbb
mov
iret
sub
rcl
je
aam
mov
clc
out
(bad)
mov
pusha
jne
fisubr
cwde
iret
ret
cdq
mov
mov
dec
stos
mov
retf
mov
repz
add
sbb
rcr
out
movs
xor
cmp
mov
into
cwde
movs
je
js
ds
pop
je
sbb
shl
out
aam
sti
pushf
sub
fwait
ds
pushf
cwde
cmp
test
dec
inc
test
cmp
ret
mov
xchg
xchg
js
mov
mov
xor
push
add
inc
or
add
loope
outs
mov
jns
push
pop
sub
xor
out
inc
push
jl
(bad)
xchg
enter
mov
mov
outs
push
sti
movs
sub
and
mov
push
aas
cmp
pushf
cmps
cli
pop
sbb
std
test
cmp
inc
sbb
sub
scas
test
xor
xchg
pop
sbb
sbb
jne
and
dec
and
je
and
cld
sbb
push
xchg
test
or
mov
into
xor
les
jne
loopne
adc
call
pushf
push
push
inc
inc
add
sub
repz
inc
inc
frstor
js
xor
push
ins
sbb
nop
sub
adc
pop
dec
es
aas
xor
push
dec
cmp
xchg
fxtract
push
cmp
push
push
or
inc
mov
push
fsub
push
pop
dec
in
adc
jne
and
sub
xchg
dec
push
inc
inc
sbb
mov
lahf
mov
mov
adc
push
arpl
or
and
xchg
mov
xor
and
jbe
jns
adc
arpl
xor
cmp
mov
mov
shl
outs
jp
and
adc
cmp
dec
idiv
sub
mov
xchg
push
popa
arpl
hlt
mov
in
rcl
test
mov
push
fmul
push
movs
in
jae
sub
pop
out
les
std
nop
cmp
ret
out
mov
lock
push
loope
mov
sub
ja
sub
xor
and
jl
leave
push
or
into
cmp
inc
inc
add
mov
jmp
cmc
div
cmp
mov
pop
inc
xchg
retf
js
pop
addr16
sub
add
add
inc
pop
sub
mov
push
(bad)
fsubr
and
jo
jo
mov
aaa
mov
mov
cwde
sub
test
mov
ds
and
out
jg
jp
js
jo
sar
ins
aad
shl
jo
bound
leave
add
adc
movs
jl
mov
je
lods
adc
stos
and
retf
and
fistp
jl
fcomp
jmp
test
ret
xor
das
pop
pop
and
clc
cs
or
mov
pushf
sub
dec
loope
push
jo
push
gs
je
push
dec
pusha
jae
pop
pop
xchg
jecxz
add
cs
test
std
repnz
adc
hlt
stc
repz
in
out
push
and
cmp
xchg
xor
mov
jae
push
adc
push
rol
data16
inc
inc
mov
rol
sahf
or
in
fdivrp
push
iret
push
cmps
outs
or
jge
test
lahf
fild
jmp
sub
jp
js
jl
test
xchg
shr
xor
or
jnp
inc
inc
cwde
jg
add
xchg
or
cwde
push
and
jl
popf
push
xchg
inc
movs
and
inc
movs
jne
jo
cmps
lods
cmp
jo
sbb
jnp
cwde
and
push
mov
gs
mov
stos
das
jne
push
pop
ss
push
xchg
push
mov
fnstcw
jg
sbb
ss
jp
popa
cli
sub
fs
ja
out
jmp
imul
arpl
fs
cs
push
dec
sub
jae
daa
adc
cmp
cmps
xchg
pop
stos
cmp
push
ins
xor
stos
xor
push
jne
imul
mov
and
sbb
sub
inc
inc
xchg
call
jl
cmp
js
cmp
pop
jle
mov
mov
jge
jo
dec
repz
fdivr
int3
in
fsubp
mov
add
push
jl
test
jp
jo
sbb
cdq
adc
data16
mov
js
sbb
mov
in
out
aad
daa
cmc
xor
sahf
in
push
add
cmps
jp
and
dec
sub
aad
daa
(bad)
cmp
dec
sub
popf
pusha
pop
push
int3
xor
test
jmp
xor
addr16
es
lods
iret
sbb
je
inc
aas
lahf
pop
cmp
xor
fwait
push
and
push
lds
fst
mov
jns
and
pop
mov
mov
outs
ins
outs
(bad)
fsub
loope
retf
adc
repz
adc
jp
in
jmp
or
push
data16
cmp
push
dec
push
dec
pop
pop
mov
icebp
daa
je
jl
gs
retf
jl
fsubr
cwde
aaa
dec
xor
add
or
or
mov
sbb
test
xor
mov
pop
inc
aaa
sahf
hlt
add
in
pop
or
jb
pusha
sbb
cmp
fist
xchg
cwde
test
imul
jb
inc
inc
test
xor
cmp
lea
pop
push
push
pop
test
push
jae
inc
inc
jg
in
xor
cs
mov
xchg
jmp
stos
sub
movs
jne
jno
cmps
push
cmp
movs
push
and
cdq
lahf
(bad)
ins
sbb
pop
mov
pop
pop
inc
dec
mov
push
sub
push
sbb
cmp
loope
mov
mov
pop
xor
pop
xor
mov
push
pop
js
jns
mov
pusha
push
dec
or
xor
mov
test
push
in
ins
push
inc
aas
adc
pusha
outs
daa
and
sbb
or
add
xor
aaa
xor
leave
or
push
data16
pop
int
jnp
js
push
mov
stos
mov
mov
xchg
ja
fcomip
ds
std
cmp
sbb
ds
dec
push
popf
daa
sbb
ins
and
jns
xor
inc
or
mov
jns
mov
jmp
cmp
movs
pop
xor
xchg
inc
and
dec
jnp
pusha
pop
pop
push
sub
sub
adc
lds
inc
and
test
sub
xor
add
xor
aam
xor
xor
sbb
test
outs
and
dec
jp
imul
jl
pop
sar
jmp
ret
rol
jl
adc
daa
adc
pop
push
cs
fwait
add
xor
data16
jp
pop
dec
push
cmp
sbb
mov
(bad)
aas
addr16
js
ds
test
popa
push
adc
je
add
cs
sbb
push
push
jl
loop
lods
jl
mov
mov
mov
pusha
and
outs
js
rcr
inc
shr
cli
mov
sub
test
pop
test
mov
sbb
push
dec
or
sub
jl
js
jl
pusha
pop
push
and
stc
add
cdq
or
(bad)
jge
sbb
or
pushf
and
fsub
cmp
ins
mov
jmp
xor
sub
add
je
int3
push
ins
push
in
jmp
sar
push
xchg
pop
les
mov
xor
xchg
push
pop
push
movs
pop
and
les
jnp
inc
jno
popa
push
dec
sub
int3
cwde
dec
(bad)
or
das
and
xor
(bad)
clc
jl
or
fs
and
adc
fldl2t
sub
mov
mov
xor
push
pop
jge
daa
sbb
pop
jl
and
ret
mov
add
lods
fdiv
bound
fs
sub
adc
pop
cli
js
sahf
adc
cmp
das
xchg
ins
pop
jo
mov
or
lea
dec
pushf
sbb
movs
pop
sbb
daa
pop
cmp
aas
sub
cs
cmp
gs
jno
ins
push
dec
jl
fsubr
(bad)
sti
adc
scas
mov
nop
cmp
test
jbe
fs
inc
xor
push
add
jl
mov
xchg
nop
jns
push
dec
xor
jo
pusha
std
xor
sbb
repz
mov
or
or
xor
outs
dec
jl
mov
inc
retf
inc
shr
xchg
nop
sbb
and
je
sub
adc
pop
push
cdq
mov
push
jp
es
sbb
add
sbb
xor
das
and
sub
and
aaa
jns
push
loopne
sbb
jl
push
shr
js
inc
jg
adc
test
sbb
das
and
add
push
add
into
leave
nop
xor
sbb
jl
cwde
mov
dec
shl
push
(bad)
jp
pop
add
add
aam
and
add
push
cld
jl
fs
cld
jbe
in
jl
aaa
daa
push
inc
xor
pop
jne
std
mul
js
sbb
jl
ja
mov
loope
push
clc
and
push
sub
adc
push
lods
add
in
aam
cmp
push
and
mov
push
dec
fcomp
lds
js
(bad)
stc
je
mov
out
sbb
jmp
xchg
xor
push
push
adc
sbb
lods
jl
adc
inc
mov
out
aaa
pop
test
adc
(bad)
pop
jl
dec
cmp
or
addr16
jae
jl
push
jl
mov
jns
pop
pop
cli
lods
or
push
sub
movs
sbb
jl
push
dec
inc
xor
pushf
mov
dec
inc
aas
sbb
mov
xchg
dec
inc
aaa
and
les
xor
jg
inc
or
stc
jp
outs
jns
sbb
mov
cmp
outs
sub
adc
aas
iret
daa
sti
dec
cmp
pusha
push
dec
jmp
and
sbb
cli
je
sbb
push
inc
ds
cmp
loope
call
enter
xor
cld
jne
mov
pop
xor
mov
push
mov
dec
cmp
sbb
mov
fmul
push
sbb
pop
add
jnp
in
jl
sbb
jecxz
mov
jbe
int3
js
aas
jp
adc
clc
sbb
and
or
js
sub
mov
sub
dec
imul
jo
mov
out
out
xchg
(bad)
sbb
add
sub
push
pusha
pop
and
int
xchg
enter
int3
mov
jl
pop
dec
inc
jg
enter
mov
xor
push
test
jne
es
(bad)
cli
lds
ins
or
jl
mov
adc
jp
les
pushf
push
dec
dec
mov
and
mov
jmp
and
inc
mov
cmp
(bad)
jnp
psubb
fs
push
in
jne
sar
jnp
fld
sub
test
ret
fst
iret
dec
mov
fld
xor
in
lahf
ins
je
jbe
add
jb
int3
sbb
popf
movs
sbb
and
sub
std
mov
inc
cmp
pushf
rcr
ds
dec
xchg
push
sar
repz
inc
mov
sbb
cmp
sbb
arpl
push
ins
push
sub
jmp
jl
or
iret
sbb
cld
shl
pop
inc
jbe
retf
xchg
inc
add
mov
ins
arpl
push
push
sub
adc
test
xor
popf
mov
jne
adc
and
sbb
sub
push
sub
sub
mov
jl
or
pop
dec
dec
inc
pushf
push
ins
push
daa
mov
xchg
add
dec
call
inc
test
inc
pop
xchg
jl
jb
jbe
test
sahf
hlt
sbb
aam
inc
aaa
xor
mov
pop
push
or
mov
sbb
outs
nop
dec
push
pop
add
or
cmp
sub
inc
cmp
js
sbb
fwait
js
xor
push
je
adc
xor
push
push
std
cmp
cs
xchg
lock
push
push
adc
je
jae
inc
xchg
fld
push
jnp
adc
jl
push
mov
cwde
jns
jno
shr
cmp
mov
push
clc
jmp
push
(bad)
icebp
les
mov
cld
in
fsubr
or
fs
mov
xchg
cmp
push
dec
call
sti
pushf
sbb
pushf
dec
xor
mov
jne
push
add
scas
ins
inc
lds
pop
and
inc
jmp
fstp
sbb
sub
ret
or
jl
inc
xchg
movs
hlt
cmp
in
jb
imul
test
pop
jge
sub
dec
fstp
jns
mul
mov
and
adc
test
bound
pop
dec
test
pop
cli
je
div
pop
inc
mov
ins
cmp
pop
jmp
pop
pop
ins
jne
sysret
sti
inc
adc
shl
and
out
stos
and
ret
stos
xchg
(bad)
mov
push
or
jns
cli
cld
nop
loope
mov
scas
ds
sbb
jle
retf
lods
sahf
sti
in
rol
pushf
out
aad
fdivr
cmp
pop
inc
push
ins
mov
cli
test
and
cmp
sbb
adc
popf
sbb
cs
cmp
hlt
in
xor
into
lods
loopne
jae
ror
repnz
jl
adc
or
pop
push
jne
enter
jno
aaa
jge
fld
mov
mov
mov
cmps
shr
mov
scas
mov
xor
ror
push
add
mov
test
xor
js
pop
cmp
int3
je
mov
inc
cmp
push
inc
daa
sub
movs
hlt
arpl
jmp
sub
(bad)
or
je
jl
pop
fs
mov
int3
mov
mov
jl
dec
mov
movs
jl
mov
rcl
mov
pop
mov
int3
js
sub
clc
mov
je
and
push
xor
mov
pushf
inc
and
test
push
pusha
addr16
jns
dec
cs
mov
or
cmp
pop
jae
ss
xor
and
push
lods
add
push
cmp
ins
jae
pushf
mov
loope
lods
std
mov
cmps
xchg
add
pop
cwde
je
mov
je
aas
xchg
nop
jne
(bad)
mov
xchg
or
and
pop
outs
inc
and
cld
nop
dec
sub
test
ds
imul
cld
jl
or
in
pop
and
and
pusha
je
addr16
mov
dec
adc
js
les
mov
cmps
mov
js
je
dec
in
test
jno
in
shl
jne
leave
mov
mov
test
test
sub
in
ins
xlat
mov
les
inc
sub
push
xor
popf
dec
xor
push
sbb
je
pop
sbb
cmp
sub
js
push
or
pusha
in
mov
cmp
jp
jb
test
mov
rcr
(bad)
xchg
data16
jg
in
jne
mov
jns
(bad)
(bad)
test
mov
mov
or
stos
or
mov
xchg
sbb
neg
add
dec
dec
xor
cmp
dec
add
push
xor
hlt
sbb
jae
or
fisttp
outs
pop
sbb
cld
xor
dec
or
je
jne
jl
lods
mov
test
call
loopne
adc
mov
mov
xor
dec
fwait
ins
xchg
inc
jne
pop
lea
fwait
xor
mov
les
mov
lods
or
sbb
dec
push
cmp
xchg
add
je
je
and
cmp
fcomip
ins
paddusb
in
jl
push
cmp
jp
ins
cmp
and
sar
repz
(bad)
hlt
test
shl
jl
rol
mov
repz
sbb
pushf
mov
mov
lods
mov
mov
xchg
jae
xchg
mov
jo
jae
mov
in
js
mov
loopne
add
mov
cs
mov
adc
js
xor
jns
cmp
sti
cmp
jae
pop
js
sbb
xor
mov
jp
ficomp
add
js
ds
mov
stc
icebp
(bad)
aam
sub
lds
jne
jmp
push
fcomp
lods
mov
loopne
inc
(bad)
dec
dec
movs
xchg
popf
les
jae
ins
mov
je
mov
lds
daa
or
cld
mov
pop
mov
and
xor
cmp
in
adc
xor
js
das
adc
js
dec
xor
jl
gs
jp
xor
sahf
inc
cs
clc
int
adc
ins
mov
pop
cmps
jno
enter
rcr
ins
pop
ret
pop
fsubr
push
nop
dec
in
enter
lods
js
cld
out
nop
repnz
lock
dec
shl
jnp
mov
jg
mov
jmp
push
push
test
pop
es
sbb
in
cli
js
cmp
ins
dec
fnsave
pop
popa
dec
xor
ja
fs
ret
in
xor
sbb
js
lahf
cmp
jmp
je
ins
jo
jne
push
outs
gs
xor
push
gs
mov
sbb
mov
aad
repnz
mov
(bad)
stos
add
jns
mov
xchg
jae
inc
inc
mov
add
sub
mov
cmovl
cmp
sbb
jne
sub
cli
jl
sub
je
or
pop
add
(bad)
cmc
ins
xor
push
rcr
pusha
lods
jo
xchg
ins
ss
push
cmp
nop
add
dec
sub
xor
pushf
adc
fild
fmul
std
test
add
cmp
inc
xchg
xor
adc
jmp
xor
sub
outs
pop
dec
(bad)
in
jbe
enter
add
jl
push
lds
jp
out
popf
adc
inc
xor
dec
pushf
xor
or
pop
fst
adc
adc
jp
sbb
cwde
pop
cwde
jbe
adc
and
jne
push
in
outs
js
jmp
rcr
push
dec
cs
gs
and
sub
inc
xor
ror
sub
xchg
pop
pusha
push
js
outs
jns
dec
aas
std
je
or
mov
ds
push
add
adc
mov
xchg
jp
sub
mov
jl
adc
xor
sbb
pusha
push
outs
je
jne
or
mov
mov
adc
mov
sbb
test
mov
movs
call
pop
jb
add
jge
add
fiadd
pop
je
je
sub
xor
sbb
je
jnp
xor
cmp
imul
push
and
jl
xor
mov
mov
shl
xchg
mov
jo
out
mov
mov
add
inc
pop
popf
pop
or
not
mov
xor
inc
sub
nop
nop
push
cmc
add
adc
pop
sub
js
push
rol
fdiv
mov
jne
push
add
js
cs
sub
cmp
jge
inc
xor
push
hlt
and
and
mov
pop
adc
test
or
pusha
push
push
inc
xor
inc
and
ja
xor
popf
push
pop
jl
ins
rcr
mov
rcr
jp
pusha
pop
push
sbb
sbb
test
xlat
mov
cmp
sub
add
(bad)
cli
mov
or
pop
bound
push
or
sub
and
retf
inc
pop
or
pop
fnstcw
push
inc
not
in
and
lods
in
mov
push
dec
dec
lds
xor
push
jne
cmps
test
adc
div
sub
mov
out
out
popf
jo
inc
sbb
js
jecxz
(bad)
xor
adc
sub
sbb
and
or
ror
jl
daa
js
sbb
cmp
xor
pop
push
adc
mov
sbb
imul
inc
dec
inc
and
(bad)
xor
add
xchg
jmp
inc
add
loopne
popf
dec
mov
retf
jl
aad
(bad)
jecxz
jl
and
push
lea
add
std
out
in
data16
in
ret
ret
shr
sbb
sbb
xor
imul
pop
add
inc
push
mov
or
lods
push
scas
dec
push
jl
aas
push
pop
aaa
js
xor
push
pop
adc
out
mov
je
iret
xchg
clc
out
jmp
jo
xor
shr
pop
mov
jl
test
jnp
and
add
nop
xor
sbb
mov
repnz
sar
jo
imul
outs
mov
aas
outs
fmul
aas
ja
ret
aad
les
je
loop
push
iret
retf
cmp
cmp
ret
or
je
ja
sub
inc
or
cdq
test
xlat
aad
mov
push
popf
dec
push
inc
sbb
dec
fisub
fstp
push
adc
(bad)
retf
test
add
loopne
push
push
push
aam
fcom
js
xor
mov
push
loop
cli
jo
jno
movs
inc
cmp
repnz
ja
aam
mov
je
lock
push
fsub
outs
shl
adc
stos
bound
mov
push
js
enter
imul
rol
rcr
fcmovnu
inc
push
out
leave
fdivr
fnstsw
and
xchg
mov
sub
xor
xchg
push
adc
mov
mov
aaa
js
jno
out
mov
(bad)
mov
nop
js
jbe
add
cdq
sbb
mov
jb
es
ret
mov
jl
shl
pop
mov
adc
push
mov
jg
push
cwde
sbb
les
xchg
aaa
js
jno
outs
pop
push
jg
push
js
addr16
and
jnp
jecxz
mov
in
xor
js
and
sub
pop
into
stos
rcl
mov
mov
shl
jmp
jb
jl
sahf
lock
(bad)
not
or
wbinvd
mov
jmp
sub
sub
loopne
cdq
sub
dec
das
enter
and
jne
pop
jo
dec
xrstors
fmul
inc
loope
fldcw
jp
cmp
loop
adc
in
or
xlat
mov
push
imul
jle
sbb
push
pushf
(bad)
xchg
jbe
xchg
inc
cwde
loope
int3
push
cs
xor
cmp
pop
arpl
pusha
aas
push
(bad)
ins
mov
ret
cmp
cli
push
push
push
pop
sahf
adc
jge
inc
inc
ds
jo
jl
nop
fldenv
xchg
sbb
cs
xchg
inc
std
push
pop
and
and
je
inc
jecxz
pop
adc
sbb
or
jg
movs
in
fdiv
pusha
pop
mov
out
add
imul
xchg
cwde
lock
ja
pop
inc
dec
push
mov
xchg
outs
imul
and
imul
mov
int
dec
iret
or
ret
pop
mov
mov
dec
jns
sbb
std
mov
stc
mov
adc
or
cmc
movs
xor
pop
sbb
mov
pop
dec
push
aaa
add
push
xor
ja
and
mov
into
push
clc
jge
imul
into
mov
in
add
cmp
les
push
fdiv
and
push
inc
push
add
test
stc
dec
push
push
stc
jl
jne
sub
sbb
je
pop
or
in
cdq
retf
push
dec
test
fucomi
and
pop
rol
sti
mov
call
and
sub
stos
aaa
jl
pop
xor
cld
push
addr16
xor
jae
daa
jge
adc
sbb
jo
test
out
fs
js
mov
jb
jne
add
je
std
js
dec
lea
dec
mov
das
inc
ret
push
pop
pop
lds
std
cmp
add
aas
test
and
sub
adc
inc
mov
iret
xchg
adc
mov
and
rol
xor
xor
cmp
xor
test
addr16
sbb
test
inc
jne
pop
mov
push
pop
pop
mov
fwait
push
cwde
dec
or
fidivr
bound
xor
mov
fnsave
sbb
dec
add
int
push
mov
popa
bound
cmp
loope
call
fsub
je
pop
addr16
mov
ret
pop
jns
popf
push
pop
push
or
daa
add
das
sbb
je
or
test
pop
pop
dec
and
add
ins
dec
inc
pop
sub
mov
adc
adc
sub
inc
push
pop
mov
dec
xor
ror
jo
pusha
xor
pushf
jl
push
adc
mov
test
inc
aas
fdivr
pusha
add
js
sar
inc
dec
sbb
sub
xor
fsub
and
pop
jl
ja
mov
mov
popf
mov
adc
(bad)
mov
and
mov
pop
arpl
mov
push
in
imul
cmc
add
(bad)
js
adc
jne
push
pop
bound
movs
push
adc
shr
and
fs
jge
out
clc
test
add
xor
aam
outs
xor
cmp
pusha
addr16
test
inc
jmp
sar
in
jecxz
cmp
sbb
es
imul
adc
jl
or
clc
rol
or
aas
outs
or
outs
fxam
dec
mov
dec
or
outs
retf
and
clc
nop
and
inc
js
xor
pop
jge
clc
push
add
in
jle
jne
xor
jl
retw
cmc
push
mov
push
test
imul
aam
addr16
mov
loopne
push
mov
add
ja
push
sbb
push
push
push
cmp
and
std
push
xchg
and
cs
cmp
(bad)
xlat
rcr
pop
sub
push
bound
pusha
xor
fisttp
push
jp
aad
lods
xor
jl
iret
mov
shr
sub
in
or
div
or
inc
inc
shl
dec
mov
push
jno
xor
out
mov
sti
or
push
data16
in
inc
aam
pop
and
ins
mov
push
outs
movs
add
mov
cdq
shl
fld
xor
pop
sbb
sbb
cmp
or
jo
adc
movs
cwde
push
cs
pusha
addr16
dec
js
mov
sub
sub
xor
jecxz
jp
div
pushf
dec
inc
cmp
ins
sar
xor
jns
push
push
iret
call
out
adc
js
js
xor
xor
(bad)
pushf
sbb
or
test
sub
jne
fs
jo
sub
dec
and
push
cli
dec
faddp
addr16
cmp
cmp
pop
pop
mov
and
in
int
lds
push
cmp
xor
dec
dec
fidivr
fiadd
push
add
inc
rol
sbb
and
sbb
pop
xor
icebp
sub
jne
dec
push
jp
xor
popa
pop
mov
pop
pop
fmul
dec
add
ss
pop
sub
mov
cli
cmp
cmp
or
sub
out
push
or
jne
mov
sbb
mov
mov
and
mov
nop
push
pop
xor
data16
pushf
dec
pop
pop
cmps
and
jbe
sbb
inc
and
shl
jne
jmp
jp
add
sub
dec
push
dec
mov
fistp
aam
(bad)
fwait
mov
cwde
and
and
test
enter
ins
sti
aas
inc
inc
call
mov
inc
cmps
mov
adc
(bad)
jne
and
in
sbb
fwait
lea
inc
push
imul
outs
cwde
sub
sub
sti
adc
push
mov
add
pop
mov
lods
popa
scas
pop
stos
ja
loopne
mov
inc
jmp
lods
and
lods
fdivr
push
pop
push
jmp
jo
sub
outs
adc
sbb
sub
xlat
js
add
mov
ficom
mov
rcl
cmp
sbb
stos
or
jl
or
sbb
pop
pop
jae
cmc
jnp
mov
sbb
imul
les
jmp
cmp
pushf
xchg
xor
pop
and
pop
adc
retf
add
pop
adc
out
movs
stc
jo
xor
cli
or
pop
and
cmps
sbb
push
pop
add
dec
js
dec
retf
xchg
jae
jne
ins
mov
fucomip
js
stos
jbe
test
push
cmp
jmp
popf
mov
rcl
push
and
jne
and
test
cmp
and
mov
in
lock
cmp
push
sub
mov
ins
jae
jo
jl
jl
xlat
cmc
loopne
imul
push
xchg
xor
je
sub
fidiv
xor
ins
and
out
cmc
jmp
or
cmp
cmp
ins
cmp
fisub
adc
pusha
sti
(bad)
mov
movs
push
and
pop
push
call
out
push
mov
aaa
das
gs
sub
inc
sub
sub
arpl
xor
xchg
aas
fsubr
movs
jbe
xor
fs
je
adc
or
jne
dec
dec
dec
in
push
and
or
mov
movs
pusha
pusha
push
pop
(bad)
pop
jne
mov
push
push
aad
in
xchg
out
fs
jp
pop
xor
jl
addr16
mov
xchg
call
xchg
sbb
data16
cmp
out
je
ds
xor
sub
cwde
test
inc
push
xchg
or
mov
or
fucomp
repz
adc
test
push
movs
in
or
mov
inc
call
adc
pop
pop
das
push
xchg
mov
out
mov
pop
push
mov
clc
ins
sti
test
fidiv
cmp
cmp
fisttp
sub
sub
inc
sbb
pop
push
fs
cmp
mov
neg
mov
mov
push
cmp
mov
rol
aam
popa
pop
pop
addr16
lods
dec
push
inc
inc
add
mov
test
scas
ins
test
in
jo
xor
je
lahf
and
test
or
cmps
xor
repz
mov
pop
bound
mov
xor
sti
mov
js
test
push
push
or
xor
cmp
sbb
sahf
ins
sub
fsub
nop
dec
inc
hlt
mov
push
movs
push
daa
pop
jg
int3
sbb
adc
cwde
and
sbb
adc
js
sbb
cld
cwde
add
in
test
call
cld
ins
inc
push
push
test
sbb
and
sti
gs
jmp
pop
mov
test
fnstcw
add
jl
lahf
out
clc
imul
xchg
cmps
sub
sbb
jne
or
jg
hlt
or
test
adc
repnz
sar
add
pop
pushf
pusha
xor
rcr
out
shl
clc
add
or
mov
jmp
sbb
and
jne
jbe
hlt
mov
je
jo
jo
fdivr
int3
push
daa
mov
mov
pop
or
nop
jns
add
cli
mov
pop
mov
push
cmc
sbb
lock
cmp
out
ja
push
dec
mov
push
push
pop
sbb
mov
jmp
frstor
dec
inc
adc
je
and
and
je
(bad)
push
pushf
mov
pushf
jl
push
adc
add
push
add
ins
sti
test
or
nop
inc
push
add
jne
js
aaa
in
sbb
dec
inc
pop
cmp
jmp
in
stos
outs
or
ficom
loope
add
daa
mov
test
mov
mov
div
and
fisttp
cli
cmc
repz
ins
sbb
js
ror
push
pop
sbb
cmp
arpl
and
and
hlt
ins
xor
inc
aas
ror
in
xchg
push
jl
lods
cwde
pop
pop
pop
loope
(bad)
cwde
adc
sub
sub
(bad)
adc
adc
stc
mov
sub
test
shl
in
sub
clc
and
cli
pop
jbe
retf
sub
sbb
jl
adc
adc
pop
pop
add
and
sub
aam
cli
clc
std
sti
sub
jo
push
test
pushf
pop
sbb
jns
(bad)
stc
imul
pop
sbb
in
pop
test
sbb
fmul
es
or
ret
stos
adc
out
fistp
jl
push
stc
mov
jl
aam
or
xchg
xlat
sahf
ins
jae
pop
mov
or
add
in
jmp
leave
cmp
fidiv
push
and
js
jl
inc
inc
in
xor
mov
sahf
and
aad
in
ins
repz
sub
dec
je
js
in
call
sub
sahf
rol
push
push
test
push
adc
inc
out
adc
xchg
jns
add
ret
icebp
in
fistp
fdivr
or
mov
test
xor
push
das
mov
inc
shr
add
xchg
test
stos
mov
xor
js
xor
or
and
stc
cmp
es
push
std
fs
clc
dec
adc
and
mov
lock
loope
out
rcl
pop
into
pop
loop
add
jmp
jl
(bad)
jmp
mov
push
jmp
push
push
rcl
cmp
xor
jae
mov
or
clc
cmp
jecxz
pushf
(bad)
test
ds
jne
(bad)
aad
mov
clc
pop
int3
fs
ret
shl
pop
mov
shr
mov
jle
inc
dec
push
sahf
ror
fs
pop
jl
movs
push
daa
mov
cmps
addr16
hlt
rcl
add
imul
call
cmc
cli
test
dec
sti
mov
mov
les
dec
pusha
fdivr
call
(bad)
js
rcr
xor
jl
add
cs
retf
jl
mov
cld
iret
adc
jns
jns
jl
dec
dec
jmp
sub
cwde
jne
add
add
cmps
jnp
jmp
cmp
jo
test
cld
call
aas
jne
jmp
jo
sub
pop
(bad)
push
pop
aam
mov
mov
and
js
in
call
inc
ds
and
jns
loopne
jns
pop
adc
pop
or
xchg
mov
xchg
js
fst
std
test
js
repnz
repz
test
loope
add
test
or
movs
daa
add
pop
sbb
pop
or
sub
loopne
push
pop
pop
mov
push
and
jns
adc
ror
xchg
sbb
pushf
sub
sub
test
in
retf
nop
sbb
in
pop
and
dec
add
ins
add
leave
or
pop
inc
das
ins
mov
leave
jns
sub
mov
test
add
idiv
(bad)
mov
js
jp
jmp
dec
imul
cwde
dec
push
or
xlat
cld
mov
inc
adc
aaa
jb
ja
cwde
stos
into
inc
lods
rcr
sbb
inc
inc
js
sub
call
lods
jns
push
sbb
test
fmul
add
pop
nop
das
xor
jecxz
and
ins
or
ds
fs
jge
jnp
adc
and
lea
nop
adc
daa
mov
xor
push
adc
aam
dec
mov
addr16
cmp
in
mov
je
imul
outs
movs
mov
mov
push
dec
inc
fnsave
aam
cmps
aam
stos
pop
dec
in
xor
push
and
add
jo
jl
aaa
cmp
repz
lods
mov
sub
test
xor
js
push
data16
cmps
fsubr
ds
jne
mov
add
pushf
dec
ror
je
popf
call
jl
mov
test
sub
pop
aam
jle
adc
inc
mov
sbb
es
pushf
aaa
xor
aas
inc
cmp
ins
xor
adc
outs
jae
jne
sbb
add
enter
outs
mov
ins
pusha
inc
pop
push
aad
and
push
fldcw
sub
daa
ds
jl
rol
pop
fisub
std
mov
adc
and
test
push
test
call
pop
mov
js
mov
mov
pop
data16
push
cmp
out
cmp
nop
jae
cmp
stc
nop
adc
mov
sub
jns
sub
mov
pop
repz
inc
xchg
sub
arpl
xchg
pop
sbb
or
jo
retf
push
cwde
cs
xor
mov
push
pop
and
and
mov
cmp
cmp
cs
das
and
push
repz
xchg
sbb
xor
jno
jl
cmp
lods
test
sbb
fs
fs
jbe
mov
adc
imul
xchg
rcr
hlt
inc
stos
js
jbe
mov
xor
imul
xor
std
or
inc
inc
cmp
jle
adc
je
je
scas
jns
jno
cwde
loopne
fldcw
add
test
jl
rol
pop
nop
cmp
les
cld
jl
sub
jmp
sbb
mov
lock
pop
loop
(bad)
imul
mov
retf
cs
jbe
test
mov
jl
addr16
mov
cdq
push
jl
jne
mov
cmp
sbb
jl
ds
rep
out
out
in
add
clc
xchg
xor
pop
jl
pop
jb
test
inc
cwde
and
loopne
test
jge
js
ins
rcl
xor
(bad)
cld
hlt
mov
and
and
push
imul
push
mov
test
shld
sub
mov
mov
sub
pop
and
mov
pop
adc
div
and
pop
cmp
test
cmp
in
jl
adc
xlat
lahf
ds
aam
je
lea
mov
pop
push
push
sti
cwde
aas
popf
push
dec
psubw
je
es
les
std
mov
pop
push
xchg
enter
test
sub
add
mov
rol
call
mov
in
mov
or
sub
mov
fs
inc
inc
jmp
js
test
adc
in
xor
jno
movs
pop
cmp
arpl
adc
test
inc
mov
dec
dec
ret
loope
add
sbb
aad
aad
jl
mov
prefetcht1
jmp
jl
inc
jb
movs
je
leave
jle
jmp
dec
push
ret
inc
test
mov
repz
mov
and
xchg
and
mov
out
jo
ins
push
cmp
in
sub
movs
push
xchg
push
xchg
and
icebp
js
mov
sub
mov
pop
sti
shr
inc
sbb
ss
fcomip
hlt
loopne
xor
push
ror
fstp
add
mov
std
xor
pop
lea
daa
jp
jo
into
add
pop
mov
and
dec
jmp
xor
inc
pusha
mov
adc
jne
sbb
or
ins
dec
push
ret
mov
je
xchg
arpl
xchg
addr16
cs
fnstsw
fsub
outs
jmp
jbe
push
pop
dec
jo
jae
test
das
je
out
addr16
inc
out
sub
or
stos
ror
pop
push
jnp
scas
adc
rol
fs
outs
cmc
mov
add
pop
inc
inc
and
es
mov
inc
push
mov
aaa
push
mov
outs
mov
mov
push
mov
pop
pop
push
nop
push
push
jae
popa
pusha
test
xor
cmp
inc
dec
sub
pop
pop
cs
icebp
in
aad
jl
adc
call
test
jns
jl
sub
or
dec
call
outs
inc
ds
inc
dec
ins
inc
mov
inc
je
xor
push
pop
cmp
push
jo
inc
push
cmp
ins
cmp
dec
sub
cld
sub
dec
inc
and
ins
(bad)
js
adc
sub
sub
mov
js
je
je
jbe
mov
test
push
push
test
jp
aas
cmp
cwde
jae
dec
xor
and
xor
std
pop
cmp
sbb
div
xor
add
mov
inc
inc
fs
push
and
pop
sub
cmp
pop
dec
sub
jne
sub
mov
movs
nop
js
or
rol
imul
mov
mov
jmp
xor
ins
fs
sbb
fs
pop
sbb
imul
sbb
sub
and
push
mov
lea
push
(bad)
scas
jns
push
jl
fldcw
sub
js
in
outs
ins
mov
ss
test
dec
inc
and
data16
jge
and
call
xchg
xchg
js
arpl
outs
inc
mov
push
mov
sbb
sub
adc
out
nop
jmp
mov
jg
daa
(bad)
jl
xchg
js
retf
inc
inc
and
mov
xchg
mov
std
xchg
bound
je
test
je
mov
clc
mov
dec
push
dec
ins
push
push
cmp
sub
loopne
jo
and
or
(bad)
push
xor
sub
mov
xlat
mov
jl
ins
pop
in
mov
jl
aaa
dec
fwait
dec
js
call
and
add
adc
fs
xor
inc
and
push
jne
push
popf
cmp
cli
push
dec
pushf
mov
add
pop
es
js
inc
and
and
sbb
push
js
pop
add
in
push
js
mov
jl
lods
rcl
mov
jb
dec
mov
sbb
cmp
add
ins
js
inc
aaa
cwde
dec
cmp
lds
xor
dec
dec
scas
pop
inc
rcl
or
cmp
push
ret
push
call
js
pop
sbb
jl
add
push
iret
xchg
ins
jmp
mov
push
mov
jae
add
cmp
jmp
and
mov
adc
pop
pop
je
pop
test
imul
cld
jp
inc
and
xchg
adc
mov
xlat
test
sub
pop
add
test
sub
int3
mov
pop
loop
mov
data16
cmp
add
imul
inc
pop
inc
sub
ja
daa
and
or
sbb
pop
fld
pushf
xor
jl
pop
sub
jo
pushf
push
arpl
lds
mov
pusha
dec
repz
cmp
cwde
inc
addr16
dec
mov
imul
cmp
xor
out
inc
push
sub
jl
jl
push
pop
into
fsubr
fcom
cld
lods
es
add
mov
dec
les
push
ds
jecxz
ins
mov
ins
push
inc
sbb
test
fbld
dec
out
push
xchg
ins
dec
dec
and
clc
test
push
pop
loope
jecxz
loopne
mov
into
fstp
test
je
mov
sbb
sbb
mov
cs
jl
in
js
aas
cmp
ss
sti
xchg
and
inc
push
jo
pusha
aas
inc
cmp
cmp
pusha
fs
inc
retf
dec
dec
cmp
dec
pop
adc
pop
inc
sbb
jl
jb
jl
and
or
adc
outs
jl
sub
pop
and
sbb
pop
pop
(bad)
jl
imul
es
mov
pop
pop
std
js
cmp
xor
cli
jl
mov
sbb
cdq
jl
aam
into
fcom
and
pop
test
sub
or
imul
ins
out
sub
cmps
or
pop
iret
jae
cmp
dec
daa
data16
jl
add
jl
js
pusha
mov
jns
mov
gs
mov
gs
dec
xchg
or
pushf
arpl
ret
je
test
inc
lahf
ins
lods
pop
ds
push
je
dec
push
pusha
fbld
push
pop
popa
cs
sub
jl
jmp
pop
hlt
xchg
push
pop
lds
stos
mov
jl
sub
int
xlat
fld
pop
es
push
sbb
cwde
add
jbe
cmp
je
cmp
xor
ja
inc
and
sub
or
push
daa
xchg
hlt
push
push
movs
mov
sub
pop
and
and
lods
or
jb
inc
xchg
pop
inc
sub
js
inc
inc
movs
ds
dec
and
cmp
cmovae
daa
inc
add
dec
dec
scas
ins
inc
rcl
mov
pop
out
js
dec
sub
push
xchg
in
ret
mov
mov
imul
xor
mov
dec
dec
and
ret
js
arpl
fs
bound
jno
ins
stos
mov
cmps
ins
mov
cs
and
sbb
dec
stos
jmp
(bad)
mov
jae
jl
xchg
movs
lods
inc
nop
jae
sub
cmp
pop
ret
cwde
shr
inc
ins
sub
js
ins
push
dec
outs
das
cld
clc
push
push
sar
and
and
idiv
or
test
jl
cwde
add
dec
push
test
pop
pop
cmp
shl
sti
push
push
cmp
fs
ja
pop
inc
mov
push
je
pop
inc
jno
pop
inc
xchg
arpl
sbb
push
je
sub
jae
rcr
movs
xor
sar
sbb
jae
mov
fnstsw
adc
mov
push
fld
xor
pop
pushf
cdq
jbe
xor
cmp
sbb
adc
je
jo
mov
or
dec
mov
dec
push
sbb
sub
sti
mov
jge
push
sub
adc
or
jns
js
js
jl
js
leave
aam
jl
and
mov
outs
dec
das
cli
inc
inc
and
sub
dec
jl
dec
daa
std
dec
stos
xlat
ins
inc
in
inc
sub
push
and
inc
sbb
out
jl
imul
mov
sub
jne
adc
cwde
aaa
and
jmp
push
lods
pop
cmc
jo
xor
push
dec
pop
mov
ret
xor
js
dec
sub
jl
ins
rcr
mov
xor
enter
mov
cmp
jmp
out
scas
jl
imul
dec
adc
jge
push
and
jne
jmp
enter
xor
cmps
mov
loopne
mov
das
cs
jl
movs
sub
enter
cli
mov
ins
inc
push
je
pop
push
push
pop
mov
arpl
bound
dec
pop
pop
das
cmp
xor
test
pop
test
dec
xor
dec
jl
dec
adc
adc
mov
in
push
js
outs
or
add
jl
js
retf
xor
pop
mov
loop
das
pop
pop
mov
jl
xor
out
cwde
sbb
pop
push
popa
test
cmp
mul
adc
dec
inc
dec
adc
daa
sub
jl
mov
add
and
ret
scas
inc
xor
jl
jl
xor
jl
pop
cmp
test
sub
dec
es
push
repz
xchg
dec
jb
dec
dec
cmp
mov
xor
jle
and
push
push
sbb
cld
daa
hlt
call
leave
add
xchg
or
inc
jmp
sub
(bad)
jns
push
(bad)
jl
gs
xchg
sub
adc
add
imul
mov
inc
addr16
inc
push
out
test
test
daa
sub
enter
fidiv
jl
sub
push
cli
jl
mov
test
mov
mov
js
imul
fs
xor
je
or
jl
fnstcw
jbe
mov
pop
xor
push
pop
jnp
push
push
cmp
push
cmp
hlt
adc
je
pop
cmp
dec
aaa
fs
push
cmp
push
cmp
pop
pop
loopne
pusha
sub
fsubr
test
push
aaa
xor
xlat
call
cmp
(bad)
push
jl
xor
and
sub
mov
test
sbb
in
lahf
mov
mov
lods
pop
aaa
xor
mov
mov
retf
pop
sar
adc
sub
or
das
jmp
jno
jle
gs
outs
push
push
dec
aam
call
jo
jo
ins
cmp
push
xchg
cmp
pop
pop
inc
icebp
pop
push
cmp
pusha
xor
test
pop
push
test
and
push
out
mov
pusha
je
jl
fstp
cdq
jnp
fwait
pusha
cmps
pop
aam
jl
call
ret
jl
mov
push
scas
jl
popa
dec
jl
inc
jae
dec
xor
test
or
addr16
dec
xor
sar
mov
push
inc
jl
mov
mov
and
jl
addr16
daa
jl
jge
test
in
ins
outs
add
cmp
push
dec
xor
and
mov
rol
dec
dec
jl
movs
jl
xor
push
ret
pop
jl
icebp
mov
mov
push
push
lds
repnz
mov
push
pushf
aas
int
ins
push
pop
ret
je
mov
retf
push
sbb
jl
aas
push
sub
jl
jl
jns
mov
das
cmp
ins
push
jl
push
add
xchg
push
pop
je
int3
xchg
xor
adc
movs
es
fs
outs
mov
jne
mov
js
(bad)
sbb
and
neg
push
mov
sbb
sub
sar
jne
cdq
xor
pop
adc
test
jl
call
pushw
movs
cmp
pop
inc
hlt
js
call
xor
mov
mov
cmp
push
xor
je
in
push
daa
sub
inc
daa
jl
jl
add
and
lds
jnp
pop
jl
inc
jl
pop
sub
cwde
fnstenv
mov
jge
(bad)
jo
(bad)
inc
arpl
push
jmp
and
jl
es
sub
sub
xor
jl
jl
xor
jmpw
push
sar
xor
data16
push
and
jl
dec
dec
xor
sub
mov
das
or
repnz
push
add
ins
sub
lgs
xchg
inc
dec
or
clc
ins
dec
dec
xor
ins
xor
pop
sbb
xor
dec
mov
pop
and
aaa
and
mov
pop
sub
sub
rcl
inc
and
add
inc
les
pusha
xchg
sub
or
sbb
push
cwde
inc
retf
cmp
sbb
xor
fs
das
adc
dec
and
dec
sub
jl
push
mov
loope
js
jl
loope
mov
jl
and
jl
fs
pop
pop
inc
push
mov
xchg
gs
pop
or
inc
pop
pop
inc
popa
pop
es
fiadd
repnz
add
xor
add
ror
jl
jmp
jl
ds
sbb
arpl
test
ins
inc
daa
js
pop
and
xor
jne
das
or
jl
xchg
or
mov
jl
sub
sbb
jl
ret
cwde
pop
push
jl
test
cmp
cmp
jl
dec
dec
das
aas
adc
lea
cdq
push
and
sub
sbb
sub
pop
push
dec
sbb
dec
inc
xor
(bad)
js
nop
dec
call
inc
and
dec
dec
sub
push
ins
push
lods
and
inc
jl
leave
out
(bad)
mov
jl
and
stos
mov
je
out
jl
jl
fdivr
and
test
js
xor
jo
cmp
jo
scas
je
cmp
xchg
(bad)
into
adc
jmp
adc
rcr
pop
movs
pop
jo
inc
cmp
xchg
mov
fimul
dec
pusha
jb
jnp
repnz
and
push
mov
add
jl
outs
push
jl
pop
sbb
std
mov
dec
mov
pusha
dec
int
fwait
ds
ds
sbb
test
bound
imul
arpl
cmp
pusha
mov
push
xor
and
jl
jge
and
xchg
inc
jp
in
cwde
jmp
outs
bound
outs
pop
push
sub
jo
and
jl
xor
inc
sub
jl
jmp
jl
jmp
jl
jle
jl
dec
mov
je
push
ins
inc
sahf
ins
sub
push
outs
inc
sub
fbld
and
add
inc
jl
jl
xor
rcr
push
repnz
in
nop
inc
inc
scas
ins
inc
inc
outs
mov
and
mov
js
push
fs
mov
xor
xor
jl
push
aaa
or
cmp
sbb
xor
js
mov
and
pop
(bad)
js
xor
jo
les
xor
xor
ins
xor
pop
imul
nop
pop
data16
aam
andps
cmp
cmp
std
dec
inc
dec
mul
repnz
push
inc
and
rcl
mov
sub
sub
jl
jl
ins
lock
dec
pop
idiv
mov
sbb
imul
jo
out
sub
inc
gs
loope
ins
push
jo
imul
dec
mov
and
repz
les
repz
xor
add
mov
jp
or
adc
cmp
adc
loopne
stos
je
int
scas
cli
sar
inc
fs
sub
push
sub
pop
push
imul
out
sub
jl
fldenv
clc
ret
out
sub
clc
aam
sar
and
jmp
push
jmp
or
xchg
pop
(bad)
pop
js
arpl
sub
add
push
adc
jmp
add
or
jl
xor
pop
movs
into
xchg
jo
push
jbe
jl
xor
dec
or
dec
out
inc
xor
outs
lods
inc
shl
je
sti
lahf
test
cmp
cmp
dec
sbb
and
pop
add
inc
pop
inc
daa
mov
rol
xchg
push
pop
mov
test
loopne
outs
repnz
mov
jne
add
mov
in
cmp
inc
in
cwde
cmp
fbstp
je
cmp
cmp
or
inc
aas
push
fnstsw
sbb
out
iret
push
jl
cli
jg
add
test
jl
pop
sbb
test
loopne
cmp
sbb
pusha
test
test
nop
out
fs
cwde
ins
ins
sbb
jb
jae
jo
push
push
sti
xchg
push
pushf
ins
outs
push
ret
push
ins
sbb
jno
xchg
jl
push
daa
cli
js
and
test
sub
pop
daa
cdq
mov
pushf
cmc
sub
ja
xor
test
xor
mov
je
ins
ror
add
mov
jae
cli
popf
pop
and
sub
jns
jl
repz
je
sbb
test
xchg
aam
adc
or
sub
pop
mov
aam
mov
jbe
push
add
add
nop
aam
sar
pop
pusha
sub
or
push
sub
mov
(bad)
inc
fs
stos
(bad)
in
das
nop
shl
dec
je
xor
mov
imul
mov
test
sub
sbb
jbe
jne
cmp
jle
add
sub
jl
jne
sub
dec
xchg
xor
mov
jl
sub
and
jp
lods
jns
mov
sbb
xor
jno
in
sub
sub
jne
je
and
jo
cmp
clc
xor
cwde
xchg
or
test
cdq
in
pop
sbb
pusha
es
push
outs
xchg
xchg
mov
mov
mov
and
ins
mov
fisubr
jbe
cmps
adc
out
aam
jl
stos
ret
push
and
xor
inc
inc
cmp
mov
icebp
repz
outs
sub
out
ins
push
pop
ret
push
cs
or
daa
or
ret
out
es
jae
stos
cmp
popa
pushf
repnz
in
les
(bad)
mov
or
sti
mov
pop
sbb
loope
and
xor
inc
hlt
inc
mov
js
and
mov
(bad)
push
sbb
mov
sbb
sub
inc
movs
test
jl
retf
jp
push
and
js
xor
in
sub
push
sub
jo
jl
jl
jl
jl
cs
adc
mov
ins
stos
dec
mov
xchg
dec
outs
mov
add
mov
clc
sub
sub
test
jl
shr
pop
or
jl
ss
in
js
pusha
imul
add
xor
stos
ret
retf
push
js
js
jl
jmp
cmp
xchg
adc
and
sbb
cwde
mov
mov
je
inc
inc
xor
xor
jae
jmp
cld
push
hlt
js
xchg
daa
in
xchg
addr16
ins
shl
jl
out
mov
jl
mov
jne
push
cmp
into
pusha
retf
xchg
jb
js
mov
cmps
into
scas
call
jo
jl
call
pop
cmp
pop
xor
cmp
in
jae
mov
push
xor
(bad)
in
and
mov
call
mov
jg
aam
dec
js
sar
outs
lock
mov
inc
sbb
pusha
push
arpl
push
aaa
jno
mov
sub
and
dec
dec
xchg
in
aas
(bad)
sub
jl
xor
fnstsw
daa
jl
dec
dec
jp
sub
and
cli
xor
cmp
jbe
daa
hlt
xor
outs
cmp
stos
iret
fmul
inc
push
inc
inc
dec
xchg
pop
adc
test
stos
push
gs
jl
jns
dec
dec
nop
ins
ins
pop
sub
daa
sbb
cmp
or
mov
cmp
push
sbb
push
push
adc
fbld
pusha
push
pop
call
pop
das
in
sar
cmps
adc
pop
ret
mov
sub
mov
jl
xor
jl
mov
outs
pop
or
js
or
repnz
jne
cmp
scas
les
xor
jl
jmp
bound
cmp
lods
dec
mov
and
pop
xchg
fadd
sbb
push
inc
in
idiv
(bad)
xor
fdivr
bound
shr
ret
mov
in
js
int
dec
test
and
or
psubw
cmp
pushf
xor
and
inc
jmp
neg
or
xor
jae
aas
lods
sbb
aad
adc
xlat
mov
xor
push
add
inc
ret
add
aad
xlat
xor
add
ret
adc
cmp
pop
pop
add
or
out
scas
xchg
adc
scas
cdq
or
cmp
pushw
adc
xor
rcl
pop
sub
test
enter
jo
jae
jb
and
je
cmc
cmp
pushf
cmp
mov
lahf
in
aam
inc
inc
int3
jl
jns
imul
leave
lods
lock
or
and
add
out
add
in
pop
imul
mov
or
js
pop
ficom
shl
xchg
(bad)
cmp
push
mov
pop
lods
fidivr
ffreep
outs
(bad)
sti
sbb
add
fistp
imul
pop
push
arpl
and
mov
fmul
pop
xor
add
mov
adc
ds
iret
push
sub
stos
inc
nop
pop
add
data16
jns
cmp
xor
xor
mov
pushf
add
jmp
dec
test
inc
mov
js
ds
mov
out
int
sub
adc
jo
and
call
ss
jmp
push
xor
jo
aad
sub
add
inc
imul
pushf
adc
inc
out
leave
js
or
xchg
add
loop
jl
and
sbb
retf
mov
fcomp
add
jae
mov
je
repz
mov
adc
fnstcw
stos
(bad)
sar
mov
mov
and
mov
movups
add
cmp
xchg
std
(bad)
popf
pop
sub
test
sbb
sar
mov
push
and
js
in
and
clc
or
sub
in
push
sbb
mov
or
inc
fsubr
or
add
mov
add
cmp
stc
cli
add
pop
rol
js
shl
adc
add
pop
inc
inc
sub
or
aam
pop
fstp
jp
push
dec
inc
and
mov
push
es
hlt
les
fbld
test
and
loope
lods
outs
test
mov
pushf
sti
cmc
stc
aam
(bad)
xchg
mov
or
call
nop
push
retf
int
int3
js
imul
lock
ds
push
pusha
ja
push
adc
pop
jns
jl
or
mov
push
(bad)
mov
das
jb
cwde
dec
fistp
sub
jne
jp
js
pop
std
test
and
mov
cmc
fild
adc
fdivr
or
or
shl
rol
jne
std
jl
bound
sbb
clc
pop
mov
shr
jg
dec
cmp
addr16
dec
cmp
test
adc
inc
out
fs
dec
inc
jmp
jb
pusha
ja
lahf
mov
loope
fcom
imul
pushf
js
(bad)
sbb
repz
sub
or
fiadd
enter
fnstenv
pop
jp
jne
or
test
jl
xchg
loope
add
cli
in
fsub
jle
inc
adc
mov
js
pushf
pop
pusha
push
mov
add
mov
sti
jl
mov
cdq
xchg
sbb
mov
repz
adc
inc
outs
js
dec
ja
repz
push
or
pushf
ins
test
adc
jg
test
sahf
push
sub
in
shr
enter
mov
outs
ja
or
cmp
movs
jl
ficomp
fidivr
pushf
cwde
call
and
xor
mov
test
js
push
adc
js
psubq
jo
ins
add
clc
mov
jl
jge
jl
fs
imul
jl
out
(bad)
sti
or
stc
call
call
fs
sub
repnz
pushf
mov
jle
pushf
sahf
lea
out
mov
push
dec
xchg
sbb
popa
pusha
jne
push
cli
jo
or
ja
adc
hlt
adc
imul
das
jne
and
push
fnstcw
jbe
ja
(bad)
nop
mov
mov
mov
idiv
out
aam
ins
dec
rcl
es
cwde
mov
mov
outs
inc
out
clc
cli
add
jo
cmp
fst
push
push
aam
data16
and
jo
push
or
jge
cmp
js
ficom
push
mov
inc
dec
xor
mov
mov
in
mov
daa
adc
aas
in
inc
jl
je
mov
mov
inc
add
pop
sbb
rol
sub
sti
push
or
xor
xchg
pushf
cmp
jmp
push
jmp
and
adc
jle
hlt
mov
dec
ficom
mov
pop
jb
loopne
jns
mul
mov
pop
pop
das
inc
pop
mov
ffree
(bad)
icebp
xchg
pop
ins
adc
sbb
dec
rcr
das
xor
js
shr
xchg
and
xor
cli
push
dec
xor
test
stc
pusha
gs
shl
pop
sub
(bad)
call
jbe
fsubr
push
call
pop
sub
jo
cs
pusha
cmps
fcomp
push
add
xor
mov
and
sub
and
mov
inc
xor
js
push
test
stc
cmp
push
stos
clc
fnstcw
mov
mov
daa
or
jl
and
fwait
or
jmp
fucom
and
call
hlt
nop
je
ja
xchg
jns
dec
push
inc
lahf
jae
jge
cmp
or
adc
cmc
pop
movlhps
push
int3
sub
js
or
jmp
pop
xor
pop
xor
mov
inc
jbe
jo
push
mov
jecxz
aad
add
div
xor
mov
std
ins
xor
pop
cwde
sub
xor
pop
adc
js
and
cmp
daa
js
inc
test
icebp
fdivr
fs
add
jne
outs
jg
pop
pop
movs
adc
aad
test
in
js
xchg
out
mov
jmp
fild
jo
xor
cmp
push
inc
cmp
test
inc
adc
clc
lea
mov
(bad)
mov
xor
mov
xchg
push
sub
jg
rcr
or
or
hlt
inc
shl
js
xchg
push
push
inc
test
ds
pop
bnd
mov
cmps
mov
sub
mov
and
pop
pop
dec
ja
add
mov
push
sub
adc
adc
fidivr
or
inc
fild
sub
jo
das
dec
cmp
jo
mov
pop
sbb
mov
xor
xor
dec
(bad)
and
outs
hlt
ins
loopne
out
outs
lods
mov
cli
rcl
lds
xor
fs
jge
jns
cld
jmp
mov
sbb
add
dec
sub
pop
retf
lods
movs
push
jno
ja
or
in
stc
jo
je
mov
fadd
imul
adc
jl
imul
jne
mov
sub
add
(bad)
int
in
mov
inc
mov
push
push
push
bsr
fs
repz
fcmovu
pop
mov
je
cmp
mov
(bad)
std
dec
adc
mov
xor
addr16
xor
pop
push
pop
gs
jge
ret
sub
push
push
add
in
je
outs
jae
pop
mov
add
pop
lock
jne
sar
aam
sbb
xor
sbb
inc
gs
call
mov
fild
test
cmp
imul
js
sbb
add
cmp
imul
sar
jns
enter
adc
mov
sar
nop
arpl
movs
jae
dec
sub
inc
inc
in
js
and
repnz
stos
mov
sbb
lock
retf
and
pop
push
into
jo
inc
or
dec
dec
sub
push
cmp
jmp
sbb
fisubr
(bad)
mov
fistp
dec
js
push
cmp
stos
scas
add
js
push
add
pop
push
ret
(bad)
imul
inc
dec
sbb
cmp
jle
(bad)
int
cmp
jmp
mov
push
xor
xchg
aaa
repz
or
pop
xchg
enter
cmp
aad
out
sub
pushf
push
call
fs
test
loop
in
push
push
inc
nop
dec
imul
sbb
hlt
mov
jl
in
ins
and
fs
xchg
mov
add
sub
adc
push
pop
add
sub
aas
les
dec
js
clc
pop
inc
js
dec
pop
push
jl
iret
mov
mov
gs
ins
adc
lea
xchg
leave
sahf
test
pop
(bad)
pushf
jl
and
push
push
and
xchg
jae
aaa
std
pop
pusha
fs
push
out
loopne
imul
xchg
mov
jo
and
pop
fcomp
(bad)
jae
mov
leave
aas
jae
(bad)
pop
ins
cmp
inc
js
rcl
mov
clc
std
frstor
js
add
push
xor
pop
sbb
test
bound
pop
add
nop
daa
test
adc
and
test
je
and
je
and
pushf
fcmovu
enter
out
jae
loope
cli
push
dec
addr16
push
cld
jns
sbb
popa
mov
les
dec
pop
jo
jae
imul
fdiv
addr16
mov
and
rcr
mov
mov
stc
jne
imul
(bad)
mov
mov
jae
lods
jge
stc
cmc
jecxz
xor
int3
mov
xor
nop
sbb
or
dec
mov
out
ret
or
jne
xor
ins
imul
test
sbb
je
gs
mov
ss
sub
mov
and
clc
jl
ret
push
mov
xchg
cli
cld
sti
jmp
push
adc
(bad)
pop
sbb
jp
test
loope
mov
repnz
nop
dec
rcl
sub
cs
and
cmp
and
mov
adc
add
lock
mov
and
xchg
aas
or
aam
push
and
sub
out
jl
aaa
jo
jp
sbb
dec
dec
cmp
ds
nop
xor
neg
std
addr16
mov
pop
in
das
cld
pusha
jns
addr16
js
nop
inc
cmps
push
jns
or
ret
sub
and
xor
jb
push
sbb
(bad)
sub
call
aad
daa
fwait
outs
jno
dec
int3
pop
bound
push
cmp
cmp
cs
dec
outs
test
push
sub
add
mov
add
pop
data16
dec
dec
jge
pop
push
dec
inc
sar
shl
cmp
sub
leave
sbb
jl
js
lods
ret
leave
data16
clc
mov
into
call
adc
dec
mov
and
popa
add
and
xchg
ja
mul
mov
xor
and
dec
push
pop
ja
ins
arpl
and
pushf
dec
xor
dec
je
dec
adc
ficom
inc
push
jno
push
cmp
push
push
sbb
movs
je
sub
daa
mov
popf
fs
cmp
pop
dec
cmp
and
out
dec
adc
jnp
push
pop
mov
xor
xor
mov
mov
mov
inc
lock
stc
cwde
call
in
inc
and
xchg
dec
je
xor
js
or
dec
nop
push
dec
test
push
nop
js
sub
or
call
jne
out
dec
retw
popa
pop
inc
ret
push
inc
sub
push
inc
aas
nop
test
jb
mov
hlt
fcomp
outs
sub
or
push
xor
sbb
lock
clc
loope
mov
out
fadd
sub
or
mov
cld
icebp
jecxz
cmp
jmp
in
hlt
fs
pop
jmp
dec
cmps
dec
sbb
mov
sub
or
mov
call
add
mov
mov
call
repz
sbb
icebp
test
and
jl
inc
xor
retf
cmp
repnz
ja
js
js
mov
test
rol
fcom
adc
test
and
nop
xor
and
(bad)
ret
add
push
or
mov
sbb
and
sub
cmp
push
pop
add
pop
jbe
dec
dec
pop
push
jns
test
jl
in
js
jnp
outs
outs
push
adc
fbld
pop
loopne
and
and
ds
outs
(bad)
iret
sar
test
mov
xor
and
inc
cwde
pop
je
mov
out
test
push
adc
ret
test
jnp
sub
es
add
and
mov
cmps
popf
js
aam
rcl
lahf
movs
xor
xchg
pushf
stos
int
inc
mov
xor
into
leave
mov
call
gs
cli
pushf
sbb
xchg
jl
pop
jl
and
inc
ds
stos
mov
mov
or
test
sub
repnz
push
test
stos
retf
jg
aam
ror
fmul
cmps
shl
rcl
shl
jo
dec
dec
dec
clc
mov
ret
stc
ins
div
pop
push
push
dec
ins
add
cli
pop
or
in
movs
jge
rol
test
(bad)
pushf
adc
jl
popf
jb
pop
jp
pop
sub
jl
js
loopne
jno
jne
push
leave
int
add
cmps
shl
push
jp
or
add
sub
sbb
and
mov
fsubr
bnd
xchg
cmp
nop
add
into
xchg
in
jmp
adc
pop
sub
add
inc
mov
jne
sub
sub
fsub
cli
fsubr
data16
and
test
jne
test
je
ja
dec
mov
push
push
outs
js
pop
xor
mov
mov
je
pop
dec
cmp
(bad)
jo
dec
je
ins
dec
fldenv
push
pop
pop
and
cmp
jb
pop
les
outs
jno
(bad)
dec
in
add
mov
xor
js
mov
aas
retf
hlt
loop
shr
imul
loopne
sub
jnp
scas
cwde
sub
mov
dec
out
out
out
in
cs
aad
call
dec
xor
jo
jbe
pop
je
das
pop
cmc
aas
(bad)
jge
xor
test
std
(bad)
ja
cmc
mov
or
clc
add
pop
or
lds
cld
les
or
scas
cmp
dec
into
sti
sbb
fistp
dec
xor
jne
fsub
jmp
in
js
sub
repz
stos
popf
fdivr
movs
xor
mov
mov
add
pushf
aad
adc
retf
imul
sbb
movs
pop
sbb
lods
ins
cmc
push
jnp
ja
sub
mov
or
or
jbe
cmc
mov
add
jne
add
adc
mov
in
add
add
jne
or
push
add
mov
pop
sbb
sar
sub
xor
push
sbb
hlt
jo
outs
jo
or
jp
push
mov
cmp
(bad)
pop
out
or
pusha
iret
loop
cmp
mov
std
js
pushf
push
push
dec
sub
cli
out
nop
push
pop
lock
in
pushf
jne
scas
jnp
repnz
je
mov
cmp
test
push
add
jo
and
cli
push
pslld
ds
sbb
jp
add
sub
add
dec
sbb
and
std
jnp
mov
(bad)
test
dec
adc
jge
pop
fs
sbb
add
cwde
or
jne
enter
nop
fsubr
sete
leave
mov
push
sbb
data16
cmp
out
fiadd
mov
ja
in
movs
mov
push
out
xor
mov
sub
mov
jmp
jb
in
mov
lsl
je
push
ja
sbb
pop
sbb
in
and
out
js
fidivr
iret
mov
dec
ret
je
sbb
or
gs
pop
pusha
push
mov
pusha
or
outs
dec
xor
out
cli
popa
pop
das
mov
pusha
stos
into
cmc
adc
enterw
xor
gs
call
fst
cdq
jmp
sbb
xor
cmc
jp
cld
push
push
fcomp
add
jns
loope
ja
out
mov
(bad)
jmp
mov
push
test
data16
dec
cmp
xchg
out
dec
push
jo
fs
pop
js
push
js
lea
jnp
and
fisubr
add
sbb
imul
pop
adc
aam
push
mov
cmp
pop
and
dec
hlt
jbe
addr16
lock
inc
jb
mov
shl
jmp
jg
call
gs
add
loopne
nop
mov
aad
je
add
cmp
add
in
outs
repz
out
hlt
in
push
(bad)
pushf
ins
sbb
aam
ret
or
loope
xor
ins
in
bound
cmp
inc
dec
and
sbb
sub
jecxz
push
js
sbb
jns
lock
sbb
clc
sbb
and
retf
repnz
jbe
push
sub
cs
imul
adc
loopne
and
js
xchg
out
ins
les
mov
xchg
lods
adc
sub
pushf
mov
leave
sub
xchg
fnsetpm(287
mov
ja
iret
xchg
mov
cmc
fldlg2
test
in
bound
cmp
cmp
push
cwde
pop
(bad)
pushf
push
dec
data16
jge
xor
in
imul
pop
aaa
pushf
es
ret
enter
je
std
shl
mov
je
sti
clc
test
outs
out
push
repnz
mov
scas
mov
ret
jnp
mov
jmp
fmul
cmc
(bad)
jnp
hlt
xlat
mov
test
cmp
loop
int
fs
test
ss
push
ror
jbe
ss
mov
outs
pusha
add
sub
xchg
pusha
mov
add
xor
xor
mov
and
push
sub
cwde
call
mov
je
jp
adc
cmp
push
out
mov
int3
pop
loop
and
in
cwde
scas
xchg
js
mov
push
outs
test
cmps
retf
push
cmp
cmp
jae
(bad)
pushf
repnz
cwde
test
xor
js
fmul
cmp
xor
in
clc
fs
mov
les
mov
in
aam
add
nop
push
dec
bnd
not
cmp
push
hlt
nop
adc
adc
icebp
je
or
lods
push
inc
sbb
add
bnd
add
adc
cdq
addr16
call
or
jp
adc
or
dec
repz
add
adc
enter
fdivr
sbb
je
ins
ins
sahf
data16
jo
imul
lock
push
test
das
or
push
dec
je
sub
jns
jmp
popf
sti
aam
sub
or
pop
cmp
or
mov
pop
fdivr
int3
sbb
cli
fdivr
mov
cmp
cmc
fcom
push
out
cmp
test
pop
hlt
push
mov
cli
cs
mov
dec
adc
mov
repnz
sbb
xor
dec
outs
pusha
cmp
stos
lds
sub
pop
mov
and
shl
lods
repz
js
add
jo
and
pusha
jne
adc
dec
mov
jp
mov
js
ret
dec
lahf
jae
fisub
xchg
or
(bad)
fistp
sahf
std
in
out
retf
lea
cld
sbb
inc
js
lock
repz
pop
pop
jo
lods
push
outs
jp
cli
inc
xor
sbb
neg
fst
out
cmp
pushf
push
icebp
xchg
xor
jl
test
inc
push
mul
stc
aam
out
mov
cmp
js
stos
push
in
mov
pushf
inc
cmp
sar
data16
jl
je
and
push
adc
cmp
push
bound
idiv
add
lds
mov
jmp
jb
outs
test
or
test
jl
test
(bad)
mov
push
jl
mov
xchg
xor
push
(bad)
jp
in
iret
sahf
mov
aam
adc
shl
and
xchg
mov
push
cwde
cmp
jmp
xor
push
push
aam
stc
pusha
js
or
cld
mov
out
(bad)
fucomp
call
sti
mov
xchg
ins
arpl
std
xchg
fs
dec
dec
repz
hlt
icebp
cmp
mul
pusha
sbb
jmp
add
icebp
pushf
push
dec
cmp
push
push
js
add
and
aam
push
pop
add
push
out
mov
xor
inc
push
add
je
push
sub
pop
imul
rcr
jp
sub
ja
je
test
jl
sbb
das
test
sub
and
enter
ret
mov
cmc
retf
mov
sbb
adc
test
sbb
mov
int
sbb
xacquire
fdivr
fs
jbe
or
je
fcom
cwde
fs
dec
pop
jmp
xor
repnz
cli
fs
push
push
mul
std
fs
add
lock
js
push
mov
pop
in
mov
cli
fsub
fld
ja
push
retf
js
add
js
sub
jns
or
int3
cmp
xor
js
push
sar
dec
sub
shr
je
js
xchg
sub
mov
aam
xor
mov
shl
fdiv
in
aaa
outs
imul
jnp
or
cmp
jmp
xchg
js
fadd
mov
mov
cmps
push
sub
inc
ja
xor
mov
jne
xor
in
fs
dec
inc
mov
mov
test
sbb
adc
stos
dec
sbb
pop
or
inc
jo
add
pusha
bound
and
stc
fistp
adc
shl
pop
les
jo
arpl
pop
or
fmul
je
add
out
mov
jge
in
shl
dec
xchg
mov
mov
xor
imul
std
and
pop
mov
sbb
mov
or
ja
sbb
call
imul
test
es
in
mov
cld
fidivr
add
js
or
jnp
sbb
push
inc
sub
cmp
or
cmc
cmp
pop
cmp
cmp
jo
call
and
and
sbb
adc
pop
ins
push
cmp
inc
sub
icebp
cwde
jne
push
lods
dec
jne
mov
sbb
pop
addr16
cmp
dec
jp
sbb
int
js
mov
fdiv
add
mov
inc
mov
mov
repnz
popa
push
loopne
fcmovnb
movs
mov
faddp
add
lods
push
inc
je
gs
movs
pop
cmp
add
adc
xor
adc
cli
test
(bad)
cmp
jo
dec
aaa
jmp
(bad)
inc
test
stc
out
je
out
mov
jne
out
add
scas
sub
xor
in
call
sub
pop
dec
repz
push
in
test
hlt
jns
sub
(bad)
cmp
nop
jo
jbe
ja
dec
sbb
test
mov
push
inc
and
icebp
ret
fdiv
les
aam
imul
mov
je
dec
adc
xchg
cmp
loope
sar
bnd
mov
jbe
icebp
ror
pop
pusha
sbb
push
mov
adc
aam
push
jl
sbb
fdivr
scas
fisubr
bnd
movs
mov
ins
js
jno
out
pushf
and
cli
test
adc
add
push
cmp
lea
and
js
cld
sbb
dec
pop
cmp
in
sub
scas
stc
push
std
je
cld
pop
je
push
or
push
hlt
mov
jne
jo
aam
jae
pop
sbb
push
js
sbb
mov
es
imul
xor
gs
cmp
mov
ja
mov
mov
mov
test
and
jae
push
cmp
test
xor
ja
inc
xlat
sahf
dec
cmp
test
cmps
mov
iret
sub
test
int3
inc
push
and
dec
jl
call
mov
movs
sub
ficomp
in
mov
jecxz
pushf
pop
cmp
fstp
in
mov
and
xor
jo
loope
push
cld
pop
cmps
add
mov
sub
(bad)
in
loop
push
pop
mov
mov
(bad)
aam
xor
push
jne
push
cmp
js
xor
and
(bad)
out
xchg
repnz
cli
pop
push
ss
inc
sub
mov
push
es
lock
mov
lock
lods
xchg
sti
fdiv
int
mov
into
and
call
inc
mov
mov
and
push
or
jbe
adc
je
dec
sub
mov
in
je
sbb
pushf
aas
sbb
mov
or
pop
js
cmp
add
out
cmp
cld
dec
cmp
jns
cli
jo
and
gs
call
and
call
or
add
xor
xor
loopne
test
sub
call
sub
mov
mov
popf
lods
jo
cmp
repz
out
aam
in
mov
fnstcw
data16
mov
jl
push
cmp
push
rcl
sbb
ret
add
and
aam
fsubr
sar
mov
lds
es
jns
aaa
and
add
xchg
pop
je
aam
aad
pop
je
mov
add
sbb
(bad)
ins
dec
push
loop
add
fild
cmp
(bad)
cld
pusha
sbb
popf
les
sub
mov
or
repnz
dec
or
mov
jp
bound
sbb
or
fisub
out
je
fwait
test
cmp
clc
int
int3
cld
sub
push
loope
ins
add
sub
xchg
nop
push
sub
sbb
(bad)
ds
mov
lods
jnp
cld
in
rcl
imul
ds
jl
je
jmp
dec
lock
dec
sub
xor
lods
fs
add
(bad)
(bad)
xor
push
loope
inc
jne
inc
pop
in
cld
aam
fdivr
rcr
std
xor
xor
adc
nop
xchg
fs
cmp
out
mov
pop
jl
in
fs
adc
ins
push
jmp
mov
xor
fs
hlt
cli
dec
out
xchg
sub
xor
or
pop
es
adc
push
pop
mov
push
js
and
fimul
cmp
sub
and
enter
jbe
test
hlt
aad
mov
sub
xor
jbe
shl
mov
push
mov
cmp
jge
cld
in
mov
inc
add
cmp
je
aam
ins
dec
add
int3
adc
sti
cmp
popf
lock
icebp
je
(bad)
fs
rol
jbe
loopne
xor
jle
cmp
sub
jmp
out
jl
cli
mov
sbb
es
ds
jp
mov
clc
add
(bad)
jo
push
shr
jnp
ins
jno
jnp
pop
dec
push
and
jne
sbb
adc
mov
loop
push
xlat
mov
cli
fcom
mov
test
rcr
dec
imul
inc
je
jae
mov
dec
inc
jmp
imul
cmp
pop
and
push
cli
mov
enter
or
and
les
cmp
clc
test
mov
cwde
push
into
movs
dec
std
iret
jbe
in
mov
sub
ds
addr16
jp
and
lods
sbb
lods
je
push
data16
sub
jbe
add
hlt
stos
ja
xor
mov
or
and
stc
je
popa
sbb
nop
xchg
mov
cmp
lods
push
mov
sbb
cld
jp
push
add
cmp
sti
rol
dec
mov
ds
jbe
shr
push
add
push
sbb
xlat
jns
xchg
xor
fs
(bad)
repz
test
ja
leave
movs
mov
out
fsub
mov
mov
out
sar
(bad)
std
mov
mov
les
sbb
xor
enter
mov
sub
mov
mov
dec
int3
les
pop
xchg
pushw
out
ins
or
std
push
adc
cmp
sbb
lea
xor
in
jo
loopne
cld
jmp
mov
hlt
out
jbe
or
in
or
pop
or
dec
inc
sbb
jp
inc
mov
daa
ds
or
dec
push
sbb
fs
add
pushf
inc
cmp
inc
js
js
mov
mov
or
clc
inc
das
adc
jo
retf
les
jnp
shl
jno
movs
push
bound
push
mov
(bad)
fisttp
mov
in
mov
mov
clc
rcr
(bad)
mov
ins
ins
pop
add
pusha
jo
retf
push
stc
sbb
loopne
test
dec
js
mov
xor
in
pop
pop
add
icebp
and
aam
dec
js
push
sbb
lock
loope
or
fcom
jmp
sbb
sbb
xor
in
enter
add
push
xor
jae
xor
jbe
xchg
fmul
clc
lods
and
ins
sti
adc
lds
lock
sbb
ror
mov
les
test
iret
mov
repz
je
adc
xor
inc
mov
jg
inc
js
js
sub
int3
aam
mov
loope
mov
push
jmp
stos
adc
mov
xor
ins
adc
rol
xor
or
xchg
jne
mov
add
out
adc
enter
jo
rol
in
pushf
xor
mov
in
je
sbb
pop
adc
xor
jbe
adc
hlt
ins
adc
jge
popf
or
in
cmps
data16
pop
cmc
or
fsubr
pop
lock
rol
int3
cmc
dec
push
stc
je
cmc
stc
mov
aam
iret
mov
stos
lea
sub
fwait
sub
mov
push
jl
sbb
pusha
jne
or
rcr
scas
adc
stos
cmp
out
mov
stos
shr
test
fidiv
dec
icebp
mov
mov
pusha
mov
jp
fild
mov
mov
aad
out
push
out
outs
xchg
sub
xor
shr
sub
sub
(bad)
cmp
xor
jl
or
or
adc
imul
js
pavgw
pop
repnz
fs
pusha
add
clc
sub
loopne
push
(bad)
mov
pop
arpl
add
inc
or
adc
in
push
test
and
aam
cmps
fmul
aad
sub
jo
in
lods
jno
call
loop
stc
daa
pop
lock
shr
call
js
aam
jmp
in
loopne
fisubr
(bad)
test
xor
mov
test
mov
pop
jmp
fst
mov
lock
int3
push
mov
hlt
lock
cmc
retf
cld
or
pushf
imul
jbe
sti
xlat
pop
pop
add
jl
add
or
in
or
xchg
(bad)
std
lea
xor
stc
clc
fidiv
jne
xchg
push
lock
test
add
imul
js
sbb
sub
repnz
mov
cmps
movs
pop
js
sub
fmulp
jmp
pop
xchg
mov
outs
push
jl
pop
adc
pop
clc
pop
add
pop
shr
sbb
mov
loopne
je
fidiv
ins
mov
(bad)
call
mov
(bad)
and
pop
pop
in
les
add
sbb
dec
pop
dec
dec
sar
dec
ret
movs
push
out
leave
xchg
pop
lock
dec
loopne
sub
mov
pop
push
clc
cmps
jne
repz
ficomp
pop
xchg
xor
mov
je
or
ins
or
dec
jo
jmp
icebp
xor
jg
add
mov
mov
dec
mov
jp
sub
cli
xor
popa
(bad)
repnz
push
sub
sti
dec
mov
push
pop
lds
jecxz
xchg
pop
and
or
add
push
retf
jl
ret
and
jg
inc
xor
push
jecxz
push
hlt
leave
in
jae
sbb
jnp
xor
addr16
and
cmp
pop
sub
addr16
jp
dec
xor
test
or
lods
jmp
hlt
pushf
loopne
aas
int3
mov
jmp
movs
pop
in
je
add
push
sub
aam
ds
sbb
imul
aam
jne
xor
or
mov
and
lods
jne
pushf
inc
add
sahf
hlt
gs
add
sahf
mov
jns
jo
jle
add
xchg
jae
mov
js
sbb
mov
je
mov
dec
jl
mov
xor
in
(bad)
adc
adc
push
jnp
xchg
js
push
inc
sti
in
les
fidiv
push
icebp
(bad)
hlt
gs
and
xor
cmp
pop
dec
or
repnz
dec
cmp
add
popa
dec
push
mul
push
dec
int3
fistp
xor
clc
rcr
out
inc
dec
ret
mov
mov
jae
cmp
jnp
fs
nop
pop
push
sbb
in
push
dec
lock
inc
ins
pop
dec
push
adc
jae
xor
sahf
pop
cmc
icebp
mov
imul
xchg
jns
jmp
jmp
mov
in
jbe
add
je
ret
jae
adc
int3
jne
sar
cmp
(bad)
push
xor
in
or
js
icebp
loopne
inc
xor
loope
loopne
jns
cmc
push
call
in
mov
int3
loop
pop
shr
xchg
sub
aad
mov
cli
pushf
aaa
out
cli
int3
xor
out
jo
fld
jmp
inc
xor
jne
ds
mov
sub
movs
clc
mov
std
jl
mov
js
std
inc
fdiv
test
dec
rcl
mov
outs
push
dec
adc
pop
cmp
test
lock
pusha
lock
dec
mov
pop
jae
in
push
pusha
lods
sbb
in
popf
loope
enter
std
and
fist
pop
jo
push
cmc
test
push
lock
pop
adc
dec
imul
pushf
or
int
add
iret
icebp
cmp
call
call
loope
adc
mov
mov
push
test
(bad)
or
push
dec
jno
mov
lods
movs
repnz
lahf
shl
jp
(bad)
scas
mov
add
arpl
inc
fild
fidiv
and
mov
jne
xor
fimul
or
adc
gs
inc
pop
jl
jmp
loop
xor
pop
(bad)
movs
data16
jmp
int3
and
fdivr
sub
data16
add
inc
or
in
es
xor
aaa
ss
xor
aas
dec
je
pop
popa
pop
cmp
(bad)
xor
dec
push
idiv
jmp
fdivr
sti
jmp
and
xor
je
mov
and
adc
add
xor
ja
add
xor
idiv
mov
mov
pop
adc
test
jl
imul
mov
idiv
je
pushf
jne
xor
xchg
dec
cs
fadd
in
js
fadd
xor
jne
push
jp
push
cmp
les
cmp
dec
and
cmc
push
pop
scas
or
in
mov
loope
pop
loop
sub
inc
fstp
(bad)
lods
pop
dec
inc
or
push
and
xor
outs
dec
aas
or
cmp
mov
je
xor
push
and
sub
jno
ins
sub
push
sub
std
pusha
std
fisttp
add
(bad)
mov
and
mov
add
cmp
jb
mov
mov
pop
jecxz
push
add
mov
dec
jnp
mov
xchg
in
jl
mov
mov
push
outs
dec
inc
fnsave
inc
rcl
nop
movs
les
les
push
rcr
imul
ja
rcr
push
das
cld
jl
cmp
int3
aam
dec
aam
xor
add
and
dec
xor
push
mov
mov
(bad)
stos
mov
mov
adc
mov
je
cmps
jle
aad
mov
in
in
sbb
fdivr
loopne
pop
xor
dec
sbb
jo
or
addr16
cmp
push
inc
add
sub
cmp
inc
idiv
fistp
je
(bad)
in
mov
mov
test
adc
pop
enter
pushf
add
fs
adc
ins
cmc
test
pop
jge
jl
pop
call
jl
jl
and
jns
jnp
dec
lock
mov
aam
leave
xchg
xor
cwde
jo
xchg
ins
int3
jmp
xor
je
ds
add
test
int3
pop
pop
adc
jo
(bad)
fstp
stos
je
sahf
pop
sub
push
repz
ja
loop
xor
js
mov
inc
inc
repz
ins
fcomip
jp
fdiv
dec
xor
jne
std
nop
gs
adc
ins
imul
sub
xor
xor
aam
xor
in
xlat
cdq
aam
mov
out
repnz
xor
jl
repz
pop
loopne
push
add
push
or
js
in
sub
lock
outs
pusha
dec
jno
rcr
push
fsubr
xchg
xor
int
int
test
xchg
fmul
aad
scas
test
push
rcr
movs
icebp
mov
in
push
push
loopne
jns
aad
jo
mov
aam
mov
call
cmps
jp
fcomp
xchg
mov
je
loop
test
lods
in
test
mov
ja
js
aad
stos
ins
lds
and
inc
jne
in
stos
test
sti
fdivr
xor
or
hlt
push
js
in
jge
pop
test
call
(bad)
mov
popa
cmp
or
in
dec
adc
js
sbb
retf
adc
out
mov
xchg
lods
jl
xchg
or
in
cwde
jne
cmp
nop
test
jl
(bad)
mov
adc
adc
enter
iret
xchg
pop
mov
xchg
hlt
push
shr
mov
fisub
push
movs
jle
mov
mov
dec
jecxz
xor
movs
sbb
loop
lahf
adc
sahf
pop
sbb
sbb
hlt
mov
sar
fdivr
out
jg
xor
cli
xor
lods
sub
in
mov
or
(bad)
mov
(bad)
sbb
xor
rol
sbb
fs
shl
not
mov
push
retf
pushf
shr
mov
mov
xchg
pop
jl
pop
cmp
test
push
repnz
add
or
cmp
(bad)
sahf
fsub
mov
rol
data16
mov
test
inc
and
test
jl
adc
(bad)
mov
xchg
stos
or
out
jo
ins
(bad)
sbb
cmp
push
shr
fcomp
pop
ficomp
mov
xor
mov
(bad)
nop
ins
fbstp
cwde
imul
and
jmp
jne
stos
jle
js
mov
ins
sbb
je
cmp
ins
jo
dec
repnz
je
jno
fs
int
in
shl
mov
enter
rcl
ja
or
int3
mov
out
mov
push
sar
aam
jne
sar
xchg
mov
lods
lods
sub
push
js
dec
mov
xor
jl
lds
mov
xchg
cld
into
xchg
jmp
ins
aam
cwde
ins
movs
ins
aad
pop
fdiv
fstp
cmp
cdq
adc
fimul
lock
adc
enter
mov
je
mov
pop
in
cli
pusha
jmp
es
add
mov
dec
in
mov
rol
xor
(bad)
je
int3
pop
js
call
pop
sar
in
fsub
popa
xchg
lods
jmp
ja
cwde
adc
xor
stc
dec
(bad)
int3
js
loope
cmp
xor
mov
jnp
les
hlt
pop
dec
test
push
mov
iret
cmp
js
mov
cmps
test
mov
pop
mov
gs
(bad)
xchg
dec
rcr
fistp
sub
int3
jne
xchg
mov
cs
je
dec
jl
out
sub
test
stos
or
lock
fs
mov
fs
stos
ds
out
xor
adc
push
pop
cli
push
in
xor
(bad)
xor
sub
xor
in
(bad)
and
jl
jo
push
mov
sar
adc
in
pop
jmp
sbb
ins
test
jne
or
mov
lock
lahf
mov
dec
jbe
sbb
je
adc
pop
push
lds
pop
(bad)
lea
jmp
fld
(bad)
pop
mov
fcomp
and
lods
fidivr
xlat
nop
je
xchg
sbb
mov
loop
pop
pop
jmp
jne
js
stos
cld
call
fs
mov
hlt
mov
dec
push
jmp
je
repz
cmp
gs
and
ss
je
jecxz
cmp
cmc
fsubr
jb
lods
enter
js
or
fadd
jae
jmp
js
es
sub
je
cwde
push
popf
mov
xchg
repz
(bad)
popf
jp
mov
cli
in
bound
push
aad
mov
fs
mov
jl
les
in
jl
mov
je
jne
sbb
scas
dec
aad
sub
mov
mov
jl
je
fist
xor
stos
adc
in
mov
sub
ja
test
imul
add
mov
out
push
mov
jnp
data16
mov
push
stc
fs
ins
loopne
mov
add
imul
pop
enter
in
loopne
int
sub
or
repnz
push
fcomp
push
jo
cmc
movs
jns
pop
mov
leave
cmc
xor
xchg
jbe
mov
fnsave
int3
call
cmp
mov
repnz
nop
les
je
mov
ins
(bad)
pop
jl
xchg
clc
data16
push
(bad)
xchg
sub
cmp
fst
mov
jne
xchg
(bad)
xchg
xor
js
loope
js
jmp
push
test
test
out
gs
loop
cld
call
test
js
ins
stos
and
dec
loop
xor
int
cli
adc
fcomp
mov
xchg
fdiv
jno
pushf
es
xlat
mov
add
sbb
sbb
push
cli
js
es
mov
push
jns
test
jp
inc
xor
lds
shl
inc
cmp
jo
jl
pop
cmc
out
pop
ficomp
xchg
mov
pop
pop
mov
xchg
lea
and
(bad)
jl
jecxz
call
out
mov
call
xor
sub
in
je
dec
js
xor
je
mov
mov
push
mov
mov
out
enter
int3
int3
dec
push
aaa
adc
jo
int3
jns
dec
cmp
inc
shl
test
in
xlat
sbb
cmp
pop
dec
sub
lods
inc
je
dec
pop
shr
test
xchg
push
mov
sahf
(bad)
int3
mov
xor
xor
js
mov
movs
sub
lock
jl
lea
test
test
mov
pusha
fmul
jmp
fist
jecxz
jmp
fnsave
fdivr
cwde
stos
and
jl
loopne
pop
dec
loop
ins
in
and
jnp
jmp
pop
and
jmp
mov
lds
mov
pop
dec
jl
ins
add
cli
or
loopne
or
mov
fbld
aam
idiv
out
mov
xor
shl
pop
fs
pop
inc
cmp
xchg
xlat
int3
sbb
popf
scas
mov
fs
out
ins
cmps
fsubr
sub
movs
mov
pushf
and
mov
cmc
xlat
mov
jge
(bad)
xchg
jl
fstp
jmp
fsub
xchg
test
xchg
cmp
loope
xchg
jne
sub
outs
jmp
cmc
jl
or
cmps
pop
jl
outs
(bad)
xchg
ins
jo
scas
ret
mov
cmp
pop
push
mov
aad
mul
dec
(bad)
fiadd
jne
sub
sub
mov
jl
add
add
push
pop
push
hlt
fs
js
pop
dec
add
movs
mov
mov
add
mov
mov
inc
ss
ins
aam
push
aas
adc
inc
pop
pop
shl
push
cld
push
xchg
in
adc
push
js
fimul
(bad)
cmc
std
out
sti
pop
in
pop
(bad)
loopne
dec
loop
mov
jecxz
in
je
in
xor
pusha
jmp
js
inc
ins
push
fdivr
inc
frstor
pushf
cmp
push
test
mov
nop
mov
repnz
jmp
gs
cmp
out
mov
popa
dec
push
inc
sub
ret
retf
mov
and
pop
push
out
int3
movs
push
dec
or
cmp
rol
call
dec
rol
sbb
push
pop
into
fsubr
cwde
mov
ins
mov
hlt
mov
arpl
sahf
lods
std
jbe
movhps
(bad)
mov
imul
dec
lea
(bad)
jp
mov
aad
nop
jmp
test
jmp
pop
xchg
jne
fadd
cmp
in
lds
loop
inc
loopne
jne
mov
jl
mov
mov
pop
je
sbb
out
rcl
js
push
ret
iret
xchg
fsub
fs
fdivr
js
clc
xor
mov
rcr
jmp
dec
sub
jnp
js
add
out
xchg
cmovl
and
jb
mov
retf
nop
mov
mov
data16
gs
jo
ds
movs
push
ror
xchg
ficomp
pop
fdiv
test
mov
mov
dec
(bad)
mov
nop
ins
loope
(bad)
loopne
and
mov
jo
movs
xor
ins
inc
jecxz
cmp
mov
xlat
mov
loop
mov
or
lock
fdiv
sar
jecxz
jbe
mov
in
hlt
loop
test
add
fs
ret
mov
mov
pushf
data16
(bad)
push
jmp
ror
test
adc
or
popf
cmp
dec
js
adc
sbb
jne
xchg
jno
pop
jl
movs
ins
pushf
retf
mov
nop
xor
test
cmp
fnclex
or
gs
inc
dec
ins
aam
inc
mov
ss
mov
jo
fnstsw
jl
loopne
cmc
mov
jecxz
not
sahf
inc
test
pushf
pop
mov
cmp
mov
les
xchg
dec
mov
cwde
mov
mov
mov
lock
ins
retf
jae
shr
lock
test
adc
shl
stos
fs
inc
add
lahf
push
mov
scas
jo
ja
sbb
mov
sbb
cmp
jne
xchg
ret
iret
pushf
int
imul
js
mov
and
out
data16
ss
rol
(bad)
mov
js
mov
inc
fmul
stos
js
aad
dec
cwde
fcmovu
xchg
jo
test
popf
inc
fisub
fsub
and
in
movs
ret
test
adc
dec
int
pop
cli
fcmovnb
(bad)
jae
push
sti
push
nop
jmp
jns
mul
mov
(bad)
mov
fnsetpm(287
mov
jecxz
nop
sbb
std
mov
xchg
adc
das
out
pop
daa
nop
dec
ja
mov
pop
je
pop
je
jg
xor
outs
ins
ins
xchg
dec
in
jae
mov
pushf
sbb
int3
aam
into
xchg
xlat
xchg
fadd
iret
mov
xor
sub
js
cmp
std
add
fst
int3
dec
je
jmp
mov
pop
dec
ror
aam
pop
inc
cmp
test
and
imul
add
ficomp
lahf
sar
mov
call
cmps
mov
je
in
mov
movs
ins
bound
ins
jp
inc
ja
push
push
inc
jbe
retf
pop
sar
ret
sbb
jl
add
in
mov
mov
ins
mov
cmc
ja
test
js
mov
push
pop
scas
jns
jle
pop
jp
pop
int3
xor
xor
cmc
push
ret
(bad)
movs
dec
leave
jne
cmp
cmc
push
repnz
jo
js
xor
je
fistp
mov
jne
xchg
xchg
into
jbe
aad
bound
dec
(bad)
cwde
je
cdq
call
frstor
mov
sbb
sbb
retf
lods
mov
ins
cmps
jne
mov
shr
imul
sbb
rcl
and
mov
jl
sub
test
inc
rol
in
inc
ins
sbb
pop
daa
nop
aam
cmps
cmp
mov
adc
je
fld
add
fild
push
mov
loope
mov
mov
movs
ror
xor
mov
mov
pop
inc
xor
into
cld
jne
sub
je
jo
pop
adc
hlt
js
into
(bad)
cli
mov
popf
sbb
mov
mov
pop
sub
xor
jo
into
jne
and
test
retf
pushf
add
and
stc
fwait
adc
ret
jbe
jne
xchg
add
fs
inc
jns
out
std
call
mov
mov
(bad)
in
leave
je
mov
add
cmp
jl
les
enter
rcr
enter
inc
mov
and
mov
(bad)
xor
jne
leave
or
dec
js
mov
test
js
into
mov
mov
adc
fidiv
cmp
retf
je
fwait
clc
cmp
jbe
call
push
je
outs
call
icebp
mov
or
mov
in
pop
mov
shl
push
popa
clc
mov
stos
sti
cmp
sahf
xor
mov
retf
mov
jbe
push
sbb
push
repnz
push
test
mov
fwait
push
add
je
jb
jno
inc
jo
jns
xor
or
mov
test
test
push
mov
mov
sub
cmp
js
js
ror
loope
adc
xchg
adc
mov
in
mov
lods
sar
fdivr
fidiv
fmul
and
push
aam
and
repz
mov
sbb
jle
aaa
ja
shr
movs
or
xor
js
rol
pop
jo
lods
mov
rcl
sbb
shl
ror
enter
or
mov
lods
cmc
xor
add
mov
bound
ins
ja
cmc
lds
js
ss
pop
js
xchg
je
movs
mov
cli
cli
fcmovnb
pushf
push
scas
cwde
shl
std
inc
fldcw
or
cld
mov
mov
cwde
mov
or
in
mov
xor
jns
sahf
mov
or
xchg
pop
cs
shr
out
inc
cwde
stos
jno
je
jne
pop
je
xor
and
jge
je
jo
pop
arpl
cmp
js
lea
and
jne
mov
test
mov
(bad)
leave
mov
pop
fs
cdq
mov
sub
call
pop
enter
cmp
(bad)
out
into
push
xchg
mov
cli
js
cmps
std
mov
lahf
mov
and
ins
sub
xlat
test
je
mov
nop
xor
fnstcw
push
inc
mov
sub
adc
enter
cmp
adc
(bad)
xchg
push
lahf
fdivr
inc
mov
scas
in
outs
jo
push
cmps
jle
sub
jo
retf
push
std
call
pop
js
add
nop
push
xor
(bad)
pop
sbb
mov
push
sbb
dec
jo
xchg
test
cmp
call
test
popf
dec
(bad)
or
rcr
shl
add
call
in
add
cmps
in
hlt
jp
mov
mov
(bad)
sbb
jae
push
jle
sub
lahf
(bad)
int3
xchg
mov
mov
pusha
pop
pop
push
jo
push
xor
sbb
sbb
jnp
inc
je
lock
imul
repz
xchg
dec
popf
mov
cmc
add
pop
jo
clc
push
mov
jo
mov
call
aaa
nop
cmp
push
enter
or
mov
outs
int3
test
mov
lds
jmp
sbb
mov
or
pushf
sub
cwde
adc
clc
sub
inc
enter
jmp
outs
outs
add
ja
loop
gs
cmc
gs
movs
inc
rol
mov
jl
pop
xchg
stc
sbb
shr
pop
stos
lods
jl
cmps
pop
pop
scas
loope
or
aam
inc
mov
cmp
scas
fadd
mov
jae
add
pop
xor
data16
mov
cmps
test
inc
shr
xor
lahf
aaa
enter
dec
test
jnp
jl
mov
jo
pop
ja
push
sub
js
loop
sub
pushf
retf
push
test
or
push
ins
lock
ja
push
push
outs
je
fimul
imul
xchg
sub
js
jbe
test
dec
lods
test
dec
nop
adc
jno
jbe
scas
mov
into
xchg
pop
je
enter
ret
repz
icebp
fdiv
fisub
sbb
ins
data16
js
test
xchg
pusha
scas
ja
test
stos
aam
lahf
xchg
lods
fistp
push
aam
call
shl
xor
popf
les
(bad)
jl
aam
jle
test
shr
xchg
js
fsub
das
std
call
jae
fs
jns
jl
add
mov
xor
cmps
lods
cs
cld
lods
in
mov
into
test
ds
jne
loopne
jnp
push
xor
mov
dec
dec
pusha
jno
sub
xor
les
sbb
adc
sub
je
push
dec
push
fmul
and
cmp
add
pop
cmps
cdq
lods
mov
xor
loope
js
or
cmp
call
push
mov
pop
mov
cmps
in
hlt
cmps
xchg
test
call
inc
mov
inc
push
nop
cmp
fs
ror
cmp
outs
add
out
loope
ret
ret
cmps
pushf
sub
mov
je
leave
mov
ds
(bad)
lods
jbe
repz
mov
leave
xchg
out
push
jl
cmp
pop
cmp
add
jns
(bad)
mov
mov
add
ds
jae
push
dec
push
lock
cmp
sub
xchg
jl
add
into
add
push
dec
cs
jno
push
test
dec
ret
adc
push
pop
adc
div
sbb
mov
mov
or
pop
lods
jbe
mov
mov
jbe
movs
xchg
ins
add
inc
imul
pop
dec
cmp
xor
(bad)
js
mov
adc
call
nop
cmc
bound
pop
push
jb
xlat
int
push
jnp
test
mov
mov
(bad)
lods
fs
push
mov
lea
lods
call
sub
xor
mov
push
into
push
xor
rcr
push
mov
jmp
rcr
(bad)
je
shl
adc
outs
adc
pushf
mov
in
cmp
popf
lea
lods
xchg
cld
pop
mov
and
sbb
mov
(bad)
mov
pop
rol
scas
jns
push
adc
push
mov
sbb
and
push
idiv
stos
je
xchg
stos
xor
sbb
jge
lds
add
and
lods
fdiv
(bad)
cld
push
mov
pop
lods
cli
loopne
xor
dec
scas
in
and
outs
adc
dec
jp
adc
jne
push
cmps
mov
push
or
add
adc
dec
out
sbb
or
movs
jns
mov
nop
push
xor
outs
cmp
jo
xchg
movs
lea
clc
mov
xchg
mov
jns
mov
add
and
in
sub
mov
adc
call
outs
in
dec
lds
idiv
mov
cmp
es
push
add
mov
lock
popf
mov
xchg
cld
push
mov
dec
cmps
mov
dec
jbe
shr
add
dec
in
jl
pop
jo
jbe
cdq
in
lds
pusha
and
fst
sub
add
jmp
mov
movs
stos
loope
movs
data16
lods
mov
cld
dec
gs
mov
popf
mov
movs
mov
add
jle
mov
push
xchg
or
mov
mov
movs
jno
adc
jo
je
push
jo
pop
aaa
push
imul
jb
imul
add
in
mov
lahf
test
jne
mov
clc
int3
scas
jmp
test
sub
rcl
(bad)
(bad)
mov
mov
mov
jbe
and
and
fld
cs
pop
lock
jbe
cmp
stos
xchg
sbb
sbb
neg
out
test
xor
cwde
mov
add
xor
clc
pushf
mov
sub
popa
pop
xchg
cwde
js
mov
xor
push
shr
mov
dec
call
jne
ins
call
in
scas
call
xor
pop
or
test
je
stos
push
jl
pop
loopne
mov
call
sahf
lock
push
cmp
and
or
pop
loop
test
cwde
(bad)
into
xchg
dec
test
pop
hlt
fisubr
mov
pop
and
dec
cmp
mov
mov
stos
jmp
clc
jns
nop
jle
push
mov
jl
js
ins
xchg
(bad)
js
mov
stos
jb
xor
clc
hlt
das
rcl
lock
repnz
ins
or
adc
int3
cdq
(bad)
sti
fld1
mov
lods
xchg
sub
bound
xchg
jp
xchg
xor
xchg
test
adc
je
int3
ins
in
aam
clc
in
in
mov
cmc
out
fs
dec
sbb
jae
cmp
pop
jmp
or
icebp
push
movs
nop
inc
test
cdq
test
test
ins
test
push
stos
add
mov
mov
js
pop
rcr
adc
scas
xchg
in
inc
retf
cmp
jmp
inc
js
imul
ja
movs
sub
js
cwde
les
adc
push
jbe
movs
xchg
mov
clc
cmp
(bad)
movs
js
nop
push
adc
sbb
pusha
dec
jl
xchg
ins
mov
mov
mov
xchg
fld
sub
or
das
js
sbb
pop
add
es
adc
je
stos
shl
pushf
stos
pop
clc
scas
fistp
cmps
out
out
mov
mov
sub
in
jl
test
add
inc
fdivr
xor
aas
mov
mov
mul
or
cld
fdivr
pop
mov
nop
sub
stos
pop
sub
loopne
or
xchg
xor
push
push
fsubr
mov
or
mov
cld
loop
repz
lods
cmp
mov
jmp
iret
mov
dec
sub
and
xchg
movs
jmp
add
mov
xchg
xchg
js
sbb
mov
pop
cwde
mov
adc
movs
(bad)
rol
pop
jne
mov
dec
je
cmp
ja
push
push
(bad)
mov
cld
mov
xor
cmp
mov
mov
gs
inc
dec
adc
lock
mov
clc
hlt
test
nop
and
ror
(bad)
shr
jmp
es
push
jae
mov
xchg
leave
mov
dec
loop
and
clc
mov
loopne
retf
push
add
sbb
clc
stos
test
cmc
sbb
fmul
mov
xchg
mov
or
scas
xor
fdivr
and
lods
je
pop
sbb
sub
pop
test
cmc
stos
fucomp
mov
push
shl
(bad)
mov
ins
das
sbb
test
jle
ja
mov
sahf
pop
js
push
mov
stc
inc
shl
cmp
es
jo
and
add
test
adc
push
or
adc
mov
jo
lock
je
dec
dec
mov
cmps
movs
aam
js
jnp
sbb
jbe
imul
adc
push
mov
cmc
int3
mov
xchg
lea
mov
hlt
push
xchg
xchg
bound
movs
push
push
test
xchg
jo
pop
in
lock
push
pop
and
pop
sbb
jmp
test
inc
sahf
mov
dec
shl
hlt
mov
mov
mov
sbb
mov
add
ins
clc
sub
test
js
pusha
fsub
mov
clc
sub
popf
mov
shr
mov
in
cld
inc
aad
xor
pop
or
lahf
dec
or
in
mov
cmps
jmp
ins
adc
mov
test
test
adc
mov
and
test
cmp
xor
pop
dec
mov
lods
inc
adc
js
lods
neg
mov
cmp
out
int3
sbb
loopne
aam
jp
int3
lods
stc
aam
call
mov
mov
fst
xor
jne
mov
nop
and
cwde
push
fcomp
cmp
mov
lahf
jne
mov
les
js
xchg
mov
data16
or
xchg
mov
adc
xor
dec
je
cmp
jo
push
dec
or
aad
cwde
call
call
aam
xor
add
push
call
pop
ins
int
ds
push
enter
mov
mov
aam
xor
xchg
daa
rol
mov
js
xor
movs
int3
sbb
in
push
into
pusha
sbb
mov
cwde
dec
mov
sahf
fcomp
popf
fstp
jns
lds
jo
call
cdq
push
mov
xchg
mov
test
ins
aad
cmp
loop
bnd
loopne
js
lods
push
lods
xchg
(bad)
fcom
push
retf
pop
dec
in
xor
int3
xor
mov
cmps
cmp
aam
xchg
je
std
imul
les
retf
movs
xor
mov
xchg
in
xchg
loope
mov
jnp
shl
mov
dec
rcl
mov
mov
mov
ins
cwde
add
adc
push
fwait
mov
js
dec
dec
pusha
jb
popf
mov
sbb
push
inc
mov
scas
inc
clc
je
xchg
sbb
je
sub
test
inc
sbb
dec
cld
xchg
sub
bound
add
fild
and
or
in
je
mov
and
xchg
lock
int3
(bad)
cmpxchg
jo
movs
ret
cmp
ret
ins
push
or
sar
fidivr
data16
mov
js
fld
cmps
push
and
dec
jmp
cmp
mov
sbb
loopne
call
sub
adc
sahf
(bad)
push
xchg
cli
shr
adc
ss
push
lods
pushf
in
mov
mov
rol
test
test
mov
inc
pop
inc
adc
adc
jmp
das
je
or
xchg
inc
sbb
mov
lods
xchg
push
add
xchg
sub
jl
pop
in
loopne
add
mov
aam
stos
xchg
mov
movs
fisub
lds
mov
mov
jbe
into
test
cmp
jo
dec
int3
stos
add
xor
jmp
add
ret
push
mov
add
mov
(bad)
pop
stos
(bad)
jmp
adc
jne
mov
in
and
mov
ins
push
enter
scas
ins
test
mov
push
sub
mov
or
je
ret
fdiv
push
je
add
mov
(bad)
sub
test
mov
push
jl
clc
pop
test
mov
sbb
mov
jmp
ins
push
adc
push
test
sub
add
mov
xchg
mov
retf
js
pop
aam
sub
fdiv
xchg
sar
mov
fist
xchg
sbb
and
ret
lahf
xor
bound
je
out
mov
in
jns
pushf
mov
mov
jl
cwde
clc
xor
fs
inc
js
xchg
movs
fs
cmc
scas
add
cwde
mov
xor
pop
out
adc
jns
inc
cmp
dec
inc
pushf
cmp
mov
xchg
push
cmp
std
aad
test
sbb
je
pop
inc
fdiv
pop
call
mov
jg
cld
xlat
mov
xchg
retf
push
mov
cmps
stos
fcomp
and
push
mov
dec
lods
push
jo
mov
add
fwait
jo
call
xor
call
xor
and
stos
pop
jo
pushf
jmp
fild
cmc
push
ja
mov
push
dec
call
cdq
cmp
lods
add
(bad)
aam
mov
int3
mov
je
and
and
and
out
mov
adc
stos
pop
loop
sub
ins
jns
in
push
adc
jmp
fadd
pop
mov
test
jl
imul
into
cmps
jbe
stos
in
int
int3
jo
in
mov
jl
test
mov
sbb
pusha
cld
pop
out
retf
loope
jo
shl
call
and
js
mov
xchg
push
mov
push
test
mov
xchg
push
sbb
or
sub
fnsave
rcl
enter
inc
aam
fnsave
js
lock
pop
push
push
neg
test
sbb
jne
ins
xor
lods
add
test
adc
mov
sub
mov
je
test
adc
sbb
cmps
jmp
loope
js
mov
mov
stos
xchg
rcl
push
and
ins
jne
mov
aad
pusha
(bad)
loop
mov
imul
lds
loop
js
call
or
fs
in
and
cmps
jmp
(bad)
cli
pop
mov
mov
xor
mov
push
stos
int
cmps
push
ins
cmc
mov
cmp
pop
arpl
call
cld
(bad)
je
adc
imul
je
hlt
sub
fiadd
nop
push
add
push
mov
lock
inc
dec
je
mov
xchg
mov
cwde
jb
stos
mov
lods
sub
cmps
xlat
cmp
mov
pop
js
mov
cli
fisubr
or
xchg
sbb
in
popf
sahf
jne
sahf
out
xor
test
lock
mov
dec
je
adc
jmp
and
sbb
and
xor
ins
jg
and
sar
push
lock
jo
les
dec
cli
inc
pushf
mov
in
js
(bad)
shl
pop
out
pop
fsubr
ss
in
pop
cmps
and
fsubr
adc
add
test
nop
in
je
fs
stos
test
shr
int3
shl
xchg
dec
jo
or
push
(bad)
mov
pusha
and
js
out
int
xor
ficom
pop
mov
fs
cmp
mov
je
cld
call
hlt
or
lock
xor
sbb
les
mov
push
les
jnp
xchg
ins
loope
std
dec
or
add
jo
(bad)
adc
cmc
das
repz
lods
pushf
gs
xchg
ins
mov
bound
scas
xchg
cli
je
test
retf
test
call
cli
xchg
xor
xor
movs
std
rcr
je
ficom
push
js
iret
cmp
jo
test
mov
iret
sub
pop
(bad)
scas
pusha
mov
je
pop
ins
enter
mov
pusha
fdiv
call
(bad)
mov
mov
test
cmc
jl
push
and
mov
fucomp
sbb
sub
nop
sbb
je
sub
push
xor
sbb
jo
daa
push
mov
les
inc
jl
xor
test
and
push
js
int
test
sub
test
cmps
loop
sbb
jl
data16
js
scas
shl
dec
fidiv
in
mov
xchg
sub
pop
clc
push
mov
jno
sbb
mov
mov
jo
lahf
movs
lds
lods
sbb
sbb
or
hlt
aas
imul
cmp
jne
cld
dec
lea
jecxz
iret
adc
(bad)
pusha
or
mov
js
push
je
mov
sub
nop
retf
das
test
leave
test
int3
sbb
cmc
lods
jne
xor
mov
xor
cmp
inc
jo
mov
push
cmps
fsub
mov
test
jno
cmp
(bad)
sbb
ret
add
mov
mov
ret
lahf
in
aad
in
or
mov
je
lahf
movs
test
xchg
cwde
test
cli
jmp
cmp
push
xchg
dec
retf
mov
dec
xchg
(bad)
inc
jmp
fs
xchg
mov
lock
jmp
mov
push
ins
imul
mov
cwde
nop
test
jmp
mov
stos
mov
pop
test
aam
test
jmp
into
adc
xlat
lods
fs
push
js
jl
sbb
ins
(bad)
xlat
scas
int3
mov
stc
loopne
outs
lods
shl
xchg
retf
loopne
fwait
push
je
js
out
inc
retf
lods
(bad)
out
cmp
mov
jle
sub
jnp
lods
fdiv
lahf
aaa
ins
pop
test
ins
inc
xor
imul
in
lea
sub
clc
xchg
mov
mov
mov
in
mov
lahf
jp
scas
sti
hlt
rcr
mov
ror
xor
int3
mov
ins
js
push
enter
nop
pop
(bad)
lods
push
pushf
mov
ins
call
fs
movs
xor
fs
(bad)
push
rcr
ins
hlt
shl
js
int3
scas
mov
mov
cmp
push
aam
fmul
mov
mov
sbb
push
int3
out
jne
mov
mov
cwde
test
clc
nop
call
les
shr
xchg
je
in
int
mov
and
fs
iret
mov
pop
loop
lds
or
pop
ficomp
push
xor
jmp
nop
inc
loopne
das
pop
sub
sub
sbb
loop
out
mov
cld
or
sbb
jge
adc
lock
in
jne
movs
jl
mov
test
les
or
adc
mov
aam
cs
call
outs
jo
clc
mov
cmp
call
aam
movs
outs
(bad)
movs
(bad)
icebp
les
into
mov
je
int3
gs
mov
in
cmp
push
pusha
fldenv
sbb
lds
mov
pop
sub
push
loop
in
mov
mov
pop
sbb
fnsave
push
iret
pop
inc
ret
mov
mov
dec
fistp
addr16
pop
pop
xor
pop
cmps
dec
and
mov
(bad)
int3
or
mov
or
cmps
int
lss
es
mov
xchg
mov
je
mov
ja
leave
cmp
js
aad
shr
pop
pop
out
cmp
mov
dec
je
stos
jmp
movs
lock
test
fisttp
sub
xor
test
lods
je
mov
ss
rcr
iret
cld
and
lea
adc
and
fldcw
js
test
and
or
ja
mov
adc
add
jo
dec
mov
inc
dec
jp
sbb
sti
hlt
shl
or
mov
in
pusha
mov
scas
xchg
jns
fcom
retf
leave
adc
dec
leave
pop
xor
adc
loop
arpl
(bad)
call
hlt
mov
jne
dec
retf
jl
int
jo
lds
enter
xchg
dec
fidiv
fnstsw
mov
sbb
and
cld
add
sbb
outs
fild
ror
push
shr
out
mov
and
push
cmp
or
adc
jmp
cmps
aam
mov
pop
push
movs
mov
add
pop
ret
int
pop
push
movs
add
scas
pop
shl
xor
sbb
jl
dec
aad
push
jl
pop
xchg
push
xchg
pop
ret
mov
hlt
pop
loope
mov
jecxz
jl
fidiv
lods
xchg
test
iret
mov
or
fwait
cwde
push
jae
icebp
pushf
call
adc
inc
mov
sub
and
jbe
movs
test
dec
jmp
jmp
cld
into
jne
cwde
push
mov
jmp
sub
mov
pusha
add
mov
loop
xor
shr
es
jl
rcl
cmp
sub
mov
adc
xor
cmp
dec
pop
lock
test
clc
enter
push
dec
sahf
push
cdq
ins
lods
mov
sub
fidivr
mov
rcr
stos
xchg
test
stc
xchg
test
sbb
clc
int3
mov
push
imul
movs
jbe
adc
xchg
pop
jmp
in
aas
fdiv
add
cmps
xchg
mov
les
add
ret
cmps
aas
mov
mov
scas
add
ds
imul
mov
popf
dec
mov
movs
lds
shl
ins
movs
int3
push
cmp
push
test
mov
aaa
jo
loop
js
test
mov
hlt
inc
(bad)
push
scas
(bad)
in
and
inc
jne
leave
ficomp
mov
sbb
add
sub
lock
sbb
sub
sbb
xor
xor
hlt
ds
nop
js
ret
xchg
aad
int3
mov
je
push
int
stc
xchg
mov
xchg
call
cmps
xchg
push
pop
cwde
mov
mov
jne
mov
popf
sub
xor
push
mov
js
ret
iret
cmp
dec
(bad)
pop
in
sub
dec
xor
xchg
push
pop
jmp
ret
jne
and
mov
mov
test
add
in
nop
movs
mov
loop
sub
loopne
jnp
scas
sub
shr
je
sahf
ins
push
sahf
push
sub
mov
jge
loope
fnstenv
inc
jo
popa
mov
xchg
mov
sub
fwait
ret
adc
xchg
jle
sbb
nop
mov
mov
ffreep
cmps
je
push
lods
pushf
xchg
xchg
add
adc
stos
mov
mov
int3
mov
mov
mov
int
hlt
into
and
cmps
xchg
cmc
aam
sub
and
pusha
out
pop
lods
xor
scas
mov
jno
push
call
and
mov
mov
aam
shr
xor
movs
push
les
xor
(bad)
jle
xor
dec
aam
mov
push
add
or
cmps
xchg
cmp
sar
sub
add
jmp
mov
scas
xchg
sbb
pop
push
xchg
cmp
xor
add
stos
pop
pop
mov
xchg
add
pop
pusha
fsub
fwait
dec
pop
inc
pop
jmp
inc
adc
test
(bad)
mov
adc
mov
cmp
out
pusha
xor
sub
mov
and
push
mov
js
pop
cdq
push
inc
and
enter
jne
pop
mov
cmp
cmps
mov
push
hlt
adc
cwde
add
jmp
adc
dec
jo
cld
cmc
loope
js
idiv
fs
mov
sbb
repnz
mov
xor
das
(bad)
mov
mov
cld
shl
retf
mov
pop
push
shr
js
cld
push
xlat
mov
cmps
sub
jne
loope
lods
nop
dec
mov
(bad)
pop
hlt
xchg
ror
and
push
mov
xchg
scas
fldenv
cmp
(bad)
je
sar
jmp
(bad)
pop
test
sbb
loope
xchg
xor
or
out
test
push
dec
inc
pop
mov
or
not
add
dec
push
nop
lock
xor
jns
mov
mov
call
fdivr
ret
sbb
mov
test
inc
mov
rcr
aad
into
in
js
xchg
add
inc
rcl
cmp
lods
xor
test
test
ja
fadd
jle
dec
cwde
int3
push
mov
jne
hlt
cmps
das
mov
push
sub
(bad)
mov
jae
push
sub
dec
inc
jle
mov
and
sbb
ret
add
add
retf
and
(bad)
mov
pusha
movs
mov
fldcw
loope
hlt
xchg
lock
mov
loop
les
mov
push
push
mov
int3
xor
sub
xlat
stos
mov
je
enter
sbb
test
mov
ins
lods
test
test
push
xchg
xchg
or
call
adc
sub
test
jmp
mov
mov
loopne
enter
xor
movs
jbe
mov
das
sub
or
stos
mov
jb
or
xchg
or
cmc
movs
lea
repz
mov
je
or
add
shr
call
dec
nop
push
xor
mov
test
popf
pop
aas
mov
pushf
push
ins
add
adc
mov
push
mov
scas
mov
test
mov
pop
xchg
movs
sub
cmps
cmp
das
mov
fdiv
dec
mov
jmp
mov
jnp
fucomip
je
nop
iret
jae
pop
sub
fidivr
push
vrsqrtps
mov
add
jl
in
xchg
call
mov
test
js
sbb
test
(bad)
je
mov
mov
mov
mov
out
mov
mov
mov
pop
mov
dec
dec
iret
and
sbb
pushf
pusha
into
mov
test
leave
clc
mov
mov
xchg
jns
add
adc
cmp
xchg
call
xchg
push
sbb
je
je
lods
dec
mov
mov
push
sub
call
and
sti
and
in
dec
pop
push
xor
inc
or
sbb
sahf
pop
cwde
cwde
leave
je
ins
xor
ins
push
cmc
xchg
xchg
test
adc
push
in
mov
sbb
dec
jo
pop
imul
push
scas
cmp
popa
mov
retf
pop
(bad)
inc
fldenv
test
xchg
mov
cmp
jo
jle
sbb
js
jo
sbb
cmps
cmc
dec
sub
fdiv
dec
pop
in
dec
cmps
add
pop
clc
sbb
lahf
xchg
push
add
inc
sub
test
rcr
cmps
mov
add
mov
xchg
add
push
sub
add
mov
ins
mov
cmps
nop
add
fsub
xor
js
in
lods
mov
cmps
in
sbb
pop
push
ret
cmp
iret
test
dec
fnstenv
or
xchg
(bad)
or
xchg
xlat
mov
xchg
adc
jmp
inc
icebp
js
push
aam
stos
mov
loopne
mov
push
sbb
pop
pusha
mov
rol
xor
es
jnp
mov
mov
popf
and
mov
mov
fwait
pop
jp
mov
je
aam
clc
bound
adc
mov
int3
fiadd
jns
pushf
je
mov
mov
test
cmp
shl
sbb
xor
js
cmp
jl
cld
push
cld
adc
ins
pop
cld
cmp
pushf
fisubr
add
and
xor
pop
mov
fcom
enter
sub
dec
outs
js
jp
mov
jns
jno
fwait
(bad)
inc
mov
ins
sbb
push
cmps
(bad)
cld
fs
jno
xchg
test
or
jl
js
push
sbb
sub
repz
pop
dec
pop
lds
mov
jo
test
js
jge
fs
test
aam
mov
iret
sub
test
movs
adc
sub
loope
sub
test
js
or
movs
cmc
or
adc
ins
cli
pusha
add
repnz
in
clc
movs
pop
push
je
fdivr
dec
les
js
and
popf
pushf
xor
into
sbb
and
push
xchg
dec
sub
mov
sbb
cmps
imul
jo
ror
mov
popf
dec
push
add
fwait
(bad)
hlt
xor
adc
add
mov
cmp
pop
rcl
stc
pop
rcr
loope
ja
loop
scas
sti
je
(bad)
mov
cmps
pop
ficom
sbb
inc
mov
shl
aam
adc
pushf
dec
rcl
push
sbb
call
add
pushf
dec
mov
lea
pusha
xor
mov
data16
(bad)
int
je
out
push
mov
inc
dec
cwde
mov
sbb
adc
repz
sub
loop
test
jl
movs
imul
adc
mov
rol
and
mov
pop
add
cmp
mov
int
call
in
sub
mov
inc
repz
mov
jo
mov
jne
bound
add
inc
js
sub
call
push
js
and
sbb
enter
movs
and
je
sub
js
ror
std
cwde
xchg
xchg
inc
js
popf
cmp
cmp
js
mov
xor
jmp
push
pop
jmp
mov
jo
clc
shl
ins
mov
jne
lods
xchg
cwde
pop
loope
jl
(bad)
mov
leave
lods
les
push
fsubr
pop
jl
xchg
int
dec
cmp
pop
in
cmps
lea
js
sahf
retf
jo
cwde
jecxz
push
mov
leave
bnd
add
ins
xor
fistp
cmps
mov
je
xchg
cli
sub
mov
out
push
repz
jg
jo
jge
push
dec
dec
or
test
push
xchg
mov
popf
lea
and
push
mov
je
clc
fisubr
lock
loopne
or
clc
call
push
lods
sbb
inc
dec
mov
cld
mov
mov
jo
or
test
mov
mov
jl
jbe
cdq
mov
push
mov
and
or
test
add
pop
adc
cmp
cmp
sahf
add
repnz
xchg
pop
xchg
bound
push
xor
adc
xchg
hlt
js
push
dec
test
push
je
je
(bad)
jae
mov
lahf
iret
ins
pop
jl
(bad)
ret
test
je
cmps
cli
cmc
and
or
bnd
inc
push
test
movs
je
push
push
add
call
pop
mov
sub
add
sbb
xchg
cmp
add
ret
push
adc
js
cwde
jmp
lock
jmp
mov
js
stos
clc
fist
add
movs
add
jo
enter
std
sahf
dec
lods
mov
dec
sbb
js
(bad)
sbb
js
jp
div
icebp
mov
push
in
mov
call
mov
cmps
sub
ror
sbb
push
xchg
push
lods
inc
into
pop
mov
fwait
sub
or
and
cmp
inc
jns
jg
in
and
test
sbb
pushf
mov
cmp
stos
clc
stos
call
data16
retf
mov
aad
mov
fdiv
fsub
in
popf
mov
mov
fs
repnz
lods
jbe
mov
cwde
mov
or
jne
in
jge
xchg
mov
fstp
and
and
ret
mov
fcom
sbb
and
adc
push
and
shl
xor
push
mov
push
jne
ja
(bad)
in
in
add
push
call
push
lock
ins
aam
xchg
jp
add
retf
mov
xor
stos
int3
call
sahf
call
mov
dec
sahf
xchg
xchg
loop
jmp
or
xor
sub
add
lods
test
dec
xchg
lea
push
push
call
mov
dec
fdiv
call
cwde
xor
mov
ficom
xchg
clc
cmps
out
mov
pusha
das
lahf
mov
callw
pop
js
mov
or
mov
out
hlt
and
mov
pushf
xchg
cmc
mov
mov
add
pusha
in
sbb
fcomp
clc
rcr
jmp
pushf
mov
mov
inc
or
in
test
push
jb
fild
repz
mov
jmp
mov
call
movs
out
js
cwde
mov
test
add
add
jmp
xchg
pop
fcomp
adc
rol
cmp
xlat
add
xlat
xchg
cmp
push
jno
imul
inc
adc
dec
cld
mov
nop
add
sbb
or
js
lea
fcomp
nop
sbb
pop
xchg
and
jne
xchg
pop
int3
cmc
in
in
repnz
mov
pop
mov
enter
jno
ins
push
push
cld
popf
xchg
mov
jmp
pop
int3
mov
push
inc
mov
fdiv
rcl
add
arpl
test
mov
outs
push
(bad)
stc
cli
je
imul
push
and
cld
sub
add
lock
dec
xor
dec
jo
ins
sbb
mov
js
mov
in
and
mov
fs
xor
in
and
popf
test
adc
add
stos
in
mov
mov
mov
jo
(bad)
lods
push
mov
loop
jg
test
js
dec
cmp
out
push
ins
push
pushf
hlt
fmul
jmp
adc
hlt
cld
lods
movs
add
mov
rcl
fistp
mov
sub
fbstp
fdivr
js
sbb
mov
inc
mov
loopne
cli
pop
xchg
or
xchg
or
sbb
inc
fist
inc
jae
(bad)
int3
and
in
adc
xor
pushf
add
inc
mov
add
xchg
nop
cs
push
sbb
in
mov
cmps
push
xchg
fs
lock
movs
cdq
mov
mov
int3
leave
jb
inc
aas
and
and
nop
enter
gs
cmp
xchg
sub
jg
pop
push
mov
aad
mov
fadd
jle
or
add
stc
pushf
lea
push
adc
hlt
or
pop
adc
adc
je
data16
jo
jb
cmp
ins
out
pusha
inc
shr
outs
push
push
dec
sti
fcom
iret
pop
lods
xchg
xchg
je
adc
test
pop
push
sub
and
fcmovbe
jb
aas
cmp
rcr
enter
cmps
xchg
sbb
jg
pusha
inc
xchg
in
mov
mov
aam
cmp
xor
xor
popf
pop
out
mov
dec
mov
(bad)
into
ja
push
pop
rcl
mov
mov
cmp
and
in
test
dec
jno
loop
lods
lea
retf
jg
sub
jnp
ret
call
pop
xor
adc
mov
pop
mov
fcmovbe
out
and
aam
xor
(bad)
repnz
pop
ins
cmps
data16
ins
ror
fldcw
jo
hlt
(bad)
je
xchg
movs
pop
fs
push
cmps
push
rol
imul
bound
out
fcmovnbe
mov
fldlg2
sub
out
mov
dec
loope
xchg
jbe
cwde
into
mov
sub
jae
ins
inc
inc
lea
jno
stos
or
daa
pop
pop
push
cwde
fld
add
add
inc
sub
xor
fst
mov
stos
into
fidiv
add
int3
xchg
jae
test
push
je
repnz
sub
push
mov
add
gs
dec
ja
(bad)
mov
mov
fs
test
clc
lods
aad
xor
push
pusha
jmp
pop
mov
xlat
sub
popf
mov
pop
out
std
js
sub
pop
jecxz
cmp
mov
enter
les
pop
sub
jle
jp
je
jb
js
fs
mov
arpl
pop
js
and
jnp
lock
pop
js
rcr
js
gs
imul
push
jb
jmp
ins
push
mov
out
push
sbb
js
shl
or
out
int3
sub
jmp
(bad)
mov
fstp
add
fs
ret
adc
and
fmul
out
mov
fstp
(bad)
fnstenv
add
retf
mov
mov
jecxz
out
inc
fistp
mov
fidivr
lahf
in
fs
loop
push
(bad)
fadd
hlt
fmul
rol
in
ffree
(bad)
hlt
dec
je
mov
(bad)
mov
les
ds
sbb
mov
int3
push
scas
cmp
or
fsubp
ret
sub
add
in
loop
cmp
mov
mov
add
mov
push
push
repz
je
imul
add
call
dec
sbb
push
push
xor
dec
inc
sub
sbb
or
inc
inc
sbb
sbb
(bad)
lock
adc
add
or
sbb
test
sbb
or
adc
cli
hlt
adc
pmaxsw
sub
sti
out
or
inc
add
jmp
mov
add
pop
and
in
loop
mov
lods
test
shl
loopne
mul
cdq
not
scas
adc
inc
ret
ja
sbb
mov
xor
jmp
into
enter
jo
test
xor
iret
xchg
jg
sbb
sub
sbb
mov
push
sub
pop
sbb
add
jmp
fs
outs
pop
pop
ds
dec
dec
xor
push
xor
xor
ins
cmp
cmp
or
lds
push
sub
les
dec
add
ins
psubd
push
or
mov
push
xor
daa
xchg
fsubr
add
adc
std
push
adc
sbb
jb
add
xchg
jo
call
inc
adc
xor
dec
lock
inc
jmp
xchg
or
cli
clc
sti
xor
icebp
out
xor
jl
in
mov
les
mov
fwait
mov
in
int3
dec
pop
add
neg
mov
and
xor
fsub
and
dec
dec
sub
add
adc
loope
dec
mov
pushf
jmp
mov
lods
inc
jmp
push
mov
or
loope
sbb
daa
jge
pop
pop
inc
mov
add
pop
scas
ins
pusha
dec
aaa
jl
adc
xor
sti
mov
sub
adc
in
xchg
push
sub
cld
dec
xor
pushf
cmp
push
and
jo
or
loope
fst
cmp
sbb
push
das
mov
and
idiv
cs
dec
adc
sti
and
pmaddwd
das
cs
pop
mov
cld
in
sti
inc
loop
retf
out
hlt
out
ds
(bad)
jmp
outs
ret
cmc
mov
adc
stos
xchg
addr16
cld
jne
mov
jae
add
push
pop
add
sub
repnz
sbb
jne
stc
std
je
ffree
dec
mov
push
pop
nop
les
mov
sbb
bound
cmp
inc
cs
push
push
cmp
add
push
ins
cmp
pop
cli
nop
sbb
std
fcom
pop
fdivp
mov
into
shl
test
in
dec
push
and
lahf
outs
sub
out
je
je
dec
sbb
sub
adc
adc
mov
gs
add
enter
jl
push
out
fdiv
cmp
jmp
in
cli
stc
in
cmp
call
rol
mov
lods
xchg
mov
pusha
les
icebp
sahf
fs
std
jo
xlat
dec
test
add
imul
fcmovnu
(bad)
daa
mov
push
mov
xchg
push
pusha
outs
cmps
or
mov
loopne
inc
push
push
cmp
mov
test
xor
js
dec
cmp
inc
jge
das
and
call
or
aaa
in
punpcklwd
jle
add
adc
je
sub
sub
mov
cmp
and
and
cli
xchg
cwde
add
pop
cmp
pusha
sub
cvttps2pi
fs
and
or
adc
cli
(bad)
mov
hlt
inc
or
cmp
xchg
xor
js
ror
mov
popf
aad
cmp
sar
jl
lahf
mov
ins
cmps
cdq
sar
(bad)
pusha
push
into
sub
mov
sub
sbb
test
int
cli
pop
enter
pop
fldenv
leave
mov
(bad)
and
pop
push
jl
fld
pushf
dec
inc
xor
or
test
inc
mov
imul
jp
pop
add
test
xor
retf
or
adc
push
fadd
or
inc
push
aam
ins
or
cld
mov
push
call
and
je
and
pop
dec
xor
test
in
icebp
mov
loop
and
cmp
enter
jnp
pop
adc
pop
in
js
in
iret
outs
jl
lahf
jo
out
ficom
and
nop
mov
pop
mov
xor
xor
xchg
js
mov
lods
lahf
je
je
stos
shl
(bad)
mov
pop
fcmovnb
push
sar
enter
je
js
jne
pusha
add
jb
out
jbe
sar
inc
push
dec
js
push
inc
mov
test
dec
jo
add
jns
pop
adc
in
xor
sbb
jmp
clc
in
std
adc
adc
add
fwait
pop
mov
(bad)
std
data16
stc
hlt
jns
aaa
xor
nop
neg
add
dec
add
sub
jo
daa
in
dec
div
in
or
sub
test
and
and
push
mov
cmps
in
js
fbld
or
sub
jp
std
lods
lds
js
mov
xchg
xor
js
cmps
cwde
test
mov
mov
iret
sar
aam
jne
rcl
shl
hlt
div
call
imul
(bad)
ins
jnp
mov
in
sar
ror
push
xor
pop
push
mov
in
push
inc
cmp
push
mov
push
cmp
pop
cld
cli
rol
cmp
cli
sti
fld
jl
mov
inc
lods
idiv
loopne
out
sub
push
dec
cld
int3
aam
cmp
sbb
sbb
cmp
mov
dec
das
int3
inc
and
cs
cmp
and
mov
es
js
(bad)
cmps
(bad)
jns
and
je
je
sbb
fmul
push
mov
test
cli
or
mov
mov
cmc
jl
mov
dec
mov
mov
sar
scas
jb
enter
(bad)
ret
test
fldenv
hlt
or
out
or
test
outs
pop
push
nop
inc
call
arpl
pushf
addr16
push
aaa
mov
cmp
dec
inc
aas
test
mov
mov
inc
inc
xor
je
in
div
leave
call
icebp
mov
or
in
imul
js
cli
pushf
push
sbb
mov
std
jl
dec
dec
xor
fmul
test
popf
cmp
push
cmp
inc
jp
cmp
inc
int3
and
inc
inc
sub
push
fstp
sbb
adc
dec
cmp
lds
sbb
cmc
out
sti
(bad)
retf
xchg
movs
sbb
lds
mov
cmp
je
test
push
ins
dec
jae
mov
ins
mov
mov
test
icebp
cmp
in
jmp
mov
cmps
push
jp
or
jmp
nop
mov
in
xchg
or
dec
sub
mov
je
pop
dec
jb
cmp
popa
pop
cwde
ins
jb
dec
xor
push
xchg
loopne
scas
adc
sub
shr
(bad)
test
repz
mov
xchg
sbb
cmp
sti
adc
aam
cld
add
imul
inc
aas
cld
push
pop
push
cmp
inc
xchg
xchg
es
and
pop
pop
inc
inc
jmp
fs
xchg
push
jns
sbb
std
push
pop
and
je
sbb
scas
cwde
and
call
data16
ins
out
in
ficomp
mov
and
mov
movs
test
vucomiss
mov
mov
pusha
arpl
mov
pop
sub
jl
inc
js
dec
in
add
lods
inc
inc
jge
stc
std
loop
int
xor
ins
push
retf
scas
outs
mov
sti
pop
pop
inc
call
je
inc
sbb
pop
mov
je
dec
inc
push
arpl
inc
jns
and
loopne
clc
fisubr
stos
ins
jo
retf
mov
icebp
test
popa
in
hlt
dec
js
icebp
out
je
pop
aas
jo
push
xchg
push
xor
sub
dec
jnp
push
dec
cmp
push
je
das
das
inc
sub
cmp
and
inc
dec
sub
cmp
sbb
pop
or
fmul
xchg
adc
pop
ins
sub
sub
test
in
push
mov
les
mov
mov
push
test
nop
mov
mov
pop
push
into
enter
adc
push
add
sub
and
add
cmp
daa
imul
fimul
pop
cmp
iret
mov
cmp
dec
inc
and
pop
xchg
dec
aam
sbb
push
pop
enter
push
cmp
bound
dec
mov
sub
pminsw
out
mov
jecxz
cmp
jmp
les
rcl
in
jb
call
and
repnz
mov
jae
sub
jns
inc
jbe
inc
cmp
push
dec
xor
lea
jo
push
xor
aas
in
inc
sub
dec
cmp
dec
dec
jnp
dec
push
je
xor
sbb
outs
js
(bad)
outs
jl
or
call
or
js
dec
aaa
sbb
sti
add
repnz
sub
add
jns
xchg
pop
mov
ret
out
in
pushf
in
in
ins
fisubr
sti
jns
sbb
das
mov
push
or
or
adc
cmp
rcr
pushf
push
aas
sub
cwde
cmp
adc
cld
pop
pop
(bad)
in
pop
pop
test
push
inc
xor
inc
lahf
inc
cwde
push
jne
dec
jge
cmp
and
call
cmp
retf
adc
retf
fstp
xor
lock
xchg
sub
xchg
pop
xor
dec
jns
and
cli
mov
or
aaa
cmp
imul
in
sbb
sbb
xor
cmp
xchg
xor
js
dec
push
lock
push
add
dec
sub
jl
fs
hlt
jecxz
das
iret
xchg
cmp
test
jbe
mov
add
int3
(bad)
mov
mov
int3
clc
add
adc
sub
sbb
jae
loope
pop
lock
cmp
xor
push
sbb
lea
push
jp
xor
std
in
mov
in
std
dec
add
ficomp
pop
mov
mov
bound
je
dec
ins
xchg
xor
cmp
adc
and
mov
or
xor
mov
mov
jne
sub
cld
sbb
and
lds
sub
jge
push
sbb
les
pop
cmp
(bad)
jae
sub
popf
push
adc
mov
inc
push
push
mov
int3
sbb
push
xor
dec
jbe
sub
lods
pop
adc
cmp
std
pushf
mov
cdq
sbb
cwde
sub
jl
fcmovne
test
and
lock
mov
(bad)
push
dec
push
mov
or
sbb
xor
call
sub
cld
clc
lock
inc
shl
cmp
sahf
scas
retf
out
jne
cmp
sbb
std
std
mov
clc
loopne
mov
jns
jmp
pop
jmp
js
pop
pusha
jne
dec
fsub
jo
movs
ret
lock
inc
cmp
movs
ficom
cld
clc
rcr
mov
jne
add
ins
cmc
repz
(bad)
std
fsubr
repnz
push
jbe
and
repz
and
pushf
inc
inc
rcr
je
xor
and
inc
inc
sbb
pop
sub
inc
and
add
sbb
clc
adc
cmp
cmp
or
add
outs
cli
clc
fcmovu
repz
in
(bad)
int3
int3
or
shl
in
fs
aad
mov
jns
mov
out
mov
push
jmp
and
push
test
enter
(bad)
mov
aam
inc
inc
push
es
push
and
cmp
scas
sub
pop
cld
and
dec
(bad)
out
in
push
push
repnz
(bad)
xlat
int
stos
imul
mov
adc
cmc
push
adc
dec
inc
mov
sar
jp
inc
xor
mov
ins
jmp
sti
push
js
add
mov
call
cwde
and
sub
and
xlat
mov
aaa
ss
mov
push
push
mul
push
fidivr
ins
or
xchg
add
addr16
cli
je
adc
sti
pusha
gs
leave
sub
or
add
in
adc
out
in
retf
jae
cmc
sti
jo
call
and
dec
sti
dec
js
ds
nop
shl
dec
hlt
mov
mov
sti
mov
repz
aam
(bad)
jmp
inc
jbe
das
sub
imul
stos
ficomp
ror
mov
clc
popf
call
cmc
jmp
(bad)
push
(bad)
lahf
lock
mov
cmp
call
xchg
cmp
cli
sar
cmp
jmp
sbb
adc
push
imul
les
sbb
and
call
pop
test
sbb
push
cmp
add
sub
xor
fdiv
js
and
pop
push
fs
xlat
in
(bad)
mov
fdivr
mov
cmp
ror
cmps
(bad)
mov
mov
mov
cmp
cmp
push
mov
mov
out
hlt
icebp
in
pop
push
add
pushf
dec
sbb
inc
mov
int3
(bad)
les
fidivr
enter
in
stc
adc
cli
and
es
jbe
enter
cwde
add
in
dec
sub
loop
ss
jge
int
cmp
adc
rol
sbb
(bad)
out
shl
sub
rol
and
mov
push
sar
push
mov
ret
rol
fnop
mov
or
mov
mov
cli
mov
js
dec
sti
fcmove
adc
and
jo
xor
js
cmp
mov
js
cwde
and
stos
push
jne
in
cmp
iret
test
pushf
leave
ret
xchg
lds
jne
rcl
int3
js
aas
cmp
dec
inc
inc
pop
in
movs
xor
fs
clc
int3
stc
xor
or
lods
pop
fdiv
(bad)
fsubr
xor
int3
jmp
in
jl
fmul
outs
sub
repnz
xor
loop
jne
mov
xchg
retf
adc
dec
cld
cmc
adc
in
mov
int
sbb
stc
je
frstor
sti
xor
push
fs
pop
(bad)
push
movs
jb
xchg
loopne
shl
in
imul
call
sub
xchg
or
pop
fcom
adc
aam
adc
je
add
ins
sub
sbb
jge
sbb
test
and
add
in
sub
or
mov
push
(bad)
mov
arpl
ret
mov
and
addr16
dec
daa
mov
or
push
mov
push
jle
ds
mov
(bad)
ret
mov
pop
jl
lock
mov
call
add
cs
cmp
dec
and
jl
retf
or
fidivr
xchg
cmc
in
sbb
and
mov
pusha
or
in
in
loope
push
fdivr
in
ror
(bad)
cmc
(bad)
jmp
push
loopne
pusha
ror
fwait
pop
clc
std
mov
movs
xor
jl
push
out
or
ds
ins
adc
les
es
and
cli
je
xor
xor
int3
cmp
and
inc
loop
std
ins
sti
sub
clc
cmp
int
out
xor
int3
lods
xor
les
or
js
sbb
push
fcmovu
jns
push
add
jo
sbb
data16
in
ror
iret
mov
sbb
aam
or
add
xchg
adc
imul
jne
mul
imul
push
and
cld
push
lock
aam
push
mov
js
test
ror
jmp
fdiv
js
out
std
jl
jmp
test
fidiv
(bad)
rcr
add
js
or
movs
loopne
sub
pop
cmc
movs
sub
jge
sub
(bad)
sbb
aaa
push
in
pop
sbb
mov
adc
push
adc
and
ins
and
inc
push
das
sub
and
lea
(bad)
jge
ret
xor
mov
in
je
cmp
aad
lods
mov
idiv
inc
sbb
add
(bad)
push
dec
test
scas
inc
lods
out
cmp
aam
cmps
mov
(bad)
shr
mov
pusha
dec
lock
or
es
push
push
and
call
xor
idiv
hlt
repz
cmc
repnz
dec
rcl
movs
jecxz
sbb
cld
repnz
add
add
mov
ins
(bad)
cli
pop
repz
add
sbb
ret
sbb
enter
nop
push
sbb
in
aam
sbb
mov
push
sbb
or
in
je
aaa
xor
xor
push
ds
push
sbb
xor
dec
push
push
or
(bad)
sbb
(bad)
movs
loopne
fidiv
lods
retf
sub
mov
mov
pop
mov
mov
cwde
lds
pop
or
ror
dec
jne
or
mov
retf
push
mov
or
push
or
nop
imul
mov
xchg
pop
push
psubb
neg
jmp
dec
or
sub
adc
std
mov
push
jns
or
pusha
mov
add
in
dec
adc
movs
nop
mov
adc
pop
add
sub
stc
pusha
push
in
jbe
sti
neg
and
push
adc
not
sub
add
sub
cli
test
push
jp
sbb
out
test
sub
repz
xor
outs
push
das
mov
cld
aad
mov
enter
or
jecxz
mov
cmp
mov
scas
test
dec
cmps
mov
movs
xor
mov
fs
jnp
daa
pop
dec
sbb
pushf
xchg
shl
jl
addr16
xlat
dec
jo
in
(bad)
int
aam
add
push
jne
ret
mov
push
cdq
std
sub
sbb
rcl
mov
pushf
inc
push
cld
dec
icebp
cli
fsub
repnz
div
pushf
jo
shufps
gs
lods
je
jl
(bad)
mov
push
mov
add
mov
xor
pop
jl
mov
push
(bad)
ss
sbb
test
xor
icebp
sbb
fiadd
rcl
test
dec
inc
and
jne
sti
cmp
and
jno
in
lods
push
jp
sar
mov
xchg
xor
lea
frstor
sub
push
std
out
xor
stc
or
sub
fcmovb
scas
mov
jmp
mov
repnz
sub
or
fchs
fsubr
mov
mov
adc
cmc
pushf
add
jp
cmp
in
neg
nop
rcr
in
xor
jmp
aam
out
push
into
mov
in
sar
sbb
cld
push
std
ret
nop
scas
adc
push
retf
ins
add
les
cmp
push
test
jae
out
into
sbb
push
adc
sbb
push
jne
or
or
jmp
cli
fld
je
out
lods
dec
div
in
int3
pop
loopne
(bad)
sbb
rol
jbe
fwait
cmps
test
jne
sub
mov
adc
sar
loop
mov
icebp
ffreep
popf
mov
and
std
hlt
or
jl
mov
mov
mov
movs
out
jl
maskmovq
neg
jl
int
iret
inc
add
cld
dec
mov
jmp
and
in
call
push
leave
aam
movs
sub
aaa
in
cmp
fsubr
int3
mov
dec
loop
int3
(bad)
lock
(bad)
iret
stos
les
leave
popf
js
jge
jmp
adc
mov
int3
cs
jp
adc
lock
push
enter
sub
jne
and
cwde
add
add
int3
sub
mov
out
mov
je
test
aam
and
call
popa
xchg
and
xchg
sub
xchg
movs
nop
cmp
xchg
mov
sub
out
push
sar
js
jp
add
push
retf
imul
sbb
add
mov
xor
jmp
enter
add
jl
(bad)
mov
jae
and
in
and
fucom
lods
in
cmp
push
add
cmp
fdivp
jge
call
lock
hlt
add
push
out
pop
data16
mov
or
ret
out
push
mov
dec
and
aam
and
jo
std
push
dec
cwde
sbb
or
xor
jl
or
dec
push
in
push
dec
dec
clc
xchg
pusha
scas
lods
jae
cmps
add
imul
xchg
pushf
ins
je
mov
mov
mov
pop
mov
sti
cmp
(bad)
mov
fnstcw
enter
mov
(bad)
jl
push
repz
in
jp
fmul
popf
xor
jae
add
push
imul
(bad)
nop
adc
mov
popf
fsubr
cmp
or
xor
rcr
sub
aam
int3
dec
dec
loop
aam
fisttp
fnstenv
js
out
sti
cld
mov
div
add
(bad)
jmp
fadd
cmp
inc
les
fcos
jmp
fbstp
test
pop
pop
sti
in
xchg
sub
push
jne
or
or
push
clc
call
sbb
test
mov
imul
je
adc
dec
je
sbb
xchg
sbb
repz
fstp
cmps
cmps
jns
cmps
xchg
jne
add
stc
shl
xchg
jb
mov
in
and
pusha
jne
xlat
mov
(bad)
aam
or
dec
imul
nop
mov
cmp
sbb
sub
mov
mov
add
nop
dec
jl
mov
sbb
jo
daa
aad
ins
push
jbe
std
or
lock
cli
fsubr
cmps
test
pop
js
pop
mov
(bad)
data16
(bad)
ins
pushf
inc
adc
sbb
mov
sbb
add
and
or
loop
cmc
mov
pop
mov
cld
clc
fcomp
js
fcmovnu
js
mov
mov
pop
jp
xchg
mov
lods
(bad)
lea
xchg
mov
xchg
xchg
jp
lahf
cli
aam
in
or
into
stos
or
pop
cmp
cli
std
in
or
(bad)
sbb
iret
mov
sbb
clc
sub
cld
clc
mov
sub
jl
mov
mov
clc
cld
add
pop
push
sbb
inc
in
into
or
movs
in
stc
push
and
jb
aaa
lods
jne
sub
adc
aam
or
jmp
sar
sar
retf
inc
sub
mov
xor
add
adc
popf
push
add
add
push
test
sub
pop
jl
pusha
clc
idiv
(bad)
(bad)
es
or
inc
int3
sar
je
and
stos
cmps
and
xchg
jns
push
jl
xchg
fs
clc
js
js
ss
lea
pushf
leave
fisttp
mov
mov
jmp
cmp
push
add
stc
int3
add
call
enter
imul
sar
call
mov
and
fs
push
icebp
jge
or
ficomp
in
push
leave
fldenv
adc
adc
pop
loopne
inc
and
pop
sbb
cmp
lock
rcr
out
(bad)
ficomp
mov
loope
mov
adc
mov
push
xor
data16
cli
loopne
(bad)
(bad)
js
adc
aam
dec
or
add
repnz
stc
pushf
ficomp
call
mov
xchg
cmp
mov
and
lods
mov
xchg
jg
mov
dec
hlt
pusha
adc
dec
jg
xchg
test
xchg
pushf
test
(bad)
sar
pushf
in
pop
mov
fnstsw
cld
loop
fs
jl
or
in
ins
lods
cld
jne
(bad)
jmp
enter
or
xor
jl
add
xchg
loop
std
xor
add
repnz
(bad)
loop
int3
mov
mov
push
test
adc
sub
test
dec
cli
lods
je
jmp
(bad)
in
fsubr
mov
stc
aad
std
or
fistp
xor
push
push
add
push
cmp
mov
sbb
icebp
pop
jne
js
or
pop
jmp
mov
add
scas
stc
lods
pusha
adc
(bad)
repz
or
mov
and
xchg
leave
popf
xchg
lea
nop
add
js
cmp
fsubr
adc
mov
or
mov
cmp
call
je
aad
push
in
fsub
lock
adc
push
add
enter
jl
pop
js
mov
mov
pop
out
mov
xchg
xchg
mov
jl
xor
sbb
outs
xor
imul
add
sbb
cmp
into
fucomi
js
mov
mov
add
les
jns
enter
sub
es
sub
popf
mov
push
hlt
mov
cmp
pop
test
js
adc
test
icebp
aam
sti
fsub
push
push
neg
mov
js
xchg
jle
movs
xchg
jmp
movs
mov
pushf
push
mov
pushf
xchg
jbe
sub
fwait
mov
mov
or
pop
sub
pop
lds
shl
jmp
sbb
mov
(bad)
push
scas
pop
pop
sbb
pop
in
push
sar
scas
fwait
add
inc
and
js
mov
adc
in
dec
out
stc
and
push
pusha
push
movs
jmp
in
lods
or
fcom
fucom
loope
rcl
push
mov
std
dec
scas
mov
and
loope
aad
test
retf
inc
sub
(bad)
sub
push
xor
idiv
ficom
cwde
jp
sbb
std
daa
ins
fdivr
dec
idiv
dec
adc
sub
retf
lock
sbb
mov
leave
cmp
or
addr16
xchg
or
test
push
cdq
xchg
je
xor
dec
xchg
fs
shl
jl
out
fidivr
clc
call
jmp
sbb
mov
inc
cmp
sbb
mov
js
mov
mov
movs
test
pop
push
in
or
add
jo
add
fdiv
das
mov
jo
call
mov
movs
dec
lods
mov
xor
int
lds
inc
mov
test
jne
dec
movs
sbb
xor
inc
and
or
xor
js
xor
into
lods
int3
inc
inc
jmp
cs
inc
or
or
or
loopne
push
dec
fisubr
jne
out
call
ficom
mov
nop
cli
xchg
js
mov
int3
jmp
int3
mov
jo
stos
pop
mov
sub
xchg
and
xchg
cmp
ret
pop
cld
mov
jmp
sub
out
mov
mul
leave
dec
pop
ins
sbb
stos
fimul
in
imul
mov
add
cmp
aam
test
jp
jecxz
sbb
in
push
mov
lock
push
fucomip
ins
jb
ror
lahf
cwde
or
mov
pop
loopne
rcr
clc
mov
test
cmps
enter
adc
std
into
xor
cs
pushf
inc
inc
add
arpl
jae
adc
and
add
pop
dec
es
das
ret
pop
test
add
push
test
nop
(bad)
(bad)
icebp
mov
jb
lahf
xchg
jo
in
mov
(bad)
rcl
aas
call
out
loop
test
mov
pushf
xchg
out
sar
fcmovb
jnp
iret
mov
xchg
rcr
jl
out
fdivr
dec
or
cld
and
pop
or
addr16
lahf
ret
lock
push
sub
lock
or
jp
in
repz
jns
fidivr
(bad)
fsubr
loop
js
loopne
pushf
rcl
mov
sti
add
xchg
dec
(bad)
es
addr16
aam
data16
jp
sbb
clc
or
sub
mov
adc
mov
push
push
das
pushf
gs
jmp
ds
inc
push
fdiv
je
inc
and
mov
adc
pop
in
pop
lods
movs
mov
cli
loopne
mov
fsub
loope
(bad)
jae
fnstsw
mov
adc
sbb
add
and
jae
mov
cmp
call
daa
cli
rcl
mov
stc
ror
jle
shl
or
xor
je
sti
popf
ins
or
out
mov
jmp
xlat
jl
sbb
scas
lods
jp
mov
jmp
in
pop
xor
cld
mov
jmp
fild
shl
in
(bad)
(bad)
je
repz
scas
fist
test
dec
(bad)
and
cs
addr16
dec
xor
dec
pop
test
dec
sub
cli
xchg
enter
and
push
xor
shl
in
push
jne
ja
imul
mov
push
lods
mov
adc
mov
pop
sub
and
fcomp
cmp
sbb
sub
js
gs
iret
dec
mov
ins
add
dec
pop
cmp
push
pop
inc
cwde
mov
cwde
sbb
sar
retf
mov
cmp
mov
add
cwde
dec
js
mov
lds
jl
daa
adc
js
sti
out
scas
call
adc
iret
inc
not
mov
push
sbb
sbb
add
out
test
loopne
lods
cmp
int3
mov
dec
inc
xor
jne
cmp
push
dec
test
das
in
xchg
adc
ins
adc
fwait
mov
test
sbb
mov
cld
jne
push
(bad)
sbb
cli
pusha
sub
jl
push
cmp
and
in
and
add
lock
out
int3
js
sbb
cli
adc
mov
add
jne
mov
std
mov
scas
mov
sub
(bad)
enter
cmp
xor
imul
or
stc
fsub
mov
and
or
xor
hlt
push
cmp
test
call
ss
je
xor
cli
shr
fsubr
sbb
mov
sar
lods
fs
mov
movs
cmp
or
cmp
je
push
inc
sub
jl
aaa
xor
sub
adc
je
mov
xchg
not
js
adc
mov
mov
sub
or
iretw
les
jl
ror
clc
test
les
pop
adc
ins
fs
(bad)
fld
int3
call
cmc
and
mov
jne
pushf
daa
cli
inc
(bad)
mov
sti
loop
jne
dec
pusha
jmp
sub
cs
nop
out
or
adc
clc
sti
mov
cs
xor
lods
adc
aas
cmp
or
les
call
ror
pop
push
add
test
and
push
and
mov
(bad)
in
pushf
pop
bnd
adc
js
sub
loopne
dec
inc
jnp
dec
dec
sub
xor
and
adc
stc
xor
std
add
dec
out
test
(bad)
shr
cmp
xor
jle
test
loope
int3
ror
fcmovnb
int
call
cmp
jne
(bad)
and
out
push
js
ret
cmps
or
in
pop
xchg
mov
js
add
mov
fdivr
aam
jnp
ins
mov
test
das
loope
pusha
push
imul
pushf
sbb
sub
in
js
test
cmps
mov
inc
aam
fmul
push
or
pushf
repz
js
add
and
or
and
sti
mov
(bad)
fcomip
mov
push
add
sub
shr
mov
mov
cmp
adc
sbb
jne
push
call
aam
mov
or
and
xor
imul
enter
test
(bad)
iret
lods
fs
ret
and
sub
cli
test
scas
sar
xor
ret
mov
mov
sub
rol
mov
lea
mov
jmp
es
and
js
aad
jno
jo
fstp
ins
or
(bad)
js
sbb
jl
mov
and
sbb
add
loopne
inc
sahf
jne
cld
jp
or
or
mov
push
dec
sbb
out
mov
push
pop
call
and
into
vxorps
cwde
xchg
push
add
stos
add
add
dec
jnp
cld
lock
test
fcmovb
loope
mov
movs
shl
je
retf
(bad)
fdivr
mov
jmp
hlt
lea
mov
or
pushf
mov
js
test
mov
pop
fdivr
mov
push
js
aad
cmps
dec
jl
ret
or
(bad)
jo
out
je
cs
call
add
sbb
les
cmp
push
and
imul
outs
call
int3
mov
add
fsub
retf
mov
repnz
jns
fsubr
sub
cld
push
and
inc
and
and
push
and
jl
cmps
sbb
or
adc
sbb
add
hlt
cld
dec
stc
jp
in
fdivrp
jb
jl
aad
lods
(bad)
stc
(bad)
(bad)
int3
stos
sbb
enter
sub
mov
jae
mov
jmp
mov
cmp
cmps
stc
jl
jl
mov
xor
stos
ja
mov
popf
mov
repz
in
sbb
dec
js
(bad)
ret
fld
push
mov
(bad)
sbb
cmp
jp
push
or
pop
jmp
dec
jnp
sbb
cli
push
inc
sbb
or
ror
pushf
push
sbb
fisub
je
pop
xchg
clc
and
je
pop
fcomp
mov
cli
jo
mov
pop
or
retf
sub
mov
push
sub
xor
sbb
pop
sbb
dec
jl
and
mov
push
fdivr
cmc
in
cmp
in
in
js
jmp
sub
aam
test
int3
lods
fs
js
(bad)
pop
pop
ret
imul
test
xor
mov
mov
jae
nop
add
mov
mov
dec
mov
mov
mov
popf
aam
js
(bad)
sub
dec
ffree
(bad)
fmul
pop
adc
and
or
pop
jl
js
movs
sub
int3
and
add
or
xor
or
push
out
mov
in
fucom
adc
adc
call
mov
loop
fnstsw
fistp
clc
mov
icebp
js
jl
ret
test
adc
pop
lods
daa
and
and
sbb
imul
jp
in
cmp
mul
in
dec
or
in
xor
int
in
rol
loopne
fcmovne
scas
dec
jl
mov
shr
jae
cmps
pop
mov
xchg
jle
pushf
(bad)
jl
mov
retf
mov
mov
xor
xchg
gs
nop
fs
inc
je
les
js
jl
sar
xchg
loope
mov
push
je
add
cmc
js
nop
cmps
mov
push
fwait
test
sbb
and
arpl
(bad)
pop
ins
or
int3
or
adc
ins
pop
icebp
in
jo
(bad)
movs
stc
push
idiv
or
fnsave
jecxz
enter
xor
fistp
ins
add
ror
das
or
and
js
pop
push
sub
int3
nop
neg
out
sti
call
(bad)
xor
fidivr
dec
(bad)
jne
mov
mov
push
mov
test
test
sbb
or
pop
mov
mov
lahf
in
cwde
in
in
je
test
pop
mov
xchg
in
js
mov
sbb
loope
adc
jge
sub
jl
loop
test
(bad)
mov
and
add
pop
push
xchg
xor
mov
lods
(bad)
lock
ja
push
es
fwait
jmp
cmc
test
push
jmp
jl
int
pop
rcr
xchg
test
push
or
push
cld
mov
hlt
sti
pushf
push
sar
lea
add
into
pop
fdivr
fdivr
pop
icebp
faddp
shl
or
xor
je
out
mov
js
fistp
shr
js
sub
xchg
push
cli
adc
pop
cmp
pushf
pop
cdq
cmp
nop
je
jl
fs
xchg
js
cdq
xchg
mov
test
repnz
mov
or
scas
pushf
xchg
in
jl
push
je
sub
iret
les
fdivrp
test
fsub
(bad)
call
addr16
js
mov
imul
jne
das
and
push
and
shl
xor
or
xchg
jae
(bad)
sti
in
xchg
sub
ins
(bad)
pop
in
push
(bad)
mov
mov
nop
cmp
icebp
out
scas
(bad)
test
push
in
push
loopne
sbb
push
push
(bad)
cmp
cmp
push
adc
out
adc
pushw
shl
lock
int3
add
mov
mov
xor
jo
jmp
mov
int3
retf
aam
std
enter
adc
out
mov
movs
scas
test
test
xchg
fwait
je
(bad)
(bad)
jns
mov
movs
mov
imul
je
push
js
mov
push
and
mov
sar
add
jae
(bad)
jo
pop
adc
cld
loope
push
jp
push
lahf
mov
add
or
addr16
fnstsw
shl
cmp
mov
lods
mov
sbb
aam
in
mov
js
adc
mov
pusha
xor
mov
ins
pop
xor
mov
mov
ret
pop
sub
or
jne
ffree
jns
aam
inc
push
fcomip
test
in
fstp
in
adc
aam
xlat
movs
bound
jl
js
jp
std
mov
js
pop
sahf
xchg
mov
gs
mov
mov
cwde
mov
sahf
fs
mov
xchg
xor
shr
(bad)
cld
pushf
test
out
mov
iret
ja
es
iret
cmc
(bad)
lods
push
mov
in
xchg
xchg
adc
xchg
hlt
rol
inc
imul
ds
cwde
(bad)
add
test
jl
loope
fild
aam
shr
fisubr
aam
dec
hlt
mov
test
shl
(bad)
hlt
push
adc
xor
call
cmp
idiv
push
(bad)
jmp
retf
mov
loopne
stc
into
mov
xor
cld
nop
icebp
jecxz
mov
rol
les
lds
mov
imul
xor
push
fadd
xchg
push
rol
mov
mov
mov
xor
les
fcmove
cli
jmp
push
add
sbb
out
xor
xchg
sub
or
push
jl
mov
xchg
or
add
and
repnz
inc
push
int
push
xlat
(bad)
push
out
cwde
pop
repz
pusha
fcomp
les
retf
mov
sar
fsub
(bad)
in
cmc
mov
les
stc
add
sar
sar
jl
mov
daa
fwait
cmp
or
out
cmp
and
jl
sbb
je
lock
pop
mov
mov
aam
stos
pop
js
hlt
stc
pusha
in
push
aad
clc
jo
mov
mov
jae
mov
movs
mov
das
movs
mov
aad
mov
add
lods
inc
mov
mov
mov
call
loop
mov
sbb
mov
push
or
cmp
cs
xor
cmp
cwde
xchg
lds
addr16
sbb
movs
mov
mov
mov
pop
aaa
enter
and
std
lods
repnz
or
(bad)
clc
push
retf
ficom
jne
jmp
in
clc
shr
into
jp
or
sbb
pushf
sbb
movs
xor
mov
jl
or
imul
adc
ins
js
lahf
jns
fadd
cli
and
mov
sub
gs
pop
leave
pop
xor
xor
xor
cld
out
iret
sbb
(bad)
mov
fxch
scas
mov
arpl
int
ins
pop
fild
loope
dec
add
pop
dec
das
cmp
neg
jne
xor
jl
adc
std
or
push
or
aam
jp
in
int
test
popf
pop
mov
jne
jmp
push
pop
je
jo
mov
inc
pushf
mov
in
push
adc
ins
sti
dec
jp
cmp
mov
ins
aam
dec
jmp
js
push
add
icebp
add
jne
out
loopne
fstp
clc
add
fcom
je
pop
sbb
adc
mov
fldenv
fsubr
(bad)
loop
sbb
jmp
and
out
jecxz
mov
int3
ds
iret
mov
jne
lock
int3
or
mov
int
push
in
mov
loopne
pop
sbb
or
fadd
fs
stos
push
loopne
mov
xor
clc
ins
neg
push
in
mov
pushf
mov
fs
int
jle
cmp
mov
stc
les
iret
cwde
je
pushf
je
sub
xor
fs
sbb
mov
cld
fsubr
push
aad
jo
sar
xor
rcr
cwde
mov
dec
loop
stc
sub
test
ins
repz
movhps
add
mov
push
call
pop
sti
movs
je
or
push
xor
retf
cli
in
shl
mov
ret
mov
int3
add
les
adc
out
mov
or
adc
loope
adc
aam
aam
mov
jp
out
mov
mov
ins
les
out
int3
(bad)
in
xlat
mov
or
fadd
push
nop
and
pop
je
into
pop
xchg
jnp
call
mov
jne
ins
mov
call
pushf
(bad)
cmp
call
rcr
mov
lods
mov
stos
mov
or
or
shr
add
push
push
cmp
(bad)
jp
add
sar
sub
es
push
mov
pop
jo
repz
mov
fcomp
js
loop
cli
pushf
loopne
mov
int
data16
inc
psubq
out
mov
push
repnz
mov
out
lods
aam
cwde
gs
sbb
dec
lock
add
xlat
push
movs
div
repz
add
add
xchg
xchg
dec
jne
jb
pop
mov
mov
ins
clc
js
add
cmp
cwde
outs
shl
bnd
repz
mov
and
sub
aaa
test
pop
je
adc
ror
jns
sbb
test
dec
jmp
mov
push
clc
cmp
jecxz
mov
mov
fidivr
cmc
addr16
aam
jb
sub
mov
or
push
ins
pop
repz
mov
fsub
rcl
(bad)
cmps
cld
rcr
out
ficomp
in
mov
test
(bad)
mov
and
test
shl
hlt
fs
add
mov
or
(bad)
jmp
adc
add
adc
add
mov
or
nop
jle
mov
jns
inc
adc
jns
jg
adc
leave
sub
dec
pop
cdq
cmp
(bad)
nop
dec
adc
lods
add
pop
and
dec
or
call
hlt
pop
xchg
jo
sub
jmp
add
push
fs
or
cwde
cli
sub
clc
call
jne
lock
mov
inc
rcl
add
pop
xor
pushf
hlt
add
fistp
pop
push
loop
jle
mov
fucomp
pop
in
js
jecxz
ja
in
ret
cli
ins
fidivr
mov
(bad)
js
push
call
and
and
stc
fisubr
sbb
jmp
push
shr
and
xor
(bad)
call
jb
ja
and
or
movs
aam
or
mov
mov
cmps
les
in
xchg
pop
cli
or
push
in
adc
push
pop
repnz
add
sbb
pushf
(bad)
test
jo
mov
pop
pop
enter
fdiv
jmp
test
xor
sbb
and
inc
add
push
sub
or
or
sub
in
mov
(bad)
hlt
cmp
icebp
out
jmp
loope
or
jne
mov
in
test
das
pop
(bad)
rcr
xchg
add
ins
clc
jmp
(bad)
repz
(bad)
in
cmp
or
test
jne
push
mov
call
mov
bnd
or
adc
push
jo
push
(bad)
jo
les
popa
add
mov
mov
(bad)
add
test
adc
cli
int3
cli
add
loopne
sti
add
pop
out
fdivr
loope
lea
dec
out
call
movs
into
jmp
hlt
inc
sub
call
cmp
int3
jns
es
daa
and
sti
ins
clc
push
int3
test
pusha
fcom
add
cld
add
adc
pushf
mov
jb
fdivr
imul
xor
std
repz
cmc
jmp
test
lock
or
mov
pop
das
add
loopne
test
pop
test
xchg
adc
sub
test
sti
mov
test
pop
repnz
daa
mov
or
push
push
mov
loop
xchg
ins
jo
push
shr
cmp
mov
xchg
add
je
xchg
inc
xor
mov
ins
xchg
jbe
gs
mov
jae
mov
fwait
xchg
add
and
cmps
push
mov
test
ins
jg
outs
rcl
and
jne
xchg
and
xchg
xchg
test
pop
mov
push
jecxz
cmp
fs
xchg
jmp
fst
push
mov
adc
push
imul
iret
mov
mov
cwde
inc
fst
test
pushf
jae
xor
aaa
ja
mov
or
ror
jo
adc
or
push
jnp
retf
test
ins
js
mov
js
fs
xor
jge
js
ins
xor
jb
rcl
jno
push
sbb
jo
outs
js
jo
fiadd
or
inc
imul
fdivr
pop
mov
xor
outs
ret
or
mov
jns
pop
add
ss
or
(bad)
jl
or
jp
xchg
push
pop
jne
sub
loopne
je
and
xchg
hlt
jbe
add
je
push
jne
push
cmps
cmp
popf
les
pop
inc
popa
inc
or
gs
jnp
push
mov
movs
push
add
push
jo
pop
push
pusha
push
arpl
js
ins
ins
lahf
xchg
inc
jle
adc
and
ja
pop
int3
imul
addr16
dec
std
mov
jne
pop
cmp
js
fild
cmp
mov
cmp
xchg
outs
dec
inc
inc
jo
daa
ss
push
dec
cs
xor
jbe
clc
or
js
out
pushf
mov
mov
or
aam
shr
clc
je
test
ror
jmp
mov
imul
mov
xlat
shl
jae
sar
out
mov
and
add
lahf
in
sbb
xor
aam
(bad)
and
aad
add
(bad)
retf
sar
jle
movs
iret
aad
data16
rol
mov
(bad)
into
cld
data16
inc
mov
fs
fcmovb
pop
mov
frstor
pop
cmp
pusha
jmp
int
ja
pop
add
dec
js
inc
jmp
arpl
or
adc
sbb
xor
pop
push
pusha
add
ffree
clc
pop
push
add
add
add
fs
sbb
pop
sub
int3
enter
shl
or
gs
sbb
add
xor
pop
pop
inc
cli
cmp
push
pushf
inc
fisttp
int
(bad)
pop
push
sar
push
or
std
adc
and
hlt
or
mov
jmp
stc
mov
ds
or
out
enterw
loopne
push
fild
mov
adc
mov
add
(bad)
mov
shl
outs
mov
iret
sar
inc
jmp
movs
call
test
retf
jbe
xchg
retf
sbb
clc
call
repz
dec
int3
pushf
inc
push
sub
mov
sub
aaa
fadd
mov
retf
add
clc
repz
test
inc
sub
test
std
shl
and
and
pop
sub
test
push
add
pop
aas
dec
xor
cmp
jl
ds
outs
push
ss
cmc
add
jno
sbb
xor
pop
pop
je
cmp
or
mov
sar
mov
jecxz
sbb
jmp
out
out
sar
jmp
cmp
jmp
(bad)
pop
xchg
mov
fs
add
xchg
jmp
movs
xchg
daa
inc
and
mov
mov
in
in
cmp
loopne
sub
call
mov
nop
jo
and
fsub
or
mov
push
je
stc
mov
add
fsub
cmp
test
sub
sub
mov
es
xchg
cmp
push
cmp
inc
dec
or
fs
in
inc
and
jo
imul
pushf
sub
and
add
mov
cmp
sub
mov
mov
movs
(bad)
in
je
pop
mov
in
xchg
in
js
loop
push
in
test
cmp
idiv
repnz
mov
mov
mov
mov
pop
mov
mov
ret
mov
push
enter
cdq
rol
adc
jbe
xor
retf
cli
lods
push
mov
idiv
dec
sub
or
xchg
cld
add
xor
push
push
and
sbb
je
mov
lock
in
dec
es
sub
loopne
js
sub
jbe
or
mov
sbb
sub
clc
pushf
inc
sti
(bad)
cmp
cmp
inc
and
adc
fdivr
ins
inc
sti
pop
addr16
push
clc
sbb
cwde
lods
int
mov
out
mov
jecxz
je
loope
jns
loop
mov
fldl2e
jnp
jmp
add
(bad)
fmul
mov
ror
mov
jl
test
mov
inc
lods
mov
push
leave
mov
fild
push
pop
xor
icebp
xchg
in
push
jbe
sub
test
test
dec
sub
fst
imul
pop
out
cwde
adc
push
jp
inc
out
cmp
(bad)
jns
movd
sub
cli
jl
push
call
adc
mov
test
out
je
adc
or
cli
jmp
aaa
mov
pop
pop
mov
sahf
je
pop
jb
daa
test
test
dec
push
aam
test
(bad)
mov
(bad)
loop
je
jmp
mov
mov
into
dec
xor
adc
fdivp
ins
(bad)
dec
je
scas
ins
out
lods
add
lds
mov
dec
nop
sub
inc
aam
stos
ret
push
call
xor
gs
mov
jnp
gs
inc
xor
jnp
test
call
cli
nop
pop
daa
std
cmp
repnz
push
cmp
adc
add
fcom
je
cmc
sub
push
das
cmp
jb
pop
pop
js
and
pushf
push
sbb
dec
add
mov
das
xor
push
xor
and
sub
cs
add
push
mov
push
cmp
hlt
cmp
imul
or
push
jns
and
jo
sbb
fisub
adc
shl
cld
inc
enter
out
nop
retf
push
xlat
(bad)
push
jbe
cld
in
inc
dec
into
mov
pop
pop
shl
data16
or
jmp
fs
(bad)
mov
add
sub
pop
jmp
mov
pop
jns
test
hlt
aam
iret
mov
cld
cmc
retf
and
xchg
jns
loopne
jo
(bad)
in
push
sbb
shl
lds
add
fcomp
rdpmc
idiv
xor
in
jo
or
std
mov
cs
and
pushf
shr
les
xor
je
push
ins
dec
idiv
pop
push
and
sub
nop
and
sub
xchg
sbb
dec
xor
push
cmp
sub
sub
inc
xor
fsubr
pop
jae
cmp
add
mov
scas
mov
test
push
shr
test
xor
jne
iret
fld
mov
inc
loope
mov
hlt
push
cwde
in
(bad)
xchg
pop
loope
push
mov
cmp
fidivr
rcr
jge
lods
push
js
jbe
pop
enter
push
cmp
shl
(bad)
xor
dec
sbb
sbb
or
mov
cmp
mov
mov
xchg
xbegin
push
and
rcr
adc
adc
clc
adc
je
or
pushf
dec
and
movs
js
xor
inc
into
mov
outs
lock
scas
pop
adc
addr16
les
aaa
jae
cmp
push
and
in
push
or
lods
das
bsf
sub
mov
int3
sbb
inc
loope
dec
movs
rcl
fldl2e
jo
or
dec
(bad)
pop
fdiv
inc
jbe
or
fs
out
div
mov
fistp
int3
dec
sbb
and
lock
push
jmp
shl
(bad)
add
sbb
push
in
and
pushf
lods
dec
and
aam
cmp
call
call
push
push
aas
add
repnz
les
clc
cwde
dec
ret
cli
xchg
inc
xchg
int3
js
sti
mov
test
sbb
jle
pop
push
repz
addr16
sub
shr
sub
add
dec
adc
inc
dec
gs
cmp
sub
out
sbb
aam
sbb
lods
or
jbe
or
fs
adc
push
push
lods
sbb
in
int3
mov
out
sub
imul
stc
addr16
pop
je
test
pop
in
jl
loop
lock
push
add
xchg
ror
cli
mov
mov
mov
dec
aam
push
icebp
loope
lods
dec
fistp
psllq
push
xchg
loopne
dec
xor
jg
push
cs
add
fisubr
jne
sub
push
daa
mov
ins
pop
sub
jb
shr
mov
mov
in
(bad)
mov
sub
ror
test
add
and
bound
das
sub
push
xchg
and
hlt
es
and
and
xor
sbb
test
xor
push
and
test
dec
pop
jo
xor
sub
out
and
push
loopne
cmp
add
lds
sbb
fdivr
loope
jo
nop
push
cmp
out
enter
in
push
sbb
ret
jne
ret
pop
loopne
out
mov
in
les
sub
or
or
mov
mov
in
push
sub
daa
mov
xchg
pop
scas
aas
(bad)
cld
idiv
int3
loop
dec
sub
mov
loopne
fistp
inc
(bad)
repz
js
(bad)
fidivr
jmp
xor
fs
pop
sub
push
push
stc
lock
(bad)
push
inc
xchg
cli
xor
push
(bad)
jns
inc
sub
xchg
sbb
pop
imul
cmp
mov
sub
movs
fmul
cli
inc
shr
das
or
cmp
pusha
xor
cmp
lock
adc
mov
adc
dec
or
int3
add
mov
outs
(bad)
push
in
sub
(bad)
std
pusha
fdivp
adc
mov
mov
enter
push
and
mov
adc
fsub
div
retf
cmc
mov
sti
nop
mov
add
sub
enter
(bad)
enter
sbb
icebp
mov
jl
aam
sar
and
xor
fidivr
mov
mov
mov
mov
int
cmp
test
ins
push
mov
xchg
cmp
mov
adc
popf
pop
(bad)
popa
movs
push
and
fcmovnb
jbe
or
test
sbb
loope
fsub
out
xor
call
sbb
or
clc
call
jl
pop
and
xor
inc
and
cmp
xor
or
sub
pop
push
cmp
enter
mov
add
jmp
push
ins
add
add
xchg
add
les
and
in
mov
and
adc
adc
daa
sahf
xor
outs
fs
shl
push
out
int
cmp
pop
jbe
jl
fmulp
mov
xor
out
sbb
push
shr
jmp
out
xchg
data16
clc
addr16
sub
push
and
pop
sub
jnp
call
mov
sti
(bad)
sbb
push
int
pop
std
xor
xlat
mov
adc
clc
mov
or
pop
jmp
leave
in
inc
jmp
sbb
outs
ins
push
inc
or
mov
or
sbb
test
and
cmp
or
cwde
add
(bad)
cmp
cli
fsub
jmp
pop
pmulhuw
out
push
adc
repz
lods
lock
adc
jp
and
aaa
in
push
cmp
movs
int3
dec
stc
ror
mov
mov
mov
in
mov
adc
cmps
jmp
xor
push
sar
clc
cmp
fild
cmps
test
sbb
sub
into
outs
cwde
push
retf
jne
dec
pop
cli
shr
out
hlt
push
ss
clc
retf
xor
or
mov
mov
hlt
jne
pop
stc
sbb
jl
call
adc
mov
add
aas
mov
mov
test
push
sub
and
and
mov
fwait
scas
int3
pop
sub
adc
sbb
in
pop
ret
sbb
sub
mov
add
rcl
rcl
or
clc
nop
adc
push
adc
mov
mov
lea
sbb
inc
xor
into
xchg
push
ins
cmc
or
cmp
in
cmp
pop
xchg
inc
cmp
mov
pop
sub
lea
jo
call
pop
inc
daa
adc
or
ret
shl
xchg
sbb
dec
push
fisub
repz
add
add
or
mov
adc
push
cld
addr16
cld
xchg
push
xor
test
and
cmc
fld
mov
repz
enter
mov
ds
adc
cli
int3
xor
cli
cmp
cmp
inc
sbb
scas
imul
adc
jp
adc
jmp
jo
aas
jno
jecxz
ds
or
loop
sbb
pop
sbb
fidivr
sbb
je
cmp
dec
jb
inc
xor
sti
shl
or
adc
fsubr
shl
jl
sub
lods
xchg
hlt
jno
mov
cmp
mov
sbb
mov
xchg
sbb
in
enter
push
mov
sub
js
mov
mov
clc
sar
pusha
and
clc
mov
fnstsw
inc
jmp
mov
das
cmp
or
hlt
das
sbb
pop
fcomp
and
pusha
push
jmp
dec
add
int3
repnz
bnd
fidivr
mov
les
sbb
out
mov
out
inc
xchg
adc
jo
adc
add
push
cld
clc
xchg
xor
push
mov
add
pop
call
xor
lock
pop
adc
aad
fs
cmp
sub
cmp
daa
clc
add
out
test
xor
pop
mov
in
(bad)
jmp
sti
jae
out
mov
cwde
xor
jl
call
out
rol
push
adc
cmp
jecxz
or
mov
xchg
pusha
and
mov
pushf
test
bound
out
rcl
adc
xchg
clc
fistp
mov
and
je
sbb
stos
sbb
cld
dec
lock
lods
in
aad
push
mov
pop
icebp
ins
clc
in
movs
jne
(bad)
jmp
push
sbb
les
jmp
fst
dec
jo
sbb
test
ror
mov
dec
xchg
or
in
xor
add
je
in
mov
leave
sti
push
lds
loopne
mov
js
cld
clc
sbb
out
nop
cld
int3
daa
and
icebp
adc
or
aas
xor
inc
and
inc
push
das
jge
daa
or
lock
movs
lods
mov
xchg
mov
out
hlt
push
add
push
repnz
add
cmp
es
mov
sbb
fwait
sub
(bad)
mov
js
push
or
and
scas
jbe
loopne
cld
shl
repz
adc
aam
sti
int3
jecxz
push
pop
sub
push
xor
sbb
repz
mov
and
mov
lock
dec
int3
jns
call
in
clc
out
in
and
out
push
fidivr
into
leave
mov
(bad)
mov
enter
push
sub
mov
pop
adc
inc
or
mov
pop
fild
sbb
jns
ficomp
push
add
pop
sub
jno
sub
and
mov
adc
cli
push
leave
std
test
mov
push
sub
or
sbb
lds
ret
mov
xchg
jl
push
pop
enter
jae
inc
es
pop
mov
stos
nop
adc
add
js
xor
xor
jns
adc
mov
pop
pop
jl
mov
push
adc
cli
shl
sbb
mov
and
push
adc
adc
and
or
and
lock
bnd
in
js
retf
movs
sbb
rol
mov
xor
loopne
xor
jp
xor
add
xchg
dec
or
add
add
dec
call
mov
dec
lock
repz
leave
pushf
movs
sub
in
js
inc
cmp
and
inc
sub
sbb
sbb
push
imul
loopne
call
cld
push
xchg
shr
cld
aam
lock
in
mov
pop
pop
jne
mov
test
jmp
jbe
les
aas
jb
cmp
and
push
sub
je
mov
and
push
loope
enter
and
and
ss
adc
xor
mov
push
js
loopne
jo
aaa
cld
xor
mov
and
sti
hlt
adc
mov
add
inc
test
push
xor
test
sar
add
sbb
idiv
xchg
xlat
into
stc
or
mov
or
mov
mov
ins
pop
div
mov
std
mov
xor
in
sbb
or
in
sbb
loope
mov
mov
in
lock
je
stc
pushf
sbb
jo
ss
pushf
inc
sbb
jl
xor
mov
push
mov
inc
enter
sbb
push
push
xor
js
sub
retf
dec
xor
out
jl
mov
jl
adc
aas
pushf
ror
dec
fs
test
push
add
sbb
int3
pop
push
gs
push
ins
sub
daa
jae
and
jns
push
adc
jmp
fadd
mov
pop
add
pop
push
call
cmp
mov
sbb
rcl
fsubr
call
sbb
cwde
mov
js
ret
lds
jbe
sbb
sbb
(bad)
cli
fmul
je
xor
imul
mov
adc
push
movs
or
or
mov
add
mul
es
idiv
and
inc
daa
ffree
xor
js
jp
iret
ret
cmps
and
and
inc
(bad)
test
mov
call
mov
xlat
test
push
shl
mov
les
adc
pop
sbb
sub
sub
popa
in
stos
and
sbb
call
enter
pop
clc
pop
loope
pop
(bad)
pushf
loopne
faddp
inc
fdiv
inc
jns
adc
and
mov
clc
xor
aam
test
mov
cmps
mov
push
mov
je
nop
mov
(bad)
leave
adc
loope
mov
cmp
js
loopne
js
adc
jmp
int3
or
shr
lods
push
or
mov
out
pusha
loopne
test
xor
lea
js
shl
hlt
inc
dec
sub
and
outs
enter
cmp
cld
int3
mov
jl
nop
push
xchg
or
or
push
and
cld
aad
dec
or
mov
test
faddp
jbe
adc
in
out
sub
push
and
mov
iret
pop
mov
clc
inc
nop
xor
in
call
les
pop
fs
or
xor
dec
and
dec
pusha
cli
sar
fcmovbe
scas
fiadd
mov
pop
je
shl
sbb
(bad)
fidiv
pop
div
add
xor
repnz
jne
or
and
std
add
add
lock
aam
in
ret
fs
jecxz
icebp
fld
cwde
leave
mov
test
(bad)
js
add
pop
loopne
and
les
das
adc
cmc
hlt
mov
sbb
lds
fcom
in
pop
mov
test
retf
repz
push
out
cs
daa
mov
sub
je
sbb
test
xchg
sbb
cmps
mov
inc
or
jmp
dec
call
pop
retf
fs
(bad)
dec
clc
cmp
xor
nop
jle
sbb
pusha
fst
mov
cwde
pusha
out
ins
mov
scas
adc
push
lea
hlt
mov
add
xor
cmp
sbb
cmc
lock
daa
mov
das
and
sub
fchs
add
lock
stos
je
js
in
mov
jl
fadd
les
stc
cmp
test
xor
cld
je
mov
jmp
js
stos
jmp
das
fdivr
or
rcr
retf
enter
jmp
push
sbb
aaa
sub
adc
mov
pop
mov
dec
sub
jl
and
or
jl
xor
in
out
je
loop
jmp
and
enter
jae
rcr
pushf
sbb
cmp
movs
and
mov
jne
mov
ins
jbe
mov
fistp
pop
in
fsubr
js
mov
mov
pushf
pop
test
daa
cld
out
pop
js
pminsw
rcr
jne
sbb
in
add
mov
out
fcomp
or
pop
cwde
push
ret
jp
cli
loope
cmps
sub
adc
ds
xor
sub
cmp
js
les
mov
int3
and
pop
(bad)
mov
punpcklwd
std
sbb
hlt
hlt
xor
adc
sub
je
adc
cmp
cmc
cli
std
fiadd
pusha
out
xor
out
jmp
cmp
in
pop
lods
sub
stos
(bad)
movs
in
lahf
xchg
jle
pop
mov
xchg
ins
xchg
fdiv
pop
stc
cmp
cmps
sahf
mov
ins
xchg
and
mov
or
mov
xor
mov
xchg
out
clc
js
sub
xchg
and
mov
pop
xchg
and
push
sbb
fdivr
jl
mov
dec
loope
or
and
and
hlt
mov
test
and
mov
fadd
es
mov
push
jo
lods
call
leave
push
je
sub
test
pop
add
dec
aad
test
test
pop
sahf
jne
fcom
and
daa
dec
(bad)
(bad)
std
mov
add
test
in
lods
fimul
mov
adc
(bad)
push
in
shl
cli
dec
cli
push
or
fld
test
and
xchg
mov
jl
xor
cdq
test
cmc
jl
je
lahf
xchg
cmp
cmps
nop
imul
mov
mov
enter
and
and
and
idiv
push
jp
sbb
clc
xor
jge
cli
in
xlat
inc
cmc
adc
clc
push
xor
dec
and
xor
fdivr
lock
aam
sub
clc
xor
jns
mov
into
fwait
inc
pop
push
clc
xchg
mov
and
and
pop
(bad)
xor
(bad)
sub
lods
popa
and
shl
adc
sub
push
ds
cmc
jo
xchg
add
fbstp
loope
std
or
jecxz
hlt
(bad)
jns
rol
adc
inc
mov
nop
aad
les
pop
jle
js
das
xchg
fs
mov
add
test
mov
into
retf
sti
and
xor
sbb
pop
adc
jl
sub
and
jmp
repz
or
mov
rcr
pop
or
pop
sbb
(bad)
imul
shl
hlt
xor
std
in
lods
xchg
adc
jns
jl
mov
mov
fistp
sbb
sbb
mov
ja
or
add
cmp
rol
jl
xor
sub
cmp
andps
leave
les
sbb
out
inc
fmul
jl
cmp
mov
mov
xor
mov
mov
mov
mov
mov
js
xchg
xchg
sbb
popf
xchg
xor
fs
push
les
je
mov
push
mov
jae
pop
lock
pop
test
cmc
lock
rcl
sub
xor
jle
(bad)
leave
lods
xchg
jmp
push
sub
xor
js
xor
cld
shl
fbld
imul
xor
jne
adc
sub
pushf
dec
xor
jae
xor
leave
rcr
nop
ret
inc
fmul
xor
sbb
enter
or
lods
int3
lock
out
test
das
aam
sbb
adc
sbb
arpl
xchg
icebp
jne
mov
xchg
jge
mov
lea
xchg
and
sbb
xor
ss
test
push
int3
sar
sbb
push
fs
or
mov
fsubr
in
push
or
fsub
stc
jmp
and
push
es
enter
pop
mov
and
cmp
xchg
dec
(bad)
cmp
sub
jne
sbb
pushf
addr16
mov
in
push
jns
bsf
das
sbb
inc
shl
push
xor
mov
pushf
sub
test
push
sub
pop
stos
xchg
push
je
xor
es
mov
int3
inc
push
loopne
add
shl
mov
push
retf
mov
xor
inc
xchg
inc
gs
jo
(bad)
hlt
pop
xchg
mov
je
xchg
ds
(bad)
bound
push
jo
fs
cmp
sbb
in
jne
lock
cmp
das
call
add
xor
xor
sub
jb
fdivp
push
mov
adc
xor
xor
dec
es
sbb
xor
cs
jl
mov
sub
js
lods
xchg
mov
retf
pop
out
fild
shl
mov
xor
and
cmps
shr
jl
nop
jo
xor
sbb
or
test
les
sbb
cmp
adc
test
out
mov
xchg
adc
or
repnz
jb
fs
nop
retf
js
movs
sub
je
fcomip
nop
repnz
mov
cs
adc
push
xlat
stos
and
sbb
pushf
cld
pop
xor
xchg
dec
stc
jmp
test
(bad)
push
or
out
int3
movs
aaa
push
ss
ins
xor
cmp
mov
xor
jl
push
in
popw
cmp
nop
cld
enter
fadd
or
loop
lods
push
sbb
sub
sub
jl
and
xor
cmp
int3
pop
aas
inc
inc
cs
aam
fwait
or
cld
dec
cld
std
xlat
test
jmp
mov
ins
ret
mov
mov
(bad)
lea
sbb
inc
pop
add
dec
shr
imul
cmp
mov
cwde
jmp
pop
int
ror
(bad)
icebp
dec
lock
movs
lods
std
in
ds
cs
std
enter
repnz
adc
jmp
dec
call
aaa
loope
sub
mov
sub
xor
adc
jl
jge
ins
jp
jmp
mov
(bad)
rcr
ins
enter
pushf
or
adc
call
xor
mov
ds
and
call
(bad)
xchg
add
in
cld
dec
clc
sbb
icebp
cmp
outs
les
daa
cwde
mov
popf
js
lods
push
xchg
jo
add
pop
scas
dec
mov
sahf
cs
fwait
xchg
or
mov
pop
sbb
ror
je
push
call
fcom
mov
dec
add
inc
cmp
test
or
and
cwde
cld
or
call
xor
or
test
nop
sub
js
mov
sbb
aam
cli
dec
xor
mov
(bad)
imul
aad
push
call
cmp
hlt
sub
out
xlat
add
adc
and
sbb
or
data16
mov
cmp
jecxz
enter
(bad)
mov
mov
jl
push
sbb
mov
mov
fwait
sub
inc
test
lods
pop
push
pop
dec
lds
jae
adc
xor
ins
mov
je
out
lds
and
je
clc
dec
dec
dec
sub
sub
cld
loope
clc
jns
pop
add
and
sub
pop
jmp
xchg
mov
cmp
fs
rcr
and
data16
mov
mov
(bad)
xor
jl
xor
inc
sub
adc
js
inc
sbb
call
and
fld
adc
popa
pop
cmp
(bad)
jne
sar
push
cdq
test
movs
jbe
pop
lods
jg
inc
aad
jbe
ret
pushf
fimul
popa
jecxz
je
lods
adc
movs
mov
js
push
pop
inc
sub
jl
fisttp
push
jp
and
neg
cwde
xor
sub
out
sbb
test
push
push
das
jp
cmp
sbb
and
test
sbb
sbb
cdq
fmul
sub
mov
jmp
addr16
call
shl
pushf
xlat
ret
adc
mov
and
and
sub
xor
cmp
aaa
jae
sbb
test
repz
sbb
and
add
pop
inc
mov
xor
int3
mov
mov
mov
js
mov
cmc
sbb
aam
adc
push
pop
idiv
in
or
jmp
retf
push
mov
js
sbb
dec
lods
or
inc
dec
sub
aam
mov
fbld
jmp
fsub
sbb
inc
dec
in
cmc
pop
inc
sbb
test
adc
sub
jne
xor
in
nop
les
stos
xor
cli
cwde
clc
call
sub
jl
out
int3
or
mov
sub
xor
pop
bound
inc
pop
gs
jae
add
data16
not
dec
or
jmp
mov
mov
movs
mov
or
lods
cmps
mov
in
or
pop
push
in
js
ret
pop
xor
push
add
mov
cmp
imul
int3
mov
jge
cmps
popf
or
add
imul
cmc
int3
xor
fistp
popf
add
mov
adc
fadd
es
je
or
dec
test
mov
test
cmc
hlt
xor
jmp
jmp
xchg
mov
repnz
fimul
cmc
loop
mov
sub
cli
(bad)
cmp
mov
clc
int3
xor
adc
jl
xor
es
and
sbb
lock
sub
push
or
into
pop
mov
mov
cmp
mov
rcl
retf
mov
sub
dec
out
out
mov
xor
sbb
dec
sub
lea
pushf
push
dec
pop
dec
sub
pop
cmp
stos
mov
hlt
xor
and
and
mov
mov
mov
fs
xor
js
fistp
dec
xchg
repnz
cmp
sbb
sbb
dec
adc
or
jns
ss
pop
xor
push
fisub
or
jp
clc
stos
mov
or
jmp
mov
inc
cmp
pop
or
adc
jl
xor
ins
xor
pop
in
jl
daa
xor
pop
push
cs
push
mov
out
in
xchg
dec
jp
mov
xchg
imul
mov
jne
stc
mov
loop
test
and
fdiv
jecxz
cmp
adc
push
dec
sub
loopne
mov
pop
test
out
xor
jl
pop
adc
adc
mov
inc
jae
out
ins
ins
sub
add
add
adc
adc
push
cmp
je
cli
in
and
pop
cmp
aam
mov
cwde
sub
adc
cld
js
cmp
hlt
cwde
mov
bound
pushf
push
inc
xor
dec
cmp
cmps
cmp
mov
clc
sbb
lock
pop
inc
push
jl
ss
cmp
mov
or
push
out
lods
jne
leave
mov
cld
in
int
in
cwde
push
mov
mov
mov
retf
lods
add
add
int
sub
hlt
shl
pop
enter
sub
push
(bad)
test
mov
lods
test
and
jnp
rol
shl
sbb
sar
xor
or
cmp
xlat
int3
lods
jbe
fstp
push
sbb
jl
cmp
call
pop
xor
pop
jle
js
fwait
sbb
sub
mov
adc
or
cmp
cmp
movs
and
sub
jge
mov
and
test
push
jp
push
dec
xor
sbb
cmp
cmp
sub
test
jae
sub
or
ins
push
and
jns
aad
sbb
sbb
(bad)
and
test
jl
mov
lods
mov
cli
test
mov
in
ins
push
inc
jae
fisttp
mov
dec
call
mov
fistp
lods
pop
cmp
and
push
adc
js
stc
fcomi
jo
push
sbb
test
xor
jp
sbb
ss
sub
pop
pop
jl
xor
xor
xor
mov
sbb
addr16
cwde
xor
mov
push
jl
jl
je
std
jo
xchg
aad
and
jnp
out
loopne
les
or
xchg
cs
aas
sbb
and
and
and
rol
aam
js
jecxz
mov
cmp
mov
movs
xchg
addr16
cmps
pop
test
mov
pop
call
mov
push
mov
loop
in
lods
mov
dec
js
ins
rcl
mov
sbb
pop
pop
shl
cwde
gs
push
inc
push
repnz
or
cli
or
(bad)
loop
loopne
or
jne
daa
sbb
push
sub
js
sbb
sub
sub
mov
test
inc
and
int3
push
cmp
cmc
ins
sbb
xor
push
push
sub
call
xchg
adc
and
call
cld
pop
add
push
loope
mov
jecxz
js
fldenv
shl
test
xor
pop
in
jl
sbb
js
or
std
mov
jmp
mov
nop
lds
std
push
hlt
jmp
mov
mov
jne
test
je
stos
mov
sar
stos
movs
mov
pop
push
fistp
pop
sti
xchg
and
stc
fnstsw
cld
loopne
hlt
and
add
pop
adc
mov
and
sbb
push
inc
and
cmp
mov
fs
dec
(bad)
push
cmp
mov
inc
and
add
call
push
dec
and
dec
lock
test
rcr
jmp
cmp
cmp
xchg
push
jl
inc
sbb
and
hlt
or
ins
sbb
jg
ins
cmp
rcl
retf
shr
ins
push
sar
test
lock
je
fst
popa
(bad)
stos
mov
lea
pop
in
ins
clc
cmc
in
sar
pop
in
pusha
or
in
sbb
jg
jae
icebp
pop
stc
sar
or
adc
pop
fs
adc
mov
mov
test
jg
in
sub
enter
sar
sbb
and
jmp
mov
lods
cmp
push
jne
popf
xchg
mov
jl
jl
cmps
call
sub
mov
fidivr
sbb
sub
loopne
std
add
in
pop
jl
adc
cmp
fnstcw
pop
xchg
mov
pop
jge
add
ficomp
inc
adc
shl
sti
xchg
jnp
mov
ret
lods
and
shl
loop
push
neg
dec
fs
rol
jno
loop
dec
sub
cmp
mov
and
retf
jp
pop
or
test
adc
dec
sbb
mov
jl
shl
mov
ins
int3
cmp
aam
dec
sub
ins
xor
or
js
sub
enter
cli
je
jge
call
pop
call
and
cmc
or
mov
out
cwde
pop
sub
xor
push
cmc
js
test
es
pop
sbb
jmp
xchg
sbb
push
loopne
out
cmp
xlat
ror
mov
(bad)
clc
js
push
xor
pop
les
pop
add
mov
add
in
add
aam
movs
and
pop
add
mov
mov
push
enter
nop
or
add
and
cmp
movs
es
inc
loop
xor
int3
loopne
pop
jmp
leave
cli
sbb
add
push
sub
movs
sub
xchg
jl
and
pushf
add
call
lods
inc
mov
push
shl
rcr
in
cli
loope
ins
pop
das
sbb
loopne
stos
push
and
leave
mov
add
lahf
xchg
xchg
add
test
loopne
jmp
and
test
xor
inc
mov
sub
es
js
sbb
xor
in
inc
hlt
out
aaa
jmp
clc
js
test
out
je
int3
fadd
mov
outs
push
cmc
xchg
les
push
fadd
cmp
rcl
mov
ror
mov
rol
sub
dec
daa
mov
sbb
ins
and
sub
ins
sbb
sub
mov
adc
jne
inc
and
mov
sub
sti
and
cld
push
fs
mov
js
test
jl
sahf
add
ja
add
scas
cmp
aam
fst
data16
lods
dec
and
jmp
addr16
mov
xor
push
test
inc
mov
hlt
mov
ret
out
in
dec
jns
aad
fimul
test
inc
icebp
rcr
gs
push
or
push
fsubr
sbb
loope
and
sbb
aam
and
imul
jae
iret
sub
dec
sar
xor
pop
mov
sub
leave
xchg
mov
or
cmps
fprem
(bad)
shl
jo
fwait
cmp
call
clc
je
pusha
daa
ror
clc
xor
adc
fst
pop
xchg
movs
pop
sahf
ins
jno
xor
fcom
out
lods
mov
adc
xor
sbb
cmp
and
int3
sub
loopne
adc
pop
adc
push
mov
test
movs
aaa
cmp
or
clc
pushf
sub
neg
sbb
or
mov
out
push
dec
xor
push
or
jne
add
or
in
and
(bad)
xchg
das
xchg
enter
push
mov
retf
mov
push
fst
fs
lahf
call
push
test
cmp
ficomp
pop
fsub
hlt
and
xchg
mov
mov
adc
mov
js
adc
cld
xor
inc
and
sub
cs
sub
mov
loop
loop
pop
or
pop
sbb
jo
adc
call
and
js
inc
xor
mov
cld
lea
(bad)
mov
out
xchg
xor
push
ins
adc
arpl
les
sub
pop
hlt
jmp
adc
cmc
mulps
adc
or
add
or
lock
inc
jae
xlat
jle
jbe
retf
mov
inc
fadd
ins
fs
mov
les
sahf
nop
dec
mov
aam
add
mov
dec
mov
adc
mov
add
mov
pop
cmp
jne
cs
xchg
ficom
enter
and
mov
pop
imul
mov
test
or
jmp
jle
hlt
xlat
iret
mov
(bad)
sub
jo
add
mov
js
inc
ds
and
outs
push
dec
cmp
mov
sub
in
cmp
and
nop
aad
xor
sub
hlt
sub
mov
test
and
sub
js
pop
mov
lea
push
je
adc
icebp
mulps
cmp
mov
add
jp
imul
cmp
or
and
imul
stos
jg
mov
stos
xchg
fistp
lahf
mov
std
sub
dec
add
xchg
cmp
fcmovnb
mov
mov
and
and
sbb
xor
cmp
ins
ret
retf
xor
jne
xor
pop
pop
sbb
jne
ss
pop
ins
pop
lea
imul
je
test
je
retf
lds
jo
in
inc
push
inc
das
sbb
wrmsr
jl
cld
push
pop
xor
pushf
cmp
sbb
sub
add
dec
sbb
stc
adc
addr16
mov
or
leave
jo
mov
repnz
mov
cmp
stos
ins
push
sbb
int3
xor
int
mov
pop
cmc
icebp
cmp
push
call
call
add
jae
or
jne
mov
inc
sub
sbb
cs
in
inc
push
dec
and
pop
aas
inc
sar
and
rol
push
adc
mov
test
mov
(bad)
lods
cmps
push
mov
stos
test
je
lds
mov
jb
mov
sbb
add
sbb
ret
xchg
pop
mov
and
call
nop
lock
dec
inc
nop
je
mov
add
stos
les
xor
add
ss
mov
adc
pop
out
jae
repnz
rcl
sub
push
dec
cmp
movs
jmp
movs
add
jae
mov
add
add
mov
add
jo
xor
mov
fistp
ins
daa
add
dec
push
ja
imul
pop
imul
shl
shl
xor
movs
mov
mov
jle
popa
movs
mov
rol
jmp
movs
sub
ins
ret
push
mov
pusha
inc
enter
xor
and
das
cmc
js
mov
test
push
pop
cmp
add
das
test
sub
or
push
and
and
dec
retf
push
adc
cmp
dec
sub
pusha
retf
adc
sbb
adc
movs
fisttp
adc
cmc
in
je
or
and
cmps
sbb
call
and
add
sbb
inc
mov
dec
push
mov
test
jne
test
mov
jne
push
sub
aam
daa
in
call
pop
sbb
xchg
mov
jmp
xor
mov
xor
jb
push
leave
jge
xor
and
pop
mov
test
cmp
push
ins
cmc
and
and
lock
sub
mov
ins
and
(bad)
mov
add
pop
inc
push
cli
iret
pop
inc
pop
or
jmp
gs
gs
mov
sbb
push
adc
mov
or
or
add
in
test
or
push
lock
dec
push
ins
xor
or
jl
movs
adc
inc
int3
sbb
push
xor
mov
jae
popf
mov
pushf
jns
xchg
mov
adc
pop
js
cdq
xchg
sub
sbb
aam
das
sbb
push
jl
pushf
and
inc
cs
adc
ret
sbb
or
stos
pushf
aam
aad
xor
inc
int
add
out
ror
pop
ror
jmp
and
pop
and
and
fmul
in
stc
adc
clc
xor
xchg
loopne
adc
aad
adc
jae
movs
mov
pop
nop
or
and
popf
sub
pop
mov
xchg
dec
fdiv
push
pop
add
xchg
add
shr
adc
inc
sub
mov
mov
push
js
sbb
into
push
hlt
add
aam
repz
lock
(bad)
mov
xor
push
xchg
fdivr
and
mov
inc
push
dec
sub
pop
loope
jne
or
push
xor
fcomip
adc
cmp
pop
pushw
push
in
dec
xor
sub
mov
dec
xor
jo
pop
sbb
push
push
add
or
adc
lods
sbb
or
repnz
dec
adc
loopne
dec
ret
dec
mov
dec
sub
pop
xor
mov
and
in
dec
inc
add
pop
push
shl
and
xchg
inc
xor
mov
shl
inc
test
imul
push
sahf
sbb
fcmovu
les
pushf
cdq
mov
cmp
les
das
add
jmp
rol
sbb
dec
push
and
xor
pop
cmp
mov
je
push
dec
add
jl
call
xor
sbb
adc
das
sbb
jl
lahf
push
sbb
pusha
push
and
push
push
sub
mov
cld
aam
pop
je
in
pushf
push
sub
test
std
clc
dec
push
aaa
push
into
and
dec
cmp
dec
sbb
inc
je
push
dec
aas
and
dec
mov
or
daa
rcr
movs
ror
(bad)
out
pushf
adc
fldenv
ror
pop
pop
push
fbld
and
and
clc
ret
sub
pushf
mov
cs
sbb
hlt
pop
pop
inc
test
push
xchg
pusha
je
dec
pusha
pop
sub
enter
cmp
or
and
aaa
add
mov
sbb
das
sub
test
sub
sub
xor
sbb
adc
cs
add
add
cmp
aas
mov
pushf
inc
adc
xchg
inc
std
dec
add
dec
push
sahf
enter
aaa
cmp
pop
dec
cmp
movs
pop
adc
in
aam
add
push
lods
movs
hlt
ds
push
or
and
xchg
mov
sahf
inc
or
and
ja
jb
sbb
je
ins
sbb
pushf
es
inc
xor
lds
fdiv
lea
(bad)
nop
outs
xchg
push
or
(bad)
xchg
je
mov
xchg
gs
adc
sti
jo
sub
fadd
hlt
mov
and
lds
bound
xchg
jecxz
xchg
jne
or
je
js
xchg
and
je
hlt
push
push
fldenv
adc
xchg
xchg
js
lods
hlt
adc
inc
sub
dec
adc
mov
ss
sahf
xchg
push
lahf
xor
outs
imul
mov
push
adc
jg
daa
mov
lods
fnsave
push
xchg
xor
mov
outs
loopne
sub
push
ins
js
outs
cmps
ret
(bad)
jo
push
jno
jg
ins
push
call
js
xlat
inc
pop
dec
mov
jnp
ins
rcl
cmp
outs
fsubr
pushf
pop
jbe
imul
or
mov
cmp
in
lods
out
inc
pop
call
jne
in
jge
retf
rol
in
js
loop
mov
or
jle
in
or
and
and
inc
call
js
in
mov
movs
xor
mov
cmc
fcom
push
loopne
xchg
in
push
xchg
xchg
stc
les
call
and
xor
and
mov
ja
test
sbb
fstp
and
or
sub
rcr
and
push
movs
(bad)
aam
fldenv
add
rcl
jp
test
sub
jbe
push
clc
adc
pop
out
ficom
rcr
test
mov
pop
sub
sbb
jb
push
mov
or
iret
loope
dec
mov
outs
call
loopne
jg
shl
xchg
or
jnp
(bad)
mov
pusha
mov
hlt
or
int3
adc
mov
(bad)
sub
xor
or
(bad)
fisttp
iret
mov
in
jl
fwait
cdq
mov
pop
pop
int3
mov
fwait
mov
ficomp
loope
(bad)
int3
test
mov
das
(bad)
outs
pop
ret
add
dec
(bad)
inc
or
push
mov
mov
pop
pop
loope
mov
outs
mov
adc
or
dec
mov
cmp
lds
gs
mov
jo
jmp
ror
int
mov
ins
add
mov
jo
pop
retf
mov
add
leave
inc
ret
shl
addr16
inc
cmp
mov
mov
sub
int
int3
xchg
mov
mov
mov
aam
js
ret
mov
aam
in
aam
outs
cwde
jecxz
dec
xchg
cli
addr16
jl
int3
fld
stc
fst
(bad)
aam
push
popf
mov
mov
outs
mov
repz
add
xchg
fdivr
mov
mov
pop
test
stos
mul
iret
pushf
mov
(bad)
jns
in
xor
mov
clc
fsub
mov
adc
ret
and
stos
push
mov
fwait
stc
mov
xor
mov
mov
mov
es
mov
bound
lods
movs
inc
or
pop
add
js
call
mov
lods
pop
div
push
fmul
scas
je
jle
(bad)
fidiv
shl
in
mov
pop
push
sub
sub
loopne
pop
(bad)
cwde
in
in
pop
retf
(bad)
push
mov
les
stos
int3
or
loopne
cmps
test
fadd
ins
iret
jne
out
or
sbb
outs
pop
pop
pop
sti
inc
cmp
pushf
out
jmp
lods
movs
mov
cmps
mov
dec
add
add
nop
out
scas
adc
cmps
lahf
and
pop
sub
xchg
xchg
test
mov
lahf
add
sbb
mov
add
mov
xchg
jnp
movs
popf
out
std
fwait
mov
inc
or
lods
mov
fmul
xchg
mov
mov
dec
movs
push
pushf
movs
lahf
lds
ds
cmps
fwait
or
mov
in
stc
int
leave
repz
call
adc
ror
shl
mov
push
mov
loope
rcr
fwait
je
lods
sbb
idiv
and
ja
push
sbb
dec
cli
les
into
jne
add
mov
loopne
arpl
aam
pushf
xchg
in
(bad)
xchg
pop
ins
call
cmps
js
fcmovbe
into
xchg
mov
repnz
fs
mov
int
sbb
add
mov
xor
scas
(bad)
hlt
or
rcr
pusha
fld
dec
xchg
lea
retf
leave
mov
mov
mov
adc
inc
push
mov
cld
cwde
les
jne
jge
and
and
enter
in
(bad)
jl
stos
mov
div
repz
out
add
js
sbb
adc
add
pop
movs
test
lods
cwde
ds
inc
or
inc
lods
int3
and
mov
adc
sahf
test
call
xchg
ins
mov
lods
sub
xchg
mov
adc
shl
js
and
je
sub
xchg
jb
jle
push
jp
add
std
fstp
bound
mov
pusha
into
(bad)
push
js
push
cmp
mov
sub
nop
ja
cmp
mov
xchg
stos
mov
vpaddsb
xor
dec
stos
jae
lods
jecxz
and
ins
sub
jl
scas
lods
in
js
xchg
mov
jbe
repz
ds
inc
hlt
jp
cld
(bad)
icebp
aam
ds
jo
and
fcomp
in
adc
push
adc
mov
inc
cmp
cs
int3
xor
stc
and
push
pop
adc
movs
jno
movs
fwait
in
aam
in
rcr
jae
ins
mov
nop
xchg
fs
cmp
xor
loop
movs
mov
inc
and
lods
sbb
mov
push
inc
lods
and
xor
fnsetpm(287
push
mov
retf
xor
js
hlt
repz
pop
adc
ins
pop
mov
fadd
xor
push
lods
pop
test
mov
scas
stos
stos
push
dec
in
mov
add
mov
push
cmp
in
and
mov
icebp
adc
int3
pop
push
(bad)
lods
pop
fwait
mov
or
or
push
xchg
xchg
pushf
iret
jne
and
std
and
jmp
div
mov
jp
cdq
xchg
mul
xchg
mov
sti
je
sahf
dec
xchg
sbb
int3
sub
call
sbb
dec
mov
and
mov
pushf
or
sbb
ins
movs
add
out
mov
xor
and
mov
sub
and
push
push
leave
adc
aam
lock
pushf
xchg
mov
lods
cld
add
xchg
fdivr
in
cmps
loopne
fild
sbb
mov
movs
jle
push
sub
cmp
cmp
xchg
or
mov
lahf
jp
add
popf
enter
pusha
gs
add
aas
add
je
sbb
mov
test
xchg
imul
(bad)
pop
fs
retf
pop
push
push
call
push
subps
sbb
push
lea
sti
clc
hlt
xchg
xchg
mov
cmc
sbb
iret
int3
enter
jne
inc
inc
clc
cmp
sub
dec
inc
inc
jb
aam
xor
dec
dec
dec
sbb
xor
xor
xor
test
fdivr
inc
ds
cmp
loop
repz
adc
push
mov
stos
outs
iret
fwait
pop
in
int3
leave
les
lds
mov
movs
or
fistp
mov
push
pop
call
outs
cwde
add
and
leave
inc
xchg
adc
aam
mov
pop
cmp
mov
mov
outs
(bad)
out
icebp
repnz
or
dec
xchg
int3
push
cli
mov
and
loope
push
bound
or
or
iret
stc
xor
xor
(bad)
int
pop
sbb
and
das
sbb
jl
nop
div
or
aad
outs
push
jbe
xor
xor
test
pop
js
pop
push
ret
jno
fcomp
push
dec
push
push
nop
push
test
mov
adc
adc
cdq
js
(bad)
mov
cmps
repz
js
sbb
ror
dec
stos
movs
ins
jbe
ror
sbb
adc
jae
jno
je
xchg
test
ds
dec
sub
cmc
shr
push
pop
js
mov
mov
jp
pushf
(bad)
cmp
cld
or
inc
dec
in
dec
adc
cs
sbb
add
mov
cmp
cmp
fwait
test
jmp
cmp
cmp
daa
clc
jge
test
int3
lock
in
pop
movs
clc
mov
lods
loopne
daa
and
es
and
mov
mov
mov
xchg
pop
xor
hlt
dec
cli
xchg
sbb
sahf
cdq
rcl
dec
sbb
cli
mov
test
pop
adc
aaa
mov
leavew
test
cmp
iret
ret
mov
push
mov
pop
xor
in
out
xor
and
jmp
js
jmp
imul
shr
cli
dec
movs
test
cmp
inc
mov
test
test
jp
out
hlt
cmp
sub
pop
cwde
lahf
sbb
js
test
int3
xchg
les
dec
imul
pop
hlt
rcr
cdq
xor
mov
push
les
ins
mov
and
mov
test
lods
mov
imul
call
adc
mov
dec
lods
movs
into
sub
scas
fidiv
and
inc
call
cmp
fcmovbe
cli
mov
rol
push
retf
ret
je
mov
test
xor
sub
and
movs
pop
and
mov
push
lods
into
mov
xchg
cdq
je
rcr
dec
jns
aaa
inc
jae
pop
jge
out
cld
adc
add
addr16
add
jne
cmp
xchg
in
xchg
mov
fsubr
lods
pop
fwait
nop
pop
mov
fisttp
mov
ins
mov
xchg
sub
xchg
mov
cli
in
lods
mov
ds
mov
std
in
lods
cmps
cmp
bound
or
outs
loope
aam
pop
inc
mov
lds
retf
loopne
sub
rcr
iret
xor
js
fxch
mov
jo
cmp
mov
mov
and
test
xchg
fisub
popf
scas
pop
cdq
test
int3
js
cld
pop
nop
pop
pop
sub
xor
jmp
nop
cli
and
pushf
js
xchg
(bad)
fisttp
mov
out
imul
xchg
stos
mov
jo
fwait
cmp
adc
mov
lods
cmps
jne
mov
ins
mov
mov
jns
xchg
nop
inc
test
xor
imul
les
sti
int3
mov
hlt
gs
lods
test
retf
mov
push
fldcw
mov
(bad)
jae
test
mov
jmp
mov
into
(bad)
sub
mov
pushf
pop
xor
cld
pop
xchg
xchg
cwde
mov
enter
pop
mov
in
or
cmp
pushf
sbb
fwait
xlat
mov
in
xchg
clc
adc
xchg
xchg
pusha
pop
mov
test
xchg
sbb
add
fwait
mov
lock
push
imul
or
push
mov
movs
xchg
xchg
and
cld
mov
cdq
sbb
pop
push
test
mov
mov
je
sub
mov
fimul
shl
das
xchg
push
pop
je
fld
fidivr
aad
jg
test
cmp
shl
mov
fwait
adc
repz
adc
xor
jp
dec
inc
inc
jg
sbb
dec
cmp
or
in
pop
std
adc
outs
add
add
sti
push
out
push
nop
mov
and
cmc
mov
hlt
js
xor
mov
add
in
or
in
ror
xchg
mov
movs
mov
mov
fldenv
in
jne
mov
dec
adc
ins
pop
mov
pop
test
je
xor
out
mov
mov
pop
mov
sar
xlat
rol
mov
lods
mov
(bad)
shr
repnz
pushf
cwde
js
aad
jns
xchg
mov
fcmovnbe
aad
pop
jmp
rcr
xor
int3
sub
test
dec
pop
jne
and
jnp
adc
pop
ins
daa
inc
ja
out
or
pop
xor
int
mov
int3
pop
nop
xchg
mov
cmp
pop
jns
inc
sub
jp
lods
mov
add
test
fcomp
sbb
mov
mov
jbe
test
sub
popf
sbb
xchg
mov
mov
fstp
inc
mov
rcl
mov
sub
jne
in
sub
mov
cld
inc
xchg
(bad)
mov
adc
sub
or
add
inc
rcl
cmp
jmp
sahf
sbb
push
sbb
sub
test
xor
hlt
pushf
test
inc
sbb
push
xor
sub
cmc
cli
xor
cmc
je
int3
sub
xor
jns
add
nop
pushf
out
sub
rcr
mov
fs
mov
add
in
pusha
popa
cli
and
xchg
mov
lds
mov
test
sbb
out
stos
adc
or
mov
push
test
cli
jg
push
hlt
lods
(bad)
mov
leave
(bad)
fcmovbe
shl
push
inc
aam
push
push
adc
cwde
mov
aam
leave
mov
cmp
push
popf
lock
jbe
mov
in
ret
movs
call
js
pop
add
dec
jecxz
je
or
xor
jo
loope
icebp
mov
xor
dec
xchg
or
fdivr
cdq
js
(bad)
lods
fdiv
push
(bad)
cmp
pop
fs
xor
pop
fmul
std
xor
fisttp
add
test
pop
push
mov
or
(bad)
push
mov
int3
pusha
xor
je
test
nop
fsub
repnz
mov
movs
jmp
mov
ins
shl
mov
mov
leave
(bad)
shl
stos
fdiv
daa
in
mov
xor
jo
cmp
fs
cmp
add
hlt
int3
pop
add
call
les
dec
nop
not
jne
add
mov
iret
ja
adc
mov
pushf
loopne
in
sub
mov
xor
je
jl
adc
pop
inc
inc
adc
adc
jne
jecxz
pop
cs
test
jne
xchg
push
pop
std
xor
adc
jl
xchg
or
nop
cmc
cld
je
mov
sbb
pusha
pop
sahf
xor
xor
mov
xor
mov
push
mov
xchg
pusha
pop
(bad)
movs
test
mov
pusha
cld
mov
xor
les
aad
xor
or
loop
std
xchg
and
les
cmp
shr
sahf
push
push
or
cli
mov
xor
in
mov
pop
mov
fld
lods
nop
sbb
mov
(bad)
in
in
cld
and
cmps
and
js
loope
mov
mov
in
not
xor
sub
and
in
in
inc
stos
sahf
call
xor
mov
(bad)
je
jo
pop
pop
jle
aam
xchg
push
clc
xor
sar
mov
enter
push
in
nop
or
int3
pop
(bad)
enter
ja
iret
retf
xchg
jns
rcl
mov
mov
add
inc
dec
mov
cmp
push
iret
jl
jns
movntps
ss
aad
mov
xchg
xor
adc
call
call
dec
xor
je
xor
mov
jne
add
ins
sbb
ret
push
xchg
inc
add
mov
imul
cld
sub
pushf
adc
xor
mov
jb
lods
mov
stos
sti
fdivr
pusha
add
mov
mov
pop
sub
mov
jmp
lea
mov
or
inc
(bad)
fcomp
popa
into
retf
push
mov
jl
xchg
and
sub
in
movs
scas
mov
les
push
jp
jecxz
adc
ret
add
sub
xor
jge
xchg
sbb
fldcw
int3
test
in
hlt
imul
xlat
test
cli
mov
cmp
inc
inc
mov
push
aas
adc
scas
aam
repz
dec
gs
inc
xchg
mov
xchg
jp
sahf
xchg
xchg
push
sub
or
xlat
retf
(bad)
cmp
fdiv
aam
nop
std
les
test
push
ror
icebp
pusha
pop
stos
cmp
jl
cmps
mov
xchg
in
scas
aas
jne
movs
cmc
mov
mov
dec
jl
lods
or
frstor
fcomp
shl
aad
cmp
mov
rol
xchg
mov
les
sub
sbb
jmp
sub
fdivr
clc
fsubr
pop
stos
mov
jns
mov
into
call
jl
fmul
sahf
dec
cmc
cmc
bnd
push
push
add
push
or
in
push
out
sbb
jns
mov
call
mov
mov
call
lods
jo
hlt
out
jmp
dec
std
call
je
lods
mov
jmp
call
pop
mov
data16
inc
fnstcw
xor
lds
mov
mov
test
call
xchg
jl
mov
cmp
pop
adc
dec
and
int3
loop
xor
add
je
sbb
inc
mov
call
cmp
mov
or
mov
mov
xor
cwde
jne
push
setp
dec
dec
jp
imul
ror
xor
into
cli
in
mov
mov
int3
cmp
cmp
cwde
retf
xchg
sub
push
add
sbb
clc
repnz
jo
aad
mov
push
or
jns
icebp
(bad)
fmul
mov
mov
pop
out
jl
cmp
jl
jge
(bad)
(bad)
out
fdiv
test
push
sbb
in
inc
cld
cwde
call
test
fwait
out
add
pop
cmp
je
jmp
movs
cmps
lods
add
adc
xor
or
call
inc
add
cli
loopne
mov
lock
aam
mov
mov
sub
and
or
repnz
stc
(bad)
enter
dec
pusha
call
inc
inc
add
jmp
or
fist
jge
jl
xchg
iret
inc
and
jl
xchg
jb
cld
push
std
dec
test
sub
clc
loopne
rol
pop
pop
push
fsubr
jns
into
mov
mov
movs
adc
sbb
mov
jl
imul
call
mov
mov
sub
cld
mov
int
retf
mov
lods
stos
sbb
stos
cld
cld
lods
mov
sar
push
and
clc
sbb
js
mov
in
sti
adc
sahf
cld
cwde
lahf
sbb
call
push
adc
pusha
inc
mov
data16
jnp
bound
pop
dec
in
call
and
jmp
inc
inc
sbb
in
dec
call
loopne
mov
mov
nop
shl
inc
xchg
(bad)
cwde
mov
popf
cmp
lds
les
gs
adc
imul
or
or
out
or
aam
jl
rol
loop
and
jl
xchg
ror
push
fstp
pop
jl
imul
push
cld
movs
add
inc
xchg
scas
pop
jl
js
movs
movs
adc
ficomp
js
fcomp
sbb
loop
jmp
lock
call
jne
cli
sbb
js
sbb
pop
mov
cmc
cwde
pop
scas
cld
jbe
jmp
sub
femms
add
xchg
sub
cld
adc
and
xchg
fistp
inc
xor
pop
push
test
inc
es
movs
data16
js
adc
sub
mov
mov
push
add
sahf
je
in
je
xchg
int
aam
in
mov
adc
adc
aam
aas
enter
(bad)
int3
clc
retf
sar
inc
xor
stc
jl
pushf
and
adc
sub
nop
fwait
mov
xchg
test
sbb
cmp
sub
sub
clc
imul
int3
inc
in
and
and
jl
sub
nop
pop
push
adc
push
sahf
les
mov
cmp
jmp
and
pop
mov
inc
cmp
adc
dec
xchg
dec
addr16
shr
push
cmc
jb
pusha
jbe
popa
and
adc
xor
adc
xchg
mov
test
mov
mov
les
hlt
jne
adc
jl
sbb
jmp
(bad)
in
in
icebp
cli
mov
and
push
mov
add
sub
mov
push
mov
sub
xchg
mov
call
jg
mov
(bad)
call
jl
pop
lods
test
scas
sbb
jmp
adc
jl
je
push
test
xor
fs
or
mov
cli
pop
add
cwde
je
hlt
push
adc
scas
scas
xor
mov
add
nop
cmp
cmp
hlt
mov
dec
pminsw
mov
in
iret
xchg
pop
dec
shr
sub
cmp
es
mov
js
mov
sub
push
sbb
jo
sete
jl
movs
out
pop
js
leave
clc
jl
push
add
xchg
push
add
cmp
push
call
lea
js
adc
pop
or
mov
popf
jne
call
loopne
sti
add
jl
jl
adc
out
cmc
pop
add
mul
adc
jae
fisub
int3
in
fucomi
inc
mov
lods
sbb
jbe
cmp
or
fmul
cmp
pusha
or
push
or
scas
fwait
xor
add
jo
add
cmp
jne
xchg
je
mov
xor
sbb
xchg
adc
les
ds
imul
mov
mov
nop
xor
out
je
jl
(bad)
pusha
ja
mov
mov
loop
movs
sub
pop
sahf
cwde
xchg
pop
test
or
adc
cmp
cs
mov
movs
pop
or
add
repnz
idiv
stc
xchg
js
cmc
inc
and
sub
pusha
in
repz
sbb
in
pusha
(bad)
adc
jl
add
cwde
jg
push
imul
push
inc
push
mov
jl
dec
cmp
jo
adc
sbb
xor
cwde
call
popf
fdivr
stos
mov
jne
in
cmp
test
sbb
mov
or
in
and
pop
or
rol
push
mov
xor
xchg
jl
(bad)
mul
pop
pop
enter
pop
dec
xchg
mov
adc
int
inc
pop
call
stos
push
pusha
add
xor
jl
test
mov
inc
js
push
or
sti
add
js
adc
sub
shr
mov
sub
inc
pop
hlt
call
call
adc
cmp
mov
xor
gs
dec
dec
enter
vfnmsub231ps
nop
in
cwde
mov
mov
sub
xor
nop
imul
cli
dec
jmp
je
test
jmp
(bad)
jp
add
loope
xor
jns
or
fs
jmp
mov
mov
jl
jge
add
or
aam
js
(bad)
mov
call
cmc
sub
les
pop
cwde
adc
xchg
enter
cmc
lock
sahf
inc
js
ds
inc
mov
pushf
add
mov
test
leave
sti
add
lock
les
inc
add
cmp
add
push
push
sub
mov
inc
das
test
fdiv
xor
lods
xor
ins
jo
mov
and
in
jl
xchg
mov
scas
mov
leave
call
or
sti
adc
clc
fist
mov
fs
test
push
mov
lods
xchg
xchg
outs
mov
dec
cli
cwde
mov
mov
shr
pop
jl
push
enter
in
test
lock
loopne
add
xchg
or
and
xchg
test
call
(bad)
mov
jne
jecxz
pop
test
mov
mov
push
stos
pop
cmp
xchg
repz
adc
rol
lods
push
push
in
jl
das
xor
inc
inc
es
sub
push
push
pop
sbb
mov
lods
mov
jge
pop
xchg
aad
and
pushf
cmp
sar
and
push
add
xlat
shr
inc
(bad)
cmc
sbb
adc
in
aad
mov
mov
jl
mov
loopne
retf
je
fcom
shr
movs
push
jb
fwait
pushf
jmp
je
test
xor
lock
lods
out
mov
push
mov
jmp
lea
cwde
xchg
inc
shr
lea
push
push
pop
pop
xchg
xchg
jl
fist
cmp
shl
test
enter
test
mov
and
and
clc
mov
in
mov
cld
and
mov
imul
dec
das
sbb
xchg
mov
mov
movs
sbb
inc
sub
add
movs
xchg
push
icebp
add
lods
push
(bad)
jl
mov
mov
cld
fdiv
jns
lods
les
loop
sub
adc
xchg
push
dec
les
xchg
lea
mov
in
sbb
test
add
cwde
cld
in
mov
pushf
repz
mov
fadd
repz
xor
call
jle
push
mov
sub
outs
mov
dec
js
and
clc
js
lahf
ror
mov
mov
mov
sbb
sbb
xor
enter
outs
mov
out
cmp
out
je
push
xor
mov
jmp
sub
xchg
fisubr
add
jne
jb
pushf
les
add
pusha
test
mov
xchg
cld
xchg
mov
cwde
test
cdq
cld
(bad)
fnsave
push
lods
js
int3
int3
dec
sbb
in
push
ficomp
sahf
xchg
test
xor
je
pop
int3
and
pop
xor
fild
jg
mov
jl
js
add
(bad)
int3
or
mov
jle
call
out
add
aad
clc
fwait
cdq
jmp
xchg
bound
mov
test
dec
and
in
push
adc
cmp
jecxz
jl
push
adc
mov
jl
loopne
push
mov
dec
mov
push
rol
jl
test
jne
lods
stos
test
bound
jl
icebp
test
enter
jle
call
and
or
(bad)
jmp
adc
mov
and
stos
adc
movs
call
xchg
inc
je
(bad)
test
xchg
hlt
push
cmps
xchg
rcr
mov
fucomp
and
xchg
popf
test
push
xchg
xchg
ds
cli
xor
mov
or
pop
or
fdivr
je
adc
js
pop
dec
inc
mov
or
fiadd
test
xor
mov
jo
and
or
jl
jl
stos
clc
mov
aam
and
data16
mov
xchg
shr
xor
stos
jmp
rcr
or
push
int3
jp
lods
lahf
xchg
(bad)
cld
xor
push
jne
cmp
mov
lea
pop
xor
lahf
ds
mov
mov
test
mov
xchg
or
inc
cwde
and
popf
test
xchg
fistp
cmp
cli
pushf
adc
sub
mov
inc
jmp
jmp
je
cmp
and
dec
cmp
jns
mov
xchg
pop
jl
mov
push
mov
imul
xor
dec
push
adc
mov
fadd
mov
mov
test
pop
loope
in
cmps
jne
or
pop
out
js
in
in
(bad)
mov
les
xor
fidivr
fwait
mov
ins
push
dec
jo
stos
jo
or
imul
iret
jae
xlat
daa
sti
mov
clc
and
std
les
hlt
loop
adc
pop
mov
mov
adc
or
iret
mov
cmps
fs
jl
xchg
jl
icebp
fstp
cmp
daa
sti
pushf
ja
pushf
dec
inc
inc
test
jl
(bad)
pushf
ret
xor
inc
or
mov
cs
mov
adc
push
xor
nop
cld
jno
ror
push
ins
pushf
mov
lods
stos
xor
nop
nop
mov
add
imul
sbb
enter
(bad)
ror
js
mov
scas
sub
sbb
mov
mov
fxch
mov
and
mov
(bad)
mov
rol
(bad)
out
clc
mov
test
test
pop
stos
dec
or
cwde
push
cmp
xchg
mov
call
fdiv
loop
out
xor
test
sbb
sub
nop
xor
mov
(bad)
std
fsubr
fnstcw
mov
mov
mov
aam
sub
in
out
lods
in
stos
std
nop
xor
pop
inc
adc
xor
push
cmp
adc
js
std
mov
sbb
test
sti
out
in
jbe
(bad)
pop
div
enter
jmp
adc
sub
sub
js
sbb
cld
test
icebp
mov
fwait
jmp
xor
rcl
(bad)
test
pop
shl
aas
data16
call
popf
mov
ins
mov
ret
pop
daa
wbinvd
jae
(bad)
clc
inc
repnz
adc
fdivr
inc
xor
sub
adc
cmp
push
or
mov
mov
repz
xlat
in
imul
sub
pop
(bad)
je
icebp
jmp
push
push
sbb
fcmovbe
xor
retf
and
pop
mov
int
ud2
or
mov
and
cmp
sbb
test
fwait
add
mov
or
mov
cwde
and
jmp
movs
cwde
outs
(bad)
mov
cmc
mov
jne
rcr
pop
pushf
cmp
lahf
les
call
retf
xor
cmps
fldenv
fadd
loope
sub
xor
and
ds
jae
addr16
fs
call
ins
fucomp
fdivr
pop
les
jp
xchg
and
adc
mov
rcl
pop
call
push
mov
add
lock
cwde
sbb
push
sbb
mov
cmp
cmp
xor
lods
imul
jbe
loope
or
mov
inc
pop
mov
enter
xor
movs
(bad)
std
loopne
int
push
in
enter
add
fdivrp
out
pushf
sbb
fistp
lods
cwde
outs
data16
test
xor
jne
mov
test
into
retf
outs
and
psubq
js
or
das
test
add
fsubr
rcl
enter
jl
out
mov
out
loope
xor
mov
imul
adc
push
cmp
jp
adc
or
cmp
or
mov
add
shr
hlt
bound
mov
mov
adc
dec
imul
inc
retf
(bad)
hlt
xchg
xor
sub
ret
xor
sar
mov
rcr
(bad)
(bad)
mov
in
cmp
pushf
xchg
cdq
jmp
in
cmps
test
push
xchg
nop
js
js
jmp
loopne
lods
mov
clc
jp
pop
repnz
call
pusha
outs
arpl
pusha
push
dec
adc
or
mov
mov
cwde
mov
js
les
jmp
mov
sar
hlt
repnz
add
cld
and
cmp
sub
pop
cmp
pop
fadd
(bad)
jns
movs
mov
cli
add
xor
lea
mov
jns
call
les
dec
imul
stc
cmc
out
icebp
jmp
test
inc
movs
sbb
mov
adc
cwde
js
or
mov
pop
jl
lea
pusha
xchg
js
xchg
lock
jmp
loope
sub
and
push
fistp
pop
test
xor
fadd
jl
scas
stos
test
in
add
mov
cmps
cmps
lods
push
rcl
or
xchg
(bad)
cmp
enter
mov
and
sub
mov
fs
jle
mov
div
repnz
push
or
sub
xchg
inc
cmp
jne
nop
mov
xchg
mov
pop
test
cmp
push
mov
jne
inc
dec
cs
call
(bad)
mov
adc
pop
ins
adc
cli
and
pop
out
jmp
and
cdq
popf
mov
inc
xor
test
mov
test
repz
jne
cmps
jl
jp
test
das
mov
mov
jp
lahf
pushf
(bad)
nop
loopne
stc
test
cmps
das
js
xchg
mov
xor
mov
mov
mov
(bad)
dec
je
jle
inc
mov
cmp
pop
xor
pop
add
inc
retf
pop
xchg
jmp
inc
adc
mov
sub
add
clc
xchg
xchg
mov
clc
test
fs
mov
cmps
mov
js
into
mov
int3
mov
mov
int
pop
js
jmp
mov
xor
mov
jl
enter
cwde
xchg
jl
fdivr
mov
pop
push
jmp
push
sbb
adc
cld
xchg
xor
shl
sub
in
loope
jne
hlt
xchg
ret
pop
hlt
pop
lock
mov
push
sbb
int3
pushf
add
or
xor
cmp
sub
inc
(bad)
daa
ror
imul
mov
and
jecxz
dec
xor
sbb
or
or
(bad)
jmp
cmp
ds
adc
jge
push
push
add
rcl
jp
(bad)
jmp
and
addr16
cmp
iret
enter
xchg
dec
sbb
pusha
out
lds
cmps
mov
enter
dec
hlt
mov
out
jl
data16
js
mov
lock
(bad)
sti
jo
cmp
loope
xchg
(bad)
cli
adc
or
(bad)
pop
adc
mov
jns
or
fisubr
jae
fstp
or
jns
add
xchg
lods
push
mov
mov
jge
sti
div
lea
loope
enter
add
jl
ret
std
sub
into
jmp
adc
fistp
nop
loope
sbb
sbb
inc
mov
mov
(bad)
shr
push
sbb
sbb
shl
push
movs
pop
dec
jmp
mov
mov
and
data16
popf
test
pop
add
xor
stos
pop
dec
cmp
add
jmp
mov
cli
jl
fnsave
adc
subps
leave
cmc
dec
cmp
lock
fidiv
mov
in
test
jmp
xor
test
test
adc
mov
sub
ins
dec
clc
pop
icebp
mov
mov
stos
xchg
add
fild
push
cmps
jo
mov
add
sbb
mov
adc
test
xor
dec
in
ins
mov
je
pop
and
in
in
enter
xchg
sub
jge
in
mov
mov
out
cmc
repz
and
fdivr
pusha
jae
xor
push
jl
cwde
pop
xchg
xchg
push
adc
jns
inc
sub
mov
or
add
mov
push
push
and
in
mov
adc
push
sub
js
ret
sbb
or
sbb
lock
cmc
out
push
add
in
adc
fcom
xlat
js
dec
stc
inc
jae
leave
mov
sbb
adc
fisub
mov
pop
cmp
xor
stos
pop
movs
mov
jl
sqrtps
bound
repnz
shr
adc
cli
pop
push
push
ss
pop
xor
int3
jl
ror
pop
xchg
pop
pop
pop
fisubr
js
push
sbb
ret
adc
jae
fldcw
and
sub
sub
test
dec
ds
inc
xor
pop
pop
adc
iret
sub
sbb
mov
cmc
hlt
fdiv
nop
xchg
and
or
and
cmp
mov
out
xchg
test
xor
jae
or
cli
(bad)
sahf
test
rcr
call
leave
sbb
jmp
mov
ins
fwait
scas
lods
push
cmp
sar
jne
jg
mov
fidiv
inc
inc
les
js
jmp
call
test
je
iret
call
mov
pop
icebp
push
or
call
add
lds
mov
dec
pushf
inc
lods
lods
loopne
xor
sub
lock
enter
dec
mov
(bad)
fidivr
xchg
jb
test
cmps
push
fcmove
popa
mov
dec
jne
loop
and
xor
push
ins
cmp
mov
lods
or
or
mov
jbe
xchg
mov
lods
data16
mov
sub
cs
mov
mov
test
inc
int
clc
xchg
(bad)
mov
js
mov
lods
mov
fdiv
js
jl
pop
aad
bound
pop
sub
cmc
mov
push
or
pop
loope
xor
je
xor
mov
lods
add
push
fnstsw
mov
pop
dec
test
movs
xchg
xor
loopne
data16
in
inc
cwde
cmp
jns
sub
test
mov
mov
sbb
je
pop
xor
jl
js
cmps
enter
in
movs
popf
cdq
fadd
push
js
pop
test
sbb
mov
stos
xor
xchg
dec
fmul
inc
bound
(bad)
jo
mov
mov
pop
push
xchg
xchg
test
je
popf
add
add
cli
js
lahf
dec
mov
mov
in
mov
jmp
jle
ss
loope
mov
mov
jl
ror
mov
leave
jle
ins
jp
jo
les
test
pushf
fsubr
adc
fadd
mov
nop
bound
rcl
push
mov
ins
fmul
inc
push
ins
sub
or
push
shl
add
jo
aam
nop
xor
shl
lods
hlt
push
pusha
je
adc
fdiv
fdivr
cmps
mov
sub
(bad)
mov
imul
das
mov
adc
fs
loopne
imul
rcl
pushf
inc
aam
scas
fiadd
int3
je
push
(bad)
retf
xchg
xor
or
dec
das
mov
rol
ret
adc
dec
push
xor
mov
enter
fidivr
dec
push
mov
fistp
in
sub
xor
mov
sbb
call
xor
je
ins
enter
test
cmp
loope
clc
std
je
jg
in
lss
mov
aam
mov
shr
or
lahf
add
ret
(bad)
mov
and
mov
shl
fidivr
ins
gs
pusha
xor
mov
dec
pop
js
lahf
lods
inc
(bad)
adc
nop
mov
lods
push
adc
adc
jo
ins
sbb
es
mov
and
icebp
xor
je
adc
js
shl
shl
enter
fstp
and
cld
(bad)
inc
iret
inc
jl
jbe
xchg
test
test
xchg
fmul
(bad)
out
clc
cmp
sub
int3
enter
ror
hlt
or
xchg
pushf
sete
push
inc
fidiv
fdivr
wbinvd
aam
adc
cmc
jbe
js
add
adc
int3
cdq
into
ficom
mov
les
jmp
mov
pop
mov
xchg
jmp
das
mov
aad
retf
jno
jp
mov
lods
mov
add
js
enter
xchg
js
aam
xchg
fld
test
js
jl
jnp
xchg
push
mov
mov
jo
js
and
add
xchg
sub
inc
pop
daa
cmp
or
mov
adc
retf
jns
mov
jne
inc
enter
cmp
xor
push
dec
and
xor
ja
cmps
or
xor
hlt
jns
inc
xor
out
jns
xchg
and
add
ret
and
iret
dec
pop
ds
repnz
enter
inc
in
sub
or
rcl
js
out
dec
jg
dec
bnd
scas
inc
xchg
loopne
add
data16
fcomp
clc
pop
cmc
mov
call
mov
mov
push
sub
xchg
test
lahf
push
push
loope
leave
mov
(bad)
jg
cmp
push
inc
xor
test
loope
(bad)
dec
pop
xchg
add
mov
jbe
ja
and
test
data16
sbb
dec
into
movs
xor
imul
shr
dec
rcr
aas
imul
inc
add
leave
sahf
sbb
cmps
jne
mov
push
mov
test
shr
mov
pusha
leave
or
xchg
je
mov
jmp
shl
mov
inc
js
xchg
ss
add
adc
js
inc
popa
mov
push
and
dec
mov
out
jl
and
ins
push
mov
inc
mov
pusha
adc
je
dec
mov
in
stos
mov
pop
daa
pusha
adc
mov
ret
ins
mov
das
shl
mov
or
ins
push
mov
jno
cwde
push
add
mov
js
pop
sub
nop
inc
jns
pop
jno
dec
jp
outs
lahf
and
xchg
adc
sub
and
add
mov
push
xor
adc
aaa
inc
fldenv
mov
mov
call
jae
adc
mov
push
push
js
push
xor
test
ds
jne
and
dec
nop
jmp
sbb
je
add
dec
inc
enter
loopne
test
mov
push
mov
js
in
rcr
and
pusha
or
or
mov
iret
fmul
rcl
je
(bad)
cmc
push
imul
mov
push
test
call
and
aam
xor
jl
sar
pcmpeqb
xor
sub
aam
pusha
cmp
or
gs
add
xor
push
je
jp
into
lds
or
jl
add
push
mov
js
cmp
or
js
push
iret
xchg
add
rcr
js
fld
push
shr
div
cli
cmp
cwde
or
sub
jg
sub
je
ret
adc
xchg
cli
adc
into
jo
sub
scas
add
imul
loope
cmp
daa
sub
sbb
lea
jo
out
jnp
test
rcl
push
je
inc
sar
outs
fiadd
cmp
fcomp
pop
xor
or
pop
xor
push
add
shr
lods
ins
cwde
pop
mov
shl
push
xor
ins
cs
mov
ins
xor
push
pusha
cmp
scas
fidivr
inc
sbb
ror
sub
push
adc
xor
cli
je
jg
sbb
add
inc
jmp
pop
imul
jmp
mov
cdq
xchg
xchg
dec
mov
push
call
sbb
mov
fidivr
idiv
xor
pusha
xor
push
and
test
and
je
and
jp
sub
scas
sar
sub
daa
sbb
push
ficom
mov
mov
push
adc
push
lock
or
push
cmps
stos
pushf
fstp
xchg
ds
jg
test
hlt
enter
stc
sub
in
(bad)
cmc
push
push
int3
mov
test
add
push
sub
mov
mov
xor
ror
fcomp
mov
lock
movs
and
push
xor
lods
ja
dec
pop
mov
cwde
sub
lock
into
fs
sub
push
out
aad
and
adc
dec
sub
or
int3
bound
mov
xchg
pushf
push
dec
inc
add
inc
imul
sbb
pop
ror
xor
or
jp
movs
push
ds
jl
fiadd
ja
js
(bad)
movlps
hlt
pusha
imul
(bad)
std
mov
xor
jp
cmp
sub
(bad)
xor
(bad)
cmp
nop
and
scas
cmp
es
pop
mov
adc
dec
call
js
or
cmp
push
pop
cld
push
dec
dec
rol
les
xor
das
sbb
sub
sbb
xor
push
loopne
cmp
cmp
ins
pop
test
dec
stos
js
test
pusha
stos
repz
cwde
mov
mov
pop
das
dec
cli
pop
pop
push
cli
hlt
sub
mov
ins
sub
pop
aaa
sbb
push
and
sar
enter
repz
test
mov
dec
pop
cwde
shl
and
in
addr16
ins
xor
mov
and
call
repnz
dec
push
dec
cmp
inc
repnz
and
sbb
movs
or
xor
enter
jecxz
push
and
loopne
push
jmp
adc
inc
cmp
dec
cwde
les
inc
test
dec
call
mov
js
fdivr
call
jmp
aam
inc
cmp
loopne
dec
into
mov
jo
cdq
rcr
push
pop
cmp
push
(bad)
and
sar
and
inc
pop
aam
sub
cmp
sbb
and
jne
mov
fcomp
cmp
push
pop
jo
jge
(bad)
clc
fadd
sbb
pusha
push
push
loop
cs
pushf
xor
adc
call
call
nop
and
jl
enter
mov
ins
push
dec
mov
or
mov
push
sub
inc
jne
xor
cwde
jne
call
mov
cs
add
jno
sub
test
sub
sbb
sub
cmp
adc
jae
push
or
adc
stos
fst
popa
jo
xchg
xlat
movs
mov
lock
imul
xor
cmp
clc
scas
repnz
retf
repz
dec
pop
mov
jbe
sub
jnp
iret
(bad)
push
into
cwde
fcom
or
fsub
(bad)
mov
(bad)
mov
gs
mov
test
clc
and
pusha
xor
fiadd
js
shr
shr
jns
xor
nop
sar
pusha
push
enter
(bad)
or
loopne
push
int3
fsub
jbe
push
loope
sbb
and
in
add
es
call
addr16
mov
jbe
test
jne
pusha
hlt
popa
jmp
jecxz
in
arpl
push
push
ja
inc
cmp
xchg
inc
fcom
movs
imul
pop
sub
daa
and
jns
das
fimul
in
jmp
jnp
pop
push
mov
enter
jbe
xor
jae
inc
std
stc
or
lods
or
mov
and
or
int3
mov
in
push
movs
or
lahf
sbb
hlt
pop
jl
into
pop
out
imul
ins
dec
pop
int3
sub
idiv
repnz
push
jge
pop
jp
add
nop
sub
pop
jns
jno
xchg
and
in
and
add
call
and
mov
pop
in
jnp
jb
movs
ins
push
leave
daa
mov
push
sahf
push
push
sub
adc
jbe
pop
daa
les
mov
sbb
sbb
popa
in
inc
sbb
test
xor
or
jo
pop
jne
aas
stos
sbb
lods
xor
call
push
and
push
pop
xor
xor
push
xor
pop
je
and
add
jbe
sub
je
sub
out
push
pop
pop
and
sub
outs
mov
retf
je
or
movs
mov
sub
jle
sub
mov
cmps
dec
jns
xor
mov
sub
fs
cmp
dec
dec
and
or
cld
psubsb
imul
push
pop
xor
sbb
lods
ret
sub
pop
ins
je
mov
ins
add
dec
inc
daa
in
xor
and
ss
dec
push
jmp
dec
dec
sub
call
add
or
sub
xchg
or
loopne
pop
cdq
adc
sub
sub
lock
mov
stos
int3
adc
and
aam
imul
shr
(bad)
ins
movs
xor
push
xor
jo
cmp
mov
aam
out
jo
dec
or
and
mov
sub
nop
sbb
pushf
and
cs
loopne
gs
pop
rol
jo
sub
pop
sub
cmp
and
sub
pusha
and
les
mov
mov
js
sub
loop
ins
lock
fdiv
das
mov
sbb
push
push
sbb
jo
add
js
aad
nop
mov
add
cmps
jg
in
and
cmc
ins
sbb
push
sub
sub
cs
and
jecxz
jmp
mov
pop
out
lods
jge
pop
pop
pop
cmp
fmul
je
pushf
inc
or
int
pop
(bad)
cmp
js
push
je
daa
iret
test
pop
cmp
sub
popa
sbb
mov
sub
pop
push
pop
adc
in
inc
mov
or
and
mov
and
sub
fdivr
sub
aaa
in
and
jae
add
out
test
dec
push
mov
test
ins
fcomp
mov
sub
sub
in
pushf
dec
and
call
sub
xchg
cwde
mov
loop
in
rcl
sbb
and
mov
sub
mov
jne
cmp
ja
push
loope
inc
xchg
or
inc
cmp
sbb
fist
push
xor
repnz
movs
mov
inc
jp
es
fldcw
jp
add
idiv
call
popf
lods
out
lea
or
in
je
mov
cmp
int
jp
mov
out
je
jl
adc
(bad)
cli
inc
cmp
jmp
ins
or
pop
pop
scas
call
ja
push
and
jno
and
imul
hlt
xor
mov
inc
cmp
aaa
xor
fadd
pop
or
pop
ss
adc
sub
pop
pop
loope
cdq
pop
mov
sub
xor
sbb
sub
and
fadd
call
jbe
add
sub
jl
and
sub
mov
mov
mov
jecxz
xor
mov
push
fsubr
cmc
pop
lods
les
xor
dec
xor
xor
das
fisttp
gs
xor
outs
sbb
sub
mov
sar
das
mov
loopne
imul
xor
mov
push
loop
jl
mov
je
adc
arpl
lods
xor
cmp
sub
jmp
in
jae
inc
jmp
push
sahf
call
sub
js
xor
fisttp
cmp
dec
mov
test
jns
ss
ja
xor
scas
jb
jne
push
fistp
lock
jns
pop
sbb
mov
repz
loopne
inc
add
cwde
mov
imul
cmp
or
push
es
adc
and
enter
and
nop
fild
ins
clc
mov
je
fsubr
adc
js
jns
push
push
jp
pop
push
out
push
movs
repnz
stc
pop
pop
and
sub
and
jae
dec
dec
or
xchg
dec
push
lock
test
dec
add
int3
push
es
ss
(bad)
in
xor
xchg
xor
jecxz
rcl
and
push
mov
shl
(bad)
cli
pushf
lds
push
bound
js
adc
inc
adc
dec
loopne
sub
sbb
cld
inc
add
fcom
fst
add
sbb
std
test
jp
push
push
repz
jne
inc
cmp
cmp
sub
aad
inc
xor
or
sbb
ins
imul
adc
sub
cld
test
xor
leave
ins
xchg
retf
cli
inc
push
or
jl
xor
jns
nop
mov
jb
mov
jo
cs
cmp
inc
inc
mul
mov
and
outs
and
ins
imul
in
imul
aam
xor
nop
push
sbb
xchg
dec
jne
and
rcr
daa
mov
cmps
sub
jbe
add
pop
ja
ins
xchg
pop
pushf
outs
sbb
or
jns
outs
pop
js
lds
cld
sti
es
xor
sbb
pop
inc
or
or
inc
dec
out
fs
pop
sbb
and
xor
mov
hlt
lds
dec
enter
inc
mov
jecxz
enter
push
or
out
int3
das
push
jne
call
sub
inc
ds
sub
in
push
jno
(bad)
sar
inc
(bad)
push
add
aam
jp
inc
aas
icebp
sub
repnz
or
pusha
or
test
sub
and
mov
mov
bnd
cmc
jge
movs
inc
cmp
aam
daa
les
sbb
call
xor
int3
sbb
jp
inc
inc
inc
les
sub
jecxz
shl
fsub
and
jo
jae
ret
loopne
inc
call
mov
push
loopne
(bad)
je
and
sub
in
inc
add
dec
fcomp
adc
(bad)
js
pusha
or
fadd
call
push
pop
pop
js
fs
cmp
call
mov
cmc
mov
outs
bound
and
mov
xor
push
aad
or
push
and
adc
(bad)
dec
popf
sbb
mov
jl
adc
sub
dec
popa
int
je
popa
dec
aad
jno
pop
test
je
rcl
cmp
daa
mov
cmp
sub
jne
pop
or
nop
int3
xor
mov
cwde
mov
aaa
cmp
xchg
sub
pop
push
add
icebp
dec
lds
mov
mov
dec
dec
and
and
pop
jns
lock
dec
div
xor
lods
pop
in
jp
js
dec
inc
pusha
in
pop
push
adc
mov
call
or
add
jge
push
push
jmp
push
fs
fdivr
pusha
pop
push
out
and
xor
mov
xchg
js
cld
push
aaa
movs
adc
cmc
addr16
js
dec
push
adc
(bad)
mov
sub
inc
xor
sub
mov
clc
retf
dec
jecxz
outs
cmp
adc
loop
sbb
out
fs
fsub
pop
cwde
sar
outs
add
adc
push
shl
dec
push
xlat
push
pop
cmp
in
jecxz
clc
cwde
mov
aad
bound
stos
addr16
ret
int3
pushf
and
in
and
xchg
and
fidiv
jb
cmp
or
in
xchg
sbb
lock
mov
sbb
push
jl
lock
mov
adc
push
mov
xor
fxch
int3
fcmovb
cld
and
mov
and
pop
das
mov
dec
cmp
aad
cmp
sub
fild
icebp
les
call
jl
fnstenv
jl
das
(bad)
jl
adc
xchg
(bad)
jl
stos
xchg
(bad)
jl
stos
mov
sar
sar
jl
mov
push
jl
xor
jl
mov
lahf
jl
xchg
xchg
jl
mov
jl
adc
jl
cmps
nop
jl
aad
mov
iret
out
jl
mov
lahf
jl
pop
xchg
sar
jl
push
call
das
clc
sub
ins
push
je
iret
scas
jo
push
jb
cdq
sub
in
push
push
in
ins
add
movs
sbb
jb
lds
inc
les
call
cmps
push
push
repnz
adc
or
xlat
jbe
mov
(bad)
jo
jl
in
lods
and
push
adc
xchg
fucomp
inc
add
repnz
int3
arpl
sub
jp
test
repnz
enter
dec
xchg
inc
je
pop
and
sbb
adc
jp
(bad)
outs
hlt
mov
pop
mov
test
arpl
hlt
sbb
xchg
fstp
ror
push
adc
js
sub
inc
pop
jp
fistp
ins
ret
add
mov
push
imul
movs
(bad)
aad
hlt
loop
jp
rol
mov
sbb
adc
test
xchg
fcomp
jp
aad
pop
add
jp
idiv
call
adc
jp
push
xor
stc
sbb
push
test
adc
outs
jp
pushf
test
sub
pop
mov
jp
je
cli
adc
retf
mov
enter
test
call
fidivr
psrlq
popa
pop
sbb
stos
aad
test
je
pushf
inc
jle
mov
and
enter
sub
dec
jmp
(bad)
jl
sub
icebp
stos
jp
xchg
ja
xor
pop
stos
jp
pop
call
sbb
sbb
sub
jp
ins
or
cld
xor
imul
jns
jl
daa
cwde
adc
sahf
lahf
jp
cdq
sub
cmp
ror
fidivr
(bad)
cwde
push
dec
jp
sub
pushf
jp
inc
jb
and
pusha
bound
jp
jo
scas
jp
push
jae
jl
mov
inc
enter
hlt
mov
mov
fidivr
or
jp
inc
xlat
jp
ins
ins
cmp
jp
sbb
add
mov
movs
addr16
loopne
jo
cmps
jp
(bad)
call
xchg
inc
(bad)
jp
pop
push
dec
lahf
jp
stos
add
mov
js
ins
clc
mov
arpl
jp
pop
cli
jne
jl
sub
jp
nop
mov
xor
(bad)
push
jp
ins
xor
psubusb
mov
js
pop
xor
loop
out
xor
je
adc
inc
call
adc
inc
imul
pop
pop
ins
sub
adc
and
ins
retf
lea
jl
sbb
jo
jl
mov
jp
fadd
sub
lahf
jp
xor
or
jo
jp
xor
adc
mov
test
jmp
cwde
pop
div
and
std
fnstcw
test
fnstcw
inc
pop
or
loopne
in
shl
push
xchg
jb
sub
jl
and
pop
shr
test
aam
mov
lea
jns
pushf
fsubr
lods
rol
inc
mov
sbb
and
jp
mov
test
jp
inc
jmp
(bad)
xor
jl
shl
jp
pop
xor
rcr
mov
enter
and
jp
mov
push
repnz
adc
jp
adc
jp
push
test
mov
ins
shr
out
lds
aad
lods
shl
ins
and
jp
sub
mov
ss
jp
push
adc
pop
pusha
sar
loop
jp
sbb
add
lods
(bad)
fnstsw
loop
jp
les
bswap
jp
hlt
mov
jo
push
test
sub
nop
ss
jp
test
call
sub
cmp
jp
push
test
js
xchg
sbb
enter
call
pushf
mov
jp
aam
mov
lods
addr16
push
sub
or
jp
mov
cs
adc
push
add
lods
jp
xor
shr
fnstenv
mov
shl
les
je
into
jp
push
xchg
aad
(bad)
pop
jp
mov
loop
jp
sbb
pop
cli
inc
sub
adc
xor
fidivr
or
add
(bad)
dec
fnstsw
loopne
loop
dec
ins
jp
fs
fwait
jp
jo
and
fs
xchg
lods
dec
fs
dec
jnp
or
fstp
push
and
add
or
cld
adc
mov
and
jecxz
imul
loop
jp
inc
push
jo
cmc
jp
push
ss
adc
jp
loop
jp
clc
adc
jae
inc
in
mov
jp
mov
xchg
das
push
nop
aam
mov
sub
dec
aad
dec
cwde
jp
pushf
dec
mov
or
dec
jp
pusha
fsub
adc
add
and
loop
fdiv
call
pop
int3
retf
sub
dec
fnstcw
mov
dec
es
aam
inc
cs
popf
add
cmp
push
fistp
jp
sub
fistp
adc
fs
ficom
gs
(bad)
mov
jmp
adc
cs
jp
mov
fs
push
pop
mov
lock
fst
or
loopne
mov
jp
mov
mov
xor
fcomp
js
xor
mov
jp
jo
fidivr
dec
jmp
stos
repz
xchg
fist
das
jp
jl
and
cwde
pop
aam
das
jp
pusha
xor
test
jp
inc
xor
call
mov
add
shl
fistp
test
fnstcw
adc
jp
push
xchg
jp
jl
adc
mov
jp
mov
jp
jo
fs
sub
test
jp
lock
sar
jmp
je
push
loopne
cmps
jp
add
xor
adc
imul
stos
sub
inc
mov
sub
xor
jmp
jmp
dec
push
jp
nop
sbb
es
add
fsubr
or
sub
lods
fs
xor
int3
dec
jo
int3
lods
js
cld
jp
js
stos
jp
cmp
add
inc
bound
and
in
cmps
jecxz
rol
mov
inc
aam
lock
dec
mov
inc
jp
push
push
fs
jp
sub
aad
lods
loop
jp
jl
jl
xchg
mov
js
mov
ret
enter
call
adc
movs
leave
sbb
loope
dec
and
aam
(bad)
or
push
fs
cwde
in
(bad)
idiv
inc
add
jp
sub
mov
loopne
sub
pop
psubsw
hlt
out
push
jl
stc
shl
jp
pop
sbb
pop
adc
bound
adc
push
aam
js
loopne
in
jp
cwde
and
jl
xor
push
test
in
test
adc
adc
pop
les
jp
rcl
jp
sub
es
inc
aam
fnstsw
fstp
jo
jmp
jo
jl
sub
pop
mov
sahf
in
sar
je
cli
mov
loop
jp
pop
bound
jp
call
and
and
adc
jl
push
jp
xchg
xor
bnd
test
icebp
call
sub
dec
sub
inc
mov
mov
loop
lahf
xor
int
cmp
les
enter
push
(bad)
fdivr
stos
or
xchg
jmp
loop
jp
lock
pop
adc
mov
inc
xchg
sbb
enter
jp
ins
lock
dec
dec
cmp
jo
jp
sbb
stos
jp
adc
lahf
shr
je
inc
jl
jo
jp
mov
loopne
je
aam
mov
adc
loopne
push
pop
adc
adc
idiv
adc
cdq
into
jp
ss
jp
sub
xchg
jp
ins
cmps
jp
in
sbb
sar
sub
mov
fbstp
fsubr
mov
mov
sub
push
push
stos
and
xor
neg
(bad)
js
jp
enter
adc
xor
(bad)
pop
add
mov
mov
js
enter
(bad)
in
les
adc
loop
jp
pop
xor
out
in
ins
test
ins
sbb
pop
xchg
bound
adc
xor
push
test
test
sti
call
movs
ins
xor
and
inc
pusha
dec
pop
jp
call
jp
mov
lods
fsubr
imul
jbe
pop
adc
mov
dec
xchg
cmp
or
sbb
xor
je
rcl
lahf
jp
ins
test
fidivr
jp
rcl
imul
xchg
adc
jp
loop
jp
pop
add
sbb
ret
(bad)
jp
jo
in
mov
jp
ss
shr
fdivr
and
cmps
xor
adc
cmp
push
ins
or
fnstcw
xor
cmp
inc
test
mov
in
hlt
or
push
fs
adc
jp
mov
jp
je
loopne
(bad)
pop
cmps
jp
dec
loop
jp
test
std
jp
ins
test
fild
scas
aad
cmp
mov
sub
jp
jmp
xchg
jp
adc
stos
pop
or
loopne
or
clc
adc
clc
les
test
in
(bad)
jne
mov
pop
jp
sub
cmc
pop
cmps
aad
push
loop
jp
mov
jp
sbb
mov
adc
jp
add
stos
loopne
(bad)
jp
loop
jp
rcr
pop
add
xor
(bad)
loopne
ins
adc
jp
and
leave
call
mov
xor
(bad)
adc
jp
in
sub
sar
pusha
(bad)
jp
hlt
sub
add
cmp
push
adc
mov
dec
das
ins
rcl
sbb
mov
xor
jp
cmp
sub
sbb
fsubr
sub
or
cmps
jp
adc
pusha
xor
cmps
xor
js
stos
jp
lods
adc
ds
xor
in
test
inc
lods
xor
mov
adc
in
pusha
fwait
adc
jp
(bad)
stos
jp
push
ret
xor
lahf
jp
ins
and
cmp
push
dec
jmp
imul
arpl
jp
push
mov
and
mov
loop
jp
adc
mov
xor
sar
adc
sub
(bad)
xor
loop
cwde
pop
sti
je
push
in
inc
ss
in
push
leave
sub
inc
fimul
dec
out
test
js
cli
test
test
in
xor
ins
sub
sub
sub
push
mov
not
pop
jp
fld
xor
jp
pop
add
or
shl
cwde
fdiv
in
enter
adc
(bad)
enter
cwde
shl
pop
enter
fs
jp
iret
(bad)
je
jp
je
(bad)
jp
push
fs
and
int3
sub
rcr
pop
jp
test
data16
mov
push
sub
and
jmp
and
jp
hlt
xor
cwde
sbb
push
sub
imul
jp
push
test
nop
ss
jp
js
aad
pusha
rcl
inc
adc
adc
das
xor
gs
fcom
xlat
inc
and
pop
addr16
lock
loop
jp
nop
xor
or
xlat
jp
adc
(bad)
mov
je
sub
push
pop
xchg
scas
pusha
xchg
loopne
daa
lds
jp
pop
loopne
loop
jp
pop
sub
test
xor
add
js
test
sub
mov
pop
leave
adc
cwde
sub
(bad)
fdivr
sbb
mov
jne
push
cmp
jne
sub
push
cdq
js
sub
jnp
pop
and
mov
ja
clc
sti
scas
add
stc
ja
(bad)
(bad)
mov
xchg
add
mov
lahf
dec
inc
(bad)
movs
fs
hlt
fbld
mov
xchg
arpl
xor
in
je
js
adc
div
hlt
mov
jg
fcomip
add
cld
fisubr
inc
add
push
fwait
loopne
std
adc
add
dec
push
mul
cld
push
jp
add
ins
js
push
and
add
adc
fcmovne
pop
fdiv
ins
shufps
and
std
(bad)
neg
cwde
(bad)
and
pop
outs
sub
jle
jge
sub
aam
in
out
sub
sub
push
mov
test
clc
and
mov
adc
push
je
imul
mov
jl
stos
jp
jl
fmul
das
addr16
pusha
sahf
dec
ret
lea
inc
pop
pop
mov
push
xchg
mov
dec
xor
push
push
inc
rep
adc
push
dec
arpl
pusha
in
fs
mov
pop
jp
pop
cld
and
add
push
std
lock
imul
lea
ror
pop
jl
div
in
cmp
rcr
xor
adc
jmp
clc
add
imul
je
mov
rcl
xchg
sar
hlt
ss
mov
arpl
push
mov
mov
shr
mov
aam
aad
cmp
xor
xor
jae
ds
data16
dec
fld
addr16
pop
ins
(bad)
cld
sub
xor
dec
clc
test
repnz
mov
cli
je
aam
cld
std
loop
outs
ror
js
cmp
aaa
pushf
cmc
repz
cli
scas
push
cld
rcl
jecxz
repnz
push
repnz
cmc
or
arpl
cwde
ja
adc
jns
pop
push
icebp
push
pop
push
test
inc
test
daa
mov
cmp
xchg
mov
sub
dec
(bad)
fadd
push
push
sbb
xchg
mov
fsubp
push
mov
call
xor
fcmovnb
cs
jl
clc
repnz
push
jl
nop
cmp
or
fadd
(bad)
jecxz
mov
retf
push
ss
js
or
jo
add
mov
xchg
aad
clc
jmp
pop
pop
or
fsub
aad
aad
pop
fs
add
or
inc
push
pop
dec
(bad)
mov
out
stc
inc
rcl
js
push
dec
dec
jbe
add
fidivr
sub
ror
cld
(bad)
push
ret
sar
neg
adc
iret
cmp
sti
lock
and
adc
fwait
xor
imul
paddsw
stc
loop
or
cmp
jmp
gs
mov
rcr
mov
je
not
movs
stc
push
adc
cmp
lock
pop
aad
js
jbe
mov
mov
jno
jne
jl
or
int3
test
adc
les
mov
int3
in
ins
pop
pop
push
mov
(bad)
icebp
jmp
in
call
mov
div
pop
push
mov
mov
mov
clc
sub
scas
cmp
sub
loope
push
and
jne
xor
adc
jp
adc
cld
or
mov
out
repz
je
xor
adc
sbb
pushf
(bad)
fdiv
jnp
loopne
lock
out
sub
lahf
loopne
shl
mov
retf
test
ds
popa
in
out
jb
and
in
jae
or
mov
rcl
sub
js
loopne
jno
jo
out
es
add
sbb
or
xchg
call
bnd
adc
jne
push
cwde
jmp
ja
cld
mov
dec
clc
push
adc
shl
pop
aam
jne
add
push
ins
imul
push
js
lods
and
hlt
dec
push
adc
mov
jo
mov
push
hlt
and
and
test
je
repnz
mov
sbb
je
mov
shl
repnz
sbb
sub
add
gs
aad
test
mov
aad
out
bound
mov
out
push
jmp
call
sbb
xor
pushf
ins
outs
ins
loope
cwde
add
mov
pop
mov
imul
in
cmp
sub
mov
mov
sar
aaa
push
xor
jo
in
in
jne
lock
xchg
nop
dec
dec
daa
dec
and
js
mov
pushf
add
shr
(bad)
in
leave
test
sub
ja
lods
jmp
and
js
jl
jl
ins
dec
jl
lods
fisub
clc
jmp
int3
sar
pop
or
rol
jmp
add
jo
je
jae
pop
and
retf
iret
mov
push
pop
pop
jle
push
xor
pop
mov
js
mov
mov
cmp
in
call
cld
stos
sti
ret
jae
push
push
add
sti
rcr
fidiv
add
or
xchg
or
sub
adc
adc
je
les
popf
(bad)
mov
in
mov
test
dec
sbb
add
add
call
adc
je
push
jmp
pusha
xchg
scas
int3
(bad)
out
into
out
ret
int
push
cli
repz
fs
mov
sar
scas
dec
outs
push
clc
push
cmp
sti
push
repz
push
jo
pop
xor
sub
test
pop
jmp
(bad)
sbb
nop
xor
leave
and
outs
push
jp
push
push
push
test
push
push
aam
add
xchg
sbb
push
mov
jp
test
dec
inc
pop
jne
mov
push
fild
and
les
cmp
sub
rcl
adc
jns
ss
pushf
inc
cwde
mov
inc
aas
adc
in
fstp
mov
(bad)
movs
clc
in
(bad)
cli
jl
sbb
pop
push
sbb
cmc
std
nop
sar
sub
clc
ss
outs
out
call
in
daa
and
lods
push
pop
adc
shl
push
mov
bound
outs
pop
dec
dec
pop
(bad)
fld
(bad)
mov
mul
inc
call
sub
nop
(bad)
cmp
mov
or
add
lods
add
xor
jl
xchg
xor
mov
ss
je
cmp
test
jg
dec
sub
hlt
out
sti
inc
inc
cmp
sbb
fisttp
rol
(bad)
dec
loopne
sub
add
lods
dec
mov
mov
mov
mov
dec
push
in
jne
sub
test
xor
(bad)
ss
or
mov
rcl
int
dec
add
pop
sbb
adc
push
jl
cmp
sbb
ins
and
and
pop
sbb
mov
fcmovnbe
(bad)
ins
pop
mov
ss
jmp
sub
mov
pop
jp
dec
mov
cwde
nop
sbb
js
dec
out
mov
mov
dec
sbb
and
test
add
adc
push
and
and
scas
ror
fild
or
clts
fcomp
ror
shr
cmp
pusha
jmp
or
int3
sbb
sar
jmp
or
call
hlt
fstp
bnd
out
cmc
fs
pop
mov
mov
retf
(bad)
jp
xor
sub
xor
std
clc
jns
push
dec
jne
in
xchg
cmp
add
lock
add
dec
inc
cmp
cmp
repz
cmp
test
mov
dec
jp
pop
shl
xor
mov
xchg
bnd
movups
sub
fwait
push
aam
mov
retf
ror
pop
ins
mov
or
cmp
xor
mov
rol
bswap
mov
sbb
paddd
fild
jnp
add
arpl
inc
mov
sbb
cmp
xor
enter
scas
stc
push
add
mov
clc
lds
cmp
test
push
ror
jg
sub
pop
adc
pop
pop
in
push
out
xchg
fcomp
pop
sbb
call
cmp
loopne
(bad)
add
mov
push
inc
int3
xor
neg
xchg
mov
and
in
push
retf
adc
je
stc
test
xor
mov
(bad)
jp
inc
inc
dec
movs
mov
clc
rcl
sbb
mov
loopne
push
add
dec
inc
ins
jb
or
jo
or
or
push
cmp
pop
dec
jge
jmp
(bad)
fadd
jo
ins
sti
dec
icebp
fistp
cmp
sbb
(bad)
dec
inc
in
pop
call
les
cmp
jl
arpl
fs
xor
retf
jl
shr
aaa
outs
or
pushf
pushf
nop
in
xor
pop
cmp
in
push
js
stc
in
cld
js
adc
mov
xor
sub
cmp
std
movs
call
xor
adc
mov
add
cwde
push
or
xlat
and
nop
sub
clc
sti
mov
ret
in
test
fcomp
xor
outs
pop
dec
lahf
jns
sbb
jae
adc
das
sbb
add
inc
ins
pop
sbb
cld
test
shr
mov
inc
xor
sti
dec
sub
fadd
cmc
sbb
div
inc
repz
mov
cli
cwde
or
test
xor
in
or
into
int3
cmp
pop
ins
jae
cmp
adc
sbb
bound
push
inc
jo
sbb
mov
int3
cmp
sbb
dec
cmp
(bad)
in
les
(bad)
mov
xchg
cmps
and
pop
test
jge
test
xor
fadd
mov
or
mov
les
imul
xor
cmp
imul
add
push
rol
jns
fmul
jae
sbb
dec
xor
mov
push
fadd
jne
aam
call
loopne
mov
sub
aas
inc
fucomip
int3
inc
push
repnz
ja
push
aaa
mov
jge
std
fdiv
add
pop
std
dec
dec
xor
mov
mov
call
add
cmp
adc
fs
or
je
adc
fild
pushf
or
push
inc
sbb
test
les
dec
je
push
push
jne
or
pop
(bad)
sbb
xchg
aas
sbb
(bad)
call
shl
jp
sbb
xchg
inc
inc
inc
aam
in
cli
fmul
push
mov
jmp
xchg
push
fs
(bad)
jmp
movs
haddps
idiv
int3
mov
les
push
and
mov
jo
and
jecxz
mov
clc
addr16
lds
or
jns
or
jnp
pop
repnz
xlat
push
js
pop
cli
xchg
int3
sbb
fidiv
movs
cld
cmps
mov
pushf
pop
jb
mov
ret
xor
xor
push
add
retf
movs
(bad)
pushf
loopne
mov
test
dec
mov
mov
(bad)
xchg
add
pop
std
pushf
push
xor
dec
push
stc
shl
adc
out
icebp
fstp
cld
xor
add
pop
jp
push
adc
jns
loopne
mov
inc
call
js
mov
cmps
jo
sub
cld
mov
stos
cmc
sub
and
jae
aas
xor
jb
jl
sar
loop
ins
stos
aam
cli
into
mov
xor
les
pop
adc
fstp
mov
jae
into
cmps
mov
(bad)
mov
pushf
loopne
adc
les
les
icebp
xor
stc
pusha
and
sbb
cmp
lfs
adc
repnz
and
cmc
int3
sub
dec
dec
daa
jne
in
(bad)
lods
jp
loope
cmp
sar
xchg
and
in
repz
xor
dec
inc
imul
dec
inc
je
mov
pushf
or
fmul
popa
clc
pop
jmp
daa
sbb
cmp
or
or
dec
cmp
mov
out
ret
in
push
fsubr
std
cwde
std
retf
scas
mov
fdivr
sub
les
mov
jne
jmp
xor
in
push
repnz
stos
adc
sub
movs
jbe
pop
cmp
and
aad
mov
fdiv
mov
mov
popf
push
lods
xchg
rcr
push
dec
ins
push
or
ret
sbb
out
(bad)
int
(bad)
les
and
cmp
xor
lock
xor
pop
sub
xor
in
call
lock
add
enter
fs
push
hlt
mov
hlt
pop
jg
add
in
jmp
enter
xchg
or
mov
mov
movs
mov
sbb
leave
sub
mov
and
loopne
les
std
mov
push
dec
push
pop
fidivr
pop
add
add
dec
inc
daa
push
outs
dec
cmp
inc
(bad)
push
shl
idiv
pop
hlt
and
outs
in
imul
pop
xor
sahf
sbb
pop
jbe
or
pushf
sub
adc
in
test
rol
xor
aad
out
(bad)
push
mov
jae
add
ins
cs
adc
ins
icebp
jmp
xor
push
inc
xchg
sbb
hlt
pop
popa
push
pop
pusha
jmp
addr16
or
xchg
lock
xor
cmc
mov
jecxz
les
fdivr
hlt
push
mov
sbb
leave
mov
popa
iret
push
mov
xor
jo
push
sub
xor
(bad)
push
imul
add
std
mov
shl
jge
pop
pop
push
sti
enter
int3
or
jbe
int
in
aam
movmskps
les
lock
scas
jp
in
sar
lods
cli
loopne
sub
lock
ret
and
sbb
adc
js
sbb
ror
jbe
mov
int3
jg
hlt
push
sbb
xlat
mov
ror
and
repz
dec
fs
xor
das
dec
scas
or
jo
jmp
pop
popa
cld
data16
fidiv
addr16
sub
dec
dec
fs
repz
xchg
push
xor
aam
inc
cmp
adc
out
jne
in
mov
movs
nop
xchg
mov
sub
and
dec
mov
rol
mov
xor
dec
ins
sbb
int3
fs
ins
scas
cdq
and
xor
fs
jmp
mov
pop
fs
mov
aam
jbe
leave
popf
fs
pop
int
sbb
enter
test
mov
jae
mov
mov
xchg
cmc
push
movs
xchg
clc
mov
pop
jo
sbb
mov
ins
movs
inc
out
(bad)
adc
movs
sbb
push
add
sti
pop
xor
push
jmp
fwait
ds
push
fisubr
popa
arpl
add
jae
pop
lea
jae
aas
jp
mov
fst
push
xor
hlt
jne
inc
jp
sub
or
pop
sahf
cmp
cmp
sbb
and
pop
push
dec
inc
xor
pop
inc
cli
hlt
dec
aaa
cmp
out
cs
xor
adc
fisttp
or
push
das
mov
sub
inc
stos
pop
lods
in
or
je
arpl
lods
test
and
aam
sub
int3
es
je
inc
das
pop
ins
out
xor
mov
jl
adc
in
push
pop
push
cmp
pop
add
call
sub
scas
hlt
cwde
je
lock
data16
js
fs
mov
jbe
cmc
ds
call
scas
cmps
int3
adc
mov
jne
sar
push
push
or
sub
sbb
cld
lods
pushf
ds
pusha
pop
cmc
(bad)
mov
movs
and
and
in
push
imul
mov
inc
sub
test
cmp
cli
ss
cmp
dec
and
pop
sub
mov
pop
dec
das
daa
xchg
cmp
push
arpl
addr16
loope
sti
or
addr16
and
pusha
out
mov
in
loopne
pop
sbb
add
push
dec
scas
xchg
or
sar
adc
js
je
jl
clc
jg
rcl
test
mov
xchg
fldenv
and
test
mov
or
movs
call
retf
adc
push
and
mov
dec
cmp
aam
rol
hlt
gs
icebp
loope
push
ins
pop
jge
dec
and
repnz
mov
cs
dec
sbb
std
sub
add
pop
pop
sub
in
xchg
sbb
hlt
xlat
xor
sbb
lods
jae
push
dec
dec
sti
imul
xor
jl
iret
je
fcmove
adc
xor
xchg
xor
js
pop
sbb
inc
mov
movs
loope
adc
xchg
iret
stos
lods
mov
fstp
xor
outs
ins
imul
sub
outs
(bad)
xchg
ss
add
cld
bound
cmp
or
les
cmp
ins
dec
xor
jl
push
adc
or
rcr
xor
ret
mov
je
std
jmp
jb
sub
js
cmc
jmp
lods
jno
sbb
ja
shl
sar
call
sbb
mov
les
stos
and
jecxz
test
pop
push
in
or
outs
sub
fnsave
ret
mov
sub
sbb
sub
jge
arpl
repnz
pusha
nop
jae
hlt
jp
rol
clc
test
cmp
cwde
xchg
mov
mov
pop
or
and
add
jp
cmp
cmc
icebp
pop
sub
push
gs
or
in
pop
pop
fwait
add
jl
pop
mov
mov
dec
icebp
jp
(bad)
sar
int3
in
movs
in
fild
and
adc
add
and
adc
aas
xor
out
mov
je
jns
and
inc
xor
movs
inc
xor
les
and
js
and
pop
pop
dec
test
mov
repz
scas
imul
movs
jbe
int3
mov
dec
add
aam
retf
rep
mov
jns
int
mov
xor
push
push
xor
test
and
pop
and
movs
and
jne
cmc
lods
icebp
inc
movs
xchg
push
cmp
jmp
loop
imul
cld
int
cmc
mov
lock
lock
fsub
rcr
and
mov
sbb
cmp
in
dec
mov
sbb
mov
push
cs
or
fdivr
clc
push
hlt
icebp
cmps
fidiv
call
in
loop
add
add
push
repz
sub
pop
fidivr
mul
fidivr
xchg
scas
jns
pop
std
ror
fdivr
lea
fdivr
adc
imul
jbe
(bad)
mov
pop
aad
mov
mov
mov
jb
in
inc
push
shl
std
push
dec
sub
mov
in
int
jmp
lds
jp
in
sbb
jmp
xor
je
and
loop
or
cdq
lahf
add
mov
loope
pusha
sbb
jecxz
pusha
dec
jmp
add
mov
pop
(bad)
std
pop
push
push
dec
adc
jns
repz
popa
mov
popa
pusha
jp
or
or
stos
cwde
retfw
call
inc
loopne
adc
js
call
fdivr
loopne
lea
fs
clc
gs
sbb
jmp
mov
leave
cli
lods
adc
stc
nop
push
movs
inc
xor
clc
ins
aaa
or
sbb
sub
sti
pusha
lock
mov
js
call
fmul
or
vunpcklpd
std
pushf
pop
xor
in
je
and
test
div
je
rcr
pop
push
cmp
sbb
add
std
and
aam
fcmovbe
fwait
adc
ins
xor
push
in
sbb
pusha
add
add
stc
addr16
fcomp
sti
sub
nop
in
loopne
outs
(bad)
jmp
xor
aam
stc
push
or
add
dec
test
and
aam
and
push
or
sub
sub
xor
mov
sub
(bad)
mov
popa
mov
sub
pop
mov
sub
fs
cmp
pusha
dec
cmp
js
in
pushf
push
out
enter
loopne
push
icebp
rcl
sbb
xor
test
cmps
mov
repz
dec
push
sub
or
lock
add
sub
mov
jne
sar
stc
and
pop
in
les
xor
jl
sub
outs
test
adc
and
out
or
clc
xor
les
das
std
and
cld
or
popa
and
or
sbb
aaa
ror
xchg
repz
sub
sbb
fs
call
int3
je
aas
cmp
xor
pop
lods
pop
movs
addr16
pop
pop
lea
addr16
into
iret
les
(bad)
inc
jne
loope
xor
out
and
jmp
in
js
out
repnz
pop
ins
mov
in
sti
aas
sbb
and
mov
mov
mov
sahf
xor
aam
movs
xchg
jbe
lods
fwait
or
retf
dec
and
jne
xor
and
cld
shl
mov
adc
lods
fnsave
icebp
int3
and
jl
fcmovne
cmps
(bad)
cli
lods
add
daa
pcmpeqw
jge
not
mov
sti
in
test
xchg
mov
mov
cmps
mov
movs
les
sub
cmc
jns
imul
arpl
(bad)
push
in
out
fsubr
jmp
adc
dec
addr16
jl
(bad)
dec
add
data16
jmp
ins
loopne
xor
fsub
push
and
test
jl
outs
jno
mov
mov
xor
test
outs
xchg
xchg
xchg
xchg
mov
lea
and
fwait
xchg
cmps
mov
mov
pop
mov
mov
sahf
sar
leave
mov
aam
sar
in
ror
mov
shl
fist
mov
xchg
mov
xchg
xchg
add
mov
xlat
mov
in
(bad)
ja
repnz
push
stc
fdivr
inc
out
push
pop
xchg
int3
push
mov
popf
in
aam
mov
pop
ret
test
sbb
xchg
aam
or
cli
lds
or
cs
(bad)
and
int3
enter
cdq
repnz
xchg
loopne
add
call
dec
test
imul
not
dec
and
xor
jo
xor
and
hlt
jb
mov
push
cs
repz
pop
xchg
nop
mov
pushf
outs
movs
cmps
dec
sbb
in
mov
loopne
cmp
add
sub
ins
addr16
enter
dec
xor
sbb
adc
les
ret
test
push
stos
mov
test
test
fbstp
fs
mov
jno
adc
push
jle
sub
sub
push
fs
jmp
jns
test
push
and
mov
cmp
cld
cmp
and
les
push
inc
cmp
sub
fnstsw
rcr
xchg
adc
push
popa
mov
rcr
into
inc
icebp
mov
mov
imul
mov
mov
sub
adc
dec
push
mov
pusha
or
ins
push
pop
pop
call
out
in
pushf
pop
(bad)
xor
in
rcr
shr
std
mov
adc
mov
daa
sbb
inc
cmp
or
cld
cli
out
jae
sbb
inc
es
lock
loope
std
test
sub
cmp
push
inc
in
mov
into
mov
mov
ret
outs
jl
call
jp
fld
mov
jo
cmp
or
cmp
adc
in
sub
repz
in
aam
pop
in
cmp
(bad)
imul
(bad)
mov
sub
cmp
cmps
and
cmc
loope
and
or
out
xor
dec
ds
mov
dec
pushf
lea
sbb
pop
add
adc
cli
hlt
loop
push
mov
or
cmp
mov
movs
pop
sbb
fsub
iret
jae
jbe
dec
jl
jne
push
push
imul
jne
aad
jae
sahf
in
popa
pop
std
pop
ins
pop
push
ds
cli
xchg
push
xor
movs
dec
das
cmp
or
add
clc
jmp
(bad)
iret
push
pop
ins
sbb
stc
mov
int3
js
xor
pop
rcr
push
and
mov
push
cmp
je
sub
jo
ss
sub
or
shl
std
sbb
in
adc
repnz
jae
cmp
rcr
je
cmp
sbb
cld
jge
mov
in
test
mov
loopne
stos
mov
and
sub
pop
mov
jo
or
mov
adc
fistp
sbb
clc
jmp
std
mov
sub
cmp
out
icebp
mov
les
dec
in
add
loope
js
push
mov
push
jmp
push
cmp
mov
arpl
shl
js
lahf
mov
in
movs
or
xchg
sub
imul
mov
mov
inc
aaa
mov
in
push
cmp
ja
add
scas
test
push
cmp
or
lock
stos
das
pop
cmps
cmc
jmp
push
and
pop
pop
inc
daa
add
jns
sub
jbe
pusha
inc
cmc
xor
je
sub
test
pop
cmc
fisttp
xchg
push
pop
inc
add
xor
rol
xchg
mov
sub
mov
push
xor
mov
lods
jno
xor
in
imul
js
popf
push
(bad)
cwde
and
or
gs
add
repnz
div
xchg
enter
mov
iret
dec
les
loope
mov
adc
les
outs
loopne
adc
leave
loopne
cwde
jp
xlat
mov
xor
bound
fistp
das
adc
cmp
add
ins
and
push
jbe
push
std
and
imul
enter
sub
cmp
daa
add
mov
jp
faddp
mov
cmp
test
test
sub
pop
in
std
pop
dec
jnp
push
pop
sub
sub
nop
pop
sub
cwde
dec
loopne
js
jmp
test
stos
fdiv
inc
and
push
pop
cmp
ins
clc
(bad)
scas
pop
loope
movs
cli
adc
and
inc
xor
cmp
cmp
loopne
jp
mov
cmp
mov
fs
in
test
xchg
dec
cmp
adc
push
loopne
test
pop
hlt
jo
push
cmp
mov
je
pop
jbe
pop
inc
and
lds
mov
aam
call
ins
shl
les
ffree
fsub
ja
push
cmp
sub
inc
mov
push
aam
les
push
push
inc
dec
call
sbb
out
into
jne
or
dec
inc
mov
xor
adc
pop
inc
sbb
dec
add
xchg
cmp
pop
push
cmp
sbb
in
test
stc
je
adc
fisubr
repz
mov
inc
sbb
jbe
pop
sbb
pop
aaa
pushf
in
out
add
sbb
xchg
inc
sub
dec
mov
or
pop
test
mov
pop
imul
popa
in
clc
mov
loop
sub
jo
outs
vmread
dec
cmp
sbb
push
cmp
cli
dec
aam
sbb
push
aam
sub
jnp
add
mov
movs
shl
hlt
enter
into
std
int3
ins
inc
sub
mov
lods
pop
dec
sub
mov
adc
fcomp
out
jne
out
test
popf
dec
jnp
les
push
jns
outs
arpl
pop
jb
push
in
(bad)
and
jae
fldenv
repz
mov
push
mov
add
lock
loopne
cld
std
in
pop
and
loop
enter
sub
sub
or
and
fsub
sbb
mov
push
jne
(bad)
out
pop
mov
(bad)
mov
mov
mov
fs
cs
mov
lods
adc
pop
jl
movs
pop
(bad)
arpl
je
jl
jmp
fdivr
xor
add
(bad)
fwait
outs
test
push
jne
fldcw
sub
xor
popf
shl
lahf
push
mov
cmp
in
hlt
imul
xchg
jbe
fdivr
sbb
enter
xchg
pop
loope
loopne
and
fdivr
ret
and
jge
inc
push
je
add
jl
(bad)
(bad)
mov
pushf
mov
jnp
xor
dec
pop
sti
xor
push
xchg
cli
je
popf
lods
push
push
jp
ret
mov
into
cmp
aam
fmul
rcl
(bad)
sti
mov
les
pop
jbe
xor
aad
mov
(bad)
lods
mov
pop
jl
bound
push
push
add
fsub
pop
retf
cmp
push
js
jbe
ss
cmp
or
adc
push
rcr
mov
mov
mov
ficom
or
or
hlt
push
in
push
dec
inc
ins
jnp
inc
call
scas
pop
into
mov
dec
and
mov
cmp
adc
in
cmp
ss
(bad)
sti
shr
shr
mov
cmp
jnp
pop
je
das
cmp
push
aas
movs
jne
shl
int3
ins
dec
and
dec
imul
push
and
xor
inc
mov
add
pop
fdivr
mov
sub
jp
pop
cmp
mov
pushf
pusha
das
dec
hlt
dec
jmp
dec
cmp
int
dec
ins
pop
loopne
jbe
mov
stc
xor
dec
in
jns
mov
pop
(bad)
sub
retf
xor
dec
int
sub
sbb
pop
sub
dec
ficom
inc
sub
js
jmp
cld
aam
cs
cmp
je
xor
jp
and
fdiv
mov
test
xor
push
dec
and
pop
popa
sub
les
ins
dec
and
push
sub
cmp
les
adc
sbb
std
stos
in
mov
cld
fstp
std
cwde
mov
sbb
shr
mov
dec
fadd
push
xor
enter
jne
pop
icebp
push
xor
in
dec
das
sub
enter
leave
sbb
cmps
jp
(bad)
out
fcomp
outs
nop
mov
pushf
xchg
add
xchg
rol
push
pusha
arpl
lods
cmc
mov
dec
xor
or
lock
mov
mov
mov
or
cmp
shl
cmp
cmp
retf
stos
mov
sar
pop
out
sar
jmp
jne
and
jbe
int3
in
jae
or
ret
call
je
fist
cmc
les
fnstsw
mov
int3
mov
mov
icebp
pop
xlat
jae
sbb
cli
in
int3
stos
lods
fs
int3
stos
loope
js
out
mov
xor
aaa
adc
xor
sbb
jl
rol
and
push
xchg
pusha
retf
lods
les
mov
jmp
push
imul
or
mov
mov
sbb
jp
add
push
jl
inc
cmp
dec
cmp
xchg
and
or
loopne
or
cmp
fcmovnb
mov
clc
fdivr
cmp
mov
jae
int3
jnp
out
test
(bad)
jns
ds
push
pop
xor
jb
jmp
in
push
jne
pop
clc
pop
mov
inc
stos
xor
dec
jae
mov
pushf
lods
or
and
mov
or
cld
rol
add
and
and
sub
add
and
push
dec
cld
push
aaa
pop
push
push
xor
xor
jne
mov
jnp
aam
push
add
lods
cmc
push
inc
fnstcw
xor
jne
ja
jl
inc
cmp
add
mov
idiv
ja
inc
inc
mov
ror
call
and
adc
push
mov
xchg
add
pop
xlat
mov
test
push
pushf
(bad)
idiv
jl
aam
pushw
stc
jae
nop
mov
mov
xor
pop
outs
adc
jne
fdiv
cmp
call
jge
adc
retf
sub
je
jne
xor
(bad)
lods
dec
push
dec
cmp
xor
call
cmc
repz
sti
(bad)
add
push
(bad)
mov
xor
inc
or
adc
ficomp
ins
js
sbb
pop
dec
ds
sub
sahf
and
out
jb
sbb
jo
or
push
clc
std
and
cmp
add
mov
and
jnp
xchg
jbe
cmp
xor
imul
in
add
or
icebp
stc
add
jl
adc
add
out
inc
sbb
xor
(bad)
mov
mov
sbb
not
enter
xchg
aam
and
pusha
jmp
xchg
sub
jne
pop
and
aam
std
mov
hlt
cmc
sub
push
jne
adc
fdiv
xor
or
add
in
movs
in
(bad)
scas
add
push
mul
clc
cmp
or
sbb
sti
mov
mov
sub
mov
js
jne
jbe
je
push
jp
add
add
push
cld
call
jo
pop
add
xchg
pop
in
mov
mov
jb
sub
mov
cmp
cli
lock
and
jae
in
jge
mov
nop
push
les
cmp
js
iret
ret
test
adc
jp
lods
call
pusha
inc
mov
sar
dec
mov
pushf
mov
lea
ret
movs
xchg
jne
sar
inc
and
repz
sbb
cmc
dec
(bad)
pop
data16
int3
xchg
sbb
jnp
inc
sub
jns
add
jbe
in
fstp
add
xor
xor
dec
aas
xor
in
(bad)
stc
cs
lock
cwde
jae
sub
adc
jp
out
mov
test
clc
sti
lds
mov
stc
retf
std
jmp
bound
jp
js
pop
(bad)
js
cld
sti
push
mov
lods
call
cmp
outs
imul
shr
push
enter
xchg
xchg
or
xor
and
shl
or
jne
inc
test
and
in
push
add
pop
aam
inc
sub
fcomp
std
int3
sbb
sub
rcl
cmp
and
and
addr16
jge
std
loop
adc
push
sbb
push
cmp
sub
mov
dec
std
pop
das
pop
cmp
or
jp
cmps
xchg
sbb
mov
xor
xchg
mov
ins
dec
dec
call
pop
add
and
sub
jb
jo
mov
mov
cmp
cmp
repz
sti
inc
ins
stc
clc
(bad)
mov
cmc
not
fs
dec
out
stos
jp
jo
xchg
mov
xchg
imul
dec
dec
dec
jmp
xor
mov
jnp
xchg
xchg
enter
pop
add
mov
mov
jns
inc
cmp
pop
xor
push
sti
jp
dec
cmp
sbb
shr
mov
jns
dec
cmp
mov
sbb
mov
push
mov
sub
enter
cs
mov
sub
mov
jae
lds
cwde
mov
inc
inc
nop
je
(bad)
mov
leave
sub
adc
pop
jp
cmc
cmp
mov
cmp
sub
imul
push
adc
pop
xor
mov
fistp
mov
xor
and
jns
int
retf
pop
and
inc
fstp
xlat
aam
test
shr
daa
das
sbb
lods
or
(bad)
out
fsub
das
and
pop
(bad)
cmc
test
inc
cs
(bad)
fcomip
push
jne
sbb
int3
adc
and
es
sub
inc
pop
inc
aas
xor
sub
scas
je
adc
imul
cmp
cli
cld
mov
dec
dec
shr
(bad)
clc
jp
push
pop
push
call
jae
cmp
inc
bound
lea
xchg
push
jle
cld
mov
ins
mov
inc
inc
mov
data16
adc
push
and
xchg
xlat
lods
outs
xchg
out
inc
and
sbb
test
jo
loope
inc
push
dec
sbb
add
xor
mov
test
dec
cmp
adc
xor
mov
les
sub
es
mov
mov
pusha
add
and
add
mov
dec
xchg
jp
pop
cwde
xchg
dec
pop
xor
cmp
je
push
js
jl
arpl
dec
mov
adc
ins
ins
add
inc
inc
pop
popa
inc
adc
pop
dec
push
dec
inc
ds
sub
arpl
sbb
jno
sbb
push
mov
mov
test
loopne
mov
sar
ror
(bad)
cwde
js
out
or
mov
jl
cmps
or
enter
inc
jne
clc
sahf
pop
cmp
ins
mov
or
lods
loope
mov
mov
movs
adc
jne
fcomp
fild
xchg
stc
jb
jp
pop
pop
pop
sbb
dec
dec
loope
loopne
adc
jne
push
clc
les
sub
jp
mov
cmp
dec
stc
jp
push
push
push
pusha
dec
shl
mov
and
jp
pusha
jne
mov
pop
mov
push
or
cmp
xor
das
cmc
in
push
sub
jecxz
jl
test
push
cmps
sahf
int3
xor
ds
or
call
jl
mov
cmc
fcomp
out
pushf
inc
and
xor
sbb
jo
or
jp
or
cmps
cld
sub
dec
test
or
xor
(bad)
and
jo
jo
(bad)
pusha
dec
add
mov
jmp
js
lea
loop
xor
adc
mov
cwde
push
leave
pop
and
or
inc
stc
(bad)
mov
popa
test
in
dec
das
sub
cld
das
add
hlt
cmc
xor
jo
rcr
mov
jne
imul
je
mov
repnz
sub
push
or
jl
sub
repz
cmp
movs
pushf
sub
lock
je
jo
cmp
lods
cmp
mov
jp
push
mov
mov
aam
or
cmp
sti
mov
or
or
test
loope
mov
sbb
movs
pushf
pop
push
mov
jo
stos
jp
js
stos
jp
jl
cwde
je
fidivr
div
jp
jo
gs
in
sub
fnstcw
pop
cs
push
addr16
sbb
aam
cdq
into
inc
aam
inc
push
adc
xchg
and
fs
and
or
mov
jo
sbb
pop
inc
dec
clc
shr
mov
nop
mov
(bad)
int3
inc
repnz
sub
jp
mov
jp
ins
fadd
icebp
icebp
jp
je
pop
mov
sub
int
push
aam
add
push
adc
js
lods
sub
push
jnp
cmp
cmp
add
out
cmp
pop
test
mov
dec
jge
or
push
sbb
xchg
mov
push
push
(bad)
int3
mov
push
mov
mov
sub
cli
pop
adc
std
je
(bad)
scas
or
pop
xor
mov
repz
jp
out
out
cmp
adc
inc
inc
inc
rcr
mov
jl
iret
ja
sub
cld
inc
xor
jmp
cmps
shr
sub
add
daa
mov
div
jp
ins
and
xlat
jp
pushf
push
pushf
mov
fld1
nop
out
xchg
cs
mov
mov
and
shr
xor
jp
js
pusha
jb
or
nop
shl
test
jecxz
sub
jl
jmp
dec
aad
outs
dec
dec
aas
push
iret
inc
loopne
push
cmp
ins
cmp
icebp
ja
adc
sbb
mov
or
(bad)
hlt
sub
aaa
push
stos
in
in
dec
dec
dec
(bad)
test
scas
test
mov
mov
pop
mov
and
jl
je
push
movs
repz
xor
je
jl
div
sti
inc
or
(bad)
cs
inc
iret
add
xor
lahf
add
into
inc
int3
je
fcomp
fldcw
or
mov
cmp
or
and
mov
dec
dec
dec
repnz
or
adc
fst
adc
cwde
loop
jp
push
add
test
pop
xor
jp
xor
jns
dec
test
pop
add
adc
hlt
sub
adc
push
retf
popf
sub
pop
and
pop
mov
in
sbb
xchg
fs
mov
ret
fs
mov
ins
les
outs
outs
ins
out
push
fistp
rcr
popa
gs
mov
popf
imul
jno
inc
arpl
fdiv
imul
(bad)
jp
out
in
cmp
xchg
loop
sub
jo
xchg
ss
push
rcl
xor
sbb
sahf
clc
rol
js
add
push
aam
jg
and
sub
xor
xchg
out
sbb
sbb
pop
or
sbb
ins
idiv
(bad)
mov
mov
and
mov
jns
jle
or
xchg
and
cmp
mov
iret
les
adc
or
add
movs
test
xchg
aad
rcr
movs
repnz
iret
push
inc
push
stc
jbe
les
cmps
js
sub
sub
xchg
or
dec
sub
pop
jae
je
shr
pop
cs
jge
test
dec
jp
ja
pop
and
jns
or
jp
jo
sbb
je
js
in
push
cmp
ror
pusha
pusha
pop
out
shr
xor
dec
rcl
inc
aam
loope
loop
or
jbe
jl
push
mov
cli
js
sbb
jno
rcr
mov
xchg
pop
adc
xlat
pop
xor
jne
cmp
jmp
(bad)
lds
pusha
push
loop
or
jmp
push
xor
(bad)
sbb
js
push
or
pop
and
cmp
inc
xor
dec
mov
loop
add
gs
sbb
(bad)
push
movs
fisubr
outs
(bad)
push
fs
outs
in
mov
scas
mov
push
xor
nop
mov
loopne
ins
inc
outs
adc
inc
dec
adc
sub
adc
inc
xchg
pop
test
inc
sbb
je
ds
test
dec
dec
dec
sbb
icebp
fs
sbb
stos
inc
xor
int
inc
inc
sbb
sbb
inc
dec
pop
fwait
dec
inc
dec
inc
mov
in
xchg
icebp
dec
cmp
xor
ja
pop
pushf
inc
adc
in
inc
pusha
xchg
inc
call
inc
inc
aam
xchg
sbb
dec
sbb
cmp
dec
inc
inc
dec
aaa
out
fs
aas
cmp
push
add
cmp
cmp
inc
cmp
xor
imul
or
sub
in
pusha
mov
pop
adc
or
or
cmp
mov
inc
push
imul
pop
inc
push
int3
movs
sbb
inc
call
test
stos
xor
or
ss
inc
inc
ins
inc
fimul
jbe
hlt
push
inc
inc
in
push
dec
dec
movs
add
cmp
fadd
xor
ins
xor
xchg
pushf
lock
mov
inc
jne
push
jne
dec
orps
or
movs
or
push
add
add
ins
inc
sbb
cmp
in
inc
lods
dec
mov
dec
sbb
pop
pop
add
gs
push
xor
test
cmp
dec
inc
adc
jo
pop
xor
das
fnsave
xor
in
enter
sub
pushf
ss
in
push
cmp
and
inc
loopne
dec
sub
ja
push
xor
inc
in
sbb
aaa
out
push
in
mov
call
addr16
arpl
test
shl
cld
add
mov
cmp
add
inc
hlt
cmp
add
aas
test
mov
cmp
out
pop
ds
cmp
cmc
sub
jns
addr16
jnp
push
dec
adc
hlt
inc
cmp
sti
pop
fsubr
test
je
cmp
sub
cmp
or
aam
je
sub
fnstsw
and
sub
pushf
popa
xor
aas
fs
pop
ds
gs
test
imul
outs
jo
push
sbb
push
call
jb
retf
loopne
jge
in
push
jne
bound
dec
dec
cli
ror
test
movs
cmp
jmp
mov
in
ror
movs
jne
aaa
mov
sbb
hlt
xor
sub
out
aam
fdivr
xor
jo
jb
xor
inc
int3
inc
sub
shl
sub
inc
cmp
aam
xor
mov
(bad)
cmp
out
dec
loope
push
js
xor
stos
sub
fnstsw
cmp
test
mov
jp
jbe
aaa
ss
cmp
pop
and
and
or
push
ret
repnz
nop
clc
mov
dec
cli
sub
push
imul
cmp
pop
repz
das
or
cmp
xchg
pop
xor
jge
outs
imul
test
daa
or
and
push
xor
(bad)
mov
je
xor
push
repz
movs
ds
add
mov
sub
test
xor
pop
mov
or
dec
or
xor
loopne
cli
test
sub
sub
pop
imul
xor
push
push
adc
jo
clc
mov
test
cmp
cs
sub
(bad)
cmp
jge
pop
cmp
jnp
ds
add
inc
imul
test
cmp
outs
and
cmp
jl
inc
jo
fs
sbb
and
dec
(bad)
jns
pop
push
pop
movs
stos
push
jp
jne
dec
sub
sti
sbb
dec
cmp
push
xor
sub
mov
jns
sbb
cmp
int3
pop
sbb
inc
in
call
aaa
in
jecxz
fnsave
ins
ds
div
mov
data16
sub
lods
push
push
js
ss
add
in
sub
fdiv
push
sub
mov
les
push
push
inc
add
sub
enter
es
adc
sar
sub
in
and
dec
dec
add
js
bound
in
jmp
sub
pushf
or
fsub
dec
sti
or
sub
cmp
jmp
jl
in
idiv
and
xor
pop
push
jp
gs
sub
je
cmc
push
pop
push
sti
xchg
ja
nop
(bad)
push
cmp
push
xor
sub
les
or
push
xor
cmc
inc
xor
cmps
xchg
pushf
cmp
loope
fsubr
fld
cs
arpl
pop
clc
and
and
test
nop
pop
cmp
dec
inc
jo
imul
fdiv
sub
ss
outs
push
push
jno
ins
inc
mov
lock
cmc
cld
imul
rcr
and
js
retf
inc
sbb
dec
movs
push
aam
stos
xor
cmp
lahf
or
mov
test
cmp
pop
test
mov
xchg
push
dec
push
stc
adc
addr16
jns
push
push
jnp
ins
push
sub
js
push
jb
mov
push
test
dec
inc
pop
call
push
dec
sbb
sub
xor
shl
cmp
dec
push
add
sub
dec
jl
sti
rol
jne
cmp
fcomp
cs
in
pop
mov
dec
pop
push
mov
outs
xor
pop
outs
jo
jae
push
inc
cld
sub
sub
dec
xor
or
cs
test
and
sub
sub
pop
not
push
pminub
sub
les
outs
inc
aam
push
mov
daa
ret
sbb
fsubr
std
mov
cmp
cmc
and
xor
ss
les
adc
sbb
dec
les
sub
pusha
pop
sub
pop
in
xor
sbb
and
add
push
cwde
je
jo
dec
movs
xor
cmp
int
outs
inc
jl
imul
sbb
xor
mov
push
test
cmp
xor
aam
daa
call
jo
cmc
cld
dec
jp
adc
aad
enter
mov
je
push
ins
sbb
pop
sub
cmc
sbb
jp
inc
inc
in
aam
push
sub
sub
nop
xlat
repnz
js
pop
push
lock
xor
adc
(bad)
les
popa
inc
mov
out
outs
push
pop
nop
sar
jo
(bad)
loopne
lea
les
and
retf
adc
in
cmp
daa
rcl
pop
push
inc
or
lods
imul
sub
mov
pop
pusha
je
pop
je
mov
dec
data16
and
add
sub
fs
push
pusha
pop
push
js
dec
dec
jbe
xor
fdivp
mov
hlt
xor
add
int3
ins
dec
inc
pop
dec
cmp
cmp
xor
nop
jne
shl
push
sbb
div
pop
inc
jo
call
out
and
xchg
sbb
fdivr
cmp
pop
in
or
push
dec
lds
jbe
fnsave
dec
out
data16
pop
dec
outs
add
je
mov
cmp
jo
jb
or
sub
int3
dec
push
dec
sub
das
pop
imul
daa
and
pusha
push
aaa
cli
xor
and
loopne
dec
pop
push
sub
push
es
jmp
push
push
jnp
or
jmp
(bad)
in
mov
jne
cmp
sub
and
loop
push
fs
lock
outs
sub
(bad)
fdiv
pop
iret
movs
pop
cs
sub
push
mov
mov
mov
movs
jns
pop
out
les
adc
dec
pushf
ds
inc
movs
xlat
push
and
push
adc
push
fcomp
outs
pop
push
pop
xchg
mov
pushf
and
sub
push
adc
call
js
imul
xor
push
xor
push
dec
inc
adc
les
movs
pop
sub
lds
dec
ins
jne
sub
pop
dec
loop
pop
push
and
dec
dec
dec
sbb
xor
in
xchg
cld
ror
jl
inc
in
fnstsw
cmc
xlat
ins
jp
ss
cmp
xor
not
(bad)
hlt
(bad)
cmp
and
loop
clc
or
mov
jne
ret
jns
je
xor
dec
je
imul
mov
stos
lahf
push
ins
ret
mov
enter
test
inc
xchg
push
hlt
inc
mov
js
nop
pop
ja
ins
ret
xlat
add
jle
jecxz
int
push
xchg
inc
cmps
gs
ds
xor
cwde
sbb
mov
sub
cmp
ins
push
dec
fcomp
xchg
inc
mov
pop
xchg
stos
adc
pop
popw
clc
mov
icebp
and
xor
dec
add
add
dec
cmp
je
add
and
cwde
inc
cmp
adc
sbb
shl
dec
je
bound
sbb
dec
sub
xor
nop
in
fadd
lods
push
call
pop
es
retf
push
dec
push
clc
jge
test
iret
xchg
cmp
pop
jecxz
xchg
in
lahf
push
mov
dec
mov
jno
int3
loope
inc
addr16
mov
sub
das
inc
jp
dec
inc
push
movs
inc
fcomp
loopne
push
cld
jo
mov
xorps
dec
andps
clc
xchg
inc
mov
inc
cs
cmp
jp
push
jl
push
cmp
mov
mov
(bad)
lock
xor
cmps
jl
fs
jmp
push
push
jle
sub
sub
mov
cdq
hlt
pop
mov
js
push
jl
or
mov
(bad)
(bad)
push
xor
or
imul
mov
rcl
or
and
call
cmp
es
lods
sub
cmc
ins
pause
hlt
push
adc
mov
addr16
rcr
jns
push
fisttp
test
and
pusha
or
sub
push
(bad)
fidivr
arpl
nop
cmp
push
cmp
test
sub
aaa
sub
cwde
pop
jmp
xor
repnz
inc
out
or
out
mov
or
imul
in
imul
sbb
in
mov
xlat
mov
or
lds
sbb
popa
jp
push
je
sub
fadd
mov
dec
js
xor
pop
cmp
sbb
or
or
sbb
pop
pop
mov
aas
add
clc
xor
icebp
int
inc
jl
stc
in
mov
stc
xor
add
push
js
pop
push
sbb
sbb
ror
mov
push
das
in
repz
xor
lods
jne
ins
ins
imul
ds
test
out
mov
out
inc
mov
jl
(bad)
xor
pop
je
es
cmps
test
or
cmp
adc
adc
inc
rol
push
mov
shr
xor
jl
fnstcw
jl
jmp
fidiv
inc
push
add
jl
jl
popa
aam
mov
sub
inc
cmp
mov
sub
mov
add
and
in
and
in
(bad)
fsubr
push
cmp
sub
xor
and
(bad)
push
cmp
loop
jp
pop
adc
je
into
mov
icebp
push
jp
cmc
nop
(bad)
imul
mov
inc
rcl
mov
cmp
popf
clc
ja
cmc
mov
mov
int3
push
xor
pusha
cmps
cld
push
jl
cmp
push
std
movs
jl
(bad)
js
arpl
int3
inc
cmp
cmp
mov
pushf
xchg
jo
sbb
inc
push
into
sbb
mov
and
and
sub
test
hlt
test
aad
push
inc
jp
test
lods
adc
bound
jp
xchg
inc
push
and
loope
dec
xor
mov
sar
sbb
or
aaa
es
fsub
push
jbe
mov
imul
mov
rcr
aam
jecxz
mov
lods
pop
cld
mov
or
rol
fdivr
jo
data16
in
jno
js
popfw
mov
int3
aaa
call
ins
ds
push
dec
sbb
xor
ins
push
(bad)
ins
fs
or
jns
adc
add
cdq
jp
hlt
cwde
push
stos
jp
push
icebp
iret
jp
fwait
js
stos
test
in
loop
pusha
add
add
sbb
fstp
es
pusha
sub
inc
cmp
cdq
mov
js
cmps
jp
pop
and
jp
cmp
sar
sbb
pushf
sub
sub
(bad)
xor
xor
and
and
mov
je
dec
jne
adc
jl
pop
popa
add
jl
jae
cmp
das
jmp
movs
dec
cmp
je
cmp
je
mov
cmp
xchg
dec
das
sub
pop
pop
and
in
sbb
hlt
jns
sti
out
movs
ror
mov
jp
cmc
test
mov
xchg
cmp
and
(bad)
fnstsw
push
dec
(bad)
lods
jo
fwait
jp
sbb
mov
ins
pop
or
call
(bad)
fmul
mov
pusha
pop
sub
int3
lods
jp
cmp
ror
(bad)
int3
out
in
in
cmp
cmp
and
xor
push
push
loop
mov
loopne
ins
cmp
and
push
push
jo
std
or
xor
inc
xchg
mov
jmp
inc
scas
ins
pop
ds
inc
aas
test
in
xor
outs
inc
sub
in
cmp
test
cmp
add
sub
cld
loopne
in
and
xchg
dec
icebp
mov
mov
dec
mov
mov
cld
pop
and
sub
pop
adc
movs
adc
jp
push
xor
jp
cwde
int3
adc
jp
loop
jp
cwde
dec
adc
cmp
mov
call
lock
ss
cli
add
mov
pop
repz
jno
cld
xchg
adc
pop
and
push
repnz
xor
cmp
ds
xor
loop
push
daa
sar
pop
mov
dec
add
cmp
cmp
mov
jmp
xchg
mov
jp
jecxz
popf
gs
leave
fnstsw
loop
jp
cwde
and
in
fnstsw
jecxz
jp
out
je
loop
jp
inc
adc
jp
fdivr
fldcw
js
xchg
push
xor
jp
dec
mov
dec
ins
test
aaa
ins
cmps
movs
arpl
frstor
sub
pop
loopne
pop
cld
jnp
jmp
out
lods
jp
aas
dec
xor
aaa
jl
fs
inc
cmp
cmp
pop
sub
movs
sub
sbb
retf
call
pushf
mov
mov
dec
daa
mov
mov
mov
enter
mov
data16
mov
pop
cwde
daa
pushf
mov
jp
les
push
cwde
mov
lea
je
ret
sahf
push
jp
fsub
add
leave
sub
cmp
aad
sar
add
shr
(bad)
out
into
adc
jge
das
int3
cmp
dec
mov
or
imul
jmp
push
repz
cmp
ss
jl
popa
inc
fs
neg
in
push
mov
nop
imul
pop
jns
inc
inc
jnp
push
dec
and
xor
push
jns
mov
(bad)
cwde
lock
cmc
xchg
xchg
(bad)
mov
mov
jp
mov
pop
push
test
xchg
push
inc
jge
movs
pop
pop
cmp
nop
dec
cmp
pusha
sub
jmp
xor
mov
sbb
movs
stos
loopne
ss
movs
pop
add
in
mov
fmul
movs
ins
in
rcr
imul
lods
xor
test
jl
fsubr
and
inc
push
xor
sub
aam
pop
sub
js
xor
xor
and
std
shr
add
mov
jle
mov
xor
pop
cmps
pop
sub
xchg
in
bound
jl
and
mov
sub
mov
test
lahf
jp
mov
jp
jecxz
add
int
jp
adc
jp
pop
mov
and
xor
data16
mov
js
cwde
xchg
xchg
push
call
mov
sbb
int3
and
jmp
mov
lea
inc
ds
das
sub
nop
mov
cmc
pop
test
jmp
das
lods
adc
or
addr16
sti
aam
dec
pop
dec
int3
or
lods
sub
mov
xor
repz
les
lods
nop
xor
mov
mov
jp
in
fisttp
lahf
sbb
rcl
pushf
clc
cwde
jmp
dec
iret
jp
enter
jmp
and
inc
or
test
mov
mov
or
add
fwait
call
je
or
sub
div
pop
or
mov
imul
cli
nop
add
jl
jno
jl
call
and
int3
sub
xor
fisttp
xchg
pop
inc
sbb
xor
dec
and
cmps
movs
pushf
aam
mov
xchg
daa
pop
(bad)
push
xor
cmps
jp
enter
pop
in
sar
(bad)
jp
adc
ss
jp
mov
jp
js
cmp
or
or
pushf
xchg
cmp
jne
je
mov
mov
jno
mov
mov
aam
(bad)
push
data16
mov
jp
pop
jmp
push
addr16
push
inc
add
fsub
gs
shl
add
xor
jl
call
dec
jl
inc
inc
and
es
mov
sub
stc
xchg
xor
ins
int3
mov
fcom
cmp
fsubr
mov
jp
mov
dec
xor
jo
sub
and
inc
cmp
jp
cmp
cmp
mov
pop
jge
sbb
sbb
(bad)
js
cmp
pop
and
xor
js
retf
int
je
sub
cmp
mov
sar
inc
and
loopne
pop
xor
pop
das
sbb
addr16
dec
xor
icebp
retf
jl
arpl
jl
data16
jmp
inc
inc
push
out
pop
dec
fadd
xor
mov
cmp
cs
pop
jo
stc
hlt
lods
enter
cmp
rol
in
enter
and
inc
mov
leave
jp
xchg
icebp
sub
cs
xchg
(bad)
or
aaa
and
jl
loopne
pop
or
(bad)
jp
cmp
jle
xchg
ins
dec
dec
mov
jp
pusha
dec
or
xlat
les
cld
jno
daa
and
adc
adc
lods
test
aam
daa
and
mov
push
and
hlt
push
sub
pusha
push
mov
lods
xor
std
add
mov
sub
fbstp
frstor
xor
test
pop
mov
push
cmp
jns
mov
sbb
pop
xchg
pop
sbb
xchg
pop
sbb
mov
daa
dec
pop
cwde
ins
push
int
loop
jp
fcomp
in
adc
jp
adc
ror
cwde
ror
jecxz
and
ins
adc
mov
icebp
inc
dec
loopne
jne
mov
dec
pop
lds
or
jns
push
adc
pop
jge
sub
loope
jl
cmp
loop
test
out
inc
jae
add
jl
push
addr16
cmp
push
imul
pop
pop
dec
or
(bad)
pop
mov
and
test
mov
lods
ins
dec
ins
jp
adc
fsubr
jmp
pop
mov
mov
ss
jp
and
je
pusha
add
dec
cmc
fs
test
pop
mov
pop
mov
outs
lds
test
lods
lods
dec
sub
sbb
fnstsw
je
mov
ss
cmc
rol
clc
push
adc
pop
sub
inc
and
hlt
push
jne
fwait
mov
(bad)
fcom
and
sub
shl
sub
je
fnstcw
ret
ins
and
adc
add
in
cmp
cmp
lods
mov
fnstcw
sar
in
test
je
add
sub
in
push
mov
jo
jmp
mov
fnsave
jo
jecxz
jmp
mov
aaa
add
pushf
push
sbb
xchg
cs
mov
dec
push
jp
jae
sub
jno
push
xchg
out
arpl
cwde
dec
daa
jp
hlt
mov
xor
lods
loopne
sar
pushf
jmp
jo
cmp
or
cmp
sub
xchg
cmps
jp
js
test
jp
cmps
ror
jge
ins
and
jl
ins
dec
lods
mov
pop
mov
xchg
nop
inc
je
js
jne
pop
mov
sar
add
xor
jmp
push
outs
push
jl
xor
and
pushf
sub
sbb
imul
jne
or
ins
ins
push
imul
fcmovb
xor
pop
int3
enter
jp
xchg
fcomp
fsubr
stos
jp
movs
out
jp
test
stos
jp
mov
push
mov
pop
test
xor
inc
mov
jp
pusha
icebp
test
inc
fld
jp
dec
sub
dec
cmp
(bad)
cmp
out
jp
xchg
lods
jae
xor
sub
aam
cmp
loope
js
imul
and
sbb
cmp
test
test
and
je
sti
mov
retf
jl
or
push
push
sbb
push
js
xor
stos
mov
cmps
inc
imul
push
ja
cmps
sub
cmc
cmp
enter
jne
fsub
jp
mov
call
out
ss
cwde
enter
jp
(bad)
adc
ds
push
mov
jp
adc
pop
rcr
aad
jo
adc
mov
push
je
js
jp
cmp
push
cmp
bound
rcl
fcomip
mov
leave
ins
pushf
sub
cli
push
xchg
cwde
rcr
cmp
jnp
inc
inc
or
push
jl
dec
dec
adc
dec
std
loope
fnsave
jae
dec
pop
sub
int
xlat
xor
lock
test
fcom
mov
sub
jp
mov
js
jp
dec
(bad)
jp
mov
jge
push
jl
pop
jp
cdq
pop
pop
jge
mov
cmp
jge
rcl
gs
or
daa
sbb
push
pusha
xor
mov
call
mov
cmc
test
dec
das
sub
adc
js
xchg
jl
jl
cmp
cmp
inc
ds
push
mov
ss
jo
push
and
popa
add
sbb
mov
ins
pop
mov
shl
mov
gs
(bad)
jp
push
das
jp
fs
jge
js
xchg
mov
aad
and
jp
jo
test
inc
(bad)
jp
push
xlat
jp
sub
stos
fcom
xchg
mov
inc
lods
js
sub
sbb
mov
push
mov
jnp
js
push
pushf
je
fcomip
jl
test
(bad)
(bad)
mov
call
pop
cmc
std
cmp
sub
add
ss
adc
dec
outs
dec
dec
pop
cli
arpl
mov
ret
scas
or
enter
test
jns
and
rcl
aas
or
cmps
jp
mov
stos
jp
pop
xor
push
je
push
(bad)
and
jmp
in
jge
mov
sbb
sub
fistp
sbb
mov
clc
and
and
dec
pusha
je
test
pop
and
or
in
clc
imul
fidiv
push
jns
das
loop
leave
xor
xchg
std
test
sub
cmp
retf
jl
dec
aas
fdecstp
cwde
push
pop
inc
cmp
or
push
sbb
xchg
dec
dec
ins
int
popf
add
mov
dec
stos
jp
rcr
jp
aam
sub
stos
pop
movs
cdq
xor
jo
pop
fs
and
mov
mov
test
push
inc
push
add
cmp
adc
xor
or
inc
(bad)
jp
adc
xor
jo
fisttp
jnp
jp
pop
dec
pop
xor
jge
and
fmul
and
ret
mov
out
leave
out
shr
aam
out
jl
jl
cmc
push
je
hlt
adc
sbb
cmp
cwde
dec
push
inc
xor
pop
pop
jmp
movs
std
pushf
dec
dec
push
inc
pop
sub
pop
adc
js
sbb
mov
in
lods
jp
test
fsub
test
or
jp
or
ins
cmc
pop
jns
hlt
cmp
stos
jp
push
hlt
jl
loop
inc
mov
aam
repnz
xchg
jp
sbb
aad
(bad)
inc
std
and
in
in
jmp
rcr
pop
dec
adc
(bad)
jns
rcl
fld
cmp
inc
cmp
ins
cmp
lock
dec
xor
clc
out
jl
jne
fs
cmc
jl
js
push
dec
or
mov
push
pop
push
jns
push
dec
mov
je
dec
inc
adc
je
ins
cmp
test
pop
sbb
enter
cmc
add
jp
mov
test
test
xchg
js
pop
(bad)
sub
push
and
mov
inc
ss
in
push
xor
push
les
call
dec
xchg
xchg
hlt
xchg
xchg
shl
pop
movs
cmp
test
sar
out
test
push
xor
mov
sub
les
mov
xor
in
adc
jl
xor
pop
fs
pop
in
sbb
add
inc
dec
dec
push
lahf
xor
adc
xor
lea
nop
jbe
jo
adc
or
dec
aam
xor
cmp
shl
pop
jp
sub
jmp
cwde
imul
and
je
xchg
jp
xchg
lock
inc
sar
pop
dec
mov
jp
jl
adc
cli
pop
pop
pop
and
call
xor
test
push
jae
cmp
cld
cmp
mov
sub
in
cs
jl
outs
or
or
dec
aam
push
pop
addr16
fdiv
inc
int3
movs
cmp
repz
in
dec
sbb
xor
mov
cmp
addr16
fs
lods
pop
inc
inc
ss
js
sub
lods
fnstsw
fld
or
inc
bound
in
ror
jp
je
cmps
shr
inc
mov
push
clc
add
add
adc
xor
mov
push
dec
mov
sbb
inc
or
and
mov
pop
int3
push
pop
push
fdiv
push
dec
sbb
inc
sub
loope
xchg
dec
idiv
mov
jl
imul
gs
dec
xor
(bad)
pop
int3
inc
xchg
or
jo
mov
sbb
mov
add
jl
les
fisttp
xor
jbe
aad
(bad)
or
daa
nop
fimul
out
inc
sahf
push
sbb
jne
test
mov
nop
or
fcmovb
nop
pop
nop
jae
sub
xchg
mov
shr
and
test
aam
xor
xor
mov
xor
les
dec
inc
je
inc
fistp
cmp
hlt
nop
ins
jmp
pusha
ds
dec
add
or
jae
dec
cmp
xchg
pusha
inc
js
cs
clc
fdivr
or
inc
fadd
outs
ret
push
adc
cwde
aas
mov
out
icebp
push
ret
mov
inc
adc
cmp
addr16
fdivr
hlt
xor
out
mov
jae
mul
in
and
pop
sub
push
sub
(bad)
jl
imul
ins
jl
cmp
inc
adc
ror
cwde
je
inc
and
hlt
inc
aas
js
cmp
xor
jl
pop
push
mov
pop
ins
push
lea
loope
add
cmps
xchg
addr16
jl
shl
shl
mov
adc
test
or
loopne
ins
aam
jne
sub
xchg
bound
inc
icebp
test
cmp
jge
jmp
push
popf
mov
ja
jo
loop
loop
push
push
jl
push
jno
clc
cmp
fsubr
call
clc
jl
inc
mov
ins
xor
mov
imul
xor
je
mov
push
add
push
cmp
jl
call
push
scas
jbe
xchg
push
repnz
mov
cmps
jg
je
mov
cwde
xor
mov
imul
cmp
ja
(bad)
adc
jmp
pop
aas
retf
or
jl
int3
call
sub
sbb
cmp
out
pop
inc
cs
xor
add
pop
lods
dec
xchg
and
loope
cmp
inc
cmp
cmp
test
or
popa
and
in
jl
aaa
and
mov
mov
pop
jmp
ds
inc
inc
sub
aam
mov
and
in
mov
jmp
or
jg
xchg
jmp
lods
repnz
add
dec
xchg
and
push
jb
fcomp
cwde
ja
add
mov
cmp
(bad)
and
cdq
iret
or
mov
nop
sub
jmp
xor
dec
out
mov
inc
das
jle
enter
cmp
shl
jo
cmp
push
aas
hlt
cmp
bound
push
dec
adc
jb
push
js
sub
std
mov
and
cli
cmp
add
pop
or
aas
mov
inc
jge
push
push
cmp
cmps
xchg
movs
fs
jp
dec
call
mov
xchg
mov
sub
rcr
rol
rcr
test
push
lds
and
aam
ds
data16
mov
int3
push
dec
adc
imul
ja
js
arpl
imul
les
mov
clc
shr
inc
fld
sub
stc
sub
lds
adc
xor
inc
xor
push
sbb
imul
cmp
or
movs
push
push
sub
push
dec
adc
rcr
inc
icebp
mov
adc
cmp
mov
push
ss
in
inc
ja
xor
mov
sbb
(bad)
and
inc
cmp
mov
cmp
dec
enter
mov
clc
(bad)
out
or
fnstenv
adc
push
call
jne
jns
lea
jmp
pop
loope
pop
mov
adc
dec
int3
and
out
dec
imul
jo
sub
pusha
cmp
rcr
(bad)
push
hlt
pushf
cmp
std
ins
pop
dec
dec
leave
cmp
inc
hlt
jmp
lods
jo
and
repz
jmp
add
and
mov
in
cmp
xor
fsubr
adc
dec
push
movs
jo
push
out
push
test
adc
fs
cmovbe
xchg
jnp
cmp
dec
sbb
repnz
in
cld
sub
js
dec
add
clc
jne
inc
pop
shl
mov
jns
jecxz
and
aas
cmps
in
fs
push
cmp
pop
int3
push
cmp
xor
and
pop
lock
cmp
mov
dec
dec
mov
imul
inc
in
nop
or
cmc
ins
cwde
outs
cmp
push
ins
addr16
jne
sbb
aam
ss
test
xor
test
sti
call
cmp
js
sub
nop
adc
jb
outs
dec
pop
jae
push
push
inc
push
jns
jo
dec
loopne
jb
ret
adc
sar
sbb
js
lss
inc
push
sub
in
adc
cmp
mov
xchg
test
js
(bad)
in
cmp
push
add
and
sbb
sub
(bad)
mov
dec
cmp
loopne
cmp
aaa
std
cwde
xor
inc
sbb
dec
and
mov
pop
jl
push
or
fs
mov
cs
mov
inc
imul
aaa
call
ins
push
xor
mov
dec
retf
dec
inc
call
dec
sub
pop
mov
fs
sbb
xor
sub
jp
pop
push
es
push
data16
sbb
cmp
add
push
xor
or
sub
and
js
push
shl
bswap
add
in
and
dec
adc
mov
test
inc
hlt
call
call
sub
cli
in
jge
dec
dec
sbb
lock
pop
fwait
sub
push
xchg
mov
and
movs
sub
pop
push
add
jo
add
inc
cld
cs
cld
aaa
jl
ja
ins
sbb
adc
lods
sbb
cld
call
inc
call
hlt
pop
inc
gs
inc
inc
jo
dec
add
cmp
pop
inc
xor
inc
cmp
movs
adc
gs
push
jne
push
dec
xor
bound
mov
dec
aad
(bad)
sbb
leave
mov
imul
lock
aaa
mov
jge
and
(bad)
(bad)
jmp
in
ds
push
movs
js
sub
cmp
les
pop
cld
xchg
aas
mov
cmp
cld
jae
push
pop
sub
in
das
sub
add
cmp
sbb
pushf
and
jecxz
xchg
or
sub
in
push
jmp
jmp
xchg
mov
xor
inc
sbb
iret
xchg
cmp
dec
inc
adc
inc
jne
mov
icebp
dec
mov
cmc
jmp
gs
pop
cmp
pop
lea
jnp
xchg
fcom
call
les
pop
sub
cwde
cmp
inc
cmp
push
mov
push
push
dec
verw
out
fisub
jo
pusha
imul
rcr
inc
cmp
and
or
xor
ss
fidiv
cmp
in
nop
and
pop
and
cmp
xor
out
shl
cmp
cwde
loopne
inc
sti
lds
add
cmp
push
jp
lods
gs
pop
cmp
pushf
mov
les
addr16
cmp
call
stos
or
(bad)
inc
pop
jne
xchg
outs
mov
ss
mov
dec
inc
push
popa
jo
or
xor
test
mov
out
pusha
fs
mov
dec
cmp
push
cmp
jnp
dec
cmp
int3
push
dec
or
cmp
fs
pop
dec
das
and
xor
dec
cdq
std
inc
hlt
and
xchg
ds
int
dec
cmp
sub
jge
dec
cmp
jmp
aas
fmul
mov
lods
adc
aam
imul
xor
ss
cmp
out
xchg
fsub
in
mov
xor
das
in
xchg
jp
pop
xchg
mov
xor
cmp
inc
inc
xor
mov
push
or
mov
adc
data16
aad
icebp
outs
in
ds
retf
or
pop
loop
and
pop
jl
cmp
inc
pop
in
jae
jmp
js
add
jmp
jp
cmp
jbe
xor
pusha
sub
js
cmp
pop
bound
push
dec
fs
cmp
dec
dec
add
sbb
dec
sub
jmp
mov
jecxz
fdivr
mov
pushf
ss
int3
push
(bad)
xchg
dec
(bad)
hlt
xor
xchg
js
lock
neg
inc
aam
pop
cmp
or
clc
ds
push
inc
ror
mov
or
inc
clc
mov
retf
cmc
mov
lods
data16
cmp
pop
mov
jae
pop
adc
outs
cli
aam
xchg
or
sub
add
mov
or
test
clc
and
pushf
mov
fmul
jne
xor
adc
stc
add
sar
sub
lock
mov
stc
cmp
sub
hlt
stos
cld
jne
out
test
ret
mov
inc
dec
paddsb
push
adc
int3
cmp
push
ror
cmp
(bad)
fisubr
inc
inc
and
pop
cmp
shr
cmp
push
and
mov
dec
xor
push
cmp
jno
inc
in
xchg
out
inc
das
mov
rol
gs
sahf
test
jb
dec
pop
fisub
data16
mov
sti
ror
mov
xor
test
aaa
inc
cmp
cmps
sub
(bad)
sti
inc
in
bsf
les
jne
add
adc
or
je
inc
inc
adc
adc
inc
in
dec
inc
or
aam
and
inc
dec
inc
ins
xor
xchg
cmp
or
add
mov
inc
aad
fwait
ret
lods
mov
int3
dec
dec
and
cmp
lods
sub
dec
inc
je
loop
xchg
mov
xor
ds
and
fist
into
push
sub
enter
cmp
aas
pop
in
adc
lods
xor
inc
aaa
scas
and
in
mov
jae
bound
pop
inc
bound
dec
mov
js
cmp
aaa
or
lods
jno
or
cmp
jne
movs
bound
push
cmp
aas
mov
xchg
fs
mov
lods
test
or
pop
in
icebp
jne
cmovl
std
and
cmp
pop
inc
test
enter
add
les
dec
inc
adc
push
jne
xor
mov
or
adc
sub
fmul
or
arpl
inc
call
xor
ret
or
pop
fsubr
addps
fwait
mov
mov
cli
je
cmp
jb
sub
shl
mov
ja
dec
xlat
dec
sub
sub
cli
lock
cs
sbb
mov
ins
out
and
cld
lods
jne
mov
jle
stos
dec
js
mov
imul
and
lea
or
les
repnz
add
jp
pusha
sbb
outs
ret
js
jbe
xchg
lea
add
inc
std
ins
jp
cld
repz
aam
sub
jmp
aaa
and
mov
sbb
pop
and
outs
sbb
dec
dec
mov
push
mov
jns
mov
dec
jae
or
scas
mov
xor
leave
pushf
shl
jo
js
jo
jne
cs
scas
mov
jne
jnp
push
shl
sar
push
mov
add
lock
pop
enter
inc
sub
mov
pushf
or
ins
add
rcl
lock
test
mov
jo
or
or
fwait
aas
xchg
push
outs
sbb
mov
fdivr
push
outs
test
sub
adc
jne
xchg
fsubr
lock
outs
js
js
inc
xor
lods
sbb
bound
sbb
in
xor
push
(bad)
ins
lea
mov
stos
loope
(bad)
fs
enter
inc
mov
cli
fcomp
loope
loopne
repnz
jne
gs
jne
out
jmp
test
stos
inc
inc
inc
jg
fmul
cld
jbe
mov
mov
aam
dec
dec
ins
outs
je
push
cli
pop
pop
inc
(bad)
js
sub
inc
and
jo
je
call
enter
adc
add
rol
xchg
dec
mov
pop
sbb
cld
pop
je
dec
inc
dec
dec
cdq
and
inc
push
dec
or
inc
inc
je
dec
inc
dec
xor
fadd
xor
jb
sbb
aam
push
cmp
js
pusha
dec
inc
mov
inc
ds
inc
cmp
adc
add
hlt
xor
(bad)
jl
or
inc
(bad)
dec
inc
sahf
fsubr
push
mov
les
gs
outs
outs
pop
out
rcr
rol
shr
je
enter
and
push
sar
or
xor
mov
loope
jl
js
pop
cmp
sbb
and
cs
inc
cmp
sub
xor
add
add
je
ds
sbb
test
sub
sbb
inc
dec
mov
clc
test
es
and
inc
loopne
jo
push
add
xchg
mov
scas
ins
inc
repnz
inc
jmp
cmp
std
cmp
hlt
dec
inc
(bad)
js
cmp
cmp
xor
xor
sbb
sbb
push
push
fcmovb
pop
inc
jne
cld
push
imul
jne
push
call
lods
push
dec
ins
inc
jnp
rol
sahf
dec
or
bound
dec
mov
fs
jnp
arpl
xchg
mov
sbb
imul
jo
pop
and
outs
clc
inc
adc
sub
xor
or
mov
sub
in
(bad)
fcom
in
mov
dec
or
mov
add
std
jge
clc
adc
cmc
dec
fwait
adc
hlt
mov
popf
ds
aas
ins
(bad)
test
pop
add
mov
sar
js
jmp
js
or
mov
add
std
jo
pop
cs
int3
mov
jno
sbb
jns
pop
cmp
inc
pop
pop
in
js
bound
ins
xchg
cmp
test
jne
cwde
ja
outs
rep
cmp
mov
lods
sbb
aam
push
add
je
fs
outs
mov
pop
pusha
pop
repz
and
out
mov
mov
out
mov
dec
inc
cmp
movs
inc
mov
in
jae
jmp
ds
js
inc
cmp
div
call
dec
inc
inc
cld
dec
fdivr
jl
clc
mov
inc
xor
sbb
mov
std
and
add
mov
addr16
sub
mov
cmps
stc
je
call
pop
es
sub
fcom
mov
mov
je
xor
jl
push
push
add
mov
mov
jmp
xor
cmp
cwde
pusha
in
inc
pop
push
xor
cwde
adc
push
dec
and
jl
xor
or
push
and
jae
sbb
imul
push
pusha
cwde
mov
adc
dec
leave
pop
sbb
xor
ins
and
cmp
call
jmp
data16
push
cwde
mov
and
jo
jecxz
dec
jne
adc
cli
in
cmp
clc
cmp
jae
adc
outs
cli
pushf
push
fld1
popa
jbe
dec
dec
push
push
mov
pop
test
lock
pop
sbb
addr16
sbb
push
bound
push
inc
je
popa
mov
pop
inc
jl
cwde
push
sub
push
adc
mov
and
shl
add
repz
push
arpl
jne
dec
jmp
jb
fs
mov
inc
cs
icebp
call
inc
push
rcl
cmp
shl
ins
aaa
out
jo
out
xor
jl
inc
iret
jo
cmp
or
ins
jae
icebp
mov
stos
pop
inc
inc
or
mov
add
test
push
test
xor
bound
aas
jne
sbb
and
(bad)
movs
xor
add
pop
push
sub
outs
inc
imul
sub
loope
pop
push
jl
test
inc
jmp
push
sbb
sbb
pop
scas
in
dec
pop
sub
adc
js
xor
pop
dec
and
push
push
in
sbb
jno
cmp
stos
and
cwde
fs
cmp
or
cmp
call
test
xor
movs
cwde
pop
cmp
sbb
js
test
icebp
xor
ins
xor
jmp
ret
pop
pop
push
stc
shl
push
es
jne
xor
les
shl
jl
sub
jl
pop
push
sub
arpl
outs
jo
addr16
sbb
mov
cmc
jne
cmp
ins
push
fdivr
add
lods
push
loope
push
and
cmp
and
sbb
push
fs
cmp
push
dec
mov
cld
jo
aas
retf
xor
pop
and
jmp
mov
call
sbb
xor
hlt
cmp
push
push
push
es
mov
sbb
dec
jmp
call
push
sub
inc
fdivr
imul
in
pop
or
mov
lock
imul
int3
sub
push
cwde
imul
cwde
xor
jl
xor
sbb
xchg
outs
pop
jmp
mov
cmc
cld
push
pop
jp
pop
adc
pushw
imul
jb
push
xchg
js
dec
pop
lock
pop
push
mov
bound
and
inc
sub
mov
rcr
inc
je
pop
aaa
in
xor
gs
inc
repz
pop
dec
xchg
dec
bound
movs
add
cmp
fdivr
ins
sub
mov
(bad)
mov
je
xor
cmp
cwde
or
jl
test
shr
xor
xor
jo
je
pop
ins
fs
outs
mov
sub
es
jmp
ins
jge
jae
clc
sub
or
fstp
pop
maxps
dec
pop
call
pop
pop
int3
push
push
das
es
inc
dec
and
fidiv
push
pop
sub
iret
jbe
imul
jno
ds
pop
pop
call
pusha
sub
pop
xor
and
inc
mov
aam
mov
das
pusha
cmp
fs
test
js
pop
or
imul
inc
and
js
xor
retf
aaa
sub
mov
bound
loopne
movs
(bad)
in
ror
imul
out
pop
js
ror
pop
jo
das
cmp
sbb
ins
aas
das
scas
loope
adc
xchg
ins
xchg
mov
rcl
mov
les
rol
dec
repnz
in
cmp
push
xor
xor
dec
push
ins
sbb
cs
mov
jns
ja
xor
pop
cmp
pop
push
push
push
clc
push
mov
cs
mov
in
xchg
out
fdivr
inc
sbb
out
je
in
pop
in
js
xor
jecxz
int3
jmp
add
mov
xor
xor
and
lfs
and
stc
movs
imul
mov
xor
jl
mov
pop
mov
ins
add
cs
pop
jne
push
push
or
xor
fsubr
dec
mov
mov
and
and
xor
jno
les
jmp
push
dec
es
pop
sub
adc
cmp
xor
adc
cmp
push
push
dec
sar
repz
je
sahf
rcl
and
(bad)
retf
cmp
push
call
out
fs
pop
push
pushf
imul
loopne
inc
sbb
aad
aad
mov
xor
jmp
jo
adc
outs
fs
jno
ret
shr
cmp
call
or
xor
fsub
jbe
outs
inc
inc
or
xor
repz
sbb
aad
jmp
xor
cmp
push
pusha
cmc
pop
jmp
pop
push
jne
jno
jp
pop
xor
nop
jge
imul
sub
inc
fs
retf
adc
push
outs
jge
jb
inc
aas
push
jp
sub
out
and
fcmovnu
std
jnp
xor
mov
sbb
mov
cmp
mov
test
pop
ror
ins
loop
dec
mov
fisub
cmp
shr
mov
nop
mov
adc
imul
dec
mov
shr
fsubr
fsub
dec
dec
sbb
ds
xor
push
gs
mov
push
hlt
ss
hlt
scas
push
es
cmp
xor
int3
ds
pop
push
int3
sub
sbb
fs
or
xor
pushfw
stos
pusha
cs
lods
jne
outs
pushf
pusha
pop
mov
test
pop
das
push
or
dec
push
mov
aam
dec
das
cmc
fdiv
sbb
adc
test
int3
dec
push
xabort
inc
sub
xor
nop
sbb
addr16
out
ins
aam
adc
gs
xor
ins
dec
dec
out
lock
jno
in
data16
cmp
or
sub
aam
and
je
in
popa
push
xor
fcom
push
dec
das
sbb
pop
sub
push
cmp
add
push
es
movs
sub
js
imul
pushf
nop
jge
and
push
xor
cwde
pop
pop
and
ins
dec
inc
int3
lea
xor
cmp
or
add
inc
and
pop
push
mov
ss
(bad)
int3
cmp
enter
out
int3
int3
adc
push
pop
mov
popa
pop
pop
and
sbb
cli
ss
in
cmp
in
mov
ins
mul
cs
lods
pushf
sub
out
mov
mov
sub
pop
ins
push
cmp
mov
jge
je
inc
pushf
fs
xchg
in
jl
jno
xor
push
sbb
adc
sub
mov
push
loope
push
xor
int3
sbb
mov
xor
xor
clc
cmp
movs
push
sbb
cmp
dec
popa
push
fs
les
bound
mov
cmp
jo
loop
imul
dec
loopne
stc
and
push
in
or
div
out
scas
cdq
das
jmp
sub
cmp
sub
out
xor
jo
es
mov
aam
xchg
xor
xor
mov
dec
push
cmp
call
je
aaa
addr16
mov
repz
fisub
cmp
jge
mov
xchg
js
push
loopne
push
cli
adc
mov
dec
adc
sub
popw
pop
cli
push
dec
js
fadd
pop
cmp
test
cmp
sub
mov
push
daa
fdiv
test
push
ja
push
mov
pop
xor
cmp
movs
push
call
enter
push
xor
pusha
popa
cmp
jo
test
ins
push
ins
pop
push
test
xor
adc
push
mov
or
push
xor
repz
mov
inc
cli
or
sbb
or
sub
push
cmp
mov
push
cmp
jl
inc
mov
sub
and
xor
ret
xor
xlat
and
mov
test
pop
pop
xor
xor
fmul
data16
outs
adc
or
add
push
repnz
xor
call
push
or
jl
pop
xor
inc
add
sbb
jno
adc
movs
sbb
and
push
cmp
ins
adc
mov
pop
clc
pop
mov
cmp
lods
dec
lds
adc
xor
cmp
fs
popa
and
aam
rcr
cmp
mov
dec
lods
std
out
in
mov
cld
cmp
cwde
jne
cmp
dec
sar
inc
xor
ins
cmp
les
sub
fdiv
cmp
jbe
jno
cwde
test
or
fidivr
sbb
ins
sub
shl
inc
inc
fcom
cld
jmp
dec
hlt
pop
js
inc
sbb
push
bound
movs
in
cmp
js
mov
xor
cld
lea
sub
adc
cmp
dec
cmp
lea
test
adc
les
in
sub
dec
icebp
fsubr
pop
add
nop
dec
mov
cmps
mov
loopne
ficomp
xor
adc
jb
dec
jle
jo
cs
add
aad
push
inc
frstor
mov
sub
in
or
mov
test
imul
fs
fcomp
in
je
pop
ins
or
inc
xor
cmp
das
sub
and
cmc
fcom
loopne
dec
push
push
lods
sub
or
in
push
loopne
xor
and
aam
in
push
xor
xor
stc
fdiv
out
add
mov
je
push
scas
push
pop
outs
xor
or
sub
and
hlt
lock
js
push
pop
fmul
jne
dec
call
xor
mov
push
push
fs
mov
mov
jmp
in
js
dec
vmread
and
mov
pop
and
rol
push
adc
int3
pop
xor
pusha
mov
les
pop
mov
xor
dec
cmp
cs
daa
jmp
mov
inc
inc
(bad)
pusha
aaa
xor
or
add
xor
test
xor
and
or
inc
sbb
lock
mov
dec
test
inc
jne
(bad)
imul
ins
pop
xor
xchg
mov
cld
cwde
popa
ret
cmc
or
mov
cmp
sets
cwde
imul
popf
push
push
icebp
mov
add
jae
jae
pusha
bound
push
inc
jne
dec
sub
and
pop
pusha
outs
cdq
jp
ins
push
sahf
dec
mov
pop
dec
stos
and
rcl
jl
js
in
cli
add
mov
ss
mov
mov
in
adc
jo
dec
fs
add
jmp
cmp
stos
pop
js
sub
cld
in
es
out
push
or
inc
outs
push
inc
cmp
cld
lods
or
pop
dec
xor
imul
(bad)
test
mov
shl
inc
and
xor
xor
sub
in
fdiv
jne
sbb
fcom
xchg
les
mov
clc
fstp
push
add
fimul
in
repnz
test
imul
jae
sub
mov
xchg
outs
lods
movs
mov
cmps
popf
aam
dec
mov
test
jno
sbb
mov
inc
push
jo
fwait
push
jmp
dec
test
addr16
xor
cmp
adc
cwde
push
sbb
dec
dec
das
test
out
and
fs
jle
jns
iret
mov
loopne
fadd
fild
add
mov
and
jl
stc
xor
call
cmp
lahf
jl
popa
add
cmp
cmp
out
push
dec
cmp
lods
push
mov
lea
je
xchg
xchg
ret
shl
push
(bad)
cmp
fwait
sbb
lods
lods
pushf
xchg
(bad)
mov
je
arpl
dec
std
mov
fdiv
ins
inc
cmps
imul
mov
xchg
jne
ds
push
(bad)
jnp
mov
cwde
pop
pushf
xchg
lods
mov
call
in
out
stos
xchg
repz
push
mov
add
mov
je
scas
lea
nop
stos
leave
les
lea
add
cmp
test
int3
js
std
jl
xchg
push
push
push
clc
and
call
dec
inc
dec
clc
cmp
js
push
retf
pop
call
leave
and
jne
mov
xchg
ja
test
xor
enter
lods
jno
test
out
(bad)
movs
test
fidiv
cmp
xor
mov
mov
repnz
movs
out
jg
int3
fnstsw
xor
mov
xor
dec
out
scas
stos
mov
in
adc
cmp
inc
jmp
jecxz
les
aam
xchg
pop
and
sbb
popf
jecxz
pop
sub
jmp
add
fs
in
adc
inc
cmp
cmp
inc
xchg
icebp
sbb
int3
pop
and
add
arpl
adc
not
inc
cmp
clc
fdiv
les
push
dec
mov
jg
je
adc
imul
fcomp
push
lods
sbb
pop
xchg
jne
into
clc
or
fldlg2
ja
cwde
outs
jne
ins
repz
mov
sbb
scas
stos
shr
mov
scas
mov
xchg
in
out
in
repz
sub
push
sub
and
lods
push
lahf
ja
out
loope
mov
scas
pop
aad
ds
test
pop
jae
call
dec
test
aas
cmp
in
je
sub
add
lods
in
imul
jl
jl
stc
push
mov
mov
cmp
out
adc
cwde
enter
dec
dec
adc
je
sub
movs
pop
out
sub
adc
fcom
xor
test
xchg
movs
adc
pushf
mov
mov
xchg
sbb
fptan
rcr
scas
lods
ins
xchg
jne
mov
les
loop
inc
inc
ds
lea
inc
data16
cmp
mov
xchg
retf
or
arpl
sbb
lods
scas
mov
cmp
add
sub
cmp
ss
test
movs
cmps
aam
and
add
push
aam
cli
xor
out
pop
add
inc
adc
fnop
lods
xor
rol
arpl
jne
std
or
pop
pop
push
in
mov
dec
xadd
xor
pop
push
frstor
pop
push
dec
xchg
cwde
movs
(bad)
pop
mov
fcom
aam
lods
stos
test
lock
nop
fdiv
pop
addr16
and
push
jbe
(bad)
mov
mov
and
push
sub
test
aaa
xor
push
push
or
xchg
loopne
ud2
pop
sub
(bad)
xchg
in
sbb
sbb
mov
jmp
adc
mov
xchg
pop
lea
mov
xchg
ins
fwait
call
mov
pop
xor
in
pushf
pop
repnz
fcom
jae
mov
ds
mov
(bad)
clc
xchg
popa
pushf
movs
sti
sub
cwde
mov
call
loopne
add
push
or
nop
inc
cmp
test
movs
fs
mov
mov
xchg
leave
push
retf
leave
ret
(bad)
and
pushf
popf
cdq
aad
xchg
mov
cmp
xchg
(bad)
loop
xor
cmp
(bad)
aam
shl
lahf
adc
add
push
repnz
add
xor
enter
das
cmp
repz
scas
xor
xor
mov
gs
mov
sub
push
mov
push
pop
xor
test
cdq
clc
mov
push
jl
test
sbb
mov
sbb
popf
call
in
std
xor
cwde
jae
push
nop
mov
pop
push
dec
pop
stos
cmps
test
xcrypt-ctr
cmps
cwde
cwde
adc
jo
(bad)
mov
adc
add
jmp
mov
fcom
sahf
mov
scas
sub
lock
and
dec
mov
int3
lahf
pusha
lds
mov
dec
push
or
shl
mov
push
pop
out
xor
xor
js
out
mov
cwde
cli
fwait
jl
jno
fst
add
out
hlt
inc
ds
cmp
jmp
mov
xchg
fld
mov
sbb
in
int3
and
xor
fs
js
pop
outs
pop
out
dec
call
jp
das
dec
pop
lock
and
ds
jo
int
fdivr
inc
loope
aam
xchg
pop
gs
sbb
inc
sbb
push
jo
xor
pop
lea
pop
test
(bad)
cli
in
sub
mov
dec
loop
shl
mov
mov
mov
into
stc
cmp
out
fisttp
cmps
test
fcomp
enter
js
int3
ins
mov
mov
rcl
loopne
dec
sub
call
xchg
and
aaa
and
call
xchg
fs
inc
or
enter
pop
int3
push
(bad)
push
daa
sbb
add
int
out
std
mov
xor
dec
jae
inc
xor
and
in
push
push
popf
and
inc
mov
jae
aas
or
push
dec
call
popf
cmp
mov
and
call
inc
sahf
mov
push
mov
pop
jae
out
inc
xchg
xchg
cmp
or
cmp
in
jecxz
stc
adc
clc
js
mov
std
fimul
dec
inc
jg
ins
push
sbb
movs
xor
out
add
ja
out
in
(bad)
(bad)
(bad)
xchg
cmp
out
call
rcl
sbb
jae
fst
or
xor
jl
popa
dec
xor
push
and
leave
jp
xor
mov
inc
pop
gs
and
mov
sbb
cmc
fs
cmp
jo
and
enter
push
cld
popa
sbb
and
sub
xor
adc
ds
push
fcmovnbe
jb
nop
enter
std
lea
cmp
imul
jae
clc
loope
pop
lea
mov
sub
xor
out
shl
xor
std
hlt
and
stc
xorps
nop
and
mov
push
mov
dec
inc
jns
sub
mov
movs
push
dec
push
jmp
pop
push
adc
lds
xor
jne
int
jl
jo
jo
js
das
adc
xor
jmp
push
clc
mov
xor
fimul
sar
inc
cmp
mov
inc
push
call
in
aaa
pop
(bad)
adc
cmp
adc
je
dec
and
(bad)
stc
pop
sub
pop
enter
or
and
in
daa
and
test
jne
std
ja
or
xchg
cdq
rcl
xor
cld
mov
sbb
push
mov
and
add
xor
aam
sti
popa
pop
sbb
je
add
and
ret
fcom
aam
cli
and
fisubr
dec
xor
pushf
and
daa
leave
mov
cs
push
js
test
xor
sti
fstp
jo
add
or
fxch
jmp
cld
sub
shr
ror
jb
jbe
pusha
pop
xchg
nop
das
pxor
adc
daa
ins
rcl
pop
cmp
dec
jno
pop
jb
sbb
jbe
std
(bad)
ins
sub
clc
xor
stc
rcr
clc
or
cmp
jae
outs
push
enter
push
popa
push
pushf
push
or
mov
(bad)
int3
das
add
jbe
dec
call
cmp
(bad)
scas
add
loop
push
bound
in
jmp
add
out
push
xchg
nop
push
dec
inc
hlt
dec
inc
mov
dec
inc
in
jmp
dec
and
movs
test
jno
das
mov
enter
sbb
hlt
pop
cmp
loopne
popf
mov
push
sub
pop
jl
jno
jne
cmp
push
sbb
mov
jecxz
or
or
sub
arpl
movs
dec
inc
cmp
mov
cmp
pop
pop
pusha
cs
pop
push
mov
stos
or
xor
clc
mov
jnp
mov
popf
popf
lods
scas
or
shr
lock
jne
push
jae
and
call
lods
dec
movs
paddusw
aas
inc
mov
je
daa
ja
into
mov
mov
mov
fwait
dec
cli
repz
adc
push
pushf
test
and
rol
mov
push
nop
lods
into
sbb
mov
pushf
gs
fnstsw
shr
shr
sub
pop
mov
sbb
mov
and
fstp
inc
sub
push
or
cmp
jl
dec
inc
add
pop
cmp
or
sbb
jbe
call
jmp
xor
pop
cld
mov
repnz
mov
lods
cmps
(bad)
shl
mov
pop
lods
and
xor
jmp
xor
dec
sbb
lods
ror
xor
fsubr
jmp
sar
ror
in
test
enter
lods
sbb
mov
call
sub
push
aaa
movs
xchg
sbb
in
xchg
jne
cmp
sbb
and
retf
sbb
ret
xor
shr
cmp
inc
cmp
sbb
jl
xor
lods
inc
inc
fsub
jl
aaa
sar
add
mov
push
inc
cmps
adc
sub
in
pop
inc
out
call
and
fs
add
xor
enter
mov
cmc
stc
dec
mov
mov
je
mov
nop
or
push
jnp
stc
sti
fstp
test
nop
jle
inc
dec
lahf
stos
sar
pop
pop
jne
xchg
jmp
cmp
inc
sub
mov
dec
or
repz
mov
std
test
sbb
cwde
std
ret
or
(bad)
fmul
dec
push
xchg
out
js
pop
faddp
inc
sbb
dec
cmc
jmp
nop
pop
mov
sbb
inc
xor
adc
hlt
aas
cmp
xor
add
lock
pop
xor
and
fidiv
movs
test
xchg
sbb
in
and
pushf
inc
jne
aas
inc
test
mov
xchg
jne
mov
into
hlt
xor
call
imul
test
fcomp
out
in
and
pop
mov
test
xlat
js
lock
push
mov
inc
mov
adc
clc
das
sub
fadd
sar
mov
nop
push
(bad)
jle
inc
stos
sti
pusha
mov
mov
xchg
(bad)
call
js
in
cmp
jecxz
fistp
and
xchg
inc
inc
cs
cli
in
test
jb
mov
in
inc
xor
dec
cmp
dec
cmp
inc
add
push
or
jl
jl
fs
and
(bad)
aam
dec
(bad)
inc
test
cmp
fisttp
sbb
and
xor
shl
cmp
cmp
push
mov
sub
imul
pop
xlat
mov
dec
xor
xor
xor
mov
(bad)
std
cmc
and
sub
mov
(bad)
cli
retf
push
movs
ins
pusha
mov
in
xor
iret
jno
inc
aam
mov
or
fdivr
sub
xchg
int3
and
push
imul
jp
sub
adc
xchg
jp
jo
ins
sbb
les
jno
imul
ret
push
cmps
mov
add
in
adc
cmp
or
pop
arpl
xor
lds
cs
fdivr
dec
dec
push
gs
in
clc
hlt
push
sbb
mov
cmp
fadd
pop
add
ds
pop
adc
push
mov
mov
mov
pop
test
in
or
(bad)
pop
inc
test
add
mov
adc
xor
sub
sbb
je
dec
int
(bad)
mov
xchg
dec
push
push
mov
xchg
data16
xchg
xor
in
nop
clc
xchg
aam
test
packssdw
jns
and
mov
and
add
push
imul
test
mov
push
mov
fisttp
lods
sbb
arpl
add
cmp
loop
adc
jne
push
add
jl
pop
add
dec
adc
in
xor
sar
pop
adc
push
mov
dec
enter
div
in
cmp
fsubr
clc
dec
repnz
sbb
pop
scas
lods
xchg
imul
mov
mov
movs
popf
sub
sbb
rcl
xchg
mov
push
sbb
in
dec
or
adc
cwde
pop
ret
jne
or
mov
cld
sub
jp
outs
push
cmp
nop
sub
cld
out
jne
test
mov
and
mov
adc
pusha
sub
aad
test
aaa
out
test
xchg
mov
inc
adc
dec
mov
jl
jne
dec
and
jae
(bad)
and
and
jl
test
xor
loope
enter
aam
push
cdq
lock
mov
push
cwde
cmc
xor
mov
cwde
fdivr
xor
jl
cmps
cmps
pushf
test
dec
push
pop
inc
mov
push
sbb
mov
je
(bad)
rcr
mov
mov
js
inc
inc
mov
mov
xchg
fldenv
push
cmp
mov
pop
or
mov
inc
dec
sahf
pop
mov
xchg
fild
int
mov
and
push
push
add
mov
xor
(bad)
and
clc
test
cwde
jmp
(bad)
adc
inc
cmp
add
pop
clc
cmp
mov
or
inc
repnz
push
and
mov
aas
ret
jnp
mov
add
fcmovne
cmp
mov
mov
mov
cmp
add
sub
aam
xchg
cmp
xor
pop
bound
inc
imul
sti
popf
cmp
xor
lahf
push
popf
mov
xlat
cmp
les
call
pop
cli
stos
jo
test
sbb
ins
dec
outs
fsub
jbe
in
std
das
dec
sar
loop
pop
leave
xchg
cmp
mov
test
pop
or
js
mov
jmp
call
sub
popw
push
(bad)
das
js
imul
iret
mul
jp
cmp
cmp
mov
xor
(bad)
adc
call
(bad)
xor
jne
fisub
sub
cwde
rcr
movs
aad
cs
int
sbb
imul
and
or
popf
pushf
mov
dec
call
dec
mov
movs
aam
push
(bad)
fldcw
lock
xor
dec
cmp
loope
ins
cdq
pop
inc
cmps
stos
xchg
mov
hlt
outs
ins
add
dec
(bad)
aam
out
les
mov
cmc
sub
pushf
push
lock
adc
scas
cmp
sbb
loopne
push
les
sub
test
jmp
jl
jle
xchg
pushf
jl
or
mov
add
adc
adc
mov
and
popa
sub
shr
push
(bad)
cmp
mov
bound
clc
mov
sar
pop
sbb
ins
inc
push
(bad)
xor
les
push
rdpmc
fs
jo
dec
pop
push
inc
movs
pop
pop
xor
add
dec
loope
jmp
loopne
and
ins
bound
cld
cmc
mov
(bad)
lock
or
nop
cli
repnz
lock
outs
adc
shl
lods
lock
pushf
sub
or
dec
or
scas
test
and
aaa
daa
(bad)
call
mov
mov
movs
push
leave
test
dec
jnp
cmp
cmps
cmp
cmp
push
int
lods
push
mov
push
sub
clc
xor
das
int3
jb
mov
fcom
ds
aas
scas
outs
and
mov
je
jmp
pushf
inc
push
pop
dec
or
inc
test
sub
sub
out
adc
in
icebp
ds
pushf
pop
and
jae
pop
sbb
cmc
jge
cli
jecxz
cs
mov
jo
and
adc
or
push
fs
sbb
xor
mov
xchg
mov
fnsave
adc
(bad)
cmc
lods
jp
or
sbb
pop
push
test
mov
in
pop
adc
jl
inc
xor
inc
xor
jl
jl
ins
push
(bad)
in
or
and
lock
cmp
out
pop
and
retf
sub
mov
xor
xor
xor
ss
aad
xor
fistp
or
in
xchg
stos
out
lods
mov
les
out
lock
sub
or
or
jge
cmp
inc
push
add
js
sub
js
fldcw
inc
and
push
jmp
leave
stos
call
inc
cmp
cmps
je
add
shl
dec
fdiv
cmp
clc
sbb
sub
out
call
sub
lods
push
in
ins
dec
adc
mov
sub
rcr
sbb
xor
xchg
pop
push
je
call
stos
jl
stc
enter
xor
aaa
sub
pusha
cli
shl
cmp
jge
bound
pop
pop
push
xor
fdivr
call
dec
and
cmp
cmp
adc
mov
xor
mov
cmp
sbb
inc
jp
inc
call
mov
sub
ror
xchg
and
out
inc
jg
and
pop
mov
push
and
into
ror
cmp
pushf
lods
in
icebp
sub
shl
pop
aas
sbb
cld
dec
adc
cmp
frstor
and
or
add
lock
in
and
cmc
and
and
je
aam
test
fisub
les
cmp
js
pop
push
pop
jnp
cli
scas
sub
sub
les
mov
cdq
push
js
(bad)
out
push
pop
jb
imul
cmp
leave
push
inc
fsubr
es
das
push
imul
add
jo
mov
inc
cmp
loop
ins
cmp
jne
dec
stos
dec
rcr
jmp
sbb
mov
movs
jmp
mov
test
jnp
xor
pop
je
imul
xor
in
fdivr
dec
les
dec
jne
rol
sub
and
fnsave
in
jmp
adc
mov
sub
ret
xlat
leave
stc
mov
xor
add
pop
adc
push
jb
sbb
jbe
or
mov
ficomp
loop
inc
aaa
cs
iret
movs
xchg
jo
lods
push
xor
aas
add
sub
in
mov
and
fcom
jae
xor
and
into
xor
xchg
adc
inc
cmps
cli
les
cli
movs
dec
inc
out
in
jmp
xor
xor
or
adc
hlt
pop
push
or
dec
mov
and
ror
cmp
sub
cmp
mov
pop
cmp
jb
icebp
js
clc
imul
adc
les
sub
or
enter
sub
xor
and
push
pop
inc
clc
retf
pop
ins
cmp
adc
mov
sbb
add
push
inc
push
push
jne
adc
pop
and
push
js
sub
jmp
mov
sub
js
cli
fucom
dec
lock
cmp
in
sub
adc
imul
pop
mov
cs
fs
dec
(bad)
inc
inc
fist
mov
call
(bad)
add
outs
sub
clc
fistp
dec
iret
mov
cmp
or
loope
lock
adc
inc
cmps
pop
das
shr
jle
xor
push
jae
cmp
jl
int3
mov
xor
shl
lods
and
pop
sub
int3
inc
sbb
test
pop
inc
test
in
rcr
stc
test
pushf
and
ror
aas
hlt
add
push
addr16
jl
adc
jo
sbb
cmp
stos
xchg
jne
fdivr
sub
cmc
xor
jl
jge
imul
aas
pop
jle
xor
add
push
loopne
enter
push
mov
push
outs
ss
xor
and
xor
mov
and
push
mov
test
repnz
les
in
mov
cmp
adc
adc
jo
outs
cmp
push
jp
or
mov
and
fcomp
cmp
movs
cmp
lock
int3
jmp
aas
mov
pop
fstp
pop
mov
shl
inc
addr16
mov
shl
dec
fld
les
adc
sbb
mov
sub
cld
sub
in
push
xor
cld
push
das
(bad)
sbb
sub
xor
jae
mov
add
pop
pop
xor
nop
push
and
jmp
push
mov
inc
leave
adc
mov
hlt
push
inc
test
mov
aas
jmp
push
call
cmp
mov
push
out
jae
adc
pusha
sbb
mov
js
cmp
dec
inc
cmp
push
sub
and
mov
cmp
dec
daa
and
mov
in
int
lea
sub
(bad)
rcr
dec
js
inc
idiv
in
icebp
jl
(bad)
jnp
xor
jb
pop
pop
pop
or
jp
cmp
push
retf
aad
mov
dec
lea
push
stos
iret
fist
sub
fmul
and
dec
das
jne
daa
dec
movs
push
in
aam
jne
es
sar
dec
inc
pop
mov
fwait
cwde
dec
inc
jp
push
dec
cli
add
leave
cmc
adc
mov
ror
js
dec
dec
enter
or
ror
pop
push
mov
xchg
rcl
adc
pminsw
xor
sbb
dec
pop
movs
jae
lock
in
jl
ss
add
push
sbb
add
inc
imul
clc
in
shl
mov
jmp
clc
push
jl
bound
pushf
inc
push
(bad)
sbb
out
mov
pop
xor
adc
xor
sbb
int3
aaa
add
pusha
jmp
or
add
fiadd
or
ins
or
xor
mov
test
jns
dec
cld
aam
out
aam
pop
mov
push
push
add
fucomip
add
sub
cs
clc
pushw
jl
int3
inc
sub
(bad)
fdiv
xor
mov
fbstp
test
loope
xor
push
lods
cli
xor
push
pop
adc
lahf
mov
or
cs
out
aam
push
inc
call
jmp
mov
call
push
sbb
ins
add
arpl
mov
jne
leave
jp
and
sub
xor
sti
or
jae
ficom
je
mov
pop
mov
pop
mov
jns
jmp
pop
jl
xor
lods
push
push
dec
stc
movs
movs
fistp
push
sub
pushf
test
cmc
mov
cmp
or
push
ss
pop
sbb
les
pop
retf
mov
and
xor
cmp
inc
mov
xor
je
out
jne
cmp
ficomp
push
xor
data16
dec
jns
jbe
mov
dec
in
and
sub
ds
jb
out
in
(bad)
add
test
push
inc
(bad)
mov
cld
jle
cmp
xchg
jmp
push
and
xor
cmp
xchg
or
mov
cmp
fistp
movs
fbstp
add
faddp
pop
dec
test
mov
adc
or
sbb
mov
jg
xacquire
inc
sub
add
lds
cmp
sub
push
and
mov
inc
push
inc
push
xor
dec
clc
cmp
and
pop
adc
cs
cmp
fst
sub
push
js
add
sbb
xor
pop
and
retf
mov
xchg
sbb
and
adc
fwait
enter
push
test
out
fdivr
lods
push
imul
jl
js
sbb
cmp
es
js
sub
cmp
cld
daa
jmp
jg
ins
sahf
ins
mov
pop
movs
sbb
sub
jmp
loopne
push
mov
dec
sub
mov
call
sti
cld
dec
inc
xor
mov
sbb
cmp
in
or
pop
clc
in
xor
mov
in
jo
sbb
call
(bad)
loopne
ins
cmp
loop
lock
cmp
cmp
icebp
mov
xchg
ss
cmp
outs
les
push
vmovss
push
adc
inc
je
xor
mov
sub
int3
aaa
cmp
enter
aas
sti
pushf
inc
add
add
mov
enter
out
jo
xchg
push
push
(bad)
stc
mov
sub
out
sub
jnp
push
mov
and
xor
fcom
jo
out
psubsw
push
cld
and
fnsetpm(287
xlat
sub
xchg
cmc
push
pop
sbb
inc
out
in
or
movs
ret
test
stc
je
pop
rol
clc
cmps
cdq
in
sbb
sti
fild
xchg
call
ins
push
adc
addr16
ins
xor
lods
sub
and
inc
inc
cli
aad
jns
adc
sub
nop
popa
dec
push
fstp
xor
or
and
call
dec
sar
adc
scas
mov
and
ds
push
push
pop
push
pop
sbb
push
adc
or
or
cmp
cld
sbb
or
pusha
gs
fstp
nop
jmp
pop
fisttp
inc
mov
dec
add
lods
jo
pop
cmp
cmp
sbb
fcom
inc
stos
shr
cmc
push
ss
pushf
fbld
and
sub
or
rcr
(bad)
in
mov
sbb
add
nop
sbb
sub
lahf
xchg
rcr
jp
sbb
and
in
sub
xor
sahf
in
xor
add
sbb
cwde
aam
push
daa
cld
cwde
xor
and
ds
xor
les
push
jg
or
dec
inc
push
or
clc
stc
cmp
jg
aam
push
ins
int
aas
pop
in
jno
sti
mov
sbb
jne
not
jne
sub
rcl
jns
add
push
rcl
jp
js
pop
push
js
xor
mov
daa
loopne
sub
pop
int
push
adc
jns
nop
adc
cmp
jg
inc
push
jge
shl
call
mov
add
je
pusha
hlt
lahf
pop
sub
xchg
push
fnsetpm(287
cmc
addr16
call
gs
imul
sbb
lea
cmp
enter
mov
xchg
out
ins
add
add
lods
fdiv
jns
push
or
jne
je
sub
lods
mov
push
(bad)
js
jae
lahf
push
sbb
jmp
rcr
push
stos
inc
ins
jge
adc
jae
push
(bad)
push
ds
data16
xor
js
rol
xor
hlt
jae
fs
jb
ja
jg
fsub
popa
push
adc
sub
scas
js
stos
pop
(bad)
nop
(bad)
xor
test
je
mov
push
mov
cmc
jnp
xchg
jo
jns
loopne
mov
sub
push
fdiv
jnp
pop
xchg
dec
ret
xchg
inc
stos
ret
je
jns
pop
ins
jb
hlt
pop
jne
jp
arpl
movs
loope
in
sbb
popf
ins
out
add
je
les
or
loop
jmp
pminub
ret
cmp
cmc
ins
daa
or
dec
dec
bound
fwait
jnp
emms
add
xor
je
inc
jne
je
lods
xchg
jo
jbe
xchg
xor
jnp
hlt
ja
jp
js
push
js
pop
and
jne
mov
push
pop
jb
jp
cmc
inc
fimul
jecxz
jae
mov
test
ins
ja
fwait
push
jne
sbb
js
sbb
outs
das
jp
push
adc
movs
sub
fsubr
jne
xchg
aas
mov
fmul
retf
mov
int
dec
ins
xlat
sub
jo
jb
repnz
outs
js
call
jno
jo
sub
call
jae
sub
jo
js
movs
es
imul
jmp
jno
sub
mov
dec
sbb
and
inc
cmp
mov
dec
inc
push
pusha
gs
jne
imul
add
in
aad
lods
jge
js
fidivr
cmp
jno
jmp
mov
stos
jle
add
mov
dec
push
pushf
pushf
mov
dec
xor
and
push
push
ins
bound
add
je
ins
pop
or
push
adc
(bad)
int3
imul
fs
outs
jp
inc
dec
arpl
imul
jne
aaa
or
pop
pusha
imul
in
inc
push
data16
or
es
imul
pop
hlt
imul
xor
cmp
(bad)
mov
pushf
in
pop
mov
pop
push
js
ins
jecxz
pop
pop
push
je
pop
jne
outs
jns
lods
mov
xlat
mov
mov
xchg
xor
cld
arpl
aam
imul
scas
jge
in
(bad)
cmc
or
loope
or
imul
pop
(bad)
in
pop
mov
pop
aad
pop
pop
mov
dec
shr
fs
in
jl
push
retf
or
imul
xchg
pop
stos
inc
dec
push
sbb
push
xchg
dec
test
nop
jg
int3
pop
pop
bound
retf
in
jo
int3
shl
pop
and
sbb
mov
shl
or
xor
xor
ins
ficom
imul
ins
ins
mov
mov
jle
and
lods
push
js
gs
inc
pop
stc
xor
mov
arpl
inc
cmp
xchg
jo
call
mov
pushf
leave
fs
jae
pusha
sbb
adc
dec
je
xor
push
arpl
je
in
push
jne
popf
js
adc
mov
pop
ins
add
sbb
sti
or
sub
and
loop
dec
dec
(bad)
in
data16
loopne
add
and
fs
dec
fmul
ret
sub
jmp
jo
cld
cmp
inc
mul
in
mov
rol
xchg
sbb
or
or
mov
nop
pop
push
pusha
arpl
lock
imul
dec
lds
bound
ins
addr16
push
mov
xor
jno
les
ret
les
push
or
div
xchg
push
push
pop
cld
fs
nop
data16
gs
push
ins
adc
and
mov
and
add
dec
pop
inc
lods
pop
lock
dec
arpl
sbb
dec
in
ror
clc
lahf
outs
cmp
(bad)
pushf
or
mov
sub
js
addr16
dec
dec
arpl
jbe
inc
popa
and
inc
scas
hlt
inc
push
sub
ins
jno
pusha
jb
cmp
clc
fsubr
sbb
mov
hlt
mov
mov
(bad)
mov
(bad)
mov
push
dec
jo
aam
pusha
and
push
dec
mov
je
jne
dec
pop
int3
inc
in
inc
popa
std
dec
jmp
push
and
sbb
pop
sub
scas
sar
dec
push
call
test
pop
in
add
fsub
stc
nop
data16
outs
xor
pop
push
pop
bound
dec
pop
pushf
cmp
dec
aas
dec
push
outs
je
gs
push
fs
cmp
push
xor
xor
cli
retf
cmp
in
cmc
in
js
adc
mov
test
cmp
push
cli
cwde
cmp
push
cmp
cmp
cmp
icebp
cmp
imul
in
mov
pop
adc
dec
mov
test
sti
out
loopne
ja
pop
mov
cmp
jecxz
mov
cs
mov
aas
pop
data16
cmp
mov
cmp
push
std
mov
repnz
push
popa
rol
shl
pop
test
jnp
fwait
test
mov
jmp
jb
call
ins
aad
ss
cmp
dec
adc
imul
mov
dec
cmp
les
jbe
push
dec
(bad)
lock
sti
and
lock
jl
cmp
fcmovnu
add
xor
mov
sbb
dec
in
sub
in
fcmovu
loop
ins
mov
dec
sbb
pop
jbe
xor
push
lods
cmp
test
push
adc
fsubp
loop
xchg
pop
sub
mov
outs
mov
mov
ja
rol
add
push
or
les
fxch
mov
fild
and
aas
cmc
js
adc
dec
pop
sub
aaa
sub
push
test
and
mov
adc
add
inc
emms
mov
mov
fadd
sahf
stos
mov
addr16
push
dec
les
xor
inc
pop
hlt
push
cmp
aam
xor
xor
in
push
jae
jl
outs
je
imul
xor
aam
cmp
lods
xor
xor
jo
push
pop
cld
pop
sahf
in
movs
push
and
push
in
loopne
test
repnz
sar
adc
std
call
dec
je
xor
ss
cli
mov
push
xor
dec
pusha
fcmovnu
call
addr16
bound
add
add
(bad)
mov
fxch
sub
stos
js
mov
out
sbb
adc
test
pop
adc
int3
push
cmp
out
inc
jmp
and
ficom
shl
mov
add
or
ret
ret
or
mov
mov
mov
fs
sbb
pop
cmp
xor
ret
int3
cmc
jbe
cmp
xor
inc
push
push
mov
adc
pop
add
clc
jae
or
xor
push
je
int3
data16
mov
sbb
icebp
inc
outs
cld
add
add
div
xchg
cmp
push
icebp
test
jne
bound
pop
sub
pop
bound
fmul
int3
test
sbb
and
in
add
adc
gs
sbb
fmul
addr16
(bad)
mov
ins
fcmovnb
std
in
pop
dec
cmp
test
and
mov
mov
aam
jns
pop
bound
xor
sub
jle
push
push
push
sbb
dec
mov
xor
js
mov
or
xchg
fimul
add
fld
add
inc
mov
data16
jns
out
adc
out
cs
dec
ins
jne
jnp
ss
sub
pop
addr16
bound
lock
popf
(bad)
fimul
dec
rcl
in
outs
cmc
fdivr
call
hlt
int
jl
jmp
cmp
adc
shr
sbb
pusha
push
dec
inc
les
xchg
inc
mov
cmp
jl
cs
aas
cmp
pop
pop
ja
add
call
jp
pop
dec
sbb
adc
retf
dec
jmp
inc
repnz
je
int3
mov
sub
xlat
les
movs
call
or
loope
sbb
aaa
std
test
dec
inc
dec
pop
push
in
push
sbb
mov
fistp
inc
push
push
pop
cli
pop
jae
in
call
or
gs
pop
in
dec
ror
je
inc
mov
mov
adc
sar
and
aam
popa
jae
data16
cmp
push
push
inc
push
ins
and
xor
test
(bad)
fnsave
fsubr
lock
fucomp
out
fs
aas
jbe
sbb
jle
sbb
and
mov
add
adc
clc
in
rol
push
mov
mov
mov
xor
jns
test
leave
mov
inc
iret
sbb
(bad)
pop
les
mov
in
push
pop
clc
mov
xor
in
repnz
and
lahf
xchg
test
enter
(bad)
aam
sub
mov
popf
sub
add
push
and
dec
leave
mov
hlt
xor
mov
sbb
clc
push
xor
int3
sbb
rol
xor
push
cmps
call
mov
jge
cmp
mov
sbb
addr16
jae
dec
jl
inc
pop
sbb
inc
dec
sbb
ins
cmp
pop
jae
cwde
xor
(bad)
or
int3
outs
cld
jmp
aad
and
cmps
gs
lock
jmp
inc
fmul
mov
(bad)
cmp
mov
popa
test
mov
inc
ret
cmps
xchg
iret
popf
out
pop
push
loopne
jne
or
mov
mov
mov
cmps
add
pop
adc
ret
daa
cli
nop
not
cli
mov
jmp
ror
sub
pusha
sbb
in
mov
and
sti
mov
and
movs
add
push
mov
mov
jle
loopne
cdq
cmp
out
push
ret
movs
pop
push
lods
in
pop
and
clc
jne
fdivr
fld
cmp
(bad)
and
icebp
and
pushf
push
popf
call
int3
cmp
mov
in
ins
jne
movs
jo
addr16
pop
aas
push
jae
inc
jge
or
push
leave
cmp
addr16
inc
cmp
and
std
addr16
and
or
jnp
mov
fisubr
mov
xchg
loopne
sahf
loopne
adc
rcr
cmp
mov
test
les
fnstsw
or
(bad)
mov
loop
cli
jl
or
jmp
mov
adc
mov
add
jnp
jmp
pop
je
lods
arpl
ficomp
or
fdivr
sti
std
add
cdq
lock
fst
and
jmp
add
pop
stc
std
cmp
cmc
cmc
mov
lods
jge
out
ret
mov
sbb
jecxz
jl
(bad)
ffree
int3
iret
fistp
inc
dec
je
les
push
ds
sbb
inc
pushf
push
cs
hlt
jns
jl
cmp
dec
push
cld
inc
jl
add
push
std
sub
adc
xor
push
ret
jp
lds
sbb
jb
cmp
je
push
hlt
jae
add
mov
mov
fmul
and
loopne
(bad)
mov
xor
cmp
jge
shl
int3
fs
retf
scas
jb
jl
retf
or
push
adc
leave
cli
cmp
fild
stos
rcl
popf
int3
jne
sar
ins
cmp
mov
dec
jmp
cld
ror
mov
shl
push
cmc
movs
inc
jns
out
mov
xchg
fisubr
int3
mov
fdiv
jb
sub
in
lods
faddp
sahf
cmp
mov
sti
aam
push
push
adc
and
xchg
cmp
ins
dec
hlt
imul
outs
jge
xor
pop
jns
adc
jb
xor
push
jmp
pusha
jno
in
in
call
jae
int3
jp
cmp
mov
pop
mov
inc
sbb
std
mov
(bad)
or
stc
enter
ret
lods
add
mov
fcmovb
(bad)
ret
call
push
sbb
cwde
test
rcr
leave
je
cmp
add
sbb
add
or
dec
xor
dec
outs
pop
cmp
stc
ins
inc
js
sbb
cli
jl
adc
adc
cmp
cmp
fsubr
and
fmul
sub
hlt
in
sbb
xchg
fldcw
fs
mov
cmc
test
push
pop
jl
lods
sub
aam
(bad)
cld
push
mov
and
ds
mov
dec
inc
pop
aam
std
test
xor
jmp
dec
gs
ror
js
adc
add
sub
loopne
mov
pop
xor
dec
or
das
aaa
test
mov
sub
sbb
shl
cmp
jmp
loope
mov
fsubr
xlat
mov
stc
shr
fdivr
or
int
call
adc
push
ja
add
mov
js
xor
repz
dec
sbb
sbb
cmp
loopne
mov
add
fidiv
xor
in
mov
test
rcl
adc
push
mov
out
test
in
js
fdivr
in
mov
test
js
shl
lock
outs
xor
adc
push
gs
(bad)
movs
aaa
cmps
mov
or
pushf
adc
cli
nop
xlat
test
jp
push
out
jo
ss
mov
std
xor
je
jge
adc
dec
push
jne
jb
nop
scas
mov
mov
retf
fsubr
leave
(bad)
push
mov
lock
call
icebp
jp
rcr
fdivr
push
add
pop
(bad)
or
mov
cmps
not
out
sbb
lahf
cmc
mov
jl
and
push
dec
mov
xchg
jne
out
mov
lods
mov
int3
cmp
scas
call
into
cmps
fs
lods
lock
mov
or
movs
xchg
arpl
push
popf
jmp
xor
pushf
adc
mov
fcomp
and
lods
nop
fidivr
imul
or
icebp
or
push
data16
shl
mov
sub
mov
sub
mov
mov
xor
push
sbb
mov
das
add
sti
es
xchg
dec
sub
in
pop
std
sub
mov
ins
mov
js
and
fs
fs
ss
xor
add
(bad)
(bad)
movs
(bad)
in
push
and
cwde
jae
lock
rcl
mov
into
mov
fdivr
in
push
loopne
jo
call
fsub
cmp
clc
out
mov
mov
or
aam
out
addr16
icebp
xor
push
ja
inc
cli
lods
or
js
mov
mov
in
int3
adc
(bad)
xor
jo
les
fnsave
pop
mov
pop
fcom
jns
inc
pop
mov
in
adc
cmps
pop
test
fmul
cmp
dec
in
jo
sub
dec
pop
dec
es
add
neg
outs
div
jl
data16
push
daa
fsubr
pop
hlt
dec
sub
jae
imul
inc
(bad)
dec
push
je
test
and
sbb
daa
lsl
pushf
outs
ja
xor
sbb
mov
mov
int3
clc
jecxz
cmp
jmp
fsubr
test
cmp
jmp
sub
jo
jb
add
push
(bad)
shr
ret
(bad)
mov
and
pushf
in
clc
int3
out
popf
jl
(bad)
jnp
jmp
inc
ins
sti
retf
loope
sbb
out
push
and
enter
(bad)
outs
aas
and
out
push
(bad)
jp
push
cmp
sbb
sub
out
adc
(bad)
cli
xor
cmp
(bad)
in
mov
clc
sbb
cld
sar
mov
mov
je
cwde
cld
lock
js
aas
cmp
mov
in
lods
push
add
push
hlt
ins
mov
arpl
jns
jmp
js
js
add
cmp
pusha
and
imul
jp
repnz
std
jl
aaa
pop
inc
cmp
inc
jb
lods
enter
int3
jmp
pusha
pusha
xor
or
xchg
adc
and
div
or
stc
lea
pop
shl
push
jbe
sbb
sub
sub
mov
jae
lahf
pop
push
cmps
cdq
stc
mov
mov
mov
retf
mov
sbb
shl
retf
and
pop
popa
mov
movs
inc
stos
scas
mov
adc
sub
aad
nop
dec
cmp
jae
and
clc
js
std
sbb
cmps
(bad)
in
lds
jbe
ret
sub
int3
or
(bad)
ret
mov
push
gs
cmps
xor
imul
mov
fst
add
add
pop
or
sub
clc
jl
int3
js
mov
test
push
icebp
hlt
and
and
je
add
jo
inc
jp
(bad)
pop
mov
mov
movs
inc
lock
sub
dec
cmp
jae
mov
loope
enter
test
dec
retf
lds
not
in
gs
mov
mov
in
mov
fcom
test
fadd
rol
mov
sub
fs
retf
clc
sar
cmp
aam
movs
sub
sbb
aad
pushf
call
and
mov
hlt
add
dec
sahf
mov
fistp
push
and
pop
mov
xchg
or
in
and
outs
ins
jmp
push
pop
inc
cwde
jb
cmp
and
test
and
aaa
call
sub
jl
addr16
xor
or
sbb
fs
sub
pop
inc
mov
sbb
push
xor
je
sbb
and
sbb
push
xor
xor
jae
sub
inc
movs
push
aas
push
jp
and
mov
jns
mov
push
daa
mov
sub
mov
pop
mov
je
mov
push
push
les
lahf
sbb
aas
cwde
mov
xor
je
mov
mov
mov
js
int
std
je
les
xchg
sbb
sbb
add
jp
xchg
cdq
xchg
sub
retf
sub
cmp
xor
dec
push
in
jo
sub
xor
and
ins
psrad
aaa
dec
cli
pushf
push
cmps
jo
inc
popa
pop
mov
stc
das
stc
mov
adc
in
and
pop
add
xlat
dec
data16
retf
dec
jl
and
cld
push
and
sbb
push
jnp
inc
fwait
mul
cld
sub
pop
push
outs
pusha
push
sbb
mov
daa
shr
ss
jne
pop
popa
test
sub
aam
out
cmp
sub
pop
inc
std
les
lods
call
pop
mov
shr
mov
sbb
adc
jnp
pop
pop
pop
and
mov
fwait
pop
mov
sbb
mov
mov
push
fadd
scas
fbld
inc
stc
pop
cld
bnd
in
mov
stos
retf
fwait
cmp
mov
ror
dec
sbb
pop
push
fs
test
in
add
clc
sbb
je
cld
popf
cmp
sbb
sbb
pop
in
sub
mov
lods
repnz
inc
cld
and
and
jp
imul
cmp
ss
call
test
aas
cmp
sub
sti
xor
jae
call
hlt
or
(bad)
out
outs
fsubrp
lds
sub
clc
fwait
rcl
xlat
enter
sub
mov
push
scas
mov
or
scas
in
add
rol
rep
es
js
pop
or
pop
and
pop
jge
jno
sbb
mov
xor
fimul
sbb
mov
fs
imul
(bad)
mov
add
sbb
adc
xor
loopne
dec
add
jecxz
ja
in
in
mov
jne
cmp
retf
xchg
leave
das
ret
mov
(bad)
dec
loope
js
or
call
hlt
or
sub
push
and
test
add
shr
and
jbe
add
je
popa
jae
sub
jge
jl
sbb
sbb
cmc
xchg
cmp
pushf
sub
je
pushf
push
or
sub
jo
jecxz
(bad)
sub
in
rcr
clc
loop
mov
ja
shl
shl
fwait
mov
pop
dec
jmp
pop
add
xor
inc
or
test
xchg
out
mov
int
sahf
mov
pusha
pop
add
pop
ror
in
rep
imul
js
fcmovne
cld
nop
pop
idiv
repz
adc
ins
shl
mov
lds
inc
jae
mov
push
sub
jp
and
pop
add
js
xchg
cdq
aam
dec
mov
jg
xor
adc
aad
and
jae
mov
cli
loopne
out
cli
hlt
add
pushf
jo
and
xor
xchg
inc
mov
sbb
pushf
xor
pushf
push
jne
add
clc
sbb
jo
sbb
js
adc
adc
jne
(bad)
int3
stc
add
mov
add
xchg
js
cld
mov
cmps
test
ror
(bad)
sub
fs
loope
add
fsub
sub
fs
and
nop
outs
mov
fstp
and
sub
hlt
paddsb
push
iret
retf
leave
ret
jle
inc
ret
movzx
(bad)
fcomp
leave
int3
cmp
bound
and
and
jne
rol
loope
lods
mov
leave
adc
push
out
test
xor
push
addr16
js
mov
cmc
aam
cmps
and
sub
fsubr
rcr
xor
and
clc
push
add
les
push
push
jne
enter
fild
std
or
push
cs
mov
lea
das
loope
mov
dec
pop
jb
jmp
jp
repnz
cs
pop
sub
test
cmp
ret
sbb
les
daa
retf
js
cmps
mov
dec
rcr
enter
dec
dec
add
jns
jmp
outs
aam
pop
jae
adc
jns
enter
mov
xchg
jp
movs
mov
push
xor
nop
(bad)
mov
xchg
clc
arpl
int
mov
push
clc
bnd
adc
stc
pop
ins
dec
mov
jbe
cmps
push
imul
mov
dec
sbb
repz
sbb
mov
retf
jmp
(bad)
hlt
cld
dec
sti
hlt
or
add
sub
pop
cld
mov
es
fsubr
mov
in
cmp
shr
dec
outs
mov
mov
mov
jp
fucomp
jmp
adc
cmp
mov
jl
jmp
and
cmp
dec
imul
jb
mov
and
les
dec
cmp
xchg
and
pusha
sbb
dec
ins
sbb
pop
xor
sub
xor
inc
jne
inc
xor
mov
cwde
nop
push
jp
loopne
mov
pop
pop
mov
int
(bad)
ficom
test
pop
push
xchg
jne
dec
hlt
mov
ret
sbb
movs
and
jbe
pop
pop
mov
pop
test
xor
cmp
mov
pusha
mov
(bad)
pop
hlt
adc
push
push
outs
pop
imul
out
jp
adc
dec
cmp
mov
hlt
and
test
repz
out
sbb
aaa
push
and
dec
inc
xor
dec
nop
fimul
cld
cld
(bad)
xlat
push
fs
in
enter
cmps
mov
sub
cmp
pop
test
jns
pop
jl
jl
(bad)
pop
aam
dec
xor
in
and
sbb
mov
call
push
or
push
inc
xor
lock
lods
and
sub
and
jo
adc
stos
das
nop
sbb
pop
pop
push
sub
imul
test
mov
dec
ds
jg
lock
div
and
cmp
ror
jnp
or
rcr
ins
jne
pusha
jp
popa
pop
pop
js
inc
mov
lods
fxch
std
mov
or
xchg
pop
push
mov
cmp
jne
and
pop
shl
xor
sbb
sub
inc
lods
data16
lods
cmc
sbb
int3
fisttp
cmp
add
call
movs
add
fdiv
cmp
rol
repz
add
aad
xchg
in
mov
xor
(bad)
pop
and
mov
dec
gs
add
pop
mov
addr16
outs
cld
into
iret
jecxz
call
(bad)
in
inc
push
push
arpl
cs
jecxz
xchg
mov
adc
fimul
movs
sub
lock
pop
xor
mov
call
xor
enter
xchg
jae
sti
test
aad
shr
js
dec
dec
mov
out
mov
and
mov
jae
pop
ja
push
adc
pop
(bad)
cmp
loop
adc
and
sbb
adc
pop
in
imul
mov
pop
fistp
int3
mov
rol
cld
mov
lock
jmp
fdivr
adc
(bad)
rcl
and
aam
fbld
daa
jne
sbb
push
sub
js
cmp
fcom
in
js
(bad)
into
mov
mov
xchg
and
cli
hlt
sbb
addr16
jl
jo
xchg
jl
cs
dec
(bad)
imul
les
hlt
and
sub
adc
jo
or
(bad)
sbb
and
or
xor
jl
pop
xor
or
pop
dec
mov
and
je
ds
ret
ror
jge
push
in
mov
cmp
fs
sub
xor
je
or
jns
inc
ss
xchg
mov
in
(bad)
out
mov
dec
mov
pushf
xor
jp
push
adc
lds
mov
sahf
ror
clc
ror
cmps
or
mov
sar
and
js
sbb
mov
jmp
in
sub
lock
dec
mov
je
xor
ds
lock
scas
mov
fst
adc
push
push
sub
jl
jne
sub
in
jo
pop
pop
inc
push
push
cmp
xchg
xchg
int3
rcl
clc
in
xlat
rcr
sub
call
adc
movs
mov
fs
jbe
adc
pop
sbb
test
aad
stos
rcr
test
mov
in
sar
aam
dec
dec
jle
pushf
jns
mov
scas
je
fst
xor
aad
mov
mov
adc
xor
nop
fsubr
pushf
cmp
dec
(bad)
int3
mov
mov
push
cmp
(bad)
mov
mov
inc
xor
int3
pop
sub
js
xchg
sti
mov
jo
sub
je
sub
or
mul
or
int3
into
stc
mov
std
mov
push
mov
lods
mov
cmp
or
pusha
jb
xor
sbb
in
adc
fcmovbe
xor
jmp
addr16
ja
mov
sbb
pop
sub
jb
and
repz
je
sub
cld
adc
dec
jo
push
pop
int3
es
mov
mov
lods
scas
fwait
addr16
mov
pop
retf
into
shr
sbb
push
and
lods
sub
test
push
ret
cmp
rcl
(bad)
in
push
push
pop
cwde
inc
pop
push
sub
ins
cwde
gs
hlt
enter
outs
jo
test
movs
lock
popf
pop
ror
pop
and
xor
jns
push
pop
jbe
daa
xor
adc
jne
sub
push
pop
and
pop
cmc
mov
mov
mov
(bad)
sahf
mov
fadd
and
xor
and
test
js
jbe
js
or
adc
sbb
(bad)
idiv
mov
std
push
jno
cli
je
adc
pop
push
and
sub
mov
and
sbb
adc
push
ds
jbe
pop
and
pop
mov
jl
mov
or
jl
pop
int3
sar
retf
mov
pop
fldenv
push
pop
jne
push
imul
push
cmp
pop
loope
sbb
imul
ins
push
push
js
dec
dec
mov
fmul
xchg
popf
out
xor
mov
scas
sti
push
cmp
(bad)
xchg
sbb
sbb
or
add
in
(bad)
outs
int
(bad)
xlat
in
inc
icebp
in
enter
hlt
lods
in
ret
popf
add
pop
add
push
xchg
xchg
test
test
xchg
jge
fdivp
add
mov
or
sbb
test
imul
jo
add
mov
push
jge
in
and
fldlg2
sti
push
aam
lock
mov
enter
xor
fcomp
jmp
jo
loope
out
or
stc
repz
scas
pushf
add
dec
fcom
adc
mov
ins
pusha
xchg
mov
in
cdq
push
retf
dec
outs
sti
mov
push
adc
enterw
dec
push
std
ins
pop
pop
cmp
sub
ds
std
cmp
les
rcr
(bad)
dec
lds
and
test
aam
aad
cmp
pop
add
sbb
push
fcmovbe
inc
sbb
adc
dec
mov
jl
mov
mov
xchg
pushf
push
rol
jne
mov
lock
jns
or
std
pusha
sti
pop
push
push
push
add
push
shr
outs
jnp
or
jo
in
sbb
rol
fdiv
call
das
cmp
aad
loopne
mov
int3
les
mov
in
and
and
jg
je
lds
cmps
popf
out
mov
add
nop
mov
xchg
mov
xchg
loopne
xchg
or
dec
mov
pop
scas
mov
popf
add
mov
mov
xor
and
pop
bound
stc
dec
hlt
mov
enter
ret
je
retf
in
das
mov
pop
retf
jne
pop
mov
cmp
(bad)
jp
adc
sbb
test
lock
pop
clc
(bad)
push
cld
(bad)
shr
sbb
xchg
jns
nop
mov
into
jmp
sbb
js
xor
movs
push
mov
in
stc
jbe
loope
je
popa
jne
push
cmp
imul
add
shl
mov
lds
adc
adc
push
add
push
test
shl
mov
repz
xlat
jnp
loope
pop
je
ins
jb
movs
xchg
jbe
or
fwait
aam
enter
out
js
movs
xchg
lods
sub
sub
cwde
test
lahf
sub
xchg
xchg
pop
fs
xor
ins
push
fwait
cdq
outs
cmp
mov
imul
mov
fwait
loop
fadd
stos
mov
cmp
xchg
sbb
ficom
in
pushf
pop
jecxz
jp
data16
jp
sub
cmp
pop
sbb
mov
(bad)
sub
leave
jp
movs
mov
sbb
xor
or
adc
or
or
sub
jecxz
adc
fild
lea
mul
and
pushf
jl
sbb
sbb
ins
add
sbb
add
sbb
add
adc
cli
jo
daa
cmp
nop
pop
xor
int
sbb
movs
push
mov
push
or
pop
fst
loopne
fistp
movs
mov
fst
fadd
pop
test
inc
jne
dec
add
je
mov
shl
cwde
inc
(bad)
iret
lods
lea
pop
mov
inc
rol
pop
add
xchg
mov
pop
xor
and
aaa
je
pop
inc
mov
movaps
adc
adc
aas
jnp
pop
fs
outs
cmc
sub
jp
pop
sbb
mov
fbld
pop
shl
push
lock
jbe
jne
pop
fs
(bad)
sub
rcl
(bad)
hlt
mov
idiv
cld
ins
fsub
loopne
or
js
sbb
mov
lea
mov
adc
ins
fbstp
cmp
inc
push
pop
rcr
add
jmp
pusha
je
(bad)
xchg
push
cld
popf
in
adc
aas
xchg
sbb
mov
sbb
mov
push
and
cdq
int3
stos
pop
sub
ins
mov
int3
inc
dec
pop
adc
adc
mov
lahf
and
dec
mov
push
sub
pushf
or
out
xor
push
or
xor
int3
fsub
in
cld
shl
aaa
fcmovnu
mov
shr
dec
cli
fucom
jecxz
push
popa
fs
cwde
jno
or
cmp
push
mov
fsubr
mov
sti
jnp
shr
fs
fmul
in
ins
xor
cmp
loopne
(bad)
dec
repz
jge
mov
pop
mov
add
xor
pop
adc
ror
in
xor
test
sub
fdiv
cld
sbb
fs
ret
jp
mov
movs
sbb
xchg
xchg
cmp
xchg
xchg
xchg
xchg
shl
(bad)
mov
xchg
test
xchg
lea
out
xchg
out
pop
cwde
xchg
cdq
and
pusha
push
scas
mov
jae
int
pusha
and
mov
sbb
jns
das
es
aaa
xor
jns
or
invd
clc
or
ins
hlt
cmp
sub
sub
adc
inc
std
repnz
lods
(bad)
mov
adc
test
fcomp
imul
pop
cwde
cmps
div
(bad)
je
gs
int
sbb
test
stc
in
xor
int
pop
jo
std
je
xor
sub
sub
repnz
mov
xor
jbe
sbb
push
dec
or
and
cmp
call
loope
push
and
cs
add
int3
je
dec
ja
or
lock
in
or
push
and
in
xor
fidivr
jecxz
pop
xchg
jmp
inc
xor
outs
adc
inc
in
dec
jae
hlt
sub
dec
sbb
test
sbb
mov
xor
hlt
jne
push
clc
jne
sub
or
fdiv
sub
je
mov
xor
lahf
jb
xor
clc
nop
pop
test
sahf
mov
cmps
xchg
ret
jmp
and
daa
jbe
sub
dec
inc
sbb
call
je
add
adc
cs
mov
xor
js
(bad)
(bad)
mov
pop
xor
xor
pop
pusha
mov
add
out
js
loopne
mov
cmc
inc
out
cld
mov
and
in
add
push
dec
cmp
fs
or
mov
hlt
int3
in
or
sbb
jmp
add
xor
or
xor
outs
mov
inc
fadd
int3
shr
push
cld
outs
aas
popa
sbb
jae
push
push
cmp
div
not
cli
sub
push
rcr
inc
std
test
dec
and
cmps
fs
and
add
cmp
and
cld
pop
pop
std
in
pop
dec
inc
xor
pushf
fcmovb
jp
neg
ret
mov
jae
mov
aad
je
(bad)
test
add
xchg
hlt
stc
add
inc
jmp
xor
push
shr
mov
cmp
push
adc
xchg
push
hlt
int3
mov
hlt
xor
in
sbb
in
mov
and
push
dec
cmp
jb
add
jne
mov
dec
mov
and
ins
(bad)
dec
mov
fwait
mov
call
push
scas
out
repz
jae
add
add
push
dec
cmp
sub
and
pop
push
push
int3
adc
mov
jae
sti
and
fmul
jns
sub
jp
and
fild
faddp
inc
sub
jo
xlat
mov
scas
in
xchg
push
push
es
inc
sbb
stos
fs
not
push
xor
es
cli
into
std
enter
jmp
cld
cmp
or
test
push
movlps
out
ins
shl
js
add
aad
mov
icebp
push
add
pop
jecxz
jo
add
jmp
cwde
call
push
pop
cmp
fs
shl
mov
int3
cmps
mov
gs
mov
jle
nop
std
shr
or
hlt
push
sub
mov
lods
shl
sub
in
clc
xor
xor
frstor
push
hlt
dec
cwde
jmp
shl
cmp
sbb
int3
jmp
js
lds
sub
jo
cmp
stc
dec
fadd
or
stos
out
mov
dec
mov
mov
add
movs
shr
les
addr16
(bad)
test
test
pushf
add
test
test
int3
xchg
sub
js
iret
mov
cmp
lods
add
addr16
or
pushw
push
pusha
inc
je
in
in
sbb
out
jbe
clc
add
or
(bad)
ficomp
rcr
mov
and
pushf
adc
adc
mov
repz
in
xchg
out
in
leave
test
(bad)
fcom
sbb
cmp
(bad)
lods
add
adc
sbb
xlat
sbb
sbb
mov
dec
and
fucomp
outs
mov
mov
aam
test
jo
mov
mov
aad
jb
daa
test
pop
add
movs
movs
sbb
dec
ds
loopne
pop
retf
mov
dec
movs
adc
iret
mov
cmc
int3
mov
mov
cmp
in
cmp
fsubr
int3
xor
ins
idiv
sar
scas
data16
mov
or
popa
lock
cld
mov
cmp
inc
jl
retf
jl
loopne
inc
shr
in
push
repz
je
cld
imul
and
mov
or
ja
pop
stos
(bad)
jo
adc
loopne
cli
jmp
dec
pop
mov
push
aad
test
retf
add
dec
pop
sbb
les
hlt
jg
popf
(bad)
xchg
popf
psraw
xor
cwde
jno
enter
shr
pop
add
int3
jne
mov
setl
adc
lock
mov
mov
jp
dec
test
cmps
mov
shl
fsub
pop
add
sub
clc
inc
dec
sbb
mov
loope
push
sbb
and
mov
lock
and
aam
and
sub
repnz
sub
sub
cmp
jns
mov
js
mov
sahf
or
(bad)
jp
sub
es
sub
sbb
in
add
cli
fmul
mov
fs
stos
sahf
je
mov
std
push
jmp
cli
mov
or
into
pop
int3
aad
push
loop
cmps
mov
push
dec
xor
add
sbb
xlat
cmps
test
sti
test
addr16
ds
add
or
les
rol
xlat
test
xchg
cmp
or
in
inc
dec
sub
adc
(bad)
jns
pop
cmp
mov
pop
mov
test
sub
clc
in
aam
mov
and
popf
and
clc
jns
out
mov
cld
sub
pop
ss
or
push
mov
fisttp
jo
loopne
retf
imul
mov
imul
jl
ret
out
jb
out
js
rcr
push
cld
retf
loope
lods
mov
in
mov
js
sbb
jns
xor
mov
sbb
int3
jmp
clc
push
xchg
sub
lods
les
in
js
loopne
mov
mov
sar
in
out
mov
xchg
pop
sub
in
lds
mov
adc
enter
in
test
sub
dec
xor
sbb
fcom
in
pop
hlt
sub
mov
jne
mov
and
push
mov
test
xchg
mov
sub
mov
int3
mov
xor
movs
cmc
and
or
push
push
jb
cmp
addr16
pop
adc
pop
cmp
cli
cmp
(bad)
jmp
cmc
pushf
scas
retf
jne
ja
fbld
sar
js
js
in
push
mov
mov
add
dec
dec
fiadd
(bad)
cmp
rol
xor
fcmovbe
cld
mov
xchg
mov
mov
mov
movs
movs
in
xchg
das
add
out
dec
and
sbb
leave
mov
add
stos
fcom
dec
cli
icebp
lods
fistp
imul
pusha
push
stos
clc
ins
test
xor
lods
jne
aaa
jp
push
cmp
cmp
mov
dec
fisttp
stos
fadd
fs
(bad)
fild
dec
pop
aas
mov
ret
lods
sub
xor
pushf
jne
add
cli
jl
push
pushf
jo
jmp
sbb
mov
int3
and
or
in
push
fcmovne
mov
pop
jle
jo
mov
shr
int3
or
adc
sbb
cmp
mov
in
hlt
mov
push
(bad)
je
je
ficomp
push
fucomp
js
fild
add
repz
retf
pusha
mov
shr
and
mov
mov
imul
(bad)
loopne
ret
(bad)
loopne
and
pusha
push
and
jne
sbb
pop
mov
(bad)
ins
xchg
cmc
lock
enter
fucomip
fsubr
xlat
fcomp
adc
or
dec
sub
mov
dec
fisubr
hlt
fcomp
movs
fidiv
in
bound
xor
aam
mov
mov
je
mov
in
dec
imul
stc
stos
jp
fcmovnbe
enter
(bad)
pop
lock
sub
les
dec
xchg
mov
xor
repz
movs
adc
(bad)
sbb
les
add
(bad)
fidivr
jge
add
mov
enter
iret
jmp
add
icebp
dec
adc
les
aad
popf
cmp
mov
ror
out
xor
fiadd
js
mov
xor
test
mov
ins
je
lahf
mov
jns
or
fsub
pushf
(bad)
add
repnz
sahf
ins
pop
sbb
or
popf
lods
mov
cld
mov
sti
cli
(bad)
test
stc
add
push
jne
idiv
(bad)
sbb
sbb
cmp
push
push
hlt
push
inc
ret
add
(bad)
out
inc
retf
out
sub
cli
cwde
(bad)
mov
adc
in
clc
jns
into
aad
test
enter
cs
mov
pop
cli
cmc
mov
loope
adc
sbb
mov
xchg
data16
pop
add
cs
jb
jmp
jl
and
push
je
retf
(bad)
fidivr
mov
fdiv
ins
(bad)
call
add
push
out
ins
in
hlt
ins
(bad)
cmps
jnp
into
out
mov
lds
mov
mov
gs
hlt
mov
cmp
inc
(bad)
movs
repnz
and
loop
push
scas
mov
jbe
call
aam
call
fwait
adc
cld
call
loop
sbb
rcr
fadd
mov
mov
leave
addr16
mov
out
mov
push
aad
int3
mov
clc
fs
call
add
mov
aam
pop
aad
or
int3
fist
push
mov
leave
jb
inc
push
sbb
jne
push
or
rcr
lods
aam
movs
ins
(bad)
scas
ins
cs
je
sbb
(bad)
mov
xor
data16
cli
jo
movs
ins
push
sti
pop
js
and
stc
in
mov
out
jp
(bad)
leave
mov
lea
jmp
mov
sti
mov
ftst
in
fnstsw
push
cmp
jl
inc
in
(bad)
shl
inc
clc
test
pop
or
mov
(bad)
sbb
call
adc
loop
sbb
les
xchg
mov
fs
in
cld
mov
repnz
mov
and
fsubr
dec
pop
ret
out
mov
repz
dec
aad
pop
enter
clc
shl
sbb
inc
in
sub
cld
int3
and
pop
jne
jmp
mov
jae
outs
test
mov
js
jo
push
fs
mov
lods
stos
adc
dec
add
test
xchg
mov
fcomp
paddusb
and
stos
movs
js
cmps
out
repnz
stos
sar
mov
imul
mov
mov
cmp
add
add
repnz
mov
jne
test
in
stos
rcr
pushf
adc
repz
cli
aam
xlat
fadd
lock
(bad)
fcomp
les
scas
mov
mov
pop
ins
mov
std
sbb
mov
clc
mov
rcl
test
cmp
stc
mov
mov
xor
fcmovnu
hlt
mov
lahf
je
(bad)
xor
aam
out
rcr
stc
imul
ins
imul
rcr
sub
(bad)
in
lods
into
js
stos
shl
mov
inc
cld
rcr
pushf
fdivr
xchg
mov
or
out
or
fadd
or
dec
in
fdivr
fsubr
fadd
jo
add
shr
mov
jl
push
jmp
cmp
sub
lds
in
fdiv
ja
xlat
and
jo
shr
cmp
adc
mov
pop
aam
and
test
lds
in
push
xor
(bad)
enter
and
mov
jle
adc
mov
jo
loope
sbb
mov
mov
dec
dec
lods
into
add
iret
fdiv
cwde
imul
loopne
ja
test
add
loope
and
fs
mov
bound
adc
add
in
fstp
mov
mov
in
sbb
fnsave
fidiv
nop
lds
mov
cdq
cmp
ins
lods
shl
je
dec
fs
call
cld
add
aam
loopne
pop
fadd
dec
cli
int3
sar
int3
icebp
clc
mov
retf
fsubr
sub
les
adc
call
cmc
hlt
sbb
cmps
xor
movs
int3
int3
movs
bswap
je
retf
fdivr
mov
out
fadd
xchg
dec
adc
(bad)
jno
lock
cmp
mov
lock
retf
push
int
lock
xchg
(bad)
xor
repz
sub
mov
cmp
fdiv
mov
gs
xor
in
fs
xchg
sahf
mov
jo
xlat
movs
mov
inc
(bad)
aad
lods
lahf
and
retf
fidivr
stos
pop
push
js
cmp
retf
(bad)
loop
adc
dec
aas
pcmpeqw
jo
loope
rcr
mov
add
jns
rcl
sti
dec
sub
test
int3
sbb
xor
sub
lods
ins
cli
int
je
push
or
cld
leave
sbb
or
pop
mov
lock
sar
mov
lods
mov
ret
aam
pushf
inc
mov
lahf
cmc
pop
sub
ds
clc
push
imul
dec
repz
push
and
icebp
dec
mov
les
lods
push
and
je
(bad)
adc
shl
mov
pop
cmps
(bad)
rcr
aad
(bad)
idiv
(bad)
fstp
stos
leave
ficom
movs
lock
lods
shl
test
mov
iret
jge
retf
add
call
sbb
jne
ret
test
fcomi
sbb
push
inc
cmc
test
gs
mov
jne
(bad)
js
(bad)
fcom
in
loopne
cwde
lods
fsub
ret
fdivr
mov
or
retf
mov
mov
test
aam
mov
xor
movs
adc
test
jl
jae
pop
sub
mov
xor
cmp
mov
mov
enter
leave
jbe
mov
cld
pop
mov
in
enter
lods
lds
mov
mov
leave
in
lods
jne
imul
test
ffree
xor
pop
cld
xchg
fcom
in
sar
je
jmp
fdiv
int3
out
inc
mov
retf
clc
mov
jne
adc
test
sub
mov
sub
cmp
jne
mov
push
scas
(bad)
mov
iret
pop
nop
rcr
cmps
inc
dec
scas
retf
fdiv
and
fs
pushf
push
repz
ds
je
sbb
(bad)
jns
jp
jle
or
ins
and
xor
jne
adc
div
sti
mov
lds
imul
dec
int3
aad
aam
or
mov
js
lock
test
pop
mov
js
(bad)
xor
aad
ins
aam
mov
call
mov
test
call
push
or
iret
xor
enter
cmp
enter
mov
scas
pop
les
je
mov
int3
and
cmp
retf
add
stos
inc
not
dec
mov
ret
push
adc
sbb
or
lods
bound
xor
mov
je
jne
sub
js
ins
sti
fs
mov
mov
jne
dec
mov
ins
loop
add
fiadd
jno
pop
imul
xor
fist
fbstp
test
dec
adc
call
add
ins
pusha
or
dec
pop
pop
and
imul
pop
jns
call
loop
data16
jp
or
imul
outs
sub
js
imul
ss
jns
gs
jo
xor
stos
and
ja
jno
hlt
loopne
mov
cmps
jmp
jno
js
int3
imul
push
cli
mov
push
cld
js
jbe
and
ins
xor
cmp
aas
jne
xor
je
jnp
shl
push
fild
mov
pop
adc
xchg
addr16
cmp
dec
loopne
js
fdiv
dec
sar
jns
aam
and
sub
push
outs
test
ins
push
daa
jno
adc
mov
mov
(bad)
ins
mov
sub
mov
into
dec
mov
sar
js
xchg
and
push
fs
jne
(bad)
aam
and
jb
adc
or
js
push
les
shl
xor
rcr
nop
ror
xchg
repnz
jmp
or
scas
lods
push
jns
retf
shr
adc
loope
outs
mov
add
pushf
mov
lock
jne
cs
xor
jl
dec
iret
rcl
ins
jg
aam
daa
push
jno
fs
clc
je
jb
ret
cmps
mov
enter
dec
push
jmp
xchg
adc
fs
jnp
call
mov
aam
(bad)
mov
jl
jne
repnz
cs
mov
adc
pushf
add
js
push
rcl
mov
les
int
xor
mov
js
sbb
imul
xor
pop
xchg
nop
cmc
push
add
sbb
dec
add
push
pop
jmp
xchg
push
test
jb
mov
js
rol
lds
adc
push
mov
mov
shr
xor
inc
xchg
dec
dec
sub
(bad)
xchg
or
jne
repnz
and
daa
jae
or
ds
pop
outs
sub
in
sti
adc
rcr
ds
enter
ret
adc
int
pop
scas
je
inc
inc
sub
and
iret
aaa
sbb
pop
in
pop
pop
adc
fs
fwait
js
ret
pop
js
imul
jbe
je
popa
inc
mov
loopne
xor
push
mov
jp
js
js
out
push
inc
aam
outs
mov
add
pop
sbb
lock
pop
pop
fdivr
or
sti
pop
cmpxchg
cwde
sahf
je
or
cld
mov
aas
jecxz
lods
push
xlat
xor
stos
arpl
push
inc
lahf
div
iret
in
push
sub
pop
pop
pop
mov
arpl
dec
out
add
jl
xchg
in
js
jns
xlat
jmp
call
jl
jge
mov
jno
dec
test
arpl
outs
imul
push
ja
add
mov
stc
pop
pushf
int3
enter
add
push
sub
cmp
or
add
mov
sti
adc
call
pop
push
add
mov
xchg
fs
mov
adc
js
mov
ret
or
hlt
pop
jbe
jl
ja
inc
iret
push
les
pop
lahf
(bad)
and
and
test
push
dec
loopne
ins
sub
or
shl
dec
xor
daa
ins
sbb
in
mov
add
ja
sbb
mov
ds
std
test
dec
push
inc
push
mov
sbb
fild
sbb
jp
push
mov
cwde
xor
and
ins
push
push
scas
jbe
jmp
in
add
or
push
mov
mov
sub
hlt
dec
jmp
jmp
push
jns
loop
jmp
add
test
push
mov
xchg
aas
test
cli
inc
inc
cmp
sbb
push
dec
pminub
fcmove
int3
retf
div
int
cmp
dec
xchg
mov
pop
nop
mov
popa
cwde
mov
inc
pushf
pop
push
pop
repnz
in
jmp
popa
bound
xor
fcom
pop
add
lods
xor
push
dec
fs
sbb
mov
cmp
scas
fs
sbb
ins
jo
jbe
cmps
inc
push
sub
fs
jl
or
jmp
or
(bad)
mov
repnz
pop
mov
xor
xor
call
pop
pop
pushf
addr16
push
dec
dec
jl
jg
mov
retf
lea
add
imul
mov
ja
push
ret
cwde
jmp
jmp
cs
sbb
(bad)
jp
add
(bad)
clc
je
push
mov
mov
pop
call
pop
inc
xchg
pop
das
or
xchg
(bad)
xchg
les
jo
into
mov
pop
js
mov
loope
jmp
js
imul
leave
push
push
or
push
je
or
jne
test
xor
cmps
mov
clc
push
mov
jmp
adc
movs
fdivr
mov
loopne
packssdw
dec
nop
jp
push
loopne
pusha
pusha
mov
lahf
add
or
std
cmps
push
je
xor
js
inc
or
ficomp
les
bound
xchg
mov
loop
pop
js
mov
pusha
inc
xchg
je
jg
inc
xor
std
clc
test
test
adc
dec
pop
or
dec
shl
imul
and
adc
jmp
mov
mov
imul
nop
or
mov
jne
sub
inc
mov
dec
mov
repnz
mov
pop
ja
ins
xor
dec
js
in
pop
in
repz
push
retf
mov
push
push
nop
test
fsubr
xor
call
cdq
add
add
push
movs
bound
fs
mov
mov
mov
pop
mov
ja
movups
adc
adc
les
push
fwait
dec
out
iret
cli
test
lahf
or
or
xor
sub
adc
xchg
ins
outs
inc
mov
das
or
jno
add
jne
sub
dec
push
adc
test
retf
stc
lods
clc
ds
cmps
imul
ja
aaa
cmp
arpl
(bad)
pop
jmp
ins
mov
aas
test
outs
addr16
push
sbb
cmp
pop
adc
and
nop
or
adc
js
or
xchg
or
jl
and
push
pop
push
lods
stos
mov
ret
or
ja
xor
add
mov
jbe
mov
adc
jo
jae
ins
and
add
push
out
xor
push
push
dec
or
push
or
mov
cmp
sub
push
fs
movs
mov
mov
add
jb
pop
imul
jae
or
aam
sbb
xor
push
outs
js
inc
sub
fwait
or
push
push
or
lods
dec
in
test
dec
cmp
push
or
jns
and
xchg
sbb
test
sub
cwde
call
jmp
retf
out
in
out
mov
sub
dec
jnp
add
add
jp
aad
mov
loop
push
jge
sbb
(bad)
test
(bad)
jp
push
adc
or
inc
out
shl
mov
sub
inc
rol
dec
mov
arpl
clc
push
pop
sub
jl
fdivrp
addr16
aam
cwde
and
fwait
dec
lods
sub
sbb
adc
adc
adc
sbb
js
je
inc
inc
test
das
mov
dec
imul
addps
or
pop
inc
xor
jmp
jp
pop
dec
and
jbe
mov
movs
pop
mov
gs
dec
xor
jmp
ins
push
adc
in
push
pop
sub
js
push
lock
pop
mov
cs
jl
jns
add
stos
and
sub
in
les
adc
in
out
cmp
push
loope
and
sub
add
mov
push
sbb
ss
leave
(bad)
(bad)
jle
pusha
jle
pop
xor
std
inc
xchg
xchg
inc
sar
(bad)
jp
pop
push
cs
mov
cmp
hlt
dec
push
jp
iret
fwait
test
dec
pop
xchg
sbb
je
push
mov
int3
mov
and
test
push
icebp
mov
repz
jo
repnz
mov
outs
ins
rcr
jae
xchg
lock
add
mov
mov
add
pop
hlt
mul
pusha
mov
in
imul
or
cli
sbb
sbb
xor
add
jge
pop
nop
mov
push
das
popa
pop
out
dec
dec
xchg
pop
les
cmp
shl
pop
jmp
test
jp
xor
stc
mul
clc
or
call
mov
pusha
outs
cmp
lock
pop
jno
mov
nop
push
je
gs
jns
test
addr16
js
add
mov
mov
in
cld
xor
sbb
jae
sbb
int
adc
bound
xchg
mov
cmp
fs
fcomp
dec
fdiv
sbb
mov
fbstp
jp
leave
out
(bad)
cli
adc
jg
mov
cmp
popf
or
pop
or
and
iret
test
mov
mov
sbb
adc
jo
loope
rcl
xor
mov
push
xor
inc
leave
(bad)
scas
int3
jo
test
jp
push
push
sbb
popa
cmp
call
adc
cli
or
rcr
cmps
sahf
xor
cmp
clc
call
xchg
pushf
pop
mov
ds
das
into
loope
xor
and
fcom
outs
jo
js
and
aam
scas
mov
call
push
xchg
mov
jae
ret
in
lods
lahf
cmp
push
das
ficom
or
mov
adc
push
sbb
adc
setle
jp
nop
(bad)
test
mov
pusha
arpl
test
inc
adc
mov
and
pusha
push
adc
test
fucom
add
fsubp
xor
shr
shl
dec
or
cwde
and
push
mov
jno
push
push
pop
jp
mov
movs
lahf
cmp
retf
shr
shl
push
fcom
push
and
lock
or
add
inc
cmp
or
popf
pop
cwde
push
je
sbb
mov
call
add
mov
xor
ret
pushf
cld
retf
shl
sub
mov
jl
mov
pop
sbb
xor
jl
jne
js
punpckhdq
adc
or
enter
lods
test
fimul
loopne
jae
xchg
bound
mov
mov
inc
xchg
xchg
lods
nop
addr16
or
push
mul
push
xchg
addr16
xchg
pop
in
pop
mov
xor
xchg
jae
xchg
jge
test
scas
pop
cmps
lods
movs
(bad)
cli
out
rcr
and
sub
cmp
(bad)
in
(bad)
jns
loopne
mov
mov
imul
or
pop
push
cdq
pusha
push
fnsave
jns
jl
shl
push
mov
push
or
cld
retf
sub
cdq
out
xchg
or
ror
les
adc
and
sbb
movd
inc
loopne
adc
or
je
push
xor
mov
sub
jg
push
int3
mov
sub
lahf
fwait
jp
mov
nop
mov
test
jae
in
es
mov
dec
xchg
sbb
test
and
mov
test
cld
mov
dec
xchg
xor
fmul
mov
(bad)
test
mov
sbb
fcmovne
rcr
retf
loopne
dec
mov
nop
sahf
push
test
sbb
mov
jno
or
call
fsubr
test
and
push
adc
neg
repnz
and
or
adc
je
ins
cmc
cmp
jle
jae
push
sub
push
js
sub
ret
jl
xchg
adc
fsub
retf
enter
sbb
aam
sbb
mov
popf
xor
xchg
test
add
sbb
je
jmp
stc
xor
std
push
or
cmp
cs
xchg
ja
(bad)
les
ret
mov
fucom
cld
or
push
add
add
movs
hlt
imul
cli
(bad)
sbb
add
outs
jae
add
scas
ja
mov
inc
mov
mov
mov
or
and
mov
movs
adc
adc
add
lods
pop
mov
in
jl
js
jb
adc
dec
dec
inc
les
nop
pop
sbb
lods
jge
sub
cmp
div
dec
test
ror
test
adc
jne
cwde
div
das
sub
clc
xlat
ret
std
mov
icebp
ficomp
retf
and
imul
shl
push
loopne
js
jmp
lock
fisubr
push
jbe
mov
lock
cmp
xchg
outs
jmp
adc
sbb
cwde
push
jecxz
outs
pusha
mov
jnp
add
es
or
imul
fsubr
xchg
adc
sbb
push
je
sub
rcl
mov
scas
or
xor
test
test
xchg
stos
jnp
mov
jl
cmps
mov
mov
into
mov
mov
mov
leave
int3
or
sub
pushf
adc
or
mov
jmp
jmp
jge
or
in
add
pop
lock
inc
aas
and
add
div
mov
les
in
test
mov
cmp
(bad)
popf
cmc
loope
xor
xchg
int3
mov
out
or
sbb
ja
shl
js
adc
mov
push
add
or
out
je
popf
sub
mov
mov
mov
jl
pop
in
popa
pop
push
mov
iret
adc
test
sbb
sbb
jl
push
push
in
or
(bad)
lods
mov
mov
or
jg
loopne
je
jl
xchg
ja
lock
jo
(bad)
fsubr
enter
pop
(bad)
int
mov
or
dec
cmp
(bad)
bnd
loope
mov
jmp
stc
jmp
adc
pop
hlt
test
dec
sar
mov
aam
je
xlat
test
sub
aad
loope
iret
mov
stos
sahf
mov
pop
or
mov
inc
js
test
adc
pusha
shl
sbb
pop
or
je
sbb
out
or
cmp
add
pop
ins
test
xor
(bad)
pop
sbb
and
aad
(bad)
cmp
jmp
mov
xchg
test
mov
mov
sahf
(bad)
adc
icebp
out
rcr
outs
test
cmc
fisub
loopne
push
push
jl
pushf
nop
jns
ret
mov
cwde
jo
add
in
popa
push
(bad)
jo
fmul
inc
leave
in
cmp
pmaddwd
fs
js
(bad)
cli
inc
repnz
rol
sahf
int3
dec
cs
jne
mov
(bad)
stos
push
push
add
ins
dec
ins
aam
cmc
jno
sub
inc
inc
(bad)
shl
adc
movs
dec
(bad)
push
mov
adc
xchg
jmp
or
push
ret
imul
js
mov
xchg
push
das
das
fsubr
xor
aam
mov
or
xchg
in
xchg
je
add
jle
(bad)
fadd
cli
inc
cmp
rol
mov
wbinvd
cld
test
jno
hlt
or
sti
sub
movs
icebp
out
pop
das
call
jmp
neg
and
test
test
jno
(bad)
mov
add
in
pop
imul
fsubr
cli
dec
scas
xor
stc
jmp
add
out
std
pop
in
or
fcom
test
imul
and
gs
or
daa
cwde
les
or
call
sbb
push
pop
repnz
jl
pop
sbb
test
pusha
add
imul
mov
int3
popf
push
lds
lods
inc
and
iret
adc
adc
mov
dec
lea
and
sbb
in
mov
add
mov
pushf
cmp
ds
dec
enter
xchg
imul
in
outs
inc
sub
cli
inc
daa
adc
js
ret
scas
or
fs
cli
jmp
lahf
xchg
mov
(bad)
mov
arpl
cs
cli
jl
icebp
pushf
and
pop
cs
in
add
stos
(bad)
add
cli
outs
outs
imul
add
sbb
rcl
push
sub
nop
pop
call
clc
jns
pop
pop
out
xor
mov
into
ins
xor
js
pop
outs
enter
push
jl
data16
nop
addr16
xchg
push
loopne
push
jl
inc
cmp
jne
iret
mov
push
bound
adc
dec
icebp
pushf
test
adc
add
fnstcw
adc
pusha
jno
xchg
and
cmp
js
sbb
cmp
out
xor
mov
outs
dec
xchg
and
loope
sbb
mov
mov
mov
mov
int3
leave
shl
js
jmp
or
mov
je
out
jmp
dec
push
lods
xchg
mov
out
rol
mov
lea
in
xchg
push
in
mov
aad
mov
out
out
test
pop
or
jo
movs
and
push
push
add
sbb
xor
lods
push
(bad)
push
aam
xor
movs
sti
jecxz
xchg
in
push
in
(bad)
ret
sbb
rcr
int3
add
shr
std
push
mov
xor
imul
mov
ds
pop
rcr
xor
loopne
loope
les
push
(bad)
shl
jae
jnp
jo
js
pop
hlt
idiv
mov
movs
lods
push
cdq
ror
jecxz
cwde
call
repz
call
xlat
sub
mov
ret
ss
scas
movs
xchg
adc
cli
pop
push
push
xchg
xchg
fisub
mov
mov
outs
int
fdivr
ror
cdq
je
scas
xchg
push
pop
loope
imul
jo
es
stc
ins
ffree
add
ins
push
xor
js
repnz
mov
loopne
mov
leave
mov
mov
inc
(bad)
test
sbb
xor
(bad)
hlt
mov
jmp
out
cmps
popf
xor
repz
cmc
mov
cmp
jno
js
js
fdivr
cld
out
xchg
data16
or
ja
and
retf
daa
sahf
ins
sbb
mov
mov
mov
lods
daa
and
push
push
push
ja
out
mov
mov
test
js
js
pop
pop
mov
and
push
cmps
fwait
iret
push
ret
jns
(bad)
jae
rol
out
nop
cli
sbb
out
loope
jmp
jl
(bad)
mov
sbb
ror
ins
data16
mov
xor
adc
pusha
jbe
jp
test
mov
lahf
cmp
in
test
int
data16
sub
or
push
lahf
mov
push
cwde
sbb
int3
movs
sar
popf
mov
mov
ins
sbb
and
pop
cmc
rcr
jp
xchg
lods
gs
dec
push
sbb
int3
dec
mov
scas
sbb
repnz
mov
cli
fadd
pop
cld
cmp
shl
enter
sti
push
inc
call
iret
repnz
push
inc
and
mov
inc
fdivr
call
mov
push
retf
jle
jns
jb
xchg
repnz
jb
push
sub
test
cwde
pop
mov
sub
rol
jne
lea
fs
in
jb
aad
scas
cwde
out
jne
into
std
lock
mov
lock
add
jge
sub
clc
jo
std
hlt
lods
scas
mov
stos
dec
or
inc
mov
js
sbb
pop
retf
jge
lock
inc
inc
js
jmp
retf
dec
mov
sbb
sbb
loopne
aad
fcmovnbe
jne
mov
js
cwde
shr
mov
push
rcl
xchg
je
jl
adc
test
jae
cmp
jo
loop
repz
sbb
iret
mov
cs
or
stc
or
out
pop
in
mov
retf
pop
jmp
call
les
pop
xchg
add
adc
cmp
xlat
jp
cs
jmp
std
scas
mov
cwde
test
xchg
pushf
jmp
nop
mov
out
pop
fisubr
xchg
clc
add
in
dec
(bad)
int3
les
xchg
xchg
mov
aam
test
jae
imul
jae
enter
xchg
or
stc
pusha
mov
cld
repz
push
add
repnz
push
pop
push
fidivr
mov
xlat
cwde
mov
pop
pop
pusha
mov
pop
je
fild
jp
je
shr
(bad)
jp
sbb
add
jl
pop
inc
dec
in
test
xchg
mov
int3
xchg
dec
popf
movs
popf
js
test
xor
adc
cmp
stos
leave
sbb
push
mov
jae
rcl
push
pop
pop
pop
xor
sub
test
out
out
les
adc
mov
jno
in
jg
add
inc
mov
sahf
or
scas
les
push
or
jbe
sbb
add
clc
jns
jle
dec
loop
pop
sub
sub
les
and
xchg
inc
fnstcw
sbb
ins
leave
xchg
in
(bad)
push
loop
mov
(bad)
(bad)
fcomp
ins
mov
jl
loopne
nop
shl
jle
mov
and
sbb
mov
loope
xor
pop
jl
dec
push
out
xor
aad
aaa
push
push
ins
jne
and
push
fsub
cmp
jne
std
mov
push
push
daa
push
mov
es
xchg
add
leave
and
dec
jge
sub
sbb
div
xchg
jo
jmp
stos
xor
sub
pop
mov
sar
(bad)
mov
push
jmp
aad
jp
es
sbb
mov
jnp
daa
ins
pop
or
xor
push
pop
xchg
sbb
and
(bad)
sub
test
clc
dec
dec
daa
mov
jl
les
clc
mov
enter
push
(bad)
sub
push
movs
je
mov
stos
jp
test
repnz
loopne
js
push
jl
cmc
fs
and
mov
xor
dec
sub
jg
push
mov
or
mov
loop
dec
and
ror
popa
(bad)
mov
pop
mov
prefetch
or
jge
pusha
xor
jmp
cmp
jmp
pushf
jge
gs
sbb
movs
xor
test
pop
pop
test
jp
xlat
fist
(bad)
lods
shl
sbb
or
dec
int3
je
mov
(bad)
jp
cmp
leave
and
fidivr
pop
cli
push
ins
adc
jp
sub
fadd
dec
mov
inc
aad
js
repnz
or
jmp
mov
aad
stos
test
sub
rcr
fs
fmul
enter
push
ins
add
jnp
sub
dec
int3
mov
push
xor
loope
push
fucomip
dec
or
dec
push
jbe
push
stos
mov
je
imul
outs
hlt
fs
mov
adc
push
ins
sub
push
jl
jl
xchg
xchg
mov
and
jp
mov
xchg
nop
addr16
mov
mov
pinsrw
xchg
scas
fs
ja
sbb
push
fmul
pop
nop
rcl
imul
test
cmp
or
pop
fnop
xor
js
lea
in
dec
cmp
dec
adc
jae
loope
dec
out
test
inc
pusha
stos
aam
cs
sub
loop
pop
xchg
test
jp
and
mov
and
shl
jl
pop
mov
inc
xor
jne
sar
int3
or
popf
or
jb
xchg
rcr
ins
outs
adc
pop
ret
outs
add
inc
dec
push
jne
in
lods
stc
call
jmp
inc
push
lods
cdq
je
pop
inc
in
jae
pop
pop
push
mov
(bad)
add
nop
add
mov
inc
(bad)
sbb
hlt
mov
ds
dec
nop
dec
bound
leave
inc
ds
sbb
xor
mov
xchg
fwait
jle
xchg
cmp
mov
pop
pop
sub
js
fcmovbe
(bad)
cmps
call
call
nop
jg
clc
push
adc
ror
out
test
and
cmp
aad
mov
mov
jecxz
in
jns
rcr
jns
xchg
pop
sbb
and
inc
fimul
mov
push
dec
mov
cwde
loopne
aam
bound
shl
xor
and
mov
jp
rcr
jle
sbb
ret
xlat
mov
mov
leave
jmp
lds
pop
sub
pusha
inc
(bad)
int3
lock
iret
sbb
shl
sqrtps
push
test
mov
enter
cmp
test
call
push
loopne
jno
stos
aam
(bad)
dec
pop
dec
int
jno
std
pop
push
push
cmp
out
movs
push
int3
inc
fdivr
dec
dec
sub
div
sti
ret
lahf
push
mov
and
mov
cld
push
and
xor
jp
vpmacssdql
push
sar
pop
js
push
jp
jl
(bad)
sub
mov
or
fdiv
push
cmp
adc
xor
retf
sar
xchg
das
sub
lock
adc
and
fsub
rcl
xor
fcom
dec
dec
dec
pop
mov
sub
xor
dec
aaa
or
mov
std
aam
repz
cwde
jmp
nop
dec
mov
or
push
inc
cs
pop
pop
adc
or
xchg
fcomp
scas
fcmovb
and
(bad)
push
pop
sbb
cmp
retf
push
xor
test
jp
hlt
mov
pop
das
aam
cwde
jp
js
cwde
outs
xor
dec
fidiv
mov
mov
mov
js
(bad)
fiadd
jp
loop
jp
test
ret
jb
sub
mov
sub
test
add
sub
rcr
dec
push
out
in
pushf
jp
nop
les
js
je
xor
xchg
or
inc
fdiv
jne
retf
(bad)
jg
jl
vpcomw
sbb
push
xchg
cdq
adc
sub
(bad)
movs
enter
jp
mov
aad
jl
cmc
fdivr
push
shl
sbb
out
pop
cli
sahf
mov
test
cld
test
loopne
push
scas
mov
mov
mov
mul
mov
stos
jecxz
cmp
call
push
and
cmc
js
mov
mov
mov
idiv
cmp
or
push
jl
ret
mov
and
das
jb
or
clc
xor
mov
loop
jl
and
mov
xor
(bad)
std
and
in
hlt
cwde
push
popf
fwait
test
movs
lock
jbe
xchg
jp
jl
xchg
and
mov
jp
test
shl
jp
push
clc
loop
jp
stos
sbb
cmp
cmp
sub
dec
pushf
mov
jl
xor
jno
or
push
test
xor
push
js
sbb
nop
xchg
fwait
lea
inc
jp
mov
fcomp
sar
hlt
shl
pop
jae
sbb
sub
and
stos
fmul
or
add
in
cmc
movs
and
movs
mov
test
push
sbb
into
int3
mov
jp
int3
mov
xchg
(bad)
mov
jp
add
dec
cmp
sbb
adc
xor
pop
push
pop
pop
jg
or
jp
es
mov
jo
(bad)
jecxz
adc
push
xor
out
xor
das
cs
jl
lock
bound
pop
(bad)
xor
mov
repnz
and
ror
dec
leave
retf
xor
mov
jae
test
xlat
and
cwde
add
data16
jne
push
aas
mov
(bad)
fcmovnbe
dec
mov
lods
add
shr
es
jp
cmp
push
sbb
test
dec
dec
dec
loop
sub
loope
push
hlt
jl
(bad)
icebp
in
sbb
ja
xchg
xchg
mov
rol
jp
mov
enter
popa
and
mov
xchg
lods
nop
mov
adc
popa
arpl
or
iret
jp
mov
(bad)
in
cld
div
nop
shl
addr16
add
cmp
mov
nop
stos
cmps
mov
jge
push
and
adc
bound
shl
in
adc
cmp
mov
pop
js
push
movs
mov
imul
test
aam
xchg
xchg
movs
adc
js
jne
adc
mov
dec
dec
cwde
das
xor
leave
xchg
test
(bad)
sbb
stos
stos
std
les
fwait
pushf
call
pop
push
out
icebp
out
in
stc
mov
rcl
rcr
xor
mov
sar
inc
test
es
inc
mov
js
jl
les
ins
and
fs
movs
fsub
adc
cdq
shr
mov
jo
fsubr
aam
mov
sbb
sbb
popf
cmc
mov
jp
adc
push
pop
fwait
pop
mov
loop
ins
mov
ins
jne
and
cmp
mov
repz
bnd
iret
inc
test
pop
mov
fwait
adc
(bad)
in
push
(bad)
xor
js
adc
aam
xor
add
xor
dec
lock
and
imul
dec
pushf
xor
shl
(bad)
ins
stos
clc
cmp
outs
outs
(bad)
cwde
sub
mov
aam
pop
fwait
cdq
mov
sub
aam
in
fadd
xor
mov
mov
cmp
mov
push
xchg
sub
sub
pushf
stos
lods
cmp
addr16
pop
gs
push
fs
inc
xchg
xchg
add
dec
je
je
in
mov
dec
ds
push
push
mov
nop
jne
inc
mov
cmc
cwde
aas
cdq
push
hlt
arpl
lock
xchg
test
and
or
pop
mov
adc
or
and
push
push
jg
sub
rcr
daa
movs
pop
jne
lea
mov
push
dec
mov
adc
shl
fadd
xor
rol
or
fdiv
xchg
push
test
les
xor
dec
sbb
daa
sub
js
and
adc
ds
aas
in
ret
rcr
pop
pushf
es
sub
jbe
jae
mov
sbb
push
adc
sbb
mov
call
pop
std
sti
cwde
adc
je
mov
shl
jmp
push
push
sub
push
mov
xchg
les
lods
ins
sub
mov
sub
push
ret
repz
jo
push
int3
push
jno
or
mov
ins
in
jbe
mov
sub
jne
pop
pop
pop
and
xchg
ins
xchg
inc
cmp
int3
enter
jae
cmp
inc
dec
cld
cmp
push
inc
test
or
popa
fwait
mov
pop
add
fbld
pop
adc
test
push
mov
xor
cmp
ins
lock
call
sub
pusha
pop
(bad)
movs
ins
xor
mov
sbb
jp
adc
dec
pop
or
fistp
jne
adc
imul
xor
shr
push
and
imul
loop
mov
jae
test
xor
or
xor
in
js
cmc
enter
test
jl
loop
sub
hlt
out
(bad)
or
in
push
arpl
call
stos
(bad)
enter
mov
jp
pop
bound
(bad)
in
push
in
ds
adc
dec
push
fisubr
jge
or
pop
adc
ja
push
sar
leave
iret
int3
mov
out
mov
stc
movs
sub
mov
mov
jge
pop
xchg
(bad)
aam
cmps
ins
into
jmp
push
lock
out
in
xlat
add
addr16
ror
(bad)
rcl
in
cmc
sti
mov
fstp
es
pop
xor
jno
ss
je
sbb
dec
ins
sti
ins
adc
and
mov
ffreep
popf
push
ret
mov
in
cmps
mov
add
fisttp
gs
xchg
(bad)
in
or
adc
cwde
jns
push
cmp
sahf
sbb
mov
dec
dec
xlat
js
sub
push
push
das
lea
pushf
repnz
inc
ret
mov
(bad)
enter
gs
int3
lea
ins
lds
inc
jmp
movs
push
fs
retf
iret
pushf
call
ret
sar
mov
xchg
(bad)
and
in
mov
mov
jp
mov
pop
lahf
xchg
inc
cdq
pushf
movs
jge
pop
lds
jl
fcomp
js
push
in
outs
mov
imul
pop
test
fcomp
in
mov
aam
mov
pop
rcr
fdiv
iret
sahf
je
into
lahf
mov
(bad)
mov
popf
push
pushf
in
(bad)
and
clc
ins
jmp
pop
(bad)
push
push
dec
jo
jo
cwde
dec
jg
nop
sub
repz
aad
rcl
mov
jno
mov
jmp
mov
sub
call
add
(bad)
mov
fistp
stos
fidiv
(bad)
mov
sti
pusha
add
jae
dec
cs
sub
int3
push
dec
call
sar
cmp
jnp
xor
jne
or
shl
mov
pop
pusha
push
mov
daa
pop
or
arpl
push
sub
cmc
sub
mov
ja
xchg
lods
out
push
jae
sbb
xchg
clc
aad
mov
outs
cmps
adc
push
js
addr16
xor
retf
mov
jl
jno
adc
xor
sub
sbb
pop
nop
xchg
or
add
jge
es
jmp
test
jl
jnp
jbe
retf
jnp
cdq
clc
(bad)
push
or
inc
inc
mov
mov
iret
dec
mov
shl
cmc
and
sbb
je
adc
ret
mov
add
jl
shl
push
lea
pop
hlt
ja
adc
jnp
mov
cmps
jle
test
push
fadd
mov
js
fadd
xor
lock
ret
retf
jo
dec
xor
je
inc
push
sub
iret
push
mov
aad
sbb
push
in
inc
(bad)
in
pop
leave
nop
xchg
and
sbb
jge
ins
fldenv
imul
add
test
movq
lods
je
fdiv
jbe
mov
and
dec
pusha
aad
das
stc
ins
into
push
push
mov
dec
mov
xor
push
mov
sti
jne
jno
ins
je
movs
enter
in
sbb
jno
pushf
pop
popa
add
int3
dec
pop
pop
ss
jge
test
or
push
pop
idiv
je
(bad)
inc
inc
fcomp
dec
in
adc
dec
ds
stc
jae
pop
cld
xchg
adc
inc
cmp
popf
pop
mov
bnd
inc
xor
inc
mov
fld1
and
push
je
push
pushf
leave
adc
ret
pop
dec
test
push
leave
es
xor
jle
jo
in
or
xchg
movs
test
jo
mov
stos
jne
aas
pop
jb
cwde
jns
pop
sti
sar
inc
int3
pushf
xor
mov
inc
enter
int
sub
dec
retf
inc
xor
rcr
push
(bad)
js
xor
lds
pusha
ja
push
jmp
push
mov
das
mov
inc
sbb
rcr
jne
sub
dec
jmp
sar
(bad)
push
mov
add
jmp
add
xor
and
fisttp
lahf
(bad)
in
xchg
xchg
dec
aam
fdivr
push
ins
cwde
cdq
push
sub
fsubr
jbe
enter
cli
movs
dec
jmp
inc
retf
fnstcw
cmp
sub
ret
inc
into
cmc
aad
mov
pop
ins
ds
fdiv
push
loopne
push
sbb
sbb
jp
ss
shl
cmp
arpl
cld
enter
lock
fistp
cmps
xor
jp
gs
sub
les
call
gs
imul
mov
cmp
or
je
js
mov
xchg
les
cwde
call
test
fucomp
inc
je
and
jns
pop
ins
jno
test
jmp
mov
rol
cmp
stos
out
mov
cmp
cmp
jmp
je
icebp
mov
in
xor
jg
xor
je
popa
inc
es
push
sub
sbb
push
std
mov
xor
and
ret
aam
shl
push
sub
inc
cld
dec
bound
adc
rcr
sbb
dec
push
jg
sar
aad
jmp
xchg
dec
movs
jb
push
mov
test
cmp
cmp
add
pop
ret
sbb
in
and
call
pop
test
jne
xor
sar
inc
in
mov
xor
mov
cmp
js
shl
jge
pop
popa
add
mov
cmp
dec
jne
mov
ja
inc
mov
or
hlt
push
cmc
push
sbb
je
daa
cwde
call
adc
je
mov
dec
pop
and
xor
js
sub
jne
pop
ins
int
dec
jp
popa
adc
test
xlat
sub
(bad)
sbb
push
les
jne
enter
pop
mov
xchg
iret
movs
dec
scas
stos
retf
inc
sub
lea
mov
push
push
or
arpl
jp
dec
loop
in
jmp
sbb
ins
xor
xchg
mov
jp
(bad)
mov
jne
lea
or
push
sbb
add
push
pop
aas
das
nop
inc
out
jnp
dec
jecxz
push
ins
cmp
shl
inc
iret
cmp
je
xor
jne
cli
adc
mov
fs
adc
inc
jnp
bound
gs
jbe
cmc
dec
adc
outs
dec
lea
and
js
js
test
pop
mov
mov
leave
sub
xor
cmp
jb
lods
push
push
aas
mov
ins
in
push
dec
push
(bad)
fdiv
sbb
ss
mov
js
and
adc
ja
sub
fsub
jnp
(bad)
xchg
mov
add
sbb
fistp
ficomp
cmp
mov
inc
mov
movs
jno
xor
xchg
sub
cmps
sbb
gs
pop
sti
int3
inc
dec
ja
cmp
mov
or
in
push
cmp
mov
fcomp
imul
xchg
push
(bad)
jo
mov
xchg
test
inc
repz
cmp
jle
adc
call
fmul
lock
fstp
push
dec
add
and
test
xor
xchg
jb
dec
out
jo
sbb
js
cmp
shl
imul
inc
cmp
js
jp
cwde
sub
jne
mov
outs
jno
int3
and
mov
mov
push
fisub
jle
sub
xchg
adc
dec
je
ins
cmp
pushf
jbe
lock
push
out
cmp
ficomp
pop
hlt
aas
jmp
inc
int
addr16
call
mov
mov
dec
ds
cmp
push
inc
push
je
xor
in
add
and
and
fcomp
inc
add
pop
jge
data16
jmp
mov
sub
fmul
xor
lea
aam
push
test
lds
mov
lds
dec
xchg
ins
jbe
cmc
int3
and
std
cmp
and
imul
xor
in
stc
cmp
mov
sub
push
inc
out
xor
jae
inc
mov
and
push
adc
inc
sbb
cmp
jne
xor
outs
or
inc
shl
push
arpl
in
scas
or
dec
push
dec
push
inc
test
in
in
lods
out
jp
xchg
fcmovnbe
stos
mov
mov
adc
adc
bound
cmp
push
fidiv
xor
lods
dec
int3
xchg
ins
push
gs
push
xor
pop
xor
adc
xchg
cdq
mov
pop
aam
pop
std
mov
pop
push
pop
mov
mov
jle
sub
add
int3
outs
mov
pop
ror
jo
push
and
sub
retf
mov
popa
test
pop
sbb
xor
ja
and
and
neg
or
shl
nop
stc
je
xor
jae
mov
pop
inc
xor
js
xor
push
add
je
push
mov
cmps
sub
in
or
push
fistp
and
jbe
movs
xchg
xchg
pushf
push
ins
dec
adc
push
dec
add
pop
pop
ss
aaa
dec
jp
pusha
jb
xchg
je
test
dec
sbb
imul
imul
or
pop
push
push
pop
lds
add
mov
ins
xchg
mov
dec
and
lods
pusha
mov
test
pop
sar
and
xor
push
hlt
sti
sbb
or
sub
xor
sub
int3
sub
mov
and
fnstenv
pusha
adc
enter
pop
imul
js
push
lock
or
add
inc
dec
clc
call
mov
push
jnp
push
mov
sbb
dec
push
jae
mov
je
sub
push
stos
dec
mov
push
aaa
ror
push
in
adc
cmp
gs
jl
adc
mov
sahf
loope
mov
xor
cmp
(bad)
leave
(bad)
in
pop
lea
xchg
pop
ja
stc
lods
daa
cld
xchg
adc
out
push
imul
sub
(bad)
mov
movs
mov
(bad)
jae
cmp
or
mov
cmps
fbstp
lods
je
xor
pop
(bad)
pop
mov
stos
and
pusha
inc
loopne
je
push
aaa
inc
cld
js
pop
(bad)
cmc
inc
inc
pop
cmc
jno
je
mov
scas
jb
fdivr
cmp
into
cmp
ja
hlt
dec
push
not
clc
dec
sub
and
data16
test
call
pop
xor
push
add
imul
and
sbb
jb
mov
les
pop
push
push
sub
in
mov
jl
adc
push
js
js
cs
fmul
dec
inc
pop
shl
js
and
popf
cmp
cmc
inc
es
inc
and
or
(bad)
loop
cs
and
and
push
ds
cld
es
push
xor
pop
js
pop
jns
jg
hlt
and
call
xor
out
sbb
test
mov
fidivr
pushf
mov
cmp
pop
add
cmp
cwde
in
xor
fadd
pop
data16
fcomp
pop
sbb
sbb
push
sbb
hlt
stos
lods
cmp
xchg
xchg
cwde
mov
mov
inc
pop
mov
mov
mov
jl
sub
les
push
mov
cmp
xor
mov
bswap
aam
les
pop
jge
jb
or
sub
les
xor
addr16
dec
loop
in
es
cli
js
cmp
xor
sub
dec
ja
jbe
jo
jo
daa
inc
loopne
sub
inc
inc
push
call
retf
fadd
call
es
adc
pushf
jp
push
inc
in
dec
sub
mov
pop
mov
jge
mov
outs
ins
gs
xchg
sub
cmp
jno
div
(bad)
inc
push
push
loop
jbe
test
or
fadd
add
add
mov
cmp
xchg
xchg
je
xor
sbb
jp
and
retf
mov
data16
test
inc
push
(bad)
push
sbb
sub
je
add
movs
jo
daa
mov
ud0
cli
and
cmp
and
in
retf
clc
jmp
dec
nop
hlt
sbb
imul
outs
and
push
mov
xor
fdiv
je
jo
jns
mov
adc
jnp
inc
push
jae
and
mov
adc
outs
daa
xor
jnp
ins
push
cmp
mov
jp
cmp
pop
je
js
ins
sbb
pop
(bad)
fist
mov
push
or
ret
vmovaps
mov
xchg
sahf
test
xchg
sub
in
leave
mov
push
enter
sbb
inc
mov
sub
clc
jl
mov
pusha
pop
sub
sub
jnp
push
dec
lock
pop
cmp
inc
inc
pop
mov
inc
test
into
mov
pop
js
xor
cmp
cmp
sbb
sbb
fld
mov
push
xor
mov
das
loopne
and
mov
fs
addr16
mov
add
jae
inc
movs
pushf
pop
mov
call
hlt
pop
popa
pusha
pop
push
imul
xchg
test
stos
jp
push
fxch
imul
stos
pop
sub
dec
jl
xchg
jbe
add
adc
mov
mov
fist
dec
jge
clc
sub
mov
je
jnp
push
xor
push
or
pop
shr
aam
jmp
xor
cmp
and
shr
jp
dec
push
test
cmps
xchg
xor
xor
in
jbe
dec
loope
xor
call
cmp
xor
xor
pop
(bad)
in
stc
sbb
std
cwde
into
shl
mov
mov
test
cmp
aam
mov
push
xchg
adc
les
das
cwde
fwait
(bad)
and
jae
daa
idiv
shl
mov
les
movs
sbb
push
sbb
dec
push
cmp
aaa
leave
mov
loopne
and
pusha
int
iret
mov
retf
test
jb
(bad)
xchg
xor
mov
xor
pop
fsubr
aaa
pop
jl
pop
cmp
loopne
push
and
pusha
rcl
or
lahf
call
sbb
ins
adc
push
jnp
imul
and
fsubr
fcmovnu
jnp
stos
lods
stos
call
les
or
push
xchg
sub
cwde
adc
push
jo
daa
mov
rcr
int
dec
cmc
xor
dec
pushf
jp
pop
pop
ret
mov
jo
std
jl
sbb
or
adc
std
mov
pop
ins
adc
push
inc
dec
xor
sbb
int3
std
test
fcomp
jo
arpl
hlt
and
dec
pop
and
ins
dec
push
mov
push
inc
pop
lock
jl
movs
inc
jbe
in
out
xor
add
std
xor
ror
fucomp
dec
sbb
sub
les
je
lock
push
dec
mov
or
outs
jo
les
ja
push
pop
inc
cmp
and
loopne
mov
call
stos
mov
out
lahf
jne
in
ror
cld
mov
adc
test
call
in
js
cmp
cmp
in
cmp
enter
jl
ja
fstp
ret
ret
fsubr
pop
xor
xor
pusha
push
sub
inc
jl
sbb
fs
jbe
sub
xor
jne
push
cwde
pop
sub
inc
ins
iret
movs
or
add
mov
sbb
mov
hlt
xor
ja
pop
adc
loopne
jae
xor
stc
rcr
movs
xor
pop
pop
cld
lock
fdiv
call
sub
lods
lods
test
push
call
mov
jo
sahf
push
mov
mov
mov
pushf
jo
mov
lods
daa
cwde
mov
test
cmp
mov
mov
mov
sub
bound
jl
sbb
and
iret
fwait
adc
dec
movs
cwde
dec
xor
and
sbb
mov
xor
pop
sbb
in
dec
dec
push
loopne
xor
outs
ret
mov
dec
aam
pop
jne
pop
js
fwait
test
pop
loopne
mov
and
xor
dec
sub
retf
cli
je
cmp
dec
push
add
or
sub
push
push
xchg
ds
jne
pop
add
adc
retf
push
mov
and
repz
add
xor
ins
sub
mov
pop
mov
jb
mov
xchg
xchg
add
cbw
inc
jno
mov
js
test
jle
mov
or
imul
mov
and
cmp
sub
mov
in
ds
and
test
enter
mov
data16
js
mov
sub
ror
je
inc
adc
js
jg
mov
retf
mov
sub
js
cmp
test
jb
outs
pop
out
cmp
aas
xor
cmp
dec
pushf
xor
sbb
outs
cmc
nop
out
ds
push
out
and
jne
dec
push
idiv
sub
xor
out
or
mov
test
cdq
lods
pop
mov
and
test
mov
adc
test
jecxz
pop
push
pop
pop
push
mov
or
xchg
aam
daa
and
aad
jge
and
pop
jo
sub
in
xchg
and
ins
movs
and
scas
je
rol
cmp
fs
cmp
loope
lock
inc
inc
adc
mov
xchg
out
inc
fnstenv
fldcw
pop
sbb
pop
push
ins
jb
out
jl
pushaw
sub
or
rcr
xor
sbb
ss
addr16
sub
inc
retf
xor
push
popa
inc
jge
dec
sub
mov
mov
imul
jb
lods
jg
movs
out
jle
xchg
push
(bad)
sub
(bad)
fisub
ret
out
aam
pop
loop
push
jp
test
cld
jne
cmc
cmp
test
pop
jns
pop
mov
out
pop
cld
js
outs
sub
call
jns
ja
js
inc
(bad)
pop
enter
loop
mov
js
jns
daa
jo
cmc
aam
icebp
je
ins
js
mov
ins
fisttp
jne
test
das
pop
(bad)
js
pop
hlt
jmp
in
fs
or
xor
sub
cmp
ja
push
imul
pop
xchg
je
xlat
jae
ss
ja
xchg
xor
cwde
mov
sbb
mov
dec
out
inc
push
pop
jo
stc
dec
ret
sbb
inc
call
cld
ds
sub
xor
add
xchg
cmp
ds
je
fstp
mov
jnp
adc
or
sar
xor
jnp
mov
dec
and
dec
mov
imul
inc
sub
mov
fdiv
jmp
sbb
inc
scas
dec
and
pop
jo
pop
push
mov
mov
in
mov
pmaddwd
(bad)
jne
enter
lea
cmc
lods
stos
movs
mov
(bad)
je
sbb
sub
xlat
shr
stos
dec
cmps
mov
push
adc
loopne
aam
mov
sub
clc
popa
jbe
inc
test
push
xor
shl
addr16
jp
pop
pop
sbb
cmc
jo
loopne
dec
data16
jp
ds
out
push
aaa
(bad)
les
fisttp
xchg
cmps
push
jae
retf
sbb
or
in
cwde
add
push
ret
fs
ds
mov
xchg
pop
xor
fcom
push
sub
add
es
mov
push
test
pop
pop
pop
retf
rol
lods
dec
test
out
mov
jl
xchg
mov
scas
and
in
push
sub
xchg
xor
jle
inc
(bad)
icebp
in
dec
cwde
sbb
sub
stos
arpl
sub
gs
and
outs
push
out
sub
and
fdivrp
les
rcr
sub
xor
cwde
push
or
sti
xchg
inc
ins
push
sbb
or
hlt
pushf
clc
and
dec
ret
je
sar
push
and
retf
and
cmp
sub
sub
adc
outs
jae
cld
aaa
inc
xor
pop
je
pop
add
cmp
jmp
jp
adc
imul
xor
popa
xchg
mov
je
lahf
sbb
add
add
pop
and
icebp
sti
fcomp
icebp
mov
or
pusha
ja
imul
pop
and
cs
push
loopne
adc
js
jo
mov
sbb
enter
jne
sbb
mov
xchg
cmps
jl
sbb
test
js
sbb
and
test
xor
push
aad
jne
xor
mov
cmp
xor
jne
dec
add
shr
shl
push
pop
shr
sub
mov
movs
sub
aad
cs
dec
inc
mov
mov
sub
test
sbb
add
pop
mov
loopne
ins
bound
stc
int3
mov
push
adc
mov
jne
mov
gs
push
xor
es
inc
sub
fs
push
cmps
test
in
int3
daa
adc
push
cmc
inc
add
into
mov
dec
ret
adc
lock
mov
data16
xor
push
jo
xor
call
push
shl
xchg
sbb
rol
in
bound
mov
and
ins
or
mov
in
cmp
sub
inc
inc
pop
dec
stos
out
jl
fmul
cmp
fdivrp
adc
ins
xor
je
data16
jae
ja
movs
int3
xor
mov
lea
cmp
add
fwait
call
or
sbb
push
cmp
in
mov
xchg
fsub
lea
add
pusha
clc
daa
out
(bad)
shr
cmp
inc
imul
or
call
push
inc
jmp
xchg
ins
mov
nop
inc
fld
pop
adc
add
pop
rol
lock
sub
mov
and
sub
push
je
cmp
jne
inc
std
sbb
dec
out
nop
sub
cmp
xor
int3
sbb
int
ja
(bad)
jno
mov
jns
imul
pop
and
jl
xchg
jl
mov
movs
cmps
stos
out
rcl
aas
js
jno
jmp
pop
sbb
dec
loopne
or
(bad)
pushf
mov
test
(bad)
hlt
sbb
sub
test
sbb
and
mov
inc
push
xor
inc
int3
jne
pop
std
mov
jae
add
js
jmp
jne
xor
lahf
push
and
jmp
mov
mov
push
and
(bad)
sub
ss
rcr
add
push
loopne
sub
and
dec
je
dec
jb
pusha
cli
cmp
jbe
les
pop
call
js
mov
mov
out
mov
hlt
mov
or
in
push
inc
dec
push
or
ins
add
fs
cmp
push
push
mov
cmp
sub
shr
dec
(bad)
in
sbb
add
sar
scas
jo
sub
fs
rcr
ins
pop
pop
js
imul
int3
inc
xor
dec
cli
je
dec
daa
mov
imul
pop
ins
mov
sbb
imul
nop
sub
push
adc
sbb
sbb
leave
jae
fisubr
aas
dec
and
outs
js
cli
cmp
loope
sub
std
ss
jae
imul
pop
cwde
mov
sbb
imul
mov
lods
ins
(bad)
jl
jl
mov
xchg
cli
inc
ret
xor
mov
int3
faddp
jge
mov
les
adc
adc
rol
ins
outs
dec
xchg
js
xor
and
mov
mov
int3
outs
xor
mov
pushf
nop
mov
jno
je
sub
(bad)
cmp
cmp
jno
push
mov
fs
shr
jo
mov
outs
dec
leave
je
fs
or
clc
fadd
jl
push
mov
push
inc
mov
enter
loopne
and
mov
aas
int3
cmp
xlat
fsubr
or
sbb
dec
jl
imul
push
(bad)
in
loope
aam
in
add
(bad)
pop
mov
aam
push
adc
cmps
add
push
xor
js
add
sar
sahf
and
in
rol
jp
push
lock
sub
arpl
jne
jo
mov
mov
fimul
xor
test
xor
and
xor
cli
enter
fs
cmp
test
dec
sbb
pop
shr
cmp
xor
push
pop
or
cwde
cs
fs
inc
inc
and
pushw
add
and
sub
dec
jle
call
(bad)
mov
mov
das
and
fdivp
jl
int3
bound
cld
std
mov
mov
imul
imul
aad
outs
mov
mov
mov
lods
js
test
stos
fld
clc
adc
dec
int3
or
jp
cmp
test
cwde
xor
rcl
pop
xor
jp
push
and
sbb
int3
clc
ins
outs
pop
test
dec
sbb
in
cdq
sub
jne
popf
mov
adc
in
jns
mov
enter
pop
out
inc
dec
pop
mov
sbb
push
adc
sbb
and
loopne
je
mov
mov
sub
test
push
nop
js
cmp
jmp
adc
sub
fmul
jl
push
retf
test
xor
xor
dec
push
in
inc
jl
adc
inc
xor
int3
ror
jmp
mov
and
mov
ds
pusha
call
pop
movs
dec
loop
or
in
out
in
ret
retf
js
cmp
int3
lahf
push
adc
jp
sub
es
pop
daa
push
dec
jl
jl
ds
push
fs
das
call
dec
nop
out
mov
loop
fs
push
xor
enter
cmp
ss
xchg
out
dec
sbb
outs
pusha
sbb
sub
adc
dec
mov
xor
dec
adc
nop
xor
mov
inc
pop
push
arpl
mov
sub
dec
fst
inc
push
xchg
xor
mov
rcr
dec
push
test
sbb
xor
ret
ss
je
mov
jo
popf
sahf
pushf
into
push
mov
jg
mov
mov
les
mov
das
jo
adc
inc
push
jmp
sub
mov
mov
and
js
xor
in
mov
sub
push
cli
test
mov
out
gs
inc
jge
cmp
jmp
fdivr
dec
push
add
xor
sbb
jge
sbb
cmp
sbb
retf
and
jl
adc
gs
ins
or
les
sbb
imul
and
js
push
popa
add
pop
add
inc
aad
lods
xor
jne
jb
lahf
lea
mov
jl
or
movs
mov
sub
das
mov
jne
mov
test
mov
nop
mov
or
mov
int
ins
pcmpeqw
sbb
xchg
pop
les
and
test
aaa
ja
jnp
nop
cmp
out
imul
je
jae
sbb
sbb
pop
int3
enter
mov
int3
cs
jno
aam
push
inc
cwde
xor
sbb
lods
std
or
sbb
dec
popf
lods
pop
clc
push
adc
inc
stos
test
pop
hlt
pop
inc
pop
jo
dec
inc
outs
in
xor
fs
sbb
js
int
pop
xor
ins
lock
je
push
jo
outs
push
js
pop
rcr
dec
lock
mov
js
test
mov
test
jl
pushf
(bad)
cwde
test
imul
xor
cld
jge
cs
dec
jl
mov
sbb
das
cli
fsubr
adc
js
dec
dec
cli
dec
loopne
aam
mov
aas
out
les
sbb
jecxz
jo
adc
hlt
je
jns
addr16
jae
inc
ins
jne
mov
mov
js
ins
xor
pop
jno
inc
add
and
add
in
jl
inc
push
out
jp
pop
loop
mov
sub
dec
xor
jl
cmp
out
cmp
imul
mov
xchg
xchg
xchg
sbb
lods
cmps
in
test
xor
cld
jge
mov
mov
pop
jne
add
sbb
mov
stos
jp
mov
cmps
fs
jle
ds
and
pop
bound
jns
sub
test
push
sbb
fsubr
cwde
jnp
nop
jbe
push
push
push
mov
js
(bad)
call
push
or
(bad)
aam
jne
in
dec
mov
jns
loopne
jnp
outs
(bad)
jp
data16
sbb
jne
or
sub
je
cmp
cwde
xchg
jns
pop
add
or
fs
mov
pop
in
sbb
les
fcmovnbe
inc
or
and
mov
movs
jl
ja
call
cmc
cwde
test
mov
xchg
mov
jne
mov
mov
js
(bad)
int3
mov
repnz
mov
sbb
dec
js
(bad)
in
ja
fisub
jb
mov
sbb
push
movs
push
mov
jae
mov
aaa
sbb
sub
fcomp
or
cmp
data16
xor
loopne
nop
xor
aaa
in
add
xor
jo
jb
and
and
ins
cmp
sbb
data16
sub
ds
and
or
aam
js
and
push
sbb
jp
fs
pop
imul
xchg
and
outs
outs
fstp
mov
mov
call
and
cmp
pop
nop
jle
pop
call
(bad)
call
aad
mov
pop
and
ja
popa
adc
inc
mul
retf
dec
test
retf
inc
mov
xor
and
add
xor
xor
sahf
je
pop
sub
push
inc
xor
cwde
inc
sbb
(bad)
jne
push
push
cmp
dec
aad
add
in
push
pushf
xor
sahf
in
mov
cmp
sbb
aaa
inc
(bad)
jmp
outs
jno
pop
jne
push
push
sbb
mov
and
pop
mov
ins
movs
cli
(bad)
jp
jp
nop
pop
mov
mov
and
push
xor
jp
pusha
push
sbb
jp
neg
sbb
enter
leave
dec
sbb
push
in
in
fidiv
xor
sub
pop
ss
xor
pop
js
sub
add
and
sbb
or
xor
arpl
jg
test
inc
(bad)
dec
pushf
sub
and
xor
arpl
shr
jp
pusha
inc
or
push
pop
sbb
xor
sub
fdiv
cs
mov
shr
add
xchg
iret
add
in
iret
mov
mov
fisubr
cwde
push
sbb
jmp
je
or
jmp
sbb
adc
sub
dec
bound
add
in
mov
jnp
jne
es
mov
shr
loopne
cs
xor
inc
imul
fisubr
sub
int3
or
sbb
mov
dec
pop
dec
pop
test
mov
cmp
push
ja
push
push
test
rcl
pusha
push
dec
das
xor
std
mov
hlt
dec
push
pop
imul
mov
test
stos
jp
sub
je
leave
jp
scas
scas
lods
mov
cmp
xchg
addr16
js
or
sbb
jp
xor
js
inc
ret
pop
jl
shl
icebp
or
addr16
jo
push
cmp
nop
pop
push
adc
push
cld
cwde
pop
adc
mov
cmp
ds
das
or
inc
sbb
rcl
jmp
or
cmc
js
stos
in
fimul
sahf
test
xor
lock
sub
pop
adc
je
xor
je
pusha
jl
push
pop
imul
cmp
stos
adc
or
pop
ins
adc
fsub
jnp
ret
pop
test
mov
pop
int
ds
jl
jmp
inc
mov
mov
mov
(bad)
enter
pusha
mov
inc
push
jo
dec
jl
jnp
mov
ins
or
cmp
push
and
sub
sbb
int3
mov
mov
jae
dec
jge
jae
es
in
cmp
mov
jne
and
inc
push
dec
inc
pop
mov
test
sub
jne
inc
fist
sub
add
mov
jbe
leave
sub
ins
mov
pop
jo
mov
inc
push
push
mov
loop
pop
inc
jne
inc
test
or
cld
mov
xor
sub
cdq
jp
pop
not
cmps
movs
mov
xchg
lods
test
mov
jl
pushw
ins
jno
hlt
adc
in
imul
(bad)
rcl
cld
ret
loopne
and
pop
inc
sub
clc
sbb
int3
je
ins
or
sub
jo
and
and
gs
cmp
push
sbb
push
add
push
jns
arpl
clc
push
je
xchg
or
(bad)
fdivr
push
jns
ds
fsubr
bound
in
cmp
dec
push
int
clc
cmp
jmp
test
mov
mov
mov
scas
pop
test
pop
dec
xchg
xchg
in
clc
das
mov
pusha
xchg
pop
push
and
inc
jl
and
sub
imul
jge
push
in
gs
fmul
mov
push
pop
xor
jns
sbb
enter
cmc
xor
inc
jg
cwde
push
jge
adc
stc
sbb
nop
cmp
test
pusha
rcr
cmp
add
and
cdq
ret
adc
mov
cld
pop
or
pop
xor
xor
je
sbb
cld
ins
push
jns
mov
dec
push
repnz
pop
or
mov
pop
jl
mov
(bad)
dec
mov
clc
xchg
pop
push
xor
xor
pop
mov
jno
enter
call
jl
ins
nop
fsubr
aam
push
aam
fdiv
jb
add
jle
xor
xor
sub
nop
sub
adc
fld
inc
push
loopne
jne
enter
arpl
sar
lds
dec
adc
cwde
dec
dec
retf
adc
mov
test
xor
sub
fdiv
inc
fidivr
jp
in
dec
sahf
cmp
iret
retf
add
test
shl
and
loop
pop
aad
jns
adc
cmp
mov
cld
cwde
fcom
iret
aad
fs
mov
shr
addr16
or
loopne
js
push
hlt
retf
or
cwde
imul
dec
loopne
cmp
jo
movs
xor
jmp
cmp
sub
cmp
fdivr
ins
dec
push
add
cbw
cmps
sbb
shl
les
jl
in
mov
xor
outs
xchg
push
xor
push
imul
inc
xlat
dec
lods
aaa
in
ss
mov
js
dec
aas
add
(bad)
sub
cmc
out
or
pop
mov
imul
lods
mov
popf
xchg
cdq
stos
inc
cmp
inc
ss
pushf
push
push
lods
in
jmp
xchg
int3
out
js
xchg
mov
mov
nop
mov
or
es
and
mov
shl
ds
addr16
inc
ss
xor
rol
jmp
sub
mov
js
sub
fbstp
mov
dec
pop
jle
test
mov
fs
pop
int3
and
fsubr
sub
pop
ds
repnz
mov
clc
or
std
or
loopne
dec
cmp
in
(bad)
int3
jp
dec
mov
pop
je
xchg
ins
inc
pop
add
mov
and
or
xor
sbb
retf
leave
int
imul
fsubr
sbb
sub
push
rol
pop
pop
mov
cwde
call
inc
push
arpl
cs
int
sub
xor
sub
int3
(bad)
adc
or
and
out
jns
sbb
ja
dec
pusha
push
add
std
je
arpl
lock
rol
aaa
and
fs
push
xchg
outs
movs
clc
push
ja
(bad)
das
cwde
adc
call
jl
mov
ins
mov
dec
xchg
mov
out
mov
pop
movs
loopne
add
add
push
lods
cmc
pop
and
jl
shr
jo
pushw
push
ds
and
sti
lods
and
sub
sbb
ins
ins
bound
data16
mov
jbe
xchg
jns
outs
or
je
aam
int3
inc
lahf
fsub
inc
js
imul
das
hlt
test
adc
adc
das
shl
mov
cs
test
xor
mov
fmul
cs
clc
inc
push
xor
gs
test
sub
test
push
jmp
cmp
cmps
cmp
cmc
js
jae
sub
test
dec
lea
nop
ins
jl
lods
das
mov
mov
rol
cli
and
shl
inc
sbb
mov
or
jmp
in
jo
sub
clc
push
push
add
loopne
fiadd
aam
jo
imul
in
cmc
mov
cld
jge
cmps
jmp
ins
ror
jg
push
pmaxub
adc
scas
or
ins
jmp
xor
dec
in
sub
call
push
das
and
and
mov
je
lock
sbb
adc
xor
add
push
repz
jne
mov
mov
aaa
mov
fsubr
mov
jb
sub
or
xor
mov
push
ins
push
and
sbb
ret
fs
in
popaw
bound
mov
mov
lods
imul
inc
push
aas
sbb
fdiv
pop
ds
out
push
je
push
hlt
and
push
and
cmc
je
scas
movs
and
jbe
jl
jp
ds
xor
bnd
add
adc
pusha
ins
sbb
fistp
das
test
cmp
imul
in
rcl
daa
mov
in
or
add
pop
cmp
fs
dec
js
add
mov
jl
and
les
and
dec
xor
mov
and
push
sbb
int3
or
mov
dec
push
add
push
sub
mov
xor
arpl
or
mov
mov
push
cli
loopne
(bad)
xor
cmp
jl
shl
out
and
xchg
xchg
rcr
inc
(bad)
jecxz
push
sub
sbb
enter
adc
repnz
sub
int3
xor
cmp
dec
push
and
shr
and
push
inc
mov
mov
cmp
sub
add
out
push
mov
stos
pop
mov
jl
push
and
cmp
sub
aaa
xor
iret
lods
test
add
and
sub
nop
ins
cmp
cmp
aam
mov
cmp
inc
fdiv
into
jmp
cmp
sbb
popf
dec
xchg
sbb
pop
nop
push
sahf
mov
pushf
out
movs
lahf
pop
pop
mov
and
jo
loopne
gs
push
adc
pop
pop
dec
fs
mov
sti
mov
je
hlt
jb
dec
cwde
jae
imul
pop
pop
int
imul
pop
dec
jnp
push
ds
jp
mov
dec
sbb
adc
sub
pushf
adc
xor
cwde
dec
dec
sbb
cmp
xor
dec
cmp
ds
in
jp
ins
daa
or
or
ins
mov
xchg
test
xchg
inc
mov
fidivr
stos
loopne
jbe
xchg
inc
sub
ins
imul
sbb
sbb
aas
mov
jne
xor
clc
cmp
ds
cmc
jb
gs
mov
mov
(bad)
add
push
test
push
cmp
jge
mov
sub
sbb
add
(bad)
cmp
aam
movs
leave
cmp
xor
pop
inc
jp
push
and
in
inc
popf
jl
fstp
mov
xor
jne
imul
xor
sub
or
movs
add
jb
jo
in
xchg
div
cs
xor
cs
adc
fsubr
cmp
add
ins
leave
dec
mov
push
push
dec
pop
std
add
das
sti
fdiv
adc
stc
sbb
adc
gs
cmp
cmp
inc
push
fld
adc
and
jnp
cmp
ss
adc
and
cli
call
and
dec
(bad)
add
xchg
and
rcr
out
enter
pop
mov
push
pusha
fistp
push
js
mov
loop
xchg
pop
pop
and
repz
push
and
and
popa
push
mov
jmp
xor
fdivr
cmp
std
push
inc
ror
(bad)
jmp
sub
jnp
xor
ins
loop
dec
cs
cmc
lds
xor
jbe
inc
enter
and
dec
loope
jae
cld
mov
xor
push
and
or
push
fldcw
push
inc
mov
retf
aaa
push
js
mov
push
pop
jmp
mov
(bad)
xor
rol
ja
push
xor
sbb
dec
stos
mov
jp
and
push
int3
mov
js
cmp
fiadd
lock
pop
xlat
ficomp
inc
push
data16
inc
jnp
inc
dec
in
call
sbb
mov
loopne
push
into
test
arpl
push
jne
sub
dec
(bad)
jo
sub
or
call
xor
mov
outs
ret
js
js
jl
xchg
test
pop
jp
clc
stos
iret
or
xlat
cmc
lods
sub
les
pop
mov
pop
mov
jne
sub
mov
je
in
and
xchg
pop
pop
aas
dec
push
dec
fs
loop
sub
loopne
sub
addr16
mov
int
add
stos
rcr
ss
push
enter
mov
dec
mov
push
adc
pusha
add
or
jecxz
shr
push
inc
add
ds
mov
pop
hlt
jne
outs
test
jo
adc
fmul
push
inc
push
repz
jbe
daa
cmp
shl
nop
jns
fsub
popf
mov
fwait
pop
add
js
movs
sbb
cmc
movs
and
test
aas
jbe
nop
enter
stos
aaa
js
push
sub
sbb
jmp
adc
push
push
sbb
repnz
(bad)
fcmovnbe
cmp
cmc
push
(bad)
f2xm1
xchg
nop
xor
jmp
xchg
fdiv
mov
fcom
aad
xor
cmp
cmp
das
sahf
and
cmp
sub
cwde
inc
jnp
sub
add
mov
jbe
rcr
es
scas
js
sar
mov
mov
add
rcl
and
add
mov
push
xchg
lock
or
aas
add
pop
add
div
ret
and
test
pushf
mov
and
mov
pop
fsub
aad
out
cmp
mov
xchg
shr
pop
ins
inc
cmc
bound
xor
pop
icebp
shl
jne
or
sub
pop
xor
je
into
out
mov
jp
mov
cdq
adc
xchg
xor
inc
push
aad
xor
cmp
and
(bad)
rcr
ins
addr16
into
jb
test
xchg
ror
enter
test
xchg
dec
in
xchg
das
(bad)
or
xchg
fs
mov
jl
mov
test
fwait
mov
es
xchg
mov
push
and
stos
movs
pop
in
pop
out
cmp
dec
dec
shl
cmp
or
mov
xlat
enter
push
inc
pop
cwde
loope
push
sub
cmp
push
in
push
test
in
mov
pop
inc
fadd
orps
or
push
cmp
lahf
cwde
in
pop
test
popf
imul
cmp
xchg
in
ja
mov
dec
xchg
retf
adc
cmps
jae
sub
in
test
dec
shl
xchg
dec
xor
cmps
popf
lock
mov
test
mov
or
push
dec
jg
call
push
in
and
xchg
mov
pusha
or
jmp
scas
xor
mov
enter
cwde
or
jo
or
pop
(bad)
js
arpl
dec
std
xchg
sar
movs
xchg
adc
nop
xor
mov
movs
xchg
or
mov
movs
ret
mov
test
cwde
call
push
cmps
jp
adc
xchg
fld
test
jl
pushf
jo
add
js
mov
cmp
sbb
and
jbe
xchg
xchg
and
in
cwde
movs
mov
aaa
pop
aad
and
adc
push
jmp
jge
add
ins
rol
cmps
jp
xor
jl
clc
or
sar
pop
sbb
jg
je
push
adc
sub
jmp
push
jl
nop
lea
xor
mov
cwde
mov
cld
mov
dec
xchg
shl
imul
adc
dec
add
or
out
xchg
push
jl
cwde
sbb
test
fs
sahf
or
cmps
shld
dec
mov
mov
fsubr
sub
test
or
xor
sub
push
ja
cmp
stc
dec
pop
jne
test
mov
pop
outs
cmps
xor
jne
sub
push
jmp
in
mov
xchg
mov
mov
mov
iret
dec
es
jmp
loop
mov
push
(bad)
push
adc
mov
mov
loop
push
mov
xor
xchg
lods
sbb
movs
jne
mov
mov
test
jnp
(bad)
mov
xor
xor
ds
dec
push
and
shl
mov
je
push
jne
mov
fidiv
nop
sub
or
dec
loopne
sbb
fs
inc
cmp
imul
stc
call
in
cmp
xchg
test
mov
and
adc
mov
lahf
(bad)
jns
movs
cmp
mov
jp
ror
ret
call
adc
loop
aas
xchg
fwait
xor
ds
xchg
pop
mov
ret
cmp
dec
inc
xchg
cmp
sbb
inc
stos
cmp
arpl
jne
in
enter
mov
ret
xchg
stc
push
cld
jl
imul
movs
mov
stc
xchg
adc
int
push
popf
test
sbb
jns
imul
jl
test
nop
pushf
jns
inc
out
mov
loop
test
(bad)
imul
pop
std
fsub
add
pop
pop
fdivr
je
inc
add
pop
add
pop
shl
test
cwde
(bad)
mov
jl
xchg
xchg
movs
add
les
call
push
retf
sub
or
test
mov
ss
rol
xor
scas
cmps
lahf
mov
test
outs
xor
cmps
popf
sbb
mov
mov
dec
mov
mov
test
fadd
cli
xchg
jp
add
jb
lods
and
cwde
fld
or
and
int3
in
jge
sub
ins
add
jae
jns
jns
ret
jp
cmp
iret
and
mov
enter
mov
imul
xchg
(bad)
clc
cwde
nop
stos
je
xchg
mov
std
pop
rol
dec
jl
cmc
test
or
mov
mov
pop
test
(bad)
sbb
sbb
mov
xchg
push
mov
movs
push
pop
mov
jl
mov
cwde
pop
popf
out
mov
and
xor
mul
jb
jo
fnstcw
sub
ja
pushw
in
pop
push
dec
ins
pop
cmp
sbb
mov
test
test
push
jl
je
dec
jo
fcom
xor
cdq
jmp
fsubr
loopne
jns
out
jne
loop
je
mov
adc
inc
call
mov
cmp
cdq
mov
mov
xchg
mov
and
pop
test
lods
mov
fcomp
into
cwde
jb
shr
mov
hlt
mov
iret
retf
js
mov
adc
or
aad
jbe
fwait
mov
dec
cmps
call
jne
(bad)
lods
mov
ud2
int3
push
pop
adc
jne
and
addr16
sub
popa
fsub
ins
jp
pusha
imul
push
es
js
pop
cmp
je
js
test
pusha
or
ja
adc
stos
jo
xor
push
jb
jb
ja
jo
je
outs
xor
js
xor
rcl
adc
mov
leave
shl
xchg
xchg
xor
je
cdq
push
test
adc
mov
(bad)
mov
add
je
cmp
movs
dec
(bad)
sub
pushf
xchg
jp
cwde
xchg
cmp
stos
mov
dec
out
xchg
popf
(bad)
push
js
or
mov
dec
dec
sbb
imul
mov
mov
mov
loope
and
sub
enter
je
or
and
xor
mov
sub
aaa
push
imul
jns
cld
jns
jo
js
jno
std
and
jge
out
mov
mov
test
and
stos
lea
add
lods
xor
dec
add
xor
lahf
mov
lahf
call
mov
mov
cdq
fild
hlt
mov
push
int
pop
fxtract
nop
fcomp
push
mov
mov
mov
les
imul
mov
jmp
jno
stos
mov
pop
mov
jae
pop
or
jae
scas
and
sbb
pop
pop
ss
aaa
cmps
call
fst
or
aam
push
and
push
or
repnz
cwde
adc
jnp
and
push
nop
pop
pop
lea
ins
jns
mov
jo
lods
and
(bad)
lahf
sbb
adc
jne
int3
pop
hlt
xlat
jg
test
ds
and
cmp
xchg
int3
test
mov
jge
ret
stos
mov
enter
js
mov
jbe
popf
mov
clc
and
pop
xor
xor
cmc
fdivr
test
pushf
test
pop
les
movs
daa
sbb
adc
or
cli
neg
fs
ins
adc
mov
imul
dec
xor
lock
xor
dec
inc
jle
push
jbe
sbb
mov
jo
repnz
(bad)
mov
sub
mov
bound
test
rcr
jp
mov
test
jmp
aad
pop
dec
xlat
pop
lods
lock
jbe
outs
jecxz
sbb
(bad)
ds
pop
fs
lock
addr16
outs
gs
mov
int3
clc
dec
dec
inc
ins
dec
inc
and
or
movs
(bad)
or
or
mov
xlat
int3
xor
pop
mov
jle
pop
xchg
test
pop
xchg
xchg
ins
mov
fdivr
push
test
bound
fsub
push
les
xor
push
cmp
gs
loopne
push
outs
icebp
nop
push
mov
jae
push
mov
jp
fdiv
cld
test
aad
in
push
xor
dec
dec
mov
and
lock
jno
jae
and
inc
icebp
aam
mov
sbb
sub
push
or
add
add
sbb
mov
int
aaa
sbb
pop
push
std
mov
sub
jo
push
push
adc
cld
xor
std
mov
clc
push
sbb
adc
mov
cwde
data16
jp
mov
sub
sbb
call
lods
mov
mov
mov
scas
je
scas
jmp
pop
adc
inc
das
test
out
inc
xchg
pop
cli
and
sbb
cmp
xor
cmp
in
push
ret
jbe
pop
imul
test
std
jp
shl
(bad)
mov
(bad)
push
cmp
je
out
pushf
push
jno
jb
outs
mov
imul
pop
hlt
lock
cli
sub
cmp
push
sbb
sbb
out
add
jb
ins
test
mov
sub
and
popf
fdiv
or
imul
lock
add
push
(bad)
push
xor
jne
sub
call
scas
sar
pushf
repnz
jecxz
test
xor
mov
add
test
ja
mov
ja
mov
mov
mov
mov
dec
fs
movs
push
adc
repz
aam
jmp
nop
pusha
adc
cli
test
pushf
in
cmp
in
dec
push
pop
sub
and
push
jo
jbe
fs
xchg
push
jp
mov
jo
je
es
cdq
jne
pushf
cmp
mov
clc
sbb
jnp
rcr
in
push
adc
sub
rcl
fdivr
cmp
in
or
hlt
dec
pop
dec
ret
movs
mov
nop
push
push
mov
pop
or
jge
sbb
cmp
movsx
pop
xor
jp
inc
xchg
dec
add
sub
shr
stos
jmp
(bad)
mov
mov
xor
mov
mov
mov
aam
xor
adc
loopne
pushf
pop
dec
cmp
jne
aaa
js
adc
add
movs
pop
add
add
and
in
jae
jb
shr
sbb
aam
test
push
dec
int3
pop
das
sub
jbe
addr16
push
inc
jne
ins
sub
stos
ins
(bad)
fwait
jp
aas
jle
sbb
cmps
pop
inc
imul
or
in
sub
data16
js
dec
dec
mov
pop
pop
fsub
div
cld
imul
adc
inc
dec
lock
adc
hlt
out
jg
and
add
xor
imul
nop
adc
adc
fwait
sbb
xchg
and
jle
pop
nop
ins
cld
add
push
clc
movs
pop
jmp
mov
shl
js
out
jne
mov
xchg
out
imul
ins
sub
imul
sbb
cmp
pop
fiadd
cmp
wbinvd
add
clc
cmp
add
sbb
mov
sbb
push
fxch
outs
jns
pusha
cmp
lea
sub
rcr
adc
je
jno
(bad)
push
mov
pop
sbb
outs
xor
js
imul
sub
addr16
dec
fdiv
xchg
fld
pushf
pop
push
shl
jne
push
cli
sub
inc
sbb
aam
nop
push
arpl
xor
push
mov
das
dec
in
adc
dec
(bad)
ror
push
int3
int3
les
push
in
dec
stos
mov
mov
in
js
fbstp
out
mov
nop
in
test
(bad)
call
fimul
loop
out
xchg
loopne
jns
add
mov
scas
xchg
test
pusha
ins
sub
adc
jge
xor
(bad)
imul
xor
pushf
add
xor
jne
sbb
push
popa
(bad)
lock
jne
fcomp
int
dec
cmp
mov
sbb
aam
ja
ins
sar
arpl
push
addr16
and
cmp
push
mov
jae
arpl
push
js
mov
fnstcw
gs
mov
pop
pop
(bad)
jo
mov
fdiv
dec
jp
adc
xor
shl
and
cmc
aad
js
in
adc
xor
shr
mov
(bad)
mov
jns
sbb
ror
lock
add
add
pop
imul
aad
fmul
push
sub
cs
or
cmps
sub
clc
lds
cwde
jle
cwde
pop
xchg
movs
movs
mov
sbb
push
jns
sub
jns
sbb
out
and
mov
cmps
or
push
fs
inc
dec
mov
in
dec
dec
push
nop
fs
or
jae
enter
pop
and
je
popa
push
and
in
into
mov
pop
arpl
dec
fsubr
mov
ins
fwait
inc
fcmove
xor
sbb
dec
mov
scas
push
cmp
pop
dec
outs
jae
push
fs
or
fwait
cmp
mov
aam
adc
dec
pop
std
jae
mov
les
(bad)
inc
jo
xor
cmp
cmps
xor
xor
in
push
clc
cmc
lock
jmp
into
stos
mov
(bad)
iret
in
dec
jmp
movs
loopne
mov
mov
pushf
cwde
xchg
das
mov
cmp
mov
and
inc
cmps
lock
add
adc
adc
lock
inc
js
push
xchg
std
int3
ins
sbb
inc
sub
int3
sub
or
xor
fwait
jl
push
js
outs
outs
hlt
jl
cld
push
(bad)
lods
data16
pop
out
jge
dec
stos
pushf
pop
call
pushw
aad
call
retf
cmp
jl
push
fdivr
and
xchg
pushf
call
loopne
je
jne
ins
cmp
pop
arpl
mov
dec
adc
adc
adc
ins
pop
push
push
add
jmp
xchg
xchg
int3
les
pusha
mov
mov
je
cdq
jecxz
popf
(bad)
xor
mov
adc
xchg
xchg
jne
xchg
xor
in
cwde
nop
mov
ror
iret
push
cli
sub
jg
mov
nop
or
cmc
and
push
repz
pop
pusha
push
fchs
loopne
mov
es
and
mov
jno
rcl
retf
fidiv
(bad)
jmp
inc
inc
dec
sub
adc
mov
cld
js
push
mov
lods
mov
mov
and
cmp
imul
jl
jo
push
xchg
inc
xor
jne
push
or
add
in
dec
push
or
sbb
mov
je
pop
jb
je
xchg
xchg
in
cdq
sub
popf
and
mov
ins
nop
fwait
mov
xchg
pop
test
xchg
sbb
aas
pop
cwde
xor
mov
push
xor
test
sbb
stos
pushf
cli
adc
mov
sbb
and
cli
push
adc
cmps
adc
data16
and
push
jns
inc
inc
mov
jl
sbb
jo
aam
je
fsubr
mov
gs
add
push
das
xchg
ds
and
pop
pop
sbb
fs
push
push
in
(bad)
mov
sub
mov
pop
jo
ja
push
push
push
cmc
test
add
sbb
lock
mov
out
mov
xchg
test
mov
xchg
sub
es
mov
mov
pushf
ins
jns
xchg
pushf
push
lahf
cmp
sahf
nop
mov
jo
pop
push
pop
loope
xor
lea
push
adc
mov
int3
jl
rcr
push
lds
jne
add
sbb
stc
sar
fcomp
call
addr16
addr16
jb
sbb
stc
push
push
mov
sub
retf
jl
out
pop
and
push
pop
dec
or
pusha
fld
jl
and
inc
jb
ins
fs
mov
push
mov
xor
jbe
js
dec
repnz
adc
or
inc
sbb
pushf
fs
mov
lods
pusha
lea
jmp
adc
cmp
sub
sbb
push
pushf
mov
fcom
mov
fs
test
mov
xor
xchg
mov
std
push
xchg
cmp
stc
cmc
daa
mov
frstor
xchg
aas
adc
jb
pop
out
enter
imul
or
sbb
pop
jne
cld
jae
ret
iret
xor
fisttp
xor
pusha
cld
mov
sbb
(bad)
cmps
pushf
je
outs
sbb
ins
ins
sti
je
icebp
js
sub
ror
dec
pop
addr16
cmp
jo
leave
or
mov
jae
and
js
mov
mov
shl
mov
sub
mov
mov
sub
popf
cwde
inc
jae
cwde
mov
js
add
mov
adc
adc
mov
fs
mov
movs
pushf
mov
sar
add
cmp
out
in
in
cwde
addr16
adc
mov
or
push
push
push
add
jb
sub
imul
hlt
imul
cs
sub
add
(bad)
stc
js
js
or
mov
retf
push
pop
sub
(bad)
mov
ins
ret
ins
push
mov
mov
push
push
mov
push
push
mov
fs
xor
loopne
ins
es
clc
in
mov
inc
in
or
add
sbb
mov
pop
mov
mov
sub
mov
lea
fidivr
mov
cdq
jmp
nop
test
push
pushf
or
je
lahf
xor
je
dec
stos
lahf
push
js
(bad)
cmp
fnstenv
pusha
inc
mov
cmp
sar
adc
fwait
dec
test
xor
cmc
repnz
dec
lock
pop
out
pop
xor
sub
in
push
das
mov
imul
ins
int3
mov
and
xchg
fs
jae
jno
aam
mov
ja
lea
mov
pop
jo
inc
es
and
jmp
push
dec
or
je
adc
add
mov
sub
test
stc
scas
stos
cmps
jg
mov
push
hlt
js
and
jno
lea
xchg
stos
cwde
js
sbb
pusha
jo
push
dec
or
cmp
mov
popf
sahf
test
mov
jmp
or
xchg
and
cmp
dec
test
cld
jo
sub
mov
jns
imul
js
mov
inc
aad
mov
out
xchg
add
je
add
push
out
test
outs
mov
mov
lea
and
adc
lods
ins
outs
fild
inc
mov
add
and
lahf
push
push
mov
call
lods
ret
mov
mov
fs
mov
cwde
mov
mov
or
fwait
lea
add
nop
xchg
adc
in
push
mov
out
dec
cmps
mov
sub
push
inc
jne
loopne
mov
enter
fbld
(bad)
adc
adc
or
outs
sbb
ja
push
dec
fcomip
xor
push
jbe
sbb
sub
cmp
pop
fst
js
pop
xor
call
jecxz
pop
int
jae
mov
mov
mov
pop
jb
cmp
and
and
push
mov
and
outs
cmp
adc
mov
cld
daa
adc
sbb
cmp
scas
scas
add
dec
test
test
mov
fbstp
inc
mov
pop
jmp
jne
mov
mov
xchg
jae
in
and
pop
dec
test
push
jg
sbb
jg
les
pop
push
inc
test
stc
cld
aaa
cli
jl
out
fisttp
or
or
push
je
pusha
jne
dec
lods
inc
xor
mov
jno
aaa
mov
sbb
jmp
mov
js
into
pop
jne
jecxz
jl
fcom
test
pusha
push
xor
gs
or
(bad)
add
mov
pop
fwait
dec
hlt
jne
gs
cld
push
push
in
fcomp
hlt
std
or
dec
sar
data16
aam
loopne
mov
dec
jl
test
sub
mov
aas
outs
mov
adc
sahf
ror
mov
jl
mov
inc
loop
cwde
xor
jae
bound
and
movs
aad
cmp
sti
stc
idiv
pop
mov
test
jmp
cli
add
add
in
stc
inc
inc
ds
clc
push
clc
dec
jmp
lods
adc
and
cli
add
push
mov
cs
clc
mov
lea
jbe
jae
pushf
pop
push
in
jl
sbb
pusha
jae
push
pop
pushf
stos
pop
imul
dec
pop
sub
sbb
sbb
cmps
jmp
fisub
repz
fstp
xor
or
sbb
test
movs
cmps
lea
mov
test
ins
mov
lea
not
pushf
aas
sub
arpl
ror
pop
sbb
(bad)
xor
clc
dec
rcl
je
pop
pushf
adc
adc
pop
jl
inc
aas
inc
add
fcom
push
add
xor
jl
inc
cmp
call
fs
or
sbb
xor
gs
xor
jo
(bad)
ins
dec
outs
mov
(bad)
jl
dec
pop
pushf
mov
clc
jmp
jmp
test
dec
fild
mov
mov
mov
imul
xor
je
popa
fdiv
push
idiv
in
jmp
addr16
outs
or
jbe
add
and
adc
leave
pop
(bad)
fsub
xor
jne
ror
mov
pusha
out
jo
sbb
xchg
ins
dec
in
fwait
jnp
sbb
daa
cmp
pusha
inc
inc
sbb
xchg
xchg
mov
add
sub
and
js
fcom
mov
inc
cmp
loopne
or
jne
push
cmc
sbb
addr16
mov
jl
fcomp
fstp
mov
jae
stc
int3
push
stc
je
cmp
shr
std
inc
xor
cmp
loope
fs
push
in
or
or
push
jl
fisubr
ja
sbb
lea
clc
xor
mov
mov
mov
movs
cmp
pop
lods
mov
add
mov
fs
(bad)
clc
inc
(bad)
mov
cmp
cmp
pusha
pushf
daa
and
push
js
sub
xor
in
lods
std
cld
inc
cli
loopne
cmp
sbb
or
or
push
dec
or
in
mov
mov
les
push
add
ds
jo
les
jo
xor
lds
cmc
jl
sub
cmp
push
pop
lock
arpl
jne
jns
inc
inc
fcom
cmp
xor
and
xor
les
pusha
and
pop
pop
jmp
in
or
pop
(bad)
je
gs
je
jns
or
jle
push
jae
(bad)
xlat
mov
lods
repz
in
push
les
(bad)
fdiv
jmp
xchg
xchg
adc
in
ror
test
xchg
(bad)
out
cmp
out
sbb
aam
xor
inc
mov
pushf
xchg
fbld
xchg
pop
rcr
and
xchg
and
add
add
inc
xor
jns
cld
adc
add
jl
dec
inc
cmp
sbb
in
imul
lods
sub
aas
xor
xchg
in
mov
test
mov
addr16
ins
sti
or
jne
data16
scas
loope
xor
in
cld
aas
pop
sbb
and
movs
aaa
popf
inc
fdivr
rol
push
and
popf
les
adc
adc
movups
sub
js
je
int
repz
fadd
out
mov
jo
lahf
test
xor
ins
das
jb
mov
pop
je
je
xchg
sbb
cmp
(bad)
das
xchg
mov
int
pop
clc
(bad)
in
push
loope
sbb
mov
sub
jmp
and
fadd
pop
sub
nop
pop
xor
jl
add
pop
js
ins
adc
out
fs
xor
adc
daa
in
les
sbb
and
cli
mov
mov
hlt
js
popa
arpl
les
ret
cld
and
pop
(bad)
in
pusha
loop
imul
int
jnp
pop
into
sbb
inc
dec
mov
cs
call
imul
push
cmp
in
js
int3
inc
push
add
or
leave
sbb
fs
sub
sub
out
int3
call
fwait
or
mov
movs
popf
sahf
xchg
inc
add
retf
mov
popf
push
ins
mov
nop
ins
xchg
lods
push
cmp
call
pcmpeqw
inc
and
jg
sub
push
test
xchg
cmp
cmp
push
cmps
hlt
test
adc
loopne
push
sti
lods
jne
jb
pop
xchg
lods
push
xchg
test
ins
mov
std
pushf
je
mov
in
sub
dec
pop
leave
fsubr
leave
nop
loopne
jae
mov
(bad)
std
test
js
test
mov
jo
jmp
test
pop
xchg
fwait
pop
push
fs
(bad)
retf
xor
loope
pop
inc
call
repz
adc
sti
cld
pop
test
mov
cld
aam
sbb
hlt
cmp
into
mov
enter
aam
mov
cmc
sub
std
sbb
pushf
in
jge
xor
push
in
dec
jl
pusha
xchg
ror
pop
ret
mov
cld
push
test
push
int
int
dec
fsub
es
sbb
mov
dec
or
test
mov
sub
jecxz
lods
cmc
ins
cmp
jge
das
mov
jae
leave
aam
lods
imul
pop
push
je
pusha
std
jl
popa
push
js
js
sar
jne
in
xchg
dec
pop
fidivr
vpcmpeqb
rcr
jo
sti
je
dec
inc
cld
sub
adc
mov
xor
cli
mov
inc
sbb
sbb
xor
push
cld
add
pushf
inc
mov
aaa
clc
or
push
push
popf
out
out
les
or
sub
(bad)
retf
cmp
sti
aam
icebp
jb
lahf
sub
lahf
push
mov
xchg
sbb
lea
ror
(bad)
push
lds
(bad)
lods
adc
or
das
mov
or
movs
int3
push
out
call
inc
dec
movs
pop
fs
aam
push
push
int3
push
sub
or
inc
inc
mov
addr16
int3
push
xor
addr16
push
in
jp
xor
dec
fsub
iret
jne
push
cmp
int3
js
xor
fsubr
fs
bound
dec
sub
cmp
dec
gs
mov
movs
adc
and
jmp
lods
ins
sti
pop
cld
mov
sub
jp
hlt
inc
scas
push
cmps
jo
pop
add
nop
imul
in
sbb
test
data16
test
and
mov
dec
jne
or
sbb
aad
cmc
cdq
movs
dec
js
test
xchg
lea
xchg
mov
or
pop
adc
xor
or
or
adc
pop
rcr
jl
mov
dec
xlat
aam
dec
into
jbe
mov
xor
test
std
sbb
push
jl
push
pop
enter
jge
dec
xor
push
popf
cwde
jge
dec
pop
pop
mov
jne
gs
aad
jbe
push
xchg
jmp
arpl
lahf
je
dec
pop
xor
imul
cmp
sbb
adc
or
inc
or
lea
fnstcw
fmul
je
paddq
adc
or
loopne
inc
pop
sbb
adc
xlat
xchg
sbb
and
rcr
shl
adc
pop
in
jl
mov
aam
inc
xchg
scas
imul
movs
adc
dec
sub
jl
pop
push
add
fimul
cmp
or
or
in
mov
jl
sar
nop
lods
mov
je
jae
push
xchg
jbe
das
int3
push
pop
pusha
mov
clc
cmp
jb
jp
mov
jmp
push
retf
pop
(bad)
jmp
lods
and
scas
xchg
daa
add
gs
fnstcw
popa
imul
dec
iret
xor
fstp
xor
and
jns
add
fstp
mov
dec
xchg
or
add
or
aaa
je
aad
test
xor
arpl
cmp
adc
mov
inc
add
xor
pusha
js
nop
lea
pusha
xchg
add
xor
cwde
adc
adc
or
ret
rcl
push
and
mov
pop
xor
mov
push
gs
sub
test
sub
scas
push
dec
ins
push
push
arpl
sbb
aaa
push
push
xchg
push
repz
popf
jl
(bad)
sti
and
dec
sbb
cld
push
pop
dec
dec
and
jl
pop
movs
cmp
cdq
stos
sar
rcr
popa
cmp
cmp
jl
psubusw
stc
cld
out
adc
mov
cld
jmp
push
pop
je
ror
cli
pop
or
add
ins
xchg
cmovl
fdivr
mov
sbb
mov
or
mov
ds
xchg
or
dec
call
jl
fiadd
add
push
arpl
sbb
sbb
inc
mov
jb
push
test
jae
xchg
ins
sbb
sbb
dec
push
mov
call
in
out
or
xchg
push
cmc
push
or
clc
push
pop
pop
fmul
adc
out
pop
mov
cmp
clc
ds
test
xor
and
dec
fs
nop
js
inc
js
cmp
cmp
stc
cmp
pop
fild
or
or
jae
adc
lea
dec
aam
or
or
jo
cmp
rcl
bound
sub
push
das
ins
xor
xor
mov
inc
into
(bad)
xchg
mov
jmp
dec
add
and
sbb
outs
pop
push
icebp
mov
repz
cmp
adc
nop
mov
cs
mov
xor
xor
jp
pop
pop
std
mov
pop
shl
pop
fnstsw
call
cld
(bad)
push
repnz
imul
mov
push
ja
push
cmps
mov
out
je
sbb
addr16
sbb
fcomp
push
xor
outs
push
dec
out
fbstp
xor
daa
jge
sub
jmp
in
aam
dec
sti
rcr
mov
jg
inc
cli
xchg
or
xor
jnp
and
push
xchg
mov
jbe
clts
pushf
cwde
add
inc
inc
pop
in
push
rcl
add
pop
xchg
jne
std
sbb
mov
into
sbb
push
inc
xor
jp
sbb
lock
cmp
cld
add
aaa
int
in
adc
add
sbb
je
jmp
push
icebp
std
rcr
enter
retf
push
sub
adc
cmp
fcom
call
mov
and
dec
mov
lods
jo
adc
mov
fcom
push
pop
mov
add
jae
jne
sub
shl
and
fsub
int3
or
inc
aam
mov
xor
or
in
ins
push
(bad)
sub
ret
adc
jl
jp
std
(bad)
ss
out
loopne
cmp
jnp
fcom
aam
mov
inc
jmp
xor
or
test
xor
je
or
cmp
adc
stc
adc
push
repnz
adc
fadd
mov
push
push
xchg
shl
mov
jl
push
push
fisubr
in
cmp
push
iret
movs
and
or
cmp
inc
int
jp
dec
add
ror
push
rcl
sub
stc
and
mov
aam
cmp
or
pop
sub
test
ds
jns
push
or
jo
adc
jp
fcomp
clc
mov
xchg
nop
xor
push
fnsave
dec
or
add
in
iret
xchg
xor
adc
sub
pusha
aam
and
cwde
imul
add
xchg
cmp
push
js
mov
call
mov
cmp
movs
and
fdiv
das
test
dec
xor
shr
int3
scas
fcmovb
add
pop
xor
shr
fist
lods
pusha
xor
js
pop
call
push
cmps
sbb
sub
push
push
mov
jl
mov
and
cmp
jno
fild
push
in
push
out
sub
dec
ins
adc
sbb
psubsw
ror
in
or
ds
cld
cmc
xchg
iret
retf
adc
cmp
mov
pop
shr
sti
idiv
inc
dec
fidiv
ds
inc
movs
out
cmovnp
add
mov
mov
test
pop
and
and
push
or
popf
jo
push
jae
hlt
push
cwde
or
pop
popa
jge
and
or
mov
mov
imul
push
jmp
push
shl
into
dec
js
loopne
repnz
and
stc
push
jecxz
dec
dec
je
xchg
cmps
mov
xor
push
jbe
push
dec
les
cs
fcomp
test
fs
fs
add
imul
adc
mov
call
push
mov
lds
retf
ret
ret
sbb
adc
push
add
test
sub
mov
push
sub
nop
xor
and
inc
sahf
fiadd
adc
or
or
cli
pop
mov
int
mov
js
inc
inc
cld
adc
sub
mov
clc
push
push
push
cli
int3
pop
mov
xchg
hlt
cmc
push
mov
adc
and
lods
mov
push
fsin
fsubr
inc
mov
xor
jo
iret
mov
aas
js
push
pop
stos
xchg
and
sbb
sub
aaa
mov
call
pusha
sbb
xchg
outs
push
xchg
push
jp
das
and
sub
sbb
fmul
leave
and
push
fiadd
add
lods
jmp
or
jecxz
cwde
call
loop
and
jbe
or
lea
adc
dec
push
dec
xor
mov
dec
push
loope
jne
js
pop
fisttp
xor
xchg
or
cld
test
and
retf
xor
xchg
icebp
inc
mov
mov
rol
ret
and
arpl
and
popa
push
mov
loopne
pop
scas
data16
pop
cmps
mov
jbe
pusha
les
dec
je
inc
xor
jns
mov
jl
push
in
fs
pop
inc
dec
jne
inc
mov
js
out
mov
push
inc
and
hlt
js
lds
(bad)
cli
mov
adc
in
add
cmp
jl
push
mul
jg
add
dec
jl
inc
push
adc
add
adc
aas
inc
std
jl
cmp
pop
xor
jb
jo
imul
ins
int3
fsub
pop
jp
outs
jb
xchg
sub
movs
jle
cs
or
dec
inc
in
das
pop
dec
sub
xor
ins
jo
dec
pusha
mov
or
push
(bad)
int3
pop
dec
arpl
ret
jo
mov
jp
jo
fstp
and
cwde
push
dec
aas
cmp
push
jmp
and
sbb
mov
adc
mov
loop
fidivr
scas
stos
test
mov
je
movs
inc
pop
fdivr
xchg
sub
push
xor
add
xor
jne
and
cmp
ds
fs
fcom
add
stos
mov
mov
int3
fs
xor
test
add
dec
ja
push
js
shl
xchg
jmp
out
cld
or
js
push
ret
push
push
push
call
push
mov
pop
fs
pop
(bad)
ins
imul
pop
or
push
gs
dec
pop
rcr
mov
and
imul
inc
adc
cld
pop
in
cmc
in
lock
adc
mov
lods
in
or
sbb
or
test
into
mov
add
cmp
lea
add
cwde
xchg
push
sbb
in
cmp
inc
push
sbb
movs
arpl
and
imul
jge
push
pop
mov
dec
or
adc
lds
out
hlt
dec
ja
jne
lea
js
es
scas
add
ins
cmps
dec
or
pop
sbb
jne
push
pop
retf
push
cld
adc
mov
xchg
pop
bound
pop
pop
imul
(bad)
lock
fbld
addr16
shl
adc
fcomp
out
push
adc
adc
or
pop
adc
std
pop
xor
out
inc
sbb
or
or
pop
dec
sti
je
jge
or
jnp
addr16
sti
inc
lock
jle
test
cmp
dec
or
pop
add
mov
fcomi
popf
pop
mov
mov
push
pop
ret
mov
je
mov
add
popa
sbb
inc
and
and
sbb
(bad)
pop
lea
xor
mov
pop
cwde
jae
push
jp
dec
popa
std
adc
ds
call
xor
push
and
pusha
imul
ins
cmp
cli
sbb
ss
js
and
jmp
push
(bad)
ins
cld
mov
adc
pop
inc
xchg
je
test
sub
nop
xlat
je
xor
pop
pop
adc
push
adc
add
in
fs
dec
mov
sbb
call
loop
push
into
test
gs
pop
dec
jne
pop
push
sbb
jmp
sbb
adc
push
(bad)
xor
xchg
push
test
loopne
js
mov
mov
inc
iret
or
out
loopne
retf
pop
fistp
jnp
ins
in
and
cmp
jns
rcr
dec
cmp
mov
imul
xor
pop
lahf
pushf
dec
pop
mov
fcomp
mov
int3
cmp
mov
retf
adc
scas
je
xor
and
or
loope
or
je
jecxz
push
fcomp
and
cmps
cwde
cmp
aas
jne
inc
dec
aad
test
add
pop
nop
mov
loop
cmp
mov
mov
imul
call
or
pushf
mov
pushf
mov
mov
loopne
jg
loope
mov
dec
popa
jmp
or
cwde
cld
jo
pop
mov
stc
and
jne
imul
je
fs
dec
fdivrp
js
pop
mov
lods
push
retf
mov
enter
int
les
fsub
lods
dec
es
sub
fmul
fcomp
(bad)
les
xchg
jns
inc
inc
jnp
dec
push
shl
lds
mov
test
outs
cwde
jmp
int3
push
jb
jno
or
bound
add
xchg
mov
stos
mov
je
mov
mov
movs
lods
jbe
dec
ror
xlat
out
push
outs
inc
je
push
push
and
push
call
test
jne
push
push
bound
retf
push
pop
lods
(bad)
int
pop
stos
call
push
mov
int
fcom
hlt
je
fdiv
xlat
js
dec
jmp
in
push
pop
(bad)
xor
fs
cmp
popa
xor
inc
dec
xor
dec
jo
stc
repz
lds
outs
es
sub
jmp
retf
pop
(bad)
push
and
shl
push
inc
sar
cmp
pop
(bad)
xchg
ins
nop
dec
xor
sub
jmp
pop
and
mov
pop
dec
pop
movs
inc
jne
lahf
shl
push
pop
mul
stos
and
dec
sbb
(bad)
pop
stos
lea
mov
mov
xor
sbb
mov
nop
inc
or
gs
popa
mov
mov
fmul
mov
push
sbb
aas
stos
test
arpl
push
test
xor
dec
adc
inc
pop
add
or
xchg
mov
sub
pop
and
loopne
and
push
popa
add
les
mov
or
call
aam
shl
test
push
mov
aam
int
jp
push
mov
dec
es
(bad)
jp
dec
adc
dec
push
sub
pushf
dec
push
mov
retf
addr16
cmp
and
enter
cwde
ins
ins
clc
pop
mov
js
sbb
sub
push
repnz
xchg
test
xor
jbe
js
push
icebp
fdivr
aad
lock
je
jne
nop
pop
xor
push
push
imul
out
into
sbb
cmp
jmp
data16
neg
cmp
sar
xor
pusha
loopne
dec
push
push
enter
push
fsubr
pop
std
js
pop
push
cli
shl
outs
sbb
sub
cmp
xor
xor
daa
dec
jo
push
(bad)
dec
jl
mov
add
mov
aad
push
dec
sub
jmp
sbb
inc
jmp
dec
xchg
cld
jmp
cmp
cmp
mov
cmp
pop
loopne
aaa
out
adc
push
or
pop
hlt
or
push
in
adc
je
sbb
sub
cmp
sub
jge
cmps
retf
add
mov
(bad)
mov
sub
lods
into
mov
shl
call
jo
adc
add
cs
in
(bad)
js
sub
inc
push
out
fisub
and
inc
fdivr
add
bound
push
imul
pop
popa
jo
pop
fs
ds
mov
fild
das
outs
xchg
lods
push
ins
loopne
fs
dec
jo
xchg
gs
inc
push
or
(bad)
sbb
std
dec
pop
mov
fwait
outs
cmp
jbe
xchg
inc
jo
(bad)
ins
cmps
xchg
scas
clc
test
jl
mov
mov
jl
je
cld
fsubr
ds
inc
push
cmp
sti
inc
push
dec
pushf
dec
pop
pop
scas
ins
push
div
inc
dec
pop
dec
pop
pop
ja
dec
inc
mov
and
add
outs
sub
cmp
div
add
and
xor
xchg
adc
cwde
leave
je
retf
sub
lds
mov
push
jae
stos
inc
inc
add
sub
sub
js
push
dec
test
ds
dec
push
cmp
jo
dec
pop
inc
push
jmp
xor
sub
mov
ss
lea
adc
inc
sbb
jae
sti
test
cmp
and
dec
xor
xchg
add
dec
test
or
ins
dec
push
push
test
ds
outs
dec
pop
push
fsubrp
pop
push
stc
inc
dec
ja
dec
pop
sti
das
cmp
inc
sub
pushf
push
add
xor
mov
and
add
dec
out
xor
cmc
add
mov
pop
jp
les
(bad)
jne
daa
loope
push
jl
xchg
js
ins
aam
inc
(bad)
lock
test
xchg
jae
jne
ins
js
iret
mov
push
push
and
pop
dec
push
ss
jne
xor
aaa
(bad)
jne
add
js
xor
fiadd
loope
or
cdq
movs
dec
nop
enter
cdq
dec
fs
test
ja
dec
out
fsubr
mov
iret
jnp
(bad)
retf
rcl
pop
je
(bad)
pop
fst
ja
hlt
sti
mov
aad
inc
out
xchg
in
and
pusha
dec
es
outs
push
or
xor
sbb
jae
outs
jmp
mov
nop
mov
jl
fadd
mov
mov
ficom
(bad)
cmp
cdq
xchg
push
xchg
dec
push
mov
ja
mov
dec
cwde
xchg
xor
push
push
dec
inc
scas
xchg
xlat
into
mov
les
xor
or
aad
sub
cmps
popf
push
nop
hlt
loopne
jns
or
pop
xor
push
ins
loop
pop
sub
jae
xchg
ja
mov
lock
push
mov
jg
dec
(bad)
xor
sub
cld
xchg
cmps
pushf
mov
push
cli
lock
inc
mov
xor
popf
jne
mov
stos
lods
jns
ins
adc
cwde
sub
loopne
or
jns
mov
cmp
repz
cli
int3
push
call
or
int3
aam
pop
mov
xchg
pop
pop
iret
mov
mov
xchg
mov
aad
rcl
ds
mov
mov
pop
out
jp
jbe
js
jnp
jmp
jmp
out
fdiv
or
or
sbb
iret
xchg
sbb
pop
rcl
iret
mov
lods
call
fs
jb
call
xchg
pop
lahf
mov
pusha
fcom
int
fs
in
jns
pop
push
ret
mov
in
sbb
dec
mov
nop
pop
popa
not
jmp
loop
retf
stos
rcr
or
js
jmp
cdq
xchg
push
daa
loop
add
push
push
nop
test
mov
sbb
dec
in
cmp
fdiv
lock
lea
mov
rcr
cld
push
add
jne
pop
popa
retf
dec
dec
mov
adc
lea
sub
pop
jp
pop
inc
test
je
sbb
sbb
add
mov
sbb
push
and
or
sub
mov
ret
dec
mov
mov
xchg
rcr
xchg
xor
pop
mov
cmp
push
dec
mov
dec
outs
lods
dec
push
inc
add
jl
les
mov
mov
or
out
mov
and
pop
test
je
lea
jl
ror
inc
jp
cld
in
pusha
push
push
nop
lea
mov
cwde
mov
adc
jo
pushf
pop
push
sub
mov
loop
fcomp
pop
sbb
rep
hlt
icebp
pop
ja
xor
mov
fs
add
jno
imul
test
pop
sar
mov
jp
and
and
test
loopne
dec
nop
lahf
xor
iret
daa
dec
adc
fdivr
dec
jp
leave
inc
adc
xor
dec
mov
mov
mov
and
fmul
aam
push
pop
push
pusha
js
push
js
and
sbb
je
loopne
jp
int
jg
sub
pop
add
sub
jns
cmp
xor
adc
dec
push
mov
in
push
xor
lea
or
xchg
loopne
loopne
mov
ins
loop
jp
or
jp
inc
cmp
mov
out
lahf
cwde
pop
pop
sub
sbb
ins
arpl
push
jae
enter
mov
or
add
xchg
xchg
or
pop
lods
mov
pushf
pop
movs
sahf
lea
cmc
idiv
mov
nop
fdivr
xor
std
je
sbb
and
sub
sti
add
and
dec
push
js
xor
popf
lahf
stc
retf
mov
mov
ins
adc
adc
hlt
(bad)
jne
mov
mov
and
out
ins
pop
jp
inc
push
dec
cmps
popf
mov
inc
int3
sub
test
mov
pushf
xchg
mov
fs
fistp
test
sbb
add
dec
pop
nop
jb
inc
or
jmp
push
adc
inc
js
js
gs
push
add
and
in
jle
and
adc
mov
nop
pop
push
add
aam
test
mov
mov
jb
or
bound
outs
outs
imul
push
pop
push
not
push
sub
js
mov
cdq
mov
mov
ret
fld
dec
ret
jae
cli
or
hlt
int3
(bad)
cmp
rcr
xor
add
call
adc
cmp
je
je
jl
dec
fiadd
enter
add
lods
cmp
dec
jl
jp
aad
and
lock
mov
jns
lods
lods
std
movs
ret
inc
dec
and
add
std
popa
dec
push
shl
jp
inc
dec
inc
cmp
push
pop
mov
or
dec
cmps
mov
(bad)
sub
std
push
push
sbb
or
shr
inc
inc
inc
dec
rol
mov
pusha
jae
sbb
add
ja
mov
jns
jge
jl
lahf
int3
sub
and
push
ss
jo
pop
sbb
pop
cmc
test
cmp
mov
shl
or
jae
mov
xchg
je
(bad)
loopne
scas
cmp
cmp
mov
outs
adc
pop
jl
dec
xchg
cmp
pop
pop
or
movs
adc
and
or
jp
sub
jne
bnd
ins
daa
add
and
hlt
leave
bound
fisubr
addr16
je
out
cld
cmp
and
xlat
test
jb
mov
mov
sbb
and
aaa
sbb
sub
nop
adc
mov
mov
mov
call
jae
fwait
std
dec
mov
mov
shr
cmp
dec
loopne
in
je
inc
cmp
or
or
jne
rol
jae
lahf
jno
add
add
cmp
in
jnp
push
jp
test
sbb
add
sbb
fst
adc
xchg
aad
aaa
mov
dec
jl
es
js
jo
push
push
dec
mov
cmp
test
ret
aas
sub
call
ror
push
cs
ins
jb
pop
push
int3
adc
pop
dec
or
add
push
test
mov
arpl
push
nop
jle
lods
push
mov
lahf
xchg
xchg
iret
into
cmp
div
in
loopne
ins
cmp
jnp
js
inc
cmc
in
imul
in
in
pop
bound
arpl
sub
jns
and
wbinvd
les
inc
adc
push
movs
bound
pop
adc
xor
push
jl
jg
sub
je
pop
call
sub
pushf
pusha
add
adc
ins
inc
pop
fdiv
sbb
pop
xor
daa
cdq
inc
jl
jno
pusha
sti
test
das
pushf
ror
rcl
or
dec
test
jmp
and
push
enter
jbe
jo
lea
xchg
in
shr
fmul
jg
inc
fstp
pop
icebp
lods
mov
lock
stc
cmp
xor
push
pop
loope
(bad)
js
cmps
xchg
std
cld
cmp
repz
jns
sbb
xor
dec
lea
sbb
js
sar
fsubr
jl
jg
sbb
pop
clc
movs
jmp
add
push
sub
js
push
inc
cmp
pop
test
push
adc
ja
pop
scas
sbb
int
jl
cwde
xchg
mov
pop
fisttp
mov
imul
std
lea
xchg
xchg
test
adc
xchg
pop
push
test
test
pop
xchg
adc
jecxz
leave
xchg
loopne
lds
or
sbb
sti
mov
call
jecxz
and
in
mov
lds
xor
dec
ins
mov
in
push
sbb
shr
mov
sbb
jl
pop
stos
andps
pop
mov
pop
fs
xor
cmps
in
fadd
dec
and
sub
and
jae
cmp
js
adc
ins
test
sar
in
lds
fcomp
dec
cmps
mov
cdq
mov
cwde
xchg
fcomp
je
xchg
xchg
pop
scas
stos
xchg
ja
stc
(bad)
jo
ror
test
cmp
mov
mov
mov
jo
lods
xor
ds
loop
push
cli
jnp
les
test
(bad)
mov
jl
out
ins
mov
js
sbb
bound
arpl
push
mov
sbb
xchg
sub
repnz
pushf
pop
mov
test
pushf
pop
xchg
mov
mov
in
addr16
xchg
clc
push
ja
shl
xchg
clc
jl
stos
pop
mov
xchg
ins
test
lahf
pop
jl
ffreep
sti
ror
mov
out
ret
xchg
or
fadd
adc
push
mov
cld
mov
cmp
mov
test
nop
daa
sub
cli
shl
push
sub
xchg
jl
out
push
js
and
addr16
aaa
cmp
push
shl
std
push
(bad)
(bad)
std
mov
shl
xor
pop
xor
sbb
mov
je
mov
xchg
mov
gs
nop
adc
cmp
mov
fs
pushf
xchg
xor
mov
cmps
hlt
add
mov
mov
mov
(bad)
scas
ins
pop
fcmovbe
mov
ror
out
cmp
enter
shl
leave
mov
cwde
xchg
push
test
dec
cmc
repz
jl
ror
jl
jecxz
out
adc
out
neg
mov
jae
movlps
sbb
and
std
xchg
daa
dec
xchg
mov
jecxz
pop
pushf
push
jo
call
in
jne
daa
mov
mov
iret
push
add
ins
ja
test
stos
cmp
sbb
imul
mov
mov
(bad)
in
push
(bad)
movs
jo
leave
ins
int3
push
shl
mov
js
xor
mov
mov
loopne
mov
cdq
loopne
jge
push
test
push
push
cld
jbe
jns
inc
clc
je
xor
and
daa
push
std
mov
add
loopne
imul
jne
sahf
xchg
movs
cwde
addr16
adc
mov
jo
xchg
mov
mov
adc
mov
mov
mov
jl
in
lods
fs
stos
sahf
je
lods
jg
cmps
arpl
jl
mov
cld
mov
mov
test
jo
add
inc
cs
jo
js
mov
test
lds
cmps
out
repz
in
in
pop
jb
data16
dec
xor
push
int
sbb
out
pop
out
int
pushf
mov
mov
or
push
lea
mov
je
pushf
xchg
sub
mov
pop
cdq
(bad)
iret
xchg
xchg
sub
sahf
jae
iret
enter
or
(bad)
test
pusha
test
mov
xchg
mov
int
add
je
movs
in
xadd
lahf
dec
(bad)
mov
and
dec
mov
cmp
cmp
ins
gs
mov
push
shl
popf
call
pop
aad
jl
loope
push
rcl
loope
int3
inc
dec
add
sbb
add
cmc
xlat
mov
sti
cmps
cmp
out
pop
call
push
aam
cli
(bad)
mov
xchg
or
mov
pop
stos
pop
shl
xor
sbb
push
mov
cwde
div
push
mov
ret
leave
sub
add
enter
jmp
scas
mov
(bad)
lds
aam
mov
fmul
pop
mov
xlat
add
outs
jl
mov
adc
xchg
test
out
movs
js
add
push
inc
cmp
out
add
push
repz
enter
out
push
mov
mov
ds
fadd
fwait
push
into
stos
and
adc
xchg
dec
mov
push
inc
mov
push
jne
cmps
jp
mov
retf
lds
jp
xchg
loopne
mov
jl
scas
stos
cwde
push
ret
mov
call
int
push
add
jne
mov
fs
add
mov
clc
cmps
sbb
js
lds
ins
fnstcw
add
cmp
je
lods
shl
push
shr
icebp
imul
aam
sar
int3
lock
in
shl
mov
loop
jmp
pop
imul
jp
mov
fwait
mov
jmp
push
iret
fxtract
aam
jl
test
cld
or
push
adc
xor
test
xor
int3
(bad)
cmps
jp
movs
and
mov
mov
shr
js
lea
jl
(bad)
xor
iret
push
mov
enter
bnd
xchg
mov
ins
push
pushf
sub
inc
jmp
or
jl
gs
add
leave
int3
mov
std
repz
div
(bad)
outs
push
push
cli
sbb
daa
out
movs
jae
cmp
cmp
mov
pushf
mov
js
(bad)
xchg
fstp
cwde
cmp
sahf
sub
mov
jl
loopne
cli
or
pop
lahf
popf
sbb
(bad)
fdivr
sbb
int3
fcmovnu
pop
es
mul
ror
mov
cmps
stos
cwde
xchg
mov
into
ret
push
jo
cld
jne
std
fs
les
or
fcom
dec
adc
leave
mov
test
or
jl
repz
call
fadd
lds
rol
scas
lods
icebp
jae
in
jge
cli
hlt
pop
pop
mov
inc
mov
stos
jae
call
pusha
aaa
fwait
mov
lods
test
loopne
loopne
sbb
rcr
push
out
and
ret
scas
and
je
mov
sahf
clc
mov
rol
mov
fs
sbb
jo
retf
mov
push
mov
jl
sbb
aad
sub
je
jl
loope
fsubr
push
jl
push
jl
ss
pusha
rol
aam
mov
js
add
(bad)
into
ret
jl
mov
out
jo
sahf
xchg
popf
icebp
jl
xchg
mov
js
(bad)
std
mov
inc
add
ds
dec
jns
(bad)
stos
cmp
pop
sub
test
sar
mov
ins
cmps
movs
sub
stos
and
jp
les
cmp
ret
mov
rcr
aam
hlt
pushf
jnp
push
pop
js
jl
shl
stos
(bad)
inc
jmp
sbb
sbb
or
fmul
jb
fist
lods
popf
mov
ds
cmp
bound
call
mov
iret
adc
xchg
mov
cmp
push
xchg
fisub
std
mov
push
mov
xor
sub
mov
xor
stc
ret
lods
mov
mov
cwde
jae
scas
std
nop
mov
stos
cdq
jae
mov
je
(bad)
adc
ins
jl
jne
popa
jno
fdivr
aad
aas
xor
jg
les
(bad)
sbb
mov
xchg
(bad)
int3
enter
jno
fnstcw
shl
add
jne
mov
adc
in
test
mov
xchg
xchg
ins
mov
data16
fisttp
rol
inc
clc
xchg
xchg
xchg
pushf
cwde
retf
movs
aam
mov
add
(bad)
sbb
mov
test
xor
jne
mov
mov
sub
sar
sub
dec
imul
aad
mov
jmp
pop
call
mov
mov
shr
mov
lods
and
daa
and
mov
cmps
mov
xchg
xor
xor
js
mov
movs
pushf
xor
cwde
fs
xchg
mov
sbb
scas
stos
test
call
mov
fs
inc
in
scas
retf
lods
lahf
daa
mov
mov
je
mov
push
pop
cld
inc
cmp
sub
and
xor
jl
jbe
inc
repnz
jns
enter
mov
mov
call
fsubr
shr
addr16
(bad)
mov
test
lahf
dec
int3
lods
test
scas
add
jno
mov
sar
sbb
pop
sahf
pop
xor
dec
in
lods
stos
sub
push
jl
mov
cmps
hlt
test
pushf
mov
mov
dec
sub
imul
mov
jo
jl
xchg
dec
adc
pop
outs
retf
loop
xor
sub
jne
fdivr
xchg
rcl
mov
mov
jae
ret
sbb
movs
lahf
fcom
push
(bad)
mov
fwait
hlt
test
cmp
mov
lods
ins
mov
div
nop
nop
pop
mov
popf
scas
mov
je
sbb
test
cmp
mov
mov
pop
je
or
(bad)
mov
popa
dec
lea
in
pop
mov
lock
pop
sti
icebp
retf
mov
ret
aad
fld
jl
out
mov
push
jecxz
and
add
(bad)
std
cld
(bad)
cld
mov
mov
mov
lods
xchg
call
jp
mov
js
jl
mov
xor
je
movs
mov
xchg
or
stc
cmp
cmp
cwde
mov
ins
in
int3
nop
dec
mov
or
dec
jo
mov
or
pop
jl
stos
sub
in
loop
imul
mov
push
mov
or
fcomp
xor
retf
jo
test
mov
retf
rol
mov
test
lods
movs
xchg
(bad)
inc
xchg
into
sub
cwde
in
and
shr
sar
pop
je
mov
dec
sahf
xchg
pushf
js
mov
mov
push
cmps
cdq
dec
jl
xor
xor
sahf
sbb
cmps
fwait
pop
sbb
lods
lahf
icebp
pusha
lea
movs
ror
jmp
jmp
pop
into
xor
jl
test
ror
mov
jl
add
lock
test
js
test
test
mov
jmp
out
pop
aas
mov
shr
scas
cmc
mov
mov
mov
int3
mov
xchg
inc
mov
je
(bad)
mov
xor
xor
inc
mov
mov
pop
cdq
cwde
mov
dec
fwait
call
sar
mov
inc
je
xor
jmp
out
out
fild
jl
inc
push
xor
or
jae
add
cmc
jl
les
adc
xchg
mov
mov
cmc
leave
mov
push
mov
test
push
sub
nop
cmps
mov
jmp
call
movs
lods
movs
xor
mov
inc
aad
popa
lahf
call
push
lock
loope
fld
jo
and
jl
stos
and
push
test
call
jl
mov
fnstcw
jl
jmp
dec
fmul
pop
jmp
mov
repnz
lods
movs
daa
mov
pop
test
out
mov
jns
mov
mov
xchg
movs
mov
test
add
inc
rcr
jns
mov
xchg
cwde
mov
push
xlat
ret
leave
pop
dec
movs
sahf
xchg
inc
js
ins
mov
lea
in
cdq
xor
sub
cmps
mov
mov
jl
inc
xchg
stos
mov
fs
mov
cmp
inc
ret
mov
leave
ins
sar
movs
sahf
mov
jl
xor
sub
imul
jl
sub
clc
call
mov
cli
cmps
mov
mov
clc
in
js
cwde
mov
outs
jo
sub
ds
or
mov
mov
test
fs
sub
jge
mov
(bad)
push
push
jb
mov
mov
ret
mov
nop
xchg
lea
pop
mov
xchg
mov
movs
in
mov
scas
jl
mov
xor
std
fwait
dec
xchg
imul
int3
xor
xchg
movs
mov
jl
mov
in
jne
mov
(bad)
mov
test
loopne
stos
and
movs
test
fbstp
xchg
mov
ins
lahf
mov
jne
cmp
xchg
pop
xchg
test
mov
pop
xchg
mov
nop
push
popf
dec
inc
in
push
cdq
xchg
pop
dec
dec
or
dec
js
repnz
and
cdq
pop
js
jl
sbb
and
test
(bad)
pop
jl
mov
fsub
call
in
jl
xchg
rcl
(bad)
jne
sbb
test
mov
mov
loopne
loop
inc
mov
add
popf
test
mov
call
jb
or
or
test
mov
xchg
stos
(bad)
test
mov
test
ret
mov
lahf
xchg
inc
jmp
dec
jl
mov
cdq
xchg
sbb
sbb
dec
hlt
xchg
inc
mov
test
jl
ret
les
cwde
stos
xchg
aam
add
jmp
jl
ins
push
and
jp
jbe
cmp
sti
les
and
fucomp
test
jne
call
enter
fs
jno
js
and
jl
mov
jo
call
xchg
mov
xchg
mov
sbb
aam
call
cmp
int
mov
jne
ins
mov
sub
ds
inc
jge
jns
ret
int3
(bad)
jl
xor
mov
call
pop
jl
ret
test
cli
cwde
mov
stos
test
hlt
xchg
sub
push
cmps
movs
xchg
ins
jecxz
and
xor
pop
fs
push
(bad)
pop
cwde
adc
dec
in
sub
call
sub
call
cmps
pusha
pop
nop
cld
dec
and
push
stos
mov
lock
aad
(bad)
daa
sub
and
pop
sub
fidiv
loop
or
mov
cmp
int3
add
xchg
cdq
xchg
test
jo
adc
fs
test
xor
test
nop
in
loopne
sub
or
mov
xor
fwait
popf
push
xor
retf
int
add
cmp
push
mov
das
rol
scas
pop
cdq
mov
jge
jl
dec
push
movs
cwde
xor
xchg
push
lock
xchg
das
stos
jp
stos
movs
xchg
test
mov
push
xor
mov
cmp
push
movs
dec
loopne
or
xchg
xlat
je
push
nop
pop
xchg
(bad)
push
cld
or
jo
fwait
jp
xor
ds
popf
pushf
and
sbb
test
sbb
push
jl
jmp
call
pop
dec
sbb
adc
test
sub
pushf
jmp
shr
mov
int3
pop
imul
mov
pop
mov
mov
scas
inc
and
enter
dec
mov
lds
pushf
sbb
int
adc
in
jo
test
fwait
mov
mov
call
icebp
pop
repz
mov
fild
mov
lahf
cmc
xchg
mov
js
loope
add
ss
and
js
jae
mov
out
movs
scas
lahf
xchg
fwait
mov
mov
scas
sbb
push
das
mov
hlt
cwde
ins
lods
or
in
pushf
scas
scas
push
lahf
or
pcmpgtw
fcomp
mov
aad
lahf
sbb
fcmovnu
and
xchg
ins
cwde
sub
or
mov
mov
loope
xlat
lahf
inc
int3
adc
sbb
sub
cwde
cmps
leave
push
jp
stos
test
mov
lahf
les
aaa
lods
movs
push
mov
mov
pop
std
js
xor
fadd
sbb
(bad)
scas
sub
cwde
sbb
xlat
(bad)
xor
mov
sti
enter
jmp
jl
sub
addr16
je
ins
inc
pop
inc
inc
cmp
ror
sbb
push
mov
les
mov
lods
add
js
je
pushf
in
mov
jl
lods
mov
mov
push
hlt
mov
fcom
fcom
rcl
je
add
daa
and
pusha
or
pusha
push
jae
test
(bad)
pop
bound
add
cld
rol
movs
mov
inc
dec
mov
mov
ja
mov
test
mov
mov
retf
test
pop
cmps
mov
xor
mov
daa
call
or
add
or
xor
mov
shr
adc
scas
pusha
into
js
sbb
cmp
xor
out
fdivr
or
push
nop
add
cmps
cli
mov
dec
jns
mov
dec
test
mov
inc
push
ins
or
push
cmps
jnp
loop
fistp
fsub
add
das
retf
and
jle
ins
dec
lock
push
(bad)
cmp
mov
mov
popf
shl
ins
movs
or
lahf
fs
xchg
xchg
mov
sub
fstp
ret
nop
movs
sub
in
mov
jb
enter
repnz
xchg
adc
pop
call
xor
inc
dec
inc
mov
ror
jl
stos
into
mov
mov
xchg
xchg
cmps
fmul
mov
inc
mov
mov
jl
cmp
pop
push
or
xor
or
sub
push
fcom
lods
xor
sub
push
cmp
and
push
ret
pop
ds
adc
adc
pop
pop
push
sub
mov
leavew
aaa
mov
xor
movs
pop
nop
jl
mov
shl
mov
jp
ins
out
add
enter
stos
push
push
inc
dec
mov
ins
(bad)
adc
dec
ins
jecxz
adc
xchg
sub
sub
jle
or
cmc
or
and
into
push
aad
(bad)
pop
add
jo
stos
inc
mov
jns
pusha
xchg
je
or
shl
fcom
(bad)
lods
leave
adc
dec
cmp
jp
js
mov
(bad)
frstor
jne
jbe
push
add
pushf
push
pop
mov
inc
mov
push
ins
xchg
js
jb
dec
and
jl
jmp
xlat
jne
cmp
push
nop
callw
xchg
adc
shl
cld
lock
pop
test
repz
mov
add
add
sub
ins
jo
cs
jmp
xchg
mov
push
xor
inc
sbb
pop
ss
jno
xchg
pop
pop
popa
inc
and
dec
push
sub
js
xor
mov
or
lea
sar
js
jmp
inc
pop
lock
movs
dec
rcr
adc
cdq
and
add
sub
lods
aam
pop
dec
add
add
in
(bad)
(bad)
mov
imul
mov
pusha
xor
cmp
sub
sub
es
pop
fs
pusha
adc
add
imul
ret
dec
xchg
fiadd
adc
je
outs
add
in
cli
add
icebp
sbb
js
call
inc
jp
ins
jmp
sbb
push
jl
xlat
dec
cwde
jle
cmp
push
and
repz
rcr
test
dec
sub
inc
jae
jmp
dec
inc
inc
cli
and
push
cli
test
daa
cmp
aaa
xor
ds
jne
stc
bnd
push
cld
pushf
pop
inc
cmp
mov
push
dec
test
cmp
aas
lea
push
jne
out
jp
or
mov
sbb
neg
popa
add
mov
push
test
shl
push
and
mov
jns
js
gs
js
mov
test
ds
repz
push
dec
xor
int3
jae
pop
bound
xor
mov
push
dec
in
jo
ins
popa
pop
call
test
neg
dec
inc
xchg
mov
push
in
push
dec
inc
jns
pop
push
adc
ror
or
gs
cmp
es
or
jo
push
cmp
or
in
cmp
jl
das
pop
mov
push
imul
and
sbb
xchg
xchg
mov
std
inc
imul
sub
pop
jns
in
pop
xor
xor
je
in
pop
dec
cmp
sub
add
mov
lock
add
lea
xchg
cmp
xor
mov
ins
arpl
fwait
add
les
mov
je
adc
sbb
jns
leave
push
or
or
js
shl
fnsave
pop
mov
inc
dec
inc
inc
cmp
mov
jge
cmp
sbb
aam
je
enter
xchg
push
dec
or
je
clc
nop
pop
(bad)
pushf
pop
cmc
and
js
or
cmp
add
stc
aad
cli
cmp
sti
test
fistp
xor
sub
sub
adc
sbb
add
add
jbe
ret
jmp
out
mov
jl
aas
cmp
movs
jle
sub
mov
pop
jp
enter
enter
sbb
aam
sbb
and
mov
add
mov
fs
push
inc
push
imul
cli
out
test
sub
nop
(bad)
cmp
pop
sub
xchg
cmp
ds
add
(bad)
pop
inc
mov
aam
rol
retf
and
xor
shl
out
pop
ds
push
sub
sub
loope
fidivr
fld
cdq
pusha
inc
sub
hlt
and
jl
inc
jp
out
scas
mov
mov
push
adc
jg
call
popf
je
retf
aas
sub
les
adc
jge
add
leave
dec
and
js
std
push
or
adc
fld
sub
in
jne
sahf
and
sub
jecxz
fs
out
pop
pusha
xlat
mov
and
fs
fdiv
mov
or
cli
mov
mov
(bad)
repz
mov
push
mov
and
push
add
(bad)
xchg
js
popa
fs
out
add
and
dec
pushf
xor
adc
nop
adc
ja
in
pop
sti
pop
daa
push
popf
imul
pop
cmp
add
sbb
movs
jo
fadd
cld
cli
fcom
pop
jmp
pushf
je
sbb
cli
lock
fs
sbb
in
fcmovu
cmp
sti
or
(bad)
jns
cli
adc
add
ss
test
ins
jae
jbe
js
js
push
push
les
je
add
in
and
mov
call
add
mov
sub
aas
addr16
pop
shl
loopne
adc
cmp
loope
mov
call
lods
dec
push
mov
mov
mov
add
retf
sti
jge
cmp
adc
inc
ret
add
retf
cli
or
aad
jl
(bad)
test
or
jle
add
retf
mov
mov
jmp
mov
xlat
and
jne
jmp
mov
in
data16
std
mov
push
inc
lea
add
nop
or
enter
cli
enter
nop
xor
in
xor
mov
in
xor
test
cld
aad
clc
cwde
or
fs
hlt
dec
pop
not
cmps
pushf
inc
(bad)
mov
cli
stc
ret
mov
cmp
pop
nop
sbb
out
test
hlt
sti
ins
mov
mov
int
cli
ds
jae
cmp
into
pop
je
mov
jp
xor
xchg
add
sub
mov
das
cmc
ins
je
sub
push
je
(bad)
fsub
push
inc
xor
loope
test
dec
xor
mov
je
ret
xchg
push
mov
repz
das
or
jp
aad
sbb
jmp
(bad)
dec
bswap
aam
xor
test
out
mov
cwde
not
data16
adc
sub
adc
sub
fs
mov
inc
jo
jne
sbb
push
bound
sub
into
ins
and
cmps
mov
pusha
sbb
sbb
pop
dec
xor
test
mov
mov
mov
movs
fnstsw
push
jmp
jnp
adc
mov
ins
fdivr
sahf
xchg
ret
fist
or
cmp
or
aas
ja
xchg
lahf
mov
bound
dec
inc
call
inc
jae
(bad)
ja
xor
ret
add
js
push
test
js
cmp
ss
sub
ret
loopne
ja
push
sbb
retf
jb
inc
sub
lods
data16
jp
sub
neg
inc
and
mov
repz
cmc
xchg
jnp
push
sbb
(bad)
ror
call
mov
mov
mov
sbb
ret
inc
gs
dec
mov
lods
ins
add
xor
mov
clc
stos
stos
(bad)
icebp
sub
mov
dec
dec
(bad)
pop
cmc
sbb
cmp
pushf
mov
sbb
adc
push
inc
leave
mov
in
xor
int3
adc
push
cmp
add
adc
fidivr
mov
int3
mov
jle
push
mov
pop
clc
mov
nop
(bad)
or
ret
push
jne
clc
cmp
adc
xor
pop
mov
mov
xchg
out
and
adc
inc
push
jge
scas
and
inc
jl
jge
jl
mov
mov
jl
pop
data16
enter
ins
loopne
nop
int3
enter
mov
or
jbe
push
popa
dec
shr
js
add
adc
fldcw
jnp
fidivr
daa
les
ffree
pushf
test
fdivrp
in
mov
out
stc
mov
jge
add
fdiv
xor
push
cmc
jbe
sub
jl
ins
jl
and
push
in
fwait
dec
jg
pushf
jne
ja
and
aaa
mov
pop
arpl
push
out
pusha
and
jg
lods
mov
dec
outs
inc
es
cmp
adc
les
push
data16
jbe
cmps
mov
hlt
in
jl
(bad)
fcomp
aad
ror
jae
sub
icebp
loopne
sub
inc
jbe
icebp
and
loopne
jb
je
ins
xchg
jo
xchg
mov
fisub
fwait
(bad)
enter
xchg
push
mov
js
ins
jne
pushf
dec
push
dec
popf
cmp
test
pop
pop
loope
push
out
xor
iret
dec
sar
push
push
jo
(bad)
enter
jns
and
cmp
enter
pop
iret
mov
xchg
mov
jmp
ret
cmp
cli
push
cmp
sbb
or
fdivr
imul
mul
je
jl
fnstenv
push
lock
ins
sub
jmp
push
movs
push
test
jl
sub
mov
jl
mov
ds
jp
icebp
push
inc
pop
ja
jne
mov
inc
mov
daa
push
pop
fwait
enter
jbe
bound
fistp
movs
mov
jle
mov
cld
jl
pushf
nop
add
cmps
jo
repz
cli
inc
sub
std
jp
jnp
add
fs
push
cmc
je
je
sub
(bad)
mov
jmp
in
out
(bad)
jle
and
jl
xor
je
ret
movs
mov
add
js
push
mov
jge
fistp
jns
and
dec
int3
and
pop
test
add
pusha
xchg
je
push
sahf
and
arpl
ins
pushf
pop
mov
mov
mov
mov
cli
movs
imul
push
push
xor
repnz
cmp
pop
sub
xor
shl
int3
stos
push
pop
ror
add
push
nop
inc
aam
loope
out
lds
pop
rcr
jmp
je
pushf
outs
inc
inc
ss
cs
and
in
ins
sub
pop
push
adc
lods
push
add
test
lea
xchg
add
jb
xchg
mov
mov
cmps
xchg
jb
pop
pusha
mov
out
fwait
test
mov
add
xor
clc
pop
mul
sbb
ja
add
mov
pusha
(bad)
cld
js
jmp
add
cmc
jns
out
cli
in
sahf
mov
out
xchg
adc
test
pusha
jnp
xor
push
sbb
add
call
(bad)
clc
stos
sahf
jle
xor
mov
call
pop
push
stos
nop
mov
(bad)
mov
stos
cmps
jnp
mov
pop
sub
add
aad
push
push
lahf
arpl
fs
and
pop
and
cld
shr
sbb
fs
xor
fs
fst
sub
rcr
push
and
and
(bad)
aam
(bad)
jne
inc
or
(bad)
jo
xor
lea
lock
ds
lods
cmp
xlat
jp
(bad)
mov
cmp
in
jo
mov
sub
lods
in
xchg
or
dec
stos
xchg
dec
stos
nop
shl
mov
test
sub
jne
mov
add
movs
mov
in
test
call
mov
mov
inc
cmp
sbb
addr16
je
add
pushf
cmp
pop
push
mov
adc
ins
inc
ret
xor
add
ins
js
cld
jb
ins
pop
jno
aad
je
mov
mov
pop
not
repnz
xchg
dec
test
mov
nop
sub
mov
pushf
imul
xchg
stos
cmp
cdq
jmp
xchg
push
iret
mov
push
sbb
icebp
mov
jne
out
and
cld
ror
nop
push
imul
or
test
dec
cli
in
cld
cdq
jbe
sub
pop
jl
sub
pop
cmp
jae
lea
mov
hlt
dec
jbe
pushf
repz
test
push
mov
movs
cmp
data16
shl
scas
or
mov
nop
push
xchg
mov
push
pop
shl
add
xchg
je
xchg
pop
dec
fwait
push
dec
pop
lods
push
cmp
dec
cmp
mov
jp
pop
out
cmp
pop
neg
mov
sub
nop
ficomp
scas
push
in
mov
test
sub
out
(bad)
test
push
push
pop
dec
xchg
lock
jnp
inc
add
sub
push
arpl
jmp
mov
and
xor
add
push
inc
xor
hlt
mov
xchg
test
pushf
cwde
retf
dec
gs
and
std
sub
mov
mov
ds
xor
xchg
lock
lahf
ins
mov
sar
pop
mov
ja
fldenv
mov
hlt
cli
idiv
fs
stc
retf
outs
std
xlat
cmc
icebp
add
push
push
cmp
loop
or
sub
jl
cdq
je
inc
xor
mov
outs
aas
cbw
jnp
fxch
mov
aad
pop
loopne
ret
test
xchg
test
cld
mov
jle
pop
cwde
push
cmps
cmp
sbb
leave
pop
mov
fild
lahf
add
adc
lahf
xchg
test
sub
fstp
les
push
in
or
cmp
jo
(bad)
cmc
fs
jge
or
fadd
push
jg
in
sub
(bad)
pop
rol
call
rcr
(bad)
pop
fnstcw
cmp
adc
clc
stc
fmul
jg
pop
shr
iret
leave
jp
ror
sar
fsub
mov
outs
pop
mov
test
xchg
retf
nop
out
lods
inc
fs
test
fld
outs
bound
dec
iret
shl
pushf
fucom
loope
in
xchg
mov
lahf
std
hlt
lock
fnstenv
out
test
and
push
sti
test
test
clc
fistp
push
icebp
int3
mov
add
out
xchg
jp
inc
aad
xlat
mov
mov
sub
and
nop
ins
xor
in
js
jno
rcr
pop
ret
lods
inc
dec
mov
jo
lods
out
je
stos
pop
jae
mov
fs
jmp
adc
mov
xlat
lods
pop
loop
and
pusha
mov
push
jge
lods
push
movs
jns
int3
fstp
mov
std
out
jmp
dec
neg
push
stc
sar
loopne
mov
je
jmp
xlat
mov
call
repnz
mov
mov
pop
fmul
stos
pop
xor
stos
fs
and
test
jp
push
(bad)
push
cmps
ror
push
mov
mov
aam
mov
mov
movs
jl
rcl
shl
out
push
add
cmp
cli
add
jmp
je
iret
aad
je
xchg
mov
pop
lea
popf
xchg
test
xchg
repz
test
repnz
push
rol
cli
cld
push
jg
int3
mov
pusha
jo
aad
rcr
stos
cld
add
loope
mov
mov
mov
test
add
(bad)
ja
mov
lods
shr
pusha
add
cmps
in
jg
mov
mov
out
retf
cld
xor
test
(bad)
rcr
ret
pop
jns
jbe
call
aam
std
hlt
jecxz
pop
nop
out
js
cmp
std
or
sub
xor
mov
and
and
pop
call
cld
xchg
mov
pop
push
or
dec
mov
fdivp
adc
sub
mov
pop
push
out
and
movs
xchg
adc
shl
mov
mov
inc
dec
ret
or
stos
pushf
pop
mov
aam
shl
int3
pop
imul
inc
xor
and
jl
pop
jg
leave
xchg
mov
stos
into
ds
sub
xor
movs
pusha
push
pop
dec
mov
shr
hlt
addr16
rcl
sti
(bad)
mov
into
xlat
sbb
pop
test
aaa
fcom
xchg
int
jmp
ds
xor
jle
hlt
icebp
lock
in
xchg
ds
outs
loop
push
lock
add
test
pop
fidivr
lods
fwait
std
sub
mov
dec
jle
in
push
add
xor
lods
rcr
movs
cmp
std
jl
mov
sub
dec
loopne
iret
jne
data16
js
or
adc
fsub
mov
lods
and
stos
fiadd
mov
js
mov
push
adc
dec
adc
clc
imul
jns
ror
cli
js
and
dec
cmp
or
in
mov
xchg
push
mov
fcomip
cwde
dec
int
sub
cmps
sbb
xchg
jle
mul
out
mov
cmp
jne
icebp
test
jo
dec
call
sbb
mov
std
mov
rcl
in
leave
mov
and
push
or
jmp
out
push
push
jl
xchg
xchg
push
push
xchg
xchg
mov
test
push
ja
jp
jns
cmp
in
test
xor
mov
cdq
jp
ror
mov
xor
pusha
adc
nop
data16
jns
mov
sub
jb
cwde
xor
(bad)
js
cdq
int
je
inc
js
xor
std
xchg
cli
add
nop
fld
fisubr
inc
cmp
mov
enter
jp
loop
xchg
sbb
jbe
hlt
(bad)
stos
or
mov
push
fs
jo
int3
mov
sub
push
test
dec
cmps
imul
jl
js
rol
push
aas
xchg
adc
jl
je
cdq
jg
movs
sub
rol
movs
inc
jo
aaa
sub
test
push
shl
lock
jmp
fcomip
ins
jns
std
jnp
in
in
popf
mov
dec
fs
push
xchg
popf
pop
mov
jns
movs
mov
xchg
loopne
jbe
lea
mov
add
adc
inc
inc
mov
jmp
outs
icebp
cld
sbb
cld
repz
pushf
js
mov
and
(bad)
mov
xchg
mov
cmp
adc
jg
cld
jl
mov
or
fnstsw
jl
out
loop
pop
mov
test
inc
ret
imul
ja
call
sbb
or
pop
jl
movs
in
mov
loopne
out
clc
cld
in
int
pushf
loope
fld
pushf
mov
movs
leave
push
mov
mov
fs
mov
bound
js
xchg
nop
cmp
lea
inc
inc
mov
scas
pop
sub
xor
cwde
push
add
sbb
in
mov
jge
test
cmp
in
push
iret
movs
jbe
mov
inc
pop
(bad)
mov
xchg
push
push
jns
push
mov
add
je
adc
dec
lock
jne
loopne
add
in
add
aam
fnstsw
cmc
loope
stc
in
std
je
call
retf
mov
(bad)
fdivr
xchg
mov
mov
mov
jo
cmp
mov
fsub
pop
cs
xchg
pop
leave
sahf
lock
dec
cmps
xchg
sub
mov
lock
shl
push
in
mov
ins
repnz
out
mov
imul
fdivr
call
jo
js
inc
test
jl
rol
sub
icebp
retf
mov
sbb
jmp
cmps
pop
lock
jne
(bad)
cld
in
ins
adc
into
jns
mov
shr
cmp
sar
mov
mov
mov
mov
jl
ins
jmp
adc
jo
mov
jge
push
cmp
stos
cmp
mov
cmp
or
jl
clc
cld
jl
mov
in
jl
out
and
push
lds
sbb
aas
sub
sub
je
jl
js
js
pop
jl
(bad)
rol
mov
pop
ffree
or
jp
loop
mov
in
(bad)
cmp
int
mov
lds
enter
push
fnstcw
ins
pop
loopne
(bad)
jmp
mov
cmps
movs
clc
stos
mov
mov
shl
sbb
xchg
jmp
sahf
jne
mov
push
xor
sbb
nop
sbb
nop
push
test
adc
dec
xor
and
sub
jecxz
mov
(bad)
mov
ins
dec
aaa
(bad)
cmp
outs
(bad)
pop
and
jp
lds
or
or
je
ja
sub
popf
sbb
sbb
jecxz
in
sub
(bad)
lock
fldcw
add
add
cld
mov
aam
rcl
sti
ror
dec
movs
in
ins
hlt
loopne
fsubrp
fs
pop
push
xor
jmp
jmp
fwait
pop
std
pop
xor
mov
cli
mul
fsub
mov
les
ret
mov
cli
cmp
sar
mov
push
dec
aam
fs
cld
or
and
xchg
ins
dec
jl
pop
js
pop
movs
dec
adc
mov
push
jl
jmp
mov
push
cld
fild
into
push
sahf
pop
int3
je
add
out
jb
aad
jae
sar
mov
mov
push
movs
mov
lea
and
hlt
pop
cwde
cs
push
cmps
xor
xor
ffreep
cmp
fisubr
in
mov
ins
cld
les
cmc
ror
call
jne
jl
mov
mov
mov
jne
jge
test
xor
push
jl
or
mov
jbe
adc
out
sbb
mov
std
mov
add
push
dec
scas
sar
std
(bad)
in
pop
in
mov
imul
jo
fst
mov
lds
test
mov
sahf
pushf
jo
jmp
and
mov
pusha
mov
leave
jnp
fisubr
cmp
aad
sbb
test
lock
loop
pop
jmp
js
les
mov
jp
out
mov
push
sbb
dec
test
out
(bad)
mov
test
sbb
(bad)
add
mov
pop
pushf
hlt
push
jecxz
cwde
cld
aam
mov
rcr
js
shl
jmp
movs
jne
mov
mov
je
pop
in
pop
popf
out
loopne
jno
mov
stos
mov
xchg
leave
jmp
mov
jne
cmp
retf
xchg
cdq
fidiv
fsub
ret
retf
enter
push
mov
mov
fs
mov
mov
js
ret
pushf
dec
and
ins
loop
mov
push
sub
mov
ror
jnp
pop
ret
jl
jne
pop
loopne
das
ja
adc
or
jmp
push
out
aam
or
pushf
inc
call
xchg
add
dec
jo
jmp
fsub
adc
rol
fisub
shl
pop
fdivr
cwde
imul
inc
mov
movs
loop
das
mov
test
ror
cmps
in
mov
int3
or
jo
enter
test
retf
dec
and
fcmovb
cmp
in
mov
icebp
ret
mul
sub
repz
rcl
fsubr
mov
add
les
lds
nop
adc
in
jl
xor
add
or
mov
sbb
int3
movs
pop
add
in
jne
int
jl
mov
or
lods
xchg
test
add
stos
mov
(bad)
jns
pushf
jne
mov
mov
shl
fwait
(bad)
jbe
mov
jns
std
aad
mov
mov
push
mov
xor
pop
popf
jo
movs
(bad)
dec
ret
in
mov
cld
cli
(bad)
cmp
mov
cld
push
mov
and
push
push
ins
mov
scas
int3
enter
cmc
js
pusha
push
jg
xchg
loopne
dec
aas
and
in
or
or
je
in
js
sub
call
aam
mov
(bad)
retf
mul
in
in
jl
(bad)
sub
mov
mov
push
ret
test
mov
test
push
not
aam
dec
shl
or
div
mov
and
ror
iret
jne
out
sbb
mov
popa
in
mov
loop
int3
stos
sub
daa
adc
push
mov
shl
pop
test
movs
and
jae
sub
hlt
jmp
push
or
int3
jae
aam
fadd
shl
in
cdq
lock
sub
mov
push
int
rcr
fisubr
std
int3
lock
and
xchg
mov
pushf
dec
into
lods
push
lods
cmc
sbb
pop
retf
or
lods
aad
mov
cmps
hlt
repz
lahf
jns
iret
shr
mov
jo
loope
and
test
push
push
cli
sub
lahf
pushf
push
fdivr
sub
jnp
enter
or
jl
aas
mov
jl
(bad)
fiadd
or
push
sar
fs
loope
xor
xlat
cmp
cmc
ret
xchg
test
retf
fucomp
pushf
pop
rcr
idiv
icebp
mov
xor
call
mov
ror
lock
jb
sub
mov
std
rol
mov
ins
call
mov
cmp
stos
mov
test
lock
and
scas
mul
fldenv
(bad)
cmc
jnp
(bad)
mov
int3
js
jmp
cmp
mov
jl
retf
(bad)
jl
xchg
mov
jnp
push
dec
fld
or
aaa
jb
(bad)
push
mov
jl
in
in
mov
leave
sbb
out
jl
clc
js
add
inc
jmp
fsub
rcr
push
xchg
fisubr
cmp
movs
gs
cmc
lahf
out
shl
out
mov
cwde
jo
mov
popf
in
push
repz
mov
jne
mov
inc
mov
push
sbb
jmp
jmp
loopne
and
xor
and
loopne
xchg
in
je
jb
test
and
or
icebp
retf
loopne
int
push
enter
aad
jl
mov
xlat
mov
add
stc
mov
cmp
sbb
jmp
add
mov
jo
mov
mov
xor
test
shl
push
cld
add
push
stc
pushf
jmp
in
lock
fmul
push
jl
(bad)
mov
fs
mov
dec
out
enter
aam
aas
js
cwde
cmovb
(bad)
mov
mov
jnp
pop
dec
cmp
(bad)
or
lock
je
movs
xor
and
jns
or
mov
pushf
or
std
mov
mov
shl
inc
int
mov
shr
lahf
in
retf
add
(bad)
mov
ret
sub
cmp
or
cwde
jne
mov
xor
js
rcr
inc
push
xor
xchg
add
xor
ja
fsubr
mov
out
dec
or
pop
xchg
cmp
and
add
sbb
xchg
or
imul
push
aas
es
mov
loopne
jb
retf
mov
data16
mov
test
aad
(bad)
or
ds
movs
dec
(bad)
pushf
dec
jl
sbb
mov
or
stos
in
sar
push
cld
add
cdq
mov
mov
js
in
loopne
pop
clc
dec
fsubr
jle
inc
pop
mov
add
jo
fmulp
mov
dec
cmp
movs
push
enter
adc
js
fisttp
(bad)
lods
pop
sub
fadd
stc
inc
sbb
out
sar
sti
cmp
call
(bad)
in
add
mov
repnz
cwde
jb
retf
movs
jne
std
out
dec
adc
jp
jmp
and
lods
jmp
sbb
aad
sub
push
jbe
mov
fcomp
retf
int3
cmp
lods
push
(bad)
sahf
xor
sub
and
aam
jae
mov
push
clc
and
push
jle
xchg
daa
jmp
jecxz
mov
fldenv
jmp
shl
add
outs
or
jns
aad
mov
add
loopne
std
leave
sahf
int3
rcr
mov
cmp
add
outs
xor
aam
es
inc
adc
pushf
jbe
lahf
lea
and
xor
aam
outs
adc
mov
pop
add
and
shl
lds
jl
mov
loope
test
fsub
ins
jle
sub
cwde
arpl
clc
stos
aam
cmp
nop
enter
mov
jl
push
jl
sub
xor
add
mov
je
ins
js
push
inc
std
mov
repnz
in
je
add
or
mov
js
pop
push
sub
jnp
data16
pop
je
add
push
or
scas
adc
jnp
imul
mov
fistp
int3
stc
mov
out
mov
je
fnsave
aad
sub
dec
sar
stc
ja
outs
in
popf
jno
jp
add
jl
adc
retf
nop
pop
cmp
mov
cmps
fcomp
clc
inc
imul
add
std
rcr
cmp
mov
sti
sub
loope
cmp
sbb
jmp
sub
les
cs
pop
rcr
adc
inc
jb
(bad)
mov
addr16
jns
jmp
cmp
out
sbb
add
mov
mov
jmp
sbb
add
xchg
dec
inc
out
jl
aas
js
jge
or
js
add
mov
in
inc
enter
loopne
inc
sub
pushf
push
lock
js
sub
sti
nop
sub
jae
xor
inc
inc
(bad)
push
sti
shr
jle
mov
jecxz
pushf
xor
xlat
int3
inc
and
nop
jne
retf
(bad)
cli
js
ret
fdivr
je
xlat
mov
fnstsw
sub
or
das
jo
push
mov
loop
jmp
or
add
jmp
inc
xor
and
ins
in
dec
xor
daa
into
jmp
pop
neg
and
jo
xor
jo
cmc
test
mov
data16
jbe
inc
add
or
add
test
aad
(bad)
mov
sub
fnstsw
(bad)
rol
jg
sbb
jl
(bad)
scas
cmp
jle
shl
cmp
dec
(bad)
shl
xor
mov
dec
adc
sbb
and
sub
outs
xchg
or
lods
cli
inc
(bad)
in
sbb
fimul
xchg
push
cmc
loop
dec
sub
sbb
rol
js
or
or
out
sub
andnps
xchg
aad
jl
loop
or
loopne
push
lods
push
enter
call
xor
rcr
in
shl
je
or
mov
sub
mov
std
or
adc
mov
outs
aam
test
pushf
imul
pop
hlt
nop
test
sbb
call
cs
scas
pushf
and
pushf
stos
sar
pop
cmps
test
scas
xor
jbe
clc
jmp
int3
push
push
div
push
mov
jl
jecxz
adc
(bad)
mov
jae
lods
call
scas
pop
sub
sti
sti
mov
lea
and
or
loop
test
jle
jl
sbb
xchg
and
dec
push
sbb
mov
pusha
jo
js
push
pop
adc
in
jge
nop
pop
add
cmp
lods
es
sbb
or
das
(bad)
fs
clc
in
sar
loope
mov
pusha
sbb
and
mov
mov
js
sahf
cmps
movs
push
inc
add
lock
call
scas
mov
add
(bad)
sar
data16
adc
in
xlat
int3
data16
and
ins
dec
cmp
mov
add
retf
aad
cmp
adc
sbb
sub
xor
push
and
mov
ds
lahf
sub
(bad)
mov
jl
out
inc
test
mov
and
and
sbb
mov
outs
(bad)
push
pop
lea
pop
mov
xor
cmp
sub
xor
js
ins
aam
lods
cmp
fstp
inc
mov
lds
ret
sbb
nop
fs
jl
xchg
pop
movs
pop
and
or
jg
in
sub
dec
pop
js
jae
or
pushf
mov
xor
gs
add
inc
cmp
das
mov
sti
xor
and
xor
test
cmp
out
pop
mov
dec
mov
fistp
dec
and
xor
gs
xor
mov
mov
push
add
cld
imul
jmp
push
sub
loope
sbb
mov
pop
out
add
popf
push
add
and
cmp
imul
jge
push
mov
xchg
and
adc
mov
out
ss
xchg
inc
dec
mov
pop
and
pusha
push
sub
fsubr
daa
iret
adc
aas
adc
and
loopne
stos
xchg
ins
xor
jae
popa
pop
test
mov
pop
dec
pop
push
mov
out
push
rcr
xor
or
push
sub
js
mov
jne
outs
ins
in
pop
push
aam
cmp
cwde
rol
pop
dec
ja
addr16
mov
js
mov
test
xor
inc
das
and
pop
aam
sbb
inc
pop
inc
inc
push
adc
inc
fild
pop
or
js
push
dec
retf
inc
inc
cmp
sub
pusha
xor
imul
inc
jmp
je
and
mov
mov
adc
imul
adc
push
imul
xor
sbb
cwde
rcl
es
fdiv
cmp
inc
xor
xor
pop
push
xchg
cmps
pushf
mov
dec
fdiv
dec
ds
pushf
dec
dec
dec
rol
jmp
jmp
xchg
xchg
cmp
cmp
mov
fdiv
pop
(bad)
jbe
stc
out
or
mov
lock
xlat
cmp
test
jne
xchg
mov
and
hlt
jp
fs
pop
mov
ret
cmp
add
in
popf
push
add
fcomp
sbb
in
jl
xor
sub
adc
or
add
(bad)
sub
xchg
nop
(bad)
mov
mov
pushf
push
xor
sbb
call
in
in
or
rcr
dec
inc
pushf
cmp
idiv
pushf
loope
shr
pop
push
hlt
jmp
inc
and
shl
lods
dec
hlt
push
jl
xor
cmp
xchg
or
jne
jno
adc
xor
lock
mov
dec
pusha
pop
ins
xor
loopne
aam
push
add
imul
fcmovb
xor
pop
setl
int3
test
sbb
pop
pop
ins
jl
pop
add
test
cmp
jmp
or
sub
add
pop
add
neg
mov
cmc
imul
sti
outs
dec
(bad)
enter
and
ror
lahf
js
and
jl
pop
jae
daa
push
mov
or
ins
jo
mov
dec
push
dec
or
sbb
mov
cld
enter
jmp
adc
fadd
(bad)
cli
in
push
out
pushf
jl
push
jmp
aad
jne
cmp
sar
dec
inc
sbb
and
jp
das
and
sub
adc
sub
jecxz
fs
shr
ret
mov
push
mov
sub
push
xor
jmp
cld
dec
imul
pop
loopne
mov
mov
mov
cmc
pop
adc
fadd
in
and
jae
or
cmps
call
jno
inc
dec
mov
mov
add
or
(bad)
enter
cwde
std
xor
jl
jmp
aad
loopne
int3
mov
mov
xor
mov
and
lea
sbb
popf
sbb
sbb
sub
mov
mov
add
mov
push
jne
sub
sti
js
or
mov
neg
xchg
adc
sbb
pop
dec
dec
jg
add
xor
imul
das
scas
nop
inc
sti
scas
lods
mov
test
push
dec
test
ins
sbb
and
nop
int3
cmp
inc
test
ds
hlt
push
int
mov
mov
scas
ds
jae
aam
xchg
cmp
pushf
and
movs
dec
pop
inc
cmp
imul
mov
push
leave
mov
sub
shl
clc
jmp
aaa
in
add
into
sar
movs
mov
push
or
into
mov
retf
xlat
sbb
xchg
je
or
push
sbb
fs
dec
xor
sbb
test
cmps
movs
xchg
mov
pop
sbb
pop
push
and
sub
cmp
push
jp
sbb
outs
outs
call
jnp
jmp
aam
and
sub
popa
(bad)
sar
js
jl
xchg
ja
mov
(bad)
mov
jp
int
mov
pusha
sub
outs
pop
(bad)
fild
cmp
js
mov
scas
sahf
fs
adc
dec
fwait
xchg
xchg
clc
push
jle
hlt
push
addr16
pusha
aaa
dec
xor
fdiv
mov
das
std
aam
cmp
mov
or
ror
les
dec
dec
aam
dec
jo
int3
aad
daa
pop
adc
scas
int3
ins
je
arpl
dec
and
inc
xchg
or
ja
jl
push
push
std
fsub
loope
adc
jns
rol
mov
jmp
inc
sub
mov
xchg
gs
push
mov
in
pusha
sbb
retf
ret
mov
sub
jae
xchg
test
popa
cdq
pop
mov
cwde
push
js
adc
push
mov
jne
pusha
sub
jl
lds
adc
jp
jmp
add
jnp
rcl
mov
jb
inc
cmp
sub
mov
je
ds
jne
movs
xchg
mov
jle
test
gs
xchg
gs
fdiv
xchg
(bad)
lock
or
cmc
and
jo
retf
mov
or
jg
nop
retf
in
js
ja
jmp
add
cli
enter
enter
lods
xor
test
inc
inc
cli
js
push
je
movs
fmul
or
daa
and
int3
je
mov
pop
sub
aam
cmp
scas
sub
test
lock
mov
push
cli
mov
mov
lea
les
fsubr
fdivr
sub
pop
cwde
shr
adc
xor
sub
sub
dec
in
mov
push
adc
mov
mov
rcl
dec
mov
mov
(bad)
mov
cmp
mov
imul
loop
pop
loopne
xchg
jns
sti
in
or
mov
loopne
outs
fwait
push
add
mov
ror
push
mov
pop
aaa
test
mov
cwde
js
shl
pushf
pushf
pop
xor
enter
lahf
xchg
push
scas
jne
mov
push
test
mov
sbb
push
call
aaa
ins
mov
lahf
rep
aad
jns
mov
lahf
and
dec
outs
data16
ret
mov
xor
gs
xchg
push
and
or
jp
fs
jo
in
jb
jae
xchg
adc
imul
mov
mov
je
imul
mov
xchg
(bad)
(bad)
and
ror
sbb
cmps
(bad)
mov
xor
xchg
xlat
ror
jmp
loopne
push
enter
jno
jp
mov
clc
iret
(bad)
and
mov
sub
adc
stos
push
mov
jo
and
xchg
mov
jo
add
js
movs
cdq
test
mov
cmp
and
sub
and
sbb
jmp
and
push
fcos
rcr
enter
lods
dec
xor
addr16
push
mov
js
pushf
nop
mov
mov
movs
int3
inc
lahf
sub
pushf
scas
ficom
mov
sbb
test
or
and
xchg
push
imul
mov
xor
mov
dec
push
adc
jl
pop
scas
retf
(bad)
loope
fs
outs
pushf
dec
dec
cmp
pop
js
xchg
lea
inc
ficomp
js
sbb
push
jo
test
test
fs
dec
mov
(bad)
std
das
cmc
hlt
sub
jo
call
adc
lods
dec
xchg
test
add
jbe
sub
pop
mov
mov
aaa
and
ins
xchg
int
jae
cmp
jg
cmp
je
cmps
mov
js
fimul
sbb
pushf
nop
pop
addr16
stos
mov
mov
xchg
adc
sub
add
mov
push
jl
data16
ins
pop
jb
in
dec
jnp
test
xor
jae
fmul
jg
dec
cmp
cld
adc
pushf
xchg
in
mov
jb
mov
pushf
sub
lea
jp
jno
nop
sub
je
adc
lods
push
ret
adc
adc
and
imul
shl
jmp
push
js
fs
push
pushf
daa
pop
or
sbb
push
dec
mov
xor
sbb
mov
into
(bad)
cmp
inc
xor
and
add
iret
xchg
or
sub
xor
mov
sub
nop
fs
pop
sbb
pop
push
outs
jo
aad
add
pusha
ja
adc
mov
js
(bad)
mov
add
aas
pop
(bad)
ja
sbb
mov
sbb
dec
mov
sub
jl
cmp
jmp
cwde
pop
ja
push
or
mov
xchg
sub
add
adc
fs
ins
int3
push
cmp
mov
xor
cli
fs
xchg
xor
xchg
cli
jg
sub
jns
popf
cdq
int3
jo
xor
jmp
mov
mov
dec
imul
mov
loop
stos
pushf
sbb
cli
jne
test
jmp
daa
js
inc
mov
and
in
outs
lds
dec
dec
add
or
enter
inc
add
add
imul
jmp
cmp
dec
mov
pop
mov
sbb
div
add
addr16
push
dec
retf
push
or
inc
push
cmp
fs
fistp
ja
imul
dec
xor
hlt
pop
or
fnsave
mov
jno
push
sar
pop
and
inc
jle
pop
cmps
adc
retf
push
call
push
push
fsubr
xor
sti
pop
pop
inc
xchg
aad
jge
(bad)
int3
bswap
push
dec
(bad)
jg
call
ror
js
nop
rcr
sub
sbb
xor
icebp
push
lahf
push
or
inc
mov
dec
cmp
inc
ds
sub
imul
mov
pop
fs
fs
add
jnp
push
call
push
push
add
jge
in
hlt
xor
js
push
ss
inc
aam
sub
push
xchg
mov
xchg
xor
push
mov
pop
jns
lds
add
mov
(bad)
sbb
call
mov
bound
dec
pop
mov
inc
and
imul
mov
mov
and
jne
xor
push
and
dec
jge
or
mov
js
jl
aam
xchg
xor
xor
xchg
push
dec
dec
in
test
sub
xor
and
xor
mov
(bad)
jmp
rcl
mov
test
je
xchg
pusha
jmp
test
movs
xor
je
mov
add
dec
les
ja
loope
pop
daa
clc
cmp
cld
sbb
and
dec
pop
imul
outs
in
adc
mov
dec
js
cdq
pusha
in
je
outs
sub
jne
ds
(bad)
jmp
mov
shr
jmp
mov
xchg
js
xchg
mov
sbb
fwait
xchg
adc
or
lahf
arpl
add
popf
jb
cmp
push
data16
(bad)
mov
sub
mov
sbb
push
das
ins
push
imul
push
ds
pop
jge
pop
mov
push
jmp
aad
and
sub
jne
jne
add
cmp
fsubr
out
in
xor
les
movs
jns
xchg
xor
mov
xchg
jmp
dec
jo
js
test
mov
jbe
cmps
lahf
pop
dec
movs
pushf
inc
mov
test
mov
fs
xchg
mov
sahf
je
and
push
fld
inc
xchg
popa
outs
pop
adc
jne
jne
sub
push
inc
jl
aam
and
je
jl
leave
jl
jns
sub
pop
dec
pushf
fdivr
pop
int3
jl
inc
pop
addr16
jp
movs
mov
fisttp
mov
mov
xchg
std
mov
xchg
push
jl
and
adc
sbb
push
pop
dec
xchg
fs
lahf
nop
mov
cdq
inc
mov
dec
mov
ins
mov
cwde
in
mov
mov
and
repnz
js
ins
inc
fdivr
retf
imul
adc
out
xor
fwait
shl
xor
jp
dec
xor
test
dec
and
mov
mov
add
pushf
pop
xchg
xchg
push
mov
xchg
stos
daa
push
dec
fnstcw
adc
(bad)
mov
or
or
xor
retf
enter
sbb
xor
mov
imul
js
ins
inc
add
xor
mov
or
or
add
aaa
xor
rol
fcomp
stc
sbb
fldcw
adc
jo
jne
inc
and
jl
adc
(bad)
dec
jl
cs
and
mov
repnz
cmc
rol
scas
add
js
es
xchg
shr
sub
js
xchg
cmp
mov
add
in
cwde
loope
inc
movs
in
out
or
pusha
xor
leave
lods
jae
mov
lods
mov
imul
ja
mov
xor
mov
adc
mov
in
jl
ret
jl
(bad)
aaa
stos
aad
push
outs
add
jns
xor
test
pop
sub
adc
(bad)
jnp
adc
out
xchg
cmp
sbb
test
xchg
xchg
in
jmp
fwait
sub
cli
jg
xor
clc
out
fdivr
cmp
push
xor
xchg
mov
fld
mov
sahf
in
lock
sahf
xor
(bad)
mov
repz
mov
jae
push
and
add
shl
popf
sbb
jmp
les
sub
xchg
lods
(bad)
aam
push
popa
ds
cmp
mov
lock
add
imul
lock
jl
aad
mov
fsubr
cmp
stc
mov
popf
cmp
das
jbe
test
xor
aad
retf
dec
inc
mov
nop
jb
cmp
mov
(bad)
dec
cmp
data16
xor
scas
add
mov
cmp
fstp
call
jnp
mov
or
in
hlt
xor
pop
pop
jbe
jp
cmp
clc
adc
dec
inc
iret
jecxz
and
(bad)
push
iret
jl
add
xchg
call
and
adc
jae
clc
pop
push
inc
cli
in
std
loope
not
aaa
lock
in
in
aam
sahf
dec
mov
xchg
cmp
jg
push
push
pushf
ins
xlat
sub
xchg
dec
ds
sbb
xor
mov
sbb
shl
aam
outs
or
stc
cmc
int3
jg
clc
ins
jo
mov
sbb
mov
push
and
test
jo
ja
inc
scas
sub
jl
stc
shl
mov
outs
jl
enter
out
cli
je
fs
jl
jbe
or
ret
mov
inc
or
push
cs
aaa
inc
sbb
xor
out
ret
pop
std
mov
in
ins
pop
dec
xor
int3
pop
mov
test
rcr
xor
test
std
mov
(bad)
mov
push
and
add
pop
push
mov
ss
add
or
loope
(bad)
outs
push
jp
sti
repz
add
push
mov
or
xchg
cli
nop
imul
inc
pop
and
mov
jo
xor
fwait
inc
repz
sahf
cwde
jl
test
push
sub
hlt
sar
pop
enter
test
lods
je
cmp
inc
push
in
push
push
and
cld
call
push
mov
aam
dec
inc
and
call
fdivr
add
push
mov
je
xchg
mov
cmc
push
lock
push
gs
jnp
dec
les
popf
xchg
mov
jae
mov
inc
div
inc
and
sti
mov
mov
pop
push
cmp
in
jl
sub
in
fldcw
stos
jmp
add
rol
fdiv
gs
jae
adc
repz
inc
push
std
mov
sub
pusha
push
inc
sub
push
jl
mov
cld
int
ret
fsubr
enter
in
lods
js
mov
mov
call
movs
fist
push
mov
xchg
in
mov
(bad)
jle
cmp
sbb
push
pop
sub
push
dec
xchg
xor
ds
add
jp
ins
push
pop
xor
jne
jmp
(bad)
pop
fmul
mov
pop
add
jl
test
xchg
or
je
js
jo
or
outs
jbe
pushf
inc
push
neg
dec
arpl
fwait
jl
inc
sbb
rcr
mov
inc
retf
push
add
and
inc
dec
mov
add
xor
fcomp
movs
pop
cwde
lock
rol
xor
mov
inc
fadd
mov
jge
mov
and
dec
aam
xor
clc
push
push
cld
jne
push
cli
hlt
data16
je
mov
cdq
pop
leave
je
adc
sub
add
leave
loop
jge
pop
dec
sbb
imul
test
enter
in
std
sub
add
shr
pusha
pop
cmp
outs
or
stos
jne
dec
jge
xor
test
repz
test
lea
popa
pop
push
movs
xor
dec
ror
popf
je
add
mov
jl
mov
push
sub
in
mov
push
pop
and
inc
fs
mov
test
cmp
js
(bad)
fcomp
fsubr
sar
lods
test
mov
adc
mov
movs
push
jl
fmul
pusha
push
outs
jns
jno
mov
cld
dec
push
les
ins
call
cmp
cwde
ror
mov
loopne
std
ins
sub
out
sti
js
pushf
inc
xor
in
dec
ds
sbb
(bad)
jmp
cmps
ins
jl
mov
fwait
push
and
fst
(bad)
add
dec
mov
adc
dec
xor
add
dec
xor
push
test
xchg
test
push
lock
loopne
aam
add
loopne
mov
dec
repz
js
fdivr
pop
test
push
dec
push
adc
js
mov
jl
xchg
mov
jl
data16
or
or
bound
add
push
mov
inc
push
mov
mov
adc
in
pop
out
loopne
jne
sar
push
add
sub
loope
and
cli
push
aas
(bad)
int3
ficom
sbb
push
lods
stos
jo
in
add
test
xchg
xchg
nop
pop
and
sub
(bad)
ror
xchg
imul
sbb
(bad)
movs
mov
xor
clc
xlat
or
cs
into
call
aam
test
jl
out
jo
add
jmp
iret
stos
push
fldcw
je
pop
adc
in
repz
call
pop
imul
push
fcmovnu
and
pop
pusha
cmp
sub
imul
jp
inc
xor
sbb
cmp
and
in
sti
xor
jecxz
dec
cs
cmp
shr
cmp
popf
push
add
add
xor
gs
sahf
jb
jae
pop
dec
push
(bad)
fdiv
or
pop
or
in
loop
cmp
loop
test
xor
cli
test
push
cmp
bound
loopne
xchg
les
call
xor
sub
jl
adc
mov
gs
movs
(bad)
cmc
jl
cmp
in
daa
inc
mov
cld
mov
pusha
push
push
sbb
outs
push
out
mov
rol
popf
dec
sub
je
push
sar
movs
pop
fnstcw
and
cmp
sahf
xchg
nop
inc
js
push
xchg
lea
movs
loope
dec
dec
in
hlt
repnz
xor
and
fidiv
test
iret
stos
lods
push
jae
and
and
es
mov
pop
adc
sbb
sub
int3
enter
je
jl
push
xor
jns
outs
jbe
ins
push
je
outs
inc
jl
dec
cmp
call
loopne
jo
aaa
test
repnz
in
inc
sub
adc
into
jo
ins
inc
and
jl
xor
jbe
sbb
cmp
sbb
dec
push
aaa
or
push
movs
or
(bad)
les
mov
mov
call
shr
xor
mov
and
jl
add
jmp
xor
fidivr
cmp
push
or
pusha
jle
sbb
sub
inc
cmp
adc
jg
mov
and
add
xor
push
sub
mov
jnp
push
pop
and
js
ins
push
inc
cmp
dec
xor
jns
sbb
jns
inc
pop
jp
sbb
repz
jl
mov
in
push
int3
movs
jae
or
jp
add
mov
jo
nop
push
js
sbb
int3
ins
fdiv
mov
mov
call
or
fcomp
push
loope
and
sub
and
jne
cmp
int3
jne
data16
jae
sub
push
loopne
mov
jne
sbb
imul
pusha
sbb
test
sbb
pop
sub
jb
sbb
jne
xor
and
sbb
aam
test
test
mov
jp
cmp
idiv
in
movs
xor
rcr
(bad)
(bad)
js
push
in
mov
inc
call
dec
mov
outs
jl
add
xor
sub
pop
cld
or
sub
fistp
pop
dec
aas
(bad)
push
cmp
and
jo
sbb
xor
jl
jnp
pop
add
ja
xchg
pop
and
cmp
cwde
xor
push
jne
bound
test
jp
inc
adc
clc
push
jmp
enter
xor
cld
cmp
pop
inc
adc
int3
adc
cs
movs
mov
fs
int3
ins
push
and
idiv
std
push
or
shl
dec
out
ins
fild
cli
mov
push
mov
inc
(bad)
mov
pushf
mov
mov
sub
call
jno
sbb
lods
sub
xor
in
xchg
sub
cmp
and
adc
add
cli
jp
jo
xchg
jo
xchg
jmp
add
js
(bad)
js
and
call
push
pop
jae
dec
lods
int3
xor
and
js
push
out
std
in
fidivr
cmp
sub
push
pop
xor
pusha
inc
(bad)
jmp
fs
aad
cwde
std
sar
int3
mov
xor
shr
ret
jns
cmp
push
out
cdq
test
xor
jo
lods
xchg
pop
jl
test
xchg
fcomp
cli
add
out
call
mov
jbe
imul
test
add
cmp
(bad)
lock
push
and
js
les
dec
xchg
push
mov
adc
dec
(bad)
js
repnz
sti
clc
inc
and
daa
adc
stc
ins
or
in
and
call
pushf
push
idiv
in
ds
push
sbb
(bad)
mov
jae
stos
push
and
sub
popf
mov
dec
pushf
sbb
sbb
fimul
retf
dec
js
test
pop
xchg
loop
addr16
ret
cmps
dec
pushf
jns
xor
and
inc
and
dec
das
jne
push
cmp
push
xor
fs
cmp
or
bound
loope
and
and
rcl
add
rcr
js
mov
mov
ds
jae
push
cmp
cmp
jp
xor
mov
rol
jl
sub
push
or
loopne
xor
add
test
in
sbb
psubusw
fidivr
adc
pop
or
ins
dec
sbb
push
and
cmps
nop
test
sahf
ins
imul
in
push
sub
fs
xor
adc
dec
in
inc
or
and
inc
std
jo
cmp
dec
jo
les
pop
pop
jne
add
ret
adc
or
xor
jl
jmp
rcl
sbb
jb
ins
mov
cwde
aas
sub
mov
sbb
je
jmp
xor
jl
cmp
sub
jns
dec
sub
js
and
pushf
shl
in
nop
pop
xor
xchg
jo
sub
push
xor
push
adc
(bad)
hlt
push
les
js
fidivr
xor
fadd
dec
xor
and
add
jnp
push
cmp
push
cmp
js
ins
imul
sbb
repnz
cmp
test
or
aad
stos
xchg
jo
jg
movs
push
je
jbe
jnp
push
aaa
popf
inc
das
dec
xchg
mov
out
test
test
pushf
cmp
pop
adc
push
xor
jge
fs
or
int3
pop
pop
cmp
sbb
cmc
or
sbb
dec
aas
js
ins
push
std
mov
sub
repnz
cmp
xchg
es
jo
xor
mov
int3
dec
push
cmp
std
xor
sti
push
cmp
aam
or
je
pop
fucomp
jo
mov
adc
fcom
retf
ins
mov
dec
scas
xor
adc
xchg
in
add
jmp
or
cs
cli
les
aaa
and
sub
mov
pop
es
jne
sbb
mov
push
inc
add
dec
mov
sub
mov
bnd
jb
dec
test
fs
pop
inc
sbb
pop
mov
xor
fs
xor
sub
cmp
jmp
popf
inc
xor
jge
popa
push
cmp
test
retf
loop
xor
js
sub
adc
or
mov
inc
dec
jae
cli
js
push
loopne
push
dec
push
mov
and
cmp
jmp
(bad)
dec
das
in
pop
inc
and
push
js
je
pusha
inc
mov
dec
gs
sub
add
inc
jbe
arpl
xor
inc
dec
push
xor
add
inc
dec
inc
cli
mov
cmp
inc
aaa
fadd
push
cmp
inc
ja
dec
test
int3
ret
push
pop
add
and
jl
mov
xchg
cld
jmp
dec
jmp
sub
fadd
xor
dec
sar
push
inc
fdiv
add
inc
push
fs
js
inc
bound
xchg
fs
add
gs
push
mov
mov
(bad)
je
dec
push
dec
pop
inc
pop
dec
cmp
sbb
in
xchg
nop
add
inc
cmp
xor
cmp
or
jns
add
pop
test
add
retf
fwait
xchg
out
or
fs
aas
jl
jbe
loope
sar
loopne
jle
mov
xor
push
dec
and
adc
sub
push
lea
lods
pop
fsub
inc
cli
push
jl
mov
sbb
push
sti
pushf
ins
push
imul
jns
imul
dec
add
jns
inc
add
jl
js
jbe
cmp
inc
mul
std
test
sub
dec
dec
cs
mov
mov
aam
stos
ret
mov
sahf
xchg
cs
in
test
xchg
sub
scas
fs
push
out
je
test
mov
aam
outs
les
les
inc
or
push
call
dec
mov
je
and
movs
jae
inc
not
mov
mov
pusha
add
fs
or
jl
(bad)
fldpi
xchg
xor
ss
hlt
aas
lea
xlat
in
and
jbe
data16
lock
pushf
xchg
(bad)
js
jl
or
cmp
or
cmc
or
xchg
jo
jo
jns
push
sub
mov
into
int3
call
sub
test
pop
inc
js
pop
inc
shl
dec
push
ins
pop
fnstcw
je
mov
push
stos
ins
and
cmp
mov
movs
sbb
js
addr16
mov
dec
ins
cwde
sub
imul
loope
ins
add
inc
out
push
add
or
cli
les
test
sub
push
mov
dec
cmp
cmp
push
inc
add
jne
dec
inc
cmp
push
lods
push
or
push
out
out
inc
mov
gs
inc
sub
aam
and
mov
sub
movs
xchg
sub
sbb
outs
inc
xlat
pop
sahf
rol
fs
sbb
jg
push
or
jae
(bad)
je
or
cmp
cwde
push
sub
pusha
push
sub
pushf
dec
sub
xchg
inc
push
cmp
pop
inc
sub
push
pop
dec
and
jl
or
ins
(bad)
lods
jae
jne
jge
pusha
dec
xor
mov
loopne
sbb
inc
movs
xor
jo
je
movs
jl
rcl
js
jb
xor
mul
jne
daa
sub
mov
into
(bad)
ins
push
xor
popa
dec
jbe
pop
push
dec
xchg
or
je
push
jne
pop
jnp
push
cmp
push
push
lods
das
jne
sbb
push
jns
cmp
add
rol
retf
xchg
icebp
mov
ret
leave
push
jl
mov
cmp
dec
xor
ss
je
daa
xchg
cmp
fs
arpl
pop
imul
and
test
xchg
push
leave
dec
int3
mov
shr
jl
fs
jg
nop
push
das
or
fisttp
imul
arpl
bound
inc
dec
inc
movs
cmp
cwde
popa
scas
jle
lds
pop
inc
mov
outs
xor
sti
daa
cmp
pop
inc
inc
xchg
or
push
ins
inc
test
dec
and
or
xchg
push
cmps
inc
or
sbb
dec
cmp
je
push
test
ds
das
jo
daa
pop
in
push
pop
cmps
sbb
sub
sbb
push
sub
data16
bound
cmp
inc
jp
les
loope
xchg
sub
clc
je
fdiv
pop
cli
mov
cmp
inc
inc
fcomp
push
push
test
pop
pusha
add
pushf
xchg
sub
pop
xor
dec
pusha
and
arpl
in
push
jne
sahf
cli
movs
cmp
pop
cmp
dec
jl
push
std
push
jmp
mov
movs
jl
dec
push
xor
mov
inc
add
dec
adc
sbb
lods
in
call
jg
or
push
test
xor
pop
pop
fisttp
push
(bad)
int3
dec
cmp
test
movs
nop
jne
jo
ja
das
dec
out
and
daa
clc
mov
xchg
dec
pop
push
in
mov
push
dec
inc
aaa
mov
test
loop
xor
js
and
aam
mov
sub
inc
inc
push
or
dec
fs
inc
push
ins
jne
arpl
addr16
je
sbb
pcmpeqb
test
push
iret
gs
ins
adc
ins
mov
sub
or
data16
shr
push
mov
xchg
push
pop
push
sbb
mov
movs
sti
ds
inc
test
jo
pushf
xchg
ss
sub
nop
cmp
add
cvttps2pi
cmp
mov
scas
les
in
jmp
xor
arpl
inc
push
popf
inc
cmp
inc
xor
gs
inc
ja
and
mov
repz
push
in
mov
push
pusha
adc
sbb
xchg
jo
or
mov
adc
ds
int3
cwde
pop
sub
xor
pop
dec
je
cmp
jecxz
add
inc
loopne
das
xchg
pop
add
pop
jp
and
pop
mov
push
iret
mov
aaa
dec
test
dec
and
push
scas
mov
es
pop
sub
hlt
stc
xor
cmp
fstp
aad
js
lock
push
out
ror
add
mov
jo
clc
stc
outs
je
cli
xor
xor
test
sub
je
or
jle
addr16
mov
pop
sub
ins
in
xor
test
sbb
out
cmp
inc
adc
push
jae
cmp
mov
cmp
cmp
sbb
pop
or
pusha
sbb
push
pop
fwait
shl
int3
jp
les
es
ret
lock
pusha
aad
je
adc
test
stc
pop
sub
mov
push
addr16
mul
aam
outs
mov
sti
cld
mov
test
inc
test
mov
jo
xor
inc
inc
in
jo
sub
test
inc
xor
sbb
xor
ins
adc
and
sbb
cmp
sub
jmp
out
leave
(bad)
ret
sub
inc
mov
in
jecxz
lds
and
test
push
sbb
and
fsub
push
pop
in
test
cmp
imul
ins
inc
mov
add
(bad)
mov
es
pop
adc
cwde
loope
sub
cmp
cmp
nop
cs
sbb
xor
je
cmp
dec
xor
je
outs
std
push
pop
push
clc
rol
cmp
ds
xor
test
or
adc
jge
cld
pop
or
and
neg
out
sahf
lods
mov
out
das
bound
push
add
push
and
cmc
push
adc
jo
cmp
stc
pop
sub
mov
fs
or
xor
je
das
je
inc
ss
push
pop
lods
mov
js
movs
call
pop
rcl
das
fcmovbe
jmp
xor
cwde
mov
push
or
mov
das
sub
inc
pop
les
xchg
push
push
xchg
or
dec
mov
sub
mov
js
test
sti
xor
and
ds
add
adc
popf
std
and
sbb
xor
xor
addr16
or
cli
xor
movs
popf
ins
nop
xchg
jae
(bad)
cli
in
jb
jmp
fsub
jl
pop
jbe
ins
pushf
mov
test
js
sub
js
adc
sub
nop
xchg
xor
into
jns
push
dec
mov
dec
gs
mov
mov
(bad)
cmc
add
push
xor
out
push
add
nop
and
scas
mov
adc
jnp
cmp
or
cmp
pushf
into
test
jg
jns
js
shr
sub
repnz
mov
cli
push
cmp
push
sbb
addr16
cmp
jbe
inc
cmp
xchg
jae
js
jnp
scas
movs
xchg
movs
push
movs
cmp
dec
cmp
neg
inc
mul
dec
pop
add
adc
stc
push
or
pop
jne
pop
inc
sbb
repz
mov
pop
add
popa
or
sub
sahf
push
mov
imul
mov
je
add
clc
or
je
or
les
test
xor
jl
test
dec
pushf
ds
test
jle
xchg
je
and
mov
in
dec
std
je
pop
icebp
adc
sbb
xchg
and
inc
(bad)
jmp
push
into
jbe
or
pop
aam
fsub
xor
sub
jl
enter
jno
jp
xor
and
or
push
imul
xlat
cs
stc
add
jp
gs
pushf
mov
(bad)
fld
adc
call
std
test
push
and
in
fs
out
cmp
fdivr
xor
push
sti
adc
and
jge
ins
jnp
sbb
imul
xor
or
jae
push
jge
inc
push
inc
lea
mov
pop
ins
inc
les
push
cmp
cs
mov
test
push
dec
imul
ins
call
fild
test
outs
jmp
jo
sbb
push
test
adc
clc
icebp
adc
push
(bad)
int3
pop
outs
cmp
addr16
push
js
fwait
mov
pushf
and
xor
stos
jbe
js
fcomp
outs
shr
gs
push
das
jae
or
or
(bad)
imul
sar
js
mov
je
(bad)
mov
mov
les
bswap
sbb
or
jns
add
sbb
in
in
jbe
inc
push
xchg
mov
xchg
ds
sub
sbb
mov
(bad)
cmp
inc
les
or
jno
push
outs
pop
pop
jne
dec
jl
int3
mov
jle
mov
(bad)
mov
js
dec
jbe
and
push
mov
fnstcw
lds
loop
jmp
fdiv
and
pusha
inc
ds
inc
jne
je
push
and
dec
addr16
jnp
retf
xor
jl
xor
(bad)
adc
popf
ds
pop
inc
adc
mov
jno
push
sub
jne
and
js
fcmovbe
or
lea
ins
xor
loop
jp
iret
repnz
cwde
fisttp
int3
js
or
or
js
fld
dec
js
pop
out
cmp
pop
pop
xor
pop
(bad)
cld
or
lock
sub
jp
jl
adc
rcr
enter
push
push
int3
imul
lods
cmp
and
pop
js
fwait
xchg
je
test
inc
mov
jae
push
clc
test
cmp
loopne
dec
mov
dec
push
rep
or
sbb
pushf
pop
and
cmp
ins
sub
enter
jmp
push
mov
xchg
test
pop
xchg
mov
das
push
ret
out
test
jle
inc
cs
rol
loope
mov
xor
sub
scas
cmps
in
sbb
fnstenv
jl
and
(bad)
adc
dec
sbb
pop
test
pop
dec
outs
ret
loopne
out
mov
pop
std
jl
out
mov
sbb
pop
scas
std
jo
aam
and
int3
stos
aas
aam
jl
xor
mov
adc
add
xor
and
jo
xchg
je
call
push
outs
aas
stc
cwde
js
push
adc
mov
out
add
push
xchg
mov
xchg
clc
je
push
adc
nop
adc
in
mov
rol
and
push
sbb
xor
jp
popa
dec
mov
jne
nop
enter
loopne
test
dec
jl
rcl
jle
and
loope
mov
add
and
cmps
fmul
in
aam
cdq
sub
mov
lock
jmp
xor
sahf
popf
add
mov
sbb
mov
popf
or
test
inc
sub
dec
aaa
xor
cld
adc
xor
pop
fcomp
test
outs
jo
mov
jl
sub
xor
sbb
cmp
xor
aam
enter
pop
mov
cmps
sar
mov
int3
and
imul
in
jne
mov
and
jl
stos
fadd
xor
out
fcomp
pop
pop
mov
mov
or
pop
mov
and
(bad)
mov
scas
dec
sahf
mov
xchg
xor
sub
fs
ret
pop
mov
xor
mov
add
or
mov
jmp
or
cmps
ret
push
in
add
sbb
sub
test
(bad)
arpl
fdiv
xchg
mov
imul
test
stos
or
or
jmp
aam
loope
inc
clc
lea
push
mov
cmp
xchg
pusha
push
cmps
jp
push
sbb
add
add
js
je
jmp
jl
mov
mov
pop
(bad)
cld
loopne
pop
es
(bad)
iret
repnz
jne
js
and
mov
jge
cld
sti
repz
mov
sub
mov
nop
xlat
add
lock
xchg
xor
aad
xchg
inc
test
cdq
mov
cld
(bad)
xchg
dec
cli
pop
xor
fist
outs
in
into
retf
push
push
mov
sub
mov
hlt
(bad)
addr16
and
jp
sbb
sbb
mov
mov
test
dec
paddd
ins
xor
sbb
mov
pushf
fwait
mov
or
mov
mov
add
xchg
mov
test
xchg
xchg
mov
dec
mov
mov
lahf
push
cdq
nop
or
vprotd
inc
add
movs
push
mov
push
inc
pushf
int3
sti
cmc
add
push
in
xlat
rol
and
dec
inc
xor
into
cmp
das
enter
xchg
xchg
mov
xchg
js
popf
jne
xchg
(bad)
pop
cwde
mov
xchg
inc
mov
js
inc
mov
xchg
dec
xchg
ret
fwait
js
cdq
mov
cmp
sahf
call
lods
test
pop
dec
pop
je
sbb
retf
int
sbb
jl
or
into
call
jno
aaa
test
outs
pop
push
inc
loope
and
js
jmp
pop
js
cmp
arpl
or
xor
jle
jne
movs
add
out
cmps
mov
sub
cwde
mov
nop
fadd
jmp
xor
pusha
cmps
push
pushf
xchg
xchg
mov
adc
pop
loopne
sar
push
cmp
mov
das
les
xchg
sahf
or
jl
mov
clc
out
fsubr
pop
cmp
cmp
xor
call
pusha
add
jns
retf
mov
loopne
cmps
mov
fcomp
or
ds
das
mov
xchg
fwait
sar
sar
test
(bad)
in
ds
fadd
xlat
in
js
pusha
jmp
sar
cmps
mov
xchg
push
callw
outs
ins
stos
lahf
js
jmp
shr
xchg
mov
push
fwait
sub
mov
popf
cmc
out
cmp
nop
pop
push
dec
sub
ss
je
xor
push
lds
jmp
lock
rcl
cmp
shr
push
fstp
dec
nop
out
mov
jp
aad
xchg
test
pop
rol
sar
jl
loop
stos
cmc
into
push
dec
jl
mov
stos
sbb
lahf
jbe
dec
cwde
adc
(bad)
loopne
inc
sbb
jae
imul
adc
ins
push
adc
aaa
jle
data16
jnp
xor
or
push
std
mov
in
fs
jbe
add
cmp
in
mov
push
sub
push
cli
mov
mov
out
repz
jl
das
sub
add
movnti
xor
test
mov
push
cs
or
js
shr
add
in
cwde
(bad)
jnp
test
push
add
nop
and
cmps
ins
fwait
jge
call
lock
push
das
inc
ficomp
jg
in
test
daa
shl
cmc
sbb
ins
mov
xor
je
sbb
xor
jne
xchg
jmp
fucomi
repnz
sbb
jb
jmp
pop
cmp
test
outs
fstp
sar
out
fisttp
or
(bad)
enter
adc
pop
lods
ins
mov
sub
sub
push
les
inc
push
sti
pop
adc
pushf
push
cld
fsubp
xor
and
pop
mov
sbb
ins
fwait
jp
cmp
mov
fst
pop
push
daa
push
mov
push
fidiv
xchg
adc
scas
jne
pop
pop
dec
cli
mov
sbb
aas
sbb
push
inc
cmp
inc
cmp
add
push
push
sbb
push
push
and
mov
test
jns
js
test
pushf
cmp
xchg
inc
mov
pushf
test
(bad)
push
jo
fidiv
sub
sbb
mov
pop
pop
jmp
stc
js
es
inc
mov
xchg
int
mov
aad
cmp
fwait
dec
movs
test
sbb
into
clc
pop
ins
ins
pop
ret
pop
sub
push
jbe
dec
iret
sahf
cmp
add
sub
movs
inc
jl
or
push
mov
and
addr16
sbb
cwde
mov
inc
push
je
je
dec
add
dec
lahf
push
xor
ds
pop
jne
xor
js
dec
std
lods
imul
or
test
pop
cmp
cs
mov
pop
mov
lahf
fs
push
add
jmp
movs
js
vmptrst
fs
sbb
and
inc
dec
mov
mov
in
push
push
test
mov
shl
push
bound
lods
test
aam
leave
cdq
dec
test
pop
jmp
mov
mov
or
js
sub
jbe
pop
fadd
cli
jl
push
sbb
push
dec
in
push
push
dec
ror
int3
js
dec
dec
and
ins
dec
and
jl
and
jge
pop
bound
int3
sub
fcomp
xchg
mov
mov
jle
add
xlat
cmp
mov
in
cwde
push
imul
pop
gs
pusha
arpl
ror
fcomp
push
pop
xchg
mov
add
nop
fild
jle
js
add
mov
push
xor
lods
out
test
adc
and
adc
xchg
stos
iret
scas
cmp
and
adc
jnp
adc
fadd
mov
js
dec
std
nop
dec
inc
push
clc
mov
and
jl
push
push
aaa
ds
cs
dec
cmp
jp
bound
jmp
mov
dec
dec
in
or
jo
xor
popa
fsubrp
outs
sbb
cld
(bad)
jnp
stos
test
fdivr
cmp
ds
adc
retf
int3
lods
or
add
add
loope
fs
std
ins
jmp
pop
cmp
dec
cs
adc
mov
pop
call
test
xchg
stos
and
xor
mov
jl
jo
nop
pop
push
push
sub
adc
push
dec
sbb
lock
aam
push
js
aas
inc
rcr
xchg
mov
shl
js
sti
ins
dec
push
jne
pop
add
mov
in
jl
inc
xchg
pop
mov
retf
adc
cmp
test
aam
ds
dec
fcom
push
mov
mov
in
outs
mov
push
jnp
je
dec
jne
or
xor
adc
cld
jbe
inc
sbb
mov
jge
dec
jmp
push
aad
(bad)
sub
dec
mov
adc
push
loopne
inc
inc
and
xchg
cmp
sbb
dec
dec
push
sub
and
mov
clc
imul
cmp
je
int3
ins
inc
inc
dec
add
adc
shl
pop
mov
mov
mov
mov
xchg
mov
outs
ins
sub
sahf
cmp
or
leave
mul
xchg
xor
push
sbb
jne
inc
cmp
xor
add
pop
ds
hlt
js
je
movs
js
fdivr
(bad)
jl
pop
inc
adc
loope
mov
lea
(bad)
ins
fcmovu
or
cld
cmp
std
shr
aaa
cld
cli
inc
daa
out
xchg
imul
xor
dec
mov
and
aam
shl
popa
shr
adc
sti
xor
call
add
in
repz
xchg
push
push
cmp
nop
in
je
mov
dec
xor
and
push
je
lods
mov
pop
mov
adc
or
jns
pop
das
jne
push
jp
push
pop
cmp
ss
sub
clc
dec
in
and
inc
cmps
lock
fs
addr16
ret
fnstenv
cld
jmp
dec
cwde
sub
(bad)
and
jg
or
ja
or
cmp
xor
xor
hlt
and
test
adc
ins
jb
and
ja
sbb
mov
(bad)
out
fxch
push
sbb
pop
je
pop
pop
sbb
vmwrite
repz
std
pusha
sbb
adc
pop
xchg
in
js
mov
test
movs
nop
and
pushf
push
mov
sahf
addr16
pop
test
(bad)
pusha
jae
jmp
inc
jp
dec
push
cmp
dec
pop
add
pop
inc
fsubr
cs
adc
xor
jns
dec
sub
les
mov
jmp
xlat
loop
sub
mov
sub
pop
aas
inc
mov
hlt
xor
fmul
(bad)
push
adc
test
clc
test
into
outs
mov
shl
mov
mov
push
shr
in
js
fdiv
loopne
pop
dec
jge
xor
cld
in
xor
int3
mov
or
movs
movs
aas
pop
mov
je
mov
cs
cli
ins
test
xor
cmp
push
outs
push
jo
ins
cmp
es
dec
cs
adc
sub
and
dec
sub
imul
(bad)
jl
lods
test
das
fs
mov
jmp
rol
cmps
mov
pop
and
ins
xchg
loop
add
push
call
outs
add
mov
mov
loopne
jmp
add
outs
(bad)
repnz
int3
in
jecxz
ret
mov
nop
popa
and
pop
or
js
or
stc
fsubr
xor
dec
jl
mov
xchg
mov
fistp
movs
stos
popf
pop
test
pushf
adc
cmp
push
jp
dec
pop
cmp
dec
pop
in
push
cmp
dec
sub
pop
das
cmps
idiv
daa
cmps
add
pop
inc
or
cmp
jl
jo
push
push
push
sub
cdq
sar
js
push
pop
imul
test
sbb
test
add
clc
cwde
jmp
cmp
in
xor
icebp
ja
cli
sti
mov
retf
inc
ret
jle
ins
out
cli
js
cs
in
in
push
or
in
fs
mov
out
push
or
pop
mov
jle
fsub
rcl
in
ds
(bad)
sbb
mov
cmp
and
adc
cmp
mov
xor
(bad)
call
cs
pusha
ss
lods
lods
test
add
pop
mov
add
arpl
mov
or
sub
cwde
imul
lods
gs
ins
std
pop
mov
xor
cld
imul
jnp
(bad)
out
pushf
into
out
out
fnstsw
icebp
jmp
lock
mov
xchg
mov
sti
and
js
call
mov
(bad)
js
mov
cmc
jl
mov
je
cmp
cmps
std
je
pop
repz
out
std
cmp
adc
or
sbb
sbb
push
sub
test
or
mov
and
cmp
xor
in
in
xor
jo
xchg
fs
cs
sub
(bad)
cmc
push
mov
sub
mul
js
mov
out
sbb
icebp
sub
cld
iret
dec
in
lock
test
sbb
fs
out
cmp
vunpckhps
pop
mov
lods
sar
imul
pusha
retf
loopne
sbb
cmc
in
sar
cli
jl
test
stos
test
add
(bad)
cli
scas
shl
(bad)
aad
jne
std
sti
jl
push
imul
nop
add
cld
cmp
xor
and
sub
sbb
pop
jl
in
les
test
nop
push
test
fmul
loopne
addr16
jo
add
sbb
lock
std
clc
shr
pop
jl
sub
cmp
fdivr
add
pop
repz
outs
enter
mov
in
test
aam
mov
(bad)
(bad)
pushf
ror
aad
in
pushf
test
retf
mov
jle
jl
fs
call
xchg
pop
sti
mov
les
shl
dec
pop
jne
xor
jl
ds
add
pop
sub
push
adc
test
or
clc
push
sbb
xor
jnp
xor
xor
pushw
call
shr
sub
inc
rol
lods
outs
cmc
int
sbb
loop
dec
sub
shl
shl
mov
cmc
hlt
push
loopne
cmp
sub
jnp
stos
ror
pushf
xchg
mov
add
mov
push
jae
fwait
cmp
in
out
cmp
mov
je
sahf
mov
jl
mov
jl
or
pop
push
add
jae
aas
jnp
test
(bad)
dec
movs
add
dec
test
sbb
xchg
sbb
jne
xor
fidivr
fistp
leave
sub
sahf
(bad)
js
mov
std
jno
cmp
out
jp
in
add
mov
leave
xor
call
(bad)
push
lock
add
lock
cmp
mov
loop
je
shr
ret
sub
shr
shr
add
scas
ret
mov
ins
mov
test
xor
jbe
stos
mov
mov
fs
in
xlat
ret
(bad)
or
push
pop
adc
pop
cli
xor
sbb
add
mov
pushf
sub
in
xor
clc
and
jp
cmp
and
mov
cwde
ja
adc
shl
stos
cmp
(bad)
jno
ret
test
addr16
or
jb
out
xchg
inc
fild
adc
cmp
cld
clc
mov
movs
cli
dec
cld
sbb
mov
sbb
mov
fld
fs
jmp
xchg
lea
inc
pop
jae
pop
sti
sbb
out
push
aam
sbb
sub
mov
sbb
stos
rcl
nop
sbb
pop
cmp
xor
cld
pop
test
vmread
adc
xor
mov
and
jge
pop
gs
push
fidivr
push
iret
adc
loop
and
pop
and
push
loope
and
jbe
gs
outs
pop
js
and
lock
aad
clc
loopne
mov
std
loopne
loopne
cwde
leave
xor
mov
mov
sub
fiadd
call
loope
les
cmc
fst
cmp
sbb
mov
ficom
js
xlat
fimul
adc
fcom
test
push
jae
ja
pop
cmp
xor
mov
aam
add
fcomp
pop
sub
jl
push
das
or
jmp
cmc
or
push
(bad)
shr
mov
jl
jne
js
jl
je
jo
jne
ins
mov
int
mov
adc
sbb
shr
sub
cwde
in
pushf
pop
mov
and
mov
call
idiv
mov
loopne
jae
and
pop
jmp
sbb
int3
xor
test
pop
xor
sbb
mov
cwde
div
js
call
push
stc
or
push
add
test
and
popf
cmp
lods
sbb
add
cmp
in
cmp
cmp
add
sbb
or
daa
sti
add
imul
stos
xchg
mov
aam
scas
fs
sub
inc
leave
mov
js
jne
dec
cld
je
ins
jbe
push
adc
or
out
cmp
in
je
push
cmp
movs
fcomp
rcl
cmps
push
jnp
stc
adc
popf
hlt
or
or
push
test
jmp
sub
sbb
addr16
pushf
ins
jo
in
dec
pop
ss
outs
fidivr
std
test
push
ins
push
mov
push
pop
jno
inc
pop
xor
addr16
xchg
dec
inc
das
movs
adc
xor
add
sub
or
sbb
sub
pop
sbb
and
loope
rol
scas
retf
ret
cmp
xchg
pop
(bad)
or
mov
stos
loope
add
cmp
inc
xor
fdiv
in
clc
aam
mov
jecxz
in
cmc
push
cli
call
(bad)
mov
mov
or
mov
mov
push
mov
mov
push
outs
les
leave
sub
and
dec
fisubr
dec
mov
pop
sub
and
pusha
iret
jne
inc
out
jo
push
pop
sub
pop
and
pushf
call
cmp
xor
adc
lods
adc
mov
cs
sbb
mov
js
jl
pop
lea
fild
sub
sub
cmp
int3
jb
cld
sub
int3
xlat
retf
into
in
xor
jns
pop
das
jns
in
add
or
std
fmul
and
std
pushf
inc
mov
ror
dec
push
popa
je
dec
cmp
adc
fs
jne
pop
sub
arpl
out
test
std
xchg
dec
push
aaa
test
sub
dec
pop
and
add
scas
pop
dec
dec
jp
cmp
adc
sub
jg
mov
sub
js
jbe
out
push
xor
xchg
inc
in
dec
jl
ins
pop
pmulhuw
cmps
mov
inc
mov
cmc
add
(bad)
xchg
shl
in
ds
movs
test
inc
cmp
mov
cmc
dec
jp
dec
push
out
mov
popa
addr16
pop
pop
gs
push
push
fs
xor
dec
cs
push
popa
cmp
sub
dec
push
jge
pop
bound
pop
dec
pop
sbb
and
push
cmp
popa
mov
push
sbb
adc
sbb
dec
adc
js
test
push
or
mov
ins
xor
xor
clc
push
jnp
je
pop
jl
js
jg
sub
mov
and
xchg
test
push
clc
xchg
je
pop
dec
pop
pop
jae
add
out
add
call
adc
aam
inc
push
add
dec
loopne
pop
popa
ss
test
push
sub
mov
jg
mov
pop
and
arpl
cmp
xchg
push
pop
js
push
pop
mov
or
fst
arpl
and
push
mov
push
ja
inc
xor
pushf
sbb
in
xor
xor
push
push
and
sub
push
fs
ror
jl
mov
inc
xchg
das
jl
das
(bad)
hlt
jbe
jno
cmp
pushf
push
add
je
add
jp
adc
xor
and
cwde
mov
enter
pop
and
js
pop
fdiv
push
push
sbb
std
push
xchg
and
das
sbb
je
test
stos
pop
sub
mov
dec
adc
and
push
test
mov
mov
cmp
pop
jno
rol
cmps
repnz
add
(bad)
aad
icebp
xchg
inc
lock
ds
dec
inc
loopne
movs
xchg
or
fimul
enter
dec
push
fild
push
cmp
je
push
push
inc
rcr
jo
jl
dec
mov
push
sbb
js
push
sbb
push
dec
dec
fwait
and
je
push
dec
dec
push
inc
dec
imul
popa
sbb
sub
sar
xor
cmp
sbb
sbb
cli
ins
jb
xchg
mov
sub
dec
repz
dec
and
inc
xchg
push
fcomp
jl
mov
dec
cmc
(bad)
push
dec
inc
int3
ins
call
dec
ret
mov
cld
in
xor
push
push
sub
gs
pop
in
pop
dec
inc
dec
sbb
or
jl
and
pop
test
ds
push
jl
jp
sub
jl
jp
js
addr16
xlat
push
or
js
add
xor
(bad)
cmc
enter
fdiv
inc
les
xchg
cmp
and
je
pop
js
xchg
sbb
pop
retf
ins
dec
(bad)
pushf
push
js
inc
dec
test
sub
pop
push
pop
scas
inc
push
les
sbb
pop
fbstp
in
dec
push
out
inc
cmp
cld
push
das
cmp
in
jl
jp
sbb
inc
mov
xor
sub
cwde
ror
hlt
pand
test
dec
imul
pop
fdivr
push
xor
les
push
test
inc
(bad)
fdiv
mov
fs
idiv
je
xor
jl
cmp
adc
test
jmp
pop
jae
push
push
adc
pop
push
cmps
cmp
dec
dec
mov
dec
push
sbb
cmp
cmp
cmp
pop
jp
test
mov
leave
sbb
cwde
jmp
sub
mov
push
cmp
es
cmp
in
fsubr
bound
fs
addr16
pop
addr16
jp
pop
pop
xor
movs
sub
and
push
sbb
ins
pop
pop
jns
bound
movs
std
push
push
sub
and
out
adc
js
repz
pusha
inc
dec
push
adc
dec
pusha
mov
fnstenv
sar
je
repz
jl
mov
outs
jp
sub
and
shr
(bad)
lock
imul
fs
pop
pop
pop
cmp
mov
push
pop
inc
dec
and
dec
sub
push
addr16
outs
xor
sub
xor
je
or
jmp
je
enter
jns
outs
inc
das
call
enter
fimul
xchg
pop
loope
and
push
xor
jb
ret
fdiv
pop
sbb
and
fldenv
call
cmc
js
xchg
sti
in
jbe
rol
ins
mov
repnz
ret
mov
inc
jge
outs
jne
add
hlt
jmp
adc
fs
add
test
gs
pop
and
mov
inc
adc
jb
lds
je
mov
fsubr
sub
or
pop
sub
test
push
push
hlt
sbb
outs
push
js
mov
push
call
lods
ins
inc
ins
sub
push
cs
or
jo
in
popa
dec
jge
jae
inc
clc
scas
ins
jmp
push
addr16
fld
jne
push
push
dec
xchg
daa
and
adc
mov
mov
mov
stos
in
fbstp
xor
out
jne
push
outs
clc
in
push
or
jo
pop
push
pop
sub
push
pusha
js
cmp
pop
ins
sbb
jnp
pop
js
jp
je
inc
dec
pop
sub
cmp
pop
pop
pop
cmp
pop
cmp
inc
dec
add
cmp
sub
push
pop
pop
fisubr
je
inc
fs
sub
nop
push
xchg
lods
xchg
js
sub
adc
sub
jnp
mov
stos
mov
xchg
mov
test
jge
lea
(bad)
pop
icebp
mov
xchg
xchg
mov
shl
inc
sub
mov
or
mov
mov
je
loope
mov
jle
mov
sub
mov
and
hlt
cmp
ret
jo
ins
xchg
mov
mov
jbe
or
mov
pop
mov
int3
test
mov
cmps
ds
outs
sub
push
and
and
jns
repnz
shr
mov
inc
enter
cld
xchg
sbb
loope
mov
iret
(bad)
ins
fsub
mov
ret
add
ja
add
and
int3
adc
ja
sbb
mov
ins
inc
xor
iret
sub
ja
and
lds
jg
adc
xor
mov
and
sub
dec
lds
arpl
hlt
popf
push
sub
je
sub
cmp
and
and
or
adc
sbb
xor
rcl
and
loope
cmp
and
sbb
pop
lock
adc
enter
cdq
rcr
mov
int
mov
das
dec
int
cmp
rcr
jecxz
ins
or
outs
jb
add
js
je
and
fidivr
jp
test
pop
mov
dec
stc
add
in
hlt
pop
(bad)
sar
pushf
cwde
loope
test
scas
hlt
pop
sti
mov
adc
xchg
loope
push
nop
call
add
push
mov
call
mov
jo
mov
mov
sbb
cmps
push
mov
mov
add
test
add
push
test
or
pop
movs
bound
ins
push
xchg
test
pop
cld
neg
daa
je
sbb
nop
hlt
jo
add
hlt
sbb
je
mov
pop
test
rcl
fs
repz
je
in
std
(bad)
xor
int3
push
pushf
fbstp
(bad)
sti
dec
mov
test
dec
inc
dec
fs
ja
ret
xchg
add
shr
jno
lock
sub
jne
stos
add
mov
gs
xchg
add
cld
scas
std
or
cwde
push
fs
fucomi
mov
lods
xlat
jmp
fwait
mov
cmc
je
loop
pop
lock
push
movs
loop
sbb
add
nop
jb
adc
cmps
or
in
push
scas
push
rcl
mov
(bad)
mul
add
sub
js
in
mov
cld
sbb
adc
movs
in
mov
das
mov
pop
sbb
(bad)
cmp
fnsave
or
cld
jns
cmc
or
in
jne
fnstcw
xchg
fdiv
call
inc
aam
int3
inc
enter
in
xor
inc
jo
cmps
mov
mov
js
test
jns
(bad)
retf
push
cmp
ins
imul
jnp
mov
popf
mov
data16
cdq
imul
lea
test
adc
repnz
test
test
loope
aam
jnp
ror
iret
fs
(bad)
pushf
test
loopne
mov
fdivp
lock
fcomip
add
cmp
call
pop
sbb
mov
cli
cmp
(bad)
cmp
movs
std
sub
rcl
push
fucomp
jbe
repz
sti
jl
jmp
in
fld
cld
movs
sbb
sahf
add
mov
push
sbb
mov
sbb
or
call
jle
cmc
jecxz
in
jo
hlt
fsub
or
fmul
imul
or
jnp
(bad)
or
and
loop
lods
mov
lea
mov
push
lahf
outs
int3
lods
mov
cwde
lock
je
xor
out
adc
mov
cmp
cli
adc
cmp
mov
sti
sub
fsubr
fidivr
mov
jnp
add
in
mov
cdq
add
mov
rcr
enter
cmp
call
dec
mov
sar
xchg
call
lock
xchg
fisttp
repnz
icebp
shl
cwde
fldlg2
push
mov
mov
dec
xor
popf
fsub
adc
(bad)
dec
(bad)
ins
sbb
add
xor
sti
pop
or
jbe
or
mov
pop
nop
repnz
out
jns
shl
and
rcr
std
clc
mov
adc
adc
in
dec
(bad)
frndint
aad
jmp
in
dec
adc
fsubr
sub
test
adc
mov
push
jns
movs
or
ins
je
xor
je
mov
push
gs
pop
pop
push
sbb
and
call
rcl
mov
stc
enter
fmul
js
sbb
cmp
call
ins
xchg
iret
movs
mov
loope
ret
pop
mov
mov
(bad)
jne
fucomp
push
fsubr
hlt
sub
int3
popf
(bad)
repnz
fucomi
jb
int3
int3
jb
(bad)
aam
mov
mov
or
mov
movs
(bad)
shr
mov
inc
int3
fisttp
sub
(bad)
je
add
dec
call
mov
sub
ins
int
mov
pop
push
sbb
test
out
inc
push
sar
xchg
(bad)
enter
jmp
xchg
loopne
mov
push
movs
push
bndldx
js
mov
cs
jmp
sub
sub
into
and
enter
lock
out
test
fsub
scas
icebp
dec
cwde
imul
pop
mov
mov
push
(bad)
repz
adc
mov
pushf
hlt
movs
call
sub
int3
aam
fisttp
mov
inc
lods
fidivr
and
jge
mov
mov
ins
xchg
cwde
fs
(bad)
rcl
sub
or
jg
mov
aad
in
mov
push
cmp
jnp
mov
ficomp
loopne
js
mov
dec
mov
sbb
(bad)
xlat
in
shl
lahf
jne
pushf
cmp
mov
fsubr
hlt
ret
cli
inc
pop
xor
inc
pop
out
jb
ins
ins
mov
out
or
lods
push
aam
cdq
add
mov
pop
vmread
mov
xor
push
int3
clc
sub
fsubr
jge
mov
lahf
movs
aam
(bad)
push
mov
cmp
les
mov
mov
mov
sub
ret
aam
adc
sbb
sahf
int3
xor
(bad)
fs
fs
xchg
mov
test
nop
xchg
xchg
ins
xor
mov
arpl
loop
pop
mov
pop
or
mov
sbb
aam
sub
in
jmp
mov
adc
repz
ss
in
cmc
xor
add
mov
mov
in
xor
cmp
pushf
pushf
push
mov
sbb
inc
mov
test
hlt
push
nop
repz
adc
hlt
retf
xor
and
push
sbb
clc
sahf
add
xchg
call
pushf
mov
mov
mov
xchg
(bad)
leave
test
mov
xor
ins
pop
aad
(bad)
pop
jl
mov
(bad)
cld
mov
sub
pop
jnp
movs
pop
jne
ja
loop
dec
loopne
or
(bad)
fs
xchg
mov
int3
shr
mov
cmps
cmps
test
gs
gs
adc
(bad)
jmp
xchg
aam
ret
push
mov
push
xchg
xor
jle
rcr
or
dec
fsubp
or
mov
jmp
arpl
(bad)
fsub
cmc
js
mov
and
ins
movs
adc
xor
retf
xor
hlt
and
ins
clc
jae
cmp
clc
pop
js
mov
std
in
sub
lods
xor
daa
jbe
push
ins
pop
test
xor
mov
call
mov
or
mov
xchg
aam
push
or
call
cmp
xchg
rcr
(bad)
fsubr
dec
xchg
(bad)
fcomp
add
mov
in
xor
inc
loope
add
fld
cwde
dec
mov
fs
test
or
and
movs
inc
push
imul
test
iret
in
test
cmps
out
hlt
push
stc
push
jne
(bad)
cmp
retf
lods
jmp
pushf
idiv
mov
push
jae
test
fsub
inc
cwde
mov
rcr
xor
gs
push
jl
jo
sub
add
cmc
pop
mov
int3
and
push
imul
adc
jl
and
add
mov
js
lods
jp
lahf
icebp
cli
xchg
hlt
jmp
inc
ins
lods
pop
int3
sbb
xchg
test
(bad)
retf
lods
lock
mov
pop
mov
test
mov
xor
xor
jecxz
std
ins
popf
mov
adc
push
mov
mov
jle
sbb
pop
mov
test
cld
jmp
div
dec
fisubr
in
pushf
mov
shr
pop
sub
jg
nop
dec
fdiv
in
stc
mov
idiv
movs
pop
stc
rcr
std
mov
cld
adc
hlt
add
pop
pop
xor
stos
and
mov
int3
in
and
xor
pop
jge
jl
sbb
test
and
jo
mov
and
and
mov
xor
fmul
jne
stos
pop
push
ins
pop
push
int3
repnz
cld
inc
xchg
in
xchg
int3
neg
adc
clc
ret
cmp
xchg
mov
mov
std
pusha
leave
out
cmc
sbb
mov
ins
mov
in
fs
clc
movs
fstp
in
sbb
cld
cdq
mov
mov
sbb
lock
cwde
rcr
push
cmps
jae
(bad)
neg
pop
gs
into
fisttp
out
jns
test
scas
adc
in
dec
adc
xor
int3
rcl
rol
mov
stos
and
cli
repz
sbb
into
sub
push
jl
imul
pop
jo
hlt
cmp
xchg
push
sub
adc
mov
jmp
cmps
push
cmp
mov
mov
jo
add
test
jmp
js
cdq
jmp
test
mov
xchg
fst
mov
jmp
mov
scas
mov
sbb
pushf
jmp
ins
out
xchg
aas
jne
cld
jp
mov
xchg
xchg
mov
(bad)
mov
push
test
repz
sbb
cmp
adc
js
xor
mov
sub
xchg
adc
add
movs
cli
push
sub
cwde
movs
sub
pop
fcmovnu
fstp
les
sbb
and
jp
movs
and
inc
lods
and
hlt
jns
dec
jl
sub
pop
xor
test
or
lods
sbb
rcr
mov
call
add
test
sbb
jne
idiv
push
push
cli
cmps
add
enter
addr16
cmp
cdq
rcl
push
cmp
sbb
jle
scas
test
jecxz
jo
fiadd
push
cmp
mov
pop
stos
test
retf
cwde
jbe
in
push
xchg
mov
lods
std
dec
test
movups
test
add
mov
ins
xchg
push
push
xchg
sub
sub
push
push
add
jb
add
mov
cwde
fdivr
jne
adc
jo
inc
xor
push
ins
cmp
sub
test
sbb
mov
dec
ror
mov
dec
push
sar
es
dec
lods
sbb
and
adc
sar
or
pushf
dec
mov
(bad)
cld
gs
sbb
int3
mov
sbb
into
shl
cmps
inc
cmp
repz
movs
jmp
je
aam
or
xor
jb
mov
pop
cmp
retf
icebp
mov
and
sub
add
add
movs
loop
push
mov
pushf
inc
mov
and
or
test
lods
pop
js
adc
xchg
or
stos
jg
xor
add
and
or
loope
je
ins
mov
push
mov
aam
pushf
adc
movs
les
inc
sahf
push
mov
mov
jmp
mov
pop
(bad)
xor
adc
hlt
retf
mov
es
xor
fidiv
mov
or
and
or
sub
mov
retf
xchg
repnz
stos
add
cs
fsub
mov
imul
js
mov
jl
jmp
test
add
fld
fadd
fsub
mov
mov
(bad)
pop
int3
xor
adc
or
mov
outs
adc
lock
pushf
test
adc
je
stos
push
mov
jne
xchg
pop
cld
and
fsubr
cdq
add
out
jb
adc
jne
sbb
es
les
fwait
push
test
or
mov
jl
mov
push
mov
pop
xchg
jmp
js
lock
pop
mov
inc
push
sbb
les
xor
aam
mov
loope
test
sub
push
stos
xchg
mov
mov
(bad)
pushf
pushf
rcl
fcom
adc
stos
jne
je
jl
retf
mov
test
or
in
call
adc
js
call
mov
cmp
movs
or
adc
mov
mov
add
pop
hlt
mov
hlt
mov
xchg
and
xor
xchg
out
inc
pop
sbb
jb
es
leave
lea
mov
pop
xor
jl
push
enter
stos
cmp
movs
sbb
movs
mov
mov
sbb
adc
mov
push
or
sub
movs
nop
pop
loop
and
jp
mov
cmp
mov
dec
int3
or
call
leave
and
add
fmul
pusha
clc
or
sbb
call
cwde
or
cmp
inc
adc
stos
xor
xchg
push
mov
(bad)
fdiv
repz
jmp
xlat
in
or
fcomp
adc
outs
loopne
out
push
mov
in
push
pop
mov
icebp
or
aad
mov
and
sbb
sbb
jl
xchg
mov
and
and
test
adc
cld
addr16
push
add
mul
cmc
pusha
cld
or
pushf
lods
mov
shl
and
jmp
shl
lds
fmul
mov
or
push
jl
add
mov
aas
in
push
mov
in
cmc
dec
pop
sub
popa
addr16
div
pop
mov
or
retf
dec
mov
fs
mov
dec
xor
push
mov
jne
fistp
sbb
jo
stos
add
mov
fcomi
dec
fst
push
jmp
pop
enter
mov
mov
out
jl
test
jp
jp
cmp
sbb
adc
mov
sahf
push
in
xchg
lods
sub
hlt
pushf
sbb
add
out
and
mov
mov
add
mov
mov
ins
mov
push
adc
stos
pusha
push
xchg
push
or
retf
lea
rcl
and
mov
add
clc
or
or
mov
pop
cmc
mov
repnz
xchg
clc
dec
mov
adc
dec
mov
mov
sbb
mov
scas
add
addr16
pop
hlt
pop
fadd
ret
sub
rol
pop
retf
es
pushf
lods
(bad)
pop
jecxz
sar
movs
mov
inc
mov
and
stos
cmp
cmp
sbb
mov
test
sbb
call
adc
cmp
sbb
mov
enter
fld
clc
cmc
inc
lods
stos
data16
test
dec
xchg
xor
movs
fcmovu
mov
mov
test
or
movs
cmovo
xor
pop
js
in
jl
push
pop
jo
ds
out
xchg
sar
and
call
pop
in
sbb
retf
cmp
cmps
fadd
xchg
xchg
mov
and
retf
je
jle
mov
je
or
mov
inc
imul
jmp
movs
xor
mov
lahf
(bad)
sbb
cwde
in
stos
enter
movs
mov
push
xor
mov
mov
add
push
dec
jb
adc
push
sbb
add
add
aad
xchg
jno
(bad)
mov
or
call
cwde
xor
mov
neg
sar
add
in
cmc
xor
stos
jns
sar
xchg
rol
pop
xor
mov
les
add
cmps
jle
cmp
pop
mov
and
dec
cwde
mov
fdivr
ins
test
fistp
pop
call
sbb
loopne
add
out
test
mov
test
adc
fdiv
lock
hlt
(bad)
pushf
call
data16
loopne
clc
ret
push
mov
push
cmp
popa
loopne
rol
imul
nop
sub
int3
imul
cmc
pop
or
jmp
push
add
dec
inc
test
mov
push
xor
adc
aad
add
push
int
pop
push
test
jge
mov
cmc
call
enter
dec
popf
add
mov
mov
sbb
jnp
jl
pop
ss
mov
push
jne
sbb
sub
ret
or
add
mov
popf
loope
mov
das
xchg
pop
mov
xor
mov
jns
mov
dec
fild
mov
or
push
je
mov
cdq
xchg
(bad)
test
mov
aad
and
stc
xchg
push
mov
pushf
pop
push
or
cwde
lock
test
mov
pushf
mov
std
add
test
shl
xor
lods
jbe
jb
jecxz
hlt
addr16
fsub
in
add
(bad)
aam
scas
sbb
jne
and
test
sbb
sbb
or
xor
test
iret
daa
and
sbb
fisttp
xchg
test
sub
call
pop
sbb
mov
icebp
xchg
popa
jg
mov
pop
cwde
mov
lea
(bad)
jae
push
cmp
or
scas
je
dec
clc
movs
js
mov
std
in
xchg
mov
adc
rcr
jae
repnz
fdiv
lods
or
or
test
jb
mov
sbb
xchg
push
cmps
movs
in
mov
cld
mov
pop
mov
scas
mov
xchg
mov
lea
jp
and
fsub
mov
movs
fld
stos
sysret
icebp
les
or
aas
int3
adc
dec
and
lea
xchg
mov
pop
in
jl
out
mov
cwde
add
push
mov
hlt
pop
sahf
xchg
add
sar
xor
mov
and
xor
lea
int3
cmp
add
dec
cld
mov
xor
mov
jl
mov
xor
xchg
dec
push
test
inc
jae
(bad)
sar
je
inc
nop
fxch
adc
xchg
in
pop
sbb
lods
mov
call
jle
xchg
fsubr
cmps
stos
in
inc
pop
retf
int
jae
mov
sbb
xchg
mov
shl
jmp
out
jo
or
sbb
dec
loope
mov
iret
(bad)
int3
jne
mov
adc
mov
lods
scas
and
lock
jne
cmc
pop
test
les
call
ffree
movs
xor
rol
dec
mov
mov
jno
mov
movs
xor
and
clc
push
mov
pop
or
js
cmp
stos
out
sbb
dec
lahf
xchg
retf
jl
nop
xor
scas
aam
ret
ficomp
lds
jbe
unpcklps
in
mov
(bad)
in
add
mov
pop
pushf
jp
mov
rcr
dec
pop
or
lea
js
push
js
mov
(bad)
in
pop
mov
xchg
push
fdivr
xor
int3
pop
mov
mov
cmps
xchg
jns
mov
shr
jl
mov
push
jl
sub
jb
cmps
cmp
(bad)
sbb
sub
stos
xor
inc
jae
add
sub
adc
xchg
mov
and
fdivr
or
js
and
pop
retf
inc
mov
int3
js
mov
(bad)
xchg
pop
mov
scas
fsub
sub
mov
sbb
or
add
in
js
in
fs
xchg
add
dec
xchg
test
xchg
cmps
movs
mov
retf
sub
mov
test
or
cld
dec
js
xor
cmps
cmps
xor
pop
rcr
(bad)
lock
cmps
int3
push
pop
adc
mov
xor
inc
push
jne
and
pop
jnp
sahf
sub
in
iret
pop
sbb
mov
sahf
dec
repz
in
sbb
push
adc
and
test
fs
aad
adc
aas
fiadd
idiv
jl
xchg
popw
es
js
jmp
mov
xchg
aam
and
sar
sti
icebp
cli
or
mov
jne
out
jae
cmps
or
mov
mov
sub
mov
cmp
mov
retf
(bad)
mov
out
add
lods
stos
in
push
mov
xchg
xchg
add
in
push
pop
cwde
enter
mov
mov
out
loope
out
fild
pop
and
mov
rol
stos
pop
jl
adc
mov
mov
fsub
jne
mov
xor
mov
mov
daa
sub
lock
test
cmp
mov
test
pop
adc
stc
test
mov
and
cld
lods
loopne
(bad)
cdq
ins
cmp
fadd
call
pushf
mov
mov
ficomp
clc
jmp
jl
sar
sub
push
dec
sub
jp
cmps
cmp
mov
xchg
mov
sbb
xor
mov
test
sbb
mov
ror
cmps
loope
mov
sbb
sti
cmps
sbb
js
jp
icebp
jl
jl
stos
jl
cs
(bad)
cwde
push
int
imul
movs
in
call
lock
push
lea
lods
add
cld
xor
adc
ret
adc
repz
ins
cld
mov
cli
lods
and
mov
mov
mov
adc
or
cmps
dec
sub
pop
xchg
js
sbb
test
xchg
sbb
and
mov
or
cmps
hlt
js
jle
jmp
xor
ret
mov
test
push
mov
fs
mov
add
mov
and
ja
pop
jbe
lods
out
in
dec
xlat
sbb
sbb
hlt
addr16
mov
hlt
test
clc
pop
hlt
fnstcw
call
movs
xor
stc
pushf
retf
in
jl
adc
call
lds
test
call
mov
mov
mov
mov
in
mov
xor
mov
outs
add
mov
dec
jg
(bad)
(bad)
sub
movs
lock
movs
mov
in
and
jo
mov
mov
cld
mov
es
sbb
gs
fcomp
jmp
fmul
jge
into
pop
pop
pop
adc
mov
iret
mov
jno
ins
popa
and
mov
xchg
mov
sbb
mov
loopne
loop
ror
sbb
push
push
les
sub
jg
sub
xor
(bad)
mov
sbb
aam
pop
sub
cli
and
in
sub
push
int3
leave
jg
cmp
mov
lahf
loope
xor
dec
movs
mov
jo
fbld
stc
clc
mov
sub
sub
inc
xlat
xchg
add
mov
call
xchg
pop
mov
in
mov
pop
or
sbb
cdq
rcl
ret
aam
in
mov
add
test
xor
pop
mov
scas
xor
jl
hlt
jae
cmp
pusha
and
push
mov
popa
loopne
inc
test
popf
int3
mov
add
js
dec
jecxz
jl
xor
xor
lock
ficomp
mov
sar
xchg
test
nop
ror
xchg
xchg
xchg
jae
mov
pushf
push
les
out
mov
mov
test
ror
mov
mov
xchg
ja
(bad)
(bad)
jmp
js
cli
cld
lods
retf
mov
call
fld
mov
hlt
mov
(bad)
call
mov
fs
mov
test
jmp
ret
div
sti
cli
shl
fcomp
mov
mov
pandn
cmp
or
jnp
xchg
imul
repnz
cmp
cmp
mov
jne
mov
xchg
aam
ret
sti
sbb
std
fadd
stc
dec
dec
xchg
mov
xchg
sub
xor
or
retf
mov
dec
pop
adc
sahf
les
mov
in
gs
mov
mov
xchg
mov
ret
sbb
int3
je
or
cmps
sti
dec
xor
jne
stos
sbb
jge
aam
jmp
mov
lods
cli
sub
(bad)
hlt
adc
les
cwde
ret
mov
aam
in
scas
sbb
cwde
nop
test
xchg
mov
mov
into
or
xchg
mov
call
xor
adc
lds
std
js
or
mov
cmp
xor
mov
ret
lea
adc
mov
jmp
loopne
nop
sahf
mov
pushf
sub
movs
mov
xor
xchg
scas
popf
in
into
lock
aam
cli
in
jl
int3
mov
pop
jl
dec
mov
dec
xor
jns
jne
mov
inc
ret
or
pop
jl
test
mov
pop
lds
push
jl
test
jl
mov
jl
xor
cmp
and
mov
mov
movs
data16
add
mov
sbb
sbb
js
pop
test
jp
(bad)
psadbw
mov
loop
jns
(bad)
mov
dec
call
in
mov
jo
mov
cwde
sbb
test
ja
xchg
mov
test
jo
xor
cdq
aam
pushf
(bad)
mov
test
cli
and
int3
(bad)
lock
mov
hlt
rol
push
jo
sbb
jo
jl
mov
sbb
movs
icebp
aam
add
or
(bad)
jmp
cwde
fimul
jno
test
pushf
mov
test
jl
or
pushf
jl
mov
cmp
stc
push
icebp
ins
jbe
ins
push
shl
mov
pop
clc
clc
xor
int3
pop
rol
popa
mov
ret
mov
cmp
sahf
mov
sbb
mov
retf
movs
ds
(bad)
jmp
in
cmp
enter
jl
ffreep
jne
in
push
and
stc
jne
retf
fstp
mov
lea
nop
jae
jnp
push
popa
jns
(bad)
mov
cld
push
xchg
loope
cmp
xor
retf
cwde
or
jl
aad
cmp
add
mov
in
push
test
pusha
int3
enter
sbb
mov
nop
scas
movs
retf
in
aaa
jle
push
ficomp
jo
mov
mov
shr
shl
data16
pushf
stos
cwde
pop
arpl
mov
pop
xchg
test
lea
mov
xchg
sbb
adc
or
ja
push
sub
sub
mov
clc
fnstsw
lock
xchg
mov
cmps
nop
mov
fadd
push
inc
gs
jmp
xor
stos
push
jne
jmp
add
retf
shr
mov
sub
and
mov
jl
(bad)
sbb
mov
les
std
pushf
scas
xlat
retf
repz
(bad)
add
gs
mov
bound
mov
int3
sbb
xchg
xchg
daa
cmp
je
inc
add
mov
test
cld
es
xchg
mov
mov
popf
out
rol
xor
add
outs
sub
pusha
jb
repz
mov
cli
mov
mov
fld
pop
sub
js
jl
jo
mov
push
idiv
inc
(bad)
push
(bad)
icebp
sbb
test
xchg
sbb
xchg
test
movs
popf
pop
mov
call
shl
mov
dec
test
dec
mov
inc
xchg
mov
adc
cld
xchg
hlt
push
js
dec
icebp
and
or
fs
(bad)
ret
in
sar
push
outs
ins
hlt
retf
icebp
push
pop
mov
cmp
jl
dec
out
jl
test
push
xor
push
call
nop
sbb
cld
xchg
fisttp
aad
xor
std
test
sbb
lds
jl
xchg
enter
das
pushf
js
lods
mov
inc
stos
out
jmp
cmps
cwde
or
sub
dec
cli
adc
inc
or
jae
jl
and
jl
xchg
xchg
enter
mov
out
sbb
pushf
cs
std
in
lock
or
pop
sbb
mov
pusha
stos
repz
icebp
lock
stc
jge
fwait
out
int
hlt
fistp
into
mov
mov
jp
js
out
out
dec
retf
js
push
dec
aam
in
mov
xor
xor
fadd
xor
push
or
xor
mov
je
push
shr
push
push
sub
push
jp
(bad)
jle
sar
test
pop
and
mov
jns
xchg
ficomp
push
sub
mov
pop
std
fidivr
repz
int3
jl
imul
jge
jo
and
dec
xchg
mov
out
js
mov
je
repnz
js
in
mov
mov
lods
mov
test
js
sub
push
fs
fadd
in
mov
sub
cmp
xchg
stos
xor
sub
mov
xor
mov
xchg
or
add
jg
inc
inc
xchg
jb
mov
shl
loop
stc
retf
in
rcl
pop
jl
ror
jp
mov
loop
adc
js
jb
fs
outs
pop
jmp
adc
popf
idiv
je
icebp
sbb
pop
sbb
mov
mov
jmp
cmp
pop
aaa
pop
push
mov
mov
sbb
mov
mov
pop
cmps
sub
xchg
inc
jl
jle
lods
repz
aas
stos
je
add
and
mov
into
dec
push
test
jne
into
xchg
aam
std
adc
idiv
add
std
lods
add
mov
test
jl
jno
lea
xor
popf
call
xor
xor
cmc
mov
(bad)
(bad)
xor
lahf
sbb
push
rcl
pop
int3
push
shr
pop
hlt
mov
push
mov
shr
js
inc
in
mov
xchg
push
push
scas
cwde
jns
lods
jbe
mov
sahf
sub
ror
adc
sbb
sbb
or
mov
nop
sti
int3
retf
mov
je
mov
int3
dec
out
(bad)
cmps
std
ror
pop
cld
mov
add
fisub
test
jb
jl
jge
js
jae
jns
jl
mov
test
or
mov
sbb
mov
in
std
js
in
js
inc
aam
je
mov
rcl
js
sub
adc
clc
xor
aam
pop
mov
aam
lock
(bad)
lods
lods
ret
push
xor
push
pop
je
aaa
js
adc
xor
call
nop
xor
clc
aad
faddp
jbe
shl
ja
call
mov
scas
stos
daa
sbb
add
fcmovb
hlt
cwde
nop
sbb
jl
popf
js
jo
push
mov
out
and
loop
dec
jl
pushf
add
aam
cmc
xor
xchg
mov
loope
sbb
outs
int3
nop
push
js
xchg
mov
mov
cmc
mov
int3
(bad)
mov
test
test
mov
movs
xchg
lock
mov
scas
je
jne
or
push
popf
ror
jns
into
mov
pusha
test
sub
sub
test
clc
mov
mov
or
call
int3
gs
hlt
retf
mov
pop
adc
fmul
mov
mov
xor
ja
js
test
xchg
add
(bad)
fadd
movs
add
aam
movs
lods
lods
leave
aaa
test
enter
(bad)
mov
dec
push
enter
int3
call
call
in
fsub
cmp
mov
push
(bad)
sbb
fisubr
jmp
add
mov
in
out
mov
xchg
ret
jp
mov
pop
dec
aam
sbb
(bad)
and
in
push
sar
call
fs
stc
retf
std
iret
push
add
das
mov
addr16
mov
cmp
js
jne
aam
scas
jno
pop
bound
mov
stos
add
call
xor
into
jne
or
test
adc
sub
sub
and
into
stc
or
fs
retf
xchg
shl
mov
mov
xchg
sbb
mov
stos
jne
aad
loopne
mov
xchg
dec
loopne
in
add
and
fsub
in
out
pop
xchg
fbstp
xchg
fidiv
sahf
mov
jp
lods
fld
mov
sub
cmp
lods
push
mov
xchg
lds
aam
gs
fnsave
lock
call
inc
icebp
fs
cdq
test
xor
mov
sti
fild
jmp
mov
imul
push
and
ins
or
test
cmp
sbb
adc
add
movs
pop
xlat
lock
nop
dec
call
les
mov
lods
ins
loopne
mov
jmp
xchg
aaa
test
fild
sar
into
or
fwait
in
in
ins
sar
mov
mov
cld
cdq
ffreep
fs
in
jns
out
les
fsub
ins
xchg
repnz
push
aam
xchg
out
in
sbb
adc
in
adc
call
je
sbb
aam
fnstenv
mov
xchg
iret
mov
inc
cdq
test
stos
or
mov
mov
xchg
fild
out
cwde
out
dec
xor
sub
sub
xor
xchg
lock
stos
dec
add
js
(bad)
int3
inc
mov
out
sar
stos
pushf
das
nop
ja
outs
cwde
js
sub
or
jb
inc
stos
fmul
mov
repnz
je
dec
lods
or
lock
push
fisubr
mov
pop
js
xor
mov
pushf
hlt
(bad)
fs
jne
mov
fidiv
xchg
stos
outs
jmp
loopne
loop
xor
jmp
rcl
jae
(bad)
push
loopne
cwde
xor
shl
out
jbe
fbstp
lods
lds
jne
mov
in
fs
in
in
push
fwait
loop
aam
loope
xchg
in
mov
in
call
leave
std
cmc
lock
jmp
mov
sbb
movs
mov
ret
in
sbb
mov
jl
push
mov
mov
shl
pushf
cmp
add
int
ins
sti
iret
in
mov
xchg
repz
nop
jmp
popf
loop
push
xchg
out
sbb
mov
mov
les
mov
fcomp
retf
stos
sbb
dec
pop
add
enter
mov
adc
fs
in
pusha
lahf
lock
repnz
xchg
ja
push
cli
add
mov
iret
movs
cmps
test
mov
mov
repz
jne
sbb
neg
(bad)
aam
mov
aam
xchg
ficom
popa
pop
mov
and
add
mov
mov
mov
or
test
out
dec
mov
das
and
hlt
movs
and
sbb
mov
(bad)
fdiv
cmps
jbe
mov
psrld
push
pusha
add
les
stc
cld
mov
sub
mov
imul
div
mov
cmp
sti
sub
cmp
ror
mul
add
mov
fiadd
xor
sub
int3
nop
push
fdiv
jb
movs
repnz
adc
push
cmc
cld
dec
ins
movs
add
or
sub
mov
int3
sar
sbb
jae
xchg
les
adc
out
pop
les
and
jno
ins
pop
in
call
jae
mov
mov
js
and
xor
mov
ins
test
(bad)
aad
fs
jp
scas
cli
shl
test
imul
stos
ins
scas
cld
mov
sahf
push
loopne
lds
cmc
lods
clc
jp
test
je
jb
sti
cwde
ds
cli
je
std
mov
cmps
jmp
cld
movs
jne
imul
retf
jo
push
std
iret
sub
aam
mov
xchg
in
or
arpl
adc
icebp
dec
cmps
cmc
mov
lods
test
movs
xchg
int
xor
mov
(bad)
fs
cmps
jmp
pop
scas
jmp
xchg
mov
inc
aam
lock
pushf
nop
je
xchg
fidivr
cmps
mov
pop
and
or
xchg
cmp
outs
jns
pusha
pop
mov
sbb
scas
aam
in
or
mov
mov
inc
clc
fcom
mov
cli
fnsave
fidivr
mov
adc
retf
mov
test
cld
mov
cld
js
cli
fldcw
std
je
mov
hlt
mov
cmc
cld
mov
push
or
mov
repnz
repz
mov
shr
aam
jo
leave
xor
cli
pop
sub
pop
pop
add
jbe
(bad)
push
mov
or
push
call
ret
pop
enter
jb
jmp
jne
xor
add
xor
repnz
das
test
ret
mov
pop
push
and
lods
pop
lds
cmps
xchg
outs
and
arpl
pushf
fnstsw
mov
mov
pop
sbb
stos
and
test
shl
xchg
sti
int3
test
dec
dec
mov
xchg
inc
mov
sbb
ins
pop
js
mov
in
add
sahf
ins
lahf
or
test
pusha
sub
adc
mov
aam
xor
xchg
mov
sub
in
sub
mov
in
ins
scas
mov
pop
sbb
xchg
or
pop
or
mov
sub
(bad)
mov
pusha
dec
xor
addr16
je
jae
push
sub
js
sub
aaa
cmp
pop
imul
lods
push
je
jno
xchg
pop
mov
cmp
mov
mov
cmc
push
ins
sub
cmp
gs
ins
fsub
arpl
je
xchg
jae
xchg
or
and
dec
and
cmp
imul
pop
ins
push
jae
or
sub
mov
push
jo
jno
dec
push
sub
dec
pop
jae
fdiv
jb
js
xor
outs
jnp
hlt
sub
pop
dec
inc
ja
js
add
(bad)
imul
jae
sbb
js
idiv
adc
mov
jne
in
jo
outs
sbb
ins
cld
push
add
xor
sub
add
mov
cdq
ins
xor
mov
and
cmps
hlt
xchg
sub
mov
pusha
arpl
test
cwde
sub
pushf
test
shr
jo
cmp
jmp
jmp
cld
jo
je
jns
call
jne
jns
mov
popf
push
call
sar
pop
enter
repnz
movs
fistp
out
jb
stos
xchg
mov
retf
or
sub
shr
imul
pop
in
mov
mov
jg
mov
push
cmp
sbb
cmp
ja
push
dec
adc
inc
lea
and
clc
mov
dec
add
pop
or
jbe
cmp
push
ds
pop
outs
jmp
sbb
call
test
add
xor
imul
test
pop
daa
sub
out
nop
inc
int3
jae
mov
jp
jmp
aas
lds
xchg
scas
loopne
fs
ds
inc
jae
pop
sbb
hlt
js
cmp
inc
ret
jne
push
add
test
fs
jae
je
shl
inc
ds
mov
or
bound
dec
mov
sbb
ja
daa
or
ins
sub
fsubrp
inc
and
inc
pop
fs
jl
in
push
imul
push
(bad)
inc
cli
cmp
test
push
add
call
push
inc
retf
add
jl
adc
stc
cwde
adc
and
test
mov
and
dec
inc
xor
jg
nop
popa
hlt
jo
push
sub
daa
pop
adc
imul
fadd
fistp
js
cmp
pop
xor
jo
inc
in
adc
push
add
pop
xor
idiv
dec
fcom
test
cs
jne
and
fs
add
addr16
fdiv
cwde
call
mov
push
jno
dec
jl
or
fsubr
cwde
jl
sbb
js
sbb
sbb
dec
push
push
call
or
jecxz
add
pop
retf
rcl
pusha
int
(bad)
jbe
sbb
sub
fnstenv
add
imul
hlt
dec
mov
inc
cld
sti
dec
cld
out
inc
mov
pop
fild
add
lds
(bad)
pop
inc
es
pop
push
pop
or
xor
jl
lahf
popf
test
inc
pop
or
jnp
and
dec
enter
sub
xor
or
jnp
sub
sub
xor
aaa
in
test
retf
je
sar
mov
mov
rcl
test
imul
inc
sub
cmp
mov
aas
adc
je
repz
dec
pop
nop
inc
push
push
je
nop
push
stc
inc
fs
dec
jp
cmc
inc
cmp
in
sbb
lds
adc
inc
adc
test
mov
mov
jle
test
pusha
mov
mov
test
or
movs
sar
dec
fldenv
and
imul
sub
adc
cmp
pushf
and
adc
lods
inc
inc
dec
cmp
iret
xchg
add
je
mov
push
jp
jns
dec
xor
lods
cmp
sbb
adc
inc
cmp
and
rol
test
pusha
out
cmp
push
sti
dec
daa
mov
je
ins
mov
and
je
push
imul
mov
cld
sbb
jo
sub
xor
add
in
leave
jl
sbb
sub
adc
cmp
jo
aaa
nop
jne
or
movs
leave
ja
mov
jp
mov
jmp
js
jne
cli
mov
cmp
inc
sbb
sub
repz
inc
popa
add
imul
or
xor
data16
push
jo
adc
dec
dec
fs
dec
cdq
test
out
(bad)
jmp
test
jl
xchg
lods
js
sub
ins
xor
jne
js
sub
das
lea
adc
cmp
sub
cmp
inc
test
mov
mov
mov
xor
pop
jp
jge
mov
xor
push
push
imul
imul
test
pop
outs
push
test
ja
iret
or
cmp
adc
xor
cmp
xchg
fwait
mov
rcl
pop
push
push
test
nop
loope
js
mov
or
pop
jae
mov
push
and
js
std
push
or
imul
push
fcom
(bad)
xchg
mov
mov
shl
inc
jb
inc
pop
jae
mov
add
jmp
enter
ret
stos
lea
mov
retf
call
jne
lock
and
std
test
or
jmp
fwait
(bad)
mov
mov
sbb
ja
outs
(bad)
pop
ror
jl
mov
js
data16
dec
or
sub
and
ins
jae
and
repz
loopne
int3
and
test
dec
pop
jo
mov
in
fsubrp
sub
sbb
ret
add
xchg
pop
call
xchg
lahf
in
test
cmps
cmp
fldenv
inc
or
aas
jne
(bad)
sahf
lods
jbe
jge
in
in
xor
outs
jmp
lea
sub
jle
jne
sub
xchg
daa
movs
xor
js
pop
or
xor
mov
and
pop
movs
or
das
test
dec
loope
fcmovnbe
inc
mov
scas
add
pushf
push
ins
inc
je
xor
js
loope
mov
mov
inc
addr16
cmp
jmp
sub
ror
push
sahf
xchg
js
or
jmp
dec
clc
aas
mov
leave
js
adc
cdq
inc
cmp
jnp
xchg
in
jbe
push
cmps
and
mov
cmps
push
loopne
inc
push
pop
popf
mov
xchg
out
pop
jmp
es
jnp
mov
mov
cmp
ins
and
mov
xchg
jbe
movs
nop
sub
inc
cmp
xor
push
inc
test
adc
mov
stos
xchg
sahf
add
iret
in
jns
cmps
data16
loope
mov
push
add
jne
cwde
jge
lods
sahf
mov
ins
mov
mov
xchg
and
pusha
jo
xchg
mov
push
js
(bad)
ret
sub
scas
in
arpl
add
pop
mov
cmc
sbb
rcl
jb
retf
outs
jo
loopne
add
push
inc
jne
fnstenv
(bad)
xor
push
pushf
sub
add
or
jp
ins
imul
mov
mov
inc
test
xchg
push
jp
xchg
xchg
sahf
arpl
dec
(bad)
hlt
mov
fwait
push
dec
mov
mov
dec
mov
dec
pop
adc
std
cmps
mov
dec
int3
rcr
sar
xor
jmp
jne
(bad)
pop
sub
call
mov
mov
push
push
or
mov
pushf
jl
cmps
and
nop
mov
mov
sbb
lahf
pushf
cmps
dec
push
movs
lods
ins
cvtpi2ps
aam
dec
mov
out
fadd
cmp
sar
into
call
retf
jl
stos
sub
cli
jo
jae
cdq
adc
inc
jb
rcr
ret
enter
nop
sub
pushf
test
mov
xchg
add
(bad)
(bad)
aas
jno
nop
je
scas
mov
lods
scas
push
mov
xchg
xchg
or
psadbw
jno
adc
and
xchg
jmp
fistp
(bad)
(bad)
test
fldenv
ret
add
into
or
fimul
out
mov
test
xchg
push
xchg
cdq
jne
mov
cmp
mov
int3
cdq
or
cwde
popf
push
aaa
jl
lea
retf
rol
cmps
mov
push
cld
push
stos
jne
out
inc
loopne
lahf
loope
push
sahf
sub
leave
jl
mov
xchg
adc
mov
leave
jp
repz
adc
inc
cmp
jmp
mov
ins
addr16
fild
test
inc
mov
mov
fs
in
pop
xchg
add
pushf
jl
fist
stc
pop
sub
lds
popf
lods
xor
imul
loope
push
andps
mov
mov
xlat
and
in
js
jl
fs
out
xor
cwde
push
cdq
movs
js
(bad)
mov
add
mov
inc
mov
clc
xchg
cld
je
lea
ficomp
lahf
cwde
sbb
push
push
sbb
jne
icebp
fadd
or
push
or
sbb
pop
(bad)
jne
jmp
stos
or
lahf
xchg
cld
dec
or
xlat
jl
adc
dec
xchg
test
fs
sub
xor
and
mov
cmp
stc
movs
cmp
stos
cli
xor
sbb
xchg
push
mov
pop
xchg
out
call
xor
leave
daa
jl
js
shl
nop
push
mov
repz
test
aad
xor
inc
dec
mov
adc
dec
rcr
scas
pushf
inc
jmp
cmc
test
mov
lds
ins
mov
mov
mov
dec
mov
retf
lds
loopne
or
clc
push
je
xchg
lods
je
mov
test
xchg
or
jmp
mov
cmps
add
or
rcl
xor
mov
jo
xor
pop
mov
add
jecxz
repz
and
scas
dec
rcl
cmps
movs
gs
(bad)
cld
sbb
sbb
retf
add
sbb
sub
les
test
lods
js
xor
xchg
stos
(bad)
cmp
mov
pop
xchg
sbb
add
jo
cmps
adc
pop
push
fcom
push
repz
(bad)
cli
and
xchg
mov
fdiv
ds
mov
xor
inc
sbb
jge
jo
loope
pop
fwait
call
xor
mov
pop
push
sbb
ins
jle
cwde
jne
jb
or
sub
or
out
push
test
sub
jne
xchg
xor
mov
shl
fsubr
pop
sti
add
out
call
dec
inc
inc
push
fcmovbe
pop
imul
imul
dec
daa
ror
add
sbb
out
add
push
cmps
jo
imul
mov
push
cmp
lock
inc
movs
call
adc
xor
xor
push
mov
jb
and
inc
jl
iret
dec
add
jl
xchg
stos
retf
(bad)
xchg
(bad)
shl
jae
test
dec
jns
cwde
outs
sub
scas
sbb
mov
(bad)
push
add
cld
repz
imul
loopne
mov
xor
mov
ret
in
mov
stos
movs
or
leave
sub
into
imul
cld
mov
je
mov
push
lods
(bad)
cwde
pop
sub
emms
(bad)
mov
mov
rcl
out
loopne
xchg
push
push
inc
dec
js
je
lock
push
aam
xor
mov
sub
cs
sub
fs
cli
jo
jl
lahf
sub
sbb
cmp
hlt
aam
push
jmp
cli
imul
sar
mov
sub
xchg
pop
xchg
pop
js
fcmovnb
std
cwde
mov
std
push
mov
scas
lahf
jle
cld
mov
sub
hlt
mov
jmp
pop
xchg
dec
inc
daa
test
push
aam
sub
sar
mov
sbb
out
cmp
fild
ret
push
dec
xor
mov
(bad)
pop
out
out
inc
loope
add
cli
mov
test
xor
mov
inc
into
push
mov
fs
jbe
test
or
mov
in
mov
in
lods
cdq
fild
fwait
sub
jbe
cmps
sahf
pop
pop
repz
jl
scas
movs
xchg
js
mov
les
lods
xchg
mov
adc
fbld
dec
add
(bad)
or
push
(bad)
stos
jne
mov
sar
in
iret
push
out
fild
push
push
inc
sub
inc
out
loop
jg
push
out
movs
loope
add
(bad)
pop
jl
rol
jns
ins
mov
pushf
add
rol
icebp
movs
xor
retf
xor
push
xchg
mov
push
adc
cmp
dec
outs
adc
cld
sub
nop
cmps
cmc
xchg
fs
popf
xchg
sub
sub
mov
adc
in
nop
push
into
and
pushf
pop
mov
cwde
je
enter
in
fcom
shl
scas
pusha
pop
in
jns
clc
fucom
dec
push
or
mov
mov
mov
jne
lds
and
add
nop
jmp
je
mov
movs
ja
fwait
mov
sbb
mov
push
cdq
je
and
shl
in
(bad)
call
xor
cdq
and
call
hlt
adc
cmp
sub
cwde
loop
iret
je
add
sbb
dec
xor
mov
retf
push
int
ja
call
mov
ins
mov
xor
lahf
mov
jne
mov
jl
(bad)
call
push
mov
repz
or
out
xchg
in
inc
mov
and
mov
adc
pop
(bad)
std
lods
mov
mov
mov
je
dec
mov
fadd
out
dec
mov
fidivr
xchg
sbb
mov
in
ret
fcmovnb
movs
test
xchg
mov
lock
retf
lds
xchg
loop
stos
ds
clc
jae
cmp
xor
jecxz
xor
fs
mov
adc
add
jl
lods
sub
jbe
leave
push
popa
dec
jne
or
xor
enter
lods
jns
mov
xchg
sub
mov
xor
jg
and
adc
pop
(bad)
xchg
(bad)
int
nop
jg
sub
pusha
add
xchg
xor
popf
add
pop
aad
sar
jl
scas
and
jbe
out
pop
data16
fidivr
adc
mov
sbb
inc
mov
add
sub
inc
push
(bad)
loope
sbb
aam
sub
xchg
xlat
in
jmp
inc
aad
mov
fs
add
or
loopne
out
in
jl
mov
jg
add
xchg
nop
dec
into
pop
xor
mov
test
test
xchg
mov
mov
adc
push
aad
movs
mov
rol
mov
cmps
dec
sahf
inc
mov
jae
shr
cmp
mov
(bad)
in
test
pushf
xchg
int3
popf
jo
test
mov
push
dec
icebp
adc
enter
test
in
push
sub
dec
push
push
and
fdivr
add
push
sbb
jne
repz
in
std
sar
in
enter
loopne
shl
ins
int3
xchg
cli
lods
enter
mov
std
and
xchg
xchg
mov
push
test
(bad)
cmp
dec
idiv
js
cmp
mov
les
mov
aam
sti
inc
movs
inc
aam
lods
xchg
lods
aam
mov
(bad)
mov
xchg
rcr
(bad)
in
sub
stc
cld
push
adc
mov
push
js
dec
loopne
shr
jl
hlt
add
push
dec
xchg
mov
lsl
fistp
cld
iret
js
out
sar
in
outs
mov
scas
sti
fsubp
in
pushf
hlt
cli
or
enter
push
add
ret
cmps
sub
sbb
js
jmp
out
add
mov
hlt
mov
fdiv
pop
jl
xor
and
mov
les
mov
jb
mov
sbb
add
sbb
cdq
mov
xor
dec
jl
jne
rcl
jl
rcr
es
dec
fs
mov
mov
je
sbb
pop
push
push
xor
std
int3
rep
(bad)
sar
call
lods
cmc
rol
jo
cmps
lock
pusha
push
int3
pop
imul
sar
test
push
mov
jno
pop
lea
xchg
in
cmp
movs
out
je
cmc
or
mov
loope
fsubr
sbb
aad
sbb
rcr
xchg
mov
leave
les
loopne
jns
pop
jne
and
add
inc
jl
outs
pop
popf
jb
jns
add
aad
aas
mov
out
dec
ss
and
or
imul
jo
outs
sbb
in
and
cmps
outs
xor
mov
and
fmul
aam
popf
in
repz
pushf
clc
stc
add
jae
jp
mov
js
pop
push
test
mov
test
cli
add
in
stc
and
test
repnz
test
lods
and
sbb
aas
sar
std
push
add
mov
cmp
les
jmp
mov
pop
jne
and
sar
lods
and
add
xor
mov
mov
ret
es
push
jae
or
jp
or
add
fs
les
in
add
pop
adc
enter
js
xchg
cwde
lods
fsubr
icebp
sub
into
retf
cwde
lea
adc
cmp
pop
or
out
stc
and
mov
pushf
rol
cmps
pop
mov
mov
mov
mov
pushf
loopne
cmps
or
sbb
lds
or
dec
mov
mov
xor
jl
outs
pusha
pop
movs
jns
das
imul
adc
aam
xor
shr
sub
inc
pushf
or
mov
enter
sbb
movs
in
pop
loop
enter
sbb
dec
or
jl
sti
cli
repz
cli
push
xchg
sbb
mov
push
or
mov
mov
mov
(bad)
fs
cmc
add
push
(bad)
cmp
mov
sbb
ret
movs
xchg
dec
jae
sar
je
mov
cld
fstp
in
shl
jmp
je
je
enter
sub
inc
jl
cmp
inc
jl
cld
adc
paddsb
xchg
not
stc
movs
xchg
into
mov
push
and
pop
cli
inc
add
add
inc
cmp
xchg
js
js
xchg
mov
jmp
or
or
jp
aaa
xor
add
cli
mov
mov
popf
retf
stos
cmp
je
cmps
in
dec
jl
out
dec
dec
shr
in
stc
push
inc
mov
cs
enter
jl
push
jl
jg
fcom
push
inc
jl
and
movs
dec
out
test
loop
lock
movs
cmp
aam
xchg
pop
cwde
adc
dec
scas
pushf
push
xchg
sahf
pop
pop
mov
(bad)
out
xor
jl
xchg
shl
js
mov
sbb
lods
test
movs
pusha
stos
pop
pop
stos
fwait
xchg
cmp
mov
sbb
retf
sbb
(bad)
scas
dec
pop
fistp
mov
aad
pop
ins
in
cli
or
cmp
bound
jl
cmp
dec
jl
lahf
ins
push
scas
lods
adc
js
aad
jp
cmp
push
cmp
out
les
fadd
jns
mul
cld
nop
mov
(bad)
hlt
lea
jne
fwait
xchg
leave
and
jg
cmp
sbb
xchg
mov
adc
sub
ins
pop
xchg
pop
in
xchg
inc
cmps
cwde
and
add
in
mov
sar
shr
mov
ins
fdiv
jne
jecxz
call
add
jnp
push
inc
ja
call
test
jns
sub
mov
test
in
in
cld
in
cdq
mov
sar
shr
cmps
mov
arpl
xchg
aam
cmp
mov
cli
test
pop
movs
mov
call
sbb
fs
sbb
cmps
add
dec
mov
loope
mov
inc
shl
stos
in
sbb
shl
in
sbb
pusha
aad
in
je
fnsave
test
push
push
cmc
cmp
jl
ds
add
jl
js
mov
jl
sbb
lods
test
push
rcr
xor
call
mov
pop
and
xchg
sbb
xchg
mov
xchg
dec
movs
xchg
daa
es
stos
call
js
outs
jno
mov
fld
mov
mov
xchg
cld
push
xchg
fs
mov
jl
mov
jmp
jecxz
mov
and
xor
hlt
jae
lock
push
repz
mov
ds
stc
adc
(bad)
daa
js
mov
cmp
ins
aam
sub
das
xchg
(bad)
push
dec
xor
mov
xchg
xchg
and
xchg
lds
sbb
xchg
pop
fwait
stos
jl
ins
cmp
mov
cmp
jno
cdq
fs
fwait
lds
shr
jl
mov
(bad)
aad
fcom
cld
push
sti
out
jmp
inc
pop
jbe
jp
push
fistp
fmul
leave
jl
hlt
dec
js
sbb
jl
jae
push
cmp
add
dec
xchg
test
jns
lods
lock
mov
mov
sub
popf
mov
dec
nop
in
pushf
xchg
test
test
sbb
sub
pop
je
out
call
mov
cmp
mov
add
inc
and
add
inc
(bad)
pop
imul
xor
lods
pop
cmp
fidiv
mov
push
mov
jl
mov
cmp
jp
jl
leave
sbb
pusha
das
jl
stos
sbb
sbb
mov
stos
sbb
jns
mov
hlt
retf
mov
js
mov
xor
xor
fwait
mov
movs
test
je
push
jo
sbb
push
ret
test
sub
in
pop
mov
mov
mov
mov
mov
mov
xchg
into
xor
dec
jne
stos
xchg
sbb
inc
add
xor
out
push
mov
jl
mov
inc
jne
fst
call
test
and
jl
inc
cmp
mov
ins
mov
lock
ret
lods
test
cmp
lea
pop
xchg
xchg
push
mov
je
mov
xor
cmp
nop
jbe
call
jo
pop
xchg
scas
sub
inc
mov
jmp
push
shl
js
shr
std
xor
(bad)
in
pop
jl
mov
add
xchg
jl
or
pop
jl
fnstsw
inc
ds
sahf
sbb
add
push
shl
push
(bad)
scas
hlt
test
js
mov
mov
pop
mov
xchg
mov
xchg
push
out
push
push
mov
cmps
test
pop
mov
scas
loop
xor
mov
push
pop
mov
js
cwde
xor
jo
stos
fidivr
stos
jne
iret
sbb
pop
or
mov
pushf
ret
xlat
pusha
stos
iret
call
or
dec
and
je
mov
movs
dec
imul
jo
xor
aam
shl
sar
retf
mov
sti
rcl
das
xchg
pushf
adc
dec
ins
push
nop
ja
movs
test
ja
xor
mov
push
popa
pop
cmps
lea
test
int
pop
mov
dec
je
push
mov
pop
push
js
pusha
addr16
test
shl
sub
and
and
and
xor
inc
sub
inc
inc
jne
add
rcr
push
jl
sar
les
push
les
mov
jmp
cli
sub
test
mov
hlt
cmp
pushf
outs
mov
call
inc
pop
push
mov
xchg
test
stos
inc
mov
mov
sub
mov
js
fbstp
lods
xor
sbb
and
or
loop
mov
push
loopne
jp
shr
das
jl
mov
test
xchg
push
and
or
pop
or
stc
pop
push
inc
std
add
sbb
pop
cld
lods
out
pop
outs
pop
repz
shr
mov
ret
mov
jl
test
jo
nop
xor
mov
mov
add
test
js
xchg
scas
inc
mov
cmp
test
xor
loopne
imul
jmp
movs
pop
imul
iret
pop
or
fsub
cli
mov
jl
push
ins
fst
adc
inc
mov
je
adc
je
ins
mov
int3
mov
scas
cld
jne
pushf
pop
aam
jae
hlt
xchg
mov
int3
repnz
sub
jmp
and
xor
cdq
fstp
and
test
movs
sub
aas
xor
mov
fnstenv
push
mov
jo
divps
mov
dec
les
ins
sbb
(bad)
mov
iret
mov
mov
jge
push
mov
add
jl
mov
aam
mov
(bad)
cmp
mov
push
mov
(bad)
mov
mov
pop
js
dec
cmp
imul
in
mov
adc
movs
xor
mov
jbe
mov
cdq
cmp
fdiv
push
pop
cmp
cmps
sti
jl
mov
mov
ins
mov
call
xchg
inc
rcr
pop
cdq
mov
pusha
pop
mov
mov
mov
shr
jmp
push
movs
xlat
test
sar
jle
xchg
rcl
pusha
ret
rcr
add
jae
mov
in
mov
aam
mov
xchg
mov
push
cmc
mov
sub
mov
stos
call
push
push
mov
xchg
mov
mov
cwde
jp
mov
cmp
sub
pop
test
test
int
mov
pop
sub
ins
in
adc
test
pushf
jo
ja
inc
xchg
fnstcw
jl
mov
js
jo
jne
push
hlt
add
shl
lods
dec
mov
cli
mov
sahf
std
popf
mov
jle
pusha
dec
scas
inc
ret
xor
bound
lea
cmp
je
pushf
adc
fmul
gs
in
mov
push
pop
sbb
mov
push
cmc
fiadd
retf
imul
out
inc
in
sub
jmp
mov
jl
mov
xchg
push
jg
xchg
xlat
gs
loop
pop
jo
pop
js
rol
stc
mov
lock
je
aam
mov
lea
je
mov
push
mov
push
fs
fcom
dec
mov
ret
or
pop
mov
cmp
sub
leave
mov
(bad)
mov
aad
cmps
ins
xor
pop
pop
rol
sub
test
mov
leave
je
retf
fsubr
jl
or
(bad)
adc
popf
das
js
(bad)
sub
test
clc
pop
ds
inc
jne
enter
cwde
jns
lods
xchg
jae
ret
cmc
loopne
fdivr
rcr
sub
sbb
lds
cmp
mov
call
sub
pop
movs
retf
mov
mov
mov
adc
or
(bad)
mov
cld
push
jnp
and
out
xlat
popa
jl
jl
stos
jne
mov
fistp
into
ret
stos
xchg
int3
mov
mov
je
mov
les
fisub
neg
push
ret
addr16
leave
lods
dec
and
movs
xchg
in
push
rcl
mov
data16
mov
mov
and
add
pop
in
add
imul
iret
aas
xor
iret
ds
fs
xchg
clc
dec
call
int3
movs
cwde
int3
jo
(bad)
cmc
fwait
mov
pushf
(bad)
mov
rol
ds
pop
or
imul
retf
gs
popf
xchg
mov
mov
jl
mov
push
shl
mov
and
jp
jno
in
jge
jmp
ror
jmp
aaa
jge
dec
cmp
int
inc
xor
into
xchg
mov
sub
pop
dec
inc
jns
(bad)
js
mov
mov
xor
xchg
sbb
jne
and
sub
push
mov
mov
ins
das
stos
jne
movs
popf
push
ins
dec
popa
push
or
mov
daa
sub
test
or
jae
in
jnp
out
lock
jno
ins
je
pop
dec
inc
call
mov
popf
jo
je
mov
mov
jae
mov
mov
ins
mov
inc
cmps
push
jne
jbe
mov
pop
sar
mov
jb
mov
xchg
inc
fmul
mov
in
aam
loope
dec
adc
xor
stos
into
fstp
jns
loopne
push
inc
(bad)
mov
mov
push
pop
movs
ins
push
ror
scas
inc
ins
jno
test
inc
ds
loopne
ds
hlt
and
pop
retf
retf
jl
jnp
test
xor
adc
xchg
jle
jl
and
rol
pushf
xchg
xor
test
in
cs
push
sbb
or
mov
jmp
pushf
dec
inc
xor
aas
xor
ds
ins
xor
ja
inc
cmp
sbb
jbe
inc
pop
call
das
and
sub
(bad)
scas
adc
into
ds
sub
loopne
jmp
inc
pop
mov
cmp
ja
xor
cmps
enter
jnp
and
jns
test
push
jge
sbb
movs
push
jl
sub
xor
mov
jl
jle
mov
les
out
inc
xor
xchg
and
ins
push
imul
and
ret
cmp
out
je
(bad)
mov
out
ror
mov
jle
popa
add
pop
push
inc
(bad)
xor
das
std
je
ss
mov
sub
mov
add
pop
adc
dec
dec
push
mov
sub
or
sub
call
pop
(bad)
push
dec
stos
popf
xor
(bad)
pop
pop
jb
sbb
or
or
xor
jl
mul
rcr
adc
xchg
cmp
loope
gs
in
test
cmp
pop
cmp
add
pusha
pop
sbb
mov
mov
jbe
mov
lahf
xlat
adc
and
mov
shl
js
mov
pushf
push
test
ds
push
fnstsw
daa
jge
pop
sub
or
add
push
in
jb
mov
loop
pop
push
sti
mov
iret
aad
outs
gs
sbb
cmp
test
pop
or
imul
jnp
test
dec
push
sbb
lods
and
(bad)
mov
add
(bad)
rcl
xchg
js
data16
sub
je
call
xor
test
and
and
dec
ds
outs
xor
out
cld
sti
adc
rcr
outs
push
adc
sbb
and
les
pushf
mov
test
or
mov
cmc
jnp
js
shl
lea
jp
xchg
loopne
xor
or
std
dec
jbe
dec
aam
sti
fs
and
sbb
xchg
xor
mov
jp
ss
xchg
push
cmp
cmp
sbb
jmp
fdiv
adc
sti
mov
enter
rcr
ds
push
add
push
push
pop
cs
jns
adc
std
pop
push
pop
jl
int3
jp
jb
nop
sub
bnd
cmp
adc
jne
call
pop
pop
lods
dec
in
mov
jae
or
sbb
mov
test
les
jo
pop
mov
xchg
mov
aaa
hlt
mov
cmp
fdivr
sbb
fadd
dec
push
add
dec
add
pop
jmp
pop
adc
js
push
movs
mov
js
pop
and
or
aam
ins
add
in
(bad)
jae
adc
mov
cli
mov
out
scas
int3
test
in
out
aam
sub
das
xchg
retf
lahf
xchg
rcr
or
jge
rol
mov
add
mov
sbb
int3
push
fs
add
cmp
pushf
nop
push
mov
imul
push
lock
icebp
je
cmp
inc
pop
jbe
loopne
pop
bound
pop
das
mov
xlat
adc
mov
sbb
ret
mov
test
push
les
lods
ror
test
je
pop
movs
mov
xchg
mov
je
jae
sti
sti
dec
in
push
or
mov
je
(bad)
mov
sbb
je
mov
xchg
ja
jl
cmps
aam
cmps
outs
loopne
adc
ror
retf
mov
xlat
adc
lods
addr16
xchg
cld
and
popf
rol
test
xor
fs
jno
or
sbb
in
xor
xor
add
add
ja
sti
mov
pop
je
jne
call
sub
push
jl
jne
lea
cwde
jae
movaps
out
ins
pop
or
xlat
jae
sub
mov
mov
out
mov
std
movs
into
leave
lods
inc
mov
aad
mov
es
popf
pop
sbb
xchg
xchg
aam
hlt
add
ja
out
mov
inc
inc
sbb
jo
stos
popf
es
jo
sub
xchg
xor
jl
fs
pop
js
adc
mov
js
cmp
lods
jmp
add
imul
mov
mov
mov
mov
cwde
add
pop
repz
jge
icebp
cli
out
sub
add
imul
mov
pop
sub
add
or
mov
xchg
add
xor
popa
cmp
mov
jbe
lods
push
or
fnstcw
cmp
fstp
jl
dec
jl
xor
je
hlt
and
cli
mov
in
sbb
(bad)
(bad)
or
lea
cdq
shr
mov
sahf
push
ja
imul
add
add
pop
pop
pop
loope
loopne
cli
adc
sbb
sub
fisttp
pop
jo
in
jl
and
jmp
jmp
and
hlt
sub
jl
xchg
and
loope
xchg
pop
fcom
inc
aam
in
ror
jl
js
and
test
(bad)
sub
cwde
cmp
repz
adc
movs
outs
es
xchg
test
xor
into
fs
inc
int
and
jo
fadd
aaa
inc
repz
jge
add
mov
idiv
sbb
sub
je
mov
jo
cmps
call
jmp
fsub
imul
pop
les
out
cli
fmul
xor
in
movs
sbb
jecxz
and
mov
and
pushf
pop
and
sar
cs
xor
adc
retf
mov
aad
add
arpl
push
rcr
sti
add
cwde
jmp
sub
xchg
sbb
jno
xor
ror
hlt
sub
shl
pop
js
sti
pushfw
cmp
test
xor
test
jmp
aam
mov
cld
js
(bad)
popf
jmp
xlat
adc
in
and
jnp
sub
inc
test
mov
outs
test
sahf
xchg
xchg
stos
mov
(bad)
mov
fsub
jmp
push
stc
mov
in
stos
pop
mov
les
leave
leave
xor
xchg
in
xlat
cmc
in
lahf
push
xor
imul
xor
mov
imul
sbb
or
popa
rcr
jbe
xor
ss
xor
lds
fcomp
adc
jne
dec
sti
pushf
mov
inc
das
sar
and
or
pushf
(bad)
jmp
lods
imul
clc
outs
or
add
imul
fadd
xchg
cmp
hlt
fist
xor
jns
fstp
or
test
js
fs
repz
mov
mov
xchg
rcl
cld
ins
or
pop
adc
nop
mov
sub
mov
sub
sar
and
jae
inc
sti
dec
sti
adc
shr
cmps
daa
sub
mov
mov
lods
mov
sti
or
ja
adc
push
sbb
pop
mov
jmp
or
xchg
out
hlt
mov
lods
adc
pop
add
mov
mov
xchg
jne
jbe
mov
rcl
pop
mov
outs
das
pop
out
aam
pop
repz
mov
sbb
rol
sbb
push
sbb
fwait
aad
pop
data16
and
xchg
dec
aam
clc
adc
iret
hlt
loopne
pop
mov
xor
sub
aam
push
ror
test
or
stos
outs
sub
out
mov
and
into
jecxz
stos
xchg
xchg
sub
jg
sub
into
in
push
push
cli
test
mov
pop
mov
loop
mov
pop
mov
push
or
fstp
je
scas
fisub
loope
stc
mov
xchg
fidivr
js
adc
jb
jl
add
(bad)
daa
mov
clc
jge
mov
popf
paddq
aad
mov
inc
xor
jg
test
push
hlt
fsub
ins
ins
mov
inc
inc
sti
jmp
shr
popf
vminpd
js
jmp
pushf
mov
xchg
mov
test
pop
fld
jns
pushf
mov
pushf
sar
jp
fimul
daa
push
dec
leave
push
test
ins
rol
ror
je
ret
aam
test
adc
aad
(bad)
repnz
mov
clc
out
in
lock
mov
push
and
outs
movups
scas
rcl
cli
xchg
ret
jl
dec
je
mov
mov
mov
cmp
scas
mov
adc
es
call
shl
jb
push
arpl
jnp
adc
ds
jbe
shl
add
or
dec
jle
hlt
rol
fadd
imul
cmp
aad
adc
shr
scas
fcmovu
in
fdivr
push
push
ss
dec
dec
sub
not
out
pop
cli
test
popf
mov
xchg
(bad)
sbb
clc
test
jo
mov
dec
je
ds
cmp
ja
popf
push
pop
jmp
jg
test
loopne
repnz
movs
xor
repnz
rcr
inc
xor
xor
lods
lods
xchg
pop
jmp
nop
sub
enter
out
or
jbe
mov
call
outs
jge
push
xor
mov
repnz
xchg
enter
inc
lahf
das
shr
into
leave
mov
sub
cld
pusha
pop
(bad)
mov
fidiv
outs
adc
(bad)
fdiv
add
loop
in
push
adc
out
cmp
call
fidivr
inc
cmps
dec
add
ret
imul
sub
shl
xchg
fsubr
outs
popa
bound
lock
pushf
mov
lods
test
cdq
xor
nop
mov
xchg
ins
pop
int
add
and
int3
and
pop
push
sub
jbe
imul
shl
int
scas
dec
sbb
jbe
fisubr
mov
and
daa
mov
lock
fldenv
fcom
xor
push
cmp
and
mov
push
jno
fsubr
ror
push
dec
inc
sti
add
cmc
call
jge
mov
scas
je
enter
jnp
cmps
mov
jmp
lea
mov
into
retf
sti
fs
inc
inc
mov
mov
ins
jmp
sub
cli
inc
dec
cmp
jp
ret
ins
and
push
sbb
in
push
mov
xor
das
cmc
jnp
imul
add
jae
ins
shl
fs
jecxz
push
outs
ins
push
push
cmp
mov
lahf
mov
movs
mov
in
pop
mov
ret
mov
mov
or
cmps
cdq
test
mov
and
(bad)
or
sbb
sub
mov
call
iret
repnz
adc
pop
inc
sti
pop
adc
popf
dec
push
or
push
add
or
test
stos
pop
movs
adc
out
or
not
xchg
aad
and
push
pusha
jg
push
fadd
dec
add
gs
bound
jge
cld
dec
dec
sub
fld
cmp
xchg
neg
mov
cmc
(bad)
mov
das
mov
sahf
retf
inc
jno
mov
test
(bad)
in
dec
movs
lea
push
mov
movs
jne
dec
ja
pusha
imul
adc
ss
js
jo
and
push
sub
outs
imul
cmc
ja
ss
shr
dec
aad
and
sbb
test
mov
mov
mov
jp
mov
je
lea
mov
dec
(bad)
std
push
sbb
sbb
push
jo
hlt
test
jne
clc
and
fwait
ds
lods
xchg
rol
test
call
mov
mov
mov
mov
fwait
cmp
call
xor
mov
xor
sub
stos
xor
shl
inc
push
sub
daa
cli
sub
sahf
sbb
fdivr
pop
test
jo
pop
jbe
push
sar
imul
fild
add
xchg
sbb
js
pop
gs
in
xor
jo
xor
xchg
jnp
inc
js
data16
push
pop
cdq
pop
mov
ret
mov
xchg
(bad)
and
movs
and
fwait
xchg
xchg
js
iret
dec
xchg
or
fs
movs
xchg
aam
sub
retf
retf
cwde
fwait
push
(bad)
jmp
call
sbb
mov
inc
cmp
jne
push
mov
xor
inc
inc
or
push
add
dec
fsub
push
rcr
mov
xlat
pop
test
shr
mov
call
xchg
xor
add
and
cld
push
push
outs
ins
ins
movs
mov
fcmove
test
cwde
mov
inc
movs
lea
(bad)
xchg
add
movs
inc
inc
mov
pusha
lea
retf
cwde
mov
push
mov
sahf
test
pop
and
addr16
lock
call
dec
cmp
dec
aam
int3
sbb
fmul
sbb
jns
dec
adc
(bad)
stc
and
push
je
pushf
cmp
in
pop
and
ins
dec
push
sbb
mov
jge
(bad)
enter
loope
dec
push
sbb
cmp
mov
pop
lock
xor
add
or
mov
cmp
xchg
shr
xchg
adc
mov
jmp
xchg
fs
xchg
xchg
inc
(bad)
or
inc
stos
mov
jno
popf
test
xor
mov
fmulp
test
mov
cmps
xchg
add
ss
jne
out
in
fdiv
in
arpl
push
sub
sti
sbb
dec
push
bound
loopne
jo
lahf
xor
imul
sbb
jbe
jl
mov
scas
mov
nop
mov
jbe
or
sbb
pushf
mov
cmp
js
dec
pop
mov
adc
xchg
imul
or
out
clc
inc
jns
call
call
inc
pop
xchg
ins
sbb
sub
jbe
sub
stc
aad
loop
mov
inc
cwde
jae
ror
mov
test
aam
sbb
std
xor
not
jle
or
ds
push
jne
sbb
push
ins
cs
imul
cmp
xchg
int
inc
hlt
xor
sub
and
adc
shr
jne
jb
in
pushf
pop
push
mov
sub
out
add
or
dec
add
jae
push
jns
fnstcw
mov
cld
sub
shl
cli
jl
lahf
mov
out
pop
ror
xor
shr
fdiv
aaa
or
leave
stos
adc
inc
in
pop
and
out
pop
jne
push
loope
shl
sbb
cli
or
mov
test
pop
stos
mov
cld
sbb
div
sbb
mov
test
clc
dec
push
ins
je
push
push
sbb
push
and
jns
xchg
ret
je
jno
jb
mov
dec
xchg
mov
sbb
gs
jl
cmps
retf
sbb
add
pusha
outs
sub
xor
std
jl
push
or
jl
dec
popa
sub
pop
test
dec
shr
cli
or
and
pop
xor
out
ja
xor
mov
mov
inc
xchg
xor
test
in
adc
pop
cmp
in
pop
adc
int3
xor
adc
mov
push
fmul
in
pop
mov
lods
and
in
push
dec
ja
inc
cmp
loopne
imul
scas
push
mov
addr16
(bad)
fldcw
call
ds
push
jo
aam
popa
je
ins
and
or
cli
push
push
or
jbe
push
js
sub
jl
lahf
pop
xor
pop
shr
jl
mov
sub
ins
mov
aam
inc
mov
push
adc
cwde
movlhps
jg
pop
cld
in
inc
pop
cmp
jl
push
inc
adc
pop
and
outs
cmp
push
inc
sbb
adc
pop
xchg
repnz
fs
mov
mov
pushf
addr16
sub
push
push
xor
mov
push
imul
mov
daa
call
test
pop
and
je
fmul
mov
test
mov
(bad)
aad
mov
cmps
sbb
lock
imul
xor
pop
jb
je
ja
clc
outs
js
push
pop
call
xor
mov
jbe
push
and
mov
mov
movs
sub
js
jnp
aam
sahf
pop
jl
jno
clc
cmp
adc
dec
push
pop
or
call
loop
xchg
or
jg
fs
fdiv
adc
inc
stc
mov
cli
pop
mov
lds
mov
or
jl
retf
lock
push
push
xor
jo
inc
sbb
dec
push
adc
addr16
dec
inc
jbe
push
jb
mov
sub
shr
sbb
inc
fst
mov
xor
sbb
je
xor
jp
cld
ds
pop
ins
jbe
outs
jge
dec
and
sub
aas
inc
and
test
pop
pop
cwde
out
hlt
add
jmp
je
ja
xchg
fdiv
and
jns
popa
and
adc
call
sar
and
cld
jo
(bad)
mov
adc
mov
leave
mov
mov
add
gs
mov
leave
mov
js
pop
pushf
xor
pop
sbb
sbb
adc
and
arpl
add
aas
mov
push
mov
fcmove
fs
imul
or
cmp
inc
je
xor
cmp
ins
sbb
inc
xor
jne
sbb
push
cmp
ja
test
pop
inc
pusha
mov
into
mov
xchg
sbb
jnp
dec
jl
cli
fs
inc
popa
in
add
enter
xchg
imul
cmp
call
imul
ffree
inc
cdq
pop
call
test
ins
imul
xchg
xchg
lea
push
xor
movs
jns
mov
inc
push
push
inc
and
sub
mov
push
push
test
cmp
inc
or
ins
dec
sub
xchg
imul
inc
hlt
xor
add
jbe
jae
imul
push
mov
jbe
bound
ins
mov
sub
imul
in
in
or
mov
sbb
mov
nop
int3
ror
adc
jne
jl
push
mov
push
xor
outs
sub
repnz
fstp
pop
aaa
loopne
je
pop
cmp
pop
ja
les
push
hlt
cwde
xchg
push
mov
lea
push
sbb
rcr
adc
aam
jne
aaa
stc
mov
mov
in
jo
dec
or
fisub
cmp
cmp
cmp
pusha
jbe
je
mov
ja
bound
je
pop
inc
and
push
arpl
mov
dec
xor
call
fs
daa
inc
sbb
out
in
jne
sub
arpl
cmp
xor
cld
(bad)
outs
pop
mov
pop
push
jl
sbb
sub
pop
popa
jae
inc
jp
pop
je
sbb
jb
je
mov
fmulp
pop
dec
nop
jge
fstp
ror
cmp
xor
les
mov
sbb
sub
add
jp
inc
or
mov
sub
sbb
js
je
push
jne
arpl
jp
dec
adc
je
sub
movs
pushf
js
in
or
jnp
bound
xor
push
jge
nop
sbb
push
gs
push
data16
push
imul
nop
jo
and
aam
sub
adc
add
mov
test
jl
mov
out
adc
and
dec
xchg
cmp
je
cmp
pop
pusha
push
jne
js
loopne
jns
in
int3
jl
or
shr
xor
cwde
dec
mov
or
xchg
clc
lods
mov
sar
mov
dec
pop
xchg
sbb
int3
sbb
sahf
jp
fcmovne
stos
repz
inc
sbb
adc
inc
cmp
inc
mov
jns
cmp
or
sub
data16
jo
jo
ins
jnp
cmp
pop
cwde
mov
fs
js
sbb
xor
fs
adc
dec
dec
pop
ret
std
call
dec
dec
fist
jl
jbe
pop
js
loope
mov
jg
in
mov
cmp
aam
jnp
cmp
je
test
dec
clc
push
pop
cli
sbb
pushf
xchg
cs
sub
call
mov
xchg
mov
hlt
jo
mov
jl
in
pop
mov
mov
mov
push
pushf
outs
mov
jge
daa
sbb
sub
nop
dec
fdiv
dec
xor
pusha
arpl
test
xor
fs
test
sub
jbe
inc
push
imul
mov
pop
dec
sbb
ret
push
or
ret
xor
push
pop
jne
jbe
pop
cwde
bnd
test
xchg
add
add
mov
mov
sub
js
outs
mov
inc
add
cdq
push
lods
movs
mov
cmp
das
xor
fsub
mov
push
xor
push
(bad)
push
aam
pop
xor
jl
pop
dec
pop
mov
sbb
cmp
std
test
sub
test
sub
popf
aas
sub
pop
inc
aaa
fs
sub
lods
outs
xor
inc
pop
retf
jno
xchg
sbb
cmp
mov
fimul
fcom
push
addr16
and
jne
js
jo
jo
push
sbb
adc
jns
jne
fadd
xor
mov
pop
cwde
and
jae
or
or
test
push
jnp
sub
into
push
imul
sub
pop
or
pop
mov
test
js
lods
lahf
cmp
or
sub
adc
test
sub
push
fcmovnu
enter
js
ja
ins
jnp
sub
out
or
sbb
pop
add
jl
and
push
clc
js
pop
and
and
in
jo
inc
dec
je
js
fs
and
xor
cmc
ins
pop
jl
pop
cmp
pop
addr16
arpl
or
mov
pushf
(bad)
not
out
push
jne
mov
mov
jl
jae
fs
sub
retf
cmps
pusha
ret
sub
push
sub
mov
ds
int3
pop
jmp
mov
cmp
ins
dec
jae
icebp
jmp
mov
in
ds
add
xchg
jl
js
mov
dec
stos
sub
imul
movs
js
push
sub
mov
add
add
jb
dec
int3
inc
outs
cmp
sar
in
jne
aam
jns
cld
jnp
inc
and
movs
jns
cmp
jmp
ins
xor
sub
sub
pop
test
sbb
data16
dec
jp
pop
bound
adc
ins
js
jno
mov
test
pop
cmc
rcl
dec
cmp
jl
jne
je
je
or
push
sub
fimul
std
adc
inc
add
and
pop
sbb
das
les
mov
dec
mov
jae
jmp
pop
xchg
xchg
and
outs
pop
mov
test
cmp
sbb
aad
xor
clc
pushw
or
sti
test
ins
add
add
jl
not
mov
je
push
gs
jnp
and
shr
sbb
js
cmp
sbb
mov
jl
xor
mov
pop
pop
dec
lock
and
js
imul
or
xlat
mov
cmp
test
iret
add
jl
jnp
jae
mov
sub
sbb
dec
or
mov
mov
popa
pop
dec
fdivr
push
add
fcomp
jb
out
stos
clc
push
lods
les
and
shr
ins
xchg
xor
ins
movs
xchg
jo
shl
test
mov
rcr
sbb
sbb
je
jnp
pop
cmp
push
inc
cmp
stc
(bad)
mov
adc
cld
enter
in
adc
aaa
les
movs
and
int3
cmp
cld
inc
std
cmp
and
mov
gs
int3
pop
push
dec
pop
dec
fs
popa
jp
push
dec
popf
xor
push
push
and
enter
xor
es
or
and
sbb
popf
pop
xor
inc
adc
test
add
ds
sub
bound
in
sub
jne
xor
pushf
push
bound
inc
xor
imul
push
xchg
dec
adc
sbb
xchg
xchg
test
mov
jae
setg
aas
sub
cwde
jne
xor
test
inc
and
xchg
push
push
sbb
mov
idiv
fld
dec
and
cmp
cmp
js
or
and
inc
dec
fdiv
jl
outs
imul
gs
addr16
push
add
aam
jge
push
dec
adc
test
mov
push
push
jmp
dec
inc
das
push
cmps
push
cmp
js
push
jl
rcl
mov
lods
test
ja
imul
ds
adc
xor
outs
jge
dec
bound
cmc
pushf
pushw
repnz
push
pop
sub
lock
push
inc
sub
out
pop
jmp
push
mov
xor
and
cmp
pop
dec
mov
(bad)
in
jo
fs
inc
xchg
push
in
dec
or
mov
add
cmp
xor
or
sub
cmp
jmp
fs
sbb
jmp
jns
pop
pop
jnp
ds
lock
pop
inc
xor
ret
and
and
sar
pavgb
push
inc
jno
xchg
inc
js
fimul
sub
dec
push
jb
fsubr
popa
sub
adc
pop
js
push
push
imul
push
arpl
sbb
imul
in
pop
pusha
das
pop
sub
sub
mov
cmp
pop
int
cmp
clc
jno
cld
lock
inc
add
mov
jnp
aam
jae
push
dec
aas
jns
dec
ss
sub
sub
jmp
and
push
pop
and
ds
inc
inc
div
lock
jl
pop
data16
pushf
push
pop
sbb
inc
imul
add
and
addr16
jle
jl
adc
sbb
into
in
sub
inc
jae
clc
jge
pop
dec
psllw
add
xchg
jl
sub
jns
jae
sub
sub
ror
dec
sbb
push
ss
push
outs
cli
int3
pop
jne
xchg
dec
fs
push
imul
pop
je
jge
push
ja
shr
jbe
pop
push
cmp
clc
mov
shl
inc
mov
push
pop
mov
sbb
jbe
jl
push
in
push
inc
cmp
test
cmp
pop
dec
sbb
outs
xor
and
out
dec
sbb
cwde
inc
dec
add
outs
es
and
in
adc
pop
in
inc
xchg
jg
pushf
dec
sub
loope
dec
shl
imul
js
cmp
std
dec
sub
pop
xor
sbb
pop
pop
adc
test
mov
mov
pop
enter
ds
test
popa
push
xor
jp
xor
or
cld
addr16
jbe
mov
jae
in
js
lods
hlt
add
xor
jne
add
xor
push
push
sub
imul
aam
xor
inc
push
jp
rcr
cli
inc
jo
shl
je
jp
adc
dec
dec
and
fwait
add
sbb
push
jno
jp
push
push
push
sbb
inc
dec
jge
pop
addr16
xor
js
mov
inc
dec
outs
cld
sub
jns
daa
adc
cwde
cmp
cmp
pop
add
xor
mov
sbb
xor
push
pushf
jbe
imul
test
shr
add
outs
mov
mov
and
ja
adc
cmp
pusha
js
xor
jp
fwait
clc
push
push
ja
js
ins
sub
sub
outs
fucompp
mov
es
jl
push
test
jo
mov
pop
sbb
jo
pop
pop
push
imul
cld
inc
inc
xor
and
nop
aaa
aas
lock
jo
cmp
jns
and
jne
cmp
inc
dec
in
dec
pop
push
and
js
sbb
test
xchg
inc
and
imul
jp
fdivr
jb
sbb
hlt
dec
push
or
push
jmp
mov
out
cmp
jbe
repnz
test
mov
mov
daa
std
mov
sbb
in
sbb
popf
sbb
pop
and
push
mov
imul
in
push
js
jns
jl
xor
fdivr
rcr
stc
dec
pop
and
cmp
sub
mov
outs
pushf
int3
js
ins
push
fs
jns
add
jae
sbb
inc
test
or
inc
cmp
push
sbb
xor
sub
adc
and
or
add
push
mov
or
lds
push
data16
adc
and
sti
in
leave
add
inc
cmp
cmp
fadd
or
sub
jmp
adc
shr
xchg
inc
dec
dec
jp
mov
arpl
pushf
jne
sbb
push
and
mov
xchg
xor
dec
int3
loopne
dec
pop
adc
fdivr
outs
aam
data16
sub
test
loop
fdiv
sub
mov
bound
lods
sub
imul
cmp
inc
adc
inc
jl
inc
xchg
jb
and
in
cli
mov
mov
cwde
pop
shr
sub
lods
je
sbb
dec
jae
ins
jns
cmps
les
nop
sbb
pop
fcomp
arpl
in
sbb
dec
pop
ss
fs
pop
dec
cmp
lock
xor
pop
imul
inc
cmp
xchg
push
lds
jl
rcl
jne
push
mov
jo
les
sub
mov
and
aam
sbb
xor
je
inc
and
fidiv
dec
dec
ja
jmp
or
sub
js
push
je
pop
jb
jae
cmp
mov
enter
sar
into
loope
pushf
mov
loop
test
add
imul
push
xchg
js
jnp
fiadd
jecxz
hlt
mov
inc
test
inc
les
push
fs
and
dec
std
test
sub
dec
cli
js
not
cmp
inc
leave
mov
xor
xchg
fadd
scas
and
ret
in
aas
xor
ins
cmps
cli
mov
push
cmp
inc
dec
mov
push
mov
loopne
cmp
xor
jns
cmp
shr
(bad)
cli
sbb
sar
mov
jecxz
clc
jne
aas
inc
icebp
and
cmc
mov
inc
cli
inc
inc
dec
mov
fild
cmps
jne
fsubr
js
(bad)
retf
add
push
and
cmp
gs
xor
jne
jl
arpl
cmp
cmp
clc
add
xchg
test
push
les
jbe
jne
js
dec
cli
add
and
sub
int
mov
or
bsf
mov
test
or
shr
jl
push
arpl
jae
ds
adc
ins
stos
pop
pushf
fs
fcmovnu
fstp
dec
mov
je
clc
xor
jne
sub
jp
and
(bad)
hlt
push
call
xor
push
enter
shl
pop
sbb
push
in
stc
sbb
mov
fidivr
sti
cmpxchg8b
xor
fiadd
sub
jns
mov
outs
and
push
xor
adc
dec
imul
imul
xor
inc
mov
cmps
cs
sbb
push
pushf
aam
sbb
and
inc
ins
rol
in
and
and
or
jns
and
imul
rcl
cld
hlt
ins
jb
(bad)
cwde
int3
push
push
pop
add
and
dec
pop
dec
add
xor
clc
mov
data16
jo
pop
inc
push
(bad)
fcom
inc
in
inc
dec
cli
in
push
mov
xchg
imul
js
jo
call
mov
xor
arpl
imul
or
sub
dec
xor
iret
inc
mov
push
ins
mov
jne
sub
out
or
je
and
and
cmp
add
push
cli
xor
and
ja
repnz
xchg
or
mov
jmp
pop
add
or
je
ror
and
xchg
or
jo
pop
out
shr
setle
xor
loopne
push
jb
xor
dec
stos
inc
inc
movs
les
ds
cmp
test
shr
pop
push
movs
jne
push
push
ins
and
mov
mov
cwde
std
test
dec
or
sub
gs
bound
stos
pushf
push
pop
cmp
jbe
jae
arpl
pop
cs
neg
cmp
fstp
enter
sbb
xchg
or
repz
xchg
dec
aad
lahf
cdq
ins
fptan
jl
push
stos
in
mov
xor
cmp
mov
adc
jbe
jne
ins
mov
xor
fsubr
pusha
add
pop
mov
push
pop
xor
popf
or
ror
fs
jb
pop
ins
xor
outs
adc
mov
jne
pop
jns
inc
iret
jp
sub
(bad)
pop
cld
dec
mov
test
ja
push
in
jg
loopne
shl
xchg
xor
out
enter
add
or
mov
rcl
and
sub
ins
jg
lods
jno
ins
ja
icebp
iret
scas
xor
jb
push
pop
pop
mov
push
pushf
in
dec
push
xor
sub
sar
test
push
nop
clc
addr16
int
cmp
movs
adc
cmp
xor
jge
retf
bound
jae
and
adc
mov
inc
jge
add
pop
mov
adc
iret
and
shl
aad
dec
nop
test
shl
xor
je
xchg
movs
cwde
adc
js
mov
movs
or
jb
js
sub
lods
jmp
mov
push
jno
sbb
dec
jae
fs
mov
dec
movs
inc
sbb
imul
or
pop
test
aam
push
aad
data16
sbb
jle
das
lods
in
dec
add
(bad)
jo
aam
enter
jl
mov
repnz
lods
data16
test
adc
fsubr
rol
in
in
sub
and
daa
enter
xor
jbe
sub
lock
or
jno
lods
mov
add
rcr
xlat
call
add
cld
repz
clc
sub
inc
xor
sar
cmp
aam
es
into
dec
push
stos
jg
lock
dec
pop
sbb
int3
sub
cmp
mov
xor
rol
shl
test
test
mov
and
jno
jae
outs
push
test
loop
inc
in
imul
jg
dec
aam
xchg
inc
mov
xor
xor
or
je
mov
arpl
ins
shl
out
and
mov
sub
jg
je
sub
in
mov
sbb
in
adc
cmp
aad
jecxz
in
repz
jne
adc
push
mov
into
mov
push
jae
ds
addr16
call
cwde
cs
ficom
cmp
jae
push
jb
in
mov
jg
fimul
cmp
bound
pop
push
pusha
je
fwait
mov
and
pusha
inc
gs
or
pop
inc
pop
popa
ja
bound
push
dec
icebp
mov
popa
and
dec
popf
js
push
push
or
imul
push
(bad)
outs
push
push
pop
out
dec
in
dec
or
imul
jmp
int
jne
sub
div
scas
adc
fsub
out
push
push
xchg
int3
and
imul
daa
and
fdivr
pop
mov
pop
lods
popf
clc
inc
pop
fwait
mov
fmul
and
pushf
outs
aaa
xor
cmp
nop
cmp
or
pop
xchg
pop
pop
in
addr16
rol
sbb
aas
std
dec
xchg
rol
cwde
sbb
mov
xor
nop
outs
inc
inc
cmp
inc
cmp
push
push
dec
ds
and
ss
dec
inc
hlt
cmp
mov
icebp
inc
jp
sub
add
cdq
cmps
inc
and
pop
and
clc
jbe
dec
push
fcomp
pop
ret
cld
mov
imul
ins
ins
inc
out
je
pop
pusha
popa
imul
outs
lock
jb
aad
fadd
jno
sbb
jp
cmp
fmul
rcl
cld
inc
push
inc
je
jp
in
cli
pop
ja
out
mov
stc
hlt
add
xchg
dec
xor
out
xchg
js
jp
add
cli
adc
and
fadd
pop
push
test
jne
dec
and
sbb
adc
outs
sbb
out
adc
das
pop
je
sub
or
cld
es
or
rol
adc
pop
iret
fs
jne
fdiv
pop
or
add
pushf
std
cld
add
cmc
xchg
pushf
icebp
hlt
(bad)
(bad)
fiadd
adc
sub
inc
in
inc
mov
inc
and
cmp
mov
pop
mov
lock
ins
(bad)
fsubr
je
dec
js
mov
mov
sbb
popa
pop
xor
dec
mov
cmp
adc
mov
sub
int3
xchg
es
call
in
outs
mov
enter
jp
lahf
jp
retf
add
adc
inc
jp
mov
mov
mov
loope
(bad)
and
adc
push
fnstsw
clc
call
pop
xor
or
leave
lods
call
sbb
ror
jecxz
pop
adc
js
inc
xor
add
sub
mov
fsubr
fsubp
(bad)
outs
into
rcl
div
rcl
jge
clc
or
mov
adc
pop
or
sbb
adc
fwait
inc
sub
movs
cmp
dec
inc
push
in
dec
pop
lea
je
and
pop
fsub
sbb
repz
push
in
jne
jnp
add
fmul
push
jp
sbb
sbb
js
adc
aad
xor
(bad)
adc
sub
cmc
mov
xchg
xchg
pop
sti
mov
movs
mov
mov
jp
or
dec
loopne
jp
mov
ins
mov
jne
les
cmps
mov
lahf
mov
test
push
les
add
sub
cld
out
mov
cmc
mov
scas
sbb
mov
test
jmp
in
push
pop
sbb
jl
and
lock
enter
retf
fsubr
cld
sbb
pop
jmp
and
in
add
cli
enter
je
hlt
in
gs
or
add
shl
sbb
and
pop
mov
ds
int3
mov
sbb
loop
sub
push
imul
inc
dec
and
push
fcomp
(bad)
fs
inc
adc
fnstenv
retf
ins
lds
mov
int
bound
and
jl
addr16
xchg
aam
dec
fwait
jle
cmp
xchg
ins
jp
js
popf
aas
pushf
sbb
fld
mov
mov
xchg
cli
shl
int
in
fld
push
mov
cmc
nop
push
mov
jmp
mov
jl
pushf
jo
aad
sub
and
cmp
adc
or
xchg
outs
shl
in
jp
add
rol
mov
cld
fadd
shr
jnp
retf
inc
and
ins
mov
shl
jge
(bad)
or
push
push
mov
mov
push
jne
push
imul
mov
ins
arpl
inc
sbb
in
xchg
mov
lahf
movs
push
add
stos
stos
in
test
pop
jp
mov
mov
cwde
xchg
in
jl
fwait
js
jp
ds
jmp
mov
stos
push
or
sti
pushf
stc
fmulp
mov
call
mov
dec
loop
in
cdq
jne
jmp
inc
pop
call
movs
mov
int3
ins
out
aad
or
inc
fucomi
jbe
mov
push
push
stos
stos
sbb
xchg
lods
ror
call
aad
add
sub
mov
je
mov
clc
add
ins
(bad)
cmp
popa
retf
pop
pop
fdiv
pusha
push
cmp
pop
push
mov
int3
ins
and
push
pop
popf
sbb
mov
jbe
pop
mov
in
dec
pop
push
and
mov
loopne
shl
popf
rcl
dec
in
mov
mov
pop
add
or
cld
mov
jnp
nop
xchg
push
cmp
jno
push
sub
jp
sub
popf
out
xlat
hlt
movs
scas
mov
test
leave
dec
jne
loop
pop
sub
push
enter
int3
je
push
mov
jmp
cmp
cmc
fld
mov
sar
nop
loopne
mov
mov
test
fucom
push
mov
pop
rep
imul
add
pop
jmp
je
jmp
js
xor
pop
gs
in
sbb
ss
and
mov
cli
pushf
push
pop
ss
jo
cmp
push
pop
add
and
fcom
aad
mov
xor
jo
in
div
mov
xchg
popf
cmps
ret
test
cdq
pushf
and
and
xchg
ins
push
xchg
fdiv
pop
je
test
ss
je
cmp
aad
mov
mov
pushf
push
cmps
xchg
cmp
mov
sub
mov
cmps
stc
rol
pop
fadd
movs
mov
mov
jl
mov
push
shl
retf
cmps
cmp
mov
mov
stc
push
(bad)
sub
std
mov
out
je
push
loope
rcl
(bad)
shr
mov
call
out
add
loopne
push
cld
adc
pushf
in
xor
nop
push
cs
jne
outs
or
in
or
add
push
push
shl
xor
jp
mov
pop
adc
add
in
push
jmp
cmp
ret
iret
iret
cli
cdq
mov
push
lahf
in
(bad)
aam
ins
stos
jp
pusha
aam
jne
mov
cmps
sbb
sbb
ins
out
(bad)
xor
cmp
leave
adc
je
repnz
xchg
jo
mov
pop
xlat
mov
lock
mov
shl
jl
mov
fwait
mov
mov
mov
gs
or
in
jmp
out
mov
rcl
mov
std
jl
call
push
inc
xor
jo
ret
push
je
jne
hlt
out
enter
pop
sub
dec
push
mov
push
ins
cmc
and
dec
mov
adc
rol
ret
mov
out
mov
in
fs
in
xlat
jmp
cli
shr
ins
(bad)
loop
js
mov
in
fwait
popa
cwde
push
test
mov
jo
push
sub
and
inc
movs
popa
lods
and
fs
xchg
loope
pop
enter
jmp
(bad)
cmp
popf
sar
into
mov
jne
mov
ins
sbb
mov
mov
movs
je
mov
jbe
call
push
lock
pushf
test
repnz
pop
add
sbb
(bad)
in
xor
je
shl
test
je
out
or
jl
ja
xor
je
hlt
mov
popf
sbb
inc
fdivr
pop
ins
push
jno
sbb
mov
mov
lock
mov
jne
xchg
xchg
sahf
push
lods
add
les
loope
jae
loopne
fs
clc
mov
add
push
idiv
add
mov
sbb
call
or
(bad)
in
xlat
outs
and
dec
ins
les
xchg
in
pop
js
sub
nop
ror
mov
mov
aad
ja
xlat
xor
sti
mov
mov
ins
iret
mov
pop
sar
into
retf
mov
test
sub
adc
sub
mov
xchg
dec
js
pop
in
push
xor
in
imul
mov
pslld
shl
loopne
cmp
stos
js
xchg
fs
movs
jl
or
pushf
adc
xor
or
ja
addr16
(bad)
cld
lock
push
popf
jp
add
sbb
hlt
fdiv
out
call
cmp
aad
in
je
xchg
jnp
mov
xchg
int3
test
stos
sbb
cmc
cwde
ja
mov
push
bnd
stc
in
xor
mov
test
adc
jne
fidivr
test
je
js
rcl
retf
stos
and
add
xor
dec
fcomp
mov
call
je
jl
cmps
sbb
inc
icebp
mov
in
test
shr
pop
mov
inc
or
xor
jne
mov
in
inc
ret
(bad)
movntq
add
jl
or
jo
push
dec
push
mov
movs
data16
jl
cmp
sbb
out
jns
mov
cli
add
cwde
push
repz
fsubr
outs
jo
(bad)
out
js
(bad)
fucomi
push
jle
nop
or
push
dec
xchg
xchg
mov
push
mov
sahf
mov
cli
in
shr
jmp
mov
xchg
shl
int3
loopne
test
fdivr
int3
mov
fdivr
lods
mov
into
stos
in
arpl
scas
xchg
pushf
fdivr
les
xor
leave
cmp
mov
sbb
adc
neg
fimul
adc
xor
nop
std
js
in
add
ins
imul
jae
(bad)
icebp
xchg
ins
pop
fs
xchg
dec
or
in
jl
or
sbb
dec
jp
pop
imul
lods
ss
dec
cmc
repz
mov
call
cli
in
jle
cli
rol
fistp
ret
sbb
int
or
pusha
test
mov
js
xchg
clc
les
cdq
mov
nop
ds
jmp
fidivr
or
test
fs
loope
in
jl
fidiv
(bad)
xchg
mov
ret
pop
pop
int3
test
push
int
pop
and
lods
sbb
std
cld
mov
push
push
lock
je
aad
clc
push
fcomip
mov
jmp
fs
call
fs
cmp
retf
(bad)
loopne
ret
push
push
enter
pop
js
cmc
or
aaa
clc
pop
fs
mov
mov
dec
dec
ja
das
sub
hlt
repnz
mov
mov
(bad)
mov
lods
mov
fisttp
and
repnz
shl
jnp
mov
enter
stos
in
pop
xchg
mov
in
js
jle
cmp
mov
in
push
fstp
imul
jns
icebp
sar
clc
in
in
xor
jns
fdiv
mov
xor
leave
call
ins
ret
dec
mov
adc
mov
add
fld
sbb
sub
sar
mov
retf
(bad)
jns
stc
jnp
fcomi
add
in
push
pushf
adc
or
mov
cmp
dec
iret
in
add
inc
sahf
js
adc
jp
push
pop
mov
nop
popf
lock
or
push
ds
push
pusha
sub
or
mov
fwait
arpl
pop
xor
(bad)
jl
ret
fsubr
mov
push
xchg
movs
outs
pusha
stos
js
out
mov
dec
cmp
ficomp
jmp
addr16
xchg
ror
mov
out
popf
mov
and
mov
fidivr
xchg
je
cld
cmc
iret
in
jo
icebp
(bad)
cmps
js
shl
fs
mov
or
mov
pop
leave
push
mov
(bad)
xlat
or
fldenv
call
adc
adc
fadd
adc
cmps
pop
loopne
les
mov
in
jl
call
nop
imul
push
stos
jne
ror
repz
ds
and
sub
sti
cmp
pushf
push
popa
(bad)
sar
pop
push
jae
push
jge
sub
sub
jl
mov
enter
cwde
hlt
fnstcw
enter
rcr
retf
adc
push
sbb
mov
shr
sub
ret
jle
test
scas
mov
mul
inc
js
retf
shr
mov
mov
lods
neg
mov
imul
je
mov
repz
and
fs
les
mov
std
xchg
fbstp
sbb
dec
gs
push
shr
push
fdivr
aad
out
out
mov
push
cld
jge
add
mov
test
hlt
cwde
mov
ret
mov
adc
and
mov
push
xchg
mov
call
or
dec
or
outs
sub
cmp
dec
push
mov
mov
outs
push
push
pop
sti
sub
popf
out
dec
mov
push
cwde
js
nop
movs
std
cmp
out
add
xor
mov
cmps
test
xchg
xor
jl
mov
je
cmps
test
bound
clc
je
fcmovne
retf
stc
xchg
pop
or
push
imul
test
cmp
iret
cmps
jmp
aad
js
sub
mov
aaa
jl
iret
mov
or
movs
bndldx
cmp
js
leave
les
movs
lods
sub
xchg
pop
pop
ret
retf
out
nop
shl
add
mov
pushf
or
out
ins
mov
ret
jo
mov
push
cld
iret
jl
imul
push
push
loope
loopne
jne
jns
push
pop
jg
in
inc
cli
clc
add
cli
mov
ror
mov
pop
dec
(bad)
loopne
js
fcomi
fnsave
fdiv
movs
fs
je
cwde
std
cmp
xchg
and
(bad)
fs
mov
sbb
clc
jecxz
int3
xor
jmp
int3
jb
retf
mov
fld
xor
lds
sbb
shl
inc
mov
je
das
iret
mov
int3
retf
jl
mov
in
mov
hlt
and
pop
or
or
dec
pop
adc
mov
mov
jbe
mov
lods
and
loopne
rcl
lods
jnp
xchg
xchg
jae
xchg
in
mov
imul
add
adc
pop
and
push
push
pushfw
js
jno
cld
jl
arpl
dec
jg
push
fs
sub
in
jmp
jp
(bad)
in
test
dec
fidiv
into
in
cmp
lahf
mov
in
(bad)
popf
scas
xor
pop
jmp
aas
xchg
and
push
mov
sbb
pushf
shl
in
retf
leave
stos
je
cmps
mov
pop
je
iret
test
lds
push
mov
stos
arpl
sbb
lods
cdq
cmc
and
test
cld
pop
loopne
sbb
cli
or
sbb
push
adc
jo
fidivr
enter
sti
sbb
in
inc
sar
adc
add
mov
out
push
pop
fisttp
ins
sbb
fidivr
in
cld
xchg
ror
nop
jns
push
dec
mov
push
jnp
pop
pusha
addr16
inc
dec
pop
ins
and
das
cmp
or
and
icebp
jl
mov
mov
stos
je
jl
mov
or
aam
jecxz
pop
mov
jl
xchg
je
mov
mov
stos
cmp
mov
mov
add
push
retf
pop
mov
cmc
movs
adc
push
aad
test
mov
ins
shl
xchg
jne
(bad)
sti
mov
add
ror
sub
mov
mov
cmp
cli
test
push
jo
adc
jmp
stc
lock
mov
js
ret
in
jecxz
call
js
cwde
call
clc
dec
xchg
xchg
or
test
mov
rcr
loop
aad
mov
addr16
sub
aam
jl
jl
sbb
pop
pop
sub
jl
std
or
push
mov
iret
pop
in
(bad)
in
inc
ret
inc
test
je
jmp
push
fsubr
jo
mov
(bad)
jmp
js
sbb
mov
addr16
mov
cdq
sahf
sbb
xchg
mul
lock
mov
iret
mov
jb
out
mov
push
jp
(bad)
cmps
test
add
(bad)
mov
fild
pop
test
fs
pushf
mov
(bad)
repz
push
cli
shl
movs
mov
rcl
enter
(bad)
pusha
call
call
mov
pop
mov
in
loopne
jo
test
js
loop
push
jbe
loopne
sbb
xor
cli
dec
sub
pop
dec
dec
dec
and
xor
pop
cs
push
jp
popf
mov
cli
in
jecxz
xor
cmc
int3
mov
aaa
int3
mov
sahf
sub
js
fwait
mov
mov
add
mov
jmp
je
xor
inc
imul
stc
(bad)
rcr
lock
pop
jl
mov
je
mov
jo
lods
lea
mov
lods
sbb
jle
cmp
mov
sub
mov
mov
fdiv
and
nop
sbb
je
je
enter
sbb
enter
mov
mov
jge
lods
stos
cmps
dec
cmps
int3
je
mov
clc
sbb
out
xchg
add
lahf
mov
mov
and
push
sbb
push
js
pop
es
inc
cmps
mov
fidivr
mov
jge
jmp
mov
fsub
add
fdivr
lea
test
xor
loopne
mov
push
jmp
mov
push
movs
mov
imul
mov
enter
scas
mov
or
mov
pushf
fmul
xchg
pushf
rcr
jnp
int3
scas
pop
and
mov
mov
test
test
xchg
ret
stos
jo
mov
les
popa
sbb
add
cdq
in
retf
outs
aam
push
hlt
sub
cld
movs
(bad)
mov
fs
mov
hlt
push
popf
lahf
hlt
call
js
cmps
mov
jns
idiv
ja
pop
and
dec
dec
dec
or
jl
push
push
push
mov
jmp
mov
inc
dec
int3
movs
repz
sbb
jno
aam
cld
jl
lahf
lods
loop
ficom
adc
mov
add
(bad)
int3
and
in
sti
and
cli
int3
cmp
xor
sbb
stos
mov
cmc
mov
mov
mov
mov
dec
jl
mov
loopne
jb
fidiv
sub
enter
adc
mov
cmc
mov
jno
fsub
mov
sub
clc
cmp
stos
push
and
push
or
inc
ins
in
xor
fdiv
sbb
hlt
adc
fcmovnbe
sbb
mov
stos
test
lock
or
pushf
mov
xchg
xchg
mov
clc
scas
mov
pop
mov
inc
pop
pushf
lds
sub
js
pop
pop
pop
ja
cmp
adc
fdiv
cld
sbb
jmp
mov
mov
jne
pop
pop
and
xlat
loopne
hlt
push
out
cmp
pop
js
lods
mov
clc
mov
popf
cwde
mov
jmp
fsubr
jo
adc
ror
or
shl
outs
int3
xchg
into
cmps
inc
pop
mov
imul
pusha
mov
and
fcom
pusha
out
nop
cld
outs
mov
mov
sub
lock
mov
and
in
movs
jno
fcmovu
mov
iret
in
js
ret
rcr
xchg
mov
hlt
and
cmps
dec
(bad)
fcomp
dec
scas
mov
mov
add
and
jl
sbb
ret
jl
pop
pushf
jl
ds
dec
dec
sbb
pusha
std
adc
sbb
in
xor
in
sub
jmp
test
dec
mov
mov
test
mov
adc
pop
mov
push
movs
movs
fs
mov
mov
jmp
jl
(bad)
outs
pushf
in
rcr
jo
xor
mov
retf
loopne
push
lds
shl
leave
test
jl
adc
mov
xor
xor
jae
cdq
sti
push
mov
jne
aad
test
and
fld
sub
push
sbb
out
jmp
fidivr
sbb
aam
in
(bad)
lock
in
lahf
in
ds
fisub
ja
retf
jns
clc
std
ficom
mov
xor
and
je
push
dec
push
mov
sbb
fprem1
or
sbb
test
xor
jl
test
and
cmps
and
and
mov
test
push
mov
mov
mov
retf
lods
pushf
xlat
mov
mov
int3
loopne
jmp
xor
aad
sbb
leave
push
ins
push
xlat
sbb
mov
aam
mov
mov
in
ins
mov
xor
enter
in
fstp
add
std
mov
cli
jmp
in
in
dec
outs
int3
into
dec
jne
loope
ins
lock
cwde
in
mov
mov
cmp
mov
add
pop
and
jns
push
pop
dec
test
js
popa
addr16
ds
mov
mov
dec
repz
pop
xor
inc
xor
xor
push
cmps
pushf
call
ins
int
cmc
mov
cwde
push
int3
mov
in
pop
ret
mov
cwde
mov
lods
sub
ret
cmps
cli
mov
fnstcw
jp
fnstsw
jmp
aam
test
fs
popf
in
pop
jo
in
jl
mov
cmp
mov
mov
lods
call
pop
repz
(bad)
cli
adc
sbb
sbb
add
lods
nop
in
fsub
jmp
in
arpl
cli
div
mov
mov
(bad)
addr16
mov
loopne
jb
sub
fsubr
idiv
stc
sbb
into
jne
pop
std
jl
jo
push
mov
push
ds
pusha
push
aaa
jge
dec
xor
cmp
into
in
loope
inc
in
(bad)
stos
inc
sbb
cld
dec
(bad)
cs
cmc
or
push
jae
ja
ret
test
mov
loopne
mov
mov
scas
aad
or
dec
lds
mov
pushf
dec
sar
fsubr
and
cmp
jmp
push
iret
inc
jae
(bad)
and
and
fsub
fs
mov
mov
mov
jl
mov
mov
mov
dec
ret
cmps
xor
movs
test
(bad)
cmp
adc
push
adc
sub
mov
push
jecxz
jl
call
xchg
fcom
int
imul
test
loopne
loopne
enter
mov
push
xor
sub
inc
cli
pop
pop
gs
jl
outs
jo
pop
sbb
dec
push
xchg
jl
mov
or
and
pop
add
add
gs
push
je
mov
sub
pop
out
fdiv
in
mov
dec
ret
enter
dec
or
ret
cmps
xchg
test
mov
fs
add
xchg
mov
test
push
hlt
xchg
fnstenv
push
data16
jp
leave
stos
xchg
repz
mov
mov
jo
lods
push
retf
dec
mov
test
cmps
jne
mov
shl
mov
jl
not
cmp
xor
mov
aam
loop
cld
cmc
hlt
in
jg
mov
mov
ja
test
and
push
mov
in
jo
cwde
cmc
test
test
sub
cs
push
push
pop
test
ins
sbb
dec
xor
jl
push
sbb
rcr
std
sub
jmp
inc
les
lock
pop
call
(bad)
jp
fucomip
stc
sbb
loop
jl
sti
std
test
std
mov
cld
mov
mov
pop
in
jl
repnz
xor
mov
cmp
push
shr
in
sar
nop
cwde
push
push
shl
xor
jo
sar
fxch
pop
xor
jns
cmp
jne
adc
cmp
out
int3
je
std
enter
adc
mov
dec
aam
pop
stos
push
mov
jl
mov
mov
lock
sub
jl
push
push
and
je
bound
inc
out
push
pop
or
add
idiv
jmp
dec
ins
js
cmp
je
cmp
out
clc
fwait
cmps
push
fucomip
push
loopne
cmp
mov
mov
enter
iret
sbb
jl
scas
sub
mov
fadd
movs
je
leave
cmps
gs
loopne
je
jmp
scas
jne
scas
(bad)
sub
fs
push
mov
mov
mov
mov
jae
sahf
test
add
addr16
dec
xor
dec
je
push
push
add
in
les
add
inc
cs
push
into
jp
xlat
fucom
cli
mov
sub
and
inc
cs
xor
pop
nop
pop
jl
pusha
inc
jl
sbb
fsub
sbb
add
in
or
retf
loope
mov
add
jl
xor
cmc
js
js
(bad)
jne
mov
dec
jl
and
test
aam
adc
mov
das
mov
mov
mov
mov
and
jmp
(bad)
movs
sub
cmp
fisttp
ret
movs
adc
in
call
sbb
in
adc
std
xchg
cs
sbb
push
pop
aas
push
xchg
push
cmp
imul
add
push
popa
pop
mov
ror
neg
dec
data16
push
sbb
xor
clc
pushf
pop
in
or
out
jo
or
leave
pushf
fldcw
leave
sti
xor
add
add
dec
mov
jmp
push
push
pop
mov
adc
adc
xor
hlt
nop
int
out
sbb
jo
(bad)
push
leave
sbb
xlat
in
les
mov
(bad)
(bad)
in
pop
rol
test
fdiv
int3
cmp
mov
pusha
push
fld
movs
and
iret
jp
loope
stos
fstp
mov
push
in
push
dec
push
imul
or
fsubr
js
(bad)
mov
fs
cmp
into
(bad)
ror
mov
shl
add
(bad)
adc
dec
sbb
sub
sbb
push
sub
jl
adc
inc
and
dec
dec
inc
push
hlt
jnp
xlat
fsub
pushf
add
jne
inc
call
test
sub
cmp
jno
sub
mov
and
jl
mov
je
jl
daa
jmp
retf
or
fdiv
cmps
cld
jb
test
lock
cmp
aam
cli
or
in
and
adc
(bad)
popf
pusha
fldcw
js
lods
mov
and
add
push
int
pop
mov
loop
mov
xor
dec
cld
ds
ds
rol
(bad)
int3
jo
cli
je
xor
push
mov
aad
mov
cmp
sbb
adc
ficomp
call
cmp
pop
out
xor
jle
cmp
cmp
push
nop
mov
aam
cli
xor
sub
or
sub
ins
push
xor
sbb
xor
jmp
pop
dec
dec
dec
jl
sbb
shr
mov
and
push
pop
sub
mov
addr16
in
pop
hlt
cli
xchg
js
mov
test
dec
mov
(bad)
int3
mov
std
nop
enter
ins
fstp
cmp
xor
je
je
fs
push
stos
scas
jae
ja
add
jmp
sub
call
cld
xor
pop
push
int
push
(bad)
mov
add
mov
jmp
fnstcw
push
ds
push
(bad)
fcomp
jp
cmp
adc
adc
pop
data16
jbe
add
in
add
shl
pop
std
hlt
push
cmp
cmp
or
jmp
cmp
mov
xor
sub
je
pop
es
inc
push
or
mov
test
jne
add
jo
aad
adc
ret
pop
mov
mov
stos
lods
aas
imul
dec
movs
sub
(bad)
cmc
lods
push
lods
mov
arpl
sti
cli
test
scas
repnz
dec
je
jl
in
or
sbb
(bad)
lock
nop
lahf
push
xor
cdq
mov
std
movs
cmc
cld
or
shr
and
cli
nop
retf
(bad)
adc
inc
ss
cmc
out
leave
xor
or
pushf
nop
fcmove
mov
out
je
cld
jmp
jo
loope
pop
or
clc
(bad)
das
js
(bad)
cli
lods
jmp
pushf
cmp
xor
fsub
pop
clc
out
inc
push
pop
inc
les
or
xor
pushf
dec
stc
call
mov
cmp
sar
mov
sub
jl
inc
dec
mov
pop
xor
or
dec
sbb
sbb
in
jmp
ja
lods
mov
xchg
fwait
pushf
push
shl
fs
fsub
in
repz
add
es
jl
push
mov
ins
(bad)
stos
jp
or
ds
call
fcomp
test
jo
xchg
pop
js
test
aam
lock
jp
leave
int3
iret
sahf
test
into
ret
frstor
dec
cmp
dec
fld
dec
mov
mov
add
add
lock
add
fcomp
repnz
out
stos
inc
jb
push
cwde
pop
movs
mov
or
sub
add
std
fs
scas
in
cmp
jo
clc
fiadd
loope
fs
push
hlt
out
call
bound
pusha
pop
push
cmp
dec
sbb
xor
inc
dec
ret
pop
mov
push
dec
cli
cmp
sbb
in
test
call
xor
xchg
mov
in
sahf
cmp
div
cwde
and
out
dec
aaa
jl
outs
cmps
xchg
ss
jp
sub
inc
(bad)
push
lahf
mov
mov
mov
or
js
mov
fwait
in
in
cmp
in
mov
nop
xchg
xor
sbb
push
sub
sub
mov
std
out
mov
cmp
xor
ds
int3
push
xchg
cmp
imul
hlt
aad
stos
dec
inc
sub
dec
cmp
aas
daa
adc
sbb
jmp
push
rcl
sub
lar
sub
pop
std
mov
shr
or
mov
ds
std
enter
fs
push
pusha
cmp
sbb
clc
icebp
pushf
lock
in
pop
scas
mov
pop
mov
xchg
xor
mov
pop
mov
cld
shl
pop
imul
sbb
daa
and
inc
hlt
mov
retf
(bad)
mov
je
(bad)
out
jns
vpminsw
lahf
outs
movs
scas
lahf
jae
in
sbb
cmp
test
(bad)
pop
sahf
test
jo
stc
xchg
adc
push
sbb
jp
loopne
mov
dec
cli
mov
in
rol
cld
test
lea
imul
cmc
ffree
in
retf
mov
fs
retf
(bad)
adc
std
je
and
and
and
inc
cmp
sbb
push
dec
test
lahf
outs
mov
inc
daa
mov
inc
push
fs
ds
dec
jne
pop
dec
iret
sub
and
pop
or
sbb
je
std
push
cld
loopne
mov
sbb
xchg
mov
cli
jl
pop
jnp
and
out
sbb
xchg
cmp
sub
js
or
dec
push
lock
clc
sbb
enter
test
les
shl
movs
jb
jmp
cmp
rcr
xor
hlt
sbb
pop
js
mov
cmc
mov
in
jb
jns
jne
adc
sbb
xchg
repnz
xor
ins
or
cmc
jecxz
pshufw
mul
inc
pop
call
fcmovnb
mov
loop
push
shr
dec
fcom
push
mov
push
jl
dec
je
imul
cmp
cmp
mov
mov
pop
pop
pop
les
or
arpl
inc
inc
fdivr
push
inc
cmps
jo
inc
inc
ds
ds
adc
jp
movups
lock
(bad)
popf
mov
hlt
out
push
jns
in
dec
mov
(bad)
mov
dec
cs
lock
jae
js
sub
jp
sbb
pushf
and
adc
pop
push
hlt
mov
into
in
stc
enter
mov
adc
pop
js
and
jns
fcomp
std
shr
push
inc
rol
add
cdq
add
push
or
ret
xor
push
addr16
pushf
jl
sub
mov
push
sar
call
in
enter
hlt
test
lds
mov
pop
mov
out
test
inc
inc
xor
dec
dec
cmp
pushf
push
xchg
pop
int3
inc
push
inc
inc
lahf
pop
pop
(bad)
in
jo
pop
dec
fisttp
xor
jl
dec
dec
aas
and
mov
test
mov
add
adc
test
jle
das
imul
aad
pop
mov
add
sbb
sub
aam
cmp
outs
push
pusha
imul
ss
or
data16
add
stos
add
pop
add
cmp
mov
and
dec
xchg
mov
(bad)
sbb
mov
dec
push
adc
icebp
jecxz
test
pop
addr16
mov
add
fs
out
ror
or
sub
pop
xor
fs
hlt
(bad)
scas
and
mov
test
cmc
pop
xor
lods
jb
dec
movs
dec
sub
shr
rcl
jg
jo
ins
addr16
pop
pop
or
push
loop
pop
inc
inc
xor
dec
js
inc
inc
jge
inc
dec
ds
(bad)
adc
or
pop
mov
jl
jmp
fs
or
lock
ins
out
cld
or
sub
mov
cmp
pop
fs
xchg
mov
into
mov
sti
cmp
push
inc
sub
repz
leave
sub
mov
dec
fcomip
je
clc
add
in
add
ins
ins
aad
js
rcl
mov
mov
jge
mov
aam
mov
or
out
jmp
hlt
in
jo
mov
cmc
fadd
stc
test
fst
mov
rcl
imul
sbb
mov
pusha
adc
in
fsubr
cmp
loopne
push
dec
inc
(bad)
pop
xchg
popa
dec
cmps
dec
mov
cmps
pop
pop
mov
cs
fs
pop
cmp
push
xor
pop
push
cmp
adc
inc
jp
add
test
jl
das
add
mov
fcom
or
jmp
(bad)
jl
dec
push
bound
or
jp
mov
jl
sbb
cmp
jo
pop
adc
xor
mov
(bad)
jmp
or
loope
test
jecxz
push
in
dec
js
call
js
xchg
xchg
shl
idiv
jmp
adc
lock
sbb
inc
or
aam
rcr
or
pop
lds
leave
cmp
fadd
fst
retf
fadd
pushf
jne
les
push
mov
loopne
bound
mov
pop
popa
pop
adc
and
or
cmp
push
push
push
push
ins
jg
add
push
test
fs
je
dec
fdivr
adc
das
nop
ja
xor
mov
mov
out
pop
jns
div
shl
lahf
test
jl
stc
stc
inc
repnz
jne
sub
jl
push
arpl
imul
jl
js
adc
jl
cmp
adc
or
sbb
add
and
loope
call
(bad)
out
ins
aad
in
clc
sbb
ret
mov
push
jl
jmp
adc
test
rcl
out
mov
add
add
sar
(bad)
cmps
jge
test
jl
cli
push
in
mov
cmc
mov
inc
inc
mov
(bad)
sub
jne
push
and
inc
push
pop
lods
loopne
xor
fs
dec
test
jnp
pop
pop
nop
lock
inc
push
inc
shr
push
push
inc
fs
sub
fsub
std
jmp
jmp
clc
nop
fidivr
mov
out
je
fdivr
adc
lock
mov
push
int3
mov
jns
sbb
adc
sub
dec
sbb
xor
push
mov
stos
push
sub
aam
clc
fsubr
imul
nop
xor
std
imul
jbe
push
adc
fdivr
or
ins
retf
aam
adc
mov
sbb
mov
stc
jmp
in
cs
sub
dec
inc
mov
mov
lock
pop
fld
push
jns
cmp
jg
cld
jo
test
fs
dec
les
push
scas
je
shl
mov
test
xor
les
mov
sti
shr
mov
loop
pop
cmc
jl
jl
shr
fs
cmc
or
lods
cmp
das
push
int3
mov
xor
sbb
push
jp
cmp
jp
xor
in
jmp
inc
sbb
mov
loop
sub
js
mov
xlat
aam
pop
fnstsw
xchg
xchg
mov
nop
test
std
xor
jl
or
out
in
pop
jecxz
mov
scas
and
fs
fs
xor
ds
out
movs
nop
push
out
lods
hlt
cmp
daa
in
xor
cwde
xor
pushf
inc
dec
mov
pop
dec
pop
clc
dec
push
mov
add
pop
push
jnp
ret
cwde
in
inc
fwait
mul
xor
mov
pop
cmp
and
or
add
jmp
push
fcomp
int3
jmp
xor
fcomip
or
clc
xor
sub
cmp
push
lea
jl
leave
in
add
jl
mov
hlt
pop
mov
and
jo
iret
out
jl
sub
push
mov
mov
mov
rol
clc
mov
cli
sbb
enter
mov
sbb
shl
in
loop
mov
xor
enter
jne
sbb
mov
cmp
cmp
sbb
inc
dec
xchg
adc
clc
ds
test
pushf
jl
or
pop
pusha
push
mov
cmp
add
test
mov
ds
div
loopne
outs
ror
repz
movs
jl
call
xlat
pusha
in
in
push
mov
add
xchg
frstor
lock
stc
or
push
xor
and
mov
int
mov
jl
stc
push
sbb
stos
sub
jmp
xchg
mov
push
push
lds
ins
out
add
aad
test
popf
xor
(bad)
mov
lock
dec
js
sbb
ins
sti
call
(bad)
test
mov
clc
add
std
pusha
or
jge
sbb
and
mov
fsubr
inc
inc
xor
cld
or
jl
lea
dec
dec
test
xor
fdivr
push
push
and
xor
nop
les
pop
mov
sbb
das
sub
aam
in
pushf
add
enter
push
retf
push
mov
add
ins
xchg
int3
cwd
movs
jp
fsubrp
jmp
fcomp
pop
imul
imul
dec
push
jae
sub
call
sbb
in
and
pop
ins
mov
and
ins
mov
call
(bad)
hlt
ins
fcomp
repnz
jnp
xchg
mov
call
fcom
js
or
mul
lock
or
xor
stc
pop
fdivr
and
and
mov
sub
mov
xor
nop
fdivr
enter
inc
jne
jno
jo
cmp
cmp
jge
dec
dec
inc
inc
pop
cwde
sub
ret
or
das
sub
fdiv
jmp
rcl
and
data16
nop
cld
xor
out
repnz
mov
pop
xchg
fsubr
mov
daa
dec
mov
test
pusha
sub
cli
jl
addr16
pop
loopne
in
or
cli
pop
mov
int3
and
push
(bad)
jmp
jl
fild
ins
(bad)
pusha
leave
loope
ins
fsubr
js
fsub
mov
movs
call
outs
jmp
jp
push
cmc
rcr
mov
add
fs
add
push
push
pop
jmp
enter
pop
sub
cwde
les
nop
fdivr
test
ds
cmp
aam
por
fs
aaa
adc
or
mov
cmp
xor
in
into
cli
mov
sahf
adc
sub
lods
sub
sti
xchg
xchg
popf
pushf
cmps
lods
mov
jns
mov
and
jl
xchg
xor
or
std
add
xor
jg
lods
pop
mov
jo
push
movs
push
jbe
cmp
imul
cli
dec
push
or
leave
ja
jmp
ins
ror
imul
js
pusha
test
out
fsubr
repnz
jmp
aam
clc
mov
mov
mov
repz
mov
movs
aad
adc
jns
sbb
lods
int3
sub
call
xor
adc
cmp
xor
cdq
lea
push
aaa
cmp
inc
dec
push
into
test
push
sbb
mov
fsub
add
xchg
or
mov
mov
mov
mov
je
sahf
mov
xchg
call
sub
xchg
cwde
cmps
in
out
jb
push
mov
jmp
popa
pusha
mov
jnp
mov
xchg
inc
push
xchg
xor
add
not
xchg
pop
pop
push
test
sbb
retf
and
stc
jne
fldcw
imul
cdq
or
xor
jl
mov
ins
pop
retf
jae
add
and
mov
mov
lock
ins
push
cs
cmp
pop
js
test
xchg
xchg
popf
inc
inc
cmp
push
lock
in
xor
dec
pop
sbb
mov
adc
sbb
push
sub
mov
mov
push
std
jo
in
jge
cmc
adc
fucom
mov
js
in
jo
sub
xor
sar
stc
in
push
mov
dec
popf
and
dec
sbb
sar
je
jbe
sub
dec
sub
add
xor
mov
or
xor
aad
or
hlt
adc
pop
icebp
pop
into
xor
in
dec
and
xchg
push
addr16
in
cmc
dec
inc
in
clc
ret
in
sub
test
sub
fsub
xor
aaa
cmp
jne
cli
movs
cld
sbb
cs
and
cli
mov
sub
das
sub
mov
and
repz
mov
pusha
sbb
int3
pop
push
hlt
popf
cwde
add
dec
ds
xor
adc
mov
rol
outs
mov
fnstcw
int
mov
cli
jl
(bad)
jnp
xchg
sahf
inc
mov
rcr
sub
loopne
clc
test
add
ins
test
aad
pop
inc
xor
jne
inc
dec
stc
or
mov
out
arpl
bound
pop
jg
ins
pop
out
xor
pop
cmp
and
add
ins
cli
dec
out
jo
std
mov
mov
(bad)
pcmpeqb
shr
push
pop
fisub
pop
push
imul
add
jo
rcl
(bad)
push
mov
lds
add
mov
fwait
dec
shr
int3
mov
mov
pusha
push
and
add
xor
loop
in
jl
sub
movs
push
cmp
pushf
push
js
and
xor
pop
add
clc
xchg
add
pop
pop
adc
inc
mov
rep
sbb
sub
ins
(bad)
aam
add
push
mov
mov
xchg
mov
call
mov
ret
mov
or
idiv
repz
or
clc
sub
mov
ins
mov
jae
inc
jl
sub
push
push
pop
push
jo
xor
dec
clc
or
ins
or
sbb
add
and
sti
adc
mov
and
sub
movs
gs
cld
push
cld
or
mov
add
psubd
in
sbb
fadd
ret
rcl
add
xchg
into
push
les
(bad)
mov
inc
fisubr
jae
push
push
sub
xor
mov
jp
push
inc
cmps
out
lock
jne
and
adc
test
sbb
jp
hlt
cmc
out
inc
repz
xor
js
cli
dec
cld
and
mov
sbb
sbb
sub
sti
or
loope
shl
cld
pop
(bad)
adc
call
add
aam
dec
dec
dec
les
repnz
iret
repnz
or
inc
pop
js
js
ja
(bad)
mov
push
cmps
dec
data16
ins
xchg
dec
and
pop
jne
jnp
push
das
pop
je
outs
xor
sbb
inc
test
cs
call
inc
dec
cdq
mov
add
je
xor
hlt
dec
call
add
mov
add
fnstsw
sub
in
push
push
adc
es
dec
dec
inc
lea
pop
jmp
int3
ins
pop
cmp
gs
sbb
test
cmp
fadd
das
hlt
sub
xor
sbb
sub
cmp
xor
pushf
test
xor
pop
cs
sub
push
push
xor
sub
dec
push
int3
pop
push
fld
add
pop
ja
nop
pop
mov
in
jl
mov
js
xchg
popa
pop
out
jne
pop
jge
push
pop
arpl
pop
icebp
inc
jne
test
mov
fmul
inc
mov
and
push
pop
dec
push
mov
push
je
xchg
pop
test
mov
inc
dec
cmps
inc
dec
dec
sbb
pop
push
nop
and
(bad)
cmp
les
xchg
push
int3
enter
xchg
inc
sbb
inc
inc
push
aas
fdivr
xor
dec
dec
ins
push
dec
xchg
mov
cmp
adc
mov
mov
or
push
int3
mov
cmp
inc
xchg
xchg
push
pop
push
popf
je
push
pop
jnp
add
mov
push
push
mov
stos
jbe
pop
xchg
push
add
jb
ror
pop
dec
stos
ins
js
and
les
imul
fwait
pop
jecxz
inc
ins
bound
jmp
outs
imul
imul
push
imul
ins
lahf
dec
mov
pop
pusha
outs
sbb
push
bound
pop
mov
je
cwde
adc
inc
mov
jnp
push
push
push
adc
or
popa
add
inc
arpl
pop
add
push
js
mov
test
les
pop
(bad)
in
xchg
leave
dec
clc
pop
lock
xchg
rcr
mov
add
clc
dec
fs
nop
or
sub
nop
push
je
mov
into
aam
lods
js
repnz
add
dec
popw
outs
and
dec
pop
adc
jae
data16
pusha
mov
lods
ins
dec
pop
xchg
retf
fld
je
cmp
add
sub
mov
fs
sbb
mov
imul
enter
fmul
ja
xlat
je
rol
sub
ds
push
pop
je
push
sub
push
ins
iret
mov
test
dec
addr16
add
jo
jb
mov
les
in
loop
int
mov
in
cmp
jno
jne
push
clc
mov
push
dec
jb
ins
out
movs
sti
clc
add
or
mov
jns
mov
cmp
test
sysret
fcomip
sar
imul
jb
shl
mov
cmp
jne
mov
sub
mov
inc
in
push
adc
push
popa
adc
jns
(bad)
cmps
and
arpl
or
adc
jns
sbb
sti
mov
push
pop
and
push
lods
pop
js
daa
movs
aam
sub
sub
stc
inc
inc
inc
std
or
cli
mov
adc
sbb
in
ins
cmp
js
jp
shl
lods
enter
fiadd
mov
inc
sub
cs
sti
js
popf
push
pop
or
or
das
sub
loope
add
jo
adc
adc
test
mov
fimul
jle
cld
cmp
shl
loopne
jbe
sbb
ins
pop
sub
les
cs
js
push
add
jae
jns
sub
mov
ja
pusha
dec
push
mov
adc
mov
(bad)
cld
sub
cmp
je
jmp
repz
sub
das
je
out
push
push
arpl
and
jl
mov
cli
adc
and
add
add
pusha
jo
sbb
sub
mov
adc
pusha
outs
xor
sub
add
gs
add
adc
pop
mov
inc
cli
sub
ss
sti
in
cmc
cmp
test
into
push
les
mov
jl
je
xchg
or
mov
(bad)
repz
bound
jp
mov
shl
sbb
inc
adc
data16
shr
dec
bnd
jge
jmp
cmp
movs
or
es
dec
sbb
mov
push
ins
dec
outs
jnp
cmp
jne
inc
push
push
into
ins
add
jl
stc
std
mov
lock
fdiv
sub
add
add
js
prefetch
dec
pop
ret
dec
xchg
sub
jge
into
mov
inc
jns
lock
push
fsub
add
jmp
int3
(bad)
xchg
inc
ds
aas
fstp
std
push
mov
or
mov
test
pop
pop
lods
in
imul
inc
test
test
dec
cld
sbb
cmp
(bad)
cli
in
test
mul
sbb
xor
jl
sar
aaa
xor
daa
mov
sar
sub
icebp
test
popf
inc
pop
sti
loopne
clc
call
fmul
mov
aam
rol
enter
jb
icebp
add
out
xchg
xchg
adc
sbb
mov
js
adc
adc
mov
adc
test
jl
cli
sbb
xor
sub
jns
sbb
mov
setno
cmp
in
pop
hlt
or
or
outs
xchg
push
movs
(bad)
xchg
mov
sar
jbe
jmp
mov
xlat
popf
ret
mov
into
xchg
pop
aam
mov
adc
add
dec
jo
adc
push
sbb
sub
jnp
sbb
dec
add
sub
(bad)
mov
ins
and
fcomp
xor
xor
cli
or
repz
idiv
jl
je
hlt
push
or
sbb
addr16
mov
jmp
and
push
(bad)
int
pop
add
shr
mov
xchg
cmp
es
sbb
pop
or
push
outs
sbb
call
push
sti
mov
push
and
adc
fimul
out
js
pop
dec
(bad)
ds
add
mov
shl
out
cmp
lahf
mov
jmp
xor
pop
pop
or
ficomp
sub
or
cmp
add
and
dec
pushf
pop
mov
sub
das
xor
push
cmp
xor
fwait
cmp
and
adc
es
adc
mov
std
out
cld
xor
mov
mov
push
shr
mov
fsubr
jbe
call
push
dec
dec
int3
xor
test
adc
cli
verr
pop
mov
(bad)
(bad)
sub
repnz
call
mov
pushf
mov
ss
add
pushf
dec
dec
cmp
ds
cmp
adc
add
inc
push
sub
jp
sbb
sahf
add
sub
(bad)
clc
dec
push
pushf
jne
xchg
jns
test
leave
jl
sar
lock
popf
ins
push
dec
inc
dec
enter
retf
sbb
ja
inc
daa
(bad)
sub
pushf
cmp
ins
ss
xor
sbb
sbb
cmp
std
jo
aaa
cmp
ins
and
or
inc
and
sbb
(bad)
scas
mov
je
sbb
icebp
dec
ins
push
jns
js
test
xchg
jmp
sub
and
mov
mov
lahf
outs
js
push
cmp
dec
test
add
imul
cli
jo
add
je
or
pushf
sub
int3
or
fs
push
mov
sbb
xor
jo
push
adc
push
sub
adc
mov
cmc
jmp
pop
or
xchg
out
movs
cmps
mov
scas
push
push
jg
dec
add
imul
stc
je
push
hlt
(bad)
js
out
int
ins
push
fcomp
sbb
jbe
or
fs
cmp
sbb
xor
jns
cmp
fimul
mov
or
jnp
add
test
dec
fadd
shl
push
cli
pusha
jae
nop
or
add
mov
xchg
dec
test
mov
add
mov
addr16
jp
adc
fidivr
mov
in
jl
(bad)
ins
push
push
sub
sti
push
push
hlt
and
test
mov
push
and
call
mov
shl
add
hlt
cmc
test
test
cli
push
and
inc
mov
jne
imul
fadd
es
or
pop
fs
inc
jne
fdiv
js
int
shr
mov
or
sbb
std
and
icebp
int3
or
pusha
or
cwde
xchg
in
mov
mov
fadd
pusha
sar
or
add
push
(bad)
retf
cmp
out
jmp
inc
fs
lods
jl
mov
mov
pop
adc
and
mov
scas
jae
jbe
retf
fcom
bound
add
shl
mov
fwait
iret
mov
jae
test
lods
test
lock
add
mov
inc
sub
mov
in
push
(bad)
jne
(bad)
and
mov
nop
cmp
mov
iret
jae
fstp
je
sbb
sbb
or
xor
inc
repz
xchg
mov
mov
jnp
xchg
repz
push
mov
outs
jmp
addr16
pop
adc
mov
test
out
and
das
cs
cmp
loope
inc
stc
jmp
je
mov
mov
stos
je
ds
pop
(bad)
lods
je
mov
jp
rcr
pop
sti
test
cld
dec
dec
int
js
jecxz
test
push
jbe
push
mov
pusha
jl
(bad)
cwde
inc
adc
dec
mov
xchg
jae
jmp
shl
into
mov
xor
adc
mov
jmp
push
sbb
jmp
jecxz
js
add
mov
(bad)
jmp
xchg
sub
enter
mov
mov
popf
cmps
add
dec
loop
and
fdiv
in
int3
aad
cmp
push
(bad)
test
pushf
iret
add
jne
sbb
in
test
test
in
mov
jb
dec
inc
aaa
mov
(bad)
retf
clc
xor
cli
ins
adc
lea
fwait
jb
sbb
mov
lods
mov
mov
xlat
fnstenv
je
dec
or
rcl
mov
and
mov
ficom
clc
xor
jp
imul
cmp
jl
fnstenv
out
xor
js
add
and
test
loopne
push
push
dec
cli
adc
xor
push
repnz
loope
fistp
push
ins
sub
iret
xor
nop
cmps
rep
fld
xor
data16
jnp
(bad)
aad
call
ret
add
add
adc
out
test
sbb
mov
cmp
push
js
push
jl
pop
sub
xchg
xchg
in
add
xor
idiv
(bad)
fst
stos
ret
cli
movs
mov
ficom
jmp
jmp
xchg
js
mov
jae
(bad)
push
sbb
mov
pushf
fs
add
not
adc
jl
loopne
jp
inc
dec
push
cmps
jo
mov
jl
aas
xchg
add
push
js
and
movs
outs
xchg
sbb
jno
inc
pop
sub
add
or
daa
les
pop
in
mov
mov
les
mov
js
shl
cli
push
clc
push
jmp
pushf
jecxz
pop
pop
loopne
sbb
or
cs
xor
sbb
je
iret
mov
pop
mov
shr
xor
js
call
popf
sbb
push
nop
out
mov
imul
mov
out
add
mov
ror
hlt
jmp
in
xor
jmp
stc
(bad)
js
(bad)
std
jl
in
pop
add
or
outs
prefetcht1
clc
push
and
jno
es
adc
sub
ds
push
pop
and
adc
in
aas
xchg
jo
lock
int3
push
je
mov
iret
mov
mov
pop
cwde
imul
add
sub
popf
or
push
ja
or
mov
rcr
call
mov
cmp
enter
xor
lods
jne
sti
adc
test
sbb
test
push
out
cwde
push
out
js
(bad)
(bad)
jo
loop
ficomp
call
push
out
(bad)
outs
push
or
adc
pop
pop
jg
sub
xchg
js
aas
fwait
xor
nop
mov
pusha
test
add
nop
pop
ss
repz
jbe
jne
jo
sub
fidivr
test
and
rol
add
inc
mov
add
fisub
xchg
pop
retf
jae
aam
sbb
std
mov
sbb
xor
int3
cld
cmp
ins
adc
push
add
push
out
repz
push
(bad)
add
pop
push
lock
jmp
iret
aam
cmp
nop
dec
pop
or
movs
fild
(bad)
iret
push
repz
outs
cdq
sar
jns
jg
int3
add
mov
pop
or
call
(bad)
jge
in
ror
mov
outs
mov
les
retf
aam
lods
aad
les
fld
retf
jmp
mov
cld
icebp
adc
jp
loope
pusha
jns
lock
lods
in
cmp
rcl
jp
leave
iret
clc
and
and
dec
dec
(bad)
loopne
mov
xor
fstp
jmp
imul
jg
(bad)
test
stc
js
shl
dec
dec
jae
iret
fwait
push
mov
pushf
pushf
jns
je
add
(bad)
sbb
out
mov
pop
push
jae
(bad)
mov
stos
std
adc
mov
enter
xchg
mov
popf
mov
jmp
(bad)
jmp
cld
mov
mov
iret
repz
enter
xchg
add
push
shl
jo
aam
not
out
icebp
in
(bad)
fsubp
adc
or
cld
xor
jl
mov
in
inc
mov
sub
sbb
mov
aam
lds
and
js
ret
lahf
cwde
cmp
(bad)
jne
pushf
sub
cmc
adc
dec
jno
xchg
mov
cmp
ret
mov
lods
sahf
cmp
mov
sbb
int
cmp
sar
dec
pop
sub
pushf
jge
outs
mov
ret
pusha
cmp
cmp
ffree
add
fcomp
call
jp
vmread
mov
in
adc
in
add
dec
shl
push
(bad)
pop
hlt
(bad)
jge
movs
cmps
mov
fdiv
movs
and
pop
pop
(bad)
jne
aaa
jg
ins
fisttp
outs
jp
mov
jl
pop
inc
or
cmp
jbe
xor
xor
js
rcl
loope
test
les
js
mov
pop
ins
call
enter
repz
ret
sub
mov
cwde
mov
(bad)
push
jne
fistp
mov
fdivr
sbb
adc
adc
js
xlat
in
jl
call
mov
pushf
xor
out
je
xor
les
in
dec
mov
xor
stos
test
inc
in
mov
int3
leave
in
or
test
or
addr16
bound
push
fld
ret
into
cs
fbstp
jae
pusha
loope
lock
movs
mov
fisttp
mov
adc
mov
mov
jne
inc
dec
jnp
mov
pushf
nop
test
scas
shl
out
test
cli
mov
xor
lock
mov
call
jne
ds
and
dec
out
sub
jl
loop
or
(bad)
(bad)
add
(bad)
std
dec
mov
cld
jmp
jns
scas
mov
clc
mov
std
and
sar
pusha
cld
add
sar
inc
inc
cmp
fld
dec
lds
push
jl
jp
js
test
push
ja
xchg
(bad)
mov
scas
cdq
jb
mov
xor
popa
mov
adc
xchg
mov
bound
fsubr
test
mov
test
sar
je
les
cli
test
stc
add
pusha
jecxz
sbb
fst
mov
and
popf
movs
lods
or
ins
in
shl
retf
fadd
mov
fistp
push
int3
xor
test
xor
test
test
inc
shl
xor
and
jle
mov
dec
xor
int3
iret
(bad)
int3
dec
ret
add
sub
inc
push
and
leave
lods
inc
xor
jnp
mov
xchg
mov
xchg
sahf
cmp
push
mov
jge
push
dec
inc
jbe
push
adc
aam
cwde
xor
jne
int3
cli
enter
pushf
enter
push
jle
test
jecxz
les
repz
dec
je
iret
cli
mov
sar
mov
fcmovnb
add
sub
out
nop
retf
fs
loope
nop
fucomp
and
inc
and
jmp
jg
or
test
add
call
mov
stos
mov
jmp
fisubr
lods
lods
mov
push
dec
int3
adc
mov
daa
cmc
fmul
sbb
call
retf
ret
sbb
jge
lahf
(bad)
lahf
cwde
inc
xor
mov
jae
pushf
fsub
rcr
retf
xor
sar
ret
div
sub
mov
movs
retf
mov
pop
mov
fs
mov
test
cmp
fstp
leave
fucomp
nop
pop
int3
jecxz
shr
js
fdivp
push
stos
pop
daa
pushf
cli
or
cld
in
out
test
push
cld
pop
inc
loopne
lods
in
pop
test
xor
js
rcl
jns
jmp
js
ret
hlt
and
push
push
pop
gs
js
jl
xchg
fdiv
ret
push
push
xor
test
(bad)
fdivr
and
loopne
mov
or
mov
lods
in
and
mov
call
push
js
stos
(bad)
cld
sbb
scas
fsubr
movs
aam
mov
iret
dec
cld
lahf
test
cmp
cmps
ret
out
scas
retf
in
test
fidivr
icebp
cli
pusha
loop
xor
sti
cmp
std
add
js
in
xor
mov
inc
jbe
jecxz
fs
jl
cmc
stc
jns
add
mov
and
out
hlt
mov
mov
xor
lds
(bad)
in
pop
in
loop
pop
in
sbb
jbe
cmp
les
adc
rol
jb
dec
pop
dec
inc
shl
push
jae
xchg
jns
mov
mov
xchg
mov
arpl
sbb
dec
push
push
mov
mov
js
mov
push
scas
outs
test
in
movs
pop
push
adc
jns
into
out
js
fdecstp
cld
and
cld
sbb
mov
dec
std
push
je
sbb
and
out
inc
fsubr
add
ins
dec
cli
pop
jmp
nop
mov
jns
test
jl
retf
std
xor
scas
or
int3
add
or
dec
imul
sbb
mov
mov
mov
mov
fnstcw
xchg
jne
lea
mov
xchg
ret
out
mov
xchg
xor
lods
shl
in
mov
inc
inc
enter
hlt
push
imul
ror
mov
test
test
cld
sbb
imul
and
mov
call
xchg
mov
pop
dec
push
loopne
mov
les
mov
and
cwde
std
fcom
adc
ins
js
shr
cmp
in
or
fs
je
movs
pop
dec
call
jp
into
test
inc
pushf
fcmovbe
rcr
in
mov
add
movs
fcomp
dec
mov
sbb
sbb
ret
sub
aam
clc
inc
cmp
push
clc
sar
pop
mov
push
pop
jbe
out
imul
ret
xlat
xor
clc
mov
inc
fist
loop
push
pop
jae
xor
pop
call
outs
jp
outs
jg
or
pusha
fisttp
sar
ds
mov
lock
fsubr
test
push
je
mov
cmp
mov
sub
cmp
iret
js
jecxz
mov
dec
out
stc
jge
hlt
cli
pop
mov
adc
jmp
inc
les
jbe
ret
xor
je
mov
call
in
js
stos
popf
mov
std
hlt
retf
loopne
push
shl
mov
out
fsubr
cmps
pop
pop
push
ds
mov
jne
out
and
setl
pop
push
adc
fld
and
cld
xor
push
scas
jle
imul
nop
popf
mov
addr16
and
mov
test
mov
jo
leave
repz
ret
les
mov
fistp
cmc
ret
jns
call
cwde
xchg
je
(bad)
fld
call
jmp
loop
imul
jp
mov
daa
sbb
mov
pop
lods
fwait
jp
movs
nop
test
xchg
push
push
fcmovbe
cdq
js
pop
ror
adc
mov
(bad)
sub
imul
pushw
push
jp
call
push
(bad)
in
dec
add
dec
dec
and
test
jns
leave
xor
sub
sbb
fiadd
mov
fcom
nop
cmps
push
jns
mov
sub
dec
mov
jle
mov
pop
mov
lds
cmp
test
sub
dec
test
repz
out
int3
test
in
in
clc
neg
xor
push
fnstcw
into
enter
mov
mov
mov
xchg
mov
cwde
test
sub
(bad)
jnp
int3
lds
lds
pop
sbb
xor
or
xchg
xchg
mov
adc
loopne
or
adc
sbb
inc
xor
loopne
sar
adc
cli
in
pusha
sbb
jl
add
loope
xchg
inc
(bad)
cmps
jge
dec
push
adc
loopne
and
fs
xchg
cmps
mov
mov
push
xchg
imul
mov
pop
test
sbb
hlt
mov
fcmovnb
xchg
fs
cmc
(bad)
loopne
imul
push
stos
fcomp
mov
mov
clc
cwde
xchg
sbb
mov
mov
nop
js
into
jmp
mov
dec
xchg
xchg
mov
fs
xor
and
adc
push
test
lds
dec
jne
xor
es
pop
dec
inc
sar
mov
jp
adc
sbb
test
xor
es
adc
call
shl
sbb
les
test
aam
mov
dec
jo
pushf
or
and
int3
push
mov
je
(bad)
cwde
js
int
test
enter
aam
sbb
loop
fs
repnz
and
mov
movs
nop
or
mov
dec
sbb
mov
mov
add
xlat
cwde
rcl
cmps
adc
je
(bad)
into
pushf
leave
mov
mov
(bad)
mov
mov
clc
ret
mov
cli
and
cmp
and
rcr
pop
xor
jl
and
ja
or
jnp
jo
arpl
pop
clc
ja
popf
mov
psubd
in
xchg
lods
push
sbb
push
dec
inc
(bad)
pop
loopne
ins
jbe
test
iret
mov
push
jle
dec
mov
xor
enter
push
pop
jns
in
repz
scas
mov
pop
sbb
adc
xchg
stos
std
fcomp
xchg
addr16
sar
leave
aad
test
mov
add
out
in
adc
sub
lock
pop
mov
fbstp
loope
sub
dec
(bad)
test
xor
shl
scas
in
jl
mov
test
adc
ret
mov
and
jg
in
js
pop
es
sub
mov
int3
cmp
mov
or
jns
adc
jp
adc
hlt
iret
cld
dec
mov
inc
or
in
jl
adc
push
ret
mov
mov
popf
mov
rcr
mov
jb
mov
stc
ins
int3
les
sar
fs
xor
lods
fdiv
(bad)
sbb
push
stc
and
retf
lods
lock
xchg
dec
aam
stc
mov
pop
jge
sbb
sbb
leave
(bad)
mov
sub
xlat
cmp
fidiv
mov
cmp
dec
fsubr
mov
sbb
ror
lods
xor
shl
inc
hlt
mov
jle
xor
push
pop
push
dec
les
fiadd
cmp
stc
ja
test
add
push
xor
mov
pop
stos
shl
push
adc
(bad)
mov
inc
xchg
cdq
xor
fwait
jge
hlt
neg
push
mov
mov
mov
push
and
jb
mov
les
(bad)
stos
jne
dec
fsub
nop
jae
in
sti
xor
retf
addr16
test
xchg
ror
cmp
or
adc
push
daa
js
mov
mov
fnsave
fadd
dec
fstp
ror
mov
dec
push
enter
mov
les
xor
(bad)
jbe
(bad)
push
popf
adc
xor
rcl
pushf
retf
push
jmp
mov
sbb
retf
push
pop
nop
sbb
jne
inc
sbb
inc
ss
and
int3
inc
scas
lods
test
rol
hlt
add
dec
sub
xor
or
out
sub
sbb
adc
mov
mov
shl
nop
jae
mov
mov
pop
mov
sub
fcmovu
jns
in
jbe
rol
gs
inc
mov
loop
xchg
jp
mov
pop
xlat
aad
data16
outs
lock
aam
xor
fincstp
inc
push
into
ins
xor
(bad)
les
aas
sub
addr16
push
dec
aas
xchg
sub
lea
test
dec
pop
push
pop
jo
add
rcr
sub
ins
or
sub
adc
adc
fadd
dec
sbb
loopne
nop
xchg
in
jl
xchg
jle
les
pop
stc
repnz
mov
mov
mov
cmp
jp
xchg
mov
test
(bad)
sbb
cmp
scas
or
test
xor
xor
popf
aad
aad
jnp
xlat
aam
pop
je
add
iret
inc
outs
repz
fsqrt
dec
dec
cmp
enter
shr
or
ins
imul
jns
jo
retf
mov
mov
jb
jae
cmp
retf
jmp
mov
fmul
ret
jne
jp
mov
clc
popf
(bad)
int3
shl
sub
or
leave
cwde
mov
mov
dec
movs
outs
jb
mov
mov
mov
mov
cdq
cld
test
xchg
xchg
imul
stos
xchg
test
cmp
dec
or
sub
cmp
shr
icebp
js
ins
pop
dec
(bad)
push
add
pop
daa
or
movs
adc
jge
js
out
sbb
jne
mov
sub
rcr
pushf
xchg
enter
xchg
inc
or
fcomp
mov
push
rcr
stos
mov
mov
stos
inc
test
cmp
sahf
jne
push
mov
or
call
dec
sahf
jle
mov
cmps
add
pop
stos
mov
mov
mov
dec
enter
shr
js
fcmovnbe
jo
iret
retf
fs
ins
adc
cli
mov
dec
and
sub
stos
ret
cmc
cmp
lods
inc
movs
popf
pop
enter
mov
push
in
mov
pusha
mov
mov
jp
or
ror
shl
sub
dec
nop
je
mov
je
(bad)
jo
lods
add
loope
and
mov
mov
cmps
dec
js
mov
lods
sbb
cmp
and
lods
add
idiv
sahf
add
jge
dec
jae
push
dec
call
stos
mov
lahf
mov
sbb
int3
cmp
mov
sahf
xchg
test
mov
push
fwait
cwde
ja
mov
aam
inc
(bad)
test
jo
fs
or
or
mov
js
dec
mov
je
mov
retf
mov
je
sub
ja
arpl
mov
cmp
inc
test
stos
push
sub
xor
add
jne
xchg
jge
popf
xchg
jle
nop
out
sub
cmps
test
jl
mov
pop
aam
cwde
adc
(bad)
xor
js
je
jmp
mov
test
cmps
js
retf
lods
ins
mov
ins
lods
ror
xor
pop
std
js
hlt
loope
sbb
sbb
inc
cmp
sub
mov
add
jns
adc
outs
sahf
ins
mov
mov
movs
cwde
cli
les
jo
mov
cmps
xor
mov
cdq
repnz
adc
inc
xchg
xchg
add
js
and
xor
xor
dec
mov
xchg
or
cs
mov
cmp
stos
fwait
lods
cs
dec
xchg
pop
sbb
or
imul
sub
enter
mov
stos
push
pushf
mov
daa
xor
jl
js
test
popf
sub
mov
hlt
adc
dec
pusha
xor
xor
lds
fcomp
cmp
cmps
xchg
js
pop
add
mov
adc
mov
in
mov
in
je
push
jnp
push
add
(bad)
aam
jnp
cmp
push
inc
xchg
pusha
out
dec
imul
sub
je
pop
cwde
xchg
mov
xor
sub
push
call
mov
jl
les
mov
stos
push
je
movs
je
test
dec
jl
ds
cmps
inc
into
mov
sar
test
and
je
mov
and
xor
js
ins
(bad)
in
pop
stos
inc
jne
hlt
imul
jl
jb
xchg
or
xchg
popfw
jg
sbb
adc
pop
dec
fwait
jne
inc
mov
xor
call
add
pop
test
in
js
sbb
movs
js
movs
mov
sub
mov
je
cmp
call
cwde
js
jl
inc
ror
adc
jns
pop
push
xchg
mov
mov
jmp
xchg
mov
cwde
mov
je
jp
xchg
sub
pusha
pop
mov
cwde
mov
aad
pop
jo
jle
cmp
movs
lock
stos
sahf
hlt
lods
(bad)
rcr
cmps
(bad)
stc
js
push
and
arpl
jmp
dec
mov
loope
aad
push
jne
test
cwde
nop
mov
movs
push
mov
xor
fdivr
xchg
popf
mov
clc
fs
std
test
xchg
shl
xor
dec
test
cmc
test
jl
push
js
stos
lahf
sub
push
div
stos
mov
jl
and
jecxz
fldenv
push
jl
jg
js
cmc
inc
adc
jne
adc
test
xchg
lea
mov
out
adc
fwait
mov
mov
js
cdq
jp
sahf
mov
cli
lods
lahf
xchg
je
das
clc
mov
cmp
pushf
call
sub
sbb
test
jno
imul
jl
adc
sbb
xor
dec
dec
cmp
mov
cmps
pushf
mov
xor
mov
xor
mov
or
mov
pop
cmps
xchg
cmp
cdq
cmp
movs
nop
lock
cmps
sbb
mov
or
push
retf
js
hlt
and
in
jle
(bad)
ds
jl
loope
test
ror
and
jo
xchg
jne
xor
mov
cmps
sub
mov
nop
sti
test
cli
lahf
xchg
test
stos
and
stos
call
test
mov
mov
fdivr
fs
mov
ins
mov
sahf
std
nop
sbb
aas
mov
adc
mov
fdivr
cdq
nop
test
rcr
movs
shl
jl
repz
test
daa
int3
mov
jbe
outs
je
ja
sbb
pop
inc
imul
les
push
ins
outs
fwait
mov
dec
push
imul
call
push
fs
into
mov
ds
into
inc
sbb
jp
xlat
add
rcl
das
jl
dec
jl
xchg
fisttp
les
mov
jb
shl
pop
mov
in
pop
push
pop
outs
sub
sti
adc
add
adc
jae
pop
std
test
sub
adc
xor
or
mov
push
push
xchg
enter
je
cs
xor
push
test
fadd
int3
sbb
(bad)
adc
xchg
and
push
jb
jmp
cdq
hlt
les
rol
dec
int
dec
nop
push
(bad)
sub
(bad)
lds
xor
push
mov
movs
mov
cwde
xchg
sbb
sar
lds
ror
push
adc
jne
fcom
mov
jmp
mov
retf
push
pop
bound
fbstp
ins
cld
inc
inc
xor
sbb
test
jmp
les
and
fs
dec
fadd
stc
fild
xor
test
jne
ja
add
dec
lahf
sub
daa
mov
and
push
cmp
sbb
aad
fmul
sub
jnp
je
js
mov
leave
test
cmp
jl
adc
loope
cwde
aam
test
out
mov
pusha
sar
xor
sub
cmp
inc
inc
int3
pusha
jmp
xchg
inc
pop
ds
pop
push
sbb
xchg
push
pop
and
pop
jbe
add
in
ds
xor
out
and
pusha
outs
addr16
xchg
lock
xchg
das
jo
or
xchg
fldenv
jp
cmps
fist
js
das
xchg
aas
scas
mov
jle
aam
adc
or
sar
sub
or
mov
jecxz
adc
lods
rcl
lods
mov
pop
push
jg
mov
jge
pop
pop
pop
loopne
dec
(bad)
jno
pop
and
sbb
movhps
sbb
or
ja
push
mov
ins
std
lock
and
jmp
in
jl
pop
dec
test
imul
outs
jae
icebp
clc
sahf
xor
int3
enter
out
pusha
bnd
mov
mov
or
adc
ret
fidivr
dec
adc
jp
jl
jbe
jl
pop
pushf
mov
jl
rol
rcl
in
jl
es
cwde
cdq
push
rcl
and
mov
push
xchg
jno
sbb
jnp
add
dec
inc
add
loopne
out
cmp
add
jo
add
sbb
mov
call
mov
idiv
xchg
dec
retf
jg
add
cwde
or
shr
push
jns
add
mov
out
enter
jo
and
shr
jbe
xor
mov
test
jmp
movs
call
xor
test
mov
or
sti
test
repnz
daa
sbb
push
or
ins
jae
sub
jo
loop
xor
mov
js
add
dec
cmp
pop
jle
out
shl
lock
xchg
sub
repnz
out
cmc
cld
mov
mov
cdq
cmp
sub
hlt
ret
mov
ja
mov
jge
sub
mov
dec
push
pop
and
mov
ror
sbb
movs
int3
dec
int
push
xor
push
sub
push
mov
add
mov
lea
mov
inc
dec
pop
outs
jge
push
popa
gs
pusha
pop
fldenv
addr16
aam
push
sbb
cmps
mov
rol
mov
in
out
xor
je
cmc
add
inc
cmp
jge
aad
data16
jp
into
xor
js
ror
clc
xchg
sar
xor
sbb
retf
fs
test
push
div
pushf
mov
out
ins
sbb
and
mov
cwde
adc
pushf
add
cld
jmp
jl
mov
pop
pop
push
bound
loop
sub
imul
dec
out
loop
cwde
or
mov
mov
jo
popf
add
addr16
jne
idiv
pop
sbb
sbb
pop
pop
mov
jns
js
pusha
xor
ret
adc
pop
xchg
jp
cmp
les
mov
test
push
test
loop
xchg
sub
stos
adc
loopne
and
pop
sbb
(bad)
int3
push
cdq
cs
ror
add
mov
call
out
shl
mov
or
pop
repnz
xchg
jne
and
pop
xor
ja
fucom
push
mov
jae
add
hlt
(bad)
out
cmp
jle
js
sar
sbb
fadd
xor
pop
addr16
(bad)
jp
ins
ja
pop
es
sar
mov
sub
or
scas
out
and
aam
dec
bound
mov
call
lock
ror
cmp
push
mov
sbb
mov
ss
jbe
dec
nop
fcomp
cmp
fwait
call
xchg
int
cmp
leave
call
sbb
ror
mov
test
mov
leave
sub
lods
std
push
add
mov
lods
lock
xor
js
retf
ror
nop
imul
cmp
sub
loopne
jmp
int3
je
aam
mov
sub
sbb
rcr
mov
daa
xchg
shl
lahf
stos
inc
jl
xor
leave
sub
cmp
ds
sub
fcomp
cld
fsub
(bad)
loopne
sbb
rcr
jle
pusha
jecxz
pop
or
jp
pop
pop
cmp
sub
outs
cli
hlt
ins
xchg
pop
push
inc
lea
mov
cmps
cmp
rol
rcl
inc
pushf
add
or
mov
mov
xor
pop
aad
sub
(bad)
shl
movs
out
in
pop
test
sub
nop
sar
test
mov
dec
fimul
les
lds
fsub
cmp
mov
test
into
hlt
push
add
adc
and
stos
data16
add
mov
cmp
test
mov
adc
mov
xor
clc
call
ucomiss
xchg
and
sbb
cld
je
dec
inc
leave
jo
adc
sbb
or
xchg
xchg
leave
test
jne
retf
mov
stos
test
test
in
cmc
dec
leave
mov
nop
icebp
in
test
jns
cld
or
test
mov
push
cmp
nop
loop
ror
cld
jb
fld
xchg
or
sub
and
and
inc
jbe
jl
(bad)
jns
aam
cwde
xlat
jl
fwait
inc
(bad)
xchg
ret
test
cmp
and
pop
int
jbe
ret
xchg
jne
mov
pop
mov
clc
jecxz
lods
xor
jmp
in
lods
addr16
or
cmp
jmp
mov
xchg
or
addr16
mov
pop
lods
mov
or
mov
ret
(bad)
fstp
ror
pop
push
fcmovnu
cli
test
lahf
xchg
cmc
movs
in
popf
fs
push
jl
cdq
xor
int3
(bad)
push
les
mov
nop
xchg
cmp
clc
jmp
adc
pop
and
repz
lods
push
addr16
xor
mov
cmp
rcr
ds
jne
adc
jnp
les
js
and
inc
dec
aas
xor
sub
xchg
mov
jle
push
push
cli
mov
mov
or
mov
add
cwde
ror
scas
fs
dec
lods
push
retf
es
nop
mov
idiv
dec
or
pop
push
rol
dec
jl
add
xor
pusha
mov
add
imul
cwde
lahf
addr16
dec
lods
fs
(bad)
test
sub
jns
mov
fdivr
mov
leave
into
popf
dec
mov
pop
jl
(bad)
mov
adc
call
pushf
lahf
dec
sub
mov
or
out
enter
imul
mov
in
sbb
add
dec
cmp
or
loope
rcr
fadd
in
fiadd
fucomi
sub
lods
mov
dec
test
clc
jbe
les
imul
mov
shl
jl
call
jae
mov
(bad)
xchg
lock
and
xor
or
loop
bnd
jne
fistp
fcomp
jne
add
sar
in
std
mov
lds
mov
or
lock
mov
mov
je
cmps
mov
mov
les
cli
nop
loopne
mov
or
pop
mov
ret
(bad)
adc
ror
fs
mov
or
(bad)
xchg
mov
test
xchg
dec
lock
je
mov
sub
clc
mov
pop
jbe
push
imul
in
cmp
ins
loop
mov
je
(bad)
xchg
fs
inc
xor
repz
int3
push
push
add
xchg
in
sub
mov
jl
fsubr
mov
scas
mov
test
xor
jb
leave
cwde
jo
ror
push
mov
(bad)
in
nop
ds
nop
movs
inc
leave
call
sub
(bad)
js
into
mov
test
pop
(bad)
mov
adc
cwde
mov
adc
xchg
test
cmps
cmp
scas
pop
hlt
stos
push
lods
xchg
or
push
clc
mov
mov
jle
xchg
adc
and
int
mov
xchg
xchg
mov
pusha
inc
lea
xchg
inc
pusha
les
mov
sbb
je
mov
cdq
test
aad
lods
mov
mov
inc
addr16
scas
xor
aam
pop
mov
pop
push
sub
pop
in
mul
imul
push
mov
sbb
mov
mov
mov
pop
clc
shl
add
pop
push
cmp
jne
mov
jl
(bad)
cmps
jae
cli
enter
lea
push
jl
push
jle
dec
outs
jg
lock
(bad)
test
mov
js
mov
jl
mov
loop
jmp
pop
loope
jne
fst
js
ret
lds
dec
out
loopne
rcl
out
sbb
inc
inc
ror
ret
(bad)
pop
add
jl
int
cmp
dec
mov
jo
clc
movs
(bad)
push
jno
and
and
ja
sub
movs
mov
ror
pop
test
cmps
jle
addr16
mov
fadd
add
les
mov
jae
sar
adc
mov
test
out
sbb
popf
lods
call
icebp
xlat
mov
mov
(bad)
nop
call
xlat
fwait
push
ret
cmc
mov
dec
int
shl
mov
xor
adc
mov
xor
outs
ins
test
je
je
mov
jno
jae
das
sub
ja
mov
add
(bad)
iret
mov
out
mov
rcl
mov
mov
cld
mov
or
mov
cmc
inc
repnz
repz
in
js
fmul
mov
push
retf
sbb
in
das
loop
adc
xor
(bad)
mov
push
nop
inc
je
push
pushf
cmp
push
mov
(bad)
addr16
jne
dec
cmp
out
pop
xchg
jo
dec
inc
cmp
movs
js
test
in
jns
add
jp
or
fidivr
stc
idiv
repnz
cmp
or
in
fs
out
add
les
push
push
jmp
mov
fsubr
je
pop
mov
cld
je
pushf
push
and
inc
sbb
jl
les
pusha
pop
loope
lock
rol
jb
movs
pop
jno
les
ja
xor
mov
int
cmp
mov
sub
mov
je
jae
test
push
push
test
push
mov
je
sub
inc
icebp
out
and
or
add
in
test
call
push
out
stc
jmp
das
aas
xor
cmp
dec
les
imul
adc
push
fwait
xchg
aad
ins
push
js
lahf
xlat
jne
daa
and
sbb
jl
sub
pop
inc
inc
shl
lods
rcl
data16
sub
(bad)
inc
into
pop
xor
fisttp
out
jecxz
inc
jmp
clc
mov
nop
rcr
jb
add
imul
pushf
jae
int3
stos
call
fucomip
push
loop
repnz
dec
pop
dec
push
(bad)
xor
fs
js
jb
cwde
out
pushf
cmps
int
add
nop
iret
sahf
fs
pop
mov
aam
stos
push
js
(bad)
dec
shr
les
xchg
ins
test
fadd
stc
test
mov
test
mov
mov
or
test
sbb
ror
out
mov
js
sar
iret
fld
repnz
add
loopne
data16
ins
or
cld
in
sub
xchg
fs
jl
in
jl
mov
inc
movs
sub
mov
call
mov
sub
xor
nop
mov
stos
mov
pushf
clc
lahf
cmp
iret
inc
ret
stos
push
inc
xor
xchg
mov
out
dec
push
in
pop
retf
cmp
push
(bad)
fstp
loope
fdivr
cmp
js
aam
xor
sbb
mov
dec
jbe
je
ins
mov
scas
jb
xlat
call
fldenv
push
ds
jl
jae
mov
sub
sar
mov
mov
or
cwde
mov
mov
pop
xchg
mov
das
jg
clc
movs
fwait
mov
test
xor
mov
jl
mov
adc
je
int3
sub
mov
cmps
jae
mov
xor
je
sbb
and
pop
jae
xor
cmp
xchg
ds
or
xchg
js
ins
jp
call
sub
xchg
pop
cmps
lods
lods
mov
popf
in
int3
push
enter
popa
mov
jmp
js
mov
mov
mov
xchg
xchg
into
hlt
lds
pop
mov
pop
movs
pushf
test
je
add
and
jl
cmp
mov
mov
sbb
(bad)
jg
mov
(bad)
mov
pusha
jno
imul
mov
je
jo
pop
daa
ja
loope
add
cmps
jg
call
in
punpcklbw
outs
dec
(bad)
enter
mov
and
mov
les
(bad)
mov
std
sbb
retf
mov
js
div
cld
dec
test
mov
ins
in
test
call
mov
sar
lods
mov
pusha
mov
aam
scas
adc
cli
jecxz
dec
loopne
lea
jp
sbb
sbb
jmp
sub
ins
je
mov
xor
sub
jl
cdq
jl
jp
jl
xchg
push
adc
shl
arpl
nop
sub
and
push
mov
ficom
stc
xchg
jnp
retf
retf
pop
fdivr
lock
out
in
xchg
push
and
es
adc
and
fistp
out
xchg
(bad)
into
mov
mov
in
imul
int3
pop
xor
cmp
jo
(bad)
hlt
push
jmp
jae
jmp
jo
les
sti
cld
adc
or
stc
js
push
dec
test
jne
mov
in
cmp
sub
jl
xor
jp
test
mov
mov
mov
pop
call
mov
aam
mov
mov
xlat
mov
mov
movs
les
push
leave
movs
cmp
cmp
push
ret
inc
ret
xor
and
cmp
scas
mov
fs
gs
mov
xchg
jmp
ret
scas
les
les
mov
mov
fsubr
jl
shl
into
in
fmul
in
fidivr
dec
dec
fst
pop
out
pop
in
test
int
add
shl
jl
pop
mov
ret
js
jl
add
jmp
rcr
(bad)
retf
mov
mov
mov
shl
xchg
cmc
dec
ret
sahf
rcr
js
aad
jmp
popf
cmp
mov
pop
ret
mov
dec
mov
cld
rcl
retf
mov
retf
pop
mov
and
mov
stos
stos
inc
mov
mov
sub
stc
loopne
sub
cli
pop
call
imul
(bad)
sub
pusha
jae
add
test
repz
outs
jmp
rcl
rcl
mov
and
ret
(bad)
mov
movs
les
fstp
add
pop
iret
mov
xor
push
stc
fcom
jne
mov
pushf
mov
jbe
mov
lea
add
pushf
jo
in
jo
lds
bound
dec
and
adc
in
clc
push
mov
and
cmp
fbld
fs
fs
jo
repnz
dec
js
jl
jne
imul
push
aaa
dec
sbb
jl
and
or
jb
popf
fadd
cdq
nop
sbb
jg
dec
inc
jne
mov
pusha
ret
lds
lods
das
jo
mov
mov
sbb
popf
daa
fs
in
js
sar
cwde
rcl
cmp
iret
shl
sbb
xor
retf
stos
or
cs
add
mov
pop
lods
mov
js
fmulp
cli
js
cmp
and
and
dec
in
jmp
add
dec
pop
pop
push
(bad)
push
dec
jl
inc
ret
mov
pop
sbb
shr
mov
test
pushf
mov
in
loopne
mov
sbb
test
pop
mov
xchg
push
jge
fwait
cmps
nop
inc
je
stos
fs
pop
leave
jge
mov
lahf
push
dec
jmp
cmp
in
sar
add
mov
add
jo
shr
xlat
mov
sbb
out
push
out
fs
int
inc
jmp
daa
iret
mov
cmc
wrmsr
test
aam
fmul
mov
dec
pop
and
push
pushf
mov
jmp
loopne
sub
add
imul
mov
pusha
movs
pop
mov
mov
clc
pop
std
out
xlat
cli
ins
mov
inc
lods
sbb
(bad)
ins
xor
movs
mov
mov
ins
jmp
rcl
push
sahf
pushf
test
sahf
add
mov
sbb
(bad)
mov
int3
shl
cwde
shl
sbb
cld
icebp
clc
cmp
repnz
loope
(bad)
mov
in
dec
mov
pop
(bad)
fistp
in
push
push
jl
mov
das
push
jge
xor
mov
(bad)
mov
ds
xchg
jns
cwde
int3
nop
ret
aam
sub
fdiv
and
xor
add
ins
out
mov
in
aad
fstp
(bad)
push
xchg
add
mov
mov
adc
call
fistp
mov
cmc
mov
dec
mov
fdiv
in
xor
dec
jne
aas
pop
and
in
xchg
and
and
xor
push
fs
dec
cld
cmc
int3
sbb
test
js
stos
mov
mov
jp
cs
test
push
fdivr
(bad)
jle
mov
mov
pop
stos
out
fcmovne
mov
push
mov
mov
adc
(bad)
mov
mov
pop
jmp
push
pop
int3
imul
scas
sbb
xchg
movs
fcomp
mov
cmp
xor
fst
push
pop
mov
call
fcomp
les
sbb
pop
jecxz
jmp
jl
outs
fistp
sbb
add
nop
or
js
mov
aam
mov
mov
test
js
mov
mov
out
cli
adc
add
mov
pop
pusha
xchg
lea
xchg
fild
js
cwde
mov
inc
xor
mov
and
mov
mov
dec
pop
push
push
push
cmp
adc
neg
pop
lock
fbstp
dec
inc
mov
adc
sub
jl
(bad)
cmps
iret
loope
sahf
cmp
sub
hlt
push
imul
mov
push
xchg
push
imul
in
fmul
clc
nop
lds
ret
rcl
jmp
cld
pop
add
out
dec
add
pop
js
lahf
(bad)
lock
xchg
xchg
fdivp
xchg
or
cli
dec
nop
mov
lods
jge
mov
je
(bad)
or
push
shr
cmp
mov
ja
xor
and
sbb
sbb
(bad)
jmp
sbb
mov
pop
cs
jns
mov
sbb
cmps
fcom
mov
in
cmp
call
mov
mov
enter
sbb
mov
mov
call
sahf
cmp
fsubp
jae
and
push
xchg
xchg
or
xlat
xor
xchg
leave
cmp
mov
xchg
jmp
jmp
mov
je
mov
xchg
fwait
inc
repz
xor
cmp
or
adc
loop
push
jmp
fsub
cmc
pop
add
test
jl
fcom
pop
push
push
(bad)
js
sti
stos
mov
pushf
in
xor
jne
mov
xor
int3
shl
shl
cmps
mov
test
jecxz
or
xlat
ror
ds
imul
mov
cli
sbb
inc
inc
retf
idiv
aam
jecxz
cld
mov
xchg
mov
sar
and
jae
fcmovnb
cmp
cmp
sub
jp
sub
sbb
clgi
hlt
int
sbb
pop
pop
test
iret
movs
jl
add
jnp
fdivr
and
jae
mov
fcomp
and
cmc
mov
jge
or
(bad)
int3
(bad)
mov
scas
xor
mov
cwde
push
test
jmp
in
test
mov
cmp
dec
enter
in
or
out
jl
in
leave
movs
pop
in
test
ret
js
mov
sbb
dec
mov
push
adc
mov
sub
mov
das
test
pop
push
sub
push
hlt
addr16
jp
cs
xor
jl
mov
je
cmp
cmp
sar
lods
xor
fdiv
stos
cwde
je
(bad)
int3
fidivr
call
js
mov
mov
xchg
push
cmps
int3
pushf
pop
je
sar
stos
sahf
mov
sbb
lds
bound
mov
fdivr
ins
js
scas
stos
mov
aam
dec
xor
int
pop
add
outs
xor
or
imul
out
inc
fbld
jl
aad
sub
sti
call
(bad)
pop
movs
test
pop
mov
test
mov
push
xchg
sub
lods
popf
or
mov
xchg
xchg
mul
mov
xor
cwde
push
call
dec
sar
mov
dec
lods
je
mov
hlt
stos
scas
xchg
popf
sub
adc
mov
xchg
jo
and
inc
test
dec
test
iret
sbb
cmp
xor
call
add
sbb
jl
jns
jge
shl
ds
in
jb
test
int3
push
pop
jl
push
je
fmul
mov
xchg
mov
nop
xchg
mov
jl
xchg
mov
push
xchg
mov
jb
lods
xchg
addr16
fs
mov
cwde
scas
rsm
dec
xbegin
pop
xor
movs
cdq
out
scas
mov
lods
ds
sbb
mov
fidiv
out
iret
jne
push
fld
sub
js
push
mov
lea
push
sbb
mov
int
(bad)
test
out
xchg
sar
lock
adc
pop
sub
pop
xchg
movs
enter
stos
je
repz
cdq
lods
outs
push
mov
cwde
mov
js
mov
xchg
mov
xchg
sbb
cmps
mov
mov
add
je
mov
ss
jmp
mov
(bad)
mov
jl
cmc
repnz
iret
in
cld
dec
dec
push
sub
test
jl
inc
sbb
dec
dec
cmp
sub
imul
xor
and
gs
inc
jl
xchg
js
pop
pusha
xor
cld
xchg
clc
add
in
mov
xor
loope
mov
fldenv
add
mov
xchg
test
nop
push
mov
push
in
jo
jo
mov
jp
mov
fs
mov
xchg
cmps
xor
inc
stos
push
cmc
fs
jge
ret
lds
movs
xor
loope
jl
pop
popf
dec
inc
cmp
jl
mov
loopne
data16
jo
cmp
cmp
adc
add
sbb
js
sahf
je
enter
jl
adc
xor
int3
xor
aam
scas
jnp
mov
cwde
push
xchg
lods
mov
mov
je
mov
sub
push
mov
jmp
mov
test
jmp
pop
fs
lods
dec
lahf
lods
xor
in
js
push
jbe
rol
push
mov
cli
test
push
inc
xor
je
in
xchg
inc
xor
js
inc
pop
sub
lock
push
test
fidiv
mov
(bad)
fnstcw
jo
and
add
mov
nop
ins
test
dec
stos
ins
popf
mov
mov
or
sti
movs
and
fs
not
mov
mov
lods
loope
mov
nop
jne
xchg
or
sub
sti
dec
movs
mov
je
xor
scas
pop
and
mov
cmps
add
mov
pushf
fs
dec
in
sbb
jne
inc
jge
push
dec
cmp
pop
ss
push
dec
cmp
sub
mov
loope
sub
sbb
mov
ins
dec
push
dec
inc
sbb
jp
cmps
mov
mov
mov
pushf
je
cdq
cmp
xchg
dec
je
xor
mov
clc
fcomp
mov
(bad)
dec
mov
xchg
scas
cmp
je
sahf
push
inc
dec
mov
aam
cli
pop
mov
mov
and
jl
imul
dec
xor
mov
outs
jl
pop
jo
dec
inc
js
dec
cs
push
sbb
pop
fsubr
test
enter
push
lea
mov
movs
scas
pop
int3
xchg
sub
int3
mov
mov
test
cmp
cwde
push
mov
xor
mov
nop
push
xchg
push
jo
fild
out
out
jl
sbb
add
mov
sbb
inc
sti
mov
sar
js
js
je
ins
je
jmp
je
and
pushf
push
push
sub
pop
daa
xchg
and
clc
sti
icebp
js
mov
mov
fsub
mov
xchg
xchg
ins
mov
cmps
sub
pushf
pop
cwde
outs
cwde
pusha
pushf
xor
inc
popf
cmp
call
mov
mov
pop
and
rcl
and
mov
iret
mov
ss
jl
push
sbb
dec
loopne
aas
call
sbb
test
ss
in
jmp
lods
mov
je
add
test
cmp
scas
fimul
gs
mov
xchg
inc
pushf
nop
lahf
call
test
mov
scas
mov
xor
test
mov
sbb
repnz
xchg
test
ins
cmp
in
iret
mov
dec
cmp
js
dec
inc
xor
cmp
add
and
pop
shl
in
imul
test
xor
cld
add
shl
adc
adc
mov
sbb
ins
in
push
mov
lahf
stos
and
cmp
aas
(bad)
mov
push
push
dec
test
sti
(bad)
lds
pop
mov
test
pop
ror
mov
in
enter
fmul
imul
test
scas
inc
je
dec
(bad)
arpl
mov
push
adc
and
inc
push
jae
mov
xchg
scas
pop
xchg
or
push
add
lods
xchg
jmp
jne
jmp
and
sbb
and
pop
push
or
nop
mov
jmp
push
fisttp
cmp
in
push
loop
cmp
out
push
add
dec
cs
or
or
inc
adc
movs
pop
push
sub
xor
push
sub
adc
sbb
je
addr16
lds
ins
(bad)
mov
scas
push
test
outs
sub
das
and
adc
pop
cmp
jl
pop
adc
and
and
or
pushf
es
sbb
lea
add
popa
xor
int
push
(bad)
nop
xchg
jbe
das
sbb
pop
xor
adc
daa
adc
cmp
push
sbb
push
cmp
jae
and
add
arpl
inc
fs
sub
pop
fdivr
jl
inc
inc
dec
fs
jle
jne
jnp
loop
mov
pop
lods
les
jl
lahf
aaa
and
fnstcw
pop
pop
push
mov
cmp
or
outs
xchg
dec
fcomp
pop
bnd
sbb
test
add
add
pop
js
cmp
sub
mov
cmp
push
jne
sub
pop
add
sub
aas
fs
sub
cmps
xor
dec
in
lods
inc
dec
jl
pop
jb
push
lahf
jae
xchg
cdq
jle
call
shl
fs
pop
aad
xchg
mov
movs
ds
push
aam
cwde
sbb
loope
push
push
mov
adc
add
push
push
fsub
push
add
and
stc
js
push
std
inc
cs
xchg
push
pop
mov
cmp
sub
je
xchg
push
in
jo
cmp
mov
daa
jne
aas
sub
in
je
pop
cs
aam
fstp
mov
xchg
add
add
enter
xchg
je
repz
in
jl
test
and
mov
add
int3
test
cli
jl
adc
jge
pxor
jns
push
push
(bad)
cmp
dec
and
or
sbb
ins
sub
dec
adc
pop
add
add
fs
push
jne
and
sbb
sbb
je
sub
ins
jae
sub
mov
dec
jle
sub
xor
inc
cmp
pop
push
mov
addr16
inc
jp
pop
or
xor
retf
data16
jns
sti
in
std
jl
out
repnz
stc
in
js
adc
mov
dec
js
push
imul
je
push
cld
and
jo
sub
add
jo
sbb
lahf
dec
dec
je
push
xchg
pop
jl
add
push
inc
js
ins
arpl
test
nop
cmp
pop
or
add
inc
dec
loope
hlt
fs
cmp
call
add
cli
ins
or
sbb
or
add
push
or
js
push
jne
not
push
sub
aas
addr16
(bad)
and
je
adc
rol
das
and
add
add
pusha
push
shr
in
rcl
push
test
mov
adc
xchg
and
jmp
jle
push
cmp
(bad)
push
pop
push
enter
push
dec
mov
addr16
fsub
sub
js
mov
je
and
dec
jo
add
ins
add
jl
push
adc
and
cld
push
dec
mov
addr16
test
pop
sbb
mov
and
daa
ins
xor
das
sbb
mov
adc
int3
mov
mov
jb
outs
mov
pusha
pop
jp
dec
inc
shl
je
xor
mov
arpl
dec
pushf
push
jbe
xchg
sub
or
or
(bad)
mov
sub
adc
sub
(bad)
out
cld
cmps
and
mov
jl
fdiv
idiv
jne
js
push
stos
push
shl
inc
mov
mov
(bad)
pop
call
push
mov
out
je
aaa
or
mov
xchg
aam
sub
sub
aaa
mov
cmp
pop
data16
jns
sub
mov
dec
imul
push
jae
sbb
aas
jno
inc
sub
nop
stc
cld
push
push
push
jae
dec
jg
and
ins
push
push
dec
ins
jbe
inc
dec
fs
jnp
sbb
push
pop
fs
xor
pop
push
pop
jbe
push
pop
je
mov
and
push
fwait
push
iret
in
mov
aas
inc
fdivr
and
in
sbb
ins
cmp
cmp
jnp
pushf
jmp
cmps
data16
adc
jbe
js
mov
xchg
movs
or
pop
and
int3
push
xor
mov
mov
shl
pop
or
fs
sub
pop
pop
fcmovu
pop
in
bound
shl
je
push
xor
push
and
cmp
pop
push
outs
mov
cmps
xor
cmp
cs
fidiv
xlat
js
mov
ds
xor
cmp
jmp
pop
inc
adc
inc
xchg
inc
or
dec
or
push
add
pop
dec
push
push
ins
dec
out
mov
in
cmp
cld
and
inc
ins
xchg
pop
pusha
test
jnp
test
inc
mov
enter
cdq
adc
xchg
mov
add
fsubp
out
in
les
sub
js
cs
push
mov
push
xor
in
add
dec
cmp
les
push
push
dec
mov
xor
nop
jne
xor
push
lods
clc
inc
ss
and
pop
movlps
sbb
cmp
sbb
or
inc
and
add
hlt
or
cmp
inc
xchg
add
sti
pushf
fcomip
fdiv
cmp
xor
in
sub
je
and
in
std
clc
mov
into
out
and
pop
cli
outs
ja
mov
or
test
xchg
daa
jne
mov
idiv
nop
cmp
test
xor
dec
pop
inc
mov
push
sbb
adc
and
and
lea
cmp
inc
jo
sbb
adc
imul
ds
js
mov
adc
sub
lds
ins
or
fcomip
pushf
pcmpeqw
mov
adc
xor
xchg
push
pop
xor
and
pop
add
xchg
pushf
add
xor
pusha
inc
xor
and
and
adc
test
in
test
out
cld
add
jb
into
icebp
rcl
lods
adc
dec
xchg
xchg
xor
mov
fcmovnu
shr
and
es
fild
and
fdivr
xor
cmp
sbb
ins
dec
fld
mov
adc
js
add
outs
psubb
repz
xor
push
mov
out
das
cmc
jo
clc
add
add
je
sti
pop
or
(bad)
pusha
fs
add
std
ins
cli
sub
pop
push
sbb
aam
sbb
fdiv
sbb
in
push
adc
int
ss
dec
xor
test
sbb
or
mov
push
les
xor
stos
mov
leave
(bad)
lea
jl
fst
fmul
pop
push
iret
(bad)
fidiv
xchg
push
inc
sub
adc
data16
adc
pusha
jp
push
fstp
loopne
sub
ins
sbb
dec
idiv
mov
xchg
mov
lock
cmp
loop
cmp
mov
or
loop
je
jmp
out
pop
push
icebp
je
add
inc
mov
jmp
xchg
mov
or
repz
bnd
add
es
sub
ins
daa
or
sub
sbb
btc
or
je
test
lahf
cmp
ror
outs
ret
inc
mov
xor
dec
jle
dec
jmp
int3
push
cmp
cmp
add
mov
sbb
cmp
mov
test
aas
ds
ins
or
xlat
je
sar
mov
out
sub
nop
imul
in
outs
hlt
ror
push
js
out
xlat
cmp
fcomp
mov
(bad)
gs
jo
xor
fcom
sbb
sub
jle
adc
fadd
push
(bad)
cmp
fdivr
je
push
jo
call
add
sti
jmp
sbb
clc
out
add
ins
push
adc
pop
jl
sub
loope
repnz
or
pop
mov
js
popf
test
in
cmp
cmps
sub
cmp
dec
push
sahf
mov
adc
mov
jp
pop
push
push
cli
mov
ret
aad
scas
test
dec
jnp
neg
(bad)
push
or
jo
shl
in
enter
inc
loop
push
pop
out
mov
(bad)
fwait
pop
dec
shr
pop
jmp
in
ror
leave
jne
arpl
cmp
or
fucom
ins
imul
push
mov
pop
jo
out
sbb
jmp
sub
and
cli
sbb
in
in
push
rcr
cmps
push
hlt
shr
outs
movs
mov
sti
nop
mov
loope
js
call
pop
out
pop
and
xchg
jo
stos
adc
or
cld
pop
adc
and
fs
int
jb
xlat
mov
addr16
int3
js
sbb
fs
mov
pusha
dec
sar
test
ds
fcomp
pop
fiadd
test
ds
cmp
mov
pusha
je
mov
sbb
les
fidivr
adc
not
out
ins
jb
loopne
jne
fdivr
pusha
out
mov
push
loop
call
jbe
inc
sbb
je
aam
push
(bad)
into
in
xor
je
stos
mov
aam
push
scas
dec
jl
fcom
add
jo
js
shr
mov
dec
ins
jb
sub
pop
in
int3
jl
sub
or
jmp
jg
dec
int3
sub
pop
ret
test
mov
fcomp
jle
js
mov
lock
das
mov
mov
(bad)
pusha
aas
add
mov
js
fnsave
mov
popw
xor
cmp
(bad)
cmp
sbb
in
mov
icebp
je
sar
push
jne
aad
xchg
pusha
cmps
mov
add
push
lods
mov
xor
push
nop
out
add
or
sar
jo
adc
push
icebp
ja
adc
lahf
clc
add
xchg
addr16
adc
xchg
push
mov
mov
xor
push
mov
pop
mov
stos
test
cmps
out
mov
lds
push
movs
fnstsw
mov
push
(bad)
pushf
adc
push
mov
jne
rcl
fs
lock
and
loope
xor
xchg
hlt
retf
pop
jl
xchg
fnstcw
je
call
adc
les
sub
cmp
sbb
dec
and
and
push
addr16
fdiv
add
pop
stc
sub
mov
in
nop
mov
jge
mov
xchg
cmp
js
mov
xchg
nop
test
fdivr
fwait
fwait
lea
mov
xchg
popf
lods
mov
inc
rcr
push
ret
mov
cmp
xor
loope
retf
std
pop
rep
adc
outs
test
shr
mov
int3
and
test
inc
xchg
scas
xchg
sub
je
pop
add
inc
pop
sub
shl
das
loop
jne
jae
and
cli
lock
cwde
shr
xchg
push
mov
aam
stos
mov
sbb
in
jne
mov
lea
cmp
sbb
mov
and
scas
pushf
je
bts
xor
jmp
pushf
and
cmp
jmp
add
push
rcl
xor
fisub
pusha
jecxz
shl
xor
pusha
jo
mov
int3
mov
stos
mov
mov
ins
enter
rcl
fwait
and
mov
push
jbe
je
shl
test
pop
test
in
cwde
push
adc
mov
out
mov
stos
fs
mov
test
das
xchg
pop
push
mov
mov
ins
xchg
nop
js
mov
adc
call
mov
lea
movs
scas
cld
(bad)
in
mov
mov
pop
adc
add
xor
je
lds
mov
mov
rcl
test
rol
mov
hlt
jp
inc
xor
js
xor
xchg
fdiv
cmps
mov
jmp
adc
xor
test
stc
movs
xchg
retf
les
mov
xchg
ins
push
(bad)
(bad)
jno
fnstsw
xor
xor
fdiv
mov
mov
mov
test
mov
xchg
adc
mov
mov
cmps
outs
popf
cmps
repnz
test
lods
retf
(bad)
fadd
pop
hlt
std
jbe
sti
dec
nop
fs
je
mov
test
mov
popf
lock
mov
ret
fidivr
mov
and
mov
jge
inc
sub
push
cmps
ins
pop
cmc
rcr
mov
fnsave
stos
mov
mov
je
xchg
mov
loopne
scas
cmps
or
in
mov
js
cmc
lock
pusha
xor
and
nop
sub
nop
mov
mov
push
cld
jnp
adc
addr16
or
sbb
add
xchg
adc
add
outs
shl
jl
mov
cld
test
idiv
call
(bad)
dec
stos
jne
inc
cmp
jns
hlt
loopne
rol
movs
sar
lea
(bad)
jp
lods
xchg
jl
out
jmp
js
mov
inc
push
leave
test
adc
in
sti
ss
mov
pushf
sar
mov
jge
clc
xlat
fisttp
xor
or
nop
add
loop
mov
in
repz
jecxz
sar
fcmovbe
cmp
mov
mov
mov
test
cmp
xor
inc
cs
hlt
loope
and
adc
sub
scas
adc
call
aaa
outs
test
test
nop
jnp
loopne
mov
repz
leave
popf
icebp
int3
pop
in
and
mov
xchg
pop
cmps
enter
mov
dec
pusha
jmp
retf
fcomp
in
fnsave
cmp
repz
cmp
out
int
int3
add
jnp
call
rcl
and
add
and
jae
out
jo
mov
sub
retf
popa
mov
cmc
or
scas
dec
pop
test
sbb
mov
jl
test
jl
xchg
shr
mov
(bad)
sbb
jne
xor
stos
pop
jge
ret
mov
js
leave
sbb
adc
xor
movs
imul
js
cwde
jae
call
jo
mov
sub
pushf
sbb
inc
push
and
jle
pop
pusha
neg
mov
out
mov
mov
jne
hlt
jge
push
fsubp
mov
jnp
ret
xor
mov
fnstcw
sbb
ret
addr16
push
js
retf
and
(bad)
jp
add
push
xor
btc
xchg
ja
(bad)
xchg
mov
(bad)
cmps
xor
sub
test
ins
add
mov
shr
les
aam
mov
neg
fdivr
sbb
clc
dec
aam
dec
jmp
pusha
loop
ret
mov
jl
xchg
mov
pop
jo
dec
mov
mov
xor
fbstp
mov
fwait
mov
mov
ins
jmp
dec
or
imul
jne
je
(bad)
jmp
cli
mov
jmp
jae
cmps
xlat
je
sub
fisub
pusha
jmp
dec
test
fidiv
sbb
cmp
adc
hlt
test
push
push
adc
sbb
pop
loop
dec
fisttp
ror
jmp
sbb
sub
xor
cld
sbb
xchg
mov
cmp
(bad)
inc
cld
cwde
rcl
mov
outs
sub
enter
jne
pop
jo
mov
push
xchg
mov
shl
cmc
lods
mov
in
mov
lock
add
jmp
call
xchg
jecxz
test
out
inc
fadd
div
inc
mov
sub
(bad)
and
fwait
sub
gs
dec
jne
call
leave
out
mov
mov
fisttp
xchg
dec
xor
push
push
dec
xor
jnp
xchg
xchg
and
stc
jo
jae
ins
leave
js
js
push
sbb
shl
push
aam
adc
gs
int
ins
mov
les
fdivp
leave
adc
cld
fbstp
jmp
jo
sbb
repnz
ror
cld
nop
push
icebp
out
les
in
xor
cwde
imul
ja
in
retf
dec
ret
loope
in
shl
shl
test
push
nop
call
adc
sbb
call
jl
addr16
mov
out
xlat
push
inc
sbb
out
mov
call
lods
(bad)
push
mov
xchg
mov
jo
fwait
(bad)
int3
xor
dec
(bad)
mov
cmps
pop
test
inc
out
inc
outs
jmp
dec
dec
movs
clc
aam
les
fwait
or
in
loopne
test
jmp
stos
mov
inc
inc
mov
inc
add
push
pop
icebp
push
scas
test
jg
pushf
jmp
dec
sub
outs
int3
pusha
addr16
adc
das
movs
jns
test
into
cwde
das
dec
mov
cmp
(bad)
mov
lods
in
stc
sbb
cli
mov
lock
jo
mov
fcom
mov
out
je
(bad)
retf
leave
je
nop
or
loopne
add
dec
mov
sub
pop
out
fisubr
je
pop
adc
mov
js
mov
loope
sbb
mov
jae
movs
pushf
mov
jl
js
jno
xchg
jl
(bad)
fdivr
int3
stc
loope
fwait
std
fcmovu
sub
add
inc
daa
add
call
sub
test
and
outs
mov
cmc
in
clc
cmp
aam
outs
(bad)
fwait
xchg
sti
xlat
cmps
mov
pop
ins
cmps
jo
loopne
mov
scas
lods
neg
mov
add
fiadd
mov
push
sub
dec
les
add
cmp
into
mov
mov
lods
mov
je
add
cmp
jnp
mov
push
lea
rcl
jp
dec
std
aam
push
stc
out
push
jecxz
cwde
ret
movs
and
mov
sub
fdivr
(bad)
sbb
jo
out
pop
push
std
xor
jl
aas
push
or
push
add
sbb
shl
ret
mov
xchg
nop
in
xor
jo
fnstcw
shl
sub
cmps
jne
test
retf
test
aam
jo
iret
shl
fdivr
lds
(bad)
push
cs
sub
je
add
pop
vfrczps
xchg
aad
cdq
rcr
and
in
fisttp
mov
movs
movs
mov
mov
js
mov
js
sti
pop
jl
or
sbb
mov
cmps
and
sub
xor
ror
jae
sahf
std
push
add
cmp
movs
cmp
(bad)
jnp
fnstenv
mov
mov
jmp
jne
mov
sbb
je
jns
fs
clc
fmul
outs
outs
loope
xchg
dec
and
adc
inc
sbb
xchg
mov
ins
add
mov
mov
ins
daa
add
popf
sub
dec
pop
sbb
sbb
xor
cmp
or
pushf
push
bnd
dec
imul
or
push
jmp
clc
nop
aam
fs
in
xor
mov
test
mov
jae
mov
jae
jp
jmp
and
and
adc
shl
xchg
mov
and
js
sbb
mov
jmp
mov
movs
jb
les
xchg
push
pop
stos
mov
sbb
test
and
enter
mov
retf
lods
mov
lea
scas
nop
cmp
call
push
hlt
pusha
jbe
rol
cmp
int3
test
or
fstp
fs
test
dec
outs
js
dec
int
sbb
mov
pop
scas
mov
mov
sar
(bad)
lock
pop
pusha
bound
inc
or
fsub
jne
sbb
sbb
add
fwait
inc
hlt
mov
and
mov
test
js
mov
or
pushf
movs
mov
mov
int
dec
mov
pop
mov
pop
jne
mov
xchg
call
cmp
in
std
cmp
adc
jmp
ins
mov
lea
mov
lahf
dec
jl
add
or
add
xchg
push
outs
mov
out
mov
out
sbb
lahf
scas
leave
js
rcl
ret
loop
add
jl
mov
stc
test
jp
lods
mov
xchg
xchg
push
mov
fcmovne
pushf
mov
rcr
int3
jmp
mov
cmc
xchg
mov
push
mov
les
or
push
icebp
shr
xchg
mov
(bad)
cmp
push
add
dec
pop
mov
dec
(bad)
(bad)
loope
pop
out
cwde
aas
js
call
lds
ror
sub
leave
and
push
cmp
jecxz
mov
and
pop
sub
xchg
pop
cwde
addr16
or
test
aad
sub
inc
repz
fst
jmp
dec
shl
shl
push
out
jp
in
mov
std
mov
je
and
push
jl
out
mov
inc
and
cli
dec
xor
mov
sti
push
or
cs
mov
push
sbb
int3
push
ins
hlt
jmp
mov
rcr
scas
hlt
in
int3
cmp
jmp
push
je
and
(bad)
leave
lock
push
jae
jp
fwait
lock
xchg
cmp
es
push
adc
and
pop
movs
int3
pop
push
scas
test
mov
mov
xchg
mov
fxch
mov
pop
cli
bnd
test
mov
stc
test
xchg
repz
or
pop
cmc
xlat
mov
jne
sbb
out
pushf
push
xor
add
sub
cmp
push
or
xchg
inc
retf
and
hlt
push
pushf
cmp
retf
loopne
les
test
fst
(bad)
cmp
jo
mov
sbb
in
push
pushf
je
outs
pop
jb
mov
mov
and
gs
or
sbb
outs
popa
pop
in
xor
mov
movs
mov
jmp
add
fidivr
mov
cmps
sub
ins
cmp
push
sbb
sub
out
push
push
stos
mov
shl
push
cwde
mov
cmps
mov
mov
fidivr
sbb
push
test
dec
aam
mov
ins
ret
retf
into
pop
pop
sti
pop
loop
lock
pop
rcl
inc
add
push
mov
inc
cmp
jl
js
sar
add
mov
pop
dec
push
dec
les
jns
popf
xor
pop
test
jmp
les
or
jae
pop
ins
loop
ror
adc
xchg
pop
fidivr
js
jmp
cmp
fistp
inc
std
and
add
sar
mov
mov
jp
add
aad
jl
aas
cli
push
sub
jae
mov
mov
xor
ins
adc
data16
mov
pop
xchg
jne
test
mov
fdivr
and
out
test
dec
and
or
xchg
test
xor
cmp
ret
mov
mov
mov
mov
loopne
std
xchg
jl
fnstsw
push
add
mov
adc
movs
pop
dec
ffreep
pop
jae
mov
adc
mov
je
sar
push
cmc
std
movs
out
mov
iret
mov
(bad)
loopne
jbe
xor
pop
gs
cmp
sub
in
mov
(bad)
mov
cmp
js
fwait
mov
jmp
sbb
jl
daa
cmc
and
push
mov
pushf
xor
pop
js
sahf
fwait
pop
in
adc
add
xor
lods
ins
push
xor
int3
push
sbb
or
mov
pop
dec
movs
jle
or
lahf
mov
ins
test
lods
jl
and
jge
shl
les
imul
cmps
jb
jecxz
jbe
pop
add
test
ds
sbb
aam
clc
in
sub
cli
loope
ins
sar
pushf
pop
dec
push
imul
je
sbb
jne
jp
out
or
ins
jne
scas
or
or
les
mov
std
test
cmps
mov
mov
mov
jb
or
test
movs
daa
mov
(bad)
jne
xchg
xchg
aad
cli
ror
cmp
push
test
test
mov
mov
int3
or
jae
hlt
out
dec
mov
gs
cmps
in
dec
test
and
adc
cli
(bad)
jae
sti
cld
test
and
inc
push
jnp
not
fstp
in
jne
push
xchg
pop
in
js
add
mov
dec
pop
cmps
sub
add
pop
cmp
std
cmp
mov
nop
out
cmp
movs
mov
sbb
test
mov
test
mov
fsub
mov
xchg
pop
inc
stos
xchg
scas
cmp
xchg
ins
clc
mov
int3
ins
pop
dec
call
inc
test
or
(bad)
shr
or
out
test
fidiv
push
(bad)
mov
push
push
call
fdiv
je
pop
lods
mov
mov
sbb
adc
(bad)
jns
movs
xchg
jp
pushf
add
mov
enter
test
mov
(bad)
in
inc
and
lea
mov
cmc
dec
mov
sbb
aam
lods
mov
rol
mov
cld
cdq
xchg
stc
js
js
push
inc
dec
jp
pop
out
or
ins
cmp
in
rol
js
(bad)
push
sub
leave
iret
jne
jmp
cmc
push
and
(bad)
lock
aas
inc
fdiv
cs
push
xchg
push
test
jl
push
mov
push
ds
dec
push
mov
enter
test
mov
jno
dec
movs
sahf
in
test
push
jl
xor
in
inc
push
sbb
push
mov
js
test
aas
jbe
cmp
mov
fs
out
js
ret
xlat
mov
iret
les
stc
cmp
js
(bad)
retf
push
mov
sar
and
mov
push
jmp
(bad)
jl
std
xlat
fld
ins
in
adc
into
jp
icebp
jecxz
mov
push
jl
fistp
loope
and
or
xor
mov
mov
cli
js
or
je
sub
in
jl
sbb
xchg
daa
js
cdq
shl
pushf
push
mov
cmps
pop
data16
jo
push
mov
retf
mov
les
push
add
fsubr
add
in
xor
out
pushf
scas
ret
aas
js
rcr
int3
xor
cli
or
sbb
pushf
jl
mov
(bad)
int3
xor
push
stc
or
fs
icebp
sti
je
(bad)
jne
outs
gs
je
jb
jbe
jge
dec
dec
sub
enter
and
mov
mov
out
imul
iret
rcr
adc
sbb
hlt
jmp
xor
sahf
mov
test
cmc
cmp
js
popf
icebp
cmp
lea
mov
pop
xchg
mov
out
sar
mov
retf
xor
(bad)
and
loope
les
add
fs
dec
repz
push
add
shl
into
clc
js
and
push
pop
loope
paddsw
js
jl
out
cld
and
jbe
leave
pop
mov
sub
mov
cmp
movs
cmp
cs
sbb
shl
mov
je
nop
inc
and
adc
pushf
xor
mov
xchg
push
mov
pop
inc
mov
mov
inc
les
movs
mov
ret
cli
(bad)
lods
mov
sub
cwde
out
mul
iret
adc
add
out
pop
js
idiv
dec
ins
push
aad
dec
iret
cmp
sub
out
jp
jl
leave
pop
cmp
and
pop
dec
outs
mov
int3
mov
xchg
idiv
movs
mov
addr16
je
push
aaa
sub
test
nop
(bad)
rcl
fs
dec
mov
pusha
retf
pushf
aas
call
nop
scas
ins
mov
cwde
fsubr
nop
push
movs
cmp
stos
stc
shr
cmp
lods
stc
xor
movs
arpl
mov
je
(bad)
mov
mov
mov
clc
cld
(bad)
pop
xor
dec
loop
int
outs
imul
jmp
int3
pop
jl
sbb
stc
in
xor
push
cmc
mov
mov
mov
je
mov
mov
inc
and
retf
stos
mov
dec
jb
xchg
dec
pushf
nop
fadd
mov
call
fwait
xor
xor
retf
enter
retf
test
aam
push
ret
jmp
jge
cmc
(bad)
rol
je
out
mov
xchg
push
or
loop
leave
fs
cmp
fsubrp
or
dec
aas
inc
push
xor
aad
popf
in
dec
repz
jl
pop
fs
cwde
test
xchg
mov
aad
leave
mov
in
loopne
pop
push
mov
pop
cmps
jo
mov
mov
push
mov
dec
or
out
in
popf
retf
outs
jo
mov
mov
jl
jne
mov
mov
cmp
lock
fs
jl
in
pushf
test
test
repz
pusha
fs
imul
cmp
jb
imul
das
inc
add
jl
iret
dec
xor
ja
rol
add
add
cdq
sub
dec
cwde
sub
ds
outs
and
mov
push
mov
sub
and
rep
xchg
pop
jo
outs
mov
ja
scas
xchg
pop
div
fs
xchg
movs
sti
(bad)
mov
mov
loope
jnp
std
enter
mov
cmc
pushf
and
cs
mov
je
leave
je
test
inc
mov
jne
test
call
sbb
xlat
jl
jnp
sub
mov
add
pushf
fidiv
xchg
push
mov
loopne
addr16
pushf
adc
pushf
push
jbe
stos
xchg
adc
push
shl
xchg
xchg
mov
test
lds
xchg
jge
mov
fwait
mov
pop
mov
mov
sbb
sti
ds
or
jne
imul
js
test
jmp
or
fnstcw
outs
ins
retf
cld
imul
mov
or
xchg
aam
cmp
(bad)
mov
mov
jae
jle
xchg
ins
je
mov
xchg
stc
mov
xchg
cmps
sbb
mov
inc
fmul
push
mov
(bad)
clc
dec
sar
push
fsub
jl
push
pushf
jns
(bad)
aad
test
inc
and
call
fadd
jb
jl
mov
adc
dec
adc
pop
push
sahf
push
gs
cwde
aas
mov
mov
mov
int
jle
test
pop
mov
movs
loope
mov
mov
je
mov
sbb
jne
das
mov
pop
xchg
cwde
leave
js
shr
enter
pop
cmps
push
jmp
push
xor
clc
icebp
ret
push
jo
in
jo
push
push
push
sbb
mov
out
pop
push
inc
imul
call
mov
mov
lods
js
xchg
lods
cli
lahf
mov
jmp
fdivr
xchg
dec
cli
jl
xor
mov
xchg
stos
sub
cdq
sbb
je
loope
mov
cmps
add
add
ret
cmc
mov
js
sar
(bad)
js
sar
jae
aas
jl
xchg
retf
jne
test
xchg
pushf
mov
jne
(bad)
mov
js
xchg
cwde
addr16
jne
pushf
popf
jo
jle
jge
daa
sub
jo
lea
cmp
inc
js
hlt
je
jmp
popa
ror
ficomp
mov
imul
std
lahf
push
aas
out
xlat
int3
add
jge
pop
dec
dec
mov
ret
jl
mov
adc
and
adc
xchg
pop
and
movs
mov
sub
xor
mov
outs
movs
(bad)
(bad)
sub
jl
jp
xchg
pushf
mov
js
ins
jl
and
inc
lds
stos
fmul
mov
sti
fistp
dec
out
jne
sbb
je
jo
sub
in
aas
jl
sbb
ss
push
jns
sub
repnz
call
jne
jmp
test
push
jmp
movs
push
fbstp
add
push
cdq
xchg
fidiv
fiadd
iret
je
je
call
fsubr
mov
into
fs
mov
fcomp
mov
mov
push
sub
mov
(bad)
scas
adc
aam
repz
aam
fstp
mov
nop
call
retf
lods
push
ins
inc
mov
cmp
call
pusha
push
mov
and
jo
mov
cli
xor
sahf
mov
scas
cwde
mov
mov
imul
test
sbb
rcl
sub
iret
aam
xor
and
mov
jl
mov
out
xor
(bad)
out
in
sub
std
rcl
repz
fs
enter
add
stos
sbb
pushf
sbb
pop
fbstp
lds
call
ja
ret
cmc
(bad)
or
push
lock
jns
ror
mov
pushf
push
clc
test
mov
aad
fistp
add
jbe
mov
push
pop
lea
push
out
jl
jbe
mov
loope
jp
adc
cmp
cmp
sbb
stos
fisub
js
lea
lods
dec
test
pushf
cmp
pop
(bad)
std
test
test
add
rol
or
nop
jne
in
fnsave
inc
cs
xchg
push
jge
push
call
rcr
ret
sbb
add
test
ds
jne
add
out
jo
clc
clc
mov
popf
nop
dec
jne
rcl
es
out
xlat
mov
ins
loop
cmps
call
sbb
or
jl
std
mov
in
test
cld
mov
jns
test
mov
out
pop
mov
cmp
jbe
imul
fiadd
pop
xchg
add
jnp
sar
xchg
inc
shr
int3
scas
movs
fisub
shl
inc
aam
je
stos
(bad)
cmp
sbb
sbb
(bad)
lods
push
test
pop
rcl
addr16
mov
cmp
jge
xor
xor
jl
inc
pop
mov
imul
xlat
retf
sub
jb
jg
test
inc
mov
cmc
les
add
(bad)
idiv
test
fisub
inc
iret
mov
(bad)
loop
mov
dec
mov
test
sub
cmp
pop
cmp
in
jnp
xchg
xor
push
add
js
mov
fld
pop
jmp
es
jo
pusha
jae
adc
or
je
jo
sub
outs
pusha
pop
mov
cmp
add
retf
sbb
adc
dec
xor
sub
and
jne
test
sbb
pop
jae
sbb
out
sub
(bad)
mov
es
ror
sub
(bad)
call
add
adc
pop
jl
test
and
stos
lods
pop
ins
push
sbb
lahf
jne
clc
test
movs
and
pop
ja
mov
fadd
xchg
adc
add
jmp
sahf
cmp
sbb
xor
aaa
cwde
sub
sub
cmp
sub
dec
js
mov
sub
sbb
and
cmp
jne
inc
push
not
sti
xor
inc
gs
dec
ins
aaa
jl
xor
mov
xor
xor
add
jmp
dec
push
sbb
js
movs
je
cmc
jge
or
fisubr
sar
dec
dec
js
das
xor
sti
jl
call
test
pusha
mov
push
jbe
and
push
jg
pop
and
push
pop
sub
jo
xor
call
xor
outs
sub
loope
das
je
xchg
je
inc
xor
cmp
cmc
int3
jae
lahf
sbb
pop
jnp
aam
call
jp
sbb
hlt
loopne
push
cmp
js
or
sar
push
in
sbb
adc
xor
push
cmp
pop
nop
sbb
and
adc
je
test
nop
cmp
sub
jmp
sub
sbb
leave
test
ret
cmp
cmp
pop
push
push
and
pop
sub
or
or
pop
push
sbb
sbb
adc
out
mov
(bad)
stc
clc
test
add
mov
adc
pop
inc
or
inc
arpl
pop
je
and
xor
test
je
jge
lea
push
push
test
sub
mov
int3
stc
push
dec
dec
das
movs
pop
sti
clc
in
out
popf
std
icebp
mov
add
in
movs
call
sbb
push
div
popf
sti
lock
and
cmp
sti
jle
sbb
fs
add
pop
pop
ins
or
dec
push
push
rcr
dec
(bad)
add
jge
push
add
push
inc
mov
shl
fidiv
mov
fistp
jmp
loope
jmp
test
push
jmp
and
dec
out
or
repz
pop
add
push
or
popa
(bad)
outs
imul
jbe
and
push
push
jl
enter
xlat
gs
mov
aam
fcmovb
pop
push
(bad)
xor
pushf
dec
aad
cmp
(bad)
add
dec
rol
fcomp
shl
jp
out
fistp
(bad)
je
sub
xchg
cmp
cmps
sbb
in
sar
jl
adc
jp
xor
jne
jns
lods
cmc
push
adc
std
cwde
int
mov
ds
je
retf
(bad)
pop
push
or
in
fs
cmp
push
sub
(bad)
in
bnd
jnp
loop
xchg
cmc
nop
xor
enter
pop
and
hlt
iret
call
js
sbb
repz
jb
lds
push
ret
sar
iret
in
je
xlat
dec
sub
mov
test
leave
retf
loope
les
add
repz
mov
in
cmp
std
push
out
jp
pop
pop
ror
cmp
jle
mov
xchg
jb
xor
fld
dec
call
retf
outs
mov
sbb
push
rcr
xchg
retf
fild
dec
lock
les
pop
fcmovb
je
out
jne
cli
jl
loopne
jo
jmp
in
ins
push
mov
jne
shr
mov
jge
dec
enter
iret
pop
loopne
cmp
(bad)
jae
mov
xchg
or
xor
imul
jmp
pop
js
call
ret
mov
fbstp
mov
loope
pop
fsubr
push
outs
int
cli
sub
xor
mov
stos
jmp
icebp
(bad)
out
nop
pop
std
aam
xor
lea
lea
cmc
pop
(bad)
cmp
mov
in
pusha
leave
inc
outs
pusha
rol
jo
push
push
jne
(bad)
or
xchg
popf
pop
mov
shl
or
fsubr
jne
inc
dec
jne
add
add
cmp
(bad)
jl
sub
movs
nop
mov
sub
pop
add
scas
fdivr
dec
mov
pushf
test
loope
pusha
mov
ins
lods
xchg
push
push
shr
fs
jae
fadd
jnp
mov
cdq
jp
mov
rol
pop
into
sbb
gs
out
aam
sub
jmp
lods
jl
xor
mov
dec
in
mov
lods
test
adc
pop
mov
imul
jo
lahf
push
add
dec
ins
dec
jo
pop
mov
les
xchg
jl
push
xor
cmps
dec
stos
cdq
mov
retf
gs
out
int3
ja
test
nop
mov
sub
ja
jnp
(bad)
jmp
(bad)
mov
xchg
mov
push
mov
mov
rcr
je
add
xchg
mov
ret
sub
cmp
iret
mov
add
(bad)
adc
pop
jmp
jne
(bad)
movs
in
adc
mov
stos
gs
je
jmp
push
pop
test
and
aas
retf
ficomp
push
scas
xchg
and
mov
and
fs
fisub
jnp
cmp
lock
or
js
iret
enter
jle
ins
jg
push
dec
hlt
pop
xor
je
add
fcomp
pop
arpl
dec
pop
pop
or
jl
js
cmp
dec
xor
iret
pushf
push
stos
test
into
sbb
loop
dec
je
stc
ror
and
mov
pop
fdivr
data16
ja
jo
dec
loopne
pop
add
outs
push
pop
(bad)
imul
out
jl
jo
pop
lods
and
call
pop
js
call
push
pop
xchg
mov
sub
ds
jl
popa
bound
ds
inc
mov
add
outs
xchg
jge
jbe
jne
hlt
je
loope
cwde
inc
or
add
jo
mov
lods
test
retf
jne
loopne
pushf
adc
cmp
push
faddp
cmp
test
test
xchg
cli
mov
push
pop
std
aad
outs
cmp
push
repz
ds
pop
aas
jb
fwait
js
push
mov
or
push
or
leave
cmp
pushf
test
and
call
loopne
ins
push
jae
mov
mov
inc
pop
jl
add
or
cmp
sbb
sbb
add
sub
mov
cmp
sahf
stc
cwde
xlat
ret
jns
lds
out
ret
mov
push
mov
mov
leave
pop
(bad)
retf
sbb
idiv
arpl
not
lea
jns
fist
dec
dec
outs
in
or
sti
sub
dec
in
jno
inc
popf
dec
mov
enter
and
popf
fisubr
push
jl
jne
test
add
mov
push
pop
pop
ret
fcomp
push
ds
dec
outs
push
inc
inc
cli
pop
or
cmp
fcomp
out
test
xor
cmps
test
sbb
add
pusha
jmp
jge
aad
mov
dec
mov
js
mov
test
call
int3
int
out
lds
pop
pop
std
jo
out
pushf
cmp
cmc
cmp
lea
inc
je
xor
jo
and
sub
inc
mov
pop
jno
js
add
mov
adc
dec
shr
push
lods
ja
inc
dec
mov
nop
mov
mov
(bad)
and
mov
mov
mov
cmp
cwde
movs
jns
aam
push
push
rol
jne
xchg
cmp
test
jns
sar
(bad)
xchg
out
in
std
pusha
stc
retf
or
fidiv
in
pop
out
and
pop
push
sub
add
push
sbb
inc
mov
push
jbe
sub
cmp
cli
arpl
ss
mov
call
jl
je
adc
pop
jmp
int3
cwde
push
rcr
mov
add
pop
movs
fld
lea
adc
inc
fdiv
mov
or
add
data16
ror
js
mov
push
outs
jo
imul
mov
(bad)
mov
nop
fwait
in
sbb
adc
shl
movs
loope
add
int3
sub
sbb
js
inc
jnp
push
sub
popf
es
pop
aaa
cmp
pop
pop
imul
adc
add
jne
imul
clc
sub
xor
dec
push
mov
cmp
push
stos
mov
test
ins
mov
sbb
xor
or
scas
lods
jbe
jo
mov
mov
mov
ror
pop
int3
xchg
mov
mov
mov
js
pop
std
or
push
pop
sub
add
inc
pop
xor
jl
jg
pop
and
push
pusha
je
test
mov
xor
fsubr
mov
call
mov
mov
scas
pop
mov
mov
mov
dec
js
jg
lods
cmp
xor
lods
iret
xchg
pop
scas
xchg
sbb
stos
push
pop
in
sbb
mov
gs
mov
cmc
push
sub
repz
jmp
inc
int3
ins
sbb
mov
and
loope
add
adc
pop
aas
data16
or
aam
cmp
xlat
in
sar
aad
xor
and
aaa
cmp
cwde
jne
jmp
movs
fdivr
mov
xor
stos
imul
mov
jmp
lods
and
xchg
jne
stos
pusha
cli
test
dec
dec
mov
je
mov
xor
mov
out
mov
jne
int3
aad
pop
sub
mov
xor
jne
adc
jbe
xor
adc
je
sub
ins
ftst
jb
shl
jbe
mov
scas
test
mov
ja
jnp
xor
sbb
call
add
jmp
mov
int
movs
fdiv
stos
scas
pusha
je
lea
ins
jmp
(bad)
(bad)
js
ror
jmp
lock
lods
dec
xchg
dec
js
scas
lea
push
sbb
mov
push
mov
mov
ins
jns
mov
mov
mov
cmp
adc
and
adc
pop
das
fdivr
add
mov
cmp
jne
es
js
xchg
mov
jmp
outs
je
dec
mov
pusha
or
mov
cmp
xchg
push
jno
in
gs
dec
fwait
lea
clc
cld
jmp
js
test
adc
rcr
or
inc
in
add
mov
mov
clc
ins
movs
xchg
push
cmps
push
mov
ins
lds
xor
fstp
push
cmc
ds
outs
add
and
push
adc
mov
std
jne
xchg
or
sbb
in
adc
dec
test
adc
cmps
cwde
sub
pop
push
aas
mov
(bad)
xor
xor
lods
sub
dec
outs
cmp
pushf
or
cmp
add
mov
xchg
mov
bound
rcr
test
dec
push
adc
push
jae
adc
mov
sbb
movs
(bad)
jmp
xor
dec
in
gs
mov
stc
in
mov
add
test
jo
cs
add
std
js
es
or
pusha
or
jo
ds
cmp
xor
dec
ror
sub
mov
loope
push
data16
jl
aam
nop
aad
push
cld
add
dec
inc
jmp
rol
dec
mov
cmp
cdq
xchg
mov
ficomp
fwait
cwde
jmp
lock
out
imul
pop
test
jl
stos
cdq
nop
mov
pop
mov
sbb
cli
adc
pop
jbe
mov
test
push
hlt
aam
jae
cli
std
jl
adc
pop
je
add
push
adc
mov
and
js
mov
mov
call
inc
pop
loopne
pop
inc
je
jp
dec
and
push
movs
cmp
cld
xor
jnp
sbb
ins
sbb
pop
push
and
pop
sub
mov
and
lods
push
mov
xchg
jne
push
mov
mov
aaa
jo
mov
mov
cli
push
mov
mov
sbb
fdivr
jl
(bad)
div
mov
xor
mov
in
jp
jmp
jl
sar
xor
xchg
push
in
js
sbb
cmp
fs
js
add
jnp
(bad)
sub
das
cmp
inc
dec
sbb
and
inc
jns
aam
(bad)
jae
aaa
add
sbb
jnp
inc
push
push
pop
lods
sub
jns
pop
pop
ret
mov
sub
jmp
push
nop
mov
test
repnz
inc
mov
mov
sbb
jo
stos
jo
mov
pop
iret
mov
jp
fwait
xchg
xchg
daa
mov
inc
mov
test
fs
repz
jmp
rcr
lods
push
ja
sub
mov
repz
das
jo
add
out
and
js
xchg
shl
add
scas
movs
stos
adc
and
push
les
jp
in
sbb
fnstenv
jge
cmp
sbb
cmp
pushf
(bad)
cli
repnz
jne
test
enter
and
push
xchg
cmp
rol
sub
pop
jl
lds
cmp
test
lods
or
xchg
jnp
in
call
das
xchg
mov
jo
xor
and
call
jns
and
call
or
test
pop
btc
cmp
or
les
sbb
add
in
clc
and
call
jo
xor
pop
pop
rcr
jns
mov
pop
mov
aad
js
imul
mov
or
nop
cdq
mov
add
outs
and
xor
or
xor
leave
in
loopne
cmc
in
jne
call
jl
and
mov
sar
xchg
test
pop
clc
mov
test
xchg
ins
int3
test
movs
xchg
dec
sbb
mov
lea
(bad)
ins
cmp
dec
hlt
test
push
inc
cwde
jo
loop
add
add
dec
sbb
cld
ja
push
and
add
xor
and
jl
sbb
fs
or
sbb
clc
jno
enter
mov
pop
jne
push
ins
cmps
mov
xor
mov
xchg
pop
jo
pop
pop
ins
xchg
cmp
or
in
dec
sub
stc
mov
add
mov
enter
je
fsubr
xor
movs
(bad)
mov
add
add
ror
repz
xor
xchg
xor
add
add
jbe
pop
rol
mov
adc
out
out
imul
mov
ins
and
jl
or
and
xor
sbb
fs
pop
push
xor
jl
das
pop
fbstp
xchg
stos
pop
pop
push
test
ja
jmp
and
mov
add
retf
and
mov
enter
jns
pop
icebp
int
dec
xchg
js
xor
cmps
or
pop
push
or
test
mov
mov
movs
jle
pop
ins
adc
jo
test
test
mov
dec
rcl
(bad)
jmp
cmp
test
sti
retf
xchg
mov
sahf
jne
int3
mov
sbb
in
sbb
push
je
les
add
and
sub
test
and
sub
out
sub
pop
jl
xchg
pop
pusha
adc
ja
pop
jl
jne
push
xlat
dec
test
jl
xchg
and
xor
and
cwde
jb
pop
rol
hlt
mov
ret
clc
mov
pushf
iret
sub
mov
xor
fisttp
call
js
mov
and
inc
jne
cmps
fstp
xchg
cmp
pushf
mov
jle
push
jbe
aam
add
aaa
sub
ror
cwde
pop
mov
xchg
sub
stos
fs
sbb
lock
into
leave
movs
adc
adc
adc
adc
mov
js
and
jl
and
or
jo
xor
xor
cmps
cmp
add
and
pop
int
push
jl
aam
(bad)
jecxz
mov
pushf
or
retf
into
mov
mov
in
xor
jl
fcmovnb
fdiv
jnp
push
pop
imul
js
aad
mov
mov
lods
pop
inc
int3
lods
retf
mov
movs
cmp
sahf
jo
into
les
rcr
push
fs
loope
jo
test
dec
fadd
mov
mov
xor
jmp
(bad)
test
jge
adc
jl
xor
nop
push
inc
jns
cli
or
nop
add
out
sbb
sub
jl
and
sub
and
jl
not
sbb
(bad)
call
push
jg
je
stos
jne
mov
stos
ret
clc
push
ret
inc
jno
ja
mov
rcl
std
mov
fdivr
mov
test
xchg
mov
dec
ins
(bad)
xor
test
and
ret
leave
int3
xor
out
dec
shl
dec
scas
nop
and
fwait
mov
mov
jl
int
inc
call
nop
push
push
ret
fwait
jne
sbb
loop
and
jns
ss
std
sbb
std
xlat
les
pusha
ds
mov
icebp
(bad)
frstor
clc
aam
loop
std
or
adc
lds
sbb
xor
data16
cmp
neg
add
adc
mov
and
jp
dec
pop
pop
cmp
mov
push
xchg
jbe
adc
mov
(bad)
pop
fdivr
mov
xchg
imul
pop
call
int3
sbb
mov
fnstsw
mov
lods
fisttp
push
pop
dec
jns
lods
mov
jl
clc
cwde
lods
stos
xor
push
rcr
add
je
fldcw
jbe
mov
cmp
dec
jmp
fisub
fcomp
aam
retf
sbb
xlat
test
xor
pop
fs
hlt
aam
out
lock
add
jle
sbb
and
xor
sub
mov
clc
jo
nop
pop
push
push
jnp
hlt
sbb
dec
cmp
and
or
push
jl
add
test
or
pop
or
lods
ins
call
aad
pusha
mov
sahf
rcl
pop
fdiv
int3
pop
sar
(bad)
fidivr
out
adc
mov
xchg
mov
cli
aam
pushf
aam
fcmovnb
jo
ret
push
mov
mov
cwde
add
cmp
adc
js
sbb
add
retf
push
push
test
ins
mov
cwde
js
mov
test
je
sbb
int3
jmp
sbb
adc
clc
pop
mov
sub
clc
push
add
pop
clc
pop
sub
stos
jl
cmp
dec
jl
jl
rol
mov
sahf
push
push
jb
pop
jno
imul
enter
mov
mov
into
fcmovu
jns
scas
jns
add
test
add
cld
les
loop
test
ret
aad
call
mov
cmps
jo
fwait
add
sbb
mov
add
add
mov
jbe
mov
mov
jg
dec
in
fldenv
jmp
fcomp
push
or
jle
xor
adc
call
and
inc
push
hlt
cmp
xor
sub
push
xor
push
add
cmp
inc
inc
call
sbb
jl
jmp
push
and
ins
push
xchg
sar
loop
js
fldcw
cmps
popf
add
or
loopne
fcmovne
mov
jmp
mov
in
jns
out
cli
js
mov
mov
cmp
push
mov
cmp
jp
neg
mov
cmp
mov
shl
push
fild
std
jmp
xlat
icebp
push
imul
fucomi
push
popa
loop
adc
clc
push
sub
jl
jl
aaa
test
sub
or
push
and
gs
dec
cmp
jl
pop
xchg
imul
(bad)
cmc
sub
js
xchg
fld
es
cli
loopne
stc
hlt
int
pushf
in
mov
pushf
add
repnz
call
lock
loop
lds
js
xor
nop
imul
cli
fnstsw
fsubr
or
lahf
xchg
movs
cmps
js
test
sub
xchg
test
xchg
dec
jae
fwait
movs
cli
cmp
jmp
mov
xor
test
push
out
cmp
jb
lods
gs
call
dec
or
fs
rcr
in
xor
clc
adc
cld
lock
mov
jl
in
mov
xchg
cmp
push
out
or
inc
jne
jl
dec
inc
jl
lds
and
xchg
xchg
add
cmp
ja
js
push
cs
mov
pop
aam
and
test
push
or
std
ins
test
pop
xchg
in
fsub
loope
and
test
mov
js
mov
fmul
aam
test
sbb
mov
test
dec
rcl
push
call
mov
fcom
rol
add
or
ja
fdivp
mov
aam
(bad)
fcomp
stc
pushf
push
call
jl
loope
retf
and
jo
retf
int
std
imul
cwde
jmp
or
js
sbb
pop
jl
sti
push
or
cld
lock
and
jl
or
sbb
aas
call
pop
sbb
mov
mov
ins
cmp
imul
add
mov
cli
mov
inc
mov
out
jb
(bad)
jb
aad
jb
(bad)
jb
jecxz
jns
iret
in
lock
push
movs
js
or
pusha
jne
jle
pop
pop
sbb
ins
xchg
loope
cmp
jmp
(bad)
dec
imul
push
into
push
jo
in
enter
push
xlat
jo
mov
xchg
loop
fdiv
int3
jl
fnstenv
or
pop
jl
mul
mov
js
adc
in
clc
xor
imul
mov
push
cld
push
je
sub
push
cmp
out
push
fadd
idiv
hlt
int
xchg
mov
fwait
ret
je
shl
sbb
into
out
ins
push
stos
mov
repz
pop
jl
xor
imul
push
rol
jns
(bad)
jmp
ret
dec
fsubr
or
icebp
jp
mov
in
loop
sub
pop
mov
fidivr
aam
dec
mov
jne
mov
fs
loope
adc
hlt
cld
rcl
nop
and
mov
jl
push
pop
js
jmp
push
in
push
in
aas
dec
push
clc
jae
in
jge
adc
out
js
jmp
loope
or
mov
add
adc
adc
cmps
std
cld
aam
adc
je
(bad)
jae
jmp
(bad)
jmp
mov
les
ins
ja
mov
mov
cmp
jl
add
xchg
daa
mov
test
fisttp
ret
shl
(bad)
xlat
add
loopne
iret
loop
dec
mov
dec
mov
loopne
xchg
stos
pop
cmp
retf
add
pop
test
cmp
mul
add
faddp
xchg
adc
adc
sub
xor
mov
and
jae
adc
js
or
pop
jle
cld
jb
dec
mov
sar
or
cld
mov
aaa
inc
pop
cs
clc
cmp
xor
or
push
fdivr
add
adc
(bad)
test
rcr
jl
into
mov
fadd
mov
fsub
mov
xchg
mov
test
js
test
mov
js
cmps
mov
xchg
fisttp
pop
mov
and
adc
retf
cmp
(bad)
lea
fsub
in
jle
in
jl
int
cld
push
std
pop
jmp
xchg
dec
push
sbb
loopne
paddb
add
in
cmc
or
into
pop
cmp
jp
fwait
cmp
test
jl
cmc
js
dec
ins
add
mov
xor
je
sti
sub
inc
call
jl
fist
shl
cmp
cmp
(bad)
cld
mov
mov
lds
xchg
sahf
mov
xchg
mov
test
mov
dec
test
mov
dec
call
dec
push
xchg
movs
xor
adc
jecxz
jns
ret
push
lods
shl
mov
int
inc
(bad)
aam
cmps
xlat
and
arpl
sti
movs
sar
cli
add
and
xor
jns
(bad)
add
in
cld
js
dec
addr16
jne
push
dec
pop
(bad)
leave
and
add
test
jnp
mov
xor
pop
gs
sbb
mov
jl
xlat
out
js
shr
cli
adc
cmp
stc
rcl
mov
js
aad
jl
aam
fs
mov
jns
test
mov
test
mov
mov
push
scas
xor
mov
xchg
ret
mov
shl
div
xlat
iret
pop
(bad)
xchg
lock
push
stos
mov
fs
lock
retf
push
int
dec
mov
(bad)
stc
sbb
cli
pusha
retf
imul
sbb
add
nop
xlat
add
in
fiadd
js
fdiv
jae
cmps
repz
add
pop
nop
xlat
add
jl
daa
(bad)
rol
loopne
cmp
jge
and
sbb
jmp
push
js
out
nop
jne
in
jp
ret
fnstsw
mov
fadd
mov
lahf
mov
test
mov
lea
in
ins
shr
mov
test
xor
enter
jo
xchg
sub
std
xchg
mov
mov
jo
cwde
test
dec
stos
jge
mov
js
call
outs
mov
cli
stc
iret
add
add
ret
or
sbb
fs
ja
xor
out
std
in
dec
pop
pusha
adc
pop
in
mov
aad
aad
jl
jb
jbe
in
xor
js
ds
push
dec
cmp
jbe
fcomip
mov
out
jns
int3
hlt
jmp
lds
mov
aam
jb
shl
ret
push
es
ins
jno
push
xchg
pushf
jns
lahf
lods
mov
mov
mov
(bad)
mov
and
pushf
push
sahf
shl
test
mov
mov
push
movs
adc
xchg
mov
std
push
fucomip
jge
repnz
std
cli
mov
hlt
mov
mov
add
lock
cmc
in
add
push
daa
jne
jb
add
push
sub
es
fbld
pop
rcl
js
mov
and
sbb
cmp
sti
fld
loopne
xchg
call
mov
(bad)
shr
add
mov
loope
nop
(bad)
xor
xor
test
arpl
sub
mov
fild
cld
xlat
outs
cmp
xchg
out
jp
mov
js
jmp
sbb
pop
mov
iret
mov
and
in
in
jo
add
fdiv
push
(bad)
lods
call
repz
cli
js
aad
jbe
jecxz
mov
jp
push
adc
sub
sub
mov
jae
in
js
cmp
mov
xor
fnstenv
pop
js
mov
std
loopne
mov
retf
mov
jne
(bad)
cmc
shl
sar
mov
add
pop
xchg
fs
int3
js
lahf
ret
mov
cmp
xlat
out
mov
fadd
push
stos
jl
xchg
mov
ffreep
adc
mov
fs
(bad)
mov
stc
sub
dec
ret
call
cld
or
and
inc
and
je
pop
js
test
js
jp
enter
sub
ins
test
ds
dec
jne
or
stc
or
js
fdiv
mov
mov
in
je
sar
je
les
dec
shl
jp
mov
cmc
xor
add
xor
fsub
test
mov
ret
ret
aad
xor
mov
jo
retf
out
cmp
xor
dec
scas
shl
jo
fimul
in
push
pop
cmps
xor
popf
aad
mov
in
sub
out
ror
test
pop
repz
mov
mov
aad
pop
fdivrp
ins
popa
out
add
pop
popa
mov
jbe
push
push
(bad)
out
movs
sbb
js
jl
leave
je
and
je
and
arpl
cmc
es
push
add
jp
fsubr
sub
add
push
push
out
jb
rcr
imul
push
and
(bad)
or
mov
push
mov
aam
push
ficomp
outs
push
dec
fstp
(bad)
adc
mov
mov
(bad)
add
test
mov
shl
mov
add
inc
cmp
sbb
not
iret
test
lea
neg
pushf
add
and
aam
cli
imul
sbb
cs
fcomp
ret
sbb
das
pop
test
js
in
jo
adc
cmp
daa
ds
outs
add
sub
out
std
mov
in
sbb
ins
(bad)
std
pusha
loopne
call
clc
mov
js
loope
jne
jp
mov
cmp
mov
fstp
rcl
mov
add
pop
push
pusha
push
mov
add
sbb
add
push
fs
adc
cmc
scas
xor
or
jmp
and
js
loop
je
hlt
mov
cmps
mov
dec
shl
cmps
mov
stos
jl
mov
push
js
pop
and
in
jb
je
dec
pop
ins
sub
add
js
or
aam
push
adc
pop
repz
jne
add
out
pop
push
fcomip
jns
call
jmp
mov
in
gs
adc
inc
pop
fnstsw
(bad)
mov
mov
fidiv
sub
adc
xchg
add
cmp
data16
and
int3
sbb
test
xor
sti
mov
jae
sbb
jge
ja
ficomp
mov
mov
xor
js
js
shl
adc
jbe
dec
mov
sub
xor
adc
xor
psubsb
jo
and
and
aas
pop
pop
push
das
jns
or
std
pop
or
mov
(bad)
in
in
sbb
jne
cli
push
neg
out
fdivr
and
jle
or
pop
lods
idiv
repnz
sub
adc
js
sbb
mov
test
dec
push
xor
jnp
outs
in
add
sub
test
test
in
push
fs
mov
je
shl
mov
mov
lahf
(bad)
cmp
es
fdivr
sub
in
je
je
ins
mov
sub
mov
sub
enter
cmp
pop
cmp
pop
push
push
adc
add
mov
push
repnz
mov
xor
push
xor
mov
sbb
inc
or
ins
or
jo
pop
adc
sbb
adc
test
test
or
in
jo
push
das
ss
push
je
test
mov
arpl
test
sub
cmps
cmc
xchg
je
push
je
jp
xor
leave
(bad)
call
jl
dec
pop
les
sub
ins
sbb
rcl
jnp
pop
es
push
mov
pop
xlat
mov
inc
sbb
push
pop
cmp
sbb
push
outs
pusha
adc
mov
inc
jo
inc
and
mov
adc
xor
xor
adc
pop
fs
add
mov
mov
adc
or
mov
rol
jl
repnz
cs
movs
ins
dec
mov
call
dec
dec
xor
pop
ds
sub
jnp
and
dec
ins
sbb
shl
xor
mov
cs
das
call
sub
dec
mov
cmp
cwde
dec
pushf
sub
inc
sar
inc
push
xor
jne
sbb
mov
daa
je
dec
pop
pop
test
fprem1
cwde
lahf
mov
xchg
test
xor
jl
xchg
sub
stos
(bad)
leave
or
out
or
mov
jae
jns
and
pop
mov
lock
pop
jo
fs
push
cmp
jne
push
xor
mov
pop
pop
aas
push
popa
jae
dec
std
enter
mov
inc
sbb
inc
push
push
push
dec
inc
inc
in
pop
je
fisubr
push
dec
cmp
ss
add
movs
push
and
pop
es
aas
xchg
je
push
jo
ror
test
(bad)
dec
jmp
fild
or
push
mov
jmp
enter
ins
jbe
and
js
outs
mov
je
gs
frstor
or
cs
int3
mov
or
or
adc
shl
dec
or
pop
mov
push
push
push
cwde
ds
cwde
ret
js
mov
shl
mov
jl
jne
pop
push
adc
(bad)
mov
adc
push
xor
ins
lock
mov
clc
scas
mov
movs
mov
add
js
cmp
shl
movs
and
je
jne
fcomp
xchg
dec
sbb
ins
xor
or
jecxz
jne
xlat
mov
xor
scas
jno
mov
pop
cld
ret
push
rcl
les
aad
je
jg
or
adc
add
lds
adc
hlt
pusha
jne
adc
or
pop
sub
dec
xor
add
dec
sti
xchg
mov
bnd
in
in
xor
sub
add
ret
or
test
lds
and
push
ins
mov
sub
shl
test
jo
test
je
add
or
push
or
inc
jb
pop
stos
or
sub
mov
outs
add
or
sti
cmps
cdq
movs
call
aam
aas
mov
xchg
fs
xchg
push
std
cmc
xor
aad
out
jo
pop
push
push
mov
ret
jmp
xor
leave
mov
hlt
fsubr
and
cmp
js
jp
je
ins
cmp
pop
cwde
les
xchg
and
mov
fcomp
pop
adc
or
popf
cmps
mov
inc
push
sahf
sti
inc
test
jns
nop
les
push
xor
inc
mov
test
adc
xor
mov
push
data16
loope
sub
nop
fnstsw
pop
fs
xchg
sub
iret
aam
dec
adc
enter
call
cdq
push
push
and
movs
jo
push
test
rcr
mov
je
and
add
(bad)
fcomp
cmp
js
rol
nop
adc
jno
fiadd
mov
inc
in
push
ja
mov
out
xchg
add
xchg
stos
test
mov
and
lock
aad
sbb
mov
pop
cs
and
test
mov
xchg
stos
je
adc
or
push
daa
mov
dec
add
xchg
dec
mov
retf
and
js
fs
pusha
ins
sub
call
sub
xchg
mov
leave
xor
cdq
xor
push
leave
(bad)
pushf
pop
std
stos
in
push
call
push
je
fstp
pop
fistp
retf
inc
out
inc
clc
push
mov
pop
outs
push
mov
pushf
xor
shl
jbe
mov
(bad)
mov
rcl
pop
xor
and
xchg
jl
(bad)
and
xor
retf
mov
shr
repz
fdivr
fcomp
fwait
lea
je
xchg
je
xchg
push
iret
js
inc
clc
mov
and
inc
push
(bad)
js
retfw
ja
rcl
sti
dec
aad
pop
pop
fidivr
push
cmp
dec
cmp
fwait
sti
in
push
or
clc
sbb
xlat
or
inc
inc
xor
test
icebp
jbe
aas
mov
js
xchg
adc
mov
mov
lods
sbb
or
or
fidivr
and
push
clc
jb
int3
push
xor
int3
mov
xchg
push
add
mov
dec
xchg
daa
add
push
sbb
ja
add
mov
push
sbb
js
pop
fsubr
enter
je
(bad)
pop
push
pop
aam
jne
loope
cmp
mov
test
enter
les
pop
sbb
jbe
push
pushf
adc
shl
js
in
jo
sub
call
add
adc
cmp
(bad)
mov
(bad)
ins
and
jg
jno
ret
cmp
into
mov
data16
(bad)
fnstcw
cmp
in
dec
(bad)
lock
out
dec
xor
jl
sbb
xchg
inc
add
jbe
loope
hlt
sub
xchg
jns
rcr
shl
hlt
into
jnp
jo
ins
xchg
pop
retf
outs
pop
pop
fcom
aaa
out
sub
xchg
inc
cdq
mov
add
hlt
adc
lahf
inc
and
inc
stos
pusha
and
and
shl
xor
sub
xchg
(bad)
mov
dec
ja
or
jp
mov
xor
out
jbe
mov
xchg
jae
jnp
or
add
pop
pop
into
dec
mov
ins
sbb
sbb
aam
push
in
cmp
push
dec
sbb
imul
cmp
xchg
rcr
ins
(bad)
fadd
push
push
ins
pop
fst
dec
icebp
and
mov
push
push
adc
xlat
jne
aaa
push
xchg
ss
popf
stos
out
xchg
jb
jmp
jmp
xchg
mov
adc
and
jno
imul
or
pop
int3
movs
fild
pop
xchg
xchg
std
mov
outs
(bad)
pop
in
push
adc
es
je
pop
inc
test
outs
mov
jno
jbe
jb
fsub
je
(bad)
je
fnsave
imul
bound
xchg
mov
or
test
ds
retf
imul
js
leave
mov
js
dec
out
xor
xchg
inc
cmp
in
pop
ja
jne
jmp
fsubp
mov
mov
fs
shl
ret
jns
or
mov
test
pop
xchg
cwde
cmp
pop
ror
pop
fdivr
cmp
cs
mov
dec
mov
clc
je
xor
jg
mov
repnz
cwde
xchg
fstp
dec
in
xchg
mov
(bad)
fimul
aas
adc
sbb
movs
sub
mov
jl
imul
jne
mov
ja
jbe
jb
aam
jno
movs
imul
je
loope
inc
js
ja
mov
int3
pusha
push
lock
sub
fisttp
je
pop
hlt
fstp
gs
dec
or
call
pop
pushf
jo
dec
call
or
pop
imul
(bad)
jp
sub
mov
jl
jno
out
iret
mov
or
mov
leave
leave
lock
jl
sbb
js
xchg
inc
add
inc
cld
jbe
(bad)
shl
mov
ret
sub
mov
pop
jb
loopne
clc
(bad)
jle
(bad)
test
dec
cmp
jns
repz
in
mov
adc
fdiv
scas
fnsave
jecxz
fs
imul
jne
jmp
push
(bad)
in
jo
out
adc
out
test
xor
jl
loope
dec
loopne
(bad)
popf
inc
stos
push
je
mov
hlt
fwait
pop
xchg
test
popf
mov
repnz
hlt
jmp
or
and
jo
lods
fdivr
dec
xchg
fsub
dec
iret
adc
popf
inc
mov
cs
push
xchg
sbb
cmp
loopne
in
imul
and
clc
cmp
cmps
jmp
jne
out
mov
in
jno
xchg
into
test
sbb
test
outs
rol
mov
pavgw
sti
ins
push
out
ficomp
mov
jb
les
mov
jae
mov
mov
lds
out
imul
arpl
jae
jge
jbe
std
mov
icebp
xor
jo
div
mov
lahf
rol
fdivr
xchg
mov
add
ss
je
xor
in
pop
push
test
pop
dec
(bad)
(bad)
aam
dec
dec
lds
loopne
jae
mov
js
and
fcomp
ins
outs
add
es
inc
pushf
mov
fstp
rcl
pop
inc
out
push
dec
fidiv
fistp
mov
fnstcw
mov
jo
dec
in
and
jmp
popf
pop
test
cmp
test
push
aad
jecxz
movs
fs
je
in
fs
mov
outs
shr
test
jbe
mov
je
pop
fimul
out
push
das
idiv
inc
lock
adc
inc
out
scas
out
jl
mov
pop
cmp
push
aam
pushf
or
lods
je
jb
jmp
hlt
pusha
in
jne
mov
pop
jbe
jmp
fnsave
je
and
cmp
adc
or
mov
mov
cld
js
lahf
xchg
jle
enter
je
nop
jne
mov
icebp
cmp
add
test
push
push
inc
pop
jmp
dec
jmp
out
in
jnp
dec
icebp
push
popf
xor
pop
hlt
sbb
mov
jae
jle
stc
rcr
in
outs
xchg
inc
sti
outs
in
push
jmp
jge
push
inc
add
xor
repnz
pusha
jne
xlat
jns
outs
pusha
(bad)
mov
jo
push
pop
ins
shl
outs
adc
sbb
cmc
aam
das
popa
or
jge
inc
cld
cs
add
inc
out
mov
sbb
in
aam
out
mov
test
xor
call
dec
in
out
mov
push
movs
xchg
pop
cmp
(bad)
sbb
out
jmp
mov
scas
sub
adc
sbb
mov
in
les
xchg
inc
pop
(bad)
rol
sub
enter
loope
adc
inc
in
mov
jb
lods
xchg
ja
repnz
mov
int
in
ror
mov
popf
mov
iret
push
int3
mov
mov
shl
xor
pop
push
outs
jecxz
popf
test
dec
mov
sbb
inc
pop
adc
dec
rcr
fdivr
nop
jo
js
je
mov
mov
outs
mov
push
(bad)
ror
loopne
pop
out
cmp
sbb
jbe
dec
ins
pop
mov
sbb
jae
add
pop
imul
add
push
mov
(bad)
fs
xlat
out
cmp
out
int
and
xchg
cmp
nop
cmc
sbb
xchg
jns
mov
jne
mov
mov
not
je
mov
push
adc
cmp
outs
sbb
jo
pop
fs
and
loopne
scas
xchg
mov
inc
push
fs
pop
enter
mov
iret
ins
int3
mov
ins
pop
into
jp
jno
ins
sti
mov
jb
ins
mov
jnp
int3
push
pop
aad
je
push
loopne
push
jo
add
test
enter
addr16
jne
(bad)
pop
je
pop
pushf
sub
xor
jne
mov
cmp
test
ins
adc
je
ror
into
push
cmp
dec
inc
call
fsubr
xor
cmp
push
pop
cmp
bound
call
lods
xlat
mov
pushf
dec
loop
or
pop
fwait
shl
cdq
mov
jge
inc
loopne
xchg
add
stos
enter
mov
stos
jmp
sub
in
arpl
sbb
jb
imul
movs
dec
pusha
mov
xchg
sub
cmps
xor
cwde
dec
xchg
movs
ins
into
fucomp
adc
jp
(bad)
shl
(bad)
cmc
ins
jne
lods
nop
cmp
jbe
je
leave
sbb
iret
cld
pusha
data16
xor
les
out
leave
sub
mov
mov
pop
fidiv
das
ins
popa
push
or
je
dec
je
ins
push
dec
pop
rcl
and
jl
mov
mov
(bad)
cli
rol
pop
mov
popf
test
xor
js
rcl
leave
mov
movs
fmul
loopne
das
out
cli
fsubr
xchg
push
jns
(bad)
push
mov
retf
jo
sar
stos
mov
sbb
arpl
mov
outs
retf
shl
bound
imul
test
test
lods
xchg
push
jle
cld
test
jbe
rcr
pop
clc
jl
cld
cld
outs
iret
addr16
jl
retf
(bad)
jae
dec
lds
retf
out
mov
push
je
arpl
sbb
sub
stos
(bad)
leave
and
xor
shl
rol
xchg
cmp
xor
pop
jmp
fs
(bad)
mov
mov
fdivr
cli
and
data16
mov
clc
xchg
in
jne
jne
inc
xor
cmp
pop
xchg
xor
arpl
popf
ins
ins
pop
mov
retf
push
test
mov
call
cld
jmp
sbb
ja
js
mov
shl
(bad)
cmps
cwde
imul
arpl
or
mov
iretw
fcmovu
jo
ins
mov
addr16
icebp
pop
cmp
dec
xchg
mov
xchg
mov
xor
mov
jle
js
std
dec
pop
cld
out
lods
data16
je
test
dec
ins
into
je
imul
pop
gs
xor
hlt
xor
xor
push
jle
adc
test
pop
sbb
dec
add
inc
out
pop
je
cld
ins
aad
hlt
cmp
in
in
adc
lods
shr
mov
(bad)
daa
addr16
cmp
jp
push
das
mov
pop
nop
and
mov
jp
pop
add
adc
fld
xor
add
pop
push
jl
inc
in
jmp
sub
icebp
cmp
push
inc
jae
jb
add
lea
aas
sbb
std
adc
push
push
shl
hlt
jno
(bad)
aam
lods
std
add
fs
mov
lock
dec
int3
xchg
xor
fsubr
test
dec
add
lock
repnz
nop
icebp
cs
aam
cmp
in
jns
outs
jmp
fsubr
je
jmp
loopne
adc
(bad)
fadd
into
pop
test
adc
sub
mov
push
sub
jge
out
mov
fdiv
pop
rol
repz
in
jne
pop
jl
push
sub
call
adc
addr16
cmp
repnz
fcom
jb
fld
mov
xchg
js
je
cs
jmp
jae
sbb
fwait
test
mov
inc
mov
push
sbb
and
stc
ds
fwait
in
dec
jecxz
je
dec
pushf
xchg
loopne
xchg
mov
dec
dec
das
push
mov
mov
pushf
fs
sbb
std
sub
pushf
fprem1
fisttp
loope
add
ficomp
mov
mov
ficomp
hlt
enter
inc
pop
adc
leave
or
sub
dec
fcomp
cmp
cmp
js
push
inc
jb
in
push
gs
add
movs
stos
in
mov
bound
jp
test
cmp
mov
jnp
ins
xor
push
and
jbe
idiv
ins
ds
and
jmp
jl
ss
sbb
adc
ja
jae
mov
cmp
and
pop
adc
adc
clc
bound
and
add
and
movs
mov
xor
dec
nop
add
xchg
xchg
jg
sub
cmp
cli
mov
clc
clc
dec
std
mov
iret
xchg
dec
sub
data16
cmp
xor
pop
ins
rol
jmp
xor
nop
leave
mov
mov
rol
cmp
mov
cmp
(bad)
cwde
mov
sbb
jae
pop
adc
pop
dec
pop
je
xor
call
xor
dec
pop
cmps
jp
bound
les
xor
push
dec
adc
adc
or
add
mov
es
fdivr
ret
in
ds
and
call
cmp
idiv
pop
in
fs
cmp
in
xor
or
(bad)
movs
outs
pop
es
pop
int3
xchg
mov
mov
inc
inc
mov
aam
lea
and
in
sbb
cld
pop
or
(bad)
rol
jg
mov
lds
and
xor
fstp
cwde
fistp
add
mov
mov
jo
cmp
mov
xor
jo
int
outs
adc
push
in
outs
or
repz
jp
(bad)
mov
dec
test
and
nop
pop
and
sahf
mov
pusha
mov
enter
push
sub
lock
in
pop
jp
je
cmp
cli
fmul
push
sbb
js
loop
pop
mov
mov
jmp
jle
repnz
dec
aad
add
mov
inc
add
cld
xchg
jne
in
outs
mov
test
mov
cmc
movs
xor
push
gs
sbb
stos
sbb
pop
sub
push
aam
ins
pop
or
hlt
push
pushf
push
add
mov
ret
pop
ja
les
mov
mov
(bad)
aam
les
mov
mov
gs
retf
mov
xchg
test
sbb
nop
push
jne
or
sti
jl
xor
mov
xchg
xchg
mov
fwait
cwde
push
lea
sbb
cli
lock
fidiv
xchg
mov
js
mov
add
fdivr
lock
pop
mov
shl
xlat
jae
or
dec
hlt
adc
out
fdiv
hlt
push
mov
test
pop
sahf
sar
cwde
clc
xchg
mov
hlt
pop
cmp
dec
dec
mov
mov
pop
lods
jbe
xor
push
pusha
jle
stos
imul
push
dec
xor
shl
mov
shl
pushf
je
scas
mov
mov
and
(bad)
(bad)
rol
lock
lea
xchg
lock
dec
mov
ret
test
retf
push
int
test
sub
in
gs
rol
hlt
cwde
pop
call
mov
mov
push
sub
cwde
xchg
inc
jmp
inc
nop
cmp
push
shl
call
jb
icebp
fsub
cmp
inc
dec
or
jne
or
jbe
ja
push
stos
pop
and
add
pop
test
not
inc
pop
mov
in
test
int3
add
cmp
and
xchg
ret
fbstp
cmp
pop
dec
xor
pop
int3
push
lods
ret
arpl
hlt
push
pop
add
push
stos
(bad)
jo
sahf
push
mov
jnp
mov
into
mov
rcl
je
pop
sbb
lds
xchg
cmp
test
sti
stos
fcomp
mov
push
test
movs
js
fcmovbe
std
mov
in
pop
jl
retf
(bad)
jo
cwde
xchg
sub
or
cmps
mov
dec
aad
mov
sub
sbb
mov
in
or
shl
add
mov
mov
xchg
fld
xchg
retf
mov
jecxz
mov
cs
js
out
dec
stos
push
sub
pop
in
adc
ret
push
popa
test
mov
jle
mov
add
lahf
mov
pusha
dec
jge
mov
sbb
pop
jnp
bound
popf
jb
or
icebp
sub
mov
mov
cmp
mov
fwait
jl
rol
xor
push
not
mov
rol
pop
cld
inc
mov
jl
ins
push
xchg
and
(bad)
aam
jo
xchg
nop
xchg
mov
into
add
add
xor
dec
mov
sub
sbb
movs
mov
xor
test
cld
pop
cmp
(bad)
cmps
cdq
mov
cmp
jp
sub
xor
out
imul
xor
and
adc
stos
pop
ret
adc
in
mov
adc
je
xchg
test
jo
adc
in
ret
cli
ror
mov
add
cmp
inc
jne
mov
ror
ret
jl
test
mov
nop
mov
xchg
enter
movd
jae
cli
dec
fst
loope
mov
cs
lock
or
mov
mov
sti
in
scas
push
sub
mov
sbb
mov
mov
push
hlt
jecxz
ret
leave
retf
add
out
ds
shr
pop
mov
push
mov
push
xchg
leave
sub
out
repnz
xor
xchg
cmp
cwde
add
cmp
ins
mov
je
mov
xchg
pop
popf
push
fs
adc
out
pop
mov
or
jbe
loope
add
enter
mov
mov
adc
(bad)
mov
dec
mov
lds
int
jp
cs
popf
cld
or
js
xor
or
xchg
push
mov
int3
push
mov
mov
fisttp
sbb
mov
(bad)
retf
xchg
cwde
xchg
scas
mov
js
mov
cmp
pop
adc
je
mov
jl
jmp
cmp
pop
push
jbe
mov
outs
in
retf
call
cld
in
sub
push
pop
jno
add
js
and
push
js
sbb
inc
mov
stos
jmp
cmp
sti
or
cdq
xchg
(bad)
cmc
mov
mov
adc
mov
(bad)
int3
jo
xor
test
(bad)
lock
retf
mov
pop
inc
add
outs
sub
inc
jg
in
xchg
cmp
int
mov
movs
xchg
test
mov
je
mov
call
push
test
xchg
in
int3
ret
fdivr
xor
into
push
pop
adc
and
pop
jl
and
ja
lea
enter
fdivr
mov
and
clc
icebp
sub
pop
xchg
test
mov
pop
fs
jmp
jle
loopne
adc
sahf
out
cmp
sti
inc
xchg
pop
jecxz
js
int
call
mov
adc
test
mov
mov
fadd
or
lea
cmp
inc
retf
inc
and
push
cli
sub
push
mov
mov
xchg
xchg
hlt
ins
stc
push
call
iret
popf
mov
sti
int3
xchg
jb
lods
mov
push
sub
xor
jge
fwait
test
mov
mov
xor
mov
loope
pop
push
push
test
lds
lods
xor
cmp
mov
adc
xor
and
and
aas
ja
xchg
mov
cmps
test
mov
mov
ins
xchg
ds
outs
xor
pusha
mov
dec
sbb
ds
push
push
in
ins
push
mov
enter
sbb
fbld
xchg
fdiv
mov
lea
xor
shl
test
rcr
jnp
inc
in
popf
(bad)
cmp
xchg
push
mov
jbe
test
in
lock
xor
mov
stos
lods
cmps
mov
and
enter
retf
jmp
jl
ret
dec
push
jecxz
pop
xchg
stc
jae
jbe
(bad)
sub
add
xor
aad
or
out
shr
inc
cld
xchg
call
mov
mov
imul
ins
or
dec
or
adc
fmul
cld
jno
ror
pop
(bad)
mov
js
mov
mov
repnz
ret
jne
lea
loopne
inc
pop
test
mov
mov
jmp
pop
out
push
(bad)
jo
jae
cmp
cmps
cmps
js
jae
push
xor
cdq
lahf
fmul
and
inc
xchg
nop
mov
fwait
cmp
xlat
stos
cdq
dec
mov
in
pop
jmp
pop
movs
leave
or
adc
jge
xor
jns
jne
fnstenv
sbb
fsubr
sub
fbld
pop
push
push
cmp
mov
xchg
popa
mov
jbe
xchg
js
out
jl
jo
xor
jmp
ret
das
pop
(bad)
mov
addr16
je
loope
push
mov
cmp
call
sbb
je
jmp
mov
ja
fmul
cld
jbe
in
sub
js
adc
or
pop
in
fs
fcomp
xchg
dec
mov
in
or
ins
xchg
nop
ja
movs
and
jmp
inc
lock
jae
call
(bad)
jp
nop
lds
ss
mov
or
push
jmp
sbb
sbb
gs
(bad)
push
or
mov
mov
(bad)
test
ja
and
inc
mov
mov
in
scas
mov
ret
(bad)
sar
jae
in
mov
lds
inc
frstor
xchg
test
xchg
sub
inc
inc
leave
(bad)
(bad)
sbb
pop
mov
fsub
das
adc
mov
xor
sub
jo
outs
call
fsubr
inc
test
fisubr
or
jo
mov
call
and
fwait
test
push
ins
mov
cmp
push
repz
push
push
loopne
jns
fist
test
sub
add
lds
std
test
pushf
jl
(bad)
jp
ins
bound
pop
sub
mov
in
addr16
call
mov
dec
xchg
call
je
dec
test
mov
xchg
test
sbb
outs
clc
movs
cld
sti
ins
call
arpl
fdiv
ins
pop
hlt
dec
mov
jl
js
cmc
jmp
rcl
mov
enter
iret
xchg
stos
pop
into
js
in
ret
outs
dec
or
lock
sbb
jae
pop
mov
jo
sub
ins
in
dec
bound
retf
fadd
clc
jb
(bad)
fsubr
test
lahf
xchg
je
mov
mov
stos
jo
mov
push
popa
cmc
js
push
aad
add
(bad)
pop
jl
rol
clc
pop
in
ds
mov
bound
jg
and
mov
jmp
ds
or
push
icebp
cmp
les
js
lock
pusha
les
pop
cld
ja
pop
int
std
cli
cmp
mov
out
fcmovnu
mov
div
movs
add
jmp
inc
mov
mov
inc
les
fdivr
aam
pop
pop
(bad)
fmul
or
ret
push
mov
les
adc
mov
pop
repz
mov
pop
xor
pop
js
js
mov
mov
outs
retf
imul
fild
jo
pop
clc
or
in
push
xor
adc
or
jnp
add
fsub
or
pop
inc
adc
xchg
hlt
cmp
pop
and
les
jecxz
movs
cmp
jns
loop
jo
fistp
rcr
jmp
fidivr
js
mov
push
jl
xchg
ret
cli
aam
xchg
and
paddusb
dec
xor
js
push
in
jne
push
jnp
bound
push
pop
adc
and
std
in
movs
dec
xor
aad
mov
es
ja
push
pop
mov
inc
or
jo
pop
add
js
jmp
std
mov
cmp
ins
icebp
dec
repz
mov
and
clc
jae
xchg
xor
cmp
inc
outs
sar
std
sub
sbb
inc
std
sbb
mov
xchg
add
lock
cmp
jp
aad
pop
arpl
in
(bad)
faddp
popa
cmp
sub
loop
inc
push
mov
pop
lods
mov
lock
and
pusha
ins
dec
arpl
add
repnz
(bad)
jmp
inc
div
in
sub
pop
cmp
or
shl
xchg
stos
xor
push
add
fwait
dec
neg
jns
or
je
(bad)
test
or
xchg
sti
repnz
jmp
std
or
fcomp
sbb
in
call
push
in
mov
cli
lock
test
xor
push
enterw
rcl
mov
jl
in
mov
inc
(bad)
xor
sub
dec
out
fdivr
xor
fisubr
stc
in
sub
clc
inc
inc
mov
in
pop
xor
out
pushf
xchg
lahf
test
sbb
in
cmp
pushf
cmp
loope
(bad)
push
imul
cmp
adc
gs
(bad)
pop
push
bsf
cld
sbb
jle
fcomp
xchg
jne
jnp
jl
mov
jl
mov
mov
mov
inc
in
sub
sub
clc
call
jnp
fs
add
inc
sub
test
cmp
movs
test
cmp
ret
mov
jmp
js
dec
arpl
in
loopne
je
out
imul
fs
jne
add
data16
ficomp
nop
xchg
inc
enter
xor
lahf
je
inc
and
fidiv
(bad)
sbb
test
mov
mov
out
clc
jbe
icebp
or
int3
jo
add
dec
mov
in
mov
add
in
mov
fwait
bnd
data16
(bad)
fcmovnbe
cmp
jp
jmp
push
pop
jne
sub
dec
test
jp
mov
mov
iret
ins
xor
push
retf
mov
enter
cmp
imul
clc
push
in
cmp
popa
or
inc
jle
lods
in
aam
xchg
push
mov
test
shl
jno
pop
jne
sar
retf
ins
je
int3
ins
pop
xlat
pop
push
out
sar
cmp
inc
adc
aaa
(bad)
stc
in
in
cwde
(bad)
mov
xor
int
das
stos
fs
fcom
out
gs
pop
rcr
adc
pop
retf
js
push
aam
sbb
(bad)
call
pusha
dec
repz
hlt
push
and
stos
xchg
mov
xchg
rcr
push
gs
ja
ss
imul
sbb
jno
cli
sbb
shl
xor
pushf
inc
je
(bad)
je
loope
jl
push
and
loop
sbb
sbb
fldenv
int
pop
ins
fcom
xor
push
stos
jae
mov
jp
movs
xor
and
ins
iret
test
in
shl
mov
jo
in
ins
and
je
sbb
lds
mov
loopne
xchg
leave
adc
ins
mov
jl
int
lds
adc
jns
dec
jne
fstp
xor
stc
fmul
pusha
loopne
rcl
dec
(bad)
addr16
pop
icebp
in
fcomp
stos
pushf
lods
push
(bad)
sub
sti
xor
ret
jmp
jns
sahf
xor
mov
jo
in
push
jae
pusha
test
lds
rol
sbb
push
and
lock
test
mov
pop
jg
(bad)
out
aam
mov
add
mov
shr
out
inc
xor
push
jae
cld
cs
mov
xlat
pusha
xchg
ficomp
cmp
inc
test
ds
pop
dec
jmp
lds
dec
adc
movs
pop
mov
(bad)
ins
push
jecxz
dec
(bad)
mov
jb
in
ins
mov
jae
ret
data16
pushf
push
and
aam
mov
mov
dec
cli
in
daa
jge
dec
fisubr
cmc
mov
pop
jnp
retf
pop
fs
les
leave
jbe
mov
adc
add
gs
pop
ins
loope
je
fsub
cld
outs
fdivr
idiv
mov
mov
jo
shl
fs
cld
retw
xchg
cwde
pushf
inc
ins
sub
repz
push
push
idiv
lea
mov
out
imul
or
xlat
mov
dec
mov
outs
iret
mov
lock
repnz
cmc
(bad)
fcom
jbe
push
fbld
jne
dec
or
in
sub
fcomp
mov
test
js
les
jo
jae
pop
jp
outs
pop
adc
dec
xor
mov
xchg
(bad)
ror
sub
shl
jge
arpl
xor
xchg
in
jo
jo
pop
ins
retf
sub
in
(bad)
mov
aam
ret
adc
cmp
sbb
ins
jno
std
hlt
outs
int3
imul
aad
push
push
pop
in
push
pop
daa
pop
push
jbe
adc
or
push
xchg
and
fs
in
fs
push
call
aas
dec
dec
pop
mov
mov
mov
xchg
adc
inc
xchg
dec
fcom
mov
fsubr
pop
ror
clc
inc
addr16
mov
xor
call
je
fsubr
pop
iret
push
or
fcomp
inc
pop
out
js
pop
(bad)
sti
movs
je
jns
ja
popf
les
fs
ret
cld
jae
mov
imul
rol
xchg
push
mov
in
ds
shl
mov
mov
jbe
(bad)
jmp
pop
loope
or
fistp
fcomp
pop
sbb
imul
sar
shr
dec
js
or
shr
jo
lahf
cld
hlt
outs
aam
push
and
inc
ja
in
mov
dec
and
sbb
push
jo
push
call
xor
call
xor
cdq
and
jns
jle
sub
jnp
rcr
cmps
mov
mov
xchg
lea
test
mov
pop
jo
fnstcw
pop
int
call
push
and
cmp
outs
dec
rcr
inc
dec
in
loopne
pop
pop
test
jmp
cmp
clc
jns
cmps
ins
sbb
les
in
xor
fstp
icebp
mov
in
ins
imul
jns
dec
in
js
imul
or
sbb
push
fidivr
in
aam
test
lods
sar
sar
mov
pop
fs
mov
hlt
ins
in
dec
fs
push
cld
nop
dec
or
stos
fdivr
test
sub
adc
out
je
xchg
push
imul
jp
inc
fs
pop
mov
jo
clc
stc
in
cmp
mov
call
ja
nop
in
sub
cs
sbb
mov
movs
sar
hlt
jne
gs
push
outs
xor
hlt
jmp
in
dec
cmc
js
adc
cli
movs
into
or
push
inc
add
mov
pushf
pop
pop
cli
mov
cmp
fisttp
fcomp
sar
xlat
nop
jge
push
repz
or
push
cmp
in
ins
jae
aaa
xor
loope
call
sbb
inc
(bad)
cmp
fsub
dec
leave
pop
cmp
cmp
sar
pop
ficomp
push
je
ret
jmp
loop
pop
mov
mov
pop
and
xchg
cwde
mov
pop
jmp
call
ror
ins
push
xchg
sub
push
cwde
and
gs
xchg
adc
test
jns
test
xor
cmp
push
(bad)
add
xlat
push
jb
in
push
cld
in
lods
idiv
mov
cmp
pop
or
(bad)
in
pop
in
icebp
dec
fs
jne
and
push
dec
cli
pusha
xor
into
aam
fist
jne
loope
ins
imul
pushf
push
cs
pop
enter
je
sar
pop
cmc
sbb
stc
sub
loopne
push
pop
cwde
jle
mov
push
adc
jl
addr16
lock
push
loop
pop
inc
ds
out
movs
(bad)
addr16
add
mov
jp
mov
jne
push
js
xor
clc
adc
es
ins
leave
pop
fs
sar
jp
push
dec
fcom
pop
xchg
js
pushf
jle
in
ror
mul
dec
test
inc
cmc
push
(bad)
std
enter
dec
jb
mov
xchg
sub
mov
jae
repz
test
jmp
lock
(bad)
adc
mov
repnz
cmp
loop
cmc
jbe
mov
sbb
aam
xchg
js
mov
inc
les
jmp
inc
out
dec
stc
jmp
jmp
cmp
pop
in
data16
gs
loop
je
dec
add
push
movs
out
in
shr
sahf
sbb
in
dec
dec
dec
jmp
add
cmps
hlt
fadd
jl
xchg
push
mov
(bad)
fs
inc
hlt
fistp
retf
(bad)
push
cwde
data16
adc
mov
sub
dec
test
fsub
inc
fbstp
cmp
dec
fmul
loop
call
push
jmp
test
in
js
(bad)
mov
test
sbb
xchg
js
js
mov
inc
inc
sub
jae
sbb
jb
(bad)
(bad)
ror
stc
jo
lods
rcl
dec
mov
in
pushf
xchg
cmp
call
mov
jl
cwde
pop
int3
mov
es
jecxz
fidiv
(bad)
pop
(bad)
lahf
push
ss
leave
jmp
push
push
and
cmp
jnp
mov
jo
les
aas
xor
mov
nop
mov
sbb
lods
lock
aas
in
out
jb
cld
add
jmp
outs
push
call
std
pop
ins
ror
push
iret
test
mov
and
cli
jp
mov
dec
fimul
in
sbb
xor
std
fsub
les
and
mov
push
pop
in
push
aam
and
cmp
enter
scas
imul
pop
fnstcw
loopne
push
and
xchg
loopne
je
xchg
xor
fdivr
ja
outs
test
fnstsw
xchg
je
push
and
jl
mov
ja
stos
sub
js
outs
jo
je
xor
icebp
jo
fidiv
sbb
jns
pushf
jbe
xchg
mov
xor
adc
vmwrite
jmp
loop
cmp
rcl
mov
ror
mov
aad
xor
jne
cmp
or
xchg
add
sub
(bad)
loope
outs
mov
dec
xor
sub
xchg
dec
mov
je
outs
or
bound
data16
popaw
arpl
mov
cld
prefetch
adc
imul
xchg
dec
jne
lods
sub
push
or
stos
loop
add
cmp
pop
inc
sub
jl
mov
ja
mov
int3
fsubr
push
pusha
xor
jno
pusha
xor
push
adc
test
shr
push
cmps
loopne
push
clc
dec
jb
loop
jae
aam
fdiv
jb
int
ja
shr
(bad)
pop
cmc
aam
pusha
jnp
(bad)
xor
(bad)
fmul
aam
aam
dec
or
test
jns
push
xor
les
gs
add
push
pop
sub
adc
push
je
ror
xchg
push
push
in
mov
je
mov
cmp
cmp
push
jno
fild
dec
ins
pop
adc
fwait
mov
js
leave
adc
cwde
xor
and
jbe
sub
aam
xor
daa
mov
fdivr
shr
retf
jbe
int
lods
test
add
jge
and
inc
cmp
stc
in
pop
dec
sti
xchg
jne
das
xlat
js
mov
dec
push
popa
push
jns
ss
std
pop
ficom
xchg
test
inc
or
lahf
ror
rcr
mov
mov
aam
mov
xchg
loopne
jg
mov
(bad)
jne
jle
sahf
shr
sahf
dec
sub
lods
sbb
add
cmp
out
mov
xor
mov
sbb
mov
call
enter
retf
rcl
mov
jns
fstp
inc
fimul
lock
pop
ret
dec
or
in
ins
jg
xor
sbb
lock
out
test
loopne
xchg
pop
bound
jp
xor
daa
adc
mov
adc
jle
xor
add
jne
(bad)
fstp
inc
iret
data16
sub
dec
jp
jne
fnstsw
pop
mov
sahf
pushf
shl
inc
or
in
enter
aad
mov
push
(bad)
fsubr
(bad)
fs
data16
dec
das
pop
pushf
mov
pop
mul
out
and
test
push
call
jne
ror
(bad)
cld
mov
loop
loopne
xor
iret
xchg
or
mov
mov
push
inc
or
and
add
mov
pop
jne
ret
std
inc
ins
push
mov
dec
hlt
push
dec
pop
mov
jmp
xor
fldcw
fdivr
mov
cmps
inc
mov
push
aam
dec
fisub
pop
fstp
xor
je
dec
fidivr
sti
or
adc
stos
jle
int
sub
mov
dec
push
cmp
popf
jno
ins
push
movs
out
rol
mov
es
leave
mov
pop
mov
push
out
(bad)
mov
xor
dec
adc
dec
xchg
cmp
retf
jl
jbe
fmul
enter
cmp
mov
call
enter
(bad)
aas
movs
add
mov
push
mov
test
dec
add
inc
xchg
or
pop
mov
jb
jg
or
les
mov
js
pop
jl
xor
fcomp
jnp
js
aam
sar
add
xchg
or
sar
xor
pop
jae
in
pusha
je
sub
push
xchg
or
adc
mov
mov
(bad)
pop
mov
cmc
mov
xchg
(bad)
xchg
xchg
xchg
movs
adc
in
dec
invd
sub
test
lahf
fisttp
mov
pop
enter
push
xchg
addr16
jl
sub
js
jg
adc
ror
inc
test
(bad)
in
lea
in
scas
ja
je
aam
jbe
icebp
aam
fmul
outs
jo
dec
sub
jb
loopne
ret
or
dec
jne
xchg
mov
fimul
xchg
js
movs
xchg
test
div
cli
(bad)
in
pop
mov
jne
jb
mov
jae
xchg
hlt
xchg
sbb
mov
leave
adc
enter
int3
lods
je
xchg
(bad)
iret
pop
push
cmc
pop
retf
jne
pop
movs
aam
add
jne
xor
int3
ins
imul
je
cld
ins
push
mov
mov
out
mov
shr
shl
retf
sub
inc
mov
xor
enter
xchg
push
loopne
mov
leave
mov
and
rol
iret
jne
fdivrp
loope
cld
and
in
xchg
js
arpl
pop
xor
cwde
cmp
ror
cwde
mov
adc
pushf
cmps
ins
(bad)
lock
prefetchw
ja
shr
aad
movs
sbb
xor
sbb
sbb
jne
push
dec
cld
retf
adc
xchg
push
mov
fdivr
aad
mov
mov
les
push
js
dec
test
(bad)
sti
push
test
inc
or
mov
push
dec
clc
cs
add
mov
jbe
jae
imul
in
and
ja
xor
mov
push
sbb
bound
and
les
add
ja
in
fist
mov
xor
int
push
je
push
sub
push
rol
loope
push
cwde
pop
adc
aad
ins
movs
jp
ins
xor
jns
loop
mov
movs
cmp
push
call
pop
xor
leave
shr
mov
stos
pop
sub
leave
in
jae
jmp
(bad)
clc
xchg
sub
cmp
out
scas
lahf
pushf
cmps
jbe
push
loope
mov
or
(bad)
in
mov
mov
pop
xchg
mov
or
and
add
retf
sbb
hlt
xor
stc
outs
ins
outs
dec
aam
(bad)
fsubr
xlat
int3
rep
xchg
out
push
movs
ins
xchg
cmps
(bad)
sbb
scas
push
cdq
fwait
(bad)
mov
scas
test
cmps
pop
test
jmp
xchg
jp
mov
add
mov
stos
jne
lods
cmp
in
ret
lahf
inc
xor
stos
push
stos
les
add
cmps
mov
mov
inc
xchg
loope
movs
pop
je
cmps
fs
xor
ret
dec
test
stos
call
cmp
(bad)
rol
retf
sub
push
lock
push
and
(bad)
arpl
jg
dec
cdq
sbb
push
jo
adc
push
or
scas
movs
popf
push
(bad)
in
retf
call
mov
mov
cmps
mov
cmps
cmp
sub
test
ret
sbb
mov
cmps
mov
mov
popf
outs
jo
jmp
pop
jecxz
sub
dec
xchg
lahf
inc
fs
ins
test
mov
stos
pop
lods
shrd
mov
and
dec
xor
lods
jmp
fwait
mov
mov
mov
dec
leave
fdivr
dec
dec
fidiv
daa
dec
xchg
fs
ins
pop
fs
cmp
add
xor
adc
pusha
lock
(bad)
pop
ret
ret
xchg
mov
fist
imul
pop
push
ins
outs
test
je
ins
jp
mov
outs
js
jg
sub
outs
gs
jae
jb
push
ret
movs
jecxz
addr16
dec
and
gs
jns
pop
or
gs
jge
ins
pop
push
adc
cld
ja
shl
dec
lahf
cmp
inc
sub
mov
in
std
loopne
mov
cmp
int
xor
enter
aad
push
aam
clc
or
or
cwde
fwait
mov
mov
inc
jp
inc
cmp
jle
inc
xor
xor
test
fwait
jmp
jb
lock
push
retf
pop
clc
dec
pop
pop
jmp
pop
and
cmp
sbb
jno
je
mov
test
in
xor
jnp
cmp
jno
mov
dec
loopne
push
jne
jmp
adc
call
and
pop
cmp
sar
je
push
inc
jb
popa
hlt
pop
outs
and
jns
in
jne
pop
pop
pop
js
xor
jnp
jae
outs
inc
jmp
daa
sti
aam
mov
mov
iret
inc
mov
out
mov
lock
cs
xor
mov
pop
js
dec
add
iret
aad
add
call
hlt
shl
dec
lods
push
push
add
cld
shr
push
dec
sbb
sub
test
popf
mov
dec
std
dec
mov
movs
jp
imul
addr16
pop
shl
pop
ins
imul
jo
add
into
mov
loopne
or
jbe
xor
fmul
sub
je
pop
je
pop
and
jp
cmp
pop
fs
cs
inc
xor
add
push
ins
loopne
and
lock
loopne
nop
mov
rcl
out
lods
dec
dec
dec
mov
pop
movs
add
push
xchg
pop
dec
add
dec
cmp
retf
(bad)
enter
mov
dec
(bad)
adc
jno
and
icebp
movs
mov
pop
in
pop
sub
test
jmp
jmp
jecxz
add
push
pusha
cmp
popf
push
push
aaa
rcr
inc
sub
fsubr
ja
sti
scas
xor
mov
(bad)
pmullw
adc
ds
outs
sbb
sar
sbb
cld
mov
das
dec
or
ins
add
mov
std
sbb
inc
not
popf
adc
cmp
or
mov
cmp
mov
nop
push
daa
loope
jb
add
jmp
out
pop
pushf
cmps
cli
sbb
enter
jp
adc
test
js
je
push
push
mov
cmp
inc
sbb
int3
cmc
jmp
int
jae
dec
rcr
dec
mov
fs
push
je
addr16
pop
cmp
inc
mov
inc
add
pop
mov
xchg
popa
pop
jp
inc
aas
and
sbb
scas
aaa
aaa
and
inc
cmp
sub
pop
cmp
push
add
loopne
mov
jo
mov
les
add
je
pop
int3
cli
pop
rcl
in
mov
mov
mov
std
mov
adc
cli
mov
sti
hlt
stos
mov
dec
movs
inc
pop
mov
dec
fsub
pop
(bad)
je
imul
dec
clc
inc
and
shr
jbe
mov
cdq
in
sub
dec
dec
movs
push
dec
cmovp
je
push
jmp
push
jne
(bad)
mov
pushf
adc
gs
jo
jnp
ins
sti
mov
push
dec
movs
push
ds
xor
je
pop
mov
lods
cwde
hlt
outs
ins
addr16
xor
jo
inc
cmp
pusha
loop
pop
push
or
sub
pop
push
dec
xchg
and
fmul
mov
call
mov
lods
fnsave
ret
xchg
dec
adc
xor
pushf
pop
mov
jns
add
jp
out
mov
xchg
pop
fs
push
leave
std
in
cs
js
xor
cld
movs
xor
jg
xor
(bad)
or
sbb
adc
cmp
sar
push
or
enter
js
lahf
popf
nop
sbb
push
inc
pop
mov
stos
xchg
cs
ins
push
push
pop
and
mov
pushf
dec
pop
in
out
fidiv
push
test
or
jp
and
pop
mov
or
pop
xchg
xor
cmp
jae
dec
push
int3
cmps
or
pop
xor
dec
pop
sbb
jecxz
pop
in
arpl
aam
ins
pop
xor
dec
xor
jo
bound
push
mov
adc
std
dec
inc
sbb
div
fidivr
xchg
ret
mov
mov
loopne
popf
or
ror
outs
int3
add
jae
sbb
or
and
jo
xor
cld
inc
sbb
je
xor
test
push
pushf
sbb
dec
std
ins
cmp
pop
sub
mov
xor
mov
pop
into
cld
js
das
sbb
sbb
cmps
sbb
jb
mov
loop
mov
lock
(bad)
leave
jns
stos
cmp
xchg
mov
out
jg
je
cmp
mov
(bad)
ds
div
sbb
arpl
fs
stos
nop
sbb
mov
(bad)
push
fdiv
adc
xor
and
cmps
mov
lock
out
test
jecxz
jp
or
js
fadd
je
push
dec
add
push
cmp
or
fnsave
cmp
inc
je
pop
sar
or
or
icebp
les
sub
scas
pop
sub
jns
mov
in
xor
cwde
je
xor
int3
sub
sbb
mov
dec
data16
cwde
sbb
mov
shl
test
cmp
sub
sbb
out
loop
sub
push
les
mov
stos
dec
inc
push
js
pushf
lahf
les
mul
sbb
push
aad
outs
sbb
and
mov
(bad)
les
xor
jl
imul
sbb
cmp
daa
jb
int3
pushf
jb
fcmove
js
mov
repnz
xor
leave
setl
lds
(bad)
les
add
push
retf
in
cmp
(bad)
out
pop
shl
jae
sar
dec
sbb
dec
test
addr16
sub
ret
jns
dec
iret
jp
inc
(bad)
mov
test
dec
mov
dec
mov
pop
sbb
fmul
and
in
lods
bound
rcr
in
cmp
imul
fs
std
aad
and
pop
dec
or
adc
nop
dec
ss
pop
jae
lods
jge
sbb
mov
je
push
addr16
popf
cmp
xchg
(bad)
cwde
xchg
hlt
call
mov
mov
psubusb
pop
adc
mov
mov
mov
fdivr
int3
and
repz
jae
add
xchg
sub
mov
xchg
and
std
lods
xor
adc
pop
mov
mov
sar
mov
pop
in
sbb
out
fsubr
in
cmp
shl
movs
mov
mov
lods
retf
enter
and
lds
cmp
stc
mov
cmp
or
mov
jb
not
mov
mov
mov
and
in
jo
ret
xor
push
je
shr
inc
int
xchg
enter
clc
cmp
imul
aaa
jl
jmp
sub
pop
jp
cli
push
jns
jae
mov
mov
pusha
jb
and
mov
and
push
inc
daa
fdiv
mov
fisttp
sbb
test
sub
enter
sbb
dec
xor
mov
sub
mov
push
jne
test
push
aaa
mov
in
je
jo
mov
les
cld
cmp
call
sub
cmps
mov
and
addr16
out
int3
ja
mov
mov
test
in
dec
retf
loope
lock
pop
fidivr
xor
lods
test
fdiv
push
pop
shl
out
les
pusha
push
dec
aam
pop
adc
pusha
add
push
shl
sub
adc
jne
aaa
std
loopne
dec
cmp
dec
js
je
xchg
(bad)
and
xor
cwde
sbb
and
push
dec
sub
push
mov
jp
sub
hlt
cmp
xchg
fprem1
(bad)
ficom
xchg
xlat
in
add
mov
lods
stos
cmp
pop
lods
pop
pop
test
jp
mov
fild
xor
lahf
into
ror
aam
daa
div
popa
fdivr
std
lods
cmp
test
enter
cmp
jo
or
pop
push
(bad)
bound
outs
clc
outs
dec
sbb
retf
test
lods
mov
mov
mov
pop
sti
fs
mov
lods
cmc
dec
cmp
repz
adc
cmps
pusha
jbe
clc
(bad)
and
scas
nop
lods
movs
cmp
push
mov
fs
retf
pusha
jmp
call
push
ror
ins
adc
outs
push
pop
inc
push
outs
jb
fiadd
push
xchg
ret
ja
sbb
jge
adc
mov
cld
sbb
aad
cwde
sbb
sbb
mov
xor
push
push
shl
xchg
adc
push
mov
jne
mov
jo
mov
cwde
cmp
xchg
xchg
dec
mov
sub
jns
mov
int3
fistp
pop
test
clc
mul
std
jne
sti
dec
add
fwait
push
mov
push
dec
test
inc
movs
xchg
in
cmp
dec
dec
(bad)
cmp
adc
and
and
lahf
es
lea
ins
adc
imul
xchg
push
je
xchg
outs
mov
stos
ficom
call
jp
mov
mov
in
xlat
fnstsw
aas
scas
xor
cwde
push
mov
sbb
dec
rcr
push
xlat
fdiv
clc
and
ror
and
mov
xchg
shl
cwde
dec
(bad)
pop
xchg
pop
xchg
pusha
push
(bad)
out
jne
mov
or
inc
fwait
cld
xor
xchg
mov
sub
adc
js
inc
sahf
test
dec
mov
in
cmps
cmp
enter
shl
jnp
shl
push
xchg
dec
pop
xor
imul
inc
cwde
and
pop
ror
sub
(bad)
sbb
stos
mov
lods
or
mov
int3
sbb
jo
inc
sar
je
js
pop
xor
addr16
clc
loop
lahf
mov
cmp
repnz
movs
in
sahf
test
arpl
sub
fist
mov
jns
sub
jns
cmp
jmp
sbb
or
mov
cmp
cli
ins
out
xor
inc
sub
mov
or
and
jne
xchg
sbb
mov
jge
bound
int3
jo
mov
scas
das
inc
mov
xor
js
inc
xchg
mov
cmp
sub
add
and
pop
mov
fs
xchg
jbe
cmp
jecxz
dec
jae
and
and
ret
pop
inc
dec
faddp
lahf
pop
sbb
out
push
add
pop
jecxz
pop
rol
sub
xor
and
push
sub
mov
add
ret
sti
test
xchg
jne
movs
call
xlat
adc
mov
movs
mov
imul
ds
mov
push
adc
nop
hlt
leave
outs
xchg
lock
or
call
test
mov
jo
add
push
js
sub
jl
cmp
add
xchg
rcr
enter
div
je
cmp
push
daa
je
es
dec
sub
cmps
bound
je
rcr
sbb
mov
cld
jle
in
sub
fcomp
sub
call
xchg
fbld
js
or
stc
aam
dec
adc
mov
or
pop
xor
add
or
mov
dec
fidiv
in
into
mov
jb
mov
js
push
jns
jl
and
popf
fcomp
fwait
xchg
dec
cwde
dec
jmp
clc
sbb
std
or
fisttp
xor
jns
in
clc
jae
mov
inc
test
add
cmp
adc
in
test
sbb
lock
or
jbe
and
ins
sbb
dec
sbb
pop
push
rol
fmul
sahf
call
imul
jnp
jb
add
pop
sbb
and
fimul
ja
sub
stc
xchg
das
jle
mov
aas
test
sbb
inc
mov
push
push
or
test
bound
sbb
mov
sti
pushf
pusha
repz
add
bound
(bad)
mov
or
scas
xchg
test
lahf
jb
fdivr
fdivr
adc
out
shl
(bad)
jae
ja
mov
cmps
xor
xchg
cmp
cmp
pop
dec
cmp
jbe
pop
aam
or
jae
cmps
jge
dec
fsub
repnz
aas
dec
movs
jne
repnz
or
adc
add
outs
in
std
aam
icebp
cld
pop
movs
out
mov
ret
jmp
xor
sbb
jo
pop
gs
mov
sub
aam
cmp
push
xor
mov
mov
pop
fild
les
retf
fiadd
jmp
jmp
or
dec
in
ds
sbb
dec
out
shl
je
jo
mov
icebp
xor
jns
sbb
xchg
cmc
sbb
mov
adc
sbb
and
jns
or
jp
repz
push
sbb
gs
mov
pushf
call
hlt
mov
test
pop
jl
push
enter
xor
push
mov
test
push
dec
not
dec
loopne
or
in
lods
add
and
pop
pop
clc
fs
sbb
je
dec
loopne
ds
data16
jnp
add
test
cld
push
pushf
or
jb
ss
je
ins
ins
ins
pop
arpl
inc
adc
clc
inc
cli
in
in
adc
or
adc
xor
jbe
xchg
mov
cld
xor
int3
jne
xor
xchg
push
out
add
(bad)
mov
and
add
jp
aas
sbb
mov
adc
lds
xor
fsubr
jne
dec
sub
inc
sbb
inc
dec
ins
jge
sub
hlt
dec
push
sbb
cmp
ret
aaa
nop
movs
pop
ins
jo
sahf
push
popf
mov
adc
or
fs
add
push
mov
nop
jp
in
adc
int3
xor
fs
mov
test
out
fmul
mov
mov
xor
loope
add
or
adc
test
ret
push
jnp
sub
sub
lea
lods
inc
daa
push
hlt
je
sub
je
aas
sahf
xor
pusha
jae
push
sbb
pop
in
and
(bad)
mov
ficom
leave
shl
jae
push
xor
xor
aad
mov
mov
mov
pushf
and
in
fcom
push
mov
pop
cwde
sub
xchg
dec
and
mov
mov
inc
add
dec
inc
(bad)
jo
dec
je
pop
dec
pop
call
mov
popf
adc
or
mov
pushw
aam
inc
or
js
lock
sti
ret
push
inc
xchg
call
mov
dec
hlt
xor
or
or
pop
movs
cmc
or
in
repnz
jnp
lods
adc
int3
adc
ds
fadd
test
pushf
shl
cmp
jmp
test
jno
jnp
push
cmp
mov
jbe
std
jae
sar
lock
sbb
push
jmp
in
ds
outs
es
jecxz
sub
out
mov
in
xor
out
jne
in
dec
aaa
xor
call
inc
aam
pop
in
dec
dec
inc
inc
ins
dec
out
je
inc
add
push
dec
dec
aam
imul
and
in
jge
jl
int3
push
std
and
popf
repnz
pusha
data16
inc
jp
cmp
test
xor
jo
adc
mov
sbb
es
jnp
(bad)
test
ins
sbb
jno
pop
mov
fs
adc
(bad)
fidiv
fsub
js
push
loopne
inc
xchg
enter
jb
jo
jmp
into
lods
pushf
test
pop
pop
add
sub
ret
imul
out
fcom
and
ds
ins
cmps
call
jp
(bad)
pop
push
sbb
fadd
outs
cld
daa
iret
(bad)
sub
cmp
test
pop
cmp
je
mov
inc
xor
enter
jp
dec
icebp
outs
repz
jne
pop
std
nop
imul
jg
mov
jge
inc
sub
fcomp
jae
or
sbb
and
jnp
cmp
ret
push
jns
call
pop
lock
ss
inc
pop
dec
sub
sub
lods
gs
jl
adc
in
loopne
adc
std
aad
hlt
clc
fdiv
jno
cmps
jmp
test
ja
movs
jo
mov
call
nop
arpl
mov
iret
or
sub
push
jae
pop
inc
inc
cmp
test
cs
and
scas
je
retf
push
out
mov
jl
int3
inc
retf
adc
jae
sar
std
je
cmp
xor
fucomp
fs
aam
sub
popf
(bad)
ds
in
js
inc
dec
pusha
jne
push
jge
ins
sub
push
cwde
mov
scas
mov
adc
clc
push
xor
addr16
inc
outs
adc
dec
cwde
push
daa
js
sbb
std
or
sbb
je
sub
test
loope
cmp
fdiv
xlat
jns
or
or
mov
in
pop
and
sub
enter
xchg
clc
add
pusha
mov
push
js
sub
or
ret
movs
lock
les
adc
jno
in
cmc
ja
push
inc
addr16
mov
mov
jns
icebp
jnp
push
lss
push
sub
mov
mov
mov
push
jnp
cmc
imul
adc
cld
pushw
daa
jns
sub
jns
sub
pop
aam
and
pusha
pop
and
int3
int3
dec
ss
fdivr
pusha
mov
dec
push
sti
mov
sub
mov
fwait
pop
xchg
mov
mov
push
fsub
push
mov
adc
clc
gs
sub
iret
mov
clc
xor
lods
pop
sbb
push
and
mov
mov
es
movs
push
sbb
out
xchg
xchg
js
cmps
bound
mov
pop
pop
push
into
inc
sbb
fild
ins
add
push
nop
push
frstor
jae
call
jns
cmp
mov
adc
sub
xor
jns
or
and
(bad)
(bad)
test
sbb
adc
cmp
add
fs
daa
leave
sub
les
cmp
push
dec
js
push
sub
sub
xchg
adc
lods
mov
mov
cdq
fwait
stc
inc
aas
inc
add
sub
cmp
add
in
fs
enter
and
xor
(bad)
call
pop
mov
sti
mov
mov
setne
pop
jl
or
test
jmp
int3
fdivr
lock
jb
iret
sbb
push
repz
and
adc
sbb
sbb
data16
add
aam
clc
sti
in
jo
add
sub
push
pop
sub
dec
push
sub
mov
je
sbb
fs
pop
push
sbb
jne
or
push
adc
fsub
pop
jl
xchg
pop
lock
je
dec
inc
out
cli
push
jl
lahf
nop
das
cmp
in
xchg
cld
in
cwde
push
push
sub
cmc
add
pop
xor
cld
jp
jecxz
xchg
clc
repnz
dec
push
mov
and
xchg
dec
ror
push
mov
cld
std
and
aad
mov
dec
test
adc
movs
in
push
push
mul
dec
inc
sub
mov
test
pop
in
iret
xor
das
jns
adc
lea
xor
pusha
jo
psrlw
fimul
mov
dec
js
add
jmp
adc
sbb
jnp
pop
sub
ins
mov
sub
call
push
and
fcom
push
or
repz
cmp
sub
sbb
call
sub
in
push
cmp
js
pop
pop
jbe
call
test
and
mov
xchg
mov
gs
pop
cwde
adc
and
add
or
std
xor
and
cs
push
and
adc
mov
add
(bad)
call
dec
jb
clc
aam
sti
icebp
std
inc
or
mov
jl
jmp
cs
and
pushf
in
jne
sar
sub
stos
jp
mov
jns
into
pop
xor
jb
lods
or
pop
data16
nop
jne
out
jp
add
cmp
loop
sbb
or
in
xor
sbb
and
nop
es
movs
sub
test
sub
je
and
imul
adc
jae
or
pop
cli
cli
cld
in
clc
mov
hlt
int3
test
pop
cmc
or
adc
pop
push
jnp
xor
fcomp
jo
inc
xchg
ror
mov
test
call
pusha
jo
es
sbb
inc
dec
push
pop
mov
and
and
sub
lock
int
sub
dec
adc
push
add
les
cli
outs
fmul
jbe
fcmovne
add
hlt
in
jne
int
sbb
and
add
mov
aam
(bad)
mov
stos
rol
sub
push
push
aaa
jne
sar
fimul
jae
sti
xchg
(bad)
xor
je
or
fs
jmp
daa
adc
sub
or
sub
test
mov
add
test
pop
mov
add
push
inc
and
xchg
push
and
push
cmovg
cmp
xchg
xchg
mov
mov
cmp
and
push
jne
and
out
sbb
les
adc
sub
xchg
sub
iret
in
ins
xor
(bad)
ret
aam
adc
or
mov
mov
mov
cli
(bad)
int
repz
repnz
jne
(bad)
adc
rol
loop
push
sub
jne
mov
in
jg
int3
loopne
outs
sub
mov
std
add
lea
ret
fsubr
cld
xchg
jno
or
sbb
rdmsr
push
cli
pusha
es
sub
js
push
adc
jp
or
lods
push
mov
fild
loop
add
sbb
inc
sbb
clc
mov
xor
jne
pop
adc
xchg
cmp
cdq
int3
jae
ss
jo
and
lock
sub
xor
ds
add
cmp
fs
cli
call
mov
push
fwait
stc
mov
adc
(bad)
mov
cmc
cmps
xchg
rcl
cmc
jp
in
xchg
jae
das
js
cmp
and
in
out
sbb
shl
in
repnz
sti
stc
aad
lock
sti
mov
in
pop
je
pop
js
sbb
pop
pop
push
sub
cs
test
and
sbb
sbb
sti
in
adc
sub
in
(bad)
push
out
mov
cli
shr
sub
shl
fmul
sbb
stos
mov
and
xchg
mov
cmp
jp
xor
clc
mov
pushf
cmp
aam
aaa
lds
sub
mov
movs
and
add
sub
add
or
mov
js
jo
sbb
xchg
enter
adc
hlt
xchg
sar
pop
jp
jl
and
inc
std
cmc
add
ds
mov
mov
add
ror
loop
fnstsw
in
mov
sub
nop
std
test
hlt
push
push
add
je
or
cmp
sbb
and
or
mov
adc
jmp
fs
xchg
and
lahf
call
pop
cmp
das
fdiv
pop
pusha
adc
mov
mov
fnstenv
xchg
xchg
mov
xchg
in
sub
cmp
das
cmp
bound
rcr
xor
sub
mov
xchg
sub
pop
sub
sbb
sbb
xchg
push
(bad)
leave
outs
cmp
or
mov
lock
and
mov
test
loopne
fstp
cwde
lock
xchg
jge
mov
mov
ins
into
lds
in
les
lock
dec
jae
or
aam
add
call
sbb
adc
ins
pop
push
and
cmc
and
jp
xor
pushf
les
inc
mov
jl
dec
xchg
test
jnp
jl
fmul
inc
push
push
add
je
cmp
jo
cmp
dec
sub
sub
mov
push
and
test
pop
push
mov
in
loope
(bad)
les
mov
mov
dec
xor
outs
mov
rol
dec
mov
or
adc
or
jne
sbb
lea
cmps
mov
inc
inc
repnz
leave
mov
mov
movs
ret
(bad)
cmc
mov
in
stc
pop
add
adc
call
and
jo
es
jp
push
and
push
mov
jl
xor
std
mov
inc
fcomp
out
push
jl
jp
icebp
pop
scas
div
jl
fwait
cld
dec
pop
xor
dec
push
aad
js
adc
cmp
mov
jl
je
test
add
xor
cld
jne
sti
call
fdivr
out
mov
fwait
lahf
out
push
aaa
jl
mov
or
xor
or
inc
xor
hlt
clc
cmps
mov
lods
imul
movs
xchg
push
xchg
jg
pop
sbb
je
cmp
cmc
dec
loopne
sub
add
ror
or
jo
and
sbb
jnp
and
sub
aaa
enter
xor
dec
and
jl
sar
jl
jnp
dec
lods
in
jl
xchg
cmp
cli
xor
cmp
jl
sub
push
mov
sbb
dec
sbb
movs
sbb
add
fdiv
js
lock
out
aad
push
mov
and
jl
stos
cmp
js
or
push
inc
jl
pushf
and
out
pop
icebp
rcl
mov
xchg
lods
call
mov
pop
movs
sbb
mov
xchg
in
cmc
lock
cli
(bad)
in
pop
push
or
sub
push
sub
mov
sar
sub
cmp
je
(bad)
pushf
push
pusha
push
stos
int3
sti
jl
repnz
sar
mov
pop
or
inc
fprem
xor
fadd
sub
jbe
push
adc
adc
dec
sbb
cmp
lock
out
fsub
data16
lds
(bad)
fcmovb
sub
mov
jl
jmp
fsubr
jbe
xchg
add
into
or
cs
xor
sbb
in
test
hlt
xchg
jo
jno
xchg
xor
fs
cmp
sub
test
sbb
mov
fs
or
and
inc
push
xor
jae
xor
ins
jbe
out
stc
add
or
mov
ds
fidiv
popa
pmulhw
mov
or
nop
sub
xchg
test
nop
addr16
pushf
sub
test
dec
cmp
adc
inc
and
sub
sbb
and
(bad)
jb
add
jno
add
or
xchg
imul
repz
cli
sbb
cli
test
test
call
cmp
(bad)
sar
cld
push
xor
mov
(bad)
fwait
test
jns
sub
clc
sub
sub
test
adc
in
jb
(bad)
mov
hlt
sbb
jne
fcomp
test
stc
mov
mov
cwde
push
adc
js
push
sub
jae
cs
xor
jo
and
jns
adc
xor
les
pop
or
mov
and
gs
mov
push
pop
in
jo
rcl
les
or
test
(bad)
mov
sti
mov
push
stc
jmp
aam
out
lock
mov
in
mov
je
out
lods
test
int3
dec
ret
cmp
add
or
jl
mov
mov
je
imul
retf
data16
xor
pop
popa
mov
xchg
xchg
and
lods
(bad)
dec
and
and
hlt
call
and
push
sub
jl
aaa
enter
mov
int3
je
push
pushf
ror
push
sub
mov
xor
mov
xor
loope
fadd
mov
dec
dec
add
sub
idiv
data16
stos
mov
lock
out
je
mov
outs
in
jmp
xlat
mov
(bad)
jo
movs
jne
mov
mov
mov
mov
dec
xchg
out
icebp
fld
jns
sub
mov
push
test
das
mov
lock
sbb
adc
arpl
add
sub
dec
or
jl
(bad)
ins
pusha
mov
cli
push
jbe
pop
adc
rcl
fdiv
cmps
ins
xor
cmp
and
jl
xor
fsubr
adc
mov
jo
sub
inc
inc
cli
les
push
and
cmc
movs
jge
or
mov
les
cld
dec
xchg
jge
lock
or
rol
ins
test
cwde
xor
mov
sbb
in
ja
add
and
push
stos
int
inc
test
mov
adc
inc
cmp
adc
cmp
imul
jmp
cmp
jb
adc
rcl
xor
cmc
sub
mov
mov
gs
ins
aas
add
inc
into
mov
jl
nop
xor
test
nop
dec
fdivr
add
inc
div
mov
xchg
cwde
jmp
dec
dec
shr
rcl
mov
mov
ins
int
dec
ret
aad
push
add
test
(bad)
leave
(bad)
call
cld
adc
test
ins
jne
sbb
js
pop
loopne
loope
fcomp
dec
sub
mov
mov
call
std
add
std
or
dec
loopne
pop
and
jb
aas
loope
and
jp
sub
cmp
es
js
sub
push
arpl
js
cwde
bnd
(bad)
nop
push
dec
jl
jl
xchg
jge
inc
js
test
adc
mov
in
fdivr
movs
sar
ffreep
jno
cmc
fist
into
push
loopne
jae
int3
pop
js
cdq
js
in
jl
xchg
jge
mov
jle
add
push
movs
mov
jl
jae
es
ins
in
ins
xor
cld
jmp
jne
cmp
icebp
and
dec
mov
ins
ins
icebp
loopne
je
xor
pusha
sahf
dec
and
add
aad
cli
nop
(bad)
adc
jmp
add
mov
push
and
jns
and
mov
data16
xor
mov
push
mov
cmp
ss
leave
jb
jl
pop
rcr
or
fnsave
mov
mov
stos
in
fdivr
cld
out
aam
int3
addr16
jns
mul
js
jmp
xor
mov
js
(bad)
ficom
xor
cwde
push
or
sar
inc
sub
jne
xchg
enter
add
and
in
jo
out
test
int3
or
outs
imul
movs
sar
pop
jl
jb
push
ja
push
sub
and
mov
jmp
out
inc
retf
sub
fcomp
scas
les
sub
jns
xor
push
addr16
cmp
cwde
jns
pop
cld
jbe
mov
push
popa
and
nop
fsubr
and
lods
mov
adc
xor
popf
push
hlt
jns
add
(bad)
cmp
js
cmp
mov
loopne
aam
shl
int
je
ror
xor
push
pop
mov
je
jge
(bad)
js
(bad)
movs
cmp
xor
ds
mov
outs
pop
push
aad
mov
push
inc
xor
jnp
je
push
push
adc
dec
push
jne
pop
dec
sub
jne
imul
and
in
mov
xor
inc
shr
data16
xchg
pushf
jns
lea
pop
sub
hlt
jns
test
dec
mov
pop
pop
sub
xor
xor
adc
cmc
add
movs
pushw
adc
fs
cmps
add
cmp
add
cmp
repnz
jl
clc
jmp
or
in
pop
fcmovb
fs
stos
js
mov
js
cmp
out
stos
aas
inc
nop
or
cmp
jmp
jb
test
in
mul
lea
mov
enter
jnp
pusha
push
push
pop
adc
pop
js
pop
dec
nop
push
cmc
push
sbb
xor
test
inc
jne
and
push
sbb
and
mov
push
ds
xor
dec
out
hlt
xchg
inc
std
jl
or
mov
outs
push
jb
push
pop
mov
add
mov
push
dec
push
xor
(bad)
pop
inc
shl
sub
mov
inc
adc
pusha
sbb
sub
or
int3
cld
push
add
test
fcmovbe
ficomp
into
je
shl
rol
jae
mov
push
test
pop
xchg
js
mov
jmp
jo
(bad)
nop
js
ja
movs
hlt
std
dec
div
int3
or
adc
js
pushf
popa
push
inc
in
or
enter
sub
dec
mov
vmwrite
retf
hlt
push
inc
sbb
stc
mov
out
gs
pop
push
add
dec
dec
fsubr
push
je
mov
cmp
je
mov
lock
(bad)
fidiv
xor
pop
js
je
xchg
dec
fcmovnu
fdiv
out
out
pushf
les
es
jo
sbb
pushf
adc
pop
daa
aam
and
xor
js
movups
adc
pushf
sub
dec
call
cmc
je
aad
test
fldcw
iret
rcr
inc
mov
js
xchg
xchg
das
and
adc
pop
mov
dec
add
xor
in
mov
loop
cmps
jbe
mov
xor
and
(bad)
jne
in
lods
pop
jne
add
clc
pop
jbe
push
push
imul
xchg
lea
je
mov
sub
mov
cmp
mov
xor
cmp
test
sbb
dec
mov
cwde
mov
outs
cmp
jl
pop
mov
push
xchg
dec
or
enter
and
ror
int3
push
sbb
mov
and
mov
lock
pop
add
or
sbb
push
cli
sub
cmc
sti
popf
in
inc
add
fmul
call
enter
scas
aam
pop
xchg
pop
xchg
adc
addr16
inc
inc
into
push
cld
adc
aas
(bad)
int3
out
jo
retf
mov
adc
mov
sti
in
mov
lods
nop
ins
mov
test
loop
fdiv
(bad)
cmc
cmp
add
adc
push
cmp
or
fistp
add
stos
push
pop
sbb
data16
mov
jo
mov
mov
inc
pop
lods
movs
rcl
mov
xor
push
sbb
mov
dec
dec
in
mov
test
stos
out
je
xor
jne
daa
sub
mov
mov
and
mov
push
adc
lods
sar
and
push
es
leave
jns
mov
cli
mov
add
mov
hlt
in
cmp
fmul
mov
ret
mov
int3
mov
xchg
cmp
mov
cmp
dec
push
jno
sti
je
call
mov
mov
mov
sub
(bad)
pop
ficom
sar
out
sbb
ins
adc
fs
sbb
lods
sbb
sub
or
stos
or
or
push
xor
lods
data16
cs
addr16
fstp
in
dec
mov
dec
dec
dec
inc
(bad)
sbb
repz
je
jb
sub
inc
(bad)
aad
cmp
jns
aaa
push
rcl
mov
fmulp
outs
jl
aam
jge
and
cmp
dec
das
pop
daa
adc
push
sub
or
pop
stc
and
jo
fbstp
push
call
fs
mov
mov
mov
(bad)
out
das
in
mov
js
push
mov
jle
outs
cmp
in
sub
hlt
push
ins
cmps
push
frndint
cmc
aam
jp
in
sbb
loope
loop
rcl
shr
xlat
ret
loope
push
sysret
cmp
add
jne
sbb
call
cmp
or
xor
and
lock
fwait
jle
pushf
jo
stos
fs
push
inc
inc
ss
call
dec
js
push
and
lahf
jecxz
ins
cdq
(bad)
jo
icebp
mov
(bad)
pushf
cmp
and
fs
das
xor
in
adc
stos
cmp
neg
sbb
sbb
ret
push
push
in
ror
repnz
sahf
aam
test
sub
and
or
dec
test
bound
sbb
sub
or
fdivr
shl
icebp
or
out
fwait
(bad)
sbb
jecxz
mov
test
xor
push
or
mov
nop
sbb
ins
add
fidiv
loope
aam
or
into
push
retf
pushf
or
xchg
(bad)
cli
in
movs
push
dec
xor
cmps
int
inc
and
in
out
or
push
dec
jnp
cmps
mov
lods
xchg
xchg
jnp
into
jae
sbb
xlat
test
adc
pop
sbb
add
sub
scas
dec
mov
add
mov
test
sbb
je
fcmovb
push
test
mov
pop
movs
and
test
sub
fs
imul
retf
stos
std
icebp
fwait
loopne
in
pop
les
push
fcmovne
nop
xor
jns
imul
std
cwde
cli
repz
or
mov
jb
lock
jno
out
fmul
pushf
jo
xor
clc
push
daa
hlt
or
std
or
in
fcom
rep
fcom
enter
cmc
xchg
or
jge
dec
inc
inc
or
jle
xor
addr16
push
push
push
mov
in
das
repz
push
cmp
and
mov
mov
sub
loop
push
sub
add
push
test
sub
movups
lock
call
(bad)
mov
push
sti
loopne
push
mov
jecxz
mov
pop
mov
sbb
(bad)
mov
sbb
pop
leave
je
sub
fcmovne
xor
cmp
ins
(bad)
clc
js
or
pushf
push
dec
or
jo
xchg
repnz
sbb
test
call
xor
mov
inc
jnp
or
lods
inc
adc
clc
or
in
xchg
xor
fxch
xchg
mov
cmps
mov
test
xor
pop
mov
pop
jbe
pusha
pop
mov
call
jo
ins
sar
ret
push
push
and
push
adc
int
ds
jne
inc
jl
out
addr16
int3
or
mov
ja
jecxz
mov
push
stc
cli
out
cmp
loop
je
enter
mov
lock
mov
mov
xchg
and
fcomp
mov
out
jmp
stc
rep
add
xor
mov
jne
pop
inc
(bad)
(bad)
std
xchg
add
out
adc
mov
div
xchg
pop
pop
and
clc
adc
sub
cmp
rcl
mov
cld
pushf
fwait
jle
jl
lods
cmps
shr
cmp
jne
sub
pushf
inc
pop
out
dec
fstp
xchg
jb
rcr
mov
inc
dec
les
xchg
xchg
jp
int3
popf
sahf
xor
add
ins
fsub
push
push
mov
or
mov
ffreep
fdivr
call
leave
dec
clc
add
aad
shl
ins
push
cli
retf
add
pop
fcomi
inc
or
or
mov
cmp
fbld
fnsave
pop
cmp
sub
mov
dec
fbstp
xor
and
iret
push
push
rcl
jecxz
cmp
ds
test
mov
and
in
push
cmp
addr16
dec
add
mov
mov
test
scas
inc
js
inc
aas
icebp
test
add
dec
rcl
pop
nop
adc
mov
mov
pop
(bad)
pusha
pop
dec
jns
cmp
daa
icebp
fdiv
je
mov
test
mov
cs
mov
dec
clc
xchg
movs
test
xchg
dec
jne
lahf
dec
popf
xchg
in
xchg
(bad)
adc
mov
lock
adc
popf
cmc
dec
fs
std
dec
(bad)
imul
add
push
call
lahf
mov
dec
movs
xchg
cmc
xchg
fdivr
sar
loope
dec
and
cmps
mov
pop
fsubr
or
mov
fild
cmp
mov
ja
dec
push
je
lods
xor
fcom
(bad)
leave
xor
fwait
mov
and
dec
dec
cli
push
test
mov
test
je
test
js
jbe
adc
or
push
sbb
push
adc
adc
ins
sbb
lahf
inc
jle
fs
les
hlt
xchg
adc
jbe
mov
xchg
lea
inc
inc
adc
sbb
call
push
ins
outs
inc
jg
and
ins
inc
ret
cmc
add
sub
jnp
xor
loopne
jg
(bad)
sub
or
jbe
and
call
add
sbb
test
call
(bad)
jmp
push
sub
ror
xor
je
jb
shr
adc
sub
cmps
xchg
test
mov
test
mov
jp
daa
inc
pushf
jnp
and
add
test
jne
push
les
fidivr
jbe
pop
cmp
pop
jmp
xchg
sbb
mov
adc
pop
dec
mov
test
test
js
mov
mov
adc
cmp
xor
aam
lea
rol
ins
push
pop
and
jecxz
or
(bad)
xchg
dec
fadd
add
push
loopne
and
fild
fs
lock
pop
lods
and
add
aad
loopne
ror
jle
and
jmp
jnp
jo
xchg
test
xor
push
into
(bad)
pushf
push
jbe
and
and
ret
push
cmp
stc
mov
xchg
rcr
sub
stos
je
scas
jl
(bad)
clc
xor
jmp
mov
mov
repnz
pop
js
or
add
test
xchg
scas
mov
in
mov
sub
mov
es
je
pop
or
movs
jg
aam
lahf
jp
js
mov
test
xchg
enter
cwde
test
rcr
add
push
nop
imul
rcl
in
and
icebp
sbb
lock
ins
loopne
clc
jns
jno
pop
aam
ret
fsubr
push
je
(bad)
xchg
inc
jl
and
sub
pop
fiadd
or
cmps
and
jb
test
aaa
cmp
das
sar
and
sahf
sbb
jl
lods
sbb
mov
push
(bad)
adc
push
lock
and
push
and
add
ins
jb
arpl
stc
daa
std
mov
ins
and
les
jle
or
out
add
or
jnp
dec
adc
clc
fcom
cmp
push
popa
mov
out
std
add
pop
jmp
(bad)
mov
shl
nop
inc
js
or
stos
sub
add
lods
bound
add
push
repz
repnz
cmp
jne
cdq
xor
sub
rcl
nop
data16
add
lock
jns
mov
js
addr16
icebp
add
test
ret
js
inc
jmp
div
xchg
xlat
jl
push
cmc
mov
test
pop
pop
inc
jo
jmp
test
ds
outs
fdivp
mov
sti
iret
jecxz
pushf
cli
or
jmp
xchg
xchg
fld
nop
cwde
xchg
cmp
cs
adc
dec
pop
xor
mov
add
sti
(bad)
in
lods
pushf
retf
fisub
movs
jb
and
pop
iret
hlt
fs
cmova
inc
js
adc
call
cwde
jae
cmp
into
popf
shl
cmp
shr
fild
sbb
xor
add
fisub
and
jmp
je
fdivr
adc
ins
les
add
add
out
add
jne
in
nop
loope
mov
test
pushf
add
sbb
dec
(bad)
je
pop
sbb
inc
sbb
adc
mov
sbb
sbb
iret
push
add
out
addr16
out
mov
sub
outs
pop
js
lds
ds
outs
in
mov
mov
(bad)
fdiv
fwait
cmp
stos
pop
cld
and
sub
cmp
scas
jnp
mov
and
sub
movs
add
pop
and
pop
jl
adc
stos
enter
jns
push
dec
movs
shl
fbld
pop
sar
adc
hlt
xchg
xchg
push
(bad)
nop
ja
in
test
test
vmwrite
into
ret
into
outs
xor
xlat
adc
ins
push
rcl
pop
pop
xchg
hlt
mov
inc
retf
movs
lods
call
fdivr
adc
jg
(bad)
sbb
icebp
push
inc
iret
sbb
cwde
ja
pop
ss
fcomip
add
ja
jmp
mov
mov
rcl
dec
mov
fs
push
in
(bad)
pop
retf
add
in
retf
fcom
pop
xor
jp
inc
jl
add
test
xchg
sub
mov
into
int3
sub
cmp
mov
test
cmc
mov
in
and
cwde
jne
fist
pushf
inc
mov
sbb
lods
ret
je
fs
mov
cs
xchg
mov
inc
pop
and
nop
xor
leave
push
jl
mov
sub
jl
xor
cld
cmp
das
les
es
push
cwde
ja
mov
mov
xor
mov
pop
xor
test
test
test
cmp
mov
sub
nop
rcr
adc
xor
(bad)
fdiv
jmp
ins
lahf
xor
std
fs
sub
adc
daa
retf
mov
(bad)
gs
daa
leave
jb
rol
je
cmp
adc
arpl
ins
jnp
outs
push
shr
fisub
push
mov
shr
cmps
mov
(bad)
mov
leave
mov
mov
xchg
ja
in
mov
mov
mov
scas
les
cmc
fs
lds
mov
mov
or
je
jns
js
shl
xchg
shr
add
or
jnp
shr
push
mov
inc
push
jnp
adc
pushf
jmp
nop
outs
(bad)
scas
clc
xlat
lock
jl
fcomp
mov
push
aam
imul
xor
js
(bad)
scas
push
mov
shr
pop
je
xor
cmp
jne
je
push
cmp
jl
add
adc
adc
fcmovu
cs
inc
sbb
hlt
push
int
les
sar
test
loopne
je
xor
js
fidiv
sbb
mov
int3
mov
test
retf
push
enter
into
ins
jae
(bad)
jge
test
or
scas
ret
inc
mov
pop
jne
scas
xchg
pop
mov
jmp
fbld
sbb
jo
mov
add
push
pop
sahf
in
add
xchg
or
and
inc
add
pop
stc
or
ja
(bad)
mov
nop
xlat
repnz
sub
test
in
jl
mov
dec
jl
js
xor
js
scas
retf
mov
mov
or
js
mov
test
add
push
pop
pop
sub
push
xchg
mov
mov
mov
fild
ds
out
cmp
sbb
mov
add
enter
jae
mul
addr16
fsub
jecxz
ja
ficom
je
aad
and
cmp
enter
ins
fidiv
lods
leave
push
fs
adc
test
rcl
mov
inc
xchg
jecxz
jmp
mov
fistp
and
imul
pusha
pushf
fcomp
test
ds
jne
cld
mov
(bad)
cwde
leave
mov
mov
rcr
mov
add
in
clc
mov
mov
mov
fistp
scas
retf
fmul
outs
xlat
fwait
stc
cmps
mov
mov
dec
push
push
ss
adc
jb
jl
xchg
jl
cmps
mov
push
mov
push
(bad)
loopne
pop
sub
mov
test
add
jns
cmc
sahf
ja
out
cdq
mov
(bad)
je
fst
js
shr
or
cwde
gs
xchg
mov
and
lock
mov
cmp
pop
xor
pop
ret
(bad)
pop
xor
rcl
push
out
adc
clc
inc
(bad)
stos
(bad)
pop
outs
mov
jae
or
mov
pop
and
add
movs
push
mov
(bad)
je
jp
shl
cmp
xlat
out
mov
mov
mov
mov
xor
ficom
sbb
jl
jp
imul
(bad)
loope
imul
and
or
mov
adc
mov
jmp
sbb
clc
lahf
fld
fdivr
cwde
shl
nop
push
mov
mov
cmp
jo
aam
dec
fucomip
js
mov
test
aad
mov
fst
pusha
in
cld
rcr
jns
imul
jl
or
sbb
das
cmps
dec
movs
sub
test
mov
retf
or
and
lock
pop
test
adc
std
pop
sbb
loopne
add
(bad)
cmp
into
lock
nop
or
fnsave
shl
pop
mov
and
fs
mov
dec
xchg
cmc
pop
fisttp
or
mov
arpl
ds
cmp
adc
dec
jl
xor
jp
jl
inc
and
(bad)
mov
aad
jae
int3
int3
pop
ds
test
js
adc
mov
ficom
cld
pop
fild
mov
in
movs
(bad)
call
in
nop
push
mov
ins
js
fdivrp
mov
lea
mov
fdiv
mov
cwde
aad
jnp
int
jne
dec
pop
fdivr
adc
stc
test
clc
(bad)
test
add
sub
mov
test
mov
clc
cmp
cli
adc
test
ds
outs
in
lods
sti
(bad)
mov
mov
(bad)
in
fcomp
loop
ins
ret
in
pop
loopne
fimul
(bad)
pusha
and
je
mov
jns
leave
call
pop
mov
fstp
mov
int
loopne
push
call
jo
xor
in
mov
fadd
or
push
mov
adc
(bad)
imul
mov
add
jl
retf
ret
cmp
push
sub
js
pop
jo
inc
lds
xchg
js
leave
jmp
in
fisub
push
call
push
mov
sub
push
sbb
cli
sbb
popa
cmp
in
sub
push
jl
mov
call
inc
pop
sub
repnz
or
imul
cmp
stc
cdq
cld
lock
fld
xor
(bad)
cwde
jmp
je
xor
js
push
pop
ss
int3
push
mov
add
mov
je
in
test
pop
ds
push
jl
cld
adc
jle
daa
mov
aam
cmpxchg
fidiv
std
sbb
sbb
or
fadd
sbb
(bad)
pop
cld
pushf
jl
int
adc
icebp
mov
js
jmp
jne
in
je
loope
nop
js
call
mov
js
xor
dec
add
xchg
je
js
loop
jge
test
jecxz
sbb
sub
push
hlt
jl
push
stos
jne
add
mov
ins
mov
jl
iret
jne
pop
mov
jnp
mov
(bad)
sar
pop
jl
cmp
leave
cmp
repnz
mov
ins
out
pop
scas
push
enter
push
in
xchg
je
jo
int
cdq
dec
jl
out
pop
ret
jecxz
test
loopne
and
and
xor
sbb
js
cdq
inc
dec
sub
jl
mov
movs
ja
outs
push
std
in
sbb
repnz
sbb
sbb
imul
js
(bad)
add
jl
cld
jge
idiv
mov
js
xchg
int
fdivr
retf
out
ins
cmp
cld
pusha
leave
jmp
xchg
pop
js
loop
sbb
loopne
mov
je
mov
add
pop
jl
inc
xor
pop
xor
and
inc
or
cld
sbb
in
test
fistp
push
cmc
sbb
jae
adc
sbb
fiadd
jl
clc
movs
jb
hlt
xchg
js
retf
repnz
xlat
nop
lock
fs
ins
(bad)
in
mov
ret
sub
mov
fisttp
fstp
addr16
shl
retf
xor
int3
add
xchg
js
ret
dec
jl
aad
jl
mul
cli
mov
hlt
sbb
pop
test
jl
pop
pop
int3
xlat
rcr
iret
js
je
test
ins
vmulsd
js
fisttp
mov
dec
imul
cmp
stos
retf
pop
lods
retf
mov
and
add
fnstenv
inc
js
js
cmp
daa
jmp
ret
int3
sub
cmp
in
and
test
out
fcomp
push
stos
jns
or
cli
js
and
aam
std
je
int
repnz
test
fadd
sbb
mov
jl
xor
push
lods
add
pop
test
test
into
cli
push
mov
sbb
cmp
and
or
out
jl
nop
in
gs
imul
or
xlat
test
ds
mov
outs
or
jp
add
lock
pushf
out
movs
nop
rcl
ins
mov
fldenv
je
shl
jl
scas
iret
js
cmps
lds
test
fs
idiv
mov
push
cli
or
cmp
adc
push
jle
pop
out
mov
sar
jbe
jb
jl
sub
sub
fcom
mov
or
int3
aam
mov
test
pop
nop
idiv
fdiv
test
jne
retf
stos
leave
mov
je
nop
dec
movs
test
mov
jo
dec
(bad)
fwait
sbb
stos
push
fmul
inc
(bad)
jl
mov
add
mov
lods
test
jl
fs
add
aad
neg
shl
loopne
clc
js
into
mov
call
mov
mov
jnp
into
jb
scas
retf
sbb
ret
push
mov
mov
popf
mov
mov
scas
cmps
popf
pusha
jo
xor
fs
jg
add
push
add
fild
pop
lahf
aas
ja
push
into
mov
out
in
jl
(bad)
jl
aad
jge
int3
icebp
fwait
inc
mov
test
mov
test
into
test
test
rcr
mov
xor
mov
mov
jo
stos
test
cmp
dec
pop
inc
mov
jo
jl
or
sahf
cmp
pop
movs
test
das
in
xorps
push
sbb
sbb
jecxz
add
mul
mov
cs
pop
mov
xchg
mov
mov
cwde
test
(bad)
je
movs
ret
pop
mov
mov
xchg
mov
mov
mov
fs
test
jo
lods
je
leave
sub
das
popf
xor
aam
jl
imul
aas
mov
hlt
cs
fcom
xor
or
xor
sub
jne
lock
jl
in
jp
out
mov
clc
mov
jns
into
jae
stos
push
nop
sbb
ret
xor
mov
fwait
mov
test
mov
pusha
(bad)
movs
jle
je
ins
aas
dec
cwde
push
cmps
mov
mov
jno
jl
out
push
lods
or
retf
xchg
call
je
bound
jmp
cld
retf
jae
idiv
(bad)
out
loope
mov
clc
pushf
lea
ror
xor
adc
add
xor
stos
pop
test
cmc
cmp
mov
jl
sahf
push
dec
xchg
jle
ja
sbb
mov
div
pop
and
scas
pusha
ds
mov
daa
sub
and
mov
jne
in
js
shl
mov
mov
pop
or
cmp
mov
jmp
mov
ins
xchg
scas
cmp
test
xchg
lods
pop
xchg
test
je
cmp
nop
dec
movs
mov
cld
test
iret
cdq
test
xlat
sub
stos
pop
(bad)
mov
gs
adc
pop
push
pushf
fucomi
(bad)
out
int3
mov
retf
aas
outs
mov
lahf
cli
ror
push
test
repnz
test
sbb
mov
adc
nop
jo
stos
je
sbb
test
inc
scas
int3
inc
dec
mov
xor
ret
ss
mov
es
das
iret
inc
sub
dec
xor
imul
or
shr
pushf
mov
cmps
fadd
lods
xchg
fisttp
xchg
hlt
pushf
mov
mov
mov
aad
stos
fbstp
je
lods
je
movs
in
js
mov
(bad)
mov
fs
xchg
sub
cmp
jne
inc
aas
or
fldenv
daa
pop
jl
xor
jbe
dec
jo
data16
js
or
int3
push
mov
outs
shl
js
les
cmp
mov
mov
mov
mov
scas
lahf
ins
iret
and
dec
xchg
cmps
fs
test
xchg
pop
rol
ins
or
adc
lahf
jne
out
cmps
jne
je
add
or
dec
into
sbb
xchg
jo
je
sbb
jne
enter
leave
mov
stos
mov
std
js
mov
test
cwde
ret
xchg
stos
test
jo
mov
pop
xor
test
pop
mov
call
sbb
pop
es
dec
jl
jl
mov
mov
inc
cmp
les
fsubr
jae
outs
in
ja
int3
xor
cmp
(bad)
sar
stos
mov
mov
in
js
lods
in
pushf
sub
cwde
xchg
ret
nop
mov
sbb
jmp
test
adc
test
imul
ficomp
add
je
stos
jle
in
pop
js
je
fdivr
xor
jno
ja
cmp
fdiv
or
aam
push
mov
dec
sahf
scas
test
fwait
test
je
lods
jp
scas
out
cwde
repz
cmp
in
mov
xor
(bad)
pushf
dec
push
inc
loop
cld
mov
in
xor
and
cwde
sbb
test
(bad)
adc
xchg
and
ins
ins
jns
pusha
cmc
jae
jo
inc
and
mov
adc
ja
sar
mov
mov
iret
mov
mov
mov
je
mov
leave
and
sub
dec
sub
add
je
jnp
mov
js
mov
and
fdiv
push
cwde
add
jp
mov
test
jl
or
xchg
mov
xor
(bad)
jg
test
ret
inc
and
jle
ins
aad
test
add
(bad)
push
inc
sub
jp
mov
sub
jg
add
inc
rcl
xor
mov
(bad)
mov
loope
scas
pop
mov
push
mov
push
ins
xor
ds
jl
jmp
movs
cmp
push
cmp
(bad)
jl
jg
or
sahf
mov
(bad)
shl
mov
xchg
jge
cdq
lods
xchg
dec
jl
jne
xchg
loopne
push
xchg
and
les
adc
fsub
inc
test
aas
rcr
inc
iret
mov
inc
jns
mov
add
lock
cmp
adc
es
jns
push
retf
jl
test
ror
jo
(bad)
mov
dec
jl
cli
mov
jle
das
mov
repnz
ret
dec
push
lods
das
xchg
daa
mov
fldenv
test
push
inc
dec
inc
ds
inc
mov
push
shl
pop
js
pusha
xor
jl
adc
and
in
push
in
out
push
lods
inc
loope
dec
rcr
mov
(bad)
je
jl
push
je
pusha
not
int
jne
movs
sbb
jmp
into
pop
or
cmps
data16
lock
shl
jae
cmp
sub
mov
pop
pop
ror
pop
inc
ror
nop
dec
mov
mov
pusha
add
jl
dec
pop
sbb
cmc
clc
mov
mov
sbb
cmc
inc
mov
pop
xchg
pop
or
js
rcl
mov
xchg
mov
xchg
sbb
cmp
jl
lods
js
mov
pushf
out
or
push
in
icebp
cld
into
adc
mov
jmp
xor
stos
push
cwde
jnp
test
cmp
test
mov
loopne
push
jno
outs
out
cld
int3
sti
jmp
push
aad
aaa
push
inc
sbb
add
dec
in
cmp
sahf
nop
add
fstp
fst
cmp
jle
cwde
jb
int3
push
inc
ds
sub
in
mov
push
icebp
mov
pop
inc
dec
push
xor
loope
(bad)
in
xchg
les
call
sbb
(bad)
jl
sub
out
xchg
inc
jl
and
outs
aam
mov
fucomi
mov
fcomp
scas
cmp
cli
iret
jp
inc
push
sub
adc
jo
xor
pop
ins
(bad)
and
mov
adc
ss
sub
nop
add
in
enter
(bad)
fiadd
xlat
in
test
jmp
psubusb
dec
daa
sub
adc
mov
inc
mov
daa
jl
jae
mov
pop
mov
jne
sbb
jnp
fsub
(bad)
call
daa
repz
test
jne
(bad)
in
test
sti
in
cld
(bad)
popf
cmp
jo
js
jmp
sbb
cmp
mov
or
mov
jl
xchg
jmp
ret
sub
add
fst
ja
out
scas
xchg
rep
mov
fs
xor
adc
dec
jae
jnp
ret
ss
enter
xor
jmp
pushf
mov
cld
and
push
cmp
or
cmp
lods
mov
dec
mov
int
stos
or
and
out
pushf
ficom
pop
popf
or
ins
jae
test
jns
adc
sbb
ja
xchg
or
mov
pop
out
adc
mov
ins
sbb
aaa
or
fdiv
shl
sar
mov
mov
sar
mov
push
cli
cmp
xor
lahf
stc
mov
adc
ficomp
ret
fld
scas
xchg
add
js
inc
mov
jmp
sbb
je
movs
lods
xor
aam
stos
xor
js
push
rcl
pop
jbe
rcr
cmp
push
push
add
test
xchg
ja
mov
nop
(bad)
mov
sub
(bad)
cld
or
fst
shr
cmps
clc
ins
in
je
repnz
call
(bad)
sbb
shl
jne
jno
sub
jp
or
sub
mov
jl
jo
pop
mov
and
mov
fs
pop
pop
add
retf
aad
aam
sub
mov
jmp
jg
mov
sbb
js
imul
into
call
mov
not
pop
in
add
push
iret
jae
jae
push
jge
ins
aad
mov
xchg
adc
mov
jl
retf
jb
js
dec
xor
pop
retf
test
jne
(bad)
pop
les
sbb
mov
pop
mov
dec
mov
std
sbb
jmp
dec
iret
jmp
out
idiv
sti
sbb
(bad)
pushf
popa
outs
inc
mov
pop
call
push
and
jecxz
mov
cmps
test
lods
xor
or
adc
push
mov
push
push
mov
mov
std
js
cwde
pop
jl
sbb
lods
dec
js
int
scas
and
je
mov
sub
in
test
fs
movs
je
cmps
jmp
loopne
dec
push
sub
jmp
mov
shl
daa
adc
or
jl
lock
dec
pop
lock
cwde
js
outs
retf
or
ret
stos
rcl
shl
jo
iret
test
inc
je
sar
je
(bad)
dec
mov
xchg
js
aad
mov
test
outs
fcom
cli
mov
call
adc
fldcw
push
and
dec
push
pop
cmps
ror
jl
and
adc
nop
xchg
test
cmp
or
ins
xor
mov
dec
ins
jnp
and
nop
mov
enter
push
shl
mov
cld
mov
loop
add
(bad)
and
xchg
je
js
retf
rcr
imul
ins
in
ds
sar
push
sbb
data16
jl
fstp
add
leave
push
jl
push
fucomi
jmp
out
int3
stos
into
xchg
dec
push
jp
mov
mov
fist
xor
lods
ret
nop
fs
retf
xor
sub
ror
cmp
fdivr
jo
fisttp
(bad)
je
mov
std
inc
pop
pop
cld
mov
mov
dec
lds
ret
mov
sub
pop
js
jns
jbe
rcr
gs
pop
xor
sub
adc
xor
mov
ret
sbb
add
jmp
add
sub
mov
mov
mov
fmul
push
jmp
dec
push
hlt
test
pop
loopne
(bad)
mov
in
inc
dec
sub
pop
repz
inc
mov
js
cdq
hlt
fdivr
in
add
movs
add
call
stc
cmp
jne
xlat
jp
stos
ret
mov
xchg
mov
test
nop
mov
jge
retf
mov
cmc
jo
js
mov
clc
push
jo
xchg
dec
js
out
je
les
jmp
xor
or
out
cmp
jo
push
jb
(bad)
call
cdq
cld
push
rol
sar
js
lahf
bound
pop
pop
bound
out
js
retf
mov
mov
in
mov
xchg
fcomp
mov
mov
mov
cmp
sub
(bad)
mov
loope
sbb
add
cmc
aam
cli
cmp
cld
pushf
jo
add
mov
pop
sbb
hlt
js
pusha
cmp
js
imul
xor
jl
dec
in
or
xchg
sub
call
lods
hlt
out
cli
aam
xchg
iret
pushf
fsubr
xor
xchg
mov
mov
cmp
test
aad
je
mov
fmul
call
ins
jo
loopne
(bad)
out
in
pop
(bad)
pop
call
or
js
or
xchg
sub
jmp
push
cmp
push
or
lods
movs
and
mov
adc
add
pop
mov
rcr
aam
mov
sub
xchg
frstor
clc
mov
mov
pop
xchg
pop
sbb
add
mov
mov
dec
mov
fcmovnu
ret
in
fs
call
stc
sahf
iret
pop
mov
pop
mov
loopne
cwde
xor
dec
shr
cld
push
(bad)
aam
mov
lahf
cs
sar
mov
jmp
lods
xchg
pop
push
mov
fcom
js
fidivr
je
sub
mov
cwde
or
loope
fs
retf
xchg
ror
(bad)
mov
je
add
stc
adc
iret
pop
cwde
jae
pop
and
data16
sub
jmp
jo
or
xor
jo
cld
mov
jmp
or
stos
in
xor
jl
mov
sbb
mov
mov
xchg
daa
cmp
fidiv
mov
or
shr
je
mov
mov
(bad)
push
call
xchg
daa
jmp
in
and
adc
iret
pop
cwde
push
sub
pop
jo
cmp
and
xchg
into
or
stos
mov
add
and
fdiv
fldenv
ins
loop
cdq
xchg
sbb
rcr
xor
out
test
aam
mul
je
je
je
test
ret
in
fwait
loopne
cwde
fadd
sbb
or
icebp
xor
jne
jmp
ja
(bad)
mov
sbb
push
outs
mov
mov
test
js
ja
and
fcomp
test
push
fld
loope
(bad)
leave
in
lahf
call
xchg
daa
in
adc
call
jmp
(bad)
into
js
test
jl
les
retf
data16
test
imul
push
mov
xchg
adc
call
mov
jp
repz
lds
xchg
cmp
stos
into
pop
jo
add
clc
int
lods
into
mov
les
cwde
push
sbb
test
ret
lods
vmovaps
fnstsw
daa
gs
sub
adc
jl
cmp
add
push
scas
push
hlt
sahf
test
push
xlat
jns
pop
shl
je
iret
in
inc
inc
je
sar
fsub
xchg
pushf
xchg
mov
add
js
jb
mov
ds
imul
cmp
pushf
aam
jmp
js
clc
sub
jl
clc
in
shl
or
js
(bad)
adc
mov
(bad)
in
and
cwde
rcl
clc
inc
dec
(bad)
cmps
js
fadd
stos
mov
adc
mov
sbb
mov
cmp
jmp
js
xchg
jl
ret
popf
jns
out
js
jl
mov
jl
jne
jb
in
scas
je
(bad)
popa
out
imul
loope
mov
add
out
js
xchg
rcr
dec
xchg
shl
or
fist
push
mov
push
fucom
ins
js
cmc
iret
inc
cmp
add
jae
std
and
push
mov
jl
int3
sbb
cs
cmc
and
fnstcw
jl
rcr
je
jl
mov
mov
jb
js
dec
aas
movs
dec
jae
in
mov
outs
add
int3
in
imul
icebp
je
js
lea
xchg
xor
adc
jl
retf
out
push
cwde
punpckhbw
pop
repz
adc
(bad)
sar
cmp
fadd
stos
hlt
into
cmp
jl
mov
or
lock
add
and
xor
aas
mov
(bad)
loop
sbb
pop
js
clc
outs
pop
jb
jl
je
cld
push
jns
(bad)
(bad)
int3
nop
xchg
(bad)
mov
xor
fst
dec
add
loop
je
pop
nop
call
out
daa
enter
ror
push
cmc
jne
pop
dec
sar
je
(bad)
cwde
jmp
test
jmp
jl
leave
test
add
in
dec
jl
ds
test
pop
xor
sub
js
cli
nop
enter
push
stc
adc
mov
pop
aad
sar
mov
into
icebp
and
cwde
adc
stos
mov
sub
out
xchg
sbb
call
js
pushf
jmp
lahf
popf
in
sbb
div
jl
cld
dec
lds
jl
data16
sbb
out
int3
mov
cmp
mov
paddsb
ins
push
fisubr
mov
test
mov
mov
je
stos
enter
int
scas
iret
clc
je
rol
mov
fst
shl
cmc
xchg
jno
cwde
ror
adc
shl
mov
push
ja
sbb
mov
and
jl
and
clc
retf
jge
aad
xor
jmp
lock
inc
pop
push
sar
jne
xor
fistp
idiv
cwde
movs
cmp
movs
sbb
je
ret
sub
retf
into
jne
mov
mov
jo
lea
in
pop
push
je
xor
xor
jne
pop
mov
sbb
scas
rcr
aam
and
xor
jl
jmp
mov
jge
mov
push
test
aaa
and
cmps
sub
mov
inc
pop
int3
and
adc
mov
mov
js
fs
jne
fs
mov
cli
loop
and
js
add
push
int3
mov
fild
out
jo
jge
out
pop
mov
jl
xor
push
mov
and
int
or
jl
shl
fcomp
pop
push
pop
adc
movs
mov
mov
sahf
sub
push
test
mov
js
mov
into
mov
sahf
xor
jo
dec
ins
dec
scas
int3
adc
ror
je
fsubr
(bad)
sar
jo
push
imul
fsubr
sbb
in
shl
nop
pop
shr
push
mov
jp
pop
dec
pop
mov
push
lods
inc
jecxz
inc
dec
ja
fistp
adc
mov
mov
adc
lods
out
cwde
stc
scas
test
and
mov
ins
mov
fwait
je
popf
pop
cwde
or
fs
(bad)
ins
jg
in
shl
fs
mov
je
(bad)
je
(bad)
jmp
sub
jmp
cwde
div
bswap
mov
(bad)
sub
inc
sbb
jg
mov
xchg
push
push
daa
stos
ror
or
cmc
jl
mov
xchg
sub
je
xchg
mov
cwde
mov
or
sub
jle
mov
jo
(bad)
sub
loopne
or
push
mov
test
fisubr
shl
mov
mov
xor
rcr
outs
jne
daa
jmp
and
xor
movs
jl
pop
sbb
pop
xchg
or
loope
movs
popf
imul
push
pop
sub
nop
mov
sbb
xchg
test
sub
sub
jmp
scas
pop
call
jne
mov
shl
stos
ret
lods
iret
xor
fsub
(bad)
pop
inc
shr
mov
rcl
test
cli
mov
add
adc
pusha
out
ins
in
hlt
xor
mov
lds
out
sbb
jl
jg
mov
adc
std
fcom
xchg
and
test
je
test
xchg
lods
jae
scas
pop
pusha
mov
je
xor
js
dec
je
std
lock
(bad)
aam
mov
push
shr
enter
js
loop
shl
push
idiv
fs
jmp
dec
jne
loopne
xchg
adc
sub
xchg
ins
loopne
cmp
push
xor
dec
sahf
mov
pushf
mov
jp
xchg
mov
je
scas
mov
push
sub
cdq
jmp
ins
popf
pusha
mov
(bad)
mov
iret
dec
dec
mov
clc
mov
mov
call
mov
daa
jmp
enter
pop
jl
sub
fisttp
jl
push
mov
enter
lods
mov
xchg
stc
js
jne
xchg
outs
pusha
imul
cwde
mov
pop
mov
mov
mov
test
xchg
push
ins
repz
loope
iret
pop
mov
add
(bad)
shl
push
sbb
add
jmp
inc
mov
pop
repnz
(bad)
fdiv
mov
repnz
pop
popf
je
mov
pop
js
nop
test
dec
add
in
clc
cdq
mov
pusha
push
mov
push
iret
xchg
push
mov
xor
enter
ret
frstor
pushf
cld
(bad)
mov
mov
mov
cmp
call
pop
pop
mov
cld
enter
jge
jae
or
js
mov
pop
js
lods
nop
push
test
test
fild
je
mov
pushf
mov
js
cld
lock
mov
in
and
into
sbb
sub
push
and
iret
pop
mov
cmps
xor
es
or
je
loopne
or
xor
icebp
cli
and
mov
nop
in
je
mov
jne
and
popa
lods
pop
xor
pushf
call
mov
mov
stos
iret
pop
sar
or
test
pop
sbb
add
leave
sub
imul
es
inc
inc
mov
jl
shr
sbb
push
sub
sbb
jne
movs
js
xchg
int3
fs
cmp
or
les
cmc
xchg
daa
idiv
xchg
cmc
push
test
jnp
movs
mov
jmp
shl
xor
aad
daa
fs
jns
push
add
push
mov
ins
push
int
pop
mov
xor
sub
inc
dec
add
aam
into
js
scas
fwait
lock
xchg
pop
cwde
xchg
mov
cmc
pop
dec
mov
cdq
and
cmp
mov
mov
hlt
cmp
ins
sbb
outs
ja
push
in
mov
push
and
aad
aad
jp
test
shr
call
scas
lods
xor
sbb
mov
ja
or
xlat
inc
int3
xor
and
add
shr
call
cmp
inc
xor
jne
xchg
jns
sub
pop
xchg
push
adc
xchg
add
jmp
sub
or
pop
clc
repnz
ins
jne
push
in
(bad)
sub
sub
sub
inc
xor
repnz
push
jl
push
xchg
xlat
xchg
daa
push
mov
fldenv
loopne
stc
jg
in
aad
cdq
inc
jl
push
(bad)
adc
adc
nop
sbb
xchg
movs
cmp
add
xchg
pop
pop
and
jl
daa
inc
fmul
jp
inc
push
xchg
pop
js
mov
(bad)
out
or
pop
cdq
rcl
push
fcmovbe
jg
pop
and
daa
dec
je
aad
xchg
jle
mov
xchg
push
enter
(bad)
in
stos
jg
js
xchg
add
in
mov
jo
inc
(bad)
mov
adc
jne
sbb
push
mov
iret
push
and
dec
lods
outs
jo
inc
add
ins
lahf
das
hlt
leave
jbe
dec
ins
xchg
imul
mov
js
loope
mov
fsub
cwde
or
add
cld
add
test
je
jne
fist
shl
rcr
dec
ficomp
imul
popa
out
push
iret
scas
inc
and
pushf
jg
jl
je
call
jl
stos
repz
jno
push
imul
add
lahf
ds
xchg
fs
lods
je
sbb
jo
jnp
dec
mov
lds
adc
daa
adc
sub
mov
lods
inc
xchg
outs
add
and
rcr
jle
ds
jne
aas
push
sub
mov
hlt
scas
stos
ret
sub
jnp
call
sar
inc
ds
aaa
outs
scas
leave
mov
popf
mov
add
push
xor
js
imul
cld
sbb
retf
add
stos
js
jl
jne
jg
in
in
xchg
rcr
iret
jne
cmps
mov
cld
mov
xchg
ds
xchg
inc
inc
jp
pop
push
fst
jg
sbb
mov
lods
sub
(bad)
out
push
xor
jmp
retf
mov
nop
cwde
ret
sar
je
mov
add
xchg
rol
pop
loopne
js
imul
xor
sbb
jl
mov
xchg
lods
jnp
test
stos
mov
adc
std
mov
inc
cld
fcom
out
leave
not
jp
dec
jl
test
cmps
fldl2e
je
cmp
rcl
jns
jmp
aam
sahf
es
pop
jmp
cmc
inc
mov
xchg
sub
jb
jno
movs
je
fucomip
int3
ja
gs
mov
nop
je
mov
nop
cmps
(bad)
jb
loop
ja
in
xchg
mov
stos
fdiv
mov
enter
fcomi
int3
icebp
inc
or
div
mov
push
pushf
loopne
sub
jge
pop
nop
fcmovb
pop
jb
xchg
dec
mov
inc
pop
aad
ret
jae
mov
cwde
mov
aas
mov
mov
mov
out
cmp
mov
repnz
in
sub
test
mov
mov
pop
pop
lock
dec
or
add
or
enter
sub
sub
ja
jne
jo
mov
inc
adc
mov
adc
cmp
scas
fistp
cli
test
out
xor
fs
sti
pushf
je
call
not
test
jne
loope
cli
jo
(bad)
sbb
pop
int
mov
inc
pop
pusha
shl
lock
movs
out
les
ins
loop
adc
pop
sub
test
in
mov
cmps
fdivr
loopne
and
nop
imul
or
pop
call
ins
jl
enter
mov
fdiv
je
sub
test
pop
int3
push
mov
fsub
and
ja
cmp
loop
jmp
mov
into
sbb
jp
sub
sbb
mov
fstp
test
outs
mov
pop
cwde
(bad)
std
cli
xchg
int
clc
mov
cmp
(bad)
mov
jbe
jmp
(bad)
mov
mov
pop
mov
je
hlt
cmp
sbb
add
in
dec
mov
out
in
fistp
icebp
js
je
into
mov
mov
and
fs
ins
test
mov
mov
jmp
nop
ret
push
pop
sar
pop
ret
(bad)
fistp
aad
cmp
fild
mov
adc
std
int3
adc
mov
bound
lahf
sar
jo
xlat
dec
push
adc
add
pusha
mov
es
xor
cmp
sbb
cmp
cli
dec
or
pushf
push
int
push
test
(bad)
mov
repz
test
mov
ffree
iret
stos
cmp
leave
add
jl
(bad)
sub
ins
mov
mov
pusha
leave
or
nop
aad
cmp
and
adc
inc
mov
dec
test
push
xor
sub
scas
sbb
in
sbb
ja
push
and
out
push
enter
mov
test
sub
nop
ins
out
int3
(bad)
and
or
test
pop
mov
xor
rcl
push
scas
retf
scas
fld
(bad)
mov
je
add
enter
rcl
dec
test
xor
fdivr
cli
and
lods
in
sub
test
jp
iret
adc
mov
adc
js
(bad)
or
jbe
or
add
adc
jnp
mov
and
and
inc
in
jne
pop
jne
sbb
pusha
pop
call
fsubr
adc
sahf
test
mov
and
jl
ds
mov
daa
lea
ret
fsubr
outs
rcr
push
mov
loopne
in
jne
ret
ds
jae
les
je
js
mov
fmul
fmul
rcr
les
and
pop
xor
jo
add
add
mov
test
push
les
and
mov
in
fwait
mov
add
xor
mov
jmp
mov
cld
int3
in
mov
xor
mov
pusha
push
outs
push
and
jg
push
les
(bad)
repz
sahf
push
xchg
sbb
jl
mov
cdq
mov
or
sub
les
lock
cmc
mov
mov
into
outs
movs
les
js
stos
loop
je
add
mov
and
cwde
(bad)
aaa
cwde
mov
dec
rcr
fwait
pushf
jo
(bad)
and
ins
push
inc
push
int
xor
cli
pusha
stos
lock
pop
inc
js
adc
or
cs
pop
in
lds
fwait
je
gs
mov
xchg
stos
add
sbb
sub
pop
dec
jo
push
pop
jbe
(bad)
fmul
jle
sbb
fadd
push
adc
dec
xchg
lods
in
ins
mov
pusha
fwait
imul
shr
xchg
sub
nop
mov
(bad)
shr
mov
cmps
xlat
xchg
js
int3
jp
fdivr
jmp
mov
add
aam
adc
(bad)
fldenv
std
nop
fild
movs
call
fsubr
lock
fstp
and
cmp
rcl
fdiv
jl
retf
imul
rcr
mov
sbb
retf
and
ins
ins
(bad)
or
ret
je
mov
shr
dec
mov
cmp
ins
push
popa
sub
mov
clc
into
xchg
add
inc
(bad)
xchg
push
pop
push
add
inc
or
lock
ds
sub
lods
loope
test
lods
mov
lock
fdiv
out
xor
movs
(bad)
sub
mov
sti
jp
les
xchg
rol
enter
mov
je
xor
cs
sub
(bad)
jbe
xlat
push
dec
int3
test
pusha
sub
lods
int3
aam
rcl
mov
aam
inc
rcl
sahf
xor
or
push
cmps
ins
pop
movs
dec
int3
and
cmc
sub
sbb
push
(bad)
adc
sbb
sti
(bad)
rol
xchg
xor
(bad)
aas
pop
add
or
xor
js
jbe
push
xchg
dec
aad
mov
fnstcw
nop
movs
lods
sub
push
mov
fmul
call
test
les
loopne
into
or
shr
dec
push
je
test
fs
test
add
dec
aad
enter
loopne
fdiv
loope
add
sub
xor
mov
pop
pop
mov
jo
add
pop
adc
or
push
retf
sbb
mov
push
sub
or
sahf
hlt
fs
leave
push
mov
cs
push
pop
scas
cmp
mov
sub
sbb
jne
jno
push
pop
jp
or
sub
jl
inc
mov
jnp
xlat
les
cmp
push
xor
pop
sbb
int
bnd
repnz
mov
cld
and
in
adc
fs
mov
(bad)
cmp
enter
test
xlat
and
aaa
sub
and
dec
cmp
and
jl
sbb
mov
ret
je
lock
mov
repnz
sbb
add
or
cld
int
pop
aam
mov
push
shr
sub
test
and
shl
dec
in
and
rol
mov
mov
fs
aad
ins
cvtpi2ps
mov
jns
shl
js
xchg
push
repnz
lods
mov
jbe
xor
ins
jnp
adc
dec
(bad)
call
lods
shr
les
sbb
mov
icebp
sbb
sbb
cmps
cli
mov
mov
mov
sbb
fcom
les
sbb
jb
daa
test
sub
mov
cmp
dec
xor
fldcw
push
fs
fdivr
loop
xor
mov
and
pop
inc
lock
lea
sysexit
push
fs
and
(bad)
cld
loop
push
lods
aam
hlt
dec
xlat
sub
aad
sbb
and
add
push
fild
adc
cld
adc
clc
pusha
jb
je
xchg
enter
stos
in
xlat
add
cli
jae
les
sub
mov
test
je
div
(bad)
jns
int3
clc
add
test
cld
fsubr
jmp
test
sub
cmp
fsubr
mov
ror
mov
out
mov
dec
xor
and
adc
in
fmul
xor
sub
mov
les
push
sar
xor
sub
je
push
fisubr
xor
sub
je
lds
mov
out
mov
aam
cmp
dec
and
jmp
test
cdq
psllq
imul
sbb
inc
push
hlt
cwde
cmp
sub
in
cmp
in
mov
sbb
adc
(bad)
es
in
lods
loop
cld
call
call
nop
jnp
loope
push
jne
xor
xor
sub
stc
sbb
shl
add
lods
mov
je
cmp
mov
icebp
xchg
dec
js
sbb
test
push
pop
xchg
xor
jbe
test
ss
in
scas
push
dec
and
into
pop
ja
aad
in
jo
or
sbb
mov
xchg
lods
frstor
jp
aaa
push
daa
lea
repz
fcomp
push
xor
mov
aam
ins
dec
pushf
ds
shl
mov
retf
xchg
push
aam
dec
shl
pushf
fnsave
mov
xor
add
ds
fnstenv
cmp
stc
dec
mov
jb
sub
popa
fcomp
jo
and
or
mov
xlat
sub
cmp
ret
jl
(bad)
movs
dec
js
cmps
mov
inc
cld
mov
sar
mov
or
xor
and
and
xor
je
pop
js
xor
aad
fcomp
sbb
xchg
ret
or
enter
fld
lods
fnstcw
ret
jne
addr16
or
xchg
xor
mov
xchg
inc
shl
pop
push
or
jo
aam
mov
mov
iret
sbb
cld
push
fwait
pop
add
xor
lock
sub
rcr
mov
push
sub
je
dec
mov
mov
cld
scas
dec
mov
xlat
and
mov
ins
push
movs
fs
or
inc
push
mov
sub
or
les
(bad)
jnp
sahf
rol
sbb
test
add
jmp
scas
clc
dec
stos
mov
cmp
out
inc
xor
out
in
sub
xor
(bad)
(bad)
shl
lock
iret
mov
rcr
push
mov
and
mov
std
add
pop
nop
fsub
xchg
in
dec
call
ins
push
pop
bound
int3
sar
mov
xor
shl
shl
push
aad
jl
(bad)
int3
fsubr
xor
jne
cmp
loopne
lods
mov
xor
ss
shl
test
jle
nop
adc
fisubr
mov
sbb
sub
cld
in
std
mov
mov
mov
dec
mov
int3
sub
mov
cli
test
and
push
aad
cmp
daa
(bad)
rcl
push
loopne
sbb
inc
mov
pop
cs
push
aam
inc
fld
into
push
out
cli
push
enter
mov
mov
jo
fiadd
dec
inc
adc
jmp
and
jne
loopne
imul
jecxz
xor
loopne
nop
mov
mov
cld
leave
sbb
aam
sbb
and
(bad)
into
popf
enter
fs
sub
aaa
stos
fs
lock
clc
cmp
cmc
in
pop
clc
int
pushf
in
mov
mov
push
sti
pushf
sbb
aam
lods
icebp
shr
xchg
leavew
or
enter
inc
xchg
mov
out
fs
je
loopne
xor
int3
(bad)
bnd
mov
and
cmp
mov
xor
cld
adc
(bad)
iret
es
rol
les
add
pop
movs
les
xor
jnp
iret
sbb
ret
push
fild
cmp
add
adc
call
in
in
inc
hlt
loopne
(bad)
xor
push
pop
lock
fistp
idiv
mov
ror
sub
aam
shr
xchg
mov
ret
mov
mov
pop
dec
fbld
xor
pushf
xor
add
pop
enter
dec
mov
dec
adc
xchg
mov
push
ror
dec
test
std
adc
ret
ror
stos
int3
sar
push
movs
lods
push
add
gs
xchg
mov
mov
inc
cmps
(bad)
xchg
cmp
ret
add
fwait
and
(bad)
int
pop
cmp
mov
jecxz
(bad)
mov
out
mov
popf
int3
sbb
sbb
aam
js
cmc
cli
js
xchg
xor
fist
imul
in
dec
xchg
leave
pushf
add
movs
xchg
jno
mov
dec
movs
fisub
cmc
and
pop
add
sbb
mov
or
pop
mov
pop
les
mov
or
mov
mov
push
xor
ins
mov
pop
scas
test
jge
adc
icebp
in
mov
int3
dec
mov
push
mov
cld
add
push
ret
adc
mov
cld
fdiv
fs
call
out
hlt
cli
adc
xor
sbb
cmp
iret
and
ret
std
cmp
push
lock
mov
cmc
retf
dec
mov
std
pop
mov
add
cmp
fdiv
in
lods
fild
sbb
dec
pop
(bad)
enter
push
enter
push
jmp
pop
inc
pushf
shl
clc
push
and
jne
jo
pop
mov
test
add
test
xchg
ret
adc
xchg
int3
jno
or
call
pop
and
xor
cmp
subps
aam
fs
iret
jg
jl
(bad)
into
or
es
jo
adc
sub
or
and
mov
cmc
or
inc
mov
xchg
es
dec
int
jnp
mov
pop
fst
pop
xchg
pop
ror
xchg
mov
pushf
xchg
rcr
sub
mov
test
jb
in
jb
into
movs
data16
jle
jmp
fcomi
xor
pop
arpl
xchg
sub
enter
and
jge
mov
call
sbb
ficomp
es
lds
inc
xchg
fmul
movs
ror
imul
jns
int3
and
push
xchg
leave
adc
lock
fisub
scas
or
lock
aam
retf
push
pop
pop
adc
(bad)
sbb
cmps
aad
ror
pop
pop
mov
or
lods
les
or
test
int3
sbb
aam
lock
fld
shl
je
(bad)
fmul
push
dec
mov
mov
adc
and
enter
mov
mov
mov
xchg
mov
icebp
mov
inc
push
push
das
sbb
rcl
hlt
xchg
mov
int3
sub
cwde
int
cmc
ret
aam
in
lock
push
clc
aam
sub
imul
cli
je
fstp
and
test
scas
cmc
mov
aam
(bad)
and
inc
mov
mov
pop
aam
or
in
cmp
xchg
shr
xchg
mov
int
pop
adc
call
mov
paddq
ret
pop
fmul
clc
int3
lea
xchg
xlat
daa
stos
loop
fsubr
das
mov
je
sbb
pop
leave
sub
or
adc
clc
test
push
xchg
jo
les
push
dec
and
pusha
sub
cmc
pushf
cmps
enter
out
sub
sti
push
cmp
mov
popf
neg
add
cmps
add
jl
(bad)
adc
mov
je
xor
sub
(bad)
in
clc
dec
xlat
sub
sbb
loopne
cmovl
sbb
inc
sub
pop
sahf
jns
int3
shl
mov
fadd
or
rcl
mov
fmul
iret
push
adc
push
jmp
into
sub
mov
sub
rcr
inc
retf
test
(bad)
and
mov
stos
clc
fdivr
and
mov
sbb
leave
cmp
adc
mov
xlat
and
add
int3
fdiv
int
movs
or
nop
push
pushf
test
jmp
(bad)
lock
mov
ret
das
iret
lods
clc
adc
int3
dec
les
mov
cs
push
adc
cwde
add
add
pop
dec
pop
push
mov
fbld
je
xor
mov
fstp
jl
retf
jo
or
add
mov
pop
mov
das
into
mov
in
cli
and
into
adc
dec
add
adc
hlt
xor
int
fcomp
mov
jmp
xor
adc
dec
xor
cld
push
mov
inc
ror
cmp
or
nop
xor
fdiv
out
xor
jl
pop
jne
push
(bad)
hlt
dec
call
jmp
dec
mov
push
les
jb
mov
dec
mov
and
xchg
ins
xor
push
mov
mov
into
push
pop
cwde
cwde
push
out
xor
cmp
inc
jecxz
lods
ret
xor
push
in
rol
sti
nop
adc
hlt
push
or
cld
(bad)
in
add
das
mov
fsubr
fsubr
and
sbb
fs
rcl
push
add
mov
push
leave
adc
in
mov
sbb
sbb
int
pushf
add
adc
test
test
lods
adc
cli
in
int3
add
les
jnp
leave
hlt
sahf
dec
test
in
enter
jno
pop
jne
jmp
rcr
xor
and
add
iret
adc
retf
fidivr
stc
mov
lods
jl
sti
xchg
lock
jp
das
sahf
jbe
mov
fidiv
sub
and
ds
daa
push
(bad)
rcl
push
xchg
mov
adc
fs
fsub
or
sbb
ror
or
xor
ret
gs
cwde
push
mov
jb
clc
nop
data16
adc
jmp
jp
fisub
mov
adc
stos
in
(bad)
shr
nop
clc
lock
jl
(bad)
jge
cli
cmp
mov
inc
imul
mov
mov
mov
lods
cld
cwde
mov
(bad)
push
dec
(bad)
jp
mov
std
nop
mov
fwait
sbb
jns
push
jb
into
mov
(bad)
test
pop
cdq
and
repnz
pop
clc
jns
add
adc
test
(bad)
sub
mov
sub
out
loopne
(bad)
stc
jl
int3
test
stos
mov
cmp
addr16
fcom
dec
adc
mov
mov
repnz
nop
dec
out
cmp
out
pop
mov
in
dec
mov
inc
mov
cmp
ret
mov
adc
adc
push
mov
cmps
call
xor
pop
fadd
pop
jno
leave
or
dec
or
and
rcl
pushf
mov
jne
and
mov
pop
or
f2xm1
cmp
call
lods
mov
xchg
aam
aad
push
adc
jp
fisub
sbb
not
loopne
mov
lods
adc
mov
jmp
repnz
sbb
cmps
inc
push
mov
and
int3
xor
dec
gs
or
adc
pop
mov
mov
or
std
leave
add
ret
and
or
aas
mov
mov
dec
mov
jbe
mov
cld
(bad)
sti
mov
pushf
fst
(bad)
mov
out
mov
dec
mov
add
mov
jl
neg
(bad)
sub
(bad)
push
fstp
sahf
sbb
test
cmp
mov
test
mov
test
je
icebp
xchg
mov
loopne
mov
retf
push
push
jb
push
int3
shl
(bad)
nop
jae
nop
push
hlt
je
pop
adc
int
call
aam
or
pop
fcomp
pop
pop
adc
ds
push
aad
mov
sub
jecxz
pushf
in
pop
mov
fcomp
enter
(bad)
jmp
hlt
ret
sbb
xchg
push
or
int
fs
mov
test
rcr
mov
sub
cmp
xchg
repnz
mov
add
sti
pushf
int3
jecxz
fisttp
cmps
call
sbb
add
retf
in
xor
mov
rcr
movs
in
nop
aam
sub
sbb
hlt
into
adc
xor
fs
repz
int3
ins
or
xor
push
pop
xor
iret
fcomp
jmp
push
add
fs
lods
enter
mov
mov
or
(bad)
lods
imul
lods
fistp
cmps
in
jne
and
shr
inc
cmc
pop
test
cld
jmp
int
xchg
cmp
mov
fs
sub
mov
ins
scas
ins
lods
into
ins
xchg
xor
mov
rol
push
movs
jecxz
cmps
and
pushf
in
mov
mov
fdiv
mov
(bad)
push
xor
loop
cli
les
mov
in
into
int3
sbb
movs
dec
(bad)
sar
in
iret
adc
sbb
jne
mov
cmp
enter
xor
push
js
mov
lods
mov
in
pusha
dec
mov
leave
or
jae
or
call
adc
std
jl
shl
shl
add
loop
push
cmp
push
xor
cli
xchg
(bad)
repz
int3
retf
cmc
dec
add
int
in
inc
scas
sbb
hlt
lods
retf
cmp
popf
sub
addr16
(bad)
pop
add
mov
ins
les
ret
sbb
ret
mov
hlt
stos
(bad)
cld
lock
mov
int
movs
pop
mov
aam
jno
add
int3
jbe
cmps
into
mov
lods
fldenv
sub
adc
cmp
lods
inc
sub
mov
pop
sti
jl
in
jb
int3
push
test
mov
lods
mov
pushf
mov
push
call
dec
fild
(bad)
cmc
jmp
mov
retf
xor
mov
les
inc
ret
lock
(bad)
fcomp
xor
in
xchg
imul
test
sub
mov
mov
jbe
rcl
mov
les
xor
clc
ins
call
mov
stos
mov
pop
in
(bad)
push
inc
daa
jnp
nop
mov
jne
mov
(bad)
aam
aam
lods
(bad)
mov
movs
ror
mov
mov
mov
xor
lods
push
lods
mov
ficomp
dec
cwde
ins
mov
pop
out
test
(bad)
test
add
and
mov
repz
stos
les
pop
in
push
jp
hlt
enter
jmp
ins
(bad)
(bad)
push
add
enter
repnz
mov
movs
hlt
mov
lds
jmp
jnp
xor
inc
(bad)
sbb
loope
sub
cmp
mov
and
out
lahf
sbb
mov
mov
mov
mov
push
mov
and
shr
fs
aam
mov
jp
mov
in
fsubp
in
sbb
push
mov
pop
inc
mov
pop
lea
mov
les
xchg
pop
push
push
mov
scas
sbb
lds
dec
jae
cmc
cmps
push
nop
sub
sbb
ins
mov
call
fwait
or
cld
test
mov
repz
push
push
jmp
add
int
(bad)
push
addr16
jo
ins
lds
and
sbb
test
mov
rol
test
jbe
ror
ins
scas
rcr
fsub
pushf
nop
sar
add
sub
(bad)
pop
add
push
mov
js
pop
cmp
scas
jbe
enter
jnp
mov
jno
mov
lock
mov
popf
fs
mov
sub
and
mov
xchg
iret
in
test
fisttp
jo
jmp
mov
lea
in
test
out
je
(bad)
cmp
mov
test
adc
jl
jae
push
push
retf
mov
cmp
in
or
add
aam
mov
sub
popf
imul
stos
cmp
mov
mov
mov
fdivr
mov
fisttp
sbb
lods
mov
ins
scas
jne
mov
and
mov
or
pop
mov
fs
mov
mov
fs
mov
dec
sbb
int3
mov
retf
sbb
cmp
ins
mov
je
enter
pusha
mov
mov
fiadd
jecxz
mov
mov
repz
jne
out
ja
ret
loopne
fild
mov
push
in
push
pop
das
add
jo
push
dec
int3
xor
(bad)
or
lods
mov
leave
clc
mov
addr16
mov
mov
ror
(bad)
stc
fdiv
adc
imul
enter
lods
mov
test
mov
test
pop
les
lods
in
mov
lea
cmp
lods
mov
pop
pop
pusha
fs
sub
mov
fdivr
mov
mov
les
int
jl
mov
les
shl
xor
dec
lds
int
mov
fmul
int3
imul
mov
aad
fstp
fdiv
iret
pop
push
int
mov
dec
mov
cli
in
rcr
(bad)
sar
xor
xor
(bad)
mov
int
or
cwde
popa
scas
mov
lods
mov
mov
mov
aam
lods
mov
dec
scas
gs
dec
xchg
mov
inc
in
mov
mov
xchg
nop
lods
imul
cmp
stos
add
dec
int3
lods
lods
jmp
mov
xor
cwde
mov
sahf
ret
mov
clc
dec
cli
ins
xchg
jbe
xor
sub
mov
call
int3
or
ror
scas
xlat
mov
loop
ins
mov
push
cld
ror
nop
shr
imul
xor
push
xor
add
sbb
and
(bad)
push
add
sbb
fs
retf
lds
mov
nop
fs
stos
mov
test
fmul
mov
lods
sub
jo
sub
mov
pusha
mov
pop
lods
ds
xor
fadd
push
mov
inc
ins
jb
mov
ins
ror
push
or
mov
xchg
pop
mov
cli
jl
stc
lock
jmp
cwde
call
in
mov
push
stos
pop
retf
test
xchg
(bad)
mov
xchg
cwde
jne
xor
lea
dec
xchg
cwde
outs
je
js
jge
arpl
(bad)
mov
call
cmps
mov
les
cld
test
pop
stos
(bad)
mov
cmp
les
pop
js
movs
lock
fdivr
movs
sub
test
test
arpl
fadd
stos
lods
xor
je
fs
test
jmp
cmp
popa
sbb
imul
sahf
xor
jle
cld
cmp
frstor
je
mov
rcl
shl
ret
movs
add
sti
fwait
ret
lahf
test
mov
nop
push
gs
call
pop
cmp
xor
test
jo
std
lea
mov
je
cmps
call
mov
sbb
int3
repnz
sub
(bad)
je
ins
sub
ins
mov
mov
sub
jo
test
push
sbb
sets
mov
ss
scas
mov
in
mov
in
ds
xor
xor
sub
lock
call
inc
mov
shl
mov
mov
or
mov
ss
xchg
pop
jnp
test
je
pop
jp
lods
cwde
jns
faddp
js
scas
lea
pop
je
fxch
mov
cmp
test
cli
iret
int3
pop
dec
jmp
jle
mov
gs
cdq
ins
sahf
cmc
test
mov
les
out
jo
call
push
sbb
lods
sbb
int3
ins
xor
test
mov
stos
and
icebp
dec
mov
imul
pop
fs
lahf
mov
pop
rcl
sahf
push
loopne
loop
sub
pop
mov
mov
jo
push
pop
dec
jae
leave
cli
stc
cmps
mov
fstp
test
mov
mov
cwde
mov
ficom
dec
pop
pushf
cmp
je
js
movs
mov
in
sahf
fwait
retf
movs
jo
xchg
fdivr
dec
dec
ss
push
push
cmp
test
mov
out
test
pushf
aam
jl
adc
into
sbb
pop
adc
inc
imul
neg
or
mov
mov
pop
or
xor
mov
push
les
xor
fdivr
pushf
cmps
push
mov
jmp
sahf
aam
cmp
xchg
call
nop
pop
xchg
fild
add
pop
popf
lods
dec
js
cwde
xchg
pop
push
dec
xchg
mov
mov
hlt
jle
imul
test
fcomp
xchg
js
mov
lods
enter
and
cmp
adc
fdiv
xchg
fsub
lock
pop
xchg
clc
in
xchg
fmul
xor
cmps
xchg
mov
test
mov
ret
xor
add
mov
addr16
xor
in
jmp
xchg
and
fcom
mov
movs
jg
int3
pushf
call
sub
mov
js
enter
mov
mov
sub
iret
sbb
jb
jo
in
push
lea
les
mov
shl
cwde
jl
sub
pop
add
je
jno
xchg
sbb
lock
hlt
pop
fdiv
sahf
movs
enter
test
std
sub
setbe
push
jne
push
xor
sbb
mov
enter
push
jb
data16
xor
daa
pushf
mov
std
cdq
xchg
pop
lods
call
lods
xchg
sub
and
hlt
inc
jl
jno
push
pop
cwde
jno
adc
and
add
lahf
dec
enter
pop
pop
add
mov
repnz
cwde
test
mov
mov
xchg
aam
cwde
xchg
jmp
jno
push
iret
fmul
and
add
xor
cmp
imul
call
push
push
mov
fidiv
or
push
std
dec
(bad)
or
xchg
jmp
mov
js
mov
call
je
cmp
xchg
ins
loop
in
cwde
fwait
xor
lods
test
cmp
cdq
fwait
loopne
push
sub
xchg
scas
jb
imul
mov
gs
sbb
or
mov
mov
hlt
gs
fwait
mov
in
mov
in
popf
xchg
shl
lahf
sbb
dec
mov
xor
cwde
test
add
push
pop
dec
rcr
loopne
nop
pushf
mov
enter
jle
cmp
push
pop
or
jb
ins
dec
cmp
add
imul
xchg
cdq
in
xchg
xchg
add
js
in
ins
enter
jo
xchg
cmp
nop
bnd
pop
sbb
add
or
repz
push
bound
movs
les
dec
pop
dec
pop
push
adc
in
pushf
out
xchg
adc
add
call
fidiv
pop
lods
test
in
xchg
loopne
push
retf
pop
shl
enter
test
test
cwde
pop
jp
pop
inc
cdq
add
je
call
push
aaa
cmp
pushf
out
repz
int3
ds
ret
fldcw
je
fmul
js
lods
push
lods
adc
rol
outs
div
jmp
pop
push
push
test
mov
test
ret
cmp
loop
pop
lods
shl
dec
mul
mul
shl
stos
lods
push
mov
push
xchg
mov
xchg
mov
xchg
jns
stos
jns
iret
lds
lock
loopne
sub
aam
enter
push
push
cwde
dec
test
mov
sub
les
ret
mov
lods
dec
aam
int3
jne
je
aam
pop
pop
add
cmp
xor
sbb
mov
in
sti
icebp
mov
adc
sub
push
cmp
jae
ins
loopne
jnp
cmps
inc
sub
pushf
iret
add
aas
(bad)
call
mov
pop
sti
je
data16
adc
add
sti
sub
int3
cmp
push
clc
or
and
rcr
pushf
cmp
add
or
out
jbe
jl
push
add
sub
or
jle
add
inc
test
mov
sub
or
shl
cld
pop
jnp
xchg
aas
mov
xor
rol
mov
sahf
cwde
(bad)
fistp
mov
scas
sub
clc
xor
mov
and
or
xchg
fs
in
mov
bound
lahf
cld
dec
cmps
xor
mov
lock
js
mov
jl
dec
inc
sub
add
pop
aam
fsub
jbe
pop
mov
or
rcl
in
js
int
das
ins
das
mov
clc
aas
repnz
je
out
inc
pushf
js
jne
rol
push
(bad)
dec
out
push
pop
js
push
fst
shl
ficom
jg
cmp
loope
push
jbe
pop
js
shl
out
mov
mov
cmps
dec
sub
xor
add
xlat
sub
call
sub
pop
cmps
ins
ret
lds
ins
and
shl
lods
sub
je
push
jl
sub
js
cwde
xor
enter
adc
jne
mov
js
pop
add
cli
dec
mov
xchg
mov
jg
rcl
out
fimul
push
xlat
pusha
cmc
jns
xor
jae
cmp
add
jg
jo
cmp
sub
sub
cdq
xchg
and
ins
mov
pop
and
and
movs
xchg
jl
adc
xor
ja
shl
rcl
jns
data16
fcom
fstp
call
mov
shl
in
js
les
jl
into
movs
lock
mov
je
lock
outs
mov
outs
xor
and
sbb
(bad)
jl
pop
sbb
push
imul
jl
adc
rcl
test
adc
pop
pop
cmp
sbb
jb
in
jp
cdq
xchg
daa
dec
jne
xchg
adc
fsubr
je
dec
daa
pop
les
mov
jo
mov
pushf
cs
pop
test
or
cmp
ins
sbb
jae
lock
jl
scas
ins
xor
pop
and
aaa
mov
cmp
scas
lock
mov
push
test
cmp
pusha
out
xor
pusha
adc
pop
or
jge
repz
inc
movs
xchg
jl
cmp
cwde
outs
cmp
ja
jp
mov
sbb
je
aam
cmps
movs
xchg
pop
inc
dec
xchg
xchg
addr16
pop
aaa
fs
mov
stc
sub
js
inc
inc
popf
pop
pop
mov
inc
jbe
int
jmp
and
das
jl
ins
enter
jmp
ja
shl
xlat
shr
es
inc
ja
iret
repz
sub
xchg
scas
cmp
mov
cmp
in
xor
cmp
dec
pop
icebp
cmp
inc
mov
fcomp
jne
or
jnp
arpl
imul
and
test
or
or
mov
xchg
mov
ins
or
mov
dec
add
pop
pop
jl
jo
fsubr
cmp
dec
fwait
into
fisttp
iret
mov
cmp
cmp
inc
and
je
jo
js
cld
test
jne
push
add
loope
nop
xchg
and
test
xchg
push
sub
dec
cmp
add
xor
push
pop
pop
jl
cmp
repz
dec
outs
fld
retf
ds
dec
retf
int
cmp
je
xor
fs
push
xor
mov
jl
cli
fwait
jg
loopne
jp
jl
pop
call
jne
je
jo
jns
sub
fisub
add
push
xchg
add
sahf
fdivr
inc
cld
or
inc
push
in
jl
inc
push
ins
ret
les
je
inc
js
cmp
je
xlat
lahf
cmc
push
pop
cld
ins
fistp
fwait
mov
out
jl
dec
fwait
aam
mov
call
jbe
jae
jns
pusha
test
nop
push
pop
enter
je
push
push
in
rcl
push
mov
ins
out
pop
les
je
repnz
pop
mov
inc
in
jl
aam
cld
(bad)
cmp
js
ds
pop
inc
rcl
ins
cmp
inc
jae
dec
sbb
lahf
fwait
(bad)
fadd
out
in
rdpmc
js
xor
pop
sti
mov
cmp
or
in
iret
int
and
add
ja
push
mov
daa
and
adc
fld
ret
mov
dec
jl
js
aas
nop
mov
jnp
(bad)
ret
js
ds
std
js
pop
pop
jl
add
rcr
xor
in
sub
pop
pop
imul
(bad)
in
shl
aam
jmp
movs
(bad)
and
jo
call
pop
rol
mov
and
mov
mov
add
jmp
(bad)
stc
dec
push
cmp
pushf
jne
pusha
lods
inc
hlt
js
inc
xchg
jne
mov
adc
out
outs
lds
jae
cld
push
fsubr
push
mov
pushf
mov
xchg
pop
test
lea
jmp
cmp
(bad)
js
je
cmp
jmp
add
xchg
cmps
add
(bad)
idiv
retf
inc
mov
cmp
and
add
jns
lods
movs
js
fcompp
mov
ret
out
mov
push
push
in
pop
or
out
jo
stc
je
dec
cs
or
hlt
movs
xchg
loopne
lea
in
push
push
jl
sub
jo
inc
or
xor
dec
inc
(bad)
sbb
mov
inc
int3
cmp
cmp
mov
inc
mov
pop
xlat
clc
ins
je
sub
or
or
xor
mov
push
dec
pop
jae
dec
pushf
jne
test
or
mov
cmc
loop
test
(bad)
xor
imul
enter
fisubr
hlt
out
mov
into
shr
or
test
push
pop
idiv
inc
push
adc
lock
(bad)
inc
test
mov
jbe
lds
dec
int3
dec
cmp
inc
pop
ins
fnsave
ss
cs
js
jns
cmp
data16
push
clc
jb
sbb
sub
les
jns
push
test
jbe
add
mov
jp
mov
or
jne
loope
test
inc
popf
add
stc
ins
fbstp
outs
cmp
shr
leave
mov
sub
dec
pusha
cmp
sysenter
dec
push
dec
pop
sub
push
pop
outs
test
(bad)
aaa
test
and
push
test
xor
sub
jno
imul
push
or
push
ja
add
jmp
jg
nop
fsubr
stos
mov
xor
cld
fcomp
mov
movs
cwde
or
test
jne
in
je
ds
ret
dec
retf
mov
sti
adc
icebp
pushf
aam
call
mov
pop
jl
in
je
push
mov
scas
mov
hlt
rcr
mov
pop
sbb
jb
lods
jo
inc
je
and
js
scas
ss
mov
ret
sbb
pop
movs
dec
cmp
sbb
pop
add
sbb
outs
jnp
push
and
in
jl
cmc
jge
jmp
mov
lods
not
scas
cmps
mov
repnz
std
lea
stc
jne
(bad)
mov
mov
mov
mov
xchg
sti
je
xchg
pop
je
je
(bad)
pop
cwde
jns
mov
aas
js
iret
fdivr
push
sub
mov
test
push
pop
mov
inc
jp
mov
sbb
mov
cmp
lods
add
and
xor
int3
or
neg
fs
pop
pop
push
je
xor
mov
pusha
js
(bad)
sub
xchg
clc
jmp
loope
retf
ret
je
fdivr
mov
mov
movs
sub
mov
adc
in
js
push
add
dec
cld
mov
jb
lods
mov
test
xchg
xchg
push
dec
mov
in
jl
in
push
push
mov
clc
push
std
xchg
sub
sub
jbe
mov
inc
lods
(bad)
cmp
je
or
lahf
icebp
aas
dec
jo
xor
adc
xor
and
fs
xor
je
cmp
test
je
or
out
js
rcr
iret
and
or
imul
popa
fdiv
cld
sti
ins
mov
dec
das
sub
movs
mov
dec
mov
mov
call
mov
jbe
fldcw
repz
or
mov
ret
and
test
lds
lods
xchg
xor
js
sub
push
js
sub
mov
mov
movs
mov
out
cmp
sbb
pop
mov
ds
and
add
in
jl
sbb
dec
bound
outs
jp
pop
xor
jnp
jl
js
or
jl
fdivr
inc
je
xor
lock
xor
inc
fild
xchg
mov
cs
les
scas
mov
mov
sub
xchg
je
cmps
ret
jae
call
ins
clc
or
mov
push
pop
mov
and
jo
ss
data16
pop
js
sub
and
dec
sbb
mov
xchg
ficomp
sbb
das
(bad)
cmc
xchg
cmp
dec
jl
sub
inc
sti
and
adc
jb
cmp
jbe
sbb
and
inc
xchg
xchg
(bad)
fnstcw
mov
lahf
mov
les
hlt
push
imul
in
out
in
adc
aam
int3
ja
or
gs
cwde
es
add
mov
adc
xor
dec
aas
or
push
out
xrelease
call
sub
out
sahf
outs
and
ins
adc
mov
sub
js
mov
bound
shl
int
and
pop
inc
adc
adc
mov
cli
js
jp
jbe
push
push
data16
sub
dec
je
push
addr16
pusha
jae
fadd
aam
fldcw
inc
dec
inc
cwde
ror
pop
shr
pop
into
inc
dec
pop
je
inc
sbb
push
adc
inc
js
int
mov
mov
in
dec
add
mov
int
cli
pop
out
mov
fbld
adc
and
mov
sub
xor
js
mov
sub
call
or
push
add
shl
push
sbb
or
repz
nop
outs
(bad)
cli
adc
clc
or
and
adc
inc
pop
addr16
js
jo
sbb
sbb
clc
xor
add
popa
jnp
gs
jo
xchg
dec
push
jns
lods
je
rcl
nop
and
jns
adc
pop
sub
jo
mov
push
dec
dec
fdivr
in
jmp
xchg
or
adc
mov
fs
(bad)
jnp
iret
add
pop
inc
push
xchg
jae
and
test
div
xchg
adc
js
call
popf
or
push
retf
pushf
adc
xor
add
loopne
ret
enter
hlt
add
fistp
in
xor
sub
xor
xor
std
push
or
dec
pop
add
aas
dec
jae
ins
js
cmp
imul
dec
js
test
or
jle
xor
push
dec
ins
outs
xchg
adc
sti
fild
gs
adc
int3
ins
pop
enter
scas
sbb
inc
mov
test
mov
les
clc
js
shr
pushf
nop
sub
rcr
shl
and
and
pushf
jno
sbb
fs
xor
ins
pcmpeqw
fld
adc
push
sbb
mov
mov
ret
mov
mov
ja
fcomp
mov
mov
and
jb
push
pop
lock
int3
enter
jl
out
in
jo
mul
or
jae
ret
xor
pusha
add
cmp
fxch
xor
mov
cld
jae
cmc
jge
mov
push
in
push
rcr
mov
mov
jl
and
mov
sub
scas
and
in
and
xor
mov
fidivr
or
mov
stos
sti
mov
mov
or
int3
and
sbb
movs
pop
jp
push
push
shl
jg
pushf
pop
jl
jne
ds
push
inc
iret
mov
sbb
rcl
xor
dec
pop
(bad)
stos
retf
fs
pushf
pusha
test
adc
in
jge
call
std
push
cmc
pop
ja
and
dec
dec
je
fild
jo
add
dec
aam
fs
sub
ins
lock
je
mov
test
cmp
pop
je
test
cmps
ins
jo
cmps
dec
ret
imul
sbb
test
jo
je
dec
push
pop
sub
retf
jae
jbe
out
loope
push
scas
ja
and
div
rol
in
pop
jno
aam
push
mov
icebp
and
pushf
xor
(bad)
mov
add
cwde
mov
ds
and
pop
jb
out
or
push
cli
pop
rcl
ds
outs
loope
aam
repnz
movs
call
lea
nop
out
fdiv
xor
mov
lahf
pop
dec
ret
sbb
pushf
add
push
mov
pop
popf
in
cs
jo
cdq
sbb
in
in
jl
push
sbb
add
ja
or
js
mov
or
in
jno
in
outs
jl
dec
bound
jmp
sub
pushf
aad
mov
sbb
mov
jne
(bad)
std
pusha
rcr
repnz
adc
and
add
pop
out
mov
lods
nop
popa
dec
push
pop
pushf
pop
js
outs
scas
std
xor
xchg
or
mov
popf
add
fs
mov
sar
push
pop
add
pop
ins
jo
dec
test
xor
adc
ja
shl
mov
sub
xchg
mov
pop
popa
cld
pop
push
adc
ds
pop
cs
sbb
jp
jns
cmp
scas
mov
enter
push
int3
sbb
push
data16
dec
jo
sbb
in
or
lock
pusha
call
das
out
push
push
in
jb
test
jae
mov
test
call
test
sahf
in
push
dec
mov
fmul
ror
add
and
cld
pop
xor
dec
test
push
push
gs
push
imul
je
js
out
xchg
jmp
jns
adc
push
mov
dec
jp
retf
xor
cmp
inc
add
js
jns
jb
add
sbb
in
xor
in
dec
popa
popf
jecxz
cmp
mov
xor
mov
sub
shl
mov
test
shl
sbb
je
cs
push
add
retf
test
mov
dec
outs
sub
jb
js
inc
test
js
leave
mov
lods
sbb
pop
jae
das
ja
add
or
sub
sub
cmp
aas
inc
das
cld
jae
imul
xchg
inc
repz
xchg
int3
out
mov
mov
mov
mov
mov
mov
xchg
mov
hlt
pop
cmp
daa
pop
dec
push
les
jnp
cwde
(bad)
ficomp
aam
cmp
sub
cld
rol
or
and
nop
cld
dec
jecxz
inc
shl
dec
jo
adc
and
pop
icebp
jmp
mov
js
popf
mov
test
movs
push
hlt
test
jns
ror
outs
mov
inc
inc
in
inc
add
mov
ret
fstp
pushf
pop
(bad)
mov
je
xchg
pop
jnp
sbb
jno
jp
mov
sub
xchg
fild
adc
test
test
enter
das
pop
dec
das
clc
push
imul
fdiv
add
movs
mov
mov
les
cli
or
fnstcw
popf
mov
and
sbb
je
mov
cmc
cwde
test
pop
sbb
pop
or
jge
call
sbb
sub
sbb
inc
dec
mov
sub
mov
sbb
push
sbb
je
fmul
test
jo
dec
mov
fdivr
(bad)
nop
movs
fldcw
ins
xor
out
imul
dec
je
int3
sub
dec
push
stc
je
jp
ret
in
mov
(bad)
and
shl
mov
xchg
int3
mov
ja
xlat
aad
fsubr
out
ins
ror
sub
add
mov
in
cwde
gs
stc
clc
sub
mov
inc
push
dec
ja
adc
mov
aam
sbb
push
cmps
lods
pushf
jl
mov
push
push
push
jbe
sar
in
hlt
pop
aaa
and
pop
pop
pop
arpl
ins
jb
inc
jae
jo
sub
outs
cmp
je
xlat
js
ins
jmp
mov
cmp
ja
rcl
dec
in
mov
out
cmc
test
ds
jns
or
jl
mov
xor
mov
or
inc
out
mov
push
mov
rcr
aam
jne
pop
std
inc
jmp
sbb
sub
sub
fs
hlt
lods
sub
push
mov
pop
cmp
outs
inc
lods
mov
mov
xor
push
je
in
and
les
popa
jmp
or
jmp
aas
mov
pop
mov
and
mov
je
rcr
push
cwde
sub
rcr
fstp
add
xor
xor
pop
inc
add
pop
test
cli
nop
mov
adc
movs
mov
sbb
(bad)
sbb
or
mov
sahf
je
or
sti
cmp
mov
jbe
loopne
push
div
movs
ror
stos
in
mov
fsub
jp
out
cmp
push
sub
je
loope
imul
lock
jmp
jo
fwait
rol
add
mov
fnstcw
jnp
sub
lea
js
in
sub
mov
outs
fptan
call
jl
push
or
dec
and
pop
pop
std
mov
pop
retf
pop
jmp
mov
add
cmp
sub
jmp
sti
sub
add
loop
sbb
jae
or
jnp
or
xchg
sbb
add
cmp
cld
hlt
lods
cmp
sbb
mov
scas
cmp
and
and
mov
and
push
xor
jae
pusha
cmp
jmp
sub
loopne
push
pop
push
jo
js
pop
xlat
push
pop
jmp
js
nop
pushf
int3
ins
ins
push
inc
shl
xchg
outs
mov
fcmovnu
mov
sar
rol
lods
fs
sub
sub
in
xor
mov
popf
fisttp
sub
sbb
add
inc
pop
nop
add
test
retf
int3
adc
aam
sbb
daa
cmp
inc
movs
cmp
mov
sub
pusha
cmc
push
icebp
lock
das
repnz
clc
pushf
push
or
cmp
sbb
pop
push
lea
outs
push
or
push
adc
dec
fdivr
(bad)
jmp
dec
jo
cmp
pop
add
push
ins
cmp
jno
xchg
add
cld
cmp
sbb
or
xor
jge
shl
pop
cwde
or
adc
cld
or
in
push
jmp
test
pop
test
xor
sbb
and
and
and
pusha
pop
(bad)
daa
clc
js
xor
mov
js
ret
pop
into
bound
jne
cmps
mov
stos
in
shl
and
jnp
mov
cld
and
or
jne
hlt
adc
sub
in
jl
add
xor
ja
push
push
mov
xor
cmp
inc
push
test
je
(bad)
mov
dec
movs
into
in
xchg
rcl
mov
sub
xchg
fwait
(bad)
jmp
cli
std
inc
sbb
js
adc
dec
adc
mov
adc
add
pop
sub
jecxz
dec
push
sbb
ds
or
js
ins
aam
out
pusha
xor
jae
xchg
mov
xor
in
and
adc
push
inc
and
pop
jae
jne
add
dec
mov
push
cli
mov
aaa
popf
xchg
sub
inc
int3
pop
pop
pop
sbb
jno
js
cmc
int
pop
cli
ins
iret
adc
mov
cld
or
mov
dec
lods
and
cmp
imul
punpcklwd
movs
call
in
mov
jmp
(bad)
sbb
push
dec
pop
daa
xchg
jp
pop
je
fild
jno
inc
mov
sub
imul
cmp
daa
pusha
or
sub
ja
sbb
mov
jge
sbb
or
and
test
xor
mov
xor
int3
mov
int3
jae
pusha
jp
add
mov
xor
data16
xor
pop
dec
sbb
dec
ins
std
push
aaa
pop
or
idiv
mov
aaa
mov
dec
add
add
jne
dec
cli
je
pop
mov
out
push
dec
dec
or
push
jmp
in
dec
je
js
frstor
retf
cs
mov
mov
stos
inc
jl
(bad)
aam
ins
xor
js
imul
jns
das
push
js
(bad)
ret
jbe
xor
ds
xor
je
add
jo
dec
pop
sub
sbb
js
popa
jae
xor
adc
imul
jns
das
(bad)
std
and
mov
js
push
mov
pop
fsubr
jmp
pushf
jno
rol
mov
cmp
lods
jo
pop
jl
sar
lods
pusha
ss
push
outs
xor
in
ins
gs
sbb
and
jp
inc
mov
sub
pop
int3
mov
pop
imul
ins
call
jo
push
push
je
pop
and
je
add
movs
jo
mov
or
pop
xor
js
push
mov
cmovle
iret
adc
es
cli
add
fistp
xor
test
push
dec
adc
dec
fsub
inc
cdq
mov
aad
je
mov
fisubr
dec
sub
jmp
popf
cmp
rcr
inc
stos
js
ins
adc
xlat
out
push
aam
mov
jns
int
jnp
push
fs
jae
sub
std
push
cmp
outs
dec
push
sti
pop
pop
add
gs
js
jno
jmp
xor
cmp
pushf
xor
cmp
cld
cmp
jl
hlt
or
cmp
loopne
add
push
sub
mov
jno
and
cmps
nop
pop
jmp
mov
jmp
leave
aaa
push
or
add
cmp
mov
imul
gs
test
mov
arpl
mov
pop
bound
or
cmp
cmc
arpl
adc
int3
fs
in
add
cld
(bad)
mov
jmp
xor
inc
dec
dec
cmp
cmp
jl
adc
imul
jns
addr16
dec
pop
mov
inc
jp
bound
mov
add
addr16
pop
std
jp
rcr
jne
jae
push
jg
pushf
cmp
or
sbb
and
jo
and
jo
dec
and
dec
outs
imul
fbstp
nop
adc
xor
stos
ins
add
test
data16
pusha
(bad)
popf
or
cmp
pop
cld
mov
fsubr
lock
push
fnsave
jp
push
(bad)
test
adc
dec
jmp
jno
sub
out
loopne
xchg
fcom
jl
cs
mov
mov
out
fs
inc
dec
pop
pushf
adc
fstp
add
push
ds
adc
inc
add
pop
arpl
xor
dec
dec
rol
mov
jb
push
enter
std
sub
les
jmp
test
mov
call
jl
enter
and
sub
dec
dec
das
sti
and
cmp
test
ds
idiv
dec
dec
sub
push
addr16
mov
fdivr
js
pushf
jae
test
mov
lods
push
xchg
push
movs
sar
add
loope
pop
stos
cwde
repz
jle
xchg
ja
outs
addr16
mov
das
cs
mov
int3
pushf
addr16
gs
sar
dec
les
outs
leave
push
inc
fbstp
nop
jo
xchg
(bad)
call
mov
sub
ret
stos
push
push
add
sub
loopne
dec
je
js
aad
sbb
push
xor
dec
mov
mov
test
loop
jno
pop
add
sbb
push
jl
cmps
inc
leave
mov
ins
outs
jno
(bad)
stc
jnp
sbb
jae
or
addr16
mov
cs
(bad)
dec
xor
int3
adc
sahf
add
cld
daa
xor
jl
push
clc
mov
loopne
push
lods
adc
fs
jns
pop
(bad)
mov
jbe
sub
push
jl
xchg
xor
push
(bad)
cld
and
pushf
pop
sub
dec
cmp
aaa
test
pop
aas
fdiv
sub
enter
jmp
out
ins
cmp
adc
out
cmp
mov
or
xchg
jl
mov
ret
jl
sub
push
pop
mov
and
sub
xchg
and
inc
retf
push
cs
sbb
aaa
int3
sar
lahf
mov
mov
stos
xor
adc
jmp
ins
xor
mov
mov
adc
push
rcl
js
ret
push
or
cmps
and
lock
push
js
sub
jb
jl
(bad)
sub
jl
jns
repnz
loope
loopne
in
xlat
sub
xchg
fidiv
pop
jl
js
out
jbe
ror
jge
stos
push
xor
test
les
fldenv
cmp
fwait
cmp
xchg
mov
jmp
pop
bt
js
and
jl
shl
in
stos
lods
and
arpl
cdq
add
sub
mov
data16
test
push
repnz
push
call
or
iret
retf
cmp
adc
jg
or
push
shl
push
ret
das
adc
and
fidivr
js
je
sar
jae
(bad)
loop
call
pop
xchg
push
int3
sub
cmp
(bad)
aam
sub
in
fs
dec
ins
jae
test
fstp
cmp
cdq
dec
mov
das
test
inc
xchg
jmp
lahf
mov
les
pop
dec
dec
mov
push
inc
cmp
jbe
add
bswap
ret
mov
aam
es
jmp
dec
cwde
call
pop
sti
push
dec
inc
in
js
push
inc
je
sub
out
call
out
add
aad
test
call
xchg
add
push
adc
dec
xchg
dec
cmp
dec
cmp
fcom
pop
inc
pop
vmread
and
jnp
jmp
xchg
scas
add
into
xor
pop
mov
hlt
pop
repnz
outs
imul
dec
mov
test
and
arpl
and
(bad)
inc
adc
pushf
push
and
test
das
sbb
sub
add
mov
mov
das
mov
add
sar
mov
loope
lock
ror
jae
push
pop
xchg
cmp
and
pop
push
js
neg
std
jl
iret
mov
fadd
leave
ins
inc
or
js
and
movs
je
outs
imul
js
dec
in
loope
jne
add
pop
push
out
push
pop
ins
xchg
inc
jl
cdq
call
inc
das
cld
ins
rep
xchg
loopne
sub
push
push
sbb
fs
mov
fnsave
fcmovnb
jp
jecxz
cmp
or
test
and
sbb
push
cmps
sub
push
adc
add
aas
js
mul
jg
push
sub
test
jbe
or
mov
pop
xor
sbb
pop
ins
dec
sti
push
into
mov
xor
pop
test
shr
cli
jp
sub
mov
push
out
sub
adc
push
outs
pop
pop
ins
cs
mov
mov
adc
sub
ror
pushf
test
es
push
xor
jbe
ss
outs
dec
add
cli
and
scas
cli
cwde
in
retf
jmp
neg
sub
cli
xor
shl
fs
add
sbb
push
test
push
inc
stos
dec
je
pusha
sbb
dec
add
js
xchg
(bad)
out
cmp
mov
cld
mov
mov
cmp
sub
maxps
sbb
pop
pop
idiv
inc
in
xchg
dec
icebp
add
push
stc
aad
js
test
cld
jge
pop
add
cmp
(bad)
in
pusha
fs
loop
sub
in
push
and
mov
js
jae
add
loope
cmp
in
cmp
rcl
shr
jbe
jl
jge
imul
or
jne
or
sbb
movs
cli
cmp
mov
sbb
dec
dec
jmp
push
repz
je
dec
icebp
sar
sub
xor
jl
sbb
jne
and
je
pop
push
sbb
loopne
mov
fmul
movs
pushf
add
add
xor
dec
sbb
gs
scas
sbb
jns
adc
ja
fnstcw
daa
retf
sub
div
lods
ins
loop
test
add
pop
aaa
frstor
jmp
mov
cmp
add
pop
sbb
les
fmulp
test
int3
push
imul
in
imul
push
int3
sub
stos
shl
xlat
inc
daa
mov
sub
cmps
lods
test
jmp
jae
pop
pop
js
out
mov
int3
sub
in
jl
pop
retf
push
jbe
inc
ficomp
in
inc
jmp
dec
cld
cli
pop
cmp
mov
pop
xor
jo
dec
daa
adc
in
jb
inc
pop
jne
dec
aam
or
pop
int3
or
jmp
push
adc
mov
and
adc
fnstcw
push
je
je
mov
or
xor
ds
sub
es
lods
inc
push
mov
sub
jbe
cmp
add
xor
jl
dec
cli
test
(bad)
jp
inc
pop
jmp
pop
neg
test
xor
pusha
jo
sbb
pop
daa
int3
js
jge
pop
xor
mov
dec
sbb
jno
pushf
imul
test
loope
mov
cwde
xor
ins
add
mov
cwde
xchg
lahf
int3
xor
je
jns
dec
push
movs
(bad)
call
dec
pop
add
sub
loopne
or
neg
sub
mov
shl
cmp
in
into
mov
fs
std
add
sbb
mov
adc
je
ds
jne
aas
mov
in
jno
je
inc
push
cmp
(bad)
mov
and
adc
jnp
ins
adc
sbb
sub
jbe
jno
push
nop
mov
cmp
inc
cmp
scas
mov
cmp
std
pushf
adc
mov
je
sbb
clc
and
call
cmc
xor
fidiv
jl
inc
or
mov
sbb
sbb
inc
and
or
dec
cmp
xor
ja
pop
jno
jnp
push
push
je
movs
sub
pop
xor
jb
mov
jp
xlat
mov
enter
inc
test
jo
ja
and
movs
xor
pop
js
pusha
movs
shl
mov
aam
addr16
hlt
fsqrt
test
sbb
push
loop
js
add
lods
jns
out
(bad)
cmp
sbb
addr16
jp
and
and
outs
xor
jns
ins
jno
jo
mov
jmp
pop
(bad)
push
mov
mov
call
mov
jne
jns
jmp
adc
push
xor
add
pusha
lods
repz
xor
ins
in
aad
je
dec
je
dec
into
mov
sbb
out
js
fiadd
rcr
jl
sub
(bad)
mov
(bad)
test
mov
xor
add
pop
push
sub
mov
sub
xor
sub
and
in
rol
jne
sbb
mov
ret
xor
jne
in
jns
retf
xlat
jle
mov
mov
pop
push
js
or
addr16
sbb
dec
and
xor
mov
fs
sar
xchg
dec
stos
ins
loope
pop
je
in
push
and
pusha
push
ror
xor
je
inc
or
push
fwait
push
xchg
sbb
test
pop
cmp
and
mov
and
push
dec
and
in
sbb
aam
sbb
cmps
out
jmp
test
cmp
and
pop
push
add
ins
pop
js
jo
add
stos
shl
sbb
aam
es
stc
push
cld
mov
test
and
arpl
mov
ins
adc
mov
mov
loopne
test
ret
xor
inc
xor
ins
push
xor
sub
ins
push
adc
outs
dec
mov
push
fstp
loope
push
mov
addr16
in
adc
fdivr
push
jns
dec
jle
jmp
bound
and
(bad)
jl
push
sahf
js
or
mov
add
cmp
imul
sbb
jne
idiv
jl
adc
bound
xor
push
ds
jne
loope
cli
sbb
pushf
jo
lds
xor
sbb
mov
mov
push
or
mov
push
sbb
pop
idiv
fs
ins
pop
sti
jmp
loopne
push
cmps
and
leave
mov
adc
jb
jl
sub
adc
js
add
mov
dec
sbb
or
icebp
in
mov
sbb
je
inc
jo
jno
daa
ins
mov
and
nop
add
in
je
sub
ins
and
pop
sbb
sahf
mov
inc
sub
or
sbb
std
in
pusha
neg
loope
cld
call
iret
imul
inc
jl
popf
xor
jl
jmp
pop
sub
pop
ret
xchg
cmps
data16
pop
stos
(bad)
ficomp
pusha
pop
push
sbb
or
(bad)
hlt
jae
push
sti
repz
mov
popa
shl
daa
fstp
sub
pop
test
jnp
cld
scas
cwde
pushf
pop
pop
or
sbb
pop
pop
js
ja
into
mov
pop
in
aam
pusha
icebp
adc
sub
pop
cmp
add
stos
fadd
call
aam
adc
call
les
les
sbb
inc
cmp
pop
push
sbb
adc
mov
add
fs
mov
(bad)
jmp
addr16
es
jne
out
retf
outs
sub
xor
je
aas
leave
jp
je
movs
add
pop
jbe
push
rol
repnz
jne
add
out
mov
pop
in
xchg
es
and
push
dec
and
xchg
imul
jae
add
push
ds
retf
xor
ret
ja
out
mov
outs
inc
jnp
pop
sub
fwait
dec
mov
int
loopne
mov
pop
push
out
js
jo
mov
inc
sbb
je
and
(bad)
(bad)
or
jecxz
aaa
add
mov
cmps
rcl
sbb
ja
sbb
js
retf
xor
adc
push
aaa
std
push
sbb
daa
int
mov
aas
ffreep
jae
add
xchg
jo
pop
out
hlt
cs
and
jns
jmp
mov
inc
sub
pop
mov
jp
mov
and
je
mov
xor
mov
adc
xstore-rng
cmps
inc
push
aad
js
add
icebp
pusha
test
mov
cmc
je
ds
lods
sbb
mov
xchg
push
test
stos
mov
push
inc
in
push
add
fidivr
in
mov
bound
add
or
cmc
push
xor
popa
int
in
sub
mov
test
ret
in
imul
jle
sub
jl
mov
ror
ror
jo
jmp
les
pushf
mov
mov
pop
ror
pop
fidivr
cmp
iret
data16
aam
sub
bound
pop
sbb
add
cmp
pushf
push
sub
in
dec
and
push
prefetchnta
loop
out
nop
dec
pop
jmp
ins
xchg
pop
xor
push
xchg
xor
push
retf
dec
xor
and
cli
fcom
(bad)
je
ds
scas
jne
mov
lods
pushf
dec
neg
leave
ins
xor
in
xor
and
cmp
das
sbb
mov
add
or
adc
leave
loop
test
cmps
ss
push
repz
and
fdivr
lods
cs
(bad)
fsubr
xchg
pop
mov
inc
(bad)
je
push
dec
(bad)
cmp
add
rol
fdivr
and
mov
xor
mov
sub
test
ja
cli
loopne
pop
enter
or
cmc
je
add
pop
test
adc
ja
push
or
les
inc
js
ds
and
imul
mov
xor
bound
jge
ins
push
dec
mov
lahf
int3
mov
pushf
pop
push
or
jns
aam
mov
mov
sbb
fs
mov
je
ret
in
jo
leave
xchg
shl
jnp
ss
(bad)
addr16
inc
sub
push
sti
loop
daa
cmc
loope
dec
sbb
push
push
adc
inc
in
cmp
adc
and
repz
test
sbb
ret
out
mov
call
pop
int3
pop
push
ds
cmp
stos
mov
js
adc
mov
and
mov
add
mov
mov
cmp
mov
adc
sub
mov
test
pop
jne
mov
js
cli
pop
adc
cli
and
int3
sbb
ds
outs
das
or
cli
pop
inc
cmp
imul
je
jp
int3
xchg
adc
pop
or
sahf
cmp
out
clc
js
mov
pushf
imul
mov
sbb
cmp
mov
jl
xor
call
rol
retf
je
in
push
call
pop
sub
sar
out
test
pop
jnp
or
pushf
dec
xor
cmps
in
xchg
mov
adc
mov
jg
mov
enter
lods
cld
clc
je
rcl
aam
js
ds
cmp
pop
test
les
in
outs
adc
js
mov
lock
ins
das
push
std
sub
dec
cmp
sub
into
pushf
je
in
and
fs
jbe
neg
ins
dec
jmp
adc
jnp
sti
out
push
sbb
loopne
push
or
test
ret
(bad)
jp
pop
xchg
pusha
cmp
mov
xor
jae
enter
sub
mov
pop
or
mov
and
int3
pushf
cs
ja
aad
mov
pop
movs
and
pop
fdivr
std
jo
enter
fs
xor
fincstp
js
pop
imul
aam
jne
adc
cmp
gs
hlt
or
xor
xor
adc
jae
ja
aam
sub
mov
cmp
add
outs
int
cmc
jae
mov
push
test
call
(bad)
fs
mov
je
cmp
cmp
sub
mov
mov
popf
inc
call
dec
js
xor
pop
jae
inc
xor
into
retf
ja
je
imul
push
ins
xchg
cmc
lea
pusha
imul
jnp
cs
(bad)
and
test
jl
es
fs
loope
inc
adc
xchg
pop
push
aas
and
test
call
rep
sub
jle
sbb
cmps
call
loopne
mov
stos
pop
out
(bad)
or
mov
push
repnz
popf
jp
jp
cmp
or
add
push
cld
into
sbb
mul
int3
nop
ds
jmp
push
les
mov
retf
push
pop
and
fnstenv
int
ins
sub
mov
pusha
cmp
jmp
cmp
and
xor
(bad)
adc
jl
call
test
daa
push
mov
hlt
adc
mov
in
je
stos
mov
jbe
nop
add
or
loop
xchg
dec
or
sti
sub
pushf
pop
add
les
xchg
imul
jl
ret
test
xor
inc
vmovmskps
jo
cmp
leave
mov
xor
jp
inc
adc
jp
push
adc
(bad)
jns
sbb
push
pop
dec
or
stos
lahf
mov
mov
retf
pop
fistp
in
jns
js
imul
xlat
mov
cmc
loope
push
or
mov
repz
push
cli
repz
pop
xor
sbb
cmp
xor
push
movs
and
jb
or
dec
inc
lds
es
jb
mov
(bad)
movs
clc
jnp
pop
mov
jl
mov
aad
lahf
mov
clc
in
fwait
fs
jbe
ds
in
cmc
jns
movs
inc
cs
pop
jno
push
inc
(bad)
ins
jl
sbb
ficomp
fmul
or
clc
sub
push
inc
loop
push
addr16
hlt
fdiv
les
cmp
ins
aaa
fistp
inc
fsubr
sub
mul
mov
movs
cld
jb
jecxz
fcomip
mov
adc
ja
push
mov
pushf
aad
mov
fist
lods
test
js
or
jns
nop
fld
jo
data16
cld
je
in
div
pop
stc
mov
inc
out
add
ins
ins
adc
push
aam
push
int
sbb
or
dec
gs
xor
dec
js
push
(bad)
mov
dec
loopne
cmp
sbb
add
rep
dec
and
shr
jbe
pop
ja
jns
movs
fdiv
sar
lods
loope
cmp
cmps
mov
pop
data16
bound
repnz
and
adc
xor
xchg
test
shl
nop
fstp
add
jae
push
std
je
cld
in
jo
add
xor
pop
xor
jl
cmp
mov
pop
adc
in
(bad)
imul
dec
cmp
sti
and
enter
fnsave
lahf
cdq
fmul
popa
sub
fs
daa
iret
mov
cmova
clc
xchg
aam
fcom
int3
cs
rcr
ins
js
push
inc
xor
out
call
or
ds
sub
stc
jl
mov
push
inc
loop
fsub
xor
shr
fcom
jl
cli
jmp
mov
push
push
cmp
sub
push
adc
pop
lock
loop
in
hlt
pop
(bad)
push
sub
cdq
(bad)
icebp
int3
push
pop
mov
and
fs
pushf
or
fld
push
push
clc
test
fs
clc
cmp
cld
mov
mov
test
dec
sar
cmp
jmp
sub
pop
push
dec
xor
and
ins
les
xchg
mov
or
jnp
and
les
and
lods
xchg
and
in
mov
ins
iret
test
jo
dec
dec
je
jne
js
iret
mov
cmp
in
pop
ins
xor
(bad)
data16
mov
sub
ins
push
ins
mov
fmul
lods
push
adc
xchg
jo
jne
je
pop
jl
mov
adc
and
stos
mov
xor
int3
cwde
shl
fadd
test
stos
call
and
xchg
gs
dec
inc
inc
std
outs
push
dec
loop
jb
cmps
out
pushf
or
nop
out
pushf
leave
mov
rol
xor
pop
ret
(bad)
cmp
and
in
jmp
dec
mov
js
push
sbb
dec
jae
mov
cmp
aad
test
ds
fidivr
pusha
mov
and
cmp
je
or
cmp
movs
sub
jbe
imul
mov
xor
pop
and
mov
or
stos
sub
push
jnp
and
hlt
lds
mov
push
add
(bad)
test
dec
(bad)
mov
ins
fsub
or
inc
push
pop
sub
jb
repz
add
dec
jl
and
jns
js
aad
pop
jo
xlat
cmp
jne
jb
xor
or
jb
outs
fbstp
push
daa
push
mov
mov
push
xor
fcom
dec
lock
jno
inc
sbb
popa
adc
cmp
js
xchg
stos
sahf
xor
mov
sub
call
outs
ins
loopne
outs
jb
iret
sub
(bad)
pop
lea
mov
and
dec
cwde
lds
xchg
mov
addr16
or
fld
pusha
sub
jae
push
dec
dec
inc
test
xor
jl
mov
in
shr
push
add
and
sub
mov
adc
ss
imul
outs
push
pop
cmp
ds
jne
(bad)
sar
sbb
mov
dec
inc
adc
dec
lea
jp
jnp
movs
in
mov
into
xchg
cmp
jecxz
dec
jns
mov
mov
ja
je
ja
adc
aas
sub
fcomp
out
inc
movs
inc
stc
cmp
rcl
inc
mov
or
inc
push
mov
sbb
mov
sub
mov
and
jne
cmc
stos
cmp
test
imul
jne
pushf
stos
stos
dec
xor
aaa
push
adc
pop
inc
fisub
mov
inc
mov
jnp
(bad)
int3
xor
sbb
test
and
shl
fiadd
jl
loop
push
sub
xchg
cld
enter
ret
inc
mov
in
iret
and
push
cwde
lahf
movs
xchg
xchg
cmps
mov
adc
add
stc
ins
pop
and
jb
sub
dec
loope
or
sbb
pop
xlat
fidiv
je
ficom
sub
push
push
and
ins
cmp
xchg
dec
xchg
fwait
mov
push
jl
dec
cmps
xchg
push
in
xchg
sub
mov
adc
jns
retf
cld
loop
jg
mov
jns
clc
cmps
outs
pusha
jne
push
xchg
cmps
push
sub
hlt
shr
mov
popf
xor
fst
js
jl
clc
mov
inc
jne
mov
xor
ins
jae
ja
jmp
sub
fistp
or
dec
aam
pop
cmps
pop
int3
pop
jle
push
cmps
push
(bad)
mov
ret
or
pop
jmp
mov
mov
ret
ror
or
test
cmps
shl
hlt
imul
mov
ret
call
or
js
cmp
jmp
and
int3
and
lahf
(bad)
inc
mov
cmp
leave
sbb
mov
test
mov
cwde
into
fisttp
adc
xchg
inc
xor
pop
je
jo
movs
inc
cmp
ret
pop
or
js
pop
nop
pusha
jne
xor
and
dec
shr
test
ins
loope
call
or
loope
call
sub
sub
cmc
pushf
add
test
jle
js
stos
iret
fiadd
mov
jnp
pusha
hlt
xchg
xor
sahf
je
jo
sahf
xor
jne
pop
cdq
clc
dec
xor
push
int3
rol
mov
and
jl
adc
(bad)
in
sub
cmp
cli
add
add
ds
or
clc
iret
or
popf
hlt
jmp
sar
sbb
push
jl
xor
and
mov
std
nop
div
jecxz
sbb
hlt
cmc
(bad)
sub
mov
push
add
out
inc
sub
movs
bound
push
inc
mov
xchg
and
fcmove
aad
jl
and
(bad)
movs
sbb
outs
repz
fwait
add
call
test
aas
mov
push
cmp
jg
int3
inc
inc
idiv
add
push
das
sbb
test
outs
push
test
sbb
xor
xchg
repnz
retf
cwde
call
popa
inc
pushf
out
in
int3
in
sbb
nop
outs
inc
push
sti
inc
inc
sbb
ds
outs
pop
pop
xor
jno
std
jo
data16
cmc
rol
and
pop
je
xor
lods
pop
das
inc
iret
jmp
loopne
sysret
int
jae
je
in
loopne
adc
pop
cmc
hlt
enter
les
dec
sbb
jmp
push
js
dec
dec
mov
adc
push
inc
mov
fsubp
add
js
rep
data16
leave
jle
mov
cmp
inc
inc
add
pop
cs
adc
ins
or
or
movs
ins
outs
push
cmp
data16
jp
xchg
pop
gs
inc
imul
lods
dec
dec
and
pusha
bound
dec
add
mov
add
(bad)
or
stos
sub
enter
lods
xor
mov
ret
adc
je
push
jg
sbb
fnstcw
mov
(bad)
xor
mov
dec
ret
cmp
push
xor
pop
aaa
mov
pop
xor
inc
or
test
pop
and
ins
dec
jmp
imul
popf
sbb
dec
pop
pop
dec
data16
push
push
and
and
inc
js
repz
sti
cmp
(bad)
mov
repz
or
pop
retf
les
fs
iret
push
dec
dec
mov
mov
sbb
jmp
gs
adc
imul
push
push
mov
push
push
push
je
inc
cmp
mov
repnz
js
gs
nop
and
std
mov
mov
add
aas
push
or
je
gs
test
ds
xor
std
sti
pop
popa
cmp
out
mov
xor
outs
shr
div
gs
mov
mov
sub
imul
loop
lods
xor
mov
imul
push
movs
ja
xchg
push
inc
test
pop
sub
sbb
sbb
cld
mov
push
add
mov
repnz
add
outs
jecxz
jmp
cld
je
inc
pop
test
sub
push
mov
fldcw
or
int
mov
ret
push
cmp
xor
fistp
mov
mov
and
xchg
sbb
iret
call
sbb
jl
in
ds
sbb
fisubr
pop
(bad)
addr16
cli
movs
pop
mov
popf
pop
ss
pusha
push
push
xor
jl
adc
ja
call
ret
(bad)
jmp
and
mov
cdq
shl
bound
in
push
popa
ins
inc
pop
pop
int3
xor
push
adc
dec
push
and
fstp
in
je
pop
and
pusha
cmp
sbb
cmp
pop
cmp
xor
imul
in
jnp
call
and
jb
jne
or
jns
imul
push
mov
fcomp
xor
popa
aaa
data16
lods
sub
push
mov
push
cs
int3
je
out
in
retf
sub
sub
adc
pusha
cli
(bad)
cmp
cmp
mov
xor
addr16
push
outs
je
jae
dec
jge
pop
gs
sbb
xor
pop
sbb
inc
dec
add
cmp
xchg
pushf
je
popa
mov
xchg
clc
and
(bad)
pusha
push
loope
in
cmps
inc
add
dec
or
xor
and
cwde
inc
push
mov
js
cmp
xor
jl
pop
pusha
call
cmp
int3
pop
popa
pop
ds
jb
pop
addr16
test
or
in
pushf
pop
ja
gs
pusha
div
loop
dec
pop
inc
jl
jp
data16
out
fs
xor
mov
push
imul
aam
dec
les
push
fbstp
dec
scas
mov
dec
in
js
jbe
je
les
mov
sbb
or
in
adc
and
dec
inc
mov
dec
xchg
jns
bound
js
std
nop
pop
popa
inc
out
ins
push
fucomip
inc
jns
sub
stos
mov
mov
cmp
lock
xor
mov
push
jne
cmc
dec
push
test
cmp
push
and
push
add
aas
lods
or
push
adc
in
(bad)
mov
inc
dec
xor
lds
push
xor
sub
pop
arpl
mov
xor
add
push
call
in
das
xor
jne
pusha
cs
sahf
xor
sub
jl
push
hlt
push
push
dec
jae
or
jns
imul
push
inc
xor
adc
inc
dec
cli
nop
dec
push
mov
lea
cmp
ds
cmp
je
das
xor
xor
loop
and
pusha
gs
std
dec
in
jne
inc
push
pop
gs
push
cmp
xor
and
push
jns
es
add
out
xchg
ds
pop
addr16
int
pop
pop
inc
fs
imul
xor
in
sub
hlt
pop
xor
lock
in
dec
pop
sbb
pop
xor
pop
inc
cmp
js
popa
pop
sti
sbb
dec
mov
jp
push
and
sub
push
dec
out
pop
stos
shr
mov
(bad)
mov
pop
cmps
mov
dec
je
jge
jno
mov
mov
js
push
cmp
xor
xor
ss
test
je
dec
sbb
outs
jae
dec
fmul
xor
std
pushf
xor
cld
mov
inc
(bad)
js
jns
loopne
inc
lahf
in
dec
aas
gs
push
or
sbb
es
hlt
push
cmp
sbb
neg
and
jbe
outs
ins
mov
ja
add
mov
ins
or
dec
jne
inc
jp
jb
or
xor
je
push
pop
mov
idiv
ficomp
adc
in
and
sub
lods
dec
test
loope
add
pop
shr
pop
pop
mov
nop
ret
jbe
and
add
push
loopne
jae
stc
sub
stos
je
shl
push
ins
shr
xchg
aas
xor
sub
xor
push
lea
rcr
push
xchg
and
clc
mov
sub
stc
enter
arpl
and
or
stc
cld
fs
jne
sbb
add
retf
in
repnz
add
(bad)
jns
pop
jnp
jp
push
add
fmul
out
cmp
jmp
addr16
pop
inc
std
sub
rcr
cmp
add
pusha
pushf
aaa
call
and
je
or
sub
and
xor
xor
aam
dec
inc
inc
adc
pusha
add
stos
ret
fisubr
cmp
data16
cmp
or
stos
xor
das
sbb
mov
adc
inc
and
dec
push
sub
je
(bad)
jne
inc
mov
je
cwde
xor
cmc
test
push
push
in
xor
mov
push
jne
sbb
jo
dec
dec
push
inc
aaa
and
fs
sub
ss
push
imul
dec
lods
cwde
cmps
jne
pop
push
jbe
dec
xchg
jle
mov
pop
push
or
pop
pop
inc
mov
dec
into
movs
dec
inc
dec
ins
cmp
pop
es
inc
(bad)
cli
pop
push
or
stos
xor
in
fcomp
nop
push
dec
sub
es
cmp
dec
fcomp
pop
dec
ins
xor
xchg
inc
inc
enter
retf
clc
jb
jb
fsubr
dec
sub
call
je
jp
inc
mov
push
push
cwde
jae
push
xchg
push
in
lods
xor
push
pop
adc
ss
lahf
xor
je
pop
and
jl
outs
dec
in
and
and
cmp
or
loopne
pushw
je
pop
je
push
xor
jo
sbb
pop
pop
push
pop
push
inc
dec
dec
cmp
push
imul
inc
ja
gs
mov
mov
push
ss
xor
cmp
add
neg
mov
add
push
and
sbb
pop
repz
int3
mov
jmp
ins
pop
pop
out
mov
pop
push
jl
jmp
add
repz
push
test
or
push
push
and
cdq
inc
sbb
and
pop
xor
rcl
pop
dec
mov
mov
sub
add
cmp
jmp
sub
dec
jo
js
cmp
pop
pop
in
int3
push
imul
fs
popf
dec
cmp
ja
push
fdiv
push
and
jge
cmp
push
aas
enter
xchg
gs
push
ins
cmp
cli
pop
push
adc
mov
das
cs
xor
xor
xlat
js
push
std
cwde
pop
pop
(bad)
repnz
fdiv
in
dec
repz
addr16
js
add
std
je
sbb
sbb
pop
sbb
push
and
je
xor
inc
dec
fucomp
pop
sar
jecxz
clc
xchg
retf
cld
scas
jns
rcl
dec
(bad)
in
rcl
add
je
push
jae
clc
cmc
outs
or
inc
aam
ins
(bad)
pusha
arpl
cmp
clc
jae
xor
mov
jmp
push
je
push
clc
inc
mov
loop
and
xor
cmp
dec
push
ins
push
jne
cmp
mov
fs
and
cmp
push
push
push
mov
sub
sbb
cs
xor
dec
aam
xor
add
(bad)
(bad)
lock
in
in
cmc
sub
in
scas
paddsb
inc
add
pop
cli
add
jae
adc
aam
and
dec
ret
push
out
scas
scas
and
pusha
in
inc
inc
dec
jp
jo
jl
sub
mov
ja
aad
and
pop
push
push
daa
push
les
add
cmc
addr16
cmp
call
bound
sbb
call
dec
dec
adc
xor
mov
add
and
imul
push
sub
xor
push
fs
push
jp
pop
pop
inc
add
pop
pushf
aas
sub
and
mov
dec
or
scas
and
dec
sar
xor
mov
aaa
and
and
inc
inc
repz
mov
clc
fsubp
out
jmp
dec
clc
lock
cmp
aaa
je
push
pop
not
sbb
pop
and
es
mov
xor
or
rcl
inc
xchg
lea
mov
je
nop
aam
imul
jb
jne
aam
fadd
ins
test
addr16
loop
mov
jge
pop
pop
sbb
and
int3
xchg
dec
jo
or
xor
std
pop
test
lods
pop
fbstp
outs
sub
dec
cmc
test
cmp
dec
cmc
je
sbb
xor
dec
sbb
je
and
pop
push
(bad)
outs
cmp
aas
outs
adc
lahf
jns
add
lock
xor
add
(bad)
neg
jecxz
inc
in
icebp
pop
retf
cmp
int3
dec
cli
mov
ins
in
loope
and
stos
sar
shr
jo
dec
and
sbb
fs
pop
test
push
repz
jo
mov
xchg
push
dec
push
or
in
int3
dec
cs
cmp
xor
ins
cmp
sbb
neg
jg
sub
test
mov
das
sub
aas
ins
push
fwait
add
adc
retf
pop
pop
outs
pop
push
inc
sbb
cmp
sub
mov
xor
adc
adc
add
mov
mov
int3
inc
or
(bad)
xlat
jo
mov
in
in
imul
sti
dec
jo
data16
stc
test
mov
mov
sub
mov
dec
lahf
je
mov
mov
adc
(bad)
test
ins
cmp
inc
clc
jne
daa
add
cmp
push
imul
fsubr
sub
ins
inc
push
adc
mov
push
or
mov
pop
cmp
add
inc
ss
xor
fdiv
jae
loopne
rcl
jmp
sbb
cmp
push
or
pop
clc
lock
test
jmp
fwait
mov
aam
pop
jl
out
pusha
out
in
push
cld
add
outs
jb
mov
jo
je
inc
xchg
push
sbb
add
add
fs
addr16
dec
push
pop
test
cld
mov
aad
in
test
jecxz
gs
or
adc
enter
loopne
sbb
dec
cmp
adc
xor
cli
test
lods
push
mov
retf
push
adc
std
push
repnz
in
pop
pushf
xor
xor
fs
inc
inc
cwde
dec
popa
pop
jp
jnp
xchg
and
clc
test
pop
push
jo
push
fwait
pop
sub
dec
pop
add
cmp
or
inc
push
sbb
(bad)
cld
jo
out
(bad)
xor
hlt
addr16
jp
add
push
jg
sub
test
sahf
daa
push
add
jae
call
pop
mov
sub
fdiv
and
in
or
(bad)
mov
bnd
sti
into
clc
nop
or
ins
and
fcmovb
pop
lea
push
pop
clc
adc
sbb
les
mov
dec
add
pop
jo
xor
inc
xor
inc
inc
test
mov
pushf
icebp
mov
movs
cmp
xchg
jecxz
adc
not
add
inc
push
sub
clc
stc
xor
and
in
fs
and
jp
adc
push
adc
(bad)
pop
mov
jns
jbe
or
mov
je
ins
sbb
popf
sbb
cmp
hlt
inc
xor
add
sbb
ror
jecxz
int3
outs
repnz
mov
int3
les
call
repz
push
cmc
sub
mov
es
cli
jae
sbb
and
or
sti
xor
inc
test
mov
jae
daa
cmp
dec
inc
add
idiv
rol
cmp
sub
fsubr
lods
and
outs
push
dec
inc
cli
addr16
and
and
and
repnz
xchg
sbb
jl
daa
add
adc
int
inc
hlt
clc
xor
xor
dec
cmp
cld
jecxz
pushf
jmp
ins
cmp
fsub
mov
pop
out
movs
jns
out
shl
in
xchg
inc
push
rcr
lds
fwait
push
mov
rcl
(bad)
out
in
sub
movs
adc
std
pusha
push
je
stc
in
imul
and
sbb
pushf
push
push
cmp
pop
or
push
mov
xor
retf
fld
icebp
in
rol
aas
sbb
xchg
dec
les
adc
cdq
xchg
nop
cs
repnz
xchg
inc
rol
xchg
or
(bad)
fcom
jae
das
ins
ror
in
jl
pop
dec
inc
jns
out
jns
rol
jns
ret
stos
push
sar
loopne
jbe
cld
fcomp
xor
fnstenv
xor
jo
lods
je
(bad)
pusha
jae
push
sti
dec
dec
aaa
(bad)
mov
enter
sub
call
pusha
jno
adc
stos
and
adc
loop
int
pop
adc
xor
adc
ficomp
pop
push
das
inc
je
jno
je
out
xor
(bad)
lods
cs
mul
aad
and
inc
and
lods
inc
jae
inc
jmp
clc
aam
pop
xor
fdiv
(bad)
mov
fsubr
add
pop
shr
aas
jae
mov
or
test
mov
adc
shr
pop
ja
clc
in
hlt
out
mov
call
inc
imul
pusha
pusha
or
aad
inc
inc
sub
dec
sbb
adc
scas
mov
push
xor
push
sbb
call
add
lock
adc
and
jl
ins
je
das
retf
imul
lock
rcl
jo
pop
jmp
mov
mov
dec
in
mov
int
imul
js
shr
cmp
sahf
mov
and
mov
test
jae
popa
jp
inc
das
cmp
inc
cs
cwde
sub
mov
inc
in
mov
jne
sar
and
loope
clc
div
std
pop
div
pop
sub
sbb
clc
pop
inc
stos
pushf
dec
xor
int3
inc
cld
or
dec
xor
xor
cmp
call
test
repnz
jge
fnsave
ins
je
jns
(bad)
sub
leave
push
xchg
int3
adc
cld
mov
scas
cmp
dec
xor
and
repz
or
je
pop
or
fs
(bad)
sbb
fidivr
in
fstp
mul
les
xchg
pusha
push
and
push
mov
sbb
ins
stos
mov
mov
sbb
iret
add
(bad)
addr16
jmp
inc
(bad)
neg
cmp
std
or
dec
push
imul
jo
adc
and
add
and
mov
and
mov
cwde
pop
(bad)
jbe
jl
ret
test
push
xor
aaa
and
fcomp
(bad)
pusha
or
enter
mov
sbb
pop
in
ja
mov
mov
ret
mov
cmps
je
sahf
cld
push
stc
sbb
mov
or
cmp
cmc
cmp
xor
add
xchg
test
das
and
or
stos
ins
cmp
cmp
inc
inc
int3
adc
and
rcr
pop
sub
pusha
dec
sub
push
mov
js
dec
int3
cmp
ja
and
sub
sar
pop
data16
es
scas
push
js
push
pop
push
jb
add
movs
inc
cmp
push
dec
aas
mov
adc
and
js
mov
jecxz
sub
xchg
xor
fmul
addr16
or
cmp
xor
inc
jge
jne
dec
dec
js
cld
js
pop
outs
mov
push
ds
push
push
and
and
fcomp
outs
and
inc
sbb
xor
and
sub
mov
sbb
xor
jo
pop
int
pop
and
je
dec
enter
movs
loopne
pop
and
cmp
unpcklps
xchg
inc
add
and
movs
push
arpl
mov
jecxz
push
ss
aam
loopne
inc
iret
fs
pop
dec
dec
fdiv
imul
mov
push
dec
jnp
sub
mov
jo
inc
jns
mul
std
test
xlat
aas
jne
adc
dec
and
mov
cmp
mov
xor
pop
push
sbb
xor
add
push
push
add
inc
(bad)
jl
or
int3
push
stos
jp
mov
(bad)
pushf
mov
sub
in
inc
pop
push
movs
loopne
jecxz
jb
and
jbe
jae
push
fcmovb
cwde
je
sub
leave
cmp
push
mov
push
push
push
pop
ja
jo
mov
pop
push
fdiv
or
into
push
push
inc
shr
mov
lods
mov
pop
clc
mov
mov
fild
shl
cmp
shr
stos
jle
or
cmp
or
or
pop
lahf
jp
cli
xor
jp
nop
or
xchg
call
retf
xor
and
inc
inc
clc
clc
sub
push
add
stos
adc
out
out
ja
push
push
js
add
adc
dec
mov
sub
les
fbstp
test
outs
add
les
fbld
xchg
xchg
xchg
push
or
call
rcr
inc
cmc
repz
int3
and
outs
inc
sub
loop
jg
inc
das
mov
inc
mov
ror
cld
jp
xor
dec
inc
and
mov
pop
add
mov
adc
push
bound
adc
aas
iret
jo
push
sub
pop
pushf
xor
mov
pop
lock
lds
cwde
or
mov
sub
shr
cmp
shr
push
ja
inc
pop
ins
add
cmp
ror
sbb
mov
call
aam
jmp
in
imul
sub
and
mov
je
les
out
icebp
int3
push
lea
add
push
sub
mov
xor
in
mov
mov
push
sti
call
sub
mov
pop
nop
dec
inc
ds
fnsave
inc
ja
shl
adc
ficomp
pop
dec
iret
sub
js
pop
add
inc
dec
or
cmp
stc
test
sti
call
jp
adc
data16
jp
in
sub
fxch
icebp
jl
je
shl
mov
cld
mov
ja
lock
sub
test
mov
xor
fs
jp
cld
add
dec
jp
js
into
stc
jae
rcr
jl
call
in
aad
dec
mov
ffreep
sbb
push
mov
xor
in
cmp
mov
rcl
mov
mov
inc
cli
or
jo
xchg
push
pushf
test
in
xchg
retf
enter
call
inc
hlt
sub
rcl
in
add
jp
or
jp
mov
jp
pop
js
jl
jno
jae
push
js
sub
pop
hlt
push
or
daa
mov
and
sbb
jp
fmul
jb
in
pop
mov
xchg
adc
repnz
lods
fxch
dec
fcom
and
add
or
cmc
jp
xchg
dec
dec
mov
add
or
imul
test
sbb
ror
iret
pop
xchg
dec
adc
xor
add
sub
mov
sbb
cmp
loope
sub
test
xchg
pop
adc
pop
add
mov
gs
clc
push
jmp
leave
xor
inc
adc
adc
addr16
sahf
sar
mov
push
aad
fdiv
xchg
jbe
repnz
mov
fisub
jl
sar
adc
xchg
pop
xchg
jecxz
pop
xchg
adc
fidiv
jl
adc
mov
jl
xor
push
mov
dec
jo
sbb
cwde
into
xchg
cwde
add
imul
xchg
mov
mov
mov
scas
push
lods
pusha
loope
ins
xor
jge
xor
adc
call
mov
call
xor
imul
sub
inc
sahf
cmp
ins
jne
ja
ins
and
push
fdiv
xchg
pop
nop
push
cwde
cli
jb
jecxz
retf
ins
xor
sub
clc
add
out
fiadd
in
call
jecxz
in
fcmovnu
js
out
out
(bad)
push
sar
fnstcw
inc
jmp
fcomp
ja
loope
jmp
jecxz
jbe
test
dec
inc
loopne
aad
in
inc
jmp
in
ins
jmp
std
arpl
fisub
sub
in
in
cld
pop
loope
jmp
repnz
jno
lock
jmp
out
icebp
out
cmp
push
loop
xlat
add
scas
mov
sbb
test
aad
mov
test
aad
add
in
ins
push
and
in
cmps
mov
xchg
ss
in
add
mov
pushf
lods
test
cmp
movs
mov
mov
aas
movs
(bad)
xchg
sub
xchg
pop
sbb
fwait
mov
mov
fs
sahf
call
mov
movs
mov
and
push
cmps
pop
adc
mov
mov
popf
jne
cdq
test
mov
push
cmps
dec
pushf
(bad)
aam
(bad)
lea
dec
mov
stos
mov
mov
xchg
cmps
xchg
mov
xchg
je
mov
mov
(bad)
scas
movs
or
gs
stos
pop
stos
(bad)
sub
arpl
fucom
lahf
fisttp
mov
sbb
jmp
cmps
sub
lods
aam
pop
in
test
cmp
mov
js
jmp
mov
fsub
jno
fxch
lods
ja
mov
mov
sub
add
repnz
and
mov
sub
sub
aaa
sub
mov
and
cmp
es
sub
xor
outs
sub
add
sti
add
lock
sti
repz
jne
clc
jmp
adc
xchg
lea
push
mov
and
xchg
xchg
adc
out
mov
push
push
stc
aad
test
dec
inc
daa
sti
push
dec
das
pushf
sbb
std
in
xchg
push
rol
sbb
aad
(bad)
mov
in
imul
jo
je
mov
mov
loop
f2xm1
fisttp
repz
jb
jmp
and
sbb
pop
add
mov
jecxz
jo
adc
dec
popf
cdq
fs
pop
adc
cwde
std
bnd
sbb
fdiv
in
fsub
clc
adc
icebp
shr
sar
jnp
aaa
daa
sbb
pop
adc
ins
and
jns
push
jo
push
pop
cmp
sub
add
ds
push
cli
test
sub
test
in
fmul
std
stc
mov
pushf
or
hlt
push
pop
or
pop
sub
sub
(bad)
fcom
test
fstp
or
pop
hlt
add
push
pop
sti
das
sub
stc
add
js
leave
mov
pushf
xlat
int
shl
call
add
stos
in
jb
pushf
rcr
lods
mov
xor
jo
popf
sub
fsubp
test
gs
sub
or
add
dec
in
jnp
shr
cdq
cmp
inc
test
mov
xchg
xchg
gs
mov
in
shl
lock
sbb
sbb
fst
push
mov
pop
fdivr
xchg
aaa
sub
mov
(bad)
pop
fst
daa
sbb
cwde
shl
adc
rcl
dec
cmps
leave
retf
retf
call
hlt
sti
or
scas
ins
dec
add
dec
jo
dec
xor
push
pop
lock
and
pop
cs
xor
push
imul
ss
sbb
or
add
push
mov
mov
enter
dec
fldcw
retf
aam
sbb
loopne
xor
scas
stos
push
pop
mov
icebp
mov
and
(bad)
test
ins
sbb
out
ins
test
cmc
js
in
call
je
push
out
push
lock
mov
and
xlat
mov
sbb
xlat
out
jecxz
cld
mov
les
add
mov
mul
lods
sbb
sub
and
lods
and
shl
sub
jnp
and
add
lods
sbb
pop
daa
adc
inc
add
outs
test
xchg
out
aam
movs
jbe
aad
je
aam
fidivr
fcmovb
call
cmp
out
ins
cmp
or
xor
popf
(bad)
jmp
mov
pusha
dec
and
sub
sbb
mov
jne
aam
clc
test
cld
call
(bad)
xor
cld
aad
push
push
jo
mov
cli
fdiv
jecxz
aam
out
cmp
mov
fcmovnbe
pop
test
mov
mov
dec
loopne
nop
lock
in
jmp
fist
xchg
sub
ins
aaa
in
push
and
inc
sub
mov
cdq
movs
sbb
mov
test
js
movs
nop
sti
xor
cld
cmc
mov
js
daa
adc
les
and
xor
xor
and
and
push
pop
push
inc
push
or
sbb
jmp
sub
aam
into
mov
shl
jne
je
mov
mov
adc
in
sub
xor
mov
sbb
out
push
and
int3
dec
push
inc
int3
add
mov
ins
push
xlat
enter
mov
cmp
fwait
ret
mov
xchg
retf
cld
(bad)
fsubr
cwde
jle
pop
aam
movs
xchg
xor
sbb
je
shl
call
cmps
jp
jecxz
fisttp
pop
scas
cmps
push
jl
in
push
mov
int3
xor
ins
stos
mov
mov
in
in
sbb
cmp
mov
sahf
xor
retf
and
cld
cmp
jmp
mov
shr
adc
js
and
stc
lods
sbb
add
test
adc
hlt
out
push
and
dec
sti
lock
hlt
fimul
mov
retf
aam
pushf
jbe
xlat
mov
test
int3
lods
sub
jl
aas
xor
in
pop
dec
div
push
lods
in
fild
iret
ror
fs
ins
ret
mov
loopne
jl
les
jbe
mov
mov
outs
aad
retf
int3
js
fxch
mov
pop
(bad)
in
imul
lea
loop
ds
sahf
cs
fcomp
shl
stc
jmp
fsubr
jmp
push
test
mov
lock
sub
int3
in
aad
out
xor
fdiv
sub
cmp
and
pusha
sbb
cwde
xor
fistp
push
ja
sub
stc
and
pop
mov
push
lods
mov
mov
adc
test
int
mov
pop
ror
xlat
daa
jne
jo
je
and
test
sbb
jbe
cmc
lods
push
adc
and
jno
clc
lods
jns
jbe
or
push
push
sbb
push
jne
mov
jle
xor
sub
ds
popf
pop
loopne
push
push
mov
dec
je
mov
push
jae
cli
fs
fsubr
dec
hlt
cmp
jne
lahf
fwait
cwde
rcr
xchg
gs
stos
dec
mov
retf
cli
aam
add
sbb
push
hlt
adc
adc
aam
dec
xor
retf
jl
mov
add
sbb
outs
das
pop
in
xor
movs
sub
adc
lock
mov
adc
pop
out
frstor
int3
lods
pop
cli
nop
xor
xchg
pushf
(bad)
int
aad
mov
retf
in
iret
mov
mov
sub
mov
dec
dec
mov
cld
sub
cli
sbb
sbb
or
cli
and
lods
push
mov
mov
loopne
mov
aam
mov
stc
call
cld
nop
mov
test
jnp
pushf
int
mov
pop
test
fbld
popf
hlt
dec
scas
out
ins
cmps
popf
mov
fcom
int3
and
loope
aam
cmp
icebp
jmp
in
inc
test
mov
mov
cmp
jnp
mov
inc
jns
mov
or
fimul
push
add
pusha
push
jp
xor
sub
test
or
cmps
push
jbe
cli
in
dec
repnz
pop
outs
gs
and
sar
jne
retf
je
retf
pop
aam
jns
dec
mov
add
jns
sbb
jbe
inc
cmp
push
push
inc
cmp
dec
or
pop
push
sbb
stos
jmp
mov
les
mov
int
inc
fs
mov
mov
adc
mov
leave
mov
enter
out
in
mov
adc
sbb
jb
cld
fs
cmp
cmps
in
xor
lods
test
mov
cmps
mov
and
xchg
mov
clc
jg
aam
mov
dec
push
mov
mov
iret
xchg
pop
push
or
or
pop
xor
jl
je
in
(bad)
mov
mov
test
adc
jp
sbb
idiv
loop
mov
push
pushf
xor
and
mul
in
sub
sub
int3
mov
rol
adc
(bad)
push
xor
and
jmp
add
aas
je
xor
inc
jp
sbb
cli
(bad)
js
mov
mov
scas
cmps
jae
mov
xor
mov
push
cwde
test
xchg
or
mov
jo
pushf
nop
sbb
pop
lahf
cmps
ins
cli
int3
mov
push
cdq
fcomp
push
push
bound
jg
push
dec
mov
xor
xor
sub
pop
leave
int
lock
mov
mov
in
int3
int3
cli
in
shl
xor
or
mov
and
sub
adc
sub
add
not
dec
jmp
adc
(bad)
in
pushf
xor
sti
xor
pop
xor
and
mov
fmul
ret
mov
fsub
mov
sbb
push
jnp
cld
xor
js
push
inc
std
jo
dec
pop
adc
test
int3
inc
cmp
mov
xor
xchg
mov
in
mov
rcl
dec
jl
test
sahf
nop
je
cwde
std
ins
scas
mov
lds
dec
lods
mul
fs
repnz
retf
mov
jl
cmp
repnz
mov
cwde
xchg
and
dec
inc
inc
jns
xor
sub
dec
in
ss
or
test
and
cli
clc
sahf
mov
enter
clc
lods
cs
jl
test
test
daa
adc
adc
jb
add
sbb
mov
add
or
dec
sub
cmp
loope
shl
loop
jo
call
mov
xchg
add
inc
pop
je
sub
xor
sub
push
adc
push
dec
jns
inc
ss
or
mov
pop
test
sahf
loopne
retf
jne
test
js
stos
xchg
mov
cmps
pop
call
js
sbb
mov
jl
int
std
sbb
ret
mov
jl
test
clc
jl
or
daa
int
jnp
pop
loopne
mov
sub
mov
femms
in
gs
std
stc
pop
sub
mov
xor
pop
fdiv
mov
cmp
sar
sub
xor
js
push
in
test
add
sub
adc
sbb
pop
dec
pop
in
mov
jecxz
sub
pop
xor
adc
cli
jmp
das
mov
inc
cs
js
sub
std
in
mul
pop
ins
xchg
neg
and
pop
jne
daa
jnp
push
inc
ins
mov
int
js
movs
cli
mov
retf
mov
in
ds
cli
cwde
test
add
nop
push
in
push
ret
mov
lods
ins
push
sar
dec
cmps
fs
jl
aad
mul
fisub
mov
jmp
hlt
or
in
push
sti
cli
out
pushf
push
and
pushf
xor
test
push
mov
shl
out
iret
imul
mov
jmp
add
push
ja
or
adc
(bad)
jmp
xor
sub
xchg
or
dec
pop
add
std
cmp
cli
in
retf
neg
jp
or
cli
shl
jo
dec
fsubr
cmp
mov
adc
jne
mov
xchg
fst
inc
ins
push
lods
js
js
xchg
stos
sahf
mov
dec
mov
xchg
enter
push
aam
sti
jo
and
(bad)
add
jmp
jl
inc
aas
cmp
inc
jne
int
test
or
movs
(bad)
clc
loopne
pop
int3
jb
inc
cmp
push
xchg
or
mov
test
pushf
jb
(bad)
(bad)
mov
aam
sbb
js
push
xchg
outs
fs
jne
call
popf
xor
dec
cld
cmp
sbb
in
hlt
pushf
mov
ds
jne
push
or
dec
cmp
(bad)
js
pop
cmp
std
mov
repnz
in
dec
dec
aaa
test
xor
jo
je
add
push
xor
sub
adc
fs
mov
dec
movs
jns
mov
sub
xchg
pop
test
jb
lea
fs
mov
addr16
iret
clc
jl
nop
movs
mov
add
and
sub
jmp
push
inc
hlt
lock
sbb
mov
fstp
cmps
dec
test
cmps
xchg
mov
enter
sub
sub
pushf
sub
sub
shr
fidivr
fcom
ins
pop
sbb
in
hlt
out
data16
(bad)
jns
adc
icebp
js
ins
push
pop
pop
daa
adc
cld
in
push
sbb
sar
xor
mov
and
sub
or
push
ds
fs
fdiv
add
gs
cmp
cld
add
sbb
movs
adc
data16
xor
retf
outs
loopne
mov
mov
cmp
mov
mov
nop
(bad)
mov
jns
jmp
push
or
out
and
out
in
js
mov
mov
rcr
or
or
jp
sub
and
mov
mov
and
das
mov
xor
adc
add
js
(bad)
in
daa
jl
into
(bad)
xor
clc
jl
fs
push
dec
jl
pop
jmp
loop
and
push
nop
adc
daa
(bad)
adc
xor
int3
nop
add
call
xor
jl
imul
jb
sub
div
mov
shr
jb
mov
idiv
test
xor
push
mov
inc
rcl
and
dec
imul
jno
out
cmp
bnd
cwde
xor
mov
cmp
fs
lods
test
jae
xor
xchg
pop
push
push
mov
xor
call
sbb
mov
in
jp
adc
std
shr
and
les
lds
js
retf
test
sub
mov
mov
jb
xlat
mov
jmp
in
out
jmp
(bad)
mov
out
lock
pop
or
mov
fbld
cmp
fild
pop
test
adc
push
jl
add
jp
sbb
push
inc
push
sbb
adc
pop
pop
cld
je
jb
jne
push
stc
js
mov
clc
mov
cwde
push
jns
(bad)
mov
lods
rol
data16
mov
xchg
mov
adc
loope
mov
les
adc
sub
hlt
scas
test
fiadd
jo
jbe
sahf
sub
push
out
int3
ins
jmp
les
cli
xchg
(bad)
pushf
shl
and
clc
shl
lds
and
data16
sbb
cld
jae
mov
in
pop
jl
in
cld
sub
mov
xor
cli
imul
fnsave
mov
adc
arpl
pushf
jo
sub
nop
push
in
loop
mov
or
push
add
push
jne
in
jnp
pop
div
or
ficomp
int3
sbb
clc
jns
dec
push
frstor
push
dec
jp
arpl
clc
jne
das
mov
test
repnz
call
cwde
xchg
stos
js
aam
xchg
inc
imul
dec
jo
mov
aad
stos
mov
loop
jo
add
sbb
shl
out
lods
test
imul
sar
in
cs
mov
js
dec
pop
and
add
mov
lock
cmp
and
xchg
test
sti
jne
mov
stc
mov
push
pop
test
repz
jl
xchg
sbb
or
push
out
xchg
je
adc
xchg
or
xor
jo
into
hlt
loope
dec
(bad)
int3
cmp
mov
pop
pop
xor
mov
addr16
lds
or
pop
add
adc
sbb
test
jne
sub
sbb
int3
dec
dec
dec
add
out
sub
loope
pop
sbb
in
push
rol
add
and
mov
mov
sbb
in
jl
and
ins
clc
cmps
lahf
sbb
in
jno
xchg
icebp
out
in
fwait
pop
mov
ret
mov
mov
shl
inc
ds
mov
cmp
mov
loopne
mov
and
clc
fdivr
jmp
clc
std
in
fisub
and
je
in
sbb
pop
jo
mov
add
(bad)
cmp
dec
mov
xor
fs
push
dec
pop
in
repnz
std
cmc
mov
loope
push
jne
or
push
inc
jmp
sbb
xor
hlt
push
das
inc
cli
sub
sar
xchg
pop
jl
pop
push
xor
sbb
sti
sti
push
push
push
jae
retf
lahf
push
jl
jbe
loopne
mov
out
shl
xor
pop
mov
ins
or
fs
sbb
push
jae
scas
sub
das
lock
jbe
dec
rcl
pop
cmps
sbb
std
test
scas
ficomp
xchg
xchg
jns
retf
leave
js
aaa
xor
in
test
mov
cmps
inc
or
arpl
and
test
add
dec
fimul
or
add
ins
ins
cmp
xor
xor
or
std
sbb
(bad)
sbb
sti
das
in
jo
aam
jmp
sbb
dec
inc
lar
pop
inc
add
cmp
push
pop
pop
sbb
sbb
inc
std
add
rep
cmp
jp
push
or
cmp
sbb
lock
fcomip
dec
cmp
sub
add
cld
imul
aam
sub
popf
fmul
in
sbb
or
mov
mov
mov
gs
pushf
mov
test
cmp
xor
hlt
repz
stos
push
sub
xor
xor
pop
lods
jne
out
sbb
pushf
pushf
or
clc
push
or
pushf
push
push
or
out
je
push
js
call
pop
dec
ins
out
mov
jl
adc
imul
cmp
fnstcw
int3
(bad)
and
adc
xor
sbb
je
jnp
ins
addr16
call
jb
mov
jae
push
inc
dec
inc
fsub
aas
cld
das
and
aam
sar
pop
cmp
or
je
add
and
adc
ins
sbb
aam
jl
ja
push
stc
jo
in
test
jns
or
rcl
loope
or
push
(bad)
inc
loopne
jo
xchg
mov
ins
(bad)
les
push
mov
xor
(bad)
test
and
mov
ins
addr16
jns
stc
jmp
nop
imul
int3
retf
out
jecxz
mov
imul
pop
out
cli
pop
push
jl
cmps
xor
lock
and
pushf
push
push
pop
std
jmp
adc
or
clc
jp
adc
iret
push
push
cmp
outs
xor
jo
dec
inc
add
xchg
push
int3
loopne
das
dec
mov
sbb
xor
mov
adc
adc
fdivr
push
mov
scas
mov
or
in
fs
fwait
xchg
add
imul
nop
hlt
pop
pop
pop
sbb
sbb
arpl
call
mov
xchg
fcomp
xor
cmp
cmp
and
cmp
push
or
fcom
push
sbb
xchg
clc
pop
sti
push
mov
icebp
out
clc
add
sar
shl
les
mov
js
(bad)
mov
int
outs
fmul
jb
in
jne
jmp
push
hlt
out
cmps
fsubr
cwde
cs
shl
imul
push
leave
je
and
and
add
(bad)
out
mov
test
jge
inc
cmp
psllq
bound
imul
jl
mov
or
gs
cmp
jl
das
add
or
adc
or
stc
pushf
fwait
js
xor
mov
data16
aam
imul
outs
pushf
sub
sub
push
iret
jge
cmp
xor
cmp
and
js
or
push
into
ret
jae
or
movs
bound
adc
js
(bad)
mov
fcom
sbb
xchg
push
cmp
std
and
cmp
mov
jo
sar
mov
je
adc
push
pop
adc
mov
test
or
sub
mov
adc
add
push
ret
and
sbb
call
test
stc
lock
add
sti
repz
jl
sbb
jge
and
or
dec
pushf
in
adc
fdiv
test
jp
adc
(bad)
pop
and
dec
(bad)
adc
or
ds
test
addr16
cmp
cmp
adc
call
les
cmp
movs
out
leave
clc
sbb
mov
data16
pushf
stc
jmp
cli
gs
cmp
inc
call
movs
adc
mov
xor
popf
mov
cld
fwait
mov
sub
call
dec
jo
lods
std
test
xor
jne
jnp
push
inc
scas
les
fild
mov
mov
cmp
cwde
xor
dec
pop
pop
pop
pop
inc
dec
sub
in
popa
xor
enter
push
add
adc
fst
fisub
stc
icebp
push
sub
fdiv
mov
pop
movs
or
outs
jle
push
jne
lahf
cli
push
sub
adc
std
je
aaa
xor
les
sbb
cwde
fsub
and
mov
xor
fcomp
push
into
retf
int3
(bad)
hlt
frstor
ret
pop
jl
fidivr
aam
mov
std
mov
lods
clc
add
sbb
cmp
je
fwait
je
xchg
and
lods
frstor
js
dec
sar
inc
xor
cmp
pop
xor
(bad)
(bad)
clc
adc
sbb
sbb
in
cli
xchg
std
js
or
add
sub
dec
xor
hlt
jno
inc
and
and
cli
sbb
cs
or
push
les
cwde
and
sbb
cmp
sbb
sbb
cmp
add
jmp
scas
xor
and
mov
push
jle
pop
ds
xor
les
and
or
xor
xchg
add
fwait
jne
push
adc
shr
add
mov
enter
push
out
mov
push
aam
jbe
(bad)
xor
jns
out
loope
mov
je
les
test
mov
stos
xchg
dec
js
mov
je
cwde
mov
fs
xchg
add
(bad)
mov
out
dec
ds
inc
cmp
dec
je
ins
and
mov
test
xor
jp
push
add
mov
repnz
cs
lock
push
adc
repz
sbb
std
mov
cmp
lods
lock
les
and
loopne
in
add
les
(bad)
jl
ins
das
fdivr
loopne
mov
dec
inc
mov
and
sub
fwait
pop
je
cld
and
jne
add
mov
hlt
jl
push
add
mov
movs
xor
push
ret
mov
in
fadd
fdiv
icebp
in
addr16
out
mov
add
push
cmp
loope
dec
enter
pop
movs
xchg
aad
sti
jo
xchg
push
je
std
xor
mov
mov
je
inc
cld
or
aaa
sub
in
sbb
xor
sbb
jmp
xor
push
in
test
sbb
mov
ss
sub
popf
sbb
adc
dec
sub
pop
or
in
loope
dec
imul
std
xor
sub
push
rol
jmp
je
fbstp
jmp
add
loop
add
movs
cmp
repz
xor
sub
jne
std
clc
daa
and
repz
or
movs
mov
sar
aam
cmp
rcl
mov
popf
ret
pop
js
dec
(bad)
mov
jmp
data16
js
les
cmc
test
add
xor
test
test
xchg
xchg
mov
push
call
adc
ss
ds
and
or
add
cmp
ud0
jl
sbb
cld
jne
sbb
sbb
or
adc
cmc
push
cmp
aam
or
repz
pop
mov
nop
fmul
sub
nop
jp
mov
xchg
loopne
mov
int3
jl
in
nop
out
cmp
lahf
jb
sub
nop
rcl
hlt
hlt
stc
dec
in
out
icebp
es
pop
sbb
(bad)
xor
mov
mov
data16
(bad)
mov
mov
mov
xchg
cmp
fwait
gs
jle
sar
push
js
sub
lahf
mov
lods
cmps
in
ins
cli
sbb
xor
push
dec
inc
in
cmp
adc
out
jne
or
lods
dec
aas
das
add
pop
sub
sahf
std
aam
adc
adc
cmp
imul
pushf
inc
(bad)
jmp
adc
imul
pusha
add
mov
pushf
xor
pop
xor
loop
mov
push
nop
ins
xor
push
mov
dec
sbb
add
shr
in
xchg
mov
pop
movs
in
add
dec
jmp
inc
push
mov
xchg
or
ret
int3
adc
lock
cld
push
fwait
cwde
and
push
pop
js
cdq
mov
pop
in
cwde
xchg
cld
call
lahf
cdq
push
stos
movs
std
fsub
fnstenv
cmp
pushf
push
dec
cmp
mov
fs
sbb
push
inc
add
push
push
dec
shl
inc
xor
fs
cwde
cld
imul
mov
mov
in
out
out
rcr
mov
adc
in
add
jo
je
aas
clc
adc
adc
fst
ins
jl
push
xchg
mov
lods
mov
cmp
int3
fsub
sbb
jmp
loope
enter
fcom
ds
mov
sub
js
(bad)
les
fcmovbe
fmul
cmp
(bad)
add
je
jg
scas
cmp
clc
ins
nop
xchg
imul
test
xchg
push
mov
fwait
xchg
test
and
xchg
fsubr
jp
aaa
xor
lods
xor
and
and
lea
stos
cwde
add
jmp
mov
inc
cmp
ss
je
enter
xor
pushf
pop
sub
data16
lock
pop
and
push
and
adc
mov
push
dec
js
cmps
mov
loopne
jl
data16
sbb
inc
call
sub
cmp
sbb
fcomp
mov
sbb
add
jp
in
fmul
ror
(bad)
push
ror
stos
pop
cli
js
xor
test
sahf
test
cmp
mov
xchg
mov
je
stos
mov
mov
mov
test
jl
xchg
je
jo
add
xor
cli
dec
xor
les
xor
lods
fisub
loop
jb
pushf
imul
cmp
cs
ss
push
xchg
cmp
pop
push
add
cmps
mov
sbb
in
cmp
mov
mov
dec
mov
jo
les
in
fsubr
add
cli
fsub
and
in
test
shr
enter
mov
in
mov
ins
push
xlat
js
out
fidivr
dec
(bad)
std
js
mov
mov
movs
sbb
mov
loope
xchg
xchg
mov
mov
push
push
jbe
sbb
push
dec
fwait
nop
je
mov
sub
sub
stc
hlt
cmp
xor
nop
addr16
stc
mov
shl
hlt
pop
pop
push
inc
ins
pusha
inc
cmp
jl
(bad)
ins
or
or
std
rcr
xor
jno
pop
inc
data16
jl
cmp
jmp
les
movs
jp
xor
push
cs
mov
leave
les
aam
movs
loope
mov
and
mov
retf
sar
loopne
dec
dec
fcomp
into
lock
loope
fs
and
js
repnz
js
sub
pushf
xchg
sub
test
aam
xchg
mov
mov
(bad)
sti
fisttp
mov
in
mov
xchg
cmp
mov
dec
xchg
inc
sahf
adc
sub
push
inc
cmp
mov
shl
cld
js
jmp
cmps
mov
push
xor
lods
push
xor
jne
jns
ss
mov
les
pop
push
push
and
cmps
xor
sub
sbb
inc
dec
cmp
cld
popf
std
mov
jecxz
mov
sub
ficomp
cmp
add
mov
outs
ror
repnz
int
mov
mov
ins
(bad)
nop
jecxz
mov
fs
sar
mov
shl
jmp
js
out
inc
sbb
cld
pushf
sub
mov
xchg
(bad)
in
mov
nop
movs
loop
sbb
mov
mov
push
mov
jmp
add
xor
sbb
inc
push
jl
xchg
jnp
fcom
dec
test
std
sub
(bad)
mov
push
push
mov
pusha
dec
jmp
js
adc
sub
and
mov
sub
shl
sbb
jl
dec
sub
xor
lods
cmp
cld
addr16
cs
pop
jb
in
xor
mov
hlt
std
(bad)
in
in
jmp
sub
mov
js
mov
hlt
je
(bad)
in
lock
sbb
push
ins
or
pop
out
les
fidiv
fxch
and
xchg
test
mov
test
(bad)
mov
adc
mov
jl
lea
lds
add
mov
cli
hlt
or
test
mov
jne
mov
add
and
pushf
sar
shr
sub
cmp
out
add
adc
sub
and
cmp
bound
jne
xor
inc
pop
cmp
cmp
mov
aad
jmp
jns
out
jmp
aad
push
movs
leave
lods
dec
fcmovne
popf
clc
cwde
icebp
mov
je
pop
leave
rcl
je
fld
mov
mov
ret
cvtps2pd
pusha
push
adc
mov
cmp
sub
loopne
out
and
(bad)
cs
lock
xchg
js
cmp
fdiv
and
das
sub
adc
push
shr
push
jne
inc
sbb
sub
jne
xor
cmp
sub
xor
mov
and
or
ss
add
xor
dec
inc
inc
int
ror
fsub
loope
loopne
xor
mov
push
ror
in
mov
enter
sub
mov
call
jo
fsub
jl
mov
test
dec
inc
(bad)
in
fsub
mov
es
test
pop
lock
in
fisttp
xchg
mov
sbb
inc
test
sub
test
js
xor
jo
dec
sbb
xor
sub
daa
adc
js
xor
aaa
xchg
add
aaa
mov
dec
push
xor
push
loop
in
je
inc
inc
xor
cmc
cmp
jl
out
out
aas
repnz
(bad)
bound
pop
in
mov
pop
in
adc
fstp
mov
lock
enter
iret
ja
retf
mov
enter
jne
cmp
inc
jne
jmp
push
adc
dec
adc
test
rcr
pushf
mov
into
xor
fwait
xchg
mov
mov
scas
pop
dec
movs
xchg
or
xor
(bad)
push
add
call
add
push
cmp
xchg
imul
and
ins
mov
pop
and
pop
sbb
test
sub
stc
xchg
pusha
inc
mov
and
ins
popa
inc
inc
fdivr
int
xor
jp
cmp
das
out
int3
sub
jo
push
sub
and
dec
test
je
push
(bad)
mov
(bad)
lds
ficomp
js
aad
sbb
mov
mov
ins
sbb
les
xor
lods
lahf
pushf
fmul
pushf
mov
cmp
std
mov
mov
clc
repz
pushw
push
jmp
pushf
pusha
and
sbb
jl
inc
cmp
mov
jo
nop
cli
and
or
inc
lods
lods
clc
in
mov
sub
pop
cmp
popf
inc
cmp
xor
dec
dec
aas
pop
cmp
and
adc
xor
in
xor
out
mov
sub
push
jecxz
pop
xor
les
je
xchg
js
pop
mov
shr
jne
mov
mov
int
dec
(bad)
leave
mov
mov
dec
mov
mov
je
or
adc
cmc
mov
stos
jne
ret
push
test
lods
call
dec
mov
adc
and
and
sbb
pop
pop
mov
pop
daa
pop
xor
jl
jo
sbb
and
push
std
loopne
or
je
sbb
adc
add
je
xor
xor
js
mov
call
sub
sbb
mov
pop
mov
jl
icebp
out
jecxz
mov
int
in
jl
jl
cwde
sbb
rcl
pusha
cmc
test
arpl
stos
fidiv
stc
fmul
ret
jae
sahf
cmp
lods
test
out
xchg
inc
jmp
imul
js
sbb
mov
pop
fs
xchg
sar
xor
mov
and
ins
mov
(bad)
pushf
std
xchg
and
xor
mov
jge
adc
std
aas
mov
add
cmp
add
das
jmp
nop
push
mov
std
xchg
sub
or
inc
xor
aam
add
(bad)
push
dec
inc
mov
dec
jl
js
out
loop
pusha
cs
xor
xor
and
cwde
stos
sub
enter
js
pushf
nop
fmul
scas
inc
aam
mov
jl
cmp
in
push
into
jp
stc
jmp
jl
mov
mov
dec
and
std
nop
mov
xchg
adc
icebp
fwait
pop
lea
call
add
repz
pop
xor
adc
push
popf
mov
adc
sar
jl
sbb
or
jbe
daa
adc
push
ins
pusha
cmp
xchg
popf
inc
sub
or
adc
call
test
jecxz
mov
pop
icebp
call
nop
test
lods
push
cmc
out
int
sbb
loop
int3
mov
leave
sbb
rol
popa
aam
mov
js
lods
movs
dec
nop
outs
xchg
test
jne
mov
test
les
jmp
cmp
clc
retf
pushf
and
movs
mov
sahf
xchg
xchg
jo
call
and
or
idiv
call
push
push
adc
lods
adc
popf
mov
cwde
std
inc
jne
or
nop
push
push
pop
aam
in
sub
xor
mov
pop
add
pop
adc
pop
xchg
or
sbb
je
test
push
xor
jns
jl
cmp
mov
sbb
jl
in
push
call
inc
lods
or
cli
out
inc
adc
add
in
jg
in
popa
clc
jmp
cmp
jmp
ins
dec
xor
jp
mov
sbb
pop
sbb
mov
xor
jl
xlat
enter
imul
jae
or
movs
jl
stos
pushf
push
in
push
nop
or
call
pushf
test
fist
int3
movs
lods
pop
and
mov
clc
repz
popa
std
or
lock
out
fmul
or
in
clc
sysret
hlt
dec
sbb
cmp
outs
cwde
or
dec
js
ins
es
jne
xor
push
inc
cli
inc
inc
ss
test
jae
inc
aas
jnp
sbb
and
mov
jp
(bad)
xlat
mov
jmp
cld
jp
mov
movs
fsub
xchg
jmp
mov
nop
mov
cmp
lods
mov
stos
fisttp
cmps
and
mov
js
mov
in
jl
or
loopne
push
and
mov
mov
cwde
clc
lea
xchg
adc
test
nop
add
jmp
sbb
cld
call
fcom
rcl
stc
mov
pop
js
adc
pop
fs
mov
add
xor
lods
mov
sbb
adc
cmp
xchg
sbb
xchg
push
mov
fs
and
data16
aad
jl
js
lock
jmp
push
mov
jmp
call
hlt
in
sbb
push
sub
push
scas
test
pop
movs
js
jns
mov
add
popa
mov
aam
mov
or
xor
sub
movs
fsub
xor
nop
bound
stc
jecxz
(bad)
dec
mov
mov
mov
js
and
xlat
in
test
xchg
xor
nop
mov
dec
jo
pusha
sbb
std
inc
and
jmp
sbb
dec
jl
xor
ds
jo
movs
fwait
sbb
loopne
xchg
test
mov
mov
jo
ins
push
jl
push
mov
scas
mov
repnz
mov
push
clc
push
or
iret
clc
add
nop
cmc
mov
add
div
mov
pop
in
lds
pop
data16
ins
dec
test
clc
mov
sar
and
test
repz
jle
data16
es
nop
mov
call
les
nop
xor
test
out
jl
push
adc
xchg
push
mul
jmp
sub
pop
inc
add
pop
and
push
dec
ins
pop
test
sbb
iret
xor
cmp
xlat
je
mov
sub
mov
nop
cmp
pop
jl
jbe
(bad)
cmp
in
jl
push
js
in
xchg
mov
xchg
stos
call
push
hlt
xchg
dec
mul
inc
pushf
push
loop
shl
push
mov
xchg
js
mov
je
mov
scas
gs
cli
enter
je
pop
addr16
mov
je
cli
mov
aad
ins
adc
cwde
or
jmp
cld
jae
sub
cmp
cwde
push
adc
add
je
pushf
hlt
jle
sbb
outs
and
or
sbb
bound
pmuludq
xor
lods
js
mov
dec
es
sub
shr
test
or
xor
jne
inc
mov
mov
jecxz
aas
hlt
xor
jmp
stc
pushf
xlat
ret
fisttp
xchg
and
fisubr
in
jecxz
js
rcl
mov
fcom
dec
xchg
adc
ins
sbb
imul
movs
jmp
iret
nop
aam
adc
inc
xor
test
sub
retf
sbb
lods
inc
dec
cmc
jecxz
jo
jns
lock
mov
mov
and
fcomp
stos
adc
or
sbb
(bad)
cmp
or
test
or
or
popa
sbb
(bad)
pop
adc
ins
sbb
pusha
adc
sub
and
xchg
js
inc
xor
cmp
cmp
(bad)
cld
cmp
mov
cmps
xor
je
in
pushf
aaa
in
sub
pushf
ja
cmps
nop
cmp
jl
lods
mov
pop
test
add
xchg
inc
pushf
xchg
loop
adc
jbe
lock
mov
push
push
sar
mov
lock
enter
dec
xor
leave
rol
jmp
mov
sub
add
cs
test
push
and
ins
fs
repz
sub
pop
pushf
mov
in
mov
sbb
or
adc
dec
and
push
sub
jae
xchg
pop
sub
cmp
mov
pop
sbb
ins
test
mov
mov
jl
add
mov
mov
sub
in
cmps
xor
stc
in
(bad)
ret
outs
push
out
test
mov
push
pop
mov
sub
xor
jmp
sub
(bad)
jp
(bad)
mov
lods
and
pop
leave
(bad)
mov
add
enter
pop
je
shl
add
imul
aam
call
mov
int3
push
stos
enter
jne
lods
fs
enter
lahf
ins
push
sub
inc
pop
js
jmp
and
xor
and
push
or
fcomp
mulps
cwde
imul
push
jmp
xor
adc
imul
jl
test
out
loopne
ins
jl
cdq
and
pusha
cmps
rcr
inc
push
mov
pop
dec
movs
in
test
in
out
xor
fs
jmp
fcom
mov
test
les
mov
pop
mov
xchg
xor
xor
mov
(bad)
jmp
jmp
js
xor
enter
pop
es
xor
xor
sar
or
mov
mov
xchg
and
pop
push
adc
jp
sbb
mov
mov
fistp
adc
(bad)
clc
and
call
push
inc
cmp
cwde
or
imul
gs
mov
js
dec
cwde
stos
cmc
nop
mov
ss
or
pop
sar
je
push
retf
jl
in
ins
fwait
jo
out
fisubr
fsubr
jmp
inc
data16
add
push
fsub
mov
push
sub
mov
mov
in
push
cmp
fiadd
aad
das
sub
jg
fild
in
loopne
mov
and
out
or
js
out
outs
fucomip
mov
push
push
mov
xchg
shl
sar
cmp
push
dec
dec
in
cs
cmp
pop
inc
shl
xchg
sar
mov
xor
inc
test
test
jmp
cwde
leave
jl
mov
enter
pop
sbb
jl
in
sub
sub
dec
xor
and
inc
mov
fs
xor
add
repz
lds
sbb
je
loop
mov
sbb
pushf
dec
in
adc
jb
jmp
in
pop
sbb
repz
rcl
test
push
add
adc
cs
jne
and
mov
sub
retf
cmp
(bad)
push
pusha
push
fadd
adc
sti
add
ins
sbb
sub
jae
int
out
sar
shl
cmc
call
jp
bnd
loop
cmp
push
jmp
inc
movs
pop
and
pushf
leave
jmp
sahf
cdq
add
stc
mov
mov
test
stos
cmps
test
loope
rcr
push
dec
iret
or
stos
sahf
and
push
pop
inc
mov
scas
sbb
popf
sub
dec
or
cmps
and
std
(bad)
mov
mov
or
fwait
mov
call
pop
adc
pop
(bad)
nop
mov
int3
push
popf
je
cmp
push
pop
sahf
mov
mov
mov
lock
je
mov
nop
test
in
call
(bad)
scas
jl
mov
jge
add
lock
mov
(bad)
clc
enter
dec
xor
dec
dec
xchg
loopne
ss
leave
cmp
push
je
hlt
in
adc
mov
out
out
pusha
add
ror
fcomi
sub
add
pop
hlt
(bad)
lock
push
in
xchg
inc
sbb
fmul
jmp
std
mov
loope
mov
je
adc
add
jb
aam
xor
in
sbb
in
pop
xchg
repnz
jmp
dec
cwde
pop
adc
retf
jno
shl
jo
lahf
int
jne
or
out
test
inc
pushf
fnstenv
inc
ins
cs
fdiv
je
dec
sub
mov
call
pop
push
ins
jp
jbe
fistp
aaa
cmp
ss
sub
mov
inc
mov
mov
fsub
xchg
adc
int
push
jae
fldcw
inc
jl
js
stos
or
jne
fmul
stos
xchg
pop
rcl
jbe
pcmpeqw
cmp
mov
jp
fidiv
js
stos
ins
or
ja
rcr
cmp
shr
mov
in
xor
js
push
sub
adc
sub
jbe
fs
gs
fsubr
mov
test
scas
in
sbb
dec
enter
(bad)
cmc
and
int3
sbb
(bad)
js
(bad)
aam
and
and
retf
mov
mov
test
or
outs
movs
je
lea
mov
and
jl
ins
mov
mov
scas
add
mov
fld
adc
adc
xchg
test
data16
repnz
jmp
cwde
(bad)
fsub
cwde
mov
mov
push
xchg
add
xor
out
cmps
int3
push
movs
adc
pushf
fiadd
mov
call
mov
jns
sti
jb
jae
mov
adc
lock
or
nop
xor
xchg
shr
add
mov
cld
or
push
mov
aad
xchg
repz
repnz
mov
sub
fisubr
test
mov
mov
cmp
and
js
shr
cmp
xchg
mov
cdq
clc
rcl
hlt
jmp
call
jae
les
pop
loopne
movs
test
mov
xor
xchg
aam
loop
les
sar
jecxz
int
nop
test
imul
das
aam
dec
mov
int3
xor
imul
mov
or
mov
cld
xor
jmp
push
fcomp
gs
daa
test
mov
sub
adc
mov
add
xchg
jle
pusha
lods
cmc
dec
cmp
aad
fs
inc
push
xor
pop
xchg
jle
test
adc
mov
sar
jle
imul
retf
ret
cwde
xor
lahf
mov
mov
cld
shr
leave
sbb
shr
mov
adc
in
movs
jns
stc
div
and
aas
ins
addr16
sar
cmp
xchg
mov
jne
xchg
mov
xchg
js
xchg
ins
aam
test
js
xchg
and
out
mov
sbb
sub
bound
xchg
xchg
cmp
jne
sbb
or
xlat
add
push
mov
jns
scas
xchg
jne
xlat
xchg
ss
mov
stos
add
cmp
xchg
adc
or
out
adc
iret
xor
pop
xchg
aam
adc
sub
movs
cli
xor
nop
(bad)
mov
and
mov
je
les
fwait
test
test
mov
cdq
mov
je
bound
push
pusha
js
clc
sar
xchg
fwait
mov
call
sub
fnstsw
gs
pop
cwde
ffreep
xchg
(bad)
dec
pop
js
clc
jl
push
fdivr
lods
or
ret
ret
mov
jo
mov
int3
ins
ds
mov
neg
enter
mov
add
mov
jl
xchg
push
mov
cld
out
retf
push
test
adc
call
lods
pushf
mov
mov
mov
pop
(bad)
cld
test
mov
xchg
mov
in
fsub
std
jle
sub
xchg
xchg
dec
aad
mov
je
xor
xchg
lahf
jmp
lea
pop
sbb
adc
cdq
movs
and
sub
pop
mov
in
mov
mov
lods
sbb
enter
add
jo
cdq
push
lahf
das
mov
jecxz
mov
jmp
out
popf
sub
aam
leave
mov
cmps
enter
in
sbb
ins
nop
jmp
dec
je
in
pushf
add
jo
pop
rcl
pushf
xchg
dec
push
test
js
pop
inc
dec
loopne
xchg
ins
xchg
jne
lea
movs
out
xor
(bad)
push
adc
hlt
lahf
test
xchg
lahf
arpl
add
fwait
push
jo
xchg
pop
adc
sahf
movs
call
mov
cld
add
lods
cdq
pop
xchg
scas
jmp
jl
mov
pop
data16
aam
xor
enter
dec
sbb
sbb
xchg
jbe
or
test
cmp
jp
(bad)
lock
push
test
sbb
xchg
pushf
pop
or
ret
mov
das
sti
fmul
pushf
div
cli
test
xchg
clc
xor
adc
mov
adc
add
add
or
(bad)
xor
in
out
popf
nop
push
enter
mov
jns
or
ret
dec
jmp
mov
push
xor
je
fidiv
or
imul
lds
mov
shl
(bad)
out
and
mov
loopne
mov
jo
enter
sbb
fwait
add
int
jmp
ss
out
hlt
je
out
out
in
loop
or
push
add
add
imul
mov
clc
clc
cwde
in
shr
dec
out
ror
dec
outs
xor
dec
and
jp
pop
loopne
mov
jl
or
or
push
jmp
sub
leave
ja
idiv
clc
repnz
add
inc
add
dec
fistp
loope
icebp
pop
and
out
in
ins
jmp
add
add
mov
or
js
lods
test
jns
jnp
loope
mov
mov
in
lock
sub
faddp
lock
(bad)
in
push
pop
icebp
fsub
and
adc
out
lock
mov
loopne
mov
scas
in
mov
or
lods
push
push
jne
cmps
test
or
mov
retf
xchg
and
mov
xchg
and
test
fsub
(bad)
mov
enter
mov
mov
xor
jge
loope
rcr
jmp
jp
mov
xchg
in
mov
dec
jl
dec
in
hlt
shr
dec
cmp
in
cmp
int
add
retf
in
mov
test
add
dec
aad
int
loopne
aam
jmp
fsubrp
and
fucomi
mov
mov
pusha
enter
in
test
mov
xchg
cwde
xchg
sbb
or
and
test
outs
mov
sub
mov
(bad)
xor
mov
movs
ins
add
in
sub
neg
mov
arpl
jp
pop
cmps
jo
(bad)
xchg
xchg
pusha
nop
xchg
fidiv
fld
xor
push
mov
jb
xchg
ret
push
pushf
adc
mov
in
adc
sti
and
pushf
(bad)
fnstenv
aam
pop
mov
popa
mov
int
idiv
cmp
and
dec
rcr
nop
test
jge
jmp
(bad)
sbb
enter
sub
popf
ror
(bad)
imul
jl
sar
jl
fdivr
clc
(bad)
mov
lods
ins
sub
jns
nop
popf
jns
mov
pusha
mov
js
int3
sar
mov
leave
mov
pop
fist
xlat
mov
push
imul
sbb
mov
jb
shr
jne
xlat
jp
lock
test
lods
xor
shr
stos
mov
aaa
push
sbb
mov
xchg
xchg
test
mov
adc
push
mov
movs
das
fwait
sbb
stc
sub
jl
add
push
mov
nop
sub
mov
mov
lahf
pop
xchg
xchg
ffree
fidiv
sub
ret
lds
add
jns
stos
mov
(bad)
mov
imul
js
mov
pop
cwde
jmp
icebp
out
jl
test
iret
push
fcmovbe
cmp
mov
sbb
(bad)
cli
rcl
ror
inc
pop
(bad)
ins
jb
fimul
xchg
cmp
jp
and
mov
sbb
mov
scas
xchg
les
mov
inc
imul
cli
pop
pop
fstp
sbb
int3
pop
and
fsub
fsubrp
cmp
mov
xchg
mov
test
jl
test
stc
in
cmp
fst
add
mov
lods
push
and
and
ret
les
enter
xor
popa
pop
fdivr
mov
nop
mov
call
js
jnp
stos
jne
xchg
xchg
leave
ret
lods
outs
mov
sar
mov
push
test
inc
mov
fs
retf
rcr
loop
shr
(bad)
data16
retf
sub
ins
in
int3
mov
cmps
mov
into
fdivr
aam
ins
rol
dec
xchg
js
adc
jnp
cmps
mov
push
iret
lods
ins
push
mov
adc
ret
push
repnz
fs
and
(bad)
xor
ins
hlt
mov
test
dec
xchg
cdq
je
cmp
xchg
xchg
mov
inc
push
mov
in
and
mov
pushf
pusha
scas
out
pop
jae
jp
mov
je
sahf
js
pushf
imul
ins
shl
mov
sbb
stos
push
jl
ret
sub
jl
(bad)
js
je
retf
cmp
les
mov
sar
mov
mov
mov
jae
mov
mov
out
mov
(bad)
mov
mov
scas
je
(bad)
ror
gs
int3
mov
mov
and
pop
mov
jmp
push
dec
inc
mov
sahf
repz
sub
aam
xor
xchg
push
mov
mov
dec
push
lods
jo
add
mov
adc
cld
cs
mov
push
(bad)
fcomp
mov
retf
mov
add
ret
out
adc
retf
xchg
jne
sub
movs
xor
nop
nop
sub
mov
(bad)
in
pusha
scas
lods
or
mov
push
sub
in
ss
rcl
(bad)
std
jl
loopne
mov
inc
addr16
jo
fst
cmps
cmp
mov
enter
vpsubusb
imul
aam
mov
jne
enter
aad
jae
mov
push
call
shl
fmul
jmp
push
push
test
dec
pop
in
mov
test
pusha
cmp
mov
sbb
int3
ret
xchg
pop
jmp
jo
std
in
xor
jl
cmps
cwde
mov
ret
mov
pop
rcr
dec
jg
rcr
int3
jmp
(bad)
retf
int
sbb
js
not
ficomp
mov
(bad)
iret
loopne
mov
jns
mov
movs
int
jmp
mov
enter
mov
test
mov
mov
sar
jo
mov
scas
ret
rcl
in
fadd
xor
sar
retf
fnsave
nop
inc
leave
call
fnstenv
jp
rcl
jl
jmp
bound
(bad)
pop
pusha
in
in
and
pop
cmc
js
push
mov
loopne
js
test
jae
aam
dec
addr16
cs
js
lea
jne
xchg
xor
cmp
ins
xchg
lahf
movs
inc
je
adc
mov
mov
ss
mov
je
daa
enter
pop
mov
inc
xchg
add
dec
push
xchg
mov
pushf
out
pushf
pop
out
in
xlat
cmc
out
int3
mov
int3
mov
aam
cmps
push
mov
push
mov
hlt
mov
xchg
(bad)
lock
cmp
ret
shl
pop
aam
jb
leave
enter
cmc
mov
mov
fbstp
jl
arpl
fucomp
test
dec
pop
loopne
add
aam
adc
in
push
loopne
pop
fisubr
into
jnp
rol
xor
fs
mov
test
mov
jmp
je
mov
jle
scas
je
test
adc
jae
sbb
nop
fmul
xor
mov
in
mov
fwait
shr
test
popf
movs
fisttp
cmp
cmc
(bad)
lock
xor
ret
jns
sbb
pop
fcom
mov
outs
mov
scas
int3
cwde
mov
test
ret
mov
pop
mov
mov
scas
cmp
mov
mov
mov
pushf
push
and
out
std
lods
addr16
loope
fs
(bad)
int3
ins
mov
fldenv
ret
out
add
sub
in
pop
dec
in
in
retf
ror
xor
in
in
(bad)
cld
call
sub
movs
(bad)
sub
mov
out
mov
retf
out
shl
rcl
imul
test
cwde
xchg
(bad)
je
xchg
cdq
call
mov
inc
fiadd
mov
test
sub
ror
dec
das
popf
mov
in
jae
repz
jecxz
push
enter
xor
jl
lea
xchg
mov
lock
jnp
iret
mov
cmp
mov
sbb
lds
pop
xlat
into
nop
je
iret
jae
fnstcw
fcmovu
out
repz
icebp
jns
jmp
cmc
lods
push
in
mov
int3
(bad)
or
fs
sub
and
in
neg
imul
iret
jbe
jmp
les
into
(bad)
and
pushf
pop
stos
sahf
jl
ret
sub
dec
mov
push
js
test
xchg
sbb
je
sbb
popf
sahf
in
add
(bad)
mov
popf
adc
jnp
fcom
push
push
fdivp
dec
fxch
jne
push
in
xchg
add
jle
loop
inc
mov
jl
out
fidivr
(bad)
mov
and
cmps
xchg
jns
int3
mov
idiv
mov
jl
mov
jl
sbb
ret
test
les
cld
push
and
dec
jne
(bad)
fs
(bad)
push
add
in
adc
(bad)
pop
(bad)
int3
aad
cld
jns
jmp
add
add
retf
cmp
neg
mov
mov
stos
cdq
repz
shr
mov
hlt
lods
xchg
sub
mov
pop
test
xor
pusha
mov
test
movs
movs
or
(bad)
and
mov
loopne
jnp
scas
test
push
test
in
jmp
das
adc
(bad)
shl
repnz
or
jbe
jl
mov
jmp
mov
push
mov
cwde
(bad)
loopne
xchg
mov
xchg
test
test
sub
sbb
mov
lods
jae
mov
in
mov
mov
enter
pusha
or
xor
pop
push
jecxz
ins
fild
mov
std
packssdw
adc
int
fdivr
mov
sbb
stos
lods
mov
je
mov
cld
nop
rcl
int3
mov
ins
pop
mov
je
sub
pusha
xchg
sbb
loopne
ret
mov
sbb
mov
xor
mov
mov
call
mov
inc
fxch
fdiv
jl
pop
test
fnstcw
lods
in
repnz
loopne
jecxz
aam
loop
mov
movs
aam
dec
mov
jl
dec
mov
je
retf
mov
or
scas
jb
popf
mov
mov
mov
dec
xor
push
(bad)
ja
lds
xor
xor
xchg
outs
sub
push
or
call
je
mov
sbb
cld
sti
push
ins
pop
movs
inc
imul
enter
or
add
clc
add
jo
pushf
nop
push
retf
push
rol
xor
xor
push
cmp
mov
dec
outs
sbb
(bad)
aad
fstp
sbb
xlat
pop
nop
retf
and
and
shl
les
leave
mov
fldcw
jnp
(bad)
dec
ins
out
les
pushf
push
push
les
jl
jmp
movs
loop
dec
inc
xlat
(bad)
jle
movs
cdq
call
dec
movs
mov
xor
retf
jb
sar
test
fisttp
(bad)
rcr
ret
mov
fist
sbb
repz
nop
dec
sbb
dec
out
lock
or
in
inc
(bad)
jne
hlt
lahf
jns
loope
icebp
jmp
inc
fmul
mov
xchg
push
add
mov
arpl
fisub
adc
mov
clc
cmp
sbb
int3
xchg
xchg
xchg
test
mov
rcl
unpckhps
icebp
sti
mov
das
xlat
ins
ins
hlt
fs
(bad)
int3
enter
aam
iret
jne
and
pop
leave
mov
fsub
xlat
cs
cwde
mov
jl
xchg
js
jl
mov
aam
loopne
pop
jecxz
cli
jl
mov
cmp
fdivr
mov
js
push
mov
mov
fcomp
or
fnsave
aam
jl
loop
jge
sub
(bad)
or
jp
adc
mov
jo
mov
leave
(bad)
je
loope
push
test
data16
adc
sti
lods
lods
or
shl
adc
pusha
cmp
into
cmps
push
sbb
pop
test
sbb
fisttp
push
(bad)
mov
aam
sbb
jo
outs
popf
fcomp
loope
fstp
add
jmp
ror
in
jo
mov
(bad)
shl
jmp
jge
stc
jmp
cs
int3
push
or
jl
fmul
sub
stos
mov
cmp
cmp
lahf
nop
xor
mov
ss
ins
xor
pop
push
mov
inc
mov
call
add
push
push
ror
sub
repz
lock
xchg
and
mov
mov
sub
mov
js
add
out
or
data16
div
add
inc
inc
xor
push
dec
inc
scas
xor
add
adc
sub
adc
push
ins
outs
adc
fcom
jns
mov
and
jecxz
repz
lea
ret
pop
jl
push
call
mov
and
dec
ror
(bad)
jecxz
jae
xchg
fs
push
in
jl
in
fcom
ficom
movs
fsubr
mov
pop
cwde
sbb
stos
sub
xor
fxch
mov
retf
mov
aam
and
mov
push
xor
mov
xlat
jnp
or
call
enter
inc
cmp
popf
mov
pushf
inc
scas
mov
sub
mov
je
ret
clc
mov
les
and
pop
in
dec
or
in
loop
cmp
push
xor
mov
inc
pop
add
xor
jnp
xor
inc
ds
iret
jnp
pop
pop
push
call
xor
bound
sub
add
pop
push
dec
add
dec
push
add
call
sbb
aad
mov
fild
js
(bad)
and
out
push
adc
nop
ficomp
outs
pop
test
js
jecxz
sbb
push
cmps
mov
and
mov
mov
push
inc
stos
sub
xor
sbb
(bad)
aad
je
jle
xor
sbb
xchg
xor
out
and
mov
pop
addr16
adc
cmps
pushf
nop
pusha
push
ret
jns
stos
scas
mov
in
in
inc
lods
xchg
je
cdq
mov
popf
push
enter
gs
pop
and
and
or
sti
neg
into
jne
and
jo
pop
push
inc
popf
push
dec
ins
cmp
and
leave
cmp
mov
sub
inc
cmp
data16
push
push
and
jo
test
push
mov
repz
test
add
xor
adc
mov
push
mov
nop
add
test
data16
lods
or
imul
add
jmp
mov
push
dec
int3
ins
mov
push
sbb
lods
jo
and
loopne
sub
in
dec
add
and
lods
imul
aam
inc
sti
hlt
inc
mov
xor
in
jmp
ss
in
push
mov
shr
scas
nop
mov
rcr
xchg
scas
xor
or
int3
xor
jo
pop
mov
daa
inc
sub
adc
sub
cmp
fmul
xchg
xor
dec
mov
ins
cmp
pop
add
jns
sbb
sbb
ins
xor
test
loopne
mov
push
loop
cs
fadd
mov
mov
pop
lea
ds
mov
mov
cld
mov
jb
out
in
movs
xchg
mov
mov
push
lods
sub
mov
popf
xor
xchg
adc
xchg
pop
(bad)
cdq
repnz
test
adc
(bad)
jne
pusha
pop
sti
test
loopne
(bad)
mov
ret
mov
mov
or
mov
stos
fs
pop
not
stos
cld
test
mov
out
js
jmp
sub
xor
sub
add
je
xor
xor
xor
mov
test
or
pop
js
repz
inc
xor
sub
popf
int3
pushf
sub
call
test
or
call
scas
jl
jns
jecxz
xor
mov
loopne
cmp
test
outs
movs
cdq
pop
push
push
nop
rcl
mov
les
js
enter
js
mov
fcmovne
(bad)
int3
and
clc
outs
and
sbb
pop
push
push
mov
(bad)
ror
in
dec
push
sbb
repz
inc
aad
aam
mov
adc
adc
fs
sti
mov
mov
in
dec
sahf
nop
mov
mov
cmps
ins
push
add
sub
mov
es
test
inc
xor
rcr
pop
dec
loope
adc
or
dec
dec
inc
mov
sar
cmp
aas
inc
scas
fs
push
inc
sti
bound
lea
test
push
sar
mov
sti
test
jecxz
int3
hlt
out
loop
push
jl
jge
xor
popa
mov
call
loope
fdiv
stos
pop
inc
mov
dec
mov
sbb
ja
mov
push
call
pop
in
loop
sbb
dec
es
pop
cwde
add
cmc
out
test
xchg
test
cmc
ja
mov
int3
call
fwait
xchg
mov
mov
in
test
test
push
xchg
inc
fwait
inc
cmc
icebp
imul
dec
js
cmp
pop
or
xor
dec
cmp
int3
movs
push
dec
pushf
push
and
or
xchg
sbb
dec
jo
fs
push
fadd
sar
jnp
jecxz
call
lahf
test
mov
int3
loop
jne
in
lods
fsub
xchg
mov
jmp
loopne
(bad)
fdiv
xbegin
leave
push
mov
xchg
scas
push
mov
xchg
mov
push
xchg
ins
nop
xchg
sub
in
add
shl
aas
std
lock
push
adc
and
scas
call
enter
and
ins
test
push
je
fdivr
call
mov
aam
add
stc
js
mov
inc
cmp
xor
xor
mov
sub
js
push
inc
mov
and
push
iret
pop
jo
sub
cld
adc
pop
cli
cmp
in
ror
aad
rcl
out
int3
aas
js
ret
into
fcmovbe
xor
(bad)
imul
div
jl
push
jl
xchg
ss
(bad)
iretw
mov
out
das
scas
(bad)
mov
mov
mov
imul
sub
adc
dec
push
pop
inc
in
jo
or
js
mov
jl
test
test
cmps
pop
pushf
in
mov
push
popf
rcl
outs
aam
pushf
xchg
sti
jl
mov
stos
test
sbb
in
sbb
test
xor
fld
je
inc
int3
fsubr
push
sbb
jo
sub
aaa
js
push
dec
cli
and
sahf
pusha
dec
lea
xor
or
loopne
cmp
js
jmp
fcomp
mov
in
aam
shr
xor
jae
fistp
cmc
jmp
and
js
addr16
add
push
repz
jl
inc
dec
push
ror
das
retf
neg
ins
in
jo
xchg
and
outs
cmps
pop
test
push
retf
pusha
(bad)
mov
mov
les
js
dec
inc
ror
sbb
aam
and
xor
jno
(bad)
mov
jle
clc
xor
movs
popf
xor
mov
push
pushf
push
push
cmps
retf
jne
imul
test
cwde
cli
mov
push
sub
lea
ds
sub
jo
dec
add
push
inc
sbb
jbe
fs
inc
pop
pop
jmp
inc
jne
inc
mov
push
sbb
mov
fadd
aam
leave
sub
fadd
xor
loopne
rcr
into
xor
jl
push
jl
and
jl
test
ins
cli
clc
out
lock
jnp
retf
adc
mov
lock
xchg
mov
cmp
enter
int3
xor
leave
out
nop
xor
ins
(bad)
jne
addr16
hlt
or
inc
sbb
cmc
push
lods
mov
mov
cmps
mov
popf
ficomp
xor
mov
in
mov
mov
js
lahf
dec
cmps
inc
movs
lods
jge
mov
and
mov
pushf
fs
sub
test
cs
sub
jg
je
dec
jp
daa
pop
push
sub
pop
adc
mov
mov
dec
ds
ins
popf
wbinvd
cmc
dec
(bad)
jp
ror
cmp
mov
out
cli
enter
mov
jl
out
(bad)
in
jl
addr16
ret
jo
int
lds
rcr
mov
mov
or
mov
ror
sub
mov
lock
loopne
mov
mov
fwait
pushf
test
aam
dec
sahf
and
pop
cdq
popf
mov
jne
mov
and
mov
aam
leave
into
in
cmps
les
sbb
or
pushf
xchg
sbb
sbb
arpl
cmp
mov
add
(bad)
sbb
push
sub
jne
cmp
push
dec
mov
in
push
add
cld
jne
xlat
pop
cmp
cmp
ss
or
sbb
adc
cld
mov
in
cmc
retf
mov
sub
jl
add
out
(bad)
shl
clc
cmp
test
add
in
jl
ret
inc
sub
std
pop
(bad)
mov
xor
int3
jp
lock
mov
nop
dec
dec
jns
fsubr
mov
mov
pushf
clc
mov
pushf
mov
movs
movs
setns
popf
in
test
mov
inc
enter
pop
mov
jnp
sbb
pop
popf
or
fsubr
loopne
ja
bound
pusha
push
test
sar
lock
cli
in
jmp
clc
(bad)
jns
(bad)
outs
clc
aam
movs
fcom
xor
push
adc
fs
dec
pop
lock
mov
mov
rcl
jl
imul
adc
jle
in
jl
sti
out
mov
loope
jl
(bad)
push
aam
dec
push
cmp
adc
inc
enter
pusha
lds
sbb
inc
nop
dec
clc
test
int3
call
pop
test
retf
mov
xor
je
lods
cli
push
and
fs
sahf
inc
mov
mov
dec
les
add
xor
or
sub
fwait
sbb
outs
ds
arpl
std
call
jmp
les
push
test
or
stos
adc
xchg
adc
loope
test
data16
cld
pop
stc
jl
ins
int3
(bad)
sub
mov
loopne
cdq
call
hlt
mov
dec
mov
and
js
out
push
loopne
js
aam
std
push
retf
mov
inc
xor
(bad)
shl
je
cmp
mov
fstp
pop
daa
and
addr16
cmp
lock
mov
je
retf
leave
aaa
test
enter
ins
imul
iret
(bad)
lock
fwait
pop
sbb
fwait
sbb
jae
or
pop
sbb
cli
cmp
nop
and
ins
xor
push
out
ja
mov
stos
mov
(bad)
jb
adc
mov
adc
jl
sub
imul
aam
lock
pop
mov
hlt
leave
mov
adc
mov
pop
jle
scas
adc
and
jl
sar
jl
mov
mov
sbb
(bad)
sbb
xchg
call
mov
(bad)
(bad)
or
dec
(bad)
sub
push
into
pop
hlt
dec
inc
cmp
repz
std
sar
fld
mov
sar
je
sbb
cld
std
stc
mov
ins
or
out
sbb
(bad)
cli
sbb
mov
jo
popf
fdivr
movs
mov
or
push
add
hlt
gs
ss
int3
push
pop
and
and
cld
dec
ret
movs
xlat
sub
mov
sub
sbb
lods
push
xor
jo
mov
movs
shl
cmp
es
adc
pushf
imul
popf
xor
push
sbb
iret
ret
jmp
jno
ret
adc
ss
nop
push
xchg
jl
jp
cli
xchg
mov
pushf
loopne
mov
dec
iret
rcr
(bad)
repz
retf
xor
ret
ins
iret
sbb
test
mov
lock
push
xor
cmp
pop
sbb
add
pop
inc
fnstsw
outs
jl
enter
loope
js
(bad)
call
in
xlat
in
push
imul
or
pop
fs
add
int3
dec
add
mov
pop
js
pop
call
rcr
mov
ror
add
mov
nop
cmps
xchg
adc
(bad)
mov
maskmovq
into
lock
in
push
add
push
(bad)
into
je
enter
rcl
fcomp
aam
(bad)
fmul
rcr
pop
outs
je
xchg
push
xor
add
pop
int
not
in
movs
popf
sahf
mov
lahf
call
adc
movs
sar
in
sar
call
mov
lds
ds
add
dec
mov
jo
inc
je
pop
cmp
sbb
mov
cmp
test
fdivr
add
cli
and
mov
cmp
add
mov
mov
call
pop
jp
loop
(bad)
and
in
jl
add
dec
xor
and
fcmovnbe
test
mov
gs
adc
aam
push
movs
sbb
jp
(bad)
lds
xlat
add
loope
xor
push
int3
js
stc
repnz
in
mov
mov
adc
dec
jno
mov
mov
lock
jnp
arpl
xchg
push
inc
fucom
mov
push
fwait
mov
sar
sbb
fimul
xor
xor
pop
(bad)
push
push
nop
pop
loopne
mov
or
push
aaa
clc
js
mov
nop
add
in
cld
dec
fcomp
jl
shl
mov
jmp
int3
add
fld
int
xor
sti
cmp
rcl
stos
mov
pop
cli
iret
int
and
out
pusha
repz
movs
sub
mov
mov
mov
adc
test
or
fisubr
xlat
stc
cmps
or
or
or
add
rcr
or
fsub
retf
or
(bad)
call
bound
xchg
adc
cmp
popf
mov
fisubr
js
cld
stc
(bad)
lock
cld
fimul
in
icebp
sti
lock
adc
movs
out
(bad)
cmc
clc
lahf
(bad)
test
les
lock
out
pushfw
push
xchg
xchg
test
ja
sub
mov
cld
sbb
(bad)
js
retf
xchg
push
leave
lods
jo
shl
fisubr
int
jnp
xlat
loopne
push
cld
cli
les
call
fsub
mov
je
movs
push
add
fcmovnu
mov
in
or
push
test
fdiv
js
sbb
sbb
js
stos
cmps
(bad)
xchg
aam
vpcmpeqb
sbb
pop
out
mov
xchg
je
push
hlt
mov
ret
jp
aam
int
lods
sbb
in
(bad)
lods
inc
push
fucom
push
mov
jle
stos
sub
fst
inc
mov
xor
cmp
xlat
xlat
mov
cld
adc
push
test
xor
shl
inc
sub
sbb
cld
pop
adc
cld
in
push
xor
rol
push
mov
jns
mov
shl
ficomp
out
push
retf
fisubr
les
ins
fidiv
jo
in
fisubr
test
sub
sar
or
je
retf
in
js
dec
std
sub
jno
mov
add
outs
xor
xor
jp
xchg
xchg
xchg
jl
mov
fsub
retf
leave
xchg
fdivr
jge
idiv
out
je
jo
push
xor
cmp
test
sub
clc
pusha
scas
mov
jb
fcmovu
inc
xor
xor
gs
adc
in
aad
cwde
add
or
popf
lea
sahf
xor
into
mov
loopne
int
pop
cmp
je
and
inc
xor
cmovno
mov
push
or
retf
frstor
rcl
fs
test
in
mov
int
test
loope
jbe
jecxz
ins
xchg
cwde
mov
ficomp
pop
js
shr
inc
fcomp
out
xor
lock
xlat
jmp
pushf
ficomp
mov
in
js
or
mov
add
pop
dec
es
hlt
or
cmps
and
dec
movs
mov
push
jl
mov
shl
int3
scas
xchg
push
lock
sub
cmp
(bad)
mov
or
nop
test
lds
shl
nop
xor
js
movs
inc
jbe
sub
call
xchg
jae
aam
(bad)
fs
fwait
dec
pop
imul
clc
adc
push
mov
jne
sti
push
enter
mul
dec
fucomi
int3
fucomip
call
loope
jb
fsubr
jb
fdiv
out
mov
aam
out
imul
int3
jl
fdiv
int
in
dec
shr
dec
xlat
in
lock
icebp
je
sub
mov
inc
aad
mov
(bad)
lea
add
pop
sub
lods
hlt
dec
inc
push
sub
jae
rol
or
shl
leave
jns
(bad)
mov
mov
jae
call
clc
add
rol
dec
pop
jnp
cmps
fwait
push
mov
jbe
loope
inc
and
sbb
repz
hlt
mov
dec
push
jl
xor
xor
scas
or
mov
rol
add
xor
mov
pop
fcomp
test
cmc
in
std
cli
xor
and
push
xchg
(bad)
idiv
jl
icebp
aaa
fdivr
hlt
jp
loope
scas
in
shl
mov
hlt
(bad)
in
(bad)
shl
jae
lock
fld1
jl
js
xor
ins
mov
fdiv
or
jmp
div
mov
sbb
in
fdivr
iret
loope
or
shl
movs
and
adc
jnp
(bad)
retf
shl
xchg
aam
call
jmp
aam
cli
std
in
into
pop
mov
fdiv
xlat
mov
hlt
outs
stos
sahf
inc
xchg
pushf
mov
jmp
jl
xchg
inc
jl
ret
or
inc
xor
inc
fadd
(bad)
mov
mov
clc
arpl
in
in
xchg
mov
mov
in
pop
nop
mov
xchg
pop
hlt
cld
sbb
aas
adc
sub
hlt
sti
in
push
pop
in
loopne
in
add
loopne
cld
cli
fmul
call
test
xchg
sbb
shr
out
clc
imul
pushf
je
pop
cwde
aad
in
aam
fstp
in
cli
aam
sti
nop
jb
dec
jne
jnp
ret
mov
dec
lock
adc
xor
xor
adc
je
mov
sub
lods
ins
loop
pop
stc
push
cmps
call
test
jo
mov
cwde
inc
in
mov
out
pop
movs
iret
mov
mov
mov
inc
fsub
mov
jmp
push
pop
jb
jl
add
jmp
jae
scas
test
cmp
sub
gs
leave
mov
lea
push
mov
fsub
rcl
leave
or
ja
adc
push
mov
je
add
mov
add
jb
icebp
mov
into
in
test
(bad)
cmc
movs
dec
fs
aaa
mov
hlt
std
and
adc
cld
sti
fsub
(bad)
push
je
je
iret
or
pusha
ret
and
dec
jne
in
cmp
out
fs
jmp
test
fnstsw
mov
mov
cmc
hlt
ror
je
aam
fsubr
cld
js
in
lds
adc
push
in
jb
lock
idiv
stos
lods
sahf
shl
js
jle
push
mov
inc
mov
js
xchg
jl
jo
pop
ins
clc
lock
cmp
fst
jbe
(bad)
aam
rcl
mov
pop
dec
int3
push
loope
stos
pusha
pop
rcr
adc
cmps
lods
fsubr
int3
pushf
out
jmp
adc
out
sbb
scas
int3
jne
add
jp
add
js
js
std
fcomp
cld
jns
fdivr
sti
shr
cdq
jns
call
push
test
cmp
in
push
fisttp
push
mov
jmp
cmps
jge
scas
ja
cli
and
push
cmp
inc
sbb
daa
or
scas
mov
inc
in
movs
xchg
fdivr
push
cs
jmp
pop
jmp
rol
vmovdqa
and
xchg
jbe
mov
test
jl
jl
fbstp
std
cmp
mov
jns
js
cmc
jl
js
xor
out
mov
or
stc
hlt
in
(bad)
xchg
pop
in
mov
mov
les
in
loopne
or
lods
mov
mov
test
lock
neg
push
add
ins
sub
add
mov
mov
clc
sbb
push
cld
jo
or
repnz
cmp
mov
loop
add
jae
hlt
movs
in
shl
ins
gs
je
pop
js
loopne
jne
fstp
rcl
push
into
jmp
mov
out
js
sti
mov
loop
popf
aad
cwde
aas
mov
cmps
clc
sbb
aam
push
fsubrp
inc
cmc
lock
fsubr
cmp
(bad)
sbb
and
pop
fsub
mov
jo
lahf
shl
in
loopne
fidivr
xchg
cwde
push
retf
jl
add
mov
jl
pop
or
inc
stc
inc
xchg
cwde
xor
aad
and
mov
clc
jbe
popf
xchg
mov
fild
retf
call
or
or
repnz
fadd
ins
imul
jno
add
mov
mov
jmp
call
in
cmc
mov
jmp
jb
ficom
je
fidivr
imul
pop
ins
lahf
in
cmc
int3
out
add
repnz
mov
(bad)
cli
sub
or
mov
mov
or
enter
loope
dec
sahf
sub
push
loopne
jbe
fsubrp
je
fild
jmp
mov
jl
xchg
pop
mov
mov
(bad)
mov
out
jmp
cmc
hlt
xor
and
jl
pop
loope
adc
push
test
xchg
xchg
ret
aam
nop
dec
mov
popf
out
mov
xchg
xchg
sbb
aam
jo
stos
mov
add
add
mov
mov
js
hlt
cli
mov
mov
dec
jae
clc
scas
in
(bad)
repnz
mov
(bad)
cmp
mov
mov
xchg
fld
sbb
retf
jl
jmp
out
and
hlt
add
out
jl
mov
stc
cmps
fwait
test
sbb
mov
fs
shl
mov
(bad)
in
mov
pushf
loopne
out
adc
fs
mov
cdq
mov
adc
fistp
push
or
clc
dec
call
pop
xor
pop
dec
retf
xchg
dec
sub
fild
fld
xor
js
xchg
jmp
aas
sub
cmps
in
loopne
fcmovnbe
call
mov
jmp
jle
pop
lds
fsubr
cmp
std
int3
repz
(bad)
in
jo
(bad)
xor
mov
stos
sti
nop
mov
xlat
ins
mov
xor
cmc
ret
cmp
or
xlat
call
sbb
aad
sub
clc
or
lods
mov
lea
clc
scas
fs
(bad)
shl
mov
nop
(bad)
fimul
fs
inc
mov
rol
(bad)
sub
jmp
jle
jl
jp
jl
into
cmp
cli
repz
and
sub
push
lds
lods
cmps
retf
mov
lock
mov
(bad)
adc
fmul
retf
jp
push
sti
in
cmps
aam
adc
movs
add
mov
jae
in
mov
cmc
mov
shr
sahf
mov
jmp
sbb
(bad)
jne
mov
(bad)
js
shr
movs
mov
clc
cld
lock
add
mov
adc
cmp
and
(bad)
fistp
cmp
sbb
jecxz
pop
into
mov
push
push
mov
call
fstp
jg
test
ins
nop
mov
cdq
xchg
xchg
(bad)
cmp
(bad)
cli
xor
sar
sar
dec
mov
je
stc
gs
loopne
daa
pop
pop
adc
jne
in
rol
xor
jo
cld
test
into
test
cmp
cmp
mov
fadd
push
idiv
out
mov
js
dec
(bad)
(bad)
dec
out
movs
ins
pop
into
adc
ins
int3
jmp
ret
loope
ins
mov
xchg
sub
mov
dec
(bad)
fcom
pop
mov
xor
push
xor
imul
jl
dec
dec
cmp
sub
hlt
and
xchg
push
rol
dec
clc
in
repz
fs
stos
sar
fidivr
cmps
sbb
loopne
sti
mov
icebp
rol
pop
add
mov
mov
test
int3
cmp
call
(bad)
jno
or
test
sub
test
sbb
cmps
and
clc
pop
lods
popf
pop
les
aam
mov
pop
in
mov
fs
xor
xor
xor
and
fadd
xor
gs
jne
(bad)
mov
test
iret
out
pushf
(bad)
je
fcomp
lahf
jmp
loope
pop
in
hlt
dec
repnz
pop
pop
inc
mov
adc
pop
cmc
and
sub
hlt
fdivr
add
push
fdivr
rol
(bad)
enter
ret
mov
push
mov
jl
ret
int3
(bad)
xchg
mov
xlat
add
rcl
jae
ins
jle
sbb
mov
test
jmp
dec
(bad)
rol
xchg
dec
mov
lods
sbb
outs
push
icebp
adc
sub
adc
ins
sbb
push
and
js
adc
fld
cld
stc
repnz
retf
fwait
cmp
adc
enter
add
push
ret
fs
in
les
and
out
int3
adc
rcr
mov
jecxz
add
shr
mov
jns
jne
fld
ins
cmc
add
push
or
jns
jge
mov
adc
sti
pop
sbb
fwait
sub
push
clc
aam
xchg
jbe
out
int
lods
cld
add
std
(bad)
jnp
lock
out
les
dec
aam
inc
repz
jo
dec
(bad)
sti
test
enter
das
or
mov
js
ins
and
int3
add
std
test
cmp
jmp
cmc
test
outs
push
retf
les
mov
cmp
retf
sti
sti
xor
stc
lock
aam
loopne
or
aam
sbb
or
and
pop
mov
movs
pop
nop
dec
or
add
jmp
std
(bad)
clc
fadd
pxor
dec
pop
sti
call
repz
in
lds
fidivr
jmp
jns
jmp
pop
inc
dec
cmp
jne
je
sbb
sbb
dec
push
rcl
sub
cld
(bad)
out
lods
push
adc
add
clc
push
jnp
out
out
movs
push
add
std
stc
push
pop
aam
jge
jecxz
popf
jnp
mov
ror
int3
mov
mov
xor
push
mov
mov
xchg
dec
std
sbb
xchg
nop
cmp
push
adc
jo
xchg
or
push
push
mov
mov
xchg
mov
ins
pop
test
jge
xchg
mov
pusha
stos
lock
jne
mov
jle
xor
or
mov
add
inc
mov
movs
ret
nop
pushf
cld
js
xchg
adc
adc
loop
jp
mov
in
jl
cmps
lods
adc
adc
mov
or
sahf
bound
mov
mov
xchg
mov
enter
test
in
adc
push
sbb
test
adc
ins
test
xchg
or
mov
loope
cmp
dec
push
lahf
and
mov
xchg
xchg
and
xor
jmp
inc
and
push
je
sub
pop
push
mov
int3
sub
xchg
fldenv
shl
jb
jns
mov
push
or
jnp
or
lods
and
test
jns
add
inc
pop
and
cmp
mov
les
push
enter
or
imul
and
imul
cmp
test
ins
imul
ja
jno
xchg
lock
jmp
sbb
push
ins
sbb
out
shr
daa
lods
iret
or
fmul
js
mov
ja
(bad)
pusha
pop
xchg
push
in
imul
lods
sub
or
mov
push
addr16
pop
shl
or
imul
or
imul
in
inc
mov
add
or
dec
dec
fcom
jne
jbe
or
rcl
jp
(bad)
sub
mov
and
jns
retf
sub
jo
or
stos
cwde
inc
xor
in
test
loopne
and
addr16
sbb
push
or
sub
pop
jns
imul
mov
jecxz
leave
inc
sub
pop
jl
repnz
cs
dec
fs
pop
ins
mov
fmul
cmp
jne
out
in
sub
(bad)
in
pop
or
cmp
inc
inc
das
daa
int
dec
int
mov
outs
cwde
call
rcr
aad
fstp
dec
mov
sahf
mov
iret
lock
in
(bad)
clc
outs
outs
ins
icebp
jl
sub
xchg
push
adc
jmp
xor
jns
mov
outs
push
jno
js
(bad)
push
push
jl
xchg
xchg
enter
pop
inc
addr16
xor
or
jg
outs
dec
mov
push
xor
nop
dec
or
cmp
cmp
idiv
mov
lock
or
and
int3
ror
pop
adc
sar
shl
sub
sbb
int
lock
call
(bad)
mov
cmps
mov
retf
jo
ret
jmp
loope
push
js
sub
sub
lock
pop
(bad)
dec
jecxz
fld
dec
inc
sub
add
mov
addr16
mov
add
(bad)
into
add
add
or
addr16
fdivr
mov
into
test
loopne
outs
xor
jae
adc
movs
jmp
and
sub
cmp
pop
dec
pushf
jmp
sbb
xrelease
imul
les
push
push
xchg
pusha
and
(bad)
push
mov
popaw
js
adc
mov
jne
xchg
jle
data16
jl
mov
loope
pop
push
jl
in
lock
div
ins
xchg
xor
sbb
lods
sbb
js
xor
mov
aam
cmp
scas
add
jl
pop
popf
sub
pop
test
dec
sub
lea
into
retf
sub
push
lds
clc
add
fwait
aam
int3
jne
pop
jmp
cli
xor
test
xchg
jmp
mov
clc
mov
sbb
xchg
popa
nop
test
mov
ffree
ret
sub
std
aam
arpl
out
xor
mov
ds
inc
pushf
push
loopne
push
mov
xlat
jg
mov
mov
push
inc
xor
clc
ja
xchg
mov
ins
or
add
daa
xor
adc
mov
sbb
push
add
imul
shl
shl
push
pushf
(bad)
aad
(bad)
nop
push
bswap
popa
nop
adc
sub
mov
sbb
adc
js
ret
sar
adc
mov
or
repz
sar
test
test
jle
call
mov
pop
sar
jo
ins
loope
dec
mov
or
shl
jns
xchg
std
jl
xor
fst
pop
mov
sub
lods
retf
ret
js
les
xor
test
stc
mov
aaa
pop
push
fnstenv
mov
sub
xor
or
mov
pusha
cli
mov
outs
pop
or
mov
jge
push
xchg
dec
pop
retf
cmps
pop
xchg
and
ins
lods
ins
std
mov
int3
mov
movs
mov
mov
hlt
js
mov
enter
js
out
mov
pop
mov
sbb
gs
mov
arpl
mov
(bad)
js
jo
mov
jne
or
retf
xchg
ds
mov
pushf
test
ins
xor
cli
pop
jbe
mov
fsubr
and
shr
push
(bad)
js
or
mov
test
xor
fs
in
mov
loope
pop
or
pop
cmp
sbb
add
dec
test
push
adc
movs
push
js
loopne
ror
adc
out
mov
pop
add
pop
or
test
jl
push
jne
push
ins
pop
jae
add
pop
cmp
scas
jnp
push
clc
enter
test
pop
out
sar
mov
jl
loope
mov
jl
lods
cmps
test
jbe
or
inc
cmp
sub
icebp
sub
loopne
daa
jge
and
lods
mov
test
xor
iret
mov
mov
xchg
mov
dec
or
add
data16
mov
js
mov
loopne
cmp
and
nop
jl
mov
jns
fcom
mov
mov
xchg
push
mov
push
std
jne
daa
push
js
and
xor
cld
xor
cld
pop
test
push
push
jl
inc
xor
and
aam
push
push
jmp
sub
mov
and
push
enter
xor
jl
jge
jbe
pop
(bad)
mov
jl
loopne
fs
jl
scas
js
in
mov
jns
or
outs
xchg
iret
dec
movs
scas
lods
outs
mov
jne
sti
mov
movs
jge
dec
cmp
in
pop
inc
aaa
or
sub
popf
pop
pop
sbb
lods
mov
mov
ds
xor
sbb
in
pop
dec
inc
xor
add
sbb
or
adc
std
imul
sub
jp
pop
jl
shl
pop
pop
das
jl
je
xor
or
inc
loop
test
mov
js
call
push
pop
dec
cmp
aaa
inc
xor
outs
fs
inc
sbb
or
aad
mov
test
add
movs
ins
stos
jne
lods
cmps
pop
cld
repz
cmp
sbb
dec
dec
cmp
xor
xor
sub
pop
ret
mov
loop
movs
mov
lds
cmps
xor
sar
test
out
hlt
jp
je
in
hlt
int3
mov
or
pop
adc
mov
jns
inc
sbb
aas
pop
(bad)
jae
shl
das
(bad)
shr
je
sub
xchg
cdq
add
test
fbld
sbb
dec
cmp
adc
push
jecxz
dec
cmp
fs
xchg
es
shl
mov
adc
(bad)
adc
cmps
imul
repz
adc
pop
xchg
mov
mov
sbb
mov
adc
int3
clc
xchg
mov
cmps
mov
cmps
je
sahf
ins
jle
sub
ins
xchg
jle
pusha
xchg
nop
leave
ret
cli
ja
loope
gs
xor
or
nop
cmp
(bad)
push
lds
icebp
rcl
ret
call
fnstenv
adc
in
mov
scas
mov
lods
stos
pushf
jne
popf
iret
mov
mov
mov
fcomp
fild
push
sahf
mov
js
cmps
mov
test
test
aad
dec
xchg
movs
fs
scas
and
adc
cmps
or
jns
cmp
inc
add
adc
ja
icebp
imul
add
cmp
jle
je
xchg
dec
stos
cmps
arpl
pushf
cmp
je
fwait
jne
mov
or
movs
mov
mov
mov
jae
movs
xchg
adc
or
mov
jl
xor
icebp
sbb
push
sti
call
movs
xchg
and
pop
mov
mov
mov
xchg
imul
cmc
movs
ret
jo
add
jl
mov
jbe
dec
xor
popf
push
retf
test
push
xor
jl
loope
ins
fnstcw
js
(bad)
lock
dec
ss
scas
call
jne
test
mov
adc
ins
fwait
xchg
popf
xlat
call
ins
sub
jle
pushf
ficomp
pusha
ret
js
mov
cmp
mov
mov
fmul
dec
test
jmp
clc
fucomi
jmp
mov
inc
scas
jge
movs
sahf
xchg
je
xor
jo
adc
xchg
test
lock
dec
mov
cmps
outs
sbb
push
xor
cli
jo
mov
in
push
fmul
xor
sbb
je
rol
pop
pop
js
ret
xlat
sar
call
xor
test
inc
jne
cdq
push
jne
jl
fs
xor
push
sahf
popf
dec
mov
stos
xor
cmp
in
movs
imul
xchg
sub
mov
fcom
adc
std
xchg
rcl
into
and
inc
test
jne
xchg
sub
pop
mov
jle
sahf
mov
mov
movs
ss
mov
adc
add
cmp
xor
data16
test
out
sbb
sub
test
outs
adc
ret
js
lods
xchg
fidiv
movs
push
and
test
pop
xor
xchg
and
test
fimul
pop
(bad)
sti
fbstp
push
cmp
pop
outs
int3
out
mov
and
adc
and
rcr
fcom
xor
mov
lods
addr16
sbb
test
cmp
xchg
pop
sbb
cmps
inc
mov
cmc
jle
xchg
out
(bad)
sub
sbb
cmps
test
jl
adc
adc
test
inc
push
inc
add
add
add
je
adc
add
jo
call
fcomp
fwait
dec
mov
lea
movs
je
mov
add
stc
mov
mov
int3
dec
pop
(bad)
cmps
jmp
cmp
cmps
ins
(bad)
dec
pushf
ins
scas
adc
push
cmp
jl
xor
mov
ret
(bad)
adc
cli
stc
loop
ret
mov
hlt
mov
cld
mov
out
js
xchg
in
js
test
adc
shl
xor
js
das
adc
or
mov
cld
push
push
test
je
pop
adc
call
jmp
(bad)
or
jne
outs
retf
test
xor
fs
push
test
mov
in
movs
sbb
lods
cld
(bad)
retf
mov
xor
ret
pop
shl
and
mov
push
jno
pop
imul
jl
dec
push
jl
mov
(bad)
mov
popa
mov
xor
movs
mov
(bad)
pop
sbb
cmps
je
mov
shl
cld
nop
test
lock
add
or
xor
dec
les
cs
outs
(bad)
enter
mov
mov
imul
jbe
xor
pop
jo
xchg
sbb
mov
mov
xchg
sar
scas
das
mov
xor
push
sbb
add
je
or
mov
push
sbb
jnp
add
test
in
jns
add
(bad)
rcl
in
cwde
movs
sahf
cli
push
(bad)
int3
adc
rcl
jne
retf
(bad)
mov
jne
jle
mov
fstp
mov
mov
cmc
ret
mov
movs
inc
loopne
and
shl
pushf
ss
movs
sti
mov
cmp
inc
imul
cdq
pushf
xchg
jae
add
ret
push
push
shl
(bad)
aam
cli
mov
and
mov
mov
leave
std
rol
mov
cs
lea
pop
sub
bound
add
setg
sub
or
addr16
xchg
push
and
dec
sub
jbe
int3
xchg
lods
and
cmp
and
test
pop
je
sub
retf
(bad)
cwde
fst
out
mov
sub
or
aas
push
cwde
dec
jp
sti
cli
out
call
clc
shl
fnsave
push
mov
jmp
sub
lds
xor
cmps
mov
lods
je
ja
cdq
mov
movs
pop
les
xor
sub
jmp
cmps
inc
or
dec
xor
mov
xchg
js
xor
movs
mov
xchg
mov
into
test
push
dec
dec
cld
js
mov
enter
ror
jl
iret
dec
loopne
jl
jnp
inc
ja
test
mov
or
xor
cmps
mov
fs
mov
xacquire
sub
lods
pop
scas
sub
les
test
xor
data16
add
sbb
jae
add
loopne
nop
push
fs
mov
retf
lock
rol
pop
mov
cmp
and
mov
push
add
cs
ret
js
jecxz
das
in
push
sbb
xor
mov
mov
fs
ds
jb
outs
call
stc
test
(bad)
jnp
cdq
out
test
sar
lods
mov
cli
mov
ret
mov
cmps
cli
or
repz
mov
cmp
and
dec
sti
jmp
lods
mov
in
test
enter
les
fs
lods
stos
push
mov
scas
test
sub
sbb
cs
xchg
jg
inc
out
scas
test
lods
pop
lea
or
retf
mov
into
cld
jl
jmp
cdq
pop
popf
jle
rol
leave
in
ret
mov
test
js
arpl
clc
enter
mov
sti
leave
ss
mov
jo
pushf
jne
xor
fadd
movs
test
and
mov
mov
push
mov
mov
lods
pop
js
push
inc
dec
je
and
test
test
jo
mov
add
push
mov
mov
xchg
mov
jl
mov
in
jmp
push
xchg
jne
mov
pusha
test
movs
mov
or
retf
enter
push
dec
xor
sub
xchg
int3
xlat
cwde
jns
sbb
and
mov
or
fsubr
mov
xor
and
mov
test
addr16
mov
lock
repnz
or
jnp
jno
movs
cs
or
fist
cmps
adc
or
xor
xchg
xchg
xchg
in
mov
mov
xchg
aad
mov
mov
and
push
mov
jmp
(bad)
out
push
inc
das
push
jbe
idiv
std
jmp
dec
pushf
test
imul
mov
adc
call
cld
cmps
stos
xchg
ins
cmp
out
icebp
in
je
sbb
add
call
in
or
xor
push
js
xchg
fwait
out
loopne
call
mov
jnp
mov
stc
ins
mov
and
mov
mov
into
bound
xor
dec
jnp
shl
inc
mov
js
pop
jl
or
jns
mov
std
and
lahf
push
pop
push
mov
mov
je
xor
aam
mov
mov
add
and
hlt
push
(bad)
rcr
je
(bad)
call
inc
xchg
xlat
test
xor
ins
xchg
mov
dec
ficom
stos
lods
clc
push
mov
in
call
mov
add
xor
cmp
jnp
stos
jl
xor
aam
js
push
enter
sub
ror
mov
cmps
fwait
mov
sbb
mov
adc
movs
imul
in
cdq
in
hlt
pushf
lea
sbb
fs
jo
test
xchg
pop
test
popf
ins
ror
sbb
repnz
cld
icebp
imul
cwde
aam
stos
lods
mov
or
call
cwde
adc
pop
test
rcr
push
sub
pop
iret
sbb
and
jp
push
je
push
xchg
dec
or
lahf
dec
or
js
pop
mov
push
mov
or
jns
xor
retf
ins
mov
dec
popf
pushf
cmp
test
fucomip
pop
retf
inc
cwde
sar
test
dec
xchg
ins
aad
mov
sbb
jb
cmp
xchg
xor
sbb
mov
jmp
ret
rcr
push
lahf
hlt
push
xchg
xchg
push
mov
pop
and
mov
cmps
movs
push
fbstp
into
out
xor
or
push
mov
mov
ss
out
pusha
mov
cmp
mov
xor
mov
clc
cmp
add
sbb
rcr
xor
icebp
lock
ror
das
ret
xor
movs
hlt
xor
test
inc
pop
fmul
(bad)
sbb
cwde
xlat
sbb
lods
stos
mov
stos
xor
(bad)
aam
adc
int3
dec
xor
xchg
adc
mov
xor
int3
or
sub
jl
adc
push
add
jg
js
xor
mov
xchg
int3
or
mov
(bad)
ins
test
scas
ins
mov
loope
sbb
cmp
pushf
jmp
push
ins
mov
cld
adc
in
repnz
cmps
xchg
outs
xchg
xchg
mov
mov
pcmpeqd
dec
ins
icebp
ins
gs
nop
inc
push
push
push
std
cld
mov
jno
shl
add
and
and
dec
jl
xor
pop
jmp
cld
cwde
xchg
xchg
std
movs
push
jp
mov
test
add
sbb
sbb
imul
cmp
xchg
sub
jl
add
and
cld
mov
mov
shl
pushf
stos
dec
mov
popfw
pop
ins
in
fcomp
idiv
mov
add
call
jle
cld
jmp
fsub
loop
lods
fcomp
jns
cwde
in
add
push
mov
pop
or
sub
test
xchg
fild
push
mov
call
fdivr
mov
adc
iret
or
call
scas
fs
mov
and
js
lods
mov
jo
mov
mov
ror
cld
nop
fsub
jl
test
nop
in
retf
sub
das
(bad)
pushf
push
adc
add
ins
imul
std
cdq
cwde
xchg
and
aad
ins
jae
sub
ins
lock
aas
addr16
cmps
xor
jne
out
loope
js
and
push
push
sbb
lods
mov
xchg
mov
sbb
xchg
sbb
(bad)
xlat
lods
cmps
sub
push
(bad)
js
xor
dec
jmp
jb
jae
cwde
inc
sbb
sub
hlt
fdivr
clc
js
cld
leave
je
ins
mov
lock
xchg
mov
xchg
and
xor
jae
xchg
lock
push
jl
shr
xchg
add
sahf
pop
stos
int
das
jl
push
pusha
push
cmp
prefetch
cdq
mov
mov
xchg
push
jl
movs
mov
xor
cmp
in
xor
and
stos
and
retf
in
push
shr
mov
out
rcr
adc
leave
cwde
pushf
ficom
int
pusha
cmp
xchg
(bad)
mov
xchg
test
movs
xchg
js
mov
aam
mov
dec
sahf
push
and
js
jae
xchg
(bad)
jmp
js
in
mov
mov
fwait
adc
xchg
je
jl
aad
lea
mov
shl
fnstcw
xlat
repnz
and
stos
shl
or
mov
stos
aad
mov
ds
rcr
shl
sbb
fldlg2
sahf
sub
in
clc
and
test
fmul
into
push
in
cmp
mov
sub
test
xor
and
jbe
jg
aam
push
aam
mov
inc
inc
ja
shl
movs
mov
popf
mov
shl
jle
cli
mov
mov
cwde
cmp
cmp
jge
pop
or
das
cmp
cmp
or
push
loopne
call
inc
sbb
in
call
bound
movs
cmp
mov
rol
xchg
jl
enter
iret
push
les
scas
movs
loope
cwde
mov
xchg
in
mov
push
test
mov
nop
repnz
push
pop
or
fistp
call
je
adc
jmp
adc
push
das
mov
mov
cmc
in
(bad)
lock
loopne
mov
inc
adc
jo
lock
hlt
rcr
push
fimul
out
sub
lock
push
enter
retf
adc
ins
arpl
fwait
mov
sub
xor
loopne
sub
js
repnz
test
out
jmp
push
add
push
in
lock
lods
pop
mov
cdq
nop
arpl
pop
in
nop
and
int3
hlt
add
xchg
daa
sbb
mov
add
jl
and
push
cmp
inc
arpl
test
sub
xchg
push
test
stc
mov
push
call
or
mov
jl
sub
sub
or
cmp
cld
mov
sub
sbb
push
div
cld
cmps
cmps
cdq
xor
sbb
call
xor
pushf
pop
popf
jb
push
jmp
ret
stos
aam
fs
cdq
mov
ja
outs
adc
and
sbb
mov
das
xor
inc
sar
stos
or
fisttp
sub
fs
ja
je
lock
in
jl
(bad)
in
xchg
xor
js
aam
add
leave
xchg
fdivr
je
ficomp
push
push
nop
mov
mov
fs
add
mov
fwait
adc
cmps
cmc
call
pop
and
ins
enter
jl
xor
scas
mov
aad
xor
push
mov
mov
out
(bad)
or
fsub
enter
les
ret
push
inc
ins
js
call
mov
and
and
call
test
test
sub
xchg
je
lock
sub
mov
call
(bad)
and
adc
out
sbb
shr
int3
push
mov
mov
jno
call
enter
fadd
or
int3
mov
pop
int
iret
and
jmp
adc
dec
jl
movs
out
enter
jg
test
jl
mov
inc
xchg
sub
cld
adc
sub
leave
es
mov
dec
int3
pop
cdq
fsubr
ins
outs
dec
push
inc
cli
loope
aam
mov
js
mov
xor
fdivr
mov
cmp
adc
mov
out
mov
mov
mov
xchg
shl
add
mov
jg
fmul
push
out
aam
shl
movs
jae
ds
hlt
push
call
js
sbb
jl
ficom
push
lahf
pusha
hlt
leave
inc
pusha
fcomp
mov
pushf
or
inc
sub
ins
cmp
iret
lds
mov
inc
movs
fstp
test
add
mov
mov
jne
aam
mov
and
mov
jno
fs
fmul
in
dec
test
mov
inc
or
inc
cmc
mov
or
dec
adc
test
ins
fld
pop
test
jge
sub
jb
jne
xchg
in
rcl
dec
jns
mov
aad
xchg
call
or
inc
ins
add
fnstcw
test
int
jne
nop
sar
pusha
mov
psllq
sbb
je
imul
je
gs
mov
jl
js
js
jbe
jns
inc
xor
sub
loopne
shl
popf
cmp
mov
cmp
add
loop
jmp
fcom
jne
mov
stc
push
jl
jns
mov
push
dec
iret
add
stc
add
jne
je
jne
js
inc
inc
jne
mov
jmp
(bad)
pushf
push
adc
ds
inc
sub
pop
mov
js
lea
pop
mov
mov
cld
adc
add
sub
adc
jmp
jne
mov
xor
sub
sub
or
je
out
mov
xchg
sar
xchg
cmp
cwde
in
call
sub
cs
sbb
jle
loopne
or
push
sbb
mov
add
jl
cmc
jl
jl
pop
das
dec
(bad)
or
jl
repnz
sub
mov
cmps
mov
jl
je
or
push
js
es
jl
xor
jl
or
std
jmp
cmp
pop
fld
adc
mov
outs
sub
in
jge
rcl
push
inc
and
dec
aam
es
pop
sbb
test
call
sub
mov
xor
sub
outs
lock
js
not
stc
dec
call
lahf
mov
mov
(bad)
pop
cld
and
ficomp
dec
retf
or
cmp
jno
call
pop
es
add
shl
add
mov
xlat
pusha
mov
neg
cmc
test
test
xor
std
push
popfw
jmp
shr
pusha
sub
jp
clc
cmp
pusha
pusha
push
pushf
lea
je
pushf
test
bt
cmp
pusha
mov
push
lea
je
cmp
jmp
add
add
nop
imul
sbb
jbe
mov
jbe
add
add
jmp
clc
rol
call
mov
jg
fild
ret
xchg
pushf
push
pusha
mov
shl
out
(bad)
mov
sbb
in
cmp
or
scas
mov
mov
push
cdq
xor
mov
loopne
sbb
xchg
dec
loope
ror
ret
scas
jae
scas
in
test
add
mov
mov
cmp
mov
push
stc
mov
pop
adc
movs
pop
in
pop
push
adc
(bad)
loopne
inc
jno
loop
ins
mov
hlt
ins
and
mov
in
das
shl
jo
ss
popa
mov
pusha
mov
mov
fmul
xor
ins
mov
jo
xor
fwait
inc
xor
cld
clc
push
jmp
xchg
xchg
test
jb
call
sub
pushf
dec
sbb
mov
mov
or
dec
xor
xchg
sub
enter
repz
sub
shl
lds
mov
mov
(bad)
je
sbb
enter
call
call
lahf
mov
(bad)
int
push
pop
sub
jecxz
mov
pop
lods
xlat
xor
into
arpl
push
in
sub
popf
sbb
stos
or
fcomp
jle
push
jmp
or
add
stc
xchg
jl
cmc
shl
push
sub
mov
retf
mov
fst
dec
jge
mov
cmp
test
lahf
fstp
jo
jge
imul
mov
jp
add
(bad)
mov
push
es
ins
stc
push
call
scas
fiadd
or
mov
pop
mov
dec
loop
test
xor
inc
jbe
mov
es
or
push
sub
fidivr
adc
jnp
ret
cmps
xchg
sahf
dec
inc
jno
inc
in
mov
jbe
mov
nop
pop
lahf
cmp
sbb
xchg
in
push
out
imul
jbe
inc
int3
out
inc
leave
hlt
jnp
lea
jmp
mov
mov
shrd
btc
mov
clc
mov
test
bt
call
lea
jne
shld
mov
cmc
pusha
cmp
bt
add
mov
cmc
movzx
inc
sbb
sbb
movsx
mov
stc
jmp
mov
neg
jmp
jmp
int3
cmp
mov
pop
stos
cmp
adc
adc
lods
in
jmp
push
and
nop
dec
sub
mov
loop
pop
ins
fdivr
rcr
stos
jo
cmp
(bad)
fadd
adc
cmp
ja
jmp
popa
cmp
sbb
pop
adc
cdq
loope
gs
stos
push
pop
call
imul
mov
xchg
bt
add
push
call
not
jmp
inc
(bad)
and
mov
daa
fst
xor
ror
inc
jb
jb
cmp
not
xor
xor
mov
(bad)
out
or
rep
shl
xchg
jns
adc
mov
data16
out
movs
push
sub
mov
lods
daa
out
mov
push
adc
jge
test
sbb
cwde
dec
xor
push
jle
fs
or
adc
adc
xor
call
shl
imul
mov
idiv
inc
cdq
rol
loopne
mov
pop
push
mov
out
loopne
ja
mov
jmp
je
cmp
out
les
xchg
mov
mov
jmp
xor
add
not
jmp
ins
sbb
dec
pusha
popf
ins
mov
add
mov
aaa
xchg
out
jno
icebp
sti
mov
or
pop
xor
inc
ss
push
mov
and
clc
imul
retf
bound
aas
jmp
(bad)
movs
fs
(bad)
push
xchg
mov
jbe
jg
add
rcl
adc
(bad)
hlt
jmp
nop
adc
sbb
pop
sub
hlt
mov
xchg
cmp
lock
pop
pop
pusha
shl
sbb
lock
xchg
popf
adc
mov
and
inc
and
push
push
lea
je
pusha
add
push
jmp
pushf
lea
je
bt
jmp
pusha
call
(bad)
jo
out
daa
fist
inc
fbstp
xchg
test
cmp
add
fsubrp
popf
xchg
sub
lea
cmp
mov
push
inc
aas
leave
loopne
mov
repnz
fucomi
dec
inc
sbb
mov
adc
xchg
inc
mov
daa
mov
adc
xchg
lods
push
add
stc
mov
rol
pusha
jmp
call
xchg
cmps
std
cdq
add
xor
lods
mov
enter
mov
nop
(bad)
push
push
shl
xchg
ret
ins
inc
xchg
in
movs
jno
inc
test
cld
and
dec
test
movs
or
aam
add
(bad)
(bad)
fistp
mov
cdq
dec
enter
fld
sbb
out
or
xchg
sbb
lods
icebp
into
mov
je
add
push
dec
(bad)
mov
mov
mov
popf
cmc
movzx
inc
bt
mov
cmp
pushf
cmc
cmp
add
bt
push
mov
test
test
test
pusha
call
mov
inc
cmc
cmp
cmp
lea
movsx
lahf
lea
call
(bad)
icebp
rol
call
push
(bad)
or
cmp
test
fild
push
test
jbe
inc
dec
mov
bound
sbb
sub
jnp
mov
fisub
mov
cmp
or
lock
fst
into
xchg
xchg
(bad)
cmc
pop
inc
push
dec
shr
jns
mov
sbb
mov
or
adc
mov
sbb
xchg
or
inc
cmp
pushf
push
lea
call
call
mov
call
push
pusha
pushf
mov
pushf
pushf
push
lea
jmp
pushf
call
jmp
pushf
mov
mov
pusha
mov
pushf
pushf
pushf
push
ret
inc
pushf
inc
pusha
setns
pushf
push
mov
jmp
adc
adc
outs
icebp
hlt
add
jmp
jb
loope
not
sbb
cmc
inc
xchg
sub
cmps
(bad)
push
pushf
and
clc
ror
sub
in
jo
mov
or
(bad)
int3
mov
(bad)
in
outs
lds
fbstp
inc
mov
stos
push
cmp
xor
bound
in
mov
adc
xchg
adc
add
lock
or
cmps
mov
test
push
cmps
lods
push
jb
push
in
add
add
adc
rol
pop
(bad)
sub
aaa
sbb
mov
inc
vunpcklps
scas
out
ret
or
into
xchg
xchg
das
xor
cwde
sbb
adc
inc
xor
cmp
fidivr
xor
xchg
mov
cmp
mov
outs
sti
mov
xchg
cmp
pushf
lea
jae
clc
stc
add
pushf
mov
call
mov
push
shl
mov
div
ficom
shr
in
mov
xor
cmp
loope
xchg
sti
fucomi
mov
push
stos
ret
in
fadd
ja
loop
pop
jge
imul
call
mul
adc
call
jmp
mul
push
in
jl
xor
dec
and
push
adc
fisttp
mov
sub
cmp
ins
fmul
sub
(bad)
je
adc
hlt
test
shl
cmc
addr16
pop
inc
(bad)
lahf
pop
ds
ficom
mov
push
out
lahf
jle
movs
jmp
xchg
mov
movs
fist
outs
xor
in
imul
jge
pop
stos
std
sub
(bad)
out
dec
mov
shr
dec
add
(bad)
cmps
and
inc
mov
in
ss
cs
push
ss
rcl
dec
dec
or
inc
(bad)
test
lea
mov
ja
xchg
je
inc
cmp
cmp
and
mov
fimul
dec
push
ret
je
cmps
cld
(bad)
jno
jmp
mov
xor
mov
out
scas
mov
sub
sahf
fsubr
dec
les
jne
jmp
ror
int
sub
xchg
ins
cmp
pusha
mov
repz
(bad)
jno
fucomi
mov
pop
lock
mov
call
mov
sbb
push
ja
mov
push
ret
mov
fisttp
lds
push
pop
cld
in
mul
adc
les
adc
es
(bad)
adc
movzx
push
cmp
ins
mov
add
inc
(bad)
sub
shrd
call
add
add
cmc
cmc
sub
test
jmp
xchg
jge
dec
test
les
and
push
jo
fcom
push
ret
pop
loopne
sbb
adc
mov
sub
mov
mov
mov
(bad)
pop
mov
sbb
xor
jecxz
jecxz
stc
push
mov
inc
and
jmp
mov
and
scas
pop
or
mov
sbb
outs
outs
movs
pusha
inc
mov
dec
cmps
scas
movs
mov
jg
add
cmc
push
mov
mov
call
pushf
pusha
mov
rep
lea
bswap
movsx
mov
pushf
mov
pushf
push
lea
jmp
fsubr
dec
stos
scas
mov
in
mov
push
int3
iret
mov
pop
fst
jl
out
bound
lock
iret
stc
outs
loop
cwde
scas
in
ja
mov
inc
daa
sti
retf
daa
mov
push
mov
inc
mov
es
mov
push
dec
scas
lods
and
sbb
scas
ja
mov
std
pop
xor
or
xor
mov
aaa
mov
fild
jl
call
outs
scas
xor
cmp
push
add
bt
test
call
add
dec
outs
popa
fs
imul
add
ffreep
std
mov
hlt
repz
and
pop
(bad)
popw
(bad)
cld
sub
jg
mov
cli
out
fldl2e
pop
mov
loop
mov
xor
xor
out
out
push
inc
nop
(bad)
das
ror
inc
push
mov
push
hlt
aam
retf
inc
mov
cmp
test
mov
in
inc
cld
pop
xlat
ror
es
pop
xchg
push
es
loopne
push
pop
inc
mov
not
pushf
mov
lea
pushf
pushf
jmp
push
push
imul
and
jne
and
je
bound
ins
outs
arpl
gs
and
and
popa
ins
imul
and
jb
jb
and
mov
cmp
jmp
jmp
jmp
test
adc
sbb
gs
outs
leave
punpcklwd
lds
push
xor
(bad)
(bad)
loopne
repz
pop
push
xor
and
lea
sbb
and
xchg
fisubr
daa
pop
add
mov
(bad)
lea
sub
test
(bad)
fdivr
dec
push
pop
es
push
clc
sti
jmp
adc
adc
es
inc
loopne
lea
je
call
ins
jl
mov
adc
jae
aas
popf
das
push
stos
cmc
mov
adc
(bad)
xor
test
push
xor
and
lea
test
into
imul
mov
sub
js
ret
add
cmc
push
aam
push
les
pop
adc
dec
stos
add
aad
mov
and
inc
cmp
inc
add
mov
fiadd
(bad)
push
scas
in
sub
push
xor
enter
inc
push
test
lods
int3
mov
push
push
or
jnp
out
sbb
es
sub
(bad)
or
xchg
shl
call
call
ins
or
(bad)
out
jno
ins
and
sub
push
sub
cmps
add
mov
or
jb
movs
and
mov
mov
xchg
(bad)
call
mov
adc
and
cmp
scas
in
mov
fidivr
lods
(bad)
lea
call
pushf
pushf
mov
lea
jmp
cld
jmp
xor
shr
call
fcomp
cmp
push
imul
ins
dec
inc
pop
rcl
dec
lods
mov
or
jge
push
inc
scas
mov
std
add
data16
jmp
mov
xor
and
out
retw
xchg
mov
push
pop
jp
ins
push
or
rcr
fst
xchg
scas
or
fstp
pop
push
jle
mov
pop
push
ja
adc
sub
or
ficomp
dec
imul
mov
add
push
mov
mov
pusha
mov
lea
jmp
sti
jmp
xchg
cwde
retf
sbb
fs
callw
add
add
jg
pop
arpl
mov
fistp
pop
xor
cmps
sub
push
ss
lods
mov
mov
mov
jbe
arpl
stc
dec
fs
aas
pop
xchg
add
jg
and
fbstp
xchg
add
pushf
lods
test
test
add
call
sbb
mov
enter
icebp
jmp
das
inc
mov
clc
dec
(bad)
jae
sbb
movs
jl
pusha
aad
mov
cld
hlt
and
pop
pop
inc
push
push
pop
aas
outs
rol
ds
pushf
xor
cmps
lock
in
ret
inc
sbb
sub
pop
sbb
cs
pop
call
shr
pop
pop
ins
(bad)
adc
sar
and
ror
xchg
add
clc
imul
cmc
add
push
mov
lea
jmp
pushf
push
mov
pusha
lods
test
stc
add
pushf
ror
push
neg
clc
clc
clc
rol
push
call
sub
pusha
mov
rep
lea
jmp
jmp
lea
jl
stc
sub
clc
cmp
pushf
call
jmp
lea
je
pusha
lea
jmp
cmp
mov
bnd
and
pusha
lea
jne
jmp
mov
push
lea
jmp
mov
mov
lea
movzx
pop
push
pushf
mov
push
ret
mov
lahf
mov
movsx
bswap
cwde
lea
call
lea
call
jmp
mov
lea
je
push
push
push
lea
jmp
add
pop
stos
aas
and
and
push
add
enter
push
jne
or
jnp
cmps
shl
call
pop
call
nop/reserved
loopne
mov
or
int3
xlat
mov
js
pop
cmp
popa
pushf
mov
mov
add
jp
xor
int
sbb
rol
(bad)
mov
cmp
test
fwait
add
jae
push
push
mov
lea
call
pusha
push
mov
lea
jmp
push
jmp
(bad)
mov
out
lea
mov
xchg
dec
aam
inc
mov
jns
stos
jns
movs
imul
jl
inc
outs
fiadd
adc
jns
cmp
mov
aaa
cmc
xlat
adc
out
push
jbe
jecxz
nop
out
push
inc
sbb
es
jg
or
mov
cmp
out
push
xor
sbb
int3
pop
mov
push
ficomp
inc
cdq
and
mov
add
mov
sbb
mov
adc
mov
push
push
ret
push
inc
dec
jbe
pop
sbb
cmp
xlat
pop
inc
mov
add
push
and
xchg
pop
call
xor
repz
inc
or
or
jns
sbb
nop
pop
mov
dec
repz
out
mov
mov
js
mov
test
clc
aaa
jp
arpl
mov
inc
mov
ds
xchg
push
je
mov
jp
pop
call
add
dec
outs
arpl
inc
jb
gs
cdq
push
add
cmp
pusha
mov
jmp
pusha
lea
jb
cmc
test
test
cmp
jmp
jmp
rol
sub
mov
btr
not
or
neg
add
push
mov
not
mov
lea
jg
pushf
push
push
mov
pushf
lods
pusha
mov
add
call
jmp
push
inc
clc
jmp
lea
ja
push
mov
call
stc
pusha
cmp
add
call
cmp
pushf
cmp
pusha
mov
mov
lea
jae
test
push
clc
cmp
pusha
pushf
mov
lea
ja
dec
inc
call
gs
pop
inc
inc
in
adc
push
ds
sbb
cwde
(bad)
cld
lods
mov
je
jl
cld
cdq
sub
mov
xor
cwde
fwait
addr16
mov
(bad)
and
sahf
pushf
movs
or
sub
xchg
xor
aad
cmp
sbb
xchg
or
imul
mov
cmp
cwde
mov
stos
mov
mov
mov
(bad)
dec
dec
outs
aad
in
les
or
sahf
int
(bad)
jmp
fcomp
ds
mov
imul
xor
mov
(bad)
mov
push
and
fsubr
arpl
xchg
mov
leave
out
sub
mov
in
scas
mov
mov
jmp
xor
data16
scas
jo
mov
adc
cmps
pop
test
mov
out
dec
adc
mov
sbb
bound
(bad)
mov
int3
mov
mov
outs
add
retf
les
cwde
sub
sub
cs
or
imul
test
(bad)
in
push
ds
xchg
xchg
pop
inc
fmul
xor
(bad)
in
mov
outs
rol
div
jecxz
and
inc
mov
rol
repnz
mov
push
or
mov
xor
clc
add
stos
movs
and
cdq
jl
scas
jmp
ret
and
lds
call
out
(bad)
mov
pop
mov
into
sbb
adc
imul
or
sub
add
sbb
idiv
outs
lea
popf
lods
jae
or
aas
dec
push
pop
cmc
pop
mov
jno
scas
cmps
jbe
pop
popf
ins
popf
cmc
cmp
fs
xchg
xchg
bound
mov
and
jmp
enter
daa
adc
mov
inc
test
call
or
pop
(bad)
add
xchg
loopne
xor
inc
mov
es
popf
enter
push
je
push
mov
lahf
(bad)
xor
sub
add
arpl
xchg
idiv
icebp
aam
pop
rcr
out
adc
(bad)
jmp
sbb
xchg
dec
xor
jmp
dec
cmp
scas
test
sbb
in
mov
cmp
pop
pop
jns
loop
xchg
out
add
or
pop
push
movs
out
mov
dec
mov
or
retf
cmp
adc
add
fistp
pop
jge
retf
add
xchg
hlt
mov
aas
out
adc
mov
cmp
stc
clc
test
cmp
setbe
not
push
push
lea
movzx
mov
jmp
out
test
mov
xor
fwait
cmc
adc
jg
movs
push
stos
cdq
lock
hlt
shr
mov
fstp
cmp
adc
ret
nop
(bad)
in
cmp
cwde
jnp
inc
pop
cmp
sub
jl
dec
lods
mov
cmp
sbb
xor
or
mov
sbb
into
adc
loop
xlat
adc
and
jne
inc
bsr
mov
pushf
add
call
outs
ds
xlat
das
repz
mov
sbb
imul
(bad)
aas
jb
(bad)
call
or
jmp
sbb
inc
scas
cdq
mov
lea
jbe
shr
bt
shl
mov
shl
stc
bswap
add
adc
shrd
neg
xadd
mov
call
in
cld
push
mov
stos
add
inc
push
or
dec
mov
cmp
mov
inc
aaa
dec
lods
jp
mov
fisttp
add
les
dec
inc
cmps
icebp
jbe
lahf
scas
jns
xchg
mov
inc
push
mov
jae
pop
mov
jnp
push
mov
mov
jne
mov
mov
push
retf
mov
push
imul
or
scas
popf
mov
aam
arpl
loopne
movs
(bad)
pusha
mov
stos
call
ss
pushf
push
loop
test
(bad)
cmps
add
jmp
sbb
cmp
sar
add
jecxz
scas
add
(bad)
mov
outs
lock
daa
ss
jp
jo
mov
add
mov
out
outs
lea
pop
rcl
xor
in
das
or
mov
push
sbb
xchg
inc
shr
mov
mov
bnd
mov
cli
push
imul
sbb
jg
call
push
fwait
jno
jnp
into
mov
scas
xchg
push
out
lods
mov
pop
mov
mov
call
xor
or
push
test
je
inc
aad
and
test
xor
push
mov
pushf
jmp
jmp
xchg
lds
dec
aam
sbb
pop
xor
jecxz
iret
dec
push
push
jge
out
sbb
mov
lods
(bad)
or
retf
ds
ss
and
aas
fwait
dec
mov
sub
pop
call
push
or
inc
jge
test
or
mov
es
out
mov
test
aas
pop
in
mov
jnp
pop
repz
nop
pop
push
lds
xchg
rcl
pop
pop
mov
mov
inc
and
sub
and
neg
stc
push
stc
bt
xor
cld
bt
stc
push
popfw
call
shl
pop
push
sbb
push
cmp
jmp
xlat
xchg
xchg
addr16
adc
stc
sub
test
lea
cmps
mov
mov
push
mov
icebp
pop
ja
stc
mov
mov
fs
mov
push
movs
dec
jge
add
(bad)
xor
mov
in
(bad)
out
in
daa
mov
cmp
rcr
(bad)
push
cwde
cmps
loop
loopne
and
mov
dec
jmp
cmp
cmp
cmp
mov
call
or
cdq
mov
in
mov
mov
ins
out
pop
cdq
imul
mov
adc
xor
adc
shl
mov
lock
sbb
hlt
pop
xchg
out
jge
and
fcom
or
sahf
mov
addr16
fisttp
sbb
xlat
xchg
inc
mov
sbb
fwait
mov
fcom
pop
mov
nop
enter
scas
inc
aad
std
fimul
and
xor
jns
retf
das
jecxz
jmp
add
sbb
sbb
sahf
and
adc
mov
and
idiv
ins
jle
adc
dec
mov
loop
sahf
enter
sbb
bound
loopne
jo
ins
fcmovnb
mov
mov
fnstenv
jl
push
xlat
in
(bad)
jo
popf
cmp
ins
pop
push
push
sub
cmp
pop
xlat
xchg
fistp
dec
sub
or
mov
dec
into
outs
mov
jle
xchg
icebp
test
leave
or
pop
cmps
inc
and
loopne
mov
push
ret
shl
push
adc
int3
ds
xor
adc
mov
cmps
jnp
push
inc
sbb
xor
dec
(bad)
lds
int
aaa
jp
cs
jmp
mov
jecxz
sti
shl
cmp
mov
mov
mov
into
push
inc
mov
retf
cwde
(bad)
push
push
mov
loope
pop
rcl
mov
adc
and
mov
aad
pop
rcl
out
stos
cmp
fs
push
push
cmps
mov
stos
mov
punpckhdq
push
add
pop
xlat
call
pop
bound
jmp
dec
jle
push
xchg
scas
lea
jns
aas
sub
pop
mov
mov
mov
(bad)
rcr
dec
cmc
push
dec
mov
or
gs
push
(bad)
fcom
call
es
call
push
shl
inc
cmps
sar
sti
imul
test
aam
mov
imul
loopne
into
sub
mov
push
jle
add
jmp
lods
in
rol
stos
dec
xlat
sahf
test
or
mov
pop
pop
int3
dec
jb
mov
retf
add
add
add
add
add
cmp
mov
ss
xor
add
mov
add
lea
jae
test
cmp
sub
pusha
lea
call
pusha
pushf
lea
jae
jmp
bt
cmp
mov
pusha
push
lea
jae
bt
clc
jmp
movs
jne
movs
and
leave
loop
shl
dec
sbb
cdq
xor
cmc
xchg
test
lock
jl
inc
jno
sub
jmp
lods
add
xchg
lock
and
cmp
aas
add
imul
mov
(bad)
mov
mov
jmp
sbb
jecxz
mov
jg
scas
mov
addr16
sub
es
scas
and
cmps
xchg
ret
js
rcr
and
jb
xor
(bad)
inc
and
xchg
arpl
jb
push
and
pop
sbb
adc
pop
dec
fmul
sbb
fdivr
rol
(bad)
arpl
mov
or
(bad)
(bad)
ss
sbb
test
sbb
mov
es
or
dec
jmp
mov
stos
popa
inc
sti
dec
rcl
test
jb
or
sti
not
pusha
mov
pushf
test
pushf
cmp
call
shl
xor
ins
aas
xchg
test
mov
clc
xor
or
mov
sbb
xchg
ror
loopne
cwde
jl
cmp
add
daa
ret
lods
in
jmp
xchg
mov
cmp
stos
inc
sub
out
cmp
adc
mov
mov
or
loop
mov
xor
add
add
mov
fmulp
xchg
inc
enter
test
test
cmp
lods
push
sub
cmp
sar
std
mov
jno
xchg
rcr
xchg
aam
adc
inc
push
inc
fwait
xchg
pop
cmps
and
xor
xor
clc
or
and
pop
add
jecxz
push
inc
cld
daa
imul
in
call
xchg
mov
xor
loopne
aad
je
adc
aad
mov
adc
mov
push
ret
pusha
lea
je
sar
neg
add
add
cmc
test
mov
pusha
stc
push
jmp
bt
cmp
sub
cmc
clc
stc
pushf
cmp
mov
pusha
lea
jae
pushf
mov
lea
jmp
jg
cmc
adc
jns
(bad)
or
xor
jge
add
daa
fnstsw
mov
data16
sub
and
and
aas
push
adc
retf
fwait
pop
xor
pop
add
pop
scas
inc
xor
xchg
xchg
jo
sub
push
retf
mov
int3
clc
push
add
cli
mov
xlat
ret
out
xor
leave
cs
jecxz
jno
addr16
or
ja
and
mov
es
fild
loopne
add
fadd
or
out
dec
scas
shr
xor
and
jo
hlt
(bad)
in
adc
(bad)
mov
xchg
xchg
xchg
cmp
dec
adc
pop
jbe
mov
xchg
cld
out
sub
repnz
popf
mov
mov
aaa
(bad)
xor
lock
jbe
les
sbb
cpuid
jne
(bad)
gs
add
js
(bad)
pop
cld
mov
test
jmp
xor
mov
jmp
nop
xlat
xor
add
sub
jno
test
push
cdq
call
fst
jmp
pop
cmc
push
(bad)
shr
sub
add
adc
push
pop
call
lods
stc
push
pushf
test
not
pushf
pusha
add
jmp
lea
jb
clc
cmp
push
pusha
lea
jne
rcr
shrd
adc
mov
bt
pushf
pusha
cmc
add
pushf
movzx
sub
shl
mov
pushf
call
pusha
lea
jge
pushf
lea
jae
bt
call
pop
scas
aad
in
sti
lods
out
rol
mov
or
mov
aad
outs
(bad)
mul
imul
movs
dec
jecxz
sub
mov
inc
inc
mov
in
adc
inc
ins
add
mov
(bad)
(bad)
dec
push
jae
rcl
retf
mov
jnp
stc
and
xor
xlat
push
retf
mov
add
aaa
adc
scas
call
jb
cs
or
loop
das
cmp
mov
xchg
fnstsw
adc
cmp
adc
xor
ja
mov
cmp
add
cdq
imul
cmp
cdq
jne
pop
inc
arpl
mov
mov
shr
(bad)
ror
jns
inc
mov
dec
lea
call
call
leave
js
jp
sbb
cmp
cwde
mov
or
fild
mov
js
add
out
sub
fxch
adc
xchg
mov
dec
pextrw
mov
loop
ja
jae
pop
into
sahf
push
test
ror
in
and
mov
inc
pop
fldenv
adc
call
xor
mov
push
(bad)
sub
test
sbb
outs
jbe
test
mov
or
mov
cmp
(bad)
jg
xchg
push
into
test
fisttp
dec
cmp
sti
mov
je
pop
dec
ins
xchg
rcl
ret
jmp
xchg
add
shl
rcl
dec
cwde
and
sbb
je
push
mov
retf
loope
dec
ret
xchg
dec
sar
bound
inc
fs
sbb
js
push
cmp
xlat
cmp
pop
inc
adc
adc
push
loope
pop
aam
sbb
test
push
push
ret
ins
out
sub
scas
inc
cmp
mov
addr16
jno
mov
sar
ret
xchg
fadd
repz
sbb
jno
in
lods
push
push
lahf
push
jo
in
and
lea
push
clc
mov
into
test
mov
sbb
jge
push
xor
jnp
add
sbb
mov
mov
push
jbe
cmp
es
mov
setno
pop
mov
call
pushf
mov
call
mov
lea
ja
jbe
pushf
push
lea
jb
push
cmp
mov
lea
jne
sar
btc
stc
shl
mov
pushf
push
clc
add
clc
movzx
movzx
pushf
lea
rcl
mov
test
clc
push
pushf
add
lea
push
call
test
xchg
btc
not
rol
stc
mov
bswap
pushf
pushf
pushf
mov
adc
call
mov
call
mov
ret
push
cli
sar
add
pop
js
sub
add
clc
or
ret
pop
lods
mov
add
mov
je
add
add
jb
loopne
and
mov
mov
mov
adc
adc
cli
sub
mov
pop
lea
pop
jo
xlat
leave
imul
retf
push
aas
or
aam
retf
js
xchg
js
repz
clc
pop
int3
test
out
mov
ins
in
adc
enter
aam
jo
mov
(bad)
adc
call
add
inc
aam
jmp
into
cli
daa
inc
sub
pop
dec
adc
lahf
cmp
and
jns
ds
xchg
sti
cmp
cmp
hlt
push
hlt
or
xchg
jl
mov
push
iret
mov
xor
fild
cwde
inc
sbb
test
(bad)
sti
rcr
imul
pop
test
jmp
pop
jo
ret
inc
ret
sti
ficom
xlat
repnz
mov
sub
xlat
ds
hlt
scas
adc
jl
pop
cmp
rol
retf
dec
es
lea
push
jle
inc
enter
rcl
cld
stos
inc
inc
call
les
push
inc
mov
jbe
aas
push
cmc
xchg
mov
pop
test
xchg
imul
xchg
add
sub
cli
push
loopne
mov
dec
mov
mov
ficom
shl
mov
sub
jp
in
enter
lds
sbb
movs
xchg
lods
je
sar
fist
shr
xchg
pop
and
mov
hlt
adc
ret
push
pop
dec
push
pop
(bad)
in
mov
call
mov
mov
nop
jns
xlat
cmps
mov
fist
mov
cmp
and
mov
gs
adc
aaa
dec
leave
test
imul
or
cmc
and
xchg
xchg
or
out
mov
es
and
mov
rol
adc
xor
cmp
ror
lds
ins
cmp
sub
out
(bad)
add
arpl
adc
shr
mov
mov
mov
mov
sub
mov
test
mov
cmp
push
ss
les
icebp
mov
or
jb
sub
loopne
leave
daa
inc
mov
loopne
mov
mov
ss
ins
scas
(bad)
in
cmps
stc
and
mov
fistp
or
pusha
xchg
lahf
daa
shl
sbb
stos
mov
xchg
lea
out
jp
in
cmp
mov
mov
add
or
aam
pop
(bad)
adc
push
mov
sub
les
dec
ret
pushf
mov
sub
outs
xchg
sahf
cmp
aad
les
std
je
push
shl
push
fcomp
or
out
fwait
sub
pop
popa
ja
aaa
dec
xchg
inc
test
aaa
inc
cmp
leave
out
cmp
xchg
aaa
sbb
frstpm(287
test
clc
pop
inc
jb
jmp
adc
arpl
push
adc
loop
cwde
pop
inc
dec
mov
imul
cmp
stc
or
call
bt
pushf
call
inc
push
adc
mov
push
push
ret
rcl
mov
retf
mov
push
cmp
add
xor
call
jmp
mov
ins
outs
pop
cmps
lods
test
(bad)
pop
mov
repz
add
jno
push
pop
adc
enter
(bad)
loope
and
sub
xor
stos
sbb
jne
in
pushf
mov
jl
(bad)
cmc
mov
pop
fwait
(bad)
mov
jge
repz
mov
arpl
mov
out
bswap
call
not
inc
jmp
xchg
stos
mov
test
repz
aaa
sahf
push
int3
ficom
mov
mov
jge
fxtract
out
inc
repnz
stc
xchg
mov
push
aas
outs
pop
jno
addr16
push
jne
add
add
cwde
inc
ret
sbb
add
inc
int
and
ss
dec
push
sub
cdq
popf
mov
clc
fidivr
sbb
pop
xor
jo
test
les
cmp
outs
imul
daa
jo
call
test
push
(bad)
pop
mov
xor
je
mov
and
scas
sub
data16
cmp
dec
(bad)
out
cs
adc
or
stos
sbb
adc
push
jo
add
inc
loopne
lahf
mov
mov
mov
xlat
cmp
pop
(bad)
and
arpl
sub
jle
jo
add
mov
sbb
hlt
add
adc
loopne
mov
xchg
inc
scas
arpl
xor
dec
(bad)
mov
out
pop
mov
sbb
(bad)
and
sub
push
imul
jns
sub
mov
dec
xchg
cwde
iret
int3
or
and
dec
call
lds
ror
and
mov
arpl
pusha
data16
rol
bound
add
dec
jns
lahf
loop
cmp
or
test
pusha
jp
mov
xchg
mov
mov
cmp
push
push
sub
inc
cmc
das
xor
push
add
or
add
and
mov
(bad)
pop
call
scas
rol
mov
in
sbb
jle
fs
ret
push
daa
push
arpl
mov
or
ror
push
ja
fst
add
es
addr16
jecxz
lock
out
xchg
lods
mov
cmp
(bad)
outs
pop
cld
sub
retfw
outs
hlt
imul
pop
repz
xchg
xor
xor
iret
inc
sub
call
jle
inc
sbb
jmp
repz
pop
test
imul
jmp
and
imul
inc
stos
sbb
inc
stc
mov
les
scas
xchg
adc
inc
ins
stos
scas
in
out
adc
adc
imul
cwde
adc
jmp
cmps
dec
enter
leave
cmp
dec
rcr
and
in
adc
jb
mov
pop
jae
mov
dec
jne
pop
xchg
adc
popf
sub
jbe
add
ret
loope
inc
xchg
sbb
add
mov
pop
(bad)
or
fmulp
sar
shr
popf
jle
imul
jnp
ins
out
mov
hlt
neg
adc
stos
pushf
jne
fisub
xchg
xor
push
push
push
xchg
sbb
jnp
mov
leave
into
xor
inc
mov
mov
sti
in
sub
loop
inc
mov
jle
push
add
sub
fnsave
mov
push
sbb
pop
mov
dec
das
or
push
out
pop
out
and
push
cdq
add
xor
lds
popf
ins
inc
or
xor
push
push
push
jo
nop
adc
sbb
mov
jae
inc
or
add
xor
jne
loopne
loop
stc
push
call
ss
daa
outs
sti
mov
xchg
ret
jb
je
xor
inc
loop
imul
cmp
test
fistp
lods
out
scas
mul
fcomi
sahf
stc
cmp
pop
or
and
push
ss
cld
push
(bad)
out
sub
pop
shr
jecxz
repz
jmp
xlat
push
push
mov
push
inc
push
push
not
adc
xchg
outs
mov
push
jno
idiv
test
div
mov
ss
sub
dec
xor
dec
sub
pusha
pop
or
js
dec
xor
sub
imul
sbb
ins
mov
jb
fild
xchg
loope
cld
and
in
and
out
push
inc
shl
outs
dec
lea
xchg
dec
mov
out
mov
retf
mov
xchg
or
rcr
mov
sahf
pop
je
add
lods
mov
jmp
mov
push
std
mov
out
push
jae
jb
push
jl
cmp
lahf
mov
push
das
push
loop
lods
mov
mov
push
movs
mov
in
pop
jbe
mov
xor
inc
mov
sbb
ins
(bad)
(bad)
fldcw
imul
fdivr
fst
mov
retf
fdiv
push
outs
sub
inc
pop
mov
jge
sbb
xchg
add
push
add
dec
rol
mov
push
mov
jg
cmp
dec
popa
cwde
retf
mov
shl
arpl
sbb
mov
xor
fwait
clc
rcl
cmp
pop
js
std
cmp
daa
stos
mov
push
fstp
in
arpl
fs
daa
pop
lods
add
dec
adc
cs
call
repnz
mov
ins
fistp
mov
icebp
dec
xchg
loop
sub
popa
jae
lea
jne
mov
movzx
call
jp
mov
(bad)
adc
pop
mov
ficom
(bad)
jnp
jae
out
jg
test
ficomp
cmp
movs
push
mov
loopne
jecxz
out
cmc
mov
enter
ja
sbb
test
cwde
iret
cmp
dec
bound
test
imul
imul
(bad)
js
fstp
mov
mov
mov
js
adc
sbb
and
xchg
sub
sbb
mov
xchg
mov
outs
mov
pop
int3
inc
out
sub
dec
int
jge
or
fistp
jmp
pop
sbb
cmp
(bad)
(bad)
pop
pop
push
lds
xchg
adc
xor
mov
mov
mov
inc
add
(bad)
lea
(bad)
sahf
push
add
ja
inc
fwait
mov
popf
fist
inc
xor
aam
loope
push
(bad)
gs
outs
add
jmp
ss
dec
cmp
mov
ins
fild
xchg
lds
es
addr16
std
cmp
stos
mov
push
inc
mov
push
test
dec
push
rcl
adc
sub
mov
push
das
cmps
mov
int3
cmc
adc
data16
aas
dec
cmp
loope
jmp
xchg
adc
scas
cmp
sub
sub
dec
popf
inc
test
jnp
pop
leave
mov
add
sub
(bad)
mov
mov
fwait
push
and
fdiv
push
je
in
cs
rol
fdivp
sub
jo
(bad)
xlat
and
shl
fcmove
pushf
or
pop
test
pop
inc
sbb
pop
add
sbb
push
push
pop
push
fisttp
adc
ret
pop
out
dec
jmp
test
stc
ss
push
add
fwait
sbb
sbb
ret
mov
pop
pop
enter
lods
and
or
add
scas
add
add
add
add
add
sub
in
aaa
add
scas
add
add
add
add
add
aaa
add
add
test
jmp
mov
lea
pusha
lea
call
push
lea
jb
pushf
push
lea
jae
push
call
sub
mov
adc
xchg
(bad)
xor
leave
sbb
cmp
xchg
sbb
sar
fild
pop
xchg
adc
loope
add
das
mov
sahf
and
pop
fisttp
inc
cmp
or
xlat
rcl
mov
adc
adc
sub
sub
out
dec
dec
or
push
lea
aaa
ret
es
lahf
ds
xlat
inc
fbstp
xchg
test
dec
xchg
xor
enter
jnp
inc
hlt
adc
or
push
pop
mov
cmp
and
pop
cmp
pop
aaa
jnp
hlt
pop
pop
or
int3
(bad)
mov
nop
scas
cs
inc
cmp
sub
ins
pop
xchg
add
inc
mov
and
inc
js
ins
mov
adc
cli
sub
cld
push
mov
addr16
add
sub
mov
lock
fistp
in
fidivr
jle
xchg
rol
out
mov
lods
cli
movs
xlat
imul
mov
xchg
enter
rcr
mov
in
in
ror
xor
adc
dec
or
aam
mov
cs
cmp
or
xor
out
inc
scas
xor
mov
pop
adc
push
(bad)
push
jne
dec
fwait
mov
shr
mov
cmc
ror
cmp
imul
in
fwait
aad
jmp
add
ret
add
and
pusha
push
sub
bound
sub
or
rol
xchg
call
movs
sti
and
dec
pop
xchg
dec
mov
xor
dec
call
sub
sbb
lods
adc
lock
ss
jo
xchg
js
std
cmp
leave
out
inc
cmp
jle
and
in
enter
jmp
xchg
jmp
sbb
inc
push
inc
xchg
adc
sub
xor
mov
iret
jge
or
fs
ret
pusha
inc
inc
call
and
mov
data16
mov
(bad)
jne
fdivr
loopne
arpl
jmp
xor
dec
cmp
xor
push
or
jge
(bad)
pop
int
jns
add
add
dec
mov
les
stos
sub
movs
rcr
inc
sbb
scas
xchg
mov
sbb
mov
in
mov
stos
cmc
sti
sti
ss
stc
mov
pop
xchg
aad
mov
push
aaa
mov
pop
mov
call
in
xor
push
jle
test
adc
jl
and
cld
bound
pop
outs
xchg
sbb
jne
xor
sar
rol
fsub
movs
dec
leave
sar
sahf
mov
xor
adc
push
and
sub
jmp
xchg
add
pop
xchg
dec
cmps
into
adc
xchg
out
and
es
fs
ja
push
pushf
mov
lea
jb
pushf
clc
cmp
mov
lea
jne
and
movzx
shl
mov
jmp
inc
xchg
jge
bound
cmp
push
dec
cmps
in
xchg
inc
fadd
cmp
add
cmc
xor
outs
and
ins
outs
(bad)
adc
ins
dec
pop
test
sub
cmp
outs
fisttp
sub
mov
jecxz
fiadd
jno
jbe
mov
push
or
pop
aaa
xchg
jmp
in
cdq
cmp
push
inc
jbe
adc
pop
xor
xchg
scas
leave
add
fs
out
test
mov
pop
lea
call
pushf
mov
mov
pusha
lea
jmp
sub
mov
rep
jmp
sahf
dec
mov
outs
push
ficom
arpl
jmp
mov
cmp
jge
mov
(bad)
aas
repnz
mov
into
in
in
or
je
in
mov
std
cmp
push
sbb
aaa
fxch
inc
sar
dec
mov
dec
sbb
pop
inc
sbb
lock
jecxz
push
stc
cmp
out
and
jno
es
mov
add
movzx
add
mov
push
push
mov
cmc
add
pushf
mov
lea
jmp
pushf
lea
ja
seta
inc
inc
call
mov
jmp
adc
test
neg
xchg
and
rcr
mov
dec
pushf
mov
mov
xchg
btc
pushf
mov
call
lea
jne
rcr
rcl
call
mov
xchg
adc
jl
jae
jecxz
imul
adc
jge
arpl
fcmovnbe
jo
ror
nop
clc
jecxz
add
inc
jg
rcr
in
sbb
std
(bad)
mov
hlt
cwde
jle
aam
inc
call
sub
pop
hlt
and
push
mov
sub
xor
sbb
and
das
pop
or
inc
xor
or
ret
std
call
xchg
mov
cld
lock
rcr
stc
jp
mov
add
cs
xor
mov
add
or
(bad)
adc
lahf
int3
bound
sti
xor
repz
push
sub
movs
lods
xchg
scas
xchg
push
dec
(bad)
jl
icebp
sahf
or
inc
inc
out
into
jge
test
mov
jbe
add
inc
es
mov
cmp
mov
lods
hlt
(bad)
adc
mov
scas
mov
push
push
cmp
ret
xchg
adc
js
in
jae
aas
sub
push
push
mov
sar
and
sub
(bad)
icebp
cmovb
mov
inc
xor
adc
xchg
pop
add
movs
gs
cmps
pop
inc
push
xchg
pop
test
arpl
pushf
pop
enter
dec
pop
push
leave
sti
lods
mov
mov
add
ins
stos
cdq
or
mov
sbb
add
and
sub
iret
jo
jne
xchg
ror
icebp
mov
mov
push
push
call
cmp
mov
call
sbb
int3
mov
cmp
xchg
mov
pop
int
ror
(bad)
sbb
pmaxsw
cmp
xor
jmp
loop
lods
in
fs
lock
and
std
dec
(bad)
mov
es
arpl
es
lock
inc
mov
adc
retf
in
arpl
data16
mov
outs
call
ja
lods
cmp
mov
cmp
imul
pusha
add
push
xchg
pushf
mov
mov
inc
mov
cmps
adc
jo
mov
mov
push
fldenv
sub
adc
cmp
adc
adc
mov
(bad)
sub
push
mov
xor
sbb
mov
fcomp
pop
aad
xor
std
bound
mov
xor
xchg
das
cdq
enter
xchg
in
jne
fst
xlat
lods
or
jecxz
icebp
cmps
adc
test
inc
xor
loop
jmp
stos
or
cld
mov
(bad)
fcom
sbb
dec
loope
xlat
add
je
push
xchg
mov
jns
inc
and
add
cli
and
add
and
jo
mov
push
pusha
lea
jmp
cmps
jbe
sub
fs
(bad)
xlat
mov
pop
cmp
inc
shr
(bad)
xor
cs
leave
fisttp
std
sub
ja
lods
call
sub
aas
mov
(bad)
jnp
add
mov
inc
xor
xchg
test
dec
mov
jno
add
sbb
sub
pushf
cwde
jne
and
inc
xor
cmp
add
ss
movs
mov
jge
imul
mov
or
mov
call
xor
mov
pusha
call
clc
cmp
jae
ja
setbe
inc
mov
call
mov
ins
xchg
xchg
retf
and
jmp
mov
aaa
dec
xor
arpl
inc
nop
call
leave
loopne
xor
push
fucomi
das
mov
mov
jb
(bad)
(bad)
call
push
mov
stc
mov
or
rcr
add
push
(bad)
dec
xchg
pop
add
pushf
not
inc
seta
inc
cmc
push
call
cmp
pushf
pusha
jmp
or
in
hlt
movs
adc
push
sub
out
popa
mov
lds
or
out
add
(bad)
pushf
fild
iret
scas
loope
gs
jno
and
and
inc
xchg
aad
dec
mov
xchg
jo
push
out
lea
retf
and
inc
dec
inc
mov
or
pop
jge
aam
pop
or
mov
mov
inc
push
cmps
call
clc
out
daa
or
test
push
mov
and
mov
cmps
cmp
neg
push
pushf
cmc
ror
stc
test
neg
clc
stc
cmc
rol
bt
pushf
sub
call
xchg
cmps
(bad)
(bad)
jno
sti
iret
es
hlt
sbb
stos
imul
push
xchg
mov
inc
hlt
fbstp
les
daa
popf
scas
fisttp
adc
sbb
sub
fxch
and
pop
mov
inc
dec
and
push
sbb
sbb
cwde
imul
(bad)
iret
push
pushf
(bad)
call
lea
fimul
fs
imul
mov
es
xchg
jge
jp
loope
jl
mov
mov
rol
loope
inc
mov
in
jle
pop
or
xchg
das
sbb
icebp
sbb
push
movups
sbb
sahf
mov
dec
lahf
es
push
dec
mov
mov
xchg
sbb
nop
out
add
sub
hlt
mov
lea
mov
add
btc
push
ror
shl
mov
call
pushf
mov
jmp
mov
inc
not
setnp
inc
inc
not
mov
lea
pushf
call
int3
sti
and
js
jae
icebp
imul
mov
push
mov
sahf
lods
and
call
test
(bad)
lahf
leave
loopne
into
stos
or
fucomi
je
mov
jb
lods
in
and
mov
aaa
add
sub
dec
pop
(bad)
ins
push
iret
sbb
mov
repnz
pusha
jmp
pusha
test
repnz
pushf
call
lea
call
pusha
lea
jae
not
pusha
jmp
add
mov
lea
jmp
daa
imul
test
xchg
retf
aam
sub
jns
ror
pushfw
or
cmp
push
sub
sub
fwait
into
add
xor
xor
mov
pop
pop
int3
xchg
dec
popa
arpl
fstp
pop
dec
leave
xchg
pop
imul
mov
dec
ret
stos
inc
sub
lods
daa
xor
mov
in
inc
xor
cld
sub
scas
xchg
adc
mov
push
cmp
psubusb
inc
or
popf
adc
aad
cli
out
xchg
test
sub
mov
pop
push
cmp
fsubp
mov
and
ficomp
or
push
ret
cmp
(bad)
leave
mov
movs
mov
and
ds
shl
cdq
sub
xor
dec
inc
popfw
sar
mov
sub
adc
cld
mov
ins
xchg
inc
mov
das
out
mov
dec
movs
add
fimul
inc
sti
ficom
fisttp
push
xor
add
imul
js
pop
cmp
fstp
in
push
sub
fistp
cmp
test
dec
inc
sbb
mov
xor
js
push
add
adc
add
jmp
mov
cli
call
inc
clc
jmp
adc
pop
loope
jl
shl
mov
mov
das
xchg
shl
add
outs
jno
loope
push
enter
cs
bound
std
div
aad
addr16
xchg
push
lods
loope
mov
dec
lahf
out
fnsave
imul
(bad)
hlt
mov
dec
sub
(bad)
in
sub
jl
es
pop
mov
sar
lea
jb
cmp
pushf
test
cmp
pusha
push
lea
jne
inc
push
shr
mov
cmp
pusha
test
push
add
jmp
rol
bt
jno
jmp
xor
(bad)
ins
ret
arpl
push
push
jl
mov
inc
sbb
jmp
adc
or
sub
fnstenv
mov
std
mov
jecxz
xor
outs
repz
mov
inc
mov
inc
call
pop
push
xchg
mul
cmp
jns
sub
sbb
cmp
cli
(bad)
sbb
(bad)
cs
movs
movs
mov
and
test
mov
sub
int
aas
jg
sub
out
aad
(bad)
sti
mov
and
dec
adc
pop
addr16
jge
sbb
cdq
idiv
das
popa
xlat
in
fwait
repnz
hlt
jbe
imul
mov
xor
xchg
pop
fisub
mov
bound
cmp
stc
push
stc
cmp
pop
sub
repnz
fld
inc
cld
daa
jp
mov
ror
xchg
(bad)
(bad)
call
mov
lea
jb
cmp
push
pushf
cmp
pusha
jmp
(bad)
jne
push
pop
push
mov
jnp
jecxz
retf
adc
pop
and
cmp
int3
jns
outs
imul
adc
icebp
inc
mov
lods
cdq
(bad)
(bad)
and
dec
dec
pop
pushf
pusha
arpl
mov
cmps
ret
in
jl
popa
je
gs
inc
pop
shl
ficom
scas
jl
popa
and
popf
mov
test
mov
jecxz
sbb
xor
jl
xchg
cmc
rcl
fmul
sahf
sbb
mov
add
and
and
(bad)
call
mov
hlt
fcom
mov
sub
or
ss
dec
xlat
nop
mov
jle
adc
push
jns
retf
push
imul
dec
outs
push
lea
mov
xor
je
or
fcomp
dec
je
mov
retf
and
lds
cmp
pushf
in
xor
and
sbb
sub
es
mov
daa
mov
es
and
aaa
ror
mov
arpl
adc
(bad)
adc
(bad)
or
mov
pusha
(bad)
cmps
pop
lods
std
sub
sbb
cwde
push
jnp
std
ds
sti
mov
aas
xor
pop
add
xor
xchg
imul
jg
movs
xor
dec
test
or
rcl
fst
inc
cmp
fwait
push
pop
push
rcl
mov
outs
pop
das
add
cmp
loope
rcl
mov
pop
cmp
mov
es
or
fstp
ins
push
xchg
inc
push
mov
fwait
lock
out
inc
xlat
push
push
gs
sub
cdq
cdq
xchg
push
sub
push
cmps
jnp
ror
outs
sub
div
shr
dec
test
adc
std
jo
ret
mov
mov
stc
jno
stc
jno
mov
fmul
inc
cmp
retf
xchg
sar
rcl
jae
add
pushf
jle
adc
and
int3
and
push
xor
adc
(bad)
dec
out
jle
stos
lds
in
(bad)
mul
and
loopne
add
jb
lea
je
or
push
sbb
int
clc
in
pop
add
jb
fcom
dec
jge
dec
scas
mov
mov
dec
(bad)
aam
pop
rcr
mov
push
sbb
sub
mov
xor
jle
mov
mov
pusha
not
pop
mov
push
pushf
push
ret
push
push
pushf
lea
jne
jmp
dec
push
push
shr
and
and
sub
sbb
in
inc
dec
jle
inc
nop
lods
arpl
push
pop
xchg
xor
rcr
cmp
push
and
imul
(bad)
icebp
sub
in
hlt
mov
icebp
repnz
xchg
mov
push
stos
ja
fs
hlt
push
fild
inc
mov
pushf
mov
mov
add
xchg
and
push
mov
out
and
inc
outs
or
bswap
movzx
not
pushf
mov
movzx
lea
not
pop
mov
movzx
push
mov
mov
push
call
pusha
push
lea
jle
je
rcl
shl
lea
inc
add
adc
inc
mov
cmc
add
jmp
aam
xor
inc
hlt
fcomip
pop
mov
adc
mov
cmp
inc
test
bound
outs
fadd
leave
add
rol
stos
aad
call
mov
ror
into
lods
test
jmp
lds
imul
into
and
pop
int
lahf
inc
test
and
loop
(bad)
mov
(bad)
xor
pop
ins
jle
es
mov
xor
pop
sahf
mov
outs
fidivr
js
jle
es
int3
pop
or
nop
lods
xor
mov
loop
inc
mov
push
sbb
out
aam
icebp
movs
xchg
scas
adc
stos
jmp
xchg
cmps
push
mov
gs
fs
jg
imul
stos
fisubr
dec
xchg
test
les
pop
and
repz
cmp
popf
jecxz
jo
push
mov
neg
cld
jg
xor
nop
add
(bad)
es
push
mov
cmp
sub
movzx
pushf
bswap
mov
pushf
jmp
scas
cdq
jg
or
loop
nop
fidiv
cld
or
mov
je
adc
xor
js
aaa
xlat
aas
es
arpl
dec
cmp
pop
hlt
jge
and
fist
ja
push
rcr
fdiv
movs
xchg
cmc
loop
xor
mov
cdq
dec
push
loope
push
and
test
dec
add
sbb
das
push
scas
mov
cwde
cmp
sbb
ror
repz
jl
dec
aaa
jmp
sti
mov
outs
retf
scas
es
(bad)
mov
aas
call
dec
call
ss
jno
fiadd
sbb
imul
gs
daa
mov
mov
sbb
inc
add
test
push
stc
cmp
push
inc
dec
fld
sbb
xlat
pop
push
imul
(bad)
int
retf
test
mov
mov
arpl
je
stos
xlat
scas
add
iret
xchg
cmp
sub
sbb
sub
and
mov
or
test
jo
add
popa
fcomp
push
xchg
sbb
xchg
icebp
mov
add
pusha
cmp
not
cmc
neg
clc
xor
mov
lea
call
push
clc
push
cmp
pusha
pushf
mov
mov
lea
jae
pusha
clc
cmp
mov
push
lea
jae
clc
pushf
cmp
jmp
lea
jb
pushf
push
push
ret
pop
dec
xchg
xlat
cmps
or
ja
ds
es
js
ins
xchg
je
iret
dec
sub
mov
sbb
popf
push
pop
je
mov
fld
icebp
bound
push
xor
mov
and
push
pusha
xor
leave
daa
clc
jp
lds
cdq
pusha
stos
ficom
or
sub
hlt
and
mov
dec
or
int
ror
dec
(bad)
xor
adc
sahf
cld
jb
mov
cdq
adc
jle
es
adc
enter
ficom
test
ins
neg
shr
(bad)
pop
sub
mov
ss
xchg
ins
pop
cmps
cmps
sbb
icebp
mov
xchg
xchg
mov
out
push
or
into
push
xchg
sbb
pop
ins
push
call
call
popf
sbb
mov
fucomi
sahf
xchg
adc
xchg
outs
test
stos
jmp
cmps
das
imul
shl
xchg
push
pusha
inc
mov
fstp
mov
scas
mov
inc
aaa
in
les
jns
out
mov
icebp
sbb
je
mov
sub
in
sbb
xlat
mov
lock
loopne
xchg
or
cmp
iret
gs
ds
test
movs
mov
ret
pop
test
xchg
or
push
cwde
cmc
xlat
mov
or
xchg
or
jae
lahf
xor
pop
or
mov
outs
ret
adc
mov
div
inc
push
or
(bad)
in
fwait
mov
sbb
sub
mov
cli
cmps
and
fadd
adc
xor
mov
push
int3
push
or
in
inc
dec
(bad)
(bad)
cld
cmp
pop
jl
jmp
sub
ror
sub
push
dec
std
or
fwait
mov
out
icebp
fsubr
cmps
(bad)
sbb
add
sub
mov
push
inc
mov
sti
ds
clc
and
mov
xchg
mov
mov
and
in
lock
jnp
call
xchg
fstp
jns
xchg
(bad)
xchg
jb
rcl
xchg
shr
sbb
mov
nop
aam
das
adc
and
ret
xchg
call
xchg
pushf
ficom
repnz
int
test
push
adc
outs
scas
fwait
in
mov
dec
popf
cdq
mov
call
call
div
add
mov
xchg
ret
xchg
setnp
rcr
stc
mov
add
sub
pusha
adc
mov
cmc
pushf
xchg
btr
shrd
mov
bt
stc
sub
call
pushf
mov
push
pushf
lea
call
pusha
jmp
ja
cwde
sub
or
add
ficom
mov
or
mov
(bad)
and
out
cwde
or
push
fwait
ss
sub
pop
lea
jns
push
out
pushf
sbb
cmps
leave
cwde
ficom
and
cmp
mov
cld
repz
int
pop
push
xchg
retf
adc
cmp
mov
loop
loopne
xchg
push
add
jmp
cmp
lea
gs
out
xchg
std
stos
in
es
xchg
adc
cmp
xchg
lods
sub
(bad)
mov
frstor
shr
xor
jae
mov
inc
mov
mov
std
mov
sub
scas
mov
popa
sub
inc
jne
cmp
jmp
mov
mov
bound
and
sahf
popa
add
les
push
cmp
sub
std
adc
add
pop
bound
add
dec
dec
cmp
xor
enter
jg
jnp
mov
(bad)
sub
jae
add
jg
sub
ss
jle
fsub
push
xchg
fsubr
test
mov
xor
adc
inc
dec
(bad)
sub
push
cs
jbe
and
out
push
mov
dec
pop
repnz
mov
idiv
fcom
lds
ret
fdivr
mov
mov
popf
jp
jns
mov
pop
push
jg
sub
repnz
push
aaa
sbb
dec
cld
inc
fdivr
sbb
clc
jecxz
inc
mov
sub
ret
or
sbb
xchg
push
pop
bound
pop
mov
clc
mov
push
cmp
ror
push
or
add
call
mov
lea
ja
push
sub
pop
rcr
add
dec
bsf
mov
adc
sar
mov
pusha
repnz
call
or
jo
ja
out
pop
adc
xchg
test
pop
stc
dec
lods
add
jnp
addr16
cli
xor
jbe
mov
lods
mov
shr
dec
mov
shl
mov
xor
repnz
mov
test
jecxz
mov
pop
mov
pusha
xor
or
mov
fcomp
clc
mov
and
dec
jb
cmp
ret
jp
loopne
mov
jl
fisubr
mov
adc
adc
movs
mov
and
sub
pop
cdq
xchg
adc
aad
mov
in
lods
mov
sbb
shl
rcr
int3
jge
pop
movs
mov
hlt
out
test
stc
cmp
leave
mov
inc
mov
mov
adc
loop
and
pop
push
and
dec
xchg
lods
int3
pop
sub
push
mov
mov
outs
pusha
mov
mov
push
dec
dec
setae
inc
push
pushf
mov
push
mov
mov
call
and
arpl
xchg
sbb
cmc
mov
imul
add
push
push
push
arpl
jns
mov
fnstsw
movs
iret
ror
push
in
data16
mov
pop
sub
loope
cwde
or
das
js
sti
add
out
fnsave
dec
mov
mov
mov
cmp
pushf
lahf
sub
js
int
cmps
mov
inc
inc
sti
shl
mov
adc
retf
repz
out
push
aam
dec
jle
out
into
and
jle
cmps
outs
inc
add
push
in
std
pop
push
sbb
pushf
push
inc
cmp
jmp
addr16
sub
mov
mov
pop
mov
jg
sbb
shl
outs
sbb
xchg
aam
mov
int3
adc
push
xor
cmp
mov
mov
nop
mov
mov
mov
push
clc
neg
clc
rol
cmc
test
neg
call
lea
ja
pushf
jmp
mov
mov
push
mov
jge
aad
cmp
inc
popf
loope
in
mov
lock
in
std
bnd
xor
outs
xchg
jmp
in
pusha
cmc
and
dec
xor
or
sub
dec
mov
jbe
and
aaa
sbb
sbb
cmps
xor
mov
xor
in
jge
es
jo
inc
sti
(bad)
in
xchg
xlat
jmp
xchg
sbb
into
je
xchg
dec
add
hlt
pusha
mov
loope
pop
push
sub
and
mov
pop
call
test
leave
cmps
adc
adc
add
jmp
xchg
mov
outs
lods
cld
jg
mov
popa
ficomp
das
inc
xlat
addr16
ret
mov
cmp
adc
adc
add
sub
test
cli
jo
std
push
call
jp
(bad)
bound
mov
je
xchg
data16
and
xchg
movs
mov
push
call
fadd
sbb
mov
sti
out
push
inc
mov
mov
adc
int
ins
mov
mov
cmp
test
cmp
push
dec
imul
in
dec
inc
outs
adc
sub
xor
jne
not
js
mov
push
frstor
daa
ror
or
call
(bad)
pop
(bad)
ffree
movs
in
dec
mov
jg
fwait
mov
mov
sub
cmps
ins
stos
bound
adc
retf
scas
cmp
add
pusha
push
mov
mov
push
mov
mov
call
aaa
inc
popf
lods
data16
xor
je
sub
hlt
adc
pop
xlat
mov
loopne
pop
loope
xor
pop
jno
stos
ret
cmp
xor
mov
aam
jmp
pop
lods
in
xchg
xchg
push
adc
inc
mov
inc
loop
push
and
vpcmpeqw
pop
push
xchg
(bad)
fnstenv
out
mov
add
imul
and
or
adc
arpl
cmp
loop
leave
cmp
cmp
sbb
stc
cmp
daa
std
(bad)
or
mov
cli
push
iret
dec
bound
sub
sub
xlat
jecxz
jp
hlt
ret
fld
daa
daa
mov
(bad)
rcl
sub
mov
es
into
cwde
dec
pushf
push
pushfw
pop
shl
not
mov
cmp
push
bt
bt
not
push
cmp
jmp
jmp
mov
push
shr
scas
xor
inc
call
push
std
adc
loopne
js
jl
leave
or
ds
mov
push
dec
jne
cmp
jmp
cmp
cmp
xchg
lods
pushf
cmps
stc
call
mov
(bad)
jno
sbb
pushf
inc
call
shr
pushf
lea
je
jmp
test
pop
jle
push
rcl
repz
jp
ss
jp
push
fs
sbb
lods
sub
adc
mov
mov
sbb
leave
loopne
js
inc
xchg
call
lods
(bad)
or
lods
in
clc
mov
fimul
cmp
inc
enter
cli
mov
popf
loopne
call
in
fidiv
ds
pop
jle
adc
mov
xchg
hlt
retf
std
sbb
mov
punpckhbw
jp
in
cmps
cmp
jne
push
or
push
inc
test
std
addr16
add
dec
stc
adc
inc
fs
and
jg
and
scas
pushf
movs
pop
sbb
shl
loop
mov
repz
test
pop
jno
mov
pop
test
clc
cmp
movsx
lahf
pushf
lea
cwde
push
pushf
setno
mov
push
push
lea
ja
jmp
adc
dec
sub
movs
les
cwde
out
fist
or
and
mov
push
mov
push
xchg
call
loop
aas
xor
aas
jmp
lea
push
mov
push
das
into
call
ret
jns
stos
and
les
mov
nop
aaa
push
dec
and
(bad)
mov
adc
lods
daa
push
fcom
int3
mov
mov
imul
xor
add
xor
test
shr
shl
stc
cmp
setge
lea
jp
cwde
bswap
lea
pusha
lea
mov
pusha
jmp
mov
push
xor
call
cmp
add
add
stc
mov
test
pusha
test
call
fadd
or
icebp
int
adc
fwait
push
inc
gs
cwde
push
cmp
popf
pusha
push
adc
jnp
arpl
mov
pop
add
aaa
sbb
call
popf
mov
cmc
push
fld
pop
mov
push
(bad)
jg
push
cmp
inc
movs
test
mov
mov
movs
xchg
cmp
daa
pop
cli
out
(bad)
add
or
dec
mov
sahf
clc
mov
fst
cs
pop
dec
add
test
fdivr
xor
call
xor
(bad)
es
push
test
push
push
rol
enter
xchg
into
add
or
fsub
jnp
aas
in
outs
leave
loopne
mov
pop
stc
fucomi
or
mov
pop
lods
in
push
mov
cmp
or
or
fisttp
sbb
push
int
push
(bad)
jne
es
test
out
cdq
scas
aam
iret
and
test
sbb
out
inc
ror
retf
dec
mov
xor
(bad)
or
pop
push
push
rol
test
fcomp
sti
cmp
outs
sbb
out
mov
lods
call
stc
dec
jmp
mov
repz
movs
jmp
pop
xchg
dec
xor
cmp
mov
cld
mov
and
stos
sbb
fwait
mov
cwde
pushf
lea
jne
bsr
inc
pusha
xor
aam
mov
lahf
bswap
mov
lea
cmp
add
inc
shl
mov
pushf
bt
pusha
bt
test
mov
jmp
jmp
pop
imul
imul
inc
inc
add
jbe
adc
jbe
or
outs
mov
(bad)
fistp
sbb
aad
std
push
retf
mov
daa
xchg
adc
mov
add
push
rcl
fidiv
mov
or
and
push
add
ss
lods
mov
fs
add
mov
jg
sub
cmp
adc
cmp
cld
sbb
and
jecxz
arpl
mov
in
push
out
int
call
jg
pop
push
lea
pop
cld
sbb
ss
mov
mov
mov
jbe
push
xor
les
sub
or
mov
lods
push
mov
push
lea
jmp
xchg
cmps
mov
dec
xor
mov
push
push
or
test
lods
sub
and
mov
cli
cmps
inc
in
sub
sub
xchg
stos
cmp
jne
call
add
retf
ficomp
lahf
inc
sahf
icebp
add
add
jbe
mov
inc
xchg
jmp
idiv
sub
mov
mov
fisub
data16
ror
ret
dec
sub
icebp
and
nop
stc
add
aad
retf
and
sar
bswap
mov
mov
lea
jmp
sub
data16
push
shr
jne
jl
adc
mov
sub
mov
add
mov
jbe
(bad)
xor
push
xor
in
xor
jmp
(bad)
jge
lods
in
das
jae
inc
adc
adc
aaa
dec
add
cmp
imul
mov
iret
lea
push
shl
mov
xchg
dec
lods
(bad)
sub
out
nop
out
lds
sub
mov
js
mov
comiss
fucomi
out
xlat
or
popa
call
mov
in
push
ins
dec
ret
mov
push
mov
xchg
pushf
retf
xor
add
lea
jae
call
neg
mov
rol
jmp
imul
jo
fwait
aas
test
dec
push
int
jno
in
test
dec
mov
js
icebp
jmp
fisubr
inc
inc
cmp
mov
outs
sbb
xor
lea
jg
in
fisub
push
loopne
sbb
ret
idiv
ins
mov
jp
hlt
xchg
xchg
jne
mov
pusha
lea
jne
pusha
movsx
movsx
and
mov
stc
test
pusha
add
push
jmp
cmp
and
bt
cmp
pusha
pushf
add
mov
lea
jmp
pop
dec
test
push
or
fist
and
les
add
mov
outs
mov
jne
imul
das
push
sbb
stc
push
fnstsw
imul
outs
push
into
sub
jecxz
ror
jnp
(bad)
mov
adc
sub
mov
movs
or
or
xchg
in
pop
and
sub
push
stos
jno
xor
and
mov
mov
js
add
inc
mov
lea
call
pusha
mov
jmp
cmc
mov
lea
push
mov
pushf
bt
cmp
mov
pushf
lea
jbe
add
shl
mov
cmp
sar
add
btc
mov
btr
add
pushf
bswap
shrd
bsf
mov
or
shr
mov
bt
bt
test
push
cmp
mov
lea
jbe
mov
shl
shrd
sub
inc
adc
mov
xor
add
xchg
mov
bsr
lea
cmp
movzx
add
pushf
inc
movsx
add
shr
jmp
lea
jbe
shl
sar
shld
sub
bswap
movzx
sbb
mov
neg
mov
bsr
bswap
add
shld
shr
sbb
mov
shl
test
sar
add
movzx
mov
pushf
jmp
mul
repz
cmp
pushf
mov
fldcw
iret
loope
add
dec
pushf
in
add
aad
xchg
and
outs
test
sub
nop
cmc
push
scas
dec
sub
aad
aad
push
scas
or
inc
jecxz
xchg
xlat
and
loop
mov
push
ret
add
enter
inc
movhps
sub
test
out
nop
es
xchg
mov
cmps
int
inc
mov
sahf
mov
and
dec
inc
add
call
bt
jmp
sti
or
imul
dec
cwde
mov
xchg
jmp
jp
mov
xor
cmp
mov
(bad)
lods
jb
add
and
lock
mov
sub
push
or
out
mov
push
dec
mov
pushf
cmp
cmp
sbb
sbb
loope
das
loop
fs
mov
cmc
push
sub
call
aas
dec
lods
stc
mov
sbb
pop
ret
fs
sub
pushf
idiv
mov
(bad)
(bad)
in
jge
inc
stc
imul
pusha
push
out
test
cs
dec
pop
(bad)
imul
adc
dec
rol
jp
movs
and
mov
iret
push
cmp
mov
nop
js
dec
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
ror
cmp
cmp
neg
push
clc
rol
mov
pushf
cmc
test
neg
stc
stc
add
jge
add
test
call
bt
add
call
(bad)
add
mov
xor
jl
cwde
xchg
pop
jmp
scas
add
es
bnd
or
xor
ret
xor
jbe
jecxz
(bad)
mov
inc
dec
cmp
dec
mov
mov
and
bound
stos
pushf
out
test
dec
dec
cmp
(bad)
jno
(bad)
les
pop
pop
call
test
dec
or
mov
and
jbe
test
cmp
ja
mov
push
sbb
mov
fnstcw
nop
aam
pushf
ins
ss
xchg
sbb
popf
xlat
rcr
push
stos
push
cmp
or
dec
mov
and
push
fbld
dec
cmp
int3
dec
out
movs
mov
je
es
ins
pop
adc
cmp
push
pop
mov
lahf
ror
xchg
aad
xchg
in
in
loope
add
pop
mov
outs
aad
push
test
loopne
add
cmps
fucomi
sbb
dec
cmp
jb
ret
pop
lods
in
sbb
iret
push
add
mov
sub
mov
shl
test
push
call
mov
stc
sub
pushf
call
lea
ja
pushf
push
push
pusha
lea
jb
cmp
call
dec
pushf
shl
push
call
push
inc
sahf
es
je
cmp
xor
jmp
xchg
mov
(bad)
mov
lods
sub
hlt
and
dec
lds
repz
cwde
shl
cmp
mov
adc
cmp
iret
jo
cs
or
retf
xchg
push
shl
cmps
pop
jbe
and
jnp
test
inc
pusha
(bad)
fst
fiadd
push
sbb
dec
lds
outs
jmp
dec
mov
lahf
mov
mov
int3
push
sets
cwde
mov
sbb
seta
aam
sub
and
sbb
jmp
push
mov
pusha
lea
jl
pusha
pusha
mov
mov
push
lea
jmp
lea
je
clc
pusha
pusha
add
push
stc
cmp
stc
cmp
mov
lea
jb
bt
call
pop
leave
pop
sbb
daa
(bad)
fidiv
sar
or
mov
push
(bad)
sbb
jecxz
adc
mov
xor
enter
test
clc
(bad)
adc
add
movs
xchg
pop
or
jle
les
lods
lods
scas
push
add
sub
lods
inc
inc
pushf
xor
into
test
out
call
dec
jecxz
cmp
or
cmp
push
sbb
jne
add
xchg
jmp
jp
push
pop
ja
mov
popf
int3
adc
das
jae
pop
jl
mov
mov
cld
test
push
cmp
lea
movzx
lea
pushf
pushf
lea
jmp
pop
lods
pop
ret
jecxz
cmp
xchg
inc
rcl
and
(bad)
and
call
test
inc
xchg
movs
sbb
cmps
mov
(bad)
jecxz
xchg
jb
jnp
mov
push
sub
mov
sub
mov
test
adc
xchg
mov
inc
dec
(bad)
jnp
dec
or
das
push
movs
in
ja
movs
sbb
mov
jg
test
jge
bswap
mov
pushf
cmc
sbb
sub
stc
shl
add
shr
test
mov
neg
or
add
bt
inc
and
add
push
mov
stc
push
bt
cmp
shr
cmp
pushf
mov
pushf
cmp
push
mov
pushf
lea
je
test
push
clc
cmp
mov
pushf
lea
je
stc
cmp
cmp
call
stos
pusha
pusha
mov
pushf
lea
jmp
lea
jbe
shl
neg
mov
bswap
add
add
shld
inc
mov
add
add
add
cmc
mov
and
bsf
sar
inc
mov
bt
cmc
jmp
clc
sub
push
lea
jb
jmp
cmp
test
ins
sub
inc
aaa
in
pop
ins
mov
sub
popf
pop
std
mov
jne
pop
jne
add
out
ror
xchg
adc
push
jne
lods
add
in
out
retf
cwde
xor
sbb
adc
mov
fcom
inc
mov
jne
jbe
mov
sub
jb
xor
cwde
sub
repnz
push
jne
shr
inc
cld
gs
out
dec
popa
or
mov
lea
call
push
jmp
xor
mov
mov
add
imul
push
jg
repnz
and
push
jno
pop
dec
int
push
lea
mov
lock
ret
std
adc
bound
imul
repz
popf
cmps
mov
xchg
xchg
push
fs
inc
and
aaa
packssdw
or
jp
add
pop
std
stos
lahf
in
ds
aam
mov
out
ret
adc
mov
jge
inc
ds
adc
mov
dec
in
outs
ror
mov
lahf
mov
jmp
(bad)
imul
fcmovu
lahf
stc
sbb
shl
imul
test
aad
inc
jae
jmp
outs
pop
mov
pop
daa
loop
aaa
hlt
sub
push
pop
cld
xlat
mov
addr16
test
push
pop
add
sub
mov
cld
mov
cmps
xchg
(bad)
iret
(bad)
call
jae
add
pop
add
imul
add
scas
ins
adc
movs
test
fldenv
std
fnstcw
pop
mov
pop
and
cmp
cmp
dec
std
sub
add
mov
ins
sub
push
mov
call
in
sub
xchg
gs
xor
movs
ret
test
mov
xchg
adc
push
inc
repnz
sbb
pop
ficom
enter
repz
lahf
test
add
ret
push
(bad)
fidivr
jbe
mov
add
jnp
mov
cmps
ss
stos
scas
mov
adc
jnp
jg
mov
(bad)
aam
test
cdq
mov
cmp
in
call
cmp
xor
icebp
fwait
xchg
pushf
add
cli
rcl
mov
fucomi
mov
cmc
ins
cmp
rcr
jbe
cmp
mov
popf
xor
loopne
imul
jmp
les
int
sub
inc
jg
dec
dec
lods
in
ss
cdq
jmp
mov
jge
inc
add
lahf
xor
xor
jb
mov
ja
xor
pop
mov
jge
test
mov
pop
inc
fdiv
add
or
xor
leave
jmp
cwde
jp
mov
fcomi
jno
stos
leave
ds
add
sub
sti
sub
cdq
sub
push
mov
xor
int3
xlat
dec
int
mov
xchg
shl
sar
mov
loopne
imul
out
fsubr
test
xchg
lods
out
adc
xchg
arpl
stos
rcr
call
pop
call
pop
inc
dec
mov
repz
jecxz
dec
inc
mov
lods
test
(bad)
in
pop
pop
dec
mov
pusha
dec
pop
mov
xor
adc
mov
imul
dec
jnp
pop
mov
mov
push
lea
mov
sbb
adc
movsx
sub
pop
btc
mov
cmc
stc
push
mov
sub
stc
mov
call
push
gs
sub
mov
add
loop
in
leave
cmp
adc
sub
mov
jb
sub
les
xor
mov
sahf
aaa
jno
add
push
mov
xchg
jno
lea
or
inc
lock
enter
pusha
push
outs
aaa
nop
or
adc
dec
into
mov
imul
and
ss
pop
clc
pusha
inc
and
xchg
push
shr
out
push
sub
cwde
inc
mov
in
mov
add
xor
sbb
cmps
cld
add
sub
cmp
imul
cli
in
mov
gs
adc
or
scas
jne
daa
ds
inc
push
mov
jno
jp
mov
mov
push
out
(bad)
and
fidiv
xchg
push
adc
mov
lahf
jne
inc
fisttp
and
adc
or
or
inc
xlat
jle
je
shr
jnp
es
xchg
ror
mov
jae
es
js
sub
adc
sbb
and
loope
cmp
sbb
inc
(bad)
pushf
shl
inc
jno
mov
das
push
bound
xchg
inc
xor
sbb
sub
mov
test
cmp
adc
sub
lds
adc
mov
(bad)
cli
ror
in
js
mov
sbb
mov
stc
hlt
or
mov
push
rol
add
jae
iret
jecxz
cdq
lock
popa
jo
jns
xchg
dec
jae
jp
inc
popa
inc
push
inc
mov
sahf
cmp
cmp
retfw
lds
mov
lods
pusha
ror
cmp
jae
scas
pop
pop
test
aas
jns
mov
jne
in
ret
ret
or
stos
cmp
call
xchg
jns
nop
out
lds
int3
and
adc
mov
pop
mov
out
push
ins
into
out
cmc
outs
(bad)
pushf
enter
lahf
push
movs
xchg
enter
out
sub
ins
mov
jae
fnstenv
mov
sbb
or
sti
push
push
pop
cld
pop
popa
call
add
aad
stc
mov
fstp
test
fwait
lds
dec
and
jmp
push
mov
pusha
lea
jne
pusha
push
pushf
stos
pushf
push
pushf
pushf
lea
jmp
bt
mov
pushf
test
test
push
add
cmp
sub
jl
clc
clc
test
pusha
mov
pushf
lea
jne
jae
push
pusha
mov
push
mov
pushf
mov
pushf
call
jge
repz
and
movs
into
adc
mov
lods
shl
xor
das
mov
ficomp
push
rcr
adc
and
mov
outs
jmp
into
dec
add
xchg
rcl
push
dec
sub
xor
ss
jbe
lods
sbb
inc
cld
mov
pop
fcom
inc
fcmovnb
call
and
pop
jnp
xor
or
mov
repz
push
bound
nop
or
out
je
bound
sbb
enter
dec
sahf
in
jbe
jmp
sub
mov
inc
or
mov
psrad
jl
mov
push
fisttp
sbb
jno
clc
ja
sub
adc
outs
fs
sti
mov
dec
loop
dec
lock
pusha
inc
mov
dec
fild
xchg
mov
and
mov
jg
push
mov
pusha
pushf
lea
jmp
cmc
cmc
pushf
cmp
sub
push
cmp
call
cmc
cmp
mov
call
sbb
clc
cmp
test
(bad)
lock
stos
bound
leave
adc
sbb
jne
pop
or
mov
pop
imul
lds
sbb
(bad)
pop
jmp
push
jno
cmp
add
into
stc
cmp
stos
stc
push
lahf
ss
sub
movs
jl
add
imul
ins
mov
imul
bnd
repnz
(bad)
movs
dec
fcomp
arpl
(bad)
mov
and
(bad)
test
dec
sub
dec
mov
adc
xor
xchg
loop
je
sub
pushf
mov
sub
sub
cli
add
xchg
mov
pop
js
out
popa
fs
mov
and
dec
jmp
mov
and
fist
mov
rcr
outs
js
sub
fdiv
mov
(bad)
enter
arpl
add
jmp
sahf
add
sub
pop
mov
lahf
mov
nop
inc
fisttp
xchg
jmp
movs
test
fcomp
fcomi
push
push
lods
mov
mov
div
pushf
xchg
inc
mov
cli
adc
push
push
mov
hlt
pushf
lea
jmp
(bad)
out
pushf
sbb
ss
xchg
das
test
cmc
ins
rol
lods
cs
mov
and
push
dec
jp
lods
xchg
dec
and
cmp
shr
rcr
clc
dec
jecxz
mov
sbb
pop
cmp
or
ds
mov
inc
test
xchg
scas
and
pop
pop
jne
mov
or
mov
cli
push
jl
fs
jmp
add
push
shl
lahf
push
adc
je
sub
mov
mov
sti
fwait
jg
pop
in
fild
movs
xchg
out
sbb
push
imul
mov
(bad)
lds
jbe
jl
and
or
les
movs
push
inc
les
cli
adc
push
pop
je
push
ret
mov
or
mov
pushf
lea
jmp
jmp
xor
cdq
into
lahf
push
adc
adc
ror
or
mov
stc
inc
push
jg
add
sub
pusha
inc
push
mov
or
arpl
(bad)
std
sub
pop
leave
push
imul
arpl
out
les
cmp
inc
jne
mov
jle
enter
dec
mov
sub
and
pushf
push
mov
lea
ja
bt
pushf
clc
mov
imul
jmp
push
pusha
push
lea
je
test
cmc
cmc
or
call
jmp
sub
dec
fild
call
call
(bad)
ror
xor
(bad)
fdivr
and
mov
xchg
(bad)
cmp
push
sub
pop
adc
test
dec
adc
xor
jecxz
mov
das
mov
and
popa
dec
outs
push
popa
jb
mov
lea
jbe
bswap
sar
rol
sub
xadd
and
dec
mov
shl
mov
bsr
sbb
shl
add
inc
shr
rol
shld
push
mov
dec
add
movsx
push
mov
lea
pusha
pusha
mov
jmp
push
add
xchg
bound
xor
cmp
inc
inc
cld
out
retf
loopne
pop
outs
out
jns
pop
cmp
lock
jo
pop
push
(bad)
enter
cmps
dec
cdq
scas
sbb
repz
add
sub
sbb
es
xchg
into
js
jo
add
icebp
or
shl
push
xchg
jb
sub
aam
mov
aaa
add
arpl
cmp
sbb
dec
out
jo
loopne
cdq
data16
pusha
scas
adc
sbb
inc
mov
mov
pop
or
les
cld
dec
neg
pop
mov
ja
sub
in
in
int3
leave
mov
arpl
or
inc
lock
xchg
out
dec
call
or
imul
daa
jle
in
add
xlat
inc
(bad)
xchg
(bad)
in
das
jge
(bad)
js
pop
mov
retf
fs
xor
dec
inc
(bad)
sbb
movs
add
cmp
aad
call
add
je
sbb
cmp
cdq
xchg
xchg
cmp
cmp
or
mov
imul
mov
pop
push
fstp
add
fnstenv
push
inc
pop
(bad)
cld
mov
dec
sahf
fs
mov
adc
xchg
mov
mov
and
mov
jecxz
mov
loopne
retf
in
inc
add
pop
ffree
gs
inc
xor
xchg
jo
mov
lahf
ror
pop
fcomp
scas
(bad)
stc
cmp
push
xchg
outs
mov
call
jmp
stos
into
retf
jmp
movs
stc
pop
pop
cli
out
xor
xlat
xor
in
imul
xor
xchg
sub
pusha
sahf
sbb
imul
(bad)
je
popf
or
inc
iret
or
cdq
pushf
push
sar
shr
hlt
dec
int3
(bad)
aas
iret
mov
loop
xor
push
ins
xchg
enter
es
xchg
pop
movs
cld
jge
fwait
or
lods
xlat
imul
(bad)
push
pop
push
ja
and
fcom
mov
lock
mov
or
int
fdiv
dec
mov
aad
(bad)
hlt
mov
cmp
sbb
pop
mov
mov
mov
daa
repz
out
mov
dec
sub
pop
mov
(bad)
sbb
mov
lods
repz
iret
leave
inc
clc
cld
aaa
popf
(bad)
out
not
inc
mov
dec
movs
and
fs
outs
mov
and
or
popa
mov
sti
and
xchg
movs
and
xchg
je
add
popf
add
cmp
aad
ds
mov
out
sub
icebp
call
out
ror
push
add
inc
test
nop
out
sbb
out
inc
(bad)
jmp
in
int3
push
or
inc
adc
add
and
dec
pop
sbb
cmp
jnp
jb
fstp
and
das
in
fisttp
pop
popf
mov
lock
mov
mul
dec
sub
mov
xchg
mov
pop
or
adc
outs
push
inc
sub
and
mov
ss
jbe
push
jl
loope
xor
fcomip
and
lods
lods
loope
hlt
mov
(bad)
nop
les
mov
or
inc
pop
pop
icebp
push
pop
mov
mov
retf
shl
pop
jl
xlat
adc
test
ret
int3
dec
(bad)
sub
push
fisttp
pmaxsw
xchg
xor
(bad)
pusha
mov
sub
xor
add
pop
xor
mov
popa
aad
sbb
lods
or
adc
push
ret
les
dec
mov
or
inc
jns
adc
dec
jecxz
sbb
loopne
jmp
push
and
xchg
test
push
outs
mov
mov
or
dec
scas
push
xor
shr
mov
inc
inc
out
jle
pop
add
sub
pop
adc
scas
jns
enter
or
jmp
fcompp
data16
mov
sbb
cld
mov
mov
mov
sbb
dec
or
inc
push
jnp
pop
aas
std
cmp
mov
test
and
pop
fwait
sub
adc
js
test
sub
xor
fs
out
push
mov
mov
(bad)
test
jge
xor
cmp
adc
jg
push
xchg
xchg
int3
out
mov
mov
imul
pop
push
cmp
lds
cmps
test
aas
dec
jmp
adc
dec
or
bswap
add
mov
sub
cld
pop
out
ror
pop
and
shl
or
inc
pop
fwait
in
inc
jns
sahf
sub
addr16
sub
push
aas
popf
lds
(bad)
bound
cmp
mov
dec
push
clc
out
adc
pop
or
popf
push
(bad)
cmp
fadd
mov
gs
clc
dec
jecxz
pop
fiadd
sub
aaa
cwde
adc
movs
icebp
in
mov
dec
lds
out
stos
in
call
dec
push
mov
push
push
add
mov
mov
push
pop
retf
jmp
push
test
xchg
mov
mov
adc
outs
mov
pop
adc
inc
cmps
xchg
push
in
mov
sub
(bad)
cmc
(bad)
push
mov
shl
ret
lds
enter
add
pop
pop
push
dec
sbb
dec
pop
cld
ficomp
lahf
fstp
push
sub
in
sub
pop
xchg
outs
mov
sub
ficomp
int3
mov
repnz
in
data16
imul
test
and
jne
stc
shl
int
mov
push
xor
cmp
clc
xchg
mov
or
mov
(bad)
mov
add
jmp
je
jns
std
push
adc
adc
scas
mov
mov
hlt
jl
jmp
xchg
jmp
jnp
push
mov
push
mov
ins
leave
daa
ds
sbb
adc
out
adc
rol
adc
aas
stc
ja
or
fadd
jecxz
cwde
add
in
mov
and
into
fnstcw
or
xchg
in
xchg
dec
scas
retf
mov
inc
push
xor
jg
test
aaa
or
adc
out
bound
shl
mov
pop
push
mov
jno
cmp
addr16
jle
push
mov
dec
adc
popa
jp
add
leave
std
xor
mov
mov
sub
add
je
loope
lds
push
mov
(bad)
mov
mov
je
jbe
mov
mov
(bad)
jns
lea
add
cmp
fistp
xchg
sub
mov
mov
cmps
xchg
cmc
sbb
pop
push
inc
loopne
jo
jmp
pop
lea
lods
cwde
scas
fcom
stos
lds
xor
pop
adc
xchg
push
xor
jge
and
mov
xlat
jp
add
(bad)
std
shl
mov
xor
ja
cmp
push
or
mov
fmul
pop
leave
stos
pop
hlt
xchg
sub
cwde
pop
sbb
aam
into
mov
pop
cmc
(bad)
add
gs
cmps
stc
int
cdq
xchg
jmp
and
out
pop
ffreep
hlt
aam
or
movaps
add
jge
test
and
jo
ret
jbe
in
ss
add
clc
adc
sub
mov
jne
retf
dec
loop
cmp
and
ins
sbb
cld
nop
inc
es
mov
dec
ret
lds
inc
aas
xchg
xor
mov
xor
ror
and
dec
and
call
xor
lock
int
push
jnp
sub
dec
sahf
mov
mov
mov
add
xchg
fwait
mov
leave
inc
xchg
mov
sbb
mov
stos
xchg
or
xchg
jae
xchg
xor
es
push
adc
(bad)
(bad)
pushf
cld
xchg
xor
pusha
mov
xor
out
pop
ret
cs
adc
pop
into
mov
sub
inc
movs
fwait
adc
push
and
rcl
imul
ret
in
aam
cdq
scas
adc
std
inc
push
in
aaa
(bad)
pop
pop
jb
pop
sar
les
mov
lods
jnp
jmp
(bad)
in
div
repz
out
dec
push
test
jecxz
ror
(bad)
sub
add
inc
stc
sbb
loope
cli
mov
call
fisttp
add
outs
arpl
out
xor
xchg
clc
jb
xchg
mov
push
inc
xchg
inc
mov
or
mov
inc
and
test
add
imul
lea
ds
leave
aad
add
psllw
sub
xor
lods
imul
js
mov
imul
loop
lahf
mul
das
enter
cdq
fcomp
mov
push
and
push
inc
popa
imul
jb
mov
fmul
movs
inc
dec
sbb
icebp
sbb
mov
mov
inc
sub
scas
jp
leave
sub
jns
jge
pop
in
and
es
cld
out
loop
ja
js
mov
data16
inc
xlat
dec
cs
xchg
xor
sti
les
sbb
cmp
(bad)
jns
fdiv
mov
xor
call
nop
fwait
mov
cmps
push
into
call
shl
lock
mov
add
ret
mov
adc
stc
cdq
mov
retf
nop
loopne
sub
jbe
(bad)
in
mov
sub
jo
mov
test
push
test
dec
mov
xor
(bad)
pop
and
sub
shr
daa
push
sub
sbb
cwde
lods
jne
shl
out
push
fldenv
inc
xchg
mov
enter
mov
sub
xchg
out
and
scas
sti
(bad)
pusha
fiadd
hlt
adc
bound
ret
sbb
inc
mov
pop
jle
push
mov
outs
out
push
inc
fs
seto
mov
nop
adc
inc
data16
outs
ffreep
cmc
sub
cmp
inc
mov
jecxz
pop
call
mov
bound
jp
mov
int3
movs
(bad)
lea
xchg
jmp
add
imul
jno
push
mov
(bad)
cs
nop
not
add
(bad)
push
fbld
push
add
inc
iret
jne
add
mov
and
outs
jmp
(bad)
cmc
xchg
or
add
(bad)
xor
aad
pop
jne
loope
pusha
sar
nop
sahf
xchg
and
mov
cmp
(bad)
imul
retf
fwait
xor
out
push
fs
cli
sub
cmps
adc
imul
inc
cmps
push
imul
jae
ret
inc
daa
inc
jnp
movs
fst
pop
push
stos
sub
stc
pop
out
sar
mov
enter
enter
jl
mov
xor
jp
push
mov
sub
in
push
push
js
imul
mov
fild
xor
lods
fst
sbb
sbb
cmp
pop
mov
ror
cld
mov
ror
mov
lods
iret
movs
pop
push
repz
dec
ss
xlat
div
mov
add
mov
hlt
mov
scas
sbb
mov
test
and
jbe
xchg
push
sbb
gs
rcl
mov
or
out
sub
adc
cdq
mov
shr
mov
jp
jae
fwait
repnz
pop
or
push
inc
ror
mov
hlt
xor
jg
outs
inc
jb
(bad)
imul
clc
mov
add
pop
addr16
inc
cmc
cwde
xchg
aaa
sbb
push
push
jo
jae
fs
stos
dec
repz
mov
pop
mov
mov
ins
mov
xlat
mov
add
in
loopne
jge
inc
inc
cmp
std
push
loope
sub
jecxz
std
sub
mov
sahf
fcom
xlat
inc
je
(bad)
mov
mov
inc
pusha
adc
and
popa
mov
pop
js
jno
mov
scas
pop
clc
adc
jno
imul
(bad)
loop
dec
sbb
cdq
mov
mov
mov
aam
movs
daa
aas
jno
aaa
in
add
fisttp
outs
cmc
cmp
pop
or
cld
lods
daa
int
mov
cdq
xchg
mov
mov
add
enter
mov
mov
dec
out
ret
jns
sub
retf
add
arpl
push
ret
aam
retf
mov
loope
mov
cmp
sub
mov
bound
cmp
dec
addr16
test
sbb
adc
jge
out
add
aaa
lock
retf
jb
mov
clc
cmps
inc
imul
pop
(bad)
cli
pop
cmp
adc
jmp
into
adc
in
lahf
mov
(bad)
hlt
lods
dec
sub
inc
push
sbb
dec
push
std
jle
inc
data16
mov
(bad)
pop
ror
shl
xor
(bad)
cmp
xor
sbb
mov
adc
fstp
cmp
jmp
and
fdivr
xchg
lods
bound
and
xchg
(bad)
(bad)
pop
push
adc
inc
push
inc
test
sahf
sbb
ds
push
pop
adc
add
sub
jae
loope
clc
addr16
imul
and
or
mov
sub
sbb
lock
popf
jmp
cmp
repnz
mov
dec
xchg
gs
mov
push
jae
and
mov
in
xchg
and
cwde
pop
(bad)
cmp
pop
sub
aam
sbb
jmp
cmp
aad
or
div
mov
xlat
mov
movs
push
add
push
pushf
addr16
and
cdq
sar
in
mov
enter
mov
in
pop
cmp
(bad)
fisttp
pop
out
sub
shl
sbb
pop
aas
fwait
int3
fs
jne
pop
repnz
mov
aas
or
xchg
aam
out
inc
inc
mov
cli
mov
sbb
mov
pop
cmp
push
push
add
mov
mov
dec
nop
xchg
ins
and
mov
aam
stc
in
adc
inc
imul
sub
dec
adc
in
enter
sub
push
push
inc
popf
add
mov
in
js
inc
fidivr
jge
test
xchg
add
cmc
movs
inc
addr16
sbb
sbb
push
mov
add
mov
ss
mov
jns
xor
sahf
pop
cmps
add
adc
je
int
add
push
loopne
(bad)
das
retf
jmp
retf
je
ss
inc
push
sub
mov
outs
adc
clc
adc
repz
push
pop
(bad)
loopne
ins
imul
add
inc
icebp
arpl
aad
lahf
pop
movs
sub
sub
jmp
das
inc
aaa
(bad)
mov
push
mov
lahf
not
and
in
in
jae
sti
ins
and
lods
movs
ret
rol
xchg
fcomp
or
push
mov
push
hlt
push
mov
mov
xor
and
inc
pop
(bad)
sahf
mov
add
sub
leave
ss
test
push
mov
or
pop
or
mov
xor
leave
hlt
in
adc
inc
jbe
sbb
sbb
mov
or
push
mov
lods
ret
hlt
sbb
mov
or
and
outs
(bad)
push
and
stc
sub
movs
pop
xlat
cwde
mov
adc
leave
(bad)
call
adc
fisttp
shr
add
(bad)
add
pop
xchg
adc
mov
xor
jp
jo
push
add
cli
xchg
and
mov
mov
test
mov
cmp
and
nop
inc
or
xchg
icebp
inc
pop
leave
retf
mov
add
sub
in
jle
stos
pop
add
in
xchg
sahf
jg
cwde
adc
retf
cld
lods
sub
push
xchg
jl
movs
data16
cmps
xor
cmp
in
mov
fcmovb
ss
icebp
rcl
aas
jbe
fdivr
movs
cld
adc
jae
or
std
ror
jne
int
cmp
xchg
movaps
push
mov
dec
xchg
popf
xchg
imul
je
ss
aam
iret
add
inc
daa
cmc
push
cld
adc
fwait
jae
fnstcw
or
pop
ds
popf
mov
cmp
repz
mov
lods
(bad)
sti
pop
cwde
fldenv
pop
jl
test
inc
inc
jae
xor
or
stos
hlt
jecxz
xchg
ins
sbb
and
mov
div
dec
add
sub
or
push
fstp
push
shr
fnstsw
mov
xchg
jns
data16
mov
pushf
push
jg
xchg
dec
lods
out
xchg
std
pop
hlt
movs
cmp
mov
jge
mov
adc
jne
jns
mov
pop
ja
retf
sub
dec
(bad)
pushf
jle
ror
nop
aas
mov
imul
adc
je
pop
or
scas
cs
pop
aas
push
fisub
cmc
hlt
sub
lods
or
xor
sub
jmp
and
sbb
stc
ins
nop
pop
mov
and
fsub
test
aad
inc
test
stc
addr16
adc
fnstsw
in
sub
jno
lods
inc
dec
call
sub
or
out
stc
cmps
dec
fcom
je
and
mov
inc
cwde
sbb
hlt
pop
in
sbb
mov
out
dec
cmp
or
out
ja
into
jbe
dec
outs
mov
cmp
lods
xor
loope
inc
(bad)
(bad)
popf
out
adc
fldcw
fs
cld
jbe
add
ret
sub
dec
stos
(bad)
adc
push
and
adc
pushf
out
scas
jmp
pop
outs
fdiv
ss
dec
outs
aaa
push
or
stos
test
ja
je
lds
gs
mov
test
cmp
mov
mov
mov
fdivrp
xor
repnz
xor
fidivr
push
cmp
jo
mov
call
cld
dec
jmp
xor
dec
pop
test
ja
inc
pushf
fild
into
add
mov
xor
mov
scas
les
mov
arpl
js
hlt
call
nop
mov
aaa
push
push
dec
push
pop
rol
add
add
ret
add
jne
stos
fimul
sub
adc
in
call
xchg
into
mov
xor
pop
neg
clc
je
xor
push
push
out
inc
ss
or
in
js
lods
cmc
fwait
jg
push
add
push
aam
dec
pop
les
fwait
pop
mov
loop
sbb
test
jnp
dec
daa
xchg
popa
pop
cmp
inc
dec
lods
sti
pop
push
ins
popa
pop
iret
mov
stos
in
jmp
(bad)
mov
std
sub
xchg
adc
jmp
mov
mov
mov
test
out
xchg
adc
idiv
test
inc
sbb
stc
adc
sbb
lea
test
div
ret
movs
inc
cmp
addr16
je
pop
add
sahf
mov
xchg
add
xchg
add
or
mov
out
and
sbb
mov
stc
ja
xchg
not
or
rcl
int3
(bad)
cmp
rol
sti
and
pop
push
mov
iret
add
jno
xchg
(bad)
icebp
call
test
mov
mov
icebp
jp
imul
loopne
push
nop
nop
mov
ror
push
out
gs
and
push
clc
ss
jbe
into
ret
outs
cs
push
push
test
sbb
inc
add
mov
mov
fcmovu
xor
and
inc
fcom
dec
std
scas
dec
xor
outs
sub
arpl
dec
(bad)
retf
(bad)
sbb
push
sub
sub
mov
arpl
mov
pop
js
sub
xchg
mov
xlat
dec
push
xchg
push
sub
mov
into
xor
loop
movs
sbb
pop
pop
test
es
jbe
test
add
fcom
push
xlat
mov
push
cmp
mov
inc
jne
sub
xor
and
leave
jmp
push
xchg
je
rcr
enter
data16
xchg
mov
or
enter
cli
sbb
sbb
fwait
addr16
ss
inc
and
aad
jmp
sbb
pop
jns
int
mov
daa
lea
jno
mov
clc
mov
xor
mov
add
jge
out
mov
xchg
mov
cmp
push
rol
pushf
stos
sbb
xchg
(bad)
push
test
lahf
inc
xchg
push
jp
cs
les
push
lea
or
jmp
jb
test
int3
iret
jnp
lods
in
and
and
int3
cmp
push
js
push
dec
bound
push
jmp
call
loopne
or
mov
and
push
dec
sbb
(bad)
mov
xor
cld
dec
inc
sub
pop
add
mov
arpl
cmp
sub
jecxz
dec
sbb
pop
outs
sbb
fcomp
mov
mov
add
and
jne
xor
adc
xor
in
imul
lahf
xor
(bad)
(bad)
and
retw
xchg
icebp
lods
mov
jge
retf
and
in
ds
repnz
cs
cmc
das
stc
aaa
cs
pop
or
jg
test
cmp
(bad)
xrelease
outs
or
xchg
mov
jno
stc
cmp
push
daa
cwde
mov
(bad)
ficom
pop
mov
jge
pop
aas
pop
fcmovu
iret
ja
sub
repnz
std
cmp
dec
ins
add
pop
cmc
and
add
add
jmp
pushf
push
lea
call
call
add
cmp
mov
shr
xchg
add
push
cmp
pop
sub
loope
or
dec
jl
jp
out
ficomp
add
inc
mov
jae
cmp
pop
scas
aad
mov
loop
sub
setg
pop
jo
lea
pop
movzx
pop
push
lea
lea
jnp
pushf
mov
jmp
nop
gs
push
int
jbe
mov
push
mov
and
mov
lock
xor
push
or
adc
mov
mov
sbb
dec
mov
cli
fcom
sahf
xchg
add
jno
lahf
rol
mov
inc
adc
fbstp
mov
xchg
push
sub
add
adc
bnd
mov
call
fadd
movs
jns
cmc
out
test
mov
cmp
out
aas
in
adc
enter
push
mov
push
(bad)
in
dec
fcom
mov
or
jl
mov
mov
mov
cmp
outs
and
or
in
imul
push
rcl
mov
loop
shr
in
and
jb
clc
cmp
push
mov
lea
jae
push
lea
jmp
call
test
mov
lahf
cmp
fcom
sub
jge
sbb
or
shl
or
iret
dec
(bad)
gs
push
push
xor
idiv
sub
pavgw
lods
hlt
in
mov
ror
stos
lods
sbb
jb
scas
iret
add
xor
imul
xor
stos
stos
scas
gs
out
inc
mov
cmp
mov
js
or
xchg
imul
aam
movs
inc
in
clc
imul
out
pop
fsubrp
leave
push
jo
add
sbb
jecxz
xor
pop
and
fwait
or
inc
je
mov
pushf
icebp
and
pop
pop
mov
jns
inc
fwait
in
hlt
push
cmp
jns
test
lods
inc
jp
and
dec
aaa
xor
mov
sahf
mov
sbb
leave
lock
xor
push
xchg
fwait
and
jnp
sbb
lods
add
or
dec
imul
loop
ret
ins
scas
fmul
aaa
scas
inc
mov
cmp
mov
nop
cmc
mov
dec
pusha
sbb
mov
stc
iret
adc
sbb
loope
inc
mov
in
ss
or
loopne
mov
mov
jb
mov
stos
out
pop
jl
ret
fwait
or
ds
fwait
jmp
pushf
push
mov
inc
jmp
push
bound
mov
into
mov
jge
sub
mov
loopne
xor
mov
inc
mov
bnd
es
pop
mov
rcl
outs
jge
push
(bad)
mov
in
retf
stos
fmul
ffree
mov
push
adc
jp
bound
jl
and
jne
and
sub
call
xor
cs
xlat
mov
mov
add
and
fst
sahf
jae
push
or
out
add
sbb
push
mov
jmp
fs
sbb
or
push
sub
sbb
adc
jne
inc
jp
push
push
loope
pop
xor
repnz
or
movs
push
cmp
mov
jp
lea
call
pusha
call
mov
jge
dec
add
xor
jmp
gs
mov
mov
push
fimul
adc
xor
cmp
xchg
out
std
mov
xor
add
mov
jno
pushf
xchg
adc
inc
inc
pop
aam
(bad)
sbb
push
pop
add
adc
movs
ret
xchg
test
imul
ret
test
out
mov
adc
pop
int3
push
sar
push
and
lea
call
pusha
pusha
mov
mov
adc
lea
jae
pusha
pusha
lea
jae
pusha
push
lea
jne
jmp
test
push
mov
cmc
adc
mov
adc
enter
cmp
call
add
fucom
pop
pop
sbb
inc
jbe
jb
pop
xchg
add
add
sbb
xor
dec
mov
mul
lds
cwde
(bad)
lods
xor
cmp
jmp
outs
lea
pushf
mov
(bad)
or
or
call
jg
mov
push
daa
pusha
and
(bad)
bt
not
stc
jmp
push
arpl
aad
inc
dec
shl
mov
pop
aas
mov
out
pop
adc
xor
xchg
mov
je
add
xor
fsubr
pushf
(bad)
fwait
push
mov
mov
rol
jecxz
xor
mov
cmc
cmp
push
xchg
lods
mov
push
mov
mov
push
or
mov
push
fs
cld
xchg
and
fld
jno
cmp
push
mov
and
daa
pop
sbb
xchg
jecxz
mov
pop
mov
jbe
jno
and
rcl
retf
lods
mov
test
outs
dec
in
adc
sbb
mov
dec
and
call
push
pusha
ret
mov
arpl
data16
cwde
mov
or
idiv
(bad)
sar
ret
addr16
(bad)
sub
cld
sub
cmp
sbb
daa
xchg
mov
mov
je
pushf
cmp
cmc
mov
cmp
pusha
push
lea
je
pusha
pushf
mov
lea
jmp
clc
int
pop
aam
adc
(bad)
fsubr
push
mov
ins
repnz
fwait
jecxz
aas
fld
into
scas
lahf
mov
dec
sar
mov
stc
push
or
jmp
mov
or
out
test
pop
aas
std
loop
test
dec
sbb
daa
xchg
dec
aam
imul
stc
dec
sbb
push
mov
loope
mov
test
cld
inc
mov
shr
mul
mov
aas
cdq
scas
jmp
ja
jecxz
xchg
scas
xor
pop
fistp
push
leave
out
stos
jnp
mov
ds
mov
ret
lods
jmp
jge
(bad)
xchg
mov
sbb
dec
addr16
daa
pop
inc
adc
push
std
sbb
jo
push
mov
mov
std
ja
out
dec
push
add
imul
pop
out
out
nop
dec
out
sub
dec
outs
cli
das
and
jbe
movs
jmp
loope
stc
daa
mov
xchg
inc
jo
jo
sbb
add
add
loope
cmp
mov
xchg
ret
out
push
(bad)
cld
dec
mov
dec
jns
hlt
adc
jmp
out
xor
mov
xor
jle
hlt
outs
mov
ins
xchg
cmp
pop
scas
mov
ror
bt
clc
jmp
stc
cmp
call
test
daa
test
fistp
or
movs
xor
push
jl
mov
(bad)
xchg
or
ds
push
sbb
lahf
jmp
shl
or
mulps
scas
icebp
or
xlat
retf
push
adc
enter
fmul
cmps
mov
mov
pusha
xor
dec
pop
adc
lahf
cmc
xor
pop
and
inc
movs
iret
out
mov
cs
int
daa
pop
dec
sbb
test
fs
add
lods
retf
add
shl
mov
mov
cmps
inc
shr
pop
mov
dec
cmp
sub
mov
push
int3
add
daa
sbb
scas
push
adc
add
adc
and
daa
pop
xor
inc
neg
mov
pushf
add
mov
mov
xor
jmp
int
jne
les
loope
push
mov
clc
scas
xchg
(bad)
je
loopne
clc
jbe
lods
mov
repnz
mov
or
cmp
xor
sbb
sub
xor
fiadd
adc
push
mov
add
jne
ins
lods
loope
ficom
clc
sub
cmp
inc
ret
inc
jle
add
jno
pop
nop
sbb
mov
movs
iret
es
xchg
mov
cmc
add
bt
pushf
pushf
cmc
movzx
bt
mov
call
pushf
adc
push
mov
lea
jmp
xchg
fisub
iret
and
(bad)
jns
in
pop
mov
push
fild
sbb
pushf
xchg
icebp
jbe
aaa
hlt
mov
xchg
fdivr
xor
ret
loop
add
lds
out
jecxz
pushf
cmp
inc
mov
stc
ficom
dec
or
cmc
sbb
and
pop
aas
movs
je
js
test
xchg
int3
mov
cmps
add
call
pop
xorps
les
cmp
call
clc
stc
cmc
not
stc
mov
neg
cmp
push
stc
pushf
xor
push
push
lea
call
pushf
stc
cmc
cmp
call
mov
mov
lea
je
push
mov
push
lea
jmp
add
nop
jne
cmp
mov
hlt
outs
lock
jl
cmp
mov
aam
add
cdq
pop
movs
sahf
fld
cli
fwait
int3
inc
movs
add
shl
dec
scas
mov
sub
push
jb
sub
add
mov
or
sti
sub
ror
sub
sbb
(bad)
mov
cmp
or
xor
sbb
imul
add
clc
pop
mov
mov
(bad)
call
sbb
fucomi
push
rol
push
cmp
pushf
cmp
mov
and
pop
pop
xlat
ficom
inc
or
adc
int3
dec
loope
and
jmp
and
inc
lock
popf
adc
pop
inc
loopne
scas
aad
addr16
or
sbb
mov
sti
or
pop
stc
mov
jmp
mov
inc
fld
adc
scas
out
jne
pop
xor
sbb
mov
jae
dec
sub
dec
inc
adc
xchg
pop
or
test
into
test
pop
pop
adc
pop
retf
xchg
xor
pop
mov
add
test
xchg
in
mov
jg
mov
dec
in
mov
fist
outs
mov
ins
outs
sahf
push
mov
mov
pop
adc
jecxz
gs
pushf
or
push
int3
in
add
mov
sahf
sbb
sub
xchg
daa
movs
daa
dec
arpl
inc
adc
jl
loope
retf
sub
fucomi
out
int3
adc
out
sub
ds
lods
in
push
push
(bad)
loope
test
mov
cmp
mov
push
push
jmp
mov
sub
dec
xchg
mov
push
fisub
sbb
mov
cs
or
out
addr16
dec
adc
mov
stc
xchg
dec
or
xlat
(bad)
(bad)
xchg
(bad)
stc
out
mov
jmp
outs
movs
cwde
sub
adc
aaa
push
dec
ss
ss
retf
inc
add
int
and
mov
push
pop
push
xor
daa
pop
inc
adc
mov
jmp
sbb
mov
loop
pop
das
inc
js
pushf
ja
or
jg
mov
xchg
jbe
cs
loop
xchg
iret
sbb
test
or
(bad)
fisubr
add
inc
mov
scas
fstp
xlat
xor
test
xor
inc
repz
push
popf
xor
daa
es
mov
mov
push
cs
xchg
fwait
jmp
sar
into
int
mov
(bad)
xchg
mov
mov
setle
not
inc
add
and
xchg
not
cmp
xadd
rcr
mov
inc
stc
clc
mov
call
pushf
pusha
mov
lea
pushf
not
pop
pop
push
push
ret
lea
jae
pusha
pusha
lea
jmp
push
es
xchg
fadd
jae
dec
mov
or
lock
repnz
(bad)
cdq
pop
push
pop
mov
or
test
jle
jno
fidiv
push
cmp
lods
rcl
pop
add
test
dec
jecxz
xchg
add
(bad)
or
push
call
xchg
mov
jmp
sbb
mov
xor
call
dec
mov
push
lea
bswap
mov
stc
or
jl
sub
jg
rcr
xchg
in
cmp
iret
dec
(bad)
rcr
adc
loopne
mov
jb
stc
and
mov
nop
sub
aam
pop
inc
lock
cmp
and
mov
(bad)
arpl
aaa
sub
inc
sub
mov
sub
out
inc
lds
xor
mov
out
imul
pop
movs
stos
pop
cmp
xchg
mov
jno
add
pushf
clc
stc
mov
pushf
test
clc
test
push
push
lea
je
push
push
add
cmp
cmp
pushf
mov
lea
jb
stc
pushf
mov
cmc
cmp
call
mov
lods
clc
add
call
add
das
dec
jle
addr16
mov
stos
rcr
adc
shr
(bad)
fld
inc
repnz
shl
add
or
into
call
xor
test
ror
and
inc
cmp
push
pop
sar
adc
nop
stos
xchg
inc
lods
inc
sbb
lahf
rcl
mov
mov
int3
add
cmc
and
mov
mov
xchg
js
mov
jge
imul
pop
inc
in
int
xor
dec
mov
ret
mov
fcomp
iret
inc
int
jle
(bad)
rcl
or
lods
into
xchg
cmc
das
dec
in
cwde
clc
inc
push
or
inc
sti
and
push
movs
retf
loop
inc
movs
imul
mov
aas
enter
(bad)
lods
pusha
outs
fld
mov
adc
and
sbb
mov
pushf
std
mov
test
lea
jne
mov
call
test
mov
sub
xchg
mov
xchg
jmp
ret
sub
jmp
mov
ss
or
sub
popa
mov
cmp
call
sar
shl
scas
call
jae
neg
gs
mov
sti
jb
in
or
add
test
jmp
loop
xor
jne
lea
or
(bad)
repz
je
mov
stc
mov
push
inc
(bad)
cmc
sbb
adc
call
inc
in
or
jae
jmp
outs
aaa
arpl
pop
mov
repnz
mov
or
scas
call
adc
push
mov
jecxz
in
push
jo
sub
sbb
idiv
cld
sub
mov
std
jl
aas
lahf
cmp
ret
(bad)
dec
test
cmp
hlt
or
cmp
lods
das
jnp
xchg
cmc
lods
iret
out
pusha
adc
mov
(bad)
lods
xchg
cli
call
clc
outs
iret
hlt
sbb
xchg
xchg
test
pop
xchg
aad
mov
test
loop
je
out
push
mov
push
xor
js
dec
out
push
std
outs
inc
mov
pop
call
mov
mov
dec
cmp
pushf
xor
jmp
(bad)
fs
dec
in
add
shl
into
mov
mov
ins
ret
test
or
pop
leave
loopne
and
es
cmp
jnp
inc
leave
lods
in
lahf
add
dec
int
cmc
fwait
cli
les
cmp
push
adc
pop
stc
and
jb
lock
daa
push
cmp
int3
dec
pop
popf
cmc
xchg
push
(bad)
inc
and
mov
outs
outs
loop
jmp
pop
popa
mov
mov
sbb
mov
and
add
dec
les
(bad)
clc
mov
mov
jp
imul
adc
mov
sub
cmps
jl
ret
xor
pop
cli
and
sti
fist
ror
mov
pop
lahf
sub
daa
push
scas
mov
mov
jmp
xor
call
sbb
push
pop
push
mov
push
dec
data16
stc
push
rcr
das
ins
out
mov
jbe
pop
dec
and
dec
adc
mov
pushf
out
cli
mov
push
loop
(bad)
inc
mov
dec
rcl
add
fs
inc
pop
sbb
push
cmps
jle
jmpw
or
inc
jnp
bound
adc
jns
pop
xchg
sar
jno
in
cmp
xor
and
daa
push
push
pop
mov
push
add
add
add
add
add
cmp
mov
ss
xor
add
mov
add
add
add
or
sub
call
lock
and
xchg
ret
enter
xchg
(bad)
into
cld
mov
ds
jae
add
jp
js
inc
dec
push
push
scas
loope
sbb
push
mov
loopne
mov
jo
je
inc
leave
pop
nop
jmp
mov
retf
dec
popa
aaa
in
cmp
(bad)
fstp
mov
jnp
repnz
push
int
xor
mov
pusha
test
push
mov
jmp
mov
call
or
dec
pop
adc
icebp
lds
pop
movs
(bad)
pop
std
jnp
pop
dec
gs
(bad)
int
leave
loope
jmp
jl
sub
gs
cmp
mov
in
ret
add
scas
jae
lds
sbb
stos
retf
jg
push
mov
mov
retf
jmp
rcl
aaa
jo
push
ror
call
jbe
(bad)
js
pop
mov
sub
imul
xchg
out
fucomi
pushf
pop
xchg
int
lock
cli
mov
aad
mov
inc
(bad)
cmps
sbb
pop
(bad)
and
sbb
push
outs
outs
(bad)
mov
mov
pushf
loopne
mov
jo
les
stos
ds
inc
dec
jno
sbb
pop
mov
mov
div
out
cmp
js
mov
jbe
cmc
push
icebp
sbb
push
repz
xor
sti
jle
jl
fst
xchg
popf
xchg
mov
aas
jb
std
mov
mov
mov
push
pop
out
and
je
xchg
popa
xchg
add
or
loopne
cmp
fs
mov
jl
clc
mov
pop
or
sub
retf
cmp
jo
cmps
cmp
cmc
add
das
in
adc
dec
je
lea
scas
fist
push
adc
icebp
retf
mov
aam
push
mov
sbb
push
and
add
pop
cmps
mov
fisttp
or
cmp
xchg
enter
push
dec
imul
ror
push
dec
daa
cmp
mov
mov
sub
mov
rol
and
push
push
sbb
dec
in
push
daa
adc
imul
cmp
mov
sbb
test
pop
jne
arpl
jo
mov
pop
push
sub
push
das
idiv
cli
xor
and
pop
xor
push
sbb
push
neg
std
popa
test
call
das
cmp
jo
mov
test
add
outs
stos
xchg
pop
sub
xchg
sub
cmp
add
jnp
(bad)
cmc
mov
push
mov
push
jno
dec
movs
cwde
mov
ins
outs
clc
jl
mov
xchg
push
cmp
outs
fist
push
jbe
jg
sub
aaa
pushf
pop
fwait
inc
ins
es
je
gs
jnp
lock
xchg
lea
(bad)
or
(bad)
dec
sub
or
ja
dec
xor
icebp
add
xchg
xchg
inc
xchg
xchg
mov
hlt
pop
sti
mov
xor
jb
ins
mov
dec
stos
mov
dec
cmc
inc
jg
inc
inc
cmp
sbb
movs
ret
sub
dec
xchg
in
sbb
push
test
cdq
dec
cmp
sub
mov
inc
les
in
imul
xchg
cmps
inc
leave
pop
iret
ins
add
(bad)
pop
xchg
adc
push
and
gs
xchg
in
ss
dec
pusha
pop
pusha
push
pusha
jae
or
imul
pop
stc
(bad)
dec
pop
lock
pop
push
les
lds
or
pop
cmp
mov
in
icebp
pop
fucomip
test
sar
xor
inc
mov
cmp
je
in
pop
pop
add
cmp
in
jne
pop
push
fstp
cmp
mov
fs
(bad)
ins
jge
pop
push
mov
xor
sub
push
pusha
push
fnstcw
and
xor
mov
sbb
std
lods
ins
sub
cmp
mov
push
mov
and
scas
std
cmps
or
stos
cmc
sub
sub
pop
jge
popf
test
mov
and
sbb
jge
sub
pop
jmp
cmp
int3
cmc
lods
ins
and
add
in
popf
mov
mov
xor
hlt
js
ins
jne
pop
pop
sub
pop
inc
pushf
pop
cmp
xchg
pop
cmp
sub
repnz
in
ins
ja
sbb
pop
jne
cmp
mov
jge
cmp
call
cld
add
in
add
push
push
mov
in
sbb
inc
cld
cmp
out
dec
pop
jp
sbb
jne
sub
ins
inc
test
jne
ffree
jb
test
xor
xor
pusha
call
jns
or
mov
je
lea
jl
cld
iret
jge
fxam
xor
dec
jp
sbb
jnp
jmp
inc
xor
hlt
aaa
jns
fwait
ins
gs
adc
mov
cmp
jnp
je
cmc
inc
push
pop
xor
and
adc
pop
jo
jg
bnd
push
cmp
pop
cmp
int3
hlt
inc
ins
std
inc
push
inc
mov
mov
sub
lea
imul
push
push
imul
add
das
fs
pop
gs
xchg
pop
and
cmp
dec
cmc
aaa
push
pop
adc
in
jmp
sahf
push
pop
js
sbb
pop
pop
js
xor
hlt
dec
pop
ins
icebp
ins
arpl
pop
aaa
pop
cmp
adc
add
pop
retf
xor
in
mov
pop
cmp
push
cmp
cmp
je
in
out
pop
aad
mov
jae
jp
pop
dec
xor
in
sbb
add
cmp
stc
cmp
xchg
repz
xor
hlt
stc
push
ins
jmp
out
fs
cmp
bound
jecxz
pusha
push
std
dec
push
pop
sbb
hlt
and
ins
or
cmp
mov
pop
pop
dec
sbb
push
dec
sbb
dec
je
hlt
pop
dec
ins
imul
pop
push
cmp
cmc
or
pop
outs
dec
js
xor
hlt
sub
jbe
pop
sbb
xchg
xor
pop
inc
std
xchg
ins
or
xor
movs
pop
sbb
mov
mov
shl
ds
(bad)
aas
cmp
shl
cmp
jle
mov
ins
cmp
push
cmp
ins
xor
dec
aaa
cmp
hlt
adc
xor
xor
mov
jne
mov
std
xchg
das
jge
sub
fstp
sub
addr16
sub
cmc
sub
dec
in
pop
es
push
jbe
jne
dec
and
mov
hlt
adc
std
mov
pushf
pop
push
and
xor
hlt
push
and
ins
ss
pop
test
sbb
cmp
sbb
pop
sbb
in
push
pop
pop
pop
jo
cmp
push
cmp
(bad)
hlt
cmp
std
out
xchg
pop
cmp
adc
test
leave
adc
pop
not
pop
test
mov
pop
je
pop
lock
cmp
or
add
cmp
cld
hlt
mov
std
pusha
push
inc
add
scas
or
jp
js
cmp
js
std
je
hlt
push
cli
ins
cmp
es
sub
cmp
adc
hlt
pusha
idiv
(bad)
cmp
jne
cmp
je
cmc
fs
popa
ins
(bad)
repz
pop
int
jp
out
dec
push
out
cld
aad
imul
mov
hlt
add
ins
sub
cmc
fld
inc
stc
out
jmp
in
xor
jbe
jecxz
idiv
fistp
cmp
out
cmp
hlt
pop
(bad)
dec
push
inc
jne
std
mov
lods
fsubr
ins
push
(bad)
ins
jge
dec
test
add
js
sar
shl
mov
je
shl
jo
iret
xchg
int3
std
(bad)
hlt
jne
int
in
je
retf
je
enter
ins
xchg
ins
rol
in
(bad)
ins
sbb
ins
inc
lds
pop
popf
pop
leave
ret
pop
cmc
rcr
dec
mov
movs
sar
std
cmp
sub
push
cmp
xor
mov
xor
mov
lock
mov
or
js
mov
xchg
hlt
mov
jo
lods
lods
std
mov
ins
and
cmp
mov
xchg
ins
inc
test
push
pop
repz
in
mov
sbb
cmps
std
cmps
cld
and
in
jne
ins
popa
mov
div
sahf
ins
jp
jp
pop
xor
mov
jp
int3
test
arpl
cmp
in
dec
nop
push
repnz
je
xor
dec
ss
ins
mov
jae
ins
push
ins
jb
pop
les
call
xor
dec
xchg
jge
xchg
jnp
ins
jne
xchg
ins
push
nop
in
jge
lods
sbb
jle
cmps
pop
jne
loopne
xor
sub
dec
xchg
jp
pop
aaa
(bad)
cmp
js
jg
ins
sub
(bad)
mov
mov
mov
xchg
cmps
enter
sbb
cmp
in
xchg
or
adc
popf
cs
fsubr
jge
dec
cmp
push
mov
mov
sbb
sbb
jne
xor
in
nop
adc
and
inc
xchg
dec
test
fidiv
fs
push
nop
jne
pop
(bad)
jp
retf
cmp
js
js
out
in
mov
or
ret
jbe
retf
xchg
push
outs
in
pop
jne
or
jge
push
mov
jp
push
jmp
shr
jne
cmp
test
jns
std
inc
push
inc
add
pop
sub
js
or
pop
das
outs
js
cmp
je
hlt
mov
cld
or
dec
movs
mov
inc
push
mov
shr
mov
test
cmp
cmc
ds
(bad)
hlt
xchg
push
push
data16
addr16
fs
xor
hlt
and
jno
je
arpl
ins
xchg
ins
scas
popa
ins
jae
gs
push
pop
jge
pop
jnp
ins
jne
pop
pop
rcr
cmp
(bad)
hlt
or
cld
rcl
ins
pop
push
jge
push
ja
push
je
hlt
retf
push
je
dec
jno
dec
xchg
jo
mov
fcmovb
stc
rol
mov
fstp
nop
pop
jne
pop
dec
dec
cmp
div
push
dec
lock
cmp
mov
pop
inc
cld
pop
inc
std
mov
or
inc
jp
pop
or
popa
inc
js
xor
in
ror
leave
fcomp
dec
cdq
jne
push
mov
cld
inc
cmp
cmp
jp
ds
inc
loop
shr
xor
dec
cmp
ins
inc
shr
fs
ins
hlt
and
xor
mov
jl
pop
retf
retf
test
jne
pop
pop
ss
aaa
js
cmp
xor
push
xor
sbb
sub
xor
adc
xor
push
fnstenv
or
ss
sub
call
xchg
clc
aam
sbb
and
ins
hlt
movs
in
push
push
jne
pop
sbb
in
popf
ins
and
mov
push
pop
add
js
or
mov
scas
lds
cmp
pop
mov
dec
(bad)
je
sbb
jecxz
cmp
jge
sbb
cmp
jae
stc
cmp
xor
les
push
mov
add
cld
mov
call
adc
sub
push
loopne
sysenter
cld
clc
add
sbb
in
xchg
sub
js
leave
cmp
cs
cmp
xchg
mov
mov
pop
sbb
pop
pop
or
jne
push
pop
fnsave
dec
or
mov
nop
hlt
repnz
ins
xor
adc
cmc
fsubr
pop
mov
push
imul
ins
jo
pop
or
out
ins
pusha
add
stc
in
fisubr
pop
jmp
add
in
mov
leave
js
push
cld
test
stc
push
mov
pop
imul
pop
iret
pop
fiadd
pop
retf
js
ins
out
ins
stos
cld
ins
imul
ins
sub
pop
mov
out
ins
retf
fsubr
inc
pop
enter
add
lock
adc
cmp
imul
in
adc
cmp
mov
pop
mov
dec
aas
cmc
std
mov
ja
fs
or
std
pop
lahf
xor
hlt
(bad)
mov
and
cmp
addr16
pop
dec
in
rcr
pop
inc
out
cmp
or
fs
in
outs
out
cmp
hlt
popa
in
std
xchg
jmp
adc
mov
xchg
call
je
jp
inc
mov
and
lods
jecxz
cmp
cmp
inc
cmp
and
add
pop
outs
fisttp
push
inc
retf
pop
adc
sub
jg
pop
sar
fwait
add
pop
sar
mov
loopne
sbb
int3
movs
in
xchg
ins
test
jge
retf
pop
shl
jge
mov
sub
cmp
jo
(bad)
je
je
test
lock
jne
repnz
jl
push
outs
hlt
jns
std
jo
jne
pop
xchg
pop
dec
(bad)
cmp
(bad)
hlt
and
std
mov
cwde
push
xor
push
hlt
and
cmp
gs
je
fisubr
fmul
leave
cmp
ret
jne
hlt
movs
ret
cld
inc
sar
mov
mov
imul
pop
sbb
pop
xor
mov
cmc
xchg
cmps
dec
jne
cld
outs
mov
fwait
ins
dec
mov
lods
inc
mov
std
lahf
outs
ins
iret
scas
ins
jge
hlt
test
lods
pop
xor
fimul
cmp
leave
cmc
mov
dec
ins
scas
stos
ins
js
pop
push
pop
lds
sub
pop
xor
cmc
cli
push
pop
aam
ret
mov
sub
mov
xchg
cmp
daa
mov
loopne
sub
cmp
push
and
call
pop
hlt
cwde
cmp
fist
iret
hlt
clc
xchg
je
xchg
ins
test
and
test
pop
jne
cmp
cmp
(bad)
hlt
repz
sub
mov
mov
cmp
inc
add
cwde
or
out
sub
jne
mov
bound
dec
xor
in
mov
jecxz
sub
pushf
or
outs
fs
hlt
adc
cmp
ins
xor
jmp
cmp
sbb
imul
jge
addr16
fs
jns
std
pop
push
pop
mov
and
je
test
std
sub
cmp
pop
js
pop
je
hlt
neg
mov
push
fnstcw
jge
cmp
cmovle
cmp
lods
push
fisubr
adc
mov
push
cmp
pop
ins
mov
cdq
cmp
cmp
ds
lea
push
jnp
cdq
dec
cmp
and
js
xor
cwde
jmp
dec
ins
pop
pop
xchg
hlt
jo
mov
das
ins
ds
pop
mov
ror
dec
(bad)
and
hlt
push
pop
loope
mov
mov
test
or
inc
je
hlt
add
xchg
ins
jecxz
ins
inc
pop
sub
or
inc
jmp
jns
aaa
ins
push
std
mov
(bad)
jne
xor
push
idiv
inc
pop
out
pop
fistp
cld
and
and
hlt
call
cmp
pop
(bad)
jnp
pop
jne
pop
in
pop
leave
cmp
mov
cmp
jmp
cmp
pop
ins
ss
xor
in
fadd
aaa
cdq
hlt
loop
std
mov
sbb
jge
xor
pop
cli
xor
cmp
je
cwde
adc
cmp
call
cmp
sar
sbb
sub
sub
movs
push
pop
pop
es
movs
and
and
cmp
cmc
and
lock
add
repnz
and
cmc
dec
dec
xchg
add
xchg
add
jne
push
dec
dec
dec
push
std
inc
in
jne
ins
aad
ins
mov
mov
cdq
pop
int3
sbb
sbb
pop
dec
sbb
inc
push
cmp
inc
cmc
lock
dec
je
ins
sub
mov
dec
adc
xchg
jecxz
adc
cmc
mov
hlt
pop
adc
cmp
sar
movs
hlt
test
je
pcmpeqb
fs
jne
or
in
cmc
or
pop
stos
cmp
and
or
out
in
xlat
ins
call
add
outs
ins
test
xor
or
push
dec
lock
shl
jne
jno
(bad)
sbb
cmp
jb
mov
xchg
pop
in
mov
std
jmp
xchg
pop
ins
cli
sbb
sub
pop
sbb
stos
stc
jp
idiv
idiv
das
adc
pop
in
cmps
pop
movs
pop
jbe
ins
inc
ins
in
repnz
rcr
jp
cmp
cmp
lods
hlt
stc
out
cld
inc
in
std
(bad)
ins
xor
jp
pop
jmp
fucomip
retf
aaa
mov
xor
out
test
fwait
mov
retf
je
call
jns
jmp
lea
pop
jecxz
pop
idiv
cmp
pop
dec
cmp
std
out
neg
jp
pop
nop
data16
jne
fcomp
jne
hlt
in
fidiv
ins
sub
mov
jns
dec
in
sbb
pop
xchg
dec
xchg
xlat
gs
push
aad
aaa
rcr
xchg
jne
sar
shr
ins
xor
pop
or
jmp
cmp
pop
cmc
dec
push
pop
xor
add
(bad)
retf
nop
add
push
fucomp
mov
loop
jge
dec
in
push
sbb
sub
dec
pop
and
pop
mov
jp
(bad)
js
xor
call
pop
cmc
les
cmp
lds
cmp
ins
sub
cmp
int
jne
sar
cmps
ss
mov
sets
scas
mov
pop
cmp
jg
jo
std
pop
push
pop
inc
add
mov
mov
mov
push
xlat
xor
fwait
push
pop
pop
(bad)
sbb
mov
std
idiv
mov
dec
in
sbb
mov
adc
jne
cmp
xor
lods
mov
aam
jne
hlt
jns
ins
es
out
pop
dec
mov
jge
ja
adc
je
scas
bound
lods
jbe
jne
ret
jge
call
jne
cld
ins
or
add
in
pop
test
pop
cwde
cmp
jo
cmps
xchg
lea
mov
jne
fsubr
mov
sub
ins
clc
mov
push
ins
jo
sahf
ins
lahf
scas
je
push
loop
test
ja
jo
jne
repnz
sub
inc
jne
pop
adc
into
hlt
je
ins
cli
ins
fistp
inc
ins
sub
pop
adc
cmps
fdivr
sub
xchg
hlt
mov
std
mov
cmp
sar
dec
cmp
int3
repz
xchg
addr16
mov
jne
(bad)
sbb
rcr
ins
lea
pop
adc
mov
out
pop
out
aaa
xchg
ins
mov
loope
pop
mov
pop
fadd
xor
push
ins
cmp
cmp
out
pop
sub
adc
dec
jne
jge
jnp
jp
pop
and
hlt
sbb
std
popf
ins
sbb
cdq
pop
pop
jns
adc
mov
inc
ja
mov
pop
or
inc
jge
hlt
dec
pop
add
hlt
imul
cmc
sub
add
xor
hlt
data16
push
pop
dec
cmp
cmp
call
cmc
jno
and
sub
outs
js
xor
in
xchg
ins
cmp
cmp
cmp
add
js
std
lock
push
push
aam
jns
fsubr
je
dec
dec
sar
mov
imul
enter
sbb
shr
adc
in
jle
jge
pop
in
je
cmp
add
in
pop
cmp
pop
mov
in
hlt
jb
ins
add
pop
popaw
cmp
cmc
movs
ins
cs
jp
pop
xchg
cmp
je
in
shr
pop
xor
and
std
push
push
popa
lea
jmp
mov
fnstsw
mov
fdivr
in
push
jbe
jne
in
jl
dec
cmp
aad
mov
ins
pop
pop
push
aaa
inc
pop
mov
(bad)
mov
hlt
imul
mov
or
fild
jp
push
push
jbe
jne
push
pop
jl
or
adc
jne
pop
int
mov
mov
mov
scas
ins
inc
push
pop
lds
push
cmc
push
jne
sub
sub
jae
ret
cmp
dec
sub
repnz
test
push
sub
cdq
ins
sbb
adc
pop
xchg
pop
adc
dec
cmp
call
sub
xor
in
mov
pop
xor
or
cmc
loopne
sbb
jp
pop
xchg
inc
popa
cmp
or
pop
push
or
ins
xor
xor
adc
cmp
mov
or
movs
ins
fsubr
pop
push
cmp
hlt
pusha
das
std
pop
ins
or
fs
std
jge
mov
daa
test
pusha
(bad)
shl
daa
cmp
and
movs
push
fdiv
and
ins
rcr
movs
jne
push
jo
out
cmp
mov
sbb
jne
push
in
sbb
les
outs
pop
cs
dec
fsubr
jne
and
inc
ret
adc
pop
adc
adc
ret
jge
cmp
and
or
ror
std
imul
jne
aaa
movs
aam
mov
cmp
movs
dec
je
repz
jne
xchg
or
pop
sub
sbb
in
out
pop
loope
rol
cmc
stos
push
pop
mov
jp
je
in
push
pop
adc
add
cmc
in
aam
ret
xor
in
mov
mov
pop
fs
cmp
cmc
fisubr
pop
test
fwait
hlt
jnp
ins
sub
sub
daa
(bad)
js
push
adc
or
pop
jecxz
aam
jge
test
and
inc
cmp
cmp
std
mov
jmp
add
ds
sbb
pop
add
cwde
fidiv
in
scas
pop
mov
cmp
cmc
adc
pop
aam
ret
in
xchg
pop
sbb
retf
add
(bad)
sti
loopne
mov
xor
cmp
into
pop
scas
ss
cld
push
mov
xchg
hlt
xor
mov
aam
std
clc
ja
xor
push
jecxz
mov
jns
cmp
hlt
outs
cmps
loope
cmc
pushf
inc
ss
push
sahf
cmp
and
fdiv
fsubr
inc
div
in
clc
mov
sbb
in
fs
mov
std
pop
loopne
jmp
ins
pop
(bad)
inc
sub
sbb
cmp
dec
push
pop
or
clc
cmp
mov
cmp
sub
gs
in
data16
jmp
ins
sub
jle
or
js
cli
loope
jne
adc
jp
push
je
cmp
mov
inc
fdiv
repnz
loope
shr
pop
outs
fistp
xor
in
in
pop
sar
int3
iret
fst
jnp
and
(bad)
add
fs
fcmove
sbb
jne
in
in
pop
ret
push
pop
xor
es
sbb
pop
or
je
and
xor
mov
mov
jp
adc
in
je
push
pop
mov
in
dec
scas
call
shr
push
imul
mov
fsubr
jb
sbb
dec
adc
pop
movs
cmp
sar
shl
outs
into
or
scas
test
jb
cmp
add
mov
cmc
dec
sub
test
fcomp
das
ins
pop
int3
jnp
pop
jne
cmp
lock
xchg
cmp
jbe
enter
pusha
pop
cmc
mov
hlt
leave
jge
(bad)
fs
sub
jp
pop
and
js
cmp
iret
pop
mov
dec
popf
ret
jp
pop
push
sar
push
sar
sbb
mov
mov
inc
pop
add
in
test
pop
inc
pop
enter
pop
fwait
hlt
popa
mov
stos
ins
div
cmp
mov
loope
dec
scas
jp
pop
adc
hlt
mov
std
ds
pop
sub
test
outs
test
xor
mul
out
push
pop
dec
mov
push
js
sahf
outs
jnp
mov
ins
mov
add
xchg
jnp
pop
jne
cmc
pusha
inc
inc
mov
ins
jb
dec
gs
pop
adc
in
stos
pop
jle
pop
sbb
loop
jp
dec
mov
jne
inc
jge
cmp
in
fsubr
repnz
dec
loop
aad
cmps
xor
hlt
outs
xchg
ins
or
pop
jge
aaa
xor
cmp
fmul
jne
inc
jge
pop
lea
pop
jne
clc
jge
ins
cmp
cmp
rol
xchg
in
jbe
push
mov
or
xor
in
cmp
sbb
sub
outs
inc
pusha
pop
mov
and
int
dec
pop
mov
int3
cmp
dec
mov
ds
call
pop
mov
call
cmp
push
mov
lods
xor
ror
jmp
cmp
in
mov
dec
mov
outs
sti
ss
movups
enterw
jo
idiv
lods
pop
pop
jle
xlat
inc
sub
sbb
mov
int
gs
jbe
ins
push
lods
out
into
mov
xchg
pop
add
shr
inc
mov
pop
sub
stc
xchg
fs
mov
call
fs
pop
(bad)
(bad)
jecxz
retf
jmp
pop
pop
cmp
xor
stc
(bad)
fnstsw
mov
cwde
gs
mov
push
mov
mov
pop
or
mov
push
lea
mov
dec
jb
retf
in
ds
jno
movs
pop
jmp
cmp
in
adc
xor
mov
add
push
cmp
repnz
xor
outs
mov
ret
inc
sar
lock
add
dec
and
in
xchg
pop
gs
inc
add
in
cmp
cmp
sti
and
add
mov
adc
xor
call
dec
clc
adc
xor
add
clc
ins
out
xor
jmp
xor
out
pushf
sub
int3
pop
(bad)
loopne
xor
add
or
pop
xor
in
sahf
xchg
and
clc
push
stos
cmps
sahf
dec
lods
xor
cmp
out
imul
xchg
out
add
dec
mov
pop
fs
fld
cmp
push
pop
push
jbe
pop
clc
sub
adc
cmp
loope
xor
push
push
clc
xchg
jmp
xchg
fstp
sahf
sub
pop
cdq
push
add
pop
ins
leave
retf
inc
dec
dec
stos
mov
icebp
pop
mov
outs
adc
mov
in
bound
mov
mov
jo
das
pop
aad
or
push
mov
mov
mov
adc
fs
lds
mov
xor
xor
bound
inc
mov
mov
mov
cmc
adc
cmp
js
jo
cmp
out
fld
mov
dec
or
stc
imul
sbb
dec
mov
sahf
xchg
jp
push
adc
and
mov
jge
push
(bad)
scas
xor
push
and
dec
xchg
inc
push
sar
pop
lahf
fwait
xor
inc
jnp
inc
inc
cmc
aam
sbb
or
imul
sbb
in
pop
pop
ins
jbe
adc
adc
jb
pop
dec
movs
adc
pop
pop
adc
sbb
sub
pop
cwde
sub
imul
sti
push
fs
pop
in
dec
push
mov
xor
stos
dec
sbb
xchg
sub
cmp
pop
shl
jbe
xchg
dec
xor
mov
or
hlt
sub
add
lods
sbb
push
mov
ins
sti
fcomp
or
and
sub
mov
dec
mov
jo
mov
test
icebp
pop
loop
iret
retf
test
xchg
pop
mov
imul
test
loopne
jo
cmp
int
sub
push
fdiv
es
adc
xor
mov
jbe
scas
cwde
add
mov
mov
mov
push
push
mov
mov
call
pop
add
mov
cmp
fs
repz
in
xchg
movs
ss
lahf
push
mov
jb
jmp
jno
aam
cmp
sbb
gs
adc
pop
add
popa
push
lods
dec
adc
add
pop
gs
xchg
pop
or
jbe
push
rol
out
and
xor
jl
mov
mov
aam
jae
ret
cld
sub
movlps
pusha
sbb
dec
pop
popf
jg
dec
or
xor
jl
sbb
fist
xor
pop
jge
cwde
xchg
cmp
cld
int3
cld
hlt
pop
xchg
mov
jl
mov
in
outs
scas
ins
(bad)
jo
sar
stos
jmp
push
jge
mov
and
or
mov
sbb
push
push
jge
jb
sub
push
and
je
lea
jbe
pop
fwait
adc
scas
aam
lea
ins
sbb
je
jne
ins
sbb
push
dec
(bad)
imul
inc
pop
bound
mov
(bad)
cmp
ins
pop
jge
dec
jp
repnz
jge
adc
jge
inc
cmp
or
ffree
add
cmp
jp
add
add
(bad)
cld
outs
movs
jne
sahf
jbe
jp
je
hlt
ja
dec
cmc
pusha
cld
cmps
repnz
cmp
inc
je
in
popf
lahf
jecxz
neg
call
cld
loop
loope
mov
fstp
fcom
aad
push
jnp
ror
int3
div
int
into
leave
les
(bad)
je
or
cdq
les
inc
mov
outs
aaa
mov
outs
aaa
mov
outs
aaa
lods
stos
jge
test
movs
mov
jbe
pushf
mov
cwde
cdq
push
and
add
xchg
(bad)
mov
test
test
imul
or
arpl
xchg
pop
jno
mov
jmp
xchg
cmps
dec
jne
addr16
cmp
and
outs
aad
push
addr16
je
test
push
push
jbe
jecxz
cmp
enter
lock
imul
pop
in
jmp
pop
push
je
in
pop
data16
ja
push
jge
push
aam
sbb
jno
pop
hlt
pop
and
sbb
push
pop
sub
pop
not
je
pop
popa
jne
pop
jns
scas
mov
test
push
push
arpl
jno
pop
mov
sub
aas
fs
mov
push
pusha
sbb
outs
cmp
repnz
ins
pop
adc
imul
bound
pusha
(bad)
je
cmp
ins
mov
jge
inc
gs
imul
retf
cmp
(bad)
jne
pop
sub
stc
jns
sbb
ds
pop
mov
mov
add
fs
jnp
push
jb
jp
jnp
push
shl
jno
jne
mov
sbb
clc
jmp
movs
pop
outs
jno
mov
jne
es
jle
mov
(bad)
in
je
hlt
inc
js
inc
outs
je
cmp
pop
or
cmp
scas
xor
jge
les
pop
jo
bound
jle
jg
retf
jbe
aas
jne
(bad)
aas
popf
test
fs
jo
into
jmp
loop
or
push
add
stc
jp
addr16
inc
cmc
cs
adc
jmp
fstp
clc
fmul
push
lea
or
mov
sbb
pop
xchg
mov
jnp
fcomi
and
xchg
call
hlt
rcr
fwait
add
dec
and
je
stos
mov
add
ins
leave
pop
lods
pop
in
sbb
cmp
loop
lods
jmp
pop
arpl
imul
js
sbb
mov
lea
adc
bound
mov
mov
rcl
imul
pop
jle
jnp
push
inc
test
inc
imul
push
popa
shr
inc
sbb
pop
fistp
mov
xor
pop
sub
add
or
and
ret
neg
mov
sbb
push
movs
lahf
mov
out
cmp
xor
aam
ss
or
dec
aas
jae
mov
dec
jnp
mov
push
ret
cmp
leave
sbb
sub
xor
add
adc
sbb
sbb
pop
mov
gs
mov
cs
fisttp
rcr
push
xchg
dec
push
lea
retf
ret
inc
sub
leave
cs
and
pop
cmp
ror
loopne
pop
arpl
xor
jno
ja
das
in
xchg
xor
repz
push
loop
adc
sub
push
iret
fldcw
retf
push
mov
out
cmp
sbb
sub
hlt
sub
adc
push
ret
or
sar
cmc
xchg
loopne
xchg
jmp
stc
jge
cmp
adc
or
sub
inc
pop
jge
push
sub
repz
fsub
aam
jge
cwde
stc
imul
aam
add
jge
int
cmp
mov
je
int
test
js
mov
cs
jp
jp
lock
fdivr
or
gs
ins
fnstcw
outs
xchg
sub
out
xchg
nop
mov
push
sub
jo
fs
push
jle
ins
mov
jp
bound
jp
cmps
test
loop
fidiv
(bad)
in
out
inc
mov
inc
out
fimul
ins
and
mov
mov
cld
and
scas
mov
ins
int3
inc
fwait
xor
icebp
fcom
icebp
cmp
jne
pop
mov
outs
cwde
xchg
xchg
test
mov
jbe
mov
pusha
movs
adc
lahf
je
xchg
enter
pop
pop
push
add
sub
(bad)
cmp
repz
js
mov
inc
lock
xor
xor
dec
push
jmp
in
dec
push
mov
cmp
cmps
mov
add
retf
xor
cmps
jns
fcomp
xlat
mov
dec
gs
inc
mov
gs
jno
jmp
(bad)
or
cdq
jns
mov
and
adc
test
jae
adc
mov
lods
test
xchg
imul
lock
outs
jle
adc
dec
mov
je
push
ret
cmp
adc
or
lods
movs
cmp
sub
or
leave
push
or
add
push
cmp
push
pop
pusha
cdq
mov
data16
clc
stc
xchg
jae
outs
ins
ficom
fnstsw
mov
cmp
test
cmp
inc
and
jne
in
lock
jb
repnz
jle
sti
ret
mov
std
adc
cwde
int
(bad)
clc
clc
sbb
jne
xor
jmp
(bad)
js
pop
cld
clc
cmp
mov
je
jnp
ins
call
pop
adc
pop
dec
inc
sbb
jne
je
daa
call
je
out
div
push
xchg
push
jp
daa
xor
je
idiv
loopne
imul
dec
(bad)
jp
js
ja
jp
repz
icebp
cwde
jg
cdq
xchg
hlt
mov
sub
aas
jp
jp
jbe
push
cwde
into
adc
cmp
and
dec
outs
iret
sbb
jnp
ins
jp
xor
test
pusha
repz
out
xchg
pop
imul
xor
cli
jp
(bad)
cld
cli
out
jbe
lahf
popf
mov
out
in
jae
fs
jp
iret
imul
lods
test
(bad)
xor
sbb
inc
sbb
mov
mov
(bad)
aad
push
mov
and
lock
js
cld
push
repz
in
xchg
jg
or
ins
add
push
bound
sbb
mov
mov
popf
call
jp
fwait
jp
and
dec
pop
js
imul
and
fadd
es
cmps
sbb
retf
xchg
push
sbb
pushf
mov
mov
mov
dec
cmp
je
push
mov
data16
outs
xor
cmps
mov
mov
mov
test
(bad)
lea
out
(bad)
pop
test
ret
les
pop
jp
rcl
mov
mov
inc
dec
loopne
je
arpl
add
push
cld
call
xchg
gs
sbb
loopne
imul
adc
and
xor
or
mov
cs
sbb
ins
adc
adc
pop
(bad)
std
call
pop
sbb
sbb
mov
div
out
cwde
jmp
sub
jne
push
sti
or
ins
cmp
outs
inc
sub
cli
into
mov
jbe
lods
stos
xchg
cmp
pop
out
sub
push
jno
jp
gs
jns
jne
js
pop
outs
push
int3
sub
sbb
cli
aam
push
xchg
sbb
test
pop
mov
ret
pop
and
dec
dec
dec
jl
pop
push
push
pop
arpl
ja
or
or
push
jp
jmp
jp
mov
out
xchg
xchg
pop
mov
div
mov
xchg
jl
retf
(bad)
xchg
and
imul
enter
rol
inc
sbb
mov
repz
ja
in
cmp
int3
int
jbe
dec
dec
or
and
mov
fild
js
int
leave
xchg
inc
jl
add
cwde
add
(bad)
jp
rol
nop
and
jnp
stos
stos
mov
adc
sahf
xchg
mov
pop
jl
out
jno
push
add
jnp
hlt
jp
stc
cmc
repnz
cld
mov
push
pop
xchg
mov
lea
push
cwde
mov
out
fsub
pop
fsubr
sbb
jno
jl
loope
fidivr
test
lea
stos
test
cmp
test
data16
mov
sbb
adc
cmp
dec
push
out
cld
and
movs
and
outs
les
push
add
cmps
js
in
xchg
and
test
lock
and
push
iret
xor
pop
push
and
pop
push
pop
cli
shl
or
data16
lock
clc
movs
xchg
pushf
hlt
sub
bound
jne
imul
mov
and
sbb
outs
fmul
xor
jp
xchg
xchg
xchg
pushf
popf
scas
imul
out
adc
and
push
pop
xlat
or
fnstsw
pop
sbb
push
push
xor
sub
mov
pop
mov
addr16
push
out
and
mov
or
cmp
mov
sbb
out
jbe
outs
jne
ja
jge
jae
mov
test
fld
inc
in
hlt
sbb
ins
popa
lock
jp
inc
(bad)
in
xchg
out
push
mov
mov
or
imul
jno
ins
movs
lods
jo
outs
ds
jp
not
pusha
loopne
scas
clc
fs
movs
jns
int3
sub
or
sbb
mov
mov
lods
popf
mov
pop
sub
mov
jp
pop
xor
mov
dec
les
add
adc
adc
xor
in
push
pop
push
fiadd
sbb
xchg
jp
sbb
and
and
int3
jnp
js
pop
mov
sbb
jge
mov
ret
addr16
dec
popa
jl
jp
xor
mov
rcr
xchg
jg
jp
aad
xchg
sub
or
scas
adc
xor
jmp
push
out
push
mov
sbb
jp
ins
js
mov
pusha
je
ins
out
jl
out
jecxz
jle
adc
retf
sbb
xchg
mov
inc
xor
ret
in
div
xchg
xchg
xchg
xchg
xor
sub
jo
inc
jp
cmp
ins
cmp
sbb
hlt
sub
lock
xor
dec
test
sub
xor
test
adc
outs
push
lahf
fwait
cwde
push
mov
cmps
mov
inc
loop
aad
inc
movs
je
jp
jno
sub
popf
inc
mov
and
movs
dec
mov
jp
add
aas
cld
xchg
imul
xchg
in
pop
pusha
pushf
cmp
sub
pop
xor
jp
pop
push
push
jne
push
jl
daa
and
shl
out
cld
adc
sbb
call
scas
dec
jl
test
nop
push
outs
shr
push
push
call
fs
aas
cmp
fs
xor
loop
fcomp
jg
scas
test
sbb
mov
outs
mov
repz
out
dec
fmul
sub
jmp
mov
adc
push
adc
and
pusha
jge
xchg
xchg
std
cli
cmps
mov
pop
inc
jmp
jge
ss
pusha
push
sub
cmp
xchg
mov
fcom
ins
xlat
xchg
daa
ins
ret
js
imul
je
cs
les
mov
sbb
and
xchg
cwde
ins
fcomp
lahf
add
in
in
jge
mov
xchg
or
mov
or
mov
ins
or
retf
jmp
ret
icebp
in
cs
je
adc
outs
pop
or
iret
int3
iret
mov
sar
in
repnz
jae
mov
sahf
icebp
cmp
movs
mov
and
in
mov
or
jmp
shr
jae
out
in
xchg
or
es
(bad)
div
dec
mov
jge
jge
outs
dec
jne
jnp
ins
jge
jne
jbe
jno
jp
addr16
outs
jne
inc
jmp
jp
dec
(bad)
cld
std
xchg
rol
int
nop
mov
das
add
inc
or
dec
inc
bound
jge
dec
dec
inc
data16
ins
popa
push
pop
repnz
mov
jmp
xor
ins
mov
aam
sbb
sbb
adc
push
in
out
int
ret
popa
cdq
ror
cld
lahf
(bad)
ficomp
xchg
sub
pop
cmp
push
push
ds
fadd
loope
aad
xchg
hlt
lock
dec
mov
aad
sbb
test
mov
and
scas
lods
fwait
cmp
dec
jge
stos
cmps
cmps
(bad)
std
je
hlt
fwait
sub
inc
repnz
pop
adc
xchg
and
pop
jp
push
ins
pop
dec
inc
js
and
es
cld
cwde
shr
in
mov
mov
xchg
add
mov
jb
mov
shr
push
pop
aam
jbe
sbb
call
and
hlt
fbstp
int3
(bad)
mov
in
int3
retf
mov
add
jl
popf
cwde
xchg
xchg
jmp
sub
shl
cmp
outs
lock
cmc
outs
inc
mov
mov
cld
jge
xchg
mov
sbb
xchg
push
test
popf
jae
(bad)
pushf
or
call
jl
jle
jecxz
cdq
sbb
jge
scas
and
sbb
and
ins
xlat
(bad)
jmp
enter
cld
jp
hlt
out
in
pushf
jg
pushf
lea
pop
pop
jge
mov
mov
sahf
xor
cmp
(bad)
cwde
push
adc
or
lea
hlt
jp
sub
fstp
out
or
repz
movs
mov
out
pusha
jo
inc
mov
mov
mov
jae
(bad)
lods
sub
sbb
mov
mov
sub
lods
pushf
inc
sbb
dec
scas
jbe
clc
stc
mov
jp
(bad)
sti
push
or
mov
or
rcl
cwde
(bad)
outs
mov
jmp
jbe
add
je
(bad)
pusha
xchg
in
xor
cwde
movq
sbb
cmp
add
call
mov
nop
push
and
mov
repz
fist
sahf
jge
fwait
mov
std
cli
xchg
inc
jne
mov
pop
push
retf
sti
or
cmc
test
push
xor
pop
mov
pop
popa
jnp
push
ins
js
imul
in
lods
aam
dec
retf
xchg
adc
in
jp
push
ins
pop
pop
je
imul
jo
sbb
nop
xor
adc
in
pop
jmp
xchg
jnp
cmps
inc
push
in
je
test
test
js
addr16
dec
je
test
xchg
mov
jle
outs
aaa
cmc
mov
div
pop
cdq
xor
push
dec
jbe
ja
jp
jge
and
pop
jo
pop
das
ds
fdivr
dec
aad
add
clc
push
mov
push
push
test
js
mov
pop
push
jno
movs
in
add
js
ss
cld
call
js
ja
outs
lea
aas
pusha
xchg
jbe
sub
jge
sar
test
dec
jle
js
mov
in
repz
cmc
fidivr
xchg
aam
pop
loop
cmc
jae
mov
pop
jp
pop
jne
cwde
mov
mov
rcr
sbb
call
xor
push
jp
dec
icebp
cmp
mov
push
cmp
jmp
push
jno
inc
sub
mov
rol
jnp
mov
or
scas
or
ret
bound
xchg
sub
lahf
jb
mov
test
int3
lds
mov
(bad)
sub
mov
xchg
adc
adc
loope
jp
ror
cmps
xor
add
ret
adc
push
cmp
and
xchg
mov
sbb
lods
stos
xor
jne
mov
stos
aam
cmp
push
xchg
mov
push
xchg
mov
xlat
call
clc
xchg
xor
cmc
arpl
jmp
jp
xchg
xchg
jmp
xchg
cld
sbb
je
pop
inc
jbe
repz
ret
cmps
pushf
fwait
popa
clc
cli
stc
icebp
out
stos
pop
test
and
mov
jmp
fwait
or
add
xchg
test
stos
pop
jl
inc
cwde
jge
jnp
pop
fdivr
imul
lods
sbb
movs
sbb
xchg
fwait
mov
or
mov
pop
xor
iret
cmp
lods
stos
xchg
popa
jnp
loopne
cmps
pop
cmp
push
inc
bnd
xchg
xor
loopne
sbb
sbb
mov
fdivr
(bad)
cli
lods
jmp
or
sub
sbb
jp
out
test
cmp
push
adc
xchg
add
inc
jl
push
lods
shr
enter
add
mov
mov
push
movs
mov
mov
jo
pop
shr
std
std
div
lods
(bad)
lock
add
jmp
rol
jecxz
jmp
cwde
xor
sub
pop
fs
outs
std
dec
jmp
fdivr
std
clc
adc
sub
cs
jne
dec
xor
shr
push
push
jp
loop
(bad)
movs
leave
lock
ktestb
cwde
or
and
je
in
rol
mov
jnp
lock
stos
addr16
sbb
jnp
daa
xor
mov
outs
jb
cmc
pop
and
sbb
js
test
and
pop
sub
or
cld
stos
jle
add
sbb
loop
xlat
mov
mov
inc
ja
fsub
aad
fstp
jl
dec
inc
inc
jbe
push
pop
pop
push
imul
js
and
push
xchg
mov
sub
add
cmc
sub
(bad)
stos
test
push
test
test
dec
enter
jp
jns
imul
repz
jp
sbb
jp
sub
push
jo
imul
mov
stos
cmps
nop
add
test
sahf
test
cmps
mov
int3
jmp
shl
and
push
jmp
push
hlt
jp
and
out
stos
jg
cwde
jle
das
call
xchg
push
xchg
xchg
push
pop
mov
xor
call
in
fwait
dec
xchg
pop
jge
ror
les
pop
lea
push
or
xchg
inc
clc
mov
pushf
mov
and
xchg
xor
arpl
movs
arpl
inc
jnp
jge
push
jge
in
push
jae
cmp
les
test
or
add
loopne
adc
call
outs
dec
hlt
jp
and
adc
cmp
xlat
int
enter
xchg
push
in
pusha
push
in
inc
sbb
arpl
pop
adc
test
shr
ins
rcr
mov
std
push
adc
add
xor
je
mov
es
loope
movs
call
movs
les
dec
or
mov
push
ficomp
fmul
(bad)
cwde
fiadd
jo
and
mov
cmc
add
imul
int3
xor
sub
mov
out
xor
popf
mov
inc
loopne
pop
xor
cmps
in
fild
cmps
jmp
push
fs
adc
mov
movs
sahf
pop
popf
lea
mov
sub
(bad)
jo
jp
mov
js
out
push
stos
loopne
imul
sbb
mov
std
hlt
out
cmps
dec
cmp
fadd
adc
mov
push
mov
js
jae
mov
js
ins
je
imul
and
cld
mov
jg
sti
loope
enter
xchg
jb
jnp
jp
mov
push
ins
push
ins
movs
out
cli
int3
outs
cmp
jp
in
pushf
dec
hlt
jp
cmp
je
xor
imul
stos
loopne
ins
sbb
dec
pop
mov
cs
jns
and
call
in
into
xor
pop
daa
std
fwait
dec
inc
cmp
push
imul
jae
jno
jmp
add
cmps
push
jp
push
jmp
jmp
movs
and
mov
mov
add
imul
mov
sbb
mov
pop
in
fistp
mov
fwait
mov
sub
inc
ret
mov
push
inc
xor
jae
xchg
js
mov
pop
adc
jle
fcmovnbe
into
and
lahf
call
in
add
ret
jno
dec
pop
fadd
fcomp
sbb
push
dec
ss
cmps
pop
jnp
mov
mov
ins
mov
xchg
pop
lods
sbb
test
mov
or
(bad)
loope
fsubr
xchg
dec
cmp
daa
fs
das
fisub
retf
push
hlt
fnstcw
les
movs
out
jmp
test
sbb
mov
mov
or
cdq
les
call
(bad)
ror
stos
sub
mov
xchg
ds
les
iret
push
mov
jnp
jmp
jns
and
sbb
jb
lods
push
ja
sbb
ins
mov
aam
push
mov
mov
cli
or
push
nop
sbb
or
test
sub
jle
pop
pop
adc
sbb
loopne
addr16
xor
push
test
mov
lods
cwde
jno
pusha
test
lods
push
arpl
jp
rcr
ins
int3
enter
ins
jmp
cmp
mov
sbb
mov
cmps
add
jmp
mov
mov
lds
add
sub
in
sbb
jne
aam
push
jmp
pusha
pop
push
hlt
sub
pushf
popf
mov
clc
fdivr
sysret
add
cmps
push
mov
cld
mov
dec
mov
cmp
out
call
mov
adc
out
call
adc
clc
push
enter
mov
pop
push
hlt
pop
mov
xchg
(bad)
repnz
lods
ss
test
cmc
cmp
fistp
mov
jge
icebp
in
lods
push
cmp
(bad)
xor
push
add
push
std
out
call
jge
cmp
imul
cmc
lods
ror
out
xor
les
sub
loopne
out
jmp
test
jp
test
mov
cmps
mov
add
mov
push
xchg
xchg
or
fcom
cmps
pop
ror
mov
lea
jl
adc
lahf
prefetch
add
std
movs
pushf
fwait
mov
jl
sbb
inc
mov
lds
adc
leave
not
pop
cmc
sub
mov
sar
ins
xor
inc
shl
data16
cmps
xor
(bad)
jp
loop
test
leave
mov
sub
aad
sbb
xor
gs
add
lds
mov
xor
fdiv
push
das
sbb
and
movs
xlat
sbb
adc
lock
dec
jp
cmp
leave
push
pop
jae
jle
jmp
fwait
lods
mov
(bad)
les
mov
cmp
pop
jp
cmp
cmp
xor
jne
pop
rcl
popf
dec
dec
ins
jp
pop
ins
fs
xor
je
pop
cwde
jge
in
out
movs
pop
hlt
retf
add
push
out
stos
mov
mov
fnop
pop
xor
ss
lock
inc
jp
cmp
push
mov
addr16
retf
in
fstp
imul
ins
push
push
cmps
jne
ins
fidiv
push
jge
sub
jns
and
scas
aam
call
xchg
add
pop
or
in
imul
mov
rcl
jp
in
pop
data16
jmp
sub
or
scas
push
jne
pop
add
aam
push
push
xchg
shl
xor
(bad)
mov
test
(bad)
into
mov
jns
outs
ins
push
test
xchg
xor
dec
jnp
outs
xchg
call
(bad)
cmps
xchg
mov
jle
test
xchg
jl
mov
call
lea
pop
pop
bound
push
xor
call
jo
push
call
mov
retf
cmps
jne
repz
xor
pushf
and
push
mov
jns
add
jmp
pop
data16
xor
popa
xor
sub
pop
call
xchg
enter
test
outs
lods
or
mov
arpl
into
test
je
sbb
clc
inc
pop
cld
cmp
mov
jle
jge
pushf
out
cmp
jnp
cmp
pop
stc
ins
mov
stos
imul
jge
icebp
mov
cmp
push
cld
je
mov
fidiv
dec
ja
mov
in
outs
mov
lods
mov
dec
push
inc
sti
mov
pop
pushf
dec
(bad)
xor
pop
and
sbb
or
outs
js
outs
(bad)
out
ja
jge
shr
push
xor
push
sbb
cmp
sbb
adc
jns
fnstenv
sub
pushf
xchg
iret
pop
pop
ss
jg
push
jl
sbb
cmp
lar
(bad)
pop
xor
jnp
xor
mov
es
cmp
adc
fdivr
inc
sbb
(bad)
ja
xchg
jge
xor
jecxz
lods
lods
mov
pop
adc
outs
jecxz
or
pushf
lods
daa
jp
dec
scas
ins
into
adc
inc
push
sub
push
imul
std
js
cmp
dec
push
xchg
cld
test
sub
jnp
cmp
test
pop
sbb
or
mov
jb
sub
push
or
jmp
mov
ins
jns
adc
dec
jne
xchg
push
dec
xchg
ret
add
sub
and
loope
cmp
add
pop
adc
xchg
adc
movs
sub
ins
push
pop
sbb
dec
js
cmp
inc
sub
pop
jae
xchg
retf
ja
sub
push
sub
mov
cmp
adc
dec
dec
frndint
lock
test
push
xor
pop
push
xor
sub
cs
or
jns
sbb
pop
pop
dec
pop
cmp
stc
hlt
dec
inc
les
add
fdiv
js
sbb
push
cmc
je
pop
inc
cdq
sbb
adc
pop
pop
sub
and
fadd
std
test
subps
pop
jecxz
jp
xchg
cld
sub
xchg
or
dec
add
arpl
pop
pop
jb
popa
sbb
jb
test
push
or
retf
and
pop
pop
imul
dec
jne
dec
arpl
retf
jb
dec
cmp
jne
ins
scas
jnp
cmps
and
xor
dec
adc
jnp
cs
xor
je
inc
fs
inc
cld
xchg
sub
jb
sub
push
jno
in
inc
cmp
aam
xchg
xor
jo
cmc
arpl
cld
jecxz
adc
jl
js
aaa
pushf
pop
mov
dec
or
dec
pop
dec
(bad)
pop
and
jbe
fnsave
es
cmp
outs
or
ss
sbb
mov
and
inc
outs
imul
fldcw
ss
js
sbb
jge
addr16
xor
inc
retf
fiadd
in
dec
push
push
push
sti
jl
sbb
pop
pop
sub
xor
push
lods
dec
arpl
jne
js
sub
aam
lea
ja
cmps
sub
in
and
mov
sar
mov
xchg
sub
dec
aaa
dec
adc
mov
sbb
jnp
lods
xor
rcr
or
sbb
out
cmp
clc
xchg
neg
arpl
iret
les
mov
pop
xor
xor
call
cmp
je
ja
lds
push
or
sbb
dec
pop
es
push
push
pop
xor
mov
sbb
hlt
imul
scas
pop
sub
or
inc
fsincos
dec
pop
mov
xor
sub
loop
ret
add
or
ss
xor
xor
addr16
pusha
sub
or
pop
mov
das
cmp
pop
retf
cmp
aad
sub
retf
imul
mov
movs
fsubr
fcomp
gs
dec
adc
pop
pop
cwde
bound
inc
pop
mov
sbb
dec
inc
ficom
inc
pop
enter
jo
dec
dec
(bad)
adc
cmc
fdivr
ja
cmp
dec
popa
pop
dec
inc
cld
retf
nop
retf
mov
fsub
rcl
push
fs
mov
daa
mov
and
inc
lock
pop
sbb
jne
aas
sbb
mov
jmp
jge
outs
hlt
lea
frstor
inc
inc
adc
pop
pop
repnz
push
add
inc
pushf
pop
jecxz
hlt
pop
je
cmp
xor
imul
call
enter
inc
shl
retf
imul
dec
clc
in
pop
and
(bad)
and
hlt
inc
cld
cld
sub
push
sub
dec
cmp
sbb
das
cmp
ins
add
add
fldenv
or
mov
call
inc
int
pop
cs
push
dec
in
repz
sbb
pop
xor
xor
jmp
dec
or
cmps
xchg
in
pusha
pop
cmp
or
std
cmp
pop
ror
or
xor
stos
jb
jp
mov
call
ins
arpl
sub
mov
js
pop
loope
adc
xchg
js
adc
adc
(bad)
out
retf
int
mov
in
jns
push
les
je
jnp
vrsqrtss
bndstx
xchg
sub
inc
jns
dec
push
cmp
call
sbb
(bad)
ins
cmp
mov
dec
inc
jns
popa
sub
mov
or
hlt
mov
das
(bad)
fisttp
mov
sub
out
inc
fwait
dec
in
adc
xor
jmp
popa
mov
xchg
cmp
cmp
aad
mov
or
push
daa
or
cmp
jle
sub
mov
repnz
xor
xor
push
aaa
in
dec
hlt
dec
sbb
lock
inc
pop
dec
stc
cdq
dec
repnz
in
sti
ins
pop
pop
dec
pop
imul
dec
sub
push
inc
cmp
ja
daa
fnstsw
mov
push
loope
jb
ja
mov
mov
mov
ss
pop
call
pusha
test
xor
pop
xor
pop
cmp
xor
sub
ret
push
or
dec
jmp
popw
jb
jns
dec
cmp
pop
dec
push
mov
sbb
inc
dec
dec
ins
and
jnp
enter
or
test
cmp
mov
call
dec
enter
in
call
sub
repz
dec
sbb
mov
stc
jne
aaa
inc
lds
or
add
sub
dec
imul
dec
out
dec
xor
cmp
lods
pop
pop
inc
in
dec
popf
fs
call
sub
mov
shr
cdq
aas
push
push
mov
daa
in
fcomp
dec
add
cmp
cmp
arpl
pusha
es
sbb
fistp
jbe
jp
inc
jmp
jae
sub
inc
or
push
pop
out
inc
pop
cmp
fs
arpl
pop
repnz
popa
mov
rcr
jg
mov
movhps
mov
pop
popa
jae
jo
mov
dec
and
shr
aad
pop
das
xor
sbb
je
je
ss
pop
icebp
ins
dec
rcr
aas
out
je
ins
cmps
stos
in
imul
dec
add
jne
pushf
pop
adc
outs
cmp
jae
imul
add
inc
imul
mov
jmp
push
jno
in
daa
xor
dec
ss
je
imul
jae
outs
sub
adc
popa
ins
adc
push
sbb
ins
dec
aaa
test
push
arpl
dec
dec
cmp
ficom
addr16
in
push
mov
in
or
test
aaa
je
inc
rcl
data16
test
push
jbe
jle
js
pushf
bound
jb
outs
arpl
cmp
jge
cmps
in
xor
sbb
or
jp
xchg
les
retf
addr16
rcr
cmp
sub
es
cmp
xor
fcom
ins
out
outs
mov
icebp
pop
cmp
mov
popf
mov
repnz
ret
scas
out
pause
addr16
jae
jo
mov
xor
inc
hlt
xor
xchg
cmp
cmp
jne
sub
push
push
idiv
push
jle
jo
or
fistp
pushf
or
pop
push
jns
pushf
outs
dec
mov
add
loope
jge
cmp
sbb
int
jns
ja
dec
and
das
mov
sbb
inc
mov
rcr
clc
sub
outs
sub
jo
xor
mov
pop
mov
inc
inc
sub
(bad)
xor
push
inc
ins
mov
clc
push
dec
xor
hlt
sub
shl
int
cwde
jp
push
out
mov
rol
cwde
push
sahf
je
push
loopne
sub
outs
push
xor
in
pushf
lods
imul
in
push
push
jp
xor
jge
sub
lods
add
jge
xor
xor
jns
xor
(bad)
aas
(bad)
cdq
daa
adc
lds
mov
es
(bad)
sub
jns
sub
(bad)
sub
repz
jo
dec
cmp
ins
push
pop
xor
cld
data16
pop
rcl
fld
push
inc
adc
jnp
dec
cs
jnp
lea
pop
lds
pusha
xor
out
cmp
sti
ror
daa
in
xor
mov
jae
jge
mov
and
out
popf
je
sub
and
cmp
outs
into
out
sub
dec
inc
in
sub
jne
popa
adc
mov
fld
imul
jmp
and
push
add
push
call
addr16
inc
dec
std
dec
xlat
jno
sub
popa
nop
cmp
pusha
inc
sbb
jnp
lahf
sbb
cmp
int3
mov
xor
sbb
mov
pop
push
leave
inc
pop
mov
and
mov
or
jbe
push
dec
dec
pusha
xchg
cs
pop
dec
scas
or
add
or
stos
sbb
in
lds
sbb
dec
jp
jp
(bad)
fcom
js
pushf
jge
jns
jbe
out
push
sbb
mov
sahf
sar
sbb
and
sbb
mov
outs
push
pop
inc
pop
sbb
sbb
sub
repz
xor
pushf
push
push
je
neg
xchg
cmp
ins
cmp
pop
dec
scas
or
pop
xor
add
out
push
xor
mul
wbinvd
or
dec
dec
xor
jns
pop
cmp
dec
push
push
ss
inc
loope
cmp
addr16
fsincos
jle
xor
mov
cmc
(bad)
fstp
dec
mov
imul
pop
or
test
jnp
dec
dec
fstp
sub
int
mov
repz
add
lods
and
outs
and
clc
push
mov
fcomp
pcmpgtb
and
into
and
mov
adc
jmp
jae
pop
inc
je
jae
ja
pop
add
cmp
pop
mov
push
sub
lahf
sbb
dec
xor
or
push
pop
xor
lds
ins
cmp
mov
popfw
and
mov
push
ret
jecxz
mov
icebp
(bad)
mov
or
sub
xor
data16
push
in
hlt
xor
shl
call
ror
retf
xlat
sbb
subps
or
inc
lahf
jno
imul
lods
xor
or
jge
mov
fs
leave
ja
js
jge
xchg
add
jne
repz
dec
loopne
cs
cmp
mov
mov
xor
jp
movs
ror
pop
and
je
or
push
or
ss
stos
jae
adc
or
ret
cmp
jns
dec
inc
ins
in
pop
pop
sbb
jp
lods
sub
jge
sub
cld
jae
cmp
cmc
jne
xchg
cmp
xor
js
cmp
mov
and
jne
(bad)
stc
push
push
xor
jns
sub
pusha
(bad)
and
shl
and
pop
je
in
outs
pop
fcom
pusha
or
push
(bad)
mov
sbb
pushf
cmp
imul
cmp
xor
push
xor
or
data16
add
pushf
cmp
pop
inc
push
push
sbb
adc
dec
inc
sbb
mov
push
mov
js
push
jne
call
int3
jge
rcr
sbb
dec
jno
ins
je
lock
in
mov
add
pop
div
cmc
in
xor
stc
xor
cld
out
xor
jecxz
pop
sub
xchg
mov
push
sbb
sub
in
xor
sub
fldenv
jae
sbb
mov
add
cmp
ja
fs
push
loopne
jmp
ins
mov
fcomp
pushf
pop
or
hlt
inc
fbstp
pop
cmp
cmp
add
cmp
jnp
loop
ins
les
gs
pop
jmp
pushf
mov
jbe
mov
add
pop
std
push
jp
inc
cmp
push
add
and
mov
pusha
in
fs
mov
in
jne
(bad)
sbb
and
pop
sar
cmp
div
lock
std
adc
cmp
xchg
out
lea
jno
xchg
cmps
out
inc
ins
ins
shl
xlat
mov
inc
lods
cmc
mov
dec
ins
pusha
mov
push
mov
inc
push
push
sbb
jbe
sbb
and
xor
movs
adc
add
mov
fucomp
jne
pop
ret
cmp
fdivr
mov
ins
repnz
ins
or
mov
mov
pop
inc
mov
pop
jp
pop
jge
sub
ins
call
sbb
push
and
ins
xor
gs
inc
xchg
dec
cmp
sub
jae
fdivr
movs
jne
dec
je
ins
jno
xchg
bound
or
mov
jge
test
js
lahf
xor
sbb
div
mov
add
call
je
or
cmp
cmp
pop
jae
in
add
ss
mov
push
mov
ins
fnstcw
mov
pop
in
cmp
(bad)
sub
dec
ins
push
pop
push
out
jns
loopne
js
sbb
add
mov
aas
mov
es
pop
repnz
loope
pop
adc
jne
cmp
pop
cmp
sbb
push
jg
lds
xor
(bad)
hlt
mov
jno
mov
out
xor
cs
lea
adc
in
xor
or
rcr
pop
fbstp
leave
fs
test
hlt
jb
lods
fs
aad
imul
cmps
ja
fcmovu
imul
pop
jmp
xor
sbb
cmp
mov
jns
jl
xor
xchg
mov
adc
and
xor
cmp
enter
fld
pop
ins
ss
jg
outs
addr16
or
jnp
aam
cmp
xchg
inc
adc
cwde
push
cmp
push
outs
dec
shl
addr16
dec
into
(bad)
test
outs
xor
adc
or
jmp
shr
lock
and
aas
xchg
in
jne
pop
js
jbe
cmc
jne
jb
jae
ja
jo
jno
outs
outs
cmc
popf
in
call
ins
jne
pop
arpl
in
popa
pop
pop
push
mov
jne
add
jge
test
sbb
sbb
inc
xlat
push
xor
and
adc
and
and
(bad)
mov
xchg
jbe
retf
and
aas
and
xor
push
jnp
xchg
cmp
clc
pushf
pop
je
in
imul
test
movs
pop
adc
pop
js
mov
xor
jmp
int3
mov
mov
out
nop
gs
push
push
adc
add
or
mov
dec
enter
in
jge
or
and
sub
jge
call
cli
mov
jno
cmp
cmc
cs
pop
or
in
out
pop
loopne
(bad)
push
cmc
cmp
xor
in
lods
pop
mov
stc
or
dec
rol
frstor
in
outs
push
mov
pop
pop
push
add
jecxz
mov
fidivr
cmp
mov
lods
xor
div
pop
aad
dec
iret
imul
or
movs
(bad)
outs
ins
mov
outs
ins
in
ror
in
cmp
test
ins
enter
inc
or
out
aaa
xor
nop
out
fcomp
fs
out
aaa
adc
hlt
pushf
call
icebp
ins
stc
and
pop
je
inc
sbb
lock
ins
ins
les
hlt
or
push
or
ss
mov
inc
adc
out
pop
mov
dec
call
out
aaa
js
test
hlt
in
call
aaa
or
pop
fbstp
inc
sbb
inc
jo
les
inc
pop
adc
pop
mov
inc
cmp
mov
inc
pop
shr
sbb
inc
pushf
inc
lock
in
sub
ins
mov
dec
adc
dec
pop
pop
hlt
mov
dec
inc
pushf
dec
lock
call
dec
mov
clc
or
out
pop
mov
aam
and
jnp
cli
jb
push
sbb
inc
dec
cmp
xor
inc
add
lods
push
dec
mov
sbb
xchg
imul
adc
into
sbb
sub
mov
and
xor
fs
push
mov
mov
jb
pop
or
dec
cli
test
push
jmp
inc
pusha
imul
pop
js
int
lods
jge
dec
imul
push
pop
pushf
and
cld
imul
fs
retf
fs
lods
pop
add
lock
xchg
hlt
or
xor
mov
jmp
push
dec
gs
adc
jns
in
fdiv
pop
adc
jne
pusha
stos
gs
out
cmp
add
pop
or
je
mov
and
xor
dec
nop
jmp
call
and
adc
jbe
sub
fdiv
hlt
ins
sbb
in
mov
or
mov
push
or
push
arpl
sub
push
sub
mov
mov
repnz
pusha
dec
loope
or
push
mov
jae
and
test
and
cmp
dec
pop
bound
cmps
jp
pop
retf
in
mov
movs
cmp
sbb
dec
xor
push
jne
cmc
and
dec
imul
xchg
jb
les
fstp
(bad)
cmps
add
clc
inc
mov
in
clc
loop
je
in
sub
call
xor
add
loop
in
add
mov
xor
sbb
or
loopne
xchg
jmp
jns
add
mov
xchg
cmp
fnsave
pop
dec
rcl
scas
sub
push
scas
addps
push
cmps
push
push
repnz
fsubr
lods
aam
mov
cld
and
js
add
adc
repz
(bad)
jmp
(bad)
stc
in
clc
bnd
and
bound
rol
fild
sbb
lods
add
mov
jno
lods
mov
hlt
and
lock
fs
clc
pop
jg
ins
out
out
fidiv
jno
lahf
add
neg
mov
aam
mov
jno
fisubr
pop
imul
repz
gs
sub
sub
pop
je
int3
sbb
cmps
out
dec
pop
fild
loopne
inc
stc
jo
pop
ins
push
xor
cdq
and
hlt
ins
test
ins
and
cli
and
and
or
(bad)
pushf
sbb
dec
adc
cmp
pusha
jno
dec
mov
or
fsubr
mov
(bad)
fs
hlt
mov
fs
inc
push
repnz
adc
ins
inc
mov
add
fs
lock
outs
ins
js
repnz
fs
cmp
or
pop
pop
add
xor
out
lea
mov
push
pop
xor
lea
(bad)
fs
fs
push
sub
cmp
in
mov
push
stc
adc
dec
push
sub
outs
ins
cmp
and
xor
out
cmp
mov
and
call
and
sbb
ss
call
sub
pusha
adc
in
mov
pop
in
sub
cmc
sub
add
out
cmp
int3
mov
sbb
inc
pop
pop
jo
ins
add
inc
in
or
cmc
aaa
pusha
add
cmp
mov
cwde
add
ds
pop
pop
mov
pop
ds
cld
mov
add
je
xor
cmp
movs
mov
lods
push
pop
hlt
in
xor
aam
lea
pop
sub
push
pop
enter
in
in
data16
inc
call
xor
ins
mov
ins
in
in
popa
add
popa
inc
je
loopne
push
xchg
les
push
in
fsub
div
sbb
mov
in
fdiv
jmp
pop
aam
cmp
test
ins
push
sub
mov
add
test
cdq
push
in
int3
pusha
jns
in
nop
mov
(bad)
cmp
enter
xor
js
xor
fs
ins
les
cmp
into
mov
rcr
js
dec
and
inc
mov
add
sub
mov
movs
pop
or
pop
pop
mov
imul
in
mov
outs
fst
pop
test
call
out
cmp
ins
sbb
pop
dec
dec
dec
cli
test
int3
xor
add
and
adc
xor
movs
jecxz
in
pop
lea
fs
jns
pop
dec
sub
inc
pop
outs
push
sbb
pop
pop
or
adc
add
cwde
mov
add
jg
cmp
add
pop
and
fdivr
cld
and
or
hlt
pop
or
mov
outs
push
call
mov
jp
fdiv
es
test
sub
inc
repnz
sub
or
pop
aaa
sbb
push
pushf
stos
and
int3
scas
and
pop
fs
mov
fs
js
mov
fs
adc
dec
push
or
fs
cmp
or
mov
jo
mov
js
xchg
sub
pop
ins
in
cmp
cmp
fsubr
and
hlt
sbb
xor
push
sbb
pop
aaa
mov
jecxz
mov
sbb
pop
jbe
jo
sbb
pop
mov
add
adc
mov
js
jl
push
mov
xor
js
or
sub
pusha
ins
div
pop
je
cmp
dec
cwde
dec
inc
loopne
je
sub
dec
ret
mov
or
pop
pop
test
push
daa
ret
sub
outs
ins
and
hlt
adc
mov
inc
in
or
cmc
or
popf
stos
push
and
mov
or
pop
aam
ins
in
jno
cwde
xor
outs
pop
pop
js
imul
outs
cwde
xor
and
pop
or
ins
fcomp
in
sub
dec
push
xchg
lods
sub
jp
adc
sub
push
int
jo
xor
lea
js
push
idiv
add
dec
test
sub
fmul
outs
ins
mov
cwde
out
(bad)
cld
pusha
sbb
and
jno
cmp
or
icebp
lock
je
and
dec
or
sub
lods
outs
jns
mov
or
cmp
lock
call
add
inc
inc
aam
sub
fs
add
cmp
mov
je
cld
cwde
inc
inc
pushf
out
sub
fs
clc
out
cmp
sbb
hlt
inc
sub
lock
pop
pop
call
jp
in
inc
sub
pop
call
aam
call
mov
mov
dec
xor
out
cmp
mov
pop
sub
push
mov
pop
sub
push
add
ins
lock
je
dec
dec
push
fadd
outs
pop
int3
in
push
aam
sub
push
(bad)
call
rcr
push
inc
mov
test
push
push
int3
gs
outs
ins
add
hlt
xor
sub
cmp
sbb
sub
or
pop
pop
inc
push
push
in
mov
pusha
or
and
pop
mov
push
arpl
pop
imul
mov
add
gs
lods
out
cmp
cwde
aam
fs
test
jne
aaa
adc
aaa
jne
movs
ret
mov
xor
mov
imul
pushf
(bad)
in
xchg
sbb
jb
pop
and
cwde
push
jb
int3
js
and
hlt
les
mov
in
das
lea
test
das
xor
out
cmp
sbb
mov
mov
cmp
cld
in
test
dec
out
xor
mov
cwde
addr16
call
sub
jns
movq
gs
sub
pop
or
adc
xor
dec
add
jns
xor
hlt
mov
mov
jo
adc
cmp
sbb
fs
fsub
or
fs
fsub
enter
mov
pop
xchg
xor
in
inc
mov
movs
cmp
jo
jp
pop
push
xor
in
cmp
xor
and
cmc
or
pop
out
xor
in
aam
leave
cmp
xchg
pop
xchg
jnp
je
ret
mov
cmp
xor
in
adc
cmp
jmp
xor
in
stos
pop
pushf
cmp
std
push
xor
in
xor
sub
sbb
cmc
add
pop
out
fucomi
int3
pop
sar
cmps
cmc
cwde
push
pop
jle
jae
je
in
pop
pop
dec
cmp
xor
and
xor
in
icebp
pop
loop
xlat
mov
dec
xor
in
adc
cli
popf
aas
sbb
ds
inc
out
and
mov
daa
sbb
dec
push
hlt
enter
arpl
push
aas
mov
js
add
stc
push
movs
add
add
fsubr
(bad)
aaa
mov
pop
mov
pusha
mov
xor
mov
call
ror
(bad)
and
mov
push
pop
es
pop
ins
cwde
rcr
pusha
mov
sar
(bad)
cmp
imul
pop
push
mov
addr16
popf
pusha
daa
mov
pop
in
test
test
(bad)
cmp
test
mov
test
xor
mov
daa
cwde
or
jge
push
loopne
and
mov
jo
imul
cmp
(bad)
sub
retf
test
jae
jge
repnz
sub
mov
jge
mov
test
call
add
inc
cmp
add
sub
stc
cmps
sub
sbb
lds
sbb
fsubr
call
loopne
ins
sub
mov
(bad)
push
dec
pop
in
pop
push
inc
dec
mov
inc
popa
push
jmp
add
into
pop
leave
jmp
add
loope
add
inc
push
movs
rcl
lahf
aas
cmp
call
push
dec
push
push
je
cwde
rol
inc
sub
xlat
xor
cwde
dec
je
imul
rcl
xor
sar
push
push
pushf
mov
dec
mov
jmp
adc
test
mov
mov
pop
adc
call
cs
gs
mov
pop
pop
push
sub
adc
adc
(bad)
jmp
scas
inc
add
inc
add
xor
sbb
and
mov
ror
(bad)
int3
dec
add
in
js
fwait
call
movs
push
fwait
jecxz
pop
push
add
sbb
dec
lea
call
xchg
fs
mov
cmp
mov
pop
in
lea
xor
mov
cmp
call
popa
hlt
rcr
movs
pop
cwde
add
jae
mov
imul
aas
pop
call
mov
add
sbb
popa
push
sbb
cmp
sbb
add
push
movs
adc
xchg
jg
inc
sbb
int
cwde
pop
call
lock
sbb
dec
pop
push
xor
sub
js
ins
and
sub
cwde
out
or
addr16
mov
test
popa
imul
xchg
pop
pusha
sub
sbb
pop
adc
xor
popf
rcl
xchg
xlat
call
jg
dec
sbb
sbb
aas
mov
jge
clc
add
repnz
push
rcr
xor
std
xor
arpl
out
bound
rol
stc
in
adc
cs
bound
rcl
jo
pop
jnp
outs
mul
ins
mov
jno
jb
mov
fs
push
inc
(bad)
je
ss
push
pop
xchg
add
bound
sbb
cli
jno
mov
(bad)
je
ss
shl
mov
fs
pop
ret
mov
mov
dec
sahf
sbb
ins
test
lock
ins
cmps
cwde
mov
jge
je
scas
mov
fs
and
pop
ins
not
mov
jle
shr
repz
pop
fdiv
sti
inc
dec
ss
dec
je
pop
mov
inc
je
ss
pop
add
mov
cmp
dec
lahf
jle
mov
mov
bound
pop
add
psubb
sbb
sub
lock
push
retf
jno
out
clc
es
xor
ins
inc
cs
clc
pop
(bad)
das
ins
xbegin
jnp
jns
or
xor
fs
clc
pop
adc
add
scas
cwde
call
out
repz
nop
loopne
or
cmp
arpl
ins
and
cmps
lea
pop
out
mov
ins
sti
pop
out
or
lea
aas
hlt
imul
and
je
and
je
add
jmp
test
mov
ins
lahf
clc
push
aam
fwait
ins
ins
aad
cmp
clc
pop
rcr
push
cmp
rcl
mov
into
or
int3
div
xchg
int
(bad)
repnz
jno
outs
(bad)
xlat
cli
hlt
call
hlt
ret
mov
rcl
sub
sbb
ins
push
aaa
mov
sub
dec
loop
xchg
push
adc
test
call
fs
adc
retf
test
mov
popf
jl
in
mov
mov
retf
das
jb
cld
sbb
pop
sub
lods
pop
inc
pop
jne
inc
xor
jp
retf
xor
mov
pop
adc
cld
jge
push
rol
loopne
idiv
cwde
popa
(bad)
inc
std
dec
jge
mov
nop
in
addr16
mov
push
loop
call
sbb
cld
ins
neg
mov
lods
js
std
ins
ins
jo
pop
push
jo
cwde
pop
or
sbb
ret
lock
cwde
xor
dec
mov
je
pop
aam
jb
push
in
lea
jnp
xor
fdiv
mov
ficom
je
and
mov
sub
pop
enter
xor
pop
in
push
pushf
int3
aaa
ret
hlt
cmp
dec
push
or
hlt
je
mov
mov
fnstsw
imul
ins
mov
(bad)
int3
jmp
xchg
mov
mov
hlt
jo
popa
pusha
pop
sub
mov
lods
jne
push
loop
fs
loop
fs
mov
out
js
mov
push
inc
jmp
jb
out
hlt
daa
mov
and
pop
sbb
pusha
sbb
mov
push
in
jne
in
int3
push
mov
mov
in
jp
sbb
cs
mov
inc
pop
hlt
cmps
shr
dec
jp
xor
or
sbb
je
push
sbb
cmp
cmp
cmps
pop
cmp
adc
stc
or
dec
imul
rol
inc
sbb
cmp
or
leave
adc
sub
jb
dec
or
dec
jnp
xor
jp
pop
aaa
les
jbe
jne
push
jle
pusha
jo
ins
adc
adc
cmp
fcmovnbe
xor
push
pop
mov
adc
cdq
cmp
cmp
dec
popa
push
div
dec
xor
add
les
leave
and
in
jge
cmp
xor
lods
pop
pop
mov
sbb
pop
cwde
push
pop
or
pop
or
lods
(bad)
movs
sbb
inc
inc
jae
dec
das
add
lahf
or
mov
jne
push
in
xor
shl
lods
mov
ins
dec
cmp
push
xchg
xchg
loopne
mov
mov
in
aam
dec
push
jo
push
(bad)
dec
mov
mov
dec
jp
loope
add
xchg
or
test
push
jp
mov
mov
in
xchg
mov
leave
inc
adc
mov
add
dec
mov
pop
dec
dec
jmp
fs
xor
jmp
repnz
leavew
stc
push
ds
mov
lods
fs
pop
and
aam
sub
sar
push
ins
inc
pop
test
lods
push
inc
dec
fsub
jb
in
test
sub
leave
test
sub
(bad)
int
jae
push
test
xor
jno
adc
dec
fbstp
xor
scas
leave
lea
mov
jp
push
int
jge
stos
lock
pop
fs
or
push
jle
ret
retf
mov
(bad)
jmp
push
add
cmp
cli
mov
clc
fstp
push
inc
sbb
std
adc
xchg
scas
rol
les
in
sub
adc
daa
and
cmps
dec
mov
out
inc
sbb
jp
sbb
test
out
add
xchg
ret
mov
cmps
pop
daa
dec
xchg
stc
hlt
pop
jmp
in
sbb
cli
jge
scas
jae
sbb
pop
cdq
hlt
dec
mov
daa
out
call
add
dec
dec
fsubp
pop
xchg
add
dec
add
sub
cmps
daa
jp
push
mov
mov
dec
jne
jecxz
pushf
pushf
fcomp
out
sbb
push
and
push
add
in
push
shl
ror
into
in
(bad)
xchg
and
fst
push
mov
mov
xor
push
cmp
stc
xor
loop
push
fild
ror
outs
in
pop
in
fcomp
shl
aad
sbb
jne
cmp
les
xchg
push
mov
push
push
mov
or
jle
and
dec
jmp
inc
daa
xchg
or
pop
and
nop
sub
mov
fld
xchg
mov
(bad)
fimul
xor
data16
jp
sub
dec
or
pop
jb
and
jo
mov
cmp
(bad)
inc
cmc
push
sbb
or
(bad)
push
sahf
push
lahf
mov
sbb
fsubr
jne
(bad)
fiadd
fnstsw
jg
pushf
adc
cmp
and
sbb
daa
sbb
inc
daa
dec
xor
ss
dec
out
ins
ja
or
sub
xchg
adc
sub
xor
pop
movs
mov
xchg
and
add
sbb
dec
xor
inc
mov
aam
push
add
outs
rcr
push
ins
or
xchg
adc
imul
mov
cmp
xchg
ja
imul
ja
sub
jle
pop
addr16
mov
mov
sub
xor
jl
sar
cld
add
lock
or
in
int3
or
aad
xchg
ss
ins
aam
ins
mov
(bad)
out
in
outs
fisubr
mov
mov
cmp
mov
in
sub
adc
cmps
call
cmp
dec
fs
mov
xor
idiv
sbb
jl
cmp
call
push
outs
pop
rcr
mov
das
adc
ins
cwde
mov
lods
inc
outs
pop
test
jne
sbb
jb
in
call
cmp
jo
loop
fwait
push
inc
sub
push
sub
add
pop
or
inc
push
movs
adc
xor
pop
sub
call
sbb
hlt
aaa
cmp
sbb
sbb
xor
sub
test
fprem
mov
bound
mov
ins
sub
adc
ss
or
pop
xchg
call
add
cld
inc
mov
and
hlt
mov
mov
push
pop
or
mov
xchg
pop
and
test
jo
in
sbb
bound
mov
sub
or
and
in
adc
imul
mov
adc
inc
xor
loope
enter
adc
shl
movs
inc
or
dec
cwde
sub
xor
add
jno
pusha
ss
in
adc
xor
cmps
pop
mov
dec
push
and
shr
(bad)
cmp
jne
in
adc
pop
or
dec
pusha
sub
jo
sub
lock
jno
push
or
sub
icebp
sar
dec
outs
cld
sub
adc
clts
into
ror
mov
add
ss
fmul
dec
out
pop
jge
movs
jge
jns
cld
cmp
enter
sub
inc
jne
push
pop
xor
in
sbb
sbb
adc
cmc
or
or
xor
in
clc
pop
hlt
cmp
loopne
fsubr
pop
int3
xor
in
les
cmp
pop
test
movs
in
mov
xchg
cmc
nop
push
pop
mov
out
ret
js
jne
cmp
cmc
pusha
push
pop
push
xor
in
inc
pop
cmp
cmp
jp
rol
mov
add
add
xor
sbb
sar
mov
lods
push
pop
mov
jne
ins
js
jp
pop
ins
xor
in
fs
pusha
cmp
in
clc
ins
hlt
jne
lock
cmc
call
xor
in
sar
enter
fs
xor
bswap
add
xor
fs
movs
cmp
jne
push
adc
or
or
push
xchg
in
sbb
inc
hlt
aam
int3
outs
ins
mov
loop
inc
xor
xor
rcr
das
and
das
or
js
xor
sbb
push
in
in
push
sbb
rol
cmp
pusha
mov
ins
test
in
xor
nop
dec
pop
mov
lods
lods
in
movs
bound
scas
or
popf
sub
pop
or
xor
ss
pop
cwde
cmp
pushf
fwait
ss
sub
cmp
adc
cmp
or
icebp
push
jns
repz
std
sub
outs
push
jb
dec
rcl
push
and
or
fs
jl
sbb
jmp
fdiv
fimul
sbb
sbb
jno
inc
je
xor
fnsave
clc
call
cmp
sbb
mov
es
(bad)
mov
push
pop
hlt
je
add
add
mov
mov
div
push
pop
pop
ins
push
mov
jmp
pop
call
push
pusha
push
cmp
add
(bad)
xor
mov
cmp
push
dec
cmp
lock
sub
or
adc
out
mov
cmp
hlt
mov
imul
mov
enter
mov
cmp
xor
xor
jmp
fimul
push
lods
and
pop
adc
push
jp
adc
adc
adc
fdiv
xor
icebp
ins
sbb
ss
xor
clc
inc
sub
dec
sub
popf
jo
dec
sbb
loope
add
push
cmp
mov
ins
sub
add
pop
fcom
and
icebp
ins
hlt
call
mov
pusha
loopne
cmp
dec
mov
pop
mov
and
mov
sub
jl
std
push
pop
gs
les
jecxz
pop
push
push
push
je
loope
cmp
pusha
in
adc
jne
push
ins
dec
pop
xchg
adc
mov
jmp
out
fcom
inc
adc
and
movs
xor
push
jmp
pop
adc
xor
xor
sub
and
aam
inc
inc
pop
inc
ss
cmp
and
inc
inc
adc
scas
jp
or
and
rcl
push
pop
shl
push
add
sbb
and
jge
ins
xchg
mov
fmul
retf
pop
push
cli
or
jp
cld
or
gs
div
dec
adc
sbb
ins
push
pop
call
push
jecxz
dec
push
fmul
nop
push
and
cmp
jp
int
pop
push
cld
cmp
adc
push
ds
push
jbe
mov
or
xor
pushf
xor
int3
retf
pusha
xor
or
mov
sub
xor
cmp
pop
rol
pop
ins
mov
xor
in
je
dec
add
fdiv
sbb
sbb
hlt
add
mov
sbb
cmps
pop
sub
fs
nop
cwde
les
adc
call
jo
aad
clc
lock
pop
clc
gs
call
cmp
sbb
inc
dec
fdiv
ins
mov
shr
push
sbb
sub
aaa
es
je
popa
ins
pop
push
pusha
dec
pop
cmp
and
cmp
jo
and
ss
hlt
les
in
and
push
rcl
ins
ror
gs
xor
mov
lods
pusha
pop
js
mov
das
push
jmp
push
(bad)
loopne
or
sbb
pusha
push
das
es
es
xor
loopne
dec
pusha
inc
pusha
dec
ins
dec
inc
inc
dec
dec
gs
add
mov
xor
dec
out
inc
jle
shl
(bad)
je
ins
js
into
cmp
pop
in
sbb
sbb
cmp
push
inc
enter
sbb
jne
sub
jge
adc
out
dec
push
adc
ds
push
cmp
inc
lods
clc
repnz
loopne
imul
add
sub
fcom
jp
retf
mov
xor
mov
shl
call
aam
stc
add
add
or
loopne
add
in
ret
sub
adc
mov
add
pop
dec
xor
cmp
cs
mov
(bad)
cmp
or
cmp
push
dec
sbb
mov
push
mov
adc
fnstenv
and
and
iret
in
add
adc
jo
repz
push
jmp
inc
pop
les
push
push
(bad)
stos
in
xor
sbb
scas
mov
jae
ret
adc
popa
sbb
cwde
fist
add
cli
push
pop
test
sub
out
dec
jne
inc
clc
push
or
push
dec
sub
lods
stos
mov
push
push
adc
outs
aam
mov
dec
sub
and
add
jl
dec
jne
jl
cmp
cmp
sub
push
inc
or
jl
cmp
lods
dec
dec
pushw
enter
fadd
inc
daa
popf
jl
mov
adc
cmp
hlt
push
mov
mov
dec
das
in
jne
or
mov
cmps
adc
push
outs
outs
pusha
inc
dec
push
loopne
sbb
call
mov
clc
je
je
add
test
fisub
push
add
test
int
fnstsw
xor
sub
(bad)
dec
cmp
and
xor
pop
push
clc
xor
jne
xor
adc
mov
pushf
dec
cmp
and
jne
add
mov
mov
popf
inc
sbb
popa
rcl
nop
ins
or
mov
or
push
rcr
loopne
je
or
push
dec
cmp
dec
bound
aaa
dec
mov
test
pop
inc
fcomp
daa
not
ins
mov
jp
dec
dec
fs
repnz
push
jo
or
ins
and
mov
jbe
jp
shl
loopne
retf
pop
adc
or
stos
movs
ds
mov
ins
arpl
cmp
sbb
push
pop
jp
dec
pop
mov
add
(bad)
out
pop
or
imul
out
sub
sbb
jle
dec
jmp
sub
mov
adc
mov
add
sbb
dec
jne
cmp
cmp
dec
fs
in
inc
pusha
inc
jmp
fdivr
jo
jae
push
dec
or
out
sub
pop
bound
jb
stc
icebp
cs
adc
stos
add
cld
mov
in
push
or
add
xchg
in
xchg
std
test
sub
cmp
pop
movs
in
push
pushf
add
mov
fbstp
enter
es
les
adc
jp
in
fild
cmp
add
loop
lock
jb
push
xchg
pusha
in
pop
jbe
in
out
lods
pop
clc
pop
push
cmp
sbb
mov
jne
sbb
jmp
xchg
cld
push
repz
pop
inc
adc
repnz
sub
in
mov
mov
mov
push
test
sbb
and
data16
mov
icebp
dec
fs
mov
add
dec
cs
jp
and
sbb
cmp
sahf
fidiv
push
in
mov
fild
not
or
xchg
sub
adc
and
sbb
pmulhuw
add
dec
jl
out
stc
dec
in
jae
in
int3
xor
cmp
add
pop
and
bound
pusha
sub
push
cdq
pop
cld
ficom
cdq
pop
int3
sbb
or
jno
jb
mov
ss
add
or
add
push
or
add
mov
es
mov
ror
or
loop
or
mov
lods
and
call
fcmovbe
enter
push
sbb
jns
bound
cmp
jl
imul
push
fwait
cmc
popa
in
pop
(bad)
xlat
cmc
(bad)
inc
mov
imul
sti
dec
cli
pop
mov
sti
sar
cmp
adc
dec
int
dec
jo
sub
inc
shr
or
sub
ss
dec
xor
or
push
cmp
retf
pusha
pop
cli
or
cmp
cmp
sar
out
loopne
ins
sub
xor
ror
call
dec
hlt
cld
adc
sbb
hlt
dec
push
and
or
xor
sub
pop
sti
inc
cli
or
sub
pop
inc
push
mov
gs
adc
ror
fs
push
sub
(bad)
in
cmp
les
mov
sbb
push
rcr
cwde
data16
or
dec
jb
xor
stos
push
sub
push
xor
mov
(bad)
call
sub
adc
test
dec
pusha
mov
xor
dec
repnz
dec
jl
stos
adc
and
or
imul
inc
push
in
jmp
xchg
mov
pop
rcl
cwde
jp
dec
je
sub
daa
clc
xlat
adc
jp
dec
les
add
ret
jle
scas
push
and
jne
aam
push
inc
dec
push
cld
add
or
cmp
xor
out
xor
jp
pop
je
push
or
loope
xchg
jno
jg
out
(bad)
and
mov
bnd
sub
fiadd
sub
dec
dec
pop
js
mov
in
dec
pusha
dec
(bad)
push
add
cmp
jnp
sbb
movs
shl
in
add
and
test
or
xor
pop
dec
(bad)
push
mov
xchg
sub
and
push
call
cmp
rcr
pop
nop
mov
and
ja
out
sti
push
and
push
loopne
or
pop
sub
je
cmc
sbb
jbe
das
dec
or
icebp
pop
outs
and
jl
das
je
xor
dec
cmps
add
out
fisttp
push
in
cs
pop
xor
push
mov
nop
sbb
or
pusha
dec
out
push
(bad)
cli
test
push
(bad)
and
sbb
jp
sub
out
push
cmp
test
mov
sub
data16
imul
jb
sbb
jecxz
fwait
cmc
jp
sbb
add
(bad)
in
pop
data16
out
dec
mov
clc
outs
and
inc
pusha
mov
xor
and
push
adc
fdivr
push
sbb
pusha
jns
sbb
adc
dec
inc
out
jp
adc
and
or
pusha
aaa
inc
outs
(bad)
loop
sub
pusha
fiadd
and
push
cmp
adc
and
xchg
ins
fs
pusha
cmc
xor
mov
fs
js
jge
sti
outs
je
push
pusha
push
cdq
pusha
push
pushf
or
push
sbb
dec
push
pop
mov
xchg
push
or
cmp
inc
sbb
push
inc
pop
cmp
stc
and
dec
push
pop
mov
daa
in
dec
iret
or
add
imul
pop
inc
es
cmp
stc
add
sbb
cld
sbb
add
sub
cli
out
sti
mov
adc
dec
inc
dec
jmp
pop
pop
in
inc
mov
out
push
and
pop
cwde
inc
aas
push
sub
adc
xor
sub
das
sbb
pusha
and
cmp
in
xor
iret
pop
dec
push
cmp
mov
out
sahf
fs
cmp
jns
and
jbe
mov
hlt
pop
push
jmp
push
push
push
adc
sbb
pusha
loope
dec
jmp
mov
cmp
inc
jne
imul
sub
pusha
jp
and
lock
mov
das
jo
xchg
or
push
mov
stos
shr
(bad)
bnd
xlat
repz
js
xor
lea
ss
and
ret
js
xor
aad
in
sbb
mov
rcl
and
pop
ficomp
adc
jmp
js
mov
sub
pop
xchg
es
aam
push
cmp
and
mov
cmc
js
or
es
cmc
or
repz
cmp
dec
test
mov
xor
in
ins
imul
or
adc
ja
mov
mov
push
mov
adc
cld
sbb
xor
add
fmul
sbb
fs
nop
test
pop
clc
dec
or
pusha
icebp
ins
pop
popf
dec
pop
das
xor
es
mov
dec
hlt
add
xor
in
dec
fiadd
aaa
mov
mov
xor
cmp
xor
ins
xor
inc
(bad)
in
hlt
mov
and
pop
pushf
sub
loope
es
jo
xchg
in
and
lock
sub
mov
pop
mov
fdiv
and
sbb
pop
enter
cmp
adc
call
nop
pusha
sbb
ins
adc
xor
mov
dec
(bad)
hlt
or
add
push
gs
jae
pop
add
ss
clc
or
(bad)
inc
mov
push
sbb
popf
adc
mov
jg
pop
or
mov
hlt
adc
test
pop
add
add
mov
fdiv
push
ror
xchg
lods
scas
and
lods
shl
fiadd
jo
adc
sub
les
repnz
xor
inc
cs
lods
pop
out
call
adc
sbb
bound
jo
cmp
je
cmp
cmp
pusha
cmp
cmp
push
out
jl
sbb
jl
cs
mov
sub
push
pop
int3
push
cmps
movs
shl
fnsave
loop
pop
ds
cdq
cs
xor
xchg
push
mov
pusha
ins
fistp
leave
cli
mov
pusha
push
sbb
jmp
cld
lods
cmp
sub
fcmovbe
push
sbb
pusha
push
inc
pop
sbb
dec
call
push
call
mov
jns
dec
mov
scas
jo
out
test
or
out
sub
adc
ss
xor
xchg
pop
ss
sub
hlt
in
fsubr
mov
push
stos
lds
mov
cmp
lock
ror
sbb
cwde
or
stc
xchg
jns
das
push
ins
das
call
int3
adc
imul
mov
mov
xor
inc
shl
mov
psrlw
nop
bswap
mov
or
aas
sub
mov
lods
inc
ins
and
(bad)
enter
stos
sbb
test
aaa
sub
sbb
dec
cmp
loop
ins
push
push
mov
inc
loope
div
push
mov
cwde
mov
sbb
in
push
ja
or
repnz
sbb
and
retf
pop
(bad)
mov
adc
cmp
or
pusha
das
clc
les
pop
outs
loop
and
sbb
sahf
fstp
out
jns
jno
dec
add
lods
rcl
mov
loop
add
adc
popf
stos
jle
sub
(bad)
inc
ss
sbb
jbe
xchg
mov
sbb
push
jne
hlt
and
mov
es
retf
fadd
adc
repz
rcl
pop
or
hlt
(bad)
shl
push
cdq
test
or
bound
jb
sbb
dec
push
pop
sbb
nop
xor
pushf
sub
adc
ds
inc
test
cmps
cs
cmp
adc
cli
push
add
out
fidiv
jl
add
pop
loop
sub
adc
xor
(bad)
push
inc
push
add
add
push
adc
lds
dec
xor
cmps
out
test
sub
ins
lods
cli
jg
push
pop
push
jmp
push
mov
pushaw
neg
mov
add
(bad)
lods
fsubp
int
push
push
cmps
lock
and
das
js
add
add
xchg
add
sbb
push
mov
dec
xor
sub
xor
push
loop
loope
cmp
adc
push
hlt
mov
sbb
xor
adc
je
push
sub
push
jns
jmp
cmp
push
xor
push
sbb
and
sub
pop
push
mov
cs
xchg
data16
adc
in
push
or
jmp
retf
jp
test
cmp
stos
call
pusha
xor
push
fidiv
adc
or
push
jmp
and
int
es
cmp
pop
iret
call
xor
pusha
push
ret
mov
and
cmps
retf
shl
mov
push
in
pop
(bad)
adc
loop
int
rcl
mov
sbb
aam
jmp
push
(bad)
imul
cli
push
retf
test
mov
and
or
dec
cmps
test
or
int3
sub
jmp
fistp
aam
and
sub
sbb
lock
in
imul
pop
pop
ins
fst
push
cmp
add
js
pop
jmp
out
or
cmp
loope
adc
and
pop
pop
call
cmp
in
jl
and
bound
add
das
into
xor
outs
add
xchg
mov
lea
ins
mov
xchg
enter
adc
mov
push
add
sub
mov
push
jle
in
inc
adc
sub
and
jmp
jo
(bad)
jae
jne
adc
outs
adc
sbb
dec
inc
and
neg
xor
or
adc
jl
jae
add
or
fstp
mov
call
int3
xor
shl
pop
mov
cmp
sbb
mov
dec
aaa
lea
outs
inc
and
adc
xchg
lahf
or
sbb
movs
pop
cmp
jg
call
into
or
dec
add
mov
add
or
mov
xchg
jmp
sub
scas
pop
cmp
bound
inc
dec
bound
in
add
dec
lock
pop
inc
movs
push
jmp
jl
cmp
popa
push
xlat
cmp
inc
int
xor
inc
add
pusha
cmp
aaa
aad
inc
dec
loop
push
inc
stos
or
xor
sub
mov
pop
data16
mov
retf
and
fld
test
popa
dec
push
lds
lods
sub
outs
dec
cmc
dec
(bad)
test
add
ins
into
sub
sbb
add
sbb
add
and
repnz
dec
xchg
push
mov
jecxz
inc
or
push
add
sbb
pop
sbb
inc
mov
enter
dec
cwde
or
sbb
sbb
sbb
and
(bad)
mov
xchg
das
cmps
cmc
inc
ret
or
inc
mov
sbb
loope
test
scas
push
sub
repnz
test
dec
das
xchg
xor
fimul
mov
sbb
xchg
pop
add
inc
sub
rol
mov
inc
push
cmp
int
dec
mov
(bad)
cwde
retf
and
push
jbe
in
retf
daa
shr
add
or
nop
pop
lods
push
jmp
and
out
pop
aas
dec
pop
cmp
fmul
pop
pop
jmp
aad
cwde
push
push
push
mov
psllq
aam
hlt
gs
cmp
or
loopne
inc
sub
(bad)
pop
shr
test
(bad)
imul
mov
sub
fs
jp
xor
cld
push
sti
adc
fsubr
sbb
push
ficomp
mov
xor
inc
or
(bad)
push
icebp
stos
push
mov
jmp
cmc
sbb
jp
jno
dec
push
shl
jb
sub
push
push
pushf
es
outs
push
inc
out
nop
push
daa
lea
xchg
mov
jl
aas
pop
cld
enter
or
add
push
shr
je
fadd
and
test
cmp
push
(bad)
retf
out
xor
xchg
mov
push
pop
adc
push
xor
mov
sar
push
fmul
into
addr16
out
xor
adc
push
aas
jo
inc
rcl
sbb
lea
int3
adc
cs
call
pop
in
jae
sub
ins
pop
ss
push
push
add
call
pop
dec
mov
xchg
and
out
js
sub
push
mov
mov
das
or
sahf
repnz
xor
or
loop
cmp
test
stos
test
jo
jns
jo
mov
gs
in
inc
adc
pop
dec
test
sbb
push
cli
aaa
not
movs
jl
je
in
adc
pop
mov
sub
sti
into
fld
shr
xchg
mov
out
mov
mov
in
int3
sbb
pop
jo
add
clc
in
push
jmp
dec
xor
push
or
out
and
inc
inc
pop
clc
inc
xchg
into
jp
xchg
cs
inc
mov
(bad)
icebp
in
pop
pusha
add
mov
in
ins
push
aas
xor
in
cmp
adc
in
mov
pop
xchg
ins
xor
adc
enter
hlt
push
or
add
data16
mov
and
pop
cli
and
in
inc
push
push
ror
mov
dec
xor
ins
inc
fistp
test
push
sub
sub
xchg
test
pop
je
dec
out
in
dec
mov
daa
inc
sbb
adc
push
shl
call
and
and
push
iret
mov
mov
mov
push
push
ror
cwde
mov
std
jg
and
push
xor
mov
and
cmp
or
adc
les
jle
xor
push
and
fst
aad
and
push
add
and
mov
fisttp
mov
aas
mov
mov
(bad)
jne
sub
ins
ss
jbe
sub
xor
test
pusha
push
xor
and
fcomp
fs
fcomp
inc
pushw
les
and
sbb
or
push
xor
inc
adc
je
jnp
or
jo
mov
jnp
push
pop
mov
pop
inc
das
jmp
cs
lock
(bad)
sub
adc
jne
mov
jae
test
mov
push
pop
or
add
out
test
pop
dec
push
jno
fidiv
push
(bad)
cmp
mov
lods
ins
enter
das
movs
jge
mov
fmul
and
aad
sbb
jl
sbb
and
inc
push
push
cmc
pop
(bad)
cmp
pop
add
inc
ins
enter
jo
repnz
cmps
out
repnz
and
repnz
lods
dec
jae
push
fild
pop
mov
(bad)
loop
enter
xor
sbb
inc
pop
cli
jno
(bad)
xor
adc
rcr
pushw
sub
and
in
aam
xor
inc
std
push
and
push
fisub
pop
das
jb
xchg
leave
loop
fwait
and
loop
sub
push
jmp
adc
test
aam
retf
jl
pusha
jmp
add
ins
mov
push
push
adc
cmp
mov
scas
ss
cwde
je
cmp
pop
mov
sbb
xor
das
dec
push
xor
dec
adc
sub
sub
call
aaa
mov
fiadd
or
shr
xchg
in
ss
inc
and
ficom
jp
jl
cmc
sbb
je
and
xchg
outs
dec
pop
pusha
sub
sub
mov
push
fisub
xchg
jp
pop
fist
pop
push
mov
shr
and
xchg
ret
aad
cs
pop
mov
mov
mov
repz
movs
jl
push
jl
stos
adc
dec
and
in
jmp
mov
sbb
cmp
xor
pusha
lds
jmp
mov
cmp
sub
pop
fstp
aam
push
mov
add
adc
inc
repnz
or
pusha
dec
movups
or
fcomp
push
je
inc
xchg
mov
sbb
mov
inc
cld
mov
int3
loop
push
je
push
pslld
pushf
dec
adc
push
inc
out
dec
popa
dec
lods
sub
stos
or
push
dec
jmp
sub
sub
xor
pushf
call
and
call
scas
adc
xor
shr
cmc
push
stos
push
sbb
and
cdq
int
cmp
push
mov
stos
inc
dec
xor
dec
jmp
sbb
dec
sbb
dec
popa
xor
in
xchg
mov
cmp
data16
hlt
rcl
xor
loop
jmp
fs
add
mov
push
ret
es
mov
mov
sbb
cmp
add
dec
repnz
lea
pushf
pop
js
push
push
cmp
test
or
sub
cmps
shl
adc
fisubr
mov
sub
xchg
push
ror
aad
or
enter
jne
ds
xor
clc
jmp
dec
test
dec
xor
cmp
push
rcr
leave
out
dec
cmp
mov
ror
shl
mov
sbb
test
or
and
shr
rcr
jns
inc
cmp
in
inc
and
adc
outs
xor
xor
xor
clc
fsub
dec
shr
dec
push
xor
in
sbb
sub
and
loopne
imul
into
adc
adc
not
fstp
pop
cld
mov
lods
movs
mov
aaa
push
jne
push
xlat
cmp
push
pop
or
mov
pushf
pop
shr
sbb
or
lods
push
push
push
jmp
dec
jns
ss
or
xor
cmp
sub
int
jno
jp
mul
jo
inc
ss
jbe
sbb
loop
test
into
inc
and
cmc
rol
fcmovu
rol
sub
into
dec
xor
xor
xchg
xor
in
xor
inc
popa
dec
xor
rcl
fldlg2
xlat
ss
pop
jp
shl
mov
sbb
sub
dec
pop
cs
cld
cmp
push
psllq
es
js
sbb
push
fisub
adc
push
in
imul
jo
jg
xchg
dec
jmp
add
sbb
and
das
inc
out
xchg
jo
and
push
call
sub
xchg
and
xchg
sub
in
sub
icebp
sub
sub
fbstp
dec
sub
push
jmp
add
jnp
out
pop
ret
push
xor
mov
or
pop
xchg
cmp
shr
hlt
repnz
test
push
mov
cmp
hlt
pop
and
loop
lds
out
jl
sbb
jg
adc
std
and
sub
jmp
nop
ins
push
jge
aad
and
push
jbe
arpl
(bad)
dec
adc
push
add
inc
out
inc
mov
jb
cmp
es
cmp
lea
pop
cmp
sbb
or
aaa
sbb
mov
jo
push
push
cdq
or
pop
cmp
js
sbb
xchg
mov
cmp
add
ins
(bad)
adc
out
sub
cmps
mov
sub
adc
cmp
hlt
sbb
daa
(bad)
inc
cmp
das
mov
iret
ins
dec
cs
adc
push
adc
sbb
and
ss
aaa
mov
cmp
adc
or
xor
or
test
dec
or
pop
js
mov
and
retf
repz
sub
mov
neg
cmp
movaps
(bad)
popa
push
dec
out
push
call
repnz
stc
cmp
adc
cs
nop
lods
aaa
push
imul
adc
dec
movs
cmp
or
dec
xor
xor
push
xchg
sub
iret
lahf
je
inc
sbb
adc
xor
leave
lods
push
std
push
sbb
shr
xchg
or
push
add
(bad)
sub
pop
mov
add
(bad)
inc
and
jmp
outs
mov
push
adc
jge
and
loopne
jmp
adc
hlt
ds
mov
sbb
outs
movs
add
fcomp
pushf
mov
stc
cmp
or
sbb
dec
add
cli
push
(bad)
pop
cwde
stc
ins
loopne
(bad)
sbb
or
clc
stc
xchg
pop
pop
pop
sbb
sbb
sahf
mov
ds
es
inc
cmp
stos
sub
iret
mov
xor
pop
aaa
jae
cmp
loop
sbb
or
enter
mov
ins
repz
js
jo
mov
inc
or
inc
sub
xchg
push
cmp
shl
outs
sbb
cmp
mov
popf
push
add
(bad)
lods
mov
in
test
push
cmp
dec
pop
push
enter
idiv
xor
dec
jo
sub
jae
pop
fsub
fiadd
aad
loopne
push
xor
in
and
lock
mov
aam
push
das
mov
and
xor
dec
enter
sub
push
jmp
mov
mov
cmp
sub
pop
mov
xor
pop
jbe
add
(bad)
clc
inc
in
out
push
in
adc
fs
inc
sub
hlt
xor
sbb
inc
out
add
fnstenv
rol
cmp
or
dec
pop
or
pop
or
pop
shl
and
inc
stos
jae
add
daa
fsubr
fcomp
lods
dec
fsub
jb
in
les
jo
cld
mov
or
cmp
ins
xor
or
lods
or
dec
sub
push
cmp
push
or
sbb
fwait
cmp
call
scas
xor
outs
fsub
int
loopne
add
stos
push
loopne
dec
or
add
mov
or
sub
and
push
loopne
pop
cli
jl
fdivp
or
jl
inc
mov
add
dec
ss
jge
inc
mov
cwde
lea
lock
js
push
lds
mov
jne
cmc
push
push
pop
adc
jno
jo
sub
data16
xchg
loope
sub
push
idiv
je
jo
cmps
pushf
js
aam
icebp
add
ds
push
call
jp
cmp
inc
pop
pop
cmp
pushf
xlat
je
js
test
sub
je
pushf
sub
mov
sub
ins
sub
inc
cli
and
inc
mov
and
std
int3
push
sub
sbb
push
sbb
mov
sbb
push
into
loop
ins
ss
(bad)
retf
xlat
je
jns
dec
repnz
enter
jns
enter
push
les
jg
enter
test
ret
push
gs
xor
push
addr16
in
jne
pmullw
add
call
je
jae
push
call
mov
add
cmp
pop
jo
push
nop
adc
push
jae
sbb
(bad)
xor
icebp
ins
pop
call
push
pop
cmp
inc
pop
bound
mov
scas
je
xchg
cwde
dec
adc
imul
lods
ror
psraw
xor
out
inc
icebp
ins
cmp
cmc
sub
pop
adc
retf
or
xor
xchg
icebp
ins
sub
fdivr
cmp
loope
je
mov
and
jp
das
xor
xor
add
ins
and
xchg
mov
out
or
and
sbb
adc
xor
fild
or
iret
xor
cld
mov
lods
or
call
mov
fnstcw
add
pop
cld
mov
mov
ret
push
fsubr
std
push
stos
dec
clc
bound
mov
rcl
fs
xlat
inc
ins
in
or
in
pop
push
mov
aam
add
loopne
fmul
ret
into
jmp
cwde
aam
int3
imul
mov
aaa
not
sbb
dec
in
enter
mov
pop
adc
inc
idiv
add
or
outs
sub
mov
cmp
add
ss
pop
and
mov
es
or
push
pop
push
xor
repnz
or
jge
mov
pusha
ins
inc
imul
or
mov
mov
jmp
je
xor
jp
xor
pop
mov
mov
scas
aam
shl
je
loope
enter
or
das
or
mov
in
ins
sub
mov
mov
test
jmp
loop
test
adc
add
jo
cmp
loope
cs
push
mov
arpl
pushf
fs
inc
(bad)
xchg
xlat
dec
es
jle
mov
dec
in
inc
aas
test
data16
dec
inc
sub
lock
sbb
jmp
xor
(bad)
test
xchg
(bad)
rcr
sub
in
dec
movs
lock
or
add
mov
sbb
das
cmp
push
icebp
out
mov
inc
or
push
jnp
add
ret
ins
pop
jmp
shl
es
jle
push
daa
retf
mov
or
iret
push
pop
push
dec
cmps
dec
sub
out
fidiv
pop
xchg
fldl2t
or
mov
mov
shl
cmp
sbb
(bad)
scas
add
mov
aad
imul
test
push
push
pop
and
push
push
or
sub
mov
imul
rol
stos
mov
das
jp
mov
jbe
xchg
mov
jno
push
outs
xor
xor
mov
jp
pop
jp
jge
into
cmps
(bad)
mov
nop
push
mov
jge
in
inc
inc
adc
out
or
dec
push
pop
jp
mov
sbb
out
xor
xchg
jbe
jp
inc
adc
retf
stos
push
pop
pop
(bad)
jle
or
lahf
arpl
push
gs
dec
mov
js
test
ins
inc
fadd
jnp
jp
retf
(bad)
(bad)
mov
inc
cmp
xchg
push
jne
imul
jmp
jg
dec
jbe
call
jne
addr16
jp
pop
cmp
pop
dec
es
js
outs
dec
dec
pusha
outs
daa
xchg
mov
loopne
mov
je
dec
jecxz
out
ficomp
cwde
xchg
aam
mov
int
ja
xchg
inc
rol
lds
jne
dec
sbb
cli
or
mov
mov
jp
fs
push
lahf
loop
out
sbb
inc
cmp
jnp
push
cld
push
popf
mov
dec
loopne
ja
imul
gs
sbb
jb
add
adc
inc
dec
mov
mov
jmp
movs
test
cld
dec
imul
add
push
dec
je
jle
xchg
ins
ins
mov
call
inc
std
jge
xor
pop
sub
dec
loopne
je
fidivr
retf
jnp
dec
dec
je
xor
push
inc
ins
sub
jo
cmp
pop
hlt
dec
push
jne
pop
cmp
pop
daa
je
push
dec
cmp
dec
ja
cmp
jns
rol
xlat
nop
sbb
nop
fnstsw
or
xchg
add
xor
and
jne
(bad)
mov
clc
push
sub
adc
or
adc
call
inc
sbb
int
mov
ret
outs
jo
push
imul
adc
add
pop
or
jge
push
movs
fcomp
ds
jns
xor
pushf
adc
iret
pop
pop
ins
sbb
push
rcr
sbb
xor
sub
in
retf
popa
push
jnp
xchg
jb
push
push
(bad)
jb
ja
mov
in
daa
mov
jb
jbe
add
in
jns
cmp
adc
push
pop
push
fmul
adc
sub
(bad)
push
pop
mov
pop
push
ins
je
or
xor
fwait
das
pop
pop
jb
and
sub
cmp
js
push
fnstsw
jns
push
sub
loop
(bad)
lock
jne
sub
mov
test
nop
jmp
hlt
mov
push
pop
push
ror
xor
jmp
dec
pusha
inc
jbe
pop
adc
pop
pusha
or
adc
jne
dec
das
xor
pop
fisttp
ins
pusha
ja
in
cld
sar
inc
fidiv
push
int3
sar
pop
jecxz
sbb
popa
jmp
cmp
rcl
sbb
rcr
pop
add
pop
jne
cmp
mov
inc
jno
int3
je
add
(bad)
push
test
mov
pusha
jge
sub
pushf
sub
rol
push
fild
into
pop
in
fsubr
ins
jnp
push
push
push
div
aam
js
cmp
add
fild
adc
inc
mov
out
jbe
sbb
add
aam
hlt
jne
leave
std
mov
ins
test
pushf
push
pop
mov
inc
test
jge
xor
sbb
fnstsw
cmp
cmp
inc
jecxz
clc
cmp
cmp
aad
(bad)
imul
stc
lods
inc
pop
dec
xor
pop
aaa
fisub
xchg
aam
jge
test
aaa
in
test
loopne
je
jne
lods
push
outs
pop
push
push
dec
aaa
push
add
jno
faddp
or
fs
push
div
mov
ins
sub
add
clc
shl
js
add
test
enter
mov
xchg
or
sub
jo
mov
adc
jecxz
rcr
test
scas
sub
int3
push
push
mov
js
jge
dec
mov
sbb
hlt
movs
hlt
rol
jge
or
xor
aad
cmp
mov
pop
push
mov
push
es
(bad)
sbb
in
test
sbb
(bad)
sbb
pop
xchg
xor
inc
cmps
xlat
cld
data16
movs
aad
sub
pop
imul
dec
test
xor
loopne
int3
cmp
mov
pop
mov
js
je
in
sub
push
das
adc
cwde
jns
rcl
pop
mov
jl
push
int3
cmp
cmp
push
in
cmp
push
repnz
inc
cmp
mov
cwde
mov
sub
pop
repnz
cld
add
sub
mov
out
sub
or
pusha
cmp
cmp
fdivr
cld
mov
cwde
pushf
add
out
cmp
in
push
dec
sbb
js
mov
enter
dec
push
call
sbb
or
pop
in
xor
in
rcr
cmp
dec
je
ins
ins
sub
push
(bad)
mov
jo
jo
and
cwde
jne
mov
pop
inc
hlt
in
call
fstp
mov
sbb
pop
fcomp
mov
pop
xor
movs
add
cmc
inc
loop
mov
inc
jge
mov
pop
fisttp
clc
xor
mov
jne
arpl
jo
or
dec
jo
pop
test
mov
push
jp
inc
clc
push
pop
push
push
js
xor
pop
xchg
xor
cmp
nop
(bad)
jo
cld
mov
cmp
mov
inc
push
movs
cmp
mov
sbb
movs
cli
sbb
js
sbb
adc
mov
lods
pop
cli
adc
sbb
cmp
jo
enter
ins
xchg
xchg
dec
adc
jne
jae
xor
pop
pop
pusha
sbb
clc
adc
into
retf
fld
push
mov
adc
push
cmc
or
push
dec
cli
pop
daa
mov
dec
aaa
add
dec
xor
xor
add
mov
push
test
sbb
pusha
sub
das
push
xchg
mov
ins
dec
or
cs
or
mov
cmp
push
pop
fs
push
adc
mov
adc
jmp
adc
or
mov
add
add
mov
in
fistp
jg
push
sbb
test
fsubrp
(bad)
out
jne
inc
cmp
or
out
push
clc
mov
jle
loop
data16
mov
adc
sbb
pop
inc
sub
pop
call
cmp
ss
sub
int3
pop
sub
pop
lea
xor
add
mov
retf
sub
jmp
jno
cdq
aam
sti
fld
push
in
jb
push
daa
fiadd
inc
pop
jb
sub
outs
retf
adc
pop
mov
add
(bad)
ds
(bad)
xor
and
test
cld
add
cmp
push
pushf
xchg
popf
adc
outs
fld
mov
jmp
pusha
outs
pushf
cmp
push
mov
loope
(bad)
cmp
push
sub
in
jmp
sub
mov
jge
addr16
sub
inc
nop
sti
addr16
std
mov
fstp
jne
push
cmc
pop
fst
or
pop
jl
es
cmc
sbb
inc
imul
mov
pushf
jge
iret
mov
push
add
mov
jecxz
jbe
sub
pop
cmp
jp
adc
mov
popf
mov
xchg
in
data16
jl
sub
bound
mov
sub
lahf
jecxz
add
mov
add
mov
inc
inc
cmp
jp
sub
in
ins
std
out
cmc
stc
add
aad
dec
jb
ins
loopne
repz
pop
mov
mov
je
mov
mov
cs
adc
icebp
fdiv
movs
sub
scas
call
sub
in
outs
ja
sub
stc
stos
sbb
stos
js
sbb
sub
jnp
outs
cmp
inc
pop
inc
jne
(bad)
fisttp
fcomp
adc
inc
xlat
push
sbb
xor
xor
in
adc
movs
sub
fisubr
push
pusha
pop
lods
retf
and
push
dec
inc
mov
dec
mov
outs
call
jmp
enter
adc
inc
sbb
cmp
jl
movs
arpl
jbe
push
and
inc
fcomp
adc
jo
popa
sbb
sti
mov
inc
das
pop
test
or
fdiv
pop
cmps
sti
mov
ins
rcl
in
loopne
or
mov
pop
xor
mov
jne
dec
push
jp
sub
fdivr
jmp
cwde
sub
int
jmp
lea
mov
xchg
push
push
out
cmp
scas
mov
in
in
push
dec
adc
xor
sysexit
mov
push
add
mov
sbb
outs
mov
arpl
(bad)
push
add
jle
jae
mov
push
hlt
jae
loop
inc
and
push
scas
or
scas
mov
fdiv
fs
mov
outs
pop
scas
sub
inc
jo
push
mov
(bad)
aaa
ins
jno
adc
ins
pushf
lods
cli
pop
sbb
xor
push
inc
outs
pop
xor
mov
enter
movs
les
es
push
jmp
sahf
and
ins
outs
jb
mov
xchg
movs
cmp
jg
je
clc
push
mov
ins
push
daa
cmc
ret
stc
xchg
loop
cmp
adc
ds
inc
das
pop
mov
xor
jb
xor
addr16
imul
fs
ins
xchg
clc
stos
add
xchg
cmp
ds
mov
push
clc
add
inc
neg
mov
es
xchg
jmp
fs
sub
out
std
xchg
loop
scas
je
test
jne
aaa
shl
pushf
pop
cmp
daa
and
in
xchg
sbb
adc
pusha
xchg
fisub
xchg
or
in
pop
xchg
stc
xor
fs
xchg
pop
pop
and
arpl
cld
movs
(bad)
mov
call
xchg
pop
stc
dec
idiv
or
pop
adc
in
xchg
xor
dec
int3
dec
in
xchg
test
div
push
jb
outs
xchg
sbb
pop
pop
mov
push
int3
xchg
in
or
jbe
jno
ficom
stc
xchg
pop
mov
(bad)
lea
in
mov
imul
pop
push
xor
pop
add
mov
mov
(bad)
stc
test
jae
or
mov
ss
sub
cmp
pushf
sbb
jno
xor
push
and
cmps
push
in
hlt
jo
mov
inc
mov
pop
ins
push
call
test
jg
sub
mov
jo
jbe
jg
add
aam
pop
test
push
mov
loopne
cmps
push
rep
push
or
int
mov
call
aad
sub
in
xchg
xchg
pop
test
mov
sbb
fcmovnb
jg
push
in
rcl
out
ins
(bad)
lock
adc
adc
xchg
cld
push
cmc
jb
sbb
outs
adc
popf
in
jo
fbstp
mov
mov
lods
xor
jmp
pusha
sbb
es
popa
sub
loop
ins
cmps
pop
shl
jecxz
imul
sub
idiv
test
int3
loope
(bad)
(bad)
in
hlt
jp
in
movs
mov
fidiv
retf
sbb
int3
push
xchg
xor
sar
movs
mov
or
cmp
mov
add
inc
push
clc
cmp
les
jno
ja
je
gs
dec
lea
(bad)
nop
or
pop
cmps
subps
sbb
js
sti
popf
jge
sbb
lea
ins
pop
push
js
fistp
movs
in
xor
adc
jge
cld
cmp
push
push
(bad)
fstp
rcl
pop
test
stos
(bad)
sti
mov
xchg
push
cmp
mov
add
xlat
pop
clc
ins
(bad)
push
sbb
cs
and
and
jb
sub
add
fidiv
push
inc
mov
pushf
jmp
mov
cwde
les
pop
mov
cmps
hlt
pushf
mov
jecxz
dec
js
test
jle
mov
jno
rcr
sub
mov
dec
std
loop
fs
cmp
lea
aaa
xchg
fwait
adc
out
lahf
mov
cmp
(bad)
les
(bad)
pop
push
cmp
loope
pusha
fisubr
mov
pop
jo
pusha
jmp
inc
jo
mov
stc
out
or
pop
not
clc
js
xchg
test
pop
jmp
dec
push
push
sub
daa
cld
adc
imul
aad
shr
mov
mov
clc
jno
mov
loop
loopne
pop
dec
xor
aaa
or
sub
inc
push
mov
push
mov
fs
sti
rcr
std
add
or
addr16
call
lea
inc
dec
test
sub
std
stc
lock
lock
push
mov
aam
sub
and
jmp
cld
popa
ins
mov
dec
mov
pop
jnp
cld
or
fsub
inc
test
clc
jnp
add
push
clc
repnz
lock
call
call
sub
and
call
int
xchg
mov
retf
jno
stc
and
mov
xchg
mov
mov
jmp
mov
enter
fsub
ins
and
pop
enter
sub
sub
mov
loope
pusha
fisttp
pop
cwde
jne
xchg
sub
movs
movs
inc
(bad)
fisttp
pop
icebp
mov
(bad)
or
fadd
pop
leave
mov
mov
push
dec
jns
out
(bad)
jnp
xchg
je
pop
clc
push
push
push
(bad)
test
fwait
pushf
dec
and
mov
push
cld
not
add
outs
pusha
jns
arpl
(bad)
ins
and
test
fs
fcmovb
sub
popa
and
cdq
sub
adc
lds
fadd
icebp
sub
in
std
fst
xor
lds
repz
ret
lds
push
push
enter
sub
inc
jae
test
xor
push
jg
stos
cmp
bound
or
xor
jne
and
jp
and
push
cmp
leave
cmp
aaa
jmp
ficomp
test
pop
mov
icebp
inc
sub
jmp
cmp
dec
sub
arpl
xor
and
dec
mov
icebp
ror
xor
mov
fwait
and
and
mov
pop
cli
xchg
stc
test
mov
mov
vaddpd
push
aad
out
lock
stos
pop
ja
(bad)
cld
popf
in
sub
(bad)
mov
cmp
xor
mov
push
adc
mov
out
shl
pop
pusha
outs
icebp
lahf
imul
push
out
loopne
shr
jge
mov
movs
lock
adc
shl
cli
(bad)
pop
add
cwde
fsubr
imul
aaa
cmp
dec
pop
cdq
dec
fsubr
xchg
lock
cmp
jecxz
aam
push
xor
clc
daa
pushf
cli
dec
(bad)
xor
inc
fmul
xchg
bound
xor
imul
pop
je
mov
mov
push
and
mov
repz
push
fldenv
pop
mov
mov
out
(bad)
call
jmp
(bad)
sbb
in
ins
jnp
push
mov
dec
sub
lock
cmp
fcomp
imul
stos
push
adc
cli
rcr
dec
sub
xchg
xchg
cmp
pop
(bad)
imul
add
lock
ins
cmp
and
jnp
pop
outs
pop
or
stos
push
jle
popa
(bad)
push
sbb
xchg
(bad)
daa
js
sbb
and
stos
mov
mov
aad
pushf
inc
jecxz
cmp
mov
push
mov
sub
mov
pushf
lock
jns
cmps
cwde
mov
cmp
mov
int
push
lahf
sub
push
sti
lds
call
pop
shr
push
call
mov
ins
mov
in
sbb
fild
jmp
fsub
ins
scas
arpl
sub
dec
das
and
push
jae
retf
and
or
pusha
pop
mov
push
outs
mov
clc
inc
mov
das
loope
and
ja
pop
jmp
shl
pop
mov
adc
cmp
jmp
hlt
mov
pop
push
scas
cli
aam
les
mov
sti
pop
(bad)
pop
clc
cmp
jnp
out
add
enter
out
cld
ins
xchg
cld
popf
push
dec
in
xor
mov
add
push
shl
dec
dec
jb
int3
ss
add
scas
in
add
scas
loopne
xor
ins
xlat
imul
in
popf
loopne
mov
je
lock
fsubr
mov
movs
fxch
aad
int3
je
and
js
movs
loope
retf
adc
mov
add
arpl
adc
jne
xchg
(bad)
xlat
add
push
xor
jmp
xor
pop
add
stos
push
push
jp
xchg
sub
retf
xchg
ins
cmp
jle
sti
mov
mov
fwait
mov
aaa
add
sub
sub
xchg
inc
jecxz
inc
fwait
enter
pop
xchg
icebp
inc
fwait
cwde
sub
fwait
pop
sub
icebp
dec
xor
test
fwait
jns
mov
mov
sbb
add
jne
xchg
jae
and
push
push
xor
cmp
xor
bound
mov
adc
in
xchg
test
cdq
test
sbb
adc
test
cmp
(bad)
aaa
add
push
xor
ficomp
enter
rcl
in
cmp
daa
fild
inc
je
pop
dec
sub
push
jmp
imul
cmp
pop
xor
sbb
sub
pusha
mov
inc
mov
push
cli
xchg
pop
mov
popa
not
inc
adc
sbb
jae
lock
mov
lock
in
cmp
aam
pop
ins
inc
sahf
pop
aad
jb
pop
shr
pop
bound
mov
pop
aad
xchg
push
in
jb
xor
mov
aaa
pop
clc
xchg
aas
xchg
cli
rcr
and
cwde
in
(bad)
cdq
mov
add
adc
int3
sub
jns
cmp
rcr
or
test
jbe
stc
add
xor
in
dec
clc
js
xchg
and
mov
or
push
lock
xchg
daa
cmp
push
std
pop
call
lock
mov
xchg
and
fs
loope
sbb
jne
jb
fdivr
in
sbb
bswap
jo
mov
dec
jmp
mov
ins
xchg
pop
popf
mov
pop
fisttp
imul
cmp
sub
test
or
int
mov
mov
(bad)
je
les
rcl
out
ins
jmp
inc
push
or
lock
xchg
mov
and
jg
pop
or
fbstp
inc
add
jge
xchg
sbb
pop
xchg
and
inc
add
jp
pusha
adc
je
cwde
fnstsw
xchg
mov
sbb
cmp
or
fsubr
cmp
cmc
ror
arpl
hlt
enter
cld
je
mov
in
xor
fsubr
inc
push
xchg
sub
cmc
aad
clc
push
pop
add
hlt
pop
and
fs
pop
jmp
in
hlt
call
push
jbe
loop
loop
xor
fcomp
inc
in
pop
xchg
pop
or
push
je
loop
add
xchg
(bad)
sbb
xchg
and
and
adc
push
fidiv
test
add
fsub
inc
adc
pop
mov
hlt
xchg
jp
cli
mov
fldenv
imul
cmp
dec
nop
fcomp
aad
(bad)
in
fucomi
test
jp
je
fs
jb
push
sub
or
inc
inc
mov
icebp
(bad)
add
inc
and
daa
cmpxchg
call
adc
aaa
xor
dec
mov
pop
push
mov
mov
push
stc
aad
je
cmp
mov
mov
and
dec
jne
mov
pop
cmp
push
fcmove
adc
sbb
xor
imul
jno
or
pop
inc
mov
jnp
xor
rcl
call
add
imul
xchg
cs
add
stos
push
(bad)
(bad)
add
cmp
jp
js
inc
mov
jb
jae
icebp
adc
rol
push
popa
fcmovnb
ss
or
aaa
push
add
aam
cmp
xor
sbb
and
stos
sahf
pop
push
add
adc
ins
push
sahf
pop
fchs
lea
jnp
enter
push
xchg
fs
fcom
sahf
not
xor
mov
into
sub
dec
je
sbb
sub
pop
mov
(bad)
in
fs
mov
rcl
adc
imul
cmp
dec
(bad)
xchg
dec
jecxz
bound
mov
or
shr
addr16
or
gs
in
add
enter
fistp
jle
and
and
cwde
(bad)
into
xor
retf
sub
outs
popa
jo
(bad)
not
sbb
hlt
mov
sbb
and
pop
pop
cmc
pop
jo
xchg
push
mov
inc
aad
jge
pop
jne
es
test
daa
imul
add
add
and
xor
or
xor
(bad)
inc
cmp
xor
xchg
xor
int
ret
and
adc
inc
xor
xchg
nop
cmps
cmp
xor
xchg
inc
mov
mov
adc
push
push
pop
scas
and
loope
jp
mov
popf
fild
pop
pop
mov
inc
xchg
nop
ins
pop
lds
mov
dec
adc
dec
adc
ins
loop
enter
cmp
pop
and
inc
daa
sti
jb
aam
mov
sub
icebp
fnstsw
into
stos
push
cli
sub
sub
pop
xchg
push
stc
hlt
cmp
mov
ins
movs
test
inc
push
sti
and
cmp
adc
jge
sbb
push
xchg
pop
xor
jbe
and
cdq
lods
mov
dec
inc
in
mov
pushf
bts
pop
out
push
pop
ins
mov
xor
mov
cmp
idiv
popa
ja
lea
cmp
pop
loope
mov
cmp
repnz
test
loopne
in
in
fnsave
push
xor
jb
adc
stc
xchg
cmp
inc
or
loop
retf
pop
xchg
cmp
add
popa
mov
cmp
sbb
lock
call
cwde
ins
push
sub
cwde
retw
dec
sti
fwait
cmc
add
hlt
(bad)
jge
xchg
jmp
fucom
xchg
or
cmp
pop
cmp
mov
mov
mov
adc
mov
lods
retf
in
sbb
pop
clc
and
add
rcl
mov
mov
dec
sub
push
pop
pop
fidivr
daa
ins
test
add
stc
(bad)
ret
push
mov
sti
pusha
in
or
xchg
mov
mov
retf
and
shl
xchg
loopne
jnp
arpl
inc
fld
pushf
call
clc
in
add
ja
mov
je
inc
popf
jo
pop
mov
es
or
ins
fld
loope
push
jp
xchg
pop
popa
clc
out
jp
jecxz
mov
and
push
pop
xlat
(bad)
rcr
mov
pop
and
and
(bad)
outs
mov
sbb
test
adc
in
mov
repz
sbb
inc
loopne
test
movs
in
xchg
sub
movs
mul
outs
inc
mov
enter
lea
inc
nop
pop
das
add
call
mov
mov
pop
out
ds
stos
inc
in
cld
mov
push
or
cdq
out
and
pushf
dec
adc
mov
sub
mov
jnp
les
jmp
popf
fldenv
sar
sti
dec
pop
hlt
xor
mov
and
xor
inc
gs
jo
idiv
je
test
movs
sbb
dec
fcomp
add
or
xchg
sbb
jb
add
loopne
pop
aam
repz
sub
xor
sbb
sbb
mov
cmp
lock
rcr
pop
adc
repz
les
bound
dec
mov
add
sar
fnstenv
movs
shr
call
hlt
jl
xchg
shl
stos
(bad)
int3
cmp
xor
icebp
sub
and
push
dec
jno
rcr
cmc
and
(bad)
fcom
mov
inc
out
push
je
sub
sti
cmp
or
push
fld
inc
inc
jecxz
int
aam
in
mov
sub
mov
jno
imul
xor
std
out
jns
(bad)
push
mov
mov
mov
push
push
push
and
aad
loop
mov
push
jbe
pushf
dec
pop
test
daa
cmp
sub
or
mov
push
je
sbb
mov
clc
inc
jmp
dec
mov
sahf
fdiv
jmp
shr
pop
push
lea
enter
jmp
cmc
ja
js
sahf
repnz
pop
mov
mov
enter
sub
stos
loopne
dec
cmp
mov
inc
cmp
xor
adc
push
push
fwait
pop
mov
retf
shr
mov
pop
mov
add
push
mov
sub
icebp
sub
inc
shl
xor
ss
int3
in
loopne
ror
inc
fsqrt
xchg
ret
cmp
dec
fxch
or
jge
sub
ds
pop
pop
jnp
int
sti
jmp
jo
xchg
jno
xor
mov
push
les
or
addr16
cmp
fldcw
xchg
mov
popa
inc
repnz
aad
cmp
sbb
inc
inc
cmc
(bad)
in
mov
lds
and
add
sub
and
cs
cmp
je
or
jo
xchg
es
iret
jmp
test
jnp
in
cs
mov
es
cwde
mov
mov
sbb
mov
mov
xchg
dec
and
rcr
xor
and
mov
sub
je
xchg
sahf
lds
pop
dec
xor
ss
cmp
sub
and
les
dec
xchg
pop
xor
aaa
retf
inc
loop
sub
pop
push
dec
xor
nop
and
gs
push
outs
retf
out
push
addr16
stos
in
xor
xchg
pop
ins
clc
out
popa
stos
les
stc
in
jbe
push
xchg
adc
push
in
xlat
jne
adc
sub
pop
and
inc
test
pop
push
jne
loop
push
mov
mov
ficomp
outs
inc
mov
pop
jb
mov
adc
mov
add
mov
ss
xchg
sbb
push
cs
dec
fist
clc
dec
mov
fs
repz
xlat
dec
gs
xor
call
jmp
mov
fisttp
(bad)
jmp
sar
outs
mov
and
js
push
(bad)
clc
call
add
pushf
aaa
cli
jae
leave
mov
cmc
cmps
aaa
popa
imul
das
test
mov
cli
or
xor
sbb
push
popa
aad
test
push
mov
popa
hlt
popa
xlat
jno
dec
jecxz
fild
out
pop
es
jne
(bad)
cmp
les
popa
cs
int
cli
in
sub
in
es
pop
movs
xor
and
dec
pop
mov
mov
pop
sbb
fs
hlt
jp
mov
fiadd
push
fist
fstp
sub
mov
mov
xor
sub
mulps
add
xor
dec
push
mov
test
and
jmp
dec
leave
sub
mov
push
je
fidiv
fs
push
loope
sbb
xchg
movs
dec
mov
retf
das
mov
ins
pop
sub
clc
(bad)
xchg
mov
jb
ins
shl
cmp
pop
lock
mov
xor
mov
or
mov
int3
dec
jae
adc
xor
mov
cmc
and
std
aam
fdivr
je
ins
in
call
cmps
jecxz
cmp
pop
sub
cmp
arpl
cmp
push
sub
enter
xor
std
pusha
xor
or
pusha
mov
mov
mov
sub
jmp
and
xchg
sbb
not
or
jne
cmps
pop
cmp
lods
jecxz
fsub
pop
bound
sbb
fisub
add
retf
cmps
or
adc
repz
or
inc
xor
dec
add
and
icebp
hlt
fsubr
repnz
push
sub
jne
add
fsub
popa
fcom
in
push
pop
push
mov
push
jp
test
outs
pop
fdivr
adc
add
inc
test
mov
imul
jb
addr16
push
adc
pop
lods
or
fs
mov
loopne
cmps
push
das
pop
retf
shr
pop
jae
pop
gs
pop
scas
mov
daa
mov
and
ins
lock
jb
sub
repz
sbb
std
mov
jne
data16
add
cmp
in
add
jmp
xchg
gs
dec
sub
cdq
pop
leave
xchg
xlat
test
mov
int3
cwde
rol
aaa
pop
in
xor
call
sbb
cdq
rcl
push
hlt
and
pusha
lahf
adc
stc
xor
imul
pop
inc
ss
ins
cmc
cmp
xchg
nop
popf
aaa
repz
dec
adc
sbb
(bad)
dec
lds
test
popa
loopne
jbe
xchg
add
fst
pop
in
push
in
xchg
xor
jle
mov
sub
inc
cmc
and
cmps
mov
adc
jmp
imul
clc
mov
pop
mov
shl
and
fwait
xchg
cmp
pop
outs
inc
mov
call
mov
push
jmp
push
and
fadd
(bad)
js
lock
cmp
adc
lahf
stc
retf
and
out
mov
fs
dec
fsubr
fild
lods
mov
ja
sub
stc
xchg
aad
push
loopne
sub
sub
jmp
jmp
xor
jo
sub
inc
mov
jbe
cmp
push
mov
pusha
xchg
inc
call
mov
mov
fbld
aam
repnz
jl
mov
call
add
pusha
stc
pop
sahf
push
fwait
ins
mov
js
loope
push
xchg
add
ins
test
fidiv
fcomp
hlt
ret
aad
sti
fst
int
neg
sub
push
mov
ins
bnd
xlat
pop
mov
popa
popf
adc
jmp
int3
xchg
test
pop
jo
xchg
jae
push
jo
pop
aam
inc
push
test
cmps
(bad)
addr16
sbb
adc
(bad)
cmp
and
mov
jmp
mov
stc
xor
cmp
xchg
ret
out
mov
in
dec
retf
mov
jne
sub
in
je
cmp
push
out
xor
mov
xchg
rcr
stc
or
aam
mov
movs
cmp
fisub
jge
xor
sub
int3
jp
cld
sahf
cmp
mov
lods
les
fcmovb
jle
call
retf
dec
mov
retf
movs
xor
xchg
and
mov
aas
popa
test
daa
cmps
ja
loop
xchg
shl
std
sub
rcl
loopne
das
dec
sahf
jne
or
pusha
adc
shr
test
sub
push
pushf
cwde
sub
inc
out
inc
hlt
sub
jno
test
pop
fs
les
jno
daa
sti
lods
xchg
addr16
fisub
xchg
cli
loopne
ja
add
test
pop
call
retf
ins
fnsave
pusha
mov
cmp
movs
cld
mov
out
mov
mov
dec
mov
out
neg
mov
repnz
lock
loope
retf
adc
and
repnz
aad
jnp
neg
stos
sub
xor
arpl
push
xor
stc
test
sub
je
lock
out
loopne
in
fstp
call
sbb
gs
lock
daa
and
mov
dec
inc
mov
mov
cs
xchg
xor
pop
adc
pop
mov
lock
in
adc
push
ret
test
daa
sbb
imul
sbb
cmp
inc
mov
sub
imul
sub
adc
xlat
test
(bad)
retf
ja
or
cwde
in
add
nop
dec
jmp
test
xor
push
movs
sub
in
jne
popa
enter
cmps
adc
sub
data16
js
xchg
jae
and
or
ins
xchg
mov
loopne
sar
jae
popa
sbb
dec
stc
out
(bad)
jge
or
dec
push
movs
test
push
ret
push
sub
sub
test
mov
xor
rol
aad
push
mov
add
lods
sbb
mov
adc
nop
xchg
je
clc
push
xor
pop
and
xchg
(bad)
jns
clc
cmc
ror
clc
repnz
mov
sbb
stos
fist
enter
jb
pop
daa
ins
or
aam
stc
mov
vminss
outs
jns
adc
mov
push
(bad)
cs
adc
cmp
push
mov
add
fld1
scas
sbb
repz
cmps
icebp
mov
sbb
dec
mov
retf
pushf
sub
mov
xor
mov
cs
pushf
jmp
clc
add
inc
and
push
stc
jno
sub
nop
pop
or
call
loope
sub
inc
int3
dec
xchg
hlt
dec
cs
in
fcmovb
dec
push
cmp
inc
push
icebp
mov
inc
inc
push
adc
sbb
loop
stc
inc
jmp
pushf
or
ret
xor
cmp
jl
jecxz
pop
jge
mov
dec
cmps
xchg
mov
mov
stos
bound
clc
cmp
sar
jle
inc
mov
pop
adc
or
std
xchg
mov
jle
push
retf
lock
ret
pop
mov
pop
sti
sbb
dec
xchg
adc
or
pop
sub
out
xchg
ins
lods
add
jbe
dec
mov
jb
xchg
retf
sub
clc
and
jle
dec
mov
rcr
icebp
jb
shl
pop
dec
lahf
mov
dec
cmp
fisub
lock
lahf
ds
push
icebp
jb
adc
iret
pop
ret
rcr
neg
pop
cmp
mov
jp
mov
push
out
sub
daa
in
dec
mov
retf
mov
or
pop
popf
jb
adc
ins
mov
aam
lods
push
xor
iret
mov
call
imul
int
mov
clc
pusha
jno
in
cmp
sub
mov
ret
cmp
jge
jge
pop
push
push
aas
loopne
adc
push
xor
test
cmp
stos
js
and
sub
inc
push
xor
xor
popf
cmp
lods
pusha
sub
push
xchg
mov
popa
test
push
xchg
call
jb
ret
cmc
imul
mov
xchg
ret
dec
arpl
jns
out
add
repz
sbb
pop
dec
adc
imul
js
je
jns
aaa
shl
out
dec
cmp
pop
jo
jne
inc
adc
sub
lock
test
leave
sti
leave
or
(bad)
push
in
gs
and
loopne
test
cld
add
shl
loope
ror
jns
enter
pushf
cmp
nop
pop
xor
xchg
xchg
call
push
xlat
movs
ins
aaa
ins
fs
int
repnz
cmp
fcom
mov
mov
inc
xor
test
mov
jmp
(bad)
mov
add
aaa
push
xchg
ret
xor
std
xchg
ds
pop
mov
sub
push
dec
fiadd
mov
push
(bad)
xchg
add
pop
pop
adc
add
scas
and
sahf
push
hlt
mov
movs
div
sbb
nop
pusha
jb
inc
pop
sbb
adc
jg
xor
pop
add
test
in
lods
adc
cli
xchg
retf
pop
scas
push
div
in
xchg
mov
jns
out
dec
hlt
retf
mov
pcmpgtw
xchg
push
hlt
cmp
stos
jp
aad
addr16
and
loopne
jne
popa
xchg
mov
pop
sbb
mov
arpl
outs
xchg
call
cmps
adc
and
dec
pop
mov
hlt
mov
cmps
mov
pop
lods
hlt
call
callw
je
cmp
cmc
ds
ror
arpl
and
ja
dec
bound
dec
fisub
inc
mov
cmp
retf
fadd
and
sahf
sbb
cmp
rcr
shl
xchg
xchg
push
in
push
pusha
hlt
push
fsub
pop
dec
retf
mov
(bad)
pop
cmp
xchg
pop
push
xchg
pop
popf
jl
xor
aam
out
lea
mov
or
mov
mov
pushf
movs
loope
or
fcom
icebp
mov
jecxz
retf
xchg
xchg
xchg
movs
jns
pop
inc
sub
and
mov
mov
shr
jo
test
pop
inc
push
xchg
movs
push
add
inc
push
cmp
shr
into
shl
sahf
push
mov
pusha
adc
mov
loope
pusha
pop
ins
push
mov
sbb
xor
cwde
pop
pushf
sub
mov
xor
fsub
(bad)
sub
and
loopne
ds
pop
xor
ss
fs
xchg
adc
imul
pop
inc
cmp
push
sub
fisub
ds
into
pusha
lods
and
pop
pop
lods
xor
scas
cmp
sti
call
add
outs
mov
stos
inc
sbb
jnp
inc
sub
pop
jmp
sub
imul
dec
(bad)
adc
mov
mov
push
aam
push
les
lds
push
aaa
dec
loopne
pop
jnp
pop
das
sub
adc
sub
mov
and
pop
pop
jns
cmp
xor
ins
xor
pop
pop
and
(bad)
movs
std
imul
clc
retf
mov
stc
out
adc
repnz
stos
jnp
imul
add
mov
push
pop
cli
loop
jecxz
in
pop
pop
imul
jne
hlt
leave
stc
movs
lods
out
inc
not
inc
mov
sub
jo
add
pop
call
mov
inc
and
in
lahf
pop
mov
xor
into
and
fisubr
sbb
hlt
movs
xchg
ret
xor
outs
push
das
push
shl
mov
mov
in
and
jae
adc
xchg
jmp
out
add
test
cmp
movs
pop
push
sub
inc
loopne
idiv
xchg
imul
ins
and
in
call
sbb
inc
sahf
pop
sbb
mov
add
not
fidiv
lds
out
pop
mov
cmp
add
in
pusha
in
push
call
inc
mov
aaa
clc
push
adc
push
add
dec
cmc
gs
sub
inc
pop
sbb
add
hlt
stc
inc
xlat
mov
push
imul
arpl
add
pushf
xor
je
add
repnz
push
test
jns
ins
gs
dec
inc
push
pop
adc
mov
neg
ret
in
mov
adc
pop
push
shl
call
add
or
hlt
daa
out
cmps
shr
out
ins
push
sahf
push
inc
cs
push
cmps
pop
repnz
out
lea
pusha
push
xchg
jns
jmp
popa
fldenv
lea
popa
out
ins
pop
sahf
push
mov
dec
out
mov
xchg
ds
pop
xor
xchg
arpl
hlt
pop
(bad)
ins
int3
xchg
and
or
cmp
out
ins
dec
mov
jbe
arpl
cli
stos
lods
icebp
les
jmp
sub
imul
or
jge
xor
sbb
ds
pusha
shl
js
jmp
dec
shr
mov
jle
pop
stc
test
stc
test
fs
sti
xchg
fldenv
cli
dec
pop
dec
add
into
je
cmp
in
cld
ret
(bad)
ins
pushf
popa
adc
in
dec
les
test
js
jecxz
dec
mov
and
int
sbb
xor
sahf
push
(bad)
iret
sub
aam
pop
loop
(bad)
cmp
xchg
pop
jo
aaa
sti
rcl
inc
push
jnp
xchg
gs
clc
push
cli
loope
pusha
addr16
int3
dec
retf
mov
mov
rol
retf
enter
pop
js
ss
mov
and
repz
hlt
and
pop
cmps
inc
scas
(bad)
popf
adc
inc
out
cmp
mov
inc
(bad)
bound
mov
loope
jge
xchg
cdq
scas
pop
mov
hlt
test
fdivr
jns
cmc
cli
sbb
shl
lock
dec
cld
and
imul
je
xor
push
pop
pop
imul
fs
in
ds
aaa
inc
mov
cmc
outs
je
lock
jbe
cmp
jae
cmp
inc
imul
in
fidivr
data16
dec
inc
cmp
jo
cmp
mov
aaa
cmps
cdq
(bad)
xchg
xor
push
sar
iret
jmp
xor
push
dec
retf
iret
lea
adc
and
sub
out
sbb
cmp
xor
mov
out
aam
out
lea
sub
test
out
and
outs
push
mov
lods
rcl
push
scas
mul
lds
pop
mov
inc
mov
jle
es
(bad)
fs
xor
and
out
aaa
pusha
aam
(bad)
addr16
jnp
gs
sbb
retf
xor
jne
ret
pop
pop
ins
push
pop
sbb
xchg
xchg
repz
enter
std
jp
pop
xchg
mov
in
fisttp
mov
jae
sbb
push
xor
movs
test
xchg
out
cmp
rol
mov
icebp
iret
sub
(bad)
sub
or
mov
icebp
cmp
out
das
test
dec
iret
sub
mul
mov
repz
inc
jb
add
and
add
sbb
cwde
out
ins
call
imul
mov
imul
out
xor
scas
les
mov
ret
cs
sbb
arpl
shl
pop
dec
push
inc
sub
and
dec
sbb
aad
es
mov
ins
daa
das
cmp
cmp
sub
and
mov
aam
pop
dec
sbb
rol
pop
out
fs
ss
xor
pop
sub
mov
pushf
xor
call
pop
repnz
mov
js
pop
mov
xlat
aam
aaa
repz
and
jle
daa
mov
xchg
stc
iret
mov
aam
and
xor
ins
jp
xchg
movs
add
mov
and
(bad)
call
sar
jo
jns
cdq
movs
pop
fcomi
mov
pop
pop
dec
pop
and
jno
adc
imul
add
ret
push
push
rcr
jp
xchg
mov
imul
add
xchg
cmp
movs
and
mov
xlat
arpl
adc
je
jmp
sbb
rol
push
loop
sub
adc
cli
idiv
mov
sbb
and
sbb
xchg
inc
in
pop
cmp
add
mov
push
push
movs
and
call
pop
cmc
sbb
lea
cvtps2pi
push
ins
adc
dec
daa
xchg
push
pop
gs
push
js
int3
mov
stc
clc
xor
inc
push
fsubr
sub
lods
or
stos
std
in
(bad)
pop
je
iret
in
ins
fmul
or
mov
in
test
push
cs
or
movs
cmps
scas
aam
fsubr
adc
sti
mov
pusha
xchg
test
idiv
adc
xor
pop
mov
or
lods
(bad)
push
fcomp
cmp
xlat
push
test
sub
sub
mov
mov
xchg
out
mov
jmp
in
in
out
stos
cmc
inc
popf
jmp
cmp
pop
pop
cmc
dec
xor
lahf
test
mov
js
xchg
leave
mov
cmp
ds
mov
sbb
jae
iret
or
clc
pop
sar
pushf
enter
or
add
into
jmp
cmc
cmp
jp
(bad)
retf
retf
and
jnp
xchg
lods
mov
fwait
(bad)
aas
adc
scas
retf
adc
mov
out
outs
setbe
or
pop
outs
push
sub
xchg
sub
scas
sub
xlat
test
lea
sti
pop
mov
or
pop
xchg
dec
jmp
ror
std
sbb
(bad)
pop
pop
pop
std
iret
data16
test
cdq
es
aam
scas
outs
xchg
jb
push
std
or
and
(bad)
push
inc
les
pop
dec
int
std
test
popf
movs
js
outs
push
stos
gs
std
inc
(bad)
fiadd
adc
push
pop
mov
sti
movs
mov
out
pushf
pop
jo
daa
pop
xchg
popa
sti
or
push
pop
std
movs
iret
jmp
arpl
ret
pop
mov
cmps
cdq
arpl
ret
sub
cwde
int3
outs
cmp
pop
push
add
movs
bound
mov
inc
pop
aam
adc
push
mov
mov
clc
push
xchg
popa
jecxz
retf
push
push
es
vdivpd
(bad)
pop
pop
arpl
sti
sbb
cmp
add
jle
mov
dec
ins
pop
xlat
pop
hlt
add
fcom
xor
sbb
hlt
add
fs
xchg
push
pop
add
test
(bad)
dec
retf
je
repnz
rol
xchg
ds
call
cmps
int3
sub
jp
sbb
push
ins
(bad)
xor
mov
push
ss
les
dec
pop
pushf
jno
xchg
loopne
mov
xor
jmp
call
add
test
inc
cld
cmp
loopne
pop
imul
inc
popf
je
xor
bnd
cmp
xchg
aam
push
out
sub
push
sti
das
arpl
fdivr
mov
arpl
pop
clc
xor
pop
int
xor
int3
or
mov
and
jo
not
mov
stos
pop
cld
test
cmp
mov
adc
cmp
int3
dec
dec
leave
test
outs
daa
std
pop
iret
jae
xor
idiv
in
sbb
test
or
jae
loopne
push
inc
loop
pop
push
push
mov
mov
xor
hlt
stc
in
adc
retf
addr16
cmps
jae
jecxz
das
retf
outs
dec
cmp
pop
or
loope
pop
dec
shr
sub
add
je
mov
popf
sbb
rcl
pop
xor
push
xlat
fcomp
cmp
mov
push
push
pop
push
adc
cmp
pop
bound
pop
or
mov
lods
pusha
jecxz
and
and
mov
test
pop
icebp
sbb
dec
jne
aas
pop
dec
dec
popf
jmp
xor
lock
out
mov
lea
in
int3
stos
test
xchg
idiv
xor
adc
ret
sbb
mov
cmps
xchg
aaa
and
loopne
in
lods
mov
sub
cmp
call
lock
add
into
sub
push
mov
cmp
push
sub
or
aaa
cmc
cmp
pop
hlt
movs
xchg
mov
xor
jmp
mov
push
mov
call
hlt
inc
out
add
mov
hlt
mul
jns
or
dec
scas
mov
rol
aaa
stc
clc
outs
mov
out
sub
mov
pop
test
add
dec
pop
rcl
jne
prefetchnta
jb
mov
mov
je
jle
cmp
mov
and
mov
fild
cmp
repnz
cwde
or
jne
sti
arpl
push
pop
sbb
mov
lds
pop
and
or
pop
push
lahf
mov
mov
ins
popf
add
bound
aad
loopne
xchg
ins
jo
(bad)
in
fsub
jle
cld
jnp
and
loope
mov
test
xchg
pop
into
xchg
push
dec
das
mov
mov
add
in
or
add
mov
xchg
fbld
jmp
in
fcomp
(bad)
adc
fcomip
lea
je
cmc
pop
sub
out
lea
xchg
jge
addr16
xor
cmp
fstp
repz
push
aas
int3
stos
lock
fstp
xor
xchg
add
jmp
clc
ret
jae
xchg
lahf
rcl
(bad)
jmp
imul
pop
call
inc
sub
cmps
xchg
sbb
cmp
movs
ins
add
jno
ficom
push
(bad)
jg
ds
das
inc
xchg
jmp
mov
mov
ds
loope
(bad)
clc
daa
fcomi
out
js
cwde
jp
mov
push
lock
ins
int3
xchg
dec
pop
in
sub
repz
push
sbb
pop
add
and
popa
sub
inc
xor
sub
xchg
mov
in
cmps
cmp
pusha
movs
hlt
popa
call
pop
push
(bad)
in
mov
mov
dec
dec
xchg
mov
jmp
add
hlt
aaa
xlat
hlt
xchg
lods
rcr
adc
ss
mov
pmullw
push
loopne
js
mov
cdq
sbb
nop
sub
mov
fistp
pop
xchg
add
ins
push
in
repz
shr
movs
sar
fwait
cld
popf
mov
ror
mov
fs
jl
rcl
push
dec
icebp
cmp
xchg
hlt
movs
xchg
aaa
sub
xchg
fst
out
rcr
dec
xchg
jae
jae
pusha
dec
out
mov
inc
mov
cmp
jnp
cmp
cwde
js
adc
sub
mov
test
push
hlt
arpl
gs
int
jne
mov
mov
clc
es
dec
(bad)
push
jns
adc
outs
jg
inc
push
je
scas
sti
popf
ss
dec
pop
iret
fidivr
jo
sbb
jbe
pop
push
dec
sub
xor
inc
(bad)
sti
mov
div
int3
xchg
lods
enter
out
test
popa
call
pop
int
out
cmp
addr16
push
leave
out
jmp
sahf
pop
sbb
xchg
and
cmp
mov
mov
sbb
cmc
psubusw
nop
pop
pop
retf
shr
outs
xor
outs
mov
mov
mov
out
(bad)
ins
int3
xchg
push
nop
or
cmp
std
les
pop
out
jg
and
aaa
clc
js
mov
leave
mov
lea
and
cmc
scas
mov
xor
pop
(bad)
mov
mov
xchg
jge
addr16
sub
lea
xchg
cmps
fistp
ds
(bad)
lea
mov
adc
sub
jecxz
call
in
out
add
loopne
push
addr16
xor
inc
in
push
dec
fcomp
jg
pushf
add
jns
jno
jo
aad
ret
movs
add
dec
xor
add
(bad)
cdq
sub
daa
xor
add
sti
xchg
loopne
pop
cmp
out
ret
out
ins
mov
cmps
fs
clc
jle
out
call
sub
aaa
shl
add
xchg
loop
jb
pop
scas
in
lahf
push
int3
test
repnz
shr
push
adc
jb
mov
pop
mov
xchg
mov
and
pop
ins
push
jnp
mov
in
pusha
(bad)
in
inc
sahf
pop
push
xchg
js
sub
out
ins
mov
in
out
test
lea
sub
mov
push
lods
jb
test
pop
mov
ds
into
cmp
mov
mov
pop
int
(bad)
in
push
sahf
pop
sbb
xor
mov
test
sub
imul
jmp
(bad)
es
lea
pop
pop
shl
push
(bad)
pop
jbe
imul
jb
push
out
pop
mov
and
push
ficomp
mov
sti
push
mov
out
pop
sbb
repz
pop
hlt
mov
cmp
shr
pusha
jmp
sahf
pop
sbb
arpl
shr
loopne
inc
div
xchg
imul
push
mov
mov
pop
adc
and
add
fdivr
dec
out
in
mov
adc
or
inc
in
arpl
call
pop
mov
add
xchg
pop
jne
arpl
out
mov
pushf
pop
cmps
pop
pushf
in
cmc
mov
pop
jo
scas
jne
je
pusha
sub
call
out
lea
arpl
les
or
sti
xchg
enter
dec
pop
mov
or
clc
cmps
(bad)
pop
dec
lea
adc
push
out
ficomp
scas
out
mov
mov
pop
dec
out
mov
push
leave
push
clc
aaa
scas
hlt
pop
add
cs
icebp
cmp
out
xor
add
stc
xchg
pop
or
lods
out
ins
enter
addr16
ret
icebp
lods
aam
mov
(bad)
ins
pushf
sub
cmc
lods
pop
dec
in
movs
fisttp
addr16
arpl
hlt
nop
(bad)
ins
enter
pop
call
inc
jb
and
pop
cwde
xchg
pop
hlt
mov
icebp
cwde
fsubr
stos
add
cmp
xchg
jp
pop
mov
xchg
inc
adc
out
shl
cmps
neg
in
shr
cmp
mov
movs
pushf
and
call
je
in
test
fld
adc
sahf
pop
sbb
adc
pusha
popf
je
shr
popf
push
bound
push
aaa
cwde
call
and
push
mov
cmps
hlt
add
inc
aam
pop
mov
pop
hlt
mov
xchg
(bad)
xchg
sub
movs
test
addr16
fs
repz
jmp
hlt
pop
add
dec
inc
jecxz
dec
lsl
test
pop
xchg
hlt
mov
sub
pop
mov
out
mov
push
dec
pushf
test
pop
out
or
out
add
ja
or
mov
outs
addr16
pop
rcl
pop
hlt
pusha
pop
mov
jnp
int3
pop
cmp
clc
fnsave
xor
mov
mov
mov
xchg
pop
jns
bound
pusha
mov
popf
push
mov
sahf
retf
pop
movs
or
mov
daa
je
cwde
xchg
popa
cmp
jnp
xchg
push
fld
cld
and
mov
nop
ror
lea
push
retf
je
mov
fmul
lods
sub
push
les
iret
dec
adc
repnz
out
(bad)
int3
bound
mov
retf
add
enter
rol
call
lea
je
mov
leave
lea
push
xchg
hlt
js
mov
and
inc
mov
pop
ins
cdq
call
adc
jle
rol
and
mov
cmp
xchg
inc
cmp
fnstsw
out
call
cs
adc
(bad)
(bad)
jns
ja
dec
out
mov
inc
mov
jne
imul
xchg
or
cmp
jle
fadd
aaa
clc
sbb
lea
xor
jne
fwait
gs
test
popa
call
pop
xchg
inc
pop
dec
jnp
xchg
jmp
push
add
in
sahf
pop
popf
rcl
je
out
ins
js
push
retf
out
pop
adc
xor
addr16
adc
inc
loop
hlt
test
cmc
mov
mov
fild
push
sub
and
sub
ret
sub
(bad)
(bad)
mov
inc
stc
(bad)
repnz
sbb
nop
xor
iret
outs
out
push
jl
stc
sub
lock
sahf
aaa
hlt
add
popf
xchg
(bad)
or
sti
mov
jl
xchg
les
dec
jl
jp
sub
add
std
sub
mov
std
xchg
inc
cmp
jl
jnp
ins
add
sahf
pop
test
popa
ins
pop
ds
pop
cmp
imul
pop
xlat
and
jne
pop
lds
cld
es
shr
arpl
ins
adc
sahf
pop
sub
mov
popf
fs
icebp
mov
adc
jl
jbe
cmp
pop
hlt
add
pusha
clc
in
ins
or
mov
sub
pop
test
pop
mov
mov
pusha
cmp
xor
imul
sub
movs
cmps
sbb
mov
test
je
jecxz
push
mov
int3
xchg
mov
mov
ins
aam
or
call
hlt
sub
ins
pushf
into
inc
popa
pushf
mov
xchg
fdivr
ret
cmp
arpl
cli
stos
jne
ret
cmp
cdq
pop
mov
repnz
(bad)
movs
fld
rcr
or
cmp
sub
jecxz
mov
imul
jge
adc
xchg
pop
or
loope
cli
xchg
jb
sub
push
cmp
pushf
popa
leave
sub
jp
jmp
lods
xchg
adc
out
in
fcom
add
arpl
add
add
sbb
jb
or
mov
movs
mov
cmp
nop
cmp
push
xchg
sbb
test
rcr
mov
icebp
pop
not
mov
cmp
test
retf
mov
je
retf
imul
dec
ret
jge
neg
xor
cmp
jge
mov
and
and
retf
cld
pop
fst
dec
inc
jecxz
ss
aaa
js
sub
jb
adc
les
sbb
mov
and
aas
enter
xchg
inc
sbb
repnz
or
loop
and
mov
enter
inc
jg
sub
pop
cmp
push
mov
inc
rcl
(bad)
scas
sbb
ret
dec
ins
ret
out
and
scas
shl
add
(bad)
loop
je
push
addr16
dec
xor
push
sbb
mov
cmp
push
shr
in
sub
test
test
mov
push
inc
popa
call
pop
jne
cs
ins
and
out
jge
jg
pop
sub
(bad)
push
push
pop
jmp
test
pop
pop
scas
fistp
add
ins
ror
lea
xchg
pop
mov
or
in
pop
ins
in
pop
sub
pop
dec
shl
or
inc
or
out
lea
rol
mov
mov
lea
cmp
les
ins
cld
mov
push
lods
mov
or
ins
pop
sahf
pop
out
dec
mov
in
and
gs
repz
je
and
mov
in
xchg
pushf
test
or
xor
jp
dec
nop
scas
cmp
jo
xor
or
test
jmp
push
push
cmp
xor
push
aaa
pusha
add
mov
xor
sbb
iret
xchg
stc
mov
sub
sbb
sub
cmp
mov
add
ds
xchg
pusha
mov
push
rol
mov
hlt
add
ds
pop
xor
pop
mov
sbb
push
sbb
in
hlt
in
movs
hlt
jae
stc
pop
xor
imul
inc
jmp
pop
sbb
dec
xor
adc
stc
pushf
daa
xchg
pop
out
out
bnd
std
shr
sbb
mov
dec
dec
sub
sub
in
jmp
adc
lods
or
jb
inc
pop
(bad)
in
and
xchg
mov
mov
jp
xchg
inc
inc
jmp
mov
pop
cwde
mov
shl
xor
mov
and
jns
in
imul
mov
fs
scas
ins
iret
push
push
stc
js
mov
jne
inc
gs
popf
aaa
pusha
mov
xchg
xchg
pop
mov
das
pop
je
adc
inc
call
hlt
js
inc
pusha
push
push
or
mov
outs
mov
jbe
push
xchg
pusha
jecxz
push
mov
movq
cs
fidivr
mov
rcr
(bad)
cdq
enter
pop
lods
mov
enter
push
(bad)
clc
xchg
popa
cmp
mov
cmps
sub
sar
imul
inc
cmps
xor
jae
sbb
ins
sub
ds
cmp
shr
xor
outs
lods
cs
les
mov
outs
mov
test
loop
add
adc
push
add
cwde
fwait
pop
fimul
in
ja
je
je
dec
pushf
sbb
jg
je
jno
(bad)
ficom
shr
adc
icebp
push
sar
pushf
lahf
sbb
ins
aas
pop
push
mov
pop
loopne
fdiv
push
push
pop
pop
inc
clc
mov
pushf
add
inc
xchg
mov
nop
sahf
mov
fisubr
les
mov
cmp
push
ret
cmp
je
(bad)
stc
je
jb
jae
jmp
jbe
push
jmp
dec
fistp
xchg
(bad)
(bad)
daa
retf
sbb
lods
in
mov
xchg
jns
push
cs
adc
ja
arpl
dec
mov
or
movs
and
xchg
jmp
call
mov
lahf
xor
or
call
push
pop
dec
mov
call
mov
test
jb
cmp
and
jle
mov
inc
mov
jne
aaa
pushf
add
sub
daa
cmc
in
in
rcl
mov
es
push
xchg
hlt
cs
xchg
push
repnz
loop
std
sar
pop
inc
lea
xchg
cdq
packssdw
mov
test
push
and
dec
pop
inc
mov
pop
out
fs
jae
idiv
js
xchg
ds
pop
mov
std
mov
or
ss
and
gs
stos
cld
lock
aad
jno
rcl
call
inc
mov
scas
retf
xor
inc
sub
push
xchg
sbb
test
ss
hlt
outs
shl
into
add
mov
scas
shr
fsubr
retf
inc
adc
test
sahf
push
cli
cmp
test
test
cmp
and
cmps
into
je
je
mov
stos
or
sub
mov
cmc
and
jmp
(bad)
mov
cli
enter
mov
xlat
or
pop
int3
ja
pop
imul
mov
stos
dec
daa
sbb
repnz
scas
push
lahf
sbb
cmp
sub
pop
jae
repz
aam
stc
nop
sub
inc
cmps
pop
and
enter
xchg
rol
push
mov
mov
ret
out
add
mov
xchg
addr16
fdivr
sbb
jg
shl
cmp
jmp
mov
add
hlt
xchg
ins
and
sbb
xchg
imul
stos
cli
mov
fldenv
push
mov
retf
jnp
hlt
cld
call
adc
js
loop
adc
imul
pop
movs
pop
sbb
ret
shl
out
imul
call
push
xchg
movs
in
outs
xor
jne
mov
mov
cmp
mov
pop
xchg
daa
mov
push
mov
inc
ror
pop
mov
sub
pop
dec
push
popf
xor
int
xchg
clc
sub
xor
(bad)
push
mov
lea
clc
cmp
sbb
xchg
cmp
mov
pop
dec
push
ret
shl
in
cmp
dec
push
fwait
inc
cwde
dec
out
xchg
pop
add
jbe
mov
sbb
sbb
dec
xor
mov
push
popa
push
mov
gs
sub
aaa
les
hlt
shr
ins
dec
test
ins
nop
clc
inc
dec
push
pop
sub
fcom
popa
push
ins
rol
mov
mov
arpl
pop
pushf
sub
popa
push
(bad)
iret
int
daa
pop
push
addr16
cld
clc
jno
or
nop
std
rol
push
lods
(bad)
addr16
scas
cmp
scas
jno
test
jp
retf
add
addr16
jecxz
call
hlt
aam
sbb
cmp
das
bound
mov
hlt
sbb
imul
adc
sub
inc
xchg
push
call
fisubr
movs
sub
mul
gs
sbb
js
das
cmp
or
push
push
add
lds
pop
test
or
pop
add
mov
cmc
push
push
jne
repz
jle
call
loope
sub
fsubr
icebp
fst
sbb
aaa
fadd
add
sahf
aaa
loopne
out
repz
call
jge
call
outs
neg
iret
mov
inc
mov
sbb
inc
(bad)
es
stc
mov
jb
call
add
in
push
and
(bad)
cmp
test
ror
pop
inc
sahf
jb
clc
xor
cmc
adc
cmp
dec
add
mov
ror
aad
call
aam
int
adc
inc
mov
push
aam
pop
adc
jae
jns
lds
cmps
jp
xchg
jbe
bound
in
call
movs
sub
jecxz
xor
pop
cmp
fsubr
jmp
ret
pop
and
mov
in
call
push
aaa
call
mov
(bad)
or
mov
(bad)
push
push
adc
push
cmp
data16
clc
dec
jmp
pop
hlt
mov
cmp
and
push
in
fsubr
gs
mov
cdq
adc
pop
jb
add
js
jne
xchg
gs
jae
sbb
jo
das
jne
xor
mov
mov
jae
out
jns
jmp
cmp
dec
mov
push
adc
cmp
mov
fimul
or
popa
inc
xor
push
pop
cwde
shl
test
or
pop
mov
pop
cs
cmps
pop
popf
dec
inc
mov
inc
test
and
cmp
dec
mov
(bad)
aas
in
addr16
hlt
(bad)
ins
movs
push
mov
push
sub
xor
(bad)
adc
push
sub
or
mov
jl
jge
pop
shr
test
xchg
inc
sbb
jmp
cmp
movs
or
mov
nop
pop
enter
aas
gs
xor
mov
xlat
push
xor
dec
mov
mov
clc
inc
mov
pop
lea
clc
xor
test
push
cs
push
inc
outs
imul
mov
pushf
xchg
cmps
xchg
mov
add
cmc
out
cmp
test
pop
mov
hlt
or
not
aas
cld
daa
xchg
ret
jmp
jb
jp
or
cmc
outs
data16
sub
shr
aas
pop
mov
test
inc
push
xor
scas
mov
mov
mov
jb
aaa
inc
cmp
xor
and
pop
inc
or
adc
stos
js
(bad)
out
mov
inc
stc
test
cwde
sbb
xchg
into
retf
inc
xchg
add
mov
(bad)
push
rcl
mov
mov
jmp
xchg
(bad)
mov
inc
jge
and
stos
xor
xor
cmp
or
aaa
lods
sbb
xor
push
in
int3
retf
pop
fsub
jb
cmc
shr
cld
data16
idiv
or
and
mov
pop
or
rcr
test
cmps
les
sbb
hlt
pop
ror
arpl
popa
mov
sahf
pop
scas
sub
arpl
xor
pop
rol
gs
aad
cs
fcom
mov
sar
retf
xchg
aam
sbb
aas
push
sub
jne
cld
pop
sub
cmp
movs
in
mov
clc
in
xor
popa
mov
mov
popf
jne
rol
dec
add
dec
(bad)
xor
adc
dec
pop
mov
fadd
aam
inc
rcl
cmp
outs
fs
lock
lods
xor
pusha
jmp
in
pop
es
fnstcw
dec
or
jg
add
lea
xchg
dec
add
push
adc
xor
xor
clc
out
pusha
mov
pop
mov
(bad)
mov
mov
or
push
in
ss
frstor
cmp
cmp
pop
cmp
cmp
cli
pop
push
mov
sti
xchg
mov
ret
in
mov
dec
lods
xchg
cmp
fptan
mov
ins
cli
fidivr
(bad)
out
mov
popf
xor
scas
cli
sar
pop
dec
or
xchg
or
test
mov
pop
dec
fsubr
xchg
lock
pop
stos
inc
sbb
pop
lahf
inc
das
sub
mov
fs
add
inc
jo
sbb
fisttp
loopne
mov
lock
out
push
xchg
or
push
inc
pop
adc
xchg
push
push
std
gs
dec
sahf
mov
in
fild
cmc
xor
mov
push
cmc
xlat
bound
fadd
ret
in
jle
push
inc
aad
mov
add
(bad)
sub
jle
or
mov
cmc
jo
sbb
dec
cmp
ds
pop
ins
mov
call
lea
mov
lea
(bad)
push
js
xchg
les
cmp
in
arpl
std
cmps
adc
sub
pusha
xchg
pop
rcl
or
aam
shl
sbb
push
out
inc
mov
(bad)
imul
rcr
fld
mov
loope
mov
enter
test
mov
pop
jle
sub
lahf
or
int
adc
ss
sbb
in
xchg
sbb
test
icebp
cs
mov
sbb
lea
and
lea
rcl
stc
cld
repz
ss
mov
sbb
pop
mov
xchg
push
cmp
or
mov
pop
cmp
sbb
repz
repz
jns
sbb
xor
and
addr16
iret
push
fsubp
xchg
js
jcxz
bound
sbb
xor
lods
clc
sub
mov
sub
scas
ins
rcl
retf
lds
jae
push
push
fs
sbb
test
xchg
mov
adc
xor
call
mov
cmp
out
pop
loopne
popf
pop
adc
jp
xchg
xor
bound
fs
mov
sub
je
sbb
outs
jge
lock
jge
(bad)
jb
jecxz
push
xchg
mov
pop
lock
and
loopne
imul
sbb
xchg
lods
jmp
jb
xor
xor
pop
mov
cld
push
cmp
mov
lock
push
popa
mov
arpl
fs
pusha
cmp
xchg
cmc
shl
or
test
mov
cmp
ficomp
dec
clc
xor
arpl
mov
push
cmp
adc
shl
bound
popa
sub
jl
ss
or
js
lock
(bad)
neg
and
test
(bad)
pop
in
jecxz
fs
das
cmp
jb
stos
in
lods
mov
mov
inc
mov
inc
add
addr16
dec
mov
dec
jp
lods
fsub
push
sbb
push
aas
jo
mov
sbb
cmps
ja
jp
jae
mov
jecxz
sti
ss
pop
mul
popf
lea
push
jmp
add
jo
xchg
push
cmp
xchg
dec
popa
popf
sub
rcl
les
sub
jg
int3
sub
sub
sahf
out
jnp
sub
push
mov
mov
sub
out
mov
outs
mov
cmp
hlt
cwde
jl
pop
gs
iret
aam
lods
inc
repnz
push
xchg
addr16
jmp
mov
mov
nop
loope
aaa
cmp
(bad)
push
outs
movs
add
xchg
(bad)
mov
dec
sbb
imul
test
xchg
imul
jno
je
add
cmps
int3
push
xor
call
and
rol
rcr
and
scas
imul
fcom
retf
icebp
call
test
sub
outs
fiadd
inc
in
push
push
stos
ins
mov
and
test
jno
pop
jae
enter
sub
mov
sub
cmp
push
xor
outs
cmc
and
test
je
or
ret
(bad)
ins
int3
xchg
mov
nop
and
mov
cmp
pop
aam
icebp
xlat
test
cmp
shl
lea
nop
inc
jb
pop
test
and
jnp
jns
fs
and
cwde
cmp
and
cmps
aaa
cmp
fmul
push
sub
paddq
fnstenv
sub
add
add
pop
popf
in
and
icebp
mov
xor
sar
bound
inc
add
test
shr
push
xor
mov
push
push
test
push
push
pusha
addr16
mov
retf
mov
jno
ins
push
pop
sbb
xchg
loopne
xor
jmp
pop
mov
dec
sahf
pop
sbb
xchg
shr
pop
pop
sbb
push
push
test
ins
xchg
mov
mov
hlt
dec
(bad)
ins
int3
xchg
mov
je
icebp
mov
push
test
push
es
addr16
cmp
retf
mov
es
test
inc
repz
std
jns
pop
push
test
je
bound
dec
ret
(bad)
imul
ins
sbb
xchg
cs
and
test
ins
loop
pop
mov
pop
sahf
pop
sbb
xchg
sub
cmp
sbb
clc
das
add
js
addr16
aam
test
pop
inc
mov
test
push
push
(bad)
xor
mov
pop
shl
addr16
call
pusha
(bad)
add
dec
pop
imul
or
sbb
mov
call
pop
adc
aam
jge
fs
and
shr
lea
pushf
pop
pop
arpl
ss
int3
das
sub
(bad)
addr16
pop
push
add
aam
mov
out
cmp
int3
adc
xor
arpl
xchg
inc
pop
ins
adc
stos
pusha
mov
push
jns
pop
pop
in
xor
mov
(bad)
ins
int3
xchg
mov
mov
adc
call
test
mov
sbb
js
mov
cmp
add
pop
shl
and
sub
pop
xor
cmps
popf
popa
mov
mov
push
cli
test
push
cwde
mov
fldcw
bound
add
or
packsswb
cmp
popa
dec
mov
and
test
hlt
movs
xchg
adc
pop
push
shr
add
out
into
arpl
test
mov
test
inc
cld
int
mov
or
pop
pushf
and
cmp
push
mov
xor
mov
sub
outs
sbb
ds
push
stc
test
rcl
sub
or
ins
je
je
and
call
xchg
(bad)
ins
leave
pusha
clc
sub
or
icebp
popf
lahf
in
mov
mov
stc
test
xor
arpl
lock
ja
xor
(bad)
sbb
scas
outs
fcmovu
out
and
jne
xchg
dec
mov
push
arpl
sub
pop
and
stc
test
arpl
pop
pop
pop
imul
test
jnp
xor
stc
test
lea
mov
je
push
in
add
iret
pop
jmp
mov
hlt
test
push
fdiv
pop
cmp
pop
inc
sub
pop
mov
in
lods
sahf
push
sub
add
add
mov
xchg
pop
(bad)
sub
xchg
add
lea
jno
cmp
push
jb
fisub
shl
fs
in
add
mov
(bad)
imul
je
and
push
sbb
sbb
int
pop
sbb
cmps
aaa
mov
inc
dec
fnsave
dec
es
addr16
rcl
and
popa
(bad)
sub
shl
jns
stc
xor
xor
test
bound
add
addr16
xchg
dec
retf
mov
add
into
and
xor
daa
push
mov
pop
mov
pop
(bad)
shl
mov
in
clc
ss
lea
jmp
pusha
jae
dec
addr16
fdivr
std
icebp
popf
gs
pop
cmp
and
test
xor
arpl
push
mov
mov
icebp
call
test
ja
inc
hlt
add
sbb
pop
hlt
movs
xchg
cdq
inc
mov
cmp
sti
lea
jp
imul
mov
and
aam
hlt
mov
fimul
cmp
call
or
sbb
call
fmul
mov
stc
icebp
mov
pop
jb
mov
mov
lea
xchg
mov
xor
xchg
adc
es
pop
jae
js
dec
(bad)
inc
mov
sbb
(bad)
mov
stc
and
adc
pop
sbb
cmps
aaa
in
icebp
sti
xchg
aas
enter
pop
hlt
push
jne
lods
fucomp
add
test
je
jbe
pop
in
xor
mov
(bad)
ins
fldpi
popa
cli
enter
pusha
mov
arpl
and
and
pop
sbb
test
xchg
popa
add
mov
fisubr
call
fdivr
cdq
hlt
dec
test
lock
mov
or
movs
mov
mov
rcr
test
aaa
hlt
add
std
sub
je
icebp
mov
add
pop
pop
frstor
sub
ss
(bad)
daa
pop
js
pop
mov
rcr
pop
repnz
cmp
aaa
cli
adc
out
push
jb
je
stos
push
call
cmp
xchg
pop
add
ss
mov
jnp
(bad)
call
xor
mov
push
aaa
add
out
jne
or
xchg
inc
xor
in
(bad)
shl
js
mul
movs
push
add
je
je
xchg
xchg
mov
cmps
aam
int
push
ds
lods
mov
dec
mov
pusha
pop
or
and
(bad)
imul
jge
iret
cmps
ror
aam
stc
mov
xchg
inc
aaa
icebp
loopne
push
into
push
adc
add
jmp
cli
lea
and
and
inc
mov
adc
add
and
lds
arpl
and
add
dec
and
xor
inc
aas
aad
lds
fisttp
retf
and
jmp
sbb
jnp
or
pusha
das
xchg
aam
fidiv
xor
call
sub
xchg
mov
stos
aaa
jns
pop
inc
sbb
gs
jmp
xchg
push
and
push
or
xchg
ficom
or
cmp
sub
std
out
ret
sbb
out
loopne
mov
xchg
adc
hlt
(bad)
pop
cmp
xchg
outs
and
or
ins
hlt
xchg
mov
ins
popf
or
js
fwait
ss
pop
mov
add
fistp
bound
repz
out
cmp
dec
mov
pusha
cmp
mov
stos
ja
sub
jns
jb
loop
add
fisubr
js
mov
cmp
clc
push
jecxz
xchg
jnp
xchg
iret
ficomp
sbb
pop
cmp
not
gs
stos
sahf
in
mov
cmp
rol
ret
cmc
loope
sub
or
push
pop
jmp
not
fbld
jge
mov
gs
fstp
or
and
pop
mov
push
xchg
pop
je
jecxz
mov
mov
pop
xlat
jmp
out
arpl
cwde
adc
in
call
shl
arpl
xchg
aaa
mov
and
in
cmp
aas
fwait
daa
int3
xchg
mov
and
lock
adc
pop
and
push
sti
and
xor
cs
xchg
int
jnp
arpl
mov
cmp
lea
and
nop
in
xor
mov
sbb
pop
pop
cmp
ja
mov
dec
test
xchg
mov
sar
push
cmps
in
jmp
or
xchg
jnp
xlat
jp
clc
shr
xor
test
xchg
call
fcomp
or
(bad)
fstp
lea
call
xchg
ret
in
mov
pop
call
push
push
pop
into
pop
push
sub
mov
push
sar
pop
out
pop
push
test
xchg
shr
clc
sbb
or
pusha
mov
mov
dec
cmp
popf
dec
stc
bound
mov
in
mov
loopne
sbb
mov
dec
mov
ret
dec
pop
sub
sub
add
daa
out
sub
xor
mul
cmp
pop
mov
jg
ror
push
cld
xor
mov
imul
cmc
in
ss
das
sar
shl
pop
cmps
call
dec
push
fcomp
loop
in
sub
push
inc
repnz
cdq
lods
xchg
cdq
xor
outs
push
mov
adc
mov
popa
mov
test
mov
mov
mov
jmp
add
cmp
pop
push
imul
cmp
loope
popf
fisttp
(bad)
cmp
sub
sub
ss
pop
fsubr
popa
lods
mov
scas
xor
jle
push
push
imul
(bad)
mov
icebp
xor
shl
sub
ss
or
mov
test
imul
xor
inc
pop
cmp
add
cmp
mov
jle
jo
pushf
mov
rol
cmp
retf
and
test
pop
imul
call
cld
out
cmp
rcr
int
xchg
add
in
pop
xchg
jle
cld
mov
jae
imul
mov
ins
dec
popa
mov
pop
js
push
sub
sub
mov
mov
add
pop
js
je
or
fsubr
jl
cmp
movs
popa
call
xor
xchg
pop
add
popf
je
mov
inc
lods
sahf
adc
and
dec
dec
jmp
cld
or
jmp
test
fcom
mov
into
aam
aam
in
dec
dec
xor
push
mov
or
icebp
pusha
cld
inc
lods
sbb
ret
aad
xchg
jmp
cmp
(bad)
push
cwde
and
xchg
aas
jg
push
gs
jbe
push
ror
and
lods
jo
cmp
push
xchg
mov
sub
cmc
pop
jmp
mov
xor
sbb
test
aam
shl
push
xor
aaa
iret
js
std
push
test
pop
jno
dec
mov
add
jmp
ss
aam
aam
sub
ins
repz
dec
mov
js
sub
pushf
sbb
shr
sub
outs
xor
enter
pop
cli
cmp
xchg
mov
or
cdq
pop
test
hlt
jmp
xor
shl
inc
xor
retf
and
or
pop
cmc
loopne
aam
mov
and
ret
shl
sbb
sbb
sub
xchg
inc
xor
mov
call
rdmsr
call
pop
pmaxsw
mov
imul
or
cli
push
clc
inc
cmp
in
and
jno
xlat
jmp
cli
sbb
ja
pusha
mov
xor
sbb
push
and
lea
(bad)
xor
cli
mov
data16
adc
sar
xor
mov
setp
retf
mov
jle
push
arpl
retf
xor
mov
movs
in
out
imul
fdivr
(bad)
call
mov
mov
xor
fdiv
in
iret
sub
mov
sub
out
pusha
lahf
jmp
or
sahf
lahf
movs
sub
sbb
xor
sbb
push
xchg
lahf
xor
xor
out
ins
movs
out
sti
and
dec
outs
dec
mov
jle
and
jno
xlat
cmp
cmp
rcr
pop
sbb
inc
xor
sbb
push
xor
lea
sti
xor
push
popa
call
hlt
movs
mov
jb
push
rol
mov
push
daa
xchg
xchg
ja
cmp
jmp
sahf
push
cld
in
pushf
movs
or
out
xchg
sahf
pop
jle
test
sub
jns
clc
push
sub
sahf
shl
jns
cmps
mov
or
ja
rcr
hlt
jae
in
inc
sahf
pop
or
push
pop
les
pop
js
fsubr
pop
mov
sub
int
or
push
int3
mov
sahf
call
sbb
jmp
sahf
and
xor
inc
xor
sahf
stos
ret
jmp
jmp
jnp
jno
pop
test
and
in
inc
pop
mov
pop
ins
push
jno
(bad)
das
retf
fldcw
clc
popa
scas
pop
inc
hlt
mov
es
pop
imul
pop
dec
xor
pusha
pushf
inc
rol
adc
and
dec
xor
out
xchg
minps
addr16
popa
xchg
sub
sahf
mov
and
xor
mov
xor
pop
jge
push
mov
scas
sahf
retf
fsubr
pop
adc
mov
adc
daa
or
outs
and
icebp
mov
call
xor
jbe
js
aaa
mov
fs
push
pushf
sub
xchg
xor
nop
inc
dec
arpl
jmp
xchg
jmp
xor
dec
jge
inc
popf
(bad)
imul
xchg
imul
clc
xchg
mov
adc
cmp
push
ins
mov
fisub
inc
sub
shl
xchg
or
cmps
xchg
push
inc
dec
dec
or
pop
addr16
xchg
mov
cs
lock
repz
jb
push
or
lahf
into
mov
shr
stc
clc
shr
mov
je
push
cmps
js
dec
popf
xchg
je
scas
imul
les
push
mov
ret
fcmove
add
test
ficom
lods
int
inc
push
ror
sbb
or
pushf
jp
out
pop
jb
jb
lock
ret
mov
in
pop
sub
xchg
hlt
mov
mov
shl
inc
addr16
movs
call
add
leave
in
hlt
out
call
test
jns
jbe
shl
(bad)
lock
pop
in
and
or
stc
pop
int3
call
xor
(bad)
int
xchg
push
mov
mov
sbb
aam
mov
(bad)
retf
mov
cmp
adc
bound
je
das
push
dec
leave
xor
les
mov
loope
xchg
sar
mov
stos
cmp
bound
popf
push
clc
ror
cmp
enter
jg
add
xchg
jns
push
test
push
fsub
leave
dec
rcr
mov
mul
data16
jae
jp
xchg
dec
xchg
jo
test
pop
sahf
cmp
hlt
sbb
and
stc
(bad)
dec
pop
repnz
into
lock
sub
inc
ds
xor
mov
xor
jae
adc
pop
mov
sti
stos
xor
push
cmps
xor
int3
xchg
or
cmp
cmp
or
movs
sbb
ja
aam
sti
mov
adc
jno
mov
scas
out
push
jo
imul
mov
pop
add
sub
adc
cli
je
loope
aam
sbb
aam
data16
cmp
sbb
cwde
or
jb
ins
push
retf
call
dec
push
adc
dec
popf
jmp
inc
mov
mov
(bad)
ins
mov
daa
clc
mov
sbb
not
sub
adc
sbb
jae
jle
or
and
inc
mov
xchg
push
(bad)
jne
nop
cmp
fs
call
sbb
sub
cli
jae
pop
push
cmp
adc
ret
sbb
adc
jp
xchg
fcom
or
fsub
les
and
arpl
sub
jg
inc
scas
sub
cld
pop
sbb
popf
sbb
and
sbb
mov
sar
jmp
test
leave
cmp
jg
cwde
jle
cmc
dec
inc
pop
shr
addr16
and
stc
mov
inc
mov
pop
stos
pusha
sub
pop
xor
jge
push
push
inc
test
hlt
mov
jne
inc
pop
popf
pop
inc
mov
scas
dec
ins
outs
movs
add
xchg
mov
(bad)
ins
xlat
pop
sub
push
out
push
pop
add
je
inc
sub
aad
pop
aam
xor
inc
jle
and
mov
inc
dec
jae
mov
call
shr
inc
sbb
dec
movs
ins
ins
in
inc
test
out
inc
aam
out
lea
in
and
shl
data16
inc
push
shl
pop
add
aad
(bad)
call
push
and
push
(bad)
pop
add
leave
outs
jmp
adc
xchg
xor
mov
ret
xchg
adc
cmp
jmp
and
mov
dec
adc
loope
je
jle
pop
pop
cmp
mov
aam
out
lea
adc
es
popf
test
sub
mov
pop
loopne
cmp
mov
mov
addr16
pop
stc
or
mov
jbe
outs
add
or
mov
(bad)
aam
in
sub
clc
or
mov
sar
dec
cmp
dec
mov
xor
mov
int3
cmp
pop
push
(bad)
pop
mov
popa
call
popa
(bad)
jp
xchg
(bad)
repz
in
mov
out
fdiv
sbb
cmp
idiv
icebp
pop
movs
adc
fstp
fsin
aam
mov
shl
jge
push
mov
and
pop
push
fisub
test
cmp
and
in
xchg
jg
mov
ja
mov
inc
add
xor
addr16
jp
xchg
enter
and
sub
push
push
ret
es
out
sub
sub
push
dec
push
sbb
test
nop
call
add
rol
test
cmc
lods
or
clc
inc
pop
ja
in
clc
les
mov
test
mov
inc
mov
mov
nop
inc
ja
xor
addr16
jmp
pop
mov
sub
mov
hlt
lock
gs
adc
pop
mov
std
push
pop
pop
hlt
mov
xor
xor
sub
rol
push
mov
loope
(bad)
jp
push
ret
shl
in
dec
arpl
dec
mov
jge
iret
pop
pushf
or
cmp
lahf
cmp
popa
ret
sbb
out
dec
pushf
add
retf
fidiv
ficom
popa
stos
inc
jp
data16
pop
push
xor
jle
inc
xor
cmp
test
jne
or
push
jg
cmp
push
mov
js
or
pop
inc
push
test
mov
ret
repz
fucomi
jne
xchg
fs
dec
inc
cmp
lods
or
mov
jns
(bad)
(bad)
dec
push
mov
cld
mov
push
in
inc
jmp
push
mov
inc
clc
dec
push
ret
addr16
gs
fisttp
es
pop
sub
stos
mov
sbb
retf
mov
daa
dec
jmp
sub
fwait
int3
mov
and
cmc
je
cld
cmps
jae
inc
xor
mov
(bad)
clc
je
int3
and
jge
cli
nop
jmp
(bad)
(bad)
imul
or
push
adc
dec
jmp
les
inc
dec
stos
nop
in
fadd
xchg
mov
adc
pop
fbstp
stos
pop
mov
enter
jecxz
cmp
dec
adc
and
in
out
dec
dec
ins
sbb
mov
inc
dec
sub
sar
enter
xlat
pop
adc
push
outs
gs
mov
xchg
iret
inc
mov
xchg
xchg
in
cld
cmp
je
jno
or
shr
clc
mov
add
pop
push
add
adc
xlat
and
aam
popa
ret
call
cld
adc
xchg
add
or
xchg
pop
push
js
jb
mov
aam
fadd
and
mov
add
add
or
mov
(bad)
into
pop
nop
(bad)
repnz
adc
sub
and
cmps
lods
sbb
mov
popf
mov
stos
ret
cdq
movs
clc
and
js
cmp
pop
inc
cli
addr16
test
call
mov
add
lods
dec
nop
ds
adc
sbb
xor
jne
inc
clc
pop
pop
retf
lock
push
call
ss
mov
rcl
cmp
mov
in
and
mov
movs
ins
xchg
jnp
mov
aaa
std
jp
arpl
jmp
mov
push
push
sub
lods
pop
mov
xchg
(bad)
pusha
stos
cmc
les
pop
adc
in
gs
arpl
clc
sub
aam
scas
call
pop
es
adc
pop
pushf
jno
dec
mov
int3
clc
push
sub
cli
sbb
xor
js
(bad)
aad
into
or
push
out
fisubr
(bad)
in
mov
retf
xchg
xor
xor
popf
or
mov
out
jb
pop
(bad)
xor
and
popf
mov
js
sbb
inc
pop
mov
dec
(bad)
cdq
test
lods
xchg
(bad)
cwde
jne
push
and
mov
sbb
out
mov
idiv
and
mov
pushf
xor
out
aam
and
sar
jne
or
loopne
aam
rcl
bound
inc
leave
nop
aaa
jge
shl
mov
cmp
push
in
loopne
in
test
(bad)
cmps
mov
mov
cmc
std
movs
repnz
and
out
lahf
push
push
pop
cmp
mov
sub
adc
movs
imul
cmps
scas
fisubr
jecxz
xor
push
sub
fidivr
xor
xchg
mov
stos
mov
and
addr16
pop
dec
pop
or
add
push
push
mov
inc
cs
mov
enter
pop
jge
test
xchg
mov
xchg
pusha
je
pop
ins
loopne
mov
and
add
test
mov
jp
sub
add
hlt
sbb
stc
push
test
push
push
jae
jmp
lea
into
push
stos
pop
aam
sbb
loop
jb
mov
adc
jb
add
xor
pusha
cwde
sub
cwde
lods
test
mov
movs
mov
pop
pop
or
arpl
xchg
(bad)
enter
fldcw
xor
ja
push
ret
add
pop
sub
adc
mov
push
jmp
leave
cmp
cs
fisubr
fisubr
jmp
or
jmp
and
pop
add
jne
pop
sub
pop
adc
js
xor
lods
mov
retf
push
popf
fist
rcr
mov
push
cmp
in
xchg
call
add
xor
fadd
lods
pop
pop
pop
jge
neg
cdq
mov
hlt
cmps
inc
mov
mov
jb
pop
cmp
inc
jns
add
inc
loopne
jmp
loopne
fiadd
mov
pop
scas
and
outs
loopne
outs
call
call
jmp
xchg
push
addr16
jmp
cmp
mov
jge
test
arpl
add
retf
pusha
movs
jle
ret
pop
cdq
enter
and
xor
cmp
add
jb
jg
vpminub
(bad)
es
mov
sub
je
idiv
xchg
out
(bad)
in
loopne
and
jno
das
and
sub
je
daa
pusha
xchg
fcomp
add
outs
(bad)
repz
sahf
ret
hlt
test
push
jae
in
pop
dec
mov
je
pop
stc
sub
xchg
mov
mov
mov
enter
fstp
jmp
jmp
add
mov
push
mov
pusha
js
sbb
aas
jo
lock
jg
sub
call
stos
sbb
retf
(bad)
mov
pusha
cmp
icebp
loopne
popa
mov
dec
and
and
push
stos
sbb
iret
and
sub
xor
ret
cmp
or
dec
std
out
jne
out
cmp
pop
sub
(bad)
pop
imul
mov
and
pusha
imul
or
xchg
lea
pop
xlat
hlt
push
data16
mov
or
nop
push
ret
or
jle
cmp
aam
add
stc
dec
clc
mov
or
mov
mov
xor
mov
mov
jmp
hlt
in
out
cmp
pop
(bad)
push
shl
sub
cli
popa
aas
or
mov
adc
test
push
or
jae
cmp
sub
hlt
loope
sub
sub
sbb
dec
retf
mov
jle
mul
jg
fiadd
aas
inc
xor
cmp
jo
int3
out
(bad)
push
add
jae
adc
mov
xchg
clc
stos
dec
pushf
js
adc
jmp
xlat
pop
inc
ja
push
push
js
inc
das
sti
mov
pop
cli
vpmacsww
inc
pop
std
out
xchg
cmp
cmp
cmp
cmp
dec
ss
inc
aaa
aas
inc
mov
cmp
outs
adc
push
retf
xchg
dec
mov
outs
push
js
inc
int
and
add
fadd
inc
retf
sbb
cmp
and
push
inc
push
jg
out
inc
cmp
out
movs
pusha
sub
outs
stc
dec
addr16
xchg
imul
lahf
sbb
je
jae
popf
imul
ror
in
test
loopne
pusha
pusha
pop
or
test
push
or
aaa
pushf
add
pusha
cmp
enter
mov
mov
imul
in
hlt
js
sti
add
jp
popa
stos
push
dec
pop
push
ror
shl
xchg
arpl
popa
push
leave
cld
sub
mov
inc
js
xchg
shl
and
ds
push
fisubr
and
jle
das
mov
jne
int3
ret
push
mov
ret
inc
aad
lods
pop
rcr
jp
and
inc
sub
cli
cmp
pop
es
xchg
dec
cs
add
cmp
ins
call
dec
pop
dec
jg
mov
inc
cmp
inc
cmps
arpl
push
cmp
inc
inc
mov
inc
repz
jae
dec
pop
test
cs
push
lea
mov
mov
jno
mov
in
fisub
cmp
and
(bad)
pop
push
cmc
pop
pop
sbb
je
push
add
sbb
mov
loopne
jae
jp
sbb
jle
sbb
test
cli
or
cmp
and
jnp
shr
(bad)
test
pop
in
ins
push
jmp
mov
add
push
fadd
or
xchg
aam
in
xor
cli
call
or
push
das
and
out
sub
jmp
xor
sbb
int3
push
shl
xchg
mov
pop
dec
jecxz
pop
(bad)
jns
out
adc
adc
sbb
rcr
xchg
arpl
xchg
pop
jne
into
imul
pop
stc
xor
cli
rcr
aam
xor
jle
nop
ins
scas
mov
mov
stos
ror
sub
addr16
aas
(bad)
cmp
pop
cmp
addr16
xchg
sub
bound
addr16
jp
sbb
pop
ins
sub
sbb
test
xchg
dec
stos
pop
xchg
(bad)
out
pop
cmps
cdq
mov
dec
push
mov
inc
cmovge
mov
xlat
daa
ss
fisubr
sub
mov
out
sub
xchg
test
adc
nop
fs
push
pop
sub
outs
cmp
bound
sbb
(bad)
mov
or
je
cmp
adc
icebp
dec
sub
jle
mov
mov
sti
mov
xor
cmps
les
cdq
scas
cmc
adc
dec
adc
fdivr
pop
dec
or
pop
ds
hlt
or
xchg
pusha
cld
add
pop
cmp
push
outs
xchg
push
push
jne
sub
pusha
sar
addr16
pusha
test
pusha
and
mov
sbb
and
in
pop
cmp
push
test
cmp
cmp
and
mov
xchg
fs
pop
fld
dec
popa
call
xor
shl
arpl
sbb
xor
cmp
gs
inc
pinsrw
fdiv
call
sbb
pop
fdiv
xchg
sbb
popa
call
sbb
fs
pop
push
inc
cmp
test
xor
call
call
push
sar
jmp
cs
pop
cli
mov
or
cwde
sub
push
and
cmps
dec
fsubp
push
pop
out
lods
lock
cmp
das
sub
xchg
ror
aad
xchg
mov
(bad)
data16
xchg
pusha
enter
test
inc
cs
xchg
jae
pop
dec
inc
outs
lods
adc
and
adc
dec
cld
xchg
xor
jns
push
dec
jo
bound
xchg
lods
cmp
clc
das
sub
cmps
or
das
cs
xchg
dec
dec
sbb
or
adc
xchg
dec
iret
shr
nop
stos
das
mov
stc
pop
loopne
ret
add
cld
fstp
in
fisubr
xor
ficom
pop
sbb
pusha
xchg
xor
pop
sbb
jne
sbb
loopne
mov
call
retf
int3
cs
adc
push
pop
js
scas
pop
dec
movs
inc
mov
cwde
xchg
mov
or
lods
push
jo
inc
sbb
push
add
lods
pop
popa
call
lds
call
sub
mov
xor
hlt
xor
add
adc
test
push
xor
(bad)
push
repz
add
lods
xor
sbb
xor
adc
ss
pop
(bad)
adc
imul
sbb
cmc
pop
in
(bad)
lds
pop
outs
pop
dec
push
addr16
data16
jne
(bad)
pop
jmp
sbb
mov
arpl
mov
sbb
xchg
add
arpl
in
out
sbb
clc
mov
ss
pop
in
pop
jle
mov
mov
inc
das
dec
loope
dec
pusha
or
ret
jp
xchg
ror
pushf
imul
adc
xchg
popf
adc
cmp
jle
addr16
test
cmps
shr
test
jae
popa
addr16
cmp
(bad)
mov
pushf
in
sub
stos
mov
pushf
sub
cs
and
movs
retf
out
imul
jbe
repz
xchg
xor
cmp
add
xchg
jmp
mov
or
or
aam
not
jnp
(bad)
push
gs
fcmovnb
push
cmp
mov
cmp
jo
cmps
pop
pop
sub
mov
mov
mov
loop
or
xor
mov
xchg
sub
popa
push
cmp
cmp
sar
jmp
(bad)
gs
fwait
mov
pop
jo
aaa
cmc
fdivr
stos
mov
mov
pop
cmp
in
lock
add
add
or
lods
cmp
ds
cmps
aad
xchg
lea
xchg
movs
jge
cwde
mov
sahf
dec
popa
dec
or
mov
pop
mov
push
adc
cmc
mov
push
ins
xor
and
push
les
cli
mov
jg
mov
mov
mov
sub
sub
cmp
inc
dec
pop
xor
or
aam
sub
je
mov
loop
popa
and
fs
push
ret
inc
enter
xor
cmp
into
in
pop
push
adc
idiv
sub
cmp
sub
icebp
add
push
add
mov
or
cs
outs
xchg
adc
xchg
ins
xor
aaa
lea
call
and
test
cmp
cmp
aam
ret
mov
push
test
retf
xlat
pop
in
mov
dec
or
jne
data16
stos
xor
fwait
xchg
sbb
mov
movs
sub
push
stos
clc
pop
jne
ins
push
clc
data16
das
jb
daa
shl
out
aam
mov
xor
fs
xchg
xchg
gs
jp
pop
hlt
adc
enter
cmp
not
add
adc
add
xor
push
xchg
or
in
dec
pop
js
xor
mov
mov
bound
adc
inc
xchg
arpl
hlt
je
or
mov
sub
cs
popf
cmp
enter
and
sar
add
jo
pusha
ins
jg
push
test
jle
cmps
sub
pop
fs
cmp
mov
or
xor
js
xchg
adc
sbb
lds
pop
enter
icebp
push
rcr
fs
and
mov
add
jmp
xor
mov
pop
leave
sbb
mov
daa
sbb
js
sub
call
(bad)
or
push
nop
mov
enter
jle
xchg
push
xchg
aaa
pop
push
fcom
(bad)
cmc
fbld
or
cmp
hlt
xor
jg
rcl
jg
pop
xor
xor
cld
lds
push
push
and
push
push
ret
add
cmp
loope
dec
xchg
jl
retf
fdiv
(bad)
dec
add
mov
xchg
sub
inc
push
sub
in
fnstenv
push
pop
fisub
adc
ins
xchg
push
pop
stos
(bad)
and
xor
jae
imul
xchg
call
clc
mov
cwde
dec
shr
pop
pop
jne
and
pop
(bad)
cdq
push
fiadd
push
pop
and
lahf
pop
jmp
cmp
sbb
popf
les
or
popa
gs
push
xlat
and
push
loope
out
mov
inc
push
movs
pop
enter
jmp
cmc
sub
and
fwait
push
mov
pop
or
lea
push
inc
pop
and
arpl
imul
leave
xchg
mov
call
aas
hlt
cmp
outs
xchg
xor
cmp
cmp
test
xchg
xchg
loope
js
sbb
fxam
(bad)
pop
fs
jmp
mov
mov
mov
jmp
adc
xchg
out
lea
loopne
sbb
dec
paddusw
sub
cmps
sub
nop
sbb
out
adc
(bad)
ins
xor
push
aas
sbb
mov
test
mov
inc
xchg
dec
inc
sbb
fs
push
ins
and
push
xchg
mov
add
dec
call
movs
jp
clc
call
or
out
jnp
xchg
mov
push
clc
jmp
cmp
sub
lahf
fcomp
or
jo
adc
mov
es
add
cld
test
sub
pop
mov
jmp
ins
and
cmp
ret
mov
(bad)
mov
pop
in
cmp
and
stc
xor
jns
bound
dec
mov
(bad)
push
xlat
outs
pop
pusha
or
mov
jbe
pop
push
ss
pusha
shl
push
je
inc
sahf
jmp
cdq
mov
in
loopne
or
xor
adc
or
ja
xchg
mov
adc
sbb
popf
pop
inc
mov
mov
jne
sub
or
fdiv
pop
pop
push
mov
pop
mov
adc
je
fdivr
jne
mov
imul
aam
adc
shr
push
fsubr
pop
jno
xor
sbb
fdivr
or
(bad)
xlat
and
pop
jne
enter
cmp
aam
icebp
adc
shr
les
adc
jns
add
mov
push
(bad)
pop
not
pop
add
rcr
jb
je
mov
les
pop
shl
push
sub
inc
cmps
jmp
sar
test
jae
cmp
ror
sar
inc
mov
in
jbe
pop
sub
push
push
test
sub
pop
fsub
jo
push
int
jmp
and
or
xchg
mov
xor
js
fisub
sti
into
adc
mov
in
imul
fwait
js
lsl
rcr
cld
out
jmp
pop
sub
xchg
mov
cmp
jmp
outs
aas
cs
xchg
xor
aam
aad
rol
xchg
cmp
(bad)
cli
push
ins
shl
lock
xchg
shl
stos
fdiv
push
retf
rcr
push
jns
pop
pop
(bad)
shl
lds
mov
or
push
and
sub
jmp
cmc
in
(bad)
jns
xchg
pop
rcr
fmul
rcl
inc
xor
call
ins
xchg
rcr
in
adc
xlat
cmp
mov
xor
mov
jle
pop
movs
ins
outs
mov
pop
stos
rcl
mov
fcmovbe
cmp
push
fnstcw
ins
dec
fsub
ret
mov
jle
aad
outs
dec
enter
fstp
shr
push
add
(bad)
das
aam
shr
call
fs
fidivr
pop
jo
xor
pop
pop
data16
addr16
lea
jle
ins
adc
stos
add
jo
rol
fcom
sti
clc
mov
pop
push
sub
sbb
(bad)
lock
cmove
je
ds
dec
mov
fcom
aad
mov
out
xchg
mov
hlt
xlat
test
mov
fwait
mov
cmps
(bad)
pop
hlt
cmp
fild
movs
in
sti
xchg
or
xor
(bad)
xlat
xor
pop
adc
mov
sub
mov
ins
push
pop
fdivr
movs
bound
adc
leave
jle
mov
mov
push
xor
shl
ret
repz
pop
xor
push
and
shl
add
lds
iret
das
(bad)
fwait
jae
fistp
mov
loopne
pop
nop
jge
(bad)
fmul
rcr
sbb
adc
bound
imul
(bad)
(bad)
fsub
arpl
scas
mov
iret
int
(bad)
(bad)
ins
xchg
inc
in
cmp
mov
sub
cmp
sbb
and
or
ret
and
cld
pop
loopne
fst
bound
or
inc
cmp
fadd
hlt
cmp
out
mov
mov
ins
call
les
cdq
jmp
pusha
xor
stos
outs
fs
cs
fstp
out
shl
adc
push
gs
cmp
cmp
mov
ret
shl
push
test
push
or
push
ins
pop
in
stc
cs
loopne
hlt
jns
clc
mov
outs
stc
add
or
shl
cli
sub
adc
inc
push
sti
mov
mov
fild
push
std
fadd
inc
sbb
adc
add
dec
or
iretw
call
idiv
add
pop
in
push
arpl
mov
mov
push
hlt
xchg
xchg
repnz
pop
sbb
enter
or
cmps
ret
jb
sbb
icebp
outs
adc
dec
scas
adc
pop
or
ss
or
jo
fdivr
addr16
cmp
sub
jecxz
popaw
xlat
inc
dec
pop
adc
repnz
mov
xor
aas
push
sahf
mov
jae
xchg
cmps
or
jno
aas
cmp
in
aas
call
aas
jbe
shl
into
adc
into
mov
clc
push
pop
mov
call
inc
inc
ja
leave
mov
sbb
aam
xchg
mov
(bad)
cmp
push
pop
xchg
popf
(bad)
sub
lods
pop
out
pop
sub
repnz
inc
pushf
jnp
jmp
loop
mov
dec
sbb
xlat
test
xchg
or
sbb
mov
cwde
lods
ins
pop
xchg
repnz
sar
leave
clc
in
cmp
mov
xor
jle
xlat
test
jae
in
aaa
call
scas
hlt
cmp
shl
pop
test
jmp
jle
and
adc
sbb
call
int
pop
imul
xchg
add
or
pop
sub
jge
push
inc
mov
mov
dec
inc
ds
sbb
ror
lods
in
cmp
enter
lea
cmp
mov
cmp
lahf
pop
xor
scas
sub
retf
push
push
mov
aaa
les
lods
mov
cmps
aam
pop
pop
mov
xlat
push
mov
js
sub
out
clc
lods
mov
sbb
rol
cmc
les
hlt
xor
inc
xchg
jo
repz
hlt
add
ss
pop
cwde
xor
aam
dec
out
mov
and
mov
cmp
and
pushf
hlt
mov
or
xor
adc
js
ss
and
push
fdiv
data16
mov
pop
jg
mov
lahf
imul
push
sub
pop
test
cmp
pop
fadd
cmp
mov
cmp
mov
jle
cmp
mov
int3
mov
mov
stos
pop
and
js
pop
add
and
sub
in
arpl
and
hlt
and
jmp
loope
pop
xor
outs
(bad)
(bad)
hlt
and
jmp
inc
pop
fmul
lock
pop
adc
ss
in
mov
xlat
adc
mov
xor
xlat
jg
add
fdivr
sub
xchg
call
mov
out
scas
push
(bad)
dec
mov
jmp
inc
movs
adc
and
lods
push
mov
addr16
mov
cmc
jb
lock
mov
data16
adc
jbe
ins
rcr
fstp
fs
neg
stc
and
dec
mov
test
sbb
adc
popa
fsubr
push
addr16
xor
test
pop
sub
mov
rcl
cld
shl
fcom
sti
jae
mov
sbb
es
sub
sub
add
out
and
dec
xchg
mov
push
mov
pop
es
jmp
and
dec
test
push
jl
xchg
test
pop
sti
rcr
stc
push
push
mov
dec
pop
and
pop
retf
sub
in
or
inc
xor
imul
cld
sub
rol
and
dec
je
stc
les
and
fwait
in
mov
lock
jo
xor
cs
xor
mov
daa
sbb
out
pop
mov
daa
dec
es
cmc
stc
mov
xor
inc
(bad)
mov
or
cli
shl
inc
jbe
sahf
and
mov
add
or
cmp
mov
mov
cld
icebp
push
ins
pop
ja
jbe
in
popf
push
pop
adc
movs
jmp
pop
cmp
popa
imul
mov
sti
fs
in
or
jg
or
push
and
add
jp
adc
jg
pop
add
cld
sbb
push
call
fstp
outs
ins
fadd
jle
(bad)
js
(bad)
or
sahf
jp
adc
stos
mov
cdq
bound
fld
(bad)
stos
and
xor
push
xor
dec
cs
movs
stos
push
jo
aam
in
push
lods
add
jo
pop
sbb
or
cmps
call
inc
jns
mov
movs
inc
in
movs
(bad)
or
lds
inc
pop
js
movs
and
push
hlt
data16
dec
dec
fs
les
arpl
push
or
ret
sbb
jbe
and
xchg
pop
push
xchg
jns
mov
adc
pop
push
ret
jo
repz
ins
mov
in
push
in
pop
inc
push
ins
retf
sbb
std
add
mov
call
retf
les
pop
xchg
(bad)
stc
pop
int
pushf
mov
push
push
stos
in
mov
in
dec
cs
xchg
scas
push
push
aam
cdq
shr
rcr
cdq
enter
movs
adc
cmp
fdivr
jmp
pop
adc
stos
test
add
jne
xor
xor
aad
scas
movs
addr16
mov
repnz
jmp
mov
es
fistp
imul
in
(bad)
pop
mov
pop
movs
sub
shr
mov
cmp
ror
sahf
xchg
and
imul
push
push
cmp
sub
mov
mov
cmp
retf
stos
mov
pop
cwde
or
sub
mov
fnsave
nop
pop
xor
mov
mov
dec
jmp
enter
push
rol
ret
push
adc
arpl
inc
pop
adc
cdq
les
hlt
sub
mov
repnz
mov
cli
cmp
bound
mov
push
and
cld
or
push
popa
dec
in
sbb
sub
fs
cmp
rcr
mov
and
and
sub
fdiv
cmp
aam
loope
out
mov
mov
(bad)
aad
jmp
(bad)
pop
jp
movs
mov
bsr
es
clc
fstp
repz
sahf
stos
jmp
repz
ret
jae
or
and
sub
arpl
cmp
push
ins
cmp
or
data16
jg
sar
sub
mov
shr
loope
imul
movs
jge
xchg
mov
jbe
add
shl
inc
mov
cmc
or
lods
daa
je
js
rol
outs
adc
imul
xchg
das
cli
retf
cdq
fcmovu
cmc
imul
scas
aam
push
add
aas
push
(bad)
sub
daa
ficom
jp
stc
sar
inc
pop
idiv
lahf
sub
sub
dec
in
dec
jmp
mov
or
cmp
sti
mov
dec
sub
in
js
push
test
js
outs
iret
outs
adc
(bad)
repz
jmp
aad
hlt
shl
xor
fidivr
sbb
ret
add
adc
test
js
retf
pushf
and
stos
pop
sbb
pop
sub
cmp
pusha
pushf
mov
outs
cmp
xchg
dec
imul
div
sahf
ins
cwde
pop
stos
(bad)
sub
mov
pop
dec
pop
call
jne
mov
pop
pusha
mov
idiv
sbb
adc
outs
adc
movs
bound
xor
mov
or
add
sub
ds
mov
sub
xor
jae
stos
nop
xor
mov
repz
popf
xchg
int
sbb
pop
imul
push
mov
pop
mov
add
push
mov
test
push
pop
les
enter
sub
and
jnp
mov
rcl
bsr
stc
stos
jae
push
sbb
lods
or
loope
mov
pop
cli
cmp
gs
aaa
mov
pushf
dec
out
shl
call
fucom
mov
xor
mov
fdiv
sub
pop
xchg
fnstcw
sub
jns
xchg
cld
mov
mov
imul
mov
push
sub
cmp
arpl
into
push
push
xlat
mov
stos
mov
sbb
dec
cmp
popa
cmps
dec
sbb
sbb
mov
sti
in
pushf
dec
pop
dec
ret
rcr
xchg
retf
aas
add
push
xchg
push
sahf
mov
mov
cmp
cli
xor
pop
(bad)
fcom
sub
xor
fcomip
(bad)
test
mov
xchg
pushf
pop
pop
mov
adc
test
push
xchg
pop
cmps
adc
xchg
or
sub
and
fidivr
adc
movs
mov
jne
push
mov
(bad)
jne
pcmpgtd
mov
pop
jae
lahf
loopne
out
sub
js
xor
mov
pop
mov
stos
outs
lahf
pusha
inc
push
cli
pop
jg
ret
out
pop
dec
call
leave
arpl
sub
and
nop
pop
dec
mov
pop
inc
test
push
fdiv
xor
sub
adc
jmp
call
push
shr
pop
dec
jmp
ins
into
xchg
mov
xchg
cs
and
pop
hlt
stos
in
pop
shl
outs
mov
cwde
mov
pop
push
mov
mov
imul
je
sub
jmp
stc
push
movs
outs
mov
push
fmul
in
sahf
ds
add
retf
xor
sbb
aas
sub
lock
cmp
sub
(bad)
enter
jecxz
jmp
and
jge
xchg
test
inc
test
mov
pop
jo
mov
or
imul
mov
add
icebp
xlat
ss
nop
pop
pusha
lahf
xchg
pop
popw
(bad)
fdiv
sbb
loopne
fs
xor
cmp
std
ret
addr16
cmp
lock
loopne
out
iret
jne
fcomp
test
xor
mov
pop
sub
nop
iret
push
fsub
cmp
inc
lods
cmp
jb
repz
lock
mov
les
sbb
mov
clc
adc
mov
jg
dec
or
or
int3
jne
fsub
popa
xchg
cmp
popf
cmp
sbb
std
nop
lods
xchg
pop
lea
lods
pushf
inc
dec
sbb
mov
rcl
aam
fdivr
outs
clc
xchg
shl
cs
jbe
sub
fxch
in
dec
xchg
cmps
pop
xchg
cdq
pop
repz
cmp
jl
fdivr
inc
mov
sbb
jle
pop
fild
mov
mov
fdivr
pop
mov
inc
mov
rcl
add
sbb
inc
push
les
pop
loope
mov
xchg
pop
jg
rcl
dec
fldcw
fcom
in
mov
leave
sub
cld
mov
sbb
inc
cmp
inc
std
int3
popaw
in
inc
push
enter
sub
mov
loopne
movs
test
dec
out
pop
pushf
addr16
jp
movs
xchg
push
xchg
pop
push
call
pop
inc
dec
dec
gs
jae
sub
sub
neg
jns
xor
or
shl
aam
xchg
fimul
stos
jmp
cmp
sub
pop
xchg
data16
ins
test
call
adc
and
dec
shl
xchg
add
dec
xor
lds
pop
pop
add
mov
push
repnz
stc
cli
jl
(bad)
adc
inc
push
ds
scas
add
aam
xchg
fwait
cmps
pop
imul
dec
outs
dec
pop
data16
ins
jmp
dec
push
cmp
out
cmp
sbb
movs
push
mov
sub
jle
std
or
mov
stc
je
(bad)
xchg
mov
loope
cmp
ret
sbb
rcl
gs
xor
enter
push
pop
shr
out
cmp
std
xor
or
hlt
cmp
pop
mov
cmp
xchg
sbb
and
sbb
std
mov
push
aad
mov
imul
fmul
pop
test
lock
adc
test
add
and
jbe
test
push
retf
aas
fst
push
xor
cmp
lods
inc
cmp
clc
aam
sbb
arpl
les
std
popa
bound
cmp
fsubp
fadd
cmp
jne
xchg
pavgw
push
xchg
repnz
dec
js
repnz
(bad)
adc
rcl
ret
push
and
jmp
cmp
loopne
mov
sti
shl
add
out
cmc
lods
push
stos
push
nop
sub
(bad)
mov
jmp
dec
mov
or
and
dec
clc
scas
popa
jmp
push
(bad)
out
mov
fsub
in
mov
adc
jp
js
je
ins
in
pop
cld
and
sub
xchg
push
loopne
xchg
pop
cmps
inc
pop
mov
nop
fstp
pop
fs
cmp
sub
pop
adc
setg
jmp
sub
jbe
in
ja
mov
adc
push
mov
outs
clc
scas
jns
dec
dec
add
ins
adc
add
inc
pop
mov
mov
push
imul
jmp
hlt
aaa
adc
ds
jnp
sbb
ins
add
adc
(bad)
jbe
jp
pop
push
loopne
mov
idiv
dec
aaa
js
cmp
inc
call
pop
stos
add
movs
and
call
nop
in
movs
aam
hlt
mov
sub
sub
cmps
fist
movs
cld
jge
sub
jge
jae
sub
jmp
adc
fistp
or
sub
daa
xchg
div
mov
mov
shl
mov
adc
cli
lods
test
sbb
or
movs
push
stc
xchg
(bad)
mov
es
pop
jno
icebp
cwde
jns
hlt
data16
popa
fist
and
xchg
ja
std
add
fild
mov
sbb
push
xchg
jae
adc
jmp
call
jns
ss
enter
add
out
retf
jne
sub
mov
je
mov
cld
sbb
popf
(bad)
ds
cmp
fimul
out
cld
mov
dec
lods
pop
in
cmp
add
sbb
ret
adc
shl
ins
outs
repz
jp
dec
xor
add
inc
mov
pushf
js
jbe
fldenv
xchg
(bad)
xchg
ins
ja
pop
mov
mov
xchg
jmp
call
xor
aaa
out
int3
fcmovbe
or
movs
loopne
pop
int3
mov
repnz
mov
cmp
xchg
in
jbe
pop
pushf
xor
jecxz
ror
loopne
or
xchg
jle
fist
xchg
pop
cmp
jmp
ficomp
add
and
jne
es
pushf
rol
(bad)
leavew
inc
lods
push
repz
inc
xchg
es
fsubr
fisubr
adc
mov
enter
iret
push
adc
daa
mov
mov
das
jns
cmp
jne
mov
inc
cmp
sbb
sar
xor
cmp
adc
adc
push
ds
cdq
in
sub
ds
jmp
in
aad
cmps
ins
mov
xchg
adc
mov
mov
bound
mov
cmp
mov
sbb
cs
in
sbb
scas
xor
push
pop
jb
sar
sub
xchg
push
mov
pop
fs
mov
pop
retf
lods
mov
xchg
popa
xchg
imul
sar
aas
out
rol
les
cwde
js
mov
pop
hlt
enter
mov
push
dec
xor
add
mov
sub
arpl
xor
test
inc
jne
sbb
add
bound
arpl
mov
les
faddp
out
jns
jns
cld
dec
pop
stos
retf
div
sti
movs
sub
and
(bad)
pop
popf
ja
pop
jne
cmp
lahf
push
mov
mov
jo
jmp
dec
stos
hlt
rol
(bad)
and
rcl
pand
jno
popf
and
jecxz
fstp
adc
popa
loope
les
mov
pop
bswap
stos
pop
test
ret
stos
test
arpl
xchg
pop
sub
or
mov
out
gs
dec
jmp
test
fsubr
add
je
ins
popa
or
pop
inc
pushf
xchg
scas
inc
pop
pushf
retf
or
ja
mov
sub
ret
iret
mov
cdq
xchg
push
mov
inc
jns
outs
stc
mov
nop
xchg
fist
add
jae
xchg
adc
push
pop
(bad)
sar
adc
xor
fmul
jne
mov
(bad)
pop
jle
repnz
out
add
popa
mov
dec
addr16
inc
(bad)
aas
pop
rol
cmp
jnp
inc
sar
pop
pop
and
ins
cmp
jle
pushf
call
push
paddd
lahf
imul
leave
push
repnz
cdq
and
add
push
pop
jns
xchg
(bad)
cmps
fstp
jbe
fcom
sbb
pushf
nop
iret
rol
or
push
pavgb
jp
(bad)
ss
dec
pushf
aam
cdq
xchg
stos
jge
cdq
fst
dec
inc
cmc
xchg
out
stos
rol
cli
jo
sti
addr16
xchg
sbb
es
xor
std
or
rol
push
mov
xor
mov
icebp
dec
mov
jne
nop
stc
sbb
mov
imul
push
sbb
sub
test
fnstcw
mov
sub
sub
push
popf
fld
pop
mov
jne
xor
cmp
bound
pop
mov
hlt
mov
sbb
daa
ror
rol
in
pop
pminub
dec
(bad)
rcr
push
inc
fs
xchg
pop
mov
cmp
and
lods
mov
adc
add
and
mov
cdq
mov
retf
pop
aas
addr16
mov
xor
fldenv
inc
test
movs
inc
iret
or
xchg
adc
aaa
add
xor
mov
sub
inc
jp
xchg
out
in
adc
sbb
inc
xchg
(bad)
sti
adc
sub
in
loop
and
mov
(bad)
mov
inc
dec
mov
mov
push
mov
mov
clc
inc
mov
stc
pop
sub
fcomip
rol
cmp
pop
in
jmp
iret
call
push
cli
jne
add
cmps
jb
test
gs
fs
inc
stos
ss
or
in
jnp
ins
sbb
xchg
mov
sub
aaa
push
dec
pop
(bad)
retf
xchg
xchg
pop
jb
out
ins
div
ins
xchg
cdq
cmp
div
pop
push
(bad)
stc
cmp
retf
addr16
dec
iret
xchg
add
ins
mov
dec
jo
xor
push
outs
test
fstp
js
cmp
push
xor
(bad)
or
inc
ins
sub
ins
pop
push
fs
pop
hlt
adc
dec
ins
sbb
nop
xlat
sub
pop
popa
sbb
or
push
js
jno
loope
nop
cmps
shr
iret
imul
clc
adc
mov
stc
in
pop
xor
mov
sbb
cli
xchg
push
inc
cmp
fimul
sub
and
mov
mov
ins
sbb
pusha
or
outs
retf
outs
xchg
pushf
cmp
addr16
mov
ins
imul
pop
push
push
xchg
jae
adc
sbb
xchg
fisttp
scas
in
and
sub
add
loopne
or
pop
add
daa
sub
fmul
addps
dec
sub
or
xchg
cmp
xchg
ficom
xor
push
js
rcr
ins
jp
dec
fs
inc
sub
add
inc
enter
cmp
push
fimul
sub
je
je
mov
pop
pushw
outs
ins
lods
pop
mov
mov
xchg
mov
mov
iret
xchg
lds
jp
pop
or
mov
push
rol
adc
xchg
mov
push
dec
cmp
lock
or
sub
jne
int3
je
lock
outs
fcomp
sub
and
test
xor
mov
les
ss
(bad)
ficomp
je
sub
shl
mov
pusha
xchg
jge
fcmove
(bad)
cmp
push
es
(bad)
hlt
cmps
or
jg
add
mov
xchg
dec
add
imul
pop
dec
stc
les
mov
mov
dec
jle
loop
out
imul
dec
jmp
ret
xchg
mov
js
xchg
repz
push
test
sahf
xchg
sti
mov
ja
retf
jns
call
mov
and
or
inc
les
jmp
jb
push
and
adc
pop
cld
cmp
div
enter
inc
test
add
retf
test
xchg
jbe
jmp
retf
test
ds
rcr
or
loop
sub
xchg
mov
sub
fadd
xchg
cdq
mov
sub
add
jns
push
jbe
ret
cld
mov
pusha
ss
push
pusha
mov
pop
les
xor
mov
sub
cli
xor
add
sub
lea
data16
pop
add
loopne
out
aaa
jb
loopne
aam
into
push
sub
cmp
loopne
push
inc
or
xor
cmp
hlt
fs
ins
mov
shl
mov
inc
and
rol
ins
push
push
inc
inc
cli
(bad)
cmp
enter
push
mov
sub
push
jmp
outs
pop
es
sub
xchg
enter
into
mov
fdivr
sub
mov
je
ror
mov
fcomp
push
in
enter
fnstcw
jmp
mov
loopne
pusha
xor
sti
mov
pop
pop
mov
jmp
cwde
mov
inc
jns
outs
mov
ins
movs
pop
(bad)
or
jp
in
fsub
xchg
sti
inc
ja
cmp
xor
jge
aas
and
(bad)
out
lahf
int
jg
pop
hlt
rol
pop
dec
retf
xor
jo
ins
stos
xchg
sub
xor
pop
arpl
lahf
jle
jge
in
inc
or
xchg
jp
outs
call
sbb
shl
jle
lods
inc
pop
mov
xor
pop
jne
test
push
push
pop
test
movs
call
xor
mov
inc
cmp
test
dec
std
cmp
cmp
hlt
adc
fisttp
inc
scas
xor
mov
push
call
shl
ret
stos
repz
aad
xchg
mov
push
cmp
gs
ins
xchg
ins
cwde
fild
clc
pop
nop
jl
mov
mov
shl
test
in
sbb
clc
mov
imul
xchg
(bad)
jne
test
mov
mov
jg
pop
neg
add
jae
sbb
or
push
dec
inc
jbe
and
pop
ds
sbb
xchg
popf
cdq
mov
call
xchg
les
jg
dec
mov
in
daa
je
je
fcmovu
arpl
pop
aam
and
dec
push
(bad)
or
out
pop
call
cmp
pop
push
retf
push
cmps
data16
and
pop
ror
arpl
or
cs
push
mov
sub
xchg
ret
pop
and
sbb
pop
xchg
es
sbb
icebp
adc
call
jle
xchg
addr16
je
stc
gs
pop
int3
fldenv
jne
dec
or
je
push
mov
movs
les
fstp
int3
add
inc
les
sbb
ins
fild
icebp
fbstp
inc
push
stc
sbb
jns
sub
fcomi
cwde
push
int
push
dec
or
push
pusha
daa
add
and
(bad)
sahf
movs
pop
pop
sbb
ins
fimul
sbb
mov
dec
jp
shl
xchg
xor
aaa
aaa
in
jo
or
clc
repnz
(bad)
push
ret
mov
popa
jp
adc
imul
lea
adc
data16
and
sub
add
int3
jmp
xchg
loope
scas
fcomip
mov
std
xor
clc
mov
ins
imul
ins
mov
adc
dec
cmps
xor
stc
mov
clc
(bad)
fst
daa
adc
fisubr
lods
adc
xchg
mov
xor
pop
mov
xor
idiv
imul
sub
adc
js
enter
imul
cdq
(bad)
push
call
cmps
dec
stos
push
test
cmp
push
or
mov
icebp
xor
cmp
cmp
pusha
cmps
or
fild
loope
into
push
cmps
(bad)
fistp
out
pop
bound
dec
jb
scas
jne
add
out
aam
push
push
fcomp
jnp
sub
push
or
dec
xchg
scas
dec
xor
mov
jmp
dec
jecxz
push
adc
hlt
lea
test
ficomp
les
jo
outs
ins
sbb
and
rcl
pop
sub
or
std
cwde
or
pop
inc
xchg
gs
je
cmps
push
loope
sub
pop
sub
sbb
mov
or
mov
jne
add
lea
jmp
leave
push
cmp
inc
and
and
repz
xor
sar
mov
adc
scas
aam
fcmovnu
test
int3
repz
and
scas
mov
in
pop
fadd
mov
fsubp
cli
out
push
push
mov
arpl
inc
fs
(bad)
int3
(bad)
ffreep
aam
jmp
pop
pop
sub
imul
stos
jno
movs
dec
push
setbe
add
cmps
cmp
push
cmp
scas
cmp
sub
imul
loop
inc
or
cld
out
aad
cmp
cmp
mov
mov
adc
hlt
gs
add
ins
xor
mov
pop
(bad)
shl
jo
lods
push
repnz
push
addr16
test
push
xchg
cmps
imul
repz
jmp
inc
enter
repz
mov
bswap
xor
enter
out
add
imul
push
in
add
mov
fadd
fld
push
adc
rcl
sbb
sub
mov
add
das
mov
mov
and
inc
add
je
cdq
test
ret
in
out
cli
adc
and
pop
sbb
jp
bound
aaa
pop
test
fdivr
xlat
cdq
movs
cmp
mov
mov
iret
pop
xchg
add
or
jae
enter
sti
ret
cwde
pop
xchg
cs
jp
pop
je
retf
mov
into
setne
or
inc
push
jo
das
jmp
in
pop
in
or
xlat
mov
mov
mov
sti
xor
test
aas
add
sub
fisttp
jp
scas
ret
ret
cmp
mov
sahf
rcr
xchg
pop
dec
retf
and
lods
add
pushf
pop
aam
lods
repnz
xchg
cwde
test
je
je
pop
out
add
jmp
(bad)
xor
mov
push
daa
movs
jecxz
adc
dec
and
xor
add
clc
jbe
pusha
loopne
sub
lods
in
dec
pushf
jne
push
mov
loopne
sbb
or
xchg
or
jecxz
jne
pushf
or
lock
pop
dec
clc
call
xor
test
pop
lods
cli
loope
sub
fist
dec
jns
(bad)
cli
adc
cmp
mov
leave
pop
dec
push
rep
jp
fcom
fcomp
push
jno
stc
pop
cwde
mov
mov
mov
outs
test
cmp
dec
je
mov
xor
cmp
cli
mov
sbb
(bad)
mov
pop
push
mov
pop
mov
loope
ds
test
jg
push
sub
push
xchg
pop
gs
retf
mov
ds
je
lds
inc
and
push
js
xchg
arpl
movs
pushf
pop
lock
icebp
in
sar
lds
in
xchg
(bad)
aad
pushf
adc
xor
js
ins
dec
sub
ins
pop
inc
ret
cmp
(bad)
ret
stos
loop
xchg
stc
scas
dec
rcr
imul
(bad)
in
rcr
ja
pop
es
mov
push
lods
or
stc
cmp
cld
outs
(bad)
out
push
std
loope
lea
fild
int
fmul
je
sub
and
sub
pusha
ja
imul
pop
sub
ja
repz
js
push
enter
cmp
dec
fwait
loope
cdq
mov
cmp
pop
adc
out
add
ins
add
and
fld
mov
mov
data16
sahf
fimul
mov
jb
icebp
cmp
sar
sbb
mov
push
xchg
add
inc
mov
hlt
jp
(bad)
arpl
add
in
jne
cmp
cwde
xlat
mov
sub
push
rol
sub
mov
pop
push
lods
int
popa
jns
xor
in
data16
cli
popf
pop
inc
jge
pusha
idiv
hlt
movs
inc
mov
stc
mov
loopne
div
(bad)
pop
push
push
ret
je
mov
inc
ret
xchg
mov
cmp
pop
push
pop
call
out
or
dec
iret
push
cs
call
loope
jne
(bad)
mov
les
hlt
out
shl
neg
lock
push
(bad)
push
mov
out
outs
ss
pop
jp
xchg
fwait
xor
cmp
outs
pop
sub
dec
outs
(bad)
outs
xchg
sbb
sub
xchg
push
in
sub
iret
jmp
push
imul
dec
mov
cld
xor
in
bound
mov
pop
popf
pop
sbb
jo
test
adc
leave
mov
fsubr
dec
and
pop
mov
leave
mov
pop
or
dec
rol
mov
clc
les
(bad)
movs
sbb
mov
cdq
mov
lds
cdq
mov
mov
repz
js
mov
xchg
lods
fstp
jge
mov
ret
ins
imul
mov
leave
push
fidiv
sahf
push
jnp
adc
pop
dec
push
mov
sbb
out
shr
loopne
or
imul
cmp
mov
fs
dec
pop
stos
mov
lahf
rol
movs
stos
cmc
xor
nop
in
shl
in
mov
ret
mov
addr16
push
imul
pop
or
adc
pushf
dec
jmp
sahf
xchg
clc
pop
(bad)
pop
xchg
mov
arpl
repnz
imul
or
sub
xchg
mov
mov
arpl
aas
aaa
aaa
mov
push
xchg
fisubr
shl
xor
cwde
fadd
mov
or
xor
sub
cmp
inc
pusha
daa
jle
mov
add
jmp
push
retf
popa
int
sub
pop
dec
addr16
cmp
imul
mov
les
cmps
fimul
jle
cs
mov
fstp
pop
inc
das
add
ins
or
nop
xchg
das
(bad)
sbb
mov
xchg
add
das
jo
repnz
movs
pusha
pop
xor
xor
and
(bad)
push
inc
add
sahf
or
lods
xor
pop
nop
xor
scas
bound
scas
ins
sub
js
dec
sbb
pushf
or
out
push
retf
fwait
mov
fdiv
in
ret
sub
cmps
ins
fdivr
push
fldcw
push
addr16
mov
adc
inc
icebp
xchg
cmps
ret
xor
dec
aad
mov
pop
ret
sub
mov
out
pop
(bad)
das
xlat
xchg
je
js
xchg
adc
cmp
inc
xchg
scas
mov
cmp
inc
stc
iret
xchg
test
dec
dec
mov
imul
ficom
mov
jmp
test
cld
xchg
mov
cld
enter
sub
bound
aaa
mov
cmp
(bad)
cmp
adc
js
call
cdq
mov
adc
fmul
sub
xor
jg
loopne
mov
and
push
loop
cmp
adc
adc
fadd
inc
jmp
adc
mov
inc
inc
adc
call
in
shl
cmp
cdq
ds
mov
arpl
cmp
not
jg
loope
arpl
jae
aam
push
clc
cmp
sahf
(bad)
lods
xor
lds
repnz
or
ror
daa
jmp
ja
push
pop
outs
stos
(bad)
outs
add
dec
dec
mov
imul
inc
fwait
popa
push
call
outs
in
sti
mov
ins
lods
or
in
out
in
push
cwde
pop
sbb
mov
pop
push
ds
out
ins
nop
mov
nop
icebp
dec
or
push
nop
add
cmp
mov
ins
cmc
movs
adc
es
sbb
hlt
xor
hlt
xor
sar
inc
pop
or
sub
adc
adc
jmp
sahf
bound
sbb
call
cmp
(bad)
mov
lea
cwde
ret
cmp
icebp
dec
or
push
sub
and
fst
xchg
mov
ret
retf
ins
jae
and
or
sub
mov
stc
xor
cmp
in
inc
push
push
push
cmp
std
sub
push
aad
pop
pusha
icebp
in
fsubr
jmp
sbb
fcom
pop
push
or
mov
cld
xor
jne
adc
inc
icebp
push
or
mov
dec
xchg
sbb
das
sub
sub
cld
xor
mov
push
jmp
ins
xchg
fs
cmp
std
ins
xor
push
js
rol
aas
xchg
scas
pushf
mov
popa
mov
mov
pusha
sbb
test
dec
and
ins
mov
mov
push
cdq
push
sbb
bound
pusha
xor
cmp
inc
fs
ss
xor
ss
xor
adc
arpl
dec
std
ins
fs
dec
pop
pusha
ins
pop
hlt
pop
sbb
lds
ret
nop
mov
inc
add
xor
shr
pop
lods
mov
mov
sbb
or
ss
pop
in
lea
scas
dec
jmp
adc
inc
out
test
clc
cmc
xor
clc
inc
dec
xchg
mov
(bad)
push
xchg
fnstenv
sub
mov
cmp
jbe
fsubr
rol
imul
add
pop
and
je
pop
lods
jns
xor
mov
pop
nop
cmp
cmp
mov
dec
mov
in
addr16
pop
sub
cli
movs
xor
add
fst
imul
adc
aaa
pop
sbb
ror
loopne
adc
fist
inc
cmp
sar
mov
repnz
push
fstp
cmp
push
and
bound
fmul
test
and
bound
jae
and
ins
in
arpl
jnp
aaa
xchg
imul
dec
cmp
and
arpl
xlat
int
dec
pop
xchg
in
(bad)
retf
clc
movs
pop
fs
add
inc
aam
inc
sar
in
mov
je
aas
arpl
xchg
(bad)
rol
call
dec
mov
xor
mov
and
hlt
push
and
add
jmp
nop
rol
mov
adc
rcl
ins
xor
push
cmp
imul
or
pushw
mov
fild
or
das
scas
hlt
call
pusha
jno
(bad)
(bad)
in
jcxz
pop
mov
leave
nop
jl
adc
ins
in
not
fistp
cmp
push
cmp
dec
ja
shl
and
fdivr
xchg
addr16
xchg
xor
mov
sbb
pusha
or
dec
add
push
test
cld
fstp
add
sub
pop
es
push
rcl
dec
sub
jmp
or
pop
pusha
jmp
mov
repz
loopne
ins
das
pop
scas
imul
daa
fisttp
(bad)
ss
iret
inc
xor
xchg
stc
inc
std
mov
scas
ins
aam
das
and
sbb
(bad)
out
mov
out
stos
inc
sahf
and
sbb
mov
xchg
cdq
loop
fadd
and
ficomp
mov
mov
addr16
xchg
clc
cmp
outs
clc
rol
ja
ins
mov
jne
test
aam
mov
imul
popa
jae
jecxz
xchg
fwait
cmp
ins
mov
addr16
ja
dec
fs
inc
sbb
fld
add
pusha
shr
sbb
sbb
mov
scas
mov
in
adc
push
pop
jns
xchg
aas
movs
jp
leave
pusha
retf
pusha
inc
and
mov
fldenv
or
(bad)
test
cli
iret
add
xor
pop
aaa
dec
shr
mov
jmp
test
ret
jmp
add
loope
hlt
and
mov
pop
jg
xchg
push
push
shl
inc
addr16
pop
mov
adc
leave
cmp
cmp
pop
adc
cmp
inc
cmp
push
or
sub
outs
mov
mov
inc
add
fs
sub
in
fisttp
mov
xor
in
aam
retf
(bad)
mov
mov
aad
inc
push
in
push
sbb
or
cld
sbb
dec
fsub
fild
imul
and
pop
ds
pop
sahf
jmp
mov
and
push
iret
out
pop
retf
cmps
xor
cld
js
retf
gs
dec
ss
cmp
and
mov
repz
lock
xchg
or
inc
mov
aas
mov
sti
add
adc
cmp
pop
lock
hlt
ret
aas
sbb
xchg
push
jb
add
into
retf
push
ins
js
cwde
iret
test
lea
clc
push
mov
sub
fbld
arpl
mov
pop
(bad)
mov
fwait
adc
rcr
jo
cli
add
std
int3
repz
jnp
inc
xchg
add
push
mov
jg
es
push
mov
sahf
jp
nop
dec
pop
add
mov
adc
out
mov
out
nop
push
cwde
adc
mov
xchg
inc
lods
scas
mov
sub
cmc
add
sahf
jb
repnz
pusha
je
mov
push
and
stc
in
je
jnp
mov
xlat
pop
pop
in
mov
jb
aas
mov
rol
lods
out
enter
aam
add
sub
mov
xchg
out
adc
nop
cli
xchg
xor
popf
call
call
rcr
cmp
lods
push
leave
retf
xchg
aaa
loopne
pushf
fucom
dec
and
ret
and
pop
idiv
aam
shr
int3
mov
xor
dec
or
sbb
outs
mov
jg
adc
mov
arpl
pop
js
mov
xlat
scas
mov
std
xor
gs
mov
pop
dec
sub
and
jmp
cmps
sbb
sub
jp
pusha
ss
ins
mov
lea
jb
fist
xchg
lods
and
jns
pop
mul
push
icebp
cmp
add
xchg
test
xchg
imul
jle
push
inc
pop
ins
loopne
je
xchg
jno
nop
pop
out
ins
fwait
in
push
push
lods
xchg
sbb
xchg
nop
pop
out
ins
fdivr
daa
xchg
ret
in
cmp
leave
ins
pusha
push
int3
(bad)
out
pushf
mov
mov
jbe
popf
mov
mov
enter
call
xor
sbb
fsub
jmp
sahf
xor
fstp
fcom
add
es
out
fbstp
neg
push
ins
loopne
jp
pop
repz
cmp
xor
add
lock
stos
jbe
mov
ins
adc
cli
dec
gs
pop
cwde
cmp
hlt
cmps
pop
shl
push
mov
mov
push
rol
push
clc
ret
out
adc
test
mov
les
add
mov
sub
push
add
mov
push
repz
je
es
sbb
add
mov
gs
pop
daa
inc
xchg
out
mov
dec
call
lods
daa
hlt
xor
mov
or
fisubr
push
sub
shl
cmp
test
fsubr
pop
mov
or
xor
pop
retf
cs
inc
inc
sbb
shl
dec
dec
mov
jb
xchg
mov
pusha
jb
pusha
ins
dec
pushf
adc
add
adc
test
cmc
push
push
pop
add
xchg
push
xor
(bad)
dec
outs
adc
lds
repz
inc
js
inc
retf
and
pop
or
sbb
fiadd
push
push
lock
mov
jmp
dec
cmp
nop
in
mov
xor
test
jne
sti
mov
je
call
lods
retf
adc
shl
jg
push
out
cmps
dec
shl
dec
jge
mov
sbb
cmc
adc
jecxz
fnstcw
test
or
xor
in
fisttp
inc
add
pop
mov
retf
int
aam
xchg
jb
ins
enter
push
popf
add
sbb
into
push
xchg
and
xchg
adc
mov
mov
push
pop
jns
pop
daa
iret
push
fs
adc
cmp
pusha
jge
retf
mov
and
jo
push
adc
xor
hlt
loopne
add
hlt
and
cmp
test
lea
xchg
inc
pop
and
or
xlat
pop
imul
fcom
pop
in
pop
sbb
and
popf
popf
push
xchg
pop
jb
retf
jo
fcom
dec
dec
and
jp
jns
push
stc
push
neg
jle
mov
stos
movs
mov
and
shl
nop
push
out
lea
and
clc
arpl
fldcw
lahf
or
call
cmp
dec
add
imul
mov
(bad)
mov
jne
and
add
or
fnstcw
jmp
jne
scas
cmp
inc
pop
jle
les
pop
add
stc
cs
xor
add
adc
adc
sub
dec
cwde
sub
pop
jnp
icebp
jae
pop
jns
movs
je
push
or
add
mov
pop
pusha
jg
and
in
sub
dec
cmp
pusha
mov
add
in
out
jne
pop
addr16
ss
and
mov
sbb
xchg
add
pusha
ss
and
ficomp
imul
inc
fs
icebp
in
cmp
(bad)
out
leave
push
jno
cs
add
loop
sub
ins
xor
sub
add
pop
jae
clc
imul
loope
addr16
ja
mov
mov
aas
xchg
fadd
jmp
dec
mov
aam
push
or
jns
or
push
out
leave
xor
add
and
push
cmp
push
imul
movs
out
mov
jbe
das
pusha
pop
sub
ret
cmp
push
dec
ss
sbb
sub
pop
out
dec
jae
popa
cmp
adc
push
mov
push
pop
ficom
fimul
mov
mov
fdivr
mov
mov
push
jmp
mov
pop
dec
adc
pushf
xchg
ret
pop
push
arpl
popa
(bad)
push
repz
mov
adc
pop
adc
or
adc
add
stos
push
hlt
fdivr
mov
in
ret
jae
mov
(bad)
mov
nop
jge
out
dec
mov
mov
pop
pop
hlt
xchg
scas
push
jp
xchg
lds
mov
test
inc
daa
pop
pop
xor
adc
addr16
scas
pop
jmp
(bad)
fisubr
mov
loopne
dec
pop
xchg
inc
jns
popa
in
into
sbb
or
outs
aaa
repz
aam
dec
cmp
mov
xchg
fimul
jge
pop
movs
outs
add
out
ins
sbb
mov
xor
lods
outs
jmp
ss
xor
pop
imul
cmps
in
mov
pop
rcr
(bad)
adc
inc
mov
das
ror
jl
shl
xor
(bad)
pop
xor
cli
scas
lods
shr
cld
inc
aad
rcl
push
hlt
xchg
push
scas
cmp
movs
std
sub
into
push
dec
jmp
cld
pop
pop
shl
cld
pop
dec
jmp
mov
rcl
imul
mov
pop
icebp
aad
mov
dec
nop
movs
fldcw
fdiv
clc
shl
cmp
adc
push
and
pop
sbb
adc
fimul
aad
sbb
icebp
xchg
or
pop
outs
into
adc
jnp
mov
cmp
mov
enter
xchg
retf
xchg
das
adc
repz
cmc
xor
jb
cli
pop
xchg
add
ret
js
add
ins
sub
pop
nop
js
fbld
mov
sub
jecxz
ins
loopne
mov
mov
retf
addr16
(bad)
ins
int
bound
and
cmp
inc
ss
loopne
and
jle
xchg
ldmxcsr
jno
lea
sbb
es
xor
jae
xchg
mov
cmp
push
or
shl
imul
push
push
sbb
mov
popa
in
push
or
test
mov
push
int3
xchg
(bad)
shl
pusha
push
leave
pop
addr16
xor
call
bound
scas
adc
xchg
sbb
call
and
nop
mov
mov
mov
lods
addr16
test
mov
sbb
adc
inc
ret
add
loope
(bad)
xor
sahf
sub
into
adc
test
jno
movs
sub
pop
imul
movs
dec
pop
outs
pushf
xchg
ja
int3
(bad)
xor
outs
mov
lea
in
je
jns
repz
inc
in
xor
mov
call
push
jmp
mov
lods
lods
call
push
xchg
ffree
and
call
jle
and
outs
xchg
icebp
mov
or
int
cwde
inc
mov
sahf
pop
push
cmc
fnstcw
test
mov
les
jge
push
pop
push
mov
or
mov
sub
les
int3
adc
cmp
cmp
out
jae
out
scas
pop
push
adc
aam
and
sub
pop
xchg
jne
xor
mov
addr16
into
jge
push
mov
out
cmc
push
addr16
push
into
loop
pop
loopne
lods
pushf
popa
call
xchg
test
sub
iret
pushf
push
pushf
lds
sub
or
jle
fsub
das
pop
(bad)
dec
push
adc
mov
add
(bad)
or
xchg
nop
add
sub
out
scas
inc
mov
aas
adc
jns
xchg
cmp
je
push
mov
pop
stos
iret
mov
add
xor
clc
adc
icebp
neg
mov
xchg
or
mov
out
xor
or
and
sbb
jge
and
pusha
xor
sbb
push
dec
test
imul
test
mov
mov
xchg
adc
jge
sbb
dec
sbb
dec
test
sti
sbb
xor
lea
jo
out
pusha
loop
data16
xlat
jnp
add
push
xor
mov
xchg
dec
inc
dec
cmps
ds
pop
mov
retf
dec
movs
pop
dec
dec
mov
jnp
cmc
push
and
ja
aad
mov
mov
pop
sub
and
jl
mov
push
cmp
ja
fistp
xor
xchg
je
inc
mov
idiv
jo
sub
cmp
pop
sub
dec
sbb
mov
cmp
dec
mov
aad
ficomp
mov
lock
sbb
push
push
or
xor
mov
push
cmp
cmp
movs
inc
mov
xor
pop
popf
sub
mov
jmp
outs
xor
imul
add
sbb
fimul
imul
sub
sbb
mov
or
push
ins
(bad)
(bad)
in
sub
fwait
pop
pop
push
add
hlt
pop
push
mov
(bad)
dec
loope
jb
(bad)
jae
imul
jo
pushf
imul
jp
sub
jns
xchg
shr
cmp
jb
(bad)
(bad)
addr16
inc
jp
mov
inc
or
mov
popa
xchg
in
sbb
mov
repz
sub
iret
pop
sub
sub
pop
dec
arpl
jg
mov
sbb
js
xchg
jge
xchg
jb
cld
retf
sub
inc
lods
call
pop
mov
test
jae
cld
leave
push
jne
or
mov
enter
test
xor
push
cwde
xchg
and
imul
repnz
inc
inc
(bad)
ds
stos
mov
xor
outs
jns
fldenv
stc
out
push
mov
cmp
dec
pop
sub
inc
or
push
sub
cmp
jmp
sbb
xor
push
(bad)
xor
cs
mov
(bad)
data16
mov
in
sub
sbb
jp
aam
pop
mov
and
hlt
cwde
mov
hlt
mov
or
xor
aad
lods
hlt
call
sub
xchg
pop
mov
xor
in
pop
sub
and
hlt
in
and
pop
cs
ins
fdiv
ret
(bad)
ins
int3
xchg
shr
int3
(bad)
xor
aad
lods
hlt
call
sub
xchg
pop
rol
lods
xchg
outs
mov
sbb
hlt
xchg
pop
xchg
call
cmp
pop
cmc
das
sar
stos
pop
shl
out
aas
sbb
cmps
pusha
mov
lods
fsub
pop
(bad)
leave
xor
inc
int3
test
pop
in
cmp
int
in
stc
dec
or
int
aas
push
push
sub
clc
or
in
xor
sub
add
inc
sbb
and
sbb
inc
push
hlt
arpl
iret
das
aas
fnstcw
ins
enter
fmulp
sub
shr
add
pusha
dec
lds
(bad)
and
push
ss
xchg
inc
cmc
xor
push
mov
cli
push
or
enter
movs
fwait
in
push
out
les
int3
pop
hlt
pushf
dec
mov
sbb
imul
cs
aaa
cmp
dec
data16
retf
cmp
lock
mov
lds
xor
mov
repz
and
call
int
lock
add
idiv
xchg
ds
xor
aaa
aam
stc
lods
xchg
cmps
xor
pop
xchg
cmp
es
cdq
jp
push
cmp
aaa
fadd
out
mov
xchg
cmp
das
(bad)
movs
enter
sub
sbb
cmp
neg
es
cwde
mov
in
cmp
in
loopne
pop
sbb
cmp
lock
xor
inc
cwde
stos
inc
into
push
and
lahf
fiadd
jnp
push
int
in
mov
test
xor
shl
stos
dec
mov
sar
daa
cmps
cdq
clc
or
std
cmp
push
mov
inc
mov
xlat
or
shl
gs
hlt
rol
adc
pop
loopne
fidivr
sub
or
aam
int
xchg
out
ja
and
data16
imul
mov
mov
jbe
push
in
jbe
cmp
inc
cwde
mov
cmp
inc
retf
adc
xchg
and
clc
sbb
inc
fucomp
hlt
movs
push
repnz
sub
push
cmc
std
xchg
jl
sub
dec
mov
jo
mov
adc
pop
cmp
xor
test
xchg
push
add
stc
mov
clc
adc
jne
cmc
dec
pop
mov
pop
mov
fisttp
std
mov
cld
(bad)
ins
cwde
cld
call
iret
pop
repnz
movs
data16
scas
xchg
sti
xchg
adc
ins
mov
lods
and
xchg
mfence
mov
daa
repnz
cld
movs
data16
retf
or
sbb
inc
cdq
xor
addr16
ins
xor
add
lea
and
cmp
jae
add
lea
in
lahf
sar
scas
mov
and
add
out
sbb
lock
pop
loope
jle
popa
cs
cmp
cli
sahf
mov
test
(bad)
fisttp
inc
in
mov
lea
push
mov
pop
xchg
pop
out
mov
push
xchg
or
ficom
lods
clc
and
mov
add
in
(bad)
outs
loope
ins
jle
or
xor
cmove
mov
retf
cmps
fisubr
or
hlt
mov
bound
cmp
xchg
mov
xchg
push
iret
mov
(bad)
ins
int3
xchg
xchg
or
jne
xchg
and
imul
xchg
mov
(bad)
cdq
and
nop
adc
lea
pushf
cs
xor
cdq
jmp
mov
cmc
icebp
inc
and
pop
mov
jge
sbb
push
ins
cmp
les
pop
add
xchg
shr
add
push
push
rcl
jae
mov
dec
inc
je
and
sub
adc
pushf
sub
xor
add
rcr
out
lea
xchg
out
addr16
sbb
inc
hlt
and
fsubr
push
shl
cmp
hlt
mov
sar
cdq
and
mov
out
lea
popa
call
pop
pop
jb
mov
cmp
mov
push
ins
fs
into
hlt
movs
add
retf
adc
rcr
xchg
mov
(bad)
add
xchg
pop
and
jo
cwde
popa
shl
xchg
ja
jne
push
int
sbb
pushf
xchg
mov
and
and
hlt
lea
int3
pop
add
and
and
rcl
test
imul
shr
ja
pop
icebp
sahf
pusha
push
jae
imul
rol
in
ins
and
ins
ds
mov
out
in
add
add
jmp
mov
dec
rcl
pushf
sub
shr
mov
jecxz
repz
mov
mov
and
push
in
xchg
push
fisubr
and
xor
lea
mov
xor
shl
pusha
adc
and
pop
and
xor
call
jge
xchg
sub
icebp
cmp
and
and
cmp
sbb
xor
pop
xor
rol
adc
in
or
test
jo
and
loop
je
jbe
sahf
push
dec
or
sub
or
adc
pusha
stc
mov
sahf
sar
xchg
sub
test
dec
rcl
enter
pop
clc
aaa
push
ficomp
sub
inc
pop
repz
jle
in
pop
xchg
fsub
lds
push
push
clc
int3
mov
out
lea
and
jne
xchg
pop
aaa
and
test
or
cld
jae
test
imul
pop
sbb
cmps
and
and
pop
push
dec
dec
inc
mov
push
mov
scas
and
adc
xor
and
or
shl
cmp
hlt
mov
mov
or
adc
jae
lahf
imul
pop
or
mov
add
mov
push
pusha
pop
sub
or
fild
or
jmp
dec
jne
stos
pop
mov
jnp
sub
call
pop
pop
ds
cmp
cmp
out
test
sar
sub
ds
push
test
pushf
xchg
aad
int3
out
dec
fsubrp
cmp
jl
or
pop
(bad)
das
xchg
fst
std
pop
or
std
xchg
cmp
mov
cmp
mov
cmp
mov
inc
iret
add
add
dec
push
das
movs
xchg
lods
push
out
mov
xchg
and
js
cld
mov
xchg
push
xor
data16
pusha
es
(bad)
xor
bound
hlt
and
push
jecxz
cdq
mov
js
lods
pop
dec
ins
pusha
pop
adc
inc
sbb
jo
xchg
cmp
fdivr
pusha
push
push
pusha
imul
xor
jmp
inc
sub
ins
inc
dec
pop
pop
add
cmp
xchg
std
int
test
jle
cli
mov
pop
mov
xchg
in
inc
cli
loopne
pop
mov
repz
sahf
(bad)
arpl
xor
aam
es
add
sbb
cmp
in
ds
in
data16
das
movs
sub
mov
in
mov
jecxz
push
clc
mov
sbb
sub
xor
push
pop
mov
jp
adc
lahf
test
fcomp
push
addr16
cmps
clc
cmp
pop
pop
outs
aas
dec
in
pop
ja
push
arpl
lock
cmp
cli
xchg
mov
cmp
pusha
add
les
data16
imul
retf
and
ins
int3
pushf
xchg
add
pop
sub
imul
les
not
sbb
aam
ja
push
dec
outs
dec
ror
adc
aaa
fdivr
sub
push
xchg
pop
dec
jp
xchg
cmp
fcom
cmp
imul
clc
rol
push
xchg
xchg
sub
dec
push
pop
jb
inc
pop
imul
idiv
hlt
frstor
fwait
in
fdivrp
repnz
xchg
sub
dec
or
fstp
jb
test
stos
ins
fcomi
add
cmp
add
sub
dec
sbb
lahf
(bad)
push
push
or
sbb
ret
jb
pop
imul
pop
arpl
clc
sub
xchg
fiadd
xchg
std
shl
sub
cmp
ret
mov
mov
cli
and
repz
jnp
add
pop
and
fadd
jnp
cmp
sub
dec
pop
stc
aas
std
xchg
add
xchg
xchg
jbe
pop
lea
call
mov
push
xor
fldenv
and
std
(bad)
mov
mov
lock
(bad)
and
mov
mov
pop
xor
inc
and
gs
cmp
imul
icebp
outs
sbb
arpl
mov
push
lods
mov
dec
hlt
bound
shr
mov
push
dec
pop
data16
push
and
cmp
xlat
sbb
js
clc
nop
enter
mov
sahf
pop
cwde
cld
inc
adc
clc
fs
icebp
ins
pop
sahf
pop
mov
js
inc
cmp
lock
je
pop
popa
in
add
cwde
add
adc
add
ins
pop
sahf
pop
mov
pop
cwde
nop
push
mov
fxch
js
inc
fs
in
xor
aaa
(bad)
or
mov
lock
cmp
out
in
or
or
pusha
popa
call
in
mov
dec
in
push
fild
sbb
(bad)
fld
dec
xor
xchg
xchg
shl
pop
cwde
jge
xchg
add
popa
inc
fcmove
in
test
xchg
push
cmp
mov
mov
adc
mov
outs
xchg
gs
je
hlt
mov
dec
int3
push
test
sbb
gs
inc
sub
hlt
jmp
(bad)
and
xor
(bad)
mov
xchg
xor
aaa
das
jle
pop
mov
(bad)
call
pop
adc
ss
adc
ins
frstor
pop
pushf
fucomp
cwde
imul
mov
fs
or
js
jo
xor
push
mov
enter
data16
inc
addr16
ss
and
data16
scas
dec
pop
add
add
cld
cmps
xchg
imul
xor
ret
fimul
hlt
in
loopne
fsubr
imul
rcr
ins
enter
rcr
dec
mov
mov
lods
ins
test
fwait
ins
sub
and
and
xchg
push
adc
fbstp
mov
dec
fs
(bad)
jo
fadd
jmp
jmp
js
mov
ret
out
and
cmp
outs
aaa
mov
enter
addr16
inc
(bad)
in
cwde
fs
or
js
out
jmp
ja
xchg
and
and
js
js
xchg
fwait
out
dec
cmp
inc
xor
xchg
aam
hlt
xchg
shl
or
and
hlt
ss
mov
inc
js
xor
icebp
pop
add
or
das
mov
es
cmp
cli
cmp
or
mov
dec
push
(bad)
or
fidiv
gs
or
movs
pop
xor
fcomp
or
dec
cmp
cwde
sbb
dec
test
xchg
fidiv
ins
xchg
or
pop
or
ror
adc
ret
inc
es
cmps
les
(bad)
or
xchg
and
dec
sub
or
sub
sub
ja
bound
pop
js
push
cmp
sbb
idiv
je
xchg
inc
shl
adc
or
mov
xchg
push
int
and
pop
cmp
das
jmp
cmp
push
xlat
push
ins
add
inc
pop
mov
add
out
clc
neg
ror
cwde
jp
test
pop
es
sub
push
jmp
pop
pop
sub
hlt
push
mov
data16
pop
mov
xor
cdq
sbb
sub
jo
hlt
ins
mov
daa
xor
pop
hlt
push
or
cmp
cmp
dec
bound
xchg
push
adc
pop
pusha
call
push
pop
and
loopne
pop
add
xchg
pusha
js
out
xchg
inc
add
lock
sbb
loope
xchg
pop
ret
or
add
xchg
(bad)
adc
add
daa
adc
fdivr
jne
mov
pushf
mov
cmp
add
add
xchg
add
pop
jmp
out
jmp
pop
fstp
cmp
jb
sub
loope
and
pop
xlat
push
push
aad
add
push
xchg
mov
or
stos
xchg
push
iret
mov
ror
or
gs
ficomp
outs
pop
out
shr
xor
enter
jecxz
add
(bad)
fidivr
adc
mov
pop
(bad)
stos
mov
movs
xchg
jle
inc
push
enter
mov
cmp
add
sub
inc
mov
frstor
push
push
hlt
call
(bad)
pop
push
dec
cdq
and
inc
xchg
sub
aaa
jmp
js
repz
mov
movs
int
(bad)
mov
pop
inc
test
dec
sub
lds
frstor
adc
test
sub
push
retf
or
movs
popf
arpl
sbb
xchg
ret
bound
repz
fbstp
lock
or
lods
xor
nop
push
lock
ret
push
lds
xchg
mov
ret
and
call
aas
pop
lock
(bad)
repz
pop
pop
in
cmp
or
mov
add
arpl
lds
ret
jg
cmp
mov
mov
aam
pop
mov
push
sbb
xchg
add
scas
repnz
nop
out
lea
test
xchg
repnz
std
xchg
ds
pop
mov
pop
xchg
shl
jecxz
in
arpl
cmp
add
xor
mov
nop
arpl
cwde
ret
out
mov
xor
out
(bad)
out
ins
fmul
pop
fldz
jle
pushf
add
(bad)
cli
jne
cmps
sbb
or
popf
push
nop
clc
aad
(bad)
cli
ds
pop
out
test
xchg
fnstcw
das
out
xchg
sub
adc
shl
xchg
dec
mov
cmp
outs
ret
lahf
pushw
repnz
cmp
test
cmp
inc
icebp
icebp
push
cld
and
and
in
adc
ret
jae
or
add
ret
movs
fldl2e
adc
sbb
cmps
fst
jns
aas
xchg
int
jmp
out
sahf
push
cmps
popa
xchg
mov
addr16
hlt
out
out
movs
mov
lods
call
sahf
lods
pop
jle
ffreep
outs
push
cmp
int
imul
test
and
cli
setae
jno
ds
into
ds
push
pop
clc
dec
retf
test
hlt
xor
xchg
aas
int3
cmp
icebp
(bad)
int
push
movs
add
xchg
jno
push
shl
xor
movs
fidivr
mov
cmp
jne
inc
pop
cmps
jmp
jae
aam
ret
ret
add
inc
dec
jnp
lea
jne
mov
cwde
sub
loope
adc
push
mov
retf
test
lods
mov
call
lods
sub
jae
out
mov
sahf
and
adc
enter
pop
push
loop
inc
cmp
imul
jb
in
mov
icebp
in
ins
sbb
ret
pop
stc
fidiv
imul
and
add
lods
js
and
mov
imul
shl
mov
xchg
add
jge
clc
xchg
and
or
in
das
cwde
sbb
nop
clc
(bad)
es
cmps
fcmovnu
lods
out
dec
fstp
iret
ins
les
nop
add
jnp
xor
cmp
add
sahf
repz
pop
rcl
(bad)
fisubr
xor
fcom
jnp
jecxz
xchg
sbb
mov
or
and
outs
movs
dec
jecxz
ret
imul
les
xor
cmp
stos
outs
mov
and
rcr
push
and
adc
aam
jne
mov
inc
mov
and
mov
loope
repz
in
cmp
aam
push
jns
add
pop
fsubp
xor
jge
sub
mov
cmc
(bad)
leave
jb
clc
movs
sub
sub
jmp
addr16
cmps
shl
clc
popa
ins
call
jne
inc
inc
aam
dec
(bad)
xchg
daa
stos
cs
jb
call
push
jle
and
xor
pusha
cmps
into
xlat
(bad)
sbb
ret
pusha
cmps
dec
mov
aas
fisubr
loop
add
int3
add
fdiv
jae
out
push
jg
push
ret
(bad)
popa
jns
mov
ret
inc
dec
inc
fdivr
fcmovu
push
cmps
xchg
or
inc
scas
xchg
push
loopne
mov
dec
push
mov
xor
pop
dec
retf
in
cmc
test
mov
aad
movs
loopne
js
xchg
sbb
dec
sub
cs
jecxz
jmp
outs
imul
in
or
pop
xor
cld
xchg
js
push
cmp
lock
xchg
pop
mov
mov
in
xchg
or
inc
cmp
pop
out
jmp
nop
sbb
pop
std
inc
push
and
mov
ret
loop
(bad)
nop
loope
xchg
jae
dec
jmp
ins
fadd
inc
and
adc
rcr
sbb
cmc
mov
cmp
mov
call
xchg
mov
lahf
int3
(bad)
mov
mov
push
inc
js
dec
xchg
jb
mov
adc
out
push
js
movs
pop
sub
mov
cli
xchg
jmp
mov
cld
mov
pusha
dec
sub
dec
xchg
or
stc
inc
xor
pop
push
xchg
jne
mov
cli
lock
pop
imul
mov
arpl
sub
outs
stos
aad
cwde
push
sar
loop
js
xchg
fs
sti
int3
or
pusha
pop
pop
adc
pop
fistp
jge
ror
mov
jns
jno
lock
rol
test
xchg
add
cmc
rcl
adc
iret
sbb
daa
xchg
int
in
call
xchg
scas
retf
mov
mov
out
rol
pop
mov
ins
hlt
sub
jb
mov
adc
add
inc
xchg
cs
mov
lea
pop
mov
mov
xor
ficomp
aad
scas
jno
and
cmp
loope
push
icebp
push
pop
addr16
inc
or
loope
pop
mov
xlat
hlt
cdq
repnz
pop
add
fstp
or
xor
fstp
jne
jnp
pop
jmp
popf
addr16
jae
inc
pusha
jnp
test
sub
or
pop
jne
mov
sub
addr16
aam
xchg
js
loopne
into
out
push
adc
jbe
in
pop
and
fs
add
adc
test
mov
pop
mov
stos
mov
dec
jno
fistp
jmp
int3
xor
xchg
xor
data16
popa
aam
loope
or
loope
ins
add
and
int
mov
inc
cmp
push
adc
xchg
mov
inc
mov
add
stc
pop
daa
dec
cmps
dec
rcr
sahf
xor
fstp
jp
xchg
push
div
mov
jmp
shl
sub
aaa
adc
mov
xchg
push
mov
(bad)
xchg
mov
mov
add
dec
int3
xchg
jmp
cdq
ins
jmp
shl
adc
add
inc
add
xchg
push
pop
(bad)
call
addr16
or
pop
outs
and
jns
mov
cmp
retf
sahf
stos
add
mov
jae
mov
imul
push
aad
cmps
rol
mov
adc
cmp
stc
hlt
movs
jnp
sub
icebp
xchg
pusha
cmps
pop
pop
stos
push
addr16
mov
and
pop
sbb
dec
push
mov
fisttp
pop
sbb
pop
pop
cld
arpl
sub
cmp
icebp
add
test
adc
in
pop
push
les
sbb
(bad)
cmp
cmp
ja
and
imul
(bad)
pop
jmp
aas
cmp
fimul
mov
leave
out
pop
test
add
sbb
out
mov
mov
xchg
cmp
mov
pop
cwde
dec
leave
pop
pop
aam
arpl
dec
les
mov
push
clc
xor
shl
in
data16
jns
mov
mov
sub
mov
fldenv
cwde
mov
jb
push
ds
sub
cmp
jo
pop
push
xchg
and
jae
in
or
pop
push
cmp
jae
shl
jmp
into
jo
enter
adc
js
pusha
stos
add
shl
cmp
inc
push
cmp
jb
sub
dec
arpl
test
lods
xor
pop
pop
pop
pop
mov
loopne
stc
enter
cld
mov
mov
shr
mov
arpl
push
sub
test
inc
jne
cmp
movs
jnp
mov
mov
pop
mov
mov
mov
bound
sub
nop
pop
xor
pop
loope
dec
add
push
popa
pop
mov
xor
jmp
lock
pop
xchg
leave
jo
push
nop
int
xchg
bound
into
add
imul
js
(bad)
in
dec
dec
add
push
stc
and
add
out
adc
ds
sbb
xor
mov
cdq
xchg
mov
dec
xor
push
aas
push
cmp
mov
push
mov
push
push
cs
lods
pop
es
lahf
ror
outs
rcr
and
pop
ror
test
push
sbb
sub
or
cs
ins
in
jb
cdq
das
add
mov
outs
sub
bound
das
adc
inc
in
test
mov
sbb
sub
mov
xor
jle
lds
and
sub
mov
adc
loope
lahf
sub
aas
test
cwde
cmp
test
push
jbe
push
pop
push
imul
push
xor
test
push
pop
xchg
stc
push
jle
es
xor
jae
mov
add
xchg
mov
aaa
pop
das
dec
and
js
jge
ss
je
mov
lods
cs
pop
mov
cmp
mov
fidiv
xchg
retf
xlat
xor
jbe
push
jb
icebp
int3
inc
ret
cmp
add
ins
(bad)
shl
clc
fisttp
jg
mov
dec
jno
mov
mov
and
add
imul
jg
pop
aaa
aas
pop
mov
push
mov
push
(bad)
push
not
mov
cmp
jg
sub
aam
cmp
rol
into
(bad)
cmp
xchg
and
mov
mov
inc
add
popf
mov
(bad)
iret
mov
mov
lds
inc
nop
cmp
cmp
std
cmp
mov
cli
push
outs
xor
retf
jno
lahf
pusha
jle
pop
inc
fs
outs
out
adc
ss
mov
dec
stc
rcl
pop
adc
(bad)
sub
outs
xchg
cmps
mov
daa
push
scas
xor
or
je
ds
popa
sbb
mov
sbb
loope
aad
(bad)
jmp
scas
ja
mov
scas
sbb
or
cmps
mov
addr16
add
xchg
out
pop
jge
adc
and
js
test
xchg
push
sbb
mov
jne
lea
fwait
cmc
fimul
inc
data16
es
cmps
jmp
outs
je
rcl
pop
inc
ins
mov
into
pop
push
rcr
les
add
add
pusha
add
stc
push
or
enter
repnz
aaa
push
or
pop
push
or
into
push
sbb
pop
push
bound
scas
pop
adc
inc
bound
dec
shl
jmp
cli
loopne
cmp
jo
repnz
xchg
fisttp
call
data16
cwde
jmp
aam
out
ss
xchg
cwde
lods
dec
loopne
push
ret
xchg
xchg
push
pop
push
pop
aam
xor
cmp
fiadd
out
es
imul
sbb
nop
leave
jbe
sub
push
xchg
sub
xchg
jmp
pusha
jbe
xchg
js
or
mov
push
lds
push
loopne
xchg
dec
sub
jle
sub
in
test
inc
in
inc
sub
xchg
cli
xchg
outs
push
stc
stos
scas
sub
dec
aad
in
xchg
clc
sub
adc
scas
mov
cmp
xchg
psraw
pop
out
xchg
sbb
mov
xchg
push
mov
sub
pop
add
pop
adc
aas
push
cwde
cld
sub
xchg
pop
jp
in
dec
shl
sbb
sub
jae
(bad)
pop
jg
add
(bad)
js
ficomp
daa
in
xchg
jg
jo
lea
sbb
and
jno
les
movs
push
ror
and
and
pop
mov
pop
or
sbb
jbe
push
imul
cmp
gs
pop
xor
add
lock
loopne
(bad)
xor
push
mov
or
jne
je
jns
call
adc
push
dec
imul
mov
pop
push
mov
dec
mov
jns
popa
cmp
sub
repnz
enter
scas
mov
scas
xor
jge
sar
nop
aam
add
push
sub
out
sub
push
adc
movs
push
call
ins
push
push
sub
(bad)
push
test
or
add
mov
dec
mov
mov
cmps
icebp
push
mov
sbb
mov
sbb
push
repz
jbe
cld
xor
and
clc
pop
lock
icebp
xor
out
out
loope
push
mov
ins
jp
inc
cli
pop
loop
(bad)
in
call
pop
out
call
add
fst
in
pop
adc
or
sub
lock
cmp
ret
icebp
ret
sahf
stc
inc
jmp
push
xchg
adc
call
push
and
push
ret
push
retf
pop
pop
ret
js
int
loopne
push
shr
xor
jae
mov
pop
xor
test
xchg
stos
inc
jae
cwde
xchg
cmp
call
xor
xor
(bad)
in
das
rcl
nop
push
(bad)
pop
push
mov
fucomp
jae
in
fmul
inc
fisttp
and
inc
mov
dec
push
(bad)
shr
imul
jp
(bad)
and
repz
mov
sub
push
(bad)
addr16
shl
xchg
jne
cli
mov
push
add
add
sub
out
cmp
test
addr16
pop
dec
test
inc
pop
jb
pop
cmp
jmp
ins
out
cmc
jae
pop
test
pop
loop
cmp
hlt
sbb
mov
pop
push
cmp
rcl
test
or
stos
jne
out
or
in
fcomp
in
(bad)
push
jne
jns
push
sub
out
ficom
xor
rol
rcl
mov
mov
rol
xchg
cs
push
mov
dec
xchg
mov
cmp
leave
sub
dec
sub
out
js
and
lds
pop
mov
test
push
push
into
mov
xchg
and
jecxz
loopne
push
imul
bound
jmp
mov
jns
repnz
push
das
stos
test
daa
iret
mov
imul
sub
sub
rcl
push
dec
aad
mov
iret
push
push
inc
sub
cmp
and
dec
repnz
iret
mov
cmp
stc
loopne
pop
cmp
sbb
mov
adc
pop
idiv
push
xchg
sub
mov
ds
cmp
fdiv
repnz
sbb
xchg
lods
dec
or
leave
push
sub
rcl
sub
adc
cmps
sbb
dec
xor
push
push
xchg
push
cmp
cmp
ja
jno
push
cs
pop
jb
push
outs
bound
aad
cmp
sbb
mov
pop
test
mov
dec
fmul
test
aas
out
call
cmp
mov
mov
pusha
pop
test
cld
leave
inc
stos
xor
push
mov
mov
mov
adc
out
or
pusha
cmp
(bad)
fiadd
pop
cmp
lea
mov
mov
test
inc
dec
and
push
sbb
in
icebp
fcmovbe
cmp
mov
jb
iret
jae
out
jle
sub
inc
hlt
shl
out
not
dec
fisubr
repnz
inc
out
xchg
pop
gs
out
div
add
lods
pop
jae
sub
mov
popaw
stc
je
cmp
xchg
movs
push
popf
pop
mov
mov
aas
aas
cmp
test
fs
ja
jbe
bound
leave
jp
dec
loope
test
test
repz
ins
call
test
inc
aaa
iret
mov
ret
ins
aas
mov
out
fidivr
shl
or
stc
iret
lods
mov
(bad)
sub
fidivr
xchg
fstp
xchg
push
es
mov
sub
mov
out
jbe
cli
movs
icebp
cmp
pop
into
dec
cmp
push
hlt
cmc
jmp
les
xchg
jo
dec
cmp
vmwrite
pop
shl
je
jae
mov
repnz
js
hlt
sub
add
mov
pop
push
shr
jne
add
pop
not
js
rcr
and
repz
retf
loope
inc
movs
sub
arpl
int3
pop
mov
enter
or
popf
dec
(bad)
push
mov
or
das
sub
pop
push
outs
xchg
inc
jno
jae
sub
pop
dec
push
xchg
add
add
jnp
scas
dec
push
fs
and
rcr
jg
jo
fild
push
sub
test
mov
sahf
and
cmps
pop
push
sub
stos
pop
test
fst
iret
push
and
int
cmp
pop
push
stos
sub
xchg
sbb
scas
stos
and
xchg
push
icebp
je
sub
gs
fdivr
mov
stos
mov
pop
mov
inc
pop
mov
test
mov
dec
push
es
mov
imul
frstor
push
icebp
mov
leave
sub
jne
sub
stos
jne
aad
or
cwde
sar
pop
pop
push
or
or
inc
aas
push
ror
rcr
(bad)
popa
jp
pop
xor
cmp
imul
repnz
add
enter
hlt
data16
or
pop
adc
and
or
shr
cdq
jo
in
imul
add
push
repnz
mov
sub
dec
sub
cs
mov
mov
sub
lea
inc
ins
mov
mov
cmp
xchg
push
cmp
inc
dec
adc
fstp
sbb
push
lahf
fisttp
aam
hlt
jle
jo
lea
sbb
mov
sbb
inc
scas
ds
gs
pop
jne
sbb
out
jae
popa
shl
xor
lods
loop
and
and
mov
nop
out
or
rol
xor
icebp
mov
jo
cmp
dec
cmp
inc
cli
push
mov
and
shl
mov
mov
push
push
sub
ret
rol
shl
jbe
bnd
pop
call
mov
lock
inc
in
mov
call
sub
push
dec
arpl
mov
lods
sbb
and
cmp
mov
je
cmp
push
cld
jb
sbb
aad
and
pop
sub
xor
ficomp
ins
adc
mov
sahf
retf
mov
retf
out
cli
xchg
mov
xor
jge
jp
(bad)
adc
ficomp
cmp
popa
pop
aam
imul
mov
repnz
mov
pop
push
jl
fmul
outs
mov
ret
xchg
in
gs
sahf
(bad)
pop
call
jbe
sub
cmp
ss
add
test
call
popa
or
inc
outs
arpl
inc
sub
(bad)
aad
xchg
mov
xor
cmp
cli
fild
inc
xor
jns
xchg
dec
push
sbb
dec
movs
cmp
mov
inc
dec
jae
push
stc
pop
pop
sbb
arpl
sbb
jbe
xchg
and
mov
imul
cmp
adc
fxch
in
xor
xchg
test
pusha
and
push
xchg
dec
ins
inc
push
mov
add
push
mov
adc
fst
loope
pop
cmp
popf
jge
dec
mov
jmp
ret
xchg
mov
repnz
inc
sbb
push
mov
test
mov
imul
dec
xchg
push
leave
and
xchg
scas
cwde
pop
pop
mov
xor
push
sbb
lods
add
test
jmp
out
pusha
daa
dec
addr16
pop
inc
dec
jno
sbb
out
push
repz
cmp
rcl
jb
or
or
push
imul
pop
and
data16
test
xchg
mov
xchg
xchg
and
shl
test
add
jg
inc
lahf
rol
test
es
fsubr
stos
jbe
xor
fiadd
cmp
pop
pop
(bad)
jle
add
push
(bad)
rol
rol
sbb
fld
lds
xor
adc
aaa
mov
fs
retf
aad
fdiv
xor
inc
sub
or
movs
jb
in
int
cmp
addr16
and
sub
dec
jae
outs
cmc
xchg
js
xchg
xor
fld
dec
aad
sub
push
dec
pop
xchg
mov
call
repz
and
xchg
dec
mov
leave
mov
push
fld
sbb
xor
lock
cmp
je
sar
movs
popa
xor
mov
add
jmp
adc
xchg
pop
addr16
dec
or
rcl
out
xchg
mov
shl
andnps
push
test
mov
sbb
retf
clc
fsubr
push
jmp
jno
stos
bound
jmp
jmp
out
loopne
aam
push
sti
xchg
adc
sub
scas
fcomip
push
inc
pop
js
(bad)
cmc
movs
xor
(bad)
cli
js
div
mov
sub
iret
jbe
test
repz
out
mul
sahf
sub
sub
mov
dec
xchg
scas
inc
push
pop
push
movntq
inc
sahf
fsubr
ficomp
xor
sahf
push
xor
mov
pop
fisubr
cwde
sub
push
std
or
popa
push
lods
mov
add
mov
test
push
or
sbb
dec
jne
ror
popa
bound
cmps
loope
cmps
loopne
or
jmp
pusha
inc
xor
inc
or
frstor
(bad)
test
(bad)
fmul
mov
xor
outs
and
ins
sub
mov
sahf
dec
inc
in
movs
xor
push
leave
call
test
fbld
push
cmp
push
push
call
mov
pop
jmp
ficomp
xor
add
pop
cli
dec
mov
test
stos
push
cmps
jbe
pop
addr16
in
sub
ss
imul
mov
pop
stc
xor
add
jmp
xchg
popa
add
xchg
jo
pop
mov
cmp
pop
gs
push
lods
xor
(bad)
mov
dec
cmps
fcmovu
(bad)
imul
or
xor
and
cmp
les
data16
and
pushf
fwait
sbb
add
cld
push
cmp
sub
xchg
push
jb
scas
out
mov
aam
mov
dec
bound
sbb
dec
dec
push
std
arpl
jmp
pinsrw
into
jle
xor
cmp
or
movs
test
or
cld
xchg
sbb
jae
mov
mov
dec
es
dec
jmp
hlt
mov
push
fcmovnbe
and
xchg
cs
movs
push
leave
test
xchg
je
pop
cli
dec
and
mov
in
lock
jp
or
add
lods
pusha
dec
sbb
inc
push
dec
mov
xchg
xchg
mov
scas
pusha
push
call
loope
dec
add
call
mov
mov
xor
mov
rcr
pusha
in
imul
xor
xor
sub
sub
pop
cmp
sbb
fisub
add
xchg
retf
push
lds
sbb
in
data16
or
xchg
sbb
fnsave
les
sbb
aaa
and
inc
loopne
push
cwde
adc
inc
ret
pop
fadd
ss
pop
out
xchg
xchg
and
adc
pop
sub
in
sub
and
fisub
imul
push
cs
push
mov
cs
mov
push
arpl
xchg
sub
(bad)
xlat
xchg
push
aam
or
stc
movs
retf
sub
(bad)
push
push
mov
cmps
stos
test
sti
jmp
push
shr
xor
in
inc
mov
fbld
cmp
pop
pushf
mov
mov
movs
jb
imul
stc
outs
xor
js
stos
rcl
lods
cmp
jp
mov
fst
mov
jne
mov
ins
sub
and
jo
arpl
sbb
pop
je
xchg
bound
push
icebp
cmp
jne
int
ins
cmp
outs
ins
cdq
dec
push
popf
std
push
jecxz
pop
or
xchg
test
sbb
ins
xchg
enter
xor
mov
adc
jle
lock
pop
(bad)
mov
je
arpl
imul
push
and
and
sahf
pop
and
xchg
adc
gs
out
jmp
sbb
mov
cmp
nop
popf
adc
mov
sub
jno
lods
lock
add
nop
idiv
movs
pop
in
loopne
cdq
mov
jae
mov
stc
xor
pop
xchg
idiv
jmp
pop
sbb
cmp
(bad)
ja
arpl
ins
mov
ror
sbb
cmp
dec
inc
mov
pushf
jae
pop
mov
sub
ins
je
fs
jno
gs
jno
sbb
mov
inc
push
mov
push
lods
mov
adc
repz
add
sub
fs
adc
jmp
sbb
gs
pop
hlt
movs
lods
fldenv
push
xchg
dec
pusha
dec
push
gs
and
mov
enter
cmp
xchg
int
popf
push
sahf
pop
sbb
int3
push
gs
add
fdiv
data16
xor
int3
mov
movs
outs
jo
adc
(bad)
mov
cli
retf
data16
mov
xchg
rol
ror
pop
or
xchg
test
mov
add
lea
mov
push
sar
and
pop
daa
jns
sbb
and
popa
cli
xchg
sub
dec
bound
stc
in
inc
les
cmc
xchg
test
stc
inc
push
or
in
es
shr
imul
data16
movs
cmps
jp
fstp
sub
lock
(bad)
(bad)
or
adc
push
shl
int3
data16
sahf
frstor
sbb
push
aam
arpl
in
shl
pusha
loope
pusha
pop
and
mov
cmp
cmps
mov
enter
dec
into
scas
clc
fs
or
(bad)
in
fld
add
pop
stos
pusha
pushf
leave
clc
pop
ret
int3
dec
aam
ins
sub
pop
mov
cwde
rcl
ins
enter
pushf
inc
arpl
push
or
push
scas
ss
pop
cli
xchg
mul
aam
sar
ins
int3
fcmove
dec
div
nop
fwait
lea
cmp
outs
ss
gs
rcr
or
test
imul
data16
pop
adc
adc
and
push
loop
mov
add
fcomp
in
imul
jecxz
xchg
mov
cmp
(bad)
fidivr
mov
cs
and
jnp
arpl
add
sbb
es
aaa
gs
mov
pop
mov
aam
cmp
hlt
int3
sub
dec
retf
sub
dec
cmp
pop
xchg
sub
leave
pusha
xor
and
dec
inc
pop
fstp
or
cld
(bad)
loopne
dec
xchg
fisub
lods
in
lea
les
daa
pop
out
sub
xlat
mov
mov
xchg
cmp
inc
xchg
test
test
cmps
fstp
mov
test
test
inc
and
push
icebp
aam
in
fsubr
hlt
in
in
ins
dec
add
adc
clc
icebp
into
out
fwait
cmp
xchg
(bad)
sbb
jno
clc
scas
icebp
pop
in
mov
inc
mov
shl
movs
cmp
mov
xchg
jp
sar
pop
movs
movs
cmp
mov
push
out
les
imul
ror
cmps
xor
jb
mov
leave
dec
in
repz
sbb
movs
sub
xchg
pusha
adc
pop
pop
outs
sti
shr
aam
leave
rcl
pop
pusha
push
inc
movs
or
jmp
pop
addr16
out
call
inc
add
(bad)
pop
retf
sbb
dec
jle
imul
mov
ret
fiadd
mov
(bad)
push
push
mov
push
inc
rcr
cmp
mov
or
imul
jae
(bad)
fwait
jns
push
(bad)
ds
mul
xor
pop
pop
jle
out
push
outs
xlat
addr16
iret
mov
std
imul
cld
sbb
or
jmp
adc
jb
rcr
sahf
push
test
scas
jp
loope
add
ss
xchg
repz
fcom
xchg
test
rcr
fcom
nop
(bad)
pop
js
xchg
nop
ins
fadd
jmp
(bad)
test
ins
add
pop
sub
xor
pushf
mov
mov
xchg
lahf
js
mov
cmps
add
jns
xchg
(bad)
ja
es
out
dec
adc
pop
mov
jp
xchg
int3
cmc
mov
ja
jo
jne
repz
pop
fidivr
mov
pop
sub
mov
int
movs
jp
pop
mov
cs
add
mov
xlat
enter
sbb
adc
out
out
mov
stos
xor
cmp
fadd
xchg
sub
pop
addr16
mov
aas
rol
adc
mov
pop
cmps
pop
imul
or
mov
arpl
cmps
mov
pop
xor
repz
xchg
inc
ret
adc
lods
jmp
lods
dec
movs
and
cmp
cmps
js
ja
mov
mov
mov
mov
invd
or
out
addr16
xchg
lds
inc
lock
pop
shl
clc
lock
mov
inc
sub
(bad)
xchg
fsub
push
loopne
xchg
adc
xchg
rcr
lods
pop
(bad)
mov
leave
outs
outs
pop
jb
and
scas
and
stos
iret
inc
(bad)
hlt
jmp
jge
scas
(bad)
xlat
(bad)
xor
jno
push
data16
stc
mov
pop
imul
jb
jmp
das
retf
mov
jp
add
sub
les
xor
and
add
fld
mov
pop
cmp
sub
stos
data16
jp
dec
add
xor
sbb
fisubr
sbb
jne
sub
aas
adc
scas
ja
inc
or
mov
xor
out
(bad)
pop
mov
sub
xlat
jne
test
xor
adc
mov
hlt
and
cdq
fidivr
cmp
ins
fisttp
fwait
cli
out
push
in
sub
jns
stos
mov
pop
dec
dec
jmp
icebp
add
pop
jle
mov
jmp
rol
sub
mov
xor
dec
hlt
dec
sbb
inc
mov
xchg
pusha
inc
jno
and
shr
js
adc
fwait
xor
mov
aaa
mov
test
fs
in
jle
pop
test
and
mov
test
jmp
adc
lock
xchg
pusha
repnz
pop
fstp
cwde
add
sbb
xor
cmp
push
fadd
xchg
jle
jge
pop
push
pusha
mov
daa
pop
je
pop
shl
sbb
inc
jo
mov
jmp
jo
ficom
jns
mov
jo
ret
popf
lds
ret
dec
cdq
adc
(bad)
seto
out
jne
add
popf
mov
xchg
sub
pusha
mov
ss
fnstenv
push
dec
cmps
ins
dec
(bad)
and
js
mov
push
outs
pop
test
mov
ret
hlt
mov
mov
jno
call
xor
sbb
popa
cmp
adc
pop
adc
sbb
cmp
and
sbb
bound
stos
ja
mov
test
iret
cli
bnd
pop
pusha
pop
and
(bad)
push
stc
pop
jne
or
adc
xor
mov
hlt
adc
and
lods
addr16
jle
or
jae
mov
or
cld
aad
mov
addr16
or
jne
test
clc
inc
dec
ror
pop
aas
das
les
lods
mov
jmp
gs
dec
sar
jecxz
fisub
out
jmp
imul
mov
cmp
cmp
push
or
dec
jmp
nop
iret
dec
repnz
pop
mov
xchg
aam
outs
xchg
push
jle
ds
and
mov
(bad)
cli
jnp
xchg
dec
and
add
xchg
inc
dec
mov
out
xchg
mov
and
sbb
push
fisub
xor
pusha
mov
pop
out
sub
inc
and
mov
ret
dec
pop
jecxz
ja
jmp
mov
fadd
pop
adc
xchg
or
cmp
or
bound
xchg
mov
and
not
shl
inc
retf
or
xchg
or
std
jmp
inc
xchg
pop
cli
lds
push
aam
test
out
push
sub
xor
bound
jae
add
test
jae
cmp
or
in
outs
and
or
xchg
pop
popa
sar
out
test
clc
aam
fs
daa
nop
or
je
pop
popa
mov
shl
and
mov
mov
xor
mov
inc
adc
push
mov
and
pop
or
out
fs
int
mov
pusha
xor
inc
addr16
int3
add
or
addr16
sbb
or
ret
pop
sub
push
call
dec
ds
je
and
add
int3
hlt
mov
mov
jl
(bad)
repnz
jae
or
js
shl
sahf
mov
xchg
cmp
(bad)
pop
adc
sbb
or
mov
jg
or
jno
arpl
jmp
dec
xchg
inc
sub
repz
pop
leave
enter
sbb
addr16
test
imul
or
stos
pop
pop
pop
cmps
das
or
cmp
(bad)
pop
fcomp
jecxz
inc
sbb
push
or
mov
jle
or
sbb
jle
or
jl
push
xlat
pop
popf
jmp
or
std
adc
push
xchg
stc
jle
or
xchg
pop
out
sub
scas
or
cdq
mov
fidivr
cmp
mov
ds
xchg
mov
mov
enter
and
(bad)
fdiv
jb
xchg
mov
lods
inc
cs
pop
call
movs
jle
or
repnz
adc
xchg
pop
xchg
xchg
xchg
repz
mov
cs
stc
xor
adc
or
mov
test
sub
cmc
dec
mov
mov
inc
sub
xchg
cmp
sbb
or
hlt
and
xchg
sar
inc
test
mov
or
push
icebp
rcr
mov
xchg
cmp
enter
push
mov
or
ins
mov
std
add
push
dec
ficomp
cs
or
pop
pop
jle
or
push
dec
fcomp
dec
jmp
cmp
lods
lods
mov
or
cs
inc
ret
sub
mov
test
daa
xchg
mov
pusha
xchg
add
ja
mov
mov
jl
lock
or
mov
stc
pop
pop
(bad)
fimul
cld
ja
imul
push
dec
les
mov
inc
pop
mov
mov
jae
sub
xor
mov
dec
iret
pop
jg
or
popa
aad
pop
shr
and
dec
int
or
aad
or
xchg
sahf
dec
mov
test
imul
jne
dec
es
push
inc
xchg
bound
dec
xchg
ins
daa
mov
outs
mov
jg
cmps
add
repz
test
sbb
mov
daa
jge
out
and
and
mov
loop
jg
and
jbe
jg
mov
or
in
cs
stc
adc
iret
outs
lock
arpl
or
mov
xor
jns
pop
pop
jle
or
push
loopne
mov
repz
jns
pushf
jle
or
push
push
dec
pop
test
aam
or
cmp
int3
test
imul
inc
aas
cmp
fwait
or
sub
into
lods
mov
in
fdiv
cmps
or
mov
xchg
or
repz
xor
cmps
push
pop
test
mov
(bad)
imul
mov
nop
ins
add
mov
cmps
pusha
xchg
or
and
repnz
push
ins
cmc
stc
and
and
out
(bad)
pop
addr16
jns
stos
cmp
(bad)
fcom
stos
sbb
pop
sub
mov
mov
mov
pop
popf
pop
hlt
mov
xchg
cmps
cwde
push
dec
out
popf
push
sbb
mov
push
push
jmp
dec
sub
sbb
or
imul
pop
repz
dec
movs
sar
pop
sbb
or
test
(bad)
mov
(bad)
in
jb
clc
push
rcl
push
aam
mov
jle
cmp
and
mul
ss
rcr
addr16
xchg
mov
pop
cli
rol
push
adc
int
outs
std
aas
daa
pop
nop
sbb
ins
pusha
or
cs
jmp
imul
pop
shl
sub
cmp
adc
ret
outs
cmp
jne
sub
jb
inc
mov
movs
xchg
pop
mov
adc
add
pushf
into
icebp
push
push
cs
fiadd
outs
pusha
cwde
es
push
aam
mov
stos
nop
push
rcr
imul
cmp
int
fdivr
dec
aad
jmp
push
dec
arpl
mov
ja
mov
daa
fldenv
addr16
xchg
sbb
fdivr
sti
into
call
das
rcr
sahf
inc
or
ss
fsubr
dec
(bad)
mov
xor
add
xchg
adc
sbb
pop
test
xor
call
xchg
js
jnp
add
lahf
jae
pop
arpl
pop
movs
(bad)
cs
in
push
mov
fidiv
pushf
das
bound
push
int
call
shl
pop
mov
xchg
jge
lahf
popf
(bad)
(bad)
scas
sbb
inc
fwait
ins
fcmove
add
pop
shl
fdivr
into
mov
fnstcw
jecxz
adc
jns
imul
(bad)
call
dec
movs
sbb
ins
or
arpl
cwde
mov
addr16
int3
call
(bad)
scas
sbb
sbb
pop
jecxz
mov
fdivr
mov
pop
test
mov
pop
jge
xchg
sbb
pop
(bad)
int
daa
cmp
pushf
or
stos
dec
test
push
mov
loope
repz
sahf
lods
jmp
icebp
repnz
adc
mov
stos
jge
mov
lahf
ins
pop
hlt
es
dec
movs
movs
ins
pop
clc
xor
popa
add
bnd
shr
sub
ins
sahf
fdiv
stos
pminub
add
mov
mov
mov
cmp
mov
imul
mov
enter
adc
(bad)
scas
ins
mov
data16
ret
jae
mov
pop
ins
pusha
sbb
lds
dec
inc
xor
(bad)
ins
leave
std
fbld
scas
ins
mov
aas
sub
dec
retf
movs
ins
and
inc
fs
sub
or
movs
ins
das
(bad)
mov
mov
and
pop
imul
xchg
repnz
out
inc
das
fdiv
aam
out
je
ins
shl
add
pop
mov
sbb
dec
ins
mov
ins
add
inc
pop
dec
pop
test
xchg
(bad)
js
jmp
fbld
adc
enter
pop
push
nop
mov
movs
ins
cmps
ins
(bad)
pop
xchg
pop
xchg
loope
cmps
inc
add
adc
les
retf
ins
mov
sbb
and
pop
int
cmp
out
pusha
inc
movs
ins
das
xlat
out
rcr
retf
lods
movs
gs
scas
out
add
xchg
cmp
cmp
pop
inc
cmp
pop
das
inc
iret
push
mov
jae
jmp
and
pop
xor
push
push
xor
sbb
inc
jl
add
popfw
(bad)
fidivr
aaa
pop
(bad)
(bad)
mov
sahf
mov
or
mov
mov
inc
mov
mov
cmp
dec
jb
and
jae
popa
mov
addr16
je
rcr
jbe
jne
test
lods
lock
movs
pop
imul
xor
outs
xchg
mov
fbld
adc
dec
cmps
ficomp
dec
cmp
mov
dec
jns
add
cmp
cs
mov
lods
xor
test
mov
xchg
xor
or
xchg
jns
xchg
movs
inc
pop
add
dec
inc
jae
pop
mov
or
in
loopne
ins
(bad)
fmul
xor
out
pusha
ss
push
(bad)
scas
xchg
mov
add
cmp
sbb
and
push
rcr
shl
adc
dec
sub
sub
cdq
test
fisttp
dec
addr16
lds
push
push
mov
dec
cld
push
test
mov
ins
stos
retf
lods
sete
jns
call
shl
mov
mul
ss
dec
in
inc
cmp
fscale
dec
inc
pop
mov
pop
in
dec
addr16
nop
imul
div
lahf
fdiv
push
and
addr16
call
sbb
pop
shl
shl
mov
dec
pop
ja
sahf
loope
or
inc
out
pop
popf
pop
mov
jle
aas
mov
xchg
pop
add
mov
fisub
push
lock
jae
dec
lea
ja
ds
xchg
repnz
shl
addr16
mov
mov
dec
les
add
shl
rcl
sub
in
xchg
loop
out
int3
stos
jne
jbe
pop
jae
mov
dec
not
push
aas
adc
jno
test
add
pop
add
in
mov
out
int3
bound
push
(bad)
pop
adc
jo
(bad)
mov
push
push
or
paddsw
mov
mov
ins
test
int
lds
dec
pop
mov
xchg
outs
ins
fbstp
inc
xchg
mov
mov
inc
jne
fs
pop
mov
mov
mov
cmp
xchg
je
test
cwde
pop
mov
adc
rcl
dec
push
sbb
inc
fucomp
sbb
movs
push
into
dec
or
or
jo
icebp
sbb
sbb
fdiv
xchg
dec
pop
in
and
push
pop
and
test
ret
ficom
ja
add
jne
shl
ror
pop
cmp
ret
pop
hlt
add
aad
clc
cmp
sbb
push
xchg
pop
outs
js
xor
retf
lahf
cmps
mov
push
jg
stc
leave
loopne
call
add
pop
dec
ret
dec
lods
dec
stos
mov
stos
fcom
ret
push
dec
pop
mov
stos
fnstcw
mov
add
test
push
fprem
add
mov
add
call
rol
dec
xor
jae
shr
sbb
pop
out
pop
popf
stos
inc
pop
pop
ja
cmps
es
xor
ret
xor
mov
and
xchg
xor
or
ret
sbb
mov
mov
pop
stc
in
nop
(bad)
aam
cmp
jae
nop
sbb
mov
loope
imul
jb
xchg
icebp
sbb
into
mov
cdq
jmp
pop
dec
loop
and
dec
cmp
xor
(bad)
movs
pop
cs
cmp
xchg
dec
(bad)
ja
ret
mov
movs
clc
jecxz
imul
push
adc
xchg
out
adc
ret
or
pminsw
pop
gs
pusha
mov
ins
mov
test
stos
mov
sti
hlt
pop
ret
test
mov
cmps
repnz
icebp
out
mov
das
je
(bad)
retf
pop
sub
sbb
nop
lock
das
xchg
jmp
sbb
scas
in
mov
and
in
enter
lea
pop
popf
or
outs
cmps
jge
or
jmp
xor
or
push
push
push
lock
xor
clc
sahf
out
add
jp
adc
js
dec
sub
jns
xor
xor
pop
out
test
xchg
cs
leave
rol
out
aad
xchg
nop
mov
sub
add
jnp
aas
fbld
jo
push
test
fwait
adc
sbb
fs
outs
(bad)
sub
mov
fcomip
les
or
aam
xchg
push
shr
retf
loopne
shl
in
dec
cmp
or
adc
mov
inc
inc
xchg
jns
xchg
addr16
mov
inc
repnz
pusha
cwde
mov
ins
jmp
call
cmc
pop
loope
push
push
xlat
lods
jge
nop
movs
popf
sub
and
jne
ror
jmp
sbb
mov
enter
mov
xchg
push
pop
popf
push
add
daa
lds
cmps
int
movs
stc
jo
std
adc
les
and
sub
and
cs
mov
mov
push
ins
xchg
lea
mov
lods
cmp
dec
pop
inc
xor
retf
cmc
sub
(bad)
mov
xor
xchg
retf
mov
scas
and
fimul
dec
hlt
daa
xchg
(bad)
sub
icebp
or
cmps
or
jae
dec
pop
cdq
into
das
lods
lods
hlt
add
ror
cmp
cmp
(bad)
icebp
ins
sub
cs
pusha
cmps
cmc
imul
aam
cmp
fistp
and
dec
xchg
mov
xor
movs
(bad)
jnp
pop
scas
pop
cli
retf
repnz
lock
outs
and
or
(bad)
cmps
sbb
and
js
retf
pop
xchg
rcr
into
pushf
add
imul
(bad)
xchg
ins
sub
push
cmp
in
test
mov
mov
(bad)
test
xor
xchg
test
mov
xchg
and
lods
mov
mov
xor
or
sbb
add
add
cwde
pushf
push
cwde
stc
ins
xchg
jmp
clc
outs
xchg
xor
fs
push
jmp
dec
jmp
xor
and
mov
hlt
cwde
icebp
or
add
popf
adc
pop
mov
or
cmc
sub
jnp
add
addr16
push
scas
call
mov
(bad)
jnp
fist
fwait
out
js
mov
inc
sti
out
or
mov
or
or
fs
mov
and
dec
icebp
mov
xchg
dec
xchg
adc
cmps
(bad)
xor
lods
and
ja
jecxz
es
shl
cmp
inc
add
push
scas
mov
mov
add
mov
rol
pushf
enter
test
mov
fistp
dec
cmp
xor
cld
xor
push
retf
inc
mov
fidivr
jb
mov
push
adc
hlt
fdivr
js
mov
jl
mov
jo
stc
add
mov
sub
outs
mov
mov
cld
movs
mov
daa
pushf
push
lock
sub
(bad)
jae
les
jae
xchg
and
nop
fcom
mov
xchg
add
mov
and
mov
retf
xor
mov
sub
std
cmp
outs
xor
stc
cs
lea
cmp
pusha
sub
test
jle
out
cld
mov
cmp
dec
dec
sahf
test
sbb
pop
pop
sub
sub
dec
bound
xchg
and
loopne
jge
cdq
sub
cmp
add
stc
xchg
cmp
push
mov
cmp
ins
sub
movs
stos
out
mov
inc
mov
movs
inc
loop
inc
pop
sahf
leave
nop
js
jmp
sahf
daa
pop
and
sbb
mov
adc
fs
xchg
and
mov
nop
aam
sbb
adc
enter
xchg
(bad)
cli
sbb
ins
sub
enter
in
jg
loopne
add
dec
loope
and
sti
add
outs
adc
xor
(bad)
lock
out
ins
lods
xlat
cli
xor
clc
adc
mov
aad
jmp
pop
pop
cld
inc
push
cmp
cmp
enter
sub
xchg
fs
fdivr
sti
neg
test
ja
or
out
pushf
sub
xor
sbb
sar
rol
mov
cmps
iret
jae
hlt
mov
out
pusha
sub
dec
jmp
jecxz
data16
ins
lds
dec
sub
movs
adc
xchg
es
add
mov
jo
mov
xchg
inc
push
pusha
daa
repnz
sub
push
pushf
sbb
sti
lods
pop
(bad)
int
inc
xor
or
repz
jmp
sub
std
xchg
ror
lahf
jo
int3
js
add
je
jmp
fs
sub
add
pop
bnd
xlat
test
clc
add
jb
aad
push
push
adc
inc
pop
mov
ins
cmp
xchg
adc
fidivr
movs
push
fistp
loope
in
mov
sub
fs
in
pop
dec
sbb
mov
in
and
sti
enter
jbe
mov
jle
ds
jmp
out
cmp
xchg
or
(bad)
inc
xchg
popa
out
(bad)
xor
js
fbld
test
(bad)
sbb
js
aam
mov
cmps
mov
(bad)
aad
test
lock
sub
ficomp
xor
sub
scas
inc
mov
xor
push
pop
pop
aas
jmp
fsubr
jle
xor
mov
(bad)
les
in
and
inc
dec
fnstcw
mov
sub
loope
sar
xchg
lods
jmp
push
adc
out
cmp
nop
inc
dec
mov
xchg
ja
jg
pop
push
pushf
sub
test
outs
xchg
push
sub
test
jmp
fadd
or
lock
clc
or
les
mov
pushf
cli
xchg
ror
popf
or
pop
pushf
fnsave
xchg
mov
clc
push
or
xor
pushf
xchg
hlt
add
(bad)
pusha
push
dec
bound
sub
movs
cmp
jle
imul
push
pusha
dec
mov
aad
pushf
lahf
jmp
sub
inc
mov
and
push
pop
xchg
lods
(bad)
test
mov
pushf
ds
xor
push
xchg
bound
cs
xchg
scas
cld
in
jo
xchg
dec
xchg
test
push
adc
test
inc
pop
js
jle
bound
in
clc
pop
in
push
pop
mov
jae
pop
fild
add
jae
or
or
sbb
jmp
pop
push
test
pop
push
test
lahf
jge
xchg
scas
inc
pusha
mov
and
clc
retf
or
mul
ss
jl
aas
jmp
push
push
pop
pop
not
sbb
test
sub
and
pushf
pop
mov
pop
popf
cmps
gs
mul
cmps
addr16
mov
or
mov
movs
stc
mov
pop
push
dec
rcr
in
pushf
test
into
jne
dec
imul
inc
pusha
clc
aas
push
adc
ss
pushf
enter
addr16
popf
pop
pushf
xchg
je
fisub
cmp
mov
sbb
bound
pop
mov
or
cmp
mov
dec
fcom
icebp
add
jmp
xchg
push
pop
adc
or
inc
mov
cmovae
repnz
sub
scas
xor
paddusb
xchg
push
out
pop
jmp
or
outs
inc
mov
fsub
lahf
repnz
test
in
movs
nop
pop
imul
sub
jbe
js
je
jbe
jg
es
rcl
cmp
inc
mov
sbb
adc
in
add
cld
cmp
sub
test
mov
fidivr
ss
cs
mov
push
jb
push
int
idiv
fdivr
aas
add
rcl
jmp
call
mov
push
or
stos
cmp
dec
std
ret
loop
pop
ret
out
pop
jmp
rol
in
push
outs
or
mov
push
cmp
hlt
sub
cmp
jge
jmp
push
shl
cmp
out
scas
cmps
inc
inc
lds
cmps
stc
mov
add
cmp
pop
test
pop
mov
fs
xor
lods
xchg
sahf
sub
retf
(bad)
stos
mov
lods
in
test
jmp
jo
(bad)
clc
pop
in
pop
sbb
add
mov
sbb
ins
or
cmp
or
lahf
bound
imul
movs
fs
fs
and
xchg
cld
jne
or
test
push
mov
lock
iret
imul
das
data16
sub
std
mov
cli
test
js
and
adc
dec
(bad)
cld
dec
in
pushf
stos
xor
jns
pop
pop
jle
ds
mov
jb
xor
int3
fidivr
bnd
movs
in
icebp
cmp
fisttp
jns
invd
cli
inc
shr
dec
jns
pop
idiv
sub
inc
mov
or
xor
pop
push
dec
jmp
push
leave
xlat
daa
xor
mov
outs
sbb
dec
mov
pop
cmps
fimul
ja
cmc
mov
cmp
stc
lock
xchg
(bad)
sub
out
xor
pop
xor
fist
jmp
adc
lods
xchg
mov
pusha
add
jg
cmp
jne
ja
mov
idiv
or
enter
push
arpl
adc
pop
pop
fsubr
inc
mov
pop
hlt
push
jmp
(bad)
pusha
jbe
push
xor
cs
mov
sbb
sbb
in
adc
sbb
lea
dec
and
inc
cmp
dec
adc
push
out
jmp
and
cmp
mov
push
xor
(bad)
fidivr
and
repz
push
lods
mov
dec
xchg
lea
int
xor
jne
pop
pop
sub
pusha
ja
stos
cli
mov
(bad)
lods
and
(bad)
aam
adc
or
cmp
outs
push
in
pop
clc
shl
add
pop
clc
in
hlt
(bad)
push
push
cwde
dec
mov
shr
xchg
pop
out
push
mov
test
(bad)
mov
cmp
movs
pushf
es
call
add
nop
jge
and
and
out
xchg
add
in
jg
lods
pop
(bad)
sbb
imul
dec
xchg
xchg
inc
ret
sysexit
pop
call
or
das
aaa
shl
push
hlt
mov
cmp
mov
jae
in
pop
xchg
mov
arpl
xor
mov
fnstcw
das
arpl
push
loope
xor
in
sub
inc
push
retf
fidivr
mov
and
inc
xor
sbb
add
cmp
bound
push
div
push
xchg
inc
sub
shl
cmc
cmc
dec
jo
inc
and
retf
call
jbe
fcomip
loopne
fld
shr
mov
xchg
in
lods
neg
hlt
or
xchg
ins
adc
movs
pop
mov
popf
mov
popa
jge
xchg
dec
out
test
push
lock
sub
sub
mov
cmp
inc
xlat
mul
pop
stc
stos
in
clc
fucompp
push
retf
push
mov
pushf
pop
and
pusha
outs
out
mov
rcr
sbb
jne
jmp
into
hlt
jmp
sar
(bad)
sti
cmp
push
clc
out
fbstp
daa
outs
xchg
out
popa
jne
repnz
pop
jge
mov
dec
sti
sahf
or
cld
push
pop
jae
jmp
mov
adc
imul
lahf
out
jns
lods
sub
pop
test
das
pop
mov
mov
dec
outs
clc
jo
push
enter
cmps
sbb
mov
pop
clc
in
hlt
(bad)
push
xor
ds
pop
pop
inc
sub
dec
pop
je
fldcw
jne
ss
inc
jmp
mov
jo
retf
jmp
fist
test
jns
loope
push
lock
mov
(bad)
shl
lods
outs
(bad)
enter
call
jne
loop
and
or
mov
sub
cmp
addr16
jmp
das
pop
clc
xchg
jne
mov
dec
(bad)
nop
pop
cmp
fs
or
sbb
mov
loope
rcr
jge
mov
mov
adc
imul
inc
sub
cmp
int
sbb
inc
inc
and
add
and
xchg
cmp
fimul
cmp
pop
mov
popf
add
cli
cmc
add
adc
xchg
push
or
loopne
into
push
mov
fsubp
es
sub
push
mov
mov
sub
xor
into
jle
in
les
int
fdiv
cld
dec
pusha
and
lock
imul
popa
mov
enter
adc
cwde
mov
shr
lods
push
repz
inc
and
popa
mov
push
ins
vmaxps
call
jne
imul
inc
or
add
sbb
pop
test
les
sar
xor
jne
sub
inc
jae
pop
and
shl
sub
dec
ss
pop
jnp
xchg
cld
hlt
and
pop
mov
push
ins
inc
inc
pop
mov
push
aam
repz
loopne
mov
cld
xchg
jb
mov
dec
addr16
jl
cli
mov
sar
cmp
pop
sbb
imul
mov
cwde
outs
aad
stc
(bad)
add
add
in
jbe
pop
pop
je
add
or
popa
pop
add
test
jecxz
in
push
lds
pop
into
addr16
mov
sub
(bad)
nop
add
(bad)
in
push
push
jne
popf
sbb
arpl
movs
add
and
and
mov
popf
and
sub
add
push
push
jo
push
push
pop
add
addr16
sbb
mov
popa
inc
je
jge
mov
adc
push
cmp
enter
mov
and
repnz
push
in
out
push
push
data16
loopne
dec
mov
mov
enter
imul
cmp
ins
push
and
jp
call
ret
movs
cmp
js
pop
ja
xchg
or
add
add
fisttp
mov
arpl
or
add
cmp
hlt
cld
mov
jns
xor
in
mov
cs
and
stc
stos
rcl
pop
hlt
mov
mov
jb
and
add
sbb
sub
outs
pop
repnz
push
std
sub
sti
xor
add
xor
les
ins
gs
xor
pop
xchg
std
xor
fbld
mov
into
sbb
xchg
test
pop
and
xchg
retf
push
or
loop
sub
xor
or
pop
outs
int3
icebp
push
pop
int
mov
xchg
addr16
pop
lock
clc
(bad)
clc
xchg
adc
(bad)
fwait
jge
dec
pop
int
push
add
sub
add
je
dec
in
jmp
fiadd
dec
xchg
sub
and
mov
dec
leave
pop
je
dec
je
pusha
lahf
fcomp
aam
xchg
cmp
cli
hlt
pop
popf
push
push
push
inc
xor
sub
pop
push
call
adc
cmp
dec
lods
push
sub
pop
xchg
inc
sti
add
clc
add
dec
popf
outs
hlt
ins
mov
(bad)
sub
sub
xor
sub
outs
xchg
movs
jmp
je
mov
and
mov
in
popf
addr16
aas
inc
xor
push
jl
sub
push
sahf
inc
mov
add
cmps
inc
xchg
shl
xchg
rcl
clc
loopne
add
iret
out
aam
dec
fild
jne
aaa
punpcklbw
mov
in
or
stc
ins
add
cld
dec
push
or
sub
jbe
sub
les
cmc
inc
pop
pop
mov
push
mov
and
mul
mov
test
push
adc
(bad)
ins
xor
(bad)
pop
scas
push
scas
pop
ins
aam
xor
push
push
int3
mov
sub
int3
cmp
leave
(bad)
int
push
arpl
ins
push
jp
jno
loopne
pushf
aaa
iret
add
mov
stos
cwde
pusha
adc
jae
cmc
imul
mov
stos
neg
adc
add
xchg
call
stc
push
sbb
mov
pop
or
pop
test
and
lds
ss
push
jns
mov
pusha
jne
shl
ja
test
xchg
dec
ret
push
or
rol
or
out
cmps
xor
aam
nop
add
or
push
fisub
(bad)
push
inc
adc
pop
ret
mov
pusha
push
xchg
mov
call
in
xor
ds
sbb
fldcw
js
mov
pop
clc
in
inc
cmp
jecxz
in
cli
cli
int
bound
leave
push
add
mov
shl
xchg
adc
repz
adc
aas
push
xlat
mov
rol
gs
adc
or
cmp
inc
mov
mov
sti
jae
imul
in
jo
and
ror
inc
and
or
pop
clc
test
sar
lods
ds
add
ins
add
je
fisubr
jnp
adc
inc
icebp
adc
mov
(bad)
xchg
and
cmp
nop
jne
(bad)
shl
nop
dec
add
push
cmp
and
js
xchg
lock
push
pop
int3
push
cmp
xor
dec
out
jae
lea
ror
out
jne
jle
sub
mov
cdq
adc
iret
je
pop
or
aam
fdiv
out
aas
fisttp
jbe
call
mov
mov
in
pop
sbb
jmp
xor
repz
sahf
sub
xor
mov
pop
mov
dec
dec
push
fdiv
cli
test
dec
js
adc
push
jne
mov
jge
jne
pop
sbb
repz
retf
icebp
push
xchg
cmp
sbb
or
pop
cli
test
cli
mov
lock
mov
add
pop
cli
test
pop
pop
sbb
js
pop
iret
(bad)
pop
cli
adc
mov
xor
inc
dec
jb
jmp
leave
push
arpl
shl
jnp
sbb
mov
je
gs
adc
pop
enter
cli
ins
mov
das
leave
inc
inc
jns
xchg
imul
pop
dec
jno
or
sbb
xchg
daa
add
clc
enter
jb
out
and
xchg
jnp
popa
cli
cmps
add
add
mov
rcr
sbb
adc
cmp
ins
adc
sbb
adc
sub
jp
sub
ja
rcr
rcr
sbb
fild
cmps
pop
test
imul
mov
sahf
or
adc
mov
mov
je
add
or
iret
dec
xchg
fadd
mov
fsub
jo
clc
xor
stc
cs
adc
iret
dec
pop
dec
ja
inc
push
xor
mov
mov
call
sub
ins
fs
out
les
dec
aad
retf
fwait
dec
or
and
mov
in
stc
jp
xchg
jbe
clc
nop
(bad)
(bad)
mov
add
push
jo
ja
inc
addr16
mov
int3
rcl
xchg
fdivr
gs
or
(bad)
xchg
jmp
sub
cmp
xchg
jp
pop
jns
pop
jno
mov
cs
xchg
pop
data16
pop
jg
push
mov
(bad)
and
push
mov
ret
adc
loopne
jbe
jge
sbb
push
sbb
stc
sub
jmp
movs
xor
mov
xchg
mov
shr
cmc
in
test
shl
adc
loopne
es
pop
inc
pop
fst
pusha
pusha
jp
jb
or
mov
adc
xor
es
mov
adc
pop
nop
xchg
fisub
adc
fwait
in
fs
add
out
call
pop
test
cs
mov
push
xchg
stc
cmp
push
ficomp
inc
repnz
jno
xchg
lds
xchg
xchg
cli
xor
(bad)
iret
add
or
inc
inc
jg
pop
xor
sbb
fld
ins
xor
lock
repz
fs
push
push
ins
add
jnp
sub
adc
fisttp
inc
xlat
ins
or
xor
mov
pusha
leave
pushf
jg
ss
xlat
(bad)
ins
fmul
pop
sbb
cs
repnz
repnz
inc
mov
or
popf
jb
mov
call
test
popf
lea
adc
cmp
sub
out
jmp
packsswb
mov
(bad)
ins
int3
xchg
jge
in
(bad)
mov
mov
(bad)
pop
clc
loop
mov
push
aaa
call
adc
sar
ds
pop
sbb
mov
pop
ret
cs
or
cs
cdq
cmp
test
inc
adc
add
test
mov
cli
imul
and
das
dec
std
add
icebp
push
std
xchg
add
test
aam
dec
xor
pop
gs
fs
pusha
lea
jg
pop
mov
pop
lods
or
inc
push
cmp
or
out
mov
sbb
mov
push
call
xor
mov
ret
inc
mov
add
fisub
dec
lods
arpl
adc
jmp
and
mov
jb
cld
call
loope
push
inc
push
and
stos
mov
add
outs
mov
data16
jge
dec
pop
mov
repz
lahf
stos
jne
rol
mov
ucomiss
pop
fcom
push
mov
out
push
push
iret
add
jg
jo
lea
sbb
push
adc
mov
jne
jns
js
cmp
pushf
jge
imul
faddp
dec
enter
loope
jns
and
fs
xchg
retf
test
mov
rcr
retf
mov
sbb
fbstp
xor
xor
pop
mov
and
stos
int3
arpl
push
daa
mov
out
add
std
lds
int
fsubr
jmp
jle
div
xchg
add
pmullw
adc
sbb
mov
mov
das
lds
cli
sbb
sbb
pop
push
pop
das
imul
adc
pop
mov
cwde
xchg
add
in
jp
lods
push
xchg
scas
jg
mov
mov
les
jnp
out
es
(bad)
and
ds
ret
call
lods
aad
and
in
loope
sub
hlt
in
nop
mov
jo
int3
pop
hlt
mov
adc
mov
and
test
cmp
pop
rcr
push
jo
shl
ret
or
jp
bound
daa
in
bound
mov
xchg
sub
sub
cs
out
ja
add
xchg
mov
adc
(bad)
dec
xor
xchg
aad
dec
jns
loope
add
and
jle
xor
es
shl
jae
push
mov
fstp
or
dec
dec
sub
ins
and
mov
clc
add
push
loopne
rcr
int3
icebp
adc
fcmovu
and
sub
std
retf
jo
pop
iret
popa
and
data16
in
arpl
cmp
not
push
mul
sbb
stc
cmc
dec
shl
cmp
and
cs
rol
fisttp
repnz
js
dec
data16
push
jns
mov
popf
js
jno
jne
pop
or
scas
sbb
call
xchg
mov
test
leave
mov
std
nop
in
jp
and
or
outs
mov
dec
mov
mov
cmp
ins
mov
js
je
ins
int3
pop
sar
in
hlt
and
out
ret
dec
adc
xchg
add
div
jbe
jb
js
fdivr
test
aam
jp
mov
jp
test
fldenv
sbb
cmp
adc
jns
jo
mov
sub
sbb
out
dec
in
push
xchg
and
out
imul
mov
inc
inc
push
and
inc
mov
pop
jnp
sti
inc
jge
gs
add
jp
lahf
inc
test
jne
sub
aas
in
sbb
pop
mov
fimul
jge
jnp
sub
loopne
push
mov
push
jmp
stc
jp
xchg
not
sub
mov
out
fdivr
push
stc
adc
sub
in
mov
jo
in
push
(bad)
mov
cmps
jbe
mul
and
jb
xchg
add
dec
in
retf
mov
aaa
leave
loopne
fisttp
jb
fmul
jmp
pop
mov
out
push
sub
imul
in
aas
out
pop
cmp
mov
mov
je
lock
jmp
jnp
fs
cli
sbb
dec
xchg
pop
push
movs
out
mov
pop
sub
bound
std
xor
test
jbe
inc
and
pushf
ins
rol
jo
mov
xchg
repz
in
jmp
fsub
js
push
ins
sbb
imul
sbb
mov
data16
mov
rol
jae
mov
les
ins
cmps
loop
pop
sub
cmp
push
sbb
enter
int3
ficomp
test
pop
mov
les
data16
xor
pop
cli
xchg
xchg
(bad)
cmp
or
pop
pop
inc
cmc
jge
mov
fs
sub
sbb
jmp
lea
dec
hlt
sub
aam
cmp
sub
sahf
mov
jle
adc
xor
push
out
jmp
les
lock
rcl
jbe
and
outs
aas
xor
mov
gs
pop
jnp
and
ins
in
pop
push
sbb
fwait
stos
bound
int3
(bad)
dec
pop
mov
sbb
mov
int3
pop
mov
stos
gs
mov
mov
sti
dec
(bad)
push
rcr
ins
jmp
push
jmp
dec
mov
mov
test
in
test
or
mov
stc
call
inc
js
rcr
popa
test
pusha
call
lods
mov
and
jl
enter
in
jb
popa
sub
fs
fist
push
jge
or
movs
or
lock
cmp
clc
jg
gs
pusha
cmp
ds
mov
xor
jns
clc
rcl
add
xor
call
es
xor
clc
jnp
hlt
fisub
adc
loopne
jno
fs
retf
mov
fwait
mov
mov
push
or
cmps
mov
inc
(bad)
mov
test
push
(bad)
bound
nop
and
push
call
in
add
inc
fsub
adc
or
movs
test
and
iret
pop
aam
shl
add
loopne
retf
jl
popf
mov
mov
cli
mov
inc
(bad)
and
push
fld
sub
jmp
sahf
in
data16
push
ins
shl
sbb
nop
xchg
jb
test
idiv
xchg
pop
js
jp
stc
stos
gs
je
std
leave
std
enter
adc
ror
pop
out
jmp
(bad)
js
xchg
repnz
aam
cmp
mov
test
push
mov
jecxz
into
pop
push
test
lock
cwde
js
xchg
out
xchg
adc
(bad)
sub
fchs
cwde
dec
fisubr
or
in
test
xchg
jmp
js
std
icebp
test
mov
lahf
xchg
sub
fsubr
test
outs
mov
xchg
sti
ja
retf
mov
push
jmp
aaa
mov
dec
loopne
xor
call
xchg
push
and
loop
inc
test
or
push
(bad)
loopne
ss
pop
dec
mov
xchg
mov
sub
inc
loopne
cmp
test
je
xor
scas
aam
mov
mov
sub
jmp
fs
or
lock
call
ins
cmp
mov
in
pop
fwait
imul
stc
cld
sub
jns
adc
pop
sbb
push
rcl
sub
loopne
push
jge
jg
and
xor
test
in
sbb
stc
push
mov
pop
in
jl
mov
shr
pop
inc
test
lock
fsub
(bad)
std
and
cmp
mov
das
test
xchg
stc
stc
popa
repnz
lea
cli
pop
adc
add
loopne
push
bound
xor
(bad)
ret
jnp
jmp
sbb
dec
loopne
sbb
data16
dec
test
addr16
pop
aad
test
sahf
sbb
cli
movs
gs
push
xchg
xchg
sbb
push
push
xchg
jae
sub
mov
push
sub
out
mov
push
inc
jp
imul
mov
jne
sti
call
(bad)
sbb
sbb
into
sbb
pop
out
leave
sub
lahf
shl
scas
add
loope
xchg
in
cmp
pop
ins
aam
add
inc
mov
jb
xor
imul
cld
pop
fsubr
loope
mov
mov
cld
dec
sar
ret
fisttp
popa
jecxz
stos
cld
retf
jmp
shr
jns
movs
loope
jg
mov
add
imul
fbstp
mov
loope
pop
mov
fs
in
or
dec
and
in
movs
sub
je
and
push
jb
js
sub
dec
out
ins
fs
adc
fcom
cmp
js
shl
popa
jge
adc
adc
jne
jge
fistp
xor
jns
rcr
aas
push
push
stos
push
sar
push
xor
and
sti
sub
bound
outs
icebp
fst
pushf
jmp
inc
sbb
daa
cmps
xor
jae
xor
xchg
movs
mov
jb
ficom
and
sbb
adc
inc
push
cwde
push
hlt
int3
or
pop
popa
pop
rcl
dec
les
ins
dec
pop
lods
pop
lods
pop
aas
cs
fbld
js
cmp
jae
xor
(bad)
lock
inc
pop
sbb
pop
outs
out
push
(bad)
jg
pop
mov
js
inc
sub
retf
int3
dec
inc
push
gs
mov
push
sub
out
sub
scas
hlt
aam
leave
xor
xchg
dec
pop
bound
mov
mov
xchg
push
(bad)
ins
aas
mov
cmps
push
sub
das
movs
ins
arpl
fiadd
std
and
push
repz
xchg
(bad)
fiadd
cmp
sbb
div
rcr
mov
dec
pop
scas
xchg
jmp
nop
push
out
inc
repz
pop
pushf
cmp
push
cmp
or
in
(bad)
jmp
push
mov
lahf
push
call
aam
mov
push
fcomp
cmp
or
out
test
dec
js
and
(bad)
jge
dec
loop
call
mov
shl
jno
mov
push
mov
xchg
jns
mov
sub
jnp
cmp
sahf
(bad)
in
lods
add
mov
pop
push
movs
aaa
dec
repz
in
in
sub
pop
mov
fisub
div
hlt
ins
inc
retf
cmp
mov
(bad)
hlt
into
or
nop
jp
xchg
test
sahf
out
mov
and
jp
shl
cmp
sbb
inc
fisubr
test
cmp
push
inc
int
(bad)
fstp
fisub
addr16
std
movs
daa
add
(bad)
xchg
fisub
enter
enter
jns
dec
sti
ja
xchg
inc
pop
or
mov
add
je
push
or
repnz
retf
fmul
jle
mov
push
dec
and
sahf
mov
addr16
adc
xchg
xchg
and
xchg
cdq
stc
cmps
fist
inc
aaa
push
pop
lock
mov
push
int
mov
pop
outs
xor
popa
jo
outs
sbb
enter
(bad)
repnz
cmp
mov
xor
dec
jle
(bad)
or
add
leave
bound
push
aad
lods
cvtdq2ps
xchg
push
push
cmc
enter
fcom
add
dec
in
mov
dec
adc
mov
pusha
daa
add
popa
das
xchg
pop
push
outs
lea
(bad)
cmps
or
ins
push
pushf
mov
fldenv
pushf
jae
repz
jnp
xchg
mov
imul
jae
and
inc
rcr
adc
iret
inc
jb
xor
dec
pop
add
jmp
dec
lahf
push
(bad)
rcl
cmp
pop
retf
push
pusha
in
nop
fwait
ins
shl
daa
stos
jae
and
cmp
fiadd
and
jge
movs
push
sbb
js
or
jnp
pop
cmp
fwait
jns
dec
xchg
mov
xor
push
icebp
pop
push
cmc
test
adc
retf
mov
or
xor
jne
gs
inc
loope
add
mov
hlt
je
adc
clc
xchg
out
jnp
psadbw
sub
or
push
(bad)
add
cmp
mov
in
test
fld
push
inc
or
jmp
cli
mov
idiv
push
jae
jmp
push
shr
pop
push
add
pop
add
mov
scas
iret
sbb
add
pop
mov
push
cmp
fld
in
jmp
cmp
iret
pop
mov
xor
jb
push
int3
xchg
pop
jp
cdq
imul
pop
push
jp
lock
and
pop
je
(bad)
pusha
out
cmp
xor
cmp
push
jecxz
push
mov
jge
je
push
call
sub
pop
stos
sub
repz
je
mov
std
jne
cmp
cli
xchg
shl
jg
scas
jne
xchg
clc
sti
bnd
jmp
aas
fmul
mov
sbb
xchg
shl
inc
call
xchg
jno
js
test
mov
repnz
js
popa
fst
out
adc
inc
adc
pop
jne
xor
dec
push
jmp
js
test
sti
jle
sbb
cmp
and
xchg
inc
int
xor
js
std
bound
cmp
cmp
clc
xor
imul
add
and
rcl
adc
ss
inc
imul
dec
xchg
stos
sar
and
ret
or
call
cmp
inc
push
cli
faddp
xor
and
nop
sub
call
imul
inc
loopne
icebp
pop
sub
mov
pusha
mov
push
popf
data16
in
mov
and
imul
mov
int3
enter
lea
sbb
and
out
int3
aas
xor
dec
inc
and
sub
int3
lds
jge
adc
push
cmp
mov
jl
push
sti
inc
jge
jne
xchg
sbb
fidiv
repz
sub
shr
fsubr
data16
mov
xor
stc
mov
xor
imul
dec
jae
push
sbb
sbb
stc
in
je
je
mov
mov
xchg
cmp
pushf
imul
push
pop
lods
sbb
(bad)
stc
in
int3
retf
cmp
sbb
cmp
mov
and
add
stc
in
or
adc
cmp
idiv
and
sub
xor
pop
cmp
int3
pop
inc
sbb
stc
in
pop
pop
lods
in
fs
cmp
cmp
test
xchg
mov
pushf
imul
push
lods
data16
les
sbb
xor
sbb
push
in
stc
in
hlt
(bad)
and
and
add
or
pop
adc
sbb
or
and
sub
in
xor
cmp
call
dec
mov
and
fs
ins
sbb
pop
mov
test
out
xchg
sub
pushf
je
lods
(bad)
jmp
and
xor
cvttps2pi
aam
add
jae
in
sbb
push
cmps
pop
pop
dec
add
cmp
adc
sbb
je
je
stc
in
sub
xor
cmp
cmp
push
stc
in
pop
pop
pop
in
fs
cmp
pop
pushf
ds
mov
xchg
stc
gs
imul
lods
jae
mov
mov
push
int3
stc
in
aam
fcomp
dec
in
cmp
mov
and
xor
sbb
or
in
adc
sbb
enter
cmp
xor
cmp
lods
gs
jae
dec
sbb
cmc
xchg
jo
stc
in
ins
retf
popf
push
test
aaa
xchg
aam
pushf
clc
imul
lods
push
mov
in
mov
retf
cmp
mov
in
xor
in
in
jae
hlt
push
int
sbb
add
or
cmp
sbb
add
xor
cmp
call
stc
in
push
retf
int3
dec
data16
xchg
pushf
jmp
mov
clc
fwait
xor
xchg
push
cmc
xchg
cmps
test
das
dec
ror
cmp
loope
xchg
ret
adc
shl
out
sub
xor
sub
mov
sub
sbb
pop
xchg
movs
mov
cmps
scas
push
mov
sub
call
xchg
cmp
js
cdq
pusha
sub
lea
cwde
cmp
pop
stos
aam
clc
mov
cmp
aam
xchg
js
pop
js
xor
mov
call
(bad)
loopne
aas
(bad)
call
test
aam
adc
push
push
repnz
mov
in
xor
xchg
jnp
in
push
hlt
fs
clc
outs
xchg
int
data16
in
push
out
sub
cmp
fs
inc
cmp
adc
je
out
cmp
ins
test
popf
pop
cmp
and
push
cs
xor
cmp
movs
xor
jb
pop
mov
les
xchg
call
aam
sbb
stc
or
jmp
and
outs
pop
fs
dec
or
je
add
xchg
cwde
retf
popa
jmp
call
mov
and
push
call
mov
push
rol
push
jl
inc
pop
sbb
(bad)
push
dec
cmp
dec
mov
cmp
clc
fmul
mov
popa
cmp
clc
cld
out
or
jl
sbb
cmp
js
xor
cmp
and
std
jmp
movs
or
or
clc
mov
xor
jl
cmp
(bad)
lock
scas
shr
mov
aam
lock
sar
mov
jl
cmp
in
jp
imul
cmp
not
jg
(bad)
add
ins
cmp
jl
cmp
adc
gs
xlat
(bad)
push
in
std
xor
and
gs
sbb
(bad)
fld
arpl
lods
cmp
sbb
out
push
inc
mov
cmps
arpl
(bad)
mov
xor
cmp
jl
mov
inc
popf
push
bswap
std
aas
fiadd
mov
jmp
mov
fisttp
cwde
jmp
jl
pop
jo
push
mov
dec
cmp
jo
sub
ror
mov
mov
in
cmp
cmp
je
hlt
sbb
push
(bad)
stc
ins
add
movs
retf
into
std
aam
adc
jge
popa
xor
or
fwait
pop
mov
and
xor
sti
rcl
pop
jl
cmp
inc
pop
sub
push
cli
and
hlt
fs
sub
std
adc
je
jl
jno
pop
pop
test
xor
and
cmp
(bad)
cli
cmp
pop
cmp
in
cmp
sbb
call
cdq
pop
or
popa
jns
(bad)
fs
push
mov
sbb
pop
std
in
call
pop
fs
push
popa
call
ss
add
das
daa
mov
adc
jg
jge
push
inc
and
pop
call
mov
gs
mov
mov
inc
das
pop
mov
movs
stc
ins
push
call
mov
in
in
add
call
cmp
shl
ins
(bad)
fld
or
cmp
mov
push
shr
dec
mov
clc
mov
push
jl
cmp
les
clc
jo
push
std
aam
sbb
dec
jl
cmp
in
das
mov
cmp
sbb
sub
push
pop
jl
cmp
adc
gs
xlat
sub
and
jge
sub
arpl
pop
inc
pop
fstp
cmp
clc
fdivr
add
inc
lods
cmp
push
ins
in
fs
ins
cmp
imul
cmps
clc
cmp
aas
stc
sub
test
das
pop
popf
pusha
and
mov
mov
in
pop
jbe
std
mov
and
std
les
test
cmp
in
cmp
aam
aas
call
mov
test
fwait
mov
dec
cmp
jne
adc
jl
cmp
jno
jle
mov
sbb
hlt
pushf
add
in
mov
mov
(bad)
loopne
jl
mov
xor
std
push
xor
fs
mov
sub
pop
push
popa
ins
adc
je
push
outs
xor
mov
pop
ror
cmp
xchg
popa
or
movs
lods
mov
std
xor
mov
(bad)
or
pop
cmp
clc
cld
fcmove
addr16
cdq
inc
sbb
push
rcl
loope
cmp
aam
xchg
ja
cmp
in
cli
xor
cwde
sbb
imul
int
jl
cmp
not
pushf
sbb
std
adc
or
jns
hlt
pop
test
sub
inc
js
test
bound
mov
cmp
imul
les
xchg
je
adc
add
add
sbb
sbb
inc
idiv
adc
ss
mov
test
push
or
dec
les
fs
xor
out
shl
outs
cdq
je
inc
add
int
rol
test
fwait
aas
ss
lock
mov
jge
adc
dec
dec
int3
stos
and
std
mov
push
mul
cdq
sahf
xlat
sbb
xchg
(bad)
cli
sub
or
adc
inc
inc
and
imul
inc
data16
arpl
aam
call
inc
fdecstp
in
cld
addr16
mov
or
cs
mov
dec
cdq
jp
lds
jns
std
xor
fisubr
hlt
jecxz
sub
mov
sbb
popa
ds
test
mov
sub
push
inc
cmps
xchg
pusha
and
pop
lods
aad
ins
xor
popf
repnz
xor
xchg
ins
adc
or
cli
cli
out
gs
adc
in
and
aas
loop
or
and
mov
push
xchg
loope
push
in
add
mov
jbe
mov
mov
imul
fld
data16
mov
bound
fbstp
jb
movs
idiv
or
lods
scas
xor
sub
jmp
loopne
xor
dec
out
xchg
and
push
nop
repnz
push
pop
addr16
lds
cmps
in
mov
or
adc
xor
mov
cs
xchg
mov
ins
inc
xchg
inc
ins
scas
cmp
scas
cmp
cli
dec
push
pop
gs
and
ins
sbb
sbb
aad
and
mov
add
sar
cmp
add
pop
cdq
push
adc
xchg
addr16
inc
jmp
ret
sbb
sbb
test
mov
loopne
push
and
jp
popf
adc
adc
adc
hlt
and
int
repz
movs
cs
cmp
xchg
in
pop
push
je
clc
mov
jecxz
pop
out
mov
test
dec
lahf
cld
mov
(bad)
iret
jae
gs
cmp
sahf
mov
ins
xor
jb
sbb
sub
cmp
sub
sub
adc
xor
jns
xor
sbb
int3
inc
retf
pop
push
inc
gs
mov
mov
adc
and
dec
inc
in
gs
lea
dec
iret
out
mov
out
(bad)
jmp
sub
cwde
jb
mov
add
dec
mov
push
adc
mov
ins
adc
cmc
(bad)
or
cmp
mov
cld
and
rcr
sbb
push
or
rol
das
pop
lds
lods
rcr
stc
inc
shr
jb
adc
sub
shl
repz
sub
lahf
std
xor
push
or
cmp
lods
and
mov
mov
fsubr
fadd
pushf
repnz
xchg
fsub
mov
xor
rol
pop
or
test
push
cmp
mov
inc
sbb
sbb
xchg
call
(bad)
jmp
out
cdq
call
mov
lock
out
add
idiv
dec
ins
push
inc
pop
mov
cwde
and
ins
sbb
mov
daa
pop
jbe
lds
dec
push
mov
cld
hlt
xor
out
sub
(bad)
(bad)
pop
mov
jge
dec
cmc
adc
rol
cs
and
push
adc
je
adc
std
daa
inc
xchg
fstp
stc
pop
sbb
pop
clc
pop
inc
shl
push
test
mov
shr
adc
lock
or
dec
or
inc
and
cmp
jne
cld
clc
sti
or
rcl
and
pop
xchg
das
jp
xlat
and
jg
(bad)
fcmovnu
aam
push
(bad)
mov
js
xchg
repnz
jne
mov
dec
shr
hlt
out
fs
pop
pop
jle
in
pop
repnz
pop
loopne
cmp
sbb
repnz
cmps
xchg
mov
xor
mov
dec
adc
enter
xchg
aam
loopne
call
push
test
jne
scas
int
inc
(bad)
imul
fs
mov
jmp
or
xor
inc
test
iret
dec
sbb
jne
push
mov
sahf
mov
and
popa
leave
pusha
(bad)
jg
dec
pop
ret
out
pop
push
mov
mov
sub
mov
jp
xor
les
xchg
inc
aad
lds
and
and
jo
push
not
xchg
dec
xchg
push
mov
xchg
sub
addr16
rcl
and
cmps
in
in
push
in
aam
les
mov
movs
add
aam
leave
xchg
jae
sub
sar
push
jne
lock
aam
ins
(bad)
hlt
mov
movs
sbb
fs
xor
push
jne
and
push
add
pop
hlt
adc
aam
dec
push
retf
dec
sbb
je
nop
pop
jmp
movs
add
retf
mov
dec
hlt
fs
inc
push
and
add
sub
sbb
iret
call
data16
retf
sub
call
add
and
sub
in
sub
imul
mov
cmp
fs
lock
pop
xor
and
adc
cmp
hlt
adc
sub
hlt
test
and
call
lock
adc
add
hlt
hlt
mov
mov
fsubr
xchg
shl
ss
push
push
(bad)
xchg
hlt
and
adc
add
hlt
or
shr
addr16
mov
call
inc
sub
or
out
and
std
ins
mov
sub
push
or
inc
(bad)
stos
(bad)
fiadd
pop
adc
aas
lahf
xchg
fadd
test
or
xchg
ja
je
ins
movs
pop
test
lods
mov
pushf
(bad)
stc
pop
fisubr
sub
call
ror
(bad)
clc
sbb
fst
shl
add
push
jno
jbe
push
movs
and
cmp
aam
inc
arpl
adc
inc
pusha
pop
jl
sahf
or
adc
sahf
and
ins
(bad)
cmp
inc
mov
sub
pop
int
or
leave
add
push
mov
aaa
or
sub
inc
xor
inc
and
shr
inc
ret
mov
rcr
pushf
sub
sub
test
adc
pop
sub
aam
das
jne
push
cmc
test
jbe
cmp
pushf
and
out
int
jp
lods
iret
mov
mov
inc
jle
or
push
pop
(bad)
arpl
stos
sti
cmp
mov
jge
jnp
lods
xchg
sbb
ja
mov
fcom
es
xchg
mov
nop
ret
comiss
mov
xchg
push
jbe
xor
cld
sti
gs
xor
out
cwde
pop
inc
aad
xchg
sub
mov
in
mov
sbb
ficom
jl
pop
jae
cmp
je
aad
lods
cmps
mov
push
lods
push
cmp
xor
ins
sbb
daa
xchg
imul
stc
ret
sahf
les
add
lods
xchg
je
pushf
call
mov
xor
shr
sub
je
adc
cld
dec
jbe
js
je
jns
xchg
inc
pushf
gs
xlat
scas
mov
fidiv
es
imul
adc
rol
fmul
test
mov
loopne
or
aad
enter
out
sar
call
push
std
xor
sbb
cmp
mov
sbb
pushf
clc
loop
hlt
mov
inc
and
rcl
arpl
xor
dec
sbb
push
out
std
(bad)
loop
mov
pop
dec
je
push
in
daa
xchg
in
mov
dec
dec
retf
add
jbe
sub
xchg
or
mov
bound
aaa
test
ficom
and
mov
mov
call
adc
je
xchg
jnp
xchg
lds
in
imul
cmc
or
mov
shr
rol
push
punpckldq
xchg
outs
mov
mov
mov
jne
adc
call
lods
jecxz
lock
hlt
xchg
push
add
inc
dec
adc
movs
dec
arpl
sti
in
xor
cmp
mov
sti
test
or
in
and
imul
mov
cmps
in
inc
dec
(bad)
ins
div
push
mov
push
dec
cmp
shl
stos
pop
fdiv
mov
push
push
cs
test
cld
xchg
push
push
inc
outs
outs
out
iret
hlt
adc
call
sub
aam
cld
jge
call
sbb
jmp
nop
add
dec
sub
call
test
dec
pop
lock
cmps
jb
add
cmp
and
je
in
stc
lods
dec
or
cwde
dec
adc
cmp
mov
cmp
into
push
and
mov
jmp
rcl
jnp
into
neg
(bad)
sbb
inc
mov
xor
mov
cmp
xchg
nop
push
pusha
push
jp
(bad)
imul
jo
mov
ret
mov
icebp
fadd
sub
cwde
cmc
jnp
fs
cmp
pop
std
xchg
push
cmp
fidivr
int3
lods
lds
es
pusha
dec
ficomp
adc
pop
fisttp
bound
sbb
add
ins
pop
arpl
mov
std
repz
sti
sbb
es
xor
fidivr
inc
xchg
or
out
push
pop
mov
or
imul
dec
stc
mov
push
xor
in
push
xor
adc
jmp
fmul
arpl
jge
in
inc
adc
es
push
fld
je
push
int3
mov
icebp
cmp
pusha
sub
fs
xor
xchg
xor
repz
and
outs
pop
mov
lea
(bad)
mov
lds
sbb
push
call
add
xor
ins
imul
int
jge
hlt
xchg
sbb
addr16
fidiv
cmp
addr16
xor
arpl
xlat
push
pop
(bad)
cmp
icebp
pop
ss
shr
sub
dec
int3
aaa
dec
not
cmc
jge
in
sub
retf
jo
dec
xor
sbb
pop
push
pusha
push
clc
jo
inc
scas
push
push
xchg
jmp
and
in
sub
jp
clc
lods
fbld
adc
pop
sub
cmp
hlt
in
imul
jmp
push
or
stos
pop
das
adc
scas
pop
sub
pop
mov
sti
sub
fwait
mov
lock
cmp
mov
ins
ret
mov
cmp
stos
dec
or
mov
push
data16
jbe
cwde
pop
out
inc
rcr
dec
or
mov
(bad)
adc
adc
je
push
retf
rol
pop
ja
xor
in
push
sahf
pop
jge
xchg
js
jne
aas
out
ret
addr16
and
or
imul
jns
mov
sub
test
mov
dec
jne
stos
jle
and
mov
fs
push
retf
retf
mov
movs
leave
add
pop
std
cmp
in
and
mov
sar
stc
in
pop
retf
xchg
fld
std
loopne
into
imul
inc
fdivr
outs
pop
out
(bad)
ins
out
fs
pop
jmp
add
int3
lahf
sbb
out
pop
add
int
cmps
jae
mov
dec
into
ins
hlt
jle
xchg
cmps
popa
jae
cld
ret
stc
ins
ins
mov
mov
(bad)
cmp
inc
lock
outs
mov
(bad)
xchg
pop
daa
jge
addr16
pop
out
jmp
test
fstp
repz
lock
(bad)
mov
popf
js
sbb
ins
call
xchg
dec
and
jbe
or
push
call
xchg
iret
stos
pop
add
lock
sub
cmp
push
add
jbe
loop
and
imul
aam
scas
pusha
push
dec
inc
mov
test
(bad)
xchg
adc
push
xchg
sub
movs
loopne
dec
adc
adc
push
enter
adc
ss
repnz
mov
adc
hlt
loope
jmp
fdiv
dec
jp
push
mov
icebp
jl
cmc
xor
xchg
and
inc
add
sbb
sub
inc
cmc
dec
std
pusha
jb
jbe
xor
sbb
lock
push
lods
xchg
les
cwde
inc
adc
dec
jno
xchg
jmp
daa
pop
sub
jne
into
inc
sub
push
sub
push
xchg
push
jae
fisubr
pop
ret
fnstsw
cmp
inc
je
gs
dec
int3
inc
adc
sbb
pop
sbb
mov
leave
mov
arpl
repnz
or
push
pushw
jecxz
sub
lea
xor
pop
dec
cmp
mov
js
cmps
pop
mov
stc
cmc
sbb
or
popa
pushf
mov
jg
mov
fldenv
ret
dec
movs
cmc
dec
mov
out
fcomp
in
les
cmps
xchg
adc
imul
cmc
sti
call
and
cmp
int3
bound
maxps
scas
cmp
scas
sub
in
xor
sub
lods
fsubr
mov
fmul
cmps
iret
ss
daa
pop
pop
lods
fwait
(bad)
add
jmp
movs
jg
and
push
xlat
and
xchg
xchg
jle
imul
inc
cmc
push
fs
mov
jne
movs
add
or
xor
inc
pop
pushf
loope
dec
arpl
push
xor
mov
pop
pop
mov
repz
mov
fisttp
ins
xchg
je
jmp
push
or
push
sub
mov
pop
mov
push
repnz
xor
hlt
fwait
dec
sub
and
sahf
ins
mov
and
repnz
cmp
jae
sub
jo
sub
bound
pop
dec
or
sub
and
push
cmp
mov
adc
div
xor
add
jnp
bound
inc
pop
sub
sub
push
mov
xchg
push
mov
sub
rol
pop
(bad)
mov
pop
sub
std
mov
pop
adc
pop
or
adc
mov
pusha
pop
retf
in
jmp
in
in
test
out
sub
pusha
xchg
xchg
jp
sub
push
leave
sub
push
std
sbb
popf
pop
jge
pop
cld
pop
mov
mov
dec
mov
mov
xchg
inc
hlt
fcom
gs
cld
inc
clc
(bad)
loope
push
dec
jo
gs
cmp
cmp
pop
mov
pushf
sub
out
addr16
das
adc
xor
shl
dec
int3
test
push
in
mov
daa
cmp
scas
xor
aam
stc
fs
and
rcl
cld
repz
add
loopne
les
int3
movs
cmp
jae
xchg
cmps
out
or
in
jno
fs
in
mov
sbb
sti
or
add
adc
leave
xor
bnd
or
cmc
call
cmps
jne
sub
cwde
inc
int
pop
cs
das
ret
xor
inc
daa
dec
sbb
mov
jmp
mov
iret
and
push
push
cmp
aas
inc
push
sti
or
outs
es
xchg
test
sub
scas
and
(bad)
fbstp
jns
(bad)
sub
sti
stos
das
in
xchg
js
dec
addr16
and
and
into
push
mov
xor
pop
sub
js
ins
xchg
xchg
xor
mov
add
mov
gs
mov
ret
mov
ins
jnp
mov
pop
xor
(bad)
in
in
mov
pop
int3
pop
cld
xor
std
jne
pop
jo
push
repnz
adc
js
dec
dec
add
sub
jbe
pop
leave
mov
cmp
push
lds
fs
call
(bad)
stos
pop
sub
cmp
push
xor
cli
jne
mov
sub
sub
cdq
mov
or
pop
into
xchg
push
loopne
outs
inc
pop
fistp
mov
loopne
jae
or
mov
mov
ss
jo
dec
jne
xchg
test
inc
div
cmp
sub
sbb
retf
stc
push
int3
ins
stc
mov
les
pop
jnp
ss
js
cmc
push
xchg
push
pop
mov
push
aam
pushf
pop
ins
stc
aam
ins
pushf
lahf
outs
idiv
adc
jno
cwde
jle
retf
pop
push
in
cli
pop
sub
and
sub
cmp
pop
dec
outs
xchg
(bad)
ret
popa
jae
call
sti
inc
xchg
arpl
jecxz
dec
cmp
pop
xchg
push
clc
loopne
fld
or
jne
cwde
cmp
(bad)
xchg
rcr
jns
repz
imul
aam
test
pop
mov
adc
mov
test
cli
jne
inc
jae
sub
and
and
loop
jb
icebp
push
cmc
cmc
jnp
mov
shl
popa
(bad)
gs
je
push
xchg
pop
cmp
test
jo
mov
jp
or
jge
lock
dec
sti
inc
test
cld
mov
outs
xor
inc
out
cmp
add
pushf
mov
lods
xchg
xchg
mov
xchg
pushf
out
pop
repz
in
jmp
jmp
es
dec
or
ins
fdivr
in
or
loope
lahf
das
add
pop
sub
sbb
jo
ins
jmp
xchg
ins
mov
rcr
lods
mov
ja
sti
inc
jne
in
hlt
je
mov
or
pusha
ins
jo
pop
xchg
ds
pushfw
sahf
imul
into
js
xchg
adc
sub
aam
sbb
cmp
data16
(bad)
ja
stc
dec
scas
pop
or
movs
aas
stos
ss
mov
cld
les
js
pop
loope
fnstenv
or
hlt
cmp
mov
outs
jmp
fst
pop
shl
xor
xchg
sub
bound
cdq
mov
xchg
xor
fwait
call
dec
adc
xchg
cmc
in
adc
test
call
(bad)
fsubr
(bad)
sbb
sub
out
pop
pusha
push
inc
fst
xchg
inc
add
cmc
retf
stos
das
aad
xor
xchg
retf
xor
jp
cs
mov
pusha
loope
(bad)
pop
dec
add
jno
mov
lock
jns
xor
sub
add
push
and
jae
fs
jo
dec
outs
pop
lock
les
fstp
clc
in
pop
data16
(bad)
iret
sahf
es
sub
push
xor
(bad)
push
gs
dec
push
inc
popa
js
push
inc
mov
and
inc
dec
int
mov
stos
fcmovnu
xor
arpl
cdq
sub
retf
pop
xor
dec
cli
xchg
push
enter
pop
int3
inc
sub
mov
adc
or
mov
cmp
retf
int3
mov
cmc
jae
dec
retf
shl
addr16
(bad)
mov
push
call
pop
fdiv
not
and
enter
mov
stc
sub
call
sub
stos
add
hlt
jmp
cmc
sub
dec
adc
and
les
push
loop
dec
pop
mov
sar
in
dec
imul
imul
mov
arpl
int3
jle
cwde
pop
scas
in
je
fadd
fdiv
das
lahf
ficomp
xchg
or
xor
mov
mov
mov
leave
and
repnz
push
adc
das
mov
in
data16
cmp
mov
lods
in
mov
aad
sub
mov
hlt
sub
cmp
ins
pop
mov
add
mov
xchg
repz
or
pop
sbb
aad
sub
jle
or
sub
cmp
imul
adc
xchg
pop
pop
cmps
pop
cmps
dec
xchg
dec
jmp
pop
add
xchg
(bad)
sbb
mov
cmp
jl
push
rol
sar
dec
cmp
pop
push
ret
(bad)
add
and
in
js
sub
mov
adc
jns
pop
push
cmp
mov
push
lock
ficomp
ins
ins
mov
js
cmp
mov
dec
adc
fmul
push
push
stos
dec
jno
mov
call
cld
mov
sbb
sbb
std
mov
lahf
push
mov
add
jmp
dec
xchg
shr
(bad)
sub
mov
xchg
pop
mov
mov
or
lea
cmp
sub
iret
dec
or
leave
test
xchg
push
pop
(bad)
stos
xchg
push
cmp
imul
push
in
cdq
inc
jno
pop
sub
and
ret
or
jge
xchg
push
std
xchg
mov
jl
jne
xchg
xlat
inc
aam
sbb
into
in
adc
push
jge
push
xchg
arpl
(bad)
imul
jns
jle
mov
add
je
nop
xor
shr
lods
lds
rcr
jmp
push
sti
shl
clc
mov
clc
jno
jge
jb
ins
popa
xchg
inc
loope
push
sbb
xor
stos
fsubr
rcl
mov
aam
popf
retf
lahf
push
dec
push
sub
cmp
xchg
dec
pop
call
jge
mov
inc
push
leave
mov
in
pop
cmp
loope
imul
pop
into
call
push
mov
adc
xor
sub
cwde
pop
movups
inc
push
test
push
movs
and
jno
add
and
xlat
adc
jge
rcr
mov
adc
pop
sbb
pop
xchg
fs
repnz
pop
adc
dec
aas
mov
push
pop
jg
(bad)
retf
loope
push
sbb
lea
stos
jae
jge
call
ins
mov
dec
add
lea
ret
jmp
cmp
xchg
cmc
scas
push
sub
mov
push
clc
cdq
loopne
mov
cmp
add
cmp
cld
pop
mov
hlt
je
loop
cmp
mov
(bad)
fisttp
jmp
enter
mov
pop
push
push
es
xor
and
xchg
push
xchg
rol
retf
std
xor
arpl
jle
or
fsub
sub
imul
sub
std
xor
gs
sbb
lods
pop
cmp
dec
pop
mov
aad
jecxz
ins
sar
(bad)
mov
es
nop
pop
(bad)
jp
cwde
adc
dec
rcl
cmc
push
jb
std
jmp
xchg
cmp
movs
inc
pop
xor
pop
lahf
and
xor
test
adc
xor
xor
into
scas
pop
mov
sar
inc
or
aad
jge
std
nop
rol
dec
pop
mov
daa
pop
fs
xor
clc
retf
mov
pop
add
in
fcom
pop
pop
xchg
sbb
jb
lea
icebp
or
or
sub
retf
cmc
pop
sub
jp
cdq
fs
popf
int3
inc
jae
ds
push
mov
adc
out
cmp
out
stos
sub
ja
cmp
ins
jp
(bad)
pop
fsubr
cmp
mov
sbb
or
or
int3
cwde
cmp
xor
nop
mov
pusha
push
xchg
mov
dec
pop
je
int
push
fidiv
mov
and
and
sub
pop
jmp
push
pop
xchg
into
mov
icebp
hlt
inc
int3
jne
jbe
hlt
mov
push
sub
ds
mov
sbb
sub
gs
js
jo
aad
push
outs
pop
pop
les
out
sub
dec
cwde
xor
nop
dec
push
push
mov
pop
cmp
mov
and
call
and
push
lea
cmp
neg
sbb
jmp
repnz
out
aaa
in
add
sub
push
vmwrite
mov
fsin
dec
sub
jle
inc
fistp
pop
retf
dec
lahf
popa
adc
or
add
test
outs
jns
mov
pop
mov
mov
jae
add
pop
cmc
jge
jecxz
fadd
gs
pop
pop
cwde
in
xchg
lahf
fnstsw
push
pop
or
(bad)
pop
inc
dec
jmp
mov
mov
pop
mov
arpl
out
fwait
ins
sub
inc
les
cmp
mov
pop
mov
inc
mov
sub
addr16
push
js
xchg
or
pop
jns
push
inc
(bad)
aam
nop
xor
and
aaa
enter
cmp
pop
call
arpl
push
xchg
in
xchg
jo
fldenv
in
fdiv
test
in
or
and
imul
or
fmul
pop
call
inc
in
sub
addr16
imul
pop
push
gs
jo
aad
lock
pop
clc
in
lock
cmc
xchg
bound
cmp
lock
cmp
les
or
pop
xor
adc
in
retf
jo
xor
sub
call
sbb
cmp
push
push
(bad)
out
cmp
cmp
lock
mov
push
icebp
or
clc
nop
xchg
jmp
cmc
ins
fidivr
adc
cmp
jb
les
les
in
or
mov
ret
mov
sub
push
pop
adc
and
(bad)
jmp
ret
stc
(bad)
sar
mov
mov
cwde
int3
push
enter
jmp
movs
cmp
imul
mov
fs
dec
mov
repz
mov
iret
pop
(bad)
cmp
lahf
cwde
test
mov
add
mov
push
or
pop
in
jecxz
inc
(bad)
pop
push
adc
imul
sahf
int
and
pop
push
pop
enter
xchg
inc
sbb
mov
je
mov
cmp
mov
fild
jmp
nop
push
jbe
out
ins
and
test
call
mov
int3
ins
fdivr
in
mov
out
dec
jge
sar
std
dec
fcom
jbe
fbld
pushf
(bad)
(bad)
push
xchg
xlat
cmp
xchg
cmp
stos
xchg
jbe
imul
stc
sub
adc
adc
loop
daa
ins
cmp
std
dec
cmp
(bad)
imul
popa
dec
aaa
retf
jns
test
push
cmps
jae
push
jb
call
sub
fucom
mov
arpl
pushf
cld
fsubr
sbb
(bad)
xlat
xchg
or
fbstp
movs
sbb
nop
mov
jl
sub
les
xchg
shl
pop
test
les
inc
fld
dec
call
sub
push
fisubr
stc
mov
pop
jecxz
inc
imul
add
cmps
or
cwde
push
jmp
lds
cs
mov
adc
arpl
ret
pop
dec
outs
xchg
test
cmp
stos
sar
and
data16
mov
jp
sbb
push
push
inc
pop
(bad)
in
pop
cmp
jmp
push
jb
jne
xchg
cmp
int3
jmp
pop
sub
fdiv
push
popa
shl
and
adc
cdq
and
inc
mov
or
pop
xchg
sub
ins
mov
push
out
out
inc
pop
adc
les
push
mov
jle
je
push
sbb
jmp
popa
(bad)
nop
push
jg
sahf
inc
scas
mov
imul
or
je
mov
mov
jno
jno
sub
fstp
imul
or
mov
mov
fs
inc
pop
or
mov
(bad)
xor
cmp
aaa
fidivr
adc
cmp
xor
pop
(bad)
das
push
pop
aam
fadd
bswap
repz
adc
not
pop
mov
aam
inc
adc
fbld
xor
pop
sti
pop
data16
lea
pop
imul
push
push
sbb
add
mov
fnsave
jp
cmp
pushf
inc
mov
pop
pop
pop
jp
pop
xchg
adc
test
sbb
in
scas
shr
add
sbb
(bad)
fmul
push
iret
retf
jle
pop
jne
mov
jns
push
xchg
hlt
pop
pop
and
mov
push
jo
dec
sbb
test
sub
pop
dec
push
or
pop
mov
(bad)
stc
mov
aas
jnp
(bad)
mov
rcl
bound
fcomp
(bad)
mov
scas
repz
mov
in
cwde
(bad)
clc
cmp
pop
dec
in
cmps
dec
sbb
std
in
push
not
adc
(bad)
mov
dec
sbb
shr
adc
cli
outs
ds
jbe
inc
not
push
and
mov
inc
hlt
xor
push
pop
push
lods
mov
movs
mov
xchg
and
movs
rdmsr
sub
dec
sbb
lea
neg
adc
movs
jmp
cmc
sbb
mov
pop
imul
loope
cmp
adc
xchg
or
(bad)
cld
cmc
jb
dec
pop
addr16
mov
push
add
xlat
call
inc
pop
and
(bad)
dec
pop
pop
adc
sbb
js
ds
push
ins
ins
push
or
dec
test
aam
fucomi
shl
call
les
fist
jmp
push
shr
jae
xchg
fwait
test
jne
sub
cdq
das
sti
cmp
pusha
push
mov
mov
pop
jmp
jg
out
ds
adc
cmc
mov
sub
dec
stos
inc
push
call
jmp
cmp
ds
mov
hlt
into
dec
mov
test
mov
push
or
push
jmp
or
xchg
test
xchg
jle
adc
ins
inc
sub
adc
ins
retf
and
jne
js
sub
adc
fdivr
outs
in
popf
dec
xchg
xlat
push
cmp
mov
enter
xor
cmp
loopne
ret
out
enter
xchg
jno
cmp
repz
pop
lahf
cmps
inc
shl
pushf
inc
repz
popa
shl
mov
hlt
sub
leave
cwde
and
and
pop
cli
push
test
fisub
sub
push
clc
cmp
mov
xor
in
fist
(bad)
xor
std
fstp
mov
aas
mov
mov
push
fiadd
scas
scas
dec
cmc
shl
fstp
cmp
xchg
daa
(bad)
mov
repnz
(bad)
(bad)
shl
sbb
push
call
add
cmp
sbb
pop
push
popf
adc
repnz
out
dec
push
xchg
imul
pusha
in
popf
or
out
inc
pop
into
pushf
aam
in
cmp
lods
xchg
mov
xchg
addr16
cli
mov
or
mov
stc
pop
je
mov
ins
inc
dec
fist
dec
gs
cwde
mov
mov
sub
inc
ss
inc
(bad)
push
sub
aam
dec
retfw
xor
outs
icebp
es
jnp
enter
call
cmp
in
sub
cs
std
sub
pop
sub
cmp
jbe
sub
pop
fcmovu
dec
pop
sub
xor
jmp
mov
fadd
call
std
outs
repz
sub
sub
pcmpeqd
clc
mov
push
sub
std
jae
add
add
sub
cmc
xor
xor
push
push
pop
mov
inc
movs
dec
ja
popa
js
je
xor
xor
push
or
adc
mov
js
pop
int3
xchg
int
push
sti
jne
into
and
lods
mov
inc
sbb
popf
xor
repnz
es
fdiv
mov
jge
enter
retf
imul
jo
push
outs
lods
and
dec
push
call
xchg
rcl
pop
mov
mov
sbb
jg
adc
lods
call
mov
sbb
and
enter
movs
stos
int3
ret
pusha
push
jp
cmp
std
mov
mov
adc
mov
gs
or
out
push
push
jmp
fild
mov
push
cs
and
mov
fist
sahf
in
bound
add
stos
cmp
clc
fcmovbe
test
out
add
pop
cmp
dec
jbe
pop
int
iret
pop
cmp
fsub
shl
jmp
mov
mov
sbb
sar
mov
xchg
(bad)
jnp
xor
jge
xchg
pop
mov
rcl
loopne
lock
inc
sbb
xchg
inc
sub
jne
sub
mov
push
daa
or
scas
leave
mov
cli
jne
push
xor
aaa
jnp
inc
lods
or
mov
int
cmp
cli
pop
xchg
(bad)
push
adc
retf
xchg
dec
fdiv
js
jle
adc
call
sar
stos
mov
mov
push
xor
loopne
add
fisttp
(bad)
das
div
arpl
adc
push
dec
sub
rol
js
jmp
push
dec
mov
jo
pop
push
xor
test
mov
push
icebp
pusha
sbb
je
adc
jmp
ins
pop
scas
pop
xchg
add
cld
pop
dec
imul
gs
push
jp
inc
adc
pop
sbb
ins
outs
sbb
mov
push
pop
mov
sbb
cmp
jle
push
jnp
stc
rol
mov
(bad)
jmp
pop
lss
stos
mov
ret
test
shl
fwait
cmp
xor
das
push
pop
dec
or
rol
inc
retf
cmp
pop
dec
shl
inc
push
aas
and
xor
mov
cmps
mov
mov
jae
stos
gs
xchg
and
sbb
sub
xchg
pushf
fild
mov
dec
dec
push
sub
sub
sub
test
call
in
loopne
ror
shl
cmp
pop
outs
jbe
imul
inc
clc
mov
sbb
sub
pop
int3
jge
dec
daa
cmp
aas
lds
movs
mov
pop
div
cmp
out
outs
add
fs
add
mov
or
cdq
push
popf
inc
bound
shl
jmp
mov
xchg
push
mov
dec
jmp
jbe
dec
loope
push
mov
cmps
mov
in
add
out
inc
xchg
jle
pop
sub
cmp
outs
clc
nop
jbe
mov
push
jecxz
inc
and
imul
gs
pop
std
jp
push
mov
and
pop
leave
push
jmp
fistp
sbb
sub
xor
fmul
scas
pop
pop
das
inc
xchg
xchg
mov
pop
mov
adc
pop
jbe
push
mov
cmp
test
jo
xchg
rol
jno
xor
pushf
jp
shl
and
mov
in
dec
jnp
mov
jo
xor
push
mov
jp
push
pop
jo
mov
fsub
push
jp
fsubr
test
aaa
nop
je
mov
cmp
outs
ja
pop
je
mov
jns
xor
aam
push
pop
cmp
repz
and
sub
loopne
out
test
call
push
retf
aaa
jmp
sub
push
inc
xor
xor
pop
and
inc
das
mov
test
push
(bad)
mov
sub
or
ret
or
push
outs
sti
mov
sub
or
cmc
call
movs
xchg
push
sbb
outs
or
sub
ret
mov
xchg
clc
jae
inc
add
inc
dec
xor
inc
repnz
int3
mov
pop
imul
fiadd
pop
mov
adc
dec
cld
cld
iret
xor
pop
add
or
mov
daa
xchg
dec
fdivr
fild
adc
add
sbb
jno
(bad)
mov
add
fist
sub
jbe
cs
dec
and
xchg
inc
jmp
es
repz
sub
and
cwde
inc
sti
scas
jle
jae
outs
xchg
std
test
push
push
mov
jae
or
sbb
xlat
and
mov
cmp
pop
cmp
std
(bad)
jne
imul
dec
pusha
dec
jne
adc
pop
test
jmp
sahf
mov
push
xchg
stos
repnz
pop
mov
mov
push
gs
pop
mov
imul
ds
mov
idiv
pop
jmp
xor
fwait
xchg
adc
aam
adc
pop
or
dec
out
loopne
jp
lea
mov
sbb
xor
mov
rcr
mov
dec
fs
in
cdq
in
pop
and
js
adc
imul
inc
mov
jmp
hlt
out
nop
mov
mov
push
fistp
cli
dec
pop
fnstsw
out
mov
pop
out
outs
adc
les
sub
loope
dec
fsubr
scas
int3
pop
inc
out
mov
add
sub
cwde
stos
cmp
idiv
jg
sub
xor
adc
mov
sbb
jo
inc
or
fisub
je
pop
mov
xor
dec
movs
test
fs
push
mov
ret
pop
mov
sbb
inc
out
cmp
fistp
fadd
mov
stos
and
push
outs
loope
int3
jmp
mov
jp
jns
gs
xchg
js
mov
in
or
sub
les
pushf
xchg
sbb
pop
xor
dec
push
imul
fistp
fadd
out
or
dec
mov
push
pop
inc
mov
jmp
xchg
sahf
or
in
(bad)
imul
push
mov
cmp
dec
pop
sti
jb
xchg
xchg
jo
or
sti
sbb
add
ins
test
xchg
aad
rcr
in
push
inc
jmp
cmp
xor
pop
push
mov
mov
xor
test
lods
repz
push
cwde
xchg
lds
dec
xchg
push
xchg
push
es
ror
cmp
cmp
cmp
and
stos
shl
pop
fs
mov
fcom
imul
sub
push
lods
or
fstp
(bad)
(bad)
adc
cld
pushf
jae
push
dec
call
mov
mov
sahf
mov
inc
push
pushf
adc
or
pop
jo
xor
cmp
and
pop
pop
dec
test
jae
jno
jbe
popf
pop
push
(bad)
cwde
(bad)
push
push
(bad)
mov
mov
push
iret
inc
mov
mov
out
cmp
xor
nop
sbb
xor
pop
and
mov
pop
pop
cmp
cmp
xor
sbb
ins
cmc
xor
and
and
(bad)
mov
ja
and
xor
adc
iret
out
sub
movs
inc
jb
xor
inc
adc
fstp
call
das
fiadd
pop
mov
xlat
shr
pop
sub
dec
pop
and
or
pop
data16
cmp
push
adc
mov
stc
sti
shl
add
sub
loope
call
add
stos
or
jae
sti
mov
js
add
lahf
cmc
movs
sub
add
std
push
stc
pop
ror
mov
xor
adc
xchg
ret
push
mov
cmp
jg
xchg
sbb
xor
rcr
sub
lahf
adc
pop
pop
push
mul
dec
pop
jns
xchg
repz
sbb
sbb
outs
rcl
push
popa
cmc
pop
cmp
mov
push
or
inc
mov
or
jmp
xor
jp
dec
push
xchg
and
push
jne
push
scas
int
cmp
push
out
sub
cmp
xchg
fstp
cmc
icebp
xor
and
test
adc
icebp
ja
dec
and
and
adc
lea
ss
pusha
(bad)
ins
mov
mov
sub
cdq
dec
shr
cmp
inc
movs
(bad)
arpl
loopne
push
shr
cmps
(bad)
bnd
mov
fldenv
inc
sub
sbb
inc
stc
add
sub
into
sub
test
push
sahf
cwde
out
stos
lea
ins
cmp
mov
push
xor
in
cmp
fs
mov
xchg
jns
bound
xor
rcl
pop
aas
les
outs
add
(bad)
and
ds
outs
das
push
inc
call
xor
je
push
adc
mov
pop
loop
push
arpl
cli
daa
pop
sub
fsubr
adc
inc
fisttp
nop
loope
mov
les
mov
loop
and
in
pop
or
jmp
test
clc
mov
aam
cwde
mov
mov
jnp
xor
push
cmp
test
mov
(bad)
(bad)
scas
mov
sbb
ja
ins
(bad)
(bad)
inc
loop
xor
lods
xlat
fucom
xchg
ja
shl
shl
mov
mov
and
sbb
ret
sar
mov
pop
mov
inc
dec
data16
movs
cld
clc
in
pusha
mov
mov
cmp
xchg
and
in
jp
mov
sub
sbb
in
in
ret
dec
mov
sbb
ficomp
pop
dec
test
fstp
ins
push
push
ins
ret
inc
shr
xor
sbb
hlt
inc
and
inc
sar
loope
xchg
add
bound
cmps
cld
jmp
xor
pop
push
mov
test
adc
call
mov
(bad)
ins
sub
pop
bound
inc
xchg
stos
sub
daa
jp
adc
push
sbb
push
mov
shl
push
xor
xor
add
pop
gs
and
jmp
into
test
dec
jae
sub
fnstenv
je
dec
jns
bound
loop
iret
mov
movs
dec
or
sahf
mov
mov
addr16
mul
jp
daa
xlat
sub
jbe
stos
test
dec
sahf
cmps
sub
sbb
stos
out
int
xchg
dec
(bad)
mov
push
(bad)
add
mov
xchg
lods
js
inc
stc
aam
sub
dec
mov
pop
test
xor
sub
xchg
fld
mov
pop
loope
mov
sub
push
shr
(bad)
sar
xor
or
je
aam
inc
push
mov
or
jp
dec
mov
(bad)
repz
lods
retf
xchg
or
iret
add
sub
clc
add
xor
out
mov
cmp
(bad)
or
bnd
dec
cs
and
xchg
sbb
sahf
or
fidiv
sbb
(bad)
mov
call
hlt
push
pop
fs
jo
pusha
enter
push
add
push
rol
ret
test
lods
or
mov
inc
retf
lods
jg
je
fimul
push
jmp
push
test
cmp
in
xchg
out
push
sub
sub
push
cdq
pop
xchg
cmc
mov
pop
aaa
inc
sub
imul
cmps
dec
call
js
dec
xor
pop
fsubr
addr16
(bad)
jo
scas
outs
sub
dec
pop
idiv
jg
iret
cdq
js
rcr
jbe
inc
daa
pop
leave
test
push
mov
sbb
jne
pop
push
dec
test
rcl
jns
lds
fwait
in
es
sub
inc
je
out
pop
es
mov
rcr
pop
sbb
xchg
sbb
sub
cmps
pop
pop
adc
outs
cmc
cmp
push
add
pop
cmp
lock
out
rcl
imul
adc
fwait
ret
sub
cmp
rcr
(bad)
sub
fwait
xor
push
pop
and
in
push
adc
gs
push
pop
clc
dec
or
ret
lea
xor
mov
mul
xchg
xlat
stos
pop
cmp
pop
pop
push
mov
cwde
rcr
push
sub
pop
jno
sti
dec
retf
push
xchg
inc
daa
stc
xlat
in
fidiv
lods
jae
test
add
xchg
pushf
scas
ins
je
and
loope
sub
fcom
add
out
pop
inc
in
enter
iret
mov
adc
retf
fnsave
sub
mov
mov
jae
stc
inc
jp
pushf
pop
and
xchg
jne
push
add
ss
cmc
pop
mov
inc
shl
mov
lods
arpl
das
out
outs
pop
jnp
xor
mov
data16
fadd
sbb
push
push
cli
jmp
sub
repz
or
(bad)
les
mov
sub
(bad)
imul
xchg
das
cli
outs
test
aam
pop
ret
pop
cs
mov
iret
lods
lfs
pop
xchg
adc
and
aam
repnz
retf
xor
daa
outs
call
dec
xchg
cmps
sti
sti
mov
sbb
sbb
lea
xchg
rcl
mov
jmp
cs
pop
repnz
std
sti
push
sub
fmul
xchg
cs
(bad)
sub
sub
sti
loope
mov
retf
sar
cwde
in
clc
loope
in
mov
pop
ror
das
mov
sub
mov
jp
in
cmp
add
inc
scas
sub
mov
jo
sub
sbb
bound
pop
mov
jmp
mov
out
movs
dec
(bad)
je
jb
pop
mov
sbb
pushf
or
fistp
push
inc
jle
adc
mov
xchg
jbe
out
call
push
sub
test
ret
sub
xchg
outs
cmp
in
stos
jns
(bad)
test
push
dec
stos
lock
cmp
pop
repnz
xchg
pushf
es
dec
mov
and
jecxz
clc
loopne
cmp
lock
inc
inc
(bad)
xchg
outs
dec
jne
pusha
daa
push
mov
(bad)
inc
xchg
shr
test
mov
fs
pop
sahf
out
pushf
es
push
dec
lods
dec
ins
cmp
loopne
jle
shl
out
adc
sub
jne
in
and
xchg
pop
lahf
cmp
mov
push
repz
jns
into
je
enter
adc
cmps
fwait
mov
mov
jno
inc
scas
push
sbb
mov
call
lea
test
mov
(bad)
neg
pusha
jne
call
pop
sub
add
test
pop
xchg
mov
ins
add
adc
fs
cmp
mov
stc
call
clc
popa
call
lock
jmp
pop
pop
cmp
ror
mov
sbb
mov
mov
(bad)
cld
in
stos
mov
xchg
sbb
pop
jle
out
retf
pop
sub
hlt
pop
mov
pop
popf
adc
sub
mov
dec
jne
jg
mov
(bad)
gs
lea
movs
or
xor
ret
movs
inc
jb
xor
jb
test
outs
add
fisub
adc
push
fadd
cmc
icebp
mov
and
out
jne
sbb
popa
sbb
hlt
sub
je
js
fld
cmp
into
pop
xchg
pop
test
xor
int
cmp
or
jp
pop
lods
mov
xor
idiv
xchg
pop
js
sbb
inc
(bad)
cli
lsl
add
sub
(bad)
mov
stos
dec
fwait
adc
or
ficomp
sub
std
and
add
test
lock
add
lods
xchg
(bad)
sbb
cmps
movs
loope
stos
jmp
xchg
xchg
mov
mov
jb
sub
xor
mov
adc
add
jbe
icebp
cmp
daa
xchg
jne
or
xor
shr
dec
push
idiv
sbb
pop
hlt
std
mov
aaa
and
mov
fild
push
dec
xor
mov
sbb
clc
out
in
dec
js
lock
adc
or
inc
clc
xchg
dec
shl
clc
aam
xor
jmp
xor
retf
aad
and
lods
gs
sbb
xchg
test
test
lea
enter
xor
out
jmp
retf
mov
sub
pop
mov
in
dec
cmp
or
and
lods
xor
push
shr
pop
xchg
in
in
xor
xchg
and
pop
clc
pusha
pop
push
mov
shr
adc
pop
dec
sub
sub
outs
(bad)
loopne
push
stc
xchg
xor
retf
cmps
pushf
dec
sbb
xor
dec
push
rol
outs
push
push
sbb
je
call
dec
gs
lods
or
push
pushf
jbe
sub
mov
pop
jne
cmp
or
mov
loope
aam
inc
gs
mov
and
(bad)
in
js
stos
xchg
pop
dec
popa
pop
call
push
cdq
rcl
pop
ret
cmp
and
xor
int
xor
sti
shr
mov
pop
shl
repz
outs
xchg
and
popf
pop
movs
push
push
jb
fxtract
aam
jns
xor
xchg
pop
jne
clc
gs
jne
mov
rcr
jns
(bad)
pop
mov
pop
lock
int
mov
xor
xor
movs
jne
add
popf
mov
dec
aaa
inc
sub
add
shl
xor
stos
push
in
fsub
pop
test
repz
push
addr16
jg
dec
gs
push
sbb
cmc
aas
out
repnz
clc
jns
mov
data16
jg
mov
daa
aaa
add
add
sbb
jmp
call
rcl
xchg
or
mov
or
and
mov
push
test
push
sbb
fsubr
and
push
call
lock
mov
xchg
cmc
or
loope
aam
adc
push
jmp
push
mov
add
cmp
add
add
and
(bad)
xrelease
(bad)
dec
js
dec
rcl
jne
out
sub
adc
xor
fisub
stos
mov
mov
call
fild
pop
sbb
sbb
push
mov
jns
sub
hlt
sub
loopne
(bad)
into
or
pop
cvtps2pi
mov
push
(bad)
stc
call
nop
cmp
or
mov
daa
call
xor
jne
cwde
mov
sub
push
mov
jne
and
(bad)
rcl
jecxz
cmp
cmp
sub
sahf
ret
push
mov
loope
pushf
fldenv
fs
in
in
xor
mov
icebp
jmp
cdq
js
inc
fdiv
adc
not
ins
mov
cmp
out
in
addr16
push
jne
ins
sub
xor
or
add
call
pop
add
call
pop
bound
jge
imul
pop
mov
test
out
or
aas
les
inc
add
fbstp
add
lea
dec
cmp
mov
push
(bad)
repnz
int3
inc
push
cmp
mov
mov
sbb
mov
popa
xor
scas
mov
sbb
or
(bad)
movs
movs
fdivrp
and
xchg
cmp
mov
add
mov
xchg
scas
in
push
daa
mov
movs
and
ret
(bad)
outs
mov
xor
das
clc
jmp
inc
adc
jmp
cmp
lods
stos
pop
pop
repnz
push
out
(bad)
or
fs
ret
mov
sbb
cmps
xchg
cmp
xchg
dec
push
ss
push
lods
push
fldenv
sbb
push
adc
test
leave
push
inc
jno
sub
je
and
call
cmp
and
stc
in
xor
push
jo
inc
cmp
hlt
hlt
icebp
clc
daa
push
inc
pop
pop
sbb
hlt
mov
clc
daa
je
or
hlt
test
pop
sub
xchg
cmp
pushf
sub
movs
test
xor
sub
je
test
cmp
sub
imul
daa
pop
(bad)
pop
push
aam
and
or
mov
movs
and
xor
xor
ja
xchg
sbb
cmc
in
gs
mov
pop
cmp
pop
test
mov
inc
out
pop
(bad)
xlat
(bad)
push
xlat
in
retf
bound
fs
ror
out
lods
rol
xlat
ss
mov
test
data16
dec
push
test
xor
adc
scas
sbb
jg
repnz
pop
cmp
sub
mov
and
pushf
mov
mov
(bad)
aam
test
(bad)
cmp
xchg
daa
sbb
ret
not
or
mov
or
cmp
push
xor
jp
cmc
add
fs
out
cmp
push
pop
mov
push
push
add
adc
test
add
cmp
les
sub
push
adc
aas
push
mov
push
xchg
xor
ins
push
ja
push
lock
call
mov
fiadd
xor
je
jmp
adc
or
(bad)
xor
cli
cmp
inc
stos
mov
std
mov
push
pop
mov
fisub
xor
leave
xchg
sbb
inc
mov
jp
cwde
add
out
fsub
dec
aaa
and
and
sbb
sbb
xlat
(bad)
sbb
in
mov
sbb
aam
(bad)
push
outs
xchg
inc
or
push
sub
out
jmp
jmp
ins
and
push
xor
pusha
xlat
and
fdiv
pop
mov
sbb
xchg
dec
add
xchg
jl
xchg
push
loope
cs
popa
cmc
cmp
rcr
call
and
jmp
ja
dec
out
test
mov
fidivr
xor
sbb
inc
sbb
xor
pop
(bad)
mov
dec
cs
mov
add
push
and
add
sub
add
je
fisttp
cld
bound
fs
jmp
daa
xchg
in
pop
popa
inc
mov
inc
std
xchg
or
(bad)
and
sub
push
shl
scas
std
xor
lods
sub
cmp
mov
mov
xor
leave
xor
mov
retf
popa
fpatan
xchg
pop
add
add
ja
add
xor
lds
repz
sub
test
stc
xchg
mov
pusha
mov
hlt
shr
inc
adc
lahf
out
out
lds
je
xor
test
movs
(bad)
push
jmp
(bad)
je
jl
cmps
mov
inc
sub
(bad)
leave
xor
jnp
xlat
cmp
aaa
and
inc
fild
(bad)
sub
jb
or
add
rcl
adc
jae
cmp
add
retf
jne
sub
aas
sub
lock
sub
in
int3
pop
xor
mov
mov
and
xor
div
pusha
mov
(bad)
in
fnstsw
sub
hlt
jo
push
xor
into
enter
daa
jae
push
stos
sub
lock
sub
pop
jns
data16
pop
xor
mov
sub
jl
sub
xchg
in
sbb
sub
ds
pushf
and
call
loope
popf
jmp
jns
push
adc
pop
ss
call
inc
bound
sbb
cdq
inc
pop
pushf
mov
or
adc
popa
pop
pop
fcom
add
pushf
fs
and
and
inc
loopne
xor
push
call
neg
rcr
mov
call
xlat
adc
leave
pop
aas
ja
cwde
(bad)
jle
cmps
pop
sbb
pop
hlt
sub
out
icebp
ja
xchg
sahf
bound
sbb
sbb
in
pushf
cmc
mov
xchg
xor
out
pop
xchg
jle
shr
(bad)
sti
rcl
call
or
and
or
cmp
loopne
cmp
data16
ds
bound
int3
adc
dec
jmp
pop
pop
scas
shl
mov
mov
retf
add
adc
ret
xchg
mov
add
dec
or
das
lds
(bad)
jns
push
fisttp
aam
pop
bound
pop
call
outs
jnp
xchg
les
xor
add
dec
nop
sahf
mov
mov
jecxz
pop
daa
or
sahf
pop
test
xchg
ins
ss
xchg
adc
pushf
fs
fiadd
sub
mov
cmps
jns
xor
ret
(bad)
je
stc
nop
rcr
push
cmp
dec
cwde
hlt
dec
sbb
imul
pop
pop
add
jo
mov
jb
mov
addr16
sub
dec
cwde
inc
pop
sub
add
push
aam
bound
pop
rep
ss
or
pusha
jns
ret
(bad)
gs
stc
out
sbb
xchg
xchg
sahf
arpl
pop
mov
sti
and
loopne
dec
stos
repnz
mov
cmp
sbb
nop
inc
cmp
and
scas
lods
dec
mov
pop
cld
stos
test
adc
pop
stos
inc
inc
pop
cmp
xor
cmps
bound
or
fucomip
push
jl
jmp
arpl
movs
addr16
xor
loope
setne
adc
fs
mov
je
xor
mov
hlt
mov
clc
mov
push
loop
jo
out
outs
int3
xor
pop
pop
xchg
sub
outs
jne
repz
cld
xchg
mov
xchg
cmc
inc
jne
mov
mov
ds
fs
hlt
sbb
aam
push
test
in
movs
dec
shl
test
imul
sub
imul
std
push
inc
xor
xchg
or
cmc
xor
scas
enter
gs
adc
cmp
fcmovnb
xchg
pop
xchg
cmps
clc
std
push
jo
div
cmp
outs
pop
mov
stc
xlat
add
pop
xchg
mov
jne
pushf
test
nop
in
dec
fstp
in
iret
mov
sti
xchg
or
mov
sar
jae
xchg
dec
xor
daa
add
mov
xchg
mov
adc
call
fs
cmp
push
sub
cdq
xlat
(bad)
cmp
js
in
(bad)
jmp
movs
push
ins
or
or
pop
adc
cwde
loope
dec
sub
test
mov
fistp
jge
xchg
sbb
pop
mov
aam
adc
push
lock
cdq
fsub
sbb
mov
das
clc
xchg
push
adc
add
les
mov
enter
mov
dec
shr
retf
rcl
movs
in
cwde
inc
sahf
retf
xchg
addr16
add
inc
jmp
pop
std
xchg
call
je
mov
call
je
mov
stos
mov
fdiv
call
loopne
stc
jae
das
mov
cmp
pop
(bad)
jne
sub
jb
cwde
gs
addr16
lock
xlat
jecxz
dec
stos
jp
sbb
xor
dec
mov
fs
movs
repz
add
xor
mov
sbb
repnz
(bad)
in
jb
das
lea
add
sub
sahf
pop
adc
and
daa
in
push
push
sbb
xchg
clc
lds
pop
retf
int
aas
dec
pop
sahf
pop
pop
ins
movs
(bad)
xor
(bad)
rcl
lock
pop
fxch
aad
mov
push
leave
out
inc
jae
push
dec
inc
push
cwde
dec
imul
dec
add
test
fs
repz
pusha
xor
mov
cmp
or
and
icebp
cmp
push
lods
mov
lods
mov
bound
gs
movs
stos
xor
mov
dec
into
cmp
sub
xor
push
sub
shl
daa
sbb
lods
inc
bound
pop
sub
lods
adc
pop
xor
mov
xor
jne
(bad)
daa
add
clc
push
mov
call
(bad)
sub
mov
sub
ficomp
and
jmp
addr16
fistp
imul
das
pop
inc
pop
(bad)
mov
pop
inc
imul
cwde
jle
rol
mov
(bad)
sbb
inc
inc
jnp
pop
stos
fs
jb
xchg
es
sub
jbe
mov
shl
je
push
ja
mov
cwde
or
cli
popf
sub
xchg
sub
sti
mov
jae
push
jbe
(bad)
outs
pop
jbe
ins
sub
mov
fcom
int
addr16
xchg
sbb
dec
loopne
sbb
cli
arpl
push
into
push
xchg
push
rol
jo
pop
jae
fstp
dec
cmp
pop
pop
adc
xchg
xchg
or
mov
sub
sub
(bad)
bswap
js
nop
enter
mov
mov
div
adc
lods
hlt
loopne
lock
loope
mov
adc
in
xor
gs
jo
idiv
js
mov
cwde
sbb
jo
idiv
hlt
pop
add
adc
and
sub
xor
push
pop
cs
inc
cwde
call
mov
mov
inc
es
stc
xor
movs
js
jo
in
retf
xor
cmc
leave
cld
push
sub
movs
fld
sub
mov
push
push
sub
jno
div
sub
icebp
and
inc
hlt
sub
stc
push
adc
mov
push
out
out
xchg
and
bound
sub
dec
imul
xchg
test
cmc
imul
xchg
sbb
pop
xlat
inc
pop
and
push
fstp
hlt
xor
int3
jmp
xchg
fucom
fist
fisttp
outs
push
dec
pop
addr16
push
cmp
xchg
(bad)
xchg
ror
mov
sub
jae
cmc
(bad)
adc
mov
jns
sub
scas
mov
mov
cmp
push
adc
ss
in
jnp
and
lahf
push
push
inc
or
add
fdivr
cmp
cs
jmp
pop
push
ret
and
or
aad
cmp
push
lods
ins
jmp
jo
out
adc
rcr
xlat
bound
ret
jmp
jmp
xor
jle
xchg
cmp
jne
dec
out
cmp
jo
pop
or
movs
call
iret
ficomp
sbb
cmp
jg
and
xchg
out
sbb
test
ja
mov
hlt
dec
sub
stos
fnstenv
stc
mov
mov
push
movs
adc
js
mov
or
cwde
jle
(bad)
outs
lahf
lods
or
stos
ret
cdq
inc
test
stc
in
test
sub
push
push
loopne
stc
mov
pop
adc
cmp
or
mov
or
fdivr
xchg
dec
lods
mov
shl
jg
pushf
pop
fcomp
dec
mov
dec
push
push
inc
loope
std
les
cmps
sahf
shr
(bad)
hlt
adc
xchg
mov
jns
addr16
jmp
or
push
(bad)
loope
sub
aaa
push
das
push
xor
aaa
push
daa
push
inc
out
sbb
inc
and
push
sub
shl
xchg
pop
and
movs
(bad)
pop
sti
pop
sub
jp
clc
outs
jno
push
pop
xor
sbb
xchg
jae
or
out
hlt
mov
xchg
pop
dec
inc
cmps
retf
adc
(bad)
xor
shr
scas
mov
jp
call
xor
pop
push
jne
clc
sub
push
jg
inc
or
and
dec
js
aam
mov
cmp
daa
mov
xor
adc
div
nop
into
loopne
jnp
jecxz
pop
cmc
xor
jo
fdiv
jge
jae
inc
mov
pusha
leave
jo
mov
adc
dec
pop
or
sbb
(bad)
mov
cmp
and
sbb
mov
js
push
dec
test
call
in
out
js
sub
ret
(bad)
lods
das
ret
xor
lahf
pop
shl
arpl
pop
pop
(bad)
sub
sub
js
add
push
inc
cli
pop
jbe
pop
mov
jae
mov
fmul
leave
sbb
ins
xchg
cdq
sub
clc
and
scas
mov
frstor
ret
xor
retf
mov
add
aam
cli
sbb
hlt
pop
in
leave
pop
dec
imul
jl
js
into
inc
fistp
push
xchg
xchg
ins
bound
nop
pop
sub
aas
addr16
xchg
clc
jg
sti
add
in
fs
(bad)
in
mov
xchg
cmc
punpckhdq
fnstsw
je
clc
adc
jg
mov
push
stos
adc
je
and
in
inc
cmps
into
ds
cdq
lods
test
movs
inc
ret
(bad)
int3
rcl
stos
into
retf
ret
(bad)
xchg
dec
mov
ss
lea
xor
adc
mov
jo
push
xor
rcr
mov
popf
retf
sti
add
jle
ret
aaa
dec
in
mov
arpl
arpl
cmp
cmp
adc
xchg
sub
xchg
ret
adc
test
movs
mov
les
ficomp
shl
sti
rcr
pop
cli
inc
rol
je
mov
cmp
clc
xor
cmp
les
je
jmp
popa
dec
push
test
cmp
jecxz
pushf
or
sti
jo
aam
(bad)
jmp
push
test
fldcw
xchg
mov
mov
cmc
(bad)
(bad)
stc
icebp
xor
mov
push
lods
or
int3
icebp
sbb
xchg
out
ret
sub
ficomp
rcl
or
mov
jecxz
rol
jae
ins
sub
push
cmp
aaa
in
sbb
div
mov
mov
jmp
mov
popf
inc
in
mov
jmp
xchg
jmp
aam
or
cmc
fnstcw
out
sub
xor
je
push
icebp
adc
fucom
sub
adc
frstor
jne
fadd
xor
fcmovbe
and
inc
cld
inc
pop
xor
mov
dec
scas
fs
mov
or
pusha
lods
xor
push
or
mov
xor
jo
sbb
jecxz
mov
mov
dec
sub
scas
ja
pusha
jb
(bad)
xor
sbb
call
push
ins
pop
jmp
add
pop
rcr
pop
xlat
xchg
sub
imul
mov
movs
mov
fild
adc
bnd
and
in
retf
jge
je
add
retf
loop
push
jmp
sub
mov
push
mov
ja
bound
aas
test
jge
hlt
in
xchg
cmp
xlat
xor
jmp
xor
push
xor
pop
add
shl
sub
xor
lea
add
int
jne
lea
les
and
xor
rol
dec
test
ss
aaa
std
and
js
cdq
test
mul
push
jbe
not
es
sar
mov
or
mov
iret
fst
mov
or
xchg
(bad)
repz
pop
leave
xor
(bad)
mov
into
(bad)
aad
lods
enter
pop
in
shr
loopne
je
or
pushf
in
mov
in
std
cld
jp
push
clc
push
ret
retf
ins
push
repnz
mov
or
xchg
ret
aad
icebp
xor
mov
repz
aam
rcl
shl
shl
fs
je
aad
pop
fcom
arpl
retf
jne
dec
in
cmps
adc
inc
cmp
dec
pop
or
cmc
cwde
stc
pop
ror
sti
int3
inc
cmp
pushf
xchg
out
jge
loop
jns
jmp
out
dec
(bad)
(bad)
sti
fldpi
addr16
imul
out
lods
retf
imul
xor
cmp
adc
fistp
dec
int3
push
loop
iret
dec
cmp
leave
add
das
jmp
or
sub
ins
pop
cmc
in
mov
loope
sub
cmp
out
imul
xchg
in
jecxz
pushf
jns
sub
iret
mov
(bad)
sbb
dec
outs
daa
dec
xor
pop
imul
jne
pop
pop
lea
fimul
out
xchg
or
mov
retf
stos
pusha
je
mov
xchg
aam
add
dec
mov
lock
pusha
sub
add
movs
je
ins
loopne
call
mov
test
fnstsw
pushf
pop
bound
and
push
mov
in
(bad)
push
outs
inc
les
out
cmps
imul
jp
cld
inc
jnp
pop
jae
daa
mov
fnstenv
call
lea
mov
imul
loopne
mov
jg
stos
pop
hlt
call
pop
js
shr
bnd
in
xor
jae
jp
iret
cmp
inc
fimul
pop
(bad)
and
jne
sub
push
xchg
pusha
pop
leave
movs
retf
std
add
push
jo
jnp
es
pop
das
and
xchg
sbb
cli
inc
sbb
std
mov
jp
arpl
push
mov
push
jo
out
imul
push
popa
push
fcom
jmp
jle
aad
push
jo
lock
sub
xchg
aas
add
retf
js
sti
addr16
sar
movs
sti
daa
adc
js
inc
outs
push
mov
stos
xchg
je
sar
jns
sub
adc
jmp
fist
sub
xor
or
jle
mov
inc
fnstsw
push
mov
je
xchg
mov
mov
cmp
lock
cdq
sar
mov
lods
ins
or
in
adc
xchg
xchg
sbb
mov
inc
lds
and
push
push
and
sbb
mov
ss
dec
push
push
call
mov
loopne
fsub
(bad)
in
fdivr
or
lock
dec
xor
dec
(bad)
jmp
jnp
xchg
sbb
cmc
sub
cmp
inc
pop
push
push
fdivr
popa
mov
jecxz
push
adc
push
inc
addr16
repz
push
push
std
mov
imul
(bad)
push
movs
mov
dec
mov
xor
popf
mov
call
scas
cwde
fadd
xor
jne
sub
je
cmps
imul
leave
add
test
popa
pushf
ins
(bad)
mov
mov
sbb
(bad)
mov
cmps
xor
gs
jo
dec
pop
push
cmp
ja
fdiv
icebp
pop
call
ret
xchg
and
jp
push
mov
repz
xchg
xchg
sub
inc
loope
sub
sbb
outs
mov
add
inc
fldenv
pop
mov
xor
or
and
movs
xchg
mov
in
adc
mov
mov
cmp
in
mov
ror
ficomp
jp
xor
cmp
fldenv
outs
stc
push
shl
ins
pop
hlt
cmp
push
and
adc
xchg
fild
pop
pop
cwde
in
popa
dec
mov
sahf
mov
stos
into
jbe
add
mov
jnp
retf
imul
pop
jl
sti
mov
sahf
jge
or
movs
out
mov
loopne
rcr
cmp
mov
cmp
push
in
inc
pop
xor
and
cmc
cli
push
pop
fidiv
in
mov
mov
cld
mov
push
jne
pop
pop
in
ins
or
sbb
jne
xor
in
add
cmp
(bad)
cmc
scas
push
pop
nop
ss
test
ss
sbb
push
sub
je
dec
ins
clc
pop
call
ficomp
xor
push
dec
sub
dec
jle
ins
into
je
pop
push
cmc
ds
pop
and
pop
cmp
jecxz
pop
mov
cmp
out
outs
in
push
fcomp
sbb
xor
in
ins
pop
mov
sbb
push
xor
in
ss
and
adc
mov
add
mov
loop
int3
pop
mov
mov
or
sbb
pop
xor
in
cmp
or
jne
dec
int
loopne
rol
cmc
mov
cmp
mov
sbb
pop
jecxz
in
jne
gs
push
sbb
cmp
mov
mov
and
aas
pop
push
jne
cmc
loop
aam
les
clc
xor
mov
sub
inc
dec
hlt
dec
jne
gs
pop
jne
cmp
and
inc
in
dec
adc
cmp
inc
mov
aad
fdiv
mov
mov
sti
movs
dec
je
mov
jnp
push
sbb
ins
sbb
cmp
cmp
in
ins
push
in
cmp
or
ins
movs
in
jne
push
pop
mov
cmc
mov
js
push
dec
cmp
cs
pop
or
in
lock
loopne
pop
or
jne
xor
in
mov
pop
je
cmp
xor
jg
lods
icebp
sbb
outs
sbb
js
outs
retfw
test
mov
mov
sub
xchg
jge
sbb
xchg
sbb
and
sub
in
lods
aas
sti
xchg
mov
lea
je
outs
or
cmp
dec
and
jo
inc
(bad)
jb
dec
xchg
aas
xor
inc
std
ins
sbb
xor
xchg
add
(bad)
jge
js
xchg
in
cli
iret
test
int3
dec
cmp
push
jle
loopne
cmp
push
xchg
jne
sub
mov
or
fdivr
xchg
sub
jmp
or
inc
mov
test
fcom
call
test
jne
cmc
sahf
mov
ret
cmp
mov
test
inc
mov
xchg
scas
call
inc
xor
fs
fdiv
dec
loopne
adc
mov
repnz
clc
push
sti
arpl
stos
icebp
cs
sub
mov
ins
inc
pop
(bad)
std
scas
shr
sub
sub
sbb
jo
out
sub
pop
sbb
sub
mov
xchg
or
push
jo
mov
adc
dec
daa
ins
xchg
(bad)
push
repz
adc
lock
das
out
lock
sbb
and
pop
push
lods
push
mov
xchg
and
push
cmps
lods
dec
jl
shr
(bad)
xchg
lods
push
sub
dec
pop
xchg
dec
push
out
clc
mov
cli
data16
jmp
push
test
jmp
(bad)
sub
cmp
add
jbe
inc
hlt
sub
xor
pop
push
out
cmp
loopne
mov
fs
aad
xor
arpl
mov
scas
xor
mov
pushf
sub
push
fistp
in
xor
xor
ins
sub
dec
mov
ds
cs
mov
imul
push
fisttp
sub
aam
cmp
jmp
fwait
test
pop
ficom
jle
mov
pop
js
es
and
sub
stos
mov
mov
inc
jmp
js
mov
loopne
xchg
sbb
inc
sub
add
xor
pop
jecxz
xchg
jl
aam
loopne
nop
xchg
mov
adc
lds
sub
push
cmp
cmp
clc
xchg
mov
and
jnp
sub
xchg
clc
mov
aas
xchg
mov
mov
pop
lods
mov
bound
jmp
mov
repnz
xchg
xor
retf
and
call
scas
pusha
mov
jecxz
push
mov
stos
stos
dec
push
cmp
xor
sete
push
mov
fsub
outs
imul
sbb
push
div
adc
xlat
mov
repz
adc
mov
cmp
sahf
fdivr
adc
pushf
imul
push
out
pop
pop
cmc
add
xor
sti
sti
test
popa
je
ss
out
sub
popa
jns
xchg
jmp
cmp
fcomp
pushf
icebp
jns
sub
inc
mov
xor
mov
fisttp
jae
xchg
aad
cmp
aaa
dec
and
push
inc
ins
xchg
stc
sub
stos
push
aam
xchg
sub
xor
sub
sub
sbb
jp
(bad)
pop
inc
outs
lock
sbb
jmp
mov
sub
xchg
xchg
sbb
jb
push
xchg
mov
push
sub
add
push
dec
lds
daa
(bad)
jae
dec
pusha
lock
int
xchg
dec
mov
cmp
cmp
in
je
icebp
xchg
jae
cmp
sbb
ja
movs
push
stc
pushf
je
mov
(bad)
(bad)
mov
test
push
add
stos
jne
and
hlt
retf
ins
and
fsub
(bad)
(bad)
cmp
xchg
xor
jmp
aam
icebp
test
xchg
ret
jmp
adc
add
push
out
jo
fiadd
in
pop
dec
sbb
pop
mov
in
cmp
jecxz
mov
(bad)
les
test
cmps
cmp
je
adc
jp
xchg
adc
arpl
mov
(bad)
mov
xchg
test
ds
cmp
fsub
in
mov
test
mov
jg
inc
movs
adc
jae
repnz
stc
inc
adc
mov
xor
push
test
jns
push
sub
into
jo
xchg
xchg
test
stos
mov
cdq
dec
jnp
mov
std
jp
sbb
lods
sub
jnp
hlt
jmp
mov
shl
xor
je
aaa
popa
cmp
imul
cmp
dec
and
adc
push
pop
call
mov
xor
je
aam
or
jo
adc
ret
inc
repnz
stc
pop
(bad)
popa
adc
xor
pop
dec
pop
push
adc
push
addr16
cdq
ins
loop
pop
xchg
out
pop
out
test
inc
jnp
inc
xor
jno
push
pop
adc
push
cwde
daa
push
cmp
je
es
jle
fs
ss
fwait
mov
mov
adc
jno
test
push
cmp
xchg
call
mov
xor
cmc
or
xor
xor
mov
pop
or
inc
push
into
out
dec
jl
jo
and
jne
loope
mov
push
xchg
xor
clc
jge
shr
sub
cmp
shl
push
out
fadd
ins
sub
push
lods
icebp
inc
lahf
leave
xor
movs
push
addr16
test
xor
mov
stos
ins
in
lea
push
jp
mov
xchg
xor
lahf
dec
xchg
fisttp
popf
in
inc
mul
clc
pop
mov
jnp
dec
aaa
push
pop
push
fwait
popf
sbb
daa
(bad)
mov
(bad)
push
pop
xchg
and
fs
call
ss
push
jmp
adc
(bad)
pop
jb
scas
xchg
dec
sar
fsubr
pop
xor
loop
mov
xchg
sbb
into
mov
out
xchg
dec
(bad)
hlt
faddp
sub
clc
push
pop
leave
jmp
jne
retf
pop
push
shl
mov
pop
idiv
xchg
adc
mov
mov
push
push
pusha
xchg
cmp
push
fadd
je
xchg
loopne
sub
push
bound
jo
mov
pop
cmp
jo
and
inc
mov
mov
jecxz
adc
and
into
aas
cld
inc
or
test
mov
outs
outs
jecxz
mov
std
and
cmp
mov
inc
stos
out
fld
mov
aad
cmps
xor
push
dec
in
js
imul
gs
loope
mov
cmp
cmp
mov
adc
sub
(bad)
scas
test
xchg
lods
jb
cmp
in
dec
cmp
jmp
jbe
ret
xchg
push
or
mov
jns
and
cs
(bad)
inc
pop
pushf
sub
dec
sub
xor
and
pusha
rol
outs
pushf
loopne
xchg
jno
hlt
cs
xlat
add
and
xchg
sar
push
add
sbb
(bad)
aam
aam
sub
int3
outs
mov
mov
and
lds
das
dec
xchg
int3
adc
sti
or
int
stc
xchg
xchg
cmp
in
pop
pop
xchg
add
xor
js
pop
fldenv
test
dec
cmps
cmp
es
or
enter
sti
mov
out
push
sub
das
js
xchg
pop
shl
pop
push
jge
pop
nop
jl
pop
xchg
loope
dec
mov
mov
sub
in
leave
mov
xchg
fucomp
pop
pop
push
xlat
sub
mov
and
out
xor
pop
fbld
pushf
adc
push
lock
aam
aas
and
add
mov
mov
mov
jmp
stos
adc
xor
jge
push
xchg
stc
push
sbb
xchg
sub
shl
mov
dec
je
inc
mov
cmps
mov
fiadd
dec
mov
pop
mov
adc
or
mov
aam
cmp
hlt
in
ja
sub
add
jbe
sub
outs
mov
mov
jle
and
stos
mov
mov
inc
inc
mov
push
test
mov
fcom
mov
jecxz
inc
int3
repz
(bad)
jnp
loope
mov
lods
(bad)
jbe
pop
(bad)
lock
sub
push
fs
inc
pop
call
cmp
ins
int3
push
sti
ins
pop
sub
mov
push
inc
and
jecxz
mov
jo
push
imul
mov
xor
sar
push
jge
sar
jae
push
pop
cmp
jge
dec
dec
(bad)
aam
scas
xchg
les
std
dec
sar
pushf
ins
stos
push
loope
and
pop
pop
xor
ins
sub
outs
icebp
jno
test
loop
jl
les
lock
iret
pop
xor
jle
jecxz
imul
cmp
aaa
lock
pushf
popa
and
popa
adc
pop
mov
inc
out
xchg
jae
icebp
hlt
cmp
jge
dec
xchg
(bad)
gs
test
stos
mov
jae
fs
je
sete
dec
bsf
bswap
add
sbb
mov
cmc
add
stc
pusha
pushf
mov
pop
mov
jmp
(bad)
mov
pop
in
sbb
or
lds
rcr
mov
push
(bad)
call
shr
lods
xchg
pop
inc
adc
div
mov
and
xor
push
scas
clc
into
mov
cld
repnz
sub
cmps
call
mov
mov
test
add
mul
popa
test
fstp
lahf
jle
call
imul
into
mov
dec
mov
mov
pusha
mov
push
lea
jmp
jb
push
fcmovb
mov
fnsave
jbe
and
rcr
push
xchg
xor
mov
push
mov
int3
jno
(bad)
sbb
inc
mov
lock
leave
out
mov
fnsetpm(287
xor
ror
lods
jmp
ins
xor
mov
test
adc
inc
lahf
add
add
inc
gs
outs
fs
gs
imul
add
jmp
(bad)
sti
gs
cwde
rcl
icebp
in
inc
jecxz
aas
inc
ret
sbb
in
and
scas
aad
enter
xchg
mov
daa
daa
fcmove
out
imul
frstpm(287
cld
or
xor
shr
add
cmp
mov
dec
fstp
and
outs
xor
cdq
xchg
cmps
push
outs
je
jo
ins
sub
cmp
xor
jmp
xchg
std
xchg
inc
ret
sbb
pop
adc
xchg
jmp
pop
cwde
xchg
push
das
jecxz
stos
add
pop
mov
dec
imul
in
mov
pop
(bad)
repnz
push
stc
pop
aam
push
push
in
pop
sahf
stc
jp
ds
(bad)
rcr
sub
ret
cmps
cmp
stc
test
call
movzx
bsr
rol
mov
call
test
aas
fild
fdiv
and
cld
dec
push
mov
pop
push
sahf
imul
adc
pushf
lods
mov
pop
pop
mov
ss
(bad)
or
out
ja
lock
fiadd
pusha
sbb
dec
loop
rcl
ret
sbb
mov
mov
dec
inc
mov
ja
or
and
xchg
adc
cld
je
mov
jns
jmp
int
mov
inc
inc
xchg
ror
mov
clc
push
push
and
adc
sahf
cld
mov
mov
js
inc
xor
stos
and
enter
ret
fwait
jmp
test
push
fs
sahf
lahf
jo
mov
aad
mov
mov
cmp
jae
loopne
push
push
cs
mov
pop
jnp
mov
xchg
xor
push
inc
scas
dec
imul
cmps
imul
imul
xchg
xlat
les
xor
retf
add
inc
imul
jne
je
and
and
jae
jo
outs
addr16
ins
and
jae
bound
outs
and
outs
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outs
daa
je
ja
jb
and
jns
outs
jb
add
test
std
push
(bad)
mov
shrd
adc
shrd
add
and
btr
ror
mov
push
push
mov
test
test
call
clc
cmp
jmp
scas
(bad)
dec
ins
or
popf
test
pop
push
add
aaa
mov
cmc
mov
or
inc
mov
sub
mov
cmp
jp
push
cmps
push
sar
xor
(bad)
push
adc
fild
jno
mov
dec
cmp
add
sub
cli
sbb
jo
dec
xor
inc
mov
add
jmp
cmp
push
call
bt
shl
xchg
cmc
sar
push
rcl
rol
push
sbb
stc
push
xchg
mov
adc
pushf
bsr
mov
shl
bt
mov
test
add
jp
or
push
mov
lea
je
test
test
or
pusha
lea
je
shl
shl
aam
bt
sub
cwde
ror
adc
mov
rcl
add
shr
shr
cmp
btc
mov
stc
pusha
test
or
pushf
lea
je
rcr
push
rol
inc
bswap
sub
bt
shr
call
(bad)
cmps
mov
mov
loop
(bad)
in
jbe
shl
jb
out
test
jmp
outs
dec
int
out
pop
adc
retf
dec
stc
xchg
adc
(bad)
push
nop
iret
push
adc
dec
lods
add
jp
enter
jns
cdq
jnp
dec
outs
clc
cmp
mov
leave
xor
and
adc
(bad)
aad
fwait
jmp
xor
sti
mov
icebp
cmp
pusha
(bad)
mov
add
push
loope
xor
adc
int
addr16
cmp
add
xchg
jnp
addr16
call
hlt
jbe
das
imul
(bad)
fucomip
imul
or
push
cld
ret
jae
out
mov
adc
cmc
adc
xlat
and
xor
lods
mov
jg
sbb
ss
int3
or
in
ds
and
inc
xor
mov
(bad)
cmp
leavew
int3
adc
(bad)
fistp
sbb
shl
rcl
sub
pop
jp
ret
push
les
mov
push
push
add
das
lods
sti
dec
cmps
mov
inc
sahf
cld
fnstcw
call
cmps
(bad)
pop
outs
mov
icebp
jb
jns
mov
xor
push
cmps
xchg
push
jmp
das
push
sbb
mov
pop
popa
mov
fisttp
shl
shr
sub
(bad)
push
stc
pop
ror
jo
cmp
sbb
mov
cmp
jnp
xor
xor
cmps
inc
div
rcr
or
or
dec
mov
test
repz
mov
add
mov
add
mov
out
cmps
call
push
ss
cli
add
inc
jge
out
adc
pop
arpl
(bad)
je
jno
pop
xchg
enter
push
sahf
lea
mul
pop
xor
xchg
fdivr
jnp
push
sbb
enter
retf
(bad)
jmp
and
popf
sti
push
jmp
sqrtps
es
push
dec
lds
xor
mov
stos
pop
add
inc
cld
(bad)
push
cmp
xchg
out
sub
scas
mov
push
mov
adc
mov
xlat
jl
adc
xchg
retf
mov
jmp
cmp
xor
jge
(bad)
aam
das
push
sbb
mov
outs
icebp
sbb
call
or
or
and
inc
pop
std
jmp
push
mov
push
sbb
jns
sub
out
popf
in
mov
popa
sbb
inc
add
loopne
jno
mov
cli
fucomi
and
add
cli
ins
pop
mov
bound
fs
ficomp
shl
lods
cmp
cs
mov
jbe
in
mov
icebp
and
add
adc
or
pop
(bad)
ins
retf
imul
jg
outs
xchg
jmp
push
in
push
fwait
cmp
mov
cwde
shl
xchg
xor
dec
ins
addr16
dec
rol
les
ds
jecxz
ds
adc
ficom
in
mov
push
sbb
sbb
repz
aam
inc
mov
dec
or
jmp
add
cmp
es
mov
enter
mov
pop
lods
aaa
fcomp
adc
xchg
mov
fild
adc
lea
fbstp
shl
cs
add
inc
xor
mov
cmp
leave
dec
xchg
aad
mov
mov
or
lods
mov
push
xlat
jmp
scas
pop
adc
add
xor
stc
iret
and
jb
mov
cmc
and
call
mov
sub
sbb
push
inc
dec
pop
adc
mov
sbb
mov
pop
push
fdivr
jmp
push
dec
mov
adc
lds
mov
xor
les
cld
mov
das
scas
or
ret
out
pop
jns
sub
mov
aad
sub
cmc
and
mov
mov
and
xchg
mov
push
inc
and
inc
xchg
dec
jbe
push
mov
pushf
lea
jmp
mov
lods
clc
jmp
js
imul
mov
xchg
mov
xor
push
lods
adc
mov
xchg
fstp
pop
pop
push
sbb
ficomp
mov
xor
inc
push
or
ret
mov
lock
xor
cmp
enter
push
xchg
pop
in
(bad)
adc
and
mov
mov
out
loopne
arpl
jge
pop
mov
sub
mov
add
inc
das
cmps
cmc
hlt
jmp
sub
pop
add
add
popa
ins
inc
ins
ins
outs
arpl
(bad)
jmp
adc
mov
add
stc
dec
pop
iret
imul
ror
js
xlat
mov
sub
pop
repz
and
add
mov
and
lock
call
cmp
test
sbb
lea
loopne
movs
test
inc
push
repnz
pop
pop
iret
pop
push
mov
ss
mov
int3
cmp
pop
mov
mov
pop
push
ret
lods
pushf
repz
pop
rcl
sub
pop
popf
and
push
loopne
cmp
mov
repz
leave
lock
xchg
xor
cli
mov
(bad)
xor
xchg
sub
out
push
jne
pop
jb
(bad)
repz
lea
pusha
pusha
xchg
lea
jg
dec
call
aad
mov
pushf
sbb
and
mov
cmp
(bad)
add
mov
sbb
mov
xchg
add
cmps
mov
fs
mov
cld
(bad)
dec
inc
jp
icebp
jmp
sar
and
and
frstor
mov
lds
inc
push
push
repz
pushf
scas
mov
xchg
or
dec
xchg
fidiv
test
call
jg
or
stc
sub
ins
mov
sub
mov
daa
push
push
pop
pop
out
push
test
sub
dec
rol
addr16
in
cmps
test
imul
dec
in
mov
jle
xor
mov
add
xor
and
push
loopne
add
jae
fwait
xchg
pop
popa
xchg
fisub
mov
clc
xchg
ins
mov
mul
mov
nop
test
retf
mov
cdq
dec
add
sub
(bad)
dec
retf
cmp
fsub
mov
scas
movs
out
mov
adc
pop
mov
mov
loope
dec
loope
(bad)
inc
(bad)
xchg
paddusw
xchg
scas
lods
rep
xor
js
ds
cdq
(bad)
lds
xor
loopne
sub
call
sub
call
mov
jmp
lea
je
shld
mov
stc
inc
lea
bts
add
not
add
mov
cmp
test
test
call
pushf
lea
jae
pusha
mov
clc
jmp
mov
neg
mov
add
clc
call
dec
stc
mov
bt
shr
clc
push
test
pusha
cmp
pushf
lea
je
call
pushf
bt
movzx
bswap
ror
mov
cmp
mov
add
mov
mov
lea
jmp
mov
dec
mov
push
mov
sbb
aam
sar
inc
sbb
pop
shl
xchg
or
mov
shl
jl
nop
pop
lds
sub
adc
icebp
icebp
jo
std
dec
xor
movs
add
nop
xlat
ficom
adc
sbb
sbb
lds
shl
mov
inc
or
out
movs
cli
xchg
aas
push
mov
add
and
sub
movs
jnp
rcl
out
push
cmp
push
adc
cmp
test
sub
add
fadd
loop
fistp
adc
and
inc
(bad)
idiv
sar
popf
xor
loop
outs
je
cld
out
mov
pop
pop
mov
jmp
add
cmp
or
movs
push
mov
mov
or
inc
pop
jnp
jno
lods
xchg
dec
mov
je
add
not
pusha
push
lods
cmp
stc
jmp
pushf
lea
jb
test
jmp
movs
cmp
pop
das
and
cmp
pushf
and
and
pop
scas
inc
ja
cmp
pop
cmps
pop
gs
sub
xor
movs
bound
cmp
clc
add
sbb
pop
jae
fisttp
rcl
nop
sbb
mov
pop
sub
fstp
jne
dec
mov
add
leavew
retf
(bad)
scas
mov
mov
and
js
sub
fs
je
bswap
pushf
not
and
add
pop
mov
jmp
jge
push
or
cdq
idiv
xor
mov
aas
sbb
icebp
bound
nop
jge
mov
pop
inc
jmp
adc
jge
jle
and
dec
push
movs
inc
pusha
pop
and
fs
retf
into
ja
mov
mov
fadd
test
mov
xchg
popf
pusha
nop
inc
shr
sub
in
mov
lods
call
push
push
fisttp
(bad)
mov
hlt
sub
push
sub
in
dec
mov
and
aad
retf
sub
fnsetpm(287
inc
jno
pop
fs
bound
and
stc
sub
jmp
dec
push
mov
bound
adc
or
test
mov
loopne
call
mov
push
add
movsx
add
rcl
call
lods
push
inc
clc
lahf
mov
fcom
into
in
fadd
sbb
aaa
jno
jl
pop
jp
sub
push
xchg
out
or
push
or
jmp
and
jmp
push
push
xchg
mov
adc
mov
push
fidiv
mov
out
lahf
mov
and
jnp
stc
push
outs
sar
xchg
cwde
mov
repnz
sbb
xchg
cmps
fcom
stos
pushf
xchg
mov
cmp
ins
out
loopne
cmc
cmp
in
pop
mov
data16
je
sbb
outs
hlt
ins
jno
test
fist
mov
popf
xchg
add
test
mov
inc
ret
adc
jbe
mov
inc
js
or
jg
ins
xchg
pushf
jnp
mov
repz
push
je
aad
xchg
cwde
mov
in
mov
or
frstor
ins
fs
cmp
sahf
imul
outs
hlt
pusha
mov
test
movs
cmp
mov
mov
xor
pop
mov
sub
xchg
enter
adc
outs
out
mov
(bad)
cld
mov
fiadd
mov
mov
aad
push
inc
lods
jg
jo
jne
in
rol
mov
xchg
cmp
xchg
mov
xchg
inc
xchg
fcom
xor
repz
pop
clc
sbb
sti
mov
push
sub
dec
(bad)
es
cmp
jg
outs
xor
mov
cmc
jo
xchg
rcl
sub
ja
mov
push
sbb
jl
add
pop
jg
dec
mov
pusha
inc
mov
movs
pop
rcl
pop
scas
cmp
ss
jb
adc
sub
js
fdivr
push
cmp
mov
mov
adc
inc
movs
lahf
loopne
xor
jp
mov
push
clc
cmp
ds
(bad)
jp
inc
js
gs
cmc
cmp
clc
out
xchg
inc
and
mov
jle
nop
jp
lock
cld
inc
mov
jp
pop
xchg
movs
mov
pop
push
push
sahf
shr
ins
or
jns
das
pushf
mov
lea
mov
sti
add
imul
enter
xchg
test
mov
out
icebp
pop
fcomp
mov
stos
mov
jle
in
dec
sub
sub
and
xor
push
mov
cmc
adc
jge
je
addr16
es
or
push
stos
cwde
sub
ror
mov
popa
dec
loope
(bad)
push
cmp
cwde
test
push
and
ds
sbb
in
push
adc
jne
imul
cmc
mov
add
div
dec
mov
jo
xor
shl
adc
pop
adc
mov
fs
xchg
je
popa
fdiv
push
adc
imul
lea
sub
lds
add
mov
xchg
push
lods
jg
ins
loopne
shl
mov
call
cld
sub
cmp
test
push
jl
std
aam
mov
mov
push
fdiv
xchg
xor
(bad)
pop
xor
jo
iret
jne
sub
sub
cld
jb
mov
mov
inc
mov
neg
xchg
dec
pop
add
lods
cwde
scas
inc
ror
cmp
jp
mov
and
xor
inc
mov
cmp
imul
sbb
stc
call
lds
(bad)
loopne
icebp
inc
push
jle
dec
jge
jge
inc
cmps
in
inc
xchg
adc
push
jo
int
pop
(bad)
mov
ja
xchg
xchg
imul
dec
mov
int3
adc
xchg
and
sub
inc
pop
movs
xchg
cdq
fdiv
stc
fistp
out
out
not
int
aam
pop
(bad)
jo
sahf
stc
scas
call
fimul
cmps
sbb
test
dec
enter
xchg
or
jbe
ret
imul
int3
mov
shr
ins
loopne
sbb
cmp
sbb
xor
sbb
pop
sub
cld
jl
dec
fxtract
or
imul
mov
xchg
xor
add
fs
aaa
jecxz
je
fsubr
push
sub
imul
cmp
push
ins
lods
sub
mov
adc
push
je
(bad)
mov
pop
test
jne
ins
push
inc
lods
imul
cmps
and
(bad)
inc
test
push
xor
xchg
mov
fmul
push
lds
outs
mov
mov
dec
fsubr
push
fidiv
push
test
xor
je
push
cmp
mul
mov
out
cmc
push
cld
jns
lods
sub
xchg
jmp
rcr
movs
iret
bound
leave
lds
jo
mov
jl
hlt
lods
mov
inc
push
mov
push
pop
jl
icebp
lock
jmp
sahf
cmps
(bad)
shr
ja
pop
outs
jecxz
jmp
xor
jl
cmp
loopne
mov
jge
std
sbb
jecxz
push
addr16
and
push
imul
lods
xchg
push
gs
dec
loopne
(bad)
hlt
push
pop
dec
dec
mov
lea
movs
fsubr
adc
dec
pop
repz
push
mov
cmp
enter
sub
and
js
jmp
jbe
fldenv
retf
jmp
sub
std
movs
mov
repnz
mov
call
retf
cmp
mov
sub
shl
xchg
jne
or
push
sti
cwde
and
sub
cmp
scas
loopne
adc
jns
jb
mov
ins
mov
xchg
pop
push
imul
push
repnz
mov
mov
or
std
adc
push
adc
pop
cmp
push
in
ja
xchg
lahf
leave
sbb
je
xor
es
cmp
loop
jp
adc
ror
repz
jns
ss
nop
cmp
and
les
xor
and
in
mov
icebp
out
ins
rep
xchg
and
dec
cmps
mov
xchg
repnz
jg
jo
mov
shr
fsubr
mov
dec
test
inc
mov
mov
ficomp
inc
push
cs
in
push
and
sub
(bad)
jp
mov
dec
bnd
jp
lock
imul
dec
pop
retf
or
sbb
dec
lock
test
retf
stos
sub
ds
mov
and
arpl
push
leave
pushw
pop
jo
scas
fdiv
lahf
fmul
pusha
adc
fist
iret
iret
add
outs
(bad)
mov
adc
jmp
jo
loope
sbb
js
ins
sar
mov
mov
shl
adc
xor
dec
jno
push
dec
adc
push
xor
test
imul
xor
or
cmp
rol
repnz
test
jb
sbb
pop
stc
jae
cmp
pop
popf
in
and
iret
jnp
inc
das
loopne
xchg
mov
jns
pusha
loope
repnz
and
(bad)
sbb
add
inc
mov
pop
or
sub
pop
imul
xchg
jns
ret
dec
cmp
pushf
and
push
cmp
inc
add
mov
daa
sti
jo
sbb
dec
int3
movs
xor
ret
mov
inc
inc
mov
jbe
and
jne
fidiv
sbb
outs
mov
repnz
dec
cld
mov
jmp
loope
stos
xchg
jmp
int3
sbb
inc
pop
jle
repz
pop
in
ficom
rcl
(bad)
outs
div
jmp
out
inc
(bad)
cmp
ret
lea
movs
ja
je
xchg
lods
cmp
popa
and
popa
cmp
xor
push
or
pop
fs
stos
sahf
jge
push
mov
pop
push
push
jnp
and
fidiv
jbe
adc
push
inc
xor
gs
idiv
dec
fs
sub
add
ins
ror
hlt
pop
mov
jno
dec
push
dec
mov
jae
popa
loopne
lock
aas
cmp
cmc
xor
std
std
icebp
retf
cwde
adc
dec
sahf
jne
xchg
fstp
arpl
iret
mov
cmp
cmp
clc
push
push
xchg
pusha
sar
stos
outs
out
mov
je
push
cs
cmp
cld
test
pop
jle
jp
cmps
xchg
adc
sbb
imul
cmc
mov
in
push
xchg
dec
mov
outs
fidivr
test
test
jns
movs
xchg
push
int
in
jne
xor
adc
inc
cli
(bad)
lea
jmp
ret
lods
retf
jle
inc
mov
xchg
rol
pop
test
lods
out
in
ds
jo
pop
xchg
sub
not
mov
dec
gs
mov
in
imul
mov
mov
or
dec
mov
mov
loop
fs
and
xchg
adc
xchg
jbe
jmp
jp
mov
lods
push
call
int3
(bad)
cmp
cld
inc
sub
sub
mov
mov
cmp
outs
clc
scas
sub
test
lds
aad
jns
xchg
es
jle
call
in
mov
mov
mov
or
aas
sar
mov
test
push
and
mov
sti
dec
jne
test
cmp
fsubr
outs
stos
call
jmp
popa
xchg
pop
sbb
cmp
leave
int
xor
xchg
std
xlat
add
xchg
push
xchg
ins
es
aad
inc
dec
mov
mov
mov
sub
add
(bad)
pop
xchg
clc
cdq
movs
jae
in
fwait
mov
test
lods
test
sti
xchg
fiadd
ins
(bad)
fld
imul
jge
sub
je
test
sbb
cmp
ins
cmp
int3
cmp
retf
cmp
cmp
mov
cli
sub
ror
xor
ins
inc
or
push
xor
ins
inc
add
mov
jns
das
jmp
stos
bound
xchg
push
int
xchg
jno
mov
sti
add
jge
scas
prefetchwt1
inc
(bad)
sbb
jns
push
mov
xchg
jle
test
mov
fs
shl
jne
sub
jmp
retf
(bad)
shr
cmp
dec
mov
into
sbb
mov
pusha
(bad)
push
jmp
fdiv
inc
retf
jle
cld
outs
retf
mov
lods
sahf
stos
fidivr
fdivr
repz
pop
js
retf
sbb
arpl
retf
push
in
jmp
aad
addr16
mov
jp
gs
dec
jo
xchg
mov
fcomip
inc
std
mov
add
pop
loopne
je
fsubr
cmp
lods
xor
push
mov
dec
pop
or
cmp
xor
or
ins
mov
jo
in
sbb
mov
ins
in
mov
mov
loopne
sbb
mov
push
mov
loope
mov
mov
and
in
je
pushf
jmp
jmp
mov
js
(bad)
push
mov
es
sbb
inc
stos
xchg
mov
push
rcr
jns
mov
out
repnz
aaa
in
jge
mov
or
fmul
and
jae
pusha
push
mov
lea
hlt
arpl
mov
fiadd
enter
xchg
lods
loop
xor
je
jmp
pop
mov
stc
loope
pop
repz
or
ins
mov
xor
movs
and
je
cmp
das
in
sbb
inc
xchg
dec
jl
push
mov
icebp
shl
xchg
sbb
lahf
sti
xchg
jp
adc
push
sbb
iret
adc
dec
adc
add
gs
mov
ret
push
inc
idiv
ret
cs
ss
push
mov
sub
and
and
popa
imul
xchg
in
lds
mov
fs
xchg
retf
jnp
cld
sahf
iret
mov
(bad)
test
stos
sar
out
dec
adc
repnz
jmp
cmp
add
or
push
stos
mov
int3
test
stc
xchg
sahf
movs
push
stc
add
out
cs
xor
jp
xor
mov
add
std
nop
mov
jg
loopne
arpl
fadd
aas
mov
clc
stos
ins
jecxz
push
popa
lds
jl
nop
mov
icebp
push
push
outs
sar
sbb
icebp
adc
adc
mov
dec
inc
xchg
je
sub
push
cmp
adc
cmp
pop
jmp
mov
mov
pusha
stc
fwait
std
aam
jmp
in
pushf
addr16
cwde
sbb
outs
jo
inc
xchg
test
clc
jmp
cmp
mov
mov
sbb
mov
inc
mov
dec
shr
sbb
cli
adc
pushf
cmp
test
cdq
mov
repnz
imul
cmc
icebp
int
outs
mov
and
sbb
hlt
movs
and
add
imul
mov
mov
loopne
jecxz
mov
scas
ins
test
aad
jge
adc
xor
push
ja
mov
xor
daa
aas
and
vucomiss
and
data16
lock
fimul
xchg
pop
stc
xor
and
xchg
mov
test
js
mov
xor
icebp
int3
push
adc
sub
push
jne
lea
stos
mov
jo
cwde
clc
sub
mov
mov
xor
pop
xor
cmps
outs
(bad)
mov
mov
aas
(bad)
jae
xchg
xlat
in
test
call
out
sub
jo
xor
jo
stos
hlt
sbb
bound
dec
mov
jne
cdq
mov
fcom
nop
add
hlt
loopne
adc
xlat
cld
or
jo
and
scas
outs
mov
sub
sub
cmp
fdiv
xchg
jno
rcl
clc
xchg
cmp
fwait
es
retf
jge
arpl
mov
clc
push
fs
jnp
mov
imul
add
fstp
adc
mov
data16
mov
in
push
adc
sub
bound
hlt
cdq
mov
fsub
cwde
add
not
hlt
imul
cli
push
pop
in
in
pop
xor
in
(bad)
popa
je
hlt
sub
sub
sub
cmps
push
cmp
jecxz
leave
dec
sbb
and
mov
repz
(bad)
cli
push
dec
shl
jp
xor
lock
int
fild
mov
leave
jae
outs
jnp
in
movs
xchg
call
ja
pushf
mov
add
xchg
ins
sub
pushf
xchg
pop
fadd
pop
jge
mov
pop
sbb
mov
mov
push
pop
xchg
and
xchg
push
fldcw
nop
pushf
ds
aam
clc
(bad)
sub
lods
out
(bad)
(bad)
into
inc
div
mov
mov
mov
bound
(bad)
jo
sar
pop
cmc
add
(bad)
jae
icebp
sbb
lds
jnp
cdq
neg
loopne
mov
out
ret
mov
int3
mov
test
sbb
inc
jbe
test
jecxz
dec
or
jmp
aad
cld
mov
scas
mov
out
xchg
cmp
ins
in
stos
enter
in
mov
pop
cmp
mov
inc
adc
mov
pop
mov
stos
sub
or
inc
xor
pop
or
imul
or
or
pop
and
cmc
scas
jmp
xor
inc
xchg
(bad)
and
movs
pop
stos
les
xchg
jge
xchg
mov
ins
sub
fstp
fs
push
ret
ins
mov
dec
stos
push
dec
cwde
stos
sub
mov
cmc
pop
popf
push
jl
ins
sbb
mov
mov
out
(bad)
add
xchg
xor
sti
inc
loopne
cmp
(bad)
push
mov
jmp
pop
(bad)
fist
push
mov
stos
iret
push
mov
mov
cmp
jle
mov
cmc
mov
aad
test
and
in
pop
test
mov
(bad)
inc
xchg
push
(bad)
dec
dec
mov
scas
pop
jo
jp
dec
mov
add
repz
xchg
inc
jae
gs
and
(bad)
mov
adc
scas
pop
dec
xchg
aam
mov
push
sti
or
mov
xor
jge
mov
adc
cmp
sub
pushf
mov
iret
xor
sar
bound
cmp
xchg
mov
mov
jmp
movs
(bad)
xlat
outs
cld
mov
mov
mov
mov
jbe
pusha
cmps
sub
int
jmp
js
ror
mov
jp
popf
mov
aam
lock
rcl
pushf
mov
pop
or
in
sub
sub
xor
sub
dec
xchg
inc
push
fdivr
clc
(bad)
cmp
(bad)
and
jbe
icebp
int3
dec
dec
mov
sub
in
fsubr
mov
fsubrp
push
jmp
and
mul
xchg
push
aas
fnstenv
mov
jns
sub
cmps
dec
js
or
pop
das
lods
out
adc
push
rcr
xchg
inc
in
mov
out
jmp
sub
xor
iret
cmps
fs
scas
xchg
sub
cld
icebp
(bad)
pop
adc
gs
in
loop
lds
mov
sbb
ret
mov
pop
xchg
add
push
das
jl
mov
fadd
aad
jp
jbe
movs
loop
fxch
sbb
or
adc
cwde
xor
in
ret
fld
pop
push
or
int3
mov
pop
loopne
mov
sub
push
aad
cmp
test
test
jl
call
xchg
mov
dec
mov
mov
test
in
mov
mov
add
mov
jmp
sub
jge
cdq
cmp
out
xchg
sub
es
inc
repnz
dec
push
cmp
xor
xchg
mov
loopne
mov
sbb
ins
lods
dec
push
out
fist
inc
jb
loopne
or
arpl
xor
dec
add
push
add
movs
xchg
dec
push
inc
adc
push
pop
dec
mov
fdiv
jo
adc
mov
clc
xchg
shl
ins
cs
push
jo
mov
sub
sbb
jbe
sub
outs
test
or
pop
sub
mov
sub
xchg
dec
pop
(bad)
jg
pusha
xlat
out
je
xchg
jo
bound
clc
jne
test
sub
xchg
pushf
mov
mov
and
mov
xor
shr
jns
stc
jle
jb
push
jns
out
pop
in
ficom
xchg
jo
pop
out
icebp
pop
inc
adc
xchg
push
stos
sub
movs
mov
das
or
mov
mov
in
lock
cmc
cli
sub
das
sub
xchg
jne
xchg
out
out
xor
mov
pop
mov
loop
lock
fist
popa
mov
ja
jle
sti
mov
fs
add
(bad)
cld
(bad)
sti
cli
jnp
enter
dec
pop
in
pop
test
sti
jmp
jge
jae
inc
inc
jge
sub
lods
sbb
and
cld
call
ins
shl
jne
jg
xor
add
in
shl
xor
and
fs
or
cmp
fs
or
test
cmp
hlt
push
es
aaa
cld
xor
pop
adc
ins
sub
mov
aas
pop
pop
sbb
inc
sub
inc
aam
mov
mov
idiv
dec
sub
ins
rcr
outs
mov
mov
adc
ins
test
sub
dec
dec
ins
ins
xchg
and
gs
cmp
xor
mov
pop
ins
ins
call
loop
dec
jb
mov
push
aam
pop
inc
push
cmp
and
adc
add
dec
sub
aam
ins
dec
xor
mov
js
pop
xor
xor
inc
test
call
adc
sbb
std
js
test
push
pop
sub
mov
pop
sub
rcr
int3
push
clc
and
sbb
push
repnz
ss
loopne
mov
add
test
les
sub
push
in
sub
add
mov
pop
pusha
push
nop
in
add
fs
pop
or
shl
adc
inc
and
pop
fcom
call
sub
xor
ss
lods
jne
fistp
fdiv
adc
je
fdiv
pusha
adc
adc
sbb
fs
push
sbb
push
cmp
push
enter
mov
ror
dec
push
xor
clc
xor
cmp
mov
stc
mov
cmp
mov
loopne
rcr
imul
(bad)
sub
jo
dec
sub
in
arpl
mov
(bad)
cli
(bad)
out
adc
iret
cmc
xchg
inc
mov
fs
call
ror
jnp
mov
inc
add
dec
cmc
mov
sub
loope
inc
bnd
shr
and
jae
sbb
sub
mov
ss
dec
stc
dec
push
push
xor
std
cld
and
ret
cwde
xchg
push
js
retf
pop
das
sub
xor
fwait
pop
pop
cmc
cmp
test
idiv
xchg
arpl
inc
dec
sub
sti
cmp
xor
adc
gs
xchg
fwait
and
je
es
mov
sub
test
and
xchg
imul
call
push
cld
xor
jmp
cli
or
pop
xchg
push
ror
cwde
xchg
in
ins
mov
call
jns
pusha
mov
xor
fist
hlt
arpl
in
out
add
mov
jge
xchg
lea
adc
jge
mov
retf
cmp
mov
shr
jae
hlt
xor
mov
xchg
mov
jmp
xchg
data16
dec
les
imul
ins
jmp
test
hlt
jl
mov
nop
gs
sti
jno
cmp
das
dec
ins
inc
push
iret
jl
sahf
or
mov
int3
cld
outs
pop
je
mov
adc
mov
cmp
imul
fs
cmp
push
cmp
fwait
adc
les
pop
add
sar
pop
push
pop
mov
jge
mov
test
mov
ins
jb
(bad)
ins
pop
jae
jge
or
iret
test
les
dec
sub
jnp
fist
and
pop
sbb
(bad)
push
lea
lods
je
dec
mov
push
xchg
cmps
pop
ret
sbb
sub
pop
(bad)
popf
jge
cmp
sub
pop
pop
xchg
or
fidivr
pop
push
fld
xchg
cdq
mov
hlt
add
imul
nop
pop
addr16
mul
ja
inc
(bad)
sbb
ror
pop
imul
adc
and
push
and
ins
mov
jne
or
js
loope
fimul
mul
xor
imul
inc
pop
sbb
pop
outs
inc
add
mov
mov
dec
and
jbe
std
test
add
adc
mov
imul
cmp
ins
xor
idiv
inc
lds
pop
mov
imul
dec
jno
sub
repnz
mov
(bad)
adc
popf
jno
jle
rol
and
mov
outs
imul
fdiv
lods
das
outs
cld
jg
dec
ins
push
mov
and
ins
scas
pop
in
or
jmp
lods
hlt
outs
ja
fidivr
gs
jl
sbb
cmp
outs
js
add
fcmovb
push
dec
jge
pop
xchg
gs
cmp
ins
clc
(bad)
loope
and
dec
es
(bad)
hlt
ins
gs
(bad)
cmps
cmp
push
and
cmc
imul
pop
adc
out
jae
pop
shl
xchg
push
enter
int3
push
sbb
jle
imul
pop
ret
imul
lods
and
les
jp
bound
or
call
popf
jge
add
sbb
xor
sahf
imul
mov
lds
lods
daa
enter
jne
jbe
push
mov
xchg
jbe
add
fcomp
loop
mov
xchg
outs
xor
or
not
dec
push
pop
jbe
aaa
or
ins
mov
pop
push
daa
jne
(bad)
push
or
imul
push
xchg
add
iret
pop
xchg
int
ins
dec
outs
lds
push
ret
je
sub
fsubr
push
daa
xchg
in
imul
mov
lods
pop
cmp
and
jge
sbb
ins
push
cmp
fisub
dec
jb
movs
jne
push
pop
pop
jbe
adc
(bad)
inc
outs
jmp
aaa
ins
sub
(bad)
xlat
xchg
lea
std
mov
in
cs
(bad)
mov
cld
imul
mov
mov
cmp
adc
cmps
or
into
sbb
xlat
(bad)
in
ins
and
xchg
js
add
adc
and
xchg
ins
ins
stos
pop
ins
push
sub
jge
in
sub
repnz
ins
outs
cli
nop
add
dec
push
adc
push
movs
dec
dec
add
or
ds
sbb
cmp
in
push
sub
mov
cwde
jmp
push
test
cld
je
cmp
or
jp
jg
or
outs
scas
push
jecxz
or
ins
js
aad
imul
mov
xchg
sub
inc
jbe
cmp
jb
cld
push
pop
cdq
lds
push
into
sub
cmp
mov
adc
add
cmc
imul
or
mov
cmp
jge
jnp
push
outs
inc
shr
test
repnz
pop
sbb
pop
and
jnp
sbb
adc
push
xchg
retf
lods
push
jl
cld
es
pop
sbb
inc
mov
and
sbb
in
ins
test
rcr
xchg
gs
xor
sbb
imul
es
ds
jb
inc
xchg
call
fs
gs
leave
lods
cmps
fs
jb
leave
(bad)
jg
pop
jmp
or
jne
je
aaa
enter
lds
xor
movs
hlt
jae
add
inc
gs
test
enter
jp
vpshaq
lahf
mov
or
outs
sbb
fwait
add
hlt
ret
outs
(bad)
jp
adc
pop
imul
inc
add
pop
or
pop
stc
(bad)
ficomp
gs
mov
adc
lea
bound
jne
sub
pop
mov
jne
and
jl
adc
iret
outs
lea
rol
cli
aad
push
adc
jl
jns
inc
ins
dec
dec
or
mov
ins
xor
nop
pop
or
leave
cld
add
js
inc
sbb
push
jl
sub
cdq
dec
ja
mov
pop
int
jp
(bad)
adc
cmp
jge
enter
(bad)
jl
mov
cmp
pop
inc
jge
add
cmp
xchg
inc
clc
jl
mov
je
std
cmc
cmp
cmc
sbb
stos
dec
out
gs
aaa
add
inc
aam
mov
(bad)
adc
in
jl
sub
adc
fadd
sub
loope
data16
jecxz
dec
push
je
(bad)
jno
inc
std
in
fwait
repnz
xlat
jl
xchg
je
inc
mov
dec
sub
push
cwde
xor
jl
cmc
lea
cmp
jge
pop
movs
loope
(bad)
imul
les
add
clc
sub
popa
mov
or
aas
xor
pop
mov
jno
test
cmp
hlt
shl
inc
aam
cmp
jp
add
mov
push
adc
mov
cwde
outs
cmc
call
or
mov
xchg
jl
mov
mov
jp
pop
lods
movs
in
ja
adc
pop
mov
push
xor
mov
leave
pushf
inc
popf
jp
in
cmp
mov
jbe
in
std
sahf
add
jge
cmps
xchg
fs
sub
pop
lds
sub
jge
out
add
dec
pop
in
cmp
add
mov
cld
xor
xchg
fs
(bad)
jl
mov
jno
in
pop
enter
xor
dec
add
jl
in
adc
enter
ss
outs
test
into
or
js
mov
outs
out
xchg
adc
sbb
cmc
adc
mov
shr
cmp
add
mov
js
mov
jne
or
mov
test
and
add
call
inc
xchg
xor
cld
lea
dec
cld
out
mov
jnp
les
rcr
pop
sub
outs
ss
ds
mov
mov
jnp
sub
shl
ds
imul
in
jne
cmp
jo
push
arpl
fadd
adc
neg
mov
sti
mov
and
data16
push
repz
out
icebp
lock
sbb
pop
dec
jbe
test
leave
sub
cdq
in
dec
dec
mov
test
out
stos
jne
xchg
xchg
mov
xchg
in
mov
scas
cmp
mov
shl
int3
stc
jo
mov
std
mov
mov
or
and
hlt
mov
mov
mov
pushf
push
jno
jo
js
pop
pusha
lods
rol
ins
sbb
xchg
in
jns
inc
jne
push
xchg
adc
push
(bad)
cmp
call
cld
cmc
or
(bad)
call
int
fdivr
(bad)
aad
jmp
lock
push
jae
mul
inc
sub
add
sub
je
clc
std
inc
cld
stos
mov
cmp
add
pop
in
fwait
outs
fmul
or
ds
pushf
ins
rcl
xlat
call
rol
mov
sar
dec
cwde
les
pop
mov
jne
inc
xchg
add
pop
mov
fdivr
in
and
add
mov
mov
lock
inc
dec
sub
lds
push
jo
loop
ins
aam
cmp
daa
fmul
dec
clc
shl
push
dec
std
dec
lahf
sbb
in
cld
sbb
adc
cmp
rcr
sbb
enter
rcr
pop
xchg
mov
sbb
xor
popa
add
xchg
sub
outs
jo
jb
jg
sbb
mov
inc
jo
and
dec
cmp
inc
daa
jo
xchg
lock
sbb
xchg
leave
pop
adc
nop
jae
(bad)
pushf
stc
sub
movs
jns
rol
aam
mov
fist
mov
call
cmp
inc
and
cmp
lds
test
jo
retf
ss
dec
inc
sbb
mov
sbb
add
pusha
inc
gs
and
dec
neg
js
cmp
scas
stc
pop
mov
cmps
std
cmp
or
ficomp
fsub
mov
dec
in
iret
lock
pop
sbb
dec
mov
xor
sar
and
(bad)
pop
inc
ret
fnstcw
int3
pop
xchg
imul
gs
jge
xchg
(bad)
pushf
in
pop
adc
(bad)
fisub
adc
pop
jnp
sub
jbe
inc
ins
movs
sbb
jp
dec
push
ins
sbb
loopne
cs
mov
fs
lods
test
loop
push
fs
dec
mov
sbb
in
inc
xor
nop
cld
mov
push
sub
mov
pusha
inc
jge
inc
aas
fnop
call
(bad)
stc
test
mov
dec
les
and
icebp
jo
add
inc
sub
xchg
xchg
ja
push
cwde
cmc
xor
dec
adc
sub
popf
fs
pop
inc
fnstcw
pop
pusha
test
rol
mov
aaa
sbb
dec
xor
dec
and
jo
ins
mov
mov
add
int
sbb
(bad)
std
gs
jne
lock
gs
movs
pop
out
gs
out
das
mov
jmp
dec
cmp
jg
daa
ds
xlat
fs
ins
aad
cwde
jb
in
les
dec
jmp
sbb
out
mov
in
mov
(bad)
xor
mov
pop
mov
hlt
fadd
fs
ja
xor
sub
ja
arpl
mov
out
xor
lods
jbe
adc
jae
jmp
addr16
mov
add
jbe
or
push
fdivr
pop
inc
lods
sahf
mov
sub
sbb
pop
and
pop
rcl
mov
(bad)
fs
xor
in
sbb
dec
test
jmp
into
inc
adc
xchg
mov
aam
repz
inc
cli
adc
sbb
fbstp
sbb
in
sub
fcomp
(bad)
aas
ins
mov
cwde
add
fs
sub
mul
gs
dec
dec
cmp
jnp
bound
sbb
dec
push
mov
test
xchg
pop
outs
and
aam
cmp
cmps
ins
movs
inc
sbb
mov
jo
mov
or
cmp
and
dec
gs
dec
ficomp
mov
in
mov
test
in
out
dec
xchg
lods
std
sbb
les
sbb
jbe
jno
dec
pop
xor
mov
push
sbb
arpl
iret
loope
call
add
dec
js
sbb
mov
pop
loopne
js
xor
sub
push
shr
in
sbb
hlt
cmp
std
jae
(bad)
fistp
mov
inc
jecxz
mov
pusha
and
xor
sbb
sbb
data16
pop
gs
adc
sbb
nop
ins
arpl
loopne
sub
cwde
cmc
int
ja
data16
aas
movs
sbb
add
sbb
aad
je
jnp
js
push
fidivr
mov
fsubr
cmp
js
ins
jg
lds
ins
into
mov
jp
add
cmps
cmp
and
xor
pop
(bad)
ja
xchg
and
jnp
jg
out
in
aam
enter
ins
mov
iret
je
inc
fnstsw
outs
(bad)
mov
dec
gs
imul
imul
xor
pop
dec
mov
test
test
mov
pop
fdiv
into
fcom
movs
movs
imul
push
fsubr
dec
inc
pop
hlt
movs
stc
push
dec
mov
gs
pop
push
sub
je
dec
aaa
out
repz
mov
repnz
in
std
sbb
adc
xor
mov
fld
dec
dec
ja
dec
(bad)
(bad)
sub
xor
call
bound
pop
jmp
(bad)
dec
jle
sbb
sub
xor
push
clc
cld
test
cmc
cdq
test
jmp
jp
(bad)
mov
cld
adc
out
repz
lods
dec
and
gs
mov
xlat
mov
mov
push
ins
push
gs
pop
aaa
js
fdivr
stos
loopne
mov
fs
jmp
sub
sbb
nop
stos
fadd
xchg
dec
mov
into
pop
mov
xor
popa
adc
pop
cmc
inc
sbb
mov
call
and
cmp
pusha
aas
cmp
sbb
add
cmp
cmps
inc
xchg
stos
mov
xor
jbe
cmps
rcr
pop
add
adc
js
lock
stc
std
mov
jns
jg
jmp
add
or
mov
inc
push
ins
cwde
push
mov
adc
pop
adc
add
jmp
pop
adc
ja
ror
sub
out
xchg
popf
or
pop
hlt
inc
and
cmp
inc
ins
repz
jbe
xchg
fs
or
pop
fdivr
loopne
adc
cld
mov
mov
or
mov
sub
jge
test
jae
or
push
sub
add
jmp
jns
and
in
dec
mov
add
loopne
cld
push
jb
std
inc
inc
in
push
pop
and
fwait
ror
jb
lods
jge
xor
ins
gs
and
jmp
add
mov
dec
sub
dec
push
in
loop
je
inc
std
push
call
mov
jge
push
fld
dec
jp
test
jp
inc
pop
cmp
sahf
sbb
pop
mov
fdiv
mov
loopne
or
cdq
sub
sti
mov
mov
pop
adc
je
sbb
movs
ror
js
add
fwait
sub
aad
xor
sbb
inc
ins
in
mov
mov
ins
sbb
push
ins
adc
push
pop
push
adc
jne
inc
outs
pcmpgtb
dec
cmp
jmp
dec
in
test
xchg
pop
adc
dec
clc
out
inc
mov
push
inc
mov
inc
or
xchg
pushf
push
sbb
hlt
xchg
gs
sbb
or
jl
mov
rol
mov
lods
loope
cmc
adc
movs
and
inc
xor
mov
addr16
dec
fs
or
(bad)
pop
inc
push
fistp
movs
xchg
out
jo
lock
in
xor
and
mov
gs
mov
pop
shl
dec
sbb
or
cmp
sbb
in
and
xchg
jp
push
fcmovu
mov
aad
fnstcw
pushf
cmp
jne
xchg
mov
ja
xor
fidiv
repz
enter
loopne
jo
or
les
movs
jnp
xor
cmp
add
xchg
jnp
dec
outs
sbb
pop
shr
lea
mov
jp
ins
sbb
adc
lds
inc
jp
ja
ret
xchg
js
hlt
nop
inc
int3
(bad)
dec
inc
out
xor
xchg
xor
mov
xor
test
(bad)
mov
mov
clc
or
mov
fcmovbe
pop
cs
fild
jp
gs
pop
in
mov
xor
in
enter
pop
adc
xor
cmp
iret
int3
inc
test
(bad)
jo
std
xchg
pop
dec
inc
sbb
xor
retf
clc
stos
pop
and
mov
add
jp
in
and
jl
pop
adc
mov
scas
push
leave
movs
jmp
dec
retf
or
int3
sub
adc
aaa
ins
cmc
jge
aam
inc
pop
popf
data16
dec
xchg
xlat
cmp
stos
sar
enter
ret
addr16
dec
fdivr
dec
pop
adc
jae
vzeroall
hlt
xor
aas
std
add
rep
sub
jecxz
add
(bad)
dec
pop
js
cmp
mov
fs
fld
push
xchg
fs
test
sbb
jmp
gs
icebp
sub
dec
mov
cmp
pusha
inc
push
jmpw
sub
pop
pavgb
std
mov
xor
inc
std
pop
popa
(bad)
jo
pop
and
push
xchg
pop
mov
je
sar
sub
xchg
and
js
outs
es
scas
adc
fsub
inc
(bad)
xor
dec
(bad)
sar
push
pop
popf
aam
xor
pusha
lahf
ins
iret
mov
dec
pop
xor
sbb
dec
mov
dec
jno
dec
mov
fs
retf
jmp
xor
pop
sbb
mov
mov
xor
cmp
and
cmp
stos
mov
lahf
std
cmp
add
add
lods
in
pop
pop
jbe
clc
cmp
jns
jno
push
sbb
adc
pop
retf
ds
call
pop
fst
imul
ss
loopne
jp
cwde
dec
jb
lahf
jp
sbb
stos
push
movs
cmp
pop
adc
ins
int3
clc
fistp
stc
push
sbb
ins
hlt
inc
outs
ins
movntq
fstp
inc
mov
sbb
pop
and
mov
mov
int3
fsubr
pop
jno
adc
xor
fidiv
(bad)
mov
das
outs
xor
xor
add
pop
idiv
pop
cli
cmp
adc
gs
stc
es
pop
adc
ins
addr16
mov
test
jns
inc
push
jp
add
pop
cdq
push
movs
or
sti
repnz
xchg
test
les
xchg
push
aad
jp
cmp
sub
mov
xchg
mov
sub
sbb
cmps
mov
stc
pop
clc
test
mov
and
int3
xchg
ins
inc
jmp
pop
mov
dec
out
sbb
mov
push
jmp
push
int3
sti
pop
jne
ja
sub
cwde
enter
fld
scas
mov
std
jmp
cmc
ins
cs
repnz
lds
clc
pop
inc
or
popf
(bad)
les
mov
fdivrp
adc
inc
call
push
aam
dec
dec
popa
hlt
jnp
gs
repnz
add
add
stos
cmp
dec
fld
pusha
xlat
or
(bad)
in
mov
jmp
jo
or
ins
stos
and
call
mov
dec
mov
ss
popf
ins
ins
inc
jnp
pusha
mov
nop
xchg
jp
stos
adc
cmp
or
sub
pop
cwde
xchg
js
sub
and
push
out
retf
call
daa
or
or
adc
dec
aas
pusha
push
mov
jbe
sbb
aam
add
or
in
jns
xor
sbb
lds
and
int3
ja
cmp
rcl
ins
cmp
mov
mov
shl
jae
xchg
repnz
pop
clc
(bad)
movs
jle
lods
addr16
lea
sti
dec
or
fisub
js
or
dec
cmp
inc
inc
fs
dec
jns
push
cmp
rcr
es
xor
ja
cmp
call
lds
neg
inc
ret
xor
mov
dec
repz
xchg
cli
gs
call
inc
mov
add
cmp
data16
stc
xor
in
movs
cmps
nop
js
cmp
lahf
and
neg
sbb
ins
mov
stos
cmp
and
add
pop
cmp
in
aam
js
sub
jle
xchg
cwde
push
inc
pop
in
pop
mov
into
dec
xor
xchg
addr16
xchg
ror
mov
push
xchg
push
aam
pop
jns
jo
rep
sub
enter
ss
jecxz
xor
ins
and
pushf
dec
mov
ss
add
cld
add
test
or
sub
jno
retf
fisub
or
mul
test
dec
repz
adc
outs
pop
gs
ret
jne
dec
mov
scas
push
test
imul
xchg
cmp
int
nop
les
popf
sub
mov
outs
dec
gs
fs
std
xor
fdivr
jne
jmp
ja
int3
out
std
stc
mov
aam
shl
jo
fdiv
sbb
cmp
add
cmp
ds
mov
push
out
lods
mov
sbb
hlt
in
jg
pop
les
sub
bound
jmp
test
lock
cmp
cmps
sbb
sbb
dec
mov
xchg
ins
mov
xor
in
jmp
fs
mov
cld
outs
mov
je
or
xlat
jno
sahf
xor
sub
mov
sbb
pop
and
push
push
lahf
push
neg
inc
shld
mov
sar
xor
gs
mov
sar
ins
sub
aad
dec
and
and
jmp
in
or
dec
dec
cmp
(bad)
push
enter
inc
movs
pop
inc
ret
(bad)
sbb
jge
(bad)
cmp
gs
push
push
add
adc
inc
addr16
jmp
js
and
cmp
inc
adc
mov
pushf
sub
cmp
pop
hlt
sub
jne
push
ins
int3
cli
dec
dec
cmp
or
std
xor
mov
pop
push
shl
dec
add
sti
lahf
dec
adc
gs
ins
sub
sar
int3
or
mov
dec
or
arpl
mov
fsubr
and
push
(bad)
in
dec
cmp
or
mov
jbe
stc
dec
dec
dec
dec
sub
pop
data16
dec
popa
call
jns
dec
dec
push
adc
sub
xor
cmp
shr
fist
in
dec
sbb
mov
mov
ins
sbb
xor
cmp
sub
mov
or
dec
adc
packsswb
fwait
pop
inc
push
push
sub
push
fs
retf
daa
mov
fsub
stos
push
jl
add
gs
push
(bad)
pop
mov
add
mov
cli
mov
je
and
cmp
sub
push
mov
sub
loopne
out
dec
call
sub
std
add
jl
xlat
fnstenv
fwait
int3
dec
lock
xor
cmp
push
lods
pop
test
cwde
jg
movs
ins
sbb
jns
fistp
aam
data16
(bad)
lahf
das
jmp
icebp
inc
stc
or
jns
xchg
dec
mov
jmp
xchg
popf
out
ret
cmp
and
outs
jmp
mov
leave
push
shl
cld
pop
imul
dec
fdivr
arpl
fsub
in
sti
xchg
sbb
in
push
shl
xlat
mov
push
or
xchg
cmp
adc
cmp
sub
dec
jno
sub
cs
iret
mov
xchg
fimul
cmp
pushf
jecxz
pop
scas
ins
iret
retf
aam
mov
add
inc
movs
mov
and
mov
ins
xchg
fadd
push
sub
fimul
movs
iret
jp
and
sar
sar
add
data16
mov
fadd
test
aad
sti
xchg
sbb
scas
cmp
push
pop
cli
mov
in
stos
js
sbb
dec
jp
mov
div
cmp
sub
nop
outs
js
xchg
icebp
fnstsw
push
les
jne
jp
jmp
fs
mov
mov
jge
fdivr
mov
mov
add
jl
cld
xchg
fisubr
iret
test
fs
cmp
leave
jo
or
mov
(bad)
loop
jne
cmp
scas
je
mov
repz
outs
cli
fidiv
or
outs
adc
push
mov
std
(bad)
fcmovnbe
in
xchg
mov
sub
jo
and
fs
xor
mov
adc
sub
lods
imul
pusha
in
dec
mov
dec
sub
(bad)
repz
xchg
dec
pusha
sub
inc
aad
stos
cmp
xchg
xchg
pop
rcr
in
add
dec
and
loopne
dec
push
xchg
xor
xchg
shl
loopne
scas
bswap
inc
sbb
adc
popf
mov
dec
sub
nop
dec
mov
shl
inc
inc
outs
jmp
mov
or
outs
adc
leave
pop
xchg
cwde
lahf
jb
mov
fs
ror
js
push
sbb
sub
jne
jge
es
shl
xchg
scas
push
sbb
and
retf
and
test
pusha
or
or
das
push
xchg
fs
sub
cmp
fstp
sub
idiv
add
cli
sbb
adc
cmp
inc
push
mov
add
push
pop
jo
hlt
jo
icebp
xchg
pop
jae
xchg
(bad)
dec
cmc
in
or
ret
mov
test
and
mov
pop
sar
js
imul
cmp
mov
xchg
jo
xchg
mov
mov
pop
out
repz
lods
ja
xchg
cli
stc
jbe
pop
pop
fist
fimul
out
outs
loop
les
xor
xchg
xor
jo
mov
push
repz
stos
dec
jge
push
js
mov
push
shr
mov
xchg
bound
in
(bad)
xor
out
xor
ins
clc
xchg
cmps
xor
data16
inc
shrd
xchg
addr16
out
mov
inc
pusha
stc
out
mov
mov
jge
int
sbb
fstp
scas
jmp
imul
jo
adc
in
dec
adc
jmp
jne
out
outs
ficom
xlat
fucomp
inc
adc
jge
mov
push
das
leave
sub
in
jmp
push
and
ret
addr16
popa
cmp
sub
cmp
xchg
rol
inc
bound
dec
sbb
jp
xor
out
jp
xchg
in
mov
fst
jmp
push
je
stc
fs
inc
std
jnp
mov
pop
mov
in
xchg
inc
cmp
fdivr
mov
loope
test
cmp
xor
pop
fist
sar
inc
xlat
hlt
push
xchg
adc
sbb
adc
xor
daa
mov
clc
xchg
mov
xor
sbb
repnz
pop
repz
xchg
int3
pop
push
pusha
ret
push
mov
pop
or
jno
aam
or
jb
fcomp
jecxz
inc
inc
push
les
in
xchg
cmc
repnz
inc
js
stos
mov
sub
in
sub
ins
stos
lock
cmp
dec
repz
jb
mov
retf
push
idiv
test
je
push
sbb
mov
xchg
out
lds
mov
pop
aas
inc
dec
jbe
pop
arpl
sbb
movs
add
mov
mov
jo
mov
in
imul
push
jns
mov
popa
mov
test
mov
das
sbb
cdq
or
cld
cmps
icebp
hlt
pop
aad
and
nop
cmp
daa
cmp
jmp
ja
or
sub
es
mov
cmp
dec
sub
xor
cmp
jae
xchg
push
call
xor
cmp
outs
adc
mov
inc
push
hlt
es
pushf
cmps
jno
cli
addr16
repz
repnz
fwait
jp
ret
and
push
or
jle
or
shr
fild
mov
cmp
xchg
loope
fsub
icebp
and
mov
in
and
xchg
add
jns
outs
fs
add
enter
dec
mov
sbb
add
dec
jbe
push
or
adc
nop
(bad)
ret
fwait
push
test
or
enter
iret
jnp
pop
xchg
add
aad
std
pop
ins
sub
or
jp
jne
xchg
mov
ins
test
(bad)
mov
les
idiv
scas
cld
fidivr
jae
dec
in
cwde
pop
push
mov
and
inc
jb
loopne
call
xor
aas
cli
aad
xchg
and
dec
push
test
push
cmp
adc
ins
mov
sbb
sub
push
stc
xor
mov
mov
cli
mov
enter
sbb
push
fsubr
mov
push
inc
or
dec
pop
jno
dec
ss
xchg
xchg
add
cld
or
xor
stos
in
call
(bad)
pop
loopne
out
push
push
mov
sahf
cli
cld
jno
mov
cwde
mov
jge
icebp
popa
dec
fisttp
sub
sti
xchg
call
enter
jns
stc
xchg
add
in
mov
xor
jnp
cmp
xchg
xchg
sar
cmp
jecxz
fs
in
ins
mov
jb
push
xor
loope
fwait
pushf
push
sbb
sbb
cmp
jp
cli
and
jle
mov
shr
push
mov
adc
ins
lods
xchg
push
ja
sub
je
sbb
xchg
std
test
adc
imul
sbb
inc
xchg
sub
push
loopne
xchg
or
sub
xchg
xor
sub
movs
jbe
mov
jns
mov
jno
repz
sbb
(bad)
sbb
xchg
movs
push
stos
jne
pop
pop
jnp
push
push
inc
data16
push
push
pop
scas
sub
adc
(bad)
dec
xchg
cld
adc
das
mov
cmp
jmp
int3
adc
dec
pop
push
sbb
ret
sbb
rcr
sbb
sub
lods
lds
push
cmp
xchg
mov
pop
cmp
jo
xchg
cld
in
je
sbb
sbb
push
sbb
adc
mov
mov
ret
cli
cmc
jne
xor
loopne
int3
in
add
rcl
bound
(bad)
jno
(bad)
pusha
xchg
push
push
jne
xchg
ins
repz
mov
jmp
xor
ret
js
gs
jbe
cmp
dec
push
jp
outs
sti
lds
cmp
push
dec
out
inc
shr
cmp
shl
push
pop
arpl
xor
sahf
or
shl
shr
mov
xchg
and
inc
sbb
adc
sbb
es
ret
out
lahf
repnz
pushf
push
inc
enter
fld
xchg
idiv
sti
inc
jae
mov
push
mov
in
and
out
pop
jge
push
and
loopne
adc
sbb
pop
xchg
pushf
jge
xlat
imul
push
lods
loop
sbb
mov
fs
jmp
jmp
cli
and
dec
cmp
mov
dec
mov
cwde
fldl2e
mov
cmp
dec
fcomp
lods
mov
sub
jl
pusha
sbb
jno
jo
lods
test
add
loop
mov
xchg
popa
and
sti
imul
into
mov
xor
and
scas
add
xlat
dec
repz
test
adc
ret
cmps
xchg
pop
ins
jbe
shl
cmp
lock
daa
ficomp
pusha
outs
cli
std
or
out
inc
stos
adc
imul
cmp
push
int
xchg
cmp
mov
push
cld
cmp
sbb
out
sbb
inc
hlt
gs
jb
xchg
rol
(bad)
ins
idiv
cmc
in
bound
push
cs
(bad)
push
jo
out
sbb
adc
fisub
sub
ins
addps
jbe
fs
mov
adc
and
jo
popa
pop
dec
cmp
imul
repz
dec
dec
leave
jne
ror
int
pushw
pusha
add
jae
mov
jmp
repz
inc
fidiv
aam
(bad)
cld
loope
xchg
and
je
sub
bnd
push
sbb
jne
scas
xor
arpl
out
or
ds
and
stos
dec
mov
stos
ins
cmp
xchg
nop
mov
loopne
loopne
cmc
jae
sar
xchg
mov
(bad)
fld
cmp
inc
jae
stc
repz
xchg
movs
addr16
aad
adc
cmc
int
push
fst
mov
xor
call
fs
xor
or
push
daa
lods
xchg
sbb
aas
dec
call
cmp
xchg
in
clc
push
jo
dec
dec
xchg
push
into
outs
inc
xor
outs
xchg
add
fdiv
mov
push
push
rcr
fcom
jl
jge
enter
bnd
clc
in
outs
pop
mov
daa
cld
xor
cmp
add
jo
xor
(bad)
push
bnd
xchg
push
ret
stc
mov
leave
cs
ss
xchg
mov
xor
jge
mov
cs
cmp
and
xor
es
jns
jae
(bad)
js
popa
shr
cmp
dec
js
fucomip
and
xor
cmp
mov
jmp
adc
mov
and
jae
jecxz
mov
ficom
fidivr
retf
and
mov
mov
bound
imul
shl
popa
jmp
mov
das
push
js
mov
jp
mov
test
sub
xchg
out
xor
pop
and
jne
jae
mov
(bad)
loopne
popa
mov
cmp
cli
fs
lock
and
test
inc
jnp
xchg
adc
push
xor
mov
loop
in
shr
frstor
sbb
addr16
cld
mov
xchg
rcr
mov
sbb
push
mov
or
jnp
mov
mov
in
(bad)
cld
or
mov
jge
mov
(bad)
out
cmp
adc
xor
fimul
dec
dec
add
inc
mov
pop
les
mov
mov
jmp
xlat
cld
sub
enter
xor
push
cmps
xor
int3
loopne
fcmove
mov
sub
ret
mov
outs
pop
inc
in
and
ret
push
enter
pop
xchg
cwde
push
mov
xchg
jne
cmp
jne
jmp
scas
mov
mov
dec
movs
cmp
ds
push
icebp
jbe
adc
jne
in
movs
mov
xchg
pushf
loop
sbb
inc
loopne
aad
in
sub
pop
les
out
dec
in
bound
ja
clc
pop
jb
pop
or
inc
jb
push
pop
pop
std
xchg
lea
adc
xchg
inc
pop
mov
scas
pop
retf
pop
fadd
inc
adc
lahf
int3
neg
es
mov
push
sbb
xchg
and
xor
jmp
mov
mov
mov
sub
adc
xchg
aaa
sub
cmp
sbb
adc
in
out
mov
inc
sar
test
rcr
xor
add
sub
inc
push
icebp
jp
jge
and
mov
jbe
out
xchg
mov
mov
fwait
out
xlat
xchg
xor
sbb
out
fdiv
(bad)
cmp
into
int
or
sub
scas
test
push
ins
cmp
jae
push
daa
inc
and
std
test
jnp
stos
scas
push
rcr
push
call
jns
push
pop
and
std
xor
xor
mov
ins
loopne
mov
js
movs
mov
mov
jbe
cld
pop
jae
and
jo
repz
xchg
adc
jp
sub
std
push
cmp
pop
dec
push
sahf
pop
xor
int3
push
icebp
js
mov
scas
sti
jmp
lods
in
or
pop
js
mov
or
inc
sub
retf
sub
mov
inc
mov
mov
test
xchg
push
sti
xor
and
xchg
push
sub
bound
lods
arpl
pop
fucom
(bad)
lea
jmp
mov
pop
xchg
push
pop
inc
xchg
test
repnz
fs
retf
pop
push
stos
call
adc
add
popf
ins
cs
outs
push
jp
xchg
push
cmp
cmp
cwde
xchg
pusha
frstor
jp
inc
fidiv
adc
jge
call
ja
pop
mov
jl
mov
pusha
and
sub
scas
(bad)
(bad)
or
scas
pop
mov
outs
lods
int3
jnp
add
cmp
sub
mov
fwait
jmp
jns
std
push
ret
mov
push
adc
dec
jp
movs
xchg
cmp
jae
pusha
xor
jb
adc
xor
mov
add
jmp
loopne
dec
dec
adc
sub
push
sub
cli
fadd
(bad)
jmp
jl
icebp
pusha
xor
shr
xchg
lods
xor
add
pop
sub
jle
in
jne
(bad)
jne
scas
jmp
dec
mov
sub
cmp
ss
add
jmp
xchg
in
pop
rcr
icebp
xchg
test
push
test
fidivr
fsub
cmp
mov
enter
inc
dec
stos
xlat
dec
mul
icebp
and
jne
xchg
push
lea
xchg
dec
add
icebp
loop
cdq
jne
xchg
in
ftst
cmc
cdq
iret
xchg
dec
ds
cli
xchg
fwait
xchg
ret
cmp
xchg
test
fs
xchg
fmul
xor
in
or
pop
out
jo
xor
sbb
shl
xchg
cmp
ret
push
add
lock
stos
daa
std
repz
lods
popa
dec
addr16
outs
out
enter
daa
aam
ins
xor
inc
movs
sbb
cmp
sub
jb
sbb
retf
jecxz
cmps
icebp
aas
je
sbb
in
imul
mov
outs
jae
sub
enter
jo
dec
xchg
hlt
adc
faddp
push
dec
xchg
mov
and
daa
pushf
pop
or
xor
addr16
out
sti
cs
jne
sub
dec
xchg
outs
xchg
mov
adc
xchg
sbb
pop
out
lods
jo
cli
ret
dec
mov
outs
mov
mov
push
jmp
in
lea
inc
xchg
mov
(bad)
aas
push
sbb
xor
js
icebp
es
fisub
cmp
es
and
jns
cmp
clc
into
mov
pushf
mov
adc
aad
aas
dec
aam
outs
sbb
lock
clc
xor
popf
jmp
pop
jb
jg
loopne
fldcw
ret
pop
lods
sub
push
fldenv
ret
jge
test
ret
sub
out
cmp
mov
lahf
cmc
sub
ret
dec
jmp
pop
(bad)
shl
lods
and
sub
int3
dec
into
shr
or
xchg
mov
mov
pop
mov
or
fnstsw
adc
mov
sub
rcl
clc
test
cmp
ret
mov
sub
cld
inc
out
inc
adc
je
gs
sbb
xchg
mov
rcr
mov
stos
je
adc
out
popw
call
and
jne
imul
cmp
idiv
dec
mov
push
add
icebp
ret
push
aam
mov
inc
idiv
rcr
or
xchg
push
aaa
inc
iret
lock
sahf
xchg
xchg
inc
(bad)
ret
or
movs
jp
pushf
imul
(bad)
stc
jae
pop
cmc
movs
dec
mov
(bad)
outs
imul
je
jae
aad
push
inc
cld
ins
ret
inc
mov
jne
imul
icebp
sar
rcr
xchg
add
ins
pusha
mov
adc
cmp
call
jp
mov
ds
inc
sub
bnd
fldcw
iret
add
adc
out
fld
add
pop
ficom
fnstenv
cli
add
pop
lock
imul
(bad)
movs
movs
mov
lahf
repz
daa
sub
push
adc
or
push
cmp
dec
pop
mov
cwde
push
movs
je
adc
cmp
jne
pop
adc
ins
loopne
cmp
cmp
mov
dec
jo
cmp
xchg
retf
or
rol
jo
cli
dec
cmp
in
jle
inc
and
retf
dec
jl
lahf
adc
push
inc
cmp
sbb
je
cs
ja
xchg
outs
and
repz
dec
and
push
mov
popf
int
cli
xor
fs
jmp
xchg
inc
dec
add
adc
shl
jecxz
add
ss
test
in
xchg
dec
stos
inc
mov
loop
mov
add
test
pop
inc
cdq
dec
scas
jmp
shl
pop
gs
adc
mov
std
push
cmp
in
xchg
inc
sub
inc
dec
push
xchg
js
cmp
sbb
sahf
cli
test
in
or
fdivr
arpl
push
stc
mov
daa
cli
push
test
js
div
jle
aam
nop
jmp
pusha
xchg
jl
scas
popf
xor
ja
xchg
dec
cmp
adc
call
xchg
mov
jnp
mov
or
js
cdq
or
das
cmp
sbb
mov
ja
stc
dec
adc
lods
and
sbb
iret
pop
jne
sub
pop
xor
ins
pop
call
adc
cld
repnz
int
pop
lea
sub
mov
movs
add
jle
xor
mov
lock
aam
jge
jnp
adc
outs
scas
pop
js
cs
stc
vmwrite
mov
je
mov
cmc
sti
hlt
xor
jae
vdivss
imul
movs
jae
aam
(bad)
cld
sahf
enter
cmp
mov
out
push
and
mov
aaa
xor
gs
xchg
pushf
inc
mov
pop
outs
jmp
mov
jo
cmp
aad
jg
ins
inc
xor
sbb
mov
ins
mov
mov
push
ins
stc
shr
shr
jae
xchg
xor
cmp
jge
push
jo
xchg
pop
in
sbb
xrelease
xchg
xchg
scas
mov
sub
inc
and
push
hlt
push
push
jo
and
jnp
xchg
push
dec
push
mov
mov
hlt
mov
test
data16
jne
loop
pop
mov
add
lods
test
add
mov
loopne
pop
std
in
push
adc
cmp
pxor
push
sbb
pop
adc
fiadd
jle
sub
sti
sub
dec
xor
repz
dec
in
adc
or
jp
dec
xchg
and
xchg
mov
stc
repz
xchg
mov
sbb
into
outs
into
repz
cmp
push
js
xchg
addr16
dec
cmp
fmul
popf
test
ja
sbb
and
cmc
call
jb
xchg
shl
retf
loope
jecxz
shl
mov
icebp
mov
ins
mov
push
inc
xchg
dec
add
jae
ret
sbb
sub
jmp
pop
xchg
(bad)
movs
fadd
stos
ret
loope
add
(bad)
out
arpl
call
out
adc
cmp
fnstsw
cld
push
adc
inc
mov
pusha
loopne
dec
iret
mul
pop
stos
xchg
inc
mov
jmp
add
adc
jns
and
loopne
mov
pop
ins
xor
outs
in
ficomp
push
push
loopne
lock
sbb
ror
xlat
shl
int
in
jae
mov
gs
hlt
xor
push
mov
scas
and
dec
rcr
mul
sbb
in
sub
cmp
movs
adc
les
loope
cmp
js
idiv
rcr
outs
pop
icebp
cmp
mov
xchg
gs
out
aas
push
sub
pop
push
sbb
int
loopne
leave
cmps
mov
pop
push
or
cmp
mov
push
sub
imul
pop
and
pop
dec
test
sbb
lea
jnp
clc
loop
repz
jecxz
inc
push
cdq
pop
sbb
std
cdq
xchg
and
adc
(bad)
loopne
xor
adc
popa
xor
arpl
cmp
mov
js
inc
fstp
loope
mov
pop
jp
daa
adc
shl
(bad)
sbb
addr16
pop
dec
(bad)
cmp
jne
fisttp
loope
std
clc
mov
sbb
mov
hlt
jmp
pop
xchg
cmc
in
add
cmp
and
nop
lods
jo
nop
push
shl
pop
loop
cmp
push
sub
mov
xchg
dec
inc
adc
inc
jo
shr
cmp
jge
jns
loopne
popa
add
fisub
imul
pop
ins
xor
fistp
aam
or
and
pop
dec
loopne
div
xchg
out
stos
addr16
cmp
dec
push
add
or
mov
adc
fldenv
out
rcl
or
and
rcl
mov
jo
xor
inc
sti
xchg
pop
jno
rol
push
adc
xchg
ins
jp
pop
jnp
fnstsw
nop
mov
add
mov
xchg
mov
movs
jns
or
cld
es
mov
dec
jmp
push
xchg
aam
push
jp
xchg
inc
hlt
leave
mov
movs
movs
test
test
mov
ss
mov
cmps
and
push
dec
sbb
das
aaa
cmp
gs
mov
jnp
cli
push
loope
loopne
stos
fmul
push
aaa
mov
sub
fs
xchg
loopne
popa
and
repz
mov
push
jge
pop
push
hlt
cmp
mov
sar
cmp
push
or
cmp
push
enter
outs
data16
stos
ss
int3
std
mov
jne
push
jns
gs
ficomp
jne
sti
or
ins
push
xchg
dec
sub
inc
js
push
add
mov
into
jo
out
clc
xchg
test
test
clc
pushf
and
or
cld
mov
jmp
xor
sar
push
push
push
jne
sub
hlt
repz
adc
xor
cmc
in
dec
mov
js
mov
push
xor
mov
push
inc
rcr
fsub
push
add
call
xchg
sub
(bad)
test
jo
std
adc
daa
loope
je
push
stos
sti
in
pusha
je
xchg
in
push
cmc
test
push
mov
int
in
sbb
and
inc
add
mov
fisub
sbb
or
jge
or
jae
pop
dec
test
jnp
push
outs
stc
add
xchg
xchg
pusha
lahf
pop
icebp
lds
popf
push
or
clc
into
int
cmp
xchg
dec
jo
add
imul
pop
mov
out
or
jb
std
dec
mov
sub
(bad)
xor
adc
push
mov
ja
fcmovnu
loope
test
inc
js
loop
jb
loope
mov
cmp
(bad)
adc
sub
mov
pop
ds
sub
mov
ltr
sbb
xchg
jge
les
dec
das
inc
js
ins
daa
lds
sub
xchg
pop
add
push
aaa
mov
out
in
adc
mov
add
mov
add
cmps
mov
sub
repnz
jmp
(bad)
jle
xchg
and
scas
mov
mov
pop
out
xor
cmps
and
ror
add
jno
adc
xchg
adc
mov
or
xor
xchg
xchg
push
xor
sahf
push
xchg
sti
inc
pop
mov
xchg
jp
push
jle
(bad)
add
jl
ins
jns
jecxz
inc
popa
fdiv
cwde
out
sbb
push
out
jp
jmp
push
xchg
mov
mov
sti
sbb
fsub
sbb
inc
sbb
rcl
call
pop
fistp
imul
pop
xchg
jecxz
cli
cmp
sub
xchg
fcom
inc
pop
sti
pushf
xchg
sbb
pushf
inc
add
out
js
(bad)
cld
jmp
sti
and
and
pmaxsw
pushw
icebp
dec
mov
outs
fcom
mov
cmc
test
cmp
imul
pusha
es
fwait
pop
js
xchg
sbb
nop
dec
push
xchg
dec
add
xchg
sbb
sub
mov
pop
mov
inc
pop
jmp
loop
dec
shr
cwde
js
icebp
ret
ds
ja
cdq
lds
pop
mov
pop
and
ret
mov
(bad)
pop
jb
ja
mov
dec
shr
xchg
cmp
(bad)
test
scas
lods
or
jmp
pop
cwde
inc
pusha
mov
loop
adc
mov
add
dec
cdq
rcl
sbb
js
adc
movs
jmp
push
xor
aad
fidiv
jb
xchg
xchg
adc
hlt
out
les
push
int3
dec
hlt
ret
mov
jb
and
cwde
aaa
and
sub
pusha
push
arpl
push
fisub
in
fdivr
(bad)
sbb
test
mov
aad
xchg
adc
sahf
or
fistp
sub
dec
hlt
idiv
jae
int
dec
call
jmp
xor
pop
mov
ja
test
jp
jle
dec
ret
sbb
adc
imul
enter
bound
push
mov
ret
mov
fstp
mov
cs
pop
loop
and
xchg
lock
rol
push
scas
mov
rcl
popa
ret
scas
les
mov
sti
sub
pop
data16
gs
inc
or
outs
inc
movs
or
shl
push
xor
jp
mov
cmps
pop
and
imul
movs
pushf
or
bound
mov
div
test
sub
jne
dec
jmp
jns
mov
push
shr
jle
jae
sbb
(bad)
sub
lahf
push
inc
outs
stc
fisub
xchg
(bad)
dec
or
int
push
jne
(bad)
cmc
cld
xor
cmp
or
fisttp
mov
call
cmps
xchg
push
xor
lods
mov
adc
stos
aam
adc
jl
out
es
and
call
cmp
imul
mov
jne
inc
jno
scas
jecxz
retf
fs
or
aaa
jecxz
xchg
jae
pop
cmps
rcl
sub
aam
(bad)
push
int3
sahf
xchg
pop
cmc
sub
fldcw
mov
add
push
jae
pushf
movs
je
sbb
mov
ins
(bad)
repz
jns
cs
xchg
clc
add
hlt
rcr
js
lods
push
xor
pusha
jnp
push
retf
hlt
jne
ret
inc
push
push
adc
call
push
adc
je
je
scas
ins
clc
xchg
sub
sbb
stos
jl
data16
xchg
arpl
mov
pop
push
fwait
xchg
gs
loope
ror
sub
xchg
in
sub
push
mov
mov
xor
popa
leave
jl
adc
imul
pop
sbb
push
ret
aas
pop
push
jns
ror
mov
inc
fdiv
test
cmps
jb
ja
(bad)
mov
pop
cmp
in
xor
xor
pop
xchg
test
dec
or
mov
gs
in
outs
jae
mov
xchg
jge
mov
jp
xchg
out
into
movs
inc
push
sub
cmc
xchg
jge
cs
sbb
jne
les
xchg
xor
outs
clc
lahf
cmp
sahf
cmps
mov
or
sub
gs
jb
pop
not
popf
mov
(bad)
out
int
mov
lds
and
stos
daa
xor
fcom
int
leave
pop
pop
mov
test
mov
cld
vpcmpeqd
mov
mov
hlt
sub
lds
adc
out
jb
mov
movs
sub
(bad)
(bad)
jl
mov
xchg
sub
lds
jp
into
inc
int3
jne
stos
xor
sbb
dec
and
push
clc
cli
mov
mov
or
sbb
loope
(bad)
ins
jbe
adc
imul
or
and
fisub
sub
mov
ja
push
or
jbe
or
call
leave
sbb
in
mov
push
(bad)
mov
cdq
pop
in
xor
or
jo
rcl
(bad)
jo
pshufw
inc
fistp
mov
pusha
push
mov
retf
or
mov
sub
mov
sbb
imul
push
ins
inc
add
enter
pusha
sbb
pop
les
sub
pop
cld
pop
fldcw
pop
retf
xor
into
sub
xchg
inc
xchg
jp
cmp
gs
jnp
test
jecxz
xchg
mov
push
push
sar
call
jb
sbb
iret
xor
mov
dec
push
loop
pop
sbb
out
in
loopne
dec
add
gs
inc
or
cmp
adc
lds
xchg
ret
xor
jnp
pop
cmp
(bad)
aam
ss
mov
pop
mov
lods
and
cld
mov
aaa
push
dec
test
pop
and
pop
in
sbb
lea
jp
int3
aam
dec
retf
mov
call
call
dec
and
and
push
or
xor
or
int
jl
ficom
fbstp
xor
into
neg
pop
ret
jmp
sti
xor
loope
test
adc
jmp
jmp
xchg
mov
or
cmp
xor
outs
icebp
cmp
jne
pop
(bad)
je
pop
adc
sbb
movs
jmp
fadd
hlt
(bad)
pop
jo
dec
movs
in
bound
jp
adc
outs
mov
xchg
mov
pop
test
pop
adc
push
gs
adc
std
repz
mov
jae
pop
lods
jb
jno
lock
out
dec
xor
push
cmp
(bad)
cmp
inc
cmp
ja
(bad)
cmc
out
cmps
inc
call
pop
std
fistp
rol
cmps
shr
push
push
add
push
push
and
or
push
daa
out
aad
out
cmc
xchg
cmps
fstp
xor
je
jno
imul
popf
and
je
push
and
jo
jg
push
std
fwait
retf
not
out
dec
push
call
mov
jmp
pop
in
cmc
mov
loope
nop
fbstp
xacquire
dec
sub
xor
call
in
sub
hlt
lds
clc
add
test
daa
sbb
cwde
in
out
inc
xchg
std
xor
add
cmc
rcr
jp
sahf
retf
aaa
push
sbb
addr16
out
cld
mov
cli
out
sub
push
outs
add
repz
nop
jns
sar
or
das
mov
mov
stc
sbb
and
gs
jno
js
jbe
pop
dec
xchg
sbb
xchg
jne
das
ja
push
out
ret
and
retf
cs
xlat
add
xchg
call
sti
jns
pusha
outs
stc
mov
dec
jmp
ds
xor
mov
(bad)
cmp
clc
sub
fild
stc
or
mov
sub
in
ret
jb
loopne
sbb
dec
sbb
cmp
and
addr16
jbe
inc
int3
xor
add
push
jg
mov
test
addr16
mov
pop
jo
mov
pop
loop
cmps
cld
je
mov
lods
pushf
jne
sbb
les
in
xchg
or
lods
sub
data16
mov
xchg
sub
fldcw
adc
adc
addr16
sar
add
cmc
sub
(bad)
fcom
out
cld
icebp
out
scas
push
or
repz
ja
jge
or
and
push
fdiv
retf
pop
outs
xchg
inc
sub
mov
mov
xchg
cmp
std
into
add
cmc
pusha
mov
xor
cmp
adc
cmp
out
in
vorpd
mov
push
pop
scas
cli
iret
in
sub
cmp
xchg
imul
cdq
inc
cmp
cmp
sbb
and
jb
dec
test
repz
sub
or
dec
cmp
pusha
xchg
cmp
popf
scas
dec
cmps
hlt
sub
repz
jns
(bad)
cmp
push
mov
mov
jns
call
mov
std
sub
adc
xchg
xor
mov
ret
test
enter
xchg
out
jmp
lods
fs
pop
push
lea
dec
xor
push
or
mov
pop
lods
mov
push
jnp
push
ds
(bad)
ror
cmp
or
dec
cmp
mov
jne
sub
test
fdivr
js
mov
cmp
fnsave
daa
fld
mov
pop
cld
outs
ins
(bad)
stc
test
push
inc
jecxz
js
sub
jmp
hlt
fldcw
mov
mov
dec
(bad)
hlt
cdq
cmp
leave
xchg
out
imul
leave
cwde
neg
loope
fild
sbb
pusha
jge
or
test
fs
ja
icebp
loope
or
jecxz
xchg
sub
dec
(bad)
frstor
sub
(bad)
cli
cmps
or
xchg
mov
or
hlt
out
cs
cli
loop
jne
push
outs
call
mov
les
xor
inc
ret
loope
cdq
add
add
sbb
and
pop
jo
sub
fldcw
jnp
(bad)
dec
outs
xchg
jbe
imul
jb
sbb
es
adc
jae
mov
cmp
movs
enter
sub
sub
mov
push
or
mov
cmp
lea
pop
repnz
stc
cmps
out
into
xor
dec
mov
inc
xor
push
mov
and
and
enter
mov
repz
cmp
dec
cs
inc
repnz
ds
xchg
ds
cmp
jmp
cmp
sbb
and
mov
jl
xchg
push
fmul
movs
loop
mov
push
loopne
sbb
cwde
clc
jmp
inc
fs
lds
adc
pop
xor
jmp
push
jns
(bad)
push
shr
mov
outs
ds
ss
sti
push
push
cmp
es
mov
or
test
in
xchg
adc
cs
jp
push
(bad)
ja
xchg
mov
jb
cld
nop
aad
mov
retf
js
loop
inc
js
xchg
jns
mov
xchg
lods
adc
in
int
div
mov
xor
addr16
xlat
pop
jae
gs
push
jne
inc
in
xor
pop
sbb
arpl
test
pop
out
inc
fsub
vmulsd
sub
movs
lods
or
inc
lahf
cwde
pop
sbb
iret
pop
adc
xor
mov
gs
(bad)
imul
push
mov
mov
mov
xlat
jecxz
pop
mov
mov
leave
or
faddp
jne
fstp
rcr
jp
fcom
rol
pushf
jmp
mov
push
mov
cmp
sti
jp
mov
xor
xor
push
mov
dec
je
mov
push
test
adc
rcr
icebp
stos
popa
lea
or
loop
dec
std
cmp
mov
rol
push
(bad)
mov
inc
dec
popa
sub
mov
xchg
push
fcom
cwde
daa
sub
xor
std
aam
shl
lock
test
dec
into
push
sub
dec
sub
mov
sbb
push
xchg
aad
icebp
add
inc
test
xor
ror
imul
mov
cdq
or
repnz
and
sub
dec
(bad)
imul
mov
mov
pop
dec
xor
mov
jo
and
hlt
fsub
xor
sbb
add
and
mov
dec
sub
pushf
pop
mov
sub
nop
movs
jne
lahf
adc
jne
fs
add
stos
sti
int
jae
fsubr
xor
or
xchg
int3
cmps
mov
mov
and
je
int3
and
push
in
(bad)
cmp
add
jne
push
rcl
add
aas
cmps
push
jmp
mov
aas
in
push
call
pushf
mov
jb
inc
das
sub
(bad)
imul
push
inc
pop
adc
pop
inc
loop
stc
in
mov
aad
cmp
ins
mov
outs
ja
shr
mov
in
jmp
aad
ins
cmp
pusha
jo
push
push
jg
jne
sub
pop
cli
in
aaa
dec
neg
jl
jne
mov
ficomp
ins
shr
ret
push
sti
fcom
in
dec
repnz
leave
jbe
push
fwait
stc
xor
add
repnz
inc
in
xchg
imul
push
xor
sbb
xor
dec
stc
adc
jmp
xor
dec
les
fisubr
push
in
call
call
cmp
outs
pop
(bad)
std
out
fnstenv
mov
lods
xchg
jbe
cdq
aas
sub
push
push
dec
loopne
neg
xor
jo
outs
nop
mov
(bad)
and
push
and
int3
out
lahf
cmp
xchg
pop
mov
mov
pop
or
and
jmp
jne
scas
fnstcw
mov
cmc
sub
mov
mov
out
adc
cmp
data16
daa
and
add
hlt
cmps
xchg
pusha
sbb
js
aam
in
xor
cmc
push
es
cmp
xchg
jmp
das
aas
in
pop
adc
fisttp
ins
xchg
adc
push
xchg
pushf
xchg
adc
lds
inc
shr
mov
dec
sub
add
or
les
xor
outs
jne
cli
add
fidivr
adc
lock
dec
fs
xor
jne
mov
ins
and
pop
mov
cmc
xor
cmp
stos
jmp
inc
stc
mov
out
xchg
cmp
lea
dec
xor
sbb
sub
lahf
sar
sub
in
cmp
mov
fwait
ins
jne
(bad)
in
jle
push
or
pop
inc
sub
outs
inc
jne
popf
lods
mov
sti
dec
or
imul
dec
leave
(bad)
lds
jmp
aas
in
ficomp
into
arpl
push
cdq
and
mov
xchg
sahf
add
(bad)
in
push
pop
mov
jecxz
dec
mov
mov
stos
clc
cld
(bad)
fdivr
ror
jo
sti
outs
jp
jb
xchg
inc
movs
jl
mov
add
icebp
les
mov
fnstsw
xchg
(bad)
add
sub
jmp
add
jg
xor
pop
call
gs
pop
mov
outs
stos
pop
fsubr
dec
xor
call
fdivr
test
and
enter
inc
or
xchg
and
sub
pop
and
stos
mov
pop
ror
sub
mov
xchg
mov
cli
pop
or
xchg
cld
cli
jmp
pop
icebp
stos
mov
ss
mov
jns
mov
outs
loope
jp
cmc
push
cmps
mov
ret
mov
xchg
inc
sahf
pop
xchg
push
xor
das
dec
test
daa
cld
icebp
push
shl
jmp
test
in
xchg
pop
dec
sar
in
jb
cmps
xlat
js
div
and
js
push
cmp
pusha
inc
dec
rcl
jo
imul
dec
in
cld
dec
jp
jle
rol
push
mov
adc
ins
push
pop
cmc
in
xchg
push
pop
rcl
shl
inc
pop
sbb
or
call
mov
sub
cmc
es
test
(bad)
jne
push
jnp
xor
ins
lods
icebp
adc
cmps
pop
fsubr
in
inc
fsubr
push
repz
jmp
out
dec
hlt
rcr
xor
ins
xchg
movs
dec
add
pop
(bad)
cmps
stc
or
js
pop
sub
scas
imul
stos
mov
dec
pop
push
push
push
and
inc
ja
adc
or
mov
pusha
inc
out
ret
jg
ret
cmp
in
jmp
xor
xchg
xchg
movs
jne
or
jmp
cld
mov
sub
aad
rol
fidivr
mov
jns
ds
mov
mov
shl
movs
sbb
aad
cmp
imul
jbe
mov
icebp
rcr
stos
nop
mov
call
stc
xlat
pushf
enter
movs
daa
cmp
push
shl
cdq
xchg
xchg
pop
push
and
daa
mov
pop
mov
and
push
mov
or
pop
test
mov
sub
fsub
mov
cmp
mov
outs
cwde
jns
mov
mov
idiv
jb
pop
dec
jnp
mov
dec
in
dec
sub
loop
and
fimul
mov
das
sbb
mov
push
(bad)
scas
cli
sub
cld
movs
push
adc
mov
lods
ret
inc
(bad)
rol
js
test
les
push
jns
fisubr
inc
je
adc
and
dec
aas
inc
pushf
icebp
jo
jae
adc
in
mov
adc
cmps
sub
push
je
mov
sub
cwde
mov
mov
cmp
lahf
fistp
sub
arpl
inc
cs
push
repnz
and
ds
std
push
add
jl
in
jmp
push
cmc
jl
adc
push
loope
shl
adc
lea
icebp
cld
and
call
pop
jae
popf
sbb
cdq
and
mov
push
xchg
sar
mov
xor
pop
stos
mov
sub
lds
mov
or
jnp
test
ja
les
jnp
xchg
repnz
je
out
xchg
test
sub
xchg
pop
jge
adc
or
push
aas
cmc
jae
iret
shl
cmp
lock
test
in
adc
vpsrlvq
xor
jnp
adc
emms
dec
cdq
cmp
jl
ret
sub
cmp
cmp
jmp
pop
mov
cs
mov
loope
xor
repz
mov
rol
fdivr
xchg
push
and
sbb
(bad)
or
cmps
imul
pop
jo
jns
shr
fcom
xchg
lahf
dec
xor
das
ja
cmp
repz
inc
sbb
fadd
ds
ficom
mov
or
test
loop
jne
bound
mov
popa
stos
cmp
and
jle
jge
enter
dec
scas
push
jge
mov
dec
in
nop
test
or
xchg
adc
lods
add
mov
popa
cli
mov
lea
adc
cmp
retf
inc
mov
add
add
scas
fcomp
cmp
mov
add
add
cmps
mov
(bad)
dec
jecxz
int3
fsubr
mov
shl
imul
shr
addr16
sub
repz
je
js
sar
ins
cld
jge
inc
jbe
xchg
push
hlt
sbb
popa
jb
out
fimul
push
stc
fistp
xor
add
pop
icebp
cld
sbb
mov
pop
lea
ins
cmps
ins
pop
js
dec
and
outs
mov
jo
js
xchg
ficom
lock
xchg
cmp
sti
and
ficomp
pop
push
retf
xchg
pusha
push
outs
je
ss
adc
pop
fwait
adc
aas
sbb
leave
and
mov
shl
call
cli
sbb
inc
xchg
pop
and
addr16
add
ror
and
pop
aas
imul
ret
xor
pop
adc
pop
je
adc
sub
outs
(bad)
push
jp
dec
jb
pop
xor
sub
and
and
fidiv
xchg
call
xor
cwde
in
aas
sbb
jno
clc
mov
pop
inc
inc
mov
out
pushf
adc
gs
aad
and
cli
js
jno
cmp
cld
pop
aaa
pop
mov
add
mov
jbe
mov
icebp
adc
movs
push
imul
leave
jae
jge
aas
fstp
ja
jo
cmp
xchg
sub
out
cmp
jge
or
fiadd
jne
test
movs
pop
cdq
fmul
xor
sti
cmc
jns
cli
inc
mov
jmp
sahf
dec
imul
xchg
repz
push
movs
pop
or
fxtract
stos
xor
sti
mov
je
movs
loopne
ja
push
cmp
repz
mov
(bad)
icebp
pushf
(bad)
mov
pop
ret
dec
ins
addr16
mov
daa
invd
sub
cwde
dec
gs
cld
fistp
fidiv
outs
dec
dec
fnsave
adc
(bad)
outs
adc
scas
mov
cmc
push
jae
addr16
test
push
js
inc
lock
add
cmp
imul
push
cmc
pushf
js
mov
cmp
push
imul
mov
adc
sub
push
into
icebp
(bad)
and
xor
ret
ss
bound
cli
outs
sub
pusha
mov
dec
xchg
imul
sahf
jae
int
(bad)
lock
sbb
in
loope
shl
dec
jge
fwait
push
into
icebp
addr16
or
in
inc
push
jae
xchg
sar
jo
and
(bad)
pop
addr16
retf
xchg
xor
(bad)
sar
push
adc
in
mov
aas
repz
fldcw
lea
pop
cmp
add
jae
ja
test
fnstenv
jge
popf
je
adc
call
pop
pop
jge
outs
sub
aad
cmp
int
inc
cdq
pop
xor
call
sub
dec
inc
shr
push
ret
dec
es
(bad)
addr16
retf
pop
mov
dec
lds
lea
xchg
push
mov
mov
add
int3
sub
sti
ret
sbb
(bad)
aad
cli
xchg
adc
in
xlat
in
sbb
mov
jmp
push
jns
and
mov
pop
mov
sub
adc
push
pop
jb
xsha256
cmps
nop
mov
xchg
dec
sub
movs
sub
xor
sub
mov
sub
jae
ret
sar
and
jmp
pop
cld
inc
rcr
fs
sub
or
sbb
sar
jo
mov
add
mov
xor
popa
mov
mov
cdq
pop
and
push
dec
mov
add
xchg
push
xor
shr
in
xchg
jmp
or
push
out
cmp
pop
xor
aas
stos
sub
pop
jno
out
add
push
retf
stc
jo
stc
fistp
push
xchg
add
stc
stc
inc
pcmpeqw
jmp
or
add
xor
repz
loopne
or
fadd
add
movs
into
push
jb
dec
pusha
sahf
mov
(bad)
sub
(bad)
jnp
in
inc
dec
aas
xor
sub
stc
popf
sub
repnz
aas
ss
fmul
ds
dec
rol
dec
retf
cmp
sti
jns
cmp
push
loop
mov
in
aas
leave
adc
popa
nop
repnz
inc
in
ss
ds
dec
call
adc
data16
lea
js
scas
inc
iret
jp
scas
out
movs
push
out
or
fldcw
push
je
dec
cmps
xor
lock
pop
aam
jmp
pop
js
push
jle
inc
test
dec
dec
cmc
cmp
shr
mov
mov
and
hlt
retf
or
(bad)
push
xor
loopne
outs
mov
enter
jns
inc
test
cmp
sub
dec
and
pop
(bad)
ss
cmp
mov
add
fld
stos
xor
jmp
div
xchg
ins
xchg
mov
xchg
push
adc
jp
sub
std
aaa
(bad)
pop
ins
pmuludq
retf
pop
loopne
mov
mov
and
loop
add
xor
xchg
test
mov
cmps
push
cmp
inc
nop
test
jne
push
sub
jmp
aad
xor
jo
sub
sub
pop
mov
call
js
int3
sbb
lods
test
cmc
je
cld
push
pusha
and
stos
jae
(bad)
jae
sub
mov
cwde
pushf
test
mov
xchg
cs
sub
push
scas
or
cmp
jae
cmc
xchg
sub
push
xor
mov
and
xchg
lds
and
sar
pop
fs
fiadd
rol
mov
dec
pop
cmp
jp
sbb
cli
out
stc
dec
mov
jnp
adc
fsub
out
and
cmps
aaa
or
aam
push
test
mov
dec
cmp
pop
mov
cld
jmp
shl
fdivr
cmc
push
out
jns
sub
dec
push
stc
(bad)
cmc
mov
bound
hlt
mov
cmps
sbb
or
leave
ret
sbb
js
pop
pusha
loope
pop
ds
mov
xor
in
inc
jo
ficom
dec
pop
js
test
icebp
sar
mov
stos
xor
dec
loop
std
fbstp
and
push
arpl
cmps
mov
lock
jle
xor
repnz
pop
pusha
mov
xor
test
mov
adc
int3
push
mov
mov
xor
jmp
mov
xor
in
dec
neg
sub
pop
mov
aam
rcl
inc
addr16
outs
jb
cmp
inc
jns
nop
jns
add
sub
pop
push
pop
dec
xlat
mov
pop
push
inc
pop
mov
nop
jl
dec
jmp
leave
xor
jmp
push
pop
retf
cmps
outs
pop
cmc
xchg
and
jl
shr
cmp
cli
mov
sub
outs
or
lahf
inc
lods
movs
sbb
aad
stos
push
jle
push
dec
jnp
das
rcr
cmps
push
sub
loope
pushf
imul
test
inc
push
pop
lock
jmp
(bad)
cmc
into
xor
push
fidiv
inc
mov
mov
icebp
pusha
jnp
jns
inc
and
fidiv
jl
xchg
mov
sbb
test
pop
aam
pushf
inc
pushf
adc
xor
xchg
or
mov
mov
in
pop
in
pop
popa
mov
jo
sub
lds
xchg
jae
rol
gs
jmp
adc
mov
jo
mov
stos
int
aas
repz
xchg
cmp
mov
xor
stos
arpl
std
mov
xchg
jbe
movs
sbb
xchg
xor
dec
repz
sbb
das
rcr
out
pop
popf
outs
push
hlt
in
jmp
adc
mov
mov
into
jo
repnz
adc
push
(bad)
addr16
movs
cwde
push
inc
dec
inc
pop
movs
push
fidiv
push
xchg
je
aaa
push
jae
pcmpgtb
retf
pop
imul
out
sbb
pop
dec
popa
arpl
mov
jge
mov
xchg
repz
stc
arpl
pop
jns
and
cmp
mov
and
rcl
mov
sbb
in
(bad)
lods
das
xchg
dec
xchg
stc
mov
jae
test
in
ds
arpl
cmc
xor
push
(bad)
loop
mov
das
cmps
push
stc
jmp
pop
xchg
mov
xchg
sbb
stos
inc
int
xchg
jns
jns
repz
js
mov
sbb
mov
cld
cmps
les
cmp
pop
data16
mov
adc
(bad)
and
jl
jmp
jo
and
sbb
mov
jae
(bad)
sti
gs
jae
mov
fmul
adc
and
jl
jbe
fcom
cmp
ins
mov
js
imul
ficomp
pop
push
xchg
addr16
adc
cmp
je
dec
jge
sub
js
rcr
aaa
cmp
jb
xor
js
(bad)
popw
ja
mov
iret
stc
jb
std
xor
pop
retf
mov
pop
cmp
jae
jge
cmp
repnz
lods
mov
mov
add
std
push
fwait
xlat
cmp
jo
xor
push
sbb
stos
jb
cli
stos
xchg
pusha
mov
fwait
test
call
xchg
sbb
or
and
mov
jge
push
lock
sub
jecxz
push
arpl
ret
adc
sbb
fwait
jo
in
ffreep
adc
js
dec
bound
repnz
iret
repnz
mov
cdq
pop
hlt
rcr
mov
call
lods
xor
pop
es
int3
push
push
data16
push
ins
imul
adc
mov
mov
mov
dec
daa
fistp
xchg
xchg
mov
dec
outs
add
pushf
pop
je
dec
lds
mov
imul
idiv
into
les
xchg
es
in
dec
outs
inc
xchg
enter
clc
xor
(bad)
pop
jl
addr16
dec
xor
jo
shl
sub
cmc
movs
push
add
xchg
imul
test
pop
push
call
mov
lds
popa
lock
mov
fmulp
push
hlt
pop
xchg
push
xor
jne
jnp
lods
jns
sub
jnp
popf
inc
cmps
or
lds
pushf
std
mov
jae
push
pop
adc
movs
shl
les
mov
cmc
mov
(bad)
ficomp
xchg
pushf
or
aam
jmp
out
ja
shl
sub
dec
inc
xor
mov
mov
cmp
mov
rcr
sbb
pop
aad
les
push
and
push
xor
ret
jg
xchg
xor
pop
pop
inc
xchg
sbb
push
jae
xchg
push
fwait
mov
xchg
inc
sbb
jo
inc
xchg
jge
aad
push
cdq
lods
cld
cmp
adc
cli
sub
pop
push
xchg
movs
push
(bad)
icebp
inc
mov
popf
mov
sub
jp
sub
add
out
sbb
aam
out
clc
shr
push
xor
dec
sub
pop
pop
outs
into
xchg
push
cmc
outs
es
jne
fnstenv
dec
pop
jae
sahf
out
mov
into
(bad)
push
jle
mov
or
xchg
call
mov
sub
add
hlt
ror
call
repz
push
outs
in
xchg
push
ret
sahf
adc
dec
popf
fisubr
or
jmp
cli
jno
aam
push
daa
push
stc
outs
repz
sbb
int3
mov
push
js
mov
cld
loope
jo
cli
push
jmp
xchg
sbb
xchg
shl
xchg
add
stc
aam
out
or
xchg
jecxz
dec
sub
jns
or
xchg
sbb
cmps
xchg
pop
cdq
sti
inc
and
hlt
xchg
fwait
mov
sbb
mov
sub
in
out
ret
mov
mov
stos
mov
test
pop
je
cmp
xchg
fnstcw
in
xchg
in
push
jno
add
fist
out
fwait
xchg
mov
inc
jmp
jb
in
jge
and
jle
pop
ret
mov
test
xchg
pop
push
dec
adc
clc
dec
dec
clc
or
sub
jle
xchg
pushf
jle
popf
xor
jo
in
fldenv
pop
mov
mov
test
test
mov
or
push
xor
push
adc
jo
call
and
xchg
add
cmp
cs
bound
in
sti
iret
cmp
imul
push
mov
mov
cs
xchg
add
lds
add
push
out
sti
test
xchg
pop
shl
int
adc
xchg
push
jmp
icebp
int
pop
dec
sub
sub
ss
sub
jo
dec
or
ja
dec
jns
jbe
inc
xor
xchg
push
movs
retf
hlt
or
inc
shl
cmp
mov
cmp
sub
pop
enter
in
hlt
test
push
mov
or
add
xchg
xchg
sbb
test
dec
cmps
arpl
sub
nop
gs
ret
sar
push
sahf
jne
(bad)
and
addr16
xchg
xchg
fisubr
cli
les
sub
int3
popa
(bad)
and
fldenv
popa
mov
jmp
sar
jo
push
jne
mov
adc
imul
xchg
ja
sub
(bad)
jecxz
lea
pop
pusha
mov
call
inc
hlt
call
(bad)
sub
(bad)
mov
cdq
sub
jnp
sbb
mov
sub
xchg
and
jp
inc
sub
sub
xor
xor
mov
push
cmc
jnp
push
xchg
call
shl
jmp
add
jns
xchg
adc
fnsave
movs
jns
xchg
shl
jno
imul
imul
sub
icebp
out
add
fmul
pop
shr
cmp
clc
or
iret
xor
adc
into
and
cmp
cld
stos
scas
jns
mov
nop
push
jne
mov
clc
pop
aam
dec
pop
mov
pop
mov
sar
push
push
ret
jne
xor
cli
xlat
jns
sub
ficom
lock
fst
mov
dec
push
mov
mov
jne
fs
loop
xor
loope
jae
in
mov
jae
retf
sbb
imul
jp
ret
ss
hlt
enter
inc
aas
ins
ret
add
repz
sub
pop
shl
xor
dec
rcr
ret
adc
loope
bound
imul
(bad)
jp
test
xchg
adc
jno
lahf
inc
das
mov
aam
dec
js
arpl
and
pusha
mov
out
(bad)
jmp
push
sub
pop
hlt
test
ins
jmp
jmp
repnz
or
fdiv
iret
cmp
lods
cs
cmp
pop
fld
dec
push
cli
mov
push
mov
sbb
mov
es
repz
in
sbb
les
jns
xlat
mov
js
scas
loop
jne
les
enter
jnp
ret
stc
pop
retf
adc
mov
(bad)
mov
fldcw
xchg
mov
jle
adc
cmps
jp
pop
mov
jne
stos
mov
push
cmp
mov
ins
push
(bad)
sub
gs
loopne
rcl
inc
and
sar
aas
sbb
push
data16
push
pop
sbb
xchg
dec
xor
dec
xor
xchg
jb
fs
outs
scas
call
inc
cmp
daa
js
inc
fist
std
pop
xchg
stos
(bad)
mov
cmc
cmc
sub
xor
push
popf
and
pop
cli
mov
mov
inc
xor
push
and
xlat
jne
adc
sub
ss
push
xchg
mov
rol
jne
aad
and
imul
xor
stos
(bad)
and
xchg
cmps
sub
out
das
cmp
inc
push
push
rol
sub
mov
xchg
popf
sub
xchg
bound
test
xor
lds
cmps
mov
and
inc
ss
dec
add
sar
sub
stos
ret
jle
push
pop
adc
or
or
jl
data16
sbb
test
jp
sub
leave
xchg
scas
lea
cmps
xchg
icebp
add
dec
out
lahf
out
(bad)
inc
dec
stos
pusha
fidiv
push
or
mov
sub
xchg
and
add
pop
mov
gs
inc
push
das
xor
sbb
push
test
repz
sub
and
add
mov
inc
jne
jecxz
js
dec
sbb
lods
repnz
add
pop
adc
movs
jbe
mov
ins
mov
pop
push
stos
int3
mov
icebp
pop
lds
xor
sbb
cmps
pop
or
data16
mov
ss
cld
rol
push
lock
or
sub
test
enter
adc
cmp
dec
xchg
inc
sub
cwde
pop
mov
mov
dec
ins
aam
scas
(bad)
pop
inc
sub
mov
out
xor
jmp
and
fwait
and
pushf
lods
dec
and
and
push
aam
in
mov
pop
cmps
cmp
stos
shr
jo
push
and
imul
cmp
xor
shr
(bad)
hlt
iret
adc
cmp
gs
mov
(bad)
in
aam
ret
mov
icebp
les
repz
movs
xchg
das
aad
test
xchg
es
and
xchg
mov
in
add
out
dec
ret
inc
cdq
mov
xchg
aas
xchg
bound
in
or
pop
pop
and
sbb
mov
xor
dec
push
xor
adc
sar
dec
repz
pushf
mov
in
dec
dec
out
cs
and
mov
mov
lea
push
les
pop
fs
mov
test
jg
push
pop
jmp
test
shr
or
or
div
jecxz
adc
push
test
xchg
cmp
mov
js
jl
pop
mov
stos
std
mov
in
call
mov
dec
mov
or
loop
add
in
xor
or
aaa
cmp
mov
lds
pop
jnp
retf
push
xchg
in
inc
mov
xchg
addr16
mov
int
cmp
lods
mov
add
fidivr
cdq
out
sub
jle
or
test
ret
inc
hlt
mov
mov
sub
or
shr
movs
popa
ds
test
push
jb
xchg
call
mov
cmp
jmp
pop
in
adc
in
sub
pop
sti
arpl
pop
sbb
(bad)
and
xor
aad
push
xchg
int3
mov
lods
pushf
mov
jns
cmc
enter
xchg
iret
sbb
inc
std
push
push
int3
xlat
cmp
push
push
pop
aam
std
test
std
std
jo
pop
pop
bnd
mov
sbb
adc
dec
mov
fld
mov
xor
(bad)
mov
cld
clc
mov
fwait
movs
js
pop
mov
jg
pushf
aaa
lea
in
cld
icebp
loop
cdq
xchg
repnz
sub
add
mov
cwde
ja
push
jb
jl
adc
mov
js
pop
jmp
xor
sbb
(bad)
repnz
mov
(bad)
loop
jne
les
inc
sub
movs
cmp
mov
sbb
int3
lock
fild
add
in
mov
mov
neg
test
pop
dec
push
call
test
cli
pop
ret
(bad)
cmp
jecxz
and
mov
(bad)
shl
ret
adc
cli
std
rcr
cmp
js
push
and
jo
je
cmp
fmul
in
lds
arpl
sub
push
dec
inc
jne
mov
adc
pop
repz
xor
sub
js
lahf
test
imul
cmp
fs
jecxz
fmul
cld
shr
or
mov
iret
cmp
fcmovu
cmp
loopne
xlat
aad
pop
test
fldenv
out
not
cmc
inc
pushf
int
and
xor
jbe
shl
mov
adc
dec
inc
repz
cdq
jo
ret
xor
jmp
xchg
sbb
stos
hlt
jge
jae
fild
sub
jnp
shl
push
call
pop
and
test
mov
inc
mov
dec
mov
inc
and
fldpi
pop
nop
xchg
pop
jo
popa
pop
sbb
jae
loopne
into
int3
inc
fs
test
jae
jno
lods
jno
push
fld1
mov
iret
mov
idiv
pop
ret
fs
mov
popf
outs
jb
inc
in
inc
stos
pop
xor
jbe
scas
pop
push
dec
sbb
pop
adc
sub
and
push
add
cmp
push
ins
push
pop
mov
sar
mov
adc
inc
sub
xchg
sbb
(bad)
movs
test
fist
xchg
pop
cdq
push
aaa
jne
or
mov
pusha
cmc
lock
push
pop
cmps
xor
aaa
ret
test
inc
adc
pop
add
ret
sub
cmp
xor
fcomp
xchg
push
dec
jno
ds
mov
adc
pusha
push
repz
in
out
adc
loopne
mov
add
leave
pop
je
inc
jnp
inc
repnz
loope
xchg
add
addr16
mov
adc
imul
mov
icebp
jne
adc
and
push
out
ja
add
jmp
xor
mov
mov
shr
outs
push
mov
mov
jecxz
retf
push
push
retf
in
and
pop
xor
in
pop
mov
and
lock
inc
xchg
jb
add
pushf
call
pop
ror
mov
je
div
aas
mov
cmp
cmp
pop
fbstp
mov
out
ins
outs
call
xor
add
sbb
jp
cmp
jmp
pop
dec
jg
push
cs
push
popf
std
adc
stc
rol
dec
and
mov
xchg
jecxz
pop
js
push
push
fsubp
call
imul
in
cmp
lods
adc
jmp
pop
(bad)
xor
jecxz
stos
stos
sbb
pop
mov
pushf
sub
(bad)
cwde
or
adc
imul
pop
push
dec
mov
dec
xor
add
inc
call
dec
cmp
in
loopne
mov
outs
scas
cdq
retf
cmp
(bad)
xchg
cmp
enter
xor
sbb
and
cli
xchg
push
cmps
lahf
pop
(bad)
mov
jae
mov
pop
or
das
sbb
clc
xchg
pop
cmovl
mov
pop
xchg
push
call
mov
mov
cmp
iret
fs
sahf
in
cmps
sahf
(bad)
mov
out
mov
cmp
or
cld
xor
cwde
jecxz
sbb
cmps
add
jp
jmp
in
adc
jo
call
and
loopne
jmp
jnp
pusha
cmp
ja
loop
jp
fldenv
outs
out
sub
div
movs
inc
aaa
js
xchg
add
shl
aad
mov
dec
xlat
retf
push
pop
mov
das
sub
outs
xor
jl
dec
ja
mov
outs
out
hlt
test
stc
cmps
das
jp
xor
loopne
adc
mov
xchg
int
push
xchg
mov
sub
repz
js
mov
(bad)
cmp
inc
jne
lods
sti
xlat
jle
cwde
jns
sub
ret
bound
ret
lods
les
daa
loopne
in
(bad)
xor
inc
adc
xor
call
sbb
xor
xchg
push
cdq
push
aad
icebp
sti
cmps
and
and
and
(bad)
pop
je
pop
fwait
mov
mov
jecxz
xchg
mov
int3
ret
ror
pop
push
repnz
leave
aaa
dec
cld
sbb
cmc
mov
dec
mov
sub
ja
daa
sbb
int
mov
xor
daa
mov
les
sub
jb
inc
mov
xor
(bad)
push
hlt
or
test
mov
in
inc
cld
push
push
rcr
jo
add
xchg
(bad)
in
mov
or
test
cmp
nop
pop
xlat
idiv
adc
cmps
jb
sub
into
cli
xchg
data16
ins
rcl
pop
lock
jae
mov
dec
sub
(bad)
lods
push
jge
and
push
lds
loope
in
jbe
loop
jo
ret
jl
mov
les
sub
add
dec
test
jl
xor
shl
jl
arpl
xor
mov
out
sub
aas
mov
xor
data16
sbb
add
sbb
mov
fcomp
and
jns
or
add
loopne
or
cli
int
cmp
sub
or
retf
or
ins
pop
lock
test
xchg
sbb
sub
das
xor
pop
push
sar
xor
xchg
jae
pop
fimul
rcl
cmp
xor
mov
cmc
push
xor
test
dec
inc
rcr
or
xchg
xor
cmc
push
pop
mov
xor
cmp
pop
jl
and
repz
add
xor
das
fsub
xchg
ins
rol
pop
int
ss
jge
loope
jecxz
xchg
xor
mov
sub
mov
jp
ins
or
dec
jge
ds
retf
jne
or
sbb
xor
pusha
push
adc
mov
jge
das
cdq
imul
scas
lock
sbb
mov
aaa
into
push
cmc
lods
cmp
pop
movs
enter
push
call
ins
xchg
add
daa
pop
cmp
xchg
pop
cli
mov
gs
dec
in
adc
loope
cld
push
ret
sub
mov
add
mov
jecxz
iret
clc
inc
xchg
call
inc
mov
mov
adc
in
add
ss
xor
xchg
push
(bad)
test
mov
icebp
int3
add
in
jmp
sub
cld
leave
push
repz
adc
in
bnd
inc
pop
fs
mov
jb
jns
not
dec
or
dec
sub
push
adc
mov
jns
stc
dec
cwde
jp
(bad)
cmp
pop
sbb
push
movs
cmp
xor
jae
mov
call
jmp
and
cmc
stos
pop
mov
and
xor
pop
rcr
xchg
ficom
lods
xor
(bad)
(bad)
jmp
mov
adc
ja
xchg
out
std
add
xchg
push
shl
in
mov
dec
ins
scas
push
pop
sub
mov
hlt
mov
fimul
lds
or
call
pop
stos
dec
xchg
add
out
retf
in
jbe
xor
stc
popf
xchg
pop
jae
movs
test
push
mov
das
lahf
ins
dec
aam
pop
xchg
sub
xchg
jns
rcl
into
pop
xor
inc
cmps
push
xor
call
or
(bad)
stos
inc
xchg
inc
mov
nop
cmp
outs
test
fist
ret
mov
xchg
inc
in
imul
outs
jg
fst
(bad)
jle
das
(bad)
es
sub
mov
ret
xor
and
stos
cmp
dec
pop
mov
cwde
xchg
sti
pop
(bad)
adc
cmp
retf
sbb
stc
mov
sub
add
cmp
adc
imul
adc
xchg
into
sub
mov
jns
ja
mov
lea
xchg
adc
dec
push
sbb
push
ficom
fild
add
(bad)
popf
sbb
jle
ret
pop
mov
push
cmps
into
cwd
jne
into
mov
dec
jl
in
(bad)
fnsave
push
ret
int
sub
jne
xchg
xchg
cmp
out
jp
mov
sub
loopne
mov
jns
neg
fld
shl
jns
sbb
pop
push
push
rcl
mov
jmp
mov
xchg
sar
push
cmp
cmp
ds
mov
and
sub
inc
sahf
(bad)
cmp
xlat
jmp
jmp
cld
sete
sub
call
dec
fidivr
sbb
outs
test
lods
cmps
mov
fimul
out
xchg
dec
shl
dec
adc
out
iret
push
(bad)
std
pop
jo
xchg
mov
dec
minps
rol
and
sub
ss
xchg
add
xchg
or
and
(bad)
cld
mov
pop
test
aam
cmc
out
sbb
repnz
adc
int
rcl
js
(bad)
shl
call
add
clc
xor
js
push
ins
push
sbb
retf
xchg
out
imul
xchg
rol
cmc
js
jae
sub
mov
or
adc
push
jne
pop
dec
jge
jo
mov
in
and
arpl
dec
mov
pop
das
xor
cli
push
cmc
xchg
sbb
mov
outs
cs
sahf
out
pop
and
xchg
lds
mov
jnp
fstp
cmp
or
ja
push
addr16
xchg
(bad)
js
rol
hlt
or
pop
(bad)
inc
mov
loopne
sbb
(bad)
out
retf
push
daa
ins
ror
mov
fidivr
outs
scas
aas
mov
arpl
adc
xor
call
scas
pop
out
aam
pop
rep
push
mov
xchg
sub
jecxz
jne
fstp
or
xor
sbb
test
movs
ret
popf
fs
retf
movs
rcl
push
aad
or
lods
push
movs
test
popa
pushf
(bad)
in
arpl
sti
xchg
sub
cmps
and
rcl
mov
cmp
sub
aam
add
shr
inc
fisub
fcmovb
sti
add
push
xor
mov
dec
cdq
push
(bad)
jp
pop
outs
je
mov
jns
jmp
mov
push
inc
ret
push
cmp
add
jp
xor
sub
cmps
xchg
data16
les
out
sbb
dec
out
cmp
sub
push
adc
add
and
xor
dec
bound
add
xor
cld
pusha
sub
inc
push
adc
ss
std
test
xlat
mov
repz
outs
adc
jns
icebp
xchg
popf
idiv
shr
cli
jb
jp
ror
lea
jbe
push
dec
leave
test
in
cmp
dec
sbb
mov
pop
sub
in
mov
mov
mov
inc
and
push
xchg
push
push
call
xor
jmp
outs
div
(bad)
jle
sahf
inc
xor
pop
outs
sbb
jo
pop
les
inc
xchg
add
push
in
sbb
into
sub
push
xchg
xor
dec
dec
sub
push
out
aad
not
sbb
jb
cmp
std
push
popa
cmc
movs
in
cld
js
gs
int3
cs
xor
cmp
and
cdq
dec
lods
sub
hlt
cmp
clc
dec
cmp
dec
mov
out
in
push
cld
popa
jmp
cmp
mov
ja
xchg
fidivr
lahf
sub
loop
xchg
adc
mov
retf
push
pop
mov
sbb
mov
xor
mov
ds
or
cmp
fwait
hlt
bound
pushf
cmps
mov
xor
pop
jns
cld
out
xchg
xor
bswap
and
push
adc
movs
data16
out
mov
push
in
js
xchg
add
jb
loope
push
lock
dec
mov
fstp
jae
lods
mov
pusha
in
test
cmps
loope
push
clc
inc
dec
es
pushf
sbb
outs
test
mov
adc
cmp
je
pop
xor
mov
mov
imul
inc
jp
aas
pop
adc
aaa
popa
in
xlat
and
mov
sbb
mov
add
cmps
(bad)
jmp
sbb
pop
lds
xchg
add
add
jae
mov
pop
ds
inc
in
mov
les
popa
dec
lods
xor
lds
sar
lahf
jp
sbb
sbb
fidivr
aas
fcomp
pop
and
lahf
and
push
push
pop
xchg
adc
mov
cmp
(bad)
(bad)
xlat
jns
mov
jae
mov
xor
stos
jg
out
out
mov
jle
mov
movs
push
ffreep
or
sbb
inc
add
mov
hlt
(bad)
xchg
rol
stos
xchg
cmp
pop
ror
or
or
fnsave
imul
inc
xchg
push
mov
jle
xlat
hlt
cmp
out
fs
xchg
out
jbe
cmp
mov
xchg
out
xchg
cmp
jns
leave
jp
jecxz
repnz
push
aas
mov
mov
dec
pop
sar
stc
mov
xchg
out
jo
hlt
and
out
mov
jmp
jns
into
imul
cmp
sti
dec
cmc
push
mov
les
jb
cs
mov
cmp
sub
fldcw
cmc
ror
aaa
ret
(bad)
sbb
ficom
or
dec
cs
push
hlt
lds
lods
xchg
mov
test
and
and
jp
fldcw
mov
mov
mov
pop
cli
mov
outs
cmps
cmp
and
xchg
mov
sub
and
ret
and
jge
mov
cld
xor
inc
pop
xchg
mov
pop
ja
add
dec
mul
sbb
xlat
inc
sbb
out
icebp
push
cmp
repz
or
sbb
js
xchg
sbb
xor
jge
sub
js
daa
sbb
cld
cmp
push
mov
sub
call
lock
xchg
test
pop
and
movs
adc
fisubr
jae
movs
outs
jmp
out
sub
ret
mov
adc
jg
inc
or
sub
dec
adc
cmc
(bad)
test
mov
sbb
call
dec
push
push
lods
(bad)
jnp
adc
pushf
sahf
dec
xchg
push
add
lods
dec
fild
pop
out
mov
mov
jecxz
hlt
jle
jbe
and
jnp
add
je
fndisi(8087
rcl
xchg
add
inc
les
aas
pop
not
sbb
lea
test
jns
xchg
enter
push
adc
sub
xchg
inc
inc
cdq
sub
xchg
imul
xor
icebp
in
inc
pop
retf
fwait
stos
retf
mov
add
jo
adc
xchg
mov
pop
or
jmp
sar
mov
sub
cmp
test
ins
(bad)
jge
mov
loopne
retf
push
shl
jo
aaa
jbe
ret
(bad)
mov
(bad)
outs
call
and
xchg
lahf
das
cmp
shl
pop
leave
in
(bad)
adc
cdq
dec
sahf
scas
inc
fs
mov
adc
in
imul
popa
mov
dec
aam
mov
cld
movs
sub
test
stos
push
outs
pushf
sbb
cmp
xor
aas
mov
add
mov
js
xlat
pop
std
mov
mov
jb
bound
std
mov
and
jmp
pushf
mov
pop
jl
js
inc
repnz
call
js
aaa
pop
xchg
enter
mov
lahf
push
xor
nop
cdq
out
xor
jle
icebp
rcl
adc
jb
xchg
ins
mov
inc
cmps
in
mov
nop
(bad)
xor
and
mov
cmps
repz
out
inc
js
sub
inc
mov
daa
ins
aad
and
mov
(bad)
retf
call
ds
data16
stc
adc
or
dec
loop
jb
jo
jge
jle
pop
xchg
mov
sub
inc
mov
sub
in
mov
sar
and
fbld
scas
cli
jno
aam
or
cmc
xchg
loope
movs
and
lds
push
jns
sar
test
(bad)
mov
mov
loopne
aam
xchg
xor
sahf
test
sti
mov
fwait
inc
or
add
cmp
js
jae
je
xchg
in
ret
gs
sbb
js
sub
data16
cmp
jns
ret
jmp
test
xchg
inc
xchg
or
in
inc
ss
adc
fs
push
clc
mov
imul
ds
clc
rcl
jne
loopne
pop
mov
lahf
inc
jl
inc
fldenv
adc
xchg
dec
mov
inc
pop
je
pop
cmp
mov
fild
sub
dec
je
(bad)
fimul
push
sub
and
repz
sbb
cmp
sbb
xchg
call
pop
or
cmps
pop
sbb
inc
xchg
xlat
add
jae
gs
xchg
pop
jge
dec
fdiv
sbb
and
mov
push
xchg
mov
mov
push
je
jp
or
push
sbb
repz
fstp
mov
lods
jns
leave
outs
cld
aam
mov
pop
scas
add
add
js
sbb
push
jp
pusha
add
mov
push
xchg
mov
ds
hlt
shr
xor
mov
and
adc
mov
adc
lods
ja
xor
hlt
mov
call
imul
inc
stos
lds
in
in
cmp
jae
pop
cmps
fwait
stos
dec
and
and
inc
xchg
mov
push
in
in
mov
std
jno
outs
push
call
xor
retf
call
inc
sub
mov
and
in
pusha
stc
xchg
push
int3
dec
test
pop
xchg
out
push
xchg
sbb
ja
push
xor
sbb
js
jmp
jge
adc
imul
inc
jl
adc
call
jne
iret
sbb
push
shr
fisttp
push
inc
ins
xlat
pop
scas
lock
sbb
mov
pop
imul
sub
(bad)
pop
push
add
gs
std
jg
test
cmp
ja
mov
and
mov
movs
std
xor
loop
push
stc
jnp
outs
lock
push
out
rol
mov
jns
inc
ror
data16
mov
adc
jp
pshufw
adc
imul
loope
movs
jb
and
pop
aam
jno
sbb
sbb
jecxz
data16
mov
inc
mov
mov
sbb
inc
cmps
cld
inc
repnz
adc
and
cmovg
fld
mov
mov
je
jge
xchg
pop
xchg
or
jns
or
or
dec
mov
cmp
pop
data16
cmp
ja
add
and
aad
shl
std
jnp
ret
(bad)
push
frstor
mov
movs
in
inc
f2xm1
cmp
jp
sti
dec
push
cmc
pusha
dec
mov
mov
mov
cld
arpl
(bad)
pop
out
pop
push
or
inc
jno
test
jmp
cli
xchg
cmp
in
mov
sub
cs
(bad)
retf
xor
(bad)
or
mov
nop
mov
cmp
sbb
pandn
aad
jecxz
out
(bad)
fwait
cmp
xchg
lock
push
enter
ret
fidivr
ret
dec
or
inc
xchg
daa
xchg
and
mov
adc
shl
pushf
or
pop
fild
adc
adc
test
pop
test
sahf
push
hlt
add
cmc
out
xor
add
mov
sub
xchg
xchg
mov
vmwrite
lods
aad
sub
out
sub
mov
inc
rcl
mov
xchg
pop
pop
fcom
ins
mov
mov
sbb
mov
xchg
pop
iret
xchg
xchg
clc
mov
retf
jle
sbb
movs
mov
dec
loopne
sar
mov
push
sti
loope
clc
push
sbb
xchg
push
push
mov
pop
xchg
push
fs
mov
xor
call
inc
addr16
pushf
pop
xor
mov
inc
sbb
loope
sbb
xchg
(bad)
sbb
mov
xor
sbb
mov
xor
in
ror
in
pop
adc
ror
mov
xchg
jp
pushf
aad
sbb
jns
mov
push
jne
outs
mov
add
imul
dec
jbe
sti
aad
or
fcomp
lea
add
clc
xchg
shl
(bad)
cmp
retf
xchg
sti
push
sub
xchg
and
mov
or
and
push
sbb
add
mov
sbb
inc
inc
mov
mov
outs
ret
sbb
cmp
xchg
jmp
lods
retf
sbb
adc
jmp
jo
retf
test
mov
sbb
jb
and
xor
ret
dec
sbb
add
leave
push
mov
mov
arpl
icebp
cmp
retf
xor
imul
icebp
lds
push
jne
add
std
(bad)
loopne
pop
pop
xchg
mov
fsubr
mov
pop
xchg
mov
xchg
inc
adc
mov
jmp
jne
inc
jmp
sub
movs
inc
rcr
pop
sub
push
xor
jmp
cwde
mov
mov
sbb
lods
adc
inc
add
cli
jne
dec
hlt
jg
mov
pusha
xor
jae
adc
retf
xchg
mov
cwde
imul
repz
mov
mov
and
add
pop
sbb
sbb
cwde
jnp
jns
and
std
in
jae
je
in
push
jmp
adc
cmp
add
jns
mov
clc
add
(bad)
je
jle
mov
fsubr
test
sub
mov
pop
xchg
cmps
xor
jae
push
jo
les
jae
repz
xor
shl
movs
dec
addr16
repz
sbb
clc
arpl
shr
jle
push
mov
jb
pop
in
mov
hlt
addr16
pop
ja
xchg
fisttp
jae
xchg
mov
fcmovnb
push
rcl
stos
pop
jb
int3
lea
push
pusha
jae
mov
bound
clc
pop
je
pop
loope
sbb
and
std
sub
mov
ins
comiss
xchg
dec
outs
mov
and
aas
xchg
mov
bswap
pop
pop
sti
mov
in
sub
stos
xor
mov
fistp
add
push
dec
mov
sti
test
cmp
cmp
jmp
leave
mov
fsubr
jge
cmp
hlt
inc
call
mov
xor
mov
dec
cld
(bad)
jnp
cld
dec
xchg
(bad)
sti
sub
inc
fild
push
pop
(bad)
js
jle
jp
jmp
jecxz
out
shl
cli
pop
cmp
mov
cdq
and
add
ret
xchg
pop
mov
in
adc
popf
adc
inc
adc
mov
pop
test
sbb
and
fwait
shl
jbe
aaa
fiadd
rol
adc
cld
pusha
adc
mov
lds
add
scas
or
jne
sbb
popf
nop
push
xchg
add
mov
push
cmc
ret
es
adc
repz
sub
cmc
push
jno
xchg
jo
hlt
shl
and
cmc
mov
pop
jbe
dec
dec
pop
cli
push
notrack
in
xchg
mov
jb
jnp
xor
movs
test
mov
bound
push
sub
in
or
sar
cmp
jnp
cmp
sub
fistp
pop
dec
jne
mov
xchg
dec
mov
loop
gs
fiadd
icebp
jge
ret
xchg
data16
add
push
dec
push
jmp
jp
sub
ins
cmp
and
dec
and
sub
movs
jg
clc
or
fdiv
fs
jecxz
(bad)
sub
xchg
xchg
jp
dec
shl
ds
aam
mov
clc
push
mov
out
jnp
jne
shl
mov
dec
nop
ss
pop
add
xchg
push
jno
je
scas
jb
outs
mov
out
sub
pop
inc
jg
movs
mov
enter
mov
adc
push
addr16
in
test
lock
xchg
fwait
pop
push
and
push
mov
test
movs
xchg
aaa
push
dec
or
sbb
adc
dec
sub
jnp
xor
addr16
repnz
hlt
mov
mov
dec
mov
in
mov
jp
jecxz
push
push
sbb
imul
dec
mov
xor
add
aad
fst
sub
push
jns
in
and
out
cmp
pop
fidivr
sub
mov
sub
dec
xchg
add
inc
and
add
or
rcl
push
sub
pusha
xor
xor
xchg
movs
iret
cmp
xchg
pop
add
pop
fstp
jne
aaa
(bad)
in
int
push
es
sub
and
in
mov
or
xor
ror
or
jo
push
mov
nop
ins
xor
idiv
push
shl
dec
pop
push
or
xor
scas
jo
ret
push
cmps
out
fsubr
pop
out
mov
je
sbb
lods
dec
sub
imul
inc
and
and
sub
stc
das
les
push
call
xchg
jp
test
jl
jns
add
adc
adc
test
data16
and
es
fcomp
arpl
rol
xor
fs
outs
repnz
cmps
jnp
jmp
js
xchg
ja
cmc
mov
hlt
mov
jns
inc
std
iret
call
fs
jge
cs
dec
cmp
sbb
mov
and
imul
jne
jnp
push
push
loopne
fcomp
ret
xor
cmps
jmp
pop
clc
rcr
fmul
sbb
adc
add
retf
fs
dec
out
mov
stos
leave
ins
mov
mov
aas
loopne
cld
ds
lods
xchg
jmp
jae
sbb
ret
cdq
popf
inc
data16
sbb
fwait
mov
pop
push
sbb
rcl
mov
mov
out
les
inc
and
clc
data16
pop
mov
mov
xchg
sbb
pop
(bad)
sbb
dec
scas
add
and
jns
mov
sbb
ret
in
mov
shl
push
ja
lods
retf
dec
ret
es
mov
mov
xor
retf
cmp
mov
shl
sbb
dec
pop
fild
cmp
xor
adc
xor
shl
mov
pop
jmp
inc
std
push
pop
and
pop
scas
int3
adc
adc
push
retf
bound
stc
test
loop
pop
rcr
sahf
and
subps
cmp
mov
pop
fstp
aam
cmp
mov
jb
pop
pop
and
xchg
add
jne
(bad)
das
xor
adc
pop
sbb
out
push
push
push
data16
cmp
pop
loop
data16
jnp
add
and
and
repz
add
jp
mov
cmp
pop
call
push
add
mov
add
sub
(bad)
mov
jbe
jle
mov
xchg
in
xor
(bad)
and
in
(bad)
mov
or
pop
loop
push
push
sub
movsx
test
mov
icebp
in
push
pop
xchg
or
test
pop
adc
jb
test
xor
mov
fwait
pop
inc
in
loop
xchg
xor
xchg
pop
and
popf
sbb
pusha
mov
cmp
arpl
adc
jp
(bad)
loope
pushf
add
sub
int3
ja
xchg
add
jbe
or
sbb
mov
lds
dec
mov
ds
lods
cld
jo
mov
enter
fistp
mov
jae
cmc
mov
mov
push
fwait
or
loope
inc
js
pushf
fwait
cmp
fdiv
repz
and
repnz
les
adc
das
aam
jo
arpl
jmp
xchg
fisub
cs
cdq
lock
jmp
test
push
jmp
not
dec
dec
xor
iret
push
int
outs
lock
cs
hlt
mov
sbb
xchg
imul
mov
lods
or
push
outs
in
in
jmp
cmp
hlt
and
jne
jb
popa
sbb
retf
adc
dec
cmp
xor
pop
dec
dec
std
jecxz
cmps
mov
hlt
jb
pop
mov
daa
test
mov
ss
cmps
data16
jne
js
cli
(bad)
retf
(bad)
shl
rcl
push
mov
popf
std
retf
mov
loop
xchg
mov
mov
xchg
mov
or
(bad)
cmps
xchg
outs
mov
dec
jge
sub
mov
pop
sbb
cmp
xor
sbb
dec
sub
push
xchg
dec
pop
or
mov
adc
jns
daa
aad
out
dec
mov
(bad)
jo
fwait
inc
les
jecxz
ins
pop
lods
lods
jp
aas
jbe
fcomip
or
xchg
fucomp
stos
add
inc
(bad)
sub
xchg
jnp
jmp
test
lahf
xchg
cs
movhps
cmp
xchg
es
outs
push
mov
stos
xor
sub
clc
js
sbb
jno
idiv
dec
ja
ja
inc
jns
xor
mov
cdq
or
pop
xchg
and
std
xor
std
xor
xor
adc
bound
inc
dec
jl
icebp
aad
fs
sahf
loopne
rcl
xor
dec
xor
jns
mov
mov
icebp
sti
shr
mov
gs
shl
cli
pop
test
dec
sbb
lds
pusha
mov
shl
in
cs
pusha
nop
jne
xchg
jo
int
outs
jmp
inc
push
xchg
sub
mov
push
lock
adc
pop
addr16
(bad)
xlat
lea
sub
push
xchg
dec
movs
jle
adc
and
mov
sbb
add
sbb
xchg
aad
loopne
push
xchg
jae
hlt
sbb
es
sbb
movs
cmps
cwde
cmp
(bad)
xor
xchg
adc
retf
into
bnd
cmps
pop
mov
sbb
mov
ret
mov
cmp
xchg
data16
fsubr
push
mov
and
pop
pop
inc
sbb
mov
js
sub
popf
cmc
pop
in
pop
pop
mov
push
cmp
aaa
rcl
loope
jno
xor
arpl
sbb
add
fistp
dec
mov
in
sbb
mov
adc
xor
in
pop
inc
dec
push
shr
outs
dec
pop
xchg
and
call
jns
mov
and
xchg
in
mov
jno
fmul
icebp
(bad)
mov
cmp
in
pop
lods
shl
call
stos
push
jne
std
out
dec
sub
lock
sub
jl
xchg
sub
je
xchg
and
xor
call
sbb
test
xor
out
xor
jne
dec
aad
sub
fstp
xchg
(bad)
xor
retf
mov
(bad)
(bad)
scas
push
das
xor
sahf
rcr
imul
pushf
leave
mov
pushf
pop
push
js
sub
sub
push
fcmovbe
mov
jne
movs
mov
aaa
mov
jecxz
stos
test
outs
js
xlat
xchg
pop
pop
adc
pop
pop
ret
sub
les
cmps
js
test
ins
mov
iret
pop
xchg
test
jecxz
clc
imul
pop
loope
mov
repnz
mov
mov
push
(bad)
pop
sbb
jb
dec
xor
xchg
inc
add
stos
loopne
call
push
(bad)
jp
movs
not
mov
sub
clc
ja
inc
mov
fsubr
jmp
mov
mov
or
pop
add
jp
in
data16
in
jle
rep
xchg
test
pop
mov
push
retf
pop
jae
pop
xchg
fimul
and
cli
and
xchg
enter
jae
lahf
call
in
mov
mov
cmp
sub
jo
popf
sbb
or
mov
cmp
fs
inc
test
xchg
pop
jo
xchg
(bad)
adc
jl
rol
inc
cmp
cs
mov
or
and
cmp
dec
and
xchg
adc
in
sar
call
xor
mov
pop
cmps
adc
mov
addr16
jne
scas
pop
jne
movs
imul
loopne
and
in
sbb
add
mov
imul
cmp
lods
(bad)
scas
clc
ja
jns
jne
popa
fs
sbb
jecxz
lods
xor
fiadd
xlat
jp
xchg
sbb
jo
neg
mov
int
xchg
std
mov
pop
imul
mov
sub
xchg
loope
cld
xchg
and
out
sbb
hlt
mov
mov
ret
or
les
inc
hlt
dec
(bad)
ja
daa
xchg
das
mov
mov
jns
aaa
push
dec
jmp
add
aam
call
lods
sti
repnz
pop
imul
push
inc
das
call
push
js
adc
push
pushf
dec
inc
bound
std
jecxz
scas
fisubr
stos
mov
mov
jne
cwde
or
lods
in
or
cmp
jnp
fwait
jo
push
adc
fnstenv
jbe
jmp
xor
in
into
push
adc
xor
rol
adc
push
ins
test
xchg
stos
jmp
(bad)
add
push
xchg
push
pusha
bound
ins
fcmovb
in
jo
jns
jo
xchg
add
mov
test
adc
je
shr
sbb
xchg
mov
dec
jo
fisttp
std
xchg
sub
mov
push
test
push
xlat
pop
popf
mov
inc
and
xor
jbe
inc
dec
sar
ja
jbe
push
test
push
xchg
ins
cli
push
push
in
test
hlt
xchg
pop
repz
fst
pushw
fidiv
shr
xchg
fwait
or
push
or
cmp
jmp
jb
mov
in
cmp
fbstp
jp
jno
xchg
std
adc
movs
std
cmc
aas
aad
xor
mov
jae
dec
xor
xchg
sti
movs
inc
jg
int
inc
sbb
jno
or
pop
es
mov
xor
dec
add
stos
adc
fadd
sbb
and
or
loopne
mov
mov
sub
rcr
aaa
imul
push
cs
jge
js
stc
inc
sub
shr
push
jmp
(bad)
jne
sbb
lods
xor
xor
out
call
cmp
pop
(bad)
pop
cmp
xor
push
jb
add
mov
call
gs
jns
and
and
mov
imul
leave
out
test
xor
loopne
into
add
les
mov
push
int3
(bad)
jp
add
and
sub
iret
sti
jne
sbb
test
xchg
or
aas
shl
jne
pop
jl
xor
retf
xor
and
ds
retf
xchg
ins
inc
jns
pop
je
int
inc
pop
cwde
loope
pop
mov
sbb
mov
xor
pop
js
cmc
ds
mov
cmps
pop
mov
imul
sbb
xchg
cmp
cs
push
dec
dec
je
mov
inc
scas
mov
cmps
push
mov
jge
inc
ret
dec
jge
push
or
or
(bad)
test
xor
and
dec
dec
movs
loopne
cwde
les
and
mov
pop
jmp
lock
rcl
jbe
(bad)
bound
pop
mov
call
retf
enter
dec
pop
mov
in
xor
leave
ret
mov
retf
addr16
jp
mov
pusha
loopne
cs
xchg
test
pop
sbb
mov
push
push
call
sub
fwait
rcl
cli
xchg
ss
call
sub
retf
dec
push
movs
mov
xor
cld
or
lods
arpl
add
push
jo
push
push
sbb
call
inc
(bad)
and
sub
int3
scas
cs
mov
icebp
xor
jb
fnstenv
adc
loopne
in
dec
dec
jl
cmp
scas
xchg
jno
ja
rol
gs
icebp
out
cmp
dec
shl
fwait
xor
pop
push
jl
out
xchg
and
push
jns
in
loopne
xor
hlt
mov
adc
sub
daa
stos
test
and
and
cwde
int
pop
xchg
fstp
adc
repz
inc
sahf
push
inc
dec
outs
pop
xor
sbb
xchg
rol
fcom
pop
test
and
pop
mov
and
jnp
xchg
sbb
xchg
adc
push
jge
call
sub
inc
jp
test
xor
test
cmp
mov
dec
xchg
div
mov
repz
out
push
mov
xchg
mov
cmp
inc
ficomp
call
mov
dec
cmp
mov
sbb
js
add
lods
inc
pop
cmp
pop
jns
cli
pop
mul
leave
xor
xchg
cmp
pop
jo
inc
jmp
and
aad
dec
push
pusha
sbb
test
sub
call
movs
dec
mul
pop
jnp
xor
(bad)
test
fadd
push
(bad)
stc
ret
xor
ror
adc
js
add
mov
test
pop
and
add
jnp
mov
call
mov
inc
nop
shl
jecxz
push
scas
inc
mov
sbb
fistp
test
fisubr
scas
std
and
test
fmul
inc
out
cs
fld
xchg
sar
xchg
mov
call
push
sub
inc
(bad)
shr
popa
add
push
mov
mov
add
or
and
push
push
arpl
jne
sbb
or
sbb
not
mov
jnp
adc
lahf
push
lock
iret
add
mov
pushf
fidivr
shr
push
pop
lahf
and
loope
sub
push
scas
mov
sbb
jno
sub
xchg
jae
push
cmps
mov
shr
ja
rcr
push
fist
sub
dec
sub
mov
inc
(bad)
pop
gs
or
adc
shr
jbe
mov
sbb
push
mov
jne
sub
cwde
packssdw
pshufw
pop
push
ins
sbb
inc
stos
enter
lds
data16
arpl
ja
or
frstor
mov
inc
imul
mov
jne
adc
mov
jne
(bad)
jns
cmp
int3
lods
xchg
mov
icebp
mov
pusha
out
cpuid
pop
mov
jae
retf
hlt
fstp
xchg
jge
xchg
sub
sbb
sub
neg
adc
sar
xchg
mov
pusha
leave
jmp
repz
pop
je
test
int3
mov
or
in
ja
outs
call
sbb
data16
mov
and
adc
lods
shr
or
jmp
cmp
dec
and
hlt
pop
cmp
lock
push
loope
sub
cmp
in
movs
sahf
sbb
cmp
inc
xchg
sub
daa
hlt
cs
sysenter
pop
cmc
loop
ja
push
push
ins
fucom
pop
push
add
add
sti
lods
inc
sbb
cwde
sti
inc
fist
les
dec
cmps
mov
sub
jp
addr16
enter
jp
retf
jne
xor
lods
cwde
repz
and
and
add
push
sub
and
bound
dec
(bad)
xchg
sbb
stos
xchg
stos
or
leave
sbb
xchg
loop
test
stos
pop
xor
fstp
cwde
cld
js
sbb
sbb
jne
pop
or
xor
xchg
pop
and
cli
mov
sti
call
ja
sbb
aad
test
jg
daa
pop
xchg
fs
push
pop
ror
js
out
movs
or
div
in
dec
mov
sub
xor
cwde
and
ds
les
adc
jmp
jmp
jae
sbb
xchg
mov
pop
stc
mul
mov
cld
in
push
mov
(bad)
and
das
call
pusha
and
lock
hlt
jge
pop
mov
(bad)
pop
or
fidiv
repz
ins
pop
jae
and
add
lahf
aam
inc
ja
test
pop
xor
data16
retf
wrmsr
dec
jns
(bad)
arpl
ret
sbb
xchg
or
and
and
ss
sbb
jge
mov
out
je
or
les
jmp
hlt
fidivr
jbe
pop
xchg
sub
mov
pusha
xchg
xor
enter
stc
shl
addr16
push
jmp
xchg
pop
loopne
pop
js
das
jo
push
and
arpl
push
mov
cmps
sbb
dec
aaa
sub
xchg
in
mov
stos
loop
lahf
cmp
into
enter
xchg
das
pop
xchg
clc
push
jno
retf
lock
xor
adc
les
jnp
xchg
std
in
jle
sub
mov
shl
sahf
cli
sbb
add
out
mov
sti
jb
loop
ds
sbb
repnz
sub
jg
(bad)
out
sub
jmp
push
mov
fld
mov
pop
sahf
cs
loop
inc
sbb
sub
(bad)
(bad)
(bad)
lds
lods
arpl
lahf
jl
dec
sahf
test
out
or
xchg
rcl
das
test
pop
or
outs
mov
fimul
push
test
(bad)
pusha
mov
push
mov
push
push
mov
xchg
aam
js
loopne
push
nop
pop
je
xchg
out
dec
push
js
stos
mov
out
test
bound
mov
mov
loop
mov
icebp
loope
or
push
cmc
cmp
jne
mov
push
call
data16
out
in
clc
repnz
adc
jnp
out
in
ret
jb
aas
enter
mov
pop
jne
sahf
mov
cmp
aad
sub
inc
daa
jae
cdq
loopne
pop
cmp
out
shr
mov
aaa
lods
in
dec
fwait
int
popa
pop
sbb
in
push
div
not
and
jae
pop
sbb
cmp
loope
adc
repz
out
mov
jae
out
inc
js
lds
cld
cmp
xor
test
dec
pop
std
xchg
fcom
pop
mov
xchg
sub
cmp
lahf
in
mov
cdq
lock
rcl
lods
xor
pusha
loopne
and
in
pushf
jl
cmp
jge
adc
aaa
xchg
mov
retf
icebp
iret
xchg
addr16
inc
and
div
shr
adc
imul
sbb
mov
jge
xchg
push
sbb
mov
cs
xchg
outs
and
inc
jecxz
lods
inc
push
add
imul
test
sub
in
and
imul
mov
adc
jae
dec
mov
mov
jge
cmp
addr16
cmp
ins
xor
ins
and
cli
xchg
xor
lahf
in
jnp
pop
jmp
stos
gs
jle
xor
xchg
pop
xor
loop
in
out
sti
int3
pop
in
imul
pop
mov
jl
les
(bad)
cmp
push
cld
jmp
ins
adc
movs
cld
stos
stc
xor
jl
fs
stos
xchg
test
loop
cmp
retf
imul
ins
add
(bad)
cmp
cs
and
or
je
hlt
pop
xchg
push
mov
pop
mov
aam
jns
stc
cmc
movs
dec
xchg
mov
lock
push
es
loope
shr
jmp
dec
sbb
sub
fcomp
dec
mov
jmp
sbb
or
mov
shl
fbld
pop
push
sbb
xchg
movs
push
adc
imul
jne
call
jge
cmps
pop
adc
inc
imul
or
xchg
sti
(bad)
loop
call
retf
fidivr
sub
retf
in
mov
mov
pop
sub
icebp
shl
pop
aam
adc
jp
not
sbb
mov
jp
cs
sbb
or
sbb
fsubr
(bad)
sahf
jns
jp
enter
ss
jne
pop
xchg
fld
pop
cmp
clc
not
(bad)
mov
pushf
push
jecxz
xor
in
push
push
repz
frstor
mov
rol
cmp
lods
test
ret
ret
sbb
mov
jmp
jecxz
(bad)
push
sbb
pop
xchg
sub
lods
scas
xchg
loopne
push
sub
stos
mov
add
or
lea
out
data16
cmps
imul
jg
xlat
push
inc
ja
lods
jp
jle
inc
and
fs
mov
and
add
cli
clc
hlt
aad
dec
or
loopne
add
gs
mov
icebp
dec
mov
mov
add
in
sbb
sbb
leave
and
xchg
hlt
je
jmp
sub
mov
xor
mov
cli
fwait
sub
dec
and
mov
jne
jb
add
jne
mov
ret
in
hlt
stos
in
mov
mov
sub
and
xor
cwde
pavgb
rcl
xor
out
mov
mov
jnp
mov
sysenter
and
cmp
jae
xchg
sub
(bad)
mov
mov
xor
outs
out
out
inc
xor
jmp
sub
push
cld
inc
sbb
shl
in
fincstp
adc
mov
cmps
pusha
in
xor
cmp
hlt
dec
retf
loope
push
stos
sub
or
sbb
mov
mov
and
and
sbb
into
jae
shl
xchg
pop
xlat
cli
je
iret
movs
inc
nop
pop
cwde
les
cmp
sbb
or
mov
daa
inc
fwait
shl
cmp
mov
je
pop
js
xchg
and
jns
cmc
mov
xor
rcl
cmps
cmps
jg
or
mov
and
repz
fcomip
xor
sub
icebp
cmc
jns
mov
test
je
in
xchg
jp
inc
mov
pop
repz
adc
inc
mov
cmp
sub
push
cmp
xchg
aas
and
je
pop
xchg
mov
lock
std
inc
cmp
js
(bad)
scas
shl
imul
xor
push
mov
call
pop
mov
cmp
lods
mov
or
out
mov
and
inc
dec
mov
dec
inc
cmps
adc
xchg
shr
(bad)
scas
int3
or
dec
push
mov
pop
add
pop
mov
fcom
into
mov
pop
cwde
jne
dec
pop
mov
xchg
fidivr
cmc
aad
mov
inc
adc
nop
ret
sub
repnz
sub
mov
jmp
ins
xlat
and
lahf
inc
mov
jnp
and
nop
(bad)
out
jns
adc
push
xor
sub
xchg
lock
fild
ins
push
movs
jne
jb
adc
push
sbb
pop
call
jae
xor
ss
fs
addr16
aam
dec
sub
shl
dec
mov
dec
stos
in
into
pusha
inc
xlat
movs
add
retf
ss
(bad)
(bad)
xor
shl
ret
(bad)
pop
in
adc
mov
out
xchg
sub
rep
cmp
fs
xchg
popa
jmp
mov
nop
or
lock
jmp
jg
sbb
inc
ja
adc
mov
imul
pop
mov
sub
add
out
cmp
and
jnp
jmp
cmp
js
aas
xor
xchg
push
jle
inc
cmc
pop
mov
and
cwde
fist
jne
jmp
inc
leave
lock
cmp
daa
xor
stos
jbe
mov
sbb
call
fild
data16
and
aad
mov
clc
mov
movs
mov
cmps
jg
adc
je
add
push
lods
mov
mov
(bad)
jb
test
out
add
sub
mov
retf
movs
pop
in
mov
xlat
cwde
sbb
das
jl
cmc
sub
test
ss
(bad)
mov
int
mov
loop
nop
xchg
in
scas
not
daa
xchg
or
cld
loope
inc
xor
fcmovnbe
stc
push
mov
pushf
dec
mov
pop
rcr
inc
push
jne
mov
ret
jmp
hlt
cld
xchg
xchg
push
loop
add
dec
jne
(bad)
and
and
sub
jo
aas
push
jmp
das
jb
mov
sbb
or
rcr
dec
data16
cmp
add
stc
xchg
fwait
in
ins
and
aad
dec
mov
jns
(bad)
hlt
xor
add
cmp
jmp
(bad)
mov
(bad)
sbb
push
fsubr
push
dec
jp
jo
es
icebp
push
xor
cld
push
icebp
in
xchg
mov
inc
sbb
cmp
(bad)
jnp
cmp
sbb
pop
addr16
call
not
cmp
sbb
loope
in
lods
test
mov
xor
ret
repnz
xchg
pop
arpl
sub
add
and
mov
adc
test
cdq
pop
movs
clc
xor
out
dec
push
push
inc
mov
shl
dec
dec
jae
jp
adc
sub
in
dec
push
cmc
sbb
aad
cmps
pop
jecxz
imul
jmp
pop
fnstsw
and
ins
adc
jge
adc
mov
cli
lds
or
pop
mov
call
cmp
repnz
mov
test
imul
aam
std
pop
call
xchg
(bad)
cmp
pop
repnz
jp
pushf
es
inc
sbb
mov
sub
sub
popa
sbb
fcmovb
rcr
scas
jl
icebp
inc
adc
adc
push
mov
pop
ins
outs
int
jo
mov
dec
and
nop
std
js
paddusw
dec
mov
clc
movs
cld
popf
xchg
and
jbe
(bad)
imul
popf
jg
push
add
hlt
mov
in
jo
xchg
sbb
xchg
jmp
jp
(bad)
int3
mov
mov
pop
out
in
jle
dec
aas
jmp
push
jnp
into
jge
jl
mov
xor
push
xchg
pop
inc
cmp
js
xchg
mov
in
cwde
and
out
and
jae
xor
push
cli
push
mov
adc
rcr
setp
mov
add
mov
imul
xchg
pop
xor
push
call
jnp
ss
es
inc
hlt
mov
lahf
pop
iret
int3
jg
addr16
push
cmp
cmp
sbb
movs
mov
adc
cmp
sbb
je
scas
cld
push
adc
stc
jmp
and
pushf
pop
out
jno
and
push
hlt
push
or
xor
call
xchg
push
cmps
jno
pop
enter
int3
rcl
mov
mov
test
xor
mov
cli
mov
mov
and
test
leave
inc
into
dec
jl
les
mov
xchg
or
cwde
dec
in
fidivr
pop
fwait
xchg
add
jno
sbb
jge
pushw
js
mov
mov
mov
cs
sub
pop
mov
fld
pop
repnz
fldcw
pushf
das
or
enter
xor
clc
rol
repnz
js
pop
pop
jno
call
iret
icebp
mov
fwait
dec
jae
push
jae
mov
das
adc
add
mov
push
add
jnp
xchg
xchg
add
pop
inc
adc
xor
lea
xor
mov
std
xchg
in
jg
es
fsubr
gs
rcr
stos
shr
leave
fsubr
jmp
imul
or
pop
cmp
lea
cwde
adc
or
loopne
xor
cmp
(bad)
push
sbb
stos
mov
xchg
lock
out
cld
pop
inc
pop
inc
clc
sar
jb
adc
imul
enter
cli
sub
add
push
and
scas
sbb
xchg
fcomp
ins
js
sub
sub
ror
ins
push
cwde
out
fnstsw
(bad)
fisub
in
cdq
mov
loopne
jmp
call
jmp
jmp
icebp
inc
xchg
dec
cmp
pop
cmc
pop
xchg
pop
cmps
rcl
test
adc
repnz
jno
out
xchg
jge
adc
pop
xchg
jge
ret
push
sub
test
sti
jo
mov
ja
cmps
out
in
in
sbb
add
push
mov
jns
mov
pop
dec
aaa
sbb
arpl
cli
jns
hlt
inc
sti
dec
xor
xchg
adc
mov
cmc
pop
sub
pusha
not
mov
int
push
xchg
dec
movs
imul
xlat
fsub
dec
inc
cmc
out
jmp
and
lods
adc
test
pop
fcmovb
mov
sbb
pop
idiv
mov
cmp
call
xchg
rol
mov
dec
call
jns
push
cli
hlt
sub
xchg
retf
ins
test
adc
cmp
in
dec
sbb
mov
outs
popf
push
mov
pusha
pop
sub
mov
mov
cmp
mov
mov
mov
sbb
mov
inc
(bad)
dec
in
shl
xchg
addr16
mov
test
lods
xchg
push
adc
jmp
fild
retf
test
in
idiv
cdq
push
mov
cmp
jnp
jmp
scas
and
push
pop
push
repnz
add
mov
sub
mov
in
lahf
pusha
cld
repnz
dec
cmp
pusha
loopne
fimul
xchg
xor
mov
in
shr
cwde
fs
ins
mov
pushf
ret
push
out
mov
xor
mov
xchg
pop
(bad)
sub
xor
mov
test
fcmove
and
sbb
movs
jbe
jo
pushf
test
scas
js
sub
pop
jmp
push
cmc
and
lea
sub
ror
xor
push
pop
lds
dec
jp
cmp
dec
or
sub
hlt
push
loopne
js
sub
inc
(bad)
pop
jmp
dec
mov
xor
pop
jmp
rcr
add
rol
cmp
fdiv
xlat
les
enter
in
js
fisubr
xchg
cmp
cmps
xor
int
out
sbb
and
xor
add
cs
ret
add
jne
lds
loope
fwait
pop
sub
retf
out
push
add
in
sub
mov
push
sahf
sbb
stos
xchg
inc
ret
sub
mov
xor
xchg
dec
jnp
add
cmc
sbb
mov
retf
xor
xchg
xchg
xor
push
imul
sbb
std
cmc
mov
mov
ins
xchg
inc
jecxz
fdiv
dec
daa
push
cmp
jnp
mov
aas
call
pop
pushf
lahf
adc
popa
inc
sub
cmp
in
jle
push
jne
pop
ins
mov
push
lock
loopne
sbb
cli
adc
bswap
push
xor
jmp
(bad)
shr
repz
or
(bad)
dec
and
jge
inc
aam
jne
xchg
inc
mov
scas
dec
out
ja
in
cmps
and
cmp
pop
fisubr
lahf
xchg
xchg
int3
(bad)
arpl
(bad)
pop
and
mov
xor
jmp
jae
and
arpl
sub
stc
mov
cmc
dec
sub
pop
add
fdiv
lods
pop
xchg
push
xor
in
scas
pop
mov
loop
or
popa
mov
mov
pop
cs
push
js
test
lods
push
pop
sub
add
jle
psrad
cmp
sub
mov
pop
xor
mov
jae
pop
sbb
jns
fmul
test
fdivr
cmp
pop
fldcw
pushf
jne
stos
dec
call
cmps
mov
in
(bad)
lock
mov
gs
data16
xchg
jnp
mov
adc
(bad)
(bad)
ins
and
mov
jo
in
out
pop
outs
gs
sti
out
sub
xchg
cs
cmp
cmc
add
test
mov
push
lds
les
test
sub
(bad)
scas
xchg
push
(bad)
clc
sahf
xchg
mov
loop
push
adc
add
push
or
xor
jae
mov
xchg
retf
lock
aaa
pop
push
mov
cld
(bad)
out
add
ret
xor
or
and
xchg
mov
cmp
popf
movs
mov
mov
iret
movs
stos
sub
sub
inc
in
test
pop
and
sbb
js
sbb
add
lock
ins
dec
push
test
add
aaa
enter
stos
neg
in
mov
retf
ficom
xchg
dec
add
rcl
and
jp
js
fdivr
inc
outs
xchg
test
pop
mov
sub
xor
push
addr16
push
cwde
test
cmp
leave
in
mov
ret
es
icebp
retf
cmp
ja
pop
jnp
cmc
out
(bad)
fidivr
test
xor
sbb
test
clc
mov
ret
cmp
cmp
xor
leave
jns
or
mov
sub
shl
mov
data16
cmp
jmp
pop
sbb
lock
or
sub
pushf
fwait
xchg
push
adc
lods
xor
and
xchg
fsub
ret
je
jle
call
cmp
xchg
fnstenv
lods
repz
stc
icebp
dec
std
loopne
nop
mov
stc
sub
xor
push
sub
cdq
mov
jbe
pusha
loope
xchg
xchg
jmp
add
cmp
cdq
xchg
push
sub
rcr
(bad)
out
aaa
sub
jge
mov
sahf
test
jne
xchg
xchg
jns
ins
je
push
jle
cmp
dec
aad
xchg
call
outs
data16
mov
sub
fmul
xchg
outs
int3
mov
ins
gs
movs
xor
xlat
dec
add
call
jp
out
bound
sbb
push
sub
fwait
mov
jbe
sar
aaa
les
add
jno
loop
test
dec
cs
retf
ss
js
xchg
mov
out
data16
jecxz
dec
scas
cmp
ret
sub
cmp
aaa
shl
sbb
mov
cwde
adc
pushf
ds
ret
xor
jecxz
push
jp
repz
mov
jo
sub
sbb
movs
test
mov
daa
sbb
adc
jp
mov
aad
jge
jp
hlt
add
int3
lods
push
sub
addr16
cmp
xor
pushf
xor
sbb
jno
cmp
cdq
adc
dec
es
stos
dec
jo
loopne
js
dec
outs
jge
and
inc
xchg
in
xchg
or
fisttp
test
cmp
mov
mov
loop
scas
push
xchg
add
loopne
sahf
mov
xchg
pop
sti
mov
cmps
jnp
cmp
mov
repz
std
cmps
xor
ret
fldcw
jne
cmp
shl
inc
retf
add
jge
mov
sub
push
jns
ret
dec
mov
mov
mov
(bad)
lds
scas
ret
dec
enter
push
and
stc
sar
arpl
xchg
or
sub
inc
lahf
cmp
loopne
fdiv
outs
adc
aam
xchg
xchg
cmp
pop
dec
pop
scas
outs
test
xchg
inc
jl
cli
stos
mov
xchg
popf
pop
(bad)
pushf
shr
xor
loope
fdiv
adc
js
push
ret
push
jne
xchg
cmps
sbb
sahf
and
pop
lea
cmp
cmc
rol
dec
xchg
cmc
test
xor
lods
mov
push
test
jbe
dec
(bad)
in
je
jns
push
mov
dec
sub
jo
out
jg
xor
cld
fadd
mov
mov
popf
sub
jecxz
xchg
enter
int
leave
sub
sub
ins
xor
add
adc
add
retf
test
sub
enter
sbb
outs
aas
outs
jmp
dec
mov
xor
popa
or
mov
popf
popf
mov
mov
cwde
mov
sbb
xchg
sbb
dec
cmp
dec
or
add
inc
fwait
and
cmp
sbb
mov
sahf
pop
mov
push
test
push
push
xor
cmp
lea
pop
ss
and
cmp
pop
lock
div
jl
icebp
jo
add
fisttp
jp
cmp
dec
dec
repz
fdivr
dec
arpl
push
mov
adc
push
mov
xchg
fistp
(bad)
push
push
or
jp
stc
ja
addr16
mov
(bad)
aaa
and
mov
xchg
jmp
cld
adc
sub
rcl
test
fcmove
in
es
std
adc
lods
rcr
dec
mov
mov
in
lods
xlat
test
add
icebp
cmp
aas
jmp
scas
jbe
ret
pop
push
jo
or
cli
mov
jae
shl
imul
dec
daa
jae
in
mov
call
imul
out
bound
mov
rcr
rcl
xor
lock
jmp
mov
and
cmps
ins
mov
mov
sbb
add
cmp
mov
add
cmc
xchg
imul
jb
mov
cmps
pusha
jge
mov
shl
mov
es
retf
mov
push
(bad)
notrack
(bad)
in
dec
push
pop
jb
idiv
mov
jl
test
dec
loop
pop
test
xchg
ret
pop
cmp
dec
pop
sar
adc
sbb
sbb
xchg
js
pop
jbe
push
mov
xchg
ret
jnp
fistp
inc
mov
in
xchg
mov
jb
adc
in
ret
data16
jns
add
loopne
mov
fistp
mov
or
aaa
outs
mov
dec
xchg
dec
push
dec
pop
das
mov
sbb
iret
out
aam
push
out
fidiv
sub
sub
mov
push
test
or
or
push
or
cld
xchg
pop
iret
inc
test
ss
popf
addr16
and
aaa
adc
arpl
and
test
lahf
movs
and
push
xchg
mov
xor
jne
mov
not
mov
lea
cli
ret
in
pop
shr
pop
jae
shld
jbe
cmp
mov
xchg
enter
xor
aam
jmp
stos
lahf
cmp
fnsave
lds
sbb
cmp
pop
pusha
fimul
xchg
leave
jl
mov
out
xor
ins
xor
xor
mov
test
or
or
push
pop
fdiv
jmp
aam
sub
aas
gs
pop
sub
mov
xchg
cmps
popf
call
bound
jae
mov
push
mov
nop
outs
pop
fisttp
daa
cmp
icebp
daa
push
xchg
mov
push
ficom
fild
imul
cs
add
js
and
jae
sbb
aas
jp
adc
out
mov
nop
mov
sbb
rcl
mov
jae
cmp
ror
push
or
jae
mov
outs
(bad)
mov
shl
mov
nop
push
je
push
retf
addr16
jae
push
adc
and
jbe
push
movs
daa
fbld
mov
cmp
in
call
lahf
scas
jne
popa
inc
push
and
int
jo
pop
cwde
rcr
sahf
push
sahf
add
dec
mov
retf
xchg
mul
ss
pusha
loopne
jge
adc
fiadd
test
xchg
mov
stos
cld
xchg
mov
adc
nop
pop
inc
(bad)
clc
shr
div
ins
sub
fdiv
cs
or
loope
push
inc
(bad)
fbstp
adc
std
mov
ret
dec
mov
stc
pop
xor
dec
mov
cli
push
in
call
dec
push
cmps
and
xchg
sbb
sbb
or
cmp
mov
cmps
ja
in
and
loopne
pop
xchg
push
adc
ins
fistp
pop
push
(bad)
mov
es
and
dec
fmul
in
fst
xor
xchg
fwait
out
push
cmp
push
add
mov
push
add
jae
lods
lahf
loop
jne
adc
jg
add
test
fild
xor
and
loopne
les
out
das
cmp
adc
test
gs
(bad)
xchg
aam
push
jns
jmp
addr16
mov
out
xchg
ja
aaa
inc
mov
sub
xchg
xchg
shr
jo
pop
xchg
push
push
push
jl
sub
push
bound
test
mov
inc
sub
hlt
jo
xor
add
jns
mov
pop
mov
sub
adc
mov
out
idiv
jo
sbb
sub
or
and
push
pop
mov
sti
jl
mov
retf
pop
mov
sbb
cmc
xor
xlat
add
in
jo
loopne
inc
xor
jns
and
adc
mov
shl
sub
mov
dec
shl
push
mov
stos
enter
shr
ror
push
jns
in
fisub
xor
enter
std
xchg
and
ret
lods
mov
cmc
push
(bad)
aam
gs
jne
fidivr
pusha
iret
jbe
sub
rcl
rol
push
jbe
into
fs
es
jnp
mov
aam
repz
lahf
jae
adc
mov
mov
sahf
mov
sub
cmp
jno
xchg
cmp
xor
mov
jg
xchg
lds
(bad)
sub
adc
push
aas
out
bound
sbb
pop
xchg
cdq
mov
hlt
jne
sub
sub
loope
push
push
jne
push
sbb
jne
shl
or
popf
push
daa
nop
xchg
jmp
sub
push
xor
das
jae
mov
pop
and
sub
mov
imul
mov
retf
ins
sahf
fidivr
jle
xor
clc
or
and
jmp
pop
iret
aad
jae
mov
mov
or
xchg
mov
fsubr
cs
jbe
sbb
lock
jp
fs
sahf
dec
gs
jnp
imul
pop
inc
cmps
popa
dec
mov
mov
jnp
jmp
je
adc
repz
mov
add
cmp
test
add
clc
push
js
test
sub
outs
jmp
mov
xchg
xor
mov
jne
call
fs
imul
mov
jnp
cmps
data16
cmp
sti
pop
sub
mov
in
adc
dec
scas
fwait
retf
into
inc
rcl
dec
cs
lods
mov
cmp
retf
mov
aaa
mov
fnclex
stc
fdiv
jb
data16
rcr
mov
xchg
or
and
and
mov
push
mov
push
repz
mov
mov
clc
movs
das
jp
mov
idiv
or
imul
test
mov
gs
jmp
jbe
pop
(bad)
retf
ins
xchg
sahf
xor
dec
fistp
fadd
test
jnp
mov
out
(bad)
xlat
add
scas
es
jmp
punpckhdq
out
add
and
xlat
jmp
inc
xchg
and
lock
jns
call
dec
xchg
out
scas
push
dec
push
add
adc
aas
push
pop
std
xchg
cmp
push
or
lock
or
loope
lock
popf
push
(bad)
call
nop
cwde
pop
push
dec
pusha
sti
pop
cmp
add
fld
or
xchg
xor
or
das
cld
aad
jae
xchg
sbb
call
cmp
out
add
dec
dec
sbb
call
or
jmp
mov
xor
push
cld
adc
and
pop
sbb
leave
and
xchg
cmp
dec
mov
icebp
hlt
or
out
cmp
jo
cmp
inc
nop
mov
xlat
mov
cmc
lahf
addr16
fld
jnp
mov
stos
(bad)
pop
pop
or
jne
cwde
dec
out
jae
push
retf
rcr
push
fisttp
mov
cli
jbe
jns
loope
outs
inc
inc
not
add
pop
xchg
addr16
push
adc
sbb
inc
adc
adc
shr
xchg
mov
mov
jbe
ret
in
imul
data16
adc
(bad)
in
sahf
jae
ja
adc
sbb
cmp
pusha
clc
lea
jnp
push
popa
bound
ins
leave
sar
jae
call
out
dec
sbb
dec
sbb
lods
vmread
dec
fnstsw
pop
mov
int
adc
mov
fstp
jge
xor
inc
xchg
xlat
xor
icebp
ins
pusha
outs
(bad)
mov
adc
movs
or
pop
jp
data16
(bad)
pop
cmps
xor
jle
sbb
pop
and
test
in
jne
(bad)
cwde
(bad)
or
loopne
dec
ins
out
daa
and
push
jns
out
inc
in
dec
je
push
dec
sbb
pop
and
pushf
hlt
sbb
int3
and
push
pop
and
push
dec
movs
mov
jo
int3
sbb
aad
js
lahf
sbb
pop
(bad)
scas
test
xchg
mov
jge
sbb
fnsave
push
cmp
addr16
adc
push
xchg
xor
clc
scas
aam
sbb
jo
shr
repz
repz
push
cld
inc
mov
pusha
out
and
mov
stos
imul
cld
into
in
jnp
xchg
fistp
mov
cli
jno
dec
or
ret
xchg
outs
sub
mov
sub
and
cli
xchg
or
xchg
pop
xor
xor
ror
pop
xchg
jmp
shl
mov
shl
test
inc
imul
jae
mov
push
add
rol
jns
ror
pop
adc
jmp
push
cmp
daa
xchg
xchg
stos
fcomi
jge
(bad)
mov
dec
push
fsubr
mov
in
cmps
arpl
stos
mov
push
lods
adc
jo
test
mov
inc
fsubr
mov
xchg
lods
xor
lods
cld
hlt
sbb
sub
je
jnp
pop
cli
popa
cwde
cdq
xlat
add
movs
sbb
xor
enter
cmps
fistp
dec
cmps
leave
shl
push
push
into
mov
jae
sub
xchg
popa
aam
mov
cmc
ins
jg
mov
(bad)
fwait
push
sbb
cmps
or
xchg
and
mov
int3
xor
dec
pop
nop
popf
ss
cld
inc
outs
mov
jl
fcmove
test
xchg
push
out
push
ss
mov
jnp
icebp
ja
(bad)
sub
(bad)
bound
cmc
hlt
jecxz
and
loope
sbb
jg
mov
stos
adc
sbb
sbb
push
(bad)
mov
in
loope
unpcklps
mov
mov
(bad)
cld
pop
dec
and
mov
(bad)
cs
cmp
aas
jns
push
mov
shl
loop
mov
xchg
lahf
(bad)
in
sbb
nop
imul
xchg
cmp
cli
repnz
pop
mov
push
scas
xchg
pop
adc
jae
sbb
xchg
mov
imul
loopne
mov
and
std
push
jo
dec
push
rcr
cld
and
pusha
cmp
imul
dec
jb
ret
add
jae
shl
jecxz
inc
push
mov
enter
retf
sbb
cld
imul
mov
test
or
call
dec
push
in
sub
xor
add
stc
ins
addr16
or
fldenv
imul
nop
xchg
xchg
ds
cmp
dec
adc
mov
sub
hlt
ret
fisttp
jae
(bad)
out
dec
mov
or
push
call
mov
cmp
and
into
mov
fistp
leave
je
jbe
add
dec
sub
fs
hlt
mov
outs
out
mov
pop
pop
jmp
and
rcl
cmp
outs
clc
rcl
out
jne
movs
mov
mov
ret
sbb
mov
(bad)
sub
idiv
loopne
and
stc
cmp
pop
pop
repz
pop
das
xchg
mov
sbb
add
call
repnz
sbb
hlt
in
add
test
fild
dec
mov
adc
les
cli
xor
outs
mov
outs
push
push
movs
and
shr
ficom
jp
xchg
jge
or
and
daa
jne
sbb
bound
xor
pushf
jne
pop
(bad)
push
stos
mov
and
pop
(bad)
lods
loopne
ror
call
xchg
icebp
jne
mov
sahf
sub
jns
cs
xchg
xchg
cmp
mov
mov
jmp
mov
add
xor
(bad)
push
loop
mov
xchg
mov
enter
and
outs
idiv
adc
push
add
icebp
mov
jp
xchg
ds
ss
push
lock
jmp
cdq
movs
and
pop
dec
addr16
repnz
pop
xlat
xor
inc
xlat
and
push
cmp
jns
xchg
mov
shl
outs
xor
cmp
test
jl
in
cmp
jge
cmps
pop
xchg
cs
xchg
xchg
mov
sub
jns
or
cld
es
pop
movs
lahf
fcom
aam
xchg
push
adc
fisttp
clc
data16
xchg
pop
out
lods
lds
out
call
addr16
sbb
stc
scas
sbb
mov
cmp
or
icebp
jno
xor
xchg
(bad)
adc
lock
cmp
add
dec
outs
pop
in
adc
inc
sub
cs
sbb
mov
in
div
fnstcw
test
icebp
in
test
jns
ret
cmp
or
sub
nop
lock
(bad)
jb
test
shl
imul
jbe
mov
and
in
mov
jns
inc
mov
pop
shl
cmp
add
inc
and
mov
xor
aam
cmp
and
leave
outs
mov
pslld
mov
int3
out
dec
mov
push
ins
push
xor
adc
loope
in
dec
mov
xchg
mov
and
dec
test
jp
xchg
mov
pop
add
mov
dec
pop
push
pop
jne
mov
sub
cwde
sbb
xchg
gs
mov
jo
mov
mov
xor
push
or
test
pop
adc
inc
adc
adc
pop
push
jg
clc
and
jge
pop
rcl
movs
jae
xchg
dec
loope
or
jne
test
mov
mov
aam
test
(bad)
push
icebp
pop
dec
mov
mul
cmp
dec
fiadd
mov
mov
xor
fnstsw
ins
ret
mov
and
mov
xchg
ins
inc
pop
cs
xlat
aad
inc
push
push
push
xor
xor
pop
imul
movs
cs
pusha
jmp
xchg
push
fisub
jae
jecxz
cs
push
or
cmps
std
iret
or
ins
mov
js
cdq
xor
mov
jp
and
aaa
pop
xor
fsub
rcr
push
leave
mov
jmp
rol
in
stc
mov
push
gs
or
add
dec
push
jmp
mov
daa
mov
bound
or
imul
and
sub
or
xor
mov
pop
pop
xchg
ds
int3
int
stos
std
repz
push
scas
inc
mov
sbb
xor
sub
ret
mov
movs
jmp
sub
xor
out
data16
cmp
sbb
std
jns
push
jns
dec
or
call
call
push
in
xchg
push
test
xchg
mov
icebp
jl
jmp
mov
fdiv
in
pop
sti
pop
push
xor
cmps
xchg
jne
push
xor
sbb
xchg
retf
dec
(bad)
call
jecxz
cmc
(bad)
out
cmp
ret
or
daa
sub
in
mov
stc
pushf
cwde
cld
add
arpl
cmp
mov
out
pop
fcom
dec
ins
jge
aas
push
add
adc
mov
ret
cmp
mov
inc
mov
pop
cmps
mov
mov
mov
stos
push
mov
movs
fs
sbb
xchg
mov
jae
inc
push
shl
jb
adc
add
ret
fcmovb
add
in
addr16
push
push
(bad)
jmp
lods
cmp
leave
xchg
xchg
push
ja
adc
jb
adc
call
and
mov
cld
cwde
(bad)
push
sub
push
xor
bound
ror
(bad)
mov
mov
push
add
aas
in
outs
xchg
jb
and
sbb
data16
std
jmp
retf
stos
or
xor
outs
xchg
inc
out
jnp
or
fnsave
add
add
cmps
cmp
js
mov
push
mov
and
js
adc
test
mov
sbb
mov
jl
stc
and
aaa
sbb
les
ror
xchg
test
fdivr
idiv
cld
in
cmc
adc
sar
pop
mov
bound
js
leave
sbb
adc
xor
pop
adc
mov
fidivr
ret
js
or
and
cmp
movs
mov
rcl
cli
ret
fs
xchg
out
mov
cwde
jg
xchg
call
dec
inc
jp
dec
sub
sbb
pop
sub
dec
movs
je
repnz
add
div
sub
pushf
adc
(bad)
xor
test
cmp
sub
sbb
or
sub
mov
adc
mov
adc
cld
ret
mov
clc
adc
outs
add
mov
aas
mov
jne
fistp
adc
repz
mov
mov
push
addr16
in
mov
cs
dec
add
jne
lea
sahf
pop
mov
pop
push
fidivr
ds
push
inc
xor
(bad)
pop
nop
out
jae
icebp
and
fs
sub
adc
push
popf
(bad)
push
ja
sub
aam
jge
int3
dec
mov
mov
(bad)
push
push
popf
sbb
(bad)
fdivr
mov
xor
dec
emms
xchg
cmp
jbe
outs
push
ror
aam
or
shl
push
je
push
fcomp
out
rep
xor
gs
into
push
push
loop
xchg
cmps
fdiv
xchg
adc
jno
daa
sbb
sub
add
pop
repnz
mov
mov
xchg
mov
lock
lods
sbb
hlt
in
mov
push
test
jo
adc
adc
xor
push
enter
push
ret
adc
and
jg
and
call
push
rol
push
pop
mov
fsub
push
(bad)
movs
jo
add
loopne
add
icebp
in
int3
jb
mov
repz
out
cmp
sbb
inc
lods
test
test
push
add
test
js
inc
cmp
std
push
into
push
or
retf
(bad)
std
in
pushf
mov
sub
cmc
mov
add
loope
stc
ds
ja
xchg
jecxz
push
hlt
xor
and
push
pop
in
test
fist
nop
mov
jns
mov
xlat
outs
repnz
jae
xchg
jno
push
mov
cmp
gs
cmp
in
push
or
rep
push
ss
sub
jne
(bad)
popa
mov
sub
dec
jp
adc
xchg
mov
adc
ins
imul
fcomip
in
dec
or
xor
(bad)
pushf
fisubr
adc
jecxz
loope
mov
mov
jno
(bad)
mov
pop
or
sub
loope
hlt
mov
mov
je
out
js
or
xor
and
push
push
scas
and
repnz
int
clc
out
icebp
je
pop
dec
clc
(bad)
(bad)
push
dec
aas
retf
rcr
enter
shl
or
push
push
loopne
cmps
rol
adc
pop
jae
mov
test
cmp
dec
inc
xor
pop
mov
xchg
std
fld
xlat
shl
mov
arpl
jmp
xor
movs
call
cmc
cmp
cmp
mov
jle
xor
rol
repz
mov
out
ss
mov
mov
sub
int3
adc
out
cmc
fstp
and
das
inc
adc
out
mov
mov
leave
or
mov
cld
pusha
and
pushf
push
sar
addr16
push
xor
cwde
in
jo
aad
bswap
inc
mov
into
repnz
rol
cmp
std
sbb
push
les
icebp
in
push
pop
pop
push
mov
loop
sar
pop
sub
movs
js
xchg
stc
jle
in
in
push
mov
outs
mov
push
mov
xchg
dec
data16
mov
out
mov
fmul
jp
xchg
leave
out
mov
shr
arpl
pop
sub
mov
inc
sbb
out
jbe
ss
das
(bad)
mov
push
test
test
push
xor
pushf
sbb
inc
xor
push
cmp
xor
sbb
aam
out
inc
sub
xchg
shl
lods
sub
js
shl
repnz
mov
jnp
push
popa
xchg
push
pop
or
int3
stos
xchg
mov
jg
ret
xchg
sar
mov
test
push
cmps
popf
adc
jp
les
jb
test
xchg
fisub
xor
test
push
int3
mov
mov
inc
xchg
retf
sbb
dec
daa
mov
into
dec
js
in
loope
into
out
sub
shl
or
pop
jo
movs
fist
test
or
hlt
dec
or
fiadd
cmp
fsubr
cmc
mov
ficomp
pop
inc
xchg
cmp
inc
xchg
mov
test
fldenv
pushf
sub
lds
ja
cmp
mul
les
dec
aam
dec
retf
aaa
jne
sub
mov
dec
xchg
xchg
cmp
adc
inc
ja
popa
aam
xchg
jp
ja
mov
sahf
push
push
inc
repnz
jge
add
mov
cmp
loop
jg
dec
iret
stos
stc
push
rol
dec
data16
mov
jnp
dec
popf
data16
push
xchg
fimul
std
xchg
xadd
jae
cmp
dec
daa
adc
popa
xchg
mov
xchg
loop
mov
inc
dec
shr
inc
jne
adc
pop
adc
ret
cmp
inc
mov
adc
add
mov
mov
jno
(bad)
(bad)
adc
xchg
mov
loope
dec
pushf
push
mov
repz
mov
js
sub
cmp
mov
pop
pop
retf
cmp
mov
js
cmp
mov
sbb
jae
sub
sub
xor
add
mov
out
or
mov
mov
jp
jae
push
ret
mov
popf
jmp
fcomi
(bad)
out
mov
jae
call
call
pop
push
je
rcl
std
xchg
lods
daa
jne
pusha
lahf
and
pop
pop
in
sbb
stos
mov
mov
jo
test
xor
xchg
aas
mov
out
rcr
mov
retf
xchg
sbb
ins
add
jge
push
jmp
jbe
ret
les
lods
mov
pusha
sbb
test
repnz
mov
cmp
gs
ror
arpl
test
stos
pop
sbb
sbb
xchg
(bad)
inc
jmp
mov
mov
push
pop
mov
sbb
push
push
jnp
out
das
pop
aam
pop
dec
jbe
in
xchg
repnz
cmp
shr
mul
fwait
sbb
or
fdivr
xchg
test
pushf
daa
fmulp
jne
call
enter
std
div
in
mov
in
jnp
inc
leave
stc
add
lds
cmp
lods
jge
adc
jp
test
push
push
inc
(bad)
jg
jle
hlt
outs
into
pop
mov
xor
sub
pop
(bad)
mov
call
(bad)
dec
jp
aam
das
cs
test
mov
idiv
adc
neg
sub
fwait
call
xchg
mov
sbb
push
xor
push
dec
imul
adc
out
shl
je
sar
leave
inc
outs
ret
sub
jmp
mov
jge
(bad)
push
fisub
jl
loop
inc
pop
xchg
push
stos
jne
movs
out
and
daa
fs
xchg
xor
nop
jbe
push
lahf
icebp
push
rcl
pop
lock
cmps
mov
xchg
mov
mov
push
repz
mov
popa
jle
inc
or
dec
mov
mov
inc
cld
stc
add
and
mov
adc
push
je
mov
ja
cdq
pop
jae
sub
or
scas
cmps
xchg
outs
cmp
xor
push
iret
mov
push
mov
cld
cmp
mov
jp
and
sti
cmp
add
pushf
dec
mov
and
sbb
adc
or
out
push
pop
ins
cmps
push
movs
mov
push
inc
mov
lss
fcmovb
inc
aas
jne
call
xor
pop
inc
xchg
adc
mov
pop
jl
cs
les
pop
icebp
xor
je
dec
jnp
jle
and
pop
(bad)
in
jg
ffree
cmp
cld
adc
pop
pushf
sbb
fwait
cmp
rol
hlt
mov
or
aad
arpl
je
mov
sub
outs
pop
dec
xor
cmp
sbb
mov
cmps
jg
rcr
mov
mov
cdq
jnp
mov
lods
pop
cmp
not
or
scas
out
jns
or
fdivr
jmp
and
or
jge
pop
push
loopne
inc
sub
xchg
jp
mov
jp
retf
xlat
call
sub
js
sar
pop
jp
je
popa
mov
js
push
or
fld
idiv
or
mov
retf
adc
jae
inc
push
cld
xchg
mov
xchg
push
pop
jnp
or
push
pop
xor
sub
jno
rcl
test
xor
pop
das
mov
push
out
cld
xchg
jno
jl
xchg
inc
loop
dec
imul
and
pop
mov
fld
and
xor
js
scas
imul
outs
out
jmp
paddsb
mov
cmp
mov
sti
pop
mov
inc
shl
jecxz
mov
test
clc
jmp
push
js
adc
out
jb
or
stc
push
movs
pushf
lahf
in
fild
mov
ret
arpl
push
pop
dec
jecxz
sahf
mov
xchg
popf
xchg
sub
(bad)
movs
jecxz
cmp
xchg
push
pop
mov
out
jge
gs
sub
in
aam
mov
dec
dec
out
add
pop
nop
jge
int
xchg
not
cdq
je
mov
add
cmc
jne
mov
or
fist
cmp
cmp
push
outs
mov
fisttp
cli
ret
add
push
fdiv
shl
das
xchg
pop
shl
sbb
lock
mov
ja
jne
or
cmp
fdiv
xchg
push
xor
pop
retf
sub
sbb
and
popf
xor
aas
mov
lea
arpl
stc
cld
stos
xor
jg
and
jle
inc
jae
pushf
cdq
mov
jns
lods
dec
jp
adc
lea
push
sub
jbe
push
mov
jmp
outs
outs
out
daa
test
push
sub
jne
pop
loope
hlt
mov
and
cld
pop
mov
pop
bound
in
dec
outs
or
dec
inc
jb
movs
rcl
xchg
aam
add
dec
outs
ins
test
jns
(bad)
xchg
sub
add
dec
jo
push
js
or
pushf
in
cmp
xchg
jo
fadd
ja
mul
jg
lea
and
cmp
push
(bad)
cs
jg
test
adc
xchg
inc
nop
cmp
lods
xorps
mov
pop
sub
jg
sbb
adc
je
ret
and
mov
aam
push
outs
xchg
sti
loope
push
test
shl
fadd
xchg
sbb
mov
inc
mov
out
and
jmp
jg
rol
dec
add
(bad)
mov
push
out
sub
jp
call
cmp
push
sub
sub
mov
sub
test
push
mov
jbe
sbb
out
shl
push
ret
(bad)
mov
aad
jno
adc
mov
push
mov
stos
xchg
mov
ret
lock
inc
cmp
and
pushf
add
leave
in
lock
shr
repz
push
movs
fadd
cmovl
push
aaa
jno
push
xchg
lock
add
pop
sbb
fisub
add
xchg
push
test
add
lock
jge
es
pop
fisttp
out
mov
stos
push
dec
pushf
icebp
inc
cld
jb
cmp
jae
xchg
xor
fst
adc
(bad)
(bad)
push
push
in
in
adc
mov
and
test
mov
jae
pop
ja
sub
repz
xlat
dec
mov
xor
leave
rcr
inc
xor
push
mov
lock
je
shr
out
cmp
sbb
sub
div
or
sub
push
push
dec
test
retf
loop
xchg
xor
idiv
clc
xchg
test
les
lods
stos
push
std
je
jge
jg
cmpxchg
sub
and
mov
push
push
xchg
sbb
jl
and
or
in
(bad)
hlt
outs
rcr
popa
sbb
ficom
js
jg
iret
pop
(bad)
in
loop
retf
mov
jle
movs
dec
ss
inc
sub
mov
aad
push
in
xchg
inc
in
mov
mov
pop
mov
jne
cmp
add
retf
loope
loopne
adc
jmp
outs
repz
mov
aam
(bad)
pop
fcom
fstp
cs
mov
cmp
pop
jb
(bad)
cmps
cmp
sar
arpl
icebp
adc
xchg
(bad)
sub
inc
mov
in
mov
push
mov
pop
pop
mov
mov
outs
aam
xchg
ins
and
repz
or
adc
repnz
xchg
in
sti
(bad)
xchg
inc
lods
jp
ror
leave
ror
pop
fmul
ficomp
mov
push
jae
dec
jns
outs
mov
add
jge
sub
push
cmp
call
cmp
es
js
cmps
out
retf
push
xchg
cmc
cmc
mov
daa
cmp
fldcw
jae
loopne
jnp
xchg
pop
push
mov
scas
pop
(bad)
xor
push
jb
inc
sub
adc
lods
and
jle
and
pop
inc
int
sub
je
out
jmp
xchg
lds
sbb
inc
and
pusha
ret
dec
in
jo
sahf
dec
and
cmps
stc
or
mov
ins
and
cmp
jg
fnstcw
mov
pusha
shl
jb
or
mov
sub
es
test
push
je
add
loop
mov
xchg
das
es
mov
fistp
xlat
call
cmp
push
movs
push
push
cmp
xor
xor
ret
lods
cmp
cwde
aad
div
jecxz
xor
imul
jns
or
inc
leave
ins
inc
stc
inc
push
push
pop
sbb
mov
in
jp
adc
imul
(bad)
in
fmul
les
lods
push
pop
mov
in
adc
jp
xor
sbb
rcr
imul
xor
adc
mov
sahf
mov
sub
mov
fcmovbe
in
jnp
jl
xchg
retf
fisttp
jp
gs
and
mov
js
loopne
sub
imul
fidivr
js
mov
xchg
dec
push
es
imul
stc
add
dec
sub
cmp
inc
pop
cmps
stc
rol
xchg
lock
inc
adc
and
ss
into
ds
pop
xchg
lods
stc
ins
js
pop
inc
popa
mov
dec
adc
dec
gs
loopne
push
stc
stos
jne
mov
push
scas
scas
dec
repnz
in
retf
movs
mov
dec
xchg
xor
loop
and
jno
push
fs
sbb
mov
sub
mov
call
sub
adc
fs
jo
mov
and
jnp
adc
adc
mov
sub
and
push
js
(bad)
jp
aam
out
mov
and
xor
sahf
and
sub
inc
fadd
and
pushf
xchg
mov
das
pop
xchg
lods
ror
or
test
inc
clc
xchg
(bad)
(bad)
and
sub
push
(bad)
mov
pop
jae
ret
jno
fidivr
loop
cmps
and
aas
mov
xlat
pop
cmps
mov
mov
xchg
nop
inc
push
js
(bad)
std
xchg
jbe
jp
sub
cmp
cwde
fsubr
addr16
mov
call
retf
dec
and
int3
push
pop
call
jbe
test
lds
inc
arpl
adc
cmps
jns
push
shl
push
in
jmp
sbb
xor
jnp
xlat
adc
push
cmc
inc
in
fcomip
pop
and
jge
sub
mov
cwde
xchg
sub
mov
int
ds
cmp
jle
mov
rcl
jnp
out
jmp
cld
dec
sbb
ret
and
cld
adc
mov
adc
nop
dec
xchg
bound
ins
jo
lods
jne
cmp
ror
fs
and
and
sbb
daa
adc
xchg
xor
int
mov
movs
loopne
pop
jg
or
inc
in
xchg
dec
out
lods
push
push
adc
test
cmp
imul
adc
mov
(bad)
aaa
sbb
lods
test
xchg
push
mov
hlt
sub
in
pop
mov
xchg
sbb
jo
jl
fidivr
cmp
xchg
jns
test
and
xchg
ror
or
test
enter
call
cmp
xchg
(bad)
mov
dec
sub
cmp
xor
pop
sbb
mov
inc
pop
scas
gs
inc
xor
push
sub
int3
rcl
inc
pop
je
retf
pop
aas
es
mov
sub
jae
mov
pop
xchg
jno
mov
xchg
mov
mov
mov
test
jp
xlat
in
jb
push
pop
movs
xor
jne
mov
adc
and
inc
in
pop
cmp
sub
jmp
mov
push
ja
mov
pusha
xchg
lods
sbb
add
jo
bound
pop
jo
sub
push
sbb
push
xchg
nop
mov
add
out
in
jg
or
jne
xchg
cs
lea
sub
push
enter
xor
cld
and
xor
es
add
push
add
inc
outs
shl
jbe
xlat
push
popf
and
loope
dec
and
xchg
push
(bad)
aad
cmp
cmp
neg
stos
int3
clc
retf
ret
sub
(bad)
ins
or
fsubrp
imul
loopne
hlt
adc
cmp
xchg
sub
sbb
push
sbb
out
and
dec
rol
les
xor
addr16
out
mov
xor
sbb
into
and
xchg
dec
wrmsr
outs
stc
push
mov
les
mov
xchg
shl
sub
cmc
mov
lock
jmp
and
push
sub
retf
in
sti
adc
push
push
(bad)
ret
mov
cmp
push
jmp
adc
add
in
popf
fadd
cmp
cli
xor
fst
fiadd
out
jnp
push
fldl2e
pop
and
xor
mov
int3
jmp
jg
ins
mov
push
xchg
mov
jl
out
and
nop
movs
sahf
cmp
pop
movs
pop
inc
outs
stos
sub
push
jmp
dec
pop
nop
mov
xchg
div
js
push
mov
ss
ffreep
std
add
pop
add
loopne
inc
in
sub
(bad)
mov
sub
mov
push
jb
test
or
add
jg
lea
push
call
out
pop
inc
ret
pop
data16
jo
imul
mov
pusha
sbb
jo
xchg
loop
pop
arpl
sub
cmp
icebp
mov
cmp
xchg
jne
xchg
sbb
jp
lock
dec
xchg
in
jle
test
and
shr
cmp
scas
jg
mov
inc
mov
sub
mov
xchg
(bad)
retf
adc
bound
cmc
jmp
pop
push
sub
iret
sbb
scas
mov
jo
jg
push
in
xchg
jecxz
outs
pushf
and
adc
movs
loopne
inc
cmp
cmp
xor
inc
xor
xchg
jp
mov
outs
xchg
push
inc
ja
pop
and
jne
or
push
xor
mov
fist
push
and
add
mov
adc
xchg
fmul
add
pop
fnsave
sub
inc
imul
loop
(bad)
hlt
loope
mov
lds
fistp
pop
inc
jle
add
lock
dec
and
bound
dec
std
xchg
mov
push
mov
pop
pusha
jge
push
sbb
jbe
popf
repnz
call
mov
adc
cs
out
in
int
jb
xchg
jle
mov
movs
icebp
pusha
jl
aas
lahf
fdivr
jns
fistp
int3
ins
ret
(bad)
or
jmp
test
push
(bad)
push
pop
push
mov
das
iret
icebp
daa
jmp
fisttp
in
jo
fdivr
repnz
add
pop
test
in
test
retf
lods
inc
sub
xchg
hlt
mov
mov
adc
xchg
add
fcomp
ja
sbb
mov
mov
mov
out
out
fild
and
push
add
dec
cmp
mov
movs
push
imul
ins
sbb
jge
out
outs
cmp
push
sub
out
enter
repz
mov
xor
mov
dec
fimul
scas
data16
data16
ret
ret
mov
test
xchg
aas
ret
outs
out
mov
(bad)
ds
xchg
(bad)
mov
in
imul
(bad)
js
inc
fs
sub
test
ja
mov
repnz
pop
pop
sti
lea
mov
add
out
mov
push
cs
bound
aam
dec
iret
sbb
ret
jb
xor
jmp
mov
adc
nop
imul
pop
mov
add
dec
repz
repnz
xchg
sbb
pop
adc
lds
mov
cmp
stc
adc
ror
rcl
jl
icebp
in
scas
ss
adc
push
inc
mov
sahf
ret
pop
push
pop
sub
clc
inc
sbb
gs
jecxz
fsub
shr
in
push
sub
mov
arpl
xor
repz
std
fwait
dec
mov
xchg
push
cli
push
xchg
sbb
jp
pop
xor
fldcw
sub
pop
bound
add
sti
jmp
outs
lods
cmp
xchg
fbstp
add
xor
iret
cmp
pop
test
aaa
mov
mov
in
jo
scas
out
jne
xchg
mov
(bad)
imul
neg
push
ret
and
mov
push
or
inc
cmps
stc
mov
push
inc
mov
dec
sub
pop
sti
jmp
jno
js
add
push
dec
or
imul
xchg
lahf
test
push
ins
dec
or
push
push
and
or
mov
retf
icebp
mov
sbb
ds
loop
into
enter
or
aad
fadd
stos
aam
sub
mov
test
(bad)
push
dec
ss
repz
cmps
xchg
xor
adc
add
inc
or
xor
fsub
fistp
pop
ds
sbb
cmp
movs
xchg
cmp
(bad)
es
xchg
int
imul
sbb
jp
dec
mov
jmp
dec
push
icebp
sahf
mov
iret
shl
ds
out
not
push
jb
mov
xchg
cmps
int
rol
pop
sub
fistp
jmp
fnstcw
or
jmp
cwde
into
cmc
dec
push
or
and
pusha
ret
mov
stc
loope
enter
adc
and
dec
lds
ja
adc
sub
jno
adc
inc
adc
and
lds
push
sub
ret
xor
test
mov
fsubr
jmp
mov
shl
jg
sbb
add
cmp
and
inc
inc
(bad)
push
or
jae
jl
cli
out
sbb
int3
das
jp
add
std
loope
add
and
adc
ror
shl
aam
cli
test
push
out
push
mov
xchg
jne
jo
in
pop
mov
jae
adc
inc
mov
jnp
mov
push
mov
sbb
push
ror
push
push
jbe
loop
out
ins
inc
fstp
(bad)
mov
out
in
out
mov
push
iret
aas
or
mov
stc
data16
into
cld
cmp
addr16
xor
scas
ror
pop
sahf
jge
hlt
push
in
ins
retf
cmp
loope
lock
push
movs
push
or
aad
mov
sbb
popa
xchg
fs
adc
push
sbb
cmp
ss
mov
push
fbld
les
loope
rcl
add
mov
mov
sbb
push
dec
add
aad
dec
push
paddusw
xchg
fwait
jp
adc
and
rcr
add
jae
mov
mov
aaa
scas
sti
inc
mov
clc
mov
das
xchg
cwde
repz
sub
mov
xchg
cmp
out
gs
pop
test
cmp
and
into
push
mov
jae
dec
dec
jbe
bound
push
xchg
pop
mov
ins
cmp
pop
repz
xor
loope
cdq
mov
xchg
aas
dec
cmps
dec
xor
sbb
adc
jmp
mov
ret
ficomp
js
sub
icebp
rcl
aam
and
repz
inc
push
(bad)
fcmovb
push
sahf
ins
jmp
rol
in
(bad)
dec
mov
mov
sbb
sub
outs
jnp
xchg
adc
ss
aas
ret
dec
mov
inc
cmp
cmc
adc
lods
loop
push
outs
mov
aam
daa
ins
or
sbb
mov
jns
mov
lock
xchg
push
out
lods
(bad)
fucomip
lds
hlt
cs
dec
xor
std
addr16
pusha
xchg
and
or
hlt
jnp
jp
xchg
div
and
adc
gs
stc
mov
and
and
es
fist
cmp
pop
add
in
mov
jge
sbb
pop
out
fsub
adc
fwait
pushf
mov
leave
cmps
std
mov
dec
cmp
and
mov
fisubr
shl
inc
or
and
jmp
add
add
pop
sar
dec
xor
inc
imul
sub
mov
mov
jmp
adc
mov
cli
push
xchg
push
mov
movs
jle
and
dec
lods
repnz
or
cli
movs
jno
outs
js
pop
pop
jp
loop
cmps
xor
push
sub
push
push
mov
movs
pop
adc
jns
pop
or
fnstsw
xchg
mov
sub
lods
imul
sti
pop
or
or
add
adc
xchg
sub
sbb
fist
inc
aaa
(bad)
mov
dec
xor
test
sbb
xor
jo
jp
cmc
imul
mov
sub
scas
rol
dec
mov
sub
sub
xlat
jmp
inc
cmp
xchg
or
sbb
mov
test
push
mov
jne
xchg
jle
sub
add
or
shl
ja
dec
xor
imul
test
fisub
jl
je
(bad)
cli
test
cs
dec
outs
out
fs
pop
repz
ins
jb
jb
outs
movs
mov
jp
aad
adc
shl
cmp
stc
mov
adc
and
jb
push
pop
cld
outs
mov
les
jge
es
in
sahf
cmp
xchg
and
jne
sub
fsub
mov
add
mov
stos
xchg
(bad)
ins
nop
and
xchg
inc
push
push
jne
or
pop
add
adc
cwde
std
ret
mov
jecxz
out
dec
xor
dec
dec
stos
or
das
pop
and
and
add
xor
mov
test
jg
lea
out
mov
fsubr
cmp
inc
sub
add
in
nop
dec
(bad)
push
lods
cmp
and
pusha
mov
sbb
cli
pop
(bad)
jg
enter
jb
sbb
sbb
out
mov
jo
fs
cli
hlt
test
or
add
mov
je
jle
xor
adc
push
leave
arpl
sub
dec
ss
(bad)
pop
ret
fcmovnbe
rcr
std
mov
cmps
xor
sbb
popa
dec
loopne
les
imul
mov
ja
and
sub
addr16
ds
mov
jl
adc
jmp
ret
sub
aam
movs
jns
jl
xchg
cld
xor
stos
pop
xchg
xor
add
dec
repz
xchg
jp
add
xchg
mov
mov
push
xchg
loop
stc
add
popf
je
fsubr
iret
pop
shl
sar
ins
and
jg
mov
push
sbb
popa
sub
xchg
mov
dec
pusha
adc
je
cmp
icebp
shl
pop
iret
mov
dec
pop
lahf
push
stc
call
int3
add
pop
leave
inc
bound
inc
mov
jae
jl
les
jmp
jg
mov
push
pop
and
imul
and
rcr
xchg
jg
xlat
xchg
mov
fld
pop
(bad)
js
js
adc
jmp
pop
das
dec
into
cmp
push
jmp
add
jbe
sahf
pop
jne
cdq
test
das
cmp
jae
repnz
dec
inc
into
test
jbe
add
push
popf
hlt
jnp
xor
pop
int3
sbb
jnp
loopne
xor
mov
dec
nop
and
stc
sub
in
(bad)
pop
xchg
mov
ret
mov
(bad)
inc
pop
inc
lock
aad
outs
mov
out
hlt
arpl
ja
jl
aad
dec
retf
mov
ret
pop
inc
or
pop
push
add
fidiv
xchg
add
sub
and
jp
add
sub
push
lods
xchg
movs
pop
(bad)
jns
push
shr
js
dec
jae
in
loope
sbb
inc
or
jle
out
daa
add
xchg
cli
bound
sahf
clc
sub
xchg
cs
hlt
fnstsw
fisttp
inc
jnp
sar
ds
xchg
sbb
and
cmp
xchg
repnz
repz
add
pop
jp
jp
div
shr
mov
sbb
(bad)
mov
ja
idiv
jne
mov
and
(bad)
mov
push
lods
xchg
loope
cmp
adc
jnp
jne
and
mov
push
fwait
bswap
cwde
ret
pop
aas
enter
pop
jp
enter
mov
push
or
xchg
or
jb
data16
sbb
pop
pop
mov
test
jge
mov
retf
fnstenv
(bad)
loopne
(bad)
dec
jp
cmp
test
(bad)
shl
push
cld
lods
jge
xchg
and
add
mov
les
adc
(bad)
sti
pop
sub
out
cmps
fwait
out
lods
sahf
inc
pop
mov
xchg
add
in
mov
icebp
cmp
addr16
out
jge
jo
ja
mov
push
stos
loopne
xor
mov
pop
pop
jno
xor
adc
sub
cmps
imul
pop
push
fadd
mov
sub
jp
dec
pop
cmp
push
xchg
fwait
lock
test
push
repnz
call
pop
jmp
xchg
xor
imul
jge
jae
(bad)
xlat
sbb
aaa
jmp
mov
mov
mov
jp
in
jmp
mov
xor
or
jo
adc
clc
mov
jb
mov
xlat
daa
bound
(bad)
outs
imul
cmp
add
push
jl
je
addr16
clc
xchg
sahf
adc
into
add
lods
dec
jne
je
out
jp
std
mov
lods
inc
fadd
stc
(bad)
rol
sub
adc
cld
jne
xchg
ins
fld
enter
fs
xchg
push
add
ror
std
lods
popa
inc
jne
xor
push
jmp
mov
pusha
sbb
pop
lock
test
or
int3
sti
inc
and
sub
mov
js
pop
push
outs
cwde
sbb
jp
mov
stc
sbb
call
dec
adc
mov
(bad)
push
imul
jno
loopne
cli
inc
sbb
jo
(bad)
mov
sub
addr16
mov
cs
jns
aad
jae
sub
mov
sbb
inc
push
inc
inc
sbb
cld
adc
push
cmp
jne
sub
clc
std
jecxz
fst
cmp
cmp
aam
mov
lea
ins
push
jle
xor
jge
sar
pushw
adc
dec
shl
not
mov
out
cmps
inc
or
clc
in
jmp
popf
data16
out
sub
mov
xchg
test
mov
cmp
pop
in
dec
loopne
xchg
dec
test
je
retf
add
xchg
pop
stos
inc
jns
popa
int
daa
jne
cdq
je
ins
ficom
mov
pop
xchg
cmp
cmp
sub
push
pusha
xchg
mov
call
sbb
and
leave
(bad)
sahf
repz
and
mov
test
test
add
jne
sub
outs
adc
cmp
cld
jbe
ds
leave
pop
repnz
and
mov
clc
jmp
jp
test
mov
push
and
or
mov
push
shl
fadd
inc
mov
jmp
pop
rcr
(bad)
fdivr
dec
xchg
adc
mov
sub
mov
mov
mov
jmp
mov
push
enter
sahf
rcl
clc
icebp
dec
xchg
stos
and
iret
imul
dec
sbb
das
sbb
inc
push
aas
repz
jbe
inc
xchg
mov
js
daa
sub
adc
mov
cmp
or
sbb
mov
repnz
xor
xor
xlat
les
test
stc
fistp
ja
mov
popa
clc
fbstp
jmp
std
lds
lods
mov
xor
stc
iret
or
aas
cmp
adc
cmp
inc
adc
sub
in
push
outs
addr16
icebp
and
fldenv
jo
in
mov
sar
and
fs
cdq
pop
stc
int
cmp
xchg
mov
leave
scas
mov
jae
in
popf
xchg
out
es
out
jb
sub
pop
call
sti
and
in
sub
add
cmp
cli
mov
loope
dec
mov
stc
ins
push
adc
sub
jp
arpl
pusha
fwait
into
mov
mov
cmp
lods
popf
cmps
test
push
das
outs
ret
or
cld
jno
cmp
rol
retf
jmp
adc
mov
jne
and
lds
dec
add
into
or
enter
std
pop
inc
jb
fdiv
fs
jmp
sub
jl
loopne
lds
push
mov
mov
stc
sahf
out
(bad)
inc
ret
or
jae
xchg
fisttp
jne
xchg
mov
arpl
test
retf
dec
loope
mov
sbb
sub
stos
xchg
push
das
jmp
jge
nop
and
lds
aad
sub
and
sub
movs
jo
or
out
frstor
cli
mov
sar
hlt
push
retf
sub
fs
jno
xlat
outs
cmp
dec
add
and
out
jns
mov
mov
dec
stc
and
xchg
jbe
(bad)
jb
bound
jp
cmp
mov
rol
xchg
repnz
adc
push
mov
sbb
jl
sub
adc
mov
push
xchg
jp
fist
mov
imul
pop
adc
pop
pop
push
dec
jmp
lea
jl
stc
outs
out
nop
cs
shl
or
mov
ror
xchg
sub
jb
push
cmp
jmp
int3
jns
movs
pusha
xor
jns
pop
xchg
shl
push
jg
and
(bad)
ins
sbb
arpl
push
repnz
xchg
or
(bad)
fdivr
idiv
sbb
push
mov
cmc
adc
je
sbb
xchg
into
add
retf
jno
xchg
dec
fstp
dec
lock
rcr
in
pop
push
xchg
test
test
std
xchg
out
stos
jno
push
sub
ret
cmp
cwde
pop
ins
mov
jnp
fcom
xchg
jmp
jl
pop
pop
dec
fadd
push
mov
loope
aas
push
sar
inc
cmps
cli
mov
push
imul
mov
mov
dec
pusha
inc
mov
fadd
loope
dec
mov
mov
shr
fld
lahf
movs
sub
nop
stc
cld
xchg
adc
cmp
and
or
rcl
push
ficomp
into
xor
cmp
sahf
retf
int3
cmps
popf
cmp
mov
iret
cdq
sbb
mov
xor
cmc
dec
jg
rcr
xor
xchg
les
mov
jne
pop
inc
je
mov
xor
mov
or
sbb
lahf
mov
shl
xchg
js
out
adc
sub
repnz
sub
and
push
push
xor
out
pop
and
retf
jae
xor
std
stc
ret
sbb
dec
inc
xor
mov
imul
lahf
in
adc
jp
mov
lds
or
aaa
imul
dec
mov
xor
bound
jo
mov
push
les
jns
push
in
jle
or
mov
fisttp
imul
xchg
mov
adc
mov
imul
pop
cmc
mov
cmps
mov
rol
neg
movs
mov
sub
mov
mov
xchg
dec
ss
fdivr
push
sahf
xor
jmp
je
sub
jne
mov
sub
or
sub
(bad)
in
and
fnop
out
xchg
daa
mov
jg
call
test
xchg
adc
aam
jle
mov
movs
fadd
jo
sub
sub
and
dec
push
adc
nop
cli
mov
cmp
test
js
cs
add
jmp
iret
int
push
or
jbe
loope
xlat
in
scas
out
sti
leave
push
cmps
add
xchg
dec
and
adc
xor
fadd
clc
ret
mov
retf
into
mov
(bad)
out
clc
or
jle
jne
pushf
fs
in
cmp
push
mov
sbb
jns
cld
sbb
ret
test
jo
das
out
dec
cmovae
icebp
dec
pop
lahf
add
lds
jp
test
push
and
sbb
mov
adc
stos
push
fldenv
adc
mov
sbb
dec
sub
jmp
in
leave
adc
mov
imul
push
mov
jae
ds
or
mov
aas
xchg
outs
hlt
and
cmpxchg
push
retf
cmp
test
add
jne
aam
(bad)
xchg
pop
xchg
rcl
mov
fisttp
lock
jmp
xor
ret
jl
mov
jge
mov
repz
and
add
cmp
mov
jne
movs
js
outs
hlt
mov
mov
fdivr
jae
(bad)
ficom
inc
leave
or
xor
mov
js
or
ret
adc
pusha
mov
jmp
mov
push
nop
jmp
inc
cld
mov
push
pop
js
or
pop
xor
pop
ins
sbb
cdq
cld
icebp
fild
scas
push
mov
pushf
mov
call
fnstsw
jne
pushf
pop
jl
fisttp
cmp
sub
jo
jp
and
loope
das
add
mov
xchg
icebp
popf
jmp
mov
ret
ret
jns
hlt
and
pop
mov
mov
jo
sbb
adc
xchg
pushf
sub
cmps
nop
(bad)
icebp
cmps
and
mov
call
cli
or
inc
loope
aas
lea
(bad)
call
fild
pop
xor
jg
inc
mov
mov
jae
lock
lods
dec
jns
xchg
jnp
dec
mov
pop
push
fld
imul
push
and
loop
sbb
adc
je
xlat
les
int3
in
outs
fnstsw
mov
xor
push
lea
into
inc
cmc
out
mov
pusha
dec
adc
outs
jnp
xchg
popf
fadd
retw
aam
and
out
ret
cmp
inc
xchg
jo
jnp
mov
xchg
rcr
add
outs
out
xor
outs
mul
scas
lods
dec
and
cdq
lods
sub
add
les
mov
movs
jg
ins
xchg
adc
adc
xchg
(bad)
push
loop
jl
cmps
push
out
inc
lods
sbb
and
in
aaa
mov
call
(bad)
adc
js
jbe
jo
mov
sti
aaa
into
jge
xchg
mov
push
shl
xchg
sbb
jns
dec
mov
fisttp
pusha
cs
xchg
adc
jno
int3
pop
adc
adc
clc
mov
shr
sbb
hlt
fcomp
jns
mov
idiv
inc
fsubr
and
cmc
cmc
xchg
and
sbb
lds
dec
mov
push
dec
jge
cdq
jo
pop
xor
lods
pop
adc
cmp
jp
push
mov
mov
add
jnp
repnz
inc
jge
sub
cmp
sbb
push
and
cmc
hlt
shl
inc
vmwrite
es
inc
ss
sub
mov
popf
ror
dec
adc
movs
sbb
pop
jae
xchg
jg
jns
xchg
and
pop
cmp
push
cmp
jno
jnp
push
pop
lea
mov
sbb
adc
icebp
adc
lahf
jne
cmp
sar
into
test
mov
or
jge
jne
dec
arpl
push
sub
loope
repnz
loope
or
in
cmp
fcom
popf
adc
pop
stos
add
fldenv
pop
xchg
jae
repz
leave
dec
add
mov
xchg
xchg
enter
jle
jp
repz
or
mov
jo
xor
jmp
cmps
sub
test
clc
jne
ja
ins
nop
fiadd
xchg
pop
adc
(bad)
mov
fisttp
mov
xchg
and
and
fidivr
jne
in
or
mov
mov
and
or
in
mov
inc
xchg
sub
jmp
dec
jge
xchg
sbb
repz
pop
mov
test
cmp
sbb
cmc
xchg
sahf
cs
push
pusha
inc
scas
loope
aad
pop
push
lahf
push
mov
(bad)
fsub
aaa
test
ins
pop
push
sbb
mov
outs
push
addr16
fmul
in
loopne
xlat
or
push
jmp
and
cmp
xchg
mov
or
outs
mov
rcl
rcl
sub
push
jae
mov
sbb
repz
cs
mov
xchg
sbb
xor
cld
mov
inc
out
mov
out
loopne
pop
call
fs
hlt
int3
xor
ret
pop
dec
and
imul
(bad)
xchg
push
shl
jae
cmc
xchg
xor
inc
je
shr
jns
dec
loopne
dec
jns
out
std
ret
lock
and
gs
pop
xchg
xchg
xlat
cmp
fdivr
mov
ficomp
xchg
addr16
mov
les
jge
pop
dec
sahf
in
adc
imul
dec
xor
(bad)
sbb
jne
xchg
enter
stc
add
pusha
sbb
and
in
push
shl
jecxz
pop
add
sbb
dec
scas
xchg
std
or
mov
test
rcr
in
xor
cmp
data16
loope
sar
xor
mov
loop
out
lahf
std
mov
dec
je
inc
mov
not
cld
pushf
add
sub
cmp
adc
pop
cmps
fsub
(bad)
imul
xchg
stos
pop
jmp
and
push
neg
adc
retf
in
and
rcr
rcl
(bad)
xlat
mov
adc
lods
repnz
fs
pop
adc
call
js
sbb
outs
adc
xchg
shr
leave
adc
push
in
out
inc
sub
xchg
(bad)
and
xchg
outs
jne
inc
bound
sub
dec
xor
xchg
push
pop
jge
loopne
adc
dec
das
outs
jnp
inc
push
test
out
loopne
add
adc
jns
repnz
out
aaa
xchg
add
jo
scas
out
test
lds
(bad)
jno
push
xor
loope
or
add
les
add
shufps
rcl
cmp
jae
jg
int3
pop
or
sub
lods
enter
retf
arpl
jp
jg
jle
pop
test
(bad)
sar
das
pop
aas
push
pop
aam
xor
loopne
sbb
movs
daa
sub
pop
adc
xor
cmps
retf
in
hlt
xchg
mov
pop
stos
jne
add
push
popa
(bad)
jnp
xor
cmp
psadbw
das
outs
lods
mov
inc
stos
cs
call
fld
sbb
mov
mov
push
sub
jmp
out
cmp
jmp
jmp
rcl
movs
movs
dec
jecxz
pop
sbb
cwde
shl
mov
bound
push
jne
pop
push
je
sub
dec
cld
pop
push
aad
and
out
imul
cmc
into
jno
in
clc
mov
ret
inc
rcr
cmp
jno
adc
add
cwde
mov
sbb
push
mov
in
(bad)
cld
cmp
ror
xor
jnp
ins
jae
sub
cli
call
jo
in
fnstcw
inc
pop
pop
aaa
cmp
cdq
xchg
dec
fcom
xchg
sbb
push
mov
and
pop
or
push
push
aam
(bad)
sbb
mov
lods
mov
sbb
adc
adc
or
(bad)
jmp
and
push
push
xchg
in
mov
mov
push
inc
mov
xor
ins
aaa
out
stos
and
ret
(bad)
dec
jae
pshufw
sbb
push
hlt
ret
add
iret
inc
aam
xor
pop
jmp
rcr
adc
loop
sbb
cmp
push
pop
movs
(bad)
rcr
add
cld
adc
xchg
out
and
or
add
retf
adc
aam
in
xor
neg
sti
js
iret
or
stc
mov
sar
ja
adc
cli
inc
push
test
jl
adc
mul
inc
and
pop
and
xchg
cs
loopne
sub
sar
cld
cmp
xor
mov
xor
jg
test
daa
mov
repnz
aas
dec
loop
(bad)
out
jne
outs
cmc
jge
ss
sti
xchg
push
cmp
push
pop
idiv
test
xchg
es
mov
dec
lds
push
pusha
push
ins
jae
and
cmp
pop
xor
pusha
jb
dec
cmc
sub
fst
stos
or
icebp
jge
sahf
ins
push
gs
xchg
jge
jae
aad
jmp
js
cmp
inc
les
aas
dec
retf
adc
xchg
and
xchg
ins
cmp
xchg
pop
cmp
mov
mov
in
add
sub
jo
cmc
ins
xchg
dec
cmp
sub
sbb
pusha
jno
fidiv
inc
xacquire
outs
push
xchg
xchg
lock
push
xor
lods
sbb
mov
das
push
mov
xor
sbb
inc
hlt
jb
jp
push
lahf
pusha
loope
xchg
sub
jmp
jns
mov
jnp
cmp
adc
mov
cmp
mov
add
cmp
inc
out
or
pop
js
repz
pop
(bad)
jbe
or
sbb
cmp
add
add
repnz
repnz
push
xchg
xchg
pop
int
sub
cmp
jae
add
cmp
adc
mov
or
mov
or
mov
in
jle
fs
sub
aad
sub
jo
sbb
stc
mov
cmp
sub
xchg
in
push
dec
xor
adc
lea
sub
and
adc
xor
jno
xchg
adc
js
push
(bad)
jmp
out
and
push
inc
out
stos
addr16
xchg
push
ss
dec
scas
bound
in
inc
fwait
add
call
xchg
pop
add
shr
cmp
dec
push
dec
mov
pmaxsw
pop
push
int
std
jb
xchg
fucomp
outs
mov
jns
test
sub
fs
retf
mov
add
ins
pop
mov
push
not
xchg
sbb
jns
enter
sbb
add
ss
and
xor
mov
mov
imul
jne
das
push
lea
rcl
fstp
jo
shl
mov
out
enter
icebp
inc
data16
jmp
std
adc
ficomp
adc
fcom
int
push
aam
jge
xor
cmp
adc
push
and
jne
mov
fimul
xor
xchg
sub
jno
pop
xchg
mov
jmp
push
nop
jne
and
xchg
xchg
and
cmp
mov
dec
cs
mov
lock
xor
push
int
add
rcl
bound
sti
in
or
push
push
ja
clc
xor
or
xchg
test
pop
xchg
jo
or
sbb
shl
inc
fs
lods
scas
out
int
cmp
jne
outs
fidivr
mov
daa
xchg
lock
jnp
ret
out
mov
push
jns
gs
(bad)
dec
lds
std
xor
xchg
mov
mov
loope
mov
push
out
ins
cmps
aam
push
and
rol
mov
loope
mov
fs
aam
dec
sti
es
xor
stos
adc
test
jl
das
cmp
mov
mov
sub
(bad)
in
adc
sbb
jecxz
pop
fadd
mov
test
sub
stc
push
stos
pushf
and
jmp
ret
jp
dec
test
add
and
jmp
cmp
inc
xchg
or
dec
fs
sub
pusha
pop
fdivp
mov
dec
push
pop
xchg
call
std
shl
enter
cmps
jmp
outs
addr16
test
(bad)
fcomi
adc
jp
and
or
ja
ret
test
jbe
movs
les
loope
xchg
inc
xor
jo
cmp
cmc
movs
jae
xlat
arpl
seto
stc
pop
sbb
cmps
js
stos
out
fs
push
push
(bad)
cmp
loopne
xchg
mov
fcomip
imul
pop
jb
sbb
xchg
mov
lock
and
pop
sbb
popf
and
jnp
xor
cmc
lods
loope
mov
and
mov
sub
jne
cmp
cmp
xchg
adc
inc
std
mov
pushf
fild
push
xchg
ss
shl
jmp
and
push
and
ins
stos
pop
inc
rcr
push
mov
adc
push
js
or
cmp
push
push
adc
and
loopne
cld
pusha
into
popa
gs
mov
mov
xchg
inc
push
hlt
jbe
fld
cmps
jae
cwde
cs
bound
cmps
jle
or
dec
mov
mov
mov
and
push
ret
jle
pop
loope
movs
fbstp
cmc
add
push
xor
push
sub
push
mov
xchg
fdiv
add
pop
mov
push
sub
jo
ret
dec
jp
cs
jnp
xchg
sub
data16
daa
icebp
jns
mov
push
stc
cmp
mov
jmp
adc
cmp
mov
xor
adc
inc
adc
cmp
sbb
add
clc
dec
icebp
call
nop
sub
popa
adc
je
add
mov
pop
inc
xchg
cmp
add
mov
or
mov
mov
rcr
sub
push
mov
xchg
ins
bnd
icebp
mov
stos
mov
mov
mov
jecxz
adc
lock
fs
test
jo
jmp
xor
aam
das
dec
push
xchg
aad
(bad)
call
dec
xchg
xlat
adc
mov
int3
test
xchg
push
mov
rcr
ret
adc
pop
pop
lds
push
std
and
loopne
mov
dec
jne
pusha
xchg
popw
push
mov
outs
adc
je
das
add
nop
and
xor
std
in
cmp
pusha
lods
ins
jp
sub
and
(bad)
adc
push
xchg
arpl
push
shr
dec
test
retf
add
mov
mov
mov
push
add
mov
push
in
retf
ja
je
or
gs
mov
inc
bound
sbb
xchg
dec
pop
fs
dec
dec
imul
dec
jb
and
jns
ja
fdiv
fnstcw
pop
pop
xchg
outs
ds
imul
sub
mov
jns
dec
and
sub
(bad)
push
call
loope
mov
add
jae
in
inc
dec
inc
jns
jbe
ret
pop
movs
lock
movs
push
sbb
in
mov
mov
xchg
lds
inc
js
push
cmp
icebp
outs
adc
in
shr
movs
fdiv
and
jnp
gs
das
fs
mov
les
fcomp
(bad)
pop
repnz
js
shl
dec
imul
xchg
cmp
inc
sub
cmps
ins
push
je
mov
inc
sub
iret
xlat
mov
shl
xlat
mov
xor
push
sbb
aad
loopne
xchg
dec
mov
adc
jmp
pop
imul
dec
and
cmc
xchg
daa
inc
shl
or
mov
jnp
aam
sbb
cmp
nop
adc
mov
mov
fstp
push
pusha
xlat
pop
lds
xchg
adc
data16
xchg
push
cmp
cmp
xchg
and
cld
mov
out
pusha
mov
xor
xor
int3
jno
pop
fs
loope
stc
adc
cmps
jae
pop
sbb
cdq
fisub
(bad)
repz
mov
push
push
inc
pop
or
sbb
repz
test
jne
add
adc
cwde
and
or
sar
js
retf
mov
ror
call
std
je
loopne
mov
(bad)
mov
movd
ret
ins
out
cmp
stos
ss
pop
xchg
nop
sub
mov
and
jns
and
xlat
stos
ja
les
ins
test
pop
nop
cdq
jmp
push
fcomp
imul
pop
scas
push
mov
aas
mov
cld
jno
xor
or
inc
xchg
sbb
call
adc
xor
push
pop
dec
or
int
fs
(bad)
jae
call
xchg
into
push
jb
cmp
push
mov
(bad)
in
xchg
stc
push
mov
in
into
cs
mov
adc
sbb
or
(bad)
xor
shl
pop
test
pop
sbb
js
rcr
add
movs
dec
push
(bad)
sub
in
add
sub
jne
or
mov
jmp
outs
mov
daa
std
mov
mov
inc
or
xchg
jge
mov
jmp
leave
sahf
out
es
push
cmp
pop
das
fstp
sub
push
jmp
pop
jnp
mov
std
mov
test
push
out
aas
retf
sbb
push
icebp
jmp
push
xor
dec
ret
cmp
sub
push
jne
mov
das
ror
xor
je
test
mov
lock
push
gs
pushf
sub
das
popa
inc
cmp
cli
into
cmp
movs
lds
xchg
and
cmp
popa
pop
ja
addr16
shr
dec
movs
push
iret
xchg
sub
loopne
outs
cli
iret
mov
add
jmp
push
xchg
push
or
mov
stos
js
pop
aad
lock
das
and
ret
dec
xor
xor
test
xor
jp
adc
aaa
jns
clc
aam
mul
push
cmc
scas
sbb
in
jne
ret
adc
dec
repz
push
sbb
out
push
js
inc
jmp
pop
mov
mov
hlt
movs
mov
xchg
pusha
movs
pop
or
or
(bad)
cmp
std
and
push
cmp
(bad)
pusha
loopne
push
in
sbb
jbe
pop
aam
jnp
inc
mov
xor
xchg
mov
push
fnsave
or
push
xchg
aam
sub
jle
pop
or
ja
jb
sar
and
test
dec
test
sbb
xchg
ret
xor
mov
rcr
push
shl
sbb
sbb
push
push
dec
and
mov
jns
jo
adc
xor
xchg
inc
aam
mov
int3
sahf
lds
mov
and
rcr
shl
or
adc
fadd
jmp
sub
mov
sbb
sub
sub
aam
ffree
hlt
aas
shl
dec
arpl
jns
(bad)
pushf
jl
xor
adc
ret
mov
add
imul
fnstsw
cli
or
out
loopne
push
jmp
dec
iret
cli
xchg
mov
adc
in
xor
mov
sub
cmp
sub
shl
mov
je
mov
jns
jnp
or
push
sub
sbb
and
hlt
fwait
and
leave
leave
push
je
xor
inc
xor
popf
frstor
lods
int3
or
cmps
inc
lds
push
xchg
idiv
dec
ret
test
int3
cli
cmp
mov
dec
test
stc
loope
stos
call
add
fmul
(bad)
int3
ins
and
jmp
pop
lahf
mov
mov
inc
hlt
sub
cmc
das
adc
mov
nop
enter
jnp
xchg
push
xchg
popf
cld
push
mov
in
in
repz
add
aad
mov
jmp
xlat
mov
les
das
lds
iret
mov
dec
ret
xchg
in
inc
adc
jb
adc
rol
xor
sar
mov
cmp
xchg
fimul
icebp
cmp
rcl
jne
(bad)
fidivr
fnstsw
mov
(bad)
out
push
pop
mov
pop
hlt
and
enter
inc
jl
out
(bad)
loope
retf
sbb
or
and
cli
dec
and
push
fs
jg
cwde
xor
imul
mov
jge
jne
or
mov
xchg
jae
fsubr
push
fmul
adc
movs
leave
jp
mov
das
or
mov
aas
in
jbe
pop
stc
hlt
pop
and
daa
xor
ds
lock
xchg
push
sub
jp
add
(bad)
retf
jmp
lods
(bad)
jp
in
repz
rcr
ret
mov
arpl
jecxz
jnp
mov
fidiv
pop
xor
xor
add
cli
ja
(bad)
xchg
adc
dec
data16
mov
cmp
mov
loop
cmps
adc
sbb
sub
nop
sar
jmp
add
ds
push
fsubr
(bad)
xchg
int3
div
push
cli
mov
jns
sub
sbb
add
mov
xor
jmp
push
sub
xchg
gs
outs
jo
xchg
cmp
cdq
fisttp
pop
xchg
push
mov
ficomp
dec
js
and
pushf
adc
imul
xchg
in
xor
out
sub
mov
jb
jno
sbb
(bad)
enterw
sub
les
xchg
bnd
xchg
scas
iret
or
bound
retf
xor
push
outs
mov
dec
cmp
cdq
lods
pop
xchg
jno
rol
xrelease
inc
shl
xor
inc
sbb
popa
cmp
push
loop
mov
or
test
and
adc
and
cwde
or
xor
cmp
inc
out
xor
mov
push
lods
fiadd
mov
mov
pop
xchg
inc
adc
daa
xchg
dec
pusha
popf
mov
push
shl
cmc
(bad)
mov
pusha
leave
in
jnp
es
lds
loopne
jmp
xor
push
xor
push
mov
and
lock
xchg
cs
into
or
ret
dec
adc
movsx
pop
js
xchg
ja
push
loop
add
hlt
sub
repz
and
shl
jmp
aam
stos
and
test
cld
dec
adc
imul
mov
or
mov
ror
call
mov
jae
arpl
xor
cli
or
sub
or
or
jg
xchg
jae
mov
nop
bound
js
mov
pop
shr
clc
call
in
mov
xchg
cwde
push
mov
pop
in
dec
mov
int
cmp
pop
jmp
sub
je
mov
add
cmc
mov
scas
mov
icebp
dec
inc
jmp
rcr
mov
outs
push
std
and
dec
stos
fs
pop
sub
sub
fcomip
or
(bad)
pop
movs
cwde
sub
adc
sbb
cmp
jne
jb
xchg
add
stc
mov
leave
cmps
imul
shl
shl
adc
or
add
and
in
mov
cmp
jae
or
pop
fst
pop
call
mov
icebp
jb
into
or
push
pop
pop
cld
jmp
pop
sbb
mov
jmp
push
pop
call
imul
loope
dec
or
(bad)
fisubr
add
pop
cdq
jb
adc
and
mov
add
ret
lock
int
sub
das
push
jne
cmp
jp
sub
or
xchg
je
mov
adc
inc
clc
test
or
sbb
test
jae
out
jp
outs
clc
dec
xchg
jp
rcl
xor
icebp
jae
fcmovu
cmps
jle
dec
fstp
outs
int
dec
shr
sub
jne
dec
loopne
dec
(bad)
mov
jge
fchs
and
bound
std
clc
jae
mov
mov
rcr
jnp
sti
fistp
sbb
jl
xchg
xchg
jns
mov
adc
dec
data16
std
gs
test
je
cmp
jmp
dec
add
mov
fild
jae
sahf
push
jmp
and
call
and
repz
out
cli
push
push
mov
sti
mov
cld
outs
and
and
dec
jge
cld
xor
data16
jl
outs
call
mov
cli
dec
and
sub
xor
and
sub
loop
pop
push
repz
out
inc
and
push
add
loopne
mov
pop
loop
xchg
pop
mov
int3
pop
sub
dec
retf
es
jmp
jbe
stc
inc
mov
push
and
adc
jp
ja
pop
sti
jb
retf
jbe
repz
fsubp
jnp
cmps
ror
sbb
jg
add
test
jo
movs
pop
mov
data16
cmps
arpl
scas
retf
pop
jmp
push
and
sub
push
shr
repz
mov
pop
adc
icebp
jecxz
mov
add
imul
mov
mov
jge
test
dec
les
nop
inc
cld
push
sub
dec
shl
shr
je
ret
jmp
xchg
xchg
pop
mov
outs
pop
pop
jbe
sbb
je
inc
jg
in
mov
js
test
add
jne
pop
jns
jae
and
dec
jge
sbb
jmp
xchg
cmp
popf
jo
xchg
(bad)
and
push
js
(bad)
fcom
ret
sub
inc
xor
pusha
ja
cwde
xchg
push
sub
test
cld
in
js
out
or
rcr
mov
lods
push
out
mov
mov
movs
(bad)
mov
sti
test
ror
adc
cmps
xor
pop
mov
mov
jns
ror
(bad)
pop
test
mov
mov
xor
ds
jbe
outs
pop
push
mov
sbb
fiadd
add
and
nop
into
jg
dec
jae
rcr
std
cs
js
adc
jns
sub
mov
add
nop
dec
mov
mov
nop
out
push
xchg
or
jmp
sbb
jl
push
xchg
and
ret
pop
retf
mov
lea
cmp
push
cmp
fcomp
fbld
test
jae
pusha
push
sbb
jle
sahf
in
inc
jo
aas
out
cmp
lods
mov
mov
and
xchg
dec
fdivrp
pop
retf
adc
mov
adc
adc
stos
add
fimul
movs
dec
imul
mul
iret
ret
mov
call
scas
jmp
xor
daa
mov
mov
mov
pop
pusha
mov
das
mov
loopne
adc
cmp
cmps
(bad)
sbb
pop
out
jb
and
cmp
imul
dec
aad
hlt
add
outs
out
jg
lock
ins
cmp
(bad)
rcr
movs
adc
or
pop
or
pop
dec
adc
cmc
lods
test
inc
adc
jge
mov
sbb
stc
into
adc
xlat
clc
sbb
sub
hlt
sub
inc
sbb
mov
add
int
xchg
cwde
add
(bad)
js
sar
jmp
es
pop
icebp
into
test
lds
sbb
sub
pusha
mov
and
sub
mov
retf
jl
icebp
in
lock
xor
cmp
aam
fldcw
sub
retf
wbinvd
and
pop
scas
xchg
or
movs
pop
test
pop
mul
inc
into
loopne
dec
in
push
xchg
cmc
daa
test
dec
add
cld
fild
cmp
sbb
rol
dec
sub
cs
scas
add
mov
cmp
subps
loopne
push
sub
movs
jne
js
sub
cdq
or
test
cmp
ror
aad
jmp
hlt
lahf
inc
jmp
(bad)
fistp
add
out
aas
add
es
jns
and
sbb
mov
pushf
mov
add
daa
push
xchg
(bad)
cmps
xchg
mov
inc
and
sub
out
xchg
dec
mov
push
cmc
and
sbb
jnp
push
std
adc
pop
cld
dec
out
shl
movs
jmp
pop
pusha
inc
lods
ror
push
cmp
mov
or
sub
xchg
mov
xor
push
iret
push
push
add
fldenv
dec
xchg
push
mov
inc
xor
retf
cmp
xor
xlat
xchg
push
dec
cld
mov
fsubr
lods
jb
fwait
repz
mov
clc
xchg
xchg
or
ror
bound
or
lea
add
iret
pop
ret
out
jbe
mov
push
es
popf
mov
sbb
cmps
fnsave
sbb
(bad)
aad
adc
inc
mov
sti
inc
jo
push
push
js
out
call
adc
xor
sub
pop
cmp
dec
xchg
loope
cmp
aas
enter
jns
and
sbb
fwait
xor
not
jmp
out
(bad)
jbe
loop
rcr
adc
les
out
out
push
push
test
aam
fisub
jp
pop
popf
cmc
mov
ins
cmp
ret
sub
lahf
jmp
adc
jae
sub
xchg
ss
(bad)
cmps
push
xchg
jb
shl
mov
imul
mov
cmp
fnsave
xor
cmp
popf
push
ins
mov
popf
xchg
aas
int3
outs
addr16
jae
mov
jmp
movs
sbb
dec
pop
sbb
pop
out
jbe
xchg
stc
retf
lods
repz
jbe
push
pop
cmp
jl
jns
dec
int
and
mov
mov
jnp
icebp
ret
cmp
mov
(bad)
pmaxub
push
xor
cli
xor
push
lahf
or
adc
jb
inc
xchg
push
sbb
fisttp
aad
jae
dec
push
ds
adc
frstor
xor
xor
dec
push
or
mov
xor
xchg
(bad)
push
push
jmp
xchg
repnz
xchg
dec
cmps
pop
xchg
jns
xchg
push
loop
cmp
rcl
adc
add
mov
pop
cld
pop
push
jbe
ins
xor
mov
cli
fidiv
loope
fdivr
mov
inc
and
mov
test
cmp
xchg
ins
sbb
and
dec
xchg
ins
pop
inc
sahf
inc
imul
enter
xor
out
clc
mov
fnsave
mov
daa
out
pop
mov
je
sub
cdq
inc
popf
addr16
mov
mov
hlt
int3
js
jmp
js
cmp
call
aam
cmps
mov
loop
stos
jle
in
fmul
sti
popa
push
mov
xor
je
bswap
int3
cmps
xor
mov
or
mov
push
jns
test
jmp
xchg
shl
popf
xchg
test
inc
dec
push
loopne
sar
arpl
cwde
fst
sbb
cs
into
les
mov
xor
fidiv
pop
retf
and
push
lods
inc
mov
aad
movs
ret
mov
mov
rcr
cmp
or
inc
mov
xchg
test
jmp
lds
or
cmp
push
jmp
mov
stos
sub
push
or
xchg
and
adc
inc
cwde
xor
mov
xchg
jmp
jne
push
mov
sub
push
mov
mov
jle
stc
iret
fwait
jo
call
jns
mov
in
test
lahf
sub
movs
sub
xchg
jg
arpl
add
pop
or
or
mov
shl
in
js
or
adc
out
rol
push
lahf
in
stos
jo
out
(bad)
or
das
pop
cmc
mov
cdq
cmp
mov
xor
ss
and
loopne
addr16
aad
and
adc
sbb
(bad)
mov
and
stos
jbe
fimul
push
adc
mov
gs
clc
data16
jo
icebp
cld
cmp
shr
sbb
xchg
loope
mov
retf
sub
hlt
xchg
pop
out
cmp
sub
pop
sub
or
dec
pop
xchg
pop
mov
pop
movntq
xor
shr
mov
sbb
ror
and
(bad)
in
inc
xlat
ins
outs
leave
pop
xor
addr16
fsub
add
std
adc
add
sub
adc
enter
sbb
sahf
dec
jae
out
shl
cwde
mov
fcom
es
js
inc
(bad)
(bad)
into
cli
xchg
in
jae
adc
lds
jmp
sub
sub
ins
sti
xchg
or
mov
add
sbb
cmp
addr16
repz
push
iret
sbb
inc
sbb
pop
cmp
lea
inc
cld
xchg
cmp
sar
fisttp
pop
pop
cli
out
and
and
xor
imul
shl
sbb
gs
inc
aam
and
loop
imul
push
or
cmp
mov
mov
cld
mov
mov
push
hlt
mov
and
pop
mov
and
data16
push
dec
loopne
stos
int3
fist
push
and
push
mov
retf
daa
cmp
pop
dec
in
addr16
bound
jns
(bad)
mov
sub
inc
test
cld
je
inc
push
mov
push
daa
push
test
cmps
retf
push
cwde
imul
dec
stos
sub
mov
scas
popf
sbb
adc
mov
push
out
push
dec
jmp
jbe
mov
dec
shr
movs
adc
sti
xchg
call
outs
sar
in
sub
pop
jo
mov
jge
push
jb
ins
daa
mov
daa
cli
je
sub
imul
pop
icebp
inc
jns
retf
lea
stc
cmp
xor
mov
mov
ins
xchg
ficomp
jbe
sub
inc
dec
aad
mov
popa
lds
mov
popa
cld
out
push
and
inc
shl
dec
push
shl
imul
and
das
mov
enter
sub
mov
sbb
jbe
cwde
lahf
popa
inc
test
mov
or
sti
push
dec
jae
adc
jne
stc
dec
add
leave
stos
xor
cmp
push
and
int3
icebp
rol
or
ins
retf
and
mov
xchg
stos
ins
jb
push
adc
rol
pop
pop
mov
in
sbb
adc
js
dec
pop
xor
pop
test
fcomp
mov
mov
outs
jns
ret
pop
stos
test
mov
ja
idiv
pop
jge
pop
or
pop
outs
sub
push
int
and
add
mov
sub
adc
add
sub
push
sub
lock
std
adc
lea
sbb
outs
jns
int3
in
iret
mov
clc
addr16
into
jns
pop
js
fnsave
sub
mov
in
test
and
xor
sub
mov
sahf
sbb
movs
xor
icebp
iret
gs
dec
call
and
jl
xor
ret
fs
cmp
dec
(bad)
fwait
sbb
add
push
sbb
test
sahf
xchg
int3
int3
cmc
jmp
inc
xor
jp
lods
les
sub
dec
xchg
clc
xor
fidivr
adc
jp
adc
cwde
std
or
stos
pop
aaa
or
cmp
jb
int
fcmovnu
cmp
retf
xor
rcl
mov
imul
mov
cmp
es
push
jmp
ins
outs
jae
xor
jnp
cwde
loopne
in
add
pop
cmps
mov
outs
mov
cmp
dec
or
daa
xchg
xlat
fwait
jmp
rcr
sbb
cmp
dec
jg
jne
xchg
int3
jl
cs
dec
mov
das
stc
ret
mov
fmul
cli
dec
(bad)
movs
jp
add
mov
or
cmc
sbb
leave
mov
imul
(bad)
and
dec
loopne
adc
adc
pop
adc
or
pop
ins
mov
pushf
fild
into
ficom
mov
inc
xor
mov
std
out
jp
push
xchg
push
add
outs
iret
pop
fidiv
inc
inc
xchg
sub
sub
mov
fist
arpl
or
fmul
out
xor
mov
mov
or
aas
mov
pop
push
bound
xchg
jb
in
mov
sbb
mov
mov
and
retf
cmp
and
dec
pop
push
jb
outs
popa
pop
mov
jbe
and
fdiv
inc
or
adc
(bad)
pop
adc
push
in
mov
mov
add
mov
sbb
sbb
mov
lds
pop
xchg
retf
jp
adc
sbb
retf
shl
push
sar
cmp
loopne
xor
fdiv
mov
imul
movs
mov
imul
addr16
shl
outs
imul
pop
enter
aas
das
inc
jp
xchg
enter
icebp
sbb
dec
int3
or
mov
and
and
stos
xor
cld
add
cmps
outs
cmp
push
fs
fimul
and
into
jmp
jbe
clc
mov
or
ds
sahf
mov
sub
or
mov
add
add
pop
rcr
xor
fcmovnu
push
mov
sbb
popa
inc
add
xor
lds
shl
jmp
sbb
leave
mov
xlat
pop
data16
fdivr
ins
adc
cli
push
bound
add
gs
cmps
sub
repz
(bad)
mov
lods
sub
rol
popf
push
dec
lods
jbe
(bad)
vxorps
aas
scas
scas
movs
sub
mov
pop
or
ror
dec
ins
test
xchg
push
test
jbe
push
sbb
xchg
call
push
or
dec
sbb
stos
and
jmp
or
add
pushf
cmp
jmp
push
fcomp
or
xchg
push
loope
xchg
mov
ins
(bad)
and
stos
or
icebp
jle
mov
push
mov
dec
mov
adc
leave
sti
movs
rol
jp
xor
pop
mov
sub
add
xchg
sub
and
cdq
ret
data16
pop
mov
pusha
xchg
push
sub
pop
mov
adc
sbb
or
or
ret
das
sub
nop
push
test
xchg
dec
add
inc
je
add
adc
xchg
xadd
pop
fucomip
rol
xor
push
repnz
pop
out
push
mov
loopne
mov
sub
jge
ret
call
pop
imul
inc
into
fisub
loopne
pop
ja
pop
push
cmp
cwde
mov
jle
mov
jno
cmps
jge
xchg
pop
sti
mov
xchg
imul
sbb
inc
xchg
dec
xor
push
or
xchg
xlat
fldln2
into
mov
xchg
mov
sbb
add
and
mov
call
xchg
rcr
xor
and
call
aas
jns
mov
mov
lock
sub
aam
lock
mov
cmp
es
pusha
fnsave
dec
dec
iret
sar
ins
and
sbb
leave
ins
add
and
cli
pop
adc
nop
fwait
inc
cmp
mov
push
stc
jb
dec
jns
jecxz
mov
sbb
mov
mov
xchg
popa
fist
and
adc
or
jno
rcr
push
adc
cmp
mov
xor
mov
cmp
outs
jecxz
inc
loopne
lahf
in
xor
sbb
loope
xchg
sbb
xor
dec
repnz
pop
mov
adc
cmp
dec
test
and
pop
pop
fisttp
movs
jecxz
xchg
xor
cmp
mov
cmp
ret
jmp
aam
addr16
jns
repz
jg
in
push
shl
call
push
push
cmp
push
in
jnp
push
dec
outs
jae
movs
jp
sub
and
jae
xchg
inc
arpl
sar
pop
pop
xchg
adc
xor
xor
(bad)
pop
push
mov
sub
mov
cmps
(bad)
adc
clc
pop
in
xchg
lahf
push
or
jnp
in
mov
inc
sub
sti
xchg
(bad)
outs
or
(bad)
push
sub
sub
cs
or
scas
ja
pop
push
or
neg
cmc
and
push
sbb
xchg
jne
dec
enter
dec
ins
iret
pop
and
adc
cdq
shl
in
int3
stos
xchg
push
out
jle
xchg
xchg
sbb
aaa
call
adc
mov
jo
div
inc
out
push
and
ret
xor
(bad)
in
sbb
(bad)
push
hlt
pop
mov
push
or
push
xchg
jno
mov
jmp
mov
sbb
pop
jge
sbb
xchg
jle
add
jge
inc
pop
or
imul
ss
mul
pop
xchg
pop
pop
inc
xchg
cmp
mov
jnp
cwde
daa
inc
jbe
push
mov
or
sti
xor
push
test
cmp
push
daa
rol
mov
cmp
ficom
es
mov
leave
xor
ss
mov
(bad)
jns
mov
xor
cwde
push
cmps
sbb
xor
mov
inc
mov
gs
mov
lock
leave
sbb
in
je
sti
dec
call
fbld
sub
es
push
or
loope
and
or
je
inc
sti
mov
pop
mov
jp
fstp
test
test
sbb
jo
jg
arpl
test
std
jle
mov
js
or
jo
sub
xor
cmps
cmp
xor
rcr
hlt
pop
mov
or
push
jle
sbb
loope
mov
mov
xor
leave
clc
je
addr16
fdiv
cmc
push
push
jno
in
mov
cmps
inc
call
test
fsubrp
cmc
enter
hlt
add
mov
sbb
mov
cld
lods
fcmove
mov
cmc
xchg
cmps
push
sub
je
cmp
cmp
ret
sbb
inc
loop
cld
jmp
and
add
lods
pop
mov
sub
jne
(bad)
ins
scas
hlt
mov
cmp
and
xchg
pop
cmp
and
leave
jb
jno
jmp
pop
je
mov
jno
loopne
xchg
add
out
loope
pop
jmp
sub
shr
mov
adc
xor
xchg
clc
pop
jg
in
cmp
repnz
inc
adc
iret
jge
pop
jmp
jne
fcmovbe
cmp
shl
imul
lock
push
jle
adc
dec
repnz
les
out
xchg
xor
jo
jns
out
int3
clc
add
rol
or
or
out
and
jge
xchg
cmp
xor
jnp
cmc
inc
fdiv
aaa
(bad)
aad
fist
mov
pusha
cmc
dec
sub
cli
xchg
fisub
xchg
iret
pop
adc
imul
cmp
jp
rcl
xlat
in
icebp
out
jg
out
hlt
lea
xchg
mov
pop
xchg
ret
retf
sub
das
nop
push
fadd
mov
pop
dec
xchg
cmp
out
in
iret
in
xchg
jge
cwde
push
rol
push
and
sbb
in
mov
dec
sub
mov
xor
daa
xor
or
dec
jns
xchg
gs
ins
adc
mov
sbb
leave
clc
loopne
add
pop
movs
mov
sar
jns
ss
in
pusha
sub
xchg
mov
adc
aad
mov
test
mov
or
sub
sub
dec
and
stos
jne
call
in
inc
cmp
and
stos
cdq
xor
pop
sub
aaa
ins
hlt
cmp
sub
xor
jbe
push
pop
xor
xchg
jge
lods
or
loopne
pop
push
gs
rcl
leave
xor
xchg
add
adc
sbb
adc
int3
sbb
int
adc
inc
in
jmp
jle
xor
bound
inc
cmc
fidivr
jo
in
loop
dec
inc
or
push
sub
pop
push
rol
xor
inc
popf
pop
push
rcr
xlat
dec
push
push
pop
jne
pop
int3
cmc
and
mov
cmp
and
(bad)
jge
mov
das
rol
xchg
jl
cmp
jnp
icebp
inc
test
in
stos
xchg
adc
arpl
push
test
ins
js
int
and
lods
sbb
pop
xchg
es
outs
(bad)
(bad)
movs
jb
mov
or
clc
inc
xor
xor
jmp
cld
adc
sub
loop
pop
sub
jg
xchg
cmps
lods
imul
xchg
inc
std
jne
adc
mov
jno
xchg
ins
in
hlt
cmp
sub
jge
fldcw
cmp
or
repz
test
int
pop
imul
not
es
mov
mov
add
int3
xchg
adc
hlt
inc
mov
jmp
jo
fist
loopne
jmp
les
push
in
lods
loopne
adc
sbb
std
(bad)
adc
pop
xor
loope
xor
xlat
cmp
sub
and
mov
ins
sub
cmp
movs
inc
inc
test
call
xor
out
pop
xchg
test
retf
mov
loopne
dec
xchg
psubsw
aam
inc
sbb
mov
push
aam
sbb
inc
xchg
or
fadd
jae
mov
xchg
push
jo
xor
inc
aad
mov
icebp
test
fcomip
inc
aaa
or
xlat
add
cmp
push
aas
cld
outs
cmp
mov
sub
push
aam
ret
pop
add
test
out
(bad)
mov
mov
cmp
pop
inc
jno
xor
aas
ror
sub
inc
inc
sbb
sub
dec
outs
pop
loop
and
push
out
and
jmp
cmp
sbb
pop
mov
xor
cld
sbb
xor
jecxz
sub
sub
cwde
jno
jne
ds
(bad)
(bad)
clc
shr
rcl
jecxz
jl
fcmove
jnp
lahf
mov
nop
mov
cmps
es
pop
push
les
jae
sub
sti
rcl
movs
and
repz
xor
cli
jns
shl
(bad)
call
adc
out
add
xchg
inc
sub
lds
add
jp
xor
or
jbe
repz
inc
js
ret
mov
adc
hlt
push
push
lahf
mov
cs
mov
call
jne
mov
jmp
mov
mov
dec
sbb
shr
dec
das
mov
adc
adc
into
pop
or
rcl
or
mov
inc
movs
jne
sub
mov
in
sar
out
adc
or
mov
sub
cmp
cs
jl
and
stc
push
xchg
push
cmp
out
xchg
in
pop
mov
call
fist
rcl
fbld
retw
xlat
add
add
adc
sbb
and
repz
pop
or
jne
jnp
push
out
arpl
jne
xchg
add
fnstcw
pop
xchg
cmc
jmp
push
xchg
call
mov
mov
rol
push
mov
xor
in
add
cmp
xchg
adc
jbe
push
in
adc
jb
and
cmc
js
sbb
lods
xchg
mov
repz
pop
push
imul
inc
xchg
xor
ja
jbe
jp
sbb
sub
jne
adc
sbb
add
sar
jae
hlt
test
stc
push
sti
movs
cmc
dec
sub
pop
push
push
imul
out
sahf
or
push
das
add
in
loopne
lock
adc
sub
div
xchg
addr16
(bad)
mov
push
out
fs
aaa
sub
cmp
mov
lods
cmps
or
test
repnz
in
nop
xor
pop
xor
out
add
scas
sub
outs
or
shl
push
pop
add
cmp
cmp
pop
sub
sub
fs
pop
test
jmp
repz
jg
and
push
push
jae
jnp
jmp
jecxz
push
leave
mov
mov
stc
add
xor
inc
inc
mov
xchg
iret
pop
pop
xchg
or
push
xchg
sbb
jnp
(bad)
fsubr
dec
daa
inc
push
retf
mov
loopne
call
mov
into
fldenv
cmc
(bad)
(bad)
cmps
jecxz
fnsave
sub
cmp
push
push
ret
sar
adc
adc
xor
lds
lds
retf
and
jp
ffree
inc
sbb
add
(bad)
jmp
and
fadd
fild
dec
loop
adc
mov
fsub
pop
sub
mov
or
or
sub
sbb
add
pop
push
and
push
sbb
dec
sti
xchg
add
mov
pop
das
push
call
stc
imul
mov
sbb
jb
popf
xlat
cld
popa
(bad)
mov
push
std
int
push
jp
xlat
sbb
xchg
dec
call
jecxz
and
std
or
enter
ds
cld
fld
add
sbb
fwait
sbb
in
xchg
add
ins
jg
jmp
sbb
pop
mov
rcr
dec
nop
aas
fcomip
and
and
mov
frstor
xchg
shr
jnp
arpl
aam
(bad)
rol
and
jne
xchg
cmp
iret
repz
nop
dec
mov
sub
sub
aas
and
cmps
adc
sub
movs
mov
leave
pop
imul
lds
mov
idiv
add
push
iret
jge
mov
scas
push
pop
and
xchg
jg
repz
hlt
in
repz
xchg
out
dec
dec
mov
pop
xor
int3
lock
pop
sahf
jg
push
sahf
sub
jmp
mov
mov
sbb
out
push
xchg
and
test
pop
in
les
pushf
inc
xchg
rcr
cld
jns
cli
sub
inc
das
pop
cmp
inc
push
(bad)
clc
in
je
push
or
in
pop
fld
cwde
jno
test
jae
push
call
lea
pushf
jbe
dec
in
xchg
dec
in
pop
mov
mov
pop
shl
add
fwait
hlt
xchg
lock
in
mov
sub
dec
lds
push
in
jne
fsub
pop
(bad)
mov
jp
ds
js
(bad)
lahf
iret
push
cld
in
mov
es
leave
cmc
fldcw
mov
fistp
out
and
xlat
gs
stos
movs
test
sahf
pop
repz
or
xor
and
pop
pusha
mov
pusha
mov
test
aad
inc
pop
push
or
out
repnz
push
in
jmp
or
out
jle
pop
push
enter
sub
push
pop
and
in
cmp
push
loop
pop
and
xchg
fcom
je
dec
in
adc
push
out
(bad)
out
push
loope
push
hlt
ja
ins
jo
jnp
aam
jne
es
repz
xor
clc
xchg
test
and
test
jp
xchg
adc
movs
es
bound
fs
in
mov
cmp
xor
daa
mov
mov
jge
sub
mov
aaa
mov
movs
(bad)
ins
das
xor
outs
adc
sbb
sub
push
in
lea
and
sub
jae
sar
jbe
sbb
jae
nop
mov
or
inc
sub
rol
xor
inc
loope
mov
cmp
daa
aad
sahf
dec
adc
jge
cld
cwde
xchg
daa
xchg
jo
and
pop
sbb
pop
in
xor
arpl
or
scas
push
not
mov
shl
retf
mov
mov
dec
dec
js
push
and
daa
xor
mov
or
inc
push
xor
(bad)
or
jno
shl
pop
scas
add
jmp
je
loop
movs
adc
jo
in
loopne
int
mov
add
das
ds
jmp
add
pop
(bad)
out
xchg
jne
fs
jno
aam
sbb
cmps
test
cmps
loop
ds
push
xchg
lds
fstp
(bad)
cmp
xor
fsubr
leave
mov
pushf
pop
ins
adc
rcr
popa
sbb
in
xor
push
push
clc
add
cdq
mov
les
rcr
(bad)
cli
inc
test
pushf
pop
xchg
fnstcw
xchg
pushf
(bad)
dec
dec
pop
sbb
sub
iret
in
push
add
mov
and
jp
shl
xchg
mov
retf
sar
rcl
xor
ins
add
lea
jmp
xchg
push
push
dec
inc
shl
bound
and
std
push
xchg
mov
cmp
icebp
sti
add
jnp
xchg
and
xor
mov
cs
pop
imul
iret
jb
into
movs
add
and
push
add
ror
xor
sub
jo
push
test
ret
mov
daa
int
jb
jno
rcl
movs
push
(bad)
and
movs
dec
push
sub
jmp
sub
ret
mov
jp
rcl
dec
inc
xor
in
or
mov
push
mov
xchg
jle
out
jl
xchg
lods
stos
jne
rol
paddb
ror
and
push
xchg
aad
js
aad
out
dec
sub
xchg
cmp
ja
lds
xchg
mov
pop
pop
es
mov
add
or
pop
inc
js
imul
iret
cld
retf
mov
jne
aaa
mov
mov
pusha
imul
fbld
xchg
sbb
(bad)
lds
mov
adc
not
xor
mov
stos
daa
mov
call
mov
loope
push
jmp
mov
cmp
sbb
dec
fnstcw
int3
call
lock
out
sbb
aam
xchg
nop
in
adc
inc
cli
xchg
in
mov
xor
sbb
outs
out
dec
adc
outs
mov
ret
ret
sahf
sbb
xchg
call
cld
daa
sbb
dec
or
and
movs
pusha
js
adc
dec
pop
std
sbb
or
sub
(bad)
dec
or
in
add
jmp
mov
stos
cmp
mov
in
jb
xchg
xchg
mov
inc
test
test
xchg
jge
shl
dec
loopne
jae
into
js
push
ins
adc
push
cld
cmc
push
ficom
sbb
sti
ret
mov
cmp
movs
fs
adc
cld
not
sahf
imul
stc
pop
add
jo
xchg
dec
jbe
fcmovnb
mov
sub
(bad)
mov
sub
outs
sub
ins
push
hlt
mov
in
pop
in
fild
mov
jne
dec
sub
fstp
and
dec
repz
push
mov
mov
push
cmp
leave
add
fld
lock
pop
mov
sub
std
add
iret
cmps
cmps
int3
bnd
out
fcom
popf
rcr
add
call
fcomip
cli
scas
fwait
pop
adc
stos
mov
leave
into
lods
or
sub
adc
lock
adc
addr16
or
or
cs
jbe
retf
out
pop
fistp
mov
aam
(bad)
mov
sub
jb
xor
int3
pushf
xlat
lods
test
(bad)
jb
test
gs
xchg
inc
imul
test
aam
push
aaa
adc
mov
mov
das
sub
xchg
vmovntdq
dec
pop
push
jo
clc
cs
clc
cwde
jge
mov
jmp
xor
xchg
cmp
hlt
fild
dec
sti
push
into
movs
jbe
lock
sbb
mov
sbb
(bad)
mov
cmp
movs
or
test
loope
(bad)
movs
jle
in
icebp
cmp
push
cmp
adc
sub
xor
xchg
sub
xor
bound
push
retf
cli
retf
jne
nop
jge
and
(bad)
xchg
js
repz
pop
or
xchg
sub
inc
cld
xchg
mov
ds
push
movs
push
jge
pop
xor
mov
xor
mov
sti
mov
test
push
sbb
sub
and
xlat
and
stc
dec
repz
loope
mov
clc
loop
in
adc
inc
ret
jp
imul
mov
leave
sbb
std
pop
lea
mov
es
dec
jle
mov
add
pop
loop
pop
xchg
add
loopne
xor
mov
daa
in
xchg
inc
pop
sub
in
ret
lods
xchg
cli
bound
push
lods
xchg
stc
fwait
jnp
inc
bound
into
dec
xlat
jp
inc
ja
in
pop
sbb
push
aad
out
mov
cld
xchg
and
add
jle
arpl
pop
xchg
push
test
sub
addr16
fdiv
fiadd
outs
sub
js
xor
mov
test
jge
loope
(bad)
in
sub
sub
mov
es
jne
data16
xchg
fs
xor
push
mov
xchg
data16
sbb
mov
out
inc
std
or
shl
test
jbe
mov
loop
imul
ins
repnz
and
gs
xchg
call
or
xchg
into
xchg
sub
cmp
push
dec
push
jo
mov
cld
mov
(bad)
add
mov
or
inc
xor
je
xchg
icebp
mov
or
js
ja
sub
call
push
sbb
je
jno
dec
cld
es
and
rol
jmp
jmp
shl
jne
in
out
jnp
xor
lahf
dec
sar
test
cmc
fiadd
xchg
push
in
fnstcw
(bad)
mov
xor
test
data16
push
das
and
aad
push
fcom
adc
add
dec
jle
sar
inc
sti
in
lods
jns
and
in
outs
std
adc
shl
xchg
iret
dec
push
jge
daa
xchg
inc
js
out
mov
aam
movs
mov
repnz
pop
xchg
push
(bad)
clc
cmp
push
rcr
inc
cmp
inc
ret
sub
popf
xor
fild
dec
fisub
ins
je
sbb
mov
jo
push
daa
sahf
(bad)
dec
ret
cmp
in
les
mov
lahf
imul
xchg
push
sbb
in
cmp
test
add
arpl
mov
mov
(bad)
(bad)
dec
lahf
jnp
mov
jmp
push
fist
std
lods
mov
and
pop
inc
xor
test
dec
push
out
sbb
call
adc
or
int
jns
sub
shl
sbb
pop
mov
cmp
sbb
ins
mov
loopne
dec
rol
in
sub
mov
or
adc
pop
sbb
dec
jae
sti
or
add
fdivrp
cmps
in
sbb
xchg
bound
cmp
inc
jp
jns
sbb
in
sub
int
sbb
inc
sar
leave
data16
es
xor
aam
retf
inc
aam
jmp
ret
pop
pop
mov
jge
xchg
push
sar
(bad)
cld
jmp
je
loope
cmp
sar
jp
mov
xchg
push
and
pop
vpcomub
xor
retf
cmp
jg
retf
call
dec
(bad)
sub
sub
repnz
jns
not
pop
add
fdivr
aad
loop
rcl
mov
adc
xor
std
je
aam
ins
and
cmps
add
popf
(bad)
imul
stos
ss
mov
pop
cmp
popa
mov
cmps
push
push
jmp
test
sub
(bad)
pushf
jno
cwde
fild
xor
in
cmp
fs
xchg
mov
mov
add
dec
dec
popf
stos
sbb
dec
xor
push
jb
mov
jmp
ret
adc
sub
call
xchg
dec
in
cmp
mov
sbb
(bad)
dec
mov
sub
loopne
push
sub
shl
adc
shl
or
rcr
test
sub
repnz
ins
jmp
push
sar
shr
cmp
in
cmp
push
jmp
dec
jp
dec
je
fcomp
fs
inc
pop
add
out
inc
int
add
push
adc
daa
jmp
and
aam
sub
xor
jmp
fsubr
lods
adc
jg
jp
mov
sub
push
fcomp
jnp
xchg
in
jmp
hlt
fsubr
jp
cli
nop
add
mov
into
push
(bad)
aad
cmp
sub
lock
mov
lea
js
pop
inc
(bad)
ins
push
sbb
div
pop
pop
push
and
cdq
cld
dec
xchg
mov
popf
dec
mov
lea
jp
mov
jno
fs
adc
in
push
jbe
xor
jp
add
mov
sbb
add
out
div
jmp
push
sbb
rcr
call
fdiv
jl
add
in
arpl
test
fisubr
mov
icebp
rcr
gs
arpl
je
mov
and
fild
xchg
sub
or
loope
jecxz
arpl
jl
call
std
fistp
xor
sub
xor
pusha
cmp
out
push
std
and
jns
mov
jnp
inc
push
and
repnz
xor
fdiv
or
movs
adc
mov
xchg
cmp
xor
std
cmc
ins
xchg
gs
jne
inc
mov
imul
fsubr
dec
push
inc
xchg
test
and
call
and
jg
pop
outs
push
jl
ds
popf
dec
pop
adc
test
out
add
in
loop
cmc
ds
std
int
es
push
js
jo
xchg
cmp
js
push
jns
cwde
nop
jb
sbb
xchg
(bad)
pop
mov
sub
stc
push
popf
jnp
xor
cmc
out
outs
aas
cmc
jp
imul
ins
and
fsubr
(bad)
sar
(bad)
jnp
mov
movs
ror
sbb
push
jp
cmps
xchg
out
ja
or
sub
pop
and
xlat
(bad)
sbb
pusha
mov
xchg
xor
hlt
xchg
lds
cmp
jae
repz
enter
jne
sub
jae
and
loope
push
push
movs
sub
jmp
in
jno
cwde
fdivr
iret
pop
dec
iret
aad
cmp
and
ret
sbb
xor
pop
fldcw
sbb
je
ret
and
pop
cmp
neg
cwde
or
pop
out
in
pop
dec
mov
or
js
pop
jae
icebp
mov
out
pop
sbb
out
popf
dec
ror
xor
stos
jae
movs
int
add
test
pop
fistp
adc
in
jne
sub
sub
das
sub
pop
push
mov
xchg
push
mov
or
je
cmp
ret
lods
test
add
add
sub
sbb
gs
or
add
js
add
mov
sahf
cmp
sub
cwde
ret
mov
cmp
mov
xor
pop
imul
xchg
inc
xor
stc
jno
push
(bad)
mov
pop
push
inc
jns
les
xchg
gs
mov
sbb
es
sbb
and
(bad)
mov
test
pushf
out
addr16
cmp
(bad)
jo
imul
jo
push
push
or
sub
ret
xor
mov
and
test
xchg
jle
cld
call
loope
dec
jle
or
or
sbb
aam
nop
jge
ret
test
mov
repnz
mov
out
daa
stos
dec
sub
sub
dec
jecxz
ret
std
or
cs
in
test
cmps
adc
pop
push
adc
ret
into
leave
sbb
je
xchg
rcl
js
adc
fcmovb
jae
cmps
jne
xchg
xor
ficom
(bad)
and
je
push
xchg
repz
ffree
pop
pop
xchg
retf
inc
push
sub
inc
test
sti
inc
inc
pop
push
sub
inc
pop
mov
jmp
adc
xchg
loopne
push
popa
fsincos
(bad)
int
hlt
mov
dec
das
int3
add
imul
cmp
xlat
sahf
imul
iret
fcmovb
jmp
jae
fnstenv
inc
sahf
ficomp
test
fist
test
cmc
sub
cdq
add
cld
adc
fsubr
cmp
dec
cmps
pushf
push
(bad)
sub
mov
pushf
nop
jne
iret
pop
ret
in
push
les
push
jg
in
pusha
sub
xchg
loop
es
in
test
ins
mov
int3
add
push
jl
sbb
int
mov
push
xchg
jmp
push
jb
std
data16
arpl
sbb
retf
nop
gs
loopne
push
std
es
jb
cmc
jp
mov
adc
mov
cwde
jb
mov
rcl
xchg
xor
mov
popf
fcom
outs
aad
test
fimul
aas
retf
ins
xchg
pop
mov
(bad)
fwait
or
mov
jne
shl
cli
xchg
out
dec
mov
in
push
mov
jbe
mov
data16
adc
inc
movq
jl
adc
dec
xlat
jp
dec
xchg
mov
adc
xchg
imul
into
dec
(bad)
jns
int
mov
inc
push
lods
push
mov
jns
rcl
push
pop
add
cld
(bad)
jbe
dec
psrad
jae
loop
jle
outs
shl
push
ins
adc
mov
sub
inc
rol
push
cmps
jl
adc
ret
aaa
mov
add
nop
cmp
inc
jo
jg
jg
rcr
in
push
je
leave
ins
cld
repnz
int
repz
or
and
jp
sbb
adc
adc
jno
leave
jle
xor
cwde
(bad)
cld
pusha
adc
cmp
ja
fcomip
clc
pop
lea
popf
cdq
(bad)
cld
out
jg
dec
fcom
jbe
jno
push
jnp
jmp
inc
outs
stc
cmc
mov
jns
jmp
fdivr
hlt
pop
lods
rcr
(bad)
and
inc
jmp
in
xor
stc
popa
(bad)
stos
repnz
aas
jge
mov
adc
rcr
add
sti
std
add
out
adc
test
jge
int
cld
xchg
scas
pusha
adc
mov
stos
adc
xor
mov
or
mov
mov
cld
test
mov
ret
js
cli
or
shl
lahf
xchg
sub
mov
fs
fucomp
popf
dec
jns
retf
fcmovu
add
ins
rol
inc
or
sbb
pop
(bad)
in
jl
lods
xchg
fiadd
outs
(bad)
loop
mov
fnstsw
mov
cwde
mov
sub
(bad)
fwait
sahf
ins
xchg
shr
xchg
cmp
xchg
add
std
in
call
das
test
push
cmp
dec
inc
fild
pop
sbb
jb
and
mov
loope
pop
loopne
and
ins
icebp
js
mov
fs
cmp
adc
jne
fadd
mov
jmp
test
mov
or
js
test
sahf
mov
test
cmc
and
sub
xchg
push
leave
sbb
jne
xchg
mov
fadd
outs
imul
push
xor
fcomp
jmp
test
xchg
xchg
cmps
popa
push
add
pop
test
push
jae
fs
gs
cmps
lock
rcl
mov
nop
xor
add
push
dec
jo
fwait
sub
mov
scas
lock
sub
pop
in
in
outs
les
je
data16
sub
cmp
ins
out
or
fs
or
and
cs
jne
int
lock
(bad)
loop
mov
popf
hlt
fwait
ret
inc
int
xor
push
les
addr16
inc
push
and
ja
cmps
in
jmp
or
test
enter
xchg
jmp
call
shl
xor
cmc
clc
mov
mov
cmps
sbb
pop
xchg
jo
cwde
adc
pop
icebp
js
push
nop
push
cli
xchg
out
in
and
cdq
icebp
pushf
dec
cs
aad
clc
mov
std
xor
jne
cmp
movs
pushf
dec
mov
mov
ret
loop
loope
fst
push
(bad)
mov
gs
sbb
xor
dec
cmp
cmc
(bad)
retf
xor
fbld
das
cld
xchg
das
rol
dec
out
xor
and
mov
in
data16
pop
in
call
in
sti
xor
enter
imul
xchg
inc
sbb
mov
repnz
mov
adc
cmp
ffreep
inc
frstor
jmp
jl
xor
jns
xchg
aam
out
sbb
inc
sub
push
mov
iret
sub
xchg
push
not
mov
inc
popf
push
xlat
ja
mov
ret
(bad)
fstp
jg
aam
lea
je
sar
dec
stos
into
fisub
std
xchg
std
mov
adc
jl
fnstcw
rcr
sahf
shl
sub
jg
add
imul
sbb
xchg
pop
xchg
push
xchg
jne
ins
sahf
lahf
push
repnz
jl
adc
test
out
out
les
fcomip
ss
sub
dec
out
stos
pop
out
icebp
push
cmp
sbb
ret
nop
xchg
in
imul
popa
ins
push
sub
or
pop
pop
adc
and
shr
xchg
xchg
inc
mov
xchg
push
loope
jmp
cmps
jns
(bad)
mov
retf
xchg
xchg
lods
push
jns
out
clc
mov
mov
jae
mov
in
bound
lods
sar
iret
lods
add
icebp
mov
test
xchg
mov
lock
loopne
inc
cmp
js
jge
sbb
data16
jns
neg
cmps
daa
std
ret
stos
jne
cld
sbb
pop
(bad)
je
in
cmp
aam
jbe
mov
or
cdq
cmc
mov
cs
ss
xor
repnz
ins
xchg
or
inc
xchg
retf
fsubr
sub
jp
dec
pusha
push
mov
xchg
stos
lods
mov
inc
cmc
pop
in
add
shl
imul
loope
and
pop
fistp
dec
mov
push
cmps
stc
cmc
inc
(bad)
push
sbb
scas
add
repz
pop
or
push
ja
mov
or
ds
repz
jbe
lahf
sti
lahf
and
inc
ins
jne
dec
jo
arpl
loopne
ret
mov
pop
jae
fldln2
das
mov
leavew
movs
pop
data16
popa
cmp
pop
inc
xchg
mov
in
add
push
mov
pop
cmps
mov
push
inc
xor
arpl
jmp
cmp
mov
add
int
in
test
shl
mov
adc
push
sub
mov
mov
xor
punpckhwd
xchg
sub
cmps
dec
add
sub
push
out
sbb
xchg
adc
aas
dec
(bad)
fbld
xchg
xchg
add
call
add
jmp
sbb
rcl
fdiv
and
add
sub
aad
push
scas
xor
dec
jne
ret
cmp
sbb
fild
out
pop
arpl
pop
in
mov
inc
adc
dec
shr
sahf
enter
xor
jns
lock
xlat
bound
leave
clc
mov
xchg
dec
addr16
nop
shl
mov
fwait
(bad)
adc
out
retf
pushf
and
(bad)
push
out
test
mov
cmp
addr16
pop
dec
into
mov
dec
cld
jo
test
pop
sar
ror
adc
ja
lea
xor
adc
fldenv
jle
dec
xor
ins
xor
xchg
pop
jb
cmp
(bad)
sti
push
lea
adc
sbb
(bad)
cmps
idiv
inc
push
out
ss
jnp
and
xchg
jmp
xchg
adc
mov
aad
and
push
(bad)
enter
push
jbe
mov
xchg
jle
dec
mov
xchg
mov
pop
loope
(bad)
push
cmp
jecxz
or
jae
out
sti
jp
add
jmp
loop
pop
js
push
stos
inc
jo
les
push
das
xlat
mov
inc
ins
out
(bad)
xor
push
jns
fs
sub
pop
ja
xchg
mov
scas
(bad)
ror
in
in
push
xchg
shr
int
js
add
adc
pop
fld
cmps
fistp
pop
inc
or
loope
in
sub
jne
and
(bad)
pop
cmp
mov
arpl
push
pop
jo
xchg
xchg
imul
fnstcw
sub
(bad)
lea
and
xchg
mov
out
push
push
ret
ret
addr16
cmp
pop
jns
mov
sub
call
mov
inc
pop
add
test
sbb
jae
test
js
fidiv
pop
push
sub
cmp
enter
and
sub
push
xor
addr16
pop
in
add
pop
sub
lea
push
enter
push
or
ret
(bad)
cwde
mov
mov
mov
test
dec
mov
push
mov
sbb
adc
or
jge
loopne
lds
cmp
cmp
cwde
adc
adc
cmc
sbb
sub
mov
das
jp
mov
dec
dec
sbb
pop
mov
xlat
push
push
jae
(bad)
mov
mov
daa
dec
sub
outs
and
pusha
mov
pop
rcr
rcl
hlt
rcl
mov
cmp
pop
add
push
push
add
jl
mov
dec
in
pop
loope
xchg
jmp
shl
bound
addr16
xchg
movs
cmp
xchg
lock
xchg
cdq
and
cmp
sbb
sbb
sub
mov
cmp
push
mov
adc
push
dec
push
xchg
or
mov
pop
dec
(bad)
jge
sub
sbb
adc
adc
fnstenv
xchg
pop
pop
add
iret
mov
push
mov
sub
mov
adc
xchg
popf
or
and
shl
mov
jmp
cmp
dec
jp
mov
test
mov
xchg
imul
out
mov
bound
arpl
cmc
push
shl
mov
sahf
sti
nop
push
mov
daa
pop
(bad)
movs
nop
popa
loope
mov
rol
stc
mov
jle
adc
jne
dec
cmp
sar
pop
in
call
fidiv
push
adc
add
adc
fbstp
cli
repnz
loope
dec
ins
je
sbb
push
lds
lods
test
popa
or
sar
hlt
xchg
repz
xchg
add
adc
add
jmp
push
leave
mov
inc
enter
xor
retf
pop
aam
fdivr
out
add
aaa
adc
cmp
mov
aad
xor
lock
in
je
enter
cmc
imul
cmp
and
mov
fwait
daa
push
dec
std
adc
fisttp
std
and
dec
jl
mov
pusha
icebp
xchg
fs
test
scas
int3
imul
stos
mov
retf
daa
mov
arpl
pop
aad
sbb
fadd
mov
pop
mov
loopne
xchg
inc
pusha
es
sub
fcom
loopne
data16
jne
push
inc
je
push
jmp
push
mov
mov
mov
mov
xchg
repz
push
fistp
mov
dec
jb
cld
jae
imul
xchg
inc
adc
jle
out
jb
mov
xor
mov
push
mov
int3
jae
dec
loop
add
or
(bad)
xchg
enter
jnp
mov
(bad)
in
push
not
and
dec
cmp
jecxz
jns
cmp
dec
call
pop
xchg
repnz
xor
ret
test
sub
mul
movs
int
daa
shl
push
ret
or
adc
mov
cdq
fadd
adc
jp
(bad)
cmp
std
adc
lods
or
adc
movs
xor
sahf
xchg
aaa
sub
sub
loopne
test
dec
add
jbe
mov
aas
push
push
xor
sbb
jmp
mov
je
sbb
shl
fadd
in
cld
adc
ffreep
xchg
lahf
test
loop
test
test
test
inc
scas
fsub
mov
jg
pop
mov
das
mov
data16
and
mov
ja
cmp
or
mov
movs
in
fwait
dec
cld
and
pop
or
push
sub
or
pop
or
fcomp
sub
loopne
sbb
das
mov
mov
outs
dec
cmps
and
repz
js
mov
cli
pop
fcmovbe
dec
rol
inc
push
cmp
sub
out
push
dec
sub
dec
shl
(bad)
mov
std
mov
jg
jb
xchg
jmp
shr
jl
mov
cmps
jmp
cli
push
es
rcl
lods
addr16
stos
push
ins
adc
lds
add
push
sti
cld
jmp
popf
adc
or
sbb
adc
js
inc
gs
ins
mov
rol
retf
xchg
fistp
sub
push
fnsave
jmp
pop
out
xlat
mov
daa
cmp
dec
jno
jmp
sbb
fistp
outs
ins
jl
xchg
or
fisttp
sar
pop
cmc
or
into
dec
xchg
div
xchg
sub
ds
push
lock
cld
cwde
ja
outs
and
jle
add
xchg
jle
fidiv
(bad)
lods
sahf
retw
and
dec
loop
jo
outs
ret
(bad)
fdiv
jle
cmp
mov
out
imul
jmp
ja
popf
(bad)
xchg
push
das
or
test
in
scas
mov
cmp
cmp
aaa
mov
push
(bad)
and
repz
in
div
aam
push
popa
mov
jne
mov
push
sub
push
sbb
popa
ret
pop
xchg
jnp
cmp
fdiv
es
lods
(bad)
in
mov
loopne
xchg
mov
jg
dec
sti
adc
cli
xchg
sbb
dec
add
(bad)
in
pop
into
sti
in
and
mov
aad
mov
push
xor
dec
shl
ja
push
cmps
fbld
int
pop
and
js
movs
push
fstp
loop
repnz
dec
mov
dec
mov
pop
cld
call
int
div
(bad)
ss
in
adc
xchg
mov
add
mov
pop
add
inc
or
(bad)
sub
adc
dec
pop
sub
sbb
dec
pop
dec
test
push
inc
ret
pop
jnp
adc
mov
push
sti
xchg
push
aam
mov
mov
pop
rol
jnp
inc
shl
cmp
sti
fst
jae
pop
add
xchg
fwait
xchg
and
pop
mov
icebp
fmulp
and
movs
adc
or
fnstcw
std
inc
jne
outs
in
or
imul
inc
mov
out
push
xchg
jne
loopne
ss
cs
jp
iret
rcl
retf
ret
pop
or
pop
sub
push
pushw
popa
pusha
mov
push
push
(bad)
ret
push
inc
jne
adc
sahf
(bad)
pop
repnz
sbb
fild
and
cmps
inc
adc
lock
sub
lds
ja
push
or
xor
and
and
xchg
push
out
sbb
sub
jmp
xchg
dec
enter
daa
xchg
fisttp
xchg
inc
xor
test
xlat
gs
stc
retf
xchg
shl
call
sbb
dec
xchg
dec
out
jo
ja
loopne
sub
and
in
push
rep
repnz
pop
out
xchg
mov
es
outs
jns
loop
xchg
xchg
leave
out
dec
sbb
add
sbb
push
test
mov
hlt
retf
mov
xchg
sub
dec
pop
imul
adc
cwde
mov
pushf
(bad)
cmp
xor
inc
push
mov
call
xor
mov
sub
mov
mov
lea
xchg
fnstenv
sbb
retf
mov
xor
loopne
or
bound
xor
sub
add
sub
pop
jmp
adc
es
fstp
sub
je
scas
lds
jae
inc
jo
inc
mov
retf
xor
sub
repnz
push
repz
in
jl
pop
adc
jmp
repz
adc
mov
and
dec
dec
test
and
cmp
push
stos
mov
out
mov
test
pop
sbb
clc
xchg
pop
add
xor
cmp
fdiv
jns
pushw
ror
jg
add
jge
out
ins
or
std
push
les
(bad)
sbb
add
cmp
ja
mov
into
pop
inc
cmp
mov
jge
xchg
call
in
in
mov
inc
adc
push
xor
cmps
jae
sub
push
call
scas
scas
mov
adc
shr
mov
and
popf
cmc
icebp
stos
push
outs
gs
in
cmp
stos
sbb
xchg
adc
push
shl
push
inc
xchg
push
(bad)
dec
jle
ins
imul
jb
movs
ror
cmp
pop
mov
leave
ret
lods
js
in
sbb
int3
ds
push
mov
ss
or
fidivr
xchg
lock
xchg
push
fwait
sub
cmc
xchg
mov
lods
mov
inc
popa
imul
mov
jb
loope
shl
inc
popa
jae
or
call
fucomi
xchg
leave
nop
sub
push
clc
js
test
(bad)
retf
jge
cmp
xchg
sbb
xchg
pop
daa
mov
vpaddsb
add
seto
movs
std
push
(bad)
setno
cmp
sbb
xchg
push
jns
(bad)
jmp
xor
fsubr
(bad)
jp
retf
out
test
int3
rcr
cmp
cmp
ror
sub
sub
loopne
cmp
sub
push
or
xchg
jge
and
dec
ss
xlat
call
jae
adc
loope
mov
les
sub
jb
jo
hlt
adc
adc
mov
stc
sub
test
inc
xchg
icebp
pop
sub
fs
sbb
cmp
cwde
adc
xor
cld
test
popf
out
cwde
idiv
imul
push
cmps
or
leave
mov
adc
cmp
mov
icebp
jmp
adc
xor
mov
cmp
cmc
push
lods
jb
or
pop
cmp
jg
sub
pusha
xchg
push
push
jo
sbb
stos
imul
imul
dec
or
ficom
xor
(bad)
adc
pop
outs
jmp
and
sbb
and
xchg
setnp
dec
ret
sbb
sbb
repnz
push
popa
pop
push
and
jle
out
sbb
icebp
jnp
cmp
aam
pop
jp
pop
dec
(bad)
lds
retf
mov
bound
es
xchg
pop
cwde
mov
jmp
loopne
xor
mov
cli
push
push
call
mov
(bad)
jae
adc
adc
data16
lock
pusha
adc
repz
or
xor
xor
test
sub
imul
lods
data16
enter
pop
push
sub
inc
mov
clc
pop
lock
xchg
cmp
sub
aaa
xor
adc
outs
sub
mov
cmps
js
loope
(bad)
loopne
lds
xchg
fcmovb
data16
mov
lds
cs
jl
jo
inc
push
sahf
sub
dec
pop
addr16
jmp
js
push
adc
call
adc
cmp
inc
ficomp
xchg
xchg
sub
jae
mov
shl
mov
cmps
scas
cwde
mov
push
or
int3
jmp
icebp
js
sub
inc
iret
rcr
sahf
jmp
mov
xchg
daa
cmp
sub
ins
sub
mov
movs
and
push
pop
cmp
pop
movs
jns
cdq
cmp
pop
(bad)
std
mov
retf
js
xchg
add
xchg
xchg
repnz
aam
(bad)
repz
in
pop
mov
loopne
sbb
je
jg
adc
outs
xchg
jmp
adc
sahf
pop
inc
movs
daa
mov
mov
(bad)
jecxz
sub
outs
out
mov
jno
sbb
fwait
lods
fcomp
sub
and
adc
ror
mov
out
gs
scas
mov
xor
les
sar
and
pushf
sahf
fst
ja
movs
cmp
pusha
test
mov
pop
inc
mov
test
push
mov
add
pop
jne
adc
in
sub
push
mov
jne
xchg
lock
out
adc
jle
sbb
leave
fucom
sub
pop
dec
scas
add
cld
mov
loope
jmp
(bad)
arpl
cmp
push
js
out
call
inc
lahf
push
mov
mov
in
je
mov
xchg
pop
fadd
mov
rcr
loop
ret
sub
fwait
int
out
test
cld
mov
mov
xchg
mov
cmc
dec
sbb
out
cmp
jp
xor
popa
pop
(bad)
sbb
xchg
ret
and
test
xlat
(bad)
gs
test
mov
pop
pop
iret
fwait
jb
xchg
push
jne
mov
mov
cs
lea
ror
pusha
test
xlat
jg
fstp
xchg
cwde
sbb
scas
mov
sbb
stos
aam
(bad)
enter
mov
mov
fwait
cmp
nop
and
pop
lods
sub
or
xor
dec
mov
es
das
mov
xor
aas
jo
popa
pop
adc
mov
nop
mov
(bad)
push
std
cmp
jb
pop
xor
jne
xchg
ins
ror
mov
std
loopne
cmp
mov
shl
and
jae
sbb
out
shl
jnp
mov
pop
mov
pop
loope
das
(bad)
movs
rcl
loopne
(bad)
sti
cmp
addr16
or
push
cmp
add
cdq
or
and
xchg
push
cmp
popf
jno
mov
loopne
xor
(bad)
div
ret
hlt
pop
(bad)
push
ins
add
je
adc
adc
or
ss
addr16
jb
mov
rol
(bad)
push
xchg
xlat
popf
js
enter
call
jo
cmp
dec
mov
ds
cdq
jmp
cmps
(bad)
sub
sbb
into
jae
cmp
loop
dec
aas
sub
jp
cdq
loopne
in
pop
push
and
addr16
jp
cmp
jle
inc
mov
sbb
cmc
jp
sub
jg
into
popf
xor
lods
lock
xchg
cdq
pop
push
retf
mov
scas
out
jg
dec
outs
mov
dec
dec
pop
adc
mov
cmp
jae
out
push
add
(bad)
xchg
xor
in
jne
aaa
and
ror
shl
loopne
mov
inc
jp
ins
iret
ret
loopne
or
into
mov
adc
cs
out
loopne
mov
popa
cwde
mov
xchg
aad
mov
xchg
test
fnsave
in
xchg
pop
and
les
cmp
or
and
mov
pop
xchg
mov
test
rcl
add
ror
mov
mov
in
push
daa
sbb
adc
sbb
loop
jae
hlt
aam
in
jmp
jne
sub
mov
out
xor
mov
adc
sti
xchg
sbb
xor
loopne
sbb
int
mov
loope
mov
ret
retf
push
push
push
pop
mov
sub
ret
push
bnd
jl
mov
jmp
sbb
(bad)
fmul
inc
mov
stos
cmp
in
icebp
in
inc
fs
push
fs
mov
mov
add
repz
jp
stos
lock
or
pop
pop
mov
push
(bad)
stos
setne
mov
dec
jg
push
inc
push
jne
jmp
cmp
loope
pop
jmp
loope
dec
fidiv
cmp
push
fisubr
ret
cmp
mov
mov
pop
mov
addr16
cld
stc
cs
(bad)
cld
stos
pop
popf
psllw
inc
call
int
jp
jecxz
mov
jne
mov
pushf
or
fild
int
imul
add
arpl
js
repnz
sar
bound
shl
bnd
mov
and
jl
xor
hlt
inc
inc
outs
sub
mov
mov
ins
mov
push
xor
sbb
cmp
dec
or
retf
mov
aaa
sbb
xlat
xchg
enter
fiadd
sar
xchg
mov
clc
sbb
fnstsw
inc
jp
xchg
in
scas
cmps
jl
mov
adc
shr
dec
aam
or
aas
jns
nop
push
fmul
je
fcmovbe
lahf
mov
jge
fidivr
mov
xchg
std
sbb
jmp
arpl
xchg
mov
jg
or
cmps
dec
test
je
sbb
inc
fsubr
test
add
cli
arpl
cwde
daa
fistp
(bad)
(bad)
retf
out
dec
jl
rcl
cmp
adc
pop
test
xor
cmp
sbb
mov
adc
imul
xchg
xchg
mov
dec
repz
add
sub
fild
fisubr
jo
jle
int3
xor
ror
xchg
shl
sbb
cmp
add
pop
jp
js
xchg
shr
mov
dec
mov
mov
mov
jge
mov
(bad)
adc
cmp
cmps
lds
repnz
mov
and
in
popa
fwait
stos
icebp
out
paddsw
sub
mov
sbb
retf
jnp
inc
(bad)
fsub
or
mov
push
adc
sbb
rcr
push
movs
cmp
xchg
pop
mov
cmps
mov
pop
in
xor
outs
push
mov
jmp
js
lea
inc
loop
pop
sub
push
xor
push
cmp
mov
pop
push
repz
xchg
fnsave
ss
pop
xor
and
xchg
in
sbb
out
sub
pop
sbb
xchg
jbe
adc
sbb
cs
sbb
(bad)
adc
icebp
jmp
into
(bad)
iret
outs
fdivrp
pusha
imul
mov
int3
add
call
hlt
and
jp
xor
shl
xor
pop
(bad)
mov
std
ins
push
and
stos
cmp
xrelease
xchg
lea
cmp
sbb
fadd
jnp
out
xorps
mov
push
repnz
idiv
movs
dec
test
pop
outs
pop
and
scas
data16
cli
shr
ret
lock
mov
cmp
ffree
or
pop
mov
stc
or
call
mov
in
ror
ins
cmp
std
(bad)
retf
out
cmc
mov
int
gs
test
jo
jmp
jp
test
push
aam
stos
xchg
push
xchg
jle
mov
jb
push
mov
and
sbb
rcl
sbb
rcr
pop
fmul
pusha
loop
mov
jle
sbb
xor
ins
fsub
cmp
xchg
mov
mov
in
cmp
ret
div
push
add
inc
retf
pop
pop
jbe
sub
stos
test
pushf
inc
aaa
mov
jecxz
inc
je
sub
xchg
outs
in
sbb
push
fs
jo
xchg
add
jmp
xor
pop
mov
cld
mov
push
(bad)
xor
xchg
test
es
(bad)
or
lds
xchg
pop
mov
sub
jmp
retf
mov
clc
fdivr
(bad)
and
push
std
dec
xchg
inc
aaa
sbb
cmp
sar
jg
in
ret
jns
ja
rcr
jl
ret
sbb
int
cmp
xchg
int3
int
data16
data16
sti
pop
sbb
mov
jge
inc
mov
push
gs
cmp
cmp
addr16
mov
adc
push
ja
or
xor
imul
jecxz
stc
sub
and
or
idiv
(bad)
stos
mov
xor
mov
jg
movs
jl
sub
into
cmp
jmp
idiv
xor
adc
cmp
movs
push
cmps
scas
jne
and
dec
pop
xchg
cmc
cmc
ret
fdiv
adc
xchg
jle
jp
inc
idiv
adc
or
push
test
jo
push
test
sbb
pusha
outs
fbstp
fnstcw
retf
scas
ret
(bad)
mov
pop
repz
or
or
mov
jecxz
(bad)
pop
mov
jp
or
or
jo
fidivr
adc
ja
clc
pusha
pushf
lods
sti
retfw
out
movs
stos
daa
in
inc
push
in
inc
jmp
inc
and
cmc
xchg
dec
cmp
mov
jp
in
outs
jmp
sti
jg
loopne
xor
ins
pushf
inc
adc
jbe
bound
scas
adc
rcl
fwait
adc
mov
jl
mov
sbb
icebp
mov
lock
sahf
out
xchg
sbb
jmp
xchg
sbb
je
sbb
xchg
lea
inc
adc
and
js
push
sub
xor
cs
mov
mov
loop
sub
dec
retf
and
test
repnz
sbb
adc
lea
mov
mov
into
clc
mov
data16
or
mov
pop
shl
in
cmp
jbe
push
test
xchg
sar
or
pusha
cmp
sbb
das
push
xlat
popa
push
jp
sub
sbb
or
pxor
mov
jp
cmp
pop
cmp
sub
addr16
pop
jno
into
xor
push
cmc
xor
mov
repz
pop
lds
data16
adc
push
jns
adc
les
bound
push
jmp
shr
pop
gs
pop
push
mov
sub
fld
popf
je
call
aad
pop
stos
mov
push
push
cmp
cdq
aam
ins
mov
mov
xlat
jmp
loopne
je
xchg
fnstcw
lock
mov
mov
mov
idiv
cmp
into
add
ss
test
outs
xchg
imul
add
cs
into
push
xor
inc
popa
sub
xchg
push
mov
mov
inc
lds
sub
mov
iret
inc
sbb
adc
dec
test
imul
sbb
pop
leave
sub
push
xchg
sbb
arpl
shl
sti
push
mov
cdq
xor
mov
(bad)
les
fdiv
es
call
adc
and
mov
mov
int
lahf
std
push
icebp
stc
std
out
mov
ds
das
cmps
les
(bad)
pushf
inc
sub
movs
jmp
jmp
jns
loop
daa
repz
nop
cmc
hlt
adc
mov
cli
pop
pop
dec
xor
cmp
int3
and
mov
jne
add
int3
lahf
cmp
arpl
fs
psubsb
(bad)
retf
and
pop
push
and
sub
and
xchg
mov
mov
cmp
sbb
outs
ret
pop
ins
movaps
imul
bound
test
lock
pop
xchg
cs
call
cmps
xor
lock
loope
mov
fnstcw
jp
inc
mov
mov
jnp
and
xchg
ret
in
fnsave
movs
(bad)
push
out
aad
or
aad
xor
dec
cld
lods
cld
xchg
mov
jmp
pop
cs
mov
jg
mov
mov
sub
mov
mov
mov
mov
push
mov
sti
sub
imul
call
pop
xchg
jle
js
cmp
xchg
push
imul
retf
shr
jmp
out
sub
cs
xchg
movs
adc
mov
pop
jne
fst
mov
xchg
inc
mov
xchg
aas
sub
test
adc
add
outs
mov
jg
jmp
cmps
stos
cdq
test
repz
jae
jge
cmp
push
mov
retf
xchg
aad
xor
xor
call
daa
fadd
or
sbb
lods
inc
xchg
imul
and
js
add
jp
shr
sub
cmp
and
fcomp
xchg
dec
cdq
outs
ss
sub
nop
stos
sbb
fdivr
retf
ja
test
icebp
(bad)
sbb
cld
in
inc
pop
sub
dec
jmp
jne
loop
push
test
dec
inc
jge
or
or
or
mov
js
mov
mov
(bad)
popa
cmps
mov
xor
outs
push
mov
cmp
fiadd
sub
lahf
xor
sub
mov
movs
loop
retf
adc
pop
xchg
iret
fdivr
aas
xchg
pop
inc
add
ss
addr16
hlt
adc
repnz
pop
xchg
ret
and
jg
lds
pop
adc
jae
sub
add
sub
cmp
xchg
dec
add
mov
sbb
out
xchg
push
das
xor
data16
dec
ret
mov
xchg
jmp
movs
add
inc
loopne
xchg
push
jmp
pop
hlt
push
ret
inc
ret
scas
mov
ret
in
cmp
cmp
mov
test
adc
test
(bad)
cmp
ret
xor
jge
mov
test
xchg
jbe
fbld
jg
or
push
ins
out
xor
into
push
jb
and
xor
punpckhbw
inc
cmc
mov
or
call
aad
lea
push
fistp
cwde
lods
adc
mov
mov
xchg
push
stc
inc
mov
mov
and
dec
mov
pop
jl
popa
cmc
rol
ss
les
cmps
cmps
in
cmp
mov
mov
bound
ror
test
fld
leave
sub
cmp
xchg
sbb
xchg
mov
and
ja
adc
xor
aas
xor
cld
adc
movaps
sar
stos
(bad)
ror
test
cmps
in
dec
leave
sub
fs
fimul
cmp
in
enter
xchg
xor
js
xchg
add
cmp
ds
sahf
mov
sbb
out
call
and
test
or
and
(bad)
fscale
outs
cmps
mov
push
pop
mov
neg
dec
cmp
add
inc
push
fcom
jo
or
pop
dec
mov
cmc
pusha
xchg
pop
or
and
adc
cmc
sbb
lock
sub
test
or
mov
fwait
jg
in
xchg
lock
and
pop
push
push
ds
in
cld
jge
gs
in
xchg
outs
mov
push
in
jmp
icebp
call
jbe
sub
stos
ret
test
jmp
je
push
repnz
loope
cmp
int3
test
jmp
mov
pop
inc
stos
pusha
push
cmps
pop
mov
cwde
sbb
ret
out
das
dec
or
mov
call
repnz
idiv
loopne
mov
pop
data16
cmp
imul
adc
mov
xchg
ret
mov
aas
fs
cmp
shl
cmp
outs
xchg
inc
gs
push
repz
add
je
call
add
dec
pop
ret
retf
add
mov
sbb
push
xor
movs
pushf
xchg
jbe
loope
push
mov
mov
jne
ret
or
ss
push
mov
pusha
pop
push
jecxz
mov
call
jo
and
stc
or
(bad)
fdiv
mov
jp
es
cld
addr16
mov
push
sub
xchg
xchg
sub
lds
xor
xor
push
call
jecxz
cmc
shl
xor
mov
jecxz
iret
mov
loop
arpl
jl
mov
movs
mov
mov
sub
sbb
jge
xchg
jmp
jb
fisttp
jl
add
sti
mov
pop
cwde
call
mov
xchg
cmp
ret
lahf
cwde
mov
push
pop
ins
pop
sbb
pop
outs
jno
rol
xchg
xor
push
mov
mov
cld
and
jecxz
push
clc
out
cmp
xchg
sbb
hlt
jle
loop
outs
ret
cmp
lea
mov
cli
and
jnp
sub
xor
popf
repnz
hlt
pusha
add
loope
fwait
sub
repz
mov
sub
xchg
cmp
dec
cmp
aad
retf
mov
fmul
(bad)
loope
lahf
test
pop
dec
gs
adc
jbe
(bad)
xchg
mov
sub
mov
cmp
mov
adc
mov
dec
xchg
lods
adc
fs
push
and
xor
jle
sbb
(bad)
adc
inc
add
repnz
je
js
xchg
push
inc
jo
sbb
ror
mov
jb
add
mov
pusha
cmp
sub
sub
pusha
xchg
add
adc
mov
push
(bad)
pop
mov
scas
sub
sub
dec
mov
xrelease
add
sbb
and
sti
push
pushf
jae
cmp
je
sahf
fdiv
sbb
push
pop
call
lea
sbb
inc
gs
cmp
sahf
push
pop
mov
dec
inc
cmc
sbb
mov
(bad)
int3
xor
enter
push
gs
xor
add
cmp
mov
test
dec
cmp
outs
(bad)
mov
sbb
ret
cmp
and
sbb
cmps
int3
xor
xchg
xchg
cmp
cli
lea
adc
add
out
dec
mov
lock
dec
jl
push
and
pusha
ret
rcl
add
fsub
jmp
repnz
sbb
call
push
stc
fs
jns
dec
(bad)
(bad)
addr16
in
cmc
mov
std
outs
xchg
nop
jecxz
xor
fwait
jb
js
into
js
fnstcw
imul
sub
xchg
xchg
popf
out
out
or
fild
dec
lock
mov
gs
add
add
fcomp
adc
dec
cmp
inc
jmp
cmc
mov
mov
imul
xchg
cmp
and
push
js
cmc
xchg
pop
fldlg2
xchg
mov
(bad)
mov
xchg
std
or
jecxz
(bad)
mov
sbb
out
mov
lock
xchg
test
scas
sub
and
mov
cmp
jne
cs
imul
xchg
stos
inc
xor
das
mov
push
mov
xchg
push
xchg
nop
clc
add
jp
cmc
push
test
cli
jge
lock
loope
or
(bad)
sbb
xchg
adc
push
add
adc
je
sbb
fisubr
sbb
mov
xchg
pop
js
ret
repnz
and
sub
clc
shr
add
sub
jp
iret
retf
and
mov
adc
jno
jbe
shr
cmp
xchg
mov
xchg
cmp
movs
sbb
fadd
fcom
inc
mov
push
jecxz
std
cs
pop
or
sub
cwde
or
lock
shl
shl
arpl
push
adc
pop
std
es
pushf
push
or
jmp
les
cmps
es
not
scas
jae
out
stos
dec
xchg
add
(bad)
into
lea
mov
pop
add
aas
jecxz
js
popf
shl
pop
xor
mov
aaa
pop
jp
dec
ja
push
stc
sbb
xchg
mov
push
and
pop
out
add
add
push
xchg
addr16
mov
aaa
test
sar
je
lds
lods
and
dec
es
and
popa
xchg
cmps
xor
mov
(bad)
cmps
shl
aad
cmps
cmp
jbe
arpl
mov
jmp
stc
jne
jo
fcmovb
jae
mov
cdq
push
cmc
xchg
lods
cmc
pop
ins
jp
push
in
icebp
es
pop
call
inc
mov
mov
ret
adc
adc
cwde
dec
addr16
(bad)
iret
sub
(bad)
sbb
mov
ins
(bad)
loopne
imul
mov
into
pop
in
mov
mov
addr16
pop
js
or
test
out
shl
adc
sbb
gs
cmp
mov
stos
push
loope
xchg
cmps
push
in
sub
sbb
jae
cwde
cmc
and
dec
xchg
dec
in
and
sub
xchg
sbb
sar
add
push
in
xor
cwde
inc
push
or
add
xchg
pop
inc
push
xchg
mov
jp
std
nop
jle
mov
sbb
ret
rol
cmc
test
adc
adc
test
push
loope
or
add
stos
and
mov
loopne
out
xchg
neg
and
dec
mov
adc
outs
scas
mov
pop
mov
mov
ja
and
dec
jb
and
cmp
cmps
jmp
mov
adc
popa
pop
sub
movs
fsub
fbstp
rcr
fs
mov
and
xchg
mov
add
js
movs
aas
push
mov
push
aam
icebp
mov
loopne
and
mov
lock
in
fidiv
dec
data16
mov
enter
adc
adc
dec
js
jo
inc
xlat
cs
iret
mov
pop
jle
mov
push
ret
and
mov
shl
mov
mov
in
mov
in
xor
push
or
ins
add
loopne
mov
mov
outs
in
jmp
and
inc
cmp
lock
aam
emms
push
inc
add
leave
push
xor
mov
cmps
inc
nop
jo
test
xor
fcom
adc
dec
jno
inc
aad
lods
jno
or
les
clc
inc
push
adc
adc
jp
sub
lock
jo
mov
ins
cwde
push
mov
fs
js
mov
sbb
inc
adc
je
out
ins
xchg
aas
daa
cmp
or
pop
mov
mov
mov
(bad)
(bad)
(bad)
cmps
scas
rcr
and
sub
lea
or
jle
into
dec
ret
dec
mov
mov
or
dec
mov
xor
jl
fwait
jmp
scas
scas
stos
mov
fcmove
jg
and
push
mov
jecxz
ds
and
shl
xor
jns
popf
xchg
(bad)
outs
jnp
cli
jb
clc
push
jmp
xchg
xor
ret
shl
(bad)
shl
in
add
sbb
cwde
pop
cdq
sbb
fs
jle
popf
ja
jge
cli
jmp
or
jns
cwde
ins
mov
sahf
mov
xor
mov
mov
adc
lea
addr16
xor
std
and
jne
rcl
cld
mov
dec
push
outs
out
mov
sar
push
mov
sbb
or
xchg
xchg
out
cmp
sub
je
mov
inc
repnz
jo
rcl
push
jl
cmp
cmps
xchg
sub
jo
and
cmp
and
bound
and
add
and
mov
and
jne
inc
(bad)
cmp
or
cmp
jne
scas
add
pusha
cld
sbb
cmc
jl
xchg
mov
push
aaa
cld
pop
aam
xchg
(bad)
mov
test
and
repnz
xchg
retf
dec
xor
jge
pop
leave
mov
push
mov
pop
shl
mov
cli
jne
cmp
stos
adc
loop
sub
mov
add
pusha
pop
push
jg
sub
sub
sub
pop
mov
js
push
jb
pop
mov
or
imul
mov
pop
push
dec
lds
test
adc
and
jne
push
clc
outs
jecxz
pushf
iret
xchg
pop
popf
sbb
sub
adc
sub
jecxz
(bad)
push
loop
pop
sbb
cwde
cmc
jo
xchg
push
push
fs
sub
shl
fsub
sbb
loopne
outs
leavew
retw
mov
mov
cld
add
out
std
test
jbe
push
sti
retf
add
mov
cli
and
cmp
repnz
adc
push
adc
aaa
sbb
loopne
and
daa
ins
dec
mov
cmp
mov
mov
xor
xchg
in
les
pop
mov
jno
loopne
xchg
inc
add
jg
cmp
mov
ins
or
push
int3
ins
ds
scas
icebp
mov
test
out
fcos
call
sub
and
lock
pushf
aam
dec
cmps
jb
adc
std
int3
adc
mov
js
push
std
and
(bad)
int3
xchg
sub
cmp
cmp
ds
dec
sub
nop
push
ins
mov
xchg
fcom
cmp
add
jecxz
adc
sub
out
rol
pop
out
punpcklwd
(bad)
jne
int3
or
adc
cli
mov
adc
fnstenv
xor
ret
cmp
or
xor
hlt
push
adc
jmp
jno
aas
mov
dec
sub
test
jecxz
jbe
xchg
ret
iret
retf
xchg
pop
jae
push
jmp
push
sbb
daa
pop
push
test
lods
out
movs
xchg
(bad)
jno
sbb
dec
test
enter
xor
les
cmp
xchg
mov
into
sub
ss
mov
and
push
pop
jp
inc
ja
lahf
mov
imul
inc
and
and
xchg
push
push
dec
mov
cld
fidivr
js
lds
and
rol
call
movs
add
lods
sbb
mov
or
stos
popf
imul
jne
in
push
fimul
mov
es
pop
cmp
(bad)
retf
popf
dec
lock
cmps
in
cmp
xchg
lahf
test
adc
inc
sahf
out
stos
repz
sub
pusha
das
dec
jo
mov
in
mov
inc
(bad)
xor
leave
lds
push
xchg
cli
jmp
cmps
adc
aas
retf
daa
sub
or
jnp
stc
arpl
(bad)
mov
(bad)
cmc
dec
add
dec
push
rcr
mov
dec
fild
scas
mov
ret
pop
cmp
scas
and
fisubr
xlat
cmps
pop
add
scas
ds
data16
repz
sbb
sahf
xor
rcl
arpl
aam
mov
push
ret
sar
pop
mov
add
out
mov
int3
push
inc
out
stc
(bad)
inc
mov
sbb
rol
mov
jns
cmp
dec
ret
cmp
jns
mov
jno
adc
cwde
inc
sub
push
mov
mov
add
ror
inc
les
fwait
xor
adc
les
mov
xchg
sub
push
test
inc
stos
retf
and
pop
pop
ss
iret
sar
inc
mov
aam
adc
ret
rcl
dec
push
xchg
xor
xchg
sub
sbb
in
mov
mov
jno
jle
xor
cmp
cmp
push
rcr
pop
fimul
mov
hlt
push
mov
mov
xor
inc
stc
fidiv
push
xchg
xor
hlt
mov
push
add
in
fwait
xor
lock
stc
jbe
adc
ret
gs
mov
adc
adc
or
out
je
es
icebp
mov
xlat
sub
mov
xor
sbb
push
cdq
push
popf
popa
ds
xchg
push
push
dec
pushf
js
jmp
push
outs
adc
aas
mov
xlat
adc
push
pcmpeqb
sub
ficom
or
pop
lods
and
or
jae
pop
jle
jns
pop
js
retf
mov
push
out
add
and
mov
pusha
jmp
sbb
mov
loop
or
js
out
fisubr
jne
cmp
xchg
cs
ret
push
mov
and
sub
ret
push
push
jno
call
mov
sti
xchg
and
jo
or
inc
adc
lea
dec
adc
mov
xchg
mov
cli
call
stos
mov
push
cmps
or
inc
ret
add
loope
jmp
and
mov
retf
mov
jnp
add
or
mov
call
sbb
cmps
cmp
sub
shl
push
stc
mov
fs
cmp
xchg
mov
je
add
adc
hlt
push
stc
or
xor
fs
and
xchg
rcr
out
xor
xchg
lds
clc
adc
out
addr16
loopne
jl
test
pop
add
and
jne
xchg
and
xchg
or
jae
push
movs
loopne
jecxz
jl
cmp
outs
call
and
and
movs
xor
lock
cmp
sub
into
out
xor
cli
sbb
mov
mov
push
icebp
push
test
int3
(bad)
jo
or
mov
mov
clc
mov
jns
xchg
jne
lock
leave
or
loop
mov
fcomp
sbb
sbb
mov
jmp
call
jl
dec
loope
stos
(bad)
fcomp
loope
test
retf
mov
push
adc
pushf
gs
dec
xor
mov
mov
push
pop
xchg
repz
cwde
cmp
je
mov
lods
mov
jno
clc
mov
jmp
je
rol
call
neg
ins
ret
jge
pusha
pop
cmc
cmp
adc
xchg
push
dec
rol
jb
jecxz
pushf
xchg
icebp
push
push
dec
ret
jne
xchg
out
mov
mov
jmp
pop
imul
mov
push
inc
xchg
jge
mov
push
int
rcr
adc
cmps
lods
xchg
mov
jno
pop
jae
test
cs
pusha
inc
mov
mov
pop
inc
movs
cmp
(bad)
rol
jne
lods
ja
iret
repz
sub
sub
rcl
arpl
sbb
loope
xchg
push
pop
jnp
add
inc
shl
mov
xor
cmp
jp
in
xchg
gs
out
lds
lds
jbe
cmp
jle
dec
xor
jecxz
test
call
jnp
ja
push
mov
xchg
leave
cmp
dec
aad
arpl
(bad)
xchg
and
iret
data16
repnz
cld
mov
jge
in
mov
fwait
pop
loopne
xchg
imul
adc
xchg
xchg
adc
popa
jmp
test
dec
dec
adc
mov
jns
jecxz
add
inc
sti
fnstcw
xor
dec
xchg
jne
or
out
mov
js
in
int3
mov
rcr
dec
hlt
pop
outs
xchg
retf
mov
cs
cli
daa
cmp
clc
push
xchg
mov
lods
div
inc
jae
or
mov
pop
fs
sub
out
pop
push
test
and
out
(bad)
popa
cld
push
fst
inc
aam
(bad)
mov
mov
sbb
or
cmps
jmp
sar
add
mov
mov
adc
xchg
pop
es
fsub
dec
outs
jmp
jbe
mov
aad
sub
fmul
aam
mov
loope
xor
int3
add
pop
jbe
imul
ja
jp
and
lds
xchg
popf
in
sub
or
out
imul
cmp
pop
and
fbld
push
pop
into
xor
pop
fisttp
scas
pusha
or
jb
daa
data16
lods
or
cld
iret
xor
dec
ss
jl
mov
ror
aaa
xchg
hlt
inc
jno
add
add
sysenter
(bad)
or
or
xchg
lods
loop
inc
mov
sub
mov
and
sahf
pop
loopne
jo
cmp
push
push
data16
add
shl
fidiv
frstor
add
loop
mov
enter
jne
cmp
jle
mov
out
int3
movs
jmp
lods
mov
fcom
shl
into
repnz
int
aam
jmp
pop
cmp
mov
ins
and
xor
dec
cs
je
mov
fist
xor
in
xchg
call
in
and
mov
jae
push
pop
mov
pop
mov
jmp
jno
adc
mov
js
xchg
retf
jg
mov
xchg
test
in
mov
push
repnz
cmc
sbb
test
push
stc
dec
mov
mov
out
pop
nop
fs
xor
fs
jae
add
pop
mov
xor
mov
jne
and
xchg
jae
pushf
add
jo
cs
shr
and
hlt
xchg
cmp
int3
cmp
jp
mov
jge
jb
ret
mov
lea
and
jns
mov
fisub
(bad)
and
or
mov
jmp
push
mov
int3
or
mov
and
sub
lock
test
out
pop
scas
or
add
mov
mov
std
ja
mov
repnz
das
popf
xor
sar
jae
int
ror
xor
(bad)
cld
fcom
sub
sub
idiv
jl
xchg
or
xor
xor
adc
loope
clc
or
js
sbb
push
cdq
pop
icebp
cmp
js
std
mov
sub
mov
xchg
inc
cmps
fidiv
cmp
(bad)
mov
push
mov
pop
arpl
popf
call
daa
in
inc
pusha
xchg
test
call
inc
arpl
or
push
aad
das
sub
aam
popa
cmp
loope
add
inc
mov
xchg
and
jns
cmps
mov
lahf
mov
mov
pop
pop
mov
arpl
ror
sub
imul
inc
add
int
jge
es
push
sub
mov
test
xor
cmp
je
ffreep
cld
lea
and
or
ins
movs
jo
mov
jns
and
je
js
jmp
clc
adc
adc
fnstsw
push
ins
mov
movs
hlt
ins
push
xchg
addr16
fwait
jo
dec
jno
and
fs
cmps
push
adc
cmp
adc
or
pushf
sbb
ss
cmc
mov
dec
or
test
out
pop
mov
loopne
xchg
lods
inc
xchg
mov
jns
sbb
pop
fnstenv
ret
pop
xchg
jbe
sub
push
or
jmp
addr16
shl
cmp
ins
into
xabort
mov
xor
int
sub
nop
push
loop
jne
add
ds
in
jmp
adc
sub
lods
cmp
jle
pop
sbb
mov
cmp
outs
inc
rcr
mov
mov
dec
shl
daa
int3
(bad)
ficomp
aaa
cmp
inc
sbb
ret
fwait
xchg
xor
xchg
push
pop
cmove
jge
mov
nop
dec
inc
popf
dec
aam
lods
rcr
push
mov
ds
add
mov
add
daa
push
pop
jl
movs
xor
jle
ret
cmp
xor
call
imul
sub
lahf
fsubr
mov
dec
dec
(bad)
movs
ins
mov
cmc
adc
gs
add
push
arpl
jg
test
xchg
adc
fwait
add
enter
das
jp
xor
sub
xchg
inc
jmp
inc
jmp
movs
push
fsubr
ja
mov
aam
test
xor
std
outs
xchg
shl
jmp
clc
jae
mov
test
ins
and
inc
dec
xor
pop
dec
fwait
add
mov
jge
jmp
jb
jl
hlt
sub
stc
test
cmp
add
jnp
repz
cmp
or
fsub
in
daa
xor
into
cmp
adc
addr16
add
ret
jne
adc
inc
jmp
and
or
fist
mov
xchg
cdq
call
test
adc
push
retf
in
lds
dec
into
jge
outs
jl
push
mov
xor
fsubr
cmc
pop
loope
and
add
jb
xor
xor
adc
outs
retf
mov
outs
mov
ret
mov
pop
mov
mov
movs
lods
fs
and
enter
mov
outs
sbb
rcr
pop
nop
sub
sti
jmp
sahf
dec
jae
mov
xchg
mov
lods
adc
enter
or
jb
ins
push
mov
xchg
in
push
ret
or
loopne
lea
fstcw
stc
fsub
call
out
int
clc
jecxz
cli
retf
push
jl
xchg
daa
loope
cmp
jnp
call
jae
dec
fstp
xor
cmp
iret
or
data16
mov
dec
aam
sub
je
icebp
push
jo
or
fbstp
sub
cmc
cmps
dec
mov
cmp
gs
ins
in
mov
cmc
popf
push
adc
cmps
dec
sahf
xchg
les
addr16
dec
or
leave
mov
mov
repz
inc
hlt
(bad)
cld
adc
shl
clc
dec
icebp
out
pushf
adc
cmp
jae
sub
arpl
imul
mov
xor
sub
cmc
rsqrtps
mov
int3
test
push
cli
out
jbe
and
dec
and
inc
and
cmp
jnp
aad
ins
mov
adc
adc
mov
dec
xor
int3
pushf
sbb
sub
cmps
sbb
(bad)
call
lahf
test
les
and
dec
push
cwde
lock
push
xchg
hlt
jno
pop
movs
hlt
adc
cld
nop
add
sti
sbb
push
repz
cs
push
es
sub
dec
cwde
adc
sbb
mov
push
mov
pop
test
adc
nop
mov
jp
mov
test
and
jns
bnd
and
sbb
pop
dec
into
lock
mov
repz
out
sbb
xchg
mov
stc
popa
jg
mov
outs
sbb
fbstp
les
inc
and
outs
retf
and
lods
ret
pushf
pop
mov
mov
cmp
jbe
mov
ror
adc
mov
ror
cwde
jae
or
in
loopne
mov
jnp
adc
mov
je
xchg
sahf
push
xchg
outs
jl
ret
cmp
xchg
inc
cli
sbb
push
fs
hlt
push
daa
fstp
(bad)
mov
adc
div
jp
adc
xchg
adc
dec
jnp
dec
pusha
test
lods
idiv
test
and
imul
test
mov
mov
sub
cmp
xor
rol
retf
jo
sub
fidivr
out
mov
icebp
dec
push
xor
pop
(bad)
pop
jns
dec
xor
out
and
int
push
arpl
fdiv
cld
fist
pop
int3
fbld
retf
mov
mov
arpl
and
popf
jns
movs
hlt
fdiv
dec
pop
jle
and
mov
lock
inc
scas
pusha
mov
sbb
push
js
jbe
inc
pop
cmc
lahf
in
xor
jmp
jne
call
sub
jns
retf
sbb
fisub
inc
dec
pop
pushf
adc
aad
aas
lods
inc
and
ror
sub
jne
iret
(bad)
cmp
je
fs
(bad)
sub
int3
(bad)
pop
es
jle
(bad)
adc
cmp
dec
adc
push
xchg
cmp
jle
sub
pop
fcomip
lods
in
inc
xchg
iret
mov
inc
mov
int
inc
nop
cmp
js
je
jne
add
(bad)
mov
jae
(bad)
pop
adc
stos
xor
ror
dec
cmp
adc
sahf
add
dec
cmp
sbb
mov
mov
xor
xlat
ja
and
shl
xchg
xchg
outs
jne
lods
jecxz
or
es
jno
xchg
call
cwde
out
pop
mov
movs
mov
xor
ja
and
retf
xor
xchg
inc
dec
jge
out
std
pop
mov
push
xchg
dec
cmp
push
sub
xchg
in
fcom
cs
push
(bad)
push
mov
push
xor
test
mov
dec
ficomp
test
cmc
mov
ret
shl
sub
(bad)
rcl
mov
mov
add
jp
mov
jp
test
push
test
jns
lods
popf
and
sub
pop
adc
stc
xlat
daa
stc
lods
gs
mov
cli
cs
dec
inc
std
jmp
aam
test
cmp
sbb
sbb
sub
jns
(bad)
xlat
hlt
mov
addr16
or
(bad)
cmc
leave
jne
lahf
cmps
jge
mov
movs
xor
mov
mov
loop
mov
aam
xor
pop
stc
inc
ins
(bad)
lods
iret
mov
mov
(bad)
and
gs
xor
jecxz
mov
stos
jo
cli
sub
cmc
or
cmp
xchg
retf
in
and
fs
push
in
jmp
sbb
jp
jbe
sub
pop
stos
int3
adc
cdq
sti
and
pop
push
daa
loop
mov
sahf
jmp
jmp
shl
sub
cmp
lds
outs
push
jmp
and
mov
pop
mov
mov
outs
sbb
push
and
inc
jns
ret
push
pop
mov
xor
mov
fbld
fadd
in
inc
xchg
aas
dec
pushf
sub
mov
or
cld
js
(bad)
pop
mov
jo
adc
and
xor
enter
pushf
sub
add
lods
sbb
xor
jae
in
cmp
fadd
xchg
pop
fadd
sbb
call
xchg
lods
ja
fistp
pop
aad
imul
call
pop
mov
cdq
hlt
jne
mov
jp
hlt
mov
pop
jbe
retf
fstp
das
outs
fild
pop
(bad)
leave
pushf
in
rol
repnz
outs
jmp
dec
les
or
dec
retf
cmp
push
jbe
add
imul
mov
pop
push
lds
sbb
push
sub
retf
sub
push
mov
int3
rcl
cdq
loopne
loopne
sub
hlt
int
pop
pop
jno
cwde
and
jns
lds
sub
or
mov
xchg
mov
inc
sub
add
and
xchg
mov
js
int3
sbb
push
adc
ficomp
add
ffree
mov
mov
jmp
inc
xchg
mov
cmp
std
cmp
(bad)
mov
ins
inc
lahf
pusha
adc
fiadd
fnstenv
adc
add
jbe
add
retf
inc
fldcw
js
xchg
(bad)
mov
movs
mov
sbb
fsubrp
test
iret
add
sbb
popf
addr16
fs
sbb
dec
aaa
das
pop
xchg
push
jmp
cli
fwait
test
(bad)
lods
push
es
ret
mov
and
test
cmp
lock
cmp
inc
test
cdq
sub
xchg
mov
jg
test
jl
repz
shr
push
add
(bad)
cwde
mov
mov
out
xor
call
inc
in
es
jno
push
dec
sub
mov
push
cmc
js
xchg
ins
and
xchg
fsubr
cdq
jne
lds
mov
xor
in
xor
enter
test
je
in
movs
pop
adc
ret
or
cwde
mov
pop
imul
cs
sbb
fwait
ins
push
arpl
mov
es
adc
outs
or
dec
mov
popa
dec
sub
sub
fcom
adc
dec
test
lods
imul
shl
rol
xchg
sub
sbb
sub
in
pop
mov
outs
inc
sbb
fiadd
sub
cwde
not
pop
xchg
arpl
or
mov
data16
dec
fwait
inc
mov
jp
sbb
in
inc
test
nop
pusha
push
das
jb
mov
mov
inc
retf
xchg
or
adc
ins
dec
sahf
push
lods
jmp
sub
pop
xchg
in
loope
jnp
clc
mov
or
push
push
movs
clc
push
int
jno
pop
and
les
push
inc
or
movs
pop
cmp
push
cmp
dec
push
adc
and
pop
int
cmps
std
pop
xchg
push
mov
xor
out
rcr
mov
cmc
or
xchg
or
jle
xor
mov
ror
cmp
dec
xchg
(bad)
rdmsr
lds
mov
xchg
call
out
and
iret
xchg
jo
jmp
es
std
inc
movs
mov
xor
inc
jp
fidivr
pop
mov
ins
pop
xor
dec
(bad)
pusha
pop
leave
pop
xchg
(bad)
ja
inc
nop
lahf
pop
daa
xchg
mov
out
outs
ror
adc
push
icebp
inc
js
cmp
enter
mov
jne
xor
jp
sub
or
sahf
xor
jo
aam
aas
xchg
out
add
lods
jbe
sar
push
mov
shr
mov
xor
std
lea
add
les
xchg
cmps
push
jne
(bad)
xor
pusha
outs
cmc
push
aaa
mov
or
sub
xchg
push
mov
mov
pop
mov
pop
dec
ins
leave
jecxz
lea
fbstp
add
rcl
stos
shr
cmp
push
pop
int3
add
daa
xor
adc
sub
movs
and
dec
out
mov
ja
xchg
aad
retf
retf
or
sbb
scas
cli
dec
jo
(bad)
sub
push
leave
(bad)
push
sbb
leave
(bad)
adc
xchg
and
loopne
outs
mov
data16
js
cmp
sub
jnp
lea
pop
dec
sub
cld
repz
mov
dec
inc
adc
push
clc
add
fisubr
jle
out
dec
lods
mov
pop
xchg
pop
push
dec
js
call
mov
inc
test
jmp
fnsave
(bad)
mov
inc
mov
movs
dec
test
xchg
sti
xor
mov
jae
in
sub
cmp
loop
push
xor
pop
xchg
popa
jmp
shl
adc
inc
adc
adc
mov
cld
push
nop
fmul
sbb
xchg
dec
data16
xchg
dec
mov
les
aaa
mov
xchg
rcl
out
mov
test
imul
test
ins
inc
mov
fnstcw
xor
fdiv
cs
sub
jle
sar
or
or
xor
jl
out
(bad)
retf
es
mov
bnd
inc
sahf
rcr
sar
push
jg
(bad)
push
mov
fsubr
aam
jae
and
mov
in
retf
push
xchg
xor
cwde
inc
ja
in
icebp
js
jp
xlat
pushf
imul
push
jecxz
data16
rol
les
cmc
std
retf
push
je
jae
xchg
aam
and
dec
fld
adc
into
push
dec
mov
and
cwde
or
mov
sbb
inc
sbb
(bad)
div
daa
in
pop
cmps
pop
and
fisttp
jge
adc
sbb
sbb
mov
js
imul
in
int
jp
push
mov
es
mov
call
(bad)
test
mov
lea
(bad)
cmp
sub
mov
imul
pop
adc
retf
fiadd
pop
imul
add
dec
rcr
clc
daa
sbb
fucomip
inc
out
std
sbb
pop
pop
shl
ins
nop
xor
xchg
cmp
mov
fcmovnu
mov
pop
daa
scas
push
in
dec
int
sub
jle
(bad)
arpl
cmp
jae
aas
xchg
cs
jle
and
add
inc
cdq
lods
jns
int
ror
xchg
cli
xor
or
dec
leave
cmps
pop
popf
inc
jns
das
fst
rol
movs
mov
jne
xchg
mov
and
ret
std
ds
push
fs
dec
jns
mov
jge
daa
int
and
pop
lods
in
sar
sti
iret
jbe
les
dec
push
ficom
retf
adc
fild
out
imul
outs
pop
ffree
test
sub
enter
and
addr16
jl
cld
add
shr
repnz
mov
adc
(bad)
push
call
mov
aaa
cld
(bad)
int
ins
sub
ficom
inc
je
jb
popf
ret
mov
dec
rcr
mov
mov
xchg
pop
sub
jp
lods
mov
lea
rol
dec
pop
jmp
sbb
xlat
dec
and
bound
mov
inc
pop
and
popf
call
loope
jp
sbb
xchg
cmp
(bad)
clc
push
sbb
jmp
(bad)
push
cli
scas
sub
xor
xchg
pushf
jl
sub
bound
mov
sbb
cs
int
and
aam
out
xor
test
cmp
and
out
je
mov
or
or
shrd
jle
xchg
fnstsw
jns
jnp
in
inc
(bad)
push
xchg
mov
xor
addr16
test
in
icebp
rol
movs
scas
xchg
xor
push
loop
jae
mov
cmp
lds
repnz
test
sbb
lock
sbb
pop
div
sub
test
mov
retf
idiv
mov
scas
push
mov
jb
inc
xchg
shl
shl
adc
pop
movs
lods
inc
push
jns
xchg
inc
sbb
xchg
adc
mov
sbb
jp
push
and
lods
push
ds
mov
cmp
jo
xlat
push
adc
lds
add
cmps
iret
jge
mov
push
push
xlat
aaa
mov
xchg
hlt
xchg
adc
jns
lock
mov
jae
jb
xchg
mov
inc
cli
mov
jne
popa
stos
jl
sub
cmps
jmp
sbb
lods
adc
call
or
ins
jg
pop
cmp
int3
xor
call
inc
sbb
pop
push
cmp
int3
in
rcr
cmc
and
jge
pop
mov
in
ds
pop
ja
push
lods
fcmovnu
mov
pushf
shl
sbb
push
das
jo
and
fcmovb
mov
mov
out
in
adc
dec
or
push
mov
pop
in
mov
xor
jns
ja
mov
cli
cmp
cmp
in
xor
ja
xlat
cwde
gs
or
retf
sbb
ins
sub
daa
pop
in
leave
or
jecxz
jne
jns
cld
push
sub
push
mov
loop
std
and
test
(bad)
mov
leave
and
mov
nop
sti
adc
in
inc
psraw
fsubr
movs
xchg
dec
push
int
lock
loopne
nop
jae
ins
dec
mov
xchg
adc
jbe
test
xchg
cmp
aad
sub
out
mov
mov
ds
mov
adc
inc
stc
add
and
addr16
xchg
adc
dec
xor
mov
shl
stc
pop
in
icebp
inc
cli
push
stos
sub
pop
adc
icebp
jmp
xchg
xor
inc
adc
clc
jae
xchg
xor
jne
ficom
sbb
ja
xchg
push
jmp
adc
or
and
sahf
ins
dec
icebp
imul
out
adc
stos
mov
in
and
fwait
mov
rol
dec
adc
ret
inc
sub
fnstenv
adc
add
or
sbb
xchg
shl
or
or
xchg
ds
stc
clc
stos
pop
les
xor
xor
std
xchg
and
inc
mov
mov
clc
fisubr
mov
xor
aam
loopne
push
lea
clc
sbb
jae
ret
inc
add
daa
fist
fcos
add
inc
pop
adc
cmc
cs
pop
cmp
pop
bound
mov
xor
mov
pop
xchg
mov
jb
inc
pop
repnz
xor
nop
int3
jp
in
sbb
jge
xchg
sub
mov
pusha
pop
and
sar
test
or
in
sub
pop
test
out
mov
inc
imul
bnd
fistp
lods
xchg
stos
push
xor
jns
and
sub
ror
test
icebp
out
xchg
mov
js
sbb
xchg
push
jne
jmp
inc
sahf
jne
sub
pop
cmp
hlt
sbb
xchg
cmc
push
out
fcomp
jmp
shr
in
push
sti
icebp
add
jb
xor
cld
xor
gs
lods
push
pop
ja
out
sub
cwde
daa
pop
out
into
cmp
jb
inc
push
pop
jp
jmp
int3
jbe
shr
push
add
adc
push
es
sbb
out
mov
and
cmp
sbb
scas
dec
xchg
xor
popf
rol
push
ds
cdq
(bad)
lods
sub
addr16
pop
jns
push
pop
mov
and
inc
cmps
(bad)
fldcw
outs
or
push
pop
sub
cdq
add
in
adc
js
cmps
adc
das
ret
loopne
jae
sub
(bad)
xchg
xor
in
ja
ins
adc
in
xchg
out
cdq
jmp
std
adc
jmp
sbb
inc
stc
jmp
mov
stc
scas
jne
mov
xlat
mov
(bad)
sub
jg
add
mov
jle
inc
addr16
lods
xor
xor
in
out
pop
retf
out
cmc
jp
xchg
and
jmp
jmp
stos
mov
sbb
push
(bad)
(bad)
stc
addr16
push
inc
out
xor
mov
xchg
cmp
or
les
les
pop
int3
dec
cld
retf
loop
xor
(bad)
je
jl
stc
sbb
(bad)
hlt
cdq
cmp
dec
rcr
les
mov
push
movs
and
addr16
push
pusha
or
repnz
xchg
sbb
(bad)
int
retf
leave
lods
int3
inc
push
dec
mov
jne
popf
add
test
adc
arpl
int
std
add
cli
out
mov
inc
mov
add
lods
pusha
inc
js
loope
mov
sub
test
(bad)
adc
push
fdivr
fsub
cmp
(bad)
cmp
xchg
push
adc
stos
js
loopne
scas
inc
and
fimul
jbe
xchg
inc
retf
xor
xchg
fwait
dec
cmp
add
add
or
xchg
(bad)
into
and
loop
xchg
push
mov
push
inc
add
hlt
inc
jae
sbb
in
call
(bad)
xchg
jns
lahf
cli
adc
xchg
clc
xor
sub
or
xchg
mov
call
and
jns
mov
add
ss
xor
ds
je
shl
jge
loope
mov
add
popa
sbb
xchg
xor
test
cmp
outs
out
neg
mov
rcr
retf
lea
add
movs
(bad)
outs
xor
jns
cli
jbe
dec
dec
loope
rcl
test
mov
out
xchg
mov
or
clc
mov
fwait
dec
(bad)
fld
pop
outs
cli
xor
pop
lahf
idiv
mov
jp
movs
inc
xlat
xor
test
rcl
rcr
xchg
cvttps2pi
pop
cmp
add
jne
call
add
adc
sbb
outs
and
mov
pop
shl
out
ja
push
ins
add
sbb
jmp
mov
lock
push
call
pop
nop
xchg
dec
stc
add
pusha
inc
xlat
cwde
add
mov
push
hlt
sub
neg
mov
xchg
sahf
jmp
pop
sbb
ret
gs
pop
push
in
mov
rcr
xor
retf
pop
stos
mov
(bad)
nop
ret
add
outs
mov
test
test
sbb
(bad)
xchg
movs
loope
jne
mov
add
jbe
mov
push
mov
outs
xor
icebp
jns
bound
sbb
test
pusha
icebp
mov
push
jo
xchg
xchg
js
push
clc
je
pop
mov
cmp
xor
or
out
out
loopne
cmp
call
fidivr
adc
push
pusha
jle
sub
sub
sti
dec
cmp
(bad)
and
lock
int
shr
add
dec
cs
aad
xor
push
lds
jnp
loop
ss
mov
aaa
mov
fstp
mov
mov
xchg
aam
fistp
jbe
ja
cmp
dec
dec
les
dec
in
es
sahf
xchg
xchg
pop
enter
pop
jns
sub
sub
jp
div
xchg
or
or
and
xor
add
das
lock
fsub
pusha
in
out
les
mov
test
bound
push
jl
pop
adc
mov
loopne
mov
lahf
jae
xchg
pop
rcl
std
mov
dec
mov
cmp
push
addr16
sti
jl
mov
sbb
fbld
bnd
dec
sub
jbe
lods
je
(bad)
adc
mov
inc
out
xor
dec
icebp
adc
inc
jmp
in
call
sbb
jp
xor
dec
les
fucomp
ins
lds
adc
(bad)
cmp
cmc
mov
and
push
(bad)
pop
mov
mov
out
inc
outs
call
dec
push
cdq
rcl
pop
ins
jmp
ss
add
test
les
xor
mov
pop
add
movs
mov
sub
dec
(bad)
(bad)
cmc
mov
fisub
adc
xchg
loop
jns
add
xchg
test
cmp
pop
xor
div
fstp
jge
push
mov
shl
xlat
inc
xchg
push
arpl
ss
jnp
inc
sar
mov
je
outs
in
and
lods
ret
das
or
and
push
aam
inc
inc
inc
dec
sub
xor
aam
loop
push
jae
cmp
out
jo
mov
cmp
cmp
adc
mov
xor
(bad)
repnz
mov
mov
mov
mov
ror
nop
(bad)
cwde
repz
push
jmp
lods
xchg
test
push
or
call
not
inc
jae
jbe
add
xchg
xor
xchg
pop
mov
out
mov
or
jno
ins
sbb
js
cdq
xor
pop
jmp
sar
jno
xor
jbe
sti
pop
jl
les
and
dec
(bad)
push
out
xchg
or
dec
mov
adc
ror
xchg
sbb
ja
xor
cld
test
in
jecxz
sbb
mov
push
xchg
int
pop
pop
inc
jp
mov
pop
xor
aaa
push
mov
int3
xchg
adc
sahf
push
push
in
pop
pop
test
shr
cmp
mov
(bad)
sar
ins
sub
arpl
stos
movs
mov
pop
xchg
inc
(bad)
cmp
pop
hlt
jnp
mov
inc
repnz
push
lds
stos
cmp
or
and
outs
xchg
jne
jne
cmps
dec
inc
sbb
je
pop
adc
lahf
xchg
push
cmc
xchg
jmp
sbb
popa
inc
int
dec
mov
mov
adc
push
pop
cld
and
xchg
cmp
es
xchg
mov
jp
adc
gs
loop
push
repz
cmc
ds
sub
jne
dec
mov
mov
mov
cmp
(bad)
cmp
and
pop
xor
xchg
mov
cmp
sub
addr16
rcl
xchg
popa
mov
xor
in
icebp
dec
push
js
mov
test
inc
addr16
repz
pop
in
mov
test
(bad)
movs
lods
(bad)
cmps
push
mov
pop
jge
shl
add
cmp
xor
jb
dec
retf
daa
cmps
mov
js
pmaddwd
lea
xor
xchg
and
push
cmp
mov
sub
ret
xchg
pop
jae
adc
mov
rcl
mov
(bad)
lock
mov
sbb
mov
sbb
jne
je
sub
daa
dec
(bad)
jno
out
aam
loope
and
mov
cmp
mov
xchg
xchg
mov
(bad)
mov
add
imul
mov
out
cmps
xchg
daa
mov
fmul
sar
fld
dec
stos
nop
cmps
adc
dec
fbstp
jecxz
xchg
lahf
and
jmp
jp
imul
ds
lea
mov
leave
mov
xchg
push
or
push
xchg
jae
js
add
jmp
xchg
mov
cmp
mov
cmp
mov
mov
(bad)
xor
cdq
in
js
xchg
hlt
popa
(bad)
aad
sbb
pop
dec
jp
lock
sti
call
sbb
fcmovnbe
ret
mov
mov
xchg
and
xor
aam
clc
push
ds
xor
push
popf
js
fwait
ss
xchg
jg
add
adc
ins
mov
fistp
in
js
add
push
aaa
stc
or
and
jp
mov
add
movs
add
fist
cwde
inc
jge
das
imul
sub
add
js
or
std
std
sbb
fisubr
pop
adc
pusha
mov
clc
out
adc
inc
fbstp
repnz
or
enter
es
sbb
ror
daa
retf
out
cmp
sub
les
sub
cmc
daa
sub
imul
xor
hlt
inc
cmc
push
repz
popf
cld
sbb
dec
data16
or
imul
jne
cmp
or
cmp
push
push
xor
and
shr
and
pop
mov
lods
mov
je
jnp
xchg
fnstcw
in
mov
sahf
mov
jbe
outs
std
mov
dec
jae
fcomip
pushf
jbe
and
jmp
pop
in
push
pop
pop
mov
sub
and
push
arpl
xchg
ret
je
mov
es
ror
(bad)
shl
data16
mov
mov
mov
scas
imul
and
push
lods
and
mov
imul
xchg
gs
xor
adc
jl
adc
mov
or
je
jbe
mov
ds
shl
test
cmp
inc
ret
dec
pop
inc
jmp
jb
push
dec
clc
scas
fs
imul
sub
pop
in
mov
cmps
jp
mov
dec
xchg
push
and
out
ds
jns
call
arpl
adc
imul
jbe
mov
push
and
mov
js
mov
jo
jg
sar
xchg
mov
sbb
iret
mov
inc
mov
js
adc
fnstenv
ds
out
pop
int3
js
push
cwde
nop
daa
out
ins
mov
in
cmc
cmps
sbb
and
ss
jae
jge
loopne
sbb
cmp
cmc
inc
dec
ficomp
add
loope
in
sub
dec
aas
(bad)
iret
push
and
mov
mov
mov
sbb
movs
sbb
ret
mov
ret
sbb
std
cs
stos
jmp
cmps
fdiv
in
data16
hlt
retf
jl
sub
dec
cmp
inc
into
dec
pop
xchg
test
iret
test
mov
outs
mov
sub
push
pop
mov
loop
lods
push
js
inc
and
add
pop
ds
iret
pusha
fst
xchg
xchg
ss
cs
jp
xor
js
add
(bad)
ror
lahf
sub
inc
push
lock
in
test
gs
loope
daa
retf
inc
xor
out
xchg
push
pop
jno
mov
dec
(bad)
fs
push
adc
movs
test
idiv
les
sbb
(bad)
stos
pop
cmc
in
repz
xchg
dec
lahf
loop
addr16
jge
sbb
xchg
mul
movs
xor
add
scas
pop
and
jmp
push
je
js
jae
inc
and
fnstcw
gs
pop
call
cdq
sub
cmc
das
dec
rcr
push
nop
jns
js
rol
pop
out
hlt
ss
sar
xchg
xchg
mov
mov
shr
aas
pop
xchg
into
(bad)
sbb
inc
arpl
push
mov
fdivr
jns
out
mov
ror
pushf
mov
xchg
aad
std
mov
shr
fisubr
cmp
jbe
jns
push
xchg
cmps
fcomip
mov
add
(bad)
idiv
sub
inc
mov
ficom
dec
pushf
outs
cmc
jae
pop
jo
ds
loopne
mov
push
daa
sub
cmp
out
dec
daa
add
mov
mov
pop
(bad)
sahf
jg
mov
js
mov
ror
popf
cwde
(bad)
ins
fstsw
les
call
xor
xchg
mov
cmp
cmp
inc
xlat
rcr
(bad)
stos
and
mov
xor
daa
adc
cmps
xor
push
ja
(bad)
xchg
jb
cmc
adc
jo
mov
inc
(bad)
push
js
jge
fisub
adc
mov
jg
jmp
xchg
cmps
add
mov
icebp
adc
cmp
mov
mov
popa
xor
pop
shl
and
out
or
cs
jbe
lds
push
and
push
in
fidivr
xchg
(bad)
pop
cld
leave
xchg
test
sbb
adc
push
outs
xor
stos
mov
pop
mov
push
xchg
pop
rol
xchg
cmp
cmp
arpl
inc
sar
mov
and
imul
and
iret
ss
ins
cmp
fild
or
push
je
xor
outs
addr16
repz
mov
jmp
sub
sub
and
dec
gs
xchg
jb
add
pop
push
test
pop
aas
dec
(bad)
mov
xchg
nop
xor
mov
iret
mov
dec
lds
xor
hlt
inc
call
mov
xchg
xadd
rcl
mov
fisttp
ins
push
push
cs
mov
loope
pop
mov
jnp
jb
jle
cdq
mov
cmps
jmp
out
sub
jecxz
lock
sub
mov
xchg
sbb
xchg
cmc
mov
jp
jle
xchg
das
adc
mov
pop
sti
jnp
jno
mov
and
cmp
sub
xor
mov
mov
cdq
pop
stos
ret
cmc
adc
or
fdiv
mov
cwde
sbb
push
or
jae
xchg
dec
stos
dec
(bad)
repz
loopne
sub
lahf
jl
dec
pop
cmp
push
xchg
add
mov
xchg
fstp
mov
sti
jo
imul
sub
sbb
cmp
lds
cmc
xchg
mov
fisubr
mov
(bad)
mov
ficomp
jecxz
imul
inc
push
out
xchg
push
pop
gs
repz
sub
sbb
call
jle
sub
adc
mov
leave
mov
or
jmp
repz
sub
adc
sbb
rcl
fidiv
xlat
in
cmovs
mov
mov
iret
jp
in
cmp
xchg
popa
mov
fstp
push
xchg
cdq
cmc
cmc
test
scas
sub
es
fimul
int
fdivr
(bad)
(bad)
adc
sar
ret
and
sar
test
adc
push
test
lods
fs
sbb
sbb
mov
push
pop
inc
pushf
add
rol
in
shl
adc
inc
lock
popf
lods
xchg
jnp
aas
mov
push
push
sub
rcl
jno
xor
mov
imul
test
cmp
dec
pop
aam
test
fmul
mov
pop
in
ret
jb
xor
mov
push
out
mov
fwait
mov
jb
hlt
stc
xchg
push
inc
adc
cmp
icebp
push
adc
mov
call
das
xchg
daa
fld
lods
(bad)
(bad)
fwait
cmp
(bad)
jmp
sub
jle
cmp
or
and
jnp
pop
dec
xor
inc
push
inc
push
stos
mov
push
pusha
xchg
or
fwait
lock
push
cmp
jns
pop
xchg
pop
retf
xor
or
lea
jns
fwait
retf
jne
ins
mov
dec
lods
fidiv
jo
ficom
(bad)
inc
jno
add
mov
stos
fstp
frstor
movs
inc
sbb
sbb
jbe
add
pop
sub
pop
pop
mov
mov
es
adc
dec
adc
mov
push
daa
sub
or
dec
es
(bad)
iret
cmp
xchg
fcmovu
cmp
jecxz
daa
dec
mov
push
pop
sub
lds
addr16
jle
jb
call
mov
jl
xchg
out
sub
cs
mov
sbb
enter
mov
mov
lea
mov
and
out
dec
cld
pop
push
std
sbb
loop
sub
fst
ret
jp
out
dec
jg
stos
imul
push
out
stc
mov
adc
inc
inc
lea
pop
int
test
mov
daa
pop
hlt
jb
ja
xor
push
mov
cmp
pop
xchg
rcl
pop
mov
lahf
lods
adc
cmp
xchg
push
pcmpeqb
xchg
lea
imul
jne
jecxz
sar
cmps
or
mov
xor
xchg
push
(bad)
lods
cmp
imul
pop
test
das
imul
loopne
xchg
push
lock
jb
and
push
cld
push
lahf
xchg
push
shl
push
jb
jmp
cmp
mov
cmp
jmp
mov
sub
add
or
bound
ret
clc
jb
std
(bad)
stos
and
xchg
push
(bad)
mov
mov
adc
jae
int3
into
hlt
fdiv
xor
hlt
jg
jb
pop
mov
mov
xlat
in
xor
jns
(bad)
sbb
jge
cmp
or
(bad)
xchg
or
adc
and
push
or
and
adc
mov
jne
cmp
stos
jmp
jl
inc
test
and
pop
(bad)
iret
loopne
cdq
out
push
pop
shr
lods
cmp
adc
dec
cwde
sbb
xchg
fbstp
xchg
sbb
xchg
ins
xchg
and
outs
into
icebp
push
psubd
sub
sar
xor
dec
pop
shl
xchg
and
stos
outs
mov
je
loop
xchg
jne
xor
sti
(bad)
in
mov
dec
xchg
into
pop
int3
arpl
js
pop
sbb
lods
das
ror
mov
pusha
rol
xchg
pop
mov
js
fs
loope
inc
mov
xchg
sub
js
ins
jno
mov
cmp
cmc
sbb
pop
(bad)
dec
or
rcl
in
push
lea
ins
pop
hlt
push
mov
fld
arpl
ficom
xor
in
and
mov
adc
popa
rcr
lods
ficom
imul
shl
sub
fbstp
arpl
mov
fcomp
push
(bad)
test
pop
push
sti
and
mov
inc
add
pop
int
adc
sub
sbb
cmc
mov
lea
mov
mov
cdq
or
jbe
sar
sbb
je
cmc
mov
loopne
(bad)
rol
jmp
mov
mov
jmp
vmaxsd
test
mov
push
retf
jns
inc
stos
shl
add
xlat
push
sub
mov
mov
sub
xchg
xchg
pop
inc
xchg
and
xor
cmp
fistp
add
mov
pop
icebp
dec
movs
mov
xchg
sub
aam
xchg
xchg
or
push
cli
pop
xor
or
das
xor
outs
fwait
jns
jmp
les
pusha
js
xchg
aaa
call
push
cmps
and
bound
dec
hlt
dec
cmp
dec
pop
sub
pop
pushf
ja
in
(bad)
jnp
sti
xor
pop
ins
pop
dec
add
imul
cmp
ficomp
push
and
adc
jbe
ins
aaa
sub
(bad)
es
enter
jbe
leave
push
or
jbe
mov
iret
lock
xor
test
sub
mov
std
adc
jae
mov
push
ret
cdq
pop
mov
sbb
lock
sub
or
mov
movs
jb
sub
adc
push
ret
pop
sbb
not
jecxz
fs
mov
out
fistp
jmp
push
jp
mov
fucomi
jb
js
push
jge
and
int3
sbb
add
or
fdivr
mov
cmp
popa
iret
dec
out
xchg
xor
xchg
push
test
test
mov
fucomp
imul
inc
ret
shl
(bad)
jecxz
or
movs
xchg
mov
ins
out
lds
fdivr
pushf
inc
inc
fisubr
cmc
adc
or
pushf
xchg
ss
xor
cdq
and
jns
pop
test
in
(bad)
je
hlt
mov
iret
cmp
xchg
add
jbe
sbb
fdiv
mov
fdivr
jae
xor
sub
mov
push
js
add
hlt
sbb
sub
loopne
or
shl
jle
inc
adc
test
jo
iret
mov
int
rol
and
vpsubq
xchg
test
in
mov
and
imul
enter
jge
ret
stc
ins
cmp
sub
mov
adc
mov
ret
adc
push
stos
cmp
mov
ret
movs
xor
mov
adc
daa
jg
jle
xchg
mov
ins
xchg
and
retf
cs
and
push
aaa
adc
pop
mov
push
xor
mov
leave
jne
add
mov
cmp
in
or
mov
xlat
cwde
sbb
jnp
mov
jb
xchg
mov
cmp
lock
dec
idiv
cdq
int
mov
mov
stos
js
add
in
mov
enter
test
cli
(bad)
clc
pop
sub
lods
xchg
adc
dec
mov
dec
repz
adc
clc
sbb
aaa
mov
cmp
cmp
and
and
mov
cwde
add
test
mov
sbb
cdq
in
sub
shl
sub
xchg
push
imul
xchg
lds
xchg
jb
jl
popf
clc
xchg
fld
out
loop
sbb
jne
iret
ret
lahf
out
hlt
sbb
adc
or
jmp
rcl
xor
jmp
jo
jbe
(bad)
into
cmp
xchg
push
aam
or
sub
mov
fst
test
xor
sub
ja
xchg
xor
or
pop
popa
mov
adc
imul
mov
jae
xchg
xchg
fstp
cwde
pop
imul
mov
sbb
and
push
mov
jp
mov
jp
je
mov
(bad)
jns
jle
sahf
pop
dec
(bad)
mov
pusha
loope
(bad)
sbb
add
xchg
aad
sub
ret
repnz
mov
jae
icebp
(bad)
sbb
ret
jne
mov
std
in
out
jnp
push
fist
lods
xchg
and
sub
dec
jne
mov
pop
inc
jge
(bad)
jbe
gs
ret
sub
call
sub
hlt
std
pusha
ficom
shr
fadd
neg
into
jmp
ins
xor
xchg
ret
mov
mov
and
fcomip
cli
(bad)
cmc
sub
retf
arpl
wbinvd
xor
call
pop
call
jmp
mov
pop
clc
inc
in
mov
cmc
sbb
xchg
mov
pop
ret
jno
jb
and
dec
rol
xchg
push
inc
scas
lods
mov
cmp
outs
cmc
mov
mov
xchg
ins
inc
clc
jnp
into
inc
aam
pop
xchg
cld
sbb
repz
lods
in
stos
mov
pop
mov
jns
cmps
leave
in
div
lea
jmp
pusha
repz
jmp
pop
inc
xchg
add
dec
push
in
and
es
xchg
inc
push
adc
jp
adc
pop
lods
cs
hlt
push
cmps
push
jge
add
inc
hlt
ds
add
loop
ins
xchg
jge
xor
iret
dec
call
inc
push
mov
into
mov
push
dec
test
add
mov
stos
or
icebp
sub
sbb
pop
pop
xchg
arpl
hlt
xchg
push
mov
add
push
iret
cmp
loope
mov
adc
xchg
pop
ficom
or
sbb
sub
adc
(bad)
push
sbb
movs
mov
(bad)
loop
xor
jne
test
jmp
xor
xor
sbb
in
daa
(bad)
mov
xchg
out
cmp
pop
inc
mov
cld
jmp
xchg
repz
stc
dec
sub
popa
retf
jp
adc
mov
ins
cmp
nop
test
add
adc
xor
add
sbb
mov
cmp
push
fdivr
xchg
add
cmp
int3
adc
inc
add
mov
sub
ja
or
fs
ffreep
nop
or
clc
nop
sbb
or
sbb
hlt
cmp
xchg
fyl2xp1
pop
retf
sub
dec
lock
push
mov
je
adc
lahf
xor
jle
sbb
in
xchg
aaa
in
jmp
jmp
mov
iret
or
rol
retf
test
cmc
xchg
jmp
dec
addr16
push
(bad)
sahf
adc
ds
cli
sub
jmp
xchg
fbld
out
out
mov
sar
mov
(bad)
jle
xchg
cld
imul
pop
hlt
push
adc
pop
or
mov
aaa
sti
jne
xor
jl
xchg
out
push
push
es
xchg
movs
mov
xchg
jecxz
(bad)
pop
jns
xchg
cmp
mov
int3
jle
retf
ja
ins
xchg
push
or
shr
jge
mov
inc
or
hlt
ss
pop
aas
fstp
xchg
mov
leave
pusha
push
mov
test
adc
adc
cwde
sbb
jl
cmc
daa
loop
mov
jae
sahf
sub
mov
push
mov
or
jmp
mov
push
jne
push
adc
pop
out
rol
mov
push
mov
adc
dec
in
loopne
bswap
lea
pop
sub
dec
repz
outs
push
call
jecxz
cld
or
mov
mul
lea
sti
push
push
pop
jno
push
rcr
jge
and
xchg
shl
ds
movs
pop
mov
fs
out
xlat
aam
out
jae
mov
call
out
xor
or
dec
add
jns
add
loop
out
imul
(bad)
adc
aad
jmp
inc
movs
adc
ins
cmp
jp
push
pop
jne
icebp
xlat
lock
push
ret
jle
xchg
hlt
sbb
shl
stos
arpl
ss
or
es
rcl
mov
push
push
mov
cmps
ja
clc
or
fsincos
data16
cmp
stos
imul
fst
fs
push
stos
and
arpl
movs
in
scas
dec
repnz
fcomip
or
and
adc
mov
sbb
(bad)
sub
cmps
daa
pop
in
adc
jae
aad
nop
push
ins
ins
xchg
inc
push
xor
std
sahf
or
add
jl
pop
out
das
loopne
dec
dec
xchg
push
adc
fstp
pop
xor
jb
mov
jmp
sbb
fwait
sbb
enter
pop
pop
(bad)
ret
jnp
arpl
clts
sbb
adc
call
mov
sub
mov
shl
pop
out
(bad)
sub
xor
cmp
sub
jno
lods
and
mov
test
jp
in
ja
daa
sub
and
pop
sub
mov
and
mov
retf
xor
mov
adc
mov
adc
sbb
mov
dec
xor
push
ficom
ret
dec
rcr
lds
and
xchg
repnz
jge
xchg
mov
sbb
sbb
idiv
push
in
cld
fmul
xor
movs
xchg
addr16
xlat
scas
cdq
and
out
pop
outs
jmp
xchg
mov
shl
sbb
sub
pop
push
hlt
push
sti
(bad)
mov
pop
jnp
dec
push
(bad)
add
mov
aas
ja
out
or
lods
cmp
add
ins
jecxz
push
or
cmc
bound
test
xchg
popf
push
jmp
mov
cmp
jbe
jp
movs
push
pop
pop
jb
jmp
test
push
cmp
push
test
cmps
fld
xchg
add
jae
xlat
dec
in
scas
pop
push
iret
ins
dec
jb
ja
pop
mov
and
sub
jle
fs
(bad)
cli
out
les
mov
dec
xor
shl
or
pop
ja
fstp
xchg
fwait
adc
jmp
outs
push
into
xchg
sub
out
mov
scas
in
and
xchg
sub
cmp
aaa
mov
fwait
xor
(bad)
retf
outs
fs
mov
mov
mov
test
push
sub
out
jle
ret
ret
xchg
movs
mov
lahf
movs
mov
and
inc
inc
retf
dec
mov
jne
inc
fcmovbe
repz
mov
scas
pop
(bad)
dec
pushf
ret
std
movs
sub
and
repnz
lea
lds
inc
dec
mov
sbb
adc
std
into
pop
es
les
popa
mov
int
add
je
mov
sub
mov
pop
shr
mov
cld
ins
jo
adc
cdq
nop
push
sbb
adc
mov
(bad)
cdq
adc
inc
push
cmp
aad
out
push
mov
add
xchg
adc
adc
addr16
sbb
in
stc
cmc
jmp
cmp
xor
pusha
xor
icebp
sbb
es
dec
and
jp
retf
cld
adc
pop
xchg
imul
pop
pop
retf
jg
xor
ins
jae
mov
shl
xchg
in
mov
xchg
inc
jmp
pop
in
or
loop
cs
movs
lods
push
mov
pop
(bad)
sbb
jp
movs
loopne
loopne
mov
pop
sbb
and
add
sar
enter
in
aam
jmp
push
mov
inc
xchg
data16
mov
push
inc
jo
sahf
ret
sbb
lds
mov
xor
(bad)
out
xchg
adc
adc
pop
mov
mov
push
mov
jecxz
mov
in
sbb
lods
rcr
fsubr
neg
in
icebp
leave
addr16
mov
cmp
xor
movs
xchg
dec
(bad)
clc
jnp
les
jb
jle
push
adc
or
shl
lds
mov
xchg
movs
inc
add
icebp
test
jns
les
add
mov
xchg
cmp
inc
lods
mov
aas
mov
(bad)
(bad)
jne
cmp
gs
aam
hlt
xchg
aaa
jmp
add
leave
push
cli
cmps
fcomi
inc
jmp
xchg
in
mov
outs
jae
shl
ds
call
mul
fidiv
pop
shl
aad
xchg
sub
dec
fist
lock
sbb
test
jo
fs
std
mov
pop
mov
xchg
mov
sub
hlt
retf
rol
loope
mov
cmp
mov
dec
sbb
fdivrp
jae
bound
fwait
xor
push
push
das
add
jp
and
out
es
movs
xchg
adc
je
(bad)
fist
jmp
or
or
test
xor
xor
(bad)
sbb
cmp
repnz
lock
call
shl
dec
cs
(bad)
js
inc
cmp
adc
xor
out
mov
repz
add
fwait
sub
inc
or
out
int
pusha
clc
cmp
sub
mov
and
add
dec
(bad)
lods
xchg
stos
and
pushf
(bad)
ret
cmp
mov
sbb
jmp
xchg
ds
pusha
rcl
and
not
mov
cmps
and
retf
xchg
or
jmp
inc
repz
js
shl
cmc
ss
dec
xchg
push
lds
sub
jmp
ret
pop
cmp
mov
jns
mov
loopne
imul
movs
or
add
cwde
mov
loope
shl
or
retf
rcr
mov
fbld
dec
cmp
fadd
stos
jg
outs
inc
loope
retw
cmp
mov
jae
adc
cmp
xchg
xor
clc
push
pushf
aad
push
cmp
shl
ja
(bad)
cmps
jbe
dec
lahf
std
mov
in
push
gs
mov
mov
hlt
mov
pcmpeqb
mov
sbb
stos
loopne
mov
cmp
lock
pop
pop
inc
jp
pushw
add
xchg
jae
push
cmp
xchg
xchg
xor
jle
xchg
and
add
fwait
iret
das
es
xor
jg
cmp
test
sbb
adc
in
call
test
and
in
js
pop
stos
fmulp
mov
push
add
push
xor
loope
setne
mov
sub
cmp
add
fcomp
jns
cmp
mov
jae
out
aad
movs
shr
push
push
cmp
cwde
stos
shl
mov
inc
adc
imul
and
movdqu
push
daa
or
push
nop
push
cld
cmp
cmps
mov
push
cmp
ja
mov
(bad)
movs
or
pop
jo
dec
dec
xchg
sbb
jge
cmp
sbb
mov
lahf
jmp
data16
mov
mov
call
pop
outs
xchg
test
movs
jae
test
push
in
add
dec
add
and
xchg
adc
enter
or
test
into
jle
mov
jp
mov
xchg
shl
(bad)
in
xchg
outs
sbb
pop
daa
loope
mov
xlat
mov
mov
push
adc
cld
in
or
sub
leave
xchg
dec
stc
xchg
call
pop
sar
in
fs
enter
adc
in
mov
add
mov
or
mov
dec
push
cmp
ret
and
(bad)
lock
ins
test
jp
mov
lahf
ss
jae
ss
inc
adc
fcom
and
std
lahf
xchg
push
push
or
sub
sub
ret
and
cmp
lds
imul
into
push
out
xor
sub
call
iret
cmc
test
and
dec
push
mov
jb
inc
sbb
inc
(bad)
jp
jge
dec
adc
mov
scas
add
dec
dec
pop
add
xchg
cmps
xchg
sbb
(bad)
jo
mov
addr16
js
inc
mov
(bad)
pusha
adc
xchg
ret
cmc
jne
push
(bad)
jne
data16
sub
call
push
sub
jp
xchg
stos
push
js
cmp
test
mov
fist
mov
cmp
add
and
jne
jne
xchg
xchg
pop
ss
sub
les
sub
adc
jne
stos
push
jnp
lds
fstp
xchg
pop
pop
ins
fs
(bad)
stos
mov
int
shr
push
xchg
inc
pusha
mov
pop
test
jns
pop
call
pusha
ja
or
mov
aam
xlat
arpl
xchg
ss
sub
jp
adc
mov
aam
pop
cmp
push
(bad)
retf
cmps
retf
test
mov
int3
jbe
call
ficomp
and
std
aaa
rcl
hlt
call
xor
in
and
pop
aaa
enter
or
xor
outs
xor
(bad)
std
jp
out
in
js
sub
out
mov
std
push
jl
ss
pop
scas
test
es
pushf
jl
push
imul
jo
and
int
out
mov
ss
lds
hlt
jbe
call
mov
mov
sahf
ins
sbb
loopne
movs
das
xchg
out
fidiv
stc
cmp
jecxz
popa
push
call
jmp
push
xchg
in
pop
addr16
mov
and
push
xchg
sar
cmps
in
ins
out
xor
sub
mov
adc
jae
call
dec
ins
sbb
sti
ror
stc
rcr
dec
sbb
call
mov
loopne
push
retf
jg
push
or
lock
cmps
dec
adc
jmp
xchg
movs
imul
pop
cld
push
mov
ja
sub
or
xor
loopne
inc
jmp
xchg
(bad)
jmp
fist
dec
jb
ds
jns
sub
pop
outs
add
cmp
dec
add
push
cmps
mov
js
fucomip
aam
mov
inc
xor
sub
or
repz
sbb
not
add
aam
icebp
adc
push
jae
(bad)
xchg
push
sub
loop
stos
sbb
adc
xchg
xor
dec
out
shl
add
lds
repz
xchg
loopne
daa
pop
cmc
adc
mov
cmp
icebp
mov
mov
and
push
xor
dec
fimul
enter
pop
xchg
adc
sti
fwait
sub
and
push
repz
cs
mov
shr
lea
pop
add
xor
add
mov
aas
push
xor
(bad)
xchg
retf
in
cmps
arpl
fidivr
push
pop
fisttp
push
cli
(bad)
sbb
pop
retf
es
xlat
sahf
mov
mov
jns
repz
gs
imul
(bad)
xor
jb
dec
add
rol
pop
outs
jae
xchg
xchg
jp
or
jmp
cmp
ret
outs
clc
xchg
pop
mov
imul
fnstcw
xchg
loop
sbb
push
ret
fadd
jmp
int
sub
int
cmp
xchg
mov
cmp
xor
ficomp
dec
jmp
ror
stos
sub
cmp
ret
push
push
or
daa
xchg
mov
clc
(bad)
jmp
inc
pop
lahf
push
push
sub
out
pop
cmp
mov
dec
add
push
(bad)
cmp
mov
dec
fs
mov
push
cwde
cmp
lods
jb
push
aam
call
push
inc
movs
and
repz
hlt
ins
gs
out
in
xlat
push
cmp
and
leave
mov
adc
push
xor
repnz
jo
jg
fild
cdq
mov
mov
mov
mov
pop
cs
inc
xchg
push
sbb
fst
sub
pop
int
sub
ret
neg
push
mov
jo
sub
cmc
mov
cmps
rcl
cmp
jle
imul
lea
pop
ret
xchg
pop
jb
pop
sti
xchg
cmp
test
push
add
push
mov
mov
outs
mov
jbe
sub
cld
leave
mov
(bad)
in
out
mov
sbb
sub
sbb
xor
xor
and
mov
xchg
push
in
pusha
into
outs
fs
inc
xchg
mov
popf
loopne
push
mov
sub
mov
mov
mov
cmp
hlt
and
xchg
pop
retf
mov
sbb
cmp
dec
and
mov
push
or
push
push
inc
shl
pusha
out
repz
out
push
mov
std
adc
scas
push
cs
daa
scas
daa
repz
sub
push
test
cmp
or
pop
fsub
cmps
fsub
xchg
xchg
pushf
push
enter
les
ror
js
sub
popa
popf
adc
in
sub
mov
loope
clc
inc
mov
push
jp
lock
out
pop
mov
test
push
mov
pop
xchg
test
in
fbstp
cmps
jnp
adc
jp
int
loop
out
daa
jae
add
les
jp
retf
jge
or
sbb
jmp
jge
sbb
push
shl
xor
jg
xlat
arpl
fbld
inc
mov
ins
loopne
push
sar
mov
cmp
sbb
push
cmp
mov
pop
test
das
shl
dec
xchg
stos
pop
js
jns
adc
cs
xchg
pop
les
(bad)
sub
fcomp
jmp
jmp
lahf
or
push
in
mov
cli
cmps
ds
xchg
movlps
push
(bad)
stos
je
(bad)
je
outs
adc
in
mov
clc
in
pop
mov
dec
enter
imul
or
add
cmp
inc
jp
idiv
sub
xchg
rcl
sbb
lahf
cld
addr16
sub
xchg
cmps
sbb
mov
lahf
xchg
ins
(bad)
in
jge
aas
sub
jecxz
fdivr
xchg
stos
xchg
inc
jg
and
repnz
sub
lods
inc
xchg
pusha
es
or
mov
ror
xchg
jns
out
pop
jbe
cli
jns
cmc
jl
xchg
inc
push
sub
imul
sub
icebp
aaa
aas
enter
rcl
pop
stos
loop
xchg
push
sub
push
sub
(bad)
movs
adc
sbb
imul
test
lods
ffreep
and
xchg
push
jmp
cmp
pop
test
arpl
jae
jge
and
enter
(bad)
mov
jg
xor
push
cmp
mov
adc
mov
inc
(bad)
cmc
cmp
pop
out
pop
call
inc
mov
jl
pop
jmp
(bad)
mov
jae
cdq
fwait
add
jne
test
inc
jb
xchg
test
lods
imul
xchg
mov
lods
(bad)
mov
je
stos
push
loopne
mul
xchg
and
loop
sbb
and
outs
test
jo
push
inc
sub
sbb
hlt
pop
fiadd
scas
dec
jb
pop
test
adc
dec
mov
sbb
loopne
xlat
pop
js
jo
push
daa
call
sbb
add
sbb
xchg
jg
and
cmp
js
(bad)
inc
jp
jp
jge
push
sar
(bad)
fwait
pop
jmp
xchg
setne
arpl
arpl
jns
icebp
cmp
xchg
cmps
jmp
loope
push
(bad)
mov
jnp
mov
push
ja
xor
add
jbe
and
push
ret
and
nop
hlt
(bad)
jecxz
cmp
das
ss
cwde
imul
loop
push
cmp
inc
div
push
arpl
test
daa
xchg
xchg
stc
mov
and
outs
in
mov
ret
pop
imul
add
jns
cmps
(bad)
lock
pushf
sub
out
sub
test
sbb
adc
mov
sbb
ins
cmp
or
pushf
and
js
imul
das
mov
jbe
mov
push
stos
xor
add
mov
or
(bad)
repz
cdq
sub
loope
mov
mov
fcomp
cld
and
pop
jb
mov
lods
int3
and
pop
cwde
jle
cmp
fsubr
into
jmp
adc
push
mov
xchg
lea
cli
xchg
jmp
popf
fcomp
lea
daa
loop
ins
fisttp
leave
xor
dec
cmp
movs
cmps
jae
mov
pop
push
out
aas
jno
loop
ja
lds
sbb
out
imul
push
hlt
stc
xchg
push
mov
fincstp
jecxz
pushf
add
cdq
xor
xor
push
sbb
out
mov
(bad)
fcomp
xchg
cld
out
xor
xchg
in
pop
hlt
js
dec
lods
sub
or
sahf
add
in
jl
lds
xchg
pop
lds
xlat
jge
arpl
push
das
aad
rcl
jns
mov
out
dec
or
xchg
sar
lods
out
xchg
or
xor
retf
lock
xchg
bound
idiv
sbb
mov
inc
xor
sbb
jp
xchg
or
mov
(bad)
in
cmc
jg
pop
mov
cmps
mov
add
test
cmp
sbb
ins
repz
cmp
cmp
(bad)
in
cdq
push
jne
xchg
fstp
lock
out
sbb
jmp
pop
inc
sbb
shl
pop
and
and
push
out
movs
test
pusha
jmp
jns
and
retf
xchg
adc
lds
imul
imul
(bad)
pop
sti
jge
inc
mov
(bad)
adc
fild
jae
pusha
push
add
cmp
mov
int
sub
es
(bad)
daa
push
test
jl
js
dec
mov
iret
jecxz
dec
cmps
xchg
loop
pop
sti
cmp
js
jmp
xchg
cmps
mov
in
fwait
ror
retf
popf
call
dec
(bad)
enter
xchg
sbb
les
les
mov
pop
movs
pop
jno
loop
test
jae
jo
jmp
inc
pop
pop
ins
xor
inc
adc
mov
js
aam
cmp
xlat
loopne
pop
iret
(bad)
outs
cmp
jns
dec
jmp
call
sbb
or
pop
out
stos
jmp
jo
mov
and
and
movs
or
dec
dec
pop
inc
retf
xchg
ss
fdivr
inc
stos
xchg
sub
idiv
cmp
scas
jecxz
adc
jns
dec
jg
iret
sub
xchg
into
sahf
or
cs
push
in
xor
(bad)
cmp
mov
jo
xchg
jp
cdq
sub
fldenv
or
je
pusha
pop
loop
xor
fnstsw
daa
dec
fdiv
cmp
pop
cmps
bound
xor
sub
es
out
xor
and
in
ds
cs
mov
add
xor
(bad)
ds
xchg
adc
cwde
inc
clc
into
mov
pop
stc
fcomip
or
sub
retf
neg
or
int3
not
fldenv
mov
or
sbb
cmp
mov
out
test
pop
stc
push
or
clc
add
sahf
rcr
and
jge
mov
mov
movs
les
push
pop
lahf
mov
mov
fidivr
fcomp
pop
jg
int3
cmc
mov
push
mov
fild
and
add
jae
in
aas
ss
out
push
and
lds
enter
shr
inc
jp
sar
jmp
icebp
ins
sub
sbb
sar
dec
cwde
fdiv
fs
xor
imul
cmc
jae
and
push
dec
mov
dec
popf
sahf
lahf
inc
cmp
fs
xchg
cmp
add
popf
jge
adc
lahf
cmp
mul
rol
xor
pusha
std
adc
dec
fiadd
pop
ins
jmp
dec
xchg
std
sbb
xor
and
les
jne
mov
retf
outs
or
cmp
pop
leave
jp
aaa
les
mov
push
push
inc
or
add
hlt
push
or
cmp
pop
bound
dec
test
pop
jne
test
xchg
call
cs
mov
mov
out
push
fldenv
imul
rcr
ja
ins
ja
lock
add
call
mov
mov
int3
xor
cmp
daa
int3
push
and
jg
xor
fldcw
sub
push
xchg
mov
adc
mov
fs
jbe
fadd
push
aad
mov
xor
sub
mov
mov
rcr
daa
jne
cmps
popf
fwait
bound
es
xchg
and
sub
mov
xor
cld
ins
xchg
sbb
jbe
jb
enter
inc
test
inc
fidiv
sbb
push
ja
bound
les
cmc
aad
sub
push
repz
cmp
inc
(bad)
sub
push
xchg
ja
lods
push
sbb
mov
(bad)
movs
dec
pop
lods
jmp
add
mov
and
jo
add
jmp
enter
in
div
shl
mov
jo
xor
pop
jle
fstp
pop
jecxz
mov
call
loopne
sbb
adc
lods
ins
mov
push
xor
js
repnz
cmp
cmp
or
(bad)
push
pusha
icebp
pop
dec
test
les
stc
ret
sbb
aaa
fsubr
push
mov
sub
cmp
and
sub
cli
xchg
ret
xchg
jb
fs
les
sub
mov
add
or
pushf
jns
cs
or
xor
pop
aad
dec
jge
pop
addr16
or
jmp
jl
in
pop
inc
repz
test
xor
mov
push
call
data16
or
mov
jbe
dec
(bad)
sbb
scas
loopne
fist
push
xchg
daa
sbb
sbb
pop
or
xchg
loop
pop
stos
mov
inc
sbb
and
popf
dec
xchg
jnp
mov
hlt
ficom
pop
addr16
or
cmp
sub
adc
or
fs
leave
sbb
aaa
in
gs
add
stc
cmp
cmp
(bad)
and
xchg
daa
xlat
shr
jp
mov
fs
and
and
cmp
arpl
sbb
shr
hlt
mov
popa
loopne
mov
xchg
push
push
retf
(bad)
enter
adc
and
fld
push
dec
xor
push
and
fdiv
shr
loope
rep
dec
xchg
pushw
ins
jb
inc
std
es
or
adc
xchg
fild
push
pop
loop
mov
push
sub
jne
lock
sub
mov
(bad)
cmp
daa
or
sub
(bad)
adc
cli
shl
or
push
push
in
push
daa
mov
rcl
jae
add
push
(bad)
jmp
xchg
push
jbe
out
pop
push
and
daa
sub
mov
loop
push
cmp
add
pop
es
inc
push
fldcw
loope
cmc
dec
int3
xchg
inc
mov
mov
test
icebp
lds
xlat
push
mov
sbb
cdq
movs
sbb
imul
dec
hlt
dec
dec
cmp
pop
jg
test
add
add
cmp
mov
sub
or
out
xor
cdq
xchg
stos
xor
and
imul
sbb
xchg
sub
jmp
pushf
sbb
(bad)
push
outs
jne
daa
inc
xchg
repz
pop
pop
adc
lock
xchg
mov
mov
test
repnz
test
jp
rol
or
sub
push
mov
push
cdq
sub
pop
in
sar
push
xor
xchg
inc
push
ficom
xchg
mov
mov
dec
xchg
or
cmps
shr
call
dec
push
adc
cmps
inc
xchg
xchg
into
add
jp
adc
int3
retf
xlat
sub
xchg
mov
in
out
call
in
sbb
adc
or
jmp
jge
in
daa
push
cmp
xchg
mov
ds
xor
fadd
push
mov
ja
es
fisubr
add
outs
jnp
sub
arpl
mov
mov
jmp
dec
ja
xor
xchg
lods
and
call
xchg
pop
mov
(bad)
(bad)
xor
popf
pop
sbb
pop
jmp
sub
sub
add
call
sub
in
xor
bound
ins
shr
cmp
dec
xchg
test
je
or
xor
push
ret
xor
sbb
mov
push
and
mov
jns
mov
fadd
pop
clc
out
jp
(bad)
sub
rcl
test
jo
popa
fs
and
and
outs
cmp
jge
sbb
mov
lgs
push
or
js
xchg
mov
cmp
movs
(bad)
or
adc
jo
and
mov
cmc
dec
bound
mov
ret
xchg
xchg
(bad)
loop
sbb
(bad)
inc
in
inc
mov
push
sbb
cmp
aad
mov
je
pop
in
sbb
cli
test
mov
fidivr
mov
fadd
xchg
sbb
cdq
push
into
imul
xchg
lds
sub
cwde
add
push
nop
pushf
into
ret
push
adc
gs
movs
mov
retf
retf
jl
adc
scas
cmps
or
fimul
push
jae
mov
pop
call
pushf
sub
(bad)
push
mov
mov
mov
fcomi
(bad)
call
mov
jns
adc
icebp
push
fistp
push
or
cmp
inc
add
rcr
push
mov
jl
xchg
ficom
in
arpl
and
dec
lock
xor
shr
xchg
cmp
enter
mov
int
xchg
sbb
inc
jle
mov
pop
xor
mov
aam
cmp
call
pop
lahf
pusha
mov
cmp
mov
pop
imul
mov
xchg
fisubr
inc
daa
xor
call
adc
xor
push
mov
mov
jg
mov
mov
push
call
aam
mov
or
xor
cmc
or
or
add
xchg
jmp
cld
sar
jmp
cs
enter
jl
dec
cmp
in
ss
adc
imul
xchg
cmc
adc
add
sbb
addr16
jg
and
xchg
jnp
mov
push
mov
cli
in
mov
jne
scas
pusha
push
stos
push
jl
loopne
dec
imul
pop
mov
popf
xor
xchg
xor
mov
or
xor
add
stos
inc
pop
mov
push
dec
sbb
xchg
(bad)
push
mov
jbe
sbb
das
lock
iret
div
imul
sub
lods
sub
push
cs
sbb
cs
int3
pop
and
aam
repz
bound
xchg
outs
jo
sahf
in
and
mov
cmc
stos
mov
pusha
xchg
xchg
mov
sub
xchg
mov
pusha
inc
jge
xor
jo
cmps
lock
mov
fwait
cmp
jp
mov
ja
loopne
dec
jle
mov
adc
lods
repz
out
icebp
leave
inc
in
(bad)
sahf
sbb
mov
in
lds
nop
out
ja
test
call
sub
dec
imul
dec
xor
jmp
and
inc
jle
sub
fdivr
inc
pop
loope
jmp
daa
lods
repnz
xchg
add
xor
pop
add
movs
retf
je
mov
adc
sbb
iret
and
add
test
stos
jmp
cmps
and
(bad)
repz
dec
xor
rcr
adc
lods
retf
xchg
push
in
setl
jmp
ins
idiv
cld
rcr
dec
mov
jbe
or
mov
mov
sub
sbb
cs
lahf
pop
mov
jge
gs
inc
adc
out
js
add
xchg
or
push
dec
mov
ins
imul
cmp
out
adc
jecxz
js
call
stos
adc
ds
dec
sbb
mov
jge
adc
loopne
xor
adc
pop
fst
test
std
int3
fisttp
repz
sub
inc
aam
fisubr
ret
inc
xchg
out
xchg
hlt
sub
enter
into
fmulp
sbb
dec
aad
arpl
push
bound
daa
movs
aam
dec
ret
jns
jae
mov
mov
test
rol
mov
movs
aaa
xor
ror
adc
cmc
cmc
sub
mov
std
nop
pusha
int
out
call
mov
fs
inc
push
in
cmc
xchg
test
pop
enter
xchg
enter
daa
push
loope
nop
cwde
xor
mov
sbb
mov
iret
sar
movs
push
je
mov
daa
cmp
and
out
ss
jns
fcmovb
or
cmp
in
sbb
inc
cmp
push
ins
mov
pop
mov
fs
js
outs
mov
and
stos
gs
ja
call
push
push
fist
sbb
je
mov
or
push
cmp
dec
push
dec
add
enter
hlt
sbb
test
retf
icebp
ror
shl
jo
mov
jnp
imul
shl
push
js
ret
dec
inc
jo
push
clc
clc
mov
jle
push
cmp
int
inc
dec
inc
xchg
sahf
das
fsubr
out
cld
data16
mov
adc
push
out
add
push
jae
sub
shl
movs
ins
loopne
jb
mov
dec
jl
ja
shl
push
out
push
lods
cmp
xor
mov
jmp
and
jns
daa
outs
loope
(bad)
into
push
mov
jne
inc
(bad)
mov
mov
and
xchg
and
lea
nop
enter
(bad)
xchg
daa
nop
push
in
add
(bad)
or
js
cld
sub
jmp
or
ins
jo
cmp
into
jg
(bad)
mov
jo
adc
loopne
(bad)
mov
push
rcr
mov
loop
xchg
or
push
mov
adc
out
mov
cmp
mul
push
popf
pop
(bad)
mov
jae
add
cmps
add
adc
inc
dec
jae
jb
daa
aad
es
and
push
jno
scas
cmp
aad
jp
lods
mov
jmp
push
(bad)
jae
and
xor
add
pop
jnp
mov
dec
imul
mov
push
xor
fsub
repz
mov
or
sub
jnp
mov
cmp
cmps
jecxz
mov
clc
lea
mov
retf
repnz
or
ds
sub
inc
fimul
(bad)
lds
jmp
data16
aas
xchg
dec
pop
sbb
cld
adc
stc
cmovb
popf
xor
adc
addr16
loopne
jae
jns
jae
out
movs
dec
xchg
pop
call
mov
pop
sbb
or
jge
adc
mov
cmp
jmp
sub
cmc
jne
sbb
popa
pop
sub
adc
fs
(bad)
fdivr
or
imul
inc
dec
into
mov
ins
and
push
in
add
test
sbb
mov
dec
test
das
xchg
push
mov
or
inc
push
mov
loope
dec
sub
jp
in
div
cld
adc
addr16
push
pop
xchg
pop
jmp
add
mov
pop
ins
inc
imul
repnz
pop
sub
lds
loopne
and
cmp
adc
pop
and
cld
dec
push
aas
xchg
jmp
xor
(bad)
push
in
sub
xchg
sbb
adc
es
sar
jnp
sub
shl
sub
sti
pop
cmp
inc
xchg
(bad)
out
cmp
fimul
pop
cmp
xchg
and
aam
xor
sbb
sub
cs
into
cmps
retf
xor
repz
pusha
sar
xor
inc
sub
clc
xchg
and
sti
adc
pop
cmp
fscale
and
(bad)
call
repnz
cmp
inc
sub
sbb
js
add
loopne
loope
push
std
test
ds
xchg
cld
pushf
inc
xchg
hlt
mov
jae
es
xlat
test
inc
jne
mov
retf
xchg
popa
mov
sub
xor
inc
push
int
int3
loope
jp
inc
or
ins
xchg
cs
push
xchg
call
push
out
les
test
popa
jp
out
adc
stc
mov
and
add
xchg
add
push
cmps
out
jmp
mov
push
mov
test
mov
sbb
mov
cwde
icebp
and
and
daa
sub
out
xchg
pop
mov
nop
stc
jmp
daa
cmp
lea
sar
ficom
mov
sahf
sub
jmp
cmp
loope
cmp
cmp
adc
lods
popa
add
xchg
ins
lds
fadd
xor
push
test
fistp
and
jle
xlat
scas
xchg
mov
test
mov
jne
pop
lods
jne
adc
shl
cli
fdivr
data16
fwait
popw
and
jo
ficom
sbb
sbb
push
les
lahf
jp
push
cli
cmp
iret
jns
adc
icebp
or
sbb
push
sahf
and
scas
cld
jl
xchg
jb
lock
repz
sbb
sub
xor
push
mov
sbb
jne
sti
push
add
pop
jnp
and
test
ja
test
xchg
mov
test
mov
stos
repnz
fistp
or
mov
xchg
sub
xchg
dec
out
mov
ins
icebp
loop
xor
sub
repz
cmps
js
addr16
les
ja
xor
repnz
jl
data16
sahf
adc
repz
mov
je
in
pop
ss
adc
push
push
pop
lods
jb
jnp
(bad)
pusha
xor
es
jns
mov
xor
or
or
or
mov
cmc
shr
aas
mov
or
enter
fucomip
loope
popa
dec
inc
xor
xchg
into
(bad)
jecxz
inc
mov
xor
imul
es
sbb
int
out
push
cmp
ret
jmp
xchg
mov
push
jp
inc
out
pop
mov
mov
push
xchg
nop
pop
sub
push
mov
int3
sbb
jne
hlt
in
jle
xchg
int
push
adc
cwde
imul
in
cs
mov
pop
dec
js
mov
sub
sbb
popa
ja
sub
sub
jmp
fisub
shl
std
mov
push
dec
hlt
jae
fistp
cld
fsubr
adc
xchg
cwde
shl
adc
xchg
cmp
stos
shl
das
lock
ins
or
cmp
mov
pop
std
cmc
xchg
xchg
adc
cmp
daa
cmp
mov
xor
shl
mul
movs
push
xchg
dec
xor
mov
jne
fimul
jmp
lds
imul
jno
imul
and
stos
and
jle
out
cwde
mov
movs
bound
cmp
int3
push
mov
xor
shl
retf
imul
jne
(bad)
sbb
jo
add
pop
push
pop
loope
stos
repz
mov
aad
mov
scas
xchg
sbb
loope
into
xor
cmp
pop
cmp
push
sub
inc
retf
dec
and
xchg
inc
sub
mov
dec
add
jle
cmp
cmp
and
call
jnp
jmp
add
pop
cwde
test
add
mov
ds
in
call
loopne
js
dec
sub
add
dec
and
push
sub
and
icebp
cld
out
inc
cmps
adc
jle
aam
sti
jae
jns
pop
adc
in
jne
jl
mov
or
or
repz
sti
in
test
cmps
sbb
sbb
scas
xchg
out
xor
pusha
xchg
pop
sahf
sbb
hlt
fadd
push
jne
repnz
aam
(bad)
jne
jg
icebp
mov
retf
call
int
xlat
lea
rdpmc
ficom
add
cmp
mov
xchg
fs
mov
mov
pop
cmp
jne
sub
sbb
test
lods
jne
jbe
sbb
clc
jae
xchg
pop
fst
daa
mov
and
test
out
sub
push
cmp
repnz
inc
cmp
jns
xchg
xlat
cs
test
mov
je
out
pop
jo
xchg
sub
icebp
jmp
xor
adc
pop
or
mov
bound
xchg
or
or
retf
xchg
dec
inc
sbb
out
xchg
xchg
jmp
dec
(bad)
sub
jne
ja
sbb
push
and
add
sub
pxor
pop
jae
in
wrmsr
cwde
mov
adc
test
jp
(bad)
out
and
dec
mov
pop
sbb
sahf
xlat
sbb
adc
rep
cmps
cld
sbb
sbb
and
push
or
xor
xchg
pop
push
or
adc
sbb
outs
xchg
aaa
daa
mov
mov
mov
rcr
call
adc
jecxz
pop
xchg
in
and
bnd
clc
sbb
sbb
fstp
retf
fucomi
jp
cs
jg
cmps
inc
sub
add
jnp
sub
fldcw
dec
push
ficom
inc
stc
jnp
and
mov
sub
mov
adc
cwde
inc
cmp
mov
mov
mov
xor
mov
and
pop
mov
cmp
xchg
aas
sub
(bad)
mov
xor
jp
std
xchg
retf
mov
into
or
jae
mov
fisubr
sti
xchg
xchg
nop
jp
in
adc
mov
jo
or
clc
inc
xchg
in
dec
jne
and
pop
ins
cmp
aad
jmp
pop
cld
in
setb
push
push
in
cli
xchg
js
call
fs
cmps
xchg
xchg
push
pop
push
call
(bad)
fsub
inc
jb
push
(bad)
mov
shl
jbe
xor
in
aam
mov
out
shl
cli
cmp
mov
ret
sub
ins
(bad)
mov
or
sub
lods
imul
imul
mov
gs
cmp
stos
push
mov
jne
push
movs
pop
and
adc
(bad)
jbe
out
test
jmp
retf
imul
mov
mov
cmc
jno
lahf
ret
movs
inc
pop
ja
jns
jmp
dec
xchg
adc
imul
push
inc
daa
pop
push
and
stc
les
mov
ss
xchg
mov
and
xor
test
int3
outs
sbb
cmp
ficom
inc
sahf
stc
(bad)
sti
pop
xor
lods
cs
addr16
mov
lea
cmc
and
xchg
mov
jne
mov
xor
push
rcl
xchg
movs
pusha
push
adc
sbb
shr
mov
js
call
jmp
out
movs
pop
lds
sub
inc
or
push
pop
stos
jg
fwait
je
lds
pop
mov
dec
sub
addr16
arpl
hlt
daa
sub
push
sub
push
rcl
aaa
xlat
int
fldenv
sub
xchg
xor
fld
std
mov
cmp
es
cmp
mov
jne
adc
mov
push
xchg
xor
mov
xchg
movs
(bad)
ja
cmc
jmp
adc
mov
dec
adc
inc
and
cmp
push
hlt
xchg
int
loope
push
jne
sub
add
or
xchg
mul
dec
daa
sbb
dec
xor
bound
rcr
outs
mov
sub
popf
addr16
and
adc
loope
fwait
adc
pushf
mov
in
mov
test
rcl
in
dec
je
stos
das
jae
xchg
clc
and
sbb
pop
nop
jge
xor
add
call
lds
add
ret
(bad)
into
fisub
je
dec
sbb
scas
scas
push
sbb
loopne
push
(bad)
or
push
sbb
or
ret
in
(bad)
std
jns
cdq
adc
repz
push
inc
push
xchg
sbb
stos
push
jb
(bad)
sbb
hlt
in
push
fcom
sub
jns
pop
sub
dec
frstor
xchg
in
jae
jmp
add
and
and
cmp
scas
mov
xor
icebp
mov
and
push
lods
cmp
cmp
sbb
sub
adc
push
dec
xchg
(bad)
mov
fs
xchg
pop
xchg
loopne
ficom
lods
mov
stc
fs
or
into
(bad)
sub
imul
movs
call
xchg
mov
dec
lock
inc
adc
xchg
push
inc
cld
fnstcw
mov
jecxz
in
sub
stc
gs
movs
and
jns
push
jnp
mov
stos
shr
or
add
pop
push
mov
sbb
push
repnz
xor
cs
or
sahf
mov
lds
jae
addr16
add
inc
call
push
or
push
mov
test
mov
mov
in
les
jge
xor
push
fs
inc
pop
inc
and
(bad)
out
dec
imul
jg
cmp
icebp
nop
dec
stos
inc
or
sub
arpl
push
inc
test
inc
jmp
mov
iret
aas
cmp
fnstenv
push
outs
cs
cmp
scas
aad
repz
icebp
hlt
or
jns
push
hlt
outs
adc
scas
pushw
jle
iret
sbb
mov
jb
cmps
loope
sahf
jle
adc
movs
fdiv
std
es
popa
ficomp
and
scas
mov
mov
test
jne
sub
sub
imul
and
xor
xor
ins
jb
pop
je
in
addr16
popa
pop
aam
mov
xor
shl
add
or
jne
pop
xor
lds
rol
aad
test
movs
cmp
jae
xchg
rep
into
push
xor
leave
ins
nop
mov
mov
xchg
jnp
mov
mov
xchg
dec
movs
dec
stos
jns
dec
push
int3
mov
xor
cmp
ins
adc
sub
pusha
cli
hlt
and
add
sub
dec
stos
shr
xchg
dec
inc
sbb
pusha
fbld
adc
adc
pop
sti
pop
mov
xchg
stos
cs
pusha
sub
push
pop
push
jae
fistp
clc
mov
mov
xchg
in
or
pop
dec
push
dec
adc
jecxz
sub
inc
sbb
sahf
lahf
movs
sub
sbb
xor
leave
bound
dec
test
mov
or
movs
imul
mov
and
pop
cli
jbe
pop
mov
cmc
push
pop
push
xchg
mov
ret
out
call
test
jecxz
push
call
jae
and
lea
ficomp
clc
push
shr
and
les
cmp
mov
mov
and
fwait
stc
jbe
adc
jb
popa
sub
test
fdiv
jo
pop
dec
jns
aaa
cmp
in
ja
je
out
mov
out
push
into
lahf
lea
cli
cld
mov
lds
push
or
ret
add
pop
add
mov
dec
cmp
xchg
ret
mov
data16
jge
or
int3
imul
enter
jbe
inc
nop
or
enter
jnp
pushf
loopne
jl
loop
icebp
in
push
push
push
inc
test
mov
mov
cmp
sbb
les
push
das
sub
sub
rcr
mov
fbld
dec
cmp
sub
mov
ss
jae
xchg
adc
jbe
inc
add
lahf
push
mov
sbb
mov
arpl
int3
cmp
add
pop
push
iret
xchg
pop
das
sub
sub
js
out
jl
adc
movs
inc
push
pop
loope
sub
sub
push
xchg
ins
mov
or
aam
out
inc
mov
test
sub
and
fisubr
push
mov
lock
pop
je
pop
xor
sub
add
std
out
xchg
dec
dec
jb
jmp
adc
mov
ret
lock
pop
sbb
jae
mov
ins
pop
pop
cmp
push
fisubr
mov
cmp
sahf
jb
sbb
(bad)
aad
sbb
sar
lods
popf
jno
xchg
out
sbb
inc
mov
cwde
jb
(bad)
out
jo
std
jl
lods
js
test
cli
mov
mov
sub
jb
sub
sbb
loopne
xchg
aaa
xor
add
cli
dec
jb
dec
test
neg
cmp
mov
shr
rcl
icebp
jp
sub
dec
fstp
jp
jecxz
xchg
jmp
sbb
mov
and
push
pop
in
xchg
dec
call
mov
jge
mov
dec
xor
dec
sbb
push
adc
clc
lods
fcomi
nop
dec
pop
fistp
(bad)
jno
add
sbb
xchg
xchg
loopne
leave
and
arpl
in
in
push
bound
jge
and
jge
add
cld
sub
(bad)
jo
sub
pop
arpl
ret
dec
xor
out
cli
loopne
in
je
ficom
add
xor
jne
shl
arpl
or
or
pop
cmps
fistp
xor
xor
mov
pop
les
loop
mov
xchg
rcl
jbe
out
inc
pop
(bad)
or
popf
js
jnp
inc
jmp
mov
and
adc
jb
call
(bad)
outs
mov
cld
loope
lds
or
leave
ss
cmc
xchg
jp
mov
scas
jne
call
jg
movs
pushf
sub
mov
cli
lock
mov
jp
dec
repnz
pop
sbb
js
sbb
adc
xchg
mov
mov
fld
xor
mov
jb
test
lods
and
test
adc
sub
xchg
push
(bad)
lock
div
pop
cmp
mov
stc
jle
jne
cdq
aas
push
mov
adc
pop
jg
stos
cmp
fiadd
in
jne
in
inc
and
imul
push
and
shr
mov
pusha
imul
pop
fisub
jb
nop
push
mov
imul
(bad)
enter
neg
aad
sbb
adc
xchg
xor
push
imul
sbb
inc
adc
and
cmp
in
or
in
in
repz
arpl
cwde
and
hlt
movs
sbb
adc
(bad)
inc
sub
and
dec
fwait
jbe
hlt
gs
pusha
xchg
hlt
fdivr
loop
xchg
test
imul
adc
shl
daa
clc
pushf
jecxz
mov
jbe
js
in
sbb
mov
pusha
jmp
xchg
aaa
das
fs
addr16
fisttp
xor
les
cmp
and
mov
xchg
sbb
in
sub
cmp
aam
rcr
jns
cmp
dec
dec
test
mov
and
mov
mov
inc
movs
(bad)
loop
mov
(bad)
cmp
push
fisttp
das
pop
adc
xchg
bound
fistp
loopne
and
aas
aam
not
ins
fcom
sbb
sahf
mov
mov
comiss
shl
sti
dec
sbb
xchg
retf
xchg
pop
aaa
jne
add
retf
(bad)
and
fisub
mov
push
popf
xchg
and
icebp
mov
adc
mov
sub
addr16
or
js
iret
aad
outs
push
mov
jae
dec
cmp
stos
and
dec
mov
mov
xchg
addr16
xchg
xor
adc
xchg
cmp
add
loope
outs
movs
cmp
xchg
fs
hlt
lea
arpl
jg
sub
xor
repnz
or
in
adc
stos
xor
xchg
pop
dec
fdivr
imul
and
lock
fild
ja
xor
repnz
sbb
push
mov
cdq
push
and
jp
adc
out
xor
mov
jb
mov
cmp
(bad)
xor
(bad)
addr16
pop
stc
sub
loopne
sub
push
mov
jg
add
shl
pop
inc
sub
mov
mov
data16
in
lahf
mov
pusha
xor
add
cwde
mov
and
xchg
icebp
push
sbb
or
mov
jae
push
jne
push
jmp
rol
popf
cmp
dec
xchg
ret
popf
addr16
mov
adc
mov
xchg
jp
popa
add
or
js
lods
sahf
fmul
loop
adc
les
call
retf
lock
aaa
add
sbb
or
in
int3
xchg
jmp
mov
xchg
cvtpi2ps
fmul
sbb
icebp
push
adc
(bad)
addr16
lock
loopne
add
gs
popf
inc
xor
pop
stos
je
sub
dec
imul
clc
cmp
shl
dec
add
js
jnp
pop
test
ins
sti
pop
push
iret
cld
imul
jp
fs
(bad)
lods
jl
popa
mov
pushf
jge
xchg
jne
jge
mov
cld
mov
in
cli
push
ss
aas
adc
jmp
or
scas
test
push
sub
mov
imul
inc
cmps
jp
les
mov
xchg
sub
shl
sbb
jmp
push
mov
pop
dec
sbb
cmc
(bad)
mov
fsub
or
movs
push
or
xchg
mov
pop
xchg
and
sbb
std
ins
jae
outs
cmp
std
ins
inc
and
sbb
jne
mov
out
xchg
int
ret
xor
sub
stos
xchg
jle
or
cmp
lds
fisttp
jp
sbb
mov
dec
pop
push
adc
mov
or
retf
dec
push
nop
out
call
mov
and
fwait
ins
adc
cmp
cdq
inc
inc
pop
into
aam
sbb
or
and
jne
psubusw
mov
mov
imul
mov
aas
dec
adc
fwait
stc
clc
push
mov
fisttp
cmp
into
pop
pop
loope
mov
repnz
(bad)
jne
jo
sub
adc
nop
adc
xor
ss
pcmpgtd
cmp
in
cld
push
loopne
outs
sub
sub
xchg
je
xchg
jb
fwait
add
jb
mul
(bad)
retf
fsubr
in
or
sub
outs
icebp
cmp
mov
pop
mov
mov
stos
jnp
test
xor
test
or
test
mov
inc
cmp
mov
hlt
mov
std
mov
push
pop
pop
pop
dec
mov
retw
and
(bad)
dec
xchg
jmp
outs
cmc
lock
inc
adc
idiv
mov
fdivr
jp
fldenv
dec
and
mov
pop
jp
cmc
add
sahf
imul
aam
cmc
daa
std
mov
mov
mov
mov
fldcw
lahf
jae
ret
xor
push
mov
jecxz
scas
sahf
push
mov
fisttp
(bad)
test
cmp
icebp
int
push
imul
outs
fs
out
push
fwait
dec
out
xor
mov
lods
cmps
fldenv
jp
daa
and
xlat
(bad)
sahf
push
mov
jns
lea
outs
and
lds
out
mov
iret
mov
jne
bound
sub
test
out
xchg
and
and
dec
dec
int
loopne
and
das
xchg
mov
pusha
pop
sar
and
mov
jne
sub
xor
repz
pop
pop
and
xor
xor
cs
cmp
mov
xor
fld
ins
call
xchg
les
loope
xchg
stos
add
dec
push
sbb
dec
cmc
push
in
fsub
shl
pop
jmp
and
adc
xchg
call
cmp
xchg
and
das
xlat
loopne
in
xchg
scas
fcom
mov
loopne
in
sub
sub
cdq
mov
out
pop
push
xor
int
std
xchg
ret
add
jo
fmul
adc
sub
mov
std
in
push
or
add
xor
les
in
mov
push
mov
add
pop
daa
inc
cmp
rcr
cmp
(bad)
dec
inc
popf
lds
call
and
bound
imul
lods
mov
scas
sbb
push
in
ins
sbb
push
daa
(bad)
repz
out
pop
inc
je
pop
xchg
jnp
pop
(bad)
cmp
mov
ja
imul
or
adc
push
(bad)
call
test
mov
es
sbb
cmp
movs
xor
arpl
scas
sbb
mov
mov
loope
pushf
mov
shl
inc
sti
adc
jne
retf
mov
jge
dec
daa
push
jno
lock
pop
into
mov
xor
xchg
rol
dec
(bad)
push
mov
fidiv
jge
xchg
test
sahf
push
outs
adc
aas
mov
loopne
test
jle
and
cs
ficom
js
cs
(bad)
jnp
addr16
hlt
mov
js
jle
push
aas
jp
cwde
xor
mov
pop
cmp
and
fstp
push
inc
in
sub
jle
sar
cmp
popf
les
push
xchg
ja
stos
pop
jo
jns
lds
push
in
fmul
scas
cwde
imul
xchg
and
in
sahf
cmp
mov
sub
repz
push
daa
nop
clc
out
call
icebp
jg
push
dec
cmps
arpl
sbb
add
loope
push
ret
push
push
push
xor
sbb
xchg
rcr
stc
rcr
jmp
pusha
out
xchg
das
push
stos
mov
repz
push
add
movs
push
data16
std
loopne
cmc
sti
test
pop
cmp
sub
daa
imul
rcl
frstor
or
repz
es
aam
(bad)
data16
les
popf
mov
jp
fnstcw
jno
or
xor
cmp
xchg
daa
jae
hlt
sub
cmp
adc
dec
aam
mov
and
xlat
outs
retf
(bad)
adc
std
sbb
mov
cmp
mov
data16
stos
fs
js
push
mov
(bad)
dec
jl
fcmovu
cmp
cmp
add
fsub
ret
ret
pop
jmp
jnp
cmps
cs
lds
test
aam
mov
js
aam
int
mov
mov
jo
xor
add
fsubr
out
dec
and
es
cmp
sbb
push
push
test
ror
and
jae
sub
cld
mov
mov
ret
sbb
jbe
loopne
sbb
jge
cmp
in
xor
push
in
pop
xchg
adc
jae
cmovge
jg
mov
or
sub
stc
dec
mov
push
das
stc
repnz
data16
or
dec
add
add
adc
lea
dec
xor
js
push
les
loopne
adc
loopne
xchg
test
cmc
pop
mov
cmps
pop
cmp
adc
stos
xor
lods
out
shl
fs
cmp
xchg
xor
add
dec
retf
jg
mov
sahf
(bad)
fs
mov
in
(bad)
sub
data16
mov
das
test
jle
mov
mov
add
iret
xor
sub
in
dec
fcmovnb
mov
mov
and
les
cs
sbb
and
xchg
mul
sti
mov
(bad)
xor
xchg
jp
int
adc
pop
out
jb
shl
das
repnz
adc
adc
or
push
xor
or
pop
adc
fist
mov
pop
mov
pop
loopne
dec
ins
ret
cld
ds
mov
lds
or
stc
ins
rcr
jns
sub
mov
jge
jnp
cmp
jp
inc
dec
pop
js
rcr
mov
jmp
dec
mov
imul
fisttp
dec
repnz
clc
bound
xor
loope
mov
mov
dec
std
xor
js
fidiv
xchg
hlt
dec
imul
retf
popf
xchg
jp
sub
sbb
and
loope
lods
adc
dec
jne
cld
stos
nop
push
loopne
movs
inc
imul
mov
pop
mov
out
mov
jns
jne
mov
cld
popf
adc
mov
fdivrp
(bad)
stc
aad
mov
mov
(bad)
(bad)
lods
pop
mov
in
fstp
jbe
test
fnsave
push
clc
sub
loopne
sar
es
jo
inc
mov
or
inc
mov
sbb
lahf
sub
jecxz
sub
retf
jge
(bad)
jmp
or
in
adc
mov
add
pop
mov
mov
fdiv
xor
jle
ret
int
fsub
sub
out
xchg
cmp
mov
add
or
jbe
push
push
cmp
lahf
loopne
addr16
shl
push
jae
sbb
xor
xchg
mov
cmc
adc
jle
clc
xor
fistp
fcomp
push
pop
lods
cdq
sub
cmc
fsubrp
inc
mov
js
add
dec
mov
add
or
xchg
mov
dec
dec
int3
jne
or
and
pop
push
xchg
cdq
sbb
and
scas
sub
pop
push
and
sbb
mov
sub
mov
(bad)
call
in
inc
test
ret
push
test
cli
xchg
sti
mov
movs
clc
dec
stc
mov
push
lods
jmp
jo
or
retf
loope
push
int
pop
xchg
clc
xchg
and
sbb
sub
(bad)
push
shr
cld
js
test
enter
inc
cs
push
xchg
out
hlt
cld
icebp
loop
pop
mov
aaa
fild
jp
out
xor
xor
sti
int3
dec
jno
push
arpl
dec
shl
mov
adc
sub
hlt
pop
mov
add
xchg
jmp
mov
mov
jl
lock
xor
in
pop
jmp
xchg
and
(bad)
xchg
jb
cli
vmovaps
xchg
stos
je
ds
add
jne
sar
dec
enter
xchg
stos
ret
sub
xor
adc
or
jmp
cmp
sbb
lds
fs
jns
or
pop
jns
outs
mov
dec
mov
pop
(bad)
xor
push
mov
mov
or
cmp
arpl
xor
push
push
mov
repz
xchg
xchg
sub
rcr
fs
or
jb
sub
icebp
xchg
mov
xor
stos
and
cmp
jmp
xchg
aas
pop
retf
mov
(bad)
sbb
lods
push
stos
sbb
add
push
xchg
minps
js
xor
xor
mov
jne
cmps
addr16
mov
retf
adc
jae
test
and
js
icebp
out
or
pop
iret
jp
mov
aam
rcr
stc
sahf
retf
jmp
pushf
add
inc
in
cld
push
rcl
xchg
leave
pushf
or
dec
fistp
pusha
add
ss
stos
jo
mov
sbb
jnp
adc
pop
mov
mov
push
sbb
jae
sbb
adc
fwait
call
sbb
and
pop
sbb
fsub
sbb
mov
cmp
add
sbb
neg
and
int
sub
inc
in
pop
xchg
test
loope
sub
in
sbb
in
cdq
mov
jecxz
data16
imul
fstp
(bad)
mov
jmp
seto
out
int
dec
push
mov
sub
out
(bad)
jp
adc
jge
mov
push
(bad)
mov
xor
ins
xchg
jae
ds
mov
call
push
mov
jbe
push
dec
data16
sub
xchg
xor
repz
sbb
xor
or
stc
sbb
rcl
jns
xor
mov
mov
test
sbb
xor
mov
leave
lods
inc
pop
sbb
and
push
push
sub
rcl
(bad)
and
cmp
cld
fimul
and
rcl
sub
mov
mov
ret
into
hlt
stc
cmp
add
lahf
jo
(bad)
fimul
jle
clc
retf
retf
pop
xor
and
xor
or
out
iret
retf
jbe
inc
or
push
cmp
mov
adc
(bad)
aas
into
ins
dec
push
ret
fist
cmp
dec
xchg
cs
cld
loopne
jo
sbb
sub
xor
jns
cmps
adc
setg
cmps
ds
aad
mov
and
sub
mov
dec
loope
dec
mov
(bad)
aam
mov
adc
lock
cmc
js
and
push
or
clc
push
mov
fstp
jns
call
es
sbb
sbb
mov
clc
pop
stos
nop
out
push
sbb
mov
cmp
movs
out
fwait
out
pop
ja
or
scas
in
in
sbb
push
mov
xor
sbb
imul
ins
leave
sbb
pop
es
jmp
jmp
xor
lock
mov
jp
or
xchg
mov
stc
or
sub
pushf
aam
push
cmps
(bad)
movs
cld
jbe
(bad)
cs
pop
in
cmps
dec
adc
push
push
out
retf
inc
ds
jle
cmp
lods
es
xchg
dec
add
jge
mov
daa
jp
mov
sub
adc
sbb
xchg
or
mov
scas
push
jae
js
mov
xchg
ss
pop
push
xchg
pop
xor
push
xor
test
add
movs
push
jp
retf
arpl
shl
jp
push
lea
fdivrp
mov
dec
pop
add
add
das
int
push
push
jmp
cdq
mov
push
xchg
xor
xor
xchg
(bad)
stos
shr
loopne
add
or
sub
jle
sbb
das
mov
add
cmp
addr16
hlt
scas
xchg
jae
xchg
movs
mov
cwde
cmp
inc
rol
xor
jge
push
xchg
mov
push
rcr
xchg
sbb
std
repz
mov
cmp
adc
mov
aam
popa
mov
test
adc
add
fldcw
mov
cmp
outs
cli
mov
clc
and
and
test
(bad)
or
jle
cdq
pop
les
pop
pop
pop
minps
pop
or
addr16
pop
jb
fwait
ds
hlt
mov
ins
adc
push
lahf
inc
test
test
sar
ja
push
je
mov
pop
mov
mov
dec
sub
xor
mov
popf
(bad)
jp
outs
dec
xor
dec
lock
dec
lea
lds
repz
xchg
fimul
inc
mov
jge
xchg
inc
cmp
rol
push
popf
les
shl
neg
loope
(bad)
dec
call
mov
adc
add
cmps
pop
mov
mov
leave
add
js
call
fiadd
sub
cmc
xor
out
sub
pop
pop
aaa
scas
adc
sbb
push
sub
sbb
and
popf
sub
hlt
pop
fsubr
cmp
jmp
(bad)
int3
mov
cmp
xor
jb
and
je
sub
jae
call
repnz
das
(bad)
shr
adc
mov
adc
sbb
icebp
push
mov
dec
inc
jp
mov
xchg
jns
sbb
ins
sub
mov
les
mov
jae
jbe
push
inc
mul
das
pop
or
pop
sbb
iret
jg
ins
mov
or
mov
icebp
pop
dec
pushf
inc
and
push
das
cmps
pop
mov
data16
mov
push
(bad)
adc
jb
mov
ja
fnsave
cmc
scas
sub
and
cmc
cmp
cmp
bound
gs
repz
pop
and
dec
ja
jne
sbb
loope
stc
int
cmp
ja
add
xor
hlt
and
jp
xchg
in
adc
in
sbb
std
nop
xchg
out
sub
mov
mov
shl
sub
and
pop
push
pop
xchg
mov
inc
jp
mov
and
ficom
jne
add
cmps
leave
jb
fucomi
repz
jmp
hlt
les
xchg
ins
add
pop
jne
sub
cld
mov
out
daa
sahf
push
ret
adc
(bad)
in
pusha
jns
outs
out
in
mov
sub
sahf
push
jne
jb
sti
dec
mov
and
mov
gs
mov
adc
xchg
pop
loope
mov
xchg
add
jmp
sbb
cmp
ja
adc
push
xchg
frstor
mov
cmp
dec
mov
inc
clc
jae
mov
pop
or
fcmovb
push
dec
add
push
js
push
jp
idiv
add
jge
aaa
bound
rcl
dec
or
sahf
imul
push
jp
add
pop
push
xor
daa
aas
mov
jno
ficomp
lock
lock
inc
and
xor
xchg
call
sbb
loopne
and
lock
mov
test
std
and
xchg
inc
cmp
loop
aam
sub
jne
sub
inc
gs
mov
scas
add
ret
sbb
fist
shl
inc
je
inc
sub
xor
add
mov
lods
cli
ret
fistp
push
(bad)
es
add
push
test
in
jno
sti
addr16
mov
mov
aas
(bad)
mov
jo
adc
bnd
xor
rcr
jp
cs
(bad)
and
jae
push
inc
loop
movs
lods
fcom
ficomp
js
loopne
dec
dec
sub
ds
and
mov
in
cmp
mov
pop
cmp
mov
or
retfw
and
sbb
jns
icebp
mul
sub
sub
dec
fwait
in
ret
xchg
push
bound
mov
add
and
test
mov
jmp
and
cmc
cmps
mov
xchg
mov
in
jmp
ficom
hlt
je
xchg
cli
cli
imul
in
xchg
push
rcl
cmp
hlt
pop
xchg
rol
ret
addr16
int
gs
sar
pop
fwait
push
push
mov
test
jae
and
jns
sti
jae
je
jns
loope
in
mov
or
imul
jmp
pushf
cmovs
or
fs
inc
stos
aad
xor
jmp
pop
jmp
cmp
push
cld
outs
in
mov
xchg
mov
jg
adc
mov
push
enter
xchg
push
or
mov
in
xchg
push
xchg
jne
jp
push
mov
mov
xor
fstp
lods
sub
loopne
dec
retf
(bad)
ret
neg
sbb
mov
dec
mov
xor
stc
cmc
add
xor
mov
aam
add
or
int3
mov
cmp
xchg
mov
rcl
clc
inc
xchg
and
fmul
outs
je
inc
adc
cmc
fwait
out
pop
mov
cmp
sbb
sub
das
jne
pop
xor
mov
call
jge
test
dec
mov
and
sbb
cwde
sub
sub
xchg
mov
dec
in
pop
xchg
dec
cmps
push
cmp
push
fcmovne
rcr
push
xor
addr16
jp
jmp
xchg
or
cmps
sbb
mov
cld
mov
jbe
clc
or
jp
jmp
fld
inc
add
fwait
xchg
and
cmp
vmread
sti
aas
stos
jbe
jae
sub
test
sub
cmp
call
iret
sub
enter
jo
inc
jmp
inc
(bad)
int3
out
xchg
into
leave
fisub
iret
icebp
sub
sub
jae
call
(bad)
push
pop
jb
test
wrmsr
popf
pop
fst
mov
push
xchg
or
in
jmp
xlat
xchg
pusha
dec
sub
lahf
jmp
imul
(bad)
inc
adc
sbb
xor
pop
xor
push
in
pop
and
cmp
lods
dec
mov
mov
shl
stos
mov
in
lahf
dec
jne
inc
sahf
rol
xchg
pop
mov
push
pusha
mov
movs
adc
pushf
cmc
xchg
mov
fidivr
dec
and
loopne
loopne
dec
sbb
pusha
inc
mov
xchg
push
xchg
loope
enter
mov
lods
mov
xchg
xchg
int
and
push
sbb
pop
bound
stos
pop
dec
stos
jge
xchg
repz
pop
pop
jo
sbb
sub
and
icebp
cmp
(bad)
out
fisub
addr16
jns
dec
ret
cmp
or
sti
jbe
sbb
mov
jns
sbb
cld
xchg
bound
mov
stos
ficom
shl
and
(bad)
ror
loopne
jnp
(bad)
retf
sbb
gs
ds
cmc
out
add
add
pop
test
pop
xchg
adc
popa
adc
fist
scas
mov
loopne
mov
ja
sub
push
sub
xchg
xor
loope
stos
sahf
fstp
jge
cmp
loope
out
mov
jecxz
sti
jne
xchg
dec
or
inc
fistp
lods
sub
rol
je
loop
push
sub
pop
cmp
fbstp
inc
(bad)
dec
scas
ja
mov
test
test
arpl
mov
push
cmp
stos
cmp
cmp
xlat
add
cmp
aad
ja
retf
addr16
inc
(bad)
shr
sub
pop
(bad)
rcr
adc
js
mov
ss
fstp
cmp
call
inc
(bad)
push
cmp
and
rcr
or
jg
fidiv
jno
cld
mov
xchg
add
ror
and
mov
push
push
cli
repz
mov
sub
daa
imul
mov
mov
cmp
lock
call
test
lods
pop
or
outs
leave
push
sbb
bound
jns
fnstcw
cmp
push
cmc
mov
xchg
mov
pop
xor
add
sub
stc
ret
xor
inc
mov
int3
push
mov
xor
mov
jge
cmc
or
shl
jp
mov
jnp
scas
pop
je
lea
(bad)
(bad)
fdiv
add
je
fbld
cmc
cld
push
icebp
test
mov
fdivr
jb
addr16
fsubr
cmps
or
aad
pop
fsub
mov
push
std
test
mov
pop
xchg
jmp
imul
fs
and
push
dec
sbb
mov
mov
cmps
jbe
ret
pop
test
js
outs
into
sub
(bad)
pop
mov
mov
cli
test
call
retf
js
dec
mov
push
push
jae
or
xchg
add
add
jns
retf
dec
pop
es
test
and
xchg
pusha
mov
push
mov
(bad)
sub
jge
xor
adc
bound
mov
mov
ss
stc
mov
shl
mov
loopne
les
jae
not
loopne
cmp
jne
std
jnp
xchg
xor
jge
(bad)
mov
ror
or
sbb
jmp
leave
push
hlt
xor
js
jmp
jg
ret
fadd
mov
dec
jle
pop
dec
arpl
mov
xchg
mov
sbb
loop
mov
in
dec
out
push
sub
jb
pushf
cli
clc
call
iret
in
mov
sub
lods
ds
push
sub
jge
ins
lods
mov
js
call
adc
fwait
add
hlt
add
inc
call
xchg
sbb
test
fsubr
(bad)
inc
ja
mov
mov
mov
mov
sub
inc
sbb
cmc
xchg
scas
popf
xlat
mov
pusha
pop
cld
(bad)
cmc
mov
mov
(bad)
lock
(bad)
cs
xchg
cmp
es
mov
mov
cmp
sub
mov
shr
and
xor
jl
mov
test
jns
lock
mov
xor
fiadd
mov
sbb
cmp
in
test
shl
sete
or
pop
mov
jns
int3
adc
inc
xor
(bad)
shl
fwait
pop
sbb
sub
cmps
fisttp
shl
xor
xor
movs
xchg
xor
and
sub
(bad)
les
xchg
cmp
xchg
mov
jae
inc
inc
jno
jp
mov
in
jnp
movs
cmp
jl
mov
popf
or
ss
sub
xchg
sti
jmp
dec
test
(bad)
jg
dec
cli
fwait
and
dec
sub
jge
cdq
imul
mov
or
dec
pushf
ins
lock
xchg
push
or
stos
push
test
mov
(bad)
in
in
jl
adc
or
test
fistp
push
cdq
arpl
jg
jp
icebp
jl
stc
popa
pusha
ret
rcr
loope
mov
repz
cmp
sbb
clc
out
mov
cmp
std
xor
js
call
push
cs
cmp
lock
(bad)
stc
(bad)
test
push
ror
stos
mov
push
call
scas
cmp
cmp
daa
iret
loope
push
jle
out
ja
mov
ins
test
or
clc
ret
xchg
arpl
or
adc
js
mov
jbe
mov
adc
add
ret
cmp
sub
xchg
hlt
mov
dec
xchg
jecxz
xchg
push
xor
sub
in
cmp
and
mov
jmp
mov
cs
addr16
mov
ins
jnp
mov
in
cmps
mov
fst
cmp
test
(bad)
aaa
xchg
and
ror
xchg
pop
repnz
aam
push
jecxz
xchg
xlat
cs
sbb
and
dec
mov
icebp
js
lea
rol
push
mov
xor
clc
adc
xchg
rcr
fistp
inc
imul
jo
(bad)
not
loop
push
jo
stos
and
aam
(bad)
or
cmc
add
push
push
cmps
ds
loope
xor
xchg
push
cmp
jp
xchg
sbb
adc
jp
sbb
xlat
cmps
fistp
cmp
cli
push
adc
ror
sub
es
sub
add
or
dec
and
add
xchg
jle
jle
jo
cmp
push
jnp
rol
mov
push
iret
fild
int
ins
sub
mov
clc
adc
into
xlat
fnsave
pop
jne
and
xchg
jns
scas
pop
sub
mov
mov
pop
or
cli
jg
test
test
loope
arpl
inc
mov
sbb
call
pop
repz
sbb
repnz
adc
js
dec
repz
add
push
lods
push
cmp
sbb
fisub
outs
cmps
jmp
pop
sahf
mov
push
inc
retf
ins
ins
nop
scas
jne
xor
mov
in
ja
(bad)
ficomp
aam
cmc
xor
rcl
shl
mov
xor
jp
shr
mov
push
inc
sub
pop
adc
cdq
jnp
inc
test
fs
mov
ins
ja
adc
out
or
repnz
outs
and
dec
cs
icebp
add
aaa
and
aad
out
mov
retf
sar
icebp
mov
sbb
push
add
dec
xchg
test
test
aam
pop
push
mov
xor
mov
hlt
pop
clc
push
retf
sub
and
add
es
(bad)
loope
inc
mov
call
adc
loope
adc
cmp
sbb
and
jge
hlt
adc
jnp
call
mov
int3
jno
dec
mov
jge
cmc
in
ja
loopne
mov
push
or
in
fs
lock
adc
push
push
sbb
mov
rol
and
rol
pop
ret
add
jg
dec
jle
stc
cld
add
sub
out
rol
lock
adc
cmovae
iret
sbb
test
jo
ret
mov
loope
sti
sbb
and
call
es
mov
adc
lea
out
cwde
jo
xchg
repz
mov
rcr
xchg
loope
sbb
fistp
in
mov
ret
mov
cmp
scas
lds
and
out
inc
bound
sbb
mov
or
addr16
cmp
pop
or
mov
xor
jecxz
ja
shl
pushf
jb
sub
dec
cs
int3
pop
hlt
sbb
loop
push
test
sbb
je
loope
mov
test
sbb
cmp
pop
dec
ds
jnp
xchg
jle
jl
push
push
adc
and
mov
sbb
popa
loopne
add
xchg
jge
loop
stc
sbb
xor
(bad)
test
dec
push
mov
sbb
in
cmp
mov
gs
movs
mul
std
lea
inc
pushf
xchg
outs
jae
ins
xchg
fcom
xchg
pop
cmp
les
das
jle
lock
sub
daa
add
popa
xchg
xchg
das
shr
xchg
fwait
aaa
ror
(bad)
pop
cld
dec
adc
mov
jns
mov
xchg
jmp
outs
cli
push
xor
lea
movs
push
mov
jg
cmp
or
repz
jmp
loopne
inc
add
(bad)
outs
fistp
push
(bad)
cmp
cmc
pop
push
jb
adc
xchg
repz
mov
adc
jbe
xchg
cmp
or
mov
adc
inc
leave
push
sub
sbb
push
jae
shl
mov
movs
xor
js
div
mov
sub
iret
ficom
xor
jp
gs
mov
push
push
(bad)
repnz
pop
inc
xchg
mov
jmp
addr16
inc
movs
lods
ret
inc
loopne
cmp
mov
or
icebp
imul
jg
xor
sbb
std
mov
(bad)
mov
and
fist
jns
xchg
cmc
add
clc
jbe
sbb
(bad)
push
mov
dec
jg
dec
xchg
mov
popf
mov
mov
cmp
clc
aam
cld
sbb
and
pop
cmc
sbb
lds
imul
xchg
lahf
aam
push
add
xor
test
into
jne
jno
lods
retf
arpl
pop
mov
lds
sbb
lock
cmp
es
and
cmp
out
push
in
mov
mov
loopne
push
aaa
adc
fcom
ins
lock
(bad)
push
aad
es
or
adc
xchg
jb
xchg
push
jne
xchg
stc
cmc
stos
inc
into
mov
and
fcom
xchg
fsubp
loope
mov
lods
inc
pop
push
jne
pop
bnd
test
test
vcvtps2qq
lahf
inc
test
movs
loop
in
mov
ins
loopne
xor
cdq
out
add
mov
pop
test
push
pop
inc
neg
sbb
call
xchg
popa
mov
shl
adc
sahf
cli
das
in
add
and
mov
arpl
sbb
jno
daa
and
sar
xlat
xor
xchg
ss
stos
jnp
das
sub
cwde
in
mov
fnstenv
jp
fdiv
outs
xor
dec
xor
push
icebp
xor
rcl
mov
js
ja
xchg
pop
out
or
jmp
jecxz
leave
or
in
das
mov
lods
mov
cmp
add
pop
xlat
xchg
retf
push
mov
lods
test
and
xchg
mov
jne
and
sub
cwde
icebp
add
push
cmp
mov
sub
shl
pusha
sbb
xlat
adc
std
xlat
jmp
pop
inc
enter
dec
add
fcomp
push
call
dec
mov
adc
push
into
or
rol
adc
jae
jmp
mov
loopne
mov
or
jmp
dec
in
loopne
xlat
pop
pop
adc
xchg
and
mov
test
pop
and
xor
stos
push
pop
xor
call
sar
pop
sub
pop
mov
jmp
pushf
daa
in
pop
push
loope
sub
or
stos
jb
stos
mov
and
cmp
neg
jge
shl
cmps
pop
xchg
push
jle
fucomi
jmp
cmps
fdivp
out
ret
cs
std
inc
sub
mov
pop
dec
leave
or
pop
inc
retf
icebp
shl
mov
fld
jb
scas
sbb
in
fldl2e
in
cmp
sbb
test
xchg
sbb
fdivr
jne
sub
fcos
bound
add
cmp
adc
jae
sub
test
js
in
stos
std
and
inc
add
adc
xchg
push
mov
fwait
inc
xor
iret
jecxz
(bad)
push
(bad)
or
popf
xchg
adc
jge
les
mov
mov
fistp
lahf
jns
leave
scas
jmp
movs
rol
push
in
fmul
xor
sti
cmp
ja
mov
(bad)
mov
jns
sub
cmp
outs
scas
cmp
jl
adc
or
mov
xlat
xor
leave
mov
inc
jae
scas
in
repz
jecxz
retf
into
push
and
mov
jecxz
pop
bound
mov
mov
ret
popf
jno
int3
pop
dec
pop
jo
push
cmp
jp
cmp
call
xchg
cmp
pop
cmp
pop
push
icebp
retf
dec
sub
sbb
in
xchg
cmp
loopne
mov
aas
test
js
pushf
add
xor
lock
push
xlat
pop
call
jmp
sub
outs
adc
idiv
jb
in
adc
xchg
addr16
stc
mov
call
daa
push
cwde
jae
xchg
hlt
pop
fnsave
loope
jne
inc
sub
mov
pusha
push
sbb
pop
jg
test
xchg
sub
loopne
cmc
mov
fst
lahf
or
out
les
xchg
fs
jmp
and
idiv
jg
push
jbe
inc
cwde
das
push
sbb
ficomp
std
xor
imul
mov
dec
pop
push
clc
sbb
les
xchg
cmp
pop
daa
fs
daa
fs
xchg
loope
iret
sbb
test
lds
jne
xlat
or
jmp
(bad)
xchg
(bad)
mov
jl
mov
(bad)
push
adc
push
mov
xor
leave
mov
dec
in
(bad)
sahf
xchg
dec
retf
sbb
clc
test
jo
dec
pop
daa
loope
pusha
(bad)
pusha
movs
jmp
inc
jnp
dec
clc
fs
loope
daa
xchg
mov
dec
jo
adc
jl
jmp
push
xor
sub
mov
rcr
mov
in
imul
(bad)
test
nop
(bad)
push
push
sbb
movs
clc
js
mov
ror
jp
js
shl
and
cdq
mov
rol
jns
add
ds
(bad)
hlt
add
and
adc
jbe
les
cwde
cmp
adc
rcr
dec
pop
lods
xchg
inc
repz
sub
push
mov
loopne
cmp
xchg
cwde
mov
push
add
repz
enter
pusha
mov
pop
pop
aaa
dec
mov
jns
ja
ret
xchg
jg
mov
(bad)
jno
xchg
icebp
lahf
loopne
into
and
cmp
mov
scas
inc
pop
in
retf
in
fwait
cmp
movs
and
push
push
cld
xchg
test
inc
xchg
jnp
fistp
mov
mov
imul
mov
jb
push
lods
jmp
dec
dec
sbb
xchg
and
(bad)
cmc
pop
data16
imul
sbb
aaa
jae
pop
add
in
add
hlt
mov
adc
cdq
dec
call
mov
movs
sbb
add
mov
dec
inc
xchg
in
sbb
dec
inc
icebp
hlt
jl
inc
jne
sbb
sub
or
in
sub
jle
cdq
shl
ss
push
push
jns
push
push
addr16
xchg
xchg
xor
pop
jmp
xor
mov
jecxz
lds
dec
xchg
(bad)
fistp
xor
xchg
(bad)
fld
push
and
cmp
es
fs
retf
bound
mov
cmp
and
mov
jae
test
retf
xchg
outs
fmul
outs
mov
aad
lahf
or
xchg
dec
push
jbe
inc
test
mov
loope
into
sbb
xor
adc
adc
sbb
adc
data16
mov
(bad)
pop
repz
js
mov
(bad)
adc
xchg
or
pusha
sub
test
jge
push
lea
pop
lods
xchg
dec
int3
sub
add
sub
fistp
pop
and
adc
xor
dec
inc
ret
test
(bad)
shl
nop
sbb
das
cmc
xor
pop
test
mov
adc
adc
sub
xor
adc
ficom
xor
add
push
jo
les
bound
adc
into
stos
inc
mov
push
cmp
fs
adc
cmp
not
into
and
mov
push
push
addr16
mov
mov
mov
mov
and
test
sub
xor
popf
xor
dec
jl
jecxz
adc
ror
mov
mov
arpl
int3
(bad)
xchg
pop
adc
push
les
ins
pop
xor
inc
sub
add
sbb
dec
sbb
mov
pop
cmp
stc
push
frstor
cmp
mov
xchg
gs
jns
mov
mov
push
jb
stos
or
sbb
enter
loope
cmp
call
pop
xor
hlt
pop
pop
add
rol
mov
retf
adc
hlt
xchg
inc
call
in
push
pop
and
jp
lds
ror
jns
call
sti
jne
push
pop
sbb
mov
xchg
or
popa
jo
mov
add
les
jnp
cmc
test
xor
xchg
mov
outs
jmp
push
aam
xchg
aad
repz
leave
shl
bound
xor
fist
(bad)
in
sbb
jl
icebp
sti
iret
push
cmp
adc
addr16
pop
int
cli
sti
xor
out
adc
mov
cmps
pop
loope
adc
jmp
or
dec
fsubr
push
push
sub
ins
adc
loopne
jne
stos
inc
icebp
jp
lock
mov
mov
shl
jp
jno
jmp
sti
mov
test
mov
pop
addr16
mov
repz
int3
or
hlt
outs
in
cs
ds
dec
mov
and
retf
cmp
test
push
and
cli
push
shl
jno
mov
aas
pop
retf
fdiv
jmp
xchg
not
inc
sub
sbb
and
add
stos
int3
mov
lahf
mov
fisub
retf
stc
das
inc
lds
and
in
xchg
push
pushf
jne
jge
inc
sub
loopne
jo
rcr
adc
xchg
push
cmc
outs
outs
lock
xchg
out
push
fistp
mov
daa
mov
xchg
mov
rol
mov
cmps
push
loope
je
int3
inc
cmc
cmp
jnp
push
shl
in
inc
push
push
mov
nop
popa
cdq
sbb
mov
imul
test
mov
jge
repnz
jp
test
mov
sub
mov
xlat
jae
xchg
or
cmp
jle
sbb
(bad)
ins
(bad)
pop
pop
or
inc
rcl
xchg
xlat
cmps
ss
je
in
ror
movs
inc
lods
retf
mov
mov
sub
pop
adc
jae
jmp
retf
add
xchg
push
or
jb
movs
sub
repnz
jae
and
push
jne
xchg
idiv
push
pop
ror
mov
ror
stc
inc
daa
sbb
test
gs
popa
jecxz
cli
mov
cld
jmp
jmp
inc
loopne
adc
mov
pusha
jns
pop
mov
cld
ins
xchg
fdivr
in
dec
lods
aam
icebp
or
jns
xchg
cmp
xchg
pop
add
cli
icebp
xor
jg
stos
mov
dec
aam
fistp
bound
or
scas
leave
jnp
sbb
out
les
jecxz
xor
xchg
pushf
test
sahf
iret
pop
jle
ror
jb
push
jne
xchg
ret
loopne
aas
cmp
cli
jmp
pop
je
retf
mov
cmc
sahf
fnstsw
(bad)
mov
push
xchg
fld
xchg
retf
xchg
cmp
add
shl
pop
push
sbb
jle
rol
ds
mov
cli
pop
sahf
test
fistp
mov
lds
daa
es
pop
mov
mov
mov
cld
push
cli
les
sub
push
je
(bad)
fpatan
or
test
sbb
or
jp
xchg
imul
dec
(bad)
add
stc
inc
fnstenv
dec
test
dec
outs
add
ficom
dec
jae
mov
fnstcw
mov
dec
pop
sub
jb
sub
xchg
push
adc
xlat
es
pop
inc
mov
xchg
pop
mov
dec
and
inc
xchg
stos
cs
lea
jb
shl
mov
xor
xchg
fcomp
jp
push
xor
jg
push
xor
sub
pusha
sub
shl
xchg
bound
inc
and
es
test
mov
jne
cwde
cld
adc
(bad)
movs
cmp
in
dec
jae
mov
push
jp
mov
cmps
(bad)
out
cmp
outs
dec
(bad)
mov
pop
push
mov
loopne
rcl
dec
scas
ja
xchg
cmp
movs
sbb
in
xchg
jge
mov
cmp
nop
jg
adc
stos
test
push
movs
fcomp
or
and
sahf
daa
cmp
dec
xor
jl
movs
dec
not
test
movs
inc
out
fwait
sbb
pop
push
jae
pop
mov
mov
adc
sbb
pop
adc
mov
sbb
jp
ja
push
xchg
shl
or
pop
sub
cs
js
sbb
imul
mov
cmp
sub
mov
jo
shl
into
(bad)
ficom
jne
jmp
ret
inc
jb
pop
adc
mov
jne
pop
cmp
ds
mov
icebp
(bad)
iret
sbb
sub
xchg
add
dec
outs
ficom
fsubr
sbb
and
fild
sbb
mov
pop
pop
xchg
cmp
xchg
adc
mov
lds
xchg
repz
movs
jle
push
into
cmp
adc
jae
pop
adc
fisubr
shl
and
cmp
cmps
and
xchg
shr
les
cmp
add
outs
jno
xchg
loop
mov
lahf
add
push
and
mov
sub
in
imul
or
push
sub
and
fs
aaa
push
test
pop
pusha
mov
mov
es
cmp
ror
cs
std
shr
sub
pop
push
shl
dec
mov
pop
lea
hlt
gs
sub
cld
jnp
mov
mov
hlt
and
mov
sbb
es
sub
and
enter
repz
pop
hlt
cmps
push
mov
xchg
add
xor
and
stos
shr
push
cmps
adc
jne
scas
mov
cmc
clc
dec
adc
call
in
iret
nop
in
imul
sahf
mov
and
cld
mov
hlt
xor
push
imul
add
push
jnp
push
clc
fwait
es
cmc
retf
jne
ficom
mov
xor
push
pop
(bad)
lea
pushf
jl
adc
sub
xchg
data16
cmp
jle
sub
xchg
dec
ds
test
in
adc
lods
leave
aaa
mov
daa
rcl
rcl
pop
enter
pop
dec
fisttp
adc
jmp
cmp
loope
inc
push
dec
dec
add
mov
je
es
mov
loopne
stos
adc
push
in
mov
mov
js
xor
pop
in
add
aad
lds
in
xchg
jge
sub
add
into
mov
pop
fbld
push
lock
leave
mov
mov
xchg
pop
add
mov
push
dec
cmp
not
xchg
ror
and
pop
inc
in
jg
push
and
fld
mov
ja
mov
mov
into
or
mov
cmp
xor
lock
xor
test
cwde
push
sub
jne
sub
xchg
mov
pop
data16
in
pushf
cdq
jmp
xor
pop
push
jne
push
sbb
sbb
dec
cmp
out
iret
add
cmp
pop
sub
rcl
sub
add
gs
mov
mov
(bad)
and
fisubr
cmps
jb
lods
jmp
and
in
add
or
jo
jno
movs
fpatan
aaa
aad
sub
ficom
cmp
sbb
mov
jne
mov
sbb
mov
mov
mov
shr
pop
jae
xchg
fidivr
icebp
inc
shl
jns
mov
sub
lahf
add
mov
in
inc
mov
imul
mov
fisub
xor
or
aaa
repz
and
jg
cmp
mov
sbb
hlt
repnz
pop
jmp
adc
dec
add
xchg
mov
(bad)
sbb
push
pop
xchg
data16
iret
pop
cmp
sbb
add
div
(bad)
xchg
(bad)
xor
jb
shl
sub
js
mov
cmp
xchg
or
sub
je
mov
fs
add
xchg
pop
adc
mov
mov
jl
xor
push
push
js
jns
sar
in
int
lods
jo
jmp
xchg
sbb
and
data16
cmp
adc
into
and
jbe
inc
or
push
sub
les
mov
cmps
adc
loopne
mov
xor
mov
mov
loop
and
int
mov
sbb
xor
dec
push
inc
ins
mov
adc
js
mov
lods
push
pop
mov
inc
test
(bad)
mov
mov
jmp
push
add
(bad)
icebp
(bad)
cli
jge
ins
out
or
addr16
bound
out
ficom
jmp
push
icebp
in
loope
pop
ins
mov
jne
xchg
fadd
test
xor
adc
arpl
lods
mov
movs
sub
lods
add
js
in
call
mov
jp
inc
cmp
in
xchg
popa
or
jge
sbb
jae
push
into
push
lock
xchg
sub
jmp
and
hlt
xor
outs
sti
or
jb
shr
jge
push
cmp
sub
push
loopne
xor
inc
mov
ins
mov
mov
ficomp
adc
jmp
dec
xor
sub
frstor
pop
mov
dec
or
jmp
xor
push
cld
daa
lods
mov
int3
mov
jp
or
mov
fs
sub
test
jb
inc
mov
dec
stos
mov
and
push
(bad)
cmp
mov
mov
push
cmp
push
push
or
and
sub
vmread
cmp
or
cmc
out
push
add
push
sub
(bad)
dec
ins
pop
inc
sbb
(bad)
js
sbb
cmp
in
mov
cmp
es
ret
shl
mov
dec
adc
pop
sub
std
inc
or
jno
in
mov
cmp
and
call
test
dec
sub
mov
loope
dec
(bad)
cld
(bad)
pop
(bad)
out
and
mov
lahf
(bad)
push
mov
jg
int3
pop
push
xchg
(bad)
sbb
fild
mov
out
loope
in
cmp
pop
xchg
loop
mov
cli
ret
cmp
pop
and
shl
jecxz
adc
adc
xchg
dec
or
push
aas
push
shr
div
stos
sub
shr
jo
je
sub
imul
popf
ror
loope
jp
xchg
ret
cmp
inc
sub
push
(bad)
cmps
test
push
sub
cmp
push
imul
sub
inc
les
aad
sahf
ds
jne
mov
out
sbb
movs
xlat
outs
pop
mov
test
xchg
sbb
add
mov
es
out
ds
mov
cmp
xor
cmp
cmp
fwait
test
pop
push
inc
sbb
xor
dec
nop
and
pushf
cmp
add
mov
add
xchg
sahf
sahf
ins
xlat
cmps
(bad)
cmp
jns
mov
out
inc
pop
jmp
(bad)
les
xchg
retf
cld
sub
inc
jecxz
xchg
jns
out
sub
out
cmps
jg
gs
jp
call
sbb
(bad)
ins
push
xor
adc
push
test
xchg
and
mov
push
adc
in
les
stos
inc
dec
sub
outs
outs
push
adc
repnz
fidiv
sub
dec
sub
sub
jne
test
sbb
fnstsw
test
push
js
fcom
ja
cld
mov
sar
jb
cmp
pop
mov
movs
iret
pop
push
mov
les
push
cmp
push
dec
je
sahf
mov
out
cmp
push
daa
jge
pcmpgtb
xchg
cdq
ja
jbe
xchg
sbb
sub
push
test
popa
clc
jle
cmp
adc
mov
stos
mov
mov
sbb
inc
je
cmp
inc
push
bnd
sbb
fs
jmp
cmp
jo
xchg
pandn
sub
(bad)
pop
sbb
xchg
xchg
das
jmp
stc
ja
repnz
fimul
add
sub
dec
stos
inc
xchg
push
sub
xor
aad
(bad)
fimul
inc
hlt
je
pop
jmp
pop
outs
mov
sub
fidiv
push
cmc
mov
inc
dec
ffree
sub
dec
and
push
je
mov
rcl
fcomp
repnz
or
jns
repnz
in
fldenv
je
int3
mov
xor
jo
mov
sbb
jo
call
push
push
push
jno
test
jmp
clc
jns
push
bound
shr
xchg
cwde
mov
out
pop
jae
popf
fisubr
movs
leave
nop
sbb
ins
jo
out
mov
mov
push
xchg
sub
imul
mov
pop
cld
inc
jmp
mov
xor
aas
dec
js
mov
iret
sub
push
mov
xor
(bad)
push
mov
iret
pop
out
idiv
shl
stos
xor
(bad)
xlat
daa
retf
mov
xor
mov
cmps
rcr
lahf
dec
mov
pop
dec
shr
add
imul
cmp
std
movs
iret
popf
dec
xor
fwait
fwait
push
movs
pop
inc
iret
mov
in
ror
adc
bound
sub
jnp
and
and
test
xchg
dec
div
popf
stc
repz
int
out
inc
adc
aaa
fist
xchg
inc
jb
and
mov
loope
ss
jb
cmps
xchg
fs
xchg
xchg
cdq
outs
push
mov
cld
sbb
add
js
outs
xchg
or
lock
pop
sub
out
xor
push
push
sub
push
cmps
das
xchg
fcomp
sub
cmps
jl
int
pop
ret
cmp
jmp
out
data16
sbb
(bad)
cs
jmp
adc
fdiv
(bad)
ret
cmp
or
pop
adc
cmp
(bad)
mov
add
imul
pop
jecxz
push
or
cdq
push
pop
mov
es
push
out
(bad)
and
push
push
pop
mov
jno
or
ja
mov
lea
mov
inc
push
not
add
imul
push
jge
mov
or
cwde
mov
inc
loope
sahf
cmp
arpl
(bad)
in
dec
and
in
rcr
sub
popf
inc
xchg
push
popa
ret
xor
push
(bad)
and
aas
dec
sub
vmaxss
lahf
pop
xchg
in
sbb
retf
cli
sub
xor
fistp
or
pop
imul
inc
gs
daa
pop
xor
fst
cmp
fidiv
push
pop
sub
in
and
push
push
pop
mov
add
popf
dec
sbb
inc
(bad)
(bad)
ins
(bad)
retf
push
push
loop
lea
dec
rcl
(bad)
dec
cli
dec
jns
imul
cmp
pop
jnp
(bad)
jae
pusha
je
lock
out
jno
int
dec
pushf
pop
push
rcr
pop
ins
rcl
inc
loopne
and
adc
jns
shr
in
dec
jl
(bad)
out
mov
ret
repnz
gs
mov
sbb
jb
jo
cmc
push
mov
ja
call
shl
daa
fsubr
into
xchg
mov
dec
push
push
pop
sub
push
push
pusha
fisttp
retf
fisttp
test
push
sbb
hlt
xor
std
pop
cld
daa
mov
in
aam
std
adc
fidiv
pop
dec
dec
add
loopne
pop
cld
jecxz
aam
push
data16
loope
add
repz
add
ss
je
xor
imul
cld
movs
adc
pop
or
sbb
rol
mov
int3
xchg
pop
pushf
test
cmp
outs
clc
sub
xchg
loopne
je
pop
xor
pop
mov
and
ror
pop
lods
leavew
ficomp
jmp
fwait
jns
mov
and
mov
sub
out
dec
mov
test
clc
ss
push
mov
pop
inc
les
std
leave
xchg
push
xchg
dec
push
pop
jae
xchg
xchg
push
xlat
jne
retf
mov
fsubr
pusha
xor
jg
test
mov
(bad)
pop
mov
rcr
xchg
mov
into
push
jmp
mov
jb
jns
mov
jg
in
xor
adc
fidiv
or
daa
mov
jl
mov
mov
jno
mov
add
and
(bad)
int3
loopne
push
repz
jp
jecxz
jmp
and
xchg
dec
dec
shl
or
test
push
(bad)
test
ja
or
sar
mov
xchg
and
mov
push
inc
add
and
push
push
(bad)
nop
jne
xor
cmp
ffree
addr16
(bad)
xchg
mov
scas
mov
jge
lods
xchg
(bad)
xchg
outs
sub
sub
and
mov
jae
cmp
push
pop
and
loope
push
ins
out
imul
leave
out
in
jecxz
xchg
cwde
js
popa
ror
gs
pop
add
leave
(bad)
(bad)
xor
pop
cmp
xchg
adc
aaa
dec
(bad)
int
xor
xor
arpl
add
mov
cmc
adc
retf
cmp
lods
clc
ss
retf
inc
inc
xchg
pop
std
dec
xchg
jp
dec
sbb
inc
aam
fs
pusha
mov
xchg
sbb
pcmpeqw
cs
jae
cld
in
jg
int3
and
es
int
pop
cli
inc
fistp
inc
cmps
jns
call
retf
pop
pop
xor
xor
mov
push
or
cli
xor
jns
mov
fst
or
mov
xor
in
adc
adc
cmp
in
test
push
lahf
sbb
sub
jbe
mov
cmc
test
pop
xor
inc
adc
ins
mov
or
xchg
xor
lods
nop
sub
loopne
mov
or
dec
bound
cs
out
mov
fsub
adc
jmp
or
xor
out
xchg
ins
sub
xchg
adc
js
hlt
mov
mov
jle
push
jae
in
cmps
int3
aas
loop
jae
pop
int3
cmp
jae
out
pop
sub
(bad)
leave
ss
xchg
and
add
retf
(bad)
hlt
push
fadd
mov
adc
les
sahf
(bad)
mov
iret
add
mov
inc
je
push
ret
ins
pop
mov
jmp
fs
std
sahf
enter
(bad)
jmp
nop
fimul
push
hlt
mov
test
inc
pop
and
inc
or
pusha
popa
popf
repz
push
or
cld
aam
jae
xchg
cmps
jbe
pop
pop
jae
xchg
cmp
fist
shl
cs
dec
push
jbe
mov
nop
ror
mov
push
in
and
jae
jns
sbb
pop
or
pop
xchg
(bad)
push
mov
loopne
sbb
jb
mov
mov
(bad)
cmp
pop
(bad)
jbe
cmps
outs
cmp
pop
add
jmp
ss
cli
repnz
fisttp
xchg
sbb
test
call
sbb
mov
int3
sub
(bad)
mov
sti
jp
lods
js
jae
retf
inc
into
xchg
movs
lock
call
lods
xor
jge
adc
adc
xlat
aas
sub
cmp
not
or
pushf
bnd
mov
jne
lea
xchg
pushf
inc
data16
fbld
dec
cmc
addr16
fidivr
sar
mov
or
lock
xor
jbe
push
gs
and
sbb
lods
push
nop
data16
adc
nop
je
xlat
xor
call
push
mov
mov
xor
push
lahf
jecxz
enter
int3
xchg
push
jnp
jp
or
loopne
push
or
not
inc
es
cmp
fcom
or
and
jns
in
leave
mov
sub
xchg
add
inc
jg
inc
sub
pusha
adc
mov
or
lahf
ins
leave
inc
cmp
mov
std
ret
cmp
cmps
push
jno
sub
sar
imul
pushf
jmp
xor
jecxz
dec
call
sbb
loop
or
pop
push
sbb
int3
push
mov
jae
dec
mov
xor
imul
repz
and
add
mov
popf
xchg
int
mov
sbb
sbb
xchg
stos
out
std
movs
inc
adc
pop
aas
scas
mov
mov
xchg
stc
push
cmp
repnz
sar
or
jge
jae
repz
outs
mov
test
ja
push
push
int
or
stc
scas
add
push
shl
stc
dec
or
pushf
and
sub
test
stc
xor
mov
xchg
out
jb
jecxz
mov
fcom
cmc
scas
adc
jge
(bad)
inc
std
mov
jmp
inc
mov
cmp
loopne
arpl
sub
daa
hlt
xor
mov
sbb
fnstsw
retf
je
xor
nop
cmc
pop
jmp
xchg
push
push
cli
jle
mov
mov
out
or
xor
sbb
les
in
xchg
psubusw
stc
jbe
cld
imul
push
xchg
push
mov
clc
repz
sub
mov
test
push
sub
aam
cld
xor
push
(bad)
ror
sbb
gs
dec
test
repnz
test
jp
repz
test
xchg
call
call
das
fadd
leave
(bad)
mov
jp
mov
call
mov
and
push
cli
movs
sbb
push
push
sbb
and
mov
jle
fs
and
sub
jp
add
dec
xor
and
mov
loopne
nop
xor
jae
int
sub
or
push
and
repnz
add
xlat
aad
in
xchg
push
and
jne
xchg
cmp
scas
cmp
aam
stos
sti
jmp
xor
fdivr
xchg
lods
jge
repz
mov
lds
cmp
cli
cmp
vpshuflw
repnz
shl
jnp
or
rcr
stos
add
push
dec
ins
(bad)
fstp
(bad)
fxch
lods
mov
loopne
outs
in
xchg
mov
test
and
ret
add
loopne
(bad)
jne
fsub
out
jp
xchg
xchg
js
mov
out
fild
out
ror
shl
push
dec
xchg
cmp
data16
xor
loope
dec
outs
nop
aam
push
pop
sub
jne
jecxz
xchg
imul
xor
hlt
adc
sbb
pop
repnz
loopne
sbb
std
daa
jnp
sub
xchg
inc
dec
adc
xchg
sbb
jo
jmp
jbe
call
xchg
loop
sub
mov
sbb
mov
fcomp
xor
push
test
enter
push
jae
arpl
jo
cmc
add
inc
jns
dec
pushf
cmp
popf
pop
inc
inc
or
enter
dec
jbe
and
mov
int
jo
clc
leave
jbe
adc
push
dec
xchg
push
adc
jg
cld
mov
cmp
out
in
ret
cmp
icebp
out
(bad)
fbld
cli
loopne
push
add
jne
icebp
or
inc
test
fs
nop
or
jbe
fcom
cmp
dec
ror
add
stos
test
mov
inc
movs
push
cmps
in
pop
cmps
fbstp
mov
cmp
add
je
sar
not
ret
push
in
mov
mov
mov
inc
cmps
ss
inc
icebp
cli
sahf
sbb
jmp
(bad)
retf
adc
inc
mov
push
into
dec
dec
repz
ret
pop
mov
dec
(bad)
jne
pop
cmp
iret
pop
push
(bad)
js
sub
cwde
and
data16
add
loope
sahf
sbb
jo
mov
pop
pop
jge
(bad)
sar
xchg
dec
aam
push
ret
cwd
in
pop
jae
mov
mov
adc
cmp
mov
in
push
push
cmp
adc
xchg
jbe
loope
sbb
lods
aad
sbb
xchg
inc
jmp
inc
out
cmp
leave
sbb
mov
clc
imul
js
mov
dec
loop
nop
popf
dec
outs
xchg
shl
adc
inc
shl
into
and
cmp
stos
fimul
cmp
xor
xchg
mov
test
aad
jb
inc
xchg
jo
(bad)
dec
inc
dec
push
leave
hlt
jp
sbb
or
(bad)
ss
js
fs
cwde
jnp
fcmovnbe
aad
and
shl
sub
push
mov
retf
or
icebp
lds
xchg
cld
mov
pop
push
ret
fidivr
add
jp
adc
push
push
test
sub
sub
xchg
ret
xchg
cmp
jp
mov
rcr
mov
gs
jo
mov
repz
inc
loop
jmp
mov
push
and
arpl
inc
push
es
repz
scas
mov
lea
add
xor
cld
loopne
jnp
sbb
dec
sbb
sub
cmp
pushf
pop
test
jl
repz
sar
jl
loopne
dec
dec
imul
je
cwde
pushf
and
cs
mov
fs
(bad)
cmp
or
test
mov
daa
mov
and
cmp
retf
fs
inc
or
call
mov
cmp
dec
iret
es
cmp
xchg
pop
lahf
in
cmp
dec
xlat
push
bound
xor
fdiv
and
sub
sti
fistp
jb
push
je
jns
hlt
sbb
push
fidivr
test
xchg
jns
ret
mov
jb
mov
leave
xchg
sbb
xchg
daa
adc
or
bnd
sbb
leave
cmps
mov
xor
test
sbb
inc
push
in
push
nop
jbe
xchg
xor
test
iret
hlt
and
int3
(bad)
pop
cmc
push
pop
jns
and
cld
sbb
mov
xor
dec
(bad)
jb
cmp
jns
ror
mov
leave
mov
pop
xchg
pop
je
sbb
dec
adc
push
(bad)
sbb
lods
push
cmp
push
mov
loope
repnz
xchg
pop
jmp
xchg
sbb
lea
xor
xor
stos
jl
outs
fistp
jp
lahf
ficom
mov
mov
div
mov
inc
add
sub
xchg
ror
inc
jae
popa
leave
test
mov
mov
aam
xchg
(bad)
jecxz
sti
xchg
(bad)
rol
push
sbb
and
mov
div
test
out
mov
loopne
mov
jmp
in
push
nop
mov
push
xor
icebp
xlat
scas
fisttp
js
lock
je
jle
ins
icebp
cdq
push
sbb
jg
and
imul
dec
sahf
adc
push
lahf
jne
stos
inc
(bad)
dec
sub
fcmovbe
cs
and
push
(bad)
jns
cli
cmp
xor
sbb
mov
cmp
mov
repnz
aad
mov
add
mov
cmp
(bad)
shl
sbb
cli
xchg
push
mov
test
cs
test
jp
fsubp
in
sub
mov
aaa
mov
xchg
mov
jne
movs
inc
xchg
inc
dec
mov
lock
fild
sbb
jmp
adc
data16
ror
loopne
rcr
xchg
outs
sub
js
push
sub
outs
js
mov
jbe
adc
loope
mov
test
js
nop
cli
mov
ret
or
hlt
(bad)
cli
int
loope
fisubr
call
mov
xchg
dec
push
test
and
jo
adc
inc
pop
inc
ret
shr
dec
push
dec
xor
cmp
js
xchg
or
xchg
lods
sar
add
ficomp
sub
or
test
cmps
dec
jnp
xchg
fidiv
pop
pusha
cld
jmp
repz
cmp
sahf
push
(bad)
cli
ficomp
and
cld
outs
outs
mov
je
jo
pop
fld
jne
test
dec
lahf
mov
outs
xlat
je
ror
cmc
sbb
stos
test
push
pop
jo
pop
adc
paddusw
daa
loop
sub
dec
js
scas
cli
pop
pop
mov
cs
sbb
js
push
sbb
aas
add
pop
dec
out
ja
add
add
outs
fst
fbld
cwde
push
int3
sub
mov
lds
test
(bad)
enter
xor
push
cmp
xchg
test
push
xor
jne
in
pop
fistp
(bad)
fisttp
xchg
pop
aaa
jmp
pop
adc
mov
push
push
jae
or
mov
jg
gs
mov
pop
sub
dec
ret
sub
je
xor
popa
mov
loope
sub
test
xchg
(bad)
push
cmc
call
lock
xlat
lods
rcr
ja
xor
push
xor
loopne
mov
cs
mov
xor
adc
push
dec
push
fcom
scas
arpl
mov
push
cmc
ins
cmp
adc
rcr
nop
sbb
mov
add
cs
not
dec
push
add
enter
je
push
outs
push
stos
std
xchg
sub
and
mov
pop
or
or
push
mov
stos
add
int3
mov
pop
pop
test
clc
sti
jp
xchg
mov
xor
and
repz
repnz
imul
jns
sbb
(bad)
mov
scas
bound
dec
jbe
and
clc
cmc
xlat
xor
mov
xchg
test
popf
(bad)
mov
js
iret
ja
fstp
enter
xchg
cli
add
jb
or
cmc
jbe
out
fld
push
cmc
push
jecxz
mov
sbb
fstp
add
pop
(bad)
jo
sbb
pop
and
leave
mov
rcl
mov
shl
fidiv
daa
fs
loop
push
hlt
sub
popf
aas
(bad)
and
test
div
jmp
push
fistp
mov
scas
data16
mov
sbb
stc
test
inc
shr
inc
js
mul
add
add
das
xchg
les
arpl
pop
daa
push
cmc
xor
pop
lahf
(bad)
cwde
sbb
cmp
xchg
push
leave
adc
jae
xor
test
jns
pop
mov
cmp
xchg
push
call
pop
dec
lds
jns
or
inc
add
jmp
adc
xor
push
mov
xor
jns
and
add
cmp
mov
sbb
out
inc
and
xchg
aam
jno
push
dec
dec
test
ja
mov
push
(bad)
xchg
ja
(bad)
imul
cli
dec
ds
cmp
daa
xchg
dec
mov
jmp
jae
cs
movntq
icebp
aam
ficomp
movs
lahf
xchg
rol
or
dec
mov
mov
repnz
sub
mov
or
jmp
mov
neg
push
fcom
push
dec
sub
scas
xchg
in
cmps
push
repnz
aaa
mov
jp
movs
ret
ss
stc
inc
arpl
mov
jns
call
adc
xlat
push
jecxz
inc
fisub
jo
iret
aaa
cmp
je
dec
ficom
push
clc
mov
retf
inc
sub
cmovns
lds
fldcw
lds
enter
int
or
sbb
add
pusha
mov
push
jo
push
sbb
mov
mov
data16
or
xchg
arpl
loope
cs
mov
mov
rcr
dec
xchg
addr16
mov
push
and
mov
sbb
sbb
or
sbb
lds
dec
sub
push
pop
loop
or
call
mov
lds
std
dec
imul
(bad)
mov
mov
fidiv
mov
in
je
icebp
(bad)
cld
or
(bad)
add
dec
mov
jnp
sbb
xor
imul
test
test
xor
mov
push
mov
pop
fs
and
mov
in
inc
sar
stos
xor
jl
cs
ds
or
call
cwde
push
adc
sar
and
call
jp
inc
ja
(bad)
int3
mov
lods
mov
ss
add
das
cmc
push
movs
or
cmps
xchg
jo
xor
jge
jmp
fistp
jb
lahf
call
xchg
add
jbe
das
clc
sub
mov
sub
mov
adc
stos
push
ret
jge
adc
dec
mov
dec
cmc
jae
inc
sar
push
inc
pop
lods
mov
inc
fimul
push
aad
push
rcl
shrd
lods
xor
mul
in
mov
adc
cmp
add
enter
fmul
int3
lea
call
mov
push
ror
and
icebp
cmp
xor
sub
dec
cmp
xchg
popa
aam
push
jne
repz
xor
xchg
ror
int3
jle
mov
sti
jle
xor
out
xchg
icebp
into
ret
cwde
mov
addr16
rol
mov
cmovl
mov
sub
pop
test
adc
movs
and
jns
or
pop
call
pop
imul
mov
push
adc
std
xlat
jge
into
push
pop
mov
je
xchg
mov
push
and
inc
hlt
adc
mov
retf
sbb
out
mov
push
and
std
dec
jae
ret
movs
js
xchg
iret
push
jl
adc
fiadd
stc
mov
stos
push
das
mov
jae
dec
fld
and
dec
lock
mov
sbb
pop
mov
(bad)
xchg
sbb
enter
repz
sbb
xchg
pop
cdq
and
cmc
jmp
lahf
das
jg
cmp
and
mov
ja
out
rcr
xlat
mov
push
or
sar
xchg
dec
outs
stc
mov
(bad)
cdq
rcr
in
iret
cmc
movs
cmps
xor
mov
xor
adc
dec
out
mov
in
fldcw
in
push
mov
jecxz
(bad)
cmp
test
fwait
jo
mov
pop
sbb
(bad)
ins
mov
and
pushf
xchg
cld
sub
addr16
mov
aaa
out
sbb
xor
in
jl
inc
push
mov
adc
mov
fsubr
(bad)
ror
div
fst
or
push
fstp
out
dec
mov
fninit
xchg
push
iret
and
cli
fs
pusha
call
xchg
dec
cmc
adc
cmps
fisub
add
push
xlat
imul
and
adc
int3
das
fidivr
jmp
loop
add
add
xchg
or
adc
(bad)
cli
inc
jno
xor
mov
das
loopne
leave
xchg
scas
sub
cmc
mov
js
jp
mul
in
hlt
add
jecxz
mov
xlat
aas
sub
(bad)
arpl
aam
int
test
xor
js
sbb
and
mov
push
test
pop
jg
cli
pop
mov
xchg
shl
xlat
mov
imul
shr
xchg
xchg
aad
sub
data16
add
inc
fist
loopne
cmps
les
dec
pusha
pop
add
pop
xchg
xor
push
shr
jg
mov
pop
gs
cdq
jmp
push
xor
out
pop
push
pop
xor
out
sar
mov
pop
jo
push
call
cmp
mov
(bad)
cmc
inc
push
jb
jne
daa
xchg
pop
ins
sub
mov
stc
enter
vmread
(bad)
repnz
add
pop
and
or
adc
pusha
retf
push
push
jne
ins
mov
push
xor
sar
pop
jo
cdq
mov
add
sub
arpl
xor
mov
jo
pop
jmp
add
jg
push
push
call
push
fiadd
mov
push
mov
sub
leave
cdq
lds
mov
out
sub
lods
stc
clc
loopne
xchg
xchg
outs
xchg
xchg
lds
xchg
xchg
xchg
scas
fcmovbe
es
xor
push
xchg
dec
pop
add
mov
movs
aas
jne
outs
out
lahf
outs
mov
loopne
push
mov
imul
mov
and
and
jmp
std
jnp
mov
and
daa
and
loop
xchg
imul
cli
jne
repz
sub
adc
in
xchg
mov
ins
outs
repz
fild
aad
dec
add
hlt
xchg
inc
jmp
aam
cmp
pop
jmp
sub
add
xor
jne
ins
sub
rcr
mov
std
sub
and
dec
and
cmp
cli
clc
ja
adc
cmc
addr16
loop
adc
aas
clc
xor
mov
jp
xchg
mov
inc
sub
enter
outs
fidivr
and
outs
mov
and
pop
add
movntps
in
and
sub
jge
mov
pushw
add
scas
and
and
mov
sahf
inc
in
movs
sbb
out
add
push
ja
cmps
pop
inc
rcr
mov
cmp
mov
daa
or
mov
js
out
jb
aad
jmp
jns
fld
js
ret
xchg
pusha
jae
push
jne
cmp
stos
push
leave
pop
jmp
repnz
in
or
jne
dec
dec
pop
jne
or
adc
pop
xchg
cmp
cmp
outs
call
push
dec
push
jno
sub
cmps
mov
test
add
mov
sbb
clc
test
movs
push
(bad)
jo
shr
aam
cmc
sbb
mov
push
(bad)
jecxz
or
pusha
pop
ds
push
sub
loop
cli
mov
jno
ret
std
outs
jge
loopne
push
das
jne
pop
pop
jge
out
ret
std
adc
scas
popf
in
cmc
xchg
(bad)
mov
xchg
test
and
inc
push
and
jmp
in
cmp
repnz
push
mov
push
test
sbb
mov
dec
push
xor
pop
mov
pusha
inc
mov
push
mov
pop
movs
hlt
dec
pop
arpl
add
sub
adc
jns
or
shr
aaa
aam
clc
ja
rcr
sub
in
push
arpl
push
add
jbe
jmp
dec
call
xor
loope
fadd
cmovp
lds
jne
fwait
adc
dec
dec
push
xor
imul
sub
cmps
repz
scas
pop
cmc
xchg
sub
cmp
jbe
scas
stos
jne
jmp
jbe
mul
dec
mov
and
jp
mov
jbe
add
sti
cdq
jle
adc
sbb
jmp
adc
out
cmp
mov
sub
aas
xchg
cld
push
in
imul
je
in
push
lock
sub
not
outs
cmc
pop
and
sub
mov
sar
sar
repz
jp
rcl
lds
stc
jmp
sub
popa
dec
sub
dec
cmc
mov
inc
dec
aas
jne
dec
fcomp
enter
mov
add
mov
pop
stos
fs
cmp
out
in
pop
movs
inc
fsub
sub
or
adc
and
in
cmc
jno
or
in
xor
jns
stos
pop
stos
(bad)
std
sub
sbb
sar
mov
fcom
inc
sub
out
(bad)
cmp
jbe
jg
mov
sub
inc
pop
inc
ins
pusha
scas
jnp
cmp
out
addr16
mov
(bad)
and
jge
adc
mov
mov
in
xchg
jle
cmovs
xchg
cwde
jae
jo
inc
jle
lea
ret
pop
xchg
add
dec
dec
mov
in
ins
and
mov
sbb
fisub
sub
xor
pop
pop
sub
cli
scas
push
pop
ret
movs
adc
sbb
xchg
push
mov
les
idiv
iret
in
ret
js
sub
and
add
shr
sbb
sub
and
jl
jo
or
jne
xchg
(bad)
fadd
dec
cli
jns
sti
cmp
repz
ins
xchg
ret
arpl
push
(bad)
rcl
sub
(bad)
add
mov
pop
dec
xchg
dec
push
xchg
fdiv
mov
xchg
daa
adc
repz
cmc
movs
xchg
scas
add
mov
mov
and
sub
mov
dec
sbb
cmp
adc
dec
push
fisubr
pop
push
sub
cmc
ret
sahf
rcr
fbld
xor
mov
rcl
retf
ja
call
cmp
into
xchg
in
mov
cmc
lds
sub
shl
je
jnp
repnz
sub
mov
xchg
dec
test
mov
inc
mov
or
jge
test
adc
cmp
add
sub
mov
imul
out
stos
jle
scas
dec
sub
adc
and
push
adc
mov
jmp
adc
pop
ret
add
popf
jge
ins
shl
aas
loope
fisubr
fild
mov
sbb
repnz
jmp
dec
pop
or
int3
mov
pop
adc
jne
mul
je
aas
ins
dec
pop
jo
dec
jl
cs
pop
lock
pop
sub
ins
popf
sahf
pop
jl
out
clc
jmp
sar
mov
js
xchg
cmp
aam
sub
add
movs
in
or
cld
xor
cmps
aaa
inc
retfw
sar
repz
ins
push
fisttp
ror
and
or
jg
cmps
pushf
push
repnz
hlt
mov
push
inc
sbb
sbb
jge
fdiv
sub
pop
sub
fwait
sub
push
mov
add
ja
jle
fcomp
icebp
mov
mov
jo
mov
jne
xchg
repnz
or
push
jno
sub
test
lods
test
mov
push
int3
mov
push
xchg
xchg
sub
adc
jmp
or
sbb
jne
sub
and
lahf
and
not
push
jp
lahf
in
xchg
loopne
aad
jnp
je
div
fisttp
scas
jne
loopne
sub
fisubr
push
out
jl
lods
je
push
xchg
mov
leave
cld
stos
adc
mov
loope
jne
je
dec
jo
cli
daa
sbb
push
stos
push
jae
stc
pop
(bad)
and
pop
dec
push
sbb
jae
add
adc
es
jle
in
or
sub
mov
sbb
(bad)
(bad)
out
mov
mov
xchg
push
outs
add
pusha
out
cmp
fstp
je
data16
data16
in
jb
push
ror
push
and
test
xor
xchg
jo
call
loopne
mov
push
ret
test
pop
shl
jae
adc
stc
loop
add
cmp
jae
or
ficomp
cmp
push
mov
das
mov
movs
std
repz
fiadd
cmp
test
push
push
std
or
jb
dec
movs
xlat
(bad)
retf
mov
iret
std
fucomip
pop
inc
dec
dec
cmp
retf
jo
mov
pop
add
push
pop
js
jno
mov
or
dec
jo
sub
xor
fbstp
add
adc
inc
adc
(bad)
repz
mov
loope
mov
pop
sti
cmp
cwde
int3
and
in
stc
rcr
inc
scas
xchg
jno
data16
add
shl
dec
js
inc
pop
adc
push
mov
sar
fsubr
lea
jae
cmp
xchg
push
jge
add
in
inc
adc
dec
(bad)
cmc
and
jo
call
fisttp
sbb
idiv
push
or
xor
xchg
addr16
lods
push
in
inc
ins
fcomp
fild
mov
mov
push
and
jno
(bad)
xchg
cmp
inc
imul
ret
push
inc
xchg
leave
and
sbb
in
add
outs
loope
pop
mov
push
movs
jne
dec
retf
(bad)
mov
xor
sub
jp
add
sbb
popf
ss
adc
pusha
xchg
scas
call
push
inc
push
xchg
dec
ins
mov
sbb
test
dec
jp
or
adc
xor
sub
xchg
cmps
jne
inc
add
in
in
dec
fstp
sub
imul
aam
jns
jbe
pop
imul
shr
jb
ja
mov
xchg
dec
xor
cli
out
push
and
ins
sbb
lds
arpl
jp
cmp
cmp
and
sub
mov
mov
xchg
push
cmps
or
fst
call
xor
inc
mov
cmp
jle
add
xchg
scas
jno
aaa
cs
jp
or
jo
push
xchg
cmps
mov
daa
in
stc
pop
sub
in
sub
rcl
test
data16
push
lods
lock
jo
bound
jmp
jmp
cmp
shl
xor
sub
xchg
(bad)
es
mov
adc
js
cmp
fcomp
outs
dec
mov
or
stos
nop
jae
aam
fsub
mov
mov
ss
clc
test
mov
xchg
(bad)
push
jnp
dec
or
pop
xlat
pop
ret
fwait
xor
stos
popf
jmp
das
push
jp
out
xchg
xor
(bad)
cld
adc
and
add
jmp
sti
leave
mov
pop
ins
xlat
in
mov
in
mov
sbb
fs
mov
sbb
jecxz
in
jne
sbb
(bad)
in
std
das
sub
mov
and
add
inc
cld
mov
pshufw
xor
jl
mov
cmp
jecxz
cwde
icebp
cmp
xchg
push
das
mov
sbb
cld
mov
cmp
les
pop
push
cmp
mov
gs
nop
pop
cmps
and
data16
sbb
ror
std
xchg
add
mov
and
cld
sub
lahf
mov
xchg
call
(bad)
cmp
xor
push
aam
jmp
and
int3
int3
sbb
lahf
ins
and
repz
add
or
stos
adc
fcmovb
pop
bound
and
inc
fcomp
sahf
mov
add
imul
dec
test
mov
outs
pusha
and
(bad)
inc
ror
ret
sbb
jecxz
stos
xor
adc
xchg
lods
cli
adc
imul
xchg
or
jo
xor
cld
aas
jmp
(bad)
jnp
push
fadd
cmp
ror
sub
int
cmp
adc
jae
and
inc
jne
xchg
cld
sti
mov
pop
inc
cmp
adc
push
xchg
adc
sub
ficom
ja
jmp
std
jp
rol
mov
test
jns
shr
pop
cmps
lods
adc
sub
hlt
clc
ins
cmp
int
addr16
inc
mov
sbb
nop
push
mov
arpl
push
hlt
rcl
mov
push
jp
xchg
mov
les
inc
push
mov
addr16
movs
fadd
and
jnp
lock
or
hlt
sub
jmp
inc
fs
jno
sub
das
jmp
push
retf
ins
test
jne
fcomi
add
or
xor
cld
arpl
inc
push
cmps
fisub
bound
jg
mov
popf
xor
movs
xchg
in
push
add
cmp
mov
mov
jp
adc
sub
or
or
mov
(bad)
lods
adc
dec
add
xchg
repz
or
push
cmc
adc
clc
mov
mov
jp
xchg
and
retf
in
fs
mov
xchg
test
fldcw
mov
leave
imul
pushf
and
push
jb
call
jo
xchg
cwde
int3
fld
inc
sbb
sub
es
(bad)
ds
inc
lods
mul
mov
cmp
xor
movs
inc
xchg
or
mov
sub
dec
push
cmc
or
arpl
jbe
or
cmp
adc
mov
dec
in
push
nop
inc
mov
in
clc
add
cwde
std
or
popf
int3
dec
cld
and
call
aad
in
push
(bad)
es
sbb
cwde
div
push
pushf
mov
jmp
jbe
mov
fwait
sbb
retf
xor
je
xor
xor
xchg
jle
iret
jl
loopne
inc
out
add
fstp
pop
test
cmp
leave
jmp
in
iret
mov
jae
lahf
mov
in
jns
lods
les
xchg
mov
dec
shl
stos
mov
sahf
pop
leave
mov
icebp
xor
mov
hlt
cmc
push
mov
rcr
mov
sahf
or
aad
xlat
mov
xor
xchg
jle
cmp
icebp
hlt
test
jo
(bad)
mov
(bad)
push
mov
shl
jmp
jge
clc
or
push
int3
mov
inc
sub
pop
xor
push
sub
sbb
je
dec
inc
mov
daa
sbb
mov
mov
pop
mov
xor
push
xchg
mov
test
mov
sbb
xchg
jge
pusha
pinsrw
and
nop
push
test
rcl
cmp
rol
push
in
fild
mov
fcomp
les
cmp
neg
mov
imul
xor
jmp
fst
mov
push
and
mov
retf
ins
jmp
loop
test
xor
out
mov
cmp
cmp
add
cld
into
cwde
inc
in
or
addr16
shl
jo
cld
jns
stos
ret
(bad)
push
fwait
cmp
in
inc
xor
int
cmp
cmp
jge
xchg
add
mov
mov
shr
pop
scas
dec
push
retf
mov
cmp
add
sbb
jnp
idiv
sar
push
xor
jne
dec
cmpxchg
ja
dec
clc
inc
clc
clc
ror
inc
inc
cld
inc
movs
les
mov
(bad)
loope
add
mov
xchg
int3
cmp
jp
pop
clc
xchg
push
jecxz
test
js
outs
jmp
and
lods
shl
mov
addr16
je
mov
cmp
std
stc
jmp
or
aad
adc
pop
pushw
dec
dec
jae
and
mov
xor
jb
xchg
dec
mov
push
sub
loope
mov
pop
inc
mov
dec
xchg
and
xchg
imul
stos
dec
sbb
sbb
repz
test
arpl
jns
mov
lahf
mov
ins
jae
dec
mov
pusha
mov
xchg
(bad)
mov
xchg
cmp
ret
jle
cmp
fwait
lds
ins
adc
dec
sbb
xchg
and
scas
cmp
mov
test
popf
mov
xchg
ss
inc
loope
out
dec
stc
call
cmp
mov
pop
inc
xor
dec
pop
mov
xchg
fcom
adc
retf
mov
aam
xor
cwde
fistp
int
rcl
daa
adc
enter
fcomp
test
cmp
test
retf
mov
adc
data16
pushf
iret
cmc
jne
shr
jp
fsubr
xchg
xor
fnstenv
mov
out
js
hlt
iret
retf
mov
loopne
xchg
scas
in
out
daa
in
lea
outs
jmp
ret
out
(bad)
fcom
in
xchg
push
xor
add
je
push
mov
and
adc
fs
retf
repz
push
mov
xchg
pop
add
cmc
or
and
fwait
add
mov
in
outs
push
push
es
cmp
popa
xchg
fs
cmps
jne
(bad)
xor
ret
sbb
(bad)
pop
add
adc
dec
adc
sti
daa
lods
cmc
(bad)
pop
jo
sub
add
ficomp
or
xchg
sbb
je
gs
shl
sub
pusha
and
lds
sbb
inc
call
and
dec
xlat
into
sbb
lahf
rcl
addr16
loopne
stos
xchg
les
retf
pop
scas
jae
inc
xchg
pop
outs
jp
xor
xor
out
div
out
out
adc
in
fs
jmp
sub
xchg
mov
aaa
cmp
jne
push
out
xor
push
pop
mov
les
lock
xchg
dec
fwait
mov
aas
outs
loop
mov
xor
xor
mov
imul
sub
cmp
(bad)
jmp
test
adc
ins
loopne
xor
xor
jmp
jecxz
in
or
inc
(bad)
add
cmp
test
shl
outs
xor
jae
(bad)
(bad)
jmp
test
push
cmps
jbe
sbb
sub
cmp
fisubr
mov
out
jnp
inc
mov
mov
pop
mov
imul
push
cwde
mov
inc
icebp
cmp
ja
add
xor
js
pop
inc
dec
sub
rcl
(bad)
(bad)
lds
xchg
add
bound
adc
mov
jo
nop
sub
sbb
jns
jge
ins
xor
bound
sub
xchg
adc
int3
into
xor
and
add
xchg
cmps
das
scas
mov
jns
cdq
hlt
or
out
dec
jae
and
cmp
or
icebp
fdivrp
mov
xchg
xchg
sbb
pop
add
sti
data16
and
jl
adc
ror
sbb
mov
inc
sbb
pop
xchg
push
fidiv
mul
ret
jne
dec
cwde
and
jmp
ss
inc
sbb
dec
arpl
mov
dec
aas
fwait
xchg
adc
cmp
jle
jmp
test
iret
hlt
pop
push
pop
loopne
sbb
mov
sub
xchg
nop
jo
mov
jmp
js
xor
jmp
retf
xor
stos
jp
(bad)
push
and
pop
sbb
add
repz
stos
sub
clc
call
sub
adc
pusha
and
or
dec
or
cmp
stos
add
xor
in
push
cmp
mov
inc
retf
mov
or
sbb
vmread
pop
mov
lods
mov
stos
xchg
sbb
scas
fistp
gs
ja
js
inc
add
shl
mov
xor
sbb
and
int
jae
jb
dec
jge
xor
js
(bad)
ret
movs
rol
dec
mov
pushf
stos
out
push
pop
jp
jmp
or
ins
test
sub
sahf
or
das
jbe
dec
jne
cwde
gs
xchg
xor
pop
push
inc
int3
in
out
mov
fistp
or
jp
xchg
mov
shl
pop
xchg
movs
mov
pop
nop
mov
adc
cld
int3
mov
daa
or
fbstp
adc
dec
push
jo
test
nop
xor
aas
mov
test
test
and
cmp
mov
or
movs
pushf
pop
cmps
shl
sub
jb
rcl
mov
pop
mov
sbb
lods
push
mov
test
jp
xchg
xor
daa
pop
imul
loopne
nop
and
pop
in
xchg
scas
pop
xchg
pop
or
js
dec
scas
out
mov
push
cmps
imul
in
pop
push
sub
sub
ror
push
mov
xor
ret
cmp
dec
cmp
mov
fdiv
icebp
addr16
push
inc
cmp
data16
sub
add
xor
cmp
jl
out
mov
mov
inc
cmp
and
imul
push
daa
sbb
dec
push
mov
push
mov
or
cmp
ret
adc
icebp
test
ret
mov
popa
outs
mov
int3
and
in
inc
ficom
call
sub
pop
daa
cmp
fisttp
popf
retf
retf
ins
jae
cwde
mov
mov
xor
cmp
inc
les
add
push
ret
imul
push
mov
cmp
cmp
xchg
cmp
into
dec
test
jp
retf
xchg
mov
mov
loope
daa
les
ret
and
aam
loope
data16
loopne
sbb
push
lock
xlat
or
gs
sbb
dec
ins
inc
mov
dec
mov
jp
mov
jge
dec
adc
add
inc
stos
cmp
retf
mov
sub
ror
movs
sbb
adc
sub
loope
push
(bad)
jge
pop
push
adc
loope
fcomip
std
and
test
mov
aad
jbe
test
in
dec
mov
adc
xchg
js
test
cld
sbb
lahf
imul
pop
xchg
mov
jno
adc
xchg
push
jp
(bad)
and
outs
js
mov
cmc
call
cmps
in
imul
xor
fcomp
fs
pushf
cmp
in
mov
or
cmp
pop
push
sbb
jmp
or
jae
mov
xchg
movs
ins
push
sub
imul
mov
repnz
cmp
push
pop
lods
test
xor
leave
nop
xchg
shl
jae
call
into
int3
push
xchg
and
cmp
jo
xchg
adc
or
inc
xor
jle
fist
mov
xchg
mov
xchg
pop
retf
push
cmc
out
sub
jp
xchg
xor
std
lds
shl
sti
mov
retf
dec
push
sbb
fwait
add
push
and
enter
test
push
jmp
sbb
pop
data16
call
mov
add
test
stc
ret
shr
add
cld
sbb
enter
pusha
inc
and
xlat
rol
pop
add
push
rol
dec
(bad)
in
xchg
mov
mov
jo
dec
add
push
or
xlat
xor
jo
jmp
xor
jmp
movs
jae
jbe
xor
mov
cmp
jle
jp
imul
outs
ds
xor
xor
not
cmp
and
sbb
mov
lahf
pop
jnp
in
data16
aas
xchg
mov
and
mov
ins
out
mov
std
cmp
in
add
jne
les
push
cmps
cli
mov
cmc
pop
mov
out
lods
mov
daa
pop
leave
mov
js
pop
push
imul
add
scas
iret
jb
dec
mov
test
icebp
cli
mov
add
popf
imul
push
shr
imul
(bad)
mov
or
inc
imul
loopne
pop
jmp
mov
sbb
hlt
pusha
mov
xchg
and
leave
or
jno
js
lock
arpl
xchg
test
jmp
mov
inc
push
scas
lock
xchg
lds
add
in
pop
push
or
and
mov
jmp
pop
pop
ficom
call
lods
and
mov
pop
retf
fdivr
jns
ret
cmp
cmp
dec
add
ins
and
jae
dec
call
and
pop
arpl
aad
pop
and
repz
mov
mov
cmp
xlat
popf
add
mov
(bad)
shl
call
lods
mov
xchg
(bad)
inc
repz
pop
dec
jg
pop
pop
in
or
lods
and
iret
repnz
mov
xchg
mov
add
jl
pushf
mov
cwde
cdq
mov
(bad)
fisubr
xchg
jl
add
adc
jl
or
xchg
add
lock
aam
ins
adc
frstor
sti
mov
xchg
inc
lock
sbb
jl
cmp
pushf
and
push
mov
xor
jne
scas
add
rol
jl
aam
mov
int3
sbb
bound
aaa
out
inc
mov
test
jns
mov
call
mov
cmp
(bad)
popf
outs
inc
sar
xchg
sahf
outs
lock
jl
pop
fisttp
xor
jl
stos
fistp
scas
inc
pop
fdivr
imul
mov
sub
fxch
jl
mov
stos
sbb
sti
fs
dec
sar
add
mov
add
jl
std
dec
loopne
call
enter
dec
retf
jae
pop
daa
idiv
cwde
jmp
jl
lds
loope
push
pushf
mov
movs
jno
int
sub
mov
jns
repnz
outs
cdq
aam
fs
imul
xchg
call
cmp
sub
mov
and
cmp
sbb
and
in
(bad)
mov
jge
bound
mov
or
ds
(bad)
lock
dec
(bad)
pop
sti
inc
xchg
cs
loop
std
cld
test
mov
pushf
ss
pop
sub
aad
cwde
es
cld
or
or
adc
jge
push
js
jnp
mov
mov
push
das
jl
mov
sbb
mov
cmp
pop
lahf
(bad)
cld
mov
dec
nop
adc
mov
adc
inc
xchg
jl
(bad)
(bad)
scas
add
popf
sti
jl
dec
dec
xchg
lods
adc
je
push
div
(bad)
leave
pushf
jle
cmps
fadd
ss
fsub
sub
or
xchg
push
xchg
rcr
dec
dec
int3
inc
jl
inc
ds
jge
jl
out
neg
cmp
test
pop
mov
pop
movs
stos
cmp
push
lahf
(bad)
jnp
jno
ins
sub
fwait
icebp
cld
test
and
leave
out
mov
inc
cdq
cmp
jl
test
test
inc
push
sbb
stc
fstp
sti
dec
arpl
xchg
mov
test
leave
js
mov
icebp
popf
(bad)
(bad)
outs
inc
loop
adc
stos
ret
lods
add
mov
lahf
jge
mov
pop
push
test
or
cld
xor
mov
out
jl
fist
push
xchg
jne
jl
mov
loop
ja
call
lods
jp
pop
jl
rol
dec
jl
ret
xchg
adc
sbb
lods
inc
(bad)
cld
add
retf
ror
add
ds
dec
(bad)
and
jl
xchg
sbb
les
pop
ds
ja
mov
mov
popf
stos
jl
inc
cmp
xchg
in
inc
out
mov
call
sbb
mov
or
xor
sbb
test
shl
mov
push
test
and
xor
xchg
adc
jmp
xor
outs
lds
push
xor
dec
frstor
mov
jecxz
jl
addr16
mov
imul
ins
sahf
mov
test
jl
inc
hlt
cmp
call
jmp
scas
lods
mov
cmp
xchg
xchg
xor
jl
dec
mov
iret
jl
jb
inc
xchg
adc
movs
jl
add
sub
jle
push
and
cmp
mov
inc
cmp
or
leave
(bad)
jl
loope
ss
push
sahf
in
and
jl
xor
fdivr
add
jl
int3
sub
or
(bad)
call
pop
inc
push
pop
addr16
add
sub
retf
jl
sbb
mov
jl
int
(bad)
hlt
aaa
sbb
push
mov
jnp
retf
in
popf
sub
mov
inc
call
xor
inc
(bad)
xor
retf
mov
bound
mov
aad
test
inc
dec
push
pop
mov
fiadd
cwde
lods
jl
cmp
repnz
jl
ror
cmp
xchg
je
out
jle
push
je
jl
test
sub
and
mov
enter
jl
das
jmp
mov
jne
jl
cmp
dec
dec
push
aaa
stos
inc
adc
jnp
or
xchg
add
ins
mov
enter
add
das
xor
add
ja
icebp
fisubr
xor
cli
and
ja
mov
sub
stos
or
mov
imul
ja
aaa
adc
add
or
lock
sub
jmp
imul
push
leave
movs
cld
ds
cwde
xchg
dec
pop
shr
mov
gs
pop
cmps
xor
jb
sub
outs
sbb
cmp
outs
xor
popa
(bad)
cmp
jl
push
push
cld
outs
lahf
dec
and
test
jge
sbb
lods
int
push
aam
inc
jl
inc
dec
mov
les
jle
jae
add
jmp
sub
imul
retf
push
dec
leave
dec
or
pop
jl
pop
lock
inc
rcl
(bad)
call
fnstcw
xchg
inc
inc
stos
mov
jnp
dec
push
leave
mov
or
jle
jl
stos
sti
fld
mov
xor
or
test
mov
ret
popa
jg
enter
jl
add
and
jl
stc
mov
xchg
shr
or
std
inc
jp
mov
mov
jle
outs
hlt
lea
(bad)
in
scas
rcl
cld
cs
and
inc
xchg
mov
bound
jge
jmp
or
mov
pop
jl
lods
dec
xor
dec
mov
es
add
test
jl
clc
mov
adc
inc
jl
inc
sub
mov
idiv
test
dec
repnz
xor
hlt
jl
pop
adc
xchg
pusha
mov
cld
cld
adc
outs
mov
daa
hlt
test
xchg
repnz
lea
pop
mov
aad
add
xchg
mov
jne
mov
push
jl
adc
jl
sbb
dec
inc
mov
and
fwait
(bad)
neg
int
jl
dec
mov
sbb
mov
jge
cmp
loop
dec
lds
imul
leave
adc
jl
call
dec
pop
aad
movs
and
inc
jl
leave
or
jl
sub
pop
inc
call
sbb
push
sbb
jne
pop
xlat
iret
jl
ret
adc
cmc
out
clc
imul
pushf
lea
jl
out
mov
dec
(bad)
iret
push
jl
ins
jmp
mov
movs
clc
and
enter
retf
sbb
popa
jl
inc
mov
outs
sbb
lea
push
pop
retf
mov
cmp
adc
cmp
pop
jl
jecxz
movs
mov
and
je
xchg
mov
jl
adc
jo
icebp
movs
xchg
cwde
fwait
jmp
(bad)
cmp
lods
movs
js
mov
pop
mov
clc
jg
add
into
movs
leave
push
dec
adc
fisttp
es
cs
leave
std
cdq
ret
stos
adc
cmp
mov
sbb
add
mov
jge
adc
mov
aas
mov
ror
lahf
loop
push
in
adc
outs
mov
stos
xchg
sbb
fisubr
lahf
mov
retf
in
sbb
pop
cmp
adc
xor
sbb
mov
les
sub
mov
mov
mov
movs
adc
in
test
and
in
mov
ss
imul
repz
call
pop
adc
shr
movs
outs
adc
enter
repz
iret
ror
jmp
mov
xchg
xlat
and
sub
jmp
(bad)
cs
loope
add
push
mov
rol
jmp
xor
icebp
push
sub
call
imul
xchg
icebp
and
sub
pop
dec
and
dec
mov
test
and
jne
dec
mov
add
and
aaa
or
jo
rcr
in
ret
enter
test
pop
outs
icebp
fsubrp
or
add
jns
xchg
jns
lahf
ins
and
and
rol
push
and
out
cli
cwde
xor
jmp
jbe
adc
repz
cmp
mov
pop
fsub
(bad)
fcmovu
add
ins
jo
xchg
push
mov
mov
push
xchg
out
pop
inc
movs
and
loopne
sub
or
xor
jmp
pusha
sbb
leave
imul
jo
cmp
pop
stos
inc
push
stos
inc
sub
xchg
sbb
and
dec
ds
ins
cmp
sbb
in
not
sbb
sub
xor
mov
mov
dec
fist
jns
pusha
push
shl
jg
inc
xor
ins
retf
loope
mov
cmp
sahf
pusha
iret
dec
lahf
cli
jmp
and
cmp
jns
xor
cmp
cmps
stc
retf
enter
outs
xchg
or
clc
sub
je
sub
xchg
iret
push
or
jmp
fs
jge
pushf
sti
xchg
(bad)
jle
pop
in
jo
hlt
das
add
aad
into
cmp
xchg
xor
stc
call
in
adc
in
ret
in
inc
push
add
mov
ror
lea
aas
cdq
dec
inc
aad
push
leave
cmp
iret
add
in
xchg
shr
rol
xchg
adc
and
xchg
jnp
jb
dec
loopne
ror
xchg
fwait
add
leave
fstp
jbe
aam
pop
sub
cmc
out
mov
rcr
jbe
cld
adc
dec
gs
or
or
sub
iret
not
jge
in
sub
jmp
(bad)
sub
jmp
loopne
fisub
mov
lods
test
dec
mov
add
xchg
xchg
sbb
(bad)
push
repz
xor
lods
aas
rcl
lods
push
cld
jne
repz
das
and
push
pop
aad
(bad)
mov
ins
movs
loope
icebp
xchg
push
into
push
js
mov
or
dec
adc
adc
loopne
cmp
mov
sbb
sbb
pop
dec
push
js
pop
xchg
bound
aaa
xchg
fstp
test
daa
js
jae
or
test
lea
xchg
jl
adc
push
iret
push
not
sti
repz
inc
jae
or
es
jo
pushf
adc
loop
jp
jne
xchg
ins
test
mov
adc
dec
inc
add
jne
jbe
(bad)
sub
test
fild
pusha
push
mov
cmps
xor
jae
or
jns
in
xor
int3
push
pop
pop
or
data16
push
xchg
add
cld
loop
fld
sub
ins
in
js
xchg
push
cld
jp
ficomp
xchg
mov
ds
sub
and
pop
repnz
push
inc
cmp
xor
fimul
js
xchg
pop
cmp
fidiv
aad
bound
movs
inc
fidiv
pop
movs
loopne
ss
push
and
push
sub
inc
add
cmp
jle
pop
loop
add
popf
push
jne
mov
push
xor
(bad)
repz
push
inc
push
setg
xchg
daa
retf
cmc
xchg
push
sar
mov
dec
add
inc
sub
xor
into
popf
sbb
ret
dec
js
mov
jl
cmp
out
add
pop
jmp
movs
adc
and
stc
imul
dec
mov
xchg
or
(bad)
imul
pop
leave
fwait
mov
iret
popf
dec
(bad)
sbb
(bad)
call
shl
cmc
dec
test
xchg
into
dec
mov
mov
dec
dec
jmp
cli
dec
(bad)
xor
dec
cmp
dec
dec
push
lods
or
mov
bound
xor
in
and
adc
push
les
test
jge
pop
fstp
xchg
pop
pop
jle
cli
pusha
mov
pushf
sub
or
sub
dec
pop
jbe
and
fild
jno
sub
nop
mov
sub
not
fdivr
lods
movs
pop
sar
mov
clts
jmp
in
mov
adc
xchg
hlt
jns
cwde
xor
dec
add
std
sub
aaa
addr16
mov
and
mov
popa
scas
add
add
stos
xor
leave
cmc
sbb
loopne
push
and
or
fs
jge
fldenv
movs
inc
iret
push
gs
je
repz
addr16
out
mov
mov
dec
xchg
repz
outs
jge
mov
jae
call
cmp
cmp
fcom
out
adc
mov
sahf
and
sbb
xchg
pushf
ja
or
and
and
adc
loope
repz
jae
jne
sub
repz
in
xchg
or
pushf
or
int
fdiv
jne
nop
cmp
adc
scas
xchg
rcr
lods
scas
pop
in
lods
dec
out
ret
les
and
sbb
cmp
jns
outs
fld
rcl
std
jecxz
in
pop
dec
mov
xor
adc
sbb
dec
xor
jge
jle
cs
dec
fild
es
xlat
cmps
mov
or
xlat
sub
sub
sar
sub
push
rcl
adc
mov
cwde
(bad)
imul
cmp
jb
mov
push
fisttp
push
jmp
cmp
aas
div
ja
jb
adc
xor
stos
mov
retf
(bad)
push
jns
movs
mov
xor
push
(bad)
in
xor
in
sbb
and
test
push
dec
sub
fsub
hlt
push
dec
(bad)
popf
pop
js
jne
and
xor
inc
jne
and
sub
cmp
out
data16
lock
dec
jbe
repnz
sub
fsub
bound
sbb
push
xor
sbb
loopne
mov
mov
inc
ret
dec
in
sub
mov
fwait
aam
out
ss
clc
push
xchg
and
add
int3
aas
and
jnp
sar
add
push
lahf
jmp
xchg
in
mov
mov
fcom
dec
push
in
cmps
ss
fs
fild
and
leave
xchg
xor
fild
stos
cmp
les
cld
mov
or
xchg
sbb
test
pop
les
dec
push
xchg
cs
push
or
or
(bad)
out
fnstcw
mov
fild
push
jl
ss
jg
xchg
pop
(bad)
movs
jecxz
sub
push
jmp
add
xor
in
sbb
lahf
dec
xchg
push
es
jae
test
mov
in
out
mov
xor
and
jmp
ret
outs
std
xchg
push
lds
push
into
sbb
mov
sbb
popf
int3
sub
lods
out
cmp
add
ret
std
mov
test
pusha
add
add
sub
cwde
pop
jmp
push
jb
xchg
mov
mov
and
mov
sbb
cmp
pop
dec
in
jecxz
loopne
push
retf
mov
loope
int
xchg
dec
repnz
cmp
mov
cmp
mov
bound
inc
jns
xchg
dec
hlt
or
aam
js
xor
xor
jle
or
out
or
sub
rcl
mov
pop
cld
xor
retf
mov
loope
je
cdq
test
pushf
out
rcl
add
xchg
test
int
sbb
nop
mov
pop
push
mov
push
adc
mov
jecxz
jmp
test
sti
enter
ret
dec
retf
mov
jl
cli
stc
dec
mov
or
nop
lods
add
jle
xor
adc
push
inc
cwde
idiv
test
loope
sub
dec
xchg
fst
jp
xchg
mov
cmc
inc
dec
iret
push
iret
repnz
jbe
sbb
jnp
dec
jmp
mov
pop
adc
(bad)
jp
jbe
pop
mov
jge
dec
mov
(bad)
data16
hlt
lock
mov
jae
sbb
shl
clc
mov
ins
xchg
and
jo
push
pop
test
out
sbb
jb
jmp
pop
xchg
mov
lock
sti
xchg
lods
add
or
ret
bnd
arpl
aam
mov
imul
jmp
or
mov
cmps
xchg
dec
call
adc
xor
adc
out
adc
or
loopne
(bad)
icebp
mov
mov
mov
and
imul
sub
sbb
xor
leave
mov
call
xor
ret
cmp
mov
cmp
push
sub
pushf
pop
mov
xchg
hlt
lods
outs
out
mov
jmp
sbb
loopne
icebp
xor
in
mov
cs
ja
repz
inc
fs
mov
sub
in
pop
in
mov
push
add
push
xor
iret
pop
add
retf
pusha
repz
adc
sbb
aas
jg
popf
sub
sbb
fiadd
in
adc
repz
dec
pop
xchg
sbb
je
popf
push
ja
jb
in
scas
xchg
pop
or
ds
in
enter
hlt
or
stos
js
inc
jle
shl
out
test
std
cld
cmp
fimul
dec
js
js
out
and
mov
cmps
stc
out
add
das
fneni(8087
lds
ss
pop
push
mov
mov
mov
jge
and
les
iret
cmp
aam
(bad)
inc
sbb
cmps
into
push
xchg
clc
push
xchg
das
jmp
jmp
pop
jle
xchg
lds
sub
outs
jge
fsubr
mov
xor
es
xchg
ins
dec
jae
cmps
dec
mov
mov
out
dec
out
push
aam
pop
gs
or
xchg
inc
stc
ja
xchg
ins
sub
inc
sbb
stos
or
dec
mov
jge
lods
ret
cmp
xchg
div
jp
jmp
cmps
ins
imul
imul
or
ins
add
aas
mov
dec
xchg
push
or
xchg
sub
lds
fsubr
and
cmps
outs
into
lock
into
(bad)
mov
popa
cmps
or
jl
jecxz
mul
inc
lahf
add
(bad)
pop
xor
xor
movs
in
xchg
ret
lahf
dec
fidivr
outs
ret
pop
inc
inc
add
js
test
xchg
jne
and
idiv
xor
sar
mov
push
jns
shl
push
pop
mov
xlat
sub
add
pop
jae
es
ins
lds
ret
cmp
xchg
call
pop
xchg
and
lods
jns
ret
jmp
es
push
ss
jmp
push
aad
outs
into
pop
pushw
hlt
nop
cmp
cwde
xchg
dec
in
js
dec
push
retf
and
lahf
call
movzx
xchg
pop
retf
mov
xor
cmp
push
mov
les
xor
lods
sahf
in
or
pop
and
sbb
mov
ins
cmp
mov
fwait
out
jp
mov
xor
dec
push
cmps
mov
push
adc
mov
adc
xchg
mov
add
cld
xor
push
adc
cmp
mov
rcl
cmp
outs
shl
mov
ss
push
idiv
xchg
stc
(bad)
mov
loopne
jmp
mov
popa
xor
xchg
pop
dec
daa
into
inc
aaa
dec
call
push
rcr
mov
loope
mov
outs
test
out
pop
iret
add
das
int
pop
inc
ret
mov
icebp
rcl
stc
xor
sahf
or
cld
add
pushf
adc
mov
push
dec
movs
repnz
cmp
ins
xor
mov
es
sub
adc
fmul
pusha
pop
dec
xchg
vcvttss2si
xor
and
jo
js
mov
(bad)
pop
mov
jl
xlat
mov
mov
in
out
jmp
es
or
ins
lahf
retf
inc
mov
test
mov
aam
lods
mov
sub
rcr
xchg
jbe
jnp
test
dec
sub
mov
xor
dec
dec
cs
aad
add
xchg
enter
pushf
dec
and
pop
push
ret
adc
and
mov
mov
out
(bad)
test
out
out
and
push
js
inc
jnp
xlat
icebp
sbb
sub
(bad)
popf
leave
ror
cli
popf
scas
lahf
mov
in
push
mov
xchg
or
xchg
test
add
(bad)
cmps
or
dec
mov
(bad)
mov
(bad)
mov
cmp
adc
adc
nop
pushf
cmp
not
or
xchg
ja
push
jnp
adc
cmp
aad
jp
bnd
or
nop
into
mov
pop
push
sbb
daa
jmp
loopne
xor
test
add
fsub
cmp
xchg
push
mov
stos
sbb
mov
iret
cmc
dec
pop
pushf
imul
test
sub
rcr
adc
sub
loope
ins
ds
ins
lock
push
outs
clc
and
mov
sbb
push
pop
mov
adc
pop
pop
cmp
movs
(bad)
rcr
pop
xlat
xor
xor
adc
aam
pusha
mov
clc
mov
movs
pop
or
and
out
(bad)
push
dec
cwde
pop
cld
xor
jge
das
idiv
sub
out
inc
pop
push
leave
lea
and
(bad)
fdiv
ror
call
fs
dec
aas
(bad)
xor
fwait
cmp
xchg
jmp
pop
movs
and
push
fld
dec
xchg
outs
fimul
sub
popf
aas
xchg
aaa
out
stos
test
cli
adc
sahf
lods
pop
push
mov
mov
push
xor
test
pushf
les
stos
jne
retf
and
stc
loope
dec
retf
sbb
js
or
loope
(bad)
in
and
cmps
jo
(bad)
ja
call
cmp
xchg
fstp
jp
adc
xchg
aam
test
jp
mov
pop
and
cli
cmp
(bad)
cmps
test
in
xchg
(bad)
js
cmp
push
or
(bad)
mov
mov
stc
mov
push
aam
fimul
jmp
js
and
rcl
pushf
sub
add
push
xor
mov
sub
xor
mov
mov
jne
sbb
out
pop
jge
jg
mov
loopne
sbb
add
push
xchg
stc
call
popa
ror
adc
es
mov
jmp
jne
cmp
jne
jge
sub
enter
push
push
movs
push
adc
jge
xchg
dec
jo
test
movs
cmps
adc
or
sub
inc
jecxz
sub
ror
inc
addr16
and
jge
pop
adc
imul
dec
xor
xchg
xor
pop
xlat
add
jne
mov
sub
cmp
cdq
clc
lock
test
mov
add
dec
adc
cs
js
push
addr16
fidivr
adc
sar
cwde
dec
or
pop
or
mov
xchg
push
(bad)
mov
push
sub
popa
repz
mov
or
pop
inc
loopne
imul
cmp
fs
mov
dec
jle
outs
cmps
add
(bad)
jle
and
push
hlt
jmp
push
jo
je
sub
imul
int3
sub
inc
(bad)
jnp
cmovs
pop
mul
push
or
xchg
dec
xchg
rcl
sub
sbb
xchg
pop
lods
mov
fmul
in
sar
xchg
inc
jb
mov
or
push
and
std
fmul
mov
pop
inc
fwait
mov
clc
xchg
movs
repz
loop
jmp
xor
jmp
pop
stos
xchg
cwde
jmp
adc
scas
pop
aam
imul
push
add
mov
icebp
dec
stc
xchg
push
xor
sbb
mov
dec
mov
arpl
xlat
hlt
mov
mov
push
in
test
xchg
inc
push
je
movs
(bad)
repz
mov
ret
call
dec
cli
xor
mov
sbb
jb
mov
adc
fiadd
in
mov
cmc
sbb
adc
jae
cmps
lahf
xor
call
je
mov
(bad)
lods
dec
repnz
jne
sbb
pop
sbb
mov
loope
(bad)
lods
jns
cmc
mov
(bad)
sbb
sub
ins
add
add
add
or
push
or
inc
rol
cmp
inc
push
outs
clc
fcos
or
lock
cmc
sub
jp
jo
not
jae
dec
rcr
lock
mov
add
adc
xor
pop
xchg
jae
outs
add
mov
add
ds
scas
aaa
(bad)
(bad)
nop
mov
adc
push
out
mov
xchg
pusha
jecxz
jg
test
sbb
aad
jne
mov
fsub
stos
sahf
pop
nop
fbstp
jnp
mov
sub
data16
stc
adc
fnstenv
jns
sub
mov
push
ret
mov
mov
fs
mov
rol
mov
mov
out
xchg
imul
sub
pop
in
jge
add
out
stc
push
jbe
cmps
jmp
fs
in
(bad)
xchg
inc
push
sbb
or
loop
dec
xchg
es
(bad)
mov
in
pop
imul
jnp
nop
and
movs
test
or
inc
js
xchg
movs
mul
ror
and
popf
mov
xchg
ins
dec
xchg
sub
and
dec
mov
push
sub
test
fstp
cdq
mov
mov
pop
mov
sub
sub
jno
jp
inc
gs
and
push
loope
or
test
cmps
sar
(bad)
and
cmp
call
and
in
lods
out
sbb
sbb
mov
aas
inc
sbb
sub
fldcw
cli
(bad)
xchg
sbb
ret
rol
and
lods
repnz
xchg
fucom
and
mov
je
cmps
cmp
add
xchg
inc
sub
pop
cmp
gs
fisub
shr
scas
pop
dec
leave
jl
mov
xchg
retf
dec
hlt
cmp
fistp
dec
pop
sbb
push
jp
mov
inc
push
xchg
fbstp
les
cwde
sar
jne
and
dec
cmps
clc
cld
xchg
mov
cmp
jno
fs
add
and
sahf
inc
adc
mov
xchg
cld
push
jmp
jne
cmps
sub
cmp
jae
xor
mov
xchg
xor
ins
xchg
adc
xor
pop
dec
and
stos
xchg
push
test
pop
leave
adc
jae
inc
or
jne
(bad)
js
into
call
call
xor
adc
push
pop
sbb
mov
adc
sub
test
mov
jge
imul
jne
rol
dec
sub
(bad)
xor
mov
daa
add
sub
xchg
lea
dec
mov
adc
sub
outs
je
or
adc
mov
dec
adc
or
outs
aam
sbb
fnstsw
xchg
stc
push
fistp
cwde
sub
mov
or
mov
inc
jmp
jns
sbb
das
dec
push
adc
adc
mov
hlt
add
xchg
popa
sub
loop
dec
jp
test
sti
mov
pop
pop
and
push
call
out
lods
dec
push
dec
pop
dec
sub
xchg
ins
mov
cmp
pop
sbb
cmp
pop
mov
(bad)
jo
f2xm1
daa
cs
mov
sub
push
xchg
mov
stos
cdq
cmp
shr
xchg
mov
shl
rcl
pusha
pop
add
sbb
mov
out
sti
jmp
jb
pushf
push
mov
or
int3
xchg
popf
push
mov
xor
push
sbb
or
push
and
xchg
aaa
xor
jns
dec
or
or
push
in
push
test
jne
les
(bad)
jecxz
mov
div
push
jp
add
or
fadd
inc
inc
sub
js
popa
xchg
push
jmp
push
jle
fist
cmp
xor
fistp
jmp
sar
(bad)
jle
sbb
push
sub
push
dec
sub
int3
jg
outs
std
dec
xchg
out
sbb
mov
adc
push
inc
(bad)
mov
sub
add
sub
add
jo
into
xchg
repz
sub
movs
jb
retf
(bad)
xor
out
dec
sbb
(bad)
push
dec
bound
loopne
push
fbstp
addr16
xchg
xchg
jle
pop
jl
jmp
in
test
hlt
and
pop
gs
jo
dec
aad
mov
pop
push
xchg
sub
ja
xchg
cmp
jp
sub
and
fldcw
dec
(bad)
hlt
adc
lds
out
jne
sbb
fist
xchg
dec
dec
mov
cmp
inc
xor
jnp
jb
lds
fdivr
repz
nop
mov
js
dec
fsubr
rcr
jae
leave
push
fld
ror
cmp
mov
das
cwde
sub
mov
or
icebp
dec
inc
fidivr
ret
and
inc
je
mov
bound
into
fwait
or
aad
xchg
xchg
dec
xor
(bad)
loope
and
or
test
dec
push
call
jge
sahf
fnstcw
push
and
fist
or
lock
inc
push
aad
loopne
dec
xchg
jp
loope
shl
sub
xor
jns
rol
push
or
pushf
mov
cdq
sbb
imul
loopne
daa
out
sbb
imul
xchg
std
stc
xchg
xchg
sbb
sbb
xchg
popf
addr16
leave
cmp
sbb
sar
add
imul
(bad)
mov
jbe
fs
cmp
xor
dec
xchg
xor
je
pop
in
mov
jg
mov
push
icebp
jp
mov
xchg
ins
pop
fisubr
dec
and
in
lea
cmp
daa
mov
fs
aaa
jns
mov
loopne
sbb
(bad)
dec
nop
popf
push
and
pop
jb
xchg
sti
xlat
shr
cdq
sbb
lods
xchg
push
and
fwait
or
push
push
cmp
push
cwde
xor
cmps
pop
jg
pop
cmp
in
mov
popa
mov
mov
fimul
js
and
int
xchg
mov
inc
inc
jne
xchg
cli
dec
mov
cdq
lods
dec
inc
rol
adc
jne
adc
dec
mov
hlt
and
mov
nop
aas
in
adc
pusha
rep
jae
pop
cdq
ss
cli
bound
js
ret
cmp
xchg
std
jno
xor
dec
sbb
fnstcw
movs
loopne
jns
mov
push
je
pop
inc
and
icebp
push
or
dec
xchg
stos
mov
jne
sub
cld
pop
sahf
jg
jne
push
dec
mov
jl
add
xchg
and
jmp
cmp
mov
test
mov
jne
test
push
push
fmul
jo
retf
sahf
data16
pusha
cs
push
sub
movs
xor
dec
cs
lods
std
and
dec
push
cmp
repz
mov
icebp
fsubr
cmps
ror
data16
sbb
cwde
and
cmp
shl
adc
jae
scas
mov
sub
pop
into
fadd
dec
sub
out
fisttp
adc
lods
mov
pop
sbb
into
cmc
in
xchg
mov
xchg
push
fild
dec
xchg
call
int3
jbe
les
cmp
lods
dec
mov
xor
mov
xchg
xor
jge
dec
js
(bad)
fstp
sub
mov
add
sbb
movs
out
pop
(bad)
popa
aaa
xor
inc
xchg
cwde
push
sbb
in
out
mov
sub
dec
hlt
pop
xchg
cmp
pop
mov
inc
sub
mov
movs
sar
and
shr
cld
lock
jo
ins
pop
movs
adc
mov
xchg
mov
xchg
jecxz
jnp
push
mov
mov
jae
mov
inc
jno
xchg
pop
aam
test
ss
or
rcr
push
jmp
lods
pop
push
(bad)
test
scas
xchg
and
repz
stc
inc
popa
fidiv
fild
outs
dec
adc
inc
in
add
popa
mov
lods
out
or
xor
cmp
fcmove
loopne
int3
bound
sbb
cmps
mov
pop
shr
repz
inc
imul
sbb
les
bound
cld
or
push
lea
pop
pop
stos
test
jg
or
or
adc
xchg
retf
sub
test
xlat
or
lea
mov
push
push
push
push
aad
jne
loopne
and
inc
pop
cs
jl
fstp
mov
repnz
cmc
xchg
dec
(bad)
dec
fnstsw
push
les
and
addr16
jne
jp
jo
movs
test
ins
xor
inc
stos
shl
add
shr
stos
rcr
push
fwait
mov
mov
mov
adc
xchg
inc
adc
jl
in
cmc
xchg
pop
sub
test
lds
loop
push
add
pop
dec
je
cmp
cmp
jmp
and
clc
retf
pop
js
jg
jbe
and
outs
xchg
inc
xor
sar
aaa
push
fbld
mov
dec
or
data16
in
dec
shl
loope
dec
sub
int3
jmp
add
xor
push
pop
ja
fcmovu
sub
cmp
adc
adc
repnz
(bad)
xchg
jo
add
fs
cmp
jg
mov
pop
adc
lock
xchg
dec
and
push
and
jge
sbb
xor
aam
dec
and
mov
mov
mov
jg
popf
or
(bad)
sub
xchg
cmp
stos
mov
out
sbb
and
into
cmp
stos
pop
jp
push
push
sub
shl
push
push
sub
or
rol
xchg
or
mov
xchg
or
xor
cmps
xor
inc
add
mov
jno
adc
cmp
out
and
xchg
in
in
ins
stos
push
popa
ins
scas
xor
jo
loop
cmp
xchg
mov
aam
out
call
mov
sahf
int
add
test
lods
adc
push
jnp
repz
in
and
inc
int
xchg
test
xor
mov
or
shr
loopne
mov
fst
neg
jae
pop
ss
aad
loop
jecxz
pop
cmp
xor
aaa
leave
dec
dec
jne
sbb
adc
fsub
stos
dec
pop
mov
iret
mov
xchg
adc
push
jo
pop
push
sar
sub
jb
xchg
adc
push
mov
mov
test
stos
andps
mov
jne
sbb
adc
pop
loopne
cmp
mov
sbb
sub
and
addr16
iret
leave
sahf
outs
inc
in
jae
bound
cmp
repz
fild
cli
fsub
push
xchg
ret
add
xor
pusha
into
sbb
rcl
push
inc
mov
outs
xchg
add
xchg
cwde
add
jne
xor
sbb
je
dec
and
out
jae
adc
jp
cli
neg
fadd
out
clc
nop
enter
loope
or
xchg
cmps
ds
outs
(bad)
stc
test
test
mov
push
jae
dec
(bad)
adc
cwde
leave
outs
adc
mov
sub
lds
int3
das
cld
imul
test
mov
jge
jns
stos
jmp
push
adc
test
jae
dec
pop
dec
das
stos
dec
sbb
and
stos
push
xor
mov
stos
pop
cmps
xchg
imul
dec
cs
ret
pop
lods
or
shl
and
cld
(bad)
clc
inc
dec
into
cmp
repz
ss
pop
mov
mov
or
(bad)
pop
xor
xchg
ret
rcr
jne
xchg
push
mov
add
ror
and
sub
jle
iret
movs
fst
adc
or
ud1
sub
and
adc
push
js
sti
xchg
repnz
jle
xor
into
shl
and
sbb
xlat
fstp
mov
call
into
sub
xchg
cmps
cs
lods
fsubrp
fsub
push
loopne
xchg
cli
int3
or
cmp
and
ss
mov
push
out
cmp
jnp
xor
mov
cmp
movmskps
data16
jl
and
jmp
aad
xchg
(bad)
cmp
lds
push
xor
mov
sub
cmc
dec
scas
into
pusha
hlt
pusha
(bad)
movs
pusha
dec
scas
ficom
shr
adc
cdq
mov
aad
out
push
xchg
pop
mov
mov
cld
push
xchg
push
mov
sub
add
or
mov
pop
sahf
(bad)
cmp
aas
arpl
shl
mov
out
ret
push
sbb
jmp
mov
sub
dec
cld
mov
cmps
les
jmp
mov
sub
(bad)
mov
rcl
and
push
mov
xor
mov
(bad)
xchg
cmp
je
and
mov
cmc
push
pop
out
cld
xchg
xor
daa
pushf
(bad)
cmps
pushf
jns
xor
stos
repz
(bad)
std
xor
xor
loop
xchg
out
jg
sbb
test
imul
outs
call
sub
dec
cmp
ja
adc
mov
pop
or
mov
rol
ds
pop
adc
scas
mov
test
mov
mov
pop
int3
xor
cmc
cld
in
cmps
sub
les
loop
xor
div
stc
imul
xchg
cmps
sub
ds
or
xor
(bad)
sub
(bad)
xor
push
scas
and
mov
daa
inc
mov
in
pop
es
das
cmp
cmc
ja
rcr
add
mov
mov
ins
pop
int3
push
or
(bad)
jp
test
pop
jo
icebp
es
in
shld
xchg
fadd
xor
sub
mov
cmp
clc
iret
mov
jnp
rcl
mov
es
hlt
xchg
lock
jae
das
aas
mov
in
nop
enter
cs
pop
fs
jne
xchg
mov
movs
xchg
push
dec
out
xor
cli
in
repnz
retf
cmp
jne
ret
mov
shl
sbb
(bad)
outs
leave
outs
dec
ret
repz
mov
dec
sbb
jmp
bound
pop
in
jl
push
pop
mov
adc
cmp
dec
push
repnz
cmp
xchg
clc
dec
adc
mov
or
int3
in
stos
fs
icebp
add
adc
das
sub
sbb
xchg
and
push
jp
dec
outs
gs
in
push
jl
pop
out
fdivr
ret
jl
jge
inc
xchg
ss
jmp
pop
mov
jp
or
outs
das
fisub
adc
push
mov
pop
xor
out
cmps
cmc
int
iret
in
cld
cli
jno
jl
adc
sbb
push
xchg
push
cli
inc
(bad)
xchg
setns
inc
retf
leave
sub
add
cli
xchg
cdq
rcl
ret
jae
mov
lods
loope
int3
ins
xor
sbb
fld
je
jmp
mov
xchg
xchg
fstp
les
ja
popa
cdq
sahf
leave
cmp
hlt
add
and
test
inc
iret
and
aaa
jecxz
dec
mov
push
mov
adc
xchg
mov
sahf
sub
add
cmp
std
push
push
js
or
jge
fidiv
push
icebp
int3
inc
dec
fist
clc
add
push
pop
js
(bad)
mov
les
test
in
xchg
jmp
or
hlt
xor
repz
lds
in
mov
mov
mov
dec
imul
ret
lahf
(bad)
out
iret
sbb
(bad)
int3
cld
mov
jle
add
arpl
inc
aad
add
and
xor
dec
and
clc
xor
fcmovnu
jle
mov
cs
dec
sar
xchg
pop
jmp
(bad)
mov
jnp
and
dec
fist
sahf
push
inc
jp
dec
add
pushf
dec
rcl
fild
push
mov
icebp
push
jmp
(bad)
ins
lods
retf
jp
call
imul
xchg
jo
jb
rcl
and
hlt
inc
xchg
(bad)
jp
in
arpl
pop
mov
dec
jns
pop
repz
lea
jp
adc
retf
test
sbb
pushf
daa
sar
dec
adc
test
dec
cli
fwait
xchg
sbb
cmp
or
in
pop
add
test
cmp
les
mov
das
sub
xor
arpl
loopne
jbe
lock
dec
in
pop
fidiv
sbb
sub
mov
xor
adc
mov
push
sbb
jmp
xor
out
nop/reserved
hlt
sub
sbb
mov
rcr
cmp
or
enter
pushf
nop
stos
jp
pop
in
mov
mov
jmp
mov
xor
pop
js
mov
cmp
inc
enter
lods
inc
outs
shr
mov
sub
jbe
ins
je
icebp
in
push
ficomp
ret
pop
gs
cli
js
xor
dec
test
retf
rcr
(bad)
cli
fistp
or
neg
jns
call
xchg
les
xchg
ja
mov
mov
xchg
jns
jo
hlt
xchg
push
(bad)
xchg
cmp
jnp
cdq
mov
add
inc
push
iret
pop
push
xchg
xor
pop
arpl
jnp
inc
pop
ja
xchg
xor
sbb
jge
cmp
jmp
(bad)
cmp
out
shl
repz
mov
sbb
adc
data16
test
les
aaa
out
lods
int
cmp
xor
xchg
pop
std
stos
adc
mov
mov
loopne
xchg
add
cwde
push
jecxz
sbb
add
arpl
xor
sar
adc
outs
sahf
and
add
add
cmp
ret
xchg
xchg
out
bound
aad
data16
jns
fsub
daa
push
leave
xor
jmp
jns
into
xchg
les
movs
(bad)
xlat
out
cmp
sahf
xor
fs
neg
into
sub
fs
cmp
xchg
push
ins
ja
(bad)
pushf
xor
and
lock
jecxz
mov
and
stos
xchg
cmp
shl
data16
mov
or
cmp
shl
sbb
ret
pop
call
int
call
and
jae
hlt
mov
in
push
and
out
sub
and
movs
imul
mov
pop
js
mov
fwait
jp
or
sub
mov
(bad)
pop
or
imul
mov
dec
mov
fimul
or
mov
lock
xchg
cmps
pop
mov
add
mov
popf
outs
pop
add
xor
ror
enterw
xor
push
nop
jl
outs
loop
xchg
hlt
pop
mov
cmp
cmps
push
push
or
(bad)
mov
fcom
scas
dec
dec
xor
jae
aad
mov
ds
gs
push
jp
in
mov
add
enter
xchg
pushw
into
pop
imul
dec
push
mov
jae
cs
(bad)
push
or
xor
cmps
mov
je
add
jmp
cwde
pop
cmp
dec
pop
cli
shr
loope
jbe
push
xor
dec
repnz
into
pop
and
jno
test
xchg
stos
in
jne
jge
loope
fcomp
push
mov
mov
adc
icebp
rcr
mov
xor
sbb
movs
aaa
mov
enter
xchg
mov
sub
adc
mov
sub
into
cmc
jle
dec
mov
mov
pop
mov
sub
push
adc
scas
mov
cmp
xor
jg
outs
mov
jo
movs
ret
loop
sbb
int
scas
push
mov
mov
xchg
aaa
jne
inc
sub
pop
push
loopne
or
xchg
or
loope
xchg
in
lods
xchg
mov
adc
fmul
pop
push
xor
daa
loopne
in
fs
pop
out
fs
cmp
aam
cmp
pop
and
jp
xor
std
jg
loopne
pop
and
jns
mov
les
leave
add
ins
into
fdiv
dec
test
sbb
inc
mov
xor
dec
pusha
mov
movs
cmp
(bad)
fs
pop
cs
jo
out
xchg
aaa
popf
ret
inc
mov
dec
cld
mov
pushf
xchg
push
into
jmp
arpl
pop
adc
es
mov
out
imul
xchg
pop
jg
adc
cmp
mov
sub
jns
out
fbld
mov
pop
pop
sbb
jmp
push
xchg
in
(bad)
imul
mov
or
je
fidivr
dec
pop
sbb
xchg
cld
xor
pop
push
adc
sub
or
jge
mov
popa
pusha
cli
mov
xchg
push
push
mov
leave
xchg
sbb
(bad)
sbb
mov
pop
pop
inc
jge
mov
or
cmp
sub
and
test
xchg
pop
cmps
inc
push
test
leave
xchg
fistp
pop
js
fiadd
(bad)
daa
xchg
xor
pop
push
loop
mov
mov
mov
gs
add
add
push
sub
pop
cmp
mov
cmc
push
lods
rcl
and
sub
ss
loop
pop
adc
jae
and
jmp
jecxz
push
sub
xor
aad
xchg
addr16
cmp
retf
jno
jns
stc
aas
xor
inc
fild
mov
enter
xchg
lahf
and
adc
mov
pop
cwde
inc
iret
cmps
cmp
jl
xchg
push
inc
push
adc
pop
imul
das
rep
ss
stos
mov
sub
xchg
jge
into
(bad)
xor
repz
inc
cmps
in
cs
cs
mov
pop
hlt
add
jae
(bad)
fst
xlat
or
xchg
or
jo
xor
or
xchg
pop
outs
shl
fs
fist
lds
mov
add
pop
pop
sbb
int3
lock
pop
xlat
movs
dec
jae
or
push
inc
cmp
inc
mov
dec
pop
mov
inc
repz
cmp
popa
out
mov
sbb
mov
or
call
or
mov
or
add
and
(bad)
sub
rol
inc
xchg
pop
mov
and
mov
loopne
pop
xchg
push
jp
sub
mov
cli
mov
call
out
mov
push
int3
loop
push
and
iret
push
lea
jecxz
les
or
lea
fwait
cmp
mov
jp
dec
imul
dec
xchg
mov
hlt
dec
mov
push
js
fsubr
dec
inc
fdivr
out
int
sbb
scas
inc
out
mov
xchg
jb
(bad)
rol
mov
adc
out
fcomp
xchg
out
jnp
xor
cwde
mov
sbb
scas
push
pushf
(bad)
cmp
call
cmp
faddp
imul
mov
mov
rol
cli
add
and
ins
lock
je
jmp
push
xchg
repnz
inc
sub
and
scas
sub
and
pushf
retf
ror
push
std
sub
(bad)
retf
mov
xchg
in
push
icebp
loopne
or
sbb
in
xchg
xchg
cmps
jg
cmps
push
and
xchg
retf
cld
or
cmps
pop
rcr
jns
dec
pop
jne
mov
out
cs
and
bound
lahf
pop
ja
fbld
hlt
push
dec
push
vmulsd
test
push
ffreep
pop
pop
mov
nop
dec
jne
sbb
pop
jge
cmp
pop
mov
ins
repz
mov
jge
mov
lds
pop
dec
mov
popa
xchg
mov
fs
fcmovbe
mov
lds
ret
(bad)
aad
sub
ins
add
xor
ins
xor
mul
adc
dec
fcom
xor
xor
xor
jmp
jb
xchg
scas
xchg
push
jle
sbb
xor
xchg
(bad)
mov
sub
adc
inc
jg
sub
jl
rol
and
jb
mov
in
mov
cmp
les
data16
pushf
test
clc
mov
sbb
xchg
call
jne
or
inc
stos
(bad)
mov
adc
jl
push
lahf
sbb
stos
push
xlat
mov
jmp
mov
leave
cmp
daa
sbb
(bad)
pop
xchg
test
or
cld
(bad)
push
jecxz
je
clc
mov
jne
js
push
add
cmp
test
xchg
in
lods
sub
hlt
pop
xchg
inc
xor
sbb
xchg
mov
cmp
arpl
popa
clc
add
xchg
jnp
jmp
jne
xchg
scas
(bad)
int3
dec
or
mov
pushf
sbb
popa
xchg
push
aas
sub
push
xor
xchg
pop
add
jmp
ror
test
cmp
into
or
mov
xor
nop
loop
adc
cdq
add
cld
out
out
je
popf
xlat
pop
jo
gs
in
das
mov
sub
jge
push
das
push
shr
mov
inc
call
and
fistp
and
cs
push
xor
push
dec
cmp
mov
(bad)
xor
dec
sub
pop
les
mov
cmps
and
jbe
xor
cmp
push
in
cmps
adc
out
popa
in
jb
xchg
mov
xchg
leave
push
and
xor
imul
or
pop
add
daa
xor
jae
jnp
jbe
cmp
js
inc
int
sub
popa
sub
and
mov
shr
std
fild
(bad)
sub
cmps
jnp
adc
es
push
xchg
stos
dec
loopne
fwait
jne
fwait
pop
pop
test
mov
adc
dec
(bad)
dec
popa
mov
loope
(bad)
xor
push
dec
iret
arpl
les
cmp
test
lods
ja
push
adc
jns
mov
(bad)
mov
jb
inc
xchg
xchg
push
jg
pushf
sub
cwde
movs
das
jge
dec
mov
mov
mov
fiadd
jbe
neg
push
pop
pushf
sub
dec
adc
and
arpl
xchg
dec
add
in
lahf
dec
das
or
xor
jg
ja
ins
adc
ja
pop
xchg
sub
pop
pop
hlt
adc
mov
outs
push
rcr
test
lea
es
cmp
jecxz
aam
mov
mov
jecxz
popa
xchg
addr16
cmp
and
mov
cdq
adc
mov
push
rcl
mov
daa
(bad)
iret
fcomp
jae
xchg
dec
inc
sub
cli
test
mov
hlt
cdq
sahf
pop
xchg
jg
inc
scas
jns
arpl
enter
xor
shl
sar
jmp
dec
ret
pushw
inc
inc
outs
cs
jg
inc
sub
sbb
push
add
adc
ins
mov
(bad)
out
xor
push
xchg
or
leave
adc
jmp
shl
lea
xchg
das
retf
(bad)
jo
pop
pushf
xchg
pushf
push
push
cmp
scas
cmp
jne
lods
dec
sub
fist
data16
mov
pushf
adc
jbe
in
outs
call
and
adc
push
scas
imul
mov
fild
fstp
daa
pause
xor
cmc
es
cmp
mov
xor
fidiv
pop
not
jle
pop
xor
xcrypt-ecb
cmps
dec
add
not
js
mov
jno
ss
pop
call
mov
ins
test
fist
bound
dec
(bad)
jne
stos
arpl
stos
pop
sti
mov
test
iret
std
test
xlat
outs
inc
mov
repz
pop
push
(bad)
(bad)
mov
in
and
cld
inc
imul
(bad)
hlt
jmp
fsub
pusha
in
pop
dec
or
ds
or
dec
inc
scas
fistp
shl
test
and
push
fcmovnu
dec
out
ret
in
es
repnz
adc
cli
pop
dec
icebp
jge
jbe
mov
cli
jb
outs
cmc
mov
adc
jo
push
add
mov
jp
push
cmp
xchg
out
inc
mov
clc
retf
mov
dec
add
and
push
xor
jp
mov
jne
mov
pop
int
jl
stc
sti
lea
and
scas
in
mov
imul
jne
retf
addr16
xchg
sub
into
test
lods
pop
xchg
int3
pop
mov
sar
ja
rol
cli
sub
inc
cmp
xchg
xchg
inc
and
nop
scas
and
enter
adc
mov
or
movs
icebp
and
push
mov
pop
scas
mov
xchg
arpl
jns
inc
jmp
out
fcom
lods
ret
mov
or
jecxz
jns
or
mov
(bad)
xor
sbb
stos
fwait
cmp
mov
repz
and
jmp
outs
or
sahf
pop
pop
fwait
dec
jns
fst
addr16
xchg
cmp
sbb
cmp
fnstsw
movs
push
test
int3
int
js
dec
sub
popf
test
les
xor
sub
fidiv
mov
loopne
not
call
dec
mov
ret
jae
imul
cmp
push
shr
scas
sbb
sahf
lods
lds
and
cli
cmp
in
dec
xchg
push
shr
dec
jmp
xor
fsub
and
xor
cmove
std
xchg
mov
cmps
mov
ins
sbb
xchg
sbb
ret
xor
pop
dec
cld
loope
fistp
es
addr16
sbb
inc
xor
jns
and
xchg
fiadd
js
dec
jae
lods
add
cmc
xor
xchg
lea
xchg
je
adc
xchg
cmp
cmp
loopne
loop
and
es
xchg
and
iret
daa
cmp
xchg
cld
push
das
jne
movs
mov
push
inc
bound
add
add
cld
mov
or
outs
push
or
cmp
jne
jbe
xor
inc
aas
call
jae
mov
add
test
cmc
push
or
dec
pop
leave
nop
sub
test
or
shr
sub
mov
sub
push
jp
in
arpl
call
push
retf
jle
xor
inc
cmp
add
das
je
mov
popa
xor
loope
jo
jge
aad
add
mov
dec
cwde
mov
add
cmp
jp
lds
push
or
dec
retf
js
xor
mov
mov
sti
xor
imul
cs
ret
sub
pop
out
out
cmc
repz
loop
pop
add
ret
jmp
adc
jns
loopne
fidiv
xor
sub
jne
js
rol
jle
sub
pop
pusha
cli
mov
mov
mov
in
cmp
out
hlt
and
mov
gs
sbb
dec
sub
xchg
pop
pusha
sbb
addr16
cmc
(bad)
pop
inc
retf
adc
nop
out
mov
mov
xchg
and
fsubp
xor
call
addr16
mov
(bad)
pop
sub
push
push
xchg
cmp
push
inc
xor
test
xchg
ins
mov
inc
xchg
lods
adc
and
or
leave
sahf
scas
cmp
mov
loop
je
sbb
push
cs
cs
mov
out
or
sbb
mov
shl
fidivr
mov
daa
in
push
and
push
xchg
adc
sbb
neg
test
imul
loopne
cmp
leave
push
repz
je
inc
fwait
xchg
clc
and
jmp
and
dec
add
xlat
push
fidivr
aad
test
icebp
in
shl
pop
mov
adc
lock
jne
xchg
ins
or
hlt
adc
jmp
pusha
lds
rcl
mov
mov
cwde
mov
aas
stos
jmp
rcr
xor
cmp
adc
repz
xchg
mov
adc
into
jno
dec
imul
bound
mov
jmp
fadd
jno
cmp
lahf
cmp
jg
mov
fbstp
(bad)
pop
jl
stos
adc
adc
icebp
jns
test
pop
add
adc
cli
js
lods
xchg
jp
jge
sub
lds
sbb
inc
sub
and
cld
sub
xor
and
sbb
(bad)
push
mov
mov
dec
dec
mov
add
(bad)
sbb
mov
jmp
mov
adc
jae
jb
fdivr
call
ins
dec
fsub
dec
sub
jg
xchg
into
das
sti
call
jnp
add
jns
stos
retf
cdq
pushf
mov
push
jmp
push
sbb
mov
inc
out
or
rcl
clc
pop
push
pop
push
pop
(bad)
inc
push
call
pop
fsub
cmps
js
in
mov
xor
sbb
and
pop
sbb
int3
pop
std
jns
ficom
sub
xchg
mov
test
sbb
and
cwde
pop
jge
(bad)
movs
les
pop
loope
cmp
call
and
pop
cmp
movnti
daa
pushf
sbb
pop
jne
sub
jle
push
or
cld
imul
cmp
fist
fdivr
jl
jecxz
lock
mov
fiadd
add
inc
mov
sub
xchg
fdiv
mov
sbb
test
inc
std
mov
sbb
cmp
dec
jb
icebp
lea
iret
adc
mov
adc
repz
scas
rcr
das
fs
jae
push
das
cmp
add
jae
test
fidivr
inc
cmp
je
xor
mov
out
test
or
scas
push
les
popf
mov
push
jno
push
scas
hlt
aaa
push
jl
adc
xor
dec
xor
push
xchg
mov
loope
shr
adc
jns
ds
cmps
aam
pop
xchg
cmp
adc
dec
xor
icebp
push
pop
scas
shl
push
loop
sar
sbb
mov
into
jp
test
jmp
dec
pushf
mov
movs
mov
and
movs
lds
movs
mov
and
test
pushf
imul
rcr
test
push
jnp
xchg
sbb
fidiv
inc
dec
sbb
out
mov
popa
sub
js
int
adc
out
sbb
xor
clc
retf
(bad)
fs
cld
mov
ds
stos
mov
mov
outs
repz
mov
fst
in
ins
sub
fdiv
les
push
in
in
sbb
pop
sbb
pop
fild
adc
mov
imul
sahf
stc
sbb
cli
cs
fimul
xor
hlt
mov
rcl
cld
jge
repz
lock
xchg
push
sbb
data16
sar
dec
jae
add
sub
mov
sbb
leave
or
push
or
adc
push
xchg
push
cli
movs
daa
gs
xor
xchg
mov
dec
inc
std
or
inc
dec
addr16
popa
inc
xchg
and
sbb
adc
mov
xor
cmps
sub
or
rcr
mov
pop
(bad)
call
pop
sub
fs
repz
dec
dec
adc
imul
adc
ss
mov
inc
sub
jae
adc
sbb
cdq
or
xor
sub
xor
ret
stos
add
mov
cmp
sbb
xchg
shl
jno
jp
fwait
loopne
sub
push
xchg
jnp
call
cli
adc
loope
jmp
loop
push
push
mov
hlt
test
dec
mov
lods
iret
fstp
ins
mov
or
mov
js
mov
adc
pop
and
jo
add
xchg
mov
dec
test
fisub
cs
pop
inc
xchg
test
jp
jne
cld
loopne
push
adc
fst
fidivr
shl
or
cmp
(bad)
cmp
ins
fst
repz
inc
xchg
pop
mov
loope
sbb
push
iret
xchg
mov
test
mov
xchg
and
(bad)
and
setnp
add
add
mov
nop
jmp
mov
adc
test
pop
test
pop
je
pop
in
xchg
call
or
mov
aas
or
push
fadd
ja
not
mov
leave
jns
aas
mov
shl
ret
pop
sbb
pop
outs
lahf
or
inc
call
in
sub
mov
push
popf
cmp
mov
js
rcr
mov
call
jmp
inc
js
xor
sub
sti
push
shl
jne
sub
nop
aaa
mov
cmc
(bad)
stc
mov
mov
test
mov
mov
dec
jns
cld
test
adc
popa
push
dec
jb
add
loopne
scas
xchg
mov
icebp
shr
jne
loop
cmps
lods
add
adc
js
xor
adc
imul
hlt
jno
xor
fcom
mov
adc
dec
inc
ret
(bad)
add
push
or
mov
and
inc
cdq
push
xchg
stos
iret
icebp
daa
inc
ret
cdq
or
cmps
push
add
outs
jle
imul
inc
stc
push
pop
cwde
icebp
adc
hlt
pop
scas
pop
mov
stos
xchg
psubd
mov
dec
mov
push
xor
cli
dec
pop
icebp
aad
and
(bad)
mul
mov
in
or
xchg
int3
push
jnp
jbe
push
call
cmps
cwde
xor
sub
sub
inc
cmc
popa
jle
mov
mov
hlt
add
jmp
jo
xchg
lods
rcr
aam
or
push
push
movs
inc
xchg
jae
inc
dec
je
fmul
jae
xor
xor
cs
mov
sbb
xor
mov
mov
ret
jl
mov
mov
fistp
aam
mov
popa
jae
push
jge
sbb
xchg
push
ds
jp
xchg
or
xor
loope
mov
jmp
pushfw
add
loop
loopne
(bad)
stc
bound
adc
cmc
addr16
mov
popf
push
loopne
mov
bound
or
xchg
imul
fadd
cmp
xor
mov
ret
cmp
sbb
cld
or
and
mov
in
xchg
pop
arpl
or
sub
xor
mov
xchg
mov
inc
lock
jg
mov
movs
leave
xor
dec
xchg
ret
enter
mov
pop
sub
fidivr
das
xchg
pop
scas
adc
add
cmc
hlt
sub
mov
aam
mov
and
(bad)
xchg
cmp
xor
out
inc
mov
jp
jns
add
fcom
pop
and
pop
cld
mov
sbb
jge
xchg
mov
in
adc
out
pop
xlat
sub
mov
cld
mov
cmp
adc
add
and
cmps
and
ins
cwde
mov
push
mov
sub
push
jp
mov
(bad)
int
push
sbb
jl
mov
xchg
sbb
jp
icebp
mov
mov
out
adc
movs
in
addr16
call
mov
lods
std
cmp
sbb
test
add
fs
aam
test
jp
dec
adc
popf
ja
push
push
data16
div
cmc
mov
outs
loopne
sub
fistp
gs
inc
repz
cmp
jg
and
adc
pop
test
xchg
pop
sub
sub
and
aad
mov
in
xchg
dec
js
or
(bad)
mov
stos
jnp
int
out
mov
adc
mov
adc
mov
ret
in
(bad)
iret
cwde
jle
or
loope
test
in
cmp
push
(bad)
and
and
cmps
pop
mul
cdq
aad
stc
mov
in
dec
xchg
xchg
jne
dec
cmp
aad
ret
jmp
mov
ret
sub
(bad)
lods
jbe
ss
fistp
sub
pop
pop
call
inc
cmp
or
sti
aad
cmp
jb
push
or
int3
lock
jb
hlt
sbb
xor
jae
cmp
js
stos
sub
lahf
ins
es
dec
out
mov
lods
pop
push
add
push
ficomp
ret
jp
movs
adc
cmc
stos
test
mov
aad
xchg
cmps
fdivr
dec
add
jae
bound
sti
hlt
leave
lahf
jg
(bad)
and
dec
hlt
mov
mov
dec
push
xchg
xor
xlat
out
push
jle
iret
stc
xor
sub
(bad)
fdiv
jo
out
xor
jb
lods
stos
std
movs
repz
dec
in
enter
movs
jg
mov
cmps
ret
push
cmp
or
je
xchg
test
inc
out
retf
xchg
dec
or
cmc
out
pop
in
mov
xchg
push
mov
repnz
es
xchg
mov
call
push
ror
pop
lds
lods
cwde
ins
push
pop
out
push
mov
in
inc
sub
jae
push
jo
push
mov
and
nop
call
test
cli
das
es
les
dec
ror
sub
cmc
(bad)
fnstenv
int
add
jo
sar
or
shl
in
cdq
test
lahf
push
and
movs
cdq
jo
cmp
mov
ja
call
arpl
in
and
sub
xchg
jl
and
add
scas
rcl
mov
dec
in
mov
movs
pop
sbb
adc
cmps
pop
sbb
or
sub
loopne
aad
push
dec
ja
cmps
push
sub
(bad)
sar
ret
push
mov
fnstcw
xchg
xchg
ins
lds
(bad)
jb
dec
jne
and
mov
xchg
stos
push
fmul
dec
stos
jns
rcl
lock
inc
int
adc
push
push
rol
xchg
mov
push
sbb
fisttp
adc
and
jne
jecxz
lahf
loopne
sti
std
inc
push
xchg
pop
and
sbb
jl
pusha
sbb
outs
mov
cli
pop
(bad)
clc
add
or
xor
add
je
pusha
xchg
jne
iret
cmps
jmp
call
xor
pop
test
xor
add
and
jecxz
xor
in
jne
xchg
push
frstor
repz
stc
jle
jo
pop
fs
dec
jbe
sbb
clc
cmp
jp
dec
and
and
call
mov
test
aad
outs
adc
lock
push
xchg
test
repnz
arpl
outs
loope
icebp
push
lahf
fcmovnb
and
cmp
cmps
add
jae
sbb
js
mov
jmp
mov
stos
(bad)
jg
inc
sbb
mov
add
mov
test
mov
cmp
mov
lods
pop
fsub
das
push
shl
xor
dec
aad
dec
sub
iret
jae
or
in
call
fucom
mov
and
ins
cld
(bad)
imul
shr
fdivr
adc
jle
mov
in
xchg
aas
sub
adc
and
das
jno
add
clc
jmp
int
js
pop
mov
mov
push
scas
dec
pop
dec
sub
fldenv
jne
test
mov
or
xlat
cdq
popa
dec
jmp
loope
popf
mov
pop
pop
and
aad
lds
jbe
lods
movs
btr
xchg
cdq
inc
rcr
xor
pop
xchg
jmp
fisubr
cmp
and
xor
push
and
ins
xor
sub
std
jmp
lods
fist
retf
dec
out
cmps
push
mov
push
mov
mov
sbb
pop
cmp
dec
int3
sub
in
mov
inc
ret
and
sbb
inc
mov
add
call
lods
(bad)
cmp
out
imul
addr16
test
sbb
call
leave
xor
sub
mov
mov
outs
in
and
sub
in
pop
test
in
je
(bad)
(bad)
lds
xchg
push
jg
repz
jp
repnz
int
xchg
mov
xor
pushf
arpl
xor
hlt
add
sbb
xchg
loopne
gs
or
dec
lea
xchg
test
cld
adc
stc
(bad)
mov
sbb
cmp
sbb
leave
sub
xor
pop
jge
pop
adc
fnstcw
jle
cmp
(bad)
jbe
and
mov
(bad)
sub
cmps
nop
xchg
push
mov
xchg
cmp
and
jmp
sbb
scas
imul
push
mov
push
sti
jb
jecxz
xchg
jp
adc
inc
push
mov
arpl
push
lods
push
jmp
pop
mov
hlt
out
and
js
adc
jmp
rol
sub
or
std
mov
mov
sub
mov
call
jl
pop
js
mov
in
aam
inc
pop
cld
mov
not
dec
adc
jle
fadd
push
retf
dec
xchg
sbb
in
jo
mov
sbb
adc
dec
les
add
xor
(bad)
sbb
push
xor
sub
cmp
mov
cmp
jb
xchg
jbe
or
mov
cmp
dec
xchg
or
pop
je
dec
out
movs
xor
(bad)
cmp
dec
cmp
sahf
fdiv
xor
enter
fcom
loope
in
arpl
jecxz
pop
sub
shl
cmps
rcl
iret
repz
push
push
(bad)
xor
imul
jne
int
cmp
cmp
loopne
jne
or
pop
jg
cmp
movs
jnp
xchg
mov
jmp
lds
cli
pop
das
xor
or
and
outs
push
ds
and
mov
mov
div
inc
or
retf
or
xchg
cmps
mov
in
pop
sbb
nop
and
mov
xchg
repnz
jne
retf
stc
inc
mov
movs
in
sub
mov
callw
rcr
out
pusha
sbb
sbb
call
lods
cmp
in
xor
inc
fidivr
test
sbb
stos
call
stos
adc
js
dec
aam
ficom
stos
adc
lds
hlt
mov
cmp
push
(bad)
js
ficomp
lea
ins
dec
xchg
or
(bad)
push
jnp
or
pusha
dec
ficom
inc
fbld
mov
sub
inc
or
jo
cmp
or
jo
sbb
dec
data16
sti
popf
(bad)
fmul
adc
mov
jns
pusha
sub
(bad)
ror
jp
out
pop
pusha
jno
loopne
mov
push
lds
sahf
inc
shl
les
imul
mov
adc
or
fstp
jbe
mov
pop
xchg
ja
test
jmp
pop
jmp
mov
nop
scas
lahf
jl
jb
add
repz
push
dec
or
xchg
mov
cs
fistp
xchg
ja
adc
retf
pop
test
icebp
int3
xchg
sub
in
pop
adc
into
dec
push
sti
jecxz
jae
jecxz
dec
pop
dec
fiadd
popa
sub
mov
and
push
mov
jo
mov
xlat
dec
xchg
cmps
sahf
and
mov
(bad)
pop
push
cmp
mov
pushf
pop
push
enter
addr16
shr
lods
cmp
mov
xor
jp
xchg
sub
(bad)
jle
push
cmps
push
aam
js
jne
mov
nop
retf
adc
or
(bad)
push
push
aad
stc
xchg
inc
xchg
std
fsubr
push
mov
lahf
dec
das
mov
out
mov
xchg
add
leave
xor
dec
mov
mov
mov
mov
pop
sbb
iret
mov
jnp
test
xchg
mov
stc
scas
inc
jne
xor
add
and
loope
xor
xchg
pop
mov
lds
push
jo
inc
mov
jb
mov
cmp
mov
jmp
hlt
mov
std
push
js
ds
imul
sti
push
scas
jecxz
xor
push
test
(bad)
xor
push
xchg
jbe
jmp
cmp
mov
mov
adc
jp
das
enter
outs
pop
call
ins
test
js
mov
xchg
and
add
cmp
adc
xor
mov
sub
xlat
sbb
xchg
push
add
js
shl
or
xchg
std
xchg
cmp
movs
and
push
inc
jbe
jo
and
test
and
mov
jb
stos
test
sub
push
add
mov
jg
call
mov
loopne
jp
sbb
mov
or
imul
fwait
xor
fs
mov
xchg
fistp
and
push
sbb
xor
xchg
jae
xchg
rol
mov
cli
and
ss
hlt
repz
pop
arpl
mov
add
loop
pop
mov
shr
js
push
jnp
jo
nop
push
push
and
push
shl
call
push
jo
rcr
and
xchg
(bad)
sub
std
cld
jo
jb
or
sti
mov
adc
or
push
cld
sar
xchg
xchg
cdq
xor
imul
add
fs
(bad)
jecxz
dec
les
push
sti
sbb
daa
cmp
pop
jg
xchg
(bad)
call
add
adc
jmp
fisttp
rol
test
out
gs
xchg
pop
jno
bswap
mov
repz
imul
nop
out
cmp
into
inc
add
and
mov
dec
mov
daa
int
xor
add
mov
jbe
in
adc
les
or
nop
add
cmp
xchg
or
inc
in
push
sbb
(bad)
mov
inc
jg
mov
out
ror
out
aam
cmps
and
xchg
pop
test
mov
cmp
fnstsw
mov
popf
cld
inc
adc
mov
xchg
ret
scas
aas
das
xor
xchg
push
xchg
cmc
pop
dec
mov
jmp
xor
mov
scas
out
xchg
dec
aaa
pop
pop
gs
scas
mov
dec
inc
data16
sbb
xchg
fistp
adc
xchg
stos
cs
cmp
xchg
shl
xlat
mov
xchg
shl
sbb
outs
or
push
inc
sbb
and
adc
dec
loop
daa
sub
jns
adc
lahf
sbb
jl
lock
xor
dec
pop
add
fst
add
fdivr
cmps
mov
inc
neg
cmp
in
fst
mov
cmp
sub
mov
and
lods
add
mov
sbb
xchg
repz
mov
pop
in
je
cmp
daa
ret
aas
mov
pop
in
jbe
iret
jmp
test
lock
mov
push
sub
cmp
xchg
mov
rol
cmps
leave
in
retf
cmc
jne
in
ins
mov
xor
jo
or
dec
jle
sbb
data16
xchg
stos
mov
push
scas
cmp
loopne
mov
pop
ins
arpl
pop
neg
jmp
jmp
popa
sub
xchg
out
mov
xor
pusha
jnp
xor
pop
mov
xor
dec
push
sbb
std
out
push
inc
cs
mov
repz
xchg
or
xlat
ret
fidiv
xchg
(bad)
mov
and
fcomp
sbb
or
lods
jne
es
hlt
sbb
pop
es
jg
and
inc
push
cmps
push
xor
sbb
fmulp
jae
int
mov
mov
sub
pop
mov
mov
sbb
test
mov
je
aad
cli
mov
fs
add
sub
fisubr
sub
sbb
(bad)
lock
stc
hlt
add
repz
outs
cmp
shr
jno
call
xor
fwait
inc
jno
push
add
int
out
loope
mov
clc
jns
mov
mov
lods
mov
loop
in
dec
nop
push
enter
jns
cli
xchg
sbb
daa
test
cmp
ret
leave
cmp
loop
je
sbb
retf
add
fidiv
mov
mov
fcom
xor
xchg
xor
sti
test
popa
mov
xor
ror
mov
ret
cmp
pop
or
dec
xchg
mov
popf
xchg
mov
or
push
(bad)
in
test
enter
xchg
mov
jb
push
ret
ret
sub
add
mov
jno
jp
je
cmp
inc
rcr
xchg
pushf
jmp
jge
test
dec
les
push
mov
lahf
aad
and
pop
sub
je
jbe
lahf
int3
pop
stos
popa
cs
inc
lahf
addr16
mov
jmp
xchg
xor
xor
jo
movs
jle
dec
retf
adc
test
data16
sub
jmp
cld
jo
adc
rcr
dec
in
(bad)
sar
pop
fdivp
out
xchg
fs
pop
stc
mov
inc
adc
lods
xchg
mov
cmp
into
pop
lea
xchg
push
add
lods
inc
inc
cs
push
add
mov
aaa
mov
loope
hlt
or
push
mov
and
inc
pusha
imul
inc
cmp
push
call
pop
bound
nop
lods
mov
je
test
xchg
loop
ins
xchg
pop
hlt
das
xor
or
jle
call
jl
or
(bad)
sub
jge
xchg
jb
iret
shl
and
jmp
mov
pop
scas
loopne
outs
out
mov
mul
inc
shl
xchg
pop
das
xchg
pop
mov
dec
stos
fmul
mov
jbe
mov
jne
cmp
cmp
or
pop
or
dec
sbb
test
rcl
test
xor
rol
fnstcw
movs
xchg
add
dec
pop
cs
mov
pusha
cmp
sahf
mov
loopne
jae
jmp
sub
xchg
lods
inc
xchg
and
mov
in
sub
pop
out
inc
sahf
sbb
call
mov
in
std
shl
cdq
std
addr16
ffreep
sbb
lahf
add
dec
mov
ins
xchg
outs
mov
and
add
mov
add
xor
fistp
sbb
aam
(bad)
movs
std
ret
mov
cli
repnz
stc
jae
test
adc
xchg
jmp
call
pop
and
gs
lods
mov
jns
rcr
mov
fmul
xchg
adc
or
ret
repnz
sub
(bad)
push
mov
xchg
data16
es
jae
stc
mov
std
addr16
mov
cmp
jns
stc
sub
dec
xchg
mov
ds
inc
int3
jge
loope
inc
cmp
aas
ja
in
push
xor
inc
push
mov
cs
or
unpckhps
or
jbe
mov
gs
xchg
lds
cdq
fdivr
fs
inc
in
and
jns
addr16
das
xchg
xor
out
mov
(bad)
jae
pop
rol
in
add
xchg
push
cmp
push
jae
fild
cmp
xchg
mul
jnp
adc
xchg
push
sub
add
lahf
ins
mov
xchg
test
test
into
sbb
mov
push
das
popa
retf
rol
sar
xor
jp
pusha
lea
dec
sti
xchg
sub
push
mov
mov
aaa
xchg
int
mov
cmps
mov
mov
mov
in
jne
xchg
jo
mov
mov
inc
xor
add
dec
inc
push
cmp
pusha
xchg
push
sub
rcr
mov
add
pushf
mov
cdq
or
mov
push
cmp
shr
loopne
and
ins
dec
cmp
mov
xchg
sub
sti
ins
mov
jle
pusha
pop
in
add
popa
pop
fidivr
add
sti
cmps
xchg
lock
shl
sub
inc
cmp
add
cmp
adc
xchg
aas
jo
jo
lea
ds
retf
in
mov
lods
mov
xchg
and
pushf
ds
ret
jge
sti
sub
pusha
pop
cdq
and
inc
mov
movs
nop
pop
push
fs
inc
out
and
jmp
pop
mov
imul
mov
xchg
loope
in
pop
call
xor
mov
mov
daa
push
push
(bad)
not
pop
js
movs
fwait
adc
xor
and
xchg
imul
xchg
jp
shl
test
cli
ins
xchg
add
jb
rcr
xchg
int
cmp
inc
sbb
mov
mov
clc
xchg
or
mov
push
and
xor
(bad)
sub
ffreep
inc
and
cmp
mov
lock
fdivr
movs
js
and
fdivr
xchg
push
sbb
ficomp
das
inc
ret
pop
sete
xchg
imul
mov
test
jle
jb
xor
hlt
dec
mov
cmp
push
and
lds
inc
pop
cmps
mov
cmps
mov
xor
jne
gs
fdivr
repnz
or
sbb
ja
mov
xor
fnsave
jecxz
call
xor
rol
or
fild
stos
jne
add
cmc
and
jne
push
mov
int
ret
cmc
xor
stc
cmp
cmp
les
imul
in
cmp
push
dec
sbb
pop
mov
push
xchg
mov
sbb
fs
ins
jmp
pop
dec
enter
sahf
xchg
jge
fbld
in
pop
push
in
sub
call
push
test
xchg
jle
mov
xor
scas
mov
and
and
xor
inc
loop
add
add
push
sbb
(bad)
cmp
push
js
fwait
jbe
xchg
inc
imul
jmp
cdq
sub
or
(bad)
push
stc
xchg
cmp
(bad)
dec
xchg
and
cmp
mov
xor
sub
out
inc
jne
fsubp
xchg
and
aad
and
enter
sub
loope
ret
retf
(bad)
daa
dec
xlat
je
cmc
pop
stc
inc
cmc
ret
popa
pop
jg
and
add
bound
add
std
mov
sub
xor
mov
xchg
cmc
ins
js
lods
jnp
mov
lods
ret
jbe
ja
in
stc
sub
cmps
in
add
cmp
in
sbb
mov
ret
js
push
mov
jle
ds
movs
retf
das
loopne
mov
push
and
in
jae
jnp
adc
pushf
sti
in
mov
jl
adc
xor
movs
sbb
scas
mov
xchg
into
mov
cli
xchg
xchg
out
lahf
xchg
lock
loop
cli
cld
xchg
mov
pop
jo
dec
mov
sbb
and
(bad)
loopne
xchg
or
mov
fwait
sub
mov
int
cld
dec
in
adc
lds
inc
hlt
adc
out
data16
xor
call
mov
sbb
je
cmp
jbe
aam
mov
(bad)
out
repz
jge
in
dec
dec
les
fs
fisttp
leave
jp
repz
mov
xchg
(bad)
push
cwde
mov
(bad)
std
mov
call
dec
xchg
push
sbb
lock
(bad)
push
jbe
mov
cld
jle
fbld
pop
pop
lods
jnp
xchg
(bad)
jg
ret
movs
inc
ins
sub
test
mov
(bad)
jns
pop
in
int
push
cmp
test
sbb
sbb
dec
jnp
mov
ja
sub
(bad)
loope
adc
mov
xchg
cmp
push
add
jmp
pop
fchs
lds
cmp
aad
aam
add
daa
shr
in
gs
mov
iret
popa
out
mov
xchg
push
lahf
js
mov
xchg
xchg
mov
fdiv
xchg
xlat
xlat
xor
inc
jae
or
int3
adc
mov
pop
ret
or
sbb
inc
add
xchg
sbb
mov
sub
ret
mov
sub
aaa
cmps
aam
jmp
call
mov
push
pushf
es
push
jnp
push
aaa
fist
jns
xchg
gs
adc
and
cmp
cmp
(bad)
fadd
rcr
mov
xor
mov
and
js
mov
jmp
pop
std
hlt
(bad)
pop
adc
pop
sub
outs
add
and
scas
js
lods
ret
lds
xchg
repz
or
mov
hlt
test
or
enter
xchg
or
cdq
test
add
cmp
jl
and
into
out
movs
aam
imul
add
jb
std
test
js
test
add
sub
inc
xor
lea
xor
bound
xchg
ror
adc
movs
mov
les
movs
cs
push
xor
ret
sar
in
cmp
adc
bound
repz
or
jne
in
or
not
xchg
outs
loop
pop
push
mov
push
mov
pusha
sbb
mov
ds
rcr
(bad)
stc
lock
sub
or
sub
mov
xchg
daa
ds
push
sub
jae
loop
je
cmc
mov
aad
xchg
inc
rcr
es
mov
jns
cdq
shl
jne
sahf
sbb
mov
loopne
cmp
pop
cmp
mov
je
and
in
cs
or
dec
ret
fs
jae
push
mov
xor
mov
es
push
fsubr
jns
loop
mov
pop
daa
call
pop
jae
lahf
cmps
and
mov
rcl
inc
(bad)
or
mov
cmc
nop
or
and
fwait
daa
cmp
and
jp
xchg
cwde
(bad)
xchg
jl
popa
xchg
inc
lock
ret
xchg
push
sbb
inc
and
(bad)
cmps
jne
sub
cdq
jbe
xchg
gs
loop
stc
dec
jp
jl
pop
fisubr
push
pslld
pop
cmp
xchg
cmps
hlt
jne
xchg
push
inc
sbb
aad
out
scas
ins
adc
xor
pop
mov
lahf
mov
dec
icebp
inc
and
js
mov
mov
sahf
mov
xor
xchg
fisubr
mov
add
(bad)
pop
ins
daa
cli
pop
jo
mov
lods
sub
xchg
cmp
sbb
test
nop
dec
add
mov
mov
repz
sbb
test
adc
cdq
push
and
out
xor
sbb
addr16
jb
in
in
adc
cmp
xlat
add
out
dec
mov
mov
out
dec
or
leave
jle
xor
pop
jp
dec
cmps
xchg
jnp
xchg
inc
pop
sbb
dec
sbb
xor
jae
ret
push
dec
cmps
xchg
out
jle
cmps
ffreep
out
push
in
fld
(bad)
test
push
mov
icebp
dec
sbb
sub
jp
lds
dec
daa
sbb
(bad)
cmp
and
cdq
popf
sti
dec
push
js
xchg
jg
lahf
ins
cmp
and
aam
les
cmp
and
push
(bad)
jle
ja
xchg
jg
in
lock
clc
push
fadd
xchg
dec
mov
jbe
sti
xor
repz
fstp
pop
sbb
mov
sub
jecxz
mov
jne
loop
test
test
cmp
in
add
fsubrp
xlat
cwde
test
xchg
jb
out
ja
push
xchg
(bad)
jo
xchg
xor
inc
pop
pop
xchg
shl
mov
in
es
pop
cmp
or
push
xchg
pop
dec
mov
inc
cwde
dec
loopne
hlt
inc
inc
push
repnz
cmp
hlt
out
leave
xchg
out
popf
cld
adc
jae
ja
shl
out
cli
xchg
push
mov
pop
repz
or
inc
mov
jmp
inc
pop
mov
fidivr
addr16
scas
repz
jmp
icebp
jne
(bad)
pop
sub
sub
and
adc
out
pop
pop
mov
fld
aam
and
jp
ja
jne
pop
pop
xor
fsub
daa
xchg
ficom
pop
sbb
cmps
clc
mov
icebp
ret
es
cmp
adc
jge
movs
xchg
aas
mov
fstp
sar
add
cwde
cmc
or
fsubr
jo
clc
xchg
mov
cmc
jnp
cmp
mov
pop
add
xor
mov
adc
dec
mov
xchg
rcl
sbb
mov
div
cmp
pop
pop
mov
push
jl
jmp
push
outs
mov
add
sbb
adc
scas
cs
add
mov
std
pop
push
sub
pop
iret
pop
xchg
stc
adc
jl
xor
data16
ret
fdivr
mov
xlat
xor
or
sub
mov
sub
jne
rcr
outs
iret
sub
test
aad
sbb
jb
pusha
or
and
mov
or
xor
icebp
in
add
jns
ret
or
pushf
imul
loopne
cdq
pop
in
xchg
add
jmp
cmc
stc
xchg
cmps
ret
addr16
xchg
fwait
cdq
pop
pop
out
cmp
or
dec
mov
lahf
in
xchg
or
pop
addr16
in
cdq
in
adc
loop
movs
xor
jmp
test
arpl
or
not
add
pop
test
xchg
ss
xchg
mov
js
push
pop
adc
sub
mov
icebp
stc
hlt
int
cwde
jmp
mov
inc
sbb
mov
cmp
mov
leave
jnp
ficom
add
jp
xor
xchg
pushf
ret
test
xor
jg
(bad)
jle
cmps
in
sbb
cmp
iret
(bad)
test
push
cli
xchg
es
mov
push
jns
mov
test
mov
add
int3
and
jne
ins
shl
aas
cmps
pop
sbb
or
outs
xchg
push
ss
mov
int3
jne
jg
ins
fldenv
pushf
mov
test
out
stos
xchg
retf
push
jne
les
mov
cmp
or
mov
ror
lods
add
mov
fnstsw
push
daa
push
mov
add
pop
jnp
mov
mov
pop
js
and
data16
jns
mov
or
hlt
or
push
jne
mov
sub
mov
enter
jo
jmp
mov
xor
sub
sbb
jle
sbb
fsubr
jne
or
ret
mov
xchg
shl
fwait
jbe
in
cli
stc
xchg
pusha
je
ss
pop
sub
retf
adc
push
and
xchg
inc
xchg
jne
ret
dec
push
jmp
cmp
mov
shl
into
aad
sbb
cmp
xchg
dec
cli
adc
or
push
stos
jns
xchg
cmp
ficomp
test
mov
sbb
call
sbb
xor
and
imul
pushf
call
pop
data16
(bad)
mov
out
ja
add
xchg
mov
mov
je
pop
pop
test
sub
mov
les
es
imul
movs
jnp
jecxz
mov
jne
retf
jle
xchg
xchg
mov
mov
imul
push
jmp
mov
dec
xchg
dec
xchg
xor
bound
mov
std
fiadd
lea
fstp
pop
shr
sbb
push
cmp
push
mov
repz
sbb
fld
xchg
out
lods
push
dec
in
js
adc
inc
popf
inc
fdiv
rcr
fwait
loopne
icebp
les
push
and
cmp
jbe
stos
ret
mov
cli
mov
cmc
jle
xchg
scas
jae
jge
pop
xor
cmps
mov
rcr
cmp
fs
jmp
pop
push
mov
jp
adc
sbb
or
push
or
leave
jns
jmp
dec
jecxz
cwde
mov
movs
xchg
dec
xchg
adc
sbb
push
cmp
aad
mov
mov
pop
and
xor
push
xor
jns
(bad)
or
xor
retf
pop
sub
push
adc
in
(bad)
repz
ds
pop
(bad)
clc
pop
into
jge
(bad)
pusha
push
jae
clc
cmp
js
ret
xchg
leave
call
cmp
xor
cmps
or
je
push
stos
cmc
ds
jg
push
in
cs
or
sbb
cdq
dec
out
lea
and
(bad)
gs
stos
push
pop
loopne
or
pushf
in
out
out
mov
jle
pop
aas
scas
(bad)
pop
xchg
test
mov
jae
add
pushf
jo
pushw
push
cmp
dec
cmc
into
scas
mov
pushf
jno
jo
jge
mov
mov
sub
ret
or
lea
pop
cmp
fdiv
or
nop
pop
push
add
shl
adc
cmp
sub
ja
jecxz
jmp
cdq
jbe
mov
cli
jge
xchg
fidiv
inc
les
jle
push
jne
cmp
push
popf
adc
cli
xchg
nop
iret
fidivr
repnz
cs
jge
mov
pop
fwait
mov
ror
add
mov
mov
push
fidiv
dec
ret
pop
push
stos
leave
xor
jae
icebp
out
mov
cmps
pop
test
and
das
xor
mov
cmp
add
(bad)
mov
call
cmc
aaa
jns
pop
push
xchg
call
push
leave
loop
fdiv
xchg
cs
jns
data16
imul
pusha
jp
sti
dec
sbb
iret
ds
dec
ins
xlat
mov
rol
retf
jne
jmp
add
lods
rcr
cmp
cdq
ins
jno
adc
fst
or
faddp
xchg
mov
mov
call
(bad)
jo
ja
imul
and
push
lahf
mov
ret
sub
cmp
test
stc
add
(bad)
addr16
fucomi
pop
loopne
and
shl
jge
in
out
cli
adc
xchg
fmul
mov
cmps
mov
mov
imul
mov
jp
adc
sub
xchg
push
pop
sub
jmp
cwde
ret
lock
clc
and
xor
je
add
rcl
dec
and
mov
inc
sbb
ret
into
in
cmp
cmps
and
(bad)
adc
out
repz
or
ins
(bad)
sbb
jmp
cmp
in
inc
lea
fs
sti
xchg
and
rcr
es
out
sti
dec
cld
or
loope
je
in
xchg
scas
push
in
mov
sbb
adc
mov
adc
pop
fst
jle
arpl
icebp
or
cld
dec
ret
(bad)
cmp
mov
and
add
jb
or
mov
xor
inc
xor
pop
push
mov
mov
idiv
xchg
mov
jge
xchg
cmp
jns
jge
push
mov
xlat
lahf
mov
or
(bad)
push
push
lods
imul
mov
jg
cdq
out
sti
add
jns
pop
xor
(bad)
mov
dec
jg
cmps
inc
enter
clc
cwde
dec
jb
xchg
xchg
cmp
push
xor
mov
sar
xor
jmp
bound
into
add
and
jmp
call
fdivr
mov
out
jp
add
pusha
iret
movs
call
and
pusha
xchg
iret
xchg
pop
int
sbb
stos
push
and
loopne
mov
or
inc
push
iret
mov
xor
repz
lds
enter
dec
ss
pushf
xchg
and
pushf
sub
adc
jp
xor
dec
iret
imul
pop
xor
cmp
scas
mov
pusha
sbb
or
lods
xchg
mov
ja
fstp
test
jmp
and
sbb
inc
mov
aas
movs
out
mov
outs
cmp
ret
xchg
inc
dec
cs
push
call
xchg
addr16
imul
jns
xchg
sbb
les
add
fdiv
loope
retf
and
outs
mov
xchg
into
jne
call
fidivr
shl
in
int
xchg
adc
fld
stos
dec
js
stos
fmul
enter
jle
cmp
xchg
les
push
mov
xchg
gs
scas
inc
xchg
or
pop
xchg
mov
ins
loopne
xor
gs
mov
rcl
sub
mov
jmp
push
addr16
sbb
mov
inc
rcr
fbstp
int3
les
mov
ret
or
popf
out
dec
ror
dec
cmp
jmp
stc
mov
pop
mov
sub
xchg
stos
std
repz
sbb
pop
cwde
add
push
and
mov
je
jmp
daa
push
or
add
jg
or
(bad)
cmc
adc
gs
jo
add
fsubr
xchg
xchg
fidiv
push
or
push
inc
mov
cld
cmps
jnp
dec
xchg
sbb
dec
lahf
dec
cdq
push
pop
sub
xor
mov
mov
push
jp
pop
psraw
inc
retf
jae
mov
xor
fadd
xor
les
je
mov
sbb
scas
clc
cld
sbb
(bad)
cld
pop
xchg
ja
jg
enter
aam
fs
pop
sub
pushf
fwait
lods
dec
jmp
push
jns
pop
jo
in
cmp
sbb
or
imul
mov
pop
pusha
stos
xchg
repz
dec
jle
rcl
mov
inc
pop
movs
pusha
dec
cld
frstor
jge
movs
repnz
xor
shl
push
xchg
pop
jg
pop
in
xor
dec
lea
retf
sbb
adc
mov
test
jne
in
xchg
xchg
sbb
xchg
mov
sub
fcom
push
add
mov
adc
mov
and
push
jp
jge
sbb
mov
into
mov
imul
inc
in
inc
outs
mov
les
cld
fmulp
rcr
or
sub
mov
cmp
push
cwde
sbb
or
push
ror
adc
repnz
jmp
pop
add
mov
pushf
xchg
lods
mov
add
aad
jb
(bad)
clc
mov
jne
cmps
ja
and
popa
je
es
dec
scas
xor
(bad)
sub
shl
jmp
sti
or
mov
push
fcom
fstp
inc
lahf
cli
sbb
add
ins
pusha
lahf
fs
push
push
xor
jne
loopne
in
and
and
ja
sti
cli
loope
cld
adc
sub
call
in
arpl
js
outs
outs
call
pushf
in
or
fist
xor
mov
and
stos
ja
in
push
xchg
mov
xchg
push
xlat
mov
jp
lods
lds
cmc
andps
call
jle
cmps
jp
pop
jmp
dec
ret
jo
hlt
dec
mov
jp
jp
in
mul
iret
push
hlt
(bad)
out
xchg
fs
adc
popa
mov
ffree
rcr
cmp
in
pushf
dec
cmp
loop
inc
mov
cmp
les
out
pop
ret
xor
dec
arpl
syscall
xor
pop
cdq
(bad)
xor
out
pop
mov
xor
loop
stos
sub
fidivr
les
nop
gs
(bad)
or
mov
xchg
xor
dec
shl
push
add
ins
sbb
xchg
cmp
cmc
push
xchg
fstp
clc
push
daa
ja
(bad)
fsubr
push
std
pushf
and
push
jecxz
and
icebp
idiv
sub
jmp
retf
pushf
fsubp
scas
retf
pop
jbe
mov
jle
jbe
scas
pop
mov
ret
jp
jae
and
xor
cmc
xchg
cmp
push
and
jmp
retf
push
inc
jp
adc
fdivr
sub
rcr
arpl
dec
sbb
xchg
pop
and
push
push
dec
clc
jae
mov
jae
cmp
sahf
fdivr
mov
jle
dec
mov
jg
xor
mov
sub
rol
inc
sub
imul
pushf
out
shr
mov
mov
pop
xor
mov
mov
test
js
add
push
sub
call
sub
fs
jmp
mov
xchg
inc
jmp
pushf
xchg
sub
inc
in
test
js
push
cmp
into
aam
mov
xchg
cmp
mov
jns
lds
mov
xchg
or
not
ds
pop
pop
push
cmc
aam
clc
inc
inc
mov
add
nop
js
loop
mov
cli
pop
sahf
jbe
lock
sub
stos
pop
leave
cmp
sbb
pop
xor
ds
outs
out
shr
jp
sbb
mov
and
push
xchg
sub
call
fdivr
push
sub
adc
dec
cmp
hlt
jge
jp
cmp
adc
xchg
es
in
fcmovb
ja
mov
scas
retf
mov
xor
pop
mov
and
test
mov
mov
cmps
into
addr16
aam
sub
xor
pushf
lods
adc
sbb
out
add
mov
push
lea
(bad)
int
xchg
punpckhbw
cwde
pop
fld
xchg
cmps
cmp
inc
mov
daa
cwde
mov
(bad)
repnz
xchg
mov
push
and
add
jmp
pcmpeqw
mov
pop
xchg
cmp
(bad)
adc
xchg
(bad)
pop
and
call
aad
mov
sahf
inc
jmp
in
popf
or
inc
les
enter
jae
les
lock
push
hlt
or
sbb
movs
add
je
adc
push
call
sbb
data16
mov
mov
cmc
retf
or
ins
jo
mov
or
fadd
leave
cmp
push
dec
(bad)
sar
fsubr
mov
fcom
mov
mov
cmc
pop
pop
or
inc
jnp
rcr
push
xor
xor
test
mov
push
js
outs
stc
ret
into
mov
loopne
ds
scas
out
push
icebp
std
test
jge
xchg
or
xchg
ficomp
pop
push
inc
(bad)
ss
scas
cmp
stos
fdiv
sbb
mov
jbe
cld
test
hlt
push
cmp
sub
nop
dec
push
push
ror
addr16
rcl
add
hlt
ins
xchg
sbb
cmp
jle
jle
xor
jmp
xor
mov
xchg
lods
rol
xor
or
lock
mov
dec
pop
pop
movs
cld
mov
sahf
sbb
pop
es
pop
sti
jnp
xchg
and
cmp
lea
(bad)
out
(bad)
cmp
or
push
imul
ja
outs
loop
icebp
ins
ds
lds
adc
jge
cmps
loope
inc
std
adc
xor
into
icebp
push
paddsw
outs
call
xchg
lahf
loopne
jne
ja
cmp
clc
mov
mov
pop
(bad)
mov
xchg
xchg
sbb
push
cmp
lea
cld
ret
sbb
xchg
push
int
cmp
outs
fidivr
xor
das
es
scas
sub
(bad)
clc
mov
shl
retf
xor
(bad)
jmp
add
movs
loop
push
(bad)
jnp
repz
push
mov
xor
xor
in
inc
pop
push
cmp
inc
addr16
sub
clc
js
sbb
scas
es
xchg
or
out
mov
stos
pop
out
in
outs
das
sbb
js
push
mov
and
push
sub
inc
jbe
add
mov
sbb
fadd
push
ror
xchg
leave
xchg
sub
push
into
in
rep
rcr
add
lock
imul
lock
adc
sub
and
pop
cmps
push
cmp
cmc
(bad)
(bad)
cld
imul
movs
fld
xchg
(bad)
in
popa
inc
push
xchg
dec
ins
add
iret
shl
or
(bad)
outs
mov
cmc
adc
xchg
sbb
and
jne
aam
repz
inc
pop
addr16
or
push
data16
sbb
lock
(bad)
movs
retf
iret
outs
test
das
pop
shl
mov
xchg
jecxz
aaa
fwait
arpl
hlt
mov
adc
dec
das
mov
mov
loopne
and
adc
xchg
cmps
inc
and
enter
sbb
mov
or
fdivr
arpl
pop
xor
mov
ror
int
fild
xlat
push
xchg
je
add
jle
pop
xor
call
cwde
das
sub
or
test
xor
pop
dec
xchg
mov
(bad)
nop
js
rol
push
imul
ficom
aas
movs
mov
push
xchg
jle
cmp
pop
mov
fwait
pmaddwd
xchg
icebp
test
arpl
rcr
fild
add
ror
push
mov
das
xchg
sar
js
xchg
xor
inc
inc
jmp
cmp
or
jne
mov
inc
(bad)
cwde
outs
push
ins
or
jne
mov
in
inc
test
xlat
jne
sub
fcomp
jmp
and
fistp
adc
cmps
xchg
and
jmp
pop
les
pop
xor
mov
mov
xor
int3
out
out
rcr
xor
xchg
dec
arpl
add
mov
pop
push
cld
pop
movs
cmc
push
add
sti
dec
int3
je
push
scas
cmp
pop
sbb
retf
bound
push
jne
jae
mov
imul
iret
cwde
push
cmp
push
in
call
jge
gs
test
test
adc
js
dec
rol
mov
std
or
inc
cmp
adc
and
test
jmp
rcl
sti
xchg
adc
push
cwde
adc
jbe
pop
out
push
les
cld
(bad)
(bad)
loopne
xchg
or
pop
fndisi(8087
and
adc
cmps
xchg
dec
lods
fwait
xor
jg
stos
cli
inc
cmp
pop
(bad)
xchg
sub
inc
dec
sbb
xchg
jb
xchg
inc
mov
jecxz
mov
jmp
cmp
(bad)
fs
jae
(bad)
sub
and
push
inc
xchg
aaa
mov
stc
xchg
add
fadd
je
aam
sub
jge
cwde
lods
sub
test
fwait
mov
jg
cdq
test
jle
rcr
addr16
push
jp
bound
mov
mov
sbb
std
or
in
call
fst
(bad)
fild
mov
adc
lds
push
mov
xchg
mov
pop
jnp
movs
cmp
js
pop
cdq
inc
xchg
jp
daa
xchg
mov
or
sbb
stos
sahf
lods
arpl
clc
into
loop
dec
nop
ins
(bad)
xchg
inc
mov
es
sti
in
es
int3
cmps
ds
jecxz
or
push
add
cmps
or
mov
jge
test
adc
dec
je
dec
jae
fstp
push
shl
(bad)
sub
xor
and
test
or
lahf
(bad)
std
ds
sub
xor
mul
out
push
movs
or
std
adc
js
xchg
fist
fldenv
ret
shl
inc
push
push
pop
adc
mov
dec
sub
inc
adc
dec
popw
loope
inc
js
xchg
cmps
frstorw
aam
test
clc
pop
(bad)
out
(bad)
adc
hlt
pop
pop
inc
xchg
pop
and
jae
and
jmp
leave
cld
ret
(bad)
cmp
cmp
inc
or
ret
lock
cs
mov
es
and
lahf
inc
call
xlat
fst
inc
dec
sub
mov
mov
rol
stos
fadd
adc
ret
ja
les
jno
jmp
jno
pushf
mov
or
sub
push
data16
(bad)
rol
daa
and
mov
fs
cwde
sub
sti
inc
mov
lahf
inc
jne
or
je
sub
not
and
xchg
retf
outs
and
das
and
xor
xchg
lea
retf
mov
fiadd
xchg
scas
or
mov
xchg
xor
and
jae
stos
sbb
dec
int3
mov
addr16
loope
in
or
test
dec
cli
call
jo
push
jmp
sub
mov
imul
arpl
lods
mov
retf
xchg
loope
mov
bound
ins
enter
mov
mov
sub
popf
dec
dec
mov
xchg
or
push
sbb
add
sub
aam
cmps
fcom
das
sub
xchg
cmp
inc
jne
ficom
dec
jmp
add
jp
(bad)
sahf
xor
jge
xchg
cs
jge
jg
or
in
add
not
out
dec
fcomp
push
xchg
sbb
jae
adc
and
mov
adc
hlt
fwait
jge
fmul
xchg
shl
(bad)
ins
sbb
sar
jp
arpl
neg
cmp
mov
sub
dec
mov
stc
loope
jb
fcmovbe
sbb
stos
add
out
sbb
dec
push
add
jge
mov
lods
pop
push
jne
and
xchg
jns
outs
adc
cmp
stc
mov
jmp
daa
sub
sti
test
add
cmps
stos
aam
cmps
cwde
ret
push
imul
pop
int3
push
icebp
dec
aad
sahf
(bad)
fbstp
adc
sar
dec
imul
out
or
pop
sti
je
push
cmps
mov
lahf
clc
dec
addr16
mov
xchg
push
jp
pushf
xlat
push
adc
not
dec
rcr
jge
sbb
ds
bound
pop
stc
cld
and
jge
sub
loopne
mov
pop
xor
fidivr
int3
pop
push
jge
call
mov
mov
ror
or
fld
sbb
repnz
push
loop
sub
retf
repnz
adc
mov
cmp
shr
shl
test
and
mov
ror
sub
jg
xchg
data16
push
call
rol
pop
adc
mov
fdiv
fwait
push
adc
outs
test
rcr
mov
mov
shl
adc
xor
xor
pop
ret
mov
out
sub
adc
jnp
or
add
int
fdiv
xchg
xchg
sbb
pop
mov
xor
jnp
or
adc
into
test
test
dec
cmp
xchg
cmp
das
pop
loop
repz
rcr
cmp
pop
ins
pushf
add
cdq
fnstsw
test
push
xchg
shl
enter
dec
sbb
sti
fdivr
pop
(bad)
adc
cwde
hlt
jmp
mov
mov
jmp
(bad)
outs
aam
in
repz
call
cwde
jne
xchg
xchg
mov
xor
mov
cmp
mov
sub
shl
and
or
dec
or
mov
ja
cmp
sub
popf
ror
aad
scas
pop
mov
lods
xor
or
sub
xchg
sub
xchg
xor
iret
mov
cmp
xchg
push
jmp
scas
mov
sbb
retf
out
clc
mov
loope
jl
pusha
adc
in
xchg
jg
or
mov
idiv
cld
fidivr
xchg
push
cmp
cwde
adc
test
pushf
xor
add
pop
pop
test
cmp
fidiv
mov
xor
jp
mov
sub
mov
(bad)
and
pop
dec
jg
lods
sbb
push
call
not
data16
add
test
or
stos
jo
fdivr
inc
repnz
neg
cli
sbb
(bad)
mov
xchg
push
inc
pop
cdq
mov
jne
fdivr
jbe
sbb
sbb
loope
(bad)
fidiv
jmp
mov
outs
shl
jl
sub
out
xchg
mov
push
jp
pop
cwde
js
jmp
cmc
arpl
test
add
xchg
(bad)
mov
dec
or
test
int
(bad)
adc
inc
ror
test
add
jne
mov
movs
mov
sub
adc
cld
jmp
call
cmp
cmc
js
xchg
inc
int
xor
ins
das
mov
push
xchg
push
int
test
in
and
dec
adc
shl
sub
inc
stos
mov
fisubr
inc
inc
js
ret
mov
pushf
into
hlt
div
fild
retf
mov
mov
mov
adc
fcmovnb
dec
lods
lods
adc
ret
cmp
dec
das
jg
mov
jecxz
push
pop
jo
or
mov
or
push
adc
stos
shl
xchg
cdq
call
ja
cld
(bad)
jmp
lea
pop
add
call
xchg
dec
mov
add
sbb
retf
push
cmp
or
adc
jnp
pop
frstor
inc
imul
(bad)
cmps
rcr
xchg
jmp
xor
xchg
int3
xor
int3
jb
js
aas
mov
and
hlt
in
sbb
ret
pop
pop
cli
push
loop
sbb
out
sub
sbb
jp
fs
mov
ficom
fidiv
test
(bad)
adc
out
in
lahf
stos
jg
rcr
jbe
movs
add
pop
pop
leave
nop
lods
icebp
test
xchg
push
inc
jns
loopne
mov
adc
add
add
sbb
adc
mov
lock
stos
and
xor
jecxz
jne
mov
or
jmp
and
mov
int3
movs
call
pop
fild
jl
adc
sahf
push
lds
cmp
sub
(bad)
iret
pop
sbb
and
jl
mov
in
and
loopne
lods
ror
rcr
repz
pop
pop
es
fimul
fstp
sbb
test
addr16
jp
jmp
je
mov
cli
xchg
(bad)
mov
in
add
enter
add
lods
jne
xor
in
jo
push
pop
jmp
imul
mov
mov
repz
push
and
mov
push
test
imul
shr
fcomp
push
lods
aam
pop
mov
out
ja
xchg
and
test
out
jmp
(bad)
jge
mov
cmps
push
xor
addr16
jp
lock
dec
dec
dec
ds
cld
rol
xor
jl
mov
retf
jmp
ja
in
enter
out
jle
xchg
lods
pop
repnz
fwait
mov
mov
jmp
ret
pop
adc
ret
dec
fs
push
add
in
mov
in
mov
xchg
cmp
sub
adc
lods
mov
and
and
imul
adc
test
cwde
je
dec
je
dec
cld
xor
and
das
push
pusha
scas
dec
xchg
pop
ret
mov
and
jb
xchg
and
(bad)
lods
lock
outs
dec
int3
cli
jns
jae
movs
fbld
push
xchg
xchg
jnp
adc
test
aam
ja
jne
xchg
mov
xchg
clc
jmp
pop
icebp
enter
out
mov
cmp
mov
push
fnstsw
sub
stos
xchg
ret
(bad)
jae
mov
xchg
ds
adc
pop
and
xchg
(bad)
adc
cld
mov
pushf
sub
add
mov
mov
mov
jne
pop
in
js
sub
jne
hlt
mov
dec
inc
sub
ret
xchg
mov
push
dec
cmc
and
or
inc
or
cli
rcl
mov
cwde
(bad)
cs
stos
add
jle
movs
outs
out
in
mov
ret
adc
out
lds
or
push
fsubr
ret
pop
inc
cmc
mov
xchg
cmp
leave
add
int
repz
jo
bound
xlat
dec
and
dec
xchg
jecxz
in
fst
xchg
inc
xor
sub
mov
outs
imul
test
cld
in
(bad)
pop
addr16
lods
mov
js
les
jp
in
xchg
aas
xchg
jge
lods
jmp
(bad)
jno
jae
sub
ins
cmps
std
call
jmp
sbb
push
iret
leave
xor
push
ret
xchg
xor
mov
mov
mov
fs
pop
inc
pop
rcl
enter
or
cmp
add
mov
pusha
loopne
inc
repz
jnp
mov
xchg
push
cli
jp
push
js
stos
sub
xchg
(bad)
mov
shl
fst
push
ja
cmp
mov
sub
xchg
sbb
loopne
mov
push
sub
mov
xchg
(bad)
cmc
xor
jmp
test
jbe
push
stc
mov
mov
mov
xor
shl
mov
es
jp
mov
jne
xchg
or
icebp
(bad)
cmps
dec
xor
xchg
xchg
xchg
sub
idiv
sbb
and
xor
(bad)
arpl
add
inc
fild
push
loopne
pop
scas
cmp
lds
adc
mov
and
inc
popf
mov
inc
imul
(bad)
and
mov
sub
jbe
pop
mov
in
pop
jo
push
cmps
cmp
push
adc
cmp
sbb
adc
jmp
(bad)
sub
ins
cmp
ja
js
and
dec
in
dec
xor
call
xchg
inc
push
inc
mov
dec
outs
push
int
iret
(bad)
mov
mov
pushf
(bad)
xor
jne
jecxz
fisttp
dec
icebp
mov
std
push
and
addr16
adc
sbb
call
mov
in
xor
cmp
inc
xchg
sub
pop
aam
mov
xor
stos
jbe
les
jno
int3
xchg
push
aam
add
scas
jle
cmp
mov
push
or
(bad)
jae
sti
popa
mov
adc
xchg
push
xor
call
rol
out
pushf
xchg
sbb
cli
mov
and
je
scas
and
xchg
push
dec
jmp
cdq
test
scas
jp
lods
or
lds
lods
add
test
hlt
sbb
xor
push
push
jne
xchg
das
int3
mov
retf
add
and
inc
(bad)
(bad)
cmp
rcl
pop
pop
adc
xchg
mov
ret
hlt
test
push
dec
xor
add
loopne
leave
in
xchg
pop
cmp
xchg
dec
sbb
sub
outs
in
lea
push
mov
push
int3
push
sar
and
add
push
mov
sub
cli
cmp
mov
movs
dec
xchg
fnstenv
and
inc
adc
into
pop
lahf
loope
push
push
ret
(bad)
stc
and
call
jp
pop
cld
xchg
sbb
les
jae
or
sub
adc
sbb
jmp
add
mov
popa
add
push
cmc
jle
call
sub
fisubr
sub
push
add
sar
adc
fs
sar
stos
in
loopne
iret
inc
jae
mov
fld
iret
and
mov
jge
push
lahf
arpl
cmp
cmp
sub
add
xchg
cmp
popa
loop
ltr
cmp
jns
popf
das
in
dec
push
mov
add
loope
imul
(bad)
and
rol
cdq
and
mov
inc
ss
pop
xchg
(bad)
dec
sbb
rol
pop
hlt
jmp
(bad)
mov
mov
dec
or
aam
sub
add
ret
aas
jl
and
pop
cmc
xchg
xor
iret
mov
push
fiadd
in
pop
mov
add
nop
pushf
ins
push
xchg
sbb
mov
xchg
rol
jmp
not
push
push
mov
cmps
dec
test
sub
cmps
jle
xchg
pop
push
mov
jecxz
pop
xor
in
add
and
imul
jne
in
jo
push
pop
and
xchg
dec
sbb
imul
xchg
xor
enter
add
sbb
in
sub
add
jle
shl
or
fsub
jae
xor
add
and
push
mov
jmp
pop
dec
add
sub
fst
dec
outs
ret
test
lods
push
int
fldenv
fmul
push
xor
jae
xchg
cmp
adc
fwait
push
push
call
adc
xchg
mov
call
into
sub
dec
fimul
sbb
push
sub
outs
imul
loopne
or
sub
xor
adc
xchg
pop
jnp
xchg
ss
and
sbb
ins
cmp
xchg
push
xchg
and
xor
pusha
mov
or
sti
mov
fs
imul
fstp
sub
jb
add
lahf
ficom
mov
push
jmp
aas
shl
jbe
retf
data16
bound
mov
mov
cmp
dec
sahf
jb
xchg
retf
cmp
ja
sub
aad
jne
(bad)
in
mov
das
jbe
xchg
xchg
repnz
fucompp
mov
xchg
shl
push
shl
cmp
in
std
mov
xchg
xor
mov
in
and
movs
call
push
popa
addr16
xchg
sub
(bad)
mov
adc
adc
xchg
cmp
mov
dec
mov
xchg
scas
aaa
pushf
xor
out
xor
imul
rcr
jge
scas
test
out
and
xlat
dec
cmc
test
mov
xchg
repz
int3
cdq
sbb
push
out
arpl
scas
lds
add
(bad)
xor
lds
(bad)
mov
sbb
push
repz
pop
inc
rol
and
daa
add
pop
clc
push
sub
mov
sub
cmp
adc
sbb
lock
cmp
cmp
cmp
mov
sbb
dec
xchg
fs
jnp
out
imul
adc
pop
and
pop
cmp
fld
pop
data16
int
pop
jno
loope
push
cmp
ins
adc
(bad)
repz
cmp
jmp
lods
jmp
pop
sbb
xchg
push
pop
jb
and
mov
pop
cmps
in
jp
and
pop
add
inc
push
mov
jns
movs
xchg
cwde
jns
push
sub
cdq
pop
xor
pop
push
jg
fcmovu
js
push
xchg
cmp
std
inc
fdivr
lds
test
cmp
sbb
in
jns
inc
mov
fisttp
rol
addr16
push
xlat
and
pop
test
ret
inc
inc
cmp
add
or
mov
and
mov
push
xor
fcom
jmp
aad
pop
jb
xor
and
mov
call
pop
xchg
test
ficomp
mul
fist
test
popf
xor
sub
pop
dec
mov
sub
xor
iret
or
hlt
jbe
mov
shl
cmp
js
rcl
fbstp
fcomp
adc
retf
retf
jle
fs
(bad)
jo
arpl
stc
es
sar
sub
jp
xchg
cmp
mov
or
cli
retf
loop
fadd
or
dec
mov
xchg
inc
fdivr
out
(bad)
mov
adc
and
pop
push
adc
mov
mov
loopne
sub
cmp
dec
sbb
addr16
mov
cmps
mov
jns
loop
mov
sbb
jle
retf
xor
into
jnp
xor
xor
xchg
push
inc
sub
in
dec
inc
arpl
in
mov
sub
int3
test
repnz
test
cmps
sahf
rol
sub
inc
pop
jae
mov
cmp
ficom
inc
loopne
cmp
push
pop
fs
jle
xchg
sbb
xchg
imul
cmp
pop
sbb
mov
jg
sub
inc
adc
push
sbb
sub
adc
mov
push
(bad)
cmp
(bad)
or
not
cmp
shl
pop
or
mov
and
aas
and
push
xchg
pop
jp
loopne
push
aam
rcr
xchg
add
xor
pop
(bad)
jne
dec
mov
mov
je
stos
sbb
retf
sub
mov
ret
or
xchg
mov
pushf
sub
push
cmc
push
fs
jne
xchg
xor
cli
pop
pop
sub
mov
ror
cs
ss
inc
jo
aaa
cmp
add
adc
jle
mov
enter
int
dec
jp
ins
aad
dec
loope
(bad)
xor
push
mov
push
sbb
mov
sub
mov
xchg
ds
and
sar
cdq
cmp
ret
mov
mov
jp
xor
or
cwde
jp
push
sub
push
in
xchg
push
imul
and
shl
add
xchg
test
daa
sbb
add
int
jmp
mov
xor
sbb
aas
and
push
popa
(bad)
jbe
xchg
sbb
iret
and
add
or
xchg
sahf
adc
test
push
xchg
jbe
sub
sar
xor
mov
je
stc
jns
int
and
repnz
sbb
mov
and
in
sbb
pop
leave
cwde
sub
aam
pop
jae
loopne
push
aam
es
imul
pop
sti
shl
add
mov
pop
mov
pop
xlat
xor
mov
sar
aad
ret
sar
dec
mov
jns
mov
jp
jecxz
xlat
pop
outs
out
mov
xor
in
into
(bad)
shr
cwde
pop
mov
lods
loop
scas
shl
or
xchg
scas
fcomp
call
mov
pop
loopne
push
call
adc
add
test
jmp
repz
in
and
adc
push
sbb
push
imul
sbb
mov
movs
movs
fdivr
jae
inc
sub
pop
outs
bound
hlt
jno
mov
test
outs
or
add
retf
push
xchg
sar
xchg
loopne
nop
in
jmp
xor
sbb
sub
or
mov
dec
or
in
bound
fdivr
rol
aam
push
xchg
dec
jge
adc
xchg
xchg
push
mov
mov
pop
iret
hlt
test
aad
or
xchg
or
pop
push
inc
out
sub
movs
(bad)
fbstp
sub
loop
sub
ret
push
cmp
(bad)
pop
stc
ret
xchg
popf
mov
push
ja
xchg
jo
jle
(bad)
clc
dec
adc
pop
in
into
ins
adc
mov
sbb
lahf
cs
cmp
mov
jecxz
jae
imul
ret
iret
fiadd
sub
in
loopne
dec
mov
enter
jg
xchg
fwait
dec
sub
out
aaa
xor
xchg
jle
jg
dec
push
push
test
ret
sub
sub
sub
ins
jns
or
inc
mov
clc
call
jns
mov
call
jl
repnz
push
mov
push
inc
lods
(bad)
in
jb
(bad)
mov
push
cmp
out
or
push
push
push
mov
dec
cld
and
mov
in
cmp
(bad)
int3
(bad)
or
clc
add
sbb
pop
jo
iret
jp
ins
(bad)
scas
cld
sub
inc
xchg
push
cwde
and
xchg
sub
push
jge
pop
jecxz
cmp
jns
(bad)
push
lods
hlt
xor
in
or
push
int3
inc
dec
mov
add
cmps
ja
xchg
clc
(bad)
test
fwait
inc
js
repnz
hlt
movs
mov
xor
and
jge
int
and
push
sar
dec
pop
cmp
(bad)
xchg
dec
or
push
xchg
mov
adc
mov
jp
rol
ss
rcr
js
enter
lds
xchg
xchg
out
mov
cmp
aaa
retf
sbb
mov
lea
das
sbb
fwait
cmp
rcr
push
dec
or
cmp
repz
jl
sbb
iret
push
jl
jo
mov
addr16
cmp
xor
xchg
push
xchg
dec
sub
in
fdivrp
add
mov
cmp
push
dec
rol
repz
mov
jns
mov
sub
sub
jns
mov
repz
les
ja
aam
mov
and
adc
jmp
adc
fistp
xchg
mov
cs
add
test
dec
push
push
cmp
je
lock
out
iret
push
mov
xchg
cld
jae
aam
jmp
cmp
les
rcl
cmps
stos
jno
dec
mov
and
xchg
retf
jne
adc
sar
xor
call
mov
and
inc
es
lods
aad
pop
in
in
or
arpl
js
adc
dec
jno
js
in
in
add
push
or
cmp
(bad)
jmp
pop
xor
stos
div
mov
pop
mov
int3
jno
dec
push
sub
iret
iret
and
mov
in
shl
xchg
sbb
or
scas
pop
xchg
mov
aad
fmul
ins
add
retf
add
out
mov
in
and
lea
pop
sub
cld
icebp
pop
in
and
in
inc
repz
es
cli
sar
addr16
pop
push
outs
mov
data16
out
adc
cmp
jno
repz
add
mov
out
cmc
adc
jne
in
push
sub
mov
rol
(bad)
or
ret
and
push
xchg
inc
pop
sub
dec
mov
jo
(bad)
push
push
dec
dec
pusha
sub
sbb
call
dec
scas
pop
imul
retf
xchg
push
stos
je
xchg
(bad)
and
cmp
mov
adc
js
cmovs
push
mov
aam
dec
inc
and
fdivr
daa
mov
pop
pushf
sahf
mov
(bad)
pop
in
xor
jmp
sub
scas
jg
adc
adc
jp
lahf
mov
or
jne
adc
push
push
mov
cmps
jae
jle
lock
inc
jnp
jae
test
repz
dec
add
mov
dec
jecxz
cmp
mov
das
inc
and
jmp
arpl
adc
(bad)
xor
ds
jmp
mov
bound
dec
cmp
ins
or
and
ins
mov
push
retf
sbb
jle
les
(bad)
lods
xchg
xor
ret
int3
push
arpl
push
daa
hlt
test
add
xchg
mov
sbb
xchg
mov
aad
and
mov
push
mov
xor
sub
(bad)
stc
cmp
adc
rcl
mov
xor
ret
jne
cmps
cmp
retf
sub
xchg
out
int
adc
mov
push
clc
sti
xchg
xor
sbb
lods
dec
mov
or
movs
or
inc
or
and
fstp
pcmpeqb
mov
dec
xchg
pop
loop
jnp
add
inc
lds
and
mov
cmova
mov
lods
dec
je
mov
pop
push
fistp
les
pop
loope
cmc
jmp
sbb
inc
fldenv
test
adc
je
sti
dec
jl
fs
and
adc
popa
js
mov
xlat
pop
les
jns
mov
out
shl
out
inc
sbb
push
or
mov
sub
dec
add
aas
jne
fsubr
mov
jmp
imul
daa
mov
sub
fwait
int3
xchg
cwde
mov
mov
shr
data16
xchg
(bad)
clc
lods
xchg
icebp
pusha
inc
pop
popf
dec
sub
xor
(bad)
mov
cmp
stos
xchg
das
fimul
jns
das
aam
add
cmps
int3
push
scas
jmp
loopne
das
xchg
xor
jbe
loope
xor
xchg
ror
xchg
sbb
iret
inc
adc
fdiv
sub
jns
test
rcl
adc
push
loope
add
jne
cmp
mov
pop
sbb
mov
les
cmp
(bad)
mov
hlt
add
daa
sbb
mov
fs
cmp
jne
and
xchg
cld
dec
adc
push
or
cmp
jp
data16
mov
scas
jne
loop
stos
sahf
fild
leave
push
ja
fstp
ja
xlat
mov
les
cmps
js
in
sbb
in
test
dec
cmp
test
outs
dec
jns
sub
fsub
loopne
mov
dec
in
inc
push
lahf
fist
xor
ins
mov
pop
ins
ins
sti
xlat
sbb
jae
dec
clc
jnp
xor
loopne
push
sbb
sbb
or
nop
das
(bad)
leave
out
mov
mov
les
shl
int3
push
imul
iret
cmp
cmp
lea
int3
fist
jmp
inc
(bad)
arpl
dec
mov
inc
inc
dec
cs
hlt
push
rcl
sbb
xchg
popf
mov
push
fimul
out
cmp
mov
iret
cmp
jb
sub
add
mov
mov
ror
imul
ret
cmp
lahf
adc
shr
adc
xor
jl
adc
shl
loopne
push
hlt
cmp
test
mov
or
inc
loop
xchg
mov
sar
mov
jmp
jp
sar
movs
and
cmc
mov
pop
popa
ret
mov
lea
retf
cmps
mov
jne
outs
into
daa
rol
adc
pop
xchg
jge
(bad)
adc
lea
jp
dec
cmp
cmp
xor
pop
repnz
mov
shl
popf
test
mov
stc
or
mov
push
movs
and
sbb
enter
push
inc
and
dec
ins
jp
dec
pop
pop
xor
mov
mov
mov
pop
mov
popa
rcl
sbb
lds
pop
cli
mov
ins
fimul
jae
xor
push
mov
fadd
retf
jl
fnstenv
jmp
inc
xchg
and
jp
frstor
adc
popf
pop
mov
imul
adc
push
call
jo
sub
adc
mov
pop
cmp
pop
mov
or
xor
xchg
stos
and
xor
inc
aas
cld
sub
xchg
add
xchg
xor
and
jae
sbb
(bad)
int3
pop
loope
pop
ds
stos
xchg
push
mov
pop
pop
loopne
push
mov
nop
rcr
jecxz
lea
popf
xchg
sbb
scas
mov
retf
dec
cmc
sbb
jmp
ret
cli
add
(bad)
std
mov
clc
ja
fmul
ds
xlat
repz
xor
imul
push
and
ja
jne
xchg
call
push
in
jae
xchg
addr16
jns
movs
lock
pop
cmp
jae
lds
lahf
jmp
push
inc
push
sub
inc
xchg
popf
mov
inc
mov
mul
inc
jmp
sub
(bad)
std
imul
xchg
lea
mov
mov
dec
je
and
gs
cmp
in
cld
stos
test
jp
mov
imul
cwde
and
outs
mov
mov
xor
loope
dec
mov
pop
inc
std
pop
mov
ret
mov
rcr
lods
and
mov
imul
nop
sbb
mov
mov
(bad)
sub
shr
clc
shl
js
sbb
adc
sbb
outs
jmp
pop
stos
int
stos
aad
jp
dec
fdiv
add
push
add
or
das
push
pop
mov
cmp
ret
enter
jns
mov
mov
jns
xor
mov
xchg
enter
cmc
xchg
(bad)
cmp
cmp
in
sub
pop
sub
fcom
(bad)
sti
cmps
push
out
fs
movs
imul
ds
aam
loopne
(bad)
xor
imul
push
sub
mov
es
ds
(bad)
pop
jns
retf
cld
sub
push
mov
in
push
pop
dec
aad
pop
test
sbb
xchg
fmul
(bad)
lods
xor
mov
aaa
xchg
mov
fs
pop
sbb
adc
sbb
addr16
ss
stc
ja
(bad)
ja
jmp
data16
lock
dec
mov
outs
cmps
push
mov
loopne
popa
cmp
(bad)
dec
push
xchg
shl
jp
dec
push
cmp
sahf
stos
sbb
or
fst
lds
jecxz
dec
xor
mov
test
sub
(bad)
aaa
loopne
jmp
test
sbb
jmp
stos
out
enter
sti
ins
fild
aas
mov
inc
fcomp
inc
ret
adc
call
je
outs
inc
(bad)
xor
icebp
and
inc
adc
ret
cmp
dec
pop
hlt
fisubr
mov
inc
rcr
sub
rcl
push
aas
xor
(bad)
jl
xchg
icebp
push
rol
rol
sbb
daa
mov
out
or
retf
xor
adc
ror
and
(bad)
pop
test
data16
lea
xchg
(bad)
sub
mov
inc
mov
cwde
into
js
jp
push
jno
mov
or
lea
mov
jae
test
and
cs
iret
test
(bad)
mov
loope
jmp
pop
lods
jbe
addr16
sub
jae
pushf
dec
jmp
clc
and
scas
sti
lods
rol
and
sbb
xchg
shl
sub
adc
mov
jae
dec
jg
inc
mov
inc
xor
mov
hlt
pop
sahf
stc
loope
mov
call
sti
outs
loopne
dec
ror
mov
cld
or
or
xchg
lahf
or
iret
mov
xchg
jo
das
aas
mov
fmul
xchg
push
fxtract
cmps
mov
ret
dec
jmp
rcr
data16
and
cmc
cdq
sbb
ja
sbb
outs
push
mov
inc
test
fimul
add
inc
mov
mov
outs
out
xor
jb
adc
retf
mov
(bad)
jne
cmc
test
dec
je
ins
mov
enter
inc
jge
mov
stc
adc
lea
xchg
pusha
and
pop
xchg
dec
xor
push
mov
iret
rcl
push
dec
xchg
es
into
fwait
mov
cs
push
add
int3
lea
sub
cdq
mov
xchg
mov
test
sub
in
push
xchg
ror
je
jae
xchg
in
mov
xchg
shl
jb
and
jmp
mov
mov
dec
xchg
dec
(bad)
jle
fcomp
or
test
or
adc
hlt
jp
pop
mov
sub
rol
xor
bnd
loop
jp
mov
sbb
out
sub
adc
mov
cs
jbe
pop
imul
xchg
jo
or
xchg
jg
(bad)
adc
gs
add
dec
xor
sub
xchg
mov
jns
std
jg
aas
adc
jmp
mov
dec
mov
add
or
(bad)
push
or
jmp
push
fwait
sbb
or
loop
test
pop
sbb
jns
xchg
inc
xchg
ja
repnz
push
test
setae
adc
pop
gs
cmp
movs
push
and
inc
mov
push
push
hlt
call
(bad)
leave
and
shl
inc
ss
dec
mov
in
daa
fiadd
and
mov
sub
js
adc
shl
bound
pop
gs
test
mov
sbb
adc
push
cmp
push
cmc
push
jnp
test
pop
cmp
int
fnstenv
call
cmp
push
jne
sub
movs
xchg
in
mov
lock
or
mov
or
(bad)
add
imul
in
xchg
push
cld
sbb
jl
xchg
adc
(bad)
stc
addr16
dec
mov
in
mov
out
mov
mov
test
int3
pop
scas
rcl
xlat
xchg
ins
or
push
in
and
ret
movs
jge
cmp
ja
mov
jne
xor
(bad)
sub
xchg
cld
int
dec
sbb
dec
stos
stc
addr16
fistp
repnz
shl
mov
in
fwait
jl
dec
sub
xchg
ins
inc
pop
jb
test
setnp
ret
das
jo
icebp
mov
add
mov
cmp
jge
(bad)
test
and
pusha
cmc
mov
test
mov
aad
into
mov
(bad)
leave
mov
jg
inc
xor
and
pop
test
adc
mov
adc
outs
lea
cmp
mov
arpl
ss
icebp
xchg
clc
or
mov
out
inc
fiadd
sbb
in
xchg
shr
cmp
inc
sar
outs
aad
mov
js
call
jae
mov
jne
or
imul
add
aam
xchg
jmp
sbb
or
hlt
push
sub
jge
xor
ret
test
mov
jg
inc
mov
iret
sbb
push
mov
sbb
push
dec
dec
xchg
xor
fcomp
pusha
in
mov
mov
mul
add
adc
retf
in
jl
pop
mov
jno
in
cmp
or
in
adc
jo
dec
mov
int
inc
fwait
in
sti
sub
mov
dec
mov
daa
out
pop
push
fs
das
xchg
push
xchg
adc
jo
jp
mov
aam
dec
not
inc
mov
or
jnp
ins
out
dec
sahf
mov
les
xor
mov
je
in
shl
imul
mov
mov
and
mov
sub
sbb
inc
cmp
push
cli
fist
addr16
and
lds
out
xchg
dec
dec
ds
popf
adc
ret
xchg
cmps
mov
and
jae
sub
mov
sar
jo
retf
out
xchg
jge
(bad)
cmp
jp
repz
scas
push
xor
sub
and
pop
dec
stc
mov
mov
and
pushf
popf
paddsw
cmp
js
dec
in
cli
push
sub
push
xor
fdivr
and
ja
inc
fldenv
push
dec
cmc
xchg
fist
in
out
mov
lods
cmc
dec
fdiv
lahf
call
jmp
cmp
adc
into
xor
mov
cmc
cmp
sub
xchg
sbb
mov
test
ja
js
jne
jmp
in
mov
and
sub
out
push
call
xor
adc
jnp
popf
cmp
mov
pop
mov
clc
cmp
add
mov
les
cli
cld
shr
clc
push
pop
pop
movs
adc
jge
in
mov
push
es
mov
lds
cmp
adc
pop
dec
pop
xchg
mov
mov
mov
and
push
sar
cmp
jle
loopne
xor
retf
data16
xchg
ins
pop
cmp
fcom
xchg
sub
in
push
pop
test
and
js
(bad)
ror
fst
mov
test
in
icebp
repnz
mov
daa
mov
mov
in
add
cld
clc
mov
es
add
(bad)
rol
(bad)
mov
push
xchg
jo
xchg
sub
mov
sbb
cmps
div
sub
sbb
outs
repnz
sbb
cmp
push
sub
cmp
jp
xor
mov
cwde
popa
xor
mov
std
aas
daa
mov
sub
jmp
(bad)
hlt
inc
outs
outs
scas
xchg
not
pusha
push
pop
mov
pushf
cmc
cmps
and
adc
push
jmp
inc
cmps
adc
adc
ror
into
daa
retf
inc
clc
scas
outs
cmp
cli
clc
sub
jmp
(bad)
mov
repnz
mov
cmp
fnsave
or
lods
pop
xlat
mov
mov
push
aam
in
ins
sbb
je
fs
mov
jge
retf
lock
addr16
push
and
cld
les
sbb
imul
ficomp
aas
pusha
cmc
test
pop
inc
lock
cmp
or
in
pop
jnp
xchg
gs
imul
test
lds
fistp
sub
push
sbb
xchg
lock
iret
call
in
adc
sbb
cmps
sub
push
jg
mov
adc
fldcw
mov
mov
or
jle
xor
daa
dec
sub
dec
xchg
and
pop
iret
push
js
mov
push
inc
mov
mov
aas
addr16
js
adc
push
xchg
dec
and
xor
ja
sub
addr16
mov
pop
arpl
cmp
(bad)
cmp
into
js
sub
in
cmc
sbb
in
push
das
inc
aam
mov
inc
add
sbb
mov
push
test
add
lods
xor
mov
xchg
js
adc
(bad)
es
(bad)
mov
sub
sub
mov
xor
sub
xor
mov
jo
mov
je
ins
out
add
in
pop
sub
stos
pop
(bad)
mov
mov
dec
test
scas
outs
jne
loopne
cmp
push
test
arpl
jle
lahf
bound
pop
cmp
mov
xchg
in
sahf
mov
pusha
xchg
mov
mov
stc
jmp
push
aad
mov
lods
stc
jnp
aam
(bad)
push
imul
je
mov
push
sbb
(bad)
sub
(bad)
and
sbb
pop
psubw
(bad)
pusha
ins
fwait
and
sub
cmp
jge
fcom
sub
ds
cli
inc
mov
inc
jp
dec
add
in
movs
ins
div
hlt
cmp
push
cwde
test
pusha
addr16
retf
lods
retf
lods
jmp
mov
fldcw
sbb
dec
vpcmpeqw
add
cmps
in
xchg
sbb
and
std
xor
inc
cs
std
push
call
fldl2t
fs
icebp
push
jl
aaa
mov
leave
and
fnstenv
sbb
pop
popf
aaa
loopne
int3
stos
jmp
push
ins
cli
mov
hlt
push
jge
xor
pop
enter
push
(bad)
outs
in
xchg
ins
dec
ret
inc
sbb
mov
mov
or
xchg
push
lds
xchg
bnd
sar
or
xor
sbb
mov
mov
sbb
jne
and
mov
jo
pop
push
repz
dec
dec
mov
xchg
mov
cmp
xor
jmp
test
mov
jecxz
cmp
sub
add
nop
daa
stos
popf
xchg
ss
pop
or
xor
arpl
jb
xor
xchg
push
mov
mov
jmp
cmp
daa
ins
mov
leave
or
push
sub
and
dec
push
or
adc
jmp
int3
sar
aas
or
dec
js
pop
xchg
clc
add
nop
add
pop
xchg
ins
sbb
je
cmp
sbb
sub
pop
xchg
push
push
(bad)
dec
jno
push
and
jge
jno
(bad)
in
movs
sbb
push
pusha
jg
cmp
xchg
fld
push
(bad)
sub
xor
jne
xchg
dec
mov
(bad)
xchg
cld
lods
repnz
jns
push
cmp
popa
push
jg
and
add
stos
lea
sub
adc
mov
xor
mov
adc
fs
nop
div
or
setle
jmp
cld
call
jo
push
jno
mov
jl
adc
movs
xchg
lods
mov
mov
loopne
iret
(bad)
in
cmps
mov
cld
les
fsubr
lods
or
jo
mov
je
dec
xlat
add
(bad)
mov
xchg
xor
dec
scas
sbb
xchg
push
dec
bound
and
addr16
or
out
jmp
jnp
or
mov
pop
scas
inc
jne
test
pop
jae
sar
das
pop
jg
jns
pop
jne
inc
inc
xor
jle
mov
hlt
rcl
in
push
repnz
mov
sub
inc
mov
int3
cmp
pushf
hlt
sub
fdivrp
aad
ds
push
into
std
in
dec
and
loop
dec
cmp
fcom
(bad)
cmp
adc
fwait
mov
popf
les
push
mov
not
inc
je
xor
jg
sub
icebp
jmp
jns
mov
cmp
shr
lods
sub
add
xor
jo
(bad)
xchg
xchg
cli
dec
pop
inc
xor
aaa
jne
bound
and
js
ins
cmp
rol
xchg
addr16
retf
cld
(bad)
ins
cld
mov
das
movs
adc
sbb
sbb
dec
mov
and
repnz
cmp
inc
hlt
fcmovb
or
pop
sbb
sub
shr
popf
cld
dec
push
ss
jbe
jle
cdq
pop
and
push
jge
out
add
(bad)
jg
xor
loopne
loop
cdq
and
xchg
stc
mov
jne
mov
fimul
(bad)
loopne
sbb
xchg
jne
sub
nop
enter
lods
out
movs
shl
lahf
push
or
jge
je
ss
jecxz
cwde
xor
sbb
pop
sbb
das
and
pusha
ret
sub
push
lock
jge
sub
movs
fsubr
xchg
xchg
dec
mov
out
fdiv
shr
mov
cs
out
dec
pop
adc
popf
outs
leave
adc
clc
loop
cmc
xchg
mov
fsubr
adc
pop
(bad)
out
icebp
rcr
adc
and
push
cmp
and
arpl
sub
add
xchg
nop
xor
or
push
test
outs
ret
gs
push
cmc
sets
aas
fwait
push
je
fdiv
cmp
int
xor
dec
sub
pop
leave
div
mov
xchg
out
scas
push
bound
pop
int3
in
mov
lods
in
and
cmc
aam
add
call
push
or
arpl
mov
mov
shl
mov
in
mov
dec
ret
or
aad
bound
in
mov
data16
or
(bad)
mov
jp
mov
jns
lock
movs
xor
icebp
je
xchg
push
sbb
gs
pop
jb
(bad)
mov
ds
imul
es
push
push
loopne
mov
adc
mov
or
push
fst
push
xor
hlt
rcr
sbb
and
jns
mov
cli
es
lods
jns
das
(bad)
shl
cwde
inc
pop
sub
js
jne
sub
scas
fdiv
add
leave
das
pop
rcr
test
les
test
sbb
xchg
outs
loop
add
sar
mov
jmp
mov
dec
xchg
cmp
mov
shl
mov
loop
mov
out
mov
push
sbb
xchg
neg
hlt
mov
jle
call
cld
in
leave
push
shr
mov
adc
xor
test
and
das
scas
push
xchg
sbb
sub
retf
mov
loope
or
int3
shl
add
inc
out
push
push
cmps
in
jmp
jp
and
mov
mov
push
push
mov
loope
pop
addr16
shr
sub
mov
add
cs
test
push
nop
mov
lahf
daa
xchg
mov
hlt
cmps
pop
jmp
or
jbe
repz
cmp
js
sub
shl
jmp
push
jb
push
pop
js
ja
mov
(bad)
out
in
sub
mov
out
fdivr
into
lods
jae
out
adc
pop
adc
cmp
frstor
fistp
(bad)
sti
jmp
xchg
mov
push
jb
push
jge
pop
ss
push
xor
ja
xchg
inc
cli
jg
or
mov
fcomp
or
hlt
data16
mov
push
pop
push
jle
and
mov
mov
mov
xchg
sub
loope
xchg
mov
js
jl
mov
out
push
sbb
inc
cmps
mov
cmps
daa
and
mov
sub
push
mov
sub
cmp
mov
mov
jp
cwde
(bad)
xchg
mov
mov
ret
jnp
ins
jp
out
sub
and
xchg
and
cmp
mov
and
push
mov
inc
mov
sub
cmc
or
retf
ds
das
sbb
outs
out
wbinvd
(bad)
lods
sub
pop
sbb
lea
mov
aas
pushf
jp
movs
sub
lock
cmp
ins
sbb
xchg
fisubr
shl
or
jae
mov
pop
or
dec
in
pusha
mov
push
jne
mov
mov
inc
pop
mov
jl
mov
cmp
enter
ffreep
sbb
pop
mov
add
xor
lahf
addr16
mov
cmp
in
ins
mov
es
outs
push
adc
cmp
sbb
adc
test
pop
cmp
mov
sub
cmp
(bad)
xor
in
push
xor
or
mov
xor
mov
lds
imul
cmp
fdiv
sar
jo
loop
mov
(bad)
jge
call
cli
inc
jecxz
mov
sub
test
sub
lds
call
bound
pop
adc
xchg
cld
cs
cmp
sub
pop
mov
popf
mov
dec
popa
pusha
pushf
mov
adc
out
pop
sbb
pop
mov
mov
rcr
(bad)
sbb
xchg
ds
sbb
mov
iret
xchg
in
js
jae
je
add
jmp
cld
fsubr
les
nop
test
je
jbe
idiv
in
out
call
aaa
mov
adc
push
std
mov
imul
call
jns
adc
scas
adc
(bad)
pop
cmc
ror
and
mov
cdq
es
imul
or
inc
xchg
adc
sahf
mov
ficom
mov
inc
shl
sub
adc
(bad)
push
in
push
jne
jp
sbb
and
das
sti
mov
stos
jl
idiv
(bad)
aas
retf
mov
fisubr
in
jo
push
add
sub
push
sbb
lds
pop
mov
push
and
cld
and
sub
mov
pop
mov
test
cmp
xchg
xor
rcr
sbb
push
aaa
and
and
push
mov
push
repnz
out
mov
xchg
jb
cmp
or
fwait
out
mov
jnp
icebp
sbb
cmp
and
cmp
mov
(bad)
popf
inc
add
cmp
add
addr16
out
mov
fcmovnu
jecxz
and
or
ret
test
mov
sub
(bad)
jp
jmp
cmc
xchg
cmp
mov
les
rcr
out
cmp
adc
xor
sub
jne
daa
shr
cmp
jge
outs
lock
ins
jns
xchg
sub
inc
sar
cmp
ss
sub
cwde
adc
xchg
stos
popa
loopne
xor
fisttp
push
fcmovu
jge
adc
aas
test
add
lock
push
int3
mov
add
xor
ret
sub
xchg
pop
jp
aam
mov
in
mov
xor
dec
dec
jg
xor
cmp
pusha
jecxz
jmp
xor
fwait
sar
mov
mov
sbb
fnstenv
fiadd
clc
xchg
mov
das
cmp
mov
push
jle
pop
imul
pop
mov
mov
movs
dec
mul
(bad)
je
repnz
int
ds
jge
pop
aaa
or
add
pushf
adc
inc
xchg
fsubr
mov
nop
ins
dec
jmp
adc
int3
jb
scas
out
pop
std
add
xchg
movs
mov
add
sbb
sub
adc
scas
add
bound
dec
xchg
aas
shr
int3
js
mov
jge
imul
or
sahf
shl
retf
and
lods
cmp
jl
inc
test
out
pop
popa
xchg
(bad)
aam
mov
add
push
mov
or
and
mov
popf
out
fdivr
xchg
in
js
cmp
push
sub
dec
push
mov
nop
add
adc
mov
ins
mov
scas
pop
gs
and
scas
xor
mov
xchg
pop
es
sub
mov
cmp
jmp
and
cmp
dec
imul
call
inc
daa
fs
adc
xor
lods
retf
add
lods
ftst
sbb
scas
push
fst
jle
and
repnz
call
aaa
and
cmp
mov
pop
shr
imul
mov
add
jle
out
pop
push
jg
mov
scas
sub
(bad)
mov
call
mov
(bad)
push
imul
adc
mov
rcl
push
fcomp
repz
and
bound
jns
xchg
imul
call
test
pop
out
call
retf
rcl
adc
in
bound
cmp
xchg
movs
xchg
sbb
mov
mov
pop
scas
jbe
adc
mov
(bad)
clc
mov
mov
xor
cld
test
xchg
xchg
shl
pop
add
jo
cmps
into
sub
lahf
jmp
call
jns
outs
pop
xchg
call
cmp
mov
jbe
ins
ret
xchg
cmp
into
out
jns
or
add
mov
xchg
mov
add
push
dec
sbb
add
lahf
and
fcomip
daa
push
inc
xchg
pop
dec
in
inc
das
ja
test
loope
push
shr
movs
popf
fadd
sbb
out
and
(bad)
jmp
mov
(bad)
cmp
adc
ret
jp
aam
xchg
xchg
shr
xor
mov
fistp
out
xchg
jge
sub
ret
sbb
dec
add
push
push
pop
inc
jge
mov
bound
(bad)
pop
(bad)
mov
add
cmp
jo
sub
mov
jle
sbb
mov
inc
push
sar
or
cmc
adc
cdq
int3
in
xchg
inc
and
cdq
repz
fwait
movs
popf
cmps
test
push
cmp
into
mov
std
out
jo
lods
adc
movs
mov
jmp
fld
retf
fsub
jo
xchg
sub
jecxz
cmp
leave
loopne
ret
cmp
xor
and
sub
stos
sub
pop
and
inc
jnp
sub
movs
add
cmp
xchg
shl
xor
div
dec
movs
and
aas
jmp
aas
dec
mov
mov
inc
xchg
xor
imul
jns
xor
and
das
pusha
pop
push
jnp
push
and
pusha
inc
cld
bound
and
mov
pop
lock
out
mov
fadd
call
cmp
pop
dec
int3
addr16
test
test
push
mov
push
inc
pop
loop
sti
into
cmp
pop
outs
cmovl
mov
mov
nop
imul
popf
ret
mov
jae
xchg
ja
addr16
ror
jne
xchg
cmp
mov
out
push
cmp
sub
mov
xchg
adc
jnp
repz
iret
fisttp
push
cli
jg
mov
push
pop
adc
(bad)
stos
clc
retf
adc
xchg
xor
jmp
jo
jno
repz
xchg
pop
cmps
or
push
repz
sub
xchg
sub
sub
xor
pop
into
cmp
jo
jl
outs
mov
or
sbb
(bad)
(bad)
mov
stc
ror
cmp
jge
ror
lods
pop
dec
dec
xor
imul
sub
jecxz
in
push
sar
or
sub
outs
ret
into
test
xchg
inc
xor
add
mov
xchg
cld
mov
out
cli
dec
sub
(bad)
not
fs
popa
jmp
inc
mov
push
and
and
sub
stc
inc
sub
stos
add
xchg
in
sbb
cmp
jmp
dec
sub
dec
mov
aad
shr
jp
adc
not
cvttps2pi
in
in
cs
in
fcom
das
push
sub
rcr
sbb
scas
adc
retf
push
dec
fldcw
or
test
aas
fbstp
jns
xchg
mov
fs
jg
mov
add
inc
jp
cld
sbb
push
into
push
jmp
push
shl
jg
scas
pop
in
enter
fwait
add
ja
jnp
(bad)
sub
xchg
sub
xchg
inc
jns
loope
mov
ficomp
xchg
xchg
mov
jmp
pop
or
lods
inc
push
or
test
repz
sbb
icebp
dec
ror
fcmovb
jmp
imul
cmp
sub
loope
jp
fsubr
adc
mov
push
int
sti
aam
test
fstp
ffreep
xchg
loopne
and
aad
jl
jmp
cmp
or
gs
sbb
daa
dec
jge
movs
icebp
in
mov
push
and
dec
retf
pop
lea
inc
ja
addr16
stos
sub
sbb
in
fidiv
and
aad
mov
lods
loope
psrad
pop
shr
mov
inc
xchg
xor
sbb
call
or
test
out
mov
mov
push
std
adc
sub
dec
xchg
in
jmp
jns
repnz
sbb
popf
jno
daa
push
jmp
std
xchg
mov
in
jo
mov
je
jecxz
iret
mov
jle
inc
xchg
xor
js
sbb
enter
mov
pop
jns
and
add
outs
call
mov
mov
mov
cs
cs
shl
sbb
lds
xor
push
cwde
mov
push
cmc
push
and
test
push
xchg
push
(bad)
nop
adc
ret
fsub
jbe
xchg
add
shr
aad
mov
mov
lahf
and
xchg
pop
retf
xor
mov
in
test
mov
xchg
dec
std
push
ja
lds
int3
lahf
sub
sahf
mov
xor
inc
jecxz
push
aad
jmp
xor
xchg
sub
xchg
and
lods
jmp
retf
push
idiv
sub
or
popf
and
lea
push
jmp
sbb
jge
loopne
ret
push
cli
or
jle
cmp
sub
es
jo
mov
mov
xchg
sub
fucomip
int3
fcomi
ins
imul
dec
fist
imul
cs
mov
into
adc
dec
iret
loopne
mov
scas
repz
in
das
push
sbb
stos
cmp
pushf
push
gs
es
aaa
push
jne
jmp
pop
out
je
xchg
pop
sbb
gs
and
mov
daa
movs
sub
test
leave
out
xchg
push
fcom
jnp
xchg
das
pusha
aad
jne
push
pop
mov
dec
push
mov
dec
pushf
mov
not
imul
push
xor
push
cs
repnz
jp
(bad)
cmp
nop
popf
cld
pusha
in
(bad)
inc
fnstsw
or
enter
scas
retf
jecxz
loopne
xchg
xchg
in
out
mov
bound
adc
jns
mov
les
push
push
fprem1
inc
data16
and
xor
test
xor
xor
out
fild
or
inc
jne
xchg
add
idiv
stos
cmp
sub
jo
xchg
cmc
faddp
jmp
mov
sbb
pop
ins
push
dec
sbb
fwait
push
cli
out
scas
jb
test
out
rcl
mov
adc
cmps
and
jae
mov
movs
sbb
push
jl
and
aaa
out
scas
xchg
es
jnp
jo
adc
loopne
stc
int3
dec
push
push
dec
mov
add
lods
ss
pushf
mov
je
call
fbld
dec
in
out
add
sub
nop
stos
jbe
push
xor
in
les
out
jns
xor
test
fucomip
and
dec
aam
sahf
outs
out
and
xchg
pop
push
adc
in
je
add
pop
cs
scas
xor
fist
and
movs
frstor
les
(bad)
lock
inc
or
clc
jno
xlat
and
jae
add
jb
push
jg
pop
xchg
loope
popa
dec
imul
sbb
out
jns
pop
sub
adc
jge
or
sbb
ins
sbb
push
and
ja
fild
mov
sbb
dec
int3
retf
jmp
xchg
cld
pop
mov
js
ins
loopne
(bad)
dec
shr
xchg
push
dec
cli
lods
mov
mov
xchg
xor
mov
pop
lock
aas
add
jae
jmp
mov
retf
rcr
mov
das
mov
sbb
sub
push
push
dec
cmc
push
ret
and
pop
bound
push
push
xchg
(bad)
loope
or
jp
aad
addr16
cdq
mov
xchg
outs
and
xchg
int3
fisttp
dec
and
dec
mov
add
inc
cmp
or
and
push
and
cmc
jge
test
fwait
ds
push
out
sub
jp
mov
fwait
call
pop
dec
pop
pop
push
loopne
call
imul
sbb
push
add
inc
mov
xchg
in
push
lea
mov
xchg
rcr
call
pop
pop
inc
(bad)
retf
and
addr16
call
pop
jle
push
xor
repz
scas
ss
js
cmc
popf
arpl
cdq
(bad)
xor
xchg
fwait
cmc
xchg
(bad)
data16
call
xchg
int
push
inc
icebp
sub
clc
add
jle
push
icebp
lds
sub
or
sbb
xchg
jle
push
cmps
xchg
pop
xor
shr
(bad)
fucomi
dec
mov
stos
gs
cmps
sar
adc
dec
mov
mov
cmc
mov
enter
push
outs
fnstcw
pushf
(bad)
fist
in
push
loope
pop
fadd
adc
iret
and
or
jns
or
sub
dec
lahf
jo
lds
sub
test
stos
jnp
loopne
add
rcr
inc
push
in
mov
mov
mov
cmps
retf
in
out
pop
pop
cli
popa
jmp
sub
mov
fdivr
dec
adc
push
xor
dec
call
repnz
mov
jge
lods
leave
js
gs
pop
jnp
adc
cmp
sti
pop
cs
scas
loope
iret
or
ror
sub
daa
cmp
inc
retf
xchg
xchg
mov
or
aaa
or
inc
fdiv
mov
repz
push
jae
icebp
add
jle
cmps
pushf
aam
inc
xor
sbb
cmps
clc
cmp
lds
push
js
stos
add
sub
pop
std
jbe
rcr
shr
leave
sahf
lods
sbb
hlt
outs
jo
clc
cmp
jmp
out
imul
cmps
cs
xor
pop
sub
sub
sub
jb
sbb
jns
in
pop
sub
ret
dec
call
in
ins
fisttp
push
loopne
sub
dec
dec
daa
push
push
in
scas
(bad)
jmp
sub
jge
push
cdq
mov
js
xor
out
into
enter
mov
mov
xor
in
push
sub
xchg
pop
dec
sbb
mov
lahf
test
bnd
aam
fcom
jmp
arpl
jb
pop
dec
fbstp
retf
or
sub
int
add
cmps
inc
or
(bad)
sub
or
(bad)
xchg
push
sbb
push
lahf
sahf
pop
sti
hlt
sub
movs
jbe
inc
and
and
dec
lock
jne
mov
jecxz
popf
sub
inc
fisttp
jmp
xor
loope
inc
bound
push
nop
sbb
sub
push
jns
aas
mov
lock
out
pop
inc
pusha
mov
mov
pushf
clc
repz
mov
jae
sbb
xor
pop
dec
nop
and
pop
mov
push
jnp
cmc
lea
sub
repnz
cmc
pop
(bad)
mov
adc
xchg
mov
and
xchg
jae
(bad)
push
ins
sub
push
jle
lods
mov
aam
push
sub
ins
outs
sti
out
xor
repnz
imul
pop
jnp
xor
iret
out
inc
call
inc
mov
push
dec
aad
cmp
imul
xchg
dec
data16
popf
std
mov
jnp
adc
js
jne
call
push
fnstcw
push
inc
xchg
fs
lahf
jbe
cld
rol
and
js
sub
jns
(bad)
jae
out
retf
fs
add
loope
adc
jae
repnz
jmp
jp
jns
pop
fild
mov
shl
xchg
aas
pop
push
push
fwait
mov
iret
int
dec
lock
ins
xor
in
idiv
sar
sbb
and
cli
sub
or
inc
mov
out
add
mov
jge
inc
and
sbb
xchg
aas
sbb
cdq
lods
cli
mov
add
daa
and
sbb
cdq
lods
push
adc
xchg
sub
add
jae
inc
jo
add
scas
cmp
push
cmp
lods
fcomi
rol
push
ret
inc
mov
loop
stos
mov
add
jp
jno
stos
pop
push
std
in
repz
test
js
leave
mov
mov
jne
fisubr
in
arpl
sbb
and
aas
stos
cmp
sub
arpl
jge
into
xchg
das
sbb
adc
pusha
add
inc
xlat
rol
add
jecxz
mov
loopne
mov
xchg
outs
xchg
movs
cld
jmp
xor
in
popf
dec
pop
idiv
xor
es
add
inc
push
fisubr
pop
or
int3
aad
mov
mov
or
popa
jle
psubsw
sahf
adc
adc
imul
push
cdq
sbb
cs
not
jg
gs
daa
in
shrd
jp
xchg
pop
and
fld
xor
push
xor
into
nop
ret
movmskps
das
int3
adc
mov
mov
out
(bad)
push
nop
jge
push
mov
push
xchg
pop
xor
scas
data16
xor
pusha
jle
addr16
fld
cld
jbe
hlt
push
sbb
add
sbb
call
push
pop
out
push
sbb
in
mov
gs
popa
adc
mov
icebp
neg
mov
ins
loop
jmp
jle
sub
cld
in
add
lahf
cmp
dec
int3
bound
or
mov
fstp
xchg
dec
mov
das
dec
test
cmc
push
push
sar
pop
popf
stc
std
push
shl
in
cmp
mov
pop
jne
call
mov
js
in
xchg
fs
sub
call
sbb
mov
sub
call
dec
sbb
pop
mov
out
sbb
cmp
adc
nop
pop
sub
jge
sub
sti
adc
xor
jecxz
dec
xchg
mov
mov
into
jle
ja
in
push
adc
test
cmp
retf
jg
xchg
sub
and
in
pusha
mov
out
loopne
mov
add
hlt
test
inc
xchg
pop
gs
sub
rcl
adc
xchg
jg
mov
xor
rcr
fdivr
(bad)
mov
cdq
add
xor
ret
js
outs
out
stc
jns
jg
pusha
mul
cmp
jne
xchg
sub
jmp
xchg
mov
imul
sub
les
les
adc
fldlg2
jle
jle
cmp
rol
adc
in
mov
repnz
add
ret
call
or
dec
stc
mov
loopne
cld
xor
aam
push
lahf
mov
test
sub
xchg
daa
push
jne
repz
arpl
dec
subps
inc
invd
mov
frstor
je
mov
out
fbstp
lahf
in
add
add
jb
stos
sbb
adc
stos
ret
int
sbb
pop
clc
imul
sub
js
dec
xchg
mov
jmp
jbe
mov
in
sbb
je
inc
outs
adc
mov
cld
in
pop
sbb
xchg
push
mov
in
or
and
enter
mov
xchg
dec
sbb
sbb
imul
outs
mov
test
cmp
je
jecxz
test
rcl
jmp
lock
les
xor
mov
push
or
das
div
(bad)
loop
ds
sub
nop
sbb
out
daa
mov
inc
imul
ins
sub
jns
(bad)
jg
dec
cmp
lock
fldenv
and
js
dec
(bad)
lods
push
mov
jnp
inc
sub
push
out
sbb
push
and
add
xor
out
xchg
sbb
sbb
push
loope
loope
sub
clc
push
cmp
xor
not
xchg
jne
jae
arpl
pop
push
fdivrp
int3
xchg
ret
push
xchg
sub
in
stos
test
ret
xchg
sbb
mov
jnp
xchg
pop
xor
test
sbb
test
js
mov
sar
repz
cmp
sar
adc
push
fist
test
js
jmp
call
jbe
test
sub
sub
push
loope
fcom
loope
mov
mov
jae
jecxz
xchg
mov
xchg
xor
das
sbb
xchg
jmp
and
mov
cmp
jl
mov
dec
xchg
cmp
ret
sbb
push
push
mov
cli
add
dec
dec
push
jmp
(bad)
outs
nop
cmp
sar
outs
stos
aam
out
xor
jb
xor
sub
add
mov
or
mov
mov
div
mov
lock
mov
fwait
mov
mov
push
cld
cmp
data16
jb
inc
scas
xchg
sbb
xchg
out
addr16
leave
paddd
sbb
xchg
mov
dec
pop
lock
lds
pop
jl
inc
loopne
scas
jno
mov
xchg
cmp
jmp
bound
fadd
xor
dec
add
or
cmc
adc
xchg
jmp
mov
dec
scas
je
loopne
mov
(bad)
push
mov
jg
jl
push
shl
jmp
imul
movs
pop
push
test
jg
dec
dec
xchg
add
outs
dec
pop
out
js
pop
jae
adc
test
mov
loope
das
sub
sbb
cld
scas
rol
xor
add
cmp
xor
je
es
into
pinsrw
adc
clc
fs
pop
cli
sti
xchg
inc
or
push
test
je
jmp
inc
xor
sub
xor
mov
and
sub
imul
push
sub
mov
sub
xchg
repz
jge
adc
push
xchg
test
mov
jecxz
in
loopne
pop
xchg
test
(bad)
dec
dec
mul
jecxz
jb
mov
imul
test
inc
and
mov
aaa
jmp
cld
add
mov
inc
out
add
cld
daa
idiv
jl
jb
out
pop
jge
jp
mov
mov
pop
movs
sti
stos
js
cwde
pop
jbe
mov
fwait
js
jnp
dec
sbb
int3
mov
xchg
or
mov
push
aam
leave
stos
pop
loope
das
add
dec
scas
jbe
mov
ja
shr
pop
cmc
inc
movs
adc
add
aam
jp
mov
cdq
loopne
push
pop
bound
adc
cmp
sub
adc
clc
push
jecxz
ret
jnp
push
jge
cmps
mov
into
dec
or
mov
and
xchg
cmp
xchg
cs
mov
imul
jge
or
mov
loope
fbstp
cdq
sub
jg
pop
or
add
mov
push
cmps
popa
cmp
ins
into
fiadd
xchg
sti
mov
mov
dec
jae
aas
repz
xor
cmp
sahf
test
addr16
xchg
aas
mov
mov
fimul
adc
cmp
cli
sar
dec
jnp
inc
iret
in
push
into
add
sbb
rol
mov
jl
xor
mov
dec
cmp
movs
aad
mov
inc
sti
test
xchg
cmc
mov
js
dec
cmp
adc
and
add
sub
sub
sub
xchg
ss
mov
jg
push
ror
sbb
aam
jmp
retf
sub
retf
out
or
leave
xor
bound
stc
jne
daa
and
ret
mov
test
jae
jge
mov
push
mov
jae
dec
hlt
jo
repnz
retf
sub
ret
sbb
mov
int
mov
pop
div
cmp
dec
call
je
add
mov
adc
jmp
ins
pusha
and
xor
xor
pop
jl
int
xchg
jecxz
mov
sbb
dec
(bad)
fcom
data16
ret
xor
push
popa
cmp
mov
jmp
mov
sub
out
adc
rcl
xchg
arpl
call
dec
je
pop
fsubr
mov
mov
or
arpl
pushf
inc
aad
add
mov
mov
jecxz
data16
leave
pop
or
(bad)
push
and
call
sbb
jne
cmp
test
pop
inc
clc
mov
pushf
jb
mov
xor
pop
fst
cmp
fs
push
add
add
cwde
mov
js
xor
mov
jecxz
sar
or
aas
ja
adc
jl
jb
jmp
repnz
mov
(bad)
mov
dec
xlat
mov
cmp
std
lock
js
xlat
sub
lds
in
xor
jecxz
nop
sub
mov
nop
mov
push
ds
nop
(bad)
xor
setl
call
sar
sti
pop
mov
aad
js
test
and
test
lods
es
jl
adc
xchg
jl
adc
cmp
inc
xchg
and
sbb
test
mov
inc
into
inc
fsub
pop
imul
pop
(bad)
clc
std
cld
mov
dec
retf
xchg
test
xchg
xchg
je
retf
push
xor
xchg
rol
ret
test
dec
jne
mov
inc
xor
das
daa
sti
enter
sub
cmp
mov
aam
mov
and
mov
retf
sbb
xchg
mov
inc
aas
fnstenv
pusha
push
(bad)
pop
int
sub
mov
mov
and
cdq
jp
div
or
inc
xchg
xor
or
adc
scas
or
jno
shr
jne
jne
xchg
ret
cmp
and
push
push
bound
outs
xor
sub
mov
inc
jb
das
ins
jp
int3
(bad)
lahf
test
in
gs
push
jg
scas
pop
add
outs
mov
mov
xchg
sbb
sub
pop
pushf
jno
imul
lods
xlat
xchg
jne
mov
loopne
shl
xor
les
push
add
mov
ret
fist
cmps
inc
cmp
inc
cmps
mov
jns
push
js
xchg
into
in
pop
repz
mov
mov
packssdw
shr
test
into
pushf
fs
and
dec
mov
(bad)
sub
mov
xor
ins
xchg
pushf
cmp
add
push
lock
dec
imul
fchs
stos
(bad)
pop
cmp
sbb
rcl
mov
addr16
fs
cmp
xor
xchg
cmp
js
loope
(bad)
scas
dec
jne
sbb
jle
mov
sub
(bad)
jge
xchg
shl
pusha
gs
mov
jge
adc
call
scas
aam
mov
jns
sbb
cmp
cmp
mov
movs
stos
ins
call
adc
loopne
sub
push
sub
(bad)
push
iret
movs
pop
lods
in
push
fcom
adc
call
js
lods
fsub
push
sbb
je
movs
repnz
sub
dec
adc
sub
xchg
push
jns
pop
retf
pop
jmp
addr16
add
mov
ficomp
nop
data16
lods
add
cmp
mov
mov
adc
or
fbld
ins
(bad)
shl
mov
pop
cmp
mov
push
push
xchg
(bad)
fdivrp
int3
inc
jae
cs
lds
and
or
das
and
(bad)
js
retf
mov
xchg
jp
adc
push
push
jle
test
push
adc
sbb
icebp
retf
sub
dec
jne
outs
pop
fsubrp
dec
jmp
inc
jl
dec
mov
push
lahf
bound
lods
cli
ins
mov
cmp
(bad)
outs
and
aam
push
mov
cli
pop
add
add
pop
xor
dec
je
xlat
cmps
loopne
jae
lock
ds
and
mov
sbb
loope
retf
mov
leave
mov
jbe
dec
sub
(bad)
xchg
call
cmp
adc
data16
pop
mov
cmp
and
(bad)
sub
xchg
out
aas
out
lea
imul
dec
jg
sar
retf
arpl
mov
inc
jbe
xchg
lods
sbb
adc
xchg
lds
jb
pop
jb
nop
xlat
push
pop
loop
es
jae
inc
(bad)
out
iret
xor
sub
dec
xor
cmovle
lods
pushf
push
aaa
je
call
xchg
mov
jnp
test
stos
shl
ins
stos
shl
mov
mov
mov
pop
dec
rol
fadd
add
out
dec
xchg
icebp
push
jae
inc
movs
ja
(bad)
inc
cmp
jne
pop
add
dec
aas
mov
aas
out
mov
daa
sub
ins
xor
push
and
leave
push
es
sbb
sahf
sbb
and
xchg
mov
sub
fs
push
stos
push
les
stos
cmp
sbb
jmp
adc
push
fnstcw
and
push
jo
xor
rcr
cmp
hlt
in
xchg
or
xor
fldenv
out
cwde
js
div
push
and
cmp
or
enter
push
aam
push
neg
mov
and
pop
pop
pop
fidiv
and
ss
xchg
inc
mov
inc
test
mov
jnp
cmp
jmp
push
jmp
pop
sub
call
cmp
xchg
inc
cmp
jl
shl
cmp
jnp
mov
int3
imul
fmul
add
push
xchg
mov
pop
out
pop
sti
test
test
and
(bad)
xor
ins
jne
(bad)
pop
and
and
(bad)
cmc
dec
mov
or
retf
ficom
sbb
test
or
pusha
push
in
jmp
cmps
cli
xor
add
mov
(bad)
dec
push
ret
mov
push
jge
xchg
push
test
dec
ret
aam
(bad)
add
popf
sub
das
sub
pop
sbb
fs
inc
popf
sub
or
xchg
push
sar
fucomi
pop
cmp
push
push
ror
je
push
jo
and
xchg
dec
out
add
jl
adc
lahf
cmps
adc
call
jp
mov
arpl
aas
inc
enter
out
xor
js
xchg
fmul
outs
out
mov
add
js
xchg
xchg
ret
dec
cmps
mov
dec
call
pop
fsub
sub
jge
call
sub
mov
mov
loop
imul
cli
movs
or
jne
xchg
jle
mov
push
loopne
ins
loope
push
pop
adc
xchg
pmaxub
jae
jbe
in
rcr
mov
nop
jne
cmp
hlt
xor
idiv
xchg
xchg
mov
out
loopne
and
xchg
xchg
(bad)
jne
mov
pop
cmp
push
mov
stc
cmp
pop
push
add
push
pop
lods
push
mov
cli
es
xor
(bad)
movs
fcomp
jge
ficom
dec
sti
push
and
call
in
xchg
jge
push
bound
and
push
sub
loop
and
sub
test
mov
jmp
fsubr
jnp
and
mov
sbb
cmp
pop
jmp
mov
mov
pushf
outs
xlat
xor
xchg
mov
les
rep
xchg
sbb
ficomp
pop
sub
ja
ret
jmp
hlt
push
adc
jns
xchg
xor
lea
in
ficom
div
sub
test
cwde
dec
mov
in
mov
(bad)
in
xor
xchg
pop
cs
pop
xchg
fstp
clc
sub
ins
mov
loope
in
loopne
pop
sahf
dec
sub
(bad)
(bad)
shr
sti
mov
mov
adc
jbe
addr16
cmps
adc
push
add
push
xchg
dec
adc
addr16
push
mov
xchg
pushw
shr
dec
js
jne
in
mov
nop
(bad)
push
push
jae
into
adc
imul
clc
pop
ret
mov
js
mov
stc
cli
pop
jg
xchg
sub
dec
nop
and
repz
ja
in
(bad)
mov
test
in
stos
xchg
inc
sbb
xchg
fbstp
into
outs
test
push
jne
repz
xchg
dec
mov
outs
xor
sub
xchg
cmps
pop
pop
fsubr
(bad)
lock
sbb
dec
cmp
cmc
js
or
fisubr
jl
loopne
retf
mov
leave
sub
jo
mov
scas
shl
neg
ret
xor
das
pop
out
sub
dec
xchg
jo
mov
cmps
add
mov
or
ftst
mov
in
lea
mov
cmp
nop
xor
xor
fwait
jge
adc
mov
xchg
shl
jle
mov
dec
leave
movs
(bad)
sub
xchg
push
fcmovnu
gs
and
xchg
mov
mov
sub
xchg
inc
jno
clc
xor
leave
xor
xchg
pop
mov
mov
(bad)
jmp
pop
popf
push
(bad)
xchg
nop
aaa
(bad)
cli
mov
fs
int3
je
shr
push
and
pushf
pop
nop
mov
push
xlat
and
pop
or
inc
clc
lods
mov
xchg
(bad)
loop
mov
and
inc
sub
sbb
jge
dec
fnstsw
cmp
mov
jmp
call
lds
lods
jle
enter
xor
sti
add
push
in
nop
mov
and
xchg
push
enter
loopne
dec
pop
cs
std
jge
pop
sbb
sub
js
icebp
rcl
mov
and
fcomp
sub
push
in
popa
inc
push
(bad)
jne
xchg
dec
adc
mov
mov
jo
sub
ret
(bad)
lods
cs
mov
and
lock
mov
push
scas
repnz
cmps
or
popa
cmp
fld
push
xchg
mov
jbe
mov
test
push
mov
fldcw
aaa
stos
push
test
push
xchg
lods
das
into
loopne
pop
jmp
sahf
cmp
pop
sub
cmp
in
mov
jb
jle
mov
or
jmp
ror
jmp
ja
jmp
fldenv
fstp
loop
inc
jp
outs
cmp
or
xchg
and
leave
add
xchg
cmp
lds
pop
cli
in
sub
sti
enter
xor
fdivp
or
mov
xchg
jecxz
outs
fnsave
and
cdq
shl
cmp
fdiv
into
pop
sbb
daa
call
xchg
and
xchg
jmp
mov
push
push
xchg
addr16
push
retf
or
(bad)
xor
hlt
(bad)
cmp
fnsetpm(287
cmp
test
dec
inc
cmp
lods
outs
les
xchg
adc
adc
fsub
jmp
mov
mov
jae
aad
push
(bad)
mov
add
dec
pop
call
pop
js
mov
aas
adc
cld
fist
mov
out
mov
pop
loopne
daa
leave
cwde
daa
or
std
xchg
pop
fbld
test
in
ja
stos
icebp
fdivp
lea
add
mov
cs
push
(bad)
mov
(bad)
call
daa
(bad)
cli
out
or
nop
xchg
push
mov
cmp
inc
imul
retf
xchg
adc
stos
les
cmps
adc
imul
or
cs
push
inc
lods
mov
push
inc
test
sbb
cs
sub
xor
inc
and
iret
jle
sub
dec
adc
cmc
xchg
mov
loopne
std
push
adc
inc
dec
je
movs
jo
pop
or
data16
sar
cdq
daa
push
clc
imul
dec
push
mov
sub
jle
test
push
retf
add
ss
in
pop
add
repnz
push
(bad)
out
das
fisubr
stos
ret
loop
cs
icebp
pop
stos
loop
cmc
fimul
pop
ins
xor
pop
or
sbb
fadd
push
and
mov
or
inc
(bad)
imul
xchg
xchg
jne
cmp
pop
mov
sub
xchg
xor
out
mov
pusha
mov
add
hlt
jno
push
ins
inc
xchg
add
push
mov
jne
sub
mov
pop
out
(bad)
mov
movs
cmp
call
pop
jae
pop
aad
mov
and
inc
mov
addr16
repnz
shl
xchg
in
test
ja
or
adc
mov
xor
pop
ret
push
mov
jp
stc
js
scas
cdq
inc
fimul
pop
sbb
stc
ins
dec
cmp
std
inc
(bad)
inc
lds
ins
cmp
push
jnp
or
xor
ret
rcl
shl
adc
cdq
dec
mov
int
jecxz
jo
inc
mov
or
data16
(bad)
and
dec
inc
and
mov
ret
mov
call
pop
repz
mov
xchg
sar
out
jnp
popa
aad
ins
out
and
cs
lahf
xchg
jae
repnz
pop
in
jle
cmp
sub
xor
and
mov
retf
aad
mov
or
call
sub
push
pop
inc
cmp
push
mov
mov
inc
jae
cmp
adc
xor
xchg
sub
ret
cld
adc
push
hlt
stc
push
loopne
rol
call
data16
jmp
mov
push
dec
aas
push
mov
push
aam
xchg
iret
or
sbb
test
or
ficom
aam
jmp
stc
fwait
fwait
js
out
cmp
mov
dec
iret
xor
and
ss
push
mov
imul
jle
xchg
sbb
jmp
(bad)
fadd
lock
ds
sar
and
and
sub
je
in
repnz
sub
adc
scas
test
inc
mov
(bad)
mov
jmp
mov
pop
push
in
pop
in
lea
(bad)
lea
jne
add
sti
pushf
rcr
rol
inc
loop
jbe
daa
adc
pop
inc
mov
fistp
jg
xchg
fcomp
pop
adc
fisub
loope
jns
add
or
mov
adc
pop
outs
loope
out
xchg
lock
sbb
sbb
rol
mov
inc
mov
jle
mov
icebp
lds
xor
push
cmp
aaa
dec
sub
dec
mov
cmp
push
test
les
mov
mul
cmp
cmp
pop
jns
xchg
cmp
cmp
aad
(bad)
hlt
into
cwde
jle
sbb
cmp
repz
pop
nop
pusha
mov
push
addr16
jle
(bad)
pop
jle
outs
scas
mov
cld
clc
xchg
mov
stos
cmp
mov
fmul
cmc
ja
sti
pop
sub
aad
jmp
inc
ins
test
mov
xchg
lea
dec
mov
fisubr
or
leave
dec
cmp
cdq
sar
mov
imul
jae
jno
std
jl
fist
add
sbb
xchg
and
arpl
push
jg
xor
cmp
or
mov
leave
lea
mov
es
out
(bad)
dec
stos
add
clc
push
sar
xchg
dec
xlat
popf
mov
dec
test
push
and
bound
add
sbb
enter
push
cld
or
xchg
adc
rcr
jp
jge
addr16
je
aas
lods
cmp
push
cdq
or
in
lds
js
xchg
sahf
push
imul
or
jge
(bad)
test
(bad)
(bad)
inc
mov
jmp
cli
mov
add
cmp
pop
outs
push
sbb
xor
jp
pop
xchg
imul
xor
dec
sub
stos
dec
add
std
fldenv
es
frstor
xchg
in
jmp
pop
sbb
aaa
ins
mov
popa
adc
lock
les
mov
xchg
mov
xor
dec
dec
addr16
cmc
adc
jecxz
xchg
xchg
ror
mov
lods
imul
das
clc
ffreep
sbb
movs
cmp
push
push
or
sub
xchg
push
into
test
call
out
push
xor
pop
pop
test
fistp
fsub
in
in
sbb
cmps
inc
pop
jns
test
mov
iret
bound
das
lods
add
jg
in
mov
repz
xchg
test
mov
xor
(bad)
xchg
lahf
mov
fisub
in
push
fs
or
dec
test
jbe
mov
inc
mov
dec
and
xor
push
imul
test
cmp
scas
or
mov
pop
sub
sbb
fidiv
push
ins
jecxz
mov
dec
nop
mov
sbb
(bad)
loope
cmp
lock
push
rcl
imul
jge
push
mov
fstp
mov
ds
or
and
or
in
adc
push
mov
xchg
inc
sar
and
repnz
push
xchg
sbb
daa
cmp
jae
ret
in
sti
push
jge
jae
jp
shl
mov
sub
out
push
rol
jb
ja
stc
movs
mov
ins
lock
jp
mov
loop
fbstp
xchg
rcl
ja
retf
push
les
aas
fild
jne
cdq
ja
cmps
pop
stos
pop
and
pusha
xchg
cmp
ja
icebp
clc
cmp
(bad)
les
lahf
xor
lods
add
push
imul
add
add
jg
sub
int
inc
sbb
les
mov
jmp
test
cmp
cmp
xchg
push
inc
fwait
mov
sbb
test
out
xor
lock
sahf
scas
cmp
scas
dec
mov
fst
iret
jne
jb
stc
jnp
mov
cmp
ret
cmp
(bad)
retf
xchg
add
pop
dec
jne
push
and
imul
std
(bad)
xchg
(bad)
cmp
and
cdq
inc
push
xchg
scas
stc
and
aam
repnz
jmp
aas
lahf
mov
fnstsw
shl
fst
enter
mov
dec
mov
retf
or
loopne
cmp
cmps
pop
repnz
or
mov
(bad)
and
jne
cmc
movs
fist
neg
jae
enter
add
sbb
in
sub
or
ret
data16
ror
and
jb
jge
icebp
in
out
nop
(bad)
inc
jo
movs
pusha
mov
and
push
xchg
xchg
fs
jnp
int
aaa
ds
(bad)
rcl
rcl
jns
jmp
test
ficom
pop
xchg
stc
call
outs
mov
cmps
sbb
mov
out
dec
push
daa
xor
jns
lds
movs
push
push
imul
adc
call
jle
ret
ins
aaa
ins
xchg
xor
aam
repz
stc
add
cmp
scas
nop
pop
hlt
outs
out
push
inc
adc
jne
jb
mov
retf
ss
mov
fmul
jmp
xchg
mov
sub
into
mov
retf
adc
sub
mov
jle
mov
repz
pop
push
retf
adc
test
mov
aam
jmp
adc
addr16
cmp
test
repnz
inc
fadd
(bad)
sub
data16
or
jo
jle
push
clc
addr16
cld
jnp
(bad)
mov
mov
xchg
push
cwde
xchg
es
xor
mov
cld
repnz
bound
in
adc
sub
mov
or
jo
pop
jp
mov
movs
jecxz
sbb
mov
and
scas
dec
add
cmps
push
mov
mov
jne
xchg
mov
push
cdq
pop
js
jo
in
mov
xchg
push
in
jae
sbb
sub
push
loope
clc
ret
mov
aam
lock
repz
jmp
bound
pop
mov
mov
push
inc
dec
mov
jmp
inc
mov
sar
cdq
and
stos
into
mov
and
imul
xchg
loopne
fucomip
jge
fist
addr16
aas
cmp
jae
push
ds
es
cmps
hlt
scas
es
test
arpl
int3
pop
imul
add
inc
fisub
xchg
sub
push
(bad)
shl
je
xor
ja
xchg
not
xor
call
sub
and
(bad)
jns
push
cmc
sub
inc
dec
sbb
rol
cmp
dec
imul
sub
mov
jnp
sbb
imul
test
dec
gs
push
or
adc
pop
imul
aam
ret
adc
das
adc
fsubr
jo
sbb
stos
clc
sub
and
cwde
hlt
adc
daa
les
fidivr
sbb
push
push
inc
(bad)
pop
push
inc
mov
xchg
jo
adc
xchg
pop
and
sti
imul
push
out
jle
pushf
jecxz
dec
popa
loope
sub
je
mov
and
sub
js
ret
in
mov
popf
adc
enter
fisub
mov
ret
in
xchg
dec
adc
dec
outs
xlat
pop
sub
xchg
jl
jecxz
and
sub
xchg
bound
call
je
mov
sub
inc
std
std
inc
jmp
jo
(bad)
ins
into
outs
dec
stc
hlt
inc
ror
push
xchg
pop
cld
sbb
xchg
inc
ret
icebp
mov
jmp
in
mov
sbb
scas
mov
cld
cdq
cs
mov
bnd
out
add
sub
rcl
push
jnp
ds
mov
sub
xchg
ja
mov
push
fbstp
gs
es
into
hlt
mov
ins
ins
mov
jb
rcl
jo
inc
retf
lds
cmps
cmp
jbe
fistp
iret
cmp
jp
int3
in
lods
lods
pop
and
xor
stc
add
jno
lahf
push
pop
adc
mov
or
and
outs
fistp
adc
add
es
(bad)
cmps
imul
int
xchg
mov
cmp
push
movs
lods
ins
or
jne
je
xchg
(bad)
jmp
push
(bad)
repz
fwait
sar
loopne
adc
or
(bad)
xchg
push
jne
adc
test
ret
pop
xor
ds
jmp
lahf
xchg
mov
jb
pop
inc
pop
pushf
mov
loopne
xor
mov
mov
adc
mov
clc
xchg
and
icebp
jnp
test
idiv
arpl
xor
and
in
daa
mov
ds
adc
sbb
sahf
sub
mov
js
aam
cmp
and
adc
xor
cmp
lahf
adc
out
sub
out
ins
jp
adc
xor
aam
pusha
imul
sub
out
lock
xchg
int3
das
push
fldenv
rcr
mov
cmp
sbb
ffree
popf
add
fucomi
inc
xor
int
loopne
pop
push
cli
test
jmp
call
mov
aad
jno
out
add
aas
js
cmps
pushf
mov
pusha
std
mov
xor
test
jmp
js
jmp
pop
sub
std
pop
mov
cld
jae
movs
dec
xchg
loopne
out
retf
push
push
cwde
pushf
mov
stos
mov
int3
dec
data16
cld
pop
movs
repnz
enter
ds
ret
pop
inc
jns
test
(bad)
nop
leave
popa
ja
inc
jp
pop
adc
mov
xor
mov
ds
and
xchg
lea
int
cmc
sbb
cmp
fdiv
jbe
je
retf
mov
pop
inc
inc
xchg
lahf
pop
jmp
cmps
lea
je
jg
push
jns
iret
ins
and
ret
cmp
sub
mov
fldln2
rol
pop
icebp
add
stos
and
scas
xchg
add
sbb
pop
push
jl
inc
mov
xchg
push
sbb
f2xm1
add
inc
push
mov
sbb
outs
out
pop
push
test
mov
sbb
xchg
xchg
xor
dec
lahf
mov
fs
dec
(bad)
cmc
adc
ficom
lea
pop
add
stc
mov
pop
jo
ins
mov
inc
push
clc
fld
push
call
mov
pop
sub
aad
push
stos
jns
nop
les
lods
inc
pop
xchg
xchg
or
icebp
xor
rcl
jno
shl
aaa
pushf
(bad)
mov
sbb
jp
push
xchg
mov
stos
push
push
jg
retf
push
add
std
mov
retf
data16
int3
ja
push
test
cmp
stos
mov
bound
inc
sub
movs
push
shl
xchg
pop
js
clc
repnz
and
lahf
in
aas
xor
inc
cmp
xchg
sub
test
icebp
lds
pusha
ret
and
mov
push
xchg
in
sti
jae
icebp
jecxz
mov
mov
sbb
xchg
nop
mov
sbb
pop
loope
das
push
stos
out
mov
jg
cli
ret
mov
sub
inc
sbb
xchg
shr
movs
das
jno
ja
pop
or
adc
cmc
fs
push
ret
aas
sub
inc
and
in
movs
sar
fwait
push
out
pop
dec
test
je
nop
mov
fxch
pause
cmp
cmp
pop
cmc
aam
cmp
push
mov
shr
movs
cmp
mov
pusha
mov
daa
ja
loopne
int3
(bad)
jo
iret
dec
ret
repz
push
push
scas
jno
mov
sbb
push
mov
push
xor
jns
les
jno
push
mov
ja
adc
xor
shr
sahf
sahf
sbb
hlt
inc
or
test
jge
push
ret
xor
movs
pusha
test
test
hlt
cmp
enter
sbb
fdiv
xchg
enterw
rcr
inc
mov
js
movs
xchg
popa
mov
inc
inc
dec
sub
jl
icebp
in
loope
push
cwde
in
mov
jno
push
mov
js
call
test
sub
mov
sbb
test
push
sbb
mov
sbb
xchg
cmc
fs
ins
jae
daa
or
sub
shr
adc
push
cld
rcr
dec
cmp
inc
iret
jp
jle
cmps
ins
lds
xchg
pop
sbb
pop
pop
mov
dec
jbe
sbb
pop
push
ret
fisubr
push
iret
loope
idiv
cmp
jle
and
pop
add
push
ja
adc
sbb
fbld
pop
jnp
pop
mov
out
movs
fcom
sub
dec
scas
arpl
mul
jmp
cmp
(bad)
pop
add
or
push
imul
fsubr
push
outs
std
aaa
aam
popa
sub
into
in
mov
imul
adc
jmp
iret
mov
xchg
dec
xchg
sti
adc
xchg
movs
ret
cli
xchg
add
jp
inc
mov
hlt
and
(bad)
mov
sub
dec
pop
and
pushf
sbb
mov
xchg
imul
sub
lahf
xor
jmp
xor
mov
jg
push
xchg
xchg
and
mov
mov
test
add
xchg
lock
pushf
inc
rol
sti
sub
shr
gs
pop
hlt
jns
sbb
xchg
and
mov
in
xchg
cmp
ret
fs
cld
retf
add
repz
das
inc
stos
mov
adc
add
sbb
xchg
mov
daa
ins
mov
pop
and
pushf
fistp
mov
mov
(bad)
in
jo
scas
arpl
aad
addr16
fs
sub
pop
adc
cmp
scas
ret
push
cmps
test
loope
rol
scas
inc
and
cmp
hlt
and
sti
and
imul
xchg
pop
jne
push
mov
pop
out
inc
adc
retfw
sub
inc
inc
xchg
ja
outs
pop
loopne
retf
mov
mov
scas
daa
push
and
shr
push
jp
mov
lss
mov
xor
not
xchg
jne
test
xchg
add
lahf
std
sbb
in
inc
pop
xchg
inc
leave
mov
xor
je
out
movs
sbb
mov
pop
test
mov
fcomp
pop
ja
push
(bad)
dec
sti
scas
rcl
sbb
adc
fstp
mov
fnstcw
adc
fadd
and
xchg
stc
int3
xchg
popa
mov
lods
rcr
pop
into
mov
fild
gs
cld
ins
sbb
mov
jge
pop
(bad)
sub
imul
out
mov
cmps
(bad)
mov
adc
out
push
mov
fisubr
in
push
push
cmp
push
dec
adc
in
inc
xlat
mov
loopne
jb
and
jmp
(bad)
retf
repnz
lock
sahf
jne
(bad)
xchg
push
xor
sub
popa
adc
and
imul
jp
cmp
loopne
popa
repz
and
sub
mov
push
hlt
lds
das
jmp
loopne
xchg
add
js
cmps
pop
adc
xor
cli
jae
out
inc
jp
xchg
pop
sub
retf
mov
fs
ror
(bad)
pop
jae
repz
mov
or
ficomp
xor
inc
mov
retf
in
das
sbb
js
xchg
dec
and
mov
xchg
mov
repz
push
xchg
rcl
sbb
ss
inc
clc
pushf
mov
xchg
inc
push
mov
sub
inc
inc
adc
and
nop
mov
pop
pop
or
pop
in
jg
aad
ret
xchg
add
sbb
ss
fsubr
je
icebp
out
adc
fldenv
in
dec
push
mov
xchg
pop
sub
or
dec
in
jge
add
sbb
xor
sti
mov
jo
sbb
in
adc
pop
(bad)
mov
mov
pop
gs
push
imul
adc
mov
pusha
fadd
test
push
stos
arpl
xchg
pop
lods
push
push
fwait
sbb
loop
add
xchg
sub
sbb
fisttp
loop
pop
xlat
ja
xchg
xchg
jbe
out
cmp
retf
xor
imul
jmp
sub
sub
cmp
idiv
xchg
sahf
(bad)
xor
cwde
push
jp
iret
pop
lahf
push
xor
xor
call
jp
stos
xchg
ss
jnp
aaa
je
ja
push
pop
(bad)
jle
rcr
fdivr
cli
out
inc
int
sub
into
ret
push
not
(bad)
dec
mov
pop
jmp
jae
or
pop
mov
mov
jns
loope
and
inc
das
cmps
scas
xchg
pop
push
adc
xchg
arpl
add
and
cmp
mov
adc
mov
add
pusha
xchg
push
iret
pop
inc
sub
aas
pop
jge
clc
or
fmul
mov
adc
test
pop
leave
add
dec
dec
test
mov
lahf
pop
sub
shr
jl
xor
and
imul
cmps
sbb
pop
scas
push
fadd
fcmovne
jo
pop
jne
inc
xchg
enter
mov
bnd
sub
mov
outs
out
div
clc
xchg
mov
das
push
xor
(bad)
push
mov
mov
stos
add
mov
sbb
repnz
fld
push
lock
push
push
push
ja
pop
xchg
cmp
jmp
dec
jnp
cdq
bound
daa
std
cli
call
outs
dec
bound
mov
mov
fs
inc
mov
dec
ins
and
icebp
push
mov
adc
int
or
retf
sti
popa
loop
jl
fldcw
into
(bad)
jp
xchg
pop
fmul
out
lods
cdq
cmp
out
mov
cs
jb
cdq
sbb
cmp
test
stos
xchg
(bad)
sbb
mov
loope
pop
jp
sub
out
pop
xchg
icebp
pop
aaa
adc
push
leave
mov
icebp
push
xor
inc
jne
sbb
(bad)
mov
js
lods
jne
scas
aaa
mov
rol
jne
jne
int
je
fistp
jno
push
imul
sar
xchg
inc
mov
rol
or
rol
push
dec
push
loope
inc
cs
fcmovnb
js
out
sbb
push
mov
dec
clc
js
rcr
or
jbe
retf
pop
rol
int3
and
cs
mov
ins
pop
cmps
je
jle
ret
mov
sub
push
jmp
and
sub
in
(bad)
loope
cli
daa
nop
add
rcr
ret
cmp
xchg
aad
or
inc
adc
icebp
cli
pop
aaa
inc
and
jmp
jle
pop
adc
ja
cmp
std
sub
inc
xor
dec
mov
mov
fdivr
adc
add
xchg
xchg
shr
xchg
lahf
(bad)
loop
js
cmps
into
aam
stos
outs
retf
xchg
pop
dec
jb
cmc
add
cmc
mov
ds
sbb
mov
(bad)
into
inc
xchg
cwde
clc
push
xchg
fadd
jge
(bad)
in
push
xor
and
jp
cmp
add
ins
mov
lea
ret
sti
stc
pop
inc
div
jg
test
adc
enter
fst
jne
call
ret
inc
lods
jb
xor
xchg
(bad)
pop
push
in
add
shr
ret
pop
mov
sbb
dec
addr16
test
daa
xchg
fistp
xchg
adc
mov
in
and
clc
xchg
sbb
sbb
cmp
retf
dec
inc
in
or
movups
inc
inc
in
xchg
pop
mov
and
dec
pop
jmp
arpl
loopne
mov
nop
cmps
(bad)
in
sbb
xchg
icebp
mov
mov
test
(bad)
loope
mov
xchg
push
or
imul
pusha
ret
xchg
out
mov
repz
sub
push
mov
(bad)
pop
jns
test
shl
stos
cdq
repz
sub
cmp
jb
imul
test
loopne
scas
push
mov
loopne
pop
push
imul
and
ret
mov
movs
pusha
mov
jne
mov
rep
inc
fisub
clc
ret
push
mov
sub
int3
mov
inc
xchg
inc
fstp
mov
into
sar
push
adc
mov
movs
dec
xchg
addr16
jg
sub
mov
cmp
jle
xor
inc
in
cmp
repnz
sub
int
popf
mov
bound
adc
lods
push
jp
shl
xchg
jmp
xlat
adc
push
test
dec
inc
xchg
cmp
adc
mov
hlt
mov
mov
mov
movs
imul
div
fistp
pop
mov
jb
and
push
pusha
pop
mov
mov
movs
xchg
xlat
lea
pop
(bad)
mov
xchg
jb
mov
aas
and
cmp
push
cmp
sub
js
sub
and
and
leave
sbb
push
add
push
jo
cli
xchg
je
add
repz
mov
cmp
jnp
je
adc
iret
push
sbb
pop
dec
push
push
xchg
cmp
sbb
sub
cld
in
jmp
and
inc
clc
mov
add
inc
mov
mov
nop
cmp
out
dec
jge
adc
mov
imul
jl
adc
adc
fist
push
sti
sub
dec
xor
jmp
nop
and
or
pop
fstp
lahf
arpl
lock
cmc
pop
push
aas
jne
cmps
mov
lods
jns
add
cs
inc
inc
mov
cld
push
ret
jp
fs
test
inc
dec
mov
dec
pop
push
xchg
push
mov
or
sbb
mov
adc
imul
es
pop
into
dec
mov
lock
mov
jbe
call
clc
xchg
pop
push
(bad)
(bad)
inc
jg
xchg
lea
xor
or
aaa
push
and
and
and
jns
shl
jb
xor
mov
lods
or
mov
loopne
push
xor
fdiv
cld
jecxz
mov
pop
bound
retf
cwde
xchg
mov
fucom
add
out
imul
mov
jmp
ror
dec
es
lods
mul
aad
cmc
push
inc
fiadd
cmp
push
push
das
xchg
cld
push
mov
lds
fucomi
jne
shl
xchg
leave
pop
mov
cmp
sbb
or
hlt
cli
in
cmc
dec
jg
cmp
hlt
xchg
push
cmc
fisub
mov
outs
sbb
mov
mov
movs
pop
data16
push
(bad)
adc
(bad)
(bad)
jne
add
clc
xchg
sbb
pop
or
scas
sbb
xor
jmp
pusha
mov
pop
call
call
jno
adc
push
shr
lods
ins
push
mov
jp
ds
jbe
rcr
fstp
retf
pusha
pop
popf
rcl
cmps
pusha
and
pop
adc
imul
sbb
adc
jb
ret
inc
and
dec
mul
and
sbb
push
and
out
ins
inc
lods
or
loope
inc
cmc
jecxz
sub
sbb
jne
mov
cld
xor
sbb
jne
movs
inc
jne
xlat
or
pop
(bad)
dec
cmps
sub
adc
pop
jnp
pop
in
loopne
push
xchg
jb
pop
ja
test
cmp
ja
sub
jns
push
adc
add
out
retf
sbb
pop
and
sbb
es
jmp
jp
ror
or
test
(bad)
sbb
adc
jae
jnp
sub
pop
sub
sti
test
les
out
cmp
ins
sbb
sub
retf
in
push
in
dec
add
jmp
cmp
jge
js
loopne
aad
clc
xor
mov
arpl
mov
std
loopne
or
imul
das
fiadd
fsubr
jo
and
je
mov
inc
xchg
or
jnp
in
xor
cs
adc
jecxz
imul
fs
jmp
jmp
popf
pop
cli
adc
xor
xchg
dec
xor
and
icebp
in
pop
ins
cmp
repz
enter
ret
sar
adc
pop
jl
adc
data16
inc
jo
fdivr
xchg
rcl
jecxz
mov
jnp
cli
cmc
jge
sub
push
je
push
cmp
fstp
mov
xor
mov
cmp
sub
mov
es
xlat
jns
call
mov
mov
mov
div
mov
rcl
inc
ds
retf
sub
sub
cmp
jnp
cli
cmps
call
ror
and
rcr
xchg
inc
sub
loopne
jmp
mov
push
not
adc
lea
sub
inc
xchg
ret
jp
push
and
and
add
mov
popf
fs
mov
out
inc
xchg
cmp
lock
std
sbb
in
lock
pushf
mov
(bad)
push
add
pop
jae
push
test
push
jmp
(bad)
or
jmp
sbb
xchg
cmc
je
test
sub
sub
cmps
mov
mov
(bad)
xchg
js
cmp
pop
(bad)
in
xchg
push
arpl
cmp
adc
scas
push
clc
mov
in
out
pop
jns
loopne
sar
jmp
sub
cwde
adc
int3
jge
test
test
neg
and
inc
cdq
push
outs
or
sbb
daa
ret
lds
ins
push
lock
in
repnz
cwde
fldcw
and
pushf
loope
stos
cwde
and
bound
pop
cmp
push
lods
pop
mov
or
mov
movs
not
xor
mov
cmp
test
xor
push
adc
mov
cmp
and
mov
mov
fwait
test
in
mov
dec
clc
pop
cmp
adc
jle
outs
imul
cwde
les
pop
je
and
and
test
push
mov
jnp
icebp
in
jno
cmp
sbb
mov
jmp
push
test
cdq
sar
mov
imul
int3
retf
das
pop
fiadd
gs
test
(bad)
(bad)
xor
ror
or
inc
test
hlt
or
lahf
shl
mov
xchg
(bad)
adc
pushf
shr
mov
cmp
sub
movs
(bad)
stos
out
jns
or
retf
sub
sbb
gs
aad
movs
mov
xchg
pushf
or
imul
arpl
adc
jbe
(bad)
xchg
data16
add
xor
mov
add
jnp
fsub
pusha
xchg
das
adc
lahf
imul
or
xchg
jmp
hlt
dec
and
rcl
fdiv
pop
inc
pop
ins
push
sub
je
fsubr
push
sbb
cmps
in
clc
inc
sbb
das
xor
call
mov
jne
pop
sub
pop
ds
jmp
mov
sub
jle
bound
pop
and
dec
imul
pop
mov
push
xchg
mov
lods
mov
and
dec
push
jecxz
aas
and
mov
fs
jecxz
adc
jne
push
xlat
in
mov
push
xchg
inc
clc
retf
into
mov
mov
mov
jae
mov
adc
push
xchg
sbb
xchg
xor
mov
cld
jmp
call
ss
stc
pop
push
fdivrp
cmp
ret
or
call
pop
je
es
fidivr
add
fld
pop
sub
cmp
hlt
xchg
cs
jo
movhps
jo
mov
inc
and
adc
fcomp
jne
pop
mov
jae
dec
cmps
jbe
dec
pop
mov
jne
xchg
std
add
ins
mov
dec
icebp
icebp
pmulhw
xor
fbld
ins
lods
loop
rol
cld
push
adc
out
adc
test
shr
iret
or
and
fstp
sti
mov
inc
retf
sti
call
xchg
and
pop
mov
xchg
xchg
xchg
test
dec
jns
push
(bad)
pop
mov
rol
imul
mov
daa
scas
add
mov
xchg
jmp
pop
and
xor
pop
ret
std
cli
jo
out
fldlg2
std
pop
mov
xadd
icebp
out
mov
leave
fsub
in
push
data16
cmps
jge
in
mov
cmp
jne
lahf
stc
imul
ja
lods
popa
xchg
push
push
cmove
cld
sbb
cld
mov
aas
sub
mov
sbb
and
call
fistp
mov
pop
int3
mov
js
loope
aam
mov
repz
and
or
jp
jmp
out
jecxz
cmp
or
mov
movs
cmp
xchg
int3
pop
pushf
ja
sahf
mov
cs
in
xchg
inc
sbb
sub
jns
adc
es
mov
imul
adc
add
xor
arpl
test
jge
test
sub
call
rcr
sub
dec
mov
push
mov
jb
cwde
mov
xchg
sbb
adc
dec
jp
push
xchg
inc
mov
sub
das
pop
or
in
inc
loope
adc
push
mov
or
push
inc
xchg
jg
lods
shr
dec
js
rcl
cli
fs
fcmove
daa
sbb
ret
out
ror
mov
sub
fist
push
mov
lds
leave
into
push
aad
cmp
movs
out
jb
cmc
(bad)
mov
pop
leave
cli
xchg
mov
mov
mov
push
sbb
xor
mov
pop
mov
test
lock
adc
cmps
xor
fld
push
dec
in
jmp
loopne
push
test
jl
dec
fimul
std
sbb
push
loope
leave
ins
cld
icebp
mov
out
cli
push
or
nop
push
jge
mov
and
mov
(bad)
fs
test
xlat
mov
or
stos
xor
ins
pop
in
push
mov
hlt
mov
(bad)
dec
mov
cmp
loop
test
or
xor
or
cmp
mov
(bad)
dec
and
aad
adc
dec
call
dec
sbb
clc
mov
ficomp
dec
dec
ret
mov
cli
not
in
xchg
push
dec
je
and
std
or
into
rcr
scas
add
mov
cmp
inc
dec
outs
repz
cmp
and
xor
fsubr
mov
pushf
mov
push
sub
dec
lea
jmp
imul
hlt
pop
(bad)
fsubr
sbb
jnp
pop
sub
sbb
aad
push
dec
fcmove
out
inc
xor
sbb
sub
push
and
movs
movs
les
jg
mov
jl
adc
sub
xor
mov
adc
daa
add
ret
pop
ins
fldpi
das
mov
imul
and
adc
mov
dec
cmp
push
cmp
and
mov
mov
jmp
and
ins
sar
jae
call
in
and
(bad)
cs
lods
loope
dec
mov
jns
and
fwait
mov
in
cli
xchg
adc
adc
add
shl
cdq
sbb
jne
rol
ficomp
neg
sub
inc
mov
adc
cmp
mov
popa
dec
xor
sahf
outs
cdq
mov
inc
jmp
sbb
cwde
mov
mov
push
push
in
por
lods
stos
test
inc
push
adc
sub
mov
jmp
loope
shl
shl
pop
hlt
xchg
xchg
das
mov
or
inc
repnz
jne
cmps
pop
fist
in
mov
cli
xchg
ja
push
sub
inc
push
cdq
mov
xchg
xlat
fiadd
inc
les
(bad)
mov
mul
pop
je
jne
sbb
or
lock
pop
push
ret
inc
or
mov
xor
(bad)
call
lahf
cwde
fidiv
xchg
jg
sub
jb
pop
xchg
and
and
xchg
addr16
mov
dec
add
popa
sub
sahf
add
jne
and
les
jb
add
jbe
add
mov
mov
push
xor
push
adc
sub
es
xchg
push
(bad)
outs
mov
jge
shl
int3
xor
jp
stos
ret
xchg
cmp
fs
mov
adc
call
cmp
jne
xchg
jge
adc
sti
or
xchg
or
inc
and
xor
fdiv
cmc
xchg
and
inc
xchg
imul
jl
mov
dec
pop
(bad)
cmp
push
repnz
pop
clc
cld
inc
inc
mov
pop
pop
jne
xchg
es
jge
mov
icebp
and
loop
das
scas
cmc
retf
into
and
loopne
ins
les
xchg
pop
mov
(bad)
xchg
push
jmpw
int
test
jp
and
jnp
ret
cmc
jns
test
jno
sub
dec
xchg
xchg
in
mov
ror
xchg
cmc
mov
bound
jne
int
xchg
retf
sti
data16
icebp
xchg
dec
inc
cmc
push
pop
shl
retf
lds
pusha
loopne
sub
daa
ja
sahf
cld
add
xchg
mov
lods
add
lds
rsm
shl
push
dec
mov
stos
jle
and
xchg
cmc
scas
xlat
mov
(bad)
popf
loope
add
push
xor
jp
icebp
fild
sub
mov
out
dec
out
push
cmc
pop
shl
(bad)
aas
mov
dec
xchg
in
jne
and
into
sub
and
push
mov
push
pop
clc
xlat
push
fadd
jne
fs
adc
aam
xchg
test
gs
repz
jmp
xchg
inc
imul
retf
nop
sub
int3
inc
jne
ins
pop
add
pop
sbb
mov
out
adc
cmps
sub
imul
xchg
cmp
fs
fistp
sub
inc
mov
push
pop
out
outs
aam
in
bsr
mov
xchg
push
jnp
adc
sbb
jle
mov
cmp
je
mov
sbb
mov
push
jae
pushf
mov
adc
imul
add
mov
(bad)
push
xchg
jno
mov
ret
ret
cmp
enter
loopne
sar
jge
mov
js
sar
fwait
cmc
push
(bad)
push
js
mov
mov
test
cmc
add
mov
or
out
mov
cld
mov
add
push
jmp
mov
mov
(bad)
std
jp
mov
dec
inc
cdq
arpl
xchg
test
cdq
or
mov
jl
inc
(bad)
sbb
xchg
(bad)
mov
nop
ret
sti
ror
mov
adc
sahf
or
daa
xchg
cmp
mov
aaa
push
movs
or
imul
fwait
jae
(bad)
xchg
mov
repz
pop
xchg
xor
lds
outs
lock
psubq
push
xchg
jle
jmp
js
xchg
sub
stc
arpl
in
movs
(bad)
jnp
mov
ror
ins
js
sub
sub
mov
and
in
xor
cmps
iret
ud0
xchg
pop
in
shl
aaa
inc
mov
xchg
and
jecxz
jo
push
clc
jp
or
(bad)
(bad)
xchg
push
int
cmp
add
daa
cmp
pop
pop
push
mov
jl
test
xor
das
sbb
repnz
jge
rol
sbb
cmp
gs
dec
xchg
sbb
mov
dec
pop
shl
hlt
retf
push
mov
js
aas
xchg
mov
jmp
inc
mov
cmp
inc
pop
(bad)
clc
lahf
daa
cld
push
outs
int3
pushfw
sub
mov
fist
je
sub
(bad)
daa
fs
jbe
mov
test
xlat
sub
mov
adc
jp
pop
xchg
aam
jb
sbb
mov
fwait
in
or
stos
mov
idiv
leave
fnstsw
pushf
js
mov
addr16
push
pop
addr16
cmc
sub
sub
sbb
mov
jecxz
jbe
or
ja
xor
pop
mov
ret
sub
fwait
jmp
mov
or
test
pop
mov
mov
(bad)
push
lock
dec
mov
or
js
aaa
push
jmp
in
sbb
ds
(bad)
mov
ds
xchg
jnp
pop
js
lea
xor
in
push
push
arpl
je
jae
mov
daa
push
mov
cmp
push
lea
outs
mov
loopne
jb
pop
pop
movs
test
jmp
(bad)
clc
int3
lds
cmp
fs
push
xchg
push
fcmove
test
ret
mov
inc
xchg
iret
test
inc
xchg
call
je
retf
xor
sbb
nop
jbe
xchg
add
jmp
push
mov
repnz
(bad)
pop
mov
and
push
and
test
add
jne
loope
sahf
lahf
and
dec
(bad)
push
push
mov
sbb
xchg
pop
(bad)
jp
adc
lahf
mov
push
sbb
call
int3
pusha
leave
mov
pop
mov
push
or
sub
sbb
jmp
les
fnstenv
sbb
mov
popa
pop
ins
pop
movs
and
cmps
and
loope
dec
sub
shl
daa
shr
cwde
dec
cs
xchg
xor
pop
or
cmp
jne
dec
gs
rcl
adc
mov
push
sbb
sahf
(bad)
cmp
es
lods
pop
gs
in
adc
shl
call
inc
jmp
dec
cmp
iret
fidiv
mov
sub
aas
xor
fiadd
sbb
repz
and
lea
jmp
cwde
movs
cli
pusha
push
ins
cld
mov
repnz
fs
stos
and
jg
mov
lahf
jmp
call
gs
enter
mov
outs
push
aaa
fld
out
mov
(bad)
cs
call
and
dec
push
mov
mov
dec
imul
pop
push
outs
out
push
lea
xchg
mov
cmc
and
sub
jae
and
xchg
push
les
sub
mov
xchg
data16
mov
stos
pop
jmp
icebp
idiv
cmp
das
pop
ret
push
sub
les
adc
bswap
mov
iret
cmp
dec
adc
xlat
je
ins
mov
mov
cwde
mov
sub
sbb
adc
fwait
xchg
(bad)
or
aaa
push
push
sar
and
in
fmul
pop
mov
lock
outs
cmp
lods
rol
cmp
jno
jmp
push
out
(bad)
retf
jle
pop
xchg
dec
ret
call
mov
xor
cmp
jb
in
das
cmp
in
jb
daa
(bad)
ficom
cmp
out
pop
pusha
stos
push
jnp
xor
sub
add
xchg
adc
nop
in
adc
jmp
jo
xchg
mov
cmc
in
dec
daa
mov
and
cmps
xchg
jns
jne
push
inc
and
aaa
popa
inc
hlt
mov
out
push
sub
add
inc
nop
jns
dec
push
fwait
push
adc
scas
mov
jmp
mov
icebp
mov
inc
mov
sbb
and
clc
pushf
xchg
or
jnp
fs
adc
pop
inc
out
hlt
sbb
ror
xchg
call
mov
lea
push
test
xor
fs
imul
mov
xchg
xor
pushf
xor
je
sub
pop
xchg
and
jnp
xchg
fidivr
xor
mov
mov
test
mov
mov
mov
repnz
dec
adc
jnp
push
not
xchg
mov
imul
push
xchg
lods
das
mov
sbb
retf
mov
or
in
(bad)
in
addr16
sbb
xchg
nop
jb
dec
cmp
jbe
pop
cmc
inc
daa
cmp
xor
imul
add
sub
xor
cmp
test
push
xor
push
stos
mov
pop
dec
xchg
mov
hlt
add
push
inc
push
sub
jnp
xchg
cmp
mov
mov
mov
jmp
inc
adc
jno
push
shl
add
mov
call
repz
mov
jecxz
push
xchg
stos
sub
adc
in
test
jb
xor
pop
mov
or
push
xchg
xchg
test
xlat
daa
push
adc
call
out
sahf
fsub
xor
aas
inc
loopne
mov
push
sbb
cli
sub
into
pop
cli
add
rcr
cli
xchg
cmp
pop
mul
and
dec
retf
inc
fiadd
rol
(bad)
and
add
fdivr
jmp
xlat
repz
xchg
das
scas
mov
cmp
sub
fldcw
lods
pop
lds
mov
xor
adc
out
dec
sbb
call
xchg
xchg
or
je
fcmove
mov
or
adc
fisttp
sbb
(bad)
outs
inc
js
jno
or
ficomp
test
xor
mov
out
mov
dec
(bad)
mov
test
and
mov
jno
call
fnsave
mov
jns
or
xor
(bad)
pop
mov
sub
inc
aaa
jle
test
mov
add
mov
jp
push
pop
rcl
mov
sbb
add
cmp
sbb
add
stos
cs
call
mov
xor
push
jb
xchg
call
cmc
mov
jne
sub
mov
mov
xchg
fs
sti
xor
ins
popf
mov
cwde
push
jp
test
or
mov
das
xor
in
movs
jnp
stos
je
psllq
dec
sub
jmp
je
mov
icebp
sbb
xchg
cdq
xor
jp
fnstenv
inc
jbe
cli
pushf
cmp
mov
adc
add
pop
xchg
xor
push
shl
xchg
cmp
fld
sub
fwait
sub
test
sti
xchg
and
test
adc
sar
adc
ins
enter
inc
dec
xchg
inc
(bad)
enter
mov
arpl
lods
loopne
scas
sbb
pop
icebp
push
test
in
adc
and
push
cmp
sti
pop
adc
mov
gs
movs
push
stos
add
push
mov
leave
dec
sbb
jmp
xchg
imul
mov
popa
shl
dec
adc
aas
fdiv
xchg
mov
sub
xabort
jnp
je
lock
or
mov
sub
shl
inc
jle
lock
push
xor
push
es
fwait
jge
outs
cmp
cld
or
mov
pop
enter
pop
push
sbb
ret
jo
dec
stc
ret
(bad)
retf
(bad)
xchg
(bad)
addr16
cmp
pop
js
dec
dec
mov
sub
das
jle
lods
ret
mov
gs
loope
sbb
test
jbe
xor
int
mov
xlat
or
fldcw
scas
push
sub
test
xor
sbb
mov
jo
mov
mov
xor
sub
pop
cld
adc
inc
fwait
outs
xor
mov
clc
jmp
push
hlt
dec
jecxz
imul
or
enter
jns
jo
push
fiadd
pop
pop
push
outs
call
xchg
mov
out
popa
push
sbb
cdq
(bad)
imul
mul
call
mov
or
mov
cld
nop
retf
dec
jbe
int
jecxz
mov
lahf
jge
push
mov
std
sbb
mov
fwait
imul
lods
mov
bound
pop
push
scas
push
popf
mov
jo
mov
in
or
subps
fnstenv
xchg
jbe
inc
jp
ffreep
int3
mov
and
gs
out
cmps
pop
mov
stos
addr16
ss
pop
adc
rol
or
adc
inc
ret
cmp
push
cmp
cmp
xor
add
call
adc
or
jle
dec
ret
mov
pushf
ror
(bad)
(bad)
push
popf
or
sub
clc
push
(bad)
sbb
and
cmp
xor
push
xchg
inc
adc
or
push
sub
sbb
popf
cli
jns
xor
mov
pop
int3
or
dec
leave
jp
aad
sub
test
cwde
sub
cmp
pop
or
jl
push
movs
cdq
loopne
adc
addr16
mov
mov
lahf
ficomp
xchg
sub
jno
sbb
add
jbe
push
dec
push
xor
sbb
pop
xchg
push
and
(bad)
sub
into
push
push
inc
adc
sub
mov
imul
and
movs
xchg
mov
cmp
xchg
pushf
mov
sub
or
iret
mov
jp
xchg
or
xor
daa
sbb
mov
clc
leave
push
hlt
jnp
call
jnp
ds
movs
lahf
scas
popa
jge
adc
cmp
jge
icebp
cli
or
mov
push
pop
pop
adc
dec
js
imul
jg
les
into
int3
call
es
adc
sub
xchg
sbb
je
clc
outs
mov
test
daa
push
mov
and
jnp
and
enter
fdivr
dec
fcom
lea
les
xchg
jns
xor
cmps
std
mov
push
cmc
push
push
add
cmp
sub
in
add
add
jecxz
in
or
fbstp
out
shl
sbb
xor
cmp
dec
aad
push
mov
mov
es
movs
pusha
jmp
jmp
push
jns
imul
outs
mov
mov
aam
(bad)
cmp
stc
mov
cld
sbb
les
(bad)
xchg
jge
cld
and
test
mov
sbb
pop
in
ds
(bad)
add
push
push
push
jns
ins
jns
xor
mov
and
jns
aas
mov
test
sbb
iret
mov
lds
cld
xchg
test
or
mov
in
call
dec
imul
fdiv
(bad)
fwait
dec
fnstcw
sbb
shl
push
in
cmp
sub
xor
dec
call
dec
in
mov
sub
xor
pop
sub
push
mov
shr
int3
aas
fisubr
xchg
std
adc
add
jmp
adc
stos
inc
addr16
repnz
fldcw
clc
clc
jne
mov
icebp
or
jge
inc
daa
dec
xchg
push
cli
sbb
mov
sub
mov
or
je
les
jb
mov
test
sub
sub
in
jnp
dec
in
sbb
jnp
push
xchg
es
xchg
lock
adc
mov
daa
and
push
push
into
lahf
scas
aad
fs
sahf
pop
shr
out
pop
jl
adc
(bad)
and
fstp
adc
cld
sub
or
jae
adc
jmp
xor
es
out
add
dec
push
arpl
add
imul
in
jne
mov
mov
pop
cmp
jne
xor
je
test
push
lds
adc
xchg
inc
xor
xor
push
cmp
jne
mov
inc
adc
outs
jno
and
cwde
leave
popf
xchg
add
xlat
enter
outs
je
jmp
dec
sub
pop
data16
jg
jle
sar
sbb
data16
cdq
sbb
jnp
cdq
inc
ret
adc
js
(bad)
mov
xor
pop
pop
popa
icebp
mov
mov
mov
test
adc
or
in
or
dec
imul
jb
ret
push
mov
dec
xchg
sbb
repnz
arpl
sbb
mov
cmp
xchg
aaa
pop
add
lds
dec
ret
pop
dec
cli
cdq
pop
pop
inc
enter
or
dec
stos
pop
add
push
mov
cmp
dec
(bad)
push
push
mov
(bad)
daa
cmp
aad
fild
mov
jmp
jge
or
xchg
jo
test
pop
loop
fsubr
out
dec
jmp
pop
sbb
xchg
fidivr
inc
rol
cmp
jb
push
popf
jmp
cmps
int
push
jg
mov
cli
outs
in
mov
lods
pop
adc
pop
retf
iret
pop
xchg
mov
(bad)
or
cmp
add
xor
repnz
call
pop
hlt
jl
adc
ja
jmp
rcl
push
icebp
dec
popa
inc
jne
dec
imul
mov
fistp
test
xchg
(bad)
or
(bad)
mov
aam
and
sub
push
int
sub
inc
shr
mov
mov
inc
jmp
cmp
into
fcomp
bound
jno
jne
adc
call
jecxz
jmp
push
clc
out
xchg
xor
inc
les
dec
and
jl
adc
push
sbb
adc
cld
adc
adc
jne
retf
fbld
aam
stc
in
ins
hlt
jle
pop
daa
and
cwde
popa
fimul
out
loop
inc
dec
mov
sbb
shl
mov
xchg
dec
mul
or
mov
jp
ss
jns
push
mov
ins
and
(bad)
jne
xchg
or
hlt
repz
je
pop
push
ja
fcom
mov
adc
movs
xor
cmp
in
outs
jg
pop
jecxz
sub
pop
lock
mov
stos
cmps
out
fcmovnu
ret
fdivr
sub
cmp
hlt
push
sti
imul
repz
adc
and
push
and
jl
mov
push
outs
out
lds
xor
mov
leave
ins
sub
cmc
push
push
pop
jp
xchg
sub
dec
pop
jge
or
sub
test
cs
jp
cmc
push
call
xchg
pop
pop
cmps
mov
mov
lds
mov
icebp
int3
lea
shl
mov
cli
push
rol
or
mov
arpl
adc
xchg
cmps
out
dec
test
cmp
adc
into
jae
push
push
sub
daa
call
fld
cld
stos
cmp
cli
scas
jnp
out
sub
pop
jmp
adc
int
mov
push
cmps
sahf
mov
call
push
sub
or
mov
fnsave
sti
test
inc
fs
vpaddusb
inc
xchg
je
push
js
bound
push
adc
push
fwait
xlat
test
outs
mov
adc
je
mov
int3
sbb
mov
push
lea
xchg
hlt
jo
neg
jmp
cdq
mov
(bad)
stc
jb
mov
sbb
push
sti
repz
and
sahf
sbb
mov
adc
daa
cdq
jb
push
iret
(bad)
pop
les
mov
jae
mov
add
aam
int3
fistp
mov
mov
ss
cmp
test
pushf
jmp
out
mov
sbb
sbb
sahf
cmps
mov
fcmove
std
jne
inc
pop
mov
aad
jl
or
sub
push
adc
sub
loope
imul
mov
shl
cmps
inc
jmp
stos
movs
xchg
mov
and
(bad)
cld
pusha
inc
adc
push
dec
jne
dec
js
retf
push
(bad)
sti
ins
retf
int
dec
pop
jecxz
jmp
xchg
push
fisubr
or
idiv
test
pop
clc
xchg
ret
imul
mov
or
cmp
jae
push
sub
das
outs
xor
sub
sub
inc
xchg
out
leave
and
(bad)
jge
xchg
les
dec
rol
enter
xchg
jp
adc
mov
jbe
out
jle
xchg
add
jns
ret
loopne
cmp
ret
(bad)
sub
xchg
sub
(bad)
mov
jle
fstp
xchg
mov
(bad)
xchg
jle
and
mov
daa
push
mov
mov
xor
retf
fs
mov
adc
xor
push
add
mov
mov
jns
jb
jb
divps
js
test
lahf
or
movs
dec
shr
fnstenv
(bad)
sub
and
dec
std
scas
sbb
pop
mov
retf
sbb
mov
push
retf
out
sti
sub
cs
(bad)
push
and
mov
ror
cmps
push
cmp
loope
imul
mov
cmps
xor
dec
mul
jae
je
or
shr
out
arpl
cmp
xchg
jbe
sbb
and
pusha
mov
dec
or
or
mov
add
cmp
aam
cmps
jno
stc
xor
sti
push
push
inc
hlt
add
cmp
imul
aam
adc
push
rcr
jmp
push
mov
sar
xchg
jp
pop
cmp
call
or
std
jmp
dec
xlat
pop
ret
dec
add
repz
das
loopne
iret
jl
push
jecxz
lahf
sbb
push
push
jne
jns
lds
cmp
sub
ins
ds
cs
or
ja
pop
adc
jae
(bad)
jo
nop
sbb
jmp
std
xor
fwait
xchg
cmp
or
cmc
js
into
fcom
or
ja
call
jecxz
xchg
xchg
imul
in
mov
(bad)
pop
cmp
cmp
pusha
ret
repz
(bad)
inc
inc
or
enter
ret
mov
inc
lods
test
or
ret
xor
cmp
jmp
cmp
cmc
add
jle
leave
clc
addr16
mov
fild
jge
adc
inc
xor
gs
cmp
out
adc
mov
mov
(bad)
mov
retf
pop
xor
das
mov
mov
in
cwde
out
mov
loope
mov
jb
or
in
inc
out
sbb
(bad)
push
sti
fdiv
outs
test
mov
fsubr
pop
jmp
inc
popf
push
pop
adc
or
stc
(bad)
rol
xchg
in
test
fsubr
pcmpeqb
mov
call
jp
jbe
cmp
xchg
sbb
mov
(bad)
jnp
dec
sbb
nop
loopne
outs
push
xor
js
mov
push
pop
push
daa
push
dec
xor
jo
inc
call
fwait
out
aaa
cmp
les
lds
sbb
fwait
push
out
fld
mov
sti
call
sub
or
data16
(bad)
pop
stc
(bad)
jmp
mov
pop
ds
arpl
call
and
in
outs
cmps
int3
lea
cmp
hlt
ficom
enter
mov
and
pop
and
mov
cmp
sbb
xchg
pop
ds
mov
cld
je
sbb
dec
out
dec
outs
mov
lds
cli
cs
repz
or
adc
jl
inc
xchg
in
stos
mov
add
cmc
data16
mov
cmp
pop
aaa
les
push
jno
add
rcl
cs
pop
outs
jecxz
xor
sbb
add
and
mov
lds
jae
fcomp
cmp
sub
xchg
ret
ror
loopne
ja
and
repz
mov
out
stos
sub
neg
xchg
clc
in
lods
popf
or
sbb
xor
or
sbb
ja
and
xor
xchg
pushf
dec
ret
cmc
inc
adc
and
adc
addr16
xor
add
mov
add
xchg
xor
gs
jnp
cld
dec
cwde
ds
xchg
iret
je
xchg
adc
ja
sbb
call
retf
mov
cld
mov
push
ret
pop
cwde
jge
push
jnp
popa
lea
pop
in
cmps
loopne
fidiv
ins
gs
in
pop
jge
rcr
cmp
retf
xor
popf
push
(bad)
mov
ret
or
shl
scas
push
lods
add
int3
or
fucom
jmp
pop
mov
cmp
pop
sub
inc
clc
dec
pop
jb
sub
pushf
loope
push
leave
push
or
ins
xor
xchg
push
xor
cmp
adc
not
sbb
mov
push
mov
mov
jmp
push
inc
das
enter
nop
shr
jae
popf
add
in
in
add
std
sub
sub
or
dec
adc
test
aaa
mov
or
in
js
cld
dec
sub
xchg
scas
or
fdiv
cmp
aad
adc
icebp
retf
add
dec
inc
sub
cmp
jns
dec
mov
adc
xchg
adc
sti
enter
pop
pop
inc
stos
sbb
stc
inc
gs
shl
sbb
pop
ja
out
cld
ja
mov
sub
mov
sub
add
pop
(bad)
retf
jp
cdq
or
inc
rcl
mov
or
out
adc
dec
(bad)
pop
outs
push
gs
sub
xor
js
cmp
imul
ins
xchg
gs
push
mov
adc
daa
repnz
in
adc
add
cld
cmc
ret
and
jne
and
pop
sub
pop
pop
push
hlt
ficom
(bad)
hlt
dec
fidivr
out
cli
pop
jnp
add
dec
or
mov
out
mov
jmp
jne
mov
jbe
dec
aaa
cmp
pop
and
(bad)
dec
mov
jne
dec
add
gs
jne
mov
stos
pop
adc
cli
loop
in
mov
xor
sub
cmp
fldcw
jle
std
jmp
test
adc
push
hlt
or
jp
adc
(bad)
and
out
mov
jb
xchg
popf
sub
push
lods
inc
iret
shr
jmp
jne
xchg
lods
movs
fisubr
iret
or
and
or
adc
or
pop
jnp
xchg
and
push
adc
sub
push
pop
cmp
and
jl
icebp
repz
mov
push
(bad)
movs
out
push
in
jae
repz
sbb
push
push
jne
sbb
fistp
(bad)
mov
aas
cwde
lahf
arpl
dec
sub
adc
xchg
add
test
popa
or
mov
repz
retf
mov
shr
cmp
sbb
ret
js
lods
(bad)
lock
jo
out
imul
inc
fcomi
xor
bound
or
push
daa
inc
mov
test
mov
jns
in
rcl
push
jo
cs
popa
sub
push
call
cmp
ins
jp
jecxz
dec
daa
sub
dec
or
cmp
xor
test
adc
lea
shr
and
cld
inc
jnp
jbe
pop
jl
adc
lods
scas
sar
ret
jns
or
xor
in
dec
daa
xchg
cmps
push
inc
jge
data16
or
xchg
push
push
dec
cli
pop
into
jne
(bad)
push
fnstcw
mov
xor
loope
jmp
pop
xor
jnp
xor
xor
mov
(bad)
les
out
call
test
mov
pop
imul
movs
pop
stos
les
cmc
retf
outs
lods
jmp
adc
mov
or
jo
mov
and
mov
scas
fucomip
ror
cmps
pop
cwde
mov
ja
dec
popa
cmp
repnz
jg
dec
mov
fstp
pushf
cmp
push
call
pop
xor
js
dec
fiadd
sbb
call
xchg
cmc
ins
sub
dec
mov
jecxz
push
inc
pop
or
pop
push
sub
push
adc
data16
enter
pop
jns
fdiv
es
clc
fucomip
(bad)
je
inc
inc
icebp
push
mov
ret
inc
push
fs
xor
in
dec
shl
and
sub
imul
sar
push
cmp
and
cmp
xadd
or
mov
or
xchg
fimul
jb
(bad)
cmp
cmps
xor
not
cmp
mov
(bad)
push
jbe
ret
inc
call
repz
movs
fdiv
xor
jp
int3
rol
stc
and
mov
std
shl
retf
jg
push
repnz
nop
test
xor
sub
push
sbb
out
(bad)
arpl
mov
jl
push
outs
jmp
xchg
push
into
mov
add
data16
cmp
les
bound
add
stc
xor
and
mov
out
ficom
xchg
sbb
jnp
lods
mov
lahf
dec
and
jb
mov
mov
or
xor
pop
xchg
sub
mov
cli
sub
dec
push
clc
call
dec
adc
sar
mov
xor
je
mov
loopne
xchg
pusha
cmp
xor
stos
mov
dec
dec
and
sar
and
pop
das
jns
sub
sti
push
ja
mov
xchg
cs
in
pop
adc
stos
add
cmp
dec
xor
xchg
std
rcl
ins
movs
inc
fcom
push
mov
rcr
pop
call
sub
fldenv
xor
cs
fidiv
xor
lods
mov
in
mov
dec
cmp
push
out
std
adc
bound
xor
(bad)
pop
sbb
jle
iret
sub
mov
push
push
ins
mov
xor
sbb
in
adc
adc
add
daa
push
jle
(bad)
imul
test
repz
test
imul
dec
push
cmc
jae
or
leave
frstor
inc
jp
cmp
out
out
cmp
or
or
sbb
dec
cmp
pop
xchg
loop
fist
shr
in
mov
imul
inc
jge
ins
mov
jo
loop
dec
xchg
(bad)
out
in
mov
(bad)
retf
xchg
cwde
mov
inc
(bad)
movs
push
jmp
adc
movs
stos
(bad)
ss
sahf
sbb
ss
iret
and
jne
jg
add
xor
push
jle
sub
xor
inc
stos
jo
bound
push
lods
aaa
cmp
push
(bad)
scas
or
fadd
test
push
jle
mov
jp
repz
mov
or
dec
popf
ins
push
push
pop
fdivr
sahf
pop
jg
and
dec
gs
and
and
or
fwait
or
(bad)
in
test
loope
xchg
cli
jge
fisubr
xchg
fist
imul
loopne
inc
jle
retf
dec
(bad)
mov
jae
xchg
mov
mov
fxch
ins
in
jne
int3
sbb
mov
mul
dec
xor
jecxz
dec
and
jne
and
sti
sub
push
xchg
mov
add
mov
mov
js
mov
int3
in
repz
xchg
jbe
add
lock
mov
push
pop
xchg
or
mov
push
push
sbb
(bad)
push
outs
jg
or
push
and
jns
mov
sub
cld
ja
std
cmp
inc
pop
dec
mov
test
fs
push
stos
fdivr
cmp
sar
ss
dec
xchg
cld
sub
xchg
xor
cdq
ret
inc
sub
xchg
jne
sub
in
xor
aaa
and
outs
adc
ins
test
adc
xchg
mov
cmc
or
repnz
mov
push
mov
add
mov
retf
or
data16
mov
sub
cmps
push
(bad)
repnz
jp
es
clc
xchg
inc
adc
ins
int3
cmp
cmp
sub
(bad)
sub
dec
sub
sbb
aam
jae
es
int
lods
sar
jp
inc
and
sub
mov
rcr
sar
stos
ret
cmp
lods
outs
inc
popa
xchg
cmc
inc
adc
cs
pop
mov
scas
mov
mov
jnp
mov
pusha
test
repz
xchg
stc
arpl
adc
add
jmp
or
leave
pop
ins
ret
mov
xchg
lock
loopne
push
mov
mov
xchg
adc
(bad)
mov
mov
inc
sbb
test
push
outs
xor
cli
aaa
nop
xchg
xchg
sbb
ja
das
or
push
mov
std
enter
(bad)
(bad)
repz
in
sub
test
push
sub
sti
aad
repz
ss
cwde
mov
sbb
push
xchg
adc
fs
dec
popa
sbb
outs
cli
mov
ss
pop
js
and
xchg
enter
push
addr16
daa
call
mov
adc
and
in
mov
inc
lods
aaa
jo
clc
dec
xchg
in
aas
stc
ds
lock
and
fimul
cli
push
jmp
stos
jbe
sub
push
mov
push
icebp
into
not
imul
dec
ret
mov
pusha
pop
jne
push
sbb
icebp
in
and
sahf
push
loope
jbe
jns
push
ret
int3
xlat
aas
std
outs
fidivr
addr16
or
push
sbb
pop
and
and
sbb
and
es
into
(bad)
test
xchg
imul
pop
ret
pop
pop
push
sbb
dec
iret
dec
jne
cld
dec
jne
mov
sbb
(bad)
pop
retf
sub
retf
lock
les
bound
shl
inc
dec
iret
inc
cmp
cld
adc
retf
or
outs
imul
repz
mov
ss
stos
inc
outs
xchg
lds
sub
inc
xchg
les
into
mov
jge
sbb
sbb
push
mov
loop
icebp
out
(bad)
imul
stos
enter
push
cld
aaa
sub
test
ret
test
mov
jns
xchg
fistp
xlat
mov
rcl
xchg
test
xchg
shr
and
pop
and
ds
cmps
ret
cmp
mov
or
pusha
push
(bad)
adc
loope
mov
mov
mov
mov
or
mov
cli
sbb
push
jg
add
icebp
mov
jp
push
rol
ret
jbe
cmp
add
lea
sbb
int
or
fisubr
in
scas
clc
ja
add
in
test
(bad)
xchg
mov
xchg
jp
loope
loopne
jmp
iret
add
mov
xchg
std
pop
into
outs
pop
adc
xchg
push
xchg
dec
push
jns
ror
(bad)
push
fs
std
mov
jae
pop
imul
adc
jecxz
std
xchg
or
push
jle
ds
cmc
dec
(bad)
sub
add
pop
add
mov
xor
shl
je
adc
fdiv
cwde
xchg
or
jle
cmp
or
and
call
xchg
mov
clc
push
mov
pop
push
repz
pop
pushf
addr16
inc
fistp
out
xor
outs
in
xor
dec
not
mov
xor
retf
jmp
mov
jmp
jnp
repz
dec
and
je
xchg
cmc
inc
hlt
dec
stos
adc
pop
cli
inc
fistp
xor
sbb
neg
mov
cmp
pop
xchg
push
aaa
push
rol
jae
jne
push
mov
movs
rcr
and
ja
neg
and
ret
push
cwde
push
je
in
shl
xlat
jg
xchg
jmp
fcmove
inc
sbb
mov
fbld
ins
dec
xor
xor
jne
loopne
movs
test
xor
(bad)
cmp
mov
fisttp
(bad)
clc
xor
sbb
jns
outs
and
arpl
mov
add
fild
jge
jno
rcr
xchg
loope
(bad)
pop
ret
jmp
loopne
jne
jmp
xchg
inc
cmps
mov
dec
push
dec
and
mov
stos
xor
cmps
cmp
stc
imul
mov
sbb
or
cmp
outs
mov
pop
js
sub
ficom
xor
push
xor
fdivp
ins
loopne
lea
jne
ret
cmps
xchg
aad
jno
inc
pop
and
push
adc
inc
neg
sub
jbe
adc
movs
fdiv
sbb
fidiv
jo
push
loopne
fcomp
cmp
sub
cmp
inc
repnz
jmp
fist
mul
test
xor
inc
jecxz
sbb
ja
inc
sub
aad
adc
xchg
js
aas
ja
push
xchg
ss
into
imul
mov
rep
imul
dec
movs
fsubr
(bad)
pop
dec
xchg
icebp
jmp
add
and
daa
repz
lea
lock
sahf
lea
repz
push
pop
outs
jno
mov
dec
pop
dec
xor
pop
push
lods
pop
aam
dec
fisubr
mov
je
jbe
jmp
pushf
add
xchg
daa
and
jns
and
ins
fild
pop
dec
pop
cmc
jmp
xchg
mov
outs
mov
push
ror
xor
push
test
adc
xchg
pop
repz
in
sub
pop
mov
in
aaa
xchg
fild
dec
inc
ds
jge
dec
mov
nop
loop
mov
cmp
mov
or
cmp
mov
mov
xchg
aam
into
enter
jbe
shr
lahf
jnp
xchg
pusha
movs
das
arpl
push
sub
mov
jnp
test
repz
sub
test
jmp
into
mov
nop
mov
mov
jp
xchg
movs
sbb
test
xlat
sub
sub
fmul
jbe
mov
js
mov
sti
not
ins
xor
js
and
cmps
fild
mov
push
outs
jne
add
movs
or
mov
push
dec
cmp
cmps
out
lods
mov
push
retf
lea
add
cli
cmc
mov
or
or
mov
aam
out
push
retf
outs
(bad)
lea
loop
fstp
cmp
xor
cmp
mov
in
and
cs
sbb
loopne
cmps
sub
test
xor
mov
out
rcl
dec
cld
xlat
cwde
mov
and
xor
(bad)
cmc
cmc
dec
adc
jg
xor
and
and
call
xchg
dec
pop
cs
(bad)
call
dec
ins
mov
iret
and
fcomi
jge
adc
popf
sbb
arpl
mov
daa
dec
jmp
xor
stos
ds
fadd
jns
sbb
es
xchg
inc
inc
inc
std
push
fidivr
test
xlat
mul
cmps
xor
in
imul
into
xchg
cmp
leave
adc
ja
cs
xchg
or
or
jnp
mov
(bad)
ficom
jmp
jle
or
dec
loopne
hlt
and
ret
mov
xchg
enter
es
les
xor
mov
mov
shl
adc
ja
cs
pop
cmp
(bad)
mov
in
int
dec
(bad)
mov
add
mov
scas
xchg
or
jmp
xchg
in
xchg
or
cmp
ret
pop
aam
jne
push
mov
cmp
int3
dec
sbb
push
push
cmp
pop
xor
sbb
jae
stos
or
ja
lock
(bad)
std
xchg
lahf
fscale
out
inc
mov
push
xchg
jmp
jno
cmp
inc
xor
add
jge
dec
cmp
sub
cld
outs
test
mov
adc
sub
lods
add
mov
xlat
pop
cmp
cmp
test
fdivr
and
enter
mov
retf
fcmovnb
push
shr
je
and
cmc
xor
(bad)
xchg
cmp
icebp
jmp
jp
(bad)
clc
mov
push
cmp
ficomp
jb
cdq
cwde
sbb
mov
je
pusha
mov
out
push
scas
js
rcl
cmp
mov
mov
push
adc
push
mov
enter
ds
loopne
hlt
and
fs
and
hlt
lods
adc
in
test
(bad)
clc
mov
jl
les
push
imul
scas
mov
pop
rcr
into
std
add
jnp
inc
loopne
icebp
jo
pushf
dec
scas
ret
push
push
aaa
cmp
xchg
hlt
and
sbb
sub
es
pop
and
in
xchg
push
stos
sar
xor
xchg
push
aaa
jns
mov
sub
in
xchg
xor
daa
xchg
cli
sbb
fistp
leave
jae
imul
mov
pushf
je
int
dec
fsub
xchg
ja
pop
repz
lds
jne
dec
and
out
adc
cli
xor
xor
add
inc
push
pop
mov
ins
(bad)
repz
mov
adc
jge
ficom
sbb
mov
out
out
mov
dec
int3
adc
xchg
pop
xor
inc
pop
or
push
sub
xchg
xlat
pop
in
ret
ja
push
cmc
mov
mov
sahf
xor
push
clc
ret
xchg
aad
mov
(bad)
aad
push
into
mov
xchg
les
inc
jnp
in
ds
dec
scas
shr
(bad)
imul
jb
inc
js
push
xchg
xchg
jp
xor
mov
mov
lds
mov
add
mov
nop
in
popa
in
fwait
pop
lea
out
clc
outs
call
loopne
or
nop
popf
or
pop
popf
lds
bound
and
js
pop
cmp
pop
(bad)
mov
xor
(bad)
sub
fs
dec
xchg
in
mov
pushf
push
(bad)
cmps
jns
or
fstp
dec
xor
jae
cmp
mov
pop
sub
js
popf
inc
jle
enter
jns
sub
data16
sub
inc
and
imul
dec
push
cmp
cwde
jbe
and
pop
xchg
addr16
jbe
push
jb
sti
and
push
inc
and
cwde
cmp
sub
pop
inc
loope
push
addr16
(bad)
fist
mov
add
push
jp
jnp
in
jne
xchg
mov
or
test
add
inc
xchg
aad
lds
push
push
sti
jb
inc
mov
mov
cmc
aad
push
in
(bad)
fisub
push
push
imul
shl
adc
add
rol
out
in
shl
mov
and
mov
mov
popa
adc
loopne
push
sub
and
ins
xchg
popa
adc
sub
mov
ja
xchg
push
sub
cwde
jg
cmp
mov
test
cmp
ret
sbb
jmp
or
enter
lea
cli
or
fstp
stc
es
adc
ficomp
pand
data16
jle
dec
xchg
push
cmp
(bad)
sbb
pop
clc
clc
adc
xor
mov
push
mov
hlt
jae
imul
sub
or
and
mov
sub
icebp
loop
xchg
jge
mov
fbld
push
or
inc
add
push
push
pop
push
or
mov
mov
mov
cmps
mov
fist
cmp
cld
mov
xchg
mov
add
pop
clc
jl
ins
sub
(bad)
push
ja
jns
pop
test
inc
shl
ret
ins
inc
and
push
pop
cmp
jg
mov
dec
cmp
movs
xchg
and
cs
jp
adc
cmps
or
xor
ins
loopne
push
addr16
push
push
fisttp
adc
(bad)
cli
adc
inc
cmp
movs
mov
sti
std
adc
lods
xlat
stos
or
pushf
pop
jle
iret
cmc
push
push
dec
jecxz
shr
jns
fadd
adc
jg
pop
xlat
jp
adc
xchg
xor
mov
inc
jmp
movs
xchg
mov
and
mov
xor
out
clc
xchg
(bad)
gs
jmp
lock
sub
xchg
ja
retf
pop
test
dec
adc
mov
ficom
shl
dec
fcmovb
cmc
mov
dec
les
js
lea
sbb
push
cld
out
imul
xchg
arpl
in
sbb
cmp
and
sub
mul
mov
ja
xchg
sub
ja
neg
mov
push
(bad)
jg
ins
hlt
loop
mov
(bad)
xlat
outs
xchg
jecxz
jbe
sbb
sbb
ja
add
(bad)
ds
fiadd
pop
and
addr16
ds
repnz
nop
lock
mov
or
mov
xor
retf
mov
in
pop
js
push
int3
mov
dec
adc
sbb
sub
js
and
add
js
xchg
stos
paddsw
xor
xchg
rcr
xor
imul
fidiv
cmc
or
into
cld
fcomip
sub
frstor
dec
mov
xchg
into
mov
repz
ss
je
push
aam
leave
rcr
mov
into
fwait
shr
int3
data16
pop
xor
sbb
mul
je
xchg
mov
jg
push
push
cmps
fistp
sti
sub
inc
mov
xor
inc
push
push
in
sub
or
(bad)
xchg
sbb
repz
cmp
test
sub
cli
ror
movs
and
hlt
call
jb
inc
(bad)
push
aas
fst
lahf
js
stos
jg
xchg
sar
pop
ret
xchg
push
xchg
mov
dec
jno
push
outs
test
aas
imul
wrmsr
pop
xchg
and
xchg
inc
icebp
dec
js
or
jg
add
imul
das
or
cmps
pop
fstp
push
test
add
and
(bad)
iret
sbb
xchg
scas
jns
mov
cmp
sub
push
jae
cmovge
jmp
mov
jmp
cmp
stos
lahf
repnz
ffreep
jmp
pop
pop
fwait
add
pop
jo
cli
push
and
and
jge
xor
ja
sub
jge
outs
adc
aad
jne
or
pop
leave
loopne
mov
xchg
ret
sub
sub
xlat
mov
outs
ficom
sub
repz
int3
neg
xchg
arpl
movs
mov
push
xchg
bound
in
test
data16
pop
pop
dec
and
pop
lods
mov
pop
push
mov
mov
and
sar
mov
dec
xor
ret
jecxz
pushw
jmp
sub
xor
xlat
cmp
xchg
push
stc
pop
mov
repnz
cwde
leave
mov
sbb
mov
xchg
xchg
rcr
in
cwde
and
shl
hlt
xchg
add
mov
cwde
aam
(bad)
out
mov
cmp
pop
sub
in
inc
outs
out
sub
jnp
cmp
sub
rcl
lahf
pop
push
mov
mov
and
push
dec
lahf
or
(bad)
lds
push
pushf
jle
xchg
leave
and
repz
cli
mov
jo
mov
jg
xor
aaa
adc
pop
leave
test
mov
icebp
cli
mov
jae
call
es
adc
mov
sub
mov
repnz
ret
cmp
lgs
lods
fist
and
xchg
sub
aad
sbb
mov
and
push
repnz
push
jns
cld
pop
js
inc
xchg
sbb
and
cmc
hlt
pop
mov
jns
cmp
mov
or
cmp
push
pop
repz
mov
and
cmps
lds
xchg
cs
add
mov
mov
out
aaa
sub
push
retf
xchg
inc
xor
test
int3
dec
adc
xchg
and
sub
mov
xchg
test
and
hlt
jns
xchg
sbb
add
push
mov
sbb
loop
mov
dec
movs
outs
cmp
xor
pop
push
or
sub
add
xchg
and
push
das
jnp
cmp
cmps
jo
mov
and
je
xchg
callw
in
dec
mov
das
dec
mov
push
aad
xchg
movaps
lock
cmp
data16
pushf
lahf
(bad)
in
outs
fstp
bound
add
xchg
loopne
sbb
add
pop
enter
jnp
push
mov
test
(bad)
das
je
dec
test
fcmovb
push
out
inc
data16
add
xor
dec
and
sbb
jmp
popa
inc
and
ret
jle
dec
push
mov
mov
push
fidiv
and
nop
jle
add
add
std
jb
sbb
lds
repz
mov
sub
jmp
mov
sbb
mov
imul
mov
stos
xor
hlt
inc
jne
cmp
mov
jno
outs
(bad)
dec
mov
adc
data16
add
int3
retf
cmps
cmp
lods
sub
jnp
adc
or
and
xor
imul
jb
inc
adc
movs
adc
aam
dec
jmp
mov
jne
push
test
lods
mov
sub
jmp
sub
sti
mov
sbb
mov
pop
clc
xchg
js
pop
jno
sbb
mov
data16
mov
adc
or
pop
stos
xor
lea
xchg
mov
xchg
xor
stc
mov
pop
add
test
xchg
in
inc
ds
pop
adc
pop
jle
sbb
cmp
in
rcr
adc
imul
ds
lds
lea
xchg
clc
aam
sahf
ds
jp
call
inc
and
dec
inc
sub
mov
sti
and
pop
adc
out
xor
cmps
hlt
dec
xchg
pusha
add
push
mov
fcomp
in
test
addr16
jp
mov
inc
adc
cmp
jle
jo
mov
mov
cmp
movs
and
js
ffreep
dec
aad
call
xor
das
arpl
pusha
push
shl
mov
movs
jno
sar
sub
movs
jae
xchg
shl
sbb
mov
xchg
fwait
cmp
inc
in
xchg
mov
imul
mov
pop
adc
imul
shl
cmp
jl
shl
ficomp
mov
add
mov
mov
ja
arpl
pop
mov
sub
jle
fdiv
js
mov
and
repz
stos
xlat
pop
or
pop
mov
and
sub
ret
cmp
mov
shl
scas
lea
xchg
adc
imul
xchg
cmp
push
inc
jmp
imul
dec
dec
add
jmp
test
cmp
js
xor
idiv
mov
mov
or
xchg
dec
leave
add
(bad)
mov
mov
adc
or
sbb
jle
add
movs
add
sub
das
jge
xchg
add
repz
mov
sub
mov
push
test
mov
je
cs
arpl
repz
cli
inc
mov
xchg
movs
sub
shl
or
xchg
pop
pop
xchg
jle
(bad)
jle
das
das
sub
xchg
xchg
push
neg
cmp
mov
adc
xchg
mov
or
sub
xor
push
xor
adc
ret
sbb
daa
ret
sbb
mov
aam
jne
sub
pop
lods
test
inc
hlt
fild
add
stc
xchg
mov
addr16
hlt
mov
pop
fwait
sbb
clc
loop
cmp
out
xchg
xor
in
jne
mov
sub
movs
rol
shl
sbb
into
hlt
pushf
xchg
dec
mov
outs
adc
pop
stos
push
xchg
sbb
aad
mov
nop
adc
adc
sbb
mov
push
mov
lds
dec
sub
repz
xchg
xchg
dec
xor
cld
jbe
enter
pushf
in
jmp
cmp
imul
outs
rcl
mov
loopne
repz
jle
out
pop
and
pop
sub
or
loopne
lock
lds
lods
jns
adc
pop
push
push
test
pop
fbstp
cmp
xor
ins
test
ja
stos
dec
and
call
xchg
out
xchg
in
mov
jno
add
mov
cdq
data16
mov
inc
test
fnstsw
dec
xchg
adc
(bad)
dec
cld
rcr
imul
cmp
sbb
in
call
and
shl
xchg
dec
in
add
sbb
mov
fist
mov
fs
mov
fadd
es
aam
rcr
mov
stc
cld
(bad)
lds
push
paddb
(bad)
inc
fsubr
cmc
loop
outs
pop
cmp
retf
clc
xchg
sahf
lds
inc
dec
rcl
or
out
push
dec
mov
xor
dec
out
in
pushf
mov
shl
jmp
xor
fs
push
neg
jp
ds
rol
rcr
sbb
mov
adc
or
sub
pop
push
fs
pop
in
push
pop
pop
pop
rcr
sub
paddq
pop
nop
jbe
jle
fcom
xor
hlt
push
retf
fdiv
and
mov
cdq
ja
mov
and
cmp
ret
(bad)
aam
mov
or
sti
sub
fs
or
jp
inc
js
inc
jle
cmp
xor
imul
retf
ret
push
jg
repnz
xchg
mov
fsubr
dec
imul
and
(bad)
sbb
xchg
mov
and
sub
dec
cmp
xchg
test
ja
jle
mov
jo
enter
cs
xor
div
xor
adc
mov
mov
sub
pop
mov
xchg
xor
jnp
or
sub
stc
jle
jl
sub
cmps
push
xchg
dec
inc
ror
outs
mov
jo
sbb
dec
or
jp
xchg
retf
xchg
stc
mov
jmp
hlt
and
dec
int3
xchg
rcl
add
mov
stos
push
js
sub
sub
adc
push
mov
cmp
jne
ds
movs
cli
dec
pusha
bound
pop
in
dec
rcr
sbb
inc
and
or
dec
mov
xchg
dec
out
test
(bad)
cli
call
push
push
and
fadd
xor
and
adc
sbb
(bad)
cmps
cmc
mov
inc
cdq
in
mov
and
pusha
popf
test
pushf
int3
hlt
adc
test
(bad)
mov
in
arpl
sbb
sub
jbe
(bad)
pop
aas
and
sub
outs
out
inc
retf
jbe
into
mov
jmp
out
push
fist
xor
jne
adc
push
adc
rcl
mov
cmps
xor
int3
cmps
add
mov
and
pop
mov
je
jbe
push
mov
dec
sub
xchg
icebp
(bad)
js
jl
add
add
sub
or
das
jns
int3
xor
(bad)
leave
jle
test
mov
pop
in
ds
test
pushf
iret
js
mov
sub
out
mov
and
aam
mov
add
cmp
test
(bad)
jne
mov
mov
jbe
pushf
dec
sub
inc
push
push
dec
jmp
jg
loope
jp
push
mov
cmps
ins
jnp
in
cmp
xchg
mov
jns
sbb
push
jne
mov
cmp
jp
stos
mov
cld
les
ins
loopne
cdq
neg
xor
mov
outs
mov
xchg
lods
xchg
test
jns
fstp
fs
aad
jns
std
jae
jl
mov
mov
xchg
mov
in
and
les
fild
mov
xchg
xor
push
loope
idiv
test
pop
sub
inc
outs
jle
xchg
sub
mov
cmp
addr16
mov
dec
push
xchg
and
mov
push
xchg
xor
sbb
adc
fidiv
sbb
jae
fsubr
mov
dec
sbb
nop
loope
push
dec
mov
xchg
push
into
cmps
(bad)
subps
dec
aam
mov
and
push
xchg
lahf
pop
push
pop
sbb
pop
nop
cmp
xchg
pop
cmp
cmps
fdiv
cld
out
scas
push
aas
push
loopne
shl
mov
fwait
enter
pop
sbb
std
jmp
shl
adc
cmp
fcmovnb
jecxz
xor
push
outs
pusha
sub
adc
loopne
mov
sub
push
outs
pop
and
jge
push
jmp
mov
xor
(bad)
mov
adc
adc
cmps
call
retf
push
jge
adc
or
jge
test
outs
jns
push
fidivr
push
cld
xlat
or
sbb
cld
xor
fild
sub
or
popa
push
inc
leave
xchg
retf
mov
xlat
pop
jns
xor
iret
and
dec
sub
mov
add
sub
repz
fdivr
sbb
jo
sahf
popf
xchg
mov
ja
movs
push
push
lock
xor
sar
cmovg
and
adc
push
and
cmps
pusha
mov
mov
jmp
xchg
aam
jb
pop
and
cmps
mov
inc
mov
and
mov
in
pop
fs
dec
push
fidiv
add
push
pop
call
xchg
fsubr
xor
jo
jl
out
cmp
pop
aad
mov
push
mov
xor
test
cmp
gs
mov
enter
dec
jle
stos
prefetch
or
imul
cmp
mov
nop
fcmovnu
aad
pop
cdq
mov
jmp
loopne
nop
aas
xchg
inc
(bad)
mov
hlt
xor
push
dec
sbb
xchg
pop
mov
pop
jne
fdiv
in
jp
pop
pop
ret
sub
addr16
adc
add
fist
xchg
and
push
fist
jbe
jne
push
in
fisubr
push
xchg
mov
sub
in
hlt
xor
mov
(bad)
jg
popa
stc
not
push
lods
mov
sub
and
dec
xchg
cmp
add
fsubp
sub
sbb
mov
pop
adc
ror
mov
adc
fs
pop
shl
inc
frstpm(287
cld
in
mov
pop
(bad)
mov
add
ss
jae
es
cmp
jns
ficomp
jmp
mov
sub
sete
jns
jmp
adc
mov
inc
mov
jge
push
add
mov
loop
xchg
adc
pop
push
icebp
pop
push
dec
arpl
shl
mov
push
mov
int3
loopne
mov
mov
jns
sub
mov
call
fist
pop
or
mov
jae
mov
loop
pop
adc
push
jb
mov
add
sbb
sti
mov
jge
adc
pop
mov
call
test
(bad)
push
je
jbe
es
add
adc
out
jp
outs
cld
popa
imul
imul
stos
rcr
mov
sbb
adc
jge
inc
xchg
mov
mov
ret
jo
and
stos
and
(bad)
ins
xchg
xor
imul
xchg
pusha
ficomp
mov
pop
xor
bound
jo
sbb
xlat
jb
inc
cli
mov
mov
xchg
or
inc
ret
pop
pop
movs
push
or
outs
jmp
int
jbe
in
xchg
inc
add
mov
test
push
cli
std
xor
repz
and
fcomip
data16
add
pop
push
lods
mov
xchg
xor
les
xor
jnp
mov
mov
and
mov
push
pop
pusha
sbb
mov
cld
adc
hlt
jp
out
inc
push
retf
xor
adc
ss
jle
add
iret
sub
pop
cmps
loop
cmp
lods
bound
dec
call
push
cld
adc
push
and
cmc
mov
pop
or
push
int3
push
sbb
pop
push
enter
or
mov
out
cmc
in
stos
pop
or
fld
sub
call
cmp
xor
push
or
mov
cmp
fst
nop
test
imul
pop
ret
jns
fdiv
sub
pushf
cwde
jb
cwde
in
dec
ret
mov
pop
das
test
mov
cmp
sbb
push
adc
jmp
push
adc
repz
pop
jl
lahf
dec
xor
rcr
jmp
jbe
cs
jne
dec
jp
scas
jne
jmp
adc
xchg
jns
outs
cmc
aam
ja
sub
test
inc
cmp
cmp
xchg
imul
pusha
pop
in
(bad)
cmps
int
cli
cmp
(bad)
mov
imul
lods
dec
xor
pop
mov
or
push
jmp
pusha
push
int3
mov
cdq
inc
out
test
icebp
mov
mov
sub
mov
sub
mov
add
outs
addr16
jbe
and
cmps
pop
jp
add
push
test
and
enter
call
or
clc
shl
scas
xchg
aas
repnz
or
div
les
mov
pop
in
adc
cwde
aam
or
cmp
and
pop
push
xchg
xor
mov
mov
mov
dec
lahf
js
jg
fsub
rep
rcl
fs
dec
mov
xchg
pop
xor
sbb
call
rol
sub
sub
dec
sub
xchg
cmp
xchg
xor
iret
pop
ret
int
mov
call
imul
xchg
rcr
in
sub
push
pushf
mov
sahf
cmps
adc
xchg
(bad)
outs
mov
mov
add
pop
sub
popa
call
push
das
mov
sbb
mov
dec
mov
ins
scas
stos
push
retf
pop
xchg
push
js
in
sub
js
(bad)
pop
fdiv
jp
sbb
add
jnp
pop
repz
ret
xlat
inc
dec
ret
dec
mov
mov
arpl
mov
mov
cmps
mov
fnstcw
les
and
ret
xchg
mov
cmp
mov
sbb
mov
xchg
je
hlt
das
call
jae
sub
mov
jae
pushf
mov
push
loop
jge
bound
adc
jl
mov
and
lods
in
adc
mov
daa
nop
adc
je
add
sub
std
mov
xchg
ror
mov
daa
cmp
retf
je
inc
mov
mov
in
add
loop
shr
xor
jmp
ret
test
pop
cmp
lahf
std
push
and
push
mov
ins
(bad)
out
repnz
xchg
jmp
jb
bound
xchg
(bad)
shl
xor
mov
(bad)
stos
cld
and
pop
(bad)
loop
push
outs
outs
stos
or
mov
push
clc
js
cmps
ror
jecxz
mov
xor
push
adc
test
jno
dec
xchg
in
cmp
das
sub
je
outs
adc
lahf
mov
lds
iret
inc
or
inc
shl
(bad)
iret
lock
push
ror
xor
pop
mov
data16
sub
sbb
and
jmp
xchg
jp
cs
ficom
into
push
push
xchg
push
cmp
inc
pop
mov
inc
clc
jmp
and
stos
aam
repz
daa
(bad)
jl
int3
lods
push
ret
pop
xor
les
xor
sbb
out
push
(bad)
cli
in
into
fst
push
xchg
jbe
and
movs
shr
jl
adc
aaa
es
push
adc
mov
sahf
pop
das
mov
xchg
xchg
pusha
stc
dec
icebp
or
jmp
jge
cmc
outs
neg
add
sub
push
sbb
lahf
pop
jae
jnp
cs
mov
sti
mov
(bad)
cmp
gs
test
jne
sahf
imul
jae
daa
xchg
xor
or
inc
push
fbstp
cmp
or
sub
jae
pop
pushf
and
xchg
xor
dec
jo
(bad)
retf
or
jle
jne
sbb
xor
test
xchg
push
and
test
jo
push
sub
sbb
xlat
xor
cli
je
loop
pop
mov
jbe
sub
jnp
fisubr
and
ja
leave
mov
cmc
mov
in
sub
retf
sub
jg
mov
jne
out
or
push
xchg
mov
pop
xchg
stc
imul
inc
dec
jb
mov
cmps
sub
jmp
in
jnp
mov
out
shr
repnz
leave
and
cmc
jne
push
cdq
xchg
idiv
ss
dec
add
cwde
or
mov
xor
rcr
or
xor
lods
fmulp
les
out
out
andnps
and
fwait
movs
fbstp
lods
mov
dec
popf
test
pop
sbb
in
pushf
aas
hlt
adc
scas
or
es
or
test
inc
jnp
repz
inc
mov
cmp
ja
je
xor
push
xchg
add
jne
ror
jg
mov
push
mov
mov
xor
push
push
ins
xor
out
test
xor
push
jge
outs
mov
push
aas
dec
xor
xchg
mov
pop
push
stos
ja
aad
jae
ss
jnp
inc
xor
xor
pop
push
scas
dec
inc
loopne
outs
out
stos
sub
iret
adc
jae
mov
in
hlt
stos
cwde
ret
aam
cmps
iret
call
push
sub
out
out
aas
cdq
and
jne
and
sub
dec
hlt
mov
xchg
add
jns
in
dec
test
xchg
ret
fnsave
sub
add
push
xchg
pop
adc
cmp
adc
sar
mov
pop
scas
xchg
pop
adc
push
aam
sbb
xchg
jbe
mov
js
adc
inc
push
out
ds
mov
or
push
push
jns
jg
or
xchg
mov
out
push
lods
pop
add
aam
pop
addps
retf
js
(bad)
jno
sub
dec
xor
js
loope
cmp
cdq
imul
(bad)
iret
sub
add
pop
stc
jle
push
cmp
push
jne
shl
jne
ret
inc
jno
stos
and
and
and
pop
and
push
iret
cmp
icebp
retf
(bad)
xchg
js
mov
xor
pop
lods
jecxz
dec
adc
retf
out
cld
sub
sub
out
movs
pop
call
sbb
mov
loop
push
add
mov
cwde
cld
push
sub
add
xchg
push
cmps
rcr
aas
xchg
out
push
fmul
movaps
out
pop
retf
daa
push
sub
test
cwde
and
cli
mov
and
mov
fisttp
(bad)
js
mov
adc
call
push
lds
aas
xchg
inc
scas
(bad)
push
ficomp
or
fbld
bound
push
movs
sub
icebp
mov
jg
iret
test
dec
ret
repz
jae
cmps
ficomp
inc
out
es
jp
or
xchg
push
int3
mov
mov
cmc
pushf
daa
stc
cmp
mov
push
rcr
test
mov
mov
sar
sub
lahf
imul
adc
xchg
mov
ins
xchg
hlt
addr16
loope
xchg
cmp
nop
cmp
jnp
cmp
mov
xchg
arpl
mov
dec
cwde
dec
or
cmc
(bad)
aas
mov
js
imul
dec
and
outs
out
js
sbb
data16
and
mov
(bad)
xchg
dec
jg
xchg
pop
iret
daa
imul
ss
xchg
fidiv
dec
pop
jns
sub
dec
xchg
jmp
xchg
mov
cs
mov
mov
pop
jbe
sub
out
pop
test
xchg
push
(bad)
out
cmc
mov
and
les
clc
movs
cmc
mov
jg
hlt
mov
imul
jae
sub
(bad)
pushf
or
fcomp
push
pushaw
xchg
add
add
repz
cwde
ja
cmp
xor
xchg
ror
adc
iret
mov
or
jo
fldenv
mov
push
inc
das
lods
xchg
sub
fadd
cdq
cmc
cwde
shl
xchg
inc
inc
mov
aam
dec
lea
cmp
jge
test
adc
adc
sbb
cmps
dec
pop
jns
pop
xor
jge
cmp
jne
push
rcl
lds
add
push
jb
jo
or
cmp
sbb
push
mov
in
jnp
pop
shl
popa
or
mov
mov
and
jmp
push
add
mov
push
(bad)
clc
xor
jnp
jb
cmps
mov
or
movntq
retf
jge
adc
ficomp
or
inc
in
jbe
std
mov
xchg
pop
leave
jns
loopne
push
cmp
popa
loop
pop
mov
push
lods
cmp
js
push
jle
lock
(bad)
pusha
cmp
addr16
mov
imul
ret
pop
sub
sbb
repnz
dec
retf
test
cmps
push
(bad)
fdivr
push
gs
out
movs
outs
xchg
dec
enter
js
lock
pop
jg
mov
jb
lea
jle
xchg
cwde
mov
mov
je
xchg
mov
jne
(bad)
movs
push
xor
fwait
sti
jne
pushf
mov
mov
push
jg
out
mov
xor
cs
inc
inc
hlt
sbb
and
mov
push
loop
ret
shr
inc
dec
fbstp
stos
add
sbb
pop
push
pop
(bad)
iret
movs
add
retf
test
leave
jg
call
ins
(bad)
fcomp
dec
ror
sbb
lock
and
adc
js
ret
mov
push
fdivr
ret
js
sbb
inc
std
sub
aas
std
cmp
and
push
and
mov
fs
jp
adc
adc
mov
cmps
pop
(bad)
lock
les
jmp
jo
lea
stos
dec
sub
out
mov
add
out
cmp
xor
add
add
dec
ret
outs
adc
xchg
xor
mov
jge
cmc
(bad)
lods
pop
int3
gs
aad
cmp
mov
(bad)
movs
dec
enter
dec
push
sub
xor
push
adc
add
cmp
sahf
(bad)
cld
aam
ja
jae
(bad)
pop
cmp
imul
pop
push
dec
cmp
sub
mov
enter
jb
sahf
int
cmc
adc
pop
dec
pushw
mov
cs
mov
leave
out
test
enter
je
ss
fldenv
jmp
pop
and
cwde
adc
fmul
hlt
loope
push
gs
lds
out
lock
inc
out
sbb
ret
xor
push
sti
cli
and
je
daa
fst
enter
mov
retf
xor
push
outs
lods
mov
sbb
mov
jb
ret
in
aas
cld
sub
inc
dec
out
xlat
push
test
addr16
pop
in
cmc
push
dec
shl
mov
bound
int3
xchg
(bad)
icebp
das
jne
test
xchg
aam
cmps
jp
jo
cmp
inc
lods
mov
jmp
call
cmp
fild
mov
jae
aaa
or
mov
adc
jl
in
icebp
loopne
jne
and
ss
cld
(bad)
xchg
jmp
inc
lahf
lods
xor
into
mov
ds
dec
xor
fs
loope
mov
cwde
mov
add
and
call
pop
pop
pop
loop
and
and
sub
pop
or
cli
and
pop
(bad)
push
(bad)
repnz
(bad)
push
pop
cmp
ins
nop
aaa
jne
leave
repz
sbb
lea
cmp
jg
gs
xor
das
adc
(bad)
inc
and
(bad)
sbb
dec
aas
inc
aas
lods
mov
js
cmp
sub
xor
cmps
mov
pop
dec
bound
adc
sbb
es
outs
std
das
jg
sbb
shl
int
jge
jno
ds
(bad)
push
pop
daa
into
retf
dec
push
jo
pop
dec
fmul
pushf
movs
jbe
push
sub
jmp
ja
scas
sub
push
xchg
inc
imul
xchg
ins
jns
adc
cmp
jg
and
or
iret
ret
in
mov
aaa
pop
mov
pop
push
xor
test
cmc
push
jle
mov
addr16
fisttp
sub
shl
ins
in
dec
cmp
ret
sub
pop
imul
mov
jmp
outs
sub
add
or
mov
rcl
test
or
aas
in
imul
pusha
cmc
loopne
daa
mov
sbb
imul
loop
nop
stc
adc
ds
aam
fdivr
movs
jp
test
sub
jmp
jge
ss
adc
cmp
xchg
repz
and
fnstsw
ins
push
shr
(bad)
jnp
repz
xchg
cs
repz
loop
mov
jnp
ja
adc
push
cld
aad
cli
outs
(bad)
jg
pop
jmp
mov
push
idiv
fisttp
pusha
jp
dec
sub
inc
fwait
add
fimul
cmp
test
mov
stos
shr
mov
add
jl
inc
xchg
jl
jb
int
dec
push
jl
or
stos
or
mov
jnp
mov
fild
jl
sbb
shr
aam
and
(bad)
mov
add
sar
inc
sbb
mov
sbb
add
pop
les
sbb
jl
es
ds
mov
sar
mov
dec
dec
jg
sub
cmps
adc
dec
push
add
cmp
inc
mov
jmp
sti
dec
and
jle
iret
sbb
(bad)
test
aaa
pop
pop
imul
(bad)
sbb
jl
sub
sub
aad
cmc
jl
int3
mov
in
xchg
inc
mov
jle
into
mov
adc
sbb
rcr
pushf
adc
popa
(bad)
mov
cmp
mov
mov
jne
add
call
les
test
push
cmps
int3
lahf
les
sub
int
cmp
ss
or
cmp
jg
fs
jae
cld
pop
pop
lods
dec
add
ficomp
and
je
test
sbb
mov
ins
(bad)
jmp
xor
fnsave
jl
or
jl
cmps
or
shl
ja
fld
movs
cmp
jne
jl
sub
push
dec
mov
jl
xor
xor
push
hlt
xchg
jl
or
(bad)
jl
clc
cmp
cmps
ret
cmp
sbb
jge
test
pusha
add
inc
sar
push
xchg
dec
inc
test
ins
jge
int
xor
mov
fnstcw
scas
cmp
adc
cld
outs
mov
bound
pop
mov
mov
loopne
sub
call
sahf
xchg
in
scas
sbb
test
scas
cld
xor
xor
aam
sbb
jp
sbb
and
and
aam
ja
sbb
sub
fdiv
lea
lods
jnp
push
mov
push
dec
hlt
and
sti
imul
xchg
cmc
stos
lea
fist
jne
jmp
out
mov
repz
cmp
or
test
jge
icebp
cmp
push
movs
lods
xchg
cmps
int3
adc
xor
adc
cmps
mov
out
adc
push
pop
test
jno
jno
lods
pushf
and
stc
jp
ret
xor
add
out
pop
ja
mov
mov
mov
ja
xchg
cmp
dec
into
aaa
mov
jge
cmps
retf
daa
das
cld
mov
cmp
jno
cld
mov
jg
test
jb
repz
pop
or
call
gs
jne
test
cmp
dec
sbb
fistp
lds
mov
mov
clc
mov
(bad)
mov
jb
xchg
push
into
cld
push
xchg
pusha
fbstp
arpl
and
add
push
dec
clc
fwait
jmp
mov
mov
jno
sbb
retf
cmps
xchg
cmp
out
mov
lods
or
mov
enter
gs
nop
jb
inc
and
jnp
xor
dec
push
outs
test
rcr
cmc
xlat
aad
or
add
jae
hlt
xchg
jp
push
retf
shr
bound
mov
cmp
jmp
jo
adc
jnp
cmc
jp
mov
add
jmp
add
sub
int
add
xor
(bad)
cmp
stc
jmp
jle
aad
ds
xchg
sbb
or
mov
cmp
mov
gs
push
test
mov
sahf
mov
or
sbb
pop
out
fisub
jne
ret
adc
xchg
mov
movs
sbb
test
pop
fxch
test
into
cmp
mov
inc
hlt
loope
sub
rcl
sub
and
jp
clc
pusha
jp
dec
cmp
ins
push
jmp
jp
fisub
pop
or
jmp
or
(bad)
mov
push
and
rol
inc
cmc
dec
test
push
test
out
jecxz
adc
popa
mov
(bad)
cmp
push
cmps
and
cmps
call
fs
int3
call
pushf
sbb
daa
sbb
push
ror
outs
in
xchg
neg
int3
sar
retf
dec
jp
repnz
add
je
mov
and
std
push
xchg
out
out
mov
pop
push
mov
jge
xchg
lock
test
and
xchg
mov
dec
cwde
test
es
pop
adc
push
jg
fcom
push
sub
inc
ret
jmp
and
add
mov
loop
xchg
jae
ret
sbb
xor
lea
sti
outs
mov
fwait
mov
daa
scas
pop
pusha
mov
sbb
(bad)
out
push
fdiv
and
call
int3
imul
ja
push
js
mov
jle
inc
scas
jne
lock
ret
lock
push
sub
add
ficom
jns
rol
les
ss
inc
loope
sbb
sbb
clc
and
sbb
cmc
les
jne
shr
push
div
pop
sbb
daa
dec
lods
push
test
imul
and
and
loopne
push
or
shl
fcomp
(bad)
xor
movs
cmp
dec
cmp
outs
cmps
add
outs
mov
xor
test
push
pusha
sbb
pop
cmp
mov
test
add
sbb
jle
mov
mov
je
sbb
adc
lods
xlat
mov
mov
punpckhwd
jp
cld
bound
dec
retf
jns
(bad)
cld
dec
cmp
mov
pop
xchg
mov
xchg
push
shl
or
push
mov
push
std
dec
xchg
ins
pop
ds
cs
test
dec
mov
(bad)
xor
cmc
sbb
popa
std
repz
test
gs
mov
leave
call
fwait
push
ja
ret
fidivr
gs
out
push
ret
jae
inc
jg
mov
pop
sub
je
enter
pop
je
test
fisub
jg
adc
arpl
aaa
cmp
or
out
jo
xchg
cmp
mov
cs
int3
push
sub
mov
loop
push
dec
sbb
push
jae
imul
mov
lods
xchg
fucomip
lahf
push
nop
jbe
ret
lods
in
adc
hlt
ret
daa
mov
arpl
xchg
push
in
pop
cs
loopne
jb
push
push
mov
xchg
call
jmp
loope
mov
bound
int3
gs
aad
jl
mov
retf
ret
pop
aad
and
mov
and
in
vmread
fld
cmc
jae
xor
jmp
xchg
mov
enter
push
call
rcr
cmp
xchg
push
stos
movs
iret
push
(bad)
sti
sub
dec
ficomp
push
ss
js
cmp
icebp
jl
inc
iret
ror
rcr
cmp
daa
adc
pop
push
mov
arpl
adc
dec
push
(bad)
pop
popf
xchg
and
dec
mov
xor
js
jmp
test
cli
xchg
dec
shl
data16
sbb
xchg
inc
add
xchg
lahf
jne
stos
inc
stc
mov
add
mov
push
mov
sub
dec
mov
jmp
sub
pop
cmps
xor
add
dec
jp
xchg
test
lahf
mov
and
cld
(bad)
mov
push
sbb
cmp
loope
lds
jmp
ret
dec
in
jge
xchg
dec
dec
adc
call
sub
mov
push
rol
mov
cmp
lods
icebp
test
push
pop
xchg
iret
add
xchg
cmc
mov
cmc
jno
cwde
jae
sub
jmp
sub
sub
(bad)
or
dec
dec
js
sub
jl
adc
cdq
pop
mov
or
cdq
sub
adc
call
(bad)
in
jnp
xchg
loope
jns
test
in
push
and
jmp
xor
mov
cwde
inc
xchg
push
jge
loope
ss
sbb
iret
ss
mov
(bad)
jge
ret
inc
mov
lods
(bad)
mov
data16
cmp
xchg
(bad)
adc
rcl
sbb
outs
fdiv
out
or
jb
and
sub
cmps
dec
push
cmp
sti
mov
push
dec
scas
pop
cmc
icebp
nop
xlat
mov
sar
pushf
(bad)
movs
dec
mov
ins
jmp
jae
in
call
push
and
sbb
and
dec
ss
jnp
or
jmp
and
loopne
adc
sti
cmps
jmp
jp
montmul
cmps
add
xchg
clc
push
out
jne
xor
push
jmp
push
push
xchg
xor
ret
daa
fldcw
pop
cdq
and
(bad)
fs
and
xchg
jne
stos
fild
cmps
push
xor
ins
sub
xchg
fist
(bad)
sbb
sbb
push
push
mov
call
pop
or
outs
dec
and
jae
ficom
jne
sub
vlddqu
ins
lods
jle
xor
shr
out
(bad)
icebp
jmp
aad
fcomip
add
call
mov
jmp
mov
sbb
div
rcl
iret
rcl
lahf
sbb
outs
mov
dec
dec
adc
enter
pop
data16
popf
xor
sub
out
sbb
push
int3
sub
shr
xchg
shl
iret
jnp
xchg
aaa
push
ds
push
push
mov
loopne
mov
es
aaa
push
in
daa
push
inc
mov
push
(bad)
add
dec
out
cmp
pop
xchg
sub
fiadd
inc
icebp
lods
repz
mov
cs
shl
ffreep
aaa
ins
pushf
xchg
movs
xor
or
jbe
inc
es
leave
or
push
xor
adc
jp
mov
add
jb
cmp
sti
mov
call
jge
jns
fs
xchg
xchg
shr
out
aad
push
xchg
test
ja
xchg
lds
dec
scas
pop
fs
pop
mov
xchg
scas
jne
ror
je
in
neg
sahf
jge
bts
push
inc
jp
cmc
je
pop
out
mov
xor
push
pop
jns
sub
xchg
jle
and
and
shl
mov
scas
xchg
dec
xor
cli
jmp
shr
xor
(bad)
xor
sub
cmp
add
aas
xor
std
xchg
sti
xchg
aaa
pop
mov
cli
push
jb
(bad)
sub
mov
pop
retf
cdq
loopne
outs
loop
ficom
xchg
push
in
nop
ins
push
cmp
leave
xchg
fsubr
neg
xor
pop
shl
pop
aas
icebp
neg
and
mov
mov
sub
xor
xchg
in
or
or
cmp
xor
jg
dec
(bad)
in
loope
cli
add
addr16
or
icebp
fsubrp
gs
(bad)
stos
inc
ret
retf
mov
in
cmp
push
adc
int3
fs
loopne
or
mov
fcmovb
mov
fisttp
cmc
sbb
imul
or
retf
mov
scas
add
mov
in
push
aas
mov
nop
ffreep
pop
aas
sub
jl
mov
cs
adc
mov
retf
je
xchg
loope
jns
out
xchg
or
jo
dec
pop
push
sub
push
jns
push
add
hlt
in
(bad)
ins
shr
pop
and
xchg
and
iret
iret
xor
test
(bad)
cmp
test
fimul
loope
ret
les
aaa
mov
out
into
mov
adc
sub
jne
popf
jg
push
mov
ins
mov
add
sbb
lock
repz
int3
and
pop
(bad)
adc
or
mov
cld
mov
fdiv
daa
mov
add
xchg
imul
sar
jmp
xlat
cmp
sub
add
pop
add
fbld
repnz
sub
int
jne
pop
adc
jmp
mov
push
jns
loop
sbb
mov
shl
adc
rcl
cli
pushf
hlt
xor
add
jbe
inc
cmps
js
aaa
jecxz
movs
add
ja
daa
jns
adc
je
jg
dec
sbb
inc
adc
add
les
mov
es
jecxz
in
xor
test
dec
ins
lahf
lock
push
jmp
mov
dec
push
jo
shr
mov
(bad)
cmp
sti
or
out
mov
sbb
mov
mov
pop
jb
xchg
and
mov
jae
sbb
sbb
in
je
jmp
cmp
je
sub
shl
xchg
dec
clc
and
inc
repnz
pop
cdq
cmc
mov
xchg
cli
cld
dec
mov
jae
lods
ret
je
pop
push
xor
jmp
jae
stc
mov
lds
and
inc
movs
xchg
pop
or
jae
push
and
mov
jg
sub
leave
shl
lahf
cmc
loope
cmp
mov
arpl
fwait
data16
push
inc
pop
dec
cmp
and
mov
cmps
pushf
xchg
mov
xlat
and
adc
xchg
push
xchg
mov
dec
addr16
ret
mov
xor
pop
hlt
les
idiv
mov
in
std
add
mov
and
xchg
pop
push
popa
and
out
hlt
pop
lock
aad
sub
and
imul
xchg
cmp
xchg
stos
in
push
out
cwde
and
mov
call
and
not
div
adc
add
fnstsw
les
ins
repz
inc
clc
xor
adc
int3
push
cmp
add
mov
xchg
inc
fisttp
xor
mov
sbb
test
xchg
retf
xor
js
ins
inc
mov
xchg
xchg
push
mul
neg
out
cmp
into
in
inc
xchg
in
in
xchg
cmp
nop
cmp
mov
ja
pop
xchg
mov
mov
pop
inc
push
sub
push
dec
mov
sub
push
jb
iret
dec
xchg
xchg
mov
int
xor
jmp
call
int
sub
dec
sbb
pop
cmp
mov
cmp
popf
(bad)
or
add
xchg
cmp
fsubr
gs
dec
fmul
sbb
mov
js
push
dec
cmp
and
push
xchg
push
push
movs
sub
jp
dec
pushf
or
pop
mov
(bad)
and
outs
mov
sbb
xor
ret
daa
cs
ja
jmp
xchg
sbb
mov
mov
les
loopne
xor
into
dec
inc
cli
inc
mov
xor
xor
mov
enter
mov
dec
outs
jmp
cmp
repnz
fdivr
cmp
xor
adc
xor
or
push
shr
cli
cmp
mov
test
cmp
stc
ins
hlt
jp
shl
push
adc
dec
mov
(bad)
repz
outs
mov
push
call
loopne
cdq
add
sbb
stos
ret
mov
fisub
ins
cld
pop
xchg
push
mov
jae
xchg
pop
push
repnz
sbb
mov
mov
(bad)
enter
jnp
imul
inc
jl
mov
not
fild
aas
sbb
jbe
icebp
cmp
dec
sbb
pop
(bad)
jg
jnp
jne
xchg
and
adc
cmps
stos
mov
mov
mov
sti
mov
loopne
pop
mov
cmp
aaa
jnp
mov
jmp
push
jmp
cmp
outs
std
sub
mov
sub
sbb
idiv
jecxz
sub
adc
cmp
rol
xor
cdq
and
dec
push
outs
out
jmp
cli
imul
jb
jnp
cmp
and
push
cwde
cmp
lds
call
nop
clc
sahf
xor
sbb
push
out
loope
ja
mov
js
in
inc
adc
sub
cmps
jle
fbstp
inc
add
rcl
js
cmps
addr16
out
sub
into
dec
(bad)
mov
lea
xchg
pop
das
add
icebp
sti
mov
adc
or
leave
arpl
jbe
fs
rcr
mov
ret
push
push
in
enter
outs
into
mov
add
push
imul
jge
lock
push
outs
jbe
movs
mov
call
xor
mov
js
movaps
hlt
rcl
dec
push
iret
dec
xchg
sahf
sahf
mov
mov
mov
in
(bad)
cmc
sub
inc
not
pop
pop
mov
or
pusha
es
inc
jne
cmc
xor
test
stc
repz
sub
lds
xor
sbb
or
js
push
and
mov
(bad)
clc
jmp
mov
aaa
xchg
dec
adc
jp
adc
adc
lock
hlt
inc
sbb
or
int3
xor
pop
pop
gs
push
loopne
jle
das
and
adc
add
test
adc
sub
cmp
jne
xchg
(bad)
jno
aad
call
dec
shl
jae
inc
cmp
push
ds
add
aam
das
rcr
sbb
mov
adc
arpl
cmp
jl
es
scas
in
jne
das
pop
xchg
push
inc
stos
imul
mov
mov
pop
rcr
jmp
and
ret
xchg
sub
xor
xchg
xor
shr
ret
and
and
bnd
call
cmp
mov
cdq
fbstp
fldenv
cmp
(bad)
push
mov
gs
lods
retf
dec
jb
leave
xlat
dec
cmp
js
retf
cs
xor
pop
push
pop
cdq
sub
ja
dec
add
sahf
push
fisubr
sbb
lahf
test
add
cmps
std
scas
adc
pop
stos
cmp
mov
or
xlat
stos
mov
(bad)
lock
mov
xchg
push
jg
ret
jo
aad
sub
cmp
les
jge
sub
pop
jmp
lods
xor
shl
ins
in
(bad)
xor
(bad)
aad
sub
popa
arpl
cmp
test
mov
and
jmp
bnd
sbb
sub
adc
xor
or
dec
aam
xchg
addr16
js
loope
jp
dec
sub
rcl
leave
pop
jl
push
loope
lahf
js
in
xchg
jp
push
or
and
jne
out
push
out
out
mov
and
in
pop
fnstcw
scas
inc
sbb
pushw
cmps
add
xor
lods
adc
push
ins
xchg
fnstcw
jmp
add
cs
ins
sbb
dec
test
out
das
ret
add
int
pusha
addr16
sub
adc
enter
cld
xchg
(bad)
pop
cmps
pushf
sbb
xchg
cwde
(bad)
mov
clc
stc
mov
adc
pop
fxch
jecxz
add
sub
mov
pop
imul
jle
mov
loope
les
call
cdq
cmc
mov
cmps
add
retf
push
stos
lea
push
and
sti
iret
stos
shl
mov
ret
push
mov
sub
push
xor
sahf
inc
iret
cmp
xchg
or
in
movs
in
jp
jbe
jne
sbb
and
in
les
retf
mov
jnp
or
pop
mov
xor
mov
push
mov
xchg
and
lock
cmp
sub
dec
and
mov
add
xchg
mov
mov
outs
sahf
sub
std
xor
enter
cld
xchg
adc
sbb
xor
cld
push
imul
jge
fs
loopne
fwait
dec
add
das
xor
inc
les
inc
(bad)
lds
push
lock
sub
xchg
inc
push
aas
xor
xor
(bad)
dec
fisub
sbb
jmp
xlat
mov
adc
jo
xor
jmp
xchg
xor
and
dec
call
or
and
fdivr
mov
ja
repz
mov
mov
mov
xchg
adc
mov
push
and
xor
sar
enterw
jmp
in
or
test
movs
add
mov
jp
cmp
out
and
add
enter
and
sbb
xor
mov
das
xchg
dec
add
cmp
inc
xchg
cmp
outs
jp
(bad)
and
lea
pop
dec
rcl
das
mov
jge
imul
ins
mov
icebp
ins
retf
add
mov
out
and
aaa
push
nop
mov
push
dec
mov
ja
(bad)
mov
or
pop
into
loopne
xchg
pop
aam
xor
jmp
xchg
arpl
sbb
gs
scas
fnstenv
mov
mov
xchg
lahf
sub
xor
out
outs
jle
push
inc
repnz
loopne
sub
call
xchg
ret
or
or
add
icebp
dec
add
lods
adc
in
stc
or
scas
dec
pop
ins
xor
mov
stos
adc
dec
pop
pusha
sbb
xor
cs
ret
fcomip
jb
(bad)
(bad)
push
hlt
xchg
ins
and
hlt
push
pop
retf
push
cmp
pop
push
and
sub
les
das
movs
in
pop
push
xchg
(bad)
xchg
mov
(bad)
jl
mov
sub
rcr
pushf
adc
cmp
xor
fwait
outs
jne
(bad)
or
test
shl
adc
jge
jle
sub
dec
in
jb
int3
shl
cs
push
cld
push
add
mov
pop
pushf
in
push
mov
mov
add
cld
test
jns
mov
mov
addr16
in
daa
mov
adc
popa
in
test
push
xchg
push
test
or
mov
push
dec
xor
xor
out
pop
mov
stos
cmp
dec
or
mov
test
adc
pop
adc
cs
mov
xchg
outs
jmp
pusha
jecxz
mov
lock
push
pop
mov
iret
cmp
jp
scas
mov
dec
jge
sbb
mov
jmp
jmp
adc
mov
stos
jns
adc
fsubr
inc
ja
adc
retf
cmc
lods
js
mov
loopne
je
or
xor
xchg
mov
sbb
add
push
mov
out
stos
cmp
nop
(bad)
jmp
repnz
imul
inc
js
push
mov
xor
xor
push
mov
push
int
gs
pop
xor
mov
sbb
add
cmp
push
jmp
and
or
daa
sub
es
adc
jb
cld
aaa
movs
inc
(bad)
jbe
out
ret
in
lahf
in
sub
push
dec
cli
dec
push
out
mov
pop
ins
test
jb
add
test
add
mul
push
(bad)
lods
leave
dec
xchg
leave
xor
mov
iret
fist
cmp
xchg
popa
scas
cmp
int
adc
stos
mov
push
pop
(bad)
scas
outs
cmps
fimul
jle
mov
mov
mov
lock
push
xchg
jnp
clc
sbb
xchg
out
xor
dec
or
and
xlat
(bad)
cmp
repz
jne
daa
lea
cs
mov
ret
rcl
(bad)
cld
sub
adc
cmc
(bad)
jbe
repz
and
push
data16
jbe
in
out
mov
xchg
or
jnp
dec
imul
and
push
jl
cdq
aaa
jge
or
pop
jae
inc
xlat
xchg
repnz
jg
xchg
xor
bound
rol
popa
xchg
jno
ins
rcr
adc
adc
in
xchg
jle
add
adc
or
test
push
push
out
jle
ror
sub
mov
mov
mov
mov
sub
xchg
in
ret
push
and
jmp
and
popf
iret
nop
cmp
cld
out
and
jne
call
mov
aas
in
(bad)
push
and
retf
pop
repz
stos
sub
cmc
xor
mov
ja
push
std
(bad)
dec
aaa
cli
gs
adc
cmp
fisttp
jmp
lea
js
loop
in
or
cmp
mov
adc
or
xor
mov
arpl
int
dec
call
sti
leave
dec
cmp
ret
ins
sub
pop
or
push
je
jnp
in
push
cmp
and
adc
sbb
mov
or
jmp
movs
and
aaa
rol
dec
cmps
in
fcom
push
adc
pop
mov
pop
pop
cmp
sbb
jge
cdq
ret
shl
or
and
fldenv
push
outs
out
push
jae
ins
xlat
pop
push
cmp
or
mov
idiv
imul
push
mov
shl
mov
cs
setp
inc
shr
pop
mov
adc
daa
adc
mov
sbb
lea
movs
ss
xchg
rol
jns
jb
test
leave
movs
shl
push
sub
push
adc
dec
test
fs
mov
sbb
daa
sbb
mov
pop
dec
xchg
das
lods
clc
and
data16
add
(bad)
xchg
cmp
add
hlt
jo
addr16
mov
or
xor
sub
pop
mov
in
xor
mov
and
dec
or
(bad)
jae
pop
cmps
jae
test
xlat
mov
imul
jp
sbb
add
xchg
je
add
lods
(bad)
lods
jbe
push
mov
loope
retf
cmps
jg
inc
xor
cmp
js
jp
add
mov
or
ret
mov
cli
dec
sub
call
int3
mov
cmp
sbb
int3
xchg
push
mov
and
cmps
enter
xchg
add
je
pop
and
lock
cmps
cmp
jmp
clc
pop
dec
jmp
iret
stos
mov
xchg
mov
call
xor
out
sub
das
sub
cmps
xchg
mov
dec
xchg
popa
shl
mov
push
cmp
sub
jp
ret
adc
jl
mov
iret
retf
push
pop
mov
xor
xchg
xchg
inc
jae
cmp
xchg
je
popf
inc
sar
mov
mov
pop
add
sub
ss
dec
xor
sbb
sub
in
cmc
mov
xchg
or
in
(bad)
mov
popa
push
xor
xchg
je
mov
xor
jge
adc
add
cli
cmp
icebp
cmc
xchg
out
rcr
retf
and
lds
js
pop
push
cmp
lods
stos
call
js
mov
sbb
(bad)
(bad)
addr16
or
das
cld
adc
jnp
in
in
mov
inc
jmp
dec
neg
inc
leave
xchg
xchg
sti
mov
cmc
mov
fsubp
push
retf
pop
dec
or
push
aam
pop
les
pop
xor
sub
repnz
pop
retf
push
pop
and
xchg
xor
inc
inc
mov
push
sti
enter
push
outs
mov
les
addr16
movs
mov
jle
lods
shl
pushf
out
ins
or
xchg
int3
mov
xor
lds
loope
mov
aaa
push
fdivr
ins
mov
pushf
out
or
cmp
cmc
mov
push
push
mov
jl
mov
outs
jo
xor
xchg
mov
mov
je
call
out
cld
inc
repnz
stc
ins
push
jg
scas
jge
movs
xchg
les
cmp
adc
or
jg
push
shl
out
add
xchg
xchg
call
repz
sahf
scas
mov
jns
nop
jb
xchg
jge
mov
xchg
inc
ins
jb
or
cmp
scas
xor
pop
add
popa
imul
dec
ror
adc
xor
(bad)
(bad)
retf
js
and
(bad)
fimul
xchg
sar
pusha
(bad)
je
cld
out
mov
push
shl
mov
adc
pop
cmc
(bad)
xchg
mov
(bad)
stc
int3
pushf
xor
and
adc
and
loop
xchg
sbb
loopne
xchg
sbb
ins
or
aam
data16
lods
jbe
and
fild
sbb
pushf
or
xchg
loop
into
mov
ror
add
in
je
hlt
cdq
dec
mov
xor
cwde
lods
mov
or
outs
sub
call
iret
call
fdiv
mov
push
jae
mov
or
movs
push
test
add
outs
je
dec
shl
cmp
ja
fld
js
mov
mov
jne
xchg
data16
jo
pop
js
sete
aad
test
out
jo
sub
mov
in
dec
mov
test
mov
and
les
mov
xor
sub
jb
retf
jg
fnsavew
push
sub
push
shl
and
dec
xlat
xchg
fld
cli
push
push
xchg
sub
shr
sbb
jecxz
xchg
pop
pop
or
xor
lahf
mov
push
push
xor
mov
xchg
mov
icebp
sbb
imul
jmp
jae
inc
aam
test
xchg
or
xchg
data16
jb
xchg
mov
out
into
mov
push
mov
push
ret
cmc
cli
jb
push
int
xor
je
jecxz
xor
push
neg
sub
daa
mov
sbb
xor
sub
or
ret
das
ja
sti
imul
mov
jae
sub
stc
(bad)
pop
mov
ins
loope
int
or
and
cs
rcr
retf
xchg
dec
cmp
ins
in
cmp
loopne
clc
loope
sar
(bad)
faddp
mov
sbb
pop
repnz
jle
stos
dec
dec
ror
xchg
and
sbb
fcomp
jb
jmp
xlat
push
mov
jp
xor
xchg
shl
mov
jle
push
cmp
cli
mov
push
xchg
xor
adc
loope
xchg
push
int
adc
inc
dec
cdq
pop
bnd
jmp
clc
mov
je
sbb
mov
mov
inc
jbe
addr16
jge
into
pop
pop
les
sbb
dec
and
fs
cmp
sbb
dec
(bad)
pop
js
js
mov
pop
or
les
jge
sub
rcl
stos
cmp
push
sbb
jmp
mov
cmp
fsubr
jne
sbb
mov
fsub
cmp
jo
sub
and
ins
mov
xchg
and
cmp
adc
sub
add
leave
pop
jg
mov
pop
xor
jmp
push
cmp
xor
xchg
and
and
dec
sahf
mov
in
movs
push
pop
and
add
and
sub
adc
aad
xchg
jnp
jb
ja
ins
adc
xchg
push
mov
pushf
das
fstp
sti
scas
cmc
cwde
adc
add
cld
into
js
mov
call
jl
icebp
aam
add
xchg
cmp
les
cmp
lods
push
xchg
lahf
rcr
aad
test
sbb
inc
mov
xchg
add
jmp
test
pop
adc
sbb
adc
jns
xchg
and
or
dec
jecxz
push
sub
inc
or
in
scas
xor
aad
sub
cmp
xchg
cmpxchg
dec
(bad)
pop
aaa
scas
cmp
pop
jns
sub
loop
out
shr
adc
in
pop
lods
ret
not
xor
call
clc
and
pop
mov
fcmovbe
stos
mov
dec
fbstp
out
adc
pop
sub
sahf
cmp
mov
in
pop
jae
sub
shl
outs
sahf
or
adc
data16
into
adc
mov
add
cmps
xor
psubb
mov
ficom
in
adc
jae
pop
mov
out
cmc
pusha
push
or
repz
(bad)
jnp
sub
pop
stos
add
popf
add
movs
lods
call
cld
jbe
stos
cwde
jl
mov
cmc
icebp
push
mov
imul
sub
repz
jne
(bad)
icebp
sub
jb
push
das
cli
mov
ja
bound
out
pop
xchg
and
in
adc
loope
dec
call
push
adc
and
in
stos
adc
inc
ret
movs
in
pusha
stos
add
dec
cli
xchg
sub
or
das
bnd
or
xchg
mov
sbb
fidiv
fcmovnu
(bad)
push
out
sti
xchg
mov
sub
shl
mov
fs
inc
push
aam
fsubr
shl
mov
lahf
push
sub
inc
popf
push
push
mov
xchg
out
push
adc
cmp
les
out
loopne
add
cmp
cmp
xchg
mov
neg
std
push
lods
repnz
mov
mul
xchg
push
or
test
add
lea
in
imul
hlt
je
push
pop
sub
and
dec
sub
mov
dec
xchg
or
cld
jl
push
sar
inc
cmp
in
loopne
clc
jne
xchg
pop
and
and
cmp
adc
push
xor
xlat
dec
fbld
call
pushf
xchg
cmps
jbe
ja
add
aam
out
jo
xchg
popa
push
mov
or
in
sbb
call
rcr
je
aaa
clc
movs
fmul
push
cmps
nop
xchg
das
test
jne
push
mov
ds
jp
mov
push
lea
add
push
adc
rcr
push
push
add
mov
ja
scas
sbb
push
xor
gs
repnz
fwait
mov
push
stc
sub
(bad)
outs
adc
popf
cmc
rol
(bad)
test
sbb
sbb
sbb
push
jnp
mov
sbb
les
cmc
jmp
xchg
loopne
in
inc
(bad)
dec
xlat
xor
es
xchg
fsubp
mov
sbb
(bad)
add
out
inc
sub
mov
push
(bad)
test
cmp
sbb
xchg
xor
sbb
call
xor
or
jbe
xchg
jmp
lea
hlt
add
shr
and
dec
daa
push
loopne
shl
test
cmp
xchg
pop
cdq
jne
scas
mov
(bad)
and
test
stos
retf
push
call
and
mov
sbb
mov
hlt
mov
ret
push
adc
add
(bad)
dec
cmc
fucomp
mov
adc
push
mov
mov
mov
daa
les
sbb
pushf
jns
daa
sbb
mov
mov
popa
jmp
push
stos
inc
push
loopne
cli
or
arpl
icebp
test
fbld
and
outs
mov
xchg
pop
loop
pop
jne
ins
pop
hlt
imul
adc
sub
push
sbb
inc
add
add
fdiv
ret
dec
fld
mov
jp
out
jmp
or
test
xchg
lods
lods
mov
cs
xlat
push
adc
dec
mov
lahf
mov
outs
jp
test
ret
pop
push
sahf
mov
repz
inc
dec
(bad)
cmps
cld
adc
push
leave
jmp
push
in
leave
repnz
sub
shl
push
stc
out
loopne
loope
jle
adc
mov
mov
xchg
sub
iret
push
leave
(bad)
rol
(bad)
clc
sub
pop
test
aam
push
in
clc
dec
dec
jg
cmc
mov
es
sub
mov
call
dec
int3
add
dec
shl
adc
jae
lds
adc
aad
cmp
stos
out
addr16
mov
gs
das
je
in
cld
and
jge
inc
loope
adc
(bad)
mov
jo
outs
cmc
pop
and
scas
cwde
out
clc
xchg
mov
and
cli
xor
call
cmp
pop
nop
loope
jle
cmp
inc
ins
outs
sbb
mov
sti
pop
out
ss
xor
or
aad
jle
sbb
xchg
jnp
fld
js
push
clc
fiadd
sbb
jl
adc
(bad)
fisub
or
sbb
std
int3
stos
hlt
inc
fcom
xchg
loopne
xor
std
mov
cmp
jbe
jo
jno
loopne
je
in
fs
dec
pop
sub
pop
mov
js
scas
pop
(bad)
xor
or
and
cmc
jecxz
and
lods
ror
jmp
jecxz
cmp
mov
adc
fcomp
loop
ret
sub
pop
pop
cmp
popa
lahf
cmp
in
cli
xchg
and
hlt
inc
ret
icebp
aam
xchg
or
xchg
xchg
push
pop
dec
in
jns
aam
mov
jmp
adc
mov
add
add
aaa
fadd
out
pmaddwd
movs
mov
pop
ds
addr16
xchg
jne
jmp
push
mov
mov
xchg
sub
call
push
rcl
enter
cs
scas
ret
sar
xor
ja
cmc
(bad)
xchg
fsub
and
mov
inc
xchg
(bad)
in
stc
xchg
dec
pop
dec
adc
jmp
mov
fwait
pop
push
pop
xchg
jo
xchg
pop
ins
aas
loop
repnz
push
or
adc
sbb
xor
sar
gs
rcr
ret
cld
ror
or
xchg
add
sub
mov
xchg
dec
stos
outs
ds
neg
pop
jp
mov
push
jg
loop
es
cmp
jno
cwde
fcomp
mov
xor
push
inc
out
fisubr
test
js
mov
adc
je
inc
cmc
fs
cwde
pop
xor
mov
scas
cmp
fcmovnbe
addr16
mov
loop
xchg
out
jge
sti
call
sub
push
into
shl
mov
xchg
repnz
sub
pop
and
xchg
(bad)
imul
iret
(bad)
mov
mov
push
pop
inc
bound
and
in
mov
xchg
dec
dec
shl
call
ds
pop
jg
jge
push
xor
jo
and
lahf
sub
mov
loopne
in
out
loopne
cs
movhps
adc
pop
inc
je
out
pushf
mov
mov
xchg
xor
mov
(bad)
lea
std
jae
stos
loopne
mov
and
cmp
or
jmp
push
mov
int
in
js
inc
push
push
push
stc
cmp
xchg
fnstcw
(bad)
push
cmp
jmp
sub
sub
mov
dec
push
movs
sub
out
jne
sub
mov
ins
pop
pop
jne
pusha
test
dec
rcl
mov
dec
pop
(bad)
in
shl
jb
sbb
repnz
dec
into
add
aaa
add
popa
ja
or
adc
mov
xchg
shl
repz
push
or
xor
and
xchg
sub
inc
cdq
scas
test
cmps
mov
outs
cld
pop
xchg
dec
or
in
imul
hlt
call
div
dec
retf
xlat
fmul
pop
mov
jl
push
mov
fdivr
pmaxsw
push
cmp
xchg
(bad)
fnstsw
es
push
enter
fistp
pop
mov
or
jecxz
aaa
sub
dec
add
dec
xchg
add
js
cld
push
adc
dec
push
jmp
pushf
in
(bad)
and
push
test
xchg
cld
es
sbb
jmp
cmp
shl
add
js
stc
fcmovnbe
cmp
mov
in
cmp
jmp
in
repnz
je
or
jne
mov
jle
sbb
jbe
lea
lock
pop
adc
push
and
cmp
cmc
dec
xchg
cwde
into
shl
cld
adc
sub
adc
(bad)
clc
cmp
or
jbe
xchg
scas
mov
and
sub
call
retf
loope
popa
inc
sar
mov
adc
cmp
xor
(bad)
mov
xlat
pushf
in
add
xchg
sub
addr16
cmp
jne
dec
imul
inc
int
pop
clc
test
pop
daa
mov
sbb
clc
loopne
shr
xchg
shl
(bad)
out
fs
xor
push
mov
outs
adc
in
xchg
out
in
sbb
or
or
sub
cld
mov
icebp
mov
jbe
sbb
xor
xchg
sub
repz
pop
ins
cmc
jo
mov
daa
push
xor
icebp
cmp
add
jge
push
pop
loop
mov
adc
daa
inc
and
mov
mov
inc
in
cs
jp
je
jnp
jmp
cmp
jp
test
jmp
adc
mov
mov
repz
imul
cmps
jmp
rcl
push
cmp
jmp
sti
retfw
ret
pop
cmp
test
fist
pushw
lods
int3
ins
sbb
ds
imul
test
cdq
mov
shr
mov
mov
mov
or
(bad)
js
adc
jl
pop
push
mov
(bad)
cmp
xor
xchg
add
ret
in
adc
lods
fdivr
aad
sar
pop
sub
nop
aam
daa
xchg
xor
pop
xchg
xchg
push
outs
fild
mov
fistp
loopne
sti
or
sbb
mov
sub
dec
mov
sub
mov
mov
cmp
jge
stc
dec
push
popf
adc
jo
sub
push
test
test
mov
icebp
rcl
jl
shl
xor
(bad)
pop
mov
add
mov
cmp
cmp
cmp
mov
out
pop
aas
pusha
mov
pop
push
adc
jmp
inc
mov
pop
push
leave
cmp
inc
push
cli
les
mov
mov
shl
mov
shr
test
out
in
iret
pop
push
(bad)
movs
and
jge
xchg
or
dec
cmp
shl
sar
jle
call
mov
popf
in
jp
hlt
xchg
popa
call
cwde
inc
push
(bad)
jb
push
fmul
icebp
out
repz
or
test
sub
sti
test
inc
or
ins
rol
jge
mov
and
imul
jne
aaa
and
mov
ror
jnp
xor
xchg
stos
pop
ins
test
xchg
dec
hlt
push
cld
add
sub
cmp
shr
lahf
cs
cdq
jae
xchg
mov
iret
pop
mul
jns
xchg
daa
pushf
jbe
dec
add
hlt
mov
and
fs
xchg
clc
sub
into
mov
xchg
sbb
(bad)
fsubr
ret
imul
je
test
add
adc
lea
push
xchg
jle
xor
imul
dec
adc
dec
dec
dec
inc
cmp
xor
lods
repz
cs
adc
ffree
or
xchg
xor
mov
leave
or
cmp
xchg
cmps
mov
movs
adc
jo
jge
mov
lds
dec
outs
mov
dec
jge
les
cmp
bound
movs
loopne
clc
cld
ins
cmp
xor
movs
sub
mov
outs
jns
push
xchg
aam
xchg
fidivr
push
xor
lea
ret
mov
push
mov
push
not
jge
inc
loopne
sub
xor
mov
jecxz
(bad)
popf
popa
mov
add
in
cmc
dec
ss
rol
or
pop
xchg
sbb
or
mov
mov
test
lods
xchg
inc
push
jmp
repnz
push
call
inc
sub
push
and
hlt
call
aad
sub
dec
adc
dec
retf
rol
sub
bound
xchg
cli
in
popa
scas
dec
sbb
stos
xchg
and
dec
jae
jge
dec
(bad)
mov
in
lahf
in
push
mov
lods
xor
into
sbb
xchg
mov
not
jle
push
mov
dec
outs
pop
out
cs
lock
loopne
pop
xor
xchg
push
sbb
out
icebp
jge
outs
jb
or
stos
movs
in
sbb
pop
push
dec
sub
jge
int
in
jns
call
dec
jp
cli
sbb
xor
call
test
jae
sar
mov
xchg
test
jne
mov
sbb
xor
or
xchg
in
mov
jnp
out
loop
push
aam
jmp
(bad)
lods
dec
xor
js
xchg
out
aas
stc
xchg
and
mov
mov
ja
cmc
daa
mov
aaa
push
not
(bad)
jmp
xchg
repz
cmp
xchg
cwde
loop
imul
jge
icebp
adc
in
loope
push
mov
push
fnstenv
movs
enter
sub
mov
cmp
cmp
fcmovu
test
xchg
push
pop
xchg
aas
movs
jge
push
jmp
loope
sar
sbb
sub
jecxz
xor
mov
jge
sbb
into
ins
cmp
je
jnp
dec
cmps
cwde
pop
sbb
mov
mov
in
xchg
popa
mov
and
pop
mov
fist
in
xor
mov
js
scas
je
out
sbb
mov
pop
xchg
in
or
push
sub
adc
jecxz
dec
mov
push
adc
in
push
sbb
aas
sbb
out
xor
jns
xchg
jne
hlt
test
mov
jmp
pop
dec
lahf
cmc
aam
or
mov
jbe
pop
xor
out
add
jp
imul
push
hlt
xchg
xchg
push
pop
mov
(bad)
bnd
push
push
(bad)
push
das
in
icebp
jmp
fistp
not
push
int3
(bad)
movs
cmp
and
sbb
cmps
push
scas
aam
fisubr
dec
cmp
gs
in
jp
inc
mov
jae
(bad)
cmp
mov
test
push
cs
dec
push
(bad)
pop
aaa
cmp
pop
mov
push
push
out
lods
adc
xor
sbb
push
ret
inc
in
addr16
adc
push
sbb
fwait
gs
xchg
outs
nop
pop
jmp
fcom
sub
push
in
mov
nop
sub
or
shl
push
mov
mov
rcl
test
sahf
mov
mov
xor
and
adc
jge
repz
inc
cs
fcomp
sub
loop
mov
and
(bad)
mov
jae
out
or
or
sub
adc
xlat
test
fs
int
outs
call
sahf
sub
je
ret
xchg
add
lds
mov
xchg
cld
mov
add
lds
loope
jle
movs
fmul
adc
repnz
lahf
xchg
pop
xor
mul
push
es
cwde
xchg
push
adc
into
in
(bad)
mov
icebp
sahf
add
test
jge
mov
xchg
pop
test
push
mov
pop
aad
cmp
shl
and
je
and
stos
movs
ret
push
cs
not
jno
dec
jae
add
sbb
adc
imul
ja
push
movs
in
nop
or
push
fnstenv
sub
imul
jmp
iret
test
pop
xchg
ret
js
int
cmp
loope
push
and
jle
ficomp
xor
jbe
test
lock
jp
or
(bad)
enter
push
std
lahf
mov
into
mov
ss
cmp
call
sar
sub
mov
xchg
add
adc
fs
push
add
adc
mov
mov
je
popf
cmp
imul
lods
movs
in
adc
pop
shl
mov
sub
loopne
cmc
scas
mov
pop
dec
xchg
mov
push
int3
inc
xchg
push
mov
icebp
add
or
in
ror
push
push
mov
in
mov
pusha
jnp
inc
cdq
mov
into
and
or
sti
cmps
call
bound
jg
fcomip
jle
jae
xchg
mov
cwde
dec
inc
ins
outs
out
adc
int
std
loopne
add
dec
xchg
xor
test
jg
jb
adc
xor
add
movs
into
(bad)
addr16
aam
cmc
mov
cld
in
mov
js
sub
jns
jle
jne
pop
loopne
mov
fwait
aad
mov
leave
pop
loop
and
sub
jge
jmp
pop
cli
dec
sub
neg
fistp
xchg
xchg
pusha
test
xor
mov
imul
adc
iret
pop
dec
adc
xor
and
loope
sub
cmp
inc
sub
jmp
sub
dec
push
mov
cld
nop
mov
mov
and
sub
sbb
pop
xchg
daa
xor
jb
outs
test
or
adc
sub
out
xchg
in
xchg
push
sbb
cwde
inc
adc
das
sti
pusha
daa
in
pop
fisttp
mov
add
cmp
sub
mov
cmp
mov
cmp
sub
out
clc
xchg
mov
fadd
bound
pop
ins
or
cmp
in
(bad)
sub
(bad)
sbb
jbe
adc
mov
mov
data16
push
shl
mov
jne
cli
leave
push
and
jp
or
mov
mov
mov
mov
inc
push
scas
pop
mov
adc
int3
xor
ror
pop
adc
sbb
xchg
lods
adc
aas
push
stos
pop
loopne
sti
jmp
test
xchg
dec
imul
add
add
loope
scas
or
stos
adc
adc
add
in
xadd
dec
dec
je
test
cmp
sub
imul
hlt
sbb
jne
adc
inc
push
icebp
int3
popf
cli
jnp
outs
xchg
pop
xor
ret
in
pop
adc
xor
sub
cmp
add
fcomp
cmp
jp
adc
pop
adc
mov
stos
jmp
sar
gs
sub
enter
mov
cmp
push
dec
rcr
dec
jge
test
mov
ja
add
or
fild
cmps
xor
fistp
loop
(bad)
(bad)
les
fxch
xchg
enter
clc
adc
out
mov
test
jmp
je
sbb
adc
dec
push
cs
scas
adc
jg
dec
pop
js
cmps
call
scas
aam
popa
push
push
stc
cmp
sub
jmp
mov
repz
lods
in
pop
mov
clc
dec
xchg
sti
adc
mov
dec
push
hlt
push
xlat
imul
xor
imul
das
popa
retf
xchg
aam
adc
lock
pop
or
mov
aam
mov
push
loopne
cdq
or
int
fadd
out
dec
cld
sub
(bad)
lds
dec
push
push
test
jecxz
sub
fist
fistp
xchg
add
(bad)
(bad)
push
or
sti
pop
jb
lods
idiv
inc
push
mov
addr16
lods
jnp
mov
addr16
hlt
cmp
cmp
xor
sbb
dec
js
inc
out
jge
sar
add
add
xchg
dec
cwde
xchg
repnz
not
mov
cmp
xchg
(bad)
and
or
cmc
adc
shl
paddq
pop
rcl
or
xchg
jo
pop
jne
mov
inc
mov
paddusb
sub
jmp
pop
in
inc
jns
repnz
pop
sti
mov
adc
dec
repnz
sar
xchg
inc
adc
leave
add
out
adc
shl
mov
jo
xchg
cmps
cli
fistp
in
iret
xchg
es
jb
int3
jecxz
inc
jnp
xchg
sub
cmc
icebp
pop
ins
lock
dec
dec
inc
ror
cmc
or
int3
or
cmps
sbb
sbb
xor
sub
stos
enter
mov
(bad)
fs
int3
gs
ja
in
bound
adc
sar
aaa
icebp
pusha
xchg
pop
popa
dec
lds
sbb
sbb
dec
js
jle
nop
in
push
ins
mov
push
cmp
test
jo
in
ficom
ja
icebp
shr
xchg
jnp
sbb
dec
repnz
daa
(bad)
pop
mov
inc
xor
mov
dec
adc
stos
mov
xchg
mov
fwait
push
lock
adc
test
jmp
pop
cmp
cwde
mov
das
test
mov
scas
or
shl
push
xchg
jbe
imul
retf
sub
int3
outs
or
xchg
call
inc
jb
fsubr
or
inc
cmp
iret
fisttp
movs
cld
adc
cdq
fisub
jbe
jb
dec
sub
sbb
jno
call
in
js
adc
mov
cli
test
push
sbb
les
push
dec
jecxz
sahf
(bad)
call
sbb
dec
repnz
imul
in
pop
push
ins
fs
mov
rol
rol
test
clc
cmc
sbb
shl
xor
imul
sar
push
xchg
lock
push
mov
clc
or
push
mov
pop
sub
(bad)
dec
add
pop
pop
test
or
adc
addr16
xchg
pushf
fbld
ins
sti
xchg
pop
call
push
add
in
(bad)
adc
add
fld
fcomi
pop
xchg
pop
mov
rcr
cmp
inc
jbe
xlat
lock
cmp
mov
in
dec
cmp
adc
pop
or
push
mov
push
icebp
shr
outs
fst
and
test
mov
add
mov
lods
jl
mov
dec
cmc
or
cli
aas
popf
(bad)
xor
js
mov
push
(bad)
call
fisub
adc
jns
daa
sub
test
pop
loop
jmp
les
(bad)
jns
sub
push
add
mov
mov
in
cmps
repz
fst
mov
push
std
push
push
sub
(bad)
push
bswap
in
mov
sti
jne
movs
or
rcl
push
int
mov
ror
cdq
outs
cmps
ficom
fs
mov
and
sar
mov
add
xor
mov
mov
inc
dec
xchg
push
xchg
test
jb
hlt
mov
sub
cmps
daa
lea
mov
push
jns
dec
mov
in
sub
inc
and
inc
mov
mov
es
jne
fist
sbb
xchg
pop
or
call
and
test
daa
icebp
cdq
xchg
dec
ror
sbb
push
lods
or
ss
jmp
pop
mov
adc
cmc
shr
and
push
jo
lods
cmps
pushf
sub
xchg
in
bnd
sbb
jne
lahf
loope
dec
dec
add
(bad)
push
adc
xchg
xchg
scas
fbstp
pop
and
mov
or
sub
das
or
jae
sub
jns
in
sar
jg
xchg
ja
pop
retf
mov
pushf
adc
jnp
call
sub
jl
std
sub
lahf
(bad)
pop
mov
lea
out
daa
mov
fdiv
bound
cmp
jnp
push
jb
aad
jns
test
adc
sub
fild
add
loop
jns
call
jne
jg
jg
int
imul
push
js
fs
je
shl
jae
cdq
or
xor
fisttp
call
xchg
scas
add
xor
loopne
cs
jae
xchg
es
cmps
mov
push
xchg
pop
inc
xchg
lods
aam
stos
(bad)
repz
outs
out
pop
nop
sub
nop
pop
xchg
jg
std
sbb
stos
hlt
pop
push
cmp
mov
scas
ins
push
mov
stos
sbb
imul
or
xor
or
jb
out
and
rcr
push
push
sub
je
hlt
call
or
cmps
jne
sbb
hlt
mov
dec
cmp
xchg
or
cmp
arpl
mov
loopne
push
pop
pop
xchg
mov
jo
lods
icebp
pushf
jbe
xchg
pop
and
xor
ins
xchg
and
cld
mov
cmp
(bad)
cmc
loope
xor
push
iret
test
mov
dec
sub
test
iret
push
fisttp
xchg
jmp
jne
xchg
fstp
mov
loopne
jl
adc
(bad)
fldcw
dec
mov
mov
cmc
ds
cmp
sbb
(bad)
in
add
aas
ins
jmp
push
in
dec
lea
jnp
jo
leave
or
jp
loope
cmp
aad
scas
in
test
jbe
pop
fs
xchg
mov
mov
ss
sub
in
push
ret
leave
fnsave
mov
sbb
inc
jl
pop
mov
nop
mov
mov
pop
fwait
mov
jb
fs
test
push
and
add
ret
cmc
pop
ja
push
out
cmp
cmp
sub
cmp
not
rol
sub
repz
mov
xchg
push
inc
mov
sbb
jae
mov
dec
mov
mov
adc
cmp
enter
icebp
shl
dec
jbe
mov
pushf
pop
inc
push
call
mov
popa
mov
aam
lods
push
shl
(bad)
mov
jl
xor
push
in
adc
cmps
adc
test
push
xchg
into
shr
cmc
sti
sbb
pop
je
push
leave
popf
cmp
or
adc
inc
popa
retf
std
ret
int3
clc
jle
xor
mov
out
pop
bndldx
xchg
sub
sub
push
mov
jb
imul
mov
mov
jns
outs
lock
sbb
aas
cld
popa
sbb
push
gs
sbb
and
push
out
cmps
out
push
xchg
sbb
dec
xor
lods
push
jp
adc
jecxz
pushw
shl
cmc
mov
pop
mov
push
inc
mov
push
cmp
or
xchg
cmps
fidiv
jmp
imul
sahf
xchg
inc
inc
push
mov
xchg
je
inc
pusha
and
or
in
sub
xlat
add
dec
sbb
loope
pop
ins
stc
sbb
popa
out
lock
js
inc
nop
test
xchg
push
push
sbb
pop
int3
xor
dec
gs
retf
daa
shr
sbb
jp
test
mov
jne
inc
cmp
gs
inc
dec
mov
sub
sahf
xor
dec
xor
ds
dec
clc
sub
push
hlt
fld
(bad)
lahf
dec
data16
repz
sbb
pop
in
sub
jns
lfs
push
push
sbb
out
repz
push
pop
call
inc
inc
sahf
sbb
ss
mov
pop
or
jmp
xor
mov
iret
mov
paddusw
push
and
xchg
imul
xchg
mov
in
loope
jmp
hlt
fiadd
add
xchg
(bad)
loopne
push
in
add
stc
cs
mov
cmp
jne
mov
xor
sbb
mov
mov
mov
or
fwait
push
xchg
push
pusha
into
dec
pushf
xor
je
jnp
pop
outs
inc
jb
das
(bad)
sbb
repnz
dec
push
pop
mov
jno
sub
sbb
sbb
xchg
int
cmp
cmp
push
xchg
jmp
mov
sub
cmps
daa
xchg
mul
xor
pop
repz
push
lahf
mov
push
xchg
(bad)
lods
shl
test
movs
retf
shl
mov
loopne
rcr
and
fstp
dec
ja
in
mov
mov
cdq
push
movs
and
sub
(bad)
mov
jne
xchg
sar
fs
mov
jbe
xchg
mov
jle
rol
mov
ins
jl
imul
xchg
and
cld
jbe
adc
fnsave
lahf
lea
ret
jae
adc
fdivr
xchg
sub
dec
pop
imul
pop
pop
dec
sbb
test
fnstsw
dec
cmc
jae
fcom
xchg
push
jbe
ficomp
push
mov
inc
mov
out
pop
outs
adc
lea
xchg
jmp
cld
(bad)
mov
cmp
cmps
scas
push
and
and
push
pop
jmp
mov
jmp
shl
int3
leave
xchg
dec
pop
mov
push
ror
std
adc
xchg
aam
dec
rcr
jno
addr16
stos
pusha
out
in
mov
cli
sbb
fisub
(bad)
mov
lods
mov
cmp
xchg
pop
and
mov
gs
jp
int
jle
sbb
mov
inc
(bad)
(bad)
jmp
loope
mov
icebp
mov
retf
adc
enter
test
mov
xchg
das
adc
xchg
xor
jbe
repnz
ins
addr16
jecxz
mov
push
xchg
mov
add
pop
jge
jo
and
imul
rcr
into
cmp
hlt
mov
inc
jle
pop
loopne
add
adc
data16
adc
imul
jge
rol
mov
fist
cwde
sub
jns
test
xchg
hlt
dec
lock
inc
aaa
xchg
ja
imul
jnp
fs
bound
cmp
push
ss
or
inc
jecxz
(bad)
fcom
adc
mov
dec
fcomp
or
and
sar
aaa
ficomp
adc
inc
call
add
lods
add
jge
mov
push
inc
jbe
mov
int
sbb
xchg
mov
out
jg
pop
dec
push
and
or
cmp
jl
or
rol
loope
inc
mov
cwde
les
daa
out
movs
das
xchg
pop
ja
clc
mov
les
inc
cmc
lods
mov
and
jp
hlt
fwait
ret
mov
adc
adc
out
repz
jb
data16
stos
sub
in
arpl
call
pop
pop
cwde
dec
dec
mov
pop
popa
ficomp
inc
sub
loopne
mov
dec
xchg
pop
cld
inc
pop
cmps
xchg
push
xor
sbb
lahf
jmp
test
push
jmp
xor
mov
and
sbb
mov
xchg
aas
ins
pop
add
push
ror
arpl
movs
pop
hlt
popf
sub
inc
jae
mov
sub
cdq
loopne
js
sbb
ret
mov
(bad)
(bad)
clc
pop
add
lods
jne
push
mov
jno
nop
add
sub
ins
imul
jbe
fnstenv
call
dec
and
icebp
(bad)
sub
pushf
popf
jbe
pop
dec
pusha
dec
adc
jns
outs
scas
or
lock
push
movs
ins
dec
or
xchg
sub
int
ja
repz
in
in
xlat
add
imul
je
in
dec
sbb
shr
adc
aas
out
pop
js
(bad)
jp
cmp
(bad)
iret
jne
ins
or
xchg
call
mov
and
ret
push
push
imul
cmp
icebp
or
lds
ror
pusha
data16
cmps
arpl
call
and
push
rol
xchg
es
(bad)
ret
push
mov
idiv
lods
mov
jmp
xchg
jmp
jae
dec
in
add
mov
mov
or
sub
jnp
jbe
pop
dec
xor
test
cmps
xchg
hlt
je
push
retf
je
sbb
in
in
pop
xor
(bad)
(bad)
in
xchg
out
cld
inc
xchg
mov
ds
cmp
jo
mov
outs
jecxz
lods
fcom
(bad)
out
sub
jmp
test
out
jb
sub
mov
xchg
out
daa
fdivrp
push
jg
inc
add
sbb
jb
pushf
xchg
add
or
in
sbb
nop
pushf
addr16
dec
push
xchg
dec
mov
mov
push
xchg
push
and
sbb
movs
clc
cmp
jnp
cmp
and
or
jno
pusha
pop
(bad)
mov
loopne
xchg
push
fiadd
(bad)
iret
and
ja
loope
mov
test
js
jp
je
icebp
inc
inc
loop
test
pop
das
pusha
add
cmp
push
and
inc
test
hlt
rcl
out
jmp
mov
pop
mov
imul
(bad)
sbb
lea
mov
add
cmp
adc
in
add
add
das
(bad)
cmp
jp
add
mov
cmp
scas
inc
jne
retf
shl
dec
aam
ins
das
hlt
sbb
add
jnp
test
jp
mov
xlat
mov
xchg
adc
sbb
sbb
(bad)
push
and
xchg
push
mov
dec
adc
mov
mov
sbb
xchg
inc
sub
xchg
in
fdivr
pop
in
mov
jae
and
cmp
push
repz
sbb
push
mov
xchg
inc
sbb
jbe
or
imul
xchg
push
stos
dec
js
jae
cs
sbb
push
jns
mov
shl
jl
adc
loope
jle
adc
and
cmps
pop
hlt
cmp
lock
xchg
add
mov
or
and
mov
pop
sbb
pusha
sbb
push
jecxz
frstor
aad
xor
add
leave
mov
rcl
jne
push
test
cmp
mov
scas
(bad)
sub
fs
cs
jg
or
xchg
or
(bad)
jae
inc
out
js
adc
push
in
add
icebp
sbb
rcr
mov
xchg
sbb
sahf
sbb
pusha
mov
test
inc
sub
and
mov
call
and
pop
inc
xor
push
fsubr
(bad)
cmp
xchg
dec
pop
mov
loope
cli
dec
adc
out
inc
(bad)
call
and
retf
jg
movs
mov
pop
imul
pop
in
sahf
scas
push
jb
add
xlat
dec
das
cmp
push
mov
out
xchg
fild
mov
jmp
adc
dec
fcom
gs
in
mov
xchg
adc
jmpw
clc
mov
fs
ds
js
leave
(bad)
std
and
outs
lock
fwait
call
adc
sbb
xchg
adc
cmc
int3
pop
xchg
test
loope
mov
cmc
dec
pop
cmp
push
int3
jae
or
jmp
push
retf
and
pop
js
cmp
sbb
cmp
xchg
inc
(bad)
int3
pop
add
call
arpl
pop
xchg
xchg
jb
test
pop
sub
mov
adc
addr16
sbb
test
fisttp
jae
call
out
jne
mov
rol
(bad)
nop
sub
clc
stc
xchg
fcmove
popa
sub
nop
aad
test
jae
ds
jnp
ret
test
add
pop
inc
js
xor
mov
cmps
sbb
pop
test
das
push
push
ss
xchg
xor
push
push
and
mov
xchg
xchg
xchg
sub
xchg
das
xor
jmp
push
cmc
lds
push
mov
mov
cmp
adc
inc
imul
daa
or
dec
push
cmp
ins
ss
mov
jns
ret
cmp
push
(bad)
div
out
(bad)
aam
inc
xchg
pop
iret
aam
jmp
out
pusha
ins
movs
loopne
or
xchg
test
mov
jmp
cs
shl
sub
ret
sbb
loopne
je
imul
mov
push
xor
pop
pop
push
pop
sub
xchg
mov
xchg
adc
pop
mov
test
xchg
add
inc
ins
(bad)
stc
adc
adc
xchg
push
xor
jne
fcom
bound
movs
imul
bts
add
push
lods
pusha
inc
scas
xchg
cmp
cmp
and
sub
ret
dec
pop
pusha
add
ja
jb
jnp
sub
xor
fidivr
sbb
popa
xor
imul
cli
outs
jge
sub
outs
retf
scas
cmp
mov
clc
into
(bad)
(bad)
mov
repz
movs
pusha
and
push
outs
pusha
sbb
cmp
mov
pushf
outs
lock
test
pushf
jle
pop
xchg
sbb
cdq
mov
adc
xchg
adc
ins
ins
xchg
dec
xchg
dec
jecxz
and
movs
sub
xchg
imul
xchg
repnz
into
mov
pop
shr
xor
aaa
mov
jnp
mov
mov
xchg
adc
push
js
or
call
test
push
jle
int
clc
ins
fild
retf
fnstsw
scas
stc
jae
loope
ret
inc
cmp
fnstenv
imul
ins
add
popa
ds
sub
or
pop
mov
(bad)
stc
sbb
xor
add
push
mov
xor
xchg
sbb
leave
clc
fbstp
push
in
or
mov
lods
stc
dec
hlt
xor
cmp
pop
push
jmp
test
xchg
xor
mov
sbb
ins
adc
dec
dec
imul
sbb
pop
jnp
int
loopne
sub
sub
xchg
pop
jp
and
xchg
stos
push
push
jb
mov
mov
mov
mov
in
pop
mov
bound
fmul
dec
push
scas
sub
int3
and
xchg
or
je
sar
sub
mov
push
jo
inc
sub
stos
mov
pop
push
sbb
or
xchg
cmp
xchg
mov
adc
cmp
shl
daa
in
dec
adc
push
push
dec
xchg
int
je
addr16
xchg
mov
inc
xor
std
jl
retf
sbb
(bad)
clc
rcl
sub
jnp
jnp
div
mov
fmul
loope
push
fisttp
sbb
and
cmp
data16
push
out
jne
je
pop
js
inc
mov
xchg
clc
adc
pusha
cwde
cmc
std
cmp
and
jo
in
es
rol
rcl
stos
cld
ret
adc
into
pop
or
sub
out
(bad)
fcom
xchg
dec
adc
aaa
ret
ds
push
mov
and
test
xchg
jmp
sti
cs
data16
jne
mov
mov
retf
cmp
fidivr
jmp
daa
lods
xor
cs
(bad)
mov
mov
das
jo
cmps
inc
adc
sbb
adc
sbb
mov
add
xchg
and
mov
repnz
iret
dec
dec
pop
iret
int
cmp
push
inc
out
jecxz
fstp
inc
js
add
adc
xchg
sub
dec
xchg
clc
inc
cld
mov
loopne
inc
lahf
rcr
cmp
xchg
int3
loope
jae
je
lahf
cdq
add
out
js
dec
sahf
xchg
cmp
repnz
call
ds
xchg
ror
rcl
fstp
jp
fwait
push
sbb
and
push
(bad)
xchg
xchg
es
sbb
sub
ds
jb
hlt
push
call
rcl
sub
xchg
dec
cwde
ret
push
mov
(bad)
nop
or
or
out
cmp
scas
hlt
cmps
(bad)
jle
inc
inc
idiv
dec
push
retf
out
repz
ds
out
inc
jb
xor
push
push
cmc
(bad)
repz
mov
cmp
sub
rol
inc
and
fs
(bad)
pop
mov
lock
js
cld
add
ds
fisttp
xchg
pop
mov
fidivr
jo
push
xor
pop
ins
dec
xchg
enter
push
jnp
sbb
enter
xchg
fcom
sub
dec
or
xchg
push
clc
jne
dec
cwde
xchg
aad
or
fcmovb
(bad)
push
pop
mov
and
shl
data16
xchg
inc
shr
(bad)
cmp
arpl
pushf
adc
repz
add
div
xchg
pop
lods
int
push
inc
mov
inc
inc
jle
in
fsubr
xchg
push
jns
or
dec
pop
outs
leave
adc
data16
idiv
imul
arpl
psubw
cld
movs
out
or
mov
mov
xchg
aas
es
dec
into
adc
fwait
xchg
sar
xchg
pop
cld
lods
fnstsw
hlt
push
xchg
and
or
jecxz
fsub
mov
sbb
mov
in
loopne
ds
inc
jmp
pop
jbe
add
test
add
dec
lock
xchg
mov
or
inc
jae
sub
sbb
pop
lods
sbb
enter
xor
jmp
add
fs
pop
sbb
int
adc
loope
sar
lock
jae
mov
out
mov
pushf
add
call
mov
or
pop
(bad)
mov
rcl
jne
(bad)
in
xor
imul
outs
pop
sub
push
les
add
sub
and
push
xchg
xor
push
jmp
out
sub
sub
pop
xor
lock
ja
push
add
jmp
jl
fucomip
aas
(bad)
in
pop
jne
inc
dec
jbe
jl
or
jo
pop
cmp
(bad)
xor
adc
dec
inc
xchg
and
int
jl
push
lods
cmp
loope
xchg
fisub
in
cli
xchg
lahf
cmp
je
fbld
inc
cmps
push
shr
imul
mov
(bad)
sti
imul
cld
xchg
jbe
je
and
xchg
sbb
push
push
sbb
out
ret
mov
mov
(bad)
ficom
or
lods
mov
dec
cmp
mov
cld
fistp
lds
sbb
iret
cmp
mov
mov
push
aad
icebp
push
mov
xor
je
sar
in
leave
xchg
adc
cmp
test
or
mov
add
clc
xlat
hlt
and
sub
cmc
mov
pop
push
out
sbb
jmp
dec
bound
sbb
mov
xchg
pop
dec
pushf
pop
pop
call
pop
fs
push
popa
movs
es
dec
frstor
xor
loope
xchg
mov
lock
xchg
xchg
jmp
ins
mov
in
fisubr
mov
aam
repz
es
inc
xchg
pop
gs
adc
push
fiadd
xor
fistp
jle
mov
fidivr
sbb
aad
sti
outs
lock
rol
jno
push
xchg
xor
mov
jns
cmp
lahf
push
rcl
hlt
ds
add
leave
push
jno
(bad)
mov
mov
jne
adc
ja
mov
out
(bad)
xchg
gs
js
daa
nop
call
mov
inc
sub
je
mov
hlt
mov
std
fidivr
fist
pop
hlt
push
inc
dec
fidiv
xchg
ret
arpl
jae
pop
pop
push
sub
jle
xchg
cmp
addr16
mov
cmp
adc
dec
xor
jbe
push
in
xor
into
xor
mov
xchg
int
in
sub
pop
scas
jecxz
hlt
leave
cmp
lock
adc
rcl
add
fwait
xchg
inc
sub
add
arpl
pop
sub
sub
jns
xor
leave
sub
sbb
loope
cmp
mov
test
push
ret
dec
or
sar
int3
push
pop
jno
out
dec
jmp
pop
sahf
pop
sub
lock
xchg
loopne
les
pop
popa
jg
mov
js
outs
repnz
jg
inc
sbb
shl
adc
rol
es
ror
xlat
mov
pop
sbb
test
fcmovnb
out
mov
div
enter
pop
pushf
repz
inc
push
movs
mov
adc
inc
in
retf
push
sub
ds
test
xor
es
xchg
imul
or
inc
dec
pop
repnz
lods
fwait
das
retf
adc
lock
in
xor
mov
adc
inc
(bad)
add
mov
or
adc
jns
outs
jne
in
jb
xor
sub
and
xor
clc
sub
fbstp
mov
fcom
and
jne
rcl
hlt
pop
mov
call
in
jp
inc
lock
xchg
cmc
xchg
and
cwde
arpl
in
sbb
test
data16
je
mov
es
clc
jae
adc
lock
outs
imul
and
gs
es
dec
cmp
add
and
push
test
xor
test
jmp
inc
mov
nop
or
add
jl
add
test
imul
or
popa
retf
scas
outs
ss
xor
dec
xchg
cwde
jl
xchg
popf
xor
jp
iret
leave
fstp
bound
aam
jmp
pop
(bad)
add
and
add
imul
mov
inc
and
xchg
mov
dec
push
mov
mov
jae
cmc
xchg
cmps
(bad)
push
jp
xchg
pop
inc
jb
jl
arpl
jl
retf
jmp
ror
mov
cld
adc
je
std
(bad)
popf
pop
rcr
cmp
xor
mov
sbb
push
and
ja
stos
imul
mov
and
mov
pop
add
jg
inc
sub
sub
lahf
ins
jmp
and
sub
push
mov
pop
fs
lds
xchg
jae
outs
jns
cmp
(bad)
pop
or
mov
push
push
or
cs
(bad)
pop
adc
mov
daa
mov
bound
(bad)
push
xor
data16
sbb
fnsave
xchg
(bad)
sahf
cmp
xchg
or
into
enter
mov
jl
icebp
push
cmp
mov
pop
jmp
jg
cmp
pop
and
add
jae
inc
mov
cmp
cmp
mov
dec
cmp
push
fwait
or
shl
pop
pusha
test
cld
sbb
xchg
jmp
clc
call
mov
jge
mov
xor
cmc
iret
jl
(bad)
jns
cmp
js
stos
jg
jge
(bad)
repnz
gs
push
sub
fild
repz
and
hlt
cmps
pop
(bad)
in
les
fs
add
hlt
sbb
xchg
pop
push
xor
shl
inc
repz
loopne
mov
mov
js
mov
add
push
ja
add
ret
(bad)
lahf
inc
xchg
sbb
clc
mov
xor
dec
and
xchg
aas
push
jnp
mov
popa
add
das
dec
call
into
jg
mov
inc
das
scas
dec
pop
pop
sub
fsubr
gs
je
mov
cmp
add
mov
cmp
pop
lds
sbb
test
call
mov
pop
sahf
mov
sar
xor
pop
xor
popa
aaa
retf
fcmovbe
push
pop
fistp
pop
jmp
pop
sbb
test
dec
fld
fsub
out
mov
les
xor
test
xchg
cdq
mov
aad
pop
cmc
jb
addr16
aad
mov
jns
stos
jg
cmp
int
(bad)
bound
dec
cdq
cs
loopne
gs
and
jg
push
cmc
jo
add
jle
cmp
fxch
enter
cmp
mov
cmp
sub
sti
dec
push
add
add
cmp
je
xchg
aam
in
aam
fist
adc
imul
xchg
xchg
cs
repnz
imul
aam
cli
cmp
daa
cmps
dec
imul
xor
jmp
daa
mov
into
sub
pop
pop
inc
icebp
enter
add
retf
or
jns
xor
xlat
or
xchg
mov
cld
xchg
jp
into
sar
push
adc
pop
repz
mov
ins
es
fstp
mov
(bad)
fidiv
push
mov
xchg
adc
clc
inc
ror
xchg
stc
add
and
daa
stc
cmp
cdq
pop
ds
adc
push
push
sub
jbe
ds
cmps
mov
call
mov
shl
ret
jne
ds
adc
outs
jns
ss
fwait
mov
xor
mov
adc
les
into
(bad)
sub
inc
inc
jne
aad
je
push
mov
shl
cmp
dec
jae
cdq
lods
sbb
inc
lahf
int3
jle
jne
jmp
cmp
add
leave
pop
je
inc
stc
lahf
loopne
retf
or
adc
sub
in
ins
nop
pop
dec
push
sbb
or
cmp
and
pop
xchg
pop
ins
pop
sub
mov
add
mov
ins
push
mov
(bad)
cmc
cdq
jb
xchg
sub
nop
aas
lds
repnz
dec
jle
sub
aad
dec
sbb
mov
retf
and
jno
inc
ror
sar
cs
pop
jno
cmps
fidiv
xor
mov
dec
xor
adc
mov
dec
dec
add
xor
mov
pusha
and
xchg
jnp
rcl
mov
fwait
ins
xor
mov
fidiv
and
add
xchg
push
cs
out
les
stos
jbe
jp
add
leave
sub
jnp
push
sub
call
daa
gs
push
or
mov
lods
cmp
cs
dec
ret
push
xchg
xlat
push
nop
sub
repnz
pop
sbb
add
pop
and
mov
iret
pop
ja
fiadd
xchg
dec
mov
test
push
mov
jae
lahf
sub
xchg
xchg
push
push
cmp
mov
aam
aad
mov
and
xchg
add
or
inc
into
push
retf
mov
mov
sahf
push
jns
call
ret
jp
mov
mov
mov
or
out
es
mov
jbe
xchg
hlt
push
ret
outs
(bad)
aas
inc
pop
imul
sub
stc
fidiv
hlt
xchg
mov
xchg
and
and
xor
pop
add
retf
clc
pop
lods
(bad)
jge
adc
retf
push
cli
mov
sub
jbe
movs
pop
iret
pop
imul
jo
dec
jp
mov
ins
adc
pop
push
das
lods
ror
cs
das
popa
push
pop
outs
xor
or
push
jb
pop
outs
ja
jmp
mov
add
(bad)
cmc
sti
mov
or
fs
jb
(bad)
jmp
test
fwait
movs
jmp
dec
mov
fisub
jecxz
out
xchg
mov
pop
outs
repz
jl
adc
push
popa
xor
lahf
jae
sub
xlat
in
mov
jmp
jns
aam
clc
jp
enter
jmp
mov
adc
inc
and
jl
mov
jle
jp
adc
pop
daa
stos
mov
sahf
jmp
pop
sub
fist
pop
cmps
sbb
sub
push
arpl
add
cmp
jbe
mov
dec
adc
stos
xchg
xchg
add
jmp
inc
sub
aam
repz
js
cmps
and
jecxz
lahf
cmp
pop
sub
adc
ins
xchg
xor
sub
call
xor
(bad)
pop
ret
dec
test
xchg
add
jmp
mov
test
retf
jmp
pop
sub
jne
push
mov
jmp
ds
nop
out
ds
push
add
hlt
(bad)
je
mov
mov
push
and
int
jnp
outs
fidivr
leave
xchg
or
out
push
mov
pop
pusha
cmps
sbb
pop
push
add
xchg
aad
jnp
push
cs
xchg
std
fwait
in
xchg
dec
retf
out
int
je
inc
rcr
adc
ss
jecxz
(bad)
jne
sbb
xchg
pop
lds
sbb
addr16
dec
outs
mov
fld
mov
cmp
add
or
outs
bound
addr16
or
jb
sbb
rcr
and
ror
dec
outs
repz
cmp
fs
int3
fnstcw
inc
cmc
push
mov
das
scas
cld
jbe
xchg
ins
jo
mov
dec
and
sbb
inc
js
cmp
les
sub
sar
cmc
repnz
outs
jmp
cmp
and
adc
ja
ins
inc
in
daa
test
int3
and
loope
shr
shl
jle
and
add
ficomp
sub
adc
in
mov
push
jno
pop
inc
xchg
cwde
imul
adc
loop
push
lods
ins
sbb
jp
lods
xchg
and
arpl
(bad)
xor
hlt
sbb
fild
sbb
(bad)
loopne
lds
push
dec
sbb
dec
jno
nop
and
and
sbb
int3
jmp
push
xor
les
cmp
mov
sbb
jno
jnp
pop
imul
or
in
dec
dec
inc
cmp
mov
sbb
cmp
ret
cmps
xchg
movs
cmp
sbb
mov
cli
in
and
dec
mov
add
cwde
or
addr16
cmc
ss
test
lds
push
cmp
ins
mov
stos
mov
or
fstp
adc
test
ja
or
jmp
pop
gs
add
lods
add
push
mov
dec
cs
in
adc
and
and
cmp
or
pop
add
jmp
xchg
loopne
pop
inc
fild
and
(bad)
pop
xor
cmp
fnstenv
popa
or
stos
and
inc
xor
bound
js
pop
or
nop
lods
mov
dec
in
cmps
mov
sbb
rcl
or
std
std
cdq
adc
leave
xor
test
or
or
pop
setl
fwait
and
sti
dec
xor
push
bound
sbb
mov
xor
shr
out
outs
push
xchg
aad
fisub
(bad)
and
aam
shl
pop
lahf
(bad)
cwde
jo
push
inc
or
mov
adc
outs
xor
repz
cli
xor
pop
pop
add
jbe
mov
dec
pushf
iret
das
sub
mov
mov
mov
push
daa
ficom
mov
inc
jne
cmps
mov
dec
mov
(bad)
or
cmp
ret
cmp
cld
xor
mov
lods
sub
aaa
xor
push
js
sbb
pushf
adc
adc
loope
xchg
test
mov
push
lea
or
call
mov
lods
dec
and
cmp
push
ficomp
or
js
dec
mov
mul
sub
mov
icebp
js
movs
test
dec
xchg
in
ins
test
jne
xchg
int
cmps
push
xor
cwde
enter
jb
js
retf
xchg
push
cwde
into
test
xor
push
cmp
cmps
and
and
sub
or
dec
sub
dec
mov
and
push
sbb
pop
mov
push
out
pusha
mov
cmps
xchg
inc
(bad)
cmp
sub
jns
mov
jb
push
jge
jo
es
cmp
xchg
push
out
jns
dec
cmp
sub
xchg
in
dec
lea
shl
xor
pop
cmp
popa
in
ss
add
pop
adc
xchg
pop
xchg
ins
leave
into
sub
loope
nop
push
sub
cmps
int
pop
shr
pop
shl
sub
scas
int
cld
ret
xchg
push
imul
fdiv
pop
mov
sbb
and
or
pop
jle
cmps
cmp
lea
ds
add
mov
addr16
dec
lds
outs
icebp
and
pop
punpcklwd
pop
mov
dec
cmc
dec
dec
pop
hlt
repz
nop
cli
imul
xor
add
adc
xchg
mov
test
jl
sub
adc
(bad)
fild
add
mov
in
call
and
jmp
(bad)
data16
or
outs
jmp
sbb
test
lods
dec
das
push
aam
clc
mov
ja
add
xor
cmp
aad
jl
aas
outs
out
ret
pop
cmp
fsubr
loope
mov
ja
cmc
cwde
fstp
nop
mov
jne
jmp
loop
loope
cwde
jae
cld
shl
jmp
or
shr
cmp
cmps
add
jne
fistp
push
jge
outs
mov
les
push
pop
and
or
lea
push
dec
pop
xchg
jmp
push
or
jge
dec
or
push
ror
and
add
xchg
fadd
imul
cmp
(bad)
int
inc
xchg
(bad)
jle
and
push
jb
mov
mov
jnp
mov
outs
clc
call
cwde
jb
aas
xchg
popa
push
add
ins
cdq
xchg
pop
and
cs
adc
test
push
sub
jne
or
mov
leave
cmp
push
movs
test
mov
jnp
scas
mov
lock
xchg
pop
push
sub
adc
xchg
mov
pushf
test
dec
or
cli
pop
mov
call
cmp
aaa
and
retf
sub
test
icebp
sub
jbe
xor
inc
xchg
stos
fstp
dec
mov
inc
inc
scas
js
into
cmc
adc
xor
iret
stc
test
xchg
mov
add
inc
xor
cmc
lahf
pop
gs
dec
push
pop
pop
and
stos
pop
out
push
mov
js
jbe
push
inc
mov
or
push
xor
sub
jnp
leave
mov
jns
push
or
(bad)
int3
push
ret
sbb
std
outs
cmc
rol
in
fsubr
and
push
shr
push
fidivr
and
call
cmp
sub
sbb
sti
sahf
mov
push
enter
cmp
into
hlt
sub
jecxz
addr16
out
gs
lea
hlt
arpl
inc
data16
loope
fisttp
xchg
fimul
cld
jne
pushf
add
cmp
inc
push
and
mov
retf
and
mov
aam
aad
jl
sbb
int3
push
jmp
and
popf
inc
xchg
push
pop
out
inc
aam
retf
lahf
repz
cmps
xlat
imul
sub
mov
or
pop
xchg
stos
repz
cmps
daa
adc
mov
xor
(bad)
icebp
sbb
loop
pop
fnsave
xchg
aam
cld
fidivr
xchg
bound
je
in
adc
jno
leave
mov
leave
mov
mov
sbb
(bad)
in
sub
xchg
sub
push
int
popf
pop
pop
and
std
xchg
loop
jns
and
push
mov
pop
movs
outs
out
jg
sub
mov
xchg
mov
dec
mov
pop
arpl
add
xor
mov
cmp
aad
in
xchg
sbb
jbe
fld
aam
ds
push
xchg
sub
push
shl
jbe
add
mov
jmp
lds
cmp
in
out
sub
cmps
fdivr
inc
xchg
das
pop
cmp
arpl
bound
fs
loopne
iret
pop
xlat
mov
cmp
into
shl
cmps
jg
inc
pusha
jns
and
scas
es
mov
test
enter
lods
rcl
jns
xchg
pop
out
das
movs
xor
sub
sub
icebp
test
jnp
xchg
cld
and
daa
mov
fwait
mov
xchg
push
jmp
pop
add
ins
pop
cmp
hlt
jp
add
adc
inc
pop
sub
rcl
hlt
jle
loope
dec
test
outs
adc
je
iret
cmp
retf
add
cmp
hlt
jo
sar
push
sar
push
and
in
ja
xchg
fmul
sbb
or
ds
jmp
dec
push
loope
packuswb
sub
popa
xchg
jne
or
(bad)
aam
sub
dec
out
or
push
xor
cmp
mov
inc
dec
jle
clc
(bad)
pop
js
daa
add
jae
sub
and
pop
js
(bad)
into
mov
aaa
adc
out
cmps
add
es
jecxz
popf
pusha
adc
fs
ins
sti
ret
add
add
test
xchg
sub
cmp
xchg
dec
pushf
in
mov
pop
imul
push
mov
xor
ins
vpmacsww
jns
pop
push
stos
es
cmp
xchg
outs
stos
jnp
int
dec
cmpxchg
das
call
or
mov
sar
pop
mov
cmp
push
addr16
sub
clc
mov
or
mov
xor
aam
mov
inc
clc
sbb
daa
adc
push
xor
mov
jae
cmps
sub
stos
sub
pop
sub
inc
in
xor
cmp
xchg
dec
gs
inc
inc
sbb
pop
outs
in
dec
mov
add
outs
shr
add
adc
adc
jbe
cld
bound
jg
cmp
retf
dec
je
and
push
sub
fisttp
dec
adc
imul
cmps
xor
jmp
or
mov
inc
dec
push
daa
or
mov
jmp
and
mov
adc
xchg
pushf
push
fstp
es
retf
test
mov
lock
std
add
pushf
mov
mov
adc
or
xchg
cli
or
call
xchg
cdq
jae
jmp
add
leave
cmps
push
or
mov
(bad)
cmp
imul
retf
inc
adc
repnz
push
add
shl
mov
loopne
fs
push
mov
sub
jnp
mov
add
cmp
xlat
jle
imul
jmp
test
sub
lods
leave
jns
push
lds
mov
fwait
test
jne
xchg
cmp
jmp
xor
jg
pusha
jge
call
fs
mov
pop
rcr
mov
ret
loope
push
int
shr
std
test
sbb
adc
pop
test
push
and
sub
fcomp
and
jp
push
pushf
rol
aad
repz
lods
fs
enter
push
and
xchg
scas
mov
test
add
dec
call
test
cmp
and
cld
es
mov
ret
lods
cmp
idiv
daa
adc
fs
push
dec
out
in
xchg
or
jmp
jmp
lods
mov
push
ins
sub
(bad)
dec
and
icebp
in
shl
jae
ret
fsub
sahf
call
mov
int3
leave
jbe
sahf
add
in
push
xchg
push
sub
cmps
movs
lds
iret
jmp
icebp
int3
daa
movs
push
cmp
rol
test
adc
push
sub
xchg
das
mov
sub
mov
fmul
retf
jns
lahf
xchg
fsubr
ret
push
popa
adc
mov
sar
arpl
out
adc
enter
xchg
test
aam
hlt
sub
cmc
push
in
or
push
iret
test
lea
sbb
in
(bad)
pop
jno
mov
pop
cdq
inc
outs
mov
int
cmc
pop
mov
sbb
sbb
xchg
je
call
arpl
retf
dec
mov
in
mov
movs
and
imul
push
push
sub
jne
stos
pop
das
add
retf
push
fisttp
or
(bad)
js
push
ds
xchg
imul
test
inc
sub
sub
push
pop
cmc
mov
jle
sub
in
fidiv
stos
xor
into
or
xchg
fmul
sbb
and
in
sbb
jo
jb
pop
mov
jb
cmc
pushf
add
shl
adc
mov
and
xor
mov
xor
jnp
addr16
(bad)
call
or
clc
dec
(bad)
int3
sti
fimul
stos
imul
pop
mov
jge
adc
js
inc
ds
clc
mov
push
inc
jns
in
pushf
(bad)
movzx
mov
clc
adc
push
cli
xor
out
test
lds
clc
mov
sbb
mov
and
sub
mov
(bad)
inc
adc
sub
push
icebp
(bad)
in
popf
xchg
jb
pop
push
push
psrld
cwde
mov
fwait
pusha
sbb
push
inc
adc
sub
mov
pop
jp
and
mov
jb
cmp
clc
sbb
push
pop
cmp
jmp
pop
xchg
bound
sub
jle
loope
lock
or
daa
push
sti
sub
pusha
adc
lds
xor
fld
dec
dec
call
int
mov
push
daa
rcl
push
cmp
imul
sbb
dec
jg
ins
adc
stos
sbb
pop
pop
in
ins
pop
test
mov
and
sbb
mov
div
lfs
jne
xchg
sbb
nop
mov
push
lock
pushf
or
pop
ror
and
fld
in
xchg
aam
cmp
push
(bad)
addr16
pop
sahf
jo
sub
add
cmp
ins
sbb
xchg
inc
push
sbb
mov
adc
(bad)
push
ds
sub
xor
pop
stc
gs
cmc
mov
inc
sub
out
loopne
adc
outs
inc
cmc
in
test
cli
push
and
jb
addr16
scas
push
fucom
sub
pop
repnz
xchg
dec
ins
xor
add
jmp
mov
and
xchg
leave
xor
sub
or
dec
sub
cmps
xchg
xor
push
or
sub
jg
push
jl
mov
inc
ror
sub
inc
cli
jg
or
xor
lds
daa
adc
in
fsubr
movs
ret
push
aaa
sbb
xchg
mov
je
or
cmc
sub
imul
je
jle
and
mov
ret
ds
lods
hlt
arpl
jne
out
sub
shl
dec
adc
ins
xchg
push
stos
jp
xrelease
rcr
out
and
cmp
not
cmp
stos
or
jmp
jl
jmp
pop
xchg
mov
cmp
xlat
call
inc
les
stc
xchg
call
inc
mov
popa
jmp
std
adc
mov
add
inc
mov
sub
mov
lds
test
inc
sbb
daa
(bad)
int
leave
jle
cmc
xchg
daa
or
jmp
(bad)
xor
add
cmp
sub
push
push
or
in
jmp
das
rol
jns
iret
or
dec
stos
iret
sbb
sub
sub
pop
push
ss
sbb
movs
lods
repnz
jmp
inc
push
fcmovbe
mov
ds
dec
inc
test
leave
test
xchg
cmp
adc
imul
push
push
cmp
sub
jle
mov
sub
pop
js
leave
mov
je
pop
adc
nop
jnp
into
jmp
into
jmp
jb
and
hlt
pop
jno
std
pusha
sbb
je
daa
sub
cmp
pop
sub
cmp
shl
cmp
nop
mov
and
sbb
inc
sar
cmp
call
lock
mov
sbb
(bad)
test
pop
pop
xor
movs
and
or
shr
cmp
push
sbb
lds
dec
cmp
mov
sbb
inc
xor
sbb
mov
pop
dec
or
push
and
jge
xchg
js
cmps
add
xchg
lock
pop
pop
gs
mov
cmp
jae
in
sbb
sbb
not
scas
adc
mov
jo
es
sbb
pop
aaa
mov
leave
(bad)
push
or
jne
add
mov
fldenv
bound
push
cmp
pop
push
aad
xor
(bad)
aad
(bad)
div
push
imul
push
not
mov
stc
fdiv
test
rol
fs
sub
push
add
jg
sbb
mov
lods
xchg
test
adc
outs
adc
je
ret
and
imul
nop
and
test
add
in
jmp
push
fcmovnb
sbb
int3
push
mov
jmp
sub
and
pop
jae
ret
retf
xor
out
cmp
inc
lods
jp
shr
sub
mov
out
data16
jbe
movs
dec
pop
jmp
jg
push
loop
push
pop
fcomip
pop
add
jne
ret
dec
inc
dec
loop
stos
mov
mov
and
adc
icebp
ins
loopne
xchg
dec
sub
shr
mov
xchg
call
jne
in
aad
psrld
dec
mov
ins
inc
dec
mov
jnp
repz
jno
(bad)
stc
xchg
xor
xchg
lahf
lds
out
cmp
jno
push
pop
mov
sbb
in
fldenv
sub
mov
and
sub
xchg
out
mov
dec
nop
(bad)
sti
inc
je
push
(bad)
xor
or
pop
mov
jp
test
mov
jl
shr
adc
mov
jmp
fsub
in
push
int
mov
push
ds
stos
sub
mov
sbb
sar
add
sbb
inc
xchg
data16
adc
adc
mov
sub
mov
psllw
pop
xchg
pop
lds
push
and
int
dec
lds
jbe
mov
xor
sbb
inc
or
inc
pop
sub
dec
dec
outs
adc
fiadd
cmp
arpl
xchg
cmc
stos
mov
leavew
test
sbb
into
mov
mov
xchg
or
mov
cmc
je
xchg
scas
adc
xchg
out
xor
outs
out
add
and
dec
pop
neg
icebp
mov
pop
xchg
in
mov
es
cmp
mov
fnsave
dec
jmp
add
outs
jg
xchg
push
scas
sbb
sbb
push
sub
sbb
aam
add
cmp
cmps
dec
inc
imul
sub
adc
rcl
les
cmc
pop
inc
xchg
fisubr
mov
std
push
adc
ret
push
lods
dec
enter
icebp
stc
test
ins
daa
or
push
inc
push
scas
cmc
je
cmp
push
pop
mov
les
xchg
int3
mov
adc
shl
sub
out
dec
popf
int3
xor
ss
dec
mov
(bad)
inc
aas
xor
neg
int
cs
dec
xchg
jo
pop
cmc
cmp
adc
and
in
jnp
wbinvd
ficom
cmp
jnp
ss
mov
aam
out
push
jno
stos
adc
test
sar
jp
and
cmp
cmp
sar
inc
fisttp
mov
mov
test
mov
scas
jmp
dec
push
or
aad
loope
stos
in
xor
pop
pop
mov
inc
leave
popf
add
xor
(bad)
jae
(bad)
fimul
scas
add
xchg
fcomp
vmovhps
and
push
pop
loope
loope
cmp
pushf
ins
outs
sbb
cmp
mov
cmc
push
jecxz
sahf
jge
dec
in
mov
(bad)
into
add
(bad)
in
push
test
push
mov
push
retf
popf
cmp
(bad)
ret
sub
push
xchg
je
gs
jne
dec
daa
repz
sbb
xchg
cmps
dec
fidiv
push
jae
pop
mov
outs
xchg
bnd
push
xchg
adc
jns
adc
pop
cmps
mov
(bad)
js
jnp
cmp
dec
pop
push
jge
(bad)
mov
mov
inc
jo
(bad)
aam
lahf
dec
jne
ins
adc
nop
and
imul
and
bound
xor
adc
sbb
jae
cmps
aad
test
test
push
test
cld
xor
jbe
inc
xor
xchg
mov
pop
stos
push
and
add
(bad)
xor
es
adc
fdiv
xchg
pop
cmp
pop
hlt
adc
sti
mov
jns
stc
sbb
dec
lock
push
mov
add
xchg
in
shl
gs
fs
add
mul
repnz
mov
out
sbb
sub
dec
mov
push
sbb
jmp
js
in
mov
stc
lods
stos
outs
js
ret
cdq
out
cmp
cdq
pop
imul
dec
jge
jecxz
test
cmp
pop
mov
jne
dec
test
dec
push
xchg
pop
mov
mov
aaa
xor
push
dec
push
cmp
mov
hlt
adc
clc
mov
mov
test
dec
and
scas
xchg
jnp
jns
out
aam
jo
test
push
and
mov
dec
fnstcw
xor
daa
sub
jmp
test
xlat
cmp
icebp
test
mov
pop
popf
jle
pause
test
inc
add
dec
leave
adc
je
test
xor
clc
jmp
(bad)
loop
xchg
retf
push
test
js
sub
ins
in
call
fidiv
sub
(bad)
int
sbb
addr16
fdiv
data16
repz
aam
call
stos
sbb
push
cmp
mov
pop
fld
stos
xchg
(bad)
mov
xchg
leave
neg
out
adc
cmc
(bad)
push
pop
ins
leave
cmps
dec
pop
rcl
fwait
test
jb
lock
mov
jne
mov
(bad)
mov
cmps
hlt
mov
arpl
retf
icebp
push
jp
ins
push
sti
xchg
xchg
jmp
les
jae
mov
cmp
adc
ja
sub
dec
push
and
fldcw
jg
(bad)
jo
fsub
(bad)
addr16
stos
(bad)
jp
es
or
in
pop
mov
sbb
mov
xor
mov
pop
fisubr
cs
ins
movs
nop
clc
xor
aam
xchg
jbe
ret
cmp
mov
jl
daa
cmc
lods
or
ds
je
and
xor
and
lods
jae
ja
add
mov
loope
les
dec
enter
inc
mov
out
and
xor
inc
mov
lock
inc
icebp
fs
js
jne
jo
(bad)
push
and
pop
xchg
leave
call
nop
mov
inc
sbb
sbb
int3
js
test
inc
(bad)
jbe
sub
out
jae
push
dec
(bad)
mov
pop
inc
mov
sub
test
imul
stos
sub
js
sar
mov
add
sbb
jecxz
stos
xor
push
pop
mov
imul
pushf
mov
xchg
dec
push
adc
iret
dec
loopne
jb
repz
setl
adc
das
mov
push
inc
adc
mov
push
pop
pop
push
daa
mov
jp
les
or
push
sar
(bad)
mov
dec
bound
dec
out
push
das
aas
(bad)
pop
and
jmp
push
shl
hlt
div
sub
xchg
push
sub
shr
push
push
adc
jge
or
sub
jmp
fsub
(bad)
sar
outs
jmp
shl
data16
mov
jmp
sbb
push
xchg
dec
repz
mov
sub
or
cmp
pop
test
sbb
pop
lea
out
pop
mov
iret
adc
pop
stos
shl
jnp
and
dec
dec
sar
jge
or
dec
mov
and
mov
imul
daa
and
sub
cld
jle
dec
js
add
lds
nop
cmp
jns
std
and
das
xor
xchg
movs
mov
fst
mov
adc
push
jbe
xchg
push
jae
stos
sbb
pop
pop
addr16
into
pop
sub
fsubrp
jae
in
dec
inc
lods
ins
push
xor
das
sub
test
xlat
mov
loopne
ds
dec
xchg
jmp
das
jb
dec
icebp
hlt
pusha
dec
out
jge
stc
frstor
lock
adc
xor
mov
adc
repz
fcom
jbe
xor
mov
jne
mov
pushf
jmp
push
pop
aad
loop
inc
pop
mov
dec
int3
cmp
(bad)
out
inc
arpl
and
and
fsub
xchg
xlat
sbb
xchg
movs
scas
dec
test
jmp
icebp
xchg
push
pop
outs
out
sbb
repz
cmp
mov
cs
call
popf
js
xor
mov
js
cdq
sar
mov
(bad)
sub
cmps
xor
jge
ds
jno
cmc
add
or
xchg
xor
stos
fist
ds
sub
test
jne
xchg
frstor
push
jbe
mov
into
shl
adc
mov
inc
push
in
jmp
push
call
and
je
inc
mov
mov
dec
sub
inc
fdiv
push
push
stc
jne
xchg
mov
gs
sub
repnz
xor
imul
mov
scas
data16
or
push
jg
mov
adc
cmp
mov
jns
pop
ins
mov
push
and
clc
fwait
stc
(bad)
and
(bad)
cmp
push
iret
lods
mov
cmc
mov
cmp
stc
add
push
xor
imul
bound
ja
add
cmp
push
sub
adc
sbb
mov
pop
sub
xchg
jns
ja
mov
in
(bad)
mov
cmp
aad
and
push
movs
jecxz
add
jne
mov
xor
mov
ins
xchg
and
sub
inc
adc
imul
mov
cdq
cmp
retf
loopne
jmp
xor
jp
mov
addr16
loop
xchg
mov
repnz
and
outs
sub
cmp
cmps
addr16
adc
scas
xchg
jo
rcr
dec
inc
(bad)
cmc
ss
jge
or
sub
pop
das
jmp
pop
push
xchg
je
xchg
nop
xchg
push
mov
mov
inc
dec
inc
mov
lea
xchg
jecxz
dec
xchg
ret
loope
xor
std
dec
out
xchg
dec
or
sbb
cmp
test
gs
push
sub
fwait
dec
and
cld
sahf
inc
jmp
sub
xor
hlt
lds
mov
adc
cmp
jo
xor
ror
rcl
mov
int
ins
vfrczps
jecxz
lahf
stos
es
scas
cmp
adc
or
xchg
mov
mov
fmul
cmp
pop
jae
gs
js
(bad)
adc
cmc
xchg
mov
and
nop
fstp
cmp
(bad)
push
mov
mov
push
inc
adc
jb
es
push
pop
inc
js
sahf
xor
push
imul
scas
jmp
scas
cmp
in
pop
adc
sti
xchg
adc
out
shl
xor
sbb
dec
jns
iret
popf
inc
jbe
mov
aaa
inc
ror
sti
das
sub
and
jp
ffreep
nop
dec
rcr
xchg
sbb
or
jno
inc
xchg
jnp
and
mov
jp
jge
jbe
out
in
sub
(bad)
or
jnp
mov
dec
scas
lahf
fcom
pop
fs
xchg
ret
pop
leave
cmc
adc
aas
adc
out
sbb
dec
push
pop
or
sub
mov
ret
xchg
repz
dec
inc
bound
lahf
int
push
sub
sub
push
into
push
test
lock
lods
je
dec
mov
fcomi
cld
mov
jns
xor
push
out
(bad)
push
out
xor
std
adc
addr16
mul
xchg
push
push
aad
xchg
mov
jp
xor
xlat
les
adc
xchg
and
xor
adc
xchg
xor
pusha
sub
not
cmp
adc
sub
cmp
cmp
cmp
in
xchg
not
in
pop
xor
ror
xchg
popa
push
out
dec
call
mov
imul
add
movs
add
cli
rcl
mov
push
je
cmp
loope
inc
clc
rcl
xor
inc
gs
ret
mov
ror
cmc
sbb
test
(bad)
push
repz
cmp
mov
xor
cmp
dec
sbb
mov
mov
(bad)
jg
retf
and
fsubr
mov
jmp
adc
clc
pusha
jbe
mov
lods
cs
mov
test
xchg
mov
call
dec
pop
sbb
jmp
popf
mov
aas
jmp
icebp
jp
fstp
push
cmp
jnp
int3
mov
add
cs
jbe
xor
test
mov
jecxz
push
out
lock
dec
xor
pushf
dec
int3
mov
cmp
xchg
xchg
jno
xchg
lea
cmp
cld
jb
push
pop
pop
cmc
or
cmp
je
or
ins
push
xchg
ret
lods
add
inc
das
cmp
std
cld
enter
pop
imul
inc
adc
push
cmc
sub
sub
retf
jmp
xchg
test
ds
fdiv
adc
enter
inc
jmp
scas
imul
sbb
add
and
aaa
stos
movs
push
cmp
jp
shl
push
or
retf
mov
mov
mov
dec
xchg
cld
push
mov
in
aas
sub
fcomp
in
sub
sbb
mov
xor
std
xchg
jbe
gs
mov
cmps
mov
add
loope
and
je
xchg
sub
dec
mov
lods
mov
adc
or
shr
dec
retf
retf
add
or
in
jnp
lods
xor
cli
fidivr
jo
jnp
fwait
dec
jl
nop
repz
pop
stos
pop
mov
push
xor
shl
arpl
add
sar
mov
and
or
mov
jne
cmps
add
adc
or
enter
jmp
inc
and
push
es
sbb
mov
ret
xchg
out
jne
(bad)
(bad)
in
xchg
js
mov
adc
sbb
movs
test
or
pusha
add
cmps
and
jp
loop
jnp
in
jae
adc
push
cmps
imul
sbb
or
jbe
mov
jb
jmp
mov
cli
or
xor
data16
push
cmc
xor
jo
jno
in
add
arpl
imul
fsub
pop
sbb
popa
mov
xor
sti
out
nop
xchg
retf
and
mov
idiv
adc
(bad)
dec
lock
sub
xchg
jae
scas
lods
popa
inc
repz
cld
push
aam
mov
jns
mov
xchg
pop
push
and
clc
lds
dec
add
aaa
imul
into
dec
mov
push
mov
push
nop
inc
sub
inc
adc
(bad)
aad
xlat
and
jbe
or
test
pop
stos
push
jns
mov
inc
or
pop
mov
mov
imul
dec
cmp
in
jno
jl
dec
ss
ins
xchg
inc
enter
arpl
jmp
or
cmp
inc
inc
mov
rol
cld
push
mov
rcl
fs
outs
xlat
retf
push
std
xchg
fimul
push
shl
jo
sub
nop
ss
addr16
sub
icebp
rcl
cld
js
ror
int3
pop
or
out
cs
push
mov
sub
adc
dec
lods
pop
xor
stos
pop
mov
sub
loopne
shl
shr
xor
dec
fcom
lea
pop
cli
cli
add
cmp
mov
push
daa
sub
or
pop
das
push
das
mov
out
or
mov
cli
aad
mov
xchg
adc
aas
jl
leave
add
xchg
mov
cmp
sbb
icebp
cmps
mov
xor
pop
xor
add
sub
push
mov
jle
or
retf
sbb
sub
add
idiv
mov
dec
pop
fild
lods
int3
xor
loope
xchg
inc
xchg
pusha
mov
in
add
outs
pop
push
jns
das
sbb
jno
xchg
jne
push
sub
xchg
pop
fisttp
jne
sar
jmp
sbb
push
sbb
cmps
int
fs
pop
leave
mov
mov
movs
adc
jg
mov
inc
out
sbb
push
pushf
fwait
add
les
and
sub
sub
xchg
test
imul
int3
sub
push
cmp
iret
jae
test
fmul
fistp
dec
mov
cmp
ins
rcr
push
jbe
repnz
les
pushf
popa
sub
sub
popf
call
(bad)
pop
and
(bad)
(bad)
fnsave
xchg
dec
int
mov
xor
sub
rol
lods
std
push
pushf
jne
ss
call
les
cmp
or
lea
xor
cmp
es
inc
or
add
jnp
adc
jae
in
xor
fdivr
add
fcom
cmp
inc
xchg
ja
mov
xor
aam
movs
push
cmp
xor
js
inc
scas
inc
fwait
pop
jne
div
cmps
int3
jmp
jae
sbb
sub
or
test
and
cmc
xchg
lahf
or
xchg
inc
add
fisubr
pop
cld
mov
(bad)
cld
in
add
sub
and
sbb
jae
xchg
test
cmp
mov
sub
xchg
mov
adc
and
repnz
pop
jae
xchg
mov
add
dec
out
push
pop
test
mov
fcom
xchg
and
xchg
pop
test
js
sub
mov
cmc
add
lods
out
mov
(bad)
and
and
xchg
dec
retf
adc
mov
fcomp
inc
or
xchg
cmc
and
mov
bound
jo
lea
jge
pusha
or
pop
mov
leave
fwait
js
mov
lock
jge
cs
jmp
shr
dec
imul
mov
in
mov
or
xchg
or
jmp
int
pop
mov
jne
add
dec
add
sbb
xlat
xor
outs
mov
pop
sub
xor
lods
loop
add
and
pop
sbb
(bad)
cmp
push
mov
data16
cld
gs
out
add
push
lds
pop
dec
jp
mov
in
sub
dec
xchg
xchg
add
add
dec
test
std
loopne
and
jns
cwde
pop
fadd
inc
into
pop
jae
xchg
push
aaa
jmp
or
add
outs
in
pop
clc
xchg
aad
jp
(bad)
cmps
push
mov
retf
jge
(bad)
jo
xchg
mov
cmps
outs
shr
push
sbb
test
cmps
ret
test
xchg
pop
bnd
lods
sbb
xor
test
cmp
and
push
xchg
jecxz
rol
pushf
add
loope
and
xchg
fdiv
push
mov
stc
jne
ins
lea
jle
mov
lock
leave
sahf
and
shl
push
out
mov
cs
xchg
ss
(bad)
sub
cmp
call
jg
ss
(bad)
cmp
mov
add
push
jle
loope
ins
add
test
xchg
aam
dec
mov
add
in
jne
loopne
lahf
or
xchg
xchg
aad
fild
adc
loope
sub
lahf
test
fst
jge
pop
mov
or
dec
mov
les
jmp
(bad)
cld
xchg
add
js
jle
aas
sub
mov
in
cmp
inc
jp
(bad)
push
jp
clc
es
inc
sub
shl
out
push
mov
and
xchg
loopne
imul
jge
push
ins
les
mov
idiv
push
xchg
das
mov
xchg
in
sub
xor
pop
ret
lods
or
outs
hlt
add
jp
add
fsubr
cmp
xor
xchg
dec
inc
mov
ins
xor
ins
std
into
inc
jle
loope
cmps
pop
movs
icebp
jl
test
jg
cmp
pop
or
xchg
inc
fucomi
mov
imul
icebp
sub
out
leave
xchg
ins
xchg
lahf
jno
shl
ins
cmp
out
jp
mov
ins
jg
jnp
out
mov
mov
hlt
xor
cmc
mov
mov
mov
clc
ins
bound
das
and
push
fwait
mov
jecxz
out
xor
dec
pop
cmc
pop
inc
mov
or
shr
in
mov
jbe
xchg
fimul
pop
call
test
cmc
jb
add
or
sub
adc
nop
outs
je
dec
xchg
jmp
and
adc
jae
jno
jns
jne
push
leave
je
cmp
aam
call
stos
mov
inc
rcr
ret
ss
das
cdq
xchg
jae
ror
aad
loop
dec
pop
(bad)
lock
sub
and
int3
xor
sub
and
mov
enter
push
xchg
xor
mov
mov
mov
xchg
pop
nop
add
jge
ret
jne
or
mov
fnstcw
jns
je
sub
ret
test
sub
mov
jp
in
and
push
std
scas
into
mov
or
xchg
sub
xor
mov
jo
add
xlat
push
and
xor
jle
mov
push
jae
mov
add
outs
fst
pop
mov
sub
cmc
push
test
lds
cmp
sbb
repz
movs
push
sbb
xor
stos
xchg
jbe
inc
sbb
out
sbb
adc
inc
sub
pusha
lea
std
sbb
adc
sub
or
lock
mov
sbb
and
cmp
daa
sub
shr
sbb
lock
sub
ja
fisub
add
jl
test
stos
pop
daa
sub
xor
xor
test
out
lds
das
add
in
rcl
inc
jnp
pop
shl
push
push
inc
mov
inc
mov
add
stos
leave
shr
pop
jns
ins
in
mov
dec
rcr
lahf
(bad)
push
and
mov
(bad)
pop
adc
jge
lahf
mov
dec
mov
mov
push
leave
xlat
mov
(bad)
jb
pop
dec
das
(bad)
xchg
mov
sbb
sbb
outs
ret
fstp
xor
ins
push
pop
sbb
gs
push
mov
add
xor
repz
and
daa
add
(bad)
pop
mov
icebp
inc
int3
xchg
call
xchg
outs
bound
jmp
and
(bad)
xchg
inc
xor
jg
sub
icebp
xor
test
push
leave
jp
int
xor
adc
mov
call
cmp
hlt
(bad)
xchg
sub
inc
pop
sub
mov
cmp
cdq
repz
mov
jb
inc
adc
test
sub
mov
les
retf
push
stos
movs
mov
fnsave
pop
movs
pop
add
loop
jbe
jle
or
enter
sbb
push
movs
mov
rcr
adc
push
lea
push
and
retf
and
adc
dec
cmp
push
lahf
mov
or
dec
in
inc
pop
xor
bnd
xchg
ror
push
cmp
mov
or
scas
jmp
shl
ds
push
test
fidiv
and
xchg
sbb
loopne
xchg
mov
xor
push
push
test
cmc
jno
inc
ss
jne
mov
aas
cmp
js
dec
or
mov
xchg
add
ja
pop
test
jl
mov
add
(bad)
call
lock
sbb
test
lea
test
stos
loopne
xchg
dec
clc
sub
or
pusha
mov
sbb
mov
(bad)
jmp
mov
xor
push
enter
stos
push
das
stc
xor
xchg
push
push
sub
jecxz
retf
pop
in
in
or
mov
sbb
or
imul
pminsw
push
and
in
push
dec
mov
(bad)
or
(bad)
adc
inc
sub
lods
stos
jns
add
out
outs
cmovns
jg
adc
(bad)
inc
stos
inc
xor
in
xchg
nop
(bad)
loope
cmps
push
pusha
sub
std
ret
adc
add
pop
push
pop
and
(bad)
clc
mov
push
ja
sbb
add
adc
jge
add
jle
jmp
push
xor
fcomp
push
jge
add
out
mov
cmp
mov
mov
jmp
inc
cld
fsubr
hlt
cs
adc
imul
dec
sub
and
mov
sahf
test
std
adc
lods
sahf
jno
push
jns
inc
(bad)
jnp
retf
stos
aad
sbb
loope
pop
mov
imul
inc
mov
add
push
loopne
ret
mov
gs
out
in
pop
mov
addr16
push
sbb
jmp
push
cmp
jecxz
ds
cmp
loope
sbb
inc
mov
mov
call
jmp
sub
xchg
cs
jns
ror
int3
and
pop
aad
fdiv
inc
iret
cmc
push
xor
mov
xchg
lds
(bad)
int
shr
mov
push
sti
jmp
aad
mov
adc
jg
das
leave
xchg
fcomp
xor
int3
jmp
mov
inc
pop
dec
jne
clc
jae
pop
mov
inc
push
xchg
dec
pusha
mov
jnp
cmovle
pop
dec
xchg
inc
sub
mov
sbb
test
xchg
dec
stc
shl
push
popa
popf
inc
in
je
mov
jne
cmp
pop
mov
cmp
jp
and
lea
push
xor
in
sub
xchg
and
daa
cmps
mov
and
xchg
std
mov
pop
jae
jbe
loopne
imul
in
ds
mov
repz
test
jl
sbb
jge
mov
pop
movs
dec
cmp
xchg
and
cli
xchg
xor
adc
xchg
cmps
aas
xlat
add
xor
das
fdiv
mov
stos
out
dec
push
xor
mov
mov
cmp
or
ja
xchg
fs
js
aas
lods
rol
sub
outs
cwde
cmp
push
fmul
aam
movs
mov
adc
imul
sbb
(bad)
bound
and
mov
loope
pop
adc
dec
fbld
xchg
(bad)
pop
ficomp
jmp
test
adc
sub
lock
xchg
pop
add
mov
jmp
pop
in
mov
repz
cs
outs
push
mov
sbb
cmp
pop
cmp
(bad)
ins
jp
rcr
mov
fbld
pop
sub
jae
pop
cdq
je
xor
mov
shl
jne
xchg
dec
(bad)
and
inc
and
push
or
xchg
je
pop
in
jp
push
mov
jp
push
mov
cli
and
dec
xor
test
and
or
jno
ja
sar
call
stc
cmp
ss
jne
sub
fnstsw
daa
pop
push
jo
fisub
cmc
fs
ins
mov
rcl
or
jle
cli
inc
mov
ret
(bad)
xchg
(bad)
and
rep
mov
adc
fs
in
les
mov
in
in
js
lock
dec
mov
stos
mov
xor
xchg
sbb
test
sbb
xor
jecxz
mov
mov
jo
test
fwait
sub
(bad)
in
imul
daa
in
shl
jmp
mov
xchg
cmp
jnp
cwde
fld
pop
push
add
adc
mov
movs
jae
pop
xchg
fwait
xchg
aad
cmp
xchg
icebp
dec
cli
out
movs
add
arpl
jp
stos
in
mov
nop
fucomp
iret
adc
push
push
mov
enter
xchg
push
shr
dec
push
jno
ret
mov
inc
and
fsub
jl
clc
jae
xchg
ror
retf
sub
jnp
stc
adc
mov
mov
sbb
jo
jne
fnsave
ret
pop
ficom
sbb
aas
jp
lds
imul
add
test
clc
xor
rcr
ins
xchg
jmp
fwait
pop
imul
inc
pushf
fsubp
sub
or
sub
pop
add
sub
test
dec
icebp
cmp
pushf
test
and
js
aaa
or
out
adc
in
loopne
div
pop
push
or
(bad)
out
std
and
and
clc
jle
js
inc
and
jp
mov
js
mov
sub
push
je
sub
inc
ret
mov
mov
inc
fdiv
dec
cmp
jo
sub
cmp
push
xchg
je
push
sub
movs
xchg
rol
jns
jg
mov
sahf
test
jo
leave
jns
cmp
(bad)
dec
pop
mov
retf
addr16
sbb
pop
ss
test
(bad)
mov
in
xor
sbb
jne
int3
mov
or
popa
mov
pop
movs
stos
jno
dec
adc
or
js
sub
mov
add
fdivr
(bad)
pop
jp
fsubr
jle
jmp
into
dec
pop
mov
daa
arpl
clc
icebp
sbb
dec
cmps
test
das
sti
pusha
sti
sar
pop
in
xor
pop
sti
xchg
jmp
pop
out
cmc
out
ss
xor
cmp
sbb
jo
add
dec
jmp
test
stc
xchg
and
mov
xchg
add
fnstcw
jge
adc
fsub
push
int
cmp
xchg
push
add
or
jmp
jne
adc
xchg
sbb
cs
ficom
je
mov
mov
loopne
(bad)
and
inc
pop
jae
dec
pop
sub
test
test
pushf
popf
add
lahf
repz
sub
(bad)
(bad)
stos
sar
and
adc
sbb
xor
aam
jne
not
dec
loope
jmp
in
xchg
push
mov
ret
mov
hlt
jns
(bad)
in
cmp
cmp
mov
pop
add
ror
mov
cmp
sub
adc
loopne
outs
in
pop
jl
xchg
mov
daa
cmp
aaa
out
shl
frstor
and
test
and
les
movs
in
jl
clc
test
and
and
enter
popa
sub
cld
ror
dec
shl
and
ja
mov
fidivr
add
jp
xchg
push
addr16
mov
enter
xchg
lahf
xor
clc
mov
adc
push
mov
inc
sahf
jle
adc
mov
xchg
sub
je
ins
and
mov
lds
sbb
adc
into
add
in
mov
pop
cmp
shl
xor
rcr
push
daa
jecxz
push
inc
daa
cdq
lods
push
fidiv
or
xchg
add
ja
mov
aas
pop
jmp
sbb
int
ret
out
add
cmp
in
xchg
mov
mov
push
fnsave
rcl
jne
or
js
test
xor
loopne
pop
xor
movs
xor
jne
jae
mov
add
fild
sub
(bad)
in
mov
cmp
iret
jmp
loop
sub
jbe
ja
mov
rcl
pop
sub
jmp
push
(bad)
sub
xchg
iret
test
(bad)
push
push
popa
int
cmp
pop
xchg
(bad)
es
in
add
cld
or
mov
pop
inc
clc
add
xchg
out
and
pop
(bad)
nop
jne
or
sbb
jge
ffree
in
daa
cmp
sbb
lods
movs
xor
sar
add
xchg
adc
push
call
pop
lea
mov
je
push
popf
inc
sbb
xchg
retf
pop
sbb
jmp
cmps
push
(bad)
repz
and
test
xor
and
xlat
jae
xor
and
pop
arpl
loopne
es
cmp
cld
aaa
lods
(bad)
leave
xchg
cmp
cmp
retf
inc
fld
call
repz
addr16
jne
pushf
sbb
pop
add
and
arpl
out
lds
push
and
dec
mov
mov
push
xchg
outs
add
inc
xchg
pushf
sub
mov
repnz
pop
cmp
jns
rol
cmp
icebp
in
outs
adc
movs
and
sub
and
cmc
cdq
or
push
push
mov
cmp
xchg
lock
sbb
loopne
dec
out
in
adc
add
jne
mov
fistp
out
daa
mov
jns
lds
cmp
fcmovnu
push
(bad)
xor
add
pop
es
js
jecxz
(bad)
rcl
jle
ficom
cmp
les
sbb
and
jae
ret
cli
sub
cmp
(bad)
jl
adc
pop
or
sub
sbb
adc
sub
adc
sub
(bad)
xchg
test
(bad)
mov
jmp
movhlps
cmp
or
and
jecxz
jne
dec
push
xchg
jnp
pop
mov
sub
fnstcw
hlt
xor
mov
inc
outs
jge
push
mov
sbb
jb
xchg
aas
jmp
dec
loope
mov
dec
pop
jb
xchg
xor
add
push
jns
popf
shr
xor
jns
jne
sub
test
mov
int3
into
jl
cmc
and
cmps
add
cld
adc
sbb
fst
pop
pop
dec
sub
push
xchg
sbb
fmul
mov
ins
jecxz
dec
jl
gs
and
scas
lods
inc
push
data16
int3
arpl
push
inc
outs
dec
pop
cmp
jp
out
dec
xchg
or
and
imul
js
dec
pop
dec
push
sub
jp
sub
cmps
ss
js
mov
cld
int
mov
ins
push
aam
pop
xor
cmps
jns
mov
ja
sub
fs
scas
sbb
les
push
in
push
out
stc
or
jg
pop
lods
push
mov
mov
nop
cmp
push
push
ss
stc
push
sub
gs
mov
dec
pop
movs
leave
sub
mov
lock
lock
js
mov
ret
into
in
mov
xor
xor
adc
xor
ins
jo
dec
jmp
pop
inc
ja
and
mov
cmc
es
pusha
push
retf
daa
outs
repz
aad
call
out
add
movs
mov
mov
xchg
ds
dec
mov
push
cmp
sub
adc
pushf
xchg
addr16
push
adc
cmps
pop
mov
add
and
and
mov
neg
mov
icebp
out
mov
stc
sub
and
sub
out
imul
push
or
dec
dec
sub
repz
ret
jp
xchg
xchg
jnp
dec
scas
adc
and
mov
das
lods
or
jo
cdq
fs
jo
mov
adc
gs
xchg
outs
scas
jmp
push
das
push
enter
jp
sbb
mov
mov
mov
and
int
iret
mov
dec
push
mov
int3
pop
dec
sti
push
push
sti
shl
std
sub
xchg
call
das
jle
mov
test
fnstsw
jns
xchg
(bad)
daa
jne
ret
dec
or
pop
xlat
cmps
aaa
cmp
xchg
and
mov
dec
adc
test
mov
mov
cs
das
cmp
cmp
sub
hlt
fst
jl
rcl
sub
xchg
(bad)
jl
pop
mov
shl
movs
push
mov
mov
xor
push
inc
jns
push
icebp
cwde
cmps
cmc
jmp
dec
stos
sub
fstp
xchg
sahf
push
jo
push
or
jae
(bad)
in
das
mov
jp
ja
nop
leave
enter
loopne
gs
cwde
jmp
xchg
pop
inc
cmp
je
vmwrite
(bad)
loop
inc
scas
leave
repnz
js
sbb
idiv
mov
nop
(bad)
mov
mov
and
adc
fdivr
push
mov
imul
rol
add
inc
xchg
mov
xchg
pop
adc
cld
adc
jmp
test
xor
stos
in
cmc
mov
sti
stos
xchg
dec
sbb
pop
push
jl
out
push
dec
gs
mov
je
pop
inc
fdivr
loopne
ins
sub
sbb
dec
pusha
es
fild
cmp
lock
cld
(bad)
and
or
mov
ror
jge
inc
xor
hlt
jno
jmp
push
movs
das
mov
jge
fxtract
iret
inc
and
lea
push
ins
adc
pop
div
xchg
ret
jecxz
sbb
mov
pop
rcl
mov
add
icebp
pop
rcr
xor
neg
push
outs
out
push
mov
movs
data16
fs
scas
xchg
or
sbb
cmp
ins
adc
aam
mov
sbb
cmp
and
mov
aad
cmp
adc
ror
add
(bad)
ret
hlt
xor
cdq
pusha
setp
jge
lods
xchg
sub
dec
stos
or
call
test
adc
jb
movs
add
cmps
xor
sar
push
push
enter
inc
jp
ins
out
cmp
xchg
dec
pop
popa
and
and
xchg
mov
pop
in
inc
xchg
mov
je
mov
xchg
push
push
aas
cmp
inc
dec
imul
lahf
adc
mov
pushf
retf
les
out
cli
jbe
sub
(bad)
cmc
jae
adc
ret
push
jnp
enter
cmp
push
lds
ficomp
mov
or
ds
fadd
int
and
push
cdq
fist
add
push
jnp
inc
out
xchg
aaa
pop
stc
repz
out
pop
std
stos
inc
jae
scas
pushf
retf
sbb
inc
cwde
sub
or
jae
call
add
je
push
(bad)
or
jmp
and
or
xchg
jp
jl
outs
idiv
leave
retf
es
pop
mov
xchg
adc
mov
xchg
inc
sub
cmc
fiadd
cmp
add
dec
sbb
rcl
mov
es
jl
hlt
test
sar
ja
dec
xchg
adc
cmp
int3
sbb
fbld
repnz
jnp
sahf
xchg
inc
sar
sub
inc
mov
xchg
mov
dec
xchg
sbb
outs
fisub
(bad)
call
aaa
mov
cld
fwait
in
imul
sub
mov
stos
cmp
and
pushf
enter
call
adc
aas
jl
xchg
mov
test
aad
mov
dec
add
xchg
and
sti
push
and
mov
popa
mov
push
(bad)
sbb
xchg
aas
dec
int3
pusha
jae
ins
cmp
(bad)
cmp
jecxz
rcr
push
gs
sub
sub
mov
(bad)
(bad)
xor
stos
mov
into
aam
(bad)
sbb
hlt
mov
arpl
mov
and
in
sub
in
add
mov
jo
ins
dec
push
and
mov
xor
mov
add
mov
dec
sbb
push
sub
aaa
mov
push
adc
pop
pop
sar
adc
add
inc
jne
jp
dec
(bad)
(bad)
sub
pushf
neg
div
xchg
xor
xchg
aaa
pop
mov
and
in
fsubr
mul
xchg
ins
xor
int
js
xchg
inc
xchg
and
ret
mov
push
mov
push
push
aad
(bad)
hlt
adc
(bad)
or
push
push
xchg
fwait
jmp
mov
or
push
and
xchg
push
fs
ds
cmps
nop
ret
sbb
(bad)
mov
pop
pop
jo
xor
mov
es
out
loopne
pop
mov
pop
jns
(bad)
jo
push
add
mov
adc
dec
and
sub
pop
loope
imul
jbe
inc
imul
sub
hlt
mov
pop
push
xchg
popf
push
mov
repz
mov
dec
cs
rol
pop
jp
retf
test
clc
mov
push
test
inc
xor
movs
adc
dec
popa
stc
cli
pusha
call
inc
mov
iret
out
retf
aad
jl
and
fsubr
in
sub
inc
jno
adc
jg
dec
je
sub
les
rcr
pop
pop
mov
sub
xchg
cmps
iret
std
adc
push
cmp
addr16
inc
push
push
into
or
fs
xor
jns
push
dec
aam
fdivr
cli
adc
push
repnz
dec
or
add
mov
lods
js
xchg
mov
stc
push
fs
cmp
adc
mov
xchg
and
jnp
adc
push
sub
ja
dec
cli
call
pusha
xor
sub
push
test
mov
sbb
and
imul
js
mov
jns
or
xor
cmp
imul
push
xchg
push
imul
popf
inc
pushf
sbb
mov
pop
imul
xchg
repnz
jl
iret
mov
jae
push
jo
add
imul
fwait
jbe
mov
cmc
leave
outs
js
mov
movs
ins
ret
mov
dec
ja
aam
fwait
mov
sbb
add
adc
sub
adc
adc
cmc
aaa
pop
leave
cmp
cli
and
dec
rcr
dec
jp
mov
adc
mov
es
retf
lods
jp
test
out
jae
sub
lahf
adc
cmp
lock
mov
iret
and
xor
inc
scas
pop
sub
ss
arpl
xchg
adc
xchg
push
out
lahf
loop
and
mov
popf
dec
jmp
retf
rol
pop
inc
movs
and
adc
xchg
cmp
jb
push
jge
ret
dec
std
push
ficomp
ficom
imul
jg
lock
shr
frstor
sbb
ret
dec
mov
jle
push
push
xchg
repnz
(bad)
jnp
jle
mov
rcr
(bad)
dec
cmp
test
popf
mov
repz
fnsave
in
xor
sub
ss
data16
cmc
std
ins
push
ffreep
aas
mov
pop
sub
or
sbb
cs
repz
lods
xor
je
pop
cs
fcomp
push
adc
push
int
jae
push
cmps
popf
in
push
popa
ror
ins
cmc
mov
cmp
mov
movsx
clc
dec
push
mov
sub
inc
push
scas
js
inc
lods
push
jns
in
cmps
mov
pusha
inc
inc
push
rol
xchg
call
adc
xchg
(bad)
pop
jp
sbb
hlt
movs
shl
ds
stos
(bad)
out
ins
push
out
sbb
mov
add
push
inc
retf
cmp
jno
aam
jo
jp
pop
adc
jo
or
sub
fiadd
xchg
loope
jmp
movs
retf
push
nop
adc
pusha
mov
repz
xchg
je
jecxz
mov
dec
aas
lahf
mov
lahf
cmps
and
test
adc
push
fstp
and
sub
dec
addr16
mov
adc
aad
scas
ret
out
mov
pop
es
shr
inc
xrelease
pop
lods
rcr
sub
jne
xchg
sbb
stos
mov
push
loopne
jmp
mov
clc
pop
iret
or
stos
mov
cmp
daa
xchg
pop
test
add
mov
stos
pop
(bad)
cmp
adc
ret
bound
xchg
ficomp
sbb
mov
and
push
and
stos
and
jo
aad
add
or
stc
and
mov
clc
out
add
jl
adc
cs
fldenv
ret
stos
cmc
ret
or
mov
inc
adc
xor
dec
into
stos
mov
hlt
add
jae
cmp
daa
mov
retf
shl
shr
and
iret
mov
adc
arpl
test
cmp
dec
jmp
add
jl
mov
icebp
cs
stos
and
mov
fsubr
shl
dec
pop
pop
jmp
movs
jge
and
sbb
call
dec
repz
push
pop
or
jmp
xchg
or
mov
enter
xchg
jle
jmp
in
or
dec
mov
mov
mov
push
mov
mov
test
or
inc
jge
movs
sub
fwait
jge
sub
jne
daa
mov
je
cmc
cmp
mov
addr16
dec
nop
jne
les
adc
lahf
pop
dec
inc
mov
add
jge
xchg
xor
jp
inc
popf
dec
mov
push
cmps
or
mov
mov
cmp
retf
adc
and
aam
pop
and
push
push
call
aas
cld
adc
pop
jmp
xchg
idiv
push
hlt
push
xchg
rol
out
adc
lahf
mov
xchg
lea
shr
xor
mov
stos
and
cmp
jmp
cmp
pop
and
aad
js
aas
and
js
add
stos
sub
(bad)
mov
or
jb
out
push
or
rcr
test
jge
sub
ror
in
mov
leave
jge
sbb
mov
das
or
mov
aas
ja
fsubr
sub
push
jmp
cmp
rcr
sbb
jne
mov
cmp
test
mov
lods
cs
mov
mov
dec
push
xchg
lock
jmp
js
mov
(bad)
xor
or
xchg
pop
outs
popf
adc
mov
jmp
arpl
mov
jl
push
cmp
jmp
mov
mov
out
sbb
mov
dec
xor
jns
fistp
jg
(bad)
cmp
mov
dec
mov
ss
call
je
jle
mov
push
xor
cmp
xchg
mov
cmp
popa
pop
xchg
loop
pusha
pop
and
and
cmp
jno
fisubr
cdq
fisub
sub
pop
mov
push
adc
mov
in
sub
xchg
in
mov
loope
mov
in
retf
mov
psllw
test
cmp
hlt
js
test
push
add
in
sbb
dec
mov
jmp
in
(bad)
cmp
aad
or
mov
in
mov
mov
sub
shl
pop
and
in
retf
pop
pop
xchg
xor
mov
push
inc
sub
xor
pop
int3
xchg
jnp
rol
xor
jge
mov
push
jo
dec
popf
cmp
nop
fbld
pop
fs
movs
ds
adc
push
aas
int3
push
std
and
data16
fisttp
mov
(bad)
in
out
lods
adc
daa
sbb
mov
jae
js
or
and
add
xchg
addr16
xor
mov
jmp
mov
push
pop
xlat
mov
and
out
sub
pop
add
mov
mov
rcl
jnp
scas
aas
xchg
les
mov
xchg
adc
in
sar
call
loope
adc
cmc
pop
xor
mov
(bad)
push
jb
iret
jmp
xchg
cmp
inc
cs
shl
leave
in
mov
push
cs
sub
in
mov
popa
jl
icebp
cli
and
aaa
sahf
in
xor
dec
stc
cmp
xor
xchg
inc
jo
outs
mov
dec
ins
jmp
add
xchg
jno
add
in
inc
fldenv
sub
xchg
repz
lea
mov
pusha
mov
and
push
sub
mov
jne
sahf
cmc
ja
sub
mov
stos
jb
cmp
enter
outs
gs
or
cmp
cmp
fidiv
leave
aad
hlt
ja
rol
ret
ret
popf
and
stc
jmp
add
xor
cwde
test
test
je
add
loope
dec
jnp
mov
dec
push
aas
call
sbb
xchg
pusha
jae
jbe
xchg
push
cmp
daa
and
jns
out
mov
mov
or
add
sub
das
stos
and
and
fdiv
ds
xchg
ret
sub
inc
in
sbb
push
cmp
pushf
inc
mov
out
fiadd
out
sub
or
mov
sbb
add
arpl
cwde
mov
add
add
ins
div
cmc
out
cdq
jns
jae
movs
inc
dec
pop
xchg
retf
jmp
test
xchg
or
sti
ds
fnstcw
jge
xchg
loop
sbb
test
mov
adc
outs
pop
sti
call
xchg
xor
or
and
push
jbe
outs
not
xchg
hlt
(bad)
enter
xchg
clc
or
push
je
adc
jg
sar
inc
shl
mov
and
and
not
fidivr
jnp
push
push
ss
xor
push
cmp
jmp
xchg
dec
inc
pop
cmps
idiv
movs
mov
xor
(bad)
ds
xchg
xchg
jns
je
mov
iret
movs
sbb
out
mov
jns
in
test
fdivr
cmp
les
jno
fcom
sbb
jo
xchg
cld
fnstenv
jmp
xor
or
mov
mov
cwde
pop
call
push
adc
push
pop
jp
xchg
or
cld
jne
and
sahf
cs
test
js
xor
sbb
ret
add
and
dec
stc
not
int
cwde
lea
div
pop
(bad)
mov
sti
mov
jge
jmp
in
xor
or
pop
mov
daa
leave
in
xor
or
jp
bound
in
fbstp
ret
adc
xchg
rcl
pop
jae
jg
or
xor
(bad)
std
rcr
xchg
imul
cli
out
mov
fnstsw
les
std
(bad)
jmp
add
and
mov
pop
loopne
xchg
lea
int
out
repz
push
jo
inc
lds
sub
sub
cld
(bad)
adc
xor
mov
into
call
jne
xchg
mov
loopne
push
inc
cmp
mov
repz
pop
out
pop
mov
add
repnz
movs
cmc
add
ins
(bad)
movs
and
imul
cmp
aas
lock
mov
xchg
mov
xchg
out
push
clc
fsub
sub
jge
xchg
cwde
rol
imul
out
sub
mov
push
loopne
sahf
push
mov
sar
xchg
mov
dec
add
ss
or
hlt
sub
cmp
xor
inc
sub
push
ret
sbb
adc
in
outs
iret
mov
js
dec
add
fdivr
xchg
and
xor
dec
lds
leave
jae
mov
je
into
in
fild
cmp
or
mov
cmc
push
pop
fimul
adc
sbb
adc
mov
cmp
sbb
and
xchg
(bad)
push
pop
es
sbb
in
popa
push
jmp
movs
shl
pop
push
mov
jl
mov
mov
ds
xchg
ja
fimul
inc
cmc
add
jmp
dec
scas
in
jp
lds
lods
shr
cmp
mov
push
bound
std
retf
arpl
mov
aam
dec
shr
fild
out
fstp
(bad)
sub
mov
mov
push
ret
xchg
mov
hlt
mov
mov
arpl
or
cmc
(bad)
hlt
mov
and
inc
lahf
iret
mov
sbb
call
ins
loopne
adc
xchg
mov
cmp
mov
lahf
cmc
add
cwde
inc
jl
adc
sub
sub
push
fdivrp
or
mov
add
iret
pop
sub
int3
pop
cwde
das
pop
ret
bound
fcomp
mov
fmul
dec
jbe
in
int
cld
sahf
repnz
int3
dec
and
cmp
gs
es
dec
push
xchg
(bad)
or
or
cs
cmp
addr16
icebp
jae
pushf
dec
xor
daa
movs
cmc
mov
test
lods
xor
xchg
jmp
pop
adc
jmp
cwde
mov
dec
call
aam
fidiv
mov
test
stos
mov
out
cmp
jmp
gs
inc
movs
pop
add
not
pop
jbe
imul
push
inc
movs
clc
stc
dec
fistp
cmps
loope
in
and
sbb
aad
mov
xor
jp
(bad)
lock
lods
jne
movs
cmp
(bad)
stos
push
ret
jnp
or
push
cmps
sbb
(bad)
lock
mov
test
sub
(bad)
mov
jmp
das
aad
or
adc
(bad)
retf
ret
fcomp
sbb
add
pop
push
stos
in
dec
jo
jmp
pop
out
mov
inc
sbb
push
jge
cmps
adc
lods
jg
inc
xchg
popa
xor
in
clc
push
les
push
pop
inc
sbb
dec
adc
outs
mov
dec
cmp
in
xchg
jo
push
(bad)
sti
data16
ret
jmp
test
adc
retf
push
ins
xor
mov
xor
jns
test
(bad)
mov
rcr
mov
fisub
fst
lods
jns
in
ins
xchg
dec
pop
push
mov
stos
dec
inc
mov
and
mov
mov
imul
aaa
sbb
adc
cmps
cmp
mov
pop
adc
ror
cmp
cmp
clc
int
cmps
dec
loopne
aad
jmp
sbb
xor
ds
in
add
mov
pop
rol
adc
dec
es
cli
xchg
push
mov
cmps
sub
enter
lahf
mul
fdivr
push
jne
cli
xchg
std
mov
test
lods
ret
xor
or
inc
int3
add
cs
jmp
mov
test
clc
mov
and
pop
xor
xchg
arpl
jle
fnstcw
dec
pop
xchg
or
in
mov
or
dec
fs
add
or
inc
js
aam
xchg
ret
into
fsub
dec
ja
popa
fst
xor
xchg
xchg
out
fst
cld
cmps
xchg
out
fwait
xor
cmp
movs
out
xchg
imul
adc
(bad)
push
jns
cmc
sub
cmc
mov
jo
out
xchg
in
shl
es
mov
sub
(bad)
fsqrt
stos
pop
js
std
iret
fwait
ds
data16
jp
xchg
fnstenv
add
popa
scas
bound
pop
sub
xchg
xchg
stos
(bad)
fisttp
in
pop
jge
mov
jge
jne
and
xchg
inc
push
pop
adc
retf
sbb
xchg
xor
jle
pop
xchg
push
and
gs
mul
sub
jecxz
leave
arpl
int3
pop
xchg
inc
test
rcl
fdivr
sahf
ja
retf
sub
and
cwde
(bad)
and
xchg
push
loope
daa
sub
push
(bad)
cmp
pop
stc
xor
mov
std
repz
int
push
js
rol
int
xchg
frstor
into
loopne
xchg
lods
imul
add
loopne
jnp
mov
test
outs
lea
mov
xchg
scas
(bad)
cld
xor
test
cmc
call
mov
lea
(bad)
adc
xor
hlt
arpl
fs
daa
push
cmps
mov
and
pop
adc
ins
std
scas
inc
loopne
lock
sub
mov
mov
pusha
(bad)
out
dec
mul
xor
stos
rcr
ins
cmps
xchg
cdq
xor
daa
call
adc
iret
and
or
cli
inc
out
aaa
repz
cwde
xor
jge
add
hlt
pop
aam
push
pop
or
jbe
sahf
mov
movs
adc
cmc
icebp
push
movs
mov
adc
xlat
lock
xchg
cmp
dec
pop
mov
add
shl
jge
xchg
out
jno
nop
cwde
ds
dec
sbb
repz
enter
aad
in
sub
xchg
mov
jae
jmp
xlat
jnp
inc
outs
xchg
out
cmp
and
or
neg
adc
outs
push
ds
dec
cs
lods
ror
sub
hlt
push
es
enter
movs
sbb
xchg
xor
(bad)
adc
test
xor
mov
push
ds
sbb
ficomp
mov
cmp
jmp
jns
popf
aad
pop
clc
cmp
push
test
xlat
test
(bad)
sti
jno
adc
push
mov
jge
cmps
scas
std
mov
dec
adc
and
pusha
xor
push
pop
mov
mov
pop
cld
jmp
sbb
cmp
pop
js
sbb
rcl
or
xchg
js
aad
mov
mov
pop
push
jp
cmc
je
sti
lods
add
outs
pop
popf
dec
nop
xor
cmp
dec
inc
iret
mov
jno
ret
xchg
sub
mov
fld
lods
lahf
xor
and
pop
addr16
mov
adc
repnz
cmp
adc
repnz
and
call
sbb
dec
inc
ror
inc
sub
loope
jmp
(bad)
jl
inc
pop
mov
xor
hlt
(bad)
je
mov
lods
add
(bad)
shr
xor
xchg
mov
dec
sbb
xchg
mov
mov
aaa
scas
xor
out
jae
sub
mov
sub
push
lods
ja
adc
sub
cmp
popf
hlt
sub
cmps
push
lods
js
jb
push
or
pop
jg
dec
or
and
and
clc
fst
xchg
fs
jmp
sub
dec
ret
cmc
hlt
inc
dec
and
call
daa
je
push
bound
pushf
or
jno
imul
xor
xor
dec
cli
xchg
and
mov
ds
daa
sbb
les
pop
cmp
sub
test
stc
fidivr
outs
jmp
call
push
std
jns
cli
ins
pop
fwait
mov
and
enter
in
stos
xchg
jbe
out
fld
xchg
jno
mov
mov
push
cmp
jge
add
jecxz
pusha
das
push
mov
pushf
fcomp
ss
cmc
cdq
adc
das
mov
je
sub
nop
pop
adc
data16
int3
and
sbb
(bad)
adc
xor
dec
jno
push
int3
jle
in
imul
sbb
adc
sub
in
mov
xchg
mov
fcomp
rol
not
sbb
jae
adc
movs
lock
xor
in
add
mov
out
xchg
mov
xchg
mov
jbe
loopne
js
adc
loopne
xchg
inc
(bad)
or
outs
fdiv
or
mov
jae
daa
cmc
add
je
fdiv
jns
les
cmp
test
adc
and
sbb
xor
sbb
inc
cmp
in
jmp
sahf
sbb
das
xlat
je
frstor
and
test
gs
stos
inc
std
popf
jg
inc
dec
sbb
in
(bad)
lea
xchg
data16
fisttp
push
test
jae
not
cmps
sub
inc
jmp
or
dec
mov
xor
mov
aas
or
cli
daa
xchg
frstor
mov
sub
sub
shl
jae
pop
in
mov
int
jmp
mov
jg
retf
xchg
(bad)
mov
outs
out
pusha
imul
jo
push
inc
fs
cdq
repnz
(bad)
scas
lock
hlt
push
xor
iret
add
adc
loopne
lahf
xchg
test
leave
scas
pop
aad
sbb
loop
je
out
scas
cmc
jo
sbb
xchg
mov
(bad)
outs
sahf
jae
test
std
dec
and
loop
sub
adc
popf
xchg
inc
sub
pop
xchg
jbe
retf
mov
sub
adc
jge
mov
js
add
sub
and
jae
js
pop
cmp
ret
sub
int3
fist
push
std
test
repz
sbb
pop
jmp
pop
dec
jne
dec
xchg
sub
int
push
es
sti
ja
dec
mov
mov
push
aam
out
lea
mov
inc
pop
cld
or
xor
movs
pop
adc
(bad)
mov
xchg
dec
hlt
js
xchg
cdq
xor
jecxz
jae
or
pop
and
mov
adc
dec
inc
lock
cmp
test
cmp
cld
xlat
icebp
loope
pusha
test
sub
mov
addr16
cdq
or
adc
adc
iret
cmp
loopne
test
push
xor
cmc
adc
sahf
jae
jbe
pop
std
and
mov
adc
add
div
fsub
inc
fstp
jge
(bad)
rcl
and
mov
sar
sahf
xor
int
mov
cmp
push
int
fwait
test
mov
ret
xor
repz
mov
cmp
(bad)
jl
daa
jmp
dec
aad
adc
push
ins
xchg
pop
fwait
daa
or
push
retf
in
outs
sub
fpatan
cli
sbb
add
sub
jecxz
mov
add
push
cmp
cld
jp
add
push
dec
inc
push
jp
inc
adc
lahf
pop
sub
movs
daa
mov
out
and
into
pop
dec
pop
push
sbb
mov
ins
es
cmc
(bad)
pop
push
dec
jg
mov
or
push
dec
idiv
cs
inc
xor
rol
popa
test
or
add
and
les
mov
and
cmp
loopne
mov
rcl
fsub
sbb
add
out
in
sti
dec
xor
test
mov
ins
(bad)
pop
and
jp
lds
lods
xchg
inc
mov
xor
das
cmp
dec
jne
mov
popw
push
lods
popa
xchg
jo
(bad)
sbb
mov
adc
iret
mov
std
cmp
sbb
fistp
scas
xchg
mov
outs
adc
add
(bad)
fsubr
daa
inc
xchg
inc
jge
(bad)
imul
jo
pop
cmp
sub
and
jmp
sub
mov
push
iret
test
or
out
push
test
pop
imul
or
ds
es
inc
mov
cmc
xchg
ret
in
add
dec
jmp
sbb
dec
cmc
ja
xchg
push
leave
sub
mov
sub
mov
jnp
mov
sub
scas
call
popa
(bad)
outs
test
stos
xor
adc
mov
xor
and
scas
ret
mov
cmp
addr16
movs
leave
mov
adc
in
push
xchg
mov
mov
cmp
pusha
xchg
jle
jmp
(bad)
mov
fbld
jl
mov
push
sub
scas
call
lods
repnz
(bad)
jne
pop
mov
jbe
mov
popa
sbb
lock
mov
mov
push
cdq
lahf
xchg
(bad)
dec
sbb
xchg
mov
jne
jo
pusha
mov
(bad)
cli
cld
iret
cs
inc
pop
loop
clc
test
xchg
add
enter
jbe
jno
dec
inc
jmp
std
les
aam
sub
xchg
or
shl
cmp
jge
ror
imul
cmc
stos
xchg
ins
pop
in
into
fs
and
add
nop
xchg
sbb
es
mov
jbe
dec
js
(bad)
int3
in
push
push
cmp
and
adc
int3
jmp
xor
js
or
mov
push
sub
push
aas
or
nop
jecxz
jbe
aam
mov
add
push
pop
jnp
pop
mov
mov
aad
dec
jbe
pop
popa
sbb
movs
out
les
push
pop
leave
inc
in
fwait
iret
es
loop
and
(bad)
mul
jle
jnp
sbb
xchg
adc
dec
cs
mov
mov
xchg
hlt
adc
and
adc
sbb
out
pop
je
stc
gs
cmp
jge
adc
cmp
or
jmp
ins
jne
xchg
mov
mov
pop
sub
loopne
jne
test
adc
fdivr
hlt
popa
sbb
jb
cld
jp
pop
add
dec
xor
cld
mov
shl
popf
xchg
add
inc
rcr
xchg
or
push
es
jmp
cmps
mov
mov
add
rcl
ficom
hlt
addr16
or
cli
mov
jbe
mov
xchg
scas
xor
or
jp
(bad)
ja
dec
xchg
xor
stos
add
push
rol
pop
mov
or
aad
inc
xchg
add
rcl
test
inc
lds
push
aam
mov
loope
ret
ins
or
sbb
out
outs
repz
mov
into
(bad)
mov
ins
mov
jns
mov
push
pop
pop
rol
push
hlt
arpl
mov
xor
bound
fild
pop
cmc
mov
sbb
aaa
stc
push
dec
mov
and
push
add
aad
in
xchg
dec
cld
sub
jns
test
dec
xchg
adc
aas
mov
nop
shr
sub
sbb
xor
add
rol
or
jbe
mov
fs
mov
jmp
rol
cld
inc
pop
mov
cmp
shl
ja
push
(bad)
cmovnp
vlddqu
movs
mov
xchg
dec
mov
mov
mov
das
adc
push
rol
retf
das
dec
sub
pop
and
js
xchg
push
jl
mov
inc
fidivr
enter
jmp
icebp
sub
lods
hlt
dec
cs
int
ds
pop
pop
(bad)
fdivr
push
xor
imul
xchg
sahf
push
cld
inc
adc
jg
shr
dec
sbb
sub
mov
lds
jne
retf
add
cmp
les
aad
push
mov
sbb
(bad)
pusha
mov
push
pop
ins
dec
push
ds
xchg
inc
dec
sub
pop
ret
mov
dec
cmp
add
sub
xchg
iret
sub
and
or
jnp
mov
add
stos
push
loopne
outs
push
mov
hlt
sub
lods
push
jmp
mov
adc
dec
mov
push
(bad)
loopne
(bad)
in
pop
in
and
dec
pop
sub
xor
jns
jg
pop
jbe
fist
sub
push
push
movs
in
mov
and
and
mov
jno
aam
and
sahf
pusha
xchg
(bad)
das
mov
sub
xor
nop
dec
retf
out
pop
xchg
aam
jne
dec
les
cmc
and
inc
inc
jae
or
cmp
dec
and
pop
adc
sbb
push
xchg
jmp
xor
call
repz
adc
mov
rol
mov
fild
xchg
push
fidivr
out
or
jb
or
dec
xchg
cmp
adc
mov
pop
arpl
stos
dec
pop
add
push
mov
adc
jp
inc
adc
stos
call
in
aaa
(bad)
jmp
mov
pop
retf
cwde
jne
push
pop
sub
xchg
(bad)
push
scas
sub
nop
aaa
mov
data16
cld
pop
jo
xlat
inc
gs
outs
xchg
or
scas
and
mov
cmp
ret
rep
call
mov
retw
dec
and
fld
jo
jns
jns
sbb
dec
xchg
or
js
jno
dec
cmp
imul
lahf
cld
mov
xchg
or
sbb
aas
push
(bad)
jmp
fstp
vmovd
cmp
mov
hlt
addr16
imul
stc
cs
cmc
test
xchg
ss
adc
xlat
xchg
mov
mov
js
add
clc
and
cmp
enter
xchg
mov
(bad)
leave
shr
and
push
mov
push
fdivp
pushf
and
shl
cmps
xchg
pop
mov
out
push
cmp
mov
inc
jmp
add
push
push
xor
retf
mov
xchg
cmp
int
cmp
cwde
repnz
push
scas
push
cld
sbb
adc
cmp
and
pop
mov
mov
sbb
ret
sbb
dec
stos
sub
push
stc
push
or
jl
mov
fld
dec
xchg
daa
sbb
or
push
fs
mov
jne
adc
sub
cmp
mov
push
push
ror
push
(bad)
push
sbb
xchg
or
idiv
adc
in
push
fistp
imul
test
inc
test
mov
aas
cmp
in
lods
js
xchg
xor
jp
ror
cmp
lahf
or
jb
xor
ret
and
cmp
clc
cs
test
into
lock
mov
mov
xor
push
xchg
mov
xor
cmp
push
xlat
cmps
xor
fiadd
ret
adc
cwde
mov
lahf
jge
jae
xchg
dec
mov
icebp
pop
out
push
inc
jae
jns
(bad)
xlat
xchg
jle
addr16
mov
cdq
pushf
icebp
mov
test
push
or
mov
(bad)
cmp
xchg
mov
outs
fidiv
je
push
mov
bound
and
fldcw
mov
retf
cmp
adc
fs
leave
or
pop
fprem1
inc
cmp
mov
cmp
outs
fimul
fs
repz
sub
inc
adc
sub
sub
in
and
cli
mov
jne
jae
mov
mov
mov
push
push
fldenv
mov
and
popf
test
or
push
icebp
jp
rcl
push
sti
add
cwde
pop
loope
gs
inc
cmp
fs
loope
out
sub
(bad)
adc
mov
xor
jne
stos
dec
stos
popf
jbe
jmp
mov
sbb
iret
mov
cdq
jg
mov
jp
es
jns
int
iret
fsubr
push
xchg
cmp
pusha
ds
movs
out
stc
push
cli
xchg
or
sbb
mov
and
add
arpl
adc
(bad)
and
push
add
bnd
jae
mov
shl
cmp
pusha
xchg
push
pop
lea
inc
movs
sub
rcr
scas
(bad)
xor
cmps
shl
xchg
sbb
call
mov
test
xchg
out
ja
cdq
pop
aam
jnp
jg
sbb
(bad)
xchg
pop
mov
fwait
xor
adc
cmp
sbb
fldcw
not
cmp
leave
das
xor
sub
xchg
scas
mov
cmps
test
sub
jns
xchg
loop
out
mov
inc
in
les
pop
xor
and
call
mov
add
and
xor
jmp
cs
and
sub
pop
(bad)
adc
sub
sub
sbb
xchg
jne
or
inc
pop
inc
retf
cmc
mov
mov
out
loopne
test
mov
jns
hlt
sar
lock
cmps
sbb
adc
scas
inc
and
js
stos
and
jle
adc
jne
mov
cld
std
xor
xchg
jmp
loope
inc
iret
xor
retf
mov
sub
imul
adc
mov
cwde
jp
dec
sbb
es
jne
mov
and
inc
outs
jns
mov
popf
xor
test
jne
cmp
pop
nop
mov
imul
dec
inc
pop
ret
sbb
fidivr
stc
xchg
push
lahf
jmp
(bad)
rcr
and
imul
movs
xchg
xchg
iret
inc
(bad)
sub
in
repz
fst
out
pop
mov
addr16
sub
push
mov
(bad)
es
inc
jo
jmp
cwde
push
xchg
or
sub
rol
retf
sub
pushaw
data16
jp
in
out
imul
push
adc
rcr
dec
sub
sub
(bad)
scas
add
mov
cmp
mov
lds
push
cli
popa
push
adc
xchg
push
pop
cmc
mov
add
sbb
movs
xchg
push
mov
sbb
(bad)
stc
xor
into
dec
(bad)
mov
adc
jmp
out
jmp
mov
mov
les
test
inc
call
xchg
xor
enter
retf
xor
xchg
fdiv
enter
mov
jns
sub
loopne
int
inc
cmc
mov
mov
adc
fist
add
leave
lea
adc
jle
mov
cmp
out
xchg
push
leave
cmp
pop
cmp
fldenv
mov
aas
mov
and
(bad)
std
adc
arpl
or
xchg
inc
(bad)
pop
pop
nop
inc
dec
(bad)
out
push
daa
xchg
repz
loope
pop
into
xor
cdq
sbb
cmc
in
push
sbb
cmp
xchg
inc
test
add
jl
adc
out
iret
cmp
pusha
push
pop
stos
sub
(bad)
movs
push
js
aam
add
inc
loope
fild
test
dec
pop
cwde
push
push
pop
cmp
inc
sbb
cmps
cwde
out
out
icebp
adc
imul
mov
dec
sub
cmps
je
pop
push
sub
ins
xor
sbb
or
loopne
push
jp
(bad)
icebp
loop
aad
scas
fnstenv
mov
aas
cwde
std
mov
lahf
(bad)
xor
add
jmp
jns
sbb
sbb
int3
mov
jne
(bad)
lahf
jne
dec
jbe
or
fnstsw
adc
out
sbb
std
cmp
stos
test
data16
mov
and
push
mov
or
or
js
sahf
mov
push
std
mov
int
js
iret
aad
cli
jbe
jge
dec
mov
mov
xor
pop
adc
scas
outs
aad
jo
mov
les
cmp
mov
fcomip
div
xchg
in
nop
les
inc
ins
push
xchg
repz
xchg
addr16
mov
cmp
jb
mov
xchg
inc
cmp
lods
fxch
scas
jmp
and
xor
cli
rcr
push
sbb
inc
jp
push
bound
in
inc
pop
cmp
test
lock
push
aam
adc
xchg
into
pop
call
xchg
adc
and
icebp
sar
scas
xchg
or
and
lock
imul
pop
jl
adc
les
mov
je
push
jo
xchg
and
jg
push
ret
cmp
jmp
fst
xor
ins
push
data16
lds
push
cld
ror
push
cmc
cmp
in
ins
mov
push
test
jne
jb
gs
xor
cmp
mov
in
jmp
mov
sbb
inc
xchg
ins
sbb
push
out
ss
pop
push
imul
ror
in
out
sub
leave
in
cmp
jns
stos
mov
shl
inc
popf
pushw
loop
fs
xchg
dec
push
push
retf
sub
sbb
mov
outs
scas
std
sub
cmp
cmc
sar
mov
and
and
imul
pop
cmc
mov
mov
mov
cwde
xor
pop
pop
les
int3
xchg
aaa
lods
sub
into
(bad)
fisubr
push
or
xchg
cmp
lock
repz
in
jecxz
mov
hlt
enter
xchg
ficomp
inc
fld
fisubr
sbb
mov
stos
add
sub
push
call
ins
push
mov
fdiv
in
and
inc
or
lds
sbb
sub
arpl
push
into
(bad)
movs
test
lea
xchg
dec
aas
sbb
cmp
xor
stos
jmp
dec
hlt
ins
aas
dec
aas
push
fisttp
fst
sub
loope
sub
lea
icebp
imul
test
js
cmc
cli
loope
inc
in
imul
xchg
pop
sbb
mov
popf
push
xor
pop
adc
aam
imul
outs
clc
and
retf
call
pop
les
xor
stos
push
dec
bound
pusha
ficomp
imul
jne
jp
in
xchg
stos
test
aaa
mov
mov
sub
sub
stc
stos
dec
mov
jae
sub
jmp
sub
push
dec
pop
mov
imul
pop
push
mov
dec
or
mov
sar
mov
nop
pop
sbb
xor
jl
icebp
iret
hlt
mov
fadd
pop
ficomp
sbb
add
dec
and
lods
dec
mov
push
adc
jno
arpl
xchg
jb
outs
imul
sub
sub
inc
dec
cmps
loop
or
call
and
fs
mov
xchg
leave
push
jp
mov
jo
push
add
add
mov
pop
loop
sbb
push
push
push
stos
jl
icebp
out
mov
sub
push
adc
push
outs
xchg
jg
push
push
(bad)
dec
call
adc
daa
fisub
iret
in
cli
lock
add
sbb
sub
cdq
pop
pop
dec
dec
dec
xchg
pop
xchg
fistp
ret
mov
(bad)
cmps
cmp
pop
mov
int3
xor
mov
mov
push
push
fdivr
or
cld
jae
jmp
icebp
xchg
(bad)
sti
jp
xchg
inc
push
jnp
or
outs
adc
cwde
test
xchg
ja
xor
xor
push
lahf
xchg
lea
test
add
cmp
imul
sub
dec
jo
push
nop
movs
std
sbb
out
dec
xchg
lock
cld
sub
mov
jno
and
clc
je
pop
nop
push
and
ja
aaa
mul
enter
cwde
stos
adc
jne
pop
jl
ror
inc
or
dec
scas
adc
out
ror
mov
jo
push
pusha
mov
adc
jns
mov
and
ja
aad
jl
cmc
cmps
adc
push
sub
(bad)
pop
and
jne
xor
push
test
popa
or
icebp
je
and
fidivr
xchg
aad
add
iret
pusha
cmp
(bad)
in
cli
cmc
in
jg
push
(bad)
sub
(bad)
lods
out
imul
test
jns
test
ja
pop
push
retf
sub
test
daa
in
imul
jnp
leave
cmc
sbb
dec
ins
fstp
outs
jo
enter
retf
lods
mov
daa
mov
bnd
cmp
arpl
jo
xchg
pushf
out
xchg
sub
sbb
push
cli
into
lods
ret
xor
sub
bound
retf
xlat
xor
mov
icebp
jecxz
ror
loope
xor
dec
ja
xchg
test
pop
pop
jecxz
adc
repnz
pop
adc
fistp
and
mov
fild
jl
mov
push
mov
ret
inc
add
in
and
adc
adc
arpl
xchg
ds
mov
jp
mov
daa
or
or
xor
fmul
out
ret
pop
inc
dec
sub
rcl
fld
adc
sbb
mov
and
sbb
and
cld
xchg
inc
fisttp
push
push
imul
cwde
or
mov
rol
iret
dec
mov
mov
test
ret
test
test
sti
adc
ret
push
cwde
(bad)
pop
mov
bnd
sbb
inc
xor
jnp
hlt
cmp
shl
or
xchg
fistp
cmps
mov
xchg
cmp
dec
mov
pop
jo
stc
in
es
xchg
jae
adc
retf
cmp
jae
dec
loopne
xor
jne
div
cmp
push
fwait
inc
inc
imul
jns
jmp
and
pop
ret
adc
xchg
push
xlat
jae
lock
push
scas
xchg
dec
or
cmps
xchg
mov
jecxz
xchg
fs
popf
pop
popf
mov
sbb
in
inc
mov
push
aam
leave
push
mov
fcom
mov
push
sub
ret
addr16
(bad)
mov
xchg
repnz
push
jg
pop
and
xchg
nop
lahf
retf
in
ins
or
(bad)
test
cld
mov
pop
dec
pushf
pushf
mov
out
xchg
push
xor
dec
js
xchg
push
rcl
jb
sub
sbb
push
daa
sbb
add
fnsave
add
pop
cmp
xchg
cmp
mov
inc
stos
xor
lock
ja
addr16
xchg
scas
xor
ss
rol
mov
xor
dec
xor
bound
fwait
mov
and
sbb
popf
in
add
sbb
sub
repnz
mov
std
pusha
repz
dec
pusha
mov
mov
ror
mov
xchg
rcr
jo
test
ret
shl
pusha
xchg
sbb
sub
fld
pop
jge
xor
into
fs
xchg
sbb
movs
add
ins
pop
jp
adc
xchg
js
jne
pop
aaa
data16
sar
(bad)
out
sub
xor
clc
push
xchg
rcl
mov
mul
mov
xchg
int
lahf
arpl
push
imul
pusha
add
pop
sub
fsub
mov
xchg
mov
sub
dec
mov
adc
(bad)
jp
jne
add
push
sbb
dec
jg
(bad)
add
fwait
inc
jb
jbe
cwde
pop
or
jmp
pusha
cld
mov
sub
movs
retf
pop
jae
ja
push
es
div
in
scas
mov
pusha
jno
sub
sub
stos
sub
and
pop
mov
xchg
inc
and
fs
jns
iret
in
sub
lock
jo
test
xor
mov
lock
mov
push
pushf
in
push
mov
ret
test
retf
mov
xchg
xchg
push
test
(bad)
mov
ds
popf
mov
(bad)
add
pop
xchg
xchg
push
sbb
adc
push
loopne
loope
test
mov
(bad)
xchg
cmp
gs
push
js
stos
shl
adc
sub
(bad)
xor
ins
test
mov
mov
cmp
idiv
rcr
pop
sub
movs
stc
push
enter
fs
lods
lock
fcompp
or
out
loopne
jne
stc
jae
pop
arpl
xchg
retf
xchg
push
add
cli
pop
mov
repnz
jne
dec
mov
xor
mov
jbe
jbe
ss
mov
adc
xchg
fisttp
clc
jbe
aad
mov
into
dec
mov
adc
and
loope
sub
push
loope
bound
jae
lahf
mov
repnz
jno
pop
xor
clc
xchg
xor
xchg
in
sti
jne
sbb
fiadd
dec
xchg
xor
xor
pop
(bad)
xor
int3
inc
in
js
lock
mov
jae
cmc
movs
pop
dec
jne
sub
add
mov
imul
loope
(bad)
loope
cmps
mov
std
adc
sub
xchg
or
xchg
mov
mov
popf
push
push
sbb
test
push
into
retf
mov
jne
sub
jae
jge
mov
mov
mov
sar
and
fcmovnbe
ins
pop
push
enter
inc
xor
add
jae
sub
in
sahf
int3
sbb
and
hlt
mov
mov
cli
daa
(bad)
jle
mov
sub
pop
sahf
or
jbe
jns
movs
ins
pop
xor
add
ja
jge
sub
ror
cld
inc
mov
jp
adc
ror
or
pop
ins
push
test
cmc
shl
and
ds
cmp
test
fs
addr16
test
outs
jb
sub
std
mov
dec
in
loopne
sub
movs
jae
adc
sub
std
imul
nop
lahf
cli
lahf
popf
and
sahf
mov
and
cmp
cmp
cmp
dec
popf
fldcw
jg
dec
ror
outs
loop
ret
mov
icebp
cmpxchg
test
(bad)
ror
mov
jns
ja
mov
xchg
fbld
mov
adc
mov
push
cdq
or
fiadd
and
test
cld
js
fisttp
mov
enter
jmp
dec
push
mov
cmp
sub
mov
xchg
pop
pushf
je
imul
fild
out
stc
(bad)
int3
aaa
or
repnz
ja
lods
in
sub
lds
xchg
fs
cli
cmp
pop
dec
cmp
scas
mov
movq
aam
fs
mov
test
push
push
xchg
lods
sbb
dec
mov
addr16
jp
stc
xor
mov
imul
cmps
(bad)
cld
(bad)
mov
icebp
sbb
add
jns
ins
and
sar
clc
je
xchg
or
mul
xor
pop
mov
xor
cmp
sbb
inc
fdivr
fwait
sbb
cli
xchg
jae
push
mov
xchg
jns
push
jge
test
pop
xor
in
sub
or
sub
test
cmp
nop
jmp
js
int
pop
scas
shl
movs
sbb
cmp
dec
mov
xchg
jns
jnp
cwde
sbb
ret
hlt
mov
xchg
xchg
push
jmp
xchg
dec
cmc
inc
sub
test
pop
xor
xchg
adc
and
jge
xor
cmp
inc
add
cmp
cmp
nop
pusha
repz
jb
popa
adc
cs
mov
mov
mov
push
test
xchg
mov
je
rcl
js
mov
test
adc
popf
fwait
cmp
mov
aam
sti
xchg
jb
push
adc
test
push
repnz
mov
aaa
pushf
or
out
mov
xchg
push
sub
cli
pusha
mov
js
or
lods
psubsw
push
in
xchg
icebp
mov
sbb
or
xchg
loop
cmps
cmp
push
or
or
inc
and
adc
aad
and
mov
adc
movs
xchg
das
cmp
xchg
push
dec
jb
pop
push
test
mov
mov
and
ins
mov
stos
jo
cld
ror
dec
and
lds
fldenv
xchg
xchg
jmp
mov
jnp
cmp
pop
add
cld
or
jl
scas
jp
int3
push
cmp
js
mov
sbb
adc
push
adc
mov
jge
ss
inc
sub
test
jl
mov
push
mov
out
mov
cmps
cli
jge
mov
cmp
ror
mov
jge
call
out
mov
lahf
sbb
(bad)
jns
ins
ins
mov
(bad)
fucomip
add
adc
loopne
sub
shr
stos
lods
test
mov
scas
mov
sub
mov
(bad)
mov
mov
call
imul
es
sbb
addr16
shl
pop
adc
mov
popf
jmp
pop
cmp
es
sbb
bound
stos
dec
dec
or
jp
pop
dec
xchg
test
dec
mov
jg
pushf
inc
sbb
imul
into
loope
mov
xchg
fdiv
(bad)
retf
mov
test
mov
lods
inc
sbb
sub
sub
pusha
jne
sub
stos
adc
in
mov
sar
pop
mov
xor
adc
jae
sub
(bad)
mov
fidiv
shr
addr16
mov
icebp
dec
cmps
test
repnz
inc
cmp
ins
cdq
pop
je
push
jmp
neg
and
unpcklps
or
jb
fldenv
loope
test
sub
mov
jns
sbb
inc
xchg
mov
sar
sub
(bad)
mov
lock
sbb
fiadd
out
fist
xchg
test
xchg
cmc
dec
xor
in
xlat
xchg
add
mov
mov
movs
add
mov
and
jnp
(bad)
(bad)
shl
sub
sbb
mov
push
stos
call
adc
mov
jno
(bad)
mov
rcpps
pop
add
xor
enter
pop
fs
ror
movs
mov
test
xor
sub
jno
xchg
cmps
lods
jp
in
mov
inc
test
push
pusha
or
mov
mov
lock
ja
fcmovnb
out
inc
mov
rol
test
inc
jp
sub
cmp
cs
sub
inc
fstp
or
xlat
rcl
or
adc
mov
push
cmp
xor
je
xlat
gs
cmp
push
lock
jns
mov
sub
sbb
xchg
jbe
outs
mov
jle
mov
add
test
push
jp
hlt
push
jg
dec
pop
cld
ret
call
int3
xchg
jmp
xlat
jl
fucomip
hlt
test
imul
pop
sub
leave
cmp
mov
pop
loopne
inc
mov
es
mov
aam
mov
mov
adc
test
cmc
nop
mov
mov
dec
inc
lahf
sbb
xchg
mov
mov
xor
sti
into
pop
jns
jmp
cwde
sub
inc
cmp
sbb
pextrw
scas
imul
pop
and
xchg
fiadd
bound
jbe
jmp
xchg
rol
or
adc
inc
out
js
ins
test
pop
enter
xor
and
sub
mov
jns
mov
inc
into
mov
out
push
sti
out
mov
daa
fistp
cmp
into
or
pop
int
ds
mov
jmp
xchg
inc
or
fadd
sbb
mov
push
jns
mov
repz
jbe
xchg
mov
push
jmp
pop
dec
pushf
push
lahf
sub
adc
pop
cmp
and
imul
sub
stc
sbb
and
es
dec
inc
xchg
mov
adc
imul
hlt
inc
cmp
xchg
mov
jecxz
sar
(bad)
(bad)
stos
in
js
fsubr
std
xor
out
daa
cwde
lods
mov
inc
daa
pop
imul
sbb
xchg
push
movs
pop
jge
(bad)
scas
add
jp
ja
xor
mov
jo
xor
ret
xor
mov
dec
and
inc
imul
fadd
cld
jo
ins
call
push
loopne
ins
sti
popf
repz
adc
xchg
mov
push
xchg
sub
mov
jns
inc
jbe
dec
mov
les
outs
jg
ja
div
adc
jecxz
stos
hlt
call
(bad)
fmul
xor
pop
cld
mov
(bad)
adc
mov
mov
jbe
imul
aad
sub
push
cmc
out
mov
cmp
nop
popa
mov
and
sbb
loope
lods
dec
push
(bad)
cdq
fwait
sbb
sub
ret
int3
mov
addr16
sbb
lock
(bad)
sti
sub
push
das
push
out
cwde
or
outs
out
lds
(bad)
fisubr
inc
stos
sbb
outs
cmps
cmc
pop
std
ins
push
xor
jo
sub
pushf
aas
fstp
(bad)
rcr
pop
fcomp
cmc
xchg
fwait
repz
(bad)
lea
dec
std
xchg
sub
js
lods
cs
shl
mov
leave
add
and
je
gs
and
adc
xor
rol
mov
shl
sbb
daa
cli
addr16
(bad)
dec
shl
mov
loopne
movs
hlt
data16
fs
test
cmp
xchg
nop
sub
fbstp
and
push
cmps
mov
out
enter
(bad)
jmp
or
jo
jo
pusha
pop
fbld
cmp
pop
sahf
xchg
inc
les
out
inc
or
add
test
pop
clc
mov
out
(bad)
cwde
fnstsw
div
and
aas
add
popf
adc
adc
push
add
xlat
mov
or
adc
xchg
pop
mov
push
in
fstp
test
retf
dec
jae
jnp
and
test
xor
add
sub
dec
push
push
(bad)
pop
stc
loopne
jnp
inc
sub
dec
and
fldenv
pop
ret
xchg
sahf
cmps
or
sub
xchg
into
jae
fldenv
inc
popa
sub
pop
daa
and
inc
shl
das
std
mov
dec
mov
adc
and
loop
jns
bound
gs
cwde
xrelease
sbb
push
xchg
push
jp
ret
xchg
or
lods
push
jns
cdq
xchg
jne
push
daa
sub
fidivr
in
cmc
or
cmp
xchg
mov
iret
mov
xchg
mov
cli
fcmovbe
jecxz
push
xchg
and
adc
in
jp
and
add
dec
adc
xor
addr16
pushf
in
rep
in
adc
ret
mov
ins
mov
fs
mov
adc
int3
push
or
jae
dec
sbb
pusha
ja
jle
loope
and
fistp
int
std
lea
dec
cmc
sub
sbb
jae
in
xchg
sbb
xchg
addr16
xor
retf
out
sbb
test
fiadd
movs
les
and
ss
nop
and
sub
mov
jg
out
adc
imul
mov
aam
jmp
(bad)
xchg
pusha
push
jbe
sub
pushf
or
out
xchg
ror
mov
adc
gs
mov
clc
add
scas
pop
add
sub
or
mov
mov
test
stos
cdq
cmp
mov
jg
lock
xor
inc
cli
ins
xchg
and
push
or
(bad)
xchg
mov
inc
dec
jmp
xlat
in
push
clc
shr
push
loop
jne
cmps
in
mov
and
xchg
aaa
push
mov
xor
inc
out
in
ins
pop
cs
imul
xor
jne
popa
out
jnp
push
push
scas
mov
rcl
in
pop
js
ret
cmp
cmp
xchg
sbb
nop
aad
loop
mov
xchg
adc
(bad)
jne
(bad)
ficom
and
movs
jb
cmps
mov
add
cmps
jb
push
xor
pop
int3
dec
xchg
call
enter
retf
call
mov
daa
loope
dec
jmp
mov
xor
rol
and
mov
loopne
and
cld
pop
or
sub
sub
mov
pop
ins
jg
jno
popf
int
dec
call
jno
jns
xchg
push
shr
pushf
xor
inc
xchg
movs
mov
jne
xchg
fdivr
mov
xchg
ret
inc
call
pop
icebp
aam
sbb
out
lds
jmp
xor
dec
cli
push
cmp
test
ret
ror
push
dec
and
repz
loope
out
xlat
jne
mov
add
cmp
jg
fcom
cmp
dec
fadd
or
xor
mov
dec
mov
and
cmc
rol
sar
clc
test
in
jle
inc
cs
pop
mov
mov
icebp
dec
adc
pop
test
div
inc
stos
adc
popa
test
push
cmp
push
cmp
in
test
out
iret
popa
add
mov
fidiv
sbb
xor
into
test
xchg
mov
jo
push
jg
test
call
xchg
add
mov
cmp
push
in
js
jns
repz
test
in
out
xor
ja
adc
jne
cwde
xchg
and
ror
in
sbb
ja
rol
in
adc
int3
loopne
inc
nop
call
out
shr
into
sbb
add
les
movs
push
push
cmc
adc
int3
mov
xchg
mov
ret
cmc
fstp
cmps
adc
imul
sub
pop
stos
jbe
xchg
arpl
pop
fwait
loopne
leave
mov
iret
xchg
xchg
inc
jmp
in
clc
jb
pusha
inc
jne
add
scas
mov
ja
in
sbb
mov
jnp
adc
and
sbb
mov
aad
retf
inc
pop
inc
adc
faddp
xor
popf
ins
sbb
retf
adc
dec
xor
mov
or
inc
loopne
xchg
das
add
call
stc
or
ret
das
add
scas
jmp
jecxz
dec
(bad)
gs
mov
adc
data16
pop
inc
sbb
xchg
mov
mov
addr16
shl
lea
xchg
hlt
js
ins
xchg
(bad)
imul
pop
daa
(bad)
add
into
js
fist
(bad)
and
cwde
hlt
dec
ins
sbb
pop
push
adc
cmc
jo
pop
sub
inc
cs
xchg
cld
mov
enter
leave
shr
push
cld
pop
pop
aad
and
aad
xor
xchg
inc
dec
retf
out
ja
or
idiv
stos
xor
cmps
stos
ficom
xchg
jne
pop
and
or
sub
in
inc
sub
xchg
pop
xor
(bad)
xchg
mov
in
push
sub
icebp
mov
sub
idiv
leave
pop
sub
adc
clc
push
into
icebp
test
mov
call
cmp
sub
adc
adc
dec
push
push
in
sbb
or
(bad)
shl
movs
repz
mov
cmp
out
xchg
cmps
outs
xchg
div
loope
lds
sbb
dec
scas
js
jne
xor
xchg
sbb
lock
cld
push
daa
sti
aad
lds
fcmovnu
pop
cmp
and
ja
repz
fdiv
ret
mov
mov
xchg
nop
inc
retf
scas
mov
push
std
inc
test
aad
add
mov
clc
xchg
retf
adc
hlt
push
fcomp
xchg
loopne
scas
push
into
ja
data16
fwait
cli
fbld
sub
les
push
xchg
cmp
mul
test
mov
mov
ins
and
mov
add
sbb
mov
call
push
pop
cli
(bad)
stos
enter
jmp
imul
lds
(bad)
call
std
or
inc
mov
push
jb
or
gs
cli
fwait
cld
add
repz
retf
or
out
sub
sti
or
add
loop
mov
loopne
cdq
iret
inc
and
mov
dec
test
add
adc
pop
lahf
retf
arpl
xchg
addr16
in
addr16
mov
xchg
enter
cmc
xor
add
xchg
push
pop
lock
hlt
(bad)
xor
mov
and
xchg
movs
(bad)
add
inc
fbld
(bad)
sbb
clc
(bad)
aad
push
inc
shl
rcr
sbb
outs
std
shl
cmp
dec
outs
add
das
jp
sbb
xchg
add
shl
mov
fs
push
int3
lods
xchg
and
shr
push
add
stos
add
je
push
aam
mov
pop
loopne
popa
mov
iret
push
pop
cmp
out
in
xchg
add
adc
adc
dec
popa
rcl
mov
icebp
jp
adc
push
sbb
retf
cmc
mov
ds
lea
(bad)
popa
adc
xor
ss
lock
out
xchg
adc
sti
mov
fidivr
iret
jp
addr16
in
xchg
jmp
fadd
sti
pop
jo
clc
xchg
inc
dec
xchg
add
push
into
pop
push
cmc
leave
mov
loopne
mov
stos
imul
stos
adc
xchg
mov
sbb
xchg
fsubr
sbb
fstp
lods
imul
adc
cld
cmp
fs
out
xor
cmp
mov
cmp
(bad)
or
pop
xchg
fdivr
mov
jmp
sti
sub
xchg
cmp
aam
pop
pusha
test
sbb
sub
shr
leave
jge
mov
pusha
mov
lea
xor
jmp
pop
push
pop
(bad)
adc
pop
fbstp
mov
les
xchg
pop
mov
jno
(bad)
int
(bad)
std
fisttp
sti
xor
adc
fnstsw
mov
jmp
add
bound
dec
ror
push
push
lea
in
std
pop
or
cld
je
out
jno
add
test
lahf
dec
mov
xchg
mov
jle
cmp
gs
adc
dec
adc
repz
(bad)
nop
mov
test
stc
std
lock
push
gs
test
in
imul
nop
adc
in
inc
and
jecxz
sbb
inc
into
cmp
push
add
pop
push
pusha
stos
jmp
loope
in
push
jp
adc
dec
inc
push
test
xor
retf
sti
jl
lea
adc
adc
out
sub
sbb
dec
icebp
idiv
(bad)
fld
sahf
test
pop
call
pusha
jb
aaa
xchg
aam
imul
iret
pop
mov
inc
gs
je
push
cmp
push
icebp
push
mov
ret
and
pop
sar
and
cmp
dec
out
inc
fcmovnb
cmp
sub
jne
(bad)
ins
cmp
pop
sbb
imul
pop
sub
xchg
jmp
iret
mov
mov
push
sbb
and
scas
cld
mov
pop
(bad)
jbe
push
repz
pop
jmp
daa
js
mov
movs
sbb
push
scas
sub
xchg
jne
push
cmp
cmp
mov
imul
and
jle
mov
lock
ss
sub
pusha
inc
cmp
leave
rcr
mov
sbb
ret
fwait
push
fistp
adc
mov
jns
jecxz
test
js
inc
jmp
mov
fst
inc
xor
sti
mov
cmps
les
or
cmp
push
fs
fld
xchg
cmps
jg
push
not
outs
mov
jmp
push
aaa
mov
jmp
mov
into
cmp
lods
sbb
cmp
rol
jnp
mov
add
add
sub
jns
arpl
dec
aad
js
mov
fisubr
dec
cmp
push
ja
scas
jecxz
pushf
push
xchg
jo
cdq
cmp
lock
adc
in
dec
cdq
add
shl
jge
sbb
pop
ja
pusha
xchg
stos
push
dec
sahf
xor
jmp
imul
mov
jmp
cld
mov
(bad)
jnp
jne
retf
ins
mov
mov
(bad)
clc
sub
sub
ins
xchg
loop
mov
retf
pop
mov
jns
adc
add
sbb
addr16
retf
dec
inc
imul
dec
mov
mov
into
test
pusha
mov
imul
cmp
jno
(bad)
adc
push
sbb
call
leave
mov
shl
sbb
lods
or
xchg
cmp
push
in
sbb
mov
push
sub
sbb
ins
es
add
loope
mov
mov
mov
pop
nop
sub
cmp
and
add
(bad)
fbld
cmp
sbb
xor
fadd
cmc
xchg
call
pop
(bad)
mov
sbb
imul
cmp
sub
aam
sbb
ins
icebp
std
mov
sbb
(bad)
aad
or
push
cmp
jnp
adc
and
aas
(bad)
mov
daa
mov
xchg
je
pop
jge
test
dec
rol
in
lds
push
popa
xor
rcr
sbb
adc
cmps
retf
xor
jbe
sbb
dec
jb
xchg
cs
hlt
(bad)
adc
add
mov
or
fadd
sti
push
es
das
and
ja
mov
jle
adc
into
pop
pop
xchg
xchg
cld
stos
push
cmp
test
es
lds
jnp
out
aaa
je
jmp
sar
pushf
in
adc
mov
sub
aam
call
je
and
xchg
add
repz
pop
sbb
mov
jge
lods
mov
jne
jle
mov
cmp
stos
xchg
mov
xchg
mov
lock
ror
push
inc
dec
repz
jge
test
nop
or
jae
repz
jae
loop
mov
sbb
cld
sar
mov
dec
xor
wrmsr
loope
mov
lea
push
push
jmp
retf
dec
hlt
adc
mov
jle
cmp
xlat
or
or
into
loope
mov
test
out
and
fisttp
(bad)
sbb
popa
imul
iret
jne
add
outs
mov
push
jge
xchg
xor
cwde
sar
push
xchg
push
adc
cmp
fidivr
jnp
mov
das
mov
test
out
daa
xchg
(bad)
pop
dec
mov
xchg
sub
cmp
mov
cdq
loopne
inc
xor
data16
sbb
adc
add
jns
push
push
pop
push
fldcw
fild
and
inc
push
or
mov
in
add
call
loope
mov
xor
dec
sbb
cmp
out
xchg
pop
cmps
pop
ror
jmp
fcomip
les
sbb
fistp
xor
jnp
mov
cmp
mov
imul
pop
jg
pop
sub
into
loope
adc
fwait
inc
popa
xchg
jle
jnp
cmp
mov
test
jle
inc
cli
sahf
retf
pop
dec
retf
retf
add
fnsave
loope
xor
cmp
mul
jne
add
nop
add
xor
out
fs
int3
add
shl
loopne
xchg
bound
push
or
mov
add
cmp
pop
push
loop
mov
push
hlt
inc
cmps
xor
xchg
jg
cmp
sbb
sar
mov
fsub
cmp
jns
jno
rcl
leave
das
sbb
inc
pushf
jae
push
dec
mov
push
icebp
popf
cmp
xchg
pop
ja
jp
ffreep
mov
add
stc
xchg
fcom
cmp
sbb
aam
popa
xlat
add
test
imul
shr
dec
or
xchg
enter
adc
or
call
cmc
pusha
pop
mov
push
dec
sahf
std
fild
loopne
test
es
je
in
mov
fimul
dec
cmp
pop
outs
cmp
and
adc
pop
push
jbe
mov
pop
and
push
pop
iret
dec
or
push
rcr
popa
cli
xchg
xchg
jmp
jae
mov
push
loopne
pop
jb
mov
shr
mov
lods
sar
enter
dec
add
dec
je
ins
lahf
sub
push
push
push
mov
ja
pop
xlat
sub
mov
and
pop
jno
stos
dec
adc
xor
sbb
push
or
jp
mov
ror
xchg
sub
inc
adc
test
imul
shr
jecxz
int
push
jo
stos
sbb
jp
ins
inc
and
into
pop
inc
xor
lds
(bad)
xchg
mov
das
jmp
icebp
retf
push
mov
mov
mov
mov
sub
shl
test
test
jl
sub
xchg
add
cmp
ss
push
xor
test
repz
xor
dec
nop
pop
fsubr
jo
inc
adc
stos
pop
xchg
mov
ins
cmp
sbb
retf
mov
ret
mov
or
inc
aad
imul
mov
push
(bad)
outs
or
sbb
sbb
pop
xchg
cmp
push
es
sbb
es
xchg
loope
bound
imul
pop
add
lods
push
xor
mov
or
dec
outs
repnz
ja
in
dec
sbb
je
daa
jns
daa
hlt
sbb
fwait
mov
pop
mov
xor
sub
sbb
arpl
cmp
dec
push
shl
xlat
bound
js
xchg
pushf
or
(bad)
mov
(bad)
cmp
cld
sub
xchg
push
lahf
add
jns
shl
dec
sbb
sub
(bad)
in
jo
dec
jae
push
ja
mov
pushf
and
(bad)
sahf
out
mov
in
sub
jg
or
xor
ins
jp
push
cs
mov
mov
test
icebp
jmp
ins
pop
out
js
pop
push
hlt
int
js
(bad)
sub
sub
xchg
cmps
xor
jns
push
add
test
clc
fucomip
call
mov
fwait
pop
lods
jbe
out
mov
cld
ficom
loope
jo
xchg
aad
cmp
std
in
push
jp
dec
jge
adc
sbb
pusha
or
push
(bad)
mov
ja
sti
loop
je
mov
push
out
jle
test
mov
inc
adc
ror
sub
mov
out
hlt
movs
xchg
jle
mov
and
enter
inc
loope
push
leave
call
push
pusha
xor
inc
lock
into
in
push
movs
test
jge
cmp
xchg
ins
ret
push
pop
test
xchg
push
or
rol
nop
push
jbe
xchg
sahf
or
push
loopne
test
push
add
xlat
sub
pop
test
sar
pop
nop
mov
xchg
xchg
push
gs
pop
push
ror
sbb
not
xchg
mov
fcom
dec
add
out
push
adc
stc
mov
shl
and
arpl
popf
and
jne
dec
xor
inc
xchg
push
das
mov
mov
addr16
and
mov
pop
les
icebp
sub
pop
call
sbb
lods
mov
push
lock
add
and
cmps
jne
sub
jg
or
stos
cmps
dec
in
shl
jle
shl
fbld
xchg
mov
(bad)
rcr
repz
out
pop
sub
cs
mov
xor
sar
sub
jo
fstp
push
mov
pop
stc
loopne
(bad)
push
in
lea
sbb
bound
pop
jae
mov
lock
mov
movs
mov
inc
sub
cld
and
pop
push
clc
cmp
pop
sbb
mov
mov
outs
or
or
aam
loopne
or
(bad)
ds
cmp
lahf
out
mov
jnp
loop
cmps
mov
leave
test
je
xchg
repz
cmp
imul
mov
or
dec
test
cmc
and
enter
xor
mov
xor
xchg
repz
ins
es
pop
aad
cmp
test
enter
repnz
mov
sbb
je
mov
xchg
dec
mov
fcomip
sar
mov
lods
xor
mov
imul
and
popf
xchg
push
test
push
sub
aaa
sbb
dec
sbb
inc
xchg
jbe
xor
xor
pop
bound
sub
push
lea
idiv
inc
jle
mov
mov
jns
std
cmp
pusha
jle
psllq
mov
retf
ret
or
xchg
dec
retf
xor
adc
mov
movs
adc
imul
or
test
mov
xchg
mov
scas
fcmovbe
popf
or
inc
jecxz
xchg
in
or
mov
jmp
xor
push
or
dec
cli
xchg
and
hlt
leave
lods
fidivr
(bad)
adc
and
adc
test
into
or
retf
hlt
sub
sbb
imul
int
das
ds
dec
(bad)
out
sbb
cld
loope
xor
xchg
clc
inc
imul
addr16
xor
push
xchg
xchg
aaa
dec
push
sub
out
xchg
fdivp
push
mov
loope
add
mov
pop
cmp
adc
mov
cmp
imul
hlt
cmc
adc
iret
test
jg
fldcw
mov
add
mov
shr
cmp
bound
xchg
jmp
mov
in
xor
jl
leave
jbe
xchg
repz
cwde
mov
mov
test
test
xlat
cli
cmp
cmc
and
repnz
imul
pusha
aad
and
rcl
lods
mov
cmc
int
xchg
push
data16
jp
cmc
mov
jns
imul
icebp
pop
sub
xchg
imul
mov
mov
loopne
loopne
xchg
cmp
xchg
sbb
cmc
div
pop
test
dec
pop
cmp
rcl
xchg
rcr
jns
adc
inc
lods
pusha
push
aas
pop
inc
int3
mov
cwde
fcmovnu
jb
sahf
fdivrp
scas
js
sbb
push
mov
xor
xchg
pop
das
xchg
ds
jno
mul
pop
sbb
mov
xchg
or
jnp
adc
mov
mov
stos
dec
jmp
fimul
push
nop
fmul
sbb
jge
or
and
pop
sub
imul
int3
aam
jle
shl
dec
push
pop
pop
fimul
outs
pushf
rcl
jg
mov
jmp
push
push
inc
daa
cmp
in
add
xchg
and
pop
sbb
repz
xchg
inc
jae
sub
dec
enter
outs
std
rcr
push
sahf
sub
mov
adc
dec
cmps
pop
mov
aam
jne
cmp
pop
lock
push
addr16
int3
(bad)
xor
inc
adc
mov
xchg
lods
stos
jne
test
lea
sub
add
pushf
mov
popa
leave
mov
iret
xchg
pop
jb
sti
arpl
jbe
nop
sbb
cmp
repnz
das
loopne
sbb
sub
je
mov
test
inc
sub
retf
mov
mov
stos
sar
push
cmp
in
leave
test
repnz
jg
aaa
inc
leave
sub
xchg
adc
fdivr
jo
sbb
in
out
std
xchg
sahf
aas
jnp
ror
in
out
jp
sbb
es
das
daa
mov
jbe
test
dec
data16
push
and
ins
aas
int
mov
xchg
inc
sbb
jmp
ja
xor
outs
dec
mov
int3
test
loope
sets
cmp
cmp
xchg
push
xchg
sub
daa
sahf
push
cld
adc
out
call
inc
loopne
mov
ds
fisub
dec
xchg
ret
mov
cmp
lock
pop
bound
ret
(bad)
sti
push
(bad)
(bad)
push
adc
jae
mov
jmp
and
inc
sub
test
push
jo
mov
punpcklbw
mov
adc
xchg
sub
pop
mov
push
add
jne
mov
mov
cli
dec
sub
sbb
daa
xchg
in
mov
xor
cmp
pop
mov
mov
rcl
jg
add
loop
ds
mov
outs
mov
scas
mov
sub
or
test
adc
jle
cmp
bsf
stc
ret
mov
cmp
jecxz
mov
into
and
mov
icebp
test
push
mov
cli
push
xchg
repz
jne
and
jb
out
jl
and
cmp
jl
xchg
or
loope
push
inc
clc
out
xchg
daa
jl
icebp
jmp
mov
sub
sub
ret
mov
sbb
xchg
inc
push
ror
mov
mov
mov
sub
dec
or
mov
in
push
seta
mov
mov
cmps
(bad)
sbb
pop
test
cs
mov
clc
mov
dec
in
shl
(bad)
mov
fwait
and
cmp
cmp
in
jo
add
popf
lods
sbb
leave
sbb
popa
iret
adc
cdq
mov
les
cmp
xor
dec
lods
in
adc
iret
cmp
ret
fwait
mov
cmp
(bad)
mov
sbb
dec
mov
xchg
push
mov
xchg
ss
into
sub
shl
pushf
mov
js
mov
outs
xchg
data16
jge
sbb
leave
xchg
sahf
ficomp
jnp
mov
ror
test
mul
lea
dec
(bad)
stc
sub
shl
xchg
or
jne
fs
imul
mov
xchg
shr
iret
lea
sbb
sub
and
call
dec
cmp
cmps
sub
repnz
xchg
sbb
cmp
lahf
imul
mov
jp
sbb
js
test
inc
scas
ret
add
dec
loopne
xchg
mov
xchg
jle
or
cmp
sbb
inc
icebp
in
cmp
cmp
mov
out
les
mov
jns
xor
and
mov
pop
in
cli
push
fistp
sub
loope
add
fsubr
pop
sbb
(bad)
lods
mov
add
push
jbe
addr16
push
push
je
and
cwde
rcr
cmp
mov
(bad)
fisttp
mov
adc
xchg
dec
and
sahf
sub
push
xor
jne
push
jge
add
das
jmp
mov
mov
loope
jne
mov
mov
iret
enter
jno
jge
push
push
loope
fist
pop
repnz
add
clc
popf
nop
lods
ret
dec
ds
mov
inc
les
cli
dec
repz
aas
pop
mov
stc
leave
and
jae
test
pusha
push
mov
add
mov
push
xor
sbb
adc
jns
push
dec
jle
mov
lods
test
in
jns
ret
cmp
adc
pusha
and
shl
push
js
lea
mov
(bad)
loop
repnz
hlt
ja
pop
add
xlat
sub
push
cmp
aam
loopne
cmp
inc
loop
dec
xchg
imul
mov
or
cwde
inc
std
pop
mov
mov
cmp
cli
cmp
push
jp
repz
inc
add
and
div
lock
dec
push
in
push
out
icebp
push
cmp
(bad)
rol
push
fiadd
mov
mov
cmp
cs
js
dec
repnz
dec
add
jnp
sub
xor
cmp
xchg
stc
xor
pop
ins
pushf
adc
movs
and
int3
inc
or
or
aaa
push
xor
mov
xchg
jbe
lds
pusha
cwde
sub
sub
adc
mov
xchg
cmp
cs
pop
and
add
fs
cli
or
xor
fisttp
mov
mov
push
test
adc
dec
inc
fistp
cmc
(bad)
push
xchg
dec
push
sbb
push
repz
pop
lea
in
mov
jg
xor
xchg
add
sbb
inc
ins
push
jns
ss
imul
xlat
dec
jmp
and
sub
std
adc
daa
popf
lea
aam
loopne
xchg
cdq
xchg
sbb
cmp
push
cmp
xchg
lock
xor
pop
xchg
shl
sar
ins
mov
adc
and
sti
jnp
jne
sub
repnz
js
stos
cmp
jmp
mov
cmp
nop
pop
mov
add
fisub
mov
loope
in
jo
pushf
mov
int3
and
out
jb
jle
(bad)
clc
xchg
mov
push
push
out
mov
xor
rcr
cld
mov
ss
sbb
mov
in
push
pop
in
jne
(bad)
fidivr
sbb
scas
lahf
dec
cmp
jecxz
push
pop
imul
pusha
js
xchg
add
js
mov
push
jnp
outs
(bad)
or
das
pop
mov
jmp
inc
push
sub
icebp
jns
add
out
sbb
mov
xchg
das
mov
lahf
out
jmp
jno
xchg
cmp
push
enter
xchg
or
shl
aad
scas
push
xchg
pushf
into
push
add
mov
jb
in
pop
ret
push
lods
das
sub
mov
jmp
mov
bound
push
and
dec
mov
inc
sahf
imul
xchg
jnp
sbb
daa
rep
shr
sbb
nop
ss
leave
dec
push
xchg
data16
addr16
push
aam
cmp
xor
jmp
and
hlt
mov
cwde
out
aam
bound
push
inc
mov
(bad)
ja
les
adc
leave
sub
cmp
add
sub
add
sbb
cli
hlt
cwde
adc
lods
jb
scas
xchg
shl
fdivr
sbb
lods
jl
mov
adc
sbb
add
fist
mov
enter
push
sub
not
mov
pop
jne
daa
jnp
mov
push
pop
in
pop
and
mov
mov
(bad)
push
cmp
sbb
cmps
and
(bad)
adc
test
(bad)
shl
xchg
jne
xchg
dec
clc
sbb
rol
jns
sbb
aam
xchg
mov
mov
out
sahf
push
inc
jmp
jo
mov
loope
adc
jb
jmp
or
jbe
adc
cs
push
or
test
pop
cmc
push
icebp
aaa
pop
push
jae
movntps
test
jge
outs
mov
pop
bnd
xor
stc
(bad)
sub
sub
(bad)
or
aaa
push
test
call
sub
mov
mov
sbb
push
add
jno
and
jge
adc
aas
imul
push
fild
jle
pop
push
sti
clc
jge
mov
add
fiadd
xchg
dec
sbb
arpl
sub
push
and
xchg
mov
and
pop
mov
stc
xor
push
adc
test
xor
cmp
enter
hlt
jg
cmp
int
dec
js
jne
lock
(bad)
out
pop
or
clc
push
jbe
mov
push
xchg
and
xchg
sbb
xor
cs
mov
xchg
ds
sbb
ret
cmp
lock
xchg
les
stos
mov
or
or
or
mov
movs
outs
clc
clc
ret
aas
popf
add
or
lds
sbb
cmc
test
sub
jo
fistp
sub
xchg
push
cmps
and
je
fwait
jns
or
mov
loop
pusha
adc
and
push
inc
and
fldcw
mov
xchg
out
lock
in
icebp
jo
scas
mov
jb
lahf
dec
ins
test
and
pop
add
cmp
adc
call
fadd
jl
jbe
aam
lds
pop
cmp
mov
aam
adc
fadd
les
ret
pop
jne
imul
daa
cmp
or
sbb
jnp
sbb
jne
mul
pop
data16
das
js
mov
pop
cwde
or
sub
imul
inc
mov
sbb
mov
jge
lock
inc
jno
sub
or
lods
ret
pop
and
dec
xor
int3
and
or
adc
jae
test
xchg
push
cmp
rol
jo
das
mov
mov
arpl
mov
cmp
jle
push
sbb
mov
js
mov
inc
pop
xor
clc
push
dec
rep
and
sub
addr16
icebp
dec
jl
aas
mov
and
inc
push
nop
xor
adc
xchg
in
mov
jmp
loope
xor
and
jae
add
push
loopne
fwait
inc
and
dec
mov
xor
xchg
xor
add
lods
push
test
fwait
js
aaa
pop
fmul
push
out
out
inc
inc
xchg
mov
jg
jmp
cmp
stos
call
ficomp
pop
mov
dec
mov
fsub
inc
stos
movs
sub
push
nop
push
lds
adc
jp
fbld
shl
mov
les
xlat
jno
stos
test
xor
std
add
pusha
mov
mov
push
fcomp
pop
adc
out
mov
test
jle
loope
sti
pop
sub
cmp
pop
fist
pop
jae
xchg
xor
movs
mov
pop
aad
cld
ret
adc
enter
loopne
adc
mov
xor
mov
rcr
popf
jge
xchg
mov
push
mov
jmp
xchg
hlt
cmp
mov
sub
mov
jmp
iret
popf
ins
test
mov
leave
mov
lahf
fnsave
and
dec
movs
nop
movs
jmp
mov
sub
adc
rcr
jne
xchg
push
imul
xor
test
mov
xor
adc
call
add
pop
enterw
cwde
jle
mul
mul
out
aad
and
fwait
not
adc
aad
stos
mov
rcl
retf
jne
pusha
stos
movs
jae
jp
cmp
mov
and
sub
div
or
movs
mov
xchg
sbb
xor
js
cmp
(bad)
rcr
pop
fdivr
imul
add
xchg
push
es
shr
cmp
dec
sub
int
ds
jmp
outs
xchg
mov
les
adc
(bad)
clc
xchg
movs
xor
jne
daa
sbb
rcr
dec
or
ds
neg
xor
lea
pop
xchg
repz
shl
imul
test
xchg
jl
rcl
icebp
shl
ins
inc
imul
jne
lods
mov
cmp
adc
push
ss
int3
push
push
push
add
jge
pop
lods
jnp
cmp
retf
in
cs
mov
paddusw
dec
test
add
push
and
dec
scas
mov
repz
icebp
inc
ror
push
or
in
xchg
push
icebp
popa
mov
out
popf
loope
xlat
movs
jmp
jl
add
test
push
in
fdiv
pop
cmp
jb
cmc
inc
jns
or
xadd
cmp
cmc
mov
inc
cmp
cmc
mov
adc
inc
pop
ja
pop
sbb
je
push
jnp
lds
std
jl
(bad)
gs
clc
jns
ret
mov
push
inc
cmp
in
fs
stc
mov
daa
xchg
jo
add
lea
fstp
je
imul
sbb
xchg
dec
sbb
out
mov
sub
cli
dec
call
nop
enter
mov
scas
push
mov
daa
mov
call
mov
int
and
sbb
nop
outs
adc
cmp
push
pop
mov
addr16
fs
(bad)
inc
jns
cld
jecxz
jne
mov
lds
mov
xchg
pop
popf
jnp
frstor
sbb
in
rcl
xor
pop
push
jne
pop
pop
adc
mov
lods
hlt
aas
add
mov
xchg
mov
xor
mov
push
out
xor
rcr
add
scas
adc
pop
out
dec
(bad)
push
mov
add
mov
jmp
mov
cs
fwait
ins
sub
(bad)
xchg
je
(bad)
data16
lods
ins
cld
test
das
pop
icebp
outs
add
xchg
inc
enter
ret
lods
or
push
int
jp
jno
or
(bad)
(bad)
js
adc
int3
inc
and
imul
dec
xor
mov
cmc
pop
fucom
push
jns
idiv
ret
les
in
xchg
mov
adc
xor
push
jb
fmul
cmc
xchg
and
add
test
inc
push
sub
sub
call
pop
mov
jmp
pop
ror
push
mov
push
hlt
(bad)
mov
dec
imul
aas
or
addr16
stc
mov
sbb
daa
je
call
sbb
mov
jnp
in
sbb
hlt
mov
sub
xor
mov
stos
loope
inc
mov
pop
leave
jbe
inc
jmp
inc
mov
shr
push
xor
mov
(bad)
daa
push
repnz
pop
sbb
push
call
aam
nop
sbb
ret
into
out
ss
and
retf
sbb
js
xchg
dec
std
xor
dec
sbb
imul
xchg
xor
aam
mov
add
jne
jns
xchg
das
cmp
jbe
jmp
clc
sub
push
je
ret
arpl
pop
lods
jns
inc
sub
inc
fistp
fcomp
fidivr
or
xchg
mov
int3
push
lea
movs
push
mul
iret
in
rol
cli
inc
add
mov
cld
pop
adc
iret
inc
loop
cs
cmp
cmp
pop
xchg
(bad)
in
jmp
mov
jl
leave
inc
movs
adc
call
and
pop
cli
sbb
out
test
cs
popf
mov
jle
and
or
mov
add
jge
leave
clc
dec
fisub
fbld
ret
stos
and
push
sbb
pop
movs
dec
or
fsubr
mov
js
push
sbb
rcl
push
jo
(bad)
dec
and
pushf
adc
pop
es
ja
repz
retf
nop
pop
push
mov
jle
adc
inc
or
mov
and
push
fidivr
and
leave
fcomp
cmp
mov
push
ficom
xchg
cwde
push
mov
bound
add
ficom
in
cmc
xchg
or
jp
sub
adc
data16
loopne
mov
xchg
sbb
and
or
jmp
aam
pop
push
mov
jb
int3
jle
and
out
sub
out
retf
jg
xor
neg
jl
xor
xchg
ret
out
ret
ins
mov
cs
imul
or
ror
cwde
out
sub
cmp
dec
js
call
mov
cmp
dec
pushf
adc
(bad)
in
xor
xor
mov
mov
inc
std
mov
push
retf
adc
mov
mov
jmp
idiv
call
push
push
and
dec
jecxz
fisttp
mov
cmp
mov
sub
xlat
mov
mov
mov
(bad)
in
fistp
imul
enter
pop
mov
inc
push
inc
ret
adc
sar
adc
movs
std
and
shl
movs
jne
fs
mov
xor
fmul
ror
jo
data16
adc
imul
sbb
pop
jbe
movs
push
movs
aad
cld
add
ror
dec
xlat
cld
and
sub
and
mov
xchg
pop
pop
fsubr
outs
sti
inc
cmp
inc
ret
sub
sbb
aaa
mov
or
sbb
test
push
lahf
cmp
dec
jp
cld
or
sar
cmp
pop
bound
out
xor
sub
in
ficom
mov
jne
int
fistp
jbe
mov
cmp
xchg
cmps
into
or
test
pop
jo
adc
jne
pop
sbb
(bad)
cli
data16
mov
rcr
pop
jns
inc
stos
int
(bad)
out
aas
lods
in
ins
pop
(bad)
fild
movs
cli
fsub
xor
push
pop
inc
jne
loopne
jns
mov
icebp
in
jge
jp
xchg
xor
jns
pop
repz
xchg
outs
and
fwait
dec
dec
test
mov
outs
adc
popf
aam
jo
bound
cmp
pop
pinsrw
adc
or
sbb
sub
(bad)
jns
adc
ficom
clc
daa
test
scas
cmp
es
sar
cmp
and
cmp
ss
push
mov
call
enter
jl
cmp
sbb
loope
jle
mov
out
sbb
mov
js
mov
jnp
loope
jp
xchg
and
push
pop
daa
push
dec
sar
sbb
pop
pop
js
pop
dec
jnp
push
test
push
jge
frstor
pop
xchg
add
fisubr
sub
xchg
jne
les
call
lods
push
sub
xchg
leave
int3
pop
vsubpd
(bad)
jne
fiadd
push
retf
cmc
sub
sbb
xor
sub
xchg
dec
repnz
adc
mov
fdiv
fdiv
bnd
cmp
in
xor
out
stos
push
xchg
jmp
shr
jnp
ins
rcl
mov
in
jne
mov
dec
nop
pop
inc
vphaddubq
iret
into
les
ss
push
mov
pop
add
jno
nop
sbb
and
ret
outs
and
test
jbe
sar
and
pusha
push
ss
and
dec
(bad)
dec
push
sbb
int3
mov
sub
aam
mov
test
test
xchg
pop
fcom
or
adc
je
repz
js
xchg
sub
jne
inc
jne
mov
mov
imul
sbb
xchg
cmp
cld
call
push
leave
outs
push
fadd
sbb
ret
push
mov
push
cmp
ret
pop
stc
mov
out
and
cdq
les
xchg
sub
xchg
aam
cli
in
pop
xchg
test
mov
cmp
add
int
(bad)
movs
cli
loope
xchg
sar
jecxz
pop
jae
sub
add
xor
xchg
in
dec
xchg
jne
push
jge
cwde
jmp
iret
jle
fcomi
lods
push
js
xchg
loope
pmaddwd
jl
mov
out
cli
mov
sbb
adc
sbb
xchg
jnp
inc
ret
mov
test
pusha
cmp
xchg
xchg
add
jne
addr16
loop
fwait
ds
fwait
dec
imul
cmp
push
xlat
xchg
or
dec
push
pop
lods
xchg
adc
lock
cmp
push
jmp
iret
xor
mov
imul
test
popf
mov
(bad)
ins
inc
mov
gs
pop
test
sbb
push
push
sbb
retf
gs
repz
cmp
bound
xchg
pop
fs
cmps
stos
xchg
loopne
ror
add
adc
fisub
mov
cmp
jge
cmps
mov
xor
xchg
xor
sahf
push
mov
fsubr
sbb
mov
sbb
xchg
sti
stc
fisubr
out
jnp
int3
pop
xor
and
pop
daa
adc
daa
movs
aaa
xchg
or
xor
aam
jmp
dec
std
push
push
call
xchg
scas
aaa
daa
mov
repnz
inc
in
and
xchg
std
adc
mov
dec
mov
adc
leave
dec
nop
out
inc
mov
outs
mov
pop
push
xchg
push
push
pop
cld
cmp
mov
jae
ss
lods
dec
and
aas
inc
push
xor
adc
jne
retf
mov
mov
mov
neg
and
push
iret
push
dec
dec
fadd
fstp
scas
ror
cmp
xor
pop
jge
xchg
xchg
sbb
(bad)
sub
dec
ja
add
mov
jne
xor
lea
test
ds
mov
ret
push
xchg
sbb
jne
neg
test
clc
xchg
clc
std
xchg
cmps
jecxz
adc
or
mov
cmp
leave
cmp
jmp
ss
pop
and
xor
fmul
xor
adc
call
jle
retf
aas
imul
in
push
(bad)
jnp
sbb
and
add
dec
outs
adc
cs
dec
cmp
and
jb
mov
inc
sbb
(bad)
xchg
xor
mov
push
mov
daa
out
clc
or
fstp
jp
jne
imul
and
imul
dec
mov
dec
pop
(bad)
jmp
xchg
les
push
mov
xchg
movs
push
mov
cmc
pop
aas
rol
jmp
pop
push
or
add
addr16
sbb
ds
xor
xchg
push
push
loop
rcr
inc
dec
loopne
adc
dec
push
mov
mov
cld
les
cmp
pop
test
in
push
sbb
not
ret
out
xchg
cmp
jge
dec
mov
xor
and
jne
jno
lods
cmp
enter
enter
dec
cmp
sti
jecxz
repnz
lahf
mov
push
pop
xlat
pop
dec
jmp
xchg
fcmove
ja
call
inc
mov
sbb
dec
div
mov
cmp
pop
mov
es
arpl
push
(bad)
jns
adc
cmp
sub
jmp
movs
fcomip
out
jmp
fisub
in
pop
jno
adc
fist
xchg
push
sbb
retf
pop
xchg
mov
imul
iret
cld
inc
adc
popf
push
xor
aad
push
daa
(bad)
mov
pusha
imul
clc
sub
pop
dec
jl
mov
ss
and
mov
mov
dec
js
pusha
mov
mov
in
popf
inc
adc
stc
pop
dec
jmp
stos
mov
inc
daa
fsubr
pop
cmp
xchg
das
xchg
inc
sub
sub
sub
js
inc
jns
movs
inc
adc
push
xlat
imul
cmp
or
aaa
stc
or
rcl
dec
into
pop
mov
dec
aam
popa
addr16
inc
sar
xchg
xchg
sub
in
ret
dec
sub
dec
lea
fwait
jb
in
pause
sbb
cmp
cld
push
jne
aaa
mov
cs
or
pusha
pop
icebp
data16
push
sub
cmps
adc
inc
ret
test
dec
xchg
mov
push
xor
mov
xor
movs
fiadd
xor
xor
mov
or
test
(bad)
out
adc
imul
xchg
sbb
sbb
lock
mov
sahf
(bad)
lods
cmps
mov
pop
pop
inc
xchg
pop
into
jbe
cmp
jmp
mov
sub
ds
in
in
xor
shl
idiv
jne
aas
addr16
mov
mov
sbb
pop
je
inc
sub
adc
sahf
mov
mov
cmp
loop
pop
jne
push
popf
pop
cmp
mov
dec
daa
adc
xchg
into
in
loop
cli
repz
imul
repnz
adc
shl
sahf
pop
shl
sbb
int3
ds
(bad)
jne
mov
mov
(bad)
in
sub
dec
scas
push
cld
lods
mov
jge
cmp
pop
push
cs
jl
es
dec
dec
jge
ins
pop
and
sub
mov
je
into
push
mov
dec
xor
arpl
or
test
dec
xlat
cmp
jecxz
ror
out
sbb
adc
push
jge
mov
adc
jae
or
adc
(bad)
jle
pusha
lods
xchg
retf
dec
jae
mov
cli
ins
test
and
dec
mul
fidiv
repnz
or
stc
ja
rcl
int3
jge
sbb
inc
(bad)
jg
jle
xor
cmp
xchg
xchg
xchg
leave
xchg
and
mov
xchg
pop
into
les
mov
mov
inc
retf
icebp
scas
mov
mov
out
sbb
xor
jb
jecxz
adc
push
mov
ret
push
mov
xchg
lods
je
lock
push
push
mov
scas
nop
arpl
int3
int3
or
lea
dec
xlat
push
xor
cwde
add
iret
cs
fsubr
cmp
leave
in
xchg
jmp
mov
and
movs
cwde
popf
push
in
out
pop
loopne
mov
fs
cmp
(bad)
fdiv
lea
in
dec
mov
and
cmp
cmps
dec
xchg
repnz
int
push
cmp
sub
xrelease
push
hlt
sbb
xchg
not
jnp
inc
inc
jno
add
std
cmps
push
mov
mov
push
xchg
and
inc
mov
mov
sbb
adc
adc
inc
jnp
or
jp
sub
outs
aad
or
or
push
sub
jmp
in
loopne
cwde
pop
sbb
xor
pop
dec
sub
repz
fnsave
xchg
inc
pop
dec
ja
pop
pop
std
sbb
sbb
jbe
not
mov
(bad)
pusha
addr16
dec
sti
rol
jbe
adc
dec
mov
xchg
push
inc
jne
loopne
dec
nop
sub
jg
(bad)
adc
sbb
repnz
dec
std
cld
fnstsw
jb
lods
push
ins
lods
jo
jmp
sahf
mov
adc
sbb
inc
out
dec
test
ss
clc
(bad)
sbb
scas
mov
stc
dec
xchg
outs
dec
xchg
dec
call
push
sub
rol
fimul
mov
xor
jo
data16
icebp
ins
mov
xor
pop
imul
cmc
je
mov
ret
popa
int
jns
jle
jbe
lods
mov
dec
outs
out
add
mov
mov
add
sbb
cli
push
in
arpl
cmp
xchg
sbb
fnstcw
out
(bad)
dec
ja
outs
in
mov
push
fsubr
xor
jg
jns
cmp
lock
cmp
les
xchg
clc
leave
leave
sbb
dec
jge
push
add
cmp
and
ss
inc
pop
or
pop
mov
mov
shr
js
jmp
popa
jle
scas
test
sub
xor
ret
(bad)
xchg
scas
xchg
ins
xchg
adc
mov
dec
jmp
ret
jmp
pop
int
or
mov
mov
ficomp
xor
fmul
ins
outs
test
cmp
daa
lods
dec
pop
lea
push
rcr
repz
nop
add
fsubr
mov
mov
dec
sub
shr
scas
cs
aam
in
loopne
lock
push
push
cmp
adc
test
mov
je
pushf
jns
sbb
xchg
jbe
imul
mov
in
jae
and
push
pop
cmp
adc
popa
cmp
xchg
cmp
jae
xor
cld
outs
data16
and
push
add
xor
mov
jne
(bad)
and
xchg
nop
daa
push
push
dec
jmp
cmp
outs
cld
push
aaa
sub
or
or
cld
std
sub
sbb
mov
fs
jae
xchg
(bad)
test
lds
xchg
inc
cli
movs
mov
xor
adc
outs
mov
dec
cmps
test
icebp
or
xchg
or
mov
and
test
in
inc
sbb
dec
sti
enter
sbb
fnstcw
loop
lods
ftst
jl
xchg
sbb
shl
mov
xor
ret
push
cld
push
sbb
in
aad
push
js
mov
jecxz
clc
xchg
lds
fnstsw
add
jnp
and
data16
xchg
and
jp
shr
mov
ins
imul
aam
add
mov
mov
pop
std
mov
jb
sub
xor
stos
pop
(bad)
cmps
jbe
push
xor
mov
in
mov
mov
cmp
jne
retf
jne
mov
mov
pop
scas
push
ds
dec
sti
mov
mov
stos
or
das
aad
das
sub
dec
mov
repnz
ror
sub
in
shl
loopne
mov
loope
pop
adc
out
jne
pop
sbb
or
adc
lods
dec
pushf
shr
sti
jle
dec
aas
lock
test
xchg
push
xor
mov
aas
pop
adc
popa
ja
jb
popf
mov
pop
xor
and
or
mov
mov
xor
xchg
cs
mov
add
fcomp
pop
jl
in
retf
mov
into
dec
xchg
popa
sub
mov
stos
xchg
loop
mov
addr16
stos
movs
loope
jne
int3
test
test
ss
fs
add
daa
mov
mov
add
sub
lea
stc
repnz
retf
jnp
nop
mov
inc
sub
cdq
jle
sub
js
js
fsubr
aad
push
xor
mov
scas
sti
mov
stos
mov
mov
xchg
ret
mov
imul
sub
push
xchg
mov
mov
loope
and
js
xlat
popa
pusha
jne
out
add
dec
dec
hlt
daa
int
mov
cmp
ret
test
idiv
mov
jb
nop
fistp
xor
mov
fwait
and
sbb
xchg
xlat
cli
add
or
sub
jmp
jge
sbb
lock
add
xor
dec
nop
push
xchg
mov
pop
test
cmc
mov
and
mov
adc
xchg
dec
inc
inc
jmp
push
mov
mov
push
imul
adc
xchg
scas
xor
jmp
gs
ret
jno
push
xor
cld
jae
ins
daa
cs
jp
mov
sub
les
cmp
jns
or
lahf
xchg
dec
mov
test
int
jmp
sbb
enter
jae
dec
pop
mov
and
pop
cs
jecxz
or
inc
sub
xchg
aas
cli
mov
or
mov
ret
jge
jmp
adc
movs
(bad)
outs
mov
adc
ins
push
cmp
fimul
jmp
icebp
cmc
xchg
dec
cmps
stc
pop
pop
inc
stos
xchg
fist
stos
mov
in
jns
push
cmp
inc
loop
and
mov
iret
fild
mov
cld
loop
pop
jno
dec
bound
mov
js
xchg
mov
push
movs
ret
xchg
adc
fisub
mov
or
cmps
retf
test
sar
ffreep
arpl
fst
sbb
add
xor
idiv
xor
cmp
(bad)
(bad)
call
jae
shl
je
jae
xchg
adc
outs
mov
xor
hlt
cmps
ret
lods
cmp
dec
(bad)
dec
in
sbb
cmp
dec
adc
mov
das
xor
push
dec
mov
jae
pop
inc
mov
cmp
xchg
(bad)
jne
add
xchg
fistp
fisubr
xor
push
das
outs
mov
add
cmp
in
sub
std
dec
add
cmp
pop
xor
nop
push
push
repnz
xchg
out
sbb
sub
jge
lods
daa
pop
leave
jno
jecxz
push
aam
data16
std
pushf
mov
add
test
mov
mov
mov
dec
test
mov
loope
lock
cmp
(bad)
cmp
rcr
cwde
sub
out
(bad)
xor
and
scas
dec
rol
mov
(bad)
das
out
mov
pop
dec
test
sahf
jae
xchg
shl
pop
cmp
test
cmp
push
enter
or
push
cmp
sub
call
icebp
int3
addr16
pushf
sub
push
test
cld
rcr
push
mov
push
mov
pusha
clc
shl
lds
mov
daa
inc
lock
mov
int3
or
push
jns
adc
pop
or
in
sbb
imul
adc
cld
in
xchg
jle
mov
sub
sbb
addr16
jp
mov
arpl
xchg
hlt
push
icebp
aad
mov
and
imul
je
jae
adc
jg
cmp
icebp
fbld
(bad)
movs
test
sub
pushf
cs
out
in
or
rcl
xchg
cs
enter
mov
add
cmc
sahf
lds
sub
and
hlt
js
not
jp
ror
fst
jmp
xchg
push
(bad)
sub
arpl
and
mov
push
fprem1
inc
push
or
js
inc
xlat
in
aas
pop
cmp
dec
stos
cmps
rcr
xchg
push
mov
sub
push
sub
mov
mov
adc
repnz
movs
xchg
sub
mov
in
adc
lods
js
inc
pop
or
mov
xor
fidivr
loop
sbb
xor
inc
outs
pop
or
fisttp
stos
(bad)
cmp
fild
and
add
jl
pushf
(bad)
xchg
stos
pusha
jbe
adc
pop
out
(bad)
cmp
xchg
xchg
fnstcw
es
iret
cmp
mov
mov
push
dec
sbb
icebp
in
mov
aaa
fistp
jo
popf
fistp
mov
xor
dec
mov
fwait
dec
(bad)
shl
data16
aam
retf
push
nop
jl
test
loope
push
dec
xchg
inc
imul
aas
pop
cmp
cmp
sub
cmp
push
inc
jbe
adc
jae
sbb
sub
outs
(bad)
out
adc
mov
inc
and
inc
or
in
dec
test
adc
pop
hlt
xchg
xchg
int3
adc
repz
jbe
enter
call
xor
jnp
sub
lds
fs
pop
bound
mov
cli
and
sub
loopne
lods
pop
sbb
jl
nop
aam
xor
jmp
ss
jp
xchg
call
mov
adc
hlt
inc
js
inc
push
retf
clc
cdq
ret
call
mov
jnp
jmp
xchg
sti
aad
add
sti
mov
lods
sar
cmc
add
jns
es
or
push
pop
pop
inc
dec
jae
es
xchg
ss
xor
push
imul
add
nop
fsub
aaa
sub
xor
adc
icebp
push
fisub
mov
in
xor
stos
cmc
sbb
loop
and
or
jbe
lods
ret
dec
xchg
clc
jmp
loopne
les
shr
dec
cld
push
sub
std
jle
jo
mov
cld
xchg
cmps
in
ja
cmp
cmc
or
jp
xchg
cmp
add
loopne
mov
xchg
adc
or
shr
imul
push
xchg
adc
sbb
movs
test
(bad)
and
mov
(bad)
shl
fs
sbb
sub
fadd
push
out
(bad)
stos
iret
add
inc
pushf
cmc
out
mov
mov
ds
ret
jns
lods
cmp
add
rcr
sbb
and
push
jnp
test
sar
shl
xchg
add
aaa
int3
sub
pop
xchg
cmc
xchg
sub
pushf
aam
(bad)
hlt
mov
cmps
fmulp
in
mov
xchg
dec
and
mov
jg
mov
mov
sub
push
outs
js
xchg
repz
shr
cdq
xchg
pop
xchg
pop
dec
pop
sbb
out
and
enter
cmps
or
ret
lods
in
loope
jmp
xchg
pop
nop
mov
cmp
cmc
mov
and
(bad)
xchg
pop
and
jl
jbe
xchg
inc
fs
and
daa
bound
adc
xchg
jge
leave
and
iret
and
(bad)
imul
jle
mov
mov
sbb
adc
arpl
xor
cld
out
jo
sub
sti
xchg
rcl
mov
out
imul
xor
adc
push
pop
rcr
and
xchg
jb
es
inc
pop
aas
loop
cmp
mov
jo
and
out
or
aam
cwde
pop
mov
cmp
pushf
jb
sub
std
fs
pop
(bad)
adc
dec
jle
movs
(bad)
fisttp
lods
push
sahf
lahf
sub
ret
sub
vmwrite
test
mov
adc
pop
xor
cmc
adc
xchg
loope
retf
and
xor
mov
push
cmps
sbb
sbb
icebp
aam
(bad)
fcmovbe
addr16
mov
push
mov
mov
je
sbb
and
loop
pop
push
mov
in
jo
and
test
inc
bound
cmp
push
xlat
mov
in
sbb
mov
mov
mov
cmp
test
mov
xor
xlat
or
jne
or
mov
inc
out
inc
cld
jbe
shr
popf
cld
push
adc
sub
fmul
inc
not
mov
xchg
jmp
fdiv
push
fs
loopne
lods
hlt
add
dec
dec
sub
and
and
leave
ss
shr
sub
mov
xor
xchg
add
dec
jecxz
ds
in
rol
sbb
mov
cmp
add
adc
popf
jmp
mov
into
or
jne
xchg
sbb
pop
xchg
adc
in
es
add
dec
push
cmp
ins
ds
adc
pushf
xchg
mov
add
repnz
cmp
cli
sub
push
aad
jae
add
sub
mov
xor
dec
in
pusha
xor
adc
jae
retf
(bad)
jle
clc
ss
jns
mov
mov
cld
jb
xchg
add
xchg
mov
cli
sub
and
in
dec
adc
mov
hlt
add
pop
cmp
into
scas
neg
sbb
fimul
pusha
jo
mov
daa
inc
outs
jecxz
enter
ffreep
mov
call
jl
sub
pushf
jmp
fsubr
mov
aas
adc
arpl
mov
(bad)
mov
inc
shr
or
inc
fisttp
mov
add
into
das
ror
xchg
fild
mov
pusha
loope
dec
dec
sar
add
mov
xor
popf
rcl
jecxz
mov
retf
lock
jmp
lock
outs
adc
mov
dec
loopne
adc
lock
imul
iret
stc
popf
push
(bad)
das
idiv
xchg
adc
shr
or
adc
pop
fmul
lahf
clc
gs
mov
and
(bad)
das
mov
test
shr
fldcw
or
xor
jne
in
dec
fisttp
stos
cdq
push
cmp
xchg
sahf
imul
push
and
test
ret
std
ss
inc
push
add
in
iret
sub
push
and
cmp
and
fs
lock
push
jmp
mov
and
sub
dec
xchg
cs
and
jnp
(bad)
mov
in
mov
jecxz
fwait
rcr
shr
pusha
loopne
cli
stos
cmp
xchg
xor
jge
mov
mov
ror
stc
fwait
dec
(bad)
xlat
inc
(bad)
lock
into
mov
lods
jns
sub
jge
lock
imul
jg
in
nop
(bad)
lock
sbb
mov
jg
lds
mov
xchg
add
jmp
out
pop
lahf
add
inc
fld
pop
push
in
loope
xchg
sbb
push
cmp
leave
xor
xchg
test
(bad)
aam
and
imul
bound
cmp
lods
test
jmp
jge
cmp
dec
psubw
xchg
xchg
push
sbb
popa
xchg
fwait
in
sbb
rol
mov
mov
mov
cmp
inc
push
xchg
(bad)
xor
inc
pop
sub
xchg
xor
mov
movs
ret
adc
dec
mov
xchg
mov
hlt
in
les
sbb
sbb
xchg
std
imul
and
xchg
movs
jno
(bad)
mov
jmp
outs
push
test
mov
add
add
lahf
ret
xchg
or
js
lods
popf
sbb
test
cs
mov
lds
mov
lods
sub
adc
popa
mov
lods
push
cmp
sub
icebp
inc
cmp
lea
push
xchg
xchg
dec
push
sub
jo
xchg
fwait
dec
jns
rcr
loope
ret
sar
jg
loopne
(bad)
lock
inc
scas
nop
ret
mov
inc
ficomp
loope
dec
push
icebp
cmc
xchg
ja
rcr
xor
movs
pop
stos
xchg
pop
outs
(bad)
pop
or
repz
(bad)
cdq
xchg
jno
jb
mov
sub
xchg
test
and
scas
ss
jmp
ds
movs
shl
jns
fist
jae
in
js
or
xchg
cs
jne
xor
push
and
movs
shr
loopne
fnstsw
mov
je
fdivr
mov
jo
inc
arpl
loopne
jne
push
imul
or
mov
sbb
mov
mov
mov
sbb
ficomp
fnstsw
test
xchg
xor
movs
add
in
test
cli
push
adc
adc
sbb
adc
arpl
aaa
pop
pusha
int3
jmp
pop
cmps
xor
int3
test
push
loope
dec
call
and
retf
fcomp
loop
ja
mov
jmp
dec
sub
adc
fidiv
mov
ret
in
pop
nop
jmp
les
fcomp
icebp
call
xchg
push
pop
add
repz
xchg
jle
mov
lsl
js
mov
ficom
loop
jnp
aaa
mov
push
test
cld
pop
rcr
push
add
add
push
and
mov
xlat
sub
out
mov
stos
ins
cmp
test
mov
outs
cmp
in
aam
sub
pop
sub
fistp
add
lock
mov
mov
ja
int3
add
pop
inc
iret
jge
shl
mov
xchg
and
cmp
int3
div
cmp
lahf
test
ret
mov
xor
and
sub
rcr
xchg
mov
dec
xor
xchg
adc
(bad)
sub
push
dec
in
stc
cmp
jg
dec
inc
(bad)
pop
mov
sbb
push
push
xchg
xor
cmp
jne
or
jnp
test
in
inc
loopne
dec
sbb
jge
out
hlt
sar
retf
push
sub
rcr
mov
addr16
mov
ja
inc
add
imul
icebp
(bad)
shl
cmp
pop
aas
xchg
push
xchg
jne
lods
les
lods
dec
push
xchg
in
(bad)
rcl
xchg
and
fdiv
xchg
rol
adc
cdq
loopne
pusha
dec
in
test
and
push
jne
add
sti
lea
xchg
jbe
mov
cmp
xchg
enter
sahf
or
jmp
jl
mov
in
icebp
test
js
jo
adc
mov
adc
mov
sub
and
and
sbb
cmps
add
add
(bad)
not
arpl
jbe
(bad)
add
pop
push
mov
pop
daa
or
out
mov
add
adc
xor
sbb
sub
pushf
jae
mov
mov
clc
ficomp
push
mov
add
hlt
in
mov
xchg
mov
and
mov
loopne
je
mov
mov
movs
sahf
outs
(bad)
lock
call
lahf
jae
xor
fnstsw
fldenv
inc
dec
mov
xchg
into
dec
outs
loopne
in
inc
xchg
push
ficom
pop
je
add
aam
and
xchg
loopne
sbb
sbb
push
push
cdq
es
mov
jns
aas
ja
or
sbb
sbb
add
xchg
(bad)
data16
adc
adc
cmps
jge
add
cmp
fistp
cmp
dec
movs
add
sub
push
jne
xchg
push
rcr
adc
jmp
call
(bad)
std
or
push
push
inc
les
gs
std
jne
adc
shl
add
movs
cmps
pop
add
test
mov
mov
out
shl
in
mov
pop
call
xor
fs
xchg
ret
inc
jns
and
sub
pop
cmp
or
push
imul
les
xor
cmps
jle
mov
jge
pusha
and
add
in
and
cdq
or
xchg
xchg
imul
ret
mov
xor
add
sbb
js
mov
pop
int3
rcr
mov
js
ss
cmp
dec
sub
das
sub
loop
push
call
sub
imul
pop
pusha
cmc
pop
add
push
cmp
push
fcmovu
or
mov
mov
jae
xchg
push
cmps
stos
mov
in
gs
push
das
lods
and
movs
pop
adc
pop
rol
stos
xor
in
jg
out
ror
das
inc
bound
(bad)
mov
out
ja
cmp
adc
daa
pop
inc
or
es
int
hlt
mov
sub
sar
stc
pop
mov
adc
loope
fs
fnsavew
ins
push
inc
xor
xchg
cmp
dec
jmp
and
mov
iret
fs
push
pop
(bad)
mov
pop
and
push
nop
fisub
imul
cmp
shl
loop
sbb
mov
xchg
push
sbb
xor
mov
outs
icebp
loop
dec
mov
pop
(bad)
bound
push
call
cmp
jo
shr
cmp
lds
xchg
fdivr
cmp
stos
push
outs
push
scas
cmp
in
arpl
xchg
mov
jae
std
ja
sbb
pop
dec
cmps
pop
xchg
hlt
(bad)
ffreep
sub
scas
jb
xchg
add
xor
mov
outs
ret
cld
xchg
dec
loopne
pushf
push
movs
cmp
xor
jae
pop
cwde
mov
hlt
mov
int
jne
jg
cdq
out
xor
jbe
dec
mov
or
add
xchg
and
stc
push
jle
or
sbb
lods
ins
(bad)
sub
shr
xor
loopne
fild
out
fisubr
xchg
les
jae
push
je
neg
cmp
fadd
mov
pop
adc
inc
cmp
cld
(bad)
gs
pop
leave
jle
xor
pop
mov
ss
xlat
push
jmp
sbb
sub
xor
sbb
je
cmp
inc
xor
push
cdq
inc
adc
sbb
js
xchg
xor
jg
mov
ret
mov
inc
shr
jae
jp
mov
daa
mov
push
out
cmps
and
inc
adc
aaa
add
hlt
je
jne
iret
jnp
pop
test
adc
aad
push
mov
cwde
jno
add
(bad)
fpatan
dec
outs
je
sub
arpl
and
xchg
pop
mov
clc
pop
cli
ror
dec
sbb
sti
mov
jb
cdq
test
clc
xchg
mov
push
retf
daa
adc
sbb
mov
mov
jmp
push
pop
sbb
in
js
cmp
inc
fs
ss
dec
xchg
je
aad
xchg
es
cmp
sbb
xchg
sbb
sub
jge
rcl
mov
xchg
cmp
jge
adc
ins
cdq
adc
(bad)
mov
das
jb
adc
dec
mov
clc
hlt
inc
mov
in
push
cli
jle
test
in
or
les
pusha
sahf
and
xlat
pop
xchg
fcomp
clc
rol
adc
xchg
repz
and
(bad)
mov
les
jnp
pusha
xchg
inc
lds
shr
sub
addr16
or
inc
arpl
in
dec
cmp
adc
wbinvd
cli
(bad)
push
add
fwait
and
xchg
clc
xchg
sub
and
xor
daa
dec
icebp
jae
push
dec
cmp
mov
iret
packssdw
arpl
inc
xchg
adc
xchg
enter
jb
lods
xchg
push
mov
jmp
clc
sub
vunpcklps
mov
push
add
jbe
mov
pop
mov
bound
cmp
sub
pop
push
jmp
pop
loopne
mov
mov
sbb
push
leave
xchg
cwde
(bad)
mov
pop
add
cmp
pop
out
sar
push
sbb
ins
jae
loopne
clc
mov
jne
adc
lahf
jmp
movs
movs
call
rcr
(bad)
repnz
sbb
inc
icebp
out
ja
test
leave
pusha
mov
xor
jbe
fnsave
int
in
adc
dec
dec
mov
fisub
mov
mov
pusha
or
jmp
pop
dec
je
cmp
pop
sub
dec
or
je
cmps
push
sbb
xor
xchg
dec
push
push
jle
dec
cmp
cmps
mov
adc
les
sub
sar
cmps
cdq
jmp
lds
mov
xor
rcr
aam
jmp
fmul
add
or
popf
(bad)
cmp
sub
sub
mov
(bad)
ss
push
xor
loope
clc
and
test
hlt
and
fistp
hlt
jo
clc
popf
xchg
scas
sub
cmp
push
mov
daa
xor
pop
iret
add
push
sub
cmp
popf
push
push
out
js
sbb
jae
movs
(bad)
jmp
outs
adc
pop
mov
pop
out
mov
jl
push
scas
add
xchg
in
out
js
xchg
or
pop
stos
cld
in
xchg
cs
jmp
xchg
retf
fdivr
mov
mov
shl
xlat
sub
cli
sbb
sub
popf
jle
dec
jecxz
popf
inc
pop
sbb
pop
sub
jb
(bad)
iret
sub
xchg
xchg
mov
ret
inc
mov
loope
and
sub
cli
pop
mov
daa
imul
push
inc
int3
xor
fcmovbe
(bad)
(bad)
rcr
lock
call
adc
mov
mov
dec
aam
jbe
xor
and
pop
and
(bad)
hlt
loopne
repz
inc
xchg
mov
popf
or
test
lock
xor
hlt
scas
(bad)
xor
fstp
scas
sub
retf
cmp
(bad)
xor
aam
push
addr16
shr
in
mov
mul
lods
xor
xchg
jae
cwde
retf
imul
les
lods
gs
(bad)
mov
xchg
(bad)
jecxz
mov
mov
pop
sub
xchg
pop
test
inc
jp
cs
imul
pop
mov
repz
sub
fwait
sbb
sbb
ja
cmc
jle
cmc
pop
sub
xchg
cmp
mov
sub
mov
mov
stos
repz
adc
mov
cwde
mov
xor
mov
mov
(bad)
adc
pop
jmp
push
in
mov
xor
jnp
dec
push
or
add
icebp
std
mov
and
aam
mov
mov
scas
and
mov
lods
inc
sub
dec
dec
iret
fs
xchg
out
and
movs
sbb
call
out
xor
jmp
hlt
cmc
mov
xchg
test
aaa
jl
sbb
xchg
xor
loopne
mov
rcr
mov
je
fsub
(bad)
jl
add
cmc
cdq
or
jp
jl
push
pop
mov
movs
dec
imul
xor
out
jnp
jnp
imul
in
mov
push
sar
sub
stc
nop
cli
mov
aam
sbb
dec
mov
xor
movs
xor
xchg
pushf
push
ja
nop
or
cwde
scas
push
adc
cdq
sub
lds
pusha
sub
push
adc
adc
mov
mov
loope
movs
add
cmc
in
pop
jns
dec
iret
clc
and
pop
mov
adc
test
add
cmp
xchg
in
push
and
clc
mov
sub
sub
cmc
dec
sbb
dec
sar
stos
jmp
or
pusha
xchg
or
popw
rcr
sub
xchg
je
cld
sub
xor
cmc
mov
dec
icebp
cli
outs
cwde
jne
push
or
movs
mov
shl
fistp
popf
js
les
jmp
jg
lahf
cmp
mov
sar
adc
adc
dec
and
push
mov
movs
adc
mov
adc
stc
dec
shl
and
and
xchg
or
pusha
sub
mov
aas
fnstcw
test
icebp
repnz
mov
icebp
call
fwait
mov
and
out
call
dec
movs
repz
adc
xor
fst
sbb
and
pusha
xor
cmp
xor
jb
lds
pop
mov
rcl
je
mov
test
pop
and
push
inc
pop
jmp
pop
pop
dec
or
mov
dec
cs
std
inc
jecxz
push
cmp
xchg
inc
das
push
cmp
inc
retf
mov
outs
pop
(bad)
icebp
fld
sti
xchg
imul
xchg
ret
in
sbb
dec
xlat
push
push
daa
dec
xor
jno
mov
loop
add
push
(bad)
repnz
xchg
aam
js
dec
mov
xchg
jnp
jno
pusha
clc
jle
scas
sbb
mov
xchg
pushf
das
loope
push
repnz
hlt
out
lds
cmp
ss
mov
cmc
aas
popa
sub
and
push
cmp
fisubr
call
xchg
cmp
adc
mov
pop
push
inc
cmp
sub
call
pop
(bad)
push
cmp
push
shl
les
int3
push
cmc
jmp
mov
jae
mov
imul
jae
pop
jp
in
adc
pusha
or
xchg
mov
mov
cli
(bad)
jb
xor
ds
faddp
jmp
mov
jp
push
dec
call
dec
jae
pop
pop
dec
or
sub
mov
imul
gs
mov
hlt
sar
and
(bad)
and
sbb
mov
outs
imul
mov
xchg
xchg
xor
xchg
pop
xchg
mov
pop
xor
jl
lds
xor
jne
rcr
(bad)
jnp
es
fild
and
inc
dec
mov
call
cld
inc
adc
out
and
sbb
sub
cmp
das
aas
sbb
sbb
push
mov
in
outs
mov
cli
iret
sub
jmp
lahf
xchg
out
in
aas
adc
std
adc
movs
mov
inc
jl
icebp
push
out
imul
cmp
in
mov
in
pop
jno
pop
out
mov
adc
adc
stc
cmc
jmp
dec
xor
cmc
or
cs
pusha
xchg
mov
push
pop
lea
(bad)
les
cmp
outs
pop
popf
jnp
pop
es
sbb
test
add
cs
loope
cmp
mov
pop
enter
daa
and
out
push
mov
movs
adc
mov
popa
(bad)
cld
pop
adc
cdq
shl
fnstenv
pop
(bad)
je
xchg
movs
and
js
test
ins
lods
pop
push
jnp
xchg
mov
push
sbb
add
call
jae
mov
clc
xchg
or
repnz
arpl
mov
mov
popf
pop
pusha
adc
cli
pop
popa
aas
lds
push
xor
test
pop
add
jne
sub
(bad)
sbb
mov
dec
jl
es
inc
(bad)
and
clc
cmp
loope
cld
cmps
push
std
pop
outs
sbb
hlt
xor
inc
popf
cmp
loope
das
jae
sub
xchg
sbb
jae
ret
je
mov
arpl
cwde
lods
push
dec
mov
int3
in
xchg
imul
iret
sub
inc
adc
jecxz
fimul
sbb
mov
pop
xor
popf
jae
sub
sbb
bound
cmp
mov
adc
xor
cmps
out
xchg
mov
inc
rcl
jl
rol
mov
xchg
cs
in
xchg
sub
lods
fidiv
sub
push
mov
and
push
ds
in
xor
dec
hlt
add
lods
adc
jbe
push
dec
pop
pop
sub
aad
xor
or
sahf
(bad)
(bad)
aam
fisttp
daa
inc
xchg
(bad)
xor
or
pop
push
pop
pop
cmp
aam
mov
loope
mov
mov
and
sbb
ins
hlt
mov
jb
push
jae
aas
jg
cmp
sub
je
retf
in
jo
sbb
lods
mov
addr16
push
inc
dec
mov
sub
lea
ins
cmps
cmp
jp
(bad)
outs
das
dec
or
mov
jne
mov
fistp
pusha
lds
xor
jge
test
js
hlt
scas
mov
loop
(bad)
xchg
out
jbe
pop
cli
enter
push
and
xor
sti
ret
dec
les
cmps
cs
cmc
bound
inc
shl
test
and
jbe
xor
sbb
ins
mov
pop
cmps
push
leave
ins
or
jae
pusha
hlt
xchg
mov
dec
jb
in
js
xchg
mov
inc
jns
stos
(bad)
push
fsub
dec
out
pop
ins
movs
int3
ficomp
pop
or
push
sub
sub
mov
gs
push
pushf
out
fnsave
sti
ret
dec
xchg
in
add
cmc
sub
mov
xchg
mov
cli
push
nop
std
cld
(bad)
stos
ret
and
pop
mov
mov
add
or
movs
xchg
loopne
jge
test
ja
and
sbb
cmc
inc
sbb
retf
sub
mov
jo
xchg
inc
inc
pop
lock
scas
sub
mov
imul
push
jne
shr
stos
xor
shl
bound
daa
mov
push
push
mov
mov
xchg
je
call
lock
rol
es
xor
xor
push
iret
cmps
jne
ret
and
data16
xchg
sbb
les
adc
(bad)
xor
pop
or
and
pop
jne
and
pop
cmp
dec
int3
and
dec
stos
xchg
cli
outs
sar
add
in
xchg
test
pop
(bad)
test
repz
xchg
adc
xchg
and
cmps
sub
or
inc
mov
div
add
cmp
ins
in
ds
mov
push
push
loope
jb
je
mov
popf
fnstcw
xchg
call
add
mov
loope
inc
cmp
lds
fsubr
jo
cmp
bound
cdq
enter
mov
fistp
mov
sbb
mov
xor
mul
mov
push
push
int
popa
xor
imul
rcr
jo
fcom
repz
sub
dec
pop
je
sub
or
movs
outs
clc
std
pop
or
mov
jae
repnz
cmp
or
(bad)
in
hlt
adc
mov
cdq
dec
aam
stos
pop
mov
je
adc
stos
leave
icebp
call
iret
mov
js
popa
dec
sub
mov
and
in
leave
test
sub
pusha
xchg
pop
add
and
adc
xchg
jp
mov
sub
xchg
push
push
xchg
jbe
data16
jle
sar
or
mov
add
xchg
xlat
ret
mov
pop
mov
push
cmp
sub
jb
cmp
pushf
lahf
xchg
xor
mov
cwde
cmp
repz
push
pop
(bad)
in
test
pusha
pushf
ins
ds
xor
pop
sbb
inc
inc
xchg
adc
movs
sub
push
retf
and
aam
repz
test
addr16
stc
iret
dec
not
xor
sub
lock
push
and
or
pop
es
lods
mov
sbb
sub
mov
and
(bad)
add
jb
sub
adc
or
cmp
inc
pop
adc
xchg
dec
xor
sbb
xchg
pop
fcomp
in
cli
xor
cmps
dec
inc
cmc
push
sti
ins
push
xchg
test
sahf
inc
loopne
jl
cmp
int
xchg
xor
stos
mov
icebp
sub
xchg
aam
fs
fs
aas
jp
test
sub
pushf
mov
fild
push
cmc
mov
je
jne
xor
cmp
je
pop
jns
js
data16
pop
lods
outs
repz
leave
lds
loope
shr
cmp
jnp
sub
loop
in
aas
es
mov
sub
je
and
pop
or
mov
and
nop
xchg
clc
std
lahf
iret
mov
or
das
xchg
sbb
mov
cmp
xor
add
into
add
in
push
pop
idiv
mov
push
daa
ins
xor
(bad)
mov
xchg
mov
xchg
or
leave
fisttp
inc
addr16
fisub
lahf
outs
fcmove
imul
int
xchg
dec
ins
ret
pop
ins
pop
test
push
push
mov
mov
pop
pop
inc
sbb
repz
(bad)
sub
loop
shr
xchg
stos
mov
lods
imul
jnp
clc
mov
lock
mov
shl
lahf
stos
int3
mov
pop
push
add
mov
rcl
leave
jns
mov
(bad)
pop
fwait
ja
cdq
das
sub
lds
and
call
in
mov
cmp
pop
scas
xor
(bad)
int
cmp
test
jns
pop
ret
push
or
jmp
mov
jns
jle
clc
int3
xchg
inc
bound
dec
adc
jl
icebp
dec
xor
pop
cmc
cmps
xchg
pop
push
int3
fcom
sub
jp
inc
add
jae
daa
dec
jg
xchg
push
je
popf
jge
lahf
adc
inc
loope
dec
push
sbb
scas
adc
pop
push
sub
inc
jp
xchg
(bad)
fild
test
pusha
inc
add
hlt
dec
loopne
test
mov
js
js
adc
push
mov
ja
sub
adc
inc
or
mov
retf
js
pop
je
xchg
jns
in
xchg
push
cld
inc
adc
fdivr
leave
movs
into
push
jl
jle
lods
sub
aad
lahf
jp
dec
mov
cmp
xchg
adc
mov
mov
je
sub
sub
cld
pusha
loopne
pushf
std
fnstsw
outs
scas
push
cld
mov
cmp
adc
(bad)
mov
lods
out
outs
push
sbb
sti
(bad)
mov
xchg
adc
xchg
xor
push
push
in
dec
pop
into
mov
push
(bad)
xchg
sbb
sub
push
int3
ss
jmp
mov
push
stos
das
cld
mov
test
pop
shl
sub
les
add
cmp
mov
add
mov
inc
das
or
adc
(bad)
pop
push
xchg
mov
jle
sbb
ret
shl
les
aas
fist
cmc
out
mov
cwde
xchg
or
push
adc
jmp
xchg
cmp
daa
icebp
iret
call
fisubr
sbb
int3
fwait
mov
inc
mov
(bad)
jl
adc
loope
and
jnp
push
out
arpl
sar
movs
stc
mov
cdq
push
shr
inc
inc
aam
and
adc
retf
mov
jo
xchg
aaa
push
push
and
jmp
adc
push
inc
adc
arpl
sub
mov
inc
loopne
cmc
js
add
pop
loope
icebp
push
(bad)
in
fmul
jmp
adc
xchg
xchg
repnz
jp
xchg
or
sar
push
imul
pop
xor
scas
outs
(bad)
xchg
int3
out
mov
shr
in
xor
loope
gs
mov
js
dec
aas
sub
not
cmc
retf
pop
call
outs
(bad)
mov
movs
(bad)
push
mov
addr16
sub
add
aaa
iret
jbe
add
gs
add
or
mov
setnp
loope
cmps
pop
xrelease
mov
pop
out
mov
cmp
int3
mov
pop
jmp
and
jmp
(bad)
frndint
inc
cld
push
out
pop
loopne
out
test
scas
pop
jp
cmps
xchg
dec
fs
pop
movs
(bad)
test
sub
or
add
pop
sub
mov
push
lods
push
add
imul
loope
addr16
push
dec
push
repz
adc
js
xchg
test
cld
call
jge
cs
dec
xchg
inc
data16
cmp
popf
cmp
xchg
mov
int3
stos
fdiv
dec
sahf
jno
jle
test
jbe
mov
in
clc
sti
fld
xchg
dec
hlt
pusha
leave
ins
mov
pop
push
mov
mov
mov
(bad)
mov
cwde
enter
xchg
push
jo
pop
jno
adc
movs
xchg
push
ror
push
loopne
dec
jmp
out
mov
aad
inc
(bad)
cwde
xchg
and
cmp
shl
clc
cld
loope
bound
adc
loope
inc
std
pop
outs
in
dec
pop
adc
mov
imul
int3
add
sbb
and
jle
mov
cli
xchg
popa
mov
in
mov
jp
push
jae
sub
push
adc
pusha
fld
loop
jl
sbb
cmp
cmp
mov
jp
jnp
(bad)
es
inc
fs
pop
push
xchg
mov
inc
dec
xor
push
push
cmp
outs
pushf
mul
push
pop
dec
loopne
outs
cmp
push
ja
mov
mov
cmp
adc
pop
(bad)
cmps
and
loope
push
jbe
loop
and
aas
push
or
(bad)
xor
sti
fdivr
shl
push
jge
push
sahf
dec
or
movs
lods
pop
not
hlt
int
stos
dec
inc
jg
sub
ret
or
xchg
dec
mov
call
loop
aas
cmps
adc
push
pushf
sahf
loopne
jns
adc
movs
sub
xor
pop
(bad)
inc
xchg
fs
frstor
imul
bound
mov
inc
and
popf
push
mov
add
stos
xchg
iret
dec
xchg
push
imul
aad
xchg
cwde
icebp
lods
dec
sub
in
push
mov
or
mov
xor
data16
sbb
sar
and
mov
add
xor
or
xchg
xor
sub
or
gs
sub
in
int3
jge
mov
push
push
mov
(bad)
loope
adc
mov
push
pop
loop
dec
jne
inc
ss
push
mov
jbe
les
cmp
dec
xchg
es
(bad)
push
jecxz
(bad)
jo
or
dec
sbb
es
repnz
mov
sti
(bad)
add
mov
test
adc
cli
dec
test
pop
in
xor
fdivr
xchg
push
movs
push
mov
pop
daa
cmp
add
js
pusha
mov
mov
(bad)
sub
jge
pop
add
enter
call
mov
scas
adc
mov
sbb
push
sbb
cmps
push
je
adc
jl
dec
jne
pop
push
mov
jns
xchg
gs
or
movs
stc
or
fnstsw
imul
mov
xchg
pop
adc
inc
clc
sti
xor
xor
enter
mov
pushf
outs
inc
ret
push
test
call
rol
xor
sti
rcl
mov
pop
loopne
je
fisttp
push
push
mov
shl
mov
test
cwde
lock
or
lea
cmp
push
sbb
push
mov
ror
jbe
push
cmp
bound
pop
cmp
hlt
leave
rol
iret
addr16
js
call
push
jle
pop
addr16
xchg
cs
mov
jne
in
rcl
(bad)
push
aas
xchg
dec
jecxz
xchg
daa
xchg
push
ja
shr
fisttp
cmps
and
push
pop
test
mov
retf
mov
jge
fdiv
and
ret
adc
sbb
ins
fsub
pop
loop
pop
(bad)
and
mov
movs
ins
jno
stos
nop
retf
outs
in
mov
sbb
adc
scas
pop
xchg
fdivr
pop
jle
xchg
lock
sub
(bad)
cmp
adc
imul
daa
imul
add
mov
sub
xchg
mov
push
lods
call
jp
fidiv
mov
(bad)
add
mov
movs
pop
push
adc
das
adc
scas
loop
dec
je
mov
daa
sub
fidivr
loop
jnp
cdq
loope
push
ret
jmp
ins
mov
pop
inc
(bad)
cld
dec
cs
cmp
mov
sar
add
pop
mov
fwait
pop
mov
mov
(bad)
stc
les
(bad)
loop
es
adc
mov
xchg
imul
jle
dec
xchg
push
lea
test
push
jns
xchg
fild
pop
cs
fldenv
push
mov
aam
cmc
fs
mov
xchg
mov
(bad)
adc
pop
sar
std
aaa
xchg
sbb
add
rep
mov
and
(bad)
(bad)
lahf
sub
and
movs
push
out
xchg
nop
dec
mov
ja
imul
push
fcomp
inc
in
xlat
dec
xor
ret
fistp
call
js
mov
mov
loop
loope
cmp
cld
(bad)
sub
dec
repz
xchg
mov
inc
call
imul
xchg
xor
mov
fsub
rcl
or
push
in
dec
push
outs
pusha
rcl
or
cmc
mov
test
fwait
jg
pop
aaa
mov
pop
retf
lock
cmp
scas
sub
push
mov
fnsave
call
fsubr
ficomp
icebp
cli
xchg
pop
loop
movs
push
jb
rcl
in
les
xor
mov
ds
cdq
jns
repz
lea
push
jns
pop
inc
mov
sub
adc
add
add
jne
fnsave
mov
cdq
sbb
cmps
xor
push
or
outs
repz
js
fst
cmc
rcl
push
enter
xchg
test
push
xchg
neg
xor
sbb
mov
push
and
jl
clc
or
xchg
mov
xor
mov
cmp
into
lods
mov
jmp
out
hlt
iret
mov
jb
mov
and
xchg
adc
or
jnp
lods
lods
pop
les
cld
xchg
ins
es
adc
xchg
mov
ror
cmp
loopne
jae
jbe
or
(bad)
lahf
xchg
clc
(bad)
push
sti
xor
int
mov
xchg
ret
hlt
jle
mov
mov
stc
jb
out
jns
and
fcom
rcl
pop
mov
xor
cmps
mov
dec
test
cld
add
pop
pop
push
fisttp
jmp
push
retf
push
inc
adc
or
nop
or
out
jne
cmc
gs
add
jecxz
loop
pop
fs
mov
test
xchg
repnz
mov
mov
sub
mov
int
mov
cmps
jo
js
cmp
sub
lds
fdiv
jle
xor
jns
shl
cmc
mov
mov
cmc
(bad)
lock
and
int
js
lea
sub
jmp
stos
xor
out
int3
clc
xchg
daa
iret
addr16
(bad)
iret
pop
aam
push
scas
and
pusha
jo
pop
push
adc
cwde
fistp
lock
mov
inc
jmp
xor
fisttp
xor
xlat
es
cmp
push
fsub
push
jmp
cmp
fistp
es
imul
jle
loop
push
jmp
je
or
jl
mov
pop
or
nop
out
push
sub
xor
test
aas
shl
push
xchg
inc
js
cmc
inc
clc
mov
movs
adc
and
cmc
and
push
sbb
movs
inc
xor
mov
out
pop
sub
mov
jo
rol
xchg
mov
push
lods
jne
jbe
or
jp
jmp
popf
bnd
mov
data16
repz
sbb
mov
jp
pop
cmp
xchg
in
pop
jnp
rcr
bound
and
mov
sub
outs
jns
mov
mov
cmp
aad
shl
or
or
enter
cmc
xadd
jge
ret
rol
js
retf
pushf
pop
or
(bad)
in
ret
int
fstp
mov
push
xor
nop
add
enter
shr
iret
pushf
xor
jbe
push
push
arpl
leave
bswap
dec
xorps
movs
cmp
jmp
popf
jle
retf
cs
or
bound
adc
inc
shl
dec
xchg
add
ins
or
cs
aam
stos
rcr
pop
cwde
and
fisubr
sbb
(bad)
dec
into
(bad)
mov
xor
jbe
add
jns
and
loopne
fst
clc
mov
lea
push
jne
push
add
icebp
push
add
cmp
cvtpi2ps
push
call
pop
adc
popf
xchg
rcr
mov
out
ror
sbb
pushf
movs
into
es
jmp
jae
jnp
sub
rcl
call
repnz
lods
xchg
test
cmp
jp
call
scas
mov
aam
mov
mov
dec
sub
(bad)
call
js
jbe
daa
and
inc
sub
ret
fadd
fs
out
and
dec
xor
mov
xor
daa
dec
ficom
mov
iret
fsub
adc
jnp
xor
mov
mov
ins
mov
fbstp
pusha
sbb
cmp
in
dec
jge
test
xor
repz
push
ret
int3
call
out
mov
lds
in
add
sbb
pusha
inc
loopne
jo
enter
mov
test
pop
xor
fistp
daa
push
out
int3
idiv
dec
sti
cmp
movs
sub
lods
lock
sbb
paddd
sar
repz
dec
xchg
shl
inc
popa
inc
(bad)
fimul
pop
(bad)
sbb
push
jge
pop
into
xchg
add
add
jnp
(bad)
out
mov
lds
mov
jns
push
sub
and
les
(bad)
xchg
lods
pop
rcr
out
jno
pop
movs
adc
mov
jge
inc
jg
xchg
mov
xor
jb
cs
call
sti
add
jbe
mov
or
xchg
test
fbld
(bad)
xchg
out
stos
jae
(bad)
outs
sbb
mov
dec
lods
dec
push
dec
loopne
push
ret
push
push
jne
push
sub
xchg
cmp
int
sbb
addr16
(bad)
mov
push
int
es
xchg
dec
shl
sbb
fisttp
mov
xchg
adc
or
push
mov
ret
xchg
bound
cs
rcl
in
mov
pop
sar
fidiv
stc
adc
mov
sar
enter
hlt
into
pop
push
pop
sub
push
pop
dec
xchg
mov
mov
iret
mov
sbb
xchg
fldcw
pop
std
data16
add
push
mov
cwde
enter
push
sbb
les
aad
mov
out
push
jne
mov
push
inc
lods
in
imul
test
das
adc
xchg
inc
cs
mov
shr
ins
popa
jns
mov
or
cmp
jns
loope
sub
les
sub
or
pop
cmp
dec
xchg
dec
out
mov
nop
in
(bad)
pop
movs
in
inc
jmp
cdq
popa
pop
pop
xchg
ds
or
hlt
fistp
repz
push
inc
push
xchg
or
sahf
jge
and
aas
jmp
fs
xor
outs
div
(bad)
shr
rcl
or
fnstcw
loope
icebp
push
xchg
dec
mov
in
mov
retf
dec
jge
adc
popf
dec
cmc
add
sub
repz
dec
mov
dec
not
cmc
cdq
dec
rol
dec
test
scas
push
call
pop
sub
pop
sti
out
cmp
xchg
std
sub
(bad)
jge
je
xor
setnp
and
jge
mov
std
js
ss
lds
push
sbb
xchg
or
es
mov
cmp
push
std
inc
cmc
add
mov
ins
out
mov
lods
or
leave
pop
inc
push
pop
jne
call
lods
stos
js
movs
push
push
pop
shl
cmp
loope
idiv
lods
icebp
stc
out
cmps
pop
add
xor
inc
idiv
mov
add
inc
(bad)
xchg
pop
pusha
dec
jmp
sub
iret
jp
call
mov
mov
out
nop
add
pusha
cmc
sub
jo
or
das
pushf
sbb
or
in
xchg
adc
push
and
mov
nop
push
sub
sbb
xchg
add
es
pop
(bad)
push
test
mov
in
shl
xchg
mov
(bad)
nop
mov
es
and
add
lea
dec
pushf
pop
(bad)
mov
adc
js
mov
rcl
xchg
or
or
jbe
xchg
inc
les
mov
jo
rol
in
shr
cwde
and
rcr
jl
ror
mov
sub
dec
push
inc
jp
icebp
cmp
shl
mov
xor
inc
pop
mov
jns
xor
cmp
sub
es
jp
pop
sbb
xchg
je
cs
mov
adc
aas
xor
lods
pop
shl
xor
je
addr16
mov
jns
push
lahf
cmp
push
or
and
mov
xchg
push
adc
(bad)
xchg
xor
ficomp
arpl
ins
(bad)
mul
cmp
mov
cmp
cmp
fsub
enter
xor
je
sbb
xchg
test
test
call
add
lahf
das
jmp
lea
cmp
fisubr
mov
fcomp
adc
pushf
mov
stos
das
arpl
movs
or
in
sub
jns
out
and
ins
pop
inc
(bad)
fidivr
inc
addr16
or
ficomp
inc
jg
popf
xchg
popa
xor
pushf
adc
or
in
mov
(bad)
xchg
add
mov
mov
lods
es
xchg
pop
sahf
iret
imul
retf
add
stos
mov
jne
jp
adc
push
lock
sub
dec
aaa
bnd
jle
push
shr
hlt
(bad)
(bad)
fbld
mov
das
addr16
adc
jle
dec
push
xchg
jne
jns
push
cmc
je
xchg
and
mov
cmp
jge
sub
pop
mov
dec
mov
(bad)
push
xchg
xor
and
test
or
push
mov
and
dec
jg
in
cdq
iret
dec
outs
mov
cmp
pop
cmp
dec
push
and
mov
fwait
les
test
loopne
add
daa
jae
sahf
jae
sub
out
xlat
xchg
push
ins
loopne
jmp
ret
jp
sbb
sub
xchg
sbb
mov
jnp
mov
je
daa
fisttp
push
sub
add
jmp
test
pop
mov
loop
std
loopne
daa
push
enter
sbb
(bad)
xor
push
imul
jnp
ret
push
pop
push
jbe
and
adc
data16
pop
in
push
jge
jp
repnz
jb
cld
adc
outs
xor
sar
xor
jmp
pop
mov
fstp
sub
adc
cld
push
inc
ret
cmp
cmp
inc
fstp
push
xor
rol
cwde
ret
sbb
ins
enter
sub
jne
in
daa
in
sub
imul
repz
fbld
outs
rol
ds
xor
sub
mov
jecxz
mov
jge
arpl
std
je
sub
cli
adc
sub
rcr
fcmovnu
je
mov
inc
sti
nop
in
xchg
dec
xchg
jne
xchg
nop
mov
jmp
mov
and
sub
ss
icebp
dec
ja
xchg
inc
dec
jp
or
arpl
bound
adc
adc
cdq
jmp
bound
cli
xchg
sbb
scas
scas
xchg
pop
ret
mov
push
pop
in
push
jno
mov
mov
push
inc
adc
shr
stos
mov
std
aam
cmp
sub
daa
cs
pop
add
push
mov
aas
cli
sbb
enter
in
lock
mov
cmp
popf
or
test
sbb
int
scas
fdiv
or
sub
jns
xchg
imul
dec
cmp
adc
fst
jmp
iret
(bad)
mov
mov
pop
add
out
cdq
and
in
scas
in
popf
xor
pop
xchg
pop
out
dec
pop
fst
sub
iret
jns
(bad)
ror
rep
xor
push
inc
pop
gs
dec
sub
stos
stc
enter
xchg
in
mov
es
xchg
mov
cmp
mov
imul
jp
sub
pop
add
ins
sbb
xor
lahf
(bad)
ret
xchg
pop
call
adc
arpl
adc
mov
xor
xchg
in
mov
sbb
sub
adc
mov
xchg
sub
out
cmp
sub
xchg
(bad)
push
adc
sub
add
(bad)
push
test
in
(bad)
in
jne
mov
mov
xchg
xor
pop
std
out
fs
rcr
pop
adc
and
std
push
cmp
xor
data16
mov
or
loopne
cmc
jns
lahf
pop
sbb
jmp
add
shr
call
jp
(bad)
inc
xor
jmp
in
dec
jo
aam
jns
in
mov
add
jmp
lahf
sub
mov
pusha
push
rol
dec
add
out
sbb
ror
fcmovnbe
iret
pusha
xchg
ret
cmp
jge
mov
pop
inc
cmp
test
imul
mov
cmp
in
jmp
lds
dec
push
cmp
pop
ret
and
pop
inc
enter
sub
cmp
cmc
inc
mov
inc
cdq
cmps
outs
in
jmp
xchg
(bad)
neg
into
out
clc
loope
icebp
inc
nop
mov
jmp
pop
mov
fidivr
icebp
in
jge
call
pop
sbb
adc
cwde
loop
nop
dec
sti
xchg
or
js
repz
mov
add
dec
sub
cmp
cmp
jns
sub
add
call
mov
je
fist
rol
mov
cli
xor
inc
pusha
cwde
pop
fiadd
jmp
push
pop
add
repz
push
bound
lods
pop
jp
adc
xor
xchg
mov
aad
(bad)
push
lock
push
cmp
adc
icebp
into
int3
or
dec
xor
outs
fdivr
xchg
dec
repz
inc
pop
rol
das
jne
fucom
shl
mov
xor
and
mov
and
jno
gs
xchg
fdivr
push
inc
sbb
add
lods
(bad)
sub
dec
fwait
inc
movs
les
or
in
test
or
ror
(bad)
push
pop
popa
cmp
icebp
loope
push
xchg
test
xlat
jnp
jmp
or
mov
outs
sbb
xlat
pop
mov
add
add
mov
mov
cmp
xor
and
add
(bad)
cmc
sar
sub
and
adc
(bad)
in
daa
cmp
stos
mov
call
(bad)
repnz
dec
sbb
sub
in
imul
not
popf
(bad)
clc
push
pop
retf
js
jmp
es
mov
mov
push
cmc
dec
sbb
inc
mul
in
xchg
not
push
push
fbstp
int3
and
mov
mov
mov
jo
nop
cli
xor
push
das
daa
pop
xlat
cld
outs
push
(bad)
bound
int3
cmp
mov
sub
push
cmp
mov
in
fisttp
pop
outs
mov
mov
mov
jns
test
aaa
les
fisub
jmp
hlt
cmps
push
std
hlt
sub
dec
iret
call
daa
and
xchg
cmc
add
ret
stos
jg
loopne
lods
ret
cwde
ffreep
push
mov
loope
daa
test
or
jmp
pusha
xchg
cmp
bswap
jno
(bad)
jmp
push
(bad)
mov
sub
xor
mov
adc
push
push
das
(bad)
cli
cmp
mov
sahf
mov
fidivr
push
es
icebp
mov
rcl
test
cs
test
mov
fdivr
les
iret
mov
sbb
ret
jp
ret
fldcw
int3
pop
and
jno
cmc
dec
lock
test
push
mov
call
pusha
and
xor
mov
movs
fwait
adc
mov
das
mov
pop
loope
jg
int
cmc
mov
jp
je
xlat
icebp
jmp
jmp
xor
mov
clc
pop
and
push
push
repz
sbb
(bad)
xchg
(bad)
adc
test
mov
or
cmp
ins
xor
jmp
imul
fiadd
in
ret
out
mov
arpl
test
test
add
jns
adc
jne
stc
jns
inc
xchg
ja
sub
adc
into
push
sub
jmp
inc
daa
cmp
cmp
jge
(bad)
pop
mov
shr
sbb
adc
jnp
push
sbb
mov
jne
cmps
adc
push
or
inc
cli
jb
adc
mov
jmp
pop
aad
and
cmp
lds
push
sbb
adc
cmp
xchg
add
or
pusha
xchg
sub
(bad)
cmp
push
add
popf
cmc
mov
push
inc
mov
mov
addr16
inc
push
movs
add
repz
repnz
inc
sbb
push
mov
fsub
and
mov
js
loop
xchg
jo
lods
iret
pop
rcr
ret
nop
mov
out
(bad)
jp
xchg
dec
sbb
sti
xchg
ja
add
fsub
(bad)
and
adc
int
dec
iret
or
imul
out
fnstsw
cmp
xor
stos
jmp
pop
cld
xchg
or
cld
xchg
in
in
aas
or
les
adc
(bad)
mov
jae
gs
xchg
retf
xchg
mov
inc
jle
adc
rol
mov
je
sbb
fidivr
ret
(bad)
jg
and
shl
(bad)
(bad)
data16
inc
push
xor
loop
int3
je
sub
sub
shr
inc
rol
mov
fs
fcom
sub
scas
pop
sub
lock
xchg
int3
rcl
int
les
pop
les
mov
and
loopne
pop
addr16
rol
jge
aam
push
sub
mov
push
into
dec
xchg
xchg
lods
scas
cmp
xor
push
xor
push
mov
sub
jo
clc
xchg
sahf
cmp
fild
xor
das
mov
adc
fwait
repnz
pop
push
and
xchg
sahf
les
lds
and
pop
fbstp
push
pop
pusha
aaa
sub
push
xchg
shl
or
xchg
dec
fistp
dec
push
mov
cs
ret
repnz
push
and
loope
scas
push
in
sub
or
call
dec
sub
sub
sbb
cmp
ret
push
cmp
stos
inc
shl
pop
jp
add
outs
mov
fistp
ret
mov
iret
dec
nop
les
xchg
cmp
hlt
add
and
shl
jae
pand
mov
bound
jne
mov
ja
xchg
xchg
ins
out
in
xor
(bad)
jmp
ror
mov
pop
je
sub
and
jne
dec
repz
lock
add
push
loope
movs
jns
sub
xchg
call
shl
mov
fsubr
fs
nop
jae
cwde
pop
mov
or
jns
pop
out
movs
sbb
fs
cmp
xchg
ret
inc
jmp
mov
pop
pop
jne
(bad)
mov
repnz
jp
mov
fisubr
or
adc
add
sbb
popf
stos
rcr
pop
js
inc
imul
imul
fldcw
pop
and
rcl
jmp
mov
repz
adc
popf
inc
xchg
or
lods
std
mov
cli
test
push
sub
movs
jno
push
je
cmc
es
adc
aad
jmp
fdivrp
xchg
xchg
nop
pop
mov
dec
sbb
es
shr
stc
mov
pop
dec
pop
mov
cmps
push
xor
lea
cld
push
jge
repnz
xchg
hlt
ret
sub
and
call
mov
mov
cmc
(bad)
std
fbld
fnstsw
push
sub
xchg
(bad)
loop
fs
xor
jg
add
popf
mov
inc
pop
iret
push
movs
lahf
inc
nop
gs
push
mov
cmps
pusha
int
xchg
ret
sbb
and
ss
xchg
pop
int3
jge
dec
lods
int3
test
das
cmps
lock
lea
neg
jmp
jae
into
lods
sub
adc
les
mov
mov
loope
int3
loope
aam
jmp
sub
mov
and
ror
test
mov
jb
leave
lahf
xchg
jecxz
cmp
xchg
in
aad
xchg
mov
cmp
int
dec
push
(bad)
pop
xchg
loope
inc
lds
ins
(bad)
or
xchg
pushf
xchg
mov
lahf
or
fs
pop
inc
xchg
fs
lahf
dec
adc
(bad)
ds
inc
mov
js
mov
fs
iret
xchg
pop
adc
mov
mov
xchg
push
shl
jnp
ror
cmp
adc
xchg
hlt
pop
xchg
cld
jp
sub
cmp
pop
pop
jmp
aad
daa
cmp
ror
imul
rcr
or
dec
int
sub
lds
fist
sbb
pop
test
xchg
dec
mov
or
adc
fwait
call
xchg
mov
and
sub
sub
jne
inc
mov
ror
dec
push
(bad)
mov
jge
xlat
rcl
ror
hlt
mov
cli
fwait
sub
add
xor
movs
pop
cmp
xchg
stos
jp
xchg
ret
jg
test
jne
sahf
push
pop
jle
ss
jns
daa
lds
in
xchg
xchg
test
call
jle
fsubr
mov
mov
movs
jae
xchg
jbe
pop
es
sub
or
xor
nop
enter
ret
lods
push
and
sub
mov
inc
cmp
(bad)
xchg
pusha
xor
call
jge
xor
inc
pop
adc
adc
dec
mov
pop
fdiv
mov
mov
mov
cmp
leave
and
shr
sbb
adc
cwde
ror
imul
mov
cwde
jbe
jne
iret
fnstsw
or
test
push
ja
clc
inc
cmp
adc
jg
repz
and
addr16
shr
popa
sub
shl
inc
sbb
push
dec
or
cmp
dec
cmp
push
fcom
mov
rol
sbb
mov
es
test
bound
add
mov
pop
je
pop
ret
lock
(bad)
loope
sub
retf
je
xchg
test
fadd
adc
les
cmp
call
ret
push
aad
cs
fmul
adc
ret
xchg
cmp
addr16
bound
imul
(bad)
jp
sbb
retf
jle
mov
push
push
adc
cmp
nop
jns
in
les
ret
icebp
(bad)
cmps
hlt
fcomi
push
adc
adc
cmp
rcr
dec
jbe
dec
pop
in
mov
or
call
loopne
and
jmp
xchg
int3
mov
inc
call
shl
mov
fwait
sbb
into
push
shr
in
ret
push
fwait
jnp
dec
std
(bad)
jne
xor
jecxz
scas
enter
mov
jb
mov
in
pop
push
push
xlat
sbb
adc
test
mov
fs
sti
pop
add
out
ret
pop
jb
les
out
pop
or
jb
or
xchg
jmp
sbb
test
js
mov
sub
repnz
adc
popf
call
ja
ret
xor
popa
mov
sub
or
inc
push
rdmsr
sub
fucomp
jmp
je
xchg
xchg
push
lea
cli
shl
out
ds
hlt
movs
inc
jmp
mov
add
sub
mov
push
mov
xchg
jmp
movsx
push
cli
jp
pop
mov
(bad)
sub
xchg
outs
mov
aad
and
pop
jo
mov
and
dec
lea
popf
setl
push
int3
arpl
loop
retf
jg
mov
push
cmp
les
xchg
mov
ja
cmc
inc
sub
rcr
mov
jmp
cmc
aam
push
movs
call
dec
and
sub
mov
cmps
je
outs
mov
(bad)
jge
aad
or
ret
and
xor
les
push
retf
test
int3
dec
cwde
imul
bnd
mov
jno
xchg
pushf
push
and
rcr
xchg
xchg
push
mov
ret
sub
int3
and
clc
adc
mov
rcl
mul
mov
xor
xlat
movs
repz
ret
fld
dec
aad
push
clc
mov
fwait
xlat
sub
or
lds
and
es
or
mov
xchg
hlt
std
jae
jmp
xlat
sahf
sub
adc
and
jmp
cmp
jmp
sbb
repz
jb
push
mov
cmp
ret
aam
(bad)
out
add
dec
cmp
dec
das
jmp
and
pop
hlt
out
lods
mov
pop
lea
jle
push
es
scas
push
adc
call
(bad)
mov
call
in
mov
or
pop
add
cld
ret
and
lods
lahf
xchg
push
xchg
or
test
in
mov
sub
cmp
icebp
cdq
cmp
jns
mov
popa
add
imul
lds
jp
cld
pusha
hlt
and
in
dec
or
les
mov
dec
jno
shr
enter
call
dec
dec
jbe
push
ins
pop
sbb
xchg
imul
jae
push
shl
pop
movs
leave
iret
mov
data16
aam
push
(bad)
loopne
test
test
test
leave
or
sub
out
cli
push
call
ja
std
into
imul
in
push
xchg
cmp
addr16
sar
mov
xor
jb
int3
cmp
mov
mov
jmp
cmps
cmp
hlt
icebp
dec
mov
mov
stc
loope
mov
cmp
sub
dec
push
cwde
xchg
jo
xchg
sbb
popf
in
js
shl
popa
in
push
hlt
cmp
movs
ror
clc
sub
call
cmc
pusha
jle
jl
cmps
xchg
jbe
jno
adc
ss
imul
add
mov
js
cmps
jae
xor
out
xor
cli
out
xchg
test
add
jns
sar
shl
pop
imul
enter
cmp
dec
mov
daa
loope
pop
xchg
jns
mov
push
in
sbb
jno
rol
cmp
jg
and
jge
adc
xor
push
or
mov
jae
mov
cmp
jno
and
lahf
dec
jecxz
pop
sub
lock
xchg
xor
idiv
sub
call
xor
dec
clc
pop
mov
dec
push
dec
push
icebp
sar
sub
sub
ja
push
je
mov
jne
mov
iret
add
jbe
sahf
jae
lds
xchg
hlt
dec
jne
in
fldcw
or
add
push
loope
ficom
shr
cmp
xchg
pop
xchg
pop
or
and
retf
mov
cmc
push
ja
cmc
dec
in
pusha
add
out
xchg
in
xchg
fild
ja
push
rcr
push
mov
sti
retf
dec
inc
xchg
mov
pop
pusha
dec
push
aad
and
mov
cmp
push
icebp
das
jbe
std
dec
mov
call
stos
nop
fs
cmps
jmp
adc
lea
(bad)
jge
fldenv
adc
xchg
pop
push
loopne
mov
push
xor
jmp
sbb
mov
xor
adc
mov
adc
jl
adc
push
xchg
dec
cld
(bad)
movs
jl
pusha
sub
enter
shr
cli
into
bound
pop
ror
xor
xchg
rol
sub
add
(bad)
pushf
scas
adc
push
out
xor
into
das
adc
lods
mov
sahf
sbb
aaa
jmp
(bad)
popa
jle
and
ins
leave
pop
rcl
inc
jmp
cmps
mov
into
cmps
cmps
jbe
cli
jp
cs
mov
pop
xchg
div
jp
inc
clc
adc
aam
xor
sub
cmp
and
add
cdq
popf
dec
clc
(bad)
jp
pop
jns
jbe
mov
fstp
pop
cli
(bad)
mov
push
sub
mov
jnp
mov
daa
ins
mov
gs
iret
or
sbb
fist
cld
xor
mov
enter
int
jnp
pop
sub
mov
mov
or
xchg
push
pop
stos
shl
push
pop
and
(bad)
pop
xchg
mov
pop
nop
add
jge
mov
cmps
nop
call
or
lods
xor
dec
jb
mov
jns
sub
xor
jno
mov
xchg
push
pop
mov
je
data16
and
jl
hlt
mov
(bad)
jmp
inc
and
test
or
(bad)
rcr
cmc
imul
jl
pop
jmp
jnp
das
aad
aam
pop
cwde
retf
jl
xor
jp
enter
pusha
inc
fisubr
pop
jmp
jl
cmp
add
pusha
pop
je
push
cmp
jl
xchg
and
arpl
leave
les
mov
dec
outs
mov
fwait
jl
jbe
out
daa
sub
call
lea
mov
mov
icebp
scas
in
jmp
push
and
pusha
push
dec
sbb
adc
aaa
pop
jl
mov
aas
fwait
mov
mov
jnp
and
xchg
shr
xchg
sub
adc
addr16
add
addr16
cmp
fimul
push
es
lds
dec
popa
xchg
in
clc
sub
daa
ss
sbb
clc
sbb
mov
jmp
test
fwait
jl
push
mov
ss
data16
or
and
scas
loope
ret
xor
shl
or
jo
aas
rcr
fstp
aam
retf
jge
hlt
ds
loope
js
or
test
fistp
xor
mov
loope
imul
inc
daa
(bad)
repz
sub
pop
adc
ret
add
int
std
mov
enter
xchg
cli
mov
inc
dec
or
fild
add
out
or
jmp
push
jae
lahf
ja
mov
test
adc
out
shr
xor
xchg
mov
cmc
movs
push
int
mov
scas
pop
mov
aad
test
aam
sub
inc
sar
nop
sbb
cdq
pop
xlat
xchg
loopne
test
push
out
test
sbb
ins
rcl
cld
gs
cmps
fst
ins
lods
pop
jge
ror
mul
or
mov
addr16
pmuludq
push
dec
cs
out
(bad)
or
push
out
test
jge
std
test
std
jmp
test
mov
jno
(bad)
lods
mov
mov
int
dec
jg
adc
mov
nop
les
jecxz
nop
jns
inc
call
stc
enter
popf
lock
xchg
cmc
fmul
pop
mov
loopne
daa
ret
cmp
sahf
push
lods
fnsave
push
jp
adc
mov
or
push
adc
jo
(bad)
cmps
sbb
es
mov
and
test
push
mov
stos
cli
inc
fdiv
adc
xchg
and
xlat
jns
mov
xchg
cwde
dec
push
ins
adc
sbb
pop
mov
inc
pushf
ffreep
inc
fsub
and
lods
and
and
xchg
push
outs
fsubp
pop
dec
outs
jbe
outs
aad
add
inc
mov
in
xor
cli
arpl
fstp
adc
addr16
sub
jl
jne
jg
sbb
or
or
mov
or
nop
ds
fucom
int3
mov
push
dec
xchg
add
arpl
and
mov
mov
dec
mov
clc
(bad)
imul
and
push
test
fwait
jns
sbb
out
push
leave
rcl
push
pop
jb
fisttp
inc
sub
jnp
jp
daa
pop
sub
and
cli
pusha
in
adc
sub
mov
jo
jnp
xlat
imul
loope
gs
mov
jle
or
xchg
stc
(bad)
fisubr
cmc
test
addr16
or
jne
xchg
jbe
ret
jns
out
pop
jle
imul
push
js
retfw
ret
push
pop
push
sbb
ret
popf
fadd
dec
test
jb
dec
adc
arpl
sti
push
sub
rcl
cmp
adc
and
into
imul
xor
jnp
pop
push
sbb
ds
push
pop
js
push
jp
jmp
inc
adc
or
adc
or
push
mov
dec
fisubr
stc
wrmsr
mov
push
sbb
pushf
and
sti
stc
mov
jl
mov
sub
jmp
xchg
or
(bad)
ds
loopne
int
xchg
mov
push
xor
jo
shl
mov
jge
imul
inc
js
fdivr
dec
loopne
test
fnstcw
push
xchg
xor
lods
aas
add
ja
test
cmps
call
cdq
bound
fucomip
pop
dec
sbb
xchg
xor
into
lods
pusha
adc
jge
scas
retf
fistp
sub
mov
loopne
dec
(bad)
jg
jo
cmp
lock
call
mul
(bad)
jge
lock
ins
adc
jne
mov
sbb
aas
mov
adc
add
mov
(bad)
jmp
add
repz
fistp
call
ret
jge
pop
aam
xchg
jnp
outs
mov
nop
sub
mov
nop
add
adc
in
daa
leave
bound
daa
cmp
cmp
les
dec
xor
push
(bad)
mov
mov
(bad)
dec
mov
cli
fdiv
add
paddsb
ds
(bad)
mov
inc
or
lds
and
mov
mov
mov
and
pop
xchg
das
push
jns
mov
sbb
cld
adc
cmps
aam
adc
ins
dec
movs
enter
adc
cwde
or
xor
mov
or
xchg
xchg
cs
mov
jmp
clc
mov
psrlw
loope
xor
pop
mov
lods
push
hlt
push
rcr
es
dec
fdiv
sbb
sub
enter
pop
pushf
cli
cmp
or
xor
jp
jne
std
ret
mov
pop
addr16
or
(bad)
bound
pop
jmp
lods
pop
lods
sub
shl
add
add
pop
mov
sub
lock
cmps
sbb
mov
push
jmp
push
lock
daa
cmc
test
(bad)
call
and
xchg
ffreep
push
pop
fmul
cmp
int
mov
clc
pop
into
and
push
dec
push
dec
inc
sbb
adc
xlat
test
jne
xchg
hlt
loope
mov
ret
cmp
(bad)
fnstenv
loopne
nop
dec
push
int3
test
stc
ds
sbb
into
cmp
je
repnz
pop
dec
repz
add
sbb
or
icebp
(bad)
enter
cmps
mov
fiadd
loop
xchg
inc
mov
test
push
and
inc
fstp
sub
push
sbb
mov
xchg
iret
imul
push
push
xchg
pop
(bad)
and
xchg
sti
ret
push
iret
pop
js
dec
push
lods
push
adc
test
stos
loope
lahf
lahf
pop
out
and
push
mov
xor
and
cs
jo
push
mov
jle
loope
cmp
aam
or
push
mov
pop
sub
xchg
push
pop
xchg
xor
cmp
cwde
xchg
xor
xor
cmc
cmp
xor
jno
xchg
adc
inc
sar
jp
std
aaa
xchg
data16
jl
les
pushf
jmp
stos
mov
cli
xchg
jno
in
xchg
pop
mov
pop
pop
or
add
push
je
jbe
clc
xchg
dec
push
add
enter
les
add
stc
call
rol
pop
gs
inc
dec
bound
mov
mov
or
mov
mov
jecxz
outs
xor
sahf
imul
fs
adc
idiv
ins
push
push
nop
loope
(bad)
sub
enter
or
dec
ss
push
hlt
dec
and
push
sub
enter
(bad)
adc
addr16
cmp
adc
in
add
mov
js
test
dec
pop
and
pop
jge
mov
mov
cmp
les
iret
imul
and
sbb
neg
iret
outs
in
scas
and
push
clc
je
(bad)
pop
cmp
or
popa
jp
fdivr
adc
push
movs
cmp
mov
inc
or
push
dec
mov
sbb
jp
xchg
xchg
push
std
jge
fucomp
pop
gs
cmp
adc
adc
xchg
movs
aam
xchg
and
shr
add
or
aam
popa
pop
mov
dec
fist
sub
or
jl
adc
scas
xchg
std
or
pop
push
clc
movs
mov
mov
in
xor
pop
or
out
jmp
dec
mov
hlt
fwait
xor
loopne
mov
aas
out
arpl
push
repnz
sub
cmp
xlat
xchg
ja
hlt
jne
ret
dec
fsubr
mov
xor
sti
ror
pop
les
sbb
loopne
(bad)
fsub
xchg
push
rcl
push
mov
push
cmps
sbb
xlat
or
inc
addr16
outs
xchg
mov
sbb
out
cmps
lock
push
push
js
sbb
inc
mov
pop
dec
arpl
lds
mov
sbb
xchg
mov
imul
push
fcom
sahf
mov
je
(bad)
cmp
cmp
jae
mov
mov
xchg
dec
push
(bad)
sub
mov
jp
je
std
dec
inc
imul
inc
stc
and
retf
jo
xchg
jb
nop
iret
xchg
test
and
ins
in
ret
inc
xlat
xor
std
icebp
call
lods
lods
xchg
hlt
cmp
(bad)
or
retf
dec
cmps
cmp
lods
pop
js
rcl
std
imul
sbb
ret
pop
cmp
adc
and
mov
or
hlt
movs
in
dec
shl
call
sahf
cmp
call
fs
fisttp
outs
in
pop
xchg
jo
les
pushf
adc
in
in
das
das
push
xchg
fwait
mov
and
inc
fdivr
dec
les
xchg
fcmovnu
inc
lods
in
push
or
xchg
fnstenv
push
push
sar
inc
push
push
adc
xchg
sbb
dec
movs
test
sub
add
outs
lock
mov
mov
test
xor
or
scas
sub
mov
arpl
ja
pop
cmp
mov
jb
shl
jbe
movs
cmp
cmc
leave
es
xchg
out
jp
hlt
xor
or
xchg
lds
mov
push
adc
sub
neg
inc
xor
fdiv
in
and
dec
cmps
sbb
mov
add
adc
sbb
or
and
fwait
push
xchg
and
mov
jo
pop
cs
leave
and
sbb
sbb
test
cmp
inc
adc
bound
fsubr
pusha
movs
xchg
ja
daa
cdq
inc
push
sbb
sbb
pop
jp
inc
mov
dec
sahf
scas
or
adc
jle
inc
inc
es
cld
push
mov
jbe
add
dec
xchg
xor
dec
stc
js
jno
cdq
stc
in
sti
(bad)
jmp
jbe
sub
mov
jle
jae
bound
push
and
pop
jbe
icebp
cmp
push
xchg
dec
scas
addr16
xor
sub
mov
rcl
fld
(bad)
mov
repz
inc
push
cmp
cmp
repz
ret
mov
mov
fst
out
clc
and
pop
cmp
dec
adc
xor
push
cmp
mov
test
loopne
jge
or
xchg
dec
je
aaa
xchg
gs
xchg
jmp
daa
cld
xchg
mov
inc
jae
jo
retf
pop
lods
fs
in
pop
add
fs
gs
hlt
mov
(bad)
sar
xor
push
out
push
iret
imul
stos
sar
stc
mov
pop
pop
sbb
int3
fs
jmp
jg
sub
into
pop
jne
add
not
movs
mov
jns
adc
imul
jg
inc
pop
add
push
mov
jae
scas
sahf
cs
int
pop
ja
mov
and
sbb
test
mov
dec
jbe
inc
push
mov
jae
movs
fwait
jbe
push
imul
xlat
jo
mov
xchg
call
cmp
les
test
loopne
xlat
ins
stos
out
icebp
ficom
jb
sbb
push
or
pop
xchg
sahf
gs
sbb
xchg
fs
jnp
or
sub
xchg
and
mov
dec
sub
jg
xchg
fmul
inc
inc
pushf
cmp
dec
aad
fisubr
dec
call
fxch
mov
mov
repz
rcr
xchg
cmp
xor
push
mov
sub
xchg
pop
pop
ret
popa
stos
pop
xor
add
movs
pop
adc
jmp
cli
xchg
ja
call
jnp
idiv
adc
clc
inc
hlt
retf
sbb
jbe
mov
loop
jnp
imul
ret
push
arpl
xchg
ins
pop
cmps
icebp
popa
dec
shl
sahf
push
jp
dec
in
pushf
dec
lods
ja
in
lea
(bad)
mov
mov
push
xchg
lods
xchg
jne
test
retf
pushf
sti
movs
out
ror
cwde
jecxz
and
cmc
rcl
rcl
push
fnstenv
xchg
test
cmc
mov
and
mov
pop
jmp
cmc
retf
xor
js
mov
je
sbb
or
jmp
loope
aas
cli
out
sub
jae
pop
call
mov
ret
pop
cmp
sbb
inc
shr
adc
shl
stc
popa
enter
ins
into
sub
loope
(bad)
cmp
pusha
jecxz
loop
xchg
inc
mov
in
bound
xchg
outs
test
jnp
dec
fsub
rcr
xor
sub
scas
ficomp
daa
gs
inc
cmc
sbb
mov
cmps
fnstcw
stc
je
dec
repz
mov
mov
adc
in
sbb
test
arpl
inc
mov
data16
(bad)
mov
daa
add
sbb
sbb
loope
add
aam
cwde
pop
lahf
ins
ret
jmp
inc
xlat
enter
mov
leave
nop
addr16
scas
push
jp
movs
mov
pop
add
out
in
inc
jns
pop
adc
mov
cmc
mov
dec
dec
or
movs
cs
mov
scas
xchg
cmp
jo
shl
clc
pop
sub
mov
nop
loopne
bound
loopne
iret
dec
imul
pop
cdq
scas
shl
and
jp
mov
(bad)
in
inc
mov
pop
inc
mov
sub
leave
sub
call
dec
inc
sub
add
mov
dec
ret
xchg
mov
gs
jle
xor
mov
mov
xchg
sub
cmp
test
fucomi
xor
aam
cmp
adc
adc
iret
xchg
inc
inc
and
fcom
dec
cld
in
xchg
mov
xor
xor
adc
shl
ret
push
xchg
nop
push
aam
sub
cwde
loopne
mov
dec
cmps
in
dec
adc
jp
xchg
dec
idiv
xlat
sar
and
jmp
das
test
jns
xchg
retf
cmp
inc
sbb
cs
ror
sbb
lock
pop
pop
sbb
lods
and
sti
in
(bad)
jmp
push
pop
cmps
or
ffreep
ror
fldl2e
sub
stos
fcomp
hlt
dec
sbb
or
push
push
jmp
movs
mov
mov
test
push
fmul
movs
inc
inc
pop
mov
(bad)
push
and
mov
sub
xchg
jp
mov
cwde
aam
bnd
outs
inc
inc
retf
sub
sub
dec
and
fidivr
xchg
mov
adc
int
iret
and
and
fadd
push
fdivr
ins
fstp
and
repnz
data16
(bad)
into
jp
mov
(bad)
xor
pop
fs
jo
cmps
jne
adc
jmp
movs
inc
jp
xchg
js
sub
pop
xor
sub
push
lds
pop
lahf
cmp
or
ds
and
cdq
mov
xchg
sbb
imul
xlat
test
loopne
ss
rol
into
mov
in
sbb
stc
mov
and
dec
ss
call
push
xchg
pop
mov
data16
push
cs
push
ror
cmc
xor
in
fst
adc
and
jmp
mov
in
inc
xor
inc
fbstp
dec
pusha
cld
sbb
mov
call
push
rol
pop
sub
mov
lods
outs
cmp
jle
repz
std
mov
loope
jl
xchg
je
or
daa
arpl
leavew
fcmovnu
stos
std
xor
sar
inc
loope
xor
sub
fisttp
cwde
(bad)
mov
push
dec
ret
repnz
mov
xor
jp
push
fiadd
mov
pusha
clc
push
sbb
xor
aam
xor
lea
sbb
imul
push
mov
lock
js
cmp
or
adc
push
or
dec
jl
adc
lods
sub
fild
dec
xor
push
pop
std
or
push
cmp
sbb
pusha
jp
or
add
cmc
pop
add
idiv
(bad)
sub
stos
xchg
daa
push
pusha
out
sub
xchg
jl
adc
lods
dec
rol
repnz
jmp
xlat
pop
test
sahf
jmp
data16
push
sub
mov
xchg
cmp
add
or
pop
mov
pop
sbb
mov
mov
pop
push
popa
out
rcr
jge
aaa
lods
out
mov
mov
cmps
push
jle
adc
ss
xor
or
xor
dec
mov
xchg
cmp
xor
mov
sbb
cmps
xchg
cwde
xchg
test
test
mov
out
xchg
lock
sbb
shl
shl
in
adc
cmp
test
call
imul
jo
das
and
pop
mov
jp
adc
push
jmp
in
ins
(bad)
jmp
inc
inc
push
in
xchg
and
daa
es
mov
ret
push
mov
lea
retf
inc
ret
sbb
xchg
icebp
push
sub
mov
ds
jg
mov
dec
cld
std
loope
dec
out
lea
xchg
and
sbb
in
xchg
sbb
add
fild
jo
sub
scas
adc
push
mov
mov
fbld
ds
stos
mov
out
test
cmps
es
adc
mov
retf
(bad)
or
dec
xchg
das
inc
call
mov
lahf
push
ret
ja
adc
cli
pop
xchg
xor
imul
push
sbb
ins
pop
add
std
sub
call
pushf
fbld
mov
out
out
shl
xchg
call
xor
dec
sbb
push
jae
loopne
jo
push
int3
pop
jnp
xchg
popf
mov
push
leave
out
xor
pop
sub
xor
xchg
push
cs
scas
cwde
movs
jle
jnp
adc
aam
pop
add
cmp
or
rcr
inc
jle
stos
push
xor
out
xchg
inc
fild
js
enter
scas
aad
js
push
mov
dec
cmp
xchg
adc
(bad)
loop
jge
ss
xchg
ins
cmp
mov
fcomip
lahf
test
jae
mov
pop
inc
xor
jne
adc
pop
jae
or
jbe
mov
pop
lds
(bad)
jmp
cli
xchg
fcomp
movs
ror
dec
mov
je
es
sbb
sub
jno
out
lock
mov
in
pop
daa
cmc
cs
xchg
xor
jmp
xor
ret
and
sub
pop
iret
cmps
jne
mov
xchg
adc
ds
mov
cli
cmp
lds
jno
jnp
nop
xchg
cmp
and
call
js
inc
scas
lods
push
pop
jmp
hlt
setb
adc
xchg
loopne
adc
push
mov
mov
or
xchg
xor
pop
neg
jne
sub
or
ja
leave
mov
nop
in
xchg
push
retf
xchg
add
mov
inc
cli
cs
or
std
ret
popf
xchg
push
add
inc
fmulp
sbb
sahf
cmp
mov
and
xor
sbb
retf
cmp
out
jle
jnp
sub
js
dec
fs
xchg
(bad)
fcomip
xor
xor
rcr
sti
xchg
int3
aad
js
mov
jne
fmul
ret
push
int
xchg
xchg
shrd
xor
retf
mov
add
pop
imul
popa
imul
sub
or
nop
xchg
cmp
ins
push
(bad)
in
pusha
and
push
popa
push
xor
pop
fisub
stos
sub
jmp
or
int
pop
iret
ffree
push
clc
push
mov
leave
jnp
jb
xchg
cs
xchg
pop
add
xor
mov
cmps
into
(bad)
out
xor
dec
dec
inc
les
repnz
push
imul
or
js
jecxz
(bad)
bound
pop
arpl
ja
dec
mov
loopne
xchg
mov
xchg
pop
mov
es
xor
xchg
movs
(bad)
std
lds
lds
or
xor
jle
jle
jge
lahf
inc
stc
call
pop
mov
dec
sub
cmp
inc
jge
int3
push
sbb
out
out
fs
stos
dec
and
in
stc
or
mov
(bad)
aad
sub
xor
div
les
mov
std
sub
(bad)
loope
pop
mov
push
and
sti
lds
cli
inc
outs
push
mov
dec
test
push
(bad)
jmp
shl
inc
cmp
leave
repz
mov
xor
jp
lds
(bad)
jp
test
cmc
out
add
pop
jl
lods
pop
sti
vpcmpgtb
xchg
or
fcom
idiv
adc
ins
fcomp
or
push
pop
div
stos
pop
xor
jmp
jg
xor
pop
xor
std
push
xchg
sar
ret
jmp
into
push
pusha
aad
int3
lods
mov
clc
popa
inc
jmp
and
fild
scas
mov
push
scas
push
add
ins
and
xchg
jae
mov
aad
mov
adc
imul
shr
or
sub
add
retf
mov
xchg
push
push
sar
dec
cmps
pop
mul
mov
or
and
fdiv
call
lods
gs
ss
xchg
shr
jp
add
in
xchg
cmps
adc
jmp
jns
and
mov
push
dec
aam
wbinvd
loopne
in
out
rcr
sub
jns
dec
or
pop
pop
dec
jnp
ja
(bad)
dec
leave
lods
lock
jns
test
mov
into
imul
mov
mov
movs
jne
xchg
mov
xor
or
mov
xor
sbb
push
outs
mov
xchg
(bad)
jmp
imul
and
xor
js
hlt
and
cmps
push
dec
fdivrp
xor
and
dec
outs
xor
xchg
pushf
cld
xchg
call
mov
jae
lds
jo
or
std
int
ud1
adc
xor
retf
cli
retf
loopne
xchg
adc
push
icebp
fld
hlt
push
out
fdivr
xchg
inc
popa
outs
cmps
ffreep
cmp
and
xlat
test
sbb
adc
popf
or
(bad)
jne
movs
mov
pop
xchg
jl
adc
fldln2
sbb
jae
cmp
or
adc
shl
out
add
xor
and
test
sbb
lds
jmp
xor
out
mov
or
mov
outs
imul
loopne
or
xchg
nop
mov
cmps
jmp
inc
xlat
in
pmulhuw
sbb
test
mov
xchg
rcl
xchg
jnp
and
sbb
data16
in
jno
(bad)
xor
shl
mov
jne
pusha
xchg
sub
jo
adc
push
mov
sbb
pop
mov
and
jg
adc
sub
push
loope
inc
fnstsw
jle
outs
add
inc
mov
ret
test
add
and
aaa
movs
mov
jle
movs
push
ins
ret
dec
cmps
loopne
fistp
mov
pop
fbld
arpl
dec
xor
or
cdq
lea
mov
cmp
dec
or
mov
cmp
call
jne
fisttp
test
add
je
idiv
sbb
(bad)
cmp
sbb
fist
jge
(bad)
push
cmp
adc
mov
imul
pop
ds
ret
add
pop
pop
in
ret
xchg
cdq
adc
fst
push
adc
(bad)
stos
jne
xor
add
idiv
std
inc
sti
jne
mov
add
cmp
cdq
repnz
inc
dec
xchg
fcomp
nop
or
cli
dec
inc
cmps
adc
and
sbb
xchg
jmp
mov
lods
inc
push
add
jo
or
loope
pushf
pop
xchg
mov
stc
mov
into
dec
jl
fdiv
test
leave
and
cmp
fld
inc
lea
adc
lods
ja
xchg
out
ja
cmc
jne
mov
dec
mov
out
xchg
adc
mov
out
ret
lods
mov
cwde
cld
adc
pop
add
int
pop
dec
add
adc
cmp
sbb
mov
mov
mov
sub
std
test
mov
mov
mov
jmp
into
mov
sbb
push
cmp
jp
test
inc
sbb
push
xor
in
push
shr
pop
popf
sub
xchg
mov
jnp
cli
xor
push
lds
and
fcmovb
pop
add
cs
int
or
pop
fidiv
scas
xchg
fadd
and
sub
push
sbb
(bad)
and
mov
push
ficom
stos
int3
mov
shr
dec
xor
popa
dec
xchg
cmps
frstor
cmp
dec
test
mov
rcl
inc
cmc
adc
cmp
(bad)
jmp
cmps
cs
push
addr16
(bad)
pop
mov
scas
ret
imul
call
pop
dec
xchg
js
sub
jae
push
ror
not
mov
cmc
loopne
cmc
jo
add
sbb
or
scas
xchg
sub
aad
imul
(bad)
jmp
push
aad
push
imul
imul
nop
mov
add
loop
jl
icebp
out
std
or
fld
imul
xor
jns
aam
cmc
cmp
movs
cld
cmp
jns
xor
mov
lods
jns
les
dec
mov
sbb
mov
icebp
jp
loopne
shl
mov
add
jle
fst
nop
ins
mov
and
jbe
jno
jns
or
sti
outs
mov
aam
retf
adc
mov
and
jbe
loop
xor
out
ret
inc
(bad)
push
jmp
sbb
call
xchg
mov
mov
pusha
xor
data16
daa
popa
mov
dec
push
ja
sub
jecxz
out
in
and
lock
mov
js
xchg
rcl
pushf
cs
or
and
mov
cmp
pop
add
push
mov
test
int
push
in
adc
jo
jecxz
xor
mov
add
es
pop
into
adc
fadd
mov
int3
(bad)
pop
ret
cmp
das
mov
lahf
add
cmp
inc
ret
jp
movs
inc
jg
nop
sti
icebp
ffreep
aam
into
in
les
add
imul
add
inc
test
cmps
call
test
xchg
and
mov
ins
inc
mov
xor
xor
jl
loope
outs
mov
add
inc
mov
cmp
xchg
ret
test
fstp
fnstsw
int
fistp
(bad)
mov
mov
sub
push
mov
in
pop
gs
adc
dec
jns
loop
xchg
mov
inc
cmp
sub
sub
ror
call
loop
in
jnp
xor
jmp
push
push
jae
sub
rcl
pop
out
or
cli
push
gs
ret
stc
js
in
(bad)
repnz
xor
jne
ins
xor
mov
mov
in
and
push
xor
movs
dec
fs
cli
ins
sbb
out
test
fld
stc
sbb
lds
add
cli
rcr
pop
mov
movs
addr16
in
pop
push
pop
xor
mov
in
lods
jmp
and
jne
scas
and
cmp
ds
js
shl
call
jns
mov
ss
shl
jae
mov
cmc
xchg
mov
(bad)
nop
cmp
adc
repz
jp
or
ret
icebp
stc
xchg
jbe
xchg
fcomip
mov
jno
xchg
xor
int3
mov
shl
imul
cld
retf
jmp
xor
je
xor
loope
xchg
mov
leave
aam
inc
and
dec
mov
es
xor
cmp
rcl
add
xchg
inc
jle
xor
mov
in
fst
imul
pusha
or
ret
push
in
pushf
mov
xchg
das
pop
lds
or
push
test
dec
xchg
pop
cmps
call
outs
fmul
xchg
or
jmp
(bad)
xor
push
jne
xchg
fdiv
es
pop
mov
push
ret
jns
cmps
mov
aas
test
pusha
js
int3
push
add
daa
xchg
dec
mov
repnz
neg
push
inc
out
cmp
sub
and
mov
ret
dec
int3
lds
push
sub
or
sub
pop
mov
(bad)
call
mov
aad
xor
adc
push
or
les
int3
xor
sbb
pop
ds
aaa
xchg
mov
jle
push
cmp
xchg
sbb
lea
and
add
sti
jbe
std
push
cmps
jmp
xchg
fcmovne
or
ds
in
mov
dec
cwde
lods
mov
cmp
cwde
inc
push
call
(bad)
call
add
cmc
mov
int3
jmp
push
xchg
or
cld
dec
jmp
(bad)
pushf
into
xchg
mov
adc
inc
pushf
xchg
adc
push
dec
int3
pop
push
mov
sar
inc
xchg
hlt
out
mov
imul
push
sub
mov
loopne
icebp
sti
mov
jp
sub
ss
jmp
(bad)
cmovb
shl
outs
ins
outs
mov
pop
imul
xchg
pop
dec
je
dec
jge
adc
int
jnp
ret
pop
mov
sar
rol
sub
in
push
xchg
inc
push
pusha
add
inc
les
ret
call
cmp
out
jg
jl
mov
(bad)
(bad)
adc
fiadd
sub
jns
jb
cmp
cmc
adc
jp
and
hlt
xchg
and
addr16
push
push
lock
data16
mov
dec
xchg
fistp
sbb
shl
mov
xchg
xor
scas
cmp
call
jge
sub
jae
push
out
mov
adc
shl
hlt
fldcw
jbe
xchg
dec
ja
sbb
sar
hlt
hlt
rcl
push
push
mov
ja
dec
je
cmps
(bad)
sar
xchg
push
sbb
out
add
dec
jmp
clc
ds
fistp
fcmovbe
cli
pop
mov
cmc
mov
loopne
xlat
js
sub
push
int3
mov
sti
xchg
rdpmc
aad
sbb
cmp
jg
cmp
rol
push
dec
hlt
jbe
movs
dec
jo
imul
das
movs
jae
ret
retf
sahf
sbb
sub
test
jb
(bad)
cli
aad
and
cmp
mov
mov
sar
mov
push
jns
jle
lods
iret
xchg
jmp
cmp
int
adc
imul
cmp
test
rcl
push
adc
sbb
xchg
repnz
nop
fwait
js
mov
add
data16
cld
das
ficom
inc
jmp
xchg
or
stc
jle
int3
pop
mov
idiv
jl
mov
js
arpl
jnp
or
popa
inc
leave
lahf
cmp
xchg
pop
fsubr
mov
cmc
xor
add
xchg
xor
xor
in
mov
dec
outs
icebp
push
push
cmp
sbb
fadd
mov
xor
js
pmaxub
fs
ret
push
adc
rcl
les
pop
stc
adc
adc
data16
stos
dec
xchg
pop
js
sub
hlt
mov
mov
adc
jle
jns
nop
not
sbb
repnz
sbb
rcl
daa
clc
inc
mov
addr16
xchg
repz
push
xchg
xlat
sub
jmp
outs
cli
pop
cmps
js
pushf
xchg
pop
push
lahf
cmc
into
sub
lods
push
mov
jg
sub
xchg
aas
ins
clc
push
mov
jne
jno
mov
fwait
inc
jns
push
and
cmp
js
fcom
sbb
nop
icebp
jp
xchg
ror
pop
in
lock
cmp
add
data16
ror
enter
arpl
mov
mov
call
les
xchg
stos
ret
cs
faddp
mov
cmc
push
movs
pop
imul
movs
in
mov
add
sub
xchg
pop
bound
hlt
hlt
neg
push
cli
icebp
or
and
dec
pop
int3
mov
jp
sbb
xchg
xchg
add
test
mov
mov
cli
inc
mov
nop
pusha
mov
pop
push
sbb
cmp
imul
ret
jae
sub
jno
rcr
movs
test
dec
mov
dec
fstp
or
adc
mov
out
and
xchg
jmp
dec
cmp
jmp
mov
popf
lds
pop
or
scas
sbb
(bad)
(bad)
icebp
dec
xor
cld
jne
jg
retf
ja
repz
jns
sub
sbb
push
push
in
add
out
repz
mov
xchg
icebp
fimul
mov
jns
mov
cmp
ds
sbb
jmp
mov
inc
push
icebp
rol
pop
dec
sub
add
enter
mov
dec
je
cmp
mov
cmps
mov
aam
sub
ja
leave
push
inc
rcr
pop
xor
dec
sub
pop
gs
out
cmp
jle
cli
call
pop
pushf
adc
xchg
xchg
push
stos
jg
scas
xor
push
(bad)
in
pop
ret
call
xchg
adc
push
cmp
movs
pop
push
sbb
call
mov
xor
mov
ds
(bad)
ins
cmp
cmps
push
out
add
and
mov
xchg
push
sub
xchg
jne
or
call
adc
pop
ds
test
ds
mov
stc
cmp
pop
inc
rcr
sahf
stos
test
aad
push
dec
iret
mov
adc
sub
or
xchg
push
sub
sti
jle
retf
jge
(bad)
mov
add
das
or
sub
adc
sbb
or
dec
mov
push
(bad)
jmp
cmp
addr16
push
js
inc
ja
in
rcr
stos
cmp
cmp
pushf
pop
test
xor
into
xor
mov
adc
push
(bad)
ins
mov
xor
into
out
packssdw
sub
jbe
daa
adc
dec
out
and
cmp
pop
mov
cmp
sub
pop
mov
mov
fs
sub
out
push
pop
arpl
cs
rcl
jo
fisttp
(bad)
out
ins
in
mov
push
mov
scas
cmp
inc
idiv
adc
movq
ret
mov
or
loope
dec
pusha
js
sbb
pusha
test
movs
cmp
dec
sub
std
js
div
in
jo
push
jmp
mov
add
in
cmp
repnz
ret
push
repz
loopne
imul
push
in
jbe
ss
jl
imul
popf
add
adc
sub
mov
pop
pop
addr16
xor
mov
imul
push
add
mov
pop
(bad)
xchg
fmul
and
add
jmp
mov
or
shr
mov
sub
dec
sbb
xor
in
adc
cs
jmp
in
pop
mov
shl
loop
cli
clc
pop
mov
(bad)
and
int
in
fild
xchg
inc
out
add
stos
sbb
push
fild
imul
xchg
sub
test
mov
xchg
pop
(bad)
sar
inc
pop
mov
push
jb
sbb
jecxz
repz
sub
pop
int
or
cs
or
mov
sbb
mov
mov
(bad)
das
pop
in
dec
inc
mov
push
mov
test
dec
inc
(bad)
lds
test
dec
push
xchg
data16
scas
sbb
adc
cs
xchg
or
cld
fsubr
jnp
enter
add
out
jns
mov
das
mov
sbb
daa
sub
out
jb
cmc
mov
out
(bad)
mov
push
shl
mov
mov
test
mul
in
bound
dec
inc
jnp
mov
adc
in
push
ror
fiadd
in
push
inc
mov
daa
sub
(bad)
xor
repz
pop
mov
in
xlat
xor
sar
xchg
push
addr16
pop
in
xstore-rng
cmps
inc
pop
in
xchg
push
ja
sub
cmp
adc
mov
pop
fwait
xchg
aas
xor
lods
xor
test
xchg
hlt
(bad)
xor
mov
loopne
cdq
outs
outs
in
cmc
xchg
dec
cwde
hlt
test
sub
push
jb
push
cld
retf
cmp
dec
jb
mov
leave
push
fcmove
jo
xor
(bad)
xadd
mov
pop
mov
dec
jg
sub
fcmovnb
xor
sbb
jo
les
stc
xchg
dec
pop
jmp
rcr
in
fs
sbb
js
jg
cmp
dec
xor
jo
push
add
cmc
push
popf
xor
push
mov
jae
jecxz
push
movs
test
fadd
push
adc
and
pusha
loopne
movs
mov
leave
cdq
popf
push
ret
mov
xchg
jne
cmp
lea
mov
push
dec
mov
sahf
fs
je
fst
test
mov
fwait
out
inc
jge
cli
sub
push
js
in
cli
mov
add
(bad)
enter
or
aam
and
mov
jp
loopne
jbe
cdq
jl
jb
sbb
jmp
out
xchg
mov
fs
cs
cmp
data16
mov
sbb
shr
push
push
loopne
mov
aaa
in
iret
adc
xchg
hlt
dec
ds
js
sub
or
mov
push
cmp
cmc
sub
(bad)
bound
cmps
movs
lds
pop
inc
cs
inc
sub
retf
icebp
or
cs
fnsave
loopne
pop
dec
mov
call
rcr
(bad)
sub
dec
adc
mov
and
pop
sub
jne
add
ja
rcr
daa
rcl
(bad)
mov
test
dec
cmc
(bad)
in
mov
js
mov
cmp
cld
sub
push
and
aas
jb
and
pushf
sub
mov
sahf
dec
or
addr16
jo
fimul
push
pop
out
clc
mov
xor
push
mov
adc
adc
mov
adc
xor
retf
std
fstp
bound
add
int
rcl
arpl
(bad)
xchg
adc
out
add
push
add
or
std
xor
movs
fisubr
test
cmp
pop
push
ret
mov
sbb
movs
sar
jp
push
loopne
retf
mov
mov
icebp
pop
out
pusha
in
xchg
or
mov
pop
mov
xchg
mov
mul
aam
mov
push
mov
sbb
jae
stc
std
mov
mov
jne
xchg
mul
pop
scas
xor
vrcpps
test
retf
jp
out
push
push
scas
inc
jmp
jns
sbb
lds
sub
loope
ret
pop
repnz
jmp
xchg
jle
or
pop
pop
mov
ror
xchg
daa
(bad)
shr
mov
jo
lea
rcl
js
call
data16
js
je
jnp
outs
fnstcw
sar
movs
in
push
nop
adc
aam
pop
jge
xor
and
xor
pop
sub
and
daa
ret
(bad)
aad
dec
std
call
inc
out
call
shl
retf
stos
or
jns
popf
inc
cmps
jg
dec
int
jp
lahf
sub
mov
std
add
dec
leave
push
retf
shr
clc
into
mov
pop
add
int3
sbb
cmp
xchg
fsub
xchg
iret
test
shl
add
add
sub
cwde
xor
jne
ror
cmp
jmp
mov
sbb
and
add
loope
sbb
inc
mov
sub
jle
mov
cmps
add
fistp
test
mov
push
or
les
jns
xlat
pushf
pop
or
jmp
dec
das
stos
dec
mov
lahf
jne
std
mov
arpl
repnz
aaa
sbb
adc
inc
mov
loopne
out
fwait
xchg
sub
fsub
cdq
popa
dec
stc
adc
jmp
arpl
lds
imul
in
jmp
xchg
int3
fidiv
test
js
cmp
movs
aad
adc
jb
(bad)
fwait
and
(bad)
mov
sub
int
in
push
xchg
ret
fidivr
sub
loope
jmp
fnsave
adc
xchg
jmp
mov
mov
in
ret
sub
adc
mov
sahf
mov
jo
das
sbb
mov
jae
frstor
add
(bad)
imul
or
les
or
bound
sub
xor
aas
jae
xchg
retf
into
push
jle
js
sar
ja
xor
int3
xchg
inc
retf
add
hlt
mov
and
aas
mov
jae
mov
test
mov
dec
out
xor
pop
ins
ficomp
jbe
cmp
jmp
lods
and
call
jl
mov
or
pop
in
push
fs
cmps
fild
loope
xor
cli
push
add
push
xor
mul
mov
sub
xor
repnz
xchg
mov
movs
push
ss
mov
adc
sbb
push
pop
mov
in
xchg
rcl
lods
outs
fdivr
ins
hlt
mov
xchg
jmp
cmc
xchg
sbb
fsubr
mov
push
leave
jbe
(bad)
fstp
dec
cmp
mov
daa
mov
out
xchg
or
fsubr
das
jmp
push
sar
push
push
jp
imul
test
sbb
cmp
addr16
pop
jae
jmp
mov
sub
cld
xchg
clc
stos
xor
(bad)
dec
jmp
jmp
fwait
cmp
jns
cmp
cld
jnp
pop
sar
sub
imul
cli
jnp
jp
out
loopne
aas
aas
imul
xchg
dec
leave
jnp
icebp
push
and
or
or
inc
fild
shr
movs
test
jp
sbb
adc
fnstsw
push
movs
adc
jg
dec
mov
hlt
out
and
pop
xchg
shl
pop
xchg
push
cmp
call
fdiv
jp
sbb
(bad)
xchg
rcr
(bad)
inc
in
xor
push
jle
in
cmc
sub
adc
cmps
lods
xor
cmp
cmp
fwait
scas
jp
push
ss
inc
sub
test
lea
add
jp
mov
jg
xchg
sbb
cmp
jecxz
push
mov
cmp
in
in
mov
jnp
push
scas
mov
hlt
pop
(bad)
(bad)
xor
push
les
sahf
fpatan
test
fcomp
rol
or
inc
cmp
push
mov
add
adc
xchg
xor
sti
jmp
cld
xchg
aam
push
icebp
jl
mov
mov
jo
jge
pop
cmp
mov
cmp
adc
test
lahf
hlt
mov
int
push
in
jge
stc
fistp
repnz
in
mov
fiadd
xor
mov
retf
or
ret
aas
push
mov
outs
test
and
pushf
fild
jg
jecxz
(bad)
sti
iret
sub
je
dec
jns
sub
test
lahf
cmp
and
repz
(bad)
xchg
cmp
xlat
xchg
push
mov
jae
scas
dec
pop
add
movs
xor
fsubr
and
adc
pop
xchg
pusha
mov
inc
jle
cli
or
lods
xchg
dec
jmp
xchg
arpl
(bad)
scas
jns
cmp
int
push
in
xchg
push
push
jle
pop
xor
xchg
push
inc
cdq
add
(bad)
add
out
cmc
mov
movs
xchg
lock
ret
mov
jmp
xchg
adc
xchg
stc
ja
jle
fnstcw
mov
mov
mov
dec
faddp
loope
cmp
inc
xor
je
rcr
int3
aaa
jp
loopne
sub
ret
xor
shl
ret
cmp
into
push
sar
loope
adc
out
jp
ins
aad
sub
push
push
fild
mov
leave
fcmovb
cmp
pop
push
dec
push
rcl
pop
mov
jl
jecxz
xchg
das
fisub
jmp
jo
ds
lahf
mov
xchg
sub
popa
ins
movaps
xor
cwde
sbb
(bad)
xor
or
bound
std
sub
out
aad
and
(bad)
dec
shr
sbb
xchg
es
pushf
pop
mov
inc
inc
jne
outs
xor
xchg
fs
mov
xchg
psraw
inc
ss
push
fsub
pop
jb
pop
cmps
and
call
mov
sub
rol
pop
push
jmp
add
repnz
je
inc
ret
adc
xchg
test
or
xchg
gs
pop
dec
inc
cmps
adc
push
test
sbb
mov
repnz
cmp
xchg
xor
jns
retf
xchg
mov
pop
cdq
xchg
pop
mov
js
cdq
cmp
sub
addr16
ror
adc
dec
sbb
jnp
ret
mov
jle
das
pop
mov
or
mov
adc
xchg
mov
int
cmp
mov
repz
dec
mov
adc
cmps
lahf
mov
sub
or
cdq
in
shl
inc
jmp
pop
pop
fdivr
adc
jo
nop
xchg
cmc
stc
ret
cmps
pop
es
cld
jb
sub
push
cmp
xor
jg
div
call
xchg
pop
sbb
xchg
cmps
fisubr
mov
fcomp
sub
je
hlt
cmc
fnstsw
aam
nop
push
xor
mov
push
xchg
or
shl
leave
fmul
hlt
xchg
mov
inc
fwait
and
or
adc
(bad)
jns
and
js
(bad)
cmps
aad
xchg
(bad)
pusha
lds
mov
outs
ins
fsub
add
pop
test
sbb
mov
dec
rcr
jo
cdq
jb
cmp
clc
sub
mov
pop
push
push
test
hlt
jge
and
loope
pop
adc
push
push
(bad)
je
xchg
ror
cmp
fiadd
add
mov
fbld
outs
sub
push
ja
retf
pusha
sub
aad
cmc
xchg
in
mov
sub
icebp
cs
out
dec
add
pop
mov
jmp
push
data16
adc
mov
dec
cdq
sti
cmp
xlat
adc
test
dec
repz
int3
imul
xchg
sbb
mov
int3
enter
fcmovnb
jp
xchg
out
sub
jl
or
pop
inc
and
push
in
inc
loopne
mov
je
cli
inc
adc
jmp
push
mov
inc
les
movs
mov
aad
dec
jle
or
cmps
add
cmp
clc
stos
test
xor
retf
mov
add
xor
mov
sub
fdiv
xor
xchg
cmp
lods
xlat
mov
idiv
je
leave
test
xor
push
aam
mov
xor
xor
sub
cli
imul
mov
ret
retf
(bad)
(bad)
cld
jmp
pop
jns
jmp
cmp
inc
mov
or
add
pushf
add
fisub
push
shr
mov
cmp
cwde
fwait
mov
mov
(bad)
adc
sub
imul
pop
pop
loopne
inc
jmp
(bad)
lock
dec
in
adc
inc
jo
outs
sbb
ins
jmp
sub
adc
daa
push
xor
call
loope
push
scas
daa
cli
test
test
xor
stos
pop
cs
mov
sub
sub
shl
je
and
test
mov
inc
ret
pushf
mov
lea
sub
xchg
popa
fwait
dec
jnp
cmp
outs
add
js
hlt
arpl
pop
mov
movs
sahf
mov
enter
loope
push
xor
repz
sub
mov
xor
mov
jo
cli
add
jne
jnp
leave
sahf
imul
xchg
jp
addr16
cmp
xor
jae
mov
jo
stos
sbb
or
push
pushf
lds
jb
xchg
addr16
jne
mov
xchg
cmc
in
sub
or
xchg
ds
jo
mov
dec
in
mov
cmp
inc
stc
mov
xchg
sub
inc
outs
xchg
mov
shl
mov
adc
loopne
cmps
xchg
push
cmp
cwde
xlat
adc
add
jmp
fild
dec
dec
push
je
popf
popa
stos
cmps
fst
jns
pop
xor
and
hlt
inc
fldenv
iret
cmc
sbb
xchg
mov
clc
push
xchg
inc
mov
xbegin
cmc
data16
in
xchg
(bad)
mov
jo
fldenv
pop
mov
pop
push
and
xor
shr
gs
xor
xchg
adc
lods
icebp
adc
adc
and
jns
xlat
je
mov
xchg
mov
sub
add
cmp
cld
int3
dec
mov
jp
mov
cmps
lock
inc
xchg
cs
int
aas
fild
jno
data16
test
and
add
call
stc
ror
adc
lods
jae
rol
lds
into
(bad)
ror
push
jle
jmp
das
mov
aam
stos
mov
ja
and
cmp
mov
cmc
inc
inc
mov
mov
test
push
(bad)
mov
push
loopne
and
idiv
sbb
jle
cmp
jmp
mov
lahf
dec
test
cmc
cli
inc
popf
xchg
add
inc
fwait
into
sbb
xchg
mov
test
sub
ror
mov
jb
out
les
xchg
and
js
add
mov
outs
mov
and
loopne
jl
repz
xchg
lods
adc
jne
jge
sahf
out
pop
in
cwde
retf
sub
iret
loopne
push
sub
cld
jle
jb
sub
jns
and
lds
daa
movs
xchg
aam
in
in
push
outs
jmp
lea
inc
cmp
or
jno
push
push
xor
push
iret
xchg
mov
pop
jp
adc
push
addr16
je
sub
and
xchg
xor
and
retf
mov
jmp
jmp
loopne
adc
je
retf
es
mov
lods
imul
fnsave
jle
xor
aam
js
add
iret
pop
(bad)
cwde
jae
jae
daa
ror
out
popa
data16
push
push
and
fstp
sbb
cs
cld
xor
xor
mov
je
jmp
imul
mov
cmp
mov
add
sbb
pop
push
adc
daa
clc
ficomp
push
in
imul
adc
jnp
outs
jl
or
aad
xchg
adc
enter
loop
cdq
clc
pop
sub
out
cwde
mov
scas
sub
adc
mov
les
mov
movs
cs
dec
ret
test
call
ja
xchg
pop
push
test
add
loopne
mov
cmp
mov
sub
pop
clc
outs
ret
stos
mov
inc
cmp
or
jecxz
pop
inc
pop
mov
mov
lock
loope
sub
mov
mov
dec
test
pop
pop
push
push
dec
add
out
push
shr
jle
add
(bad)
pop
lahf
and
adc
retf
adc
pop
jmp
jp
xchg
cmps
cmp
fs
rcr
das
js
cmps
inc
call
aad
in
cmp
scas
mov
aaa
push
js
daa
adc
retf
xchg
adc
jle
ret
je
pop
in
stos
daa
jecxz
ret
push
pop
jecxz
cmp
aad
sub
sub
mov
mov
imul
xor
mov
add
loope
ins
push
cmp
xor
inc
pusha
cmps
(bad)
xchg
ins
inc
pop
rol
ucomiss
jle
lods
push
mov
xchg
push
bound
ds
push
jne
xchg
cwde
scas
sub
sub
jno
cwde
loopne
loope
pusha
lahf
les
and
jl
xchg
shl
mov
mov
ss
xchg
test
movs
xor
leave
dec
test
cmp
sub
xor
cmps
jg
jg
pop
pop
loope
mov
jle
pop
jmp
fdiv
sbb
pop
loopne
mov
jns
xchg
stos
sub
fsubr
cmps
(bad)
mov
in
pop
les
pop
mov
cdq
dec
ficom
(bad)
enter
movs
lds
dec
jae
xchg
out
add
pusha
sbb
orps
mov
adc
(bad)
dec
sub
mov
jp
and
or
dec
xchg
cmp
adc
adc
call
fcom
aam
fist
lahf
mov
jp
xchg
mov
cmps
cwde
push
xor
sahf
ret
cmp
inc
js
xchg
aam
ja
adc
cmp
ror
xchg
sbb
jns
or
sbb
fwait
mov
jo
jmp
xchg
int
sbb
adc
mov
jns
mov
repnz
int3
rol
jmp
cmps
add
scas
aam
dec
(bad)
jmp
test
mov
data16
xlat
pop
lahf
pop
cmp
mov
into
push
int3
push
add
pop
push
sbb
pop
cmp
push
push
bound
cmc
cwde
bound
xchg
dec
push
jb
pop
jmp
push
add
retf
(bad)
mov
cmp
xor
jmp
je
int3
jmp
(bad)
outs
and
sbb
clc
jg
inc
and
ins
ins
ror
dec
test
push
rol
and
out
out
sub
les
pop
pop
jle
rcr
mov
cmps
and
test
ficomp
xor
pop
inc
or
rcl
lea
xchg
pop
or
addr16
fdivr
ins
lods
jle
dec
push
stos
or
dec
addr16
and
mov
lods
nop
pop
mov
lahf
fs
jo
(bad)
ret
dec
inc
mov
push
shl
daa
out
cmp
pop
or
pop
imul
pop
aam
adc
add
dec
icebp
int3
push
mov
cmp
sub
push
inc
mov
cmc
cmc
push
div
(bad)
sub
cmc
mov
pop
(bad)
test
pusha
ja
mov
or
adc
out
ret
pop
push
add
and
retf
xchg
sub
clc
inc
fwait
and
fldcw
add
fsubr
jae
mov
push
das
jbe
clc
loop
push
sub
lods
and
xchg
adc
mov
add
jae
rcr
cld
xchg
lods
push
in
jne
cmp
sbb
imul
or
or
hlt
je
pop
and
adc
les
jo
inc
adc
cli
test
pop
pushf
pop
fsubr
pusha
stc
test
das
xchg
clc
xor
sub
sbb
pop
xchg
(bad)
pop
into
push
(bad)
jo
js
xchg
jle
xor
dec
push
(bad)
in
fimul
xor
and
out
inc
jns
jp
pop
xor
jl
in
(bad)
sbb
dec
pop
in
pusha
cwde
push
add
rcr
clc
(bad)
fsub
xor
ficom
add
stos
ja
lods
data16
fs
sbb
inc
(bad)
shr
cwde
pop
loopne
inc
adc
es
push
(bad)
(bad)
jns
jle
mov
lock
xchg
xchg
clc
mul
mov
jo
movs
sub
add
lods
adc
pop
add
lds
fsubr
cmc
push
mov
pop
aad
jmp
jne
arpl
sub
jne
pop
call
lds
out
pop
inc
sub
or
stos
scas
inc
mov
repz
movlps
mov
fwait
int
sbb
cld
xchg
jae
xchg
sar
arpl
aas
add
push
shl
stos
and
sub
retf
data16
dec
mov
sub
or
jmp
xor
dec
ss
movs
jno
cdq
cmc
pusha
adc
xor
push
xchg
jmp
jo
adc
pop
jo
cmp
pop
xchg
js
hlt
xchg
mov
daa
cmp
imul
mov
cmc
and
rol
adc
bound
and
les
fbstp
mov
frstor
in
sbb
mov
xchg
jne
xchg
xor
arpl
jmp
xor
dec
mov
jbe
sti
cmps
cmp
sbb
sbb
dec
(bad)
loopne
pop
mov
jp
imul
sbb
xchg
push
icebp
or
rol
mov
xchg
xor
dec
sub
adc
push
in
adc
xchg
cmp
mov
hlt
cmps
sub
pop
and
sub
sahf
mov
push
mov
push
jl
inc
mov
mov
and
popw
movs
jbe
push
xor
int3
mov
mov
popf
cmc
xchg
sub
push
pusha
lods
xchg
les
clc
cmp
mov
(bad)
std
ja
inc
pop
mov
mov
enter
jecxz
ret
out
dec
fstp
js
in
cmp
fld
xchg
pop
xor
out
movs
cmps
xchg
loopne
pusha
fidivr
or
mov
inc
aam
xor
cmps
(bad)
out
ret
pop
sbb
and
xchg
pop
pusha
movs
stos
jl
adc
pop
or
fidiv
dec
mov
ins
lea
xlat
call
jge
pop
pop
imul
xchg
loope
cmps
xchg
add
mov
or
retf
xchg
pop
addr16
test
xor
jb
clc
lds
sar
fild
ds
jge
inc
add
sbb
push
in
cmp
inc
dec
adc
stos
fdiv
adc
je
icebp
loop
lods
xchg
imul
xchg
dec
push
dec
push
sbb
sar
jo
xchg
pop
cmp
mov
inc
push
in
ss
sub
xlat
cmp
out
cmp
mov
es
sub
jns
aam
pop
adc
into
jge
push
adc
or
hlt
test
push
xchg
ret
daa
or
mov
push
mov
cmp
pop
inc
sbb
ret
call
jp
xchg
and
mov
mov
jg
or
loop
mov
loop
add
jno
loope
bound
daa
push
mov
repz
xchg
(bad)
cmc
inc
pop
dec
sub
mov
pop
daa
mov
push
dec
mov
lods
adc
loope
out
jmp
jge
test
les
adc
inc
mov
sbb
xor
in
push
mov
jecxz
mov
in
int
adc
and
fidivr
sub
or
jo
int3
add
xchg
mov
call
jge
xor
iret
fdiv
jle
jae
retf
and
pop
mov
cmp
jmp
push
jns
sub
data16
xor
mov
sar
xlat
pop
out
mov
xchg
sub
fs
cmp
imul
rcl
aam
inc
iret
xchg
pushf
and
sbb
std
mov
sbb
les
mov
mov
push
mov
es
lahf
not
stos
int
push
fistp
inc
outs
cmp
jmp
adc
xchg
test
(bad)
mov
je
(bad)
fs
push
stos
shl
push
inc
je
jecxz
xchg
aaa
push
test
fs
arpl
dec
cmp
mov
enter
lds
jl
aam
cmp
retf
std
nop
sbb
sub
rcl
cmps
in
sub
push
or
jmp
inc
enter
dec
mov
xchg
cwde
mov
clc
jbe
in
sub
addr16
push
stc
xchg
pop
add
jbe
inc
xor
mov
sub
xor
add
mov
jnp
pop
xchg
xchg
imul
jl
sub
(bad)
jne
xor
adc
js
pop
bound
outs
xor
jns
mov
jl
inc
shr
sub
jae
cmp
add
mov
cmp
lock
inc
cmps
pop
pop
ficomp
ss
dec
xchg
sub
xchg
jl
adc
push
mov
jmp
pop
js
jae
mov
stos
jo
or
and
retf
ror
scas
in
xor
mov
(bad)
pushf
aaa
and
popa
pop
cmc
or
cmp
push
shr
sbb
mov
sub
and
leave
(bad)
(bad)
pop
mov
sbb
sub
sub
jge
xchg
fmul
inc
xchg
loopne
adc
pop
gs
add
mov
jns
mov
adc
test
or
cdq
(bad)
xor
and
outs
outs
jecxz
outs
js
mov
or
(bad)
push
xchg
cmc
fs
adc
pop
dec
jbe
jns
dec
(bad)
push
mov
mov
pop
lods
xchg
in
xchg
mov
adc
or
ja
movs
mov
in
mov
adc
push
add
dec
xchg
(bad)
iret
call
pop
sub
mov
das
ret
or
dec
xchg
jbe
xchg
cld
xor
jb
pop
push
push
shl
popf
fidiv
repz
lea
mov
cld
in
push
adc
retf
pop
ds
add
adc
xchg
stos
je
cmps
sti
jle
mov
push
cmp
xchg
fsub
nop
sahf
movs
js
sbb
xchg
repnz
mov
cld
add
cmp
mov
xchg
pop
js
mov
out
cld
daa
std
mov
jmp
fcom
jecxz
ins
in
in
xchg
sub
jbe
(bad)
into
(bad)
cmp
std
ja
xor
jo
jmp
jge
fnsave
ins
mov
shr
or
sub
pusha
fild
sub
retf
push
cmp
jge
in
and
push
aad
xor
jp
sar
adc
mov
and
cmc
clc
and
pop
data16
adc
sbb
lods
xor
sub
jl
(bad)
and
adc
push
pusha
popa
pop
xchg
add
out
sub
dec
push
cmp
mov
dec
pop
aas
cwde
sbb
inc
mov
mov
jns
xchg
mov
pop
jnp
mov
ins
sbb
fs
arpl
mov
icebp
loop
in
and
pop
or
xchg
xchg
ins
jge
sub
adc
mov
push
js
pop
outs
pusha
js
jmp
call
inc
xchg
mov
popa
or
jecxz
loope
add
and
mov
inc
mov
add
pop
and
sub
mov
sbb
int3
aaa
pop
or
or
or
iret
ins
jl
sub
dec
jle
cmp
cmps
inc
cmp
push
sub
xor
inc
xrelease
xor
clc
or
test
xlat
or
in
stos
int
mov
daa
repz
je
pop
lea
push
jg
xchg
push
add
xchg
push
in
test
out
fs
pusha
add
cs
jnp
cmp
xchg
lods
(bad)
cmp
into
mov
mov
push
imul
popa
pop
dec
and
xor
mov
push
test
jl
pusha
xor
ret
mov
hlt
adc
push
sbb
loope
mov
out
and
fucomi
xor
mov
ret
xor
test
retf
(bad)
adc
mov
xor
inc
aad
mov
xchg
fstp
pop
mov
jae
jmp
pop
xor
jo
(bad)
push
std
call
mov
loop
(bad)
sbb
add
or
cdq
inc
sub
lds
add
push
fcom
pop
xchg
pop
jno
mov
mov
lods
adc
sahf
fsubr
test
xchg
ins
and
mov
jo
ror
mov
stos
retf
xchg
lods
mov
movs
mov
jge
mov
push
push
push
push
sub
xchg
loopne
cmp
add
out
pusha
dec
rcr
cmp
outs
scas
sub
cmp
mov
lock
jmp
call
loopne
inc
sbb
out
cdq
imul
and
push
sbb
pop
jbe
shl
and
adc
jp
mov
jle
repnz
push
push
cmps
cld
push
xchg
fistp
outs
mov
retf
xlat
call
stc
fwait
inc
mov
cmc
bnd
ins
or
test
movs
test
sbb
add
cmp
lods
xchg
out
push
cmp
and
outs
sbb
sbb
cwde
pop
div
mov
in
xchg
call
push
mov
mov
inc
stc
jg
fdiv
sbb
or
shr
xchg
ficom
loope
sub
test
add
pop
icebp
mov
and
in
cmp
call
cs
mov
sbb
ds
dec
retf
xchg
jbe
adc
sbb
pop
aad
int3
pop
inc
ds
push
xchg
push
leave
cmp
loopne
mov
shl
lods
push
xor
je
fwait
popa
cs
test
lea
les
test
data16
mov
mov
cwde
sub
movs
xor
sbb
cmp
test
cld
ror
sahf
imul
mov
inc
lods
and
push
ror
cld
scas
adc
adc
push
push
out
int
les
ins
mov
sub
jo
mov
sub
mov
je
int
dec
jle
fisub
mov
cmp
push
enter
pop
sub
into
jg
sbb
scas
ja
faddp
loop
movs
cmp
inc
in
test
cmps
cmp
lea
inc
or
adc
cwde
sub
sbb
xchg
jle
add
je
mov
pop
pop
lea
xchg
cli
scas
mov
and
aam
mov
std
xacquire
imul
pushf
xor
repnz
retf
dec
mov
xchg
retf
and
fsubp
pop
dec
pop
add
pop
(bad)
adc
dec
push
dec
ss
fcmovu
jp
jecxz
mov
pusha
sub
sti
pop
mov
out
xchg
lds
or
daa
sbb
in
cmp
adc
imul
add
lahf
or
xchg
xchg
mov
push
xchg
idiv
dec
push
mov
sar
cmp
call
rcr
shr
add
ror
out
mov
cs
xchg
inc
pop
jns
movs
mov
jg
push
pop
lods
xchg
ja
out
xchg
stc
mov
pop
jmp
jae
jnp
xchg
inc
and
leave
ja
inc
call
sbb
jp
test
shl
daa
add
xchg
cwde
xchg
mov
jbe
dec
fs
adc
sbb
add
repz
and
mov
ins
ror
cmp
inc
scas
adc
xchg
in
adc
push
sub
jle
push
fadd
mov
mov
sbb
cmc
into
aad
repz
xor
std
cld
cmps
or
retf
cmp
sbb
daa
push
stc
add
mov
jnp
ss
icebp
inc
movs
dec
pop
push
sbb
clc
mul
xchg
inc
stos
loopne
pop
adc
pusha
mov
pop
push
pop
pop
sub
and
jl
mov
pop
mov
xchg
jmp
add
lahf
adc
sub
das
cmp
div
push
std
nop
cmp
push
or
pop
sub
sub
add
xor
sub
and
xor
addr16
out
ror
mov
dec
in
jmp
adc
cmps
hlt
ret
ins
or
icebp
fild
and
jo
loopne
mov
push
inc
mov
ins
push
pop
or
loope
ret
add
fs
sbb
cmc
out
inc
adc
mov
xor
mov
mov
fcmovne
movs
push
push
pop
adc
push
out
lds
inc
mov
das
mov
dec
ins
lods
gs
and
push
fcomp
(bad)
out
and
and
(bad)
mov
mov
leave
mov
cmp
popf
inc
adc
push
arpl
xchg
je
and
rcr
add
fstp
popf
sbb
push
push
xchg
pop
shr
mov
cmp
jmp
out
pushf
push
push
and
fld
inc
mov
mov
sub
outs
fbstp
mov
cmp
xlat
ja
push
cmp
rol
sar
inc
jbe
sub
jo
test
mov
jmp
fdivr
mov
jb
pop
out
shr
push
out
hlt
pop
dec
int
jp
sbb
in
xchg
in
push
ja
jmp
imul
mov
add
into
lock
sub
mov
loope
xchg
xor
jns
adc
pop
sahf
sti
out
pop
in
jns
xchg
sbb
push
loopne
or
dec
mov
mov
addr16
nop
mov
loopne
push
jmp
xchg
inc
mov
and
push
sbb
pop
repz
and
fwait
or
shl
ror
mov
inc
adc
data16
(bad)
cmp
sbb
jmp
aaa
push
fimul
pushf
adc
add
jns
fldcw
(bad)
mov
jmp
cmp
loop
cwde
int
mov
jmp
fimul
cmc
adc
clc
xor
js
push
rcr
mov
mov
icebp
daa
sbb
or
ja
mov
shl
jp
retf
inc
jp
xchg
je
js
jle
or
cld
hlt
cmp
xor
call
aad
inc
sbb
loopne
xchg
data16
jnp
sbb
xchg
or
aam
fist
pop
push
sar
mov
dec
outs
xchg
ins
add
test
jmp
sub
dec
pushf
retf
scas
and
shl
jg
bound
cmp
adc
mov
sub
(bad)
jmp
out
jne
rcr
mov
mov
aam
js
out
mov
cmp
lock
xchg
sub
pushf
sub
(bad)
jmp
mov
jmp
or
outs
imul
jecxz
jb
fwait
mov
inc
xchg
pop
cs
xchg
push
inc
addr16
aaa
shr
xchg
popf
or
mov
pop
sbb
pop
daa
mov
outs
dec
push
jp
(bad)
jg
sbb
xchg
xchg
jne
inc
cmp
in
inc
cli
or
lods
cmp
mov
out
(bad)
ror
xor
jp
inc
(bad)
loopne
shl
dec
loop
sub
push
inc
adc
out
gs
stos
xor
adc
jo
sub
pop
jp
and
sbb
iret
xor
lods
jno
cld
inc
in
cmp
sub
push
jns
mov
imul
cmps
fsubp
scas
xchg
test
xchg
ror
mov
cwde
mov
xor
mov
push
retf
xchg
inc
and
push
test
sbb
xchg
or
popa
out
adc
and
icebp
xor
pop
cmp
cmp
stos
fisttp
sbb
aas
jl
or
cld
and
and
and
test
and
xchg
add
stc
not
es
packuswb
mov
out
pushf
shl
add
push
sahf
sbb
mov
sahf
fldenv
data16
fsubp
fistp
push
jmp
add
dec
test
pop
mov
adc
pop
mov
loopne
popa
push
xchg
cmps
outs
out
cmps
ja
sbb
gs
push
pop
push
fdiv
or
xchg
and
jbe
add
(bad)
lea
imul
sar
in
rol
mov
xchg
inc
pop
pushf
cmps
into
pop
push
and
cmps
xchg
fmul
in
xor
or
repz
mov
cmp
cmp
ret
push
jle
xchg
pop
jo
hlt
xor
inc
cs
mov
fadd
fstp
call
adc
push
xchg
stc
call
mov
daa
daa
pop
inc
outs
stos
mov
mov
inc
loope
test
je
(bad)
or
xor
push
rcr
sub
out
fwait
jns
pop
sbb
(bad)
cli
xchg
leave
add
mov
fs
add
mov
xlat
aas
push
pop
cwde
fs
fwait
rcr
inc
xchg
les
jge
sub
mov
fisubr
or
daa
and
and
inc
push
mov
add
pusha
fistp
push
or
push
jo
mov
mov
mov
shr
fimul
rcr
fsubr
xor
cmp
les
mov
retf
push
test
sub
ins
dec
(bad)
inc
not
mov
rcl
aad
out
adc
aas
jg
and
dec
jo
leave
imul
push
xor
mov
loopne
adc
and
lea
pop
sar
adc
jno
jno
xchg
(bad)
icebp
and
xor
sbb
add
sub
call
or
mov
sub
pop
inc
and
test
test
mov
xchg
or
mov
outs
lock
stos
clc
loopne
mov
add
sbb
adc
das
daa
push
push
outs
jmp
mov
aaa
dec
test
xchg
adc
mov
rol
and
(bad)
sub
pushf
or
cld
shl
or
out
dec
cmp
adc
cmp
jno
clc
call
scas
or
mov
sbb
sbb
test
push
shr
jo
and
aaa
aad
shl
fstp
(bad)
arpl
or
jbe
mov
retf
enter
mov
cld
enter
xor
and
movs
ins
aam
in
loop
mov
cmp
out
js
iret
mov
cmc
sub
dec
adc
pop
leave
adc
dec
dec
add
adc
push
xchg
mov
add
mov
fwait
push
xchg
cmp
push
sbb
dec
mov
pop
xchg
xchg
fbld
sar
jne
js
xchg
fs
add
xor
test
and
test
stos
mov
pop
sub
adc
(bad)
and
xchg
call
shl
push
(bad)
mov
xor
clc
sub
test
cmp
pop
sub
lods
aaa
xor
add
dec
test
sbb
xor
mov
xchg
ds
dec
jl
icebp
pusha
ror
cdq
je
pop
push
pop
xchg
adc
pop
xor
dec
imul
neg
imul
fcomp
pop
mov
popf
cmp
jae
mov
imul
shl
clc
cmps
test
mov
cmps
xor
js
aad
imul
repz
cmp
jmp
jge
mov
and
jge
pop
xchg
call
jne
call
or
mov
addr16
xchg
scas
cwde
sbb
xchg
out
fbstp
xchg
pop
xchg
shl
mov
ins
out
(bad)
push
lds
add
push
pushf
cmp
lock
mov
mov
ins
les
rol
sbb
xchg
mov
(bad)
dec
(bad)
ret
outs
and
sub
mov
sub
xchg
fld
je
out
icebp
sub
test
test
call
dec
mov
sbb
mov
push
jmp
fs
inc
add
and
add
mov
xchg
mov
cwde
les
sub
jo
ret
sar
ficomp
xchg
push
int3
push
das
cmp
jno
lahf
nop
add
jmp
mov
push
mov
xchg
call
repz
in
push
inc
imul
jne
mov
jmp
loop
and
mov
stos
in
ret
mov
mov
leave
push
sbb
daa
dec
add
xor
mov
xchg
adc
push
fdivr
retf
shl
inc
hlt
push
mov
xor
xchg
xor
shr
sbb
fdiv
test
addr16
arpl
dec
adc
sub
stos
push
fsubr
push
cmp
sub
adc
sub
enter
cmp
jle
lock
xchg
push
inc
(bad)
fbstp
xlat
mov
mov
xchg
mov
jae
xchg
mov
xor
sahf
out
ins
nop
stos
sbb
dec
jg
pop
push
ss
push
cmp
xchg
lods
mov
aas
call
loopne
call
cmps
xor
mov
jae
loopne
sub
mov
xchg
dec
ror
cwde
add
add
push
fisub
jecxz
jmp
stos
out
or
add
mov
mov
fstp
pushf
dec
sub
in
lock
out
push
rcl
call
ss
inc
mov
sbb
cmp
pop
jge
jmp
jmp
cmps
cdq
sub
out
in
fild
loop
jns
(bad)
dec
or
and
sar
loop
lds
mov
movs
mov
xor
add
out
pusha
add
ds
xchg
sbb
scas
cld
es
push
loope
mov
imul
daa
jns
mov
xchg
mov
and
mov
jo
push
nop
(bad)
cld
in
xchg
loop
jns
mov
mov
clc
cmp
into
jne
mov
jae
push
pusha
ins
imul
stos
pushf
mov
xor
and
cmp
es
nop
sbb
out
fdivr
cs
call
push
mov
rcr
inc
outs
jmp
xchg
mov
pop
jmp
jbe
inc
shl
xchg
adc
cmc
sbb
sbb
xchg
cmp
es
leave
or
add
test
fs
div
call
add
cmc
xlat
mov
stos
das
cli
cld
pop
imul
push
sbb
cmc
js
test
outs
ss
int3
lods
push
iret
test
jp
pop
xchg
adc
je
movs
push
cdq
xor
or
xchg
(bad)
dec
cmp
sbb
sar
ret
dec
scas
jnp
les
xchg
in
jle
xor
dec
and
call
ja
xchg
test
adc
in
jge
test
xchg
shl
jo
pop
mov
retw
sbb
adc
pop
out
xor
ror
sbb
dec
stos
sar
jmp
out
fwait
mov
or
mov
mov
cli
pushf
sbb
in
loopne
sub
dec
mov
in
in
ins
das
movs
jbe
sbb
dec
mov
push
push
add
mov
and
scas
or
pop
jns
mov
push
xor
loopne
jb
lods
das
lods
adc
jge
imul
pop
cmp
sbb
mov
mov
inc
data16
cmc
cld
scas
jns
cmc
adc
(bad)
fidivr
push
and
sbb
mov
jp
cld
fwait
mov
sub
sub
cmps
inc
jne
xchg
or
cmp
and
fidiv
mov
aad
jp
mov
cmp
scas
jmp
pop
push
xchg
gs
dec
adc
call
pop
stos
jmp
mov
jecxz
cmp
xchg
cmp
inc
test
mov
fild
jge
xchg
(bad)
fbstp
push
mov
retf
push
sbb
sub
out
jne
dec
cwde
mov
cwde
icebp
js
iret
mov
push
ret
mov
push
in
push
aad
ficom
pop
cmp
xchg
outs
cld
int
xor
int3
adc
and
imul
mov
sub
cmps
cmps
iret
sbb
mov
push
jo
xchg
repz
mul
sub
sbb
aad
fisttp
imul
mov
add
push
mov
mov
cmp
and
mov
js
lock
nop
and
push
sbb
hlt
ja
cmp
cdq
addr16
jns
pushf
pop
test
stos
sub
ror
addr16
fild
pop
xlat
and
pop
lods
test
add
inc
and
cmp
adc
popa
xor
push
xchg
and
call
and
fsubp
scas
jb
sub
mov
inc
mov
(bad)
xchg
leave
mov
ret
adc
inc
cmp
or
xchg
jns
sar
xchg
or
adc
mov
mov
hlt
jo
and
jmp
dec
pop
xchg
out
inc
arpl
jmp
sub
xor
mov
das
loopne
jo
mov
jo
push
cmc
adc
inc
dec
std
outs
repnz
jns
fild
pop
mov
cs
bound
jmp
popf
or
xor
mov
cmp
out
mov
pop
leave
or
push
sub
lea
cld
jb
test
pop
clc
xchg
cmps
push
mov
(bad)
in
in
xchg
movs
in
add
loope
sbb
in
mov
push
sub
or
and
sub
hlt
pop
stos
(bad)
fwait
or
dec
arpl
ret
lock
pop
ror
cli
mov
outs
imul
je
jmp
stos
inc
cld
mov
(bad)
dec
(bad)
repnz
jge
adc
mov
nop
pop
outs
push
rol
jne
in
(bad)
mov
sub
in
add
fisubr
cvtdq2ps
loop
push
cmp
ins
fucomip
cmp
jmp
jnp
rol
jns
icebp
test
std
pop
lds
xor
cmp
jbe
push
retf
out
jp
(bad)
(bad)
jmp
mov
(bad)
cmp
clc
into
retf
std
push
retf
cmp
cmp
les
loopne
int3
mov
movs
cmc
scas
jns
sub
cmc
jno
cmp
and
call
inc
iret
sbb
icebp
loop
fs
xor
loopne
ret
add
add
dec
push
lds
cmp
inc
or
jns
outs
div
cdq
fistp
test
mov
sub
or
xor
xor
and
dec
ret
pop
jecxz
adc
retf
cmp
or
rcl
xor
mov
mov
sbb
(bad)
movs
cwde
lds
mov
push
push
mov
scas
daa
jp
push
daa
pushf
push
push
in
push
cdq
mov
push
dec
xchg
jmp
add
push
fidiv
js
daa
mov
mov
and
inc
add
shr
lds
pop
mov
stos
lahf
xlat
out
inc
ret
lahf
push
sub
loop
xchg
push
popf
dec
out
push
nop
sar
icebp
out
aas
dec
bound
lahf
mov
xor
sub
daa
loopne
jecxz
test
popa
test
cmp
fimul
(bad)
je
jnp
add
repz
lahf
cwde
pop
js
aam
out
xchg
mov
jae
hlt
icebp
push
cmp
sub
xchg
retf
inc
loop
push
mov
fdivr
test
dec
mov
out
sbb
movs
push
inc
stos
jmp
call
pop
sar
fwait
hlt
jge
test
xchg
push
data16
clc
loopne
pop
das
sbb
cli
mov
xchg
cmps
mov
cli
dec
imul
movs
or
loope
push
hlt
fwait
jmp
std
xchg
pop
mov
mov
add
xor
leave
jg
adc
sub
cli
test
mov
imul
jbe
xchg
xchg
mov
push
js
iret
ror
shr
push
mov
sbb
mov
jecxz
pushf
clc
xor
hlt
das
jo
push
jp
mov
ins
cmp
push
je
fist
push
cmps
cmp
out
sub
and
xor
out
addr16
cdq
jle
aas
xchg
cwde
inc
out
jae
sbb
pop
nop
inc
jmp
mov
push
adc
and
int3
dec
push
pushf
inc
xchg
aad
imul
repz
ret
in
shr
dec
pop
adc
xor
sbb
pop
cli
test
sbb
movs
js
fimul
xchg
outs
or
aad
push
mov
cs
and
cmc
jecxz
and
clc
pop
outs
or
jne
out
jmp
repz
out
jae
xchg
mov
adc
mov
int
movs
cmp
adc
cs
cmps
les
stos
push
test
in
ins
and
pop
dec
repz
sbb
dec
cmp
(bad)
push
sahf
xor
push
int
xchg
sub
push
cs
es
mov
and
fs
ja
retf
xor
movs
push
add
push
sub
jnp
xor
loopne
pop
das
jnp
mov
pop
enter
mov
sub
jbe
addr16
pop
xor
add
inc
iret
test
hlt
into
sbb
dec
iret
shl
push
xchg
or
mov
nop
int
pusha
loopne
jle
and
loope
fcom
das
xchg
cmps
fisub
cmp
xchg
int
fucomp
daa
or
cmc
call
jbe
inc
in
push
loope
out
sub
pop
sub
sbb
jae
sub
pop
hlt
mov
and
cdq
cmp
test
jmp
xlat
stos
pop
(bad)
xor
fisubr
mov
push
stc
sub
jecxz
icebp
into
cmps
fistp
adc
inc
push
cwde
mov
hlt
add
out
rcr
rcl
xor
out
jmp
push
stc
test
sub
mov
push
sub
inc
jp
call
sub
repz
jl
adc
sar
xor
iret
fs
pop
or
mov
imul
std
pushf
mov
loope
xchg
jmp
cmps
movs
mov
retf
mov
retf
push
mov
jmp
cmp
dec
repnz
icebp
sbb
sar
mov
repnz
cld
retf
pushf
lock
loop
outs
repz
cmps
mov
repnz
jmp
push
cmp
repz
xchg
add
cmp
mov
frstor
rcr
sbb
ins
icebp
outs
inc
adc
test
cli
push
test
outs
ja
out
jne
xor
test
and
push
jl
or
jle
jns
retf
xchg
or
inc
push
mov
push
cmp
jecxz
or
fmul
ret
aad
xlat
jbe
js
xchg
in
jl
sub
mov
mov
pop
push
mov
scas
pop
jns
sahf
dec
cli
mov
scas
pop
fistp
shr
retf
sti
aam
std
sbb
sub
mov
and
xchg
bnd
jno
gs
sub
mov
adc
dec
mov
fnstenv
sub
xor
dec
add
push
loope
out
jns
mov
add
xchg
retf
outs
repz
shl
aaa
jns
int3
sbb
push
out
jmp
icebp
jns
outs
sti
pop
int
push
cmp
mov
fs
mov
mov
or
jge
sub
jle
jb
jg
inc
rcl
push
jge
adc
pushf
jbe
pop
push
jle
mov
jge
bound
aam
test
stc
dec
les
or
fcomp
dec
test
mov
dec
ret
aaa
cmps
jo
sub
leave
inc
and
shrd
jns
(bad)
or
inc
ficom
push
jge
jno
test
fwait
lahf
dec
dec
gs
sbb
inc
inc
std
movs
iret
mov
dec
daa
jg
add
hlt
xor
fadd
int
and
adc
retf
push
outs
loop
into
cld
pop
adc
inc
xchg
(bad)
aad
add
pop
and
rcpps
std
mov
sbb
sub
dec
pop
pop
repz
out
ficomp
jg
pushf
cmp
(bad)
pop
nop
daa
pushf
xor
push
cmp
js
push
icebp
into
fcmovu
sub
mov
addr16
lods
mov
gs
push
jae
fcom
pop
scas
dec
loopne
inc
jmp
aam
loopne
xor
xchg
cmps
and
and
(bad)
out
mov
retf
iret
sar
lahf
sbb
adc
leave
div
jmp
js
sub
jg
std
leave
jb
and
dec
test
adc
mov
sar
call
inc
push
pop
les
addr16
mov
leave
adc
imul
cmp
imul
sub
(bad)
fwait
out
jb
pushf
push
push
sbb
(bad)
lods
xchg
retf
ficomp
(bad)
rcl
adc
scas
dec
mov
inc
xor
test
loope
in
pop
mov
mov
dec
pop
sbb
test
std
hlt
and
in
mov
pop
sub
icebp
sbb
cmp
add
ja
xchg
(bad)
ret
in
loopne
sbb
dec
addr16
mov
retf
mov
hlt
fmul
les
imul
mov
jae
pop
fisubr
jnp
mov
shr
into
sar
mov
and
xchg
inc
sub
sbb
mov
push
xchg
mov
daa
sbb
call
jae
mov
xor
out
icebp
adc
inc
sub
jl
adc
mov
add
xor
pop
std
dec
lds
jo
and
test
xrelease
ja
cmp
pop
or
adc
jmp
loope
js
cwde
sub
inc
loop
pusha
repz
sar
adc
sbb
mov
cld
xchg
test
mov
inc
aas
les
sub
fs
shl
cmp
in
push
push
xor
sub
in
adc
adc
cmps
cli
dec
push
out
pop
xchg
pop
xchg
push
cmp
imul
rol
push
and
sub
in
nop
sti
mov
pop
in
cmps
loopne
retf
imul
or
jns
dec
vpinsrw
pop
mov
fild
pushf
xor
fstp
into
cs
and
mov
mov
sub
sbb
ficomp
and
fdivr
imul
jne
jle
shl
or
icebp
loope
pop
sbb
lods
dec
pop
push
add
clc
xchg
cmp
sub
retf
in
lea
xchg
cmp
add
mov
push
leave
fisttp
test
mov
add
jp
xor
sti
rcl
xchg
int3
add
and
pop
xor
sub
in
mov
dec
scas
aad
lods
repnz
rcr
call
ret
mov
(bad)
arpl
leave
mov
in
outs
sub
mov
ret
aas
xchg
or
jle
rol
(bad)
fstp
jmp
(bad)
int3
ja
cmps
inc
xor
sub
and
and
rep
jmp
push
icebp
dec
shr
out
xchg
mov
frstor
out
mov
dec
xchg
sbb
imul
xor
push
not
jne
pop
jle
cmp
loope
cmp
jns
push
shr
neg
sbb
push
or
int3
jmp
and
and
dec
xor
imul
push
xchg
mov
jo
add
daa
mov
sub
int
cmps
enter
inc
cmp
mov
jne
call
in
add
call
or
adc
mov
icebp
push
bound
mov
pop
fsubr
loopne
repz
push
adc
xor
std
push
(bad)
lods
sub
shl
inc
add
push
test
jnp
jbe
lds
adc
xchg
pop
mov
test
mov
xor
or
xchg
ds
inc
dec
xor
jo
mov
push
(bad)
mov
mov
push
scas
fidiv
mov
mov
push
or
and
(bad)
mov
arpl
popf
mov
sbb
shr
jb
mov
aad
dec
jmp
xchg
test
(bad)
or
(bad)
dec
clc
xchg
retf
call
sar
fcmovnu
pop
mov
xchg
repnz
imul
movs
out
fld
dec
and
or
adc
ja
(bad)
mov
and
(bad)
mov
sub
dec
jg
xor
les
sbb
jo
loope
mov
pop
ins
push
mov
es
lea
pop
test
aam
sbb
popf
jns
loopne
shl
je
es
(bad)
cmc
add
loopne
les
dec
mov
mov
(bad)
pop
inc
dec
cmps
(bad)
dec
xlat
cmps
popa
mov
in
xchg
icebp
into
test
fstp
inc
xchg
cdq
aas
or
sbb
sub
cmc
xor
add
sub
cmps
arpl
mov
lahf
xor
mov
dec
cmp
adc
addr16
fwait
xchg
xor
sub
ins
rcr
mov
cli
mov
or
cmp
adc
shr
mov
adc
aad
in
scas
xchg
and
fs
xchg
mov
xchg
pop
push
cmp
dec
aam
dec
jns
adc
ret
xchg
push
cmp
adc
adc
xor
ins
int3
enter
jno
fstp
sub
pop
dec
int3
pop
call
cmp
cmps
cmp
sub
mov
sub
mov
leave
and
pop
les
rol
cmp
ins
jge
repz
or
sahf
repz
cmp
int
or
mov
mov
add
add
xchg
jp
in
lods
sbb
cmps
push
sbb
loopne
in
push
rcl
push
sub
fs
loopne
cmps
mov
cli
aaa
mov
popa
outs
mov
scas
xchg
cmp
adc
pop
lock
push
jno
xchg
retf
jmp
fs
jnp
cmc
push
in
stc
sbb
ret
imul
sbb
arpl
aad
outs
xchg
(bad)
into
mov
test
sub
adc
arpl
data16
sub
dec
jg
dec
xchg
pusha
cmp
mov
add
or
add
mov
adc
pop
sbb
jmp
inc
xor
outs
pop
mov
nop
sub
cmp
push
pop
test
and
js
ins
xchg
into
enter
ja
mov
aad
inc
adc
dec
jmp
inc
xchg
adc
out
pop
fs
sbb
cmp
dec
jae
test
or
or
loopne
dec
sbb
adc
xor
lahf
int
clc
cld
dec
out
ror
cli
ror
sbb
gs
inc
data16
das
cmp
cmc
sti
jno
xor
call
out
jne
mov
jmp
xchg
cmp
call
jbe
fisubr
dec
sar
das
je
push
push
cwde
xchg
out
push
push
xor
fs
je
in
aas
movs
icebp
sbb
leave
push
xor
sub
retf
mov
pop
std
es
(bad)
and
dec
xchg
or
int3
dec
shl
aaa
test
ret
lods
int
lock
stc
leave
stc
jle
pop
(bad)
dec
inc
sub
pop
daa
and
inc
arpl
cld
add
sub
mov
icebp
out
imul
cmp
dec
inc
mov
xor
mov
inc
jbe
sahf
sub
add
fisub
jmp
sub
jle
add
loopne
sbb
sub
pop
push
sbb
nop
stos
and
sub
mov
push
adc
add
xchg
popf
mov
mov
mov
push
jmp
(bad)
cmp
mov
fadd
fs
das
dec
mov
sti
cld
ins
xor
sbb
in
sbb
and
and
jl
sbb
imul
test
ds
mov
test
movs
jbe
cmc
xor
iret
std
imul
pop
push
lahf
cwde
in
sahf
loopne
ret
sub
js
mov
xor
xor
xor
cmp
xchg
adc
cmp
inc
cld
xor
sbb
icebp
pusha
xchg
pop
pop
lods
ins
cli
cmc
mov
repnz
cmps
push
mov
ds
pusha
call
dec
mov
cs
int3
pavgw
jae
std
fstp
es
fs
call
dec
xchg
iret
or
mov
ror
cmc
xchg
jae
stos
inc
cmp
adc
fdiv
pop
dec
sub
fild
xchg
adc
shr
aas
test
into
xchg
cs
add
jp
xchg
ins
(bad)
xchg
add
nop
inc
jmp
sub
fsub
std
dec
test
cmp
pop
sub
sub
jae
call
xchg
cmp
fwait
add
cs
sbb
dec
ins
cwde
add
jmp
jmp
call
or
cmps
dec
aad
in
xchg
imul
inc
pop
or
pop
dec
cmp
retf
jp
mov
jb
les
mov
sahf
adc
test
test
jnp
iret
xchg
pop
adc
jmp
jle
fmul
mov
ds
jae
ret
fldcw
cmp
xchg
mov
jmp
ins
jmp
repz
retf
pop
sbb
repnz
jg
push
sbb
pop
push
dec
outs
dec
xchg
mov
lods
sub
mov
xchg
mov
jmp
cmps
fimul
arpl
jne
jnp
dec
adc
adc
test
jne
dec
and
adc
sub
dec
push
enter
mov
ins
repz
xlat
inc
sbb
pop
mov
mov
adc
ins
sub
dec
mov
cs
dec
cmp
dec
lods
xchg
mov
dec
and
stos
or
mov
dec
push
push
jo
shl
leave
cli
dec
ins
jb
push
xor
lea
add
sbb
push
jbe
dec
dec
pop
(bad)
sub
or
leave
pop
xchg
sar
xchg
neg
pop
outs
cmp
imul
sub
mov
jmp
mov
fisttp
xchg
push
call
scas
inc
and
xor
mov
xchg
push
xchg
mov
mov
adc
and
pop
fnstcw
mul
(bad)
pop
sub
(bad)
cmp
in
push
xor
mov
cmps
xchg
adc
mov
xchg
mov
fld
test
(bad)
add
pop
add
and
xor
test
inc
push
ja
sahf
push
icebp
push
loop
sbb
xchg
add
clc
mov
nop
and
lods
sbb
gs
sti
jo
mov
mov
(bad)
in
jge
jb
retf
aas
sbb
loopne
inc
stc
sub
mov
mov
xor
mov
mov
sub
pop
jg
xor
(bad)
icebp
scas
test
add
and
jmp
aam
(bad)
jne
mov
in
fs
jmp
mov
jae
dec
movs
mov
icebp
pop
xchg
jb
(bad)
push
clc
xor
cs
js
mov
test
sbb
out
pop
pop
push
adc
push
repz
mov
ffreep
pop
cmps
data16
jle
dec
mov
les
retf
loope
clc
fs
cmp
lds
xchg
ret
pop
mov
dec
xor
inc
push
pop
mov
fstp
push
aam
jbe
in
adc
fwait
repnz
sub
inc
mov
popa
data16
inc
ror
ret
ror
mov
aas
aad
lahf
retf
mov
sub
push
fcomp
outs
(bad)
xor
js
or
push
icebp
sbb
nop
adc
sahf
popf
mov
aaa
sub
push
rcr
daa
or
neg
hlt
or
call
pop
stos
test
fisttp
loope
dec
pop
es
dec
movs
sti
cmp
or
inc
add
sub
or
mov
inc
mov
or
shl
xchg
hlt
mov
test
(bad)
jnp
sbb
repz
sbb
xor
sub
aaa
mov
(bad)
call
sub
xor
inc
clc
mov
movs
mov
and
pop
fldcw
rcl
je
jg
rcr
push
mov
lea
dec
jp
xchg
pop
cli
sub
aam
inc
stos
loope
ret
cmp
and
dec
sub
xor
fnsave
enter
gs
in
xchg
adc
stos
xchg
data16
mov
ret
cmp
xchg
mov
(bad)
cmp
inc
fs
es
repnz
cmp
lahf
mov
dec
aas
outs
push
jecxz
add
jg
arpl
mov
and
sub
push
jmp
push
loope
sub
adc
adc
mov
pop
dec
mov
std
adc
adc
inc
push
in
cmp
mov
and
inc
into
pop
mov
xchg
jge
pop
lock
lods
cmp
xchg
loop
aaa
inc
imul
(bad)
icebp
daa
ds
cdq
pop
pop
pop
daa
jne
inc
es
xchg
aas
xchg
aad
loope
fisubr
(bad)
ja
jecxz
js
test
in
xchg
int3
cmp
outs
xchg
loopne
shr
popf
xchg
frstor
mov
in
push
sbb
inc
lock
cld
test
dec
jnp
adc
xchg
adc
pop
cli
call
movs
popf
jl
jmp
mov
(bad)
jnp
push
ret
jp
adc
jnp
jmp
mov
sub
inc
mov
aas
and
mov
add
scas
pop
jle
sub
not
mov
in
in
dec
xor
jmp
adc
jge
icebp
call
jp
gs
repnz
lods
in
mov
mov
(bad)
mov
pop
in
fcom
xchg
call
pop
and
js
mov
enter
loop
outs
rol
mov
into
or
push
xchg
jecxz
popf
pushf
and
hlt
jne
inc
lock
aaa
jo
ret
jae
es
cmp
in
cmp
sbb
or
and
pop
add
jae
pop
and
iret
sbb
sar
jecxz
out
adc
cmp
mov
dec
lahf
jb
loope
call
xor
cmps
xchg
push
jnp
mov
add
jmp
fcomip
popa
xchg
jp
xchg
test
popa
add
and
xchg
push
fnstsw
push
fist
sub
sbb
loopne
imul
dec
sti
dec
sub
clc
or
jbe
xor
mov
fnstcw
mov
imul
pop
cli
repz
or
adc
clc
and
mov
adc
and
pop
jle
xchg
adc
push
and
dec
dec
test
and
push
or
sub
cmps
cmp
test
lock
push
add
ins
jb
test
in
and
jl
stos
ins
das
inc
mov
icebp
repnz
iret
sti
mov
cmp
div
(bad)
jl
mov
repz
jle
adc
push
jnp
xchg
test
test
pop
jp
inc
ficomp
outs
adc
jmp
push
(bad)
ins
aad
cld
cmp
scas
(bad)
sub
jb
xor
inc
jns
pop
and
into
dec
mov
in
fimul
pop
mov
mov
stc
jmp
dec
sub
pop
xchg
repnz
inc
or
fisttp
and
mov
pusha
cmp
adc
iret
test
mov
jne
push
lds
fsubr
and
and
and
je
shl
enter
out
(bad)
loop
(bad)
jp
sub
fidiv
xchg
adc
inc
or
dec
jne
sbb
mov
clc
repz
(bad)
push
cmp
xchg
stc
std
pop
ja
in
mov
or
cdq
pop
lock
xor
cvttps2pi
out
push
daa
sahf
push
cmp
push
pop
jle
mov
pop
cmp
mov
jge
es
mov
cs
shl
and
test
cmc
and
xchg
lods
adc
sti
push
loope
pop
mov
enter
out
bound
pop
rol
sub
sbb
push
add
jae
xchg
gs
pusha
dec
xchg
xchg
push
iret
and
push
jnp
bound
add
es
mov
imul
fnop
pop
out
outs
sbb
or
iret
hlt
xor
loopne
jmp
push
mov
dec
lds
call
rep
cmp
jp
outs
sar
pop
jmp
mov
jo
pusha
fld
adc
in
(bad)
fcom
xor
and
push
hlt
(bad)
out
aam
jecxz
jne
(bad)
mov
(bad)
std
jmp
cs
jae
xor
call
mov
or
je
mov
ins
ret
popf
pop
mov
dec
sub
jecxz
jp
mov
xor
dec
arpl
inc
cmp
hlt
clc
je
outs
lahf
or
jge
push
cmps
jmp
iret
xchg
inc
cmps
and
(bad)
mov
xchg
push
shr
fld
stos
add
je
xchg
es
sbb
sbb
and
mov
mov
in
dec
inc
fst
add
fst
ret
nop
mov
daa
cmp
push
movs
or
jl
stos
mov
ficomp
mov
adc
jg
xchg
or
inc
and
xor
sbb
lds
mov
fisub
out
int3
adc
and
jge
or
jmp
shl
dec
test
ret
cmp
popa
aam
(bad)
mov
push
add
aam
xchg
and
les
das
sar
or
xor
jne
and
stos
loope
pop
adc
jg
jmp
bound
neg
sbb
daa
mov
cli
mov
lock
out
jp
xlat
add
dec
test
push
push
dec
jge
sbb
aam
xor
arpl
jp
stc
mov
xor
jp
fldenv
push
sub
or
cmp
and
rcr
push
mov
and
stos
outs
(bad)
sti
dec
mov
js
imul
mov
push
jo
sub
and
rcl
sub
cwde
sbb
lods
mov
out
test
adc
loop
sti
mov
mov
cmc
sbb
pop
mov
popa
cdq
adc
test
out
shr
pop
mov
xchg
jmp
scas
push
jne
das
push
sbb
mov
movs
int3
test
inc
pop
add
(bad)
pop
lahf
loopne
mov
imul
(bad)
loopne
mov
dec
jno
sti
xlat
sub
in
cwde
jmp
xor
ficom
mov
adc
xchg
adc
sbb
xchg
test
dec
adc
test
hlt
jmp
or
fdiv
xor
(bad)
mov
loope
je
nop
shl
xor
jne
test
cmp
sbb
cld
or
pop
in
xchg
xchg
xor
call
fmul
lods
les
adc
lahf
and
in
imul
cmp
mov
fild
jno
push
rcr
jmp
xchg
aaa
xchg
ja
inc
push
gs
jle
sbb
fidiv
enter
adc
fcmovu
sub
sub
pop
xchg
movs
cmp
(bad)
mov
sub
loope
mov
mov
add
(bad)
xchg
sbb
jmp
(bad)
mov
and
mov
pusha
popf
mov
fcomp
inc
rol
jmp
outs
loop
pop
or
xchg
shr
fidivr
in
add
jp
ret
jmp
cli
jp
xor
repnz
pop
mov
inc
shl
adc
enter
pop
mov
movs
sbb
pop
es
xchg
fisub
out
add
popf
jne
test
cmps
xchg
cmp
push
enter
out
mov
ds
test
call
xor
or
mov
sbb
bnd
stc
sub
inc
loope
mov
jle
push
sub
fistp
add
mov
test
(bad)
mov
pop
ds
pop
jp
in
test
jecxz
jbe
fidivr
inc
mov
inc
in
jmp
scas
xchg
inc
daa
or
test
je
cdq
ret
jp
popf
lock
fs
add
sbb
div
add
push
sub
inc
adc
push
push
push
inc
jmp
and
cli
xchg
lahf
xor
not
adc
ja
es
push
out
push
dec
jae
pop
mov
dec
dec
ret
mov
les
aas
aam
cmps
mov
cmp
iret
jbe
mov
jl
jge
pop
cmp
xlat
pop
dec
sti
sbb
stc
jmp
(bad)
and
cmc
(bad)
pop
js
xchg
sub
mov
pushf
pop
push
jb
xchg
and
jae
inc
inc
movs
push
mov
js
xchg
pushf
dec
popfw
jnp
cmps
(bad)
lods
or
add
sbb
or
cmp
lods
mov
inc
fnstsw
test
lods
push
jo
sahf
movs
cmp
mov
push
iret
outs
sbb
rcr
jne
or
or
push
mov
iret
cmc
iret
fwait
iret
sub
mov
out
jne
test
sbb
nop
retf
jnp
mov
test
gs
push
mov
add
mov
cmp
push
repnz
and
jmp
mov
and
mov
mov
out
inc
mov
stc
add
in
and
in
sbb
jecxz
jmp
movs
dec
dec
xor
fcomp
imul
cld
jns
xchg
retf
jle
test
inc
jmp
ds
pop
jmp
lock
mov
out
sbb
inc
cmp
pop
out
adc
dec
test
imul
inc
cli
inc
mov
bound
cmp
cmps
push
outs
mov
adc
data16
xor
adc
xchg
dec
cmp
inc
xor
mov
call
adc
(bad)
xor
std
cmp
cmp
test
movs
fldcw
sub
mov
push
xor
cmp
push
push
pop
cmp
xchg
(bad)
fistp
cmp
xchg
shrd
cmps
ret
test
push
sub
cmovg
retf
adc
dec
jmp
data16
sub
or
std
les
sti
shr
push
xchg
push
xor
lods
xor
(bad)
repnz
pop
jl
add
mov
in
mov
or
aad
and
jns
dec
cmp
xchg
or
aad
mov
push
xchg
fild
cs
pop
adc
jp
xchg
ret
mov
xchg
ret
or
repz
popf
cmp
xor
mov
mov
adc
jns
pop
fisubr
jae
ja
pushf
push
ret
or
jle
xor
pop
loopne
sub
mov
cmp
test
lock
pop
outs
mov
iret
sbb
push
cs
int3
aad
cli
aam
xchg
loop
rcl
xchg
in
sub
test
aad
lahf
mov
outs
dec
es
aad
jnp
push
add
call
add
ficomp
mov
test
sbb
add
pop
pop
test
(bad)
fild
xor
fs
xchg
pop
sbb
and
test
pusha
sbb
inc
add
aaa
lea
aam
mov
int3
jne
daa
mov
scas
cmp
jmp
jae
aas
test
jp
xchg
sub
shr
mov
mov
ja
mov
pop
(bad)
pop
les
jmp
cmp
and
(bad)
(bad)
ins
jne
mov
jno
cmp
sub
jnp
sar
popa
add
stc
aam
sbb
mov
dec
and
or
lea
lahf
fdivr
mov
jns
add
push
mov
lods
mov
jne
add
iret
loop
pop
mov
int
adc
js
adc
mov
loop
fidivr
bound
add
lea
js
dec
fs
fsubr
mov
dec
sbb
into
sbb
ins
ins
rcl
xchg
ins
jo
inc
and
sub
pop
xor
arpl
ret
aas
iret
sbb
dec
aam
jne
mul
ins
or
pusha
dec
(bad)
adc
and
adc
dec
mov
int
push
cld
movs
inc
dec
cmp
outs
mov
(bad)
lods
out
pop
daa
dec
daa
ins
cdq
xchg
fisttp
adc
pop
cmp
and
jl
out
cmps
test
xchg
clc
(bad)
mov
(bad)
rcr
fistp
mov
and
inc
sub
jge
(bad)
xchg
and
xchg
mov
xor
inc
inc
shl
and
jmp
(bad)
sub
pop
sub
aad
test
mov
pop
push
xchg
mov
movs
aam
data16
cmp
sbb
xor
ins
outs
outs
std
inc
dec
cmc
or
mov
loope
mov
and
mov
adc
jp
out
jle
jnp
pop
xor
pushf
sti
(bad)
sub
mov
xchg
rol
popf
inc
movs
ret
js
stc
cmps
nop
sahf
call
jns
in
jnp
add
in
in
or
repnz
adc
xchg
clc
xlat
(bad)
cmp
add
xchg
jns
out
(bad)
mov
pop
(bad)
xchg
arpl
xor
inc
retf
sub
test
sbb
xor
mov
mov
icebp
jae
shr
lahf
cmp
int
loopne
cs
lods
icebp
retf
sub
jo
cmp
xchg
pop
push
cmc
jmp
or
adc
inc
stc
and
adc
es
push
dec
xchg
je
mov
dec
test
sub
xchg
push
inc
fiadd
xchg
pop
push
xchg
xchg
lock
jnp
ds
mov
imul
mov
popf
dec
loopne
adc
jae
inc
stos
in
fiadd
push
and
(bad)
shr
and
xlat
dec
out
test
sti
ja
js
les
sbb
mov
add
iret
lock
jmp
cmp
call
stos
xor
fcmovbe
outs
or
dec
aad
lods
mov
and
xor
clc
mov
push
jmp
xchg
sub
jbe
nop
or
mov
imul
jp
bound
call
out
or
push
cmp
cs
ds
jmp
cmc
int
push
pop
pop
dec
or
pop
jne
mov
outs
ds
sub
out
pop
mov
in
and
cli
jbe
xor
xor
mov
cmc
ins
adc
mov
xchg
push
es
or
div
pusha
pop
es
stos
ins
rcl
xchg
repz
jg
fist
adc
pop
mov
xchg
int3
stos
(bad)
mov
popf
add
outs
fistp
cmp
jb
lods
bound
jae
mov
loope
fbstp
jae
(bad)
inc
jge
xchg
push
jmp
div
cwde
mov
mov
push
jl
or
out
and
fbstp
test
pop
xor
jo
rcl
adc
push
in
push
sub
js
mov
mov
ficomp
scas
xchg
xchg
fidiv
push
gs
shl
adc
or
call
or
xor
(bad)
adc
inc
or
(bad)
fisubr
test
aam
mov
xor
adc
mov
xchg
je
ror
in
cs
jge
aad
inc
xchg
repz
pop
pop
movs
or
mov
sbb
mov
gs
imul
or
xor
adc
jmp
sub
aad
cmps
shl
mov
mov
daa
dec
rcl
cmps
test
push
push
xchg
leave
aas
xchg
jo
aam
out
dec
push
outs
add
pushf
pop
js
xchg
mov
jp
out
xchg
mov
pop
aam
fidivr
push
js
or
cmp
addr16
stc
mov
inc
dec
int
jl
loopne
les
jne
pop
xchg
fiadd
and
jbe
outs
hlt
out
shl
icebp
nop
dec
jge
and
pop
cli
sbb
dec
and
push
xchg
dec
cmp
jns
cmc
pusha
or
jecxz
push
jmp
jmp
cld
xchg
push
and
jbe
cmp
(bad)
jne
xchg
aaa
mov
aas
sbb
xchg
jge
mov
mov
xor
out
imul
jns
(bad)
push
addr16
mov
es
mov
not
and
ins
ret
stc
repz
cmp
pop
mov
sbb
sbb
icebp
int3
jae
pusha
mov
std
adc
enter
jp
stos
xlat
jp
jnp
jno
sub
jmp
int3
push
xchg
cmp
rol
outs
add
test
adc
(bad)
adc
(bad)
mov
jne
cmp
mov
fwait
inc
push
or
push
call
push
shl
daa
jmp
cmp
cmp
ror
stos
out
(bad)
int
pop
jo
in
test
mov
pop
daa
adc
inc
and
popa
push
sub
jo
xchg
mov
dec
(bad)
xchg
outs
call
dec
cs
mov
retf
out
push
out
dec
and
push
lods
fwait
mov
sahf
ficom
shr
mov
xchg
xchg
sbb
push
loope
cmp
push
fnstsw
add
sbb
cmp
das
pop
and
js
inc
sbb
clc
aas
rol
stos
icebp
push
inc
inc
jns
mov
pushf
ret
pop
push
std
frstor
add
mov
mov
pop
inc
jle
cli
push
mov
mov
aad
(bad)
xchg
clc
mov
movlhps
aas
pop
dec
clc
fs
fist
mov
das
data16
fistp
push
inc
fdivr
sub
ret
add
hlt
jae
jmp
cdq
and
push
test
dec
(bad)
or
add
mov
loopne
jecxz
jp
jg
push
(bad)
mov
or
pop
outs
in
mov
sub
pop
je
out
jae
cld
xor
repnz
ret
mov
ret
div
cmp
std
neg
in
pushf
dec
fadd
int3
call
cmc
retf
imul
add
sub
addr16
inc
div
and
shr
fsub
xchg
or
cmp
mov
(bad)
jns
xchg
scas
xchg
daa
xor
je
add
xor
rcr
xchg
or
jo
lods
mov
test
pop
xlat
xor
push
mov
retf
jae
pop
cwde
mov
fcomip
fiadd
test
mov
test
fbstp
ins
adc
pop
add
sahf
mov
dec
fnstcw
mov
fldenv
(bad)
fcmovnu
xor
cmp
cmp
push
mov
es
(bad)
sub
add
xchg
add
cdq
xor
jb
push
mov
js
pop
icebp
inc
sub
mov
xchg
add
xor
xor
adc
cmps
iret
mov
pop
jmp
call
das
cli
mov
push
xchg
add
ins
retf
je
cmps
fwait
dec
rcl
fs
push
leave
xchg
jne
int
sbb
and
mov
xchg
pop
mov
dec
pusha
cmps
or
jne
mov
mov
rol
mov
addr16
(bad)
hlt
pop
loopne
(bad)
mov
and
xor
rcl
push
movs
test
retf
in
int
popa
xchg
adc
iret
cs
and
shr
mov
addr16
and
mov
(bad)
mov
sti
dec
fdivr
cmp
call
dec
je
jp
jp
push
iret
fisub
xor
sbb
add
xchg
out
fcom
in
mov
mov
xchg
pop
and
push
scas
push
mov
imul
jb
hlt
stos
dec
push
outs
repz
push
sbb
sahf
push
or
dec
sub
push
adc
mov
push
imul
inc
mov
bound
ja
ins
or
out
hlt
jae
xlat
add
sbb
rcl
xchg
sub
(bad)
jnp
imul
and
stc
stos
jle
jo
(bad)
cli
adc
int3
imul
retf
int
sbb
(bad)
daa
movs
lods
cmc
xlat
es
cmp
mov
mov
shr
push
ja
fsubr
jle
cmp
fs
xchg
xchg
in
cdq
add
cmp
xchg
mov
cmp
movs
jo
fcmovb
cmps
jns
xchg
div
sub
neg
std
bound
mov
cld
mov
or
jmp
pop
mov
into
dec
inc
imul
pop
sbb
retf
xor
(bad)
stc
hlt
es
adc
sub
push
pop
cmc
sub
mov
push
mov
adc
xchg
jb
jmp
leave
and
loop
mov
sar
xor
fcmovb
dec
jae
lods
xor
outs
cmp
mov
pop
dec
xor
ret
cmp
and
cmp
xchg
add
dec
sti
test
and
pop
jmp
and
mov
cmp
addr16
ret
pop
enter
cmp
and
sub
(bad)
iret
mov
sahf
xchg
loop
mov
sub
daa
xor
cmc
xor
jge
outs
jne
xchg
mov
pop
jmp
mov
fwait
iretw
in
mov
retf
sbb
shl
or
sbb
dec
jecxz
sbb
loope
out
push
sbb
sbb
mov
loopne
lahf
dec
cdq
cmp
mov
add
fnstsw
ret
pop
aas
mov
stc
push
jmp
push
std
and
xchg
pop
movs
retf
push
xchg
jb
push
test
imul
aam
out
sub
les
sub
adc
enter
mov
shr
adc
test
pop
ss
push
data16
cmp
and
lds
repz
in
ret
and
dec
xor
addr16
adc
sar
rcr
fistp
sbb
icebp
fldenv
cli
mov
mov
jns
movs
lock
pop
adc
in
mov
ror
add
in
shr
xchg
push
or
call
add
fldcw
jne
mov
xchg
mov
clc
nop
mov
inc
sbb
movs
icebp
or
jge
or
test
in
out
leave
cmp
pop
cwde
rcr
mov
icebp
repz
or
push
enter
scas
test
cmp
icebp
rcr
inc
mov
loop
push
jns
lds
lods
inc
mov
pusha
mov
sub
in
jne
xchg
hlt
push
int
jb
jbe
jmp
cmc
or
das
clc
xchg
push
cwde
int
sahf
add
sub
aas
add
iret
call
test
cmp
movs
mov
cli
and
xchg
lock
push
cmc
jge
dec
stc
clc
push
pop
jg
cmp
mov
jnp
ja
and
and
(bad)
xor
adc
push
sbb
ss
(bad)
jge
jmp
xlat
cmc
adc
lock
stc
or
mov
daa
fs
dec
out
or
(bad)
call
mov
sti
jae
xchg
push
test
push
enter
mov
add
ret
inc
xor
js
xor
lods
(bad)
dec
aaa
or
mov
lock
sub
jl
in
hlt
test
jg
addr16
loopne
or
jmp
movs
cdq
hlt
xor
push
in
arpl
sub
mov
adc
pop
xchg
mov
inc
push
or
clc
sbb
jo
xor
daa
push
xor
lock
xchg
dec
loop
mov
inc
fs
shl
add
ja
push
in
xor
mov
dec
out
xor
into
test
ins
xchg
iret
xor
data16
push
sub
fistp
jle
xchg
cmp
shl
in
pop
loopne
push
fidiv
push
dec
pop
mov
out
int3
pop
in
jl
popa
ss
mov
cmp
xchg
or
in
das
push
pop
popf
xlat
aaa
mov
push
sbb
jmp
mov
fnstenv
clc
outs
pop
scas
adc
pop
cmps
mov
std
retf
(bad)
mov
aam
and
push
(bad)
jnp
and
jns
jmp
punpckhdq
aad
pop
mov
inc
popa
lods
xor
sbb
js
sub
loope
dec
stos
fcom
mov
cmp
mov
pop
cmp
repz
cmp
dec
and
adc
and
jl
ret
sbb
xchg
push
mov
out
adc
cmp
(bad)
push
mov
icebp
(bad)
mov
ins
imul
shl
jne
add
jge
fadd
adc
dec
sar
sub
and
imul
loopne
in
xchg
addr16
mov
out
test
(bad)
xor
add
test
iret
imul
mov
dec
xchg
add
iret
xchg
mov
mov
dec
jmp
cmp
jmp
jo
pop
add
dec
dec
cmp
adc
mov
shl
loopne
add
iret
jnp
mov
mov
stos
mov
sbb
out
(bad)
fist
test
xlat
sub
out
dec
jns
fisub
jnp
xchg
in
pop
sbb
mov
mov
add
adc
loopne
cld
cmp
in
adc
xchg
rol
loop
sub
aas
and
es
pop
call
sti
js
cmp
mov
mov
ins
test
and
orps
cmp
into
pop
lods
push
lock
rcr
jle
add
jne
jmp
mov
test
repz
cmp
jo
ins
push
jbe
inc
sub
jmp
jns
imul
shr
jno
imul
and
adc
sbb
in
cld
cmp
rol
fldenv
mov
xlat
xchg
push
pop
jle
icebp
jp
je
scas
lods
mov
stos
repnz
fnstenv
mov
pop
adc
xchg
jle
mov
pop
imul
and
ror
cmp
xchg
xor
pop
push
jle
mov
pop
or
cmps
sbb
int
jp
movs
or
jl
lds
stos
adc
out
jns
or
ja
jne
test
jmp
pushf
ret
das
mov
cdq
pusha
leave
leave
fstp
and
jmp
ds
jmp
in
cmp
xchg
inc
sub
pop
fst
add
push
mov
pop
ret
imul
sub
xor
inc
(bad)
cmc
xchg
fdiv
outs
fadd
fsub
and
(bad)
push
xor
dec
xchg
dec
mov
lds
push
jnp
outs
in
mov
cmp
push
dec
hlt
cdq
adc
sti
loope
xor
sbb
aad
jae
enter
jp
imul
ret
xchg
dec
push
ins
push
pop
ds
mov
js
cmp
sbb
clc
mov
in
js
xchg
cmp
ja
(bad)
cmp
push
imul
dec
mov
shl
int3
stos
js
jmp
push
mov
push
mov
in
stos
dec
sti
jp
fnstenv
fidiv
sar
add
cmp
xor
add
shl
(bad)
fsubr
fnstsw
and
mov
sub
test
not
xchg
sbb
cmp
imul
js
and
add
(bad)
jp
jge
push
xor
dec
xchg
xchg
and
in
dec
bound
js
cld
xchg
dec
or
inc
push
mov
(bad)
rcl
add
cdq
mov
xor
xchg
push
sar
ror
(bad)
sbb
adc
adc
xchg
ss
sbb
mov
std
addr16
jnp
icebp
iret
dec
aam
xor
cmp
fisttp
and
cwde
addr16
lods
xor
lea
jns
(bad)
std
xor
inc
pusha
xchg
mov
lock
nop
ins
mov
out
or
jle
push
sbb
push
push
jle
mov
leave
push
cmps
jmp
mov
fisubr
mov
dec
or
xchg
inc
dec
enter
mov
sar
or
repnz
and
js
mov
or
test
pop
add
test
fwait
xchg
int
adc
dec
in
ss
test
xor
test
push
ins
cmp
loope
test
mov
lahf
mov
push
mov
clc
ret
in
mov
dec
sbb
push
add
xor
mov
and
hlt
xchg
(bad)
cmp
and
sub
mov
ret
inc
mov
inc
inc
sbb
cmp
xor
into
xor
cli
std
bnd
jns
rol
jns
bound
mov
xchg
add
in
jnp
mov
pop
rcl
sbb
std
fcmovb
sahf
cwde
sub
dec
shr
lods
test
rcl
jp
cmp
ret
and
mov
stos
sbb
push
jmp
jno
lahf
add
adc
mov
jecxz
cmp
addr16
push
mov
test
cmp
(bad)
in
pop
(bad)
push
shl
sub
(bad)
mov
adc
in
pop
dec
rcr
mov
and
sub
cmp
jl
std
sbb
add
or
outs
icebp
retf
xor
retf
test
int3
into
rcl
xor
xchg
push
xor
pop
push
mov
sub
xor
cmp
xor
and
cdq
ins
push
push
hlt
mov
ret
pop
(bad)
test
xchg
cwde
std
sub
cmp
add
jecxz
adc
push
nop
arpl
mov
push
ins
jg
xchg
jle
je
sbb
stc
outs
push
and
jg
pop
pop
xchg
popa
int3
and
fst
gs
inc
xchg
or
xor
setne
imul
lods
xor
xchg
stc
xor
(bad)
sub
out
je
mov
push
jge
mov
jg
push
push
imul
(bad)
shr
add
push
dec
loopne
mov
add
pop
cld
push
stc
fwait
sub
push
mov
js
xchg
adc
je
bound
enter
mov
jp
and
lods
mov
cmps
xchg
add
sub
jp
cs
and
(bad)
cmps
xor
add
xor
sbb
lods
(bad)
pop
(bad)
aam
std
inc
cli
call
cmp
push
jns
(bad)
push
sbb
retf
(bad)
pusha
pop
adc
loopne
in
inc
xor
push
mov
cmp
xchg
imul
clc
repnz
retf
adc
mov
jne
enter
xchg
int3
pushf
pop
leave
in
cli
adc
sbb
pop
out
lods
sub
sahf
xchg
aaa
sbb
fs
ss
pop
scas
push
push
fist
sub
mov
stc
inc
pusha
sbb
(bad)
hlt
lds
jne
and
fadd
out
inc
retf
mov
cmp
and
mov
pop
(bad)
pop
push
add
sub
mov
sub
or
out
dec
xor
movs
pop
call
push
stos
loope
gs
rcr
jns
inc
mov
int3
scas
out
or
call
dec
sar
adc
xchg
lea
and
shl
inc
mov
repz
push
shr
mov
xchg
jle
stos
xchg
pop
cmps
bound
in
mov
adc
dec
push
xor
jne
inc
je
jmp
add
jmp
rcr
push
gs
xor
scas
xor
js
add
ret
addr16
or
into
pop
mov
lods
push
mov
lods
in
rcl
ins
cmp
fist
icebp
push
aaa
mov
data16
ins
dec
mov
jge
fbld
mul
xor
mov
adc
mov
mov
jecxz
aad
clc
sbb
ret
pop
and
sub
rcr
js
sbb
sub
stos
and
cmp
pushf
loopne
add
adc
movs
lds
xchg
push
mov
sbb
xor
addr16
std
and
daa
push
mov
push
push
push
inc
icebp
pusha
cmp
jne
jp
pop
aad
or
and
mov
sub
xchg
imul
call
xchg
push
ss
pusha
je
jnp
mov
xchg
retf
xchg
push
mov
xchg
dec
jp
xor
stos
pop
js
add
adc
shr
add
hlt
inc
xchg
mov
pop
mov
dec
test
fsub
and
jno
mov
jae
cmp
pop
xchg
sub
or
inc
push
ret
xchg
aad
cmc
rcr
pop
in
push
xchg
or
lds
and
cmps
(bad)
stos
mov
or
mov
mov
sub
dec
das
push
add
je
daa
ins
lock
or
push
xchg
jnp
push
inc
test
dec
and
test
movs
ret
daa
or
imul
mov
popf
xchg
pushf
push
aam
jg
pop
mul
or
jae
and
pop
nop
add
pop
push
adc
xor
mov
fstp
mov
xchg
or
inc
mov
pop
xor
adc
xor
mov
je
xchg
or
rol
pushf
mov
pop
movs
hlt
jmp
ds
arpl
push
fisttp
lods
push
frstor
dec
movs
jns
push
mov
(bad)
lock
test
push
inc
cmc
fnstenv
and
loop
and
rol
jns
test
ror
aas
(bad)
pop
sbb
xor
adc
test
cmps
xchg
push
dec
pushf
push
xor
inc
inc
scas
xchg
aas
idiv
cmp
icebp
in
(bad)
sahf
cli
pop
ret
xchg
jo
pushf
dec
mov
or
cmp
jmp
lds
fldcw
clc
in
cmc
stc
jg
xchg
jg
out
mov
cli
popf
mov
push
call
add
pop
mov
mov
pop
adc
call
jmp
mov
in
data16
(bad)
in
mov
ja
push
(bad)
mov
ja
mov
xchg
jle
xchg
inc
jg
xor
loopne
xchg
in
pushf
in
mov
sub
pop
push
push
js
xchg
mov
mov
pop
jmp
nop
sub
cmc
sub
xchg
xchg
jo
xchg
fist
xchg
rol
dec
fdivr
ins
jo
mov
xchg
sub
mov
data16
push
xchg
lods
cmp
scas
dec
push
dec
ret
xchg
pop
das
cmp
adc
xor
lods
jns
mov
inc
or
jno
xor
retf
pop
dec
fbld
add
rcl
jnp
xor
movs
ds
popa
add
mov
sub
adc
lock
aad
pop
call
out
xchg
dec
test
mov
cld
push
jbe
dec
or
mov
dec
ror
xrelease
inc
pop
adc
mov
xchg
in
mov
xor
xchg
stos
iret
jle
bswap
jp
cmp
pop
xchg
imul
cs
jns
and
dec
or
or
inc
mov
xchg
jmp
sbb
dec
jnp
stc
imul
into
into
vpsubw
es
mov
jno
(bad)
pop
mov
mov
es
xor
data16
mov
fiadd
sbb
and
jp
test
jo
pushf
mov
mov
mov
leave
jmp
or
push
out
mov
pop
inc
add
nop
dec
mov
stc
cs
ja
lods
loope
into
jmp
mov
shr
fidivr
aaa
sub
xchg
test
push
add
sub
fstp
jmp
pop
mov
daa
out
or
ds
shr
sbb
xor
pusha
icebp
jbe
jecxz
adc
jle
mov
lds
jnp
mov
hlt
or
xchg
out
inc
xor
adc
fist
jns
loopne
(bad)
cmp
jmp
dec
adc
push
cs
fidiv
cmp
xor
lods
cmp
jmp
leave
clc
addr16
sti
ins
adc
test
sbb
sub
loope
stos
fmul
push
pop
das
addr16
inc
cmps
mov
cmp
movs
lock
jl
repnz
mov
inc
pop
call
imul
xchg
fld
inc
inc
lea
or
scas
(bad)
push
push
mov
mov
mov
mov
jo
xchg
sbb
xchg
dec
inc
in
cwde
popf
jmp
jmp
in
icebp
adc
imul
stc
iret
mov
jmp
(bad)
adc
das
stc
adc
jae
loopne
inc
js
pop
out
jg
ins
lea
push
xor
adc
stos
mov
jbe
dec
push
cli
std
pop
push
jns
sub
std
push
(bad)
mov
cmps
xor
std
xor
adc
lahf
push
sub
or
arpl
and
int3
xchg
cmp
push
retf
xor
aam
es
lds
(bad)
lods
clc
xor
pop
mov
test
add
xlat
pusha
adc
scas
pop
pop
pushf
cli
xchg
mov
pop
xor
ins
sub
jle
push
imul
popa
das
jmp
and
add
clc
cmc
and
imul
das
add
inc
es
int
xchg
add
push
cmps
xchg
cmp
std
inc
or
ins
or
test
rcl
jecxz
xchg
sti
mov
push
dec
push
jo
and
cmps
(bad)
fidivr
arpl
mov
mov
jb
repnz
test
dec
arpl
dec
leave
call
mov
mov
data16
popf
jb
sub
das
sub
arpl
or
ja
pop
xchg
inc
es
add
cmp
and
les
(bad)
(bad)
push
push
aaa
fdivr
mov
cmps
(bad)
jmp
cmp
repnz
dec
call
jge
xor
push
stos
imul
push
cwde
and
es
dec
(bad)
fadd
add
mov
loope
js
(bad)
aam
imul
cdq
mov
mov
jae
push
in
and
iret
shl
cmp
(bad)
(bad)
mov
js
or
cwde
iret
mov
cmp
int
jl
loopne
xchg
scas
das
or
push
nop
push
imul
sar
jmpw
lods
mov
adc
pop
loopne
sbb
jne
and
jge
add
shl
mov
add
ret
jmp
test
jl
out
cmp
sbb
cmps
aaa
out
pop
lea
jge
mov
mov
ret
and
imul
ins
(bad)
fdiv
xchg
adc
jo
scas
mov
dec
cmp
adc
es
adc
jmp
loope
pop
mov
ficom
stos
pop
in
add
or
dec
adc
outs
call
mov
push
sbb
sbb
outs
cmc
imul
add
xchg
mov
jl
(bad)
movs
or
ret
shl
xchg
pop
ficomp
out
xchg
xchg
dec
enter
xor
cdq
sub
sahf
fidiv
dec
nop
add
repz
in
rcl
hlt
ins
add
nop
and
js
pop
xchg
inc
shr
push
daa
sub
sub
or
stos
ret
cmp
fsubr
xchg
mov
lds
add
fbstp
in
jbe
ins
out
pop
fst
ins
pusha
int3
repnz
push
test
hlt
movs
sub
fld
push
mov
push
adc
div
ror
sahf
(bad)
sbb
sahf
and
std
gs
addr16
mov
movs
out
pushf
push
pop
mov
sbb
test
repz
jb
(bad)
out
(bad)
int3
pop
and
and
outs
repnz
ins
je
movs
outs
adc
ret
sub
dec
dec
jb
movs
mov
or
pop
cmp
xchg
mov
push
sub
pop
fimul
fcmovu
xchg
sub
mov
pusha
sbb
in
cdq
xchg
push
xor
fwait
sbb
xor
popa
push
xchg
sub
in
mov
xchg
pop
das
(bad)
div
pop
add
inc
cmp
mov
in
adc
pop
xor
xor
stos
pop
xchg
cwde
sbb
xchg
int
jp
jle
mov
push
cmp
sub
xchg
ret
dec
cmp
movs
jns
mov
jns
sbb
fmul
mov
fstp
jne
xchg
dec
push
js
fcom
jmp
loope
mov
adc
cli
lods
dec
test
scas
cld
clc
adc
sub
stc
mov
fmul
mov
add
adc
sahf
ins
sbb
call
or
cmps
lock
and
xchg
push
into
jne
sbb
aaa
sbb
and
setne
call
sti
push
xchg
daa
mov
call
lods
cmps
ret
pop
hlt
xchg
and
jmp
test
xchg
xor
mov
add
int3
jle
leave
jp
add
jno
pop
sub
inc
mov
xor
pop
xor
xchg
jo
xchg
stos
dec
test
stc
mov
ss
ret
or
std
repz
cmc
push
lods
jbe
mov
cld
push
mov
sar
push
sub
and
sbb
fld
cmps
inc
retf
add
push
pop
js
in
daa
loopne
jo
and
sub
jmp
adc
scas
jo
xchg
sar
retf
les
pop
adc
imul
xchg
mov
jp
mov
call
or
dec
jp
rcl
std
sub
es
(bad)
(bad)
shl
test
xchg
shl
fsubr
push
mov
pop
cs
ret
mov
aas
push
cld
pop
cli
lahf
sbb
stos
das
pop
add
and
pushf
not
sbb
and
test
sbb
inc
ds
inc
nop
rcr
adc
push
das
lea
cld
pop
jmp
ja
xchg
fcomip
add
inc
adc
out
dec
das
in
mov
adc
adc
push
push
mov
dec
mov
pop
popa
inc
shl
test
test
lods
lahf
mov
into
pushf
jb
xor
mov
xchg
jmp
push
xchg
cld
icebp
push
mov
sub
das
aaa
add
xchg
mov
nop
jl
cmc
jb
and
inc
or
out
sub
fcom
aad
dec
(bad)
mov
jp
push
mov
int
fucomp
push
xor
aad
jecxz
inc
scas
dec
dec
sbb
movs
mov
adc
xor
xor
in
cmp
mov
dec
hlt
out
jb
or
xor
sbb
out
in
mov
pop
mov
pop
fidiv
les
add
xor
aam
mov
sahf
in
cmps
mov
push
mov
mov
(bad)
mov
stos
jns
call
jmp
or
or
pop
adc
mov
adc
adc
dec
pop
xor
loope
inc
hlt
mov
sub
mov
mov
rol
mov
add
dec
hlt
dec
push
xchg
cli
cmp
inc
mov
sub
ins
jle
push
mov
fadd
push
sub
loop
pop
std
push
jb
imul
ja
into
hlt
mov
pop
sub
xor
mov
cwde
ficomp
hlt
mov
loope
dec
jle
dec
sub
cmp
lea
cmc
repnz
call
jne
sub
shr
and
adc
lds
xor
jp
dec
fcmovnu
das
dec
test
mov
adc
imul
shl
mov
xchg
test
mov
mov
push
adc
adc
mov
fst
cmps
sbb
push
mov
sbb
ins
sub
mov
push
(bad)
lods
and
mov
cmp
repz
mov
sub
in
sbb
jg
hlt
(bad)
adc
mov
scas
jl
fild
in
mov
dec
xchg
xor
test
loopne
dec
pop
inc
inc
xchg
popa
cs
inc
fst
(bad)
leave
cmc
xor
das
iret
loop
loope
sub
(bad)
call
test
pop
adc
xchg
jle
or
cwde
sub
rol
mov
adc
cwde
adc
lods
cmp
in
dec
adc
jmp
push
jae
adc
shr
out
ret
nop
(bad)
js
lds
xchg
mov
std
jae
add
cmc
fs
mov
shl
arpl
mov
int3
(bad)
mov
scas
push
pop
in
jle
int
mov
outs
stos
arpl
cld
in
js
daa
xchg
stc
xor
mov
fdiv
out
aaa
fisttp
and
push
ins
adc
fdivr
popf
add
lahf
add
mov
pop
mov
mov
add
jae
cwde
sub
and
fisub
jns
jne
rol
push
cmp
imul
xor
mov
dec
jo
sbb
movs
fcomip
pop
jmp
fcomp
xor
cdq
push
jne
push
js
ja
jmp
inc
icebp
ret
sub
cmp
arpl
inc
jge
jno
mov
fwait
dec
jp
aam
or
add
stos
imul
mov
inc
stos
cwde
or
cli
pop
xchg
pop
mov
in
repnz
jp
stos
repnz
in
jg
cwde
cmc
in
sbb
loope
fwait
movs
dec
dec
retf
inc
push
bound
movs
sbb
nop
int
lods
lea
add
pop
dec
(bad)
push
sub
jmp
dec
mov
fsubr
stos
daa
and
sbb
jbe
push
fcmovnu
inc
pop
adc
(bad)
cs
push
inc
mov
cli
shl
out
js
xor
sbb
js
dec
inc
and
fs
cmps
in
addr16
jge
imul
or
nop
xchg
test
pop
(bad)
jge
hlt
mov
adc
jo
and
and
retf
xor
icebp
stos
iret
icebp
push
repz
and
pop
fld
ret
adc
pushf
ja
(bad)
push
dec
and
jne
daa
popf
in
mov
add
js
mov
push
sbb
mov
sahf
outs
loopne
or
cdq
inc
xor
sub
jo
in
idiv
ins
dec
sar
adc
adc
and
std
loopne
icebp
add
mov
mov
mov
aas
pop
retf
and
sub
into
jns
mov
sub
and
lods
sub
inc
adc
fsubrp
xor
jns
add
retf
mov
neg
mov
das
cmp
inc
lods
add
ret
cmp
ss
fcom
mov
mov
stos
and
jo
enter
stc
adc
stos
aam
test
lahf
push
dec
shl
aam
dec
push
jno
pop
jmp
mov
sub
mov
push
ins
loopne
addr16
call
adc
jne
adc
sar
sbb
xor
addr16
call
pop
adc
sti
jbe
push
fbld
scas
or
and
test
sub
sbb
xor
pop
cmps
inc
and
mov
pop
enter
cmp
lods
pop
pop
push
outs
in
adc
jecxz
iret
loope
iret
push
cmp
sub
js
retf
xchg
sbb
in
inc
adc
sbb
adc
nop
fld
scas
mov
icebp
jp
popf
pushf
jb
fistp
mov
and
pop
add
js
test
loopne
dec
jecxz
aaa
data16
in
xor
mov
pop
mov
jnp
mov
jmp
std
loopne
ja
push
jne
aam
pop
adc
xor
sub
mov
xchg
aad
xlat
lods
loope
fs
pop
loopne
xchg
xchg
push
cs
inc
jne
xor
and
xchg
in
push
fistp
dec
sbb
cwde
sbb
aad
shl
jae
jmp
jnp
xchg
stos
adc
push
inc
pop
push
xor
xchg
push
aas
ins
xchg
imul
and
adc
cmps
pushf
loop
xchg
push
jmp
jge
lea
jbe
sar
cs
push
push
adc
xchg
daa
xor
sub
in
inc
js
xchg
push
xchg
retf
adc
push
into
sub
fstp
int
call
dec
cwde
jnp
scas
or
mov
es
pop
fistp
in
test
iret
cmp
div
add
xchg
sub
jl
xchg
add
jge
push
push
mov
neg
xor
jge
mov
loope
adc
jle
sbb
mov
enter
repz
shl
push
inc
jge
out
and
xchg
sbb
into
lods
xor
loopne
mov
pop
call
xor
retf
mov
pop
out
fs
imul
aam
imul
(bad)
sar
mov
(bad)
(bad)
out
push
push
int3
jge
cmp
push
test
dec
(bad)
add
ins
in
stos
pop
fs
ins
or
jp
not
mov
je
pop
cmp
fidiv
jge
mov
mov
inc
lea
xor
adc
fisub
sub
and
adc
(bad)
jmp
jp
repz
sub
dec
test
pusha
xchg
sbb
mov
js
fdiv
or
call
push
mov
push
xor
cdq
fiadd
lods
mov
ror
dec
lock
push
sub
popf
add
inc
or
test
fbld
mov
push
scas
add
fbstp
jno
pop
(bad)
xchg
sahf
ss
ja
sub
jp
faddp
aam
xor
inc
push
daa
(bad)
jb
mov
push
xchg
cmovl
popa
jae
lods
jnp
call
mov
or
fstp
addr16
out
adc
sub
mov
or
jmp
cmp
mov
and
ins
jbe
(bad)
(bad)
in
daa
imul
cmps
pop
shl
std
xor
idiv
daa
test
shl
xlat
lock
adc
cld
ret
jo
repz
fdivp
mov
xor
pop
and
mov
xchg
push
jmp
fldcw
xchg
inc
int3
xchg
outs
int
and
daa
cmc
je
pop
jnp
lods
and
dec
xchg
xor
xchg
or
js
lock
data16
sbb
loope
imul
ret
sbb
int3
add
push
gs
(bad)
hlt
cmp
push
dec
pop
gs
dec
push
sub
mov
pop
jmp
xor
sbb
sbb
jo
and
mov
add
cs
les
jbe
out
jmp
lock
fmulp
(bad)
mov
xchg
test
cdq
xor
shl
pop
add
cmp
das
je
inc
cmps
retf
jmp
aam
or
and
and
nop
lods
mov
mov
cmps
mov
inc
xchg
(bad)
cmp
xor
shl
nop
fs
and
xchg
pop
add
pop
sub
add
js
xchg
pop
or
pop
iret
fcmovnbe
and
sub
xor
ins
mov
add
push
push
mov
cld
repnz
jge
je
in
lods
jge
cmp
adc
retf
out
xor
cld
dec
push
std
je
inc
jge
sbb
dec
cmp
jae
hlt
pop
js
sub
retf
push
arpl
adc
cmp
cld
call
(bad)
push
xchg
mov
imul
stos
cmp
push
ins
adc
inc
xchg
pop
pop
rol
mov
movs
shl
cmc
in
loope
xor
pop
mov
push
and
clc
xchg
inc
lahf
pushf
jg
pop
mov
outs
xchg
push
cmp
xor
dec
hlt
xchg
fwait
popf
add
xchg
mov
test
ret
outs
xchg
fidiv
or
dec
in
xchg
pop
jge
iret
rcr
leave
lock
ins
and
sub
loop
shl
cmc
sahf
fbld
addr16
popf
ja
pop
sbb
mov
xchg
cmp
inc
out
arpl
adc
cmc
ins
(bad)
sbb
jno
shl
xor
sahf
jl
shl
ffreep
sbb
xchg
and
loope
outs
push
mov
sti
jmp
or
popa
cmp
cli
mov
je
cmps
cmp
lahf
xor
xor
fdivp
data16
int
js
mov
inc
adc
dec
into
and
fs
lods
add
movs
push
xor
mov
jns
ror
cwde
pop
(bad)
hlt
aad
inc
data16
test
jmp
add
mov
xchg
push
hlt
jge
mov
call
mov
and
sbb
mov
ltr
mov
dec
enter
mov
sub
in
xchg
and
jns
test
ret
jp
fcomp
jp
mov
sub
clc
cmp
pusha
jg
test
pop
jo
out
sbb
movs
fnstsw
adc
(bad)
aad
test
ret
mov
cmps
sbb
and
popa
out
out
push
sub
or
out
push
data16
adc
mov
inc
xchg
fldcw
pop
adc
jne
stos
outs
mov
lods
dec
jb
bt
fidiv
addr16
lds
xor
jbe
ins
loop
mov
mov
mov
push
scas
add
mov
sti
imul
icebp
sub
sbb
cld
daa
inc
mov
xor
fucomp
fmul
in
ins
xchg
aad
pushf
inc
ss
jp
not
movs
push
int3
cli
adc
retf
and
or
in
xor
cmps
cmc
push
mov
mov
rcr
test
sub
xchg
jne
jp
xchg
push
xlat
push
mov
ss
xor
jle
push
fwait
ja
xchg
or
test
push
jb
hlt
iret
xchg
jle
jae
(bad)
(bad)
mov
jnp
lock
xchg
out
jp
and
mov
mov
dec
cmp
jo
push
xchg
mov
test
iret
loope
popf
adc
push
cmp
mov
aas
inc
xor
inc
call
xor
cmp
aad
jno
mov
or
and
push
jmp
jnp
iret
fiadd
ret
push
retf
pop
push
leave
or
xor
pop
xchg
inc
(bad)
js
icebp
sbb
imul
mov
pop
sbb
test
pop
inc
xchg
es
xor
mov
call
cmp
out
mov
mov
test
test
xchg
xchg
jbe
dec
mov
xor
mov
das
out
or
ds
cmps
jne
jle
psubusw
int3
fst
data16
lock
cwde
les
mov
cmp
or
hlt
pop
push
ds
pop
mov
stos
push
imul
aas
lds
outs
imul
pusha
mov
in
mov
(bad)
mov
add
mov
jnp
cmp
mov
stc
dec
sub
adc
mov
(bad)
and
mov
xchg
or
out
outs
pushf
sbb
js
leave
icebp
retf
mov
lods
imul
xchg
sbb
movs
sbb
push
xor
out
div
and
fmul
xchg
cmc
add
mov
push
jbe
and
mov
xchg
or
push
adc
jae
outs
mov
jl
in
repnz
ret
dec
xor
pushf
test
or
xchg
push
ins
stos
idiv
mov
iret
into
cld
scas
push
xchg
mov
mov
fcomip
stos
and
add
or
mov
call
pop
xor
jne
repnz
cmp
sti
inc
fwait
iret
retf
mov
dec
call
ret
cmp
xchg
pop
idiv
daa
sbb
cwde
jmp
fild
xchg
in
xor
ins
iret
add
mul
xor
ja
call
cmps
and
mov
dec
fldenv
xor
sbb
mov
mov
ds
retf
mov
(bad)
jle
in
adc
shl
jnp
jg
jmp
jl
pop
jmp
inc
(bad)
(bad)
add
pushf
jmp
xor
int
jp
jb
pop
xlat
lods
mov
push
test
inc
ds
fistp
(bad)
sbb
mov
fisubr
push
and
test
sub
xlat
or
call
cmp
or
xor
rcl
bound
loopne
adc
push
jns
and
in
imul
sub
ret
or
call
call
bound
cmp
jb
sti
into
shr
(bad)
popa
mov
xchg
add
int
das
sar
adc
in
mov
and
popf
data16
jnp
add
and
inc
jecxz
push
pop
out
out
xchg
add
pop
push
je
cmp
ins
sub
mov
jnp
sti
adc
and
outs
push
out
dec
jne
mov
clc
scas
pop
and
in
jns
clc
or
imul
pop
test
pop
outs
retf
lods
pushf
push
das
loop
cmp
ins
sub
cmps
push
add
stos
ret
(bad)
jp
rol
dec
mov
and
adc
sbb
jge
iret
dec
inc
pop
or
push
iret
sub
jle
and
xor
out
pop
and
test
mov
push
xor
in
sbb
aas
xlat
test
fld
jne
aad
outs
push
div
mov
movs
mov
cmc
pop
push
icebp
int
cmp
fisttp
add
push
dec
call
call
mov
cmp
aad
dec
pusha
dec
cmp
dec
je
jno
sbb
mov
xchg
imul
mov
test
dec
xchg
mov
outs
or
repnz
stc
xchg
pop
and
scas
add
xchg
cmp
adc
push
mov
pop
mov
jg
xor
xchg
inc
pop
cmp
sbb
mov
repz
lahf
xchg
add
mov
dec
mov
pop
jp
(bad)
ds
inc
jne
mov
cdq
cmp
out
mov
js
xor
mov
xor
or
lods
jg
jl
aaa
sbb
retf
arpl
push
jae
jbe
xor
fst
mov
sub
sub
jbe
into
mov
sub
cmc
dec
fs
add
aaa
add
repz
ins
dec
out
sbb
retf
push
fst
mov
loopne
pushf
add
idiv
stos
cmp
test
lahf
mov
xchg
cwde
in
loope
mov
pop
sub
imul
xchg
add
cmc
out
cmps
bound
fnstcw
sub
cmp
jmp
mov
dec
fcomp
or
or
lods
inc
leave
or
ret
inc
adc
pop
test
sub
ds
dec
cs
mov
dec
lock
repz
sub
loop
dec
xchg
in
aaa
pop
inc
sbb
push
mov
mov
sahf
xor
inc
scas
ja
xchg
fwait
addr16
or
sbb
movs
sub
or
mov
aad
adc
scas
adc
jge
xor
sahf
imul
(bad)
xchg
aam
(bad)
jmp
rcl
xchg
jle
and
lahf
xchg
jbe
js
mov
pop
jmp
push
iret
loopne
dec
mov
push
jns
mov
jp
pop
mov
int3
fidivr
push
and
push
clc
push
xor
sbb
mov
xor
aam
cs
sub
jg
es
jns
(bad)
stos
(bad)
mov
addr16
add
sti
les
dec
pop
and
mov
xchg
inc
sub
(bad)
sub
jg
retf
mov
sub
out
dec
pop
cmp
mov
or
sub
out
push
std
mov
jnp
in
cmp
adc
jnp
jb
hlt
dec
push
mov
dec
sbb
data16
xchg
pop
and
and
andps
push
das
repz
lock
jg
push
test
mov
cld
out
(bad)
and
pop
pop
std
mov
xchg
stos
push
push
lds
or
jns
lds
jge
adc
xor
add
pop
mov
mov
cmp
hlt
xchg
movs
adc
test
(bad)
pushf
mov
xor
cmp
push
lock
push
clc
sub
shl
pop
ds
or
cmc
sub
clc
cmp
jecxz
je
xchg
inc
std
(bad)
pop
push
cmc
mov
sbb
int
xor
adc
sbb
mov
stos
push
mov
dec
mov
mov
fisubr
add
add
inc
(bad)
enter
out
sub
add
loope
mov
aas
hlt
adc
fcmovb
fs
fs
pusha
cdq
fnsave
dec
ret
aas
cmp
cli
mov
adc
leave
test
dec
push
not
int
add
push
les
jmp
mov
fnsave
push
sbb
ret
inc
mov
leave
js
popa
xor
dec
into
add
cmp
xchg
and
pop
cdq
mov
lea
jmp
xor
addr16
ror
repnz
pushf
js
bound
jge
scas
mov
or
data16
push
lea
shr
js
jae
aad
and
jne
cmps
xchg
shl
sub
sbb
adc
mov
jge
icebp
leave
xchg
daa
dec
add
add
jp
push
dec
retf
xchg
jne
mov
xor
dec
pop
popf
dec
dec
adc
jnp
out
call
pop
mov
jp
sbb
ret
nop
hlt
adc
push
and
xor
out
sahf
mov
rcr
ins
scas
inc
and
fsubp
cmp
mov
jmp
je
cwde
dec
xchg
adc
loop
cmp
adc
xor
mov
inc
int3
xchg
adc
in
add
jb
push
dec
cmp
icebp
idiv
inc
mov
and
jmp
xchg
xor
clc
not
idiv
in
dec
outs
je
fimul
in
mov
and
(bad)
(bad)
out
les
outs
push
in
mov
adc
pop
jb
add
inc
mov
repz
outs
fiadd
jle
jae
or
retf
mov
or
pop
xchg
pushf
jge
test
mov
addr16
pop
int3
leave
test
jl
adc
lds
mov
(bad)
sub
xchg
xor
ror
jnp
xor
dec
mov
sbb
mov
add
add
and
outs
je
jecxz
aas
hlt
jo
jmp
add
jl
adc
cmc
hlt
xlat
in
xor
(bad)
adc
jp
jmp
mov
test
test
std
fbld
or
popf
add
out
push
pop
gs
addr16
leave
in
jmp
adc
(bad)
push
pop
sub
shr
(bad)
daa
pop
mov
call
cld
pop
cmp
jg
push
mov
std
(bad)
iret
cmp
xor
cmp
pop
sti
test
mov
xor
or
mov
ss
rol
not
sub
fsubr
and
mov
leave
xchg
xor
xchg
and
lock
retf
sbb
cmp
pop
xchg
jg
in
outs
sub
les
(bad)
fiadd
sbb
into
jg
xor
in
les
sbb
jns
sbb
cmp
jle
or
cmp
into
hlt
loopne
data16
xchg
push
mov
fmul
leave
cmp
ins
xor
(bad)
xchg
xor
pusha
fcom
in
xchg
popa
mov
and
and
sub
jecxz
xor
mov
sbb
pusha
and
mul
mov
dec
xor
xchg
cmp
push
push
adc
nop
in
pop
repz
imul
arpl
ins
mov
jmp
jbe
dec
jle
(bad)
jmp
add
xchg
mov
push
adc
mov
or
int
repz
mov
cmc
mov
fs
sti
imul
pop
fcmovnb
mov
xor
or
neg
leave
sub
ins
jle
loopne
mov
sbb
add
fs
xchg
and
shl
sub
dec
adc
sub
scas
stos
mov
shrd
xchg
xchg
mov
inc
dec
sub
add
sbb
mov
cmc
mov
rcr
test
or
mov
xchg
push
xchg
sbb
mov
daa
sbb
mov
ret
and
shl
(bad)
imul
or
nop
in
out
out
sub
jns
sbb
scas
inc
mov
call
push
mov
adc
enter
rcr
pop
jmp
push
sub
xor
bound
mov
add
bound
xchg
cmp
mov
cmps
cwde
mov
dec
cmp
ror
fst
sbb
popf
pusha
pop
add
xchg
enter
int3
sub
or
scas
stc
dec
paddsw
(bad)
les
arpl
mov
mov
retf
mov
ja
fstp
(bad)
retf
in
mov
and
sbb
cmp
rol
pushf
ds
push
push
and
fldcw
sbb
add
hlt
aad
hlt
xor
jnp
imul
xor
xor
prefetch
mov
push
pop
mov
or
jbe
add
outs
not
xchg
mov
cdq
cmp
in
cld
(bad)
sbb
sub
pop
sub
in
call
fld
stos
xchg
test
sahf
xchg
in
xor
jne
push
out
push
mov
cmp
sbb
hlt
ret
shl
jno
jb
xor
xor
push
addr16
aad
mov
inc
int3
and
sbb
xor
sti
gs
xor
sbb
or
mov
pusha
adc
or
pop
jb
sti
pop
sub
xchg
scas
rol
les
lahf
push
ja
ffreep
call
push
aas
and
jns
mov
sahf
aaa
movs
js
outs
xchg
shl
push
int
sbb
addr16
add
pop
pop
sbb
push
and
mov
adc
mov
(bad)
mov
mov
cmp
fdiv
jmp
icebp
mov
outs
stc
pop
xor
xchg
dec
or
ds
xlat
test
jg
sbb
sar
fdivr
nop
xor
sbb
shr
ret
push
jns
inc
mov
addr16
int3
lock
sbb
rcl
jge
push
sbb
fcmovbe
xor
sbb
retf
cmc
ret
xchg
sub
std
aad
data16
imul
push
cmp
dec
jnp
test
sub
int
mov
stos
or
clc
inc
and
cld
sbb
cmp
addr16
jmp
sub
mov
push
out
in
std
pop
repz
pop
jge
cdq
bound
jns
ret
inc
jns
xchg
movs
jle
fist
and
addr16
test
imul
inc
dec
in
mov
sub
ror
dec
aad
mov
adc
cld
dec
mov
ret
mov
fist
in
fmul
ret
shl
mov
in
ja
mov
jmp
sub
xor
pop
movs
fsubr
xchg
nop
out
or
int3
mov
inc
jle
pop
lods
daa
push
jp
sub
xor
jno
leave
movs
jge
inc
pop
ins
pop
jno
(bad)
mov
mov
pop
jmp
lock
loop
in
mov
test
cmp
xor
xchg
xchg
cld
(bad)
xchg
shl
dec
jmp
cmc
popf
and
stos
(bad)
push
test
xor
stc
xor
cmp
or
ret
mov
sub
sbb
call
add
inc
dec
xor
out
adc
push
and
test
cs
mov
mov
stos
jle
ins
sub
gs
xor
cmp
xor
xchg
ins
int3
xchg
mov
jmp
adc
in
and
loope
pop
fnstenv
shl
pop
aam
mov
mov
or
in
test
pop
sub
pusha
cmps
sub
cmps
(bad)
movs
(bad)
out
popf
xchg
add
daa
xchg
outs
out
xlat
cmc
sub
xor
mov
dec
cmp
aam
jno
mov
(bad)
mov
dec
mov
add
retf
jmp
xor
fisttp
mov
stc
xor
and
cwde
jnp
jmp
hlt
xor
std
mov
xchg
xlat
fiadd
jae
xchg
jge
mov
pop
sbb
das
sar
jo
or
mov
jp
in
jl
(bad)
repz
movs
inc
pop
retf
lds
cmp
ds
mov
ret
inc
xchg
xchg
mov
or
call
test
cmp
adc
push
add
pop
div
pop
mov
jecxz
cmps
mov
cmp
pusha
cmp
xchg
add
movs
imul
mov
cmp
call
call
mov
xchg
and
loope
add
adc
loop
push
jl
add
shl
xchg
js
and
add
pop
imul
cdq
pop
push
cmps
sbb
mov
mov
js
adc
retf
sub
push
pop
dec
sub
jle
push
lods
pop
mov
dec
mov
cmp
dec
jmp
loop
mov
in
test
les
ret
cmp
pop
adc
retf
(bad)
jge
mov
xchg
cmp
repz
xchg
sbb
jb
out
mov
mov
xor
dec
fdivrp
iret
in
pop
lods
jo
cwde
fcmovb
push
dec
jp
imul
pop
test
lods
jo
ins
push
rol
pop
inc
int3
mov
cmp
lock
and
jg
sti
cmps
rcl
sbb
sbb
or
or
pop
xchg
sbb
test
jmp
xchg
(bad)
sti
(bad)
sbb
popa
rcr
xchg
push
pop
sbb
or
jmp
pop
mov
jg
jmp
out
pop
add
shl
xchg
jp
xor
jnp
cmps
inc
inc
pop
mov
sbb
test
push
jo
in
mov
sub
cmp
cwde
and
(bad)
xor
dec
mov
std
xor
ja
cmc
fst
das
icebp
jno
aad
out
test
xchg
(bad)
and
nop
fidiv
push
pop
fs
icebp
fbstp
je
add
(bad)
out
push
push
dec
jecxz
jecxz
int3
mov
(bad)
fs
out
jle
in
shl
loope
push
pop
xor
sub
and
cmp
xchg
jl
sbb
jmp
dec
mov
in
test
xchg
lock
push
pusha
mov
sub
das
sbb
mov
xor
std
mov
adc
(bad)
adc
and
js
push
mov
mov
jmp
dec
xor
mov
push
xlat
movs
and
add
sbb
pop
mov
cs
sub
js
(bad)
repnz
test
sub
jl
je
cld
mov
and
mov
add
imul
inc
jp
dec
sbb
loopne
pop
inc
repnz
sub
pop
pop
add
and
pusha
xchg
test
test
jle
stos
mov
xchg
stc
push
dec
stc
sub
in
fisub
sbb
pop
jge
stos
xor
sub
adc
daa
pop
in
ins
ret
mov
xlat
mov
pop
xchg
add
push
inc
adc
mov
retf
adc
in
mov
iret
jne
cmc
(bad)
xlat
pop
dec
cmc
sbb
mov
cwde
cmps
mov
gs
and
xor
xchg
sbb
sar
nop
enter
ret
inc
and
clc
iret
aaa
lock
adc
ins
lds
in
push
stos
dec
pusha
aas
cmp
test
adc
dec
pop
cmp
mov
clc
pop
mov
mov
pusha
xchg
mov
stc
ret
cdq
or
mov
arpl
pop
pop
lea
fwait
sbb
adc
mov
cmovns
shl
je
rcr
rol
xor
xchg
cmp
push
fs
mov
jmp
ins
(bad)
and
adc
xchg
sub
(bad)
fistp
jge
mov
mov
push
dec
fdivr
add
pushf
adc
lods
xchg
inc
rol
xor
sub
cmp
add
dec
and
pop
pusha
out
out
sub
cdq
scas
push
or
cmps
movs
mov
jge
pop
ret
jg
test
cmp
jge
sti
out
dec
dec
add
push
shl
int
inc
(bad)
fdivr
push
mov
jecxz
dec
add
cld
loopne
cmp
push
rcr
fsubr
mov
or
adc
add
icebp
add
pop
cmc
test
push
sub
mov
jae
sub
push
stc
sbb
xchg
or
xor
fld
push
int
mov
pop
jne
out
test
ret
lock
ror
test
fmul
sbb
cmp
lods
push
adc
jne
cs
lods
jle
mov
cmc
add
inc
pop
cmp
out
mov
mov
or
jns
les
repz
and
es
jmp
or
cmp
iret
mul
stos
and
aad
mov
lds
inc
stos
nop
xchg
push
das
dec
fcom
and
ja
daa
cmps
xor
icebp
pop
cmp
aaa
push
scas
mov
and
imul
mov
aad
pushf
cld
mov
js
(bad)
jp
addr16
push
daa
jge
(bad)
push
pop
jmp
jmp
sub
dec
cli
std
lea
cs
push
mov
stc
aad
(bad)
out
xor
into
mov
push
mov
cmp
js
push
xchg
in
ret
dec
in
(bad)
ss
xchg
pop
push
jno
(bad)
lods
pop
ror
or
cmp
cdq
or
pop
test
and
sub
mov
in
dec
add
jp
pushf
ins
loope
cmp
pushf
xchg
jle
adc
iret
sub
loope
dec
jno
shl
cmp
xchg
mov
inc
xchg
shl
call
mov
enter
dec
out
push
into
pop
test
mov
ds
pusha
cwde
xchg
pop
pop
lea
bnd
xchg
sahf
xchg
sbb
daa
push
pop
or
jbe
(bad)
inc
mov
pushf
repz
push
fidivr
sbb
pop
arpl
out
loop
cmps
push
mov
dec
cmp
jle
sbb
xor
jg
leave
cmp
outs
stos
movs
sub
dec
iret
shr
mov
xchg
call
test
ret
retf
sahf
sub
ret
mov
jmp
retf
xchg
test
jnp
repz
lds
mov
pop
pop
add
adc
in
pushf
cmp
push
push
add
sbb
loopne
fcmove
data16
adc
add
mov
xor
pushf
jg
rol
fwait
and
jnp
and
fwait
ds
les
mov
pop
and
cmp
mov
lea
xlat
dec
sbb
iret
mov
cmp
std
es
push
call
nop
std
dec
jne
out
mov
push
mov
scas
inc
jne
mov
out
push
xor
pusha
push
add
js
push
jg
jecxz
into
out
push
pusha
sbb
inc
jmp
mov
sub
out
ret
pop
fs
push
(bad)
call
ins
icebp
loope
mov
loopne
ficom
das
bound
out
jo
inc
jp
jae
cmp
cld
(bad)
or
or
ins
(bad)
in
ja
nop
jecxz
xchg
pop
or
mov
pop
cmp
clc
ror
pop
inc
or
dec
push
nop
jnp
mov
xchg
inc
mov
sub
jmp
mov
and
in
fs
cmp
pop
dec
add
sub
inc
scas
cmp
adc
mov
in
mov
fbld
mov
jnp
pop
in
div
sub
sub
cmp
iret
push
imul
js
popa
cdq
cmp
sub
sub
jg
cmps
jmp
aad
push
retf
out
lock
cs
inc
test
xlat
call
adc
int3
xchg
pop
pop
cs
xchg
sub
sub
cmps
arpl
add
fptan
mov
retf
push
xor
dec
pushf
xchg
cld
lock
ins
inc
push
xor
mov
sub
(bad)
lahf
repz
jp
jecxz
cmps
mov
xor
dec
or
loop
xchg
jb
shr
jo
(bad)
push
dec
lahf
dec
sbb
loop
sub
retf
mov
fidivr
xor
jecxz
pusha
pop
pop
lea
or
dec
leave
in
jns
add
and
push
mov
in
mov
mov
mov
rol
leave
js
xchg
jne
jo
test
mov
scas
das
pop
adc
and
xchg
dec
push
les
retf
mov
jae
xchg
mov
dec
xchg
out
je
push
xchg
in
and
mov
cwde
mov
or
int3
ins
xchg
pop
and
jmp
lds
cmp
or
out
add
push
mov
cmp
jle
xor
sti
in
lods
adc
and
fld
mov
in
add
xor
jmp
les
popa
xor
js
inc
adc
adc
(bad)
sub
mov
sbb
(bad)
pushf
inc
bound
imul
shl
call
adc
arpl
sub
inc
and
jnp
mov
ror
xchg
jo
or
mov
int3
std
sub
cmp
pusha
jne
fs
mov
addr16
mov
rcr
pop
or
xchg
cmp
pop
js
add
cli
ins
sub
and
lods
lods
lock
adc
(bad)
lds
push
dec
jns
data16
ret
hlt
and
push
mov
inc
and
cmp
int3
leave
outs
xlat
pop
xchg
or
xchg
fwait
jae
ds
jecxz
mov
addr16
fadd
pop
inc
jg
dec
mov
pop
cmp
fadd
loope
imul
or
or
addr16
je
cmp
(bad)
or
fcmovne
mov
sub
pop
in
cmc
sar
out
jmp
sub
adc
push
xchg
jg
xchg
inc
int3
(bad)
int
mov
test
les
rcl
mov
sub
inc
mov
das
add
or
cmp
pop
sub
xor
gs
pop
dec
aaa
jae
xchg
(bad)
fcomp
adc
ds
inc
lock
and
and
shl
jmp
das
lods
pop
shl
sbb
int
and
(bad)
mov
fcom
arpl
cld
xchg
cmp
adc
xchg
addr16
pop
in
lods
or
xchg
outs
sbb
mov
sbb
and
jbe
test
xchg
repnz
out
dec
mov
jle
scas
jg
cmc
jmp
leave
xor
xor
push
(bad)
lahf
push
xchg
push
pop
je
jbe
inc
cmp
cdq
inc
out
out
pushf
adc
mov
cmp
or
xor
add
adc
retf
or
enter
xor
sbb
inc
iret
and
fst
dec
pop
mov
xchg
push
mov
push
pop
(bad)
mov
adc
ror
push
and
js
and
(bad)
in
push
mov
xor
retf
inc
adc
sar
in
sbb
lds
ins
ret
xchg
fist
jne
xchg
push
mov
jl
xchg
dec
cmps
cmp
sub
adc
data16
sbb
cwde
or
cmp
inc
test
or
shl
jo
jmp
test
jae
inc
pop
dec
aad
xchg
mov
imul
lock
test
inc
sti
fs
jnp
lds
retf
mov
mov
in
xchg
cmp
jae
hlt
dec
ins
pusha
je
shl
xchg
dec
sbb
xacquire
scas
jg
stos
xchg
jecxz
mov
fcmove
ficomp
mul
imul
and
popa
gs
jne
push
js
pop
cmp
mov
das
cmp
hlt
push
retf
pop
xchg
pop
rcr
xor
je
jge
dec
cmp
icebp
fisttp
push
push
mov
js
(bad)
xor
and
fst
sub
sbb
adc
push
lds
lea
ins
int
inc
push
stos
xchg
push
xor
aad
sub
je
and
jae
mov
test
lea
sbb
dec
aam
mov
call
out
jne
or
inc
cmp
or
or
cmc
retf
in
mov
mov
in
outs
fwait
xchg
pop
inc
push
jmp
or
mov
int
cmp
sbb
das
adc
bound
mov
push
xchg
ja
loopne
sub
push
cmp
jmp
inc
sub
mov
cmp
cwde
push
out
dec
cs
inc
sti
data16
xchg
mov
mov
push
dec
test
push
xchg
jmp
adc
out
das
pop
ja
popf
xchg
test
push
inc
sub
(bad)
jmp
mov
pushf
sub
push
mov
push
sahf
jle
xor
and
xchg
pushf
(bad)
sub
dec
add
push
lahf
dec
xor
adc
pop
pop
(bad)
mov
out
pusha
es
pusha
sub
fbld
std
int
in
jmp
out
fisub
dec
mov
xor
lods
into
ins
xchg
(bad)
xor
sub
test
(bad)
jle
mov
sub
dec
inc
test
ds
cmp
push
push
sub
lahf
and
add
cmp
inc
inc
or
daa
je
mov
mov
cmp
aad
fcom
rcl
mov
or
movs
cli
jecxz
push
push
cmp
dec
jb
push
jns
je
push
adc
(bad)
jp
jae
and
add
mov
push
cs
sbb
fidiv
jno
ja
adc
in
mov
lods
add
out
inc
fidivr
call
es
pop
shl
test
xchg
push
adc
mov
inc
inc
jmp
fnstsw
les
cmp
push
ins
pop
adc
ror
cli
popf
jp
mov
pop
or
cld
mov
cmp
repnz
xor
mov
sbb
xchg
test
mov
mov
push
jo
pop
in
mov
pop
cmp
les
js
and
inc
mov
jae
aam
pop
movs
rol
jo
loope
div
test
mov
inc
or
stos
push
das
push
jle
fcmovnbe
cmp
icebp
inc
sub
movs
mov
cmps
dec
jle
retf
lods
(bad)
psubw
sub
arpl
jecxz
lock
in
cmc
dec
movs
push
and
(bad)
test
repnz
bound
or
xor
push
movs
jmp
sub
jmp
xchg
enter
in
sbb
out
sub
pusha
mov
in
mov
mov
jno
push
adc
mov
test
dec
js
sti
dec
aam
addr16
mov
popa
sbb
cmps
mov
fst
aam
cli
xchg
aas
fimul
adc
stos
cmp
or
inc
and
or
xchg
mov
xchg
ret
jge
xor
aad
hlt
sub
cmp
pop
xor
inc
dec
std
fcomp
aam
mov
loopne
jne
ror
push
push
jne
cmp
cmc
or
cmp
mov
sub
mov
sub
xor
fs
ins
mov
xor
aas
jae
mov
loop
ins
dec
pop
mov
cmps
aaa
das
rcl
fld
out
inc
out
inc
adc
or
adc
ss
clc
xchg
adc
dec
fcmovnu
dec
test
mov
mov
inc
pop
ret
inc
and
leave
fs
xor
sub
and
xchg
cmp
js
sbb
add
jmp
cli
xor
pop
and
mov
mov
push
xor
xchg
ins
(bad)
pop
jp
sbb
rcl
push
sbb
mov
mov
hlt
mov
cwde
push
pushf
xor
sahf
icebp
xor
jne
mov
movlps
(bad)
jge
in
lea
int
sti
xor
icebp
push
xchg
pop
or
out
mov
cs
sbb
add
stos
and
dec
mov
cdq
pop
ret
pusha
pop
adc
push
cmps
push
hlt
mov
xor
dec
les
mov
adc
pusha
fbstp
mov
pop
in
xchg
mov
rcr
ror
shr
mov
in
ins
jmp
stos
pop
jnp
mov
inc
lods
xchg
pop
test
pop
sbb
cmps
in
loop
lahf
xor
cmc
stc
ins
lods
mov
dec
call
mov
and
enter
jmp
addr16
jp
inc
int3
push
nop
call
ins
cmp
cmc
cli
push
jp
or
jb
imul
and
cmc
xor
test
loope
cmp
adc
out
in
cmp
push
mov
mov
int3
in
pop
or
sub
mov
mov
cmp
dec
push
out
jo
or
cdq
pop
cmp
mov
sbb
or
out
out
pop
adc
into
rol
mov
inc
lods
jp
xchg
push
ja
imul
das
imul
pop
iret
std
scas
mov
ficomp
ficomp
fcomp
or
mov
mov
sbb
adc
inc
push
push
mov
xchg
push
add
pop
(bad)
cmps
mov
dec
jmp
sbb
push
mov
pop
sub
shr
(bad)
mov
js
and
cmp
and
pushf
hlt
mov
hlt
retf
aad
xor
lods
adc
add
(bad)
shl
sbb
mov
imul
loopne
aaa
movs
or
js
mov
je
ins
adc
jge
pop
inc
jl
or
fs
jle
cmp
jne
push
adc
icebp
aas
cs
lods
xchg
xchg
sti
test
add
fild
jmp
ret
dec
xchg
adc
cmp
sbb
scas
mov
jg
xchg
mov
data16
mov
hlt
stc
inc
jmp
push
cmp
fmul
push
xor
(bad)
xor
add
mov
ret
test
cmp
sub
pusha
xchg
jmp
ret
movs
pop
xor
in
mov
xor
mov
mov
cmp
push
cmps
in
mov
cmp
cmp
pop
js
inc
pop
jbe
scas
cmps
leave
jmp
out
(bad)
fwait
sbb
xchg
xlat
dec
loope
xor
xor
repz
inc
loope
or
pushf
repnz
xor
mov
es
mov
mov
cmp
adc
push
shl
xchg
mov
and
or
ret
int3
pop
call
cmp
mov
mov
and
repz
in
or
call
and
jns
shr
cmp
(bad)
popa
repz
arpl
hlt
pusha
sub
in
xchg
js
nop
jp
cmc
ds
xchg
cld
std
dec
inc
sbb
or
es
pop
adc
xor
inc
cmp
add
xor
cmp
clc
pop
sbb
push
das
(bad)
fisttp
add
mov
(bad)
sub
push
sbb
jmp
cmp
dec
xchg
inc
xor
push
xor
mov
retf
push
adc
xchg
je
cmc
sub
adc
div
sbb
push
lds
rol
mov
jb
(bad)
push
adc
fisttp
mov
(bad)
int3
adc
repz
fistp
xchg
adc
adc
pop
outs
push
jge
data16
addr16
call
ss
call
test
(bad)
mov
sub
out
cmp
add
dec
sub
jmp
sub
ins
and
loopne
repnz
mov
and
sbb
cmp
icebp
cs
pop
push
jmp
sub
xchg
adc
mov
pop
pop
fisub
(bad)
mov
shl
sbb
pushf
mov
jne
loopne
xor
lea
(bad)
aam
fadd
xchg
mov
mov
and
das
mov
xor
add
idiv
jo
hlt
push
and
mov
loope
jo
sbb
mov
jo
mov
(bad)
cmp
xor
and
addr16
popa
xchg
sbb
jb
push
hlt
arpl
mov
adc
daa
bound
jno
test
dec
jo
std
es
push
aam
cmc
sub
sub
(bad)
rcl
push
scas
sub
pop
jnp
push
push
pop
sbb
mov
movs
rol
jbe
in
jmp
(bad)
xchg
dec
adc
data16
jnp
cmp
xchg
and
imul
int3
adc
loope
xor
cmp
jle
rol
or
cs
icebp
(bad)
stos
je
sub
fbld
das
fdivr
scas
sbb
cld
je
icebp
xchg
push
pop
mov
test
out
xor
cmp
mov
cs
cdq
pop
popa
jns
mov
(bad)
dec
bound
sub
shl
push
jmp
data16
pop
ret
jae
xor
mov
jge
and
mov
es
jmp
mov
jmp
cmp
popf
arpl
fisub
call
(bad)
retf
cmc
sbb
mov
or
ffreep
dec
popa
cmp
mov
xor
fs
lods
push
xchg
ds
xlat
and
fsubp
lea
jne
hlt
or
and
inc
sbb
nop
mov
mov
pop
sub
sub
mov
in
and
cmps
mov
and
push
adc
add
out
dec
jle
rcr
adc
sub
mov
repz
jmp
imul
aaa
or
cs
iret
icebp
aaa
adc
push
movs
add
push
inc
inc
fadd
outs
mov
es
into
push
mov
test
sbb
xchg
mov
ja
xlat
pop
mov
dec
xchg
cmc
mul
test
in
dec
inc
popf
jp
xchg
xor
fs
adc
js
sar
ja
pusha
mov
sub
cmp
and
mov
stos
sub
ins
and
lods
xchg
out
dec
les
add
xor
stc
in
ins
arpl
xor
sbb
call
jge
adc
jp
xchg
sbb
and
mov
add
adc
jo
xor
daa
pop
loop
add
pop
mov
out
inc
and
rcl
adc
scas
cmps
mov
mov
arpl
xor
mov
dec
addr16
sbb
mov
(bad)
mov
movs
inc
clc
imul
jle
popa
dec
mov
lds
inc
adc
dec
and
jns
je
dec
add
xchg
sbb
xchg
arpl
loope
out
not
ins
xchg
xchg
cmp
fiadd
pop
imul
sub
mov
jmp
dec
jnp
sub
xor
int3
pushf
xchg
fmul
in
jle
aaa
sub
jle
jns
lds
int3
mov
jmp
lock
xchg
cmp
jp
fist
sbb
cmp
and
sub
jo
imul
shl
xor
adc
xchg
dec
fwait
cmc
loope
jnp
repnz
loope
imul
xor
dec
sub
mov
dec
ret
dec
repz
xchg
jge
xchg
adc
adc
clc
and
test
fwait
je
loope
sbb
sbb
mov
and
pop
pop
dec
ins
pop
xlat
jle
dec
es
lahf
or
fldcw
jbe
mov
jl
xor
fisttp
mov
jns
dec
push
cmps
pop
and
xchg
movs
or
push
cs
sbb
xor
and
stos
mov
lea
adc
xor
fs
stos
cs
addr16
cmp
mov
jle
and
lods
pop
jo
and
mov
mov
dec
inc
(bad)
call
mov
rol
sbb
cmc
js
pop
mov
xchg
in
cmc
ins
cwde
jg
out
nop
rcl
jae
int3
loope
xchg
clc
xchg
sbb
movs
(bad)
or
fld
js
cmp
jmp
imul
xor
dec
outs
sbb
lods
call
mov
stos
push
ror
mov
mov
daa
xchg
rol
add
and
jns
repz
(bad)
in
and
and
adc
in
push
mov
or
and
(bad)
test
pop
movs
jae
cmp
(bad)
in
sub
sbb
adc
sbb
push
mov
sbb
(bad)
shl
rol
lahf
xor
and
adc
mov
mov
jg
test
fldenv
js
mov
mov
mov
mov
inc
xchg
jae
pop
(bad)
mov
test
cs
and
jae
mov
dec
inc
in
and
sar
sub
cmp
mov
mov
adc
push
lods
jp
out
dec
add
mov
push
or
rcl
cmp
sbb
mov
test
ror
push
adc
cmp
into
shr
pop
mov
in
jo
call
out
push
stos
jne
cmp
inc
pusha
in
dec
xchg
jle
shl
in
gs
and
out
mov
daa
or
in
push
pusha
int
jbe
xchg
nop
push
mov
ins
fstp
lea
jmp
add
xchg
daa
push
hlt
inc
imul
jmp
icebp
loop
jnp
cmp
fdivrp
mov
addr16
loop
ret
pop
sub
das
sbb
cmps
fstp
movs
das
out
(bad)
xlat
sti
loopne
hlt
push
jp
sub
dec
cmp
cmp
jae
xchg
mov
mov
pop
xchg
mov
loope
jns
sub
or
iret
jl
popf
sbb
pop
add
push
dec
ds
sbb
mov
das
adc
aad
sbb
dec
shl
push
and
or
cmp
stc
xor
imul
mov
sbb
mov
dec
data16
pop
xlat
in
dec
aad
cmp
xor
or
cs
cmp
push
mov
adc
imul
add
jecxz
icebp
cli
cmc
xor
jmp
(bad)
sbb
in
jne
and
addr16
dec
rol
xchg
data16
mov
mov
(bad)
jne
loop
sub
imul
push
popf
dec
nop
repnz
and
or
ins
xchg
in
fcomp
xchg
jne
cmps
mov
dec
sub
mov
mov
js
mov
mov
cmps
cmp
xor
adc
pop
jne
in
outs
repnz
adc
mov
push
sbb
hlt
push
popa
xchg
sbb
sahf
mov
and
call
jle
add
or
mov
lods
xor
aas
cmc
or
lods
fsub
jg
xor
fisttp
dec
sar
xor
(bad)
imul
xchg
lods
cmp
in
pusha
jne
cmp
sbb
inc
sti
adc
jae
mov
dec
out
xor
pop
imul
lds
sub
xchg
push
push
and
push
inc
or
in
icebp
push
add
ins
and
std
adc
pop
and
or
retf
dec
jnp
dec
je
mov
jg
scas
xchg
ins
xchg
push
jns
push
xor
test
bound
push
cdq
pop
push
cli
and
jns
or
adc
aam
jp
popa
int
sub
cmps
js
in
xchg
jmp
pop
xor
adc
pop
add
repz
push
call
xor
cmp
scas
mov
push
and
dec
cmp
pop
inc
sbb
outs
xchg
shl
mov
and
cmp
adc
repnz
std
jp
add
sbb
gs
cmp
rcr
mov
add
outs
adc
fnsave
pop
jmp
scas
xchg
cmp
(bad)
leavew
pop
rol
mov
ins
into
pop
cmc
enter
call
jo
lods
xchg
and
aad
jne
imul
xor
push
add
cli
cmp
pusha
and
lock
push
xor
fnstenv
pop
(bad)
adc
lahf
iret
mov
stos
pop
mov
fwait
jge
mov
push
les
jne
rcr
enter
jnp
jmp
int
cmp
pop
and
stc
imul
imul
dec
push
ins
jns
and
push
xor
ror
outs
mov
adc
shl
and
out
mov
and
mov
das
cmp
test
jns
sbb
das
xchg
daa
stos
lahf
pop
dec
pop
sbb
sub
mov
test
push
sub
sar
dec
pop
jbe
jb
mov
lahf
stc
outs
inc
ins
ss
push
push
sub
mov
in
pop
mov
jmp
pop
movs
in
stc
adc
loopne
ds
mov
pop
mov
outs
sbb
inc
pop
xchg
mov
and
inc
mov
imul
retf
xor
push
(bad)
jg
fadd
retf
xchg
adc
and
and
les
cmp
pop
xor
fsubr
rdpmc
adc
sub
div
or
aam
jmp
jp
xchg
pushf
data16
jg
dec
push
xchg
xor
jne
or
ins
scas
mov
retf
mov
push
mov
stc
pop
mov
jnp
fadd
adc
xor
add
stos
mov
add
adc
xor
sub
jp
xor
out
ins
inc
jae
push
mov
jle
fld
ins
sbb
dec
inc
aas
xchg
lds
loope
add
mov
clc
mov
xchg
fcomip
movs
rcr
sbb
ss
aad
xor
jne
push
mov
mov
mov
xchg
dec
jne
sbb
sub
xchg
movs
enter
popf
out
or
mov
stc
adc
stos
(bad)
lods
fistp
test
call
sub
xchg
mov
jl
cwde
xchg
dec
outs
push
cdq
mov
cmc
fcom
sbb
cmp
retf
xor
mov
cmp
sbb
cmp
ja
xor
ds
iret
jg
(bad)
sti
lahf
pop
sbb
in
cmp
pusha
lods
pop
pop
cmp
fstp
sub
adc
js
dec
(bad)
in
or
in
clc
push
xchg
ja
cmc
jecxz
or
jmp
sub
dec
in
xor
jle
scas
xor
xor
or
das
iret
and
mov
push
jmp
int3
jecxz
cmp
xor
bound
cmc
push
stos
adc
sbb
fisttp
sysenter
jmp
jne
lahf
cmp
adc
jp
lea
xchg
xchg
sbb
sub
(bad)
jge
push
sbb
out
cmp
pusha
sub
lods
ins
lods
inc
dec
in
and
icebp
js
sbb
dec
(bad)
(bad)
xchg
jno
dec
cld
xor
cmp
ret
dec
pop
not
sbb
jbe
and
push
cmp
or
sub
jo
aad
sti
in
out
cs
fwait
shr
mov
(bad)
sbb
cmc
mov
add
cmc
movs
lock
jae
mov
retf
dec
mov
jp
adc
mov
adc
pop
sbb
addr16
(bad)
and
es
sub
shl
add
fbstp
mov
das
ror
cmp
shl
shr
sahf
xchg
dec
cmc
ins
mov
xchg
fcom
push
xchg
or
jge
leave
ror
mov
fadd
in
mov
push
pop
jp
jno
jge
push
jo
xor
push
(bad)
loopne
mov
mov
jns
in
add
shr
mov
das
enter
inc
dec
lea
cld
stos
icebp
pusha
xor
retf
test
xchg
out
dec
sub
xchg
in
dec
das
xor
repnz
mov
out
inc
adc
xchg
(bad)
pop
add
sti
push
aam
loope
call
pop
sub
je
fidivr
and
call
jge
(bad)
xchg
and
xchg
stos
adc
pop
repz
cmp
jns
lahf
leave
sahf
and
(bad)
pop
pop
ss
cmps
pop
ins
inc
sub
ror
push
xor
and
sub
cmp
leave
adc
shr
in
cli
xchg
in
and
fwait
mov
ret
stos
mov
jge
xor
les
and
ror
popf
lock
cli
add
sbb
cmps
xor
dec
fild
daa
and
lods
je
push
shl
mov
or
sbb
mov
sub
sbb
div
cs
dec
jge
adc
jne
and
add
(bad)
(bad)
sar
call
pop
inc
lods
cld
adc
dec
cs
jecxz
jns
push
mov
aaa
mov
data16
in
imul
push
jp
xor
sub
shr
push
pop
inc
lock
shl
je
mov
jl
mov
and
mov
jge
pop
leave
aaa
xchg
enter
adc
loopne
add
sbb
cmp
movs
xor
(bad)
or
jns
sub
pop
mov
push
rcr
xor
repnz
addr16
into
and
jmp
call
push
jno
pusha
adc
test
sub
dec
cli
inc
sbb
mov
sub
(bad)
out
sbb
jb
jp
(bad)
cdq
imul
rol
fsub
dec
adc
(bad)
jae
or
add
push
pop
in
imul
cmc
xchg
fadd
loopne
lock
dec
jns
xchg
mov
ja
pop
test
sar
in
lods
xor
xchg
mov
outs
repz
loopne
enter
adc
mov
ror
xor
lds
sub
rcr
ret
(bad)
pushf
cmp
imul
jecxz
sub
in
dec
lds
mov
push
push
fst
pop
int
mov
out
aaa
ret
cmp
std
out
or
rol
xor
or
pop
pop
add
and
aaa
sbb
jbe
or
imul
jmp
cmp
inc
in
sub
inc
inc
call
loope
gs
xor
ficom
and
xor
nop
daa
jge
cmp
lock
and
in
cmps
and
xchg
cs
lods
cmp
imul
sub
fadd
dec
xchg
mov
sahf
pop
mov
test
xor
mov
ins
mov
dec
(bad)
sub
mov
jge
inc
xchg
jnp
lock
or
imul
jns
and
xor
cmps
or
mov
add
mov
int3
jp
add
mov
fiadd
push
xor
das
sub
(bad)
out
add
clc
or
mov
lods
retf
out
xor
or
loop
daa
sub
lock
jne
scas
mov
cwde
and
push
repz
pop
sub
sbb
push
push
and
dec
jb
ja
xchg
push
repz
es
in
cmp
push
sub
dec
jmp
test
iret
inc
xchg
arpl
mov
sbb
mov
cmps
or
call
loopne
sbb
in
inc
fdiv
xor
int
pop
test
xchg
sahf
scas
std
movs
mov
xchg
cmp
in
fild
xlat
rcr
jg
xor
pop
jne
mov
push
sbb
sbb
add
push
push
push
add
xchg
arpl
stos
mov
xchg
dec
dec
cmp
sahf
or
out
popf
xlat
sbb
ins
jnp
jg
xor
jl
xchg
icebp
iret
(bad)
aad
push
sub
and
pusha
pusha
sti
out
into
dec
cmps
jmp
mov
ja
(bad)
in
mov
outs
mov
aam
std
sbb
pop
enter
and
out
jp
dec
cli
loopne
addr16
gs
xchg
cs
sub
dec
nop
bound
sub
gs
mov
test
mov
pushf
add
add
sub
(bad)
stc
dec
sbb
fs
mov
xor
fsub
jg
dec
mov
xor
pop
dec
hlt
fs
lds
pushf
xchg
mov
push
mov
not
sub
sbb
cmp
jge
(bad)
jae
xchg
lahf
xchg
jmp
sbb
mov
and
inc
ss
push
adc
lods
mov
jno
loope
ficomp
cmp
das
call
jmp
sub
ins
js
push
add
pop
clc
adc
adc
sbb
loopne
jb
xlat
jp
les
pop
cmp
pop
lock
cmp
lahf
out
loopne
push
push
dec
and
fstp
push
sbb
stos
sub
mov
(bad)
sub
pop
outs
faddp
xchg
fiadd
push
mov
stos
(bad)
call
dec
aas
xchg
repnz
ins
ins
pop
clc
dec
or
jmp
shl
mov
out
lahf
fidiv
(bad)
bound
pop
dec
sub
and
add
std
mov
push
pusha
add
and
push
push
es
xchg
mov
ret
test
xchg
xor
es
fisubr
xchg
fisttp
mov
pop
sbb
adc
push
xchg
or
pop
push
mov
fiadd
jmp
push
mov
(bad)
dec
pop
cmp
repz
push
jne
retf
mov
in
push
fild
add
mov
scas
or
inc
push
cmp
imul
and
pushf
in
popa
ds
call
call
jns
fcmovne
pushf
jecxz
dec
push
cmps
repz
pop
aaa
jne
sub
push
sbb
pop
test
sub
jo
loope
jnp
arpl
cmps
dec
iret
mov
ja
div
sbb
call
mov
out
mov
xchg
sub
cmp
and
fisttp
stc
push
les
in
les
shr
imul
cmp
ins
(bad)
adc
imul
scas
push
push
cmp
adc
push
cdq
fnstcw
lahf
lods
pop
add
in
in
sar
movs
mov
(bad)
xor
ror
sub
push
sti
mov
inc
in
xchg
push
(bad)
repz
popf
add
iret
pop
ja
lahf
adc
call
in
sahf
je
push
push
add
jne
add
mov
jmp
enter
sbb
dec
xor
sub
and
sbb
rcl
fisubr
jmp
xchg
jno
ret
lock
cmp
in
in
arpl
jg
or
pop
stos
dec
pop
cmps
cmp
add
xchg
mov
retf
icebp
inc
mov
sub
clc
mov
jne
fcomp
pushf
je
dec
jecxz
or
or
push
loopne
sbb
pop
jmp
push
push
cmp
lods
repnz
addr16
int
pop
pop
pop
sbb
outs
jmp
dec
test
aaa
cs
xor
(bad)
xor
bound
pop
fstp
push
sar
dec
mov
out
add
mov
mov
fwait
jns
test
push
jmp
sar
sar
mov
pop
loope
cld
(bad)
fild
pop
xor
loop
or
jmp
and
imul
cdq
stc
loop
rcr
xchg
xchg
and
lea
cmps
dec
test
hlt
repz
xchg
loopne
or
imul
jle
mov
std
pop
fucomip
inc
stc
test
out
xchg
jne
pop
daa
test
data16
mov
adc
inc
aad
or
inc
enter
xchg
jne
xor
mov
and
leave
repz
jbe
cwde
fs
sbb
push
icebp
ret
pop
xchg
or
clc
mov
xchg
jg
and
xchg
adc
cmp
pop
lahf
inc
fld
cwde
lahf
retf
arpl
shl
push
or
(bad)
push
and
sub
out
daa
xchg
jmp
jmp
mov
inc
mov
(bad)
pop
sub
jle
stos
fidivr
xor
(bad)
xor
mov
(bad)
and
push
lock
and
out
fsub
jmp
data16
rol
pop
cmp
sbb
adc
mov
call
mov
adc
xchg
sbb
push
ss
hlt
or
push
push
push
mov
sub
popf
pop
das
pop
mov
or
iret
jl
mov
outs
ret
cmp
ss
mov
scas
scas
push
xchg
xchg
js
jg
(bad)
jle
cmp
xchg
adc
jmp
or
retf
xchg
shl
jle
adc
push
push
xor
shl
cmp
icebp
xchg
dec
sub
outs
pop
in
inc
test
fiadd
or
mov
xchg
adc
ret
cli
bnd
sub
dec
jp
add
xchg
xchg
arpl
movs
dec
imul
jle
mov
xchg
jge
jmp
(bad)
arpl
lods
jno
mov
test
mov
fistp
js
sbb
sub
loopne
imul
movs
repz
xor
cmp
rol
and
outs
and
aas
cs
repnz
mov
jne
sbb
in
call
mov
dec
jns
add
jb
fistp
(bad)
jecxz
xchg
jnp
jmp
(bad)
stos
lds
daa
push
in
jo
xor
in
jae
push
cmp
imul
adc
lock
sbb
int3
adc
dec
mov
cli
mov
sub
js
das
fstp
ins
cmc
out
jo
jne
xchg
mov
xor
js
or
iret
pop
mov
sub
inc
xor
sub
xor
div
xchg
jle
js
mov
aam
jl
js
xor
xchg
(bad)
lds
jno
cwde
jecxz
inc
lea
inc
push
or
lahf
in
xor
xor
call
cmc
test
stos
jmp
out
adc
xchg
out
cmp
sbb
lods
loop
dec
xlat
mov
cmp
cmc
push
js
or
out
cmp
gs
in
mov
call
dec
inc
fs
and
into
xchg
mov
add
sbb
sub
xor
fistp
pop
bound
(bad)
jmp
pop
xor
cmp
mul
pop
pop
loope
ror
lahf
mul
es
sub
push
pusha
mov
dec
ficom
mov
loopne
aad
mov
jo
xchg
scas
cmp
out
inc
xchg
lock
repz
loopne
ds
ss
nop
pop
sub
out
mov
jae
jb
clc
cvtpi2ps
into
pop
stos
dec
dec
or
jmp
push
dec
mov
stos
fsubrp
xchg
add
xchg
mov
mov
and
cmp
add
and
rcr
pop
(bad)
std
call
pop
sbb
jbe
leave
out
test
jnp
add
cdq
hlt
(bad)
out
loop
rep
rol
push
scas
ss
div
xor
clc
xchg
push
sar
adc
retf
mov
jg
(bad)
gs
cmp
jbe
jnp
stos
dec
pop
stc
fwait
mov
fadd
push
cmp
icebp
fistp
mov
sub
fild
pusha
or
add
sbb
aaa
push
fidivr
std
cmp
int3
test
std
xor
xor
xchg
mov
pop
push
push
sbb
inc
lea
add
gs
jle
shl
mov
div
cmps
lahf
mov
movs
xchg
fidiv
jns
mov
ret
mov
cmp
ret
hlt
add
mov
mov
xchg
add
arpl
mov
adc
fldcw
pop
sub
dec
jae
push
movs
mov
pop
xor
ficomp
pop
cmp
ins
cmp
ror
mov
ret
xor
popa
xor
popa
mov
xchg
and
aad
jnp
cli
mov
dec
std
mov
test
dec
(bad)
sub
lods
sti
mov
pop
pop
push
je
cs
dec
xlat
add
sahf
(bad)
and
jae
and
pusha
push
sub
sub
cmp
cmp
in
fistp
in
ret
out
sub
iret
ror
push
das
daa
into
push
jle
fs
jo
and
and
clc
lods
iret
mov
retf
xchg
loop
cli
xchg
sub
lock
xchg
push
mov
mov
sbb
scas
ja
push
mov
ss
xchg
push
ret
or
xchg
push
scas
xchg
cmp
xor
pop
jb
jns
or
and
fbld
add
jp
hlt
(bad)
jle
push
dec
sub
cmp
or
xor
adc
mov
jae
push
in
xchg
jne
test
xor
mov
test
sbb
xor
das
in
jmp
cmp
cmp
jle
mov
std
std
jle
test
clc
scas
push
mov
movs
ret
fimul
add
xor
inc
dec
rcl
ins
pop
sub
sbb
jmp
xchg
push
cmp
bound
data16
mov
fdivr
int
daa
shl
mov
mov
(bad)
test
iret
mov
dec
pop
mov
adc
adc
add
fwait
mov
sub
xchg
ror
sub
pop
pop
cmp
mov
lds
lods
jg
jecxz
jp
mov
pop
bound
cld
inc
xor
(bad)
pop
(bad)
pushf
pop
test
dec
sbb
sti
ds
mov
adc
pop
mul
int
inc
ror
popa
test
fidivr
adc
push
dec
add
out
cmp
pop
aam
pop
in
ins
xchg
xchg
nop
push
jp
cdq
ja
jp
and
pop
lahf
fs
sbb
outs
dec
pop
cli
inc
xchg
mov
jns
out
jbe
ffreep
mov
imul
xchg
or
adc
pop
xor
push
and
dec
xchg
mov
and
xchg
cmp
inc
sbb
ret
and
jae
sbb
shl
pop
jnp
jp
js
mov
and
loopne
mov
dec
push
clc
xchg
adc
sbb
push
pop
mov
cli
jo
hlt
mov
fdiv
and
push
jp
xchg
cld
rol
xchg
(bad)
push
aad
ficomp
jnp
inc
xchg
xchg
or
loop
and
add
dec
adc
push
push
jo
sbb
inc
jge
mov
aas
push
(bad)
mov
xchg
xchg
cmps
mov
loop
and
mov
sub
lods
in
ret
mov
js
pop
lds
mov
pop
jb
sbb
loopne
jp
in
ja
out
jne
mov
push
les
xchg
adc
add
ds
jmp
mov
adc
cmp
retf
mul
mov
imul
jmp
clc
daa
push
bound
fsubr
mov
sub
sahf
sub
shl
daa
aad
inc
aad
mov
mov
cmps
xor
mov
or
jge
mov
cmp
jno
xchg
inc
adc
test
mov
addr16
stos
je
mov
div
mov
daa
into
pop
mov
add
xchg
adc
daa
out
and
sub
mov
popf
push
pop
ja
mov
dec
sub
xor
mov
mov
pop
leave
mov
aad
pushf
mov
xchg
cmp
stc
sub
sub
movs
es
cld
jo
outs
stos
xchg
rcl
or
inc
js
mov
es
xchg
mov
jae
jge
adc
sahf
ror
push
adc
dec
fst
lods
fstp
pushf
inc
jb
repz
in
les
loop
pop
pop
cmc
ficom
dec
mov
ret
ds
fcmovb
xchg
fdivp
retf
pop
pop
movs
inc
jae
rol
std
fsub
ficomp
mov
dec
imul
xlat
pop
cs
push
xchg
sub
add
mov
xchg
pop
push
cmp
mov
idiv
pop
sub
call
xchg
sar
and
adc
push
mov
nop
in
push
sbb
push
and
and
fild
sbb
pop
push
stc
sbb
pop
ret
push
mov
mov
xor
mov
lds
mov
and
mov
dec
iret
call
iret
daa
sub
lds
mov
push
fnstsw
dec
mov
pop
xchg
inc
test
ret
sbb
sbb
data16
sub
fs
add
mov
and
push
inc
sahf
fbstp
xchg
daa
cmp
mov
rcr
test
xchg
(bad)
jmp
repnz
rol
pusha
fisttp
adc
hlt
jg
push
js
std
mov
loope
xlat
fistp
dec
ins
loopne
add
push
repnz
retw
int3
push
xor
jne
jo
js
xchg
xchg
dec
inc
mov
ins
adc
into
ror
outs
jns
mov
xchg
push
iret
inc
cli
call
cmp
push
xor
push
inc
cmp
fisub
or
stc
push
jo
jp
adc
call
mov
adc
test
in
pop
xchg
rol
and
dec
mov
inc
fisubr
nop
push
int3
xchg
nop
adc
outs
and
pop
add
cmp
or
jne
push
sbb
(bad)
cmp
push
movs
push
(bad)
cs
cs
and
imul
(bad)
fdiv
pushf
mov
cld
ja
and
and
js
xchg
data16
cli
repz
adc
mov
rcr
jmp
sbb
stc
icebp
fbstp
outs
dec
xor
jge
pusha
(bad)
retf
pop
push
int3
push
dec
imul
mov
inc
add
shr
pop
dec
jnp
inc
aam
call
add
mov
mov
ror
cmps
ja
shl
mov
inc
cmc
xor
cmp
mov
icebp
mov
cli
xor
je
movs
mov
dec
call
mov
sub
jno
add
pop
imul
sbb
adc
rcl
mov
and
cld
fwait
and
sub
xor
sbb
cmp
cmp
repnz
rol
mov
mov
jbe
or
push
sbb
push
test
and
and
push
inc
push
and
adc
fsubr
mov
dec
loopne
sub
in
mov
jle
or
inc
cmc
je
int3
repz
data16
add
repz
xor
add
cs
xchg
jns
scas
loopne
fdivr
loopne
xor
bound
pusha
int
jg
test
jns
xchg
cmp
mov
aaa
rcl
jle
dec
sbb
add
push
nop
push
jmp
call
test
sub
adc
mov
xor
jl
push
inc
lahf
ret
cmp
cmp
mov
int
repz
cmc
mov
sbb
addr16
jg
jg
mov
push
jge
push
sub
lock
mov
xchg
lods
push
sub
mov
retf
xchg
mov
mov
pushf
int
ja
jmp
outs
std
in
and
fcomp
enter
test
mov
sub
jle
jns
jge
push
pop
js
es
xchg
movs
retf
dec
test
or
or
xor
pop
jp
xchg
shl
pushf
adc
mov
loopne
push
mov
push
cdq
cmp
cmp
ret
sbb
cmp
cli
neg
inc
adc
bound
mov
jl
out
jno
xor
jmp
aad
or
das
sbb
repnz
sbb
mov
jmp
inc
lds
pushf
std
adc
cmp
addr16
and
mov
cmps
jbe
daa
fidivr
add
cld
cmc
div
jmp
jmp
cmp
cdq
inc
test
inc
sbb
sbb
cdq
mov
add
or
bound
lods
movs
xadd
in
and
or
mov
repz
add
jmp
add
mov
movs
ret
imul
sti
inc
in
ret
xor
cmp
sbb
lods
inc
lea
push
xchg
ds
in
lods
das
jbe
imul
cld
clc
call
cmps
xchg
lea
cmc
pop
jnp
in
call
inc
push
xchg
repnz
cli
sub
f2xm1
mov
ja
rcr
sbb
stc
int3
ror
push
adc
dec
ins
out
xchg
cmp
xchg
dec
xchg
sub
ret
cmp
enter
cld
iret
jne
sahf
dec
mov
in
loopne
sub
adc
or
stos
out
push
pusha
ret
mov
mov
cmps
js
add
pop
(bad)
pop
mov
jbe
stos
rol
dec
push
xor
(bad)
je
(bad)
mov
call
cwde
movs
dec
je
mov
xchg
enter
cmc
or
loope
jmp
test
imul
fs
jp
pop
sbb
sbb
das
(bad)
rcr
daa
push
xchg
cmp
(bad)
adc
mov
sub
pushf
sbb
xchg
pop
ja
mov
ds
xor
shrd
and
stos
pcmpgtw
sbb
push
icebp
dec
adc
xchg
stos
xchg
fisub
mov
lods
call
mov
ss
test
adc
adc
mov
adc
int
sub
inc
aam
pop
sub
(bad)
rcr
(bad)
pop
mov
lahf
and
sbb
retf
cmp
cmp
push
test
imul
pop
outs
push
iret
in
sbb
jb
push
pusha
fbstp
jo
cmp
sbb
je
sti
enter
test
mov
mov
push
cmp
or
xchg
xchg
lods
and
cmc
out
push
movs
imul
call
xchg
dec
cmc
stc
mov
leave
or
retf
xor
test
pop
scas
lds
sub
cmps
cli
shl
mov
sti
mov
inc
mov
mov
sub
xchg
push
mov
and
les
cld
xor
pusha
imul
mov
jmp
dec
mov
adc
ret
xor
xor
imul
jo
lock
gs
sub
fiadd
push
jmp
(bad)
stos
cdq
cmp
cmp
jecxz
loope
sahf
iret
mov
push
test
cs
ret
push
and
(bad)
or
jb
inc
jno
call
jnp
cmp
(bad)
in
xchg
outs
inc
jmp
aaa
sub
push
mov
fistp
in
fs
aas
sbb
js
divps
ret
push
dec
sub
inc
fimul
js
(bad)
shr
xor
cmp
daa
mov
cmp
push
xchg
sbb
pop
push
repnz
test
mov
xchg
adc
adc
mov
xchg
jge
pop
push
pop
cmp
cmps
lods
in
mov
leave
jb
push
sbb
xchg
push
test
sbb
sub
scas
push
push
outs
repnz
ret
sti
jnp
les
jnp
ret
mov
stc
sub
lock
pop
sub
shl
repz
dec
lea
jo
push
ja
mov
fwait
or
rcl
jg
mov
jmp
add
in
lods
in
xchg
adc
ins
adc
inc
jle
loop
retf
inc
(bad)
jbe
or
retf
pop
mov
ror
cwde
mov
sbb
pop
bound
(bad)
xchg
jae
mul
push
xor
inc
xchg
outs
push
mov
cmp
dec
xchg
xchg
jge
call
xchg
ins
and
lea
enter
cdq
push
(bad)
stc
lds
and
hlt
stc
ror
push
mov
xchg
shl
pop
sub
clc
mov
jns
int
call
repz
aad
inc
sbb
mov
jne
add
mov
cmp
in
jne
sbb
movs
adc
push
sub
xor
shl
pop
pop
xlat
add
xlat
and
fs
rol
cmc
xchg
test
cmp
xchg
and
pushf
mov
push
push
xor
aaa
or
cs
stos
cmps
xor
into
es
jge
(bad)
into
push
mov
ret
pop
mov
or
mov
adc
mov
int3
pop
je
(bad)
sahf
cmps
xor
mov
cmp
xor
sub
pop
adc
popw
sub
mov
push
push
fistp
or
loope
or
push
sub
pusha
js
aam
addr16
sbb
xchg
mov
loope
jmp
add
sbb
addr16
call
push
jmp
push
rcr
or
pop
push
in
sbb
cmp
in
and
and
test
fistp
test
sub
sub
cmp
sbb
xchg
test
in
cli
pop
fist
jge
ror
jmp
mov
clc
cmp
xlat
pop
loopne
loop
push
in
mov
adc
cmp
(bad)
xor
stos
sbb
mov
push
jp
bound
lea
adc
xchg
fist
js
sti
rcr
cmp
(bad)
pop
xor
mov
in
jp
cmp
dec
xchg
retf
add
mov
adc
test
cwde
mov
lods
jo
outs
cmp
jecxz
jae
xchg
xor
and
add
cmp
add
cmc
and
jecxz
xchg
inc
out
rcr
mov
jp
xor
fist
pushf
jnp
add
xor
xor
jle
(bad)
jne
xor
mov
sbb
mov
ret
xchg
fsubr
shl
xor
js
ret
shl
push
mov
cmp
cmc
jns
and
mov
xchg
pop
imul
sub
in
test
test
sub
int
ds
retf
mov
imul
ret
add
pop
or
sbb
daa
scas
mov
sbb
push
stc
(bad)
es
movs
push
cs
cwde
inc
cli
(bad)
or
push
pop
jecxz
cmp
jb
pop
fsub
pop
jnp
mov
int3
sbb
dec
data16
out
cs
push
and
cld
mov
outs
pop
repnz
mov
pushf
inc
dec
pop
mov
lock
outs
and
pop
jecxz
adc
push
ins
(bad)
fs
test
jae
inc
fnsave
sub
mov
inc
adc
shr
mov
mov
test
mov
or
mov
add
push
dec
or
loop
pop
sub
sub
xchg
or
inc
adc
pop
jns
shl
and
xor
mov
add
jo
or
retf
xchg
mov
in
es
mov
inc
adc
cmp
std
aam
retf
je
(bad)
jmp
push
mov
sti
test
cmp
xchg
out
pop
mov
cmps
pop
es
fmul
push
jne
neg
cmps
std
jmp
pop
int
xchg
pushf
xchg
hlt
loope
call
cld
loop
push
aas
xchg
mov
fnstcw
pop
enter
push
push
mov
repz
sbb
test
pop
jle
push
jmp
adc
sbb
cs
xchg
aad
ds
fisub
shl
jno
xchg
(bad)
and
dec
xchg
sub
mov
or
jl
xchg
mov
pusha
repz
sbb
outs
je
enter
adc
into
dec
add
sbb
ja
arpl
sahf
jo
shl
cmp
rcl
sub
jle
adc
(bad)
push
xchg
movs
outs
fild
loopne
pop
loope
dec
pop
jns
xchg
xchg
pop
cmp
mov
pop
(bad)
pop
xchg
sbb
jle
xor
mov
into
(bad)
cmp
retf
adc
jno
mov
mov
dec
mov
sbb
pop
in
fcmovnbe
ss
xchg
fnstenv
or
and
jne
in
nop
mov
or
mov
call
xor
iret
fistp
cmp
imul
icebp
scas
cmp
push
jp
(bad)
sahf
dec
or
(bad)
shr
daa
xchg
int3
cli
shr
ss
jne
out
push
cmps
sbb
pop
arpl
aam
and
dec
retf
ret
jne
xor
(bad)
xchg
daa
pushf
mov
xor
push
test
inc
aad
pop
xchg
sahf
cmps
cmp
arpl
push
ror
jae
adc
xchg
adc
out
sbb
pop
xor
addr16
movs
scas
dec
jmp
mov
stc
xchg
iret
pop
loope
add
sti
ret
cmp
shr
mov
cmp
cmp
sub
xchg
mov
loop
fwait
mov
in
hlt
sub
push
stos
lds
popf
xor
and
jnp
test
test
popf
dec
sbb
jmp
adc
out
sub
shl
lock
and
pop
loopne
jb
xchg
mov
call
push
add
pop
inc
mov
popa
xchg
mov
xlat
ret
int3
in
call
test
mov
and
sub
sbb
test
sbb
sub
xor
add
jg
nop
hlt
adc
stc
xor
jge
mov
fidivr
mov
or
xchg
cwde
call
pop
aad
nop
sti
lock
dec
xchg
shl
cmp
sub
ret
cwde
jae
clc
sbb
push
fbld
push
jmp
add
sbb
outs
mov
jo
sbb
mov
lds
into
cmp
sahf
sub
push
div
fwait
test
mov
cmp
outs
movs
pop
or
sbb
xchg
leave
cli
xchg
jge
mov
inc
xor
add
and
push
daa
xchg
inc
cmc
hlt
sbb
inc
popa
pop
jle
or
addr16
adc
push
into
mov
lock
outs
nop
out
ret
push
fs
adc
test
jo
xor
cs
or
add
js
(bad)
jecxz
mov
add
mov
cmc
bound
pusha
push
clc
xor
or
cmps
xchg
js
cmp
sbb
xchg
cmp
ret
cld
push
push
cmp
sbb
push
out
call
out
mov
mov
or
sub
(bad)
fnsave
jne
retf
mov
fild
jmp
sbb
in
pushf
cdq
mov
shl
push
jge
in
mov
jns
clc
lds
push
nop
jg
dec
mov
cmp
jno
(bad)
ins
xchg
sub
push
not
push
dec
imul
dec
and
int3
adc
sbb
in
jge
xchg
push
jae
fdiv
pop
xor
sbb
adc
sbb
pop
imul
inc
out
repnz
int3
fmulp
sub
cmp
lock
jmp
inc
js
shl
cmp
jne
ret
or
dec
sub
fild
sub
push
fadd
aas
imul
(bad)
pop
add
jmp
sub
jns
fst
pop
cmps
std
test
cmp
je
xor
xlat
daa
push
pop
xchg
jo
lods
aam
xchg
mov
fiadd
xchg
push
adc
stc
pushf
dec
push
mov
lods
sub
cmp
mov
cld
cmp
sub
dec
imul
movs
cmp
add
xor
xchg
push
push
mov
addr16
and
(bad)
cmps
pop
sahf
int
jne
inc
test
dec
cmc
or
lahf
out
fbld
jb
push
cmp
fld
and
ret
imul
ffree
es
xor
es
stos
iret
push
jg
ds
mov
push
xchg
jp
xchg
enter
sub
or
pop
sbb
lock
jle
int3
mov
xchg
std
sub
popa
stc
jge
xor
push
sahf
jnp
mov
mov
push
and
xchg
dec
(bad)
mov
cli
pop
inc
xchg
mov
pop
sub
mov
mov
dec
mov
mov
jno
jno
inc
fwait
xchg
or
es
adc
and
xchg
sbb
icebp
cmp
push
inc
out
mov
or
(bad)
in
mov
mov
pusha
mov
xchg
xchg
mov
cld
mov
imul
dec
mov
ins
xor
push
and
outs
jmp
pop
cwde
adc
retf
xchg
cmp
dec
pop
sub
mov
push
scas
inc
dec
repz
inc
js
and
mov
cmp
sbb
icebp
push
jmp
xor
xor
scas
fist
loopne
and
jl
and
out
xchg
push
out
loopne
xchg
mov
loop
or
add
push
jg
mov
lahf
call
lods
adc
and
lods
mov
pop
adc
(bad)
clc
push
(bad)
outs
sub
jne
and
add
pop
cmc
adc
js
and
cli
out
push
shr
jp
fisubr
mov
cld
stc
and
repz
loopne
sbb
and
test
repnz
sbb
std
das
retf
cmps
stc
aad
jle
jg
fwait
hlt
push
(bad)
cmc
adc
xor
mov
xor
fcmovb
popa
sbb
jl
adc
and
aam
mov
pop
dec
dec
xor
inc
mov
in
jne
movs
(bad)
push
pushf
adc
mov
pavgb
les
mov
test
in
call
into
mov
loope
leave
mov
mov
into
mov
dec
mov
xor
push
ins
pop
inc
aas
xchg
mov
sbb
gs
pop
les
xor
ins
cwde
pop
mul
mov
test
sub
popf
arpl
or
jmp
loopne
and
dec
push
pop
sub
mov
jl
shl
cdq
(bad)
jnp
pop
xlat
jmp
movs
lds
sti
es
inc
and
pop
test
xchg
pop
xchg
cmp
iret
cli
push
lahf
cmc
rol
jmp
fisttp
(bad)
int3
enter
ins
mov
mov
mov
pop
fs
stc
and
xchg
jne
adc
pop
adc
push
xor
xchg
jbe
aam
movs
mov
loopne
(bad)
cwde
push
jo
adc
sar
mov
push
mov
loop
mov
push
xchg
icebp
js
mov
js
sar
lock
xchg
mov
add
mov
dec
(bad)
loope
xchg
shl
ja
mov
or
mov
add
push
in
dec
push
push
daa
xchg
pop
shl
or
cmp
sbb
xor
xchg
jecxz
idiv
jbe
ret
mov
adc
xchg
push
or
dec
(bad)
hlt
es
mov
aas
test
xchg
out
iret
stos
sub
adc
xchg
in
retf
pop
push
je
xor
sub
pop
jmp
fiadd
cs
jno
push
mul
pop
jp
jecxz
shr
icebp
jmp
imul
add
sbb
wrmsr
bound
fld1
push
je
mov
jns
dec
imul
xchg
lock
and
jnp
out
pop
pop
mov
mov
fwait
dec
xchg
push
pop
push
test
xchg
int
sub
inc
adc
xchg
mov
iret
ss
cmps
retf
push
outs
mov
push
jae
sbb
xor
adc
or
sub
repnz
fs
add
push
sar
mov
dec
pop
and
adc
adc
sahf
sbb
int
imul
sbb
test
push
and
mov
push
repz
out
jmp
xchg
jns
xchg
mov
test
xor
sbb
mov
rcl
pop
inc
adc
or
mov
sbb
ret
jnp
lods
mov
nop
xor
mov
ins
fidivr
ja
scas
mov
sub
hlt
xchg
sub
sub
and
in
call
inc
add
xor
push
jle
jle
and
dec
gs
sbb
rcl
rcr
jge
adc
test
xchg
push
adc
not
aas
or
call
jne
clc
movs
mov
dec
sub
ss
movlps
call
ret
add
pushf
pop
sub
fst
sti
jmp
dec
or
lahf
sbb
cmp
int
cmc
sahf
je
cmps
sbb
aad
xchg
ret
mov
jne
sti
ret
inc
loopne
in
or
add
xchg
call
cwde
movs
cmc
sahf
jmp
adc
xor
popa
adc
cmp
daa
sub
jp
pushf
je
sub
loope
sbb
jmp
mov
rcr
(bad)
or
xor
dec
mov
cmp
inc
sub
xchg
loopne
into
pop
sbb
xchg
sub
inc
dec
and
mov
addr16
enter
fs
jp
cmc
add
popa
ins
loop
inc
retf
fmul
movs
mov
ret
mov
je
sub
and
inc
mov
imul
jne
push
push
cdq
cmovg
jbe
mov
mov
adc
test
jge
je
cli
leave
in
and
jae
add
push
mov
xchg
out
dec
jle
es
fwait
leave
pop
clc
or
idiv
sbb
clc
ins
add
xchg
in
xchg
cmp
pop
jmp
inc
shl
push
pop
cdq
push
clc
sub
mov
rcr
cli
or
push
xchg
push
pop
hlt
aas
shr
fdiv
adc
xchg
jp
sar
mov
loope
sar
pop
add
imul
fidivr
sub
aaa
jae
mov
lock
iret
mov
push
dec
jle
adc
dec
call
ret
test
add
data16
xchg
repz
cmp
xchg
retf
pop
or
popf
adc
stos
adc
or
mov
dec
lods
dec
mov
xchg
imul
adc
mov
xor
pop
jmp
jge
inc
jmp
call
and
xor
mov
mov
jo
(bad)
dec
test
sub
and
jmp
test
js
mov
pop
rol
fucomip
es
pop
test
or
adc
stc
xchg
and
out
cmps
daa
jae
mov
iret
jl
jmp
and
out
push
sub
and
pop
jge
mov
out
cli
pop
fild
xor
adc
les
gs
loope
stc
les
ror
les
jge
out
and
jbe
xor
inc
cs
test
pop
out
aam
jmp
iret
repnz
jnp
jo
outs
inc
xlat
add
push
fstp
in
ins
pop
mov
test
fdivr
ins
push
and
xor
hlt
lahf
retf
jae
adc
xor
jge
pop
sub
pop
stos
ja
cs
xor
sub
and
lods
push
mov
mov
add
test
jp
fcomip
cwde
sub
mov
sbb
mov
xor
push
neg
jbe
add
sbb
std
lods
push
(bad)
pop
push
mov
add
jns
cmc
pop
sbb
push
jbe
push
inc
out
add
pop
or
inc
call
push
aaa
dec
test
ins
adc
push
clc
fs
add
mov
add
jns
adc
push
aad
push
fdiv
xchg
shl
xchg
and
js
jp
cdq
popa
or
imul
cmp
inc
test
mov
retf
mov
lds
xchg
sbb
cmc
dec
cmp
in
push
dec
pop
sbb
ficomp
dec
repz
ja
imul
mov
sar
jge
iret
jmp
pop
aam
fist
(bad)
xchg
mov
dec
cmps
aas
add
pop
and
int
push
cmp
cmps
(bad)
cmps
xor
mov
xor
or
xor
je
or
ja
mov
jg
lock
xor
ret
xchg
xor
jp
pop
adc
movs
shl
xchg
cmp
je
mov
lock
add
xchg
retf
and
jbe
cwde
add
das
sub
push
not
in
mov
sub
xchg
pop
cmc
pop
mov
cmp
(bad)
test
call
es
xor
hlt
shl
jge
sbb
sbb
lahf
rcl
mov
cdq
jne
inc
add
mov
jge
(bad)
scas
movs
push
sub
lods
ret
xor
push
jbe
or
jmp
shl
jmp
push
repz
cs
jg
cli
sub
int3
shl
fsub
sbb
les
stc
xor
sahf
idiv
outs
bound
mov
dec
jne
imul
and
mov
adc
cwde
inc
xor
jl
xchg
aad
xchg
into
mov
sti
pusha
sbb
call
mov
push
aad
imul
pop
or
jns
hlt
mov
mov
add
dec
add
xchg
repnz
xor
xchg
or
xor
push
retf
cmps
retf
inc
jne
shl
jae
js
(bad)
xchg
or
adc
lods
add
mov
inc
shl
push
shr
or
in
pop
test
jne
jmp
xchg
out
xor
lods
ds
add
adc
gs
jle
addr16
dec
cmc
scas
push
or
in
mov
cli
unpcklps
sub
sub
les
push
xor
les
lods
cmp
xchg
cmps
cmp
mul
sbb
in
adc
out
test
mov
fist
in
cs
xchg
inc
mov
sub
push
pop
in
lods
sub
push
push
or
in
bound
mov
xchg
xor
test
jae
mov
dec
lea
rol
sti
xor
js
xchg
mov
jne
push
sbb
mov
pop
shl
jnp
lods
les
push
ins
fnsave
xchg
or
dec
lea
mov
push
les
loope
mov
sub
mov
push
push
movs
mov
js
and
mov
pop
add
sub
es
lods
je
mov
push
icebp
leave
mov
in
inc
lods
adc
data16
and
mov
jge
pop
inc
pop
adc
and
push
dec
pop
jnp
fild
push
adc
inc
popf
dec
sub
inc
int
sbb
add
aas
aad
push
xor
out
rcr
pop
add
adc
test
jl
sbb
out
cmp
jmp
repz
or
ins
pop
aas
push
and
sub
jmp
icebp
xchg
jbe
aas
call
pop
xchg
mov
pop
xchg
in
adc
clc
loopne
in
pop
xchg
ret
(bad)
add
das
sub
inc
clc
mov
aad
repnz
movs
or
addr16
les
xor
add
js
mov
aam
shl
repz
sub
xchg
mov
and
mov
in
and
nop
jb
fadd
imul
pop
and
fcom
les
push
cmps
cld
int3
adc
test
gs
loope
add
sti
and
cmp
xchg
inc
sub
xchg
ret
sbb
mov
jle
cmp
cmp
cmc
icebp
jmp
xor
adc
ins
aaa
cmp
call
sti
xchg
out
inc
xchg
mov
jne
out
(bad)
cmp
dec
shl
adc
xchg
imul
jg
lock
push
push
imul
idiv
add
jp
outs
cmc
pop
sbb
sub
mov
ret
cmp
dec
stc
xchg
or
mov
and
aad
daa
add
scas
jle
aas
pusha
fcom
add
mov
jmp
inc
and
jmp
sub
adc
mov
dec
out
aad
fld
jge
mov
sbb
mov
xchg
push
in
and
imul
xchg
aas
or
mov
mov
xchg
out
xor
jl
mov
outs
aad
xchg
fcomp
inc
shrd
add
addr16
jecxz
cmp
scas
or
dec
addr16
sbb
xor
cmps
mov
in
test
test
cmp
jmp
imul
push
pop
pop
addr16
mov
sub
dec
(bad)
int
in
arpl
jae
lahf
xor
jo
loop
cmp
jb
push
mov
mov
loop
mov
lds
and
jo
lock
(bad)
dec
repz
stos
imul
xchg
push
cwde
mov
cmc
fdivr
ror
mov
outs
lock
cmp
sub
call
or
xlat
test
push
mov
loopne
and
into
push
mov
mov
mov
push
inc
mov
popa
inc
rcr
in
sub
rcl
adc
cmp
adc
jmp
ins
push
test
sbb
xor
nop
iret
jne
aaa
jo
cmp
push
ficomp
ret
inc
(bad)
loope
cmps
push
lods
fidiv
sub
shl
stc
sub
xchg
data16
inc
push
dec
lods
and
and
xchg
imul
xchg
mov
xor
adc
pop
pop
push
cwde
jmp
fcomp
stos
lahf
pop
cmp
mov
out
movs
mov
sahf
pop
mov
inc
xchg
push
push
adc
xor
jg
mov
jecxz
and
fwait
pop
cli
call
int3
(bad)
sub
sbb
pop
mov
push
jo
bound
add
adc
les
loopne
cwde
sbb
outs
ins
aas
cmp
mov
mov
mov
or
mov
jo
nop
cmp
mov
icebp
(bad)
adc
add
imul
xchg
pop
repnz
inc
push
stos
fcomp
jb
test
into
mov
jl
xchg
push
sub
ret
(bad)
pop
and
fcomp
fs
jbe
mov
dec
movs
xchg
add
xor
or
dec
ret
and
xor
jo
inc
inc
rol
sub
hlt
test
push
lods
aaa
push
push
fstp
and
jmp
mov
and
loope
addr16
cmp
fisttp
out
push
aad
push
je
(bad)
lods
retf
jns
push
icebp
jg
pushf
push
ret
sbb
mov
test
mov
cwde
(bad)
clc
mov
mov
mov
dec
je
sahf
enter
jo
cmp
push
test
sbb
hlt
fild
lea
add
mov
popf
aas
xchg
push
cmc
mov
sbb
hlt
inc
sbb
pop
xchg
repnz
push
ds
jmp
cmc
imul
repnz
pop
das
pop
jo
adc
push
test
sbb
mov
xor
dec
xchg
or
ret
mov
je
imul
inc
jae
jo
cmps
dec
adc
test
lods
xchg
jno
stos
shr
xor
mov
sub
repz
ret
es
loope
jge
mov
adc
pusha
and
and
xchg
jnp
fnstsw
cmp
mov
inc
loope
aad
push
shl
inc
or
(bad)
shl
jae
pop
fisttp
add
call
data16
mov
sbb
mov
aad
sub
jmp
repnz
push
loope
jp
aas
dec
xchg
loopne
pop
pop
xor
sbb
sbb
mov
inc
mov
sbb
aam
dec
out
inc
inc
dec
scas
sahf
daa
fnstcw
xchg
fld
nop
das
popa
jmp
fbstp
repz
adc
cmp
cmp
push
jne
bnd
jecxz
inc
xchg
adc
imul
mov
in
xchg
mov
mov
mov
pop
xchg
sub
fs
push
je
add
aaa
and
sti
sub
pop
inc
xchg
push
mov
cmp
xchg
inc
aad
test
push
inc
std
not
bound
mov
xor
das
xor
push
(bad)
add
scas
add
sar
(bad)
call
mov
or
js
add
mov
pop
dec
push
xor
pop
push
cdq
cmp
inc
stos
cli
ficomp
test
jmp
icebp
js
enter
and
(bad)
out
mov
ins
push
mov
fld
push
packssdw
cmp
out
rcl
mov
lds
mov
in
adc
mov
pop
ret
in
icebp
js
fmul
popa
dec
xchg
call
mov
mul
cwde
call
movnti
mov
jg
mov
add
pusha
icebp
adc
leave
push
loope
xchg
cmp
sub
or
mov
test
ja
popa
out
out
ins
int3
js
repnz
fmul
xchg
idiv
adc
test
jns
push
(bad)
js
jae
ins
push
sub
sbb
adc
xchg
dec
stos
sub
fwait
push
repnz
jmp
call
jge
shr
cmp
ds
mov
mov
xchg
push
shl
jbe
add
mov
sub
jne
(bad)
outs
xor
cmc
je
mov
imul
mov
test
add
imul
inc
push
cli
xacquire
inc
outs
not
cmps
jle
sbb
adc
mov
ret
xor
pop
cmp
pop
test
aas
xchg
in
scas
dec
push
repz
js
jg
mov
xchg
inc
pop
out
fst
xor
jo
test
pusha
icebp
ret
push
cli
inc
imul
pop
or
mov
adc
xor
xchg
dec
jmp
mov
xchg
iret
cmp
leave
sar
in
jnp
in
das
pushf
or
movs
push
(bad)
not
popf
cs
repz
or
ror
pop
imul
xchg
in
inc
stos
pop
jno
jmp
ds
add
add
jo
ins
push
xchg
push
push
test
stos
das
repz
shl
push
pop
add
nop
aad
add
inc
inc
inc
mov
sub
sub
xchg
cld
xchg
pop
das
push
ins
cld
xor
ss
neg
in
clc
xor
nop
fistp
jmp
dec
cmp
fbstp
xchg
js
sub
clc
push
push
repnz
and
push
sar
jge
gs
lock
jns
mov
jae
xchg
sub
stos
arpl
cld
dec
mov
mov
sub
jle
cmps
loop
cmp
in
stos
jmp
mov
dec
and
ja
pop
mov
cmps
test
xchg
push
mov
jb
add
mov
mov
loopne
data16
(bad)
jle
mov
jl
sti
sar
and
addr16
das
xor
jge
(bad)
xchg
pop
or
push
out
mov
movs
push
jmp
repz
jge
adc
push
xor
push
retf
je
lea
mov
std
inc
or
add
cmp
fst
push
stos
mov
sbb
xor
mov
rcr
adc
lods
pop
jp
mov
adc
scas
sub
jnp
mov
das
mov
xlat
aad
xor
jmp
imul
inc
std
dec
adc
xchg
pop
mov
xchg
cmp
test
xor
imul
dec
unpckhps
ins
je
and
test
sbb
cmp
pop
jmp
pop
cmp
aad
mov
(bad)
pop
stc
dec
push
sahf
stc
arpl
dec
iret
push
test
xchg
or
jbe
imul
and
xchg
and
jp
sbb
or
xchg
adc
and
js
lea
dec
int3
aad
xchg
lods
xor
retf
cmps
movs
push
cmp
dec
shr
leave
mov
jp
rol
xchg
pop
shl
hlt
cmp
adc
paddq
neg
mov
pop
add
sbb
adc
(bad)
xchg
add
rcr
add
mov
(bad)
lock
adc
dec
js
lds
sahf
lahf
push
cwde
loope
jmp
dec
xchg
popf
out
lods
cmp
cmp
jnp
xchg
jp
adc
dec
sub
fs
pop
jle
(bad)
jns
jae
daa
xchg
adc
mov
cmp
hlt
rcl
pop
mov
int
push
dec
and
and
dec
and
jecxz
jmp
outs
call
or
cmp
clc
xchg
xlat
sub
in
addr16
movs
int
repz
repz
cmp
imul
xchg
xor
push
cmc
dec
(bad)
pop
in
cmp
lea
adc
xchg
(bad)
push
ficom
cmp
push
test
mov
(bad)
in
test
clc
inc
sub
cmp
sbb
les
or
dec
int3
aas
out
sbb
sbb
lahf
(bad)
mov
bound
or
arpl
mov
inc
frstor
mov
or
test
shl
dec
sbb
out
cmp
in
mov
jnp
dec
neg
in
out
aad
pop
xchg
cmp
aad
pop
sbb
rep
loope
mov
movs
and
addr16
jbe
xchg
call
lds
cmp
push
repnz
out
les
lahf
in
adc
jns
stos
retf
xor
test
or
scas
lods
jne
in
cmp
xchg
mov
mov
xchg
dec
mov
pop
push
(bad)
sbb
test
cld
cli
mov
pusha
jecxz
and
imul
fdiv
nop
xor
mov
int
in
adc
cmc
mov
push
fdiv
pop
add
mov
sbb
mov
(bad)
add
sahf
int3
out
mov
sub
nop
xchg
jo
les
mov
mov
(bad)
sub
adc
and
mov
in
cmps
push
xchg
ret
ins
xchg
js
popf
inc
jmp
mov
or
test
imul
dec
mov
cmp
jge
(bad)
repnz
inc
bound
mul
pop
ror
inc
(bad)
and
test
pop
sub
jne
sub
xchg
ds
push
inc
xchg
(bad)
jae
cwde
es
sub
mov
sbb
pushf
and
loope
jo
jae
cmp
call
add
push
sbb
int3
ss
push
movs
dec
not
int3
xor
(bad)
push
and
out
pop
xchg
jo
test
loope
in
push
hlt
iret
mov
jnp
(bad)
ins
mov
dec
mov
jmp
sub
cwde
dec
and
nop
add
xchg
fidiv
loope
aad
sub
xchg
loope
(bad)
mov
or
hlt
cmps
ret
push
and
cmps
(bad)
test
xchg
jecxz
xchg
inc
test
not
jae
nop
jne
or
fwait
data16
mov
mov
sbb
ss
pop
hlt
and
cmp
xor
cmp
lods
pop
push
jns
fcomp
push
aad
push
loopne
cmp
mov
bound
bound
pop
or
mov
shr
or
mov
fsubr
lods
jp
hlt
and
xor
and
add
sti
lock
mov
ins
popf
or
jecxz
dec
pop
ret
sar
fs
sbb
les
adc
cmp
pop
push
mov
jae
loopne
(bad)
out
pop
loope
jp
(bad)
ret
inc
sub
mov
out
in
popa
jg
rcl
mov
mov
jo
xor
pop
push
lods
pop
sti
adc
cmp
jle
hlt
fadd
push
les
popa
mov
(bad)
out
mov
push
retf
pop
or
mov
cs
daa
stos
mov
and
ja
data16
and
test
cli
stos
jmp
xlat
sub
ss
pop
jg
ret
jge
or
xor
cmp
fbld
pop
pop
loop
jo
and
push
add
fs
xchg
xchg
int3
sbb
enter
jnp
test
sbb
jecxz
pop
hlt
lods
ret
jns
fld
in
pop
jge
es
jmp
jb
jge
dec
mov
lods
mov
push
jb
sub
inc
add
je
jl
xor
mov
and
fnsave
ja
enter
dec
test
adc
pop
xor
aad
lods
call
cmp
xor
and
push
sub
xchg
add
clc
icebp
sub
xchg
sbb
pushf
dec
mov
sub
lea
jo
mov
cdq
xchg
push
mov
leave
and
cmps
aaa
and
out
imul
mov
into
xchg
jae
aam
push
icebp
outs
cmc
xor
add
out
ror
fnstenv
mov
leave
push
ss
aaa
push
data16
pop
mov
pop
movs
pop
sbb
call
mov
icebp
push
ror
movs
jns
mov
popf
xchg
and
xor
stc
xchg
or
test
repz
js
retf
out
cmp
ja
cli
aad
jmp
cmp
xchg
movs
cld
sti
test
aam
xor
mov
xor
and
adc
mov
jae
add
sub
sbb
mov
test
push
(bad)
pop
mov
sbb
cli
cs
int
xchg
(bad)
std
jp
cmc
cmp
sbb
push
pop
mov
or
pop
cs
hlt
pop
add
fistp
sbb
popf
nop
retf
dec
sub
sbb
adc
push
mov
push
retf
in
xchg
jle
lods
ds
out
jp
cmc
mov
push
xor
lods
arpl
mov
jns
test
and
outs
push
leave
call
add
lock
xor
cld
test
mov
or
fstp
scas
jbe
dec
sub
jns
jae
or
pop
mov
xchg
pop
jecxz
jmp
mov
cmp
mov
cmp
icebp
retf
shr
push
xor
cs
arpl
(bad)
mov
dec
mov
mov
xchg
sbb
ins
pop
adc
add
fcmovnb
xchg
dec
add
push
enter
(bad)
jbe
cmp
or
ja
sub
stc
rcr
nop
mov
mov
jo
dec
fwait
mov
inc
popf
mov
mov
pop
out
push
(bad)
icebp
rol
push
mov
js
push
sub
or
mov
push
popf
mov
and
xchg
pop
nop
icebp
mov
fwait
xor
mov
lds
sbb
sbb
fisub
test
ins
stos
ret
sub
stc
test
mov
out
xor
add
xchg
fucomi
fnsave
jnp
sub
loope
pusha
pop
in
repz
add
mov
sbb
cmps
ss
sub
and
imul
push
mov
repz
fadd
js
mov
push
jbe
imul
and
sub
pop
call
add
(bad)
lods
sub
test
pushf
sub
pop
pop
adc
js
in
std
sbb
xor
loopne
adc
popa
xchg
aas
pop
push
loope
pop
in
add
cmp
cwde
jge
leave
mov
sub
outs
cmp
mov
mov
xor
dec
lahf
push
sub
inc
movs
pusha
adc
xlat
jne
xchg
push
call
loop
loope
popa
adc
cmc
pop
xor
inc
out
pushf
dec
pop
in
jg
xchg
mov
add
retf
mov
repz
cmp
or
aas
inc
out
aas
dec
in
call
and
ds
ss
jne
inc
cmp
ds
add
neg
aad
popa
or
test
out
fmul
ret
mov
lds
dec
mov
xchg
adc
dec
dec
rcr
fdivr
into
test
jp
daa
xchg
call
and
lods
jb
sbb
mul
cs
test
scas
adc
or
xchg
movs
fild
dec
push
xchg
pop
sub
jne
lahf
push
cmp
fbstp
xor
and
ret
retf
test
push
jnp
or
gs
rcl
push
shl
and
jge
sub
into
ret
pop
mov
sbb
loop
jne
loop
lds
inc
iret
cmp
cmp
cs
addr16
repz
dec
and
ins
dec
xchg
dec
mov
(bad)
loopne
jne
mov
push
jno
mov
out
dec
pushf
out
sbb
xchg
sub
inc
imul
xor
mov
mov
push
or
xchg
movs
in
xlat
pop
test
mov
or
es
cmc
pop
jge
vaddsd
rol
sub
mov
jge
pop
scas
jns
data16
sbb
jb
mov
push
ret
dec
ins
sub
clc
xchg
xor
xchg
pop
adc
jb
rol
sub
call
jmp
lods
sbb
rcl
bound
in
push
sub
fwait
fwait
mov
sub
add
cli
test
mov
in
sbb
sbb
sbb
xchg
or
mov
xor
in
fbstp
loopne
xchg
in
pushf
in
ret
mov
gs
out
jbe
xchg
xor
je
push
jge
test
jl
mov
push
sub
and
and
cmp
mov
or
lods
cs
loope
add
imul
sbb
add
xor
lods
ss
xchg
xor
mov
push
retf
mov
or
jae
dec
dec
(bad)
in
pop
je
mov
lods
cmp
mov
jbe
pop
jo
add
cmp
mov
rcr
lock
fisubr
pop
cmp
sbb
mov
js
setnp
cs
jle
mov
adc
add
lds
xor
leave
xchg
mov
push
lea
push
retf
mov
dec
xor
test
enter
sub
int
nop
mov
fdiv
push
or
mov
fwait
mov
adc
mov
fnstenv
out
push
push
cmp
sub
sub
imul
pop
or
adc
add
call
mov
in
test
movs
imul
xchg
lods
hlt
mov
cmps
xchg
push
jle
jp
xchg
adc
clc
cld
xchg
xchg
and
sub
stc
adc
loopne
sbb
rcr
cmp
xchg
sbb
aas
leave
push
sbb
mov
add
cli
lods
fmulp
pop
sub
sar
pop
mov
fld
movs
jo
push
lock
and
bnd
ret
retf
mov
jns
or
inc
fadd
loope
out
cmc
jae
mov
jns
cmp
jbe
mov
add
mov
lock
lea
daa
stos
mov
cli
outs
scas
clc
sbb
fcom
mov
mov
push
aaa
dec
je
ins
inc
jmp
loope
sbb
es
xor
add
enter
mov
cmps
dec
(bad)
sbb
cmps
xor
test
movs
dec
mov
mov
xchg
xor
int3
jo
sbb
xchg
sub
or
or
outs
jbe
retf
cmp
cmp
mov
and
popf
aas
jb
scas
cmps
loop
cs
mov
fxch
jo
jmp
fistp
fs
cwde
dec
dec
push
sti
add
jecxz
jne
xor
xor
dec
adc
lock
xor
(bad)
sbb
mov
inc
inc
xor
rol
inc
cmp
lds
hlt
jle
cmp
push
cmp
mov
or
daa
sbb
jbe
push
sub
jp
dec
adc
(bad)
jne
xlat
in
pushf
xchg
sub
loop
js
in
pop
xor
in
stc
lahf
mov
mov
jo
out
sbb
add
cmp
push
retf
fild
jnp
sub
cmp
cld
fwait
fs
loopne
xchg
xchg
or
scas
fsub
test
js
and
outs
ss
frstor
cmp
mov
pusha
and
aam
cld
sub
xor
ds
lods
popf
jle
mov
push
push
inc
ds
sbb
jg
and
nop
lock
mov
rcr
sar
sar
cmp
xchg
mov
cmp
icebp
and
aas
(bad)
ds
jne
scas
push
in
mov
sbb
sbb
mov
(bad)
cmc
push
dec
rcl
adc
mov
sti
sub
sub
adc
adc
js
std
jnp
cmp
leave
cmp
jnp
cmp
sub
iret
clc
nop
pop
ss
dec
test
retf
test
dec
mov
xor
and
adc
jg
loopne
repnz
mov
xchg
cmp
ror
les
retf
je
cmp
movs
dec
jg
mov
and
outs
mov
call
lds
sbb
inc
dec
mov
cmp
nop
cmp
mov
jmp
jp
xchg
fmul
pop
jl
leave
std
mov
imul
sbb
dec
sub
push
fsubr
aam
pushf
mov
sub
add
push
push
sub
(bad)
push
pop
fadd
dec
test
dec
pop
sub
jmp
mov
fmul
repz
add
jo
mov
add
xchg
shl
mov
pop
mov
mov
jmp
loope
sahf
pop
retf
jg
xchg
call
cdq
cmp
loop
stos
and
call
adc
gs
dec
repz
call
push
idiv
and
sub
push
add
inc
adc
xorps
mov
adc
outs
out
adc
and
cmp
push
add
lahf
loope
cmp
sub
and
test
ja
rcl
pop
ret
cmp
pop
leave
in
iret
and
imul
add
dec
fisub
jge
nop
aam
rcl
sub
pusha
xchg
data16
outs
idiv
add
xor
or
inc
outs
sub
pop
push
mul
mov
test
in
sub
stc
div
popa
(bad)
pop
push
ins
sbb
jl
out
mov
loopne
adc
push
out
lds
sub
add
fadd
pop
and
js
ret
adc
dec
pushf
pop
cdq
adc
je
aad
and
xor
mov
push
sbb
in
nop
dec
xor
push
hlt
adc
addr16
sbb
mov
push
push
cmps
push
mov
push
and
fld
loope
int3
pop
pop
jae
aam
sub
push
push
fistp
fwait
xor
lods
and
mov
and
jae
cmp
mov
stc
jne
enter
xrelease
sbb
cdq
push
repz
mov
sub
dec
or
cld
mov
xchg
in
je
or
xor
xchg
adc
ins
mov
repz
adc
bound
shr
xchg
inc
pop
xchg
into
pop
mov
xchg
dec
inc
xor
outs
addr16
sbb
or
jle
sar
ja
mov
ins
xchg
mov
test
xor
loop
and
sub
outs
icebp
leave
jg
xor
xor
ror
jp
ret
shr
or
es
adc
jmp
lods
jle
cmp
cmp
cmps
xchg
add
sar
cmps
data16
jmp
(bad)
daa
aas
cmp
sub
bound
push
adc
pushf
fnsave
je
mov
and
jmp
adc
pop
(bad)
mov
imul
mov
je
pop
mov
or
xchg
sub
rcr
mov
pusha
xor
pop
lock
mov
rol
inc
jae
or
pop
imul
xchg
lods
jg
pop
add
orps
ss
mov
movs
sub
jb
push
adc
cs
mov
cmp
dec
int3
sbb
jge
test
cmp
(bad)
ror
das
sti
aam
call
adc
ins
add
iret
test
mov
xchg
push
aam
stc
inc
sbb
mov
in
adc
dec
mov
xlat
jae
repnz
shl
ret
test
bound
sub
mov
rcr
in
cld
cmc
(bad)
lahf
in
mov
clc
push
maxps
inc
(bad)
retf
add
fsub
sbb
pop
xchg
sbb
push
int
dec
add
stos
pusha
adc
xor
jmp
adc
sub
xor
ret
xchg
(bad)
xchg
jg
jne
xchg
hlt
push
movs
test
mov
or
sub
push
mov
xor
scas
js
aam
pop
pop
cmp
or
xchg
sub
jnp
fistp
sbb
call
in
push
pop
xchg
xchg
scas
inc
add
or
aam
enter
lods
jo
xchg
mov
rcl
inc
outs
ret
test
pop
jg
xchg
xchg
out
mov
popf
repz
pop
ss
push
push
fcmovb
or
nop
loopne
adc
sbb
push
pop
imul
or
(bad)
pop
andnps
jge
icebp
jl
dec
into
das
stos
mov
fwait
sahf
sub
and
cmp
sub
cmp
sub
xor
stos
pop
jge
pop
pop
sub
test
mov
xchg
fidivr
add
jbe
jno
xchg
pushf
add
sbb
scas
lahf
retf
cs
add
jo
out
iret
(bad)
shl
(bad)
std
lods
adc
stos
xchg
or
mov
xchg
out
lods
lds
lahf
push
fisttp
in
int3
dec
mov
(bad)
xchg
mov
jno
out
dec
in
sub
ins
cli
icebp
hlt
jge
sub
cmps
dec
add
push
ret
pop
repz
sbb
xor
shl
cs
sbb
dec
outs
xchg
inc
jnp
jge
outs
sti
aam
adc
or
jae
fld
cmp
xchg
inc
and
mov
push
adc
ret
mov
mov
xchg
jge
push
push
mov
xchg
dec
fdiv
jae
push
popa
pop
loope
stos
and
jge
sbb
xor
dec
mov
mov
jnp
mov
dec
mov
push
mov
rep
arpl
cmp
xchg
icebp
nop
mov
pop
hlt
addr16
dec
xor
enter
cmps
xlat
and
outs
jmp
mov
aad
bound
jno
mov
pusha
mov
call
and
das
lea
inc
mov
les
loopne
jmp
cs
adc
jmp
nop
xchg
pop
push
cmps
outs
in
dec
ins
test
(bad)
std
leave
push
mov
push
sub
pop
sbb
fimul
std
push
push
sub
das
sar
and
frstor
(bad)
loope
iret
(bad)
cmp
mov
xor
xor
and
jbe
mov
dec
jecxz
fcmovbe
fldcw
ror
call
scas
fiadd
rcr
les
adc
sbb
test
dec
adc
push
inc
adc
and
or
mov
das
cli
retf
gs
add
jae
cmps
push
int3
mov
dec
sbb
jmp
cmovge
dec
lds
xor
xor
mov
arpl
cmp
mov
cmp
(bad)
movs
mov
mov
(bad)
lods
mov
jge
or
dec
inc
(bad)
cmp
cli
mov
xchg
jl
iret
addr16
cmp
cmps
mov
adc
push
mov
and
add
mov
adc
icebp
jmp
fadd
mov
outs
dec
adc
sbb
sub
push
ins
shl
hlt
or
inc
lds
lods
mov
mov
ror
popf
push
sub
clc
mov
or
sub
rcr
pop
sub
xchg
add
adc
cmps
call
adc
mov
sbb
ficom
fsub
ret
mov
mov
sbb
inc
cmc
dec
leave
xor
mov
das
loope
adc
or
pop
mov
out
and
sub
xor
push
xchg
dec
mov
icebp
mov
lods
xor
iret
movs
fst
sub
mov
addr16
sub
cs
push
sahf
pop
in
cwde
pop
fidiv
mov
or
pop
jg
inc
and
(bad)
dec
cmps
mov
(bad)
leave
jmp
pop
cmc
xor
push
or
add
push
je
pop
mov
inc
jecxz
inc
mov
xchg
push
or
mov
test
pop
mov
xchg
ret
lods
nop
fcomip
je
jge
mov
ins
add
in
sub
stos
cmp
mov
mov
lds
cmps
fidiv
jecxz
aas
cmps
pop
jl
jo
int3
pop
mov
pop
xor
iret
retf
ret
popf
or
cli
xor
push
out
in
ins
xchg
clc
fisub
js
cmps
movs
jb
outs
addr16
fwait
push
cmp
xchg
in
adc
cmp
retf
scas
pop
dec
fnstsw
(bad)
pop
or
std
js
inc
into
mov
aas
retf
pop
add
mov
daa
stos
cmp
sti
or
lods
in
popa
jo
inc
xor
std
push
retf
repnz
retf
lods
xchg
jae
and
popf
lds
push
or
dec
xlat
arpl
imul
cld
(bad)
xlat
jg
nop
xor
push
jp
push
and
rol
sbb
shl
mov
dec
sbb
in
pop
inc
pop
das
loopne
lea
mov
pop
jne
xchg
cdq
mov
and
cld
mov
adc
jl
stos
(bad)
xchg
loopne
sbb
ss
retf
imul
push
fst
std
js
and
mov
jns
inc
leave
stos
enter
fs
ds
dec
xchg
mov
cmp
outs
xor
fcom
dec
sbb
pop
ficom
sbb
xchg
jecxz
pop
call
jp
and
test
cld
daa
xchg
pop
ret
mov
jns
or
rcl
stos
in
jo
(bad)
mov
mov
int3
xor
fwait
test
ror
jae
cmp
and
test
test
cmps
or
jo
adc
imul
xchg
and
jne
lds
mov
dec
(bad)
out
int3
shr
jns
mov
cmp
ins
mov
lock
add
(bad)
movs
or
mov
leave
dec
xchg
nop
rcr
xchg
sbb
mov
sub
push
and
inc
icebp
in
add
mov
jmp
addr16
jp
ds
ret
xlat
mov
cli
gs
xchg
icebp
push
push
mov
sbb
cmp
jbe
retf
call
adc
inc
aam
lods
inc
pop
mov
cld
push
sti
shr
jp
adc
(bad)
xchg
(bad)
and
sbb
aas
mov
and
pop
sub
dec
ins
mov
push
cmp
dec
iret
mov
pushf
mov
mov
jmp
mov
jae
push
and
je
jne
movs
jnp
cmp
ins
inc
jg
into
retf
mov
adc
je
xchg
dec
sar
or
cmp
gs
jle
cmp
adc
lds
xchg
inc
fptan
xor
jne
push
mov
dec
les
pop
inc
fild
pop
pop
mov
jno
shr
test
and
push
mov
cmp
sahf
neg
fdivr
dec
je
adc
cmp
js
xchg
mov
add
cmp
fild
cmp
add
jo
jge
movs
movs
jp
add
add
sbb
out
sub
xchg
in
xchg
ret
pop
adc
xchg
(bad)
jge
xchg
lahf
pop
shl
aam
cmps
jo
xchg
hlt
inc
not
retf
push
pop
idiv
cs
mov
cmps
mov
retf
lea
pop
js
pop
sbb
jae
cmc
mov
jnp
xchg
push
outs
and
jmp
push
cmp
adc
or
inc
pushf
jg
fild
sub
pop
fsubrp
(bad)
push
ins
mov
push
test
pop
sbb
sub
cmps
pop
sub
sbb
add
cmps
add
and
imul
scas
movs
loope
ss
lods
jl
enter
adc
stc
outs
dec
and
(bad)
and
cwde
mov
out
imul
xor
sub
mov
add
adc
adc
call
in
dec
iret
or
or
jmp
bnd
lods
or
mov
outs
fidiv
jg
mov
js
push
pop
xchg
nop
out
jge
xor
fidivr
cmp
xchg
dec
xor
xlat
add
pop
aad
cld
pop
push
and
jmp
nop
xchg
push
sub
mov
movs
hlt
js
sbb
xchg
pop
in
dec
gs
push
aam
mov
cmp
push
es
mov
push
popa
add
movs
push
adc
inc
xchg
sti
repnz
movs
leave
push
and
dec
xlat
cmc
jmp
sub
scas
cs
aaa
xchg
dec
xchg
mov
xlat
jb
loope
mov
pop
mul
or
push
sahf
mov
sbb
mov
sub
mov
int3
mov
mov
fdivr
lds
mov
or
cmp
test
jb
pop
inc
cmc
push
(bad)
movs
adc
in
or
dec
ret
lea
ret
cmp
or
arpl
cmp
(bad)
dec
sbb
cmp
call
das
stos
test
xlat
popf
pop
je
mov
(bad)
sub
inc
dec
call
in
pop
ins
lahf
jmp
mov
adc
stos
rcl
cmp
adc
jmp
or
jmp
push
out
sub
pop
and
jmp
inc
jmp
stc
iret
mov
pop
js
cmc
enter
inc
sub
leave
xor
mov
repz
sbb
sub
test
xchg
and
jno
mov
movs
popf
inc
fisttp
shl
mov
cmps
dec
in
jp
cmp
mov
rcr
cmc
sub
arpl
les
mov
cli
sub
movs
mov
xchg
sub
fisubr
jl
xor
cmp
push
jnp
js
cmp
adc
push
adc
or
xchg
std
inc
pop
xchg
push
cmp
movs
ss
cmp
or
mov
aaa
xor
(bad)
or
icebp
xor
lea
pop
cmp
adc
pop
inc
je
clc
ret
sar
mov
jae
sub
jge
push
sub
jl
cdq
sub
cmp
call
and
test
mov
je
adc
js
and
fsub
stos
dec
cld
dec
jmp
jmp
mov
sub
iret
dec
shl
push
xchg
pop
add
xor
or
or
xor
xor
cmp
sub
xchg
cmp
fcomp
add
scas
or
daa
leave
pop
inc
push
inc
cmps
out
int3
das
jp
sub
(bad)
lods
outs
hlt
inc
repnz
mov
in
rcl
rol
pop
dec
cld
loopne
lea
adc
movs
test
mov
push
fisub
cmps
or
cmp
or
and
jne
lea
sbb
xchg
(bad)
(bad)
cli
enter
ss
jae
xchg
cmps
mov
xchg
fbstp
inc
scas
rcl
fmul
xor
and
mov
repnz
imul
pop
cmp
or
fidivr
daa
inc
mov
pop
clc
xchg
and
dec
mov
fs
cmp
push
mov
dec
push
mov
adc
out
push
inc
dec
cmp
bound
(bad)
mov
or
xor
pop
in
xchg
inc
clc
jb
rcr
jne
mov
retf
xor
xor
test
pop
jl
adc
mov
call
push
jecxz
in
call
ret
cmp
retf
ins
cmps
lea
fs
or
iret
cmp
outs
cli
xor
jge
adc
ja
xchg
stos
cli
std
pop
mov
jns
or
loopne
sbb
gs
dec
sar
ss
mov
loopne
leave
pop
or
repnz
jo
cmp
repz
mov
aam
or
das
cli
enter
sub
cmc
dec
stc
(bad)
push
add
xchg
xor
test
cld
push
jmp
xchg
div
outs
jge
sub
xlat
xchg
push
(bad)
xor
jle
xor
xchg
mov
(bad)
inc
(bad)
push
es
xchg
addr16
and
sub
jmpw
inc
sub
adc
sub
or
call
adc
mov
int3
sbb
dec
jnp
pop
mov
cmp
sub
sbb
out
jl
icebp
push
or
repz
or
fwait
mov
add
les
fiadd
cmps
mov
stc
adc
dec
int
shl
push
sbb
in
xchg
fs
jp
movs
sbb
mov
lods
jb
(bad)
jnp
xor
jp
out
add
cmp
iret
xchg
retf
iret
in
xchg
push
xor
xchg
dec
sub
sbb
xchg
adc
push
jae
xor
mov
arpl
stos
and
(bad)
loopne
aaa
fs
loopne
jg
not
movs
dec
pop
mov
or
les
mov
adc
xor
fdivr
xchg
clc
call
aam
adc
pop
jnp
das
into
cld
mov
sbb
mov
xor
cmp
in
cmp
div
sbb
mov
inc
inc
loope
imul
imul
aam
xchg
lock
pop
jp
add
ret
(bad)
lods
in
xchg
dec
mov
lahf
out
clc
(bad)
aaa
mov
out
lock
pop
push
sbb
mov
icebp
repz
stos
mov
test
pop
aaa
cdq
pop
lock
popa
stos
mov
xchg
mov
std
cmp
mov
daa
push
sub
push
pop
fimul
stc
push
in
je
fisttp
ins
pop
repnz
test
(bad)
push
xchg
fwait
jl
sbb
adc
mov
stc
rcl
mov
iret
mov
adc
scas
add
out
xchg
dec
std
mov
bound
pusha
(bad)
std
mov
mov
iret
cmc
sub
(bad)
pop
mov
cmp
cmp
sub
mov
hlt
xor
sub
push
cmp
inc
mov
jge
fsubr
mov
inc
push
cmc
or
sbb
xchg
aad
inc
jp
fs
into
mov
jae
cmps
jbe
cmps
jl
outs
not
push
or
leave
mov
js
test
(bad)
out
retf
scas
and
leave
inc
sub
cmp
pop
mov
xchg
scas
push
inc
cmp
pop
and
repnz
sahf
mov
pop
mov
and
adc
push
dec
xchg
mov
loopne
push
dec
push
retf
and
xchg
imul
jp
fistp
lahf
pop
and
mov
pop
repnz
jns
sub
mov
mov
or
sbb
ins
cmp
fisttp
and
xor
popf
fwait
add
imul
outs
dec
fs
pop
cmc
call
bound
cmp
rol
and
(bad)
ins
jge
xor
mov
adc
and
inc
inc
int
sbb
mov
ret
ins
or
inc
adc
and
sub
dec
adc
cs
repnz
mov
cmp
adc
lahf
repnz
xchg
stc
sub
mov
arpl
imul
out
mov
mov
iret
mov
mov
sbb
loop
leave
int
push
repz
outs
scas
in
mov
push
xchg
jg
adc
xchg
fimul
sbb
ja
shl
fs
add
mov
dec
imul
xor
inc
shl
js
xchg
in
cmp
mov
inc
cld
xchg
cld
push
in
inc
sahf
ffreep
bound
jp
adc
add
sbb
add
popa
mov
adc
xchg
fmul
stos
xor
test
out
sbb
cmc
xor
adc
xchg
mov
xchg
test
in
fcom
pop
push
mov
jo
sub
adc
aaa
xor
shr
xor
pop
adc
dec
fs
ror
xchg
xchg
dec
push
repnz
cmp
mov
pop
cmps
mov
cli
icebp
mov
push
jb
cs
mov
stos
movs
or
lds
xchg
sub
push
or
push
and
xchg
jbe
movs
xchg
inc
clc
mov
imul
ret
out
or
dec
dec
cld
xor
cmovge
jp
std
not
les
push
xor
cmp
in
add
jp
mov
ffree
xor
unpcklps
in
and
cmp
and
daa
mov
pop
mov
outs
dec
xchg
shl
xchg
adc
mov
pop
fisubr
jne
xchg
fnstenv
sti
or
inc
call
cmp
xor
fisttp
sbb
jne
jge
cwde
ret
jmp
stc
jle
push
xchg
mov
and
xchg
mov
xchg
push
lock
mov
retf
mov
rcl
cmp
fisttp
mov
add
push
push
jge
xchg
xchg
fsubr
jbe
xchg
jnp
rcr
cli
ss
inc
ret
cdq
sub
mov
fistp
and
dec
fild
cmp
lea
mov
gs
mov
outs
xchg
mov
push
loop
(bad)
adc
and
and
inc
repz
and
jb
out
cmp
aaa
pop
mov
jae
xchg
imul
cmc
js
daa
loopne
les
mov
jp
push
movs
leave
adc
adc
ja
aad
jle
mov
call
int3
jne
and
sub
inc
sub
cmc
mov
add
jae
lods
outs
test
mov
pop
icebp
push
std
mov
push
dec
ins
ja
jne
aas
sub
loopne
retfw
nop
test
imul
mov
and
cmp
add
jle
mov
inc
sub
sbb
(bad)
aam
xor
dec
cmp
les
inc
and
cs
mov
jmp
fwait
std
xor
dec
jg
pop
clc
fucom
mov
aaa
data16
cmp
movs
es
xchg
and
mov
enter
pand
pop
push
fidiv
popf
push
test
cmp
adc
sbb
sbb
dec
pop
int3
in
cmc
pop
pop
push
adc
or
xchg
mov
in
cdq
lods
icebp
repz
and
adc
inc
and
dec
ret
stos
sar
dec
jnp
xchg
push
test
popf
inc
xchg
mov
jmp
icebp
hlt
aaa
adc
dec
xor
mov
add
cmps
stc
jne
fiadd
inc
adc
cmp
push
popf
xchg
sub
mov
jle
inc
adc
or
adc
data16
pop
pushw
add
repnz
mov
out
jo
addr16
push
jae
cli
fsubr
loop
push
or
es
sbb
xchg
icebp
jne
pop
and
lods
test
call
push
inc
lahf
mov
movs
loopne
(bad)
sbb
inc
xchg
jmp
in
dec
call
push
sub
in
lds
(bad)
cmp
cmp
adc
sub
jmp
or
ja
push
shl
xchg
fisub
or
mov
cli
xchg
push
aaa
enter
xor
shr
adc
xor
cs
or
mul
sub
sbb
int
shr
pop
(bad)
ret
jecxz
mov
inc
xchg
pop
leave
dec
shl
fnstenv
dec
leave
adc
push
(bad)
hlt
sbb
stos
call
jne
push
data16
adc
nop
fwait
xchg
cli
fs
sahf
and
jnp
dec
aad
jo
mov
out
cmps
xchg
rcr
sub
retf
push
push
repnz
mov
jbe
and
fisttp
pop
add
adc
push
mov
ja
and
aad
sbb
pushf
and
movs
cmps
pushf
or
jne
call
retf
push
shl
xor
ds
fiadd
or
gs
sbb
loop
or
jp
imul
repz
and
pop
(bad)
stos
jae
jp
gs
popf
rcr
ret
(bad)
fwait
sbb
sbb
pop
inc
cwde
xchg
dec
mov
inc
imul
aad
or
sbb
push
cmp
addr16
mov
pop
xchg
test
jmp
pop
stc
add
stos
push
int
movs
inc
les
xor
push
imul
ror
pop
fadd
xchg
(bad)
repz
and
repnz
test
jne
sbb
xor
stos
sub
push
nop
data16
mov
aaa
mov
jns
xchg
ret
in
gs
scas
(bad)
sub
ds
ins
ret
iret
std
jmp
sub
(bad)
pusha
push
movs
sbb
or
and
ret
cmp
sub
mov
jae
xor
retf
jb
repz
push
push
shl
pop
mov
pushf
jnp
and
(bad)
cld
pusha
xchg
push
dec
ja
cmp
pop
sbb
push
ror
sub
push
jns
xchg
ret
scas
test
outs
(bad)
aas
in
jb
mov
jle
xor
ficomp
outs
adc
jne
push
sub
jle
inc
test
xor
das
lods
sahf
(bad)
addr16
js
mov
fdiv
cmps
cmp
ficom
mov
ror
lock
or
fcom
xor
dec
and
adc
cmp
mov
sbb
jecxz
pop
test
sub
int3
mov
cmc
jp
dec
dec
inc
fcmovb
and
pop
jmp
xchg
retf
dec
out
std
idiv
mov
jne
enter
movs
call
xor
int3
loope
jae
inc
xor
cmc
jp
xchg
sbb
mov
popa
cld
jg
sub
mov
inc
aad
add
push
sub
dec
je
xchg
cmp
in
mov
push
retf
repz
push
cmps
cli
lds
cmp
jae
js
fcom
or
adc
loope
test
addr16
mov
and
mov
cmp
dec
push
lods
in
test
inc
cld
cld
lods
(bad)
xchg
not
les
shl
jp
jle
fld
sbb
daa
mov
jecxz
lahf
xchg
mov
dec
mov
out
sub
mov
cmp
adc
cmps
push
hlt
jb
js
repz
dec
mov
cmp
xchg
xor
into
popa
ds
cmp
cli
div
jbe
dec
lock
test
mov
pop
ret
aas
xchg
xchg
cmps
fcom
in
ret
das
jb
pop
sub
xchg
cli
stos
out
ret
je
mov
not
xchg
cli
inc
or
fs
pop
sub
dec
sbb
mov
push
mov
stos
rcr
(bad)
push
push
cmp
arpl
jge
ins
jp
or
adc
jae
add
test
mov
int
dec
bound
jne
mov
jl
fs
scas
in
lds
mov
mov
pop
and
dec
inc
add
pop
lods
sub
mov
push
push
mov
pop
xchg
lea
pop
pop
rol
inc
sub
fistp
out
xchg
and
fcmovu
xor
or
jmp
jns
fiadd
push
or
(bad)
stos
sbb
xchg
lahf
xchg
imul
js
adc
pop
outs
cs
or
pop
repnz
lods
xor
or
mov
in
in
div
fsub
mov
cmp
clc
xchg
pop
fcomp
adc
pop
sbb
or
pop
xor
sub
cmp
sub
pop
adc
mov
jecxz
sub
fnstenv
jp
stos
out
shl
clc
cmp
call
dec
sahf
in
sbb
fsub
call
inc
sbb
in
and
pop
outs
pop
js
fs
and
sub
std
sbb
outs
add
fs
imul
push
cmovp
push
sbb
test
push
fcmove
shl
lahf
mov
dec
out
jmp
fbld
adc
adc
loopne
sub
and
inc
push
pusha
(bad)
iret
fs
popa
mov
pop
or
dec
cmp
xchg
fdivr
add
jge
sar
fdiv
xchg
push
mov
ret
cmp
jmp
mov
xchg
push
dec
add
and
and
push
mov
inc
imul
mov
inc
dec
sbb
inc
adc
retf
sub
les
aam
jmp
jae
sbb
in
addr16
mov
test
nop
ins
cmp
lods
adc
in
mov
das
ficomp
jnp
xor
out
stos
rcl
mov
dec
xchg
jnp
adc
jmp
mov
sub
nop
dec
mov
xlat
adc
je
daa
mov
and
shl
out
push
arpl
shl
jle
push
cli
sbb
mov
cli
fs
daa
ss
xchg
(bad)
fistp
popa
ds
xchg
or
push
pop
loop
mov
xchg
fadd
int3
xchg
xchg
and
cwde
iret
pop
mov
lods
pushf
xchg
in
push
retf
scas
pop
cmp
nop
repnz
jle
adc
mov
cmp
je
call
outs
loopne
fmul
fcom
scas
icebp
int3
sub
xchg
jns
cwde
fs
in
jno
mov
jp
or
call
clc
(bad)
cli
fisub
xchg
mov
xchg
xlat
sbb
jae
cmp
call
lahf
test
pop
lahf
push
(bad)
and
je
popf
mov
in
mov
(bad)
clc
xlat
mov
cmp
pop
adc
inc
stc
cmp
ror
jp
or
pop
mov
and
shr
jge
xor
sub
loopne
ret
push
jge
div
xchg
lea
clc
add
(bad)
fsub
add
retf
xchg
add
clc
mov
(bad)
sub
(bad)
movzx
pop
mov
inc
movs
xchg
dec
inc
jp
scas
movs
or
jbe
aam
add
dec
inc
lock
fsub
push
rol
adc
test
and
jmp
pop
sub
jmp
repz
pop
lods
in
inc
ficomp
iret
jmp
lods
sar
xor
jp
imul
mov
aas
sub
imul
neg
xor
add
or
out
or
outs
xchg
out
cmp
or
xor
movs
mov
jmp
aam
mov
dec
into
(bad)
nop
adc
sbb
sub
jne
mov
cdq
push
(bad)
in
jl
scas
jb
add
pusha
mov
jle
fdivr
sub
pop
xor
clc
xchg
mov
push
cwde
out
push
xchg
adc
inc
push
fsub
jmp
pop
push
mov
pusha
sahf
cld
repnz
dec
in
imul
in
repnz
xchg
jmp
imul
dec
mov
cwde
lods
jbe
push
dec
lods
xor
cwde
mov
sub
lea
push
loopne
pop
dec
scas
ja
push
nop
call
jl
adc
sbb
(bad)
pusha
push
clc
ret
nop
push
jg
xchg
mov
push
retf
gs
mov
xchg
jmp
sub
cmp
fcmovne
repz
in
test
mov
retf
push
movs
push
jns
mov
aam
fidiv
call
enter
push
sahf
sub
jmp
mov
xchg
bound
loop
sbb
jp
pusha
pop
cmp
mov
mov
cmp
push
daa
repnz
popa
cmp
pop
es
aas
loop
xor
mov
mov
in
add
add
mov
ja
retf
jne
lea
cdq
test
and
js
dec
jge
adc
pop
inc
dec
inc
xor
jp
lahf
lods
fs
sar
mov
sbb
cli
hlt
sub
adc
fimul
or
adc
push
inc
jnp
imul
iret
add
iret
ss
and
or
xor
xor
ss
mov
inc
xor
or
pop
retf
stos
pop
pop
adc
mov
cmp
daa
push
leave
push
mov
cmps
adc
sub
std
jne
mov
push
adc
pop
dec
out
pop
and
jne
test
cmc
gs
test
leave
lock
mov
xchg
dec
pop
push
cmp
pop
je
adc
ret
fbld
sti
hlt
jg
dec
fdivp
sub
push
jmp
stos
frstor
cwde
cmp
pusha
lahf
mov
push
sub
mov
popf
cwde
shl
addr16
adc
jne
push
daa
mov
(bad)
mov
mov
cmp
add
jbe
sub
sbb
push
into
fldcw
aad
dec
xchg
xchg
pusha
mov
jge
add
mov
xor
das
jmp
cmp
jns
pop
sub
mov
lds
add
push
mov
repnz
mov
out
xchg
int
vmulpd
push
push
ja
pop
je
mul
jne
cld
cmc
es
mov
xor
ins
push
ja
sub
xor
test
pop
je
adc
cmps
andps
xor
rcr
ja
ret
sbb
xlat
push
cwde
adc
dec
push
outs
enter
mov
jbe
sar
push
add
fistp
add
pushf
jae
ffree
mov
pusha
inc
pop
lock
mov
xchg
data16
sbb
sub
retf
sbb
or
mov
jge
cwde
jae
mov
push
pop
popf
jb
retf
movs
push
adc
sti
sbb
jnp
fnstcw
pop
xchg
jb
fisubr
jl
xchg
jecxz
jp
jno
xchg
or
cs
and
cs
jle
sbb
(bad)
jg
lea
iret
test
mov
int3
adc
jp
fnstcw
xor
xchg
stos
in
xchg
daa
xchg
pop
std
pushw
ins
mov
xor
dec
xchg
push
lea
scas
mov
shl
and
mov
jmp
test
ins
out
push
pushf
retf
xor
loopne
jne
push
jmp
mov
dec
shr
adc
(bad)
xor
inc
and
fadd
xchg
and
jae
lock
test
xchg
loopne
stc
jp
sub
cmp
add
and
iret
js
(bad)
(bad)
and
mov
fs
jmp
out
jg
es
fbstp
cmp
fcomp
push
ins
cmp
pop
or
xchg
clc
push
shl
and
not
sub
mov
add
dec
jns
xchg
inc
jmp
xor
xor
xor
xlat
repnz
pop
pop
lods
je
jp
aaa
inc
sbb
ins
cld
cmp
inc
bound
aad
mov
sti
je
xchg
ficom
pop
repnz
xchg
daa
pinsrw
cld
adc
mov
js
xchg
inc
lods
jp
dec
sbb
jmp
jmp
mov
push
mov
cmps
push
shr
dec
sti
loopne
push
xor
out
(bad)
mov
sahf
sub
or
sbb
sub
inc
and
pop
adc
jae
ficomp
loop
sub
mov
in
xchg
adc
sub
xchg
leave
(bad)
pop
jae
test
jmp
jp
and
repnz
sbb
ss
and
xchg
mov
and
or
xchg
ret
cmp
les
lods
jge
sbb
cmps
test
inc
mov
sub
hlt
mov
shld
pop
leave
push
les
dec
jmp
aam
mov
mov
retf
rcr
jmp
dec
sbb
pop
cmp
test
xchg
leave
jp
xchg
cmp
js
stc
jbe
sbb
dec
hlt
sub
shl
xor
mov
push
jmp
push
aas
dec
mov
shl
addr16
cmp
jns
icebp
arpl
inc
sub
jle
(bad)
in
sbb
std
adc
xchg
cmc
and
pop
stc
push
sar
jne
xchg
rep
sbb
jecxz
inc
cdq
pusha
xchg
add
repz
leave
fcomp
cmp
(bad)
loopne
loopne
bound
mov
jns
fimul
lock
cmp
jp
scas
push
xchg
cmp
les
js
xchg
jg
add
lock
jo
mov
gs
pop
xchg
mov
jmp
adc
push
add
jge
pop
retf
into
jae
(bad)
jae
mov
sti
cmp
imul
pop
cwde
ss
ror
dec
xchg
jo
sbb
dec
test
mov
push
push
lods
mov
mov
push
movs
dec
out
sti
popa
imul
lds
jle
imul
inc
stos
shl
cld
adc
or
ret
cmp
in
repz
pop
mov
sub
sub
nop
dec
loopne
fistp
test
adc
and
jno
into
pop
mov
lahf
clc
xchg
cs
sub
mov
and
fist
push
mov
repz
and
(bad)
out
push
in
sbb
sub
xchg
mov
(bad)
xchg
dec
cmps
popf
test
mov
adc
dec
cld
aad
loop
pop
xlat
fcmovnu
add
shl
and
pop
cmp
movs
lds
out
push
mov
xchg
rol
js
xchg
push
mov
cli
fwait
mov
cmc
ret
pop
cmp
push
add
xor
mov
mov
cmp
pop
inc
xchg
jl
int
pop
out
in
cmc
popf
pop
repz
shr
cmp
in
jns
adc
(bad)
lea
cmp
jb
stos
dec
mov
pop
mov
xor
and
popa
mov
sbb
ret
out
sub
es
dec
(bad)
lock
in
mov
mov
pop
sub
push
mov
push
test
mov
pop
cmc
fild
retf
sbb
add
cld
jecxz
cmc
push
call
jo
xor
in
nop
mov
call
push
mov
mov
lea
out
iret
xchg
fsub
and
sub
fld
xchg
repz
movs
fild
pop
jbe
adc
mov
dec
rcr
rcr
jne
xchg
icebp
and
test
jne
je
push
adc
fs
imul
and
jns
adc
mov
pop
popa
imul
pusha
xchg
mov
sbb
jo
cli
arpl
jmp
loopne
in
xchg
jecxz
in
out
leave
movs
push
js
ret
pop
int
dec
and
jne
push
daa
xchg
jne
xor
imul
add
xor
xchg
push
cmp
call
and
sbb
xor
pop
mov
pop
cmps
leave
jmp
jb
out
nop
or
and
test
inc
adc
jmp
adc
pop
sub
mov
and
in
ret
push
sbb
push
inc
xor
loop
out
jne
(bad)
gs
imul
jne
and
js
push
dec
mov
sub
jns
dec
scas
test
cmc
push
loope
pop
fisttp
pushf
and
push
loop
xchg
out
loopne
fdiv
(bad)
mov
sar
or
test
ret
push
or
pop
cmp
cli
repz
or
xchg
lahf
pop
repnz
xchg
mov
fistp
lds
lods
push
push
mov
mov
and
cmp
or
daa
sub
(bad)
and
std
ret
cmp
sub
xchg
ss
cmp
adc
mov
add
sub
cmps
cmps
xor
data16
mov
xchg
add
and
lea
neg
inc
push
sub
cwde
pop
cmp
cmps
mov
mov
xchg
mov
call
xchg
jnp
frstor
jp
cwde
mov
push
or
jg
retf
clc
jne
sahf
xchg
xor
cmp
xchg
mov
adc
into
mov
cmp
mov
mov
sbb
in
mov
cmp
call
inc
ret
mov
or
ret
hlt
pop
loopne
mov
adc
scas
aas
sbb
add
inc
mov
inc
xchg
inc
push
dec
div
jmp
xor
mov
leave
push
ror
mov
push
mov
xchg
jne
sar
mov
jmp
cld
sbb
cmp
and
sub
popa
sub
pop
pop
ret
(bad)
xchg
mov
mov
add
push
push
pop
pop
cmc
jmp
and
imul
sbb
cld
mov
sbb
sub
int
xchg
stc
scas
xor
sub
cli
jne
pop
es
mov
xor
aaa
jecxz
cmps
add
shr
adc
movs
mov
inc
js
adc
leave
add
sbb
or
leave
data16
dec
inc
sbb
mov
in
cld
cs
mov
das
mov
fcom
jns
mov
pop
xor
mov
fsubr
mov
mov
cs
pop
sub
add
pop
loope
dec
shl
rcr
stos
jns
push
fdivr
lds
sub
sahf
adc
ins
mov
cli
test
jp
in
xchg
pusha
mov
jl
sti
push
push
ret
call
clc
xor
pop
fstp
std
xacquire
push
(bad)
fsubp
jle
cwde
sub
and
retf
inc
or
mov
pop
pop
mov
rcr
jle
sbb
dec
xor
adc
inc
lds
(bad)
xor
jp
sub
cld
sub
in
sub
inc
aas
dec
jnp
mov
sub
mov
add
imul
iret
test
mov
inc
stos
push
jp
xchg
jmp
leave
aad
mov
mov
addr16
into
pop
movs
jo
and
mov
push
cld
inc
sbb
icebp
into
jl
sub
add
cmps
ins
cmp
(bad)
cmc
in
fs
ja
repz
mov
test
fist
mov
mov
xchg
pop
pop
mov
jmp
xchg
push
fwait
test
adc
cmp
das
mov
jmp
out
in
jns
rcr
popa
cmp
add
shr
sti
or
aas
mov
push
rcl
rcr
dec
pop
pushf
stc
pusha
xchg
es
mov
pop
int3
out
xchg
or
outs
mov
pop
add
xchg
shl
sbb
pop
mov
sub
inc
fld
pop
jp
xchg
int
add
sahf
sub
inc
mov
daa
add
jne
adc
mov
in
mov
fisttp
movntq
retf
sub
inc
xchg
and
loope
or
and
dec
mov
lea
adc
mov
(bad)
mov
fld
cmp
imul
(bad)
dec
in
std
mov
mov
jo
aam
mov
push
hlt
in
push
and
imul
xor
inc
dec
bound
push
out
test
sub
rcl
dec
je
aad
les
push
cmp
jns
adc
or
ror
out
or
dec
rcl
adc
pop
adc
jecxz
(bad)
push
imul
xchg
cmovl
pop
ficom
loop
(bad)
iret
mov
jp
sbb
cmc
lods
dec
(bad)
jge
adc
in
in
mov
js
cmps
xchg
out
cli
sub
jno
cmp
stos
aaa
sub
rol
test
sbb
gs
push
cld
bound
mov
fwait
dec
fbstp
inc
(bad)
das
mov
cmp
jecxz
mov
pusha
xchg
xor
cmp
xchg
push
(bad)
movs
sbb
pop
jno
cmp
(bad)
sub
jle
sub
adc
in
xchg
iret
push
sbb
jmp
ss
test
movs
xor
fwait
cmps
sub
out
jmp
call
test
jge
mov
xchg
sub
leave
xlat
inc
mov
jp
cld
popf
test
jle
test
and
loope
out
cmc
ret
sbb
(bad)
xor
dec
mov
or
fld
fimul
das
fidiv
mov
xchg
sub
adc
in
cld
cmp
cmp
mov
adc
pop
xchg
or
cwde
test
jne
lods
iret
mov
add
shl
je
(bad)
push
das
mov
cmc
mov
bound
pushf
jp
fld
push
mov
dec
in
xchg
pop
jne
int3
cmp
enter
sbb
xchg
cmp
shrd
sbb
jae
aam
sahf
jg
lods
sub
mov
adc
jae
ins
fidivr
cmp
jne
sub
daa
or
jbe
xchg
dec
ins
ja
cs
les
jo
pushf
enter
stos
cli
mov
cmp
push
(bad)
jg
xor
adc
cli
dec
push
stos
cmp
fidiv
or
sbb
cli
jne
ins
jno
inc
jnp
(bad)
addr16
test
ins
jns
mov
dec
mov
mov
pop
cld
mov
or
popf
push
retf
mov
cmps
outs
add
xchg
sbb
push
xchg
mov
xchg
fdivrp
add
sub
mov
xchg
test
shr
mov
icebp
dec
nop
fnstsw
hlt
adc
xchg
sub
test
leave
ss
fcom
ficomp
(bad)
xor
sahf
add
push
js
fdivr
fwait
jae
pop
xchg
sbb
lea
inc
int
dec
leavew
sub
cdq
xchg
push
dec
cmp
push
test
mov
leave
leave
inc
or
idiv
dec
mov
imul
test
clc
mov
adc
xchg
cmp
pop
adc
jg
in
je
mov
xchg
push
dec
xlat
test
outs
out
cmp
popf
or
repz
mov
xchg
or
cdq
std
mov
aas
out
cwde
push
sub
dec
out
cmp
xor
adc
jp
outs
sti
pop
jg
into
sbb
movs
xor
jmp
lods
lods
fistp
xor
sub
cdq
cmc
mov
lods
rcl
adc
(bad)
inc
pop
sbb
dec
inc
cmp
or
xchg
dec
out
loop
sub
cli
in
and
(bad)
cmp
stos
pop
fistp
xor
adc
push
xchg
js
lods
in
test
lock
pop
jo
out
pop
shr
scas
ror
fmul
js
loope
xor
pusha
hlt
xor
adc
xchg
in
push
push
sbb
sahf
cmps
rcl
jg
shl
cmp
add
push
and
push
adc
inc
js
xchg
mov
scas
js
push
stos
push
jp
and
scas
scas
push
add
mov
mov
jmp
add
mov
js
shl
jno
xchg
or
xchg
inc
movs
sbb
imul
pop
xchg
icebp
mov
dec
mov
push
shl
and
cmp
push
mov
pop
mov
sub
add
clc
aaa
mov
or
xchg
xor
jns
cld
cmps
push
stos
pop
pop
sbb
adc
push
lods
adc
mov
sub
jmp
int3
data16
inc
cli
push
pop
sbb
lea
cmp
add
cdq
les
ja
lahf
ins
add
fiadd
jns
xchg
mov
lods
inc
xchg
cmp
and
test
jecxz
lods
add
cld
add
xor
or
mov
mov
and
ds
and
sbb
push
jge
out
rcr
cwde
call
mov
pushf
push
xchg
pushf
pop
mov
xchg
jmp
or
cmp
cmp
dec
sub
cli
pop
pusha
mov
(bad)
test
push
mov
or
jne
cmps
xchg
pop
jmp
test
sbb
(bad)
repnz
cmp
xchg
and
and
sub
dec
(bad)
add
hlt
nop
and
and
add
arpl
call
(bad)
jp
xor
cmp
out
sar
scas
xchg
and
movs
jge
les
sar
clc
mov
pop
jle
clc
pop
fs
adc
xor
xor
add
and
adc
lahf
push
mov
push
mov
rcl
icebp
jl
cdq
jo
mov
test
add
inc
je
jecxz
sbb
add
(bad)
test
mov
aaa
lock
imul
and
jne
pop
movs
cmc
jmp
clc
stos
ret
out
aaa
push
js
push
cmp
xor
retf
test
test
sar
sbb
add
mov
scas
adc
mov
jne
sbb
cdq
xchg
jns
mov
and
sbb
pop
out
std
cld
out
mov
nop
sub
js
test
sbb
pop
shl
loopne
mov
stc
push
call
scas
fwait
push
leave
std
add
rol
xor
loop
mov
call
xchg
or
jne
add
popf
jae
mov
cmp
cmp
pop
rcr
sbb
aam
sbb
mov
xor
bound
mov
cmc
pop
aas
push
mov
(bad)
dec
jle
outs
push
fidivr
icebp
inc
mov
dec
push
jmp
aad
jmp
xchg
cmp
fs
iret
cmps
fidivr
jo
push
adc
(bad)
mov
and
hlt
pop
les
or
popa
and
mov
xchg
leave
out
jo
es
jmp
addr16
adc
loope
call
dec
xor
mov
call
ret
dec
sbb
inc
jp
repz
sub
mov
js
cs
adc
mov
xchg
jne
in
jle
pop
dec
cwde
sub
sbb
adc
std
add
xor
bound
xchg
or
sar
mov
add
in
mov
sbb
in
push
jne
pop
sub
pop
imul
xchg
mov
or
xchg
push
scas
(bad)
xchg
xor
xor
xor
leave
mov
imul
aad
mov
out
cld
sub
mov
fwait
pop
push
xchg
ret
jecxz
jns
dec
in
sbb
or
cld
push
(bad)
fs
mov
bound
jge
call
xchg
xor
and
or
ret
(bad)
and
xchg
push
mov
mov
popa
mov
jmp
sbb
xchg
sbb
mov
and
imul
pop
ins
mov
cmps
or
mov
mov
and
inc
hlt
adc
leave
call
aam
sbb
fcomi
mov
pop
cli
ja
inc
pop
mov
sbb
inc
and
xchg
xor
neg
les
jmp
int
mov
ret
gs
test
sub
jne
xor
mov
and
mov
inc
jp
inc
push
jecxz
leave
push
xchg
ins
test
mov
call
int
adc
das
push
push
jecxz
in
daa
cmps
xchg
sub
xchg
es
mov
add
and
jb
push
lea
out
outs
jne
ret
pop
aas
rol
hlt
stos
popa
xor
in
mov
pop
aas
jp
or
jge
and
xchg
mov
(bad)
adc
pop
shr
arpl
sbb
ins
popa
pop
jne
xchg
addr16
sbb
sbb
std
repz
pop
mov
sub
dec
xchg
test
loope
std
outs
push
aas
std
ins
sahf
inc
jns
jmp
enter
aam
pop
cld
in
cli
rol
jge
cmp
test
cs
call
fwait
ret
mov
ja
push
dec
add
pop
mov
test
mov
loope
out
xor
inc
popf
mov
mov
sar
out
repnz
add
cwde
pushf
pop
outs
lock
shl
popf
pop
hlt
ss
xchg
daa
inc
clc
int
fldcw
inc
loope
push
pop
jo
out
ror
and
mov
cmp
jae
stos
cmps
cmc
ror
cmp
cmp
push
jo
bound
pop
dec
shr
pop
pop
sbb
lds
aad
mov
in
xchg
push
jnp
jp
movs
sub
es
and
int3
xchg
xchg
jb
cmp
sub
jo
jbe
jle
and
movs
mov
dec
xor
es
adc
xchg
icebp
dec
test
arpl
cld
aad
xlat
inc
ret
dec
push
cli
xor
inc
les
fistp
xor
es
xchg
outs
and
shl
or
adc
mov
sbb
scas
xor
push
mov
enter
rol
cmps
sbb
pop
sbb
push
daa
add
mov
sub
xor
cwde
xor
pop
test
mov
and
jge
cmps
jno
or
xor
dec
mov
push
push
mov
push
mov
(bad)
jns
xchg
pop
lods
ret
dec
leave
enter
xor
xchg
js
stc
pop
mov
ins
mov
mov
cwde
sti
mov
in
out
in
xor
pop
fs
sub
icebp
shl
mov
(bad)
pusha
fs
call
movs
pusha
sub
cmp
(bad)
jne
sub
fidivr
adc
push
mov
loopne
add
cld
test
push
and
mov
jp
mov
jne
sub
add
pushf
jbe
pusha
shr
(bad)
mov
xchg
sub
int
jae
ins
xchg
jb
sub
pop
cmp
fist
jbe
bound
add
hlt
outs
adc
scas
(bad)
fcom
into
inc
hlt
dec
cmp
add
push
xchg
test
cli
iret
(bad)
dec
cdq
in
mov
jae
cmp
sub
xchg
adc
das
shl
sbb
std
data16
addr16
sahf
xor
das
pop
adc
jg
test
push
mov
jo
mov
jmp
stos
fsub
inc
jp
popa
xchg
outs
fistp
and
stc
ret
rcr
cmp
clc
inc
pop
jae
ret
add
jno
fcmovnu
and
je
xchg
lahf
in
pop
push
rcr
(bad)
mov
lods
cmp
out
jp
push
xchg
or
fs
div
dec
(bad)
and
sbb
ret
ins
into
pop
cwde
fs
ins
cmp
(bad)
out
addr16
ds
out
fwait
mov
xlat
push
inc
popa
sbb
cld
pushf
and
popf
adc
mov
out
add
stc
loopne
jns
int
adc
mov
adc
fild
mov
add
and
addr16
mov
sub
rcr
jp
cmp
and
arpl
(bad)
cmp
aas
sbb
jb
fwait
hlt
shr
sbb
xchg
dec
push
imul
(bad)
pop
mov
pop
test
dec
or
or
js
inc
retf
js
ret
pop
out
out
retf
jno
mov
js
jle
adc
jmp
sbb
int3
je
cdq
xor
sar
sub
cmp
pop
mov
repz
scas
sub
mov
add
mov
stc
mov
popa
xchg
mov
inc
test
adc
imul
data16
jp
or
in
sar
cdq
mov
iret
mov
push
outs
mov
icebp
inc
dec
mov
hlt
and
push
retf
add
push
sub
jne
or
pop
push
add
cmp
sti
jne
jl
leave
or
jae
imul
mov
icebp
iret
shl
rcl
icebp
push
inc
fild
es
in
in
sub
jns
jb
jg
cld
shl
imul
into
inc
fsubp
xchg
sbb
addr16
rol
sti
or
lds
dec
ja
mov
push
cs
jge
dec
stos
fwait
inc
mov
cwde
jmp
fadd
sub
jl
adc
or
movs
cmps
pop
fiadd
mov
push
call
sbb
push
jl
xchg
xchg
push
or
and
in
das
fdivr
push
add
pop
sbb
test
pusha
pop
pusha
fs
cmp
inc
sub
pop
retf
retf
and
mov
mov
in
cmp
stc
fwait
cmps
ja
and
add
sar
jl
adc
idiv
inc
and
xor
sbb
pushf
(bad)
adc
jnp
pop
push
imul
jl
jae
sbb
pusha
and
cmps
jl
pop
retf
ret
int
ja
idiv
cmp
lahf
jns
mov
jle
jns
imul
cmp
add
and
push
and
jg
out
pusha
mov
pop
sar
addps
fcomp
fldenv
xchg
adc
xlat
dec
jbe
aam
mov
mov
out
jp
idiv
xchg
loop
xor
frstor
pop
push
movs
sbb
repz
xchg
mov
push
leave
or
xor
xor
xchg
imul
mov
xchg
cs
xor
jb
push
mov
arpl
add
or
sub
cmp
data16
push
or
mov
sub
jmp
fld
imul
and
jb
ja
xchg
adc
fnstsw
cmp
stos
fcom
lock
xchg
scas
ins
nop
fwait
sbb
fcom
pop
inc
push
fistp
xchg
add
lods
fidivr
out
out
xchg
icebp
or
sbb
sti
gs
dec
sub
jmp
xchg
xchg
aas
jne
lds
cdq
cld
dec
ja
int
push
and
jae
cmps
mov
push
mov
push
jge
adc
fwait
jge
aas
dec
in
dec
in
inc
xchg
addr16
jnp
call
mov
ins
cmp
jle
jae
xchg
push
cmps
add
xor
pop
pop
scas
scas
and
loopne
or
xchg
and
and
rol
mov
cs
fimul
gs
ror
rcr
imul
lods
das
retf
popa
in
xchg
cmps
les
(bad)
push
div
sbb
inc
outs
gs
aaa
ins
jo
(bad)
sar
cmp
repnz
div
mov
sbb
aaa
jne
or
push
xchg
sub
dec
popa
mov
sbb
dec
icebp
loope
pushf
mov
fs
xchg
xchg
sub
jle
mov
fcomp
icebp
cmps
jmp
xchg
jle
mov
fldenv
ds
xchg
ja
out
cs
scas
xor
mov
add
sti
or
test
cmp
jnp
pop
test
push
pusha
iret
dec
js
daa
pop
fucomi
(bad)
jns
sbb
imul
mov
xchg
ins
and
das
sub
sub
jo
daa
pop
push
loop
add
retf
or
stos
jns
shl
mov
imul
pop
add
sbb
pop
xchg
out
pop
in
adc
jne
pop
xchg
push
pop
in
lahf
add
loop
push
je
push
mov
pop
sub
cmp
lods
pop
in
div
jmp
loopne
(bad)
sub
nop
jno
into
les
mov
jg
xchg
jle
rcr
pop
mov
mov
(bad)
mov
lods
push
or
cmp
out
push
sar
enter
cli
sub
std
xor
test
in
push
sub
ret
push
imul
jle
mov
(bad)
cld
jmp
dec
hlt
(bad)
fild
pop
ds
inc
ret
sbb
sub
xchg
jge
add
xchg
rcr
push
fisub
test
cbw
imul
xchg
popf
imul
xor
xor
in
cs
push
push
lahf
push
das
push
adc
int3
leave
cmc
dec
sbb
cmp
push
rol
lods
ins
pop
lahf
fs
cs
mov
loop
test
and
cmps
outs
dec
push
or
data16
jle
jecxz
cmp
pop
and
nop
adc
xor
jp
adc
aam
in
xor
xor
xchg
mov
lock
mov
idiv
mov
dec
add
jb
adc
je
ss
mov
mov
adc
int
rcl
adc
jle
cmps
xor
xlat
jg
cmovg
(bad)
fdiv
pop
dec
mov
xchg
(bad)
cld
cs
lock
jmp
les
mov
jp
loop
sub
jle
mov
sub
call
mov
addr16
retf
push
fbld
xor
jne
les
xchg
enter
and
xor
ss
jg
mov
lea
or
adc
mov
iret
daa
jae
call
data16
pop
out
cmp
cmc
xchg
(bad)
fcmovb
add
out
jg
fimul
or
push
dec
mov
aas
sbb
jns
les
sbb
pop
sar
mov
mov
sub
mov
sub
jns
sub
adc
bound
add
ss
dec
xchg
in
dec
sbb
xchg
cs
jmp
push
xchg
pop
rcr
ins
clc
cmps
pop
gs
test
sub
dec
jno
jnp
and
mov
cmp
xchg
cmp
xchg
fcmovnb
inc
push
push
std
cmps
adc
popf
mov
mov
out
mov
cmp
icebp
test
and
outs
push
mov
xchg
fst
js
outs
in
ret
aas
pushf
cmp
in
cdq
dec
or
and
add
mov
xor
hlt
xor
and
xor
pop
jge
fs
je
fdiv
retf
lahf
sub
fs
mov
cmp
shl
and
push
bound
je
jge
mov
(bad)
sbb
stos
adc
js
push
cwde
cs
ja
(bad)
dec
ins
pop
scas
jne
dec
lahf
loop
mov
aas
or
lds
jbe
into
jl
adc
jp
jbe
test
sub
scas
add
test
cmc
mov
pop
xchg
adc
popa
pop
repnz
std
out
loop
imul
ins
test
in
hlt
and
lods
or
sahf
cmp
adc
sbb
pop
push
pusha
xchg
pop
push
ret
enter
mov
(bad)
pop
test
ins
add
rcr
pop
sub
dec
iret
clc
in
mov
mov
jne
mov
xchg
mov
xor
push
jecxz
sub
sub
(bad)
cmp
aad
adc
cmp
mov
fcomi
jns
lods
xor
jbe
mov
inc
adc
mov
mov
loope
jp
jmp
cwde
out
jo
jle
jbe
and
call
out
retf
rcl
imul
pop
enter
inc
sbb
(bad)
jne
or
outs
shl
std
data16
fstp
out
jmp
mov
jae
out
push
cld
add
mov
jmp
cwde
xchg
sbb
adc
sub
and
mov
cmp
ins
xchg
pusha
and
add
imul
mov
push
sti
jns
pop
mov
jno
mov
jno
shl
add
mov
ds
enter
ds
mov
mov
lods
adc
cli
xchg
mov
jmp
cs
dec
in
or
xchg
or
xor
add
push
inc
ret
add
repz
push
mov
push
fisub
sub
mov
test
pop
addr16
mov
mov
xor
fild
cdq
in
mov
add
stos
and
fiadd
js
mov
les
pop
ret
(bad)
push
test
fst
xchg
and
or
movs
pop
je
jmp
add
jne
test
mov
sub
jmp
pop
jg
cmp
cmps
pop
pop
adc
push
push
adc
test
add
mov
mov
das
push
jmp
pop
loope
cmps
jmp
xor
mov
jno
mov
dec
inc
outs
mov
mov
sub
enter
mov
and
out
call
cld
call
push
pop
cmp
xor
scas
mov
mov
add
(bad)
mul
aam
sar
(bad)
push
cmp
sub
cmp
imul
imul
sbb
dec
xchg
add
cdq
sub
gs
mov
add
in
fdiv
mov
jg
popf
jo
jns
pop
mov
leave
je
cmp
cmp
sub
shl
fadd
fisub
popf
mov
(bad)
call
sbb
dec
dec
pop
dec
loop
cmps
xor
xchg
jns
outs
call
jp
mov
pop
add
xchg
mov
dec
leave
push
xchg
sbb
movs
rol
jmp
xchg
jmp
mov
dec
mov
mov
int
in
adc
addr16
aaa
popf
mov
dec
lods
mov
jns
outs
lods
sub
popa
lea
push
mov
ss
int
sti
push
adc
adc
jle
mov
jne
adc
addr16
outs
mov
mov
pop
lods
fxtract
sbb
fwait
pop
jae
in
(bad)
cld
pop
loop
add
sbb
mov
stc
call
loope
xchg
xor
dec
or
jnp
mov
aam
cmc
add
jnp
iret
adc
data16
jnp
fnstsw
pop
ja
mov
cvtps2pi
inc
addr16
stos
sub
adc
cli
jnp
sar
sub
(bad)
jge
fist
jo
hlt
mov
pop
sar
xchg
mov
(bad)
aaa
(bad)
xchg
xchg
lds
cmp
rcl
jbe
push
int3
adc
ja
mov
sbb
test
pop
js
ja
cmc
mov
adc
adc
and
fs
cmp
ret
test
aam
stc
es
or
aaa
jbe
mov
xchg
je
cmp
or
lods
shl
jp
jns
mov
jne
xchg
ret
in
das
cmp
loop
sbb
mov
mov
iret
mov
and
and
mov
pop
push
nop
int
jmp
lds
xor
push
mov
sbb
inc
mov
lea
not
fstp
idiv
in
mov
cmc
lds
jb
repz
jno
test
xchg
dec
pop
test
and
retf
mov
or
mov
cmc
and
push
repnz
int3
loopne
cmp
inc
xor
addr16
dec
pop
fwait
call
mov
and
mov
jno
rcr
adc
and
popf
or
and
out
das
push
mov
dec
xor
xor
nop
mov
and
mov
pop
mov
outs
in
fnsave
test
push
push
sub
xchg
or
cs
dec
test
inc
inc
adc
mov
ficom
das
push
pop
loopne
pop
repz
test
or
dec
out
rol
pop
test
inc
fcomi
out
mov
sbb
jl
adc
lea
test
inc
jmp
push
nop
add
jecxz
test
mov
xor
cmp
dec
adc
aad
xor
in
je
out
mov
test
xor
imul
lds
je
ficomp
out
jle
jmp
xchg
js
xor
cld
xor
push
repnz
retf
mov
dec
xchg
loope
inc
jns
xchg
cli
movs
js
adc
inc
mov
jle
mov
jmp
sbb
out
fsub
dec
cmps
and
and
loop
daa
or
in
cs
mov
imul
jg
int3
mov
jbe
imul
jnp
pop
ret
bound
xchg
xchg
mov
add
rol
inc
hlt
pop
xchg
adc
inc
sbb
mov
sbb
cmps
data16
hlt
jo
imul
imul
out
sub
imul
dec
pop
push
add
(bad)
into
and
ret
mov
mov
test
data16
ret
dec
or
stos
inc
retf
jb
addr16
mov
sbb
std
je
mov
and
sub
cmp
(bad)
mov
xchg
adc
pop
ins
jnp
sub
jb
cmp
movs
cmp
in
in
retf
popf
daa
movs
push
jns
sbb
push
xor
dec
or
pop
cmc
push
js
and
je
dec
clc
or
pop
clc
out
shl
jp
arpl
ins
repz
leave
push
push
mov
and
lods
shl
push
retf
cwde
je
inc
addr16
clc
repz
mov
pop
or
js
into
test
xchg
aam
mov
xchg
mov
sub
test
cmc
pop
test
sti
adc
cwde
popa
mov
sbb
xchg
jp
xchg
mov
cmp
xchg
and
add
mov
call
psadbw
loop
ds
inc
push
xchg
pop
mov
push
xchg
outs
sar
data16
mov
jmp
jns
xchg
xlat
pop
pop
mov
or
and
xor
loopne
inc
int
imul
pop
aad
es
cmp
stc
mov
sub
jl
sahf
mov
mov
in
xor
cli
movs
xchg
aam
jnp
sub
xchg
clc
nop
jl
push
mov
and
aad
cmp
test
jo
cmp
scas
mov
jp
mov
and
ss
je
sub
mov
loopne
test
in
and
into
dec
fwait
cld
out
jmp
mov
jg
inc
aaa
test
fstp
fist
mov
leave
int3
or
hlt
sub
cmp
imul
xchg
and
dec
pop
jmp
jo
sub
mov
test
sbb
out
xchg
xor
aaa
sti
(bad)
mov
jge
fdiv
sbb
jg
add
test
jge
dec
xor
push
ret
retf
or
pop
jne
xchg
mov
into
push
jne
aad
mov
addr16
push
(bad)
jmp
lods
lea
xor
mov
jbe
in
out
scas
pop
inc
or
test
xor
fucomi
idiv
push
mov
jae
xor
int
push
xchg
mov
lds
cmp
jns
xchg
(bad)
pop
cli
rcl
dec
leave
push
ins
sub
xchg
add
loope
test
das
mov
out
cwde
imul
jge
and
adc
sub
jmp
xchg
ret
jmp
mov
data16
(bad)
pop
inc
mov
jp
std
add
mov
sahf
xchg
pop
cmc
jle
test
mov
and
aaa
out
and
push
push
mov
pop
repz
mul
inc
cmp
fs
sar
dec
stos
fidivr
out
sbb
aas
in
aam
cmps
ret
test
test
adc
stc
mov
push
inc
clc
mov
mov
ret
lods
std
dec
in
mov
data16
clc
add
push
ins
xchg
mov
push
pop
(bad)
(bad)
sbb
ds
js
cmps
jns
js
fiadd
nop
scas
pop
mov
mov
add
mov
pop
cli
sbb
xchg
mov
cmp
or
cmc
pop
pop
xchg
jbe
xchg
test
pop
(bad)
mov
inc
ss
test
fs
(bad)
dec
xor
in
fnstsw
int
sti
cmp
shl
das
mov
int
xchg
das
cwde
xchg
pop
js
imul
xchg
loopne
jae
xchg
(bad)
pop
jle
xor
fneni(8087
push
pop
cmp
or
cmps
jnp
loope
int3
dec
pop
add
inc
mov
cmp
int3
cld
sub
mov
and
adc
lods
add
jns
sbb
call
xchg
mov
fimul
inc
fcos
push
inc
jle
push
sar
adc
ret
sub
xor
dec
add
jae
std
sub
pop
push
test
xor
jle
cmp
pop
sti
sub
fadd
fimul
or
arpl
mov
adc
in
repnz
mov
cmp
pop
std
dec
mov
jp
js
add
or
jl
sbb
loop
(bad)
pop
push
cli
jo
icebp
adc
idiv
cmp
in
(bad)
mov
sbb
sar
sti
ret
adc
cmps
mov
js
outs
mov
and
jp
mov
daa
dec
fwait
pop
add
in
sbb
xchg
push
pop
sub
mov
in
push
pop
inc
jno
hlt
mov
pop
je
sub
jmp
fcmovbe
and
sub
push
bound
lods
pop
clc
ins
call
pop
adc
out
sbb
mov
mov
xor
push
hlt
or
xchg
into
mov
aas
cmps
rol
sub
fsubr
adc
das
push
cmp
mov
xchg
ds
pop
jg
clc
sub
into
xor
stos
push
mov
arpl
push
mov
mov
cmp
les
dec
int
icebp
ja
jb
adc
outs
mov
scas
sub
xchg
repnz
xchg
adc
xchg
mov
mov
les
xchg
clc
pop
mov
adc
loop
int3
xchg
inc
hlt
jle
pop
adc
pop
stc
sub
pop
inc
xor
xlat
adc
sbb
push
es
lock
jo
xchg
adc
push
shl
mov
lar
cmp
call
cmp
mov
mov
pop
mov
cli
lea
mov
movs
pusha
jns
lock
cwde
lods
xor
or
sub
or
sub
adc
addr16
xor
imul
adc
fbld
or
inc
loopne
and
jns
mov
mov
sub
push
cmc
mov
mov
push
cmp
shl
dec
addr16
clc
cli
xchg
jne
cmp
push
dec
inc
cmps
or
stos
loopne
jmp
and
or
pop
scas
mov
mov
js
mov
fld
test
push
xchg
dec
add
sbb
inc
dec
cwde
push
cmp
inc
adc
retf
lods
or
pop
cdq
popf
xchg
or
and
rcl
cld
mov
mov
and
jg
je
sub
pop
jmp
cmp
lods
add
mov
or
(bad)
and
jl
ss
enter
leave
adc
adc
adc
xor
in
leave
ficomp
into
popf
nop
push
aad
not
mov
fstp
pop
and
sub
stos
clc
add
or
pop
add
(bad)
mov
jmp
leave
dec
adc
daa
loopne
mov
jge
mov
retf
ja
ins
jnp
das
int3
les
cmp
xchg
mov
int3
hlt
xchg
mov
add
mov
in
and
pop
jb
xchg
popa
xchg
cmp
and
cli
and
mov
test
adc
es
push
push
jg
fcmovnu
inc
mov
dec
push
pop
push
adc
cmp
xchg
pop
xchg
out
push
xchg
cmp
fistp
mov
and
xor
push
jp
lds
and
ret
(bad)
adc
popf
shl
fstsw
mov
push
xor
cwde
leave
(bad)
gs
dec
jle
fild
mov
cmps
hlt
push
inc
sbb
clc
mov
pop
dec
aam
jo
push
pop
in
push
mov
sahf
push
lock
loopne
jmp
xchg
(bad)
and
ret
retf
pop
outs
cmp
fcomip
and
sub
add
push
push
sahf
sub
retf
add
ficom
mov
movs
nop
push
pop
popf
pop
adc
mov
pop
or
call
jne
mov
or
(bad)
out
in
cld
pop
outs
adc
push
mov
js
xchg
jnp
jg
push
xchg
aaa
mov
mov
push
das
xor
mov
mov
pop
inc
push
iret
sar
popa
pop
daa
push
jmp
mov
jle
cdq
sbb
ret
iret
rol
dec
jp
outs
std
or
ins
jg
retf
push
sar
retf
push
cmp
dec
inc
push
xchg
mov
xlat
add
fwait
cmp
inc
cmps
mov
jle
xlat
and
mov
xchg
call
ret
jmp
dec
pop
bound
and
dec
jae
loope
cs
mov
dec
xchg
ret
out
pop
sub
jno
mov
push
rcl
mov
stos
xor
push
jp
test
cmp
sti
xchg
pop
sub
dec
and
out
imul
pop
push
xrelease
cmp
cli
adc
daa
sub
(bad)
and
(bad)
push
jg
adc
dec
fisubr
cwde
jge
fld
dec
daa
retf
mov
repnz
sbb
fistp
jp
retf
sbb
mov
xchg
cmp
addr16
inc
loopne
adc
loope
(bad)
xchg
mov
add
jo
dec
jo
xchg
or
mov
xchg
popa
cli
sbb
in
rdmsr
jg
retf
pop
and
xchg
adc
xor
popf
xlat
movs
jmp
mov
(bad)
fild
outs
cmps
xchg
mov
(bad)
leave
mul
xchg
ffree
lods
das
add
out
jbe
mov
fdivr
fs
and
xchg
pop
sar
les
add
ins
es
add
cmc
lock
or
xchg
cwde
div
push
stos
bound
adc
in
jne
xchg
arpl
fucomp
sub
cmp
xchg
gs
or
xchg
ss
cld
mov
mov
adc
cmp
pop
int3
ror
xchg
std
and
es
sub
stos
mov
int
nop
test
and
and
cwde
dec
inc
xchg
xor
cmp
mov
into
adc
push
xchg
sbb
loopne
or
pusha
adc
dec
js
push
pop
loope
mov
push
addr16
jae
xchg
std
cmp
cld
dec
leave
pop
int3
mov
pop
jne
sti
push
inc
data16
cdq
cs
or
rcl
sar
adc
xlat
icebp
jo
fimul
xor
lds
or
inc
enter
mov
cmps
cwde
jne
jl
int3
or
mov
xchg
bound
(bad)
into
call
or
imul
sar
cld
xchg
loope
sbb
jo
sbb
push
sbb
sub
xchg
sub
adc
daa
sub
fist
sub
lods
sub
mov
mov
or
push
sub
or
adc
call
and
pop
mov
dec
cli
xchg
fmul
mov
mov
adc
mov
pop
add
leave
test
int3
sbb
and
mov
aas
dec
loopne
xchg
sub
cli
loopne
lods
jle
jnp
xor
xchg
stos
mov
test
repz
ret
cmp
sub
mov
dec
or
pop
out
pop
pushf
(bad)
and
movs
lods
xor
push
repz
loopne
add
neg
mov
scas
xchg
cmp
scas
jo
repz
jae
loop
jp
xchg
xchg
call
cli
mov
mov
xchg
and
je
retf
stos
mov
dec
shr
and
mov
inc
adc
add
sbb
add
in
dec
shr
fisubr
xor
xchg
xchg
push
fldenv
scas
push
outs
sub
mov
cmp
push
and
inc
or
das
enter
xor
ins
out
loope
loop
xor
mov
sub
popf
pushf
push
jae
push
or
xchg
sub
pop
cmp
fisttp
(bad)
xchg
or
add
jl
ss
retf
xchg
test
es
inc
mov
fcomp
in
mov
outs
push
(bad)
rol
in
pop
(bad)
inc
push
jnp
sub
sbb
mov
pause
jmp
scas
dec
jb
(bad)
xor
or
cmp
jmp
test
jg
loop
dec
dec
loope
mov
popa
mov
push
sub
fld
xor
cmps
push
sbb
int
and
jns
xchg
gs
fidivr
pop
shl
mov
mov
imul
shr
daa
es
add
enter
sbb
addr16
jne
arpl
out
mov
fdivr
cmp
mov
in
mov
jbe
mov
aas
pop
pop
mov
jnp
sbb
push
pop
ss
cli
icebp
jb
sub
sbb
xor
xchg
test
in
sti
nop
ficom
ror
sbb
mov
adc
jge
xchg
dec
xchg
and
sbb
(bad)
xchg
cmp
mov
lahf
(bad)
sbb
stos
ds
xchg
ss
inc
mov
stos
sbb
jbe
xor
sub
sub
cwde
(bad)
(bad)
or
adc
call
imul
je
cmp
imul
mov
leave
push
xor
mov
and
adc
mov
shr
in
jo
adc
push
push
and
mov
js
dec
sbb
pop
jmp
pop
xchg
dec
push
cmc
push
dec
or
jmp
not
fimul
or
xor
sub
dec
add
movs
xor
daa
cmp
xor
(bad)
xor
push
loopne
mov
or
call
ds
xor
jge
mov
dec
mov
fnstenv
aad
cli
rcr
lods
push
dec
(bad)
js
dec
mov
mov
cli
jmp
cmc
push
daa
push
popf
bswap
ds
movs
xor
mov
repz
cwde
dec
jmp
je
sub
aam
mov
fnstcw
and
(bad)
mov
fs
sahf
cmp
setb
ret
lock
jne
mov
push
push
inc
adc
jae
push
stos
pop
xor
cmp
mov
bound
cs
fdivp
scas
or
cmp
jb
lahf
push
out
dec
jae
xor
mov
adc
add
pop
jb
icebp
les
push
sbb
test
in
inc
gs
or
mov
stos
les
and
push
push
jbe
movs
add
dec
push
imul
push
mov
add
fst
push
(bad)
cmp
mov
imul
mov
(bad)
int3
loope
outs
jle
adc
jmp
push
in
ret
xor
jns
sub
mov
es
je
inc
mov
(bad)
(bad)
adc
mov
pop
add
push
hlt
(bad)
add
xchg
or
retf
jo
mov
loope
mov
mov
xchg
jnp
das
loope
xchg
into
sar
jmp
mov
(bad)
out
aam
inc
int3
push
xchg
mov
outs
test
mov
stos
div
mov
push
add
sbb
not
sbb
adc
loope
mov
ja
outs
xlat
cmps
es
je
push
mov
popa
add
cmc
(bad)
or
sbb
fs
jge
cld
mov
(bad)
mov
dec
push
scas
mov
retf
adc
xchg
scas
mov
xor
lock
lds
mov
pop
sbb
and
cmp
mov
or
cli
mov
xor
sti
aam
push
or
fs
(bad)
mov
sub
and
popf
cmp
in
mov
out
sti
pushf
sub
cdq
hlt
jg
add
adc
aad
jb
jae
pop
daa
ss
pop
sbb
in
jmp
jns
leave
jmp
sbb
or
movs
in
pop
stos
and
aas
xchg
into
test
sbb
and
add
dec
das
ja
(bad)
add
mov
mov
nop
es
sub
daa
ret
js
inc
je
dec
rcr
dec
lods
xchg
pop
mov
xor
xlat
cmc
or
ins
jne
das
pop
call
push
stos
std
adc
sbb
dec
push
dec
cmp
das
mov
xor
inc
fdivrp
jae
add
mov
or
xor
adc
addr16
ja
xchg
mov
and
call
test
mov
adc
add
xchg
or
mov
fstp
sub
pusha
xchg
cmp
ss
sub
jg
push
pop
pop
mov
shl
lods
outs
repnz
mov
add
inc
xlat
dec
pop
cmp
push
cmp
outs
movs
mov
ret
cmp
jp
rol
std
dec
mov
xor
jae
pop
jge
sti
jbe
jecxz
lds
addr16
test
ins
add
cmp
mov
and
leave
mov
js
sbb
sub
imul
sub
lds
adc
mov
dec
cs
cmp
shl
sbb
jl
fistp
mov
pop
jo
aad
sub
xor
dec
jge
sub
aas
lods
sbb
stc
mov
mov
mov
fs
cwde
scas
cmc
pop
mov
jae
lahf
sbb
xor
leave
mov
sbb
and
mov
push
in
add
jbe
xchg
push
in
inc
je
shl
clc
sbb
xor
scas
data16
call
ror
fild
faddp
fsubr
cld
mov
rcr
mov
mov
cmps
push
pop
es
and
mov
neg
jmp
inc
push
ss
enter
mov
inc
mov
and
ret
pop
and
loop
sbb
push
push
(bad)
push
jge
(bad)
in
adc
rol
loop
cmp
or
std
push
rcl
shl
pushf
xchg
call
mov
sub
ss
mov
lahf
xor
ins
sub
loopne
jbe
mov
ret
push
ss
inc
test
fst
ror
cmp
sahf
mov
iret
pmaxub
sbb
sub
test
ins
nop
and
fsub
iret
adc
loop
xor
xor
push
addr16
mov
imul
pop
mov
adc
jp
adc
cmp
mov
fwait
pop
lock
cmp
jle
xor
xor
and
mov
fnsave
mov
lahf
jge
les
pop
inc
mov
adc
call
test
fcomp
jne
add
pop
sbb
push
out
adc
or
js
xchg
in
in
push
pop
int3
gs
loopne
push
mov
mov
cli
sqrtps
push
bound
xchg
push
sbb
in
cmp
retf
enter
inc
mov
sbb
mov
xchg
xchg
xor
outs
sti
fs
jle
push
mov
pushf
test
lods
movs
hlt
add
sub
cwde
stos
adc
jae
movs
ror
inc
mov
jl
lods
into
add
les
sub
inc
mov
and
dec
(bad)
cmp
icebp
jge
xchg
mov
cmp
jmp
jmp
xchg
leave
sub
mov
mov
adc
repnz
aad
inc
pusha
xor
xchg
shl
add
out
bsf
sbb
push
cmp
sub
cmp
inc
xor
clc
mov
ret
in
mul
xchg
mov
out
pop
sbb
fwait
stc
xchg
in
cs
repz
adc
push
ret
in
std
mov
addr16
and
sbb
mov
shl
popa
clc
test
push
(bad)
mov
mov
(bad)
movs
imul
sbb
ror
xor
pop
ret
pop
mov
sub
or
repz
retf
mov
pop
sub
cwde
mov
cmp
cwde
jno
ret
pop
fsubr
hlt
push
xchg
add
cmps
cmp
int
push
cmp
stos
adc
jns
mov
mov
push
xchg
push
xchg
(bad)
sub
or
mov
mov
pop
loop
dec
mov
into
push
ficomp
inc
dec
and
fs
dec
test
xchg
lahf
les
xchg
and
daa
jae
stc
pop
test
push
sbb
cmp
xchg
sbb
arpl
pop
aad
cdq
fld
xor
xor
push
in
pop
mov
pop
std
enter
cmp
mov
test
sbb
xchg
push
idiv
clc
sub
pushf
jmp
(bad)
jg
arpl
sub
sbb
leave
dec
push
test
not
dec
pop
mov
aas
clc
pushf
mov
mov
test
in
mov
mov
mov
call
jp
sar
out
scas
or
iret
es
mov
push
loop
retf
jo
fstp
movs
pusha
sub
dec
iret
dec
outs
jmp
mov
dec
les
out
jbe
xchg
inc
and
ds
cdq
call
or
sub
xlat
fstp
mov
scas
mov
hlt
cdq
pop
sub
and
sub
cmp
arpl
xchg
dec
cmps
mov
pop
call
cmps
inc
push
mov
xor
mov
jns
out
mov
fcmovb
pushf
cmc
out
push
stos
mov
push
or
xor
adc
push
push
call
push
mov
push
hlt
mov
cli
mov
dec
or
pop
loope
mov
arpl
test
fwait
sub
dec
push
icebp
cmp
add
or
fadd
outs
xchg
jecxz
jg
stos
aad
jg
jae
jno
pop
add
pop
cdq
cmp
lods
push
pop
sub
repz
sub
imul
inc
mov
xchg
(bad)
adc
cld
cmp
mov
stos
cmp
adc
cli
xchg
xor
pop
cmp
mov
sbb
arpl
int
mov
ss
mov
push
stos
out
repz
mov
enter
jp
aas
push
push
cmp
cmp
sar
out
sub
movs
ds
fdiv
jbe
sub
lds
mov
daa
es
mov
jmp
(bad)
addr16
test
and
les
jp
xchg
mov
jmp
mov
cdq
inc
pop
mov
mov
jo
mov
sub
pop
les
inc
outs
es
xchg
lock
xchg
push
jp
or
mov
xchg
pop
or
cmps
test
add
jmp
std
cs
cmps
mov
and
mov
pushf
in
xor
ja
add
or
or
jbe
adc
fnsetpm(287
or
sbb
dec
xchg
cs
xchg
mov
loope
mov
inc
shl
enter
mov
pop
mov
xchg
(bad)
fst
add
jb
jae
cwde
push
jmp
xor
and
xor
leave
xchg
test
xchg
in
ins
inc
jge
in
repnz
mov
imul
push
push
or
fs
dec
push
std
(bad)
adc
inc
and
dec
rcl
jmp
mov
jnp
fdiv
adc
repz
ja
shl
cmp
cmp
ins
mov
cmp
and
mov
pop
push
cmp
cld
add
sub
mov
mov
(bad)
in
pusha
jae
xchg
xchg
sbb
aad
fisttp
ja
lods
ja
sub
pop
cmp
and
inc
xchg
xor
outs
shl
lods
sub
cmp
or
push
enter
xor
aas
jnp
push
pop
push
cs
xchg
ss
(bad)
in
pop
daa
in
arpl
pop
mov
jge
mov
or
push
xor
sti
push
(bad)
xchg
scas
xchg
out
(bad)
lods
jne
mov
pop
inc
pop
mov
sub
ss
push
add
jge
rcr
xor
sbb
sub
ret
jmp
sti
and
and
mov
pop
pop
jne
jle
jnp
cmp
lock
and
nop
lds
nop
cmp
cmc
in
push
add
or
loopne
in
ja
movs
xchg
mov
gs
adc
clc
xchg
mov
pop
int3
sti
popf
in
dec
rcl
sub
pusha
mov
(bad)
push
xchg
pusha
cmc
mov
add
mov
push
outs
mov
shr
add
out
push
popa
ss
outs
xchg
in
out
daa
pop
mov
mov
add
cmp
fimul
aam
loope
in
xchg
nop
or
clc
aam
sbb
adc
push
push
and
or
test
test
cmp
call
sahf
xor
mov
call
inc
cs
(bad)
cld
std
dec
outs
jnp
in
or
(bad)
cmp
icebp
int3
mov
mov
jne
jne
add
cs
mov
outs
sbb
xchg
stos
sub
push
not
cwde
push
fld
inc
repz
inc
pop
jmp
mov
je
pop
jnp
mov
dec
xchg
popa
jnp
cmps
fcomp
leave
cmp
pop
cmps
add
dec
xchg
sbb
lds
push
stc
xchg
lds
out
hlt
dec
sub
iret
test
push
sbb
mov
sbb
rcl
add
mov
mov
test
jmp
xor
push
pop
(bad)
xchg
pop
out
call
ret
mov
sar
adc
push
call
les
repnz
sub
fmul
bound
lds
ret
imul
int
es
xchg
daa
sbb
(bad)
add
loop
stos
int3
xor
repz
jnp
fsub
(bad)
fadd
sub
sbb
(bad)
pop
xchg
mov
adc
xor
outs
in
push
icebp
dec
sar
inc
pop
mov
xchg
lock
lods
push
push
adc
cmps
cmc
inc
xor
xor
mov
inc
pusha
fisub
imul
xchg
test
sbb
adc
mov
stos
xor
mov
push
xor
out
dec
or
and
pop
mov
loopne
(bad)
dec
test
ins
sbb
sbb
jge
mov
or
sbb
mov
push
jg
mov
lods
(bad)
xor
imul
pop
scas
pminub
sbb
ror
cs
fcomp
sbb
popf
pop
icebp
imul
jmp
jb
xchg
in
shr
leave
mov
mov
scas
sbb
(bad)
mov
mov
test
ds
bound
outs
or
jg
mov
push
inc
fcomp
pop
add
xor
add
and
jae
jp
and
je
push
sub
out
out
cmp
out
out
inc
adc
cmps
into
ret
xor
daa
call
mov
aaa
int3
adc
add
jp
(bad)
adc
push
push
loop
and
xchg
in
xchg
push
push
repz
sub
clc
mov
das
into
pop
and
popf
pop
mov
xchg
pop
jns
retf
jae
cdq
lock
jo
xchg
mov
or
sbb
jnp
loope
pop
shr
adc
jmp
and
jp
les
rcl
xchg
push
sub
repz
jne
or
jle
jl
outs
out
jne
lds
je
mov
nop
mov
daa
mov
xchg
rcr
stc
std
fldlg2
cmp
not
test
xchg
(bad)
aam
test
push
fimul
repnz
or
cmp
sbb
jae
and
mov
jl
mov
cmp
fldcw
fs
add
add
or
xchg
pop
xchg
lods
xchg
sub
ins
into
push
adc
das
cmp
adc
imul
lds
sub
inc
sbb
push
(bad)
jp
iret
je
movs
mov
lods
adc
clc
push
(bad)
enter
jnp
rcl
adc
data16
adc
or
cmp
call
mov
adc
xor
mov
xor
sbb
xchg
fild
test
or
repnz
fst
mov
test
(bad)
aas
sub
push
pop
pop
ins
or
hlt
(bad)
mov
xor
jmp
and
xadd
sub
sbb
xor
add
sub
stos
fbstp
rol
jl
out
and
not
data16
dec
pop
ret
lods
es
pop
shl
push
dec
popa
(bad)
cmp
inc
test
pop
xchg
add
jo
(bad)
out
ja
in
cmp
(bad)
mov
(bad)
pop
stos
pop
mov
aas
mov
cmp
dec
daa
int3
xchg
repz
icebp
data16
or
cs
add
push
iret
lds
mov
mov
stos
(bad)
in
push
ss
ins
loopne
(bad)
jmp
and
xor
xor
or
xor
(bad)
sub
jge
(bad)
cli
inc
xchg
xlat
bnd
test
scas
fxch
and
pusha
mov
mov
pop
adc
je
push
add
push
xchg
aas
sbb
in
ins
sbb
int3
jne
xchg
dec
push
push
outs
sbb
repz
xor
inc
test
icebp
xchg
fist
pop
sub
sbb
call
or
dec
cli
inc
loopne
repz
and
fdivr
cs
sub
push
js
xchg
cmps
stos
cli
mov
add
fdecstp
loopne
and
das
pop
mov
iret
dec
retf
adc
pop
adc
jae
xchg
dec
or
sub
jp
pop
mov
or
dec
(bad)
and
xor
mov
clc
call
mov
xor
push
inc
push
or
jne
adc
fisub
dec
sti
adc
sub
(bad)
dec
push
mov
jns
popf
movs
std
mov
call
jp
cmp
jp
pop
xchg
out
mov
jne
into
and
cwde
pop
retf
sbb
test
jnp
or
jge
adc
enter
aad
int3
adc
jo
sbb
ins
imul
jp
sbb
mov
shl
push
(bad)
fild
fs
into
repnz
xor
leave
push
arpl
dec
dec
popf
ja
clc
push
ret
jmp
mov
(bad)
int3
pop
in
fs
test
dec
jns
scas
call
adc
js
lahf
xchg
xlat
js
mov
sub
jg
adc
(bad)
and
pop
fnsave
loopne
push
xor
(bad)
in
in
mov
sbb
not
stos
dec
mov
out
retf
arpl
inc
les
(bad)
jp
out
jmp
xor
gs
or
(bad)
in
fisub
cli
mov
retf
lock
jmp
push
sbb
rol
(bad)
jae
add
xchg
adc
fdivr
inc
fld
push
mov
int3
push
data16
into
dec
xchg
sub
clc
dec
lods
jae
xchg
(bad)
pop
jo
outs
dec
sub
and
xchg
push
push
add
cmp
cmp
in
ja
xchg
adc
jae
mov
test
sbb
push
pop
js
fwait
jmp
pusha
mov
push
push
push
cwde
loopne
sbb
gs
mov
das
iret
lock
nop
in
sub
sbb
aad
mov
inc
inc
call
hlt
scas
and
push
rol
call
cmps
ret
mov
cmps
mov
into
inc
push
xor
fisttp
out
xchg
dec
pop
xchg
stos
fidiv
cld
in
adc
out
cs
and
test
push
test
inc
call
out
jge
icebp
aad
data16
xchg
push
rcl
out
mov
cld
mov
int
sti
popf
push
sti
push
iret
jl
cwde
(bad)
xchg
addr16
out
fcmovnb
jmp
jns
jmp
iret
das
mov
jbe
cmp
pop
mov
idiv
jge
xchg
jnp
xor
push
test
xor
(bad)
mov
cld
xchg
sub
sbb
rol
mov
jo
sub
int3
jb
inc
out
push
hlt
daa
ins
jmp
inc
js
xchg
(bad)
(bad)
adc
dec
ja
jle
mov
out
ins
and
jmp
lock
cs
adc
outs
xor
xchg
lahf
push
add
std
adc
mov
call
ficomp
mov
mov
loopne
sub
je
stc
dec
and
in
sbb
xchg
and
loop
push
test
es
sbb
lock
cli
cs
push
test
mov
loope
adc
stos
or
loopne
push
adc
stc
fisttp
mov
rcr
nop
inc
mov
mov
xchg
mov
jns
lock
rcr
inc
js
and
pop
xor
sub
sbb
mov
jmp
jb
xchg
jg
mov
lds
push
add
adc
div
(bad)
test
inc
outs
ins
pop
test
xchg
xchg
fucomip
mov
test
mov
mov
sti
xor
out
mov
inc
or
(bad)
sub
mov
div
dec
or
test
es
inc
xchg
jo
mov
outs
mov
pop
push
and
imul
mov
xchg
mov
jne
xchg
sbb
mov
cmp
std
cmps
push
jae
push
rcl
push
adc
call
jns
sbb
adc
pop
jge
inc
sbb
in
mov
aas
in
imul
imul
nop
sub
push
cmp
cmp
or
adc
imul
ins
xchg
dec
pop
ficomp
into
or
cld
hlt
add
mov
add
fst
xor
ret
cld
inc
dec
sub
adc
mov
cmp
and
jno
xchg
jae
xchg
push
pop
xor
aaa
pop
or
push
lods
fld
call
repz
addr16
sub
xchg
jge
sbb
call
lock
jbe
movs
xchg
ret
xor
arpl
cmp
in
lods
loope
sahf
jnp
dec
push
lahf
test
add
inc
cmp
(bad)
ret
in
test
adc
shl
mov
push
sub
jno
cmp
sub
or
cmps
pop
sbb
xor
mov
add
daa
int3
repnz
out
jle
cmp
jns
(bad)
stos
dec
sub
je
xchg
jmp
sub
cdq
icebp
jbe
xlat
pop
and
mov
add
jae
cmc
test
jo
sbb
into
fld
mov
mov
or
je
pusha
inc
out
sub
leave
imul
std
add
mov
jne
adc
sub
mov
dec
pushf
mov
pop
int3
mov
mov
xchg
jbe
adc
push
scas
sar
or
das
cmp
sbb
cld
hlt
mov
imul
jmp
dec
jmp
pop
jne
icebp
mov
mov
cmp
mov
call
jle
in
shl
sbb
hlt
push
fadd
ins
mov
mov
ror
data16
jbe
aas
js
sar
ret
je
sbb
and
dec
frstor
inc
rcl
loop
cli
xchg
inc
sub
nop
sub
in
(bad)
jns
in
lds
hlt
or
sbb
cmp
xor
jne
jg
pop
jmp
adc
pop
cmp
inc
fld
adc
cmp
pop
in
dec
or
pushf
rcr
lods
xchg
leave
es
xlat
sub
(bad)
cmc
nop
retf
loopne
cmp
std
xor
push
push
jbe
dec
dec
and
mov
jno
xchg
mov
into
cwde
sub
mov
jp
es
fiadd
aaa
std
mov
mov
ja
pop
cmc
jle
popf
xchg
dec
push
dec
fmul
addr16
pop
pop
jle
frstor
daa
pusha
and
xchg
ds
push
cmp
pushf
outs
stos
push
bnd
fmul
mov
je
inc
push
(bad)
adc
scas
add
xor
mov
jmp
in
push
and
xor
sub
add
mov
and
jecxz
rcl
loope
rcr
jb
sbb
xchg
cmp
xchg
push
pop
add
arpl
adc
xchg
sub
dec
je
retf
scas
cmp
add
xchg
jg
mov
cmp
loope
jae
(bad)
pop
call
push
inc
xchg
clc
int3
jg
pop
pop
jmp
push
mov
push
test
jb
stos
jg
or
inc
aam
and
sub
call
addr16
mov
stos
mov
jp
sub
or
xchg
xchg
sub
cmp
loop
fisttp
xlat
mov
js
jle
repz
inc
sub
(bad)
cli
not
and
push
cmp
xor
outs
push
retf
(bad)
add
cs
pop
mul
mov
out
in
pop
push
fidiv
mov
pop
cmp
dec
out
bound
nop
xor
outs
mov
mov
int
inc
repz
push
shl
mov
fimul
js
sbb
test
push
out
mov
gs
mov
push
ja
xchg
jne
dec
pop
sub
addr16
push
cmc
jge
mov
mov
dec
outs
adc
sub
data16
(bad)
iret
nop
inc
add
bound
xor
js
jecxz
add
dec
mov
in
xor
test
xor
scas
jge
mov
and
aaa
pop
xor
mov
sub
or
fidiv
mov
inc
bound
movs
mov
pop
rcl
ins
in
mov
adc
arpl
sbb
push
in
push
pop
dec
adc
outs
inc
hlt
pop
xchg
dec
xchg
sub
lods
rcr
leave
cmc
xchg
cmps
cmp
or
inc
pusha
cld
pop
sub
xor
bound
and
loope
jle
dec
lea
(bad)
in
and
sahf
cli
ins
(bad)
sub
add
push
loopne
lds
pop
jle
aad
in
jecxz
test
cmp
rcr
mov
stc
je
adc
(bad)
sbb
mov
popa
ja
pop
push
jne
sbb
(bad)
std
adc
fcomp
add
movs
ret
shl
cdq
arpl
mov
std
xor
pushf
call
and
jmp
adc
ins
iret
retf
jbe
jecxz
cdq
call
ret
call
push
jle
ds
test
sahf
pop
pop
xchg
xchg
jmp
sub
jae
jbe
mov
sub
or
lds
jo
dec
or
add
cmp
sbb
jb
out
(bad)
jl
jge
xor
xchg
dec
in
pop
pop
mov
in
rcl
adc
in
pop
inc
popf
test
int
add
sbb
and
xchg
test
out
jae
fcmovbe
test
add
sar
xor
xor
(bad)
fs
out
cdq
jmp
outs
mov
mov
jge
mov
(bad)
(bad)
push
in
es
push
push
or
push
addr16
rcr
pcmpeqb
adc
mov
shl
out
dec
or
scas
shr
stos
push
cmp
out
mov
clc
dec
pop
loope
in
push
cli
ins
sbb
sub
aad
clc
xor
test
sbb
xchg
popa
mov
cwde
adc
inc
scas
sbb
push
jmp
sub
setne
xchg
jbe
mov
jmp
dec
idiv
or
push
lods
nop
addr16
mov
rep
push
cmp
in
data16
test
leave
or
mov
mov
ss
push
lds
and
sbb
fistp
adc
cmp
mov
xchg
mov
jo
mov
or
clc
fcom
jp
repnz
inc
loope
or
sub
adc
ret
sub
xchg
cmps
mov
and
dec
cmp
xor
mov
loopne
dec
xor
dec
loope
das
imul
xor
sub
or
jg
mov
jno
int
push
test
mov
cmps
add
jns
xchg
data16
stos
mov
dec
xchg
sbb
lock
mov
into
imul
pop
sahf
rcl
adc
mov
out
or
cli
jl
(bad)
pop
xchg
jbe
rcr
std
push
jge
xor
cmp
cwde
pop
pop
xchg
jns
mov
mov
jle
and
mov
retf
add
adc
cld
and
and
movs
clc
sti
popa
push
mov
stos
inc
jl
leave
lds
(bad)
lods
and
add
enter
and
sub
xchg
xchg
and
cld
xchg
jo
sub
test
fldenv
push
push
cmp
cmps
(bad)
cmp
std
aad
ss
push
es
pop
mov
ret
adc
clc
loopne
ret
call
std
fisttp
cmp
sbb
test
enter
jae
jge
cmp
mov
jbe
fisub
mov
pop
pop
pusha
out
add
add
inc
into
outs
pop
mov
push
cmp
rol
mov
fstp
in
xchg
jae
jmp
loopne
xor
cs
or
pusha
xchg
pop
jmp
fmulp
mov
cmp
jge
dec
jge
sbb
jp
lea
mov
mov
inc
aam
cli
xchg
test
jb
adc
mov
xor
pushf
mov
adc
jge
or
jae
mov
bound
cwde
test
sbb
or
fisub
cmp
xchg
sub
iret
cmp
hlt
mov
rcl
jle
retf
inc
loope
imul
mov
test
sbb
dec
dec
sbb
jo
retf
ins
add
cmp
call
jns
retf
ja
stc
bnd
rcr
push
leave
fwait
adc
adc
sub
test
pop
ds
in
call
sbb
cmps
scas
mov
dec
test
cld
sub
mov
jb
xchg
cmovno
or
inc
cwde
push
shr
aas
pop
pop
hlt
aad
shl
jno
xchg
push
f2xm1
daa
jge
jge
lahf
xchg
test
and
mov
push
test
or
xchg
mov
sub
repnz
cs
mov
fs
test
push
cmps
loope
jl
xchg
bound
int3
out
out
popa
sub
es
jne
arpl
sbb
mov
(bad)
loop
dec
xor
or
cmp
pushf
and
xor
inc
std
push
fistp
mov
int
pop
daa
stc
in
imul
popa
and
mov
mov
push
xchg
mov
hlt
fild
and
xor
sub
repz
fcmovb
push
lods
(bad)
mov
xchg
pop
in
or
mov
cmps
pop
xchg
pop
in
dec
xchg
sbb
int
jge
cmp
mov
sub
clc
xchg
fbld
jo
in
inc
(bad)
dec
pushf
js
jmp
lds
jae
mov
sbb
sbb
mov
mov
mov
(bad)
leave
mov
js
or
jle
mov
or
jl
not
xor
pop
xor
push
cmp
test
mov
movs
pop
or
das
mov
repz
cli
cmp
xchg
xchg
dec
std
mov
or
mov
pop
xor
mov
cwde
push
and
push
jle
jl
out
xchg
out
loop
shl
mov
dec
pop
mov
jns
mov
mov
(bad)
push
mov
movs
mov
mov
lds
xor
mov
or
xor
adc
ret
test
dec
dec
jne
mov
jae
lods
test
mov
sar
mov
dec
cmp
outs
idiv
sbb
loope
xchg
jmp
dec
ret
scas
mov
and
mov
mov
fmul
sar
push
ficom
repz
(bad)
push
gs
adc
inc
dec
aas
out
pop
mov
rcr
ret
dec
fsubr
cmp
neg
adc
inc
mov
jne
fcomp
test
xchg
push
dec
mov
pop
sub
ficom
dec
ret
sub
shr
mov
in
aas
aas
jp
es
pop
mov
xor
sub
ss
call
jge
and
fdivr
adc
out
push
mov
mov
es
dec
pop
stc
dec
cmps
jmp
mov
es
es
mov
sub
mov
outs
test
push
add
aaa
jmp
popf
stc
push
test
cli
xchg
cmp
xor
std
rcl
gs
push
jp
xchg
pop
xchg
jnp
or
sbb
xchg
lock
in
int
push
add
(bad)
cmp
call
leave
cmp
js
jmp
jo
jne
and
xor
lock
inc
adc
test
xchg
add
mov
jno
cmp
cmp
imul
in
shr
jae
adc
push
hlt
out
neg
adc
cwde
jecxz
xor
or
in
addr16
icebp
lds
hlt
(bad)
push
mov
xor
rcl
jge
shr
js
iret
push
test
stos
jp
lock
mov
out
je
mov
adc
pop
in
xlat
sub
and
shl
stc
outs
fistp
(bad)
int3
(bad)
fild
pop
jg
dec
into
xor
cmps
or
push
sbb
into
lock
out
push
cmp
jo
(bad)
xchg
push
and
cdq
loope
sbb
fdiv
push
xor
pop
push
iret
pop
into
les
icebp
cmp
imul
sahf
dec
adc
jne
xor
stc
int3
sub
jg
mov
xchg
es
sub
rep
push
aas
js
(bad)
es
dec
sub
sbb
add
xor
ins
push
scas
cwde
ror
mov
push
rol
ins
bound
jns
jmp
xchg
cwde
mov
mov
mov
out
adc
jb
jle
outs
repnz
xor
lods
and
sub
mov
xor
dec
or
mov
xor
fs
shl
jae
in
and
jns
mov
daa
fiadd
outs
hlt
cmp
sub
add
pop
enter
das
stc
hlt
call
xchg
adc
xchg
(bad)
xchg
ror
dec
ins
cmp
pop
adc
call
das
pop
int
je
inc
fild
pop
cmp
xchg
fld
sbb
inc
adc
xchg
pusha
cdq
push
loopne
daa
data16
js
scas
dec
mov
leave
xor
xchg
inc
xor
pop
pop
cli
mov
(bad)
sub
bound
or
push
and
imul
daa
xor
jnp
int3
test
dec
pop
jle
lods
pop
dec
ins
dec
cmc
stc
hlt
sub
mov
push
cmc
lea
out
cmp
icebp
inc
rcr
cmps
gs
stos
add
add
and
shr
cmps
into
call
mov
lock
cmp
(bad)
sub
and
xchg
dec
lds
xchg
aad
js
mov
jb
adc
push
mov
sbb
pop
xor
mov
retf
cmp
inc
push
and
jae
push
das
and
and
jbe
mov
cmp
mov
dec
sahf
test
push
cmps
push
add
dec
retf
(bad)
lods
loope
fs
push
push
movs
sbb
ret
jg
shl
adc
mov
in
neg
movs
sysexit
lods
dec
mov
iret
ins
cmp
push
cs
nop
inc
scas
js
call
ret
cmp
icebp
mov
cmp
pop
xchg
retf
call
push
xchg
inc
shr
dec
cld
popf
(bad)
mov
popa
and
push
fwait
test
sub
sbb
cmps
and
push
hlt
xor
out
ins
mov
jge
adc
(bad)
lods
pop
xchg
jb
mov
inc
and
stc
push
clc
jecxz
cld
es
clc
sbb
sub
xchg
sbb
in
cmc
imul
fdivr
shr
enter
pop
xchg
xlat
cmps
jb
out
out
sti
push
in
xchg
cmp
mov
jns
rol
add
int
stc
dec
mov
jmp
dec
pusha
and
jp
pop
int3
mov
imul
clc
or
xchg
mov
push
sbb
std
cmps
mov
dec
push
jns
jmp
xchg
and
sbb
pop
xor
pop
push
push
dec
mov
faddp
or
push
lea
sub
sbb
gs
adc
inc
cmc
fld
push
clc
cmps
int
retf
xlat
or
xor
mov
pusha
mov
xchg
imul
dec
jae
popf
or
xchg
pop
(bad)
dec
fwait
in
ds
scas
in
push
xchg
es
and
push
mov
mov
enter
addr16
xor
xchg
ret
in
push
fsub
xor
mov
in
imul
loop
(bad)
adc
and
mov
(bad)
pop
int
outs
ffreep
(bad)
cli
xchg
daa
pop
push
ds
sub
jbe
xchg
jo
pop
dec
call
stos
imul
frstor
js
pushf
cmp
sub
add
in
jbe
jne
and
clc
push
xchg
fwait
adc
out
lahf
jne
das
or
cdq
sub
mov
or
xor
cmps
pop
arpl
xchg
xlat
mov
pop
shl
cmp
xlat
aas
cdq
lahf
lea
ss
(bad)
cmp
outs
inc
dec
pop
scas
loope
lods
sub
xor
neg
and
daa
cwde
push
(bad)
mov
sbb
daa
pop
aam
data16
out
test
xchg
pop
and
mov
lods
mov
mov
inc
dec
(bad)
stc
mov
das
add
add
pop
test
ss
dec
mov
ret
xor
jp
lds
fdivp
pop
push
ins
std
loopne
call
lds
push
cmc
cld
xor
popf
fsubr
popa
xchg
push
aas
cdq
nop
pop
fcmovnu
imul
or
scas
(bad)
xor
lods
push
jnp
sbb
shl
cli
mov
push
push
mov
in
or
push
das
sub
xchg
add
loop
jae
sub
lods
xchg
adc
sub
mov
sbb
mov
scas
or
jns
push
nop
xchg
hlt
cmp
mov
jg
inc
pop
or
cmps
adc
cmc
call
repz
movs
ret
or
xchg
mov
or
and
fsubp
push
shl
dec
shl
lea
push
cmp
pop
push
mov
adc
retf
mov
cmps
addr16
icebp
std
repz
mov
sub
inc
(bad)
push
movs
adc
mov
fstp
cs
mov
xor
imul
or
jo
pop
xchg
clc
push
iret
outs
popa
(bad)
mov
loope
out
in
cs
in
and
not
cmp
jmp
(bad)
mov
test
or
xchg
fnstenv
mov
repz
dec
pop
es
push
mov
jmp
arpl
inc
ror
cmp
xchg
push
cmc
bnd
in
arpl
ss
repnz
sbb
sbb
pop
mov
adc
arpl
inc
ins
mul
pop
push
leave
or
dec
sub
pop
or
loopne
fldcw
pop
dec
pusha
hlt
nop
(bad)
call
mov
push
xchg
retf
fidiv
mov
ins
mov
hlt
xchg
adc
les
jae
mov
pop
and
fwait
(bad)
sbb
into
push
or
adc
cmp
cdq
js
xor
out
test
mov
xchg
(bad)
js
dec
sbb
gs
ins
jmp
pop
retf
mov
fcomp
cmp
jmp
js
mov
aam
cmc
ins
mov
add
shl
xchg
or
cmp
sbb
mov
mov
xchg
jmp
dec
enter
cmp
dec
inc
cmc
pop
sub
call
xor
pop
mov
mov
jae
mov
jmp
dec
cdq
or
sub
mov
(bad)
pushf
cmp
fstp
ins
dec
fidivr
push
mov
into
inc
aaa
push
ror
int
dec
test
in
mov
xchg
das
pop
das
and
cwde
add
xchg
(bad)
push
and
xor
xlat
ret
add
data16
adc
sub
sub
cli
sar
(bad)
mov
js
(bad)
jo
clc
sub
or
mov
sub
lods
and
mov
pop
xchg
rcl
push
out
aas
lds
pop
scas
ss
cmps
add
xchg
mov
ss
mov
test
cmp
inc
adc
xor
adc
push
out
inc
jae
sub
add
(bad)
stos
ret
fiadd
mov
push
shl
push
push
(bad)
sub
stos
lds
lea
jbe
push
adc
das
ret
sar
ror
ss
test
push
sub
call
cmp
mov
(bad)
jne
mov
bnd
inc
fcmovnb
sahf
test
sub
addr16
push
outs
ins
add
jo
mov
push
jo
pop
jl
pop
jns
mov
push
in
movs
js
cmp
push
mov
fs
cmp
jo
es
test
movs
mov
jecxz
fld
sbb
add
and
inc
loopne
jl
out
inc
jmp
xchg
data16
pop
mov
fcmovnb
jge
(bad)
je
in
inc
cmc
(bad)
ins
push
xchg
xor
jne
std
int3
fs
jp
and
xchg
adc
call
push
push
test
fist
and
mov
and
mov
loope
push
movs
imul
data16
mov
lea
out
mov
add
hlt
inc
push
cs
aad
outs
adc
mov
adc
dec
sub
add
dec
sub
dec
xchg
les
xchg
lods
lahf
enter
xchg
push
sbb
sbb
in
pop
dec
mov
fsubp
jbe
(bad)
lea
imul
xchg
push
mov
jmp
xchg
jns
fsub
loope
dec
cmp
add
in
rcl
push
add
test
pop
in
in
cdq
sub
cli
iret
pop
sahf
lahf
loopne
scas
sahf
adc
es
and
jmp
aas
mov
(bad)
mov
and
xor
out
sub
jmp
test
mov
inc
pop
idiv
dec
cwde
(bad)
nop
and
sub
cs
ins
test
pop
fild
pop
je
push
sbb
fidivr
push
cmp
jb
dec
pop
rol
add
cwde
cld
inc
adc
mov
aad
push
pop
in
push
xchg
sub
in
out
sbb
xor
jnp
sub
sub
jmp
fmul
push
sbb
push
mov
out
loop
aas
jns
sub
test
adc
xor
mov
sub
sbb
sub
(bad)
out
mov
test
add
pop
int3
push
movs
jecxz
dec
sbb
cmps
gs
jo
iret
dec
cmp
retf
hlt
sub
pop
xchg
xchg
lahf
(bad)
in
je
ret
sbb
(bad)
mov
psrlw
push
dec
fstp
xchg
mov
push
and
cmp
add
daa
retf
xchg
dec
out
push
mov
pushf
jne
cmps
jle
mov
and
mov
nop
cli
dec
inc
mov
jb
test
shr
mov
inc
mov
sbb
fnstenv
enter
cmc
ret
in
dec
sub
sbb
pop
adc
and
and
aad
pop
xchg
stos
pop
pop
lahf
pop
jae
push
test
inc
scas
ficomp
dec
mov
inc
and
push
and
cmp
cli
sbb
push
mov
pop
test
sar
pop
mov
mov
and
mov
mov
cwde
push
add
das
retf
sub
and
mov
and
mov
dec
test
push
mov
pop
adc
jge
sti
jg
in
shr
push
push
mov
push
xchg
sub
adc
test
es
cmc
into
(bad)
cmp
jbe
test
shl
jge
outs
lock
loopne
sub
adc
fwait
cdq
xor
xor
fimul
xchg
or
in
push
cmc
jo
sahf
sbb
in
movs
xchg
out
mov
mov
inc
leave
test
cmp
hlt
in
daa
jecxz
fdiv
dec
mov
hlt
and
lods
fdiv
adc
rcr
push
xor
pop
clc
cmp
lods
loopne
mov
sbb
test
mov
xor
cld
rol
dec
and
sbb
pop
inc
test
mov
cmp
mov
add
dec
aam
daa
sbb
out
shl
ds
jae
adc
cmp
jmp
leave
std
adc
sahf
push
scas
pop
jmp
cmp
hlt
out
cmp
dec
call
or
test
into
loop
in
cmps
sub
xor
jmp
xchg
loopne
in
iret
mov
xor
jmp
mov
movs
mov
sub
pop
lock
ss
sbb
push
iret
test
mov
ret
enter
or
jg
jg
sub
ja
xchg
pop
jmp
ret
(bad)
pop
sahf
inc
cwde
(bad)
mov
inc
push
jmp
mov
sahf
sbb
mov
fldcw
call
mov
and
addr16
int3
ins
sub
push
leave
test
sbb
push
pushf
push
jmp
jge
pusha
sbb
push
and
rcr
fadd
aaa
cli
mov
sub
fidiv
daa
cwde
sub
xor
scas
arpl
(bad)
cmp
xor
mov
pop
enter
mov
pop
adc
shl
mov
in
pop
loop
push
xchg
in
push
movs
fsub
call
cs
mov
add
adc
cmp
pop
(bad)
sub
xor
pop
xor
cdq
cmc
pop
push
mov
pop
push
cmp
push
xlat
mov
out
in
ds
and
dec
cld
ret
mov
test
jns
mov
cmp
push
and
inc
mov
mov
push
fs
sub
test
jp
mov
scas
jmp
lea
cmc
sub
int
std
fsub
sub
ret
pop
sub
rol
mov
mov
inc
vmovd
adc
jb
xchg
pop
or
xlat
or
push
jns
inc
and
dec
(bad)
stos
add
fisubr
stos
nop
push
inc
mov
in
sub
sub
in
lods
and
mov
dec
ja
outs
fs
add
mov
dec
mov
out
dec
xlat
shr
loopne
mov
je
adc
add
push
dec
xor
xor
xor
add
(bad)
pop
test
cmp
jmp
sbb
sbb
adc
xor
push
mov
iret
mov
and
cdq
icebp
int
xor
xchg
add
pop
xor
mov
jne
iret
fadd
in
clc
cli
sub
icebp
fbstp
movs
in
dec
mov
out
mov
repz
xchg
into
jecxz
adc
jmp
xchg
cmp
sub
mov
xchg
ins
scas
xchg
dec
and
xchg
mov
mov
loopne
jno
xchg
cs
push
test
push
or
in
repnz
adc
dec
bound
pop
fldcw
mov
jge
cmc
xor
arpl
call
loope
xchg
add
jmp
mov
push
out
push
movs
cli
xchg
aas
push
xchg
xchg
push
xchg
lods
aaa
imul
mov
add
out
repz
aaa
and
and
arpl
ret
fcmove
push
adc
dec
pop
sub
cld
sbb
inc
rol
cmps
push
push
xor
ror
pop
jne
mov
cli
mov
pop
(bad)
shl
inc
std
icebp
jo
enter
jge
mov
sub
sbb
pusha
int
jbe
pop
stc
jne
pop
in
cwde
dec
dec
add
ss
out
pusha
lds
fst
cmp
cmp
xchg
xor
ret
mov
es
mov
jl
adc
sub
cs
shl
pop
sub
hlt
cmc
mov
or
sbb
cmc
lahf
adc
mov
dec
sbb
(bad)
mov
fisubr
(bad)
mov
inc
sub
(bad)
repz
mov
sti
xchg
dec
dec
jg
mov
fwait
cmps
mov
cmp
ret
and
sti
out
mov
xor
pop
rcl
mov
test
jle
arpl
push
sti
loope
xchg
add
add
cmps
adc
xor
and
mov
add
cli
cmp
cld
adc
xchg
loop
in
mov
add
movs
ins
icebp
leave
add
dec
xchg
mov
push
push
push
in
pusha
movs
cwde
pushf
add
ins
or
xchg
push
lahf
adc
cli
out
stc
jle
inc
fldcw
ret
push
dec
imul
mov
stc
shl
adc
and
add
sub
jo
call
(bad)
cmp
jp
mov
scas
call
dec
jbe
stos
sbb
test
push
or
mov
sbb
pusha
xchg
ds
adc
mov
push
dec
cmps
and
sti
mov
jg
scas
rcr
add
xchg
popf
sbb
jecxz
aam
inc
ror
ss
jne
mov
mov
(bad)
xor
cwde
jae
adc
adc
inc
adc
inc
mov
adc
(bad)
sbb
mov
sbb
push
sbb
ja
popf
call
sub
loopne
xor
sub
pop
cli
int3
xchg
out
jmp
push
xchg
shl
jl
cmps
icebp
inc
stc
dec
test
sbb
daa
adc
rol
mov
cmp
retf
pop
jne
pop
popa
push
xchg
addr16
mov
mov
jnp
mov
hlt
mov
lea
cmp
adc
push
sbb
enter
cmp
cmp
xchg
daa
jns
or
xor
jecxz
jge
push
pop
gs
jne
and
dec
xchg
dec
and
jno
stc
popf
xchg
mov
in
movs
jp
(bad)
ins
test
dec
or
mov
dec
adc
sub
movs
das
sbb
and
mov
push
jmp
inc
xlat
clc
lds
fxch
push
dec
cmc
inc
jo
shl
dec
shl
repz
xor
cmp
jl
xchg
push
aaa
sbb
shl
add
jp
pop
out
mov
add
and
and
jp
sub
jle
pop
hlt
test
dec
jno
mov
in
fisubr
lahf
daa
xchg
jl
xchg
push
cmp
cmc
inc
hlt
jnp
out
in
sbb
call
data16
fld
mov
es
xor
cmp
push
out
pop
fild
leave
mov
jae
mov
cmp
in
and
push
add
fisttp
dec
ins
xor
sbb
lds
ror
mov
out
pop
sti
stos
ret
imul
fsubr
imul
or
retf
hlt
fisub
rcl
mov
je
scas
rcl
xlat
mov
inc
scas
ret
data16
pop
rcl
mov
xor
jp
fs
shr
sbb
push
packuswb
pop
add
xor
jb
ins
jo
mov
icebp
int
jmp
les
adc
dec
xor
cs
cmp
stos
jp
mov
push
test
aam
sub
xchg
mov
(bad)
imul
bound
mov
and
out
pop
or
fmul
sub
js
test
xor
adc
mov
push
xchg
cwde
shl
into
adc
das
retf
xchg
mov
retf
mov
and
adc
(bad)
fimul
xchg
cmp
(bad)
xor
cvtps2pi
loop
cmp
dec
ficomp
test
ror
pop
mov
mov
inc
cmp
xor
jne
loop
loopne
addr16
inc
(bad)
jae
xchg
pushf
fidivr
push
nop
aas
cmp
(bad)
das
out
jle
jmp
imul
fs
je
ret
inc
les
jmp
hlt
push
add
xchg
jns
xchg
test
fadd
sub
out
data16
ror
cmc
jle
ja
test
xchg
jg
mov
push
jge
icebp
loop
loope
mov
pop
adc
mov
out
movs
icebp
pop
xchg
sbb
cwde
out
mov
movs
xlat
pop
fiadd
sbb
add
pop
mov
and
xchg
repnz
jns
repz
and
mov
and
push
dec
jnp
rcr
movs
mov
or
pop
xor
xchg
jb
aas
retf
ins
mov
das
shl
inc
pusha
loopne
xlat
movs
mov
es
jno
push
addr16
cmps
sbb
dec
fwait
jle
push
or
movs
jmp
jbe
hlt
imul
mov
sub
pushf
push
xchg
sbb
jle
in
sub
icebp
xchg
jmp
ret
test
and
nop
(bad)
lock
mov
mov
ret
push
(bad)
(bad)
push
in
dec
stos
add
or
fidiv
jne
xchg
push
xchg
clc
mov
mov
rcr
push
add
outs
pop
std
jecxz
in
mov
sub
aam
pop
add
leave
cmp
and
ins
fdivr
push
mov
xchg
stos
lea
sub
cmp
fld
ret
dec
ins
push
sub
inc
xor
lds
sbb
ficomp
xchg
dec
cdq
jge
(bad)
mov
add
ficomp
or
push
mov
jge
ss
jmp
call
xor
sub
push
(bad)
loopne
mov
dec
imul
jne
pop
mov
push
in
movs
scas
pop
movs
ret
or
mov
rcr
loop
sub
js
mov
js
ins
in
jg
loope
stc
aam
rcl
fcomp
jmp
inc
je
xor
push
xchg
adc
xchg
xchg
jl
rcl
outs
mov
and
jns
jae
call
xor
pusha
sahf
pop
hlt
mov
xchg
jge
dec
clc
sbb
push
data16
cmc
xchg
mov
mov
mov
adc
mov
pop
push
dec
mov
dec
mov
add
pop
sbb
sub
inc
repnz
mov
jg
sar
in
sub
mov
shl
addr16
xchg
pop
mov
cmp
xor
jo
mov
rcr
rcl
int
sahf
pop
pop
sub
and
js
xchg
mov
inc
(bad)
es
lahf
pop
repz
call
mov
sbb
mov
retf
movs
aad
shr
cmps
ins
dec
xchg
push
sbb
call
xchg
jmp
loope
sub
gs
add
pop
lods
lock
push
data16
fisttp
dec
jl
loope
pop
fwait
jno
hlt
test
repnz
ja
ret
cmp
mov
int3
push
or
cmc
cli
cmps
movs
fnsave
rcr
push
aaa
in
jmp
sub
loope
push
jecxz
and
jnp
sbb
dec
retf
stos
add
data16
popf
sbb
adc
cmp
sbb
iret
test
cmp
fwait
adc
test
imul
xchg
imul
mov
mov
add
inc
mov
loopne
mov
ret
adc
lds
cmp
arpl
enter
lock
cmps
and
add
xor
push
sub
push
inc
pop
js
call
pop
mov
and
out
out
mov
mov
mov
shl
aas
push
pop
sub
mov
shl
test
loopne
pop
cmp
shr
cmp
mov
xor
cmp
repnz
lods
and
stos
aas
sub
inc
repz
jge
not
add
mov
xor
pop
jns
and
retf
leave
push
fwait
or
cli
out
popf
les
das
cs
int
inc
xchg
scas
push
aad
and
jbe
lock
jecxz
cmp
pusha
fnstcw
and
ret
dec
cmc
std
dec
mov
js
loope
adc
test
push
jne
jno
or
(bad)
in
in
or
lods
loop
push
mov
fld
popf
test
jecxz
pop
xchg
pop
mov
push
xchg
add
ret
xchg
xor
fistp
pop
iret
dec
retf
mov
adc
sub
xchg
inc
retf
cmp
push
adc
jnp
lds
xor
cmc
hlt
add
in
enter
inc
sub
jae
enter
aas
xchg
adc
aas
loopne
dec
in
dec
mov
mov
xchg
or
fst
mov
rcl
add
jp
loop
sahf
pushf
ins
aaa
xchg
mov
rcl
outs
hlt
ret
pop
push
cmp
xchg
and
push
jne
sub
and
rcr
(bad)
enter
scas
jne
sub
stos
mov
xchg
stc
push
xor
sub
pop
into
lea
jge
mov
dec
dec
jle
push
pop
or
and
lods
call
mov
loopne
pop
xlat
add
fmul
sub
pushw
pop
xchg
push
jg
enter
popf
push
add
outs
mov
jmp
xchg
mov
jmp
test
dec
shl
repnz
jo
xchg
mov
pop
jo
ss
test
jp
mov
xor
push
mov
inc
imul
rcr
pop
jmp
dec
xchg
cmp
adc
scas
cmp
imul
das
push
inc
ror
sbb
cmp
or
and
sbb
jl
push
addr16
jne
icebp
cmc
sub
xchg
daa
pop
mov
or
or
xchg
jne
sar
lsl
outs
scas
jg
retf
add
mov
mov
ins
jns
adc
and
stc
movs
retf
cdq
inc
cmp
xor
dec
add
xchg
xchg
ds
jb
mov
call
adc
add
sub
mov
add
push
sbb
mov
in
jmp
cmps
jle
mov
lods
xchg
daa
cwde
leave
call
or
pop
dec
mov
cwde
gs
aam
daa
sub
fs
test
jmp
scas
inc
jbe
loopne
pop
push
pop
das
das
sbb
sub
xchg
cmc
xchg
repz
cdq
cmc
daa
out
push
pop
lock
lods
shl
pop
retf
test
mov
or
(bad)
cmp
nop
daa
pop
ret
xchg
in
and
mov
out
pushf
xchg
xchg
push
enter
mov
dec
cmps
mov
lahf
jp
xor
xor
mov
sub
out
jmp
cmc
lahf
and
ret
sar
aad
push
adc
lea
pusha
in
xchg
mov
jge
lea
adc
scas
dec
(bad)
cmp
test
and
mov
out
xchg
std
and
js
pop
sbb
int
call
push
mov
ror
rol
sub
ins
cmp
jmp
out
jmp
xchg
(bad)
mov
mov
movs
jb
sahf
xor
add
outs
out
popf
enter
repz
test
and
scas
sub
cmp
cmps
add
aam
fldenv
xor
icebp
sar
aam
fst
sbb
shl
cmc
fdivr
cmp
addr16
jnp
les
retf
pop
cmp
dec
jecxz
out
scas
fsubr
popw
cmp
stos
imul
cmps
inc
cmp
push
rol
and
test
js
mov
out
hlt
pusha
xchg
retf
lds
mov
test
and
jge
repnz
pusha
inc
mov
mov
mov
or
jns
dec
fdivr
push
jae
xchg
xor
retf
dec
repnz
cmp
pop
scas
jb
add
das
daa
jp
mov
aam
out
(bad)
dec
ins
jge
mov
pop
xchg
sbb
xchg
lods
(bad)
daa
jns
pop
sbb
dec
sub
sub
push
retf
std
shr
lea
inc
nop
or
movs
and
dec
hlt
clc
inc
rcr
cmp
mov
lahf
inc
jmp
sub
movs
cmp
inc
cmp
pop
jle
fidiv
fs
xchg
cmp
(bad)
out
test
jge
mov
sbb
adc
mov
sub
jmp
adc
mov
xlat
adc
mov
and
push
jne
ret
test
arpl
(bad)
ins
jmp
dec
or
sar
not
xchg
mov
(bad)
mov
icebp
retf
enter
into
xchg
ins
call
and
daa
inc
cwde
js
push
xchg
push
push
inc
mov
dec
cmps
out
in
xchg
mov
fmul
cmp
dec
iret
(bad)
cli
das
mov
push
daa
mov
push
sub
fsubr
push
fld
pop
add
bound
inc
(bad)
mov
rcr
cmp
pop
das
sar
add
iret
imul
mov
jg
pop
sbb
mov
popa
lds
mov
dec
imul
aam
mov
dec
pop
jb
in
mov
or
cmp
pop
cld
cmp
shl
xor
ror
cmp
jne
xchg
push
cmp
jne
mov
xchg
cmp
jne
jo
addr16
stc
(bad)
cmp
jne
push
test
pop
add
sub
aas
repnz
or
or
jmp
daa
xor
out
or
push
or
push
ret
repz
mov
into
cmp
add
inc
xchg
mov
jp
or
shl
dec
test
je
loope
push
cli
bound
test
adc
mul
loope
sub
into
push
test
ja
mov
add
push
pop
call
add
jmp
dec
loop
inc
pop
mov
mov
xchg
cdq
xor
cwde
adc
mov
or
jb
fwait
cmp
dec
fbstp
inc
pop
mov
xchg
or
loope
aaa
xchg
loop
jge
rcl
sbb
jmp
sbb
in
pop
fdiv
sbb
mov
test
and
jp
adc
mov
or
nop
jmp
mov
sub
fimul
cs
cmp
pop
mov
xchg
es
jmp
loopne
push
xor
call
sbb
adc
(bad)
xlat
and
mov
mov
cwde
inc
ror
dec
cli
xchg
add
out
dec
jbe
sub
cmp
fcmovbe
mov
sbb
(bad)
rol
mov
or
xchg
jle
and
pop
shr
inc
ret
cmp
popf
shl
pop
pop
sbb
stc
inc
ret
stos
jg
adc
add
test
cmp
pop
dec
fcomp
push
xchg
out
xchg
xor
js
clc
jmp
inc
mov
push
inc
push
sub
cmp
push
dec
and
adc
mov
jmp
pop
call
xchg
and
call
ins
xchg
and
and
jmp
fdivr
sub
add
jno
out
sete
sahf
adc
adc
inc
add
cmp
inc
xlat
sbb
mov
iret
add
jp
sbb
repz
test
ss
das
push
into
cmp
cld
iret
in
mov
jp
test
xchg
shl
jg
pop
aad
jl
adc
iret
bound
out
sbb
jg
(bad)
push
xchg
xor
adc
sub
sub
sbb
mov
(bad)
jmp
cmp
fmul
fwait
test
inc
jne
stos
inc
sub
or
loopne
sbb
xchg
nop
jno
sub
fwait
pop
popa
sub
out
test
jne
daa
daa
mov
mov
dec
shr
sub
mov
mov
pop
cmp
adc
push
sub
aas
push
fwait
lds
and
or
aas
addr16
retf
inc
add
(bad)
es
cmps
arpl
jl
inc
daa
int
std
add
pop
sahf
add
pop
sbb
shl
cmp
mov
cmp
stos
stos
jae
cmps
retf
adc
frstor
sub
lea
daa
in
cmp
data16
xchg
mov
mov
cld
bound
xchg
or
jecxz
and
scas
xor
adc
cmp
call
push
and
xor
pop
mov
inc
and
xor
jo
or
cwde
cld
xchg
push
pop
aad
clc
push
sar
xor
push
add
xor
rcr
cmps
sub
sbb
loop
jg
sbb
inc
pop
(bad)
mov
ins
mov
mov
xchg
popa
cmps
das
cld
xchg
and
push
pushf
push
aad
cmp
xchg
test
cmp
xor
mov
inc
sbb
(bad)
xchg
jo
push
rcl
cli
je
inc
lea
ins
in
fucom
add
jnp
xchg
retf
and
mov
xchg
rcr
mov
dec
call
ja
xor
jp
jp
imul
xor
cs
sar
ror
cmp
dec
lods
mov
adc
inc
adc
out
outs
jmp
loopne
push
test
push
cmps
stos
loop
out
mov
pop
idiv
dec
ins
or
xchg
dec
xchg
jg
sub
mov
xchg
cmc
clc
rol
movs
push
icebp
mov
mov
in
xor
add
mov
sub
je
test
xchg
shr
in
test
in
out
mov
mov
enter
sar
daa
daa
mov
xchg
sub
adc
jle
add
in
dec
rol
pop
and
retf
hlt
sub
pop
cs
xchg
test
shl
adc
dec
or
outs
jmp
mov
pop
in
cwde
push
(bad)
sti
push
mov
jne
into
cvtpi2pd
clc
fcomp
daa
out
mov
cmp
mov
or
dec
mov
pop
in
test
sub
ret
add
jp
xor
(bad)
pop
je
xchg
sbb
test
push
js
inc
jnp
mov
mov
push
(bad)
jns
(bad)
dec
xor
mov
xchg
stc
pop
shr
and
(bad)
mov
xchg
push
pop
repz
and
adc
inc
mov
xor
and
push
xlat
pushf
pop
sbb
xchg
mov
test
dec
and
rcr
aas
iret
adc
or
nop
cli
fst
add
lods
ret
aas
(bad)
out
arpl
ficomp
aaa
pop
jne
and
cmp
into
cli
jmp
cs
(bad)
lods
add
adc
dec
xchg
(bad)
lea
push
push
jo
xchg
mov
xchg
in
xchg
das
jns
push
in
inc
mov
xor
mov
xchg
push
cmps
or
dec
aam
jl
fdiv
mov
mov
rcr
mov
jb
call
aas
imul
retf
(bad)
and
popf
mov
int
add
inc
adc
mov
in
mov
push
jne
sub
mov
ret
jp
mov
clc
and
dec
cld
hlt
xchg
mov
std
in
in
pop
adc
adc
push
ret
mov
pop
pop
cwde
retf
sbb
pop
xchg
and
dec
push
into
xchg
xchg
adc
jmp
test
push
mov
dec
test
add
xor
mov
jmp
mov
add
in
add
mov
cmps
dec
push
and
ins
fidiv
push
inc
rcr
cld
jne
sub
adc
shl
ds
and
lea
push
jle
add
add
xor
loopne
dec
sbb
repz
inc
xchg
dec
pop
add
aas
scas
out
xor
jp
mov
add
mov
lea
add
mov
les
inc
mov
popf
push
stc
loop
icebp
cmp
repz
leave
scas
mov
add
jae
mov
mov
cmp
rcl
jbe
sub
test
mov
das
test
sbb
and
mov
and
add
xchg
dec
xchg
jge
xor
adc
push
ins
mov
lea
xchg
dec
les
mov
(bad)
loopne
jmp
in
call
jp
xor
dec
in
outs
or
push
add
rcl
cmc
push
add
inc
jle
push
sbb
cmp
in
pop
popf
adc
push
dec
leave
aaa
fld
cmp
xor
jns
jne
push
hlt
xor
dec
(bad)
call
cld
fidivr
push
(bad)
adc
xlat
aaa
xchg
mov
ins
jge
loopne
sub
cmp
repz
mul
daa
or
jp
xor
aad
and
jmp
mov
or
loope
push
(bad)
fild
jp
push
mov
pop
sub
mov
sbb
rcl
mov
fnstenv
mov
pop
jmp
lock
push
pop
ror
(bad)
or
push
pop
outs
sbb
cmp
scas
out
retf
cmc
xor
push
jnp
adc
inc
inc
mov
mov
or
xchg
push
xchg
retw
stos
add
push
sub
movs
cmps
sbb
and
jns
fdivr
add
dec
jae
push
cmp
stos
push
leave
dec
fwait
(bad)
cmp
cmp
xchg
sti
jge
xchg
jno
mov
lods
mov
ins
cmps
std
xor
xor
jp
pushf
aam
cmc
dec
cmp
dec
popf
call
rcr
fadd
mov
push
shl
xor
and
push
movs
imul
mov
int
jecxz
arpl
xor
aad
add
dec
pop
nop
xor
mov
inc
arpl
inc
adc
jg
xchg
dec
bound
retf
dec
mov
loope
repnz
xor
js
ror
fdiv
shl
sub
jge
daa
cmp
dec
mov
adc
clc
not
add
push
rcr
xor
push
fld
les
jg
or
jle
fwait
shl
jb
mov
outs
jl
sbb
sbb
sub
cli
inc
arpl
adc
xchg
cmp
sub
dec
in
push
push
sahf
sub
inc
jp
push
mov
das
js
adc
lds
sub
(bad)
cdq
retf
pop
xchg
hlt
cmp
dec
cmc
into
dec
clc
popf
push
or
push
(bad)
scas
lahf
push
sub
fisubr
sbb
inc
in
inc
xchg
clc
je
cld
push
xchg
loop
push
or
retf
sub
cld
bnd
jl
vunpckhps
add
add
cmps
cmp
jbe
rol
stos
sbb
addr16
and
sbb
xor
cmp
(bad)
xor
out
jno
ret
adc
push
cs
and
les
pop
cmp
rcr
or
add
jne
call
cmc
repnz
sbb
cmp
mov
iret
dec
cwde
jge
adc
(bad)
mov
jbe
pop
pop
xor
sbb
test
and
pop
xor
in
cli
pop
lock
iret
cmp
int
pop
clc
fcom
imul
jle
mov
xor
sub
std
lods
outs
loope
pop
div
pushf
mov
lea
cmp
ds
mov
loopne
cmps
jg
fs
mov
fistp
loope
sbb
fdiv
sar
or
and
push
(bad)
int
push
cld
(bad)
call
sbb
push
std
loop
inc
lods
sub
fadd
cmps
push
in
lock
xchg
add
push
mov
inc
sti
outs
pop
xchg
ret
sub
cld
inc
loop
jne
cmps
sbb
add
cli
imul
xchg
repnz
and
pop
xor
stos
and
xor
into
cmp
sbb
cmc
sub
push
into
bnd
sub
jne
add
ss
push
sbb
(bad)
rol
stos
std
fimul
xchg
jmp
cli
fnstsw
inc
sub
call
leave
push
cdq
inc
jmp
lea
sub
push
xchg
in
push
jle
cmp
ror
stc
test
call
inc
pop
lahf
adc
mov
xchg
mov
xor
sbb
popa
or
adc
fld
imul
xlat
push
fld
adc
cs
stos
mov
sub
les
scas
cmp
inc
cs
les
adc
mov
dec
cmp
inc
js
stc
bound
cmp
lods
test
mov
adc
add
(bad)
int
add
mov
lahf
or
js
xchg
sbb
je
js
imul
sbb
xchg
call
cwde
sub
dec
retf
fadd
and
mov
std
inc
xchg
jns
inc
test
data16
or
ds
xor
rol
dec
stos
nop
cmp
data16
mov
xor
cs
loope
fsubr
aas
shl
xor
repnz
(bad)
mov
lock
imul
pop
push
cdq
test
push
retw
fdiv
cmp
iret
pop
xchg
xchg
daa
xchg
sub
push
shl
cmp
call
cmp
xchg
xchg
pop
mov
add
test
mov
ins
neg
xor
div
mov
ret
retf
cmps
jno
movs
dec
xor
pop
adc
lahf
dec
enter
mov
jg
mov
(bad)
jp
stc
(bad)
pop
and
adc
pushf
jp
mov
pop
shr
mov
mov
xor
imul
jo
cmp
call
out
pop
push
and
jnp
movs
mov
js
add
jbe
test
and
fdiv
les
pop
bound
mov
(bad)
out
xor
adc
jg
dec
sti
pop
or
mov
and
outs
shr
js
cld
mov
jp
mov
shl
jle
push
sub
cmp
imul
dec
jp
push
mov
lock
sub
pop
cmp
cmc
fs
ret
pushf
add
(bad)
leave
pushf
inc
jmp
outs
add
lods
das
jl
or
add
sbb
ins
xor
das
pop
push
sub
lods
add
sar
inc
pop
scas
sub
cmp
pcmpgtw
jns
xor
mov
xor
xchg
adc
mov
aam
cld
addr16
sbb
push
sahf
push
xchg
pop
inc
sub
in
inc
ins
outs
xchg
pop
adc
or
adc
daa
sub
imul
push
pop
test
ret
aas
add
movs
cmps
xchg
cs
xor
sub
xchg
xor
ret
sub
repnz
(bad)
mov
inc
std
jno
sar
shr
sar
xchg
push
push
adc
sbb
add
lahf
sub
adc
sti
adc
jo
push
mov
xchg
mov
rcr
adc
mov
ja
sbb
mov
fbstp
pop
mov
hlt
pusha
dec
mov
ret
adc
es
mov
cmp
push
fsub
jae
push
in
ins
adc
push
mov
pop
clc
cmp
push
imul
mov
cs
fwait
xor
out
cmp
mov
jae
mov
adc
push
ins
std
or
test
jb
pushf
push
ds
mov
pop
jge
dec
push
mov
out
mov
jmp
jns
dec
push
test
mov
xchg
push
add
fimul
fs
fst
std
pop
jae
adc
imul
cli
cmp
loop
pop
cmp
scas
mov
inc
sub
mov
pop
inc
test
aad
cmp
cs
cs
loopne
cli
sub
pop
xor
stos
xor
call
je
fld
pop
sub
add
xchg
adc
rol
jnp
push
sub
test
cmp
and
xor
jae
rcr
std
dec
cmp
pop
xchg
ret
outs
fiadd
pop
cmp
sbb
cmp
aam
jnp
ja
shl
add
jmp
jp
aad
pop
lods
retf
mov
inc
in
push
scas
jnp
jmp
pop
or
aam
dec
and
sar
sbb
pusha
fidiv
daa
fisubr
adc
mov
ds
cmp
test
xor
jle
xchg
pusha
cli
scas
pop
push
stos
js
sub
dec
ret
adc
imul
dec
repnz
imul
out
pushf
fcom
out
sbb
xchg
mov
sub
adc
mov
(bad)
jo
hlt
pop
push
cmp
add
mov
push
mov
mov
sub
pusha
xor
push
dec
loope
rol
inc
gs
and
cmp
push
sahf
in
in
nop
into
xor
dec
pushf
dec
ja
(bad)
cmp
pop
sahf
stc
out
xchg
push
fwait
xchg
pushf
bound
sbb
fcmovnbe
clc
dec
pop
popa
ror
les
ficom
retf
jp
fcom
retf
push
jns
xchg
cmps
jae
dec
lods
sahf
ds
mov
xchg
lahf
push
fisttp
sub
jmp
mov
push
xchg
fucompp
xchg
mov
pop
mov
(bad)
js
nop
mov
les
mov
cdq
js
push
add
retf
repnz
mov
xor
add
cmc
sbb
sbb
cmc
xor
xor
repz
cs
jae
mov
jne
dec
je
add
bound
sbb
xchg
xchg
mov
or
cmp
into
mov
loopne
cdq
jbe
sub
xor
test
mov
ja
xor
(bad)
mov
and
fdiv
loopne
dec
fbld
push
mov
push
sti
test
xchg
sbb
add
int3
dec
or
out
sbb
or
cmp
push
cmps
sub
cmp
or
inc
js
push
lock
pop
dec
ins
jnp
inc
mov
lahf
cwde
ds
stos
add
mov
std
hlt
cmp
mov
or
jne
sbb
fcom
jmp
sub
and
adc
or
mov
movs
ret
retf
sahf
in
xor
pop
ins
lds
mov
cmp
sub
outs
push
xchg
xchg
xchg
fiadd
cmps
cmc
pop
test
mov
test
mov
push
pop
adc
push
scas
xchg
cmc
jmp
sub
shr
sub
in
and
add
add
pop
cmp
sbb
push
sbb
mov
lahf
jge
stos
sub
std
pop
les
sbb
jne
inc
hlt
lods
inc
cmp
ret
and
retf
jge
cmps
(bad)
jp
sar
cmp
push
jno
xor
out
push
das
cmps
jge
mov
dec
xchg
cdq
(bad)
jge
add
test
mov
data16
sbb
jmp
sbb
jl
add
pop
jl
imul
and
leave
(bad)
(bad)
popa
xor
mov
jl
dec
(bad)
cld
jno
repnz
jl
ins
dec
add
cdq
xor
jnp
mov
pop
jl
dec
sbb
mov
inc
jl
sub
jnp
push
iret
outs
sbb
idiv
jnp
ins
lods
lods
aaa
pop
jle
imul
jl
sbb
sub
test
std
ins
xor
jp
scas
pop
stos
xchg
and
mov
and
jle
in
pop
push
pusha
adc
sub
jne
mov
sbb
imul
mov
mov
daa
sbb
in
push
xor
jmp
ja
icebp
ins
xor
mov
mov
pop
ja
(bad)
adc
inc
jno
mov
jae
mov
mov
lods
dec
jl
hlt
call
sahf
repz
mov
shl
jae
adc
mov
mov
or
xchg
cmp
mov
outs
sub
lods
jo
mov
or
sbb
sbb
(bad)
ror
rcl
rcl
adc
jne
adc
xor
fld
sub
ltr
loopne
gs
rcr
leave
sub
jne
pop
repz
push
lock
add
and
lds
cmp
lds
(bad)
aam
push
mov
mov
xchg
cli
sbb
inc
sub
inc
dec
xchg
cmp
push
stos
es
inc
(bad)
enter
xchg
sub
rcr
jo
jmp
ror
sbb
mov
add
arpl
sbb
fwait
adc
cmp
in
jns
sub
loope
adc
std
fadd
xchg
jns
dec
rcr
in
dec
mov
inc
adc
lds
pushf
xor
pushf
jbe
cmp
psubb
js
dec
fdiv
mov
jp
(bad)
mov
add
xor
jecxz
mov
xchg
movs
cmp
push
inc
fsubr
mov
fs
imul
mov
sub
add
adc
jno
js
xchg
dec
mov
pusha
dec
fwait
inc
xor
xor
push
xchg
xor
sti
push
pop
push
push
hlt
sub
push
addr16
xchg
loopne
jmp
aad
dec
(bad)
push
sar
jne
push
or
xor
sahf
loop
mov
inc
test
lock
xor
sub
jo
cld
ffree
adc
enter
push
cmp
pop
push
or
xchg
dec
pop
in
push
dec
adc
xchg
arpl
push
test
shr
gs
xor
enter
xor
or
push
ror
hlt
pop
jp
lds
or
test
loope
mov
xor
ret
cmp
push
loopne
xchg
pop
dec
sar
stc
ss
je
mov
ret
fcom
xor
xor
cmp
lock
(bad)
out
and
adc
cmps
pop
in
inc
js
js
cmc
mov
cmp
ret
in
popa
xchg
pop
cmp
push
enter
fmul
and
popf
adc
int3
cmp
fsubr
pop
out
push
add
hlt
sub
sbb
inc
and
mov
cmc
lahf
jae
xchg
jne
loopne
adc
daa
ds
sbb
inc
pusha
test
scas
out
(bad)
ins
xor
repnz
xchg
retf
je
cmps
cmp
inc
cld
ins
cs
mov
clc
jg
neg
scas
pop
cmp
xchg
adc
cwde
leave
push
sub
in
std
adc
add
xchg
pop
cld
(bad)
mov
mov
mov
bound
or
imul
mul
jns
movs
hlt
sub
pop
xchg
aas
jmp
jnp
imul
icebp
mov
inc
je
xor
dec
call
add
xchg
pop
std
adc
push
cwde
cmp
loope
or
jge
adc
retf
mov
ins
es
adc
aad
les
mov
leave
pop
aam
retf
pop
test
stos
ret
pop
cli
dec
loopne
out
pop
das
leave
pop
repz
test
out
cmp
xchg
mov
retf
(bad)
sbb
fidivr
mov
sub
fwait
std
mov
pop
addr16
call
push
sbb
jns
xchg
or
jp
add
xchg
retf
jp
mov
or
stos
cmp
mov
sbb
push
dec
stos
mov
jmp
mov
(bad)
jne
add
dec
hlt
nop
out
mov
pop
xor
push
sahf
fs
xchg
push
daa
mov
mov
call
inc
int
rcl
mov
push
loop
pop
push
nop
cmc
cmps
mov
ds
fdiv
xor
retf
inc
sub
cmc
lods
in
jge
std
jns
ins
dec
fistp
cli
fldcw
stc
cmc
mov
or
add
mov
add
pop
cmp
rol
in
pop
adc
arpl
inc
dec
popf
out
shl
test
mov
in
xor
and
stc
js
and
jmp
test
pop
rol
push
mov
lds
sub
and
fcmovu
mov
lods
gs
ds
and
xor
pop
sti
cmp
repz
xchg
aad
mov
mov
gs
push
xchg
push
mov
xchg
popa
xchg
std
pop
adc
lahf
mov
jecxz
xor
add
pop
in
push
loopne
dec
inc
pop
pop
add
imul
sar
mov
and
mov
push
cmp
fidivr
jmp
jmp
xchg
(bad)
jmp
jae
sub
cmp
retf
unpcklps
ins
fincstp
push
push
xchg
cdq
dec
iret
pop
sub
mov
call
push
pop
xor
pop
inc
pop
or
cdq
in
xchg
dec
out
xchg
adc
sahf
popa
leave
mov
in
inc
pop
xor
aad
lods
sub
int3
jp
leave
lahf
in
daa
xchg
outs
shl
movs
cmp
xchg
(bad)
retf
loop
sbb
rol
lock
cmp
jmp
mov
sub
fsubr
push
outs
push
jne
adc
mov
idiv
jns
jne
push
mov
push
mov
pop
cdq
mov
pop
fimul
push
and
sar
mov
cld
cmp
hlt
jmp
es
fst
js
sub
cmp
xchg
inc
xor
dec
rcl
stc
push
outs
in
cmp
xor
pop
xor
push
mov
and
popf
daa
loopne
pop
sub
dec
cmps
aas
pusha
retf
jmp
call
vmovdqu
jle
nop
rcr
out
xchg
xor
sub
fdiv
and
ss
aam
pusha
cmp
ret
jl
cs
xchg
rcl
loopne
test
mov
and
shr
xchg
dec
mov
cmp
xchg
dec
imul
jno
mov
pop
(bad)
xor
dec
hlt
shl
xchg
push
inc
fiadd
cmps
daa
in
jo
std
push
inc
jl
dec
rcr
mov
aam
vzeroupper
xchg
add
inc
cwde
inc
ins
loope
in
mov
pop
xor
lea
fisttp
popf
js
mov
ror
fnstenv
movs
in
(bad)
ficomp
push
mov
sbb
leave
cmp
mov
aam
addr16
push
mov
in
stc
jl
cmp
or
push
lods
or
mov
add
out
or
mov
aas
test
mov
leave
push
push
call
retf
cli
ret
enter
push
jmp
js
xchg
int
xor
cmc
mov
sub
sub
or
adc
ficom
call
mov
xor
jg
mov
sub
mov
mov
and
xor
mov
and
repnz
repz
add
or
imul
sub
(bad)
fsubr
outs
lods
xchg
sbb
test
adc
xlat
cmc
outs
arpl
adc
js
adc
pop
cld
or
cmp
jmp
push
jo
jle
sbb
sbb
(bad)
imul
xchg
loope
mov
and
and
sub
js
movntps
inc
pop
fld
fchs
cwde
jmp
movs
xor
mov
cmp
push
cld
jne
jl
cmp
cmp
sub
xchg
(bad)
icebp
shl
test
ret
movs
cmp
and
in
(bad)
jle
xor
push
fs
std
jp
add
xchg
or
pop
je
push
sbb
sub
cmp
repz
iret
cmp
pop
xchg
inc
jns
out
push
xchg
mov
xchg
std
and
ror
push
sar
ins
pop
add
out
sahf
sbb
ret
sbb
mov
hlt
pop
adc
addr16
fcom
lds
pop
call
dec
adc
ins
mov
cld
icebp
(bad)
fnstcw
aas
cmp
shl
pop
aam
sub
jb
cmc
fidiv
or
mov
mov
retf
aad
xchg
adc
nop
arpl
inc
test
loop
xchg
mov
dec
mov
stc
adc
xchg
movhps
in
imul
shr
mov
lods
imul
or
sub
aam
ins
xchg
in
xchg
shl
mov
xchg
out
add
xchg
inc
popf
aaa
ds
mov
rcl
jne
rep
(bad)
jl
outs
std
mov
jns
or
add
bound
(bad)
fld
inc
xchg
repz
lahf
push
mov
js
mov
mov
jne
push
mov
cmp
je
adc
sahf
enter
sub
pop
add
jle
sub
js
retf
in
adc
out
ret
xor
dec
xor
and
jbe
mov
jae
daa
push
pushf
add
jmp
mov
and
add
add
push
(bad)
mov
sub
inc
ret
pop
cmc
imul
rcr
in
mov
aam
test
pop
sub
daa
ins
data16
ror
adc
dec
loop
cwde
and
lods
ret
repz
xchg
push
cmp
nop
push
sub
and
fwait
xor
push
out
cdq
sub
cmp
jcxz
pop
add
lahf
ret
push
(bad)
in
jp
pop
jmp
mov
adc
cmp
in
hlt
jge
xchg
ret
push
and
stc
jmp
pop
hlt
xchg
xor
pop
fsubp
mov
cli
out
les
sbb
xchg
pusha
pop
(bad)
sub
je
es
cwde
sti
mov
xor
stc
inc
pushf
push
cmc
int3
mov
dec
nop
mov
retf
mov
aam
js
pop
mov
jne
ins
mov
mov
jmp
pop
xchg
xchg
inc
add
mov
sub
inc
xor
sbb
dec
jmp
ffree
hlt
sub
push
mov
mov
sete
stos
into
retf
xchg
rep
dec
adc
retf
ins
call
add
(bad)
aam
stos
push
cmc
retf
repnz
adc
movs
sub
xchg
sub
xchg
stc
test
mov
or
mov
gs
movs
push
loope
sub
sbb
mov
xor
pop
adc
cmp
mov
sub
mov
jo
cmc
push
jp
add
sub
int
es
aaa
inc
loopne
jle
push
std
std
mov
jnp
pop
cld
pusha
clc
shl
gs
xchg
aas
push
test
mov
push
ja
mov
daa
fimul
sub
sub
retf
int
cld
xor
and
jmp
xor
call
cwde
and
call
and
jp
rcl
(bad)
sahf
mov
lock
mov
in
lods
repz
jne
daa
pop
or
adc
xor
cdq
ret
ret
cmc
push
inc
lea
arpl
aaa
add
push
jae
dec
xchg
std
mov
push
mov
les
sar
mov
and
add
test
xor
adc
push
add
add
(bad)
push
xor
arpl
cld
mov
cmp
(bad)
push
loope
or
sbb
cmp
sbb
(bad)
inc
sbb
adc
loope
xchg
push
xchg
pop
cld
jns
mov
ror
nop
adc
and
cdq
pusha
add
stc
out
lods
mov
push
xor
ror
ss
stos
push
out
mov
pusha
into
and
mov
in
inc
call
loope
dec
nop
cld
in
adc
pushf
xchg
sbb
int
iret
int3
pop
in
xchg
xchg
sahf
jmp
pop
xor
fist
dec
pop
ds
shr
js
in
scas
test
jns
bound
out
add
xchg
jmp
(bad)
sub
mov
(bad)
mov
movs
sub
scas
or
add
repz
fwait
pop
fs
lods
jmp
sub
push
cld
and
aad
fimul
jge
add
or
sbb
test
pop
dec
pop
jle
push
mov
add
cmc
xor
sar
retf
mov
cdq
sub
or
pop
clc
je
or
cld
and
xchg
xchg
addr16
or
sub
adc
inc
leave
ins
dec
ins
push
mov
xor
cmps
jmp
sahf
xchg
xor
leave
outs
inc
cld
pop
lods
xchg
int3
push
clc
call
add
adc
xchg
pop
adc
mov
popa
rcl
jmp
xchg
mov
std
sub
dec
cmp
pop
retf
or
add
add
cmp
pop
fsubr
(bad)
in
ins
cld
loopne
pop
add
mov
xchg
and
std
out
adc
addr16
push
ins
je
mov
js
add
mov
fst
out
out
jle
xor
jo
xor
pop
jg
clc
fcmovnbe
(bad)
leave
fist
shl
in
xchg
daa
or
cmp
sbb
xchg
or
mov
cs
or
retf
(bad)
addr16
xlat
pop
nop
cmp
push
inc
adc
add
or
loope
imul
adc
add
adc
inc
inc
in
(bad)
xchg
mov
mov
cmp
dec
nop
adc
xor
into
test
call
int
pop
dec
xlat
imul
xor
cwde
loopne
mov
and
inc
mov
xchg
imul
icebp
ss
mov
push
fldl2t
or
sub
add
add
(bad)
mov
mov
adc
jp
loope
xchg
popf
imul
iret
sbb
leave
and
mov
lods
pop
inc
(bad)
cmp
adc
aad
sbb
je
xor
xchg
inc
push
jne
sub
mov
jl
xchg
div
ret
das
or
jp
sahf
in
fs
xchg
mov
jg
xchg
enter
ins
push
jns
iret
call
pusha
fsqrt
imul
mov
or
mov
mov
cdq
fstp
test
jae
popa
pusha
xor
sbb
arpl
ss
sbb
sub
jmp
xchg
les
arpl
push
inc
jbe
clc
cs
dec
sbb
jl
or
ss
js
add
sahf
outs
data16
loopne
dec
push
(bad)
xchg
dec
out
sti
call
push
out
xchg
push
or
outs
cs
ins
xor
and
loop
cmp
push
ds
out
mov
add
loope
in
xchg
pusha
dec
into
cmp
xchg
jns
retf
mov
cmps
jnp
(bad)
pop
stc
jg
aad
addr16
jnp
or
dec
ret
les
(bad)
mov
ds
jp
xor
(bad)
fild
repz
ficom
xor
and
mov
outs
outs
call
mov
fnstenv
lds
leave
ret
jae
clc
mov
mov
sub
jae
loope
or
cdq
neg
cmp
jge
aam
test
fidivr
jmp
push
sahf
rcl
scas
sbb
test
lea
lods
fisttp
iret
mov
imul
adc
and
cmp
jl
shr
pop
addr16
pop
mov
test
and
call
dec
jg
pop
xchg
mov
je
mov
dec
jne
push
jmp
sbb
fisub
mov
push
retf
adc
jp
ds
bound
add
popa
sub
or
mov
mov
xor
inc
and
in
push
and
sub
movs
adc
(bad)
pop
bound
push
loopne
jne
(bad)
pusha
call
mov
rol
lea
dec
xchg
jne
cmps
mov
dec
fidivr
push
and
hlt
and
iret
dec
jmp
out
add
loopne
sub
jg
scas
ficom
or
je
xchg
and
clc
add
inc
or
nop
int
jns
pop
imul
xchg
pop
sbb
pop
call
or
jl
fdivp
jno
ins
sub
loop
popa
jge
mov
push
enter
fs
xchg
mov
and
xor
jmp
sahf
(bad)
es
ja
cmp
jmp
add
out
jp
aad
test
(bad)
stos
xor
cmc
inc
scas
push
retf
test
cmp
push
dec
jne
pop
cmp
nop
inc
mov
mov
daa
arpl
add
dec
sub
cmc
pop
pop
mov
xchg
shr
adc
mov
aad
jne
and
mov
les
jae
dec
xchg
push
mov
jb
pop
data16
mov
cmp
push
imul
jmp
in
sbb
mov
jae
xor
sahf
cmp
pop
jmp
and
add
xor
fnstsw
adc
loop
jl
icebp
stc
test
push
sbb
ret
jmp
test
shl
sub
das
xor
mov
and
rol
push
cmp
fistp
and
pushf
fidivr
inc
cmp
lahf
add
push
in
jmp
ret
cmp
pop
mov
cmp
dec
xor
sub
scas
mov
in
dec
(bad)
nop
loop
pop
fadd
sahf
mov
call
je
cmp
shl
xchg
sub
repz
push
and
leave
es
or
jl
loope
sub
cmp
mov
test
sbb
mul
(bad)
cmc
fs
inc
pop
sar
out
fs
adc
je
and
das
xchg
pop
imul
imul
loop
shl
pop
push
nop
xchg
shl
jbe
lods
and
inc
push
je
arpl
cmp
aad
shr
dec
dec
or
pop
inc
xchg
inc
mov
daa
or
push
test
mov
dec
xchg
into
jg
mov
aam
sub
and
imul
jle
jle
clc
icebp
pop
dec
pop
dec
stos
fldcw
and
xchg
jp
shl
push
push
scas
push
js
pop
xchg
xchg
cmc
dec
xchg
fcmovu
push
pop
jb
jne
jp
push
push
fst
sbb
mov
mov
sub
call
jl
and
rol
xor
fwait
sbb
jns
mov
add
jb
sar
je
test
sub
inc
addr16
pop
dec
xchg
sbb
xchg
mov
dec
fcmovnbe
xor
jp
sbb
lock
mov
stc
hlt
xchg
repz
call
mov
sbb
int
mov
xor
inc
jbe
hlt
add
mov
les
or
lock
sbb
xchg
aaa
out
pushf
in
mov
jne
and
shr
test
push
and
out
dec
mov
sahf
pushf
push
test
fwait
add
es
mov
in
fidiv
(bad)
xlat
outs
cmps
adc
(bad)
jp
call
es
verw
add
mov
xchg
out
movs
or
jo
jne
ins
xchg
fild
pop
pop
jmp
aam
cld
js
int3
mov
or
inc
sti
cld
scas
or
sbb
or
repz
daa
sub
mov
cmp
(bad)
loopne
outs
mov
jg
fstp
cli
rcl
jg
fidivr
push
das
fs
dec
push
inc
xchg
dec
je
icebp
test
fidiv
cmp
stos
jbe
loop
cld
xchg
pop
not
mov
retf
(bad)
(bad)
in
sub
mov
adc
pusha
add
and
loopne
xor
sub
dec
xor
jne
pop
es
stos
mov
xchg
ins
cdq
mov
mov
push
pusha
sbb
mov
es
dec
push
push
je
loop
stos
dec
add
and
push
xchg
dec
ds
push
movs
or
loopne
cld
adc
pop
pushf
jb
xchg
shr
cli
sbb
mov
js
aas
ds
in
jg
mov
retf
add
adc
xchg
loope
pushf
add
and
add
test
cmp
cmp
cmps
sub
fcomp
and
das
data16
pop
inc
jo
cdq
imul
cdq
jbe
je
add
out
push
fisub
mov
push
ficomp
and
mov
enter
cmp
sahf
stos
push
(bad)
enter
loope
aas
or
pop
fdivr
mov
ja
jmp
sbb
ret
in
repz
inc
jo
pop
pop
loop
and
jae
fsubr
dec
repz
cld
retf
aas
lods
jmp
pop
sub
mov
add
lahf
bound
xchg
xchg
mov
dec
xor
js
dec
inc
xchg
stos
scas
jge
xor
lds
xor
and
ret
and
xor
mov
adc
mov
mov
push
push
add
iret
pop
aas
mov
cwde
jmp
jmp
mov
outs
xor
jne
fimul
jns
mov
sbb
and
xor
xchg
rcl
inc
sub
std
xchg
mov
ror
repz
sbb
dec
mov
or
sbb
out
test
into
jg
fsubr
(bad)
jns
ret
xchg
pushf
dec
or
and
call
imul
ret
pop
xchg
pop
aad
lea
push
cmp
lods
mov
jbe
test
cmp
cmp
jmp
push
jg
mov
out
jmp
cmp
test
rcl
push
jne
call
push
clc
xchg
test
ret
out
stc
je
out
xor
pop
loopne
in
mov
bound
ins
inc
jle
cmp
add
mov
push
cmp
loopne
cdq
mov
push
outs
jmp
mov
mov
or
jns
mov
push
and
sub
jecxz
(bad)
pop
test
ins
mov
in
or
cmp
push
dec
sub
cdq
jne
test
mov
cmp
aad
sbb
push
popa
adc
or
dec
mov
xor
les
pop
adc
xchg
xchg
repz
pop
sbb
mov
sbb
(bad)
lea
adc
or
movs
pop
or
neg
add
(bad)
mov
mov
loopne
sar
fwait
out
stos
xchg
xor
xchg
xor
data16
repnz
sub
xchg
dec
gs
adc
mov
movs
icebp
(bad)
call
shl
jp
clc
or
push
not
cwde
cmc
mov
sbb
retf
mov
adc
ret
cs
cld
sub
out
hlt
ror
loopne
adc
(bad)
fdivr
mov
data16
xchg
std
mov
jns
js
jg
pop
fadd
daa
sahf
or
ds
sub
xchg
add
xchg
bound
push
cmp
loopne
push
push
push
icebp
out
into
push
dec
(bad)
cmp
sub
jno
rol
imul
mov
in
js
out
add
and
xlat
mov
jp
adc
or
jae
mov
adc
leave
push
pop
xchg
js
push
adc
jmp
je
jne
sub
sub
mov
in
mov
jnp
outs
repz
cmp
pop
push
jo
cld
fsubr
out
int
fisub
enter
lods
bound
daa
ins
data16
sbb
adc
sahf
dec
stc
les
movs
mov
xor
sub
xchg
push
xchg
jmp
and
mov
xchg
add
ret
xor
dec
mov
(bad)
cmc
inc
xchg
gs
addr16
daa
les
mov
jmpw
push
ins
sub
push
push
inc
pushf
mov
xchg
mov
std
js
add
mov
lds
fisub
mov
fwait
loopne
(bad)
dec
cmp
push
push
mov
jle
cmp
xchg
inc
cmp
push
aaa
mov
hlt
inc
cs
cmps
add
imul
cli
inc
stos
mov
xchg
cld
jp
out
xchg
shr
(bad)
in
popf
mov
lods
dec
lahf
jne
gs
jbe
xor
addr16
mov
sar
cwde
and
call
or
jb
(bad)
in
cmp
test
sbb
lods
out
fst
jae
sub
and
cmp
push
ret
jo
ret
cmps
lods
sbb
dec
fcomip
pop
test
idiv
imul
mov
xor
push
xchg
ret
outs
sbb
jnp
and
inc
xchg
pop
js
cmp
and
push
cmp
ret
pushf
es
and
push
js
xchg
retf
in
mov
pushf
js
push
xchg
cmp
shl
jns
hlt
mov
cmp
jg
movs
jae
daa
sub
sub
mov
jns
mov
xor
ins
push
scas
popf
cmp
push
adc
mov
dec
fisttp
adc
jne
ds
cmp
mov
les
mov
test
(bad)
out
dec
mov
in
xchg
sub
leave
xor
clc
sub
data16
dec
dec
out
jnp
push
neg
cmps
ja
jmp
xchg
call
mov
leave
fadd
es
mov
loopne
xchg
pop
test
jne
in
jmp
xchg
cdq
or
pop
cmp
xchg
push
ror
fcomp
mov
xor
inc
jns
mov
dec
sub
jecxz
mov
mov
push
movs
mov
adc
ret
ret
xor
fnstsw
push
repnz
les
jns
inc
mov
repnz
and
test
xor
dec
fidivr
xchg
dec
loop
out
mov
add
loopne
in
xor
test
std
adc
loope
lds
in
sub
retf
std
es
jp
lock
bound
jns
mov
cmc
add
and
dec
jb
xchg
mov
add
inc
cmp
fwait
push
jge
jmp
jnp
or
shl
inc
dec
es
xchg
sbb
mov
xchg
jge
sub
adc
pop
fld
ret
dec
sbb
hlt
call
ins
mov
push
out
ins
mov
sub
mov
xor
shl
push
mul
pop
add
mov
cmp
adc
inc
mov
bound
xchg
call
dec
and
scas
mov
mov
pop
cmp
dec
movs
and
and
mov
mov
inc
inc
cdq
psubd
mov
sub
mov
cmp
xchg
xchg
jp
jl
lods
les
dec
cmp
mov
jne
xchg
inc
mov
or
in
jl
add
mov
mov
shl
loop
in
xchg
into
pop
cli
xchg
or
(bad)
mov
sbb
pop
inc
sbb
push
dec
xchg
push
mov
push
mov
retf
or
in
outs
ins
icebp
or
pop
mov
dec
je
mov
movs
scas
jl
adc
pop
outs
mov
fst
mov
in
push
inc
sbb
xchg
inc
and
mov
lds
mov
cmp
test
xchg
jbe
sbb
popf
mov
jge
das
bound
dec
sar
pop
adc
push
ja
cld
mov
(bad)
into
in
jo
out
push
into
jae
fs
jb
pop
or
imul
bnd
and
leavew
pop
sti
xchg
xor
and
in
jle
jmp
dec
inc
push
push
(bad)
ds
cwde
inc
(bad)
pushf
int
mov
mov
cmp
inc
and
loop
mov
push
test
jne
jle
dec
add
(bad)
loopne
neg
dec
shl
lea
mov
inc
shr
iret
xchg
retf
inc
loopne
cmp
jne
imul
out
push
out
lods
xchg
vpor
jecxz
fisttp
je
jmp
push
mov
push
jns
xchg
mov
xor
mov
inc
out
mov
in
dec
mov
ins
xchg
cmp
retf
sbb
stos
jmp
pop
fdivr
or
leave
jp
jge
push
sub
(bad)
gs
ret
in
repz
and
push
lods
popf
xor
jp
xchg
dec
in
or
push
push
sti
ins
jge
cmp
and
call
dec
mov
into
fnstsw
xchg
push
mov
cmc
xchg
xchg
cmp
mov
xor
inc
xchg
adc
sub
nop
mov
enter
sbb
dec
xor
jne
push
fwait
pop
int3
jo
(bad)
mov
repz
mov
(bad)
mov
jp
mov
dec
(bad)
xchg
adc
ins
cmp
push
iret
or
dec
push
mov
cmp
ret
and
xor
xor
sbb
repz
test
fbld
add
sbb
xor
mov
pop
cmps
mov
js
pop
or
push
push
inc
mov
cmp
dec
sti
sub
in
inc
out
das
jle
sbb
sbb
call
pop
and
mov
fsubr
int
adc
pop
sbb
mov
add
lahf
xor
add
push
dec
pop
cmc
popf
xchg
or
ds
inc
mov
ins
aaa
xchg
imul
xor
fild
add
mov
fdiv
push
xor
mov
ins
sbb
test
and
ret
pop
retf
(bad)
mov
xchg
shr
or
cmps
jnp
dec
dec
(bad)
mov
or
(bad)
pop
push
(bad)
(bad)
stos
in
jne
and
(bad)
in
test
pop
or
out
shl
js
bound
cmps
cwde
(bad)
fcomp
xchg
xor
test
mov
cmps
jns
call
xchg
push
or
test
xchg
and
push
or
rcr
jmp
test
mov
in
inc
add
mov
xor
aaa
xor
mov
sbb
sub
mov
in
es
xor
xchg
mov
cmp
loopne
push
jae
(bad)
out
in
rol
popf
aas
xchg
sub
xchg
pcmpeqw
push
lods
pop
fisub
imul
ror
cmp
and
loope
stc
add
std
data16
fst
int3
test
ret
dec
sub
xchg
je
jge
jp
push
adc
adc
loop
mov
dec
sar
shl
pop
movs
or
add
push
adc
sti
jbe
dec
adc
pop
xor
push
(bad)
sbb
dec
cli
sub
ja
mov
fcom
call
jbe
in
xor
iret
mov
jg
mov
jo
sub
(bad)
out
in
repnz
cld
xor
nop
sub
xchg
fisubr
retf
xchg
pop
mov
test
push
mov
adc
repz
lods
xor
and
xor
gs
xchg
adc
mov
fs
sub
ds
adc
rol
stos
pop
mov
fucom
retf
in
lea
push
mov
push
(bad)
mov
push
jnp
cs
mov
pop
sub
fsubr
repnz
xor
or
or
xchg
fs
mov
or
dec
aad
js
hlt
adc
retf
xchg
pop
(bad)
xor
mov
call
out
jae
xor
outs
test
xchg
mov
cmp
mov
(bad)
push
(bad)
jnp
jne
retf
sbb
jmp
or
xchg
xor
outs
push
out
test
clc
cmp
loope
push
enter
pop
xchg
inc
xchg
shl
mov
dec
ret
and
xchg
(bad)
repz
sub
mov
repnz
push
les
add
jle
arpl
mov
cmps
idiv
cld
inc
jb
xor
cli
mov
mov
xchg
loopne
inc
xor
fisttp
int3
in
mov
addr16
xchg
dec
aaa
inc
sub
neg
repz
movs
pop
xor
or
lds
jmp
jg
mov
xchg
push
xor
out
add
js
dec
movs
out
retf
movs
inc
ins
cmc
mov
mov
pop
fisubr
je
loope
out
enter
test
jb
add
iret
sub
popf
loope
cmp
daa
and
sbb
movs
dec
ds
jmp
in
or
add
mov
push
mov
pop
repz
daa
cmp
pop
sub
xlat
adc
into
and
shl
rcl
xlat
xor
dec
dec
dec
fs
pop
mov
aam
sub
sub
(bad)
and
push
jg
sub
les
in
xchg
scas
inc
cmp
push
add
arpl
xchg
test
jbe
push
fbld
push
or
jmp
xor
sbb
outs
sbb
mov
push
jle
pop
adc
or
mov
jne
repz
std
mov
mov
inc
iret
in
pop
pop
out
popa
mov
and
pop
push
dec
jmp
add
and
push
dec
sub
pop
out
ret
cmp
in
cmp
int3
push
cld
loopne
cdq
push
lds
jae
fcomp
scas
xor
hlt
call
mov
ins
jp
cmp
popf
rol
push
cmp
sar
cdq
aam
xchg
cmp
rcl
in
das
adc
add
std
xchg
in
std
in
icebp
js
sar
out
loopne
add
xchg
add
jns
loop
enter
ret
jne
retf
pop
cs
(bad)
pop
push
(bad)
in
sbb
adc
push
std
sbb
jo
mov
mov
loope
ret
scas
(bad)
lock
inc
aaa
xchg
jmp
shr
popa
and
hlt
jae
mov
dec
jmp
js
xchg
xchg
repnz
and
xchg
scas
push
mov
loopne
pop
adc
cmp
inc
push
loopne
mov
fbld
fld
js
outs
fist
jnp
inc
fbld
pop
sub
addr16
imul
jae
test
test
pop
mov
es
add
adc
and
aad
fadd
jmp
icebp
xor
pusha
aas
cmc
rcl
setl
test
push
fadd
std
loope
(bad)
rol
cwde
rol
cmp
sub
mov
xchg
pop
cmp
mov
adc
std
adc
and
fs
cmp
test
pushf
sbb
and
data16
mov
jl
ror
and
aas
mov
adc
ud0
xlat
pop
adc
mov
jns
aas
mov
(bad)
mov
sub
add
inc
xchg
and
mov
jge
lea
dec
test
out
mov
and
xchg
jle
ret
ret
mov
jl
loopne
mov
sub
xchg
push
xor
cmp
pop
shr
cmps
sbb
dec
das
pop
sub
cmp
cmps
sbb
std
pop
sbb
pop
dec
dec
push
ss
shl
cdq
pop
mov
xchg
(bad)
data16
jg
cmc
xchg
push
mov
and
rcr
pusha
rcl
aam
lods
inc
pfmin
inc
fcmovnu
fidiv
sar
sar
mov
inc
jbe
loopne
test
push
mov
pop
ror
enter
popa
(bad)
retf
ins
sub
cmc
xchg
xchg
cdq
sub
hlt
outs
dec
xor
test
and
pop
push
setp
sub
mov
push
push
push
test
hlt
call
fwait
sbb
ss
jle
cld
ret
sbb
(bad)
in
push
ins
out
and
sub
mov
push
inc
cmc
mov
mov
cmps
cmp
imul
mov
(bad)
mov
mov
inc
mov
adc
loopne
mov
adc
in
daa
mov
xor
mov
xor
push
in
ins
pusha
xchg
into
and
mov
mov
lock
dec
fs
fild
call
mov
push
out
es
les
inc
mov
ds
scas
(bad)
addr16
mov
fld
xchg
and
xor
gs
push
push
shl
mov
int3
pop
xor
in
push
or
push
hlt
and
shr
sub
fdiv
iret
mov
adc
mov
retf
ret
imul
(bad)
retf
loopne
sbb
xor
mov
xor
mov
fs
jmp
stos
mov
outs
int3
icebp
ins
scas
inc
pop
mov
jne
es
jge
dec
shl
inc
iret
inc
push
ss
and
jmp
loop
repnz
cs
sbb
loope
jo
sbb
xchg
push
jge
xchg
mov
in
adc
ja
loope
xchg
ds
test
sub
xchg
nop
cdq
inc
in
out
pop
sub
sbb
xchg
mov
mov
scas
into
xchg
test
fcomip
inc
sar
and
lds
jae
xor
adc
hlt
push
sub
jmp
mov
pop
pop
push
push
mov
call
popf
xor
pop
jmp
add
mov
push
jne
test
sub
cmp
cmp
in
pop
stc
in
xchg
cld
movs
mov
repz
xor
mov
mov
xor
jae
(bad)
movs
je
les
cdq
sub
cmp
sar
loopne
movs
stos
lods
popa
loope
aaa
mov
jb
add
sub
mov
retf
repnz
sbb
sahf
jge
push
not
jp
sub
jo
adc
leave
mov
(bad)
add
gs
daa
cmp
fnstenv
push
repz
xlat
out
mov
dec
jmp
call
es
dec
in
outs
mov
aad
stos
rcr
scas
push
test
in
adc
adc
xor
and
mov
pop
cmps
xchg
add
outs
test
dec
xchg
faddp
jmp
pop
adc
sbb
sbb
dec
sbb
bound
mov
jns
inc
cmp
jns
xor
sbb
sbb
inc
ins
jmp
inc
hlt
inc
and
mov
sbb
shl
adc
sbb
test
loopne
cmp
pop
arpl
xor
mov
add
aam
or
sub
push
shl
pop
and
repz
sub
retf
cmps
push
aad
and
push
push
inc
sub
mov
mulps
in
sub
jbe
cli
sahf
push
mov
xchg
ret
inc
iret
cmp
adc
push
stos
in
jne
jne
loop
js
imul
jecxz
xchg
pop
in
dec
or
or
cmp
mov
pop
mov
push
xchg
les
xchg
cmp
push
inc
add
xor
dec
iret
xchg
jmp
imul
mov
push
mov
adc
jb
iret
ret
push
mov
push
jno
aas
aam
in
into
xor
or
adc
and
es
push
in
and
push
push
dec
xor
xchg
mov
je
int
xchg
add
jb
sar
inc
push
out
mov
mov
xchg
ret
dec
not
or
pop
sbb
push
and
add
or
mov
imul
push
out
(bad)
mov
push
scas
xchg
in
push
xor
popf
mov
ss
jno
xchg
aas
mov
push
lock
xor
push
sub
mov
lds
fiadd
xchg
dec
pushf
stos
sub
mov
test
dec
je
xlat
mov
cmc
(bad)
push
xlat
sti
stos
jle
sahf
push
add
mov
out
or
dec
add
push
shr
add
(bad)
and
jg
std
inc
hlt
jp
mov
aas
jae
mov
or
sub
xchg
dec
sub
mov
jne
in
or
outs
inc
sub
add
dec
xchg
sahf
ucomiss
mov
shr
jnp
ss
xchg
mov
in
(bad)
jne
icebp
adc
in
std
lods
cwde
add
loope
ins
fist
ss
cmp
jle
fxtract
stos
xchg
push
outs
test
jp
icebp
fild
mov
loopne
push
xchg
and
mov
mov
add
jl
cmps
pop
adc
jle
fucom
mov
outs
out
sub
push
nop
push
movs
repz
sbb
jmp
jl
xchg
xor
cdq
mov
imul
cmc
xor
int
shl
xchg
imul
jne
inc
sub
cmc
mov
or
xchg
ins
fcmove
or
mov
inc
and
mov
push
loopne
cmp
jecxz
ss
loopne
cmp
jp
movs
dec
clc
stc
es
dec
addr16
mov
sbb
jmp
push
cmps
sbb
xor
test
outs
pushf
mov
loop
daa
outs
add
sub
aas
jmp
sbb
rol
dec
aam
out
imul
sbb
jae
xchg
or
test
sbb
lds
dec
out
xor
cmp
out
(bad)
mov
cdq
mov
dec
dec
push
loopne
jmp
adc
jp
adc
data16
fbld
and
mov
adc
in
loope
xchg
gs
push
inc
dec
dec
sbb
mov
movs
adc
rcr
sub
xor
pop
mov
push
and
js
ds
call
into
dec
outs
jp
mov
xchg
push
xlat
stos
inc
(bad)
mov
imul
jge
outs
lock
pop
cmp
rcr
mov
jae
test
movs
ins
cmp
xor
cmp
call
mov
and
cmp
mul
jns
mov
pusha
xchg
out
cmp
cmp
outs
loopne
das
repz
add
pop
ins
or
mov
mov
cmp
and
jo
daa
mov
das
jbe
xlat
or
sahf
sub
dec
rcl
jl
adc
into
daa
call
push
sub
jnp
in
sbb
loopne
leave
not
pop
scas
jne
xor
mov
int3
mov
xchg
xchg
mov
sub
push
sub
xor
sbb
and
cmps
ss
stc
push
mov
leave
mov
pop
push
idiv
out
cmp
data16
push
test
inc
add
push
shr
mov
test
cld
dec
adc
jge
mov
push
mov
cmc
mov
mov
inc
jmp
jle
push
xchg
lds
out
leave
dec
or
push
js
pop
adc
sub
sub
pop
out
inc
mov
movs
and
jne
mov
push
pop
ss
or
pop
mov
mov
sbb
fisubr
mov
mov
add
and
dec
cmps
or
sti
dec
retf
ins
sbb
xchg
call
push
sbb
and
push
das
push
jbe
icebp
jb
cs
adc
lock
and
xchg
(bad)
out
mov
pusha
ins
clc
out
mov
sbb
aad
push
out
jmp
fsubr
adc
loope
sbb
pushf
or
cld
repz
repz
call
(bad)
in
pop
idiv
xchg
mov
ja
ret
add
and
push
inc
ret
sbb
adc
pop
aas
cmp
dec
add
cwde
fs
stos
lock
in
xlat
out
lahf
dec
loop
(bad)
aad
mov
push
ins
pop
xor
jbe
mov
xchg
add
outs
push
lods
(bad)
leave
pop
mov
inc
std
ret
dec
pop
enter
in
sub
or
std
xor
loope
nop
scas
mov
outs
push
out
jb
aaa
lods
push
loope
adc
out
jp
pop
retf
sub
add
or
jb
sub
cmp
adc
mov
xchg
jne
push
jns
test
cmc
sub
xchg
push
shl
mov
push
cmc
sbb
add
(bad)
jb
dec
jns
pop
dec
push
(bad)
adc
adc
addr16
repnz
ror
gs
jp
mov
scas
adc
xchg
cli
in
pop
dec
xchg
mov
mov
(bad)
in
xchg
sub
inc
(bad)
pop
xchg
sub
pop
je
jle
dec
cli
jg
rcr
xchg
out
repnz
femms
std
in
xor
pushf
pop
xchg
aaa
sub
mov
pop
out
sub
jmp
daa
cmp
pop
pop
scas
push
loopne
data16
jp
iret
or
dec
dec
not
addr16
mov
or
js
xchg
push
xchg
int3
mov
dec
icebp
pusha
cmp
ret
stc
iret
fwait
loopne
js
ret
cmps
cmc
fisub
dec
call
xchg
fldcw
sub
repnz
js
out
ret
jne
movs
cmp
rcr
dec
mov
mov
clc
xchg
inc
cs
not
sbb
jecxz
mov
(bad)
jmp
test
xchg
test
orps
jp
sbb
addr16
inc
movs
retf
xchg
mov
mov
dec
dec
mov
xor
test
jmp
pusha
sbb
aad
lea
cmp
jae
jmp
and
stos
mov
and
shl
and
xchg
test
movs
scas
je
xchg
cs
sbb
gs
in
ffreep
shr
retf
rcr
pop
mov
mov
into
dec
and
pop
add
xor
(bad)
sar
xchg
ins
lea
les
and
mov
bound
push
sub
xchg
into
sbb
sbb
mov
ret
or
inc
out
bound
xor
or
xchg
and
and
data16
push
mov
les
cmp
mov
(bad)
ret
dec
aad
mov
clc
(bad)
loopne
add
add
mov
jne
mov
and
inc
shl
cld
outs
out
cmps
out
das
jge
inc
ret
add
cmp
add
leave
gs
test
mov
(bad)
mov
sbb
push
mov
push
mov
sar
in
scas
inc
push
stos
cld
data16
jmp
push
data16
mov
lahf
clc
not
or
movs
scas
jns
popf
inc
sti
ret
fcmovu
xor
es
mov
adc
add
mov
mov
in
mov
mov
popf
mov
into
add
mov
(bad)
fldcw
jge
jb
xchg
mov
pop
or
push
mov
cmp
fstp
inc
in
and
jns
loop
add
retf
cmp
cmp
scas
fstp
xor
mov
mov
mov
mov
xchg
ds
aam
cld
mov
inc
push
test
jo
mov
adc
sahf
clc
xor
and
cs
inc
mov
mov
pusha
js
cmp
lods
wbinvd
push
fild
rcr
sbb
int3
repnz
cmps
push
add
and
cmp
xchg
cmp
cmp
fdivr
mov
and
test
add
ret
push
or
push
rcl
in
jns
les
cmp
jle
pop
lock
jne
nop
inc
xchg
pop
push
scas
rcr
in
and
cld
outs
mov
clc
pop
or
cmp
imul
je
fsub
push
cmp
add
sub
sub
sti
(bad)
mov
pop
movs
add
out
ficomp
scas
mov
cmp
in
outs
fisttp
xor
faddp
mov
xchg
stos
sub
les
adc
neg
lea
lahf
repnz
jge
mov
and
in
add
sub
xor
mov
shl
(bad)
fdiv
jmp
dec
push
sbb
fwait
push
in
mov
in
adc
push
imul
ror
or
dec
sub
mov
es
(bad)
rol
pop
and
or
ror
sti
and
mov
out
add
clc
pop
jns
retf
je
xchg
aad
mov
inc
push
xchg
stos
(bad)
push
adc
jne
cmps
int3
mov
xchg
pop
xchg
cmp
sbb
shl
inc
into
adc
jae
loop
pop
inc
add
js
pop
std
icebp
cwde
push
mov
je
repnz
mov
daa
push
pop
outs
mov
in
cmc
pop
xor
xor
pusha
enter
cld
icebp
ret
sub
xor
sub
nop
xor
xchg
cli
test
movs
and
jge
sar
sbb
adc
xor
test
add
jno
movs
sub
fidivr
xchg
mov
or
mov
stos
aaa
adc
out
cmp
mov
fst
mov
xchg
fnstsw
mov
adc
imul
jmp
push
jo
jns
iret
mov
shl
cdq
inc
jae
clc
stos
jno
bound
pop
jno
push
mov
ror
xchg
push
jo
in
mov
cmp
in
sub
pop
pusha
inc
sbb
adc
cld
js
scas
mov
jno
ror
cmc
jecxz
push
pop
xchg
push
sar
aad
xchg
dec
sbb
mov
call
dec
outs
(bad)
fistp
addr16
call
mov
test
mov
shr
xor
jb
mov
outs
dec
adc
sbb
push
cmp
jns
xchg
scas
inc
jns
dec
xor
jo
imul
mov
je
fcomp
ins
and
and
xchg
push
jns
sti
add
sbb
pop
call
xchg
jns
in
inc
jne
scas
push
loopne
ret
xor
int
call
xchg
mov
add
cs
daa
movs
sub
dec
jnp
and
mov
pop
retf
sub
push
iret
jp
xchg
pop
push
cmp
test
push
(bad)
fisubr
(bad)
dec
mov
sbb
sar
test
pop
jns
outs
xor
mov
adc
in
push
and
xor
sub
enter
or
shr
es
and
adc
cmc
mov
(bad)
std
das
shl
push
outs
sti
ret
sbb
mov
mov
(bad)
sar
mov
and
jns
push
dec
pushf
inc
repz
push
mov
retf
out
clc
dec
iret
add
aad
mov
daa
call
cs
mov
sbb
xor
add
push
inc
test
sub
retf
out
dec
aaa
sub
hlt
add
mov
(bad)
sub
pushf
div
cli
sbb
fbstp
fbstp
add
push
jne
push
je
sub
mov
cs
pop
xchg
push
adc
arpl
imul
shl
mov
rcl
bound
nop
shl
pop
cmp
pop
dec
xlat
jg
movs
sub
stc
and
pop
cmp
test
addr16
imul
and
jne
add
mov
sub
inc
sbb
aad
leave
sub
adc
retf
fnstenv
or
cld
push
cmp
jg
mov
std
out
lds
xchg
fcomp
xor
mov
inc
add
daa
and
fsub
dec
dec
out
fcom
cmp
push
fwait
push
pop
(bad)
pop
xor
not
add
fiadd
ror
pop
push
es
and
fs
and
fnsave
push
mov
or
test
adc
sti
fisubr
shl
fadd
or
cmp
or
cmps
fcmovnb
pop
dec
jns
dec
into
imul
out
test
cmp
fwait
movs
pop
js
sub
cmp
sub
xor
jecxz
addr16
push
lds
jo
jmp
(bad)
push
cs
add
out
jnp
jo
pop
mul
jno
mov
movs
sbb
or
call
cli
clc
fst
loope
mov
stos
repnz
xor
pop
push
xchg
dec
inc
std
fisubr
ja
and
jmp
push
cmp
int
adc
cmp
pop
dec
push
call
mov
adc
add
in
mov
dec
retf
repz
and
jge
fadd
out
cmc
retf
mov
add
mov
or
sub
retf
jge
sub
mov
pop
movs
clc
cmp
jns
adc
in
cdq
mov
jp
les
into
push
adc
adc
popa
daa
into
push
repz
and
mov
push
mov
test
jb
mov
sub
sti
pop
push
lea
xchg
cmps
mov
shl
movs
mov
sub
xor
and
jg
xchg
jle
test
xor
div
in
xchg
idiv
out
mov
jp
cmp
test
push
cmp
jno
push
(bad)
sub
add
retf
loope
or
retf
jbe
push
mov
mov
jne
cli
dec
mov
mov
inc
xchg
mov
xchg
cmp
cmps
pushf
mov
fsubp
xor
cmp
xor
sub
scas
pop
or
xchg
mov
xchg
push
retf
sub
push
jg
xchg
sub
in
jae
imul
add
popa
imul
data16
loopne
xchg
lock
xchg
add
pop
sub
xor
mov
retf
xchg
mov
rcr
lods
dec
call
mov
cmc
sbb
idiv
sub
lock
dec
shr
push
or
mov
mov
in
xchg
jns
jmp
jmp
fsubr
pop
dec
mov
xor
mov
rol
ret
add
jp
jle
sbb
call
cmps
outs
js
cmp
dec
pop
pop
sub
test
inc
sub
xchg
dec
add
cmp
outs
sahf
sub
lock
xchg
pop
mov
test
sub
js
mov
dec
jmp
pop
sbb
clc
into
push
and
fs
daa
(bad)
es
jbe
adc
push
cmps
lds
loope
xchg
mov
jno
pop
fld
mov
sub
mov
cmc
dec
dec
or
sub
sbb
imul
movs
pop
cmp
or
cmp
ficomp
sub
test
mov
pop
pop
or
push
lahf
in
and
test
dec
std
cmp
cmp
out
fnstenv
in
sub
xchg
xchg
test
stos
test
jne
fisttp
jmp
out
lds
jbe
mov
dec
push
lods
xchg
test
int
pop
xchg
dec
push
out
out
xor
shl
cmp
and
sbb
push
pop
sub
jb
shr
jae
ja
inc
cld
jns
mov
pop
les
aam
test
xor
jb
add
sub
fs
out
mov
arpl
out
xchg
xor
loope
retf
push
lods
pop
xor
xchg
adc
pusha
aaa
hlt
cmp
xchg
add
stc
jae
dec
out
mov
loopne
push
pop
jbe
sbb
cwde
sub
push
xor
jecxz
repnz
sbb
sahf
ins
cwde
and
retf
imul
ficomp
in
xor
icebp
ret
xchg
nop
in
not
jecxz
pop
xor
ror
(bad)
xlat
mov
sti
retf
mov
jmp
and
xchg
bound
movs
outs
mov
out
jae
sub
lahf
repz
xchg
test
std
arpl
xor
push
(bad)
inc
pushf
xchg
inc
cmp
int
fwait
mov
and
push
fisub
dec
fiadd
sub
mov
dec
push
jns
xchg
ror
inc
out
in
icebp
xchg
mov
sub
in
mov
jns
shr
aam
lods
jno
cmc
mov
outs
in
repz
(bad)
pop
loope
call
lock
loop
(bad)
push
sbb
hlt
adc
pop
shr
dec
popf
mov
nop
outs
mov
scas
dec
movs
aam
ror
cld
cwde
sti
test
adc
lds
xor
loopne
push
cmc
mov
pop
mov
xor
shrd
loope
dec
and
add
cmc
ins
mul
mov
int
pop
(bad)
xchg
cmp
test
test
jns
xchg
into
je
mov
outs
lock
sbb
gs
xor
ins
outs
leave
repnz
aas
xor
out
push
pushf
push
icebp
jns
sub
push
jo
sub
stc
jecxz
je
ins
rcl
cmc
sub
sub
jnp
jns
mov
sbb
fimul
sbb
or
fsubr
std
std
pushf
and
pop
add
jmp
cmp
jp
rol
cli
(bad)
in
sbb
stos
out
sub
icebp
push
mov
sar
outs
imul
(bad)
jge
call
push
push
loope
pop
fdivr
rol
fadd
or
scas
hlt
cmp
rol
sub
ss
adc
sbb
dec
in
or
jp
jmp
daa
mov
addr16
out
into
lods
je
in
sub
cmp
xchg
imul
push
aam
(bad)
outs
out
test
jp
adc
inc
push
and
int3
adc
sbb
icebp
ret
cmp
cmp
popa
lahf
ins
xchg
out
cmp
mov
js
push
mov
cld
dec
hlt
jmp
loopne
xchg
push
test
push
js
hlt
mov
push
adc
repz
stos
inc
test
mov
push
aam
repnz
mov
mov
dec
xor
fist
sub
je
scas
mov
xchg
call
mov
(bad)
mov
ds
shr
mov
aam
sub
aaa
xchg
mov
pop
pop
jno
push
dec
and
push
pop
aaa
xchg
jne
mov
test
mov
repz
inc
xchg
mov
sub
pop
ins
call
adc
push
addr16
add
pop
int3
mov
test
int3
call
jbe
nop
je
fild
cld
gs
push
or
adc
lea
movs
cmps
dec
or
inc
pusha
xchg
sbb
enter
or
sub
into
mov
cdq
pushf
nop
in
lods
test
arpl
xor
stc
mov
adc
or
fnstcw
cmps
and
mov
cmp
repz
and
pop
and
cmp
xchg
test
test
and
mov
mov
fadd
hlt
leave
fs
push
std
test
dec
sbb
clc
mov
lahf
mov
sbb
inc
xchg
xchg
test
mov
mov
and
fmul
cmp
mov
mul
aad
pop
rcr
adc
retf
sub
ins
pop
in
fs
or
hlt
call
cmps
mov
or
int
xchg
xor
xor
add
or
xchg
adc
shl
rcl
jnp
ins
add
mov
xchg
aas
and
hlt
imul
cmp
adc
ss
lock
out
mov
push
jmp
(bad)
mov
clc
cdq
add
cmp
xchg
dec
mov
pop
pop
dec
fsub
add
call
shl
jmp
dec
pop
push
jae
fldcw
jnp
mov
hlt
sahf
out
outs
xchg
pop
retf
xor
jge
in
fistp
jne
dec
cmp
mov
xor
jle
cdq
mov
rcl
mov
mov
dec
mov
mov
retf
xor
loopne
out
lock
and
jmp
add
addr16
xchg
nop
data16
aaa
cli
fs
adc
mov
jb
xchg
cmc
es
out
rcl
add
jecxz
shr
adc
xchg
aam
and
out
lods
in
dec
jmp
pop
and
popa
int3
addr16
xor
push
jg
xchg
outs
adc
das
mov
inc
pop
cdq
cmp
lds
and
pop
mov
and
cli
jge
pusha
or
and
mov
xor
jge
bound
jne
ins
jnp
mov
cld
pop
sub
jmp
iret
hlt
fmul
dec
mov
bound
mov
push
scas
mov
ja
push
mov
in
retf
xchg
(bad)
jne
and
movs
scas
lahf
or
sar
retf
xchg
rcr
sahf
mov
fdivr
sub
sbb
sahf
(bad)
jge
mov
sub
stos
jne
pop
adc
mov
adc
imul
loopne
pop
inc
cmp
cs
sub
dec
pop
lods
mov
dec
adc
mov
test
cmp
fisubr
push
mov
push
out
dec
cli
ins
xchg
les
ret
cmp
dec
mov
test
cmps
xor
pop
lea
aaa
jmp
es
call
xchg
stos
mov
sbb
cmp
sub
outs
cld
inc
gs
xor
push
xor
mov
mov
fisttp
jno
push
jmp
jnp
push
jp
fisttp
icebp
push
adc
daa
or
(bad)
jge
adc
imul
jge
out
pop
(bad)
mov
jp
cmps
(bad)
mov
pop
cdq
fild
pop
iret
(bad)
es
jae
xchg
push
mov
xor
and
mul
and
mov
jne
and
clc
daa
adc
dec
xor
out
arpl
push
shr
pop
loopne
pop
ja
xchg
test
pop
add
mov
mov
mov
iret
push
sbb
ss
(bad)
fcmove
add
push
lds
aad
and
jne
(bad)
pop
cmp
xchg
jg
sahf
js
dec
jle
dec
loope
scas
stos
mov
jle
mov
std
das
xchg
into
imul
mov
sub
aaa
test
cmp
add
sub
inc
cmp
hlt
mov
mov
nop
(bad)
sub
jns
fisubr
iret
cmc
jecxz
sbb
inc
(bad)
xchg
and
scas
mov
test
mov
stc
push
std
push
jp
and
and
repz
(bad)
cmp
add
fcom
into
adc
stc
hlt
xchg
sub
sbb
xchg
mov
jne
rol
idiv
call
xchg
aas
jo
ins
(bad)
jle
push
xor
mov
mov
jbe
iret
sub
aas
sbb
sar
cwde
sub
and
movs
pop
sbb
and
shl
xchg
mov
xor
jge
push
pop
rep
not
test
out
xchg
jmp
loopne
jp
retf
stos
add
ss
jne
push
and
jbe
inc
fs
dec
ins
jg
push
outs
mov
mov
(bad)
loopne
adc
ja
(bad)
popa
xchg
inc
aam
sub
push
call
jecxz
xchg
jl
jp
jmp
jae
stos
pop
stos
mov
dec
or
xor
aam
or
or
outs
xor
cmp
jns
xor
(bad)
fsubr
(bad)
fbld
out
stc
fwait
aam
ror
push
sar
pop
and
dec
sbb
sub
cwde
gs
mov
ja
mov
dec
loop
pushf
inc
mov
ins
retf
mov
adc
pusha
int
pop
movs
jmp
push
lahf
adc
push
sub
xor
pop
js
cmp
cmova
(bad)
cdq
mov
xlat
and
cmp
jmp
in
loope
sti
mov
cmc
or
mov
push
inc
je
pop
add
push
inc
outs
mov
inc
fs
dec
dec
cmps
in
hlt
sbb
xchg
pop
sub
ins
bound
push
sub
mov
jp
pop
loope
stos
out
push
ss
icebp
xchg
sub
loopne
ret
cmp
inc
cmp
sub
js
psraw
push
push
in
fcomp
xor
adc
aas
sub
ret
inc
jns
or
xchg
pop
lock
stos
pop
xor
jge
in
xchg
xchg
mov
(bad)
mov
push
xchg
add
push
inc
adc
xor
pop
cmp
mov
push
cli
push
loopne
xlat
fdivr
cld
lock
ins
add
retf
xchg
jae
and
rcl
popa
dec
rcl
cmps
cmc
jge
push
into
popa
adc
mov
jbe
iretw
dec
jns
fdivr
repz
cdq
xor
add
adc
lods
sar
(bad)
xchg
push
stc
movs
add
(bad)
fs
pusha
test
fnstcw
loope
pop
xor
fs
xor
jne
xor
je
iret
push
nop
retf
jecxz
imul
ror
in
jnp
in
push
mov
lahf
cmc
daa
lea
bound
scas
cli
jbe
mov
and
push
cmp
out
repz
push
xor
dec
jb
or
in
xor
dec
push
ret
outs
scas
sub
dec
lea
xchg
add
xchg
stos
jmp
not
stc
xor
push
gs
mov
xchg
push
push
cwde
dec
call
mul
mov
push
mov
outs
push
jb
pop
js
imul
ret
nop
jl
imul
xchg
out
dec
push
aam
ins
rcl
jb
sub
sbb
mov
pop
mov
(bad)
ror
sbb
inc
xor
sub
out
cmp
dec
imul
mov
int
lods
shl
cli
dec
add
mov
enter
int3
inc
xchg
pop
push
rol
xchg
mov
stos
xchg
pop
adc
not
jle
adc
jmp
(bad)
pop
mov
je
adc
cmc
xchg
fld
cmp
outs
mov
into
mov
pop
jp
mov
aas
outs
adc
pop
push
lea
add
cwde
popa
jne
xchg
xchg
in
ins
loop
ss
loopne
inc
cmp
jl
or
adc
cmps
add
jl
fnstcw
daa
nop
es
int3
xchg
jl
out
pop
scas
addr16
jl
xlat
xor
push
and
inc
jl
jb
xor
or
das
cld
or
pop
jmp
adc
call
pop
add
movs
test
and
sbb
pop
dec
mov
inc
outs
or
pop
cld
fsub
jl
adc
push
jl
mov
mov
ret
iret
jl
sub
ja
jl
gs
push
mov
sbb
sti
(bad)
jno
push
fld
aaa
pop
pop
imul
rcl
bnd
and
sub
xlat
dec
pop
inc
mov
push
mov
mov
ds
jmp
jne
and
cmp
push
cli
les
sub
int3
jecxz
push
mov
in
cmps
mov
call
sbb
and
cmp
mov
mov
in
sub
loope
add
cmp
outs
in
lods
(bad)
xlat
aad
jae
pop
in
cmp
outs
retf
inc
push
pop
cmps
mov
adc
in
pop
push
sub
loope
and
mov
push
pop
or
int
in
xor
loop
mov
in
add
xchg
sti
jne
jp
nop
cmp
fsub
xor
ficomp
outs
sub
push
imul
pop
loope
pop
or
pop
or
ret
add
cmp
pop
xor
or
push
mov
inc
inc
scas
ficomp
imul
adc
icebp
(bad)
icebp
fcom
loopne
push
out
cmc
push
movs
push
push
cli
das
cmc
clc
jnp
call
push
cdq
clc
dec
cmp
loope
inc
sub
jp
xchg
cmp
cmp
shr
sub
and
test
cmps
retf
es
call
imul
dec
shr
jp
js
mov
pop
sbb
fdiv
aad
ja
dec
adc
add
inc
xor
enter
xlat
adc
pushf
aaa
and
jnp
cmp
addr16
into
inc
sbb
pusha
ficomp
xchg
retf
or
jmp
mov
jne
test
sbb
mov
ins
jne
aad
imul
xchg
xor
sub
lds
and
xchg
addr16
jp
in
xchg
into
out
in
jmp
push
pop
dec
jg
mov
mov
daa
stos
pusha
cmp
sbb
pop
sbb
jb
shl
int3
xchg
pop
cld
sahf
test
and
fs
fiadd
add
add
adc
and
fld
mov
stos
ds
sar
rcr
add
push
in
pop
sbb
pop
call
(bad)
xchg
sub
retf
jmp
adc
ss
xchg
daa
inc
data16
shl
mov
stos
movs
pop
(bad)
out
adc
addr16
out
popf
sbb
arpl
push
std
cld
xchg
fldcw
xchg
adc
adc
cmp
lods
dec
or
mov
or
(bad)
push
cmp
sbb
cld
adc
icebp
cmp
pusha
or
sahf
mov
ficomp
es
mov
repnz
movs
daa
xor
out
lahf
(bad)
es
test
cmc
xchg
movs
sbb
pop
sub
jae
lods
in
mov
push
mov
shl
and
test
out
adc
mov
pop
repz
jmp
or
das
retf
es
shr
mov
push
cmp
pop
retf
or
jl
es
call
xchg
ins
test
mov
mov
inc
dec
loop
mov
js
push
push
clc
shr
inc
(bad)
dec
xor
mov
and
push
cs
mul
mov
dec
(bad)
lds
and
lahf
arpl
rcr
addr16
jmp
xchg
cmp
xchg
js
mov
pusha
mov
or
xor
mov
lea
adc
add
jp
adc
in
mov
lock
je
adc
pop
jp
inc
mov
xlat
sbb
mov
jg
mov
xchg
jns
xchg
mov
adc
shl
xchg
mov
xor
cmp
call
xchg
es
outs
xchg
cmp
dec
mov
add
kxnorw
xchg
cmp
cld
mov
mov
xchg
dec
inc
push
adc
jo
mov
sbb
aam
xchg
sub
call
jle
mov
sbb
clc
adc
idiv
fbstp
xchg
rol
jmp
mov
neg
arpl
aas
aam
(bad)
rol
arpl
xchg
outs
dec
out
cmc
aaa
in
xor
ins
jne
or
cwde
pop
pop
out
loopne
push
iret
cmc
mov
movs
mov
pop
dec
sbb
(bad)
out
out
pop
push
cmp
or
jp
or
mov
xchg
pop
jns
mov
stos
fwait
(bad)
std
(bad)
pushf
xor
push
clc
fiadd
xor
dec
clc
cmps
xor
neg
mov
and
pop
js
jecxz
fs
sar
arpl
je
aad
loop
test
mov
scas
enter
test
mov
in
mov
ret
and
aad
mov
inc
ds
inc
jb
cmp
pusha
add
dec
inc
(bad)
ja
test
or
es
sbb
adc
fsub
fild
or
data16
sbb
(bad)
jmp
cmp
cld
mov
leave
xor
aaa
es
add
cmp
mov
dec
jae
dec
add
xchg
sub
retf
mov
cmp
xchg
(bad)
xor
fadd
lods
mov
mov
push
and
xchg
rcl
cwde
sub
pushw
into
bnd
sbb
in
pop
jo
mov
retf
aam
hlt
movs
jae
(bad)
adc
sbb
nop
xor
out
and
stc
(bad)
dec
jne
test
jae
mov
adc
(bad)
in
fcmove
sub
movs
mov
imul
retf
cmc
and
stc
xchg
push
cdq
rcr
cmp
hlt
push
push
into
push
xor
xchg
mov
xchg
sahf
ret
mov
add
mov
leave
xor
outs
pop
xchg
(bad)
jmp
push
add
jne
add
mov
hlt
jmp
mov
(bad)
fdiv
fwait
jge
ret
push
inc
data16
inc
add
mov
inc
mov
mov
mov
in
jmp
or
adc
cmps
mov
jmp
pop
jne
xchg
fild
ffreep
mov
cmp
ss
js
lds
pop
jbe
hlt
cmp
sbb
or
dec
rcl
sbb
fidivr
sbb
sub
(bad)
pop
mov
jnp
mov
sar
aad
dec
mov
mov
daa
popf
into
sbb
add
or
mov
sti
cmp
jae
ds
fisttp
test
sbb
ror
and
in
xor
xor
xchg
bound
xor
inc
xor
outs
xlat
mov
inc
shr
push
cmp
cmps
push
movs
sub
pop
iret
call
jle
push
gs
dec
pcmpeqb
sub
push
jmp
js
in
test
cdq
sub
xor
in
xchg
xor
xor
pop
inc
test
mov
adc
outs
mov
int
mov
fwait
stc
jp
inc
mov
push
xchg
mov
ror
jle
push
and
lods
in
sbb
or
and
jae
jnp
or
adc
mov
xchg
je
jecxz
ds
pop
jle
fldenv
aad
mov
mov
movs
dec
pop
jns
mov
mov
push
xchg
(bad)
ds
out
push
xor
and
lods
fistp
lods
jne
sbb
clc
out
cmp
mov
cmc
les
sahf
repz
retf
adc
out
dec
adc
push
test
js
xchg
lds
rcr
inc
pop
ret
cmp
es
adc
push
mov
push
and
or
fsub
shl
into
xor
cs
sahf
retf
xor
or
mov
sbb
mov
sbb
in
je
out
mov
mov
jne
mov
and
outs
sub
pop
aad
test
mov
loop
mov
push
pop
sbb
das
xor
pop
ins
leave
fcom
fcom
fmul
aam
sbb
cli
stc
xchg
fucomi
push
push
pop
push
or
ficom
add
jecxz
icebp
pusha
adc
push
cmps
push
push
repnz
or
(bad)
les
popf
daa
xchg
repnz
xor
ins
call
in
fsubr
jl
adc
bnd
loopne
xchg
cmp
cmp
mov
xchg
or
mov
cmp
cld
gs
fiadd
leave
jnp
sub
push
arpl
pop
pop
test
or
outs
xchg
xor
(bad)
pop
cdq
jns
mov
(bad)
or
shl
vunpcklpd
ins
cwde
xchg
jge
and
sbb
in
fsubr
sub
dec
mov
sub
sub
ret
cmps
xor
and
cwde
adc
(bad)
dec
aad
jo
call
lods
aad
add
jmp
in
push
bound
mov
ret
pop
or
xchg
outs
push
jg
fwait
dec
push
adc
adc
mov
push
out
cli
xchg
cmps
or
add
movs
mov
mov
adc
xchg
out
addr16
add
sbb
sbb
add
out
lds
icebp
cld
ja
fldenv
mov
inc
mov
adc
in
and
jmp
das
jle
imul
xor
mov
cli
mov
arpl
xchg
pushf
cmp
mov
xchg
lods
sahf
jns
pop
pop
push
jne
(bad)
jmp
add
adc
movs
test
loope
(bad)
in
retf
xchg
mov
js
xchg
data16
mov
sbb
and
imul
ret
cmp
loop
push
pop
in
loope
sbb
es
jmp
mov
stos
xchg
jns
mov
ret
mov
add
or
xchg
mov
dec
test
call
mov
sar
lahf
jmp
dec
jb
iret
mov
cmp
ins
aaa
mov
(bad)
test
pop
stos
sar
ins
into
(bad)
and
or
ffree
push
retf
retf
jb
jae
sbb
dec
adc
retf
sti
mov
pop
ffree
inc
cmp
mov
mov
rcl
cmp
dec
xor
adc
jae
jmp
and
and
pop
int3
std
daa
es
xor
adc
mov
rcr
fwait
retf
inc
push
daa
push
sub
mov
and
jp
xchg
jmp
daa
ror
shl
jp
mov
pop
mov
push
call
popf
sub
test
push
pop
sbb
xchg
mov
inc
imul
(bad)
stos
pop
cmp
cmc
xchg
inc
(bad)
data16
dec
sbb
loop
xchg
aas
(bad)
jae
push
rol
sub
mov
mov
xor
mov
mov
dec
(bad)
pop
call
rol
cmp
or
test
jne
(bad)
xchg
dec
outs
xchg
lea
push
rcr
jp
ss
mov
jo
adc
xchg
pop
or
sub
in
xchg
(bad)
and
out
mov
sub
call
add
ror
mov
pusha
cmp
leave
add
idiv
popf
aam
sub
rcl
jecxz
mov
cmp
ret
mov
repz
aad
sti
iret
sahf
sub
jne
call
pop
fbstp
dec
test
pop
cld
xlat
cli
sbb
lea
ja
jecxz
xchg
adc
pop
fisttp
jp
sar
pop
push
push
mov
adc
ds
and
neg
xchg
add
or
fs
xchg
in
jp
sub
pop
inc
in
enter
mov
ja
les
in
cmp
xchg
jp
movs
push
add
xchg
push
pop
in
pop
into
std
outs
stc
lahf
(bad)
jle
sbb
lds
repz
jae
stc
add
adc
outs
mov
lock
les
daa
add
mov
lds
pop
cmp
(bad)
into
stc
inc
push
iret
addr16
mov
or
sbb
cmp
test
push
and
cld
or
sbb
mov
cld
ja
adc
jle
or
jae
jecxz
mov
es
hlt
push
in
pop
ins
(bad)
popf
dec
mov
pop
jnp
(bad)
jmp
out
dec
mov
xchg
push
test
(bad)
jmp
push
push
call
retf
fisubr
inc
inc
xchg
in
int3
test
loope
push
loop
xchg
fsubr
dec
cmc
punpckhdq
push
repz
push
adc
lods
xchg
xchg
popa
in
cmps
xor
jmp
adc
es
pop
cld
loope
dec
mov
jl
push
test
inc
xor
jge
push
nop
mov
jl
out
mov
movs
push
sub
dec
pop
adc
add
pop
or
enter
mov
dec
imul
jg
mov
xor
test
fs
mov
aaa
repnz
mov
lods
sahf
ins
(bad)
repz
rol
xchg
pause
pop
cmps
fucomp
adc
(bad)
pop
outs
dec
xor
and
mov
aam
ds
mov
scas
mul
push
xchg
inc
outs
mov
mov
aam
out
jne
pop
or
loop
fucom
cmc
dec
xchg
retf
adc
jge
mov
sbb
movs
xchg
fxch
lods
in
lock
dec
cmp
xor
xchg
push
sub
xor
pop
nop
sub
adc
xchg
push
mov
or
push
aaa
xor
sub
mov
ret
xor
(bad)
xor
push
test
out
call
sbb
pop
sti
jb
shl
inc
mov
outs
out
(bad)
scas
dec
xor
push
xor
xchg
push
push
mov
(bad)
fadd
cmp
xchg
pushf
and
push
sub
and
movs
mov
jbe
push
jne
add
sbb
sbb
gs
push
cmps
ret
mov
mov
sahf
fcom
sub
repnz
pushf
daa
cmp
ret
xchg
mov
jmp
jg
jo
out
in
push
out
mov
rol
mov
xor
es
push
pop
sbb
repz
movs
add
js
ins
inc
sti
nop
mov
push
jge
inc
leave
adc
jg
xor
push
cld
sar
pop
push
mov
sub
mov
adc
icebp
xor
mov
push
push
xchg
xchg
jmp
rcr
xchg
xor
addr16
inc
in
mov
cmp
nop
jmp
push
cmp
sbb
and
cli
adc
ds
addr16
nop
stc
xor
(bad)
sub
daa
mov
mov
jb
inc
or
dec
pop
inc
jns
mov
jecxz
inc
xchg
sbb
rcr
cmp
in
push
mov
pop
cmp
adc
data16
pop
imul
(bad)
std
push
gs
aam
(bad)
and
xchg
jb
mov
cdq
push
cmp
ret
mov
dec
cmp
cld
test
xchg
mov
xor
xchg
or
in
xchg
std
pop
popa
jle
outs
adc
ins
fnstcw
pop
or
call
adc
cmp
mov
sbb
pop
fadd
in
jp
test
jle
ins
sbb
repz
data16
cld
push
loopne
mov
sub
lods
call
adc
mov
loope
push
fdiv
cmp
cdq
or
nop
ds
enter
out
mov
mov
out
xchg
rcr
in
fistp
push
in
in
jmp
sar
les
mov
std
sbb
(bad)
inc
xchg
sbb
shl
and
inc
neg
inc
or
psrad
lods
cmp
into
pop
mov
mov
dec
inc
push
xchg
sub
jmp
hlt
jo
adc
mov
(bad)
test
cs
std
xchg
rcr
and
sub
fld
pop
adc
cs
not
or
jecxz
bound
sbb
out
xor
push
les
mov
clc
inc
xchg
lds
mov
daa
or
cmp
mov
out
mov
xchg
mov
(bad)
stos
in
jge
cmps
adc
xor
je
fild
add
mov
les
pop
(bad)
push
and
cmp
ins
mov
xor
ins
mov
mov
fidivr
xchg
ja
mov
in
push
sbb
or
loopne
clc
ret
pop
sub
jg
mov
push
jne
leave
xchg
lea
aam
sbb
pop
push
arpl
pop
int
or
ss
and
jmp
or
xchg
xor
jns
das
cmp
or
sub
sub
test
dec
sbb
adc
and
xchg
shl
sub
mov
lahf
adc
aaa
(bad)
mov
mov
aam
push
aam
test
test
shr
cmp
xchg
fild
rol
mov
call
push
imul
sub
sbb
mov
jns
mov
jmp
lahf
mov
jne
(bad)
movs
test
add
in
xor
cmp
ja
ficomp
sub
xor
inc
lods
int3
adc
mov
mov
xchg
mov
mov
and
mov
test
push
daa
inc
and
xchg
dec
sahf
sub
or
or
dec
ins
js
repnz
sar
add
cmps
xor
add
xchg
jae
sbb
sahf
mov
clc
rep
fild
xchg
scas
in
aas
xchg
mov
mov
adc
inc
movs
test
push
cli
call
adc
jecxz
fcompp
bound
adc
test
paddb
xor
pop
xchg
pop
xchg
sub
data16
imul
lds
ret
inc
test
jo
xchg
gs
adc
add
mov
add
xchg
xor
push
dec
outs
test
(bad)
push
cmp
aaa
js
enter
fwait
test
cmc
cmp
out
inc
mov
sub
inc
scas
iret
mov
fst
add
icebp
repnz
aaa
daa
sub
mov
xor
xchg
js
pop
cdq
je
sbb
retf
lds
std
xchg
pop
out
mov
inc
rcr
xchg
jl
xchg
icebp
aam
xchg
(bad)
adc
or
mov
jnp
hlt
mov
cmp
daa
sub
cmps
cld
into
les
cmp
xchg
add
pop
push
jl
xchg
xchg
sbb
dec
push
mov
pop
push
pop
pop
popa
je
(bad)
dec
and
popf
mov
repnz
loope
lock
fdivp
sub
(bad)
cmp
fnstsw
les
(bad)
jmp
stc
std
imul
sub
jle
leave
lods
fst
repz
int3
jmp
jl
push
hlt
fcom
mov
test
daa
inc
cmp
movs
hlt
cs
inc
pop
mov
mov
fcomp
js
lods
sub
out
sbb
xchg
mov
sub
lock
test
jae
add
test
out
gs
xchg
lock
xor
daa
sahf
mov
test
mov
pop
sub
cld
xchg
jl
shl
repnz
sub
stos
iret
add
mov
dec
lahf
imul
ds
xor
bound
popa
xchg
jecxz
add
cmp
sbb
pop
cwde
in
xchg
fistp
in
xchg
jnp
adc
sub
dec
pusha
adc
mov
movs
es
sub
fnstcw
or
sbb
dec
xor
pop
xchg
test
jbe
fdivr
xor
pop
jp
dec
lea
push
push
ins
sub
cmp
fbld
pusha
jbe
jmp
les
adc
ror
mov
in
je
pop
das
inc
cmp
pop
mov
data16
adc
pop
in
call
adc
and
js
xor
loope
xchg
inc
push
sbb
push
cmp
mov
jmp
xchg
in
je
inc
adc
push
ins
add
pop
xchg
sub
cli
mov
retf
int3
and
inc
push
es
jae
xchg
fs
cmp
jo
push
pop
std
(bad)
hlt
popf
sbb
sbb
pop
jne
xchg
adc
sbb
push
pop
xlat
test
leave
cmp
fs
shl
iret
dec
xor
cld
sar
dec
pop
pop
test
lods
push
nop
in
fisubr
sti
xor
repz
pop
mov
cmc
int3
xchg
imul
push
xor
mov
adc
not
sbb
fisubr
push
push
movs
(bad)
pop
pop
jne
pop
jg
dec
inc
outs
push
fistp
ret
and
sar
xchg
pop
loop
xchg
pop
pop
aas
jns
and
rcr
xor
sub
shl
outs
cmps
adc
fcom
test
in
push
mov
hlt
cmp
xchg
fidivr
sub
and
push
ror
sbb
ret
dec
add
ffreep
std
and
cld
out
mov
fsub
out
pop
and
stc
xchg
xchg
movsx
xchg
into
cwde
jle
aam
adc
and
imul
jge
sbb
lds
jl
sub
adc
and
mov
and
mov
out
adc
shr
cmpxchg
lods
fist
mov
jnp
popf
sub
inc
sub
and
mov
into
mov
loopne
xchg
push
mov
add
(bad)
movs
stc
or
les
stos
(bad)
leave
jb
scas
jp
xlat
and
xor
xchg
cmp
push
adc
pop
push
push
xor
jp
leave
or
mov
jnp
dec
repz
clc
mov
ror
daa
out
mul
inc
js
adc
mov
inc
js
inc
mov
mov
jmp
xchg
lock
dec
mov
jnp
clc
into
or
dec
sub
scas
out
sub
xchg
addr16
lods
adc
cwde
mov
cmp
xchg
pop
and
add
mov
sub
pop
pop
jmp
mov
sbb
sbb
test
rcr
sub
push
mov
pop
jmp
pop
repnz
jp
(bad)
iret
jp
jmp
mov
movs
(bad)
aas
fnclex
or
sub
add
je
test
jbe
sbb
mov
push
int3
int3
leave
in
dec
xchg
dec
test
and
ret
mov
js
pop
(bad)
mov
lods
pop
lds
cdq
or
es
pop
cmps
stc
xchg
sbb
push
cmp
sbb
pop
mov
mov
(bad)
out
and
pop
jge
sbb
inc
fs
and
or
mov
xchg
call
mov
jnp
sbb
jnp
cmps
das
imul
cs
call
jns
and
mov
and
mov
out
dec
pop
pop
std
enter
mov
movs
out
pop
xchg
repz
sbb
cmps
jle
push
mov
mov
jns
repz
movs
jbe
xchg
fbstp
mul
test
dec
jecxz
adc
pushf
inc
js
in
mov
cdq
lahf
aam
push
ja
test
and
cwde
pop
mov
jge
cli
in
jmp
xchg
and
enter
push
dec
add
jp
pop
lock
test
mov
jmp
out
jo
fnstsw
repnz
sub
stos
mov
shl
xor
ret
cmps
xor
mov
outs
adc
push
jg
arpl
dec
or
xor
stos
mov
popf
dec
inc
push
xor
jmp
rcr
xchg
int3
fnstcw
mov
pop
fcmovnb
in
clc
push
inc
pop
push
pop
mov
xor
sub
repz
xor
mov
push
lods
aaa
out
iret
jmp
sbb
and
mov
mov
or
push
push
(bad)
int
mov
and
outs
dec
cli
xor
push
mov
or
dec
jle
(bad)
ret
stc
lock
iret
js
pop
jno
and
fucom
sub
push
dec
movs
test
in
fild
das
push
mov
push
xor
cmc
in
pop
div
loopne
call
stos
add
and
test
lods
pop
push
xchg
add
and
dec
jmp
pusha
ss
jl
outs
xchg
xlat
xchg
shl
call
dec
ret
push
shr
daa
inc
inc
pop
add
mov
cmc
rcl
adc
lods
push
outs
pop
xchg
in
mov
sbb
mov
jle
in
adc
fild
rcl
(bad)
mov
xchg
popf
sub
pop
sub
test
mov
cli
fnsave
and
push
int3
retf
dec
movs
(bad)
ret
sbb
mov
pushf
jns
sti
mov
xor
stos
add
sub
movs
adc
push
xchg
iret
push
xchg
std
jmp
fcomp
movs
push
in
xchg
xchg
stos
xchg
and
lods
jnp
push
nop
imul
mov
hlt
xchg
pop
jnp
xchg
data16
scas
sub
jne
sbb
sbb
inc
add
ror
inc
imul
mov
or
add
fist
dec
mov
xchg
xor
out
imul
stc
mov
or
iret
add
or
test
pop
fisub
xchg
push
inc
mov
jns
add
or
es
fsubr
pop
ja
stos
ret
ficom
push
mov
outs
lock
pushf
push
push
(bad)
push
lods
sbb
in
mov
mov
inc
jae
mov
add
repz
js
push
aam
bound
push
xchg
mov
jmp
cli
pop
inc
pop
mov
or
cld
push
mov
or
in
xchg
xor
iret
js
(bad)
sar
retf
stos
inc
xchg
(bad)
cmps
xor
rcl
inc
in
sub
sub
xchg
mov
xchg
pop
and
std
dec
js
or
jmp
xchg
aam
cmp
mov
pop
std
int3
mov
mov
lds
imul
sbb
xchg
mov
rcr
sar
enter
ret
das
sub
cmp
xchg
int3
pop
sub
shl
cmp
cmps
sbb
call
in
sbb
jmp
adc
(bad)
jmp
adc
scas
movs
xchg
adc
xor
jnp
(bad)
int
leave
push
int
pop
inc
retf
or
xchg
call
mov
ret
repz
dec
ins
dec
sub
add
aad
pop
xchg
mov
sbb
cmps
icebp
mul
scas
push
scas
pop
mov
iret
dec
fdiv
nop
daa
fdivr
(bad)
ins
mov
xchg
and
sti
adc
imul
push
je
stos
int
mov
push
xor
je
add
mov
loope
stc
pop
inc
pop
jns
pop
jle
push
xchg
dec
test
mov
inc
ret
fcomp
mov
ret
les
mov
mov
pop
outs
xor
(bad)
xchg
jne
rcl
add
mov
or
pushf
sub
imul
cmp
jnp
iret
mov
das
aam
iret
inc
rcl
test
or
(bad)
pop
gs
in
lods
mov
popf
fdivr
addr16
xor
cmp
mov
test
push
add
mov
fsubr
rcl
mov
mov
jo
and
jb
push
pop
inc
and
dec
xor
je
pop
movs
pop
and
jns
mov
and
mov
jo
xor
jle
push
xor
icebp
std
cld
cmp
xchg
xor
push
add
imul
jl
mov
xor
add
movs
jp
xchg
sub
not
mov
pop
xor
sbb
push
test
(bad)
loopne
cld
jns
hlt
repz
test
cli
(bad)
jp
outs
shr
pop
imul
and
pop
daa
out
sbb
add
sub
xchg
cmp
jo
out
dec
retf
inc
mov
cmp
aaa
enter
loop
inc
push
or
hlt
mov
out
jnp
jno
xchg
adc
xchg
cdq
jge
push
jb
scas
lock
ja
jecxz
aam
movs
add
js
std
(bad)
and
sbb
loopne
(bad)
xor
xchg
scas
inc
pop
sbb
and
mov
pop
pop
push
sub
lods
aas
or
push
xor
sahf
je
add
sub
leave
sbb
aas
push
xchg
jle
leave
dec
fistp
inc
test
lods
jne
jns
cmp
loop
jnp
and
sub
xchg
div
mov
leave
cmp
xchg
fidiv
nop
xchg
pop
ror
pop
data16
repz
pop
call
aas
xor
push
hlt
or
xlat
mov
or
not
sar
ins
lock
mov
jne
adc
xchg
pusha
add
pop
dec
cmp
push
call
sbb
daa
div
xor
dec
js
push
cdq
mov
push
pusha
cmp
in
enter
add
jecxz
repnz
fiadd
cdq
inc
adc
pop
pop
adc
jne
int3
add
shl
pop
in
inc
dec
test
js
cs
adc
je
std
cld
outs
mov
loopne
ret
mov
clc
ja
cmp
jnp
inc
neg
dec
push
push
rcl
xchg
jmp
jnp
xrelease
out
into
ins
pop
loope
jo
add
and
js
(bad)
loopne
(bad)
repz
inc
xor
fs
cdq
ds
mov
xchg
mov
test
mov
aas
mov
mov
(bad)
push
mov
icebp
in
jne
and
xor
mov
add
xchg
cmc
test
push
cmp
stc
push
cmp
faddp
xor
shl
push
enter
(bad)
hlt
cld
je
shl
jae
xor
or
cmp
mov
test
sub
nop
push
ins
xchg
lea
imul
dec
jno
jecxz
or
or
mov
dec
data16
daa
ins
push
jmp
add
cmps
jle
dec
mov
(bad)
(bad)
dec
pop
add
push
es
jl
mov
fs
hlt
fistp
sbb
out
pop
idiv
adc
sub
pop
mov
xchg
(bad)
push
xor
or
pop
cmp
int3
loope
mov
ins
addr16
into
sar
int
mov
iret
imul
mov
and
cs
adc
bnd
lea
cmp
adc
xchg
pop
es
ins
fisubr
adc
pop
xor
xor
sbb
cli
xchg
pop
mov
in
xor
add
cmp
pop
bnd
das
add
dec
out
lock
arpl
adc
aad
(bad)
fldcw
cmc
nop
mov
adc
lahf
lods
jg
stos
ror
imul
stos
js
push
jbe
adc
mov
adc
mov
mov
push
out
xchg
lds
adc
ja
mov
sbb
mov
jge
call
mov
addr16
aaa
fst
xor
cld
rcr
push
pop
sti
cdq
clc
dec
rcr
adc
loope
bound
movs
(bad)
cmp
jl
adc
jo
data16
sub
adc
inc
cmp
rep
movs
in
inc
mov
pop
idiv
cmps
xor
push
jnp
and
pop
ja
cdq
icebp
in
rcr
repz
xchg
cli
cld
jnp
test
inc
repz
stc
fisubr
xor
call
sbb
sub
pop
sbb
pop
dec
cmps
xchg
movs
jg
jne
nop
xchg
mov
sub
xor
mov
xchg
movs
lahf
mov
sbb
in
test
sar
not
push
xchg
jo
hlt
cs
add
fdivr
cmps
ja
push
dec
push
sub
imul
(bad)
sar
adc
pusha
mul
iret
sbb
adc
jp
imul
xchg
and
or
cmc
sahf
loopne
fld
adc
xor
push
jne
jg
adc
add
es
jge
jnp
daa
push
jbe
mov
gs
les
pop
jmp
in
and
ss
in
xor
cmps
ins
pop
mov
xchg
fist
and
rcr
into
shr
mov
cmp
or
in
iret
test
cmp
xchg
iret
repz
shr
or
xchg
bndldx
sub
test
inc
out
test
cmp
aam
mov
sub
(bad)
ds
mov
add
(bad)
jne
fsubr
scas
dec
aaa
adc
popf
fbld
jp
arpl
mov
in
inc
mov
push
mov
xchg
pop
test
imul
or
inc
xchg
mov
int
add
push
pop
lahf
js
in
adc
xlat
out
inc
das
jg
jae
mov
add
pop
or
sub
jl
ffreep
dec
ret
retf
pop
imul
push
sar
fsubr
daa
jle
pop
fldenv
je
push
(bad)
ficom
out
popf
xchg
in
adc
out
sbb
ret
adc
jge
retf
jecxz
xchg
sub
dec
in
(bad)
in
sbb
xor
ins
jge
pop
ret
cmovge
imul
jp
in
repnz
inc
xor
and
test
ret
sbb
les
leave
ins
wbinvd
mov
jne
xchg
fsub
sub
sbb
sub
adc
ins
mov
adc
pop
cs
(bad)
repz
cmp
or
sub
push
lds
pusha
pop
xchg
cmps
jmp
js
and
push
sbb
aad
push
and
push
daa
and
pop
xor
loopne
sub
mov
sti
mov
ds
xchg
inc
shr
imul
xchg
data16
rcr
jmp
hlt
stc
push
jmp
(bad)
enter
cwde
ja
push
mov
push
jne
scas
mov
dec
push
and
push
or
push
sahf
xor
(bad)
jmp
cs
xor
(bad)
shl
loope
pop
in
repnz
je
repz
xor
add
push
psubb
pop
les
popa
sar
addr16
push
jbe
loop
mul
cmp
shl
or
mov
out
sbb
rol
push
bound
cmps
icebp
cmp
push
jp
adc
jne
fidiv
mov
(bad)
call
adc
shl
pop
in
mov
imul
stc
add
inc
pop
jl
icebp
lds
imul
ins
dec
inc
pusha
fs
cdq
xor
inc
hlt
sub
je
push
mov
arpl
daa
xchg
test
sub
fcmovu
imul
or
repz
int
jne
lahf
std
sbb
mov
sub
outs
jo
test
stc
sub
cmp
bound
pop
mov
pop
mov
in
adc
jp
sub
cmp
inc
(bad)
xor
sub
xor
cmovp
push
fcmove
dec
xchg
stc
xor
movs
jns
cli
jmp
pop
(bad)
pop
xchg
push
mov
mov
(bad)
loopne
(bad)
test
int3
fld
sbb
sub
sbb
pop
and
icebp
lock
mov
call
cmp
movs
adc
mov
mov
xchg
int3
aaa
sub
(bad)
jmp
fwait
(bad)
mov
xor
lea
ret
gs
xchg
imul
add
dec
add
scas
imul
inc
ret
loope
add
es
xchg
arpl
xor
xor
add
and
mov
mov
mov
push
out
outs
sub
pushf
xlat
xchg
icebp
pop
cmp
aam
inc
adc
lock
cli
inc
inc
repnz
mov
add
xchg
mov
jp
inc
pop
sub
repnz
sar
cmp
movs
call
je
retf
xchg
add
xor
jecxz
jae
fsubr
add
imul
(bad)
jbe
iret
cld
fisubr
inc
jae
nop
mov
out
js
(bad)
cmp
pop
enter
adc
cmp
xchg
xchg
ret
sbb
and
mov
dec
adc
lock
push
push
push
sbb
add
out
dec
mov
ja
test
aas
sar
xchg
sahf
fisubr
int3
inc
dec
sbb
inc
and
xor
fnstenv
or
and
popf
clc
push
jp
xor
dec
mov
mov
mov
stc
push
add
sbb
stos
in
xchg
push
fcomp
dec
cmp
mov
add
mov
xchg
or
mov
pusha
lods
ins
dec
jne
and
xor
mov
adc
retf
mov
jnp
cmp
aas
inc
addr16
out
xchg
hlt
xor
push
push
dec
cmp
loopne
push
prefetcht1
(bad)
xor
hlt
out
ret
lods
(bad)
shr
outs
push
pop
push
cmp
jle
cmp
pop
pop
xor
retf
movs
pop
xor
test
mov
sub
mov
sub
push
or
fs
jo
lea
mov
ds
out
or
xchg
xchg
fild
loope
dec
ficom
(bad)
js
dec
jl
loopne
adc
lea
and
test
dec
xor
aam
inc
xchg
add
dec
retf
fld
lahf
inc
jmp
js
test
cmp
sub
pop
mov
and
cmp
out
add
mov
cmp
and
xchg
xchg
adc
xchg
push
push
fs
sbb
(bad)
clc
in
in
push
cmps
sub
lea
hlt
test
cmp
int
jmp
cmp
cld
cwde
add
imul
fisttp
mov
js
(bad)
(bad)
movs
in
(bad)
ja
mov
enter
push
xchg
stos
jbe
sub
ins
mov
pop
addr16
aad
jae
dec
test
jecxz
fsub
mov
jecxz
cmp
out
cmp
adc
fdivr
stos
add
lods
push
adc
mov
push
pop
or
icebp
push
xor
sbb
cmp
jne
lods
jmp
xor
lock
aad
jg
das
mov
fdivr
pop
jp
pop
cli
xchg
push
hlt
xchg
xchg
dec
les
sbb
pop
mov
xchg
shl
mov
mov
xor
jmp
(bad)
fnsave
das
test
js
dec
pop
pop
retf
inc
retf
adc
cld
pop
xor
test
sbb
xor
aam
bound
lahf
pop
mov
xchg
outs
and
xchg
in
ror
sbb
or
push
sub
pop
pop
retf
xchg
int3
add
xchg
lods
jle
sub
cld
push
repnz
jmp
ret
pushf
cld
ins
and
enter
iret
ss
dec
js
mov
cmp
js
and
jg
pop
cmps
sbb
cmps
scas
ret
xchg
std
ss
fisubr
xchg
and
mov
gs
and
pop
hlt
int
out
retf
cdq
inc
fistp
sub
nop
shr
pop
call
add
cmps
mov
in
ins
es
and
or
xor
fisttp
fwait
jmp
dec
movs
cmp
xor
setp
fsubr
sbb
dec
imul
leave
mov
push
test
dec
mov
mov
pushf
les
mov
or
idiv
or
jge
loopne
test
test
cmp
pushf
xchg
lods
mov
dec
sub
sti
imul
xchg
xor
cmps
(bad)
mov
pop
sub
lock
sti
test
push
push
mov
sar
push
pop
lahf
shl
addr16
cmp
fnstcw
mov
sub
jne
fucom
pop
sbb
loopne
call
xor
pop
mov
sbb
push
sbb
and
inc
pop
or
pop
dec
retf
xchg
jp
ins
loop
sub
mov
jbe
ja
jge
pop
mov
gs
dec
inc
repz
xor
xchg
xchg
fild
or
pop
outs
mov
das
test
cmc
sbb
sub
out
xor
sub
or
(bad)
pop
push
jnp
pop
xchg
int3
cmp
icebp
mov
ins
faddp
xchg
sbb
push
xchg
iret
or
stos
mov
fidivr
jae
aas
jp
sub
dec
dec
retf
ret
xchg
sahf
inc
stos
inc
shl
mov
sbb
push
adc
xchg
mov
cs
stos
mov
imul
jp
mov
fdivr
ins
push
leave
jge
dec
dec
test
jae
xchg
mov
inc
hlt
and
sub
dec
jmp
jg
aam
aam
bound
push
(bad)
push
fs
mov
nop
push
pop
adc
daa
and
jne
test
in
mov
mov
dec
movs
mov
or
inc
sub
out
icebp
(bad)
mov
test
pop
jl
adc
(bad)
push
cs
shl
mov
clc
fdiv
shl
pop
lea
xchg
sub
and
rcl
call
repz
int
outs
xlat
sub
fucomp
clc
les
cld
push
repz
cmps
int3
out
jne
test
xchg
push
xor
pushf
sbb
fdiv
pop
push
aas
outs
mov
daa
rcl
mov
arpl
jnp
adc
je
sub
(bad)
jp
push
xchg
add
and
in
cmp
push
adc
push
cmp
test
imul
cs
or
enter
dec
cwde
ret
loopne
sub
(bad)
xchg
cmp
aad
js
out
into
ror
js
cmp
ret
xor
pop
cmc
push
jp
popa
int
pop
xchg
adc
or
es
mov
xchg
adc
add
cmp
xchg
test
ret
or
loope
mov
xchg
push
or
adc
pushf
jle
ss
cs
int
aad
ja
pop
mov
jb
cmp
(bad)
adc
cmp
(bad)
js
loopne
xchg
cld
repnz
pop
sub
ror
sub
sub
jne
fwait
fs
add
or
test
mov
clc
das
pusha
mov
mov
das
jo
mov
scas
in
(bad)
mov
add
js
stos
test
and
mov
xchg
mov
dec
add
std
and
cmp
push
push
or
pop
mov
shl
cli
push
sbb
(bad)
jmp
inc
das
cmp
xchg
sub
or
ins
das
hlt
inc
adc
pop
mov
sbb
test
repz
mov
push
(bad)
jp
stc
adc
mov
aam
jg
push
ret
dec
cdq
or
sub
in
aam
daa
je
das
fidivr
jno
jbe
vmread
retf
push
jne
das
add
mov
outs
imul
push
int3
xchg
retf
xchg
xchg
xor
fnsave
cli
mov
adc
icebp
loope
mov
jne
cwde
add
lahf
les
idiv
fs
jne
clc
cmps
ror
mov
jle
sbb
ins
shl
jle
fsubr
mov
cs
fcom
popa
stos
lods
jl
or
in
pop
pop
dec
dec
(bad)
in
sub
xor
push
stos
or
inc
adc
sti
xchg
jmp
ror
stos
pushf
mov
lods
ffree
movs
shl
push
iret
repnz
sub
shr
fcom
loope
inc
in
pop
and
addr16
fidivr
jmp
ror
pop
in
adc
neg
sub
aas
sub
jae
out
or
inc
cwde
mov
aaa
pop
out
sub
movs
into
jnp
xchg
cmp
retf
mov
and
(bad)
cwde
push
adc
inc
aaa
(bad)
ret
ret
daa
or
addr16
add
into
lods
mov
jmp
cmps
jmp
jb
mov
sub
sbb
cld
adc
jo
call
push
mov
addr16
xchg
lock
jnp
mov
pop
cmp
repnz
dec
jbe
aam
or
jle
sbb
ja
and
inc
mov
add
mov
jmp
mov
mov
mov
(bad)
aas
jae
lods
dec
pushf
call
sahf
(bad)
nop
xlat
dec
mov
cwde
mov
jmp
mov
fcomip
inc
jns
sbb
push
jg
movs
addr16
jmp
inc
pop
dec
sbb
dec
je
xchg
sahf
repnz
stos
repnz
js
mov
jl
push
xchg
sahf
in
cs
mov
fnstenv
sbb
lahf
push
cmp
leave
adc
push
das
outs
sub
and
cmp
adc
pop
dec
push
push
mov
je
sbb
or
nop
pop
xor
icebp
stc
or
out
jg
test
sbb
sti
add
test
push
mov
pop
(bad)
call
xor
xchg
xor
popa
in
aas
adc
cli
cs
xchg
loope
cmp
ret
inc
sbb
(bad)
(bad)
stos
xor
add
std
mov
xchg
aaa
sbb
and
vmovss
pop
in
ds
xor
dec
js
cmp
fs
pop
int
data16
or
aaa
push
mov
and
xchg
add
xchg
and
arpl
cdq
xor
or
scas
push
cwde
bts
xor
rol
in
jne
mov
push
push
mulps
call
jge
mov
test
or
pop
outs
out
xor
shr
mov
xchg
in
push
push
push
ficom
jle
lds
push
jae
sbb
cmp
int
jbe
xchg
sahf
mov
push
xor
ins
mov
stos
sub
sti
dec
pop
enter
ror
xchg
pop
mov
stc
into
sub
dec
cmps
jo
mov
or
cmp
mov
xchg
push
cmp
inc
lea
mov
push
mov
pop
adc
mov
push
sub
imul
ror
cmp
mov
imul
addr16
or
mov
jbe
xchg
and
adc
sti
ffreep
fld
jne
adc
or
retf
test
cmp
cmps
sbb
sub
ret
dec
mov
pop
xchg
mov
test
dec
fdiv
adc
ds
jmp
mov
ror
pop
pop
sbb
movs
sar
push
fisub
loopne
rcr
dec
and
data16
sar
rcr
adc
pop
iret
repnz
(bad)
(bad)
ins
pop
jecxz
scas
xchg
cmps
movs
das
test
sub
nop
xchg
loop
test
jbe
daa
ss
push
add
sbb
adc
gs
mov
out
xchg
xchg
retf
cwde
cmp
ja
cmp
call
ins
out
xlat
dec
sub
sbb
and
loopne
xor
xchg
sahf
inc
fistp
xlat
je
and
mov
push
or
add
mov
(bad)
fdiv
and
jmp
lds
retf
cmp
ficom
arpl
sbb
mov
fdivr
adc
imul
cwde
xchg
sub
push
jae
outs
pop
adc
xchg
sub
mov
sbb
cmp
sahf
dec
lock
in
(bad)
mov
adc
mov
mov
xchg
sbb
vpmovqd
ret
dec
xchg
scas
sub
xor
dec
outs
imul
cdq
push
cmc
cmc
in
jp
arpl
pop
mov
shl
sar
jmp
jb
and
or
movs
lock
cld
call
jl
cwde
xacquire
sbb
inc
aas
shl
xor
in
js
adc
xchg
sahf
stos
(bad)
repnz
icebp
mov
jmp
cmps
popf
sbb
xchg
xor
push
sbb
lods
pop
and
retf
pop
pop
pop
dec
icebp
call
inc
xchg
sbb
inc
or
dec
xor
mov
pop
sub
cmp
push
lods
leave
add
pop
call
mov
adc
int3
mov
sub
adc
adc
jl
adc
fld
pop
xchg
adc
retf
xor
retf
or
sbb
ds
push
xor
hlt
addr16
mov
fnstcw
loop
cmp
mov
fbstp
imul
sub
test
lock
inc
and
call
sbb
mov
test
sub
push
mov
jb
jmp
push
(bad)
shr
xchg
mov
add
push
jp
adc
inc
pop
imul
mov
int
adc
cmp
adc
xchg
mov
pop
lds
les
jmp
mov
inc
outs
xor
dec
jnp
cmp
push
sbb
and
push
xor
xchg
adc
cmc
(bad)
xchg
mov
ja
cmps
jnp
mov
loop
arpl
cld
mov
xor
scas
cli
jge
jp
cli
inc
loop
(bad)
push
test
push
mul
cmp
xchg
outs
pop
cld
fnsave
ds
jg
push
mov
wrmsr
pusha
or
sbb
test
lods
sti
jge
mov
sub
pop
sbb
(bad)
ja
stos
(bad)
pop
cmc
in
shr
jns
mov
push
test
std
fimul
jbe
inc
xor
enter
inc
(bad)
or
and
aad
aas
or
pop
mov
jmp
jg
ja
jns
xor
dec
cwde
add
pop
cmp
cmps
sbb
push
(bad)
call
into
lods
ja
sub
pop
scas
fwait
inc
jecxz
test
or
cmc
call
jmp
jmp
adc
js
cmp
jo
shr
loopne
in
push
jmp
lds
push
cmps
(bad)
and
sub
lods
fsubr
sub
dec
pop
inc
or
sub
addr16
mov
nop
mov
test
(bad)
icebp
int
rcr
jne
sub
out
sub
and
push
mov
sti
pop
(bad)
ins
out
cli
daa
stos
popa
jp
push
loopne
adc
repz
or
punpckhwd
pop
and
xor
and
add
push
(bad)
rcr
ret
cmps
jb
jmp
mov
mov
push
jns
jecxz
cwde
ror
push
in
sbb
in
(bad)
pop
or
mov
(bad)
(bad)
xor
daa
xchg
sbb
xchg
mov
stc
fdivr
push
mov
jbe
mov
inc
fsubr
inc
popf
ret
arpl
in
(bad)
fcom
jns
loop
into
hlt
adc
mov
int3
pop
test
adc
push
mov
push
fld
leave
cmps
xchg
rcl
gs
out
xchg
ja
test
xchg
and
lds
xchg
icebp
popf
repnz
test
sbb
pop
and
(bad)
clc
xlat
in
sbb
int3
icebp
(bad)
fs
mov
add
sbb
gs
jo
shl
mov
test
or
xor
pop
icebp
push
jnp
(bad)
pop
xchg
pop
dec
or
pop
(bad)
stc
and
pop
cli
sbb
imul
lods
adc
push
xchg
add
push
pop
in
or
scas
inc
rcr
and
push
xchg
mov
sbb
jne
in
cmp
lods
xor
pop
and
cld
sub
icebp
out
cmps
mov
xor
jg
and
xor
adc
fs
mov
xor
mov
sub
jns
dec
dec
data16
cld
cmp
xor
sub
(bad)
jmp
push
xor
add
ss
jae
je
xor
pop
mov
jl
xchg
movs
add
retf
adc
in
jge
aad
sub
sbb
int3
adc
xor
lods
push
sub
fcomi
pop
sub
and
pop
sub
rcr
out
sbb
sub
push
xor
int3
jb
ret
sbb
jp
add
clc
xchg
(bad)
loopne
pop
or
sti
xlat
sub
enter
(bad)
pop
xor
enter
xor
xchg
push
xlat
and
into
pop
mov
jl
sub
fisub
iret
pop
mov
inc
inc
push
sub
cmp
ror
xor
push
jecxz
adc
sbb
aam
push
inc
and
(bad)
fs
call
mov
xor
jle
movntq
sbb
aas
dec
test
or
cmp
jae
ret
cmp
or
fsubr
xchg
sub
rep
cmp
icebp
div
cmp
and
(bad)
fstp
(bad)
repnz
and
(bad)
lods
das
xchg
mov
cdq
cwde
sub
movs
sbb
test
add
rcl
lahf
in
mov
xor
mov
ror
scas
inc
and
call
xor
mov
js
lahf
stos
iret
mov
int
jmp
xchg
mov
mov
dec
mov
popf
dec
adc
popa
lea
iret
cmp
fisttp
js
pop
xor
fbstp
push
(bad)
cwde
sub
cdq
cmp
push
call
cmp
into
retf
ins
cli
sub
jecxz
fdiv
pop
jae
jnp
jp
loop
cmp
enter
daa
mov
imul
push
test
dec
adc
fld
lock
(bad)
les
or
sti
jmp
int
mov
ror
jae
jp
fsub
xor
mov
fcomp
dec
hlt
dec
je
ins
xchg
cdq
int
test
ffree
pop
inc
xor
pop
js
sub
push
psraw
add
inc
mov
ss
fsubr
pop
in
xor
ss
in
push
jnp
loopne
mov
into
cmps
xor
aas
and
and
cli
rol
aad
hlt
loop
push
push
(bad)
lds
inc
call
sub
int3
daa
jae
mov
fdivp
adc
cmp
xor
aas
dec
repz
dec
or
loope
(bad)
xchg
jecxz
inc
cs
in
mov
cmp
xchg
cdq
pop
mov
adc
jns
push
adc
jns
adc
xchg
cmp
addr16
mov
mov
into
mov
pop
fldcw
cli
mov
frstor
movs
xchg
jg
xor
sbb
js
ja
adc
arpl
and
pop
shr
sbb
xchg
inc
sbb
(bad)
lea
les
(bad)
push
fdiv
sub
jae
ja
jno
dec
ret
xor
adc
(bad)
stc
dec
sub
enter
cmp
repz
test
fiadd
xor
xor
int3
mov
jp
xchg
retf
idiv
in
mov
pusha
clc
sbb
into
mov
mov
sub
fmul
lds
call
xor
es
(bad)
cmp
jl
data16
(bad)
fidivr
fs
mov
bound
pop
fcomp
mov
mov
js
cdq
je
pusha
lock
sub
retf
xchg
icebp
xor
out
sahf
std
sub
push
xor
push
mov
sar
inc
mov
addr16
test
and
aam
div
jnp
mov
out
mov
mov
mov
rcl
jmp
inc
xchg
test
in
scas
lds
hlt
push
jl
xchg
cs
jae
sub
mov
ret
xchg
iret
addr16
pop
cli
les
sub
or
(bad)
daa
ret
pop
mov
xor
jmp
push
push
cmps
push
fild
out
mov
add
xchg
movs
or
imul
inc
push
xor
mov
sub
push
jle
clc
pop
xor
lods
adc
jmp
scas
imul
fild
dec
in
pop
sub
add
push
xchg
ficomp
pop
out
mov
sub
xchg
push
add
push
out
add
stc
(bad)
push
lea
or
popa
dec
xchg
loopne
sub
lahf
ror
push
xor
jbe
inc
jge
push
pushf
xor
in
xchg
push
sahf
push
mov
mov
out
out
(bad)
aad
ins
sbb
leave
and
cmp
jbe
sub
arpl
mov
push
(bad)
in
xchg
leave
lods
jg
clc
test
popf
popa
ret
cli
scas
jmp
add
call
jmp
jne
mov
xchg
in
jnp
mov
fdivr
mov
cmp
out
jne
xchg
ror
mov
pop
dec
jne
out
mov
dec
adc
jbe
or
sub
mov
cli
adc
call
jge
jns
mov
add
test
dec
pop
sbb
cmc
cmp
nop
or
out
lds
or
pop
inc
pop
xor
inc
fiadd
pop
aad
lahf
mov
pop
aad
out
imul
ins
jmp
and
movs
mov
test
xchg
or
mov
adc
mov
sub
push
push
loop
hlt
push
ret
sbb
outs
push
fsub
sbb
(bad)
xchg
jp
in
mov
adc
xchg
jecxz
dec
loopne
xchg
mov
mov
push
cwde
mov
daa
add
mov
mov
cwde
adc
out
ficomp
push
in
jmp
and
ret
mov
adc
pop
or
sbb
xor
push
lea
loopne
dec
lods
pop
nop
and
xlat
mov
stos
xchg
clc
scas
inc
xchg
pop
int3
aas
in
(bad)
mov
jl
jns
in
stc
xchg
push
xlat
js
dec
sar
jmp
clc
xor
adc
mov
and
jle
std
retf
adc
inc
and
cmp
or
adc
into
inc
adc
data16
stos
std
push
pop
inc
mov
mov
jmp
add
or
scas
mov
jp
push
pop
les
mov
dec
dec
imul
out
loopne
push
lock
data16
repnz
mov
imul
icebp
mov
jecxz
nop
xchg
cs
movs
sub
push
rol
push
cmp
mov
ret
fs
clc
xchg
mov
sbb
pop
inc
or
aad
clc
pop
mov
mov
in
sub
hlt
inc
adc
mov
retf
push
rol
mov
movs
push
xor
mov
add
(bad)
jg
add
sub
and
mov
out
dec
lock
jmp
push
jle
hlt
cmps
xchg
imul
jle
xchg
push
ret
xor
outs
cli
mov
xchg
nop
jecxz
jne
inc
push
xor
xor
out
and
(bad)
jns
pop
sbb
xchg
xchg
sbb
and
jnp
mov
jbe
push
jmp
mov
dec
imul
test
into
pop
(bad)
sbb
cmp
inc
cmp
rol
and
bound
ja
popa
leave
fiadd
in
dec
into
int
cmp
mov
jns
push
(bad)
pop
xor
retf
cs
xchg
push
xor
jp
add
(bad)
xor
(bad)
push
pop
lahf
jno
push
in
nop
pop
add
xchg
mov
nop
loop
and
pop
sahf
sbb
loopne
jbe
jmp
out
loop
mov
pop
sbb
(bad)
pop
lods
or
inc
mov
xchg
push
lods
ins
loop
xlat
xor
push
ins
fist
cmp
sub
icebp
idiv
data16
add
fwait
xchg
and
ins
push
nop
adc
dec
dec
into
(bad)
mov
cmp
vzeroupper
push
fwait
xor
(bad)
xchg
and
push
test
addr16
fst
jp
cmp
mov
push
addr16
inc
cmp
popa
xor
jp
xchg
mov
push
out
and
xor
dec
pop
fidiv
inc
lahf
movs
jno
repz
ins
dec
sbb
out
je
(bad)
mov
test
mov
mov
cli
pop
enter
sub
ins
cmp
retf
xchg
call
stos
push
jo
mov
and
call
out
or
js
sbb
cli
pop
(bad)
loopne
stos
and
mov
popa
das
(bad)
sub
dec
cld
cmps
lds
lock
call
sub
mov
or
cmp
pop
fistp
mov
scas
pop
stos
lea
dec
cmp
cmp
mov
cmp
adc
xchg
sti
dec
and
inc
jae
scas
mov
jo
std
adc
jo
or
xor
add
jmp
add
aas
jmp
jns
out
pop
xchg
add
jae
fbld
lahf
xor
push
add
add
dec
jne
sub
js
(bad)
sbb
cdq
push
xor
stc
adc
fsub
repz
(bad)
jp
shl
stos
jno
rol
push
and
fistp
sub
mov
pusha
add
adc
jle
and
(bad)
push
imul
cmp
sti
loopne
jne
or
cwde
(bad)
popa
push
jle
add
mov
dec
mov
pop
mov
xchg
xchg
lds
mov
jbe
sbb
push
iret
xchg
dec
and
into
mov
dec
js
ds
js
pop
ss
mov
jle
mov
mov
mov
in
in
xor
xor
dec
xchg
add
out
jnp
pop
xchg
fs
cmps
jmp
dec
push
xor
fdivr
pop
aam
daa
xor
es
outs
push
adc
xchg
add
xchg
in
pop
push
rcl
cmp
mov
jge
cli
adc
sub
fsub
pop
adc
test
in
pop
ret
adc
push
shl
xchg
lods
cmps
cli
lock
(bad)
xchg
icebp
iret
ins
mov
jno
or
mov
inc
cmp
dec
push
les
and
cmp
scas
pushf
pop
imul
(bad)
fsubp
xchg
pushf
arpl
pop
rol
pop
mov
jns
call
mov
loopne
lahf
cmp
sub
push
jae
aam
and
mov
(bad)
dec
popa
xchg
out
das
add
imul
stos
ret
jmp
dec
inc
call
jmp
into
mov
mov
sub
xchg
and
or
lock
dec
mov
test
ins
push
adc
loop
out
jmp
mov
jge
daa
dec
xchg
inc
ret
jnp
aam
test
cld
(bad)
das
xchg
jns
or
or
iret
mov
mov
pop
sub
xor
push
xor
dec
mov
jbe
xchg
mov
cmp
mov
test
dec
mov
in
clc
js
pop
inc
ret
scas
and
lods
ins
jp
mov
gs
dec
ds
push
inc
retf
shl
stos
mov
pop
jnp
sub
ror
add
xor
aaa
add
add
xor
sub
push
hlt
(bad)
das
cmp
cli
push
push
icebp
sub
fcom
jecxz
jb
dec
stc
sub
loope
jo
cdq
xor
jmp
out
pop
out
bound
xchg
inc
mov
data16
leave
cli
mov
aas
arpl
lea
mov
sbb
adc
push
fwait
div
out
and
sub
lea
push
xchg
mov
in
jns
jge
sub
test
cmp
cmc
dec
scas
repnz
call
push
inc
out
xor
xchg
ins
shr
ins
cld
lahf
jecxz
fdivr
xlat
and
mov
xchg
cmp
xor
mov
fwait
xchg
push
push
scas
lock
xchg
addr16
(bad)
test
cmp
pop
xchg
mov
out
pop
enter
pop
je
jae
and
or
aad
adc
sub
sbb
je
and
pop
mov
push
jns
dec
ficomp
inc
add
mov
and
xor
cmp
test
jnp
add
(bad)
not
add
sbb
mov
pop
jnp
adc
fs
dec
inc
shl
neg
dec
pop
iret
mov
cmp
loopne
mov
cmp
jo
rcl
imul
iret
js
(bad)
mov
push
call
sub
mov
sub
call
jns
rol
lahf
aam
daa
xchg
cmp
jmp
test
sbb
pop
sbb
stos
add
hlt
cmp
(bad)
rol
cmc
lahf
aaa
pop
jge
or
mov
(bad)
mov
pop
dec
(bad)
xor
popa
imul
iret
test
dec
outs
fidivr
js
push
mov
add
push
std
xor
xor
and
mov
jne
fs
sub
sbb
mov
push
add
adc
jbe
jmp
daa
or
cmp
ret
push
and
inc
push
pop
mov
loope
sbb
daa
sar
adc
jle
sub
jb
mov
adc
add
xchg
mov
pop
jecxz
stos
ins
sub
and
pop
xchg
dec
xor
pop
sbb
xchg
mov
retf
xor
inc
mov
mov
pusha
(bad)
xchg
xor
jne
aaa
xchg
push
loop
outs
sbb
sbb
or
adc
js
(bad)
cmp
fs
repnz
adc
xchg
frstor
test
inc
mov
xchg
pop
popf
or
addr16
pop
ins
sub
sbb
add
xchg
or
je
cmp
out
cld
shr
mov
or
vdivpd
js
shr
pop
push
popa
lods
xor
xor
clc
ja
das
clc
cmps
sbb
or
repnz
add
push
js
push
mov
mov
xchg
mov
loopne
or
(bad)
pop
jbe
mov
loope
out
sub
mov
in
repz
les
std
inc
jmp
inc
and
imul
cmc
pop
dec
ds
hlt
mov
repz
add
jmp
repz
mov
mov
movs
push
xchg
mov
jecxz
das
out
inc
retf
popf
aas
movs
(bad)
jo
imul
lock
aad
(bad)
out
cli
xchg
add
add
cmp
popf
xchg
sbb
sbb
and
fild
nop
or
lahf
pop
mov
outs
ret
mov
cmp
mov
push
mul
adc
fucomip
add
inc
jle
mov
std
adc
repz
jo
jge
sub
jle
(bad)
lock
int
cdq
jmp
push
push
dec
inc
dec
shl
out
or
cmc
sahf
push
mov
push
int3
loop
push
and
daa
sub
xchg
cdq
pop
xchg
push
lods
sti
int3
mov
push
lods
push
cmp
sub
xchg
cwde
pushf
iret
dec
std
hlt
xchg
in
adc
mov
pop
jle
adc
mov
xchg
lods
xchg
adc
push
sbb
xchg
retfw
jge
or
cld
sbb
push
popa
cld
dec
fucom
xor
ins
cmps
in
push
sub
fcom
cmp
pop
jmp
icebp
loop
pop
inc
in
ins
out
adc
fbld
dec
fdivr
inc
in
data16
sub
xor
setnp
or
push
ret
es
lock
dec
jp
mov
stos
lods
pop
cmc
jle
mov
add
pop
and
mov
addr16
rcl
mov
xchg
dec
inc
daa
pop
cmc
pop
ins
lods
mov
in
lock
push
repz
cdq
xchg
pop
add
and
xor
repz
or
enter
mov
and
clc
jns
outs
repnz
aam
js
jns
rcl
shl
lahf
js
xchg
scas
add
mov
xchg
xor
jns
gs
add
cmc
cld
je
icebp
cli
stos
mov
cmp
into
test
test
sub
ret
inc
ins
imul
loop
pop
sub
push
jo
(bad)
adc
jb
out
jmp
imul
mov
lea
sub
js
push
mov
fild
not
inc
xchg
xchg
mov
cld
and
or
sub
sbb
fdiv
mov
lea
(bad)
jge
sti
and
repnz
lock
in
add
idiv
dec
data16
fs
sub
jmp
xchg
mov
popf
xchg
mov
sahf
fdivp
call
in
out
jne
stc
and
xlat
outs
xchg
push
enter
jbe
loope
cs
inc
rcl
lods
fwait
sahf
in
es
sub
nop
ins
jnp
pusha
sub
repz
stos
in
mov
sub
in
sbb
popf
outs
pop
and
pop
in
jp
jge
shr
fbstp
adc
dec
mov
test
xchg
clc
and
inc
push
adc
add
xor
mov
dec
cmc
sub
scas
cdq
jne
sbb
call
sbb
test
jge
push
sub
pop
in
xchg
lock
push
push
dec
pusha
daa
cmp
adc
in
mov
js
xchg
iret
ret
fcomp
push
and
mov
test
push
xchg
xchg
cmp
pop
icebp
ror
ins
jp
xchg
sar
cmp
cmp
pop
(bad)
shr
jmp
xchg
test
outs
xchg
mov
into
cdq
mov
pusha
js
jbe
cmps
jl
adc
(bad)
daa
loopne
paddw
add
fnstenv
out
(bad)
pop
push
cli
jae
pop
jg
and
jmp
ja
test
test
adc
movs
pushf
ret
xchg
data16
inc
jnp
arpl
jge
cs
and
push
std
nop
push
ret
cld
outs
xchg
and
jne
inc
pop
push
and
(bad)
jle
xor
pushf
setne
outs
and
(bad)
fst
xchg
lods
(bad)
fbld
jl
lods
sahf
dec
in
je
fistp
or
in
ds
in
jge
fs
fisubr
adc
mov
jg
xor
inc
(bad)
and
in
cmp
(bad)
int3
js
into
sbb
sbb
push
mov
mov
jns
push
stos
jbe
and
dec
lahf
cdq
addr16
mov
and
inc
in
out
fst
test
add
sahf
out
and
xor
inc
fbstp
or
icebp
jns
ds
(bad)
jle
lds
test
sbb
mov
mov
dec
sar
sub
repz
cmps
xchg
push
xor
inc
cld
pop
jle
ins
addr16
jmp
inc
xchg
fbld
jmp
cmp
xchg
push
nop
adc
pushf
pusha
mov
inc
xor
hlt
scas
ret
jbe
jmp
cmp
xchg
dec
or
out
sar
fistp
xor
adc
addr16
pop
test
and
outs
imul
jle
ror
xor
call
stos
ret
mov
imul
and
repz
(bad)
adc
lahf
inc
pop
dec
int3
fwait
and
call
dec
cmp
cli
xchg
pop
inc
cmp
add
cmp
jg
mov
add
xor
lock
mov
cmp
outs
in
dec
ja
adc
jne
mov
xor
xor
test
inc
cmc
jb
or
mov
mov
xchg
in
and
stos
test
pop
jb
aam
sub
leave
fadd
push
sbb
arpl
jno
arpl
cmp
cmp
pop
push
test
not
lods
cli
repz
neg
xor
fld
mov
cmp
jge
cmove
jle
retf
cmc
sbb
(bad)
jg
adc
lods
xchg
loope
arpl
mov
(bad)
repnz
jne
and
push
jne
pop
push
jns
inc
xor
cli
ins
push
sub
(bad)
adc
cli
jecxz
hlt
sub
cmc
mov
aad
iret
popf
es
int3
fwait
cs
add
sbb
mov
mov
and
pop
mov
mov
call
xchg
push
adc
call
cmps
das
sbb
push
push
cs
pop
scas
loopne
test
aaa
dec
pop
mov
(bad)
call
addr16
in
test
mov
adc
jge
fcomp
xchg
mov
and
adc
mov
call
ret
stc
fcmovnb
sbb
cmp
sub
into
xor
in
ficom
inc
shr
sbb
jae
cmps
retf
xchg
sub
cmps
jo
adc
jmp
aaa
call
cmp
jge
add
pop
xlat
adc
nop
enter
sub
test
inc
mov
cwde
add
or
sbb
icebp
inc
stc
sbb
mov
dec
mov
jmp
push
jae
repz
xor
mov
jp
xchg
mov
adc
dec
out
fld
sar
jne
xchg
rcl
mov
or
mov
in
outs
xor
jo
scas
sub
adc
push
push
and
mov
push
loope
dec
(bad)
or
sbb
ficom
add
mov
pop
jno
imul
fmul
and
out
sub
sub
(bad)
lods
scas
ror
jmp
das
sub
or
aam
jmp
fcomp
xor
nop
sbb
cli
in
addr16
sub
cmp
dec
push
and
in
xchg
popa
scas
fcom
sbb
adc
movs
xchg
call
stc
jmp
mov
sub
in
ins
xor
sub
xchg
add
pop
rcr
js
imul
fisub
push
push
retf
shl
cmp
clc
jae
aad
push
cmp
mov
add
mov
jmp
out
es
jns
jae
js
cmc
(bad)
dec
enter
xchg
cmps
stos
clc
aas
ret
rol
sti
pop
dec
adc
inc
js
mov
push
out
adc
xor
(bad)
pop
fwait
jne
sbb
mov
addr16
imul
sub
test
mov
aas
cld
push
and
lahf
cmp
jmp
jl
adc
scas
adc
popa
xlat
out
xor
std
push
xchg
test
je
mul
xor
push
pop
icebp
sbb
aas
repz
shl
xlat
aad
cmps
pushf
mov
push
sti
inc
mov
inc
mov
xor
retf
fdivr
sbb
ret
cmp
and
int
fwait
(bad)
push
lods
pop
dec
cli
pop
shl
and
mov
cli
cmp
fadd
in
mov
outs
push
mov
mov
ret
mov
adc
sbb
adc
fidivr
in
das
es
ins
push
sub
ss
sub
fild
test
outs
xchg
pushf
jae
push
pop
leave
inc
repz
push
pop
dec
mov
jbe
inc
mov
jecxz
adc
sti
jge
or
pop
int3
mov
fs
pop
xchg
mov
cld
pop
sub
cmp
in
addr16
dec
shr
or
jne
leave
cmp
pop
fs
xchg
in
retf
out
mov
jns
fwait
sbb
enter
xchg
ret
test
js
movs
arpl
mov
and
jmp
xchg
sbb
or
call
jne
pop
xchg
cli
mov
hlt
inc
repnz
repz
(bad)
bound
add
adc
icebp
mov
mov
push
xor
adc
jp
pop
into
xor
int3
mov
pop
mov
mov
ins
loope
push
data16
mov
push
sbb
or
out
sti
in
daa
add
shl
xchg
xchg
push
iret
push
test
repz
addr16
jmp
push
push
mov
es
cmp
xor
daa
xchg
cmp
and
std
push
cmp
adc
retf
pusha
mov
jp
sar
aam
add
in
and
js
mov
mov
movs
mov
into
sar
jl
mov
shr
sub
cmp
xchg
inc
test
mov
cld
pop
xchg
loope
add
jns
jno
pop
mov
mov
cld
jne
mov
aas
dec
sub
cmc
mov
imul
int
xor
cwde
push
inc
js
mov
sahf
dec
icebp
push
sbb
cmp
cmp
inc
cmp
push
xor
mov
test
repz
pop
sub
clc
xor
sbb
lods
cmp
push
fs
cmp
in
jmp
mov
inc
add
bound
xor
in
or
ins
pop
xchg
pop
js
xor
and
pop
push
pop
inc
push
fisttp
pop
dec
sbb
jp
(bad)
repz
lahf
jle
test
jl
sub
in
jnp
and
addr16
xchg
mov
push
je
lock
pop
xchg
addr16
jp
movs
rcl
xchg
in
mov
or
lahf
ins
sub
mov
mov
sub
(bad)
in
xchg
inc
add
xor
gs
jne
add
js
mov
mov
test
pushf
loopne
cli
cld
dec
mov
add
cmp
xchg
imul
shr
add
in
xor
stc
push
jae
xor
mov
push
into
retf
adc
leave
shl
mov
data16
cmp
push
cmp
and
xchg
aam
inc
call
pop
sbb
mov
and
or
sbb
stc
or
iret
mov
sahf
and
dec
cmp
push
add
cmp
pop
sub
mov
aad
and
cmp
fsubr
mov
xchg
mov
mov
jecxz
push
or
jge
ret
sub
aad
mov
cmp
jns
fwait
pand
shl
mov
test
sub
repnz
and
nop
pop
adc
les
sbb
xchg
mov
call
imul
and
loope
fsub
xchg
jbe
sbb
dec
clc
clc
(bad)
sar
inc
out
(bad)
hlt
mov
sub
js
xchg
dec
pop
push
in
mov
test
add
cmc
fisub
and
and
jne
adc
mov
es
mov
mov
test
jge
push
loopne
imul
push
cmp
fcomp
xor
leave
jl
stos
jecxz
xchg
(bad)
dec
in
mov
add
(bad)
mov
push
cmp
pop
lea
push
ins
cmp
gs
jb
push
fisub
mov
dec
cs
add
(bad)
or
cmp
or
int
popf
cmps
adc
nop
cmp
pop
loopne
mov
call
popa
mov
xor
pop
lahf
cmp
out
repnz
sbb
call
xor
out
lock
idiv
xor
std
push
mov
ficom
dec
arpl
xchg
rol
imul
mov
sbb
test
(bad)
cwde
lahf
pop
mov
mov
sub
mov
jnp
cmp
inc
shl
and
and
adc
jl
and
into
cmp
pop
sub
pop
xor
xlat
out
repnz
mov
xor
shl
ret
bound
stos
(bad)
xchg
leave
cmp
js
(bad)
cmps
lods
pop
lods
pushf
inc
xchg
mov
sbb
add
xchg
popf
and
call
(bad)
xor
xchg
dec
rcr
push
aam
cmc
jo
bound
sbb
push
xchg
push
shl
cs
fild
stos
or
xchg
dec
cmp
xchg
fbld
lods
mov
sahf
xor
out
not
adc
xlat
dec
pop
ret
movs
push
jmp
cmps
in
int3
cmp
lea
lods
loop
stos
addr16
cs
and
and
hlt
xchg
mov
in
std
imul
sub
mov
loop
arpl
or
aaa
sub
jmp
lahf
js
loopne
push
jnp
jl
hlt
or
mov
adc
pop
push
and
adc
cmp
mov
dec
sti
ret
or
sbb
inc
and
cmc
jmp
pop
dec
sub
cmp
daa
push
cmc
or
xor
fwait
out
dec
cld
stos
or
js
data16
dec
cmp
rcr
imul
pop
or
add
shl
cld
mov
sar
inc
sub
rcr
sbb
sub
(bad)
je
xchg
xchg
add
and
shl
daa
in
pop
push
jo
js
cmp
addr16
les
add
jecxz
adc
mov
mov
scas
xchg
push
arpl
ret
mov
rcl
std
enter
clc
iret
call
js
(bad)
stos
popf
call
jae
or
jl
test
shr
adc
push
lds
mov
std
cmp
jno
vunpcklps
mov
mov
neg
and
sbb
fcmovnbe
in
lea
fisub
retf
add
iret
mov
into
mov
and
xor
cmp
stos
pop
push
pop
push
(bad)
pop
daa
fs
js
mov
fdivr
jae
xchg
jp
cmp
push
test
add
push
jl
adc
shl
(bad)
mov
pop
int
xlat
or
mov
scas
dec
cmp
mov
ins
ins
(bad)
and
jmp
popa
es
fwait
mov
cmp
jno
jl
dec
pop
sub
outs
pusha
cmps
xchg
or
stc
repz
mov
cmp
xchg
dec
adc
mov
clc
and
xchg
(bad)
arpl
sub
sbb
mov
adc
ror
mov
xor
xchg
pushf
pop
out
cmp
mov
push
jno
mov
cmc
xchg
cmps
or
cmp
jns
lods
mov
ror
rcl
add
mov
inc
sub
push
mov
sub
add
jp
cmc
repnz
pop
sahf
repz
pop
add
in
jno
mov
xor
push
dec
jmp
sub
dec
enter
mov
nop
les
or
cdq
cmp
inc
test
icebp
ror
and
imul
cld
mov
mov
stc
fstp
dec
jle
mov
dec
cwde
cmp
pop
nop
sbb
(bad)
das
data16
sbb
std
pop
test
adc
ds
jb
test
mov
xor
cmps
js
(bad)
mov
sar
sahf
scas
mov
sbb
sub
outs
fisttp
mov
rol
out
lea
push
mov
ins
xchg
mov
mov
fs
fisubr
mov
scas
je
xor
pop
mov
sub
push
sub
dec
add
mov
cmc
mov
xor
and
and
test
cmc
ins
outs
arpl
adc
imul
mov
aaa
(bad)
pusha
int3
in
xchg
push
inc
and
jg
stos
mov
fbld
stc
xor
and
cmp
jo
inc
out
(bad)
mov
xchg
retf
sbb
les
mov
pop
loopne
out
pop
jecxz
mov
push
and
jge
mov
int
pop
add
adc
(bad)
mov
scas
or
shl
clc
and
pop
mov
mov
push
xchg
and
aad
fcom
test
sub
add
xchg
cmc
add
ror
push
(bad)
jne
cmps
sbb
adc
xchg
nop
mov
xor
sbb
ret
data16
sti
popa
dec
fisttp
cmps
xchg
lods
mov
adc
mov
(bad)
xor
push
aaa
imul
or
xchg
cmps
fcmovnbe
jle
xchg
aad
lahf
push
jle
mov
push
sbb
fidivr
mov
adc
xchg
push
scas
mov
xor
mov
scas
cli
push
aas
shl
call
lods
loopne
adc
inc
inc
mov
xchg
push
aad
xor
movs
push
repz
js
sbb
and
mov
fisub
test
mov
fcom
mov
test
xor
pop
add
adc
sbb
xor
fcom
data16
(bad)
loopne
les
jle
dec
add
ror
imul
cmp
cdq
xor
push
rcl
sbb
(bad)
push
call
mov
push
test
dec
pop
xor
sub
sub
or
mov
(bad)
xor
push
xor
rol
pop
push
dec
and
leave
in
out
push
add
dec
adc
cwde
test
call
or
adc
sti
test
popf
push
jmp
fistp
jmp
pop
dec
arpl
test
(bad)
pop
xchg
push
adc
xor
cmp
pop
sub
adc
or
ins
xchg
and
jl
adc
bound
in
and
(bad)
push
arpl
fimul
mov
stos
fdivr
push
sti
sub
jmp
outs
xchg
sbb
xor
mov
jl
mov
xor
iret
cmps
sub
sbb
inc
fs
in
out
push
hlt
(bad)
pop
aaa
and
push
pop
out
in
fild
mov
xor
xchg
mov
test
jecxz
js
and
test
xchg
dec
into
outs
xchg
mov
fsub
jo
aad
inc
aas
lods
add
xor
cmp
loope
adc
cmc
cmc
in
aam
inc
pop
stos
cmc
popa
movs
mov
test
nop
pop
jns
add
hlt
dec
(bad)
push
hlt
mov
fldenv
add
or
sub
ins
lock
hlt
movs
js
cmp
mov
pop
mov
pop
or
xchg
pop
jmp
mov
sahf
sbb
jne
pop
clc
lea
push
ror
xchg
mov
pop
out
mov
mov
not
(bad)
jl
cld
shl
(bad)
xchg
je
jmp
add
mov
mov
cmc
iret
push
jbe
inc
aam
inc
aam
cmps
jle
mov
test
pop
(bad)
dec
fstp
sub
jo
in
add
(bad)
mov
cmp
cmp
adc
xor
shr
imul
mov
stos
icebp
retf
cdq
sub
in
push
aad
in
js
pop
pushf
call
mov
dec
cmc
xlat
jae
in
and
test
mov
f2xm1
and
pop
ror
fadd
sar
ins
and
nop
add
icebp
cli
stos
adc
jns
in
push
pop
inc
test
je
inc
jmp
mov
cmp
in
jo
xchg
das
sbb
pop
stc
into
icebp
inc
add
jg
div
dec
jnp
add
clc
das
dec
(bad)
shl
adc
mov
inc
cmp
xchg
push
cmp
jg
ds
sub
xchg
cmps
push
nop
inc
inc
xchg
and
push
add
sbb
cmc
lea
xchg
ins
xor
pop
and
jp
adc
popf
es
rol
mov
mov
jae
(bad)
arpl
and
push
sub
mov
cmp
icebp
bound
adc
fdiv
and
xchg
cmps
mov
adc
xor
and
ror
mov
addr16
adc
mov
sub
lock
(bad)
imul
out
xchg
sbb
cld
fst
pop
scas
call
adc
(bad)
jne
dec
ja
pop
leave
aam
mov
mov
pop
(bad)
into
icebp
mov
cmc
or
adc
cmps
xor
cmps
imul
xchg
stos
and
pop
icebp
xchg
jmp
xor
jp
add
retf
xor
inc
outs
sub
shl
mov
mov
stos
jge
mov
cmc
or
pop
fs
loope
fbstp
push
ficom
lea
mov
mov
inc
push
sub
retf
cmps
rol
inc
xchg
addr16
adc
mov
pop
out
push
repz
sbb
pop
loope
imul
jmp
sar
adc
mov
pop
jmp
sbb
(bad)
gs
data16
xor
xor
outs
mov
sub
push
cmp
fdiv
out
movs
cmp
push
dec
out
std
stos
loope
cwde
sbb
add
add
dec
sbb
jmp
pop
sbb
xor
int3
or
cwde
fadd
sub
jp
iret
loop
sub
int
xchg
adc
or
jle
into
icebp
jo
add
lds
ret
xchg
das
ins
leave
lods
cs
mov
imul
mov
fiadd
fldcw
push
daa
and
jns
bound
xchg
inc
jb
fstp
jae
xchg
stos
jg
enter
cli
js
(bad)
pusha
jne
sub
push
sub
das
push
ret
pushf
mov
pop
adc
test
and
add
fistp
(bad)
push
xchg
adc
ret
scas
pusha
shl
push
cmp
mov
stc
pop
and
mov
mov
pop
jb
fwait
ja
loopne
(bad)
in
push
cmps
ds
xchg
(bad)
or
pop
aaa
in
and
inc
cmp
fs
sub
pop
les
into
sub
pop
shr
mov
add
sbb
xor
sbb
je
mov
stc
nop
es
push
sub
in
and
je
push
scas
cmp
mov
sub
rcl
test
dec
cmps
pop
iret
loopne
xchg
int3
xor
xor
jp
ficomp
add
fistp
std
test
xchg
push
pop
pushf
hlt
mov
out
mov
xlat
jb
arpl
movs
pop
aad
call
std
popa
fist
sbb
jp
in
xchg
aaa
mov
mov
int3
lds
sbb
mul
pop
sahf
es
sti
cmp
ret
add
outs
dec
xor
(bad)
inc
gs
sub
mov
inc
pop
inc
inc
adc
bound
xchg
leave
pop
inc
sbb
gs
call
xor
mov
jns
xchg
arpl
cld
add
pop
fiadd
jno
or
into
cmp
push
mov
pop
dec
mov
hlt
jl
test
cmc
loopne
lods
in
jmp
mov
cld
and
shr
jae
div
movs
(bad)
jp
xchg
aam
fcmovbe
mov
out
dec
and
in
inc
(bad)
mov
into
jle
mov
mov
nop
mov
push
and
inc
push
je
in
ds
fcom
pop
cli
mov
stc
shl
clc
shr
scas
out
adc
and
mov
out
push
fst
ja
outs
hlt
retf
xchg
sti
mov
(bad)
xchg
das
ja
xchg
push
shl
ror
sbb
out
or
jl
adc
jmp
ds
xor
bound
jb
fidiv
dec
pop
pop
adc
ss
out
stos
pop
xchg
adc
aaa
inc
xor
jp
jb
into
mov
repz
sub
cs
js
sub
pop
repnz
and
inc
fs
push
test
sar
scas
not
jg
scas
cmps
mov
loope
dec
xlat
jge
xchg
test
aam
shl
sahf
xor
jmp
push
sbb
cmps
nop
adc
jge
cmp
out
jnp
xchg
xchg
add
cmps
lds
add
out
mov
inc
aad
and
aam
fild
jbe
test
xchg
push
mov
adc
call
jmp
mov
jge
sbb
iret
mov
das
jmp
cmp
adc
jb
push
fs
mov
and
movs
xor
dec
adc
and
sub
inc
mov
clc
push
xchg
push
nop
into
mov
jns
test
mov
mov
xchg
mov
or
sti
lahf
jne
cmc
jg
jmp
xchg
and
xchg
pop
mov
add
js
cs
dec
rcl
ins
xchg
xchg
pop
test
pop
mov
mov
mov
xor
adc
jno
sub
push
mov
test
jb
pushf
lods
clc
cmp
jge
xor
xchg
xchg
das
jle
pop
imul
jno
sbb
jle
inc
adc
dec
rcl
add
adc
inc
push
and
cmp
lds
mov
cmp
ins
jns
mov
push
mov
xchg
inc
inc
scas
inc
loope
or
lds
xchg
imul
cdq
sbb
rcr
stc
mov
pushf
jp
sbb
or
xchg
fidiv
mov
int
xchg
daa
nop
sub
cmp
and
stos
adc
hlt
push
rol
cwde
rcl
or
ins
repz
mov
mov
push
pop
(bad)
(bad)
outs
js
cmps
lods
xchg
inc
inc
cmp
mov
xchg
add
das
or
fcomp
sub
mov
adc
push
and
jmp
and
hlt
(bad)
xchg
push
jo
cwde
fwait
cmp
xchg
mov
mov
pop
mov
sar
inc
sbb
mov
in
pop
call
(bad)
push
jp
retf
adc
sahf
gs
js
idiv
stos
and
loopne
jmp
and
clc
out
sahf
mov
jbe
mov
and
xor
fistp
cmp
xor
stc
mov
ret
fsubr
push
mov
(bad)
retf
loopne
clc
in
les
cmc
cmps
push
imul
pop
push
inc
(bad)
pop
mov
sbb
aad
pop
jmp
aam
inc
or
sub
or
mov
inc
sbb
mov
stc
dec
ret
repz
imul
cld
push
or
pop
sub
repz
js
xor
xchg
mov
and
outs
(bad)
fsubr
xchg
(bad)
stc
(bad)
sbb
or
repnz
mov
xchg
ret
aaa
sub
push
sub
das
sub
xchg
js
jl
es
loop
xor
hlt
js
push
cmp
jle
inc
jb
add
js
mov
rcl
sbb
ins
jg
das
shl
pushf
mov
call
in
daa
or
and
lds
enter
pushf
mov
ret
out
sbb
rcr
pop
ins
(bad)
hlt
cs
dec
daa
ins
jns
cli
les
and
dec
inc
bound
push
ins
add
in
jmpw
mov
loopne
xchg
test
mov
shr
jb
rol
arpl
mov
ret
xor
jne
out
imul
aam
pop
xchg
sub
inc
addr16
jmp
fsub
pop
fnsave
(bad)
rcl
daa
call
test
add
jae
xchg
mov
test
shl
and
iret
adc
retf
xchg
mov
push
fs
cwde
nop
xchg
and
adc
leave
xor
jle
jno
imul
call
push
les
and
mov
inc
out
mov
xchg
retf
jecxz
hlt
push
dec
mov
sub
add
sub
movs
sub
pop
test
cdq
loopne
sub
mov
ds
nop
and
inc
jle
mov
pop
inc
es
sub
sub
sbb
mov
pop
sub
ins
dec
add
sbb
daa
repz
xchg
cmp
out
rol
(bad)
dec
xchg
test
xchg
inc
and
push
in
mov
dec
jmp
test
cmp
or
out
loop
add
mov
mov
push
mov
push
push
and
jbe
leave
aam
pop
sub
adc
call
pop
out
pop
cmp
ret
xchg
inc
test
sbb
jne
imul
push
imul
jge
adc
sti
mov
or
adc
jg
lahf
ret
mov
fmul
pop
hlt
sbb
(bad)
(bad)
imul
adc
imul
mov
sbb
std
jae
int3
add
ins
mov
inc
cmp
popf
repz
xchg
mov
arpl
mov
int3
call
or
push
sar
adc
inc
pop
adc
sub
inc
clc
xchg
jmp
popf
inc
jg
mov
or
dec
pop
outs
out
aas
and
pop
push
cmp
jns
mov
xchg
sub
and
leave
pop
xor
pusha
mov
adc
fisubr
jno
ror
xor
int3
mov
pusha
cld
xchg
fld
stc
xor
addr16
repnz
fisttp
(bad)
in
dec
(bad)
pop
lea
sti
test
lods
call
pop
(bad)
lock
sub
push
jbe
pop
leave
mov
mov
mov
add
mov
pop
cmps
jge
test
dec
pop
iret
mov
push
and
pop
cmp
sub
push
add
jp
xor
gs
sub
and
push
loope
add
es
xchg
dec
push
rcl
jg
mov
push
sub
shr
add
test
jle
dec
daa
cmp
ja
aam
dec
dec
outs
addr16
lock
mov
fist
cs
pop
pop
and
pop
imul
jno
push
inc
mov
xor
jne
or
jns
push
movs
bound
push
mov
mov
gs
sbb
retf
cli
adc
sub
mov
ret
cmp
mov
pop
jne
xor
outs
in
jae
lods
cli
jne
sub
xchg
xchg
shl
aam
out
in
adc
inc
or
out
pop
push
cmc
xlat
js
jbe
sahf
dec
pop
xor
pop
jle
pop
es
jo
imul
xor
shl
jne
leave
outs
pop
push
test
jle
and
push
mov
pop
sub
stos
jns
xor
sar
test
es
dec
jae
pop
aaa
push
fcomp
inc
or
fsub
aas
lods
cmc
es
out
push
stos
les
lock
outs
cmp
dec
xchg
adc
repnz
and
add
leave
fst
lds
into
mov
out
enter
jne
ss
add
xchg
lahf
or
jp
vphaddbw
leave
lock
cmp
arpl
popa
repz
push
aaa
rcr
js
xchg
jle
aam
fstp
push
xchg
call
and
dec
dec
mov
xchg
dec
cmp
lods
cmp
xchg
jo
push
pusha
adc
retf
inc
jge
push
pop
and
ret
test
aam
out
dec
pushf
mov
arpl
add
fdivr
sub
(bad)
add
bound
pop
mov
out
repz
ds
push
test
pop
push
sbb
add
in
xchg
jnp
int
xchg
sbb
mov
pop
lods
ret
push
pop
js
js
(bad)
sar
iret
mov
sub
push
push
sub
sub
sub
cmp
lock
and
mov
call
dec
loope
xor
pop
xor
stos
fs
mov
sbb
pop
and
loopne
xchg
fild
lods
mov
sub
mov
cwde
out
les
push
int3
dec
into
cmp
add
xchg
cmp
cmp
pop
inc
sub
sahf
mov
or
ss
inc
arpl
inc
or
int
sub
mov
sti
or
jecxz
jl
icebp
retf
mov
gs
pop
jp
daa
repz
aad
je
mov
sub
xor
inc
sbb
sub
adc
xor
push
mov
lahf
dec
push
mov
imul
aam
mov
pop
pop
leave
xor
into
sbb
and
add
fcmovnu
xor
and
mov
mov
and
mov
and
sbb
pop
push
aaa
adc
pop
retf
psubusw
outs
mul
cmps
mov
mov
daa
nop
outs
fs
adc
out
pop
and
or
ret
je
push
nop
(bad)
mov
cmp
hlt
call
pop
loope
xor
mov
stc
cmc
or
xor
sar
imul
cmp
dec
adc
sbb
jmp
push
dec
adc
leave
add
jge
icebp
ficomp
inc
dec
xchg
dec
addr16
fistp
adc
aas
jp
sub
or
fs
out
fisttp
adc
sub
clc
js
jg
jmp
stos
scas
lds
es
mov
xchg
fwait
pop
sub
loop
push
dec
cmp
in
movs
jnp
stos
xor
in
ins
push
in
dec
das
imul
xchg
push
out
mov
jnp
pop
pop
inc
addr16
mov
lods
les
sub
shl
mov
and
mov
pusha
jae
loopne
neg
jge
dec
adc
xchg
test
dec
lods
sub
mov
push
sbb
mov
div
push
jg
ss
icebp
js
sub
fdivr
add
jae
les
adc
jmp
fs
mov
pop
xchg
jne
cs
out
outs
xor
retf
cs
std
fucomi
test
add
dec
cdq
pop
push
es
pop
jl
mov
mov
pusha
push
test
repnz
xchg
out
hlt
sbb
add
jge
push
mov
push
or
and
or
mov
pop
or
pop
or
in
sbb
xchg
xor
mov
mov
test
retf
lods
inc
cmc
cmp
call
lea
cld
mov
outs
das
loopne
jmp
js
push
into
bound
or
test
test
cmp
push
mov
int3
pop
pop
pop
jg
(bad)
mov
dec
jmp
mov
add
cdq
and
fs
xchg
xchg
push
jecxz
cwde
push
fsubr
mov
jns
dec
jp
push
stc
push
xchg
test
paddusw
push
xor
hlt
push
push
push
xchg
mov
sahf
push
push
jne
mov
jmp
jae
dec
pop
xchg
jg
in
es
mov
adc
ss
lahf
lods
out
jge
xchg
loop
cmp
jbe
jbe
push
js
fs
in
js
xor
popa
mov
xchg
adc
and
aam
test
enter
mov
xchg
sar
push
xor
jp
pop
add
adc
inc
ja
mov
add
mov
sbb
jge
push
mov
es
call
cmps
scas
mov
pop
aam
sub
cdq
jmp
and
movs
jo
retf
xor
stos
xchg
aad
push
stos
lods
mov
mov
push
ins
dec
dec
xchg
dec
adc
push
mov
test
rep
xor
jb
fs
js
xchg
cmp
sub
jge
fnstsw
lds
cmp
mov
sub
jo
dec
out
data16
fwait
dec
and
push
scas
push
add
or
cmp
or
push
pop
mov
or
and
in
sub
jbe
xor
scas
into
pop
fdivr
jge
(bad)
inc
test
rcr
sbb
pop
and
fdiv
test
cdq
mov
push
xor
jmp
idiv
das
xchg
xlat
jne
loopne
rol
dec
in
rol
sub
sbb
and
out
das
jg
out
jne
adc
adc
sbb
out
hlt
mov
and
or
(bad)
jmp
mov
das
mov
cmp
aad
pop
es
xchg
xor
pop
cmp
xor
shl
dec
fbstp
pop
mov
fdivr
leave
nop
fld
mov
xchg
adc
daa
inc
lahf
xor
iret
sub
push
(bad)
mov
aas
jne
cmp
or
jle
jge
and
mov
cwde
and
xchg
sahf
pop
and
pop
aas
adc
inc
push
push
add
loope
or
push
idiv
js
mov
mov
ja
adc
dec
mov
mov
sbb
xchg
dec
addr16
fsubr
cmp
push
and
add
jp
fcomp
xor
fdivr
lahf
sub
cld
jo
dec
mov
mov
xor
add
xchg
xor
sub
xchg
(bad)
out
int3
pop
mov
xchg
pop
sbb
inc
push
inc
push
adc
sbb
fldcw
or
mov
fidivr
mov
cmp
int3
jne
and
pop
ss
js
push
addr16
adc
ss
jmp
out
cmp
(bad)
push
pop
and
rcl
mov
pop
push
in
pop
(bad)
jns
sub
ret
ins
out
jae
mov
pop
mov
pop
xchg
or
int3
dec
push
mov
pusha
and
or
xchg
cmp
inc
in
pop
call
cmp
cmc
mov
jle
inc
pop
cmc
(bad)
retf
xchg
adc
js
add
ret
cmp
ins
and
inc
add
jmp
fisub
dec
jp
or
icebp
not
pop
rcr
(bad)
in
add
cmp
xor
test
bnd
sti
push
pop
mov
in
out
call
shr
cwde
in
icebp
pushf
repz
js
xchg
mov
leave
cmp
or
icebp
and
adc
or
out
mov
(bad)
jb
mov
hlt
jmp
sub
xchg
sub
push
pop
nop
cli
or
call
sahf
bound
(bad)
add
sbb
push
mov
jae
shl
xchg
in
imul
test
add
fdivrp
and
loope
rcr
loope
push
dec
jmp
xor
mov
xor
ins
(bad)
rcr
pop
jo
fsub
xor
xor
adc
les
and
mov
add
push
out
retf
or
push
cmp
dec
dec
sub
mov
adc
add
mov
cmc
into
lahf
cmp
mov
or
jmp
daa
mov
xchg
pop
sbb
push
lods
xor
push
int
dec
(bad)
xchg
shr
push
lods
imul
ret
mov
inc
jo
les
fcom
sbb
ficom
push
xor
inc
mov
sbb
call
fxch
sti
cmp
mov
popf
leave
xchg
push
sub
jmp
fidiv
(bad)
fmul
stos
cld
js
adc
xchg
xor
hlt
(bad)
repz
dec
sub
int
sub
pop
dec
mov
inc
imul
cmc
xor
or
xchg
push
fisttp
xchg
push
sbb
add
inc
pop
dec
jno
(bad)
ret
sahf
(bad)
leave
jae
lahf
pop
dec
rol
ds
scas
ins
aaa
dec
xchg
or
jp
jnp
adc
xchg
push
push
sub
jne
jmp
cmp
movs
scas
pop
shl
fbld
push
xchg
add
sbb
lahf
dec
xor
fstp
push
xchg
mov
jmp
in
ds
stos
pop
ins
cs
sbb
into
fwait
xchg
jne
push
add
push
or
xchg
dec
mov
sbb
popf
sbb
push
pop
xchg
mov
adc
add
and
mov
adc
adc
shl
inc
jns
aas
cli
in
or
cmp
or
sbb
stc
sub
fcom
imul
rcr
push
sbb
add
push
loopne
add
lea
sti
mov
xchg
stos
dec
jno
xchg
or
leave
arpl
xchg
jmp
push
and
into
les
push
cmps
or
xchg
jmp
xchg
mov
cld
and
mov
aad
fiadd
xor
jns
pop
mov
adc
mov
pop
jne
std
cmp
xchg
xchg
mov
(bad)
stc
adc
jmp
jae
add
push
mov
sbb
rcl
fucomi
ret
(bad)
cli
sub
retf
sub
push
xor
stos
fisub
jne
push
rcl
jae
ret
jge
mov
sub
and
xor
mov
movs
clc
lods
int
je
fstp
daa
pop
jle
out
lahf
retf
sbb
aam
fsub
inc
add
cmps
loopne
mov
ror
cwde
adc
arpl
enter
jne
inc
icebp
xor
outs
vpcmpeqw
lock
inc
or
and
(bad)
adc
ret
sbb
mov
lods
xchg
(bad)
pop
inc
mov
iret
pop
bts
jae
jae
and
cdq
sub
shl
mov
xchg
ins
sub
cmp
cmp
add
sub
push
jmp
fdivr
xor
push
xchg
cmp
hlt
xor
stc
push
mov
add
fcmovu
push
sub
jbe
sbb
cmp
pushw
(bad)
mov
pusha
test
push
pushf
sbb
cmp
in
adc
jge
popf
les
mov
addr16
icebp
and
mov
adc
inc
pop
int3
and
hlt
pop
cmp
arpl
push
stos
iret
out
mov
sub
push
aad
imul
xchg
dec
ins
jno
cmp
leave
xor
sbb
sub
fs
dec
xchg
pop
xchg
enter
cmc
adc
iret
inc
add
icebp
idiv
inc
rol
cli
cmp
nop
cmp
test
fidiv
jge
pop
in
ss
xchg
jo
cld
jb
ret
inc
cmp
push
pop
adc
stc
xchg
pop
fidivr
int
sub
mov
nop
mov
ror
mov
dec
daa
fucomp
icebp
js
jl
loope
dec
outs
cmc
mov
retf
fild
push
push
jb
mov
jl
mov
arpl
push
mov
inc
pop
cwde
push
out
std
pop
push
add
dec
push
mov
pop
outs
test
xchg
xor
in
icebp
push
pop
lea
(bad)
jae
sub
add
xchg
xor
leave
xor
clc
cmp
retf
push
or
xchg
jae
dec
mov
jmp
xchg
(bad)
in
dec
dec
mov
and
add
or
and
mov
outs
scas
call
inc
sbb
pop
icebp
cmp
dec
(bad)
jns
jmp
adc
mov
xor
(bad)
xchg
push
xchg
jmp
push
sbb
jb
mov
cli
jne
cmp
mov
sub
or
mov
cld
jo
sub
bound
daa
mov
rcl
lods
pop
cmp
jo
mov
sahf
push
sub
xchg
push
mov
add
push
fld
fidiv
leave
and
ret
cmps
sar
push
mov
jmp
loopne
cmp
stos
mov
or
xchg
nop
out
in
je
gs
push
push
inc
les
enter
push
or
push
dec
ja
dec
jmp
mov
xchg
(bad)
pop
test
cwde
add
cld
adc
mov
mov
popa
or
scas
ins
retf
test
loope
mov
jne
fwait
mov
fmul
pop
in
test
jle
xor
fldenv
sbb
add
int3
sbb
add
mov
stos
aam
fimul
mov
pop
jno
jne
push
and
ss
popa
sub
or
ret
xchg
dec
or
cmps
and
xor
clc
mov
ret
dec
xchg
jle
mov
mov
das
jp
je
inc
(bad)
aas
adc
out
xor
out
rcr
js
movs
xor
cwde
sub
mov
not
fs
xchg
push
ror
adc
stc
cmp
lea
push
aad
repz
out
add
push
call
sbb
push
js
xchg
aas
ror
or
test
sbb
push
(bad)
mov
cmps
scas
cs
pop
sbb
call
fidivr
in
sbb
in
push
xchg
rcr
sbb
je
shl
arpl
call
push
js
imul
sbb
xor
dec
cli
sub
jmp
daa
out
clc
mov
scas
les
push
pop
mov
push
or
pop
mov
xchg
inc
dec
in
pop
inc
jle
mov
fild
and
xchg
cli
mov
repz
ja
aas
div
and
mov
mov
pushf
push
sbb
cmps
aas
cmp
mov
jmp
mov
push
mov
fsub
adc
adc
out
stos
dec
je
add
dec
add
xchg
in
inc
shr
xchg
and
mov
sbb
pusha
and
and
rol
cmp
loope
sbb
mov
sub
xor
ja
pop
sahf
mov
call
stos
loope
dec
jne
scas
ds
out
hlt
div
enter
push
iret
popa
pop
test
rol
push
dec
ss
out
and
jmp
cmp
mov
xchg
loope
stc
or
mov
(bad)
lock
and
xchg
cwde
test
bound
jle
push
pop
fldcw
inc
adc
mov
jne
mov
dec
in
dec
fpatan
fcom
xchg
sub
hlt
div
xchg
dec
into
dec
inc
mov
hlt
add
movs
mov
scas
mov
repz
adc
mov
ret
out
cmps
lock
sbb
xchg
jmp
xchg
retf
repz
dec
push
mov
rol
test
cli
test
xor
sbb
fistp
xchg
add
sbb
push
mov
jb
int3
jl
les
(bad)
jp
adc
adc
sub
push
add
sbb
inc
dec
pop
lahf
sub
(bad)
(bad)
fst
lea
aad
fnstsw
pop
in
dec
(bad)
jp
arpl
xchg
ret
loop
sbb
sub
dec
xor
and
push
cli
inc
xchg
cmps
inc
jge
xchg
xor
fs
mov
inc
loop
push
aaa
push
push
cmp
cdq
retf
push
jmp
bound
pushf
nop
mov
xchg
bound
sub
mov
stos
mov
movs
jbe
retf
push
push
xchg
add
int
fst
pop
adc
adc
fcom
xchg
cmp
mov
cmp
out
sub
js
jae
cmc
cmp
cli
arpl
sub
sbb
mov
push
mov
jle
pop
retf
rcr
mov
(bad)
pop
add
test
dec
xchg
shl
jg
dec
inc
addr16
rcr
inc
(bad)
mov
sub
pop
test
sar
pushf
sti
test
iret
inc
cld
fistp
out
loop
push
gs
fcomp
aam
push
xor
(bad)
jnp
test
sbb
sub
in
mov
retf
mov
and
xor
sub
ror
mov
out
lods
inc
rcr
in
call
and
minps
sbb
mov
jns
cmp
in
fnclex
jl
xlat
and
inc
or
imul
int3
add
or
xchg
adc
jae
sbb
xchg
sbb
sahf
scas
sub
in
in
test
xchg
add
jmp
cmp
mov
fcmovu
or
xchg
pop
shl
sub
xchg
mov
(bad)
not
pushf
dec
sub
dec
jl
pop
stc
stos
sbb
xchg
fist
fwait
sbb
inc
xchg
xchg
jne
push
adc
adc
pop
mov
mov
mov
dec
js
out
(bad)
jmp
neg
repnz
mov
dec
jge
and
adc
xchg
cmps
pop
loope
lds
mov
mov
je
add
push
mov
push
ss
xlat
loope
jo
xchg
sbb
sub
repz
mov
les
fs
sbb
inc
nop
add
daa
in
mov
pop
div
cmp
mov
data16
jl
outs
repz
imul
out
movs
jmp
jne
cmp
imul
xchg
pcmpeqb
pop
adc
shr
in
or
dec
ja
cld
cld
fucom
cmps
imul
fucomip
inc
cmp
xchg
leave
xor
xchg
mov
popf
call
out
add
das
imul
out
stos
jnp
out
jb
xor
mov
dec
sbb
inc
push
call
ficom
xor
xchg
jne
loope
pusha
xchg
or
repnz
int
(bad)
ret
shl
push
and
cli
cwde
scas
lods
dec
xchg
ror
sbb
jne
mov
mov
jmp
fist
cmp
mov
cmp
sbb
mov
dec
xchg
rol
fiadd
adc
lea
bound
mov
and
cmps
jmp
dec
jae
les
in
mov
sub
sbb
loope
inc
xchg
push
ret
adc
xchg
dec
mov
inc
xchg
inc
(bad)
jge
mov
and
sbb
iret
ds
in
jno
nop
icebp
mov
sub
push
dec
or
mov
sbb
push
cmc
dec
js
rcl
inc
imul
jg
push
jp
inc
or
and
cmp
xchg
mov
jns
shl
shl
jge
lock
(bad)
push
pop
popa
cld
in
cmp
les
loopne
cmc
stc
pop
pop
mov
movs
frstor
mov
jge
mov
adc
popa
push
pusha
adc
sub
rcl
sub
lock
cmp
dec
(bad)
data16
jp
outs
stos
fstp
jp
(bad)
jmp
dec
adc
inc
scas
mov
js
lods
mov
ins
nop
loopne
and
std
data16
pop
aas
(bad)
out
fidiv
bound
jge
mov
cmp
mov
dec
xchg
dec
adc
sar
dec
jge
dec
dec
movs
jecxz
shl
cmp
lds
aam
in
shl
xchg
ja
lods
fadd
data16
cmc
ins
or
cmp
cmps
fistp
mov
rcr
das
cmps
jle
dec
fneni(8087
xchg
fwait
es
dec
enter
stc
jns
ror
and
xchg
int3
stc
xchg
pop
xor
fadd
call
fs
push
leave
cmp
les
outs
mov
add
push
mov
cli
out
cld
push
les
lahf
cli
cmp
nop
test
popf
mov
loope
fwait
int3
outs
sbb
dec
inc
pop
or
addr16
xchg
stos
cmps
nop
mov
fcmovnb
mov
retf
out
and
cwde
imul
rcl
pop
or
retf
cmps
imul
test
xchg
fwait
out
fucomp
or
fbld
cmp
in
repnz
and
cmps
out
les
outs
xor
call
scas
push
jbe
enter
sbb
retf
push
and
jg
inc
je
ss
sub
mov
jp
adc
lea
xor
pop
retf
dec
xchg
sbb
inc
mov
in
add
mov
and
mov
jecxz
adc
dec
jo
mov
or
add
imul
mov
cs
pusha
cld
pop
and
popa
xchg
scas
je
in
dec
std
cli
enter
inc
fcomp
in
cli
ins
push
je
bound
inc
bound
jle
sbb
icebp
test
and
stc
xchg
pop
cmp
jns
(bad)
lods
cmp
inc
and
mov
outs
fnstcw
push
push
xor
cdq
ins
mov
sar
bound
dec
adc
mov
test
sub
adc
mov
das
mov
gs
sbb
or
and
stos
aam
hlt
xchg
int3
(bad)
mov
fs
sub
xchg
jne
pop
xor
test
test
mov
push
test
call
push
push
imul
pushf
jg
dec
sbb
add
cli
rcl
movs
push
cmps
sbb
xor
and
ret
cs
jne
push
jmp
sub
das
adc
or
cmp
mov
sub
dec
mov
pop
dec
jnp
clc
sub
ror
push
mov
sbb
fnstsw
je
add
sub
mov
cmp
(bad)
repz
adc
or
(bad)
xchg
ficom
(bad)
loop
push
fbstp
cwde
outs
leave
ss
aad
xor
pop
jg
xchg
rcl
mov
popf
mov
or
sbb
or
bound
sbb
fistp
dec
aad
cmc
cmps
rol
ret
add
or
jp
stc
sahf
xchg
leave
add
daa
call
mov
and
cli
call
mov
dec
jle
sbb
sbb
and
mov
mov
pop
cmp
mov
push
jo
cmc
out
sbb
(bad)
pop
(bad)
sbb
and
adc
cmps
push
xchg
cwde
sub
cmps
xor
lds
cmps
adc
add
and
cmp
sbb
into
mov
inc
test
in
add
ins
sub
pop
inc
jns
inc
mov
mov
xchg
ss
outs
jns
mov
mov
inc
imul
xchg
fisubr
mov
js
sbb
inc
sbb
into
lods
jno
dec
sub
push
sbb
xchg
adc
push
std
cmps
push
xchg
or
adc
out
std
add
dec
jg
jno
mov
scas
sti
mov
call
nop
retf
and
push
stc
sti
mov
int
(bad)
shl
mov
cmp
ret
mov
push
mov
push
ret
xor
mov
clc
xlat
cld
jg
test
fucomip
or
es
xchg
outs
pop
mov
pop
pop
jne
inc
pop
dec
mov
addr16
loop
mov
dec
adc
ja
pop
jnp
or
cli
jmp
pop
sbb
je
mov
push
xchg
out
jp
inc
imul
xchg
rol
mov
pop
hlt
js
lea
icebp
fs
xchg
pop
test
iretw
pop
(bad)
xor
sub
jo
cmps
test
adc
adc
das
scas
jae
or
cs
mov
movs
jmp
inc
mov
daa
sahf
ret
cld
dec
adc
adc
enter
jo
xchg
xchg
in
mov
cmps
pop
aam
jae
fwait
aas
out
pop
das
xor
pop
retf
sti
ss
pop
inc
xchg
dec
xor
xor
mov
cwde
syscall
sub
cmp
sti
jp
jno
je
dec
in
jne
les
retf
std
mov
aam
loop
cld
xchg
push
adc
push
dec
aas
jb
cmp
mov
dec
dec
mov
cmps
jge
jmp
xor
inc
mov
sbb
jnp
ins
jle
es
push
(bad)
loopne
out
int3
xor
push
pop
fbld
mov
shl
sub
in
mov
xchg
or
into
mov
pop
or
mov
adc
arpl
jg
sar
jle
and
jg
jecxz
ja
je
push
pushf
shl
cmp
mov
into
jae
and
mov
in
push
test
sub
push
and
cmp
xor
(bad)
mov
sbb
iret
int3
xchg
call
lods
sbb
sub
and
mov
shr
fld
push
mov
ficom
clc
(bad)
cld
xchg
inc
fs
mov
dec
test
scas
retf
test
gs
xor
jns
jmp
xchg
mov
mov
mov
xor
mov
std
mov
xor
pop
cwde
mov
sub
loop
loop
jne
push
cmp
pop
add
xchg
xchg
pop
fbld
out
int
pop
fwait
inc
xor
push
and
popf
test
nop
xchg
sbb
pop
in
jmp
inc
lods
sbb
ins
sbb
jecxz
xor
and
in
retf
inc
fwait
test
push
pushf
aas
int
mov
test
retf
sub
sbb
or
jmp
jl
icebp
in
scas
stos
vcmpsd
xchg
cmp
(bad)
adc
jne
or
into
ror
pusha
sahf
sub
dec
mov
retf
xchg
add
sub
outs
repnz
sub
mov
cmp
mov
and
sub
push
pop
cmp
add
push
cli
add
xchg
stos
imul
lea
add
cmp
sub
cmp
inc
daa
psubq
icebp
in
movs
lahf
js
je
xor
push
int
pop
push
ret
call
std
hlt
pop
les
xlat
mov
pop
stos
or
xchg
repnz
jno
into
sub
mov
js
xchg
push
mov
icebp
adc
test
or
in
int3
sbb
dec
sub
push
or
bound
clc
icebp
sub
mov
in
xchg
push
loope
rcl
ss
mov
or
xchg
pop
call
xchg
aaa
inc
nop
test
push
call
sub
xchg
push
fs
pop
dec
and
sbb
add
test
xchg
or
jnp
push
jo
mov
div
inc
nop
out
jo
loopne
fstp
jge
adc
mov
sub
jns
xor
pop
loopne
loopne
xor
hlt
dec
mov
into
or
xchg
add
sub
jmp
je
retf
mov
push
stos
call
ret
cmp
popa
and
cmps
loop
sub
sbb
int
pop
dec
outs
in
sub
(bad)
lods
adc
or
mov
lods
outs
xchg
ins
cli
jg
dec
add
lahf
arpl
sbb
call
xchg
push
popa
pop
(bad)
(bad)
inc
adc
(bad)
dec
std
mov
icebp
stos
pop
fsub
daa
fcom
call
adc
in
call
inc
rcl
add
je
outs
adc
jb
int3
and
cmps
ret
ja
ins
es
fstp
xchg
out
int
xchg
retf
scas
jnp
mul
push
mov
sbb
cli
adc
daa
loope
adc
loope
sbb
sbb
mov
movs
inc
int3
push
icebp
out
jbe
cli
mov
mov
mov
lahf
adc
lods
xchg
and
in
pop
push
inc
in
xchg
(bad)
nop
mov
push
add
or
jb
outs
stos
cmp
addr16
jo
enter
xor
pop
jge
xchg
inc
jno
sub
jae
cwde
movs
mov
lds
cmp
in
xchg
push
fdivrp
loopne
dec
cli
mov
cmps
clc
push
add
add
popf
arpl
xor
push
cmp
push
jle
jbe
xchg
add
lods
loop
sub
(bad)
rol
ror
jns
pop
iret
fdivr
sar
xchg
mov
mov
adc
out
cmc
das
xor
and
jno
sub
in
ins
(bad)
and
and
pop
test
sbb
mov
jne
sbb
mov
mov
repz
inc
test
mov
cmp
imul
test
lods
xor
adc
jp
push
(bad)
jmp
data16
sbb
retf
mov
rcr
mov
and
in
pop
jne
jp
adc
pop
and
sub
test
xchg
rcr
push
ficom
cmp
mov
adc
xchg
mov
daa
adc
cld
xchg
xlat
pop
test
pop
inc
inc
lds
xchg
popw
pop
les
jle
enter
data16
in
push
or
jnp
hlt
adc
bound
mov
rcr
jns
unpckhps
add
push
rol
(bad)
and
imul
mov
test
inc
xlat
js
les
adc
sbb
nop
inc
mov
sub
not
inc
jne
jle
fucomip
xchg
ds
xchg
pusha
bound
mov
js
daa
adc
push
adc
sbb
xchg
daa
imul
and
nop
push
or
sbb
in
adc
mov
pop
icebp
ret
mov
or
loope
sti
mov
in
jl
pop
xchg
ds
je
rol
inc
sbb
sahf
test
lods
and
in
mov
adc
(bad)
stc
push
cmp
pop
rcl
ss
xchg
mov
(bad)
xchg
sub
fwait
adc
gs
pop
push
push
cmp
xchg
leave
scas
pop
les
daa
push
stos
pop
call
dec
pop
xlat
cli
out
ds
push
icebp
cmc
mov
mov
sub
ret
inc
jg
fidivr
mov
jg
xor
cld
fcom
push
jl
icebp
test
mov
nop
std
jne
mov
movs
lahf
ss
mov
xchg
or
mov
shl
jp
daa
ss
xchg
sub
test
fs
mov
adc
imul
retf
(bad)
cmp
enter
push
cli
loopne
push
aas
jle
hlt
std
xor
fiadd
out
movs
jmp
dec
sub
hlt
mov
test
call
adc
jo
push
or
fdiv
sub
sbb
and
js
xchg
mov
ficom
pop
push
test
rcr
jl
adc
dec
jmp
data16
sbb
(bad)
mov
mov
xor
retf
rcl
mov
imul
aas
xchg
into
or
aas
adc
push
sub
or
movs
sub
ret
fs
sub
xor
and
xchg
sbb
sti
mov
js
sbb
mov
sar
sub
cmp
pop
jo
inc
(bad)
(bad)
stc
mov
daa
fcmove
jmp
mov
iret
ret
push
or
(bad)
pop
xchg
jle
aad
je
dec
push
jg
mov
jnp
mov
inc
jp
add
scas
loopne
retf
iret
pop
jo
sbb
xchg
or
leave
sahf
dec
adc
sbb
aad
and
ror
cs
addr16
cmp
test
xor
ins
lea
xchg
xchg
sub
push
dec
les
xor
(bad)
sti
(bad)
fist
sub
and
cs
cld
fstp
fwait
push
xchg
movs
cmc
sub
sub
loopne
rcr
xchg
lea
dec
fisttp
repz
lahf
lods
jp
std
call
cmp
or
test
fidiv
or
sub
or
cmp
xchg
gs
ins
fwait
ins
outs
gs
shl
xor
dec
dec
mov
mov
in
sbb
dec
(bad)
hlt
jne
in
pop
jp
pop
aad
cld
je
xor
loope
jne
and
ins
out
jne
jp
test
sbb
fucomi
cmc
xchg
(bad)
push
xchg
or
lock
jecxz
pop
enter
jmp
sub
cmp
js
jb
lock
dec
jae
xchg
popa
fwait
dec
aad
fidivr
outs
in
(bad)
in
push
test
inc
dec
lods
ss
ficomp
loopne
or
and
mov
test
inc
inc
adc
pop
sbb
jge
(bad)
and
xor
and
lods
rcl
mov
in
xor
xlat
jns
ret
hlt
jmp
ret
push
clc
lds
jae
xor
sub
sbb
out
xchg
loope
test
int3
cmp
js
orps
bound
mov
es
jp
in
pop
(bad)
rcl
and
dec
add
jp
sbb
push
inc
mov
cmc
xchg
out
sub
sahf
jne
mov
adc
xor
(bad)
mov
repz
or
fist
cmp
gs
in
and
outs
adc
inc
pop
mov
mov
push
(bad)
ror
and
cmp
cli
xor
xor
cmp
aas
xor
ja
xor
mov
(bad)
jecxz
or
or
sbb
add
or
pop
push
jns
xor
push
idiv
jb
push
mov
(bad)
ret
fisttp
mov
xor
xchg
cmps
xor
inc
aam
pop
popf
test
in
sbb
adc
sub
retf
inc
lock
push
and
dec
push
pop
fdiv
xchg
jbe
xchg
int3
push
and
pop
mov
adc
ret
mov
fmul
les
adc
stc
(bad)
sbb
xchg
push
cmp
xchg
retf
cmp
jl
jecxz
or
idiv
rol
mov
ins
stc
(bad)
sbb
pop
aad
dec
test
sub
xchg
test
cs
ret
sbb
lea
or
mov
jb
mov
icebp
and
push
sub
test
retf
mov
rcr
fmulp
aam
stos
loopne
xchg
push
jmp
aas
idiv
fld
push
sti
jns
cmc
lock
clc
out
pop
cmps
outs
xor
jmp
and
cmps
(bad)
fisub
movs
or
mov
data16
mov
adc
in
outs
xchg
fld
in
repz
jo
daa
rcr
repnz
int3
mov
sub
or
push
push
mov
and
movs
loop
sbb
push
pop
aaa
mov
js
cs
dec
jecxz
cmps
jbe
outs
dec
jmp
mov
lds
pop
pop
add
mov
ficom
and
mov
xlat
xchg
pop
jbe
ficomp
xchg
mov
push
and
lds
retf
push
sbb
cmp
stos
sahf
test
mov
or
cld
out
imul
es
sub
jle
mov
xor
xchg
mov
push
retf
retf
stos
jmp
pand
push
add
dec
mov
or
jge
div
ds
out
mov
xchg
jnp
xchg
add
mov
cmp
aam
rcl
loope
aas
ror
sahf
mov
mov
imul
xor
in
test
rol
xchg
add
or
inc
mov
and
fld
int
test
xor
ret
sub
aad
cmc
shr
adc
and
adc
clc
es
xchg
pop
push
xchg
icebp
shl
out
xor
jae
mov
in
inc
invlpg
shr
jns
sahf
or
lock
cmp
push
lahf
xlat
in
mov
daa
xor
mov
int
jle
pushf
mov
dec
xchg
dec
push
mov
add
xor
inc
call
fwait
jns
xor
mov
ja
mov
push
push
aaa
xor
shr
or
pop
xchg
lods
out
mov
xchg
xchg
pop
push
xchg
xchg
mov
into
mov
js
outs
jmp
mov
imul
movs
adc
sbb
aaa
repnz
loopne
aam
int3
mov
in
and
out
in
clc
dec
sbb
xor
push
popa
push
call
enter
jno
sar
adc
push
pop
cmp
add
fidivr
cld
sahf
rcr
cs
scas
mov
pmullw
push
popa
and
test
data16
(bad)
or
cmc
jle
push
sub
add
(bad)
sbb
sub
dec
in
cwde
pop
add
repnz
imul
sar
sub
push
aam
adc
jne
jmp
cmp
and
hlt
pop
hlt
out
xchg
dec
pop
inc
sub
repnz
jo
dec
lock
push
cmp
(bad)
mov
mov
mov
hlt
cmp
fnstsw
add
popf
adc
lock
pop
je
adc
jbe
retf
lods
xor
xchg
and
mov
dec
push
xor
xchg
repnz
or
cmp
ret
jle
and
push
stos
mov
cmps
std
jmp
or
out
or
xor
(bad)
xor
push
es
inc
cmp
xchg
mov
or
sbb
jbe
loopne
cmps
xor
xchg
mov
ret
clc
clc
dec
mov
sbb
inc
mov
pop
sahf
dec
pop
jmp
jne
xchg
jmp
mov
je
aad
adc
lods
rol
push
xchg
outs
xchg
dec
dec
and
mov
outs
xor
and
jae
nop
xchg
push
mov
pop
or
data16
inc
push
add
push
pop
pop
mov
mov
jp
jge
fsubr
sub
xlat
sub
sub
push
and
ja
mov
push
repnz
hlt
push
and
mov
das
test
int3
gs
out
iret
xor
dec
fild
pop
cmp
inc
xchg
jmp
push
pop
imul
jae
xchg
or
push
stos
popf
aad
xchg
cli
jne
xchg
jmp
in
mov
jge
or
push
ins
adc
call
sbb
mov
xchg
pop
in
fs
in
and
mov
loopne
xor
xchg
jb
cwde
aam
cmc
test
movs
stos
ja
int3
test
sub
mov
lods
cli
pop
xchg
xchg
inc
and
fnstsw
test
fbld
jmp
sub
retf
stc
dec
data16
cmp
neg
stos
jmp
pushf
fisttp
pop
std
fiadd
hlt
cmps
mov
inc
idiv
mov
sub
jae
add
and
mov
in
icebp
jge
push
sti
and
xchg
repz
and
call
sub
mov
or
xor
mov
shr
fcomp
push
sbb
imul
data16
sbb
jbe
xchg
push
pop
pop
sub
lahf
mov
inc
dec
aad
fistp
lods
add
sub
aaa
fwait
call
mov
xchg
add
test
cmp
pop
xchg
(bad)
hlt
scas
push
cld
adc
xchg
fdivr
out
jp
rol
xchg
rcl
cs
rol
pop
pop
inc
jle
retf
fisttp
and
outs
cld
adc
fisttp
outs
neg
pop
xchg
push
mov
jp
outs
sub
xchg
lods
test
in
stos
push
xor
data16
pop
js
call
push
pop
fs
jo
or
aas
aaa
xchg
rcl
nop
mov
fnstsw
adc
lahf
jmp
ret
inc
lods
stos
xchg
xchg
mov
sbb
push
mov
dec
jne
mov
xor
sti
sub
sbb
or
push
js
rcr
and
fisubr
mov
js
xchg
loop
aad
cmc
sub
mov
or
movs
stos
mov
pop
out
lock
sti
repz
add
push
loopne
sub
mul
dec
popa
je
call
fwait
cmp
int
imul
xchg
call
movs
sbb
leave
xchg
push
pop
div
mov
call
dec
fwait
sbb
xchg
stc
iretw
stos
fidiv
push
js
cmp
mov
jns
rol
jns
das
pop
shl
xchg
mov
and
xchg
pushf
jmp
xchg
cmp
not
movs
ret
(bad)
les
retf
jne
outs
daa
ret
stos
dec
sbb
in
daa
xchg
test
jp
imul
gs
mov
pop
test
inc
in
pop
mov
jb
mov
test
das
mov
std
push
adc
das
or
push
aam
jp
shl
ins
pop
sbb
push
loopne
mov
fs
iret
(bad)
(bad)
xor
bound
xchg
repnz
pop
or
add
clc
sbb
push
dec
sbb
lods
(bad)
outs
jae
ds
push
je
adc
adc
test
inc
loope
pop
push
push
test
clc
xchg
rcr
mov
sub
call
jne
vpsubd
xchg
mov
sub
(bad)
cs
(bad)
js
pop
xchg
aam
sbb
xor
lahf
loop
nop
inc
or
mov
fnstsw
and
hlt
mov
cmps
mov
sub
dec
in
push
in
jmp
les
rol
sub
and
(bad)
js
xchg
stmxcsr
mov
sti
clc
xor
fcomp
pop
mov
(bad)
and
jbe
and
cmp
sbb
mov
loope
push
std
ret
dec
out
mov
xchg
inc
cmp
adc
sub
jnp
lds
iret
data16
into
cmp
adc
pop
rol
dec
push
dec
outs
cmp
cmp
adc
push
in
fidivr
sbb
shl
mov
retf
mov
imul
scas
test
xchg
push
je
pop
push
test
mov
pop
in
ja
cmp
mul
mov
loope
hlt
dec
mov
dec
inc
ror
cmps
pop
inc
je
inc
and
add
push
ja
adc
sbb
sub
aam
inc
mov
(bad)
xor
mov
jmp
add
pop
cmp
xchg
mov
fcmovnu
cli
xor
push
add
mov
cmp
test
test
mov
mov
in
outs
cwde
lahf
dec
cmps
mov
lods
mov
cmps
dec
mov
adc
push
call
pmaxub
shr
mov
push
and
rcr
(bad)
mov
push
xchg
addr16
mov
xchg
fidivr
ds
fxch
cwde
pop
outs
cmp
xor
ret
sbb
mov
inc
pop
lea
push
scas
fistp
push
std
dec
ret
es
dec
push
imul
jmp
enter
jne
xchg
test
int3
(bad)
sbb
imul
jnp
mov
pop
into
fmul
dec
and
xor
inc
inc
adc
and
pop
push
hlt
add
push
ja
or
je
test
mov
xor
xor
and
xor
mov
das
loopne
mov
mov
inc
cmp
ins
jnp
pop
push
(bad)
movs
ret
pop
mov
daa
cmp
and
mov
jecxz
mov
hlt
popa
cmc
mov
je
sbb
(bad)
adc
and
lods
aam
mov
outs
lds
mov
xor
jecxz
jo
add
push
iret
adc
push
cmp
out
adc
xchg
ret
mov
imul
push
ret
loopne
ret
cli
ins
push
imul
imul
jmp
fwait
push
jge
cld
jl
push
or
mov
test
xchg
mov
daa
and
dec
js
rcr
sub
xchg
push
dec
inc
pop
daa
and
xchg
push
loope
cmps
dec
pop
jbe
mov
mov
sahf
inc
mov
push
mov
adc
mov
inc
mov
pop
push
gs
lods
ja
jo
cmp
aad
dec
pop
mov
sbb
outs
dec
xor
push
sub
loop
mov
rol
jmp
inc
clc
je
and
jl
or
sti
cmps
xchg
or
lods
inc
fnstenv
sub
jns
popa
call
dec
dec
xor
aaa
jl
pop
fs
inc
or
jp
(bad)
and
out
cmp
xchg
sbb
call
hlt
gs
cwde
adc
inc
and
sbb
int3
(bad)
aam
jl
mov
dec
jbe
cld
repnz
cmps
mov
or
xor
js
jecxz
sbb
sbb
jmp
inc
outs
mov
outs
(bad)
sbb
bound
mov
outs
iret
adc
loopne
and
jl
cmp
sar
popf
cdq
jge
(bad)
mov
push
sbb
ins
jge
sub
ret
xchg
call
inc
inc
fs
fbstp
cld
scas
adc
imul
bound
clc
fld
pop
mov
bound
xchg
cwde
hlt
xchg
push
pop
outs
sub
adc
pop
shl
mov
ins
test
inc
ror
xchg
mov
dec
and
jmp
xchg
les
mov
adc
adc
das
push
xchg
push
sub
idiv
xchg
adc
sahf
xchg
cmp
mov
add
sub
mov
mov
push
xchg
pop
add
jg
cmc
xor
xor
int
sete
fimul
aas
bound
pop
lods
retf
sub
lds
(bad)
sbb
jmp
pop
dec
xchg
xchg
jmp
clc
pop
ror
mov
and
sub
xchg
or
fadd
pop
aam
mov
pop
int
int3
and
sub
nop
dec
pop
jns
or
retf
(bad)
ror
cmp
icebp
js
test
sbb
scas
pop
test
outs
jmp
mov
pop
jns
pop
and
mov
pop
int
xor
jbe
and
test
mov
sub
and
mov
lds
nop
int3
ror
and
xchg
cmp
jl
repz
inc
cmc
mov
in
inc
inc
jae
xor
xor
adc
cli
div
xchg
fsub
and
push
jmp
dec
mov
inc
rol
add
cmp
xchg
xchg
scas
mov
out
pusha
push
imul
mov
jae
fdivr
rol
push
add
imul
js
movs
cmp
pop
xor
daa
add
push
addr16
xchg
ja
xchg
adc
add
add
jp
rcr
es
dec
push
add
pop
cmp
in
test
rcr
add
push
sbb
jno
xchg
jge
mov
xchg
cmp
cmp
fstp
sbb
outs
clc
popf
xor
cmp
push
jmp
mov
add
(bad)
sub
sub
push
cmp
xor
arpl
and
lods
push
pop
and
sbb
add
fs
es
stos
lock
je
in
jmp
lods
and
mov
or
mov
sbb
movs
repnz
fadd
mov
in
out
out
mov
cmp
sbb
add
push
push
sbb
in
addr16
xchg
jmp
mov
test
(bad)
cld
pusha
popf
mov
sub
xor
xchg
pop
test
push
mov
js
jne
xchg
icebp
idiv
rol
mov
stos
mov
sahf
dec
adc
ror
pop
adc
lods
mov
mov
pop
pop
inc
inc
jmp
add
mov
test
(bad)
std
scas
xor
xor
hlt
pop
mov
mov
ret
cmp
and
jne
xchg
jecxz
(bad)
dec
fst
cs
add
mov
popa
xchg
loop
adc
mov
aam
loop
fcomip
fmulp
les
cmp
sub
sub
mov
jmp
cld
leave
pop
xchg
test
jl
icebp
in
xchg
cmp
mov
stos
push
(bad)
test
push
je
jle
outs
scas
cmp
adc
push
pop
iret
jns
mov
jg
lods
inc
mov
shr
mov
pop
ss
and
push
push
xor
std
in
xchg
fist
push
lods
daa
jo
xor
iret
fisttp
dec
adc
lock
(bad)
fmul
dec
lock
test
xlat
sbb
mov
popf
dec
sbb
mov
(bad)
mov
in
lods
xchg
xchg
in
sub
gs
and
dec
jl
repz
sub
push
mov
cmps
sub
inc
pop
sub
dec
bound
cmp
cli
cmc
fmulp
adc
sbb
sub
retf
jge
jecxz
into
inc
loope
dec
dec
or
jcxz
scas
jne
sub
push
retf
inc
pop
adc
pop
mov
sub
adc
fdivp
das
(bad)
xor
in
pop
xor
loopne
mov
adc
xor
dec
inc
neg
and
loop
das
pop
aad
cmps
jo
test
mov
lock
sbb
dec
ret
push
addr16
(bad)
adc
stos
and
cmps
(bad)
cmp
and
push
aas
or
loop
je
lock
jmp
mov
fdivr
sub
pushf
sub
dec
cmp
iret
fidivr
push
pop
div
call
icebp
jmp
(bad)
imul
jp
xchg
fnstcw
cs
das
popa
push
add
adc
mov
adc
out
arpl
push
push
push
fcmove
push
inc
or
hlt
iret
inc
cmps
test
js
scas
mov
cmp
inc
adc
push
(bad)
push
dec
sbb
cs
sahf
push
nop
and
ret
mov
ficom
sub
retf
ret
jmp
and
sti
sub
cdq
out
sahf
mov
in
ds
enter
or
xchg
ret
adc
jmp
cmps
test
jp
in
mov
inc
sbb
in
loopne
nop
xor
stos
adc
add
xor
push
data16
cmp
adc
push
lahf
pop
lds
neg
mov
inc
pop
sub
jbe
subps
stc
mov
push
fimul
and
pop
test
cli
popa
mov
out
adc
iret
js
sbb
in
or
clc
addr16
stos
push
in
cmp
cwde
push
jns
push
in
cli
mov
push
inc
inc
xchg
sub
retf
dec
pusha
repz
jecxz
xor
xor
inc
xchg
cmp
xchg
movs
and
repnz
js
cdq
lahf
cmp
mov
dec
sub
lds
dec
jo
std
(bad)
jmp
jl
push
hlt
dec
sti
adc
lds
das
cmps
repnz
jle
and
and
stc
in
or
fild
loopne
in
xchg
das
retf
aam
in
nop
imul
mov
push
push
gs
sub
div
out
(bad)
out
xchg
adc
dec
jl
icebp
repnz
aad
je
cmp
sub
xlat
aas
inc
xor
mov
mov
cmp
(bad)
loop
jnp
and
cmp
cwde
sub
xchg
mov
jmp
add
lods
shl
xchg
enter
adc
out
mov
xlat
push
out
fidiv
and
push
retf
aam
push
push
iret
mov
push
jmp
mov
xchg
sbb
dec
cmc
add
stos
into
(bad)
inc
cmp
mov
pop
jp
mov
popf
jnp
movs
mov
aas
loopne
and
xchg
sbb
dec
xchg
es
adc
xor
cmp
xchg
rcl
push
mov
lahf
(bad)
sbb
or
jb
rol
xchg
push
cmc
or
lds
pop
leave
xchg
aam
call
mov
call
js
jge
sub
pop
jb
and
rcr
dec
aad
jmp
(bad)
mov
xor
pop
in
xor
push
lea
pusha
and
mov
jns
sbb
sar
mov
lods
pop
shl
push
mov
outs
xor
sub
jl
mov
inc
jo
mov
jo
mov
popf
std
fcomip
sub
push
cmps
cmp
jge
dec
mov
xchg
imul
cwde
lods
xor
gs
cmp
adc
shl
jne
xchg
int3
mov
in
jns
hlt
pusha
mov
adc
in
mov
or
scas
test
cmp
idiv
stos
adc
cmp
inc
mov
dec
iret
ins
outs
scas
mov
inc
sbb
jge
cmp
leave
(bad)
pop
push
push
and
inc
fnsave
jb
jge
cmp
cmc
jne
jmp
mov
push
cli
xchg
stos
lar
loop
or
add
inc
aam
enter
fucomip
imul
mov
test
mov
movd
mov
test
stc
je
mov
adc
sub
je
mov
paddw
retf
gs
sbb
push
dec
and
test
inc
enter
jae
and
or
and
retf
scas
repz
xchg
xor
mov
sbb
(bad)
sbb
ficomp
cli
xor
dec
scas
push
arpl
pop
int3
push
fist
int
imul
jae
dec
fcmovbe
lahf
add
pop
xchg
and
ja
gs
xchg
sub
xor
adc
sub
lahf
mov
pop
repz
and
(bad)
fcomip
jp
movs
adc
dec
test
in
xchg
lock
shl
mov
pop
iret
add
push
mov
xchg
push
stc
into
cmp
repnz
clc
loop
mov
lea
into
cwde
leave
adc
out
adc
add
push
pop
mov
lods
dec
cmp
mov
aad
and
push
enter
add
mov
das
and
mov
pop
or
pop
cli
sub
(bad)
in
xchg
ret
repnz
ja
jmp
sub
iret
dec
mov
out
les
popf
pop
push
xor
sbb
dec
cld
push
sbb
inc
cdq
out
sar
mov
jp
mov
sub
sbb
aad
addr16
ror
push
sbb
or
or
not
int3
fiadd
pop
(bad)
jg
or
cdq
enter
jg
nop
mov
stos
push
imul
rcl
in
push
jo
adc
mov
push
xbegin
in
scas
jle
jo
test
popf
add
fisubr
(bad)
sbb
jmp
jmp
and
add
pop
xchg
and
mov
inc
sub
test
jne
into
hlt
jg
dec
xlat
jle
pop
test
repz
stos
popa
es
mov
mov
fwait
xor
mov
or
inc
es
aam
xor
loope
jmp
jbe
loop
and
shl
xor
or
clc
mov
jne
sbb
adc
xor
sub
loop
into
and
push
pop
xchg
dec
jne
cmp
jne
or
xchg
cmp
mov
sub
int3
xchg
adc
pop
jge
and
cld
fld
nop
inc
js
sub
mov
sahf
test
fdiv
jle
cli
hlt
mov
push
mov
in
cmc
dec
xchg
sbb
pop
pop
popf
pusha
in
adc
cmp
cs
(bad)
xchg
dec
pop
mov
mov
mov
or
test
pop
cmp
std
push
jo
xor
ret
mov
jne
mov
(bad)
in
jmp
xchg
push
cmp
pmuludq
inc
dec
lods
les
jp
sar
push
ins
cmp
test
or
mov
sub
lds
es
fs
push
popf
or
jo
ficomp
test
fsubr
ret
xor
sub
jl
clc
pop
adc
adc
or
sbb
mov
bound
xchg
jge
mov
scas
sbb
cld
xchg
mov
jecxz
ret
rcl
inc
int3
push
jne
jnp
lods
je
ret
sub
add
and
ins
add
call
repz
cli
adc
adc
fild
add
push
ror
sub
clc
jp
mov
fs
add
push
popa
mov
pop
and
movs
into
imul
inc
adc
pop
adc
mov
std
and
icebp
inc
dec
inc
in
jp
cmp
in
fld
xchg
xor
scas
lea
xchg
mov
mov
pop
xor
pushf
jo
gs
push
leave
inc
movs
mov
xor
js
dec
scas
push
sub
rcl
and
jns
icebp
sti
shl
sub
or
mov
or
and
lahf
xchg
mov
out
mov
rcr
lods
loope
daa
adc
sbb
mov
pop
mov
sub
leave
sbb
out
dec
loop
mov
leave
dec
xlat
or
repz
mov
xchg
xchg
sub
jg
int
dec
and
pusha
adc
lds
int3
xchg
nop
loopne
push
movs
and
or
inc
xchg
lods
jl
stos
cmps
xor
ss
hlt
loopne
icebp
(bad)
and
stos
aas
leave
inc
cwde
(bad)
sub
loopne
xor
mov
pop
sbb
loope
xchg
mov
icebp
int3
cdq
fwait
adc
xor
sahf
dec
repz
xor
enter
fstp
movs
dec
retf
js
out
xchg
aam
xor
adc
inc
mov
cmp
xchg
lock
push
fcomi
jns
adc
jno
push
sub
sbb
pusha
dec
outs
in
mov
push
mov
lods
sub
xchg
pop
or
sbb
push
sti
sub
out
outs
sar
cwde
shl
outs
or
mov
aaa
inc
sbb
jecxz
jnp
into
nop
jno
and
xchg
xchg
pop
adc
push
sub
call
xor
xchg
sbb
inc
sub
xchg
(bad)
cwde
dec
(bad)
and
test
jo
data16
das
(bad)
sub
(bad)
push
xchg
repnz
inc
or
xor
into
mov
pop
inc
fsub
je
mov
sbb
push
dec
lock
xor
data16
mov
shl
ret
mov
call
js
loopne
(bad)
std
scas
cmp
inc
leave
pop
js
daa
retf
cmp
xchg
call
sub
pop
pop
cmp
scas
xor
push
lods
pushf
fdiv
test
mov
aam
push
pop
xchg
sahf
pusha
out
inc
and
cmp
adc
lahf
jbe
in
inc
jo
jb
push
into
enter
jge
mov
dec
scas
jne
sahf
mov
and
inc
mov
into
sti
mov
adc
or
xor
xchg
xchg
(bad)
movs
jl
in
cmp
push
cmp
das
hlt
cdq
inc
xchg
js
(bad)
test
mov
cmc
push
push
repnz
pop
mov
lock
jnp
jo
rcl
pop
mov
jae
jne
mov
mov
leave
and
ins
xor
dec
mov
push
push
js
jge
cld
in
pop
mov
std
dec
pop
mov
jns
pushf
std
xchg
dec
cmp
xchg
sub
nop
test
(bad)
outs
push
mov
xchg
inc
sub
cmp
mov
dec
cmp
xchg
dec
int
dec
dec
(bad)
xor
dec
stos
sub
es
js
dec
xchg
cld
xchg
adc
data16
retf
cmp
(bad)
pop
fwait
clc
bound
adc
pop
imul
in
cmp
out
loopne
sbb
rol
aas
std
xchg
cmp
test
loopne
std
lea
jns
cmc
xor
cli
pop
pop
icebp
sbb
jmp
cmp
pop
mov
scas
pop
cmp
retf
test
jle
xor
and
movs
ret
std
mov
cdq
ret
mov
pop
adc
in
pusha
aaa
pop
ins
sbb
stos
mov
xor
nop
stos
sub
mov
idiv
mov
jmp
mov
pop
jg
aam
(bad)
std
cmp
daa
out
in
inc
into
xor
sub
mov
add
sub
pop
cmp
fadd
cmp
in
mov
mov
mov
inc
xchg
dec
pop
xor
push
sbb
sbb
mov
cmp
cwde
adc
test
mov
ret
xchg
hlt
sub
jle
stc
push
xchg
and
jp
mov
dec
mov
cs
icebp
mov
mov
sbb
loop
js
cmp
add
pop
test
pop
mov
ret
maxps
and
cli
push
and
jmp
fwait
je
fs
push
pop
jns
dec
ret
out
ins
mov
push
lods
cs
clc
lods
out
jl
adc
mov
sti
mov
cmps
loop
cmp
or
mov
add
mov
test
sub
vphadduwd
cs
mov
fdiv
cmp
and
jne
es
cmp
cmps
sub
ret
cmp
mov
in
mov
stos
cwde
je
mov
push
mov
(bad)
in
ret
push
and
repz
retf
jmp
in
jo
and
cdq
fsub
cmp
sub
jnp
test
call
dec
movs
pop
and
in
int
stc
std
clc
xor
cmps
ss
dec
jecxz
fist
imul
les
out
test
int3
cld
xchg
jl
push
inc
adc
add
jae
sub
addr16
or
push
ins
pop
mov
les
jp
mov
adc
adc
loope
cmp
or
loope
outs
test
push
pusha
fadd
lods
fisubr
jle
loop
loopne
dec
pop
inc
mov
rol
iret
cmps
push
xor
xchg
hlt
push
mov
cmc
pop
ss
adc
add
inc
mov
pusha
out
les
pop
loopne
nop
jg
sub
sub
jecxz
mov
mov
sahf
in
jg
sahf
(bad)
cmc
int3
fsubr
sbb
lock
dec
retf
ins
pop
cmp
mov
or
jno
xchg
mov
jle
dec
sbb
shl
(bad)
imul
inc
shl
push
jne
test
and
push
mov
mov
aaa
stos
and
jo
cmp
dec
pop
adc
or
sbb
mov
push
in
into
cmp
enter
push
retf
inc
sbb
adc
cmp
lds
test
nop
jl
repnz
pop
xchg
and
out
inc
lods
jae
daa
in
push
imul
in
xchg
test
pop
cmps
fdivr
sub
xchg
sub
pop
loopne
fcomp
xchg
dec
int
jae
dec
js
sti
pop
fadd
lods
jne
in
pop
adc
pop
xchg
pop
xor
pop
mov
push
mov
jp
push
call
clc
fidivr
push
repnz
xor
in
inc
mov
stos
sub
sti
xchg
pop
jl
adc
cs
div
out
call
fcomi
xchg
lods
and
inc
mov
jl
repnz
imul
test
ja
cld
jmp
push
es
scas
cmp
cmp
xor
push
xor
pusha
pusha
mov
add
ret
dec
xchg
ret
mov
jne
inc
test
test
loope
rol
adc
jl
retf
stc
repz
jae
data16
rol
sahf
in
int
adc
mov
rcl
and
sbb
icebp
aad
std
inc
inc
push
sbb
cld
mov
dec
sub
fwait
inc
sub
fs
jmp
and
mov
outs
sti
pop
xor
cmc
jecxz
and
sub
movs
pop
and
cs
or
in
cli
sti
mov
jge
pop
or
std
pop
mov
xchg
pminub
movs
inc
retf
xor
pop
pop
cmc
je
sub
stos
test
add
xor
les
mov
cli
addr16
repz
js
fs
xchg
push
adc
retf
sub
gs
call
inc
xchg
cwde
addr16
movs
push
test
sar
adc
out
lahf
sub
and
scas
jl
sub
adc
fs
dec
jge
jp
fldcw
mov
int3
out
les
pop
stc
cmp
icebp
stc
adc
aad
xor
test
push
div
or
push
js
daa
arpl
xchg
int
push
(bad)
shl
pop
dec
mov
push
adc
pop
hlt
shl
cmc
jmp
loopne
ins
cmp
retf
xor
adc
test
xchg
sahf
aad
add
mov
dec
mov
cmc
add
ss
inc
loope
pop
sahf
daa
sbb
mov
movs
sbb
ins
clc
adc
push
(bad)
cld
sbb
(bad)
jge
cdq
xchg
add
stos
xchg
ret
xor
add
enter
es
arpl
adc
loope
xchg
mov
add
xor
aas
mov
hlt
mov
xor
or
or
push
mov
jge
ror
cmp
cli
xchg
cmps
loopne
es
addr16
or
mov
push
pop
(bad)
mov
or
loopne
(bad)
nop
xor
push
sbb
add
stc
ins
sub
jle
jmp
rol
inc
push
into
dec
icebp
hlt
pop
inc
pop
or
and
call
push
jmp
fld
or
in
inc
aaa
mov
popf
pushf
daa
xchg
cmp
pop
mov
and
sti
xchg
mov
pop
push
loopne
test
xchg
push
in
fisub
jmp
jl
jno
sbb
sub
mov
add
dec
xchg
dec
pop
(bad)
pusha
xchg
cmc
inc
jp
mov
jmp
mov
mov
jge
jecxz
or
inc
idiv
inc
test
sub
xor
xchg
and
sbb
push
xor
jo
pop
inc
fisubr
hlt
sar
xchg
adc
push
das
in
mov
cmp
ret
xchg
pop
sbb
sahf
push
adc
pop
cmps
sbb
xchg
adc
jle
xor
push
in
jne
out
push
cmc
sub
jmp
mov
sbb
data16
cs
daa
icebp
xchg
jns
sbb
fwait
mov
stos
retf
mov
jmp
(bad)
sbb
jae
pop
sbb
hlt
fst
call
jae
xchg
ror
(bad)
stc
mov
mov
stc
es
jns
in
fnstcw
sbb
(bad)
call
cld
sbb
addr16
cs
mov
loope
xor
jge
xchg
pop
sub
jg
inc
outs
into
mov
repz
mov
or
out
add
jge
mov
mov
inc
test
jb
outs
arpl
fld
out
push
lea
lock
inc
int3
das
mov
cmps
xchg
cmp
ret
add
movs
fstp
in
add
rol
xchg
in
clc
sti
adc
ja
mov
sub
xor
pop
mov
jae
fisttp
xor
(bad)
fcmove
lods
std
addr16
ror
cmp
xchg
out
sub
cmp
cmps
ds
repnz
movs
sub
rcr
push
in
popa
mov
int3
mov
jle
sbb
adc
addr16
inc
(bad)
sbb
(bad)
fwait
sub
mov
push
inc
shr
test
inc
popa
and
ret
cld
add
loopne
cli
sub
jae
not
inc
mov
xchg
mov
imul
das
test
cdq
pop
ret
ror
cmps
call
retf
jg
cmps
ret
sub
mov
pop
pusha
xchg
mov
pop
xor
push
sti
xor
push
dec
or
test
cmc
mov
jl
cmp
in
mov
stos
shl
push
dec
pop
jae
xchg
scas
cmp
rol
(bad)
fcom
movs
push
cmps
lea
aaa
xchg
mov
out
mov
mov
push
xchg
es
cdq
repnz
bound
mov
repnz
fsubr
iret
xchg
xor
scas
push
aas
cmp
mov
pushf
dec
daa
mov
js
xchg
sbb
in
popw
pop
add
call
push
and
cld
jne
movs
into
inc
jg
sub
push
and
cld
push
in
nop
(bad)
push
fdiv
sbb
(bad)
inc
popa
or
jne
cmp
leave
loopne
or
dec
push
ins
and
xchg
add
push
dec
clc
xor
pop
sar
push
and
jle
pop
sbb
lahf
and
mov
loopne
sar
hlt
repz
cmp
scas
pop
sub
sub
pop
pop
loopne
test
jg
mov
iret
and
adc
test
sbb
push
cmp
cmp
adc
cs
loopne
retf
loope
pop
pop
movs
lods
test
test
or
push
mov
cdq
sub
test
cmp
push
push
sub
cmp
js
(bad)
neg
xor
retf
xchg
loope
mov
mov
mov
sbb
sub
cmps
out
mov
or
sbb
mov
jae
pusha
cmp
sbb
pop
vmread
mov
jb
push
xlat
mov
xlat
add
sub
mov
inc
xor
pop
mov
outs
cld
fs
mov
push
shl
mov
out
dec
iret
enter
jb
mov
xchg
mov
movs
out
sbb
repnz
test
jl
adc
push
popf
and
movs
mov
shr
inc
inc
push
test
sub
sbb
mov
rcl
push
(bad)
les
inc
inc
std
xor
jp
dec
in
test
popf
adc
push
inc
gs
ja
dec
repnz
sbb
fwait
jge
in
dec
xchg
cmp
shl
cli
xchg
aas
dec
daa
pop
sbb
or
push
xchg
daa
ret
out
in
adc
sar
dec
and
inc
test
inc
lods
icebp
lds
inc
adc
jge
iret
dec
in
pop
add
jp
shl
shr
repz
icebp
mul
add
stos
pop
jp
or
mov
cmc
jae
mov
sar
xchg
mov
push
(bad)
mov
sbb
clc
xchg
dec
push
loopne
(bad)
adc
fdiv
xor
adc
xor
pop
xchg
inc
push
lds
jp
xchg
or
mov
dec
into
sar
dec
call
and
jge
nop
sbb
pop
cs
sbb
loopne
(bad)
jp
pop
push
fsubr
mov
jle
pop
fild
inc
rcr
ror
cwde
xchg
leave
pop
sbb
ret
ins
sbb
movs
out
pusha
stos
imul
ret
or
leave
push
js
add
and
retf
mov
fcmovnb
xchg
fs
mov
daa
push
es
mov
add
mov
push
mov
std
imul
mov
mov
loop
pop
jmp
or
fs
call
sub
(bad)
cmc
pop
mov
lods
and
js
call
sub
mov
push
imul
retf
push
dec
sub
push
mov
jo
(bad)
loope
or
push
mov
sbb
ret
ret
test
xor
das
mul
push
jbe
mov
adc
jb
inc
sbb
dec
cmp
jmp
(bad)
out
retf
je
lods
hlt
adc
mov
lds
ret
push
les
push
test
cmp
sbb
ret
vsubps
in
dec
jns
cmp
and
and
jns
jle
mov
mov
mov
inc
rcr
lods
loop
movs
push
dec
sub
push
je
ror
dec
mov
mov
push
pop
mov
call
ret
xchg
test
cli
jbe
mov
in
push
push
popa
stc
scas
shl
aaa
inc
xor
jo
and
cmp
mov
(bad)
(bad)
arpl
xor
xor
mov
pusha
jl
fs
div
in
je
sub
mov
sub
xchg
push
inc
xor
sub
xchg
xchg
imul
push
mov
cmps
mov
dec
out
sub
cmp
(bad)
jge
cmp
mov
sbb
cmp
cmps
xchg
mov
xchg
mov
cmp
loopne
shr
out
xchg
(bad)
std
nop
adc
jge
push
inc
jbe
lods
(bad)
rcl
cmc
stc
pop
and
cwde
xchg
shr
xchg
movs
imul
rcr
adc
jno
sbb
ror
clc
xchg
(bad)
xchg
lods
push
jecxz
pop
not
in
ins
jno
add
sub
(bad)
xor
sbb
mov
(bad)
mov
dec
das
jns
dec
int
pop
fisttp
test
imul
(bad)
sbb
jmp
mov
xor
cld
and
adc
mov
push
mov
xor
push
je
out
jmp
in
jns
xchg
imul
xchg
mov
outs
in
push
add
xor
mov
xor
imul
iret
mov
sub
daa
mov
out
dec
cmp
fbld
in
outs
xchg
mov
fld
pop
bound
push
retf
mov
stos
jl
jns
repnz
es
push
icebp
push
and
push
je
test
mov
xchg
xor
movs
fsubrp
lods
ret
(bad)
clc
das
shr
or
cmps
xor
call
das
aas
icebp
and
test
add
xor
in
pop
js
cmc
cli
clc
inc
les
xchg
push
mov
cmp
lods
dec
jo
scas
(bad)
adc
jmp
xor
or
cmp
push
ror
je
cwde
mov
repnz
ss
sbb
test
aad
pop
int
and
jmp
mov
fadd
and
stc
cld
mov
ret
outs
out
fmul
xor
pop
jle
repnz
jae
pop
adc
imul
repz
iret
div
call
out
jns
cld
sbb
mov
inc
or
and
jno
(bad)
sub
adc
pop
add
stos
and
jg
jmp
mov
pop
mov
cmp
sub
adc
loopne
icebp
xchg
jmp
inc
jae
adc
jno
les
xchg
out
push
jmp
leave
adc
pushf
jns
(bad)
mov
adc
adc
sbb
and
out
shl
std
(bad)
ret
movs
adc
rcr
test
sbb
hlt
mov
hlt
jle
cmp
js
stc
and
(bad)
xor
test
cmps
adc
xchg
retf
loope
cs
sub
in
addr16
jo
jns
jle
shl
cdq
test
shl
push
cmp
das
mov
jne
push
jmp
repz
push
push
push
test
mov
and
loope
and
inc
jnp
or
sub
mov
adc
sbb
jmp
jae
fsub
loopne
cld
daa
movs
mov
imul
or
xchg
add
(bad)
fidivr
jae
push
mov
ss
mov
jg
cld
mov
sbb
fstp
test
cld
sbb
fnstcw
ins
clc
test
xlat
cmp
xchg
in
xor
int
test
or
xor
sub
mov
jbe
sub
or
imul
jne
mov
jle
jne
mov
jne
js
ins
and
jg
mov
cwde
jns
test
pop
js
outs
mov
mov
cmp
jmp
pop
sub
dec
inc
loopne
jne
loopne
push
test
sub
push
pushf
or
jmp
shl
adc
cdq
icebp
ret
adc
test
icebp
addr16
xor
icebp
lds
pop
jnp
sub
mov
inc
cmps
mov
int
push
pop
sbb
aam
cs
or
cld
(bad)
push
retf
inc
jnp
sbb
lahf
in
pop
add
fs
adc
ins
outs
loope
int
pminub
int
jae
sbb
test
push
xchg
loop
js
mov
sahf
push
movs
ffreep
sbb
ret
pop
add
adc
rol
shr
mov
or
sub
jo
fimul
repnz
sub
call
arpl
mov
mov
call
or
or
cmp
adc
enter
mov
mov
cmp
adc
lea
xor
mov
cwde
push
cmp
inc
dec
sub
es
repz
lods
sub
or
mov
inc
add
sub
in
push
push
jle
mov
imul
lds
mov
(bad)
hlt
pop
les
inc
jle
js
imul
pop
leave
mov
mov
stc
fisubr
sub
add
adc
ret
sbb
daa
in
arpl
mov
inc
mov
mov
cvtpi2ps
xchg
mov
mov
pop
lods
mov
sub
fild
cmp
sub
loopne
mov
jl
pop
xchg
sbb
jnp
fdivr
xchg
xchg
ins
sub
jb
les
out
je
and
retf
js
and
lea
loopne
sbb
sub
jmp
mov
cmp
nop
iret
mov
repnz
daa
mov
xlat
push
sbb
retf
fs
jno
dec
outs
xor
xor
and
xchg
push
pop
sbb
mov
cmp
fdiv
fs
dec
hlt
adc
ja
xchg
mov
sub
xchg
lahf
cmp
fistp
mov
xchg
fild
add
jne
mov
sbb
push
jne
out
sbb
repnz
mov
sbb
mov
das
jns
or
mov
mov
test
(bad)
sti
pop
inc
push
stc
xchg
dec
clc
sahf
(bad)
ror
test
push
xor
rol
xchg
loopne
lds
cmp
pusha
add
adc
xor
in
mov
mov
inc
add
leave
fstp
mov
sub
pop
cli
scas
sub
fwait
ins
mov
add
xor
aam
jmp
cdq
jmp
sub
cli
mov
mov
push
and
(bad)
cmp
sub
lods
mov
adc
jns
sub
nop
out
dec
ds
push
sar
sub
xchg
and
and
adc
xchg
inc
or
shr
leave
add
sub
movs
stos
fadd
retf
pop
sub
push
(bad)
iret
test
sbb
cmp
in
and
repz
hlt
and
pop
cmc
sub
je
pusha
add
sub
push
inc
jb
sub
pusha
push
(bad)
loope
mov
fdivr
dec
sbb
aas
inc
jmp
mov
or
push
push
inc
lods
in
out
rcl
fisttp
fs
mov
dec
push
ins
mov
pusha
xor
ret
cmps
jne
rcr
fdivr
fs
sub
ins
and
or
mov
sti
int3
and
dec
loope
xor
sub
add
and
in
adc
pop
es
(bad)
sub
mov
outs
pusha
repz
out
sbb
mov
xchg
inc
add
add
cmp
sub
and
loop
pop
cmps
aad
outs
jmp
les
es
or
jecxz
call
and
rcl
sbb
xchg
cmp
sub
mov
je
or
ins
sbb
xchg
dec
leave
and
daa
cwde
rol
sub
sub
sub
jns
fimul
pop
jae
push
daa
mov
data16
test
and
inc
in
in
adc
es
or
js
clc
xor
inc
push
sahf
jnp
mov
ror
pop
add
push
and
lods
cmps
pop
xchg
jo
sub
and
xchg
les
sbb
call
(bad)
out
mov
add
aam
lock
push
or
imul
cmp
in
ins
sub
jmp
mov
outs
jl
mov
mov
lods
je
inc
enter
jns
push
pop
shl
and
cmps
gs
icebp
retf
nop
in
sahf
jb
jmp
into
(bad)
mov
cmps
mov
outs
repz
jp
popf
scas
dec
xchg
cmp
pusha
adc
dec
pushf
xor
and
dec
neg
stos
cmp
call
sbb
cli
xchg
xchg
mov
retf
inc
mov
ja
xchg
scas
outs
add
mov
adc
jp
and
pop
push
pop
sbb
into
inc
push
push
push
jmp
retf
(bad)
mov
jns
dec
xlat
mov
repz
xor
stos
push
fdivr
test
adc
mov
enter
fidiv
jl
repnz
xchg
or
push
jae
push
push
jne
outs
push
xchg
pop
in
les
lods
mov
jo
cmp
jmp
sub
xchg
push
in
mov
aam
pop
fsubr
adc
das
daa
jle
sub
inc
clc
out
sub
ret
dec
shr
jno
data16
xchg
call
xor
jle
test
pop
sbb
test
fchs
sub
sub
inc
jl
push
adc
aas
es
and
xor
cmps
lods
and
int3
scas
icebp
(bad)
(bad)
jmp
xchg
mov
test
out
xchg
push
and
dec
shl
and
(bad)
ins
aaa
movs
pop
add
jmp
cld
push
push
pop
ret
stc
dec
pop
retf
repnz
push
xchg
mov
jbe
adc
cmps
jns
pop
shl
adc
add
hlt
jge
fnstsw
out
hlt
or
cld
in
popa
xchg
aas
in
outs
jmp
and
sub
mov
adc
adc
lea
sbb
data16
loope
inc
dec
(bad)
xor
loopne
add
out
nop
adc
mov
addr16
je
add
sbb
daa
dec
aam
fdivr
(bad)
xchg
xchg
movs
shr
lods
adc
sbb
pop
sub
jmp
push
xor
dec
inc
mov
sub
push
push
sbb
das
icebp
and
mov
es
fild
cwde
imul
mov
sub
sub
xchg
into
cmp
in
test
mov
int3
add
hlt
stos
(bad)
mov
mov
lock
adc
rcr
mov
fsubr
push
(bad)
and
mov
jecxz
pop
in
xchg
cmc
les
xchg
in
push
xchg
dec
sbb
mov
and
jmp
mov
adc
cmps
xchg
in
sub
jne
add
mov
js
pusha
mov
fdivr
sub
cli
aaa
jg
sub
fs
sub
pop
jmp
cmp
cmp
adc
ret
loope
inc
jl
ins
fidivr
je
sub
sbb
jecxz
inc
retf
push
xchg
in
sub
add
rcr
xchg
mov
sbb
in
pushf
dec
mov
ds
pusha
iret
mov
sbb
jmp
or
add
mov
in
pop
mov
dec
das
jbe
ds
inc
rcr
loopne
lods
and
jb
adc
or
sahf
cmc
cs
retf
push
push
in
and
loopne
int
fmul
lea
idiv
(bad)
fdiv
xor
mov
mov
fisttp
fadd
fsubr
rcl
movs
jb
jns
cmp
sbb
cld
mov
adc
xor
mov
adc
or
adc
xchg
sub
mov
xchg
addr16
popf
mov
push
lea
repz
mov
and
add
(bad)
push
jp
push
mov
xchg
cli
iret
inc
iret
inc
cmps
sbb
xchg
jle
xor
(bad)
pop
aaa
mov
xor
and
jae
sti
xchg
lds
push
loopne
add
mov
retf
sbb
sbb
cs
sbb
cdq
xchg
pop
add
ret
retf
jge
iret
icebp
mov
mov
(bad)
ret
inc
mov
push
inc
mov
cmp
dec
jns
mov
mov
xor
dec
cmp
sub
std
adc
das
into
mov
mov
xor
push
jae
cmp
imul
xchg
out
repz
sbb
movs
js
retf
enter
inc
sbb
loopne
sbb
movs
je
mov
(bad)
jmp
push
inc
es
cli
adc
movs
test
popa
jae
retf
push
imul
inc
and
push
jecxz
test
mov
push
sbb
lds
fistp
xchg
add
push
push
loopne
cmp
pusha
pop
sub
sbb
xor
pop
mov
ss
push
movs
in
xchg
pushf
or
pop
lock
push
jp
mov
(bad)
cdq
sbb
repz
add
mov
add
jge
ins
call
xor
popf
out
inc
xor
push
push
adc
inc
int
mov
clc
mov
pop
es
xchg
mov
or
leave
push
jne
and
sbb
xchg
xor
jnp
out
xchg
jp
(bad)
mov
pop
xchg
popa
cmps
xchg
mov
mov
or
std
fld
push
sub
int3
mov
call
pop
cdq
pop
not
mov
out
and
sub
idiv
repz
jle
pop
xchg
xor
xchg
stos
std
inc
xchg
inc
sbb
adc
aas
retf
jp
and
retf
in
mov
jecxz
(bad)
stos
xchg
jg
fcom
cmp
mov
fnsave
jl
xchg
aam
js
mov
retf
mov
retf
pop
mov
or
mov
loopne
in
mov
dec
les
and
fstp
jns
cmp
jecxz
ss
js
rol
sbb
mov
imul
(bad)
hlt
sub
out
adc
pushf
repnz
xor
enter
mov
sub
sub
sbb
and
mov
pop
std
cmc
cwde
addr16
mov
lea
hlt
out
test
mov
(bad)
fisub
sub
inc
lds
cdq
mov
mov
xchg
sub
sub
(bad)
fisub
(bad)
xor
loopne
setno
pop
or
idiv
dec
xchg
jle
pop
mov
inc
loopne
cwde
push
xchg
add
movs
push
fnstsw
sbb
xchg
or
push
sbb
pop
xor
scas
xor
cmps
dec
js
stc
mov
jle
inc
xchg
sbb
jge
sbb
mov
push
adc
xchg
mov
shl
mov
(bad)
in
sub
xchg
ror
fidivr
std
lea
in
mov
in
mov
push
fnclex
fidivr
outs
and
xchg
in
jnp
shr
test
and
cmps
loop
xchg
lock
cmc
data16
mov
rcl
dec
dec
sar
dec
pop
stc
shl
cmps
push
and
out
cmp
in
jne
cli
or
sub
inc
xchg
dec
push
or
sub
addr16
push
mov
sub
data16
adc
in
dec
mov
sbb
stos
cwde
enter
into
jae
cmp
lock
pop
stc
adc
cmps
ja
(bad)
xchg
stos
sahf
outs
imul
xor
outs
bound
and
gs
xchg
xchg
ins
jb
adc
adc
mov
mov
ret
mov
in
or
fild
repz
and
mov
and
mov
sbb
dec
inc
mov
inc
enter
push
(bad)
movs
mov
out
mov
jnp
pop
iret
xor
in
push
push
push
cmp
les
lock
sbb
jo
mov
(bad)
les
movs
cmp
mov
lock
or
sub
sbb
jno
ins
(bad)
pop
dec
sbb
jecxz
push
outs
(bad)
cmc
xchg
sub
daa
pop
in
pushf
in
xchg
inc
cs
enter
into
popa
aam
call
(bad)
rcr
in
xchg
adc
mov
call
test
jge
push
mov
jp
adc
call
mov
pop
es
xlat
mov
cld
xchg
gs
and
xchg
push
jg
xchg
mov
jmp
lea
(bad)
std
cli
in
std
or
not
cmp
pop
adc
int
hlt
adc
clc
rol
inc
jbe
and
mov
imul
mov
lods
adc
shl
jge
rol
and
xor
or
and
adc
and
mov
call
js
sub
pop
fsubrp
xor
xchg
push
xrelease
cdq
xor
push
cmps
cmp
test
xor
in
xor
iret
pop
cmp
push
(bad)
jmp
lea
xchg
sub
dec
fdiv
outs
push
fistp
xchg
repz
cmps
xchg
xchg
sbb
mov
and
jp
fwait
dec
popf
nop
sbb
das
in
jae
les
aad
sbb
mov
jae
or
push
add
or
into
adc
les
push
xchg
ins
idiv
jne
das
add
test
test
test
jmp
mov
sub
jb
sub
ds
add
call
jns
rcl
jmp
popf
jl
lds
out
ins
xchg
outs
xor
cmp
(bad)
loopne
cwde
dec
pop
xchg
movs
jge
ret
or
push
daa
mov
shr
jl
adc
loope
xor
add
pop
iret
jmp
shl
dec
cmp
or
mul
cmp
xchg
fld
cmp
adc
dec
imul
inc
sahf
push
jne
inc
and
js
cld
xchg
ins
sbb
mov
jne
xor
cli
imul
mov
jmp
sub
pop
xor
jle
jae
lds
and
adc
xchg
aad
icebp
in
out
leave
arpl
cli
xchg
sahf
lahf
add
iret
je
clc
les
xchg
xchg
push
test
mov
cli
jno
xor
push
mov
(bad)
nop
sbb
cmc
dec
rcr
das
movs
test
imul
mov
xchg
fidivr
(bad)
sub
sub
cmp
adc
inc
test
(bad)
fstp
mov
jne
add
jns
inc
icebp
ds
jmp
call
xchg
out
adc
sbb
sbb
shl
add
jmp
clc
rcl
xchg
mov
addr16
sbb
std
sbb
mov
xchg
inc
ret
xlat
int
(bad)
rcl
lea
sub
pop
pop
leave
out
(bad)
xchg
arpl
daa
mov
int3
push
not
aas
mov
call
pop
mov
ins
xchg
xor
(bad)
add
int
les
pop
mov
inc
mov
dec
sbb
fmul
jecxz
lea
add
lods
std
fsub
sub
mov
jge
and
pop
(bad)
cmp
in
cmc
jmp
adc
pop
inc
xor
in
xchg
dec
sbb
hlt
sub
pop
ss
lahf
ss
mov
or
xor
cmp
xor
fmul
xchg
lods
push
xchg
cs
xor
loop
(bad)
mov
cli
out
stc
cwde
stc
cmp
sbb
pop
add
outs
cmc
imul
mov
xchg
out
mov
and
mov
jnp
scas
in
push
arpl
push
loop
aad
(bad)
push
cmp
gs
mov
jmp
cld
add
minss
jns
xchg
and
jp
sbb
test
adc
sub
dec
pop
xchg
outs
test
cmp
push
fild
fs
das
xchg
fsubr
mov
sbb
mov
cmp
test
imul
cmp
jg
movs
and
es
dec
test
(bad)
(bad)
push
xor
jg
fs
dec
clc
inc
rcr
mov
cmp
or
pop
iret
push
inc
xlat
(bad)
mov
mov
test
xor
outs
rcl
popf
xchg
adc
mov
mov
pushf
xor
imul
pusha
pop
stos
test
cwde
sahf
jmp
add
retf
jo
cmp
cli
sbb
das
(bad)
cs
mov
test
repz
pop
cli
mov
sub
in
scas
jo
je
repnz
push
lds
aas
xchg
dec
ds
nop
jp
cld
dec
js
call
ror
cmp
clc
adc
xchg
(bad)
movs
adc
xchg
js
movs
xchg
es
rcr
cmp
dec
lods
jne
inc
in
daa
ret
push
and
mov
or
add
jae
ret
pop
pop
and
or
test
or
push
xor
scas
jbe
call
(bad)
in
or
fwait
jne
inc
pop
das
adc
mov
ds
mov
imul
out
movs
pop
icebp
out
dec
cmp
ror
outs
(bad)
pushf
adc
inc
imul
cmp
ds
push
add
pop
inc
push
mov
mov
dec
sub
xchg
cmps
add
jnp
(bad)
rcr
aaa
mov
inc
sti
xor
sbb
cmc
push
cmp
cmps
stos
popa
sbb
outs
jl
push
pusha
ins
xlat
xchg
mov
push
mov
scas
xor
jne
lea
adc
xchg
dec
adc
adc
cmps
out
mov
dec
push
inc
stos
and
call
push
std
rcl
inc
sbb
out
pop
xchg
mov
xor
bound
and
mov
dec
push
test
popa
jp
(bad)
mov
xchg
pop
shl
pop
outs
adc
in
fwait
cmp
and
jg
push
cdq
xchg
mov
xor
push
sub
pop
sub
cmp
shl
mov
retf
sar
lahf
mov
pushf
int3
mov
aam
xchg
xor
jne
sub
ret
jmp
mov
mov
inc
clc
jmp
jp
xchg
cmp
sub
loopne
xchg
push
ss
push
sub
ins
xor
lea
clc
repz
sub
stc
icebp
mov
lea
loop
sbb
mov
test
(bad)
in
push
imul
fs
fsub
push
rcr
ret
rcr
popf
cs
cmp
cmps
add
loop
mov
unpcklps
mov
and
pop
push
js
mov
sub
mov
adc
fstp
mov
leave
cmp
dec
in
fldenv
sbb
test
jmp
xchg
popf
xor
pushf
add
ret
sahf
fcmovne
or
cmp
in
add
daa
add
sbb
mov
cmp
adc
loop
call
fadd
pop
cld
inc
sbb
or
xor
int
cli
push
ffreep
sar
cli
hlt
cmps
mov
loop
jnp
test
scas
fisttp
retf
popa
push
es
(bad)
push
clc
rep
cld
outs
push
bound
test
jne
xchg
test
inc
xchg
jne
sub
cmp
movs
inc
cmp
mov
call
push
movlps
and
(bad)
push
out
jmp
mov
mov
xor
pop
sub
xchg
mov
fs
dec
rcl
cdq
jl
icebp
ror
mov
int3
int3
lahf
cdq
mov
xor
cs
adc
out
aam
push
pop
or
push
xor
and
cmp
cmp
xor
mov
repz
(bad)
sbb
out
ror
ss
sub
sbb
fwait
ret
sub
(bad)
mov
dec
ins
mov
call
xchg
in
stos
cmp
es
pop
test
repnz
imul
push
hlt
(bad)
into
shl
pop
mov
add
hlt
cmps
mov
xor
sbb
xchg
adc
jg
loopne
int3
adc
xchg
std
ins
xchg
pop
adc
arpl
mov
cs
cmc
mov
popa
rdmsr
test
xchg
ja
mov
std
add
xchg
sbb
or
or
sub
test
and
push
or
inc
lahf
pop
lahf
dec
test
inc
ds
sub
jne
dec
or
and
cmp
dec
dec
xchg
pop
pop
mov
fimul
loope
lods
or
fst
jno
and
cdq
mov
mov
cmp
jle
sbb
add
xchg
pop
jecxz
aad
xor
sub
mov
mov
sbb
loopne
outs
sbb
(bad)
jmp
mov
push
xchg
mov
jp
or
lea
test
fisttp
std
mov
xchg
mov
dec
mov
movs
cmp
fdiv
fld
ins
sbb
adc
xor
mov
ds
jmp
pop
outs
mov
push
pop
loopne
push
(bad)
daa
les
mov
xchg
movs
xchg
dec
pop
mov
rol
sar
and
(bad)
jns
lahf
in
cmp
call
xchg
or
inc
test
jle
push
jne
lods
leave
ja
sub
sbb
jp
xchg
dec
mov
jmp
sub
sub
xor
cli
push
cwd
lea
pop
mov
jns
push
push
mov
jge
and
lahf
cld
cld
sahf
mov
fisub
in
(bad)
and
out
cmc
push
push
jp
add
cli
pop
lea
inc
call
aad
sub
repz
mov
adc
jmp
jl
icebp
cmc
jp
mov
xchg
push
mov
sbb
mov
and
sbb
rol
jbe
sbb
jp
into
jno
add
idiv
shl
test
mov
cwde
xor
xchg
jb
jge
clc
outs
dec
icebp
pusha
dec
mov
ja
es
dec
cmp
ds
in
mov
jne
mov
xor
add
cmp
sar
xchg
push
sbb
push
add
aas
pop
jbe
mov
pop
sub
pop
pop
cdq
add
xor
out
ss
xor
sub
dec
jne
lds
and
pop
loope
jne
in
jge
test
push
mov
out
jecxz
lahf
in
mov
adc
xor
or
xor
outs
mov
js
fistp
dec
xchg
cli
dec
mov
imul
jo
push
jns
ins
mov
dec
add
(bad)
adc
mov
adc
xchg
push
mov
cmp
jg
or
icebp
jecxz
sar
jnp
add
xchg
adc
xor
sub
leave
add
adc
jmp
outs
in
mov
push
push
int
out
out
out
add
jge
cmp
mov
xchg
test
add
push
ins
sbb
in
and
loope
cdq
jecxz
aad
(bad)
mov
ret
cmps
and
test
ret
movs
or
(bad)
data16
jmp
xor
cmp
aas
dec
mov
xchg
mov
jmp
movs
mov
dec
pop
sbb
xchg
xchg
dec
inc
in
jmp
jne
add
mov
ss
inc
(bad)
jns
jl
cwde
inc
ret
and
mov
dec
(bad)
arpl
xor
das
or
mov
lock
jmp
rcl
sahf
pop
mov
loop
sbb
lea
daa
mov
es
ror
adc
stos
lods
sub
call
retf
das
(bad)
sti
cmc
out
pop
test
mov
jbe
cmp
sub
add
loope
lds
jecxz
mov
pop
jge
inc
jb
dec
aam
ret
(bad)
mov
push
daa
jmp
cmp
js
les
sbb
fdivrp
sbb
xchg
mov
xchg
leave
cmp
fidivr
push
mov
out
sbb
sub
imul
cmp
pop
add
xchg
and
pop
or
repnz
adc
inc
push
popa
les
cli
imul
xchg
xchg
add
jae
jnp
jp
enter
scas
mov
dec
rcr
in
cld
test
rcr
ret
jle
pop
out
rsm
inc
js
shl
mov
je
cli
imul
test
(bad)
jmp
mov
js
mov
fwait
sub
pusha
je
and
push
xchg
jl
pop
push
aam
and
cmps
push
dec
mov
test
pop
xchg
push
or
ficom
hlt
imul
jb
je
inc
dec
mov
ret
retf
dec
bound
clc
jle
xor
loope
mov
xchg
hlt
aad
jno
xor
retf
sub
push
outs
test
add
jnp
adc
push
cmp
pop
inc
dec
xor
sub
leave
mov
pop
dec
in
mov
jp
cmp
or
rcl
movs
pushf
lods
(bad)
push
xor
or
jle
sbb
push
jae
pop
add
xchg
add
movs
and
sbb
sub
add
dec
xchg
mov
and
xchg
pop
xchg
(bad)
mov
(bad)
mov
sub
test
shl
stc
jl
xchg
retf
fld
adc
rcl
mov
movs
imul
mov
test
out
aam
mov
mov
jecxz
pusha
sub
dec
push
mov
in
gs
push
inc
mov
popf
(bad)
mov
fsub
xor
enter
mov
xchg
and
mov
mov
mov
sbb
aad
adc
adc
xchg
or
aam
cld
jecxz
stos
retf
cli
push
push
ret
scas
das
cld
(bad)
sbb
(bad)
adc
jmp
cs
dec
jle
ror
inc
shl
add
clc
xor
mov
dec
inc
iret
or
cdq
in
dec
add
push
sub
les
test
xchg
xchg
mov
xchg
ins
xchg
fcmovb
outs
push
dec
dec
pop
movs
push
inc
aad
sbb
xchg
sbb
dec
sub
xor
int
cmp
mov
mov
and
idiv
push
mov
adc
mov
and
pop
test
stos
adc
pushfw
call
and
sub
sub
jne
jne
int3
leave
cmps
das
not
mov
les
add
dec
fwait
sub
add
xor
xchg
fidivr
adc
jo
sub
adc
inc
jl
push
cld
jmp
in
fcomp
pop
leave
test
cmp
cmps
std
or
retf
jnp
push
cmp
mov
pop
imul
or
inc
lds
pop
daa
cs
stos
lods
bound
fidiv
iret
(bad)
mov
outs
jg
scas
pop
leave
sub
and
aas
jne
or
push
out
mov
scas
ror
sub
sbb
dec
rol
clc
add
ret
pop
xor
mov
inc
xchg
ss
cmps
stos
iret
pop
jae
xchg
sbb
fadd
xchg
cmp
in
jmp
push
(bad)
cmp
inc
fdiv
push
test
das
loope
cwde
(bad)
jmp
pop
rcl
cmps
rol
mov
je
push
jne
in
aad
cld
je
adc
stc
mov
cmp
fs
xchg
loope
pcmpeqw
repnz
rcr
(bad)
inc
jge
mov
xchg
xor
leave
adc
mov
sub
inc
push
shr
jae
xchg
xchg
out
dec
fstp
inc
hlt
inc
lock
xor
aad
cmps
cdq
jmp
mov
push
(bad)
sbb
pushf
fisubr
retf
cmc
ds
in
call
add
xchg
rep
icebp
cs
imul
adc
hlt
jae
(bad)
pop
cmp
inc
dec
sub
es
mov
rcl
jg
in
jge
pop
outs
imul
mov
imul
or
mov
nop
jne
fld
sub
xchg
cmp
int
push
iret
loopne
outs
and
cli
das
pop
dec
fst
push
lock
mov
into
sub
jmp
and
cmp
shl
mov
repnz
jns
shl
sub
sbb
in
add
push
push
cli
scas
sub
cs
in
cmp
add
iret
pushaw
jmp
iret
mov
xchg
pop
(bad)
imul
cmp
lock
rcl
jae
lds
(bad)
xchg
stc
in
lea
and
mov
out
and
les
cmp
gs
sbb
push
mov
mov
mov
inc
cmps
mov
xchg
in
sbb
dec
jno
add
retf
call
out
mov
js
lock
mov
data16
fst
add
in
xchg
jae
stos
movs
dec
push
xchg
gs
dec
fs
movs
jmp
shl
and
jmp
mov
pop
lahf
mov
push
xchg
test
clc
stos
in
xor
sub
into
and
push
loopne
add
dec
dec
adc
das
retf
fisttp
ds
mov
stos
mov
mov
mov
pop
test
lock
push
(bad)
enter
lods
call
and
xchg
dec
in
push
ja
adc
leave
dec
repnz
or
sar
pushf
adc
pop
mov
test
add
push
std
jmp
xchg
std
fst
cmc
loop
fwait
cmps
cmc
out
test
loope
jb
adc
fs
mov
call
jae
sahf
pushf
adc
leave
jle
int3
xchg
loopne
leave
and
les
repz
not
inc
into
fnstsw
adc
imul
aad
loope
add
and
push
es
pushf
bound
fistp
jmp
data16
mov
das
(bad)
sub
lock
and
ret
mov
cmp
pop
pop
fistp
ret
sub
mov
out
xlat
jb
loop
dec
xor
pop
bound
shl
mov
and
add
sbb
mov
ja
xor
inc
mov
and
rol
xchg
int
dec
ret
inc
pop
adc
push
pop
mov
mov
inc
add
or
mov
add
cmp
jnp
aam
pop
dec
fidivr
adc
es
outs
scas
push
cli
fisttp
sbb
jp
or
mov
jae
ret
inc
xor
scas
xchg
xchg
add
stc
dec
cld
movs
loop
dec
pop
hlt
jo
mov
test
mov
add
xchg
mov
icebp
not
repnz
or
jne
xchg
push
mov
sbb
test
jae
mov
sub
xchg
jns
lock
mov
addr16
push
jmp
test
adc
clc
xchg
test
out
mov
add
loope
ror
lahf
mov
jno
xor
lods
and
shr
sbb
sub
rol
sub
mov
fsubr
rcr
cmp
jge
ret
enter
in
mov
jnp
idiv
add
or
mov
ror
enter
add
mov
jb
xchg
xchg
mov
mov
test
aam
jge
and
push
adc
dec
jmp
mov
retf
lods
or
sti
jo
push
ins
dec
pop
je
inc
repnz
jns
sub
push
push
jmp
mov
pop
push
xor
js
jne
mov
or
pop
pop
mov
je
icebp
js
stc
pop
or
push
pusha
cmp
call
shl
cld
ret
adc
mov
das
pop
stos
gs
stos
dec
rol
push
dec
mov
mov
repnz
cmps
jne
cmps
(bad)
sbb
dec
jb
and
pmaddwd
call
jmp
and
test
sbb
faddp
call
loopne
aaa
sbb
loopne
xchg
addr16
shl
jae
and
sub
mov
call
mov
jmp
jnp
push
nop
pop
mov
mov
adc
and
cmps
fisubr
mov
cmp
mov
cmp
push
cmp
mov
pop
push
in
or
test
loop
push
xchg
xchg
xor
ins
das
lods
sbb
int3
sahf
push
inc
mov
sub
(bad)
push
dec
popa
push
nop
fs
cwde
push
(bad)
mov
stos
dec
ret
cli
jne
mov
sub
jmp
xchg
mov
xchg
loop
xor
jmp
mov
push
xchg
mov
push
sar
push
adc
inc
inc
jnp
adc
xor
xor
ret
sbb
jae
div
(bad)
or
pop
and
pusha
sbb
loopne
scas
xlat
cmp
and
jmp
daa
add
dec
imul
jne
out
adc
cwde
and
dec
push
loop
aas
mov
dec
lds
dec
pop
dec
loope
cmp
lods
adc
cli
adc
sub
js
mov
test
and
std
movs
sub
jbe
jmp
sbb
sub
adc
sbb
js
shr
lock
enter
bnd
popa
iret
add
int
in
xchg
mov
jnp
xchg
cmp
cmp
and
loopne
jmp
push
js
mov
mov
lods
sahf
jae
in
or
push
mov
pop
or
daa
dec
jecxz
jne
cmp
xchg
mov
xor
sbb
retf
(bad)
mov
mov
xchg
popf
cmp
gs
mov
cmps
leave
js
lahf
sar
stos
bound
test
in
cli
pop
or
jl
add
xor
popf
or
jle
int3
sub
sbb
repnz
repz
jae
adc
ja
mov
mov
xchg
mov
sbb
out
(bad)
fcomp
daa
jne
add
adc
adc
movs
test
xlat
imul
cld
adc
fs
fnstsw
jne
xchg
push
aad
ds
mov
data16
cmp
inc
hlt
ret
jg
pop
mov
sub
mov
loopne
popa
jns
xchg
push
jp
mov
jg
push
mov
jo
pusha
push
cmc
out
mov
ror
out
xchg
push
lahf
jmp
fidivr
mov
xchg
fcmovnbe
jl
adc
cmp
cwde
hlt
xor
mov
xor
outs
push
jge
imul
add
ds
loope
sub
ja
dec
adc
mov
popf
mov
sub
push
dec
int
nop
pop
jnp
in
pop
shr
imul
mov
dec
xchg
sbb
or
cmc
mov
sub
cmp
aas
cld
sub
jae
xchg
lock
fisttp
pop
or
popa
xlat
lods
aad
mov
sub
scas
ds
popf
rcl
pushf
imul
pop
cld
mov
dec
push
ret
imul
ins
jle
retf
jo
push
dec
data16
pop
repz
xchg
add
data16
pop
out
cmc
(bad)
adc
xchg
(bad)
(bad)
cmps
adc
mov
jmp
rcl
adc
cmp
jge
pusha
xor
jb
pop
inc
retf
imul
cs
out
mov
in
and
pop
push
stos
sub
test
add
add
test
in
mov
lods
dec
jmp
dec
push
std
(bad)
outs
scas
adc
push
jmp
daa
xchg
dec
je
jb
imul
pop
jae
dec
fdivr
aad
hlt
cmp
fs
dec
in
retw
jmp
sub
lods
das
(bad)
xor
mov
pop
sbb
xchg
push
or
outs
loopne
pop
push
push
xchg
mov
imul
xchg
pop
ins
retf
sahf
hlt
(bad)
adc
pop
xchg
sub
cmps
pop
sbb
in
jge
ins
inc
stos
dec
push
mov
add
fs
push
adc
jge
in
and
xchg
jmp
fsub
lahf
aam
fsub
inc
adc
lods
push
and
hlt
sub
mov
jecxz
fistp
or
cmp
xchg
jno
mov
mov
jecxz
inc
sub
adc
push
les
(bad)
pop
loop
shl
(bad)
rcr
push
aas
pop
imul
aas
cmp
cmp
mov
pushf
push
cmp
mov
jecxz
xchg
sub
xchg
mov
jns
les
cmp
xchg
aaa
adc
and
mov
hlt
inc
bound
outs
jl
mov
out
push
mov
nop
loopne
jl
ror
push
mov
or
daa
int
js
aam
cmp
adc
(bad)
xchg
sar
repz
lds
cmps
clc
cld
lahf
mov
shl
shr
xlat
pushf
ret
add
jp
test
sub
add
ret
aam
pop
push
push
aad
imul
test
scas
mov
fstp
cld
inc
push
dec
cmps
xchg
and
xor
faddp
neg
enter
pop
nop
int
shr
sahf
xor
(bad)
adc
out
cdq
add
fld
mov
(bad)
(bad)
pop
sbb
int3
retf
and
cwde
je
adc
pop
test
pop
out
dec
xchg
add
push
pop
test
mov
nop
mov
(bad)
retf
push
shl
bound
rol
dec
xchg
lock
les
sbb
xchg
cmps
gs
xchg
lea
mov
mov
leave
and
sbb
scas
xchg
sub
mov
sahf
(bad)
and
ins
xor
mov
les
mov
arpl
(bad)
and
xchg
(bad)
sub
test
push
sbb
cdq
sbb
adc
inc
inc
imul
loope
cmp
cmp
pop
cli
sub
jo
mul
leave
es
out
fwait
js
mov
loop
nop
mov
mov
ficomp
xor
test
push
mov
fcomp
adc
jle
(bad)
jae
add
adc
and
cmps
das
cdq
mov
or
push
sar
sub
out
movs
mov
vandpd
in
pop
inc
sub
cmp
ret
fwait
int
addr16
sbb
in
imul
imul
sti
rcl
(bad)
in
cmc
pop
inc
cld
mov
mov
mov
push
jg
jle
cmp
mov
sar
sbb
jge
dec
adc
neg
lea
jge
pop
dec
lahf
or
repnz
adc
gs
int
xor
aas
cmc
ret
js
movs
cmp
pusha
xor
lock
sub
mov
pop
and
das
mov
add
inc
adc
pop
push
test
sub
nop
shr
inc
add
jae
(bad)
test
sbb
inc
aad
smsw
in
and
movs
cmps
fdiv
sub
xchg
and
movs
and
dec
and
mov
loope
pop
lock
pop
xor
shr
push
cmp
sbb
jns
in
(bad)
cmp
sbb
dec
mov
add
nop
je
jo
(bad)
iret
(bad)
fist
and
dec
(bad)
lods
jne
sbb
pushf
bound
adc
pop
push
mov
jbe
arpl
mov
xchg
lock
jnp
repnz
jns
test
test
xchg
in
push
sub
pop
xchg
and
clc
pop
pushf
addr16
xchg
dec
(bad)
repz
mov
inc
icebp
cmc
adc
adc
scas
cmp
xor
jae
add
in
inc
sub
xor
xchg
nop
popf
fs
ror
inc
outs
jmp
and
in
push
adc
inc
xchg
dec
inc
aam
(bad)
jb
jno
cmp
rcl
loop
jmp
in
adc
addr16
int
xchg
test
test
into
loopne
(bad)
(bad)
loop
jp
jge
xor
clc
add
xchg
jmp
hlt
test
cmp
hlt
ja
out
mov
ds
sahf
aam
aaa
adc
cmc
fistp
repnz
xchg
dec
cmp
in
add
mov
mov
push
jnp
and
pop
xor
mov
and
cmp
ds
cli
std
xchg
pop
sbb
cmp
and
adc
pop
movs
icebp
ficomp
inc
in
repz
mov
jg
or
test
push
mov
sbb
into
sbb
xchg
mov
xor
pop
stos
jnp
addr16
jb
xchg
(bad)
fmulp
cmc
stos
mov
into
pop
sub
js
aad
(bad)
push
in
lock
xor
xchg
lods
push
shr
xor
cmp
xchg
scas
adc
xchg
and
icebp
lods
in
dec
mov
ja
shl
fld
out
adc
sub
jnp
add
sbb
xchg
and
out
or
xchg
cmp
sub
clc
movs
(bad)
pop
jne
cmp
pop
xchg
mov
push
mov
jmp
shl
rcr
neg
pop
xchg
pop
fcmove
fimul
xor
(bad)
pop
ret
jg
push
cmp
sub
pop
(bad)
dec
jle
jmp
test
jns
(bad)
mov
iret
mov
fs
xor
fistp
imul
jmp
ror
xchg
and
movs
mov
jbe
pop
adc
ins
xchg
and
adc
jmp
dec
xor
inc
test
out
in
bound
cmp
stos
aam
push
icebp
movs
jg
stc
mov
and
test
movs
bound
pop
popa
hlt
add
popf
pop
xchg
mul
icebp
stos
xchg
mov
mov
jnp
mov
push
es
mov
or
fbld
lds
cmps
aas
scas
lock
or
jae
in
gs
xchg
fucomi
std
jle
and
mov
dec
or
sti
scas
sar
call
adc
adc
call
cmp
pop
pop
loope
ror
jmp
mov
sar
fstp
hlt
popa
xchg
sbb
cmps
mov
sahf
stos
out
cmp
cmp
cld
jno
sub
ds
scas
les
daa
loopne
retf
cli
jmp
cmp
movs
or
sub
rol
das
jbe
or
fsubr
sbb
pop
and
push
scas
or
xor
std
jo
dec
mov
and
popa
iret
jp
jno
cmp
mov
sbb
pop
repz
pushf
cwde
pusha
inc
push
ret
mov
or
ja
shr
sub
xor
jnp
jge
ret
adc
aad
clc
fcomp
jle
mov
push
mov
ja
xchg
repz
inc
dec
daa
pop
ret
dec
jne
inc
xchg
shr
sar
sub
adc
mov
shr
cmp
push
cmp
sbb
call
loopne
jne
add
sub
dec
or
sbb
std
leave
hlt
or
outs
in
rol
xchg
stc
and
jnp
fs
lock
xchg
movs
push
sbb
shl
rcr
lock
or
in
cmp
jmp
hlt
xchg
push
fwait
xchg
dec
dec
mov
xchg
jp
nop
pushf
pop
adc
outs
stos
sub
adc
inc
(bad)
cmp
test
cmp
mov
cmp
rcr
inc
and
in
in
fcmovb
mov
daa
(bad)
js
push
ret
pop
into
xchg
dec
neg
push
push
mov
sub
in
inc
jmp
daa
xchg
xchg
popa
test
and
cmp
(bad)
das
ret
sbb
stc
shr
inc
sub
test
dec
(bad)
sbb
xchg
jo
cmps
mov
jl
idiv
mov
js
or
stos
jl
div
fild
jmp
adc
ret
jecxz
xor
mov
shl
mov
dec
aad
pop
and
push
loope
cmp
aas
push
adc
in
lock
cli
int3
ret
pop
cli
cld
and
xor
mov
in
xchg
in
mov
gs
mov
daa
mov
jno
lods
fiadd
cmps
loop
pop
retf
mov
push
sbb
retf
test
xor
ret
lahf
mov
jo
inc
fidivr
je
sbb
add
fwait
aam
fisubr
mov
gs
jecxz
das
jmp
sahf
sub
data16
loopne
shr
call
mov
add
jae
ret
not
mov
into
mov
dec
push
lods
dec
ror
pop
xchg
loopne
test
popa
je
sti
xor
fnstenv
outs
popa
test
pop
lahf
fs
or
push
mov
dec
or
outs
xchg
sbb
and
xchg
in
xchg
mov
dec
inc
and
cmp
in
inc
inc
out
cdq
(bad)
add
daa
push
outs
fild
push
and
add
pop
imul
icebp
jmp
mov
test
and
xchg
inc
lea
or
movs
xchg
pop
mov
sahf
xchg
cmp
in
aam
sub
sub
mov
adc
xchg
jbe
and
push
(bad)
int3
dec
dec
es
cmc
push
push
jmp
cmc
ret
jge
mov
fisubr
adc
cwde
xchg
pop
mov
mov
int
cmp
mov
repnz
repz
mov
clc
xchg
in
xchg
push
leave
aas
mov
mov
shl
stos
loopne
cmc
sub
outs
cli
inc
bound
cmp
addr16
inc
aam
leave
fs
daa
cwde
xchg
dec
loope
stos
and
jg
loopne
or
pop
mov
lods
jb
stos
dec
inc
cmp
das
sub
cwde
mov
mov
cmp
or
cmp
xor
sub
sub
(bad)
xor
jg
add
pop
sahf
push
movs
push
xchg
(bad)
ror
in
sti
push
aaa
cdq
and
jnp
icebp
inc
mov
adc
in
pop
jb
ja
mov
imul
int3
int
nop
out
shr
dec
or
jmp
dec
lods
or
add
jae
cmp
pop
pop
shr
icebp
cli
out
ss
xchg
mov
adc
jge
(bad)
hlt
mov
mov
repz
add
jae
sahf
fs
push
ins
and
idiv
in
push
xor
enter
sub
ret
and
shl
jmp
in
xrelease
mov
popa
mov
mov
sub
repnz
pusha
in
xlat
pop
mov
cmc
inc
lahf
pop
mov
and
shr
cmp
(bad)
stos
rcl
pop
test
sbb
jmp
push
jmp
xchg
data16
ins
and
popa
xor
push
jge
jmp
sar
addr16
adc
in
jmp
jg
push
int3
adc
loope
push
outs
pop
dec
mov
xchg
cdq
lods
cwde
jb
sub
imul
jnp
(bad)
push
imul
in
movs
es
jnp
cmc
call
sti
push
mov
loopne
jmp
jle
dec
scas
mov
les
or
cld
adc
mov
ret
je
in
cmp
iret
jecxz
mov
inc
add
mov
mov
cli
jns
xchg
pop
xchg
or
addr16
pop
ret
hlt
in
out
(bad)
mov
xchg
or
xor
xchg
pop
push
push
mov
test
mov
cs
cmc
popf
inc
stos
in
movs
ins
fisttp
cdq
cmc
stos
fld
dec
mov
jb
es
mov
addr16
int
aad
adc
mov
dec
cmp
cmp
mov
movs
mov
adc
es
jl
lahf
jmp
jmp
sub
and
icebp
jae
pop
or
icebp
xchg
jge
les
mov
lea
pop
xor
pusha
and
cmp
clc
mov
pushf
imul
mov
mov
mov
dec
adc
pusha
popa
enter
cs
pop
xlat
hlt
adc
cli
pusha
les
fwait
xchg
fs
inc
xchg
pop
mov
aam
pusha
ret
jo
xchg
mov
mov
in
stos
add
jecxz
call
cmp
imul
push
cwde
mov
fild
leave
mov
les
adc
clc
add
fmul
sahf
aaa
dec
bound
mov
mov
call
repz
mov
popa
popf
lds
add
inc
mov
call
pop
dec
inc
cmp
cmps
mov
cld
sub
xor
sub
sub
and
retf
xchg
sbb
shr
xchg
popf
mov
(bad)
popf
dec
fldenv
mov
adc
jp
shl
outs
cmp
in
out
loopne
imul
in
and
adc
cmp
mov
shl
sbb
add
outs
mov
not
push
cmp
or
mov
cmc
cmp
ret
jo
jmp
xor
and
fsubr
push
cmps
ins
sahf
leave
stos
cmp
mov
mov
repz
push
outs
push
xchg
retf
leave
push
xor
add
out
and
ret
clc
adc
jl
adc
xor
mov
das
out
fld
sbb
xchg
xchg
mov
or
data16
mov
or
and
outs
xchg
inc
(bad)
dec
stos
mov
xor
lock
add
mov
sbb
sub
push
outs
lods
stc
mov
mov
loope
aas
loope
xadd
hlt
pusha
cs
sbb
bound
gs
clc
cmc
in
cmc
cmp
xor
sub
pop
jge
push
xor
push
test
sbb
push
pop
popa
cmp
(bad)
and
mov
sub
add
cmp
shl
stos
sbb
test
push
test
jae
(bad)
dec
or
jg
sub
and
fnstsw
(bad)
xchg
repz
addr16
xchg
or
icebp
call
out
push
push
fwait
jle
dec
push
jl
stos
sub
out
jb
xor
jae
dec
pop
xor
jno
imul
adc
jno
pop
push
pop
std
(bad)
in
cwde
test
pop
cmp
imul
rcr
xchg
sub
shl
sti
rol
retf
ret
daa
or
aaa
mov
push
fstp
ins
dec
push
movs
clc
inc
xor
lock
or
cmps
cmp
cli
cmps
mov
jae
jle
nop
mov
aad
cli
sbb
or
fs
stos
add
out
push
mov
fdivr
pop
add
sub
or
push
mov
mov
cmc
xor
shl
jg
inc
pop
sbb
jecxz
test
mov
stos
mov
shl
mov
jle
sub
and
into
xchg
jp
xchg
jmp
xchg
mov
rcl
push
test
sti
cmp
xchg
out
sub
or
inc
std
(bad)
pop
pop
cmp
retf
xor
retw
pusha
push
leave
fild
fwait
add
ror
js
repz
sbb
shl
(bad)
addr16
mov
and
dec
sbb
in
imul
test
dec
das
fist
dec
and
fxch
mov
mov
ret
xchg
and
cli
js
int3
(bad)
mov
je
jno
inc
sbb
jmp
repz
inc
or
out
jg
cwde
repz
scas
addr16
sbb
mov
je
jmp
mov
xchg
pop
cdq
mov
popa
cld
dec
adc
daa
aas
xor
mov
cs
cld
jp
xchg
cmps
push
push
pusha
repz
daa
adc
dec
fsubr
imul
stc
xor
cs
pop
or
xor
mov
xor
int3
xchg
sbb
jl
test
mov
sti
loope
hlt
loope
aaa
nop
das
cli
mov
inc
fild
scas
jns
cld
fld
xor
and
jecxz
xor
mov
scas
mov
enter
int
mov
xor
sti
add
push
mov
push
repnz
xlat
out
test
cmp
fcom
pushf
pop
cmps
sbb
inc
jne
xchg
stos
mov
jl
outs
cmps
das
fs
push
push
push
mov
ss
mov
in
mov
adc
or
daa
into
loope
cmp
hlt
stos
aad
jp
push
adc
add
(bad)
fsubr
es
into
mov
jns
aaa
int3
jge
sbb
push
rcr
and
cmp
xlat
mov
pusha
push
push
data16
mov
ja
push
loopne
push
neg
inc
hlt
xor
imul
or
iret
jl
adc
inc
(bad)
mov
nop
xchg
xchg
clc
test
lock
lods
fidivr
test
mov
cld
pmaxsw
xchg
nop
stc
sti
(bad)
inc
arpl
jns
pushf
int
adc
sub
dec
or
jmp
push
mov
data16
aam
sub
ret
xchg
mov
pusha
cmps
jle
popa
adc
xor
mov
adc
mov
ja
and
out
ret
scas
mul
icebp
sar
movs
cmp
xor
dec
xchg
inc
or
cld
int
or
mov
xchg
add
clc
sti
or
xchg
stos
data16
shl
pop
fs
cdq
or
popa
mov
out
pusha
retf
lods
gs
(bad)
or
stos
add
cmp
fdiv
out
mov
mov
or
popf
xchg
inc
sar
push
aam
movs
dec
push
js
jns
mov
ret
mov
and
push
jge
pop
dec
out
sahf
fbld
xchg
fwait
dec
shr
addr16
adc
add
push
(bad)
dec
sub
cmp
movs
ret
ss
cmps
pop
aam
dec
mov
shl
jmp
lahf
jl
iret
int3
jecxz
aad
(bad)
dec
sbb
movs
in
xchg
jae
arpl
push
sahf
cmp
mov
test
hlt
pop
sub
add
lods
aas
and
pop
ins
(bad)
cdq
loopne
sbb
cld
xchg
pop
push
push
repz
js
mov
clc
cmps
push
mov
and
cdq
xor
or
xor
loopne
loop
ins
cmp
jo
dec
xchg
cmc
pop
pop
outs
or
push
popa
pop
pushf
lods
push
pop
in
movs
retf
mov
aaa
xchg
xor
ja
xchg
mov
and
popa
sub
cs
jo
in
scas
test
lea
shr
adc
enter
bound
sub
scas
and
fimul
cld
lock
js
or
hlt
std
jmp
stos
jae
fbstp
sbb
adc
push
fwait
sub
jmp
stc
cmps
movs
mov
cwde
mov
sbb
push
in
iret
ins
retf
push
retf
push
sbb
sub
mov
(bad)
imul
rol
lds
push
xchg
sbb
outs
idiv
sar
lods
push
push
mov
or
jle
sub
mov
xchg
dec
dec
inc
ds
outs
jg
sub
pop
inc
push
jne
lods
pusha
in
mov
sbb
or
xchg
mov
or
ins
xchg
movs
outs
adc
mov
mov
stos
jmp
fucomi
sub
lea
pop
dec
test
iret
ror
ja
cs
mov
mov
xor
cmp
in
call
mov
jge
aad
add
jl
icebp
pusha
ror
cmc
push
xchg
daa
adc
cmp
std
dec
mov
xchg
sub
cmc
inc
xchg
adc
js
jle
or
mov
cli
idiv
xor
hlt
mov
push
mov
lea
push
jge
repz
and
stos
fst
mov
outs
out
push
(bad)
jg
mov
pop
mov
xor
out
clc
fcom
pop
pop
mov
push
xchg
xchg
das
xor
fisub
mov
xor
cmps
cmp
mov
mov
add
push
sbb
ret
hlt
cld
movs
stos
adc
inc
movs
fmul
pop
fs
push
sar
pusha
outs
jp
mov
lahf
xchg
adc
jo
jnp
bound
xchg
cmp
lahf
mov
cmp
arpl
test
or
jge
sahf
inc
outs
cmc
xor
mov
sbb
cmp
aam
mov
loop
jne
pop
mov
xchg
pop
imul
jnp
(bad)
lds
(bad)
fiadd
mov
pop
sbb
mov
(bad)
dec
int
cmp
icebp
int3
sub
shl
cmp
sub
inc
pop
pop
ror
push
and
fsubr
inc
ins
mov
pop
inc
cwde
pop
mov
in
inc
sub
retf
pop
push
inc
mov
mov
adc
outs
mov
jb
dec
pop
fbld
hlt
inc
jmp
cmp
mov
dec
shr
call
inc
sub
hlt
push
push
das
mov
pop
mov
adc
sub
gs
add
add
lods
inc
add
std
push
jmp
xchg
int
jno
cmp
sub
jns
jns
ffree
mov
jmp
xor
adc
and
mov
mov
dec
cwde
jl
js
adc
aas
std
retf
in
ficom
cmp
aaa
push
pop
sbb
pushf
adc
je
dec
int3
mul
or
xchg
jb
push
cmp
scas
test
ss
ins
rcr
sub
add
(bad)
int
cmp
push
in
arpl
call
movs
push
shr
sbb
cmp
neg
push
cmp
iret
push
stc
sub
stos
adc
rol
push
xor
adc
cdq
sbb
loopne
pop
mov
xchg
loope
and
adc
xchg
fst
es
stos
inc
xor
pop
ja
test
sbb
fidiv
pushf
cmc
out
mov
mov
adc
adc
fcomp
inc
pop
(bad)
hlt
test
sbb
xchg
daa
inc
jl
adc
mov
fucomp
js
adc
sbb
lods
xchg
cmp
sub
das
ror
jg
lock
lock
int
pop
sahf
imul
inc
sub
fild
adc
mov
mov
jne
xor
adc
pop
jae
retf
lock
bound
xchg
clc
out
ja
stc
aas
mov
dec
add
and
int3
enter
jle
imul
sbb
les
mov
pushf
cs
ror
cmp
sub
and
mov
dec
push
pop
scas
lods
xor
inc
jmp
xor
mov
jns
in
or
(bad)
retf
cs
out
jmp
sbb
sub
cmp
cwde
int
mov
aas
and
nop
and
mov
gs
sbb
mov
xor
(bad)
fmul
or
shr
mov
xchg
dec
xor
sub
lods
ret
and
jae
mov
sbb
xchg
pop
(bad)
mov
loope
push
cmp
xchg
mov
jb
mov
cmp
lods
jge
mov
mov
sub
call
out
and
(bad)
in
loopne
int
cmp
jp
mov
loopne
pop
dec
nop
fwait
mov
dec
dec
fcom
test
pop
xchg
frstor
sub
adc
and
hlt
mov
jo
lods
mov
fisubr
jecxz
and
jp
jmp
mov
mov
jne
xor
xchg
icebp
add
jae
(bad)
mov
js
and
sti
shl
aas
(bad)
jne
add
sub
cs
xor
out
fmul
repz
loop
jnp
inc
jbe
pusha
xchg
push
addr16
jnp
sbb
mov
xchg
dec
sub
rol
mov
addr16
ss
xor
sbb
xchg
popf
je
pop
adc
sti
gs
pop
imul
jne
jl
push
add
cmp
push
stc
mov
in
lahf
jmp
imul
add
(bad)
outs
(bad)
stos
movs
into
rol
cld
pop
out
scas
mov
mov
push
and
mov
shl
sti
add
xor
pop
sbb
mov
cmps
lods
adc
push
jmp
sbb
shr
push
sar
sbb
(bad)
jne
cmps
out
and
xor
addr16
out
lods
imul
ds
adc
call
jb
adc
cmc
or
stc
lods
jne
(bad)
imul
jb
cmc
test
inc
out
imul
clc
cmp
mov
lods
cwde
leave
es
xor
inc
jle
cmp
adc
jae
lods
pop
sub
sub
enter
pusha
xor
jp
xchg
dec
mov
stc
lahf
arpl
xchg
(bad)
xchg
cmp
sar
xchg
mov
loopne
cmp
sar
and
ret
mov
dec
aam
loop
cmp
adc
movs
sub
jmp
jge
dec
xchg
jb
sbb
adc
in
sti
outs
or
adc
popa
lahf
push
inc
mov
inc
lods
sbb
in
ins
test
sbb
sbb
icebp
jmp
mov
sbb
pop
std
xchg
int3
mov
pop
std
fwait
sahf
push
xchg
(bad)
mov
cmp
and
data16
enter
call
loopne
pop
daa
div
pop
or
mov
jns
lds
inc
imul
stc
sbb
popf
ja
pop
repz
push
outs
xchg
mov
or
xor
pop
out
xchg
cmc
jle
xchg
stos
xchg
icebp
loope
jae
movs
test
retf
sbb
cld
call
sub
dec
and
push
(bad)
mov
clc
test
cmp
and
loop
lods
imul
xor
dec
xchg
es
loopne
dec
jno
das
inc
mov
mov
ret
call
ins
push
das
jle
in
enter
ret
push
inc
cmp
adc
xor
mov
xchg
cmp
xchg
and
int3
les
nop
ins
pop
into
jp
test
xchg
mov
out
cmp
mov
fwait
xchg
in
repz
rol
lea
cmp
xchg
push
mov
stos
int3
inc
sar
xchg
nop
(bad)
push
mov
xchg
adc
sub
call
jbe
mov
xor
pop
mov
nop
push
cmp
not
inc
pop
stos
stc
imul
inc
mov
sub
push
and
cmp
loopne
sub
cmc
iret
xchg
xchg
dec
rcr
add
add
in
push
mov
adc
pop
mov
push
je
add
add
xor
mov
pushf
stos
xchg
mov
mov
stos
jno
mov
sahf
xor
addr16
in
outs
lock
xor
scas
sub
adc
sbb
loope
push
lods
jnp
jge
adc
ds
(bad)
bnd
push
out
test
in
jne
jne
test
data16
scas
mov
fldcw
mov
mov
jae
and
push
sti
mov
and
pusha
xor
inc
jae
clc
popf
into
sub
cdq
out
mov
in
mov
dec
cmp
cmp
xor
sbb
pop
cwde
pop
dec
or
xchg
cmp
xchg
mov
aas
dec
push
xchg
push
push
add
ror
bound
cmp
xor
nop
mov
sub
pusha
push
imul
cld
ja
aad
pushf
sub
(bad)
hlt
sbb
mov
mov
inc
call
cmp
or
sbb
out
ins
add
lods
in
rcl
add
ror
jne
in
shr
or
xchg
adc
js
jecxz
data16
cmps
jmp
xor
sub
cmp
xchg
sbb
mov
or
jno
cmp
mov
in
adc
pop
push
out
push
xchg
pop
aaa
bound
ret
call
movs
or
test
push
sub
dec
jmp
cmp
ins
retf
jmp
ret
mov
stos
push
sbb
rcl
and
test
jmp
je
out
mov
cmp
mov
inc
cmp
daa
jp
int3
lahf
mov
nop
jns
mov
hlt
dec
cmps
xor
rcr
pop
mov
xchg
push
jg
arpl
aad
hlt
out
push
int3
test
fbld
xlat
and
data16
xchg
stos
addr16
ret
push
shl
push
mov
push
fdivr
xchg
mov
test
les
push
mov
xchg
jns
push
jnp
mov
test
fucomip
jae
test
(bad)
arpl
stc
jno
push
mov
fild
les
jmp
inc
xchg
push
pop
mov
push
and
sub
sbb
popf
je
xor
cmp
jbe
xchg
pop
test
mov
fwait
mov
pop
adc
or
push
add
push
mov
std
cli
bswap
pusha
inc
inc
jmp
mul
xlat
cld
or
into
push
test
rcl
mov
pop
imul
push
xor
mov
stos
ret
cmp
les
sub
les
sbb
rol
das
mov
jle
push
std
mov
pop
cmps
dec
lods
retf
repz
sbb
stos
push
idiv
and
xchg
(bad)
sub
lods
and
das
push
and
cmp
icebp
push
int3
sbb
int
stos
sub
cmps
push
(bad)
push
std
mov
fild
inc
mov
imul
sti
test
adc
aam
pop
sbb
xor
inc
ret
movs
mov
xor
fld
xchg
xchg
cwde
jmp
mov
push
xlat
xchg
push
dec
xchg
adc
cmp
xchg
or
xchg
test
xor
jge
inc
repz
mov
lods
mov
cmp
adc
cld
sbb
add
lods
adc
je
lahf
fisttp
jl
icebp
js
div
hlt
inc
ret
mov
push
mul
retf
sbb
pop
rol
jg
out
frstor
leave
les
pop
f2xm1
pop
cmp
shl
lods
cmp
lods
test
adc
push
dec
mov
mov
cs
xchg
lods
jg
std
push
sar
sbb
sahf
xchg
jle
add
aam
test
mov
cmps
fs
in
sub
test
shl
stos
pop
mov
imul
fimul
hlt
in
xchg
mov
cmp
loope
sbb
pushf
cmp
jno
xchg
xor
mov
test
jmp
bound
dec
fidivr
adc
cwde
mov
aam
mov
cmp
sti
leave
sub
mov
or
in
sbb
jo
fsub
popa
stc
sub
mov
mov
adc
add
cdq
mov
repz
test
push
lods
iret
in
sbb
push
pop
stos
mov
or
mov
cld
dec
jno
dec
es
jo
lds
mul
or
rol
mov
rol
cld
cli
mov
push
lock
xchg
fnstcw
xchg
pop
mov
mov
push
pop
test
push
pop
mov
inc
mov
jno
ins
xchg
addr16
data16
push
mov
popa
jae
and
xchg
out
xchg
(bad)
mov
in
(bad)
xlat
mov
or
cmps
into
retf
mov
or
dec
loope
jmp
jb
push
pop
xlat
jge
stc
cmp
aad
scas
in
cmp
(bad)
xchg
ret
mov
xchg
out
pop
mov
jne
push
cmp
es
js
and
aad
mov
dec
jle
stos
inc
js
jne
(bad)
xchg
xchg
sahf
adc
dec
sub
div
rcr
jl
call
push
xchg
push
add
lods
inc
push
loopne
and
xchg
inc
add
test
xchg
dec
dec
out
sbb
fadd
and
sar
fwait
shr
mov
sbb
js
mov
push
adc
stos
retf
retf
inc
cld
dec
adc
std
xor
test
dec
sub
je
jbe
dec
not
fucomp
pop
mov
movs
fsub
add
loopne
stc
out
js
xchg
jbe
data16
adc
cmp
scas
sub
mov
and
mov
stos
cs
cmc
xor
sub
retf
call
jo
cwde
ficom
out
test
mov
pop
sub
mov
dec
not
adc
addr16
out
pop
ret
fs
sub
es
mov
mov
jp
or
or
cmp
mov
call
xor
cmp
mov
mov
adc
aam
push
test
mov
xchg
pop
mov
stos
lea
out
add
(bad)
fstp
dec
cmp
push
(bad)
dec
and
imul
hlt
andps
test
jp
repz
cmp
in
js
xor
push
test
push
jnp
out
icebp
push
and
pop
mov
sbb
stos
fnop
inc
mov
clc
daa
sub
mov
arpl
or
cmp
mov
je
outs
fsubr
jne
push
mov
in
or
fmulp
jmp
(bad)
call
dec
and
call
push
je
cmc
call
xchg
cmp
adc
ds
xchg
in
cmp
jmp
jecxz
je
or
mov
repnz
jne
sbb
(bad)
in
sbb
cmps
in
or
jmp
scas
cmp
pop
cmc
xor
gs
cmp
xchg
jbe
fst
shl
xchg
mov
fcom
out
jg
or
and
int
in
js
sub
rcr
js
xchg
sbb
xchg
es
mov
sub
in
mov
sahf
adc
ret
cs
sbb
(bad)
cmp
in
inc
in
out
ins
inc
aam
cmp
xchg
je
jo
jg
sub
ss
sbb
jge
in
stos
jle
sar
dec
xor
sbb
ror
(bad)
es
push
test
xor
pop
in
cdq
mov
xor
arpl
pop
xor
ficom
loopne
fld
out
loop
pop
sbb
add
jns
int3
add
jl
ffreep
dec
mov
aas
es
and
mov
xor
data16
sbb
loop
test
test
cli
je
sub
movs
std
cmp
retf
or
and
rol
adc
out
cmc
dec
xor
xchg
test
adc
push
test
xchg
movs
push
outs
nop
(bad)
idiv
fisttp
pop
inc
neg
aas
aam
push
nop
sti
imul
jle
mov
call
ss
fldenv
fs
ins
push
pop
idiv
cmc
fist
xchg
daa
fldcw
add
pop
mov
fwait
adc
shl
shl
mov
xor
fisub
mov
sbb
inc
or
cs
xchg
retf
iret
pop
sbb
sahf
cmp
lods
fisub
rol
jmp
jg
bnd
xor
gs
stos
jnp
xchg
sar
je
in
xchg
dec
loopne
fidiv
sbb
xor
out
outs
adc
pop
dec
int3
fld
mov
sbb
cwde
inc
dec
push
aad
jne
sub
test
fisttp
xlat
add
ret
or
in
sbb
je
ror
mov
rcl
pop
nop
bound
ins
mov
js
lock
cs
int
test
xor
jae
mov
sbb
cmc
pop
js
cmps
stc
outs
es
pop
(bad)
pop
jo
xchg
es
inc
ds
sub
inc
jp
mov
mov
out
test
aas
lds
in
clc
mov
mov
mov
repnz
rcr
lods
mov
test
outs
fdiv
xchg
adc
mov
hlt
xchg
das
xor
or
xor
call
push
add
xchg
mov
xor
cs
ja
pop
fstp
cmp
stos
inc
in
mov
xchg
mov
les
sbb
push
add
ss
lea
div
mov
(bad)
jge
xchg
out
sar
and
jge
xchg
fs
ror
xchg
or
sti
dec
sbb
jl
(bad)
imul
icebp
cli
mov
(bad)
lea
sub
push
mov
test
or
xchg
nop
and
push
xchg
xor
mov
je
cmc
add
and
fwait
mul
jne
test
or
loopne
pop
adc
arpl
out
ins
push
push
jno
push
add
test
rol
xchg
or
out
enter
mov
out
dec
pop
out
pop
outs
sub
dec
bound
mov
mov
imul
or
js
je
sbb
inc
xchg
pop
sub
sbb
std
push
adc
xchg
sbb
jge
sbb
xchg
push
(bad)
mov
push
addr16
ftst
test
test
rol
sbb
mov
shl
jmp
and
lods
in
loope
fiadd
xchg
fnsave
jecxz
sbb
leave
add
arpl
inc
popf
dec
cmp
fisttp
loopne
jmp
adc
xchg
leave
dec
retf
push
cmc
pop
fild
int
js
hlt
dec
jg
add
imul
rol
add
loope
dec
add
loope
addr16
cmp
cmp
punpckldq
mov
test
push
sbb
and
pop
add
push
lock
fld
push
fwait
pop
push
push
cmps
mov
sbb
je
movs
xchg
ins
gs
add
int
(bad)
shl
and
out
daa
sub
sbb
jecxz
dec
mov
test
adc
mov
fistp
(bad)
les
jle
fild
xchg
repnz
icebp
sbb
fs
adc
in
xchg
add
jmp
mov
pop
xchg
rcl
adc
and
mov
and
repz
add
or
and
mov
loope
jo
out
jae
outs
mov
mov
pop
jecxz
inc
dec
test
mov
push
popf
sub
push
xchg
dec
xor
cdq
jo
jge
int
sub
xchg
or
adc
fmul
outs
scas
adc
adc
ffreep
fsubr
push
xor
and
cvtdq2ps
xchg
mov
push
loopne
push
out
aad
mov
adc
adc
inc
or
call
add
jne
fs
dec
xchg
xchg
cdq
adc
in
cdq
mov
xlat
data16
int3
aas
cli
cs
dec
cmp
ret
pop
cmp
cmp
ins
sbb
into
xor
pop
jl
addr16
and
inc
mov
jp
cmc
out
cld
and
mov
cs
rol
jp
adc
es
sti
cs
test
cld
(bad)
movs
ret
invlpg
mov
pop
jge
das
inc
js
cmc
adc
rcr
xor
pop
fmulp
add
test
jle
and
or
or
add
cmp
and
test
push
dec
xor
mov
xchg
mov
mov
push
dec
lahf
lods
mov
and
or
fsubr
mov
stos
int
cmp
js
enter
jnp
int
fldenv
fdivr
sub
icebp
lds
les
popf
xor
rol
push
mov
jns
xchg
lahf
cmp
icebp
nop
dec
aam
imul
adc
or
loopne
jne
or
test
sub
jnp
ficom
aad
mov
frstor
xchg
ss
cwde
inc
sub
mov
push
div
pop
sahf
adc
push
cli
pop
sub
xor
mov
repnz
sub
pop
add
mov
add
push
das
mov
leave
pop
and
cmp
jbe
mov
and
test
mov
call
test
cmp
mov
cmp
add
js
dec
movs
mov
mov
and
sbb
jne
not
adc
out
cmc
aam
cmp
ret
shl
push
cmp
jo
(bad)
sub
and
movs
pop
into
mov
fadd
dec
js
xchg
test
stos
ret
iret
xor
test
cld
out
cld
or
mov
jae
repnz
cmp
mov
xlat
pop
sub
shr
(bad)
mov
lea
dec
push
mov
idiv
and
xor
or
or
ret
gs
mov
xchg
cli
add
pop
push
stos
test
push
adc
loopne
fisub
ret
mov
in
movs
out
lea
sbb
stos
(bad)
push
aas
mov
ins
arpl
push
cs
jo
in
xchg
sahf
cmp
mov
push
jp
mov
push
and
xchg
or
lods
rcl
cmp
ins
jbe
lock
repz
and
xchg
adc
ins
fstp
sub
jnp
push
sbb
dec
cmps
xchg
cmp
adc
xchg
es
inc
xchg
xchg
add
fcomp
dec
dec
cmc
xor
idiv
mov
aad
and
and
dec
aas
jo
repz
cmp
xor
ret
sub
iret
sbb
or
loop
lods
mov
add
xor
clc
mov
mov
cmp
shl
ret
mov
mov
fild
aad
lahf
mov
fistp
pushf
xchg
aas
iret
aad
push
sub
in
fsub
jl
retf
pop
les
cld
fs
push
jge
jb
fwait
push
pop
dec
sbb
loop
xchg
icebp
and
xor
(bad)
inc
mov
cmp
mov
inc
mov
xchg
pop
mov
call
lods
test
mov
shl
in
xchg
add
jl
(bad)
cmp
dec
iret
stos
and
push
mov
sbb
hlt
fiadd
cmc
dec
div
xchg
out
or
push
xor
ror
sbb
inc
and
mov
in
sahf
js
xor
pop
xor
(bad)
rcl
lock
xchg
dec
ss
xchg
jne
xor
push
jl
xchg
sub
cld
dec
les
fst
jg
js
and
cdq
in
jmp
pop
xchg
ins
ret
jg
pop
inc
cmp
xor
movs
mov
fst
xchg
outs
pop
xchg
mov
cmp
xchg
fsub
sar
mov
out
push
jmp
sub
shl
xor
cld
sahf
fs
pusha
stos
test
cs
sbb
(bad)
call
xor
mov
jg
loopne
fild
aas
push
lods
xor
lods
sbb
int3
out
inc
cmp
sub
pop
cli
xor
mov
daa
and
(bad)
push
mov
test
cmp
js
(bad)
scas
test
into
pop
ds
inc
and
jg
ror
ins
pop
sub
lds
mov
fs
retf
into
sar
inc
sub
dec
lods
adc
daa
jae
cmp
dec
xchg
ror
xor
ins
xchg
cmps
in
xchg
neg
mov
sahf
and
mov
mov
ror
fdiv
data16
sub
add
cmp
xchg
pop
scas
mov
bound
dec
pop
sar
mov
sub
arpl
mov
js
(bad)
push
sbb
jle
outs
js
mov
jne
(bad)
mov
sub
inc
mov
jo
mov
int3
test
popa
cmp
cmp
mov
pop
cmps
test
xchg
ins
pop
rcl
mov
imul
mov
cmp
dec
xchg
rcl
iret
mov
stc
ins
mov
or
out
mov
jmp
jg
push
icebp
popf
push
add
pusha
out
addr16
mov
cli
pusha
out
ret
cmc
inc
loop
mov
(bad)
lock
inc
pop
test
sub
push
mov
sti
dec
mov
xor
pop
mov
daa
icebp
cmc
(bad)
(bad)
adc
cmp
push
fstp
mov
test
fdiv
inc
rol
test
stos
or
push
and
inc
js
xor
mov
(bad)
cmp
int
(bad)
imul
fst
add
mov
dec
inc
mov
mov
das
xchg
(bad)
mov
jbe
lds
inc
mov
cwde
fld
mov
mov
or
add
outs
xchg
out
fisttp
jnp
stc
add
add
imul
test
dec
test
fsubr
sar
dec
mov
repz
or
div
xchg
js
jle
sti
int
jne
push
sbb
ds
push
cmp
mov
jmp
lea
pusha
sti
xor
test
pop
inc
mov
nop
outs
xor
pop
adc
push
sub
and
ret
or
push
jp
or
je
mov
push
mov
aam
jbe
mov
adc
sbb
fimul
sti
test
sbb
xchg
aam
scas
adc
fst
push
aam
mov
in
pusha
adc
jae
retf
pop
pop
mov
movs
push
push
test
cmp
js
jl
push
adc
data16
fcomip
mov
xchg
jecxz
lds
fs
xchg
jp
mov
es
inc
jmp
ret
pop
shr
hlt
popa
call
mov
stos
das
xchg
es
sbb
jnp
xlat
mov
push
xchg
add
jae
dec
mov
push
jge
call
inc
push
sar
xchg
or
xchg
dec
and
(bad)
(bad)
test
loop
cmp
shr
jmp
into
sbb
popf
adc
mov
test
js
rol
push
pop
int3
xchg
or
adc
in
hlt
and
mov
pop
sbb
push
out
stos
jge
js
jle
xchg
inc
out
pop
dec
scas
out
lock
cmp
stos
sbb
jnp
cs
sub
or
xor
stos
out
pop
out
test
push
push
pop
xchg
xchg
addr16
test
xor
out
jne
bound
mov
jo
xor
popa
xor
sar
jecxz
xor
ret
xchg
cld
aas
sbb
adc
out
mov
mov
mov
or
mov
icebp
aas
sub
mov
std
sub
cs
bnd
mov
pop
je
hlt
data16
daa
push
cmc
xor
and
cmp
mov
mov
inc
mov
mov
iret
mov
pop
dec
xchg
dec
mov
mov
jge
(bad)
imul
xchg
sub
shr
xor
and
sbb
cmp
and
mov
sub
push
xchg
neg
popf
dec
pop
in
pop
mov
lock
cmp
xchg
jo
das
lock
pop
jp
mov
fwait
mov
dec
xchg
cdq
sbb
sub
and
in
es
imul
stc
mov
push
xchg
xchg
sbb
in
rcl
scas
ret
out
in
adc
xor
xchg
xor
iret
in
jae
out
test
mov
xor
push
in
jnp
ja
das
jb
icebp
jmp
arpl
(bad)
out
pop
sbb
xor
adc
push
push
rdseed
ja
and
sbb
jle
xchg
xor
out
jl
xchg
sbb
xor
push
add
push
or
mov
lock
inc
in
in
nop
cmp
rol
ficomp
jmp
jp
sbb
fs
cmp
mov
xchg
push
pop
inc
(bad)
mov
jae
in
xor
sub
push
cmps
test
clc
in
jne
popf
mov
xor
call
int
dec
push
repnz
loopne
fnstsw
daa
xchg
sub
imul
fist
sub
xchg
int
push
leave
lea
dec
adc
scas
ins
jg
dec
adc
push
push
imul
ret
push
cwde
std
adc
sbb
jmp
movs
rol
jecxz
rcr
pop
mov
mov
mov
and
pop
mov
(bad)
cmp
in
repz
cmps
int
mov
xchg
ins
sbb
lea
test
loop
adc
sbb
pop
test
sub
rol
and
daa
scas
jp
jg
popf
jbe
outs
call
xchg
dec
inc
stc
out
xor
xor
cmp
xchg
ret
mov
push
movs
xchg
lds
(bad)
loope
fist
sbb
imul
lea
scas
xchg
fsubrp
(bad)
rcr
in
(bad)
jp
test
arpl
enter
xchg
imul
jle
push
loope
add
cli
and
mov
xor
sub
fsub
jl
mov
ins
rcl
add
sbb
pop
jae
shl
and
bound
jecxz
push
jmp
cld
rcl
push
fmul
data16
es
adc
mov
jns
adc
(bad)
xor
sub
jne
or
hlt
clc
nop
push
push
cmp
iret
in
push
or
cmps
adc
inc
push
(bad)
test
mov
jmp
xchg
xor
pop
inc
out
cmps
int3
mov
pusha
call
mov
fadd
pop
ret
push
inc
xchg
test
repnz
popa
and
xchg
ret
mov
xor
sbb
ret
mov
jmp
imul
scas
sti
jmp
jne
lea
jg
(bad)
aas
adc
icebp
mov
lods
fwait
mov
sub
adc
cmps
fst
sub
stc
daa
or
xor
pusha
out
mov
push
jmp
inc
out
out
fsubr
dec
dec
int3
add
sbb
xor
in
jne
movs
pop
push
and
stos
out
xchg
inc
xchg
out
imul
push
ror
push
movs
inc
xor
adc
xchg
mov
mov
in
(bad)
repz
xchg
test
ror
mov
outs
sahf
xchg
inc
adc
cmc
je
adc
sbb
mov
mov
cmps
push
(bad)
push
mov
pop
push
sahf
in
lock
or
pop
cmps
xchg
dec
or
bound
ja
sub
pop
fwait
fwait
ds
sub
jno
daa
push
test
push
ss
xchg
pushf
ja
cmp
dec
mov
icebp
jmp
and
jle
dec
movs
jg
and
sti
inc
xor
push
pop
mov
into
(bad)
pop
jnp
sub
add
repz
movs
adc
aad
cmp
cmp
jb
imul
adc
sub
js
movs
mov
and
mov
fstp
push
and
sbb
cmp
add
add
adc
retf
sub
in
cmp
into
cmp
pop
cmp
daa
adc
out
cld
inc
iret
jae
sub
mov
fdiv
mov
ret
cmp
in
jmp
jnp
cmps
outs
jno
mov
pop
pop
xchg
push
sar
cmp
mov
or
jne
inc
mov
push
sahf
in
sbb
ss
(bad)
sbb
sar
popa
(bad)
cli
iret
hlt
or
in
mov
and
jp
rol
sbb
outs
repz
clc
mov
push
dec
mov
xor
xchg
shl
fwait
xlat
sahf
sar
cld
jmp
cld
leave
mov
or
aaa
pop
or
add
ins
lea
imul
mov
data16
cmp
in
ret
inc
stos
cmp
mov
xor
(bad)
dec
idiv
xchg
add
lds
sub
movs
stc
bound
fsub
mov
stos
cmp
mov
and
stc
sub
inc
jecxz
imul
bound
in
pop
popa
xchg
daa
inc
sbb
addr16
xchg
popa
push
mov
and
mov
dec
cli
ins
adc
dec
imul
mov
add
(bad)
fdiv
cli
je
mov
and
je
adc
shl
pop
cs
mov
adc
mov
stos
dec
lock
mov
add
jmp
pop
pop
nop
lods
pop
jo
and
cmp
movd
ret
aad
add
cmp
dec
mov
cmp
inc
loopne
xchg
xor
sbb
xchg
xchg
fist
icebp
rol
pop
mov
sbb
popa
data16
fs
sub
repz
(bad)
test
add
pop
cmp
scas
cmps
(bad)
addr16
inc
in
icebp
jo
pop
int3
pushf
and
jae
push
xchg
movhps
jecxz
lahf
fcmove
inc
cmp
ret
xchg
cld
jb
and
ret
popf
and
dec
aad
cmp
(bad)
jne
daa
push
shl
jae
test
aad
xchg
xchg
sub
sbb
jnp
mov
repz
mov
xor
fstp
aad
sub
loop
pusha
int3
inc
or
out
add
pop
ds
xchg
je
loope
inc
push
jns
dec
movs
jg
mov
add
and
xchg
aas
sbb
js
iret
ror
(bad)
(bad)
in
sub
inc
jl
push
std
mov
call
cmp
pop
vmulpd
fcomi
xor
push
(bad)
xlat
daa
push
call
or
shl
mov
xchg
sti
adc
fs
sbb
iret
add
lahf
mov
(bad)
xor
in
jns
cdq
push
dec
std
(bad)
xchg
and
xchg
sahf
xor
stos
nop
add
jecxz
int
adc
daa
int3
jg
or
lea
dec
and
push
sar
ins
xchg
pop
push
cmp
or
jecxz
sub
fist
xor
jo
jg
mov
aam
xchg
neg
bound
cmc
inc
or
cld
xchg
inc
xchg
and
sbb
add
mov
xchg
arpl
retf
jns
or
icebp
mov
int
sub
(bad)
(bad)
jmp
ret
push
fiadd
xor
mov
xchg
push
jns
fcmovb
push
adc
xchg
test
jg
test
sbb
aas
mov
jg
loopne
push
mov
(bad)
adc
ins
cs
in
xchg
daa
cmc
jmp
jp
xchg
loop
and
pop
xor
mov
lea
cld
das
pop
xchg
test
repz
and
mov
xor
mov
add
mov
sbb
in
mov
push
lods
out
retf
xchg
cli
xchg
xor
adc
js
sub
jns
dec
sbb
add
pop
push
push
push
and
xchg
jmp
xchg
mov
xchg
jnp
js
or
xor
lods
hlt
repz
sub
mov
jne
test
cwde
cmc
in
or
fs
stos
xchg
mov
dec
push
sbb
ds
and
jecxz
out
cmp
xchg
add
cmp
test
jp
add
ss
leave
lods
push
jl
adc
push
pop
mov
pushf
xor
or
xchg
pop
sar
add
add
iret
movs
push
pop
dec
std
repnz
dec
rcr
inc
xor
outs
jge
call
in
int3
xchg
jp
ret
cwde
call
frstor
icebp
js
add
in
les
lahf
loope
jno
pop
xor
push
add
jg
cmp
cld
inc
mov
mov
pop
pop
ret
hlt
or
pop
retf
loopne
cmp
inc
js
and
jp
pop
push
mul
daa
fwait
xlat
sub
into
sbb
(bad)
(bad)
mov
loope
dec
sub
sub
xor
sti
test
push
je
push
adc
inc
pop
mov
inc
add
stos
aas
lods
pusha
ror
loop
hlt
aam
mov
fs
repnz
jne
cmp
sub
fdiv
jp
test
call
jle
lods
hlt
stos
es
int3
mov
pop
fcmovu
xchg
cmps
pop
mov
int
push
push
movs
div
ror
sbb
std
adc
xchg
loope
call
cld
fidivr
clc
push
rol
frstor
(bad)
(bad)
cmp
pop
adc
add
cmps
adc
addr16
xchg
dec
ins
test
sub
adc
cdq
lea
(bad)
repz
ror
lods
jg
cmp
in
fdiv
mov
jle
jle
cmp
or
push
mov
stc
test
inc
dec
lock
arpl
aam
aas
xchg
shr
stos
leave
dec
jge
xchg
push
test
outs
in
mov
jns
xor
adc
movs
mov
dec
test
jae
pushf
push
pushf
adc
xchg
cmp
daa
in
mov
jl
outs
js
(bad)
jp
push
xor
add
aad
ins
dec
mov
pusha
popf
inc
daa
cmp
das
inc
sar
mov
sub
adc
divps
xchg
xchg
daa
dec
js
mov
lods
std
out
push
in
jnp
cmp
adc
cmc
mov
push
cmp
pop
cmp
inc
and
jmp
stc
push
push
cmp
in
mov
cdq
jbe
push
sar
adc
cmp
imul
adc
cmp
(bad)
fs
adc
jne
jno
add
cli
dec
xchg
jnp
mov
xchg
xchg
cmc
idiv
fnstcw
ret
test
cmps
iret
mov
xchg
lods
pusha
out
sub
mov
in
std
sub
mov
and
repnz
xchg
jo
sbb
pop
push
cs
add
fstp
xchg
mov
(bad)
and
mov
dec
xchg
sub
or
in
cmc
xlat
xchg
inc
xor
xchg
pop
push
cmp
xor
inc
stos
test
sbb
cmps
not
adc
(bad)
pop
mov
sbb
mov
clc
mov
loop
mov
xchg
pop
or
ret
lods
jnp
jle
sbb
push
out
cmp
rcr
movs
mov
pop
hlt
mov
jp
lods
dec
pushw
pop
stos
or
in
rcl
pop
cli
cmp
sub
popa
shl
jbe
jg
jmp
nop
xlat
lods
call
loopne
sub
sub
and
and
cmp
and
xchg
or
stos
movs
adc
adc
ret
mov
jo
mov
cmps
sub
push
mov
jp
fdiv
out
data16
sub
xor
addr16
dec
push
jo
inc
pop
enter
fcmovbe
pop
add
call
out
stos
dec
mov
mov
add
mov
pop
out
push
cmp
cmc
add
mov
das
movs
cwde
dec
fistp
dec
popa
fldenv
mov
jns
(bad)
jle
sub
outs
addr16
aad
je
test
jge
loop
leave
push
xchg
push
xchg
xor
movs
xchg
mov
(bad)
sbb
mov
and
push
es
sbb
gs
icebp
push
lock
ror
ret
xchg
or
xchg
push
shl
or
retf
xchg
or
inc
cmc
mov
js
dec
cmps
(bad)
mov
mov
cmp
cmp
mov
icebp
sub
or
js
jb
xchg
sbb
hlt
fcomp
mov
xchg
mov
jo
sahf
pop
xor
js
stc
in
xchg
mov
mov
scas
push
cmp
fdivr
xchg
pop
hlt
mov
dec
loopne
imul
mov
adc
sub
stos
(bad)
push
jp
adc
sbb
and
dec
pop
lds
mov
dec
test
add
cmp
push
pusha
rcl
xor
xchg
cli
or
dec
push
in
and
mov
jnp
sub
enter
loope
add
pop
push
rol
dec
mov
ins
add
jno
adc
dec
hlt
cli
(bad)
mov
push
dec
cli
xlat
inc
jbe
sti
jne
pop
in
push
mov
sbb
lods
dec
idiv
pop
imul
scas
retf
std
loop
pop
push
dec
fidiv
je
sub
push
and
xchg
out
or
icebp
cmps
(bad)
popa
das
rcl
hlt
aad
pop
push
ja
jmp
pop
popf
js
(bad)
into
xchg
test
sub
call
or
sti
xor
jmp
xchg
jmp
popf
mov
or
adc
push
ret
pop
ja
or
outs
(bad)
std
movs
ja
mov
test
sub
fs
jnp
cmp
xchg
test
and
rcl
in
push
cdq
repz
mov
jmp
mov
inc
cld
mov
mov
inc
js
sub
jle
xor
sub
(bad)
add
mov
mov
mov
imul
sbb
xor
jae
pop
int
inc
jmp
hlt
jmp
lods
mov
jp
sbb
jg
sub
lods
test
adc
pop
enter
pop
sub
jmp
xor
adc
imul
mov
sti
mov
adc
mov
gs
test
addr16
jle
push
xor
push
jae
int
cmp
pop
hlt
cdq
nop
add
push
mov
xchg
loop
sbb
(bad)
mov
mov
push
sbb
jae
aaa
repz
repnz
mov
push
in
dec
lods
fmul
xor
mov
and
clc
aad
sar
ret
xchg
add
inc
fisttp
mov
mov
mov
test
(bad)
leave
xchg
or
jo
and
and
cmps
les
push
call
fild
xor
mov
outs
xor
fwait
lahf
xor
mov
inc
dec
in
hlt
jo
loope
pop
cmp
nop
mov
rol
inc
stos
lea
mov
rcl
das
int
inc
xor
fidiv
sti
cmps
xor
cld
test
jb
sbb
cmc
push
sub
test
push
add
and
jle
cmps
sahf
pop
fimul
test
pop
div
pop
ins
fadd
movs
cld
or
call
or
sti
shl
leave
push
mov
cmp
jecxz
push
movs
aam
movs
push
adc
int
jns
fcomp
cmp
sbb
inc
outs
dec
xchg
lock
cmp
cmp
mov
test
ret
aaa
inc
dec
pop
mov
shl
fst
iret
push
push
jle
push
popf
mov
jns
aam
iret
int3
enter
xchg
mov
adc
cdq
arpl
inc
pop
mov
mov
mov
and
mov
outs
imul
mov
lock
mov
jne
(bad)
enter
cmps
mov
sbb
jne
push
test
push
mov
addr16
in
cmp
jns
call
out
fbld
fistp
cmc
dec
jns
fs
jb
and
or
fwait
inc
ins
hlt
scas
dec
cmp
xchg
xor
and
lods
add
sub
xchg
cmp
sbb
jnp
out
aas
jge
sub
mov
sub
in
lock
(bad)
clc
xchg
mov
xlat
pop
(bad)
jmp
ins
sub
cmp
push
xor
sub
or
dec
and
outs
adc
jns
sbb
movs
xchg
mov
pop
xor
mov
push
psubusw
out
jo
repnz
and
xchg
pop
inc
mov
sahf
retf
mov
int3
xlat
jns
mov
loope
cmp
push
or
aam
mov
xor
jo
push
pop
sub
(bad)
xchg
xchg
mov
pop
fucomp
std
inc
mov
cmp
xchg
dec
xlat
(bad)
imul
aaa
xchg
enter
xlat
xor
xor
xor
add
jo
pop
push
scas
adc
cmp
in
sub
pushf
cld
stc
jns
pop
sub
out
xchg
xor
push
push
jp
lds
jno
xchg
dec
mov
adc
out
jmp
das
inc
cmc
sbb
and
imul
dec
and
call
inc
lods
xchg
aad
jge
adc
mov
xchg
mov
popf
packssdw
sub
cmp
jle
(bad)
ins
loop
cmp
mov
push
cmp
xchg
dec
inc
pop
daa
xchg
jp
xor
push
xchg
shl
call
out
or
add
cmp
repz
arpl
lock
pop
dec
stos
cmp
daa
push
in
cmp
pop
push
in
loopne
std
aas
or
xchg
(bad)
dec
fimul
(bad)
leave
pop
shl
jnp
ds
mov
cwde
or
mov
pop
dec
push
mov
in
(bad)
(bad)
fdiv
push
xor
leave
pop
loopne
push
dec
fwait
inc
inc
test
jmp
clc
and
daa
iret
icebp
test
sar
cmp
enter
jmp
mov
test
mov
inc
sub
dec
jmp
pop
sbb
addr16
stc
jnp
pop
push
pop
mov
dec
cmp
and
data16
lea
push
adc
ins
movs
mov
mov
push
and
add
cli
inc
inc
push
dec
adc
mov
jo
cmp
jno
sub
retf
lock
sbb
cdq
icebp
mov
repnz
push
out
imul
scas
ror
lock
sub
push
cmp
pop
dec
push
ds
daa
fcomp
jo
mov
push
jo
cmp
jbe
mov
push
push
sbb
(bad)
xchg
popf
pushf
xchg
mov
sub
pop
mov
mov
push
and
push
rcr
test
add
cmps
push
das
sub
pop
push
mov
retf
inc
push
popf
cmp
imul
int3
add
push
lahf
es
adc
push
(bad)
in
ret
cmps
mov
es
ins
add
loope
movs
cmp
mov
jne
pop
inc
repnz
call
(bad)
mov
clc
stc
clc
and
pop
jo
movs
call
popf
jmp
pop
xchg
xchg
sahf
jle
je
pop
out
and
mov
je
rcl
adc
pop
adc
mov
xor
sub
inc
mov
daa
scas
push
lds
fdivr
call
inc
js
not
cmp
jle
pop
mov
mov
push
inc
mov
mov
pop
stc
pop
clc
mov
dec
push
std
and
data16
ret
shr
(bad)
mov
and
xchg
cmp
test
mov
xor
rol
in
cmp
sar
push
aaa
jl
icebp
push
stos
das
in
cld
cs
mov
loope
push
es
xchg
cmp
(bad)
icebp
and
pop
mov
and
sbb
repnz
imul
stos
and
out
xchg
mov
cmp
mov
xchg
arpl
xchg
ins
in
jle
cmp
(bad)
jne
push
mov
das
cs
jge
push
clc
dec
mov
xlat
je
mov
fbld
add
jp
jns
xchg
mov
call
leave
retf
hlt
and
loope
push
push
inc
and
sub
scas
mov
and
sub
xchg
mov
mov
lods
inc
ficom
push
dec
inc
mov
jae
mov
je
adc
sub
cmp
outs
out
or
ret
cmp
jno
xchg
sti
mov
outs
imul
mov
addr16
jbe
and
mov
in
add
fsubr
aad
cmps
lea
pop
fidiv
and
xor
dec
sahf
rcr
ret
pop
data16
dec
(bad)
imul
pop
lods
and
repnz
xor
lock
xchg
jno
cmp
adc
test
pop
inc
data16
add
push
out
shl
stc
cwde
or
imul
retf
(bad)
push
mov
lahf
sahf
or
cmp
push
jne
daa
lods
pop
jge
mov
jle
(bad)
xor
mov
mov
daa
push
mov
(bad)
mov
jne
xchg
push
fist
add
add
jae
and
or
cmp
jb
je
shl
arpl
pop
fisttp
ins
jae
inc
sbb
push
(bad)
mov
sbb
cld
mov
inc
jmp
cli
sti
in
mov
push
sub
sub
leave
out
mov
push
pop
lahf
sbb
iret
jle
into
jne
adc
mov
jbe
mov
nop
cli
xchg
es
adc
ins
shl
ins
and
cs
loope
out
push
add
int
(bad)
xchg
out
jns
sbb
ss
dec
jle
out
sbb
loopne
push
jmp
test
jmp
outs
imul
cmps
sub
scas
pop
xchg
mov
cs
inc
cmps
enter
or
xor
xor
sub
sub
mov
clc
mov
jns
cli
mov
mov
add
hlt
sub
mov
mov
mov
lahf
in
jmp
popf
adc
daa
cmc
push
jle
sbb
mov
(bad)
test
retf
pop
xchg
dec
cmc
shl
pop
push
sub
push
(bad)
repnz
xchg
inc
jnp
sub
or
in
mov
add
das
add
das
in
or
test
lods
xlat
stc
xchg
test
int3
popa
int
imul
mov
jnp
jae
xchg
jo
push
pop
cmp
iret
push
pop
cmp
std
and
je
adc
loop
pop
mov
or
movs
fbld
mov
sbb
je
or
in
(bad)
jle
cmp
xchg
das
xchg
repz
sbb
adc
call
repz
dec
cli
loope
fwait
push
test
mov
test
jnp
and
mov
sbb
mov
lds
mov
jns
mov
cmp
mov
outs
xor
es
mov
inc
(bad)
jmp
loop
jp
mov
cmp
adc
jmp
pushf
jns
test
fmul
xchg
push
add
js
(bad)
std
cs
ins
xchg
arpl
retf
loope
adc
rcl
and
and
mov
es
sahf
xchg
or
xor
data16
stos
dec
leave
call
fdivr
lds
sub
scas
jo
dec
loop
dec
inc
(bad)
push
adc
sbb
mov
movs
shr
ss
mov
ins
jae
or
push
mov
push
inc
jp
jmp
jp
fs
in
mov
inc
pushaw
jg
or
dec
adc
outs
aas
sbb
xchg
cmc
cwde
add
adc
cmp
pop
ret
loop
int3
xor
push
aaa
shr
shl
ja
shl
sub
pusha
add
mov
jb
pop
mov
test
ficomp
mov
cmp
in
fild
push
pusha
jns
pop
dec
dec
adc
lahf
pop
jp
or
or
cmc
mov
cmp
jmp
jnp
mov
cld
push
repz
push
imul
cmps
stc
xchg
aaa
adc
stos
sbb
fisub
pop
repnz
cmps
div
and
add
idiv
shr
xchg
dec
test
cmp
and
or
xchg
and
push
(bad)
push
mov
cmp
sub
sub
xor
push
into
mov
in
mov
add
popa
stc
test
fidivr
add
adc
mov
jmp
xor
mov
call
mov
les
ja
mov
shr
push
fwait
mov
mov
scas
jb
mov
jl
adc
into
and
cmps
repz
bound
mov
and
sub
stos
inc
cmp
fld
das
cmps
std
jp
movs
dec
mov
mov
ins
and
cmps
das
cli
dec
jo
icebp
dec
repnz
in
push
xchg
cmc
fdivr
rol
mov
clc
outs
out
push
cmc
ins
(bad)
cmp
jns
lock
ins
pop
mov
inc
in
lock
fisubr
push
mov
jg
dec
pop
adc
and
push
push
data16
pop
ret
and
dec
in
mov
sar
pop
jns
inc
push
mov
mov
mov
fxam
cmp
adc
push
sub
loopne
daa
adc
inc
shr
add
or
das
popa
js
sahf
xchg
daa
mov
iret
loop
add
jmp
cdq
cmp
mov
or
jmp
cmp
jge
into
xchg
cld
hlt
add
jns
mov
in
mov
pop
stc
xchg
test
sahf
xor
adc
or
lds
xchg
retf
sbb
in
jle
push
les
push
stos
mov
jle
adc
mov
xchg
inc
into
cld
xor
mov
mov
pop
mov
sbb
movs
retf
je
fs
mov
dec
sub
jmp
fcomp
jg
jns
(bad)
pushf
jle
dec
jmp
sbb
lahf
adc
aad
push
sbb
cmp
(bad)
(bad)
dec
and
pop
cmc
push
pop
mov
or
sbb
sub
arpl
add
pushf
test
and
pop
cmp
mov
sub
daa
adc
or
mov
cmp
in
(bad)
fadd
pop
xchg
test
mov
scas
fld
scas
or
jo
sbb
mov
lds
sbb
xchg
out
xor
xchg
retf
pop
add
pop
loope
cmp
mov
push
pop
jmp
mov
fdivr
adc
xchg
lea
stos
mov
sub
xor
inc
or
or
jo
sti
jo
pop
cdq
dec
sub
add
ja
or
mov
sbb
les
and
cld
clc
loopne
mov
adc
cwde
nop
push
and
sbb
adc
push
push
add
sar
cmps
xchg
(bad)
adc
push
push
cmp
sub
sbb
xor
mov
into
in
push
jp
xchg
sub
mov
icebp
cmp
icebp
stos
xchg
mov
test
push
dec
or
outs
imul
cld
xor
shl
mov
add
imul
sbb
inc
stc
mov
cmps
jbe
cmp
sub
je
sbb
pop
(bad)
sar
dec
mov
jle
pop
jae
push
add
jmp
inc
xor
adc
outs
out
mov
mov
pop
ins
mov
add
mul
(bad)
jp
jae
daa
sbb
loope
mov
leave
test
xchg
repz
xchg
cmp
rcr
dec
jns
adc
cmps
cmp
sub
pop
cmp
xchg
inc
cmp
(bad)
dec
call
sub
and
aaa
neg
mov
aad
sti
dec
mov
lods
xchg
push
dec
into
sub
ja
loop
enter
inc
lds
jmp
push
cmp
push
xor
movs
clc
mov
imul
mov
enter
push
sub
popf
pop
adc
push
jo
ds
ja
dec
mov
in
out
mov
retf
xchg
push
sar
sub
ret
cmp
fidiv
imul
stos
test
js
shr
dec
(bad)
pop
mov
add
in
xlat
jne
sub
xor
sbb
fstp
std
xor
mov
push
dec
in
sub
pop
sub
xor
fcom
daa
mov
popf
jecxz
adc
pusha
push
aam
mov
jecxz
imul
mov
mov
cmps
sub
mov
push
out
cmps
stc
leave
or
jge
(bad)
jecxz
in
xor
imul
xor
mov
cs
(bad)
cmps
in
cmp
pop
pop
jo
dec
stc
imul
lods
aas
fadd
add
xor
sbb
adc
pop
jno
stos
push
sub
test
dec
add
loopne
xchg
xchg
mov
in
jmp
mov
xchg
adc
push
jmp
in
xor
jle
arpl
jecxz
jge
je
fist
icebp
mov
xchg
hlt
fild
cmc
xor
bound
rol
jne
mov
pop
mov
sub
sub
xchg
outs
cmp
jmp
cs
sub
jnp
mov
pop
rol
in
test
pop
rep
xchg
push
jne
cld
and
popf
pushf
out
xor
xor
mov
jge
es
dec
add
mov
pop
mov
sub
push
or
xchg
iret
adc
mov
sbb
xlat
cld
jmp
fnstenv
inc
sbb
dec
add
in
fdivr
retf
sbb
push
push
adc
lods
fsubr
pop
mov
sbb
pop
stos
sub
or
enter
xchg
lods
add
es
mov
jno
pop
push
test
jnp
push
xchg
imul
sub
mov
xchg
repz
or
sbb
mov
sti
mov
cmc
into
hlt
paddusw
pusha
adc
loop
(bad)
bound
arpl
in
int3
in
std
loope
sbb
push
mov
push
frstor
sbb
fisubr
mov
pop
les
and
xchg
adc
rol
fldenv
jecxz
xchg
sbb
fcmovnbe
push
cs
addr16
cli
in
mov
inc
xlat
cli
sub
pop
and
pusha
or
mov
xchg
sub
and
jmp
xchg
ins
enter
test
jmp
push
ins
stc
sbb
mov
retf
test
xor
jae
mov
xor
dec
int3
adc
jnp
lock
cmc
repz
pop
cmp
addr16
(bad)
mov
xchg
imul
sahf
js
in
sbb
push
pop
pop
out
fwait
jmp
sbb
test
push
pop
js
dec
pop
popa
xor
inc
mov
and
test
fisubr
js
fist
xor
data16
or
repnz
lock
jae
xor
add
fimul
mov
jne
mov
into
mov
sbb
test
xchg
nop
mov
loopne
xchg
push
add
repnz
and
cld
or
inc
jo
mov
outs
push
mov
and
sub
dec
pop
or
gs
pop
fdiv
das
jle
retf
inc
sub
inc
mov
ds
int
in
push
fsub
int3
hlt
lahf
mov
mov
push
pushf
pushf
pusha
enter
pop
sbb
movs
and
mov
mov
test
in
and
xchg
add
popf
mov
xor
jp
lods
mov
outs
xchg
stos
mov
mov
imul
ss
test
int
cld
jmp
adc
xchg
push
cmc
sub
xor
adc
sub
jo
xchg
cld
mov
xor
and
push
data16
hlt
retf
test
push
cmps
mov
shl
dec
and
imul
fwait
shl
jne
xchg
loope
inc
pop
push
stc
push
nop
inc
stc
shr
leave
packssdw
cld
cmp
call
mov
jge
idiv
adc
cmp
jb
xchg
jns
movs
mul
cli
imul
xor
sbb
push
sub
mul
jne
and
scas
pop
pop
push
test
cmp
outs
repnz
out
cmp
cs
lods
dec
xchg
rcr
mov
jnp
test
mov
ret
cld
jae
add
dec
aaa
xor
add
adc
stos
ins
out
mov
xchg
add
jns
xchg
mov
mov
jg
jmp
cmps
cld
xchg
dec
jmp
push
xchg
add
xor
jb
jmp
data16
jg
js
xor
or
mov
sub
and
push
mov
enter
aam
jns
mov
pusha
js
inc
loopne
mov
or
in
inc
retf
mov
jae
in
sbb
push
mov
or
inc
adc
and
ret
mov
xor
mov
ret
dec
stos
sub
loopne
loop
jge
xchg
js
mov
cmps
cmp
fadd
mov
pop
jecxz
lods
inc
and
fucomp
sub
ins
lods
adc
inc
dec
add
xchg
xchg
and
push
pop
push
nop
sub
mov
inc
mov
xchg
xchg
fnstcw
sbb
mov
and
push
iret
adc
cld
sub
adc
mov
stc
stos
ret
imul
sub
icebp
mov
test
retf
out
or
push
jae
mov
mov
mov
adc
cmc
lock
sbb
repz
mov
icebp
stc
inc
mov
addr16
or
or
shr
cmp
jae
add
mov
icebp
lods
mov
push
(bad)
jecxz
pop
mov
lock
fild
or
or
sahf
mov
mov
push
test
jbe
xchg
out
int3
mov
lods
xchg
les
fidivr
inc
xor
(bad)
cdq
mov
movs
sub
stos
mov
xchg
sub
xchg
and
sbb
jnp
shr
sar
ds
shr
push
jg
inc
dec
mov
loop
nop
dec
pop
cmp
sub
loopne
sub
mov
mov
push
xchg
jb
pop
div
xchg
repnz
les
inc
or
fidiv
cmp
ror
adc
cmps
mov
mov
fld
push
nop
mov
daa
xchg
(bad)
jp
inc
cmp
ins
test
mov
stc
xlat
mov
unpcklps
mov
ins
pusha
push
mov
push
(bad)
into
pop
sar
or
mov
push
xchg
(bad)
jne
dec
mov
das
loopne
ss
stos
add
hlt
cli
cmc
jge
in
adc
cwde
ror
fwait
addr16
mov
add
xor
repz
arpl
outs
je
xchg
cdq
sub
movs
and
push
movs
add
sub
or
xchg
mov
aad
in
loope
pop
lods
jo
dec
cmp
xchg
jns
hlt
adc
div
dec
repnz
jae
imul
popa
add
xor
retf
loopne
xchg
cmps
iret
pop
shl
sub
fld
mov
js
fcom
mov
sar
add
mov
and
xchg
mov
outs
aam
cli
sub
jo
pop
xchg
sub
mov
cmps
pop
lahf
in
xchg
and
dec
ja
sti
cli
and
mov
jb
xchg
dec
mov
jns
mov
movs
test
sub
cmp
cwde
add
xor
pushf
mov
nop
dec
xchg
imul
hlt
pusha
mov
sbb
icebp
and
and
push
and
push
mov
cli
lahf
cmps
(bad)
in
in
xor
cmp
sbb
ja
es
or
in
retf
les
push
sub
fistp
cmps
mov
jp
xchg
cwde
jmp
and
lods
ret
shl
inc
xor
scas
imul
push
jecxz
int
ds
pusha
xchg
push
ins
xor
icebp
dec
or
xlat
loopne
cmps
dec
imul
xchg
push
sbb
xchg
daa
sbb
cld
stos
fiadd
jo
iret
ret
cmp
nop
loopne
in
js
or
(bad)
sti
out
imul
add
pop
inc
xchg
lock
mov
rep
cmc
xor
and
jle
test
les
sbb
push
cmp
sub
lods
jb
call
bound
ret
mov
xchg
mov
add
cmp
cmp
aas
mov
dec
test
into
aam
out
jmp
out
bound
add
or
mov
inc
stc
sar
xchg
jle
and
jecxz
aad
loopne
push
xchg
jnp
xchg
inc
retf
xlat
lea
push
aaa
data16
mov
mov
inc
sub
sub
pop
xlat
push
xor
call
sub
pop
mov
cli
push
sub
push
and
xchg
push
xchg
add
and
repz
scas
jp
repnz
in
push
dec
retf
push
popa
in
ins
and
cmp
xor
xchg
jmp
pop
jecxz
cmps
sub
arpl
adc
jns
arpl
ret
neg
inc
std
sub
or
xchg
dec
dec
(bad)
sub
stc
scas
loope
or
xchg
or
xchg
cmp
std
stos
push
adc
data16
js
repz
jnp
(bad)
pusha
test
shl
dec
jns
or
sahf
and
mov
dec
(bad)
or
jns
hlt
lahf
ss
jp
cmp
fcmove
adc
and
dec
sub
out
or
inc
dec
xor
jle
adc
rcr
imul
repnz
and
shr
cmp
jb
sub
ss
imul
paddw
adc
mov
sbb
cld
xchg
jae
pushf
jne
lds
adc
lahf
sbb
push
rcl
xchg
js
aas
cmp
test
je
js
pop
cdq
jb
dec
retf
push
mov
push
test
sub
sbb
sub
cs
xor
ins
jns
jb
mov
std
(bad)
sar
add
pop
sbb
in
sbb
and
push
and
mov
fstp
push
pop
daa
fldenv
xor
sar
shl
cmp
xchg
jp
mov
addr16
in
scas
cld
push
out
int3
cdq
jle
int3
cmp
inc
in
mov
adc
popa
sub
jne
mov
xor
retf
cmp
xor
jmp
mov
mov
sub
pop
dec
dec
mov
or
cmp
pop
pusha
adc
and
popf
stc
pop
push
adc
rol
aam
fs
clc
dec
stos
mov
das
daa
and
xchg
and
mov
xchg
stos
test
dec
aas
push
or
jne
mov
pop
daa
repz
and
mov
or
icebp
stc
out
retf
into
lods
add
cld
sti
gs
xor
xor
in
adc
lahf
jo
sbb
loope
or
mov
rcr
out
add
in
es
xor
pop
adc
neg
das
fldcw
cmp
in
push
das
gs
(bad)
pop
fs
test
xor
sbb
ins
dec
ret
aas
nop
or
call
jbe
pop
aas
dec
loope
dec
retf
and
mov
cmp
iret
sti
xor
mov
cmp
ins
out
jp
es
or
push
mov
xchg
cdq
add
pusha
fldenv
mov
into
xor
iret
pushaw
lock
sbb
push
(bad)
mov
sub
cmp
mov
mov
test
mov
(bad)
(bad)
mov
inc
xchg
ror
dec
mov
ret
cmp
add
sbb
or
pop
repz
jmp
pop
pushf
movs
pop
pop
adc
enter
aad
out
pop
pop
cmp
loopne
add
repnz
cld
sub
push
jnp
adc
push
and
stos
mov
ins
inc
sbb
pop
adc
mov
mul
xor
mov
imul
cmp
xor
add
repz
inc
jne
ins
push
and
jl
add
or
and
scas
cmp
inc
and
inc
test
cmp
xchg
(bad)
std
and
lahf
cmp
xchg
ins
cmp
outs
jmp
sbb
mov
push
rcr
nop
addr16
adc
leave
les
xchg
pop
inc
aaa
test
push
test
ins
add
dec
pushf
and
lock
push
call
push
lea
jo
ds
stos
cmp
push
out
sbb
es
xor
pop
push
mov
iret
int
jp
daa
add
mov
sub
xchg
out
aas
cld
scas
hlt
fld
sar
loope
out
xor
or
leave
cmp
xor
xor
pop
jmp
bound
retf
rol
pop
les
pop
lods
mov
cs
sub
retf
jnp
test
adc
ret
pop
push
and
push
scas
bound
xchg
fidiv
xor
out
imul
std
dec
in
inc
rcl
jl
sub
out
ins
pop
(bad)
push
jmp
jmp
pop
sahf
lea
inc
push
and
pushf
loopne
sub
mov
jo
sub
push
inc
(bad)
mov
out
pop
sbb
xchg
call
clc
out
scas
dec
push
fiadd
xchg
addr16
pop
and
sbb
sti
mov
leave
jl
icebp
repz
lahf
add
std
aaa
pop
hlt
xchg
pop
cmp
xchg
and
inc
or
ins
adc
jmp
xlat
push
adc
add
xchg
dec
jmp
mov
cmp
clc
jmp
in
pop
jns
dec
jl
hlt
xchg
popa
imul
icebp
pushf
or
adc
sub
call
in
pusha
xchg
and
mov
imul
mov
int
cs
(bad)
or
adc
cmc
(bad)
jnp
mov
xor
and
xor
je
push
jns
dec
clc
dec
xor
in
mov
mov
mov
pop
ret
ret
xlat
or
sti
mov
mov
xor
mov
dec
outs
mov
xchg
pop
mov
xor
dec
test
add
retf
sub
arpl
xlat
or
adc
ficom
cmp
fcmovb
push
in
jp
inc
xchg
mov
mov
mov
mov
loop
jnp
movs
xor
pop
or
or
das
iret
into
jp
mov
adc
push
and
(bad)
jmp
cdq
pusha
repz
cmp
inc
sbb
int3
or
sbb
test
or
push
or
int
cmp
ins
aad
stc
shr
xor
pop
xchg
cld
pop
stos
aad
aas
sbb
dec
jae
les
mov
cmp
cmp
js
adc
sbb
out
mov
jl
add
mov
aam
jne
call
cs
pop
dec
dec
arpl
fld
lock
(bad)
jne
mov
mov
cmp
les
cmp
cmc
scas
mov
loope
xor
in
ret
xor
sbb
or
jno
push
ja
push
std
inc
or
fwait
dec
jo
add
test
mov
sbb
jns
pop
pop
mov
push
push
add
push
or
jl
lds
add
xchg
dec
sbb
push
lods
les
loopne
push
and
push
push
cmp
test
and
pop
and
or
xchg
pop
inc
or
xchg
loope
cmc
cmp
or
pop
push
jns
mov
outs
ds
sub
call
jl
xchg
sbb
mov
lods
test
std
sar
jecxz
mov
jae
mov
dec
sub
add
xor
fild
das
pop
pop
push
sub
jle
sub
retf
and
mov
data16
movs
xchg
sub
add
jp
fucomp
mov
daa
xchg
fist
adc
scas
int
dec
jmp
cld
pop
out
fs
adc
int
lds
mov
les
push
add
jb
xchg
jbe
in
ds
mov
jne
and
add
cmp
test
cmps
sahf
sub
scas
cli
retf
cmp
in
jl
(bad)
fimul
jbe
xchg
lods
pop
inc
push
les
(bad)
gs
cmp
sti
mov
cdq
cmp
fisttp
jge
dec
rcl
addr16
push
push
into
jmp
pop
mov
xor
fdiv
xor
pop
out
bound
push
stc
stc
ja
rcl
push
pop
mov
mov
and
mov
sub
add
out
js
hlt
mov
test
call
std
cmp
push
ss
jp
lods
adc
pop
mov
sti
xchg
repz
push
gs
std
mov
shr
jne
xchg
jb
and
and
addr16
gs
adc
ret
pop
xor
jbe
sub
ss
outs
dec
pusha
or
xor
movs
rcl
cs
pop
bound
cmp
retf
out
xor
push
jp
es
sar
xchg
mov
cmp
sbb
mov
mov
xchg
leave
scas
iret
pop
sbb
and
loope
push
outs
aam
adc
loope
xchg
adc
sbb
loope
sub
xchg
pop
clc
mov
call
cld
cmp
mov
xchg
pop
xchg
jecxz
repnz
rcr
add
sub
sbb
xor
pop
xor
retf
fstp
cmp
cmp
lea
repnz
ja
icebp
cmps
add
inc
cmp
push
jbe
dec
mov
imul
shl
cwde
dec
mov
call
leave
(bad)
dec
cld
xor
sub
jmp
cmp
sbb
sbb
and
mov
sbb
not
cmp
in
stc
adc
push
mov
outs
fistp
leave
movs
ret
sar
push
in
es
fstp
and
cmp
mov
mov
sbb
data16
dec
ret
aam
je
in
pop
scas
jae
addr16
ins
test
sbb
cmps
sbb
mov
xor
inc
adc
inc
push
dec
mov
adc
xor
sbb
jns
push
jo
cmp
mov
scas
cs
adc
sbb
fwait
xchg
add
addr16
fstp
cmp
iret
call
cld
jmp
dec
pushf
test
js
aad
shr
jmp
loope
movs
test
test
out
dec
test
xchg
xor
out
in
xor
ds
and
jbe
outs
cli
(bad)
aas
hlt
pop
sub
cmp
or
ins
sbb
mov
sub
adc
cli
cmp
cmp
cmp
dec
xor
(bad)
ds
lahf
in
pop
rcr
xchg
icebp
and
aad
jnp
sub
das
in
ret
(bad)
jb
jns
out
aam
outs
clc
sbb
fld
ss
lods
ret
pop
pop
jne
cmp
sub
mov
jb
mov
(bad)
ja
loopne
add
xor
lds
mov
aad
fidiv
hlt
lea
imul
add
cli
stos
int
adc
daa
mov
jmp
adc
push
pop
mov
and
jmp
cmps
pop
aas
mov
stos
lea
je
pusha
jnp
aam
icebp
outs
sub
and
sub
adc
jmp
xchg
outs
inc
xchg
sub
pop
pop
dec
bnd
jo
dec
push
pushf
jp
mov
pop
fsubr
xchg
outs
jns
loope
retf
sub
push
sub
push
mov
xchg
jmp
dec
xor
fmul
dec
dec
cmp
aad
push
push
xchg
dec
(bad)
int3
daa
loope
pop
sub
lods
mov
ja
popf
add
imul
jg
xchg
adc
pop
aam
mov
pop
xchg
popa
out
sbb
adc
or
mov
movs
mov
and
(bad)
jmp
sbb
in
add
out
mov
inc
aad
mov
push
loopne
cmp
sub
xor
es
enter
push
dec
in
in
sub
mov
dec
push
and
xchg
mov
jmp
retfw
jmp
dec
ds
adc
xor
xchg
(bad)
hlt
xor
pop
xlat
cwde
leave
jnp
add
jne
lds
shl
jmp
push
loopne
pop
mov
xchg
enter
or
retf
jmp
(bad)
sub
pop
sbb
sbb
test
out
aas
mov
sti
imul
jle
and
mov
movs
xor
or
fistp
ins
js
cmp
mov
sbb
dec
ja
pop
mov
jae
cld
dec
or
jbe
imul
jge
or
jp
das
fstp
inc
imul
xchg
push
mov
add
mov
add
xor
cmp
fisttp
or
jl
adc
inc
ss
(bad)
jmp
pop
mov
pop
ss
in
clc
je
mov
dec
adc
fidivr
test
inc
test
cs
test
inc
test
pop
ficom
mov
or
xor
ret
js
ss
loopne
fcomip
or
inc
xchg
add
call
pop
popf
(bad)
mov
aam
sbb
cmp
daa
shr
inc
lods
retf
in
jmp
xchg
sub
or
cmc
test
in
and
and
das
es
pop
push
jno
pop
inc
pushf
fistp
lahf
push
push
jnp
mov
das
cmc
into
pop
inc
xchg
sti
and
retf
js
adc
(bad)
mov
test
mov
push
xchg
pop
aam
push
stc
ins
and
and
fisubr
je
pop
push
daa
imul
sub
mov
jmp
daa
leave
scas
push
pop
mov
mov
push
ja
test
sbb
sub
xor
xchg
inc
and
and
mov
push
je
pop
out
ret
ss
mov
leave
mov
cmp
retf
jmp
jg
daa
jg
pusha
mov
jne
sub
adc
sub
mov
in
push
pop
retf
add
xchg
jb
lods
popa
es
pop
pop
cld
or
mov
sub
jb
lods
out
xlat
lods
xor
sar
out
aad
fst
aad
(bad)
push
cmps
stc
dec
add
push
cld
out
sbb
jne
sar
nop
adc
stos
xchg
and
pop
out
xchg
jbe
test
imul
movs
imul
bound
push
icebp
pop
jp
nop
icebp
repnz
int
icebp
js
and
mov
xchg
add
mov
adc
es
scas
adc
inc
ror
stc
(bad)
adc
inc
imul
ret
and
xchg
dec
xchg
mov
inc
mov
stos
mov
nop
sub
or
adc
push
cmp
jae
sbb
fiadd
push
call
movsx
jns
loopne
ror
jno
dec
and
mov
(bad)
push
ins
pop
jne
out
jmp
xchg
sti
call
jb
les
pop
dec
pop
ins
mov
rol
dec
jnp
stc
jo
dec
jae
and
and
ins
mov
and
cmc
loopne
mov
aas
mov
shr
mov
sbb
popf
jle
fsub
sub
mov
in
mov
(bad)
xchg
je
test
(bad)
and
add
xchg
push
xchg
jmp
pop
cmps
repz
push
nop
test
jge
mov
inc
dec
in
cmp
movs
or
std
(bad)
cmc
xchg
jle
and
sahf
ja
fdiv
add
inc
xchg
(bad)
jmp
(bad)
loop
sbb
stc
call
outs
jne
sbb
in
mov
fcom
jl
icebp
push
in
add
mov
call
xor
adc
or
stc
mov
jmp
cli
adc
add
aaa
xor
adc
cmp
push
cdq
mov
sub
dec
and
cld
adc
les
ret
mov
adc
aad
pop
push
cmps
stos
loope
adc
push
mov
(bad)
push
sbb
int
addr16
in
or
jno
jle
repz
test
lock
jnp
sbb
mov
jae
xchg
out
mul
arpl
or
push
mov
in
das
sub
pop
cmp
icebp
and
pop
js
dec
js
ret
xchg
repnz
push
sbb
xlat
adc
mov
sahf
push
sahf
mov
inc
push
mov
mov
xchg
repnz
sar
jp
pop
mov
push
jmp
lds
inc
cmp
mov
and
xchg
sub
iret
mov
xchg
jno
cdq
mov
mov
mov
std
adc
push
fbld
adc
jg
int
xor
(bad)
sub
jb
sti
push
stc
lahf
fimul
in
cwde
ins
pop
push
icebp
int
mov
or
pop
jmp
adc
fs
sub
dec
pop
cdq
loopne
test
dec
add
cld
mov
adc
mov
jl
pusha
out
sub
sbb
in
mov
push
std
inc
dec
je
cmps
jl
mov
js
movs
popf
out
dec
nop
movs
sbb
inc
sar
adc
add
or
push
push
mov
add
dec
loopne
sub
cwde
retf
stos
xabort
arpl
mov
popf
enter
ret
data16
loope
and
iret
mov
mov
jns
fdiv
xchg
sbb
dec
add
xchg
cmp
int3
pop
adc
mov
and
stc
and
cmp
jge
jmp
push
mov
mov
sub
bts
sub
mov
cmp
push
std
cdq
stc
and
int3
int
jae
(bad)
iret
repnz
mov
xor
adc
repnz
call
fcmovb
sbb
and
sub
mov
icebp
bound
fwait
dec
(bad)
pop
xor
mov
or
imul
ja
xchg
jmp
mov
xchg
mov
jmp
out
push
mov
dec
jae
cmp
lods
lds
bound
pop
fnstcw
dec
xchg
pop
push
sub
test
or
lea
dec
mov
js
xchg
pusha
(bad)
adc
cmps
jnp
int3
or
leave
jne
icebp
cld
mov
xchg
rcr
int
sub
cmc
inc
jns
shl
sar
pop
inc
and
jb
fisub
xchg
dec
push
repnz
mov
iret
fild
sub
daa
jne
and
jmp
jns
push
cli
ret
scas
cld
cmp
dec
movs
dec
cmps
(bad)
sub
mov
cmp
test
xchg
cmc
push
jecxz
cld
sub
ins
jno
ds
xor
js
stos
scas
into
es
jp
pop
out
pop
stos
mov
repnz
(bad)
je
mov
les
mov
push
xor
in
adc
jne
es
popa
mov
enter
sbb
xchg
xor
nop
call
popf
pop
mov
clc
push
jo
aad
loopne
je
retf
stos
xchg
mov
pusha
sub
dec
pop
and
repz
mov
outs
jle
or
into
adc
or
xchg
dec
cmp
jp
cmp
dec
in
adc
xor
out
and
test
jne
loopne
rcr
in
and
(bad)
(bad)
jo
in
mov
cmp
test
sub
pushf
cmp
popa
mov
push
cli
pop
cmps
mov
mov
xor
scas
clc
data16
fadd
mov
cmc
mov
dec
iret
or
cmps
or
lea
inc
push
(bad)
js
xor
mov
or
sbb
fisttp
or
dec
mov
les
repnz
int
push
fbstp
lea
daa
adc
adc
arpl
fisttp
lock
sbb
bound
retf
sub
xchg
push
xor
or
(bad)
or
sbb
pop
mov
jle
cmp
lea
pop
sbb
lds
push
mov
dec
mov
xor
jo
cmp
ins
xchg
inc
and
and
mov
adc
pop
inc
mov
push
test
out
fisttp
mov
fxch
shl
out
adc
mov
pop
mov
(bad)
jmp
pop
mov
or
dec
xchg
or
sbb
out
xchg
xor
and
popa
loope
shl
lods
xor
nop
push
pop
dec
cli
test
cmp
sub
xchg
mov
jp
mov
and
test
pushf
jo
and
sti
ins
sub
adc
dec
add
sahf
fdivrp
ins
retf
jp
cmp
push
icebp
aam
inc
fcom
push
fstp
sub
addr16
idiv
jecxz
sub
out
jae
cmp
jns
sub
fs
xchg
adc
dec
mov
mov
push
sbb
xor
sub
mov
fstp
mov
ss
jmp
inc
pop
(bad)
and
or
xchg
cmp
es
pusha
jb
mov
jno
sti
jb
xchg
fwait
mov
rcl
lock
rol
dec
xchg
sub
mov
xchg
leave
(bad)
cmps
(bad)
sub
sub
sub
inc
cmp
ret
retf
push
inc
adc
jne
xchg
mov
fsubr
leave
out
sbb
ficomp
repz
mov
jmp
pop
pop
push
hlt
outs
addr16
or
fmulp
fstp
shr
ss
scas
xchg
mov
fldcw
rcl
push
sar
js
push
mov
jb
sbb
shl
and
sbb
add
inc
iret
mov
sbb
xor
popa
loope
and
cmp
std
in
retf
cld
sub
pop
int
dec
(bad)
push
xchg
std
in
xchg
pop
pop
dec
test
fdivr
sub
shr
mov
sub
jmp
mov
push
pop
jne
add
jmp
mov
retf
(bad)
cld
(bad)
dec
sub
cmp
sbb
push
xchg
xor
xlat
or
jp
cdq
pusha
dec
pop
repz
mov
retf
mov
in
fild
sbb
sbb
and
xchg
lods
es
repz
shr
xor
push
xor
adc
std
adc
cmps
mov
adc
xchg
mov
rol
shl
pop
rdmsr
jnp
push
adc
inc
mov
mov
cmp
and
hlt
in
outs
(bad)
jle
shr
and
retf
scas
shl
stos
push
iret
or
or
cs
(bad)
ins
repz
lods
sub
dec
test
mov
aad
jp
(bad)
shl
test
in
ds
sbb
sahf
xchg
sahf
daa
sub
push
(bad)
in
and
pop
pop
call
sub
xor
enter
leave
inc
clc
idiv
fs
xor
pop
xchg
push
mov
in
mov
add
in
jg
jne
pop
jg
sbb
mov
push
xor
jnp
mov
cmp
cmc
pop
lock
jae
sbb
dec
out
add
add
mov
retf
dec
add
jae
mov
es
pop
adc
outs
neg
rcl
sub
cli
adc
dec
es
sbb
adc
mov
jbe
fisub
pop
mov
(bad)
in
mov
mov
or
stos
push
popf
cmp
cmp
add
and
movs
(bad)
rcr
xor
fdiv
shl
mov
inc
fcomip
mov
dec
fs
mul
pop
sbb
loopne
push
ror
retf
cmp
aad
jp
int
xchg
lahf
loope
ret
call
push
retf
(bad)
cld
jns
cmp
mov
dec
(bad)
pop
test
sub
add
sbb
outs
cmp
xor
pusha
sub
ja
fisttp
sub
push
cld
adc
repz
daa
mov
lods
stos
mov
mov
pop
cmps
mov
aam
push
add
shr
out
push
jo
sub
sub
cdq
test
jo
into
mov
in
pop
jg
pop
sbb
mov
sbb
inc
je
retf
cmps
sbb
inc
pop
xor
and
inc
pop
push
(bad)
and
pusha
jmp
sub
or
clc
and
push
jmp
xchg
xchg
stos
mov
or
sub
aad
std
and
fimul
cmp
(bad)
and
pop
mov
and
mov
mov
psrlw
xchg
(bad)
(bad)
mov
test
cld
add
add
int3
mov
cmps
rcr
fisubr
cmp
gs
push
sbb
ins
xchg
mov
stos
mov
mov
jnp
repz
in
outs
imul
daa
inc
sub
fucomip
scas
xchg
mov
and
retf
xchg
cmc
hlt
adc
xchg
adc
xor
mov
sub
pop
cdq
cmp
sub
enter
xchg
mov
ss
sbb
sbb
fwait
stos
xor
shl
test
dec
nop
in
mov
adc
out
and
or
or
xchg
popaw
lea
xor
outs
cmc
push
mov
xchg
(bad)
pusha
dec
icebp
cmp
jb
jne
gs
cmp
nop
jecxz
jle
jg
out
inc
and
sahf
push
out
pusha
mov
push
and
mov
cmp
mov
sub
push
xchg
sbb
xchg
cmp
rcl
mov
jne
and
addr16
sub
jle
xchg
adc
mov
xchg
mov
push
imul
add
call
stc
and
rcr
sbb
fadd
push
(bad)
xchg
push
mov
jp
cdq
pop
lods
(bad)
jl
mov
(bad)
in
add
adc
push
inc
setp
cmp
aaa
mov
dec
and
pop
test
pushf
cmc
clc
pop
xor
xchg
out
xchg
into
mov
mov
sub
jmp
and
cwde
addr16
aaa
xor
jmp
push
ret
popf
cmps
push
xchg
repz
ins
dec
pop
stos
outs
mov
clc
push
test
and
sbb
xchg
xlat
mov
popa
jle
dec
and
dec
(bad)
in
mov
call
sahf
or
xor
mov
std
mov
xchg
fnsave
xchg
mov
sub
fcomp
push
out
inc
pusha
xchg
mov
cmc
loopne
push
jecxz
pusha
sbb
xchg
cmp
adc
mov
dec
xor
push
test
jle
sbb
call
inc
lock
and
or
adc
adc
dec
mov
psubsw
cmp
fmul
data16
jle
and
or
xchg
cmp
mov
jns
cmp
mov
xchg
adc
fist
int
sbb
mov
aas
dec
(bad)
mov
push
loope
jp
jecxz
xchg
mov
xlat
mov
mov
sbb
xor
in
stos
xor
xchg
fmul
mov
(bad)
xchg
sbb
push
loopne
xlat
or
xchg
in
inc
xchg
push
shl
cs
push
lods
pop
icebp
ds
xor
fistp
shr
inc
mov
js
enter
hlt
dec
xor
mov
pop
jo
cmc
mov
mov
addr16
fnsave
in
ja
fwait
pop
jae
dec
scas
jmp
mov
jmp
loopne
fcmovu
loopne
pop
dec
dec
ins
adc
shl
dec
std
mov
(bad)
push
dec
xor
mov
dec
cmp
xchg
scas
adc
dec
shl
test
inc
inc
test
mov
adc
push
pop
test
loope
jbe
push
fnsetpm(287
loopne
or
cmp
movs
int
adc
dec
and
add
call
fbstp
mov
rcr
or
dec
shr
pop
jmp
push
adc
ins
push
push
mov
mov
xor
mov
xchg
add
dec
loopne
mov
cld
fwait
ins
(bad)
and
mov
imul
inc
jg
cmp
xchg
xor
fwait
(bad)
in
pop
js
cmp
xchg
dec
xor
hlt
mov
push
jp
pop
cmps
out
add
mov
cmps
mov
adc
sub
mov
hlt
fst
cmp
mov
sti
mov
dec
(bad)
push
pop
shl
cmc
arpl
fwait
adc
aas
in
and
pop
mov
xor
addr16
inc
mov
pop
push
ret
mov
jmp
sbb
xchg
outs
pop
sti
push
push
je
jae
jne
mov
cmp
pop
cld
cmp
ret
sbb
mov
bound
xchg
push
outs
jnp
sub
dec
jecxz
mov
sbb
or
adc
pusha
mov
xchg
push
pop
xor
ret
in
cmp
stos
xchg
fs
repz
test
cmp
(bad)
fisttp
mov
daa
xchg
jg
loop
loopne
sub
dec
xor
pop
add
adc
loope
push
jle
add
scas
cs
sub
pop
jmp
adc
ret
imul
scas
push
xchg
(bad)
jmp
ja
sbb
cmp
mov
dec
sub
and
(bad)
or
adc
dec
jns
and
fwait
jne
and
arpl
dec
push
xor
ss
jge
mov
inc
les
test
cmp
ret
outs
dec
into
mov
sbb
or
adc
(bad)
xchg
(bad)
and
scas
std
pop
add
mov
aam
sbb
adc
out
in
xor
pop
mov
pop
es
lahf
xchg
pop
or
gs
loop
xchg
inc
jmp
and
rol
xchg
int3
outs
adc
data16
sub
cli
retf
and
out
sbb
sbb
(bad)
call
sub
test
and
xchg
dec
mov
mov
test
xchg
in
pop
mov
aam
ins
arpl
loope
ins
jnp
xchg
bound
call
fnstenv
mov
shl
dec
push
add
cmp
stos
mov
mov
daa
cmp
and
and
loop
ret
add
inc
rcr
fdiv
xchg
cmp
mov
or
pop
cmp
rcr
add
sub
pop
pop
cli
or
push
push
cli
mov
adc
add
dec
jle
loop
js
xor
cmp
int
jp
daa
mov
fwait
std
aaa
inc
imul
int
ret
mov
inc
jmp
fwait
sbb
push
leave
cmp
mov
outs
cmp
inc
jo
dec
dec
cmps
pop
iret
pop
sbb
out
pushf
aaa
xchg
dec
sub
inc
imul
clc
cmps
mov
cmc
stc
mov
dec
clc
mov
cmp
imul
fsubr
xchg
push
cmp
and
jmp
pop
cwde
leave
cld
icebp
lahf
jbe
mov
sbb
repz
xor
nop
enter
repnz
out
(bad)
xchg
adc
mov
pushf
xchg
xchg
inc
popf
and
loope
jmp
lea
mov
fsub
js
repz
aam
mov
(bad)
mov
ds
std
mov
shr
inc
rcr
xchg
fiadd
mov
xchg
in
rol
push
xor
ficomp
jo
mov
inc
dec
add
push
inc
mov
mov
scas
xchg
mov
cs
pop
std
ins
xchg
push
ret
mov
das
scas
jne
xchg
cmp
jae
mov
add
arpl
sbb
gs
lods
jge
in
(bad)
cmp
(bad)
in
clc
repz
jns
or
out
inc
sub
and
sti
push
xor
js
loopne
ret
cmp
mov
lea
shr
pop
mov
js
ficomp
pop
out
dec
in
ins
inc
adc
and
mov
(bad)
cmps
neg
xor
dec
jne
or
push
(bad)
icebp
dec
mov
inc
inc
rol
mov
ja
dec
adc
(bad)
out
adc
in
xor
mov
neg
int3
add
jp
loop
sub
fisttp
pop
sbb
inc
repz
jne
pushf
cmp
or
xor
mov
mov
jnp
adc
sahf
js
cmp
push
test
push
call
cli
ss
add
imul
xor
jmp
push
xchg
je
dec
cdq
mov
cmp
hlt
add
mov
fidivr
outs
test
test
cs
fild
out
rol
fnstsw
test
push
jb
jo
cs
xchg
ins
fs
into
aad
sbb
nop
add
xchg
mov
bound
mov
loop
jp
jae
lahf
xor
test
in
loop
(bad)
mov
sub
xchg
lods
inc
xchg
pop
mov
inc
pushf
sub
push
outs
loop
mov
xchg
(bad)
sbb
sbb
lds
sub
stos
cmp
push
int3
icebp
jb
mov
sbb
xlat
adc
or
aam
cmp
push
or
dec
cmp
sub
test
adc
and
scas
in
xchg
adc
repz
je
add
add
xchg
sahf
sub
adc
jb
sbb
call
jg
or
es
push
push
jmp
fstp
fmul
out
sti
dec
adc
cmps
mov
mov
mov
mov
sub
jecxz
loop
add
js
push
in
call
into
dec
ficom
mov
fild
fnstsw
idiv
jo
mov
xor
xor
mov
lods
inc
adc
dec
outs
dec
iret
dec
cmp
loope
ins
sub
and
sbb
movs
push
jle
push
cmp
je
pop
mov
add
mov
sbb
fcom
call
dec
xor
mov
icebp
mov
lea
fldcw
fisttp
stos
cmps
shr
jg
sbb
data16
dec
loope
push
dec
jp
jnp
sbb
ret
retf
ins
jp
mov
in
xlat
in
in
arpl
mov
push
xchg
popf
jae
push
daa
es
enter
xchg
add
mov
adc
xchg
jae
mov
jb
retf
loope
inc
sbb
test
(bad)
and
sbb
sub
ror
and
aam
mov
jge
inc
ins
jge
mov
sar
arpl
xor
movs
mov
jecxz
sbb
ja
test
xchg
in
test
add
xchg
jo
mov
(bad)
and
xor
in
(bad)
out
inc
dec
jecxz
sbb
sub
fst
sub
push
jmp
xchg
fld
stc
daa
cmp
adc
(bad)
mov
jo
nop
push
xchg
js
push
xchg
(bad)
ror
fwait
lods
jo
nop
jmp
arpl
ins
sbb
xchg
mov
xchg
mov
adc
cmp
scas
repz
test
nop
pop
jmp
repz
mov
pop
in
adc
aaa
and
xor
mov
add
scas
adc
retf
mov
clc
dec
or
test
test
sbb
mov
jns
iret
xchg
xrelease
mov
js
ret
xchg
test
pop
clc
lahf
jnp
adc
cmps
jns
call
lock
ret
cmp
fimul
pop
xchg
adc
push
(bad)
cld
mov
or
sbb
dec
push
loopne
jg
arpl
mov
std
mov
dec
xchg
into
fldcw
retf
mov
(bad)
mov
fld
es
out
dec
call
cmp
push
outs
xchg
xor
icebp
and
jo
inc
nop
pop
xlat
push
lahf
fmul
sub
pop
fidivr
lahf
ins
ins
jns
jmp
pop
push
sbb
jno
mov
aas
adc
ficomp
mov
or
(bad)
loop
adc
jo
dec
daa
call
ret
out
mov
pop
(bad)
mov
mov
lods
in
sbb
mov
jbe
mov
loop
xor
sar
xchg
fistp
xchg
adc
lock
inc
cmp
shl
mov
or
inc
jae
inc
inc
pop
in
mov
jge
js
jae
dec
and
jno
and
(bad)
or
sbb
xor
in
adc
(bad)
xchg
call
push
jl
movs
xor
call
lods
xchg
pop
repnz
push
inc
cmp
mov
mov
fild
cmp
add
cmp
sub
inc
js
push
in
in
push
and
add
inc
cwde
mov
sub
add
test
mov
ins
sub
push
sub
fs
push
aas
test
mov
push
xchg
dec
push
xchg
sub
std
xchg
ror
mov
pop
xchg
inc
data16
dec
jmp
(bad)
lock
sbb
xchg
retf
ja
pop
jb
xor
inc
cmc
jb
and
in
sub
xchg
mov
arpl
test
sub
jne
clc
cs
imul
and
loop
lods
jbe
add
popa
xor
in
mov
fnstcw
aas
or
mov
dec
cld
and
push
(bad)
jae
loopne
popf
clc
xchg
mov
mov
sub
daa
jmp
pushf
push
test
push
and
sub
in
mov
out
loop
and
jmp
jne
xor
push
enter
into
adc
push
push
das
test
xor
lods
or
(bad)
jno
jo
add
fisub
dec
pop
fst
adc
adc
mov
data16
pop
out
xchg
in
mov
pop
adc
mov
pusha
xchg
data16
or
clc
cmp
cmc
scas
into
arpl
idiv
xchg
adc
stos
jns
int
(bad)
push
lock
jo
push
(bad)
dec
sbb
cli
and
das
ret
cmp
add
in
les
adc
inc
cmp
push
xchg
pop
scas
push
sbb
inc
sub
out
pop
push
loopne
loop
sbb
scas
mov
out
mov
fst
aas
cmp
xor
cmp
dec
pop
and
shr
loopne
and
inc
je
cli
jne
mov
mov
inc
loope
mov
xor
cs
outs
adc
nop
jmp
and
ins
fincstp
jbe
ficom
sti
xchg
ffree
mov
dec
ret
dec
mov
jge
loopne
ds
loope
sub
jnp
lds
out
mov
(bad)
clc
or
jmp
or
mov
push
adc
mov
adc
gs
jae
das
cmp
pusha
(bad)
stc
out
pop
int
(bad)
stc
pop
test
and
jecxz
mov
shl
inc
mov
daa
outs
sub
adc
fwait
ret
(bad)
jmp
jb
ja
frstor
push
stos
sub
shr
inc
fcomp
mov
dec
shl
and
sub
dec
or
retf
das
loope
fisttp
outs
mov
push
pop
push
lods
mov
mov
loope
int3
in
pop
pop
mov
push
add
cmp
das
push
xchg
and
xchg
bound
push
sub
ins
adc
mov
popa
pushf
mov
jnp
adc
test
pop
cmps
repz
dec
outs
std
push
inc
mov
aad
and
sub
enter
retf
or
jo
jno
xchg
ins
mov
push
in
adc
push
xchg
in
adc
sub
fucomip
sahf
sbb
and
pop
loopne
inc
lods
pop
mov
jno
inc
call
cmp
test
mov
ror
aad
mov
xor
sbb
addr16
adc
xchg
(bad)
jbe
mov
or
dec
popf
push
add
pop
popa
mov
and
fdiv
clc
aas
mov
fmul
push
pop
ins
push
mov
ins
xchg
pop
xor
mov
jne
fnsave
ret
pop
jg
cs
adc
in
sbb
cmps
(bad)
cwde
cmp
mov
sar
mov
xor
(bad)
jmp
xor
inc
arpl
mov
jb
ror
daa
mov
and
mov
sahf
stos
cld
daa
and
dec
jne
test
dec
fild
je
das
fidiv
and
push
ret
lock
lds
sub
idiv
sub
jae
xchg
adc
(bad)
enter
and
sahf
fld
jbe
cmp
cwde
mov
int
push
inc
iret
add
lahf
xchg
push
imul
out
in
xchg
mov
hlt
jne
adc
loope
sub
mov
mov
fs
sbb
retf
xchg
in
xor
test
cwde
xor
pop
push
pop
cmp
outs
loop
mov
jnp
cmp
inc
xor
inc
popf
add
ds
into
rcl
jmp
arpl
inc
or
les
cmp
mov
es
fbld
int
adc
jmp
clc
clc
mov
sbb
adc
into
dec
dec
inc
test
push
pop
push
jns
jae
fld
fadd
aam
sti
mov
lea
pop
popa
nop
out
cmc
vpmovd2m
mov
mov
scas
loopne
popa
and
or
repz
or
repz
cmp
shr
sbb
test
mov
cli
mov
ins
fstp
jge
repz
enter
xlat
sbb
loope
lea
mov
jl
(bad)
cmp
xor
daa
push
inc
rcr
(bad)
jmp
jae
dec
jnp
push
jmp
cmc
inc
xchg
inc
outs
in
(bad)
fdivr
call
sub
pop
je
(bad)
gs
jns
int
mov
cmp
pop
dec
imul
fidivr
stc
add
add
pop
xchg
jo
mov
mov
xchg
jle
js
inc
or
inc
iret
dec
outs
jmp
stos
and
lds
jge
add
popf
mov
pushf
pop
xchg
dec
pop
out
outs
sbb
into
rcl
cmc
sbb
sbb
je
xchg
or
sub
xor
cmp
xchg
cmp
iret
jno
xchg
cmp
in
jp
movs
inc
xor
fcmovu
jo
sub
loopne
es
inc
mov
pop
sar
adc
push
mov
jne
cld
ins
sti
int3
ss
lods
push
sub
cmp
add
jp
mov
test
shr
pusha
xor
dec
and
xchg
jle
lock
cmp
loope
out
mov
cwde
push
push
mov
dec
cmp
pop
adc
ret
sbb
pushf
fild
icebp
out
imul
jge
loopne
sub
push
popa
std
jmp
iret
call
nop
xchg
jae
loope
sub
daa
mov
sub
jae
setle
adc
xchg
jnp
loop
jmp
xchg
jg
div
cmp
xchg
cmp
push
cmp
(bad)
iret
adc
mov
jno
jo
xchg
cli
fimul
in
push
aad
je
and
int3
push
aaa
test
dec
xor
repnz
mov
sahf
jns
in
sub
pop
jp
jmp
movs
gs
sbb
jmp
cs
and
pusha
sub
xchg
mov
js
fdiv
and
test
mov
and
xchg
retf
mov
retf
or
mov
dec
int3
push
fstp
mov
dec
test
mov
mov
mov
and
scas
in
and
es
lea
loop
stc
push
lods
dec
popa
and
dec
jge
in
xchg
jns
dec
lods
pop
ret
mov
je
mov
xchg
sub
push
jle
dec
mov
int
loope
aam
hlt
sbb
pop
pop
into
pop
mov
mov
lods
rol
dec
and
and
cmc
mov
push
iret
inc
retf
xchg
pop
inc
jne
push
ins
out
pop
scas
loope
mov
sub
dec
fidiv
and
lahf
pop
jg
push
sub
jp
adc
add
mov
jo
cwde
enter
hlt
(bad)
ds
mov
mov
xchg
jmpw
mov
mov
fs
fwait
jno
xchg
inc
sub
mov
aaa
sub
sar
mov
sub
dec
xor
xor
outs
in
mov
pusha
repz
pop
bound
adc
mov
adc
call
repz
loope
clc
lds
xor
add
sar
adc
push
adc
ss
cmps
sub
pushf
xor
movs
cmp
bound
out
call
dec
lahf
mov
mov
sbb
repz
xor
idiv
mov
xchg
and
pop
iret
lods
rol
leave
cmps
adc
mov
xchg
or
push
jge
jle
dec
retf
(bad)
jae
ror
mov
adc
test
jmp
push
cmps
or
pop
push
hlt
jnp
or
add
xor
fmul
mov
ror
(bad)
fidivr
and
pop
dec
sub
lods
sbb
sbb
pushf
xchg
jne
xchg
push
aad
outs
mov
repnz
xor
(bad)
leave
push
rcl
stc
xor
pop
(bad)
sahf
dec
xchg
cmc
outs
loope
data16
bound
xchg
test
cli
movs
shr
cmp
das
cld
or
enter
cwde
inc
jge
sti
imul
xchg
(bad)
dec
mov
movs
shl
jl
mov
push
mov
xchg
out
jp
sti
xor
ret
cdq
sar
inc
jo
sbb
(bad)
retf
daa
dec
xlat
sub
push
mov
mov
in
aaa
mov
test
enter
pop
xchg
jp
and
imul
and
jl
and
daa
das
cmp
add
pop
mov
xor
push
imul
scas
imul
push
xor
and
ss
xor
inc
inc
sub
(bad)
sbb
int
adc
popf
mov
mov
mov
mov
je
sub
jmp
cli
sub
cmps
and
fnstsw
add
ins
sub
push
hlt
mov
cmc
push
mov
add
xchg
call
or
mov
push
loopne
repz
mov
movs
cmps
sub
into
and
xchg
lahf
cmc
icebp
pop
xlat
outs
push
sub
sete
xor
mov
lods
repz
cmp
std
mov
mov
fucompp
mov
mov
loope
test
ds
xor
xor
mov
mov
pop
sub
retf
jle
mov
repz
cli
(bad)
jmp
mov
mov
xor
push
jg
mov
out
jle
dec
or
movs
mov
lods
lahf
adc
call
cmp
sub
or
enter
add
rcr
cli
add
mov
pop
inc
jae
mov
retf
xor
xchg
imul
sub
rcl
pop
jne
mov
mov
add
out
sub
aad
aad
xor
fnstsw
in
pop
cmps
(bad)
cli
sub
stc
ins
xchg
lea
test
inc
mov
ins
xchg
push
xor
enter
frstor
shl
dec
jne
cmp
and
push
xchg
inc
push
dec
xchg
arpl
rol
out
pop
jl
mov
(bad)
(bad)
sub
sbb
les
mov
(bad)
(bad)
in
(bad)
lods
in
(bad)
mov
and
jae
push
aaa
movs
push
and
mov
in
inc
sub
dec
xlat
mov
ficomp
mov
mov
int3
sbb
sub
mov
test
outs
in
and
and
imul
cmp
aad
lods
pusha
push
dec
ds
das
shl
imul
sub
xchg
fild
jecxz
add
nop
icebp
sar
pop
dec
mov
stos
sub
add
es
(bad)
stos
aam
jcxz
add
cmp
xor
(bad)
in
and
cmp
cld
sub
fdiv
jp
xchg
mov
cmp
ret
pop
in
pop
push
fcomp
mov
xor
xchg
movs
repnz
inc
(bad)
pushf
jne
pop
jp
inc
sbb
in
xchg
sahf
ja
mov
xchg
pop
jp
jmp
pop
test
adc
cmp
bnd
loopne
push
repz
add
das
scas
leave
jmp
dec
cmp
sub
ins
mov
int
jp
pop
adc
cli
add
mov
jp
movs
mov
xor
xchg
sub
and
xor
mov
fisub
jne
xchg
sbb
ja
call
push
adc
sbb
nop
iret
lds
add
retf
mov
adc
mov
dec
push
mov
mov
xchg
pop
(bad)
jmp
push
mov
xchg
pop
mov
or
inc
xor
fsub
jae
sub
jp
sub
mov
cmp
sbb
mov
dec
sub
clc
jp
xchg
loope
mov
mov
test
lds
cmc
mov
repz
or
aad
out
fstp
test
cmp
daa
pushf
and
xor
aam
jmp
and
pushf
test
xchg
push
in
cmps
or
cmc
je
icebp
push
fs
inc
test
xor
out
sti
ret
dec
int3
cld
addr16
loope
test
pop
aas
fidivr
lock
add
jne
inc
push
ret
and
push
push
add
dec
dec
add
adc
retw
adc
pop
and
sti
imul
sahf
mov
jmp
jp
mov
xor
push
adc
xchg
push
aas
jae
push
loope
xchg
pop
xor
ror
xchg
in
push
add
push
jge
cmp
mov
inc
pop
lods
sbb
dec
(bad)
fldl2e
fs
xlat
test
lods
pop
mov
mov
sub
xor
repz
stc
mov
xchg
push
(bad)
ffree
sub
fdivr
cmp
xor
int3
outs
jp
and
fs
xchg
sbb
movs
and
push
cmc
and
sbb
or
icebp
loope
or
and
dec
adc
xchg
sub
mov
vpavgw
sbb
push
or
in
test
out
aas
xchg
pop
jbe
xchg
mov
rcl
xchg
xchg
adc
xchg
std
push
sub
or
loope
test
jne
lahf
mov
jg
mov
in
mov
or
ror
sub
mov
pop
sub
jbe
mov
pop
push
les
in
xchg
cmc
aas
je
imul
pushf
enter
out
adc
jne
cmovbe
cmp
jle
xor
hlt
popa
stc
add
addr16
pop
xor
jbe
aam
in
cmp
shl
lds
xchg
or
pop
jmp
call
adc
stos
pop
sub
fwait
mov
stc
test
jb
push
add
test
jecxz
mov
mov
inc
push
add
sbb
jae
ror
mov
fild
jge
(bad)
xchg
std
stos
adc
xchg
inc
sbb
fild
or
and
mov
adc
sub
cmp
xor
jno
test
pop
and
mov
rcl
std
xchg
push
cmp
pop
div
or
lods
stos
pop
xor
xchg
fldcw
add
cli
movs
(bad)
movs
ja
and
jo
inc
js
mov
sub
test
pushf
mov
xchg
sti
push
lock
mov
lds
mov
shl
adc
inc
sub
xchg
lock
cs
es
in
cs
fucom
std
jl
cmps
and
sub
xor
loop
mov
call
pop
add
add
xchg
jge
sbb
xchg
sbb
mov
adc
xchg
clc
dec
pop
fisttp
add
scas
add
sbb
cld
sub
movs
add
jo
cld
pop
mov
les
lahf
cld
call
js
out
movs
or
mov
and
jl
paddsb
jle
pop
test
pop
mov
add
jle
xchg
mov
or
into
test
(bad)
stos
scas
adc
sbb
cli
xchg
dec
xchg
cmp
in
inc
call
(bad)
jnp
cmps
push
das
inc
mov
in
cmps
and
xlat
not
div
dec
(bad)
jge
add
jb
js
out
cld
xor
test
push
into
sbb
cmp
data16
and
or
hlt
jge
imul
mov
push
hlt
nop
mov
dec
pop
and
xchg
jl
sub
pop
imul
(bad)
imul
daa
adc
mov
cmps
rcl
cmc
mov
and
xor
jne
out
(bad)
push
lods
and
or
ins
add
xchg
dec
sub
test
jne
dec
jg
or
push
stc
pop
mov
inc
pop
and
mov
jb
mov
mov
cld
lods
xor
or
sahf
and
outs
cmps
in
mov
inc
cmp
outs
in
jns
pop
dec
adc
adc
sbb
jle
push
arpl
mov
aad
in
jb
pop
lods
jge
dec
dec
and
xchg
mov
inc
popa
in
pop
mov
and
push
test
push
mov
mov
pop
bswap
jo
dec
call
pop
inc
mov
inc
inc
outs
cmc
in
fwait
jnp
mov
data16
icebp
sub
xchg
pop
das
mov
lock
and
stc
add
in
into
dec
std
ror
scas
jo
(bad)
cld
dec
cmp
jnp
mov
or
xchg
pushf
adc
vpsrlw
adc
movs
gs
mov
add
mov
test
mov
sub
sbb
cmc
retf
sbb
lods
pop
push
xchg
enter
clc
xchg
ret
repnz
jae
mov
es
pop
adc
aam
xchg
loope
(bad)
pop
inc
stos
adc
jne
xor
jnp
scas
ins
imul
inc
in
adc
sbb
sbb
lods
sbb
or
inc
imul
je
xor
stos
mov
sub
or
shr
fild
(bad)
xacquire
adc
add
push
xchg
and
pmullw
bound
cmp
pop
add
cwde
jo
xchg
(bad)
pop
push
out
in
test
dec
adc
jmp
or
retf
cmc
cmp
and
(bad)
pop
mov
in
test
pop
idiv
pop
jle
jno
cmps
xlat
cmp
push
inc
sbb
enter
iret
xchg
stc
and
scas
sbb
retfw
inc
jp
or
sub
fwait
sub
xchg
call
movs
push
sub
sbb
pop
sbb
add
cmp
sar
xchg
mov
test
adc
push
push
(bad)
adc
loopne
out
and
add
inc
cmp
push
push
or
mov
lds
mov
data16
shl
icebp
in
ins
push
popa
ret
mov
add
jo
xchg
cdq
jne
xchg
push
popf
bound
xor
sbb
int
shl
push
pop
mov
repz
pusha
inc
nop
mov
sub
mov
add
sbb
(bad)
out
rol
xchg
ins
nop
sub
dec
jns
jno
(bad)
pop
ja
int
add
int3
lock
in
dec
ret
cld
dec
out
xchg
xchg
xlat
and
cmp
std
push
mov
push
movs
and
rcr
ret
clc
and
sub
pop
sub
cmps
pop
inc
imul
cmp
mov
pop
std
or
pop
jmp
push
mov
cs
sbb
xchg
xor
jg
and
sbb
mov
sbb
cs
xchg
or
mov
int3
jp
and
mov
inc
das
mov
xchg
xor
or
ins
aad
ins
xor
lds
dec
add
push
inc
pop
inc
jns
mov
mov
daa
inc
xchg
movs
addr16
and
pop
xchg
js
clc
(bad)
push
sub
rcl
dec
jbe
imul
ret
fild
jne
fcmovnbe
dec
fcmovnbe
fs
out
sbb
pop
js
enter
cld
sbb
popa
mov
lock
jl
adc
mov
and
pop
dec
retf
cmp
push
loopne
hlt
adc
imul
xor
push
sub
push
push
int3
jae
test
sti
test
stc
(bad)
inc
mov
mov
cmp
stos
adc
pop
sub
adc
retf
(bad)
in
inc
inc
jne
pop
dec
and
dec
mov
scas
xchg
pop
mov
sub
and
sub
scas
in
xor
std
jnp
mov
cmc
xor
pop
pop
add
fs
loope
test
stos
xchg
push
les
xchg
(bad)
(bad)
adc
xchg
arpl
push
mov
push
test
add
xor
into
pop
xlat
mov
push
xchg
adc
daa
pop
pop
je
push
mov
mov
push
dec
mov
sub
adc
xchg
xor
ret
int3
and
sbb
inc
xlat
movs
shl
nop
cmps
xor
and
fisttp
mov
and
stos
retf
dec
adc
adc
test
test
dec
sub
iret
xor
xor
ficom
loope
addr16
jge
jle
sbb
inc
cli
pushf
dec
idiv
xor
push
int3
es
mov
cld
jl
call
(bad)
jns
fild
clc
pop
imul
xadd
cmp
mov
mov
mov
jbe
xchg
loopne
pop
sbb
cmp
mov
cdq
mov
add
sub
xchg
js
in
shr
mov
mov
je
(bad)
cmp
adc
cmp
cmc
adc
xchg
jle
cwde
fwait
xchg
push
push
sbb
es
les
mov
test
sbb
test
jo
add
pop
mov
jl
lds
add
je
aad
xor
mov
xchg
xchg
dec
addr16
dec
fnstsw
dec
lds
into
cmp
in
ficom
paddw
mov
shl
ror
xchg
lahf
adc
xor
(bad)
(bad)
aam
and
shr
les
test
mov
cmp
adc
mov
dec
pop
das
mov
xchg
cs
or
std
(bad)
pop
les
adc
inc
mov
js
dec
push
sbb
xor
retf
jg
out
sbb
(bad)
mov
stc
mov
mov
cmp
js
fimul
jbe
cmps
(bad)
movs
(bad)
daa
cmovl
and
sub
sub
push
cmp
imul
call
or
loopne
rcl
dec
ret
cwde
xchg
enter
stos
sbb
out
dec
add
push
mov
dec
and
adc
ins
mov
push
xchg
mul
loope
pop
push
adc
call
jge
cmp
rol
push
je
sub
pop
repnz
adc
adc
add
bswap
dec
std
mov
test
pop
mov
xor
int3
lea
push
mov
pushf
pop
dec
loope
aaa
sbb
and
loope
push
sahf
mov
mov
daa
and
in
mov
(bad)
and
jne
fild
shl
cld
xchg
sbb
aam
xchg
pop
loop
push
lds
mov
ret
sub
or
jmp
into
icebp
es
daa
add
jp
jge
mov
sar
jnp
cmp
pop
shr
outs
mov
push
(bad)
mov
add
mov
mov
repnz
xchg
cs
jle
lods
push
js
adc
cmps
mov
inc
mov
mov
sub
mov
inc
rol
ror
or
pop
adc
pop
inc
jp
int
hlt
xchg
and
cmp
loop
(bad)
lods
xlat
sbb
push
xor
addr16
xor
sti
jl
add
xchg
and
xchg
push
repz
cmp
das
ja
and
scas
push
jp
jne
test
sbb
sar
stos
inc
rcl
fwait
sub
xchg
std
cmp
and
adc
stos
outs
repz
jmp
jmp
aas
jbe
push
jns
xchg
push
into
cwde
arpl
cld
push
pop
pop
(bad)
stos
icebp
or
xchg
shl
pop
cmp
out
jp
xchg
sahf
sub
in
call
xchg
xchg
lds
aam
xor
clc
cmps
iret
pop
in
ret
icebp
add
shl
or
mov
mov
jbe
pop
cld
je
int
and
outs
fs
mov
sub
push
(bad)
adc
inc
adc
int3
dec
pop
mov
loope
iret
shl
dec
lahf
outs
leave
ins
sbb
jmp
push
adc
push
sbb
inc
xchg
mov
les
dec
sub
push
pusha
and
push
fstp
xchg
mov
gs
pop
movs
dec
cmp
xchg
addr16
cwde
push
fmul
push
(bad)
into
movs
inc
nop
les
jae
mov
and
mov
scas
mov
pop
cwde
sti
jne
xor
sar
jp
out
cmp
jne
and
lods
aam
ins
cmp
and
cwde
sub
ret
push
xchg
(bad)
lods
loopne
xchg
or
add
stos
(bad)
(bad)
in
ror
mov
loopne
mov
jae
outs
and
aad
stos
add
sbb
xchg
jno
out
es
int3
or
fwait
jmp
ret
and
jp
mov
enter
or
jecxz
popa
cmp
mov
out
cmc
mov
jb
mov
dec
rcl
xchg
fiadd
cmps
and
xchg
into
xchg
xchg
mov
xor
je
jle
nop
add
xor
xor
pop
xchg
xchg
xchg
inc
jg
push
pop
clc
lock
dec
xlat
clc
sub
and
adc
mov
mov
jae
ins
(bad)
lods
and
jecxz
jnp
mov
std
mov
repnz
cmp
shl
leave
cli
ret
or
fs
fild
sbb
mov
xor
pop
stc
xchg
jp
fstcw
xchg
mov
nop
into
push
and
adc
sbb
inc
jmp
xor
lahf
scas
jge
xchg
test
stc
cs
cmp
mov
addr16
sub
retf
shl
stos
imul
dec
push
jl
js
je
mov
sub
fsubr
arpl
test
fnsave
out
arpl
rcl
or
rcl
dec
add
sub
pop
dec
xchg
add
or
rcr
cmc
push
cmps
cdq
cmp
mov
push
ret
cmp
sub
(bad)
js
sub
mov
dec
pop
push
push
or
adc
xchg
ss
test
lahf
dec
cmp
adc
ds
(bad)
sar
int3
xchg
out
cmps
cmps
les
hlt
(bad)
xchg
outs
stos
outs
push
gs
and
pushf
jle
lods
pop
push
add
mov
sub
pop
sbb
cmc
xchg
lea
fldenv
cwde
inc
data16
std
bound
movs
sub
daa
or
sbb
(bad)
mov
sub
push
aad
xor
call
sub
jg
cld
pop
lahf
cld
sbb
js
inc
lds
int3
cmp
mov
test
scas
fisttp
pop
int3
sub
pop
dec
or
in
add
dec
sbb
bnd
jns
xchg
cwde
fcmovb
push
arpl
add
daa
jp
xchg
or
cmp
inc
sbb
pop
xor
dec
retf
cmp
dec
dec
sbb
push
lds
xchg
pop
lock
fsubr
mov
cld
adc
push
loopne
adc
mov
nop
mov
jmp
xor
in
mov
or
or
ja
xchg
sar
scas
sub
shr
dec
out
fisub
mov
mov
(bad)
dec
mov
jecxz
ds
mov
sbb
ret
stos
lock
xchg
pop
mov
out
and
sub
jge
push
inc
jge
out
mov
loopne
and
xchg
movs
sti
push
pop
or
mov
sbb
icebp
repz
jge
test
shl
es
(bad)
push
int
pop
add
pop
movs
add
mov
ror
and
and
scas
push
cmc
and
clc
mov
test
mov
sbb
fcomip
inc
sub
sbb
mov
mov
movs
sti
and
icebp
jge
xor
and
or
lea
imul
test
ret
das
aaa
ficomp
xchg
cmp
push
push
sub
inc
inc
sar
clc
xor
icebp
js
inc
adc
std
cld
fimul
add
or
mov
dec
xlat
rcr
sbb
aad
cld
pop
aam
pop
test
loopne
retf
jne
es
fiadd
jbe
xor
sbb
mov
mov
push
pop
jp
push
mov
sub
fs
movs
sti
cmp
sbb
(bad)
adc
shr
imul
sub
sbb
fsubr
stos
inc
xchg
lods
rol
pop
mov
push
nop
fwait
push
rol
xor
movs
jle
call
stc
fbstp
mov
sub
aas
cmc
mov
mov
xchg
imul
mov
inc
sbb
addr16
inc
ja
dec
call
cmc
loopne
mov
push
push
iret
ret
cmps
xor
push
sub
pushf
jmp
inc
pop
or
pop
retf
adc
mov
pop
mov
push
mov
bound
jae
jmp
pop
and
push
push
cmp
dec
or
mov
lahf
cs
(bad)
cmps
mov
mov
mov
mov
xor
mov
stc
sub
xor
ins
push
(bad)
mov
popw
outs
pop
sub
loop
or
sub
dec
rcl
push
sub
retf
jns
stos
adc
xchg
sbb
call
and
in
daa
jp
jne
(bad)
inc
xlat
add
out
cmps
imul
cmps
sbb
dec
cmp
and
inc
addr16
mov
or
idiv
test
pushf
pop
xchg
in
loopne
push
jge
xor
jp
or
fistp
jmp
cmp
adc
gs
sub
ins
std
leave
dec
xchg
mov
outs
std
dec
sub
shl
out
push
push
lods
(bad)
sti
or
sub
cdq
popa
jne
js
xchg
aam
enter
add
test
xchg
jle
aam
les
cs
push
or
xor
fwait
jns
shr
dec
sbb
dec
adc
pushf
leave
ror
call
mov
ficomp
retf
psubb
mov
xchg
(bad)
loope
sar
in
pop
sbb
and
fst
mov
xchg
pop
dec
push
cdq
addr16
cmps
or
dec
adc
nop
jp
cs
pop
jb
or
imul
in
push
mov
jecxz
lods
jns
sbb
pcmpeqb
xchg
inc
xor
jnp
(bad)
imul
int
pop
push
xchg
jmp
call
ds
scas
xor
fst
xchg
(bad)
movs
movs
and
test
fsub
out
ss
ds
sub
addr16
call
jo
shl
fst
cmp
xor
xchg
into
out
test
or
mov
xchg
cmps
adc
out
jge
test
mov
dec
mov
jne
aam
mov
add
sti
sti
cs
cwde
retf
ss
fisttp
or
js
hlt
pushf
das
scas
ret
shl
adc
adc
cmp
or
shl
mov
mov
test
retf
xchg
ret
int3
dec
pop
cmp
cmp
imul
adc
test
sub
cmp
mov
cmp
jno
movs
mov
movs
int3
loopne
sbb
(bad)
xchg
lock
jle
dec
sar
adc
out
mov
dec
and
pop
jmp
mov
xor
std
into
sub
cmc
bound
rcr
pop
jae
arpl
sbb
loop
(bad)
fcmovu
mov
jp
ins
mov
inc
push
call
fs
jmp
jg
xchg
jne
repz
add
add
jl
scas
stc
stos
(bad)
sar
or
inc
and
sub
dec
push
call
psllq
mov
xchg
movs
cs
push
enter
dec
dec
loope
push
mov
lds
stc
push
mov
push
and
ret
ret
or
pop
or
call
repz
xchg
js
sub
popa
push
mov
stos
xlat
aad
repz
jno
xchg
cmp
add
rcr
outs
call
xchg
js
fstp
into
or
dec
push
data16
out
adc
xor
inc
sar
sub
sub
jne
loopne
cmp
mov
dec
fcom
test
(bad)
ins
sub
outs
or
cmp
popf
mov
or
shl
std
rcr
nop
cmp
dec
(bad)
(bad)
call
xor
pop
push
or
xchg
mov
rcl
xor
push
xchg
in
(bad)
aad
sub
ficom
(bad)
cmp
mov
cmp
sbb
mov
(bad)
cmp
scas
sub
jnp
or
sbb
rdmsr
mov
hlt
and
jle
xor
leave
leave
xor
sbb
sub
movs
retf
jbe
cmp
push
cld
sar
stos
in
jp
ret
cwde
bound
(bad)
fmul
loopne
or
std
fldcw
ja
shl
push
fwait
mov
mul
stc
add
jg
push
es
and
cmp
xchg
mov
push
outs
retf
lahf
pop
mov
and
mov
mov
aad
or
cmp
imul
mov
shl
cmc
pop
xor
ret
lods
inc
dec
movs
popa
pop
dec
xchg
cmc
loope
and
ret
fs
adc
jb
hlt
jmp
dec
xor
push
xor
mov
mov
push
mov
jae
sub
gs
not
loopne
mov
jne
jecxz
call
dec
adc
(bad)
aad
(bad)
aam
pop
call
int3
jns
cli
sub
fst
sbb
mov
pop
cmp
cmp
mov
xchg
imul
pop
pop
cmp
push
je
lock
cmp
xchg
fstp
cli
imul
pop
ins
pop
add
fnstsw
jg
pop
lods
pop
pop
mov
fsubr
div
jl
mov
sbb
cmp
cmps
add
pop
fcomp
dec
cmps
out
les
pop
push
and
(bad)
fdivr
in
and
mov
ins
out
fnsave
jg
dec
adc
jae
or
adc
cmps
mov
cli
jmp
mov
fcom
adc
mov
in
mov
jns
dec
int3
hlt
xor
in
sti
dec
adc
sub
push
adc
xchg
imul
xor
lods
mov
outs
fiadd
mov
pop
test
ins
dec
mov
xchg
jmp
aad
and
aas
or
retf
dec
jns
ret
int3
aas
fwait
push
mov
mov
push
add
adc
int
fld
aam
push
jo
shl
adc
pop
mov
xchg
cmp
sbb
mov
dec
xor
pop
xchg
sub
xchg
ror
push
jle
lea
and
jecxz
retf
push
sub
push
iret
jp
lds
sub
cmp
adc
jl
lahf
repz
pop
pop
cs
pop
hlt
jnp
pop
jnp
fisubr
ret
in
pcmpeqb
repz
xchg
rcl
xchg
add
call
stos
sbb
outs
out
sar
xchg
cmp
lock
test
cld
js
xor
fiadd
movs
sbb
jmp
adc
mov
push
mov
mov
mov
xor
jp
js
(bad)
cmps
sar
into
mov
cs
xchg
in
or
cmp
mov
inc
xchg
pop
push
jp
jge
dec
pop
sub
dec
repz
pushf
cmp
pop
cmp
or
pusha
sbb
in
jne
bound
cli
repnz
sub
cmp
mov
and
ss
sbb
add
mov
mov
and
nop
lods
pop
ins
test
int
addr16
jle
scas
pop
popa
or
clc
aam
xchg
xchg
xchg
and
test
hlt
test
stc
sysret
pop
jae
xor
mov
pop
push
rcr
int3
adc
mov
pop
jmp
xchg
sbb
xchg
or
jno
pop
int
mov
mov
push
repz
movs
js
mov
xchg
or
jg
add
sbb
sbb
ret
imul
jbe
sbb
dec
popa
or
sbb
out
and
outs
das
sub
push
adc
mov
sti
ret
enter
push
iret
(bad)
cmp
loopne
test
fdivr
call
inc
sar
add
push
js
in
mov
stos
bnd
cmps
sub
dec
sub
inc
push
mov
adc
fldcw
je
addr16
test
xor
ss
call
inc
clc
jmp
fld
mov
jae
pushf
mov
push
sbb
jmp
adc
cli
out
mov
xchg
dec
push
jle
pop
mov
(bad)
jp
xchg
dec
push
ret
addr16
jle
sar
sub
mov
sbb
mov
xlat
jmp
xor
jne
rol
dec
xchg
cld
push
jne
mov
ret
sub
pop
out
mov
pop
fld
jb
jnp
mov
adc
out
into
stos
ficom
loopne
cld
loopne
jge
es
adc
pop
sub
hlt
fucompp
dec
dec
cmp
push
test
mov
jno
mov
(bad)
fistp
add
pop
adc
mov
add
(bad)
into
and
dec
cmc
xchg
outs
clc
frstor
(bad)
push
shr
mov
mov
or
add
rcl
dec
mov
xchg
int3
add
test
enter
pusha
pusha
xor
pop
out
inc
jmp
cmc
inc
pop
int3
ins
stc
push
cmp
cmp
mov
adc
inc
inc
sbb
fild
loope
es
pop
sub
jecxz
and
bound
pop
mov
push
bound
sbb
push
fwait
mov
mov
std
es
inc
jb
addr16
inc
rcr
sub
mov
pop
clc
mov
int3
pusha
(bad)
(bad)
xor
sub
sar
push
in
iret
or
test
stc
jp
adc
inc
fstp
pop
xchg
pop
fist
xchg
mov
sbb
gs
xchg
mov
adc
push
mov
adc
add
and
rol
fs
mov
in
lds
cdq
mov
int3
call
xchg
inc
jl
fbld
xor
stc
sbb
sub
cmp
es
push
sub
and
mov
in
mov
stos
mov
out
mov
push
shr
jmp
add
jno
mov
outs
xchg
aad
jmp
mov
shr
outs
mov
ins
add
xchg
popa
ret
fwait
mov
xor
add
(bad)
fist
fnstcw
sub
xchg
push
stc
loopne
cli
push
std
leave
(bad)
fldlg2
cdq
repz
mov
jb
test
mov
jl
xor
daa
xor
mov
(bad)
jae
outs
lods
nop
rcl
fist
pop
gs
pop
repnz
jne
sub
cmp
sahf
call
mov
pop
js
fisttp
sbb
in
lds
adc
jnp
jmp
and
aaa
and
nop
pusha
test
jmp
mov
push
adc
sbb
das
push
ficom
and
push
push
add
mov
js
pop
xchg
push
sub
clc
call
xor
imul
in
les
add
xor
sub
cmp
repnz
lahf
cmp
out
out
jnp
add
fs
ins
jb
jge
adc
push
jno
pop
xchg
sbb
dec
pop
in
cdq
ds
cli
mov
xchg
popf
xchg
add
outs
sub
sar
jno
mov
jae
xchg
test
xchg
ret
add
cwde
in
pop
test
das
cmc
aam
cmc
jnp
bound
xor
add
jb
icebp
xor
shl
and
enter
mov
mov
jecxz
jo
jecxz
sub
loopne
pop
and
dec
push
into
hlt
cs
movs
data16
sahf
pop
mov
adc
push
test
fdivrp
mov
cmp
xor
sub
add
(bad)
arpl
(bad)
ret
out
push
mov
push
xor
lock
in
jne
jp
call
jl
repnz
push
loope
add
addr16
fsubr
fisub
mov
mov
and
sbb
or
or
push
and
sub
pop
xchg
pop
daa
xchg
pop
leave
lods
sbb
cld
ins
out
mov
xchg
cs
sar
js
fisubr
loopne
dec
daa
adc
psubusb
sub
push
test
pop
inc
jns
in
(bad)
pop
cmp
adc
cmovne
mov
int
movntpd
je
sub
adc
popf
xchg
sar
inc
ret
cmp
sub
lods
scas
mov
cmp
mov
in
inc
xchg
popa
push
pop
(bad)
adc
ret
movs
loopne
aaa
sar
sbb
or
ins
cs
test
loope
push
push
jl
adc
les
mov
in
idiv
iret
dec
inc
and
jg
rcr
fcmove
and
shl
inc
mov
cmp
and
push
pop
dec
retf
(bad)
jae
test
mov
inc
xchg
bound
movs
repnz
mov
mov
xchg
inc
imul
xchg
adc
inc
mov
dec
daa
xor
aaa
shr
rcr
jmp
adc
imul
mov
xor
dec
mov
dec
cmc
(bad)
and
cwde
aaa
fs
outs
adc
sbb
sub
test
xor
ins
daa
xchg
nop
test
and
xlat
int3
dec
ja
popa
fbld
clc
les
std
add
and
cmp
inc
push
sahf
or
aad
cmp
ins
popa
cmc
and
(bad)
es
and
repz
test
(bad)
jmp
xor
push
loopne
sbb
cld
rcr
sbb
ja
sub
adc
pusha
jmp
cmps
cli
movs
push
xor
popf
mov
cmp
je
sub
mov
jp
mov
push
(bad)
loop
mov
sub
btc
jmp
repz
ret
xchg
or
call
push
test
jg
test
jp
jmp
push
test
nop
push
push
inc
push
std
cmc
sbb
push
dec
xor
enter
std
(bad)
xchg
dec
xor
mov
arpl
rcr
scas
(bad)
and
aaa
push
stos
lods
jb
lods
outs
or
dec
sahf
push
adc
addr16
cmp
dec
js
(bad)
mov
(bad)
jp
mov
pop
cli
lea
mov
jecxz
nop
dec
jnp
fnstcw
jg
push
jne
xchg
clc
inc
daa
dec
xchg
cdq
mov
mov
push
repz
popf
xchg
or
pop
adc
ret
and
xchg
pop
push
nop
sbb
mov
std
cdq
push
sub
mov
dec
adc
cmps
xor
cwde
sub
add
repnz
and
and
mov
xchg
gs
test
fld
pop
int3
fmul
ret
lds
mov
dec
les
jbe
mov
cld
bound
xchg
pop
fnstcw
cli
inc
cmp
sbb
in
or
sbb
sar
sub
xor
sbb
mov
pop
dec
xchg
mov
dec
jnp
mov
hlt
hlt
(bad)
jmp
fdivr
add
mov
in
jl
mov
addr16
repnz
mov
jl
add
xor
stos
jge
sub
js
test
jmp
popw
inc
jl
mov
in
add
jl
stos
nop
call
jl
push
cmp
into
out
mov
pusha
data16
gs
cmp
xlat
xchg
movs
jnp
(bad)
dec
repz
ds
fidiv
test
mov
mov
jns
inc
sti
xchg
enter
test
push
test
pop
xchg
arpl
jmp
xchg
xchg
xor
aaa
in
jmp
int
and
inc
rcr
je
clc
fstp
cwd
dec
add
mov
cli
xchg
add
add
aaa
adc
arpl
xchg
test
mov
mov
imul
pop
adc
adc
inc
pushf
xchg
fs
test
mov
and
jl
adc
mov
daa
shr
test
pop
add
xor
inc
movs
sbb
pop
rcr
jne
xchg
outs
cmp
mov
les
pusha
pop
xlat
sub
cld
mov
cmc
ret
sbb
mov
fidiv
push
addr16
mov
mov
lahf
rcr
inc
xor
lods
xchg
outs
lds
in
inc
mov
sub
dec
inc
sbb
jb
daa
and
sub
push
mov
int
int3
xor
and
push
(bad)
int3
push
cs
(bad)
mov
shl
mov
hlt
(bad)
lods
outs
jmp
dec
stos
scas
inc
mov
loope
movs
mov
rcr
or
test
push
pop
nop
call
into
and
lea
fimul
cld
xchg
movs
pusha
leave
js
xchg
in
mov
inc
adc
mov
pusha
lock
sub
pop
cli
in
xchg
sbb
sub
out
stos
dec
sub
sub
(bad)
iret
mov
mul
push
lock
add
ror
cmp
jnp
jmp
pop
sbb
xchg
xchg
push
icebp
cmps
mov
cld
xlat
and
lods
jns
or
mov
xchg
push
push
mul
ret
mov
jo
jae
pop
cmp
push
jg
int
xchg
mov
jl
push
cmp
xchg
jmp
mov
outs
push
retf
das
call
pushf
sub
mov
lock
mov
dec
xor
test
lods
mov
je
sbb
retf
fs
and
adc
mov
in
sub
jbe
jne
sub
and
xor
std
jne
leave
cmp
sub
and
movs
or
inc
and
mov
push
dec
out
sub
les
cmc
mov
mov
jmp
cmp
mov
and
inc
mov
inc
pop
test
adc
jp
sub
sbb
and
je
in
js
push
pop
out
sahf
mov
and
mov
imul
sub
mov
shl
aad
repnz
add
mul
bound
shl
arpl
cmp
pop
xor
stc
push
aam
or
jne
jnp
cmp
mov
mov
xchg
pop
leave
adc
rcr
add
and
shl
call
adc
lds
ss
jle
pop
mov
xor
jno
rol
arpl
imul
mov
fild
mov
repz
pusha
outs
xor
mov
cmp
ret
inc
(bad)
enter
(bad)
mov
pop
jp
inc
lock
mov
cmp
js
outs
movs
push
mov
jmp
cwde
clc
iret
rcl
fsubrp
adc
push
mov
mov
push
mov
pop
dec
xchg
pop
js
jmp
test
ins
es
ss
daa
xor
xchg
(bad)
xor
bound
add
cmp
or
xchg
cmp
adc
mov
cld
rcl
and
lea
out
shl
adc
lea
push
bound
sub
das
mov
cli
jne
test
shl
mov
js
xchg
ja
adc
clc
out
push
jo
into
dec
inc
stos
mov
sti
adc
or
fadd
add
mov
bound
imul
mov
adc
div
jmp
lods
xchg
(bad)
fidiv
je
jecxz
outs
push
xor
cmp
fwait
test
xor
adc
pop
sbb
sbb
test
xor
imul
dec
push
(bad)
jge
mov
pop
xchg
fisttp
clc
arpl
mov
pop
sbb
mov
add
sbb
pop
pop
das
mov
pop
xor
push
inc
xchg
popf
push
push
dec
xchg
push
test
mov
ror
lds
mov
and
movlps
jge
jp
jbe
out
ds
std
call
mov
jb
sahf
daa
jbe
clc
test
jae
jo
pop
add
mov
fcom
aaa
xor
jg
sbb
cmp
fisubr
sbb
dec
mov
xor
cli
push
xchg
mov
pushf
jne
icebp
js
dec
fadd
aam
movs
adc
mov
call
ins
inc
test
sahf
cli
jne
xchg
jbe
jl
push
pop
xor
mov
xchg
xchg
push
sub
dec
pop
repz
ret
fs
cwde
imul
pop
ficom
cli
rol
icebp
pop
adc
(bad)
stos
outs
mov
push
jg
loope
div
pop
and
jns
(bad)
(bad)
mov
loopne
imul
lock
cli
mul
mov
inc
add
arpl
mov
add
add
push
jg
cmc
push
test
(bad)
add
mov
jne
jmp
dec
xchg
xlat
inc
test
fild
sbb
lods
imul
xchg
fucom
sub
test
xchg
dec
add
xchg
jne
jle
mov
mov
loop
xor
dec
push
cmp
sbb
sub
shl
mov
xchg
dec
mov
xchg
pop
add
dec
push
stos
cmp
je
int3
cwde
lahf
sbb
les
pop
cmp
or
push
inc
mov
cmp
std
mov
retf
test
iret
mov
sahf
adc
lods
inc
add
pop
inc
loope
adc
dec
mov
call
test
jp
and
jns
add
pop
inc
jo
in
sub
dec
fbstp
add
pop
pop
hlt
pop
call
sbb
hlt
test
mov
(bad)
call
ja
adc
loopne
ja
xchg
(bad)
test
rcr
stos
imul
dec
movs
adc
loop
ret
popf
mov
les
xchg
jge
jae
neg
sbb
xchg
or
loopne
retf
push
xor
adc
mov
xchg
or
sbb
fs
je
inc
pusha
jnp
daa
fwait
sbb
es
jle
cmp
jp
pop
in
stos
ins
in
and
inc
stos
shl
mov
inc
mov
mov
xor
pop
inc
mov
(bad)
jne
dec
sub
mov
cld
imul
cmp
test
push
leave
pop
in
pop
jle
cmp
sbb
jle
js
test
cmp
cmp
int3
pop
dec
or
jp
xchg
adc
test
pushf
push
pop
add
(bad)
jl
call
and
shl
xchg
sbb
and
es
push
outs
pop
add
pushf
inc
rol
cwde
aaa
jb
lds
mov
cmps
add
addr16
pop
inc
not
push
jl
loopne
push
scas
or
jl
aad
aam
les
push
xor
ffreep
js
cmp
push
test
adc
(bad)
add
inc
lds
pop
je
stos
mov
pop
ja
dec
dec
and
dec
dec
popa
or
push
pop
out
mov
jmp
and
iret
mov
cmp
jl
push
add
and
inc
mov
arpl
jmp
fisttp
cmp
outs
cmp
mov
cmp
jne
mov
test
pop
jge
imul
(bad)
ficomp
cmc
nop
push
sub
(bad)
mov
jae
xchg
xchg
aas
mov
std
dec
xchg
in
sub
sti
movs
jne
pop
jns
and
inc
call
sahf
mov
imul
dec
icebp
imul
xor
out
imul
lods
xchg
mov
icebp
loop
test
fstp
cmp
aas
cmc
xchg
pop
mov
and
dec
js
ret
clc
xchg
mov
das
adc
shr
test
in
(bad)
in
imul
add
mov
xchg
nop
or
or
cmp
repz
test
xchg
and
int3
fld
jne
mov
pop
loopne
fprem1
outs
out
loopne
test
inc
jmp
adc
lds
sub
sub
jl
clc
nop
sar
fiadd
dec
pusha
xchg
call
mov
jmp
jno
out
cdq
in
stc
jp
xor
push
mov
jmp
jecxz
push
xchg
pop
lahf
mov
or
icebp
ja
pop
dec
mov
jmp
add
dec
sub
test
dec
std
pop
push
ret
or
stos
nop
sub
test
movs
out
sbb
shr
cmp
jno
(bad)
cmp
jb
cmp
outs
in
jbe
jmp
xor
push
sub
xchg
in
hlt
xor
push
aaa
jne
test
mov
fwait
adc
(bad)
jae
xchg
xchg
jbe
push
retf
bound
inc
sub
pop
jae
jmp
repz
les
push
or
stos
and
(bad)
jmp
adc
add
jmp
cwde
mov
sbb
cmc
xchg
in
mov
inc
stos
mov
and
test
cmp
xor
ds
cwde
ds
test
xchg
dec
je
sbb
sub
arpl
push
mov
pop
sub
popf
xchg
dec
cmp
lahf
cmps
pop
dec
lods
cmps
in
mov
hlt
xor
inc
fild
jne
or
dec
xchg
ja
(bad)
jle
xor
push
sbb
(bad)
(bad)
in
push
shr
add
mov
pop
test
fisubr
add
(bad)
bound
adc
pop
mov
jno
retf
mov
in
adc
mov
adc
pop
bound
dec
jo
sbb
jge
xchg
or
lahf
aam
scas
jp
cmp
fwait
pop
sub
dec
xchg
inc
pop
aas
mov
loopne
cld
and
pushf
ffreep
bound
shl
stc
mov
add
repz
and
xchg
loope
dec
(bad)
shl
push
jmp
outs
addr16
xchg
ror
jge
push
iret
pop
icebp
fs
in
and
add
pop
ja
pushf
rcr
xor
cmps
push
cli
out
mov
test
or
(bad)
pushf
gs
nop
dec
outs
test
cli
rol
into
addr16
out
jp
mov
cmps
mov
fsubr
pop
cs
pop
mov
xor
jno
into
push
in
jae
mov
jl
push
xor
lods
xor
push
mov
sub
push
adc
xor
push
imul
push
jno
jle
daa
or
ret
retf
sub
cmp
fsub
cmp
mov
mul
clc
in
jbe
popf
mov
into
mov
dec
leave
cmp
loopne
or
xlat
push
icebp
adc
imul
push
mov
xchg
(bad)
out
xchg
or
dec
das
(bad)
xchg
mov
ds
inc
(bad)
push
add
sar
(bad)
mov
call
not
push
(bad)
loope
mov
icebp
mov
pop
push
pushf
mov
cs
data16
push
gs
add
clc
jae
add
cmp
push
movs
or
lods
mov
test
xchg
jmp
js
movs
ror
cdq
daa
jne
fst
xchg
mov
mov
in
clc
mov
dec
in
pop
and
mov
lods
cwde
dec
cs
push
mov
or
pop
clc
xor
adc
push
mov
test
mov
out
cld
stc
inc
ins
and
pop
out
xor
xlat
mov
and
mov
inc
leave
(bad)
jl
repnz
add
icebp
outs
fld
ret
pop
outs
push
ret
sbb
loope
xor
dec
pushaw
sub
mov
push
mov
dec
lods
scas
imul
loope
inc
sub
pop
jns
xchg
ror
jle
iret
add
cmp
icebp
out
inc
imul
xchg
push
jmp
sub
mov
xchg
mov
hlt
pushf
sahf
adc
ja
into
xchg
icebp
jmp
in
in
jp
xor
add
(bad)
loope
jbe
dec
and
pop
lods
jns
or
xchg
jo
retf
arpl
xor
cs
xlat
daa
cmc
repnz
xor
sub
(bad)
stc
mov
stos
fcmovne
outs
ins
sbb
xchg
mov
(bad)
lea
int3
sub
in
sar
mov
adc
(bad)
jmp
push
sbb
pop
jo
mov
push
(bad)
xchg
pop
push
mov
(bad)
in
icebp
xchg
ret
out
inc
loope
test
jmp
push
add
loop
xchg
sbb
clc
xchg
es
add
sub
jo
xchg
fs
adc
cs
adc
jb
xor
push
dec
addr16
fisubr
sbb
xor
adc
mov
lea
dec
adc
fcom
jge
mov
push
shl
ins
cmp
scas
mov
mov
add
mov
xchg
xchg
clc
dec
sbb
inc
je
neg
cli
shr
xchg
inc
add
push
pop
repz
jl
cwde
xor
jmp
xchg
sub
scas
jmp
icebp
cwde
movs
or
xchg
sub
jmp
xor
cmp
loopne
repz
push
sbb
out
daa
(bad)
fimul
sbb
jo
stc
or
sub
jp
dec
retf
inc
inc
out
scas
fnsave
add
sti
pslld
jnp
pop
adc
in
fwait
mov
push
loope
addr16
addr16
in
pop
popa
movs
int
fdiv
das
clc
repnz
pop
retf
ucomiss
retf
jno
add
jae
pop
push
int3
ja
outs
es
aas
pop
popf
jb
or
std
mov
jnp
pop
dec
cmps
fadd
test
fsubr
mov
rcr
xor
xlat
movs
cmps
and
or
jne
dec
and
push
(bad)
dec
jmp
adc
mov
dec
and
adc
add
jae
idiv
lea
xor
iret
retf
cmc
pop
push
ss
pop
xor
jecxz
mov
test
popa
xor
cmc
add
push
xchg
pop
xor
loope
ja
popf
xchg
inc
retf
outs
(bad)
int
imul
nop
fwait
cmc
jge
jbe
not
lds
nop
or
(bad)
cmp
or
xchg
movs
pop
pop
js
jae
mov
sub
shr
fdiv
mov
in
xchg
cld
push
icebp
jl
xchg
lea
lods
xchg
sub
ins
mov
sub
jo
adc
sub
inc
dec
add
cli
ins
xchg
das
pop
test
(bad)
cs
aas
and
push
mov
les
xchg
cmc
test
cmp
xchg
cmp
stos
sub
mov
repnz
adc
iret
adc
xchg
jl
test
jmp
mov
or
out
sub
inc
data16
dec
cmps
hlt
imul
and
or
iret
or
and
adc
neg
daa
cwde
and
dec
dec
cmp
pop
pop
sub
cmp
in
adc
pusha
xor
xor
or
addr16
stos
xor
dec
mov
pop
repz
ret
ins
pusha
adc
or
jns
test
js
and
out
cli
adc
daa
xor
cmp
fcomp
jmp
lahf
cli
mov
sub
clc
cmc
sub
jl
in
mov
inc
pop
ror
cmp
les
out
enter
mov
pop
jg
in
sub
sub
mov
cmp
scas
mov
xor
pop
and
xchg
sbb
ret
dec
and
cli
add
jno
add
inc
repnz
hlt
call
ret
rcr
jmp
stos
lods
pop
stc
jmp
mov
les
pop
test
dec
xchg
dec
dec
(bad)
mov
adc
neg
std
jne
enter
inc
adc
mov
jg
dec
jae
mov
out
sti
push
mov
push
xchg
cwde
adc
mov
pop
daa
cld
adc
lock
in
fiadd
push
push
jg
ds
xor
test
pop
daa
push
sbb
cli
xchg
test
stc
adc
sub
cmp
pusha
xchg
(bad)
loopne
fsubr
jo
imul
ds
adc
ins
cld
in
xchg
pop
fdivr
fcomp
pop
stos
jle
jl
hlt
mov
adc
xchg
es
xor
xor
cmc
or
inc
fidiv
scas
adc
mov
pop
pop
ins
push
and
push
dec
test
es
or
mul
jp
pop
mov
xor
adc
cmp
cmp
jmp
mov
data16
mov
xor
jo
ds
ja
jne
mov
or
dec
jg
lods
out
xchg
sar
iret
mov
jecxz
and
inc
jae
lods
jae
sbb
sbb
in
sar
jecxz
sar
cmp
xchg
inc
test
hlt
push
push
jp
jmp
add
mov
outs
js
xchg
shl
popf
xchg
push
dec
inc
cmp
lahf
lock
and
movs
mov
leave
jp
sub
hlt
sbb
sub
sbb
xchg
out
push
push
mov
sti
ins
xchg
test
lea
(bad)
xchg
rcl
xor
leave
sti
inc
fimul
arpl
jg
test
or
mov
sti
out
aad
out
cmps
addr16
nop
test
push
sti
aad
in
push
push
pop
inc
shl
jg
adc
jmp
adc
pop
xchg
(bad)
stos
sub
sbb
adc
add
mov
ficomp
fbld
rcl
pop
mov
dec
int3
inc
xchg
in
fisttp
mov
push
mov
leave
push
dec
in
inc
ins
xchg
scas
loopne
xchg
mov
adc
aam
pushaw
xchg
mov
cmp
jae
lahf
push
sti
icebp
retf
dec
mov
iret
or
adc
out
sar
pop
loope
mov
sar
jbe
xor
jo
(bad)
jno
mov
adc
loopne
push
lds
xchg
mov
sbb
dec
mov
add
mov
stos
ret
(bad)
sbb
in
mov
adc
(bad)
and
cmp
retf
or
sbb
pop
push
and
inc
(bad)
(bad)
test
dec
push
sub
imul
jg
je
push
push
mov
out
xor
std
mul
aaa
lods
dec
pusha
pop
adc
rol
push
jmp
xor
bound
xchg
pop
xchg
jmp
test
pop
mov
repz
push
das
cmp
sti
pop
pusha
ins
mov
and
in
xchg
mov
aam
push
cmp
loope
sbb
push
cdq
mov
ret
cmps
mov
fcom
shl
stos
idiv
test
adc
add
leave
mov
imul
xchg
add
mov
adc
jmp
(bad)
fcom
jmp
lock
leave
and
out
nop
xchg
xchg
outs
mov
mov
xchg
mov
jg
and
pop
mov
lea
shl
js
in
sbb
jmp
jmp
cmc
cdq
pop
mov
xchg
sbb
je
movs
das
xchg
and
ret
sbb
mov
test
sbb
sub
dec
pop
push
mul
and
adc
les
repz
pop
fmul
xchg
xchg
in
fcom
xchg
inc
leave
gs
or
cli
push
sub
cld
hlt
das
xor
aad
mov
loopne
stos
sub
mov
enter
(bad)
cmp
xchg
out
push
daa
and
loop
test
xchg
pop
clc
xchg
lods
les
xor
dec
mul
jnp
test
fcom
mov
sbb
mov
mov
xor
sbb
hlt
repz
dec
and
mov
mov
ret
jne
mov
stos
push
adc
dec
xchg
mov
mov
mov
fimul
int3
repz
ins
ror
stc
in
sub
mov
xchg
xchg
mov
call
ret
test
adc
add
push
cmp
sub
test
add
movaps
ja
jp
mov
fiadd
mov
or
jns
sub
jb
ds
jbe
jbe
nop
sub
or
ins
stc
jecxz
cmp
mov
out
dec
xor
dec
add
cmps
xor
xchg
je
push
loopne
scas
loop
idiv
dec
push
xor
or
cld
inc
cmps
imul
aad
loopne
mov
fs
popf
inc
fadd
add
popa
inc
mov
jns
mov
mov
mov
in
jae
stos
cmp
(bad)
les
repz
jmp
test
dec
mov
push
sub
sub
lds
mov
cld
neg
push
xchg
ret
jp
xchg
stos
cmp
jmp
lods
imul
inc
(bad)
lock
cmp
aam
xchg
push
jns
je
mov
push
retf
mov
jmp
fwait
mov
out
xor
out
adc
jne
dec
add
test
inc
and
add
mov
cmp
lods
lahf
cmp
sar
sbb
mov
push
jns
pop
(bad)
push
jmp
mov
push
mov
loopne
cmp
xchg
dec
cmp
mov
scas
mov
js
sub
(bad)
jmp
dec
jno
mov
mov
ja
lahf
loop
mov
pop
je
sub
mov
sub
movs
ficom
sbb
mov
fcmovnbe
jae
cli
mov
mov
jnp
les
jl
adc
ins
icebp
xor
add
mov
inc
cld
scas
cdq
or
ret
movs
sbb
cmp
in
daa
out
mov
test
cmp
fwait
push
dec
ret
call
pop
sbb
xor
fst
cmc
cmp
jns
sub
or
dec
jecxz
cwde
ins
jns
jmp
jo
xor
mov
mov
into
push
or
add
inc
ficomp
sbb
pop
sub
nop
adc
cs
mov
pop
fs
mov
cmp
pop
sub
nop
cdq
adc
arpl
repnz
stc
jmp
inc
mov
pop
adc
sub
xchg
xchg
xor
xchg
inc
call
sub
or
(bad)
cmp
mov
cli
mov
addr16
cmp
dec
cmp
and
mov
loop
cmp
xor
jbe
pop
cmps
adc
pop
cmp
in
sub
or
ficom
mov
pushf
push
clc
xchg
stos
scas
sub
cmp
xchg
or
and
mov
mov
(bad)
push
pusha
js
div
hlt
jb
mov
cmp
(bad)
icebp
cmc
xchg
xchg
loope
test
ror
jmp
mov
hlt
nop
mov
pop
imul
inc
loopne
push
sbb
test
add
js
jns
or
mov
xchg
lahf
or
push
xchg
test
inc
add
jg
mov
cmp
pop
dec
(bad)
pop
and
popf
inc
call
fwait
xchg
mov
cmp
sbb
dec
hlt
inc
mov
pop
out
sbb
cmp
stos
imul
adc
mov
sub
mov
add
mov
jnp
sar
gs
retf
(bad)
jle
and
mov
or
js
fist
xor
jg
mov
mov
leave
adc
loopne
push
push
stos
jmp
popa
xor
call
ret
xor
push
nop
dec
jl
cmps
sub
jmp
jp
shr
dec
xor
sub
jns
xchg
adc
pop
loopne
mov
push
dec
daa
cmp
fst
jg
repnz
mov
cmp
popa
add
shl
test
xchg
mov
dec
sub
add
pop
add
pusha
out
or
into
enter
jmp
(bad)
mov
dec
loope
adc
mov
lods
fadd
cld
mov
push
adc
data16
xor
or
sub
lahf
aad
mov
jmp
push
push
mov
clc
xor
aam
das
(bad)
jnp
adc
gs
ins
xchg
pop
add
xchg
fidiv
stc
cmc
pop
mov
(bad)
cmp
mov
icebp
stc
inc
es
mov
cs
xor
imul
arpl
loope
pop
popa
sub
stos
inc
sub
ror
cli
mov
dec
push
in
sbb
cmp
icebp
jnp
mov
pop
push
mov
jmp
xchg
ja
and
fprem
jle
pop
jp
je
or
inc
xchg
div
cmp
inc
enter
(bad)
cmp
mov
mov
or
pop
inc
imul
xor
sahf
aaa
cmps
icebp
les
shl
shl
xchg
push
adc
jae
xor
jle
inc
jl
cmp
in
xchg
cmp
cmps
int3
mov
push
jp
cdq
xchg
out
test
inc
mov
sub
call
mov
jl
pop
sbb
shr
loopne
jbe
and
pop
jns
stos
mov
mov
sbb
js
inc
(bad)
push
sti
hlt
or
stos
jae
cdq
(bad)
jp
pop
cmps
stos
xor
cmc
popf
mov
or
fbld
addr16
xlat
cmp
ja
dec
out
pusha
sub
xchg
sti
test
and
dec
outs
sub
push
fs
jo
xchg
ins
xor
xor
test
cs
jne
add
imul
xchg
and
retf
sti
xor
call
dec
adc
cdq
jo
fs
test
push
sbb
jne
inc
push
cmp
cdq
test
pmuludq
adc
lea
scas
xor
aaa
shl
pop
adc
jbe
xchg
(bad)
or
setne
test
add
jle
or
push
dec
pop
ins
les
mov
loope
(bad)
js
addr16
xchg
xchg
stos
and
es
ds
and
(bad)
dec
cdq
ret
cmps
mov
mov
or
mov
sti
pop
push
repz
imul
fwait
sub
push
xor
adc
call
push
inc
std
addr16
jg
fs
sub
loope
xor
inc
ret
mov
cmp
cmp
xchg
cld
ja
imul
ins
cmp
ins
xchg
push
cmp
test
jmp
loopne
enter
data16
rcr
pop
call
xchg
arpl
pop
add
lods
pusha
pop
cdq
arpl
sub
cmps
and
ja
push
mov
call
push
pop
ret
stc
dec
xchg
xor
fdiv
sub
push
pop
xchg
in
lods
mov
loope
pop
xor
mov
sbb
ja
in
cmc
ret
ss
das
mov
push
stos
call
(bad)
mov
push
daa
loop
cli
dec
push
xor
sti
or
cmp
inc
hlt
rcl
retf
(bad)
xchg
sbb
or
mov
call
das
xchg
xor
pop
shr
out
loopne
repnz
rol
ret
jg
xchg
sub
dec
sbb
mov
jle
std
adc
outs
xor
cmpxchg8b
jmp
mov
je
imul
into
jl
adc
mov
dec
adc
sbb
fisttp
clc
ret
arpl
outs
jb
aad
aad
adc
mov
(bad)
sbb
sub
inc
and
or
or
and
add
loope
jne
add
pop
sahf
adc
out
mov
pushf
aam
cmp
pop
in
cmp
ror
xor
inc
xchg
sub
cmp
fld
dec
addr16
sub
mov
xchg
test
cmp
jecxz
push
mov
les
(bad)
mov
data16
fmul
mov
pop
scas
sbb
jge
xchg
inc
cwde
popa
mov
push
scas
push
pop
mov
cmc
jb
jne
xor
xor
or
mov
jp
sub
(bad)
inc
inc
jae
jmp
mov
repz
(bad)
xchg
push
fdiv
push
js
les
xchg
clc
xchg
stos
stc
jle
pop
jge
fnstsw
inc
aad
in
outs
neg
jo
les
mov
xchg
mov
push
dec
xchg
je
push
retf
es
cmp
pop
test
adc
sar
jge
and
pop
mov
xchg
sbb
and
xchg
je
pop
xchg
out
ins
ret
dec
je
push
xchg
mov
(bad)
test
(bad)
sbb
adc
int3
mov
jo
mov
mov
cmp
inc
xor
sub
add
push
out
iret
dec
or
or
outs
adc
jmp
dec
add
sbb
push
mov
mov
adc
inc
push
sub
movs
push
in
adc
dec
push
in
repnz
cmp
dec
cmc
push
or
mov
int
push
mov
push
jp
mov
sar
and
aad
push
loopne
hlt
cmc
xchg
dec
dec
jo
jae
test
push
cdq
fisub
mov
sub
jae
add
adc
retf
mov
dec
div
mov
jne
sub
sub
repnz
push
xor
das
push
stos
call
imul
and
lods
nop
xchg
iret
and
in
cmps
ret
or
jge
adc
scas
ins
mov
jge
sti
outs
cmp
ror
clc
movs
or
fdivr
xor
cli
cld
mov
rol
and
sar
mov
popa
hlt
repnz
cmp
mov
stc
loopne
and
loope
dec
xchg
js
sbb
test
xchg
fst
push
movs
push
dec
push
sub
shl
mov
fdivr
es
sbb
cmp
adc
daa
xchg
ins
iret
pop
lea
cmp
jmp
push
mov
leave
xchg
add
test
cmp
scas
out
aam
cs
int3
bound
jnp
outs
std
mov
jae
cld
xor
fstp
dec
cld
xchg
retf
loopne
jae
(bad)
pop
adc
add
xor
loop
daa
or
or
ja
movs
xor
push
rol
add
les
push
mov
mov
dec
push
mov
in
sub
add
je
mov
std
add
lahf
js
test
cdq
ins
inc
cmc
fwait
cwde
dec
and
jne
mov
lods
call
sub
push
cwde
cmp
out
jne
sub
sti
sbb
jae
cwde
sbb
aam
aam
(bad)
pop
out
and
(bad)
jp
adc
test
aam
pop
xor
jp
or
xchg
push
lea
div
arpl
pusha
xchg
dec
scas
aaa
push
adc
jle
xchg
inc
pop
jo
cmp
sub
not
fdivr
punpckldq
cld
mov
dec
cwde
es
mov
test
jmp
js
mov
push
aam
out
and
pop
jle
cs
jmp
mov
retf
or
jo
fdiv
xchg
xor
in
push
mov
and
jp
push
pusha
xchg
adc
test
xchg
pop
ins
fs
fstp
jbe
mov
jecxz
add
lock
mov
vmovdqa
lods
fdiv
icebp
into
add
mov
test
xchg
and
add
aam
ja
jmp
jge
fimul
inc
std
outs
xchg
imul
xor
in
jecxz
mov
pop
mov
test
jl
icebp
cli
rep
mov
mov
jbe
sub
sub
mov
js
ja
popf
in
push
cmc
xor
add
or
loope
cs
pop
inc
xchg
sub
je
mov
jo
adc
mov
aam
cmp
push
xchg
test
out
jmp
pop
sub
fs
sub
xchg
xor
push
imul
adc
test
cmps
sbb
cmc
pop
pop
mov
sti
les
xor
mov
cmc
cwde
mov
sbb
(bad)
xchg
in
push
fstp
and
mov
inc
xchg
enter
sub
(bad)
fnstsw
pop
cmp
js
sbb
rol
jp
fcmovnbe
out
lods
jbe
ret
daa
xchg
call
sbb
out
dec
mov
xchg
repnz
enter
push
sti
in
outs
stc
xor
and
loopne
mov
out
push
xchg
xchg
xchg
test
in
in
clc
cli
and
sbb
(bad)
in
jo
mov
xchg
add
xor
xchg
imul
in
pop
out
js
and
mov
cwde
out
rcr
mov
jmp
or
jnp
or
scas
mov
mov
and
sbb
mov
sbb
jno
mov
in
loope
mov
cmc
inc
sub
pop
mov
nop
mov
inc
mov
jle
(bad)
in
fs
mov
push
xchg
pop
and
rcr
js
jns
cmp
(bad)
and
mov
jno
and
adc
dec
xchg
dec
jmp
out
sbb
and
cmp
mov
cmps
je
loopne
adc
out
fs
xor
push
sub
imul
cmp
pop
rcr
pop
and
retf
cmp
mov
std
xchg
into
add
sahf
mov
enter
imul
or
xchg
nop
into
ja
sub
loop
jne
xlat
mov
mov
adc
int3
lods
sub
ds
ficomp
out
or
jle
(bad)
mov
push
lods
xchg
cld
push
ror
pop
dec
jmp
sbb
in
mov
sub
idiv
into
dec
in
xchg
out
mov
mov
mov
sub
ss
out
call
inc
sub
scas
pop
xchg
adc
sub
jmp
div
xor
fisub
xor
imul
stos
push
fnstcw
cmp
add
addr16
outs
fwait
int3
and
rol
pop
pop
mov
sar
sahf
cmp
mov
mov
mov
jmp
jp
retf
xchg
sub
pop
sbb
stos
xchg
xor
xchg
aad
pop
pop
lahf
xlat
mov
sub
fist
xor
rol
push
or
xor
lock
sbb
out
fld
push
pop
inc
cmp
jmp
cmp
fidivr
inc
stos
shr
ret
pop
pushf
mov
retf
mov
shr
dec
test
das
out
(bad)
out
iret
dec
out
pop
pop
and
jl
cmp
retf
jne
leave
outs
jnp
out
push
sub
mov
cld
xchg
movs
and
jp
arpl
sub
test
xchg
push
mov
test
mov
jb
test
sub
das
push
and
fsubr
pop
push
sbb
repz
test
lods
inc
lods
push
mov
jbe
stos
jae
(bad)
sar
jle
jp
jmp
xor
test
pop
(bad)
jge
xor
fsub
xchg
mov
(bad)
xchg
adc
push
xchg
dec
rcl
ins
sbb
into
or
mov
xor
fidivr
hlt
xor
jge
lds
popf
mov
jg
add
pop
jnp
jge
data16
hlt
jecxz
push
push
mov
ffreep
scas
clc
test
in
enter
hlt
es
mov
jecxz
lahf
and
or
js
add
addr16
stos
xor
into
mov
ds
and
cmps
sub
pop
mov
adc
xlat
jl
push
or
pusha
push
xor
jns
add
push
pushf
or
data16
movs
neg
inc
and
xchg
daa
in
pop
push
xchg
or
retf
push
imul
xchg
cmp
adc
call
push
inc
ror
jle
mov
outs
push
popa
pushf
call
pushf
or
nop
leave
push
push
jle
push
pop
hlt
mov
imul
std
xor
pushf
es
mov
and
dec
call
push
icebp
int3
adc
aam
ds
jbe
mov
jl
adc
hlt
or
imul
cmc
mov
dec
scas
push
outs
sub
dec
pushf
dec
jmp
or
iret
cld
bnd
out
repnz
cmp
cmp
jne
fdiv
and
push
sbb
std
cmp
sar
xchg
pop
mov
add
sbb
xor
push
les
jmp
or
pop
xchg
mov
ret
and
add
jl
dec
daa
pop
add
pushf
repz
(bad)
push
cmp
dec
adc
lods
pop
jbe
pusha
in
sbb
(bad)
out
fcomp
sbb
jmp
mov
jp
aad
in
into
push
(bad)
mov
les
test
enter
add
jmp
cli
or
add
mov
dec
xor
jp
xchg
pop
loop
in
cld
dec
rol
mov
sub
mov
pop
add
jmp
call
mov
cmp
das
jne
dec
jnp
je
ins
jne
mov
scas
add
sub
jns
outs
fistp
jg
dec
xchg
test
loopne
call
add
divps
imul
mov
sub
mov
xor
hlt
mov
in
adc
sbb
inc
push
sbb
xchg
je
xor
icebp
mov
sub
mov
les
and
int
loope
push
movs
ret
repnz
pop
jecxz
jp
js
ins
mov
bound
stc
ja
scas
push
js
mov
mov
xchg
std
or
es
inc
leave
mov
and
icebp
cld
push
outs
push
jp
test
mov
popa
iret
or
aad
mov
sbb
lock
xor
(bad)
imul
xchg
cwde
cmc
xchg
push
ds
sti
dec
inc
(bad)
push
sub
jo
mov
and
mov
add
or
add
jg
sbb
jmp
xor
repnz
mov
jle
inc
xchg
lock
add
call
test
imul
jnp
adc
dec
pop
or
dec
mov
lahf
out
push
mov
jle
cmp
les
movs
mov
lock
push
jbe
imul
and
dec
retf
movs
inc
pop
push
shr
fsubr
xchg
xchg
xor
out
retf
add
jb
sbb
fstp
loopne
pop
fs
cmp
shl
mov
xor
push
fsubr
push
fdivr
out
mov
xchg
ja
sub
les
lea
cwde
outs
dec
pusha
stc
cwde
hlt
mov
pushf
test
jae
movs
(bad)
jne
xchg
out
mov
jg
lahf
xchg
fild
repnz
mov
cmp
sub
push
jb
sbb
bound
jle
nop
mov
es
push
and
mov
dec
add
loopne
push
cmp
pop
cwde
push
imul
das
push
out
pop
xchg
ret
mov
xchg
(bad)
mov
mov
daa
in
jecxz
aas
enter
jb
mov
out
das
mov
sbb
mov
pop
xor
push
and
aam
xor
and
mov
ret
inc
adc
test
xchg
xchg
push
cmp
ja
xor
jno
jl
mov
fsub
mov
jge
repz
jmp
adc
rcr
xchg
loopne
add
dec
sbb
js
cwde
adc
and
aad
mov
aaa
sbb
ror
jae
jp
xor
inc
push
push
fnstsw
push
enter
mov
test
adc
iret
pop
sub
adc
shr
cwde
mov
cmp
xchg
call
js
fmulp
jmp
rep
dec
mov
repz
leave
jp
push
xchg
mov
add
sub
jmp
jge
sbb
and
sub
mov
js
xchg
pusha
xor
adc
cmc
cmp
xchg
cwde
rcl
xor
lods
fst
xchg
clc
or
daa
test
rcr
out
mov
push
dec
jmp
mov
xor
hlt
mov
jns
in
call
xchg
mov
and
and
stos
dec
je
push
mov
jb
in
inc
jae
fiadd
mov
jge
xor
icebp
or
fnstcw
mov
jmp
out
arpl
adc
cmps
and
sub
out
add
pop
cmps
push
ins
rol
(bad)
and
jmp
dec
or
(bad)
and
rcr
xchg
mov
std
jge
adc
jae
cmp
inc
pop
popf
xor
mov
mov
sbb
xor
or
(bad)
pop
mov
or
jnp
push
xchg
and
xor
xchg
push
js
movs
xor
jmp
cdq
mov
jl
in
in
aas
repz
jge
add
cmp
mov
test
mov
(bad)
push
pop
mov
xor
iret
push
and
push
ins
test
dec
pop
mov
pop
push
aad
leavew
sub
call
mov
push
and
xchg
adc
mov
cmp
mov
pop
add
stos
xchg
fdiv
and
xor
ret
ins
push
fldcw
add
imul
jbe
push
pusha
xchg
pop
(bad)
das
xlat
inc
dec
sbb
dec
mov
push
xor
aam
mov
pop
jle
ss
add
fld
test
ja
add
hlt
dec
stc
xchg
cmp
mov
rol
ror
retf
or
cdq
ins
sub
jmp
data16
adc
nop
stos
fdivr
push
dec
inc
loope
call
add
daa
xchg
push
daa
(bad)
sbb
sub
mov
test
or
sub
cmps
pop
std
aam
call
retf
hlt
xchg
and
std
add
and
xor
int3
sti
xchg
inc
mov
sub
cmp
or
pop
or
cld
(bad)
mov
inc
loop
ficomp
mov
dec
ror
bsr
or
pop
dec
jg
aam
out
stc
rcr
sub
pop
mov
cmp
jp
cs
ret
cld
adc
pop
mov
scas
push
xchg
xor
or
add
xchg
test
inc
stos
fsub
dec
test
pop
jecxz
mov
les
ins
nop
int3
(bad)
xor
or
mov
push
inc
adc
dec
xchg
pop
and
dec
jge
repz
das
xchg
xchg
retf
cmp
lock
(bad)
mov
fcomip
push
inc
dec
sbb
lock
push
jo
jecxz
jne
or
adc
pop
jb
jmp
sub
adc
jg
sbb
mov
arpl
ror
cmps
xchg
push
movs
mov
mov
push
daa
adc
or
imul
push
xor
mov
ret
push
jmp
in
push
popa
ins
jge
ret
cmp
mov
cmps
cmp
icebp
adc
mov
outs
popa
dec
and
jb
sub
mov
mov
mov
dec
jno
int3
push
in
popf
(bad)
sub
xchg
cmp
outs
ja
test
retf
pop
cmp
loope
xchg
aam
out
in
mov
ja
cmp
jns
or
sub
dec
loopne
sub
push
push
sub
xor
popf
dec
cmp
repz
loope
dec
lea
jmp
sub
mov
rol
push
pop
std
mov
ins
add
xor
sbb
nop
xchg
jmp
movs
sub
mov
add
mov
push
xchg
push
push
xchg
addr16
pop
xchg
movs
cmp
popa
gs
pop
xor
lock
pop
aad
pop
adc
mov
std
fcomp
and
jp
cwde
popf
xchg
jno
shl
cli
(bad)
rcl
mov
stc
push
daa
sbb
cmp
or
jo
xchg
adc
xchg
xchg
sahf
imul
push
push
mov
inc
movs
jg
scas
(bad)
fisttp
(bad)
cmp
je
and
cmp
inc
xchg
pop
xchg
mov
mov
inc
fldpi
imul
mov
push
cmp
scas
sub
jno
js
leave
mov
jmp
in
imul
mov
jae
test
dec
hlt
cmp
mov
xor
mov
xchg
pop
push
ins
cmp
icebp
add
pop
and
mov
(bad)
stc
mov
into
hlt
inc
pop
xor
xchg
test
mulps
cld
fs
cdq
popa
xchg
test
in
mov
out
adc
pop
mov
mov
mov
adc
jae
jo
call
lock
xor
(bad)
mov
jne
fimul
pusha
jl
scas
in
repnz
push
jmp
cmp
pop
fcomip
pop
inc
add
jmp
jbe
in
push
sub
inc
jg
lea
mov
cmps
mov
mov
or
cld
stos
inc
rcr
and
lock
and
or
mov
xchg
aad
jae
loopne
push
(bad)
out
call
and
jge
xchg
cmp
jge
in
adc
repnz
stos
ror
movs
push
lods
sbb
ret
test
or
add
mov
shl
dec
xlat
(bad)
push
test
jmp
ror
popf
mov
pop
pop
add
and
sbb
stos
jne
iret
enter
jle
cmp
inc
sbb
sub
(bad)
dec
popa
jmp
xchg
push
push
ja
mov
xlat
arpl
outs
bnd
or
jmp
sbb
sbb
dec
inc
pushf
out
sub
adc
aad
or
mov
nop
mov
out
mov
sar
retf
je
and
push
nop
mov
pop
mov
add
push
movs
cmps
ficom
in
jne
pop
push
push
xchg
mov
cmp
mov
xchg
xchg
test
dec
clc
cmc
mov
adc
cmp
ins
xchg
cs
sti
sub
inc
pusha
outs
out
cmp
push
imul
sahf
sbb
sbb
std
fiadd
call
sar
in
and
adc
sbb
enterw
push
std
cmp
sbb
mov
pop
jo
mov
in
inc
pushf
xchg
dec
jp
cmp
adc
iret
push
cs
ja
in
add
(bad)
xchg
push
das
pop
daa
int3
mov
mov
popf
ror
fwait
jae
cdq
xchg
shr
arpl
repnz
xchg
cli
jmp
ss
mov
xchg
sbb
inc
add
jno
rcl
sbb
cmp
(bad)
aaa
popf
pop
jbe
sub
rol
es
adc
rcl
lahf
lods
jnp
retf
call
ret
cmp
mov
in
jb
cli
test
push
push
and
xor
pushf
sbb
jle
cmp
xchg
xor
iret
dec
fnstcw
mov
or
mov
xchg
jae
inc
test
imul
retf
jnp
mov
test
mov
ret
(bad)
and
cwde
jp
push
sub
jns
in
xor
mov
lods
mov
outs
jmp
das
and
pop
(bad)
mov
iret
lock
xchg
inc
mov
jae
cmc
sbb
(bad)
hlt
jmp
call
pop
test
pop
mov
xor
xchg
xchg
jnp
rcl
push
rcl
and
mov
call
xchg
mov
nop
mov
outs
sti
lock
leave
adc
jae
stc
fsubr
js
dec
sbb
inc
fadd
cmps
cwde
pop
ins
jmp
sub
stc
lods
add
int3
sbb
sub
loope
outs
pusha
add
xlat
jg
in
push
cmp
fsub
sbb
sub
lods
jp
and
inc
sbb
xchg
xchg
cmp
xor
jbe
xor
xor
in
iret
inc
stc
popf
sub
lock
jg
enter
sti
(bad)
mov
and
retf
dec
dec
or
inc
cmp
fistp
jp
add
repz
iret
jo
leave
adc
dec
fbstp
cli
les
inc
push
jno
pusha
es
xor
adc
push
pop
or
mov
call
xchg
dec
mov
mov
sbb
xchg
out
pop
sbb
popa
mov
cmp
push
jns
lods
mov
mov
sub
fbld
pop
jns
jb
sbb
mov
mov
js
in
xchg
ficomp
mov
adc
popa
and
fwait
inc
xor
int
ret
xor
jmp
pop
popf
pop
gs
cmps
jns
mov
sub
sub
inc
cdq
pop
cmps
std
mov
mov
loopne
cmc
sbb
push
push
cmps
aaa
jne
js
inc
adc
dec
mov
xor
push
scas
out
jle
pop
mov
jns
call
clc
xchg
rcl
mov
dec
xadd
xchg
add
or
inc
and
and
les
jno
inc
out
push
dec
stos
ret
aas
mov
or
stc
fbld
dec
mov
xor
cwde
fdiv
and
js
test
fisttp
ins
pop
and
mov
push
lea
sub
repz
out
mov
xor
leave
sub
sbb
loopne
jle
sub
push
xchg
movs
jle
fwait
daa
sub
sub
xchg
push
adc
je
push
sahf
and
mov
mov
inc
ins
inc
push
cld
jae
push
ja
ret
add
aas
jno
ror
in
cmc
mov
repz
sbb
dec
jno
repnz
add
mov
pop
cmp
xor
mov
cmp
loop
mov
stc
outs
mov
in
mov
pop
inc
push
mov
sbb
jmp
test
mov
inc
sbb
mov
dec
(bad)
mov
rol
cwde
imul
cmc
fisttp
mov
xor
push
and
ret
sbb
aad
add
sbb
cmps
enter
xor
mov
pop
cmp
fimul
test
in
test
jnp
daa
jmp
xchg
push
and
jle
ja
sti
xchg
ror
dec
inc
and
outs
std
cmps
xchg
mov
test
adc
hlt
mov
dec
push
sub
out
aad
sbb
pop
dec
xchg
and
jp
jl
mov
cmps
xchg
jno
mov
push
sbb
xchg
dec
mov
pop
push
or
test
imul
repz
jne
or
jle
pop
loopne
push
jns
cli
or
ror
mov
in
pop
mov
inc
sbb
adc
mov
xor
and
add
pop
jns
xchg
out
dec
cmp
or
dec
std
lds
xchg
mov
push
int3
fistp
push
(bad)
or
out
sahf
daa
xchg
and
daa
not
cmp
or
neg
mov
es
clc
pusha
imul
push
retf
jg
inc
repz
nop
xor
sub
pop
xlat
addr16
leave
fdivr
add
(bad)
cmp
xor
inc
ins
dec
mov
stc
pop
data16
xchg
push
cli
sbb
adc
or
mov
and
addr16
and
div
push
push
mov
fs
xchg
push
arpl
popa
dec
push
mov
js
pop
loopne
sbb
mov
je
mov
out
loop
jge
jo
adc
fsub
jne
ret
push
or
adc
out
jne
xchg
data16
in
push
inc
retf
push
pop
repz
pop
loopne
dec
adc
jmp
in
jae
mov
ficomp
push
sub
into
leave
mov
cmp
outs
neg
pop
ss
inc
lods
(bad)
int
adc
jge
stos
repz
mov
test
std
sub
(bad)
cmc
(bad)
push
dec
jmp
jp
xchg
or
adc
add
push
dec
call
inc
inc
cmp
neg
sbb
cmps
and
in
xor
(bad)
jle
lock
and
xchg
pop
sbb
out
in
fsub
or
pop
jae
or
in
in
add
sbb
ins
sbb
push
jle
mov
xchg
inc
shl
xor
bswap
dec
xchg
push
loope
daa
dec
cmp
sbb
sub
popa
fbstp
mov
jbe
sbb
sbb
add
sub
pop
xor
dec
sbb
loopne
bound
add
imul
mov
pusha
cmc
sbb
push
ds
lock
loopne
repz
es
xor
arpl
dec
and
cmps
jle
jbe
(bad)
push
ss
test
outs
outs
jecxz
inc
sub
stos
cmp
pop
test
sbb
or
dec
daa
xchg
sti
loop
mov
sbb
lods
push
aam
xchg
bound
ins
sbb
add
icebp
aad
push
xchg
rcl
sbb
xchg
inc
inc
dec
or
dec
outs
loope
pop
test
or
sahf
jbe
mov
cvtps2pd
lods
mov
push
(bad)
mov
out
dec
pop
xchg
mov
hlt
loope
inc
pop
addr16
or
jb
and
in
push
sbb
push
into
les
or
hlt
sbb
dec
aas
stos
mov
jnp
sub
cli
dec
adc
cmps
cld
out
call
push
sub
cld
cwde
js
pop
neg
or
sub
jmp
pop
xor
(bad)
ficom
ss
sub
mul
gs
mov
cmp
cmp
adc
cmp
or
mov
leave
test
out
js
sbb
push
adc
fistp
adc
cs
out
push
loop
push
push
js
loopne
into
movs
sbb
es
idiv
mov
rcl
xor
ja
adc
cmps
push
push
mov
jmp
das
dec
repnz
cmc
lahf
jg
sbb
xchg
adc
icebp
test
push
imul
jnp
xchg
repz
js
mov
pop
sub
fmul
fdivr
retf
cmp
iret
imul
es
cld
lds
and
cmp
aaa
movs
(bad)
repnz
xchg
and
rcr
shl
call
add
movs
ret
sbb
outs
fmul
arpl
pop
cmp
push
test
mov
xchg
movs
push
mov
xchg
pop
js
das
loopne
xlat
and
or
in
sahf
push
sbb
or
pop
xchg
and
adc
jmp
cdq
mov
daa
mov
push
mov
cs
xor
aas
aas
cmp
les
imul
add
jmp
(bad)
in
sbb
in
ja
adc
bound
call
dec
jecxz
sub
sahf
xlat
push
mov
or
pop
sbb
scas
pushf
adc
jns
clc
js
out
add
push
mov
test
mov
pop
mov
cmc
loopne
fisubr
movs
xor
arpl
pop
fnstenv
stos
push
popf
sub
ficom
das
in
int3
adc
sbb
and
xor
xchg
dec
add
rol
push
cld
jno
push
sbb
int3
ja
dec
mov
mov
adc
mov
cmp
mov
cmp
xchg
xchg
jne
fild
cmp
hlt
cwde
sub
fistp
dec
loop
jne
xchg
lods
mov
rcl
sub
xchg
dec
std
out
test
jbe
loop
rcl
nop
jnp
ret
pop
out
imul
push
fidivr
sub
xchg
xchg
pop
push
lock
jmp
xchg
pop
or
outs
jecxz
mov
or
movs
mov
fistp
(bad)
mov
js
(bad)
xchg
pop
mov
xchg
arpl
daa
adc
mov
leave
mov
scas
add
shl
pop
push
in
push
xchg
jg
xchg
pop
mov
xchg
pop
jae
pusha
inc
stos
push
cs
fidiv
adc
cmp
mov
xchg
fistp
sub
fnstcw
push
mov
inc
and
mov
dec
add
(bad)
mov
out
xor
adc
push
mov
and
jp
imul
loopne
(bad)
sahf
mov
or
mov
mov
repz
test
xor
aaa
dec
lock
(bad)
mov
push
add
or
xor
and
add
sub
out
cmc
mov
in
jmp
dec
daa
dec
xchg
es
pushf
div
in
push
sub
sub
into
enter
sahf
lock
sub
mov
into
adc
mov
adc
cwde
and
pop
test
pop
push
xor
xor
or
cwde
not
jp
ret
and
je
xor
and
pop
inc
stc
inc
jg
inc
inc
cmp
cld
pop
in
es
jbe
add
mov
sbb
push
push
ja
pushf
and
ja
mov
push
addr16
jo
pop
jg
movs
movs
jb
cmp
xor
dec
and
retw
inc
ret
xor
adc
rcl
pop
sbb
das
clc
js
cmp
xchg
call
(bad)
xor
in
add
xchg
dec
aad
dec
imul
jmp
sub
push
in
mov
pusha
push
cmp
inc
mov
pop
adc
sub
pop
jno
loop
mov
test
cwde
jg
popa
gs
std
dec
aam
pavgb
mov
pop
fs
(bad)
or
imul
shl
fcomp
pop
retf
aam
mov
cmc
fs
mov
outs
je
pop
pop
inc
push
add
mov
icebp
cmp
ins
jecxz
pusha
push
cmps
gs
sub
xchg
aas
xor
and
pushf
sbb
test
sub
xchg
xchg
mov
in
iret
sub
les
xchg
jb
xor
(bad)
mov
aas
mov
fs
mov
push
in
dec
push
ret
add
ds
cs
xchg
test
cdq
xor
xacquire
out
or
cmps
inc
xchg
retf
aam
lods
movs
loope
call
sub
lds
in
mov
inc
mov
jmp
(bad)
xchg
pop
mov
dec
jo
push
xchg
pop
in
and
push
mov
out
pop
jle
stos
lahf
adc
ficomp
sbb
stc
lds
pusha
outs
repz
jmp
jg
int3
cmp
xor
(bad)
jge
shr
pop
mov
test
into
pop
xchg
jo
sub
mov
jns
xor
mov
stos
imul
rcr
popf
mov
mov
retf
adc
addr16
xor
pusha
dec
shl
mov
(bad)
pop
sub
movs
(bad)
out
cld
pop
mov
push
cmps
fst
xchg
mov
dec
and
test
cmp
(bad)
jno
xchg
fnsave
test
sbb
mov
sar
push
shl
cmc
scas
in
ins
test
xchg
cld
movs
(bad)
mov
pop
adc
arpl
cwde
repz
hlt
adc
xor
sub
fst
sub
jo
rol
out
out
jne
jnp
adc
mov
xchg
and
cmp
je
sar
cmc
ror
cmp
popf
pop
sbb
test
cmp
les
and
mov
outs
jo
enter
cmp
and
mov
push
dec
shr
jae
mov
loopne
outs
je
jmp
lahf
pop
shl
and
mov
hlt
sub
popf
(bad)
sub
inc
push
or
jle
(bad)
jmp
jnp
add
ret
pop
cs
jp
push
into
or
in
imul
pop
mov
les
jle
sub
test
and
or
jmp
test
inc
cld
outs
mov
jae
sub
call
call
loopne
test
pop
call
pop
stc
adc
mov
pushf
add
sahf
clc
cmc
rcr
dec
add
cmps
xor
add
mov
pop
test
mov
sbb
mov
daa
stos
jae
push
inc
dec
fcmovu
or
cmps
pushf
adc
pop
imul
mov
jp
jne
or
sub
adc
inc
stc
xchg
jnp
les
xor
push
and
repz
sbb
imul
xchg
nop
dec
mov
mov
jmp
movs
inc
imul
loope
cli
outs
xor
sub
(bad)
in
sbb
xchg
leave
mov
dec
push
mov
pop
xchg
cmps
mov
dec
and
mov
jmp
call
jp
xchg
out
push
hlt
js
or
cmp
ret
dec
in
mov
xchg
push
xor
mov
or
stos
jno
popa
xchg
rol
aas
and
lods
push
aad
test
sub
les
int3
or
and
std
mov
daa
cmp
fs
push
in
jnp
mov
fmul
sbb
out
add
pusha
jmp
(bad)
idiv
cmp
mov
out
out
push
pop
xchg
mov
sub
pop
cmp
loopne
test
repz
in
or
push
fist
je
addr16
cld
push
popf
mov
sub
lods
pop
and
pusha
call
loope
dec
mov
ret
addr16
retf
sar
stc
xor
ret
push
je
aam
fcomp
retf
inc
push
mov
sbb
inc
call
aad
jno
inc
js
jp
retf
pop
test
xor
cmp
mov
cli
xchg
ja
test
adc
adc
mov
mov
mov
arpl
xchg
or
jmp
add
sub
lods
in
jge
sub
mov
adc
sub
cwde
cmp
xchg
push
or
std
rol
push
push
test
loope
push
fmul
repz
in
inc
and
inc
xlat
popa
xor
pop
cdq
sub
jmp
jmp
pop
clc
and
lods
xor
xchg
in
cwde
jmp
test
pop
xor
in
dec
adc
out
pushf
push
add
test
mov
shl
cli
xor
add
addr16
stc
dec
rcr
shr
aam
movs
fdiv
sete
(bad)
rcl
aas
push
jmp
xor
jno
arpl
popa
cmp
or
(bad)
in
jle
ror
mov
stos
cmp
das
aas
jb
cmps
cwde
stc
rol
jmp
jae
fisubr
xchg
in
movs
imul
in
int
jg
xor
ret
in
cmp
jns
pop
and
pop
or
push
enter
mov
jbe
pop
mov
or
ret
lods
add
cmp
movs
gs
and
movs
ror
push
sub
in
jne
xchg
push
add
and
fisub
cmc
sar
mov
xchg
jbe
jg
mov
lods
in
out
xchg
imul
jg
addr16
jns
mov
in
jle
je
adc
add
ds
sti
daa
enter
popf
cli
adc
shr
pop
xor
mov
inc
jle
inc
dec
inc
into
mov
push
xchg
and
in
dec
add
int
pop
nop
imul
lods
xchg
push
retf
mov
call
adc
push
jmp
in
aas
adc
push
dec
lock
popa
fimul
add
pushf
adc
int
stc
xchg
jge
mov
or
jmp
sahf
or
cmps
es
es
jp
iret
or
fdivr
test
jp
add
sahf
dec
loope
cmp
ins
sub
pop
test
jae
and
add
ret
ror
loopne
jns
ret
xchg
cs
fs
sbb
cmc
jo
mov
js
xchg
bound
sbb
call
lea
mov
dec
pop
dec
ss
lds
cmp
dec
loop
leave
dec
inc
pop
xchg
pop
(bad)
jns
js
and
pop
jle
ficomp
jl
or
repnz
adc
push
sub
xor
mov
pusha
aad
(bad)
inc
jns
call
pop
jmp
into
mov
jae
lods
dec
fld
push
imul
fstp
mov
dec
mov
xchg
sbb
loopne
daa
push
cmp
lods
mov
dec
xchg
pop
mov
or
data16
test
mov
(bad)
jo
les
mov
adc
daa
xchg
cmc
test
paddq
push
sub
pop
cld
jbe
rcl
ins
jp
adc
push
fs
pop
push
lock
mov
add
pop
jae
xor
lea
push
addr16
out
mov
push
sbb
xchg
(bad)
sbb
adc
icebp
mov
sub
div
xlat
xchg
mov
xchg
pop
into
xchg
iret
repnz
fs
sub
std
mov
xchg
or
addr16
push
cmp
add
movs
mov
shl
call
cmc
out
(bad)
pusha
jne
bound
mov
xor
push
pop
sub
jnp
cmp
pop
adc
fldcw
or
jge
out
aad
xor
sub
movs
sub
add
mov
icebp
add
test
sbb
and
xchg
aam
or
xchg
xchg
sbb
xchg
cmc
ret
jmp
test
lock
mov
(bad)
repz
mov
push
pop
aaa
xor
ss
leave
sbb
lahf
and
jnp
repz
iret
xchg
and
adc
xor
xchg
popa
mov
jp
adc
sub
std
mov
push
call
(bad)
out
sub
pop
es
mov
sub
xchg
jbe
test
mov
and
dec
push
pop
adc
sbb
jne
mov
cld
jnp
xchg
icebp
jp
or
in
retf
aas
sub
and
jp
mov
in
out
shr
pop
cmc
fcmove
sbb
add
fidiv
repnz
or
push
jns
fimul
leave
jle
mov
cmp
pop
mov
jle
jmp
cmp
daa
lods
in
jp
(bad)
retf
lods
imul
add
mov
cwde
rcl
jne
rcl
pop
lods
cmp
leave
sbb
dec
adc
mov
mov
mov
mov
sub
sbb
call
xor
in
dec
scas
ds
pop
lods
pop
fs
adc
ds
daa
iret
push
cmps
out
or
or
es
ss
add
sbb
popf
sub
fbld
sar
dec
xor
outs
jge
mov
addr16
push
jne
dec
and
dec
outs
ret
pop
into
(bad)
sbb
popa
fimul
mov
movs
mov
cli
ins
push
nop
test
lahf
push
and
lock
xor
rol
test
push
pop
in
and
cld
add
int
cmp
fs
pop
pop
rol
xor
data16
and
mov
inc
ds
shl
retf
aad
cs
sub
(bad)
adc
push
and
imul
or
and
sbb
sbb
and
addr16
(bad)
xor
push
mov
mov
mov
xor
lock
cld
jmp
out
xchg
xchg
sbb
inc
dec
xchg
sar
or
push
and
sahf
xor
mov
jae
xchg
jmp
sbb
std
inc
out
mov
sar
xchg
ret
int3
jecxz
in
add
push
push
xchg
stos
ja
add
xchg
js
shl
je
mov
fucomp
inc
std
mov
xchg
mov
retf
jno
mov
sub
push
or
icebp
into
push
xchg
repnz
cmp
dec
fnstcw
jne
lahf
out
xor
mov
inc
in
push
adc
and
push
xchg
loopne
xchg
shl
adc
adc
daa
cmp
xchg
dec
faddp
clc
xchg
adc
mov
fs
out
das
or
and
mov
pop
jne
pop
add
test
push
movs
data16
adc
add
ins
xchg
push
push
xchg
cmps
aad
pop
push
mov
(bad)
into
movs
cmc
fstp
retf
jae
pushf
jns
cli
mov
pop
daa
pop
in
fucom
cmp
lds
jb
(bad)
rol
xchg
cmps
iret
sbb
adc
xchg
cmp
retf
and
loop
mov
out
jle
or
sub
push
stc
fdivr
sub
mov
sub
dec
sbb
lods
xchg
dec
loope
jmp
jns
sbb
mov
inc
xor
jne
cmps
mov
mov
xchg
xchg
ret
jnp
icebp
push
adc
int3
(bad)
outs
outs
call
pop
cmp
sub
not
inc
pusha
cmps
pop
pop
mov
push
call
push
(bad)
js
(bad)
lock
test
nop
pop
stc
xchg
mov
mov
(bad)
mov
add
jge
mov
(bad)
call
cmc
test
push
fs
jae
xchg
scas
ror
test
mov
sub
or
sbb
push
jp
adc
hlt
pop
xchg
sub
cmp
xor
fild
mov
xor
out
push
fcmovnu
std
or
fs
cmp
pop
mov
mov
pop
jp
in
add
mov
mov
dec
xchg
pop
lock
xor
xchg
xchg
pop
dec
and
dec
xchg
cmc
and
idiv
std
xchg
push
xor
(bad)
(bad)
mov
sub
dec
ss
clc
adc
jp
test
jp
lods
pop
xor
div
ficom
adc
shl
outs
xchg
inc
addr16
cmps
pop
in
or
shl
mov
mov
and
in
mov
cli
out
outs
das
mov
push
ss
pusha
or
jnp
shl
popa
pop
sub
sub
pop
leave
lea
push
xchg
call
xchg
repnz
fdivr
add
es
das
fadd
jmp
mov
add
jns
xchg
int3
sub
loop
pop
lock
and
pop
sbb
or
sbb
jmp
loope
dec
cmp
and
push
mov
jle
dec
dec
in
data16
xor
imul
and
(bad)
sub
cmp
xchg
fsubr
cmp
inc
xchg
ror
ret
push
mov
stos
outs
imul
call
xor
ins
pavgb
aam
adc
mov
dec
xchg
pop
pop
adc
xor
rol
les
inc
lods
std
ss
fldenv
shl
xchg
and
in
outs
jecxz
sti
in
xor
mov
cmp
or
jne
rcr
and
sbb
retf
mov
sub
mov
mov
xor
push
inc
mov
iret
push
mov
lods
jnp
xchg
repnz
nop
mov
aas
and
xchg
pusha
out
dec
and
mov
xor
fistp
dec
sbb
cmp
mov
iret
stc
mov
dec
cmc
xor
add
dec
xchg
mov
or
mov
sub
xchg
pop
lahf
jb
or
in
outs
mov
lock
inc
dec
adc
cmp
test
daa
sbb
add
mov
js
lods
add
inc
shl
rcl
(bad)
lock
aam
repnz
clc
pop
jae
and
jnp
fs
je
les
aas
sbb
mov
mov
imul
and
mov
movs
(bad)
pop
into
mov
inc
(bad)
jne
and
sub
iret
aad
ins
(bad)
sbb
call
inc
into
push
cmp
or
add
jge
adc
fwait
inc
mov
xchg
add
mov
sub
push
nop
pop
lock
jb
shr
int3
loope
les
cmp
mov
push
sar
shl
inc
xchg
mov
mov
adc
in
aam
sbb
das
and
add
test
cmp
dec
cs
iret
fnstcw
adc
pop
inc
jae
inc
out
pop
mov
lds
lea
push
cmp
pop
sub
(bad)
dec
push
(bad)
lock
in
push
add
lds
outs
and
sbb
adc
imul
push
leave
pop
push
loopne
ins
jge
sbb
sub
adc
(bad)
(bad)
mov
mov
hlt
and
xchg
fild
cmova
cmp
div
and
pop
and
xchg
xchg
neg
jp
sbb
mov
cmc
push
push
push
mov
sbb
pop
(bad)
sti
add
xchg
pop
cmp
dec
fsubr
pop
loopne
or
dec
lahf
xchg
push
push
jnp
fwait
cmps
and
cwde
sub
aam
loope
outs
jecxz
(bad)
mov
vpunpcklqdq
jp
sbb
sub
int
adc
xchg
mov
mov
push
in
and
bound
dec
inc
rcr
fnsave
test
ins
dec
pop
mov
mov
or
ins
cmps
dec
jp
sub
(bad)
mov
pop
inc
popa
mov
cmps
push
sbb
ss
xchg
xchg
ret
(bad)
repnz
cs
jge
stos
mov
and
mov
and
(bad)
in
push
add
xor
mov
pand
inc
mov
mov
test
xchg
pop
into
mov
ins
jns
shl
cmc
cmps
nop
mov
sub
in
rcr
dec
inc
std
fcmovnb
mov
add
imul
addr16
dec
inc
mov
mov
js
inc
sti
jno
fcom
mov
pop
jp
mov
mov
lods
push
xchg
les
sti
xchg
add
retf
mov
ins
retf
daa
pop
push
pop
cli
add
pop
lahf
jle
cmp
jmp
lds
xchg
push
jmp
sbb
or
add
clc
(bad)
sub
in
in
pop
repnz
nop
jmp
xor
cmps
dec
and
cs
in
dec
fs
pusha
sbb
fxch
popf
add
rcr
imul
js
fimul
mov
dec
lds
mov
aad
jo
xchg
data16
test
jb
fsub
iret
pop
push
sub
lea
xchg
push
les
dec
mov
pop
dec
fist
or
push
mov
nop
mov
jmp
lods
pop
das
jg
shl
dec
xchg
enter
daa
jle
cmp
in
loopne
mov
adc
popf
shr
push
stc
jg
js
mov
mov
push
mov
imul
mov
es
shl
sbb
addr16
ret
push
icebp
loop
dec
mov
bound
sbb
mov
mov
ds
pop
and
out
xchg
aad
clc
repnz
clc
sbb
dec
popf
das
loop
xchg
mov
xchg
je
(bad)
jle
addr16
sub
aas
div
adc
fwait
jmp
movs
icebp
loop
ja
aas
popf
ret
or
cmps
sbb
push
pop
push
arpl
inc
add
(bad)
retf
cdq
push
pop
add
fsubr
jecxz
push
adc
cld
jmp
les
sub
jge
xchg
lods
add
cwde
mov
pop
push
fistp
ret
push
xor
ret
jecxz
sub
pushf
sbb
aad
and
out
jp
leave
cmp
js
iret
shr
jp
fadd
and
cmc
sbb
jge
xchg
sub
(bad)
repnz
js
adc
push
mov
push
sahf
and
add
jmp
mov
in
or
dec
ror
test
nop
es
sub
or
or
xchg
(bad)
mov
sbb
jne
addr16
jle
xchg
movs
cdq
pop
and
add
stos
ret
cmp
jg
xchg
xor
sub
mov
(bad)
sub
in
les
cmps
dec
imul
pop
daa
xor
xchg
pop
and
adc
inc
pop
jmp
call
fs
test
adc
lds
pushf
xchg
fisttp
jmp
rol
xchg
pop
xor
jp
shr
or
js
mov
fdivr
dec
or
xlat
sbb
add
leave
repnz
fnsave
clc
mov
lock
sub
(bad)
ja
es
ja
fcomp
and
loopne
ja
fidivr
cmps
xchg
sbb
fsubr
or
aad
xlat
lahf
std
or
push
mov
adc
adc
imul
lahf
lods
dec
cmp
jns
imul
push
mov
repnz
icebp
sti
sub
lods
scas
push
fwait
mov
ror
retf
mov
pop
mov
cmp
add
popa
cmp
iret
add
xor
push
(bad)
sub
sub
cmp
pushw
pop
cmp
inc
inc
sub
or
mov
sub
dec
or
mov
add
dec
push
jne
and
push
popa
xor
repnz
jmp
jecxz
shr
xor
adc
xchg
rcr
hlt
dec
shr
(bad)
jbe
xchg
pop
stos
push
gs
sar
sbb
call
xchg
push
call
xchg
std
mov
ret
cmp
hlt
xlat
neg
push
shl
xchg
add
mov
xchg
daa
int3
popf
icebp
mov
inc
inc
jp
les
jmp
iret
mov
or
xchg
mov
in
stos
jne
mov
gs
or
out
inc
mov
adc
jge
test
dec
dec
mov
iretw
add
ins
shl
imul
sbb
xchg
mov
pop
mov
(bad)
loope
mov
sub
sar
popf
out
or
sar
push
dec
in
jmp
es
les
dec
fdivr
dec
pop
popa
and
xchg
movs
jmp
add
sub
out
(bad)
dec
sbb
(bad)
inc
jbe
dec
cs
inc
pop
jae
je
je
xchg
int
pop
loope
sar
push
jle
mov
jmp
inc
outs
out
daa
pop
cdq
jg
ins
je
ret
pop
cli
mov
sub
pop
jg
ja
cmp
hlt
enter
in
xor
retf
int3
and
push
add
mov
addr16
push
cmps
loop
les
jo
pop
mov
mov
outs
data16
call
mov
mov
and
push
add
jle
aaa
push
xor
push
push
fyl2x
shl
xchg
and
retf
adc
sbb
sbb
sbb
sbb
cmc
jle
xchg
cli
sub
call
inc
mov
pop
sub
mov
enter
jmp
mov
push
push
mov
daa
test
pop
dec
mov
sub
shl
jne
and
mov
jg
in
fistp
gs
xor
jmp
js
xchg
jmp
dec
les
test
jmp
cmp
pop
cmp
mov
xor
loopne
lods
movs
(bad)
ret
mov
test
add
test
dec
pop
cmp
pop
cmps
jne
movs
fnstenv
xchg
neg
pop
mov
pop
mov
jge
dec
bound
shr
imul
aas
call
add
mov
ds
and
ds
cmp
mov
sub
xor
or
jg
mov
sbb
icebp
mov
pop
cmp
not
mov
pop
mov
dec
adc
or
xor
xchg
into
xchg
test
(bad)
and
rcl
and
push
out
bound
sub
mov
cmp
pushf
imul
lock
push
cmp
sub
dec
cld
xchg
inc
inc
jge
dec
mov
(bad)
loopne
xlat
cmps
aad
xchg
cld
fs
out
imul
int3
xor
xor
mov
pop
mov
fmul
or
xchg
ds
imul
js
(bad)
mov
shl
dec
adc
je
adc
repz
push
popf
ret
push
js
stos
mov
idiv
outs
call
test
jl
icebp
push
and
push
dec
mov
ds
loope
repz
dec
fwait
aas
js
xchg
gs
in
pop
adc
movs
add
inc
fstp
jmp
adc
xchg
push
sub
mov
movs
sbb
test
into
jmp
and
pop
aad
dec
mov
test
lods
call
xlat
scas
call
sar
(bad)
out
cs
fdivr
icebp
xor
fnstenv
ret
push
call
push
neg
addr16
out
or
fistp
popw
add
das
xchg
into
in
inc
shl
mov
mov
repnz
add
and
adc
inc
sub
scas
cmp
cmp
out
or
jae
test
jmp
cli
jle
and
mov
sub
mov
mov
(bad)
xchg
lods
in
loopne
xchg
xor
cmp
call
(bad)
adc
push
or
hlt
jecxz
dec
int3
and
mov
push
lods
(bad)
jmp
pushf
call
pop
and
(bad)
js
retf
rcl
ins
retf
push
scas
push
xchg
aam
or
pushf
es
repz
jge
xor
mov
xchg
shl
mov
fbld
cld
in
scas
pusha
loope
out
mov
dec
mov
push
adc
test
out
mov
(bad)
fild
lods
mov
(bad)
(bad)
jge
ret
pop
lea
sbb
dec
pop
jg
dec
loopne
hlt
inc
xor
shl
sar
inc
rol
jmp
fidivr
and
xor
cmps
sbb
aad
scas
mov
mov
(bad)
sbb
jae
in
cld
shl
xchg
test
jg
dec
adc
out
sahf
xor
test
out
int
push
test
push
pop
adc
pop
jns
inc
dec
adc
sar
and
daa
lods
add
rcl
jae
xor
fcom
add
mov
jno
cmp
iret
mov
ret
js
das
stc
sti
daa
shl
icebp
imul
jl
adc
int
xor
mov
inc
icebp
repnz
ror
mov
xor
shl
jp
pop
mov
cli
clc
and
daa
jo
ret
mov
push
push
stos
and
pop
cs
xor
cs
ins
and
(bad)
in
out
push
ror
push
jo
or
jb
loopne
cmp
test
xor
movs
aam
test
pop
xchg
mov
popa
sbb
pushf
stc
cmp
xchg
std
sbb
(bad)
jnp
push
imul
cmp
pop
ss
addr16
rcl
jg
xchg
sbb
or
sar
xchg
jg
push
dec
aaa
je
call
cld
sbb
dec
push
mov
retf
push
jge
pop
aam
aad
das
mov
xchg
rcl
cmc
movs
inc
popf
movaps
pop
dec
loopne
mov
test
xchg
es
xchg
mov
push
cmp
jnp
add
fwait
xchg
and
xlat
jle
sbb
xchg
and
dec
outs
xor
sub
push
or
cmps
nop
push
in
into
push
mov
je
fcomp
popf
cli
inc
jo
mov
mov
retf
popf
xchg
repz
fldenv
ret
add
jge
dec
mov
(bad)
fisubr
jo
inc
xchg
or
jmp
rcr
mov
add
xchg
loopne
push
jno
add
jge
jb
cld
aas
cmp
xlat
pop
sbb
popa
add
dec
and
shl
icebp
scas
adc
dec
mov
sbb
popf
shr
leave
bound
and
fcomp
dec
std
hlt
lahf
xchg
mov
(bad)
jae
push
call
bsf
inc
in
popa
xor
ss
cs
rcr
push
shl
jnp
pop
adc
ret
xlat
inc
inc
sub
jne
fcomp
(bad)
inc
sub
imul
je
ffreep
fwait
mov
cmp
lds
push
xchg
push
or
movs
lahf
stos
popf
fild
sub
iret
mov
hlt
and
das
mov
inc
and
mov
mov
sbb
sub
fld
mov
leave
pop
pop
add
mov
xchg
add
or
cmps
cwde
cmc
loope
test
cmp
and
iret
jge
cwde
mov
jmp
aad
xchg
stc
push
inc
jnp
ret
mov
fwait
enter
pop
cmp
ror
outs
js
rol
dec
mov
xor
jmp
add
ret
in
sub
(bad)
push
retf
add
add
jb
jmp
mov
add
test
jbe
push
sub
push
sbb
rol
push
adc
imul
jae
sub
loop
cmp
xchg
xchg
dec
hlt
adc
out
and
xchg
mov
inc
jecxz
das
pushf
hlt
mov
jge
stos
push
mov
retf
inc
jmp
imul
push
hlt
add
js
call
jae
out
push
jne
aaa
(bad)
enter
mov
push
movs
mov
mov
xor
daa
movs
jmp
lea
call
pop
and
nop
xor
movs
outs
repz
cdq
xchg
xor
aam
sti
popf
ret
xor
xchg
dec
mov
sbb
(bad)
pusha
push
cmp
jecxz
aad
dec
push
es
push
lods
jle
std
(bad)
mov
lds
jge
pop
fidivr
pusha
push
fadd
ins
mov
lock
inc
cli
jne
mov
call
mov
xchg
mov
push
or
scas
xor
outs
sbb
fidivr
sub
int3
mov
adc
mov
push
jae
mov
imul
retf
ret
pushf
cmp
mov
cwde
iret
add
mov
and
adc
jnp
daa
cmp
sbb
jp
dec
inc
push
xchg
das
xchg
and
hlt
jmp
test
mov
mov
pop
popa
ret
or
pop
adc
push
cmc
push
call
jb
daa
in
xor
sar
leave
mov
lods
add
jmp
cmp
push
das
mov
out
jge
adc
mov
dec
and
inc
xor
dec
popf
nop
sbb
pop
out
mov
ror
push
test
cmp
jmp
bound
jne
xor
mov
fimul
test
arpl
out
(bad)
sbb
fmul
or
ins
xchg
sub
test
das
pop
test
xchg
jp
popa
fsubr
cli
jecxz
add
loopne
push
add
add
arpl
xor
sbb
pop
stos
ja
je
in
mov
in
xchg
push
inc
stos
fucomip
lods
and
inc
in
shl
dec
push
dec
jmp
mov
cmc
pusha
dec
mov
dec
pop
inc
push
xchg
adc
fsub
jbe
mov
cmps
inc
adc
in
adc
mov
xor
sahf
sub
mov
pop
jnp
jge
cmc
dec
and
outs
div
mov
add
cld
xor
daa
or
xor
xor
cmp
sahf
mov
xchg
mov
daa
xor
addr16
mov
xor
xchg
lds
sbb
dec
pop
push
or
push
jno
xchg
add
sbb
movs
jns
push
fisub
in
ret
mov
test
inc
jae
in
or
test
stos
addr16
fstp
(bad)
sub
in
rol
pop
scas
push
in
xchg
les
movs
enter
sbb
mov
loope
inc
ret
imul
shr
mov
jle
cmps
mov
shr
pop
cmp
aam
int3
repz
mov
push
aam
jns
push
mov
mov
jle
cmps
daa
xor
xchg
rcl
mov
in
add
adc
mov
aad
fs
retf
mov
cld
ds
pop
repnz
xchg
mov
pop
and
add
das
cmp
cwde
adc
sub
xchg
adc
std
icebp
dec
jne
add
xchg
cmp
adc
jmp
dec
ror
and
jae
outs
sub
mov
and
jl
push
fimul
sar
jno
mov
dec
cmps
mov
jb
add
sub
push
shl
popf
pmuludq
std
pop
xchg
ss
ds
sub
sbb
push
dec
xor
and
or
out
test
xor
inc
adc
push
add
jbe
sbb
mov
and
inc
xor
mov
mov
sub
loop
lahf
loop
add
arpl
xchg
xchg
dec
call
adc
cmp
inc
popa
adc
sahf
shr
shr
ret
mov
int
sbb
cld
mov
jns
sub
ret
pop
(bad)
cmp
(bad)
cmc
pushf
loopne
push
cmp
sbb
or
cmp
(bad)
movs
dec
mov
xor
add
and
xchg
sbb
xor
dec
adc
les
stos
add
sbb
jne
mov
pop
xchg
mov
fistp
lahf
in
dec
mov
pushf
es
mov
gs
pushf
daa
add
xchg
push
out
jae
mov
xor
mov
out
mov
cmp
pop
or
data16
inc
push
push
sub
bound
(bad)
ins
jb
pop
ret
jb
sbb
test
cmp
stc
pop
xlat
js
(bad)
addr16
push
pop
sub
pop
out
test
sbb
add
(bad)
mov
jle
push
xchg
das
retf
dec
inc
ds
mov
test
ins
xchg
test
xchg
mov
push
or
test
sub
sub
xchg
dec
js
lods
inc
nop
pop
aad
lods
pop
lods
mov
xchg
pop
push
and
or
pop
dec
cli
or
fincstp
das
inc
int
mov
push
loopne
xchg
dec
dec
adc
mov
push
enter
push
int3
mov
cmp
adc
adc
test
ins
imul
mov
dec
rol
jno
ror
cli
jmp
and
mov
sbb
or
test
fs
pop
test
addr16
mov
mov
add
xchg
mov
xchg
imul
inc
ret
mov
push
cmp
clc
nop
xchg
xchg
xor
ds
test
jp
adc
jmp
movs
es
xchg
js
and
pop
dec
test
pop
out
repnz
inc
retf
scas
jp
(bad)
(bad)
fs
adc
arpl
fst
sub
rol
pop
mov
push
sub
rcr
sti
pop
daa
int
sbb
jo
popa
sbb
arpl
add
mov
add
mov
mov
inc
cmp
(bad)
pop
addr16
jb
mov
jae
sub
sbb
idiv
dec
xor
js
adc
jne
pop
(bad)
mov
jne
into
(bad)
mov
das
out
cmp
pushf
retf
aad
outs
out
in
scas
hlt
lods
jnp
sti
out
mov
or
jnp
pop
dec
push
add
les
loop
cmps
adc
sub
mov
lahf
pusha
mov
or
cmp
sar
enter
stc
jns
inc
or
add
scas
cmps
jp
jle
or
sbb
leave
daa
bound
push
add
daa
or
ret
out
pop
ja
movs
rcl
(bad)
xchg
int
inc
or
xchg
push
and
jbe
jne
mov
sahf
out
xor
xor
pop
xchg
in
mov
push
and
in
jecxz
in
or
cld
es
xor
je
jne
lods
repnz
je
mov
push
sub
mov
pop
or
test
add
(bad)
xor
ins
pusha
xchg
cwde
lea
or
hlt
xor
out
push
mov
or
(bad)
cmp
sbb
clc
xchg
cmp
sub
call
rcl
ins
imul
sub
outs
loop
jbe
lds
mov
jb
or
fldenv
xor
(bad)
fstp
(bad)
leave
popf
mov
dec
cmp
out
and
inc
sbb
cmc
add
inc
data16
call
scas
sbb
ret
add
pop
cwde
jp
push
xchg
inc
and
sub
(bad)
rol
in
daa
loope
jno
je
mov
push
cld
jmp
sub
ror
xchg
xchg
cdq
ret
mov
xor
scas
loopne
sub
and
cmp
mov
daa
ins
imul
cvtdq2ps
jbe
xchg
mov
outs
jns
dec
inc
(bad)
das
aam
std
(bad)
movs
loope
or
pop
or
sbb
gs
mov
mov
mov
cmps
cdq
xchg
lods
inc
and
jp
call
mov
jae
sbb
or
mov
jns
shl
jbe
inc
mov
test
xor
sbb
mov
jo
or
pop
pop
fisub
jl
iret
mov
inc
jmp
stos
push
sbb
mul
int3
or
jno
ins
push
xchg
mov
int
dec
(bad)
ins
(bad)
cmps
pop
out
int
sti
xchg
add
je
rol
mov
xchg
push
icebp
xchg
sbb
sub
dec
sahf
test
dec
fwait
je
fsubp
or
adc
xor
adc
or
hlt
popa
je
sub
nop
fdivp
int3
xor
fld
push
sbb
cmp
sbb
pop
dec
popa
xor
cmp
adc
jle
pop
aam
fidiv
(bad)
cmp
cmps
dec
js
int
dec
fsub
push
push
int
mov
(bad)
mov
xchg
mov
adc
ret
cmp
and
mov
nop
aas
int3
in
pop
push
jnp
mov
sub
ror
jmp
ss
xor
push
lds
or
mov
(bad)
mov
sbb
cmp
mov
je
sbb
sub
xchg
ror
cmp
ins
mov
push
sub
inc
cmp
xchg
fwait
mov
in
cmp
fimul
cmps
jmp
sub
pop
adc
push
mov
pop
fistp
clc
not
xchg
inc
sub
call
lahf
inc
mov
dec
div
mov
jle
lods
je
and
push
fbld
xchg
sub
pop
jmp
fisttp
stc
xchg
in
xchg
push
push
xchg
clc
xchg
adc
(bad)
rcl
mov
icebp
jp
(bad)
xlat
xchg
xor
inc
dec
sbb
mov
cld
xor
icebp
loop
fs
sub
mov
push
xchg
pop
jl
daa
xchg
call
loope
cli
leave
jne
or
sbb
movs
or
mov
stos
sub
jmp
xor
inc
js
jne
sbb
popf
and
dec
cs
cld
dec
adc
mov
push
repz
test
inc
fcomp
sub
adc
lahf
into
pop
std
xchg
push
adc
xor
xor
mov
dec
call
vphadddq
stos
(bad)
xor
mov
add
cmp
enter
fidivr
xor
mov
cmp
lods
aaa
je
lds
js
push
fnstcw
jl
sub
and
imul
mov
mov
or
sbb
fs
shr
lock
jl
int
cmp
xchg
(bad)
xor
lock
sbb
test
sbb
xchg
std
cld
retf
add
jno
ins
sub
jl
imul
mov
push
add
fsubp
jmp
cmp
fcom
push
xchg
imul
xor
push
dec
fstp
sub
mov
imul
imul
pop
ja
mov
adc
and
xchg
mov
test
push
xchg
scas
inc
adc
fstp
ins
stos
aam
js
cmps
cli
xchg
jl
xchg
mov
mov
ja
dec
fcom
pop
or
call
add
std
push
cmp
jb
dec
push
lahf
sbb
inc
js
mov
shl
aam
stc
enter
hlt
bound
sub
sar
shl
and
loop
icebp
inc
jmp
fadd
movs
loope
inc
pop
sbb
add
mov
dec
outs
std
mov
ja
mov
push
es
cld
test
adc
adc
imul
sub
push
inc
sbb
bound
xchg
mov
sbb
lea
into
cdq
inc
(bad)
sbb
lahf
xchg
sbb
pop
dec
mov
push
push
popa
inc
xchg
mov
loopne
mov
inc
jge
cmp
add
imul
pop
push
xchg
sub
or
add
or
pusha
fs
aam
loop
and
adc
es
inc
xchg
inc
xor
push
jge
or
jne
out
jg
dec
repnz
ins
addr16
rcl
mov
jmp
adc
sbb
out
cmp
js
lock
and
xchg
dec
stos
mov
sub
push
xchg
ret
fld
mov
jecxz
pop
pop
(bad)
out
sbb
and
sub
mov
pop
xor
aad
test
push
dec
arpl
(bad)
stos
push
jp
or
test
push
fistp
mov
ret
sub
(bad)
je
cmp
dec
and
fisubr
je
mov
cmp
outs
adc
pop
cmps
xor
or
and
imul
jns
sub
inc
pop
mov
mov
dec
cmp
or
in
mov
pop
xlat
cmp
or
retf
pusha
ret
push
dec
add
sub
cmp
xchg
and
pop
mov
xchg
pop
ret
sub
sub
and
(bad)
jp
repz
mov
test
pop
mov
out
push
mov
push
ins
cmp
clc
in
or
or
cmp
jns
sub
popa
adc
jb
xlat
mov
and
std
fdiv
jp
js
or
sbb
(bad)
int3
fadd
aam
call
mov
mov
jmp
push
push
or
mov
xchg
iret
push
das
repnz
sub
and
fst
xlat
int3
dec
xchg
dec
sahf
or
bnd
dec
dec
adc
aas
sub
mov
cs
sub
sub
les
fdiv
icebp
inc
mov
sbb
adc
push
mov
mov
lahf
sbb
icebp
ret
iret
into
adc
jmp
movs
movs
aam
in
cmp
rcl
clc
sar
cli
mul
sahf
sbb
and
inc
xor
pushf
sub
pusha
cmp
popa
fsubr
mov
lods
repz
dec
push
mov
mov
in
mov
dec
push
js
cmc
dec
out
call
mov
xor
je
in
adc
idiv
inc
(bad)
loop
xchg
xor
dec
dec
stos
call
repz
sub
jmp
loope
dec
xor
push
ret
icebp
in
jge
popa
and
jbe
mov
sub
push
addr16
xchg
pop
jecxz
push
inc
cld
ror
sti
xor
arpl
mov
and
nop
fwait
ret
hlt
mov
ficomp
xchg
push
mov
jno
or
push
jne
push
call
xor
test
nop
xchg
mov
add
inc
(bad)
and
lea
mov
lods
retf
aam
ret
and
imul
(bad)
xor
or
lods
call
in
mov
push
lock
jo
test
push
imul
jmp
icebp
js
add
sahf
fxch
adc
shl
sbb
xchg
mov
out
hlt
shl
or
in
inc
addr16
adc
pop
xchg
mov
pushf
sub
(bad)
push
jle
dec
ror
cs
aad
pop
bnd
daa
sub
enter
pop
test
mov
xor
(bad)
xor
mov
bound
mov
ss
cmc
push
in
cmp
xor
ret
fstp
(bad)
test
xchg
mov
or
fsubr
addr16
sbb
inc
mov
mov
sbb
in
mov
fld
(bad)
sbb
dec
cmps
add
retf
sbb
sub
xchg
push
clc
scas
shl
leave
mov
dec
iret
repnz
jecxz
test
(bad)
cmc
arpl
cmp
jb
sub
or
and
js
(bad)
aad
pop
pushf
sub
xlat
jl
les
jnp
xchg
lods
push
or
xchg
add
(bad)
xchg
movs
push
cwde
fstp
(bad)
mov
mov
pop
int3
mov
push
jg
(bad)
es
(bad)
mul
test
mov
hlt
jmp
fmul
fsub
aad
xchg
and
xchg
inc
out
add
loope
cmc
pop
or
adc
push
and
xor
push
xchg
data16
daa
mov
dec
fs
scas
push
cs
pop
stc
pop
shl
cmps
pop
pop
and
cmp
xchg
dec
fimul
daa
pop
fs
xchg
dec
adc
pop
out
xor
jle
inc
js
jb
(bad)
xchg
xchg
fsubr
cmp
loope
neg
xchg
sysenter
cmp
dec
ficomp
inc
cmc
and
jle
xor
mov
add
hlt
pop
aad
jmp
cwde
push
ret
dec
scas
hlt
in
je
push
jmp
test
stos
bnd
xchg
xor
xor
mov
adc
sub
rcr
fdivr
jae
dec
in
lods
xchg
sub
inc
xchg
retf
les
fcomip
lds
(bad)
xchg
xor
push
js
leave
fcmovu
add
cmp
out
in
loopne
push
test
mov
mov
jp
mov
jg
lahf
ins
pop
xchg
xor
add
inc
addr16
mov
mov
mov
cmp
push
out
rcl
xor
scas
daa
mov
jns
push
ins
hlt
ja
out
jne
daa
js
fistp
std
in
nop
call
mov
push
cmp
stc
push
xchg
sub
shl
data16
es
pop
sbb
or
icebp
jmp
sub
xor
out
xor
js
xor
cmc
lock
inc
imul
cmp
(bad)
jg
cld
movs
jae
(bad)
and
xchg
pusha
out
inc
popa
push
cwde
pop
push
xor
xchg
dec
xchg
jg
stc
pop
push
pop
mov
retf
je
call
iret
lahf
cmp
and
ret
pop
cmp
das
mov
addr16
jo
outs
arpl
clc
mov
test
xchg
jae
jno
jle
in
xor
push
in
mov
es
icebp
int3
mov
xor
and
jo
sub
and
push
sbb
cmp
push
xor
ret
add
push
cmp
iret
jge
mov
add
(bad)
push
icebp
jecxz
in
cwde
ret
loopne
scas
xchg
cmp
dec
inc
add
adc
retf
fld
dec
dec
daa
cmp
repnz
aas
or
pop
adc
ins
xchg
push
cmp
mov
mov
mov
shr
xor
lahf
cmp
cmp
scas
fstp
pushf
sub
pushf
loope
fst
ret
inc
shl
pop
jb
cwde
scas
push
fld
adc
xor
(bad)
movs
fist
xor
out
fild
sub
test
sub
xchg
cmp
loopne
jmp
xor
and
and
cwde
dec
ins
pop
or
xchg
or
popf
movs
ins
push
mov
jb
pop
sub
push
out
xchg
fcom
test
cmps
cmp
js
xchg
inc
sub
fstp
push
cmc
fcomp
mov
mov
inc
shr
sub
push
jl
icebp
in
cmp
mov
jb
xchg
and
sbb
test
sbb
lock
jge
jmp
xor
push
dec
pop
sub
out
fwait
es
xchg
adc
icebp
push
leave
rcr
popa
mov
and
sbb
cmc
dec
bound
and
int
cmp
xor
and
xor
loopne
imul
or
icebp
push
jnp
mov
pusha
imul
outs
mov
push
mov
addr16
xchg
mov
loopne
xchg
pop
push
test
jmp
jle
pop
inc
call
les
xor
xchg
mov
retf
and
dec
outs
push
pusha
dec
inc
adc
pop
data16
loopne
mov
mov
loop
ss
pop
sbb
push
in
out
ffreep
xor
in
and
les
jle
mov
js
sub
shr
or
mov
mov
and
jnp
inc
daa
add
dec
adc
fwait
inc
in
in
addr16
outs
mov
shl
out
dec
jl
cs
and
call
in
cld
dec
sub
cli
mov
xchg
mov
sub
sub
jl
repz
pop
mov
cmp
loop
scas
rcr
pop
aad
and
popf
lods
stc
hlt
sub
add
pop
pop
jle
mov
sbb
sub
mov
std
popf
loop
jge
idiv
xchg
xchg
or
das
fwait
in
xchg
mov
pusha
pop
mov
mov
out
xchg
imul
retf
es
sub
sti
mov
stc
mov
shr
cmc
inc
jmp
in
xchg
xchg
jo
push
imul
push
test
faddp
and
jle
and
jno
push
mov
test
adc
add
adc
xchg
mov
test
xor
cmp
jnp
stos
imul
hlt
mov
shl
addr16
mov
pop
sbb
clc
call
sbb
fisub
pop
mov
es
and
es
aad
and
sub
out
in
jge
(bad)
cmp
(bad)
ins
or
push
call
jge
ret
ja
or
fnstcw
out
sbb
and
push
icebp
pop
push
(bad)
sub
(bad)
ja
sti
mov
in
retf
push
mov
dec
xchg
les
xchg
xchg
sub
xor
out
(bad)
jmp
ret
ins
imul
add
adc
or
mov
sub
mov
xor
data16
imul
push
lods
mov
push
call
rcr
arpl
xor
xchg
xchg
adc
pop
xor
(bad)
jae
xchg
aam
sbb
pushf
pop
cli
xor
jae
fs
je
out
iret
cmp
adc
cdq
push
sbb
pop
nop
sub
or
or
mov
cmp
imul
cmp
sub
cdq
dec
push
mov
les
xchg
add
dec
mov
sahf
sub
fdiv
pop
sbb
mov
jp
das
jmp
and
add
pop
jg
scas
out
mov
in
sub
sbb
mov
ins
jne
int
test
xchg
push
test
jg
mov
jne
mov
pop
add
fwait
in
mov
xor
aaa
push
test
inc
aam
mov
add
push
sub
sbb
and
out
or
and
jne
and
xor
xchg
inc
sub
lods
stc
or
mov
(bad)
xor
test
hlt
push
popa
enter
outs
sbb
movs
test
jl
adc
sar
add
jp
ins
xchg
cmp
loopne
xchg
add
test
push
adc
pop
call
push
test
scas
pop
mov
push
and
mov
xor
repz
push
xchg
sbb
pop
mov
jno
xor
fcmove
ins
mov
jp
xchg
mov
mov
cmps
inc
pop
adc
mov
xor
test
sar
je
xchg
xor
hlt
addr16
js
scas
into
les
sbb
cmp
add
pop
xor
loopne
pusha
enter
iret
sar
adc
jnp
loope
inc
sbb
test
and
repnz
inc
mov
sub
cmp
in
pop
daa
test
or
sbb
sub
call
out
jmp
shl
cdq
push
cmp
sub
iret
xchg
jmp
clc
inc
or
je
repz
loopne
mov
iret
fst
fistp
inc
cld
js
call
jmp
cmp
mov
push
repz
or
and
in
out
in
test
cmp
mov
jo
sub
jg
jle
or
jb
sbb
cwde
inc
gs
mov
jecxz
push
sbb
cld
sti
sbb
adc
outs
or
xchg
push
xchg
iret
jb
mov
inc
dec
mov
ins
test
dec
jo
leave
gs
xchg
and
(bad)
pop
sahf
div
imul
jns
push
ffreep
dec
xchg
xor
or
inc
jg
xchg
fimul
sub
xchg
dec
mov
xor
lea
and
es
mov
adc
jl
ins
lds
add
mov
cmc
mov
fadd
(bad)
sahf
xchg
cmp
test
js
add
jne
inc
shl
dec
sahf
or
lods
aad
xlat
or
pop
jne
call
ins
popa
stos
cmps
xchg
test
or
add
cli
call
jmp
or
cmp
sbb
mov
in
shl
movups
les
and
test
jle
jmp
in
movs
fbstp
inc
ins
or
add
cmp
fsubr
or
cli
shl
sub
rol
mov
leave
lds
add
scas
xchg
pop
xchg
push
pop
push
movs
xchg
mov
stc
jo
ret
sbb
sub
cmp
xor
imul
sbb
cmp
push
add
daa
lods
icebp
xchg
call
lahf
pop
xor
dec
pop
outs
dec
cmp
jns
add
loop
push
pop
xchg
mov
test
mov
mov
shl
pop
jbe
lods
or
sbb
cmp
jne
mov
xchg
test
retf
mov
arpl
xchg
and
cmp
ror
or
or
sti
clc
sbb
cmp
jmp
shl
mov
xchg
rcr
jns
mov
and
xor
(bad)
jae
xchg
mov
repnz
xor
sub
mov
cld
call
lods
push
or
sub
dec
sub
pop
adc
sti
push
lea
jg
mov
add
xchg
xchg
jl
movs
icebp
pusha
and
fcompp
xor
sbb
push
dec
jns
jb
(bad)
mov
popf
xchg
daa
xor
mov
jnp
ins
pop
and
or
jge
mov
pop
jge
loop
les
pop
retf
test
dec
sbb
in
cmps
xor
pop
out
outs
mov
push
inc
sahf
outs
xchg
xchg
es
jmp
hlt
push
or
or
sbb
retf
(bad)
loop
pop
adc
js
fyl2x
push
cmc
shl
xor
fadd
fild
and
movs
pop
xchg
hlt
mov
js
jp
fld
lods
add
mov
cld
ins
aaa
xchg
pop
loopne
fadd
xchg
or
out
pop
std
sub
loope
inc
pop
jge
stos
xchg
pandn
outs
test
mov
push
push
cmc
(bad)
lods
push
cs
add
sub
push
jmp
test
popa
mov
pusha
dec
cmp
push
cmp
test
xchg
cmps
push
xor
cmp
push
es
(bad)
xor
xor
les
std
cmp
xor
aas
test
pop
loop
cmps
loop
test
fadd
add
push
(bad)
xchg
push
mov
icebp
adc
popa
sub
lahf
push
xchg
push
rcr
inc
push
lds
test
retf
cmp
mov
mov
ja
retf
add
pop
jmp
and
out
and
inc
fadd
fild
jg
std
retf
bound
mov
mov
and
dec
clc
iret
inc
in
xor
not
ror
and
mov
rcl
xchg
imul
mov
movs
push
jae
out
fisubr
dec
pop
inc
push
mov
cli
xor
jg
bound
xchg
leave
cmp
inc
xchg
xor
mov
jmp
xchg
fidiv
adc
xchg
pop
mov
xchg
pop
test
xor
ja
les
cmp
dec
or
cmp
test
out
adc
stos
in
rcl
sbb
pop
push
xor
mov
repz
pop
mov
push
xor
xchg
mov
(bad)
loope
cmp
scas
cld
hlt
fcom
lea
xchg
mov
jp
xor
and
cld
(bad)
sahf
xor
ds
xor
xchg
mov
paddb
push
pop
push
daa
fidiv
or
(bad)
xchg
xchg
lea
stos
fwait
xchg
loope
jmp
mov
jmp
pop
xchg
jmp
sub
daa
jmp
cmp
cmp
cli
sbb
push
jnp
xchg
hlt
and
lea
sub
xchg
je
fild
test
into
adc
stos
jp
lahf
mov
mov
cdq
iret
xor
cmps
cmp
(bad)
xor
mov
je
mov
xchg
(bad)
jno
stos
mov
imul
jne
cmp
in
cmp
js
ret
pop
xor
push
jmp
dec
data16
lea
rol
xchg
sbb
mov
js
sar
xchg
mov
ins
cs
int3
lds
movs
push
xor
test
ins
jl
nop
movs
mov
xlat
dec
jmp
cli
jb
xchg
aas
xchg
or
(bad)
bound
mov
dec
cli
fild
je
daa
addr16
hlt
adc
xor
mov
dec
dec
stos
imul
pushf
fdiv
xchg
pop
mov
ins
push
les
adc
xor
and
add
pop
xor
repnz
daa
adc
pop
pop
mov
push
outs
clc
stc
jne
cmp
test
jae
jecxz
mov
lods
jp
test
test
adc
cdq
mov
xor
out
dec
mov
cmp
jb
outs
out
pop
(bad)
push
xor
xchg
pusha
xchg
out
stos
xchg
sub
mov
inc
retf
stos
out
stos
jmp
or
mov
xchg
les
lods
sub
push
dec
lea
pusha
adc
js
and
xchg
sar
scas
call
pushfw
jge
or
and
mov
lds
pop
lds
or
repz
out
(bad)
js
scas
sbb
cmps
sub
les
cmps
pop
xchg
lea
xor
fldcw
fcmovbe
push
adc
dec
sbb
xor
test
jb
je
in
lock
xor
ret
cmp
ror
into
push
int3
xor
mov
fild
cld
jmp
test
in
inc
push
dec
add
sub
mov
inc
ins
mov
push
push
xchg
call
(bad)
aaa
and
sbb
sbb
and
cmp
inc
mov
clc
out
and
pop
mov
mov
adc
cmc
push
and
jae
ret
rcr
mov
push
fiadd
add
int3
xchg
mov
jp
and
dec
sub
test
pop
loopne
sbb
or
(bad)
xchg
xchg
dec
jo
std
mov
and
and
push
mov
paddsb
and
add
aaa
jne
sbb
imul
lds
adc
repz
mov
icebp
(bad)
out
and
ret
shl
loopne
xchg
dec
fsubr
xchg
out
call
fmul
arpl
data16
cld
jnp
call
repnz
xor
mov
loop
test
shl
mov
xchg
dec
jne
jae
test
or
adc
jp
(bad)
(bad)
xchg
movs
into
mov
int
popf
aas
aam
cld
clc
mov
sbb
jl
je
pop
lods
add
pusha
jl
mov
(bad)
loope
paddw
outs
jl
addr16
clc
pop
daa
mov
cmp
loope
push
in
jl
push
cs
pop
test
pop
xchg
stos
cld
imul
jl
outs
push
loope
std
sahf
xchg
ins
jnp
mov
jbe
dec
cld
test
sub
popa
xor
push
jl
je
mov
xchg
shr
js
xor
rcl
add
cdq
adc
xchg
sar
mov
dec
adc
pop
aaa
push
add
xlat
cmc
sub
fstp
push
sub
cmp
cld
fwait
daa
push
push
jmp
shl
pop
mov
cld
sahf
cmp
mov
inc
out
sub
jge
ret
std
scas
push
aad
add
xchg
outs
jbe
(bad)
ss
add
mov
popf
xchg
fist
mov
xchg
cmp
cwde
stos
mov
xchg
cmp
out
aas
js
adc
mov
mov
cmp
in
xchg
in
ret
adc
xchg
aas
mov
adc
and
push
sub
xchg
ss
fsub
out
mov
xchg
movs
xchg
out
call
mov
fadd
cmps
rcl
mov
mov
mov
push
test
and
push
mov
mov
nop
jae
gs
dec
stc
mov
mov
outs
mov
jne
pop
xor
aaa
mov
mov
jmp
mov
xchg
add
pop
pop
iret
cld
popf
xchg
cmp
inc
rcr
xchg
idiv
jmp
cmp
sbb
jbe
les
cmp
jmp
(bad)
cli
outs
push
shr
sbb
xlat
pop
and
clc
shl
mov
jae
mov
mov
leave
test
lea
or
jl
aad
addr16
movs
push
jnp
and
mov
sti
nop
fidivr
and
or
sbb
movs
and
fcomp
inc
imul
xchg
rcl
ja
sbb
and
mov
cmc
pop
adc
mov
fcom
xchg
sar
mov
jo
cwde
out
imul
cmc
sbb
sar
sub
pop
adc
or
inc
ss
lea
xor
popf
retf
jp
push
jae
jmp
push
dec
(bad)
sub
jp
std
call
and
push
das
sub
in
jo
imul
jmp
mov
pop
loopne
sbb
out
adc
sub
mov
ds
xchg
inc
and
stos
inc
xor
or
in
mov
sbb
jg
shl
mov
jl
xchg
les
cmp
pop
mov
xchg
sets
push
dec
mov
mov
jl
cmps
icebp
in
push
lds
mov
es
fwait
cli
stc
cdq
(bad)
jae
push
std
mul
xchg
cmp
xor
add
jns
(bad)
in
icebp
xchg
rol
loope
cmp
pop
jmp
cmp
or
xor
xchg
or
popf
js
or
hlt
and
push
xchg
mov
ret
push
xchg
lock
sub
fldenv
dec
push
push
jae
mov
mov
pop
jne
sbb
pop
sbb
(bad)
fldenv
jmp
and
shl
out
push
movs
or
popf
sub
mov
adc
rcl
xor
cmp
jb
xchg
test
in
mov
lds
rol
jmp
or
xor
xchg
sbb
rol
jo
push
xchg
xlat
mov
stc
adc
jle
mov
leave
enter
push
test
lds
in
pop
inc
icebp
and
ret
lahf
sub
mov
mov
scas
cs
loopne
or
and
stos
mov
div
jbe
mov
cmp
pop
shr
jp
jp
es
inc
and
mov
lock
sub
pop
cmp
xor
idiv
add
jbe
pusha
push
xchg
enter
xlat
adc
fst
mov
frstor
jge
in
std
nop
les
imul
retf
cs
mov
daa
or
mov
mov
in
inc
(bad)
add
push
cmp
jl
mov
ret
push
(bad)
shr
icebp
test
adc
test
xchg
loope
inc
mov
sub
adc
int3
mov
pop
fwait
mov
movs
mov
cmp
adc
push
jmp
pop
gs
adc
data16
cli
dec
loopne
jg
push
xchg
cmps
and
xchg
and
loope
or
cmps
mov
cmps
aad
scas
jle
xchg
cwde
add
into
push
loop
mov
or
inc
call
push
rcl
ins
pop
inc
jne
sbb
movs
mov
jbe
arpl
imul
aad
daa
push
cmp
pop
add
mov
inc
adc
cld
(bad)
mov
adc
inc
aas
adc
jl
adc
(bad)
xor
pop
sbb
inc
faddp
mov
lea
ss
ret
cmp
(bad)
hlt
cmp
in
add
adc
and
imul
pop
mov
pop
int3
xchg
push
jmp
mov
out
fcom
mov
push
nop
sub
lahf
lods
cmps
xor
xchg
jne
jmp
in
shl
mov
dec
mov
stos
jno
dec
and
jmp
mov
int
div
jns
and
lea
das
fisubr
loope
sbb
xchg
popf
push
addr16
jo
shr
arpl
pop
push
push
into
retf
imul
mov
lods
add
push
cmp
popa
adc
or
(bad)
ficom
push
jnp
fucomi
pop
test
xchg
aad
jae
daa
stos
jg
push
adc
push
fisubr
push
xor
push
jecxz
retf
sbb
in
stos
repz
sub
(bad)
sub
cmp
dec
adc
in
xchg
repz
lods
mov
pop
inc
add
out
push
sbb
mov
and
addr16
std
mov
dec
xchg
jmp
lods
pop
dec
sub
(bad)
jmp
jg
mov
les
jo
cmp
jle
jne
repnz
fs
xchg
in
xor
jo
les
xchg
outs
aas
sbb
or
pushf
xchg
mov
dec
jne
nop
and
mov
cmps
(bad)
ins
pop
and
mov
add
sar
xchg
fld
jecxz
adc
cld
add
mov
add
dec
outs
gs
adc
sub
sbb
cwde
outs
adc
add
sub
jg
pop
in
leave
mov
in
js
stos
mov
dec
inc
xor
ds
inc
out
ret
or
push
jge
adc
out
or
(bad)
jmp
xlat
dec
sbb
jge
xchg
(bad)
adc
cdq
out
lods
cwde
jno
add
in
push
jl
icebp
mov
xor
cmp
mov
adc
add
retf
adc
cmps
mov
dec
ja
pusha
inc
lods
aaa
rcl
inc
pop
(bad)
xlat
jae
sbb
call
les
xchg
loope
adc
dec
lea
jge
sub
jne
repnz
jge
test
or
in
jns
(bad)
mov
fstp
or
movs
xchg
push
cmps
aaa
cmp
mov
inc
dec
push
and
sbb
mov
add
inc
jnp
fwait
shl
test
iret
fcom
pop
hlt
xor
dec
hlt
mov
jecxz
out
xchg
loope
pushf
push
dec
dec
xor
push
scas
sbb
sbb
adc
rol
js
pop
and
mov
rcl
les
xor
add
ins
jns
xor
std
popf
dec
cmp
fisttp
das
call
les
mov
or
(bad)
out
in
ins
mov
xor
xchg
jb
push
mov
mov
inc
add
ror
hlt
sbb
xor
push
sub
or
jp
xchg
and
cld
ror
or
add
cmp
jno
mov
shl
fmul
xchg
pop
pop
shr
and
stc
push
ret
inc
pop
jns
les
mov
clc
sbb
ins
push
sbb
cmp
adc
pop
mov
inc
mov
push
loopne
sub
xor
jo
add
repz
add
ins
sbb
nop
es
mov
pop
push
jmp
in
sub
jns
aam
fs
jp
xchg
mov
mov
movs
fist
inc
out
mov
shrd
pop
jmp
(bad)
or
xchg
jle
dec
xor
push
mov
jle
fsub
in
pop
inc
inc
iret
and
xor
dec
data16
xchg
test
push
test
inc
shr
lods
aad
(bad)
jbe
pop
lea
mov
int3
xor
test
inc
dec
inc
xchg
mov
or
in
adc
xor
and
out
ror
adc
jo
ror
inc
push
xor
cmp
xchg
push
adc
jns
push
sar
lahf
cli
cmp
or
xchg
ret
adc
mov
jge
xchg
das
cmc
mov
pop
push
or
push
sbb
mov
clc
rol
jl
inc
scas
jae
popf
pusha
fs
outs
ss
mov
aad
retf
mov
pop
push
push
push
std
adc
push
repnz
dec
fcmove
pop
in
xchg
imul
jb
dec
xor
xchg
call
and
pusha
hlt
jl
pusha
xchg
xchg
fisttp
out
inc
addr16
hlt
adc
or
push
outs
repz
xchg
inc
cmp
test
inc
ror
outs
out
in
cmc
in
pop
mov
rcl
xor
cmp
inc
repz
dec
cdq
sub
mov
and
dec
rol
ds
sub
repz
(bad)
mov
cld
and
leave
xor
adc
adc
les
adc
pop
movs
cmp
fwait
mov
xchg
inc
push
push
sar
icebp
xchg
ret
push
mov
push
push
cmps
mov
ret
cmp
push
(bad)
mov
test
mov
mov
cwde
inc
imul
or
jne
mov
jg
mov
cmp
pop
push
sub
xchg
mov
xor
mul
ret
jne
inc
sbb
dec
inc
sbb
daa
xchg
in
xchg
shl
push
and
stc
sbb
inc
ins
mov
fwait
loope
ins
lds
mov
push
and
jp
(bad)
fdivr
out
sub
test
adc
mov
aam
or
iret
pop
add
add
lahf
push
and
lds
(bad)
cmc
jae
stc
fmul
int
fidiv
xchg
movntq
loope
test
xchg
xchg
mov
pop
inc
mov
add
adc
daa
xchg
enter
retf
mov
fist
outs
jge
mov
sbb
sub
call
jle
or
cmp
fs
dec
cmp
xlat
jmp
shl
dec
push
push
jg
inc
and
scas
xor
retf
sbb
lds
data16
and
jle
ss
xchg
inc
jle
and
dec
adc
cmp
scas
jmp
add
scas
add
xor
data16
into
cwde
dec
ret
imul
cmp
adc
push
adc
jne
int3
xchg
mov
out
xlat
jp
cmp
test
mov
lods
aas
fdiv
shl
pop
sar
lahf
xchg
xor
in
imul
ror
add
(bad)
mov
xor
jmp
push
out
fisubr
jae
push
cdq
(bad)
addr16
push
push
sub
sub
or
repz
push
(bad)
addr16
ficom
jp
dec
cwde
adc
jp
lock
inc
test
in
mov
movs
out
imul
jmp
sbb
xchg
(bad)
adc
inc
pop
xor
push
mov
in
lods
jp
or
pop
fimul
std
inc
stc
ror
ficom
stos
cwde
bound
aaa
mov
adc
push
int3
and
jecxz
sub
mov
ret
sub
stc
pshufw
ins
xor
icebp
jo
add
jae
imul
or
push
pusha
cs
xchg
mov
mov
mov
cmp
dec
movs
mov
sub
and
or
sbb
aad
dec
inc
test
(bad)
adc
push
and
mov
in
xchg
and
cmps
lahf
sbb
sub
mov
adc
loope
aam
mov
pusha
test
retf
sbb
cmp
lea
and
shr
cmc
mov
or
adc
push
call
pop
add
(bad)
mov
jp
xchg
jle
mov
add
mov
mov
popa
retf
mov
cmc
in
imul
pusha
ins
xor
push
sub
or
loopne
stc
xchg
mov
inc
mov
cld
add
jmp
mov
test
xor
jmp
mov
sub
call
rcr
inc
inc
fnsave
nop
popa
int3
push
xchg
popa
cmp
pop
add
mov
mov
inc
mov
je
xchg
mov
pop
imul
xor
and
xchg
mov
cmp
hlt
out
inc
xchg
jecxz
test
outs
xchg
mov
test
retf
xor
xchg
mov
adc
mov
cmp
rcl
xor
scas
cmp
xchg
pushf
jae
push
mov
push
cli
lea
sbb
arpl
lahf
int
test
jmp
fdivr
in
test
xchg
mov
push
ret
imul
arpl
pop
je
bound
mov
dec
inc
dec
mov
sub
jb
jne
inc
push
mov
adc
push
repz
mov
in
pusha
or
pusha
xchg
xor
rcl
call
in
je
xchg
cli
push
push
sub
and
retf
into
inc
(bad)
jle
pushf
pushf
in
mov
cmp
loope
jae
shl
cwde
and
ins
mov
xor
imul
vorpd
sbb
xor
test
fistp
loopne
mov
dec
pop
mov
int
cs
cs
pop
icebp
cmc
mov
push
mov
mov
addr16
daa
and
pop
mov
aad
stos
mov
fst
pop
es
jae
adc
adc
add
dec
adc
push
sahf
(bad)
fistp
inc
test
pop
aaa
and
jmp
clc
sbb
xchg
jp
and
das
cmovo
adc
cdq
test
test
sbb
jne
mov
je
test
in
movs
mov
dec
sub
xchg
loop
leave
sbb
fadd
sbb
mov
sar
cmps
loopne
xchg
mov
mov
in
adc
inc
xor
js
hlt
scas
ins
add
fild
popa
xor
(bad)
pop
sbb
call
shr
sar
pop
mov
repz
xor
xor
push
cmps
lods
pop
es
ins
sti
push
pop
add
cli
lods
adc
xor
je
dec
dec
xchg
sbb
test
xchg
je
sub
xchg
and
sahf
pop
cmp
cld
jg
leave
xchg
xor
daa
xchg
inc
data16
or
cli
cmp
adc
mov
xchg
aas
jmp
jne
sbb
add
js
dec
es
and
les
fimul
add
push
jae
cmps
inc
cmp
aam
call
movs
or
xchg
fisttp
test
inc
into
xor
or
sub
in
dec
ret
std
and
adc
and
xchg
dec
mov
cwde
sbb
sti
movs
xor
rol
cmp
(bad)
push
inc
and
ins
pop
pop
pop
int
vphaddubq
pop
addr16
xchg
jno
cmps
or
or
xchg
std
pop
jno
pop
cmc
push
mov
std
jbe
call
push
pop
dec
mov
push
ficom
in
fsubr
out
push
jge
shr
and
scas
fidivr
adc
or
jp
and
outs
cld
adc
cwde
js
retf
adc
inc
xchg
xchg
mov
lods
jle
xlat
cmp
xchg
mov
test
add
movsx
jl
pusha
cdq
loopne
inc
inc
cmp
xor
jmp
xor
xchg
dec
inc
les
test
iret
fmul
into
(bad)
stos
pop
mov
inc
push
inc
idiv
and
xor
les
mov
jmp
or
push
out
and
test
out
addr16
xchg
jle
fist
lea
add
sub
mov
and
sub
retf
ret
xor
xor
or
and
cmp
xor
add
es
xor
sbb
nop
mov
and
sbb
int
inc
sti
in
dec
aam
std
sub
add
mov
repz
jmp
cmps
xor
mov
dec
sbb
pushf
xchg
sbb
sti
sub
jae
xchg
adc
test
mov
fcmovne
mov
jo
es
xchg
xchg
int3
push
dec
test
cli
outs
mov
jecxz
rcl
ins
sub
push
adc
in
or
lds
sub
sbb
or
jmp
fisub
sub
cmc
jecxz
cmp
jo
mov
scas
cmp
xor
cmp
test
test
or
lds
inc
xchg
mov
jge
outs
lock
dec
or
jb
mov
sub
outs
mov
mov
arpl
test
dec
add
push
jmp
fs
dec
xchg
dec
int3
dec
mov
and
push
or
std
out
and
cmp
add
dec
sbb
mov
in
pop
push
xor
and
or
test
cmp
pushf
pop
mov
jp
sbb
cmc
enter
or
in
in
out
outs
or
jo
add
inc
push
loopne
fldenv
aad
cmp
or
jne
and
(bad)
xchg
xchg
xchg
or
jmp
xor
repz
ror
xor
sub
jmp
jp
push
sub
jecxz
ds
jg
aad
cld
dec
or
sbb
add
sbb
sbb
cs
jo
xchg
adc
push
and
and
xor
push
and
cmp
jmp
jp
dec
in
jge
into
sbb
sti
inc
push
adc
lds
pusha
hlt
xchg
pop
ret
add
xchg
call
sbb
add
xor
cmp
mov
outs
push
ins
imul
sub
cmp
repz
jo
push
mov
(bad)
jmp
sar
fs
cld
mov
xor
addr16
push
into
lods
pshufw
jne
repz
jecxz
lock
out
mov
ins
mov
mov
pop
ret
shl
pop
lds
xchg
(bad)
addr16
cmp
(bad)
ja
clc
jb
jae
xchg
das
int3
ror
and
inc
lods
sbb
push
push
mov
jg
out
add
cld
arpl
hlt
aaa
ret
dec
hlt
clc
xor
cmp
repz
js
test
xchg
adc
pushf
in
js
jmp
push
xor
and
cmp
cld
xchg
aam
mov
pop
jmp
ret
int3
iret
push
outs
xor
xlat
jno
nop
test
in
shl
xchg
nop
dec
mov
sub
sbb
and
(bad)
mov
imul
int
add
and
nop
(bad)
push
push
mov
adc
xor
xchg
dec
add
sbb
mov
cmp
push
push
jmp
dec
scas
jge
cmps
fstp
mov
jecxz
repnz
push
cwde
out
ret
in
mov
sbb
shl
jae
mov
out
fmul
add
inc
out
push
ds
jne
jl
ret
sub
nop
or
stos
sbb
fs
add
and
dec
test
dec
jmp
adc
test
ffreep
cmp
jne
dec
aaa
loope
imul
div
xchg
xchg
xor
dec
mov
ja
adc
push
mov
movs
mov
mov
mov
mov
cs
mov
xor
adc
addr16
call
lods
push
pop
pop
xchg
sbb
test
les
call
sub
cmp
mov
test
pop
(bad)
mov
pop
daa
ss
div
into
daa
jmp
inc
xchg
push
sahf
push
cmc
es
sub
pop
sar
scas
lock
fisub
loope
cwde
add
iret
test
adc
push
dec
pop
loope
xchg
sub
and
js
and
mov
cmps
stos
cli
jnp
retf
or
sbb
mov
loope
cmp
or
loopne
mov
mov
mov
popa
(bad)
idiv
inc
jne
xchg
xchg
inc
shr
add
jne
gs
mov
mov
cmc
jne
cmp
mov
(bad)
xlat
sub
cli
lds
jne
adc
mov
jl
add
pop
jmp
js
sub
les
cwde
pop
jecxz
fiadd
rol
iret
xchg
cld
push
mov
dec
ins
mov
lock
mov
daa
in
test
dec
mov
add
xchg
mov
shl
je
(bad)
call
xor
jmp
xlat
jne
mov
cwde
and
stos
call
ds
loopne
sub
cmc
jmp
cmp
xor
lods
mov
leave
mov
jns
stos
fucomip
cmp
mov
push
lods
aaa
xchg
ja
jmp
pusha
push
(bad)
xor
fiadd
and
lea
movs
addr16
or
imul
sbb
shr
test
push
loope
dec
fcomip
in
dec
sbb
lods
mov
nop
jecxz
sti
sub
dec
test
ror
pop
mov
push
lds
sbb
les
loope
fmulp
pop
push
sub
jp
push
sub
jmp
int3
ss
cli
repz
mov
icebp
xchg
test
rcl
dec
ja
psrlq
popf
jo
adc
test
cmc
lods
sub
push
adc
push
pop
(bad)
pop
push
daa
xchg
or
jo
xchg
pop
pop
inc
jl
daa
xchg
fsubr
js
mov
adc
js
xor
ins
push
jge
repz
daa
pop
jmp
mov
cmp
retf
cwde
div
mov
jg
ins
js
pusha
xchg
das
inc
pushf
hlt
xchg
pop
pop
mov
fadd
js
mov
mov
sbb
int3
mov
or
int
je
dec
cmp
and
mov
cmp
ficom
ret
jmp
retf
jl
sub
stos
cs
cmp
xor
or
(bad)
pop
cmp
in
and
xor
sbb
add
in
sar
jmp
mov
cmc
test
addr16
call
lods
add
jmp
ret
popa
lock
inc
imul
jle
lods
push
xchg
jae
mov
clc
(bad)
pop
aad
push
aam
out
or
out
imul
and
imul
sbb
adc
call
sub
scas
cmp
repz
ficomp
call
sbb
xchg
xchg
push
jle
adc
cmps
dec
(bad)
xor
je
ret
inc
and
in
lods
adc
xor
add
pop
into
mov
push
push
cdq
out
push
sub
sahf
outs
clc
repnz
and
out
ret
push
or
add
idiv
or
push
data16
rcr
xchg
data16
movs
stos
jle
bound
in
xchg
inc
push
mov
and
and
fistp
xchg
mov
pmuludq
pop
cmp
and
xchg
outs
push
dec
shr
jecxz
jmp
loope
mov
mov
outs
bound
iret
dec
cmp
test
leave
rcl
pop
push
shr
(bad)
gs
std
and
das
or
pop
mov
mov
mov
dec
test
mov
sar
clc
push
aas
dec
pop
out
fstp
xor
inc
sbb
dec
js
test
aad
xlat
xor
mov
jns
and
data16
push
(bad)
pop
push
jmp
cmp
lods
and
ds
sahf
mov
push
sub
test
inc
call
jmp
fisttp
cmp
push
data16
xchg
sub
pop
cmp
repnz
pop
mov
retf
xchg
jne
fsubp
enter
call
pop
mov
sub
xor
aaa
pusha
mov
ret
mov
je
lods
clc
xchg
arpl
cmp
push
leave
adc
xchg
sbb
jns
dec
mov
dec
jo
ss
sti
sar
outs
in
ret
xchg
xor
jmp
sbb
xor
fsub
ret
xchg
dec
jo
mov
xchg
or
test
out
or
dec
cmp
sub
push
cmps
push
movs
je
lahf
iret
gs
dec
or
dec
enter
jmp
push
cmc
push
inc
mov
pop
loope
sbb
(bad)
or
sahf
cmp
lock
jl
mov
jge
sbb
enter
fsub
xchg
mov
mov
dec
cmp
mov
call
or
(bad)
mov
loop
xchg
adc
ret
stos
js
sub
or
push
in
dec
mov
clc
and
adc
test
jge
adc
test
jmp
in
jle
cmp
outs
daa
push
adc
add
imul
jne
sub
and
cwde
lahf
adc
sub
cmp
in
jg
test
aas
sbb
div
mul
xchg
loop
fdivr
hlt
shl
fbld
push
jne
jp
sbb
enter
clc
xchg
mov
jl
sub
mov
jne
xchg
xchg
ds
xor
push
dec
mov
cli
outs
icebp
jbe
shl
into
shr
call
arpl
sub
push
mov
bound
jmp
sub
cli
je
mov
in
pop
cmp
mov
pop
inc
mov
jmp
(bad)
hlt
jae
xchg
lock
test
fwait
xchg
pop
sub
mov
add
das
cmp
ficom
cs
rol
cld
xor
sbb
call
cmp
stc
mov
arpl
inc
in
pop
test
dec
stos
jae
jo
inc
sbb
jge
xor
in
cld
dec
sub
adc
mov
add
push
cmp
mov
sbb
pop
sub
pop
xchg
pop
les
int3
sar
push
pop
aam
mov
out
lea
fld
or
int3
(bad)
test
and
xor
jp
ficom
or
sub
das
inc
cmp
addr16
call
xchg
xchg
push
sub
push
jne
xchg
xchg
sbb
ret
mov
mov
jo
push
jne
xchg
fistp
pop
leave
dec
sbb
pop
mov
mov
out
push
sbb
adc
ret
adc
mov
daa
adc
lahf
sub
js
push
dec
sub
push
or
jecxz
push
shl
mov
cld
or
pushf
dec
mov
xlat
add
and
lea
mov
test
rcr
(bad)
push
aaa
mov
and
sbb
and
or
loope
ret
ror
push
test
xor
nop
or
pop
xor
cld
or
xor
sbb
test
and
mov
ret
mov
pushf
xchg
and
mov
sahf
clc
add
shl
pop
xor
sub
aam
add
leave
jge
cli
lea
push
sub
inc
stc
repz
sub
jns
cmp
lods
mov
cli
sti
jb
jmp
cmp
xlat
sbb
js
cmp
in
pop
sub
jne
pop
ror
stos
fdiv
(bad)
(bad)
xor
mov
scas
(bad)
mov
ret
add
xchg
pusha
mov
out
and
mov
jle
dec
mov
das
and
lahf
cmp
jne
xchg
pop
adc
pop
jmp
or
jne
xchg
push
lock
xor
rcr
mov
sub
pop
outs
jmp
dec
inc
xor
bnd
xchg
gs
cmp
call
test
clc
shl
dec
jle
enter
xor
call
sub
sub
jmp
jno
cmps
jmp
xchg
popa
xchg
sbb
in
int3
stos
xor
mov
push
out
mov
mov
xchg
xchg
pop
ins
sbb
jmp
mov
int
pushf
call
into
daa
mul
mov
adc
test
xor
sbb
stos
pop
mov
mov
aad
out
xchg
(bad)
test
pop
dec
sub
sbb
jb
(bad)
push
test
xchg
nop
outs
pushf
(bad)
js
jge
fldcw
in
hlt
mov
mov
ret
cmp
xchg
push
push
pop
mov
mov
push
push
push
pop
ins
int3
cld
xchg
fwait
sub
mov
(bad)
fs
loope
xchg
mov
leave
sub
add
push
jbe
xor
sub
lods
lods
inc
ins
push
out
jbe
mov
sub
mov
sub
inc
call
in
cmp
push
and
scas
xchg
dec
xlat
xchg
xchg
bound
add
push
ret
js
push
mov
rol
repz
pop
push
sbb
aad
movs
out
mov
xchg
retf
pop
mov
xchg
imul
push
jp
dec
xchg
ja
cmps
fnstenv
jns
inc
cmp
push
push
sub
out
push
pop
push
jg
pop
xchg
ror
ss
adc
cli
movs
std
in
in
rcr
push
jecxz
or
(bad)
adc
jns
mov
imul
shr
into
scas
ret
or
pop
sub
clc
adc
sbb
test
xchg
or
cs
jp
daa
pop
(bad)
and
int
jp
or
loope
dec
rcl
icebp
stc
ja
ret
imul
push
cs
pop
mov
mov
adc
adc
mov
int3
or
jb
fistp
cmp
cmps
nop
adc
test
rol
pop
push
sub
mov
jb
lods
cmp
mov
pop
xchg
js
out
aam
imul
mov
hlt
adc
fmul
sub
mov
cwde
addr16
out
in
(bad)
pop
imul
fwait
adc
cli
pop
jo
mov
cmp
lds
outs
sub
imul
fistp
dec
sub
pop
mov
mov
xor
pusha
jmp
bound
fs
cmp
adc
jmp
cmp
mov
in
jns
mov
dec
xor
addr16
dec
mov
add
sbb
sub
xor
mov
js
push
outs
sbb
push
adc
lods
mov
cmc
pop
(bad)
fs
fld
xor
mov
pop
cld
pop
aam
lea
pop
dec
mov
sub
jb
dec
mov
xchg
jmp
daa
jmp
xchg
dec
xlat
xchg
xor
cmp
adc
push
cmps
adc
leave
jle
xlat
sub
sar
inc
adc
jp
xchg
stos
sbb
mov
pop
dec
(bad)
cmp
xor
nop
inc
or
xchg
jge
mov
imul
mov
add
(bad)
aad
in
pop
popf
pushf
push
js
int3
cmc
sub
mov
iret
or
loope
gs
test
push
jae
leave
cwde
das
cld
sbb
sbb
js
mov
stos
xchg
xchg
add
mov
loopne
mov
mov
in
xchg
not
aam
call
dec
ja
in
mov
jge
sti
inc
mov
jns
imul
cmp
mov
mov
sbb
retf
mov
daa
mov
and
sahf
jns
ror
fdiv
cs
pop
rcl
push
leave
jp
(bad)
aas
pop
es
cmp
stos
pop
and
cmp
pop
mov
fidiv
int3
sub
fs
adc
jo
into
or
jp
inc
test
xor
or
pusha
adc
jo
cmp
int3
call
xor
jne
mov
sbb
cmc
add
push
mov
dec
xchg
mov
adc
mov
jmp
outs
aaa
inc
cli
push
mov
jle
mov
mov
pop
cdq
(bad)
pop
mov
icebp
cmc
test
test
push
jnp
js
dec
mov
sbb
bnd
rcl
mov
in
pop
jmp
fmul
jmp
imul
xchg
jmp
fcmove
xchg
adc
xchg
dec
std
test
add
je
outs
mov
xchg
sahf
sbb
xor
dec
mov
movs
dec
inc
js
shr
adc
cld
ret
sub
add
test
imul
mov
cmps
mov
dec
fisub
cld
sub
push
jmp
test
xchg
push
xchg
jb
adc
pop
lods
xor
in
and
(bad)
(bad)
loope
inc
push
mov
loope
sbb
jne
fistp
lds
cmp
mov
cmp
push
loopne
xchg
cdq
aas
pop
jle
and
out
(bad)
or
xchg
or
ret
cmc
loopne
out
xor
sbb
xchg
sub
cmp
inc
imul
pop
popa
push
xor
adc
dec
cmps
xchg
xor
cmp
std
movs
push
xchg
push
and
mov
bound
xor
push
lock
(bad)
stos
jp
mov
mov
cdq
adc
push
pop
mov
sti
jnp
add
jmp
(bad)
pop
add
loopne
outs
mov
add
pusha
cs
mov
inc
pop
hlt
xor
sub
retf
out
xchg
mov
pop
mov
shr
sbb
cmp
mov
jecxz
out
iret
mov
call
cdq
je
test
outs
fistp
jbe
adc
sbb
mov
jecxz
add
xor
mov
jge
or
ins
xchg
inc
rol
(bad)
mov
cwde
adc
popa
stos
cwde
test
jmp
inc
push
pusha
add
or
sub
sub
sbb
and
pop
mov
xchg
xor
icebp
cli
xchg
arpl
or
fs
jmp
stos
enter
sar
in
std
adc
mov
push
mov
jne
dec
add
fild
out
jns
pop
es
mov
sub
mov
xor
les
push
movs
(bad)
clc
cli
scas
pop
into
xchg
push
std
adc
nop
imul
sub
xchg
sbb
repnz
jno
add
jns
cmp
ror
cmp
loope
push
into
sub
jbe
pop
addr16
pop
imul
repnz
sub
jp
(bad)
jecxz
in
push
cmp
lock
pop
sbb
cmp
hlt
mov
and
pop
cmc
push
sub
outs
out
mov
pusha
inc
sbb
or
jmp
call
add
mov
movs
sub
pop
push
hlt
mov
dec
in
add
mov
scas
mov
out
or
push
repz
(bad)
or
pop
jecxz
std
(bad)
out
jle
or
out
xchg
mov
xor
add
adc
push
add
bound
int3
xchg
sub
jmp
jno
idiv
enter
mov
mov
xor
xor
into
cmp
inc
inc
retf
xchg
pop
push
cwde
inc
jg
push
xor
clc
fiadd
cmps
jns
jg
pop
sub
mov
dec
xchg
scas
not
repz
cld
mov
int3
mov
mov
sbb
jae
xchg
add
xchg
or
push
cmps
jp
xchg
and
lods
inc
std
adc
xchg
cmps
lock
xor
ror
push
cmp
mov
ret
sbb
adc
enter
es
dec
rcr
mov
out
rcl
sub
sub
(bad)
fisub
cwde
or
cmp
jge
adc
(bad)
cli
clc
mov
jmp
xlat
add
or
out
stc
das
inc
jmp
cmp
icebp
sti
popf
mov
inc
cmc
and
int3
push
repnz
inc
xchg
push
sub
sub
sub
mov
mov
sahf
push
xchg
or
sub
mov
jp
adc
add
cmp
push
and
pop
sar
xor
and
push
int3
cmp
xor
dec
clc
xor
cmps
add
xor
push
adc
mul
xchg
mov
(bad)
xchg
xchg
(bad)
hlt
mov
leave
sub
inc
or
std
cs
ds
mov
xor
mov
cmp
add
sub
mov
sub
jg
pop
sbb
lods
cmc
and
jb
pop
std
rol
adc
mov
and
retf
inc
jmp
js
clc
add
push
xor
int3
sti
xchg
and
scas
xlat
test
lods
ss
pop
mov
lds
ret
je
and
movs
test
jns
jns
div
cli
adc
(bad)
gs
aas
mov
jge
jns
or
xor
push
sub
loopne
retf
xlat
dec
or
xor
mov
pop
in
sub
adc
int
xchg
pop
add
or
pop
and
pop
sub
fisub
mov
lahf
ins
mov
in
icebp
aam
mov
xor
or
std
push
arpl
push
pop
push
dec
repz
pop
cmc
add
xchg
mov
sar
jge
(bad)
fdiv
jp
mul
sub
inc
sbb
cwde
out
xchg
dec
das
dec
ficomp
repz
outs
js
mov
dec
push
xchg
push
cmp
mov
xchg
sahf
xor
jl
repz
int
pop
sub
sahf
xlat
ret
mov
enter
rcr
rcl
mov
xor
cld
mov
aam
retf
fnstenv
daa
fs
xchg
loope
and
cmp
add
jmp
in
push
xchg
inc
(bad)
inc
mov
dec
pop
lea
jae
mov
rcr
xor
test
and
shl
cmp
push
(bad)
loope
xor
pop
push
ja
push
jecxz
bound
xchg
daa
sbb
mov
or
fsub
xchg
push
out
or
cmp
inc
or
mov
outs
add
div
fcmovne
xor
mov
mov
lods
aaa
xor
cmp
mov
add
adc
loopne
adc
xor
inc
aam
push
arpl
repz
sub
inc
xchg
or
and
iret
hlt
xor
aad
sub
lea
cmp
sub
xchg
mov
ret
xor
retf
cmp
sbb
pushf
add
out
lock
(bad)
push
sbb
sub
clc
and
dec
pinsrw
imul
push
sub
cmps
fisttp
mov
(bad)
ror
js
rcr
xor
sub
dec
imul
sub
add
loopne
lods
mov
add
dec
(bad)
mov
nop
out
imul
mov
mov
push
test
mov
adc
test
adc
lahf
aam
sub
or
test
add
call
mov
mov
imul
jp
ins
(bad)
pop
retf
out
jge
mov
jge
inc
mov
ins
shr
out
xchg
fisub
mov
push
xor
sbb
daa
rol
cmps
jl
mov
inc
scas
inc
cmp
jne
mov
jge
sub
mov
sub
(bad)
xlat
sbb
out
jns
xor
xor
clc
jge
mov
pop
in
jmp
add
fdiv
sub
add
mov
aam
into
sub
xchg
data16
mov
movs
cmp
jmp
movs
sub
das
jle
lock
xor
pop
shl
jns
lea
add
push
xor
test
hlt
xor
sbb
adc
out
mov
pop
fadd
xchg
xor
and
adc
pop
fucomip
mov
jg
pop
mov
repnz
cdq
mov
lds
add
jp
push
std
jnp
mov
idiv
push
xor
sar
sti
jno
xor
in
push
or
or
sahf
je
push
pusha
pop
jp
push
cmp
cmp
push
fnstcw
mov
out
std
adc
sub
add
cmc
xchg
jg
ins
mov
xchg
ficomp
test
bound
es
sbb
mov
js
sar
out
jmp
cmp
and
mov
in
adc
add
cvttps2pi
xor
cmp
test
ficom
jnp
xchg
push
hlt
imul
(bad)
cmp
cmps
pop
out
js
in
cdq
fidiv
lods
xchg
jmp
jns
mov
adc
out
dec
lds
xchg
cmps
cmp
out
dec
aad
add
retf
and
add
cmp
dec
xchg
cli
pop
rol
pop
xchg
xor
sub
std
sub
push
lds
sub
call
fiadd
test
ins
arpl
sbb
fimul
pop
xchg
mov
jecxz
push
push
adc
or
dec
cs
leave
sbb
pop
cld
fcomp
or
mov
mov
pop
sub
xchg
gs
push
pop
push
sub
jo
mov
outs
cld
pusha
stos
fbld
mov
mov
pop
or
jmp
xchg
adc
and
xor
ins
js
pop
movs
es
jo
mov
lock
daa
jmp
adc
fidivr
ret
cmovg
mov
hlt
mov
xor
pop
sub
push
jp
cmp
or
scas
push
(bad)
push
push
jb
cld
(bad)
inc
(bad)
jp
xchg
cdq
push
pop
sub
loop
or
sub
imul
jmp
or
sub
and
fcomp
jns
rcr
test
fld
loop
or
mov
cmp
push
rol
add
movs
push
imul
ret
std
sbb
outs
mov
mov
fcos
inc
mov
out
out
dec
jmp
mov
xor
xchg
dec
popa
mov
dec
mov
dec
icebp
rcr
daa
pop
jl
mov
jg
jl
nop
imul
hlt
push
pop
inc
xchg
add
fild
push
dec
out
out
stos
nop
mov
inc
cld
test
or
add
jmp
cmc
shl
mov
iret
daa
push
leave
and
lea
das
push
sub
pop
shl
shr
cwde
xchg
push
jle
and
test
sti
jnp
cmp
fstp
adc
push
xchg
add
mov
or
push
mov
add
add
push
mov
enter
xchg
adc
inc
ja
cld
add
arpl
and
mov
pop
sub
in
xchg
add
sub
ins
outs
std
push
push
add
jno
jbe
test
push
sahf
inc
mov
jle
xchg
lods
sti
imul
push
pop
movs
sbb
mov
les
mov
jge
mov
rcl
repz
cld
xor
in
xchg
xchg
lea
and
adc
inc
pop
cmp
pop
pop
jo
cli
xchg
xchg
adc
xchg
mov
or
das
stc
mov
mov
mov
and
mov
fucom
sub
cmp
fistp
cmp
xchg
cmps
iret
or
les
pop
cmp
js
stos
pop
fdiv
and
mov
push
aaa
daa
inc
test
push
sbb
pop
ror
or
sahf
mov
enter
adc
(bad)
mov
mov
sahf
retf
test
mov
retf
je
push
std
mov
outs
sub
movs
and
js
dec
xchg
xchg
fcmovnb
pop
jl
(bad)
fdivr
push
push
mov
mov
inc
scas
fstp
mov
push
cdq
mov
sub
inc
jo
pop
nop
adc
xor
pop
dec
cmp
jae
jp
push
lahf
fld
dec
mov
popf
hlt
and
push
xchg
data16
loopne
jecxz
les
mov
je
cli
jbe
fimul
les
popa
ja
cmps
rol
sar
xchg
sub
mov
scas
and
or
and
mov
cmc
xor
cld
mov
mov
in
mov
pop
sbb
sub
into
fnstcw
and
out
sbb
hlt
add
adc
popa
add
mov
cmp
pop
hlt
cdq
retf
or
mov
ret
add
jnp
fistp
ror
jbe
enter
in
je
sbb
mov
and
adc
push
stos
movntps
sub
mov
xchg
jl
adc
dec
sbb
mov
data16
sub
sar
vphaddubd
std
addr16
daa
push
mov
sub
jg
int3
and
rcl
xchg
aas
xlat
in
adc
xor
jge
adc
adc
retf
jns
mov
repnz
ins
xor
mov
push
pop
mov
loope
dec
and
dec
cmps
ja
and
and
or
out
fsub
cmp
mov
sub
mov
in
jne
dec
es
xchg
jle
or
out
and
jnp
mov
imul
js
pop
xchg
test
fdivr
jge
jmp
mov
cwde
xchg
xchg
add
inc
in
jae
cdq
rcr
xchg
iret
test
in
dec
jb
das
cmp
mov
stos
mov
jne
pop
mov
bound
or
push
cmps
dec
lds
cmp
inc
xchg
push
aas
mov
xor
ja
out
(bad)
sbb
stos
mov
lods
xor
dec
hlt
rol
push
xchg
fsubr
fwait
iret
outs
rcr
xchg
(bad)
das
or
cmp
ja
bnd
or
rcr
xor
dec
push
mov
loopne
cmp
dec
mov
ins
and
mov
loopne
and
sbb
sbb
enter
mov
cld
xchg
xchg
sbb
outs
jl
dec
mov
xchg
cmp
adc
les
push
ss
call
movs
js
and
mov
push
shl
mov
xor
je
cs
dec
aad
ret
in
adc
loopne
in
jae
inc
or
mov
imul
ror
mov
jae
inc
fdivr
imul
and
(bad)
sub
or
test
fsub
dec
xor
dec
jl
adc
sub
and
cli
jbe
cmp
lock
pop
lods
les
inc
cmp
and
rcl
out
aaa
pushf
scas
push
movs
retf
stos
xchg
cmp
sub
mov
daa
dec
inc
sbb
ret
cmp
adc
test
push
daa
cli
neg
or
popa
dec
or
sbb
xchg
push
pop
sbb
fist
mov
push
jmp
stc
jg
into
mov
xor
in
push
imul
(bad)
loope
push
aad
xor
or
dec
adc
popa
xchg
xchg
or
fs
aas
dec
pusha
jg
vlddqu
xor
das
ror
fstp
out
jle
nop
add
into
cmp
push
jo
jae
mov
sar
adc
xchg
and
arpl
je
sahf
jnp
pop
daa
(bad)
ret
push
call
sub
push
push
mov
inc
mov
call
inc
fsubr
add
sbb
adc
inc
(bad)
nop
adc
mov
cmp
mov
cmp
sub
push
rcl
dec
idiv
adc
cli
es
sbb
jbe
xor
jne
dec
lea
(bad)
mov
inc
ret
jbe
(bad)
aam
sub
dec
and
mov
lock
inc
jmp
imul
mov
cmp
cmps
bound
stos
shl
jmp
xchg
pop
jmp
ds
cmp
mov
ret
cwde
pushf
sub
mov
ss
mov
cli
push
scas
pop
cld
or
movs
jmp
test
xchg
push
add
pop
mov
fmul
icebp
inc
jns
sbb
add
or
or
sbb
sbb
xchg
xor
jne
(bad)
shl
nop
jmp
mov
adc
or
dec
leave
mov
hlt
das
in
in
imul
adc
jnp
and
or
adc
pushf
mov
mov
jno
xchg
loope
aaa
jmp
arpl
rcl
imul
cmps
cmp
dec
mov
pop
outs
jmp
sar
mov
and
dec
mov
xor
xchg
es
bound
pop
or
mov
pop
call
xchg
jge
les
retf
pop
loope
es
xchg
mov
pop
js
loopne
or
outs
out
ret
lds
jbe
jp
add
lods
xor
imul
mov
or
push
sbb
fisubr
sub
pusha
shl
sub
pop
imul
ss
aad
js
add
pop
jnp
cmp
mov
mov
test
mov
cli
in
jno
cmp
mov
pop
xchg
cs
clc
je
dec
push
jns
push
fnstcw
call
sbb
cdq
mov
jae
jne
push
xor
lds
or
jmp
mov
jnp
or
ror
add
add
mov
in
popa
add
sbb
lds
out
lods
mov
adc
inc
mov
or
jae
jnp
cmc
(bad)
mov
pop
cmp
inc
sar
mov
pop
mov
loop
aad
mov
icebp
push
pop
clc
and
cmp
and
mov
fstp
jp
int
xor
fcomp
std
adc
mov
inc
movs
adc
dec
aad
not
push
shr
sbb
js
popa
mov
mov
push
pop
es
cli
idiv
and
nop
(bad)
fcom
fmulp
mov
and
jmp
or
cmp
jb
mov
xlat
pop
test
jne
les
cli
xor
dec
test
in
jge
ret
shr
in
jp
push
cmp
retf
pop
mov
pop
inc
movs
fstp
sbb
cmc
imul
sbb
test
ffreep
xor
jae
es
inc
push
xchg
add
(bad)
mov
adc
fidiv
pusha
xchg
xchg
xor
jp
xchg
push
xchg
mov
and
fcomp
cmc
out
sbb
xchg
cmp
in
push
and
sub
sub
mov
iret
or
ins
dec
fnstcw
cli
out
jno
mov
mov
xchg
pusha
fnstenv
pop
xor
xchg
mov
cld
int
push
cmps
mov
xchg
aas
or
jge
test
rol
push
xor
sahf
fdivr
jle
cld
ret
shr
xchg
cmps
cld
fs
xchg
xchg
mov
hlt
std
pusha
and
(bad)
mov
or
rol
ret
inc
add
sbb
es
es
hlt
push
inc
sbb
jns
jae
jle
mov
xor
icebp
lods
mov
jns
jecxz
xchg
out
xor
nop
cmps
int
push
or
jo
ret
jne
cs
pop
pop
xor
push
cmc
pusha
sbb
jne
cdq
call
push
popf
mov
not
sub
out
jns
call
cmp
jnp
scas
sti
push
dec
xor
pop
pusha
pop
xchg
xchg
bound
dec
sbb
(bad)
cmc
sub
test
xor
pop
or
xlat
add
mov
mov
pushf
pop
jne
xor
cmp
sub
jns
xchg
shl
inc
xchg
int3
test
stc
addr16
mov
dec
sar
xor
call
loop
ins
(bad)
fsubr
jbe
adc
push
aas
and
add
in
push
xor
push
jecxz
adc
or
(bad)
dec
in
jecxz
aam
icebp
push
jl
les
mov
cmps
fstp
sbb
jmp
ds
mov
fsub
pop
push
cmp
sub
es
adc
mov
cmp
icebp
call
cs
outs
in
int
inc
fcomp
or
mov
mov
and
sub
(bad)
pushf
sub
pop
jmp
movs
(bad)
sar
cmc
jg
fst
and
sbb
push
and
jecxz
es
and
out
and
xor
sub
cmc
dec
inc
popa
loopne
dec
dec
nop
xchg
push
data16
mov
bound
jno
xor
mov
outs
aas
lea
xchg
cdq
fadd
(bad)
test
xlat
(bad)
mov
mov
loopne
adc
adc
gs
push
fwait
jbe
jmp
lods
inc
std
in
jecxz
rcl
scas
xchg
adc
adc
and
retf
pop
adc
sar
pop
loopne
in
mov
cld
push
mov
xchg
shl
test
xchg
cdq
xor
cld
jp
cmps
xchg
or
pop
and
inc
leave
cli
and
push
call
fcomip
xchg
or
sub
daa
pushf
xchg
inc
mov
loop
inc
mov
dec
out
fld
xor
pop
mov
add
lods
pushf
les
fldenv
call
add
(bad)
ins
or
xchg
adc
je
push
adc
js
inc
add
lods
dec
jle
in
dec
mov
sub
xchg
sub
(bad)
fiadd
xchg
(bad)
(bad)
(bad)
hlt
call
scas
xchg
jae
call
in
sub
in
cmp
xchg
fidivr
add
lds
adc
or
test
push
pushf
mov
push
test
dec
push
rcl
(bad)
jo
out
daa
push
mov
iret
mov
inc
mov
shl
imul
or
fiadd
imul
lock
adc
cwde
pushf
add
mov
cmp
lds
pop
pop
(bad)
inc
das
cli
pop
and
jecxz
or
imul
dec
xchg
stos
mov
sbb
jne
xchg
xchg
movs
xchg
loopne
push
jmp
push
nop
or
sub
jp
mov
push
dec
fadd
xchg
scas
mov
std
rol
xor
sahf
fnstcw
pop
jmp
add
stos
push
pop
aad
fbld
xchg
shl
mov
js
and
in
sub
test
mov
push
push
jns
jg
mov
les
push
ins
sar
adc
push
push
ins
mov
and
cld
xor
cli
clc
leave
cmp
into
hlt
not
lods
adc
add
sbb
xchg
cmp
dec
push
add
sbb
xchg
add
and
out
cmp
xchg
dec
or
jecxz
mov
add
rcr
push
(bad)
mov
nop
je
loopne
push
sbb
xor
(bad)
rcl
test
mov
ficom
mov
movs
in
jp
movs
sub
add
adc
cs
mov
es
ret
(bad)
and
enter
lds
mov
call
and
cli
adc
repnz
test
xchg
test
xor
cmp
dec
push
in
mov
jmp
push
outs
int3
pop
(bad)
fist
mov
cld
imul
ins
or
loop
ins
jmp
pop
push
cmp
addr16
bound
pop
xchg
sbb
cmp
sar
jnp
adc
cmp
cmp
jl
and
mov
test
xchg
push
or
pop
xchg
xor
sub
jb
shr
mov
xchg
mov
and
xchg
test
xchg
sub
push
std
cwde
nop
sub
call
ret
call
je
mov
shr
pop
jg
sub
jo
mov
bound
das
mov
std
xor
mov
push
pop
dec
je
jmp
outs
cmc
or
xor
out
jae
xchg
push
call
adc
jnp
in
das
call
ror
push
cmc
dec
xchg
ja
rcl
mov
mov
xor
call
aas
frstor
sbb
repnz
pop
inc
iret
mov
inc
rol
icebp
cli
pop
imul
leave
pop
ins
lea
sbb
scas
shl
dec
fistp
mov
loope
pop
mov
xchg
out
ret
jl
in
mov
repnz
mov
retf
and
dec
dec
lods
(bad)
and
and
mov
push
mov
jle
fld
xchg
fsub
imul
pop
scas
jp
stos
adc
dec
jl
mov
inc
in
mov
sub
mov
jg
mov
or
or
out
pop
lods
aas
or
pushf
mov
push
call
ror
clc
xchg
push
xchg
repz
lahf
or
fcomp
and
inc
adc
fild
add
xchg
push
jbe
jmp
push
pop
popf
ret
fdivr
mov
pop
outs
fs
nop
popf
mov
test
div
mov
nop
clc
cmc
movs
ret
cmp
xchg
jle
fldl2e
cwde
mov
mov
add
pop
popf
xchg
in
xor
sub
mov
(bad)
std
xchg
lahf
mov
dec
jge
imul
fucomip
xchg
(bad)
jecxz
nop
mov
xchg
sub
popf
adc
adc
mov
out
(bad)
fimul
lock
shl
jp
push
repnz
and
popf
adc
or
jg
lea
stos
inc
test
pop
sbb
sub
pop
sti
xlat
call
inc
xchg
rcr
nop
inc
cwde
sub
mov
xchg
les
mov
and
push
or
push
imul
sbb
pop
(bad)
sar
pop
xchg
movs
add
loope
data16
dec
daa
adc
mov
dec
sub
loope
add
cmp
pop
jmp
ss
data16
dec
jae
sub
mov
push
gs
push
jmp
mov
es
lds
movs
pop
cld
xor
adc
adc
xchg
sahf
cmp
les
dec
push
adc
iret
xor
cmp
push
lock
adc
cli
ins
aam
jge
pop
cmp
cmc
jle
hlt
add
mov
mov
rcl
jmp
push
jle
data16
jle
dec
mov
(bad)
int
jns
into
fwait
inc
imul
push
and
push
ja
and
stos
cmc
inc
push
pop
xchg
fcomp
push
xlat
push
and
sub
xor
or
add
jmp
sti
pop
cs
lock
adc
and
imul
fild
and
mov
es
cmp
mov
xchg
mov
test
pop
test
ins
and
sub
fsubr
xchg
std
mov
jo
mov
daa
dec
or
(bad)
cwde
mov
lods
push
cmps
and
pop
cmps
push
pop
xor
cmp
inc
into
(bad)
cld
scas
hlt
nop
mov
mov
push
div
jl
and
or
sbb
mov
mov
cmp
or
jae
mov
std
cli
cmp
fcom
xchg
fsubr
in
(bad)
mov
test
aam
jmp
fistp
or
mov
mov
mov
gs
sbb
stos
clc
pop
sub
bound
xor
sbb
dec
stos
jle
push
das
mov
pop
imul
retf
xchg
xor
pop
sub
jecxz
enter
mov
xchg
mul
mov
jne
add
adc
add
je
int
pop
mov
inc
jne
iret
sbb
inc
mov
ja
inc
mov
fs
dec
sub
push
jmp
mov
test
jp
stos
enter
cdq
push
push
out
mov
add
push
lds
push
dec
cmps
dec
fidiv
add
cmp
pop
adc
in
adc
add
jp
popa
add
daa
add
jbe
push
rcl
xchg
push
pusha
jle
jp
xchg
pop
xor
or
xchg
sbb
adc
in
and
fsub
shl
std
loopne
retf
cmp
cmp
xor
shl
in
dec
jns
shl
into
mov
(bad)
fild
in
in
in
mov
add
les
cmps
jg
icebp
jp
mov
scas
jae
sbb
(bad)
xor
nop
cmp
pop
sbb
ficom
cli
ret
add
icebp
pop
fsub
loope
rcl
mov
outs
push
out
js
daa
in
into
retf
jnp
jb
imul
cmp
mov
xchg
xor
loop
push
repz
sub
xor
scas
xchg
and
popa
ins
xlat
test
sbb
(bad)
pop
cmc
cmps
fld
pop
les
pop
mov
retf
rdpmc
mov
jl
xlat
iret
fs
inc
mov
jg
adc
pop
in
addr16
adc
push
test
enter
push
(bad)
dec
mul
push
sub
stc
into
pop
sub
jnp
xchg
sbb
mov
fist
xor
and
fidivr
call
fdivr
jb
adc
lahf
adc
mov
pop
add
mov
bound
add
pop
adc
and
sub
imul
sub
sbb
push
push
mov
out
jg
push
cmp
xchg
and
(bad)
mov
pusha
and
jae
je
adc
mov
lds
cmc
add
inc
lods
and
scas
pop
or
lods
mov
dec
cmp
xor
xchg
jae
rol
stc
dec
sub
fild
jmp
add
cmp
stc
sbb
aam
hlt
jo
cmp
dec
mov
fwait
test
add
push
cmps
cmps
add
pushaw
out
mov
mov
mov
mov
in
retf
and
mov
mov
leave
fistp
repz
es
nop
inc
cs
cli
les
add
mov
cld
pop
mov
cld
clc
dec
fisttp
ins
in
mov
clc
jns
cld
aam
xor
jecxz
mov
cmc
jle
or
jae
add
stc
mov
xchg
sub
mov
adc
xor
cmp
lahf
int3
add
pop
cmp
dec
jmp
mov
jp
push
int3
xchg
in
jl
xchg
retf
(bad)
jmp
fwait
or
aad
pop
add
inc
mov
cs
jbe
ds
cdq
(bad)
and
add
(bad)
repz
or
adc
dec
pop
cdq
jae
jmp
ins
sti
mov
push
imul
sub
xchg
push
or
dec
lds
daa
nop
aam
leavew
inc
rcl
and
mov
and
add
into
sub
mov
add
jns
and
fcomp
stos
shr
mov
imul
mov
mov
pop
sar
jmp
pop
xchg
in
push
fwait
jb
pop
movs
mov
dec
in
sbb
mov
push
retf
cmc
xchg
ja
inc
jbe
outs
test
aad
mov
dec
je
sub
cmp
xchg
dec
imul
lods
jnp
fnstsw
lods
popf
push
mov
mov
mov
lds
xchg
xor
or
adc
mov
cmp
pop
and
test
lods
sub
dec
mul
repz
(bad)
in
fist
cmp
(bad)
in
jae
add
sub
jae
dec
pop
push
xchg
push
xchg
push
xor
pop
neg
xor
mov
xchg
mov
fwait
mov
stos
dec
xor
cmp
cmp
loop
adc
pusha
mov
add
adc
inc
sub
xchg
cmp
or
dec
xchg
arpl
or
jb
cs
test
sub
xor
pop
arpl
or
push
pusha
mov
js
stos
fld
cmp
inc
aas
call
jno
popf
pop
fucom
and
mov
xchg
cmc
es
mov
jns
xchg
xchg
ret
sub
pop
test
fsub
dec
mov
fs
push
stc
push
mov
aas
adc
cs
xchg
jp
adc
js
mov
mov
aad
mov
push
js
in
ret
mov
imul
push
je
loopne
out
sahf
mov
cli
pop
dec
cmp
adc
lea
dec
sbb
js
xlat
mov
ins
xchg
cmp
pop
mov
xor
ficom
std
imul
(bad)
retf
adc
jbe
push
cmp
or
out
push
jne
push
div
cmp
clc
xchg
nop
mov
xor
rol
xchg
pop
lds
loope
jl
mov
or
es
xor
sub
pop
sbb
rol
cmp
pop
push
jno
inc
jbe
pop
iret
sub
rcl
and
js
das
mov
aad
mov
test
jae
inc
(bad)
add
retf
sub
stos
mov
repz
pop
xor
jmp
pop
xor
xor
sub
fiadd
(bad)
cmp
pop
add
(bad)
cmp
add
add
(bad)
das
add
xchg
add
xlat
add
jl
adc
jb
in
jbe
pop
cmp
and
xchg
jne
xlat
mov
rcl
test
pop
pop
xchg
in
add
jmp
cdq
aad
lds
pop
sub
pop
rol
scas
hlt
fwait
jno
adc
xchg
dec
add
sbb
add
fcomi
in
adc
scas
imul
cmc
daa
mov
(bad)
jmp
xchg
ret
out
outs
pop
out
(bad)
mov
movs
call
sub
mov
xor
xor
xchg
dec
out
pop
cld
pushf
scas
test
mov
xchg
or
add
xor
ror
repz
lahf
nop
sub
fcomp
sbb
pop
mov
jecxz
bound
jl
shl
xchg
cmp
sub
mov
mov
adc
bound
fstp
out
out
pop
cmp
int3
fist
adc
jns
leave
mov
cli
ficomp
xor
push
call
daa
jge
add
std
adc
adc
fldcw
int3
sub
cmp
xchg
retf
cmp
mov
mov
das
jmp
push
mov
and
icebp
inc
in
add
aam
push
pop
das
cmp
out
pop
fidiv
dec
add
jle
out
xor
sub
clc
addr16
jb
daa
adc
and
std
jo
xor
nop
jmp
dec
ret
mov
add
jne
pop
cs
adc
cmp
push
cld
popa
jmp
or
adc
mov
inc
jle
cmc
adc
test
dec
fstp
push
ins
adc
sar
das
enter
fisttp
mov
sub
dec
repz
mov
xchg
and
add
leave
add
scas
in
les
xchg
jecxz
out
sti
test
push
mov
imul
mov
retf
dec
inc
cmc
imul
mov
dec
mov
mov
mov
mov
pop
mov
xchg
ret
data16
or
mov
imul
ficom
in
pusha
std
pop
adc
adc
dec
dec
dec
jmp
cld
mov
xor
not
sub
out
mov
mov
sbb
xchg
inc
ret
xlat
stc
add
retf
pop
nop
les
out
push
jmp
iret
lea
out
(bad)
pop
adc
xor
ss
dec
mov
mov
sbb
xchg
cs
hlt
xor
push
or
in
mov
dec
rcl
push
inc
or
mov
push
mov
sbb
aaa
lock
imul
mov
mov
test
add
xchg
leave
fdivr
aad
dec
(bad)
jb
add
aas
or
test
pop
adc
cmp
repnz
jne
aam
fdiv
mov
jno
jne
push
and
dec
mov
rol
pop
(bad)
and
jp
shl
stos
or
dec
xor
dec
jle
and
dec
push
js
and
push
and
call
fbstp
cmp
cs
dec
aad
mov
adc
aaa
aas
sbb
xchg
xor
in
mov
sub
test
jg
and
vpor
and
mov
push
pop
mov
pop
out
pop
push
xor
mov
les
and
out
outs
aam
cli
repnz
rcr
push
ficom
push
cwde
and
adc
ror
clc
popa
ret
xchg
mov
sbb
into
sbb
js
pop
sbb
mov
mov
fisttp
jne
imul
test
movs
pop
lsl
xchg
movs
gs
dec
push
and
(bad)
push
cmp
shr
ror
mov
out
xor
fistp
add
push
cdq
jl
add
rcr
call
xchg
repnz
out
jno
mov
pop
mov
sub
and
(bad)
and
jo
xchg
add
adc
dec
cmp
int3
shl
and
mov
xchg
jmp
jp
or
push
arpl
mov
mov
dec
fld
fadd
and
or
ret
pushf
lods
lods
mov
cmp
pop
sbb
sub
in
repz
push
pop
dec
inc
sub
(bad)
mov
and
mov
fsub
inc
cmps
adc
sbb
cmp
movs
cmp
sahf
push
hlt
(bad)
gs
test
ret
hlt
cmc
ja
adc
mov
add
push
sar
pop
sar
mov
fiadd
shl
mov
enter
nop
mov
xchg
cli
(bad)
in
stos
vcvtps2pd
pushf
sub
jle
dec
iret
rol
(bad)
in
test
inc
jnp
mov
xchg
sbb
xor
cli
aad
stos
mov
mov
mov
dec
cmp
clc
lock
and
xor
das
xrelease
in
cmp
jae
push
push
je
cli
mov
dec
pop
mov
repz
jne
mov
mov
rol
fsubr
push
jmp
push
out
cmp
xchg
out
hlt
stc
mov
pop
cmp
and
or
pop
xor
call
add
sbb
sbb
ss
loope
mov
test
xchg
pop
xchg
lods
out
pushf
es
sub
pop
add
sar
mov
loope
sub
jne
jg
(bad)
and
cmp
cmp
sbb
jle
call
jae
jmp
outs
aad
test
loopne
cmp
jo
dec
out
cwde
scas
xchg
mov
cmp
xchg
mov
ficomp
fimul
push
dec
jmp
dec
adc
sti
dec
lods
pop
data16
test
dec
pop
xor
enter
or
push
pop
jp
add
in
dec
inc
mov
enter
icebp
or
mov
cli
inc
shl
cmp
xchg
icebp
push
dec
imul
rol
imul
add
pusha
int
rcl
pop
inc
cmp
jmp
daa
mov
jbe
jecxz
cmp
and
xchg
xchg
es
sar
jnp
pop
sahf
stc
fcom
cmp
lahf
ins
enter
jge
in
loope
dec
into
jge
pop
daa
data16
mov
les
xor
ins
mov
push
xchg
xor
xchg
ret
cmp
or
dec
sbb
push
or
loopne
fisttp
nop
jg
mov
cli
xchg
xchg
shl
lahf
sbb
lds
mov
ret
sbb
pop
das
inc
pop
jbe
in
push
mov
jg
adc
retf
nop
push
(bad)
scas
es
or
nop
cs
xchg
int
cs
test
lahf
ins
inc
lock
cwde
xlat
loop
push
std
sub
in
mov
es
dec
je
inc
enter
lea
sub
jae
push
cmps
ins
maxps
out
jmp
(bad)
repnz
adc
sub
jo
xchg
loop
xchg
popa
jno
test
sub
or
xchg
push
dec
int
adc
addr16
mov
push
cli
std
mov
sbb
sub
je
test
bound
pop
inc
adc
sbb
dec
cmp
icebp
push
fcmovnbe
ret
call
es
sbb
repz
shr
mov
xchg
xor
jmp
xchg
sbb
clc
add
ja
jle
iret
nop
cmp
inc
adc
ret
sbb
dec
jl
icebp
js
push
cmp
push
or
jp
cmp
and
fcom
pop
mov
pop
pop
mov
jp
call
lds
cmp
push
xchg
test
dec
xchg
push
xor
and
gs
fadd
pop
pop
sbb
xchg
call
sub
je
into
mov
xchg
xor
aam
xor
mov
je
ins
cmp
sbb
add
and
call
call
aad
(bad)
data16
(bad)
in
dec
adc
jge
scas
fbld
jge
jecxz
les
mov
push
dec
jg
sbb
(bad)
inc
hlt
les
arpl
mov
xchg
push
and
xor
fcomp
pop
and
mov
and
jge
stos
loopne
sti
xchg
mov
jp
fsub
jmp
outs
jo
je
icebp
outs
jo
stc
retf
adc
stc
xor
inc
mov
outs
mov
sub
loope
js
sub
cmp
mov
cmp
ja
gs
cdq
jge
js
pushf
in
hlt
pop
test
lea
(bad)
jp
daa
adc
les
out
xchg
loopne
fsub
push
fld
adc
in
xchg
cmps
js
repz
xor
dec
loop
imul
stos
mov
retf
pop
je
lds
mov
and
enter
xchg
jno
test
cli
mov
mov
jne
ds
mov
in
arpl
loopne
(bad)
les
pop
mov
mov
mov
or
push
mov
cmc
leave
or
sbb
cs
int3
daa
and
(bad)
mov
hlt
jae
(bad)
arpl
pushf
adc
fcomp
test
mov
jae
and
(bad)
xchg
xor
and
stos
mov
dec
test
popf
ds
or
mov
mov
mov
xchg
push
jbe
pop
out
sub
xchg
adc
xchg
dec
(bad)
js
imul
test
lods
dec
mov
and
adc
xor
add
cmps
popa
inc
iret
pop
jge
and
pusha
mov
mov
sub
mov
push
and
and
sbb
or
sbb
(bad)
rcr
ins
not
pop
int3
jae
ins
adc
popa
xor
and
popf
push
xchg
and
dec
cmp
add
mov
xlat
and
or
leave
jae
js
sbb
aam
or
cli
ds
cmp
out
or
sbb
xchg
das
cmp
adc
hlt
(bad)
cld
dec
repz
push
sub
and
(bad)
xlat
fadd
ds
out
aaa
or
in
xor
sub
je
pop
inc
sbb
inc
ins
pop
repz
jo
push
imul
mov
ss
add
mov
ins
addr16
xchg
mov
and
shr
dec
ret
xor
ror
pop
xor
aad
mov
in
in
punpckhdq
xor
loop
jmp
inc
fdiv
shl
loope
fs
hlt
ret
jp
in
and
rcr
mul
loop
fwait
(bad)
sbb
dec
mov
add
cmps
mov
jno
cmp
aam
cwde
(bad)
dec
xor
mov
adc
aas
ret
fwait
and
jo
arpl
mov
addr16
sub
popa
iret
cmps
retf
packuswb
xchg
push
push
push
out
mov
xchg
push
xchg
mov
and
in
push
sbb
dec
sub
cld
dec
jmp
aaa
add
push
pop
pop
add
imul
ret
loop
pop
cmp
dec
bound
add
sub
imul
pop
push
retf
push
jo
out
dec
mov
xchg
test
scas
fcomip
js
mov
push
push
mov
outs
stos
mul
jnp
pop
sub
mov
mov
clc
inc
push
xor
add
(bad)
mov
mov
sub
mov
cs
add
ds
and
xchg
pop
push
fs
mov
and
in
das
shr
test
push
fcom
sub
popf
xchg
cs
mov
or
jmp
xchg
inc
xor
imul
sti
repz
xchg
(bad)
movs
push
mov
pop
push
mov
div
dec
adc
test
xor
push
imul
cmp
dec
leave
cmp
mov
cli
xor
fisub
adc
push
jg
mov
addr16
enter
mov
inc
inc
push
dec
xchg
loopne
fstp
in
sar
(bad)
and
out
adc
pop
cmps
and
mov
int
adc
mov
cmp
mov
fcom
push
inc
xchg
mov
out
(bad)
cmp
push
bound
bound
or
(bad)
call
and
mov
mov
xchg
xchg
and
ror
pop
inc
mov
adc
inc
adc
mul
jg
cmps
jbe
xchg
and
or
cmp
adc
mov
xor
jmp
iret
cmp
add
and
loope
cmp
sub
(bad)
push
mov
cli
mov
mov
pop
sub
lahf
fnstsw
shl
xchg
and
xchg
aad
ret
and
push
jmp
not
jp
mov
iret
hlt
sbb
cmp
scas
adc
in
add
jne
in
and
inc
sub
loope
inc
push
lods
dec
push
dec
jns
jge
rcr
movs
sbb
ror
stc
mov
jns
jno
jae
dec
ffreep
pop
fsub
imul
mov
mov
test
jp
cmp
out
cmp
stos
fisttp
add
push
js
adc
ret
movs
inc
push
sbb
dec
mov
or
jp
adc
lea
push
xchg
mov
xchg
(bad)
int3
vpsubd
cmp
cmc
sub
fs
ret
sbb
call
mov
xchg
fwait
daa
ret
cwde
cmp
xchg
push
xor
aaa
fmul
cmp
or
xchg
loop
ins
mov
xchg
pop
jmp
in
pop
and
dec
jmp
daa
jg
out
xchg
jnp
enter
out
mov
in
adc
fisttp
dec
cmc
test
dec
or
outs
add
dec
mov
xchg
push
pop
xchg
add
mov
jb
fst
mov
call
sub
jecxz
clc
push
ins
outs
pop
lea
xchg
nop
xchg
repz
sar
sub
sub
sbb
cmps
jmp
clc
cmp
shr
call
jnp
lds
fcom
mov
stc
jmp
xchg
in
inc
out
in
push
sub
mov
call
sub
jmp
(bad)
into
mov
jp
cmp
in
test
xchg
sbb
stos
xchg
(bad)
loope
and
pop
push
xchg
movs
cmc
int
js
xchg
ret
movs
out
inc
mov
cs
inc
cmps
adc
popf
imul
popf
mov
dec
dec
push
sahf
xor
icebp
ret
inc
inc
mov
js
fs
xchg
retf
jmp
movs
jl
adc
mov
lock
mov
addr16
mov
jne
jne
or
fs
or
mov
icebp
jnp
hlt
iret
lods
(bad)
jp
loope
inc
or
ret
popa
mov
xor
xchg
mov
fdivr
push
cmps
bound
push
jo
xchg
add
cld
pop
inc
ret
jp
dec
add
bound
ret
out
std
jl
adc
add
int
xchg
xlat
dec
mov
mov
dec
inc
jp
cmp
(bad)
in
clc
sub
sbb
pop
xor
pop
mov
inc
dec
sar
jnp
in
jp
inc
retf
mov
sub
fcmovu
and
xor
dec
mov
mov
lock
js
sbb
dec
pusha
adc
std
mov
dec
cs
in
fbld
inc
icebp
push
fadd
(bad)
mov
xor
sbb
mov
push
push
outs
mov
pusha
jns
loopne
xchg
imul
mov
dec
push
pop
(bad)
and
in
xlat
xchg
or
test
jb
shr
cmp
mov
cmp
mov
dec
mov
ret
cmp
jp
retf
and
sub
arpl
jno
cmp
push
xchg
pop
dec
jo
mov
mov
add
ins
sahf
dec
aad
jp
xchg
ror
test
cmp
adc
push
xchg
sbb
and
in
mov
fcomp
sbb
ins
mov
(bad)
jne
xchg
sub
int3
int3
adc
push
mov
stos
and
xor
dec
adc
xchg
pop
jbe
adc
in
jns
inc
inc
xor
pop
mov
pop
xchg
push
or
dec
inc
pusha
xor
cld
js
adc
shl
pop
(bad)
in
mov
mov
nop
mov
jne
(bad)
arpl
mov
pop
push
pusha
jle
int
enter
fidiv
std
scas
xchg
stos
mov
adc
xchg
je
inc
imul
ficom
push
xor
cs
out
aad
add
ins
mov
or
pop
push
push
fs
jmp
jmp
and
outs
jecxz
mov
and
movs
in
fwait
adc
arpl
mov
int3
xchg
hlt
pop
dec
sbb
xchg
out
dec
(bad)
mov
loope
addr16
jb
mov
xchg
xor
and
outs
adc
leave
sahf
inc
test
xchg
ret
mov
jle
add
jne
test
loopne
scas
pop
popa
retf
fimul
mov
cmp
loop
pop
outs
push
fsub
fs
mov
(bad)
or
pusha
xchg
pop
cmp
js
mov
inc
jmp
sbb
popf
adc
adc
add
push
fsubr
(bad)
clc
outs
idiv
cs
das
push
pop
fnstenv
sub
into
lahf
loopne
xor
dec
pushf
rol
inc
dec
dec
ret
pop
add
sub
fstp
fmul
sbb
cdq
jo
or
addr16
cs
mov
test
cmp
je
jae
test
dec
fcos
fstp
cmps
or
dec
sbb
mov
ret
int3
sub
sub
cmp
mov
xchg
(bad)
and
cld
lods
popa
mov
test
sbb
jge
adc
inc
xlat
scas
inc
outs
push
in
or
mov
clc
jns
jg
inc
pop
repz
sub
sbb
test
jno
jecxz
sbb
xchg
cmc
or
test
jle
es
dec
js
xchg
dec
out
test
pop
imul
pop
adc
push
das
xor
sub
inc
mov
call
xchg
mov
imul
mov
xchg
pop
js
(bad)
push
cmc
mov
push
mov
adc
call
cmp
add
push
jns
(bad)
setne
mov
lahf
js
das
mov
sub
out
add
jge
les
rcl
sub
into
cmp
dec
xchg
lea
mov
sar
push
mov
push
xor
cld
cmp
cdq
cmp
sub
repnz
jp
cmp
int3
imul
mov
jne
(bad)
xchg
mov
mov
dec
cld
mov
mov
out
mov
repz
dec
pslld
test
fld
pop
sbb
call
div
(bad)
push
in
jle
dec
adc
xchg
hlt
jnp
inc
loop
stos
popf
shr
mov
xchg
lea
mov
cmp
add
fdiv
mov
xchg
sub
(bad)
push
mov
adc
mov
sbb
imul
jae
xchg
mov
fs
jle
push
pop
jbe
rcr
lea
(bad)
cdq
lock
es
pop
and
mov
aaa
movs
jmp
mov
jbe
lods
push
jbe
and
fst
test
and
pop
loopne
sub
sub
ret
int
arpl
hlt
not
sub
xchg
stos
iret
sbb
es
xchg
shl
mov
(bad)
cld
push
mov
cwde
cs
mov
not
mov
mov
cmp
cld
retf
arpl
(bad)
mov
call
cwde
dec
jge
movs
and
pusha
cmp
je
or
inc
aas
or
imul
and
jnp
shr
adc
fdivr
pop
jge
inc
outs
adc
pop
ja
xor
out
pusha
and
sahf
cmp
push
or
mov
std
push
xchg
mov
sahf
mov
inc
lock
pusha
push
es
and
adc
ret
cmp
sub
pop
inc
jbe
mov
mov
test
inc
adc
retf
repnz
shr
ret
mov
into
(bad)
mov
je
adc
and
pop
jp
jns
clc
in
jl
aam
add
xor
adc
jo
mov
(bad)
nop
xchg
pop
mov
mov
out
lock
xchg
push
push
jmp
lds
jne
push
icebp
std
pop
sub
push
rcr
inc
jmp
xor
xchg
jae
xor
pop
push
mov
or
dec
xchg
in
cwde
(bad)
in
jns
rcl
push
shl
sub
sbb
(bad)
or
and
mov
push
xchg
fs
sub
lods
cmp
and
repz
mov
push
xchg
out
mov
sub
cmp
fild
xchg
std
xchg
pop
sbb
loope
cmp
inc
std
xchg
sbb
jb
xchg
call
sahf
xchg
clc
std
dec
pop
jae
(bad)
cli
pminsw
jno
ret
dec
pop
ret
xchg
dec
hlt
movs
ss
shr
jg
sahf
or
push
das
mov
lahf
ins
leave
aas
lds
and
ret
cmp
inc
mov
adc
add
in
add
scas
adc
inc
mov
dec
je
cs
repnz
aas
icebp
out
jge
adc
sbb
cmp
pop
je
dec
loop
dec
enter
daa
fs
jle
not
jecxz
inc
pop
das
(bad)
and
mov
lods
enter
cmp
leave
jle
push
fdiv
(bad)
retf
sub
mov
push
xchg
add
int3
xor
cli
cmp
and
imul
les
pop
sub
out
lods
or
jns
xchg
cmp
inc
(bad)
loopne
push
push
dec
jl
pushf
or
mov
loopne
xchg
pop
imul
fidiv
xor
jmp
fist
stc
cmp
mov
push
in
hlt
loopne
pop
xchg
mov
loop
fldenv
push
jae
dec
sbb
mov
and
mov
ins
les
pop
xchg
push
call
or
cmp
(bad)
push
test
mov
nop
(bad)
pop
mov
cs
sub
sbb
fdiv
clc
mul
inc
sar
shr
inc
sub
ror
in
jmp
jle
arpl
icebp
repnz
jmp
cmp
not
push
ins
pop
push
loopne
loop
add
adc
gs
imul
mov
hlt
pop
add
mov
data16
jae
cmps
pop
xchg
es
sahf
jne
inc
push
or
cmc
pop
jmp
jae
mov
and
sub
or
out
push
dec
loope
push
fcomp
push
out
jbe
add
cmp
dec
int
sub
jae
loopne
sahf
cwde
cli
dec
xchg
add
cmps
mov
sub
add
dec
and
push
push
xchg
(bad)
test
enter
dec
xchg
fucomip
push
fadd
loope
ret
jmp
aad
mov
xchg
xor
cmp
mov
into
inc
(bad)
push
inc
int3
(bad)
scas
mov
pop
mov
push
icebp
inc
pmullw
xchg
or
xor
les
cmp
repz
push
push
pop
pop
jp
or
xor
mov
and
xchg
icebp
cwde
mov
aas
lds
retf
fisttp
add
push
std
dec
fsub
cmp
(bad)
retf
repz
jno
jg
xlat
xor
adc
cmp
or
(bad)
hlt
jp
cwde
push
div
dec
pop
shl
rol
imul
inc
sbb
push
fs
mov
mov
push
or
dec
lock
push
retf
jno
xor
xor
(bad)
clc
and
jg
pusha
stos
out
mov
or
std
and
(bad)
test
es
dec
adc
dec
lock
mov
cli
lods
adc
lahf
or
in
std
pop
(bad)
push
or
push
in
push
xor
jae
jmp
push
mov
sub
les
mov
(bad)
xor
push
cld
inc
adc
arpl
sub
or
xchg
push
pop
sbb
sub
jmp
xchg
pop
fcomp
iret
mov
jb
xchg
add
fwait
cmc
nop
push
jg
js
clc
inc
sbb
inc
cmps
fistp
xor
out
adc
ins
les
cmp
pop
loope
xor
push
jno
sbb
or
sti
dec
das
sti
mov
xchg
test
pop
xchg
outs
or
mov
and
inc
sbb
test
jmp
push
das
sbb
adc
and
pop
add
ret
sbb
and
xor
sbb
inc
dec
jnp
push
not
xchg
popf
inc
xchg
xor
jb
cmps
mul
dec
add
adc
hlt
push
aam
xchg
and
xchg
push
sub
cli
and
xchg
jnp
xchg
mov
lahf
sub
cmp
xchg
int
lods
and
jp
xchg
cmp
or
push
and
fld
mov
push
loopne
xor
loopne
jl
mov
sbb
adc
push
mov
ins
cmp
in
cmp
pop
jo
jbe
add
jle
das
add
mov
jmp
ss
push
cmp
push
and
mov
and
cmp
cs
mov
aam
xor
push
add
je
sub
cmps
cli
test
add
pop
fs
xor
pop
cmp
cmp
xchg
jge
fldcw
ja
pop
xchg
jmp
mov
sbb
mov
sbb
adc
sbb
mov
jns
retf
mov
test
sbb
js
mov
imul
adc
aas
test
aam
rol
push
retf
xchg
jbe
nop
adc
retf
inc
sub
xchg
and
inc
sahf
retf
cli
lea
das
cmp
mov
jp
fwait
loopne
xor
(bad)
ss
mov
pop
leave
and
into
ret
dec
pop
sub
hlt
mov
xchg
scas
dec
push
xchg
(bad)
dec
and
adc
xchg
cmps
shl
mov
jne
and
outs
ja
adc
call
sbb
dec
pop
addr16
xor
jne
pusha
cmp
jae
cdq
pop
bound
cli
icebp
and
fs
movs
cmp
movs
xchg
push
ins
mov
rcl
iret
and
jle
push
dec
test
shl
pushf
and
pop
mov
jle
imul
push
push
pop
mov
into
movs
movs
adc
(bad)
test
in
pop
xchg
push
leave
out
idiv
bound
and
(bad)
repz
cmp
test
enter
sbb
sar
xor
add
in
or
dec
dec
xor
jmp
out
mov
or
sub
mov
outs
cmp
xchg
test
iret
jae
dec
sub
jge
or
cld
test
mov
add
or
fs
mov
ins
cmp
adc
dec
pop
cmps
add
pop
ds
mov
popf
in
mov
add
cmps
mov
pop
pop
push
push
out
and
movs
push
imul
jp
test
jp
addr16
pop
loope
xchg
cli
fstp
(bad)
int3
retf
jmp
jae
cmp
out
jmp
mov
jp
pop
popf
xchg
sbb
pop
mov
xchg
mov
cmc
fiadd
cli
js
xchg
push
or
and
(bad)
hlt
cmps
jo
icebp
js
out
clc
cdq
(bad)
fdiv
cmc
xchg
les
pop
enter
pusha
mov
mov
in
loopne
jae
dec
dec
xchg
add
cmps
aad
out
sti
sub
rcl
and
inc
lock
sub
stos
sub
gs
shl
cli
not
jg
sbb
push
push
hlt
nop
fiadd
mov
inc
jmp
movs
lock
adc
and
lahf
into
cmp
mov
mov
push
mov
or
nop
in
addr16
mov
adc
push
sbb
dec
sub
add
mov
je
or
sub
ins
lods
jecxz
mov
popf
jb
sub
repz
(bad)
ficomp
std
jbe
ja
jle
(bad)
inc
push
xor
jmp
mov
adc
sub
imul
loope
push
cmc
push
pop
sti
shr
xchg
ror
mov
icebp
adc
dec
mov
shl
dec
mov
push
mov
dec
mov
pop
sbb
(bad)
daa
xchg
push
(bad)
aaa
jnp
adc
std
pop
rcr
push
push
frstor
xchg
push
(bad)
out
fstp
inc
sub
pop
rcr
es
cs
bound
aaa
fld
mov
dec
add
ret
mov
xor
xchg
mov
and
dec
xchg
shl
add
out
jge
pusha
adc
cmp
test
mov
in
xchg
jns
test
sub
and
add
adc
out
and
in
fxch
sub
xchg
jl
sar
jp
retf
or
inc
jne
mov
xchg
dec
test
loop
movs
mov
xor
fnstcw
jmp
in
jne
mov
in
xlat
or
cli
frstor
xchg
sbb
xchg
enter
sub
push
int
jge
pop
mov
push
or
xor
mov
in
xchg
xor
cli
cmp
cmps
js
cmps
pop
stos
cwde
adc
dec
std
xor
stc
outs
sbb
jl
adc
(bad)
mov
adc
cld
sbb
int3
lods
inc
xchg
rcr
stc
in
repnz
lods
rcl
scas
xor
sub
lods
jno
mov
(bad)
sub
jmp
sub
pusha
clc
(bad)
and
pop
xlat
ror
push
cmp
mov
mov
in
xchg
sub
shl
daa
push
jge
jbe
xor
xchg
sbb
and
mov
push
ret
movs
xor
lods
mov
sbb
cli
pop
gs
inc
fwait
cs
push
jo
les
sbb
js
cmp
jo
(bad)
ja
xor
imul
xor
cwde
adc
das
xchg
test
or
xchg
int3
pop
cmp
mov
call
dec
daa
mov
or
loopne
push
in
xchg
cmp
push
loopne
and
pushf
add
push
dec
mov
add
movs
push
fs
pop
ins
aaa
fmul
loope
adc
mov
mov
mov
scas
ret
pop
jno
lock
arpl
xrelease
dec
(bad)
je
inc
xor
cmp
call
add
loopne
xlat
jmp
dec
inc
xchg
pop
mov
add
pop
imul
or
aad
jns
mov
adc
hlt
retf
mov
xchg
lods
and
std
loopne
jle
jl
and
call
rcr
inc
or
jle
js
cmp
xor
popw
mov
xor
std
and
test
xchg
sub
les
and
stc
push
loopne
xchg
or
jge
or
cmp
rcl
push
push
push
fbld
cwde
sbb
stos
jl
shl
in
sbb
jp
jge
mov
cmp
pop
sub
sub
sbb
stos
int
es
ins
test
dec
inc
push
(bad)
test
push
std
jo
mov
and
jmp
inc
ds
scas
fwait
adc
mov
and
(bad)
pop
ret
loope
push
xchg
cmp
push
imul
pop
(bad)
jne
sub
ror
pushf
xor
xchg
mov
lea
xchg
inc
in
hlt
ds
fwait
sbb
shl
and
jmp
adc
push
in
fs
and
and
or
and
cmp
bound
xchg
push
test
sbb
cld
fcom
xor
and
or
lods
inc
ins
sub
ret
addr16
les
aam
ja
dec
inc
xchg
add
and
out
push
test
clc
rol
mov
adc
fwait
pop
not
and
mov
(bad)
mov
mov
xchg
shr
adc
jo
xchg
mov
mov
mov
push
(bad)
aas
cmp
pop
and
sbb
cld
fcomip
push
cwde
loopne
push
pop
xchg
call
retf
jle
mov
pop
cmps
aam
jmp
fnstsw
in
mov
xchg
inc
push
cmp
(bad)
hlt
jae
cmps
mov
jmp
dec
mov
xor
cmp
sar
add
es
shl
cwde
push
je
xor
inc
mov
mov
sbb
pop
cmp
xchg
cmp
mov
or
mov
adc
sahf
add
adc
out
jns
jp
jg
add
jmp
aad
mov
mov
popf
inc
pop
mov
and
fist
pop
add
mov
call
xchg
adc
mov
push
(bad)
loopne
pop
adc
mov
pop
sub
xchg
mov
xchg
push
push
std
fmul
sub
xor
sub
jne
dec
xor
or
dec
jne
sti
shl
jge
sub
imul
lds
xchg
mov
and
into
push
retf
cmc
cmp
cwde
sub
enter
cwde
enter
(bad)
cmc
ret
nop
mov
mov
inc
scas
cli
xchg
ret
aam
sbb
push
xchg
mov
int
fisub
add
dec
mov
mov
mov
imul
xor
cdq
jb
lea
jno
sbb
and
and
xor
lods
jae
mov
shl
popa
and
cmc
daa
lahf
xor
std
jmp
seto
push
jg
mov
add
push
jle
stos
mov
ret
fwait
and
fmul
pop
push
pop
test
mov
fnstcw
ss
pop
(bad)
movs
in
lods
fbstp
call
shl
shr
jae
push
nop
add
xor
pusha
pop
scas
lods
inc
xchg
add
sbb
(bad)
mov
rcl
fs
push
dec
ret
mov
add
in
xor
or
movs
hlt
div
xchg
lods
icebp
jb
push
sbb
xor
test
and
xor
cmps
xchg
mul
les
pop
data16
fwait
jae
xchg
jae
and
sub
adc
div
cld
cli
pop
pusha
pop
in
adc
dec
icebp
and
dec
cmp
lea
mov
pushf
mov
or
xor
pop
mov
sahf
repnz
in
outs
pop
mov
pop
sbb
fcom
ins
xor
les
loop
sar
inc
inc
hlt
out
add
mov
dec
outs
fst
mov
(bad)
cld
adc
(bad)
fdiv
mov
push
add
mov
jne
les
lods
fiadd
(bad)
aam
pop
jecxz
push
add
sbb
repnz
mov
mov
enter
xchg
stc
mov
mov
push
scas
ja
dec
fucomip
mov
popa
dec
ret
call
mov
ret
mov
aad
cmc
pop
ret
sub
je
stos
push
pushf
dec
pop
mov
nop
push
jne
xchg
mov
js
mov
mov
test
adc
sub
pop
test
shl
sar
mov
test
cmp
in
add
inc
into
mov
dec
sub
dec
add
and
pushf
or
adc
mov
dec
fcmove
jmp
mov
mov
cmp
xchg
test
jo
ret
or
cld
push
jb
inc
adc
push
pop
popf
js
pop
les
xor
aaa
es
mov
adc
jnp
imul
iret
scas
dec
adc
sbb
out
push
(bad)
leave
pop
push
mov
push
or
xchg
enter
xchg
push
inc
jp
es
ds
sahf
das
fist
and
jns
mov
stos
mov
mov
cmp
scas
push
in
push
ficomp
fs
cmp
xor
sti
lds
test
cld
add
(bad)
call
push
xchg
jmp
jmp
(bad)
loope
les
clc
js
in
mov
(bad)
jmp
retf
add
arpl
lods
das
jecxz
adc
xchg
ds
shr
test
xor
das
enter
outs
xor
repz
sbb
push
addr16
bound
mov
xor
movs
cmp
int3
push
shr
xor
push
pop
test
xchg
lahf
add
and
xchg
dec
fld
cmp
dec
pop
pop
ficomp
jo
stos
mov
ret
xchg
in
jg
jmp
in
or
test
repnz
hlt
mov
and
inc
push
aam
jae
ss
popf
push
add
ror
daa
cwde
push
stos
jg
(bad)
mov
dec
jo
rep
fld
ja
mov
push
sti
je
outs
cld
popf
lods
pop
imul
leave
arpl
fwait
rcr
and
or
and
cmp
mov
adc
xchg
rol
sub
int3
fidivr
outs
in
das
mov
cli
shl
sbb
or
sbb
cmps
fldl2t
or
mov
mov
and
adc
out
test
cmp
pushf
pop
cld
jg
aam
push
test
push
xchg
inc
push
jns
sub
inc
mov
add
add
sbb
xor
lods
dec
(bad)
push
sub
shl
adc
inc
rol
adc
inc
sub
jle
xchg
int
add
xor
mov
xchg
cmp
out
(bad)
shr
cmps
mov
enter
push
ret
cli
xchg
scas
and
add
add
ss
les
xchg
inc
mov
test
fmul
push
jge
mov
ror
xor
sbb
cmp
and
nop
sbb
mov
push
jmp
xchg
jo
mov
lahf
xor
es
inc
adc
dec
pop
ins
sub
(bad)
(bad)
aam
jo
xor
jne
cli
mov
in
or
retf
(bad)
out
sbb
sbb
popa
pop
add
mov
fs
cwde
das
fcmovb
xchg
daa
(bad)
or
dec
leave
and
je
inc
pop
popf
jmp
cmps
mov
cwde
mov
cwde
adc
cmc
jb
jnp
push
in
inc
das
aam
xor
xor
cwde
or
aad
stos
lods
ret
add
lods
nop
aaa
add
jbe
mov
lock
pop
xchg
xor
pop
fnstcw
xchg
xchg
popf
in
jp
ds
xor
mov
les
sti
(bad)
push
mov
push
es
das
sub
pop
mov
jg
or
sbb
fstp
xchg
inc
sub
ficomp
and
add
pop
mov
out
adc
popa
sub
cld
mov
addr16
and
cmp
pop
dec
call
inc
ror
ret
mov
shl
pop
pushf
push
adc
in
xchg
dec
fisttp
mov
inc
dec
(bad)
vcvtss2si
dec
push
add
dec
ins
sub
push
sti
cmp
xor
data16
mov
xor
loope
xor
add
xchg
xchg
les
xchg
or
arpl
daa
out
mov
adc
mov
adc
iret
add
jmp
push
les
leave
adc
js
mov
mov
cmc
call
inc
fcmovu
pop
in
inc
mov
mov
cmc
pusha
popa
cmps
jge
adc
mov
mov
in
xchg
push
mov
pop
ds
sar
cmc
mov
inc
stos
ror
cmp
mov
dec
es
mov
and
lods
out
loop
loop
sbb
xchg
pop
addr16
mov
out
adc
jo
adc
jb
(bad)
test
xchg
cmp
push
jmp
(bad)
stc
imul
jno
sbb
jle
pop
mov
(bad)
mov
lock
mov
mov
mov
push
out
retf
add
fsub
call
ror
sbb
(bad)
sub
jp
adc
pop
call
idiv
jbe
mov
mov
ja
inc
mov
sahf
sbb
push
mov
jle
dec
xchg
push
fdiv
add
mov
imul
mov
imul
cmp
dec
lahf
inc
inc
pop
mov
movs
(bad)
mov
js
(bad)
jmp
mov
adc
movs
call
pop
jp
add
cli
sar
adc
xchg
fdivr
aam
and
push
les
push
fcom
xchg
aas
mov
mov
xchg
cmp
mov
popa
and
and
inc
fstp
and
push
test
pop
mov
dec
xchg
mov
xchg
and
cmp
push
js
aam
mov
and
retf
cmp
clc
adc
cmp
mov
jecxz
(bad)
mov
loope
sub
mov
mov
jae
sub
(bad)
retf
enter
addr16
add
dec
and
cli
lea
in
addr16
test
dec
mov
(bad)
mov
cmp
inc
xchg
js
stc
fprem1
adc
xor
popa
outs
ss
cmp
enter
jo
test
outs
jne
mov
pop
fist
mov
or
push
cmp
adc
add
jnp
jge
sbb
icebp
out
push
push
sub
adc
(bad)
xchg
sti
jg
cmp
inc
mov
cmp
pop
pop
fcmovb
int3
add
not
pop
lds
addr16
jmp
shl
repnz
cmp
push
mov
js
out
fisttp
xor
test
xor
push
iret
sub
push
mov
imul
push
push
stc
scas
jmp
mov
repz
dec
nop
dec
pop
adc
outs
push
sbb
xchg
xchg
xchg
inc
xor
sub
jae
add
dec
add
fsub
mov
outs
mov
and
ret
sub
stos
cmp
mov
rol
and
ret
pop
cmp
xchg
sub
and
xchg
mov
int3
jnp
and
mov
sbb
inc
dec
imul
ror
(bad)
shr
cli
movs
cmps
xchg
call
test
les
xor
xor
mov
adc
pop
jmp
loope
inc
mov
adc
mov
dec
jp
cmps
xor
mov
mov
xchg
imul
scas
xchg
jns
xor
push
bound
mov
sub
iret
push
xor
cmp
pop
pushf
sub
pop
mov
cmp
fs
sbb
cmp
in
in
mov
lock
jmp
ror
push
sub
mov
dec
cmps
cmp
addr16
iret
xor
jle
cmp
jo
xchg
pop
lods
sahf
or
fisttp
jge
cmp
loopne
shl
push
or
sbb
fst
dec
idiv
arpl
cmps
js
inc
xor
ret
add
lock
aam
int3
sub
in
jae
or
xchg
push
pop
mov
cld
sub
sbb
aaa
stc
xchg
inc
sub
rcr
adc
xchg
cmps
repz
mov
xchg
ret
out
ret
shl
xchg
je
fisubr
add
add
inc
lahf
push
or
sbb
mov
xchg
xor
sub
adc
sbb
fidiv
mov
je
(bad)
addr16
test
inc
pop
es
add
xchg
push
int3
mov
adc
loopne
xchg
loope
aaa
retf
jecxz
sbb
imul
mov
xor
mov
imul
outs
adc
xor
cmp
lods
rcr
cwde
mov
ror
call
stc
and
das
or
aaa
pop
and
ror
aaa
dec
mov
rcr
mov
jo
test
sti
ficomp
test
movs
pop
pushf
mov
push
inc
inc
dec
aas
cmp
ret
in
inc
sar
adc
std
cld
adc
push
xlat
cli
in
xchg
inc
jne
sbb
cmc
xchg
(bad)
hlt
jp
adc
js
or
mov
jnp
jo
mov
xor
stos
mov
jmp
les
cmp
cmp
je
sahf
in
mov
or
into
fiadd
js
xchg
inc
sahf
pop
jp
or
push
jo
test
movs
in
ins
fst
sbb
sub
call
jne
mov
lods
push
js
cmps
cs
aas
add
test
or
in
fdivr
pop
out
(bad)
or
push
cmove
and
jo
cmp
and
je
es
or
loop
fstp
stos
mov
cdq
cmp
movs
ss
sbb
scas
jae
mov
das
cli
daa
repz
adc
in
imul
(bad)
popa
jge
les
xchg
sahf
in
icebp
xchg
push
add
cmp
pop
in
jbe
sub
loope
xchg
pop
mov
pop
fbstp
cmps
and
out
push
or
adc
dec
xlat
xor
aaa
mov
pop
adc
imul
xchg
rol
mov
les
test
clc
push
xchg
adc
je
mov
mov
cmp
jecxz
xor
shl
rcr
push
jne
fnstsw
sbb
fistp
fisub
jmp
stos
mov
jecxz
xchg
jne
fistp
and
ins
or
sub
movs
xadd
(bad)
jne
ret
movs
pop
cmp
mov
sti
xchg
push
cmp
jmp
pop
fst
cld
jo
loopne
arpl
xor
fwait
and
call
inc
add
pop
push
mov
clc
fsubr
(bad)
in
xchg
(bad)
xor
xor
xchg
add
sbb
mov
inc
push
adc
das
inc
push
mov
sub
in
dec
and
mov
add
dec
mov
push
and
data16
jns
pushf
or
test
out
in
fdivp
add
inc
push
jmp
mov
sar
xor
bound
loope
mov
in
mov
pop
in
push
movs
es
rcr
es
dec
imul
mov
cmps
cwde
pushf
push
xor
dec
sbb
mov
fcmovu
xor
jbe
dec
sub
adc
(bad)
cmp
lahf
or
mov
(bad)
int
clc
jmp
ins
dec
pusha
mov
retf
inc
sti
push
neg
adc
jns
shl
ins
xor
sub
adc
pop
leave
dec
mov
rcl
das
cmc
rcr
sbb
call
aas
(bad)
sub
mov
cmps
enter
lods
push
push
xchg
in
mov
mov
test
xor
xchg
and
mov
jle
dec
popa
mov
inc
(bad)
ficom
xchg
add
lds
test
sbb
sub
mov
or
pop
or
test
xor
and
xchg
fwait
xor
sbb
sub
adc
xchg
inc
jne
cmc
fstp
ins
cmc
add
sbb
mov
stc
push
inc
mov
dec
sar
leave
sub
cmp
fcmovnu
xor
out
push
dec
xor
inc
cwde
fsub
sub
mov
clc
rcr
in
add
fidiv
pop
icebp
js
or
cli
mov
movs
mov
(bad)
pop
mov
push
and
mov
loope
(bad)
icebp
xor
stos
ins
hlt
imul
jmp
cmc
fimul
repz
lahf
mov
push
jo
stos
xchg
jbe
xor
dec
pushf
std
xchg
sub
sub
sbb
out
hlt
in
push
adc
mov
(bad)
dec
xchg
push
or
xor
scas
jae
jns
jne
xchg
clc
and
push
jne
ret
test
pop
mov
push
jg
jbe
test
cmps
and
pop
jns
dec
lods
sbb
sub
imul
add
xor
dec
push
push
jbe
and
dec
xchg
jmp
sahf
mov
lods
xchg
mov
mov
movs
adc
imul
push
stos
icebp
pusha
loope
stos
pop
movs
sbb
ret
dec
scas
out
stos
add
dec
nop
pop
pop
retf
adc
arpl
int3
es
pop
push
stos
rcr
push
jge
in
inc
mov
(bad)
xor
jb
retf
and
aam
xor
mov
pop
and
icebp
sahf
es
test
test
push
data16
pop
das
test
fwait
xor
push
mov
mov
jle
sahf
cwde
adc
add
je
mov
adc
out
mov
xchg
imul
mov
fld
and
(bad)
fsubr
xchg
or
inc
int
and
xchg
pop
mov
rcl
pop
ret
lahf
jne
pop
cmp
mov
push
sbb
test
fwait
add
imul
int3
xor
adc
sbb
lds
(bad)
rol
or
fdivr
hlt
cmp
mov
in
cmp
repnz
addr16
js
xchg
adc
loopne
sar
push
sbb
jp
jge
inc
lea
leave
xchg
out
call
loopne
push
sub
jo
inc
dec
sub
xor
mov
leave
jmp
cwde
(bad)
dec
jmp
jo
inc
jge
sbb
push
pop
sahf
mov
push
dec
popf
adc
dec
jbe
push
xchg
push
push
mov
push
pop
or
jl
sbb
retf
mov
xchg
in
add
push
mov
adc
jnp
lods
aam
(bad)
jecxz
das
or
cmp
dec
and
xchg
sub
test
push
mov
in
idiv
mov
fnstenv
loopne
cmps
leave
inc
push
test
inc
in
je
ja
or
jno
xor
movs
jmp
push
lea
pop
dec
xchg
les
icebp
sub
stc
mov
gs
jge
xor
push
jns
test
xchg
jne
jbe
dec
ror
xchg
data16
leave
adc
dec
gs
(bad)
add
data16
and
push
or
xor
popa
in
sub
sub
add
xlat
and
sti
jmp
add
xchg
stos
rcr
cdq
push
shl
sub
and
cmp
fistp
adc
adc
jo
and
imul
mov
fisttp
int
jl
out
sar
in
movs
outs
xchg
jmp
dec
rcr
mov
loop
push
enter
xor
iret
push
jne
movs
ret
push
daa
sub
pop
test
xchg
add
add
and
popf
sar
dec
xor
mov
push
ret
xchg
ss
aam
adc
in
pop
shl
xchg
cs
cmp
lea
loope
shrd
mov
imul
mov
xor
pop
jl
arpl
mov
(bad)
xor
sub
in
jmp
paddq
gs
sub
pop
sub
test
cmp
cmp
js
in
mov
adc
xchg
and
add
sar
mov
pushf
sub
xor
mov
mov
dec
xchg
xchg
data16
pop
xchg
lods
add
push
sub
fs
loope
xchg
retf
jmp
test
adc
xchg
cmp
mov
das
and
ret
adc
pop
jns
mov
les
xor
das
pop
mov
jne
(bad)
ins
pop
retf
lods
xor
mov
pop
cmps
jp
xchg
adc
push
push
sbb
or
mov
adc
and
add
or
cmc
push
jmp
test
repnz
movs
cmp
cmp
retf
or
imul
or
fcmovne
xor
dec
jns
fmul
ins
mov
lock
sbb
jae
inc
push
ffree
cli
dec
test
or
and
mov
xchg
cmps
inc
shr
in
cdq
js
xchg
sub
daa
ds
test
inc
mov
xor
sub
adc
in
(bad)
mov
push
int
sub
in
xchg
loope
popf
or
xchg
bound
jl
std
and
cmp
mov
xor
cmc
push
arpl
pop
pop
out
xor
movs
jmp
jne
repz
sbb
leave
and
sub
add
test
out
lds
xchg
mov
les
mov
sbb
push
sub
movs
push
sbb
mov
outs
cmp
push
mov
ffree
adc
sub
(bad)
mov
xchg
inc
call
data16
imul
test
test
xor
loopne
inc
mov
cmp
push
xor
xor
enter
cmps
imul
add
ret
test
fiadd
test
pop
jp
shl
(bad)
cmp
(bad)
(bad)
jg
or
outs
pop
and
sub
ret
sbb
push
push
xchg
sub
pop
in
mov
ret
bound
xor
lock
cmps
(bad)
loop
movs
sub
out
pop
fwait
mov
add
test
sti
add
stos
hlt
scas
dec
xchg
sub
ror
dec
cwde
test
bound
push
scas
mov
fwait
cmp
pop
mov
test
jmp
and
push
ret
add
mov
adc
push
jo
push
dec
mov
mov
sbb
(bad)
lds
(bad)
and
js
adc
in
aam
jmp
jns
lods
pop
jle
add
sar
cmc
adc
ret
retf
push
in
ss
test
(bad)
lods
hlt
add
leave
mov
(bad)
retf
iret
sub
(bad)
jbe
cmps
fstp
enter
mov
push
inc
ja
jle
jb
cmp
xchg
shr
(bad)
dec
into
ins
jl
cmp
sbb
fistp
les
(bad)
daa
mov
hlt
cwde
adc
rcl
jmp
in
out
dec
enter
cmc
push
in
out
sbb
mov
xor
pop
clc
cmc
add
std
jae
inc
das
cmp
call
dec
mov
sahf
daa
adc
dec
rol
cmps
and
cmp
jmp
sub
loopne
in
push
shl
(bad)
push
xor
push
or
xchg
imul
sub
xchg
loope
ror
jl
or
daa
mul
jmp
and
pop
ins
dec
xlat
xor
xlat
pop
int3
lahf
loopne
push
in
sub
xchg
push
mov
cmc
cmp
xchg
fcom
pop
mov
jne
daa
in
cmp
aad
xor
rcl
in
cmps
push
test
ror
fnstsw
inc
out
jecxz
movs
pop
mov
pop
popa
fild
loopne
(bad)
mov
dec
sbb
pushf
jno
mov
mov
iret
addr16
xchg
pop
ins
inc
movs
cmp
mov
add
jp
cmp
mov
pop
jnp
jae
and
test
je
mov
add
retf
int
add
outs
mov
adc
(bad)
fisttp
push
xchg
push
fidiv
sbb
retf
in
dec
cmps
aad
mov
and
lds
sub
xchg
xlat
push
cmc
mov
xor
jns
imul
mov
mov
cmp
cmp
fcom
cld
int
xchg
or
adc
fadd
test
pushf
sub
stc
cmps
push
cli
je
xor
retf
sub
jp
repnz
jge
push
gs
xchg
cs
or
sub
dec
xchg
mov
add
test
or
jo
mov
add
xchg
nop
gs
and
cli
idiv
es
imul
xchg
dec
pop
aad
cmc
ins
inc
cmp
movs
imul
lods
addr16
add
loop
sbb
call
mov
ss
mov
hlt
imul
loopne
in
scas
loope
pusha
push
and
daa
cmp
popa
xor
pop
cmc
scas
dec
xchg
and
push
aam
mov
cmp
iret
rcl
clc
xlat
add
iret
or
outs
aad
jmp
in
xor
inc
mov
repz
test
cs
jp
mov
lea
xchg
cmp
xor
jae
jae
inc
add
mov
aad
rcr
cmp
lock
retf
mov
jge
leave
shl
push
jb
loopne
sbb
xor
enter
adc
inc
sub
repz
js
gs
mov
sub
push
pop
out
adc
cmp
or
das
ror
xchg
xlat
fcom
mov
lds
inc
pop
rep
lea
js
mov
mov
dec
fidivr
mov
push
adc
cld
push
mov
sbb
or
pop
mov
push
mov
mov
leave
add
cld
pop
add
bound
enterw
sbb
cmp
and
std
out
push
stc
clc
mov
mov
push
cmc
ds
sub
jle
rol
cmc
hlt
test
stos
xchg
cs
(bad)
or
sbb
sub
cmps
xchg
pop
in
out
jne
ins
lea
mov
inc
and
add
inc
pop
inc
pop
fdivr
(bad)
hlt
hlt
add
daa
repnz
(bad)
call
cli
jae
stos
jmp
fs
inc
or
mov
das
cmp
pop
cmp
out
mov
fmul
stos
jb
hlt
mov
test
sub
jecxz
outs
and
push
loop
cld
je
gs
int
lock
pop
sub
xchg
mov
adc
cmp
fst
push
outs
outs
mov
imul
test
or
inc
jae
or
push
and
imul
aad
hlt
push
xlat
lods
dec
push
pop
es
in
js
xor
retf
xchg
mov
jle
adc
xor
out
imul
jecxz
fstp
sub
adc
je
jno
int
xor
push
jp
or
xchg
out
and
dec
adc
imul
fimul
jne
xor
popf
ror
in
add
leave
mov
loope
hlt
js
dec
fild
jmp
popa
imul
xchg
jb
push
not
out
xor
xor
js
movs
mov
je
jns
movs
or
fs
sub
push
pop
xchg
push
pusha
mov
xor
mov
lds
pop
add
mov
cmp
push
mov
inc
in
in
(bad)
mov
jmp
xchg
sbb
pushf
js
xchg
in
shl
mov
call
inc
or
pop
rcr
or
push
arpl
cmp
call
std
and
xchg
jmp
(bad)
(bad)
xor
js
push
jle
mov
jecxz
daa
mov
sub
leave
and
or
ds
(bad)
cmps
test
mov
and
and
out
pop
mov
(bad)
pop
xlat
jmp
rcr
out
dec
ficom
test
idiv
push
pop
adc
and
lea
dec
sub
cli
pop
test
adc
cmp
leave
sahf
lahf
jne
mov
pop
cmp
xor
cld
jns
call
movs
das
inc
adc
cld
cmp
jne
inc
(bad)
jle
mov
cli
aaa
test
pop
sbb
sbb
iret
mov
out
sbb
ds
pop
mov
xchg
sbb
and
or
aad
xor
ins
or
pop
jg
add
ror
lock
cld
adc
or
shr
pop
stos
sub
inc
and
mov
aas
cmp
repnz
sub
jbe
ror
jbe
mov
xchg
out
push
cmp
mov
add
outs
sar
fs
jg
out
xor
sbb
std
jle
ss
addr16
and
mov
ror
leave
push
mov
mov
inc
loope
xchg
cmc
dec
cmp
cdq
sbb
retf
(bad)
and
ficomp
push
sbb
leave
xor
pop
mov
jno
cmp
fwait
xor
popf
mov
and
push
sti
mov
push
jbe
jmp
das
popa
mov
and
movs
xchg
sti
sar
inc
je
loopne
sbb
pushf
fmul
mov
fmul
call
adc
push
aam
cmc
in
or
pop
es
cld
icebp
leave
cdq
adc
jge
(bad)
pop
not
rcr
cli
xor
jne
sub
mov
ret
int3
cmps
cmps
or
ror
mov
jge
mov
pop
ja
xchg
push
cmp
jp
jnp
sbb
sub
xchg
cmp
xchg
out
jae
push
add
push
mov
dec
sub
add
cmp
cmps
jmp
in
adc
mov
das
(bad)
xchg
jecxz
and
inc
std
daa
cmp
lods
fnstenv
lea
inc
into
xchg
sbb
push
mov
sub
jg
gs
xor
and
das
fwait
daa
or
sub
in
hlt
cld
sbb
ins
mul
dec
sub
and
ret
adc
pop
mov
rcl
jns
(bad)
mov
push
pop
mov
cmc
mov
shl
and
imul
fdivr
adc
jl
loop
sbb
sahf
fs
mov
pop
dec
mov
out
pop
sbb
push
int
bound
cs
mov
sub
movs
stos
mov
daa
int
cmc
stos
pop
or
js
out
mov
add
dec
mov
xor
jecxz
mov
fwait
sub
mov
xor
and
or
mov
inc
xchg
jnp
xchg
(bad)
shl
mov
in
nop
jnp
imul
xchg
dec
aad
cmc
pop
pop
sbb
xor
sbb
(bad)
ds
mov
adc
pop
cld
pop
(bad)
icebp
jnp
arpl
addr16
sub
adc
cmp
mov
cld
daa
and
jbe
jmp
ds
xlat
jb
test
fsubr
sub
gs
neg
sub
jge
push
fild
mov
aas
xchg
shl
mov
xor
pop
xor
mov
dec
mov
popf
push
and
dec
sub
xchg
adc
mov
ds
xchg
ss
jb
mov
adc
test
xlat
in
loopne
int3
sub
jns
fistp
jp
pop
jmp
xor
jmp
xchg
daa
pop
jns
jbe
mov
xchg
call
ret
dec
jno
pop
sub
mov
icebp
clc
jl
push
mov
dec
fisttp
push
test
mov
ins
test
add
mov
out
mov
jne
sub
test
jecxz
int
inc
adc
xchg
std
inc
xchg
(bad)
pop
mov
add
loop
cdq
push
pop
fmul
xor
dec
push
jl
call
xor
div
fstp
push
jo
bound
test
or
mov
pop
xchg
je
out
hlt
xchg
and
sbb
in
imul
cli
rcr
jl
bound
ret
mov
cmp
and
dec
(bad)
adc
outs
cmp
and
call
test
cld
movs
es
fild
jae
call
movs
test
dec
outs
out
lods
gs
push
gs
loopne
dec
in
cmps
mov
sub
xchg
push
lods
(bad)
jge
adc
sbb
iret
push
jno
jo
cmp
and
into
dec
push
sbb
add
not
xchg
push
mov
lea
mov
sub
cmps
mov
push
push
dec
xor
mov
ja
bound
mov
inc
out
pop
jae
and
push
shr
push
xchg
test
es
popa
jno
int
pop
or
inc
jmp
push
jmp
lahf
test
clc
mov
xor
ret
leave
adc
jecxz
mov
outs
ja
fadd
test
fst
cmp
jp
dec
xchg
lea
jg
hlt
add
pop
(bad)
mov
sbb
push
test
push
lods
and
and
push
pop
in
test
jns
mov
adc
jmp
push
mov
and
in
sbb
sti
les
cmp
iret
mov
loopne
cld
sub
adc
xor
out
jg
aam
call
mov
iret
dec
add
test
sbb
addr16
js
mov
into
dec
push
cmc
data16
mov
xchg
cmp
mov
(bad)
push
mov
call
das
fadd
xchg
fdivr
cmp
mov
cmp
std
jbe
xor
hlt
stos
dec
imul
sbb
cmovge
mov
imul
dec
std
shr
mov
or
fsub
pop
mov
popf
dec
push
or
push
loopne
mov
bound
pop
jns
push
pop
ret
jmp
xacquire
jne
xchg
and
mov
inc
rcl
aad
cs
ret
push
xor
rep
xchg
adc
repz
pshufw
push
pop
sbb
pop
clc
iret
mov
das
xchg
xor
and
cmp
daa
(bad)
cmp
stos
(bad)
shl
dec
cld
stos
pop
cmps
movs
je
enter
imul
sub
xchg
sbb
test
inc
pop
sbb
sbb
push
hlt
mov
call
out
sbb
push
adc
cmp
and
rcl
mov
xchg
je
push
push
sbb
push
in
stc
jnp
repz
adc
shr
in
fst
dec
es
lahf
jp
and
add
lahf
jge
mov
jae
hlt
xchg
push
push
add
cmps
ins
inc
cmp
pop
xchg
add
xchg
jmp
dec
sbb
and
sbb
xor
test
jle
and
fsub
(bad)
xchg
jns
das
mov
cdq
mov
retf
mov
in
push
daa
push
ret
sub
and
out
pop
sbb
outs
or
mov
mov
push
imul
xchg
loopne
ror
int
sub
hlt
js
jmp
jp
cmps
pop
pop
xchg
pop
push
push
mov
lds
xchg
leave
jecxz
imul
cmp
push
scas
add
loop
shl
sbb
ss
jge
adc
popf
and
lds
imul
sbb
ficom
jg
lds
js
xchg
push
call
mov
fdivr
xchg
xchg
cwde
clc
out
push
pop
bound
cmp
(bad)
stc
or
popf
fs
and
mov
xchg
call
mov
push
inc
pusha
or
pop
mov
and
xchg
loopne
xchg
rol
rcl
sub
jl
imul
popf
shr
pop
and
cmp
push
enter
das
push
inc
jp
or
adc
fs
sub
xor
sti
sub
test
cmp
cmp
lock
test
data16
pop
idiv
leave
mov
ret
pop
sahf
dec
mov
xchg
push
pop
popa
pop
inc
mov
fdivr
mov
add
mov
mov
pop
sub
js
daa
iret
movs
sbb
mov
mov
ds
or
push
mov
dec
ret
pop
ins
es
(bad)
lods
or
mov
shl
imul
pop
data16
xchg
mov
dec
xor
dec
js
(bad)
call
jg
sub
rcr
mov
sar
outs
fistp
loopne
fistp
nop
hlt
stc
cmp
add
pop
cmp
adc
addr16
out
push
(bad)
mov
push
mov
add
xchg
(bad)
inc
jae
(bad)
test
adc
gs
ss
hlt
ret
je
or
mov
imul
js
daa
xlat
mov
loopne
data16
mov
out
push
xchg
inc
add
jp
les
ss
mov
stc
and
cmps
iret
ja
add
inc
cmp
pop
mov
stos
cmp
inc
mov
mov
pop
push
test
sub
xchg
xor
cld
push
adc
inc
mov
xchg
or
cmp
inc
xchg
mov
jmp
or
xchg
sbb
adc
jbe
cmp
out
jnp
mov
cmp
into
jbe
xchg
mov
jmp
sbb
xor
jg
fist
sub
mov
popf
daa
jmp
push
xchg
mov
mov
(bad)
mov
pop
in
mov
xchg
sub
push
loopne
mov
(bad)
jne
xchg
mov
add
cmps
mov
add
xchg
push
sub
add
in
mov
or
imul
imul
mov
add
sub
inc
aas
xor
shl
aam
jbe
push
mov
dec
repnz
pop
cmp
les
pop
mov
and
in
sub
xchg
and
mov
ja
sub
sbb
adc
mov
cs
loopne
das
sub
fcom
add
and
mov
outs
scas
xchg
loope
jmp
es
push
shl
in
test
mov
add
cld
icebp
adc
test
xor
xchg
mov
out
loop
dec
sahf
mov
adc
sar
jne
sbb
es
add
icebp
repnz
outs
mov
adc
mov
adc
sbb
xchg
sbb
inc
or
cmp
arpl
les
arpl
aam
jae
xchg
arpl
add
bound
call
jge
xor
xchg
leave
cs
test
movs
shl
push
mov
stos
(bad)
mov
cmp
test
adc
js
in
cmps
call
in
and
js
and
xor
jp
loop
pop
sub
mov
jbe
dec
pop
add
jne
fs
cdq
jg
dec
cs
addr16
in
cs
mov
pop
sub
sub
or
mov
rcl
int3
fisttp
jne
cmp
int3
mov
xchg
lahf
int
adc
adc
pop
pop
jns
xchg
test
push
in
xor
or
inc
ror
popf
mov
mov
loope
xchg
jmp
add
jmp
jo
ror
xchg
(bad)
push
dec
test
in
pop
jae
xchg
jge
pop
(bad)
int
mov
das
mov
push
dec
pop
js
jp
cmp
repz
leave
dec
test
mov
js
jns
mov
jecxz
les
cwde
jmp
push
sti
xchg
add
pop
jmp
popa
addr16
sbb
cwde
sub
mov
and
imul
icebp
xor
jnp
fild
mov
cld
mov
xchg
loope
pop
and
xchg
or
inc
cwde
inc
pop
in
(bad)
fnstcw
fwait
lea
repnz
mov
in
cmps
daa
inc
fisttp
fwait
jb
addr16
icebp
repz
dec
call
lds
sub
repnz
lods
and
hlt
dec
shl
ror
sub
and
cmc
xchg
cmps
mov
push
fadd
pop
pop
clc
sar
clc
sub
pop
sub
lods
cmps
xchg
and
xor
xchg
in
mov
xchg
xchg
retf
ret
dec
cwde
xchg
fadd
xchg
pop
jo
or
dec
loope
fcomp
push
fstp
addr16
out
inc
lods
xchg
jo
pop
clc
sub
push
mov
icebp
xchg
sbb
cdq
test
popf
test
pusha
or
sbb
ds
out
mov
out
aas
pop
xchg
push
mov
mov
pop
and
fdiv
inc
push
lods
mov
sub
idiv
mov
dec
in
fdiv
stos
lea
pop
xchg
mov
repnz
jle
dec
xor
test
loop
push
push
xor
xchg
mov
adc
pop
jnp
lock
sub
jbe
sub
popw
out
(bad)
xchg
add
sub
data16
mov
fstp
xor
mov
xchg
pop
test
adc
mov
fwait
sbb
fsubr
push
fwait
stos
lahf
adc
cs
add
mov
les
cmp
add
hlt
call
push
mov
or
int3
xchg
xor
outs
cmps
outs
pop
pop
jnp
jecxz
loop
push
add
scas
mov
fisub
shl
sub
jo
loopne
cmp
lds
push
or
mov
pop
cmp
loop
cmp
jmp
fdivrp
adc
fnstsw
imul
cmps
pop
js
cmps
mov
xchg
call
sbb
pusha
push
rcl
popf
mov
jg
jmp
popf
mov
cmp
mov
xchg
push
push
mov
xor
sub
jne
mov
jns
scas
jp
lds
mov
push
and
sub
jb
repz
adc
mov
push
stos
add
mov
out
sbb
iret
dec
adc
push
push
loopne
test
xor
lea
outs
in
retf
cld
sbb
ret
and
mov
outs
nop
mov
mov
mov
jne
pushf
aam
into
mov
daa
dec
aaa
jl
pusha
add
lahf
and
mov
shl
scas
std
neg
jle
mov
jl
fbstp
adc
stos
xchg
(bad)
fiadd
leave
or
mov
xor
sti
mov
inc
out
xor
xchg
mov
in
jns
push
mov
shl
add
ja
pop
inc
adc
dec
mov
or
xchg
cs
xor
push
jb
xor
loopne
xchg
xchg
retf
inc
aam
cmc
test
outs
xchg
in
int3
lods
ret
test
out
jb
and
lea
(bad)
xlat
jle
test
dec
xor
mov
jmp
leave
into
dec
daa
sbb
jmp
retf
sub
inc
loop
push
xchg
jne
sub
push
(bad)
push
repz
jecxz
add
add
push
ss
cmp
sar
arpl
jle
add
daa
sub
jb
mov
(bad)
inc
out
and
popa
lock
cwde
jno
data16
sbb
jle
and
in
retf
stc
cwde
jo
aaa
mov
stc
movs
xchg
mov
ficomp
dec
inc
in
pop
adc
aaa
les
pop
cmp
dec
sti
cmps
ret
push
clc
aad
cs
push
sbb
xchg
mov
fisubr
mov
cmp
gs
push
fldcw
sbb
pop
mov
aad
fdivr
jge
xor
pop
lods
cmp
push
clc
push
xchg
cmc
pop
pop
xor
jp
out
xchg
repnz
push
inc
stos
mov
push
xor
into
mov
pop
daa
pop
mov
push
test
xor
mov
(bad)
mov
and
imul
jns
cmp
(bad)
cmp
movs
or
push
dec
out
in
inc
and
repz
pushf
into
js
inc
data16
sbb
jae
pop
cmp
mov
in
scas
adc
popa
fiadd
adc
pop
fs
(bad)
pop
and
cs
pop
in
rcr
cmp
mov
add
cld
test
loope
xchg
loope
dec
xor
sbb
jmp
out
inc
not
push
sub
and
xor
inc
sub
jge
push
ins
test
jb
inc
repnz
cs
push
fst
inc
push
rcl
dec
icebp
jl
repnz
adc
cmp
or
in
cmps
cli
cmp
cli
ja
push
pushf
(bad)
xchg
inc
and
or
adc
mov
scas
lea
inc
mov
inc
sbb
xchg
jae
clc
sub
lahf
cdq
push
push
sbb
lods
pop
cs
jg
sbb
add
add
sub
inc
(bad)
cmp
clc
call
into
inc
mov
jmp
inc
sub
dec
push
inc
jle
jg
in
push
mov
dec
and
call
add
and
add
or
add
out
shr
sbb
fdivr
(bad)
into
push
imul
jne
(bad)
out
dec
or
call
lock
mov
mov
aas
shl
outs
test
or
repz
xchg
pop
jns
mov
dec
and
or
push
mov
jbe
imul
mov
jmp
or
js
dec
or
gs
mov
cmp
fild
cld
and
iret
aam
rcr
cmps
mov
rcl
repz
cs
cmps
or
add
inc
add
pop
xchg
bound
pop
xor
repnz
pop
and
and
test
mov
cli
push
jmp
mov
ffreep
sub
dec
mov
jns
in
rcl
js
rcl
ror
push
cs
mov
lea
(bad)
loopne
cmp
cmp
add
push
push
jo
fdivr
mov
ds
retf
add
fst
in
imul
mov
pop
pushf
add
sbb
hlt
xchg
push
mov
sbb
cmp
or
aam
xor
and
xchg
mov
xor
ret
int3
and
cmp
hlt
cli
jo
mov
cmps
hlt
enter
xchg
inc
mov
xchg
and
jge
imul
adc
shr
pop
mov
jns
repz
inc
or
mov
les
scas
out
addr16
retf
xor
pop
mov
adc
mov
jo
push
sub
and
or
jecxz
mov
jle
dec
fstp
cmp
fadd
fimul
adc
lock
sbb
xchg
rcl
repz
pop
(bad)
jge
not
push
mov
add
adc
add
sbb
jmp
push
ins
mov
xchg
stos
xor
outs
dec
jmp
retf
sub
sub
aaa
dec
into
dec
mov
imul
scas
jne
mov
mov
or
dec
enter
push
jae
fisubr
stos
pop
push
retf
and
and
jo
loopne
jle
jae
pop
cmp
jae
push
push
fistp
pop
add
pop
cmc
movs
cmc
inc
or
stos
rcr
std
sub
jnp
adc
jae
pop
xchg
pop
call
adc
xchg
push
xchg
add
mov
adc
out
adc
test
or
std
ret
loopne
out
pop
sbb
sub
and
adc
adc
xor
sar
les
adc
mov
dec
(bad)
sbb
push
jns
test
into
fwait
mov
aaa
add
mov
loop
cmp
add
scas
div
cmp
sbb
scas
xor
xor
shl
icebp
jo
rcl
lea
loop
push
mov
cwde
push
mov
stc
jbe
ja
sub
mov
xchg
loope
bound
cmp
jge
icebp
dec
mov
daa
je
push
mov
idiv
js
cli
test
sti
jae
pop
clc
fsubr
xchg
pop
scas
test
xchg
and
in
fcom
push
(bad)
lock
xor
or
movs
dec
in
add
xchg
fdivr
cmp
int
and
push
addr16
les
or
add
js
xor
icebp
loope
pop
dec
sub
jo
pop
jae
xchg
out
xor
jp
push
int3
mov
dec
add
jge
push
xor
mov
icebp
aam
imul
imul
nop
jb
pusha
movs
xor
sub
clc
out
pusha
test
adc
jne
mov
xchg
mov
loopne
aas
mul
inc
mov
fidivr
iret
mov
jl
xor
xor
(bad)
std
retf
(bad)
shl
iret
pop
pop
in
ins
adc
fist
sbb
xchg
rcl
outs
mov
sub
jmp
repz
sar
adc
mov
push
retf
sub
mov
and
cdq
dec
xchg
cmp
mov
pop
mov
inc
mov
push
xor
jbe
jmp
push
daa
sbb
sbb
sub
pusha
mov
mov
jp
pop
add
push
sub
test
lock
pop
mov
mov
xchg
mov
or
mov
std
repz
(bad)
in
dec
push
adc
das
sub
pop
pop
imul
shl
cmps
(bad)
mov
pop
out
adc
popa
jae
scas
push
fidivr
mov
push
push
rcr
imul
pop
cmp
loopne
outs
loope
stos
mov
mov
and
imul
loopne
mov
xchg
rcl
cmc
xchg
push
push
repnz
ds
mov
jns
jge
icebp
push
cwde
fwait
movs
rol
(bad)
nop
data16
test
jecxz
aad
add
xchg
(bad)
dec
sub
in
mov
pop
mov
xor
pop
cmp
mov
jbe
jb
(bad)
data16
xchg
cdq
push
mov
int
and
sub
(bad)
(bad)
retf
lods
arpl
mov
cdq
ret
dec
cmp
jnp
sahf
fstp
adc
aas
inc
lods
test
mov
aad
loop
in
out
jmp
sar
or
in
jle
jne
mov
mov
push
jg
ret
lods
mov
mov
mov
jle
xor
pop
mov
loop
lock
aas
adc
sti
xchg
mov
xchg
or
les
sahf
call
mov
sbb
xor
test
cmp
cmp
jge
add
(bad)
push
pop
sti
add
push
inc
xchg
jne
cld
mov
mov
sub
sub
jnp
mov
loope
data16
addr16
jle
sub
mov
pop
fmul
jae
sar
mov
push
test
sbb
sbb
das
stos
jnp
mov
and
xchg
cld
adc
mov
jp
xchg
data16
sbb
nop
stos
lods
inc
ss
dec
mov
push
rcr
sbb
sbb
in
cmp
jle
icebp
into
rcl
mov
outs
xchg
dec
ret
pop
cmp
mov
call
push
add
loope
dec
xchg
test
gs
cmp
add
mov
cmps
sub
in
leave
sbb
xchg
fdivp
push
xchg
push
xor
out
repz
adc
in
pop
movs
or
dec
push
or
int
push
sub
aad
or
xchg
mov
add
js
push
fstp
sar
push
das
jg
into
loopne
inc
retf
(bad)
outs
adc
jae
loop
cwde
fdiv
dec
mov
addr16
jae
xor
jns
sbb
into
sbb
pusha
push
repz
retf
daa
arpl
out
imul
imul
mov
pusha
(bad)
pop
scas
(bad)
mov
xchg
ins
and
gs
pushf
push
add
mov
fist
dec
and
jp
pop
jnp
sub
push
in
je
pop
hlt
add
or
push
xor
clc
xchg
mov
sbb
jecxz
mov
fnstcw
das
jle
cld
aam
and
leave
out
fisttp
cmp
mov
or
inc
xchg
fsubr
mov
pop
je
lods
(bad)
lods
adc
out
in
xlat
xor
aad
dec
cmc
push
adc
or
fwait
mov
sub
adc
stos
add
adc
mov
test
pop
or
pop
cmps
(bad)
in
cmps
stos
pop
or
pop
xor
add
xchg
cli
jno
call
in
xchg
sbb
pop
rcr
adc
mov
push
cmp
cwde
jg
add
pop
jmp
add
jmp
push
jmp
shl
sti
fistp
fs
stos
mov
pop
push
cli
xchg
adc
and
adc
and
push
pop
addr16
jbe
in
aas
xor
adc
xchg
xchg
xchg
ins
cmps
mov
fwait
add
cmp
in
hlt
stc
mov
dec
sbb
mov
ins
mov
push
adc
call
fistp
hlt
push
icebp
sbb
out
mov
cmp
dec
loope
jne
and
sbb
push
cmp
es
leave
jne
push
xchg
adc
js
mov
arpl
pushw
fcomp
aas
xor
add
adc
dec
and
jne
loop
mov
shl
shl
push
and
mov
mov
es
test
xchg
mov
add
jmp
mov
fiadd
mov
xchg
test
mov
test
dec
rol
sub
mov
in
into
sbb
js
daa
lods
jmp
adc
push
xchg
or
push
xchg
stc
cmc
sub
dec
xor
jne
xchg
xchg
add
div
je
(bad)
div
test
jp
int3
mov
or
push
mov
aam
test
in
shr
fldcw
xor
jae
pop
mov
or
or
fwait
arpl
repnz
fwait
pop
xchg
mov
or
push
inc
adc
sub
stc
lds
mov
xchg
dec
push
fidivr
in
cmps
or
fld
mov
pop
mov
sbb
je
xor
pop
pop
(bad)
cmc
sahf
push
jnp
cdq
in
bound
inc
xor
inc
mov
sub
or
xchg
call
scas
xchg
cmc
sbb
xlat
or
inc
jl
cli
test
sub
iret
cld
fidiv
xchg
or
push
mov
sbb
mov
nop
mov
push
movs
nop
fcom
std
lahf
push
xor
scas
dec
add
imul
pop
pop
cld
sbb
mov
lahf
fadd
mov
cwde
mov
xchg
sub
sub
retf
cli
rcl
shr
ret
int3
js
sub
pop
mov
lods
cmc
mov
adc
fstp
sbb
daa
jne
xor
stc
sbb
pop
xchg
add
loope
loopne
push
and
fwait
lods
pop
add
and
imul
movs
aaa
es
mov
add
sbb
jg
jp
mov
add
jne
jb
arpl
out
shr
cmp
(bad)
mov
cmc
push
mov
mov
jno
lods
clc
in
fdivr
mov
jecxz
lea
dec
icebp
std
and
imul
imul
cmps
and
dec
xor
sub
mov
cwde
(bad)
mov
pop
and
xchg
stos
shl
add
adc
in
fnstcw
push
inc
fsubr
cmc
popw
mov
push
mov
mov
(bad)
mov
enter
sti
mov
je
out
jbe
pmaddwd
mov
outs
cld
jbe
jle
cmp
cmp
xchg
dec
add
dec
mov
mov
and
xchg
inc
pop
pop
cmp
xor
inc
xor
in
mov
stc
push
sub
jg
inc
jae
test
ds
(bad)
icebp
and
retf
imul
mov
jb
mov
out
ret
jmp
adc
cmc
sbb
test
mov
xlat
(bad)
(bad)
leave
repz
ret
(bad)
jmp
cmp
loop
sub
daa
jae
lods
xor
arpl
or
cli
mov
xor
sbb
or
sbb
mov
(bad)
mov
cmp
jne
pop
daa
cld
adc
out
push
(bad)
std
inc
pusha
mov
xchg
sub
fbstp
mov
push
sub
xchg
es
sub
sub
cmp
and
mov
pop
adc
stos
dec
inc
xchg
iret
test
dec
scas
cmc
test
inc
clc
mov
push
out
jno
sbb
fs
push
repz
push
imul
enter
dec
ins
repnz
cdq
adc
xchg
push
xchg
mov
nop
loop
add
jo
adc
mov
data16
mov
clc
ins
dec
ja
xchg
xchg
jbe
push
and
sbb
and
xchg
enter
jp
push
lea
sub
ret
adc
xchg
or
pop
xor
es
test
icebp
outs
xchg
mov
mov
test
loope
call
jae
adc
psubsw
mov
xor
mov
popf
and
jmp
cmps
retf
xchg
adc
shl
enter
pusha
add
sub
inc
xchg
fdivrp
sub
jo
sti
pop
mov
sub
xchg
push
repz
movaps
int3
push
jnp
mov
imul
xchg
int3
mov
les
loop
xchg
ins
hlt
dec
mov
out
je
sub
int3
dec
and
icebp
push
cmp
scas
stos
push
xor
xchg
sub
sbb
js
(bad)
cld
pop
xchg
push
and
mov
sub
xchg
pop
je
adc
out
push
lea
sub
cmp
jp
xchg
jno
int3
bndldx
cmp
mov
xor
mov
jae
mov
adc
mov
shr
hlt
js
xchg
add
pop
imul
xchg
mov
add
lea
push
and
jo
push
outs
sub
sub
cwde
sbb
cs
fs
pop
psrld
gs
sbb
hlt
sub
jo
mov
mov
shr
pop
addr16
ficom
stos
dec
imul
inc
repnz
ret
dec
fdiv
ins
ins
sub
pop
push
jne
jne
pushf
mov
add
xchg
or
mov
pop
cmps
jne
int
ret
test
mov
cmps
pop
ret
dec
or
xor
mov
mov
test
inc
or
int3
xchg
mov
loope
mov
or
sbb
out
test
repnz
cli
retw
idiv
mov
rcl
rep
adc
jmp
pop
js
ret
mov
mov
ja
cmps
push
and
out
pusha
ror
loop
and
sbb
(bad)
retf
fnstsw
std
popf
jle
push
push
iret
xor
mov
in
dec
or
movs
icebp
jne
sub
sbb
mov
jae
in
jno
lods
adc
push
dec
or
jge
adc
cld
add
push
dec
fidivr
aam
retf
xlat
sub
push
dec
xor
mov
ret
ret
loopne
fcom
sbb
add
and
das
arpl
adc
pop
sbb
sahf
fistp
ror
sub
jmp
das
xchg
inc
out
(bad)
loope
out
pop
imul
push
setb
mov
xchg
out
and
js
test
fs
stos
pop
mov
daa
or
(bad)
icebp
aad
push
push
mov
dec
repz
out
jns
xor
pop
mov
jns
xchg
jnp
mov
mov
inc
xor
repz
sub
test
das
(bad)
(bad)
std
call
addr16
xor
out
xor
mov
mov
mov
pop
add
dec
rcr
or
inc
pusha
sbb
jle
xchg
xchg
mov
xchg
cmp
rol
in
ja
fld
mov
sub
xor
out
repz
dec
mov
retf
adc
jnp
rol
pop
les
cmp
nop
inc
dec
pop
mov
lods
mov
or
in
push
pop
pop
xchg
or
sub
adc
xchg
retf
mov
je
dec
ror
stc
movs
xchg
and
xchg
es
or
lds
jnp
sbb
movs
adc
(bad)
js
call
sbb
pop
xchg
add
movs
ds
enter
repnz
cmp
movs
cmps
cmp
mov
push
jae
sub
or
mov
jns
icebp
ds
jmp
ins
cwde
inc
xchg
and
inc
dec
and
adc
into
xor
daa
push
sub
cli
adc
xor
and
sbb
(bad)
push
nop
mov
enter
adc
pop
inc
dec
test
retf
adc
js
mov
jmp
rol
dec
inc
and
and
(bad)
cmp
pop
xchg
sub
pop
aam
repz
xor
inc
cli
adc
cmp
dec
jg
clc
daa
add
mov
icebp
std
add
rol
les
iret
ja
push
add
cmp
and
dec
btc
mov
out
xlat
sub
inc
in
and
pop
push
jbe
push
sbb
jge
dec
pop
cmp
into
mov
and
test
sar
jp
mov
iret
lea
clc
pop
jmp
ret
sti
popa
pop
test
and
xor
mov
inc
mov
xlat
adc
mov
daa
mov
sub
cmp
(bad)
mov
inc
and
dec
je
jmp
icebp
inc
xor
js
jecxz
add
loopne
cmps
dec
inc
inc
pusha
sahf
call
shl
popa
call
sub
cmps
icebp
aas
push
stc
jl
daa
add
or
cmp
enter
es
xchg
lods
cld
(bad)
pop
sbb
add
pop
jmp
push
add
push
es
mov
push
adc
out
(bad)
les
xlat
jae
sbb
and
mov
jp
mov
jo
(bad)
xchg
test
push
das
cmp
mov
popf
(bad)
nop
idiv
int
jl
and
in
bnd
in
xchg
xchg
pop
xchg
hlt
jge
jp
cdq
setne
mov
inc
inc
aaa
hlt
mov
shl
aas
push
sub
mov
fucomp
sub
push
fcomip
jns
mov
jl
mov
cmp
and
dec
xchg
pop
mov
fimul
push
iret
jbe
stos
xor
imul
dec
adc
or
and
imul
mov
push
xchg
inc
xchg
imul
jne
jno
xchg
sub
jo
inc
cmps
out
pop
imul
pop
clc
mov
pop
add
bound
outs
fstp
cs
aas
inc
fsub
test
mov
in
shr
nop
xor
addr16
add
sub
vrsqrtss
sub
cmc
xor
push
je
mov
adc
out
das
push
es
repnz
scas
push
(bad)
pop
scas
inc
xor
pushf
cli
sbb
leave
add
sbb
dec
ret
rcr
mov
sbb
rol
cmp
mov
push
fwait
xchg
pop
push
xchg
sahf
pop
mov
test
jl
adc
popf
add
int
jne
pushw
jle
push
mov
sbb
cli
inc
adc
lea
xchg
int
push
push
movs
xor
lds
fild
ins
inc
clc
push
inc
int3
or
cmps
test
dec
cli
xchg
arpl
adc
cmps
sub
xchg
jnp
mov
imul
xchg
inc
aad
loope
dec
clc
xchg
pop
add
pop
mov
add
imul
adc
(bad)
cmc
xchg
les
xlat
jns
mov
out
js
loope
cmp
cmp
mov
ins
stc
test
cs
jp
dec
xor
sbb
aad
test
xchg
test
jge
mov
aas
cmpxchg
pop
(bad)
and
push
sub
push
sbb
cmps
sbb
pop
dec
clc
cmp
jmp
jmp
cmp
adc
xchg
and
aam
ss
dec
mov
xor
pop
adc
add
cld
mov
mov
ja
std
shl
fadd
fbstp
or
add
cld
mov
test
idiv
xor
pop
push
sbb
loopne
sub
dec
(bad)
xor
ja
call
mov
and
pop
adc
mov
jp
jmp
or
xor
movs
cmp
jne
nop
jno
iret
mov
fiadd
jnp
inc
pop
retf
cs
jae
loope
sbb
xchg
iret
sar
mov
xlat
xchg
cs
ja
or
xchg
scas
xchg
or
push
jmp
sbb
(bad)
adc
xchg
lock
and
mov
leave
push
fs
pop
pop
jl
(bad)
pop
clc
(bad)
pushf
mov
jg
mov
cmc
adc
das
test
je
mov
mov
shl
loope
(bad)
push
jo
outs
repz
(bad)
retf
mov
in
mov
fstp
xchg
sbb
xchg
pop
jnp
aam
push
and
into
push
outs
and
scas
and
fcom
outs
pop
test
mov
cmps
imul
mov
xchg
shl
int
in
mov
test
inc
fidiv
pop
pop
repz
xchg
dec
or
mov
int
push
pop
xchg
pop
mov
adc
mov
add
jl
ror
sub
adc
icebp
std
push
inc
mov
fstp
imul
sbb
cmc
xchg
mov
pop
dec
js
mov
outs
xchg
sbb
mov
(bad)
xchg
push
cmp
or
popf
shr
daa
aas
fsub
inc
out
addr16
test
bound
das
mov
push
push
imul
jl
xchg
imul
int3
pop
test
(bad)
cld
dec
cmc
js
push
std
inc
fpatan
popa
jle
mov
ror
and
sub
or
int
arpl
sbb
push
and
add
div
in
push
(bad)
cdq
jmp
scas
mov
ins
cdq
inc
mov
sbb
(bad)
cld
and
pop
and
fst
(bad)
xchg
imul
jl
in
xchg
mov
mov
cmp
dec
repnz
jle
cmp
cs
pop
std
xchg
aas
test
pop
push
push
mov
test
in
xor
(bad)
call
inc
sahf
jmp
push
shr
clc
rol
ret
adc
outs
mov
cmp
aaa
mov
sahf
shr
out
pop
cwde
inc
cmc
pop
pop
data16
push
lods
ds
fldcw
(bad)
fild
enter
es
jp
push
sbb
xchg
dec
sbb
dec
mov
and
or
push
jns
mov
iret
sub
in
out
lds
ret
imul
mov
(bad)
jecxz
or
push
fbld
inc
es
dec
in
jle
mov
(bad)
jmp
mov
pop
call
mov
in
jg
cmp
popf
jp
mov
mov
add
leave
xor
ffreep
mov
and
jmp
pop
add
mov
adc
dec
push
retf
sbb
pop
out
sbb
lods
in
jns
push
cmp
loopne
in
xchg
xchg
push
mov
cmps
mov
inc
adc
push
in
push
dec
xor
add
add
mov
xor
and
test
shl
add
fs
and
dec
jp
and
cmp
jne
dec
movs
xchg
cmp
jne
xchg
retf
and
ss
jne
loope
pop
and
sbb
stc
(bad)
or
cmp
dec
and
xchg
sub
mov
mov
jne
bound
lahf
arpl
shl
popf
adc
std
out
sub
add
mov
cdq
mov
sar
(bad)
retf
and
sub
test
adc
pop
and
jg
mov
mov
or
in
cdq
xchg
repz
mov
fs
mov
xchg
cmp
repz
sub
sub
dec
adc
push
mov
cwde
(bad)
es
repnz
daa
fs
test
enter
int3
retf
sub
sub
fist
aas
push
cmp
push
jecxz
out
push
inc
outs
nop
xor
mov
xchg
pop
sbb
je
cld
iret
jecxz
pusha
pop
int3
ds
pcmpgtb
push
hlt
mov
mov
stc
ins
jmp
cwde
test
imul
ret
add
or
mov
test
mov
fwait
out
xor
mov
xor
inc
cld
pop
pop
js
inc
cmp
xor
xchg
jg
pop
and
test
cmp
and
xchg
in
push
and
cmc
xchg
xor
mov
js
or
test
jne
mov
out
imul
mov
jnp
xchg
xchg
das
mov
sbb
retf
daa
pop
shr
es
icebp
stc
sub
cmp
or
jne
sbb
or
mov
sub
mov
xchg
pop
ja
call
and
test
jmp
inc
mov
mov
pusha
sbb
xchg
sbb
aaa
iret
es
add
mov
xchg
int3
xchg
xchg
push
movs
pop
sbb
pop
fdivr
pop
sar
pushf
dec
jmp
and
cmps
xchg
add
xor
and
iret
mov
inc
push
gs
push
js
sub
mov
icebp
cmp
rcl
jbe
mov
push
mov
clc
inc
cld
xchg
push
pop
pop
test
jae
xchg
xor
adc
push
push
push
bound
xchg
bound
jno
jae
dec
mov
mov
loopne
popa
or
or
sbb
retf
pushf
rol
ds
mul
mov
xor
push
cli
xchg
mov
or
add
push
inc
aad
mov
hlt
push
push
shr
enter
cmp
inc
dec
stos
imul
jo
retf
into
xor
test
mov
and
xchg
mov
mov
pop
dec
push
cmc
inc
stos
mov
cdq
cmp
mov
sti
in
and
xchg
inc
(bad)
sbb
retf
in
xchg
std
sub
dec
ret
pusha
hlt
cld
xchg
cmc
sub
cmp
xchg
test
loope
cmc
fimul
xor
js
in
(bad)
mov
mov
pop
scas
xchg
icebp
int3
sbb
retf
or
sbb
js
rol
xlat
mov
fidivr
mov
mov
bound
jno
je
test
jg
jmp
xchg
sbb
pop
movs
hlt
ins
xchg
jmp
invd
retf
pop
and
shl
jge
push
bound
xchg
push
(bad)
stos
sti
clc
mov
inc
push
cmp
(bad)
jns
xchg
mov
test
push
pop
sar
xchg
add
mov
test
jp
xchg
mov
(bad)
push
inc
xor
sub
es
ja
and
test
clc
sar
mov
jnp
push
in
loop
add
sub
push
jae
dec
fidiv
sub
mov
je
test
or
cmp
xchg
movs
test
xchg
or
enter
mov
and
xor
jle
mov
movs
retf
or
push
clc
daa
scas
xchg
daa
mov
in
xchg
adc
xor
mul
out
dec
push
lea
inc
aam
in
sub
cmp
mov
movs
cmp
sub
mov
adc
dec
inc
fcmovnb
jp
aad
clc
adc
stc
and
push
jne
sub
mov
inc
xchg
pop
dec
(bad)
cmps
mov
or
sbb
shl
dec
retf
pop
stc
fsubrp
sar
mov
cwde
(bad)
sbb
es
adc
jp
mov
cmp
mov
jg
add
leave
outs
rcl
jl
sar
mov
fwait
xchg
push
jno
jg
jae
mov
push
mov
push
imul
ds
je
cmp
jp
pop
in
adc
or
dec
pop
imul
mov
xchg
ss
stos
pop
xor
icebp
inc
pop
sbb
inc
sub
jns
mov
(bad)
int3
add
data16
lds
pusha
cmp
dec
fistp
dec
or
ds
rcr
ret
xor
pop
and
pusha
pop
nop
sub
lds
jae
stc
adc
sbb
das
sahf
cmp
adc
aaa
push
and
in
jae
sub
pusha
mov
mov
jo
push
sub
imul
xchg
leave
frstor
inc
mov
cmp
mov
push
cmp
xchg
out
sti
aad
cmp
mov
cld
mov
jle
fs
out
mov
in
jge
pop
stos
inc
rol
or
ret
pop
rcr
pusha
mov
push
shl
repz
sub
cmp
dec
mov
lock
jg
xor
mov
xchg
loop
pop
and
pop
cwde
pop
jne
pop
mov
bound
shufps
cdq
and
cwde
clc
xchg
ja
popa
xor
cmp
stos
in
jmp
in
adc
into
jnp
xchg
pop
lock
add
rol
inc
mov
jns
dec
jne
pop
jae
retf
dec
out
shl
pop
push
jo
cs
cmp
and
pusha
inc
adc
xchg
push
data16
call
dec
xchg
retf
lds
or
cmp
mov
push
fidivr
out
dec
xchg
jno
cmp
stos
outs
je
jle
fcom
int3
pop
sub
jle
stos
stos
adc
loopne
mov
sub
jo
pop
shl
aam
and
jle
shr
int3
cmps
ins
(bad)
(bad)
xor
push
push
dec
je
outs
push
dec
xchg
cli
dec
push
xchg
pop
xor
mov
loope
or
mov
pop
test
loope
mov
es
fwait
ins
push
sub
ret
bound
popa
pop
xchg
mov
adc
mov
jp
repz
cli
fld
add
sub
add
in
fistp
push
outs
jp
xchg
or
xchg
xor
inc
repz
lea
xchg
cld
adc
sub
ja
and
xor
in
or
add
sbb
inc
jmp
adc
lea
jae
xchg
rcl
pop
je
xchg
jns
mov
cmp
adc
and
scas
mov
movs
jmp
clc
mov
gs
sub
pusha
lods
pop
(bad)
movs
test
xor
out
ret
xor
imul
mov
bound
mov
jmp
or
mov
lock
xlat
push
mov
(bad)
and
shl
mov
fsubr
mov
mov
data16
inc
retf
iret
jge
mov
ret
mov
(bad)
imul
lods
pop
adc
stos
xor
dec
test
test
inc
fucomi
dec
pop
add
xor
xchg
add
sbb
jne
jo
ret
inc
or
inc
xchg
mov
xchg
mov
popf
adc
pushf
bound
cmp
sbb
loop
ins
repz
gs
(bad)
in
cli
xchg
jo
imul
and
jae
cmc
out
pop
cmp
xchg
aaa
inc
and
pop
cs
sub
cmp
enter
mov
sub
sbb
xchg
push
xlat
sub
inc
es
dec
cmc
adc
popa
jmp
xchg
popf
stos
pop
retf
cmps
fwait
cmp
imul
inc
sbb
jecxz
xor
int
mov
ret
jl
in
test
adc
imul
call
inc
js
fisub
and
mov
call
mov
pop
or
call
mov
xor
pop
add
test
cmp
mov
push
lahf
xor
jne
dec
or
push
fwait
xchg
inc
push
push
neg
push
inc
dec
call
xchg
nop
mov
jmp
inc
mov
push
loopne
dec
rcr
push
aaa
dec
xor
xchg
mov
jne
addr16
add
movs
dec
jecxz
sub
xlat
daa
adc
pop
sub
out
jmp
sub
sti
jb
jne
xchg
or
add
ficom
ins
iret
jae
pop
movs
pop
mov
movs
sbb
fst
and
lock
retf
xor
jo
imul
in
imul
test
fist
enter
dec
adc
in
jg
cdq
push
add
sbb
cli
mov
call
jns
xchg
cmp
test
xchg
aas
pop
sub
loope
and
push
and
retf
jne
and
xchg
lock
sbb
fisubr
ror
cmp
adc
inc
mov
es
mov
hlt
cmp
pop
mov
push
retf
js
pop
(bad)
arpl
lods
repnz
xchg
dec
xchg
cmp
xchg
add
inc
js
mov
xor
int3
aas
jle
sub
xchg
xchg
aam
aad
je
gs
pop
js
ins
ret
mov
mov
and
cwde
adc
or
add
ja
mov
popf
pop
pmullw
ins
js
sahf
mov
jg
or
ret
pop
adc
or
jne
push
pop
cmp
cmps
push
jne
mov
dec
shl
add
pusha
and
xor
push
or
cld
pop
xchg
gs
xchg
push
xor
and
stc
pusha
test
mov
pop
add
dec
adc
xchg
pop
adc
popf
mov
aas
pop
cli
ret
jae
push
jge
or
or
and
or
push
movs
call
shr
cs
xchg
pop
cmp
mov
movs
repnz
mov
rcr
mov
cvtps2pd
je
in
es
or
sbb
cmps
call
data16
add
data16
sub
lods
lock
aad
imul
mov
cdq
push
pop
jg
sbb
dec
repz
mov
xchg
jle
and
xchg
mov
pop
mov
sub
cs
lds
jae
pop
lock
mov
fisub
in
lock
cmp
sub
pop
cli
xchg
jmp
and
jne
cmp
lock
pop
js
imul
je
cmp
es
stc
stos
clc
lods
push
cmp
dec
adc
xchg
mov
lahf
retf
mov
or
jae
std
xchg
(bad)
jmp
inc
pop
mov
mov
fadd
fucomip
inc
int3
aam
mov
daa
mov
retf
repnz
in
jbe
stos
and
push
mov
xor
ret
add
mov
in
sete
stc
pop
sub
aaa
arpl
pop
icebp
lock
xchg
shr
push
aas
inc
mov
mov
daa
add
cld
in
mov
push
cwde
cs
push
js
sar
in
mov
push
push
cld
cli
lds
test
imul
xchg
cmp
xchg
popa
jg
and
push
xor
adc
lods
dec
in
mov
in
xor
mov
loope
xchg
out
cmp
nop
xchg
pop
mov
out
movs
or
mov
cmp
jmp
aas
pop
and
xchg
je
adc
mov
adc
retf
cld
cmp
test
jmp
daa
(bad)
test
push
lods
xchg
mov
xchg
sti
rol
sub
cmp
cmp
pushf
and
mov
(bad)
pop
cdq
push
or
inc
imul
stos
or
cmp
fs
movs
call
pop
push
add
popf
popf
push
es
stos
sbb
sbb
mov
ss
dec
pop
movs
and
not
jbe
or
outs
xchg
jae
xor
int
push
es
or
je
cli
xor
fnsave
in
stos
pop
push
or
js
nop
inc
jne
jo
es
fldenv
xchg
nop
xor
or
xchg
pop
add
inc
add
iret
in
xchg
repz
mov
ret
(bad)
adc
inc
xchg
rol
xchg
mov
and
daa
xchg
push
and
cld
ffreep
fdiv
pop
sub
adc
fst
mov
int3
mov
ss
popf
jle
ds
mov
mov
xchg
stos
xor
loope
(bad)
int3
pop
rcr
mov
sub
xchg
std
cmp
sbb
inc
pop
pop
and
sbb
xor
jge
dec
(bad)
loopne
sbb
rcl
push
shl
jle
or
call
pusha
cmps
adc
ret
mul
pop
mov
sub
push
sub
mov
(bad)
rcr
fucomp
or
pop
xchg
add
mov
inc
sbb
loopne
jae
cmc
jmp
jl
daa
adc
movs
dec
sbb
movs
cmp
outs
cld
jb
test
test
xor
out
sub
xchg
xchg
fs
(bad)
aas
sbb
lahf
pop
les
into
cmc
or
out
jge
push
sti
cmp
push
pop
je
test
xor
jg
shr
sbb
dec
dec
addr16
pop
and
stos
mov
movs
inc
mov
push
inc
daa
jp
xor
retf
mov
addr16
ins
inc
sbb
fst
repz
sub
add
jl
mov
mov
lea
data16
xor
dec
aas
iret
(bad)
sub
les
cmp
jp
cmps
test
sbb
aam
out
mov
jbe
shr
ja
test
js
out
xchg
push
cmp
add
rcr
and
sbb
lods
pop
sbb
lds
pop
cmp
sbb
xchg
push
xchg
jge
lods
push
jl
xor
aad
cmc
test
adc
sbb
icebp
icebp
imul
jl
adc
out
sbb
fwait
ds
fnstenv
out
jle
xlat
sahf
xchg
xchg
movs
push
adc
ret
push
xchg
sbb
rol
cmp
ret
mov
ss
jb
mov
push
fdiv
sub
inc
aam
div
js
bnd
jmp
pop
pop
cmp
sub
jp
push
mov
inc
add
or
sbb
push
sub
aaa
es
pop
out
fiadd
inc
xchg
mov
pop
iret
cmp
sahf
pop
iret
jp
pop
push
ja
std
cs
sub
jns
pop
mov
push
cmc
jns
frstor
and
js
lods
clc
data16
jmp
js
(bad)
mov
les
or
(bad)
mov
xor
aam
imul
and
add
pop
stc
nop
call
xor
sub
add
fs
in
int
jmp
mov
push
push
pop
adc
mov
data16
cmps
sbb
push
bnd
mov
sbb
xchg
inc
int
xchg
aaa
or
dec
shr
mov
xchg
mov
sub
in
inc
sub
call
int3
ficomp
mov
xor
in
or
clc
push
sbb
bound
std
cmp
aad
mov
(bad)
fwait
adc
or
in
out
mov
jo
je
je
loop
ret
or
mov
xor
add
mov
pop
sbb
mov
mov
hlt
mov
adc
out
test
lds
sub
mov
mov
mov
icebp
out
fdivr
jae
iret
scas
cmp
cld
xchg
sub
std
and
jl
xor
out
dec
stos
das
push
js
xor
adc
sub
movs
add
jne
lea
dec
je
pushf
pop
add
inc
dec
rcr
cs
xor
(bad)
xchg
fimul
push
cmps
mov
inc
mov
lods
push
aam
cmc
push
jae
sbb
rcr
sub
call
pop
leave
lahf
xchg
adc
loopne
fwait
sub
ret
lds
push
add
mov
xchg
inc
imul
into
push
and
ret
sub
aaa
push
mov
mov
xchg
sub
xchg
imul
test
int
daa
das
daa
(bad)
xchg
(bad)
clc
je
or
pusha
sbb
sub
jecxz
jnp
cdq
retf
jl
adc
sub
mov
lahf
lods
movs
imul
dec
dec
sub
inc
adc
sub
sub
or
(bad)
mov
outs
icebp
js
dec
sbb
dec
addr16
repz
dec
mov
xchg
mov
(bad)
outs
js
sub
push
aas
pushf
loope
dec
out
pop
dec
dec
cmps
jnp
js
test
xchg
(bad)
data16
fst
arpl
test
mov
or
dec
in
mov
in
xor
adc
lahf
sub
jge
out
xchg
loopne
in
adc
ins
push
xchg
movs
add
xor
jne
pop
cmp
fld
inc
jmp
add
xchg
imul
push
int
in
jle
dec
imul
mov
jnp
inc
xchg
sbb
xchg
push
xchg
dec
xchg
xor
xchg
ins
push
(bad)
mov
js
lea
mov
aam
jae
imul
xchg
in
jg
fstp
mov
lods
inc
adc
jle
stos
pop
jmp
add
xchg
in
add
ret
in
popf
jae
add
mov
outs
or
call
(bad)
cli
pop
fcom
push
push
pop
das
jge
std
addr16
mov
push
xchg
mov
les
sub
into
pop
sub
mov
dec
push
test
lock
sbb
dec
cmp
xchg
xor
fild
cs
push
xchg
cmc
xchg
push
lock
mov
jge
repz
pusha
push
jnp
sub
imul
xchg
cmp
clc
push
pop
int
pop
xchg
fsubr
int3
dec
ins
lea
mov
mov
loope
sub
pop
and
sub
ret
dec
(bad)
fld
cs
or
in
push
xchg
mov
lds
mov
repz
sti
push
push
arpl
and
fwait
mov
or
rcl
movntps
mov
inc
fnstcw
cmp
outs
repnz
xor
xchg
stos
jne
mov
add
daa
inc
mov
sub
mov
fadd
add
dec
mov
xchg
retf
cmp
pusha
jno
daa
not
mov
cmp
rcr
sbb
leave
cwde
movs
cmp
jmp
jne
push
fs
pop
jg
push
shr
jge
pop
ss
pop
aam
add
push
mov
sbb
icebp
sub
sbb
(bad)
add
ffreep
mov
push
jg
and
mov
inc
cld
mov
call
jb
mov
jo
cmp
mov
add
test
xchg
mov
push
adc
mov
retf
test
xor
out
outs
stc
and
cmp
pop
jle
jae
xchg
(bad)
adc
jp
xor
lods
popa
push
add
pop
cmp
add
cmp
mov
pusha
add
enter
xchg
imul
arpl
sub
add
and
sub
imul
test
adc
icebp
inc
xchg
cwde
sbb
mov
imul
sub
ret
sbb
(bad)
call
ss
rcr
xchg
xchg
and
retf
(bad)
test
pop
pop
push
add
push
pop
add
cmp
in
jg
cld
addr16
mov
and
jg
jnp
cmp
ins
jg
inc
and
les
mov
inc
sbb
sub
dec
xchg
xlat
mov
cmc
or
js
xchg
mov
cmp
lods
mov
jmp
imul
or
add
adc
sbb
into
hlt
nop
pop
mov
stc
xchg
loopne
mov
enter
ja
hlt
mov
add
out
shl
mov
test
shl
daa
xor
jno
scas
out
jl
outs
mov
out
or
scas
pop
xor
ret
cmp
pop
stos
xor
jmp
fimul
int
adc
inc
std
dec
or
jge
sahf
push
loope
dec
adc
(bad)
in
vmread
adc
mov
sub
lods
inc
pop
imul
push
mov
ss
es
out
cmps
mov
ret
clc
jecxz
inc
push
jns
pop
push
cli
fld
in
lods
dec
cwde
jne
mov
sub
fist
sti
jne
jle
mov
push
jb
mov
daa
lea
(bad)
fdivr
sbb
call
in
les
push
inc
adc
out
push
popa
xlat
pop
into
addr16
add
xor
adc
movs
lahf
cdq
push
push
cmp
xchg
js
xchg
rcl
int
add
nop
test
mov
mov
xor
movs
daa
and
data16
mov
out
pop
repz
bound
jmp
adc
mov
fsubr
xor
lds
xchg
clc
xchg
not
inc
pop
jne
inc
sahf
jecxz
fadd
or
mov
dec
(bad)
pop
jne
mov
adc
imul
test
inc
rcl
xor
and
sub
loop
loop
in
movs
add
jge
sbb
inc
cdq
jns
lods
loopne
cmp
inc
sti
push
hlt
es
pop
cmp
adc
int3
pushf
bound
pop
add
or
stc
and
mov
lods
sbb
les
pop
jno
ror
push
jecxz
xchg
bound
and
add
push
aam
mov
dec
jne
sbb
icebp
out
dec
sbb
jp
mov
mov
or
cwde
sub
push
mul
mov
stc
sbb
aad
jmp
adc
cdq
mov
adc
jge
push
in
sbb
push
mov
sbb
xchg
jle
jbe
sub
push
lds
mov
dec
add
lds
pop
add
imul
test
mov
jnp
sub
(bad)
cmp
in
aaa
add
rcl
xlat
pushf
push
inc
movs
xchg
pop
cwde
dec
jne
xchg
push
cmp
in
lods
je
ja
sar
rcl
jbe
pop
aas
int3
outs
adc
fsubp
inc
arpl
test
inc
dec
sub
add
mov
xor
stos
xor
xor
cmp
push
ins
dec
jbe
(bad)
and
jge
xchg
adc
or
cmc
imul
ins
out
rcl
out
cld
int
jp
xchg
cmp
xchg
dec
fwait
pusha
pop
sub
enter
jnp
jmp
call
xor
sub
mov
mov
push
not
push
loope
cmc
push
sub
xchg
jp
add
js
xchg
push
aas
mov
or
xor
xchg
in
iret
dec
add
je
sub
xchg
stos
or
clc
scas
push
jae
cs
xlat
cli
or
lods
or
dec
dec
xchg
std
and
outs
in
mov
fs
push
jle
icebp
pusha
sub
pop
int
mov
xchg
inc
fcmovnbe
jo
xchg
cmp
xchg
inc
pop
pop
cmp
cmps
xchg
jne
mov
fcomp
push
aas
sar
mov
ror
push
std
mov
std
sti
pop
xchg
inc
fisttp
movs
cmps
rcl
xor
mov
add
push
cmps
xor
popf
push
aas
xor
and
push
cmps
in
push
in
out
jp
popw
mov
shl
icebp
inc
inc
dec
cwde
je
sbb
aad
sub
in
sbb
add
fisubr
xchg
jecxz
jle
and
mov
pop
ret
cld
push
add
add
adc
lds
fsubr
mov
inc
ins
mov
mov
test
ds
jmp
(bad)
pop
mov
jae
out
mov
mov
das
push
es
mov
xlat
or
leave
mov
inc
mov
and
jae
rol
shl
cmp
loop
push
sbb
sub
and
mov
sub
mov
inc
ins
ror
stos
sub
cmp
xchg
mov
or
call
dec
or
add
pop
cld
es
cmp
dec
nop
loopne
xchg
ds
cmps
movs
(bad)
fdiv
cmps
mov
mov
retf
ins
outs
in
inc
ficomp
bswap
std
sbb
adc
inc
test
push
fisttp
and
xchg
jbe
jmp
xchg
sub
imul
iret
int3
dec
adc
push
outs
mov
in
in
xor
mov
je
shl
push
into
ins
in
sub
fisttp
push
cdq
(bad)
call
ins
jmp
scas
cwde
jle
aas
adc
mov
add
movs
cmp
cld
adc
imul
cmc
or
retf
mov
icebp
hlt
add
jecxz
lds
mov
cmps
jnp
repz
hlt
mov
push
cmp
pop
ret
retf
xor
cmp
mov
and
mov
shl
mov
enter
inc
xchg
bound
jle
test
(bad)
fnsave
fnstcw
and
fldenv
repz
sar
out
aam
in
hlt
push
(bad)
aaa
cmp
popf
or
fld
mov
inc
inc
int3
pushf
mov
and
pop
xor
mov
jo
mov
push
push
imul
inc
shl
sbb
mov
cmc
lds
sbb
mov
cld
adc
add
test
mov
pop
cmc
test
ss
js
jge
shl
cld
cmp
jge
mov
das
dec
fwait
mov
xchg
arpl
in
jae
mov
cmp
inc
mov
ror
mov
shl
lea
jl
out
not
loopne
pop
out
push
xchg
jp
les
dec
push
push
fstp
sbb
stos
ret
pop
dec
test
adc
xchg
pop
jg
inc
mov
or
adc
push
in
cmp
pop
push
jl
icebp
loope
cs
ret
leave
xchg
test
or
jmp
jb
mov
mov
xlat
pop
ins
scas
add
fnsave
(bad)
nop
dec
sub
dec
lods
cmp
dec
shl
push
mov
mov
lahf
sub
mov
jb
repnz
rcr
sub
jmp
xchg
sbb
mov
addr16
xchg
repnz
sub
jb
jb
add
jns
mov
add
das
jge
pop
call
or
retf
ret
dec
retf
out
hlt
push
mov
cmc
into
sub
out
loop
addr16
lods
push
push
aad
cdq
sbb
mov
jp
push
and
test
dec
dec
cmp
add
push
repz
sub
and
cmps
cdq
sbb
les
ret
xchg
cmc
std
test
sub
jg
xor
les
cmp
(bad)
pusha
cmp
add
fisttp
enter
cmp
call
idiv
push
js
adc
test
or
sub
inc
sbb
stc
les
and
pop
pop
mov
jo
and
shl
mov
sahf
xchg
test
repnz
pop
popaw
mov
je
dec
sbb
pop
je
hlt
push
fdivr
and
in
mov
shr
xor
daa
adc
jns
cmc
in
dec
jae
add
cmps
(bad)
inc
jmp
add
xchg
jp
loope
pop
and
fs
xchg
pop
fldenv
in
ss
pop
enter
in
or
push
add
bound
dec
xchg
addr16
jne
add
pop
ja
fistp
xchg
daa
les
xchg
out
cmp
in
cmp
lock
sbb
aam
xchg
xor
retf
sbb
div
adc
addr16
mov
push
retf
in
pop
xchg
icebp
rol
xchg
inc
pop
daa
das
mov
sub
xlat
sub
xor
add
imul
sbb
inc
call
call
ins
add
loop
(bad)
mov
push
mov
sub
in
inc
and
jmp
mov
lahf
xchg
mov
(bad)
fsub
jle
retf
jp
lock
pop
jl
xor
push
xchg
mov
scas
push
fldenv
iret
mov
lock
fs
adc
lock
xchg
pop
mov
jecxz
not
jmp
outs
dec
test
and
cmp
xchg
int
cmp
loopne
pop
push
mov
pop
inc
aad
adc
icebp
leave
mov
jge
std
ret
data16
dec
inc
ret
sbb
mov
sbb
test
out
inc
test
pop
mov
or
bound
scas
pop
jp
stos
push
ret
add
add
dec
cmp
add
sbb
ret
cmp
das
les
stos
mov
mov
ins
mov
loop
mov
push
inc
aam
cdq
or
and
sbb
xor
pop
into
xor
add
retf
(bad)
dec
and
fcom
or
xor
mov
cmp
enter
mov
push
std
mov
jns
xchg
test
and
dec
pop
dec
adc
fcomi
adc
add
cmp
jg
outs
mov
dec
and
lods
mov
add
leave
and
jecxz
push
xchg
xbegin
jmp
rcr
pop
sub
inc
daa
lods
(bad)
push
(bad)
lds
ins
pop
ret
xchg
inc
data16
cli
ins
(bad)
dec
jge
hlt
test
cmp
sbb
mov
sahf
jnp
sti
xchg
into
mov
xchg
mov
repz
jg
inc
mov
(bad)
xor
adc
fcmovu
jp
xor
loopne
ins
cmp
js
mov
push
js
scas
cmp
adc
loopne
push
leave
cmp
cmp
xor
leave
mov
std
jno
push
dec
inc
movs
call
sub
(bad)
push
in
outs
and
cmp
inc
dec
push
cmp
jecxz
retf
and
xchg
push
movzx
mov
fild
mov
jo
sub
sar
js
adc
fs
pop
mov
add
std
rcr
aad
scas
xchg
addr16
or
bound
mov
outs
add
aad
sub
mov
adc
jne
cmc
sbb
or
mov
out
sbb
pusha
adc
mov
push
out
shr
mov
xchg
aas
jo
loopne
sub
sbb
ret
mov
cmp
lea
jmp
mov
jbe
push
adc
fs
jg
adc
call
cmc
pop
movs
in
push
adc
push
push
inc
mov
xchg
in
sbb
dec
inc
ret
dec
sysexit
jmp
shr
pop
mov
movs
cmp
mov
jecxz
mov
xor
and
iret
pop
xchg
xlat
or
lods
mov
mov
cld
into
movs
int
out
xrelease
mov
adc
cmps
cmps
sbb
inc
add
xchg
push
cmps
push
sub
mov
xchg
test
sbb
xor
sub
add
jae
add
and
ret
jns
xchg
sbb
mov
and
stos
and
mov
adc
popf
jp
dec
and
pop
jno
jp
loope
in
dec
ins
arpl
daa
int3
mov
test
pop
xchg
mov
and
push
mov
sub
pushf
cs
cmp
or
pushf
je
xchg
rcl
rcr
adc
in
outs
adc
push
aam
ins
mov
dec
add
sub
jnp
mov
and
xor
cmps
imul
cmps
in
mov
cmp
or
sub
test
in
jns
fisttp
in
mov
pop
call
mov
(bad)
fisubr
sub
std
jecxz
popf
pop
mov
jle
sbb
cmp
adc
push
fmul
icebp
loop
(bad)
cli
xor
add
xchg
das
adc
inc
cld
gs
sahf
push
fdiv
std
dec
jge
outs
loopne
ja
jmp
fstp
inc
test
sbb
cmp
in
mov
mov
out
mov
add
das
rcl
pop
jae
sar
in
bound
cmp
xchg
pop
lahf
xor
outs
cmp
loop
aas
stc
jns
xchg
xchg
sub
daa
repz
ror
mov
ins
sub
xor
jne
test
push
jnp
mov
je
or
pop
cs
iret
sbb
fisttp
or
mov
or
jne
test
(bad)
cmp
jle
lods
les
clc
(bad)
hlt
pop
adc
sbb
push
scas
lahf
xchg
jb
inc
jl
mov
mov
jne
sub
fs
dec
adc
mov
sbb
mov
sahf
pop
cmp
or
mov
push
pcmpeqw
push
sbb
ins
cld
cmc
pop
dec
jnp
inc
iret
in
adc
imul
ins
xchg
mov
push
fs
test
arpl
cmp
popa
pop
sbb
adc
or
sar
clc
dec
into
fistp
xchg
pop
int3
nop
cmp
jmp
jp
pop
mov
das
nop
aaa
out
loopne
xchg
or
retf
cmc
cmp
pusha
(bad)
js
mov
fist
xor
cmp
inc
cs
xchg
gs
lahf
jae
cmps
jge
les
seto
or
pop
adc
xchg
iret
sub
call
pop
cmc
inc
hlt
cmps
xchg
in
or
jns
sbb
mov
xor
rdtsc
(bad)
mov
cdq
and
xchg
jb
cmp
push
and
call
cmp
sbb
lock
in
mov
dec
addr16
jge
cli
stos
mov
push
cmp
pop
sbb
in
dec
inc
pop
cmp
cmp
xor
(bad)
push
mov
add
and
mov
jl
ror
fs
mov
sub
jo
xchg
mov
test
jae
popa
push
cmp
xlat
xor
mov
pop
or
jmp
pushf
mov
dec
cmp
xchg
fucomp
loopne
jge
(bad)
adc
adc
leave
sub
jp
loope
pop
lahf
sbb
jecxz
mov
xor
dec
ret
inc
jecxz
hlt
jmp
cmp
fidiv
or
pop
data16
fcom
and
(bad)
bound
iret
fdivr
xchg
push
jg
pop
jge
jmp
lea
sahf
nop
cmp
push
mov
cli
rcl
aaa
jns
add
rcl
jbe
rcl
loope
pop
out
mov
sub
jp
adc
xchg
jle
cmp
xchg
scas
pusha
stc
jne
and
xor
mov
cmp
mov
mov
cli
enter
nop
mov
pop
jne
jno
sub
adc
or
test
mov
cs
repnz
sub
push
mov
cmps
scas
mov
addr16
nop
xor
(bad)
in
inc
sub
scas
iret
lock
xchg
mov
shr
mov
mov
retf
in
in
inc
sub
or
in
imul
and
jmp
mov
sbb
imul
push
and
nop
call
std
adc
sbb
in
test
je
xor
lock
sub
data16
in
fs
mov
dec
cmp
pushf
out
mov
iret
cmc
push
ja
lea
mov
jmp
mov
addr16
mov
mov
stc
xchg
aam
mov
sub
(bad)
xchg
mov
in
jne
repz
cmp
sub
cmc
cmp
xchg
cwde
push
inc
jmp
push
test
xchg
cmps
xor
dec
outs
push
(bad)
pop
in
pop
jnp
cmps
ds
cmp
push
mov
adc
mov
and
mov
std
cli
xor
jle
div
ret
lods
add
jp
hlt
call
in
neg
sbb
pop
adc
test
out
out
push
xor
shl
mov
mov
or
push
inc
cmps
in
loope
dec
mov
xor
aam
mov
dec
jle
mov
popf
scas
dec
cmp
(bad)
lods
cmp
cld
mov
and
pushf
adc
fdivr
add
push
mov
xchg
sub
sub
and
stos
out
stos
lds
ret
ret
outs
neg
sbb
inc
adc
push
mov
shr
adc
jg
movs
cmp
xchg
popa
mov
sbb
pop
in
int3
push
and
sub
ror
adc
mov
(bad)
in
movs
scas
iret
test
xchg
inc
js
mov
call
rcl
js
cwde
call
pop
jge
push
jecxz
mul
aad
and
mov
mov
mov
in
add
fcomp
pop
push
adc
inc
(bad)
jmp
add
xor
test
sub
test
mov
sub
xlat
call
rcr
adc
adc
les
push
mov
daa
cmp
sub
popa
mov
jae
xchg
sbb
lahf
jmp
pop
clc
dec
shl
push
into
pop
scas
xor
and
nop
jl
cmp
cmp
pop
xchg
sub
push
iret
or
push
dec
jle
out
fdiv
mov
sub
(bad)
pop
jp
lds
sub
and
mov
aas
cmps
shl
ret
hlt
adc
ins
stos
pop
xchg
dec
sub
push
(bad)
(bad)
aad
(bad)
jp
es
add
mov
adc
cdq
out
sbb
aam
test
repz
dec
lahf
js
pop
outs
gs
iret
and
ins
jl
adc
mov
jo
stc
jmp
jmp
arpl
test
sbb
dec
hlt
mov
ss
mov
xchg
jmp
jmp
xchg
mov
ficom
cmp
cmp
push
sar
pop
xchg
xchg
jae
sar
mov
aad
mov
loop
in
pop
imul
hlt
push
lock
retf
stos
movs
dec
repnz
jmp
(bad)
cld
outs
and
inc
repz
cwde
adc
pop
adc
sbb
lods
popa
scas
jb
mov
sahf
(bad)
data16
xchg
mov
ins
sbb
add
dec
jno
pop
adc
pop
dec
stc
jg
cmp
pop
ss
retf
dec
lods
sbb
cmp
mov
xor
fs
fadd
jmp
inc
push
(bad)
pop
nop
mov
xor
pop
sahf
imul
jle
xchg
pop
jnp
adc
lods
push
sbb
push
push
mov
mov
in
mov
std
push
loopne
hlt
push
pop
push
rcl
xlat
loope
rcl
jle
ins
or
and
mov
jp
or
imul
push
ins
cmp
test
and
std
jae
sbb
and
add
and
inc
or
push
xchg
xor
lds
loope
popa
push
cs
pop
jae
rcr
retf
push
ins
xchg
gs
sub
nop
pop
das
mov
dec
aam
mov
mov
and
or
pop
dec
xor
out
(bad)
jns
cwde
hlt
arpl
jno
or
sbb
pushf
sub
jne
add
inc
pushf
push
fs
push
adc
aas
cmp
xchg
cli
adc
imul
imul
das
and
mov
cmp
push
push
cmps
push
jae
cmp
js
xor
sbb
ret
movs
pop
dec
adc
xlat
and
test
mov
out
les
or
je
pop
pop
inc
dec
jns
push
idiv
enter
lods
mov
push
repz
jl
xchg
mov
pop
repnz
push
hlt
mov
sub
rcr
sub
das
in
std
jno
inc
ret
lods
in
mov
imul
(bad)
ja
and
and
add
or
mov
rcr
mov
push
mov
addr16
push
rcl
pop
lea
push
xor
mov
je
pop
or
or
sub
mov
mov
jp
xor
out
aaa
mov
jne
xchg
out
adc
and
pop
mov
ins
xor
mov
fwait
outs
(bad)
ja
lea
inc
adc
scas
inc
adc
xor
stos
jns
frstor
jp
loopne
add
cs
xchg
pop
aam
and
lods
and
push
out
or
sti
das
push
jle
mov
push
cdq
xor
pop
in
cmp
xchg
fnstenv
xchg
xor
rcr
adc
fnstcw
xchg
js
fist
test
mov
pop
mov
mov
dec
arpl
xor
xlat
sub
dec
inc
mov
cmp
rcr
xchg
mov
xor
imul
xchg
loope
cwde
inc
es
pop
xchg
push
jg
call
xchg
cmps
dec
push
cmp
jne
xchg
add
mov
cld
fmul
out
pop
out
cmps
idiv
mov
enter
es
mov
(bad)
out
push
aam
in
mov
xchg
push
jmp
call
sub
repnz
inc
out
push
je
mov
jne
cs
mov
add
add
mov
hlt
js
and
cmp
pushf
mov
push
adc
aad
cmp
push
hlt
loopne
div
mov
cld
jnp
in
push
mov
daa
int
js
outs
pop
xor
nop
ficom
add
dec
cwde
dec
das
dec
gs
stos
cmp
lea
xchg
gs
xchg
loope
jmp
or
imul
lods
xor
repz
jo
sub
hlt
mov
push
retf
enter
pop
pushf
pop
dec
cmps
and
mov
or
(bad)
out
repnz
mov
pop
into
jg
mov
sub
leave
mov
div
mov
or
cmc
add
sub
mov
nop
cmp
movs
out
pop
or
jl
cmp
(bad)
push
test
push
dec
pop
inc
or
je
icebp
jns
inc
fcomp
dec
xchg
dec
js
mov
xchg
in
imul
xor
xchg
out
mov
mov
push
repz
daa
jmp
pop
out
out
es
mov
gs
les
in
pop
adc
inc
sub
pop
fisub
xchg
je
mov
shl
jns
xchg
dec
arpl
out
into
aad
test
ja
addr16
es
arpl
inc
aam
repz
adc
xor
add
cmc
jp
int
jg
arpl
xchg
xchg
inc
loopne
pop
or
test
pop
test
pop
jle
addr16
push
imul
push
cmp
outs
(bad)
cmp
push
or
pop
es
xchg
inc
popf
mov
cmc
mul
lds
adc
arpl
int3
iret
fcmovne
sbb
jl
xchg
ret
xchg
xor
inc
xchg
push
jmp
jmp
inc
enter
push
idiv
and
leave
call
pop
in
xor
xchg
xchg
or
and
cli
jmp
xchg
dec
in
(bad)
xlat
imul
xor
dec
cld
test
mov
test
jmp
inc
repnz
cld
xchg
jle
mov
cmp
stc
xchg
xlat
and
xor
push
inc
test
xlat
push
test
xchg
cmc
mov
jns
jl
ficomp
mov
out
pusha
outs
jmp
xor
stc
ins
lahf
aas
les
jge
or
sti
loopne
and
jnp
stos
dec
shl
lods
inc
fstp
jl
mov
call
inc
sar
scas
jl
mov
cmps
(bad)
pusha
cmc
or
mov
push
push
mov
cmp
out
adc
adc
mov
mov
cmp
(bad)
lds
cmp
ds
push
push
es
enter
xchg
pop
jnp
sbb
(bad)
icebp
lds
out
retf
js
cwde
xor
pop
fcmovnb
pop
pop
lods
jle
in
jl
adc
(bad)
xlat
je
mov
mov
dec
movs
mov
or
cmp
lods
fstp
(bad)
push
jmp
jl
jle
jb
sub
out
add
push
jl
or
mov
sar
lods
rol
mov
imul
or
les
mov
push
loope
gs
bnd
loopne
or
outs
cmp
jbe
jl
(bad)
xor
out
xor
pop
mov
mov
xchg
jae
test
dec
dec
mov
imul
xchg
xchg
dec
push
or
sub
cmps
daa
jl
mov
fadd
gs
inc
jl
jb
mov
jl
imul
pusha
scas
or
test
xchg
in
jl
jnp
sbb
xchg
clc
jl
push
scas
pop
add
or
pop
push
mov
dec
sbb
(bad)
pop
push
inc
jl
(bad)
push
sbb
mov
jl
in
cmp
popa
sbb
cmp
jl
das
pop
sbb
jl
cmc
int
xor
rep
out
sti
shr
in
mov
ja
jl
lock
xor
inc
or
movs
sbb
aas
xchg
or
arpl
jl
jp
xchg
fwait
dec
loopne
cdq
lods
xchg
dec
mov
jno
mov
ds
dec
ss
cmp
xchg
repnz
mov
ret
fdiv
mov
in
mov
push
xor
jl
dec
mov
lds
repz
mov
sub
jo
push
inc
out
jnp
neg
sub
sub
inc
cmp
add
ins
out
cs
inc
inc
icebp
in
pop
jl
and
cmp
outs
push
pop
iret
retf
or
rcr
call
jl
popa
addr16
mov
inc
popf
jl
mov
(bad)
fimul
in
xchg
call
jl
mov
add
out
xchg
cwde
jl
loop
sub
mov
ins
and
mov
add
movs
xor
mov
call
in
icebp
(bad)
pusha
pop
test
sub
jo
gs
and
out
push
jl
mov
call
jge
sbb
nop
arpl
cmps
push
push
lahf
mov
or
adc
jl
or
mov
pop
adc
cld
push
sti
xchg
jl
loope
and
inc
dec
in
jns
add
retf
in
sub
jp
inc
pop
out
add
loope
sahf
adc
xor
stc
repz
cmp
xor
(bad)
jl
repz
cdq
pop
jmp
jnp
xchg
mov
xor
mov
out
shr
sahf
test
sar
add
iret
cld
cwde
jecxz
xchg
xchg
mov
fwait
pop
js
hlt
mov
xchg
sbb
aas
sub
xchg
std
outs
xor
out
adc
jmp
push
dec
stc
or
push
aaa
adc
mov
jbe
fist
mov
jo
or
and
daa
sbb
sub
mov
or
sub
inc
xor
mov
inc
and
sub
pop
inc
les
sahf
ins
xor
cdq
mov
test
les
fidivr
push
mov
mov
je
loope
cmp
push
and
push
push
and
mov
lock
mov
imul
cmp
stc
cmp
es
pusha
jae
and
(bad)
sub
jp
js
stos
js
in
fcom
arpl
fdivr
test
xor
out
push
xchg
xor
xchg
sub
xor
daa
fwait
pop
test
cmp
in
les
idiv
and
lods
mov
ficom
adc
pushf
mov
shl
mul
inc
sub
daa
into
test
int3
stos
fs
dec
cmp
sbb
daa
gs
pop
inc
cmp
mov
xlat
lds
out
jle
xor
xchg
mov
mov
in
cmp
loopne
in
int
pushf
stc
add
in
dec
test
inc
mov
ret
out
pop
mov
add
ds
inc
sub
inc
mov
jno
sub
push
into
dec
mov
test
stos
cli
ins
xchg
sub
pop
jmp
(bad)
sub
outs
js
test
add
sub
cmp
jg
sub
push
cmps
mov
cs
jmp
push
nop
inc
and
or
mov
ja
arpl
iret
jb
or
sbb
push
leave
(bad)
stc
jnp
adc
scas
sub
icebp
les
mov
pop
pop
adc
cli
cld
fist
fst
aas
(bad)
or
dec
cld
cs
mov
xchg
pop
cdq
jmp
ins
cmps
mov
cmps
xor
jns
cld
mov
jmp
retf
in
sub
cwde
mov
push
mov
cmps
add
jns
(bad)
fnstsw
enter
add
adc
jb
mov
loop
mov
jne
pop
stos
ja
jne
xchg
cmc
das
add
bound
pop
or
dec
adc
add
dec
loopne
shl
shr
mov
sub
push
dec
xor
(bad)
out
and
dec
out
ss
mov
jge
xchg
movs
push
xor
adc
cmp
icebp
adc
rcr
out
pusha
cmps
cmps
retf
xchg
jne
xchg
movs
test
or
xchg
icebp
and
jp
mov
sub
inc
mov
sub
(bad)
out
loop
add
sti
pop
cmp
lods
lock
test
out
xchg
mov
arpl
sub
retf
mov
push
push
test
test
adc
and
or
xor
jne
rcr
dec
daa
movs
sbb
cmp
push
fs
push
xlat
fdivr
data16
ret
hlt
jb
fdiv
cmp
add
das
inc
push
addr16
sti
fild
(bad)
in
xor
add
fsubr
add
push
sub
lahf
push
ins
mov
push
jns
shl
xor
dec
and
in
cmps
(bad)
(bad)
jne
jmp
dec
push
hlt
pushf
mov
cmc
call
lds
out
add
ins
rcr
xchg
test
in
in
imul
mov
inc
pop
call
jle
and
sbb
xor
sub
(bad)
rcr
mov
sub
adc
pop
dec
and
into
popa
mov
(bad)
fbld
cmps
push
push
shr
dec
loope
inc
adc
dec
das
inc
and
adc
add
push
push
xchg
jmp
xor
sbb
jg
outs
xchg
mov
pusha
add
std
push
or
xor
or
xor
mov
jmp
js
mov
test
js
popa
movs
xor
push
mov
sbb
mov
adc
fwait
pop
add
mov
test
cmc
xchg
pop
push
aad
cli
jmp
push
or
vpaddsb
add
clc
cdq
pop
(bad)
mov
jo
rcl
pop
push
daa
data16
les
xor
add
cwde
cmp
inc
cmp
mov
stos
add
push
jbe
jo
ss
fwait
mov
or
push
or
hlt
pop
std
add
mov
pop
popa
stos
daa
push
xchg
push
in
xor
aas
or
jmp
rcl
jnp
pop
repz
adc
and
mov
jmp
outs
cld
cmp
arpl
rol
mov
or
xchg
jmp
aaa
enter
dec
sti
jo
sub
push
mov
ret
or
stos
imul
mov
bound
cmps
and
adc
cld
cmp
push
push
sbb
int
fcomip
les
jmp
jle
xor
mov
adc
sub
sub
add
jge
dec
sbb
(bad)
(bad)
mov
xchg
sbb
frstor
mov
and
cmp
fiadd
cwde
(bad)
jp
mov
cmp
sub
call
call
movs
dec
inc
(bad)
fistp
sub
sbb
mov
pop
cmp
mov
sub
jmp
mov
loopne
sub
mov
push
(bad)
pop
push
jg
or
adc
pusha
loop
retf
cli
cli
xchg
mov
test
das
cmps
push
cmc
std
xor
dec
add
(bad)
fsubr
sub
mov
mov
xor
ret
adc
adc
mov
xchg
test
adc
rcl
ret
xor
jg
imul
cmp
cmc
xchg
mov
push
sbb
rcl
push
xchg
call
js
xchg
sub
and
cmp
or
xchg
test
daa
sbb
push
xchg
cmc
inc
jle
push
aam
cmps
nop
dec
cmc
mov
clc
test
cdq
inc
add
fild
xchg
and
dec
xchg
push
iret
xchg
push
and
jns
push
shl
das
mov
and
shl
mov
sub
in
mov
stos
rcr
pop
or
mov
je
push
mov
rol
mov
jne
in
hlt
sbb
mov
add
(bad)
push
icebp
fs
jb
lds
enter
adc
xlat
cmp
jmp
mov
dec
lods
xchg
sbb
xchg
je
xchg
sub
and
sbb
cmc
lahf
icebp
ret
jl
jns
add
lahf
cs
mov
xchg
pop
mov
xchg
push
scas
sub
mov
jmp
ret
inc
mov
and
xor
cwde
stos
and
popf
hlt
andnps
push
rcl
ror
shl
adc
pop
cmp
or
int3
repz
daa
xchg
into
cmps
cmp
mov
or
push
or
retf
sub
and
das
test
pop
cmp
iret
sbb
in
xchg
or
dec
imul
add
mov
pop
outs
pop
pop
xor
fst
pop
ins
(bad)
xlat
ja
jae
mov
pop
add
dec
cmc
cmc
out
arpl
imul
adc
iret
xchg
mov
ret
sbb
outs
ss
pop
(bad)
ja
mul
jecxz
leave
ficom
es
imul
addr16
mov
or
cmp
cmp
mov
js
cli
adc
repz
cmp
mov
shr
sbb
sbb
daa
ret
mov
sar
cmp
pop
mov
vphsubw
mov
inc
jecxz
push
cmp
(bad)
outs
pop
sahf
out
xor
mov
sbb
call
adc
out
retf
mov
inc
sub
stc
push
mov
lds
add
je
ret
sbb
push
sub
sbb
in
int
into
aas
fcomip
mov
add
js
int3
adc
push
mov
es
sar
and
rcl
push
adc
(bad)
aaa
cmp
jbe
add
ss
repz
cmp
nop
aas
add
push
adc
shl
aad
rol
adc
dec
xor
cmps
int3
pusha
xchg
sub
imul
out
(bad)
ja
adc
add
xchg
jge
retf
out
test
cmp
xchg
in
mov
test
sub
(bad)
(bad)
out
pop
jmp
outs
sub
and
call
jmp
jmp
sbb
sub
sub
mov
(bad)
sti
aaa
or
js
daa
ret
in
aad
ficomp
rcr
mov
ret
inc
addr16
mov
iret
dec
dec
push
rol
retf
pusha
cld
add
lds
fwait
repz
xchg
es
test
mov
or
xchg
xchg
imul
sbb
sar
xor
loope
adc
push
aam
xchg
ret
dec
sbb
or
push
clc
daa
xrelease
mov
push
xchg
mov
mov
ret
sti
jp
pop
shl
inc
in
ins
popf
out
inc
mov
dec
dec
nop
mov
ss
dec
push
inc
lahf
jmp
or
aam
lods
vpmacssww
test
cli
sub
mov
cmp
or
(bad)
call
mov
xor
push
clc
int
imul
dec
imul
or
pop
cmp
sar
int
push
sub
fs
mov
loopne
fadd
pop
sar
repz
mov
fisttp
mov
fmul
je
xchg
jmp
sti
push
sbb
scas
jo
inc
enter
xchg
repnz
xchg
mov
jnp
sub
mov
mov
and
or
dec
mov
cmp
cmp
cmp
jp
sbb
mov
jmp
xor
lea
xchg
jle
jecxz
mov
daa
sub
and
int3
ss
mov
cmp
and
(bad)
stos
pushf
cmc
cli
or
stc
jmp
mov
pop
sbb
xor
fldcw
dec
addr16
mov
xchg
adc
dec
mov
lds
fisttp
mov
add
fisttp
mov
push
(bad)
das
push
fadd
sub
mov
mov
pop
out
lock
sub
xchg
and
dec
sbb
test
mov
pop
inc
popa
int
add
jne
pop
cmps
test
jg
dec
add
or
push
cs
inc
mov
lds
xchg
popa
test
jnp
mov
repz
retf
js
popa
lds
lods
xlat
sbb
mov
dec
mov
inc
xor
enter
sbb
and
test
inc
enter
mov
mov
pop
pushf
daa
in
(bad)
adc
in
cmp
mov
data16
ror
jp
sahf
xchg
test
mov
test
adc
xchg
data16
in
sub
aas
(bad)
fdiv
jne
xchg
jb
pop
push
fadd
adc
cwde
xchg
cs
mov
pop
rcr
sub
sub
fmulp
or
frndint
enter
and
add
jae
sbb
dec
mov
iret
or
jmp
xor
xchg
(bad)
fst
and
or
xor
add
pushf
fnsave
sbb
push
mov
or
inc
xchg
stos
xor
and
mov
xchg
xchg
nop
aad
jg
bnd
int
gs
mov
and
or
call
and
xchg
(bad)
mov
jbe
push
mov
lods
jo
or
mov
div
mov
cmp
fdiv
push
out
pop
push
push
call
mov
add
mov
push
xchg
pusha
cs
popa
push
aam
lock
cdq
push
jns
in
enter
xchg
movs
and
and
sub
clc
je
jmp
pop
scas
stos
xor
test
scas
jbe
push
mov
jno
outs
sub
mov
out
xchg
cmp
sbb
push
je
inc
clc
push
cli
rcr
adc
pop
mov
mov
mov
push
push
adc
jae
xchg
dec
sub
scas
xchg
push
pushf
test
jmp
xchg
popf
sbb
and
xor
mov
lahf
(bad)
push
shl
pop
fs
sub
jns
aam
mov
push
xor
push
ret
ja
lock
mov
sub
sti
mov
push
dec
push
jo
pop
js
xlat
call
outs
icebp
pusha
shl
(bad)
in
and
sub
cwde
and
xor
in
cmp
cmps
pop
sbb
ins
push
imul
pop
xchg
adc
test
cmp
mov
ja
xchg
in
lods
les
adc
ror
sbb
call
js
jp
out
sar
push
mov
lock
xchg
dec
outs
jns
nop
sar
leave
movs
dec
ror
shl
adc
fstp
push
(bad)
loop
mov
pusha
mov
fldlg2
adc
ja
dec
inc
xchg
adc
pinsrw
adc
fild
cmc
mov
xchg
shl
sub
add
test
aas
xchg
test
mov
xlat
repnz
lock
adc
mov
push
mov
mov
sub
dec
pushf
cli
sahf
js
cwde
mov
test
sbb
add
and
popf
scas
mov
(bad)
mov
pop
in
aam
mov
in
sar
dec
push
pop
repz
mov
cmc
les
sub
sbb
mov
fild
mov
push
clc
mov
aad
push
sub
push
sbb
xchg
popa
xchg
push
rcr
in
push
dec
bnd
pop
adc
xchg
xor
xor
rcl
enter
lock
cmp
sbb
jp
push
jmp
cmp
mov
mov
out
sbb
leave
or
or
xchg
inc
pop
mov
dec
repz
xchg
push
push
mov
scas
in
out
dec
data16
(bad)
scas
jne
repnz
in
cmp
arpl
cmp
push
cmp
cmp
pop
ret
pop
push
pop
mov
and
out
mov
int
adc
std
pushf
retf
push
inc
aam
xchg
jp
pop
add
push
retf
test
push
pop
cmp
or
js
sahf
sbb
test
and
xchg
mov
test
into
in
imul
or
(bad)
sbb
sub
cmps
rcr
cs
xchg
mov
js
test
push
inc
push
shl
call
out
imul
dec
sub
rcr
sbb
jl
xor
sub
add
rep
xor
adc
cli
inc
cmps
sbb
movs
movs
cmp
jnp
pusha
rol
mov
dec
sub
sub
push
sbb
mov
xchg
and
ins
xor
stos
cld
mov
mov
push
mov
mov
xchg
data16
and
or
xchg
jge
call
pop
cmp
pushf
sub
dec
fistp
sub
or
sti
outs
cli
(bad)
addr16
push
ja
clc
mov
in
xchg
cmp
(bad)
and
mov
xor
pop
sub
sti
mov
mov
les
push
jbe
lods
lea
adc
xor
sub
mov
inc
push
sub
sbb
cmp
sbb
mov
mov
and
lods
sbb
in
mov
ins
cs
push
ja
sub
cld
dec
xlat
inc
fadd
leave
lods
sbb
push
adc
dec
imul
push
sub
test
jbe
and
fst
mov
jno
xchg
call
jnp
adc
adc
rcl
dec
test
lods
ret
push
jae
xchg
les
xchg
jmp
dec
aad
jge
mov
sbb
push
aaa
dec
cwde
mov
add
sahf
test
push
jae
push
rcl
ror
test
cmps
inc
test
lea
mov
xor
hlt
inc
out
rcr
mov
leave
and
cdq
cmp
mov
and
sbb
test
adc
push
sub
je
cmp
pop
imul
loop
loopne
jb
inc
xor
cmp
icebp
rol
cs
jo
movs
pop
pop
fwait
sbb
gs
or
push
neg
dec
mov
dec
push
and
les
xchg
jmp
adc
es
mov
imul
imul
sub
(bad)
mov
push
sub
and
xchg
cmps
ror
pop
in
sub
xchg
sub
jl
stc
cs
jmp
and
push
add
mov
repz
dec
stc
inc
push
daa
lods
push
add
mov
lods
mov
jbe
mov
cmp
dec
inc
or
in
add
mov
jmp
and
jp
adc
movs
movs
pop
sbb
and
mov
xchg
jnp
(bad)
fistp
jge
retf
adc
push
lods
adc
sbb
mov
or
loope
push
out
mov
or
cmp
pop
jae
neg
pop
add
or
inc
jg
jmp
(bad)
jg
gs
les
mov
jp
or
mov
sti
push
sbb
or
movs
mov
mov
xchg
sub
jle
and
push
aas
test
test
sbb
jno
aaa
push
dec
mov
xchg
push
fdivr
icebp
je
out
xor
jmp
lods
jo
pop
mov
ins
cld
xor
push
test
scas
icebp
sbb
fist
mov
imul
(bad)
xchg
retf
pop
cld
aas
cld
and
mov
daa
call
dec
test
xor
sar
sbb
xor
pop
adc
test
push
or
in
dec
jmp
push
mov
mov
xor
xchg
cmp
pop
and
movs
push
xchg
popf
jmp
icebp
inc
dec
xchg
push
repz
jle
outs
scas
push
loopne
mov
loope
add
cmp
xor
sti
loope
and
mov
stc
jne
ja
lods
js
(bad)
fstp
out
iret
xchg
pop
jp
mov
and
push
ja
mov
sbb
aam
xchg
xor
cmc
bound
repnz
add
push
(bad)
push
scas
shl
xchg
inc
leave
test
sub
lds
adc
xchg
ror
fdivp
xchg
mov
sub
dec
add
or
shl
fisubr
outs
mov
jg
inc
xchg
in
mov
and
dec
mov
cmps
retf
add
xchg
push
mov
or
mov
jbe
push
cs
loopne
iret
retf
cld
sub
add
fwait
adc
std
xchg
outs
out
add
pop
and
fidiv
jecxz
inc
shr
in
(bad)
sbb
jge
xchg
stos
das
push
clc
movs
xor
add
test
xchg
mov
mov
addr16
rol
sbb
ror
imul
lea
adc
jno
or
push
movs
push
xor
retf
push
xchg
dec
mov
inc
dec
jmp
out
popf
ret
rcr
mov
ja
(bad)
nop
sub
inc
sub
ret
adc
icebp
scas
aas
mov
(bad)
mov
in
xchg
xchg
ret
lock
test
jle
sub
hlt
xchg
mov
call
fdivr
push
xrelease
inc
mov
out
sbb
pop
loop
lods
add
adc
mov
push
pop
xor
xor
push
mov
mul
ins
xchg
adc
xor
mov
xchg
jne
xchg
xchg
leave
cmp
mov
retf
dec
cmp
pop
outs
stos
pop
js
jno
jp
pop
and
mov
adc
aas
ret
xchg
pop
adc
jl
cmps
fisttp
retf
push
push
xchg
sbb
lock
or
dec
movs
or
sbb
in
adc
aas
mov
sbb
xchg
(bad)
cmps
jb
pop
xchg
mov
popf
pop
xchg
cmc
(bad)
outs
dec
xor
je
gs
pop
jnp
imul
test
in
xlat
mov
xchg
xor
dec
inc
out
mov
pop
(bad)
jge
rcl
cmp
fsubr
jae
mov
mov
enter
jge
jp
aaa
pop
dec
daa
stos
std
loopne
jne
lods
sub
dec
pop
jb
add
cdq
mov
or
lds
imul
or
pop
aam
loope
ficomp
(bad)
mov
cwde
xchg
test
dec
int3
test
pop
fwait
xchg
and
xchg
(bad)
xor
adc
xor
jne
mov
mov
test
(bad)
xchg
mov
cmc
jbe
js
xchg
data16
mov
popa
pusha
outs
daa
sti
xchg
imul
repnz
mov
ins
jle
fdiv
inc
cmp
cmc
call
pusha
sub
jb
xchg
test
or
mov
push
xor
outs
sti
push
(bad)
mov
dec
mov
out
arpl
inc
shl
jo
dec
push
fisub
dec
ror
adc
or
sbb
xchg
in
xchg
mov
rcr
or
and
push
mov
mov
int3
addr16
sub
or
cmps
aas
xor
les
mov
loop
cmp
leave
mov
(bad)
ins
iret
push
test
inc
std
ffree
(bad)
sbb
shl
call
lods
mov
add
fisub
sbb
add
sbb
ss
in
inc
xor
sub
jo
sar
rcl
aas
mov
xchg
push
adc
add
loop
cli
loope
cmp
push
enter
cld
retf
test
scas
(bad)
add
inc
pop
cmc
cmps
and
xchg
pushf
ins
mov
in
jne
int3
xchg
xchg
xchg
xor
mov
outs
add
repz
sbb
fsubr
test
push
stos
mov
mov
push
ins
mov
inc
lods
fiadd
or
pop
outs
mov
jecxz
sbb
push
daa
test
mov
mov
dec
icebp
data16
ret
pop
inc
imul
inc
jecxz
cmp
dec
outs
jo
jge
pop
cdq
or
fs
and
adc
dec
adc
cmps
xchg
cmp
inc
scas
jg
inc
retf
test
cmp
cmp
jp
xchg
xchg
test
sub
jecxz
adc
mov
jo
xchg
push
rcr
imul
js
mov
xchg
sub
in
dec
outs
out
and
cmp
mov
ret
and
lea
mov
adc
xor
cld
xchg
xchg
or
retf
jns
xchg
in
adc
mov
mov
and
inc
std
push
xchg
mov
shl
xchg
rol
jne
pushf
cmp
loope
cmp
jp
repz
inc
dec
std
sti
and
sbb
(bad)
push
fcmovb
sahf
out
aad
xchg
push
xor
mov
adc
xor
or
mov
leave
rcr
mov
sub
ja
adc
mov
in
jns
ret
cmp
xchg
loope
pop
xchg
mov
repz
jbe
xchg
inc
xchg
push
push
sub
xchg
ins
ss
cdq
loopne
test
lods
or
add
js
les
push
inc
cmp
leave
xchg
xor
jg
ins
cmp
add
aad
xor
mov
fwait
cmp
dec
xchg
mov
je
or
xor
loopne
(bad)
cli
adc
and
xchg
cdq
inc
aad
lock
clc
out
jp
xor
jns
pop
(bad)
mov
cmp
cmp
add
test
jne
sbb
(bad)
sub
push
push
ror
push
xchg
ins
adc
sbb
pop
push
xchg
repz
cmp
hlt
into
xchg
cmp
inc
fs
out
fsubr
cmp
scas
or
cmp
shr
loop
jns
popf
inc
pop
in
xchg
jo
mov
xchg
ror
pusha
pop
sub
dec
imul
ins
cmp
sub
loopne
mov
pop
jg
shr
adc
mov
jmp
daa
ss
call
popf
inc
fdivrp
xchg
or
xchg
push
arpl
adc
(bad)
jmp
mov
xchg
xor
retf
repnz
mov
jo
icebp
dec
dec
pop
movs
hlt
loope
jns
call
inc
pop
test
lods
or
imul
and
xchg
xchg
sub
sbb
shl
adc
and
mov
sbb
or
xor
xchg
fadd
ss
pop
push
xchg
pop
in
sbb
mov
lods
imul
ins
push
fucomip
pop
xchg
dec
xor
xlat
jb
cld
pop
mov
or
popf
retf
adc
clc
push
in
sbb
push
(bad)
xlat
gs
cmp
test
sbb
xchg
xchg
mov
cmps
jmp
xor
retf
push
pop
mov
mov
icebp
sub
fwait
dec
mov
cmps
pop
into
cmp
leave
mov
rcr
cs
pop
xchg
das
pusha
fild
sub
mov
sbb
sbb
jnp
outs
sti
adc
enter
xchg
call
ret
adc
fisubr
cmp
outs
mov
loope
or
adc
dec
fistp
data16
sub
sub
gs
sbb
adc
xchg
xchg
and
test
and
dec
sbb
loopne
dec
ror
cwde
jp
fsubr
pushf
jmp
inc
repz
lea
push
mov
fld
adc
xchg
cmp
push
scas
pop
addr16
lods
enter
div
test
movs
add
rcl
es
sbb
mov
xchg
call
jbe
cmp
jmp
pop
fbld
adc
sub
mov
fisttp
mov
cmps
out
in
jp
xor
xor
push
mov
shl
jne
les
int
outs
test
cwde
fwait
pop
mov
and
xor
out
sub
push
xchg
outs
push
outs
cmc
mov
stos
ret
pop
(bad)
sub
rol
imul
jge
jbe
fstp
xchg
ror
hlt
sbb
mov
aam
sbb
dec
lds
call
inc
mov
mov
(bad)
xchg
aam
call
inc
mov
movs
popf
mov
inc
cmp
in
adc
jo
push
fisub
cli
in
repz
cmps
in
and
cmc
and
xchg
(bad)
stc
xchg
dec
(bad)
retf
imul
jle
xchg
movs
mov
push
adc
xchg
imul
xchg
mov
push
cdq
pop
test
arpl
in
imul
sub
mov
fs
or
mov
mov
retf
pop
iret
and
fidivr
dec
or
and
mov
aaa
inc
in
adc
adc
aaa
aam
leave
and
cdq
enter
rcl
shr
fxtract
mov
mov
pop
inc
mov
data16
lea
or
adc
push
dec
test
mov
ficomp
xchg
sahf
xchg
dec
push
ins
aam
mov
mov
test
ret
xchg
push
stos
or
inc
ins
loope
arpl
pop
adc
shl
iret
mov
xchg
and
sub
cs
int3
call
jle
outs
out
and
movs
xor
pop
add
sbb
in
xlat
push
push
ds
out
adc
enter
not
or
rol
fld
and
xor
imul
mov
nop
sbb
push
mov
or
and
arpl
mov
out
mov
je
(bad)
and
jmp
rcl
outs
int3
in
aaa
call
xor
cmp
cwde
pop
idiv
xchg
dec
xchg
mov
sub
jae
adc
mov
mov
xor
dec
stos
add
xor
push
pop
test
inc
out
xchg
(bad)
mov
repz
cs
fst
xchg
push
js
xchg
clc
jmp
or
jle
xor
jne
and
sbb
movs
mov
outs
cmc
in
mov
xchg
imul
call
and
arpl
imul
sub
mov
iret
out
add
cs
into
ret
cmp
cmp
pop
pop
adc
jp
lds
add
dec
push
or
ret
and
fisub
test
adc
jg
mov
sbb
out
push
aad
sub
cmps
ins
pushf
push
adc
push
xor
or
aam
and
ins
out
xchg
and
ror
ror
jge
dec
or
cmp
pushf
arpl
xchg
push
adc
sbb
sub
jmp
pop
fnstenv
ss
mov
and
or
mov
test
stos
into
cmp
(bad)
push
data16
leave
cmp
ret
pop
js
bound
mov
aaa
mov
jne
in
xchg
idiv
cli
es
jmp
pop
or
out
cmps
or
(bad)
cmc
and
ret
xor
xchg
inc
mov
jg
mov
or
and
aam
jg
pop
shl
addr16
test
jbe
nop
test
call
add
push
mov
ins
in
inc
cmps
jp
pop
cmp
cli
and
sar
movs
aam
pop
mov
add
js
push
mov
(bad)
fdiv
xchg
mov
or
shl
fwait
jmp
inc
(bad)
vpshuflw
push
inc
xor
retf
xor
adc
repz
xchg
push
icebp
add
jne
enter
and
dec
xor
inc
aas
rcl
mov
xlat
aad
sbb
mov
push
xchg
ins
pop
push
add
and
shr
sahf
fldz
jge
inc
cmp
push
fidiv
pop
cmps
fidivr
mov
push
cwde
mov
push
xchg
adc
mov
rol
into
mov
rcr
dec
mov
xlat
in
dec
in
loopne
jle
jne
call
xchg
xchg
(bad)
out
jp
test
in
mov
adc
das
test
repnz
loopne
adc
call
pop
and
fild
add
mov
mov
je
repz
jmp
mov
dec
cdq
std
fwait
shl
or
bound
adc
hlt
xor
outs
jecxz
mov
add
pushf
out
retf
in
inc
xor
sbb
push
inc
test
sbb
xor
mov
lods
pop
xchg
or
in
pop
sbb
std
fs
out
js
lods
mov
xchg
test
xchg
dec
pop
fisttp
mov
rcl
jg
add
inc
leave
popa
js
xchg
lock
repnz
imul
sbb
jp
push
pushf
cmp
sbb
push
dec
pop
jne
cmps
xchg
sub
jnp
loope
inc
xor
mov
es
stos
pop
jo
movs
dec
inc
out
lock
inc
sbb
push
ret
cli
xchg
pop
call
call
in
mov
mov
mov
mov
inc
retf
sub
sub
inc
sar
ss
sbb
bound
jmp
in
and
xchg
(bad)
adc
lea
push
mov
dec
scas
jp
xchg
mov
push
lods
ins
mov
xchg
pop
xchg
fmul
lds
mov
ror
ds
jge
retf
cli
sbb
scas
aam
cmp
lods
les
inc
es
push
sub
es
imul
ret
jge
icebp
retf
fs
fidivr
test
push
push
test
mov
scas
mov
js
pop
push
and
pop
add
and
arpl
mov
inc
push
mov
hlt
(bad)
ins
pop
hlt
shl
cmps
mov
aad
xchg
xchg
jp
sub
inc
push
and
jns
sub
lods
pusha
sbb
inc
and
les
xchg
mov
pop
mov
imul
ja
pop
fist
xchg
fldenv
xchg
aam
mov
jb
icebp
jb
jmp
pop
xlat
push
adc
xor
jb
cmps
xchg
addr16
cmp
outs
cmc
xor
mov
dec
jo
add
or
lods
int
add
push
adc
jb
movs
aad
mov
out
xchg
hlt
ffree
es
mov
and
pop
jne
fld
clc
inc
push
xor
call
lds
cmp
mov
push
das
ins
std
(bad)
sub
lods
jno
cmps
or
les
add
pop
push
aas
loop
lock
fs
data16
(bad)
jae
mov
jp
sub
push
inc
call
sub
adc
dec
adc
jg
retf
push
xchg
xor
out
rol
adc
cmps
shl
fnstsw
imul
jle
cmp
stos
xchg
ret
pop
pop
mov
and
add
les
call
mov
jmp
imul
push
aas
dec
imul
sbb
push
pop
scas
xchg
adc
mov
lods
xchg
jp
add
cmp
mov
xor
xchg
jb
movs
jg
(bad)
adc
jns
fistp
mov
cmp
push
movs
gs
cdq
jne
cmp
nop
pop
imul
or
cmp
(bad)
mov
ja
movs
into
scas
in
or
xlat
mov
push
dec
repz
pop
xor
imul
cmps
xor
(bad)
cmps
cmp
mov
(bad)
imul
arpl
jmp
retf
and
imul
repz
aam
pop
xchg
xlat
loop
icebp
mov
hlt
add
push
test
push
xor
out
or
and
inc
push
push
xchg
ins
test
loope
xlat
aaa
(bad)
cmp
pop
imul
rcl
sub
(bad)
adc
jp
xlat
sbb
std
je
bound
mov
mov
rcr
test
rcr
xchg
neg
mov
xchg
int
sbb
mov
add
sub
addr16
xchg
jne
aas
push
cwde
mov
sbb
jg
les
xchg
xor
addr16
mov
mov
ficomp
or
xchg
cmp
mov
jne
fwait
inc
cmp
push
movs
xchg
and
pusha
jo
or
ds
fwait
loope
lds
repz
xor
jb
push
push
mov
inc
adc
ss
jmp
pop
adc
shr
adc
lods
or
sub
in
popa
sub
sub
push
pop
cmp
cmp
test
sub
pop
fisub
dec
pop
cli
inc
cmp
in
lods
in
jae
daa
mov
pop
jo
add
jns
in
jg
mov
xchg
push
(bad)
hlt
mov
inc
pop
xor
shr
jl
xor
nop
sbb
sbb
mov
mov
stc
inc
sbb
arpl
push
fild
loopne
js
pop
pop
pop
pop
out
out
imul
xchg
and
js
retf
sub
inc
call
inc
mov
(bad)
jb
lahf
sti
cmc
cmc
push
cmp
cmp
push
test
xlat
sub
fsub
adc
fldenv
sub
adc
pop
(bad)
movs
js
and
mov
push
inc
xlat
gs
daa
jg
add
inc
jecxz
(bad)
add
nop
ds
adc
cld
ss
adc
mov
stos
nop
int3
mov
inc
repnz
movzx
xor
xchg
jno
sub
sbb
movs
fcomi
xchg
test
jl
pusha
xor
loopne
cs
fistp
jg
(bad)
adc
push
sub
out
call
pop
not
iret
sub
lock
adc
pop
fs
xor
xchg
pop
out
xchg
mov
ss
outs
neg
das
or
je
les
imul
sbb
mov
push
jl
adc
aaa
inc
xor
and
pop
and
pop
aad
jno
pop
mov
fnsave
xor
jae
add
sub
mov
sbb
out
test
adc
fucomip
pop
or
gs
jbe
idiv
jb
(bad)
jne
cmp
mov
ins
outs
dec
sub
inc
adc
cmc
leave
mov
(bad)
cmc
aam
out
call
ficomp
call
icebp
add
clc
test
outs
xchg
aas
pop
daa
cmp
inc
adc
std
sub
cmp
repnz
sbb
and
push
jl
pop
shr
stos
push
xchg
sbb
push
ret
mov
ror
in
ja
and
jae
add
jp
cmc
cmps
xchg
pop
mov
push
daa
mov
dec
xor
out
xchg
cmc
or
mov
mov
push
jno
adc
scas
sbb
and
mov
shl
xor
pop
xor
inc
adc
lds
cmp
jl
test
jmp
(bad)
xor
lea
ins
sar
fs
mov
sbb
jle
sbb
in
out
jae
mov
ss
outs
repnz
ret
lds
call
outs
xchg
aad
(bad)
jge
cmps
mov
out
mov
popf
in
clc
data16
cmp
stos
pop
(bad)
sub
in
xchg
daa
lods
jmp
out
rcl
call
rcr
scas
int
mov
mov
shl
pop
xchg
lods
add
test
pop
ins
jb
sahf
loopne
jns
fisttp
adc
xchg
cli
gs
inc
and
push
leave
fcomi
ja
sar
std
js
xchg
das
jae
enter
mov
clc
mov
mov
pop
inc
add
sub
rcr
shl
std
fcmovne
(bad)
push
xchg
call
mov
or
xchg
cs
js
mov
xchg
enter
and
ret
in
sub
xor
push
xchg
nop
ret
jns
or
inc
sbb
add
fcom
iret
fistp
es
cs
ins
xchg
ret
push
cli
xlat
sub
repz
ficom
and
cmp
repz
sub
gs
test
or
and
jno
in
adc
(bad)
cmc
out
mov
retf
scas
dec
jae
jmp
mov
push
push
cli
ins
xor
add
pop
or
imul
dec
pop
add
jge
push
or
das
dec
push
adc
repz
jmp
and
enter
jle
push
test
xor
and
xchg
call
inc
jbe
cs
addr16
inc
dec
clc
inc
push
fdivr
imul
call
or
xor
and
push
out
fwait
xchg
pop
or
and
(bad)
pop
call
push
or
or
xor
aaa
jp
push
mov
xor
adc
ins
dec
xor
xor
pop
inc
xchg
mov
pop
xchg
push
add
pop
aas
push
movs
cmp
cmps
cwde
punpckhdq
pop
test
push
dec
mov
das
sub
ins
adc
push
mov
jg
jmp
xchg
xor
les
xor
dec
pop
je
pushf
xor
inc
xchg
cmps
xchg
sbb
and
xchg
jp
mov
lods
int3
push
jge
(bad)
mov
and
and
les
mov
jae
div
stc
add
arpl
push
pop
jl
and
retf
xor
loop
jae
xchg
mov
xlat
mov
xor
and
in
pop
pop
das
push
mov
push
sub
fild
aam
and
je
inc
xor
(bad)
or
cmp
in
lea
sbb
cmp
in
stos
jno
ins
pop
les
jbe
stc
or
in
mov
jmp
and
jne
mov
adc
es
add
cmp
sti
dec
and
std
jnp
imul
int3
dec
leave
fsubr
repz
pusha
retf
loopne
xor
sbb
adc
push
dec
lods
add
sbb
sbb
popa
and
imul
push
vmovaps
sbb
adc
pop
dec
jge
adc
and
ins
push
mov
xchg
sbb
dec
sbb
inc
repnz
shr
mov
xchg
test
push
pop
idiv
lock
cmp
sub
inc
mov
shl
mov
and
xor
pop
test
stc
xchg
sub
stos
test
mov
cmps
ror
adc
js
pop
pop
rol
cmp
xchg
data16
enter
(bad)
out
sub
dec
pop
cmp
cld
push
adc
daa
fist
sub
mov
pop
xchg
jl
(bad)
adc
int3
fld
loope
call
lahf
xlat
mov
jmp
std
mov
push
push
(bad)
rcr
mov
xchg
mov
jp
lock
div
mov
and
aad
sti
xchg
push
into
clc
mov
xlat
inc
mov
inc
aam
cmps
jne
and
add
cmp
adc
push
or
out
out
(bad)
clc
pusha
pop
xor
xlat
cmp
call
out
(bad)
in
arpl
jge
push
sar
test
shr
inc
leave
cmps
in
mov
in
or
jge
retf
ret
pop
inc
inc
jns
stos
push
fadd
cs
add
push
test
adc
xchg
xor
push
pavgb
xor
and
rcl
pusha
xor
imul
mov
sbb
add
mov
adc
in
pop
push
inc
mov
clc
mov
frstor
push
xchg
pop
jae
cmp
sub
or
hlt
fidiv
inc
or
xlat
les
or
sbb
jns
(bad)
(bad)
xchg
push
sbb
cmc
adc
stc
xchg
mov
imul
add
inc
(bad)
fmul
mov
mov
and
rol
pop
nop
das
xchg
pop
in
mov
outs
test
leave
jne
ds
xchg
mov
aas
inc
or
fidivr
push
sub
cli
hlt
jae
sub
push
xor
adc
cmps
aaa
xor
arpl
pop
out
sub
daa
lock
sbb
inc
cmps
cld
jns
retf
sahf
cmp
xchg
sti
pop
pop
imul
sbb
sub
ja
push
sbb
xchg
sahf
jne
or
repz
sbb
(bad)
dec
mov
sub
cmp
add
pop
in
sahf
pop
adc
xchg
fwait
loope
push
rol
into
dec
inc
sbb
and
mov
jmp
loope
ins
adc
jae
sub
fist
stos
out
jno
xchg
fs
cmp
pop
out
or
cmp
mov
inc
outs
test
adc
add
sbb
xchg
jl
cli
arpl
cmp
loop
fwait
into
xchg
dec
and
sti
sub
mov
sub
sub
sub
inc
iret
cmc
sub
call
sbb
fistp
in
arpl
(bad)
cld
dec
sahf
imul
or
xchg
ss
cdq
popa
mov
jle
sub
push
xchg
jmp
(bad)
push
cmp
cmp
sub
hlt
loope
pop
pop
xchg
je
ins
pop
cmp
xchg
adc
xor
test
daa
mov
pop
dec
sbb
fldenv
jbe
fiadd
repz
mov
and
xchg
test
mov
mov
popf
cmp
jo
cmp
cmp
mov
pop
adc
sahf
jae
sub
or
pop
int
push
loope
jae
push
icebp
test
out
sbb
mov
jmp
gs
dec
add
lock
stos
imul
test
outs
outs
in
push
call
cdq
je
sbb
dec
and
repnz
xlat
ficom
pop
inc
adc
jns
jns
(bad)
jle
retf
push
and
mov
mov
push
call
dec
and
jbe
in
sub
or
mov
jo
sar
push
inc
retf
push
jecxz
rcr
add
pop
jne
mov
sub
mov
xor
test
int
push
xlat
fidiv
popa
call
sub
mov
mov
jmp
pop
jg
ja
pop
sub
adc
or
out
push
ins
sub
int3
xor
push
xchg
mov
cmp
push
inc
xlat
cwde
out
into
in
push
xor
int
xchg
fstp
push
mov
mov
push
stos
sub
and
sub
in
cdq
xchg
inc
push
rol
dec
ficom
mov
cmc
in
push
and
movs
ret
dec
gs
in
pop
ins
jg
fsub
sbb
push
sub
mov
enter
mov
cld
data16
pushf
icebp
stc
fnstenv
sbb
pop
fistp
dec
push
js
jae
cli
hlt
rcr
mov
cmps
inc
out
cmc
data16
jnp
mov
mov
mov
add
mov
and
push
jg
add
leave
sub
xchg
retf
in
xor
fwait
xchg
sub
test
retf
and
adc
mov
aad
xchg
sub
push
jge
dec
and
shr
div
repnz
adc
mov
leave
pop
adc
xchg
and
push
push
test
in
stos
sub
in
xchg
mov
rcl
outs
xor
push
(bad)
repz
dec
push
pop
dec
daa
fmul
xor
mov
pinsrw
out
jle
pop
shl
test
xor
sbb
push
enter
out
mov
pop
cmp
adc
xchg
xor
xchg
adc
push
idiv
pop
inc
pop
cmps
sbb
cmp
mov
shl
cmp
jl
sbb
in
push
or
in
and
xor
pusha
sbb
xchg
and
clc
adc
fdivrp
mov
xchg
push
dec
and
frstor
(bad)
cli
in
mov
cdq
cli
cli
adc
and
mov
in
dec
ins
adc
mov
int
mov
add
lahf
jge
pusha
cmp
push
call
xchg
fmulp
sub
popa
mov
rcl
xchg
sub
sub
sbb
test
iret
cmp
mov
int
movs
int
mov
ins
stc
je
call
data16
cmps
add
mov
jae
loop
stc
fcomp
fwait
repz
add
mov
cmp
mov
shl
and
jnp
push
mov
call
xchg
iret
xor
fadd
movs
mov
(bad)
stos
loopne
or
cdq
and
div
inc
jnp
xor
out
fsubp
push
pop
pop
(bad)
fs
retf
(bad)
leave
dec
fsub
into
mov
xchg
dec
cwde
mov
xchg
dec
ja
lahf
or
jno
adc
mov
jmp
inc
jg
test
jmp
std
aas
es
jle
cmp
mov
stos
pop
jo
push
test
jg
add
les
and
lds
mov
ds
in
stc
lds
xchg
mov
(bad)
cmp
push
call
pop
xchg
(bad)
jp
dec
or
pop
inc
aas
fstp
sbb
dec
leave
push
pop
loop
cmp
jo
mov
in
(bad)
pop
xchg
popf
test
pop
jmp
div
cmc
jmp
nop
lock
popf
pop
adc
in
jnp
ds
and
xchg
cmc
add
test
or
mov
add
lods
cmp
fldcw
lock
sub
cmp
je
or
js
inc
loope
push
xchg
test
push
iret
nop
ret
(bad)
cmc
mov
dec
cld
aas
stos
jbe
xchg
mov
inc
dec
xor
xchg
sbb
and
iret
les
sub
bsf
pop
lds
push
mov
ror
out
in
in
jg
sbb
push
push
mov
adc
mov
pop
movs
lea
inc
clc
cs
mov
retf
jg
int
fwait
dec
pop
jno
add
mov
add
cmps
jle
(bad)
outs
mov
ret
(bad)
ficomp
cs
and
jne
add
popf
mov
sbb
xchg
push
dec
xchg
and
(bad)
sub
ficomp
(bad)
fwait
lods
or
and
jbe
ret
mov
imul
xchg
test
push
idiv
and
pop
and
jo
inc
jecxz
or
add
movs
add
mov
mov
jnp
or
adc
xchg
pop
dec
nop
xchg
pop
fiadd
cmc
mov
xor
xchg
js
mov
ja
outs
hlt
push
mov
sub
ret
xchg
repz
cli
mov
xchg
out
jp
retf
lods
jge
jl
sub
mov
pop
pusha
and
pop
and
call
ficomp
popa
xor
ds
sbb
int3
sub
jg
ficomp
nop
test
jne
or
test
sahf
fist
cmc
hlt
push
cwde
push
sub
aaa
sti
push
movs
mov
pushf
push
add
adc
enter
jle
dec
retf
push
and
fidiv
int
retf
hlt
or
xor
adc
std
out
ret
sub
inc
and
fcmovu
arpl
or
lods
bound
aaa
mov
pop
ret
cmp
outs
out
pop
jle
sub
popf
mov
jns
and
hlt
test
shl
js
sbb
hlt
xor
add
imul
and
(bad)
dec
loop
daa
cdq
sahf
sti
ins
xchg
lock
fs
loope
mov
mov
int3
dec
fsubr
and
ins
sbb
out
jns
hlt
aam
fucomp
scas
mov
popf
pop
cmps
push
push
das
dec
cmps
push
push
outs
clc
mov
adc
or
popa
xor
and
nop
outs
jae
out
pusha
add
mov
mul
int
cmp
sbb
dec
push
mov
inc
popa
into
push
sbb
fidivr
loop
xor
cmp
xchg
fld
dec
pop
inc
xchg
sbb
mov
jmp
sbb
sbb
int3
ret
imul
push
(bad)
jmp
sub
pop
(bad)
test
dec
xchg
int
add
cmp
xor
cmp
push
pop
mov
jp
mov
xchg
(bad)
(bad)
add
push
mov
fs
movs
inc
in
xlat
jmp
in
xchg
push
(bad)
shl
or
out
or
mov
mov
gs
xor
cmc
hlt
sbb
add
imul
mov
mov
sbb
dec
repz
xor
and
xchg
push
mov
push
mov
test
xchg
rcr
retf
cmp
call
int
or
or
xchg
mov
daa
jle
lods
mov
xchg
mov
mov
jbe
int3
xchg
sbb
ja
outs
xchg
enter
adc
into
xor
cmp
cmps
hlt
jo
imul
enter
(bad)
push
lock
ror
pop
shl
inc
nop
xchg
mov
xor
ins
jmp
push
je
adc
add
out
adc
cmps
pop
sbb
pop
mov
push
mov
popf
pop
dec
xor
mov
in
push
cli
sbb
imul
cmp
out
cs
ret
sub
sub
call
cmp
mov
retf
cmovge
addr16
jns
mov
cmc
rol
push
push
sbb
add
ror
outs
dec
icebp
jl
add
repnz
outs
mov
jne
xchg
mov
jo
out
data16
in
pusha
push
dec
(bad)
icebp
sbb
push
imul
or
push
push
(bad)
out
sbb
xchg
iret
cmps
mov
jmp
ret
xchg
in
push
jmp
pop
xchg
pop
mov
or
jae
(bad)
stos
dec
loopne
pop
sar
je
enter
inc
xchg
dec
aam
jmp
or
push
leave
je
push
pop
mov
stos
adc
pop
push
movs
retf
shr
sti
leave
jge
pop
add
adc
dec
jae
push
pop
fwait
and
cmp
adc
sub
push
es
es
cmp
or
xchg
loopne
rol
ret
ins
mov
add
idiv
out
add
sar
dec
xchg
jge
adc
dec
mov
jae
data16
or
(bad)
ins
jp
mov
sbb
loope
call
aaa
mov
jns
cld
je
(bad)
ins
xchg
arpl
dec
ins
fmul
push
xchg
movs
aad
imul
pop
pop
daa
pop
ret
cmp
and
xchg
(bad)
icebp
neg
stos
rcr
lahf
xor
jp
sbb
sahf
test
cmp
je
in
mov
aam
xchg
cmp
jns
not
sbb
xchg
mov
jg
xchg
push
addr16
nop
adc
jp
movs
xchg
ret
xor
push
push
leave
push
ins
jo
xchg
mov
sub
in
push
push
test
das
mov
mov
es
icebp
repz
lahf
fdiv
jecxz
jge
dec
or
push
bound
in
jns
jae
jo
push
std
int
adc
xor
test
xchg
icebp
mov
(bad)
rol
rcr
data16
xor
jmp
xor
mov
xchg
dec
shr
repz
dec
mov
pop
pop
jae
loopne
mov
sbb
test
or
jo
call
(bad)
mov
adc
aad
inc
dec
dec
sbb
js
xchg
data16
inc
std
out
(bad)
or
pop
lods
ins
push
mov
into
movs
xchg
cs
popa
test
mov
xor
cli
sub
ror
mov
mov
lods
stos
xor
cmc
push
int
mov
js
or
das
loopne
xor
repz
cli
or
cmp
adc
pop
jp
push
xchg
inc
test
and
popf
mov
or
sbb
push
div
ja
(bad)
(bad)
and
add
sub
pop
es
(bad)
loopne
inc
call
xlat
inc
mov
and
jle
push
scas
je
test
push
out
sahf
cmc
shl
scas
das
(bad)
add
sub
pop
jle
sub
cmp
sub
fst
mov
cli
jge
xchg
jg
or
push
jg
(bad)
adc
jp
lods
cdq
pop
adc
or
inc
dec
std
dec
pop
fiadd
out
out
jg
inc
cmp
inc
loope
mov
adc
dec
or
inc
jno
pop
inc
cmp
sbb
gs
test
sub
mov
in
mov
lahf
loopne
push
in
ins
test
xchg
sub
mov
jne
push
sbb
jnp
(bad)
(bad)
shl
jbe
jae
call
stos
scas
pop
xor
stos
and
std
movs
adc
sbb
mov
addr16
push
popf
add
xor
jb
dec
push
pop
sub
and
in
jne
inc
pusha
rcl
jl
(bad)
sti
in
call
in
dec
in
popa
push
adc
jmp
push
xor
mov
(bad)
push
dec
retf
dec
xchg
jbe
sti
sub
arpl
sti
mov
push
sub
(bad)
xchg
sbb
xchg
in
jae
das
sti
repz
ins
sbb
in
xor
and
and
test
cmps
push
aad
cli
xchg
cmp
mov
mov
iret
pop
mov
push
sub
ins
cmp
and
mov
adc
pushf
sub
loope
push
dec
pop
add
fwait
nop
jnp
dec
in
xor
pop
sar
mov
lds
in
add
and
cmc
xor
xchg
and
inc
xor
and
fisubr
push
sti
imul
addr16
mov
xchg
(bad)
hlt
xchg
pop
dec
call
repz
das
xor
push
scas
pop
ss
sub
rol
stos
and
mov
push
fwait
xor
push
mov
pop
adc
mov
js
hlt
or
fidivr
movs
sbb
test
push
mov
jae
jmp
jns
pop
push
cmp
pop
cmps
push
or
or
xor
xchg
jecxz
xchg
sahf
adc
mov
and
iret
dec
dec
pop
repnz
imul
movs
inc
arpl
lods
popf
xor
out
xchg
cs
outs
xor
repnz
cld
popa
dec
fwait
out
push
jo
mov
pop
fisubr
sar
sub
outs
add
pop
and
test
(bad)
test
jo
sub
sbb
mov
in
xchg
dec
adc
and
aam
loop
or
hlt
(bad)
ss
jmp
test
xchg
jecxz
(bad)
mov
leave
pushf
sbb
ins
js
jmp
mov
and
pop
and
ret
int
xchg
pop
jno
add
repz
jne
bound
cmp
add
sbb
test
test
xchg
xor
xchg
retf
mov
pop
test
test
jne
xchg
xchg
mov
xchg
aaa
cdq
sbb
and
mov
xchg
in
sbb
push
test
mov
ror
mov
dec
dec
pushf
mov
sti
lea
push
stos
(bad)
test
push
in
push
stc
pushf
pop
leave
xchg
mov
mov
stos
cmp
cmp
into
mov
mov
(bad)
push
sub
push
fwait
cmp
(bad)
les
pop
mov
pushf
pop
pop
retf
jb
test
cwde
lea
test
lods
test
xchg
in
adc
mov
xchg
pop
jmp
mov
js
cwde
xchg
cli
xchg
xchg
add
sti
pop
jmp
data16
loope
daa
sub
sub
mov
lods
shl
je
aam
mov
jge
inc
inc
adc
scas
sbb
jmp
lods
cmc
sub
adc
and
or
mov
inc
mov
mov
xchg
and
xor
xlat
pop
outs
std
xchg
mov
push
sub
mov
add
adc
outs
sbb
pop
mov
mov
mov
sub
push
fdivr
xor
pop
fst
jmp
inc
jmp
xchg
add
mov
mov
and
jle
jne
cmp
mov
push
adc
es
rcr
ret
adc
in
mov
and
lea
push
fcomp
cmps
and
pop
jnp
and
repnz
lods
lahf
and
mov
inc
jmp
test
adc
mov
jo
mov
dec
jle
sbb
retf
popf
jmp
dec
cmp
sbb
adc
(bad)
mov
dec
and
push
test
push
call
cmp
add
sub
mov
push
xor
xor
in
out
iret
movs
xchg
jmp
jb
and
scas
in
imul
push
inc
sub
xor
and
shr
xchg
rol
mov
jg
xchg
stos
dec
cmp
or
xchg
sbb
inc
pushf
(bad)
(bad)
retf
mov
sub
or
(bad)
out
aam
repz
cmp
mov
mov
sub
sub
mov
popa
and
stc
cmc
sbb
pop
xor
mov
add
rcr
rcr
js
je
jg
lock
cmps
sbb
mov
add
vsqrtss
adc
lock
jmp
dec
push
add
xchg
xchg
and
aam
hlt
xlat
mov
daa
jmp
jno
test
mov
push
xor
push
pop
je
loopne
jp
jno
outs
push
jmp
cs
jp
add
jle
test
cmps
xchg
hlt
inc
out
push
bound
push
sbb
or
mov
jmp
rol
xchg
xchg
cmps
cmps
add
repz
cmp
xchg
out
test
(bad)
inc
leave
ins
dec
popf
sbb
push
pop
ret
cmps
js
cmp
cmp
xchg
fisubr
cmp
sub
das
jno
nop
repnz
ret
dec
jnp
mov
xor
lock
lds
xchg
push
xor
into
jecxz
add
jae
and
push
mov
jmp
or
and
jle
jne
add
or
pop
loopne
hlt
loop
pop
cmp
push
out
nop
retf
in
mov
sar
cmp
loopne
mov
arpl
outs
xor
ret
(bad)
int3
adc
jne
test
std
adc
sbb
xchg
push
inc
test
nop
enter
ret
jmp
mov
pop
js
ret
or
imul
sbb
and
mov
or
and
pop
call
or
mov
test
jbe
xchg
xchg
sbb
sub
aad
xchg
mov
adc
arpl
inc
push
retf
lods
fsub
cmp
adc
dec
pop
adc
push
fst
adc
(bad)
lods
sbb
xchg
pop
out
(bad)
out
or
call
inc
fsubr
in
daa
sub
adc
push
(bad)
jge
dec
jp
ss
pop
lahf
xchg
cmp
sbb
pop
in
pop
xchg
in
es
rcl
sbb
mov
sbb
sbb
std
jns
lahf
mov
cmps
outs
imul
jge
imul
inc
out
into
xchg
sub
test
dec
mov
adc
ins
dec
adc
cmp
lods
inc
xchg
out
xor
hlt
movs
push
imul
mov
mov
in
pusha
cmps
cmps
popa
rcr
xchg
or
add
jmp
je
(bad)
fistp
cmc
and
in
hlt
mov
call
sub
adc
mov
lods
lods
mov
fwait
neg
pop
test
mov
jle
inc
(bad)
cld
jns
push
js
not
jne
lahf
movs
and
fadd
shl
cld
rcl
popf
mov
jge
test
cmp
mov
push
xchg
dec
xchg
xchg
sbb
sbb
enter
dec
adc
lods
js
test
lahf
jne
add
mov
mov
mov
das
aaa
fdivr
cmp
sub
call
outs
shl
stos
mov
adc
ret
inc
dec
jbe
sub
sub
test
xchg
pusha
sbb
jne
pop
gs
xchg
xchg
xor
lahf
jmp
cmp
cmps
aas
sbb
(bad)
cli
xchg
call
adc
dec
mov
mov
adc
inc
push
lods
test
das
push
cmp
xor
xchg
xor
jle
movs
rcl
adc
retf
pop
ret
cmp
pusha
outs
jno
xchg
add
jmp
sub
push
fwait
push
imul
adc
push
cmp
out
adc
push
jl
icebp
imul
les
pop
mov
retf
bound
daa
jl
adc
push
rol
fs
sub
inc
fs
cld
pop
std
icebp
mov
sbb
xor
and
leave
dec
inc
xor
sub
stc
xchg
fs
shl
je
mov
dec
pushf
fidivr
std
adc
mov
cs
mov
push
mov
stc
mov
and
push
add
(bad)
fcmovnb
jne
dec
loopne
cli
mov
je
push
sub
das
cmps
xchg
ss
iret
pusha
int
inc
mov
pop
cmp
jo
cvttps2pi
ror
mov
imul
sub
pusha
or
cwde
outs
test
mov
jge
retf
pop
hlt
repz
leave
dec
add
cwde
jne
cmps
lea
data16
sub
jmp
cmp
inc
xor
push
out
adc
xor
sub
add
mov
jg
dec
mov
movs
sbb
je
xchg
cmp
xchg
or
lahf
mov
outs
mov
and
rcr
cmp
outs
mov
sub
mov
pop
repnz
sbb
rcl
and
mov
lds
mov
es
(bad)
rcl
xchg
xor
sub
not
and
out
int
repz
or
mov
sub
arpl
xor
repnz
(bad)
daa
shr
and
addr16
cli
in
pop
push
add
jae
adc
sbb
call
sub
add
sbb
bound
ins
iret
lds
movs
fadd
test
mov
xor
cmp
inc
test
sub
push
cwde
and
(bad)
adc
pop
cmp
jne
jle
ins
inc
xchg
sub
rcr
sqrtps
add
cdq
jmp
xchg
ds
ss
push
pop
dec
mov
push
(bad)
sbb
jmp
pop
pop
mov
into
pusha
les
add
loope
enter
fdivr
lock
int3
or
sbb
cmp
call
nop
retf
out
loopne
xchg
imul
lock
pop
test
icebp
sbb
hlt
mov
jne
sub
sub
pop
ja
xchg
arpl
les
xchg
xor
inc
test
cld
ja
pop
lods
addr16
call
in
(bad)
sub
sub
cmp
jae
repz
xchg
ficomp
xchg
add
push
mov
sahf
cwde
in
xchg
daa
push
jnp
stos
xchg
pop
xchg
aam
repz
mov
mov
(bad)
mov
add
inc
retf
xchg
pop
xchg
sbb
ret
stos
stc
add
call
mov
dec
push
xchg
cmp
scas
mov
add
cdq
mov
jecxz
popf
inc
xchg
sub
js
adc
lods
scas
je
es
dec
push
inc
dec
push
push
leave
mov
and
std
pop
loop
cmp
aad
jp
fisubr
cmps
dec
das
push
adc
in
cmps
cmp
xchg
outs
das
mov
mov
sbb
jge
xchg
out
mov
add
icebp
pushf
outs
sub
daa
repz
add
test
sbb
sbb
xor
push
xchg
dec
lea
and
stos
cmc
add
test
sbb
pop
xchg
sbb
imul
pop
fdiv
and
les
jge
inc
shl
sub
popf
push
jns
inc
mov
mov
xchg
jb
popf
mov
mov
aam
popa
mov
xor
xchg
(bad)
push
cwde
jg
jne
cld
test
jg
dec
jl
or
(bad)
test
push
adc
adc
in
xor
dec
cld
jecxz
xor
jmp
lods
fnstenv
aas
xchg
jne
fs
sbb
daa
stos
stos
jmp
cli
daa
cmp
mov
push
pop
sub
iret
in
jge
repz
fwait
(bad)
mov
push
sbb
inc
fist
and
xor
cmp
out
inc
in
push
repnz
jp
push
repz
test
xchg
dec
cmp
adc
(bad)
sbb
loop
cmps
push
jp
cmp
xor
jne
mov
xor
dec
pop
imul
aad
fidiv
fist
(bad)
repz
dec
lahf
repnz
out
jmpw
adc
add
and
mov
mov
pop
ins
dec
and
ins
int
pop
xchg
pop
sbb
dec
cmp
cwde
js
je
jmp
or
pop
cmp
cs
in
jbe
jle
xchg
inc
jp
add
jle
sbb
cmc
iret
xchg
jns
ret
jmp
lock
push
rcl
cmp
xchg
faddp
rcl
jnp
cdq
cmp
popf
push
mov
mov
pusha
pop
cmps
cmp
scas
fld
sub
out
ds
xchg
repz
bound
shr
cmp
clc
imul
push
xchg
or
(bad)
fst
lea
xchg
out
push
div
sub
and
and
cmps
in
rcl
mov
gs
adc
or
lods
and
jecxz
xchg
xchg
xchg
push
outs
dec
in
xchg
xor
hlt
mov
mov
or
push
add
das
xchg
std
fnsetpm(287
adc
out
add
fld
(bad)
into
call
xor
and
aas
aad
add
ins
clc
stos
sub
nop
pop
in
cli
mov
lock
nop
xchg
pop
(bad)
fdivr
popa
sub
loopne
push
and
xchg
sub
cmp
and
ins
mov
test
cmp
xchg
mov
jmp
sbb
adc
std
adc
call
popf
fs
cmp
imul
push
mov
mov
sbb
dec
mov
and
pusha
mov
xor
imul
push
jbe
or
cwde
jmp
sub
les
out
repnz
sbb
xor
sar
cmp
sahf
jns
mov
inc
xchg
imul
mov
mov
lea
mov
pop
loopne
jnp
add
or
mov
shl
fistp
mov
ss
jo
xchg
popf
cld
xchg
mov
jns
cmp
inc
push
fisubr
mov
add
hlt
pop
or
adc
std
je
fst
mov
push
les
mov
(bad)
mov
retf
and
loop
in
dec
enter
rcr
arpl
xchg
nop
fucomip
dec
and
popa
(bad)
push
shr
sub
add
enter
out
pushf
sar
push
(bad)
cmps
bound
or
jge
test
adc
xchg
stos
pop
pop
es
and
(bad)
repz
sub
dec
push
fild
jmp
dec
pop
pop
scas
iret
stc
sub
xchg
bound
fst
(bad)
sti
outs
jmp
inc
stc
ret
cmp
dec
mov
iret
out
mov
jns
inc
fs
add
(bad)
xchg
shl
and
jne
aas
add
and
mov
iret
ins
or
cwde
lock
repz
popa
xchg
vphsubbw
xchg
mov
xchg
ds
cs
fwait
cmp
xor
repz
popf
jnp
adc
xor
and
ins
pop
retf
loopne
imul
xchg
movs
mov
push
push
xchg
mov
dec
xchg
loope
ficomp
mov
add
addr16
retf
repnz
mov
jecxz
jbe
xchg
mov
jl
dec
enter
xor
mov
xor
scas
cmp
inc
pop
enter
js
test
push
dec
fldenv
lods
pop
jmp
(bad)
loopne
ret
adc
push
jns
inc
pop
inc
fbld
(bad)
push
or
call
pusha
fdiv
ins
loope
push
and
cs
xchg
addr16
push
sbb
fistp
outs
lods
movs
out
pmaxub
jecxz
xchg
dec
jmp
xchg
fisubr
cmp
test
cli
add
adc
lea
xchg
push
nop
int
nop
aaa
mov
ficom
adc
dec
add
test
and
retf
xchg
mov
shr
jge
lods
mov
push
daa
sub
rcr
adc
cmps
dec
enter
cwde
xchg
inc
aaa
pop
int
je
pop
sbb
out
(bad)
xchg
fld
mov
adc
fcom
cmp
int3
mov
cmps
rcl
std
sbb
mov
and
pop
cwde
call
jae
adc
in
test
xchg
das
mov
xor
jo
cmp
sub
pop
leave
push
push
out
mov
outs
jb
aad
test
retf
sub
pop
sub
mov
lods
dec
fcmovnb
pop
popa
scas
mov
dec
inc
js
cli
xchg
xchg
out
cmps
fdivr
push
inc
ss
pop
and
aam
cmps
or
cmps
or
adc
shl
ins
adc
les
push
hlt
test
jmp
mov
push
fistp
push
es
pop
xor
imul
pop
push
mov
jae
jecxz
add
jb
sahf
dec
ins
div
scas
mov
push
add
out
cmps
cdq
int3
jge
sbb
xchg
jecxz
mov
xchg
dec
jne
xor
or
jl
adc
std
enter
cli
adc
fadd
pop
in
jnp
cmovne
repz
pop
sbb
mov
push
xchg
clc
rcl
push
outs
in
push
pop
jne
rcr
jecxz
adc
mov
sub
push
scas
pusha
cmp
jo
rcl
test
enter
movs
xor
out
xlat
add
sbb
push
sub
nop
jae
push
aaa
xor
daa
adc
fstp
or
sbb
xchg
push
jbe
int3
mov
add
xchg
inc
mov
xor
jne
sbb
jle
cmc
push
push
adc
jp
xchg
js
shl
mov
test
cmp
enter
mov
pushf
mov
jnp
dec
gs
inc
adc
dec
and
pop
or
and
cmp
xchg
dec
and
mov
pop
popa
pop
hlt
jo
push
sub
adc
aam
adc
fxch
jp
dec
jo
cmp
rcr
sub
in
pop
shl
cmp
mov
popa
(bad)
cmp
out
cmps
jecxz
jge
cmp
sar
jnp
adc
push
and
jae
xor
sti
rol
sub
into
mov
sbb
push
cmp
out
jge
add
push
retf
aaa
dec
jmp
pop
movs
push
jecxz
add
mov
mov
mov
mov
add
push
ins
fistp
icebp
cli
inc
mov
addr16
inc
xchg
mov
jne
arpl
lea
call
ja
leave
xchg
stos
mov
jne
movs
pop
dec
or
addr16
pushf
hlt
push
xchg
(bad)
test
and
int
mov
ffree
cmp
or
sub
mov
or
inc
fadd
cmp
jl
push
sub
jne
test
movs
je
lock
mov
lds
and
pop
pop
test
xchg
push
ja
retf
pop
xchg
and
and
rcl
imul
mov
sar
mov
sub
cmp
nop
mov
jns
ror
mov
push
fsub
dec
push
push
lock
idiv
rcr
mov
loopne
pop
xor
and
lock
retf
nop
cdq
inc
loope
mov
pop
lock
je
sub
outs
aas
out
mov
fidiv
sbb
mov
fcomp
jge
pushf
in
push
add
pop
(bad)
mov
dec
outs
cli
push
fwait
sub
(bad)
or
ret
(bad)
sub
sbb
add
xchg
and
pop
jg
pop
or
cs
push
mov
mov
mov
cs
mov
lods
mov
add
sbb
xchg
scas
aad
pop
lock
mov
fsub
mov
sbb
cmp
das
fidiv
dec
std
adc
repz
ins
test
popf
arpl
aad
enter
std
in
icebp
jae
cmc
je
std
fild
cmp
cmp
stc
ss
shl
push
inc
call
xchg
test
(bad)
xor
je
xchg
hlt
dec
fisubr
inc
shl
fsub
aam
push
mov
mov
sub
xchg
movs
mov
pop
jp
shr
pop
inc
ja
in
test
or
daa
(bad)
test
cmp
iret
fisubr
sbb
cmp
scas
std
adc
enter
cli
retf
pop
lahf
xchg
sbb
jns
xchg
dec
inc
iret
pop
shl
js
and
adc
dec
es
int
push
add
xchg
push
cdq
or
mov
inc
test
fbld
fs
dec
jns
in
xchg
movs
ds
xchg
sbb
sub
pushf
inc
pop
movs
xchg
pushf
ror
dec
(bad)
cmps
lock
sahf
xchg
ins
mov
jg
inc
push
inc
sub
jmp
sahf
cs
jmp
jle
retf
mov
cmp
in
dec
pushf
shl
xor
iret
xchg
test
ins
retf
movs
ins
or
push
jb
ss
fild
nop
cwde
jmp
in
or
bound
cmp
dec
and
cmp
repnz
fadd
icebp
les
inc
cmp
adc
cdq
popa
shl
rep
sub
sub
inc
mov
ins
test
xor
test
fs
mov
popa
or
push
daa
mov
push
or
mov
jo
push
jge
fs
mov
into
aad
gs
lahf
pop
sub
stos
xchg
std
popa
jne
and
jg
jmp
push
loopne
ror
sbb
retf
cmps
sub
inc
lock
push
mov
cmp
rcl
jmp
sbb
es
ror
retf
jge
mov
xchg
jge
test
cs
in
xchg
pop
out
adc
mov
xchg
scas
(bad)
popf
lahf
std
add
imul
retf
(bad)
aam
movs
jb
push
jle
daa
rol
js
call
mov
addr16
ins
mov
adc
jp
pop
imul
mov
dec
lods
les
push
mov
jl
adc
dec
lock
mov
mov
ins
adc
fs
test
cmc
sbb
cmp
stc
ficom
pop
jo
sub
jmp
sub
push
sub
test
stos
mov
cmp
repz
dec
sub
xchg
outs
sub
mov
cmps
aas
sbb
nop
pop
mov
mov
jne
and
mov
clc
js
scas
xor
jb
popf
mov
cmp
xchg
(bad)
cld
jns
outs
pop
int
daa
scas
inc
mov
(bad)
fidivr
push
jae
je
lods
cmp
repz
pop
jo
fmul
out
inc
call
cmp
xchg
fisub
xor
or
loopne
mov
daa
mov
fbld
shl
das
xchg
sub
fist
sbb
ret
inc
cmp
std
gs
aad
cmp
adc
dec
and
fld
stos
push
jle
enter
xor
jnp
cs
cmp
mov
push
loope
inc
mov
cmc
xor
jmp
inc
sbb
stc
fcom
not
xchg
dec
xchg
or
push
cmp
enter
dec
cdq
sub
addr16
cmc
cld
cmp
xchg
call
stc
ret
xor
cmp
lahf
sub
jns
ret
rcl
call
mov
retf
test
sbb
(bad)
cmps
push
push
lods
inc
not
in
adc
mov
cdq
xor
and
pop
cmps
loop
mov
mov
dec
pop
inc
in
fist
je
xchg
adc
out
push
aaa
stos
inc
xchg
jle
jns
ds
mov
mov
xchg
and
jg
test
sub
jle
jle
and
mov
xchg
jmp
dec
popf
dec
mov
loopne
stc
movs
sub
dec
lods
mov
out
lock
mov
lock
and
push
push
jns
lea
stc
cli
add
popa
pop
xchg
iret
or
loopne
lods
sub
repz
fs
in
xchg
rcl
out
adc
and
cs
pop
mov
test
adc
jno
pop
mov
nop
cmps
pop
out
test
into
mov
jns
repz
(bad)
iret
hlt
add
sbb
and
in
repnz
mov
cld
iret
adc
push
fisub
jns
enter
mov
inc
xlat
push
fwait
cmp
cdq
dec
arpl
scas
mov
mov
xchg
mov
cmp
daa
ins
loope
rcr
(bad)
adc
add
cmp
in
sti
adc
jbe
mov
cmps
ds
dec
push
je
dec
xor
ret
cwde
push
test
sub
lea
jge
mov
inc
mov
push
lds
dec
adc
mov
sbb
mov
lods
data16
std
pop
adc
shl
test
aaa
add
lods
xchg
push
xor
sbb
xchg
add
outs
popf
fbld
dec
pop
adc
sti
dec
xlat
and
lds
mov
jne
or
into
pop
test
adc
push
fld
test
mov
and
inc
es
out
fdivr
popf
lods
push
and
fsub
xchg
inc
test
imul
pop
or
fstp
pusha
cld
push
jne
xchg
pushf
pop
call
shl
add
cmp
xchg
lds
mov
les
push
sbb
adc
in
shr
adc
xchg
test
fnstcw
add
jo
stos
imul
mov
jbe
add
fdiv
pop
sar
fidivr
lahf
mov
jmp
jne
fwait
jge
xchg
enter
stos
inc
test
xlat
cmc
or
mov
fcomp
xchg
add
stos
add
xor
fisttp
cld
aas
sub
dec
movs
test
retf
in
push
dec
mov
sahf
push
pop
push
pop
test
push
jbe
sub
test
push
or
mov
dec
mov
mov
dec
push
pop
daa
fs
or
jge
out
jae
pop
das
jle
or
fidivr
pop
inc
into
daa
stos
rcr
jle
jns
fdivr
rol
pop
mov
lahf
add
mov
adc
aaa
and
mov
adc
inc
cmp
ror
addr16
and
test
mov
cmp
(bad)
std
dec
outs
jle
jae
cli
mov
dec
pop
outs
repnz
cmc
lock
je
les
xor
out
mov
mov
stos
daa
and
mov
retf
ins
jae
loope
or
jp
fdiv
jne
push
fstp
add
rcl
pop
pushf
hlt
call
cmp
adc
jmp
mov
mov
jecxz
add
mov
cdq
js
and
out
inc
hlt
(bad)
cmc
out
dec
mov
mov
jge
and
dec
jmp
dec
push
xor
out
mov
sub
cld
stos
push
xor
and
ja
mov
and
adc
pop
sub
iret
cmps
fld
fist
adc
push
das
sub
inc
mov
ret
inc
(bad)
and
jmp
sub
xchg
push
std
popf
dec
push
sbb
outs
ficom
xor
lods
or
mov
jbe
adc
cmp
jge
cmc
or
pop
adc
inc
inc
mov
or
fs
xor
push
lahf
jne
mov
in
add
dec
jb
sbb
pushf
js
xchg
das
out
cmp
mov
dec
sub
cli
xchg
cs
les
sbb
inc
cs
sbb
in
adc
push
(bad)
leave
stos
repz
vcvtps2pd
push
jo
ins
cwde
ja
push
add
(bad)
xchg
into
loop
pop
(bad)
mov
fcmovu
sbb
loop
or
pop
pop
imul
or
add
idiv
sub
cmp
and
icebp
jns
cdq
dec
adc
fdiv
add
jl
ja
lods
sub
push
xor
lods
cs
jmp
jo
scas
fsubr
mov
out
cmp
jb
push
ret
std
adc
cmps
cli
mov
mov
xchg
fnstenv
div
xchg
jecxz
or
pushw
sub
push
xchg
cmp
xor
(bad)
popf
jb
pop
and
cmp
dec
test
jne
push
sub
xchg
in
jle
mov
fwait
test
push
push
dec
(bad)
lods
cmp
sub
call
popf
and
sahf
in
int
lea
shl
outs
shr
into
dec
jno
mov
add
sub
xlat
icebp
pop
mov
(bad)
add
jns
mov
retf
adc
fimul
and
imul
dec
imul
mov
movs
add
add
jecxz
loopne
mov
ins
sbb
bnd
cld
idiv
sub
addr16
into
dec
lods
pop
imul
mov
mov
popf
rol
cwde
out
sbb
outs
sbb
fld
xor
ret
xor
dec
pop
lahf
imul
adc
ret
dec
cmp
add
jbe
test
push
in
ja
jnp
shl
push
jns
in
adc
loope
js
arpl
jp
js
and
push
test
jecxz
add
and
push
inc
lods
lea
sub
pop
push
setne
xchg
cwde
movs
xor
iret
sbb
mov
sub
push
cli
cwde
mov
push
fisttp
cmp
adc
popa
rcl
repnz
adc
mov
mov
xchg
fld
xchg
rcl
imul
xchg
fistp
jg
and
cmp
in
mov
xchg
push
sbb
add
loop
nop
sbb
mov
out
sub
push
push
jp
rol
sub
inc
pusha
loope
adc
aas
sbb
xchg
and
ficomp
add
push
ds
retf
call
cmp
jae
xchg
dec
jmp
test
aaa
aad
popf
(bad)
cmc
mov
push
retf
addr16
xchg
(bad)
lahf
xor
jp
scas
jb
jmp
fimul
in
xor
mov
xchg
pop
pop
mov
cmp
shl
(bad)
in
aad
jg
push
cmp
and
int
or
push
push
(bad)
rcl
test
pop
(bad)
and
xchg
add
xchg
lds
and
fcomp
dec
imul
sbb
push
sub
xchg
ror
cmp
popa
test
dec
sub
xchg
sub
add
sbb
nop
stos
addr16
pop
out
stos
xchg
sbb
dec
push
mov
ds
out
or
mov
das
(bad)
sbb
scas
xchg
cmp
sub
cli
mov
je
int
daa
pusha
stc
jmp
dec
int
retfw
or
push
and
loop
sub
and
sbb
mov
inc
pop
jge
xchg
mov
bound
pushf
mov
inc
call
repz
call
ds
mov
mov
pushf
mov
xchg
mov
mov
loop
sub
out
aam
mov
jne
js
ja
mov
xchg
loopne
xchg
dec
cmps
add
mov
push
cmc
stos
and
in
adc
dec
sti
popa
(bad)
mov
js
aam
jg
jae
jp
xor
xchg
ret
pop
push
outs
enter
in
ficomp
mov
mov
xchg
jle
out
stos
pop
push
adc
pop
xchg
imul
or
shl
int
dec
fnsave
xchg
push
or
pop
les
jmp
inc
sbb
jp
mov
pop
xlat
xchg
sub
jp
clc
jne
sbb
mov
add
push
mov
js
mov
mov
push
loopne
adc
(bad)
int3
cmp
jl
mov
xchg
inc
hlt
cmps
sahf
jg
movs
mov
ret
sub
push
cld
pop
cld
fsub
pusha
aam
lods
ins
xchg
test
hlt
jno
xchg
mov
dec
rcr
pop
xchg
enter
retf
dec
repnz
adc
test
aad
mov
jns
les
sub
fsubr
imul
sti
pop
fldenv
mov
sub
fnstenv
jne
xchg
mov
jp
mov
es
popf
je
sub
imul
mov
add
add
xchg
push
push
jge
popf
sbb
xchg
mov
popf
sbb
pop
dec
ins
scas
loope
lock
sbb
dec
dec
mov
sbb
in
adc
sub
out
(bad)
in
jp
xchg
dec
inc
jp
dec
hlt
xchg
shr
test
sbb
or
pushf
cmp
cmps
xor
sbb
jae
xchg
cli
loope
rol
add
sub
pop
loopne
mov
sbb
cmps
adc
sub
ins
in
ror
pop
into
mov
stos
adc
xchg
je
and
dec
pop
sbb
xchg
xor
(bad)
xchg
inc
aad
or
shl
jle
les
sbb
ss
push
jecxz
test
adc
xor
or
jne
sub
cmp
pop
popa
sub
or
fucomip
div
xchg
sbb
loopne
mov
pop
ins
mov
xor
fadd
mov
xor
ss
sub
cmp
shr
sbb
adc
inc
adc
test
cli
or
cmp
mov
clc
jbe
xchg
dec
xchg
test
push
fmul
daa
adc
cli
stc
xchg
xchg
or
ror
(bad)
retw
or
test
sbb
sbb
xchg
data16
push
push
add
xlat
sub
fmul
sub
jmp
cmp
adc
nop
sub
js
xchg
repnz
jns
movs
or
and
xlat
loop
or
shr
js
js
ret
jle
push
imul
pop
aaa
and
push
xor
call
(bad)
(bad)
jmp
mov
pop
inc
pop
hlt
sub
loop
jae
cmp
sbb
dec
sub
into
mov
xchg
or
mov
sbb
cli
mov
(bad)
xchg
enter
xor
jo
fstp
push
ja
mov
lods
idiv
mov
aad
mov
mov
enter
jmp
pop
xacquire
or
in
aam
clc
xchg
fs
(bad)
ds
adc
and
repz
mov
neg
jo
mov
xchg
xchg
inc
rcr
jl
mov
adc
pusha
inc
adc
mov
add
mov
mov
and
out
jecxz
xchg
and
cs
aad
cmc
pop
add
arpl
push
stc
xchg
ins
popf
jnp
mov
and
push
out
mov
pop
fidivr
adc
stos
mov
add
lea
mov
adc
or
mov
cmp
and
in
push
jge
add
inc
push
pop
xchg
lea
xor
fdivr
add
adc
xchg
xor
jp
push
dec
shr
add
data16
sbb
adc
jb
inc
xchg
pop
xchg
nop
lds
pusha
jne
arpl
dec
or
es
ss
test
das
xchg
scas
les
fld
mov
and
std
xchg
in
mov
sub
pop
lea
ret
sub
mov
js
les
jl
jmp
adc
mov
adc
add
jns
cmps
imul
mov
jl
inc
xor
mov
adc
add
clc
cmps
inc
retf
loop
mov
sbb
pop
popf
cld
xor
dec
pushf
fwait
mov
pop
jb
cmc
inc
mov
stos
xlat
(bad)
push
inc
mov
(bad)
loope
pop
call
mov
sbb
sub
lds
(bad)
cs
xor
push
movs
xor
jg
or
mov
mov
mov
sahf
daa
arpl
test
sub
push
fldenv
and
loopne
clc
clc
jns
xchg
sbb
mov
stos
scas
sbb
adc
pop
cmp
or
cld
out
aam
push
and
test
dec
nop
xor
icebp
add
imul
adc
adc
inc
shl
add
jmp
sub
sbb
aas
xor
call
int3
inc
sbb
jl
push
and
aam
(bad)
call
pushf
(bad)
cwde
inc
cs
bound
dec
adc
xchg
xor
push
mov
and
fdivr
daa
adc
xor
fimul
pop
mov
shl
jno
fucomp
push
sbb
cmp
pop
sub
sahf
mov
xchg
pop
dec
and
call
jp
sar
xchg
popf
nop
jg
movs
cmp
retf
in
aam
mov
(bad)
lock
sub
push
adc
pop
jmp
in
fsubr
leave
out
aas
iret
ins
out
mov
sbb
sub
lods
dec
mov
cmp
push
jmp
adc
int3
hlt
inc
mov
outs
jl
icebp
in
sahf
out
arpl
jmp
cmp
mov
repz
xor
mov
iret
pop
push
sub
(bad)
fs
inc
int3
push
mov
std
jb
xor
loopne
data16
loope
pop
stc
push
dec
fisub
les
out
loop
pop
cld
js
sub
mov
cmc
jae
xchg
loope
ins
aad
add
or
cmps
cmps
jmp
test
sub
push
in
repnz
dec
xor
jg
cmps
call
mov
xor
in
push
test
sub
lods
sbb
(bad)
imul
ins
js
jb
and
or
sub
lods
xchg
je
pushf
and
into
out
fiadd
fidivr
enter
ja
les
push
add
push
dec
xchg
pop
or
(bad)
cld
pop
in
adc
(bad)
mov
push
inc
(bad)
push
fld
imul
jp
xchg
inc
dec
cld
push
dec
sbb
mov
xchg
push
pop
push
cwde
shl
test
push
mov
fwait
jle
icebp
mov
(bad)
xor
imul
test
sub
mov
xchg
push
fistp
or
mov
mov
mov
xor
add
jle
xchg
jne
rcr
mov
jae
std
or
jne
std
jns
jmp
ret
in
mov
inc
data16
add
stos
jge
adc
ss
add
call
outs
xchg
mov
jmp
in
and
std
sbb
jmp
cwde
cdq
xchg
test
stos
pop
rcl
pop
in
push
sub
sub
out
sub
lods
inc
jo
jb
daa
stos
lds
outs
cmp
clc
and
xchg
and
mov
or
cmp
clc
dec
push
and
iret
aam
cwde
enter
mul
sub
xlat
adc
push
xchg
in
push
aaa
cld
stos
lea
xchg
mov
mov
fdivr
jle
cmp
jns
cmp
push
mov
cmp
ss
mul
into
loop
pop
cmp
fstp
sub
sub
iret
mov
ficom
mov
std
in
test
test
sub
jbe
test
das
cwde
fucomp
sti
xchg
sub
sbb
push
xchg
fistp
dec
add
cld
sub
or
inc
dec
pop
inc
test
jmp
rol
fst
and
add
dec
push
mov
shl
daa
xchg
adc
ret
sti
retf
test
cmp
push
test
and
fisubr
ds
cmp
mov
sbb
pop
test
js
nop
dec
rcr
into
movs
and
mov
lea
in
in
ret
lods
mov
imul
mov
mov
in
in
dec
loop
pop
fld
lock
pop
sbb
test
pop
mov
mov
xor
enter
push
pop
ret
jae
(bad)
jle
pop
or
lods
push
xchg
ja
(bad)
mov
mov
gs
jge
xchg
shr
dec
inc
jae
inc
adc
jno
inc
lea
stos
xor
cli
outs
cmc
lea
mov
xchg
movs
mov
shr
ss
lock
je
sub
mov
and
xchg
jmp
retf
xchg
cli
or
loopne
mov
ins
adc
psrld
fsub
(bad)
pop
adc
test
inc
cmc
scas
mov
jp
repnz
rol
pop
sub
lahf
xchg
dec
add
jnp
push
xor
fcomp
les
shr
sub
mov
leave
out
adc
mov
or
mov
repnz
stos
cmp
rcl
mov
and
(bad)
jae
sub
push
jmp
jne
xchg
and
sar
in
adc
xchg
mov
inc
bound
loope
mov
dec
stos
ins
dec
push
daa
mov
sbb
sbb
adc
sub
popf
into
jp
ret
mov
jmp
lock
jno
jns
imul
cmp
sub
cwde
push
xchg
sti
xchg
mov
sub
push
and
es
jge
fdivp
xchg
pop
cwde
xchg
inc
ds
jae
xor
shl
cli
inc
xchg
mov
retf
xor
mov
into
push
pop
mov
mov
or
push
or
mov
sbb
push
shl
popf
xor
xchg
xchg
xchg
push
pop
add
sahf
(bad)
lods
retf
or
rcl
cmp
icebp
out
inc
cmp
jne
retf
pop
push
and
cmp
push
xchg
xchg
sbb
pushf
or
test
pushf
sub
repz
cld
adc
jnp
mov
sub
xor
xor
out
jmp
(bad)
dec
and
std
adc
fsubr
xchg
cs
pop
or
lahf
scas
int
gs
adc
inc
pushf
add
dec
push
ds
in
mov
mov
ss
xchg
mov
inc
adc
xchg
add
sub
shl
test
sbb
mov
psraw
pop
jmp
movs
retf
pop
pop
cmp
lods
ror
sahf
xchg
mov
sub
xchg
xor
call
or
mov
push
mov
je
xchg
xchg
jge
cmps
(bad)
push
imul
mov
das
sbb
mov
movs
in
pop
jo
lahf
pop
mov
mov
mov
daa
sbb
cld
pop
mov
iret
in
push
mov
sbb
push
pushf
test
xchg
call
pop
ficom
xor
jae
add
pusha
adc
dec
movs
repnz
mov
push
js
xor
fsubr
pusha
icebp
mov
push
ror
je
push
cmp
fiadd
push
add
sub
fstp
aas
rcr
fild
out
cld
dec
xchg
dec
or
cmps
mov
push
and
lea
add
push
cs
pop
es
cdq
sti
mov
clc
je
dec
dec
xchg
sub
shl
sub
cmp
les
cli
and
adc
push
ins
(bad)
popa
mov
push
bound
daa
pop
dec
push
call
cmc
test
or
push
sar
xchg
xchg
fs
stos
mov
and
scas
loopne
cmp
imul
jge
xchg
push
stos
cwde
mov
push
mov
push
xlat
cmp
mov
pop
sbb
mov
push
dec
in
mov
scas
add
sete
pop
lea
push
jmp
das
xor
sahf
push
cmc
lods
jmp
arpl
repz
xchg
fld
mov
retf
push
adc
cld
in
adc
and
pushaw
test
mov
scas
int3
pushf
aam
jae
xor
xor
add
sbb
jg
sahf
and
in
mov
lea
loopne
xor
or
inc
jmp
and
or
pop
xchg
retf
call
cwde
addr16
test
jbe
push
ret
rcl
mov
in
sub
and
enter
and
mov
mov
adc
iret
or
xchg
js
fstp
js
jmp
sub
pop
ja
add
bound
in
sbb
inc
dec
cmp
outs
in
mov
and
and
xor
inc
shr
pop
mov
ja
loop
in
cld
int3
push
lds
push
repz
jmp
cwde
loope
pusha
cmp
pop
push
mov
jne
mov
outs
dec
adc
cwde
push
xchg
test
int3
xchg
pop
xor
jmp
xchg
jmp
inc
push
mov
mov
add
mov
sbb
dec
je
shr
jb
xchg
repz
cdq
push
call
adc
jo
jbe
test
pop
(bad)
lea
pushf
sub
mov
arpl
xchg
dec
jp
xchg
fwait
rcr
cmp
jbe
xchg
popaw
push
pop
shl
jmp
push
pop
mov
nop
and
leave
ss
sbb
fs
jno
sub
xchg
or
pop
cmp
inc
push
fst
sbb
sbb
cli
es
addr16
xchg
xchg
mov
stc
mov
retf
jns
ror
jo
into
aad
pop
and
movs
jno
or
imul
das
mov
or
bnd
repz
(bad)
adc
lock
stc
cmc
sub
in
mov
adc
adc
sub
or
vpshufhw
js
repnz
(bad)
xchg
push
sbb
(bad)
in
div
sar
pop
imul
jecxz
ror
jmp
iret
ret
add
and
or
cmc
cli
mov
xchg
sahf
dec
ret
jmp
xor
cmp
add
mov
pop
loopne
call
out
stos
mov
fist
jge
adc
inc
and
pop
cld
xor
xchg
cmp
sub
jmp
sti
sub
mov
in
ret
xor
mov
jmp
mov
mov
xchg
adc
ds
jb
adc
dec
pop
sbb
and
cmp
mov
xor
push
or
loopne
cmc
xchg
fidivr
xor
das
jae
xchg
jge
adc
push
mov
cmp
in
pop
or
sub
shl
push
mov
push
test
popf
imul
sbb
xor
xchg
add
arpl
adc
ins
in
in
and
jl
shl
(bad)
cmc
stos
imul
leave
push
shr
sbb
xchg
nop
dec
pusha
dec
pusha
adc
cmp
mov
xor
movs
call
aaa
jo
cld
das
dec
leave
sub
mov
sbb
xchg
in
xchg
adc
aad
loopne
mov
leave
lea
in
or
lds
push
pop
test
mov
mov
in
jl
lods
xchg
cld
(bad)
mov
(bad)
repnz
mov
jp
cwde
(bad)
jecxz
sbb
sub
xchg
adc
push
mov
ror
push
mov
or
pop
dec
ficom
(bad)
push
je
std
pop
xchg
std
push
jmp
jl
fs
sub
mov
or
mov
and
jo
add
outs
jae
pop
add
test
out
and
push
cld
test
loop
repz
in
leave
(bad)
xchg
push
(bad)
jge
sub
jecxz
mov
xchg
pop
pop
xchg
sahf
adc
imul
pop
push
test
mov
sub
dec
stos
arpl
push
mov
xchg
dec
push
cmp
cld
mov
mov
sub
sahf
mov
push
and
jmp
in
mov
xchg
pop
or
int
dec
or
fdivr
aas
fldl2e
test
aaa
and
arpl
mov
xchg
sar
mov
xor
jne
lods
add
push
xlat
(bad)
jmp
jne
add
ss
repz
mov
int3
test
jp
js
int
cmc
test
jo
pop
mov
push
add
aaa
es
mov
lods
mov
pop
mov
jecxz
jp
adc
jmp
push
push
xchg
std
addr16
cwde
rcr
repz
or
rcr
xor
fsub
enter
int
or
jne
sbb
cdq
sub
mov
adc
jae
xor
mov
xchg
jbe
mov
and
sbb
fdivr
push
mov
sbb
push
dec
xchg
and
shl
fldcw
cmp
in
and
imul
pop
fisub
out
dec
aam
add
xor
leave
inc
mov
xor
jb
jecxz
pop
add
mov
loope
(bad)
push
adc
cmp
ror
sub
xor
sahf
mov
mov
mov
jbe
arpl
sar
inc
sbb
xchg
pop
stc
js
js
cmp
cmp
and
in
daa
push
(bad)
adc
cmp
fs
sahf
and
inc
ins
xchg
sub
fwait
shl
iret
xor
stos
xchg
gs
test
mov
cmp
or
in
adc
push
inc
ins
sbb
scas
and
ror
jne
xor
retf
in
jge
sub
sbb
add
ror
jge
jnp
mov
stos
pushf
ins
dec
dec
daa
popa
outs
sub
jp
add
test
pop
or
add
xor
cmp
(bad)
jle
enter
retf
mov
stc
mov
cmp
cmp
pop
fistp
mov
mov
dec
ds
imul
lahf
push
jnp
cmp
rol
sbb
test
adc
mov
ss
mov
fs
xchg
adc
pop
jo
push
jns
scas
fdiv
add
jmp
mov
out
cmp
push
les
je
mov
imul
(bad)
scas
mov
or
jne
sti
and
imul
mov
and
hlt
push
(bad)
mov
and
inc
add
hlt
nop
xchg
pop
push
arpl
inc
ins
fbld
hlt
inc
fistp
pop
inc
add
mov
shl
add
in
xor
movs
sub
fist
sti
mov
cdq
sub
jae
or
lods
jnp
in
and
loop
shr
mov
jb
xchg
pop
std
xlat
adc
gs
xlat
mov
ret
stos
adc
out
sbb
cmps
lds
xor
lods
lods
jns
push
call
push
push
mov
mov
sub
loop
frndint
scas
(bad)
ret
cwde
mov
cdq
push
fist
push
cdq
movs
mov
sub
inc
sbb
in
in
fstp
mov
std
leave
int
push
or
hlt
fisub
(bad)
addr16
xchg
imul
and
and
sbb
mov
pop
stos
loop
dec
xchg
sub
jae
in
movs
inc
push
jbe
mov
test
es
mov
pop
ret
lahf
ins
std
sub
or
fwait
repz
clc
cmp
int
ds
es
scas
adc
mov
(bad)
jnp
mov
xor
add
lods
ss
stc
sub
xor
ss
fist
adc
leave
push
and
in
mov
pop
mov
cmp
(bad)
mov
retf
jg
(bad)
bswap
xchg
daa
lods
xchg
jne
push
mov
(bad)
movs
sti
push
pop
mov
sbb
mov
stos
out
mov
jnp
fnstenv
sub
jne
mov
jbe
dec
lea
mov
or
push
popf
xor
jg
(bad)
sub
fild
add
xchg
mov
call
ins
jae
cmp
add
xor
push
in
jl
dec
shr
aam
ins
xor
in
loop
clc
cmp
in
mov
lods
js
jno
out
scas
cmp
sbb
or
jle
or
inc
push
add
loope
icebp
add
arpl
or
ret
loop
pop
(bad)
mov
xchg
add
mov
pop
cmp
dec
call
cmp
ret
xchg
xlat
pop
enter
xchg
test
xor
sbb
ficom
or
push
inc
jnp
aaa
les
in
cli
ss
or
xchg
dec
outs
push
cmc
test
sub
push
mov
popa
lods
mov
xor
and
jmp
jns
and
xor
cld
in
xchg
js
pushf
loop
jecxz
jb
int
jne
mov
push
and
(bad)
in
xchg
mov
sti
int3
jmp
lahf
les
and
or
les
in
shld
call
xchg
retf
adc
(bad)
in
push
push
jmp
out
jne
mov
mov
cmp
js
jns
xchg
xor
out
aad
aas
cmps
jns
sahf
mov
das
sbb
mov
pop
xor
lds
cmp
in
fwait
adc
int
mov
and
fcomip
leave
and
pop
dec
push
rcr
ja
xor
jae
mov
adc
(bad)
push
xchg
out
ins
pop
cmp
int
inc
data16
jne
pop
lods
inc
adc
adc
mul
jmp
pop
fld
jne
dec
inc
fcomip
ss
mov
jns
fidivr
sub
rcl
mov
cmp
pop
das
sub
xor
adc
xor
sbb
movs
push
leave
ja
cld
mov
mov
and
add
mov
dec
xchg
jl
cmp
movs
jns
adc
xchg
pop
ret
and
sahf
mov
shl
xchg
inc
xchg
addr16
icebp
imul
push
and
inc
xchg
stos
inc
sub
cdq
jp
xchg
or
aad
dec
repnz
inc
adc
fdiv
sbb
xor
cmc
in
out
jle
stc
mov
jo
out
or
mov
xor
mov
ins
mov
int
out
xchg
pop
sub
sbb
xchg
add
std
dec
push
mov
clc
mov
test
sbb
jmp
xchg
pop
nop
addr16
cdq
cmps
and
add
sbb
ins
adc
pop
mov
cmp
jle
rol
mov
cmp
dec
or
rol
sub
pusha
ds
sub
or
or
imul
ret
push
push
(bad)
je
stos
sbb
loop
cmp
aam
daa
cmc
rcr
retf
pop
or
sbb
inc
jne
repz
sahf
sbb
in
aas
pop
jno
adc
loope
cmp
dec
outs
dec
cmps
rol
stc
ror
or
push
sbb
sub
or
ret
and
xor
inc
idiv
outs
xor
pop
aaa
scas
or
ins
xchg
aad
test
fistp
jno
mov
sbb
sbb
xchg
mov
dec
cmp
test
jne
push
or
sub
sbb
jne
imul
jbe
in
ds
push
lock
adc
xchg
sbb
jnp
cmp
adc
xor
or
(bad)
icebp
out
mov
ret
push
dec
push
repz
mov
xor
mov
pop
cmp
jp
cmps
lahf
jne
ret
pop
xchg
scas
leave
xor
mov
cmp
cs
ret
movs
pop
push
(bad)
std
repz
or
push
mov
fbld
inc
aas
mov
adc
mov
jae
aas
ins
or
jmp
sbb
jge
jo
cld
lock
cmp
les
enter
xor
push
xchg
inc
add
sbb
pop
stos
mov
mov
dec
aas
sar
mov
adc
popa
mov
mov
fcomp
and
out
les
push
shl
push
pop
add
add
and
call
xchg
ror
fcom
outs
imul
aad
test
shl
add
cli
repz
popf
mov
mov
in
push
push
jmp
dec
lock
sti
adc
jae
les
loopne
test
jge
adc
jns
test
js
ret
(bad)
ret
clc
mov
inc
add
nop
imul
xchg
mov
pop
pusha
inc
mov
xchg
nop
imul
fnstsw
or
js
push
sbb
scas
shl
dec
movs
mov
and
add
js
adc
adc
cld
push
xor
mov
stos
and
sbb
icebp
mov
leave
xor
call
movs
pop
int
(bad)
and
in
adc
(bad)
and
jle
pop
mov
xchg
mov
mov
cmp
fidiv
sbb
push
xchg
inc
scas
jmp
pop
cmp
push
popf
cs
push
xchg
dec
push
fmul
mov
jmp
imul
ror
add
stos
mov
movs
mov
mov
fild
or
mov
mov
xchg
(bad)
lods
push
es
lock
sub
repz
cmp
or
dec
mov
pop
imul
rcr
out
fcmovu
sbb
sbb
fcomp
xchg
stc
xchg
test
jns
pushf
repnz
jne
mov
cmp
pop
dec
xor
xchg
xchg
jmp
das
or
adc
adc
imul
xchg
sbb
push
and
mov
add
lods
jg
pop
pusha
mov
xchg
shl
dec
das
mov
fist
mov
das
mov
mov
sub
cmp
push
jbe
add
sbb
xor
sub
repnz
cs
popa
js
mov
dec
or
cmp
jae
xchg
cmp
mov
xchg
inc
test
mov
xchg
cmps
add
out
mov
in
fwait
cld
arpl
mov
ins
retf
sub
ret
test
cmc
imul
jne
js
lea
les
ins
add
jmp
ret
fs
popa
pop
adc
cmc
sbb
shr
gs
enter
dec
addr16
ret
xchg
sahf
fidiv
or
jmp
js
je
loopne
or
adc
leave
mov
lahf
clc
outs
mov
clc
xchg
data16
rcr
ds
es
mov
jae
fbstp
cdq
jge
pusha
mov
xor
adc
jae
cmc
dec
es
popf
and
and
pop
sub
jle
hlt
out
pop
cmp
and
mov
mov
in
add
dec
pop
dec
and
mov
aaa
imul
(bad)
ds
test
pop
add
add
xchg
ins
cmps
jae
push
fisub
aam
out
jl
pushf
inc
cmps
in
jmp
fldcw
(bad)
leave
cli
pop
sub
jmp
and
adc
imul
je
xor
jl
adc
imul
outs
xchg
xchg
les
push
hlt
push
dec
xor
jns
sub
cs
call
push
mov
imul
cld
sbb
cmp
sub
sbb
add
mov
pop
out
ins
pop
jmp
jmp
fild
outs
jo
mov
in
add
retf
(bad)
jne
pop
mov
inc
pop
xor
cld
sar
cwde
adc
ror
push
sbb
mov
mov
push
loop
pop
sbb
push
inc
cmp
pop
not
pop
sbb
add
cmc
outs
les
sar
sub
pop
or
mov
test
xor
aas
sahf
cdq
jno
iret
inc
xchg
pop
push
xor
jnp
test
repnz
inc
xchg
xor
push
jmp
test
push
rol
jmp
cmp
lods
es
aad
sbb
cld
imul
dec
mov
jae
xchg
(bad)
cmps
sbb
std
push
mov
xchg
cmps
jb
fcmovb
xor
mov
add
js
mov
adc
hlt
mov
imul
xchg
cmp
cmps
or
push
scas
jmp
or
mov
or
test
pop
xchg
mov
mov
sub
aam
sub
cmp
and
jmp
rcr
dec
arpl
push
or
sbb
sub
or
adc
jmp
xchg
call
jb
and
cld
in
sub
ret
into
sbb
loopne
xchg
stos
call
push
sub
adc
push
js
xchg
xor
lea
mov
fprem
je
in
dec
push
pop
jle
inc
xor
loop
jmp
inc
dec
shl
cld
(bad)
mov
push
js
xsha256
cmps
xchg
pop
fidivr
xchg
cmp
ret
dec
fwait
icebp
dec
xchg
test
mov
pop
out
adc
jmp
cmc
imul
les
jne
sub
repz
or
jmp
mov
xchg
and
mov
mov
jns
mov
xor
sub
or
outs
and
pop
cwde
jg
push
xor
dec
test
int3
hlt
(bad)
(bad)
adc
pop
ret
(bad)
cmp
cmps
cld
aad
push
mov
int
sbb
cmp
ret
inc
jb
cmp
inc
imul
icebp
jl
es
xchg
imul
scas
jae
pop
add
inc
cdq
cmp
imul
les
jp
cmps
dec
adc
mov
xor
sub
jmp
outs
fs
mov
fsubr
push
jmp
daa
ss
and
lods
ret
cmp
ret
idiv
test
jne
call
cmp
dec
(bad)
es
call
xchg
fs
out
movs
hlt
sub
cs
mov
test
jmp
les
aad
mov
adc
lds
int
cli
cmps
mov
dec
cwde
data16
push
xor
retf
jo
fidivr
ffreep
outs
mov
and
not
aaa
mov
mov
mov
call
push
pop
int
movs
jbe
loop
out
dec
aaa
and
inc
enter
sbb
xchg
sbb
mov
add
push
xchg
scas
test
pop
adc
js
sar
retf
outs
jmp
out
mov
sbb
cmc
stos
fld
cwde
icebp
in
mov
ds
lods
push
jge
and
and
cs
ins
xchg
pusha
(bad)
jne
loopne
(bad)
jecxz
xchg
not
xchg
sub
aaa
ss
and
fsubr
sub
enter
int3
push
lea
mov
push
dec
xor
ret
mov
pop
fs
jp
adc
not
sub
mov
adc
movs
mov
cs
fcomp
mov
rcl
mov
data16
and
loopne
pop
add
cmps
sbb
pop
mov
loope
lds
xor
push
mov
lods
out
jns
mov
les
push
sbb
std
(bad)
xchg
daa
dec
jmp
mul
mov
dec
push
add
les
(bad)
std
scas
cmp
jns
in
out
xchg
mov
jl
je
xchg
sub
sbb
hlt
push
inc
retf
xchg
int3
pop
fadd
shl
retf
stos
ins
dec
xor
test
mov
out
jb
or
outs
lods
sbb
out
outs
jne
hlt
xchg
repz
xchg
mov
test
test
and
xor
cmp
rol
mov
sub
mov
cmp
jg
jmp
mov
mov
inc
cwde
in
adc
jne
sub
sbb
das
and
cmp
outs
sbb
or
(bad)
test
jmp
mov
aad
es
sub
jbe
fcom
shr
pop
add
std
dec
cli
in
mov
adc
mov
jge
push
jmp
pop
ss
out
sar
xchg
inc
push
xchg
mov
sub
mov
and
inc
fcmovne
leave
push
pusha
cdq
in
xchg
dec
mov
(bad)
int3
cs
fcmove
bound
jl
inc
xchg
xchg
lds
add
aam
in
repnz
movs
imul
cmc
rcl
cmc
pusha
mov
repz
xor
cmps
mov
sub
repnz
or
xchg
xchg
mov
(bad)
sub
sub
call
lahf
adc
or
mov
or
aas
test
cmp
sub
mov
xchg
push
add
fdiv
inc
mov
sahf
pop
(bad)
fwait
mov
test
adc
xor
mov
cli
inc
jmp
pushf
sbb
inc
fist
xchg
retf
pop
outs
(bad)
mov
sahf
jae
jle
leave
pop
mov
clc
sbb
sub
mov
aas
sbb
movs
in
or
lods
xor
xchg
imul
clc
call
dec
leave
ret
mov
push
inc
cs
jg
jmp
call
cdq
iret
dec
cli
sbb
or
dec
into
ins
inc
push
repnz
or
cmps
lods
sbb
xchg
pop
movs
sti
cmps
(bad)
cli
lahf
jg
jecxz
int3
cmp
jp
sahf
rsm
loopne
sbb
jge
xchg
mov
pusha
out
das
mov
pop
sub
push
das
les
mov
mov
cli
cmps
mov
stos
xchg
jbe
fsub
pop
fs
pop
mov
add
das
xchg
jnp
aas
adc
xor
mov
shl
fistp
xor
push
xchg
sub
xor
xchg
stos
aas
mov
xor
cwde
cmp
push
aam
sub
sbb
out
mov
dec
dec
push
pushf
(bad)
jae
das
or
cmp
and
loope
cmp
pop
fsubr
enter
push
inc
and
pop
push
mov
cmps
jbe
dec
outs
jge
mov
fs
nop
bnd
mov
adc
shl
cmp
int
hlt
dec
jg
jb
daa
mov
scas
scas
jns
mov
std
cmp
add
mul
in
outs
in
push
push
xor
cmc
les
js
inc
(bad)
jp
and
in
shr
jmp
jnp
mov
mov
daa
cld
mov
stos
xchg
xor
into
js
xchg
mov
cld
cld
sub
mov
lds
jae
and
rol
gs
xchg
stos
pusha
pop
push
mov
test
xchg
fild
in
mov
int
std
cmc
addr16
jmp
sbb
mov
scas
mov
sbb
mov
in
jne
int
sub
pop
ds
cdq
cwde
xchg
inc
js
sahf
mov
stos
sar
sub
adc
cmp
mov
fmulp
test
push
mov
cli
loop
lock
(bad)
adc
mov
pop
arpl
mov
pushf
push
xchg
mov
jne
lea
jg
sbb
mov
sub
or
sar
ret
xchg
(bad)
mov
lea
loop
mov
data16
daa
cmc
xor
xchg
xchg
sahf
cmc
fistp
xchg
xchg
test
jmp
ret
push
pop
cmc
and
push
xor
mov
cld
je
mov
xor
rcr
cs
mov
dec
push
xchg
hlt
cmps
and
out
lahf
enter
into
ret
hlt
(bad)
cld
pop
jmp
es
add
out
or
cmps
es
sub
jns
jge
call
nop
sbb
jno
xor
imul
sahf
addr16
icebp
mov
loope
push
dec
xchg
sbb
jle
add
test
mov
ret
cmp
ror
int
pop
mov
loop
(bad)
cwde
cmp
xor
push
das
sub
mov
in
mov
xchg
das
hlt
pop
cli
sub
in
cli
ins
std
in
stos
repz
mov
shl
cdq
loope
test
sbb
daa
addr16
leave
mov
push
popf
sub
aad
sahf
call
jno
xor
out
jo
pop
fistp
test
sar
jno
(bad)
xchg
dec
js
mov
cmc
shl
aaa
mov
cmp
xchg
clc
sahf
clc
hlt
(bad)
mov
push
xchg
push
dec
mov
test
lea
call
cmps
cmp
xchg
push
into
add
push
cld
and
xchg
outs
mov
jbe
ret
cmp
pop
jle
ja
shl
ds
sbb
inc
mov
mov
retf
adc
fnstcw
inc
out
out
addr16
cmp
or
movs
pop
sub
dec
loop
enter
popa
jmp
sbb
jge
ins
xchg
ret
adc
mov
test
movs
pop
cli
ret
and
enter
xor
jge
adc
add
aas
data16
ror
sbb
fwait
cmp
lds
daa
xchg
scas
dec
cmp
(bad)
in
stos
xchg
into
sub
push
inc
ret
aam
in
int
and
pop
mov
popf
mov
icebp
jecxz
stos
sub
cwde
push
pop
mov
or
xchg
dec
stos
mov
adc
imul
xor
inc
cli
jo
jns
sub
cmp
jmp
push
clc
xchg
int3
cli
test
ja
pop
lea
repnz
inc
out
jle
icebp
and
repz
cld
lods
xchg
mov
mov
and
cmp
repnz
add
push
inc
rcr
hlt
or
pop
adc
add
xchg
movs
inc
add
sar
mov
xchg
add
mov
aam
sub
push
pop
adc
bound
sbb
xor
xchg
jmp
jo
jmp
cmp
in
repz
cmp
lea
xor
std
add
es
imul
xchg
jl
adc
cmp
in
lds
jl
sbb
out
out
jge
sti
fwait
adc
xchg
les
cmps
js
pop
mov
das
(bad)
cmp
cmp
push
jne
lods
mov
sub
mov
call
les
inc
push
loope
lods
jg
xchg
(bad)
and
cmc
pushf
ja
sub
jns
jmp
dec
adc
and
in
dec
and
jge
or
dec
xlat
push
and
aaa
ss
and
pop
call
daa
sti
mov
test
in
aad
inc
ins
sbb
std
xchg
int
loopne
cmp
lds
jmp
fwait
in
and
test
(bad)
fstp
(bad)
in
push
(bad)
mov
add
pop
cmp
xchg
inc
sahf
mov
test
stos
adc
jns
loopne
repnz
mov
and
jecxz
push
push
out
loope
pop
push
dec
and
cmp
and
adc
je
loop
inc
jo
jge
fwait
repz
fdiv
mov
retf
addr16
bound
sub
ret
mov
jmp
jmp
pop
xchg
aaa
enter
sbb
push
jbe
and
outs
inc
sub
sbb
call
test
cld
loopne
ret
mov
jl
sbb
js
or
sbb
outs
fst
les
jle
cmp
mov
mov
shl
xchg
popa
outs
bound
and
fs
xor
jbe
ror
adc
in
lods
jg
xor
mov
fld
es
(bad)
shl
and
push
test
imul
mov
lock
adc
rcr
add
ficom
xchg
dec
dec
outs
mov
pushf
adc
push
js
mov
cmp
pushf
jbe
sub
sub
sub
pop
dec
scas
mov
popf
mov
rol
push
mov
jb
xchg
test
out
push
push
cmp
je
fwait
mov
in
int
mov
pop
sbb
add
xor
imul
hlt
jmp
mov
jb
js
sbb
nop
dec
lods
stos
inc
mov
(bad)
pop
pop
(bad)
xchg
xchg
imul
test
sub
imul
sub
xlat
fstp
in
or
push
cmps
adc
add
and
jge
sbb
mov
aas
stc
mov
sub
(bad)
faddp
mov
(bad)
les
fdivr
xchg
pop
into
xor
mov
ret
xchg
retf
cmc
mov
mov
outs
std
xchg
pop
sub
dec
stos
loopne
xchg
pop
xchg
movs
xchg
in
fistp
ins
push
and
push
bswap
or
pop
cmps
movs
push
jmp
ret
and
pop
mov
xchg
or
sbb
mov
xchg
and
mov
mov
xor
push
pop
ins
sbb
cmp
sbb
retf
js
push
jnp
push
mov
mov
ss
fisubr
sbb
stc
inc
push
sub
push
mov
clc
mov
ret
pop
adc
sub
icebp
pop
xlat
mov
add
or
pop
jg
pop
sbb
int3
aas
in
in
ins
push
(bad)
imul
add
movs
lahf
sbb
dec
test
ret
inc
leave
pop
scas
xchg
sub
jns
repz
adc
mov
loope
xchg
fucomi
xchg
hlt
jecxz
loope
(bad)
in
inc
push
jl
outs
fidiv
push
mov
xchg
push
xor
sti
xchg
(bad)
sub
add
push
mov
cwde
ds
xchg
cmp
out
ret
xchg
push
lea
sbb
xor
mov
out
ret
shr
inc
xchg
add
sbb
jae
sub
loop
mov
mov
out
fs
and
data16
test
fnstcw
retf
xchg
mov
dec
shr
imul
add
dec
xor
in
je
cmc
push
loop
dec
xchg
pop
fwait
push
jg
inc
ins
(bad)
jmp
xchg
jo
or
lahf
retf
mov
push
or
adc
je
sub
std
adc
inc
out
gs
std
out
jge
push
sub
out
adc
lods
sahf
xlat
mov
or
pop
jne
and
push
(bad)
push
lock
jo
(bad)
pusha
or
sbb
retf
clc
add
fs
bnd
add
shl
in
in
lock
aad
add
sub
cmp
inc
lock
ficomp
aas
inc
push
bound
sub
sbb
and
mov
or
mov
pop
sbb
(bad)
and
fs
in
loopne
in
call
add
js
ret
lock
cmp
enter
sub
cmc
aam
adc
fnstenv
pop
and
outs
ins
test
push
sub
sar
xor
push
daa
dec
cmps
je
and
mov
icebp
cmp
jle
sub
test
xor
ins
movs
ret
int
push
mov
cld
mov
mov
xor
mov
jo
mov
cmps
pop
ja
retf
jns
jg
push
and
push
repnz
mov
adc
imul
xor
lock
or
mov
xchg
(bad)
repz
ja
sbb
ror
xchg
mov
(bad)
mov
pop
mov
shr
icebp
push
call
es
les
sub
arpl
cmps
adc
xor
add
xchg
sahf
adc
retf
ret
inc
stos
jne
aas
fimul
sbb
jns
inc
pop
jle
mov
(bad)
cdq
adc
ins
data16
push
add
pop
ss
(bad)
fsubr
ins
push
xor
adc
adc
push
lahf
sbb
ss
out
mov
mov
dec
mov
jbe
pop
pop
xchg
jne
adc
and
add
sbb
push
hlt
js
les
addr16
xor
ror
adc
and
jmp
scas
shr
xchg
mov
push
xchg
dec
push
or
and
adc
or
sub
pop
sub
xchg
lea
fsub
pop
cmps
in
repz
je
outs
push
xor
int
add
test
js
pop
xor
retf
xor
pop
les
jno
pop
jecxz
shl
or
test
dec
mov
and
(bad)
xchg
xor
je
push
mov
mov
add
loope
js
mov
fs
div
mov
fidivr
dec
outs
cmp
hlt
xchg
fcmovu
aad
movs
cld
cld
push
icebp
rol
div
push
mov
rcr
and
xchg
adc
out
loopne
xor
adc
sahf
jmp
mov
cmp
movs
push
retf
fimul
xchg
jnp
xchg
loope
and
mov
add
push
dec
in
fst
add
and
mov
push
sub
jge
call
or
inc
cwde
fisttp
push
adc
xor
adc
xchg
stc
mov
fistp
cmp
sub
xchg
mov
pop
jnp
cwde
ret
mov
ret
les
cdq
cli
cmp
call
push
lock
mov
jns
mov
(bad)
sub
sbb
push
mov
pushf
pop
xchg
(bad)
das
lock
repnz
xor
jp
dec
pop
jne
mov
jbe
ror
test
out
loop
add
jne
ja
xor
or
cmc
pop
and
fistp
inc
in
and
and
xor
out
xor
add
(bad)
cmp
mov
push
jno
mov
mov
jle
mov
xor
mov
pop
or
cmp
sbb
(bad)
or
data16
sub
leave
cmp
ss
fild
inc
adc
pusha
ret
arpl
fdivr
lea
push
jecxz
or
enter
loopne
jae
std
out
mov
and
pop
inc
push
rcl
lea
pusha
lock
cmp
clc
mov
shr
stos
sbb
ja
sbb
jne
call
mov
pusha
adc
push
cmps
xor
lods
ret
ret
mov
cwde
cmp
xchg
xor
push
daa
les
loop
leave
cmps
sub
xchg
iret
popa
dec
div
rol
mov
jmp
xchg
fcos
dec
aam
mov
mov
in
and
sahf
mov
jle
jne
call
in
(bad)
cvtpi2ps
test
push
popa
mov
mov
pop
lea
pop
inc
nop
and
repnz
pop
jg
adc
mov
jmp
lods
jmp
mov
in
add
inc
xor
in
xchg
push
pusha
push
pushf
fistp
cmp
sbb
xchg
arpl
hlt
mov
sub
push
scas
pushf
jmp
dec
and
push
loopne
rcr
fsub
add
xor
and
and
xchg
lods
xor
inc
jmp
imul
ret
fucomi
dec
sub
popf
in
jne
cmp
add
adc
gs
push
jge
icebp
(bad)
and
xchg
gs
xor
mov
xchg
jo
stc
(bad)
clc
dec
lock
and
jns
mov
call
sub
addr16
and
mov
mov
(bad)
mov
in
adc
add
scas
ss
enter
jmp
push
sahf
in
mov
nop
add
jmp
cs
mov
xchg
rsqrtps
mov
imul
mov
push
retf
clc
mov
mov
and
push
sbb
cmc
sub
scas
stos
xchg
pop
cmc
mov
mov
xor
into
push
(bad)
sub
ret
cmps
sbb
inc
add
and
xor
fmul
ret
xchg
xchg
aas
lea
push
cdq
pop
xor
fistp
leave
push
jge
jg
or
xor
test
sub
xchg
icebp
cmp
jae
nop
xchg
test
stos
and
les
(bad)
lahf
jecxz
rcl
jae
jp
mov
test
scas
pop
sub
pop
add
repnz
and
call
or
xchg
test
cwde
js
cmps
out
shl
push
xchg
test
bnd
mov
ins
add
pop
js
imul
add
pop
in
std
ret
inc
dec
les
push
pop
sbb
dec
mov
loopne
jns
ret
cmp
xor
xlat
or
pop
aad
loopne
mov
loop
and
inc
ret
call
sahf
push
std
adc
cmps
inc
call
test
dec
test
aas
jae
lock
(bad)
inc
pop
adc
imul
jnp
int3
pop
xor
shl
fsub
es
ja
jge
jecxz
xor
push
aad
xor
mov
and
clc
add
stc
sbb
stos
pop
jge
jne
fs
cld
inc
pop
inc
mov
es
js
jge
adc
sub
mov
ins
mov
cdq
sub
outs
data16
sub
mov
xchg
imul
inc
loopne
add
dec
xchg
out
aaa
jo
mov
nop
dec
retf
and
idiv
mov
xor
imul
and
mov
out
dec
call
xchg
retf
sub
sub
fbstp
scas
xchg
push
xor
pop
push
inc
push
mov
dec
cmps
sahf
daa
add
push
jl
sbb
pop
cmp
pop
repz
pushf
ss
xor
pusha
in
ret
jmp
movs
push
push
pop
cmps
push
or
pop
popa
daa
lea
shl
sub
std
repz
int3
in
(bad)
xor
(bad)
push
(bad)
mov
cmp
xchg
mov
inc
or
cmc
loope
test
std
pushf
xor
ja
jae
jo
mov
loopne
fild
mov
call
aas
cld
shl
mov
mov
nop
xchg
push
xor
jl
mov
rcl
xor
xchg
jg
rol
ret
jnp
jmp
in
and
scas
ficom
or
in
(bad)
lds
xor
scas
xchg
inc
test
(bad)
(bad)
jns
xchg
inc
jecxz
out
dec
mov
mov
push
or
xor
pop
ins
dec
sbb
aam
(bad)
shr
jns
aaa
cmp
stc
es
sbb
sbb
sbb
pop
out
push
dec
push
push
sbb
pop
xchg
mov
mov
hlt
dec
and
(bad)
ins
mov
rcr
loop
pushf
daa
repnz
pop
aas
and
add
(bad)
xchg
cmp
push
push
rcr
sbb
fwait
(bad)
pusha
xchg
ror
ficom
pop
jmp
mov
movs
push
sub
loop
and
or
adc
adc
gs
jne
xor
movs
jg
add
mov
jge
out
mov
jecxz
sub
xlat
inc
(bad)
nop
push
out
xchg
jae
jo
int
sub
cmp
arpl
iret
shl
outs
hlt
mov
(bad)
fstp
dec
test
js
and
jno
xchg
sbb
lods
pop
jbe
cdq
dec
sbb
cmp
dec
cmp
js
fnstsw
push
test
std
js
pop
cld
jbe
adc
xor
cmc
adc
xor
fstp
pop
dec
loop
inc
jb
push
loopne
aaa
push
mov
cmc
fwait
jg
int3
hlt
and
push
jns
lea
icebp
stc
ds
mov
(bad)
sahf
sub
mov
into
dec
push
mov
mov
rcr
mov
aam
pop
addr16
data16
fistp
addr16
in
lods
push
and
and
xchg
cmp
pop
loopne
cdq
cmc
icebp
data16
sub
nop
jb
xchg
pop
or
loope
daa
adc
cld
xchg
mov
adc
mov
in
sbb
jae
fldcw
sub
retf
xor
int3
je
fild
mov
xchg
test
dec
hlt
sbb
int3
adc
xchg
in
fwait
daa
sahf
xchg
sahf
loop
mov
and
adc
xchg
mov
test
in
popf
pop
fmul
jp
dec
nop
test
jmp
(bad)
ja
mov
sbb
ret
mov
add
sub
shl
scas
adc
outs
mov
add
sbb
xchg
jmp
call
jmp
xor
in
push
xchg
sub
xchg
daa
ret
xor
cmp
adc
jmp
in
mov
cli
inc
jne
iret
sub
popa
stc
stc
push
mov
xchg
xchg
push
and
sub
pusha
pop
mov
xchg
dec
or
ret
xchg
cmp
and
xor
jne
xchg
stos
imul
fst
mov
stc
into
test
fld
jle
cmp
jae
shl
xor
or
fisub
jae
sti
push
sub
lds
push
push
iret
in
push
fild
data16
inc
int3
jne
sbb
pop
pop
xchg
push
mov
mov
stc
xchg
ror
or
xchg
push
cld
adc
ja
(bad)
sub
stc
fisubr
inc
mov
mov
xchg
xchg
out
in
lods
sbb
fcomp
push
sahf
xchg
inc
push
cdq
sub
scas
adc
mov
sub
and
mov
mov
sbb
rol
cdq
dec
jg
lea
fidivr
cmps
ret
add
sub
xchg
pop
pop
mov
push
data16
in
addr16
out
cmps
iret
push
mov
mov
xor
mov
xchg
mov
mov
xchg
sahf
lea
push
xchg
gs
nop
fcmovu
cld
sub
xor
in
xor
cmc
push
pop
jne
xor
push
mov
nop
hlt
pop
push
(bad)
jg
mov
add
xchg
xchg
xchg
inc
and
fimul
xchg
lea
lea
mov
pop
cmp
xor
stos
test
scas
mov
xor
xchg
addr16
stos
xchg
addr16
cmp
add
shr
cmc
retf
xchg
enter
push
jge
push
xchg
iret
mov
sbb
out
jp
adc
outs
or
das
and
imul
or
fiadd
test
jge
fadd
in
jmp
repz
xor
sbb
push
outs
and
and
xchg
data16
pushf
sub
sub
dec
cmp
pop
popf
mov
mov
mov
dec
rol
ds
pop
fst
cld
and
mov
(bad)
adc
jnp
jae
jg
cwde
in
(bad)
push
xchg
cs
popf
fcomp
or
pop
pop
push
jmp
jle
test
sub
xchg
aaa
cmp
test
stc
adc
imul
sub
int3
push
push
pop
xchg
push
adc
mov
adc
sub
lock
mov
jo
test
inc
pop
aam
repz
mov
int3
(bad)
(bad)
add
add
and
test
je
mov
cmc
xor
or
stos
(bad)
and
std
enter
mov
push
adc
mov
repz
sti
jge
sbb
stos
mov
mov
add
push
push
pusha
nop
pop
cmp
add
sub
fsub
xchg
adc
xchg
retf
and
xlat
inc
push
mov
xor
jmp
fwait
pop
inc
sbb
fdiv
xchg
mov
addr16
jns
gs
inc
mov
jne
(bad)
jo
sub
div
xchg
pusha
cmp
pop
push
jmp
pop
cdq
xor
mov
shr
xor
into
jnp
jecxz
push
and
mov
cmc
imul
les
or
mov
mov
imul
out
ds
jo
push
cmp
nop
push
call
ins
scas
lahf
popf
aad
dec
cdq
lock
adc
repz
popf
inc
shl
sbb
push
cmp
jne
mov
pop
scas
xor
xchg
mov
je
retf
stc
jne
cmp
push
aam
and
push
fsub
pop
popf
jecxz
sahf
adc
mov
je
lods
jmp
mov
add
xor
mov
imul
in
movs
(bad)
and
pop
fsubp
mov
add
mov
jnp
loop
rcr
dec
mov
mov
inc
add
push
adc
in
adc
xlat
ja
and
and
dec
fs
rol
fsubr
and
call
shl
aaa
je
inc
inc
dec
mov
sar
loope
dec
mov
(bad)
fmul
mov
stc
les
je
mov
mov
jecxz
lock
aas
push
push
aad
xchg
nop
lods
jmp
outs
adc
mov
or
fwait
xor
mov
pop
xchg
xchg
daa
adc
pop
xor
sbb
mov
inc
cmp
mov
add
movs
(bad)
les
imul
xchg
mov
xchg
leave
push
and
inc
mov
or
mov
inc
into
addr16
xchg
mov
fs
into
xor
shl
scas
ficom
sbb
fst
in
adc
cmc
push
mov
icebp
loopne
mov
mov
cmp
jne
sub
push
add
sbb
or
xor
nop
(bad)
push
icebp
inc
mov
mov
add
loope
pusha
jmp
xchg
pop
sub
pushf
mov
nop
jge
fisubr
push
xchg
cmp
adc
call
js
scas
pop
jg
pushf
jnp
inc
xor
sub
and
xchg
sub
push
xor
mov
bound
aam
pushf
jnp
mov
in
je
adc
pop
push
mov
rcl
pop
mov
xchg
popa
imul
imul
das
fstp
sbb
pusha
push
(bad)
mov
jmp
sbb
clc
push
xchg
jne
es
sub
es
hlt
mov
jo
bound
and
pop
loopne
dec
xchg
sbb
mov
in
out
jl
mov
(bad)
clc
ss
cli
imul
cmp
xchg
mov
pushw
jns
jae
test
jo
leave
and
sub
test
xchg
push
jle
bound
mov
inc
dec
fcmove
push
adc
xor
dec
hlt
lods
fcomp
cmp
(bad)
xchg
or
dec
fst
les
push
xchg
xchg
mov
test
xchg
not
sub
push
pop
into
mov
xchg
xchg
std
arpl
jb
daa
cmp
dec
push
sub
ret
les
inc
(bad)
fdivr
mov
or
jno
in
mov
mov
cmps
pop
sbb
pop
mov
(bad)
ins
or
ss
mov
lock
or
inc
jbe
xchg
int3
pop
mov
mov
push
sub
inc
push
mov
add
mov
mov
jae
aam
xlat
sub
lock
loope
jno
mov
dec
(bad)
stc
pop
dec
add
test
out
sub
out
movs
pop
out
in
imul
or
mov
call
pop
add
mov
in
(bad)
pop
(bad)
sbb
mov
loop
jmp
sub
scas
cmp
jp
xchg
ins
or
inc
cld
mov
pop
rcr
test
shl
jae
add
sahf
dec
popf
shr
enter
call
cmp
xlat
sub
sar
outs
jne
ror
in
sti
jo
ret
dec
mov
jb
je
loop
fs
mov
fwait
or
and
mov
xor
not
xchg
cmps
imul
mov
test
imul
je
xor
push
sub
jo
outs
push
mov
inc
(bad)
xchg
in
jne
mov
pop
std
cmp
scas
outs
ins
mov
mov
mov
enter
(bad)
cmp
add
mov
add
sub
in
cmp
jp
add
int3
sbb
sti
add
add
jp
pop
cmp
jb
xchg
xchg
xchg
(bad)
icebp
sbb
adc
sar
pop
jne
push
aad
mov
cmp
js
test
pop
xchg
mov
mov
test
and
retf
add
inc
pop
imul
(bad)
test
movs
dec
mov
test
xor
pusha
push
retf
or
or
out
xchg
loopne
daa
adc
sub
fist
push
jecxz
cmp
mov
ja
pop
cmp
movs
sub
shl
inc
loope
test
and
xchg
test
ss
adc
sub
cmp
ror
mov
test
mov
out
addr16
outs
cli
jb
or
icebp
js
jbe
lods
leave
jno
mov
cs
fbstp
pop
pop
popf
out
mov
clc
in
xchg
mov
pop
jne
pusha
jns
sub
sub
call
push
mov
xchg
(bad)
fldenv
fidiv
ret
jne
(bad)
jns
cmp
icebp
dec
int
(bad)
rol
push
xchg
xor
nop
adc
pop
jl
jecxz
icebp
pusha
leave
and
push
push
pop
mov
jmp
das
and
adc
(bad)
push
pusha
add
in
stc
mov
stos
call
cmp
loopne
dec
std
sub
mov
adc
xchg
fstp
xchg
inc
pop
jb
push
sbb
fidivr
jmp
inc
sbb
dec
mov
sub
movs
aas
stos
js
xchg
mov
mov
xchg
mov
mov
outs
adc
pop
fmul
les
sbb
push
test
je
xchg
adc
inc
cdq
push
vmovapd
arpl
pusha
add
fadd
popf
cmp
push
cmps
jno
pop
jae
mov
inc
or
adc
cld
jnp
cmp
mov
mov
fdivr
imul
xchg
in
xchg
push
mov
clc
pop
inc
aaa
and
call
push
into
dec
lds
sbb
adc
neg
xor
or
cmc
adc
fwait
movs
sub
loop
leave
sbb
jne
fidiv
jo
adc
cmps
ins
mov
jnp
cli
mov
xchg
mov
sbb
sub
dec
or
outs
adc
jp
dec
mov
lea
xor
adc
cmc
mov
mov
sar
rol
in
xor
sub
into
jecxz
add
push
inc
push
mov
(bad)
sbb
jle
ja
ss
test
es
dec
stos
jecxz
inc
and
jno
mov
rcpps
add
int
or
mov
mov
mov
or
rol
inc
fcom
jmp
out
xchg
push
jb
daa
pop
dec
push
(bad)
sub
add
arpl
das
hlt
and
push
xchg
cmp
pop
dec
aam
aam
stos
jg
jmp
std
mov
push
ds
jae
cmp
loopne
retf
inc
sbb
push
popa
and
mov
cmc
les
int3
and
pop
clc
sub
mov
mov
or
inc
loop
mov
jl
stc
adc
int
inc
adc
sbb
out
xor
je
cmps
jge
daa
repnz
push
ins
cmps
outs
mov
fwait
addr16
pop
test
mov
add
pop
test
jecxz
ss
push
out
fcomp
out
das
(bad)
jle
and
mov
pop
and
cmp
out
cmps
cmc
test
sti
gs
lds
jl
mov
adc
jmp
xchg
mov
mov
mov
fistp
cmp
jecxz
cs
mov
push
ds
cmc
xchg
repnz
add
or
sbb
cmc
push
cmp
or
(bad)
jno
add
test
mov
retf
es
xor
mov
hlt
or
fdiv
push
cs
push
mov
or
jp
mov
movs
cli
adc
loope
pop
or
retf
sub
sti
jl
and
jl
or
or
clc
inc
add
stos
sub
and
fstp
aas
repnz
xchg
dec
xor
dec
sub
ror
and
ret
call
pop
cdq
jmp
sbb
das
push
push
div
and
inc
xchg
enter
pushf
icebp
lds
sbb
push
(bad)
jns
out
mov
push
scas
(bad)
sub
mov
jno
rcl
je
scas
xor
jnp
pop
jo
mov
xor
(bad)
pop
xchg
xchg
das
push
jl
adc
and
xchg
bound
(bad)
std
pop
mov
pop
jl
push
sub
cld
dec
icebp
repz
iret
pusha
sbb
pushf
mov
inc
xchg
loope
mov
jp
hlt
mov
adc
mov
push
or
xor
mov
int
or
mov
adc
cld
pop
push
test
in
xchg
dec
repz
jmp
cmps
cmp
push
push
retf
mov
ja
ins
or
test
mov
cmps
fcomp
cwde
push
lods
or
push
jmp
pop
mov
xchg
dec
xchg
mov
xchg
inc
dec
mov
gs
mov
fs
je
out
adc
addr16
sub
inc
test
sub
jp
out
sbb
ss
xchg
adc
xlat
test
rcr
mov
outs
adc
call
pop
mov
mov
outs
push
jbe
or
xchg
(bad)
cmps
(bad)
xchg
push
and
sub
xor
pop
mov
and
or
es
xor
ins
out
pop
ret
cmp
xchg
mov
cmp
add
into
mov
push
mov
add
or
scas
mov
xlat
cmps
jnp
outs
cld
cwde
retf
cmp
jp
pop
jo
idiv
xchg
mov
dec
xchg
sub
xchg
arpl
cwde
(bad)
push
fldenv
xchg
out
cld
nop
xor
jmp
sub
cmc
xchg
fadd
stos
test
daa
jmp
les
data16
loopne
je
and
mov
leave
aad
dec
stc
repz
sbb
es
pop
mov
rol
cmps
popa
test
push
mov
jl
out
mov
ret
ds
fild
(bad)
xlat
in
xchg
fcomp
mov
dec
into
cmp
fisttp
fsubr
sub
add
and
outs
dec
xor
in
daa
xchg
icebp
(bad)
sbb
shl
mov
bound
push
dec
rcr
pop
and
popf
or
sbb
dec
add
cli
push
mov
inc
ja
mov
add
pop
or
adc
xchg
push
xchg
fst
inc
jl
push
fld
xchg
ins
mov
stos
jmp
(bad)
popf
and
idiv
push
lock
int3
lock
mov
dec
sub
xchg
cmps
or
hlt
js
pop
jbe
and
jp
and
push
xor
jmp
jbe
scas
stos
(bad)
dec
xchg
push
in
sbb
fcomp
mov
lea
in
pop
jb
sbb
adc
xchg
sahf
pop
cmp
fsub
(bad)
int
mov
(bad)
leave
test
adc
addr16
retf
cmc
sub
add
lods
or
retf
or
xchg
in
jbe
mov
mov
cmp
pushf
sbb
cmc
out
push
jp
mov
cmp
scas
sub
pop
leave
push
pop
cmps
fsub
xchg
mov
dec
js
pop
arpl
adc
in
add
cmp
pop
addr16
xchg
pop
hlt
jno
cmp
push
daa
aas
xchg
push
xor
dec
icebp
ret
dec
xchg
xchg
call
mov
jle
inc
and
movs
ja
imul
push
xchg
mov
je
jmp
add
cmp
or
xor
lea
add
push
push
mov
mov
cmp
jp
mov
and
adc
fisub
push
adc
aad
cmp
mov
(bad)
xor
int3
push
test
cmp
inc
es
ror
and
sbb
mov
jle
test
call
inc
jmp
jns
xchg
jmp
js
xor
call
push
push
pop
xor
add
pop
in
sub
enter
mov
and
dec
mov
mov
adc
std
das
fcom
sbb
xor
mov
xor
push
scas
and
(bad)
jp
mov
xchg
imul
inc
in
mov
sbb
pop
mov
fsub
or
loopne
bound
aas
(bad)
daa
ror
movs
jno
mov
lods
and
xor
movd
out
push
pop
cmp
les
xchg
test
(bad)
clc
nop
xchg
test
add
jns
add
pop
ret
retf
jecxz
loopne
scas
push
daa
dec
js
jne
xchg
shl
ss
es
xchg
xchg
out
outs
sbb
sbb
jne
cmp
cmps
push
xchg
test
xchg
dec
sub
jge
in
test
sub
loopne
xchg
push
es
mov
pop
dec
out
or
dec
repz
jne
ror
ror
aaa
pop
mov
test
pop
and
jge
dec
pop
aam
inc
lods
xor
push
das
mov
mov
test
add
stos
xchg
dec
imul
mov
mov
es
(bad)
fldenv
sbb
jb
fiadd
dec
mov
pop
dec
jo
fst
push
mov
fs
js
or
lea
icebp
imul
nop
inc
ins
mov
sub
pop
in
popf
xor
and
mov
cmp
xchg
sbb
les
cmc
and
loopne
cld
test
sar
test
jae
pop
and
cmc
push
xor
pusha
xor
pusha
jle
jg
loopne
dec
fst
xchg
and
cmp
xor
dec
and
cmp
sbb
mov
jmp
adc
(bad)
push
lods
addr16
out
imul
add
xchg
les
jno
xor
pop
push
enter
push
test
xchg
or
adc
loopne
mov
sub
dec
sbb
xlat
xor
pop
mov
adc
shr
aas
ret
or
dec
mov
xchg
shl
dec
sti
inc
shr
js
out
jbe
icebp
enter
xchg
pop
clc
arpl
sbb
adc
loopne
ud0
mov
mov
pop
ja
jle
mov
pusha
sbb
jp
(bad)
and
xchg
pop
mov
push
cld
mov
in
fs
pusha
sub
mov
ror
xor
mov
xor
fadd
adc
test
add
clc
push
or
xchg
adc
(bad)
jns
out
rcr
inc
jne
dec
fisubr
push
add
sbb
test
add
cld
fidivr
adc
mov
jp
mov
daa
cld
aad
adc
mov
adc
xchg
loope
and
pusha
jp
imul
es
cmp
jns
icebp
loop
pop
stos
jecxz
outs
sti
add
mov
fwait
push
jbe
cwde
enter
out
cs
xchg
sub
xchg
adc
hlt
push
mov
cmc
cmp
call
addr16
pop
addr16
repz
dec
xor
sub
jle
push
nop
xor
aad
in
mov
xchg
or
inc
dec
adc
sbb
test
mov
call
sub
dec
xor
mov
pop
xchg
les
cwde
test
ror
sti
cs
mov
es
popf
ficom
xchg
mov
std
push
add
adc
out
push
inc
test
pop
std
sbb
inc
aaa
scas
fst
hlt
xchg
jl
mov
add
out
jg
dec
pop
pop
cwde
ret
in
xor
jecxz
add
add
dec
cmp
add
xlat
sbb
loop
pop
push
jg
pop
arpl
(bad)
xor
push
movs
ffree
fs
mov
cmc
xor
lea
xchg
jbe
push
jo
xor
in
cs
mov
es
enter
les
inc
push
in
inc
lds
test
sbb
cmc
xor
cli
mov
or
mov
xor
out
xor
and
push
inc
mov
mov
and
fcmovnbe
les
js
push
int
addr16
xchg
xchg
call
push
in
ret
mov
mov
dec
stos
xlat
stos
or
out
(bad)
loop
out
stos
sbb
pop
mov
imul
inc
je
mov
loope
jns
sbb
mov
jne
sbb
adc
or
sub
xchg
fdiv
aam
xchg
iret
and
outs
push
jle
and
lods
adc
lea
es
(bad)
clc
cvtpi2ps
jmp
push
sub
jns
add
xor
retf
pop
jl
mov
push
call
sub
mov
jecxz
es
adc
add
jo
fdivr
adc
xchg
dec
mov
(bad)
and
cmc
jecxz
mov
dec
test
imul
repz
xchg
fistp
push
sub
out
(bad)
jo
lea
pop
or
jae
xchg
(bad)
sub
mov
call
fstp
adc
jnp
loop
in
pusha
sbb
push
ds
mov
sub
push
ret
pop
jecxz
adc
jne
xor
imul
rcl
xchg
mov
lods
pop
je
rol
enter
pop
and
adc
aas
pop
sahf
pop
ror
mov
xor
push
daa
sub
sar
mov
retf
js
addr16
sbb
xchg
fs
frstor
lock
call
sbb
stos
ret
xchg
push
in
or
sar
sub
dec
outs
dec
pop
dec
imul
(bad)
adc
inc
sub
xor
jmp
dec
js
mov
jne
int
aas
mov
push
xchg
(bad)
add
and
fmulp
call
push
daa
call
push
mov
fs
xor
cmp
and
out
shl
mov
adc
enter
and
out
add
xchg
dec
and
lds
push
mov
daa
arpl
mov
jb
imul
adc
repnz
and
mov
mov
cmc
mov
imul
call
lea
ret
ds
xlat
js
cwde
dec
mov
sub
clc
push
ret
jp
cmp
or
jecxz
loop
bound
stc
movs
xchg
xchg
loope
pand
retf
sub
std
push
outs
retf
(bad)
aad
std
xor
sub
shr
(bad)
int
add
cdq
xchg
ror
adc
cmp
test
push
aam
xchg
mov
xchg
pop
jge
test
sar
push
inc
jns
dec
add
(bad)
lods
imul
cwde
cmp
push
mov
add
and
rcr
cmc
mov
daa
sub
cmp
inc
int
ror
mov
push
adc
js
call
jne
cmp
daa
mov
je
sar
xchg
cmp
xor
jne
and
push
mov
ror
jns
xchg
data16
loop
sub
in
mov
mov
(bad)
pop
sub
adc
jae
in
outs
rol
mov
mov
jge
inc
xor
hlt
stos
cmp
int3
and
mov
out
call
mov
dec
js
sbb
loope
cld
sbb
cld
arpl
xchg
mov
les
fs
inc
(bad)
into
xchg
jge
jo
lds
mov
pop
hlt
pusha
or
push
pop
das
outs
(bad)
jbe
sti
cmps
jae
dec
fisttp
fimul
and
add
xchg
cmp
lds
push
xchg
sti
jae
push
int3
sub
xor
and
ss
push
icebp
xor
call
mov
arpl
jbe
inc
icebp
iret
cwde
mov
xchg
cmp
movs
das
lods
xchg
xor
stc
mov
ficomp
pop
loopne
dec
mov
outs
dec
int3
mov
inc
not
lods
pop
test
imul
jl
mov
sbb
(bad)
xchg
call
sbb
(bad)
stos
cmp
sbb
rcr
cmp
outs
in
mov
mov
sbb
or
clc
push
mov
icebp
cmp
cmp
ss
test
jae
out
cmc
jmp
sub
inc
adc
fdivr
icebp
adc
cmp
cmp
movs
jo
push
sub
fnsave
pop
sub
xor
jg
adc
call
std
pop
scas
push
mov
cmp
mov
cdq
mov
lds
push
xchg
aam
xchg
dec
outs
lods
xchg
sub
jbe
retf
mov
xchg
sbb
jp
outs
mov
repz
and
push
dec
sbb
shl
and
push
test
rcl
imul
sub
xor
jmp
push
(bad)
clc
cmp
and
add
sub
jne
ret
sahf
cli
inc
cli
(bad)
(bad)
jge
pop
(bad)
sbb
retf
mov
nop
in
xchg
pop
outs
xchg
sbb
fucom
cli
cmp
stos
pop
call
aas
frstor
fisubr
jb
les
cmp
sbb
loopne
nop
popa
aam
mov
sub
setae
mov
daa
push
sub
adc
mov
ret
mov
cmp
add
cmp
and
cmps
sub
dec
mov
sub
sahf
mov
je
(bad)
adc
in
ret
jp
(bad)
jae
push
jnp
xchg
xlat
xchg
sbb
or
and
ror
cwde
cmp
movs
addr16
(bad)
pop
std
ret
sbb
bound
bound
xlat
or
jbe
push
adc
cmp
(bad)
shl
pop
sub
dec
push
and
mov
gs
(bad)
mov
clc
lea
idiv
and
mov
mov
jne
add
mov
daa
xor
xchg
push
cmp
test
push
cwde
outs
sti
cs
xlat
mov
bound
test
sub
add
addr16
jmp
in
xor
mov
dec
jne
out
out
sbb
stos
ret
cmp
cmc
icebp
js
(bad)
out
adc
jmp
jmp
(bad)
jg
jno
in
sub
pushf
jo
fs
(bad)
repnz
mov
icebp
push
jne
sub
mov
fs
dec
stos
cld
inc
sti
rol
sbb
sbb
daa
xor
mov
sbb
sbb
cs
call
inc
fsubr
dec
gs
xchg
pop
xor
pop
cmc
js
and
add
loopne
(bad)
test
call
jmp
ret
lods
jno
sub
xchg
scas
jmp
ds
ret
xchg
dec
std
push
fcom
jae
sub
inc
cmps
cmc
loopne
out
xchg
cmp
xchg
cmp
gs
or
xlat
call
js
mov
cmc
push
je
pop
in
push
jge
ficomp
or
pusha
ffreep
jmp
xchg
sar
call
data16
stos
(bad)
xor
sub
mov
cmp
fs
adc
and
jecxz
test
xor
fst
into
jge
xor
in
stos
ja
sti
push
lahf
outs
cmp
sbb
sbb
popa
jle
sbb
xchg
xchg
push
fisubr
out
ins
or
cli
in
dec
ds
add
mov
fs
jle
mov
mov
xchg
lock
jb
sbb
push
js
xchg
pop
dec
mov
jnp
xor
push
cmp
lods
jp
mov
clc
push
xlat
aam
dec
lahf
pusha
or
retf
mov
js
scas
retf
or
into
(bad)
fcom
aas
xchg
(bad)
mov
push
pop
fld
and
rol
pop
dec
and
and
push
daa
(bad)
loope
adc
sub
call
xor
imul
mov
lock
shl
outs
daa
dec
mov
pop
cmp
ins
xchg
pop
pop
cmp
stos
leave
jle
jb
mov
or
outs
in
dec
rcl
pop
ins
(bad)
mov
fcomip
imul
sub
out
popf
push
inc
int
(bad)
fcomi
jns
outs
loope
fsub
dec
mov
and
push
xchg
jmp
cmp
sub
and
lock
jp
lds
js
jle
mov
sub
into
data16
inc
xchg
test
jno
js
or
adc
cmp
push
xchg
jge
loopne
shl
cmp
adc
out
xchg
lods
dec
or
cmps
adc
cli
push
sti
sbb
jle
cmc
mov
pop
mov
mov
aad
cli
inc
sub
stos
in
sbb
mov
dec
push
cmp
xchg
pop
out
adc
lock
leave
test
xor
mov
pusha
cmp
imul
xchg
gs
pop
jb
fcomi
mov
scas
mov
(bad)
std
xchg
cdq
push
cmp
inc
push
jne
jae
xchg
mov
jmp
imul
pusha
je
lea
scas
jbe
pop
cld
sub
or
iret
(bad)
icebp
cmp
mov
xchg
xor
push
cmp
jle
inc
sar
sti
loop
test
nop
mov
jp
pop
loope
outs
icebp
inc
test
xchg
jae
(bad)
leave
jp
cmp
jmp
xchg
cwde
mov
sub
mov
sub
adc
hlt
aaa
cmp
mov
loopne
mov
nop
rcl
or
out
inc
mov
das
out
xchg
pop
movs
xchg
int
popf
or
mov
push
mov
jmp
sbb
in
pop
sbb
mov
inc
stc
sub
push
enter
ret
fdiv
cld
push
mov
mov
sbb
call
adc
push
addr16
inc
std
test
sub
ret
mov
test
sbb
mov
pop
stos
(bad)
fbld
cmp
xchg
dec
(bad)
adc
inc
clc
sbb
bound
xchg
pop
sub
lahf
stc
xchg
jle
cs
cmp
in
xor
iret
out
mov
jnp
xchg
aas
cmp
xor
call
in
loope
adc
call
movs
and
cld
ins
adc
in
push
loopne
jg
sbb
sbb
cmps
lods
(bad)
push
into
pop
dec
jo
xchg
(bad)
or
ja
push
mov
mov
mov
rol
jnp
fs
(bad)
test
sbb
ins
push
push
inc
xor
(bad)
or
xor
xlat
or
repz
nop
push
std
xchg
xor
adc
cli
mov
add
jmp
dec
sbb
popf
jnp
ja
push
mov
xchg
out
ds
stos
sub
push
xor
sbb
lods
inc
mov
mov
pop
jnp
adc
mov
in
cs
cmps
das
das
pushf
sub
xlat
mov
adc
lds
(bad)
test
aaa
adc
clc
adc
add
in
icebp
dec
fisub
xchg
fwait
dec
cs
add
xchg
std
les
push
ins
sub
sbb
fstp
dec
cmc
add
fdivr
mov
and
sub
leave
(bad)
pop
dec
sar
jmp
pop
out
xchg
aaa
call
lahf
sti
pop
ficom
(bad)
imul
(bad)
pop
dec
xor
data16
out
sub
fstp
push
mov
mov
repz
and
fidivr
cmp
push
popf
test
push
jno
ss
in
jne
push
pop
fnstenv
push
xchg
inc
jg
lea
cmp
push
mov
jns
xchg
jp
cmp
push
jge
test
aas
fs
xchg
mov
lds
(bad)
cmp
int3
mov
stc
sbb
repnz
xchg
or
sti
repz
push
xchg
ins
mov
(bad)
mov
out
sbb
mov
out
mov
mov
leavew
jmp
outs
xlat
xor
add
push
data16
sub
ret
jbe
js
pop
mov
(bad)
cli
cmc
sbb
jmp
mov
jmp
cwde
pop
jo
xchg
cmp
aad
imul
lods
(bad)
(bad)
je
std
dec
xchg
lods
mov
stos
pop
mov
or
into
pop
add
iret
jle
sbb
es
or
mov
cmp
retf
(bad)
mov
inc
push
in
lods
test
(bad)
ficomp
int3
sahf
adc
xchg
and
fst
lock
je
pusha
imul
xchg
fcom
test
dec
push
add
mov
mov
dec
mov
test
cld
sub
jns
sbb
test
push
js
inc
jp
cs
push
or
fcom
push
test
sahf
jae
push
mov
xor
fs
test
call
jmp
ror
dec
outs
push
push
pop
popf
cmp
mov
sub
or
pusha
add
xor
mov
mov
cmp
mov
adc
fild
cmp
push
cmp
mov
nop
and
push
test
outs
(bad)
jns
repz
xor
dec
sub
add
cmp
movs
pop
repz
jg
fnstsw
daa
aam
mov
ror
lahf
mov
xchg
xor
sbb
push
inc
imul
cmp
xor
rol
enter
inc
jmp
std
ds
ins
and
stc
or
dec
xchg
cmp
fadd
ins
pop
pushf
pop
mov
cmp
push
pop
out
dec
sub
xchg
loope
cwde
lea
outs
mov
pusha
(bad)
add
dec
xchg
xchg
ret
(bad)
push
add
push
sub
mov
jnp
int
xchg
(bad)
fimul
jecxz
test
and
mov
adc
sub
fcomi
js
rcl
push
stc
jmp
retf
dec
mov
push
pop
int3
cmc
pop
std
mov
adc
(bad)
fdivr
mov
sub
push
cmp
xchg
xchg
dec
xor
mov
add
ins
push
(bad)
pusha
std
dec
hlt
xchg
leave
mov
sbb
xchg
lods
adc
cmp
pop
fiadd
jnp
imul
and
add
cmp
xchg
jmp
out
ret
cmps
push
adc
in
(bad)
test
cmp
xchg
xchg
sub
shl
jmp
out
xchg
mov
or
or
pop
inc
or
loop
xor
movs
addr16
test
retf
std
sub
mov
xlat
fistp
popa
ins
aam
adc
adc
push
rol
das
xchg
sbb
cli
add
loopne
push
sbb
or
cs
popf
mov
movs
add
sub
ret
adc
add
or
inc
out
imul
xchg
fwait
xchg
lahf
mov
and
mov
xor
lds
cmp
out
data16
pop
add
stos
and
mov
dec
mov
push
mov
or
fstp
pop
cmp
imul
cs
sub
cs
push
or
(bad)
cmp
or
les
push
fadd
cld
cmp
or
mov
les
push
xchg
and
mov
mov
jne
jmp
je
out
aad
xchg
(bad)
jp
outs
lahf
xor
inc
fxch
inc
jo
mov
pushf
push
outs
das
pop
add
pop
ins
imul
push
repnz
inc
jg
cmp
dec
fidiv
ret
cmp
lea
sub
inc
xor
ret
mov
push
stc
sar
into
nop
dec
aam
(bad)
cmp
test
mov
fsub
stc
sub
xchg
mov
mov
adc
mov
pop
xchg
clc
and
add
xlat
push
add
pop
out
ror
mov
sub
sbb
mov
outs
es
xlat
test
or
fmul
repz
or
sub
cmp
dec
data16
shr
xor
xlat
unpckhps
mov
sub
xchg
mov
loope
ins
push
stc
inc
(bad)
cli
xchg
cdq
inc
adc
xchg
jae
outs
lods
dec
pop
fist
dec
aam
stos
ror
cmp
dec
pop
push
dec
sub
cmp
mov
mov
shl
dec
mov
jge
cmp
dec
xlat
lods
icebp
pop
lea
imul
rol
pop
pop
aad
push
test
dec
adc
cmps
pusha
mov
aad
jo
or
in
iret
push
ins
push
mov
imul
and
cmc
hlt
xor
push
xchg
mov
ret
sahf
mov
sub
xchg
add
loope
adc
xor
out
icebp
jns
call
push
mov
call
mov
pop
sub
shl
movs
inc
js
mov
mov
lods
ret
(bad)
inc
sub
mov
mov
test
mov
jecxz
ins
movs
xchg
rcr
sub
jmp
lahf
daa
ret
test
out
xchg
mov
arpl
icebp
sbb
xchg
dec
jmp
pop
push
mov
test
imul
sub
in
enter
lock
sbb
add
sbb
push
jmp
add
(bad)
mov
in
ss
in
dec
adc
and
or
call
mov
jo
and
mov
repz
inc
sbb
xchg
popa
mov
pop
scas
push
cmp
data16
and
sub
mov
pop
fisub
push
xor
imul
sbb
js
cmp
push
and
je
les
clc
mov
ins
and
fimul
xlat
jmp
xor
pop
loope
popa
xchg
sub
pop
add
cmp
add
pop
in
out
sub
sbb
(bad)
xor
call
outs
fmul
sar
push
mov
sbb
call
adc
xchg
add
es
and
jmp
jns
daa
xchg
movs
jne
in
jmp
aas
sub
jg
mov
and
mov
scas
int
xchg
jb
int3
out
mov
cld
mov
mov
lock
or
sub
xor
imul
imul
xlat
dec
and
sub
cli
mov
scas
ss
out
add
pop
mov
hlt
idiv
jl
pusha
jmp
mov
out
push
mov
mov
loopne
sar
fdivr
cmp
pop
ins
cwde
sbb
xchg
and
adc
rol
imul
lock
(bad)
sbb
div
xchg
jmp
inc
xor
or
cs
push
mov
leave
and
jne
jnp
pusha
ins
aam
dec
dec
imul
cdq
loopne
jmp
(bad)
rol
mov
(bad)
sub
es
test
call
jo
call
scas
jp
shl
cmp
ja
cmc
mov
cmp
fs
xor
out
fisubr
mov
jmp
and
jns
mov
sub
xchg
xchg
add
iret
jge
(bad)
jns
sbb
std
popf
test
xchg
cld
adc
cmp
lock
sub
and
hlt
out
push
pushfw
jle
retf
xchg
push
inc
sbb
cmps
and
xor
dec
loopne
adc
add
xor
xor
push
lods
inc
and
iret
or
jg
aam
lods
push
repnz
jge
xchg
sar
mov
fucomip
pop
and
sbb
add
sar
loopne
pop
pop
mov
dec
sub
pushf
xor
push
push
sub
loop
sbb
mov
movs
xchg
cmc
call
jo
jae
adc
repnz
retf
movs
cwde
jno
mov
lahf
(bad)
sti
cmps
fdiv
add
jne
daa
pop
pushw
jae
(bad)
pushf
cmp
mov
sbb
xchg
les
rep
xor
jnp
sub
shr
scas
jp
test
cmp
inc
cmp
push
aam
push
mov
fcomp
and
jns
mov
pop
pop
dec
pushf
jle
xchg
push
enter
mov
jbe
and
jp
adc
cli
test
dec
sub
dec
jo
add
xchg
dec
mov
ret
pop
cmp
inc
test
xor
cmp
and
pop
mov
xchg
(bad)
push
sub
push
sar
mov
clc
fdivr
sahf
push
jl
mov
sar
adc
inc
dec
fdivr
cmp
inc
or
out
mov
fsubr
or
jle
push
sub
cmps
jle
add
imul
lods
cmp
xchg
retf
mov
loope
dec
dec
stos
ret
popf
imul
xchg
jl
pop
push
outs
pop
xchg
(bad)
push
jmp
loopne
sbb
fmul
repz
sub
or
ret
xchg
inc
mov
fild
lods
pop
jbe
test
mov
add
mov
mov
leave
sbb
sub
leave
push
sub
and
jl
sub
mov
mov
mov
fs
pop
mov
add
sbb
movs
xor
in
and
std
jg
pcmpgtw
sbb
cmps
xchg
aas
or
xchg
jbe
sub
mov
mov
xchg
pop
mov
int3
loop
addr16
mov
mov
cmp
xchg
mov
cmp
nop
shl
sbb
idiv
data16
xor
stc
ret
in
addr16
push
retf
ins
xor
push
movs
mov
xor
pusha
xor
inc
xchg
xchg
aad
mov
cmp
mov
aaa
inc
jmp
lea
pop
fst
dec
pushf
imul
inc
jmp
jmp
lock
push
jl
pusha
xchg
pop
cmps
mov
xchg
test
jg
mov
add
dec
fmul
cmp
push
adc
add
mov
cmp
stc
cmps
inc
retf
or
xchg
push
mov
stc
jmp
push
sbb
shl
xor
bound
push
jmp
stos
cmc
mov
ja
cmp
jne
sub
pop
push
call
imul
or
mov
add
pop
jns
xchg
cmp
loopne
lock
xchg
add
aaa
fist
popa
add
jmp
cmp
mov
je
sbb
lock
test
mov
dec
das
sub
pop
in
push
loopne
push
retf
in
pop
xchg
in
jmp
sbb
ret
mov
hlt
pushf
xor
in
aad
fwait
sbb
push
scas
fs
int3
fdiv
pop
scas
or
add
jp
rcl
call
and
(bad)
pushf
fisttp
or
push
sbb
dec
push
arpl
xchg
dec
push
or
sahf
and
jno
inc
cmp
adc
out
fld
dec
sub
lahf
xchg
push
xor
cli
mov
xchg
lds
dec
push
loop
test
mov
loope
cli
pop
jecxz
or
mov
cmp
pop
cmp
scas
sub
rcr
sahf
cmp
(bad)
std
jp
pop
inc
push
xchg
out
test
xchg
jp
xchg
mov
jae
pop
or
inc
dec
mov
or
pop
ins
mov
cmc
pop
cmp
pop
add
(bad)
hlt
shr
cld
jge
adc
add
shl
jae
xor
inc
push
rcl
pusha
pushf
adc
ss
and
jg
xchg
daa
xor
jle
in
in
xchg
mov
arpl
sbb
hlt
push
ins
cmp
in
dec
jne
lds
push
add
jno
(bad)
and
fwait
sbb
push
inc
mov
imul
loopne
sub
pushf
sbb
sbb
rcr
enter
jae
sub
lods
in
pop
ret
call
lea
out
loop
(bad)
fcmovbe
and
sti
jb
jle
xor
push
daa
pushf
js
les
jae
lds
aas
sub
(bad)
cmp
(bad)
push
mov
xchg
mov
lock
xchg
inc
jae
xor
jns
inc
(bad)
xlat
sub
cdq
mov
inc
cmc
dec
pop
call
repz
movs
push
stc
fimul
addr16
cld
push
in
jmp
jne
mov
or
pop
ins
pop
stos
cmc
inc
xchg
popa
js
push
out
(bad)
bnd
aad
cmp
in
jbe
ror
push
mov
fisubr
sub
addr16
inc
test
sub
lock
cmps
xchg
mov
hlt
addr16
lahf
xchg
cdq
adc
pop
push
mov
loope
inc
sub
loop
or
or
dec
xchg
sub
push
xor
push
jae
jg
stos
jbe
leave
in
shl
div
jae
fadd
jmp
mov
xor
mov
adc
stos
pop
sbb
inc
push
adc
jae
leave
test
test
(bad)
je
push
inc
and
rcl
addr16
jp
fwait
repz
xchg
sti
fild
adc
popa
in
shr
sbb
test
push
sbb
jmp
lock
in
push
lahf
mov
add
dec
retf
jae
hlt
sti
push
ret
inc
mov
lds
(bad)
fucomp
mov
mov
add
out
xchg
sub
mov
js
and
fdivr
cmp
jp
add
push
add
jne
xchg
rol
sub
cdq
or
mov
jno
(bad)
xchg
mov
and
leave
sbb
in
push
mov
ins
fild
test
retf
pop
or
fsub
mov
movs
into
cmp
xchg
push
dec
push
(bad)
cwde
xor
enter
mov
xchg
and
push
aas
xchg
cs
cld
mov
push
scas
cdq
push
mov
adc
in
pop
pop
bound
jle
xor
and
test
inc
jge
inc
mov
or
jo
aad
test
hlt
jns
sub
sub
or
lods
sub
jp
push
sub
cld
pop
daa
add
test
and
call
imul
mov
cmc
je
xchg
add
lea
pop
push
lods
pop
mov
pop
outs
adc
and
mov
push
mov
push
xchg
sahf
xor
adc
daa
mov
ins
xchg
add
jmp
es
add
and
call
loopne
cwde
daa
adc
pop
cmps
test
sahf
scas
cmp
lea
loopne
bound
push
std
(bad)
ja
inc
outs
sti
add
test
je
fldcw
sub
retf
sar
movs
or
rcr
scas
mov
(bad)
adc
loope
xor
data16
call
and
sbb
sub
rcl
call
inc
dec
adc
jnp
fs
imul
push
frstor
mov
jle
push
pop
push
push
sub
fmul
xchg
push
lahf
test
call
cmp
stos
icebp
out
mov
dec
repnz
jmp
xchg
sbb
(bad)
(bad)
in
fsub
shl
retf
cmp
adc
stc
jae
mov
in
hlt
(bad)
std
jp
mov
xchg
sbb
shl
repz
in
scas
out
ror
mov
adc
les
cmp
sti
pusha
jmp
fisttp
int3
jns
(bad)
lds
jne
movs
test
cmc
mov
test
les
loopne
add
sbb
xchg
jns
xchg
ror
aad
push
jge
cmp
mov
pop
lds
fcomp
sbb
adc
retf
xchg
ret
lock
repz
repz
xchg
dec
inc
rcr
std
jae
xchg
jmp
jp
adc
xor
adc
cmps
icebp
xor
push
sub
cmc
sub
es
cld
dec
jp
iret
sub
push
add
test
jmp
add
cmp
mov
jg
lea
pushf
pop
push
neg
(bad)
xor
mov
in
inc
ret
mov
xchg
push
dec
adc
shl
mov
xchg
ror
xor
dec
lods
ret
into
rcr
add
mov
xchg
sub
(bad)
sub
sub
and
hlt
xchg
xlat
jae
adc
cld
or
mov
jb
shr
adc
cmp
fld
dec
nop
cmp
sub
cld
inc
xor
or
mov
cli
fcmovne
jnp
sub
les
inc
xchg
inc
jecxz
jge
loope
aas
or
repz
in
mov
jns
ss
cmp
cld
xchg
inc
(bad)
xor
dec
popf
in
jle
adc
mov
ins
mov
shl
enter
pop
aad
cmc
call
clc
test
and
out
out
hlt
add
mov
or
mov
dec
daa
and
sar
hlt
ret
fnstsw
mov
cdq
mov
imul
jp
cmc
mov
jae
retf
xor
addr16
das
adc
lahf
js
xor
leave
xchg
aas
stos
(bad)
sub
stos
fldcw
out
inc
out
cdq
xchg
dec
xor
jo
ror
sqrtps
dec
xchg
test
popa
cmp
lds
and
push
adc
sbb
fstp
sbb
sbb
and
imul
nop
in
push
fcmovb
fcom
or
lahf
fild
xchg
lods
xor
sbb
and
fstp
icebp
retf
js
jg
es
mov
and
mov
test
icebp
sti
jae
inc
push
imul
pop
in
xchg
hlt
psubq
cmp
pop
stos
addr16
(bad)
in
std
(bad)
mov
xor
fisub
daa
repz
sub
dec
ret
cld
mov
jp
sub
fld
stos
sahf
sbb
jecxz
pop
jae
and
adc
xchg
ja
ror
push
int
data16
mov
fwait
out
push
sub
push
cmc
in
mov
jg
xchg
je
pop
jle
xor
sbb
push
dec
mov
inc
xchg
pop
cld
adc
dec
gs
inc
jns
out
and
mov
lds
xchg
fild
out
pop
clc
les
hlt
jbe
add
dec
xchg
dec
xchg
mov
je
sbb
dec
adc
icebp
ins
loop
bound
or
xchg
(bad)
std
xchg
shl
jns
inc
test
jne
jp
mov
(bad)
clc
pop
popf
sar
dec
and
ins
push
test
mov
sub
je
repz
jle
je
aad
repz
xor
fcom
and
jne
or
push
sub
loope
mov
fs
xchg
mov
push
ror
add
fs
mov
xchg
dec
arpl
inc
dec
xor
mov
imul
popf
mov
retf
add
out
push
nop
cmp
push
jmp
sbb
jl
lods
jge
or
cmp
jp
leave
push
jge
nop
sldt
cmp
adc
fld
outs
fidivr
lahf
cmp
jge
inc
mov
and
xchg
std
addr16
fisub
sub
pop
sbb
xchg
xchg
stos
sub
push
pop
or
iret
cmp
and
ror
pop
xchg
repnz
fist
push
adc
clc
std
or
mov
pusha
cli
dec
or
and
bound
ja
js
and
loop
movs
add
mov
pusha
xor
stos
movs
(bad)
std
xor
dec
push
pusha
mov
cs
jge
xchg
pop
shr
out
mov
adc
jb
push
pop
cmc
fwait
mov
jns
sbb
push
xchg
dec
cmp
mov
xchg
mov
xchg
fwait
and
aad
dec
inc
ins
inc
mov
nop
inc
cld
push
adc
(bad)
mov
jne
stos
ret
mov
and
cs
mov
ins
pop
clc
jne
leave
and
xor
dec
fsub
inc
sub
xchg
xor
nop
test
jb
es
ret
xchg
mov
add
loopne
xchg
push
jae
mov
dec
push
outs
adc
addr16
cmp
gs
dec
jb
test
jne
daa
pop
and
inc
jg
shr
sub
pop
xchg
popf
dec
fcomip
jb
pusha
push
xlat
add
js
xlat
call
dec
pop
mov
jbe
ret
dec
inc
or
in
and
xchg
imul
jnp
(bad)
stos
cmp
fs
pop
cs
jne
mov
mov
cmp
xchg
xchg
js
xchg
lea
xor
jmp
loopne
in
jmp
dec
je
mov
xchg
(bad)
out
jl
push
push
test
ret
repnz
add
inc
dec
cmc
sbb
mov
pop
das
clc
in
cmp
sbb
add
(bad)
pop
data16
sar
xchg
idiv
xchg
jne
add
aam
lods
mov
dec
add
adc
dec
adc
addr16
mov
mov
xchg
pop
ss
jb
mov
js
shr
cld
adc
data16
cmps
xor
sbb
and
nop
mov
jno
ret
gs
jl
adc
femms
stos
xchg
mov
push
nop
fisubr
dec
push
mov
adc
and
cmp
cmp
cld
cld
cmps
cmp
pop
mov
or
adc
pusha
iret
stos
es
sub
cli
je
cmp
aas
es
retf
push
sub
push
fs
jno
stos
mov
sub
pop
enter
lods
div
jp
pop
xchg
inc
int3
xor
sbb
icebp
mov
push
xchg
enter
fst
fptan
cmp
ds
ffreep
jb
cmp
add
ds
push
push
pop
push
pushf
sbb
sub
jnp
cmp
(bad)
jno
pop
scas
test
adc
pop
jo
adc
fsubr
xchg
sbb
push
ja
stc
or
push
mov
mov
test
cs
xchg
out
push
lds
push
stos
shr
or
pop
jnp
xchg
and
pop
push
push
push
fnstenv
pop
lock
popa
neg
push
add
test
loope
xchg
je
fiadd
push
add
sub
mov
out
push
pop
cmp
aas
ins
stos
push
jp
gs
pop
jp
iret
adc
add
loope
test
push
test
xchg
popa
mov
fistp
pop
(bad)
hlt
cmp
xchg
test
sub
xor
cli
adc
aam
out
push
shr
add
push
jle
jmp
cmp
xor
push
rcl
pop
inc
jns
stos
pop
cmp
sti
cs
in
test
movs
jle
inc
fwait
xchg
xor
clc
ins
xchg
mov
mov
inc
(bad)
jmp
xchg
arpl
aam
mov
dec
shl
js
or
inc
inc
mov
pop
and
xor
loope
pop
in
xor
push
js
mov
jecxz
in
repz
mov
(bad)
call
add
es
or
push
iret
and
imul
jne
cli
into
stos
cmps
sbb
xor
add
sub
fwait
test
cmps
pop
mov
adc
jg
dec
inc
fdivr
push
and
cli
mov
out
outs
sbb
nop
mov
test
not
xchg
imul
sahf
nop
and
xor
and
and
mov
mov
jne
push
add
adc
jecxz
or
or
pop
cmp
mov
jo
xchg
inc
pop
pop
out
bound
xchg
xor
sbb
hlt
mov
add
neg
or
fidivr
xor
(bad)
dec
inc
cmc
xchg
scas
aam
xlat
mov
jg
sbb
cwde
data16
dec
lods
bound
movs
pop
shr
add
inc
je
icebp
mov
sbb
retf
adc
mov
xor
cdq
push
int3
sar
cmp
in
cs
leave
fdivr
outs
cmp
cmp
lea
pushf
cld
xor
js
repz
add
jae
pop
add
xor
aaa
xor
cmps
sahf
(bad)
pop
mov
dec
lods
scas
clc
out
cmp
test
mov
push
pop
shl
shl
ins
mov
int3
xchg
test
jnp
xchg
aaa
adc
push
and
mov
jmp
mov
push
xchg
pop
clc
out
loope
mov
and
push
call
cmp
jb
jp
pop
je
cmc
push
dec
lahf
inc
xlat
js
add
xor
stos
repz
sub
sub
sbb
pop
jb
or
sub
mov
push
sbb
mov
or
call
xchg
clc
pop
std
mov
inc
fwait
mov
out
popf
add
std
shr
jp
cld
dec
mov
cmp
retf
rcl
mov
push
jae
data16
aad
fdiv
cld
push
clc
aam
jne
xchg
call
mov
cmp
mov
or
push
sub
jb
repz
(bad)
push
adc
dec
(bad)
xchg
gs
sbb
xchg
retf
sbb
movs
rcr
jo
dec
or
push
sbb
lds
pusha
in
xchg
dec
adc
xchg
pop
movs
(bad)
and
clc
push
jg
aad
xchg
pop
xor
loope
xchg
int3
les
test
push
pop
frstor
jmp
mov
mov
cmc
or
pop
mov
xchg
scas
xor
mov
jge
das
pop
jo
add
add
push
fstp
rcl
mov
shl
shl
into
or
xchg
sbb
test
adc
mov
mov
cdq
addr16
adc
sbb
push
mov
inc
stos
sbb
gs
icebp
in
sub
xor
push
es
fistp
cmp
sub
mov
nop
cmp
stc
fnstcw
cwde
aam
jle
and
pop
dec
call
(bad)
nop
imul
cmp
mov
xchg
fcmovne
into
xchg
push
add
jge
outs
cli
(bad)
and
aad
add
daa
lods
jno
xor
ret
repz
xor
lock
sbb
xchg
sahf
clc
punpckhbw
cmp
daa
mov
repz
jle
mov
out
into
push
mov
pop
xchg
sbb
lock
stos
xlat
into
or
mov
mov
loopne
in
nop
push
sub
add
xchg
aam
mov
int3
cmc
jmp
mov
push
aam
gs
jae
cdq
fwait
inc
in
cmc
jp
leave
test
sub
(bad)
cmp
hlt
fwait
add
xchg
out
icebp
xor
dec
xchg
push
adc
add
pop
xor
adc
push
sbb
ss
repnz
adc
ja
fwait
and
mov
add
cli
adc
jl
or
add
xchg
and
movsx
int3
sub
jno
mov
inc
sbb
popa
pusha
push
cwde
in
mov
jp
call
int
ret
out
xor
(bad)
lea
clc
xchg
das
mov
jno
lahf
idiv
and
dec
and
xlat
add
xchg
or
cmps
je
mov
mov
push
stc
mov
lods
jg
inc
pop
out
nop
adc
adc
and
xchg
popf
repz
gs
test
push
mov
xor
pop
repz
push
sub
xchg
or
test
xchg
adc
and
xor
cmp
add
sub
(bad)
mov
test
dec
pop
dec
cmps
movs
paddb
aaa
repz
and
call
lock
cwde
int
jo
pop
mov
adc
aad
push
pop
jns
bound
(bad)
jno
test
fwait
jne
cdq
rcr
add
cmp
sub
jnp
ja
fcomp
sub
adc
int3
dec
adc
pop
push
daa
xor
mov
sbb
das
sbb
fistp
fs
and
loop
ret
iret
jge
add
test
mov
mov
sbb
in
sbb
xchg
or
ror
fstp
push
cmp
dec
into
dec
int
add
ficomp
mov
addr16
fincstp
xchg
adc
(bad)
xchg
push
jbe
xor
leave
sti
addr16
push
mov
sbb
cmp
(bad)
hlt
push
outs
mov
ror
sub
sahf
rcr
fisub
and
ffreep
jns
mov
and
xchg
mov
sub
adc
push
(bad)
fbstp
pop
mov
fistp
ficomp
repz
push
pop
cmp
cli
pop
fs
and
xchg
in
pop
jmp
(bad)
jno
inc
dec
cmp
ror
or
cmp
in
pop
aaa
dec
push
dec
repz
xor
hlt
sub
push
xchg
xor
mov
mov
sub
test
mov
jp
push
sbb
sti
in
xchg
jbe
aam
jmp
ret
mov
add
out
(bad)
pop
bound
mov
loopne
lods
mov
or
sub
xor
or
daa
mov
sub
or
lods
iret
and
sti
xchg
iret
test
or
retf
in
sub
out
fistp
cmp
popf
mov
cmp
push
dec
jno
cmp
movs
out
mov
xor
add
out
xchg
das
sbb
dec
xchg
xor
cmp
pop
pop
xor
xchg
in
daa
push
adc
add
ins
shl
cwde
(bad)
and
inc
ins
fadd
cmovg
in
sbb
mov
jbe
out
lods
push
dec
mov
add
out
pop
mov
pop
dec
mov
nop
push
lods
int3
or
jmp
int3
test
mov
dec
mov
cmp
inc
sub
cwde
cmp
cmp
xor
scas
jnp
mov
lods
dec
mov
dec
cdq
xlat
(bad)
lds
fldenv
adc
or
fnstenv
fnstenv
mov
in
push
movs
sub
xlat
loopne
mov
cmp
jle
pop
sub
mov
icebp
movs
mov
jp
xor
std
jbe
push
lds
cmps
pop
mov
pop
xor
push
lea
jne
test
ror
aad
retf
push
ins
sub
pop
mov
pop
inc
xchg
jge
cmp
inc
mov
and
sbb
ret
mov
mov
sub
push
mov
mov
sub
inc
dec
mov
mov
daa
stc
fimul
mov
xor
cmc
inc
inc
pop
push
xlat
add
xchg
push
stc
xchg
test
cmc
and
popa
mov
push
neg
add
xor
jae
lea
frstor
sub
push
dec
ret
jmp
imul
sub
mov
loope
fs
mov
outs
and
ret
mov
and
xchg
xchg
and
leave
push
push
dec
inc
pop
inc
push
or
jge
scas
out
mov
arpl
mov
pop
(bad)
mov
mov
sbb
loop
xchg
lahf
jp
sub
push
sub
movs
in
jp
test
adc
ins
mov
pop
int3
cld
rol
push
inc
and
mov
fcmovnb
fisttp
dec
mov
repnz
rcr
add
cmp
or
add
pop
mov
xchg
push
scas
neg
jo
cdq
sahf
jns
and
into
or
or
hlt
(bad)
in
inc
(bad)
mov
pop
aad
xchg
mov
jb
or
sub
mov
lock
cmp
out
iret
js
leave
sar
jno
imul
dec
push
xchg
jmp
test
and
xchg
imul
mov
in
rol
jns
daa
nop
aaa
js
cli
sbb
lea
pushf
ror
cli
mov
loopne
sub
push
lds
sar
and
lahf
cmps
sbb
jg
xchg
xchg
mov
push
loop
pop
in
cld
dec
call
lods
pop
cli
in
dec
jmp
push
inc
cli
mov
int3
push
push
das
pop
loopne
scas
xchg
pop
lahf
out
xchg
cdq
mov
xchg
cmp
mov
addr16
jle
dec
mov
mov
sahf
mov
jno
ds
out
push
fisttp
cld
nop
or
jmp
mov
jecxz
cmp
mov
mov
xchg
cmp
imul
fdiv
and
sbb
pop
jp
std
jns
lds
fdivr
add
and
movs
out
push
push
popf
test
jne
add
test
repz
adc
cmp
jp
hlt
and
dec
pop
enter
mov
xchg
jne
sub
push
popa
int3
sbb
loop
sub
dec
jmp
mov
jne
xchg
fnsave
sbb
xchg
pop
addr16
jle
dec
jmp
lds
xor
cmp
and
xchg
and
inc
sbb
jmp
lds
push
jle
cmc
(bad)
mov
gs
cmp
xchg
fild
adc
jns
imul
cdq
ror
or
mov
mov
in
sbb
fimul
pop
push
cli
cmp
inc
(bad)
sahf
fwait
and
add
lods
jo
or
rcr
sbb
test
loopne
mov
pop
call
xchg
in
jne
mov
dec
out
(bad)
jns
jns
mov
xor
adc
mov
cmc
xor
fdivr
jns
cmps
loopne
movs
test
int
sar
inc
cmp
jmp
mov
pop
je
jmp
test
ss
mov
js
jne
pop
in
mov
cs
dec
jp
(bad)
nop
lea
add
or
lea
sub
jmp
cmp
adc
add
retf
sub
sbb
xchg
jb
jne
sub
pusha
xor
sub
mov
and
mov
and
mov
mov
xchg
mov
jmp
mov
fmul
fmul
push
dec
addr16
adc
daa
mov
mov
sub
leave
inc
addr16
jge
daa
xchg
hlt
sub
mov
dec
inc
(bad)
loopne
xor
push
bound
ds
bound
cmp
clc
xor
cmp
sti
fs
mov
jge
cdq
out
ret
push
std
jp
sbb
dec
dec
jne
jmp
mov
add
ficomp
std
adc
push
outs
pop
push
xor
mov
shr
mov
nop
mov
lahf
daa
stos
fwait
je
or
(bad)
and
sub
shl
mov
test
sbb
mov
xchg
pop
aas
sbb
jp
mov
shl
xchg
fnstenv
inc
cmp
loope
in
cmp
mov
cmp
jp
out
dec
es
or
xlat
add
or
inc
xchg
in
xchg
jmp
mov
outs
outs
lds
xor
push
outs
xor
adc
jle
xor
xchg
inc
test
adc
cdq
sub
or
or
cmp
aam
and
jp
push
jle
aaa
mov
cmc
pop
sub
pop
xchg
test
push
(bad)
les
ins
jp
xchg
sbb
movs
repz
push
xlat
shl
shr
fadd
xor
jnp
mov
hlt
stc
xchg
jnp
adc
cmp
ss
jge
mov
je
in
xchg
inc
dec
jl
repnz
ins
push
inc
sar
inc
cdq
popf
and
cmp
pop
js
sub
xchg
movs
push
jl
push
call
adc
cmp
stc
ja
sub
cmps
xor
call
clc
cmp
mov
std
repz
sub
rcr
mov
xchg
lock
js
inc
mov
rcl
xor
test
adc
mov
rcr
cmp
je
das
push
js
mov
pop
enter
mov
cmc
xor
xchg
jo
pop
add
xor
xchg
aas
retf
mov
xchg
jno
dec
(bad)
xchg
cli
inc
mov
mov
in
test
ret
add
iret
sub
xchg
dec
imul
das
mov
add
pop
jmp
or
test
ror
in
mov
xchg
sti
fiadd
aaa
adc
aas
and
inc
jp
sub
(bad)
call
dec
shl
pop
dec
lods
dec
xchg
mov
sub
pop
ror
js
xchg
cmp
je
sbb
loopne
(bad)
sub
inc
jp
mov
sub
hlt
call
xchg
add
dec
psubsw
cli
push
shl
mov
xchg
das
xchg
jns
add
inc
int
xor
js
dec
cs
xchg
and
xchg
call
inc
out
sub
mov
pop
add
mov
xchg
pop
rcl
cli
inc
mov
sbb
outs
aam
iret
mov
dec
mov
or
mov
lds
lahf
jge
and
stos
and
mov
sub
mov
clc
cwde
xor
loope
add
cmp
sbb
mov
jle
sbb
addr16
das
test
rcl
mov
popa
jae
dec
mov
push
xchg
in
nop
std
xchg
ret
xchg
movs
xchg
push
mov
jno
inc
iret
call
add
aad
movs
cmp
rcl
in
lea
push
or
in
sub
dec
pop
lock
ret
popf
jp
xchg
test
sbb
dec
mov
pop
mov
repz
in
pop
stc
mov
outs
sub
adc
xor
jbe
and
and
sbb
jne
cmc
test
retf
imul
mov
pushf
mov
push
test
jecxz
adc
test
je
pop
pusha
fild
jmp
mov
xchg
push
xchg
mov
mov
xor
fcmovu
xor
call
pop
pop
inc
hlt
dec
jo
int3
adc
and
test
pop
mov
mov
inc
jnp
add
popa
int
inc
outs
mov
jno
push
fwait
push
pop
inc
adc
adc
jge
inc
les
add
jae
sub
or
xchg
pushf
xchg
lock
lods
xor
hlt
lods
mov
cdq
clc
jbe
jns
xor
int
pop
cld
push
mov
jnp
and
pop
pop
lds
(bad)
stc
rcl
mov
fbld
leave
(bad)
inc
push
push
call
xor
mov
jmp
jle
jge
pop
das
repz
les
push
out
and
sbb
mov
and
sbb
popf
push
inc
sbb
or
or
in
fisubr
sti
xchg
sub
mov
xchg
stc
scas
outs
adc
mov
stos
mov
(bad)
minps
mov
xchg
pop
mov
mov
scas
push
push
adc
iret
(bad)
ret
add
mov
aaa
push
xchg
outs
clc
xchg
nop
pop
clc
xor
cmp
repnz
pushf
aas
adc
jo
inc
nop
movs
loopne
mov
mov
mov
sbb
cli
aam
stc
mov
imul
add
lea
adc
fdiv
out
retf
fadd
test
jno
repz
or
jae
cmp
in
fsub
mov
adc
into
arpl
fprem1
xlat
pop
cmps
int
jge
and
dec
xor
jmp
test
xor
sbb
inc
adc
gs
dec
pop
addr16
loope
js
call
dec
adc
icebp
icebp
inc
cmp
xor
and
fist
mov
ret
sub
pop
mov
pusha
jmp
mov
mul
sahf
mov
adc
sub
xchg
push
pop
push
loopne
and
aaa
inc
push
icebp
pop
stc
out
cmps
dec
sbb
outs
neg
push
cmp
mov
add
sub
pop
out
out
mov
cmc
mov
push
std
jg
das
inc
inc
mov
sar
in
retf
xchg
xlat
fisttp
push
jp
mov
mov
hlt
cmp
jle
xor
push
jmp
retf
jbe
movs
push
ins
int
xor
js
or
loope
jp
pop
cwde
or
push
xchg
or
sbb
pop
in
cmp
fdivr
dec
xchg
std
sub
inc
xchg
or
cmc
push
cs
mov
leave
sti
xchg
mov
out
adc
idiv
out
jnp
rcr
ja
dec
repnz
popa
mov
mov
mov
cmp
(bad)
repz
jp
cmp
cmc
in
test
fcomip
mul
inc
xor
jno
mov
cmc
sub
icebp
das
add
dec
cld
cmps
xchg
vprotd
add
push
xor
cmp
xor
dec
cs
mov
clc
mov
or
in
(bad)
mov
jnp
jecxz
add
adc
mov
ins
adc
push
sub
xor
jmp
sub
dec
xor
bound
or
pop
clc
xchg
into
and
jge
mov
mov
dec
xor
aaa
dec
xchg
push
inc
(bad)
in
lds
rcr
and
mov
cmc
xchg
test
pop
sbb
sub
fidiv
daa
dec
mov
dec
pushf
aam
fwait
inc
loopne
js
xor
mov
int
dec
cmp
add
pop
mov
pop
xchg
adc
mov
and
dec
mov
xor
sub
jmp
push
sub
jl
sbb
out
xor
mov
push
jne
push
add
int3
ret
in
push
mov
xchg
mov
add
jmp
sub
in
mov
das
repnz
xor
daa
cmc
lods
or
xor
push
jge
jecxz
(bad)
addr16
mov
ins
mov
xchg
push
cmc
out
mov
in
stos
sub
mov
jp
and
cmp
hlt
and
dec
xchg
push
popa
mov
xchg
outs
xchg
fild
add
xchg
repz
sub
repz
and
(bad)
push
call
mov
jnp
xchg
pushf
lods
dec
push
pop
test
mov
and
lods
test
lahf
int3
cmp
lea
cdq
pop
movs
mov
jmp
pushf
push
icebp
std
cmps
xchg
sbb
sbb
dec
pop
cmc
sub
(bad)
or
jmp
(bad)
xor
xchg
inc
je
retf
push
xchg
sub
sub
xchg
stc
cld
inc
out
push
cs
movs
dec
push
mov
bound
les
pop
clc
dec
xchg
cmp
lock
mov
add
add
push
loop
bound
xor
stos
inc
sbb
push
pop
sub
cdq
xchg
into
jnp
retf
dec
loopne
xchg
(bad)
fidiv
retf
fistp
cmp
push
hlt
xchg
pop
(bad)
jl
sbb
jmp
mov
mov
mov
xor
daa
and
leave
lods
jb
xchg
add
leave
(bad)
or
jae
lds
sbb
add
xchg
pop
pop
sbb
imul
aam
add
fbstp
out
shr
pop
retf
cmp
(bad)
xor
fbld
pop
pop
icebp
mov
mov
outs
mov
pop
or
int3
ror
std
pmaxub
xchg
test
push
xchg
ins
sub
jge
adc
xchg
idiv
and
mov
stc
dec
xchg
push
nop
rcl
ret
int3
jl
loope
stos
enter
jns
daa
add
js
js
cld
jmp
mov
hlt
test
cdq
and
sub
ja
or
shl
jne
ret
pop
dec
jae
mov
xchg
daa
xchg
jmp
mov
clc
retf
(bad)
in
es
loopne
rol
mov
(bad)
mov
jp
not
shl
push
loope
sbb
add
dec
mov
imul
sub
lock
cmp
mov
rol
not
and
out
clc
adc
fsubr
lock
cmp
mov
in
nop
push
das
xchg
stos
push
xor
jb
(bad)
(bad)
sbb
inc
cld
(bad)
sub
push
retf
jle
dec
xchg
mov
shr
mov
jmp
pop
add
and
or
ficom
(bad)
loop
push
cwde
jne
push
cmp
rcl
xlat
popf
pop
xor
loope
xor
jmp
scas
xchg
push
loop
xchg
stos
pop
sub
fld
mov
push
pop
sbb
mov
sub
inc
mov
jge
neg
pop
jb
(bad)
jns
sub
(bad)
je
xchg
or
pop
aas
stc
jp
jo
mov
mov
pop
cs
mov
ret
adc
pop
sub
dec
mov
fnstsw
mov
int
xchg
jne
sbb
and
icebp
inc
add
push
jne
sbb
movs
fs
imul
data16
add
icebp
xchg
dec
xchg
bound
sbb
adc
pop
test
loope
(bad)
fbstp
lods
shl
iret
or
xchg
mov
repz
and
arpl
lds
xchg
adc
push
or
push
fisttp
pop
push
cmc
in
lods
xchg
in
int3
pop
xchg
call
sbb
and
cld
stc
sti
push
inc
arpl
movs
pop
int
das
dec
(bad)
mov
cmp
push
push
js
or
xor
cmp
push
mov
fadd
or
xor
fnstsw
adc
cmp
adc
lods
inc
and
outs
push
cld
shr
pop
js
repz
xor
xchg
mov
cmp
mov
mov
stos
sub
(bad)
add
mov
mov
mov
fldcw
xchg
cwde
shr
es
xchg
cs
cmp
loope
lds
test
and
pop
dec
sbb
nop
and
dec
mov
sub
in
sbb
adc
push
inc
inc
stc
sbb
xchg
sub
stos
dec
dec
xchg
in
in
fcom
cmp
push
xor
fild
xchg
mov
and
pushw
movs
hlt
push
std
in
lods
ja
in
(bad)
mov
cs
mov
push
dec
xor
dec
fnsave
lock
mov
jae
out
popa
sub
hlt
scas
inc
mov
xchg
jl
jb
mov
shl
jl
movs
in
sub
nop
pop
pop
push
mov
xlat
mov
push
cmp
pop
mov
pop
mov
jae
inc
lahf
mov
jecxz
inc
call
pop
push
or
test
out
je
ja
add
call
push
mov
out
inc
shr
pusha
in
push
dec
pushf
(bad)
xchg
lea
imul
mov
cwde
nop
and
loope
fcmovnbe
pop
sub
mov
movs
sub
(bad)
jnp
cs
xchg
(bad)
sub
push
mov
imul
jle
pushf
adc
test
outs
mov
ret
mov
daa
push
hlt
mov
push
popa
fnstsw
mov
rcr
mov
dec
js
mov
dec
imul
xchg
xlat
pop
inc
sbb
popf
mov
mov
mov
mov
mov
inc
push
ja
dec
pop
inc
(bad)
mov
xchg
mov
xchg
push
push
add
out
aaa
imul
loope
jns
jmp
cmc
mov
cmps
sub
push
pop
adc
fdivr
dec
jge
dec
mov
mov
jmp
and
(bad)
jnp
imul
int3
jbe
xchg
ret
lock
sub
daa
mov
adc
mov
retf
lods
add
xlat
(bad)
in
addr16
hlt
loopne
int3
ins
outs
les
cmp
dec
adc
mov
mov
ins
cld
dec
push
xchg
xchg
xor
cwde
sbb
mov
xchg
adc
test
lods
les
mov
(bad)
mov
mov
repz
cmp
icebp
mov
jge
iret
or
xchg
mov
sbb
jge
xchg
push
xor
and
gs
iret
xor
dec
sub
and
test
es
into
adc
in
pop
and
sub
mul
inc
iret
dec
jmp
xchg
push
in
push
jle
and
mov
xchg
mov
hlt
mov
vunpckhps
test
xor
pop
jmp
into
imul
push
ins
push
mov
fisubr
dec
pop
fs
jne
loope
sar
and
inc
sahf
pop
xor
mov
loope
xchg
pop
add
int3
imul
test
stos
cmp
hlt
nop
cmp
fwait
adc
push
rep
sbb
mov
nop
jo
cmp
(bad)
jmp
les
enter
fwait
jmp
std
ffreep
push
sbb
pop
es
xchg
add
sbb
dec
in
mov
(bad)
mov
js
fldl2t
jmp
add
je
popa
xchg
sub
lea
sahf
out
cwde
and
in
std
push
inc
sbb
das
mov
ins
push
call
and
pop
xchg
ds
mov
push
mov
mov
mov
enter
mov
shr
mov
push
mov
data16
arpl
cli
sbb
push
xor
fimul
shr
mov
dec
stos
sar
jns
or
cmp
es
xor
retf
std
xchg
aam
ins
into
ins
or
test
out
adc
cmp
es
pop
dec
cs
frstor
sbb
adc
aaa
xor
das
stos
loopne
mov
lds
ret
mov
add
sub
in
dec
or
xchg
icebp
mov
pop
sub
fwait
aaa
push
retf
cdq
xor
je
test
mov
mov
mov
pop
sub
add
les
dec
movs
loope
fisubr
sbb
rcr
xor
imul
sub
sub
in
mov
std
lea
js
arpl
mov
sub
jmp
or
mov
loopne
jmp
popa
mov
inc
outs
(bad)
or
es
add
inc
jp
jns
hlt
and
jle
adc
xchg
add
in
xchg
(bad)
cmps
arpl
data16
mov
xchg
fdiv
adc
ds
mov
test
leave
xchg
or
sti
int3
mov
call
inc
call
mov
inc
pop
into
lea
adc
cs
inc
hlt
cmc
pop
call
ins
cmc
iret
mov
xchg
(bad)
adc
push
jo
nop
outs
jo
in
push
mov
iret
mov
cmp
scas
je
arpl
out
aaa
add
push
stc
pop
and
sti
xchg
sub
mov
addr16
jg
out
xchg
popa
stos
js
shr
int3
aam
(bad)
mov
into
mov
cmp
repz
mov
sub
mov
dec
ror
pop
dec
push
inc
cmp
jo
repnz
jge
dec
addr16
add
(bad)
sbb
cli
inc
test
clc
lahf
loope
add
gs
out
push
pop
les
inc
test
add
xchg
mov
scas
pop
mov
xor
mov
outs
jae
aad
add
arpl
fs
ds
cmp
and
ins
lahf
push
jmp
mov
dec
repnz
cmp
mov
repz
adc
not
sbb
outs
or
adc
mov
push
and
dec
xor
xchg
pop
pop
add
rcl
mov
mov
(bad)
mov
loopne
cmp
jg
xchg
imul
and
mov
push
jb
(bad)
hlt
dec
(bad)
pop
mov
add
push
xchg
aaa
pushf
cmp
jo
xchg
cli
pop
xor
jge
pop
add
push
div
xchg
mov
pusha
imul
sbb
xchg
mov
mov
push
adc
add
jbe
mov
xlat
or
gs
pop
inc
out
daa
dec
push
ror
add
mov
scas
repz
push
adc
test
cli
fwait
pusha
sub
jb
jne
add
sub
mov
js
xlat
jg
in
dec
imul
arpl
push
ret
sub
xor
cmp
mov
(bad)
std
and
in
add
scas
fwait
xchg
in
cmp
pushf
jne
sub
cmc
cmps
in
(bad)
shl
jle
sub
pop
pop
lods
out
dec
jae
adc
lds
cmps
xchg
ds
stos
dec
and
pop
dec
sub
in
setnp
dec
cmp
push
loopne
jmp
int3
fistp
retf
shr
jns
xchg
add
into
and
push
mov
adc
outs
test
push
cs
jl
xchg
in
add
addr16
cmp
icebp
int3
cld
add
xchg
xchg
sub
lods
mov
jmp
mov
mov
das
repz
sbb
mov
sbb
xlat
sub
sub
jg
mov
les
aaa
xor
fcom
push
jge
mov
mul
xchg
mov
jns
arpl
cmp
ins
push
movs
mov
pushf
stos
stos
push
in
sbb
into
sahf
xor
bound
fs
adc
in
push
xor
test
cmp
imul
mov
mov
jmp
mov
cmp
dec
mov
mov
xchg
movs
and
push
sbb
cmps
push
call
outs
rol
(bad)
push
fbld
je
cmc
push
mov
push
aad
xchg
dec
mov
fdivr
jb
jge
leave
mov
jne
stos
sbb
cdq
add
fsub
xchg
or
dec
mov
jge
inc
cmp
repz
repz
sub
mov
stos
pushf
aas
lahf
mov
test
jnp
jg
les
scas
dec
addr16
push
mov
(bad)
fcom
sbb
sar
mov
adc
sub
fcom
pop
inc
jmp
fdivr
cwde
xchg
cmp
or
(bad)
movs
cmp
mov
rcl
sar
loopne
push
xchg
push
int
in
xor
xchg
ret
xchg
inc
inc
mov
or
sbb
push
cli
out
mov
push
xor
and
and
sbb
cmp
pop
lock
rcr
jecxz
pushf
stc
pop
sar
mov
mov
add
in
hlt
inc
sub
movs
xchg
or
jmp
dec
icebp
xchg
mov
mov
in
ins
adc
push
push
jecxz
into
jbe
mov
dec
push
inc
gs
adc
cs
loope
and
es
jb
mov
shl
pop
pop
push
in
adc
jns
call
push
aad
lock
hlt
test
jbe
jae
xchg
pop
repnz
xchg
pop
and
jecxz
psraw
and
cmp
(bad)
jl
fistp
pop
sub
pop
adc
sbb
jge
pop
jg
pusha
loopne
dec
dec
inc
push
fist
ror
lds
sbb
fsub
dec
(bad)
jmp
mov
pop
call
shr
dec
in
xchg
pop
mov
out
pop
lds
in
mov
ret
int3
pop
push
xchg
cld
js
lds
cmc
cmp
pop
repz
pop
sub
sub
xlat
iret
repz
xor
jg
jne
sbb
into
jno
into
xchg
push
cs
call
cmc
das
or
ret
aad
add
lea
in
push
xchg
push
cmp
icebp
jge
jnp
xchg
push
inc
xchg
jmp
inc
pushf
add
jmp
sbb
mov
add
arpl
retf
int
stos
push
xor
pop
(bad)
mov
jg
dec
inc
xor
lods
dec
mov
xchg
imul
xor
retf
adc
leave
pushf
add
pop
fild
mov
aas
mov
in
push
out
adc
imul
fdiv
jl
mov
sahf
jecxz
mov
sbb
and
or
int3
sbb
cdq
push
jns
add
cld
nop
dec
enter
jecxz
call
mov
jp
add
xchg
and
sbb
sbb
mov
xchg
add
pop
rol
pop
cmp
or
xchg
loopne
addr16
div
sub
mov
jb
imul
ds
cmps
dec
mov
sbb
add
mov
mov
jmp
movs
ret
ror
test
sub
xchg
aas
retf
inc
xchg
test
fisub
sbb
rcl
(bad)
loopne
in
cld
push
sub
(bad)
inc
or
push
mov
adc
pop
lods
mov
lea
fnstsw
cmps
or
cdq
(bad)
cmp
repnz
jmp
ret
or
jmp
dec
in
pusha
xchg
xchg
stos
jle
cli
into
xchg
and
add
adc
jne
xchg
sbb
repnz
dec
es
fild
shr
(bad)
mov
add
popf
(bad)
shl
sbb
inc
xchg
dec
das
xor
jne
mov
inc
(bad)
cmp
stos
ins
popf
cli
and
adc
js
mov
mov
ret
pop
fs
fisttp
stos
out
jns
inc
mov
sub
je
mov
jne
sahf
add
hlt
xchg
(bad)
ss
sbb
push
addr16
stos
addr16
xor
push
popa
icebp
jp
sbb
push
data16
dec
sbb
stc
cmc
jmp
pop
sub
jae
xchg
xchg
hlt
mov
aam
dec
repnz
loopne
cmp
adc
lods
ins
or
xor
clc
arpl
cli
outs
and
in
loopne
les
sbb
rcr
lods
cmp
shl
sub
jmp
push
outs
cmp
std
cmp
inc
jo
cmc
mov
and
ins
jns
das
fst
icebp
in
mov
adc
add
xor
fs
aas
xchg
xor
hlt
es
ja
mov
and
and
cmp
into
pusha
cmps
cmc
cmp
dec
mov
xchg
sub
in
rcr
scas
pop
retf
movs
mov
pop
mov
(bad)
push
test
push
in
ret
gs
fdiv
xchg
push
pop
test
in
sub
js
enter
inc
jae
and
fimul
cdq
mov
movs
retf
scas
xchg
pop
adc
in
ret
retf
and
lock
xchg
ret
push
sub
pop
xchg
cmp
stos
lods
outs
cmp
not
mov
mov
lahf
inc
and
xchg
sbb
shl
cmc
retf
push
stc
scas
jnp
jp
js
inc
lahf
or
xchg
add
bound
out
stos
movs
sbb
cmp
add
test
xchg
call
outs
aam
pop
and
push
aad
aaa
stc
dec
cwde
aam
mov
dec
loop
dec
dec
sub
rol
fcom
popf
push
adc
xor
fistp
jae
enter
mov
push
sar
icebp
js
in
mov
shl
movs
sbb
pop
jo
loope
les
mov
xchg
ret
popa
inc
fcom
jne
js
lods
xchg
sahf
jmp
call
xchg
sbb
jmp
pop
sub
xchg
jge
cwde
pop
jae
fisttp
pop
pusha
mov
je
retf
sti
jmp
xchg
jbe
mov
mov
daa
mov
mov
pop
test
push
shl
mov
mov
inc
mov
in
sti
adc
and
xor
into
hlt
cmp
in
xchg
sub
clc
pop
int3
dec
adc
add
and
mov
xor
cmp
lods
std
and
sbb
jle
push
cmp
ret
dec
sahf
leave
in
int3
mov
xchg
mov
popa
rcl
popf
push
add
and
jmp
cmp
retf
repz
xor
and
ins
push
mov
jne
sub
and
xchg
test
push
loopne
fst
cmpps
stos
cmp
fwait
cmp
out
add
mov
push
in
pop
icebp
std
fmul
push
ror
je
mov
ins
adc
sbb
cwde
pop
repz
dec
adc
shr
sub
adc
jp
test
and
push
popf
and
(bad)
xchg
adc
or
xor
lods
mov
js
xor
int3
mov
xchg
push
shl
cmps
ja
je
sub
jp
add
mov
les
outs
clc
repz
int
mov
test
push
rcl
popa
sub
xchg
cld
cs
pop
dec
jae
std
or
call
loope
sub
sbb
out
enter
mov
sub
in
xchg
or
leave
xchg
loope
and
jge
je
xchg
mov
xor
dec
push
cmp
mov
repz
mov
sub
mov
xchg
mov
xor
cld
xchg
dec
and
push
hlt
mov
popa
jle
mov
sbb
xchg
cli
jne
xchg
ins
arpl
rol
test
in
sub
mov
xchg
adc
xchg
dec
xchg
stos
fistp
xchg
mov
scas
xor
push
in
mov
arpl
mov
(bad)
clc
add
das
lock
dec
shr
loope
mov
add
shr
fdivr
test
(bad)
jno
xchg
xchg
fmul
loopne
es
lahf
or
and
cs
int3
dec
stos
mul
and
add
and
and
rcl
pop
(bad)
lods
(bad)
cmps
adc
bound
xor
(bad)
jae
push
cli
dec
rcl
xchg
outs
in
cmp
js
addr16
retf
push
aam
clc
out
ins
adc
idiv
xchg
imul
mov
push
cmp
mov
inc
jp
lods
push
ret
imul
jo
sbb
je
adc
cmp
int
clc
nop
xchg
cmp
ret
inc
cld
call
push
mov
xchg
or
dec
adc
(bad)
xor
adc
dec
call
stos
cmps
test
in
gs
add
nop
loopne
jne
mov
rol
inc
pop
in
jns
int
out
sbb
ror
xor
add
jno
jge
(bad)
fld
fmul
push
jle
jmp
mov
adc
ja
push
js
ins
mov
into
sbb
xchg
ds
xchg
into
in
mov
or
jg
cli
mov
push
mul
cwde
int
adc
or
mov
push
mov
retf
cs
jecxz
test
loop
les
mov
fnstcw
gs
fadd
bound
jge
push
mov
dec
shr
jle
jle
scas
and
cmp
out
rcl
rol
int3
cmp
lock
mov
je
mov
xchg
xor
mov
mov
xchg
add
fwait
push
stos
and
cmp
call
scas
xor
push
pop
movs
or
sub
loopne
dec
(bad)
sahf
mov
mov
xor
mov
jns
xor
addr16
mov
and
ins
mov
cmps
ret
fadd
mov
out
fcom
adc
adc
dec
nop
fidivr
jo
mov
es
mov
xchg
fidivr
sub
outs
push
in
cmp
out
push
pop
ins
in
sbb
push
popf
mov
sub
xchg
lds
call
in
ret
cwde
loopne
dec
and
and
dec
cmp
fistp
arpl
mov
addr16
add
mov
push
xchg
add
popa
stos
pop
push
pushf
icebp
pop
pop
out
sub
repz
stc
mov
les
test
mov
xchg
pop
push
xchg
jnp
sbb
or
imul
cmc
pusha
iret
cmc
stc
add
mov
imul
xor
stc
mov
std
xor
cmp
pusha
dec
xchg
fstp
rol
iret
inc
push
stos
push
mov
outs
jmp
xor
rcr
hlt
pop
repz
sub
jmp
mov
jns
mov
retf
jmp
fisubr
jecxz
inc
xchg
icebp
push
and
test
test
mov
sub
xchg
imul
ret
pusha
sub
daa
aas
add
jns
xchg
push
stos
mov
jne
or
clc
adc
adc
xor
test
mov
adc
mov
imul
shl
ja
dec
clc
cdq
mov
cmp
sub
jmp
jg
scas
dec
imul
sub
(bad)
fst
dec
add
mov
outs
cld
imul
push
mov
or
cmc
mov
lods
outs
xor
mov
push
mov
lahf
std
fs
adc
test
cs
or
push
pop
fldcw
xor
jo
out
pusha
and
loopne
in
xor
jns
(bad)
fistp
or
dec
jmp
sar
dec
dec
xor
ja
cmps
bound
mov
add
sti
mov
xchg
addr16
outs
mov
dec
sub
mov
xchg
and
xor
mov
mov
push
jp
adc
xchg
dec
lods
push
cs
int3
add
pop
outs
pop
in
sub
sub
push
push
scas
ds
cld
xor
inc
out
inc
fchs
push
cwde
jae
cmp
rcr
jge
dec
es
fwait
stc
cld
test
mov
rcr
sbb
xchg
pop
jg
out
test
mov
xchg
push
sub
icebp
(bad)
jp
dec
arpl
push
pop
daa
movs
inc
fdiv
mov
xchg
test
mov
inc
gs
aam
fbld
ins
popf
xchg
mov
(bad)
shl
out
pop
(bad)
repnz
retf
js
xchg
jne
mov
mov
sbb
and
sbb
inc
mov
fsub
in
outs
aas
jnp
xchg
mov
xor
and
or
xchg
lahf
and
aas
out
adc
outs
or
xor
cmps
cmc
loop
jmp
pop
scas
and
sub
pop
std
lods
into
idiv
js
sub
das
push
cmp
push
sub
mov
jns
xchg
pop
dec
mov
and
or
xchg
push
xchg
mov
cwde
stos
(bad)
mov
movs
jne
pop
sub
lods
sar
sar
sub
fist
out
retf
or
xchg
lods
xor
add
sub
out
sbb
jns
rcl
mov
cdq
cwde
fistp
mov
imul
xchg
add
aam
mov
or
cdq
je
cmp
cli
mov
mov
and
sbb
retf
push
icebp
jmp
rol
(bad)
jle
cmp
mov
adc
xor
sbb
sbb
shl
out
push
ins
push
mov
mov
dec
sub
jg
imul
xchg
pop
xor
xchg
ins
and
mov
push
dec
stc
ret
sbb
lods
xor
inc
daa
inc
mov
sub
or
fidivr
and
xchg
push
int3
or
push
ror
cld
mov
adc
out
cmc
inc
and
mov
dec
xchg
or
dec
jnp
mul
jp
mov
jne
inc
out
xor
sbb
pop
clc
in
shr
mov
imul
inc
dec
ret
mul
imul
test
and
inc
in
and
push
lahf
or
xchg
lods
or
pop
pop
cmp
and
pop
or
mov
movs
not
dec
add
movs
dec
or
jb
out
push
jge
repz
lahf
clc
push
ret
imul
(bad)
gs
test
inc
shl
shl
adc
aaa
repz
stos
repnz
xchg
or
dec
loopne
pop
dec
out
add
xor
push
mov
and
bound
pop
push
mov
popf
(bad)
aam
sti
xchg
btr
adc
sahf
les
mov
mov
jbe
jbe
ins
or
jb
sub
fst
clc
pop
test
and
xchg
cmp
mov
sbb
icebp
pop
jp
ja
and
addr16
push
xchg
and
(bad)
xchg
or
sbb
pop
cwde
pop
test
(bad)
jno
and
or
dec
push
repz
xchg
dec
cs
rcr
mov
adc
aad
sbb
js
mov
cmp
push
mov
rcr
(bad)
xchg
xor
scas
jmp
sub
fld
push
push
sub
jb
xchg
out
mov
(bad)
std
ror
in
push
lea
mov
mov
pusha
and
pop
push
push
ret
pop
out
xchg
rol
xor
aaa
lds
jns
in
test
es
or
inc
or
outs
test
fdivr
push
in
add
fstp
mov
lea
cld
bound
pop
sub
push
fs
xchg
jns
inc
enter
add
test
or
jno
and
adc
jle
rcl
xor
hlt
dec
fcom
xchg
sbb
jl
xchg
jo
sub
in
stc
not
bound
sub
or
ins
xchg
jge
lea
and
jl
push
sti
movs
stos
and
xor
pop
and
dec
xchg
dec
mov
movs
out
jo
mov
xchg
xchg
clc
stos
imul
repnz
sbb
or
into
hlt
cmp
sar
aam
mov
add
dec
adc
(bad)
adc
jle
push
repz
dec
cmp
rcr
fwait
xchg
mov
sub
daa
into
inc
mov
cmp
jne
inc
loopne
push
into
jo
xchg
xchg
mov
xchg
or
jb
jne
sub
add
rcr
lock
jne
xchg
(bad)
xchg
and
jae
hlt
mov
pusha
lods
(bad)
imul
push
push
pop
or
or
data16
mov
push
std
adc
dec
(bad)
fsubrp
or
mov
jmp
sub
push
cmp
dec
push
les
cli
xchg
pop
mov
retf
xchg
sub
aad
and
adc
jmp
sbb
int3
push
jg
push
xor
std
in
xor
push
cmp
sbb
jmp
xchg
adc
fistp
sbb
sub
mov
cmps
or
mov
mov
ret
popf
leave
lea
push
mov
aas
mov
push
xchg
loop
clc
shr
mov
in
(bad)
int3
push
push
repz
retf
jmp
out
lods
shl
bound
data16
pop
in
sbb
push
mov
mov
push
test
ins
push
push
jle
int3
mov
enter
loope
mov
scas
lods
test
xor
cld
jle
sbb
(bad)
fcom
scas
stos
push
pop
mov
ins
pop
das
sub
mov
mov
sbb
movs
(bad)
xchg
push
iret
and
ret
xchg
push
add
ja
adc
data16
imul
and
neg
inc
sbb
mov
loop
in
adc
lahf
test
arpl
push
lahf
inc
cmp
cld
adc
lds
shl
shl
retf
and
shl
jmp
fbstp
sub
jmp
arpl
pop
aas
push
pop
inc
repnz
(bad)
jge
outs
out
stc
mov
jae
push
mov
adc
sub
sbb
jecxz
push
ficomp
adc
xchg
pop
inc
mov
and
je
cdq
xchg
xlat
jnp
pusha
adc
mov
call
cld
popf
xchg
adc
mov
lods
add
aad
(bad)
and
dec
mov
sbb
xchg
dec
in
xchg
ins
daa
cmp
or
sub
mov
sbb
rcl
xor
xor
ret
dec
sbb
outs
std
pop
mov
mul
fnstenv
lea
scas
dec
lds
shl
call
push
and
in
sti
or
xor
mov
gs
in
(bad)
sti
in
(bad)
push
pop
and
or
pop
loope
add
(bad)
jns
leave
xchg
sbb
push
xor
(bad)
xchg
enter
xor
xchg
mov
or
lea
add
loope
dec
push
sub
stos
cs
sar
call
leave
and
xchg
and
call
adc
lods
dec
pusha
mov
sub
pop
or
dec
pop
cli
stos
xchg
mov
stos
push
pop
test
xchg
loopne
push
add
mov
dec
xchg
or
in
and
sbb
push
pop
pushf
cmp
ret
cmps
dec
jl
or
pop
rcl
xchg
xchg
invd
push
shl
cmp
ja
jp
adc
scas
sub
jmp
dec
aaa
ret
pop
sub
jae
in
stos
jmp
jle
cmp
inc
lahf
out
add
rcl
pop
push
or
pop
cld
sar
jns
mov
outs
fisub
adc
cmp
rcl
shr
mov
cmp
out
test
xor
dec
pop
loope
dec
gs
push
into
mov
test
es
rol
in
imul
cmps
xor
cmp
jecxz
mov
leave
pop
push
fcmovu
pusha
sub
in
jg
add
sbb
sbb
ja
dec
cld
push
call
cdq
dec
retf
pop
mov
stc
shr
xchg
hlt
xor
dec
addr16
push
inc
adc
adc
pop
cmps
xchg
(bad)
int
fs
pop
mov
and
loopne
mov
adc
and
or
les
and
dec
mov
(bad)
lods
sub
outs
out
push
adc
or
out
adc
addr16
loop
or
sbb
mov
push
xor
and
in
mov
mov
cmp
adc
xor
dec
sbb
aaa
jo
into
push
or
add
xchg
mov
add
push
clc
push
in
add
addr16
call
sub
xchg
stc
dec
xchg
aas
shl
sub
in
add
iretw
shl
pusha
test
adc
fmul
xor
push
and
fwait
cmps
xor
clc
inc
js
push
hlt
xchg
gs
sub
mov
inc
(bad)
into
ds
int3
cmp
(bad)
iret
mov
loop
jne
daa
ins
cmovp
int
pop
mov
and
sahf
pcmpeqw
inc
test
add
pop
ins
jmp
xchg
cmp
movs
mov
xchg
xor
dec
shl
jno
push
popf
std
xchg
add
pop
or
mov
pop
mov
mov
jg
and
xchg
enter
dec
or
sbb
xor
js
fsubr
xchg
test
shl
jecxz
cli
sub
pop
idiv
aaa
xchg
(bad)
scas
mov
xor
sub
aas
je
inc
dec
fmul
jmp
fcom
push
mov
jae
or
jmp
into
pop
xchg
push
(bad)
adc
adc
pop
out
ret
xchg
ss
pusha
sub
nop
loope
jg
std
adc
mov
daa
aas
nop
fcom
stc
push
jnp
cmp
(bad)
xlat
imul
imul
dec
mov
pop
mov
in
repnz
cmps
jae
hlt
add
jle
fstp
mov
sub
mov
iret
ror
mov
push
or
pop
xchg
xor
jle
aad
cld
dec
adc
sti
push
push
nop
jle
dec
sbb
mov
ror
adc
xchg
popa
and
push
jg
sbb
ret
dec
mov
dec
xchg
dec
cmp
add
or
test
pop
rcr
mov
pop
push
cmps
in
push
fbstp
add
jnp
cmp
adc
das
int
rcl
add
jae
mov
cmp
and
daa
repz
jp
out
add
inc
jb
xor
ja
dec
xchg
xchg
and
push
xchg
aad
sahf
cmps
adc
sub
jno
les
rcl
scas
cmp
repz
jg
and
xchg
pusha
outs
xor
mov
mov
xchg
dec
in
daa
xchg
mov
pusha
in
cmc
es
imul
mov
(bad)
mov
and
add
push
sub
dec
test
add
or
adc
pop
enter
imul
(bad)
jns
loope
int3
and
dec
jno
pop
hlt
push
mov
cmp
and
arpl
pop
ja
xchg
cmp
in
enter
mov
jns
cmp
adc
pusha
adc
shl
mov
dec
imul
retf
int3
mov
mov
jg
and
pop
aad
jne
xor
dec
in
test
xchg
popf
mov
pusha
and
jp
sub
mov
jecxz
popf
mov
inc
scas
std
or
dec
out
jb
sub
cdq
call
into
xor
or
leave
lods
mov
inc
xor
ja
icebp
push
push
sbb
loopne
stc
ins
xchg
pop
shl
je
or
ror
sbb
hlt
pop
sub
or
adc
lds
neg
cmps
icebp
xlat
xor
cmc
push
lods
add
jne
mov
stos
and
sbb
jbe
push
xlat
into
sub
dec
lahf
mov
cmp
jnp
adc
add
push
mov
jg
out
push
ror
cmp
xor
cli
cli
adc
add
add
mov
mov
lahf
cld
push
inc
mov
jmpw
and
cmc
std
mov
ins
daa
ret
int3
repnz
or
jge
and
js
call
jmp
out
mov
popf
lock
fadd
sbb
clc
cs
test
xor
mov
lods
xchg
loop
das
cmp
fidivr
pusha
clc
push
mov
sub
cmc
pop
push
xchg
fidivr
xchg
in
jle
mov
inc
or
(bad)
push
movs
mov
xchg
push
cdq
scas
neg
mov
mov
push
fs
adc
shl
out
dec
sbb
sub
rcl
push
xor
inc
retf
test
fadd
dec
out
scas
pop
nop
xchg
test
sub
mov
das
mov
mov
xchg
xchg
cmp
push
arpl
jg
lahf
jmp
into
ins
dec
data16
lock
mov
loop
jg
push
sub
fcmovnb
dec
ficom
aad
add
ret
jb
mov
xor
jae
xchg
cmps
add
sbb
dec
add
and
lock
test
(bad)
mov
in
(bad)
js
stc
xlat
cmps
cmp
mov
mov
in
and
scas
int3
in
icebp
jns
jmp
sub
sub
xor
mov
cmp
sub
xchg
gs
mov
jb
push
pop
cdq
sbb
movs
test
into
mov
push
movs
cmp
adc
shr
push
pop
call
mov
pushf
xor
sub
sub
aaa
or
cld
pop
sbb
jb
ins
lods
push
nop
mov
mov
adc
add
cmps
data16
sub
sbb
sub
cmp
xchg
fcomp
test
jge
adc
push
xchg
sbb
and
adc
sbb
nop
xor
sub
js
sub
cmp
int3
in
(bad)
jns
iret
enter
adc
push
dec
jp
sub
jmp
xor
lods
aas
mov
mov
dec
push
aas
jns
outs
gs
cmps
out
xor
inc
cmps
cmp
push
adc
ss
mov
jmp
cmp
push
sbb
out
mov
xchg
xchg
into
pop
mov
icebp
retf
inc
xor
retf
fimul
push
mov
repz
and
dec
call
xchg
cmp
ret
mov
jae
mov
mov
fstp
es
retf
xchg
iret
or
lods
cmp
mov
adc
popa
xchg
mov
or
ret
fbld
sbb
mov
out
xchg
aad
or
xor
movs
sub
xchg
and
or
push
in
mov
inc
mov
xor
in
cmp
pusha
sbb
inc
and
js
mov
int
adc
std
xchg
pushf
jg
xchg
sub
dec
fstp
or
enter
and
push
cmp
push
pop
not
jnp
jecxz
pop
sbb
push
movs
jnp
pop
retf
sbb
dec
(bad)
cmps
test
jno
xchg
adc
jns
sahf
mov
and
inc
(bad)
cdq
ja
or
(bad)
in
adc
cmp
call
(bad)
dec
ja
jmp
mov
sub
std
and
cli
cmc
cld
cli
stos
repnz
dec
jnp
push
(bad)
or
cmp
fstp
int3
pop
jl
or
mov
cmp
mov
enter
aam
jbe
jl
loope
sbb
add
jl
sub
add
adc
inc
shl
jecxz
ds
movs
sbb
int3
sub
jl
cmps
hlt
jne
inc
mov
add
nop
jb
in
add
jl
jge
jmp
xor
test
in
mov
gs
pusha
bnd
pop
sbb
fistp
outs
or
xlat
cwde
lock
mov
jge
sub
mov
jmp
cld
and
mov
jl
xor
sbb
mov
inc
mov
mov
and
fstp
dec
cmp
pop
sbb
cmp
hlt
jmp
scas
inc
xor
jl
adc
mov
dec
jmp
into
lahf
pop
push
mov
sahf
aas
fnstsw
cmp
jle
xchg
adc
and
test
xor
dec
cmc
push
push
xchg
outs
jmp
inc
imul
pop
xchg
jnp
mov
xchg
(bad)
call
or
mov
mov
dec
jl
scas
xchg
pusha
dec
dec
fs
mov
cmp
jae
test
cld
sbb
in
pop
cmps
adc
or
(bad)
pop
cmp
dec
lods
sbb
jp
ja
fsub
fimul
rcl
xchg
data16
xchg
mov
lods
and
icebp
mov
add
mov
outs
ins
sub
in
hlt
xchg
jl
bound
jl
adc
lods
xor
test
lea
jge
leave
xchg
lock
dec
jb
jl
aaa
push
loope
sbb
mov
pop
or
fmul
(bad)
icebp
stos
test
push
aaa
mov
jns
in
pop
or
sar
test
push
pop
cdq
aas
or
nop
inc
rcr
scas
jge
xchg
cli
sub
leave
mov
pop
js
jns
jg
cld
daa
cmc
sbb
jl
mov
mov
xor
jmp
(bad)
jl
sub
sbb
cmps
std
pop
add
(bad)
jl
lods
inc
xor
or
jne
in
adc
jl
aad
into
inc
push
jl
enter
mov
mov
popa
out
pop
or
ret
sub
rcr
and
jmp
push
and
rcr
jae
cli
std
add
add
fnstcw
jne
sbb
or
pop
mov
push
std
test
xchg
jl
cmp
xchg
xor
pop
into
imul
mov
push
jl
cmp
mov
mov
jp
pop
das
ins
jl
fidiv
in
test
les
cmps
ss
and
sbb
lods
mov
add
jl
sub
in
mov
aas
jl
and
mov
bound
sbb
pxor
shr
or
push
repnz
jl
ret
call
cmps
in
jmp
push
jle
push
aas
mov
dec
mov
ret
add
jl
sbb
fidiv
pop
repz
mov
adc
cwde
js
cmp
bound
xchg
aas
lea
fdivr
or
ja
xchg
test
(bad)
pop
jl
movs
or
test
push
test
ds
int3
adc
cld
and
sahf
cmc
jl
fidivr
cmp
pusha
xor
push
mov
fst
and
lahf
mov
mov
push
call
out
fs
add
push
outs
imul
dec
mov
aas
jge
sti
int
sub
pop
nop
or
inc
jb
cld
pop
mov
cmp
mul
dec
lahf
inc
or
mov
scas
sbb
adc
outs
icebp
jl
mov
add
sahf
xchg
or
and
inc
data16
push
cmp
repnz
test
imul
jl
adc
int3
lods
adc
jmp
and
jl
enter
or
(bad)
jl
shl
movs
les
xchg
call
jge
into
aam
je
imul
popf
sahf
and
jl
icebp
push
pop
ficom
adc
jne
xor
cs
in
les
hlt
dec
xchg
aaa
je
jl
mov
popa
mov
pop
jnp
pop
movs
xor
aam
jnp
ja
lock
sub
ror
idiv
test
push
jl
push
shl
aad
mov
jl
in
dec
cmp
rol
inc
adc
mov
aas
in
or
jnp
jmp
fistp
sbb
jns
loopne
lea
jecxz
push
les
lds
ja
ds
out
and
popf
ret
and
or
cmp
fwait
outs
add
xchg
fsubr
sub
in
lock
xor
hlt
fisttp
adc
ja
es
or
stos
cmp
out
mov
adc
and
retf
out
test
push
lods
jl
sar
jl
sub
mov
and
ja
popa
out
shr
aam
std
push
jl
mov
jl
add
mov
xor
clc
jno
xchg
jl
mov
data16
mov
retf
outs
gs
or
sahf
loop
or
jl
dec
mov
and
cmp
cmp
movs
adc
jnp
mov
cld
daa
jle
fcom
pop
stc
inc
call
jno
sar
outs
ins
xchg
jmp
jl
add
cmps
jl
jecxz
fcmove
(bad)
dec
add
ffreep
nop
in
lods
jl
lods
adc
push
xchg
cmps
dec
xor
fldenv
cld
xchg
jno
fwait
adc
add
scas
test
idiv
movs
(bad)
out
and
and
inc
xchg
jl
retf
mov
test
or
and
dec
jl
lahf
sub
out
inc
and
pusha
add
iret
cmp
(bad)
cmp
inc
fstp
pop
cmp
jmp
or
iret
jnp
push
jecxz
lock
les
or
outs
mov
jecxz
rol
jl
inc
or
jnp
shl
retf
in
mov
out
jl
mov
mov
jl
sub
les
popa
jle
mov
dec
xchg
daa
mov
mov
mov
mov
lahf
call
mov
or
jge
pop
jle
ss
add
ja
and
cld
das
jl
addr16
aas
inc
jl
div
call
aas
sahf
pop
popa
in
cmp
int
cmp
in
jl
ja
jecxz
pop
fldcw
adc
popa
shl
pop
inc
enter
test
das
int3
jne
(bad)
imul
fldcw
sbb
loopne
cs
outs
dec
pop
sbb
pop
ret
cmp
mov
mov
fisubr
pop
and
adc
int
jmp
adc
mov
and
ss
out
jae
cmp
ret
xor
jl
mov
push
push
jecxz
jle
das
push
mov
jns
inc
lods
test
mov
sub
jle
jl
jle
(bad)
(bad)
and
movs
jl
ss
pop
gs
stc
push
sbb
in
sub
sub
rcl
outs
je
xchg
(bad)
fmul
ja
nop
int3
mov
out
jl
inc
push
xchg
jecxz
enter
pop
and
sti
push
jae
nop
fnstcw
pusha
rcr
clc
pop
jl
out
cdq
ja
int3
lds
mov
loop
mov
jnp
mov
out
xchg
or
mov
fidivr
sub
imul
fcomp
push
mov
icebp
mov
push
mov
push
pop
loop
sahf
xchg
sar
or
jecxz
jge
add
cmp
dec
rol
mov
sbb
sub
push
xlat
xchg
inc
cmc
sub
icebp
jl
mov
lds
lods
sbb
pusha
out
cmp
jno
sbb
dec
stos
mov
call
add
lahf
jae
repnz
jg
imul
jge
repz
mov
movs
adc
sahf
and
mov
xchg
iret
lock
jae
and
test
jnp
add
and
shl
ins
(bad)
pop
push
daa
cmp
iret
xlat
jmp
test
rcr
das
mov
xchg
cmp
jo
in
fdivr
pop
sub
sahf
in
loopne
les
iret
js
es
mov
xchg
mov
ss
retf
mov
aam
movs
call
inc
xchg
mov
das
shl
js
adc
rol
or
or
test
shr
mov
outs
imul
and
dec
(bad)
dec
jge
mov
mov
ss
cmps
in
cmp
movs
popf
jl
iret
scas
or
jmp
cmp
pop
cwde
add
aad
cmp
or
sub
(bad)
sar
jno
repz
and
int3
mov
adc
pop
mov
lock
add
in
cs
bound
jne
inc
adc
adc
aas
jecxz
fsub
das
dec
popf
pop
test
ds
jo
in
sub
mov
stos
xchg
cs
dec
loop
dec
push
sub
mov
loop
xor
push
inc
mov
mov
mov
aam
xchg
mov
sub
jmp
pop
loope
pop
stos
sub
(bad)
out
xor
cmp
add
jge
adc
(bad)
dec
aas
inc
sbb
xchg
test
mov
pop
lods
dec
shl
cs
pop
fcom
jno
adc
sbb
add
in
dec
jmp
clc
and
push
(bad)
cld
xchg
dec
sub
neg
inc
movs
mov
jmp
inc
pop
jge
sub
out
pop
je
dec
xchg
data16
or
mov
jmp
mov
fisttp
test
out
cmp
mov
sbb
loop
(bad)
dec
xchg
fild
xchg
nop
nop
lds
ds
movs
movs
dec
ret
pop
mov
inc
fs
sbb
(bad)
js
loopne
data16
pusha
icebp
repz
sub
jle
sbb
xchg
sbb
mov
ss
test
cdq
add
iret
lock
push
pop
test
das
daa
mov
cli
sub
push
xchg
cmp
es
cwde
leave
sti
in
xchg
or
cmp
cmc
repnz
jne
jmp
pop
inc
ret
sub
pusha
fidivr
mov
jp
sub
add
sub
mov
mov
sbb
pop
add
adc
or
into
mov
mov
mov
inc
test
mov
xchg
mov
mov
add
test
jo
jecxz
mov
cmp
outs
out
in
dec
push
sub
ficom
sbb
cdq
ficom
cmp
call
sti
outs
sbb
repnz
push
jle
dec
ficom
in
dec
mov
test
add
push
mov
popf
out
sub
sbb
or
in
sti
xchg
call
xchg
je
add
test
pop
(bad)
scas
cli
adc
pop
jp
sbb
push
pop
sub
ficomp
push
call
sbb
jl
mov
adc
jl
sub
pop
pop
xor
xchg
and
and
mov
xchg
adc
or
out
ins
dec
xor
leave
test
push
xchg
icebp
push
std
clc
test
aas
loop
push
xor
mov
(bad)
jg
ss
sub
pop
dec
and
cwde
xor
ret
jp
lock
lea
fcom
imul
hlt
ret
push
jne
jae
and
movs
div
mov
ss
mov
pushf
into
pop
int3
push
or
or
mov
fsubr
jmp
mov
jbe
or
and
jno
mov
mov
sub
sbb
add
inc
jnp
push
sbb
in
inc
outs
aam
sbb
push
pop
jge
in
add
pop
pop
and
lds
lea
data16
mov
in
add
dec
arpl
call
int3
scas
sub
mov
jl
xchg
mov
xchg
int3
pop
sbb
lea
pusha
xor
cdq
test
test
mov
mov
es
or
sbb
xchg
jo
clc
inc
rcl
mov
stos
dec
repz
in
mov
outs
loope
cmp
mov
jns
repz
xor
(bad)
dec
sbb
pop
pop
cwde
push
xor
retf
mov
jmp
in
arpl
aam
xor
push
das
test
sahf
repz
pop
jo
pop
pop
jge
out
jnp
mov
je
jmp
jmp
mov
outs
loop
aam
push
xchg
dec
sti
add
in
cs
xor
icebp
stc
jb
or
pusha
xchg
push
in
out
lds
daa
xchg
add
add
call
hlt
pop
push
and
in
cmc
push
ins
adc
sub
dec
push
push
jb
repnz
ffreep
dec
mov
inc
lahf
push
xor
push
push
xchg
mov
(bad)
push
sbb
cmc
jb
xchg
adc
xor
sar
call
xchg
push
sbb
inc
lods
cmc
es
push
aas
fadd
outs
push
inc
test
xchg
xchg
xor
sub
int
add
leave
xchg
call
mov
pop
cmps
cld
and
fisubr
dec
jae
ror
out
and
popf
lods
aas
int
mov
lahf
and
sub
pop
jne
(bad)
movs
cli
xchg
push
enter
cmp
fmul
ffree
push
data16
sti
movs
mov
bound
test
dec
xchg
int
xchg
mov
adc
and
sub
in
cmp
or
push
sub
(bad)
js
and
pop
movs
ret
push
pop
cwde
in
imul
loopne
pushf
jle
mov
mov
mov
or
inc
(bad)
data16
add
mov
icebp
xor
cmps
add
fstp
xchg
sbb
adc
imul
sub
inc
cmc
mov
fiadd
add
stos
push
mov
nop
or
inc
mov
sub
push
and
inc
mov
lds
into
fcomp
movs
arpl
add
inc
das
test
loop
or
pop
xchg
mov
(bad)
or
(bad)
jmp
sbb
cdq
adc
cmp
iret
in
cmp
shl
cmp
in
mov
sbb
jmp
inc
fisubr
inc
ja
fidivr
adc
jns
(bad)
jp
xchg
pop
pusha
and
jae
cwde
and
or
int
jecxz
daa
outs
ins
loop
pop
data16
ss
cwde
neg
cli
cmc
test
jl
int3
(bad)
cli
mov
mov
fsubr
add
mov
adc
or
and
or
mov
(bad)
fiadd
adc
popa
shr
sub
ret
jnp
test
or
ror
inc
mov
je
aad
sub
mov
mov
mov
sub
sbb
fadd
sbb
cmp
xchg
jb
cli
xchg
pop
int3
out
stc
sbb
cmp
xor
dec
xor
fwait
xchg
cli
xor
mov
dec
sub
xor
mov
rcr
mov
ret
(bad)
popf
outs
ins
sbb
pop
rcl
mov
sbb
adc
mov
xor
adc
and
or
mov
adc
push
cmc
cmp
movs
pop
mov
les
xchg
js
aaa
lds
mov
retf
fisttp
xor
mov
sub
shl
pop
daa
push
shl
sbb
push
test
pop
mov
jl
mov
js
xchg
inc
into
mov
repz
in
(bad)
rol
cli
and
inc
mov
pop
call
cmp
fld
push
pop
sub
je
and
xor
mov
xor
imul
in
movs
push
es
mov
inc
mov
cmp
in
cmp
push
test
push
jl
(bad)
aam
pop
jmp
xchg
mov
and
pop
std
or
test
sar
cmps
int
(bad)
dec
mov
pop
and
push
inc
adc
shr
and
pop
mov
add
out
lods
into
les
mov
jne
clc
imul
xor
sar
fsub
in
adc
sub
jbe
dec
mov
mov
push
mov
cmp
out
mov
(bad)
leave
mov
dec
daa
or
mov
pop
jb
data16
adc
jo
xchg
mov
cmps
add
call
cmps
add
xor
xor
and
in
mov
(bad)
out
jno
pop
push
dec
cwde
mov
xor
mul
dec
jmp
pop
push
push
adc
jb
test
cs
cmp
push
mov
loope
sub
adc
xor
and
repz
sub
dec
dec
out
in
and
arpl
inc
call
out
in
push
in
dec
rcr
repz
mov
xchg
push
icebp
mov
adc
jmp
xchg
mov
jbe
and
adc
jg
cmp
cmp
sbb
retf
or
inc
test
pop
ins
or
mov
mov
jae
pop
test
in
addr16
pop
sbb
sub
mov
mov
pop
sar
add
repnz
xchg
sbb
mov
or
bound
mov
jle
inc
and
cld
and
mov
repz
xchg
sbb
retf
mov
jmp
xchg
aas
mov
cdq
(bad)
or
in
cwde
(bad)
adc
xchg
(bad)
dec
mov
ins
sub
xor
cmp
daa
and
push
stc
test
fist
or
push
mov
jg
xchg
mov
or
adc
pushf
pop
std
fcmove
mov
ret
loope
in
add
sub
xor
pop
mov
pop
lock
mov
ret
(bad)
ficomp
pop
and
out
cmp
(bad)
das
and
dec
cmps
into
jns
cmp
popw
mov
ret
adc
xor
imul
inc
xchg
test
pop
pop
mov
pusha
bswap
and
or
sbb
out
cmp
fist
mov
sub
in
push
(bad)
pop
or
aaa
push
jmp
jne
and
repz
scas
push
push
inc
inc
mov
pop
mov
loope
not
icebp
jp
xchg
(bad)
or
in
jo
test
ins
xchg
out
loope
mov
jo
and
jle
fst
fs
ja
pop
mov
jne
sbb
mov
stos
lock
pop
sub
inc
jmp
in
sar
xchg
adc
fisttp
mov
les
fxch
cmp
pop
loope
cmps
push
sbb
int3
test
or
add
jb
inc
cmps
loopne
push
pop
jno
inc
pop
dec
mov
inc
xchg
fwait
mov
and
mov
mov
ror
daa
xor
hlt
mov
push
xor
or
cdq
clc
push
jnp
xor
aad
sbb
rcr
loopne
cdq
data16
popf
fdiv
or
sbb
jb
mov
push
lods
sbb
ret
enter
cdq
or
xchg
aad
repnz
mov
ret
sub
nop
mov
ror
lods
sahf
pop
adc
pop
stos
and
out
xchg
xchg
jo
jmp
cmps
call
ret
sbb
mov
mov
cli
sub
jae
xor
xor
mov
lea
in
mov
loope
sub
adc
aad
push
inc
jl
fcomp
stos
xchg
mov
stos
mov
pop
les
jns
pop
mov
dec
cmps
mov
xchg
xchg
mov
js
sub
sub
mov
or
or
xchg
or
add
cmp
mov
sub
push
in
mov
aam
test
ds
add
in
and
hlt
push
xor
int3
jne
or
rcl
and
jns
pusha
jecxz
enter
and
in
mov
pop
cs
xchg
mov
stc
jmp
scas
mov
mov
ret
movs
or
adc
pop
adc
jmp
inc
ret
jne
es
movs
cs
push
cld
inc
nop
(bad)
in
xchg
out
popf
push
repnz
sub
mov
xchg
mov
clc
pop
in
shl
mov
and
sub
sub
sub
cld
cmc
repnz
xchg
jl
jae
shr
sti
sbb
dec
xor
push
ja
sbb
xchg
mov
jl
and
cld
and
neg
adc
ins
inc
(bad)
retf
mov
cwde
mov
dec
pop
iret
or
jo
xor
in
mov
imul
in
aaa
jno
(bad)
jecxz
mov
in
iret
std
sbb
sbb
sbb
addr16
imul
(bad)
loopne
xchg
adc
push
mov
and
popf
std
add
popf
addr16
push
repnz
hlt
clc
xchg
sub
pop
fwait
nop
cmc
fistp
inc
or
sbb
sub
popf
mov
and
pop
mov
mov
sbb
mov
push
push
cld
les
loop
mov
test
jle
mov
cmp
rol
ror
xchg
aaa
adc
xlat
jb
sbb
xor
cmp
in
cs
adc
push
test
sbb
fsubr
jo
xchg
addr16
cwde
push
xor
bound
fs
repz
pop
jmp
ja
sbb
xchg
fsub
dec
mov
gs
inc
mov
cmp
or
int3
ins
mov
sti
and
retf
in
push
arpl
or
add
in
popa
into
xchg
pushf
outs
rcl
sti
hlt
imul
mov
xchg
pop
mov
xchg
ins
push
jl
push
push
aad
jae
or
or
fst
or
or
dec
test
sbb
xchg
mul
addr16
push
xchg
mov
adc
mov
and
push
xchg
arpl
iret
pushf
xor
pop
jmp
mov
pop
xor
push
call
jmp
into
leave
xchg
mov
fst
dec
cmp
int
pop
lods
cmp
in
xor
dec
es
dec
ror
sub
fmul
inc
mov
hlt
xchg
xchg
in
lods
loop
mov
ds
add
pop
dec
ror
cld
lods
adc
xchg
xchg
jmp
ficom
sub
outs
loop
lds
cmp
xor
ret
sbb
stc
neg
js
or
jmp
lods
popf
repz
shl
(bad)
pushf
xchg
push
hlt
fsubr
xor
rol
ins
xchg
out
jo
dec
cmps
mov
push
aaa
pop
add
cmp
adc
loopne
jge
repnz
hlt
mov
(bad)
lds
gs
jne
imul
and
imul
sahf
mov
mov
out
cmp
mov
nop
outs
lds
sbb
jns
inc
rcr
fldcw
pop
js
dec
jle
pop
aaa
es
mov
(bad)
int3
(bad)
fstp
xor
inc
leave
pushf
ficom
std
jne
jno
adc
(bad)
lahf
xchg
cs
mov
ins
pop
jno
ror
outs
inc
adc
(bad)
int3
gs
or
mov
fs
sub
out
xchg
pop
and
xor
jecxz
sahf
sub
jle
jmp
xchg
repz
push
ja
retf
jg
js
or
in
pop
stc
dec
push
cld
xchg
addr16
xlat
xor
push
cmp
popf
pop
cmp
push
clc
daa
ror
cs
ss
fisttp
les
in
push
inc
js
arpl
ins
and
cmp
inc
lahf
inc
ret
das
cmp
lea
mov
pop
mov
or
outs
inc
jbe
cmp
shr
dec
daa
adc
or
cli
adc
jp
and
retf
out
test
sub
pop
call
sub
nop
mov
sbb
iret
fmul
cmc
jae
outs
mov
mov
sbb
mov
xor
neg
add
sti
adc
jp
ror
or
xchg
pushf
hlt
sub
pop
fisttp
mov
sbb
adc
addr16
sar
lods
dec
xor
jmp
outs
sub
aam
fcomp
sar
test
dec
jne
test
mov
pop
sub
fisttp
clc
in
mov
pop
dec
fst
adc
int
push
xchg
fiadd
mov
sbb
mov
sub
repz
call
inc
push
call
fstp
mov
sub
lahf
xchg
mov
shl
add
ds
mov
jnp
iret
cwde
sub
push
inc
cs
jmp
cdq
adc
fadd
mov
pop
pop
adc
and
mov
(bad)
loopne
jns
dec
test
sub
stos
shl
sbb
lods
aaa
push
sbb
repz
movs
scas
jp
(bad)
(bad)
dec
sbb
rcl
jbe
pop
sti
mov
pop
ja
sub
imul
push
mov
fiadd
xchg
(bad)
mov
sti
jns
add
ficom
mov
mov
sahf
xchg
xor
ins
cmp
sub
out
sbb
lea
sbb
shl
dec
out
push
ret
cmp
js
push
push
test
ss
sub
imul
add
xor
sar
js
xchg
sub
test
and
in
outs
fidivr
adc
sbb
dec
popa
cld
jo
jb
das
xchg
mov
add
loope
popf
lahf
out
xchg
pop
pop
xor
stos
loope
js
sub
push
or
test
dec
push
aam
test
loope
jmp
(bad)
int3
adc
adc
jmp
push
nop
and
addr16
loope
ret
jmp
or
mov
jg
sub
mov
xor
sub
scas
or
inc
outs
push
ds
pop
out
cli
xor
xchg
nop
adc
xor
cwde
or
and
jo
jmp
xchg
push
in
ror
push
xchg
add
sbb
(bad)
fs
and
ins
fisub
aas
sub
lea
push
std
jns
imul
es
fst
xchg
or
stc
(bad)
sbb
fcomi
adc
imul
mov
mov
sbb
pop
into
sub
stc
fwait
sub
ffree
dec
fidivr
cmp
cmp
adc
push
sbb
ret
repnz
cmps
mov
inc
push
sti
pop
(bad)
icebp
loope
(bad)
adc
out
daa
xchg
je
sbb
cmc
sbb
inc
sbb
or
iret
pop
clc
js
add
mov
lock
and
ret
std
icebp
jne
addr16
sub
adc
scas
jle
(bad)
shl
jnp
jo
xchg
in
xchg
das
adc
cmp
adc
rol
mov
push
adc
push
mov
mov
adc
in
push
int3
(bad)
push
outs
sub
jbe
ret
sbb
sete
xchg
shl
lods
jle
xchg
cmp
mov
adc
test
cmp
adc
(bad)
dec
cmp
(bad)
fbstp
and
push
test
ins
sub
popf
xchg
scas
push
dec
dec
imul
or
mov
imul
(bad)
movs
sub
(bad)
call
aam
mov
adc
gs
mov
loop
pop
push
pushf
es
xchg
cwde
jmp
mov
mov
out
mov
jecxz
loop
or
xor
and
sub
cmp
ret
and
adc
pop
dec
push
mov
mov
nop
and
out
fucomip
sub
xchg
or
mov
arpl
shl
mov
pop
xor
and
mov
adc
mov
adc
(bad)
dec
mov
je
mov
ds
(bad)
adc
sub
fwait
clc
push
xor
adc
pop
out
and
adc
lock
int
jp
cmp
dec
sar
adc
jmp
mov
lea
je
arpl
repnz
gs
in
fild
sar
push
enter
movs
ret
push
sub
xlat
cmp
mov
pop
dec
in
xchg
push
sub
inc
cli
hlt
iret
mov
add
cld
fidivr
add
add
nop
lahf
mov
xchg
not
xor
call
push
rcl
mov
push
push
repz
inc
mov
icebp
jmp
fistp
add
add
push
cmp
jle
jl
adc
mov
or
cld
and
stos
push
fwait
mov
test
iret
aam
iret
jae
idiv
jle
outs
mov
and
xchg
scas
cli
xchg
out
xor
inc
mov
xchg
mov
aas
call
loope
shl
das
(bad)
hlt
lea
and
jns
movs
in
icebp
fsubrp
xor
push
xchg
inc
push
fidivr
mov
push
xchg
or
mov
rcr
mov
ins
pop
jne
daa
clc
(bad)
test
enter
in
jns
jmp
mov
out
cmp
mov
or
mov
std
cdq
dec
pop
nop
inc
(bad)
xchg
retf
mov
mov
xchg
dec
out
call
mov
jmp
dec
aad
cmps
nop
inc
nop
sub
outs
push
out
sub
call
mov
shl
ret
mov
xor
retf
inc
mov
add
sbb
std
movs
out
cmp
in
mov
mov
and
out
adc
mov
xchg
les
dec
cmp
call
test
jae
and
add
dec
mov
xor
xor
lock
test
inc
gs
fldcw
jnp
loope
aas
and
cld
or
jle
mov
xchg
or
jmp
xor
rcr
lock
and
cmp
add
sbb
cmp
imul
arpl
ds
add
add
out
xor
and
jmp
adc
pop
repnz
fdiv
or
xor
cmp
xchg
or
jg
clc
repz
cmp
cwde
cwde
mov
pop
adc
xchg
push
sub
xchg
repz
push
cmp
sub
push
xor
fdiv
imul
std
arpl
aam
retf
loopne
call
cmp
jnp
inc
outs
mov
sbb
sub
push
loopne
shr
xchg
cwde
mov
sub
push
or
arpl
outs
adc
pop
sbb
dec
data16
std
mov
gs
jle
or
jg
ins
cli
movntq
call
clc
sbb
mov
loope
dec
mov
fldcw
retf
pop
mov
jp
sub
mov
call
stos
je
push
imul
loop
and
inc
push
add
in
jmp
int
addr16
shl
push
in
xchg
(bad)
mov
std
ss
xchg
test
arpl
(bad)
daa
sbb
push
adc
mov
aad
retf
sub
pushf
movs
cmp
mov
test
arpl
jle
clc
enter
mov
mov
(bad)
aam
fs
cmp
stos
sub
test
into
lods
cmp
dec
clc
out
cmp
pop
push
xchg
xchg
pop
lods
pop
or
daa
loopne
jne
fld
fsubrp
lods
xor
push
push
push
xchg
mov
jnp
add
mov
shl
call
push
(bad)
inc
and
cmp
jne
cli
jmp
aam
cmc
jle
mov
cmp
nop
xchg
mov
loope
jmp
hlt
aam
xor
vorpd
push
push
es
cli
repz
stc
sub
add
daa
jle
out
ins
xchg
dec
stos
cmp
outs
or
pop
test
cmp
frstor
int
sahf
fisubr
ret
aas
cmp
cmp
xor
sub
push
sahf
jge
rcl
or
stos
or
in
fisubr
dec
out
xchg
sbb
xchg
adc
iret
neg
and
jg
dec
stos
push
push
xor
loope
in
lea
adc
stos
and
dec
ret
xchg
cli
jns
cmp
sub
xchg
dec
out
mov
fs
sub
cli
mov
push
or
mov
add
xor
xchg
loopne
and
cmp
dec
push
sbb
retf
cli
movs
cmc
fcomp
pop
sbb
cld
in
fadd
dec
pop
dec
outs
xchg
xor
mov
cmps
cmp
mov
loopne
daa
loope
dec
dec
cmp
push
icebp
lahf
xor
sub
push
mov
xlat
out
mov
dec
mul
dec
dec
sub
pop
xchg
ja
out
repz
fistp
movs
jge
xchg
imul
jg
das
mov
mov
mov
cmc
adc
adc
fs
(bad)
mov
ja
sub
repz
out
add
sub
icebp
imul
xor
push
jns
cmp
add
out
push
fadd
sub
xchg
scas
and
outs
jge
xchg
add
(bad)
dec
pop
retf
pop
add
lock
or
js
jmp
or
mov
sub
dec
jns
cmp
cmp
jno
pop
in
pusha
adc
and
push
in
hlt
inc
xchg
and
push
push
retf
cmc
ror
test
into
ficom
xchg
push
sub
jne
(bad)
aad
sub
jge
dec
rol
scas
dec
add
add
iret
jl
icebp
loop
mov
and
pop
sub
repnz
rcr
cs
sub
je
aad
adc
into
dec
cmp
xchg
dec
cmp
sub
jge
shr
movs
jp
aas
je
in
(bad)
bound
out
jp
ret
adc
cmp
out
aad
test
mov
mov
into
sub
and
xor
cmp
cs
push
or
inc
outs
out
sub
out
mov
sub
sub
and
xor
dec
push
jle
fistp
sub
rcl
mov
scas
imul
pusha
and
xor
loope
dec
(bad)
sbb
and
mov
inc
iret
std
pop
outs
in
mov
sub
ud0
(bad)
movs
addr16
imul
addr16
fnstsw
test
test
stc
cwde
or
scas
mov
in
xor
mov
(bad)
jmp
adc
xchg
mov
mov
in
mov
mov
in
fnstenv
jmp
fiadd
jnp
sub
sub
cmp
or
mov
popf
nop
dec
jl
push
xor
mov
pop
fld
lock
cmps
(bad)
sbb
mov
imul
jg
out
mov
add
pop
addr16
xchg
sbb
lods
xor
ins
ret
mov
and
aad
popa
out
xor
jge
lods
or
push
fmul
mov
test
inc
and
push
stc
outs
mov
lock
lea
test
mov
jle
sub
cs
dec
mov
xor
or
sub
int
icebp
jmp
imul
jbe
cmp
(bad)
es
push
loope
in
jmp
repz
inc
lods
or
in
push
push
test
xchg
scas
push
mov
jbe
cmc
xchg
in
mov
xchg
adc
jmp
sub
pusha
gs
mov
inc
cmp
pop
and
popf
sti
xchg
add
xchg
add
push
adc
shl
jg
add
xchg
call
lea
dec
sti
fimul
cmp
push
enter
test
jg
mov
xchg
mov
jg
push
fidivr
add
cmp
stc
aad
sar
mov
sub
xchg
fistp
loop
mov
ja
or
dec
scas
cld
(bad)
div
or
adc
jb
frstor
xchg
jb
adc
mov
sti
mov
shr
std
les
push
inc
xchg
xlat
movs
push
cwde
loopne
xchg
jp
sub
std
lods
les
inc
jmp
inc
cmp
mov
pop
fisttp
cmp
cmp
test
call
iret
cmp
sub
xchg
push
jg
pop
daa
in
add
mov
jo
sbb
ret
push
xchg
xchg
push
repnz
cmp
in
and
ins
jo
adc
add
xor
mov
jle
xlat
data16
inc
push
(bad)
pop
data16
out
xlat
inc
xchg
push
and
std
in
dec
je
call
(bad)
jmp
jle
es
outs
cmp
sbb
sub
mov
and
push
jg
mov
popa
stos
scas
out
sub
jmp
push
fimul
xchg
xchg
or
in
xchg
cmps
xor
and
cdq
imul
fdivr
pop
sbb
push
sbb
and
loop
hlt
xchg
mov
mov
les
sar
sub
sbb
mov
xor
inc
sbb
mov
cld
jnp
outs
std
out
lea
shl
mov
and
dec
pop
popa
out
test
imul
aam
jge
adc
push
jns
shl
xor
loope
int
repz
imul
xchg
rol
adc
mov
xor
xchg
jae
sbb
or
jp
aad
in
xchg
or
je
mov
mov
aam
rcr
iret
test
mov
mul
arpl
movs
jne
push
out
xor
mov
popa
or
movs
pop
sbb
scas
pop
je
push
lods
inc
push
fcomp
and
adc
in
pop
mov
ins
or
mov
sub
mov
push
sub
in
fnsave
icebp
inc
jl
retf
stos
pop
loopne
pop
fdivr
push
cmc
adc
es
out
into
stos
sub
mov
jl
cmp
aam
xchg
aam
lods
movs
js
ins
add
test
mov
mov
pop
add
add
xlat
jbe
inc
xchg
idiv
inc
js
ja
cli
push
sub
les
sbb
daa
xchg
(bad)
out
push
ss
cmps
and
int
cld
xchg
pop
push
cmp
add
inc
cmp
mov
mov
sub
jo
jo
push
es
icebp
xlat
sub
push
inc
iret
clc
pop
mov
adc
cmps
mov
mov
pushf
outs
cwde
inc
sub
cmp
adc
enter
(bad)
and
mov
xchg
dec
pop
sbb
cs
adc
retf
cmp
addr16
lods
jae
adc
inc
mov
fwait
and
cmp
inc
adc
and
cmp
aad
xchg
add
sub
adc
(bad)
mov
daa
adc
jg
pushf
pusha
mov
cli
out
test
je
shl
and
xor
loop
stc
fsubr
cmp
(bad)
dec
ins
sti
jo
mov
sbb
test
(bad)
adc
iret
add
es
and
mov
sti
mov
dec
sahf
loope
les
mov
cmp
scas
inc
mov
sub
mov
pop
sub
push
inc
leave
ss
jmp
jne
scas
push
add
ds
mov
stos
sbb
out
in
cmp
sti
push
pushf
stc
xchg
xor
mov
pusha
mov
xchg
jo
mov
and
cdq
push
fist
in
fdivp
sbb
clc
ds
mov
out
dec
mov
jmp
loop
mov
mov
sets
cmp
jle
adc
mov
stos
adc
mov
outs
push
mov
cli
jmp
fistp
xchg
fwait
dec
mov
(bad)
test
or
sub
lea
test
bound
mov
dec
in
into
mov
icebp
cmp
xchg
dec
lods
mov
das
pop
mov
sbb
clc
xor
cmp
dec
ret
sbb
jns
clc
jns
xor
ss
sbb
and
mov
adc
sub
xchg
(bad)
call
mov
xchg
sub
or
push
xchg
dec
push
ret
fcmove
push
inc
in
xor
sbb
aaa
push
xchg
repnz
scas
xchg
(bad)
jge
lods
aad
in
sub
sahf
mov
xchg
jb
pop
mov
jle
adc
sub
loop
mov
in
mov
rol
ret
pop
aam
or
pop
loope
pop
pop
or
push
xchg
and
jg
jne
shl
cwde
mov
out
sahf
jge
xchg
addr16
sub
jecxz
stos
imul
cmp
pop
clc
mov
inc
add
push
mov
inc
sub
cmc
in
(bad)
xlat
adc
sub
pop
das
addr16
sub
dec
dec
jo
pusha
sbb
add
jg
mov
adc
shl
add
push
xchg
jmp
sbb
loope
mov
pop
adc
in
pop
(bad)
push
sahf
cwde
sbb
xchg
xlat
std
sti
cs
rcr
mov
xor
push
push
(bad)
xchg
push
jae
retf
fimul
sbb
daa
movs
jno
and
xchg
mov
ret
stos
jbe
and
cli
test
add
add
cmp
dec
xchg
lods
lds
push
jp
inc
push
mov
cmc
gs
mov
out
sbb
or
lods
imul
cmc
sbb
xor
int
inc
jg
xchg
cld
stos
fidiv
aam
xor
add
pop
inc
iret
js
jecxz
addr16
das
adc
push
mov
fsub
aaa
pop
xor
sub
sub
push
ret
jg
inc
cmp
dec
mov
or
add
xchg
daa
add
cmps
adc
push
aas
xor
sub
inc
xor
dec
cli
push
sub
add
xchg
scas
in
mov
fldcw
cld
xchg
js
jbe
imul
jmp
dec
mov
push
dec
mov
stos
loopne
jo
inc
jmp
mov
jo
push
inc
aaa
clc
sbb
int3
sub
dec
mov
jae
je
mov
inc
and
popa
inc
aad
jmp
and
xor
arpl
jge
sbb
mov
xchg
popf
adc
repz
mov
mov
clc
test
addr16
lods
cmp
aas
cli
push
jo
fldcw
imul
xchg
jmp
dec
pushf
xchg
in
das
xchg
nop
cld
mov
mov
out
jp
icebp
neg
push
sub
mov
dec
stc
pop
sub
or
cwde
lea
repz
sub
cmc
sub
mov
push
mov
add
mov
(bad)
adc
mov
jle
int3
sbb
sbb
ja
or
adc
mov
dec
mov
cmp
sub
add
mov
test
outs
mov
push
test
(bad)
and
xor
shl
mov
push
sbb
and
mov
mov
out
xchg
jb
cld
call
push
test
mov
dec
jae
push
dec
jmp
mov
pushf
sub
out
in
dec
mov
jl
jmp
ret
cmp
cmc
hlt
frndint
js
inc
and
push
sub
dec
mov
jl
icebp
dec
cdq
push
call
sub
pop
test
jo
sti
sahf
cld
adc
stc
cmp
or
push
loopne
dec
push
fld
cs
sbb
lds
clc
push
xor
inc
xchg
pushf
and
mov
inc
jo
ret
mov
or
rcr
jne
pop
imul
pop
in
repnz
lods
cld
icebp
inc
test
sub
lods
sbb
test
loope
pop
fstp
or
jp
ficomp
fistp
into
sbb
iret
addr16
imul
adc
adc
cmc
neg
jecxz
dec
movs
pop
ss
shr
call
test
jns
pop
dec
ins
push
mov
shr
sub
mov
lds
pop
test
clc
sbb
mov
loope
mov
(bad)
mov
dec
push
cmp
sub
aad
jl
and
sub
shr
dec
adc
repnz
mov
cmps
enter
add
pop
xchg
dec
mov
les
xor
and
jns
aad
mov
pop
clc
mov
push
push
jne
popf
movs
pop
pop
sub
add
inc
pop
mov
mov
mov
icebp
dec
mov
jl
dec
jmp
les
sahf
xor
daa
mov
sub
xchg
xchg
xor
repz
hlt
adc
mov
(bad)
int
dec
mov
jmp
dec
xchg
lds
push
jns
pop
pop
pop
jnp
mov
xchg
jbe
mov
cmp
lods
mov
push
sub
test
loope
pop
call
iret
dec
fprem1
sbb
retf
or
push
sar
dec
stc
pushf
int
push
dec
sub
pop
mov
pop
pop
cmc
adc
sub
aam
cs
imul
repz
mov
pusha
mov
jne
xchg
ins
and
fsub
push
add
hlt
jmp
mov
data16
cmp
(bad)
ror
ss
ficom
retw
idiv
cmc
jle
out
js
shr
popa
cmp
in
pop
ins
ret
movs
xor
jmp
mov
jp
pop
sti
pop
jle
sub
retf
ins
cmp
les
dec
jecxz
sbb
xchg
(bad)
lea
mov
dec
jp
jg
sub
sub
scas
cmp
stos
jns
cld
das
jle
popa
js
(bad)
adc
mov
cmp
ins
push
xor
push
int
mov
scas
movs
fdivr
push
(bad)
out
in
mov
outs
mov
or
in
mov
or
adc
dec
cmp
cmp
adc
(bad)
(bad)
call
inc
jns
mov
jle
inc
cli
xchg
dec
dec
outs
es
push
and
xchg
add
sar
in
xchg
xor
std
xchg
(bad)
(bad)
push
ror
xchg
pop
jp
xchg
out
movs
dec
xchg
and
pop
pop
mov
and
nop
jmp
repz
jno
mov
into
pop
dec
push
sub
cs
test
std
jae
xchg
sbb
jne
add
pop
les
test
push
div
daa
pushf
sbb
call
dec
push
lds
retf
sub
shl
mov
adc
push
adc
adc
mov
lahf
lea
(bad)
mov
xchg
lock
sub
neg
cmp
mov
fcomp
push
pop
pop
fimul
or
icebp
xchg
nop
stos
inc
iret
push
xchg
pop
mov
jo
jmp
push
aam
jne
xor
push
sub
sub
xchg
rcl
sub
lea
or
xchg
mov
add
test
idiv
jl
mov
fsubr
outs
sar
stos
xchg
cmp
push
pop
jmp
adc
cld
push
adc
in
cdq
pop
pop
loopne
mov
sbb
push
xchg
or
sub
imul
adc
inc
xor
mov
cli
ins
mov
mov
sub
call
or
(bad)
push
mov
jg
adc
and
pop
add
call
xchg
lea
pushf
stc
repnz
sar
xchg
xchg
into
sbb
mov
jmp
inc
jne
xchg
sub
cmps
dec
loop
jb
sub
push
cmp
pop
mov
adc
jle
sbb
adc
out
pushw
in
sbb
jmp
cld
dec
sub
fistp
xchg
jge
sub
ds
jmp
xlat
(bad)
cs
rcr
xor
and
mov
xchg
sbb
cmp
lods
xchg
loop
sub
daa
sbb
adc
inc
push
aas
add
fbstp
jae
addr16
push
mov
jns
mov
xchg
cli
ins
sbb
in
ss
xor
adc
lods
add
mov
cwde
inc
xor
mov
stos
test
fisubr
in
stos
imul
(bad)
inc
addr16
add
and
mov
or
adc
test
dec
pop
xchg
xchg
dec
mov
mov
push
xchg
stos
sub
xor
add
or
jl
imul
daa
mov
jg
cmp
ret
pop
mov
dec
stos
lods
mov
add
int
sub
ret
mov
int
sbb
xchg
lock
sbb
in
mov
mov
(bad)
ss
jmp
js
mov
je
jnp
xchg
shr
pop
in
loopne
jp
fst
jo
or
xchg
xor
test
xchg
cdq
clc
fisttp
cmp
mov
data16
cmp
cmc
sti
adc
out
imul
test
inc
push
mov
xor
and
and
int3
cmp
retf
push
fimul
popf
sbb
jae
inc
outs
movs
pop
mov
cld
out
out
or
test
pop
add
ficomp
mul
out
sbb
mov
mov
sub
xor
fimul
loope
fcomp
pop
xor
addr16
sbb
aas
(bad)
jnp
pop
push
xchg
pop
jle
dec
cli
(bad)
retf
fxch
mov
ret
add
nop
xchg
(bad)
rcr
xchg
pop
neg
out
add
inc
mov
sub
inc
and
fld
cmp
fwait
xchg
mov
xchg
cmp
rcl
mov
cmp
call
outs
cmp
(bad)
fldenv
xchg
xchg
inc
add
xchg
rcr
and
das
nop
sar
adc
lods
sbb
and
into
scas
call
xchg
and
popa
xchg
adc
cs
je
cwde
hlt
push
mov
xchg
sub
xchg
dec
mov
adc
loop
xlat
mov
jmp
and
and
ins
ret
mov
stc
aad
jae
addr16
not
clc
je
inc
scas
test
repz
inc
test
sub
(bad)
in
fsubr
fist
pop
pusha
cmp
rcl
xor
add
mov
adc
out
xchg
mov
mov
js
repnz
xchg
and
ss
js
sub
ss
mov
cli
push
sub
in
adc
bound
mov
cld
mov
and
adc
push
sbb
mov
js
xchg
dec
xchg
aam
pop
(bad)
dec
lahf
sbb
ret
push
icebp
mov
inc
pop
jne
adc
sbb
and
dec
call
and
xor
lods
movaps
add
(bad)
adc
int3
add
or
outs
test
out
stos
in
pop
sbb
(bad)
mov
(bad)
fcmovbe
pushf
mov
push
add
je
pusha
jge
xlat
adc
adc
jne
mov
sub
test
mov
fs
loope
cld
adc
nop
aad
push
cmp
sub
sbb
or
xor
mov
and
mov
or
adc
mov
es
or
lahf
adc
js
mov
mov
cs
hlt
and
(bad)
nop
call
pop
xor
outs
dec
mov
outs
or
out
dec
mov
pop
ret
cld
pop
sbb
push
lods
add
lds
or
add
xchg
mov
pushf
movs
push
mov
repz
adc
dec
pop
cmc
mov
pop
bndldx
mov
mov
push
test
xchg
dec
push
sbb
mov
shr
pop
pop
sbb
mov
mov
push
into
cli
mov
xor
sub
xchg
dec
xor
mov
fld
mov
xchg
in
or
jne
repz
cmc
cmp
xor
outs
imul
push
mov
push
jg
int3
jmp
or
mov
jae
xchg
stc
fsubr
push
or
or
out
dec
daa
ss
xchg
mov
in
cmp
out
mov
repz
gs
mov
mov
(bad)
out
pop
in
cmp
inc
stos
adc
outs
push
popa
addr16
mov
pop
in
mov
mulps
loopne
je
icebp
clc
pop
fisubr
test
iret
sbb
sbb
in
and
jo
mov
ja
mov
jg
popf
jmp
inc
add
daa
(bad)
adc
out
ss
add
mov
mov
mov
ds
xchg
mov
scas
test
jecxz
push
mov
xchg
sahf
sti
push
int3
imul
sub
hlt
cmc
xchg
push
nop
int
jle
pop
dec
sbb
bts
xchg
and
mov
sar
loopne
mov
aaa
dec
in
loopne
mov
jo
loop
sbb
xchg
sub
lods
mov
(bad)
and
retf
sar
mov
jns
xchg
cmp
pop
cmc
mov
pop
aad
sub
pop
inc
xor
adc
xchg
mov
sub
jb
pop
in
pop
addr16
int3
sti
retf
jns
lahf
xchg
mov
fsub
ins
mov
in
xor
ret
loope
int3
pop
in
jge
push
adc
call
jb
xchg
push
xchg
enter
inc
out
jecxz
icebp
jns
push
and
pop
daa
cmp
popf
push
inc
xchg
ins
pop
cmp
ret
mov
loope
fsubr
std
mov
fsub
in
sub
fist
js
sbb
in
push
scas
icebp
cmp
movs
jne
or
xchg
out
jp
(bad)
dec
cmc
mov
sub
inc
push
jno
push
in
mov
sbb
push
loopne
push
ss
sbb
test
pop
and
xchg
mov
sub
mov
xlat
jecxz
cwde
and
gs
sbb
push
sub
test
lahf
in
mov
xchg
cmps
cmc
pushf
movs
rol
sbb
add
lds
das
xchg
pop
fisub
pop
dec
or
stos
adc
mov
adc
dec
push
xchg
in
movs
(bad)
data16
fwait
pop
ins
neg
dec
out
jbe
gs
das
lods
fadd
push
test
scas
hlt
js
sbb
jp
arpl
xor
lods
int3
rol
cmc
ror
call
xlat
or
mov
scas
sub
jne
lods
mov
dec
aaa
cmp
cs
or
lahf
cdq
sti
cld
xor
push
cmps
sub
xor
xchg
inc
stos
sub
ret
pushf
call
sub
mov
icebp
js
inc
bound
jmp
sar
xchg
sbb
xchg
js
mov
cli
shl
xchg
xor
hlt
in
stos
inc
adc
push
xchg
test
mov
xor
test
adc
je
bound
mov
in
adc
xchg
retf
add
les
lahf
sbb
in
jge
repnz
cli
pusha
xchg
(bad)
pushf
jg
scas
jle
xchg
push
test
push
dec
hlt
sub
pop
mov
jnp
add
movs
cmp
cli
mov
call
jge
outs
cli
js
sahf
sahf
dec
das
jne
mov
pop
pushf
(bad)
push
xor
xchg
mov
push
jno
test
mov
dec
push
jne
mov
jo
xrelease
fdivr
sbb
(bad)
cli
ret
outs
mov
or
imul
push
nop
or
out
das
mov
jg
fst
aam
out
pop
outs
sub
jnp
sbb
adc
cmc
ds
scas
and
xchg
cmps
rcr
(bad)
shr
xchg
addr16
enter
data16
das
push
sub
fnstenv
out
push
mov
cli
dec
xor
cmp
leave
mov
rcl
mov
and
inc
cmps
loop
xchg
pop
xchg
adc
lds
push
pop
call
mov
push
push
jg
add
jae
shl
stos
cmp
aas
enter
adc
std
dec
fild
leave
rcr
cld
movs
icebp
loope
dec
pop
das
add
js
iret
lea
loopne
or
jnp
xchg
xor
pop
push
push
sub
outs
repz
imul
scas
and
inc
xor
xor
ins
push
movs
inc
scas
mov
js
popf
inc
aas
call
adc
sbb
retf
pop
out
jecxz
adc
cs
sbb
jle
xchg
push
pop
mov
xor
call
sub
call
pop
rol
push
xor
mov
mov
xor
mov
sub
sar
mov
int3
sub
mov
push
cmp
sahf
das
imul
sbb
cmp
inc
and
or
test
jmp
das
js
xchg
test
aad
mov
sar
adc
pop
push
hlt
les
sbb
cmp
mov
inc
pop
ins
shl
xlat
adc
fs
xchg
lock
sub
and
jmp
data16
inc
inc
lds
lods
(bad)
test
inc
sbb
movs
mov
into
test
ret
pushf
or
or
cld
pop
pop
mov
aam
xchg
fiadd
jmp
mov
mov
out
jmp
push
sar
mov
dec
sbb
cmps
iret
or
fild
mov
or
std
adc
enter
fidiv
xor
dec
popf
jne
add
fs
xor
sub
std
mov
and
hlt
mov
inc
inc
and
xchg
adc
push
into
jns
cmc
mov
cmp
icebp
repz
jbe
in
push
pop
jae
iret
jp
iret
sub
shl
mov
fcom
xchg
call
jno
sub
jp
test
push
mov
sub
shr
std
and
adc
sti
stos
pop
loope
sub
rcr
lea
xchg
and
mov
hlt
add
fwait
cmp
cmp
cli
test
push
pop
dec
cld
mov
push
cmp
cld
fist
stos
jns
cmc
jmp
adc
jmp
mov
adc
cwde
dec
mov
mov
jmp
mul
dec
pop
or
xchg
pop
mov
or
loopne
(bad)
push
jl
mov
mul
push
cmp
fs
add
jns
mov
push
es
push
inc
xor
dec
(bad)
and
pop
data16
retf
sti
scas
aam
xchg
ret
and
sub
adc
pusha
or
fwait
ins
inc
out
add
retf
push
adc
lahf
jp
cmp
mov
movs
out
mov
mov
push
inc
std
xchg
pop
mov
mov
pusha
loope
add
sahf
push
cmp
mov
inc
enter
in
pusha
push
and
push
(bad)
sti
cmps
sbb
pop
retf
mov
cli
test
add
mov
mov
xchg
retf
mov
jno
cmp
call
rol
lahf
lahf
call
sbb
stos
add
lahf
inc
sbb
loop
pop
loopne
adc
repnz
popa
out
in
imul
test
scas
fs
ret
jle
test
clc
test
xchg
mov
mov
aas
das
push
and
mov
mov
xor
leave
dec
sub
mov
jae
adc
cld
das
addr16
bound
(bad)
in
pop
clc
cmc
jae
adc
mov
sub
test
aas
xor
icebp
xor
xchg
mov
lock
xor
test
pop
push
sub
jb
push
cld
in
std
ins
sahf
or
mov
jl
icebp
pusha
jmp
das
in
xchg
mov
out
stos
xor
inc
out
imul
ins
adc
cdq
xor
int3
sub
mov
mov
in
xchg
mov
adc
sub
jmp
adc
sbb
inc
push
jns
in
mov
es
adc
addr16
xor
mov
ins
push
push
add
sub
jno
mov
xor
pop
jbe
out
xor
aad
or
jge
mov
test
sbb
inc
xchg
jmp
xlat
mov
pop
pusha
or
xor
inc
hlt
add
stos
call
out
cmp
std
dec
test
mov
jne
jmp
mov
cld
or
mov
adc
test
ja
jg
les
push
arpl
mov
sub
jne
pop
cmp
ds
cmps
jb
adc
hlt
xchg
and
loope
cmp
adc
lods
retf
call
mov
xchg
xor
ja
sub
xor
punpcklbw
lods
push
adc
out
mov
push
push
mov
stc
push
xlat
xchg
cmp
xchg
cli
adc
sbb
sub
int
xchg
jns
stc
pop
ret
jo
scas
mov
cdq
data16
push
repz
add
iret
ror
mov
fimul
fld
ins
data16
add
sbb
ror
repz
inc
mov
mov
xor
sar
adc
test
jo
stos
or
xchg
jmp
retf
jae
repnz
movs
test
add
pop
rcl
or
cld
dec
xchg
jle
add
test
cmp
push
xchg
and
sub
outs
push
rol
jbe
xchg
cmp
xchg
dec
cld
cmps
pop
dec
inc
xchg
retf
push
cs
js
push
gs
ins
and
dec
pushf
sar
in
out
sub
add
sub
fcom
es
je
outs
in
shl
xchg
daa
adc
in
mov
xor
jge
shl
sahf
mov
add
jae
mov
jg
fidivr
stos
loope
arpl
xchg
cmc
sub
fadd
outs
push
icebp
cmp
rcl
and
inc
push
hlt
cs
push
dec
adc
fimul
bound
jbe
sbb
inc
(bad)
pop
or
xchg
push
and
jp
sub
add
sar
push
xchg
add
movs
imul
daa
jbe
shr
mov
mov
cld
mov
and
inc
xor
(bad)
mov
push
xchg
rcr
mov
pop
push
in
adc
scas
addr16
les
cld
push
mov
mov
out
pop
pusha
test
dec
inc
test
out
test
cld
xchg
xchg
cmps
imul
add
xchg
cmp
outs
push
lahf
js
xchg
mov
shl
(bad)
sub
call
sub
adc
ins
js
dec
mov
mov
or
pop
rcr
jp
sbb
mov
cld
xchg
scas
pushf
sub
cmps
cmp
mov
mov
jl
scas
sub
inc
(bad)
xchg
xor
je
xchg
and
aam
hlt
stc
(bad)
mov
xchg
int3
sbb
sbb
lock
jmp
fidivr
mov
pusha
jne
pop
jp
push
xor
sbb
sub
xchg
cmp
repz
or
jnp
pop
scas
mov
pop
jae
(bad)
in
cmps
adc
pushf
xchg
push
mov
and
xchg
add
add
cmps
test
test
les
dec
mov
test
shr
pusha
stos
mov
sub
mov
retf
clc
jmp
pop
stos
scas
shr
cmp
push
sub
scas
push
dec
xchg
scas
mov
xor
loop
jae
stc
xchg
add
xchg
xor
ror
add
xchg
cmp
in
jmp
push
rcl
cmp
scas
jne
inc
fisub
xchg
sbb
fidiv
add
nop
enter
int
xchg
fldcw
lds
cmp
std
ret
popf
repnz
inc
dec
inc
pusha
daa
dec
xchg
pop
stos
into
test
dec
mov
lods
aas
lock
cmp
cmp
idiv
shl
cmp
mov
jne
xchg
pop
arpl
in
cmp
pop
sub
sbb
add
fnstcw
dec
adc
jb
push
iret
test
add
or
ret
pop
ret
add
fisub
cwde
jae
(bad)
in
and
add
nop
xor
sbb
cmp
push
xchg
imul
mov
inc
sub
dec
xchg
or
push
xchg
mov
pop
lods
(bad)
fsincos
push
pop
push
cmc
mov
mov
push
out
cdq
jbe
leave
iret
mov
mov
ins
cmp
or
stc
ins
and
inc
cmp
dec
jo
ret
ins
leave
out
mov
jo
outs
shl
mov
adc
pop
inc
cmps
dec
add
in
jg
sub
cmp
fdivp
xchg
sbb
stos
outs
test
xchg
adc
xchg
xor
mov
in
enter
sub
and
call
bound
int3
cmp
cmc
sub
xchg
data16
mov
pop
jmp
into
inc
jp
mov
in
scas
jmp
push
jns
cwde
or
and
je
dec
iret
out
(bad)
mov
and
pop
sar
mov
pop
imul
mov
pop
jbe
arpl
and
data16
(bad)
call
xor
loopne
jmp
ret
adc
inc
jbe
jae
je
and
aam
mov
push
outs
dec
pop
jp
adc
push
jmp
xchg
jne
sub
jecxz
jo
push
push
call
dec
mov
(bad)
std
xchg
mov
out
push
jge
xchg
and
mov
popf
dec
sub
lods
mov
sbb
cmp
cwde
sub
sar
sahf
fisubr
pop
js
repnz
fisttp
jmp
fdivr
js
lea
pusha
sub
and
inc
pop
inc
scas
push
push
sbb
repz
mov
call
ins
xchg
add
hlt
iret
repnz
stos
fistp
mov
add
enter
dec
inc
lds
in
add
ficom
es
adc
add
xchg
jne
pop
xor
xchg
jecxz
daa
cmp
dec
or
nop
sub
mov
test
rcr
inc
js
adc
stos
jge
mov
test
add
mov
jo
cmp
std
fidiv
or
push
add
jp
nop
stos
lea
icebp
xchg
imul
loop
fstp
not
or
lahf
repnz
(bad)
clc
xchg
(bad)
cld
aas
and
adc
arpl
cmp
mov
call
xor
adc
in
or
pop
fs
xchg
or
pop
rcl
shr
ss
xor
ins
xor
cdq
call
aam
cli
in
jbe
cmp
inc
cmp
out
ret
int
dec
cwde
mov
int3
xchg
adc
sahf
lods
sar
jp
in
in
cli
lea
mov
(bad)
outs
adc
fneni(8087
sub
jo
repnz
xchg
pop
cwde
int
pop
xlat
(bad)
xchg
cmp
(bad)
fidivr
nop
pop
in
xchg
rcr
jge
rcl
and
in
sub
mov
ins
cmp
push
ret
rcr
jbe
sub
mov
xor
jmp
xchg
fnstcw
cmps
mov
ret
lds
jmp
pop
pop
push
outs
pop
sahf
sub
push
gs
xchg
inc
jae
xchg
shr
xor
sbb
dec
xchg
cmp
in
pop
and
(bad)
dec
cmp
push
push
mov
in
xor
and
cmc
popa
cmp
mov
ror
add
push
mov
je
rcl
sbb
mov
js
xchg
sbb
inc
xchg
xchg
aad
dec
xlat
and
add
push
xchg
hlt
dec
stc
dec
dec
int
daa
mov
mov
lock
cmps
xor
sub
les
cld
lea
pusha
dec
js
push
or
jns
jo
and
sbb
jbe
jo
dec
jae
cmp
dec
inc
outs
aad
mov
mov
addr16
jmp
fucomi
cmps
scas
xchg
jnp
dec
sub
inc
test
outs
int3
inc
shr
iret
dec
mov
cld
scas
inc
jg
pushf
push
aas
(bad)
cmp
dec
mov
test
dec
lea
inc
scas
inc
lahf
cs
cld
ret
inc
push
inc
sbb
sbb
xor
aam
push
inc
inc
mov
or
outs
add
div
in
lock
pop
cmp
inc
dec
cmp
inc
les
dec
loope
inc
inc
mov
dec
ror
in
push
dec
sbb
dec
xor
inc
fild
inc
mov
inc
and
cli
out
lahf
mov
fsincos
ds
shr
rcr
int3
jp
adc
pushf
inc
inc
vcmppd
adc
cmc
fmul
xor
mov
je
mul
dec
test
mov
dec
or
or
push
nop
pusha
add
loope
fs
fxch
inc
or
inc
sub
xor
pop
add
xchg
xchg
js
inc
add
outs
and
idiv
ds
pop
cmp
dec
loope
imul
push
xchg
pusha
mov
mov
push
mov
lods
inc
inc
or
or
push
cmps
pusha
push
inc
call
pop
dec
inc
dec
inc
ja
inc
sub
xlat
pop
je
push
mov
lods
jecxz
hlt
int3
js
cmp
adc
dec
pop
or
or
inc
out
push
shl
dec
call
mov
lods
pop
sub
rcr
outs
test
jmp
icebp
scas
mov
in
data16
sub
aam
mov
sub
sti
push
dec
ins
dec
mov
fdivr
cs
or
push
inc
mov
out
inc
sti
inc
push
inc
inc
sub
inc
pushf
inc
mov
inc
mov
inc
shr
fdiv
cmp
jnp
aas
call
lods
pop
sub
dec
jg
aam
xchg
or
xor
repnz
dec
inc
push
outs
jo
and
mov
jmp
fdiv
dec
cwde
adc
idiv
add
fsubr
into
fadd
sub
xor
inc
jbe
push
cs
loop
enter
sbb
mov
sub
rcr
dec
and
dec
pusha
jp
xor
mov
dec
mov
ja
adc
cmp
inc
xchg
addr16
das
loope
popa
test
fadd
inc
and
cdq
cmp
xchg
inc
test
aas
loopne
mov
lock
dec
push
stos
pushf
cmp
rcr
cmp
dec
add
mov
inc
inc
scas
cs
out
inc
shr
inc
out
retf
xchg
js
inc
adc
xor
shr
ja
or
ret
aas
movs
mov
sub
(bad)
in
out
mov
push
dec
clc
push
jne
outs
je
neg
retf
clc
fs
out
dec
out
hlt
sbb
fistp
sub
mov
or
inc
(bad)
cmp
ds
aas
add
in
ins
inc
push
cld
mov
dec
push
dec
or
pusha
ror
xchg
dec
cmp
mov
inc
or
fisub
inc
cmps
clc
xchg
stos
(bad)
jmp
pop
inc
call
adc
mov
dec
or
push
dec
sar
jno
mov
lea
test
mov
xchg
cmp
inc
sti
inc
addr16
inc
pop
inc
xchg
outs
out
inc
jle
jl
jns
add
fdivr
dec
mov
sub
dec
jge
dec
pop
dec
in
dec
jl
(bad)
xchg
add
jne
inc
inc
push
das
hlt
nop
mov
mov
in
daa
inc
add
and
and
cs
cmp
xchg
mov
arpl
or
xor
inc
dec
inc
jnp
dec
lds
in
popa
dec
lock
dec
inc
dec
sbb
(bad)
out
test
inc
scas
cwde
mov
call
inc
sbb
outs
inc
inc
gs
ds
loopne
sub
aas
jmp
and
push
dec
mov
in
and
dec
in
and
pop
stos
pusha
pop
inc
adc
fild
call
cmp
jmp
fsubr
inc
lock
je
inc
in
outs
push
idiv
xor
fwait
cmp
int3
add
sbb
sti
clc
dec
mov
dec
cld
ret
or
dec
or
rcl
ss
cwde
adc
icebp
call
pop
mov
dec
or
cmp
sbb
out
sahf
mov
in
dec
sbb
dec
ret
outs
bound
cs
not
sti
inc
scas
in
add
cwde
mov
in
mov
cld
test
inc
sub
xor
jnp
inc
mov
push
mov
in
cld
in
lock
dec
icebp
jmp
cmp
fcomp
stos
int3
xor
inc
dec
in
iret
inc
jno
xor
(bad)
fnsave
jg
out
sbb
stc
outs
imul
xor
rcr
in
cmp
cmp
mov
cwde
dec
fwait
dec
mov
dec
sbb
pushaw
and
div
dec
sbb
inc
or
into
cwde
pusha
mov
retf
inc
sahf
or
inc
xchg
mov
mov
fdivr
dec
push
sti
cld
dec
or
mov
inc
dec
pop
inc
mov
ds
rol
jns
inc
cwde
xor
inc
adc
jb
inc
gs
xchg
cmp
xor
mov
inc
dec
cs
popa
xor
dec
in
pop
cmp
or
les
inc
sbb
cld
sbb
in
cmp
xchg
cmps
jmp
(bad)
je
repnz
ja
stos
and
dec
or
or
jne
mov
cmp
je
or
push
sub
(bad)
pop
sub
dec
xchg
stc
in
mov
lods
ja
dec
std
push
in
retf
sbb
xchg
push
fidiv
inc
mov
or
xchg
cmp
dec
inc
pop
inc
ins
inc
cmp
sbb
cdq
xchg
xor
dec
ins
cmp
pop
int3
add
dec
imul
clc
mov
dec
sti
cmp
cdq
or
(bad)
cwde
js
ds
xchg
ja
inc
and
call
mov
mov
lods
fldcw
add
sti
inc
loop
retf
js
inc
and
(bad)
fidiv
sub
fsubr
sbb
ins
dec
rol
pusha
pop
dec
lock
popa
xchg
cmc
inc
dec
jge
and
rcr
cwde
int
cmp
sub
inc
stc
or
inc
or
xor
outs
and
cs
push
inc
and
leave
mov
jmp
pop
dec
dec
or
or
or
dec
iret
dec
mov
jmp
fisttp
outs
inc
pusha
inc
cmp
mov
(bad)
jb
inc
push
cmps
inc
cmp
and
lahf
dec
pusha
ss
(bad)
loope
pop
retf
loope
popa
(bad)
stc
imul
sahf
inc
hlt
loope
idiv
inc
sub
aaa
xchg
sbb
lock
cvtps2pi
jle
inc
call
fdiv
inc
clc
enter
(bad)
in
aaa
aas
hlt
cwde
jmp
mov
pop
arpl
sub
dec
sbb
inc
dec
or
outs
jns
and
mov
dec
pop
dec
ins
cmp
sub
aas
aad
or
inc
imul
jb
or
xchg
jmp
jae
int
dec
mov
add
push
dec
(bad)
cld
repnz
dec
sbb
inc
dec
stos
jnp
inc
sub
mov
cmp
jmp
fisub
mov
int3
and
cwde
cmp
lods
outs
cmp
cs
(bad)
mov
call
clc
sub
xor
pusha
lds
dec
dec
xchg
push
xchg
popf
or
mov
in
ret
pusha
jne
inc
loope
popa
rcr
pop
js
jmp
cmp
mov
scas
dec
cwde
in
inc
ret
xor
inc
mov
repnz
and
dec
aas
and
xor
xor
shr
iret
cs
cld
jmp
cwde
xchg
xchg
jp
dec
hlt
inc
xchg
inc
pop
cmp
inc
cmp
int3
jns
push
popa
les
inc
popf
ja
inc
xchg
pop
jbe
aaa
push
pushf
inc
jle
add
jns
imul
jp
arpl
and
jnp
or
ds
adc
mov
loope
mov
lods
dec
pusha
add
cwde
movs
xchg
clc
inc
inc
xlat
push
sahf
mov
sbb
cmp
inc
inc
cmps
inc
xchg
std
mov
in
inc
or
loope
ins
imul
pushf
sbb
(bad)
cli
cwde
pushf
jnp
into
dec
cli
dec
(bad)
jmp
inc
xor
mov
xlat
xor
inc
sti
(bad)
mov
inc
stos
cwde
and
std
inc
aas
in
inc
leave
dec
xchg
clc
retf
pop
ins
mov
jno
and
(bad)
ja
dec
and
aaa
test
dec
scas
dec
pusha
push
inc
or
loop
mov
sbb
fistp
dec
pop
repz
mov
mov
jmp
shr
daa
cld
mov
lods
xchg
jbe
aas
sub
inc
cmc
dec
fdivr
dec
xchg
pusha
je
and
add
jmp
cmc
(bad)
xlat
mov
mov
lods
and
rol
imul
les
add
jp
xchg
or
hlt
cwde
mov
inc
push
mov
push
hlt
mov
jmp
jne
dec
jnp
push
dec
xlat
pop
and
hlt
push
dec
jmp
xlat
std
jb
gs
ds
jp
enter
sub
sar
inc
push
cmp
and
pop
aas
xor
pop
sub
das
dec
xlat
cld
int
ss
or
sub
out
nop
mov
inc
inc
or
fsubp
lods
test
clc
pop
test
inc
inc
inc
pop
cmps
mov
cmp
popa
xchg
sbb
stc
sub
sbb
dec
repz
nop
aam
dec
mov
in
and
mov
xor
outs
cli
inc
lock
mov
sbb
test
lds
movs
cli
outs
aas
jmp
ja
dec
xchg
imul
gs
cmp
int3
dec
pop
enter
ja
inc
fcomp
inc
retf
mov
inc
xchg
mov
inc
sub
inc
in
cs
push
inc
push
lods
xchg
and
adc
jp
mov
pusha
pop
dec
cmp
out
outs
jge
dec
cld
dec
loopne
dec
pop
adc
add
inc
outs
test
push
mov
es
pusha
push
inc
add
jmp
xchg
ret
aam
std
aas
ret
sub
scas
jp
dec
outs
dec
and
pop
fcomp
push
cwde
push
xchg
(bad)
outs
dec
jne
cmp
pop
inc
test
inc
inc
jecxz
loop
mov
push
fs
xor
jne
xchg
mov
push
pop
stos
and
mov
pop
(bad)
fs
enter
push
dec
pop
in
or
inc
shl
inc
mov
pusha
inc
jle
fs
xor
fdiv
and
sub
in
add
jp
xchg
or
ds
dec
mov
ror
and
sub
lods
bound
jmp
lods
das
inc
or
or
cs
push
jmp
fadd
inc
les
or
jne
test
repz
in
fdiv
outs
loop
(bad)
xor
dec
adc
lock
inc
loope
js
inc
sub
mov
call
or
or
push
test
inc
mov
pop
ud1
lock
out
aaa
in
std
push
dec
sub
mov
mov
or
or
pusha
pop
inc
(bad)
outs
inc
sti
std
adc
out
cmps
inc
scas
xor
pop
sahf
gs
cmp
outs
jbe
adc
sti
dec
fsubrp
inc
dec
add
enter
rol
xor
repz
retf
xchg
ret
or
inc
mov
int
mov
ins
imul
pop
cwde
retf
popf
add
dec
adc
inc
push
(bad)
cmp
jmp
inc
mov
xor
push
mov
adc
sub
cmps
lods
es
and
dec
hlt
sub
cwde
cli
push
mov
cs
sti
sub
jmp
or
imul
(bad)
in
outs
jge
push
cs
lock
and
jecxz
jno
inc
mov
dec
or
nop
fwait
or
popa
scas
aas
ja
jae
xor
inc
xor
ds
lds
add
loope
popa
shl
dec
jo
addr16
mov
in
inc
loop
mov
loope
dec
js
inc
adc
add
fild
iret
in
mov
lock
cmp
stc
sub
in
xor
fstp
hlt
pusha
sbb
stos
mov
sti
inc
dec
xlat
xor
outs
inc
sar
je
mov
cwde
aam
mov
ss
sub
clc
jne
hlt
push
jmp
xchg
mov
pushf
mov
xor
jge
jnp
cmp
(bad)
imul
cmp
rcr
sti
repnz
inc
mov
xchg
(bad)
cmps
int
es
test
xchg
ja
(bad)
pop
inc
dec
jbe
or
sbb
lock
dec
repz
jecxz
adc
std
fdiv
push
(bad)
jmp
fmul
inc
in
cwde
xlat
xchg
test
outs
inc
shr
loope
ds
mov
pop
pusha
neg
cs
shl
cmps
maskmovq
test
mov
stos
inc
rcr
push
mov
cmps
cmp
dec
pop
inc
or
and
mov
in
push
imul
inc
mov
add
push
and
cwde
inc
stos
or
lods
in
nop
sbb
jae
xchg
aaa
add
ret
fdiv
dec
or
icebp
or
xor
dec
ja
push
dec
daa
push
clc
aaa
iret
pop
movs
clc
(bad)
aam
pop
cmp
sbb
sbb
das
push
outs
movs
enter
xchg
shr
mov
pusha
inc
dec
repnz
ja
dec
xchg
pop
fdivr
add
mov
pop
adc
xchg
pusha
fucomi
xor
add
addr16
xor
(bad)
std
mov
push
cmps
xchg
loopne
clc
pop
dec
neg
dec
mov
cwde
add
jno
cmc
xor
inc
addr16
sbb
add
mov
mov
or
std
sub
and
or
in
pusha
not
rcr
shl
mov
in
dec
or
mul
dec
popf
push
js
aaa
mov
lea
enter
mov
in
fisttp
cs
jae
lock
ficomp
dec
jmp
out
and
xor
cli
nop
imul
mov
cmp
loope
jns
inc
xor
movs
mov
cmp
jg
je
or
enter
js
data16
cmp
int
pop
popa
loop
sbb
in
and
xor
stos
and
push
inc
idiv
cmp
jmp
or
and
sub
mov
cmps
inc
fadd
pop
enter
pusha
adc
jmp
cs
cs
loop
dec
nop
sub
pop
dec
or
or
les
cwde
fsubr
test
neg
cmp
cmp
fimul
ja
cmp
lods
sub
mov
loopne
push
jmp
jp
out
xchg
xlat
xchg
pop
pop
xor
xor
dec
dec
std
mov
fidivr
adc
mov
shl
imul
aas
inc
in
jp
cmp
mov
adc
add
pop
pop
xor
mov
cwde
lods
xchg
xor
inc
div
ss
or
les
or
cwde
lahf
xchg
xor
jb
cmp
pushf
push
movs
nop
jnp
inc
push
xchg
loopne
clc
pop
aas
jecxz
xchg
add
sbb
cmp
jb
mov
dec
dec
mov
adc
jnp
dec
popa
dec
adc
outs
inc
loope
and
fimul
std
add
mov
lods
aaa
pop
add
or
cwde
imul
(bad)
pop
mov
dec
mov
outs
dec
pop
jmp
fcmove
xchg
xor
jp
and
add
ins
popa
jg
sbb
in
push
cwde
jns
inc
push
cmp
pop
inc
cmps
jmp
fsubr
sbb
inc
or
outs
dec
cmp
sbb
js
cli
sbb
aas
or
xor
cld
repnz
nop
mov
push
inc
pop
scas
push
stc
push
stos
fsub
inc
xor
fisubr
fs
inc
pop
fist
jge
jg
lods
popf
movs
mov
xchg
or
push
pop
aas
add
sub
cld
dec
outs
mov
dec
push
cs
scas
mov
dec
(bad)
jmp
fdiv
xor
inc
mov
ja
xchg
inc
gs
clc
xor
cmp
mov
xchg
fist
imul
cmp
ficom
inc
push
inc
mov
cld
cmp
inc
dec
paddsb
dec
rcr
loope
sbb
push
inc
or
or
jge
inc
(bad)
inc
push
inc
sub
cmp
xor
mov
jg
in
dec
pop
dec
pop
pop
call
cwde
mov
div
and
aaa
(bad)
sbb
lods
or
cmp
cmc
retf
and
and
jne
mov
ds
in
mov
dec
add
fild
dec
add
pop
inc
dec
leave
jae
inc
jge
sbb
outs
jnp
loopne
(bad)
cli
jns
xchg
lods
out
gs
repnz
and
repz
dec
mov
mov
test
pop
sbb
cwde
xchg
fdiv
inc
sbb
inc
jmp
fstp
and
dec
pusha
inc
(bad)
div
adc
mov
pop
add
xchg
jmp
lods
pop
dec
or
sti
add
cwde
test
dec
jge
dec
dec
add
inc
add
cmp
shl
hlt
out
popf
into
ret
mov
inc
or
movs
inc
cmp
je
mov
mov
and
and
inc
inc
aad
push
outs
xchg
add
jge
inc
push
inc
aad
aam
push
outs
push
out
retf
xor
pop
dec
je
lods
push
xor
cld
retf
ret
out
loop
in
pop
add
mov
lods
jnp
or
inc
and
inc
dec
inc
sub
in
push
int3
pop
xor
push
dec
fs
dec
ins
adc
cmp
dec
xor
int3
cmp
or
push
and
inc
pop
inc
retf
inc
imul
cli
push
movs
xchg
inc
sbb
xlat
aas
mov
add
push
popf
mov
aas
jae
mov
into
aaa
mov
mov
rcl
out
cs
movs
fild
inc
xor
inc
dec
inc
cli
cwde
fldl2t
ja
adc
cmp
push
ds
leave
xor
dec
pop
in
fidiv
dec
imul
ror
fistp
leave
ja
(bad)
pop
xchg
xchg
dec
call
inc
sub
dec
cmp
inc
or
or
loope
inc
xchg
pop
icebp
js
test
int3
cwde
fmul
pusha
jno
sub
test
dec
sub
fld
clc
inc
and
outs
daa
dec
shr
(bad)
cli
iret
inc
popa
push
adc
cmp
aam
mov
jp
or
jns
cli
jmp
jmp
mov
mov
pop
cmp
adc
adc
push
xchg
mov
out
fstp
push
rcl
push
inc
sub
push
outs
fs
shr
int3
in
inc
inc
call
cld
aas
jnp
xchg
or
cmp
daa
out
push
es
add
shl
sbb
sub
cmovl
in
or
or
sbb
push
int
mov
push
push
cmp
pushf
hlt
cmovne
inc
mov
xchg
mov
repnz
dec
xchg
inc
adc
les
ds
aas
mov
xor
add
xor
push
cdq
xchg
cld
push
dec
ret
cmp
dec
cmp
int3
rol
inc
inc
pop
inc
(bad)
dec
jmp
je
sub
aad
mov
clc
cdq
cmp
loope
pop
cmp
cmp
cmp
jmp
xor
mov
sbb
(bad)
jae
inc
inc
pushf
push
cmove
hlt
push
cdq
add
pushf
movs
or
cmp
out
aas
nop
jmp
cld
dec
imul
loopne
ja
dec
jmp
xchg
outs
push
lods
mov
pop
inc
adc
and
ret
std
jb
inc
sbb
outs
jbe
dec
xor
fcmove
add
mov
jnp
bound
pop
repnz
data16
inc
pop
jmp
test
fiadd
(bad)
inc
shr
nop
cld
mov
inc
mov
cmc
dec
ja
retf
cmp
cwde
jns
aas
call
dec
loop
in
xor
jae
dec
or
or
pusha
adc
jmp
mov
inc
adc
mov
inc
cmc
and
mov
rcl
lock
dec
pop
dec
or
or
push
xchg
inc
pop
inc
push
push
mov
int
mov
mov
jo
(bad)
xchg
mov
fisubr
mov
pop
xor
les
dec
dec
mov
cwde
dec
loope
pop
or
cmps
int
mov
xor
mov
push
push
mov
shr
or
push
aas
pop
xor
js
dec
repnz
jae
dec
mov
pusha
pop
dec
(bad)
clc
fisttp
popf
mov
loop
imul
(bad)
push
mov
ins
loope
rcl
stos
jmp
push
aas
fnsave
and
dec
jae
push
pop
sbb
jecxz
sbb
dec
or
imul
fld
lods
shl
in
jmp
fdiv
inc
in
push
hlt
fisubr
xor
dec
lock
mov
mov
pop
cwde
rcr
sub
pop
push
add
dec
adc
push
lods
xchg
mov
xchg
int3
(bad)
aam
sub
(bad)
sti
sub
nop
pushf
cwde
mov
clc
push
xor
cli
dec
movs
jl
lahf
and
mov
or
cs
cli
pop
fsubr
inc
in
in
cmp
int3
leave
jge
dec
dec
push
mov
inc
jne
lahf
sbb
mov
lods
test
clc
popa
jb
inc
loopne
xor
jnp
pop
inc
sub
not
mov
dec
push
int3
mov
ins
xor
cmp
dec
outs
push
mov
pop
or
jle
aas
inc
jmp
aas
imul
jbe
inc
or
or
cli
push
mov
js
push
push
imul
call
dec
loope
mov
inc
push
sar
fcomp
pop
not
and
pushf
jl
(bad)
jbe
push
cli
or
pop
lea
int3
call
push
test
das
(bad)
cld
push
pusha
dec
pop
cwde
shr
or
pop
dec
sbb
js
inc
addr16
inc
jnp
push
mov
jmp
daa
pop
cmps
iret
cs
xor
add
call
xchg
jb
dec
jl
push
mov
test
xor
jmp
jge
mov
inc
mov
inc
(bad)
jmp
out
mov
add
cmp
dec
out
dec
mov
inc
rcl
inc
push
inc
imul
or
cwde
int
inc
test
push
cs
or
inc
pop
dec
scas
neg
pop
mov
out
dec
xor
pop
(bad)
daa
dec
ins
dec
cld
pushf
jp
jp
dec
inc
mov
ins
add
inc
sub
push
xor
or
stc
scas
idiv
add
sub
dec
cli
inc
rol
xor
sbb
mov
dec
xor
push
out
jge
je
cmp
pop
jb
xor
mov
lods
pusha
addr16
sbb
or
mov
pushf
shl
dec
fdiv
mov
pop
dec
xor
outs
sub
cmp
push
mov
daa
and
jae
inc
xor
loopne
inc
inc
pop
loope
popa
aaa
cmps
test
fiadd
sbb
js
dec
stos
nop
fsubr
dec
inc
cmp
sti
in
jge
das
(bad)
push
sar
sahf
fsub
xchg
dec
leave
js
(bad)
jmp
scas
jmp
ficom
xor
xor
out
push
push
clc
pop
and
push
loope
dec
int3
pop
or
(bad)
mov
jecxz
ins
js
dec
ss
jb
(bad)
jge
jo
das
add
(bad)
mov
inc
mov
adc
sub
mov
xchg
cld
adc
(bad)
cwde
or
adc
sub
and
and
sbb
jae
cwde
mov
mov
(bad)
in
dec
pop
jbe
pop
hlt
fcmove
xlat
cwde
sahf
pop
popa
inc
daa
mov
(bad)
jnp
dec
inc
out
jmp
pop
mov
inc
inc
fadd
xchg
(bad)
leave
stc
lock
add
or
js
dec
and
push
cmp
add
add
sti
sbb
aas
stc
(bad)
ret
cmp
inc
mov
fld
ror
and
imul
mov
pop
and
inc
loop
and
lods
xchg
popf
cmp
jmp
fs
xor
repnz
in
add
push
adc
or
push
cwde
and
(bad)
mov
cs
nop
cld
push
call
mov
pop
ins
je
push
cwde
es
mov
pop
add
xchg
dec
mov
inc
dec
xchg
inc
sub
inc
xchg
aaa
imul
scas
inc
(bad)
(bad)
shl
inc
sbb
cmp
lods
mov
inc
scas
loope
mov
ds
clc
adc
dec
or
and
clc
retf
fisttp
fwait
dec
fmul
dec
fxch
es
jg
icebp
nop
gs
aam
lods
jae
or
or
and
shl
pop
mov
sbb
repz
lds
fwait
cmp
aad
jp
shl
mov
push
in
aam
jnp
dec
ins
dec
mov
add
cwde
xor
mov
jmp
xor
inc
and
push
xchg
adc
scas
pop
cmp
retw
ds
lock
data16
shl
test
leave
outs
hlt
inc
clc
dec
jae
mov
push
or
inc
xor
inc
mov
pushf
cmps
nop
sbb
aas
or
sub
xor
test
popa
scas
cld
fwait
mov
and
and
push
jne
inc
sbb
add
push
int3
cld
cmc
aad
fmul
jnp
jo
gs
fidiv
(bad)
jne
inc
jns
ss
(bad)
xchg
jle
push
aas
mov
in
fisttp
clc
data16
jge
dec
fmul
mov
inc
or
mov
cwde
mov
cmp
std
mov
jmp
pushf
(bad)
add
ret
sbb
lods
mov
dec
inc
and
sbb
jne
jnp
fs
jae
fbld
xor
jne
push
es
fld
add
and
push
jne
inc
and
out
sub
pop
sub
ds
aas
(bad)
call
cmp
xchg
mov
jnp
or
or
xor
push
jbe
inc
ja
aas
adc
inc
add
bound
jmp
jne
out
xchg
fs
gs
or
int
std
push
dec
and
inc
sbb
popf
push
mov
fisub
cmp
push
pusha
and
frndint
out
adc
or
ja
inc
cmovae
mov
add
ror
in
cmp
pop
adc
cld
ins
cmp
cwde
dec
cmp
mov
stos
call
pop
xor
das
ss
mov
stos
cmp
call
pop
xchg
std
in
in
hlt
sbb
dec
add
fst
mov
leave
dec
mov
inc
out
dec
int
loopne
loope
jns
dec
pusha
rol
outs
inc
addr16
repnz
fst
dec
xchg
jmp
sbb
int3
pushf
pop
mov
pushf
sbb
fcomip
sub
outs
inc
dec
cmp
in
mov
cmp
fdiv
or
jge
push
dec
test
call
push
jge
jb
adc
call
or
dec
inc
aaa
ret
pusha
jae
inc
pop
test
or
pusha
or
(bad)
outs
push
fsub
lods
data16
sbb
sbb
dec
test
push
out
dec
jecxz
scas
jbe
push
add
scas
pusha
popa
inc
jmp
jmp
push
pop
cmp
inc
or
sub
les
ror
loopne
out
sub
dec
stos
das
inc
dec
aad
jmp
mov
jno
in
add
imul
mov
fwait
std
in
inc
push
inc
cmc
add
inc
inc
lahf
outs
imul
fldenv
dec
mov
loop
and
outs
into
sahf
cmc
push
and
pusha
fsubr
(bad)
sub
or
std
inc
pop
inc
cmp
jmp
sbb
movs
inc
push
and
mov
cmp
mov
push
mov
dec
pushf
les
dec
add
sahf
dec
or
outs
test
popw
mov
inc
push
retf
sub
pop
mov
nop
or
or
ins
adc
push
mov
sbb
dec
or
xor
add
pushf
ss
shr
jo
xchg
cmp
outs
dec
sbb
imul
fwait
and
ins
xor
dec
jae
dec
push
out
inc
icebp
rol
dec
leave
sbb
lods
cwde
movs
jo
mov
outs
lock
sub
out
pushf
sbb
jmp
push
cmp
loop
ret
mov
inc
and
hlt
mov
cmp
push
cmp
cs
xchg
jmp
fmul
dec
push
pop
dec
mov
xchg
push
movs
pushf
push
cwde
pusha
and
jmp
xchg
stos
loope
sahf
sub
outs
pop
pop
xor
mov
jb
out
imul
cmps
xor
ret
jae
pop
in
push
dec
das
dec
cld
ret
ficomp
add
test
sbb
in
xchg
cs
scas
and
pop
pop
out
test
test
push
js
inc
int
in
mov
mov
or
and
push
push
fdivr
cmp
mov
dec
dec
push
mov
cwde
xor
dec
(bad)
cmp
outs
sbb
cmp
sub
sti
lods
test
pop
call
or
das
cli
push
mov
repnz
dec
out
mov
loop
int3
mov
test
test
push
sti
dec
out
jmp
loopne
cmp
cwde
or
pushaw
add
stc
mov
stc
mov
adc
jecxz
popf
cmp
cmp
popa
dec
je
in
pop
int3
in
aad
in
retf
add
inc
xor
lock
fnstsw
inc
icebp
jne
inc
sbb
mov
lahf
aam
pop
push
inc
loope
ja
inc
mov
nop
push
dec
out
imul
sub
aas
lea
rcl
sub
inc
dec
and
mov
js
mov
push
mov
ss
adc
xchg
rcr
mov
mov
inc
mov
outs
mov
scas
cs
sti
push
xchg
jmp
dec
into
outs
push
aas
adc
out
call
es
test
adc
fcomp
stos
scas
aas
xchg
call
fcom
push
inc
and
ret
or
sar
mov
pop
xor
cld
sbb
js
push
ss
and
add
into
jle
stc
pop
pop
outs
push
sbb
mov
pop
ret
xor
pusha
xor
repnz
inc
xchg
cmp
inc
mov
in
xor
shr
int3
je
push
ds
test
adc
jmp
jb
pop
and
jmp
and
clc
out
rcr
adc
loope
(bad)
lea
cld
js
inc
(bad)
cwde
xchg
enter
sti
xchg
ror
xor
je
xor
ds
iret
clc
dec
adc
xor
int3
and
pop
dec
xchg
mov
dec
test
cwde
and
lods
pop
mov
xlat
rol
leave
out
lods
mov
test
or
cs
lods
mov
dec
fst
cmp
mov
je
in
inc
test
test
pop
aas
mov
das
pop
sbb
pop
mov
test
jae
jns
sub
icebp
inc
(bad)
or
cmp
jne
fistp
mov
jmp
cmp
and
dec
mov
push
xor
shl
sub
mov
in
inc
or
int3
adc
cmp
inc
push
inc
std
mov
add
add
inc
pop
outs
or
lods
loope
dec
cmp
xor
outs
push
or
xchg
cmc
enter
ja
pop
nop
mov
inc
test
push
inc
fdivr
test
imul
adc
fnstsw
retf
mov
sbb
gs
js
dec
push
dec
fmul
ja
imul
mov
or
ret
jae
inc
(bad)
popf
lods
xor
pop
test
adc
std
mov
mov
push
pop
and
sbb
push
cwde
inc
loope
mov
pop
jmp
jne
jg
fdiv
and
imul
mov
mov
fsub
push
push
push
cs
sub
inc
out
mov
ds
push
in
mov
pop
cmp
mov
enter
sub
cs
sti
adc
in
push
push
cwde
loope
addr16
ja
mov
push
mov
inc
popf
cwde
sub
fs
inc
mov
outs
push
dec
sbb
mov
ins
test
push
not
ror
xchg
popf
cli
and
(bad)
mov
push
and
add
test
popf
mov
outs
call
xlat
push
pushf
ficomp
inc
push
clc
or
mov
adc
popa
inc
(bad)
out
fdiv
push
inc
ds
xchg
inc
mov
gs
in
xor
mov
scas
dec
push
cmp
dec
out
fidivr
cmp
js
cmps
jne
xor
or
gs
enter
mov
mov
push
hlt
cs
mov
dec
mov
pop
add
call
jp
loopne
inc
lods
enter
or
inc
into
push
pop
enter
nop
inc
ja
xchg
dec
sub
pushf
or
cmps
pop
pop
xor
mov
dec
cli
int3
scas
jae
repz
fnsave
retf
or
cwde
neg
cmps
addr16
(bad)
mov
sbb
jge
fiadd
dec
adc
pop
popf
jmp
dec
inc
xchg
jmp
fcomp
cld
pusha
scas
clc
ins
dec
add
or
xchg
jp
dec
add
movs
push
jbe
idiv
test
je
fimul
pop
inc
data16
ja
inc
sbb
cmp
jae
dec
add
int3
call
in
retf
enter
jmp
cli
dec
aam
sahf
push
mov
pop
pop
dec
lods
lods
and
mov
push
stos
ds
outs
cmp
loope
jns
inc
out
fsub
(bad)
cmps
mov
mov
inc
movs
jl
cwde
int
popf
sub
(bad)
jae
xchg
lods
lods
cmp
fcom
jmp
mov
mov
clc
mov
cwde
xor
adc
mov
cwde
pop
push
inc
mov
add
in
xor
xor
xor
xchg
inc
stc
dec
shr
sahf
and
clc
and
dec
leave
pop
les
or
js
adc
loop
arpl
(bad)
sbb
popf
nop
ficom
and
nop
ds
fsub
cwde
sar
pop
int3
inc
repz
pop
dec
mov
cmc
call
jb
adc
call
repz
inc
stos
jo
inc
loopne
lods
loope
push
clc
mov
nop
jge
inc
inc
cmp
pop
ds
jmp
outs
enter
mov
cwde
je
xor
inc
pop
repnz
imul
int
jno
inc
push
in
fdivr
xor
aam
outs
adc
shl
jp
add
jmp
pusha
sti
fisttp
cmps
mov
fsub
retf
cmp
mov
inc
adc
ss
or
or
or
out
loopne
fnsave
clc
pop
lds
(bad)
cmp
loopne
retf
loope
add
mov
pop
push
push
push
and
std
cwde
out
mov
inc
sub
call
sahf
pusha
pop
out
lea
inc
push
out
data16
xor
imul
dec
pop
int3
cmps
inc
dec
inc
jmp
push
sbb
mov
push
outs
mov
push
adc
inc
scas
xlat
jmp
inc
add
adc
inc
in
hlt
das
mov
push
push
dec
sub
inc
inc
mov
inc
rol
xchg
mov
inc
and
sbb
cwde
call
xchg
push
dec
or
fidivr
movs
es
int3
and
dec
mov
push
aam
sbb
or
out
pusha
ror
lock
aaa
pop
inc
mov
sbb
out
into
sbb
ins
je
imul
dec
rcr
fdiv
daa
dec
or
div
cs
add
xor
xor
mov
inc
mov
inc
lahf
sub
icebp
stc
pop
inc
lods
xchg
and
mov
js
dec
push
mov
cmp
(bad)
sub
loop
in
pop
dec
icebp
dec
cld
lods
addr16
or
inc
jns
inc
xlat
xchg
and
xchg
inc
gs
xchg
cmps
cmp
add
loope
and
mov
dec
add
les
pop
jo
jae
jne
stc
and
mov
sahf
mov
jns
or
cs
mov
jmp
mov
les
cs
cmp
hlt
inc
(bad)
push
dec
or
jbe
inc
jne
fwait
cmp
mov
inc
in
outs
or
sti
sbb
sub
test
dec
jo
scas
test
pop
push
dec
cmp
dec
call
inc
or
pop
jne
bound
mov
out
mov
pop
das
mov
xchg
mov
mov
sahf
loope
xchg
stos
push
loop
mov
sub
adc
repz
in
sub
xchg
sahf
dec
loopne
aam
xor
bound
dec
test
mov
outs
mov
test
and
pushf
push
sahf
xchg
int
ds
or
xor
or
sbb
shl
sar
jp
std
inc
leave
adc
pushf
(bad)
inc
mov
test
jmp
aas
xchg
int3
nop
jno
ds
repnz
adc
inc
inc
cs
ins
or
std
and
pop
sub
push
dec
clc
mov
push
cli
or
push
or
loope
xor
push
in
mov
shr
icebp
neg
movs
aam
idiv
jb
in
daa
dec
aam
cld
dec
imul
les
inc
dec
outs
sub
(bad)
fcom
mov
repz
call
pop
ds
dec
fnstsw
adc
jp
fs
cli
adc
jne
or
imul
in
popf
mov
xor
cmp
imul
sbb
inc
adc
loopne
xchg
ret
and
data16
jne
pushf
les
aas
xor
sti
(bad)
jge
jg
in
mov
dec
lahf
cwde
fs
jns
mov
jle
mov
cli
retf
push
xor
lea
sbb
dec
shr
arpl
sub
inc
jb
sub
mov
in
push
dec
or
push
stos
push
shr
int3
ret
add
sub
mov
data16
ins
fiadd
cwde
fadd
ja
cmps
cmp
mov
js
not
mov
fwait
(bad)
js
jmp
dec
push
dec
sub
mov
imul
in
inc
data16
add
mov
cwde
shl
add
fnstcw
lods
or
pusha
ins
inc
cs
popa
shl
pop
cs
mov
xor
cmp
dec
push
dec
shr
rdpmc
loope
into
or
mov
dec
or
pusha
sahf
jp
cmp
nop
xchg
in
mov
fucomp
cmp
sahf
dec
inc
loope
pop
outs
cmp
clc
mov
pop
push
add
cmp
mov
sbb
stc
dec
pop
adc
sub
sbb
inc
test
xchg
xchg
jmp
cmp
ret
mov
sar
outs
fcomp
icebp
dec
lods
test
std
mov
aas
mov
xor
lock
sbb
and
fldcw
dec
adc
sti
sbb
pop
inc
xlat
(bad)
stc
mov
add
(bad)
sbb
les
out
xchg
mov
push
xchg
mov
pop
movs
mov
jmp
pushf
push
aam
ins
aam
push
pop
cld
inc
jmp
jne
das
dec
outs
rcl
cmp
hlt
push
sbb
pop
inc
retf
mov
daa
rcl
and
pusha
dec
inc
and
out
stos
lds
sar
je
imul
pop
data16
mov
std
pop
pop
xor
loope
scas
sbb
or
mov
inc
adc
(bad)
pop
ins
mov
pusha
and
hlt
jmp
je
(bad)
xchg
shl
xor
rol
lods
mov
nop
inc
stos
xor
push
fnstenv
pop
push
shl
or
dec
jle
pushw
adc
push
add
xchg
and
shl
xor
popf
pop
shr
(bad)
neg
sbb
fstp
call
in
cmp
xchg
nop
ins
dec
dec
and
mov
mov
ret
fnstenv
repz
es
pop
out
ret
stos
jae
and
adc
movs
mov
lock
pop
inc
cmp
xor
cli
dec
popf
aad
js
mov
lods
cmp
es
push
dec
cmc
clc
mov
cmp
jno
addr16
push
loope
dec
xor
ds
pop
inc
fild
cld
mov
and
sti
sub
sub
test
xor
jp
pop
dec
xor
stc
loopne
fdiv
mov
dec
cs
mov
jae
or
xor
inc
xchg
push
fadd
or
mov
lods
or
mov
test
jne
imul
int3
mov
popf
not
mov
push
stc
pop
repnz
lock
add
inc
shl
fisubr
sti
mov
jl
leave
ja
mov
cmps
cwde
xchg
leave
cmc
bound
add
pop
jno
or
jg
and
jle
repnz
jp
mov
popa
pusha
imul
aaa
popf
data16
lods
les
mov
mov
mov
push
push
mov
mov
pop
addr16
pushf
push
pop
stos
rcr
xor
enter
pusha
ror
inc
icebp
push
rcr
sbb
aam
and
jmp
dec
mov
fdiv
cli
push
inc
ror
sub
retf
aad
mov
int3
sbb
fadd
sbb
xor
dec
sar
push
in
xor
mov
xchg
mov
aam
mov
and
and
mov
push
xor
aas
or
jp
dec
lds
mov
xchg
lods
jle
ins
dec
or
sbb
push
pop
sub
push
inc
and
mov
in
jmp
jg
pop
inc
int3
pop
lods
rcr
push
or
xchg
dec
sbb
std
mov
dec
and
push
push
or
push
inc
push
jl
and
sub
fcomp
xchg
xchg
jnp
jge
adc
adc
test
inc
mov
gs
dec
xor
les
cmp
mov
xor
in
pop
push
dec
out
xchg
sub
dec
das
dec
in
mov
add
fwait
lods
adc
jae
pushf
movs
adc
jne
adc
sub
fsub
in
push
test
pop
or
adc
adc
retf
mov
(bad)
repz
in
inc
cs
push
(bad)
outs
test
jae
dec
mov
jae
sbb
inc
ss
sbb
inc
fidivr
les
or
lods
mov
cli
pop
jmp
mov
push
popa
les
mov
stos
mov
dec
mov
inc
mov
inc
or
and
mov
mov
xor
pushf
dec
test
cmp
jmp
and
js
sbb
pop
retf
pop
jle
pop
popa
mov
pop
lea
pop
xor
and
mov
or
inc
js
adc
call
(bad)
into
inc
pop
and
xor
mov
mov
imul
mov
push
push
popf
mov
out
push
dec
je
push
mov
cs
jne
xchg
lods
hlt
int3
enter
pop
mov
inc
push
ja
or
mov
popa
inc
xor
jle
sbb
js
stc
in
adc
push
pop
call
(bad)
outs
dec
xor
jo
loop
dec
int3
mov
sbb
sbb
popf
sbb
sub
inc
icebp
inc
dec
xchg
jns
inc
fidivr
and
mov
fadd
add
xlat
div
sahf
xor
imul
push
sub
inc
ret
stc
push
lods
mov
out
mov
inc
enter
adc
sub
push
loopne
add
jp
inc
aas
add
pop
mov
pop
push
movs
sub
pushf
mov
dec
and
xchg
push
push
js
cmp
call
jns
inc
cmp
into
jp
adc
movs
ins
pusha
add
out
test
sub
cmp
into
dec
test
cli
out
and
push
sti
add
int3
jns
xor
les
inc
(bad)
fdiv
and
addr16
inc
or
fmul
hlt
sbb
inc
clc
jnp
paddusb
out
pusha
(bad)
sar
fcmovb
pushf
push
out
xchg
js
or
in
push
mov
ds
push
pop
xor
mov
sbb
dec
jmp
(bad)
(bad)
jb
das
clc
ins
(bad)
jns
inc
ss
lods
pop
sahf
pushf
js
inc
sub
in
out
or
cs
pop
mov
xor
sahf
shl
mov
sbb
mov
push
cmp
outs
dec
and
in
jle
pusha
in
jmp
sar
in
jo
pop
jmp
inc
mov
repnz
mov
mov
xor
pop
int3
cmp
sar
test
inc
cmc
inc
pop
dec
jno
clc
popa
inc
adc
scas
pushf
sub
call
dec
cmps
fcmovu
mov
add
mov
sbb
shl
in
sub
or
sti
push
adc
cmp
push
cld
scas
loope
imul
cmp
js
inc
int3
mov
jp
push
inc
or
adc
(bad)
lods
pusha
clc
loope
push
mov
aad
cmp
int3
cwde
in
xor
adc
mov
jne
cwde
lods
or
das
out
cld
in
leave
inc
aam
inc
xchg
dec
pop
push
loope
imul
(bad)
dec
push
or
xor
dec
mov
adc
fbstp
mov
inc
(bad)
push
stos
sbb
scas
cmps
dec
add
loope
ror
inc
cli
in
mov
or
adc
pop
xchg
and
mov
dec
ds
and
pop
mov
adc
(bad)
int3
jle
nop
dec
mov
daa
pop
retf
call
inc
pop
inc
add
mov
jne
sar
aas
das
pop
cwde
mov
int3
jae
pop
fwait
into
rol
push
dec
or
ds
repz
cld
stos
lods
in
inc
xor
xchg
xor
shrd
int
movs
pop
mov
inc
cli
ds
enter
sar
outs
mov
push
jmp
(bad)
es
push
push
mov
ds
pop
scas
pushf
push
mov
fild
xchg
call
and
mov
pop
sar
imul
dec
inc
aam
mov
in
pop
add
data16
fdiv
fsub
outs
sbb
mov
dec
dec
inc
jg
sub
pushf
mov
ja
xchg
pop
dec
jmp
add
dec
shl
cwde
and
or
in
xor
inc
ror
dec
or
mov
push
xchg
fcom
clc
mov
inc
inc
xor
scas
es
in
sub
xor
pop
jge
addr16
clc
adc
xor
sub
add
push
loopne
pop
hlt
addr16
sub
lods
les
outs
mov
(bad)
loopne
retf
mov
mov
xchg
outs
xchg
and
sbb
xor
inc
jns
mov
(bad)
clc
int3
mov
aas
inc
pop
push
gs
in
xor
sub
xor
and
loope
stos
sar
jge
push
cmc
fld
cld
aas
loopne
aaa
jmp
sti
sub
(bad)
fidiv
sub
or
push
inc
and
call
jp
jp
ds
lods
je
in
stc
ror
test
aad
jp
dec
outs
enter
dec
scas
cmp
pusha
call
cdq
sub
pop
inc
cmp
stos
mov
mov
and
mov
and
dec
and
pushf
sahf
jae
dec
push
popf
fadd
mov
outs
gs
jns
inc
or
outs
pop
inc
and
cwde
inc
pop
cmp
push
jae
ds
inc
sbb
cmp
inc
dec
fdivp
and
nop
inc
aam
outs
dec
inc
add
jae
xor
jge
push
sbb
push
inc
test
mov
dec
call
ins
or
hlt
sub
and
and
test
das
pushf
call
clc
push
cmp
dec
adc
jmp
cmp
sub
inc
mov
mov
or
or
pop
test
outs
sbb
xor
les
sub
mov
jmp
mov
mov
mov
movs
xor
jmp
ret
adc
jge
xor
(bad)
ja
pusha
pop
into
shl
jne
aas
xlat
dec
in
inc
cmc
dec
push
sub
xchg
jp
dec
push
dec
out
inc
jmp
push
int3
stc
cwde
jae
fsub
ja
inc
cmp
dec
stos
mov
outs
inc
out
ds
pop
push
cmp
fmul
ins
cmp
inc
push
jge
dec
or
mov
(bad)
jne
xchg
es
xor
loop
xchg
icebp
icebp
int3
push
int3
jmp
jbe
gs
std
xor
sbb
js
imul
jge
fidivr
loop
pop
adc
mov
popa
loopne
dec
sub
clc
out
les
lea
mov
mov
(bad)
mov
or
js
inc
out
or
xchg
mov
adc
push
call
(bad)
pop
pusha
adc
shl
mov
dec
lds
movs
shl
push
dec
or
clc
rcl
clc
xchg
call
and
mov
data16
(bad)
jae
sbb
lock
sub
ja
mov
cmp
jne
jg
retf
fadd
inc
dec
dec
(bad)
jns
xchg
mov
mov
pop
js
inc
loope
sbb
and
push
jo
call
aas
fdiv
outs
pop
dec
iret
xor
xchg
or
dec
hlt
int3
push
scas
cwde
test
jae
inc
sti
or
sub
xchg
ss
scas
mov
scas
sahf
and
pop
cmp
movs
pop
xchg
lock
xor
hlt
jne
dec
add
shr
fdiv
and
push
and
repz
inc
sti
cmps
jle
out
inc
sub
repnz
or
(bad)
dec
cli
and
cmp
push
cli
clc
mov
mov
in
cwde
mov
mul
lods
div
in
cli
out
stos
out
fst
pop
add
jmp
mov
sbb
popf
pop
ins
push
mov
dec
and
pop
loop
(bad)
inc
inc
loop
jp
xor
je
or
sar
sbb
push
xor
out
ja
inc
cld
push
mov
mov
or
pop
fsubr
div
lahf
popf
and
xchg
aad
mov
jne
dec
es
pop
jo
push
inc
jl
gs
xchg
inc
(bad)
(bad)
js
inc
and
jl
sar
jbe
mov
outs
out
lock
loope
out
repnz
jno
rcl
mov
sbb
dec
or
fsub
dec
stos
aad
push
out
pop
adc
inc
mov
bound
(bad)
jge
fiadd
add
pop
cmp
int3
(bad)
xchg
(bad)
in
inc
pop
dec
inc
inc
pushf
jne
dec
jmp
mov
sub
outs
xor
addr16
lock
or
addr16
pop
lds
in
cmp
std
nop
inc
dec
xchg
sub
push
mov
inc
mov
jns
inc
push
rol
or
retf
adc
cmp
sub
cmp
push
ins
sbb
cmp
adc
shr
icebp
sti
mov
call
inc
jne
mov
push
fld
inc
and
cld
and
inc
fstp
cmps
jmp
push
int3
data16
lods
(bad)
sbb
push
add
and
cli
cwde
loopne
mov
xchg
pop
dec
add
push
pop
cli
es
stos
jnp
test
clc
mov
pop
ja
mov
ds
pop
outs
fdivr
mov
retf
pusha
push
fisub
out
pushf
xchg
jmp
or
or
mov
loopne
nop
dec
push
mov
jbe
pop
sahf
cmps
mov
add
ds
cli
push
je
cmp
mul
lea
loopne
aam
or
(bad)
pushf
mov
call
sahf
jns
inc
and
fcom
jge
pop
add
jmp
fdivr
cld
hlt
loope
pusha
jge
xor
mov
in
mov
push
pop
push
bound
stc
pop
inc
and
xlat
inc
pop
pop
repnz
mov
retf
sar
add
mov
pop
aam
jb
std
cli
hlt
sub
fsub
push
fdiv
imul
add
in
sti
ds
ficomp
(bad)
fst
cmp
jl
cmps
sub
data16
lea
dec
pop
(bad)
rcr
(bad)
and
(bad)
clc
pop
rcl
dec
inc
xchg
fadd
aam
pop
icebp
adc
ds
pop
and
dec
rcl
jle
aam
test
inc
jmp
(bad)
inc
push
push
inc
cmc
jge
pop
inc
test
push
sub
mul
inc
inc
ja
aam
xor
ss
pop
or
inc
push
not
and
sub
jno
js
sbb
out
popf
scas
(bad)
adc
push
dec
cmp
and
sahf
addr16
pop
cmp
or
gs
jp
pop
or
dec
jle
popa
iret
push
pushf
or
dec
inc
or
ret
popa
imul
ds
mov
sub
stc
dec
jne
movs
test
dec
and
push
xchg
ja
fnstsw
jle
sbb
cwde
(bad)
(bad)
push
jbe
or
out
fiadd
push
cli
repnz
xor
push
xor
mov
es
movs
sti
mov
dec
jb
clc
pushf
push
pushf
sub
inc
mov
nop
xchg
cld
pop
push
mov
xchg
push
les
inc
jge
push
aam
cmp
or
sub
popa
dec
test
jo
mov
cld
push
adc
mov
(bad)
cwde
adc
stc
dec
test
jne
xor
jl
inc
add
pop
xchg
out
data16
lods
or
cwde
mov
and
stos
mov
loope
les
in
cli
cmp
call
pushf
int3
adc
cwde
push
leave
js
outs
xor
stos
in
mov
and
push
cmc
mov
fs
jae
cs
dec
inc
and
pop
scas
mov
js
inc
je
js
jp
aam
fidiv
lods
out
cs
or
sub
in
mov
ret
dec
cli
cs
ja
add
popf
idiv
(bad)
(bad)
mov
push
inc
test
dec
mov
push
aaa
test
mov
mov
fs
jbe
jp
in
js
dec
fcom
cmc
sbb
jae
dec
inc
das
mov
add
xchg
xor
loopne
xchg
ds
outs
(bad)
jne
pop
mov
pusha
sbb
ret
ds
int3
cmp
push
pop
jo
push
xchg
pusha
das
clc
test
xchg
pop
and
repz
les
xchg
addr16
cmp
mov
repnz
sbb
ds
dec
dec
push
mov
jmp
mov
mov
imul
dec
mov
dec
inc
dec
cmp
cs
loop
adc
inc
pop
in
std
retf
adc
sbb
fs
mov
fcom
in
ret
call
lock
inc
jno
jmp
mov
mov
and
cdq
add
pop
pushf
mov
jmp
lock
mov
mov
dec
inc
mov
mov
jmp
mov
cmp
sub
shl
push
ss
sub
int3
xor
cli
cmp
popf
push
mov
cli
je
movs
in
xlat
call
data16
(bad)
mov
push
push
jns
inc
dec
mov
xchg
jmp
xor
jne
or
push
sub
jmp
test
outs
dec
shl
sahf
imul
int3
push
call
inc
push
inc
jmp
xchg
lods
push
int
out
mov
dec
mov
es
jp
sbb
pop
popa
jle
in
dec
into
into
outs
sub
xor
mov
pushf
dec
cmp
and
cli
sbb
cmps
stc
sbb
mov
or
sahf
mov
and
xchg
jmp
dec
jbe
mov
retf
add
xor
push
dec
std
dec
xchg
cwde
push
cmp
dec
arpl
daa
mov
out
or
and
mov
add
retf
std
push
cmp
mov
jmp
mov
fs
(bad)
stos
ret
mov
push
cmp
fcmovnb
cmp
pop
jb
aad
dec
cmp
sbb
push
lods
cs
cmove
xor
(bad)
pop
lock
dec
(bad)
outs
push
repz
(bad)
fistp
pop
inc
lds
repz
xor
cmp
sbb
int3
mov
cwde
stos
xchg
ror
test
std
fmul
or
push
ret
pusha
cld
jne
xor
or
push
mov
arpl
push
inc
xchg
dec
sub
pop
push
pop
pop
sub
cmps
retf
sub
adc
inc
push
mov
push
add
or
xor
outs
jp
pop
das
neg
cmp
jmp
and
dec
mov
inc
clc
or
js
test
mov
repz
pop
int3
pop
ret
das
and
or
and
rcl
adc
jmp
out
jbe
inc
xchg
jne
inc
cmovle
push
jl
jmp
jle
(bad)
mov
(bad)
dec
test
cmp
add
push
xor
mov
and
icebp
mov
leave
retf
dec
loop
xchg
push
rcr
sbb
jb
sub
mov
sbb
and
aaa
mov
les
mov
ss
shl
jl
mov
ds
dec
outs
mov
mov
lea
in
test
xor
push
push
sub
jb
push
dec
jp
add
push
scas
xor
mov
xchg
adc
ror
mov
jmp
inc
movs
lods
fisttp
mov
lahf
test
aam
(bad)
gs
stos
repnz
push
in
lahf
pusha
cmp
stos
fnstenv
rcl
lods
call
out
sub
jns
pushf
lods
xor
sbb
adc
out
sbb
dec
jp
push
mov
cmps
jns
inc
cmc
sub
fcomp
int3
jns
adc
lods
bound
or
sbb
jno
xchg
jle
xor
mov
imul
aaa
push
mov
lods
mov
imul
(bad)
push
pusha
and
cmp
call
mov
mov
pop
push
and
xor
ficomp
mov
jo
mov
ror
jle
jno
ret
jmp
iret
ins
push
dec
rcr
das
lods
pop
mov
pop
lods
fistp
mov
push
mov
movs
fist
rcr
dec
int
push
xchg
sub
daa
add
mov
idiv
push
leave
mov
jmp
push
std
or
mov
jg
mov
mov
cmps
mov
or
cmc
fistp
jb
cdq
(bad)
or
(bad)
shr
fs
adc
push
and
adc
lahf
test
test
sub
pusha
rcr
cs
shl
call
mov
leave
sbb
add
mov
push
stos
nop
sbb
out
push
mov
jle
repz
dec
je
ret
out
jne
iret
xchg
mov
icebp
xor
sbb
pop
mov
jne
sub
dec
(bad)
pop
popf
jae
icebp
jmp
cmp
inc
fst
clc
sbb
mov
adc
loopne
ds
arpl
gs
lods
ins
or
mul
and
movs
mov
cmp
cmps
dec
mov
mov
mov
add
push
pusha
pusha
jmp
shl
jmp
not
cmc
bt
cmp
test
add
clc
cmc
cmp
not
test
clc
pusha
clc
neg
stc
xor
pushf
clc
call
dec
xchg
mov
jmp
mov
mov
lea
jmp
mov
add
push
jne
shr
pop
imul
and
cmc
aas
test
xchg
ret
xchg
fisttp
push
xchg
mov
scas
arpl
dec
out
dec
add
pop
jmp
push
cld
out
out
rol
push
xor
loop
test
or
dec
xchg
cmps
dec
lods
int
mov
mov
ds
dec
or
test
lar
and
mov
dec
shl
push
pop
or
mov
push
pusha
mov
cmp
pushf
lea
je
call
xor
push
mov
sar
bsr
sub
push
cmc
push
cmp
sbb
push
push
clc
mov
jmp
retf
push
fwait
mov
mov
jnp
mov
pop
jle
(bad)
mov
jge
jo
push
jl
fimul
lahf
mov
xchg
xchg
jge
adc
jge
into
dec
mov
js
mov
sub
push
out
(bad)
fsub
lea
aad
in
push
sub
jmp
mov
cs
test
mov
fimul
push
pushf
mov
fcomp
xchg
push
jmp
jge
adc
mov
leave
push
xor
mov
cld
or
xchg
mov
inc
cmc
fcom
adc
pop
sti
and
push
xor
xchg
imul
outs
test
in
cwde
jmp
or
call
or
cmps
mov
mov
xor
outs
fidivr
push
adc
adc
jge
in
repz
outs
push
ds
adc
lods
sbb
mov
sub
push
mov
inc
inc
pop
scas
(bad)
jg
and
(bad)
jge
in
jnp
aas
sbb
mov
cs
cmc
sub
ja
out
add
scas
outs
dec
sub
mov
add
and
loop
test
add
xor
mov
add
and
and
mov
les
pop
stos
mov
jecxz
push
pop
mov
mov
push
shl
mov
retf
sbb
dec
cdq
fsubr
int
pop
ret
imul
xor
rcl
push
and
call
sar
xchg
mov
mov
jno
leave
adc
cli
cwde
sbb
loop
adc
inc
xchg
repnz
sub
or
or
jne
mov
cmps
sub
dec
dec
les
mov
push
aad
push
mov
xchg
add
inc
and
dec
push
push
mov
push
pushf
mov
push
lea
jmp
call
cmp
pushf
jmp
aam
sub
rcl
and
and
mov
loop
sbb
(bad)
xchg
adc
adc
retf
lahf
cmps
(bad)
jb
or
call
jb
test
(bad)
aad
ins
pop
jp
sub
fimul
jmp
jmp
data16
xor
into
jmp
adc
add
xor
popa
lods
jmp
lds
xchg
call
and
pop
mov
adc
or
jo
mov
adc
cli
out
pop
jne
aad
push
pop
popa
mov
sbb
fld
sahf
or
adc
inc
jle
add
sbb
sbb
mov
add
lods
and
inc
push
mov
add
stos
and
push
jne
(bad)
sub
mov
pop
sub
jno
(bad)
sahf
and
aam
dec
div
lods
and
fimul
popa
popa
pop
pusha
jne
cmp
test
add
adc
(bad)
(bad)
dec
push
pop
xlat
xor
cmp
mov
pop
jb
jg
jmp
adc
mov
add
mov
push
(bad)
add
(bad)
ret
icebp
adc
push
retf
lods
and
dec
aam
pop
push
(bad)
mov
push
loopne
jle
sub
adc
xchg
mov
push
je
push
and
sbb
out
pop
(bad)
mov
pop
pop
push
lods
std
scas
enter
adc
leave
mov
pop
lods
and
stos
sbb
movs
retf
retf
not
adc
retf
mov
pop
dec
cmps
dec
js
aam
and
jo
sbb
push
(bad)
mov
pop
lods
cld
inc
aas
adc
stos
and
and
and
push
retf
mov
pop
push
aaa
xchg
rcl
enter
adc
dec
adc
mov
pop
js
push
dec
add
mov
adc
rol
and
push
addr16
pextrw
mov
pop
dec
repz
jb
leave
mov
pop
fdivp
nop
or
mov
adc
test
mov
push
aaa
js
aad
sar
pop
jg
imul
shl
mov
stc
cmp
pushf
pusha
lea
jbe
shl
xchg
not
mov
dec
xadd
add
and
shrd
shl
mov
dec
sub
add
cmc
mov
test
test
and
btc
mov
push
cmc
cmp
push
pusha
jmp
pusha
lea
je
add
movsx
lea
mov
bsr
bts
add
mov
push
shl
mov
cmp
push
push
stc
test
jmp
bswap
add
add
bt
rcr
stc
mov
stc
btc
bts
and
mov
push
cmc
cmp
pusha
push
push
push
lea
jbe
clc
sbb
mov
sub
pusha
xadd
mov
rcr
mov
movsx
bt
add
movzx
add
shr
shrd
stc
shld
cmc
mov
neg
btr
pushf
shrd
add
pop
movsx
lea
mov
mov
pusha
jmp
retf
sbb
mov
cmps
and
or
das
cmp
lea
pusha
dec
mov
cmps
mov
mov
jns
lods
in
add
cli
in
test
jo
not
xor
sub
mov
mov
std
cmps
call
sti
jne
xchg
push
mov
xor
fstp
data16
jne
sub
cdq
add
jb
lock
push
lea
xor
call
cmc
stc
cmp
pushf
lea
jae
call
mov
mov
pusha
mov
lea
bswap
push
not
push
pop
bswap
not
jmp
jmp
pusha
push
pop
pop
mov
not
mov
push
push
lea
jmp
clc
pushf
clc
shl
jmp
clc
add
mov
pushf
pop
push
mov
mov
lea
jp
pop
pusha
mov
pushf
pushf
lea
jmp
ror
sbb
setae
test
mov
pushf
stc
call
xor
mov
ror
shl
push
mov
cmc
pusha
pushf
not
push
not
cmc
test
bt
and
lea
ja
pusha
push
push
mov
mov
mov
pushf
pop
jmp
mov
pusha
mov
mov
pusha
lea
call
call
pushf
pop
movsx
call
pushf
mov
pushf
mov
pushf
pushf
lea
jmp
call
call
lea
mov
mov
mov
pushf
mov
lea
jmp
inc
test
mov
call
jmp
xchg
mov
shl
shrd
mov
cmp
cmc
clc
sub
pusha
mul
pusha
mov
lea
ja
push
pushf
push
mov
pusha
mov
jmp
dec
mov
test
mov
stc
add
test
xor
cmc
neg
mov
cmp
add
stc
jmp
movsx
mov
pusha
mov
movzx
mov
jmp
mov
call
movzx
push
push
jmp
btr
sbb
adc
daa
mov
pusha
sub
clc
call
test
cmp
test
test
add
push
pusha
cmc
xor
clc
pusha
neg
test
add
bt
test
pushf
pushf
cbw
bt
cmc
clc
push
cwde
test
mov
test
test
sub
jmp
push
movzx
push
lea
pushf
lea
movsx
mov
not
lea
pushf
movsx
pusha
mov
lea
pop
mov
call
pushf
pop
pushf
pushf
call
lea
pushf
pop
pop
call
mov
pushf
pushf
mov
push
pushf
lea
jmp
bswap
mov
sub
mov
add
pushf
lea
jo
mov
call
pusha
push
push
add
cld
pushf
bt
push
popf
pushf
mov
lea
jmp
mov
mov
mov
lea
jmp
neg
jmp
mov
jmp
push
add
pushf
pusha
call
sbb
clc
bt
movzx
jl
pushf
stc
add
pusha
call
push
pusha
push
call
pusha
pushf
pushf
pushf
mov
push
jmp
mov
lea
mov
pop
pushf
push
pop
pushf
mov
not
pop
movsx
mov
mov
mov
push
pushf
mov
lea
jmp
mov
pusha
push
mov
lea
jmp
push
mov
mov
pusha
push
mov
mov
call
bt
shld
mov
rol
movzx
cmp
xchg
cmp
pusha
pushf
jmp
rcr
btr
cmc
mov
pusha
shl
adc
mov
clc
jmp
shr
call
pushf
push
mov
mov
mov
lea
jmp
call
mov
push
pusha
call
mov
jmp
stc
bt
add
test
sub
push
mov
push
lea
jmp
mov
call
lea
jmp
movzx
push
push
mov
pop
pusha
mov
mov
mov
mov
push
movsx
movzx
push
pop
jmp
clc
sub
stc
shr
jmp
sub
lea
jp
push
mov
pushf
lea
jmp
adc
shld
rcr
xor
mov
cmc
mov
cmc
jmp
pushf
pop
call
pusha
pushf
push
mov
pushf
pushf
pushf
call
add
add
mov
lea
not
not
not
mov
call
lea
jnp
pushf
div
mov
jmp
inc
or
mov
add
stc
jmp
bsf
neg
stc
mov
call
bswap
call
jmp
sub
call
mov
mov
mov
push
pushf
pushf
mov
call
add
rol
bt
mov
clc
mov
cmc
sub
push
jmp
cmc
mov
stc
pusha
not
jmp
push
pushf
pop
pusha
call
push
push
pushf
pop
mov
push
pop
push
pushf
pushf
mov
lea
jmp
mov
mov
pushf
lea
jmp
call
mov
pusha
pushf
call
lea
js
mov
pushf
lea
jmp
pushf
mov
lea
movzx
call
call
bt
shl
rol
mov
inc
xor
mov
test
add
call
clc
pusha
push
add
bt
cmp
shld
call
clc
stc
add
call
push
pushf
mov
mov
pushf
pop
jmp
bswap
pushf
lea
push
pop
lea
mov
pusha
mov
push
movsx
mov
push
mov
pushf
push
lea
jmp
jmp
cmc
add
clc
test
test
cmp
shrd
jmp
xor
pushf
mov
mov
ror
call
movsx
mov
bswap
movzx
call
jmp
mov
mov
pop
push
mov
lea
not
movsx
jmp
call
mov
pusha
push
lea
jno
mov
pusha
lea
jl
pusha
pushf
pop
push
push
pop
pusha
mov
push
mov
lea
jmp
mov
bswap
call
test
cmc
shl
mov
mov
call
mov
movzx
push
pop
jmp
movsx
inc
shl
rcr
seto
adc
not
cmc
rcl
sub
xor
movsx
movzx
shr
bt
bsf
stc
mov
push
cmp
test
add
jmp
shl
pushf
call
push
pop
push
push
lea
jmp
mov
cmp
stc
cmp
mov
sub
cmp
pushf
call
mov
pushf
push
mov
push
lea
jmp
mov
push
mov
push
lea
jmp
push
pop
push
pushf
pushf
lea
jmp
mov
push
pushf
lea
jge
not
push
push
bswap
mov
movsx
pusha
call
mov
call
mov
mov
pop
mov
pop
mov
mov
call
ror
call
inc
cmc
and
bt
shr
not
test
not
add
movzx
sub
mov
pushf
call
bswap
push
pop
push
jmp
push
pop
movsx
movsx
push
call
mov
mov
mov
pushf
pushf
lea
jmp
push
pusha
pusha
mov
mov
mov
push
lea
jmp
push
push
lea
jl
push
pushf
pushf
call
and
shl
cmc
mov
pusha
pushf
add
mov
pushf
mov
push
mov
pushf
push
mov
mov
lea
jmp
setnp
movsx
lea
mov
jmp
call
mov
mov
push
pop
mov
push
push
lea
jmp
lea
jne
pusha
mov
call
mov
mov
push
pushf
pushf
pop
push
push
pop
mov
push
pushf
lea
jmp
pusha
lea
jae
pusha
mov
mov
pusha
pushf
mov
lea
jmp
add
pusha
pushf
mov
pushf
lea
jmp
mov
mov
lea
jmp
mov
jmp
xor
sub
jmp
pushf
cmp
sub
mov
mov
push
mov
lea
jmp
call
push
pop
pushf
pusha
lea
jmp
push
push
mov
bswap
pushf
mov
pushf
pushf
lea
jmp
add
cmc
call
mov
push
call
pushf
mov
call
pushf
push
push
mov
pushf
pushf
push
pushf
push
ret
adc
adc
add
repnz
add
add
sub
add
jmp
cmp
adc
add
push
add
movhps
pushf
xchg
adc
add
add
add
mov
push
add
add
add
cs
add
cwde
adc
add
add
add
adc
add
hlt
adc
add
scas
adc
add
sub
add
hlt
adc
add
pushf
adc
add
push
add
adc
add
add
adc
add
adc
add
adc
add
add
add
add
adc
add
cwde
adc
add
adc
add
das
push
add
add
adc
add
push
add
adc
add
add
add
adc
add
stos
adc
add
adc
add
add
add
add
adc
add
call
adc
add
adc
add
adc
add
(bad)
adc
add
adc
add
stos
adc
add
adc
add
push
add
adc
add
push
add
adc
add
push
add
stos
adc
add
retf
adc
add
scas
adc
add
adc
add
add
adc
add
stos
adc
add
push
add
sub
add
add
add
cs
add
add
stos
adc
add
adc
add
add
cwde
adc
add
add
add
add
adc
add
adc
add
add
or
push
add
adc
add
sub
add
push
add
cs
add
add
add
das
push
add
adc
add
(bad)
adc
add
push
add
add
add
adc
add
daa
push
add
jecxz
add
adc
add
scas
adc
add
or
push
add
cs
add
add
das
push
add
jecxz
add
adc
add
scas
adc
add
scas
adc
add
xor
add
cwde
adc
add
hlt
adc
add
das
push
add
push
add
add
cwde
adc
add
adc
add
adc
add
adc
add
push
add
add
add
jmp
add
add
push
add
jmp
add
or
adc
add
adc
add
repnz
add
(bad)
adc
add
adc
add
adc
add
add
add
scas
adc
add
push
push
add
add
movhps
int3
or
adc
add
jmp
add
xchg
adc
add
adc
add
add
xchg
adc
add
das
push
add
adc
add
adc
add
ds
add
jecxz
add
push
push
add
xchg
or
add
cmc
adc
add
inc
and
pushf
lea
mov
movzx
push
pop
jmp
push
call
push
mov
jmp
mov
lea
jne
bt
call
jmp
movzx
call
setge
mov
push
pushf
mov
pusha
push
push
pushf
lea
jmp
push
call
pushf
lahf
bswap
mov
jmp
push
push
mov
mov
jmp
mov
pop
push
mov
movzx
push
pushf
pop
pushf
bswap
mov
not
not
mov
push
call
push
pop
push
lea
jmp
pusha
push
mov
push
mov
push
mov
mov
mov
lea
jmp
cmc
cmc
add
jmp
mov
bt
bt
call
cmc
call
mov
pushf
pushf
cld
call
push
pop
mov
push
push
lea
jmp
aaa
dec
sub
mov
bts
or
sets
and
mov
sbb
call
rol
clc
clc
xor
bt
jmp
mov
push
mov
pushf
lea
jmp
pushf
lea
push
mov
mov
push
mov
lea
jmp
push
inc
cmc
not
pushf
call
stc
call
push
pop
mov
mov
mov
mov
lea
jmp
pusha
mov
pushf
xchg
mov
pop
movzx
mov
mov
movzx
mov
jmp
pop
mov
pop
mov
jmp
mov
push
add
shrd
bsf
btr
add
movsx
rol
inc
shrd
inc
xor
xor
stc
add
add
setg
mov
pushf
seta
dec
movsx
bsr
mov
bt
pushf
jmp
pushf
movsx
movzx
call
and
mov
call
not
mov
not
push
mov
pusha
lea
jmp
call
pushf
mov
mov
pushf
lea
jmp
mov
mov
lea
jmp
mov
lea
push
mov
pushf
mov
lea
jmp
mov
bt
mov
rol
push
pushf
pushf
add
mov
call
pusha
jmp
call
not
mov
bt
and
cmc
cmp
pushf
mov
call
rol
pushf
bt
test
neg
jmp
test
call
xchg
xadd
movzx
mov
movsx
bts
rcr
sub
add
shld
add
bsr
neg
call
clc
bt
pusha
add
call
test
mov
rcr
rol
inc
dec
mov
push
jmp
lea
pushf
bswap
pushf
pop
pushf
movzx
call
inc
push
push
jmp
jmp
mov
mov
push
push
lea
jmp
pushf
pop
mov
pushf
pushf
push
pop
mov
pushf
lea
jmp
movzx
mov
mov
mov
lea
jmp
test
push
add
pusha
call
mov
push
mov
push
pusha
pushf
pushf
lea
jmp
mov
mov
not
not
bswap
lea
mov
call
pushf
mov
bswap
pop
push
pop
call
pop
mov
not
push
not
mov
movzx
not
push
movzx
movsx
push
pushf
pop
pusha
mov
push
pop
movzx
movzx
lea
bswap
mov
pusha
mov
mov
push
pushf
mov
lea
jmp
call
pushf
mov
push
dec
test
sub
ja
clc
cmc
add
bt
pusha
push
test
neg
push
jmp
lea
mov
not
mov
mov
mov
setbe
push
pop
mov
lea
xchg
pushf
pop
btc
xor
call
pushf
pop
jmp
pushf
sub
pushf
jmp
push
pushf
call
mov
pushf
pushf
pop
push
jmp
call
xchg
push
mov
jmp
pushf
bswap
mov
mov
pushf
pushf
pop
mov
not
pushf
push
pop
lea
jno
movzx
push
movzx
call
pushf
movzx
mov
pusha
pushf
mov
lea
jmp
neg
cmp
clc
add
jp
bt
add
cmc
cmc
cmc
sub
pushf
pusha
call
lea
call
pushf
mov
pushf
mov
pushf
mov
pushf
jmp
lea
jo
pusha
pushf
pop
jmp
pusha
call
mov
push
mov
pushf
pushf
pop
jmp
inc
clc
shld
mov
inc
rcr
call
movsx
mov
pop
push
pop
pushf
pushf
pop
lea
mov
call
mov
call
stc
and
lea
mov
stc
jmp
call
mov
call
not
pushf
not
mov
pusha
movzx
movzx
push
pop
not
bswap
pushf
mov
pop
push
call
push
jmp
mov
cmp
pushf
bswap
pusha
stc
sub
push
jmp
mov
push
pushf
movzx
mov
jmp
pushf
jmp
bt
neg
bsr
mov
xor
push
add
setnp
call
mov
mov
mov
mov
lea
jmp
pushf
cmp
bt
sub
stc
xchg
stc
mov
cmp
pushf
stc
test
sub
push
lea
jne
test
clc
xor
push
mov
mov
xchg
pusha
mov
call
jmp
movzx
cdq
movsx
mov
mov
movzx
mov
pushf
push
div
call
lea
ja
stc
mov
aas
mov
xchg
lea
inc
sub
movsx
lea
shl
and
lea
mov
jmp
push
jmp
not
movsx
bts
mov
sub
neg
sar
shl
mov
clc
bt
cmc
clc
sub
cmc
clc
pusha
push
shr
pusha
call
neg
and
jmp
mov
push
mov
lea
jmp
pusha
mov
jmp
clc
push
not
cmc
test
sub
call
push
mov
mov
movzx
jmp
sub
push
mov
push
pusha
lea
jmp
cmp
call
call
call
mov
push
lea
jmp
mov
movzx
push
pushf
pop
mov
mov
not
movzx
pushf
mov
pushf
mov
jmp
push
xchg
movzx
movsx
mov
not
mov
pushf
pop
pushf
pop
lea
push
jmp
pop
pushf
pop
pushf
movsx
pushf
lea
mov
pusha
mov
mov
movzx
mov
not
movsx
jmp
mov
push
pushf
pop
call
call
mov
call
call
mov
pusha
lea
jmp
push
call
pushf
mov
mov
mov
movzx
mov
bswap
movzx
pusha
mov
pop
lea
push
not
pushf
pop
mov
movsx
pop
mov
mov
pop
movzx
movzx
bswap
mov
pushf
mov
pushf
mov
jmp
push
jmp
clc
test
mov
bts
bsr
movsx
mov
stc
clc
add
push
mov
pusha
lea
jmp
aas
jmp
push
not
call
mov
push
mov
pushf
pop
push
push
push
pop
push
push
lea
jmp
bt
test
cmp
push
mov
pushf
pushf
mov
push
push
mov
pusha
mov
push
jmp
call
push
jmp
pushf
inc
clc
call
push
mov
call
xor
mov
stc
sub
jg
cmc
push
test
add
pusha
mov
pushf
pushf
pop
pusha
push
jmp
pushf
pop
pushf
jmp
mov
push
jmp
cpuid
bt
clc
cmp
bt
sub
call
xor
call
dec
jmp
mov
jmp
call
push
pusha
pusha
call
jmp
call
pop
not
mov
call
jmp
mov
movzx
mov
pusha
lea
jmp
test
stc
or
bt
stc
cmc
test
xor
pushf
inc
pusha
pushf
jmp
call
add
mov
pushf
pop
pusha
mov
push
pop
mov
push
push
push
lea
jmp
mov
movzx
neg
inc
test
sbb
dec
add
adc
and
jl
sbb
mov
jmp
mov
dec
pushf
mov
push
call
mov
shl
xchg
sbb
mov
bsf
not
shl
rcl
mov
lea
setb
push
pop
add
xadd
stc
xor
mov
inc
rol
mov
sbb
not
adc
not
neg
movzx
setbe
inc
dec
cmp
shld
movzx
mov
btc
adc
bts
sub
dec
sub
btc
mov
push
cmc
pusha
xadd
mov
bswap
test
bts
rol
add
sub
rcl
lea
shrd
mov
pusha
pop
btc
sar
sub
or
setne
bt
push
xor
bswap
mov
call
jmp
bswap
lea
bswap
mov
je
clc
cmp
stc
add
pushf
pushf
mov
mov
pushf
jmp
inc
bsf
ror
movzx
lea
add
bsf
sbb
movzx
xor
sub
movzx
sub
add
and
bswap
lea
dec
xor
lea
setp
not
neg
bts
bts
sub
add
adc
shld
dec
movzx
test
push
mov
mov
push
or
push
mov
lea
je
jmp
pushf
dec
mov
lea
js
bt
add
push
xor
bt
neg
mov
cmc
add
test
stc
cbw
mov
test
cwde
call
push
mov
call
pushf
lea
jne
push
pushf
mov
push
mov
pushf
pushf
lea
jmp
pushf
push
lea
js
pushf
jmp
mov
bswap
mov
pushf
mov
push
movzx
jmp
call
push
jmp
and
push
pushf
pop
pushf
mov
push
pop
mov
push
pushf
pushf
lea
jmp
aam
pusha
inc
cbw
movzx
stc
test
xchg
stc
add
stc
pushf
add
bt
test
neg
pushf
rol
jmp
cld
mov
rcr
inc
ror
test
push
popf
pop
lea
bswap
mov
jmp
call
pusha
add
test
neg
mov
jmp
pushf
jmp
call
jmp
mov
jmp
call
movsx
pushf
pop
not
pop
movsx
mov
mov
pop
call
lea
jne
rcr
shrd
xor
sets
pop
pusha
push
pushf
lea
jmp
push
pushf
pushf
pop
call
mov
mov
push
ret
dec
cmc
clc
test
add
stc
xor
push
pushf
push
neg
pushf
bt
test
cmc
add
test
stc
call
mov
jmp
call
mov
pushf
jmp
call
mov
clc
pusha
call
pushf
pop
pushf
call
lea
mov
push
pushf
pushf
push
lea
jmp
rep
shl
rcr
mov
mov
movsx
add
mov
mov
push
popf
mov
mov
mov
mov
lea
jmp
mov
movzx
not
lea
pop
mov
pop
call
shr
pushf
push
pusha
or
cmc
push
stc
xor
mov
call
inc
mov
jmp
push
mov
mov
call
pusha
push
pop
mov
mov
mov
mov
lea
jmp
pusha
pushf
pop
pusha
pushf
push
pop
mov
lea
jmp
and
inc
mov
adc
mov
pusha
pusha
cmp
test
sub
test
cmp
call
xchg
movsx
jmp
push
pop
pushf
mov
lea
jmp
rcl
adc
rol
add
mov
clc
clc
test
add
pushf
pusha
pusha
lea
jmp
jmp
jmp
mov
movsx
pop
lea
mov
call
pushf
mov
pusha
pushf
lea
jmp
call
jmp
clc
jmp
pusha
pusha
call
aas
daa
mov
or
dec
mov
or
add
xor
rcr
mov
call
pushf
stc
lea
stc
test
add
cmp
cwde
clc
sub
jmp
jmp
cmp
add
mov
mov
stc
cmc
sub
jmp
not
push
mov
pushf
lea
jmp
test
shl
call
movzx
call
movsx
push
pop
mov
call
sub
test
pushf
cmp
jmp
stc
neg
clc
pushf
not
mov
mov
xor
cmc
mov
stc
push
sub
pushf
mov
mov
push
lea
jmp
mov
mov
lea
mov
lea
jnp
push
mov
not
bswap
movsx
call
push
pop
pushf
mov
mov
mov
lea
jmp
cmc
add
mov
stc
mov
mov
jmp
pusha
mov
call
call
pusha
mov
xchg
call
push
push
push
pop
mov
mov
mov
mov
lea
jmp
pushf
mov
stc
sub
call
jmp
call
mov
push
mov
pusha
pushf
lea
jmp
rcr
daa
movzx
aaa
mov
btc
btr
bswap
sar
mov
cmp
push
mov
pusha
add
push
lea
js
pushf
mov
pushf
push
push
mov
lea
jmp
pushf
call
bt
cmc
movsx
mov
rcl
mov
cmc
stc
call
test
mov
cmp
pop
mov
pop
xor
pop
test
test
cmc
lea
pop
pusha
mov
adc
call
push
jmp
call
call
or
push
mov
cmc
sub
pushf
pushf
shr
call
not
setae
mov
push
pushf
pusha
pushf
mov
jmp
pushf
pop
pop
mov
lea
not
mov
jmp
mov
mov
push
lea
jmp
call
pusha
mov
pushf
movzx
mov
pop
mov
pushf
push
pop
pop
mov
mov
movsx
mov
lea
js
mov
push
mov
lea
jmp
clc
push
call
push
pop
mov
pushf
lea
jmp
mov
not
movzx
movzx
jmp
call
pusha
jmp
push
dec
pushf
lea
jne
jmp
bswap
xchg
bswap
mov
push
mov
movzx
not
mov
pushf
pushf
mov
push
push
ret
pusha
mov
mov
push
mov
mov
lea
jmp
pusha
pusha
mov
push
lea
jmp
stc
jmp
call
pushf
pusha
call
btr
rcr
rcl
shld
mov
cmp
add
push
lea
jmp
mov
call
push
pushf
pushf
pop
pushf
push
mov
push
pop
mov
mov
push
mov
lea
jmp
pusha
shl
jmp
jmp
xor
mov
sar
mov
cmc
cmp
stc
add
push
mov
pusha
lea
jmp
pushf
pop
call
call
pushf
mov
pushf
pushf
lea
jmp
pushf
mov
pop
not
mov
lea
not
movzx
lea
mov
push
pushf
pushf
pop
movsx
movzx
lea
movzx
mov
mov
not
mov
mov
not
movzx
bswap
jmp
sub
push
mov
lea
jns
mov
push
pushf
pusha
lea
jmp
mov
call
mov
mov
push
xchg
mov
push
pop
mov
pusha
lea
push
mov
jmp
pusha
mov
pusha
call
jmp
mov
jmp
mov
pushf
mov
call
add
jmp
pop
pushf
movzx
mov
movzx
pop
mov
bswap
push
pop
push
push
pushf
mov
not
lea
mov
push
mov
mov
mov
lea
jmp
mov
movzx
push
lea
mov
call
mov
mov
movzx
mov
call
call
call
shld
rol
daa
mov
cmc
clc
sub
pushf
mov
pushf
lea
jmp
mov
call
pushf
lea
jne
dec
movsx
mov
bt
clc
test
and
push
cmp
jmp
add
cdq
rdtsc
pushf
call
pushf
mov
mov
push
push
mov
lea
jmp
pop
pushf
pop
pusha
lea
pop
lea
jg
push
lea
pusha
mov
pusha
movsx
mov
lea
jmp
mov
pushf
push
pop
not
pop
mov
lea
mov
pushf
pushf
push
lea
jmp
bts
lea
pushf
cmp
pushf
jmp
mov
pushf
pushf
mov
push
lea
jmp
pushf
mov
call
pusha
movzx
mov
pusha
test
add
mov
cmp
jmp
pop
mov
pusha
mov
bswap
push
movsx
mov
mov
lea
mov
pushf
pop
mov
movsx
push
pop
jmp
pushf
mov
not
mov
movzx
lea
jmp
lahf
jmp
div
pushf
lea
jae
push
mov
mov
pushf
mov
pushf
pushf
push
pushf
pop
push
push
pop
pusha
pushf
lea
jmp
call
movsx
aas
stc
not
mov
stc
mov
stc
call
mov
mov
lea
jmp
jmp
mov
pushf
mov
push
pushf
call
jmp
adc
bsr
mov
shr
ror
mov
clc
pusha
sub
pusha
shl
mov
pushf
mov
jmp
pushf
call
mov
pusha
push
mov
lea
jmp
pushf
pop
call
pusha
call
mov
not
pushf
jmp
jmp
bswap
mov
push
mov
mov
movzx
mov
pushf
mov
jmp
mov
add
call
push
pop
mov
pusha
pushf
call
bswap
pop
mov
pop
pushf
mov
pop
mov
bswap
pushf
pop
call
jmp
mov
pusha
lea
pushf
pop
jmp
push
shld
neg
add
rcl
neg
stc
setb
cmp
rol
add
shrd
and
pusha
call
lea
jg
movzx
mov
push
lea
cpuid
cmc
pushf
mov
cmp
sub
jmp
mov
mov
pushf
mov
push
lea
jmp
push
pop
pusha
mov
pushf
pushf
lea
jmp
call
lea
mov
movzx
call
lea
jne
bsf
dec
bt
xor
bswap
movzx
not
movzx
pop
pusha
push
lea
jmp
pushf
lea
call
add
lea
jge
pushf
push
mov
push
lea
jmp
mov
jmp
pushf
push
pop
mov
pusha
pushf
pushf
lea
jmp
pusha
mov
jmp
mov
mov
cmp
stc
bt
sub
jmp
lea
je
pusha
mov
mov
pushf
mov
push
lea
jmp
push
mov
pusha
call
mov
call
pushf
mov
clc
push
clc
cmc
add
pushf
mov
mov
push
push
push
lea
jmp
mov
pusha
jmp
push
mov
pushf
mov
push
lea
jmp
jmp
pusha
push
pusha
jmp
push
pop
pushf
lea
jmp
stc
add
jmp
mov
pop
mov
call
pusha
push
pushf
pop
jmp
clc
sub
push
call
sub
push
call
pop
pusha
push
mov
not
push
call
pushf
mov
movsx
pushf
jmp
add
js
pushf
add
test
jmp
push
pop
push
push
push
mov
lea
jmp
pushf
add
cmp
push
clc
pushf
add
jmp
mov
call
bsf
cmp
mov
seta
mov
inc
inc
add
test
bt
lea
rol
sub
seta
shl
and
lea
mov
js
stc
shl
cmc
push
shr
lea
jge
push
stc
pushf
or
push
cmp
jmp
