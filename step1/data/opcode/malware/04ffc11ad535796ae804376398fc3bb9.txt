push
push
call
mov
push
push
push
call
push
call
push
push
push
push
push
push
call
push
call
outs
jo
outs
add
push
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
add
add
mov
mov
int
mov
nop
nop
push
push
jb
addr16
ins
and
jae
and
and
outs
and
fs
push
imul
aaa
push
inc
add
dec
add
aam
and
add
add
add
add
add
add
add
add
add
add
and
add
rol
add
and
add
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
add
sbb
add
add
add
add
add
add
add
add
xor
gs
add
add
nop
or
add
add
add
add
inc
add
shl
popa
je
add
add
add
add
mov
add
add
add
inc
add
shl
ins
jae
add
add
adc
add
mov
add
add
add
add
xor
fs
je
add
add
add
add
add
add
add
add
xor
fs
je
add
add
add
add
sbb
add
pusha
push
add
add
xor
popa
add
add
sbb
add
jo
add
add
add
arpl
add
add
add
add
add
push
add
add
add
inc
add
shl
gs
outs
arpl
add
rol
add
add
add
add
add
cmp
gs
add
add
adc
add
push
pop
add
lods
add
add
add
add
cmp
fs
je
add
add
add
add
add
push
add
add
add
add
xor
add
add
add
and
add
add
add
add
add
push
inc
push
inc
inc
dec
and
add
add
add
and
add
add
add
add
add
arpl
sub
bound
jnp
mov
and
pop
fst
mov
mov
jmp
jns
jb
add
mov
dec
cmp
or
push
sub
jae
sbb
out
lods
adc
out
xor
mov
in
popf
jmp
nop
sbb
aad
adc
in
ret
xor
aad
(bad)
test
cmps
push
out
jle
rcr
add
push
out
cmp
sbb
pop
fninit
mov
jo
in
icebp
add
jl
pop
push
inc
daa
pop
adc
adc
pop
push
jge
and
mov
cmps
xlat
mov
push
sub
ret
cdq
addr16
jbe
stc
test
jmp
mov
mov
cmp
inc
daa
cmp
cdq
pop
push
or
movs
adc
dec
jg
movs
jge
aaa
add
jle
outs
dec
cli
ret
movs
shl
jnp
cmps
pushf
xor
fidiv
and
xchg
in
mov
mov
mov
mov
cmp
in
(bad)
icebp
cmp
outs
push
repnz
adc
cmp
gs
xchg
pop
std
cmc
push
lea
inc
call
pop
xlat
ins
out
(bad)
push
loop
jae
test
not
jnp
das
add
adc
pushf
mov
rcl
fdivr
xor
mov
cdq
mov
sbb
ret
add
fs
xchg
(bad)
add
mov
test
fldenv
sbb
rep
popa
mov
jl
jb
(bad)
aaa
xor
pop
imul
std
mov
into
jecxz
push
and
cmps
fcmovnu
js
pop
adc
movs
pop
add
popa
hlt
sbb
jle
push
mov
shr
or
pop
retf
pop
and
test
clc
test
stos
inc
inc
dec
lods
jg
repnz
(bad)
popa
pop
jmp
mov
jno
adc
cmps
xor
and
out
stos
add
mov
outs
in
(bad)
fdiv
cli
adc
mov
loope
pop
fwait
pop
lea
hlt
rol
jmp
cmp
push
in
sub
out
cmp
repnz
add
lods
cmp
sbb
xor
shl
sar
lock
jg
enter
push
sub
and
push
xchg
fs
int3
push
push
inc
jg
fimul
outs
jns
jge
sbb
fsub
or
fwait
shl
dec
pop
mov
repz
stos
pop
inc
movs
and
mov
cdq
rcl
add
add
jne
add
fild
dec
(bad)
mov
inc
outs
xchg
add
mov
int
xchg
fld
add
adc
dec
dec
mov
stos
iret
aam
(bad)
sbb
cdq
inc
retf
push
dec
aad
pop
xor
scas
enter
sbb
call
out
mov
mov
retf
cmps
inc
sbb
push
sbb
adc
pop
sub
das
cmps
xchg
mov
nop
ds
xor
xchg
xor
fs
rol
sti
and
ret
pop
cmp
mov
jg
(bad)
push
iret
dec
and
sub
dec
gs
or
dec
and
xor
inc
jle
mov
xchg
and
push
and
out
mov
mov
xor
sahf
outs
aam
mov
dec
xlat
out
jae
(bad)
leave
retf
(bad)
fcom
and
(bad)
pop
xlat
out
ds
and
(bad)
loopne
mov
and
xchg
and
popf
cdq
loop
fistp
sahf
call
sub
jl
lods
(bad)
push
loopne
mov
iret
jg
cmp
sub
icebp
cmp
or
mov
inc
xchg
mov
scas
xchg
jne
(bad)
push
sbb
pop
imul
lods
outs
sbb
pop
test
mov
and
xchg
outs
out
imul
mov
sub
inc
lds
mov
xchg
loopne
aad
xor
xchg
sbb
fnstenv
push
(bad)
rol
inc
push
scas
aaa
daa
pop
mov
mov
cmp
cmp
adc
mov
push
ror
jmp
out
sub
sub
out
imul
mov
stc
into
enter
sbb
sub
cmp
cmp
jmp
inc
dec
pop
ins
cmp
inc
das
cmp
js
xchg
jecxz
cli
xchg
ins
mov
imul
movs
shl
jo
in
pushf
lahf
cmp
std
test
out
popa
and
call
sti
ins
xor
mov
mov
cmp
and
mov
ss
cmp
repnz
dec
push
push
(bad)
stc
mov
jns
std
lods
dec
dec
lods
sahf
cmp
cmp
cmps
cmps
aaa
add
mov
cmps
nop
ins
jae
and
adc
xchg
add
fld
sti
retf
add
xor
xchg
and
sub
pop
popa
dec
sbb
cmp
adc
mov
retf
leave
adc
add
call
idiv
lahf
xchg
push
jnp
das
bound
out
ins
sub
fs
mov
fild
or
mov
xor
jo
and
adc
js
clc
stc
mov
(bad)
or
cmp
push
dec
mov
lds
sbb
mov
pop
mov
in
push
clc
add
dec
(bad)
out
push
push
lods
ja
xlat
shl
jbe
(bad)
hlt
inc
xor
adc
into
test
mov
or
sahf
not
call
std
sbb
dec
xchg
xchg
mov
cmp
sub
xchg
mov
out
arpl
pop
or
push
retf
inc
push
mov
movs
cmp
xor
inc
retf
sub
dec
jmp
xor
cmp
lods
test
sbb
inc
ret
fidivr
jb
push
push
(bad)
leave
in
outs
mov
xor
or
jg
mov
shl
sbb
adc
adc
lea
in
jle
pop
mov
test
cmps
(bad)
mov
adc
jbe
test
out
cmp
sbb
add
outs
xchg
retf
jae
jbe
lds
aad
mov
push
sbb
leave
out
mov
adc
pop
mov
add
dec
movs
lahf
jae
adc
jb
inc
clc
and
push
repz
mov
mov
aas
sub
mov
gs
fstp
mov
ins
adc
push
out
mov
aaa
div
pop
cmps
lods
push
mov
aad
inc
leave
jl
inc
dec
into
dec
scas
dec
icebp
xchg
add
push
add
inc
cmp
ds
sub
mov
mov
(bad)
jp
pop
fwait
addr16
repz
pop
pop
jbe
sub
inc
jne
and
into
dec
packsswb
add
xor
test
leave
call
je
mov
and
movs
push
jns
adc
stos
call
dec
xlat
mov
lods
cld
sub
push
ds
lods
dec
hlt
sub
xchg
shl
fs
mov
dec
xlat
push
cmp
shr
and
push
pop
popa
sub
or
outs
sbb
add
adc
loop
mov
and
xor
dec
jecxz
rol
je
mov
jmp
lods
je
fsub
jmp
dec
jae
xor
mov
int3
pop
jg
pop
mov
mov
push
sub
push
lds
jb
add
sub
test
jmp
xchg
(bad)
and
lock
push
mov
aad
aas
xchg
movs
dec
mov
retf
mov
and
test
in
int3
or
sub
out
inc
jne
cmp
and
gs
mov
pop
sub
iret
push
mov
jne
outs
xchg
mov
push
int3
pop
dec
jmp
sub
arpl
mov
sub
aas
sub
sbb
adc
lods
test
movs
jg
sbb
(bad)
pop
pop
cmp
xchg
ins
shl
jo
dec
jnp
aam
mov
movs
out
bound
loopne
jnp
xchg
popf
mov
loop
xchg
push
fadd
inc
or
mov
(bad)
cmp
int3
nop
mov
sub
pop
xchg
aaa
in
mov
push
ss
retf
fiadd
xchg
mov
out
movs
mov
mov
mov
sbb
push
push
sbb
cmp
loop
lods
fmul
call
mov
mov
cmps
(bad)
mov
mov
add
xchg
les
fsub
adc
retf
xlat
pop
add
xchg
jle
xor
dec
sub
mov
imul
dec
cmc
pop
or
add
mov
ror
mov
arpl
rcr
loope
cmp
adc
cld
xchg
cmp
cli
inc
repnz
sbb
call
test
sub
movs
movs
idiv
jecxz
test
or
adc
xor
in
pop
movs
mov
or
repnz
mov
jmp
adc
xchg
adc
fld
addr16
lahf
push
(bad)
jb
jmp
fsub
ret
icebp
fdiv
mov
mov
jmp
pop
(bad)
cli
mov
push
stc
imul
es
sub
das
fild
and
cmps
adc
std
repnz
add
xor
inc
es
pushf
pop
movs
xor
dec
int
cmp
mov
mov
out
test
aas
xor
mov
jmp
inc
sti
cli
and
cmp
sub
cli
mov
inc
push
bound
ins
hlt
adc
nop
push
xchg
xchg
std
data16
scas
add
jl
(bad)
test
inc
adc
sbb
jne
inc
or
lods
sub
fucomip
sub
iret
mov
pop
xor
(bad)
xor
ret
sbb
xor
call
fisub
xor
dec
inc
scas
xor
aad
shl
push
mov
mov
(bad)
es
mov
fs
mov
mov
and
and
xchg
sar
inc
xor
xchg
cmp
cmp
fdiv
push
adc
test
pop
aad
scas
push
and
add
cmp
mov
pushf
dec
xor
in
xchg
adc
sbb
icebp
fcmovu
ret
cmp
cdq
std
and
mov
sub
sar
mov
add
xor
cmp
or
inc
test
adc
inc
aaa
sub
dec
(bad)
jmp
adc
call
dec
repz
bound
(bad)
pop
or
movs
xchg
xchg
fyl2xp1
in
mov
ja
loope
pop
push
add
push
or
repnz
ret
pop
js
fld
pop
lea
in
push
sti
xor
in
inc
xchg
loopne
dec
ror
imul
mov
outs
mov
mov
mov
mov
mov
daa
add
pop
adc
xchg
hlt
inc
in
xchg
inc
outs
mov
mov
or
test
cdq
(bad)
add
jg
inc
pop
sbb
ins
pop
call
fnstsw
or
(bad)
bound
pushf
out
push
in
cmp
fmulp
repnz
pop
stos
fs
lock
add
pop
daa
out
adc
test
dec
lods
mov
mov
in
push
xchg
or
cmp
cdq
inc
jg
inc
mov
sar
test
mov
sub
ror
mov
cmps
mov
fldcw
dec
cmps
ins
jle
mov
cmps
jne
lods
jnp
sbb
int3
push
mov
addr16
dec
cmp
add
jmp
xchg
sub
xchg
push
push
das
fmulp
mov
push
call
rol
push
sub
int
jg
cwde
jo
(bad)
dec
ja
adc
sbb
cmp
pop
ret
xchg
lock
ja
clc
pop
jno
bound
shl
cmp
movs
xor
shl
cmp
sub
lea
push
es
inc
fmul
int3
or
cmc
push
mov
push
sbb
(bad)
xor
cmps
xor
enter
in
repnz
stc
xor
mov
mov
inc
out
out
in
jmp
and
ins
sub
out
jg
(bad)
dec
pause
jg
push
xlat
pop
cs
mov
cmps
nop
jmp
dec
std
fadd
cmp
ss
xor
pusha
mov
adc
ins
jmp
mov
stos
xlat
nop
fidivr
cmps
mov
sbb
int
stos
int
jno
repz
lea
into
xchg
adc
xchg
div
add
xor
stc
in
cmp
pusha
sub
cmc
popa
pop
scas
pop
loop
or
push
out
pop
xor
jne
fiadd
mov
mov
in
sahf
xor
add
sub
movs
dec
push
sbb
mov
fbld
push
leave
pop
into
pop
push
les
out
push
arpl
movs
mov
leave
cmp
mov
outs
retf
sbb
cld
cmp
fidiv
and
data16
fs
cmp
and
js
sti
ins
out
xor
loop
sub
fwait
add
push
dec
sbb
xor
dec
mov
mov
test
mov
bound
icebp
lods
jne
nop
outs
mov
ret
add
xchg
jl
and
aas
scas
cs
rcl
jno
xchg
popf
daa
fcomip
mov
cdq
rcr
mov
xchg
imul
ins
rcr
xor
(bad)
repz
in
xor
iret
lods
mov
jnp
xchg
cdq
outs
push
cmps
out
fiadd
jmp
mov
mov
cld
jl
mov
mov
xor
ins
daa
mov
adc
add
jnp
sbb
jns
inc
push
and
fidivr
in
cmp
mul
bound
ret
dec
dec
xor
sub
xor
repz
push
mov
push
push
jne
inc
jmp
mov
lds
ins
mov
jl
cmps
in
inc
cli
lods
or
jmp
ss
push
dec
xor
outs
int
inc
jmp
sahf
sbb
(bad)
int3
scas
into
enter
mov
adc
xchg
loop
test
push
jns
ins
int
push
mov
adc
ins
adc
mov
test
jg
out
push
popa
gs
cmp
ror
pop
ds
test
mov
lods
sub
ret
fist
stos
and
mov
rcr
pop
aam
sub
(bad)
shr
pop
dec
xchg
mov
cld
fdivp
pop
xor
xchg
push
inc
inc
cmp
movs
push
xchg
nop
pusha
dec
pop
dec
sti
loop
imul
jb
imul
rol
adc
sbb
jg
ja
out
cwde
jg
sbb
ins
cwd
fwait
sbb
scas
mov
inc
xchg
jl
xchg
rcr
cmp
xor
pop
retf
and
push
sub
ds
scas
mov
sub
add
jbe
aaa
fisttp
xchg
imul
dec
xchg
adc
dec
fsubr
sub
adc
in
scas
inc
lea
stc
(bad)
lds
rcl
fsubr
jle
dec
stc
sti
xchg
dec
or
inc
mov
out
pop
lock
and
les
sbb
test
inc
fisttp
in
stos
cmp
dec
sub
cdq
cmpxchg
inc
or
hlt
test
and
adc
jmp
cmps
fisub
das
stos
sbb
pop
mov
fcmovne
fbld
and
pop
sub
and
out
xchg
add
out
push
sub
in
xchg
(bad)
ins
ret
rcl
jae
mov
mov
daa
out
xchg
mov
nop
dec
mov
movs
test
mov
add
(bad)
imul
retf
les
(bad)
jecxz
xor
cmp
daa
loopne
outs
lods
les
xor
sub
hlt
into
paddw
mov
inc
aas
xchg
ins
jmp
inc
or
push
adc
cmp
ds
cmovne
adc
xor
fnsave
or
sub
fs
mov
push
add
pop
loope
push
mov
fld
loopne
into
add
rcr
(bad)
jo
jmp
out
adc
mov
and
outs
(bad)
loopne
test
add
mov
pusha
xchg
cli
idiv
add
in
pop
(bad)
(bad)
jp
pop
mov
fadd
ss
data16
jmp
(bad)
(bad)
pop
test
out
outs
jmp
out
(bad)
pop
pop
fmul
lods
aam
fsub
push
dec
rcr
dec
and
aas
cmps
fist
(bad)
and
xchg
call
loope
pop
push
jp
mov
lods
adc
add
jmp
add
pusha
repz
dec
ret
cmp
cmps
iret
icebp
test
in
fdivr
in
jmp
pop
sub
cld
imul
sbb
mov
push
cmp
sub
cli
jg
xlat
leave
fwait
inc
sub
inc
mov
ja
div
xor
pop
test
push
cmp
xor
scas
push
rol
and
pop
daa
je
and
sub
jg
in
(bad)
movups
repnz
pop
out
into
and
data16
mov
cmp
adc
push
dec
add
pop
sub
in
in
jecxz
pop
jnp
(bad)
xor
rcr
jle
mov
jmp
sti
mov
shl
popa
pop
or
ins
nop
mov
cmc
fcomp
in
xchg
push
adc
test
mov
push
dec
outs
adc
jle
lahf
and
jno
sub
scas
test
popf
ds
adc
jb
push
stos
pop
loopne
mov
mov
loope
xchg
js
pop
ror
push
cli
and
mov
in
dec
sbb
xor
mov
cmps
(bad)
jns
mov
or
xlat
fiadd
add
inc
mov
ja
sub
push
(bad)
mov
cld
and
push
mov
xchg
imul
sub
outs
mov
call
pushf
mov
into
movs
mov
jl
mov
scas
or
or
aam
fstp
ins
pop
inc
scas
xor
jo
xchg
int3
jp
shl
test
retf
stos
cmp
cs
stc
loop
jo
retf
jns
mov
or
aad
mov
mov
jbe
dec
adc
xor
repnz
sub
xchg
jmp
and
xchg
push
jge
shl
sar
jmp
dec
out
iret
ret
mov
hlt
fcmovb
ds
inc
mov
scas
and
mov
out
in
enter
add
and
scas
mov
or
mov
mov
push
and
fs
jno
mul
lods
inc
and
sar
out
pop
cmps
scas
jb
repz
jno
mov
retf
xor
add
bound
push
sar
xchg
jp
jecxz
push
pop
popa
push
push
dec
inc
int
cmp
or
pop
scas
js
ss
adc
ins
gs
sub
fcmovb
mov
(bad)
je
scas
mov
mov
mov
hlt
push
xor
push
dec
gs
loope
(bad)
in
mov
cdq
sbb
shl
mov
aad
sub
mov
int
add
pop
mov
xor
or
fisub
std
clc
in
jecxz
add
js
sahf
jmp
das
or
popa
jge
pop
sbb
outs
cmp
cwde
outs
stc
or
or
jp
jl
cpuid
add
lds
add
dec
or
push
cmp
mov
pop
dec
pop
inc
push
jb
push
sub
sbb
mov
call
scas
jae
repnz
pushf
shl
popf
or
(bad)
loopne
retf
xchg
enter
(bad)
popa
mov
cdq
dec
mov
aad
jge
cmc
jle
cwde
jge
stos
mov
cli
jg
pusha
sbb
mov
movs
xchg
dec
fxch
fldenv
push
xchg
mov
inc
cmp
into
mov
retf
inc
aam
xchg
jno
jp
mov
xor
push
lods
(bad)
cmps
fdiv
fdivr
push
(bad)
jg
mov
or
lock
out
jge
xor
aas
dec
movs
sub
cmp
jge
adc
mov
movs
das
lock
dec
mov
jno
cs
or
in
cli
xor
mov
add
cmp
xor
inc
and
mov
pop
ror
ins
fxch
jecxz
push
or
push
inc
mov
push
mov
pop
in
jecxz
or
arpl
xlat
mov
pop
sahf
sar
gs
out
mov
shl
jmp
add
dec
mov
push
in
jb
ds
jmp
ds
sub
and
sbb
or
aam
in
cmp
mov
dec
cwde
adc
push
in
movs
mov
pop
mov
scas
imul
fld
sbb
mov
push
push
jae
dec
out
popf
fisttp
loope
loope
(bad)
scas
(bad)
mov
add
dec
mov
mov
fmul
push
movs
cmp
inc
xchg
stc
sub
xchg
mov
pop
jno
pop
imul
mov
push
inc
pop
pop
push
retf
cdq
out
push
xor
push
jecxz
cmp
jns
(bad)
pop
or
add
pop
repz
push
aam
popf
(bad)
ds
sbb
xor
inc
pop
jl
xchg
pop
cmp
push
jle
test
out
rol
pop
loopne
pop
(bad)
mov
ja
sbb
jecxz
or
add
inc
in
popf
and
adc
outs
mov
shr
ds
arpl
jne
jmp
and
fadd
mov
test
sub
xor
mov
sbb
cmc
test
sbb
popf
dec
jne
fwait
(bad)
pop
js
sbb
enter
call
mov
jo
mov
mov
or
lea
fnstcw
ftst
adc
stos
pop
or
mov
es
std
add
push
scas
pop
icebp
std
test
inc
push
dec
nop
pop
ds
rcr
sbb
inc
dec
push
cdq
in
stos
lock
xor
adc
add
or
jle
sahf
push
and
arpl
ror
and
xor
loope
ss
and
retf
pop
xchg
mov
push
int
jmp
pop
fstp
cmp
jg
or
movs
ret
and
rol
push
les
push
add
jle
dec
mov
sahf
sbb
test
addr16
dec
scas
cmp
or
xchg
imul
ds
xchg
jae
push
dec
or
out
push
dec
test
adc
mov
cmp
(bad)
inc
xchg
retf
pop
ret
test
fwait
repz
sbb
ja
add
fcom
ins
lods
push
adc
imul
pop
aas
(bad)
scas
dec
cwde
outs
add
bound
cmp
mov
popa
adc
loop
xchg
scas
dec
inc
mov
sub
inc
test
pop
add
mov
rol
in
push
test
hlt
sub
ret
and
pop
das
leave
dec
imul
mov
pop
sub
adc
and
jne
jo
push
mov
push
ror
xor
jmp
fcmovnb
jnp
adc
pop
addr16
outs
call
jmp
cmp
add
sub
and
mov
ror
dec
dec
add
sbb
or
mov
push
push
jl
push
jbe
adc
scas
stos
jp
int
adc
mov
imul
je
or
xchg
cmp
inc
add
xor
std
mov
add
or
loop
out
or
push
xor
jb
sub
loop
xchg
neg
xor
ret
mov
in
mov
movlps
fdiv
push
fbld
rcl
mov
add
inc
add
push
mov
int
push
mov
out
(bad)
in
adc
xchg
nop
sub
cmp
sub
mov
sub
call
inc
inc
dec
mov
add
mov
test
jnp
add
push
pop
mov
xchg
(bad)
outs
jge
in
mov
retf
push
sbb
jp
repnz
sub
fsubr
int3
scas
cmp
dec
and
retf
jmp
sub
std
jns
jecxz
push
xor
push
xor
xadd
cld
dec
pop
ret
push
sbb
jns
pop
inc
test
push
push
mov
sub
mov
out
push
enter
jae
xchg
pop
ins
(bad)
jbe
push
mov
dec
repnz
inc
je
add
ror
xor
scas
push
or
sbb
lods
mul
int3
dec
stos
popf
test
movs
data16
push
inc
mov
scas
stos
jle
mov
mul
ins
inc
push
movs
pusha
add
aam
add
out
pop
addr16
stos
pop
dec
jno
mov
sub
jge
enter
scas
mov
and
ins
cld
jle
or
lods
cmp
mov
cmps
inc
mov
scas
jl
pop
push
jbe
test
(bad)
iret
inc
or
and
inc
outs
jo
xor
fldenv
jb
idiv
mov
lods
pusha
cmp
test
xchg
out
outs
dec
popa
out
jo
inc
fst
and
sbb
call
mov
mov
xor
sbb
movs
dec
xor
call
inc
dec
pop
repz
fimul
mov
rol
fsubr
sbb
mov
sbb
cld
fsub
xchg
cmp
sub
sahf
or
push
xchg
push
mov
out
push
dec
out
adc
pop
pop
shl
jbe
mov
push
ins
in
pop
stos
nop
outs
je
test
mov
cmc
in
push
adc
pop
jne
pop
pop
mov
jmp
push
inc
ds
dec
sub
js
push
dec
adc
or
(bad)
push
push
pop
mov
data16
je
cmps
xchg
movs
ret
and
or
daa
lds
dec
mov
dec
loopne
adc
pop
sub
push
cld
push
mov
aad
sbb
mov
lea
fnsave
push
movs
mov
jl
hlt
inc
sahf
jge
inc
mov
sbb
xchg
xchg
xchg
pop
and
inc
mov
stos
inc
out
jns
cmp
(bad)
push
cwde
repz
daa
jae
mov
lods
push
loope
mov
retf
push
inc
setb
push
cdq
fld
cs
stos
leave
out
mov
stos
stos
mov
sub
or
push
or
(bad)
or
inc
adc
dec
(bad)
pop
aad
fnstcw
fwait
push
adc
fsubr
lods
std
aaa
cdq
xchg
add
jne
ss
dec
mov
pop
inc
in
dec
retf
pop
out
or
call
sar
xor
enter
and
hlt
cmp
adc
dec
jmp
loope
das
rol
mov
loope
jl
mov
dec
push
adc
push
push
out
test
xor
adc
stos
pop
shl
in
and
adc
add
sub
pop
out
cmps
lea
cmp
xor
outs
mov
nop
ins
cmp
shr
push
cmp
repz
fisubr
lods
aad
outs
jge
std
jg
stc
outs
popf
lods
in
loop
push
mov
mov
mov
and
not
xchg
dec
adc
xor
jecxz
hlt
cmp
scas
jg
loope
xor
sub
xor
vpsllq
jb
aam
pop
and
fimul
ins
ret
cmp
dec
push
sub
ins
sbb
and
inc
mul
xor
or
out
hlt
pop
dec
(bad)
push
cmp
loop
or
scas
scas
inc
mov
cmps
jecxz
retf
pop
jb
mov
fild
mov
loopne
movs
test
sub
inc
add
jg
call
cmp
scas
inc
pop
shl
fsub
leave
lds
jb
les
or
add
mov
xor
call
scas
stc
aaa
inc
cld
sub
popf
push
add
call
xchg
mov
jle
sub
fldenv
mov
shl
ds
mov
inc
fisttp
stos
or
jo
sbb
je
scas
mov
div
imul
mov
test
cs
xchg
test
retf
sti
clc
lahf
fwait
xor
and
or
jmp
mov
or
test
xor
enter
dec
gs
test
mov
mov
jbe
jae
mov
aas
add
add
mov
aas
sub
aaa
pushf
ror
adc
rol
mov
jb
push
push
iret
jnp
icebp
add
jg
dec
dec
inc
mov
adc
adc
inc
jle
iret
nop
mov
shl
mov
rol
mov
xchg
mov
jo
jl
sbb
int3
lds
dec
(bad)
xor
das
call
add
dec
adc
rcl
jbe
js
je
ret
cmc
pop
xor
rcr
aad
xchg
dec
test
lahf
ror
scas
mov
je
(bad)
cmp
cwde
out
jl
dec
retf
(bad)
ds
ror
stc
clc
jno
and
mov
loope
bound
or
mov
ror
mov
mov
pop
push
icebp
js
loope
(bad)
jp
xor
or
add
mov
inc
sub
gs
or
mov
dec
call
out
cmovns
xchg
shl
stc
pop
cmp
hlt
or
mov
fisttp
dec
pop
push
jge
inc
lds
xchg
bound
lds
test
scas
sbb
ds
push
(bad)
test
push
sbb
mov
xchg
push
add
mov
repz
(bad)
(bad)
jnp
jle
xlat
aam
add
push
sbb
jmp
rcl
and
pop
ins
fdivr
icebp
sub
and
stos
inc
cli
std
scas
pop
shl
(bad)
pop
mov
xchg
sbb
mov
int
inc
pop
sub
shr
mov
iret
jns
in
adc
cmp
cmps
ret
in
cmp
call
push
push
adc
inc
outs
adc
rcr
cmp
out
pop
mov
dec
arpl
stc
popf
mov
fisttp
rcr
mov
inc
cmc
fcom
stc
ins
ins
xor
push
imul
fldcw
xor
(bad)
(bad)
es
ror
jno
mov
les
(bad)
xor
inc
es
sahf
add
repnz
pop
sub
ret
imul
mov
or
inc
in
cmp
fmul
and
mov
in
pop
xor
dec
mov
mov
addr16
adc
and
sub
ret
aaa
out
fwait
and
mov
push
in
pop
xchg
bound
dec
cmp
idiv
shl
cwde
loope
add
and
jl
jae
ss
test
dec
loope
mov
and
mov
pop
add
movs
pop
xchg
scas
shl
cwde
aas
xchg
cld
mov
shr
div
pop
ss
add
pop
ror
dec
(bad)
fsub
xchg
xchg
inc
add
iret
repnz
rcr
jmp
mov
sub
data16
adc
adc
ins
fimul
call
inc
call
push
mov
into
cwde
jo
pushf
push
xor
test
movs
add
xor
sub
push
imul
(bad)
(bad)
loope
adc
repnz
in
bound
cld
into
movs
nop
xor
lds
pop
aad
adc
and
push
push
jne
call
jg
xchg
mov
nop
mov
xchg
push
mov
in
pop
xchg
sahf
jmp
or
xchg
rdmsr
pop
sub
pop
loope
mov
retf
cmc
fidivr
add
push
adc
retf
cmc
ror
dec
inc
outs
pop
push
cmc
and
into
inc
retf
jns
mov
dec
push
pop
and
sub
imul
sbb
jl
shl
sbb
xchg
in
jecxz
dec
inc
bound
sub
adc
test
xchg
aam
jg
sbb
dec
call
adc
xor
xlat
fldcw
mov
lods
jne
or
imul
cmps
jp
pop
inc
imul
push
cmps
add
hlt
fwait
jl
adc
retf
scas
pop
mov
mov
rcr
mov
into
ins
jno
je
das
adc
mov
hlt
ins
int3
push
mov
push
movs
(bad)
jmp
push
test
mov
push
ins
rcl
jle
cmps
xchg
jns
or
(bad)
cld
push
outs
mov
pop
or
jl
dec
imul
popf
retf
(bad)
retf
test
mov
je
sahf
test
or
push
lea
imul
call
mov
retf
xchg
test
jp
mov
fdivr
dec
add
mov
jmp
mov
rcl
hlt
test
sub
int
pop
sbb
call
xchg
xchg
mov
jge
pop
or
(bad)
push
or
aad
sub
push
ror
xchg
cdq
fucomp
les
xor
neg
fistp
cs
scas
jp
cmp
std
je
std
bound
arpl
and
aas
movs
lea
push
adc
cmp
js
sar
pop
mov
imul
xchg
(bad)
out
(bad)
data16
test
mov
xor
xlat
mov
mul
scas
outs
add
shr
imul
cli
int
dec
scas
xor
leave
sub
adc
test
scas
and
cmp
lea
add
arpl
movs
xor
push
rcr
xor
aad
aas
ret
mov
int
mov
shl
inc
jge
out
sahf
dec
leave
jg
fdivr
ins
cmp
cwde
bound
aaa
add
pop
popa
out
or
stc
push
jecxz
and
repnz
push
pop
out
addr16
scas
xchg
shl
xchg
adc
mov
and
mov
cmp
test
lods
sub
pop
sub
dec
mov
xchg
xor
adc
jg
dec
and
cmp
adc
jecxz
ret
retf
mov
mov
mov
push
iret
push
loopne
mov
dec
lods
push
push
je
(bad)
mov
mov
or
pushf
sub
movs
loopne
or
pushf
mov
inc
xchg
add
out
call
fmul
mov
not
in
scas
test
mov
sbb
pop
pushf
test
loop
shr
les
jmp
sar
mov
push
inc
sahf
push
and
lds
std
jne
js
int
mov
inc
test
aad
sbb
jg
fwait
mov
xor
hlt
repnz
in
dec
aaa
dec
and
mov
clc
dec
add
inc
jae
dec
popf
shl
cmp
popf
fs
pop
mov
leave
and
pop
add
mov
lock
sbb
gs
test
ins
ss
fmul
xchg
int3
mov
adc
leave
cli
cmps
sub
xor
adc
in
inc
inc
mov
add
and
std
mov
inc
iret
push
inc
mov
push
adc
push
cmc
lea
jbe
fidivr
cmp
retf
iret
clc
pop
cmp
pop
in
cli
retf
mov
xchg
adc
leave
push
add
outs
test
and
into
jecxz
add
sub
pushf
test
fidiv
retf
inc
lea
jno
mov
outs
add
das
push
xor
popf
sub
sbb
mov
jo
sahf
mov
repz
iret
inc
and
cmc
fisub
sbb
cli
cmps
jmp
addr16
cmc
xchg
jnp
ja
dec
shl
dec
jnp
les
ja
div
pop
mov
mov
or
imul
or
xchg
setge
mov
and
movs
sub
xchg
addr16
add
cmp
mov
test
cdq
pop
xchg
sbb
(bad)
mov
and
test
sbb
add
lock
shl
js
call
and
mov
ffree
rol
mov
out
jns
sbb
push
xor
out
lods
(bad)
prefetcht2
fidivr
cmp
and
xchg
es
inc
push
(bad)
or
and
add
ins
cmps
nop
xchg
xchg
push
mov
push
ret
jns
(bad)
mov
inc
add
pop
and
cmps
cwde
mov
out
shl
les
jbe
xor
bound
or
lods
mov
jge
add
dec
leave
and
cmp
dec
(bad)
xchg
idiv
jmp
(bad)
and
add
bound
or
jnp
out
cmp
lock
mov
popf
std
xchg
bound
jmp
bnd
dec
into
(bad)
icebp
xchg
ins
pop
adc
cmp
test
sar
addr16
fmul
cld
faddp
jg
pop
dec
popa
cmps
mov
mov
jnp
mov
out
pop
and
xor
lods
xchg
mov
bound
push
xchg
clc
movs
hlt
lods
addr16
das
daa
mov
cmps
xchg
mov
add
push
movs
mov
mov
add
jmp
adc
lods
pop
mov
or
push
pop
out
xchg
sbb
inc
movs
test
pop
xchg
push
clc
mov
push
inc
add
int3
aas
xchg
and
aaa
cmc
js
xor
stos
xor
mov
jp
lods
vmread
daa
test
or
popaw
lods
icebp
aas
dec
sub
push
inc
inc
out
adc
addr16
loopne
push
pushf
push
xor
out
bound
xor
lods
cmp
popf
shl
cdq
cmp
pop
clc
mov
xchg
or
loop
cli
xchg
ss
jecxz
icebp
sub
or
inc
and
add
mov
mov
mov
cmp
inc
push
in
pop
and
loopne
scas
test
mov
shl
jmp
stos
xor
xlat
xchg
pop
mov
icebp
fstp
lods
outs
fcom
shr
push
gs
ja
jle
in
sub
mov
dec
(bad)
test
lock
sub
pop
mov
inc
fild
cld
mov
jp
je
and
repnz
rcr
mov
xor
or
sub
(bad)
mov
(bad)
cmp
xlat
xchg
adc
dec
out
clc
rcr
add
test
xchg
movs
out
or
jo
mov
and
sbb
mov
je
(bad)
jne
dec
pop
mov
mov
and
stc
cdq
sbb
inc
ret
dec
jmp
data16
mov
movs
test
jns
dec
xor
stos
std
dec
sbb
dec
sbb
mov
loop
clc
mov
add
fs
xchg
xchg
mov
fbstp
popf
dec
pop
mov
aas
scas
ret
jmp
in
pushf
mov
(bad)
xor
loop
cmp
mov
shl
sbb
(bad)
call
cdq
sub
imul
jo
outs
mov
sbb
daa
or
mov
iret
jno
rcl
cs
icebp
and
sub
pop
or
arpl
cmp
dec
xchg
dec
das
(bad)
xlat
in
mov
dec
test
cmps
cmp
fs
shl
mov
ds
outs
inc
mov
(bad)
lahf
inc
xchg
sbb
jnp
adc
ss
scas
inc
cwde
dec
jb
ficomp
repnz
fisub
or
addr16
int3
rcr
outs
call
mov
scas
das
retf
lahf
cmp
add
pusha
push
push
sub
cmc
pop
push
xor
pushf
and
sub
or
(bad)
out
imul
inc
xor
sar
loop
push
jg
mov
sub
test
cmps
shl
(bad)
aad
push
fdivrp
inc
adc
or
sbb
mov
scas
mov
gs
push
jo
dec
ror
sub
out
mov
aaa
test
int3
in
adc
xchg
push
lock
xchg
xchg
dec
cs
xor
lea
mov
arpl
xchg
fs
lods
xchg
cmc
test
jns
inc
sbb
data16
mov
add
inc
fiadd
xor
je
inc
cmp
sbb
xchg
mov
jle
or
daa
pusha
jge
cmps
div
mov
les
daa
ror
cdq
das
out
push
push
imul
out
and
xchg
mov
cld
mov
out
push
mov
shl
(bad)
push
(bad)
arpl
outs
popf
icebp
or
fiadd
or
std
imul
loopne
fs
rol
test
pusha
add
call
cmps
adc
adc
fsub
(bad)
mov
outs
and
dec
out
xchg
fcomp
psrlq
cld
out
stos
xchg
adc
mov
xchg
mov
sahf
sub
inc
dec
jg
fs
hlt
push
inc
aam
and
aaa
adc
and
call
scas
shl
xor
imul
aam
add
jno
pusha
jns
ja
retf
xchg
mov
push
mov
cmps
dec
retf
mov
push
jnp
fld
xchg
js
popf
in
sahf
pusha
jp
hlt
xor
push
jge
mov
lods
fmul
f2xm1
loop
pop
push
(bad)
push
int
pop
cmp
sar
add
sti
lds
rcl
cmp
lods
cmp
int
cdq
stos
push
mov
cmp
out
inc
pusha
jmp
es
rcl
loop
jmp
push
push
sub
inc
mov
ja
sub
lods
hlt
jle
fs
test
shl
mov
in
xchg
movs
ins
test
inc
inc
mov
jg
movs
adc
and
mov
lahf
test
pop
pop
cmp
xchg
mov
dec
push
lahf
addr16
and
out
jge
bound
push
xchg
shl
loopne
xchg
test
mov
xchg
dec
mov
dec
xor
dec
ins
sub
outs
in
ins
in
sbb
sub
in
cmp
cmp
cmp
and
mov
adc
xlat
mov
jmp
inc
push
loope
daa
outs
mov
sbb
mov
iret
mov
imul
mov
sti
outs
aas
push
adc
or
popa
push
mov
loope
in
les
lea
test
adc
xchg
lds
mov
les
call
mov
inc
sub
sbb
cs
adc
stos
imul
movs
outs
arpl
push
ret
pop
arpl
mov
ror
leave
gs
in
nop
jle
mov
outs
call
cld
test
movs
xor
mov
xchg
div
mov
xor
lods
push
cmp
jae
cmp
add
add
repnz
test
and
mov
cli
outs
rcl
adc
pop
cmp
cld
mov
ja
pop
ss
push
ds
aad
in
loopne
mov
test
cmc
cld
addr16
push
jns
push
jnp
test
push
rcl
sar
cmp
cmp
dec
fcmovnu
add
cmp
in
cmp
jmp
xor
js
inc
dec
enter
in
add
std
cmp
xor
sub
in
xchg
gs
(bad)
les
mov
add
mov
mov
pop
sbb
pop
mov
rcr
(bad)
ret
jge
daa
sub
adc
imul
jge
sti
stos
cdq
aam
clc
or
push
mov
loop
mov
inc
popa
pop
test
cmp
scas
sar
and
sbb
loop
push
std
mov
cs
and
jns
mov
rol
cli
loop
gs
cmp
pop
xor
imul
aam
pop
mov
and
fst
sbb
aam
inc
stos
pop
aam
mov
adc
adc
sti
or
add
jne
retf
dec
leave
pop
dec
cwde
je
inc
or
pop
in
sahf
adc
push
mov
addr16
pop
cmps
push
scas
inc
movs
sub
add
and
push
std
arpl
mov
dec
in
rol
pop
fnstsw
nop
cmps
fidivr
pop
adc
sub
dec
sub
cmps
sub
aas
pusha
add
push
in
out
neg
dec
pushf
imul
out
dec
das
dec
adc
inc
(bad)
aad
call
add
cmp
push
mov
xchg
inc
xor
cs
xchg
into
xchg
dec
inc
nop
or
adc
mov
inc
mov
je
mov
lock
jno
jae
xor
in
nop
sti
in
lea
pop
imul
mov
fucomip
jecxz
rol
ins
repnz
sbb
xchg
fimul
and
cmp
fiadd
xchg
jmp
add
stos
aam
daa
push
inc
or
mov
push
test
xor
push
sahf
lahf
dec
popa
je
ja
jae
cmp
int3
aad
sub
dec
(bad)
mov
jmp
sbb
retf
xchg
mov
out
jnp
leave
scas
shl
jmp
daa
adc
hlt
mov
loop
cmp
das
and
lahf
lds
sub
(bad)
fnsave
stos
clc
scas
shl
cdq
push
cwde
ins
out
push
test
mov
xor
push
add
jmp
into
sbb
push
ins
ret
call
add
inc
icebp
outs
fidivr
mov
ret
xchg
stc
and
ds
out
sbb
mov
cmps
sub
sub
or
iret
sub
cwde
fbstp
mov
mov
mov
fnstcw
adc
add
mov
out
cmp
fucomi
shrd
cmp
and
pop
push
jnp
in
jae
xchg
pop
retf
push
push
add
clc
stc
outs
add
sub
adc
jle
xchg
sbb
push
mov
retf
mov
idiv
cmps
cmps
cwde
mov
xor
inc
call
stc
xchg
cs
cdq
loopne
shl
and
(bad)
cld
cmp
pop
popf
cmp
cmp
inc
sti
adc
scas
xchg
dec
imul
and
xchg
add
sbb
mov
mov
int3
mov
lods
mov
fwait
movs
jne
xchg
lods
gs
popa
int
sub
cs
jae
cmps
dec
cmps
cmps
jb
stos
imul
dec
das
or
data16
xor
scas
repnz
pop
add
jo
add
aaa
(bad)
xor
mov
int
pop
stos
outs
sub
ja
and
pop
and
push
into
out
fcmovb
mov
das
dec
imul
lfs
adc
sahf
fdivr
js
adc
or
(bad)
cmc
sbb
cld
scas
inc
leave
test
jno
inc
fwait
iret
mov
aaa
dec
(bad)
in
outs
lahf
div
clc
popa
aas
das
mov
mov
retf
out
jne
gs
xor
add
aam
inc
jae
aad
sbb
push
mov
dec
rcl
popf
jge
sub
mov
imul
fldl2t
mov
dec
ss
pop
inc
ret
dec
int
xchg
push
push
mov
xchg
or
out
ret
call
mov
pandn
jl
in
xor
pop
int3
pop
push
imul
push
cli
popf
sub
lds
or
add
imul
sahf
int3
push
mov
imul
nop
frstor
loope
jp
mov
outs
cwde
mov
sbb
inc
out
xor
repnz
xchg
cmps
mov
and
pop
mov
jl
leave
rol
adc
pop
sbb
and
cli
call
xchg
xchg
or
xchg
fild
arpl
inc
int3
ret
in
test
shr
dec
test
(bad)
neg
les
jmp
(bad)
repz
ret
cmps
push
cwde
sbb
xchg
ss
cmp
cmp
pusha
jae
or
cmps
pop
cmp
dec
lds
pop
sbb
scas
lahf
fs
inc
fistp
mov
cmc
cmp
sub
sbb
rcr
xlat
mov
xor
or
and
pop
ret
mov
ja
xor
sub
jo
dec
cmp
scas
or
hlt
sbb
movs
outs
ss
(bad)
test
jp
inc
idiv
cmp
rcr
xchg
and
rol
int
inc
adc
or
mov
push
adc
inc
mov
adc
mov
ja
(bad)
mov
cwde
fcom
ds
(bad)
pop
loopne
fdiv
push
pop
pop
in
pusha
leave
add
frstor
adc
bound
shl
jno
or
retf
or
or
test
cld
jbe
pushf
lea
jle
retf
jmp
imul
inc
push
nop
and
cs
pop
jo
xchg
in
sbb
je
push
dec
mov
sbb
mov
es
push
mov
aad
icebp
int3
hlt
loope
inc
mov
(bad)
out
in
int3
mov
jmp
push
xchg
xchg
shl
not
push
ror
les
addr16
loop
mov
test
jp
fs
sbb
pop
sub
mov
cmc
jecxz
scas
mov
xchg
ffree
popa
in
push
sub
std
mov
cmp
in
mov
mov
sbb
(bad)
pusha
pop
aam
repz
retf
ffreep
repnz
jp
mov
mov
inc
xor
dec
test
repz
je
push
cmp
jb
jge
mov
xchg
cmp
jbe
xchg
xchg
cwde
and
xor
pushw
adc
test
iret
push
jne
jg
stos
hlt
fisttp
xchg
mov
je
sub
mov
xchg
sbb
(bad)
into
lahf
rol
lods
inc
adc
and
or
inc
push
and
ret
mov
and
adc
xchg
jle
mov
movs
std
mov
cwde
test
ror
mov
mov
ja
xchg
jg
inc
sub
adc
fs
add
inc
icebp
fst
jmp
add
mov
add
clc
or
stc
sub
push
data16
dec
pop
test
pusha
test
popa
std
(bad)
xor
cwde
sub
adc
cli
lahf
data16
xor
popa
sub
cmp
mov
sub
and
xchg
mov
cwde
(bad)
aaa
(bad)
(bad)
adc
aaa
fwait
sbb
pop
jo
sbb
dec
arpl
add
pushf
add
mov
fwait
dec
pop
or
adc
idiv
shr
in
fs
pop
pop
cwde
sbb
sbb
mov
dec
xor
push
ficomp
(bad)
push
adc
mov
push
dec
push
push
mov
and
das
ror
jno
inc
test
dec
xchg
or
test
mov
iret
mov
or
stos
fcmovnb
push
push
(bad)
pop
div
mov
xchg
icebp
push
cmp
xor
sahf
mov
test
sub
xchg
pushf
out
adc
fs
retf
call
inc
mov
adc
cmps
sub
pop
sub
mov
mov
aas
mov
packsswb
pop
xchg
cdq
xor
and
jmp
or
xor
mov
es
mov
and
pop
cmc
fcom
cli
loope
pop
jecxz
sbb
shl
mov
cs
xor
fld
pop
shr
add
pop
pop
xor
or
cmp
leave
test
cmp
aam
mov
adc
pop
retf
test
mov
in
scas
adc
int
inc
xlat
loopne
fisttp
sub
stos
sub
push
movs
pop
outs
fstp
clc
mov
adc
test
enter
jl
das
in
out
sbb
les
and
out
movs
pop
fnstsw
les
xor
mov
jae
movs
or
mov
and
pop
es
cmp
mov
cdq
sbb
je
iret
and
sbb
sub
mov
mov
jno
and
jmp
call
(bad)
xor
or
sub
icebp
cwde
imul
das
in
out
cmp
jo
jle
mov
popa
in
push
mov
test
mov
stos
(bad)
rcr
lds
dec
shl
inc
mov
in
push
pusha
xchg
movs
mov
jnp
lea
xlat
inc
xchg
push
shl
inc
lahf
aam
push
aas
lock
or
call
cmps
sub
sar
or
pop
stc
pusha
push
iret
pop
popa
std
(bad)
ror
daa
mov
lds
cmp
mov
lea
test
cmp
push
mov
lock
sub
stos
push
and
aas
push
xlat
inc
pop
push
push
add
jge
dec
sbb
dec
ja
push
test
mov
or
shl
out
cmp
daa
cmc
scas
push
outs
mov
mov
pop
mov
fsubr
fisttp
je
or
and
jge
dec
mov
outs
add
call
xor
loopne
scas
jl
dec
rcl
ja
stos
and
stos
popf
test
ficom
jmp
fcmovu
mov
xchg
aas
sti
xchg
xchg
push
popf
es
pushf
aam
pop
out
or
cmp
fwait
adc
xsha256
cmps
xchg
popf
leave
movs
aaa
inc
imul
xchg
imul
push
sahf
(bad)
retf
and
inc
xchg
push
gs
sahf
outs
cmps
xor
xor
(bad)
scas
push
inc
xchg
stos
pop
mov
mov
adc
xchg
and
nop
out
aam
test
xor
push
and
mov
inc
loope
xchg
sub
aaa
test
dec
cmps
sbb
inc
repz
sub
mov
test
movs
jbe
pop
add
popf
or
inc
adc
inc
adc
jns
pop
into
and
cli
pop
sti
xchg
(bad)
jle
in
in
cmp
sub
mov
lahf
xor
or
fsubr
fstp
sub
mov
cmp
shl
push
inc
out
int
sbb
mov
movs
in
push
imul
push
xor
and
sub
xor
dec
shl
call
push
enter
jne
cli
loopne
iret
add
xor
cmp
mov
pop
mov
inc
repz
sub
jnp
add
jo
in
jp
inc
mov
jne
or
pop
test
push
fidiv
jo
repnz
pop
sub
xchg
sbb
iret
add
pushf
pop
push
adc
or
cmp
xchg
call
fs
push
xchg
(bad)
scas
xchg
add
sub
pushf
inc
mov
clc
ss
or
and
adc
jne
and
jmp
inc
aas
fucomip
frstor
stos
fadd
push
adc
loopne
sub
ds
out
test
mov
add
(bad)
pop
mov
jae
movs
dec
stos
test
or
out
fisub
push
add
mov
inc
cmp
rol
jno
mov
xchg
mov
(bad)
jne
scas
adc
add
shr
scas
jmp
or
mov
mov
and
xlat
ds
mov
sbb
xor
ror
pushf
or
(bad)
test
imul
add
cmc
mov
jns
inc
pop
nop
xchg
add
btc
out
or
pop
mov
lods
rcr
in
adc
popa
clc
stc
shl
cmps
or
ins
fs
push
(bad)
iret
movs
dec
dec
fist
adc
pop
mov
pusha
bswap
fdivr
int
mov
int3
out
jecxz
pop
jmp
jns
jmp
xchg
mov
inc
lods
jmp
lods
cmp
mov
inc
xor
jne
sub
dec
dec
cmp
dec
mov
jae
rcr
mov
pop
test
mov
lods
sbb
iret
mov
daa
str
test
push
mov
popa
jbe
lea
adc
icebp
xlat
or
inc
xchg
int3
dec
ins
cmp
jno
aam
jmp
add
icebp
(bad)
fsub
push
cmp
mov
sbb
ss
bound
push
outs
xor
push
adc
dec
daa
in
mov
jns
adc
mov
ror
lods
and
push
jl
addr16
jno
and
test
jae
stos
leave
and
jb
or
jmp
mov
stc
sar
dec
fimul
test
mov
lods
jmp
mov
xchg
sbb
imul
jbe
xchg
cmc
cwde
data16
lds
into
xchg
fdivr
jmp
(bad)
and
in
ja
fwait
(bad)
mov
push
add
push
jp
or
ficomp
iret
jg
std
(bad)
push
push
int3
nop
test
aam
mov
dec
xor
inc
hlt
cmps
ja
sbb
fwait
(bad)
lods
(bad)
lock
add
mov
fwait
push
sti
and
inc
int3
xor
cwde
cmc
loope
xor
ret
mov
xchg
btc
sub
test
adc
push
sub
pushf
nop
jmp
aad
add
sbb
test
or
inc
push
lods
int3
leave
pop
dec
adc
cmp
js
fmul
faddp
dec
dec
pop
mov
aad
cmc
sar
add
hlt
shl
xor
sub
inc
mov
dec
cmp
add
jg
mov
cmp
sahf
sub
retf
fabs
lods
addr16
cmp
cmp
js
in
fisub
pop
lods
dec
or
ins
adc
jnp
inc
sbb
pop
push
cmps
inc
mov
out
into
jge
pop
aaa
dec
mov
add
mov
jbe
sbb
push
bound
xchg
scas
stc
mov
aaa
cmp
hlt
pushf
push
call
mov
retf
sub
pushf
iret
xor
in
pusha
mov
xor
les
cli
repz
and
sar
stos
pop
fld
and
iret
push
push
(bad)
pop
inc
mov
psubusb
dec
dec
sub
ds
cwde
and
xor
sbb
pop
je
(bad)
(bad)
fistp
adc
data16
push
jnp
test
cmp
sti
test
pop
(bad)
sti
jae
rcl
stos
pop
or
cmp
pop
push
lahf
mov
adc
mov
sub
mov
push
mov
test
jo
enter
mov
push
sbb
xchg
outs
stos
sti
xchg
into
pop
retf
cmp
aad
scas
mov
lods
dec
test
mov
(bad)
mov
mov
mov
xchg
add
(bad)
cmps
jg
push
scas
xchg
cld
out
pop
sub
cmps
sahf
pop
adc
cwde
imul
mov
addr16
xchg
mov
xor
call
out
scas
fisubr
or
pop
dec
dec
jbe
xor
test
in
mov
inc
test
mov
xor
push
add
mov
sbb
(bad)
shl
and
push
ret
inc
or
std
or
test
sbb
les
cmp
push
repnz
test
ins
pop
inc
mov
or
xchg
sub
sbb
imul
push
sbb
pop
mov
dec
movaps
int
xor
dec
mov
xchg
dec
dec
mov
pop
pop
not
cmp
add
mov
popa
dec
sub
pop
mov
gs
push
xchg
in
mov
push
(bad)
cld
in
repnz
cwde
mov
fcom
jle
lahf
hlt
es
popf
jle
mov
out
cdq
pop
jmp
in
xor
in
rcl
adc
pop
mov
mov
(bad)
loopne
xchg
jmp
push
stos
lds
mul
int
xchg
push
gs
xchg
or
imul
retf
adc
sar
mov
jnp
xor
mov
pop
lods
xchg
ins
jne
loopne
loopne
loopne
sbb
cmps
scas
mov
jbe
lock
call
bound
aas
cmps
add
pop
dec
fmul
pop
repz
cmp
xor
jno
in
dec
pop
mov
movs
daa
mov
enter
and
mov
clc
or
cdq
xor
test
sub
nop
jmp
push
pop
add
xchg
push
lods
loop
or
jecxz
mov
or
and
inc
cdq
clc
ror
sbb
cld
scas
jecxz
stos
iret
test
xor
std
mov
aas
pop
repnz
pusha
and
and
retf
jae
push
loop
pop
mov
data16
fs
inc
mov
out
int3
mov
mov
movs
push
aam
(bad)
(bad)
int
mov
or
icebp
push
bound
dec
xchg
mov
mov
and
mov
and
gs
or
add
adc
call
push
pop
mov
cwde
pop
loope
or
xchg
loop
push
mov
push
adc
les
adc
pop
add
mov
and
add
mov
fwait
jle
shr
retf
push
jmp
cwde
or
ins
movs
adc
mov
or
add
daa
push
or
sbb
add
imul
in
xchg
cs
and
imul
sbb
or
jle
xchg
jmp
dec
cmp
add
adc
mov
pop
daa
stc
sbb
adc
hlt
fadd
cmp
loope
or
inc
fisubr
hlt
clc
add
xchg
mov
jno
popa
mov
or
imul
popf
push
rcl
sub
add
cmp
mov
inc
jge
push
lods
jbe
push
sti
ins
and
add
push
and
int3
in
pop
mov
dec
xor
xchg
out
mov
ret
sahf
add
pushf
inc
bound
out
sub
add
sub
loop
sub
pop
nop
push
push
sub
pop
sahf
rcr
scas
jbe
test
cmps
jb
fistp
sub
test
pop
cld
dec
pushf
mov
inc
les
mov
push
(bad)
fwait
jnp
movs
sti
cld
ins
dec
out
mov
jp
or
cmp
sahf
sahf
fnstcw
ds
lods
imul
retf
test
jmp
mov
retf
mov
fwait
test
jmp
inc
repz
and
das
in
iret
pop
mov
shl
aaa
je
mov
icebp
int3
lahf
push
scas
jo
fs
rcr
stos
cmp
sub
loope
adc
in
mov
mov
jp
cmp
scas
cmp
pusha
enter
cmp
inc
push
mov
test
jnp
xor
cmp
or
inc
xchg
out
xor
xchg
into
outs
push
pop
inc
lds
jns
adc
mov
mov
xchg
in
push
add
ss
pop
jnp
movs
ret
sbb
mov
push
inc
imul
ret
mov
jmp
out
cmp
fnstcw
add
dec
mov
ret
cmp
aaa
repz
cmps
fld
mov
imul
call
add
push
sub
gs
test
(bad)
dec
xchg
jo
inc
dec
pop
dec
mov
sub
lock
or
sub
mov
(bad)
fwait
repz
inc
mov
add
je
cmp
in
mov
inc
leave
shrd
cs
xor
adc
loop
add
inc
jle
sbb
xchg
push
mov
test
int
cmp
jmp
inc
movs
dec
(bad)
mov
imul
stc
push
sub
or
pcmpgtb
lea
jmp
lock
hlt
daa
jp
(bad)
sbb
jno
shr
icebp
xor
xor
dec
jl
test
xchg
sbb
test
push
xor
and
adc
jmp
xchg
mov
mov
int
shr
(bad)
sbb
rcl
add
cmp
push
mov
call
inc
shr
xor
jo
sti
add
out
dec
jl
pop
mov
(bad)
test
cmps
xchg
js
jae
shl
sahf
fcmovnb
div
test
xor
inc
push
xchg
xor
cmp
cmp
push
rcr
pop
add
aas
or
fiadd
ret
and
xchg
or
js
push
sbb
arpl
ja
outs
and
sub
sbb
in
lahf
xchg
mov
mov
pop
test
movs
into
and
nop
or
inc
iret
sub
xchg
out
mov
(bad)
pop
mov
es
mov
outs
cmps
pushf
imul
ficom
xchg
pop
in
repnz
nop
sar
add
xor
loope
adc
(bad)
adc
and
ja
and
and
mov
xor
(bad)
fcmovnu
jnp
jg
xor
fs
cdq
fdiv
mov
loopne
test
ja
aaa
mov
rcl
sub
mov
add
pop
jmp
out
xchg
xchg
jl
mov
out
ss
outs
xchg
ret
out
jl
not
pop
sub
mov
fcmove
sahf
and
es
test
rcr
sar
(bad)
mov
ja
lods
(bad)
push
cmps
neg
sahf
pop
ja
popf
(bad)
push
and
dec
cdq
or
dec
pop
mov
in
in
iret
mov
cmp
test
push
and
fdivp
add
sahf
or
add
fmul
sahf
push
push
push
inc
lock
sbb
cmp
inc
std
sub
fsubr
push
mov
push
push
jmp
es
mov
adc
mov
jo
arpl
les
lods
push
loopne
(bad)
test
inc
sub
repnz
mov
pop
inc
shl
push
add
mov
shl
repz
pop
fwait
xor
mov
push
dec
mov
mov
mov
ror
out
ret
xchg
mov
(bad)
arpl
or
dec
ja
pop
aam
pop
mov
dec
sbb
cmps
jmp
test
inc
clc
jmp
push
pushf
push
mov
mov
dec
mov
dec
pop
pop
or
jno
sub
jg
stos
not
in
cmp
mov
loope
std
jmp
inc
and
pop
sub
cli
sti
mov
adc
imul
je
ror
jmp
xor
inc
in
jecxz
sbb
aad
jo
sub
out
test
push
addr16
ss
not
test
out
mov
mov
cmp
setne
dec
shl
jae
mov
jno
stos
mov
xchg
mov
jbe
outs
adc
xlat
pop
cmc
mov
cmp
push
test
sbb
fidivr
and
inc
out
ret
loopne
aam
pop
cmc
jo
js
pop
sti
(bad)
shr
mov
fsub
mov
movs
popa
mov
nop
adc
cmp
in
pop
retf
xchg
and
push
mov
leave
in
(bad)
jo
xlat
jae
dec
mov
popf
loope
sbb
xchg
ja
mov
in
rcl
sti
jbe
cmps
fnstsw
aad
(bad)
push
fist
jbe
inc
ret
dec
pop
mov
in
es
out
into
inc
call
data16
aad
sti
sbb
lss
adc
and
mov
jne
lock
int
leave
shl
fwait
push
sub
mov
test
out
repz
xor
add
xor
mov
test
stos
cmp
jns
mov
in
dec
movs
jl
out
out
xchg
pusha
jo
aad
pusha
pop
mov
or
sub
dec
das
or
cmp
xor
xchg
or
repz
imul
or
cld
sbb
adc
and
daa
jns
sbb
or
inc
xor
stc
scas
or
ret
dec
fisub
daa
or
jne
adc
inc
dec
pop
test
push
in
unpckhps
and
movs
int3
leave
push
xchg
mov
aam
lods
or
mov
jmp
adc
cmp
std
in
(bad)
cli
xor
cmp
shl
sbb
mov
xchg
sti
enter
jecxz
jo
xchg
es
cld
leave
pop
test
js
ret
add
inc
or
dec
adc
adc
pop
cmp
mov
xor
push
clc
sub
ret
or
xchg
mov
and
mov
(bad)
fistp
pop
pop
push
sub
shl
add
int3
add
mov
mov
adc
sahf
pop
into
sub
lahf
sar
pop
add
ins
pop
jp
xchg
icebp
jle
loope
mov
jae
(bad)
mov
daa
daa
mov
sub
test
sub
xor
dec
movntps
mov
(bad)
pop
dec
xor
dec
sbb
shl
int
inc
mov
mov
in
push
sbb
mov
adc
pop
xor
pop
div
in
jg
xor
mov
sbb
call
dec
jg
cmp
jle
aaa
clc
dec
mov
mov
push
pop
sub
mov
leave
sub
cmp
jo
cs
dec
sub
es
mov
jnp
(bad)
sub
cmps
mov
cmp
lock
fs
dec
in
sbb
rcr
sub
and
mov
pop
fldcw
mov
retf
ret
es
dec
mov
adc
(bad)
mov
sbb
adc
shl
dec
mov
or
mov
push
movs
sbb
mov
xor
adc
loope
fdiv
ss
pop
lods
sahf
iret
outs
loope
repnz
jmp
fcomp
and
test
loopne
pop
ret
jne
or
scas
mov
jne
jmp
add
int
stos
pop
cmp
dec
or
imul
sub
(bad)
stos
add
adc
mov
int
push
in
fiadd
inc
ret
pop
mov
pop
lahf
into
xor
repnz
fidiv
xor
inc
cmp
ds
scas
pandn
bound
mov
mov
sbb
mov
mov
push
lock
(bad)
xor
in
xchg
add
sbb
push
cmp
jecxz
stos
dec
clc
dec
inc
ja
test
and
xchg
lds
xor
sub
push
lea
es
mov
jno
enter
jmp
scas
sbb
xchg
gs
out
sbb
cdq
push
fadd
push
xor
push
outs
mov
out
cmp
dec
les
mov
ins
(bad)
cwde
ret
arpl
mov
dec
inc
pop
in
ins
or
shr
sar
xor
dec
push
add
das
inc
movs
mov
out
inc
ds
jmp
mov
cld
movs
cmps
add
xor
or
xchg
mov
mov
push
cmps
inc
icebp
shl
arpl
xor
dec
pushf
ins
das
out
pop
mov
ret
pop
cmp
in
and
lds
inc
jmp
sbb
xor
push
not
fiadd
cmp
cmp
inc
lahf
mov
rcr
xchg
sub
outs
in
fadd
(bad)
bound
jl
test
xor
bound
inc
shl
xlat
enter
scas
leave
ins
inc
sub
pop
sub
sbb
fucom
adc
add
mov
fs
lock
stos
mov
xor
and
pushf
inc
xchg
arpl
push
xchg
out
xchg
fsubr
movs
jmp
mov
mov
loopne
xlat
pusha
sbb
aad
loopne
loop
mov
dec
pop
xor
int
lods
or
mov
pop
js
(bad)
sub
jmp
add
je
cmp
out
mov
scas
shr
sbb
cmps
loop
pop
mov
cs
mov
xchg
xor
sub
adc
or
loop
sbb
jae
jmp
cld
addr16
sbb
repz
inc
in
call
rcr
mov
rcr
dec
dec
cmc
jbe
stos
xchg
or
or
iret
mov
icebp
inc
hlt
mov
sub
mov
xchg
add
in
sahf
sets
cmps
fst
dec
mov
jle
cs
test
mov
cmps
pop
xor
dec
pop
push
(bad)
scas
pop
and
imul
jnp
in
xchg
jp
call
and
fistp
ins
aad
xchg
ja
dec
loop
mov
mov
inc
test
dec
xchg
or
mov
mov
jecxz
mov
nop
xor
in
push
retf
cmps
sbb
and
mov
pop
adc
out
movs
lds
icebp
mov
adc
scas
push
mov
cmps
dec
jecxz
call
pushf
out
nop
push
aam
mov
push
mov
jg
popa
inc
push
jo
xor
adc
adc
cmp
mov
movs
mov
push
psubsw
stc
fs
neg
movs
jge
push
push
mov
or
into
test
or
sub
(bad)
shr
push
test
bound
leave
jmp
outs
xchg
pop
cwde
js
pop
cmp
js
jle
cli
mov
jbe
cli
call
sahf
push
pop
ins
in
or
pop
pop
test
icebp
sahf
test
push
sar
cld
in
mov
and
fstp
sub
add
fs
mov
push
mov
sbb
adc
mov
jns
or
xchg
das
popf
push
and
push
cli
shr
jge
outs
psubusb
sbb
jl
jmp
outs
nop
jge
into
js
movs
jb
ins
inc
cld
jge
xor
mov
adc
mov
and
addr16
sub
or
add
xchg
fwait
dec
scas
push
(bad)
push
xor
xchg
imul
fcomp
jle
xchg
dec
pop
jp
retf
xor
shr
xor
xor
int3
push
push
loop
mov
lahf
outs
repz
or
xchg
leave
sub
and
pop
push
pop
sbb
fist
xchg
push
mov
leave
loop
add
xor
sar
mov
test
dec
cmps
int3
and
adc
mov
pop
(bad)
ss
jle
sub
add
popa
shl
int
jge
mov
mov
shl
ja
int3
dec
cmp
out
adc
in
call
jne
ror
or
pop
push
adc
and
jb
lahf
lds
sub
adc
lahf
retf
jle
xchg
and
sub
mov
xor
pop
lea
call
add
sbb
pop
aaa
sbb
into
inc
mov
fdivr
cmp
test
(bad)
cmp
out
fsub
dec
dec
mov
pusha
jl
push
fld
xchg
add
test
in
mov
int3
push
cmp
jmp
push
jecxz
cmp
aad
bound
sbb
jns
in
xor
ja
out
ins
cmp
nop
ss
hlt
leave
xchg
add
push
jne
aas
dec
in
popf
inc
xchg
cmc
pop
in
fsubr
cmps
xor
fstp
push
jb
pop
js
ror
scas
stc
loop
inc
and
adc
adc
adc
jecxz
add
xchg
pop
fstp
mov
(bad)
push
xlat
ret
not
pop
repz
and
adc
mov
dec
sbb
mov
xlat
push
(bad)
idiv
jecxz
adc
fwait
sbb
pop
cmp
and
daa
xchg
mov
add
and
mov
test
xlat
adc
popa
xchg
mov
retf
xlat
push
cs
sub
test
vmwrite
dec
sar
push
je
xlat
pushf
mov
add
or
popf
push
adc
jae
scas
popf
fdiv
add
ficom
sub
scas
xchg
mov
cmp
sub
js
or
inc
(bad)
sub
dec
movs
dec
jb
pop
cmova
ret
pop
out
cmp
sti
loopne
(bad)
fsubr
addr16
loop
cmc
repnz
xor
mov
dec
outs
lock
(bad)
cli
and
fidivr
push
or
fmul
test
mov
xor
pop
loop
jge
ja
clc
out
arpl
test
imul
popf
dec
mov
pop
das
lock
movs
cli
push
data16
lock
push
mov
ud0
and
stos
js
xor
(bad)
pusha
fistp
adc
inc
xchg
or
and
pop
mov
shl
sub
or
push
cmp
jb
sub
ds
jmp
shl
addr16
loope
in
icebp
fcomp
sbb
scas
sub
call
leave
mov
jbe
movs
movs
jo
push
mov
call
add
out
inc
sti
cmps
mov
or
xor
leave
sub
int
xchg
jl
cmps
rcl
in
xchg
out
stos
mov
pop
nop
int
jecxz
scas
mov
pop
arpl
outs
nop
ret
cmp
dec
pop
inc
shl
arpl
mov
inc
pushf
rol
shl
stos
mov
mov
mov
icebp
ret
lea
add
into
popa
int
pop
int3
aas
mov
lds
sub
xchg
sbb
js
icebp
iret
sahf
lock
adc
outs
sbb
sbb
add
outs
fadd
mov
and
and
test
fwait
inc
fdiv
fistp
test
push
mul
mov
add
jno
leave
int3
or
data16
fild
es
xor
leave
cmp
push
out
cmp
sub
ror
outs
cmp
je
clc
jae
ja
pop
mov
and
inc
les
sub
je
mov
repnz
jb
(bad)
dec
and
cs
jb
xor
ds
adc
or
(bad)
movs
(bad)
cmp
cmp
mov
adc
or
sub
jno
vpshufd
(bad)
jge
bound
xor
jmp
popa
xchg
xor
movs
and
(bad)
push
jns
add
mov
inc
aaa
call
dec
push
xchg
jle
loope
xchg
adc
lahf
js
xchg
sub
push
sub
pop
mov
dec
stos
mov
lahf
ja
mov
and
cli
adc
stc
add
loopne
xlat
xor
xlat
jne
ror
inc
arpl
jge
in
mov
in
sub
lds
cmp
(bad)
imul
mov
jp
in
jecxz
hlt
aas
ret
ret
cmp
cmp
mov
hlt
jp
mov
popf
aaa
xor
jae
retf
push
pop
adc
sub
and
(bad)
jp
mov
outs
aas
sbb
mov
push
scas
(bad)
xchg
pop
(bad)
int
sbb
adc
scas
test
movs
lds
mov
push
test
fld
icebp
adc
xchg
pop
mov
add
mov
jne
je
sbb
cs
jmp
jne
cwde
and
pop
mov
pop
jle
xor
adc
sbb
int
cmp
in
mov
and
jne
sub
sbb
outs
ins
jns
dec
mov
pop
call
or
pop
jecxz
add
ja
xchg
int
cmps
pop
add
or
mov
xchg
push
ja
and
jbe
clc
leave
push
(bad)
push
aas
enter
adc
push
add
mov
pop
sbb
popa
pop
cmc
push
test
add
jo
xchg
push
mov
and
add
sub
cdq
or
mov
mov
inc
lea
mov
push
pop
(bad)
sbb
mul
xchg
and
mov
xor
aam
hlt
ret
shr
or
(bad)
pop
fwait
xlat
dec
pop
dec
mov
aas
je
xor
in
sbb
jno
sar
pop
push
fst
cmp
pop
fst
lods
sbb
aas
fiadd
ss
movs
stc
arpl
pop
or
add
mov
xchg
jno
hlt
fst
mov
pop
fsubp
pop
into
and
cwde
dec
fsub
add
movs
fs
xchg
ss
push
stos
push
fwait
jbe
retf
(bad)
std
sbb
xor
mov
cli
mov
pop
fwait
cmps
jg
retf
pop
mov
pop
mov
jns
xor
xchg
iret
(bad)
mov
je
movs
mov
sbb
mov
pop
hlt
adc
pop
inc
adc
xchg
sbb
pop
ja
jne
pop
arpl
adc
pop
lea
pop
cmp
aaa
jge
xor
imul
add
aam
mov
test
dec
fwait
int3
xor
dec
into
mov
inc
cmp
loopne
dec
outs
daa
(bad)
mov
jmp
inc
lods
ins
cwde
rcl
xchg
rol
call
mov
add
jp
addr16
add
inc
rcr
cmp
test
jle
push
imul
aam
xor
mov
mov
add
push
aad
sub
(bad)
stc
stos
sub
imul
jl
dec
imul
int
mov
mov
pop
mov
stc
fmul
jg
sub
imul
mov
xchg
dec
push
shr
sbb
sbb
movs
aaa
sahf
xchg
sbb
adc
retf
cmps
enter
shr
lods
mov
out
(bad)
mov
in
mov
xlat
xchg
mov
aam
(bad)
jg
jmp
mov
fwait
lahf
or
jmp
dec
inc
out
pop
xchg
xchg
out
scas
jno
call
adc
xchg
iretw
mov
aad
jg
gs
mov
xor
fidiv
xchg
out
mov
inc
lea
mov
std
rol
imul
and
fstp
mov
xlat
sub
dec
push
je
ret
not
popf
adc
in
sub
jle
push
call
add
inc
cdq
test
ins
jb
and
or
xor
scas
leave
adc
inc
add
fadd
clc
push
mov
push
mov
jae
push
xchg
sub
out
hlt
xchg
pop
stos
pop
xchg
jns
sbb
les
adc
sub
iret
test
xchg
sar
movs
ins
inc
mov
xlat
adc
test
cmp
mov
push
xor
scas
pop
pop
xchg
pop
(bad)
out
aas
js
mov
fucomip
push
mov
outs
cmp
and
sar
mov
imul
dec
cli
cmp
jae
mov
lods
outs
shl
shr
adc
leave
outs
out
test
in
arpl
mov
jmp
pop
(bad)
repnz
adc
shl
cli
cmp
cld
fstp
adc
mov
inc
mov
aas
mov
or
aad
jge
cmp
or
fsubr
(bad)
les
ins
mov
xchg
push
not
pop
es
out
and
shr
push
jp
fucomip
pop
pop
cmp
jae
inc
add
mov
dec
adc
in
sub
fs
push
movs
bound
shl
nop
xchg
fs
in
dec
mov
xor
out
aad
lahf
sub
cmp
or
adc
and
push
dec
pusha
call
(bad)
xchg
adc
shl
je
xor
mov
xchg
rcr
in
adc
mov
jmp
or
sbb
cmp
mov
or
outs
mov
push
cmp
in
loopne
mov
jno
xchg
(bad)
(bad)
cwde
repz
int3
jae
bsf
cs
test
cmc
shr
mov
fcom
pop
(bad)
stos
fsubr
aaa
(bad)
cs
les
mov
jbe
jecxz
fstp
push
pop
xchg
pop
pop
popf
add
es
mov
dec
sub
shl
(bad)
mov
je
adc
xor
or
test
mov
cmp
stos
movs
out
out
test
push
dec
aam
repnz
test
or
test
mov
sbb
push
(bad)
call
icebp
mov
call
push
cli
cli
cld
mov
and
out
fbld
scas
inc
les
jae
int
in
movs
shl
cli
mov
pop
cwde
rcl
les
xchg
sub
mov
mov
loope
inc
mov
jp
stos
retf
sub
aad
jae
xchg
mov
and
xchg
push
outs
mov
adc
ret
das
xor
test
add
and
int
sbb
outs
int
ficomp
ja
mov
adc
mov
pop
dec
sub
imul
(bad)
jmp
int3
mov
jg
fbld
inc
lock
aaa
(bad)
jmp
movs
int3
and
jno
adc
mov
dec
psubw
loop
rcr
ror
mov
adc
add
jo
sbb
jg
add
mov
sub
ret
sub
out
sub
fnstsw
add
mov
jp
aam
nop
jle
mov
xchg
or
cdq
popf
sbb
outs
inc
lea
sub
sbb
imul
jae
out
jns
sub
pop
mov
mov
sbb
pop
jp
fwait
retf
retf
movs
iret
xor
mov
daa
jecxz
adc
lahf
sti
outs
mov
and
sub
scas
xchg
push
jl
mov
push
or
loopne
retf
call
push
sqrtps
movs
or
stos
inc
test
pop
inc
and
inc
cmps
sbb
std
inc
(bad)
jae
(bad)
cmp
mov
jae
jo
mov
int3
sub
bound
jmp
sbb
sub
add
shl
mov
jno
repz
cmps
cli
dec
adc
sbb
push
aad
pop
sahf
mov
fisttp
xor
movs
and
loop
movs
cmc
sti
data16
cmp
pusha
(bad)
mov
mov
xchg
mov
out
jns
sub
dec
(bad)
(bad)
pop
call
div
loopne
add
push
jp
das
and
popa
mov
mov
pop
inc
(bad)
sti
and
jne
adc
push
aas
jecxz
daa
cmps
pop
jecxz
lods
das
out
mov
jmp
xchg
jne
test
dec
mov
mov
dec
mov
add
fmul
icebp
scas
mov
dec
loop
int
mov
push
test
xor
shl
jb
aad
in
and
pop
xchg
loope
lahf
movs
jb
pop
int
icebp
sub
es
call
frstor
js
xor
aad
jecxz
adc
popa
jp
pop
mov
jle
jns
stos
daa
xchg
in
sbb
xchg
movs
fmulp
imul
in
popf
push
leave
push
cmp
mov
jmp
sbb
adc
inc
(bad)
pop
mov
clc
jmp
out
jbe
push
or
xor
dec
xor
shr
ja
and
pop
xchg
lods
(bad)
xchg
mov
xor
or
xor
hlt
test
fisttp
in
dec
ror
adc
mov
mov
arpl
test
dec
aam
sub
inc
mov
ss
dec
cwde
sbb
pop
ret
test
jp
fidivr
ret
mov
mov
in
in
in
add
or
and
cmps
or
inc
add
adc
sub
stc
rol
ins
das
xor
aaa
pop
arpl
lahf
adc
pop
inc
je
and
mov
es
fs
stos
dec
push
inc
inc
movs
(bad)
and
push
pop
cmps
dec
push
stos
jns
dec
pop
sbb
das
stos
cmp
jnp
mov
cmp
retf
xchg
fs
lock
xchg
(bad)
cld
ret
pop
iret
aam
jae
inc
call
mov
in
push
push
int
mov
mov
inc
inc
not
fsubr
mov
in
aad
mov
arpl
xor
sub
(bad)
gs
inc
or
popa
ins
and
test
add
aad
mov
cmp
or
cmp
adc
pop
push
sub
outs
mov
or
(bad)
cmp
xchg
inc
or
scas
jmp
out
jp
fadd
aaa
push
mov
add
call
retf
imul
or
mov
xchg
gs
pop
std
add
sahf
retf
aas
sub
mov
mov
or
mov
cli
(bad)
adc
test
xlat
lahf
in
add
js
pop
ret
sbb
mov
test
mov
aad
dec
mov
repnz
lock
(bad)
mov
movs
shr
and
es
cli
cs
xchg
mov
mov
cmc
fcom
fadd
cmp
pop
pop
test
int3
add
jns
ror
jp
sahf
(bad)
clc
xor
pusha
push
mov
dec
adc
mov
out
mov
xchg
cli
shl
(bad)
mov
jmp
add
pushf
xchg
ja
mov
mov
call
pop
and
cwde
sbb
ds
inc
or
and
gs
dec
fcomp
mov
mov
out
sbb
mov
or
xchg
push
outs
mov
dec
mov
mov
iret
cmp
fadd
and
ins
inc
sub
jecxz
mov
and
(bad)
or
fst
into
sbb
out
xor
mov
test
jecxz
ds
aam
adc
jecxz
fwait
bound
clc
mov
mov
mov
loope
repnz
mov
repnz
adc
mov
pusha
sbb
pushf
adc
push
outs
fstp
std
pop
aas
dec
push
mov
fcomp
inc
arpl
jge
(bad)
mov
push
mov
jb
pop
outs
das
fidiv
and
out
cli
mov
mov
fdivr
mov
pushf
adc
dec
mov
cmps
push
fwait
mov
jae
fadd
sar
adc
mov
test
or
loop
inc
sub
xor
xor
into
or
mov
(bad)
xchg
imul
sahf
dec
pop
cs
or
adc
test
pop
add
mov
test
add
jb
mov
jmp
jns
xchg
pop
movs
adc
in
cmp
js
push
mov
mov
cli
movs
push
fcmove
jl
movs
pushf
sar
lea
xchg
stc
xor
mov
fiadd
and
aam
push
(bad)
sbb
push
icebp
and
fwait
mov
fs
pop
xchg
mov
jge
repnz
lods
jge
mov
pop
lock
push
pop
jne
inc
(bad)
lods
xlat
dec
dec
fcmovnbe
popf
inc
aad
mov
nop
mov
xor
test
shl
(bad)
ss
sub
lea
stos
enter
cmp
mov
sbb
and
(bad)
clc
aaa
data16
xchg
test
inc
int3
push
lods
inc
mov
xor
mov
scas
fwait
out
ins
test
inc
fsubp
call
sbb
mov
mov
arpl
jle
inc
rep
jecxz
xchg
xlat
daa
xor
xchg
jle
push
cmp
movs
cmp
jo
inc
std
jecxz
add
jns
iret
mov
cmp
int
adc
dec
mov
jno
push
cmp
push
adc
xchg
pop
mov
or
push
and
imul
pushf
fidivr
adc
mov
fcomp
cmps
in
adc
jno
pop
jg
jo
xchg
jmp
xor
add
in
call
xchg
push
rcl
push
mov
and
cwde
outs
clc
iret
adc
dec
dec
pop
xor
das
pop
loope
pushf
rol
push
pop
retf
mov
sub
jbe
call
xchg
(bad)
jmp
cmp
fstp
cli
adc
mov
mov
cs
pop
dec
push
add
mov
or
push
push
cmps
mov
sub
retf
xor
inc
out
hlt
(bad)
ret
fsub
xor
pop
and
scas
cmp
push
ja
popf
xchg
push
add
dec
add
push
xchg
xor
push
test
mov
scas
push
add
test
or
jae
xor
or
stos
in
cwde
jge
mov
test
mov
scas
add
es
cdq
imul
and
or
das
mov
add
adc
dec
add
fdiv
pop
imul
dec
adc
sbb
lock
repnz
cmp
popf
mov
hlt
jae
mov
xchg
mov
inc
inc
sahf
sub
pop
pop
inc
add
adc
adc
push
xor
mov
xchg
fst
out
out
adc
jg
(bad)
sub
daa
outs
fisubr
arpl
or
add
cmps
test
add
iret
into
inc
es
loop
scas
outs
dec
mov
or
cmp
mov
out
(bad)
scas
cmps
sbb
and
cdq
cmp
rcr
fnsave
sub
daa
retf
cwde
call
xor
scas
and
xchg
pop
push
aas
loop
popf
mul
sbb
jp
retf
push
(bad)
clc
push
xchg
or
and
jmp
aad
xchg
arpl
loope
xchg
jecxz
cmp
cmp
jnp
dec
pop
xor
sbb
lds
ret
pop
cmp
daa
or
sub
mov
aad
jns
sub
mov
mov
popf
sub
movs
mov
jge
dec
mov
ds
mov
sti
inc
sbb
loopne
stos
cmp
sbb
out
ins
imul
mov
out
cmps
(bad)
mov
xor
icebp
hlt
call
fwait
hlt
fist
les
test
ret
ret
push
fidivr
cmc
gs
sbb
test
stos
retf
(bad)
pop
cmp
and
test
enter
gs
jnp
fnstcw
and
ja
add
add
xchg
imul
inc
mov
vpsadbw
ds
lods
mov
inc
adc
(bad)
pop
jb
xchg
inc
in
dec
sub
add
or
jmp
cwde
stos
mov
xor
dec
mov
xchg
jp
mov
nop
and
xchg
jne
icebp
int
jecxz
fdiv
ja
enter
jecxz
inc
cli
dec
push
fwait
test
mov
lods
lock
in
push
std
push
test
add
and
add
mov
cs
js
and
int3
pop
or
mov
mov
push
ins
push
xor
popa
cmc
dec
jbe
push
push
cmp
cmp
dec
loope
fmul
sahf
mov
jne
and
and
aam
push
test
movs
pop
cmp
push
mov
fsub
int3
scas
divps
idiv
or
(bad)
iret
out
mov
femms
mov
ja
arpl
imul
outs
cwde
in
mov
pop
repz
aam
pop
dec
in
fiadd
mov
push
ds
mov
sub
pop
push
adc
push
push
adc
push
xor
les
lods
cli
retf
js
inc
bound
inc
xlat
and
sbb
lods
setle
in
adc
mov
mov
pop
test
pushf
sbb
sbb
(bad)
imul
rcr
cmp
mov
sub
jmp
stc
pop
xor
ficomp
adc
push
and
push
sbb
add
cmp
push
fisubr
jae
inc
xchg
xchg
fsincos
in
inc
push
sbb
sub
(bad)
stos
push
imul
aam
loop
(bad)
fmul
sub
mov
dec
cmp
retf
push
jg
mov
stc
(bad)
xchg
xchg
mov
addr16
femms
add
or
fs
enter
jne
test
mov
mov
jo
jnp
jg
pop
jl
cmp
pop
das
cmovae
push
lods
out
je
mov
inc
xchg
push
adc
mov
push
test
push
sahf
mov
lahf
sbb
lods
mov
mov
daa
loope
sbb
int3
dec
pusha
xor
jg
in
dec
cmp
daa
push
xchg
jmp
mov
cs
xchg
stos
sbb
inc
cmp
pop
test
pushf
pop
je
or
ss
fwait
mov
dec
jg
or
movs
mov
jo
or
in
movs
lahf
xor
clc
xchg
push
adc
dec
mov
push
pop
jle
sub
and
cmp
dec
pop
mov
push
xchg
mov
cmp
ficom
inc
in
in
jnp
and
xchg
test
in
adc
hlt
ins
dec
push
jmp
sbb
xchg
lods
add
js
and
in
pop
mov
icebp
inc
ror
dec
push
bound
lods
imul
jb
adc
jle
sbb
cmp
add
add
test
mov
imul
xor
dec
push
xor
and
aas
dec
push
adc
aad
sub
call
mov
rcr
add
dec
mov
sti
mov
das
scas
inc
mov
mov
pop
push
sbb
movs
in
xor
inc
fist
rcr
adc
pusha
pop
pop
xchg
or
test
push
cmp
test
add
sbb
xchg
jecxz
xchg
loopne
out
mov
stos
js
hlt
xor
fsub
jl
jne
add
mov
add
not
cmp
leave
loopne
sahf
add
and
push
sbb
xchg
and
xchg
push
cmc
pop
repz
and
jmp
or
jne
xor
fbstp
jne
js
and
ret
pop
mov
sub
imul
movs
movs
cmp
adc
fsub
push
mov
pop
clc
fbstp
cmp
iret
cs
into
inc
retf
xchg
cmp
cmps
ds
xchg
lahf
int3
out
cwde
push
adc
(bad)
(bad)
ds
xchg
cmp
mov
sbb
fistp
mov
xchg
xlat
cwde
arpl
sub
xor
add
icebp
add
adc
cmc
pop
es
push
xor
(bad)
sar
mov
push
mov
pop
mov
(bad)
cmc
fldln2
in
cmps
adc
cmp
mov
jle
aam
out
test
sbb
sub
mov
bound
bound
imul
add
jmp
cmp
push
sbb
loope
inc
xor
dec
ret
mov
and
movs
(bad)
aas
sub
movs
fwait
and
push
idiv
push
ja
js
daa
mov
sbb
jp
das
adc
ss
cmp
fmul
fsub
pop
fist
mov
push
mov
or
(bad)
sbb
out
pop
rol
xchg
lock
mov
inc
xchg
pop
and
cmps
daa
idiv
jne
adc
imul
cli
out
dec
das
jle
jmp
hlt
cmp
jp
xchg
add
addr16
push
sbb
shl
xlat
mov
xor
mov
les
and
imul
daa
pushf
rol
or
sub
neg
jno
cmp
add
fnstsw
inc
sub
push
js
movs
(bad)
dec
imul
int3
sub
call
repz
or
jg
sub
pop
dec
sbb
outs
add
repz
mov
dec
or
mov
cmp
inc
cld
pop
lsl
mov
cmp
cmp
stos
fmul
icebp
in
imul
test
push
lods
mov
test
(bad)
std
ins
add
jae
inc
fst
test
push
cmp
jp
les
jns
shl
mov
or
jl
inc
push
sbb
sub
jmp
pop
scas
dec
lods
(bad)
outs
jae
aam
push
hlt
sub
pop
in
js
stos
and
pop
cmp
pop
and
dec
test
mov
sub
loope
mov
ss
mov
cmc
jmp
lea
sete
xor
cmp
sti
(bad)
jno
sbb
mov
xor
nop
mov
dec
cdq
repz
push
out
push
pusha
out
stc
loopne
mov
jbe
mov
mul
pop
shl
dec
jle
test
xor
cmc
or
and
add
adc
fld
sbb
shl
mov
jmp
movs
adc
mov
sbb
sub
cs
iret
sbb
popa
sub
(bad)
jno
adc
aas
and
sbb
(bad)
stos
jl
(bad)
push
fbstp
and
dec
fdivrp
movs
adc
(bad)
and
dec
cld
cmc
push
fwait
jp
pop
(bad)
movs
push
adc
jo
bound
push
lods
loope
(bad)
jge
cmp
in
fadd
rcl
xor
xor
sub
pusha
mov
add
ret
mov
call
cmps
outs
mul
fwait
push
jb
xor
inc
fmul
xor
mov
lods
add
test
bnd
test
sub
sbb
xlat
xor
nop
jle
out
jmp
(bad)
shr
fist
dec
mov
mov
push
and
xlat
and
nop
xchg
sbb
icebp
inc
repz
pop
and
cmps
push
inc
push
mov
and
or
adc
inc
or
retf
xchg
sub
std
adc
jns
xor
cdq
or
adc
add
dec
shr
or
(bad)
jne
mov
outs
sub
jl
pop
mov
out
sbb
inc
lock
push
xor
xor
(bad)
cmps
adc
and
stos
pop
iret
cmc
arpl
test
mov
popf
cmc
cs
mov
xchg
xor
out
les
inc
inc
xchg
inc
ret
sbb
xor
push
xchg
scas
jbe
or
xor
imul
clc
sbb
xchg
xchg
pop
gs
dec
jle
xchg
call
scas
mov
jnp
and
mov
cmp
add
mov
xchg
and
adc
jmp
adc
enter
dec
sahf
push
pop
xor
xor
cmp
and
sub
cmp
gs
mov
jl
sbb
fs
shr
(bad)
fsubr
mov
and
aam
ror
jecxz
xchg
inc
cmp
pop
or
pop
test
fs
cmps
inc
fidiv
mov
call
push
dec
or
xor
and
or
mov
repz
bnd
cs
sub
ins
fst
mov
xor
repz
mov
adc
sbb
xor
dec
scas
dec
int
stos
ror
dec
mov
repnz
rcr
in
sub
out
xchg
sub
xchg
adc
pop
cmp
out
retf
mov
xchg
movs
jg
arpl
adc
cmp
sbb
fcom
ret
cmps
mov
data16
push
(bad)
mov
dec
repz
add
push
pop
in
out
sub
loop
cwde
xchg
inc
or
cmps
xchg
out
fisttp
(bad)
cmc
bound
push
xchg
add
stos
aas
cld
out
jo
or
jbe
mov
xchg
xor
scas
fwait
daa
push
push
push
int3
icebp
dec
mov
push
movlps
sbb
int
leave
cmc
add
dec
icebp
aad
frstpm(287
xchg
xchg
ret
retf
jmp
dec
jl
push
test
push
mov
mov
out
gs
int
push
loope
hlt
xor
adc
lods
loop
arpl
mov
and
push
mov
inc
mov
cs
or
imul
outs
push
in
loopne
popa
push
adc
(bad)
in
clc
jmp
dec
sahf
sbb
clc
adc
pop
test
jns
or
xor
jo
cmp
in
jb
xchg
mov
ja
and
lock
dec
mov
and
xor
cmps
fsub
xchg
inc
xor
sub
dec
mov
inc
movs
cdq
ret
das
popf
fs
xor
movs
sub
dec
adc
stos
pop
mov
lods
jb
add
mov
mov
push
add
fwait
(bad)
arpl
pop
dec
daa
xor
jae
repnz
(bad)
inc
xor
sbb
fcom
loop
sbb
pop
xchg
fbstp
sub
mov
cmp
jle
or
mov
inc
xlat
movs
xor
xor
push
cmp
cmp
xor
scas
mov
shl
mov
ja
mov
jmp
cmp
add
adc
dec
loop
mov
mov
imul
inc
mov
fs
fld
std
lds
or
pop
fs
xchg
mov
push
ja
je
xchg
rol
sbb
jo
mov
(bad)
(bad)
or
sahf
or
xchg
mov
push
imul
inc
push
dec
and
dec
xlat
mov
mov
sbb
xchg
xchg
out
aad
xchg
shl
mov
mul
lods
adc
pop
mov
(bad)
mov
sub
das
dec
pop
push
enter
cmps
mov
mov
or
pop
mov
sbb
sub
jns
sbb
mov
inc
fst
mov
shr
fistp
or
mov
sub
push
push
sub
add
and
in
mov
pop
mov
lods
in
test
out
dec
jnp
mov
xor
test
mov
ja
jnp
and
out
jbe
push
dec
outs
inc
mov
hlt
xor
ficomp
shl
cdq
xchg
mov
adc
scas
adc
add
cmps
cmp
test
xor
or
push
pop
cwde
cmps
into
inc
dec
and
lods
bound
mov
and
scas
mov
push
jns
fnstsw
into
rol
mov
pusha
sbb
out
repz
mov
add
ret
inc
and
fnstcw
push
je
mov
dec
aam
imul
adc
adc
and
aad
inc
fsubr
push
dec
fwait
cmp
adc
rcl
scas
jg
sar
sahf
retf
mov
mov
inc
int
iret
imul
or
ret
stc
mov
das
push
outs
add
popw
dec
sbb
ins
cli
push
or
dec
add
stos
lods
or
inc
xchg
dec
push
adc
fld
adc
imul
repz
int3
cdq
mov
xchg
(bad)
or
mov
add
pop
std
pop
jb
sbb
loopne
jle
and
movs
(bad)
pop
lock
cmp
data16
push
daa
aam
popf
movs
pushf
in
cmp
bound
in
sbb
add
mov
(bad)
(bad)
push
pusha
jl
add
jns
(bad)
aam
sub
inc
ret
test
sbb
dec
pop
(bad)
ror
shl
test
pop
loopne
sub
xchg
dec
and
inc
or
or
or
das
lahf
dec
jmp
adc
rcl
jge
mov
and
call
aad
ja
adc
retf
mov
movs
push
aaa
je
fs
pop
fild
add
or
(bad)
call
test
or
xchg
aaa
test
lea
aaa
add
sbb
test
mov
ret
xchg
(bad)
adc
leave
cmp
xlat
pop
nop
dec
add
push
adc
jecxz
fadd
xchg
inc
sti
jns
call
es
ss
cld
mov
xchg
in
inc
push
(bad)
xor
aad
xchg
(bad)
rcr
pop
xchg
shl
mov
gs
pop
fstp
mov
inc
mov
cwde
cmp
loopne
rcr
and
call
mov
mov
mov
dec
sub
push
dec
cs
pop
mov
pop
cmp
pop
into
rcr
add
mov
sbb
lock
fs
test
shl
xchg
or
scas
push
mov
cmp
mov
in
mov
add
xchg
bound
out
out
xchg
and
scas
inc
cmc
aad
dec
addr16
repnz
mov
ins
cmp
xchg
pop
(bad)
or
(bad)
push
test
sub
dec
pop
enter
inc
xlat
xlat
mov
ins
and
mov
sub
lock
adc
sbb
bound
jmp
sbb
stc
sbb
ins
imul
lds
test
or
dec
test
outs
or
stc
scas
call
xchg
gs
xchg
add
fwait
stos
or
push
jl
dec
sub
sbb
push
lds
and
or
je
xor
adc
adc
sub
inc
mov
mov
nop
or
mov
ds
lods
clc
or
fnstcw
xchg
adc
cwde
dec
ror
aas
std
call
fmul
mov
xchg
xor
fcom
fsub
pop
ins
adc
aaa
sub
inc
inc
jmp
push
cmova
and
mov
enter
ins
stos
adc
jmp
sbb
jge
test
clc
dec
and
xchg
jne
loope
mov
xchg
push
loop
inc
sbb
daa
rcr
out
inc
pop
lea
xchg
inc
stos
xor
sbb
adc
mov
jmp
popa
movs
(bad)
mov
push
fist
iret
lock
jl
cld
jmp
test
fstp
shl
mov
addr16
dec
add
movs
(bad)
cmp
jmp
jnp
sbb
or
push
xlat
pop
clc
retf
jl
push
es
push
or
data16
cmp
or
and
wbinvd
lds
in
cmp
iret
sub
inc
adc
cli
jmp
push
push
jl
push
push
ds
cli
mov
js
shr
clc
shr
cld
into
ins
(bad)
jnp
leave
inc
dec
ins
xor
pop
addr16
test
mov
mov
jecxz
cdq
sar
xor
pusha
arpl
adc
jb
add
push
div
mov
lahf
inc
jmp
xlat
jae
push
loop
es
js
xor
punpckhdq
cmp
push
or
gs
xchg
jno
add
jo
push
popf
pop
clc
inc
shl
sbb
sbb
pusha
fxch
addr16
and
jo
push
mov
adc
push
jo
(bad)
and
test
loope
jmp
lods
sbb
sub
mov
mov
jo
test
ret
sti
xchg
sti
dec
dec
ret
stc
shr
out
fmul
sub
movs
pop
cmp
inc
ja
sub
cli
pmuludq
bound
cmp
cmp
ds
movs
mov
movs
dec
ss
retf
lock
xor
cld
cmp
add
cmp
in
jg
scas
add
push
int
pop
jecxz
mov
add
xor
cs
iret
push
adc
mov
addr16
jge
cmps
add
inc
call
add
push
adc
aaa
and
daa
stc
in
mov
mov
ds
mov
daa
hlt
add
fidivr
idiv
cmc
out
fadd
xor
add
and
xchg
or
aam
(bad)
in
sub
imul
mov
dec
pop
(bad)
hlt
loopne
pop
xchg
or
xchg
inc
call
dec
inc
mov
mov
adc
retf
int
mov
aas
aas
jmp
cmps
shr
lahf
shr
lods
cmps
mov
in
lahf
(bad)
popa
mov
fld
cmp
push
icebp
pop
jmp
jl
popf
adc
ror
and
shr
pop
mov
clc
or
pop
jne
lods
call
aad
lahf
mov
imul
adc
js
xchg
mov
jl
jo
jbe
call
mov
retf
cmps
cmp
lahf
mov
dec
fwait
imul
jecxz
repnz
jmp
push
dec
call
add
jecxz
test
and
nop
sub
inc
xor
and
add
cmps
out
ds
pop
mov
and
mov
popa
xchg
sbb
pusha
mov
jne
cmp
mov
jmp
pop
mov
mov
jns
shl
cmp
(bad)
xchg
pop
loop
dec
and
xchg
test
das
div
mov
popa
jp
sti
(bad)
es
jbe
fisubr
adc
dec
jg
mov
dec
mov
cmp
mov
and
mov
scas
shl
jmp
push
mov
lea
xor
push
sbb
xchg
into
mov
push
(bad)
fdivr
in
imul
pop
and
mov
cmp
fmul
inc
or
ja
mov
xchg
aad
in
pop
ins
stos
dec
(bad)
aam
dec
mov
ds
test
call
pusha
xchg
fmul
stos
cmp
push
add
xchg
push
mov
and
add
adc
sbb
movs
cmp
inc
fistp
adc
pop
dec
xor
icebp
out
jg
pop
popa
xor
mov
loop
mov
fs
movs
(bad)
je
xor
jge
cmp
gs
xor
pusha
adc
sti
pop
or
inc
pop
mov
xchg
sti
adc
stos
xchg
xor
(bad)
mov
cld
imul
fimul
iret
fwait
inc
pop
je
iret
mov
test
lods
cmp
enter
push
test
sbb
es
add
sub
les
push
sbb
mov
into
jle
xchg
or
jae
pop
mov
ret
mov
mov
add
aam
nop
dec
loope
lods
dec
mov
xlat
jmp
lds
jo
push
pop
xor
mov
mov
pop
ins
mov
imul
add
retf
cli
cmc
call
hlt
mov
aad
enter
mov
int
es
push
in
push
ds
test
jecxz
push
push
sbb
mov
or
call
cmps
and
fcomp
push
or
out
aad
arpl
out
sub
sahf
test
jge
mov
push
sub
mov
adc
sub
pop
sbb
enter
in
dec
or
repnz
lods
ret
dec
jl
inc
(bad)
and
cmp
add
xchg
not
loop
mov
adc
call
inc
inc
shl
push
mov
out
daa
cmc
jbe
cmp
leave
ror
psubq
call
mov
xchg
pop
cmp
and
movs
rcr
pop
in
lods
(bad)
adc
rol
arpl
and
mov
or
test
cmps
ficomp
adc
mov
and
mov
in
mov
and
loope
daa
popa
push
cmp
pop
and
rcr
shr
loop
jns
push
call
ror
into
push
pop
jg
ins
push
lods
call
out
xor
pop
call
dec
retf
sbb
lock
xor
out
push
jns
push
dec
dec
dec
jae
push
loopne
int
push
xor
ror
jmp
adc
mov
mov
in
xchg
jo
gs
mov
xor
enter
mov
or
jne
jo
cmps
pop
retf
(bad)
xchg
push
cmp
shr
jp
call
xchg
sti
push
das
ins
pop
rcl
xor
dec
sbb
lock
aaa
popf
and
cmp
movs
in
cmps
call
pop
ja
dec
dec
xor
movs
rol
xchg
daa
adc
enter
and
lods
ins
inc
mov
fidivr
push
dec
jecxz
xor
xchg
lea
dec
fwait
in
push
popa
ds
push
scas
in
outs
or
call
xchg
movs
loope
push
pop
mov
xchg
repnz
(bad)
jmp
mov
push
dec
int
sub
push
jbe
adc
mov
add
aas
and
cdq
xchg
add
pop
adc
sbb
ret
jb
push
mov
and
pop
inc
xchg
xchg
sbb
call
fwait
mov
inc
dec
xchg
jae
(bad)
adc
cmps
ror
loop
sbb
test
repnz
clc
or
sti
sbb
test
sbb
mov
adc
dec
retf
cwde
ds
mov
sub
mov
cmps
xchg
out
and
jae
inc
xor
test
mov
pop
out
shl
pusha
or
shl
and
call
push
jno
lock
inc
pop
mov
jo
dec
outs
cmps
or
or
mov
adc
push
enter
nop
cmp
mov
lea
jno
cmp
or
sub
ds
cmp
test
or
sub
(bad)
jl
out
imul
add
and
xchg
adc
adc
jmp
mov
sti
loopne
les
mov
pop
push
inc
pop
mov
mov
movs
jnp
mov
inc
jb
lock
jnp
ret
jp
ds
ja
xor
shl
pop
pop
stc
push
pop
outs
ror
sub
xor
cwde
push
imul
stos
popf
xchg
and
inc
add
les
dec
sbb
call
mov
ins
cli
fcom
(bad)
sbb
outs
or
xchg
and
and
mov
cmp
and
fmul
jb
cmp
call
ins
lods
xor
or
adc
dec
in
out
scas
mov
xor
jmp
sbb
out
(bad)
std
int
inc
jmp
fcomp
stc
inc
or
lds
rol
test
loope
call
xchg
add
fs
xor
sub
push
out
xor
retf
add
outs
xchg
cmp
aad
(bad)
loop
sub
lea
pop
movs
inc
add
stos
daa
xchg
jno
nop
jnp
sar
sub
in
mov
mov
pop
imul
cmp
mov
pop
mov
xchg
and
push
mov
movs
jnp
mov
pop
and
xchg
mov
mov
adc
dec
pop
and
std
popa
call
(bad)
jne
loope
loopne
test
xchg
fidivr
nop
shr
ins
js
enter
push
and
mov
int
mov
sub
jns
(bad)
stos
leave
scas
fwait
dec
les
inc
cld
sub
idiv
add
adc
call
mov
dec
mov
movs
add
es
xchg
inc
add
xchg
or
aam
or
mov
rcl
aad
lahf
cmp
and
inc
sbb
arpl
xor
fidivr
dec
into
into
ins
(bad)
fadd
adc
fwait
push
xor
shl
dec
repz
imul
and
push
sbb
lahf
dec
xor
mov
jnp
hlt
and
cld
retf
shl
aaa
or
ins
mov
mov
dec
std
push
in
add
(bad)
xchg
mov
mov
push
repz
mov
cmps
scas
mov
cli
and
add
loopne
fs
fnstenv
xchg
iret
sub
aam
pop
pop
xchg
retf
add
mov
fisttp
and
ds
movs
aaa
fnsave
jns
sub
sub
test
pop
test
js
cmp
pop
adc
pusha
sbb
rcl
or
pop
clc
ins
sub
stc
mov
cmps
xor
xchg
xlat
data16
mov
push
mov
jmp
pop
or
adc
jmp
pop
inc
test
jl
loop
mov
std
out
xor
ins
mov
sti
retf
(bad)
test
lea
imul
mov
mov
and
mov
gs
dec
cmp
stc
mov
mov
data16
xor
cdq
jg
das
cmps
inc
adc
fsubr
push
in
retf
and
fnstcw
addr16
(bad)
cmp
sub
push
xor
and
add
clc
js
les
adc
mov
out
lds
arpl
inc
test
cli
and
push
imul
rcl
cmps
mov
push
test
xor
mov
jb
dec
push
dec
xchg
call
cmps
mov
je
fmul
jne
cmp
das
sbb
stos
leave
scas
cs
aam
ficomp
mov
adc
xor
retf
and
jecxz
and
or
mov
push
cmps
popf
das
push
daa
jnp
movs
cmp
sub
nop
je
int
mov
stos
ds
packssdw
lahf
fst
dec
or
mov
xor
(bad)
fld
jle
cwde
add
add
add
pop
ss
cmp
mov
push
sti
movs
or
dec
inc
inc
inc
cdq
mov
movs
mov
rcr
or
clc
cmp
sti
mov
push
iret
aam
in
stos
dec
mov
outs
fsubr
push
xchg
lods
jg
cmp
pop
sbb
cmp
mov
cs
fist
retf
loop
push
loopne
ret
jmp
cdq
and
int
outs
ret
cmp
pop
call
fadd
jne
int3
mov
pushf
or
in
adc
pusha
sub
jae
dec
repz
test
lock
lock
ins
mov
loop
lea
xor
das
cmps
in
push
aad
clc
add
mul
outs
push
mov
push
sub
fisub
xchg
(bad)
sbb
enter
push
add
lds
retf
(bad)
xor
or
pop
add
pusha
or
pushf
jmp
sbb
push
adc
jb
push
int3
out
ins
div
jle
or
ja
sbb
int
xor
mov
jg
mov
inc
sub
sub
icebp
dec
in
aad
xchg
or
inc
imul
retf
ss
int3
int3
call
lahf
lods
fbstp
xor
aam
jl
mov
dec
adc
fnsave
retf
xadd
mov
cli
add
mov
push
mov
jne
ins
mov
inc
call
mov
mov
int
sbb
not
sahf
cmps
stc
scas
add
jg
mov
fwait
in
sub
dec
out
int3
rcl
outs
mov
or
cmp
test
jg
arpl
dec
pushf
cmp
push
jmp
sub
cmc
sbb
imul
or
je
mov
lods
pop
or
sbb
xchg
int
pop
cmp
cli
push
pop
sub
neg
bound
pusha
and
xchg
xchg
je
and
test
dec
mov
xchg
bound
cmp
inc
mov
mov
stc
xchg
cwde
cmp
fnstsw
mov
in
test
fist
xchg
mov
jo
lds
cmp
jge
stos
movs
mov
dec
(bad)
cmp
adc
and
mov
int3
sub
push
movs
mov
xchg
sbb
gs
es
mov
fcmovnb
xor
in
xor
shl
mov
cmc
outs
enter
arpl
std
mov
mov
xchg
repnz
(bad)
dec
and
cdq
add
dec
nop
clc
jle
cmp
aad
retf
jg
sub
repnz
push
xchg
adc
and
jmp
lea
add
stc
mov
mov
imul
xor
dec
jl
daa
ss
pusha
jne
inc
mov
or
inc
mov
mov
mov
cli
adc
leave
push
scas
dec
frstor
add
sub
lods
popa
inc
dec
jae
scas
and
fidivr
and
jns
hlt
stc
jae
in
mov
pop
fwait
outs
cli
hlt
jle
xor
scas
leave
(bad)
rcr
sub
inc
inc
xchg
sub
or
jp
mov
pop
pop
icebp
jb
mov
pop
js
sub
and
lods
inc
mov
xor
or
mov
adc
sub
aas
gs
sbb
inc
push
dec
rcr
xor
and
add
cwde
sbb
lahf
outs
pop
sbb
xor
mov
pop
cmp
inc
mov
leave
fisttp
mov
mov
jmp
cmp
test
jbe
xlat
mov
jb
lea
or
(bad)
scas
jo
jg
xchg
stos
js
stos
pop
mov
fcomp
and
dec
mov
out
pop
pop
stos
imul
and
jbe
inc
lods
xor
sub
fadd
ins
icebp
and
sbb
xchg
jne
fsubr
jns
out
cmps
inc
popa
inc
mov
cmp
sbb
push
pop
lds
cmp
dec
fwait
inc
(bad)
aas
mov
in
sub
jb
push
adc
or
hlt
fsub
je
(bad)
into
mov
pop
push
mov
xchg
clc
inc
retf
std
push
mov
out
sbb
jl
int3
sbb
adc
sub
jne
mov
jl
push
jo
xchg
or
cmp
inc
or
sbb
(bad)
imul
(bad)
dec
and
and
pop
and
clc
out
sahf
ficomp
inc
lds
xor
adc
popa
mov
mov
(bad)
in
hlt
packsswb
mov
push
retf
aaa
lahf
xor
or
sub
aam
in
push
mov
add
(bad)
mov
dec
sbb
xor
push
xchg
add
dec
in
add
ja
pop
div
clc
xor
loopne
jno
push
sar
sbb
dec
out
leave
in
test
dec
fadd
dec
sbb
pusha
sbb
shr
out
mov
lock
out
xchg
imul
mov
pop
dec
and
push
neg
push
mov
ret
mov
rcl
push
mov
lods
cmp
idiv
aad
jnp
adc
dec
fidivr
cli
std
jne
mov
push
fld
in
adc
and
mov
xchg
cwde
rcl
adc
rcr
stos
mov
jecxz
or
xchg
mov
(bad)
xchg
xchg
jne
gs
lods
les
ret
jno
or
dec
popf
sub
mov
test
call
xchg
jae
inc
repnz
cs
nop
es
mov
retf
xchg
or
(bad)
and
inc
lods
out
lahf
push
bound
cs
inc
rcl
xlat
pop
inc
adc
mov
push
test
add
popa
out
fld
je
and
cwde
xchg
lahf
adc
div
xor
dec
jb
fcom
push
adc
rcl
and
jg
and
ret
adc
xor
in
sar
jbe
call
fld
nop
repz
das
rol
push
sub
stos
popf
sub
jl
push
mov
ret
xor
jns
add
icebp
xchg
or
jecxz
(bad)
int
nop
clc
mov
xchg
in
or
cld
test
or
idiv
dec
lock
lock
les
out
out
xchg
(bad)
cmc
xor
test
cmps
enter
and
sub
ss
push
daa
push
fwait
or
data16
sub
sub
xor
imul
pop
in
scas
xor
test
(bad)
test
pop
push
sbb
in
dec
bound
push
adc
js
mov
fwait
sti
cmp
cmc
inc
xchg
fs
lods
jbe
cld
sub
pop
(bad)
ds
mov
mov
xor
outs
retf
sbb
push
imul
ins
or
not
dec
loope
xor
jne
bound
(bad)
sar
dec
(bad)
int
jne
and
jmp
xchg
in
pop
pop
mov
rol
inc
mov
xor
push
inc
sub
mov
push
or
sbb
movs
pop
jo
or
es
xor
mov
aad
jmp
push
and
daa
es
and
retf
sub
test
push
pop
les
fwait
hlt
inc
mov
rol
pop
cmp
and
call
call
pop
push
shl
or
sub
shl
mov
push
add
retf
mov
cs
fucomi
and
int3
mov
lahf
(bad)
push
out
dec
xchg
cmp
in
adc
mov
imul
das
lods
sbb
aam
or
ds
push
add
in
jmp
and
pop
fiadd
ds
push
cwde
push
(bad)
sub
xchg
xchg
xchg
aad
int3
cmp
mov
add
inc
xor
push
dec
adc
mov
xchg
mov
and
add
mov
mov
cld
adc
(bad)
push
popf
lea
loopne
out
pop
cmps
xchg
nop
inc
xchg
cmp
(bad)
add
dec
mov
cmc
(bad)
xchg
movs
lds
mov
adc
cmp
ss
push
mov
mov
cwde
cs
push
mov
and
movs
jno
sub
stos
jl
(bad)
xlat
int
mov
(bad)
adc
iret
jns
pop
fidivr
mov
xchg
or
ret
push
test
fucomi
je
dec
das
test
in
ffree
and
repnz
and
lods
test
sar
jne
push
je
and
not
rep
nop
into
and
xchg
aam
jns
in
cmp
mov
fidivr
aas
mov
dec
push
into
rcr
jecxz
nop
fucomp
push
outs
mov
arpl
dec
add
push
sub
mov
pop
out
daa
out
dec
loopne
fwait
pop
test
xchg
sub
shl
fsub
les
jns
aam
ss
cmp
mov
mov
sub
lds
bound
lock
fcomip
clc
loope
push
adc
xchg
jbe
mov
mov
jae
mov
dec
fwait
adc
ja
push
mov
pop
aas
sahf
and
pop
(bad)
sbb
je
cmp
(bad)
cld
sbb
in
cmp
cmp
jnp
pusha
clc
add
sbb
lock
out
jbe
and
and
pop
cmc
or
dec
fwait
mov
sbb
add
jmp
xor
stc
(bad)
or
push
sbb
and
stos
cmps
xlat
arpl
cmp
push
(bad)
inc
hlt
dec
mov
ins
daa
pusha
mov
das
and
dec
shr
das
leave
aas
xor
push
(bad)
loopne
inc
xchg
and
cmps
fimul
push
lods
(bad)
jmp
xor
mov
(bad)
retf
clc
adc
(bad)
sub
ss
test
mov
jbe
adc
pop
test
xor
aas
fwait
pop
retf
pushf
les
dec
in
sbb
xlat
je
or
int
shl
popa
jmp
fs
mov
aas
addr16
lock
jo
movs
leave
xchg
adc
mov
dec
cmc
ret
sti
je
add
test
dec
sbb
in
mov
cmps
addr16
aad
pop
adc
adc
and
jecxz
fild
pop
sub
scas
(bad)
gs
int3
ja
int3
lds
pop
stc
pop
cs
imul
adc
jg
bound
scas
sub
lods
sub
jb
adc
push
sbb
mov
inc
sbb
bound
pop
sbb
cmp
push
sub
xor
xchg
aad
and
add
cmps
mov
xchg
cmp
or
push
dec
movs
frstor
jmp
aad
and
iret
(bad)
into
jmp
sub
xchg
mov
ss
xor
sub
dec
out
sbb
mov
cmp
stc
push
jmp
pop
cli
int3
inc
mov
(bad)
lods
cwde
int
or
sub
xchg
jmp
(bad)
mov
ror
ret
mov
clc
jo
adc
cmp
and
mov
fs
push
pop
bound
dec
popf
rcl
xsavec
sub
add
lahf
dec
jmp
daa
aad
(bad)
jge
lods
gs
xchg
cmps
popf
xchg
retf
sub
and
lock
aas
nop
xchg
lods
xchg
js
iret
arpl
mov
mov
(bad)
(bad)
sub
and
mov
retf
loope
or
dec
jp
sub
xchg
jl
lea
mov
aad
and
push
rol
pusha
loopne
jae
mov
dec
mov
dec
xchg
aaa
outs
jecxz
pop
leave
ficomp
lods
xchg
mov
push
push
xchg
xor
(bad)
int3
cmc
loope
inc
xchg
or
es
imul
jle
mov
outs
jecxz
fisub
imul
outs
push
retf
xchg
ret
mov
pushf
mov
add
popa
push
rcr
(bad)
(bad)
sub
rcl
cmc
xor
out
fwait
les
adc
cmp
adc
imul
inc
xchg
mov
xchg
add
push
sti
mov
fcomp
xchg
outs
dec
call
adc
sbb
aas
ret
icebp
jno
shl
or
pop
call
xor
cmps
(bad)
cmp
add
sar
cs
dec
call
jmp
mov
or
inc
jge
enter
sbb
call
retf
ss
mov
(bad)
bnd
jle
scas
in
dec
je
push
pushf
or
imul
sbb
mov
in
push
call
in
jle
dec
mov
hlt
dec
std
cmp
addr16
retf
push
sbb
jecxz
adc
rcr
pop
jo
xchg
mov
jns
test
gs
dec
test
push
mov
push
cmp
enter
sub
xchg
jmp
lods
or
sahf
addr16
loopne
into
cwde
ja
mov
std
iret
leave
pop
pop
mov
and
cmp
int3
xor
mov
adc
fcom
(bad)
aas
fsubr
mov
(bad)
jns
je
cmp
jmp
mov
adc
out
sub
bound
sti
neg
sub
fldenv
mov
repz
sbb
add
ss
cli
jecxz
or
xor
retf
das
(bad)
mov
hlt
push
std
ret
ret
jno
rol
enter
jmp
jmp
jbe
xchg
cwde
adc
imul
lock
push
ss
mov
or
adc
and
push
cmps
clc
jmp
inc
call
xor
test
jne
imul
imul
nop
clc
mov
cmp
sbb
pop
inc
fstp
cld
cs
inc
and
and
mov
cld
(bad)
(bad)
push
inc
or
add
jne
jne
icebp
rcr
daa
retf
dec
and
mov
sti
lods
mov
mov
lods
das
in
bound
push
dec
(bad)
xor
mov
add
ins
jp
sahf
push
mov
aaa
scas
lahf
push
in
ja
sahf
cmp
mov
pusha
add
jp
loope
repz
lods
jb
in
jmp
push
jbe
cmp
ret
jg
div
mov
push
nop
push
fstp
jno
dec
arpl
xchg
test
out
pushf
or
xor
and
in
xchg
ret
test
daa
mov
pop
das
into
das
rcl
(bad)
in
jmp
test
jae
xchg
outs
push
mov
sbb
lahf
stc
mov
pushf
push
mov
mov
mov
aad
cmp
(bad)
scas
add
push
push
das
xor
dec
jne
dec
sbb
test
inc
fisubr
sub
sub
mov
cmp
pusha
cmp
pop
cli
and
sub
fistp
(bad)
jg
inc
or
pop
mov
sbb
sub
repz
fwait
jp
fist
pusha
pop
jl
ds
js
mov
inc
mov
push
(bad)
call
in
or
inc
(bad)
repz
inc
mov
dec
push
xor
clc
or
push
push
bound
sbb
or
pop
icebp
js
jno
pop
xor
test
popf
cmp
in
mov
push
(bad)
sbb
ja
ror
(bad)
xlat
ins
push
jmp
pop
(bad)
stc
dec
push
jp
popf
retf
dec
cmps
dec
mov
cmc
and
jle
bt
xchg
les
dec
inc
enter
(bad)
adc
pop
fwait
dec
add
jne
outs
or
push
and
loope
cmps
sub
ds
cmc
mov
jle
out
je
sub
sub
mov
fdiv
test
and
test
rcl
jb
sar
(bad)
adc
jne
dec
(bad)
std
dec
iret
dec
fld
call
inc
or
es
pop
call
aas
(bad)
(bad)
push
icebp
cs
add
jp
js
fcmovne
sti
cmps
jp
cmp
ins
mov
arpl
inc
sbb
es
add
repz
call
jle
cmp
xor
fld
es
lods
xchg
add
mov
ror
xchg
ret
cmp
or
ins
adc
call
shl
xlat
pop
mov
jmp
xchg
in
in
jmp
(bad)
retf
push
xchg
iret
xlat
jl
or
dec
pop
loope
sbb
add
data16
stos
xchg
and
or
(bad)
fld
vhsubps
push
cdq
ret
cwde
(bad)
mov
cli
jae
xchg
push
add
mov
fs
fcomp
(bad)
call
cmc
jl
lea
mov
xchg
sub
test
lahf
push
in
push
test
add
outs
pop
cmp
mov
outs
inc
pushf
jne
push
clc
sub
add
sub
jmp
mov
xchg
cmps
jmp
sahf
enter
push
fidivr
stos
into
sub
ins
out
inc
hlt
or
xor
fsub
xor
xor
dec
mov
scas
movs
cli
xor
dec
out
jle
cmp
gs
jbe
in
ja
dec
adc
inc
add
imul
in
cmps
sub
push
test
cdq
sub
scas
mov
sub
mov
dec
(bad)
scas
dec
and
xchg
loop
inc
test
(bad)
fimul
dec
cmc
jmp
add
mov
stos
pop
pop
push
jnp
in
mov
fidivr
inc
adc
sbb
xor
sahf
cmp
xor
mov
jb
std
fs
mov
add
std
data16
xor
xchg
adc
cmp
call
fdiv
jo
and
pop
rol
adc
int3
mov
cmc
out
hlt
repnz
das
and
js
outs
dec
inc
cmp
and
out
shl
inc
or
int3
call
adc
les
sub
inc
sub
sub
in
(bad)
xor
jne
adc
cld
sti
les
lds
ins
sbb
pop
inc
lds
repnz
sbb
loope
pop
fwait
mov
push
push
lods
dec
adc
cmp
ja
or
sbb
enter
pusha
mov
jp
mov
push
jbe
mov
fcmovnbe
scas
sub
cmp
fldcw
mov
inc
enter
mov
jge
sahf
xchg
push
retf
(bad)
push
(bad)
inc
push
lods
loopne
xchg
movs
loope
ret
les
xchg
mov
dec
lea
aas
fsubr
cmp
ss
sbb
ins
leave
rol
mov
outs
sub
repnz
cwde
mov
and
or
stos
cmp
mov
add
js
fsubr
out
not
fucomi
dec
sub
inc
arpl
movs
mov
mov
cld
and
add
fnstcw
jbe
pop
add
fs
(bad)
in
cmp
ret
sbb
cmp
cmp
jb
popa
test
inc
(bad)
dec
test
mov
sbb
ds
xor
cmps
repnz
shl
pushf
aad
into
aaa
adc
cli
push
mov
out
jb
and
imul
or
cmps
stos
add
pusha
imul
fisttp
mov
or
in
nop
mov
cmps
mov
pop
mov
call
cmp
imul
xchg
fldenv
scas
push
add
xlat
sub
mov
add
pusha
ficomp
cdq
pop
or
cmp
mov
rcr
dec
fisubr
leave
sbb
and
xor
mov
dec
xor
pop
sub
sub
fsubr
push
aam
adc
retf
cmc
sbb
scas
sbb
pop
scas
mov
push
addr16
xor
(bad)
cli
push
sbb
adc
call
cdq
push
inc
mov
and
mov
sub
inc
loop
ds
call
add
dec
xlat
out
dec
outs
into
mov
cdq
ror
scas
ins
mov
aas
call
sbb
sub
repz
loopne
mov
div
mov
jmp
push
sbb
jne
push
addr16
jae
xchg
xor
ja
ret
adc
push
adc
in
inc
push
sbb
test
xor
enter
fbstp
sti
xlat
sub
pusha
pop
ins
ins
push
cmps
cmps
daa
sar
jecxz
push
(bad)
mov
ror
outs
inc
lea
jmp
mov
mov
sti
loop
loop
adc
add
lods
sub
pop
push
dec
add
outs
enter
mov
clc
pop
out
mov
xchg
xchg
lods
xchg
fmul
mov
add
mov
(bad)
sar
dec
lods
outs
add
sbb
call
and
xor
xchg
arpl
mov
xor
jne
sbb
push
mov
movs
rcl
ror
int3
sub
jne
xchg
loopne
mov
xchg
add
imul
push
push
inc
adc
xchg
mov
inc
nop
sti
shl
call
mov
mov
out
cmps
inc
push
dec
xor
jecxz
cmc
(bad)
jmp
adc
sub
adc
cmp
out
dec
out
mov
inc
jo
adc
adc
sub
aad
icebp
jnp
(bad)
jo
pusha
fnstsw
mov
xor
(bad)
push
pop
push
in
jb
add
cmp
push
dec
mov
cmps
mov
loope
aam
iret
popa
pop
mov
mov
push
loopne
scas
xchg
addr16
rcl
mov
les
int3
nop
shl
(bad)
fnsave
or
jecxz
xchg
jae
test
inc
mov
(bad)
movs
icebp
jnp
jle
iret
ss
pop
inc
xchg
pop
cmc
je
dec
xlat
cdq
jnp
in
jecxz
add
test
pop
jecxz
clc
jmp
sbb
test
popf
mov
push
rcr
push
sub
adc
mov
xchg
aas
loope
cmps
lock
mov
jge
sbb
mov
sbb
call
inc
jmp
test
dec
xor
xchg
sar
(bad)
mov
pop
jbe
cmp
xchg
jle
shr
xchg
or
cs
xchg
dec
xlat
sbb
xchg
inc
std
push
(bad)
or
xchg
bound
scas
or
shl
iret
fst
les
cdq
pop
rol
pop
cs
test
mov
pusha
out
loope
pushf
lds
arpl
xlat
test
jg
in
test
bound
inc
mov
xchg
ret
push
outs
and
inc
xchg
add
(bad)
popf
sub
lods
(bad)
mov
lea
or
test
or
dec
or
dec
cmp
adc
inc
mov
pop
mov
fiadd
cmc
jle
pop
stc
sub
sbb
in
or
ins
push
push
(bad)
(bad)
stc
ins
pop
pop
in
inc
int3
adc
push
scas
sub
and
sub
cmp
stos
imul
jl
(bad)
sbb
rcr
add
test
mov
pop
lds
mov
es
push
aam
lock
sub
sar
xor
jp
dec
sbb
in
test
pop
mov
out
adc
fsubr
pop
fsubr
ret
sbb
sub
fist
loopne
jne
adc
cmp
(bad)
mov
not
mov
(bad)
out
xor
sub
not
or
sub
int
mov
lea
cmp
(bad)
jmp
inc
cmp
xchg
fwait
ins
int3
jecxz
out
enter
call
rcr
(bad)
or
rol
test
in
push
cmp
popa
push
outs
fldcw
fild
push
adc
push
rcr
jge
dec
stos
popf
pop
inc
lods
xchg
jns
out
stos
cwde
xchg
arpl
aad
in
inc
test
jnp
(bad)
scas
cmps
or
jno
call
out
bound
test
cmp
pop
sub
test
fwait
(bad)
pushf
dec
call
push
cmps
cld
sub
addr16
je
in
pushf
pop
movs
mov
ds
add
(bad)
arpl
(bad)
dec
(bad)
clc
sub
push
xor
call
and
mov
cmps
mov
aad
mov
fild
ror
mov
mov
xor
sub
out
outs
int
pop
jp
xor
mov
out
xor
mov
xchg
ret
cmp
cdq
add
xchg
(bad)
dec
pop
mov
cdq
mov
add
add
ds
cli
adc
je
sbb
and
and
aad
pushf
pop
cmps
pusha
fwait
xor
mov
aad
in
cs
cmps
and
mov
and
sbb
mov
inc
dec
pop
mov
vmwrite
add
xor
scas
push
pop
dec
or
push
jb
repz
push
shl
scas
cmp
pop
lahf
dec
(bad)
je
dec
xor
sbb
lods
lock
jb
loope
jmp
aaa
ins
fdiv
cmp
mov
shr
or
push
(bad)
pushf
out
cmp
push
ficom
inc
mov
xchg
sub
ds
push
dec
mov
cli
cmp
mov
scas
mov
cli
or
dec
imul
stc
aas
adc
xchg
loope
into
mov
loope
sub
pop
xchg
pop
add
cmp
dec
pop
cmp
retf
mov
cmova
push
mov
jp
data16
add
sub
mov
xchg
add
dec
sub
sbb
scas
in
fadd
mov
add
out
cld
test
cmps
cdq
not
clc
jno
test
inc
into
ret
add
sahf
stos
and
mov
mov
or
mov
cmc
dec
sbb
mov
pop
dec
jbe
cmps
xchg
xchg
std
sbb
mov
mov
cwde
pushf
shl
xchg
icebp
push
add
mov
psadbw
cmc
push
mov
xchg
push
mov
xor
stos
xchg
int
jmp
mov
inc
jno
xchg
movs
cdq
xor
adc
lds
ja
push
sbb
or
inc
loopne
into
mov
mov
stos
mov
jecxz
sub
retf
int
ret
inc
fucomp
and
sbb
into
cmp
adc
pop
mov
loopne
frstor
cmp
jbe
fwait
arpl
mov
push
mov
lea
push
aaa
sbb
dec
mov
call
rol
fsubr
movs
loopne
xchg
cmp
add
sbb
or
xchg
lds
push
ds
adc
xchg
xchg
push
jb
push
mul
inc
mov
aad
inc
out
stos
cdq
or
les
xor
mov
test
dec
pop
ins
scas
(bad)
sbb
jmp
sub
mov
cmc
shr
jne
ja
dec
hlt
in
jecxz
fld
inc
adc
add
mov
cwde
call
add
cmp
dec
mov
adc
mov
test
in
cmp
in
jmp
sub
xor
lahf
aad
fwait
div
xor
jecxz
bound
test
scas
sbb
push
call
push
jmp
fs
xor
pushf
dec
es
jne
shl
xchg
int3
sbb
aaa
dec
xor
push
das
js
nop
mov
lea
cmps
xor
inc
outs
(bad)
js
test
pop
test
push
fcomp
(bad)
cmp
push
aaa
mov
out
or
call
mov
fild
add
sub
mov
inc
pusha
je
je
call
mov
sbb
daa
lods
out
or
cmc
pop
lahf
test
jl
addr16
es
dec
push
test
adc
lods
movs
gs
je
push
lahf
rol
adc
cmp
add
inc
mov
add
setb
cmp
push
inc
imul
adc
stc
jecxz
cwde
scas
fnop
mov
inc
mov
pop
cwde
mov
ret
iret
and
in
lods
mov
je
cdq
jno
jecxz
dec
pop
adc
add
test
in
jl
cmp
push
sti
retf
pop
in
ds
push
cmps
daa
inc
xchg
and
aad
and
call
ss
and
inc
cld
sub
in
or
sahf
xlat
cmps
stos
rcl
mov
(bad)
(bad)
sbb
es
lgs
jmp
mov
outs
mov
daa
mov
test
fwait
mov
(bad)
mov
inc
jb
popf
and
add
lds
mov
outs
sub
sbb
cdq
add
nop
movs
pop
arpl
push
inc
pop
mov
inc
mov
mov
or
pushf
out
cdq
hlt
inc
xchg
jge
dec
out
(bad)
inc
outs
jbe
and
mov
fldenv
cmp
icebp
mov
test
fldcw
inc
stos
out
sbb
loope
push
push
push
scas
jae
mov
jp
(bad)
mov
stos
pop
xchg
or
rol
push
xchg
mov
adc
loop
cmps
sub
imul
jecxz
pop
or
lods
lea
cs
xor
repnz
push
inc
lods
pand
test
inc
dec
and
sub
pop
imul
xchg
mov
fisubr
push
push
pop
das
and
push
jg
shl
stos
aaa
adc
jmp
sub
fwait
cmp
aam
test
ss
xor
jns
mov
cmc
jmp
lock
stc
rcr
fstp
popa
dec
rsqrtps
jne
or
(bad)
imul
inc
pop
imul
adc
and
std
cmps
mov
cmps
les
(bad)
jbe
aad
cmp
jmp
repz
cld
mov
sbb
push
add
dec
cmps
and
mov
pop
pop
or
pop
sbb
aad
jb
or
icebp
dec
in
adc
frstor
(bad)
sub
mov
nop
aam
js
cmps
push
int3
iret
mov
(bad)
shl
dec
or
xchg
dec
adc
xchg
popf
lea
sub
bound
jp
inc
cmp
xchg
clc
inc
in
sub
shl
mov
lock
repz
nop
mov
ret
int3
pop
jle
inc
adc
mov
pop
cmp
jmp
sbb
(bad)
and
push
mov
add
lods
mov
adc
sbb
mov
out
shl
mul
xchg
xchg
xchg
inc
arpl
fsub
inc
imul
mov
fld
add
mov
push
cwde
ret
lods
fnstcw
cmp
arpl
ja
pop
sub
jnp
jb
xchg
mov
aad
cmp
and
out
jmp
or
pusha
movs
pop
popa
push
mov
mov
or
sub
jne
or
and
aam
data16
test
inc
lahf
push
jno
cmp
jle
cli
dec
inc
lods
or
daa
dec
push
sbb
fistp
mov
push
fsub
inc
dec
in
xor
dec
in
lods
xchg
jge
sbb
jge
sub
xchg
shl
sub
or
jmp
xchg
and
mov
and
(bad)
nop
and
outs
and
and
repnz
pushf
call
sub
cmps
scas
aaa
xchg
lock
sbb
ins
jmp
adc
xchg
in
das
dec
or
cmp
popf
test
jmp
popf
mov
jo
xlat
es
jp
adc
loope
js
cmp
jnp
jns
inc
lods
mov
(bad)
mov
or
js
lock
xchg
pop
sbb
pushf
lods
test
jae
sti
fdivr
loop
or
cmp
(bad)
div
ins
aad
and
jg
mov
cmp
cmp
fstp
cdq
adc
shr
addr16
add
lods
push
sub
ds
retf
or
dec
mov
xor
cmp
es
inc
xor
out
ss
repnz
cs
cmps
fst
test
or
xchg
sbb
cmc
adc
fnstcw
or
push
mov
mov
inc
cmp
pop
mov
stc
test
aam
mov
xchg
push
add
xchg
out
adc
retf
pop
inc
adc
loop
mov
dec
pop
jmp
mov
push
loope
nop
push
test
or
enter
mov
imul
in
fstp
jbe
cs
enter
(bad)
cmc
xchg
shl
fidivr
int
pusha
xlat
int3
test
jns
mov
pop
out
rcr
(bad)
dec
dec
and
push
xchg
jmp
sbb
add
add
std
push
ficomp
xlat
mov
loope
mov
(bad)
outs
cmp
mov
xor
sbb
cmp
inc
jns
fsub
sbb
aaa
dec
xchg
loop
test
and
fcom
xchg
test
adc
mov
sub
mov
out
jg
rcl
push
mov
push
push
fldcw
ins
jp
mov
not
push
fst
cwde
daa
jo
or
inc
fmul
adc
call
cmp
sbb
lahf
sbb
nop
pop
shr
call
int
out
pop
xor
jle
aad
fldl2e
movs
or
test
outs
rcl
inc
je
and
xchg
jecxz
aad
pop
sbb
jbe
int
sahf
cmp
mov
push
inc
inc
cmp
fld
loopne
stc
ds
xchg
popf
into
or
cs
daa
sub
cdq
sub
test
ja
dec
jmp
mov
(bad)
fimul
lds
lods
adc
scas
fnstenv
sub
mov
inc
cwde
push
sbb
xchg
je
inc
add
dec
retf
push
ret
sbb
loopne
imul
jg
addr16
enter
clc
rcl
(bad)
mov
clc
loopne
mov
jb
mov
gs
dec
leave
fisubr
iret
mov
mov
popa
adc
call
call
xor
cmps
mov
inc
and
mov
dec
inc
call
push
loop
jmp
leave
pushf
outs
mov
lds
outs
clc
mov
popf
popa
or
jns
mov
mov
lahf
repnz
and
mov
ja
push
(bad)
sbb
add
fst
cmc
mov
jo
(bad)
aaa
into
pop
cmp
add
rcl
out
movs
call
and
call
sar
dec
adc
mov
mov
retf
adc
mov
scas
inc
pusha
pop
int3
dec
xlat
and
sbb
ret
mov
adc
bound
inc
mov
int3
imul
jnp
jmp
lds
xlat
or
inc
adc
fld
stc
fmul
xchg
lds
fwait
xchg
test
scas
xchg
push
cdq
fwait
adc
adc
test
or
mov
lea
enter
mov
out
iret
sahf
xchg
call
add
mov
add
into
test
add
aaa
inc
call
fwait
cmp
and
loope
addr16
(bad)
call
pop
inc
fbstp
dec
sub
xor
loope
jg
dec
test
cmp
push
lods
pop
fwait
ins
inc
or
and
sbb
fld
and
lods
pop
test
loop
mov
push
or
xchg
loope
adc
into
jo
sbb
push
pop
stc
mov
adc
mov
bound
fisub
pop
ret
mov
adc
adc
into
inc
dec
pushf
xchg
iret
and
retf
(bad)
mov
mov
rcl
push
rol
dec
pop
out
mov
clc
mov
in
sbb
add
mov
mov
lock
in
or
imul
jb
leave
xor
inc
xor
mov
in
rcr
sti
mov
stc
sbb
jmp
das
inc
push
adc
pop
inc
inc
pop
frstor
pop
push
inc
cmp
pop
or
adc
xchg
push
sbb
test
mov
mov
loope
in
pop
imul
inc
adc
adc
or
jb
mov
cmp
(bad)
clc
pop
adc
and
add
jae
test
outs
push
jmp
enter
je
(bad)
stos
dec
stc
retf
leave
pop
out
test
outs
push
jns
lock
outs
mov
loope
sbb
lods
fadd
mov
sahf
jnp
mov
inc
dec
push
lock
fst
xacquire
out
in
cmp
in
pop
cs
dec
mov
hlt
pop
(bad)
xchg
iret
int
sub
jnp
xchg
cmpxchg
inc
aad
push
sahf
je
pop
aad
cmps
mov
aad
out
dec
mov
(bad)
mov
test
xchg
mov
inc
les
retf
fwait
mov
mov
adc
mov
add
jns
stc
jns
stc
xor
out
cwde
mov
lds
dec
xchg
jp
pop
ror
lahf
xchg
pushf
jg
int
add
pop
pop
dec
push
idiv
sbb
xchg
or
mov
retf
pop
mov
pop
mov
rcr
cmp
repnz
es
inc
ins
mov
in
push
jmp
addr16
les
or
sub
sub
aaa
mov
push
ds
es
(bad)
mov
push
mov
aaa
pusha
inc
xlat
mov
retf
aam
(bad)
jp
sbb
cs
mov
scas
adc
or
sub
mov
mov
(bad)
dec
stos
hlt
mov
inc
or
sbb
add
pushf
mov
jns
sub
rcr
pop
push
jnp
inc
push
and
shl
jg
adc
or
call
lock
and
in
mov
pop
js
in
lds
add
ret
mov
jmp
add
inc
push
jecxz
mov
jp
mov
xor
retf
mov
fldenv
inc
ins
lds
sub
fistp
push
adc
or
(bad)
jmp
and
ins
popa
scas
rol
cmp
xchg
xchg
loope
mov
pushf
repz
out
pop
xor
dec
imul
das
push
popa
mov
and
xlat
js
pop
cmp
or
ss
inc
jg
xor
add
pop
or
and
loopne
sub
imul
cmp
jmp
sbb
sub
mov
push
inc
ja
cmc
cld
aad
sti
mov
movs
sub
ds
adc
mov
icebp
(bad)
enter
stos
push
jmp
jns
cs
cmps
sbb
das
jg
pop
std
add
cmp
cmc
int3
loopne
call
hlt
xchg
adc
bound
retf
push
les
or
scas
test
pushf
clc
setg
inc
pop
test
xchg
out
mov
sub
pop
jnp
fs
dec
addr16
rcr
sub
and
mov
mov
(bad)
push
mov
xchg
or
cld
shl
inc
mov
adc
dec
xchg
mov
call
into
inc
add
fs
fisub
cmps
fld
je
in
push
mov
add
ror
mov
imul
sbb
sbb
(bad)
push
jmp
adc
add
or
and
or
push
lock
in
cmp
jns
dec
cwde
in
int
in
es
add
mov
and
ins
add
or
inc
xor
mov
sbb
xor
loop
rol
pop
mov
fcom
ret
mov
sar
ins
jle
mov
(bad)
push
test
dec
jb
add
es
test
aam
mov
outs
sbb
daa
sbb
mov
sti
pop
add
push
popf
icebp
lods
lahf
enter
nop
(bad)
mov
or
(bad)
jmp
inc
and
and
xchg
out
jno
dec
mov
scas
pop
pop
xchg
rcl
fs
adc
xor
mov
pop
int
adc
(bad)
lods
or
imul
mov
cmp
ficom
test
xor
mov
ja
sbb
enter
lods
sbb
jns
fstp
inc
mov
imul
xchg
jg
outs
mov
retf
push
shl
mov
scas
mov
mov
movs
pmaddwd
jmp
push
cmp
pusha
cmc
cld
inc
outs
inc
lahf
ja
mov
jno
sar
aas
cmp
xchg
scas
mov
pop
and
mov
or
in
adc
out
inc
mov
push
inc
mov
dec
cmps
pop
test
mov
or
cdq
jge
pop
pop
cmp
mov
lods
loop
das
push
out
dec
pop
rcr
dec
inc
call
cmp
in
and
xor
out
add
mov
iret
add
add
in
jg
out
or
out
(bad)
test
and
aam
mov
ds
aas
call
scas
loopne
addr16
inc
or
sbb
movs
sbb
push
out
jnp
sub
std
ja
inc
cs
ins
pop
ja
add
dec
sub
jmp
mov
aas
sahf
sbb
xor
push
fistp
dec
jecxz
jg
dec
int3
mov
pop
pop
cmps
pop
mov
retf
dec
xor
mov
pop
test
pop
mov
cli
sub
cmp
fild
adc
sbb
cld
mov
hlt
dec
jb
sbb
dec
and
dec
lods
push
inc
inc
inc
push
add
dec
or
dec
pushf
sub
in
lock
mov
aam
sbb
fcomp
cs
mov
adc
sti
bound
loop
pop
push
imul
mov
es
dec
retf
mov
cmp
pop
xchg
inc
sbb
xor
mov
(bad)
mov
loope
(bad)
shl
popa
(bad)
xlat
mov
push
ins
xor
call
test
cli
mov
mov
dec
das
sbb
adc
or
mov
mov
retf
push
stos
xor
push
outs
mov
mov
jle
cmp
lea
stos
js
adc
fisub
add
mov
cmp
movs
jns
jmp
das
pop
adc
les
dec
jg
lea
mov
dec
mov
push
lahf
jns
call
mov
push
cmp
push
mov
xchg
push
sahf
daa
repz
stos
rsm
inc
xchg
pop
imul
add
pop
popa
xor
fadd
xchg
in
cmp
int3
adc
(bad)
leave
add
daa
sbb
and
adc
xor
jge
sub
in
loope
pusha
aas
mov
jo
ins
mov
or
adc
aam
shr
xchg
movsx
sbb
sub
mov
das
arpl
js
fsub
push
jbe
ja
les
hlt
int
cmp
loopne
sbb
push
lods
das
adc
(bad)
hlt
fistp
sub
jmp
inc
retf
inc
ret
iret
jl
shl
jmp
pop
ret
in
mov
add
test
popa
stos
sub
push
outs
cli
xchg
push
inc
aam
adc
mov
add
mov
mov
icebp
pop
and
mov
dec
add
inc
stos
ins
loop
inc
mov
int
inc
jge
lock
xchg
int
sub
pusha
cmps
cmp
mov
or
pop
jnp
sub
repz
jne
dec
jns
call
xchg
push
outs
and
fsubr
or
and
fwait
pop
add
push
gs
pop
cdq
stc
out
xchg
push
jb
arpl
in
ja
push
mov
xchg
xor
adc
sbb
or
sbb
inc
(bad)
jnp
xchg
ja
xchg
ds
mov
in
add
cdq
inc
mov
xchg
dec
inc
stc
repnz
jp
add
sbb
push
in
stos
jl
gs
sbb
xchg
cmps
or
test
adc
xor
test
(bad)
adc
add
jmp
cmp
sbb
into
cld
or
in
addr16
mov
hlt
mov
or
call
push
xchg
pop
adc
xor
xlat
adc
popa
nop
test
jmp
adc
cmp
mov
mul
pop
jb
call
xchg
cwde
jo
add
sub
pop
addr16
cmp
inc
inc
jmp
iret
jno
test
ror
sar
push
adc
jo
loop
or
in
inc
sbb
mov
movs
push
jecxz
jmp
rcr
stos
sub
xchg
pop
mov
xor
jg
out
or
dec
test
cmp
loop
sbb
call
mov
repz
int
sub
and
je
cdq
movs
(bad)
mov
or
into
ins
(bad)
arpl
aaa
fistp
hlt
nop
cvtps2pi
shl
rcl
xchg
(bad)
out
sub
adc
(bad)
push
ins
sar
mov
dec
(bad)
sbb
out
push
and
mov
scas
xchg
xlat
push
or
mov
pop
mov
jbe
cmps
mul
retf
mov
ret
ja
xchg
popa
pop
movs
sub
sbb
or
fidiv
mov
mov
mov
out
pop
rcl
mov
add
int3
pop
(bad)
aam
jnp
jg
mov
xlat
mov
fnstenv
pop
hlt
pop
sar
and
dec
addr16
ja
mul
shr
xor
js
dec
mov
call
cmp
xchg
fdivr
mov
sbb
add
add
cmp
(bad)
into
in
or
fwait
sbb
or
or
pop
aam
jns
push
mov
or
or
adc
pop
aad
and
cs
fs
mov
adc
xor
xor
or
ret
sub
jne
cmp
and
iret
dec
loope
add
(bad)
ins
mov
dec
sub
daa
and
jo
test
push
fist
icebp
loope
push
lods
or
cwde
cs
aaa
inc
xor
popa
push
ds
sbb
pusha
add
mov
push
test
sar
inc
frstor
cli
enter
or
sub
sti
leave
in
pop
sar
retf
pop
sbb
cmp
cld
lock
inc
adc
jp
mov
cwde
pop
std
inc
adc
scas
loope
mov
ja
js
sbb
push
dec
ins
cli
mov
ins
dec
cmp
fild
cmp
jge
in
jl
mov
outs
mov
dec
sub
mov
test
dec
inc
cmp
mov
sbb
cmp
je
mov
dec
dec
push
jmp
push
xchg
xchg
inc
cmp
mov
and
xchg
xor
mov
mov
inc
shr
fst
dec
dec
adc
scas
jmp
scas
or
mov
(bad)
jle
mov
xor
sbb
ds
aaa
in
aad
outs
in
mov
sub
mov
adc
iret
in
clc
rcr
daa
pop
sub
dec
imul
sbb
mov
imul
scas
inc
(bad)
test
xchg
xor
pop
mov
inc
dec
mov
fwait
mov
scas
in
int3
ins
leave
pop
retf
xor
sbb
mov
xchg
inc
and
out
xchg
push
loop
leave
cmp
pop
not
sub
jae
add
mov
das
sub
pop
into
and
inc
mov
push
outs
mov
add
fld
and
hlt
es
and
mov
enter
adc
outs
rol
gs
je
xor
and
ror
xor
jae
imul
and
fadd
fs
cs
cmc
mov
or
jb
mov
call
jl
cmc
sub
(bad)
out
inc
into
call
into
add
cwde
adc
(bad)
inc
repz
stos
jmp
sub
lods
aaa
xor
stos
xlat
(bad)
and
loop
push
cmps
or
stos
adc
in
dec
or
inc
add
inc
lock
mov
test
movs
mov
stos
pop
shl
sub
cld
aas
ja
or
add
xor
mov
xchg
xor
push
adc
fild
pop
cmp
movs
ror
sbb
ins
les
stos
sbb
idiv
addr16
mov
xchg
lahf
xor
call
xor
leave
add
pop
inc
imul
mov
sub
pop
dec
movs
pop
lods
adc
cld
call
add
mov
lods
shl
inc
inc
rcr
outs
mov
test
dec
sbb
mov
mov
test
and
pop
push
inc
and
mov
push
icebp
cmp
mov
xchg
pop
adc
push
inc
int3
(bad)
add
(bad)
mov
xor
dec
add
lods
ja
sub
add
ret
sub
jmp
in
iret
sbb
and
inc
retf
ror
add
aad
in
iret
xchg
mov
loopne
xchg
outs
ss
dec
mov
clc
mov
ror
sub
(bad)
push
inc
call
adc
xor
loope
jo
es
gs
cld
popa
sub
jp
movs
adc
cmp
(bad)
push
pop
dec
pusha
sbb
xor
ds
(bad)
fiadd
fwait
push
add
mov
mov
jp
cmp
push
cmc
dec
(bad)
lock
and
sub
es
xchg
movs
fisubr
or
sbb
loope
dec
(bad)
clc
xor
add
push
mov
xchg
add
push
stos
dec
clc
cli
shl
mov
call
xor
pop
bound
cmc
or
call
int
push
jo
in
mov
cmp
inc
movs
and
(bad)
(bad)
dec
shl
pop
sbb
sbb
rcl
jle
inc
push
xor
and
or
pushf
test
iret
cdq
mov
popa
adc
rcl
xchg
mov
shl
lock
in
out
inc
fstp
movs
or
pushf
inc
int3
mov
xchg
js
inc
xchg
(bad)
dec
into
repnz
pop
fwait
gs
sub
jle
aas
mov
cmp
ja
mov
popf
xor
jno
mov
cmp
adc
call
and
push
pusha
add
(bad)
das
mov
ins
mov
jae
add
adc
movs
loop
out
fst
aaa
pop
mov
mov
mov
mov
jmp
mov
repz
adc
fs
cmp
test
test
gs
jmp
sub
adc
adc
clc
pop
adc
jge
ss
das
lahf
data16
mov
not
ins
cli
es
loopne
sbb
outs
imul
xchg
jnp
or
and
pop
mov
leave
out
jb
xchg
int3
frstor
sub
inc
sbb
mov
push
jae
aam
xor
push
ss
dec
jle
sbb
mov
fnstcw
push
xor
hlt
hlt
test
mov
push
icebp
ja
jmp
xor
add
ds
cs
int
pushf
test
jns
mov
jnp
scas
punpckhdq
bound
mov
fst
cmps
call
cmp
push
dec
jo
stos
retf
mov
push
iret
sub
(bad)
cmp
cmp
pop
push
icebp
mov
push
sub
pusha
scas
bound
pop
cmp
lahf
bound
ret
xor
adc
xor
pop
push
xchg
sbb
ss
sbb
into
movs
mov
fs
jge
mov
ror
aad
retf
cmps
jbe
scas
sbb
cmp
enter
retf
cmp
loop
cmp
out
jbe
stos
retf
dec
lods
dec
pop
shr
inc
rol
dec
push
jge
fnstcw
cmp
mov
pop
jae
xchg
fwait
iret
cdq
leave
cli
xlat
mov
test
add
fstp
loop
stos
pop
cmp
cmp
cli
xor
out
std
and
imul
dec
icebp
addr16
xchg
(bad)
out
retf
loope
xchg
lods
and
jle
cmp
inc
add
dec
rcr
das
dec
shr
and
test
mov
mulps
ins
xchg
sub
imul
xor
out
jbe
ret
xchg
ins
lahf
lods
jae
mov
je
pop
inc
dec
xchg
sbb
leave
cdq
pop
mov
mov
int3
and
lahf
push
cmc
test
dec
movs
jmp
pop
mul
fwait
js
mov
or
adc
or
cli
cmp
in
mov
mov
lods
push
push
cmp
mov
mov
or
pop
dec
inc
xchg
push
inc
lds
mov
gs
cmps
stc
lea
call
icebp
(bad)
mov
add
mov
dec
in
cmp
stos
call
add
enter
and
xlat
pop
pop
pop
movs
ret
or
inc
and
lock
jecxz
inc
and
pop
movs
mov
ror
pop
or
cmp
mov
int
lods
mov
dec
cmps
inc
nop
jbe
dec
dec
(bad)
sti
adc
cmp
retf
je
or
leave
and
retf
adc
je
push
ds
add
repz
add
out
pop
jmp
aaa
mov
sti
mov
dec
and
cmc
push
jg
ja
adc
add
cmp
bnd
cld
mov
aas
sub
not
jbe
push
push
jns
retf
dec
push
out
loope
sub
xor
inc
movs
mov
push
pop
sub
outs
push
mov
add
les
std
adc
jge
mov
push
fcomi
cmp
(bad)
mov
pop
repz
std
adc
mov
jecxz
sti
push
test
jo
arpl
in
ins
out
or
add
push
mov
sub
dec
or
int3
jecxz
push
sub
add
or
mov
stos
outs
out
dec
fs
mov
mov
adc
mov
(bad)
mov
repz
movs
sub
jb
test
lods
dec
push
(bad)
jmp
cmc
push
rcl
jbe
inc
jle
popf
xchg
xchg
lahf
clc
mov
pop
dec
sbb
frstor
push
mov
int3
lods
sbb
push
and
inc
test
mov
inc
enter
xchg
rcr
idiv
and
shr
je
mov
ret
mov
jmp
or
mov
sub
jb
fdivr
aas
hlt
push
ror
(bad)
pop
inc
pop
sti
mov
call
dec
mov
cmc
lods
jmp
inc
popa
mov
aaa
or
les
retf
sub
dec
pop
xlat
js
addr16
fiadd
lods
jmp
out
mov
cmps
adc
dec
repnz
repnz
xor
mov
dec
ret
and
cmp
imul
or
xor
cmp
jb
psubsb
jns
ss
adc
and
enter
icebp
fild
xchg
fmul
push
pop
add
clc
and
gs
(bad)
cmp
xchg
sub
loopne
mov
fs
jmp
cdq
xor
add
aas
fadd
fdivp
ret
ds
ins
fs
pop
cld
nop
xchg
mov
jmp
xchg
das
mov
in
inc
test
pusha
mov
xlat
adc
dec
daa
xor
rep
fcmovnbe
call
push
hlt
push
gs
xor
movs
in
shr
mov
mov
movs
jnp
ud0
sub
and
add
into
clc
inc
ret
in
hlt
mov
pushf
test
jne
sti
icebp
xchg
inc
add
js
ss
adc
adc
cmp
bound
mov
jo
sbb
mov
push
jo
std
xchg
lods
inc
jne
inc
lods
sti
mov
in
xor
outs
jno
xchg
xchg
mov
lock
sub
dec
scas
xchg
retf
nop
or
cmp
push
pop
xchg
jo
mov
xlat
lock
mov
cmps
or
fmul
(bad)
mov
sbb
mov
cli
sub
inc
add
mov
inc
pop
mov
pop
rcr
pop
push
imul
or
dec
pop
test
pop
stos
mov
cld
loope
add
retf
cmp
aas
std
push
cmc
jecxz
pushf
mov
sbb
cdq
xor
push
inc
iret
push
mov
add
jns
clc
xor
inc
inc
ins
inc
mov
inc
push
xor
fldcw
stc
mov
and
iret
stc
jne
iret
jne
data16
cmps
jno
push
into
cmps
rcl
test
ret
inc
sub
jno
xchg
dec
dec
pop
popf
adc
shl
rcl
cwde
mov
cmps
cdq
iret
scas
stc
xchg
inc
jg
data16
push
shl
mov
lock
pop
fs
rol
call
push
or
je
sub
adc
mov
in
(bad)
(bad)
fisttp
test
je
aas
lods
push
cmc
pop
dec
ror
loope
in
cmp
fstp
pop
cdq
aaa
add
fld
cmc
mov
mov
repnz
mov
sahf
cmp
mov
and
pusha
(bad)
jmp
out
mov
out
mov
sub
jmp
mov
jmp
dec
and
mov
dec
fs
(bad)
adc
test
pop
(bad)
leave
scas
pop
aas
aaa
mov
stos
jae
xor
jmp
lds
iret
in
sub
outs
fstp
adc
pushf
fnstcw
dec
or
addr16
fwait
jnp
mov
test
mov
stc
cmc
mov
icebp
xchg
ins
ret
ins
jbe
xchg
leave
out
ficomp
ins
adc
jmp
in
jg
xchg
push
pop
pop
push
jmp
adc
or
xchg
jle
clc
jg
mov
movs
push
dec
add
shl
jg
test
pusha
sub
adc
mov
add
push
mov
mov
clc
pusha
and
mov
test
push
pop
lods
mov
inc
movs
push
arpl
(bad)
jnp
or
sub
push
sub
div
lods
or
and
stc
mov
add
or
sbb
mov
push
enter
std
fucomip
xor
sub
outs
icebp
aaa
fisubr
fiadd
dec
mov
fisttp
in
(bad)
and
mov
pop
jl
loopne
hlt
out
and
or
adc
mov
(bad)
std
jae
gs
push
cmp
xor
(bad)
pop
sbb
and
add
mov
add
ret
sbb
mov
xchg
jmp
pop
jae
push
dec
test
pop
hlt
call
push
jecxz
fcmove
sub
adc
cmps
leave
cmp
adc
mov
mov
push
hlt
mov
dec
out
fcmovnu
inc
out
xor
cmp
sub
imul
jno
sahf
mov
cmp
and
out
popf
mov
mov
scas
sti
movs
push
mov
repz
xchg
mov
imul
sbb
in
adc
mov
lods
aam
je
retf
jno
jmp
out
das
sub
jne
stos
inc
pop
fnstsw
push
cmp
daa
pusha
inc
jecxz
cmp
sub
add
add
inc
popf
out
or
pushf
pop
outs
loope
outs
stos
adc
jnp
and
lds
xchg
lahf
cmps
sbb
or
sbb
sti
mov
jo
vpmacssdd
push
in
mov
daa
mov
ret
outs
stos
mov
jp
call
mov
dec
push
jns
iret
mov
adc
push
xor
in
ficom
ds
and
inc
or
xchg
jns
push
push
popa
rcr
and
lea
shl
push
rcl
add
pop
dec
in
nop
neg
mov
cwde
fs
mov
xor
inc
shl
xor
jb
loope
out
cmp
push
mov
mov
dec
pop
leave
jmp
outs
popf
sar
jne
inc
jle
and
les
add
jmp
push
and
je
cwde
aad
fadd
sar
pop
jl
imul
lods
fild
je
pop
cmp
sub
shl
inc
stc
push
aad
jecxz
xchg
lds
sub
and
imul
pop
mov
or
mov
in
push
or
mov
loope
jmp
ins
pop
dec
into
ins
das
and
es
pop
jp
ficom
add
jns
pop
inc
lock
sbb
mov
mov
test
gs
ret
aaa
and
push
mov
iret
iret
cmc
push
arpl
push
dec
addr16
pop
out
outs
shl
clc
and
mov
xor
xlat
push
test
push
adc
xchg
jbe
adc
cdq
mov
test
call
ds
pushf
mov
(bad)
jge
push
fbstp
or
neg
mov
fisttp
jae
jne
jnp
shl
mov
push
push
in
dec
xchg
popf
test
iret
add
(bad)
pop
lea
cmps
sub
sar
xchg
ffreep
enter
sbb
out
sub
aam
mov
mov
xchg
mov
inc
cld
mov
cmc
adc
dec
mov
xchg
in
lea
(bad)
in
sub
mov
cmp
mov
setp
and
int
cmp
inc
pop
push
repz
ins
xchg
push
pop
stos
lahf
imul
out
shr
int
loop
push
pop
lahf
clc
xchg
mov
(bad)
mov
clc
add
pop
(bad)
sub
rcr
pop
inc
sub
or
sub
mov
xor
push
aam
or
inc
sbb
adc
test
lea
imul
push
or
(bad)
push
test
cmp
jns
test
cmp
adc
sub
scas
or
shld
mov
and
pusha
mov
push
and
ror
(bad)
mov
xor
inc
cmp
daa
ds
nop
data16
popa
dec
adc
outs
mov
js
int
loope
jge
push
push
mov
daa
dec
jmp
mov
mov
shl
popa
stos
jle
sti
or
stos
mov
sysenter
xor
pop
or
push
mov
test
repz
pop
sub
imul
aam
out
inc
dec
and
out
neg
icebp
lahf
leave
repnz
cmc
and
sub
das
not
icebp
add
cmp
stos
outs
fcomp
cmp
lea
out
mov
fstp
xchg
mov
dec
bound
popf
outs
push
frstor
fdivr
cmps
push
out
nop
scas
xchg
das
cmp
or
aaa
adc
mov
data16
mov
out
lock
push
int
rol
add
lock
loopne
sub
mov
cmp
push
xchg
out
cdq
repz
ins
push
int3
pop
outs
aaa
xchg
cld
movs
lock
shr
sub
fwait
adc
push
outs
xor
jge
neg
jge
fld
adc
mov
sbb
add
push
jmp
shl
pushf
cmp
rcr
popf
rcr
stc
das
pop
push
add
fcom
in
xor
cmp
test
mov
inc
rol
es
out
jb
sbb
fs
fcomip
sbb
jg
or
div
mov
cmps
dec
in
stc
je
dec
les
xchg
jge
hlt
das
add
jg
xor
fisttp
leave
xor
mov
cmp
jmp
push
sbb
stc
sbb
arpl
push
cs
mov
cmp
int3
(bad)
inc
cmp
sahf
jo
push
xchg
nop
(bad)
xor
rcl
imul
int
push
mov
add
mov
cli
mov
sub
ins
sar
ror
push
lods
inc
mov
mov
push
xchg
jmp
(bad)
inc
adc
mov
leave
push
inc
mov
int3
mov
ins
cwde
add
pop
xchg
xchg
nop
shl
clc
fisubr
add
enter
jl
mov
cmp
hlt
mov
pop
pop
mov
xor
aas
inc
cmp
xchg
inc
dec
dec
out
ret
xlat
movs
add
jne
sub
sbb
sbb
add
pop
jo
test
xchg
mov
inc
cmp
sbb
jmp
sbb
and
lock
add
aaa
adc
(bad)
loope
mov
pop
jl
push
popf
xor
sti
lahf
pop
adc
push
add
cmp
sbb
sbb
daa
xchg
push
pop
adc
scas
popf
aam
sub
scas
daa
jne
push
push
lahf
test
mov
dec
mov
arpl
mov
adc
mov
ror
sahf
pop
adc
test
jb
(bad)
aad
stos
jae
push
stos
test
jmp
iret
mov
retf
cmp
xchg
dec
jp
cwde
jl
in
push
push
aam
dec
in
loope
test
xor
xchg
ja
stos
retf
sub
jb
mov
(bad)
(bad)
pop
pushf
movs
cmp
fldpi
push
daa
xchg
in
push
adc
mov
pop
adc
or
jnp
sbb
jo
xchg
mov
adc
cdq
dec
sub
sbb
shr
jbe
xchg
dec
repz
add
mov
mov
or
test
add
dec
retf
mov
shl
mov
shl
push
popa
clc
jecxz
sti
sbb
rcr
mov
jmp
in
fsubr
sbb
das
repz
repz
sub
and
cmp
aam
retf
jecxz
outs
retf
add
out
fnstsw
ds
movs
gs
sbb
mov
push
sbb
or
mov
test
dec
add
rol
test
adc
ror
out
or
repnz
push
mov
ret
mov
mov
bound
push
arpl
in
rol
and
cwde
loop
popf
loope
xchg
daa
in
not
(bad)
dec
(bad)
mov
dec
js
popf
test
jmp
retf
push
fs
xchg
mov
jnp
pop
push
in
shl
sub
icebp
adc
mov
ds
pusha
mov
mov
fwait
jb
movs
repnz
or
sub
push
loop
mov
sub
cli
lea
(bad)
jmp
adc
sub
lock
push
fbstp
sbb
stc
cdq
adc
cdq
fdivr
sub
or
retf
jg
xor
sub
adc
add
(bad)
xchg
xchg
sbb
sbb
shr
in
inc
sbb
jmp
dec
mov
imul
mov
pop
xchg
or
sub
sub
loop
icebp
into
jl
mov
pop
mov
fld
xor
(bad)
call
fsubr
fwait
aas
into
add
test
push
ror
and
add
aas
and
das
dec
popf
jmp
dec
(bad)
scas
(bad)
fst
cmc
push
sti
inc
fs
xor
repnz
ss
pop
aaa
and
fs
xchg
clc
aaa
ret
jge
mov
xchg
inc
les
lods
(bad)
xor
or
out
out
adc
in
pop
push
hlt
and
mov
dec
push
push
std
fistp
cli
fstp
ds
out
adc
ret
adc
add
jmp
jbe
mov
push
rol
clc
dec
pop
mov
neg
xor
xlat
lahf
in
arpl
pop
es
cmp
or
inc
ret
pushf
cmp
popa
cmp
pop
daa
adc
arpl
or
inc
jbe
sub
frstor
adc
and
stc
pop
inc
push
mov
xchg
and
scas
and
inc
dec
fisttp
ror
jle
adc
(bad)
push
mov
ds
mov
add
shr
cmp
xor
pop
leave
aam
jno
sub
mov
icebp
into
push
fstp
arpl
pop
adc
popf
fistp
shl
jmp
jne
dec
add
dec
shl
dec
iret
cmp
pop
and
imul
add
mov
sbb
fcom
test
je
aad
or
addr16
jno
xchg
adc
lods
aaa
jbe
sub
enter
push
mov
retf
mov
in
mov
repz
add
and
jae
adc
pop
adc
mov
ss
add
sub
mov
or
mov
ins
cs
pop
inc
mov
and
push
int3
add
or
ror
inc
ror
les
xchg
pop
mov
mov
add
movs
dec
cmp
popf
cli
and
retf
aas
xor
nop
jmp
mov
cli
(bad)
in
jae
xor
mov
fs
cwde
mov
adc
fistp
jb
mov
inc
outs
jbe
icebp
sbb
je
inc
cs
outs
mov
add
rcl
imul
xor
dec
xchg
cmp
rcl
mov
je
mov
sub
dec
mov
pop
ja
add
and
lahf
bound
repz
xlat
xchg
sbb
cmpxchg
ja
mov
(bad)
cmp
stos
inc
cmp
xchg
and
(bad)
movs
pop
in
jge
dec
fisttp
inc
dec
or
imul
jbe
push
mov
(bad)
call
fdivr
xchg
pop
cmps
jnp
push
bound
push
sub
leave
je
jle
sbb
jmp
das
sbb
cli
xchg
add
fs
in
jmp
dec
xchg
mov
ret
pop
(bad)
add
stos
add
push
nop
pop
cmp
mov
jp
test
jle
stos
fst
inc
out
xchg
lahf
int
ins
out
xchg
cmp
rcl
enter
adc
in
enter
lock
pop
xchg
fdiv
repnz
ds
sahf
mov
jbe
(bad)
pop
fs
push
mov
shl
fst
adc
push
add
mov
ja
xchg
(bad)
sbb
sbb
test
pop
pop
loop
jno
mov
and
out
int3
ins
popa
popa
cmp
shl
or
push
dec
retf
sbb
shl
out
jl
fisttp
hlt
aad
int
sahf
jmp
dec
and
(bad)
outs
bound
push
scas
hlt
push
fistp
sbb
or
sbb
gs
data16
ret
dec
and
mov
cmp
inc
sti
dec
mov
and
jmp
jmp
retf
xor
xchg
add
dec
mov
inc
adc
pop
fnstenv
stos
enter
test
mov
aam
add
outs
add
lock
ror
cdq
lods
jno
out
mov
mov
xchg
sahf
arpl
sahf
fs
mov
je
jle
mov
jg
xor
mov
(bad)
cmp
sti
add
push
js
not
dec
or
idiv
xor
or
adc
stos
fs
mov
xor
dec
or
xor
push
jnp
sti
jge
aad
pop
sbb
inc
loope
cmp
mov
in
(bad)
adc
mov
xor
inc
rcl
lods
mov
xchg
imul
push
jmp
push
mov
sbb
and
out
ja
leave
test
pop
scas
outs
inc
rcl
jle
ret
dec
pushf
fnstcw
in
outs
pop
(bad)
cdq
out
data16
aas
inc
jge
test
in
fistp
mov
jnp
inc
mov
lock
sbb
aad
jp
scas
xchg
adc
sar
stos
nop
add
xlat
xchg
inc
jmp
adc
mov
scas
(bad)
mov
sub
shl
mov
std
xor
aas
mov
scas
pop
jo
xchg
adc
jns
retf
jl
xor
jg
xor
retf
sbb
lock
sub
das
cmps
xor
xchg
xor
mov
out
ins
retf
inc
pop
bound
fnstsw
jmp
(bad)
cld
out
pop
mov
mov
test
adc
pop
clc
cmp
(bad)
(bad)
lods
xchg
add
dec
sahf
sbb
sbb
push
push
mov
into
push
mov
jl
add
imul
int
sahf
(bad)
mov
cmps
pop
icebp
xor
shl
in
loopne
inc
cmp
(bad)
push
mov
shr
push
mov
mov
jbe
xchg
push
jmp
cmps
jmp
(bad)
rol
add
int3
js
popf
aam
xchg
mov
sbb
int3
mov
push
jb
aas
js
jle
into
icebp
movs
icebp
push
out
js
popa
xor
xor
cdq
cmp
int3
mov
cmp
iret
fist
mov
sub
into
add
mov
xchg
outs
(bad)
test
sahf
cmp
(bad)
int
dec
cld
sub
jnp
xchg
and
or
(bad)
push
js
sub
arpl
mov
les
xor
adc
mov
retf
int3
cmc
or
imul
add
adc
ins
fwait
sbb
das
out
sbb
fldenv
je
xchg
jl
sbb
comiss
dec
inc
inc
mov
mov
aam
mov
jnp
sbb
leave
lods
shl
mov
dec
repz
loop
adc
pushf
clc
xchg
lahf
dec
xor
sub
das
sbb
dec
xchg
adc
xor
(bad)
rcr
dec
jle
mov
push
jmp
xchg
and
int
push
into
mov
fcmovne
shl
sub
(bad)
push
and
xor
daa
shl
cmps
inc
or
mov
mov
sar
pop
jne
sar
mov
dec
shl
sbb
jg
ffreep
repnz
bound
ror
pop
rcl
mov
jbe
loop
retf
or
cmp
in
and
enter
mov
icebp
mov
loop
adc
cmp
dec
adc
pop
icebp
ret
std
nop
xlat
test
dec
xchg
cs
scas
pushf
mov
jo
rcr
lock
xchg
cwde
lock
out
aam
hlt
pop
cli
jno
dec
cmp
js
fcompp
test
cmc
rcl
jg
or
pop
xor
cmc
and
cmp
inc
mov
in
pusha
jno
pop
xchg
push
test
xchg
adc
and
pop
push
lds
cmp
push
aam
xor
add
nop
add
xchg
cmovae
test
dec
call
mov
push
test
sbb
push
(bad)
hlt
or
xchg
push
mov
pop
mov
call
push
sar
in
ja
pop
sahf
loope
push
arpl
repnz
fst
xchg
popa
test
ins
enter
sbb
ins
mov
cwde
imul
in
iret
mov
cmp
push
adc
jmp
jo
lods
outs
into
pushf
sub
mov
out
leave
push
sub
js
add
and
dec
addr16
adc
lea
sbb
adc
aad
cmp
ins
and
add
jl
mov
cmp
push
(bad)
test
retf
mov
jne
out
int3
cli
jnp
in
add
in
ins
int3
mov
xor
stc
sbb
test
enter
mov
cmp
dec
bound
mov
test
mov
mov
inc
add
push
fyl2x
pop
fcomp
mov
adc
inc
pop
cmp
and
xchg
or
js
mov
mov
call
lds
mov
mov
push
jmp
xor
ins
call
sub
push
mov
xchg
or
dec
jge
mov
addr16
imul
das
push
adc
ror
xchg
out
and
add
dec
and
loop
pop
mov
frstor
(bad)
out
xchg
jecxz
xor
sub
push
pop
test
mul
sub
mov
cmp
(bad)
fnstenv
int3
sub
ret
inc
push
jg
cmps
scas
out
popf
inc
dec
cwde
adc
into
sub
xchg
inc
inc
jg
inc
mov
stc
push
jecxz
retf
cmp
mov
cmps
fstp
fild
sub
push
fild
inc
xchg
jne
aam
pusha
inc
dec
push
push
push
(bad)
nop
cdq
cli
std
jl
dec
imul
inc
add
jns
xchg
inc
xchg
xchg
adc
inc
push
or
xchg
out
out
mov
lds
cmp
sbb
fwait
adc
rcr
ss
data16
cmps
ins
and
test
dec
retf
push
xlat
xchg
push
xchg
add
dec
xor
sbb
and
loop
jmp
or
jg
push
(bad)
scas
out
daa
mov
mov
jne
pop
xor
sbb
jecxz
push
mov
jno
xchg
dec
fnstcw
lea
popa
xor
adc
inc
sub
push
les
arpl
rcr
push
jns
dec
nop
xor
push
cld
add
stc
sub
bound
sbb
mov
mov
fistp
cs
and
test
cmp
ins
(bad)
dec
movs
(bad)
jle
shl
repz
jle
pushf
(bad)
mov
xchg
int
mov
mov
lock
mov
repnz
in
dec
imul
jns
mov
jmp
inc
cmp
xor
xor
add
(bad)
out
sub
(bad)
jecxz
and
dec
sub
out
lds
cmc
add
or
popf
je
mov
push
out
clc
sub
popa
inc
cmp
sbb
cli
adc
dec
inc
mov
scas
mov
cmps
fimul
cmp
xchg
cmp
test
adc
adc
in
or
fisubr
ret
and
jne
jl
xchg
int3
pop
shr
push
inc
add
xor
retf
mov
sub
add
mov
cmp
mov
ret
xchg
jmp
(bad)
or
pop
jnp
into
or
iret
pop
jle
sub
cmps
lds
lds
or
les
and
je
push
dec
fldcw
xor
adc
dec
adc
xchg
out
pop
shl
xchg
mov
int
out
mov
repz
adc
cmp
sbb
mov
es
mov
sbb
(bad)
mov
ror
cmp
jbe
imul
ficomp
cmp
pusha
lea
pusha
pop
rcl
ror
shl
aad
push
or
pop
push
js
push
aad
jno
sub
adc
test
adc
in
vmread
mov
dec
sbb
or
add
pop
clc
add
stos
push
(bad)
add
retw
dec
punpckldq
test
loop
retf
and
inc
fdivr
mov
pop
pop
(bad)
jle
adc
mov
mov
jecxz
and
ret
movs
cmp
jmp
lea
dec
or
sub
pop
xchg
(bad)
ins
stos
mov
or
or
mov
pop
push
cmp
mov
jg
push
ins
inc
xor
and
movs
test
xor
lds
sub
jmp
iret
cli
jle
jne
test
ins
lahf
or
bound
scas
xor
test
push
xchg
movs
xchg
scas
dec
sub
cld
sub
mov
into
mov
adc
enter
retf
pop
and
sub
push
adc
sub
mov
dec
scas
test
xor
xchg
cmp
popf
dec
sahf
push
pop
pop
jbe
lea
mov
jmp
pusha
pushf
enter
sbb
or
jmp
sub
mov
repz
les
enter
inc
ret
lods
mov
mov
sti
and
cmp
fmul
jg
jle
sub
cmps
jns
rol
imul
dec
movs
push
add
gs
pop
fdivr
dec
popf
push
test
xor
pop
popa
push
pop
sti
xor
xchg
pushf
xchg
push
sbb
jle
jnp
mov
sbb
emms
mov
add
lds
stc
mov
or
aas
dec
enter
push
adc
rcl
sub
rcr
icebp
popf
push
xchg
push
push
mov
retf
or
dec
cwde
movs
push
and
add
xor
cmp
stos
mov
pop
and
fs
cmp
nop
sbb
pop
jae
movs
dec
xchg
sbb
push
pop
shl
cmp
(bad)
xor
lds
jne
dec
sbb
cmp
stc
pop
sti
jmp
stc
mov
sahf
push
cmc
mov
and
push
pushf
sahf
xchg
dec
sti
or
add
jns
or
push
cmp
mov
aad
adc
fwait
hlt
pop
pop
out
imul
pop
mov
imul
in
sbb
in
call
adc
adc
dec
push
xor
loope
xor
mov
ret
fld
push
and
fimul
test
movs
scas
pusha
shr
adc
stos
in
push
out
push
clc
sub
jb
xor
stos
shl
jmp
in
and
push
dec
ins
ins
imul
cli
loop
sahf
pop
fisub
push
cld
loopne
push
cmp
pop
sub
inc
lds
out
or
dec
or
mov
(bad)
push
pop
dec
xchg
aas
jb
mov
(bad)
sahf
jnp
or
leave
out
lahf
jle
jmp
ror
dec
pusha
ret
in
je
or
xor
xchg
int3
pop
push
clc
sbb
loopne
pop
cdq
out
fild
int3
pop
sbb
fistp
mov
push
xlat
lods
rcl
imul
test
lods
and
pop
test
or
mov
loope
adc
mov
cld
adc
cs
stos
lahf
movs
arpl
pop
ret
dec
inc
xchg
pushf
movs
outs
xchg
xchg
add
imul
call
test
jae
push
cmps
sub
dec
(bad)
gs
rcr
std
fild
(bad)
sub
jge
sbb
sbb
inc
iret
retf
pop
xlat
mov
sbb
cs
aaa
stos
fmul
cmp
cld
test
jle
inc
dec
cdq
xor
jmp
or
in
scas
jmp
push
pop
push
or
gs
xlat
test
fdivr
lods
and
shr
mov
inc
pop
inc
dec
mov
jb
sbb
(bad)
out
aas
imul
lds
aad
dec
sub
in
icebp
clc
(bad)
jbe
rol
mov
xchg
cmp
lea
(bad)
push
sbb
push
leave
xor
test
dec
leave
pop
addr16
repnz
push
cwde
neg
outs
mov
mov
(bad)
loopne
mov
jle
push
cmp
iret
das
jl
mov
push
enter
and
fild
push
cmps
jp
sub
(bad)
and
cdq
pushf
pushf
xor
(bad)
and
sbb
jl
or
rol
xor
xor
std
mov
sbb
das
mov
adc
shl
sub
imul
xchg
and
mov
or
fwait
jmp
hlt
xchg
inc
je
push
push
mov
jo
dec
and
xchg
sbb
xchg
and
pop
lahf
leave
sub
jecxz
xor
fwait
(bad)
in
fadd
nop
push
retf
int3
in
dec
int
inc
mov
jge
xchg
fidiv
add
cmp
add
cmc
std
(bad)
test
dec
cwde
pop
pop
rol
gs
cmp
sti
adc
and
pop
add
cmp
rol
in
out
sub
xchg
and
imul
xor
jge
shl
stc
rol
or
xchg
cwde
jns
cdq
retf
pop
xchg
shr
pop
adc
and
jnp
sti
mov
sbb
fadd
sub
xchg
fidiv
sbb
xor
es
inc
pop
xlat
mov
push
push
push
mov
dec
inc
sbb
xchg
js
shl
mov
lahf
cld
loope
sbb
push
aas
adc
imul
mov
xor
sub
(bad)
jae
xchg
mov
dec
mov
push
imul
std
sbb
outs
cmc
cmp
pop
or
arpl
jmp
push
and
pop
or
pusha
cmp
inc
gs
(bad)
pop
bound
sbb
iret
fs
pop
mov
add
je
adc
inc
mov
push
test
cli
popa
iret
int
inc
sti
les
in
aad
stos
test
fild
call
scas
fwait
inc
je
fdiv
int3
and
scas
ret
ror
ins
les
test
xor
xchg
xchg
fnstcw
cmp
push
xor
in
ins
add
ja
jge
in
ds
push
clc
call
jbe
out
xchg
sbb
pusha
mov
dec
inc
pusha
adc
stos
sbb
add
xchg
test
pusha
push
ret
jmp
lock
int
scas
in
mov
out
hlt
mov
leave
pusha
sahf
dec
add
clc
ins
xchg
stos
test
sub
sar
loopne
jb
and
cwde
jbe
enter
das
sbb
dec
imul
mov
fld
adc
pop
jo
mov
push
push
icebp
xor
sub
imul
xchg
fs
add
and
pop
pop
sahf
test
je
in
mov
ret
movs
xchg
sbb
xchg
mov
mov
mov
xchg
fldcw
popf
adc
(bad)
ret
dec
fs
add
daa
in
inc
jae
cmp
pop
inc
mov
mov
and
sbb
dec
mov
dec
into
push
iret
bound
mov
mov
or
jg
imul
xor
push
jmp
or
cdq
dec
add
fldz
jmp
mov
xor
mov
pusha
loopne
mov
imul
xchg
jns
jns
popf
popa
add
add
and
add
cmp
mov
ins
shr
mov
add
adc
vmulpd
repnz
pop
mul
loop
add
inc
scas
sar
dec
leave
shl
inc
scas
dec
dec
cmp
mov
mov
shl
jno
push
mov
adc
(bad)
mov
ins
jmp
jge
movs
in
jb
dec
xchg
sbb
mul
adc
xor
cs
ret
cmc
mov
cmps
mov
inc
movs
jne
rcr
cmps
jl
cmp
out
add
dec
mov
out
in
mov
(bad)
or
icebp
xchg
mov
pop
sti
sbb
ror
inc
ds
xchg
inc
loope
gs
(bad)
dec
xchg
mov
mov
cmp
cli
outs
jmp
jg
sahf
inc
lods
sar
xchg
rcr
pop
dec
cld
or
xor
mov
xchg
or
sbb
lods
movs
iret
cdq
xchg
mov
data16
mov
sbb
jne
add
xchg
sbb
dec
lock
pop
imul
ins
scas
in
mov
jmp
mov
and
jnp
loop
mov
ss
mov
or
cmps
or
jnp
fwait
xchg
out
mov
ss
(bad)
call
cmp
adc
pop
xchg
sbb
or
outs
(bad)
pop
adc
add
dec
pop
(bad)
sbb
cmp
sub
test
jo
push
retf
xchg
mov
xchg
loop
and
jmp
popa
mov
pop
pop
fisubr
icebp
aam
cmps
retf
adc
jns
stos
xor
test
mov
fs
push
popa
fdivr
pusha
mov
cmp
jp
cs
xor
dec
lahf
xchg
or
sbb
les
lock
jl
dec
lahf
pushf
es
aam
lods
(bad)
mov
add
xchg
jle
pop
dec
je
ins
imul
sahf
push
dec
test
bound
into
fcom
vpavgw
push
and
or
(bad)
in
outs
xchg
repz
and
mov
call
xor
rcr
sub
out
adc
adc
lahf
pop
scas
adc
push
push
add
mov
pusha
fs
sbb
sbb
shr
frstor
mov
cmp
mov
pop
pop
stos
pop
cld
scas
dec
ins
mov
mov
rcl
sub
mov
scas
out
xor
ins
out
das
sub
(bad)
test
rol
dec
fidivr
cmp
mov
push
aaa
sbb
stc
gs
push
push
aas
shr
rcr
or
sar
sahf
add
cmp
mov
and
scas
xlat
or
sbb
pop
sbb
sbb
dec
jae
push
in
pop
mov
(bad)
cmp
jns
rcl
xchg
sbb
sub
es
ins
cmps
inc
lahf
out
push
dec
inc
adc
or
int
mov
sbb
inc
ror
xchg
int
cwde
mov
cmps
push
push
enter
call
in
cmp
lods
fld
mov
loopne
bound
mov
xchg
dec
or
add
and
fidivr
push
fdiv
mov
movs
cdq
push
xor
jnp
xchg
pop
sbb
mov
out
xchg
mov
scas
inc
ss
inc
mov
(bad)
shl
adc
into
in
scas
add
push
inc
add
add
push
pop
jmp
jnp
popa
stc
sbb
adc
leave
cwde
(bad)
mov
inc
movs
lods
test
mov
out
add
add
adc
xor
mov
(bad)
jmp
lahf
adc
cmp
inc
in
cmp
push
je
dec
xor
loop
pusha
imul
adc
mov
mov
loope
mov
or
aas
push
(bad)
xor
xor
fwait
sbb
(bad)
in
sbb
inc
jns
fcomp
movs
retf
add
pusha
adc
pop
test
inc
lods
outs
and
outs
mov
(bad)
jmp
jecxz
dec
js
dec
mov
pop
mov
loop
test
(bad)
scas
in
ds
pop
sbb
jne
leave
sbb
loopne
arpl
(bad)
xchg
xchg
jno
sbb
mov
jle
add
call
dec
xchg
dec
shr
xor
push
push
or
xor
rcr
lods
mov
push
and
dec
retf
cmps
adc
shl
ficomp
sar
fisttp
inc
leave
push
mov
dec
mov
call
out
dec
xor
aas
in
imul
test
or
jmp
out
adc
cmps
jmp
pop
jns
(bad)
cmp
or
or
sub
arpl
ins
jns
mov
sub
pop
cmp
into
sub
(bad)
rcr
enter
jb
mov
xchg
cmp
imul
push
jl
hlt
out
hlt
call
jbe
jno
scas
or
cmp
xor
jns
icebp
push
out
fnstcw
cmps
and
pop
push
les
cmp
and
push
stos
xchg
lahf
gs
mov
(bad)
nop
ror
push
xchg
pusha
pushf
and
inc
adc
jo
test
pop
pop
scas
sub
popa
adc
in
dec
call
inc
and
retf
mov
sti
pushf
movs
(bad)
mov
xchg
jmp
(bad)
mov
xchg
push
sahf
fdivr
and
xchg
add
inc
push
sub
dec
and
aaa
mov
sub
je
adc
pop
and
cli
and
sar
jae
mov
xor
cmc
jnp
dec
xchg
jg
add
ret
push
cmps
jmp
std
dec
push
push
mov
inc
leave
pop
xchg
sub
sbb
adc
and
and
inc
jg
push
fldenv
cmp
mov
sub
mov
push
mov
int
adc
aad
pop
lods
fldcw
sti
or
inc
and
daa
call
xchg
push
jle
push
push
mov
popf
xor
adc
mov
mov
aaa
mov
xchg
fcomp
mov
pop
fwait
sub
aaa
pop
inc
mov
xchg
jb
stos
loopne
cli
in
cdq
fstp
cdq
inc
xor
(bad)
imul
xor
cmp
cwde
addr16
dec
retf
retf
push
out
push
xchg
mov
addr16
rcl
pop
inc
xchg
popf
cmc
xor
movs
push
or
inc
sub
daa
pusha
xchg
imul
xchg
xchg
xchg
shr
shr
das
pop
out
scas
and
test
sub
fsubr
xor
jnp
mov
or
cmp
icebp
inc
retf
push
je
(bad)
mov
cmps
mov
pop
dec
rcl
jge
pop
xor
out
fisttp
shr
dec
push
bound
out
jge
aam
(bad)
dec
mov
add
inc
ins
push
retf
mov
cs
clc
pop
jmp
mov
mul
rcl
pop
sbb
pusha
xchg
dec
fnstenv
in
jb
push
push
xchg
outs
pop
or
movs
mov
jnp
(bad)
mov
jns
mov
mov
or
jns
std
and
loope
retf
stos
pop
pop
jg
loope
clc
and
or
shl
shl
in
pushf
imul
int3
mov
fs
push
not
test
aaa
cwde
and
dec
add
xchg
aad
bound
dec
test
fistp
lods
fidivr
add
mov
xchg
or
jnp
test
mov
pusha
iret
ret
mov
push
dec
loop
mov
mov
mov
sbb
fimul
mov
fnstenv
pop
dec
test
inc
adc
scas
retf
push
dec
in
sbb
xor
out
mov
jnp
sub
mov
int
sub
imul
fist
addr16
jle
push
mov
push
xacquire
ret
inc
sar
enter
add
shl
mov
ins
ss
ss
xor
mov
leave
sub
push
mov
(bad)
pop
jns
imul
sub
adc
dec
mov
loop
(bad)
fwait
and
(bad)
mov
sub
les
dec
int3
bound
mov
lea
dec
xchg
cmc
mov
xor
(bad)
retf
inc
or
fstp
xchg
or
or
pop
xor
pop
pop
(bad)
jp
pop
jp
js
inc
adc
sbb
nop
ss
xchg
sub
enter
dec
pop
push
repz
mov
call
pop
cli
ds
call
sbb
mov
rol
sbb
mov
jg
xor
test
sub
mov
rol
ss
arpl
push
ins
lods
mov
retf
sub
mov
lds
push
out
(bad)
mov
adc
jo
inc
adc
xchg
lds
push
add
dec
xchg
inc
scas
popa
or
pusha
out
lea
ins
fwait
add
into
je
xchg
pop
and
inc
sub
pop
mov
pop
jl
cmp
cmc
stc
push
arpl
sbb
dec
into
pushf
sti
inc
lods
jmp
fidiv
sub
dec
hlt
jb
push
push
jl
and
pop
push
nop
(bad)
aad
les
repnz
dec
mov
jo
cld
mov
shl
cmp
and
dec
shl
mov
xchg
xor
movs
mov
out
imul
test
aaa
jno
cmp
pop
xchg
xor
les
sbb
mov
retf
aaa
push
jge
adc
mov
retf
and
dec
mov
mov
lea
xchg
test
ficomp
arpl
adc
bound
xchg
cdq
or
pop
shl
inc
jns
jbe
bound
je
adc
in
cs
add
stos
mov
cmp
mov
cwde
dec
add
neg
out
push
mov
adc
push
dec
xchg
dec
(bad)
mov
imul
cmp
repnz
xchg
out
mov
xor
fs
and
adc
je
movs
jle
push
xchg
mov
das
out
int
call
mov
jno
pop
sbb
mov
mov
pop
adc
adc
cmp
nop
mov
in
dec
sub
sbb
loop
test
sbb
add
out
push
sbb
cmp
or
pushf
loopne
aad
mov
popa
loop
xchg
adc
les
inc
adc
jns
mov
xchg
dec
jmp
push
movs
ins
xchg
js
ins
or
xor
push
nop
(bad)
lea
fisttp
ds
outs
add
jns
adc
push
sub
call
iret
aaa
(bad)
pop
jl
imul
retf
je
pop
stc
je
push
adc
cmp
pop
(bad)
arpl
xor
xlat
jne
jbe
jmp
arpl
mov
cmp
mov
sar
scas
jp
mov
sbb
or
stc
(bad)
cmp
aad
cmp
scas
and
inc
in
pop
aas
cmps
mov
xchg
mov
xchg
fdivr
bnd
es
out
dec
dec
sbb
sub
adc
adc
mov
cli
mov
adc
in
sub
stc
jne
mov
push
je
popa
jmp
xchg
stos
and
fdiv
ds
xchg
or
outs
ret
retf
jmp
mov
cdq
or
xchg
in
push
or
or
dec
sub
xchg
shr
scas
ret
mov
cmc
jb
test
sti
clc
add
sti
hlt
test
out
cmp
and
sub
fnstenv
popa
je
mov
or
jne
push
pop
iret
add
movs
fcomp
dec
retf
lods
xor
dec
push
mov
cmp
out
mov
pop
mov
jmp
enter
mov
and
xor
inc
jbe
cmp
outs
loop
out
pmovmskb
popf
lods
or
fstp
lods
ret
push
dec
inc
push
mov
mov
ja
and
jnp
jmp
ror
jne
arpl
xchg
(bad)
push
rol
popf
jb
dec
push
mov
pop
sub
pop
sub
mov
pusha
loop
ins
cmp
or
or
in
mov
jno
mov
inc
aam
loopne
or
(bad)
xor
out
xor
or
jmp
jecxz
cli
cmp
dec
add
cmp
dec
pop
adc
scas
test
lods
retf
add
jle
lds
pop
adc
mov
shl
dec
xchg
ins
icebp
xor
shl
sbb
inc
add
popa
add
cmp
leave
jns
sub
add
out
pop
test
add
mov
sbb
(bad)
out
add
mov
jmp
aaa
and
xor
xlat
sub
or
xchg
in
or
inc
(bad)
cmp
retf
in
xchg
loop
retf
pop
scas
data16
stc
inc
scas
mov
adc
jne
mov
and
fs
movs
xchg
sub
fstp
or
push
shl
adc
and
mov
in
sub
jo
jl
sub
mov
sbb
stc
mov
loopne
cmp
or
test
and
jmp
jmp
sub
jmp
cmp
mov
add
loopne
add
and
das
call
jp
cmps
and
mov
dec
sbb
fisttp
lods
gs
fnstsw
fstp
xchg
add
inc
mov
cmp
movs
ins
pushf
sub
pop
sub
push
ret
pop
push
mov
and
loopne
mov
jno
and
outs
jne
daa
jmp
cmp
xlat
(bad)
dec
loopne
jae
call
jno
aaa
jb
hlt
push
loope
test
xchg
stos
clc
and
xchg
lods
push
inc
add
outs
add
xchg
scas
xor
lds
sub
mov
and
fidivr
push
jp
jne
mov
ds
xchg
jo
xor
xchg
or
xlat
sub
out
in
and
or
mov
jg
and
jl
lods
xchg
loope
je
push
mov
cmp
xor
out
test
mov
mov
cli
arpl
imul
mov
movs
jg
ins
pop
scas
adc
stc
ret
mov
push
xchg
xchg
mov
mov
xor
cld
jecxz
inc
jle
daa
dec
mov
movs
shl
jnp
push
cmp
mov
lock
xchg
and
mov
sbb
or
mov
ss
test
push
adc
and
and
inc
rcl
sbb
outs
adc
movs
rcl
push
inc
sbb
jl
and
outs
or
cmc
cld
retf
cmps
inc
xchg
and
aam
cmp
sub
mov
dec
dec
or
call
jge
popa
imul
xchg
dec
mov
js
fsub
dec
xchg
mov
xchg
(bad)
add
shr
js
xor
fild
and
pop
cwde
rcr
movntps
mov
xor
outs
push
mov
fdivp
lea
inc
xchg
loop
push
push
shl
pop
loopne
pop
sbb
mov
inc
push
bound
sbb
xor
lahf
mov
fdivr
mov
call
inc
mov
std
in
cmps
mov
sub
retf
and
sub
sub
jp
mov
xchg
(bad)
sbb
scas
retf
xor
add
imul
popf
jb
in
test
fiadd
test
inc
or
xor
mov
into
fdivr
push
call
and
popa
cli
call
inc
pop
inc
xor
sub
or
test
adc
je
push
imul
out
mov
xchg
push
jle
inc
ficom
mov
pop
push
scas
xchg
ins
mov
test
xchg
mov
shr
scas
(bad)
jb
not
stc
loopne
mov
inc
xchg
or
into
test
retf
(bad)
mov
mov
int3
mov
cs
adc
rcl
jg
add
dec
pop
lods
pop
(bad)
or
lea
test
sti
ret
jg
lods
jmp
xchg
dec
xor
(bad)
xchg
dec
xor
adc
xor
dec
xchg
adc
pop
push
pop
xlat
and
add
xchg
add
push
dec
jne
mov
xchg
inc
mov
add
add
or
push
call
inc
jmp
test
shl
daa
sbb
sub
(bad)
popa
jbe
mov
rcl
frstor
mov
je
lods
adc
dec
(bad)
out
(bad)
aam
xor
mov
jmp
fnstsw
loop
outs
scas
iret
mov
cwde
xchg
mov
or
pop
cmp
push
(bad)
sub
push
mov
inc
data16
pop
xchg
arpl
inc
and
mov
mov
mov
cwde
dec
repz
ja
inc
mov
outs
inc
cmp
or
and
mov
rol
xor
mov
lahf
test
stos
shl
loopne
and
daa
mov
call
mov
ss
fidivr
push
push
repz
in
sbb
(bad)
out
hlt
movs
dec
mov
add
jp
push
or
mov
push
cdq
push
inc
push
mov
inc
test
(bad)
cli
xchg
mov
fwait
xchg
inc
xchg
pop
in
movntps
add
aam
add
dec
mov
push
(bad)
loopne
mov
retf
mov
stc
(bad)
sbb
push
not
call
pop
add
xor
data16
pushf
xor
or
push
inc
fst
adc
inc
mov
pop
(bad)
cdq
rcl
cwde
pop
cmp
int3
add
sbb
push
cdq
push
adc
xchg
repnz
mov
push
sbb
ds
push
sub
call
mov
pop
js
repnz
xor
sub
mov
inc
popf
mov
inc
call
dec
call
adc
mov
add
repz
out
jecxz
movs
push
push
imul
xchg
cmps
mov
gs
pop
jle
pcmpeqb
cmps
pusha
lds
pop
xor
nop
sar
dec
lds
(bad)
jg
adc
lea
push
mov
je
inc
ss
stos
jg
xor
dec
js
inc
mov
jbe
xchg
push
or
mov
(bad)
mov
adc
stc
movs
sub
rol
adc
out
cwde
jge
mov
xchg
push
mov
adc
mov
xchg
out
xor
repnz
test
ins
das
pop
sub
sti
stc
push
xlat
das
stos
cmp
jg
jnp
jnp
mov
and
xchg
pop
not
sub
add
mov
aad
push
mov
in
out
cmp
les
retf
(bad)
imul
imul
mov
arpl
call
int
fild
jne
ret
push
push
xor
and
push
movs
jo
cmc
push
into
sub
xor
ja
fmul
(bad)
or
enter
outs
add
call
and
inc
retf
pop
cmp
push
push
mov
out
cmp
fbld
mov
(bad)
je
adc
dec
shr
fsubr
cmp
inc
mov
out
inc
pop
xchg
mov
xor
adc
inc
aas
iret
cmp
jo
je
es
cld
mov
fldenv
pop
dec
ja
add
xchg
je
test
outs
out
xor
xor
fild
jo
add
jge
push
imul
retf
jne
jbe
out
sbb
mov
out
or
pop
sbb
pop
(bad)
cli
jae
ret
(bad)
push
inc
ss
xchg
xor
pop
loop
pop
fisubr
into
push
and
loope
adc
scas
push
xchg
jno
out
push
ss
dec
neg
xor
jle
cld
xchg
int3
jmp
xor
test
outs
jp
sbb
cmps
nop
mov
out
loope
bound
test
das
in
and
jnp
mov
gs
gs
stos
iret
jnp
jp
xchg
out
not
mov
jns
xor
sti
outs
ja
(bad)
fnstcw
scas
push
or
in
aaa
mov
jmp
outs
and
lods
and
pop
or
sbb
and
scas
cmp
inc
fwait
push
jnp
mov
inc
gs
xor
jb
or
ret
xor
ffreep
scas
jmp
jecxz
xchg
fs
test
movs
aas
lahf
cmp
jp
or
loopne
and
push
in
pop
(bad)
stos
addr16
aaa
adc
imul
jnp
push
inc
xchg
jae
push
mov
push
xor
lahf
pop
dec
js
and
and
sbb
arpl
xchg
jp
scas
adc
ret
ds
jmp
sar
jmp
mov
and
ds
les
lock
sbb
out
out
scas
xlat
or
push
jo
je
int3
sar
mov
inc
push
aaa
push
push
fwait
or
cld
dec
pop
cmps
or
push
pop
inc
imul
xchg
lods
rol
xchg
and
inc
adc
retf
enter
int
addr16
rcr
cdq
cmc
fstp
cmp
add
out
or
mov
dec
enter
mov
pop
pusha
idiv
sub
mov
adc
push
out
pusha
data16
xchg
sub
mov
test
mov
pop
add
pop
imul
xchg
add
pop
mov
enter
call
add
jnp
call
into
hlt
hlt
repz
movs
jecxz
fistp
loop
xchg
push
fs
imul
in
push
(bad)
sub
sub
push
arpl
mov
repz
int3
je
inc
leave
add
cs
inc
cmp
les
jo
dec
sahf
jae
pusha
lods
cwde
aad
sahf
lahf
aas
aaa
fstp
mov
into
jb
test
or
mov
xor
jmp
cmps
mov
outs
and
bound
jb
dec
js
scas
outs
dec
das
addr16
data16
fsub
call
sti
aad
pop
shr
mov
jns
div
notrack
adc
inc
inc
dec
sbb
cli
sub
xchg
sbb
pop
imul
lock
scas
imul
xor
jmp
dec
push
int3
dec
dec
and
ds
mov
jecxz
pop
or
push
mov
add
movs
enterw
mov
push
xor
ficomp
add
sbb
fcom
scas
mov
ja
inc
std
adc
call
fsub
and
or
repnz
pop
cli
mov
xchg
lahf
es
out
movs
mov
rcl
loope
jnp
sbb
test
xor
je
mov
inc
push
shr
xchg
mov
mov
cwde
pop
mov
sub
xor
fidivr
fwait
jb
xor
cwde
repnz
and
clc
arpl
vhsubpd
ds
pop
pushf
pop
jge
das
xor
cs
mul
ja
push
xchg
inc
stos
pop
sub
retf
push
js
mov
add
test
xchg
stc
addr16
(bad)
sahf
xor
inc
mov
cli
in
js
mov
shr
xchg
cmps
cmps
in
retf
dec
jecxz
in
mov
outs
push
jmp
mov
sar
fs
gs
mov
add
pop
push
mov
into
lock
push
xchg
aam
inc
jle
xchg
pop
lahf
adc
aad
mov
or
or
test
push
dec
repz
fisubr
sbb
mov
sti
cmc
pop
aad
das
xor
xchg
shr
dec
mov
ds
cmp
jo
sbb
sub
mov
dec
sub
(bad)
out
xchg
pop
scas
fdivr
mov
adc
fs
repz
inc
enter
mov
cmp
mov
sub
lea
inc
or
xchg
adc
cmp
ss
sub
xor
call
data16
cwde
mov
cmp
imul
fadd
pop
out
(bad)
retf
pop
xchg
push
repnz
sub
mov
clc
jnp
push
inc
pop
lea
aam
xor
ins
sar
jns
daa
dec
cmps
(bad)
loopne
mov
mov
push
sbb
jne
sbb
ret
add
jp
add
mov
xor
lods
and
inc
add
lahf
or
stos
push
ins
pop
xor
loopne
scas
aad
test
data16
xlat
push
mov
ficom
aam
cdq
scas
nop
and
movs
cs
add
push
bound
mov
add
out
repz
pop
xor
call
shr
add
cmp
add
inc
xchg
mov
sub
jne
dec
inc
or
aaa
in
nop
jns
xchg
xchg
or
in
push
adc
push
xchg
in
je
enter
or
xor
cmc
mov
and
sub
loope
sbb
cmp
hlt
unpckhps
sbb
scas
pop
loop
inc
(bad)
mov
pop
lds
addr16
in
and
outs
xlat
xlat
(bad)
hlt
mov
fmul
mov
xor
lods
(bad)
lock
test
or
adc
fs
arpl
xor
add
xchg
push
lods
inc
mov
das
add
(bad)
or
mov
retf
add
shl
push
lods
sbb
dec
cli
daa
sar
or
inc
dec
dec
mov
mov
mov
loope
dec
mov
test
outs
pop
xchg
or
loope
daa
ja
ds
xor
inc
scas
mov
sbb
sti
fdiv
stos
pop
xchg
or
push
mov
cs
push
or
push
out
lods
jno
aas
idiv
mov
mov
inc
inc
icebp
inc
stc
mov
dec
imul
add
movs
fcomp
jp
cmp
ins
rcl
int
dec
loope
pop
sub
push
cwde
inc
stc
ins
in
jmp
stos
js
or
das
sub
mov
je
cmp
fidivr
cmps
inc
movs
xchg
loopne
xor
fs
aaa
sub
inc
mov
inc
inc
leave
ficomp
dec
lods
stc
dec
stc
cmp
clc
(bad)
sbb
cli
cli
jecxz
jo
into
ret
adc
movs
push
or
or
fnsave
ins
ror
mov
jne
xor
mov
cmp
imul
add
cwde
dec
adc
pusha
sub
cmp
push
or
xor
repnz
(bad)
xor
(bad)
and
sti
pop
out
retf
push
jnp
es
js
sub
stos
fs
cmps
dec
sbb
xchg
imul
repz
cmc
mov
add
pop
repz
std
movs
daa
call
add
movs
jb
xchg
lods
mov
mov
push
or
pusha
mov
jno
jl
inc
cmp
mov
adc
dec
mov
sub
mov
dec
jo
test
cmp
add
jl
cdq
mov
(bad)
mov
add
rep
adc
mov
shr
movs
dec
fdivr
xchg
gs
stos
inc
sub
clc
sbb
and
push
xchg
inc
sahf
clc
and
movs
call
mov
imul
hlt
mov
jbe
mov
mov
dec
adc
jo
stos
mov
jmp
hlt
pop
push
imul
int3
cmp
dec
fs
mov
add
imul
dec
popf
dec
cdq
push
and
test
hlt
add
fcomp
pushf
adc
(bad)
lea
adc
inc
mov
and
jo
xchg
push
add
mov
jae
retf
fisub
ja
or
test
movs
ret
icebp
or
(bad)
rol
mov
inc
fstp
ret
es
in
dec
adc
ficom
scas
retf
lahf
sbb
mov
retf
pop
adc
stos
cmp
sbb
and
js
or
push
outs
pop
push
jp
in
dec
lods
and
pop
repz
(bad)
sbb
add
jbe
adc
jg
sbb
hlt
movs
js
pop
fmul
jg
mov
ss
jns
std
stos
xor
(bad)
or
xor
lods
dec
clc
mov
and
cs
inc
xchg
jmp
add
pop
iret
add
mov
data16
fs
sub
push
xchg
fstp
je
enter
mov
cmp
add
fsub
xor
sub
fst
icebp
es
test
jo
xchg
sbb
in
inc
xchg
pop
cwde
pop
dec
xchg
in
xor
pop
add
xchg
adc
mov
fsub
sbb
jns
fs
test
xchg
cmps
ror
mov
and
sub
aas
mov
mov
sub
mov
pop
popf
jg
jbe
lea
loopne
je
test
push
lods
jno
outs
pop
push
adc
mov
mov
dec
xor
in
cmp
xchg
nop
cmp
mov
jmp
bound
jmp
cmp
mov
jb
dec
or
cmps
pop
lods
jmp
add
mov
xchg
fsub
test
add
icebp
(bad)
pop
pop
int
cmp
sbb
sbb
inc
fwait
test
push
or
sahf
pop
sub
sti
inc
std
cdq
xor
or
lock
xchg
(bad)
mov
adc
scas
push
adc
lods
shr
jp
nop
mov
cs
sbb
pop
mov
mov
call
sub
sub
mov
stos
cmp
mov
in
and
dec
cmp
mul
sub
mov
in
ins
pop
ins
es
cmp
sub
xchg
mov
push
pop
inc
out
bound
pop
xchg
dec
sub
shl
xor
bound
lahf
pop
xchg
and
jg
cmp
inc
dec
mul
retf
sub
jle
es
pushf
push
loope
push
xor
sbb
mov
push
pop
pusha
in
cmps
les
sbb
dec
dec
ja
cmp
adc
fsubr
ror
ret
sbb
in
lahf
push
xchg
aam
sbb
test
sbb
xor
pop
cmp
(bad)
inc
imul
adc
imul
sub
jns
jnp
cmp
scas
mov
dec
daa
pushf
pop
and
outs
sub
shr
int
not
push
out
mov
and
test
and
sar
mov
cmp
jl
ucomiss
gs
popa
popf
outs
ins
mov
add
pop
cmp
jmp
sbb
repnz
popf
loope
jl
xlat
push
xchg
popf
loop
mov
lock
fdiv
jmp
mov
adc
sar
mov
pop
add
jl
push
or
shl
xchg
fdivr
fldpi
mov
push
mov
mov
mov
pusha
inc
out
sbb
enter
in
cmps
dec
jle
outs
in
push
mov
popf
lods
cmp
std
imul
xor
inc
mov
std
(bad)
add
cdq
xchg
cmp
loopne
adc
xchg
xor
xchg
ss
push
push
mov
pop
dec
enter
pop
test
test
test
sar
jo
mov
add
pusha
(bad)
cld
sub
cmp
gs
mov
dec
lds
xchg
jo
jns
imul
(bad)
xchg
cmp
dec
sahf
fmulp
jp
adc
and
out
sar
(bad)
sub
lock
mov
xor
and
test
inc
mov
lock
mov
fbstp
call
rcl
or
add
xchg
cmp
xor
test
mov
or
mov
xor
shr
mov
lods
arpl
sbb
inc
fld
inc
(bad)
sub
je
mov
fs
imul
or
scas
ja
dec
into
or
push
fbld
(bad)
mov
out
cmp
cmp
adc
sub
cli
or
(bad)
outs
sbb
adc
mov
adc
dec
into
out
add
jo
inc
add
mov
cmp
shl
pop
jp
ret
xlat
into
sbb
dec
and
push
mov
sub
scas
int3
(bad)
adc
push
mov
inc
sahf
cdq
sub
ss
jg
inc
adc
pushf
pushf
sbb
xor
fs
loopne
call
jmp
cmp
xor
and
test
(bad)
dec
jmp
cs
inc
enter
(bad)
int3
call
adc
in
hlt
xchg
shr
cmovle
xlat
jle
or
ds
scas
sbb
adc
mov
jns
aad
out
ror
mov
es
movs
fcom
and
sbb
xor
ret
iret
idiv
jp
sti
movs
sub
cli
shl
cdq
cwde
cld
shl
push
mov
cmp
cmps
push
into
in
jb
test
enter
sbb
jo
sub
push
pop
cmc
cmc
add
fwait
jl
gs
gs
lahf
icebp
pop
xor
xchg
fadd
fsub
(bad)
mov
sahf
jnp
push
retf
in
lods
sahf
(bad)
fld
sbb
rcr
mov
mov
jb
icebp
jl
xchg
mov
push
arpl
sbb
outs
scas
out
add
daa
loop
arpl
mov
cmp
fcom
cmps
sbb
mov
or
dec
mov
cmps
repnz
inc
into
jo
fcom
test
jne
mov
gs
xchg
inc
retf
stc
les
add
(bad)
or
dec
push
add
loope
xchg
add
mov
cli
dec
aas
mov
push
pop
inc
push
mov
mov
das
push
jmp
pop
pop
lods
inc
hlt
sub
ret
fwait
push
or
mov
leave
bsr
xor
mov
hlt
sbb
(bad)
pop
adc
pushf
xchg
mov
or
mov
sub
idiv
pop
sub
or
pop
arpl
lds
xor
mov
mov
pusha
mov
ret
push
add
pop
outs
stc
fs
cmps
sub
mov
add
lds
mov
sbb
xchg
or
push
ins
inc
jecxz
mov
movs
bound
pop
jp
pushf
or
pop
sbb
or
cld
loopne
retf
hlt
and
pop
cmp
dec
jl
push
iret
inc
push
add
adc
add
ss
mov
jmp
xchg
adc
hlt
loopne
(bad)
add
mov
ret
ins
mov
ins
or
ficom
pop
and
cmps
retf
dec
xor
rcr
mov
cdq
sbb
mov
call
sbb
jno
xchg
jbe
add
outs
mov
cmp
lods
cld
dec
sbb
lods
loope
stos
shr
lods
sub
mov
sbb
cli
jnp
lahf
shl
mov
sti
inc
(bad)
sar
ins
ret
daa
cdq
push
dec
mov
sub
test
lahf
xchg
jecxz
push
(bad)
not
mov
mov
mov
mov
js
xchg
and
mov
(bad)
stc
adc
push
jbe
xchg
pop
xor
cmc
dec
hlt
xor
sbb
sub
ds
lahf
pusha
popa
and
mov
sbb
xor
fwait
push
fisubr
es
inc
adc
(bad)
cmp
(bad)
jno
and
add
call
fmul
scas
std
(bad)
jmp
aaa
lds
xor
cmp
imul
push
sbb
ja
push
mov
daa
inc
fisubr
xor
inc
imul
mov
into
scas
pop
sub
jbe
inc
mov
xor
mul
cli
add
dec
xor
mov
sbb
pop
mov
mov
add
push
xchg
or
shr
jecxz
pop
push
gs
add
jmp
dec
xchg
test
dec
dec
pop
(bad)
jno
pop
sub
xor
loope
setno
mov
ins
stos
(bad)
icebp
in
inc
and
mov
push
inc
push
xchg
int3
fwait
into
adc
jo
pop
loop
mov
lods
xchg
dec
xor
ror
inc
cwde
addr16
push
shl
or
xchg
and
add
mov
inc
sbb
jmp
(bad)
out
jae
rol
jmp
sbb
push
fmul
into
add
push
test
gs
jge
movs
stos
pop
mov
int
add
test
icebp
or
pop
jecxz
jg
arpl
rcl
dec
mov
aad
loop
fidivr
aad
cmp
ds
sbb
fcomp
retf
out
pop
imul
jbe
or
jne
mov
jp
mov
xor
pushf
test
addr16
jecxz
dec
inc
add
mov
inc
xor
mov
(bad)
mov
mov
xchg
jne
aam
(bad)
repz
push
nop
xor
scas
dec
ret
mov
out
xor
push
das
gs
or
mov
adc
sahf
rol
jmp
icebp
mov
xor
jl
xor
cmp
data16
arpl
mov
cmp
cmps
call
shl
(bad)
adc
xor
push
nop
adc
in
cs
xor
inc
xchg
jg
retf
cmp
mov
jae
mov
adc
adc
in
jl
xchg
inc
jbe
mov
out
push
movs
sti
sbb
rol
(bad)
jg
inc
jecxz
dec
and
gs
pop
mov
push
pop
adc
jo
outs
ins
dec
sub
inc
push
push
or
sub
jmp
fimul
ja
pop
add
sub
cs
mov
pop
fs
das
fnstcw
inc
fs
loopne
addr16
mov
mov
fsub
push
jae
adc
xlat
jp
sti
xchg
mov
jne
cmps
sub
mov
ja
ffreep
cli
retf
jne
sub
adc
loopne
push
adc
add
sbb
je
push
imul
lea
jns
icebp
ins
cmp
push
in
nop
inc
in
ja
retf
lds
push
adc
dec
leave
lds
lods
jae
mov
jae
fxch
lea
jbe
pop
loopne
xlat
jbe
loop
retf
mov
ss
gs
mov
mov
add
add
xchg
scas
sahf
mov
jg
jb
repz
mov
jnp
cs
xchg
das
cmp
js
mov
pushf
fadd
int
add
and
das
jbe
and
cmp
mov
adc
fwait
loopne
push
mov
sbb
mov
mov
daa
dec
add
(bad)
cmp
jns
aaa
nop
cmp
adc
dec
push
dec
mov
adc
cdq
sub
call
pop
mov
pop
test
dec
mov
jbe
mov
mov
jmp
xchg
les
cmps
repz
data16
push
popf
clc
mov
test
cli
div
xor
jg
pop
jne
sbb
add
or
cmc
mov
push
fwait
sar
mov
ja
aas
dec
ins
cld
pop
cmp
cmps
and
out
mov
sub
enter
enter
push
jo
ret
sub
imul
mov
pop
adc
sahf
mov
loope
xchg
pop
adc
(bad)
fst
add
test
and
fcomp
push
push
cld
ja
js
or
jae
dec
sbb
mov
in
gs
pushf
fmul
stc
push
sar
inc
movs
xor
mov
gs
fmulp
ror
fsub
pop
rcr
inc
pop
mov
mov
hlt
pop
xchg
mov
push
adc
and
in
loope
mov
xchg
das
pusha
cs
pop
push
js
xor
cdq
push
cdq
sbb
out
icebp
mov
inc
add
fiadd
dec
movs
jb
push
call
and
in
in
xor
adc
pop
addr16
add
mov
fcomp
pop
push
adc
ins
lock
dec
bound
imul
jecxz
ficom
popf
sti
lock
mov
adc
scas
data16
jmp
repnz
xor
gs
sbb
outs
ss
xlat
ins
inc
aas
popf
into
mov
xchg
in
dec
loopne
sahf
cdq
mov
sbb
push
sbb
mov
xor
movs
and
les
sbb
sar
push
jb
nop
neg
retf
sar
stos
mov
xchg
aam
std
std
lds
cdq
jmp
mov
add
int3
adc
test
push
sbb
iret
rcl
jp
jge
jge
jb
xor
xor
in
dec
xor
add
or
sbb
jnp
pop
pusha
add
push
nop
xchg
jnp
push
or
pop
rcr
lds
imul
or
sti
fimul
(bad)
inc
das
jmp
xchg
sbb
add
sbb
cmp
dec
(bad)
leave
jae
aam
aas
xchg
and
mov
out
jno
into
pop
cwde
jnp
loopne
test
mov
adc
inc
jp
mov
pop
int3
push
inc
call
xor
icebp
(bad)
out
cvtps2pd
ss
clc
pop
out
fild
jp
ds
sub
les
dec
ja
xor
cmp
mov
out
push
les
xlat
nop
inc
retf
mov
clc
(bad)
std
or
mov
mov
dec
xchg
dec
adc
and
jle
sar
mov
sbb
inc
adc
or
int
loope
add
ret
jmp
adc
adc
sub
xchg
dec
sbb
dec
pop
adc
xchg
dec
jb
mov
mov
scas
adc
loope
cwde
sbb
nop
inc
xchg
fsubrp
inc
sahf
ret
sbb
in
fs
dec
scas
bound
ds
call
adc
jno
push
mov
mov
jle
ret
add
jge
daa
adc
cmp
inc
es
fimul
in
popf
inc
mov
mov
ret
addr16
std
das
push
push
into
sbb
push
inc
or
inc
fxch
in
int
jne
ins
xchg
clc
out
gs
and
xchg
int
pop
push
mov
adc
popa
push
sbb
repz
jp
movs
sub
cmps
popa
add
test
jbe
(bad)
enter
sub
or
sar
push
sti
pop
and
xor
mov
push
hlt
cli
sub
xor
(bad)
fbld
sub
mov
and
ins
div
sub
sbb
aaa
mov
test
sti
mov
bound
(bad)
and
jmp
jecxz
pusha
pop
xor
aam
jnp
xchg
adc
int
xchg
dec
dec
cmp
test
inc
outs
pop
mov
adc
sbb
cmc
mov
jae
fisttp
loopne
mov
cld
ret
pop
pop
sub
pop
and
jb
enter
dec
and
mov
sahf
add
loope
mov
aas
jl
mov
add
das
(bad)
mov
sub
out
repnz
int
push
dec
jne
dec
aas
jo
xchg
xor
jmp
cmp
jle
cmp
inc
sar
jp
lds
mov
movs
jbe
cmp
not
test
dec
pop
neg
mov
pop
cmc
jg
ss
pop
inc
scas
pusha
adc
ror
dec
and
jb
pop
aaa
(bad)
pop
pushf
cmps
push
xor
sbb
inc
dec
int3
jne
ins
inc
xlat
push
les
xchg
int3
test
imul
je
mov
in
fcom
dec
(bad)
pop
and
and
mov
(bad)
xchg
loop
test
shl
mov
inc
retf
je
sbb
rcl
and
mov
int3
sub
loopne
push
loopne
xchg
push
loope
outs
gs
dec
inc
mov
cmp
or
clc
int
lods
mov
aas
test
iret
fistp
mov
scas
and
inc
fwait
sub
mov
outs
mov
hlt
fiadd
mov
mov
retf
inc
jae
jns
sub
(bad)
jecxz
jb
aad
and
loope
pop
push
test
enter
and
mov
or
inc
enter
stc
push
lds
imul
stc
jle
repz
shl
int
and
loope
add
xor
(bad)
(bad)
stc
out
fcmovne
call
jmp
add
xor
retf
retf
or
jle
xchg
and
pop
in
dec
cwde
push
push
test
jae
dec
add
lods
fistp
lock
inc
cmp
popf
mov
add
mov
adc
and
xchg
mov
add
ja
retf
push
dec
test
add
adc
ins
ror
std
mov
cmc
jbe
mov
imul
push
adc
scas
cmp
int
int3
cmc
jecxz
rcr
hlt
sbb
mov
ins
adc
rcr
mov
lods
iret
cmp
jmp
imul
cdq
in
ins
cmp
ret
add
cmp
push
lock
mov
scas
lods
or
add
aaa
mov
pop
inc
and
sbb
mov
lea
jo
int3
ins
sahf
mov
std
adc
lock
pop
xlat
sbb
xor
bnd
and
out
mov
mov
movs
loope
push
push
std
out
xchg
dec
rcl
cwde
mov
adc
gs
sub
pop
pop
and
xchg
mov
out
cmps
aam
cmp
push
push
cmp
in
fist
pop
popf
gs
arpl
mov
push
fist
pusha
add
sbb
mov
add
inc
add
cmp
mov
stos
neg
sub
(bad)
fisub
idiv
std
in
mov
lahf
jno
xor
inc
imul
xchg
ret
or
push
or
pop
daa
test
and
mov
dec
in
movs
loopne
push
xor
push
mov
jmp
xchg
adc
hlt
scas
scas
dec
push
leave
mov
xchg
cmps
pop
in
repz
retf
or
sbb
inc
adc
fdivr
xchg
sub
jg
xor
pop
(bad)
xchg
pop
and
add
and
and
xor
lods
fisubr
and
mov
adc
xor
in
je
push
inc
mov
jo
jl
push
and
pop
cmps
mov
enter
outs
out
rep
mov
in
sbb
lock
in
into
and
xchg
aam
or
fistp
mov
dec
or
les
inc
pop
test
sbb
(bad)
std
jg
stos
sub
in
adc
test
adc
dec
packssdw
dec
xchg
or
xor
arpl
sbb
outs
xchg
stos
push
jbe
ja
jns
dec
fld
in
sub
(bad)
(bad)
add
cld
and
pop
popa
or
lods
(bad)
test
mov
jge
xchg
ss
popa
inc
xchg
add
pop
call
inc
adc
(bad)
push
pusha
je
ficomp
adc
std
cdq
lods
adc
in
out
retf
sub
xor
iret
xchg
sbb
push
hlt
imul
mov
repz
jle
xchg
(bad)
mov
mov
push
adc
dec
rol
imul
cmp
inc
les
xchg
repnz
das
inc
mov
sbb
inc
jmp
jno
out
sub
(bad)
(bad)
cmp
test
iret
daa
mov
jns
xrelease
in
es
jl
mov
rol
push
dec
into
aas
inc
out
ja
sub
outs
jb
loop
scas
or
add
push
adc
fwait
mov
sbb
adc
nop
mov
(bad)
mov
es
jmp
inc
or
or
dec
mov
aam
sbb
call
jnp
out
cmp
lahf
push
jnp
mov
cmps
shr
(bad)
lea
push
mov
sbb
lahf
inc
out
retf
pusha
adc
jbe
fst
mov
shl
pop
sub
ins
cmp
mov
and
leave
std
cdq
pop
dec
cdq
push
jbe
mov
xchg
test
adc
mov
dec
xor
inc
test
fiadd
adc
fld
mov
sbb
fs
ret
sbb
sbb
cmp
xor
sti
fcomp
mov
and
and
test
iret
or
stos
xlat
int3
or
ja
add
xor
jnp
in
mov
push
cmp
sub
dec
das
idiv
sahf
dec
test
aam
scas
xor
add
dec
mul
dec
fstp
xor
pop
js
test
and
add
addr16
(bad)
cmp
adc
aas
fld
sbb
or
lds
mov
test
mov
jge
mov
mov
xor
inc
pushf
cwde
mov
pop
xor
push
mov
stc
mov
pop
dec
dec
push
dec
dec
aas
adc
and
push
sbb
pop
int3
int3
cmp
retf
push
adc
pop
xchg
movs
cmps
cmp
das
ret
xor
jecxz
xchg
cmp
add
pop
sbb
xor
push
ins
aas
and
sub
pusha
adc
add
mov
dec
gs
push
(bad)
(bad)
adc
ror
push
mul
inc
stos
xlat
xlat
push
fidiv
mov
lods
cld
dec
push
icebp
cmp
dec
xchg
retf
inc
sbb
xor
mov
(bad)
(bad)
xchg
cmps
pop
push
mov
xchg
ins
push
mov
sti
or
xchg
movnti
clc
sar
stos
dec
mov
scas
retf
iret
jle
shl
mov
push
in
inc
outs
sub
test
test
xor
mov
fcompp
sahf
cmp
pop
mov
pop
jno
pusha
xor
ret
mov
xchg
jge
dec
ins
add
sbb
adc
fcomp
add
mov
jne
popa
ss
addr16
and
mov
scas
jle
addr16
push
rcl
leave
test
(bad)
jge
movs
or
mov
jae
scas
shl
dec
test
repz
lods
mov
data16
sub
test
(bad)
jae
cld
loop
and
shl
jg
adc
and
test
in
sbb
inc
scas
adc
sbb
and
rol
or
aam
mov
xor
rol
xor
jge
sub
or
sub
sbb
leave
pusha
xchg
mov
dec
sbb
sbb
xor
push
inc
pop
push
fidivr
dec
xchg
pusha
loopne
mov
(bad)
fidivr
push
ins
or
add
fld
xlat
mov
mov
sbb
mov
in
adc
xchg
out
imul
or
add
adc
ja
call
sub
test
into
retf
pop
add
clc
jne
mov
adc
dec
xor
jns
popa
popa
pop
imul
cmps
popa
je
in
rol
push
sbb
ja
sbb
mov
lds
add
jns
stos
sub
mov
popa
cmps
xor
ret
mov
test
push
test
cs
pop
je
pop
mov
sub
repz
hlt
push
(bad)
lock
(bad)
retf
out
out
sub
push
arpl
mov
popa
scas
push
lock
jns
ja
test
hlt
xchg
mov
jae
out
cmps
adc
push
nop
cmps
dec
mov
dec
xchg
and
test
xlat
mov
inc
ret
pushf
pop
xor
call
push
push
fwait
pop
mov
pop
xchg
loope
jmp
mov
jne
jns
push
dec
loopne
(bad)
cmp
jae
(bad)
fwait
mov
lods
aas
jecxz
(bad)
outs
and
and
cmp
pop
cmp
jae
pop
mov
xchg
sbb
mov
js
shl
jl
cmp
jns
mov
xor
pushf
cmp
jmp
das
mov
mov
cdq
and
mov
lods
inc
loope
push
je
or
loope
jbe
sti
pop
add
and
sub
movs
repz
xor
test
cmp
popf
(bad)
dec
ror
div
dec
inc
add
pop
inc
loop
fisttp
ret
int
adc
pop
movs
mov
es
repz
dec
cli
cld
inc
js
sar
cmp
popa
lahf
inc
pop
and
push
in
pop
adc
mov
pop
sbb
xor
dec
aaa
jb
leave
push
scas
jmp
pop
sbb
or
sbb
les
push
ds
fcomp
mov
pusha
jg
int3
xchg
rcr
add
iret
sbb
bound
xor
data16
ret
xchg
xchg
ds
jmp
xchg
and
cmc
sti
sub
(bad)
retf
xchg
inc
ins
jmp
push
xchg
jns
add
fld
js
enter
jecxz
inc
dec
cmc
movs
and
add
pop
aaa
retf
inc
inc
mov
and
push
fild
int
lar
sub
movs
imul
test
jecxz
inc
xor
pop
and
add
xchg
adc
dec
sbb
cld
or
push
outs
inc
jno
and
stos
jmp
out
mov
jle
sub
repnz
iret
adc
inc
popf
popa
mov
xchg
xchg
imul
outs
inc
add
adc
and
mov
addr16
test
pop
retf
sahf
rcl
mov
retf
int3
or
add
mov
shl
jmp
push
push
div
ret
aaa
xchg
and
out
scas
sbb
jbe
mov
jmp
add
(bad)
and
xor
mov
ins
sub
xor
xchg
jmp
mov
xor
adc
dec
stos
aam
data16
outs
sbb
cmp
cmp
dec
into
in
xchg
(bad)
aad
xor
pop
dec
(bad)
loopne
mov
pop
or
lds
fdivp
imul
pop
xchg
loope
dec
or
push
arpl
sti
jmp
test
adc
mov
and
(bad)
outs
push
adc
adc
stos
or
repz
push
inc
ds
sub
mov
xchg
jno
call
lea
mov
mov
lods
in
push
sbb
xor
or
jge
push
mov
in
cmp
pushf
out
jb
fwait
bound
mov
outs
adc
ror
iret
sub
add
xor
aaa
sahf
push
outs
push
adc
sub
sti
xchg
and
mov
lea
cmc
cmp
jbe
int
lods
dec
test
scas
repnz
outs
pusha
ror
dec
pop
cld
dec
add
xchg
(bad)
ror
or
cmp
cmp
sbb
xor
sahf
ds
mov
js
xchg
das
sahf
in
sub
ror
sbb
and
jae
jbe
mov
xor
clc
cmc
es
xor
sbb
adc
pop
out
ja
and
pop
push
jp
jnp
push
test
retf
mov
sar
xor
adc
ss
mov
pop
add
(bad)
xlat
fcomp
nop
jl
mov
sbb
imul
adc
lods
adc
mov
outs
add
sbb
pusha
(bad)
mov
movs
pop
in
fwait
mov
sbb
jb
int3
cs
outs
call
pusha
rcl
inc
pop
sub
xor
ja
xor
add
jp
cmp
fcom
es
rcr
sub
cmps
dec
mov
add
mov
or
in
mov
sbb
test
pop
lods
mov
arpl
popf
jecxz
cwde
pop
loope
out
mov
pop
je
push
xor
fldcw
xchg
jle
outs
gs
mov
or
ins
push
or
leave
push
rcr
aam
bound
pushf
pop
cli
xchg
test
cwde
sbb
aam
cdq
retf
xor
push
test
repnz
(bad)
mov
jne
fwait
mov
mov
sar
push
cmc
and
or
add
(bad)
sahf
xchg
repz
cmps
jmp
add
sub
pop
xor
das
sbb
pusha
push
je
sbb
stos
shl
jmp
ss
xor
lds
dec
add
cmp
or
or
test
cmp
inc
pop
inc
xor
imul
pusha
test
ins
push
inc
adc
fcomp
inc
stos
(bad)
sub
cmp
mov
mov
adc
add
test
mov
(bad)
movs
mov
jne
fisubr
ss
gs
jb
mov
stos
cmp
movs
mov
pop
retf
mov
and
jmp
dec
mov
psrad
push
push
inc
sub
cdq
aad
jns
fcom
add
push
aad
shr
adc
xchg
mov
push
cmp
popa
xchg
iret
lahf
xor
mov
fsubr
add
mov
ds
repnz
popa
dec
sbb
mov
out
ins
cmp
dec
aad
test
nop
int3
lahf
outs
(bad)
das
jns
push
or
into
js
push
out
xor
pop
dec
popa
lahf
sub
mov
pop
xor
inc
and
xor
pop
dec
xlat
xor
xor
inc
inc
xchg
xor
pop
and
pop
clc
push
loop
and
adc
gs
inc
shl
cmp
inc
push
add
jne
push
out
add
jo
xor
xchg
adc
dec
iret
or
imul
mov
xlat
das
cmp
rcr
push
ret
int3
mov
xchg
inc
(bad)
les
ins
xchg
fld
mov
mov
test
fcmovu
push
jb
imul
and
mov
xor
mov
or
mov
paddb
jbe
and
xor
pop
out
cmp
or
scas
pop
pop
push
inc
loope
add
aam
jo
scas
adc
or
lea
movs
mov
pop
jnp
adc
mul
fcmovbe
addr16
jnp
dec
cld
push
add
xor
arpl
popa
fwait
xor
ficomp
(bad)
cmp
scas
pop
retf
scas
xlat
mov
xchg
cmp
jg
cmp
or
sub
inc
repnz
and
cmp
mov
stc
inc
cmp
fmul
imul
mov
nop
sbb
mov
push
outs
push
test
push
push
imul
retf
ja
sahf
sbb
and
popf
fcmovne
in
movs
mov
sub
arpl
and
add
xchg
push
bound
fidiv
ror
pop
pusha
jae
jne
mov
nop
sbb
mov
iret
and
push
push
sbb
sub
cs
mov
pop
jae
mov
sub
jg
sub
aam
nop
add
ficom
dec
xor
dec
ss
(bad)
clc
mov
mov
mov
ins
mov
push
sbb
mov
xchg
jge
sub
cmps
fimul
push
pushf
inc
data16
xor
jmp
mov
rcl
(bad)
imul
lods
stos
jle
pop
sub
pop
or
jg
fld1
gs
add
inc
fadd
aad
pushf
adc
or
fidiv
jns
or
mov
xchg
fisub
mov
sar
mov
(bad)
sti
lods
adc
add
sar
lock
push
cmp
mov
mov
cmp
rol
jge
inc
adc
(bad)
xchg
xchg
xchg
cdq
cmc
pop
cdq
add
sbb
inc
xchg
dec
jne
loopne
(bad)
pop
dec
jo
jp
add
scas
in
mov
inc
and
cmp
hlt
push
dec
lds
pop
cmc
ins
add
iret
les
dec
xchg
mov
stos
dec
aaa
int3
repnz
adc
xchg
pop
loopne
mov
xchg
dec
adc
popf
(bad)
daa
retf
mov
lods
sub
adc
loop
and
cwde
loopne
mov
repnz
mov
mov
mov
iret
jmp
popa
sub
mov
repnz
test
cmps
hlt
inc
or
xchg
xlat
sbb
pop
mul
in
test
jbe
pop
daa
jns
iret
lock
jmp
or
(bad)
ja
xchg
out
rol
mov
or
cmc
sbb
je
(bad)
cmp
stos
sbb
pop
jmp
jmp
jecxz
mov
cmps
jl
mov
xor
jp
lods
sub
mov
push
mov
ret
(bad)
fistp
iret
inc
jle
js
cs
enter
scas
push
mov
loop
mov
push
mov
shl
push
dec
mov
std
push
pop
aam
(bad)
leave
into
add
rol
mov
xor
leave
stos
inc
sbb
or
jg
jb
sbb
push
int
jnp
xor
lea
aad
shr
(bad)
push
(bad)
push
xor
dec
jbe
or
xor
jnp
call
push
sub
xor
sbb
push
inc
test
loop
push
jnp
daa
aas
fldenv
loopne
cmp
sar
mov
add
mov
xchg
xchg
mov
mov
cmp
push
xchg
adc
add
jbe
in
sbb
mov
sub
mov
push
leave
pop
lods
imul
xchg
push
retf
mov
aam
out
dec
out
xor
mov
adc
adc
dec
gs
inc
mov
add
call
xlat
push
xlat
imul
stos
fidiv
xor
in
int3
fnsave
int3
shl
mov
test
inc
cmp
scas
test
fs
xor
lea
mov
xor
adc
loop
dec
push
mov
out
sbb
ficom
adc
and
cmp
in
outs
cmp
cli
sub
outs
sahf
xor
push
adc
frstor
sub
test
jp
(bad)
or
inc
pop
mov
adc
nop
mov
pushf
xchg
pop
std
in
popf
(bad)
push
call
or
shl
outs
xchg
cdq
pop
imul
xchg
imul
add
pop
jbe
je
lea
test
rol
cli
loopne
pop
mov
(bad)
cdq
push
pop
jg
jns
adc
mov
inc
out
xchg
imul
test
cmps
cdq
cmp
cdq
mov
cmp
pop
mov
mov
xchg
mov
mov
out
pusha
push
jl
in
rcl
fistp
cmp
sbb
mov
mov
dec
xlat
inc
add
ins
inc
push
loope
scas
ins
ins
mov
cmp
enter
pop
xchg
hlt
nop
jae
jle
cli
adc
inc
sub
adc
in
sub
jbe
je
jae
pop
mov
sub
pop
jl
or
jb
and
loopne
gs
pop
or
aas
pop
sbb
jno
out
mov
ds
or
(bad)
push
push
xor
sub
stos
sti
nop
mov
movs
(bad)
mov
jecxz
and
retf
or
je
(bad)
mov
addr16
dec
jmp
daa
sub
retf
dec
retf
adc
sti
dec
mov
sbb
loopne
sti
(bad)
fucomi
push
rol
inc
cli
and
dec
pop
jecxz
int
xchg
bound
jg
inc
test
add
stos
sti
imul
ss
add
nop
jnp
or
jle
in
imul
loopne
add
lods
cwde
jae
fst
and
cmp
lahf
popa
mov
std
loope
pop
pop
jmp
or
out
(bad)
mov
cmp
mov
mov
pushf
pop
sub
adc
clc
fwait
arpl
adc
(bad)
mov
jl
(bad)
retf
mov
call
stos
loop
mov
pop
adc
ror
int
into
mov
int3
cs
xor
lods
fidivr
or
lock
mov
jmp
sub
add
daa
and
fstp
fidivr
loope
jae
aaa
inc
mov
ja
xchg
add
or
call
aad
jl
retf
add
add
push
push
add
or
retf
cmp
(bad)
inc
jbe
fmul
pop
mov
push
xor
out
push
and
and
arpl
push
lahf
cli
lods
adc
sbb
into
js
ret
test
add
outs
add
inc
cld
xchg
cmp
outs
jnp
inc
inc
out
stos
fisub
js
dec
aam
out
jo
fidivr
push
in
mov
mov
cmc
(bad)
sbb
cmp
mov
dec
mov
cli
mov
cld
neg
pop
test
shr
add
jmp
dec
xchg
add
sub
jge
imul
ins
repnz
bound
lock
(bad)
push
adc
ins
test
popf
sbb
fisttp
loope
push
pop
and
jg
int3
fist
lods
std
jecxz
sahf
mov
in
aas
in
jno
js
xor
fucomip
ja
enter
jge
mov
push
rcr
test
test
mov
dec
test
punpckhwd
sahf
es
jnp
and
retf
mov
mov
jne
lahf
jp
retf
js
pop
popf
gs
and
aas
fs
repz
pop
xchg
xchg
inc
int
push
imul
repz
call
cs
sar
pop
sbb
push
lods
data16
mov
push
pushf
and
push
sbb
sub
jno
push
push
sub
sahf
loopne
(bad)
adc
push
dec
in
bound
pop
mov
test
pop
sub
fisubr
add
sbb
jbe
neg
repnz
test
fsubr
push
jp
xor
sbb
and
and
add
fld
jnp
mov
and
std
(bad)
shl
iret
hlt
mov
xor
gs
cmp
pop
dec
xor
dec
push
jmp
mov
repnz
and
imul
cmp
js
fst
cmp
add
sahf
xchg
dec
adc
push
lahf
cmp
in
ret
repz
ss
loop
repz
add
out
js
jp
pop
lahf
in
jo
sub
mov
mov
pcmpeqb
jno
sub
add
sub
cmp
int3
xchg
push
xor
iret
leave
add
sar
xor
ror
jae
adc
push
aad
mov
sar
out
jmp
arpl
movs
test
push
jns
imul
xor
mov
add
cmp
push
ins
sub
inc
pop
sbb
loop
push
sbb
dec
into
imul
adc
pop
pop
push
mov
cmp
push
push
aaa
cmp
lods
fild
add
cli
or
jno
ss
jae
mov
mov
out
nop
push
inc
fldcw
ins
add
jle
test
mov
push
(bad)
fstp
sbb
cdq
iret
cld
or
push
test
(bad)
fs
(bad)
cld
out
cld
pop
mov
lock
nop
or
xor
ficomp
xchg
cmps
gs
and
(bad)
and
jae
jae
shr
outs
shr
test
xchg
pop
jae
or
sub
pop
addr16
(bad)
out
pop
and
mov
mov
ret
jle
or
into
(bad)
lock
push
mov
push
or
je
push
lea
div
push
ja
push
clc
movs
inc
push
and
fwait
and
mov
push
leave
add
(bad)
mov
(bad)
cmp
mov
and
add
sub
push
repz
fimul
cdq
test
(bad)
imul
lahf
in
rcl
je
(bad)
idiv
sub
mov
daa
add
dec
add
imul
sbb
fbstp
and
mov
xor
lock
xchg
sbb
sbb
retf
ja
jne
adc
test
cwde
cmps
adc
and
(bad)
(bad)
imul
add
cmp
ja
sbb
xor
outs
push
pop
mov
mov
aaa
movs
sar
rcl
xor
jmp
fdivr
dec
xor
jmp
xor
in
pop
inc
mov
lds
cmps
sub
xchg
repz
add
mov
retf
lods
mov
jecxz
xchg
mov
std
push
sub
jo
rcl
pop
xor
xor
jae
xlat
or
xlat
cmp
push
retf
and
lods
(bad)
fstp
sbb
add
mov
inc
cmp
inc
mov
dec
rol
shr
js
jns
pop
inc
jae
fisubr
jecxz
mov
movs
mov
push
ret
daa
dec
mul
lods
test
add
sub
int3
xor
dec
inc
xchg
fiadd
mov
and
ins
jnp
test
pop
out
xor
clc
dec
mov
mov
pop
add
push
fcmove
add
push
inc
lahf
stos
leave
adc
daa
jo
or
fwait
sub
sub
(bad)
gs
aam
mov
hlt
mov
les
cmps
jbe
pop
push
inc
std
mov
inc
aas
dec
ror
fnstenv
jb
add
adc
rcr
mov
scas
jbe
cmp
call
fwait
mov
sub
not
add
cmc
dec
mov
repz
adc
imul
mov
imul
mov
sub
bound
mov
cwde
adc
push
xor
cmc
call
pop
imul
xchg
fcomp
sub
je
or
stos
mov
aam
pop
stc
sub
pusha
cmp
in
rcr
js
sahf
cmp
std
lods
lods
inc
jno
sbb
jecxz
mov
sahf
sbb
mov
dec
push
sbb
cmp
or
ror
loope
dec
xchg
mov
jb
stos
data16
stos
xor
(bad)
jmp
dec
mov
rep
iret
and
sbb
xchg
and
xlat
fdiv
dec
aad
(bad)
push
fwait
lds
(bad)
xlat
inc
fwait
call
iret
and
inc
sub
dec
(bad)
out
mov
test
dec
add
test
ret
pushf
sti
cmp
(bad)
cmp
scas
fdiv
outs
adc
sti
add
fld
pop
test
xor
xor
xor
je
movs
inc
pop
loop
pop
push
lea
mov
sub
mov
in
xchg
std
inc
adc
sbb
rol
dec
cmp
xchg
shl
pop
int
inc
xor
retf
les
scas
push
fsubp
jl
sub
in
std
adc
out
or
sub
cmp
arpl
and
test
jp
mov
inc
out
cmp
lea
add
inc
xor
add
mov
dec
sbb
ret
out
xor
cmp
in
data16
xchg
mov
or
es
add
cmps
stos
lock
les
or
gs
rcl
xlat
xchg
or
xchg
jmp
pop
je
(bad)
les
test
call
xchg
jg
mov
ror
sub
stc
jo
sub
or
ins
pop
sbb
fsub
mov
pop
push
and
mov
pushf
mov
mov
xchg
push
adc
ror
outs
imul
ins
or
not
or
mov
add
in
mov
cmps
cmp
mov
mov
mov
shl
or
lock
cmps
push
arpl
mov
sub
push
push
cmp
sbb
push
not
popf
push
lahf
in
or
sbb
xlat
sar
loopne
xchg
dec
arpl
adc
inc
mov
cmp
dec
jb
adc
adc
(bad)
pop
out
div
fdiv
cmps
and
xchg
data16
bound
test
xor
mov
inc
inc
test
jp
mov
push
sbb
aad
or
jge
jo
push
fcomp
iret
aas
and
mov
lahf
(bad)
cld
dec
jecxz
pop
fldenv
aad
cli
stos
jmp
mov
xchg
fld
in
mov
add
sub
add
mov
jmp
lock
imul
jnp
dec
sub
pop
xor
add
sub
(bad)
fwait
mov
mov
adc
or
lds
cmps
ror
jmp
mov
jno
or
in
adc
mov
xchg
inc
ins
(bad)
cmp
(bad)
cld
mov
push
movs
stos
xchg
xor
(bad)
data16
mul
or
xchg
sbb
mov
xor
cmps
test
sub
sbb
cmps
mov
pop
jl
or
sar
fld
(bad)
ficom
lds
aas
popf
dec
imul
scas
lods
mov
std
push
jl
test
sub
jnp
loopne
xor
mov
pop
fcomp
aam
call
sbb
dec
sahf
enter
push
mov
dec
int3
fisub
(bad)
mov
inc
lea
hlt
sbb
sub
call
sbb
pop
into
sbb
push
mov
xor
dec
jno
into
pop
push
xchg
imul
pop
je
adc
pop
in
dec
mov
jo
mov
push
in
cmps
fld
stos
dec
jb
cs
or
mov
pop
mov
cmp
rol
xchg
mov
push
sbb
inc
test
xchg
mov
or
das
fisttp
mov
ja
xchg
xor
push
cdq
enter
imul
mov
or
call
(bad)
lds
int3
(bad)
call
adc
jmp
push
mov
mov
and
and
pop
mov
cmp
inc
push
int
add
and
popa
mov
sub
cmp
movs
mov
lock
dec
mov
or
dec
mov
aas
xor
cmp
cs
sub
cwde
ins
clc
mov
test
ins
nop
xchg
or
and
int
jecxz
mov
leave
clc
mov
inc
pop
das
call
mov
dec
sub
sub
ror
rol
pop
push
mov
add
xchg
and
pop
sub
out
idiv
ins
movs
inc
(bad)
mov
xor
(bad)
push
pop
je
mov
xchg
sub
mov
in
or
test
adc
xchg
mov
sub
mov
push
daa
adc
xchg
loop
mov
hlt
in
jbe
jl
popa
fwait
sbb
out
pop
push
fidivr
addr16
hlt
sub
xor
inc
or
(bad)
sti
or
jle
jp
dec
aaa
mov
jmp
cwde
cmp
or
gs
jmp
cld
add
ficomp
sub
ds
mov
add
sbb
call
mov
addr16
cmc
or
pop
push
mov
dec
shl
sub
pop
xor
aam
jnp
dec
stos
mov
stos
out
movs
mov
inc
popf
shl
cmp
and
lahf
not
pop
cmp
xor
push
inc
inc
scas
push
dec
xchg
cmps
xchg
pop
adc
cmc
iret
out
mov
data16
lahf
enter
sub
pop
aaa
xchg
mov
cs
sbb
std
fwait
jnp
add
xor
in
lods
cmp
sbb
pop
shl
push
xchg
ds
add
retf
cmp
sub
push
jmp
xor
aaa
out
or
sub
ret
dec
cmc
mov
cs
mov
std
bound
cmps
jbe
push
push
frstpm(287
add
xlat
lods
retf
pop
movs
or
pop
sub
jmp
mov
loope
scas
push
ds
push
lds
in
cmp
mov
call
lods
cli
icebp
not
or
iret
and
mov
add
or
mov
stc
cmc
sbb
xchg
and
outs
int
and
mov
scas
test
adc
and
lods
dec
adc
ins
xchg
sub
xchg
sub
sbb
jne
xor
add
mov
ss
adc
dec
ret
sub
inc
popf
xchg
ins
mov
pop
pop
stos
aaa
outs
adc
in
xchg
or
jge
sbb
fnstenv
stos
nop
adc
es
jns
loopne
adc
pop
mov
or
in
jo
cwde
jge
or
das
sar
fsubr
add
(bad)
xlat
push
push
pop
mov
in
retf
adc
int3
and
xchg
push
xchg
lahf
mov
bound
mov
mov
iret
add
out
leave
(bad)
in
sub
test
dec
or
jl
loope
pop
cmovnp
mov
mov
loop
ds
into
(bad)
(bad)
pop
das
scas
fidivr
mov
mov
int3
sbb
enter
mov
pop
out
jp
iret
pop
add
push
xor
sub
dec
fisttp
sub
pop
mov
or
addr16
fimul
xchg
ror
push
ret
jo
adc
or
jle
lea
mov
mov
bound
aaa
call
push
call
ds
sub
mov
and
pop
call
sbb
pop
retf
stos
stc
cld
test
add
aaa
sub
outs
sbb
mov
pop
and
aas
xchg
scas
mov
les
jp
pop
ret
stos
inc
adc
pop
cmp
fsub
pop
dec
mov
sbb
repz
mov
fsub
into
cmp
in
or
cmc
retf
inc
bnd
outs
push
and
cmp
int3
pop
push
cmp
cmp
leave
mov
sbb
sbb
fwait
shr
int
push
ins
test
xor
pop
mov
aaa
pop
stc
xchg
add
outs
xchg
xor
icebp
add
es
fwait
add
push
push
jmp
(bad)
mov
mov
mov
fcmovnbe
pop
fld
inc
pushf
inc
(bad)
in
lds
cmp
stos
imul
xor
in
push
sbb
pop
xchg
ret
xor
mov
xchg
scas
scas
mov
xchg
cwde
pushf
cld
mov
sbb
(bad)
mov
mov
icebp
mov
shl
pushf
gs
retf
jmp
xor
dec
xor
add
cmps
mov
mov
adc
xchg
mov
fmul
lods
mov
pushf
xchg
or
fcmovbe
xchg
jb
xchg
test
xchg
dec
and
mov
pop
stc
stos
jg
push
out
or
out
dec
fimul
loop
push
jle
pop
push
call
pop
js
sub
inc
xchg
sahf
push
dec
sub
pusha
repz
int3
and
xor
fidivr
push
lahf
jl
ret
inc
push
movs
hlt
jle
arpl
in
sahf
loop
scas
ret
lods
inc
mov
or
mov
aam
rol
cmp
jg
add
sbb
sahf
(bad)
in
lods
add
sub
jmp
push
mov
test
xor
fistp
pop
mov
lahf
pop
inc
fwait
adc
mov
mov
push
mov
dec
(bad)
xchg
bswap
imul
push
and
pop
add
(bad)
(bad)
test
repz
(bad)
mov
jbe
adc
cmps
bound
int3
outs
xor
out
and
leave
inc
iret
imul
pop
ja
daa
fs
mov
adc
jbe
xor
rcr
test
and
mov
in
aas
iret
jb
rol
pop
inc
push
adc
xchg
(bad)
dec
sbb
add
scas
add
xchg
(bad)
cmp
xchg
push
dec
outs
(bad)
mov
add
aad
imul
push
adc
mov
(bad)
scas
fsubr
in
adc
push
and
jmp
jmp
mov
mov
xchg
mov
dec
or
leave
xchg
mov
clc
cs
sub
popf
xchg
pop
cli
dec
and
or
mov
adc
and
js
inc
icebp
clc
or
add
loope
push
cmp
cmp
mov
or
bound
cmp
out
fwait
int3
repz
dec
sbb
push
and
dec
into
mov
sub
xchg
(bad)
push
xor
pop
imul
and
inc
cmps
ret
sahf
fdivr
mov
test
adc
not
lods
les
add
fimul
cmp
pop
sub
jmp
jno
(bad)
out
jno
push
adc
or
stc
out
adc
loopne
xlat
xchg
jno
scas
out
shl
and
lahf
sti
jnp
push
push
inc
inc
add
adc
jmp
adc
mov
pop
sbb
mov
arpl
jmp
jecxz
mov
lods
push
cmp
sub
or
mov
mov
mov
push
lahf
call
mov
push
out
or
jbe
or
xchg
pop
mov
lea
pop
xchg
(bad)
cmp
xchg
lods
iret
fisubr
and
inc
dec
and
fsubr
in
(bad)
mov
fisub
scas
imul
sub
ja
pop
xor
jl
not
adc
cmp
cmps
or
sbb
inc
push
dec
add
(bad)
cmps
jns
inc
adc
dec
ins
jne
push
out
jl
dec
push
fidivr
mov
mov
lds
pop
icebp
icebp
int3
mov
dec
adc
mov
scas
add
gs
add
mov
mov
dec
in
popf
cli
call
xlat
imul
mov
sahf
mov
jg
ja
cwde
jns
or
and
or
jg
mov
shl
pop
xor
loope
pop
(bad)
sub
push
lods
lahf
ret
dec
or
pop
sbb
scas
rcr
aad
mov
xchg
int
sbb
int
mov
sbb
or
lea
mov
rol
movs
shr
adc
mov
iret
stos
mov
scas
jbe
mov
aas
pop
cmp
push
cs
out
in
cwde
inc
bound
fwait
mov
enter
enter
inc
sub
push
(bad)
jae
pop
cwde
xchg
(bad)
or
call
ins
call
pop
in
out
jp
(bad)
xchg
in
pop
repz
xchg
cmps
and
sub
inc
int
retf
pop
cmp
sti
fdiv
retf
test
shl
popa
mov
daa
out
leave
mov
sbb
retf
or
and
push
pop
lea
ja
and
sahf
lahf
jae
fbstp
(bad)
sbb
dec
out
mov
retf
(bad)
and
xchg
cmp
mov
add
mov
xor
imul
cmps
mov
cld
jg
imul
push
sub
inc
dec
retf
sbb
xchg
ret
or
dec
jg
xor
cmp
push
sar
mov
pop
aad
popa
jmp
imul
jne
mov
arpl
pop
in
jo
pusha
sbb
adc
dec
mov
mov
fbstp
push
(bad)
mov
adc
shl
ds
push
repnz
js
push
call
call
rcr
fld
sub
mov
outs
(bad)
popa
dec
cmps
mov
mov
mov
add
cmp
or
dec
movs
adc
pop
fcomp
adc
dec
int
jnp
idiv
(bad)
xchg
packuswb
push
pop
lds
mov
jae
aaa
ins
mov
addr16
mov
xchg
repnz
inc
in
push
mov
mov
mov
mov
push
mov
cs
mov
sub
loop
sbb
jb
stc
sub
push
cmp
jg
mov
retf
rcr
mov
cwde
ficom
sbb
push
mov
add
add
jo
not
loop
sahf
mov
in
pop
loope
jne
les
sub
loope
mov
dec
int3
lahf
sahf
mov
or
outs
lods
iret
fmul
(bad)
loopne
and
lock
push
xchg
xor
das
lods
(bad)
outs
dec
xor
xor
pop
pop
mov
jmp
and
jl
pusha
mov
add
and
inc
pop
out
hlt
adc
dec
(bad)
push
add
xchg
jns
lds
(bad)
pop
mov
fdivrp
aad
add
in
hlt
sbb
sti
mov
rcr
push
das
inc
leave
retf
xchg
cmp
jmp
pusha
sub
aam
clc
cmps
xchg
xchg
dec
mov
pop
jnp
sbb
pop
cmp
test
dec
xchg
inc
jbe
push
dec
int
jmp
jmp
aaa
add
pushf
cmp
xlat
retf
jmp
sbb
jmp
and
xor
cmp
push
mov
xchg
push
sub
adc
mov
pop
push
mov
test
jp
push
out
icebp
mov
pop
clc
rcl
xchg
(bad)
stc
xchg
inc
(bad)
fld
xchg
repz
popf
in
jae
into
adc
cmp
inc
aam
je
ror
fwait
xor
clc
loopne
or
clc
icebp
aaa
push
fsub
aas
lods
imul
stos
ret
jae
arpl
mov
xchg
or
jbe
sbb
xchg
mov
out
mov
push
jne
pop
or
pop
sbb
xor
das
push
push
cmp
(bad)
aaa
aad
xor
jns
and
fsubrp
jg
mov
in
cmp
mov
movs
cmp
shl
dec
xor
aad
js
pop
push
daa
mov
popf
sub
mov
cli
shl
mov
push
hlt
sbb
pop
xlat
ss
rcr
add
cdq
xor
xor
(bad)
jecxz
adc
sub
and
jno
xlat
mov
js
mov
push
fcomip
int3
adc
cld
shl
fcmovb
addr16
jno
fsubp
fild
ror
mov
adc
or
jge
retf
cmps
cwde
test
daa
addr16
push
addr16
arpl
retf
fdivr
sub
cmp
stos
hlt
sbb
jo
mov
inc
xchg
cwde
mov
sbb
shr
jl
test
add
(bad)
xchg
idiv
out
jo
aam
sub
inc
ins
movs
das
fwait
and
inc
xchg
jmp
in
int3
repnz
movs
loop
imul
xchg
xchg
adc
aad
ins
pushf
jns
(bad)
ret
adc
mov
ficomp
inc
retf
xor
das
(bad)
arpl
or
les
or
popa
sahf
mov
test
pop
dec
jo
sub
add
sahf
inc
idiv
clc
(bad)
(bad)
enter
xlat
jl
(bad)
pushf
movs
sub
imul
xchg
add
inc
dec
pusha
sbb
mov
and
rcr
mov
enter
adc
nop
xor
fdivr
dec
and
xchg
adc
pop
dec
xchg
stos
cld
fadd
pop
out
(bad)
fbstp
clc
jbe
mov
sbb
inc
movs
pop
(bad)
out
inc
push
inc
idiv
mov
imul
push
in
cmp
adc
mov
daa
dec
push
ret
xchg
cs
xchg
das
scas
out
rcl
xlat
dec
jmp
lock
mov
add
bound
or
jbe
dec
retf
mov
add
jp
inc
and
dec
shr
aas
inc
sahf
sti
daa
sub
cmp
mov
adc
(bad)
call
dec
cmp
sbb
mov
adc
pop
(bad)
fstp
mov
jae
arpl
xor
push
sbb
aaa
(bad)
(bad)
push
add
mov
mov
jbe
or
in
adc
pop
sub
fisub
out
das
popf
push
bound
inc
inc
inc
std
sbb
or
add
push
outs
adc
aad
retf
(bad)
jle
xchg
out
je
mov
mov
cmp
sub
cmc
inc
fistp
scas
and
jmp
rcl
aaa
rcr
scas
stos
movs
popf
repnz
lock
sbb
pop
add
call
out
inc
xor
in
dec
push
mov
(bad)
sbb
pusha
out
nop
test
pop
push
cmps
pop
xchg
inc
inc
repz
push
(bad)
mov
int
and
jb
sar
in
pop
std
adc
push
call
jecxz
mov
mov
out
imul
aad
add
mov
mov
xor
jmp
jmp
push
mov
pop
bound
jmp
lods
call
je
cdq
js
pop
mov
je
cmps
sbb
ins
das
inc
sub
add
xor
sub
(bad)
adc
out
or
(bad)
cmp
aad
(bad)
add
fwait
ja
and
imul
bound
mov
mov
push
adc
imul
dec
enter
push
fld
loope
aas
xlat
scas
inc
mov
or
(bad)
mov
out
out
cs
jmp
das
jae
pop
or
shl
xor
pop
jp
(bad)
xor
add
cmps
int
and
inc
mov
stos
loope
pop
cmp
mov
jae
sub
inc
adc
inc
icebp
push
fs
fisttp
xchg
ins
bound
out
mov
sbb
shl
xchg
bndldx
push
cmp
cmp
shl
aas
adc
enter
adc
inc
call
data16
push
mov
es
cmp
pop
lea
mov
loopne
inc
stc
cmp
adc
loop
adc
mov
js
cmp
mov
ins
(bad)
fs
push
pop
cmc
mov
and
aam
or
sub
mov
cwde
stos
rcr
xchg
pushf
mov
das
std
and
nop
es
mov
xlat
fwait
call
xor
aas
sub
lods
ds
loopne
mov
ret
pop
fistp
mov
adc
mov
shl
push
mov
push
and
sub
addr16
sbb
cmp
nop
cmp
mov
jns
shr
pop
inc
pop
mov
inc
pushf
pop
xor
mov
js
sti
pop
hlt
jae
xor
ins
sub
cdq
cmp
lock
sahf
or
std
pop
jo
and
clc
sbb
push
int3
mov
data16
add
sar
mov
jbe
xor
lods
adc
fidiv
sbb
adc
xchg
hlt
xor
les
dec
aad
int3
pop
or
in
jne
xor
push
sbb
jae
inc
jo
addr16
adc
mov
adc
push
xor
xchg
push
enter
mov
push
out
imul
je
inc
jno
pusha
or
push
mov
jge
mov
add
out
rol
sbb
lds
inc
mov
inc
push
adc
sub
cmp
xor
movs
push
aas
sub
jns
neg
adc
and
inc
cmps
pop
xor
cmp
and
jl
(bad)
dec
xor
ins
fwait
jnp
cmp
std
sbb
cwde
and
in
cmp
stos
aam
shl
(bad)
cmp
les
mov
xchg
pop
sbb
pop
xchg
push
adc
inc
mov
cli
dec
or
leave
jmp
icebp
mov
add
addr16
retf
sub
gs
in
or
push
call
inc
(bad)
je
fiadd
rol
aam
xchg
test
int
or
sub
mov
jne
or
mov
sbb
movs
or
cli
sub
dec
clc
mov
mov
mov
dec
shl
lods
mov
lods
jnp
hlt
mov
dec
ds
ins
mov
push
mov
call
xchg
aam
gs
jmp
pop
adc
mov
mov
lds
iret
(bad)
ror
or
jp
and
setbe
je
mov
xlat
fnstsw
outs
out
dec
mov
xchg
iret
pop
xchg
xor
inc
and
push
adc
out
xor
and
add
adc
fs
mov
push
push
cdq
fdivr
jo
jg
jb
test
lods
add
and
scas
pop
aaa
aad
cmp
xchg
mov
jnp
inc
jb
sub
or
ins
div
sbb
data16
jg
(bad)
cmps
aad
pop
pop
in
mov
pusha
ffreep
pop
push
xor
jmp
std
mov
int
dec
mov
push
lock
(bad)
test
mov
mov
push
jb
test
dec
aas
xchg
retf
(bad)
movs
and
sbb
fsubr
adc
dec
push
(bad)
gs
mov
imul
lahf
test
lods
mov
mov
sub
dec
out
jp
cmps
(bad)
jmp
bswap
mov
in
pop
popf
mov
and
fwait
popa
iret
mov
or
mov
popa
ret
enter
movaps
lea
outs
dec
mov
mov
xchg
pop
add
mov
sti
sar
mov
dec
adc
push
fdiv
jg
jb
xchg
dec
jns
jns
mov
loopne
xchg
jl
outs
mov
jne
stc
nop
mov
or
cmp
and
ficomp
xor
imul
mov
add
stos
lods
call
pop
or
fwait
not
sbb
and
pop
stos
or
outs
(bad)
es
mov
cwde
sar
jmp
xor
mov
icebp
dec
cdq
das
pop
adc
push
mov
dec
mov
retf
mov
test
inc
xchg
arpl
jbe
jp
xchg
cmp
movhlps
mov
aad
mov
cmp
jmp
out
mov
xor
in
out
cdq
bnd
pop
scas
mov
dec
enter
sahf
test
into
shl
add
pop
fwait
mov
mov
adc
pop
push
(bad)
es
repnz
aas
inc
call
mov
scas
data16
jmp
and
jmp
neg
lock
imul
xor
push
shl
lds
inc
mov
pop
or
xchg
mov
(bad)
je
daa
lock
ja
je
adc
(bad)
repnz
xlat
jne
jl
cmp
adc
jmp
adc
out
test
shl
in
std
cmps
sub
jmp
fisubr
mov
fadd
add
test
sbb
cmp
xor
lods
mov
or
cmp
xchg
dec
xchg
f2xm1
mov
ret
in
pop
int
push
push
inc
aam
push
mov
imul
cmc
(bad)
cdq
out
inc
cmc
xlat
pop
push
(bad)
je
jp
jge
call
xor
pushf
and
mov
loope
cmps
ins
ret
test
shl
sti
dec
pusha
lds
xor
stos
repnz
icebp
push
sub
cmps
std
fcmovu
les
in
mov
and
inc
jmp
adc
jg
repz
mov
push
in
push
push
arpl
adc
or
mov
inc
mov
push
fmul
cmp
loope
sub
push
jmp
mov
jmp
popa
cmc
xor
(bad)
dec
push
daa
daa
not
jo
inc
dec
movs
or
dec
dec
sub
les
pop
je
dec
lods
mov
loope
(bad)
fprem
adc
xor
cld
and
rep
inc
push
cmp
loope
xor
xchg
nop
mov
(bad)
imul
call
or
fsubp
mov
scas
pop
fistp
lods
and
adc
pop
xor
mov
mov
je
mov
fidiv
cmps
or
imul
xchg
mov
loope
sub
cdq
ins
not
cdq
jecxz
xor
adc
mov
pop
mov
lods
add
xchg
mov
repz
pop
(bad)
in
div
inc
clc
cmc
mov
(bad)
pop
dec
int3
sub
pop
stos
push
lods
xor
xchg
fucomp
sahf
fdiv
mov
je
mov
or
mov
std
sub
ret
ret
ins
mov
cmp
jns
test
jne
repz
add
out
pop
popa
int
test
stos
fisub
inc
mov
popa
or
cli
or
adc
mov
xchg
inc
mov
xor
data16
adc
out
xor
and
adc
fimul
popf
mov
fadd
adc
call
push
sbb
cli
aam
inc
inc
mov
ins
dec
(bad)
aas
gs
cmp
and
or
xchg
div
cmp
pavgw
add
sub
mov
pop
out
pushf
or
test
fbstp
or
push
xchg
iret
call
cld
pop
fisttp
cmp
adc
in
aaa
outs
sbb
movs
(bad)
jae
std
(bad)
rol
jno
(bad)
repz
loop
adc
lahf
cli
into
(bad)
mov
out
fs
repnz
into
ret
push
sub
nop
shr
cmps
pushf
fsub
and
ret
pop
mov
pop
sub
call
std
cmp
push
jbe
scas
data16
push
leave
dec
xchg
xchg
mov
call
fwait
mov
cmp
dec
repz
pop
sub
xchg
hlt
gs
rcr
sub
shl
out
call
or
inc
jae
dec
add
(bad)
ret
outs
imul
cmp
call
or
sar
addr16
data16
sbb
sub
xlat
push
or
mov
mov
jne
ret
inc
jmp
adc
sub
out
dec
cmps
add
inc
push
jnp
mov
js
mov
mov
into
vpcmpeqb
inc
cmps
nop
add
pop
dec
out
mov
mov
dec
mov
sar
fcom
sub
outs
xchg
cmp
scas
enter
in
lds
mov
test
xor
lods
inc
jno
inc
popa
mov
aam
pop
inc
lods
fdiv
mov
(bad)
xchg
fld
fimul
cld
mov
cli
and
movs
inc
pop
mov
adc
mov
cs
or
jle
xor
retf
lods
rcl
nop
pop
fnstsw
sar
or
xchg
mov
or
pop
mov
inc
iret
cmc
into
jge
sub
dec
fdiv
add
repnz
in
mov
repz
adc
dec
jbe
lods
jnp
(bad)
fld
jns
cmc
adc
sub
in
cmp
push
mov
mov
repz
ds
xor
out
xor
jne
sub
add
shr
ja
in
lods
mov
rol
inc
dec
jecxz
dec
fcomp
cmp
dec
adc
outs
sbb
xchg
repz
imul
and
push
mov
retf
and
dec
xor
cmp
cvtps2pd
add
outs
imul
xlat
jmp
out
push
je
sbb
xchg
mov
in
ins
in
in
lods
dec
add
dec
retf
daa
sub
jp
or
adc
pop
retf
mov
repnz
outs
pop
mov
test
(bad)
aas
dec
sbb
ins
cmp
add
push
adc
pop
lahf
inc
add
dec
fwait
shl
jle
std
adc
ins
xchg
rcr
shl
fadd
or
inc
jbe
(bad)
out
xchg
pop
xor
(bad)
sbb
push
test
cld
mov
and
pop
xchg
and
pop
retf
inc
aas
push
dec
jmp
stos
ins
xor
jl
out
mov
xchg
repz
adc
xchg
mov
lods
jne
add
mov
rep
cmp
imul
loopne
push
retf
ds
sbb
xchg
retf
add
mov
jne
inc
mov
iret
add
or
cs
or
pop
cs
xchg
mov
aam
cmp
add
dec
lea
sbb
sar
movs
push
retf
ror
xor
inc
jp
mov
rcl
inc
outs
jne
out
shr
repz
pop
and
push
sub
jno
push
dec
xor
ror
(bad)
jge
pop
mov
sub
sbb
add
mov
cmp
mov
scas
sti
ins
mov
movs
jecxz
cs
inc
in
int
inc
cmc
add
and
mov
arpl
cli
and
(bad)
in
or
push
fisub
inc
enter
xchg
repz
and
xor
pop
mov
jne
cmp
or
mov
jg
pop
stc
pop
inc
loop
repnz
ficomp
add
jns
mov
adc
dec
inc
xchg
fidivr
pop
jno
or
mov
fist
lds
sub
pop
xchg
jae
push
push
scas
adc
adc
ror
repz
lea
test
call
and
movs
sub
jp
shr
and
repnz
cmp
pop
pusha
push
add
les
mov
xor
dec
lock
mov
and
push
jae
cmp
(bad)
pop
pusha
ficom
(bad)
sbb
mov
push
fsubrp
sbb
xchg
add
add
clc
or
fs
shl
jns
arpl
stos
retf
xchg
shl
fdivr
xor
movs
push
push
icebp
sub
jl
retf
sub
push
add
and
cmp
mov
movs
mov
mov
imul
xor
in
or
adc
pushf
iret
xchg
add
sbb
repnz
lahf
and
mov
ret
cmp
sbb
and
dec
fidiv
mov
dec
mov
arpl
sub
mov
push
xchg
mov
ins
ret
mov
sub
dec
aaa
fistp
jge
sbb
mov
adc
test
lods
jmp
or
jo
ret
mov
mov
pop
adc
ja
push
push
nop
cmp
adc
push
xor
popa
test
mov
outs
stos
dec
jae
nop
fwait
jns
mov
shr
out
sub
add
addr16
mov
xor
xor
addr16
movs
pop
push
leave
jno
scas
adc
mov
jmp
data16
mov
fbstp
jae
mov
out
pop
adc
sbb
shl
je
loopne
mov
fs
fidivr
addr16
cmps
and
or
repz
movs
ds
fld
sub
push
mov
int
ss
mov
xchg
jbe
dec
xchg
mov
aad
add
mov
fnsave
pushf
mov
loopne
sub
test
sbb
int
in
lock
mov
pop
int
movd
mov
push
mov
sti
sub
aam
adc
add
jecxz
cmp
xchg
pusha
xchg
ins
mov
ret
out
sbb
into
ds
dec
adc
xor
(bad)
fwait
loopne
sub
loop
lods
add
pop
jecxz
aad
mov
or
xchg
xor
pop
mov
cmp
call
or
mov
add
or
(bad)
out
loopne
mov
ins
and
xor
shr
mov
add
push
inc
sar
pushf
xor
or
xchg
dec
pop
xchg
dec
mov
popf
mov
fwait
scas
cmp
and
jl
dec
inc
mov
sub
cld
and
loop
mov
mov
(bad)
retf
adc
jmp
lds
nop
pop
or
xchg
jo
into
mov
jecxz
and
xchg
jl
cwde
fdiv
mov
fistp
adc
ret
add
push
in
fdiv
xchg
mov
movs
jmp
std
cmps
bound
jl
cdq
add
xchg
(bad)
push
ds
lea
xchg
push
shl
mov
mov
and
not
mov
push
xor
xchg
or
cmp
stc
dec
add
xor
test
loopne
mov
inc
add
shl
xor
fdiv
xor
std
jne
mov
repz
sbb
dec
loope
sbb
cmp
lea
xlat
pusha
fucomip
int
pusha
out
je
out
dec
pop
push
js
adc
jp
bound
(bad)
cli
int
mov
dec
aad
pusha
adc
adc
jo
int3
ret
add
fs
sub
rcr
in
sub
stos
add
bound
arpl
cld
or
out
mov
sahf
cmp
addr16
test
mov
aas
push
pop
dec
push
mov
jmp
inc
jns
push
(bad)
sub
inc
and
inc
jmp
push
mov
xchg
sbb
push
and
sahf
rcr
cmps
(bad)
hlt
(bad)
pop
mov
stos
enter
in
or
mov
cs
popf
push
dec
push
imul
js
scas
pop
dec
jmp
adc
repz
pop
shl
push
mov
xchg
sbb
fnstsw
xchg
and
push
fs
mov
push
sbb
aaa
xchg
jb
mov
test
or
xchg
inc
jmp
gs
out
fimul
leave
add
icebp
(bad)
xchg
mov
xlat
aas
enter
xor
and
rol
add
rcr
jge
cmc
mov
cmp
fcomp
ss
sahf
add
stos
out
in
and
mov
jp
test
add
push
jmp
jb
xor
pop
lods
movs
iret
mov
jmp
lds
ffreep
mov
pop
or
sub
lods
xor
cmp
sub
cmp
mov
jne
pop
aad
mov
test
mov
daa
jae
jp
jno
int3
mov
outs
jmp
mov
ficom
add
or
or
inc
aas
jnp
or
inc
lahf
add
repz
call
push
cmp
fwait
outs
push
xor
popf
cmps
push
mov
sub
mov
mov
sbb
in
hlt
pop
lods
sti
dec
lahf
xor
jo
jae
shl
sbb
mov
je
xor
push
sbb
cmps
stos
hlt
jo
xchg
xchg
adc
xor
stos
cmp
pop
cmp
in
mov
mov
sub
aas
push
fadd
xchg
cmps
cwde
pop
or
mov
mov
ins
sahf
aam
pop
call
in
fmul
xor
addr16
hlt
pop
int3
jp
arpl
xor
jge
cmc
mov
test
loopne
push
nop
or
mov
mov
loopne
add
test
fisub
sub
arpl
mov
and
aas
jmp
or
cwde
cmp
and
ret
push
push
shl
mov
pop
inc
rcl
lods
(bad)
mov
mov
int3
push
(bad)
fist
inc
xor
out
imul
cs
movs
popa
pop
into
lds
in
lock
push
mov
and
add
mov
mov
and
pop
mov
inc
xchg
push
jmp
and
(bad)
pop
ret
mov
outs
push
ins
and
(bad)
mov
sub
pop
push
push
inc
ret
fwait
mov
mov
sub
xlat
dec
dec
or
dec
jmp
sbb
data16
or
shr
dec
cmps
pop
pop
mov
mov
or
sub
inc
fdivr
ss
cmps
jns
xor
sub
mov
(bad)
mov
fs
in
test
mov
js
sbb
mov
sti
xchg
hlt
shl
int
test
aam
fisub
lods
sub
push
mov
adc
outs
imul
inc
xchg
jmp
mov
pop
xchg
(bad)
hlt
inc
dec
or
xchg
pop
imul
icebp
out
fisubr
loope
mul
imul
xor
popa
adc
mov
sbb
in
xor
call
jg
ds
pop
push
ret
pusha
cwde
das
ins
clc
add
adc
fdivrp
iret
movs
xchg
sub
xchg
inc
or
clc
xchg
jmp
mov
fwait
add
(bad)
cdq
jecxz
xor
jmp
(bad)
and
mov
aad
push
sub
xchg
push
adc
(bad)
stc
pop
arpl
js
mov
inc
test
mov
inc
lock
and
movs
pushf
scas
and
push
mov
sysenter
addr16
bound
hlt
add
pop
mov
cmps
movs
xchg
call
cmp
in
dec
mov
adc
add
rcl
mov
or
adc
xor
and
inc
scas
cli
pop
lods
ret
dec
call
int3
mov
jne
lds
stc
cmps
call
mov
sbb
jbe
sub
loop
jne
rcl
sbb
mov
pop
and
pop
ja
adc
pop
or
mov
jecxz
jo
inc
adc
leave
mov
or
rol
std
sahf
pop
outs
in
jg
sub
clc
test
inc
int3
add
or
ret
xchg
popa
rcl
push
in
xchg
mov
dec
pop
out
lock
outs
rcl
test
pop
out
es
dec
dec
mov
(bad)
jp
imul
fs
fcmovb
clc
jnp
aam
les
or
push
gs
xchg
or
mov
shl
bts
retf
mov
mov
mov
add
popf
mov
out
icebp
push
push
jmp
test
push
jle
scas
leave
aam
pop
ins
dec
inc
push
and
adc
push
in
lea
cmp
mov
cmc
dec
xor
test
jle
nop
and
call
mov
xchg
and
in
std
mov
pop
add
cmp
ins
xchg
int
xor
mov
inc
adc
push
or
fs
push
arpl
cli
cmps
dec
push
or
(bad)
jg
mov
xchg
jmp
and
arpl
sbb
push
into
jo
jae
fnstcw
dec
sbb
jg
fmul
imul
dec
imul
add
adc
push
retf
leave
pushf
pop
xchg
sbb
mov
popf
pop
ja
dec
or
adc
jmp
inc
rol
les
js
push
lahf
test
adc
push
jmp
jecxz
cmc
push
xchg
xor
outs
xchg
push
(bad)
and
rcr
inc
fstp
cmp
(bad)
adc
mov
inc
add
call
lods
jl
push
mov
outs
add
leave
icebp
or
mov
loopne
in
or
daa
and
xchg
mov
sub
add
mov
mov
jno
or
pop
push
test
outs
rcr
call
mov
(bad)
sub
retf
pop
mov
and
sub
call
pop
and
adc
stos
pop
xchg
lock
jbe
mov
outs
mov
stos
pop
jecxz
mov
cmp
clc
nop
daa
push
sbb
xchg
loope
fbstp
inc
mov
add
aaa
jmp
and
in
or
movs
(bad)
pop
retf
cli
stos
jo
add
imul
xchg
push
loop
mov
hlt
imul
sub
xchg
gs
mov
js
push
cld
pop
out
jl
mov
aas
xor
ret
sti
(bad)
test
jl
aam
sti
mov
aas
or
pop
fild
es
test
mov
dec
popf
shl
adc
mov
mov
adc
sub
imul
pop
sub
xor
repnz
cmp
xchg
scas
mov
add
push
mov
xchg
adc
sub
cli
mov
xlat
jp
inc
aam
or
xchg
push
jmp
push
xchg
inc
rol
psllq
xchg
mov
cmc
in
or
int
xor
repnz
lea
cmps
call
sub
xchg
popf
mov
dec
mov
pop
retf
sub
mov
cmps
push
pop
rol
pop
das
adc
dec
xchg
sub
aad
cwde
and
push
cs
mov
mov
out
mov
xchg
call
loopne
mov
in
add
repz
jmp
neg
inc
inc
add
imul
push
movs
in
inc
sub
call
mov
in
mov
lea
in
lea
pop
dec
lea
adc
(bad)
loopne
repnz
ins
jge
frstor
push
sub
or
mov
push
and
xor
ja
mov
iret
imul
add
sbb
cmps
or
sub
aaa
mov
int
lds
aaa
retf
fs
xor
add
adc
add
std
xchg
mov
push
call
neg
js
stos
push
stos
lahf
inc
jbe
clc
lock
and
adc
inc
imul
add
aaa
xchg
fcmovnbe
mov
pop
cmps
mov
sbb
dec
pushf
bound
push
out
dec
push
sbb
dec
xchg
xor
xchg
sbb
inc
inc
mov
inc
enter
aas
and
leave
mov
inc
repnz
mov
(bad)
xchg
lods
nop
icebp
add
sbb
aaa
jecxz
(bad)
fld
sub
dec
inc
xor
(bad)
aas
mov
xchg
sbb
mov
mov
imul
in
aas
lock
mov
(bad)
jmp
or
and
out
xor
mov
jns
dec
into
add
jnp
dec
or
fiadd
and
jge
sub
push
sbb
fisubr
xchg
movs
movs
psubq
push
mov
mov
jge
mov
inc
or
test
ss
(bad)
fild
gs
ret
and
rcr
into
mov
imul
fchs
jmp
mov
call
and
jns
shr
inc
int
ficomp
(bad)
dec
mov
call
push
mov
fiadd
(bad)
sub
lds
push
test
and
sbb
dec
sbb
test
test
mov
dec
mov
(bad)
sahf
(bad)
pop
adc
adc
xlat
cmp
loopne
adc
push
push
dec
add
stc
push
test
in
jle
xlat
sub
mov
jae
sbb
pop
loope
inc
xor
sbb
je
push
xchg
sti
mov
push
test
(bad)
loopne
sbb
dec
add
cmp
dec
out
cmp
mov
mov
enter
dec
cmp
pop
in
fs
cmc
in
push
pop
push
mov
sbb
wbinvd
or
rcr
xor
pop
adc
mov
ficom
call
mov
retf
(bad)
leave
sbb
das
inc
jp
inc
dec
sahf
outs
shl
mov
or
jecxz
icebp
xor
movs
and
push
xchg
mov
icebp
or
out
ficomp
push
fs
pusha
stos
mov
jbe
ficom
out
popf
adc
adc
fcmove
ss
retf
mov
mov
bound
xor
dec
mov
jge
push
outs
aam
sub
cli
in
retf
retf
sbb
ret
sub
loopne
pop
ret
xchg
jg
adc
ja
fs
or
gs
hlt
and
int
xchg
je
mov
enter
sbb
xchg
bound
sub
dec
lahf
loopne
cmc
push
and
sbb
daa
cmp
popa
dec
ss
mov
mov
div
out
daa
dec
jb
lods
pop
ins
aad
fld
cmp
pop
mov
or
sbb
inc
pop
or
pop
sbb
pop
dec
xchg
mov
jl
inc
mov
out
je
repnz
icebp
mov
jae
lock
(bad)
imul
lock
sbb
movs
sti
aas
stc
lds
test
pop
dec
cmp
lods
pop
enter
mov
mov
sub
cs
aad
jmp
pop
repz
in
nop
data16
pop
xchg
xchg
leave
popf
and
into
cmc
into
mov
jns
pop
cmp
jne
les
in
neg
cmp
ds
add
inc
call
ja
in
mov
out
dec
outs
ins
repz
ret
dec
stc
das
imul
shl
or
rol
mov
sub
(bad)
cmp
dec
mov
(bad)
cmp
stos
std
mov
fs
jmp
out
lods
addr16
jnp
in
mov
mov
jo
ds
neg
outs
inc
idiv
lea
jge
stc
ja
add
(bad)
addr16
sbb
pop
push
jne
inc
ds
movs
ins
mov
add
xchg
sbb
push
push
lock
jp
dec
in
int
push
test
mov
int
or
lods
mov
out
cdq
pusha
add
cs
fbstp
mul
xor
cdq
mov
pop
and
fcom
(bad)
in
mov
adc
inc
push
add
popa
test
sahf
dec
mov
add
jl
movs
and
(bad)
lahf
inc
add
mov
pop
(bad)
int3
mov
pop
push
mov
cmps
call
xchg
cmp
in
shl
pop
(bad)
clc
mov
les
mov
xor
mov
jbe
rcl
push
lods
pop
int
das
lea
or
sub
jbe
iret
test
mov
mov
test
sub
pop
cmps
mov
dec
push
push
test
lods
pop
iret
bound
pusha
ret
mov
clc
jb
pop
mov
push
icebp
(bad)
(bad)
or
inc
out
fcomip
mov
inc
jle
adc
jo
mov
xchg
out
daa
iret
sub
jno
pop
in
ins
inc
mov
jmp
mov
lods
push
sub
enter
xchg
les
scas
sti
mov
stos
xchg
cmp
in
or
inc
imul
bound
mov
jae
je
data16
mov
xlat
js
dec
cli
adc
cmp
popa
pop
mov
inc
jle
stos
scas
sub
repz
mov
sub
das
es
movs
das
in
scas
cli
repz
in
add
dec
push
jae
dec
movs
leave
sub
ss
cmp
shl
iret
sbb
jno
in
pop
test
jnp
lock
cmc
adc
dec
outs
imul
std
loopne
cli
call
jle
imul
inc
mov
inc
stos
or
sub
dec
sub
stos
mov
cmp
jl
jo
push
cli
cs
int
mov
push
or
pop
not
xor
pop
add
xchg
movs
retf
iret
out
into
stos
mov
stos
es
pop
ss
jnp
inc
leave
mov
jmp
mov
xor
lahf
cmp
jg
push
inc
loop
idiv
pop
popa
jle
jge
and
jl
add
push
arpl
sbb
and
sub
in
cwde
sub
cmps
outs
retf
xor
rcr
movs
or
sti
mov
loopne
(bad)
dec
cs
lock
mov
cmps
in
fcmovb
aad
mov
xchg
movs
xchg
scas
mov
(bad)
add
imul
add
mov
stos
pop
inc
cmp
pop
icebp
in
push
mov
pop
sbb
ret
xchg
dec
std
cld
neg
cmp
push
and
and
in
mov
mov
pop
inc
or
lahf
sub
push
in
inc
dec
jmp
or
outs
popf
mov
cmps
pusha
call
cmps
mov
(bad)
sbb
es
mov
xchg
icebp
jmp
mov
and
cs
mov
mov
mov
mov
imul
sbb
test
dec
fdivr
test
test
push
dec
movs
mov
push
jb
push
(bad)
aam
mov
fucomip
repnz
mov
outs
aam
jmp
int
loop
fucomi
iret
mov
leave
xchg
adc
dec
das
fcmovbe
imul
push
pop
movs
out
jl
cwde
sti
mov
fucomi
pop
jbe
inc
xchg
mov
and
dec
fdivp
in
pop
cmps
mov
jnp
push
jb
push
jns
pop
xor
fninit
dec
dec
sbb
bound
jle
push
mov
mov
mov
mov
pop
jb
pop
pop
sbb
and
ret
aam
sbb
inc
das
sub
outs
mul
loopne
imul
js
cmovs
jle
adc
in
dec
repz
sub
push
sbb
dec
movs
or
push
sbb
pop
sbb
or
push
cmp
loope
rcl
inc
ins
add
retf
jp
cwde
inc
jo
and
into
and
call
mov
jmp
push
pop
sbb
aaa
xchg
call
(bad)
enter
dec
das
stos
repnz
push
push
cmp
call
shl
nop
aam
add
xchg
or
ins
mov
jb
inc
dec
fs
pop
ret
mov
mov
retf
mov
cmps
mov
and
push
mov
sub
imul
imul
in
idiv
mov
push
ds
(bad)
jge
fwait
mov
xor
sub
ins
pop
cwde
outs
inc
add
sar
lods
mov
ficom
inc
popf
bound
adc
inc
add
jle
mov
cmp
arpl
sbb
loop
push
imul
dec
cwde
mov
mov
enter
inc
jnp
sub
or
push
aas
(bad)
jmp
js
adc
and
test
or
xchg
call
sub
cwde
push
(bad)
scas
aaa
cmps
arpl
lods
pop
xchg
adc
ficomp
pop
es
sub
lods
aas
sub
daa
mov
leave
sbb
adc
mov
mov
mov
mov
and
mov
sbb
cmps
gs
sbb
test
jge
iret
stc
std
movs
push
adc
jl
xor
(bad)
fstp
jmp
jo
mov
jnp
pushf
xor
int
jbe
cdq
fs
add
push
xor
mov
xor
inc
(bad)
jno
pusha
cli
lods
inc
inc
inc
mov
retf
push
mov
and
fist
call
pop
pop
jne
ins
push
jne
mov
xchg
inc
sbb
into
icebp
jo
mov
pop
fwait
and
fcomp
ins
jo
mov
loope
jne
pusha
pushf
dec
mov
xor
adc
jecxz
or
test
cmps
add
cdq
pop
add
icebp
mov
lahf
enter
jbe
idiv
shr
imul
inc
jb
push
loopne
jno
int
movs
dec
jns
das
fsub
mov
mov
or
fs
or
xchg
mov
cmp
sbb
(bad)
out
sbb
dec
ins
adc
mov
mov
ror
pop
pop
test
lods
movs
sub
pusha
pop
fst
xchg
dec
push
cmp
enter
sbb
sysret
cwde
pop
inc
pop
xchg
pusha
inc
adc
jecxz
(bad)
and
pop
sbb
add
cmp
inc
xor
cmp
loopne
es
addr16
or
cmp
imul
call
cld
and
aaa
inc
dec
or
sub
shr
ins
inc
jns
mov
sub
pop
out
stos
inc
imul
in
push
xor
pop
call
jg
retf
paddsw
sub
push
xchg
ret
add
shl
leave
push
out
pop
ret
jae
rcr
xlat
sub
test
addr16
mov
and
outs
ja
or
push
mov
sub
mov
cmp
or
out
adc
mov
xor
pop
jecxz
lds
pop
mov
retf
mov
mov
and
and
div
bsr
out
sbb
pusha
shl
xor
inc
ret
push
add
mov
dec
pop
push
jecxz
cmp
das
xlat
push
and
mov
or
cwde
push
cmp
scas
cmp
sub
inc
sti
(bad)
cs
(bad)
xor
in
out
data16
loope
aam
xchg
or
bound
retf
mov
xchg
ss
jns
movs
sub
dec
cmp
mov
mov
inc
mov
mov
or
ret
retf
push
(bad)
cmp
or
add
adc
test
push
or
sub
nop
fisubr
js
xor
popf
xor
movs
in
jo
sbb
dec
ins
add
ret
hlt
pop
popf
stc
mov
cmps
in
push
push
mov
addr16
pop
mov
int
test
mov
sbb
mov
in
popf
mov
xchg
jno
xchg
jne
(bad)
pop
mov
mov
repnz
scas
ds
mov
cmc
sub
pop
push
mov
test
jmp
fisttp
fisub
mov
mov
jecxz
xchg
aam
inc
sbb
call
or
hlt
fimul
cwde
push
leave
fild
cmps
cmp
mov
aaa
shl
push
lahf
es
stc
mov
scas
cs
mov
movs
dec
(bad)
aam
sbb
mov
push
iret
mov
pop
inc
int
and
mov
dec
jns
cmp
inc
sub
mov
test
sar
lds
fs
mov
xor
mov
sbb
dec
cs
add
popf
push
push
clc
lock
sub
xchg
lods
rcr
add
pop
loope
arpl
or
add
xchg
and
pop
pop
outs
xchg
mov
shl
jns
iret
xchg
int3
jl
cmp
adc
add
push
xlat
xchg
out
jl
mov
pop
(bad)
jmp
arpl
xor
push
arpl
iret
sub
adc
inc
xor
and
sbb
outs
sub
sti
adc
dec
push
xor
into
xlat
dec
mov
pop
xchg
and
push
xor
xchg
adc
sahf
and
push
call
lock
xchg
(bad)
and
outs
mov
rol
jge
pop
pop
sub
jnp
cmp
mov
aam
jp
pop
jp
iret
in
fnstenv
xchg
call
hlt
pop
cmp
imul
loop
xor
jg
into
nop
sahf
inc
pop
dec
mov
mov
call
pusha
mov
cmp
jecxz
out
pop
call
stos
inc
shl
jmp
add
adc
mov
shl
sub
loope
and
(bad)
mov
cmp
stos
in
loopne
and
pop
push
(bad)
das
mov
fst
cmp
add
and
test
add
xchg
in
jb
add
imul
retf
mov
mov
test
or
cmovge
hlt
pop
push
(bad)
xchg
add
mov
stc
leave
fcmovu
cmp
cmp
cmp
xchg
xchg
test
je
xor
pop
ret
clc
cs
cli
mov
outs
test
retf
mov
adc
scas
and
in
sbb
(bad)
stos
cmc
dec
sar
lea
aad
hlt
movs
mov
sbb
xor
test
test
jg
rcl
push
outs
dec
jge
je
aaa
leave
int3
std
ja
stos
imul
xchg
arpl
ror
test
push
lods
stos
rcl
pop
int3
shr
xor
out
mov
or
mov
mov
call
arpl
add
mov
or
out
loope
jp
dec
out
clc
repz
lods
cmp
je
aas
retf
aam
dec
(bad)
sti
fcomp
xchg
mov
mov
test
cmp
jp
in
sbb
mov
rol
or
ret
popw
in
inc
push
das
adc
int
push
int3
shl
push
xchg
fucomp
dec
push
hlt
stos
lahf
mov
dec
mov
push
xor
adc
pusha
addr16
call
xchg
int3
mov
xchg
daa
xchg
or
cmp
dec
add
xchg
cdq
in
(bad)
ss
cmp
daa
pop
adc
(bad)
and
jns
push
cs
test
mov
ret
mov
pop
add
xlat
loope
test
add
jecxz
out
dec
loop
repz
cmp
cmc
mov
int3
inc
and
xor
dec
adc
repnz
mov
hlt
xchg
(bad)
jle
cmp
pusha
rcr
mov
pop
lock
lods
mov
mov
xchg
cwde
jg
adc
add
mov
dec
jmp
mov
adc
add
sbb
xor
bound
pop
and
sar
scas
sbb
push
mov
iret
fist
bound
add
outs
jnp
iret
mov
jmp
push
add
xchg
ret
imul
cmp
leave
cwde
mov
pushf
call
xchg
and
xor
pop
and
adc
call
jns
jnp
dec
inc
cmc
and
rcr
pop
and
sub
jns
out
jnp
xchg
cmp
call
clc
aam
and
push
jle
push
pop
sbb
or
add
mov
cdq
stos
jecxz
fiadd
shr
mov
sbb
dec
jne
add
scas
(bad)
jno
cwde
push
punpckhdq
push
lods
lods
dec
test
stc
(bad)
sbb
sub
cmp
test
aas
xchg
imul
mov
mov
jge
pop
mov
adc
fs
adc
push
mov
fnsave
fwait
imul
unpckhps
fs
test
dec
jl
test
enter
xchg
xchg
nop
jg
loope
mov
ss
add
jl
push
loop
enter
dec
cmp
pop
mov
mov
mov
xor
shl
movs
pop
fwait
inc
xchg
scas
push
push
in
cmp
movs
inc
xor
push
ja
inc
sbb
mov
popf
add
call
and
mov
clc
adc
ds
xchg
mov
xor
push
push
pop
fst
push
mov
out
jmp
pmullw
outs
rep
push
addr16
repz
push
sbb
test
outs
xchg
pop
jecxz
in
sub
aam
cmc
mov
fmulp
test
(bad)
cwde
or
out
(bad)
jb
jp
mov
es
jg
mov
cmp
test
mov
movs
(bad)
xchg
add
push
sbb
fcmovu
dec
dec
jl
pop
sub
xor
adc
mov
cdq
repz
jmp
data16
cmps
xor
dec
xchg
inc
and
hlt
mov
dec
bound
pop
(bad)
test
push
mov
mov
fmul
xchg
push
out
(bad)
mul
mov
aas
pop
arpl
xor
inc
dec
ret
push
jg
inc
adc
stos
pusha
inc
mov
mov
mov
(bad)
xchg
fwait
mov
cmp
movs
shl
xor
mov
push
int
mov
xor
popa
sar
jno
dec
ins
mov
in
jp
scas
jmp
fdivr
inc
xchg
test
in
(bad)
pusha
inc
test
leave
add
pop
repnz
or
inc
mov
xor
inc
pop
xor
ss
jp
nop
ja
out
jae
or
mov
or
je
adc
cmps
cs
mov
(bad)
scas
(bad)
(bad)
shl
(bad)
cmp
pop
push
repnz
add
mov
add
fs
adc
mov
ss
inc
in
mov
add
mov
cmp
ret
mov
es
jmp
les
stc
inc
loope
pop
jecxz
std
jo
imul
mov
mov
icebp
sub
inc
mov
aad
popf
in
mov
mov
add
imul
stos
mov
outs
jmp
and
xor
jp
add
stc
jae
in
test
int
dec
xor
add
xor
popf
(bad)
pop
imul
cmp
push
dec
mov
test
push
lea
add
sub
xlat
mov
sbb
mov
xor
scas
inc
iret
push
out
aam
daa
sub
xor
cmp
mov
xchg
pop
addr16
repz
fild
or
ins
mov
pop
cwde
push
lahf
test
aaa
stc
fdivp
inc
dec
inc
(bad)
cdq
iret
sub
mov
div
cmp
ret
jmp
push
jno
test
dec
scas
jp
or
mov
or
movs
inc
push
inc
jle
jg
push
and
mul
popa
jns
inc
pop
fst
aad
popa
adc
sbb
pop
xchg
scas
lods
out
cmp
or
jmp
clc
hlt
pop
and
cdq
(bad)
dec
hlt
fisubr
(bad)
clc
mov
dec
inc
in
not
dec
ror
add
aad
cmc
cmp
mov
hlt
jnp
mov
sahf
stos
mov
mov
jo
movs
imul
pop
sub
jg
ins
out
sub
xchg
and
retf
movs
sbb
add
fwait
sbb
sbb
cmp
xor
inc
(bad)
push
push
pop
jmp
and
mov
les
xlat
std
outs
fs
push
popf
imul
cmp
mov
xor
sbb
sar
int3
push
aas
movs
imul
inc
in
mov
push
pop
fiadd
add
popa
push
mov
mov
ret
loope
cli
outs
sbb
xchg
stos
xchg
jne
jmp
jmp
mov
(bad)
call
add
fs
sbb
jae
test
jle
xor
js
aas
popf
aaa
test
pop
cwde
cmc
ins
jae
push
mov
jg
xchg
leave
loope
xor
test
push
adc
loope
fwait
jmp
xor
ret
add
test
push
push
mov
iret
jbe
das
push
ds
jecxz
mov
push
xor
sub
mov
and
nop
stos
mov
and
retfw
test
nop
sahf
call
scas
sub
push
sar
push
mov
cmp
push
daa
loopne
pop
icebp
mov
test
loopne
inc
cmp
call
mov
in
nop
leave
cmp
loop
sbb
xchg
and
fxch
pop
sbb
aas
pop
fistp
cmps
jl
iret
retf
sbb
mov
arpl
loopne
and
add
xor
pop
jg
ss
loope
and
sbb
push
pop
dec
mov
cmp
xlat
jp
sbb
sub
(bad)
dec
sbb
mov
inc
fdiv
mov
and
ins
les
sub
adc
iret
lds
call
push
mov
(bad)
mov
adc
mov
pop
aam
setno
in
pop
and
aaa
dec
ins
scas
push
rol
into
shl
sbb
jmp
sub
mov
mov
mov
xor
sub
not
sbb
jl
shl
push
mov
lds
xchg
call
fldenv
fnstsw
pop
adc
jno
in
jne
cs
jne
cld
mov
sbb
stos
sbb
jmp
loope
jbe
call
add
ins
mov
test
addr16
pop
sbb
scas
dec
test
mov
lock
rcr
push
mov
out
ficom
xor
jge
jle
mov
xchg
mov
shl
add
and
pop
stos
bound
adc
adc
jge
and
repz
in
jmp
mov
push
out
add
ja
xchg
fcmove
jmp
sahf
sqrtps
or
or
aaa
fwait
sub
pop
mov
mov
aad
repz
pop
mov
push
dec
scas
(bad)
mov
cld
(bad)
shl
in
jl
dec
fidivr
clc
ret
aam
cmp
das
sahf
jl
mov
daa
mul
dec
mov
dec
(bad)
out
dec
fldenv
es
cwde
loop
stos
mov
fild
sub
dec
dec
jmp
ins
iret
xchg
scas
bound
hlt
push
push
jmp
movlhps
mov
add
pop
mov
push
mov
daa
cmp
ror
retf
jnp
xchg
pop
enter
(bad)
push
cmps
mov
add
push
mov
mul
jns
xchg
dec
stos
add
xchg
rcl
dec
lds
xchg
jmp
add
fldenv
cld
xor
popa
dec
xchg
shl
ficom
(bad)
adc
sub
nop
cdq
sti
jecxz
or
push
fcom
jo
jl
not
mov
or
add
pop
dec
xchg
xchg
sbb
cwde
cmps
int
dec
out
pushf
adc
adc
pop
push
imul
gs
int
aas
rcl
outs
imul
sub
shr
and
sub
cmp
aaa
add
fdiv
fwait
mov
push
mov
daa
sti
sbb
and
mov
repnz
xor
sbb
ds
sti
ja
je
gs
cmp
pop
retf
and
ret
mov
adc
jnp
jbe
(bad)
cmp
sbb
xchg
push
cld
repnz
xor
imul
out
fdiv
sub
cmp
out
xchg
(bad)
std
fist
in
jae
lahf
mov
pop
adc
lock
push
add
lahf
inc
dec
loope
in
add
push
pop
sahf
ja
pop
outs
loop
jle
loopne
(bad)
rcl
jge
sbb
dec
leave
adc
pop
xor
push
inc
push
scas
out
sbb
pop
sbb
jo
jmp
inc
or
xor
dec
xchg
adc
out
pop
sbb
mov
outs
xchg
sub
les
xor
in
sub
mov
in
jo
inc
inc
cwde
mov
cs
dec
das
dec
bound
add
mov
mov
mov
sbb
stc
cmp
popa
enter
sub
scas
sar
clc
movs
mov
dec
sbb
loop
js
(bad)
je
mov
mov
add
jmp
mov
out
lods
ss
push
lea
jne
push
aas
imul
inc
adc
dec
lods
xchg
mov
inc
bound
dec
loop
or
repz
hlt
jg
mov
retf
out
push
mov
or
jmp
stos
dec
aad
adc
mov
js
mov
inc
add
fbld
mov
imul
outs
lock
vandnps
dec
xchg
or
jmp
and
xor
xchg
xchg
adc
loop
xlat
and
inc
sub
inc
dec
cmp
das
mov
retf
in
loope
movs
sub
xchg
in
xchg
xchg
arpl
mov
mov
mov
lods
adc
lods
mov
test
sub
out
adc
enter
sahf
push
dec
lahf
jl
rcl
mov
js
mov
sub
pop
jge
mov
push
xor
pop
push
lods
ret
dec
stc
mov
stos
inc
sub
js
mov
and
xchg
imul
push
sub
push
enter
and
cmp
aam
jge
sbb
sub
out
(bad)
lock
(bad)
cmp
push
outs
cmp
xchg
mov
in
push
fcmovne
add
push
fisubr
stc
push
xchg
leave
xor
jle
push
clc
in
arpl
shr
movs
mov
pop
lods
sbb
add
movs
dec
shl
ret
out
mov
add
lds
jge
out
loope
xchg
mov
ds
xchg
(bad)
mov
daa
inc
mov
xchg
pop
mov
fwait
jmp
dec
mov
or
add
adc
retf
push
outs
cmp
cmp
pop
sahf
xchg
lea
xor
dec
cld
inc
rcr
sub
jmp
add
push
ins
mov
xor
lock
sbb
das
mov
cld
jle
rcr
and
mov
imul
leave
les
xor
xchg
inc
and
dec
int
mov
push
popa
pop
out
cmc
movs
pop
shr
fild
out
in
lahf
outs
int
inc
ret
inc
retf
pop
mov
clc
std
fs
mov
stos
clc
add
mov
not
inc
nop
leave
loope
xor
outs
mov
lods
cmp
push
mov
ds
xchg
sbb
je
sub
xor
sub
imul
and
mov
pop
shl
mov
std
nop
ret
scas
(bad)
ret
mov
push
dec
xor
add
cdq
dec
push
aaa
mov
or
adc
sbb
add
rcr
repnz
jno
adc
pop
lahf
push
cmp
ds
movs
pusha
les
in
inc
push
xchg
xlat
sub
and
pop
test
xor
je
in
sbb
enter
clc
dec
push
shr
(bad)
cmp
out
cmp
mov
cmps
xor
ins
and
mov
pop
lea
jmp
(bad)
das
test
mov
jge
ror
(bad)
popf
out
xlat
or
xchg
aad
in
adc
(bad)
sub
test
iret
fsubr
sbb
dec
jp
mov
aaa
xor
sub
dec
sub
pop
rcl
xor
mov
sub
xlat
fsubrp
mov
js
add
icebp
mov
leave
pop
in
loopne
lea
mov
pop
inc
mov
adc
ins
sub
cmp
xchg
(bad)
daa
mov
repz
or
xchg
mov
or
and
(bad)
bound
dec
push
fst
jmp
aam
sub
fld
pop
jnp
jge
xchg
jmp
sbb
pop
into
mov
(bad)
fidiv
ds
cld
arpl
xlat
jb
(bad)
out
jmp
loopne
loope
pop
(bad)
ins
and
in
retf
scas
xchg
(bad)
or
gs
cmp
in
fs
and
enter
es
inc
mov
mov
ret
xor
popf
xlat
outs
pop
sub
call
clc
repnz
call
pop
cld
mov
fsub
push
xchg
js
in
imul
and
iret
in
outs
jb
dec
ret
ficom
into
not
mov
xchg
xlat
sub
not
dec
and
mov
pop
ins
cmp
fistp
in
cmp
les
sub
pop
cmc
inc
inc
aaa
push
mov
lods
cmp
sti
xchg
sahf
jmp
adc
sbb
frstor
inc
xchg
xor
scas
inc
pop
sbb
loop
fidivr
push
jl
stos
push
xchg
or
cs
xor
push
jno
xchg
lods
daa
aad
xchg
xchg
jo
aas
cmp
enter
pusha
add
push
test
test
cmp
jg
inc
int
ss
dec
xchg
ror
sahf
arpl
mov
pop
fnstcw
mov
push
retf
fbld
nop
dec
dec
adc
sub
or
cwde
push
(bad)
movs
(bad)
cli
ins
sti
enter
call
pop
sbb
cmps
pop
dec
sahf
inc
les
jecxz
push
stos
fist
sti
data16
inc
mov
retf
and
push
sti
jle
mov
das
inc
cmp
scas
int3
inc
in
addr16
xor
scas
push
adc
lds
cmp
sub
xlat
(bad)
(bad)
in
pop
jb
lea
enter
cld
cmp
stos
iret
push
xchg
push
call
pushf
xchg
inc
ja
xor
neg
movs
mov
mov
dec
pop
popf
popa
xlat
cmp
fidiv
pop
in
jecxz
sbb
mov
sub
lahf
imul
fs
push
xchg
ror
clc
lds
not
leave
pop
xor
iret
lods
mov
jb
movs
test
adc
js
xor
push
je
jge
push
or
mov
ds
dec
pop
mov
aas
push
int3
mov
(bad)
into
mov
cwde
inc
jmp
fidivr
sti
push
cld
int3
adc
sahf
add
imul
sub
mov
push
addr16
mov
aam
jl
mov
jmp
push
fadd
cwde
inc
push
xlat
pop
inc
das
cld
xchg
das
or
xchg
xchg
loopne
jge
or
jecxz
test
dec
xor
mov
movs
xor
(bad)
lock
mov
adc
sahf
repnz
or
lods
sub
in
sbb
shr
jmp
pop
fmul
jbe
jno
retf
in
mov
in
sbb
addr16
or
retf
inc
dec
pop
pop
les
pop
inc
or
not
cmp
div
sbb
add
mov
ror
mov
xor
mov
lahf
xor
sahf
or
int3
js
and
cwde
sub
xchg
inc
mov
pushf
mov
pop
js
push
jno
inc
vpackuswb
cmp
jle
xlat
in
sub
dec
pop
xchg
adc
pop
xor
aas
in
xor
fcom
or
fnstsw
ins
mov
aas
retf
inc
jge
popf
sub
mov
rcl
mov
xchg
cdq
call
push
icebp
xchg
push
dec
lahf
bnd
int3
sub
xchg
hlt
ror
(bad)
cmps
jbe
xor
int3
scas
mov
loopne
xchg
leave
pop
pop
jns
out
xchg
dec
pop
mov
mov
mov
xor
and
push
jge
dec
ins
sub
sbb
ja
mov
push
ins
sbb
sbb
or
or
sub
jl
and
out
jecxz
or
cmp
pop
adc
pop
sbb
mov
adc
in
cmp
xor
repnz
pop
mov
mov
(bad)
xchg
shl
inc
push
jo
pop
inc
push
inc
imul
movs
sub
pop
ins
sbb
aas
dec
hlt
inc
xchg
sete
fs
call
sbb
xacquire
jp
inc
add
rol
pop
and
add
test
outs
outs
repnz
add
xor
sar
js
enter
push
xchg
out
sbb
or
mov
in
in
jmp
mov
or
(bad)
retf
or
cdq
icebp
cmp
push
gs
add
add
jmp
jg
jbe
aaa
sbb
out
inc
mov
shl
jle
jns
cli
or
ss
sbb
pop
dec
ret
hlt
mov
jnp
mov
inc
jo
mov
push
ror
shl
sbb
or
stc
outs
push
jo
sti
xchg
mov
test
mov
adc
push
out
aad
push
pop
shl
mov
or
inc
cmp
movs
not
in
inc
mov
aaa
add
in
cs
pop
in
sbb
ret
std
inc
icebp
mov
ins
shl
xchg
inc
cmovl
mov
fldcw
jnp
mov
loopne
mov
xor
ficomp
sti
les
repnz
push
cmp
in
or
cmp
or
mov
jmp
mov
and
xor
and
(bad)
inc
sahf
jbe
fist
js
inc
or
repnz
call
fdiv
and
sub
xchg
lds
mov
mov
mov
sub
cli
mov
or
ds
aad
call
cmp
sti
push
xor
inc
push
or
fcom
(bad)
mov
push
stos
dec
sbb
fmul
cld
xchg
daa
mov
fistp
test
ins
mov
sub
push
mov
ins
ss
js
cmc
mov
pop
mov
dec
(bad)
adc
jno
adc
shr
push
mov
add
scas
jmp
mov
xor
inc
add
sbb
sbb
adc
sahf
xor
bound
sbb
loop
ins
sar
out
das
and
adc
dec
jbe
add
retf
movs
(bad)
ret
shr
arpl
or
sbb
pop
xchg
and
inc
push
xor
pop
loopne
imul
jmp
les
call
pusha
stos
sub
mov
cmp
je
jl
add
xor
pop
sti
ret
inc
mov
pop
inc
sar
lahf
cwde
shl
mov
cmp
push
in
pop
adc
xor
outs
sub
pop
je
cmp
std
lahf
inc
mov
repz
scas
rcr
shl
sbb
sbb
fidiv
lahf
mov
or
imul
(bad)
imul
mov
pop
mov
out
lds
cmp
imul
loope
jns
sbb
cld
mov
sbb
cdq
retf
stos
(bad)
icebp
sbb
mul
inc
loop
stos
imul
icebp
les
popf
mov
adc
mov
outs
push
hlt
int
or
ret
mov
retf
imul
fld
sbb
fdivr
into
pop
sbb
dec
jp
cdq
imul
popa
push
xor
adc
adc
dec
(bad)
xchg
adc
mov
push
mov
pop
or
lock
mov
and
cmc
mov
pushf
mov
xchg
in
cli
inc
cmps
xor
mov
dec
dec
dec
sbb
inc
cwde
imul
ja
fisubr
push
rcr
enter
xlat
push
jne
jns
dec
test
call
ins
push
(bad)
mov
arpl
dec
icebp
ins
xchg
cwde
test
retf
fcmovnu
shl
movs
adc
test
jns
mov
pop
mov
mov
and
in
add
jne
push
fbstp
mov
xchg
mov
and
mov
daa
jg
icebp
push
mov
adc
addr16
ficomp
lods
xor
jae
ret
cmc
rcl
xor
jae
or
ret
lods
pop
loop
mov
nop
xor
pop
dec
test
mov
xor
or
mov
test
int3
les
pop
(bad)
cmp
rol
jmp
inc
shl
cmp
sub
mov
cli
or
xlat
jo
cdq
mov
test
lods
mov
in
xchg
adc
and
cmps
jb
pop
imul
mov
clc
retf
arpl
push
fld
rcl
mov
test
lods
and
imul
push
aam
test
movs
aas
xchg
scas
xchg
mov
xchg
(bad)
dec
ror
stos
xchg
mov
adc
leave
dec
adc
cmp
sahf
stos
jo
cmps
pop
adc
or
jno
aam
(bad)
fcmove
sbb
rcr
or
or
shr
popa
mov
xchg
lods
dec
jge
pop
xchg
arpl
xchg
sub
push
sub
nop
or
ss
inc
xchg
mov
into
scas
cmp
loopne
out
sub
sub
pop
sub
(bad)
cmp
into
jmp
xor
cmps
jmp
sbb
stos
push
jb
jle
mov
(bad)
jmp
mov
call
xor
push
pop
call
push
add
mov
cmp
repnz
inc
add
fcomp
int
int
js
aad
or
ret
mov
push
mov
ficomp
call
imul
test
pop
loope
fwait
push
adc
ret
scas
add
in
pop
icebp
adc
and
dec
jne
mov
aad
mov
(bad)
cli
(bad)
jl
push
stc
stos
adc
test
dec
out
sbb
ins
loop
in
xor
gs
mov
cmps
xlat
or
mov
dec
lods
sub
call
fidiv
int
inc
fbstp
or
mov
stos
jbe
dec
popa
xor
pop
mov
inc
pop
mov
pop
pop
or
test
cmp
pop
in
and
stos
pop
push
lahf
ds
jl
imul
popa
daa
(bad)
xchg
jp
mov
sbb
adc
adc
pop
jle
dec
adc
ss
jbe
fld
jmp
and
repnz
xchg
cmps
jne
ja
mov
fdiv
push
ja
inc
leave
(bad)
inc
in
push
aad
ja
adc
int3
mov
push
ss
jecxz
(bad)
movs
cmp
lods
fmul
mov
movs
cmps
lahf
inc
pusha
jle
sahf
mov
shr
fadd
fdiv
sbb
cmp
adc
movs
test
or
sbb
out
imul
dec
pop
mov
xchg
jl
(bad)
jmp
(bad)
sub
cmp
push
in
pop
or
outs
mov
push
in
dec
pop
sub
cmps
sbb
cwde
jae
fst
scas
or
or
sbb
arpl
cdq
out
adc
pop
repz
call
int
ins
mov
movs
inc
pop
sahf
outs
dec
rcr
and
stos
pop
pop
push
mov
cmps
loopne
loope
add
xchg
mov
xchg
jae
mov
inc
push
in
retf
mov
loope
push
mov
sbb
mov
test
xchg
or
mov
sub
xor
xor
enter
test
jg
jne
repnz
or
xchg
mov
and
mov
call
sti
sahf
in
cmp
ds
out
test
mov
jg
cmc
pop
mov
and
jmp
retf
cld
int
mov
inc
fwait
rcl
fs
adc
and
mov
aaa
mov
dec
ds
pop
and
mov
sbb
test
cs
int
adc
sub
and
and
xlat
(bad)
out
xchg
(bad)
loopne
nop
dec
jge
or
mov
sti
pop
(bad)
(bad)
loope
bound
xchg
mov
sar
stos
jmp
in
jge
mov
mov
imul
add
mov
rcl
dec
idiv
sub
xor
dec
inc
lahf
xor
out
mov
call
dec
repnz
jp
not
lock
mov
lds
imul
dec
loopne
cli
push
mov
inc
sbb
push
jecxz
ja
add
mov
mov
jne
pop
jl
(bad)
and
pop
push
push
jo
shl
mov
in
inc
repz
ret
push
add
pop
jns
out
aam
aas
xchg
sbb
stos
inc
sbb
mov
je
cmp
mov
xchg
pop
out
mov
xchg
stc
jge
scas
in
mov
movs
xchg
adc
and
pop
cmp
pop
aaa
clc
int
dec
lea
xchg
mov
in
push
push
clc
das
rcl
(bad)
in
fadd
mov
jmp
and
inc
in
and
shl
xchg
add
mov
addr16
sub
arpl
ret
jg
hlt
out
pop
mov
shl
neg
scas
push
(bad)
aas
push
ret
std
ins
iret
pop
cmp
inc
sbb
sar
inc
(bad)
outs
xchg
push
pusha
add
and
push
cs
pop
ins
push
pop
xchg
push
or
mov
mov
sbb
add
in
mov
ds
cmps
cmps
mov
mov
loopne
sub
out
pop
shl
dec
jo
stos
mov
xor
repnz
sbb
jge
js
adc
movs
push
gs
rcl
mov
fimul
call
mov
jno
not
dec
inc
nop
addr16
arpl
adc
mov
add
addr16
xor
jle
push
push
mov
shl
(bad)
in
fisub
sub
sbb
out
sbb
mov
les
cs
call
test
push
and
jns
push
mov
inc
movs
enter
add
xor
popa
pop
dec
ror
addr16
add
jecxz
jae
push
shr
mov
cmc
pop
adc
xor
(bad)
jle
push
dec
js
sbb
pop
xor
fadd
lahf
adc
jl
std
mov
dec
icebp
dec
ins
push
mov
or
jecxz
sub
push
lods
cmp
(bad)
jbe
pop
retf
sub
cwde
(bad)
outs
or
ror
scas
mov
and
inc
jmp
enter
imul
mov
mov
(bad)
idiv
pop
scas
cdq
add
rcl
mov
pop
cmps
inc
mov
adc
in
push
sbb
mov
fbstp
fadd
test
xchg
mov
je
div
sahf
mov
inc
mov
inc
fs
add
lea
mov
sbb
dec
add
mov
inc
dec
sub
scas
mov
pop
inc
test
sbb
inc
pop
cmps
mov
mov
cmp
ficom
jl
in
pop
sub
into
rcr
frstpm(287
clc
fmul
ja
sub
rcr
sub
ret
into
in
fnsave
mov
jae
cmps
repnz
sbb
or
dec
dec
es
bound
hlt
sti
loop
jno
inc
ss
(bad)
and
jae
mov
repnz
(bad)
dec
mov
pop
push
call
mov
fdivp
aas
xchg
xchg
mov
into
xchg
adc
jno
xchg
or
cli
cdq
ins
xchg
mov
push
mov
movs
inc
mov
(bad)
cmp
push
(bad)
iret
cs
movs
aas
sbb
inc
sbb
stos
ror
xchg
scas
ins
mov
inc
and
cmps
adc
mov
pop
jmp
adc
cmps
gs
xchg
call
cwde
cmp
fld
pop
lea
ret
aas
test
(bad)
repz
xchg
shl
sub
xor
data16
out
(bad)
in
cwde
mov
inc
pop
adc
fsubr
fdivrp
inc
mov
aaa
movs
ret
inc
ds
jne
popf
inc
cmc
std
sti
inc
dec
mov
mov
jl
adc
mov
sub
outs
pop
mov
sub
xchg
pusha
jno
jno
inc
test
inc
sbb
shl
adc
in
mov
pop
dec
mov
ins
js
push
cld
ret
aad
stc
or
ficom
sub
xor
xor
div
adc
pop
or
dec
or
sub
sbb
pop
sbb
cmp
mov
lods
ins
mov
mov
cs
retf
xchg
js
jge
out
sbb
outs
mov
cli
push
jg
push
mov
retfw
in
mov
clc
mov
xor
jbe
movs
push
mov
aad
dec
(bad)
and
inc
adc
int
jb
pop
xchg
not
mov
push
inc
sub
jb
addr16
cdq
cmp
mov
stos
sub
xchg
inc
leave
arpl
pop
stos
mov
scas
ret
das
shl
jbe
cld
sub
jb
ds
dec
xor
push
pop
sub
pushf
mov
enter
push
pop
int
mov
popf
repz
aas
inc
out
dec
jmp
mov
aam
enter
jnp
mov
pop
mul
sbb
xor
test
dec
in
pop
mov
aad
hlt
and
pop
xor
cmp
fld
pop
sbb
imul
dec
inc
aam
cdq
jns
jmp
sbb
xor
cmp
leave
sub
shl
hlt
and
xor
sbb
mov
ss
cwde
sbb
push
jo
adc
fcmovnu
inc
fimul
mov
ret
outs
xchg
(bad)
mov
lahf
sub
clc
aam
xor
xor
sbb
clc
aad
das
sbb
push
inc
jnp
mov
pop
inc
mov
and
or
xchg
repz
fincstp
adc
jmp
nop
in
test
cdq
xchg
inc
xchg
sub
fstp
mov
and
loope
mov
(bad)
sar
add
cli
(bad)
test
push
mul
mov
jno
bnd
movs
pop
pop
cs
lods
mov
movs
add
jne
movs
sbb
lods
cmp
dec
jbe
jg
shr
pop
cmps
xchg
xchg
(bad)
pushf
jae
jmp
loope
(bad)
mov
mov
jns
ins
test
mov
xchg
jo
repz
xchg
mov
int
inc
enter
inc
inc
sahf
cmc
push
in
ror
xchg
push
inc
xchg
ds
adc
pop
movs
cmps
pop
mov
push
xchg
inc
in
cmps
js
daa
dec
jo
adc
enter
mov
cmp
cmp
out
bnd
or
jo
xor
xor
pop
arpl
push
sub
sbb
out
leave
lods
aaa
jo
or
mov
pop
jle
adc
in
ins
push
mov
fldenv
pop
sahf
cmp
je
xor
add
dec
(bad)
aas
sub
adc
int3
add
lea
inc
xor
xchg
outs
nop
cld
add
xor
mov
dec
mov
cmc
sar
or
xchg
(bad)
jo
fiadd
aad
push
push
jl
xor
pop
adc
cmp
icebp
sar
popa
xor
fcmove
inc
imul
sub
and
dec
bound
mov
sub
dec
(bad)
mov
xor
xor
and
push
inc
repnz
inc
cmp
add
jbe
cmc
movs
jne
jbe
jp
aad
xchg
mov
and
out
es
mov
ret
fwait
xchg
xor
fdivr
scas
xchg
push
shl
shl
outs
out
mov
arpl
dec
cmps
into
push
mov
jecxz
sbb
mov
mov
or
mov
repz
shl
or
xor
add
fadd
in
mov
cmp
test
push
or
clc
ins
stos
ret
cli
pop
in
test
and
xor
nop
and
jbe
dec
jge
cli
fdivr
sbb
push
(bad)
push
into
ror
lock
and
scas
xchg
mov
and
add
sub
daa
lea
dec
cmp
sar
ds
cs
cld
(bad)
scas
sub
lahf
and
movs
test
adc
fs
loop
xchg
sbb
pop
mov
pop
loopne
adc
retf
data16
jecxz
jg
mov
nop
shr
lahf
fcomp
add
ror
push
mov
mov
mov
mov
int
push
or
rcr
pop
jo
mov
push
stos
add
jb
and
jmp
scas
sbb
or
(bad)
adc
pop
mov
adc
lahf
xchg
mov
test
mov
or
mov
jo
cmps
(bad)
fld
in
mov
pushf
in
cmp
cdq
(bad)
ds
sahf
mov
mov
fild
cmp
nop
(bad)
jnp
icebp
ficom
sahf
cdq
push
dec
(bad)
sub
ins
sub
xor
dec
test
and
(bad)
call
loop
ss
jmp
xlat
cwde
(bad)
call
or
pop
(bad)
fxtract
inc
test
fwait
outs
push
jp
aad
rol
aam
jno
inc
or
sbb
xchg
stos
test
out
mov
xchg
shl
cmp
mov
xchg
fcmovu
mov
outs
ficomp
mov
sub
lds
cmc
xchg
and
dec
rcl
dec
int3
jne
cld
pusha
imul
or
add
stos
lea
pop
test
dec
out
cld
rcr
xchg
cli
sbb
lahf
sbb
ins
adc
shr
push
fs
sbb
stos
dec
cmp
imul
out
jbe
test
mov
add
xchg
push
movs
dec
sub
out
leave
push
mov
inc
add
sbb
loope
ds
enter
(bad)
jnp
mov
call
cmp
in
shl
adc
jmp
pushf
popa
fucomip
cmp
adc
test
ror
xchg
xchg
and
xor
dec
imul
jne
sub
push
inc
dec
xchg
dec
sbb
into
outs
movs
int
sbb
jae
rol
test
lods
mov
jmp
enter
and
push
dec
std
add
dec
cwde
leave
cmc
out
pushf
lock
dec
loopne
test
imul
lock
cmc
or
fst
(bad)
mov
pop
mov
jmp
adc
push
sub
fisub
aas
jp
push
int
mov
out
jae
push
xlat
or
ja
dec
div
mov
rol
dec
cmc
imul
out
pop
(bad)
mov
call
mov
sub
sbb
pop
sbb
pop
clc
mov
popa
mov
mov
test
ror
jecxz
inc
or
lods
mov
sbb
cmp
das
xchg
fcmovu
lea
xchg
ss
mov
dec
mov
cmps
add
rcr
es
sub
inc
and
xchg
cmp
shl
test
xlat
xchg
hlt
cmps
(bad)
cdq
(bad)
xchg
mov
cmp
mov
or
sti
scas
xchg
cmp
add
jbe
in
adc
or
xor
out
cmp
mov
out
dec
jp
test
xchg
pop
xlat
xchg
adc
add
mov
jo
out
ret
cmps
out
cmp
cdq
aad
ins
mov
mov
mov
sub
ins
adc
jmp
dec
pop
pop
ret
sbb
popf
and
and
sahf
jmp
out
xor
sbb
es
sbb
push
dec
push
and
inc
push
and
lahf
cmc
mov
cmp
scas
jge
cmp
jmp
jb
(bad)
iret
push
xor
jecxz
stos
push
mov
ins
int
sub
cwde
cmp
shl
pop
sub
fwait
mov
std
mov
(bad)
sbb
and
mov
pop
in
adc
jge
pop
test
push
into
push
add
(bad)
mov
jb
(bad)
or
rcl
loop
xchg
(bad)
inc
add
mov
loopne
or
jge
imul
cmp
ins
scas
dec
sub
mov
add
sbb
push
out
and
jmp
xchg
sti
xchg
mov
push
jl
xchg
cmc
aas
adc
adc
popf
xor
and
push
or
scas
aaa
xor
int3
sub
mov
sub
rcr
jo
dec
push
ds
iret
mov
cdq
mov
lods
jl
cmp
leave
xchg
hlt
dec
in
stos
cmps
sub
popf
movs
dec
and
(bad)
xor
rcl
daa
push
mov
adc
push
adc
fwait
out
cmp
outs
cmp
imul
dec
sbb
sub
fs
mov
fimul
pop
ja
js
add
mov
xchg
rcl
ret
xchg
fwait
cld
jmp
xchg
stc
call
push
ja
not
leave
jae
jmp
xor
inc
stos
mov
in
xor
adc
cmps
add
adc
mov
jecxz
stos
mov
jge
mov
movs
adc
pop
pop
jp
js
call
sub
repz
das
mov
sub
cmp
shl
ss
jne
mov
test
cdq
inc
aaa
jnp
rol
addr16
imul
cmp
lock
retf
xor
push
push
mov
imul
pop
mov
cmp
scas
mov
je
push
nop
gs
shl
cmp
or
fwait
(bad)
fs
sar
mov
enter
das
in
mov
jmp
mov
xor
mov
sar
inc
jge
or
jl
das
xor
xchg
fadd
fidivr
jbe
jge
sub
mov
cmp
call
mov
sub
iret
addr16
cmp
sub
fisttp
cmp
pop
mov
sbb
and
es
cdq
call
xor
stos
int3
jecxz
fisub
mov
add
lods
in
lods
fdiv
adc
shr
cmp
xchg
or
int3
cmps
sub
cli
xor
push
push
mov
in
std
sub
pushf
push
fisubr
sbb
test
cmp
jo
dec
xor
dec
and
out
mov
pop
push
adc
rol
push
xchg
mov
ror
push
ror
adc
add
loope
push
pop
sub
dec
jbe
cli
mov
ds
cmp
pop
lock
xchg
repnz
das
jae
cmp
scas
call
and
popf
push
rcl
xor
fist
das
ja
xchg
(bad)
loopne
stc
test
inc
add
or
ins
mov
fiadd
outs
ins
(bad)
cmps
std
pop
or
mov
and
or
jbe
stos
sub
mov
cmp
jmp
int3
lahf
ret
push
add
and
outs
aaa
je
mov
sub
sahf
hlt
fwait
mov
mov
sbb
(bad)
and
adc
pop
outs
jmp
loop
mov
add
repnz
jmp
in
(bad)
leave
repnz
into
push
fld
jnp
shl
(bad)
push
jle
mov
or
inc
add
aaa
sahf
lea
hlt
xchg
ret
pop
and
xchg
add
into
mov
(bad)
add
jne
or
and
je
loopne
push
mov
push
fdiv
in
jp
les
or
xor
xchg
lods
pop
popf
sub
ret
ficom
mov
pop
or
mov
mov
dec
pop
xchg
pop
in
in
cmp
and
dec
mov
or
cdq
sbb
nop
inc
enter
lods
cmps
mov
repnz
jmp
inc
push
xchg
push
and
push
(bad)
sbb
push
and
jl
sbb
mul
nop
add
push
dec
aaa
push
mov
out
scas
or
jg
jle
inc
xchg
pop
pop
xchg
(bad)
mov
mov
pop
cld
and
fstp
add
cwde
mov
int
mov
inc
fsubr
push
sbb
(bad)
stc
adc
dec
sub
mov
stos
jno
mov
mov
and
je
into
scas
cwde
push
mov
fimul
mov
arpl
mov
int3
ficomp
or
sbb
or
bound
int
lods
stc
inc
cmc
and
sbb
(bad)
mul
xor
imul
jp
shl
xchg
or
cmp
cmp
dec
jmp
sbb
sti
pop
pop
lock
sbb
and
imul
js
lea
mov
(bad)
(bad)
in
rcl
icebp
movs
push
pop
pop
and
xor
xor
adc
sbb
iret
pop
iret
pushf
jo
lods
cmp
mov
and
ins
sub
and
popa
jbe
rcl
jecxz
daa
ret
dec
ins
aaa
aas
mov
push
jp
sahf
xor
shl
fstp
mov
ror
add
mov
stos
mov
aam
sbb
xor
cmp
xchg
shl
idiv
ret
lahf
cmp
popf
sbb
int3
stc
jle
(bad)
imul
data16
xchg
push
xchg
push
push
fdivr
sar
push
div
imul
mov
test
je
sbb
and
aaa
arpl
call
clc
(bad)
jle
and
shl
int
aad
and
sub
leave
mov
popa
rcl
scas
mov
mov
int3
jmp
and
into
cmp
in
xor
inc
loopne
jmp
cmp
int3
loopne
pop
aas
out
dec
mov
arpl
sbb
sbb
shl
xor
cld
mov
cmps
add
ret
push
cmp
(bad)
fisub
mov
push
cs
and
mov
fisubr
fcomp
push
dec
rdtsc
repnz
push
or
jl
(bad)
test
adc
fsub
pop
dec
jecxz
rol
or
aam
ds
stos
xor
rcl
pop
mov
sub
mov
cmp
sbb
or
xor
push
xchg
ror
les
mov
xchg
or
dec
xor
mov
out
js
pop
xor
push
and
int3
push
fsubr
fld
add
adc
ss
lds
or
adc
mov
test
sar
dec
jae
cmp
faddp
aas
jne
or
mov
push
add
inc
scas
pop
inc
and
and
cmps
inc
lahf
imul
pop
fsubr
mov
inc
shl
push
xchg
sub
mov
and
push
mov
cmp
pusha
aad
and
sub
out
loope
and
leave
mov
fnstsw
pushf
cmc
inc
cdq
(bad)
inc
in
push
lea
outs
gs
mov
dec
fdivr
sbb
test
lea
xor
(bad)
jmp
xchg
mov
xchg
enter
adc
ja
mov
xor
std
inc
or
and
retf
scas
je
movs
mov
cmps
test
(bad)
scas
push
cmps
fild
sub
mov
add
jne
stos
fist
adc
ror
ds
(bad)
daa
daa
mul
pop
lea
xor
pop
dec
and
stos
int
jl
pop
or
adc
xchg
(bad)
(bad)
in
add
mov
xchg
or
(bad)
loopne
sbb
cld
adc
sbb
pusha
ffree
pushf
xor
dec
lea
mov
fwait
(bad)
dec
nop
sub
ds
dec
scas
pop
xchg
mov
or
adc
xchg
std
mov
mov
lea
mov
xor
sbb
xchg
loope
cmp
xchg
out
lods
xlat
pop
retf
aam
pop
adc
outs
adc
out
mov
or
mov
sub
stos
popa
fstp
pusha
mov
hlt
cmc
sbb
and
popf
and
mov
push
or
inc
iret
adc
gs
mov
jbe
fist
push
and
mov
mov
xchg
rcl
scas
mov
rcr
jle
pop
out
cmc
add
jmp
inc
and
sub
mov
add
pop
test
sbb
sbb
shl
fistp
sub
shl
mov
jle
dec
xchg
adc
stos
jbe
addr16
mov
stc
sbb
mov
ins
cmp
(bad)
xchg
pop
mov
rol
cmp
add
(bad)
shr
xchg
cli
sub
mov
nop
sbb
push
jbe
pop
fild
aas
lods
ss
mov
pop
pop
aas
inc
dec
sbb
xor
push
xchg
inc
push
pop
ss
sub
stos
jl
mov
jmp
enter
sbb
jecxz
scas
sti
pop
dec
loopne
jecxz
lahf
jecxz
sub
dec
jno
xchg
push
(bad)
in
cwde
mov
push
mov
repnz
fwait
mov
sbb
sub
aaa
pop
or
xor
mov
pushf
cmp
test
sbb
(bad)
mov
in
or
cs
mov
imul
int
jbe
xchg
clc
adc
inc
pop
inc
loopne
mov
es
mov
sub
in
fst
ins
sbb
add
cmc
pop
xchg
mov
loopne
outs
sbb
xchg
inc
and
cmp
les
shl
dec
sub
add
das
sbb
mov
sbb
(bad)
pushf
cmp
pop
jnp
or
(bad)
fld
dec
test
or
retf
xor
retf
shr
(bad)
pushf
or
dec
fld
das
test
jle
ss
(bad)
sub
js
les
lods
add
andnps
xchg
retf
and
iret
gs
push
lahf
ins
(bad)
jle
addr16
mov
iret
xor
test
sbb
dec
adc
int3
dec
jmp
jns
test
sub
push
imul
fst
pop
call
lock
sbb
dec
lods
inc
mov
dec
pop
test
stc
sub
inc
(bad)
test
in
or
cmp
ins
std
ds
mov
test
inc
or
mov
add
cmps
cmp
xchg
lods
jmp
ins
fst
cmp
cmp
mov
inc
cmp
fild
mov
add
mov
adc
test
or
xor
dec
fwait
cld
call
retf
or
dec
nop
inc
jae
cdq
mov
push
test
jmp
(bad)
cld
stos
push
gs
stos
xchg
in
cwde
fst
jbe
push
fwait
or
dec
bound
(bad)
sub
sub
in
test
pop
jl
aad
dec
test
pop
xchg
mov
inc
test
or
dec
xchg
dec
call
pushf
repnz
mov
lock
fcom
jmp
sbb
jne
mov
and
retf
sub
dec
sar
or
dec
cmp
test
inc
adc
push
scas
sbb
dec
dec
ja
sbb
sub
xchg
sub
pop
mov
pop
test
mov
jle
adc
jnp
ins
ins
and
movs
movs
sbb
aam
aad
jg
pop
sub
movs
mov
in
adc
ret
sub
nop
sbb
loop
ins
cmc
ins
mov
jp
repz
adc
dec
inc
dec
pop
leave
jne
jno
pop
sub
sub
xchg
ret
cmp
dec
fistp
sbb
mov
test
add
jne
sub
fistp
std
add
dec
xlat
(bad)
push
ins
aad
scas
test
mov
or
ss
clc
pop
test
leave
repz
aas
mov
hlt
cdq
and
cmp
adc
mov
lahf
and
cmp
and
cli
ret
jmp
push
xchg
push
outs
inc
jae
sub
mov
call
popa
iret
inc
scas
popf
(bad)
jg
sbb
ins
loopne
out
add
cmp
mov
in
cmp
xchg
jmp
std
test
sub
sub
imul
and
sbb
fstp
nop
pop
add
inc
dec
clc
and
inc
stc
inc
inc
pusha
push
push
and
sbb
or
mov
outs
cmp
int
and
mov
gs
leave
out
dec
pusha
lods
jl
in
dec
es
and
jo
lock
int
sbb
mov
loop
jmp
inc
or
sub
mov
xchg
xor
xor
adc
jne
xor
cmps
xor
mov
loopne
mov
aas
mov
xchg
mov
sub
(bad)
out
and
sub
sub
add
ds
in
in
aaa
xor
test
nop
test
add
mov
jle
jns
mov
sbb
mov
loopne
sbb
inc
je
mov
pmaxsw
cmp
xchg
dec
loopne
fild
mov
pop
sbb
repnz
dec
test
jmp
ins
ror
push
jb
push
sub
mov
jge
stos
call
pop
(bad)
jecxz
or
cmp
push
scas
shl
je
mov
fs
push
sti
push
mov
mov
sub
cmp
xchg
push
pop
xor
or
loopne
(bad)
jp
mov
dec
iret
je
lea
fiadd
pop
jbe
inc
mul
stos
jmp
out
add
cdq
les
(bad)
jl
mov
adc
movs
xchg
mov
or
test
out
sbb
mov
push
fs
lock
imul
mov
add
adc
in
sbb
rcr
popa
jae
mov
inc
pop
mov
mov
push
(bad)
repz
loop
mov
aad
cli
cwde
and
cmps
fstp
xchg
ja
test
shl
inc
(bad)
imul
loopne
outs
and
lds
loope
or
(bad)
cmp
aad
sub
icebp
jg
enter
mov
mov
aaa
test
and
pop
mov
and
fistp
out
add
int
iret
neg
out
int
out
in
xchg
(bad)
leave
inc
inc
sahf
xor
cmps
lods
and
mov
and
call
jb
iret
xchg
test
movs
cs
aad
push
loop
hlt
cmp
cmp
cmp
ficom
pop
mov
jp
daa
jne
std
in
and
jo
or
sub
sbb
cmp
icebp
rcl
cmp
push
mov
jp
js
push
push
mov
lahf
movs
push
inc
push
mov
sub
test
jns
movs
lea
inc
push
xchg
and
lds
xchg
mul
test
daa
scas
mov
shl
mov
stos
inc
pop
lea
xchg
ins
push
inc
(bad)
mov
pushf
sahf
sbb
test
jge
aad
push
popf
ss
mov
(bad)
ror
(bad)
in
jge
jmp
xor
cmp
cwde
sbb
(bad)
stc
iret
jns
cwde
into
ds
xor
fist
cmp
jb
mov
scas
adc
sub
call
(bad)
std
dec
xchg
jmp
ins
scas
lods
mov
jo
outs
cmp
xor
mov
mov
dec
mov
ins
adc
jmp
js
bound
push
add
jo
sbb
js
push
cmps
sbb
dec
lea
ffree
icebp
test
push
fcomp
mov
xchg
or
dec
add
sbb
adc
xchg
outs
arpl
sti
inc
adc
mov
jle
inc
xor
ss
sahf
sbb
mov
mov
or
pop
(bad)
retf
popf
pop
sbb
test
dec
jg
js
cmp
not
xor
test
dec
adc
jae
jmp
repz
dec
js
sbb
inc
mov
scas
xor
inc
inc
cmps
je
sbb
sub
div
shl
int
js
int3
push
in
mov
push
push
mov
mov
dec
out
cmps
ret
xor
retf
jg
jbe
addr16
pop
fist
repnz
add
dec
(bad)
stos
(bad)
push
out
dec
rcl
cmc
xchg
adc
lds
in
mov
outs
push
lahf
jg
daa
fcom
mov
jle
mov
movs
xchg
jge
adc
sar
pop
pop
je
out
adc
movs
or
xchg
dec
(bad)
cmp
pusha
push
pop
fmul
outs
push
push
rol
push
or
fidivr
push
inc
jae
ret
adc
ins
fstp
xchg
inc
in
push
dec
loope
cli
(bad)
pusha
not
cmp
bnd
mov
jb
mov
stc
sbb
mov
rcl
(bad)
mov
cmps
and
shl
push
xor
leave
xor
rol
inc
popa
push
and
xor
test
jmp
dec
aam
push
dec
ficomp
aad
dec
mov
pop
bound
neg
repnz
inc
jge
or
pop
out
xor
nop
pop
in
push
test
pop
push
push
sub
popa
jmp
out
mov
ficom
rcl
jmp
movs
add
or
push
sub
cmp
fimul
mov
dec
dec
sbb
in
pop
mov
imul
jmp
sbb
jg
cmp
(bad)
cwde
lahf
lods
fwait
sub
xlat
sar
or
lahf
shl
mov
xchg
pusha
imul
cmp
jle
icebp
push
bound
push
jmp
std
psraw
push
jge
lods
lea
mov
add
pop
jns
pop
test
mov
repnz
fadd
xor
rep
ss
mov
add
in
and
xchg
retf
xor
push
mov
push
add
xchg
ja
or
bound
loope
test
inc
addr16
lea
inc
adc
pop
retf
push
idiv
int3
pop
sbb
cmps
and
pop
fdivr
shr
test
sahf
cmp
loope
and
mov
xchg
dec
das
cmps
repnz
shl
fisttp
stc
pop
out
dec
test
int
test
mov
fs
sti
xchg
push
sub
adc
sub
sub
rcr
push
xchg
lods
sub
bound
jnp
scas
sub
aad
cmps
fucomp
inc
and
sbb
xor
sahf
xor
xchg
xchg
sbb
xchg
mov
jmp
outs
sbb
and
rcl
xor
push
jp
pusha
fcomp
(bad)
cmps
pusha
stos
or
js
pop
xchg
enter
lods
jo
out
xor
or
cli
jp
jmp
adc
mov
scas
jmp
and
das
fidiv
stc
out
mov
sar
call
inc
nop
mov
imul
lock
pop
loope
pop
fwait
sub
inc
cmc
xor
jp
adc
sti
repnz
ss
xchg
test
xchg
adc
add
mov
mov
xchg
lock
push
rcl
imul
ss
retf
push
adc
mov
mov
mov
lea
jmp
mov
mov
inc
and
mov
xchg
cmps
xlat
xor
mov
popf
sub
xor
neg
scas
ja
sahf
sub
div
dec
test
hlt
pop
jp
ret
cmp
cmp
jmp
das
(bad)
ficomp
mov
sbb
cmp
push
out
fcomip
add
pushf
ins
popa
mov
pop
pop
into
fs
xchg
pop
pop
addr16
aad
mov
adc
mov
(bad)
leave
jmp
jae
inc
call
or
xor
fimul
cmp
sub
into
retf
ret
push
push
adc
or
sbb
adc
push
mov
mov
enter
repz
mov
dec
dec
rcr
mov
cmp
loope
aad
ficom
add
std
pop
test
push
clc
mov
add
sub
sub
in
(bad)
out
repnz
xor
dec
add
test
cmp
add
or
and
mov
jmp
push
adc
fstp
aas
adc
or
fisttp
iret
push
pop
je
jnp
sbb
scas
pop
stos
jl
call
xchg
xchg
shl
jg
sub
dec
gs
jecxz
cli
push
inc
pop
es
cmc
inc
stc
or
sahf
test
ins
xor
sahf
outs
fwait
in
push
mov
push
scas
dec
push
retf
add
cld
pop
das
in
mov
loopne
icebp
cmp
fdiv
adc
gs
loope
push
xor
xor
sub
xor
lds
sub
shr
xchg
or
add
pop
fimul
adc
cld
push
sar
mov
or
inc
ss
test
mov
jg
mov
adc
xor
test
(bad)
test
into
push
sub
sbb
punpckldq
dec
retf
or
lods
adc
jle
les
addr16
cld
cwde
sub
cmp
xchg
mov
pop
mov
pop
out
pminub
sub
push
enter
pop
push
push
fst
mov
cld
and
xor
test
adc
outs
adc
fs
sub
gs
popa
mov
push
pop
into
(bad)
push
pop
push
dec
je
loopne
xor
sbb
xchg
das
inc
inc
cdq
js
test
xchg
jb
inc
test
xlat
fild
aaa
cmps
or
add
out
aaa
xor
retf
fstp
call
push
sbb
and
cwde
mov
or
fidivr
pop
leave
xor
mov
push
inc
jne
sub
daa
dec
test
test
jns
mov
push
cmps
jg
sbb
xchg
(bad)
push
sahf
cmp
xchg
cmp
sub
repnz
idiv
xchg
aas
cmp
add
dec
jne
pop
or
cmc
scas
stos
add
pop
outs
out
xchg
fcmovu
xor
scas
lods
push
out
or
int
mov
jmp
sbb
shr
or
repz
mov
dec
or
add
pop
inc
retf
retf
fild
push
xor
outs
dec
fs
xor
sub
lea
lea
fist
in
mov
call
xor
push
out
lock
sbb
fld
imul
neg
out
in
push
int3
iret
lods
jno
in
outs
mov
mov
je
hlt
cmp
mov
add
pusha
jno
xchg
in
lea
xchg
lahf
(bad)
clc
unpckhps
lods
sbb
cwde
(bad)
jb
xor
dec
lahf
test
pop
mov
icebp
loop
xor
xlat
je
fsub
add
add
xor
jns
pusha
add
and
es
iret
(bad)
movs
in
ror
cmp
outs
inc
popa
add
xor
pop
xor
repnz
test
adc
dec
scas
or
cmps
adc
loopne
pop
mov
pop
mov
ror
pusha
pop
or
or
jg
sahf
inc
add
gs
push
out
dec
push
mov
aad
add
and
pop
inc
test
mov
pop
inc
and
sub
mov
sti
test
jecxz
repz
pop
jbe
mov
dec
xchg
xchg
not
cmp
inc
out
lahf
or
lds
ins
sti
out
lods
push
divps
mov
mov
cmp
xor
rcr
les
xor
sub
sub
popf
jmp
pop
dec
jl
push
xor
stos
cdq
sub
cmp
jno
daa
jmp
push
repz
lea
inc
aaa
rcr
dec
pop
ret
pop
(bad)
push
lahf
cld
(bad)
pop
mov
lahf
test
movs
cmp
iret
call
and
mov
ins
(bad)
sub
mov
pop
mov
out
push
inc
ins
mov
loope
mov
cmp
pop
xor
sbb
sub
gs
and
inc
stos
mov
cmpxchg
das
pop
jnp
cld
(bad)
ret
mov
stos
mov
push
addr16
add
or
(bad)
fist
xor
push
and
je
pop
cmps
aaa
ins
pop
fcomp
mov
je
mov
pushf
test
(bad)
cld
scas
xor
fmul
mov
push
adc
ss
xchg
ss
(bad)
into
and
jg
push
push
sbb
nop
pop
push
mov
sbb
out
sbb
shl
cmp
mov
adc
lea
push
cld
mov
dec
xchg
test
mov
mov
mov
xchg
retf
and
sbb
mov
mov
(bad)
xchg
stos
dec
dec
dec
inc
inc
mov
mov
loope
scas
outs
ins
lds
in
addr16
adc
call
mov
rol
dec
(bad)
adc
rol
xlat
mov
pop
cmp
nop
es
shl
sub
pusha
rcr
xor
pop
cmp
stos
ins
or
inc
sub
icebp
mov
rol
cmp
pop
ins
jnp
ret
and
lods
xor
lock
pop
sbb
add
dec
mov
loopne
bound
les
push
imul
push
adc
jg
sbb
xchg
call
inc
jnp
xchg
aam
xor
sahf
jg
pop
loopne
dec
cmps
les
push
pop
and
fwait
add
ins
scas
add
push
ficomp
mov
push
xchg
pop
adc
lock
xchg
inc
add
xor
lods
mov
ja
xor
sub
inc
shl
dec
fidivr
sub
cmc
fist
push
push
push
dec
and
into
inc
(bad)
dec
shr
(bad)
sub
mov
ins
dec
dec
cs
adc
inc
and
out
push
add
std
or
dec
(bad)
iret
in
imul
xchg
sub
inc
dec
mov
cmps
jg
add
mov
or
add
jp
sbb
xchg
call
push
sub
mov
(bad)
je
ret
dec
inc
out
(bad)
ficomp
push
add
and
dec
pusha
adc
movs
into
lods
jl
out
jnp
and
ins
pop
sahf
xor
jbe
push
(bad)
and
or
mov
outs
push
fstp
cmc
or
(bad)
out
int3
cli
repnz
arpl
cs
sbb
out
(bad)
rol
stos
mov
jae
jae
imul
sbb
icebp
xor
out
cmp
ror
(bad)
fdivr
pop
aad
cli
jno
cmp
movs
or
adc
mov
int3
vmulsd
inc
sub
or
cmp
fimul
sub
sub
and
or
xor
mov
add
div
push
xchg
mov
xor
les
and
lea
out
add
sub
add
sbb
outs
and
inc
fisttp
inc
test
xchg
mov
xchg
jo
cmp
ja
mov
inc
enter
jns
das
mov
inc
dec
lock
mov
add
scas
test
(bad)
pop
sahf
jecxz
(bad)
arpl
sahf
lock
dec
mov
sub
addr16
push
cdq
or
cld
fisubr
pop
leave
adc
out
lahf
adc
out
mov
movs
jg
icebp
sbb
adc
adc
jecxz
sbb
fidivr
inc
gs
(bad)
jmp
fisub
jge
test
xchg
lods
cld
jmp
jns
mov
xor
sub
jg
popa
mov
mov
cmp
xchg
or
add
pop
mov
(bad)
mov
out
mov
shl
and
out
xchg
leave
sub
shr
pop
inc
cmp
jge
sahf
clc
jmp
cmc
jl
inc
xchg
outs
(bad)
cwde
sti
dec
jnp
test
push
push
cmp
loop
pop
sbb
out
or
jecxz
adc
ins
repnz
popf
ins
fwait
std
call
hlt
iret
fisubr
sbb
inc
loop
xchg
das
popa
fwait
nop
sub
fucomip
test
xor
push
xor
push
aaa
push
adc
int
mov
xor
cld
fdivp
xchg
gs
movs
addr16
xor
(bad)
jp
dec
sti
push
pushf
add
movs
clc
jnp
jno
fwait
adc
fwait
jae
nop
or
or
jbe
jo
push
inc
fimul
ret
sbb
lods
inc
or
mov
push
pop
cmp
sbb
sub
mov
das
and
jns
or
cmp
push
mov
mov
lds
xlat
pop
lods
and
iret
dec
(bad)
(bad)
out
xchg
xor
pop
(bad)
retf
mov
icebp
pusha
outs
push
cmps
pop
pusha
or
imul
in
fimul
or
std
mov
mov
sbb
pusha
scas
sub
cmp
(bad)
int3
jno
fwait
call
das
shr
scas
scas
add
mov
pop
iret
or
fisubr
mov
les
adc
add
(bad)
adc
xor
and
push
jl
aam
mov
aad
xor
mov
enter
fsub
xchg
pop
inc
inc
(bad)
in
pusha
retf
int
js
xchg
outs
pop
cmc
aad
xor
jbe
xlat
dec
lods
lods
push
sub
cmp
cmps
pop
cmp
sub
inc
shr
iret
sbb
xor
push
and
jge
dec
movs
mov
mov
cdq
js
div
mov
push
sti
imul
inc
push
add
lods
dec
mov
xchg
(bad)
gs
cdq
std
cmp
or
mov
sbb
mov
xchg
rcr
mov
stc
hlt
sbb
inc
ret
mov
sub
xor
popf
mov
ja
mov
cmps
adc
lgs
jp
iret
push
aas
push
loopne
js
movs
in
mov
sahf
test
inc
cdq
xor
sar
xchg
lahf
mov
not
loope
xor
es
sbb
(bad)
add
outs
push
repnz
or
push
loop
sbb
popf
mov
pop
sahf
das
out
adc
xor
cmp
retf
push
sbb
push
sub
test
les
push
jp
into
(bad)
push
push
ret
movs
aam
xchg
daa
out
icebp
jnp
jmp
mov
dec
adc
push
inc
(bad)
jo
ja
push
jnp
fisubr
outs
(bad)
jl
ret
aas
mov
fcom
or
(bad)
daa
(bad)
rcr
test
pop
gs
enter
int3
or
out
adc
movs
push
or
and
sub
outs
mov
stos
mov
mov
push
data16
(bad)
jp
mov
fsub
into
mov
fs
outs
es
mov
or
bound
inc
std
mov
outs
fsub
addr16
sub
or
xchg
mov
inc
out
daa
cmps
inc
mov
rcl
pushf
xchg
cmp
adc
add
sub
mov
pop
popf
add
out
pop
rol
mov
in
popf
lds
in
sub
add
xor
pop
fistp
popa
dec
mov
cmps
mov
sbb
dec
loope
add
test
xor
adc
jmp
daa
pop
or
xchg
(bad)
out
add
push
jae
sbb
pusha
popa
sub
adc
adc
inc
clc
les
pop
jle
mov
inc
out
or
aas
(bad)
out
xchg
xor
bound
push
sbb
sub
test
mov
sbb
movs
popa
xor
mov
repnz
fidiv
fcmovu
cmp
rcl
or
xchg
jle
xchg
push
test
in
call
enter
jl
cmp
sbb
and
icebp
pop
mov
ret
jb
in
cmc
jge
outs
xchg
addr16
fistp
xor
inc
mov
fisttp
call
sub
pop
loop
daa
pop
mov
xor
imul
loopne
sti
xchg
push
inc
bound
cmps
add
ret
xlat
or
dec
loopne
dec
and
loopne
dec
xchg
ret
repz
inc
call
fist
mov
adc
mov
rcl
jne
scas
mov
and
std
inc
pop
mov
test
rol
retf
test
cdq
imul
and
push
adc
das
(bad)
sub
mov
mov
sbb
sub
aaa
daa
mov
or
call
sbb
mov
pop
adc
xchg
es
sub
inc
push
adc
add
pusha
adc
mov
xor
inc
mov
pushf
aaa
mov
xlat
and
push
or
xchg
mov
movs
push
pop
add
fdiv
fcom
std
mov
cmc
repz
gs
mov
add
jge
jns
hlt
mov
nop
popf
(bad)
push
dec
push
popa
shr
and
test
cmps
lahf
dec
jae
adc
ror
movs
xor
dec
push
ror
sub
lock
jne
into
inc
fmul
cmp
movs
out
sub
sti
inc
mov
(bad)
das
lea
ins
rcr
and
fcom
sub
call
sub
jnp
xor
push
(bad)
jle
sbb
scas
jecxz
cmp
jmp
retf
test
adc
mov
mov
gs
jae
mov
xor
and
scas
fsubr
jbe
fnstenv
xor
xlat
loopne
ret
cmp
in
inc
sbb
pop
jno
das
push
add
mov
ror
dec
sub
and
mov
neg
in
ins
pusha
pop
pop
call
arpl
pop
and
cld
pop
mov
bound
cli
push
(bad)
and
loope
int
push
lds
lahf
repnz
mov
nop
sub
sub
inc
dec
das
(bad)
sub
sbb
retf
inc
jmp
push
mov
nop
push
shr
inc
cmp
or
mov
inc
das
into
sub
ss
jecxz
ins
rsqrtps
or
rcl
inc
add
mov
xor
push
add
push
pop
ins
into
dec
jns
jle
add
retf
mov
mov
aam
test
(bad)
scas
jmp
mov
add
cli
and
(bad)
fsubr
imul
sub
sbb
mov
xor
lods
and
sbb
dec
xchg
inc
stos
call
sbb
data16
mov
dec
pop
mov
jp
fiadd
jle
xchg
push
loopne
mov
ror
pop
adc
pop
jo
add
add
pop
ror
movs
cdq
and
mov
mov
pushf
out
inc
in
xor
mov
cmc
lods
xor
sub
jg
or
mov
fwait
popf
xchg
pusha
aam
adc
add
repz
xlat
inc
mov
popa
stos
xor
retf
inc
rol
adc
add
fsub
pop
cmp
pop
(bad)
imul
imul
xlat
imul
xlat
clc
popa
mov
loop
out
sbb
jecxz
hlt
mov
pushf
inc
pop
aad
mov
icebp
cmps
jo
adc
or
adc
sbb
cmp
pop
jns
jmp
sbb
inc
push
int3
push
test
leave
sti
pop
pop
fs
dec
je
stos
add
jb
mov
push
jns
stos
push
movs
outs
jo
or
bound
add
xor
mov
lods
dec
daa
mov
pop
pop
lods
lock
cs
or
or
mov
fcomi
ret
scas
push
jmp
mov
jecxz
cmp
add
test
gs
pop
or
(bad)
and
aaa
sbb
pop
sbb
sub
sub
pop
inc
adc
movs
sub
xor
jle
sub
movs
es
add
push
add
push
rol
dec
sar
dec
inc
push
pop
pushf
(bad)
pop
cmps
xor
dec
push
add
enter
adc
and
bound
mov
out
pop
push
sbb
clc
inc
mov
in
pop
popf
(bad)
out
or
jmp
xchg
push
pop
sub
mov
cli
iret
out
xchg
(bad)
sub
arpl
sbb
jle
and
mov
sub
neg
sahf
bound
jg
push
sbb
test
das
push
(bad)
mov
stc
imul
inc
imul
in
aad
fsub
scas
je
dec
adc
jl
retf
ins
faddp
es
xchg
leave
ss
loop
ss
dec
jae
retf
popa
shr
js
cmc
(bad)
rcl
(bad)
mov
and
jnp
in
inc
shl
mov
mov
jge
iret
adc
mov
jbe
call
imul
(bad)
fsubr
cmc
add
and
loopne
push
pop
sub
or
ds
ds
adc
jno
scas
push
fld1
push
movs
in
cld
(bad)
movs
adc
xchg
mov
loope
jmp
adc
add
cli
retf
and
pop
std
aam
mov
arpl
adc
mov
(bad)
mov
leave
push
iret
dec
leave
popa
push
dec
sahf
dec
or
dec
mov
sbb
add
cmp
(bad)
test
sub
sub
sbb
adc
sbb
inc
sbb
inc
jne
push
stos
jmp
icebp
repnz
loope
add
cs
scas
test
mov
mov
sbb
ds
mov
es
out
push
sbb
pop
mov
lods
test
push
ins
loope
gs
sbb
out
mov
lods
das
sub
jle
fisttp
xor
cdq
(bad)
sbb
push
sbb
movs
sbb
jle
push
pop
hlt
psubd
or
inc
push
xchg
adc
push
leave
jno
pop
movs
stc
lea
fcomp
stc
jp
jmp
push
cmp
adc
fst
cld
xchg
adc
pop
pusha
xor
fsubrp
mov
or
or
iret
sub
scas
cmc
and
push
cmp
xchg
cs
cs
ret
fisttp
mov
lods
les
xchg
test
xor
adc
rcl
inc
push
sub
fiadd
scas
add
rcr
cmp
ins
cld
bound
mov
fcomi
xchg
mov
leave
inc
aas
mov
addr16
xlat
js
sbb
stc
gs
adc
lods
int
cmp
movs
adc
aam
jae
push
aam
inc
pusha
push
es
jp
jle
cmp
(bad)
adc
idiv
dec
fldenv
out
xchg
pusha
mov
bound
gs
lods
in
dec
push
jl
fisub
pop
shr
sbb
int3
xchg
push
cmp
sub
jnp
sub
push
dec
iret
bound
(bad)
dec
mov
loopne
bound
push
jp
xchg
data16
fwait
mov
pop
xchg
pop
and
mov
stc
add
push
out
cmp
ficom
sub
inc
fs
jecxz
mov
inc
inc
mov
and
pop
cli
into
pop
mov
ret
and
cmc
rol
add
hlt
xchg
push
rcl
jp
rol
pop
lock
(bad)
iret
and
daa
sbb
sbb
aas
fcomip
dec
ins
mov
jle
mov
mov
cmp
test
jo
lock
test
add
and
jcxz
rcr
test
and
jmp
xor
sbb
int3
xchg
mov
int3
or
test
shl
pop
test
and
int
xchg
inc
mov
aam
add
test
mov
rcr
sbb
push
mov
stos
(bad)
in
add
cmp
sbb
mov
shl
or
popa
mov
xor
mov
and
mov
jns
mov
cmp
sub
mov
mov
movs
mov
dec
dec
xchg
jbe
xchg
sar
mov
or
jae
inc
stos
add
jecxz
test
icebp
push
add
add
outs
shl
gs
retf
sub
mov
sub
and
scas
xor
fs
ja
cs
in
sti
pop
test
jns
sti
jno
xlat
loop
stos
xchg
arpl
mov
pop
rol
and
sub
jmp
clc
push
mov
leave
and
adc
rcl
enter
enter
mov
add
dec
(bad)
xor
mov
(bad)
aas
cmp
or
ins
fwait
arpl
rol
pop
fwait
mov
repnz
xchg
mov
sub
push
int3
push
pop
push
mov
div
shr
stos
aam
gs
sbb
cmps
cmp
jmp
test
inc
mov
jge
in
or
(bad)
out
sub
add
add
mov
hlt
mov
iret
stc
ins
adc
inc
adc
jns
cli
mov
sub
xchg
dec
jb
in
pusha
inc
cmps
xor
retf
and
cwde
shl
push
push
pusha
pop
inc
popf
cmp
xchg
jnp
add
adc
out
push
mov
les
xchg
int3
das
push
jg
and
out
mov
add
lock
and
stos
arpl
fistp
cld
lods
test
add
bound
rcl
jmp
(bad)
lock
and
push
xlat
mov
aam
jmp
into
cmps
cmps
retf
sbb
jecxz
dec
loope
lds
icebp
mov
inc
into
lods
aas
mov
out
int3
mov
jg
(bad)
shl
dec
ins
push
adc
fdiv
mov
rcl
mov
scas
(bad)
ror
stos
sub
dec
cli
pop
mov
pop
int3
and
in
lds
inc
pop
fistp
retf
rdtsc
imul
cmps
(bad)
in
mov
ror
push
clc
rcl
and
ds
push
(bad)
out
cmp
ins
(bad)
loopne
push
adc
ret
adc
add
add
enter
push
push
retf
lods
xchg
jnp
add
pusha
loop
push
mov
imul
arpl
xlat
sub
jmp
inc
adc
inc
push
adc
sti
sbb
int
add
or
dec
loopne
div
in
mov
ss
mov
xchg
adc
or
and
je
nop
loope
pop
inc
mov
sub
loope
dec
cmp
pop
arpl
ret
push
adc
cli
jae
imul
jo
sti
mov
cmc
movs
scas
pop
(bad)
xor
jbe
add
retf
mov
data16
mov
adc
shr
das
rcr
arpl
dec
push
push
call
or
lods
(bad)
and
les
out
call
push
mov
(bad)
sub
retf
fwait
les
jb
or
sahf
push
and
cpuid
clc
push
push
push
push
dec
push
mov
add
mov
pop
and
add
mov
in
mov
int
fmul
push
and
pop
cli
stos
and
xor
jo
dec
stc
or
lahf
mov
cmp
leave
add
call
pop
movs
mov
cmps
add
pop
icebp
lahf
leave
mov
sbb
xor
mov
xchg
out
test
inc
and
and
retf
adc
test
fisub
cmps
fs
sub
sahf
out
std
loop
xchg
fdiv
xor
and
sub
stc
or
mov
xor
je
pop
bound
dec
xor
retf
ja
push
ins
or
and
int
inc
pusha
pop
sbb
mov
ja
lods
sahf
push
adc
inc
movs
adc
test
pop
inc
xor
xchg
mov
push
das
int3
dec
inc
popf
cmp
(bad)
push
fild
jmp
fiadd
adc
and
mul
xor
dec
and
ss
push
fs
loope
int
bound
jns
inc
js
dec
fs
cmp
popa
push
ss
cld
cwde
lock
or
pop
and
rcr
(bad)
mov
mov
cmp
cmps
inc
add
call
xchg
sbb
push
pushf
pop
imul
(bad)
and
imul
(bad)
out
cld
or
and
jnp
rcr
inc
xlat
jo
enter
leave
mov
jae
shr
dec
xor
mov
sbb
leave
xor
jecxz
or
popa
or
mov
add
or
jno
jmp
arpl
repnz
mov
cmp
and
dec
jbe
mov
push
fld
out
imul
mov
cmp
scas
pushf
outs
test
mov
cmps
fnsave
xchg
add
or
xchg
mov
and
out
jbe
inc
mov
cmp
dec
(bad)
pushf
mov
mov
lds
in
jne
push
pop
movs
or
add
gs
lock
xor
lea
dec
mov
xor
enter
psubb
sub
stos
scas
out
sub
push
scas
dec
bound
mov
and
mov
ins
inc
fdivr
mov
sti
test
mov
lds
jnp
loopne
hlt
dec
or
xchg
cdq
cmps
int3
pop
pop
pushf
outs
fsubr
loopne
scas
(bad)
js
sbb
pushf
jns
dec
bound
jb
xlat
push
dec
ret
mov
enter
cmps
mov
xor
jge
ja
(bad)
xor
addr16
imul
out
cmp
and
mov
es
das
jmp
mov
mov
ds
jl
or
popf
sbb
lods
fld
clc
jecxz
xchg
xchg
das
mov
adc
jmp
nop
jmp
(bad)
in
je
jbe
mov
pusha
dec
(bad)
iret
hlt
int
sub
out
mov
sub
xchg
push
jb
ror
and
aas
mov
fistp
jbe
in
imul
push
cmp
or
xchg
imul
and
jmp
push
inc
mov
gs
nop
mov
clc
retf
ret
daa
sub
push
lahf
pop
dec
arpl
jecxz
test
mov
inc
ret
sub
imul
call
test
mov
mov
stc
sub
jl
pop
jl
mov
dec
sar
mov
(bad)
out
addr16
jmp
and
sub
pop
je
inc
sub
xchg
sbb
dec
jmp
fisub
imul
add
shr
retf
fimul
enter
mov
icebp
push
cmp
xor
push
sbb
ffree
fcmovne
push
pusha
mov
inc
and
cli
out
retf
pop
(bad)
fnsave
retf
xor
ds
sub
inc
xchg
test
loopne
iret
add
pop
sub
fs
fs
sbb
(bad)
emms
mov
into
lds
xchg
push
cmp
int3
xchg
jmp
jns
mov
ret
xchg
cmps
add
mov
dec
les
sbb
idiv
mov
sbb
pop
xchg
ja
dec
aas
aad
ja
std
outs
push
cmp
fwait
xor
mov
ffree
fsub
lods
mov
popa
push
mov
adc
pusha
inc
push
cmp
lods
xor
jo
xor
pop
les
cmp
push
mov
clc
jbe
cmp
mov
loopne
xor
xchg
mov
retf
in
add
dec
mov
cs
add
shl
(bad)
test
fmul
pushf
jg
sub
cmp
and
inc
or
mov
mov
add
lea
ret
mov
add
in
jo
mov
sti
loop
hlt
lods
sbb
sar
inc
aaa
jnp
scas
adc
pop
loop
outs
test
dec
aas
fsub
addr16
or
fwait
dec
(bad)
xor
xchg
push
daa
icebp
inc
xchg
mov
in
inc
jne
mov
scas
jp
outs
sbb
fs
adc
cmp
ret
lock
test
sbb
mov
sub
bound
sbb
jle
retf
mov
add
inc
xchg
jg
lock
imul
outs
cli
outs
jne
lds
out
das
mov
sar
fdiv
cmps
add
scas
jae
jne
inc
mov
popf
pop
or
sub
(bad)
dec
adc
mov
mov
fiadd
outs
dec
adc
xor
jg
pop
repnz
out
sub
add
or
lahf
mov
dec
lock
in
or
in
int
jg
cmc
fsubr
inc
and
popf
lods
scas
xor
mov
mov
pop
out
or
ds
inc
sti
fidivr
adc
mov
push
jo
in
data16
arpl
mov
push
mov
mov
cmps
or
push
in
fsubr
stos
not
dec
scas
push
cmps
int3
adc
(bad)
mov
hlt
nop
mov
jns
fld
xchg
mov
aas
stos
ret
xor
test
jae
mov
retf
adc
adc
cmps
xor
or
push
arpl
push
jnp
add
iret
dec
fwait
dec
jmp
stos
shr
cmp
adc
out
ins
and
shl
jnp
adc
jge
mov
(bad)
mov
cmp
jns
popa
test
sar
sbb
sbb
sbb
push
dec
sub
sub
(bad)
sti
add
adc
ficom
dec
out
or
popa
sbb
aam
and
call
aad
movs
inc
inc
jb
or
js
push
or
into
and
inc
fwait
lds
das
pop
sbb
sar
ins
in
pop
pop
sub
out
in
inc
add
int
mov
xchg
xor
js
cwde
rcr
xor
(bad)
aam
cmp
(bad)
sbb
loope
ss
div
and
frstor
jge
jle
adc
fprem1
jmp
dec
or
pop
or
inc
stc
add
jae
fidiv
(bad)
xchg
mov
rol
leave
loop
xlat
xchg
adc
movs
dec
leavew
mov
xchg
mov
push
das
sbb
inc
add
sar
cmp
mov
pop
push
movs
pop
ins
fs
sub
cwde
(bad)
ror
dec
ret
js
or
sti
mov
pop
add
fisubr
(bad)
retf
jo
fwait
sub
ret
adc
pusha
scas
xchg
sbb
or
ja
xchg
cmps
loop
jns
xor
sahf
xor
mov
rcr
lds
xor
mov
(bad)
sub
mov
lock
call
sbb
imul
mov
cmps
ret
test
outs
xchg
mov
sbb
(bad)
jmp
pop
xchg
inc
es
pop
mov
imul
gs
stos
adc
pushf
push
out
fwait
add
cmp
jg
pop
fsub
inc
push
loope
daa
pop
jle
mov
push
jp
xor
mov
jp
push
add
lods
std
sbb
or
and
adc
mov
adc
test
in
std
mov
sbb
movs
clc
(bad)
(bad)
mov
mov
cmp
jmp
fldcw
cwde
ss
mov
in
cwde
adc
or
jle
test
cmp
fstp
fimul
jae
outs
sbb
rep
jno
das
retf
xchg
adc
and
iret
sahf
pop
test
inc
adc
in
jnp
rol
cmp
add
mov
dec
mov
movs
popf
dec
call
mov
lahf
lds
inc
pop
xor
and
jnp
cmp
mov
aas
sub
cmps
call
xchg
iret
mov
ficom
addr16
fwait
inc
dec
adc
and
jle
shr
dec
jmp
xlat
and
lods
(bad)
fucomip
inc
mov
mov
dec
das
pop
inc
iret
arpl
jl
fstp
retf
(bad)
ins
neg
iret
mov
mov
add
xchg
int3
loope
out
jns
mov
cli
mov
pop
sub
mov
sti
movs
mov
mov
inc
cli
retf
popa
ret
sub
inc
fmul
jmp
or
adc
mov
in
jle
pusha
push
push
push
out
cmp
test
sub
jo
mov
cli
dec
sub
inc
aam
(bad)
stos
fmul
inc
mov
xchg
mov
adc
sbb
mov
inc
aas
and
push
xor
neg
(bad)
test
fild
in
xor
pop
bound
push
mov
mov
out
test
aaa
in
mov
cmp
cdq
sub
mov
into
test
jmp
pusha
scas
pop
hlt
aam
imul
jmp
mov
fldenv
sub
sub
test
inc
jmp
ret
out
aas
test
and
ret
mov
fcmovbe
push
xchg
rol
add
sti
adc
stos
pop
std
loop
scas
shl
mov
ss
cmp
pop
cmp
inc
sbb
je
sub
lods
or
test
mov
or
mov
test
mov
dec
xchg
cld
fsub
push
jne
inc
and
xchg
test
mov
mov
std
adc
mov
inc
scas
mov
or
and
push
pop
adc
fwait
retf
xchg
xchg
xchg
xlat
jge
aaa
and
push
out
mov
cmps
in
fwait
(bad)
pusha
test
jb
repz
popf
in
and
mov
mov
cmp
(bad)
out
dec
cdq
adc
in
push
pop
out
adc
xor
(bad)
aam
stc
pop
xor
mov
pop
shl
mov
sub
mov
and
aam
pop
xlat
mov
and
cdq
jge
mov
aad
add
inc
shl
movs
cmps
jmp
xchg
ins
sub
jns
adc
repnz
pop
adc
pop
and
adc
int
pusha
mov
les
arpl
sbb
dec
retf
mov
mov
mov
std
cmp
clc
outs
or
jp
daa
jno
test
pop
addr16
cwde
mov
(bad)
push
into
scas
xchg
or
mov
hlt
or
movs
pusha
push
or
pop
cmps
rol
cmps
ja
push
neg
adc
mov
repnz
cmps
stc
sar
cdq
mov
or
lods
adc
out
mov
jae
mov
aas
adc
stos
fist
mov
xchg
mov
fmul
jmp
cs
mov
inc
xor
movs
inc
ret
adc
retf
rol
aam
or
xor
sbb
mul
das
xor
jns
cdq
ins
mov
call
(bad)
into
pusha
fnstsw
fcmovnu
mov
loope
lods
ret
scas
pop
mov
jecxz
out
jp
test
mov
outs
xchg
pop
mov
sahf
mov
adc
pop
and
retf
xchg
inc
dec
xor
sbb
cmp
xchg
sahf
jb
test
ins
retf
adc
dec
mov
mov
imul
or
fsubr
push
add
jle
gs
sub
pusha
jne
push
(bad)
clc
test
and
loop
sbb
adc
gs
sbb
and
inc
dec
xchg
lods
dec
xchg
clc
xchg
mov
nop
xor
cli
out
add
stos
xor
pop
fs
adc
jl
adc
test
movd
push
push
inc
and
(bad)
aam
or
dec
push
mov
push
sahf
(bad)
je
inc
shr
dec
shl
sbb
ja
adc
pop
mov
inc
push
pop
out
cwde
xchg
call
fucomip
jo
push
fadd
(bad)
xor
cmps
jmp
jl
scas
xchg
pop
pop
adc
repz
mov
mov
sub
jl
shl
jge
jnp
sbb
sbb
das
lock
xor
sti
ret
mov
ror
pop
stos
pusha
jecxz
bts
(bad)
dec
int3
adc
adc
es
aas
xchg
xor
sbb
stc
jne
mov
test
lahf
inc
pushf
jne
or
out
into
push
sar
push
imul
xchg
into
mov
outs
xor
cmp
push
or
mov
mov
push
imul
repnz
fprem
jb
or
xlat
jmp
mov
in
fild
mov
enter
xor
fs
(bad)
push
xor
call
xor
jmp
xor
cmps
std
rcl
add
ins
xor
and
mov
xor
or
pop
ja
fsub
ror
div
mov
push
(bad)
mov
jge
out
sti
xchg
in
mov
mov
pushf
fild
cmp
inc
retf
or
push
gs
mov
xchg
mov
mov
je
sub
lods
ror
stos
cdq
dec
fcom
xor
cmp
xor
cmp
cmp
in
pop
xchg
add
test
xor
xor
and
loope
sbb
push
cmps
addr16
and
in
push
or
test
test
push
sub
enter
fdiv
xor
mov
jle
adc
pop
mov
loop
add
sub
cmp
sbb
xor
in
gs
cmp
daa
push
push
lock
loopne
icebp
inc
js
enter
or
sub
sbb
or
scas
adc
into
push
mov
pop
int3
inc
loopne
popf
loopne
movs
sahf
jo
push
test
xchg
lea
dec
out
cmps
fld
push
jae
aaa
and
inc
xor
stc
in
nop
shr
popa
das
cmps
jns
shr
pushf
and
sti
push
shr
pop
loop
fs
adc
mov
xchg
cmp
das
adc
fist
dec
popa
push
adc
xor
pop
retf
mov
daa
dec
mov
jmp
or
jle
scas
cmps
mov
call
inc
adc
rcr
sub
mov
punpcklwd
push
imul
mov
clc
and
pop
or
xchg
dec
jle
outs
out
je
add
cmps
add
push
mov
movs
fidivr
out
movs
ins
cmp
ret
fld
les
outs
mul
cmp
fcomp
fst
aaa
fwait
js
inc
sub
cwde
sub
in
dec
jo
fwait
xor
nop
imul
sti
inc
jno
outs
inc
outs
jns
movs
sub
(bad)
cli
jmp
outs
fs
ret
adc
mov
inc
sahf
fisttp
dec
scas
fist
pop
popf
outs
inc
in
lahf
arpl
leave
retf
inc
sub
mov
push
jecxz
mov
cwd
bound
xor
jns
and
popa
add
sbb
clc
cmp
mov
icebp
jno
xchg
mov
add
pusha
or
in
mov
xchg
sbb
ret
jmp
arpl
imul
lock
pop
fbld
fdivp
repnz
ret
adc
dec
xchg
mov
inc
(bad)
dec
dec
push
xchg
add
sub
mov
popa
sbb
stos
sub
rep
inc
add
xchg
out
xor
scas
jg
bound
pop
inc
push
aad
dec
inc
xchg
std
addr16
repnz
ror
leave
sti
jecxz
mov
pop
or
jno
inc
and
dec
rcr
not
ret
(bad)
mov
(bad)
lods
ins
hlt
or
jle
sub
leave
clc
test
mov
xor
lods
leave
mov
das
sbb
push
mov
cmp
jnp
add
mov
mov
pusha
test
in
sbb
adc
call
push
xlat
sub
aaa
cs
pushf
popa
out
mov
popf
dec
sbb
enter
sub
inc
loopne
and
pop
test
lock
cmps
mov
in
jge
hlt
jg
dec
dec
mov
adc
add
cmc
push
repnz
dec
cmp
popf
cdq
inc
push
cmp
or
out
add
sbb
dec
jo
cmc
or
pop
add
lods
inc
inc
mov
psubusw
in
pop
inc
inc
and
push
lock
cmps
cmps
cmp
lods
adc
rol
mov
sub
push
push
and
sub
cmp
imul
pop
in
jg
mov
sub
push
sub
(bad)
or
jne
adc
inc
pop
sbb
lods
inc
cmc
add
mov
inc
aas
movs
mov
xchg
scas
mov
mov
xchg
loopne
ret
cli
xchg
retf
(bad)
cmps
das
dec
mov
xor
and
pop
lds
movs
aaa
movs
adc
cmp
pop
mov
sti
cmp
out
retf
je
cmc
and
test
mov
in
mov
out
shl
xchg
arpl
mov
pop
sub
xor
push
imul
(bad)
retf
jnp
pop
jno
and
add
push
scas
inc
nop
mov
std
cmp
in
xchg
repnz
mov
call
add
sub
mov
in
dec
fiadd
inc
inc
sbb
jge
xchg
jb
ror
sub
fcom
lods
cld
pop
mov
in
adc
je
add
and
xchg
sub
aam
mov
(bad)
jge
in
jno
fs
(bad)
jecxz
cli
mov
inc
adc
dec
jge
loope
fs
cmp
aaa
mov
mov
shl
cmps
cmp
xor
xchg
xor
test
or
dec
cmp
sbb
stc
or
movs
pop
jbe
jb
popf
cs
movs
dec
jle
inc
adc
push
add
cs
es
shr
xor
mov
jns
push
fwait
stc
aad
dec
fisttp
jmp
inc
mov
shl
test
out
adc
lea
dec
addr16
pop
cmps
jae
and
xchg
scas
add
ficomp
lea
push
bound
pop
lods
jnp
xor
out
inc
(bad)
mov
add
lods
sub
mov
mov
out
fnsave
mov
ret
lock
or
jno
sbb
lahf
or
stc
ins
cmps
xchg
lods
aad
xor
repnz
inc
out
cdq
nop
aam
ds
(bad)
cmp
int
lds
ja
sbb
sub
aas
jge
push
xor
jecxz
push
cmp
aad
pop
test
(bad)
xchg
lds
pop
xchg
sbb
pop
xor
inc
inc
pop
lahf
fdivr
xchg
test
inc
jmp
xor
rol
stos
out
jle
or
push
stos
pop
aaa
in
test
aad
mov
cmps
mov
sbb
not
clc
mov
or
jle
in
adc
cld
jae
cli
out
inc
popf
into
xor
push
stc
in
rol
out
push
xchg
or
jge
fist
jmp
sub
pop
les
sbb
pop
and
adc
mov
cs
xchg
pop
shl
imul
mov
test
sub
es
cs
jne
(bad)
scas
dec
rcl
sbb
lock
mov
sub
fstp
lock
mov
fcmovb
mov
sbb
and
mov
mov
cdq
adc
dec
icebp
cld
sbb
icebp
jmp
or
mov
aaa
jo
pop
pop
std
nop
inc
jmp
inc
cmp
pop
test
loope
sub
add
inc
push
mov
cmp
mov
jmp
in
mov
or
add
test
inc
push
sbb
pop
scas
ffree
test
(bad)
mov
mov
mov
sub
jmp
in
xchg
dec
repz
fwait
or
lods
mov
mov
bound
push
test
sub
dec
ds
aas
dec
outs
shr
cmp
dec
mov
test
nop
jno
inc
push
add
or
add
adc
(bad)
adc
inc
stos
call
test
aas
pop
sbb
push
mov
cli
add
pop
cmps
scas
lock
out
adc
and
mov
movs
add
fwait
cmps
mov
aam
shl
(bad)
add
out
and
std
mov
fwait
test
pop
mov
mov
mov
dec
ins
imul
mov
cmp
mov
mov
pop
adc
sahf
loope
imul
(bad)
lahf
jb
movs
ins
into
cmps
cmp
(bad)
push
cmps
das
sbb
fwait
adc
xor
hlt
ja
and
mov
mov
mov
andnps
cmps
lea
add
call
aad
sbb
xchg
sbb
pop
add
sub
popa
fadd
adc
jmp
dec
shl
stos
lods
fcomp
jo
mov
rol
push
add
mov
(bad)
iret
cdq
repz
es
cld
mov
and
and
sub
sub
mov
xor
cmp
nop
mov
rcl
or
pop
jl
adc
lahf
sub
sbb
mov
(bad)
fiadd
cmp
xchg
aas
aad
test
adc
push
mov
test
sub
(bad)
call
(bad)
mov
rol
(bad)
inc
xchg
push
inc
dec
ins
out
call
push
cs
push
dec
pop
jecxz
jmp
fisub
fld
or
lahf
cwde
mov
arpl
mov
and
add
jg
jmp
rcl
mov
mov
jo
les
jmp
mov
les
popa
loope
cmp
xor
sbb
or
mov
je
inc
loop
cmps
pop
in
ins
or
enter
rcr
inc
mov
movs
ds
mov
adc
xchg
push
call
popa
mov
int
bound
xor
test
(bad)
pop
lea
int3
fwait
cmp
fmul
xchg
or
in
ss
rol
vcvttsd2si
mov
loop
jae
ds
enter
ror
imul
in
jge
lods
lds
sti
pop
adc
jg
mov
inc
pop
lds
das
push
loopne
fild
xchg
fistp
sbb
movs
jmp
shl
push
cmp
aaa
retf
out
push
xchg
adc
jg
xchg
retf
push
push
and
jnp
fcomip
aam
gs
scas
push
mov
gs
shr
or
mov
inc
adc
mov
imul
mov
enter
clc
sahf
sub
sub
jae
push
pop
(bad)
sbb
adc
push
(bad)
sbb
jno
(bad)
stos
add
retf
gs
fst
(bad)
mov
push
mov
cld
movs
or
mov
iret
push
out
mov
sbb
mov
xchg
div
leave
jmp
push
inc
sub
adc
les
test
repnz
mov
jno
(bad)
jnp
fld
cmp
sbb
fild
add
jo
sbb
jmp
adc
mov
jnp
enter
imul
jg
ret
ja
ins
dec
inc
les
pop
xor
xchg
das
mov
sti
mov
mov
cmp
add
jecxz
mov
(bad)
fidiv
sti
out
mov
mov
cld
out
xchg
bound
test
clc
fmul
push
dec
scas
loop
mov
movs
adc
or
aaa
dec
xlat
and
adc
popf
jnp
jl
add
xchg
shl
push
aam
cwde
inc
inc
call
inc
or
sub
cmp
aas
xchg
js
pop
or
xor
mov
inc
out
in
mov
stos
xchg
ja
xor
jge
sbb
mov
sti
js
pop
adc
xchg
sub
cmp
xchg
cmc
push
sbb
scas
pusha
add
lods
inc
into
repz
stc
adc
jnp
jns
aam
push
xor
fadd
ret
jmp
mov
xor
(bad)
scas
mov
push
and
int
sub
dec
jno
inc
fs
jns
in
cwde
and
mov
imul
std
jnp
push
jb
and
loope
imul
std
clc
fnsetpm(287
loopne
nop
fwait
mov
in
ss
cmc
or
pusha
mov
dec
ins
add
aaa
or
mov
dec
out
mov
or
mov
jg
jmp
not
push
sub
jmp
inc
mov
sbb
sub
xchg
(bad)
cmps
pop
icebp
jp
and
inc
es
inc
and
jl
aam
aad
adc
pop
aaa
xchg
xchg
das
loop
cmp
push
add
cwde
call
int
cmps
cmc
cmp
cmc
cdq
and
xchg
xchg
push
xchg
bound
mov
dec
gs
inc
out
fidiv
bound
call
bound
pop
cmp
push
retf
sbb
sub
(bad)
add
data16
out
xchg
dec
add
adc
je
xchg
rcl
mov
jg
test
icebp
ins
inc
xchg
icebp
iret
mov
and
clc
and
aad
loopne
xor
pop
iret
ror
movs
xchg
sbb
jno
fadd
sub
cmps
js
jae
push
mov
(bad)
cmp
les
js
and
add
add
push
std
ins
jnp
scas
enter
mov
int3
xor
clc
mov
int3
mov
loop
movs
call
xor
push
jmp
(bad)
call
pop
out
jo
adc
mov
out
retf
arpl
mov
pop
jbe
push
push
xor
js
je
(bad)
mov
out
xchg
and
bnd
sbb
int
push
out
inc
push
test
mov
sti
jne
dec
mov
cmps
rol
sbb
jmp
and
mov
mov
xchg
rol
jl
test
pop
add
add
inc
sahf
addr16
lock
and
out
sbb
pop
aad
xor
loopne
mov
pop
push
rol
jno
stos
or
mov
pop
pop
sbb
icebp
mov
pop
sub
jg
push
adc
popa
mov
(bad)
out
jmp
loope
add
sbb
mov
and
sbb
stc
and
or
dec
cmp
adc
dec
fsub
and
dec
inc
scas
arpl
enter
cld
cmp
dec
mov
lock
push
mov
pop
in
push
jl
push
call
loop
cli
outs
fisub
cmp
ins
sbb
sub
ss
out
fwait
inc
push
cmp
mov
xor
inc
jmp
les
stos
adc
aam
stos
(bad)
jp
xchg
inc
and
inc
(bad)
cmps
popa
dec
enter
inc
clc
xor
xor
add
jne
test
daa
adc
cwde
test
jge
sub
adc
mov
fucom
ins
cmp
mov
or
jge
shl
mov
mov
retf
shr
int
out
test
je
pushf
xor
loope
cdq
adc
and
cmc
fistp
add
sub
in
gs
out
aam
jmp
retf
push
into
repz
cmp
ds
je
or
outs
repnz
les
jp
adc
push
jecxz
jp
lods
ret
and
add
sbb
ret
dec
push
adc
pop
sub
ins
jno
mov
hlt
xor
or
ja
jle
xchg
and
add
mov
fdivr
push
lock
aad
in
inc
dec
push
jecxz
xchg
jne
adc
scas
cmp
cmp
sbb
pop
enter
retf
mov
dec
call
add
xor
cwde
test
sub
inc
push
inc
push
outs
or
(bad)
mov
sbb
pop
call
inc
retf
test
xchg
jns
(bad)
xor
sbb
dec
dec
jns
add
rcr
call
xchg
out
aas
sbb
sub
xor
daa
mov
push
call
adc
dec
and
jne
ss
pop
push
jg
xor
inc
add
arpl
cwde
inc
xor
enter
ret
out
loope
push
dec
or
jmp
sbb
adc
sub
sbb
aam
and
or
shl
mov
push
cmps
div
cli
mov
jb
in
cmc
dec
ffreep
popf
rcl
shr
int3
cmps
fidivr
addr16
or
shr
push
in
lea
and
retf
stos
fst
and
test
out
mov
cmp
inc
mov
mov
push
das
cli
mov
outs
add
ror
jmp
stos
xchg
fs
outs
mov
jno
fcom
xor
pop
mov
dec
xchg
paddd
xor
sahf
lahf
rcl
stos
jmp
xchg
xchg
lahf
sbb
call
add
add
dec
and
jno
outs
and
jge
inc
sbb
jne
nop
fdiv
cld
inc
lods
int
call
fcom
popf
pop
inc
(bad)
sbb
fadd
test
mov
stc
jnp
jns
jl
jmp
cli
pushf
mov
ja
ror
inc
jecxz
sub
in
push
mov
sbb
add
or
jl
xchg
xor
out
call
pop
ins
push
and
pop
push
sub
(bad)
mov
cld
jmp
or
retf
imul
rcr
cmps
mov
sbb
sub
das
adc
jmp
in
icebp
cld
add
pop
jo
jnp
lods
jo
and
xchg
fwait
mov
sbb
cmps
ins
lahf
mov
jecxz
mov
fimul
dec
mov
mov
xor
test
and
lods
fstp
ss
push
std
xchg
ins
adc
push
ret
sar
push
pushf
mov
in
inc
dec
xchg
cmp
xchg
push
pushf
push
icebp
mov
icebp
sbb
and
add
sbb
add
fiadd
(bad)
call
bound
das
je
sbb
mov
out
fmul
scas
aad
xor
or
mov
adc
add
adc
out
dec
inc
(bad)
aas
and
sub
stos
cdq
fwait
aam
and
dec
test
leave
sub
mov
xor
aaa
cmp
mov
mov
mov
mov
adc
movs
fcmovnbe
cwde
imul
sub
and
mov
neg
hlt
fisub
sti
mov
inc
std
sbb
or
mov
add
mov
mov
fprem
(bad)
adc
pop
sbb
data16
(bad)
pop
sub
mov
clc
jge
(bad)
mov
movs
adc
sub
add
mov
js
out
addr16
pop
mov
mov
jmp
addr16
bound
mov
les
call
rcl
add
ja
aas
push
pop
push
mov
bound
jl
aas
js
xchg
mov
sbb
lods
cld
stos
sub
sbb
mov
add
fistp
mov
jmp
and
fld
dec
ins
mov
xchg
mov
das
jno
lods
bound
mov
push
adc
and
and
and
nop
mov
add
es
cmps
push
imul
ins
jp
test
outs
push
das
mov
fsub
lds
out
xor
jle
sbb
sbb
test
mov
mov
rcl
call
ins
fst
xchg
out
sub
dec
inc
cmp
xor
push
mov
(bad)
sub
xchg
aaa
cwde
adc
push
dec
mov
sar
imul
cs
jmp
mov
push
fimul
test
fs
mov
sahf
sbb
sub
jne
mov
lods
inc
adc
rcr
xor
ret
addr16
push
mov
aam
sbb
jno
test
cli
loope
cmc
test
xchg
sbb
imul
xor
jmp
(bad)
jg
xor
push
sbb
jg
stos
xor
retf
pop
cmp
xchg
and
lods
xchg
mov
pop
mov
into
push
dec
sbb
es
adc
cmps
(bad)
in
nop
sahf
dec
fisttp
out
pop
xchg
or
scas
in
bound
rcl
(bad)
push
in
shr
cli
cmp
loopne
push
jle
or
mov
repnz
dec
call
sub
imul
inc
mov
(bad)
int3
adc
cli
cld
rcl
mov
sbb
or
shl
jecxz
enter
or
test
jp
arpl
adc
jno
pop
jmp
enter
out
jnp
sti
adc
icebp
add
and
je
xchg
mov
mov
aaa
ins
cmps
(bad)
mov
ss
mov
(bad)
dec
sbb
loopne
mov
add
mov
cmp
add
mov
in
push
xchg
jmp
gs
cmp
ja
loope
gs
loopne
push
fst
repz
sbb
pop
fiadd
icebp
out
mov
jo
jmp
lock
loopne
(bad)
ss
stos
movs
cmp
inc
hlt
stc
dec
inc
mov
clc
push
in
pop
in
cmp
xchg
stc
hlt
das
rcr
xor
sbb
mov
cli
push
mov
lods
ret
xchg
dec
sub
clc
loope
inc
jp
scas
int3
iret
jg
pop
sbb
mov
repnz
jecxz
xor
stc
repnz
call
idiv
test
and
push
call
out
and
out
add
lea
mov
(bad)
idiv
in
(bad)
cld
mov
pop
push
das
fidiv
scas
xor
sub
sbb
pushf
jle
mov
push
inc
inc
add
mov
jle
or
add
xchg
jl
push
js
dec
pop
xchg
dec
leave
loope
jno
mov
inc
push
mov
push
fidivr
push
neg
dec
movs
cmp
pop
pop
jbe
adc
xchg
mov
repnz
fistp
mov
test
movs
stos
mov
imul
mov
xor
inc
dec
(bad)
(bad)
mov
test
sti
rcl
data16
xchg
sti
loopne
rol
popf
(bad)
(bad)
push
jns
sub
ror
push
aas
stos
and
xor
mov
jnp
aaa
repnz
xchg
jp
in
push
int
shl
fisttp
mov
scas
jmp
scas
pop
les
fmul
outs
add
cld
nop
pop
arpl
xlat
inc
mov
int
cmp
shl
cmp
xchg
stos
jb
movs
sub
xchg
push
add
test
neg
sub
or
sub
call
rol
xor
nop
es
neg
loope
push
inc
mov
fs
jne
xor
stos
mul
repnz
jl
push
lods
and
fild
xor
xchg
clc
test
push
xchg
jle
lods
ins
call
jo
ins
js
ins
cmc
(bad)
in
fild
jecxz
lahf
add
mul
jnp
scas
mov
or
iret
sbb
adc
std
cmp
(bad)
jp
aas
dec
sahf
mov
mov
push
push
push
cwde
fs
push
int3
jno
cld
add
icebp
jmp
xchg
enter
jne
mov
dec
fwait
jb
cmp
jns
inc
sbb
and
add
mov
jle
inc
xor
adc
or
outs
ror
add
movs
aaa
cmps
ja
xor
call
mov
shl
mov
ds
je
mov
je
dec
mov
adc
inc
fld
pop
jo
xchg
mov
out
rcl
mov
jns
and
jle
or
lds
repz
clc
fmulp
push
mov
sub
lock
or
repnz
cmp
(bad)
into
mov
rcl
arpl
add
retf
mov
cdq
popf
add
cwde
jmp
cmps
outs
xabort
sbb
jmp
pop
xchg
push
dec
inc
lods
jne
ss
sub
jecxz
shl
inc
or
icebp
div
cwde
idiv
mov
pop
inc
gs
or
sub
push
(bad)
out
or
call
jnp
repz
mov
popf
push
es
xchg
xchg
lds
xor
outs
fsubr
clc
frstor
cmps
mov
dec
and
dec
pop
cwde
aaa
mov
repnz
push
pop
adc
sti
cwde
push
mov
or
adc
retf
call
fisttp
mov
in
sahf
dec
pop
(bad)
cwde
js
and
(bad)
pop
(bad)
loop
pop
ret
ds
push
into
cmp
popa
xchg
dec
xchg
pop
out
mov
xor
test
loop
(bad)
mov
pop
mov
into
adc
aam
inc
stos
test
pop
xor
mov
and
out
sbb
fwait
mov
cmp
mov
mov
adc
fdivr
and
imul
test
jmp
popf
loop
shl
pop
fist
push
adc
pop
sbb
std
idiv
fcom
out
test
sbb
gs
mov
xchg
sub
pusha
or
out
mov
repz
rcl
inc
push
shl
fcom
fwait
push
xor
(bad)
add
fcmovb
mov
ss
stc
mov
sub
xchg
sbb
loopne
and
push
mov
push
dec
mov
sub
xchg
and
push
jge
das
loope
or
add
jecxz
xchg
iret
jno
call
sahf
sub
mov
sub
shl
int
dec
pusha
cmp
mov
xchg
test
push
and
pop
push
call
mov
push
int3
dec
sub
xchg
cld
loope
iret
push
cld
xor
leave
fisttp
frstor
daa
retf
call
ror
push
adc
shl
inc
scas
fstp
and
mov
mov
mov
adc
or
es
daa
adc
out
sbb
cmps
es
sbb
pop
call
push
pusha
ret
add
aam
ja
jge
dec
jns
inc
int
cld
aas
sub
cs
repz
mov
sti
xchg
fistp
movs
mov
xchg
pop
push
mov
jae
out
outs
test
gs
inc
pop
imul
in
adc
into
mov
gs
ins
xchg
sar
stos
dec
movs
pop
ins
pop
ret
add
rcr
pop
push
add
cs
add
out
add
push
sbb
mov
call
mov
inc
popa
adc
push
cmp
sahf
mov
xchg
jb
cmp
imul
fisubr
mov
sub
pop
test
or
mov
jns
enter
sar
in
mov
call
call
sar
pop
dec
pop
fdiv
aam
mov
repnz
inc
out
ror
jnp
jg
repz
sbb
sbb
inc
pop
mov
lea
mov
dec
cli
or
pop
mov
or
pop
idiv
dec
je
jmp
lock
jp
clc
aam
jns
div
inc
movs
mov
mov
idiv
imul
add
mov
and
clc
pop
in
dec
inc
repz
dec
lock
mov
pop
rcl
add
mov
div
sub
sbb
sub
into
lods
fnstenv
mov
out
cli
jl
mov
lods
das
stc
cmp
xor
pop
jecxz
jle
es
inc
xor
movs
leave
push
adc
and
inc
sub
jle
xor
and
jb
gs
jbe
repnz
(bad)
push
scas
or
sbb
adc
cli
repz
xor
dec
scas
pop
lods
ret
xchg
test
jg
and
dec
hlt
adc
ds
ret
jns
pop
enter
repnz
mov
scas
jl
or
mov
shl
int
shl
clc
loope
push
jbe
popf
pop
rcl
cmps
jp
sub
fwait
add
xor
test
test
je
xor
pop
ret
les
sbb
ins
inc
or
jp
nop
sbb
mov
sub
iret
and
std
push
jns
mov
push
mov
loopne
mov
mov
xor
shl
and
or
movs
movs
jns
cmps
adc
mov
and
cmp
xor
scas
cmp
ret
and
fistp
imul
test
gs
push
jno
lods
jmp
xchg
lods
inc
push
gs
je
or
jae
mov
inc
push
lahf
pop
pop
fs
lock
and
inc
jl
loopne
daa
in
pop
(bad)
cmp
shr
inc
mov
fbstp
pushf
fsubr
loope
lods
jno
imul
jb
inc
adc
mov
add
or
inc
cmp
jae
out
(bad)
or
mov
cmps
inc
addr16
(bad)
mov
inc
sub
not
sbb
adc
jg
inc
pop
or
dec
int3
fdiv
dec
mov
daa
into
in
scas
jbe
test
pop
or
retf
jge
xchg
icebp
les
add
jmp
fisub
pop
cmp
jge
cmp
jmp
ins
mov
cdq
cmp
mov
test
ja
xchg
mov
jg
adc
sub
pop
adc
xor
cmp
cmp
ss
repz
sbb
sub
sub
pop
ins
int3
push
call
fwait
mov
rcr
gs
ds
std
dec
sti
rol
adc
lea
idiv
into
call
mov
adc
push
xor
aam
ss
or
xor
push
ret
inc
cwde
dec
push
scas
xchg
cld
dec
adc
in
pop
(bad)
jle
not
cmp
lea
push
add
into
gs
cmp
mov
aad
(bad)
cmp
add
fistp
retf
stos
cmp
(bad)
sti
in
mov
jb
std
add
mov
(bad)
lods
addr16
or
sahf
dec
push
call
adc
cmp
test
jmp
repz
add
sub
inc
jnp
ffreep
jmp
adc
jle
sbb
cmp
addr16
mov
mov
call
in
inc
mov
mov
pop
push
mov
imul
or
aas
scas
adc
(bad)
sbb
(bad)
mov
in
jmp
mov
mov
sbb
xor
cmp
jle
cdq
or
(bad)
fild
pop
mov
adc
js
lock
test
mov
cmps
adc
lds
cmp
arpl
mov
test
fwait
mov
daa
pop
in
add
clc
ins
jecxz
fcomp
scas
sar
call
mov
sbb
mov
pop
or
in
loope
adc
mov
icebp
pop
pop
pop
mov
outs
rol
pop
stc
inc
lds
in
and
lds
cmp
movs
adc
push
jle
sbb
test
dec
xor
jge
hlt
sbb
inc
hlt
in
or
push
cmp
push
in
fnstenv
movs
cmp
retf
jbe
mov
jo
cdq
and
cmp
or
dec
fist
pop
ret
ins
shr
and
cld
daa
push
sbb
vcvtps2dq
les
es
xor
ins
lock
xchg
out
in
sub
xchg
lahf
call
dec
fimul
jg
pushf
(bad)
pop
js
in
aam
push
and
and
dec
int3
push
or
jmp
and
mov
shl
fdiv
inc
int3
xchg
dec
pop
pusha
adc
mov
adc
ins
inc
jmp
cwde
or
neg
sub
pop
inc
add
jp
shr
rcr
loopne
sub
rcl
pop
pop
mov
or
dec
jb
jmp
xchg
js
jl
mov
push
cmp
sub
inc
dec
dec
add
xchg
mov
dec
ret
sub
mov
pop
or
xchg
fsubr
ins
xor
lock
sub
test
sbb
mov
adc
push
(bad)
(bad)
mov
pushf
call
test
ss
pop
xchg
and
lds
jg
mov
movzx
add
lds
ins
int3
inc
push
leave
leave
pop
sub
add
and
jp
inc
xchg
mov
or
(bad)
xor
rcr
xchg
pop
pushf
jmp
push
pop
mov
mov
add
pop
stc
and
loop
clc
mov
or
or
in
outs
mov
fsubp
cs
sub
mov
cmp
add
rcr
fadd
adc
and
fcomp
inc
cmps
xchg
dec
jmp
dec
addr16
lahf
(bad)
mov
jo
inc
leave
js
cmp
js
cmc
mov
test
and
inc
or
loope
ror
sub
dec
cli
movs
dec
out
les
sub
push
push
mov
sub
aad
inc
push
gs
arpl
and
jne
dec
push
cmp
in
mov
mov
xor
in
call
dec
jo
and
lds
aam
cdq
xor
and
and
cs
jp
(bad)
lods
mov
inc
and
jmp
mov
and
xchg
dec
int3
adc
jmp
popf
nop
xchg
test
pop
test
or
mov
dec
sbb
rcr
or
add
js
clc
out
mov
or
mov
push
sbb
nop
cmp
js
mov
imul
push
leave
push
fdivr
xlat
pop
test
pop
cs
cs
mov
adc
not
jo
pusha
punpcklwd
mov
cmps
and
xor
jne
(bad)
mov
ret
or
push
cli
inc
sub
sbb
dec
push
jae
call
pushf
in
sub
sti
std
lods
and
lea
mov
aam
inc
out
out
mov
mov
inc
scas
push
cdq
dec
cmc
out
xchg
nop
jo
das
movs
outs
jmp
cwde
push
je
sbb
adc
pop
or
clc
jns
les
sbb
aaa
popa
dec
nop
pop
fst
cld
aam
or
push
scas
inc
mov
jns
imul
leave
mov
push
and
daa
call
xchg
fistp
shl
dec
in
or
lock
xchg
jns
jmp
push
outs
sbb
cmc
xlat
repnz
pop
lods
call
das
mov
sub
pop
aad
popf
cmc
or
pop
fadd
mov
call
cmps
loop
ds
cmc
sbb
cmp
inc
imul
adc
adc
test
dec
xchg
call
mov
retf
iret
cmp
xchg
sub
dec
add
mov
pop
outs
sub
leave
mov
jmp
sti
add
lds
add
into
ret
sub
jl
mov
fsub
in
sbb
aaa
lds
into
jg
in
(bad)
pop
pusha
cmp
push
cmc
cli
dec
mov
add
cmp
sbb
ss
(bad)
and
loopne
cld
(bad)
stos
lock
jmp
xchg
aas
inc
leave
(bad)
je
and
imul
mov
(bad)
repnz
retf
cmp
mov
imul
mov
hlt
dec
and
aad
ror
pop
jge
jnp
sahf
push
push
xchg
cmps
fmul
inc
jne
push
xchg
add
hlt
jge
cs
mov
imul
and
push
(bad)
out
sbb
xor
mov
mov
push
mov
xchg
cwde
inc
repnz
out
out
mov
pop
adc
xor
pop
pop
mov
shl
in
pop
imul
add
pop
mov
scas
fisttp
inc
xchg
mov
cmp
push
fwait
aam
cmp
stc
(bad)
inc
sbb
imul
xor
push
push
ins
test
sbb
cmps
out
ret
sub
cmp
out
cmps
push
(bad)
mov
push
ret
inc
mov
or
lds
xor
stos
in
imul
xchg
ret
cmp
fadd
in
xchg
mov
cs
cmp
and
jmp
repz
jno
out
lds
ror
xor
push
mov
adc
add
push
shl
(bad)
call
aad
fidiv
mov
fpatan
mov
mov
sar
dec
push
cmps
sub
mov
sahf
pop
dec
push
push
xchg
and
outs
out
jl
inc
jl
call
xor
dec
cdq
pop
jge
pop
mov
fld
mov
out
xor
je
push
cmp
movs
jmp
push
cld
in
add
push
and
or
push
fisttp
je
mov
es
push
pushf
mov
xor
lods
adc
adc
push
mov
mov
mov
pop
sub
or
movs
adc
lock
shl
mov
dec
test
adc
dec
sbb
add
daa
shl
fwait
mov
sbb
ds
ins
test
fs
out
push
adc
dec
add
xchg
or
stos
std
push
adc
inc
fsub
call
add
push
jmp
lods
xchg
(bad)
xlat
iret
lahf
jo
mov
js
or
daa
fld
lea
jmp
jb
jg
jns
add
sub
mov
addr16
iret
outs
dec
sub
sub
sbb
add
std
cs
jb
mov
add
in
(bad)
iret
fwait
gs
xchg
cli
cmps
lods
mov
fild
push
mov
inc
xor
cmp
js
pop
cmp
int
retf
inc
add
mov
leave
int3
or
lods
cmp
inc
mov
and
xor
xchg
test
loop
es
(bad)
xor
inc
add
pop
fisubr
repnz
aas
jle
hlt
inc
pop
xor
scas
enter
mov
inc
sbb
adc
push
push
push
sbb
int
dec
push
dec
inc
ins
retf
out
xchg
scas
shl
mov
mov
out
out
cdq
add
(bad)
in
popa
jo
mov
jecxz
test
rcl
and
cmp
into
ins
popf
push
push
xor
mul
push
daa
cmp
pop
pushf
ds
sub
in
pushf
gs
adc
sub
sar
nop
sub
cmp
fiadd
dec
and
movs
mov
fiadd
xor
repnz
retf
sar
stc
js
jbe
(bad)
loop
out
cmp
jno
sbb
les
call
xchg
fwait
cwde
in
inc
push
jp
in
inc
xchg
xlat
xchg
xchg
test
fst
sub
je
cmp
jp
ins
(bad)
imul
jl
add
mov
lds
mov
sbb
out
mov
rcr
sbb
xchg
mov
push
inc
push
push
xchg
push
clc
nop
es
shl
iret
sub
mov
test
mov
xor
shr
sbb
mov
push
inc
add
fdivr
add
and
xchg
(bad)
cmp
fisub
jle
or
add
sbb
xchg
jle
sahf
ja
mov
lock
add
aad
shr
xchg
in
xor
adc
cmps
push
sub
cmp
in
sbb
nop
retf
xor
jmp
xor
js
and
cwde
int
dec
addr16
cdq
test
(bad)
xor
retf
jmp
and
shr
or
xchg
or
cmp
int3
push
and
jl
jo
iret
retf
int3
(bad)
stc
mov
dec
enter
(bad)
sbb
in
stc
jg
mul
shl
xchg
cmp
cli
rcr
bound
jns
inc
dec
lds
fisttp
dec
div
out
sub
dec
xchg
retf
xor
inc
scas
test
call
dec
icebp
push
adc
into
ret
aad
lds
add
sub
jae
add
mov
sbb
push
or
or
movs
mov
adc
add
mov
jl
test
imul
arpl
bound
ins
or
inc
fnstenv
das
mov
out
shl
xchg
mov
std
cmc
add
push
imul
lock
and
inc
imul
xor
sub
jbe
(bad)
fidiv
popf
retf
(bad)
es
lahf
xor
pop
or
inc
push
jae
cmp
sub
ret
loop
and
ret
mov
call
enter
add
jns
xchg
pop
push
imul
test
and
or
fdivrp
test
push
pop
stos
mov
lds
jecxz
push
ins
std
dec
movs
sbb
jns
add
sar
je
js
pop
ds
inc
jp
lods
inc
mov
push
lods
sub
enter
stos
(bad)
call
push
inc
leave
cwde
aad
push
jbe
jg
jae
pop
pop
push
fld
loopne
xor
adc
fadd
sbb
cmp
ficomp
into
xchg
push
xchg
xlat
movs
jb
push
ficomp
leave
mov
add
daa
ins
xor
and
fmul
mov
mov
test
int3
es
iret
js
xchg
outs
xchg
add
outs
sbb
fwait
add
in
xor
inc
scas
xchg
mov
mov
pop
xchg
mov
dec
inc
movs
jno
mov
stos
movs
loopne
jl
dec
sti
mov
sbb
inc
ins
sub
sbb
xchg
mov
nop
fdiv
inc
mov
cmp
or
shr
retf
xchg
outs
or
jp
jae
xor
mov
and
sbb
or
cli
int
fsub
pop
cmp
push
repz
inc
jae
es
dec
pop
xchg
shr
loop
(bad)
mov
cmp
shr
loope
sahf
xor
(bad)
outs
out
jne
inc
sbb
mov
jecxz
sbb
sar
dec
sbb
mov
and
cmp
pop
js
push
pop
and
lds
std
ja
je
or
adc
fidiv
pop
iret
sbb
add
jle
stc
test
in
mov
out
push
popa
sbb
stos
mov
sub
or
and
fidivr
aas
inc
xchg
pop
pop
pushf
push
stos
clc
retf
jp
(bad)
out
jmp
adc
and
jmp
sub
dec
out
xor
mov
or
push
rcr
nop
icebp
gs
inc
push
cmp
call
(bad)
mov
xchg
push
call
scas
sar
in
add
adc
jle
in
and
cmc
jg
mov
mov
ss
mov
out
pop
sti
into
add
xchg
mov
pop
bound
ret
push
cs
adc
jmp
mov
jns
cmc
lods
xchg
(bad)
mov
mov
mov
xchg
lock
in
adc
pop
fisub
push
call
test
xchg
(bad)
and
retf
int
or
inc
jl
adc
mov
adc
jns
(bad)
imul
xor
int3
sub
shl
cwde
push
mov
loopne
add
inc
shl
cmp
add
mov
(bad)
call
mov
dec
push
aaa
dec
mov
out
fbld
aam
xchg
adc
rcr
or
mov
repnz
or
sub
sahf
stos
sub
hlt
mov
inc
and
mov
test
fiadd
mov
les
pop
jecxz
xlat
imul
aas
xchg
(bad)
scas
xchg
imul
sub
cmp
or
sub
pusha
stos
pusha
ds
add
adc
jmp
fwait
dec
jb
(bad)
dec
fld
add
mov
dec
jp
adc
or
mov
mov
retf
pop
loop
fild
div
rol
(bad)
rol
xchg
in
cmp
xchg
mov
xchg
push
leave
cmp
adc
in
pushf
dec
push
clc
push
xchg
les
push
mov
inc
cmp
movs
into
xor
loop
xchg
mov
ins
xor
test
rcl
nop
pop
mov
jmp
fs
out
xchg
jmp
jns
(bad)
jnp
cmp
fbstp
ror
jl
scas
push
loope
xchg
cli
imul
test
mov
mov
jo
jo
jb
cld
xchg
mov
adc
loope
(bad)
mov
icebp
movs
pop
mov
(bad)
lods
fwait
xor
sub
xor
dec
int3
mov
inc
pop
adc
arpl
out
mov
sbb
cmps
push
into
add
cmc
fstp
das
int3
or
xchg
jecxz
outs
sub
push
sbb
call
dec
out
cwde
and
xor
adc
stc
gs
inc
and
sub
sahf
mov
lods
mov
leave
xchg
(bad)
add
dec
arpl
rol
sub
out
test
je
xchg
cmp
jg
cmp
pop
popa
aaa
add
push
sbb
mov
ja
mov
add
call
add
push
or
adc
(bad)
xlat
push
loop
fisttp
imul
jmp
jo
xchg
xor
dec
cmp
and
pop
dec
add
and
mov
add
ror
pop
pop
sub
into
pushw
lock
sub
lock
cmp
scas
pop
(bad)
(bad)
loope
sbb
jmp
pop
mov
in
sbb
push
push
dec
pop
dec
cld
test
or
ss
aad
add
imul
sti
movs
mov
sbb
arpl
mov
xor
adc
fs
pop
in
data16
leave
iret
ror
mov
push
dec
in
dec
arpl
jp
retf
imul
cmp
or
test
xchg
add
pop
out
pop
xor
xchg
fsubr
add
xchg
shl
loop
lock
pop
fmul
add
add
js
daa
out
daa
loopne
sar
jo
sbb
sti
mov
into
into
data16
cwde
or
pushf
mov
dec
repnz
jnp
jne
push
sub
test
push
adc
or
movsx
std
iret
dec
outs
mov
pushf
sub
pop
jbe
stc
and
push
xchg
cmc
stc
pop
cmp
xchg
inc
in
in
dec
mov
dec
es
cmovo
xchg
pop
loop
movs
into
inc
repz
sub
repnz
adc
(bad)
into
(bad)
push
lods
in
cmps
pop
mov
ins
faddp
sbb
cld
inc
inc
fs
popa
xor
dec
out
jmp
pop
dec
aas
enter
imul
(bad)
pop
push
frstor
push
sbb
cmp
mov
xor
inc
push
dec
adc
mov
sar
xchg
je
stc
retf
and
and
push
sti
xlat
pop
ret
mov
jo
aaa
mov
mov
push
push
mov
add
sbb
shr
mov
ja
repz
or
or
dec
mov
mov
out
mov
ret
xchg
xchg
mov
mov
mov
or
and
sar
repnz
xchg
inc
push
lods
movs
sub
mov
cdq
fld
pop
(bad)
in
scas
push
mov
lea
xor
lock
cmp
pop
adc
pop
movs
cmp
jno
push
lea
xor
xchg
xchg
int3
jnp
fdiv
dec
xchg
xchg
loopne
fmul
ins
nop
sub
sahf
fwait
loope
lock
out
cmc
jo
xor
std
test
jle
xchg
mov
daa
loopne
pushf
inc
xlat
(bad)
cwde
mov
xor
hlt
jb
stc
mov
das
and
in
(bad)
(bad)
xchg
sbb
inc
repz
sub
rol
cmp
mov
or
out
daa
sbb
jbe
(bad)
xor
shl
in
call
mov
pop
pop
add
ins
aad
mov
pop
add
pmovmskb
and
js
int3
stc
aad
jne
scas
arpl
jae
push
in
or
pop
cwde
es
sub
les
sub
in
scas
test
jmp
scas
loope
or
(bad)
in
out
mov
inc
aam
mov
push
inc
ror
jp
xor
mov
add
imul
enter
aam
pusha
sbb
stc
imul
imul
aam
imul
push
cmc
adc
mov
repz
mov
add
pusha
sti
in
pop
ins
cmps
xor
ret
movs
xchg
jmp
std
test
dec
pop
push
pushf
icebp
add
arpl
pushf
inc
mov
std
(bad)
mov
mov
xchg
sbb
out
jo
xchg
in
or
adc
xchg
js
scas
int3
add
sbb
xchg
(bad)
(bad)
pop
sub
retf
mov
and
sbb
popf
or
mov
test
adc
or
push
fdiv
push
and
cdq
mov
cmp
test
push
dec
ds
ss
mov
dec
pop
out
shl
sahf
int3
cmps
mov
ss
fsub
and
mov
xchg
mov
fwait
addr16
call
repnz
mov
sub
stos
aam
aaa
push
in
xchg
fbstp
sbb
ins
jle
loope
cmp
iret
es
pop
xchg
mov
imul
in
pushf
xchg
aad
cmovl
xor
or
or
push
mov
(bad)
pop
cmp
daa
push
mov
out
fbstp
cmp
add
stos
dec
jge
xchg
shl
out
mov
xlat
(bad)
mov
xor
iret
icebp
dec
fwait
pop
mov
test
bound
test
dec
xchg
sub
or
sahf
inc
inc
mov
add
stos
and
loope
inc
mov
test
mov
xor
pop
xor
jo
int3
cs
dec
jg
jp
cmp
repz
fsubp
out
adc
pop
fcomip
outs
jnp
push
into
xchg
xchg
mov
inc
les
pop
sub
push
mov
pop
rol
ds
inc
pushw
imul
dec
into
cmc
retf
inc
xlat
in
fwait
mov
mov
add
popf
js
(bad)
test
test
adc
outs
mov
or
je
bound
scas
or
mov
repnz
dec
sbb
(bad)
es
lods
int
jbe
std
retf
movs
mov
loope
pop
mov
cmp
mov
daa
cdq
nop
push
std
rcl
fadd
or
clc
mov
pop
cmp
push
push
fiadd
out
bound
movs
xor
in
jecxz
repnz
push
mov
fdiv
loope
call
jmp
mov
(bad)
int3
xchg
jg
adc
xor
ds
dec
jp
and
xor
inc
sbb
mov
test
cmp
jl
rcr
sub
pop
push
fs
pushf
pop
sbb
outs
and
pushf
jno
jno
pop
add
xchg
cmp
jmp
jg
mov
jnp
inc
mov
repz
pop
mov
stos
inc
jne
xor
ror
or
and
out
(bad)
push
pop
ja
lea
and
pop
test
push
jb
inc
xchg
jne
call
push
es
dec
int
stos
and
aam
xchg
mov
loope
dec
iret
and
repz
std
dec
(bad)
out
nop
imul
fsub
lods
jo
adc
syscall
test
int3
push
shl
and
and
addr16
adc
repnz
mov
sbb
fdivrp
inc
fucom
fwait
les
ret
cmp
mov
retf
fdiv
sbb
adc
neg
xor
inc
loop
cmp
xchg
add
or
aad
shl
xor
dec
in
aas
xor
aad
adc
out
cld
clc
xchg
(bad)
sbb
(bad)
xor
adc
jno
retf
cmps
enter
adc
(bad)
pop
push
push
dec
arpl
popf
jg
jne
pop
stc
xchg
xor
and
and
dec
cmc
mov
sub
or
movs
push
cli
call
mov
pop
inc
leave
in
(bad)
xchg
jmp
(bad)
and
scas
fs
mov
fidiv
lds
aaa
fsub
mov
hlt
cmp
fidiv
xor
enter
sbb
add
sub
pop
pop
out
fidivr
adc
inc
push
por
jo
cmp
cmc
sub
stc
test
xor
mov
das
xchg
fsub
mov
int3
pop
adc
jle
out
sbb
sti
inc
pop
in
lahf
xchg
stc
mov
iret
ss
mov
popf
push
mov
pop
add
ds
stos
aad
and
jne
jl
ss
out
aas
(bad)
jae
xor
jecxz
daa
popa
aad
mov
popa
cmp
push
cmc
xchg
loop
xchg
or
mov
cmp
(bad)
out
sub
es
jecxz
jbe
inc
test
jb
mov
nop
bswap
dec
(bad)
sbb
cmp
in
sub
pop
repnz
or
loopne
push
or
movs
movlps
push
in
xchg
xchg
loope
cmc
ins
sti
mov
pop
cmps
in
fstp
int
jno
jns
call
adc
sbb
push
movs
test
ror
and
jnp
xchg
xor
cwde
jmp
sar
sub
mov
aas
push
test
sti
shl
sbb
ror
mov
scas
sub
jl
mov
or
dec
inc
ins
pop
xchg
cli
add
dec
out
int3
jecxz
mov
(bad)
adc
xchg
push
mov
jl
ret
(bad)
es
test
popa
or
sbb
xor
stos
sub
clc
pop
xor
shr
lea
test
retf
and
push
or
jle
mov
sub
daa
stos
into
mov
sub
xor
pushf
hlt
retf
inc
mov
popa
pop
add
xchg
lea
mov
mov
bound
jp
in
xor
popf
sbb
dec
jge
cmc
outs
mov
mov
aad
adc
dec
(bad)
fdivrp
mov
dec
shl
xchg
jle
lock
push
cwde
in
dec
jmp
mov
mov
mov
pop
pop
je
aad
(bad)
shl
jbe
inc
cmc
fcmovnb
pop
push
aad
add
idiv
add
int
mov
mov
mov
sub
(bad)
retf
dec
xchg
cmps
lea
daa
into
fist
(bad)
sub
(bad)
js
inc
xchg
add
jl
rcl
mov
cld
dec
push
movs
ds
cmp
imul
jo
push
mov
or
sahf
pop
mov
push
mov
cwde
xchg
push
fsub
fisubr
mov
and
push
aaa
ins
mov
in
out
arpl
sub
cmc
push
pop
out
mov
inc
mov
mov
clc
xor
enter
mov
and
aaa
neg
adc
cmps
test
mov
loop
mov
add
fimul
in
push
ret
aad
jbe
or
aaa
(bad)
retf
mov
jl
movs
add
inc
or
mov
data16
xchg
sub
out
cmp
jle
aas
sbb
jnp
sbb
call
jmp
xchg
js
ret
mov
sbb
pop
mov
in
fwait
sbb
addr16
daa
sub
sbb
jge
lock
int3
mov
ins
sbb
mov
sahf
xchg
mov
pop
lds
pop
adc
mov
and
jne
jne
adc
call
sbb
cs
push
push
xor
sub
push
or
push
test
xlat
outs
adc
jl
inc
push
jnp
mov
push
cmp
stos
(bad)
pop
xor
push
loopne
add
lock
repnz
ret
call
sub
jne
movs
ja
std
aas
in
dec
dec
or
push
out
mov
fs
cmc
xchg
jg
push
xchg
push
aam
push
xchg
cwde
cld
int
enter
push
mov
cmp
jp
cmp
leave
pop
dec
pusha
ss
xor
(bad)
push
cwde
pop
inc
inc
fdiv
(bad)
loop
push
aad
sbb
outs
jmp
loopne
xchg
pop
xchg
std
sbb
push
mov
stc
repz
test
inc
popf
adc
mov
xor
xor
sub
aam
adc
pop
xchg
das
sub
ror
fild
(bad)
cli
aaa
(bad)
jns
ss
aaa
repz
push
or
lods
jbe
stos
sbb
push
jp
sub
pop
ins
iret
push
dec
cmp
iret
inc
scas
frstor
std
push
gs
rcl
xor
out
in
test
push
push
and
inc
mov
test
rcr
xor
mov
std
push
pushf
sub
retf
ins
pop
jmp
mov
xor
lea
scas
xchg
sar
mov
jbe
inc
aam
mov
mov
lods
mov
imul
cs
dec
mov
retf
add
mov
sub
mov
outs
pop
int
adc
jno
aas
jno
call
mov
(bad)
push
pop
or
aas
mov
sbb
stos
sub
(bad)
pop
jb
jns
retf
or
and
repz
sbb
xchg
push
jg
mov
adc
jmp
repnz
arpl
je
xchg
push
inc
movs
and
int
jmp
idiv
xchg
adc
std
xchg
and
outs
inc
inc
js
and
pusha
mov
(bad)
mov
inc
and
xchg
xchg
test
lods
popf
xor
pusha
outs
mov
scas
or
push
pop
push
sbb
dec
pop
sbb
jb
test
les
jb
jecxz
adc
int3
and
clc
ffree
ins
xchg
repnz
sub
call
xor
dec
jl
test
mov
cdq
cmps
mov
js
jno
xchg
aas
idiv
mov
push
jmp
mov
lock
push
jns
or
mov
dec
mov
in
mov
aas
push
jmp
jp
mov
pusha
test
lds
dec
cwde
in
xor
fs
imul
mov
lock
and
pop
add
xor
ds
mov
pop
pop
sbb
sbb
loop
jecxz
jbe
sbb
arpl
mov
bound
or
cwde
dec
fidivr
dec
push
inc
push
and
jge
repz
(bad)
fimul
pop
cli
pop
jl
icebp
mov
or
mov
fcom
sbb
call
es
sub
xchg
mov
cmps
jle
pop
add
retf
lds
mov
gs
cli
pushf
cwde
nop
rcr
or
ret
jnp
xchg
int3
adc
loopne
mov
enter
movs
jo
inc
fs
mov
shl
xchg
inc
pop
adc
jae
mov
mov
xor
mov
push
call
mov
cmps
jb
xchg
clc
loopne
addr16
pop
sub
mov
jmp
out
dec
loopne
xor
neg
nop
ins
dec
movs
push
xchg
jle
iret
or
lock
scas
ret
push
mov
and
cmp
xchg
popa
inc
inc
cs
pop
lods
cmp
push
push
inc
inc
cmp
mov
xor
int
pop
adc
or
aad
add
push
lahf
cmp
pop
adc
clc
mov
imul
out
mov
jnp
inc
int3
gs
outs
adc
(bad)
(bad)
sahf
scas
pushf
outs
test
or
sbb
xor
in
jecxz
cwde
adc
cli
fwait
or
inc
gs
mov
mov
outs
xlat
stc
aaa
imul
test
xlat
cmp
fldenv
mov
aam
pop
shl
dec
nop
adc
pop
xor
jbe
int
lods
jb
xchg
mov
jo
push
add
mov
or
add
push
xchg
or
sub
in
(bad)
shr
mov
jl
or
mov
add
mov
xchg
mov
jnp
jne
push
push
jmp
or
inc
arpl
test
mov
(bad)
in
and
gs
enter
pop
shl
mov
imul
or
mov
shl
sub
or
pop
cdq
mov
xor
test
adc
xchg
enter
jbe
or
pop
and
pop
dec
push
sbb
push
push
sub
iret
in
cdq
mov
mov
push
push
sub
and
retf
adc
jmp
push
inc
aaa
ins
xchg
push
shl
icebp
mov
movs
fistp
jne
mov
xchg
cdq
out
movs
int3
sbb
dec
jnp
pop
pop
in
or
sub
pop
dec
or
stc
jnp
out
or
cmc
and
sbb
movs
cmp
icebp
push
jl
int3
in
jbe
push
rcr
repnz
or
cmp
sti
mov
les
sbb
retf
sub
aad
shl
pop
std
repnz
mov
out
xchg
into
iret
imul
aaa
pop
icebp
repz
js
adc
or
pusha
fsubr
dec
retf
jno
(bad)
sub
mov
sbb
jmp
ins
aaa
add
jg
sar
mov
mov
int3
mov
push
pushf
enter
rcr
lock
test
inc
jmp
sub
int3
test
into
push
jbe
sbb
mov
cmp
jns
fmul
repnz
mov
fld
sbb
mov
scas
in
pop
pop
lock
jno
pop
jle
cmps
sbb
stos
leave
sbb
test
pop
sahf
adc
iret
mov
inc
ret
mov
fisttp
xor
add
out
in
fstp
enter
aad
inc
mov
cmps
pop
push
pop
add
jmp
dec
fild
movs
mov
mov
lea
add
mov
stc
add
and
jle
sub
push
or
ret
sahf
jmp
pop
out
repnz
and
add
rol
in
neg
das
pop
std
int3
xchg
ret
fdivrp
adc
mov
loop
data16
dec
fdivr
mov
push
xor
push
aas
scas
stc
dec
(bad)
in
jp
mov
pop
jns
popa
gs
cmp
sti
(bad)
idiv
loope
mov
jbe
mov
mov
sbb
inc
mov
mov
dec
inc
sub
ins
push
shl
dec
(bad)
sbb
mov
test
aaa
push
in
nop
adc
fnstsw
mov
jb
jg
push
rcr
aam
sbb
out
mov
dec
pop
fnstenv
cmc
jl
mov
icebp
xchg
xor
lahf
jns
popa
(bad)
in
ds
sbb
add
(bad)
dec
fild
pop
xor
int3
test
nop
dec
imul
jne
arpl
inc
sub
ds
mov
xchg
(bad)
(bad)
pop
xchg
push
jno
mov
fisttp
call
pop
out
fs
jl
push
(bad)
cmp
stc
cmp
hlt
push
add
mov
and
or
enter
in
push
xor
stos
dec
lods
inc
push
ins
cmc
xor
mov
dec
dec
mov
or
sahf
mov
enter
add
mov
push
cwde
test
sbb
fdivp
xor
call
mov
test
inc
sbb
adc
pop
push
inc
mov
xchg
push
inc
sbb
mov
xor
sbb
push
push
in
cs
jmp
mov
sbb
dec
cmp
pop
inc
loop
aam
ss
adc
fidivr
cld
mov
jmp
sbb
push
scas
stos
test
retf
sub
aam
retf
out
dec
and
cmp
out
ret
mov
sbb
cwde
rcl
inc
arpl
arpl
dec
cwde
push
xchg
repnz
xchg
(bad)
ret
inc
cmp
mov
adc
bnd
xor
add
add
lods
push
mov
test
push
jl
and
rol
dec
(bad)
lea
mov
pop
in
mov
xor
sub
into
adc
movs
adc
lods
add
into
sbb
mov
lods
push
fs
push
mov
sub
push
daa
push
cmp
ins
xor
ja
out
xlat
out
loopne
adc
stos
inc
les
data16
sbb
fs
inc
retf
or
lods
pop
shr
adc
sbb
xlat
rol
cwde
neg
and
repnz
rol
(bad)
lods
adc
in
or
mov
(bad)
out
rol
push
(bad)
scas
adc
into
verr
inc
add
mov
jle
add
jmp
sub
retf
sub
sub
cld
jno
adc
sahf
cmp
sub
repz
xchg
fwait
mov
scas
xor
(bad)
adc
jecxz
xchg
jmp
cli
(bad)
mov
inc
xchg
cwde
aam
inc
shr
call
bnd
dec
leave
aam
std
(bad)
ins
rcl
sar
pop
fcom
push
ss
mov
mov
mov
addr16
scas
xchg
pop
mov
add
sub
xchg
hlt
(bad)
add
dec
retf
call
loopne
inc
test
sti
lock
in
shl
sbb
jmp
daa
lahf
ror
mov
sub
inc
push
mov
jmp
leave
fdivr
in
inc
popf
inc
out
xor
addr16
pop
and
cmc
pop
ds
pop
mov
and
xor
jp
push
imul
mov
pop
dec
cdq
out
dec
test
or
fs
lods
add
cld
push
sbb
adc
push
sbb
push
mov
adc
movs
xchg
nop
cwde
enter
in
jns
dec
mov
dec
xor
sub
in
jmp
(bad)
sub
xchg
cmp
(bad)
mov
inc
es
mov
jmp
pop
sbb
mov
and
call
cmp
cs
shr
ins
inc
test
inc
xchg
movs
repnz
add
adc
mov
mov
out
ins
inc
ja
xlat
into
mov
in
jmp
jg
lahf
sbb
and
stos
xor
push
lea
jg
xchg
dec
sub
lea
pop
call
inc
mov
adc
out
inc
push
xchg
mov
sbb
push
jmp
sub
movs
push
jl
sub
or
cmp
int3
gs
pop
pop
(bad)
jns
cwde
jae
mov
inc
mov
retf
add
jecxz
call
or
push
mov
dec
jae
fdivr
arpl
stos
ins
jmp
add
les
jl
and
pop
xchg
dec
fnstcw
in
daa
das
lods
scas
retf
outs
mov
pop
push
dec
fstp
outs
push
xor
adc
or
or
inc
sub
pop
lea
jb
loope
jae
mov
xchg
fcomp
mov
aad
call
in
jns
mov
dec
cmc
xlat
push
push
out
sbb
jmp
outs
mov
mov
sbb
and
ret
jp
push
leave
mov
inc
jb
cmps
rcr
xlat
arpl
ins
mov
imul
xchg
sahf
mov
test
mov
xor
cs
jmp
sti
mov
xor
(bad)
out
pusha
arpl
ja
add
or
and
loop
dec
sbb
pop
div
out
ret
mov
push
and
push
std
ds
add
iret
jp
add
(bad)
lods
cmc
fistp
cmc
stc
sbb
rcr
xchg
movs
int
rol
(bad)
data16
hlt
fld
inc
imul
pop
inc
cwde
jge
aaa
popf
fld
mov
push
pop
xchg
addr16
es
ins
push
adc
in
mov
or
(bad)
ror
enter
std
adc
or
loopne
pop
in
and
ficom
lock
(bad)
fiadd
jno
bound
mov
xor
lock
stos
out
push
mov
lds
or
ret
sbb
inc
mov
mov
neg
call
inc
cmp
or
xchg
sub
dec
(bad)
(bad)
push
fisub
mov
mov
hlt
sar
fnstsw
retf
fisttp
add
sbb
shl
fidivr
and
enter
inc
lock
push
xchg
ins
retf
outs
stos
push
mov
pusha
mov
repz
std
push
dec
push
add
xchg
in
lahf
or
xlat
aad
loop
loopne
cmp
sbb
mov
jge
fisub
mov
adc
pop
out
mov
pop
adc
pop
adc
mov
mov
cmp
mov
push
mov
call
jle
aas
rcl
adc
inc
pop
jge
or
push
cld
dec
inc
outs
cld
test
dec
sbb
clc
sbb
dec
(bad)
fmul
aad
sbb
cmp
xchg
or
call
fistp
mov
sub
loop
push
inc
mov
dec
sbb
mov
clc
dec
fdivr
rol
int3
and
pop
ss
sub
add
mov
fwait
ja
jbe
test
ror
or
leave
push
ins
dec
idiv
inc
movs
fwait
pop
enter
and
cmp
add
std
fstp
mov
push
aaa
or
sub
xor
out
stos
rcl
mov
(bad)
sbb
add
pop
jmp
cwde
pop
add
jb
rol
scas
and
xor
jo
fcmovb
xlat
cmp
pop
iret
stc
inc
arpl
repnz
and
push
mov
gs
add
jne
jne
imul
jno
test
pop
push
inc
call
dec
add
push
ret
mov
push
stos
inc
cmp
add
push
repnz
in
das
push
frstor
cli
scas
jge
push
and
or
xchg
(bad)
jne
call
stos
stos
addr16
or
mov
dec
das
add
adc
daa
cs
arpl
mov
(bad)
push
pop
jo
mov
dec
cmp
popa
jb
outs
add
into
mov
sub
bound
cmp
fucomp
sbb
xchg
lds
cmps
shl
xor
sub
push
pop
shr
imul
(bad)
sub
mov
in
icebp
js
or
push
enter
xor
movs
outs
mov
mov
inc
xor
ror
add
sbb
and
mov
add
jle
stos
mov
aad
xchg
jmp
hlt
inc
push
xchg
daa
pop
push
xor
dec
pushf
dec
test
pop
pushf
mov
test
push
neg
mov
add
out
cmp
and
dec
xchg
xor
(bad)
jp
sub
ss
inc
fwait
cli
lds
ret
adc
retf
call
ins
cmp
push
and
or
jo
mov
sbb
in
std
jg
dec
cld
(bad)
pop
cmc
jecxz
push
mov
jns
sub
aaa
push
retf
sub
loopne
jmp
pop
dec
jno
jmp
mov
ds
inc
push
jge
scas
mov
scas
pop
pop
mov
add
(bad)
mov
push
xchg
in
jge
dec
jecxz
dec
jbe
jno
and
in
mov
(bad)
cld
out
pusha
inc
inc
(bad)
pop
nop
pop
loop
ret
xchg
icebp
fiadd
dec
mov
pusha
push
mov
push
jle
ins
push
pushf
mov
sti
mov
pop
in
jecxz
add
jmp
xchg
mov
in
xchg
pop
ror
mov
push
mov
fisttp
test
pop
sub
pop
xchg
xchg
rcr
pop
xchg
cmpxchg
cdq
cld
or
in
xchg
pop
loope
adc
cli
adc
loop
ins
outs
adc
dec
pop
push
or
and
test
xchg
or
cmp
inc
xor
jno
clc
daa
sti
xchg
jne
dec
and
out
in
jne
add
fbld
sub
or
add
dec
test
in
hlt
mov
enter
lods
in
jae
jp
adc
cdq
lds
and
and
test
dec
jne
push
pop
sub
shl
sub
in
(bad)
mov
ins
xor
in
mov
hlt
fld
repz
pop
add
cmp
jmp
add
add
shl
enter
mov
dec
cwde
ds
mov
mov
(bad)
lock
pop
cwde
push
jb
ds
xchg
adc
cmp
add
icebp
dec
or
jbe
or
rcl
mov
icebp
enter
adc
ficomp
pop
call
imul
or
les
pop
dec
pop
cmps
pusha
and
or
xor
inc
stos
ja
add
xor
mov
push
xchg
jp
(bad)
jae
pop
test
jns
lea
(bad)
shl
add
mov
cdq
test
jnp
inc
or
sbb
add
popf
inc
cmp
jnp
rcr
in
jne
cwde
xchg
jmp
in
sbb
pushf
pop
dec
dec
or
jo
ss
mov
dec
and
(bad)
cld
stos
xor
cmp
dec
and
jmp
push
cmp
test
add
push
loope
sbb
pop
fldlg2
pop
mov
inc
test
pop
add
mov
test
fisub
inc
dec
sar
shr
add
outs
cmp
cwde
adc
dec
inc
call
loop
sbb
xor
jle
(bad)
mul
dec
dec
or
pusha
aas
add
outs
aas
cmc
pop
jp
pop
sbb
jle
mov
test
std
mov
and
pop
pop
out
sahf
aad
xchg
les
clc
xchg
jmp
daa
cld
repnz
inc
in
ja
jl
jo
aaa
scas
add
and
xor
test
cmps
cmps
jb
cmps
mov
inc
in
xor
nop
jmp
fmul
push
push
sub
push
mov
push
mov
fsubrp
rcr
lahf
jg
pop
or
xor
jbe
xchg
fcmovnbe
daa
test
and
addr16
xor
pushf
lods
std
mov
add
mul
mov
or
push
xor
inc
je
mov
pop
pop
retfw
shl
dec
mov
mov
ja
xor
dec
sahf
jmp
popf
mov
dec
scas
add
pop
arpl
stos
pop
cs
push
out
add
mov
gs
jmp
leave
ins
add
test
in
cmp
jmp
(bad)
push
or
sub
ja
(bad)
shr
adc
sbb
inc
fiadd
jmp
mov
call
adc
(bad)
adc
or
or
pop
jg
xor
in
fidiv
mov
mov
stc
std
popf
test
imul
or
mov
daa
retf
pop
xchg
bound
or
mov
adc
and
mov
xor
imul
add
sbb
and
push
ins
leave
fst
fcomp
ja
sbb
xchg
or
xor
aam
or
xor
lds
sar
mov
jge
(bad)
pop
sbb
(bad)
into
jg
movs
jmp
sbb
ds
(bad)
loop
cmp
movs
push
mov
cdq
jg
xchg
sbb
and
xchg
jge
jnp
xchg
ins
retf
sbb
and
and
icebp
push
mov
scas
ret
pop
das
and
add
mov
pop
fwait
or
sti
leave
scas
dec
shl
or
push
popf
jecxz
add
ja
xchg
push
mov
loop
xchg
aam
jl
and
pop
xchg
leave
add
in
scas
inc
mov
lods
lds
movs
mov
push
sar
push
sub
adc
movs
not
inc
cwde
dec
cmp
adc
mov
mov
fild
ds
xchg
cmp
sar
mov
lock
lahf
xchg
and
xor
inc
pop
aad
inc
(bad)
cmc
ds
lea
cmp
pop
push
movs
mov
into
xchg
adc
xor
mov
sbb
icebp
mov
adc
jo
pop
fwait
(bad)
push
jl
and
cmp
pop
punpckhwd
icebp
push
cmc
test
and
rcr
adc
ins
add
in
shr
sbb
or
test
xchg
enter
(bad)
imul
xchg
adc
jg
jmp
mov
or
loop
add
push
add
les
sub
fisttp
scas
shl
jnp
idiv
(bad)
cmp
aas
adc
cmp
mov
fsub
push
fcomp
cmp
sub
pop
jge
loope
cmps
xchg
aaa
in
inc
in
cmp
jg
fsubr
mov
sub
xchg
stos
pop
fld
mov
lahf
ja
cmp
cmp
push
push
mov
mov
adc
and
vpunpckhwd
pop
aam
pop
cwde
mov
adc
push
push
pushf
fadd
xchg
adc
xor
push
sub
(bad)
adc
inc
fmulp
fsub
(bad)
(bad)
outs
push
ret
push
xor
cmp
push
aas
lahf
pop
repnz
dec
cmps
xchg
pop
stc
out
push
xor
into
fs
lods
mov
sub
add
(bad)
pop
push
xlat
cmp
(bad)
cwde
pop
sub
outs
jmp
and
xor
add
xor
cmp
mov
or
push
and
xchg
sar
and
pop
and
sar
xchg
sub
cwde
aad
pop
push
ret
adc
cmp
aad
and
loope
jmp
das
clc
pusha
out
pop
or
inc
mov
test
inc
add
movs
int
lods
xor
mov
jno
sbb
imul
xor
(bad)
cmp
adc
mov
outs
retf
or
out
mov
xor
lods
les
inc
or
inc
mov
sbb
push
mov
xchg
ret
shr
pop
mov
rcl
mov
stos
(bad)
xor
xchg
fiadd
xchg
pop
outs
cmp
cmps
stos
dec
cli
ja
outs
mov
test
lods
sbb
mov
cmps
fnstsw
sbb
js
xchg
loope
cmps
repz
aaa
sbb
cld
pop
push
adc
xor
outs
stos
repz
pop
cwde
inc
out
(bad)
cdq
hlt
out
out
adc
in
push
add
mov
and
stos
add
movs
jbe
repz
mov
loop
out
jle
cmp
jmp
cmp
push
xor
push
push
sub
popa
test
xchg
adc
push
mov
push
pop
test
cld
in
jle
dec
out
add
iret
inc
xchg
push
push
mov
sbb
cmp
fwait
jg
ror
adc
out
and
mov
retf
arpl
cmp
cmp
xchg
aam
adc
xor
clc
jle
scas
fimul
outs
dec
pusha
hlt
jne
outs
or
xor
test
push
xchg
out
jmp
(bad)
fidiv
out
icebp
retf
mov
scas
out
mov
push
pop
imul
rcr
sbb
sub
mov
mov
imul
push
pop
sti
pop
dec
push
mov
in
inc
mov
in
xchg
mov
daa
and
mov
ins
test
inc
and
sub
ficom
xlat
xor
sbb
inc
jmp
movs
aam
push
fcom
mov
xchg
mov
clc
nop
and
fldcw
jle
and
les
dec
jecxz
test
sub
or
mov
dec
push
xchg
pop
jne
das
iret
adc
jb
add
and
push
push
mov
and
ds
sbb
popa
mov
pop
and
repnz
jb
icebp
xchg
dec
imul
inc
jmp
int
daa
movs
sub
pop
push
je
xor
test
int3
fcomp
push
arpl
imul
clc
ss
sbb
retf
dec
mov
fld
pop
mov
pushw
sti
(bad)
retf
inc
sub
push
or
mov
pop
adc
inc
js
or
loop
pop
rcl
cdq
mov
repz
shl
pop
mov
mov
aad
pop
and
(bad)
adc
test
and
xchg
cmp
in
push
std
sub
test
xchg
fnstsw
sub
(bad)
int
push
test
ins
jecxz
push
mov
scas
sbb
pop
xchg
or
jge
sub
jbe
adc
cmps
jmp
and
lods
stos
sti
in
sahf
fstp
add
sub
mov
mov
test
outs
sub
cmp
dec
aaa
cmc
dec
inc
mov
jmp
rcl
loop
cmp
sti
jno
sub
inc
cmp
dec
cmc
sbb
cmp
mov
jg
pop
jmp
xor
sub
jb
mov
jae
or
sub
(bad)
out
push
daa
jbe
mov
inc
movs
sar
pop
(bad)
xchg
std
outs
push
cmp
test
ja
popf
stos
pop
jne
adc
pop
xchg
in
int3
pop
mov
and
cdq
fwait
jmp
popa
rcr
data16
add
and
and
and
aad
mov
xor
inc
aam
lods
adc
lea
jg
or
es
sahf
(bad)
mov
ins
and
mov
inc
adc
imul
(bad)
aas
sub
shr
xlat
cmp
and
pslld
mov
jg
cmp
test
out
push
into
lea
inc
cmc
mov
dec
test
jmp
dec
lea
imul
loop
jnp
sar
fcom
in
(bad)
fst
pop
inc
arpl
in
test
sub
inc
and
(bad)
fs
mov
sub
mov
sub
mov
jg
inc
(bad)
or
sub
sti
retf
dec
push
dec
or
int3
call
inc
aam
jbe
fld
out
or
pusha
or
inc
fbld
in
jl
scas
fstp
fiadd
inc
bound
nop
jnp
sub
arpl
adc
test
mov
icebp
xor
dec
jecxz
aam
mov
stc
out
sbb
inc
outs
stc
and
(bad)
fdiv
or
or
dec
sub
inc
add
mov
loop
(bad)
sbb
pop
iret
xchg
mov
popf
inc
dec
mov
adc
adc
push
xchg
push
stos
push
add
leave
mov
cmps
and
test
cmp
out
movs
repz
mov
loop
shr
std
sbb
imul
scas
and
fcomp
inc
in
mov
pushf
mov
push
rcr
mov
ficom
xchg
push
shr
gs
pop
pop
jae
out
out
lahf
inc
icebp
xchg
sbb
xlat
adc
cli
dec
in
jg
mov
loope
push
and
sbb
(bad)
in
inc
aas
in
push
cld
imul
or
mov
dec
cli
mov
hlt
outs
mov
or
sti
mov
ja
dec
or
call
fdiv
loopne
and
fadd
inc
inc
push
popa
cld
or
outs
adc
cdq
dec
mov
loope
push
enter
xchg
outs
push
out
jge
xchg
adc
and
test
pop
or
imul
adc
or
pusha
jb
pop
ss
fcmovnb
dec
jo
lods
mov
cmc
test
adc
fbstp
inc
(bad)
mov
ja
pop
fwait
or
cmp
mov
nop
add
sub
inc
or
leave
sub
neg
stos
push
mov
mov
scas
mov
rcl
(bad)
xor
pop
movs
sbb
adc
scas
div
inc
mov
fimul
push
jbe
cld
push
inc
xchg
mov
leave
cmp
bound
pop
gs
sti
loop
adc
(bad)
in
arpl
sbb
sar
lods
ret
fsubr
out
pmulhw
or
cmp
adc
test
pushf
inc
cmp
jmp
pop
jg
fwait
in
shl
mov
adc
cmps
inc
test
sub
dec
int3
sti
xchg
into
(bad)
retf
pop
sub
and
retf
sahf
jmp
add
(bad)
(bad)
mov
(bad)
aad
cmc
clc
pop
xchg
adc
add
push
call
jge
leave
or
jecxz
push
enter
cmp
(bad)
jnp
ror
add
fldenv
dec
jae
jmp
and
mov
or
inc
loope
adc
push
(bad)
outs
cld
fdivr
add
adc
push
dec
sub
add
mov
xor
(bad)
loop
es
push
lods
and
cmps
mov
pushfw
add
or
cmp
mov
in
(bad)
xor
fisttp
and
loopne
push
cmp
and
outs
mov
shl
mov
in
(bad)
ficomp
je
ja
ins
fst
sti
fisubr
hlt
mov
inc
arpl
aaa
arpl
dec
adc
mov
(bad)
clc
nop
out
sbb
mov
adc
push
nop
xor
dec
sbb
retf
sbb
adc
pop
sbb
retf
sbb
mov
inc
cld
jno
add
cld
xchg
leave
sbb
add
mov
icebp
xchg
enter
shl
pop
jae
imul
imul
or
jle
int3
xchg
shl
test
or
ret
js
aad
mov
xchg
xor
xor
fild
fisttp
mov
cld
daa
dec
adc
movs
les
jmp
pushf
in
xor
or
push
inc
add
ds
cmp
or
xchg
sub
call
sub
xor
in
mov
cmp
cli
dec
inc
outs
mov
dec
mov
jne
xor
movs
iret
js
bound
rcl
push
scas
cli
dec
arpl
cmp
or
(bad)
jg
push
dec
aam
leave
or
push
xchg
xchg
call
pop
iret
jne
push
lods
push
lods
mov
push
scas
mov
lock
mov
jecxz
adc
cmps
retf
fcmovnu
and
push
cld
cmps
or
rcl
shl
push
dec
pop
jge
mov
cmp
xchg
add
pop
(bad)
push
inc
add
push
sbb
dec
icebp
mov
imul
cmc
loope
cmps
mov
jae
and
sti
push
pushf
mov
sub
imul
call
in
inc
mov
dec
ds
jae
retf
cmp
lahf
cmp
sub
ins
sub
ret
addr16
xor
js
mov
movs
loop
mov
pop
aas
pushf
test
or
repnz
(bad)
shl
imul
ret
dec
cmps
cdq
or
(bad)
int
add
dec
(bad)
ja
js
mov
mov
pop
int
or
and
dec
fdivr
out
fsub
leave
clc
test
addr16
push
sbb
pop
inc
in
dec
mov
inc
add
pop
cmps
stos
shl
or
jmp
faddp
mov
cdq
movs
lahf
stos
push
adc
icebp
pop
jmp
ins
mov
or
push
pop
lds
dec
sbb
push
pop
fdiv
fiadd
sub
loopne
sahf
mov
lods
int
pop
or
rcl
cmovg
inc
test
mov
rcr
pop
iret
pop
stos
pushf
mov
cwde
mov
fwait
clc
outs
jo
mov
lahf
and
psrad
rcl
inc
(bad)
leave
jae
retf
lods
icebp
mov
jl
jb
loopne
pop
sub
push
test
(bad)
inc
in
push
pop
cli
movs
lock
xchg
pop
shr
or
or
sub
add
fisub
ret
pop
out
imul
jge
inc
jle
push
mov
xlat
ins
mov
ret
jl
addr16
(bad)
xchg
sbb
mov
xchg
bound
test
adc
cdq
leave
push
test
cwde
repz
loopne
movs
mov
add
je
lock
sbb
cdq
test
jb
mov
in
imul
clc
aad
mov
mov
dec
outs
mov
mov
push
cmp
mov
mov
add
mov
xor
adc
mov
pop
scas
mov
mov
stos
(bad)
mov
xor
jmp
pop
mov
popf
adc
icebp
cmp
push
pop
stos
retf
jns
push
nop
bound
bound
pslld
je
sahf
ror
stc
jmp
jmp
fsubr
imul
fs
les
aad
fadd
sti
lods
aad
and
inc
push
and
mov
clc
(bad)
lods
jo
pop
sub
xchg
out
push
mov
xchg
movs
shl
mov
xchg
inc
aas
jmp
loopne
in
push
(bad)
repz
leave
adc
outs
and
lods
shr
lahf
gs
out
(bad)
shr
jecxz
xchg
add
sub
das
sub
mov
and
out
or
inc
dec
mov
mov
pop
sub
jl
jb
dec
mov
jns
xchg
inc
mov
mov
xor
adc
retf
inc
and
psrlw
adc
mov
or
scas
cs
push
cmps
pusha
cmps
jp
jne
mov
jmp
jl
jns
pushf
cmps
or
in
loop
cwde
cmp
test
push
xor
or
pop
lock
push
push
xlat
sub
int
jp
fs
dec
sub
sbb
ins
div
mov
movs
inc
mov
scas
out
jg
xor
les
pop
call
out
jno
sub
ja
pop
xlat
cmp
loope
lods
pop
in
loope
dec
push
call
enter
fdivp
xor
pop
shr
ret
dec
mov
and
jae
cmp
in
push
test
call
std
add
loopne
es
mov
inc
inc
and
sahf
push
xor
lahf
jb
add
es
xchg
dec
pop
call
and
rcr
jl
cmp
cmp
cwde
shl
imul
ficomp
pop
jge
aas
in
int3
dec
inc
jno
test
sub
cwde
popa
call
outs
sbb
cwde
adc
and
push
xchg
stos
call
inc
int
(bad)
or
mov
addr16
mov
jg
sbb
ror
lods
dec
push
mov
sub
ret
inc
dec
sbb
mov
and
sbb
(bad)
rol
push
stc
retf
jmp
aaa
adc
and
inc
mov
and
pop
and
dec
inc
or
mov
pop
lahf
ret
mov
mov
jno
retf
xor
add
test
aad
mov
mov
push
loop
dec
mov
mov
mov
and
cmp
pushf
or
gs
les
mov
movs
xchg
das
pop
mov
pop
stos
push
outs
ret
jnp
or
xor
inc
push
test
jns
lahf
stos
and
das
or
pop
mov
arpl
cmps
mov
push
xchg
(bad)
fadd
jb
aas
in
sub
adc
adc
pop
pop
jp
mov
lods
je
jo
mov
js
xchg
hlt
data16
repz
dec
jae
pop
xchg
pop
add
hlt
or
xchg
sbb
rol
sub
(bad)
aaa
dec
xor
jb
in
push
nop
retf
fwait
xor
push
or
xor
dec
mov
out
jns
adc
pop
stos
fsubr
mov
mov
or
imul
xor
ror
sti
rcr
jmp
mov
cdq
popa
jecxz
dec
xor
iret
pop
pop
add
mov
or
push
aas
repz
cmp
retf
test
ja
punpckldq
lods
cli
adc
inc
jmp
inc
push
or
out
cmp
fdiv
sbb
jmp
and
jecxz
scas
(bad)
pop
mov
fwait
push
aas
js
inc
or
jae
das
mov
retf
push
es
inc
inc
mov
dec
or
fld
lea
or
jmp
mov
lock
lock
inc
add
adc
shr
xor
call
mov
xchg
out
xor
cmp
mov
mov
call
mov
out
test
dec
lea
cwde
cmp
add
shr
faddp
outs
icebp
mov
scas
sbb
retf
jb
(bad)
add
adc
cmp
mov
icebp
mov
cli
sahf
stos
out
les
pop
lods
ret
cli
add
jle
or
jp
mov
xchg
lahf
inc
sahf
sub
sbb
aaa
in
pusha
stos
push
retf
fdivr
jle
enter
lds
sub
cmp
pop
into
inc
xlat
daa
push
sub
add
cmc
and
mov
jnp
(bad)
ficom
dec
dec
ss
mov
or
cmp
jnp
xlat
mov
xchg
adc
popa
inc
mov
sbb
adc
push
add
test
add
pushf
jo
cmps
mov
pop
outs
repz
sbb
push
adc
jae
cwde
(bad)
jecxz
outs
jmp
sbb
retf
test
dec
jmp
jbe
inc
xor
sbb
cwde
cmc
mov
mov
cmp
in
jne
or
add
inc
inc
xchg
adc
push
stc
loopne
and
sar
xlat
call
mov
ja
cld
jl
adc
mov
ss
and
das
dec
mov
(bad)
into
pop
ja
out
push
nop
sub
ins
mov
and
jle
test
pusha
mov
or
xchg
fbstp
fucom
stos
leave
repz
repz
stos
push
sub
neg
mov
adc
xchg
stos
loopne
imul
js
and
xchg
movs
mov
fadd
xchg
leave
inc
xor
(bad)
fld
push
test
or
arpl
inc
sti
mov
sub
sub
or
cld
adc
pop
test
es
addr16
out
jne
scas
aam
std
stc
sbb
clc
ins
inc
jne
ins
add
out
lock
das
dec
adc
xor
dec
jle
das
mov
cmp
call
rcl
jecxz
in
push
xor
mov
div
aaa
out
std
retf
(bad)
sbb
mov
add
nop
inc
jp
ret
adc
inc
mov
je
cmc
inc
ds
push
add
sbb
mov
in
inc
outs
cli
and
sub
pop
aam
pop
xchg
mov
jmp
pop
jmp
dec
sbb
push
jp
ficomp
das
iret
out
inc
sti
ret
(bad)
mov
xchg
stc
in
jg
push
mov
idiv
xchg
inc
fnstenv
fcomp
inc
stos
xor
test
dec
stos
adc
pop
cmps
and
and
leave
push
cmp
dec
inc
popa
add
push
cmps
sbb
pop
call
push
fcomi
lock
repnz
dec
xor
rol
xchg
or
fisttp
mov
out
neg
mov
es
push
push
dec
aaa
ins
xor
dec
dec
mov
jl
cmp
dec
jb
in
data16
ds
(bad)
imul
xchg
jg
xlat
sbb
adc
mov
daa
das
add
push
inc
dec
push
pop
xchg
test
push
add
xchg
movs
sub
fwait
ret
cld
ins
cmp
push
hlt
xchg
adc
popf
pop
mov
in
push
nop
or
jecxz
push
inc
scas
mov
mov
repz
mov
neg
push
ins
add
fwait
inc
call
mov
and
lods
mov
add
jmp
je
fstp
add
cdq
cmp
jecxz
pop
nop
add
or
jo
sbb
mov
mov
shl
pop
clc
sub
sbb
nop
add
leave
jmp
lahf
inc
xchg
push
mov
std
fdiv
jecxz
xor
mov
in
fisub
cmp
fistp
sub
inc
mov
push
jne
arpl
mov
inc
jl
dec
in
push
cwde
cmp
push
mov
cmp
inc
or
gs
or
js
mov
wbinvd
cmp
jae
shr
xchg
mov
and
icebp
push
adc
arpl
(bad)
out
hlt
and
sub
xchg
outs
mov
sub
jne
ror
mov
xchg
mov
pushfw
ret
xchg
idiv
mov
mov
pop
cld
push
test
xchg
inc
sbb
pusha
cwde
(bad)
jb
pop
xor
mov
jae
loopne
mov
adc
cmp
inc
test
in
sbb
xor
jmp
int3
call
rol
add
add
dec
sbb
jecxz
ja
adc
ss
lods
pop
test
(bad)
sub
cmp
ds
push
lods
(bad)
stc
sbb
and
dec
xchg
mov
addr16
call
fcomp
aad
push
xchg
rcl
inc
in
fidiv
cmp
xchg
adc
pop
ffree
arpl
std
xchg
lods
in
test
push
or
ja
loope
stc
add
xor
adc
xlat
mov
imul
out
inc
fldcw
ror
inc
ja
inc
ret
pop
(bad)
push
sub
pop
adc
int
cmp
test
sub
repnz
(bad)
(bad)
rcr
std
aam
cmp
outs
inc
inc
and
sbb
js
aas
fcmovnb
fistp
ret
pop
jp
ds
adc
adc
(bad)
out
cli
(bad)
push
mov
xor
mov
fbld
(bad)
fcom
pop
pop
dec
cmp
popf
cmp
int
mov
enterw
lahf
add
das
pop
sbb
mov
cmp
mov
inc
ja
inc
sub
shl
ins
ret
inc
lds
lods
mov
les
jmp
imul
inc
in
mov
mov
or
xchg
mov
stos
sbb
and
in
cwde
add
bound
jge
inc
cmps
out
inc
fidivr
mov
xchg
xor
xchg
ficomp
inc
out
mov
dec
push
in
add
cmp
jb
fdiv
mov
(bad)
push
push
xchg
sbb
inc
push
test
fwait
stos
or
fsubr
shl
push
xor
adc
xor
adc
jbe
sbb
popa
adc
dec
sbb
sti
or
add
push
inc
nop
pushf
inc
fadd
(bad)
push
pop
adc
cmp
mov
jmp
jl
in
dec
push
sbb
push
in
add
stos
xor
lahf
xchg
mov
ret
lahf
push
fs
stos
and
xchg
pop
inc
push
jb
xor
pop
or
mov
pop
push
jecxz
mov
retf
xlat
hlt
scas
add
clc
or
mov
call
(bad)
mov
inc
xchg
pop
push
xor
nop
repz
add
adc
xor
lea
in
rcl
test
lods
inc
psubq
sub
fisubr
sbb
sbb
retf
jp
pop
and
call
push
push
sub
cdq
add
adc
das
movs
mov
mov
in
inc
mov
std
(bad)
mov
call
daa
xor
xor
jle
mov
pushf
addr16
mov
add
sub
test
and
lea
adc
clc
xor
fcmovu
in
or
outs
adc
inc
outs
ins
mov
sub
push
xchg
or
stos
mov
dec
popa
jne
repnz
fcomp
cdq
movs
iret
sub
and
shr
xchg
or
push
in
mov
cmp
out
out
push
jns
cmp
shl
xor
sub
dec
gs
inc
mov
stos
test
ja
shl
ss
and
cmp
hlt
mov
cld
xchg
shl
ss
aam
or
imul
sub
pop
xchg
push
daa
mov
cmp
jns
test
ins
jne
jmp
nop
inc
or
xchg
imul
fs
call
aaa
cmp
mov
imul
and
rol
sbb
out
in
or
ins
push
hlt
add
push
cs
movs
adc
vpunpcklqdq
mov
jge
rol
ret
dec
pop
cmps
xor
fdivr
ins
and
lahf
adc
inc
movs
ret
adc
rcr
ficom
imul
std
sub
push
adc
repnz
cmp
outs
test
fwait
shr
movs
fisub
ins
xor
jmp
mov
std
and
adc
xchg
stos
(bad)
jb
cmp
jge
adc
push
xchg
popf
jge
push
lods
jmp
mov
mov
xor
add
lods
sar
jmp
xchg
jae
lods
dec
cmp
jne
imul
mov
retf
add
xlat
fld
and
pop
pop
adc
inc
and
push
pushf
ret
mov
ret
adc
js
mov
pop
pop
fisub
cmc
retf
push
sub
lods
call
or
in
adc
pushw
(bad)
retf
dec
retf
ds
mov
les
ficomp
adc
dec
add
push
adc
add
pop
cld
sbb
pop
mov
int
(bad)
ins
ret
je
out
sbb
sahf
xor
(bad)
icebp
or
cmps
adc
cmp
icebp
stc
pop
jg
jo
cmp
mov
aaa
xchg
in
in
data16
cmp
outs
inc
and
mov
sub
cld
mul
rcr
popa
sub
push
fbstp
cmps
mov
cmp
ss
in
inc
mov
mov
sub
test
aam
add
mul
inc
fbstp
push
cmp
xor
add
jle
dec
loopne
retf
cmp
out
outs
and
jg
add
fcmovb
lahf
xchg
push
pop
inc
xor
add
std
mov
jmp
out
xchg
out
adc
sub
sti
hlt
bound
adc
mov
pop
stc
lds
je
arpl
shl
pusha
ins
and
jle
test
ins
test
cmp
add
and
jae
loopne
ret
pop
cs
cli
shl
addr16
fwait
js
push
jle
les
ja
or
cmp
xchg
(bad)
pop
cmp
adc
lock
in
adc
stc
shl
(bad)
fcomp
mov
jge
test
inc
xor
shr
call
push
ja
aad
push
pushf
jnp
and
jecxz
das
not
clc
add
jmp
movs
mov
add
jge
int
sbb
add
test
push
jg
test
ins
pop
xchg
inc
jae
push
pop
outs
mov
inc
and
test
cmp
fcmovnb
ins
mov
or
popf
test
out
inc
fisubr
aad
(bad)
(bad)
cld
mov
dec
mov
repnz
mov
outs
sbb
push
mov
stos
or
xchg
jno
dec
std
sti
sub
int3
pop
mov
inc
sub
mov
adc
sub
or
xchg
inc
xor
add
cs
fld
pop
in
cmp
inc
stos
xchg
ds
pop
mov
imul
sub
into
sub
clc
cmps
dec
mov
xchg
cmp
xor
add
and
xor
add
sbb
cmc
cdq
pop
mov
sub
xchg
call
mov
pop
adc
mov
and
nop
push
inc
xor
das
jmp
popf
fmulp
(bad)
add
push
sbb
test
dec
mov
jbe
mov
pushf
test
lahf
retf
pop
(bad)
mov
or
ins
add
adc
adc
sahf
arpl
adc
dec
inc
rcl
dec
jo
scas
cmp
jbe
(bad)
adc
call
(bad)
pop
mov
inc
test
test
fist
adc
test
dec
repz
sbb
loope
adc
xor
in
jle
or
adc
scas
mov
mov
or
sub
sbb
lahf
xchg
jmp
(bad)
das
scas
test
and
sub
outs
outs
push
dec
jnp
mov
add
aaa
ret
cmp
ins
out
adc
sar
jne
xor
or
test
arpl
sbb
push
stos
sbb
jno
test
xchg
shr
stc
adc
jg
(bad)
cmp
add
fnstcw
repz
push
sbb
xor
scas
into
rcl
(bad)
int
sbb
adc
adc
pusha
int
aaa
sbb
cmp
pop
push
test
xchg
fwait
sbb
cmp
outs
and
pop
push
jbe
fisub
imul
and
out
bound
adc
xchg
fsub
or
inc
push
pop
push
pop
sub
and
jl
xchg
bnd
push
cmc
xchg
adc
push
pop
mov
jae
push
pusha
or
hlt
or
arpl
mov
leave
add
sbb
inc
in
cwde
and
ins
mov
push
mov
arpl
stc
dec
shl
or
out
inc
dec
stos
cmps
dec
loope
fisttp
jbe
push
sbb
out
push
inc
jns
mov
pop
(bad)
in
add
not
mov
xchg
and
ss
rol
fwait
pop
xchg
xchg
and
movs
gs
xchg
sbb
rcr
inc
adc
cmps
retf
xlat
push
pop
mov
les
jl
data16
xchg
sbb
adc
in
jmp
(bad)
into
cdq
cdq
(bad)
mov
inc
adc
inc
mov
pop
inc
push
sbb
pop
cdq
mov
pop
fbld
xlat
sub
sbb
ret
fwait
mov
jmp
cmc
inc
pop
enter
sbb
cmp
and
loope
dec
imul
inc
mov
sbb
imul
add
(bad)
clc
lea
shl
jo
push
test
repnz
xor
xlat
push
sub
add
add
iret
xor
imul
mov
and
jp
cwde
mov
test
and
ret
in
fdivr
call
jb
sahf
jmp
mov
jmp
or
add
and
retf
push
or
or
aas
mov
xlat
pop
adc
jb
(bad)
out
aad
adc
jae
xor
sub
addr16
cmc
pop
imul
fst
xchg
sub
pcmpeqd
sbb
int
out
mov
mov
into
inc
(bad)
dec
sbb
into
sahf
jmp
pop
mov
daa
jp
ja
mov
scas
add
xchg
adc
sbb
jge
mov
xor
les
sbb
pop
sub
pushf
push
pop
retf
and
pop
xchg
aad
daa
outs
jge
sub
dec
fwait
push
jecxz
das
jecxz
jno
cmp
retf
jns
out
test
leave
add
sub
retf
and
push
pop
sbb
shl
xchg
mov
call
mov
xor
cmps
pop
add
mov
push
std
daa
mov
push
inc
outs
mov
add
fcom
(bad)
stos
dec
push
add
data16
cmps
add
aas
mov
mov
sub
mov
repnz
xchg
fsub
addr16
imul
leave
int3
or
cld
repz
fdiv
mov
push
xor
jge
stc
fild
aam
xchg
xor
and
inc
icebp
jge
xchg
or
mov
jg
jecxz
mov
mov
sbb
inc
movs
mov
retf
rcr
jne
gs
mov
pop
and
nop
or
pop
sti
or
mov
fsub
mov
jmp
in
xchg
mov
or
in
pop
mov
pop
movs
mov
sbb
dec
push
ret
pop
push
mov
js
stos
test
fild
push
sub
and
xchg
es
inc
add
aad
shl
call
repnz
cmps
arpl
adc
arpl
sub
cmp
xchg
loop
jo
enter
in
xor
jb
or
sbb
retf
pop
shr
movs
fnstsw
inc
jne
imul
dec
scas
jp
aad
mov
ins
sbb
call
mov
sub
add
or
jg
aaa
sbb
sub
jns
mov
jae
icebp
pushf
add
or
jmp
gs
ins
mov
sti
pushf
mov
mov
jo
mov
push
push
xchg
pop
xchg
test
sub
and
push
clc
fmul
cld
mov
int3
stos
aad
(bad)
fcomp
or
push
les
push
ret
lods
sbb
mov
add
es
test
movs
jae
imul
mov
push
out
cmp
xchg
clc
test
cmp
xchg
and
cld
mov
in
add
adc
lahf
stos
pop
movs
js
out
push
or
push
xchg
pop
pushf
sub
out
inc
fcom
js
pop
(bad)
aaa
data16
cmps
imul
adc
push
(bad)
ins
lea
test
shl
mov
mov
and
aaa
pop
movs
add
cmp
mov
cmp
xchg
jecxz
gs
test
ins
fidiv
and
jmp
cmp
daa
aaa
outs
push
cmps
loop
or
test
out
xchg
pop
jmp
xor
and
mov
lods
jecxz
mov
inc
or
fst
jmp
pushf
(bad)
icebp
(bad)
clc
xchg
outs
pop
lods
outs
in
mov
pop
xchg
xor
push
xlat
ss
test
aas
sub
(bad)
fisub
scas
xor
dec
nop
fld
sbb
xchg
cmp
and
(bad)
jge
fist
jg
loope
xor
mov
fcmovnu
add
mov
lds
pop
jmp
xlat
jle
iret
(bad)
xor
xchg
inc
pop
retf
add
(bad)
jbe
pop
setns
shl
jne
out
sub
out
cwde
or
fucom
fadd
xchg
(bad)
mov
imul
imul
aam
xchg
push
loopne
in
push
push
adc
xor
pop
inc
cmp
pushf
or
dec
rcr
inc
pop
mov
aas
inc
xchg
setb
shr
test
and
push
cmp
mov
add
cmp
xchg
mov
retf
retfw
dec
shl
icebp
ds
stos
popf
inc
popa
cs
xor
shl
mov
or
pusha
outs
in
jle
loop
dec
cli
mov
arpl
mov
xor
inc
cmp
cmp
clc
test
(bad)
fisubr
dec
pop
stos
dec
jo
xor
jmp
scas
ror
addr16
(bad)
int3
mov
or
adc
add
fcomp
lock
jp
ds
popf
scas
mov
loope
loopne
inc
addr16
stos
mov
mov
push
mov
mov
mov
adc
mov
sbb
fadd
push
rcl
mov
inc
xor
sbb
pusha
ret
jl
addr16
imul
hlt
ds
movs
xchg
stos
out
sub
sbb
pop
loop
or
aas
lock
fsub
ret
push
push
adc
fbstp
cmp
push
mov
push
sbb
sub
mov
repz
adc
stos
mov
int3
fistp
jns
sbb
sub
je
mov
adc
div
mov
stos
push
adc
push
(bad)
fdivr
xor
xor
pop
lahf
sbb
fcmovb
push
ret
inc
xchg
loope
movs
dec
inc
or
icebp
dec
add
mov
push
jno
aaa
leave
js
add
popa
pop
lods
out
xor
in
dec
mov
inc
sbb
dec
cmp
loopne
xchg
mov
adc
ror
dec
mov
push
dec
mov
add
out
mov
cmp
sbb
push
push
jne
sbb
mov
cmc
mov
fsubr
fcmovb
imul
into
mov
mov
adc
sbb
in
pop
add
adc
ror
xchg
or
and
jle
or
(bad)
call
mov
cdq
add
cdq
xor
mov
inc
scas
(bad)
mov
jns
aam
mov
xchg
jo
jo
sbb
xor
ja
int
test
cmps
push
jle
dec
arpl
shr
sub
push
stos
enter
adc
rol
sbb
pushf
or
ins
(bad)
outs
inc
adc
dec
pusha
cmp
ds
pop
js
loop
sub
inc
and
xor
inc
push
popa
addr16
and
fistp
das
fild
ror
icebp
(bad)
rol
jno
xor
popa
rcl
inc
dec
inc
mov
les
scas
pop
sbb
xchg
jne
adc
mov
(bad)
xlat
pusha
int3
or
pop
xor
or
jmp
mov
cmp
sbb
test
mov
js
adc
xlat
mov
retf
lahf
xor
xor
push
adc
int
sbb
shl
inc
nop
ds
push
fwait
pop
popf
mov
pop
cmp
jecxz
jecxz
addr16
jmp
pusha
in
ret
push
inc
dec
daa
sbb
popf
jg
jp
adc
fldenv
out
sbb
rcl
add
jo
ret
out
into
sar
lock
imul
clc
jae
and
pop
cmp
jle
stos
pop
ret
cmp
push
xchg
push
adc
push
in
mov
js
jns
cmp
cmps
cmp
push
sbb
fidiv
xor
add
jb
inc
or
cmp
push
bound
and
call
or
sti
and
test
fcmovne
inc
add
je
and
push
lahf
pop
fdivp
mov
mov
add
adc
or
lahf
data16
mov
xor
jecxz
adc
hlt
test
ins
dec
add
retf
jae
mov
cmp
not
cmp
dec
xor
jg
mov
jae
lds
and
mov
and
mov
mov
cmp
xchg
lds
and
std
jmp
scas
and
imul
in
xchg
imul
mov
jno
add
jno
xchg
shl
inc
std
ret
sbb
out
adc
xor
lods
mov
xor
sub
inc
push
pushf
and
es
jecxz
xchg
add
jmp
sbb
fmul
cmc
xchg
pop
mov
add
jp
ja
jl
scas
cld
leave
js
ja
ror
jns
inc
or
in
or
xchg
lods
inc
adc
aam
inc
sub
dec
jle
pop
adc
jmp
je
add
mov
(bad)
or
dec
pop
outs
adc
xchg
daa
inc
sub
mov
pop
cwde
push
mov
fild
fdiv
into
rcl
nop
test
pop
jge
mov
out
pop
(bad)
(bad)
(bad)
retf
shr
pop
push
xchg
gs
fs
int3
jmp
fsubr
push
mov
and
add
jbe
cli
test
lahf
mov
nop
je
fisttp
cli
push
push
in
retf
icebp
retf
scas
push
fldcw
cmp
mov
jb
xchg
mov
(bad)
loop
outs
mov
xor
mov
mov
mov
sub
test
inc
gs
not
loope
xchg
(bad)
jmp
(bad)
lea
and
imul
retf
or
addr16
les
std
pop
addr16
jae
cmovno
mov
xchg
rol
cdq
adc
sbb
ret
or
mov
pop
add
clts
aaa
jg
movs
pusha
cmps
out
neg
push
dec
test
in
sbb
stos
xchg
sti
and
ins
stos
loopne
dec
mov
imul
dec
add
dec
jecxz
cdq
test
ss
xor
in
add
cmps
xchg
cmp
imul
and
sbb
adc
and
ds
sti
adc
enter
mov
sbb
cmp
call
clc
je
ins
pmullw
cmp
inc
ds
repz
xor
outs
cmp
xor
push
jmp
fwait
test
fstp
int
outs
or
test
pop
sub
inc
xchg
mov
sbb
sti
iret
pop
rcr
out
pop
int3
mov
jecxz
mov
mov
jbe
sub
pop
cwde
or
retf
xchg
imul
xlat
sub
(bad)
sub
xor
jg
mov
jnp
in
mov
cmc
or
retf
sbb
mov
xacquire
lods
sub
ret
rol
jl
sub
mov
hlt
fcom
inc
xor
mov
mov
add
(bad)
cld
rcl
xchg
mov
out
or
xor
adc
xchg
mov
pop
xchg
cdq
mov
xor
ret
dec
jl
loope
mov
and
jne
repz
mov
dec
or
add
jne
aas
pop
adc
movs
pop
fld
movs
test
test
test
push
stos
mov
add
jmp
mov
outs
jg
nop
in
icebp
cmps
retf
clc
and
outs
gs
test
outs
mov
repnz
or
jle
xchg
pop
jno
xor
stc
enter
xchg
(bad)
(bad)
or
mov
mov
jb
bound
loope
xor
(bad)
in
pop
jo
inc
adc
cli
cdq
add
mov
jg
or
pop
or
and
inc
sub
sbb
mov
push
sub
shr
cmp
cmps
sbb
jmp
adc
pop
adc
test
cmp
hlt
cmp
pop
xor
xchg
jecxz
sbb
jmp
jo
mov
cmp
imul
jmp
jecxz
addr16
out
retf
inc
push
repz
shl
(bad)
(bad)
sbb
jo
jmp
xchg
mov
ins
pop
lahf
add
push
push
or
sbb
fistp
inc
sub
jl
sub
cmp
cmp
jo
(bad)
push
sahf
fwait
loop
(bad)
xchg
pop
push
add
retf
jb
and
arpl
rcr
cmp
or
scas
xor
sbb
inc
jae
ja
(bad)
sub
xchg
push
stc
pop
movs
mov
or
lock
ret
mov
jbe
popa
add
mov
shl
xchg
push
and
lahf
in
push
jo
ds
pop
ja
push
xor
xchg
push
jnp
cs
stos
test
dec
mov
sar
xor
out
mov
dec
adc
dec
dec
jp
fistp
int3
add
pop
xchg
mov
or
inc
push
test
fprem1
data16
adc
data16
fisubr
je
adc
mov
nop
mov
ficomp
xchg
jmp
push
ficomp
jb
addr16
aam
int
retf
xchg
test
inc
arpl
xor
ror
push
test
stc
xchg
xchg
adc
push
cmp
xchg
cs
or
adc
lods
jl
(bad)
ss
inc
cli
fwait
adc
das
mov
adc
add
imul
sub
retf
mov
push
pop
mov
cmp
push
rcr
add
fsubr
inc
in
retf
shl
lahf
sub
jge
enter
in
add
(bad)
popw
(bad)
loopne
jp
add
xchg
fsub
and
stos
and
shr
push
pushf
push
xor
(bad)
cmp
jmp
inc
fimul
mov
outs
(bad)
(bad)
and
dec
mov
or
pushf
and
ret
movs
push
lahf
mov
cmps
mov
dec
in
xor
xor
sub
sar
ss
stos
pop
mov
pushf
cmp
sub
ja
shl
mov
mov
and
adc
jmp
retf
fadd
jmp
(bad)
iret
sub
inc
addr16
mov
shl
jne
pop
jl
add
aas
call
push
pop
cmc
cmc
scas
adc
jmp
mov
mov
sub
adc
stos
ss
sbb
push
pop
arpl
popfw
inc
mov
inc
ret
or
pop
(bad)
or
icebp
stc
xchg
mov
js
(bad)
jo
cmp
jnp
gs
adc
dec
(bad)
adc
inc
shl
xor
cmp
cmc
mov
xor
pop
push
lods
int3
call
xchg
das
sbb
or
popf
jp
pop
(bad)
js
mov
imul
in
out
xchg
sub
call
mov
xor
mov
adc
retf
inc
mov
xor
test
cmp
sub
add
leave
mov
mov
xchg
daa
loopne
sub
arpl
sbb
jo
sbb
xchg
dec
cmp
fsub
xchg
cmp
pusha
inc
fwait
cmc
jl
jns
unpckhps
cmps
jae
ror
mov
cmp
jne
dec
cld
xchg
and
(bad)
mov
jae
dec
jo
and
cmp
xchg
add
ss
test
or
icebp
(bad)
jns
mov
xor
call
stc
test
push
sahf
sub
and
imul
gs
mov
ja
pop
pop
test
inc
bnd
lods
add
inc
ins
rol
in
push
test
adc
jp
movs
inc
lahf
pop
retf
sbb
int
lea
xor
and
mov
aam
push
inc
out
and
add
fnsave
mov
mov
adc
out
cmp
cdq
xchg
dec
mov
xchg
mov
loope
xor
popf
xchg
and
inc
xor
out
fistp
shl
push
mov
cwde
cmp
repz
jb
xchg
add
sub
and
mov
(bad)
cdq
test
shr
sub
in
pop
add
mov
jbe
xchg
adc
loopne
cmp
imul
fs
aaa
ds
xchg
xor
scas
lods
mul
movd
mov
dec
stos
movs
fwait
movs
mov
push
mov
mov
xchg
push
and
lahf
fs
(bad)
popa
pop
pusha
and
pop
and
xchg
js
cwde
xor
mov
pop
mov
jnp
rcr
movs
inc
mov
pop
aam
cs
(bad)
ficom
aaa
enter
lds
or
cli
cdq
imul
mov
adc
mov
and
test
por
mov
pop
push
pop
add
ficom
xchg
mov
hlt
push
push
cmps
cmc
not
lea
retf
cwde
shr
xacquire
xchg
shl
mov
out
data16
lods
outs
imul
sbb
xchg
outs
in
mov
ins
adc
div
into
inc
pop
das
mov
mov
scas
or
fadd
sub
sbb
clc
sar
xchg
xchg
cmp
jmp
mov
or
jbe
push
push
inc
shl
shr
repz
cmp
test
push
ss
ins
push
mov
mov
call
inc
pushf
dec
sub
out
jp
xor
fs
outs
mov
cmps
test
push
xor
sahf
fs
pop
sub
sar
test
stos
pop
fxch
imul
xchg
sbb
aas
std
mov
dec
mov
inc
popa
ret
popf
data16
daa
push
loope
mov
jle
xchg
add
(bad)
fxch
push
sub
sbb
jns
and
push
movs
dec
mov
fimul
cmp
dec
mov
fstp
lahf
test
jae
(bad)
adc
cmps
jae
jge
xor
jne
push
cmc
les
and
push
(bad)
cmp
call
dec
mov
scas
sbb
cmp
dec
gs
and
mov
loope
mov
(bad)
repz
mov
retf
cmp
mov
popf
pop
lds
rcl
aam
repnz
pop
sbb
adc
js
out
movsx
imul
xor
mov
or
cwde
xacquire
lock
mov
push
sub
out
inc
add
mov
push
adc
mov
mov
push
push
out
jns
jmp
imul
xor
test
bound
push
test
jns
(bad)
cwde
mov
add
xchg
fs
daa
data16
lods
lods
icebp
ja
xchg
fs
cmp
loopne
aaa
out
jl
sahf
push
xchg
mov
in
loop
xchg
adc
xchg
mov
fsubr
(bad)
out
sub
adc
das
fstp
pop
push
dec
dec
arpl
out
pop
imul
add
ja
pop
push
mov
aad
mov
pop
icebp
cld
leave
and
or
aaa
or
or
add
mov
dec
dec
stos
sbb
xchg
cmps
adc
pop
sti
call
pop
pop
(bad)
cmp
div
sub
adc
and
cmp
adc
loop
icebp
sbb
xor
cmp
jl
pop
or
or
test
test
and
fld
jmp
test
ret
aaa
xor
inc
sahf
addr16
movs
cs
mul
in
pop
cmp
inc
enter
in
aam
aas
jg
das
pop
outs
xlat
iret
jecxz
xchg
repz
imul
add
out
cdq
inc
mov
retf
xchg
addr16
ds
icebp
ins
sti
movs
imul
cmc
(bad)
mov
jmp
or
push
xor
cld
jmp
jp
or
push
jle
cld
mov
add
push
add
and
xchg
shr
imul
xchg
leave
pop
xchg
fwait
sbb
shr
and
fist
sub
jo
les
loope
cli
dec
pop
out
movs
pop
jb
xchg
scas
div
push
in
nop
inc
xlat
sbb
imul
pop
loop
cmps
xor
outs
fidiv
cs
mov
aad
cdq
sbb
imul
in
int
(bad)
jmp
stc
std
pop
push
movs
mov
popa
imul
test
mov
mov
movhps
(bad)
mov
in
push
stos
repz
imul
mov
int
pop
fs
movs
test
jns
stos
pop
ret
mov
pop
mov
test
sub
repnz
js
les
repnz
or
sbb
adc
or
sbb
jb
pop
xchg
retf
sbb
adc
sub
sub
inc
push
in
cmp
cli
pop
mov
aam
and
cmp
pop
aas
mov
mov
dec
(bad)
into
jl
jne
idiv
clc
int
into
popf
pop
sbb
(bad)
in
xor
xchg
and
jp
adc
pop
pop
mov
jge
retf
fidiv
jb
sbb
mov
(bad)
jecxz
fldcw
loopne
stos
sbb
repnz
jmp
adc
cmp
test
stos
mov
mov
sub
popa
pop
mov
dec
push
dec
push
cli
push
lock
pop
not
ins
and
imul
lods
pop
lahf
bound
mov
push
add
mov
inc
cdq
inc
pop
pop
call
adc
sub
push
cmp
adc
sbb
push
loopne
xor
add
inc
in
inc
inc
sub
dec
push
fsub
jae
add
xchg
sub
ret
fld
or
adc
jae
add
mov
lods
not
xor
adc
sbb
pop
ja
movs
push
call
retf
add
nop
xchg
pop
clc
push
push
jle
push
test
xor
jb
mov
ret
js
mov
sub
sahf
jmp
cmp
xchg
dec
mov
repz
(bad)
cmc
mov
test
pusha
es
pop
lahf
rcl
stos
stos
xchg
idiv
mov
xor
daa
fbstp
ins
mov
jnp
mov
and
add
test
cwde
push
addr16
loope
add
xchg
cmp
pop
add
fwait
mov
sti
nop
into
sahf
dec
test
add
pop
mov
xchg
sti
lock
cmps
lahf
xchg
(bad)
xchg
popa
scas
pop
jmp
cdq
cmps
in
adc
sub
jbe
lock
int3
inc
push
jg
inc
adc
test
les
cwde
(bad)
xlat
xchg
jmp
dec
pop
adc
dec
lahf
xchg
rcr
gs
and
call
xchg
cmp
mov
jle
sub
sar
cld
(bad)
or
or
add
adc
jg
popa
fadd
scas
lods
ins
pop
pop
repz
test
je
imul
and
add
adc
mov
mov
fidiv
sbb
(bad)
sbb
push
ror
inc
jnp
ds
mov
push
test
xchg
das
sub
imul
mov
pusha
inc
pop
sub
and
ss
in
cs
and
lods
gs
jg
cmp
setbe
cs
and
movs
movs
(bad)
mov
sub
push
(bad)
loope
stos
or
mov
loope
push
dec
jp
cmp
popf
clc
cwde
cmps
in
and
retf
call
(bad)
mov
dec
mov
fdivr
push
or
jmp
sbb
push
add
(bad)
ins
fmul
xchg
dec
lea
(bad)
ficom
ins
cmp
adc
xchg
or
sub
aad
pusha
cmp
xchg
(bad)
mov
xchg
dec
push
mov
pop
test
(bad)
(bad)
into
inc
icebp
enter
movs
sbb
adc
movs
pop
adc
push
rol
lea
pop
jno
les
pop
mov
mov
inc
movs
inc
mov
ret
jecxz
jmp
mov
xchg
cmp
pop
pushf
mov
mov
pop
jp
xor
mov
pop
or
data16
clc
fistp
sub
push
xchg
fld
or
add
stc
ficomp
in
sbb
dec
bound
shr
dec
inc
hlt
mov
pushf
and
push
jnp
xchg
push
pop
pop
jno
adc
rcr
cmps
pusha
ss
loop
mov
add
mov
lock
into
push
push
jle
fcmovb
xor
xchg
pop
sbb
dec
push
sbb
xor
cmp
aam
xor
test
adc
jmp
jmp
adc
push
das
js
ss
cmps
fdiv
push
jmp
pop
fs
xchg
icebp
cwde
jmp
cmp
arpl
cdq
movs
stos
dec
int3
cmp
in
fbstp
clc
or
comiss
push
xlat
cmp
stos
gs
push
ja
shl
jp
mov
adc
out
mov
pop
mov
fsubp
adc
gs
scas
jo
fs
add
xchg
cmp
bound
push
mov
enter
cmps
scas
cli
iret
ins
mov
ja
into
movs
dec
lods
adc
fsubrp
xchg
call
pop
popa
mov
xchg
nop
jle
mov
dec
push
sbb
xor
in
xor
rcl
xlat
xlat
xor
pusha
xchg
bound
dec
dec
cmps
cmp
leave
cmp
gs
inc
jp
xor
pop
lea
imul
hlt
dec
dec
(bad)
pop
mov
add
pop
into
inc
dec
test
int3
out
aam
adc
push
movs
sub
repnz
ret
jecxz
push
mov
pop
loope
loope
ret
imul
pusha
das
(bad)
test
pusha
ins
adc
jecxz
mov
inc
mov
sbb
rcr
mov
cli
lock
sbb
push
xor
cmp
adc
fcomi
adc
inc
or
inc
adc
sbb
jecxz
cmps
inc
lods
icebp
int
xchg
loopne
(bad)
pop
in
push
add
and
mov
icebp
movs
mov
shr
adc
jl
mov
les
repz
and
fwait
loop
push
xchg
and
jge
mov
jg
fldcw
outs
hlt
mov
cmp
mov
pop
das
imul
mov
cmp
inc
ins
cmp
jecxz
push
aaa
shl
mov
fwait
aad
cdq
clc
lods
xchg
xchg
cmp
inc
outs
pop
dec
test
or
(bad)
pop
xchg
(bad)
les
jb
push
xor
xchg
call
push
les
hlt
pusha
mov
mov
or
and
mov
movs
jae
ret
add
nop
outs
jo
or
enter
popa
and
rcl
out
iret
fscale
mov
hlt
sbb
test
add
sbb
(bad)
loopne
loopne
fstp
ins
xchg
into
es
pushf
cmp
adc
xor
int3
retf
dec
push
popa
jle
test
les
push
les
pop
push
mov
inc
push
jno
sbb
push
arpl
div
sub
adc
cmps
sbb
jmp
pop
cmps
jns
jl
cmp
cmps
cmp
sub
rol
sub
loope
and
or
popa
and
add
dec
xchg
and
xchg
push
(bad)
lea
loopne
das
xor
jle
ins
ret
ja
ja
inc
or
jb
les
jge
cmps
jns
(bad)
sbb
add
and
mov
sbb
int
xchg
and
jns
xchg
ret
into
push
call
adc
retf
test
pop
leave
adc
inc
ror
in
lea
jmp
xchg
popf
mov
push
stos
(bad)
xchg
out
ss
lods
jo
inc
xchg
ds
test
adc
mov
stc
ins
mov
mov
loope
sbb
fwait
push
inc
cmps
(bad)
(bad)
cmp
mov
xchg
mov
sub
adc
call
jg
sub
movs
xor
cmps
mov
mov
iret
xchg
jmp
test
(bad)
call
xchg
into
data16
arpl
push
nop
dec
aam
dec
pop
mov
mov
cli
lock
sub
dec
ins
mov
popf
cld
inc
cmp
and
and
cdq
jg
ins
daa
mov
adc
aas
rol
popf
add
ja
push
dec
nop
pop
adc
mov
and
test
iret
cmp
cdq
mov
inc
sar
xchg
add
cmc
lods
push
gs
dec
test
sub
sbb
or
dec
inc
aam
sub
stos
nop
in
movs
pop
or
sbb
mov
ja
movs
jb
cli
int
adc
sahf
(bad)
dec
mov
in
jb
iret
jmp
fld
mov
sti
cdq
ficom
out
push
xchg
not
fsubr
(bad)
pop
(bad)
adc
and
add
add
mov
or
aad
cld
popa
movs
pop
bound
ja
inc
(bad)
mov
movd
(bad)
in
pushf
jmp
test
inc
mov
mov
ja
(bad)
push
js
fsub
mov
aas
mov
cmp
push
mov
add
and
retf
push
lahf
rol
clc
xor
and
push
mov
leave
pusha
fdiv
push
inc
push
mov
sbb
jno
pop
fbld
mov
(bad)
and
or
xor
out
ds
adc
mov
in
(bad)
sbb
push
jb
shl
shl
pop
push
(bad)
cmp
outs
cli
sub
or
fstp
pop
mov
and
push
retf
dec
pushf
jecxz
int3
dec
push
repnz
jnp
in
gs
xchg
inc
pop
pop
push
mov
or
bound
inc
jnp
xchg
jecxz
fcom
mov
and
pusha
lahf
nop
xchg
sti
sub
add
stos
outs
loopne
popf
ror
sahf
jl
jmp
inc
and
test
pop
enter
outs
pop
(bad)
(bad)
sti
das
hlt
mov
pushf
aaa
and
mov
aaa
or
dec
nop
shl
push
pop
xchg
dec
movs
rcl
retf
xlat
jo
cmp
xchg
aaa
sbb
mov
cs
std
xchg
test
and
repnz
cmps
and
push
sbb
fisub
or
pop
lds
sub
mov
mov
pushw
dec
sar
(bad)
xchg
cld
xchg
jno
cli
daa
pop
or
jle
pmuludq
cmp
call
adc
or
pop
cmp
jns
(bad)
jmp
cwde
cli
loop
test
ds
aam
add
or
push
sbb
into
out
sub
xchg
jle
mov
jmp
cmp
inc
pop
mov
ds
xor
cmp
dec
inc
push
inc
sub
(bad)
mov
mov
rcr
xchg
sub
sbb
iret
mov
enter
xacquire
jno
or
int
loopne
xchg
adc
push
lods
mov
clc
inc
pop
iret
xor
sti
sbb
mov
pop
sub
mov
mov
stos
xlat
add
jb
push
sbb
mov
cs
cmps
fld
add
(bad)
into
jmp
or
cmp
add
not
pusha
mov
and
inc
in
xor
shr
aam
push
push
jecxz
repnz
scas
mov
push
ins
div
add
nop
mov
jbe
pop
int
push
fidiv
cdq
add
mov
adc
push
lea
std
mov
xlat
div
push
cmp
scas
outs
inc
cmps
in
outs
addr16
mov
jne
stc
fadd
sbb
sub
in
mov
cmp
std
jb
jecxz
sbb
scas
xchg
and
clc
retf
adc
sti
sbb
cmc
dec
loop
inc
icebp
cmp
rcr
push
movs
popa
cmp
push
pop
retf
push
mov
mov
inc
pop
aam
pop
pushf
cwde
sub
or
sbb
inc
in
pop
mov
xor
jge
movs
sub
mov
mov
dec
stc
lock
adc
mov
pop
aam
loope
push
mov
shl
movs
and
movs
lahf
enter
dec
inc
jo
popf
retf
js
cdq
jnp
shl
add
mov
pop
push
in
mov
dec
daa
xchg
xchg
and
imul
(bad)
push
inc
frstor
adc
aad
sti
clc
imul
xchg
das
in
scas
mov
std
jecxz
cmp
in
mov
scas
xchg
dec
out
or
push
mov
fcomp
xchg
movs
or
mov
push
mov
xor
push
call
imul
ins
popa
stos
adc
xor
xchg
cmp
pop
mov
test
mov
pop
shl
dec
add
movs
mov
movs
xor
mov
ds
sub
loope
xchg
xor
addr16
pop
lahf
repnz
sub
outs
mov
dec
mov
and
fs
and
mov
adc
popf
cli
call
xchg
adc
cld
fdiv
fadd
pop
ins
dec
pop
sbb
mov
aad
fdiv
scas
pushf
dec
ret
ret
mov
xor
xchg
adc
pop
into
mov
ss
mov
cli
sbb
retf
mov
cld
fs
inc
sbb
mov
push
and
sub
outs
cli
dec
mov
(bad)
push
dec
ror
or
pop
iret
out
jo
shl
or
movs
push
xchg
cs
aaa
cdq
addr16
push
push
mov
pop
imul
jl
and
pop
mov
aam
ud1
mov
adc
adc
ss
in
push
dec
aas
enter
enter
int
lea
in
ja
jno
mov
push
pop
push
imul
xor
fwait
mov
mov
ss
addr16
and
cmp
aaa
ret
sub
outs
xchg
pop
stos
imul
jle
out
stos
(bad)
dec
shl
jno
xor
pop
jnp
jecxz
das
push
(bad)
xor
mov
into
bound
movs
inc
call
loop
mov
aam
jo
mov
das
cmps
jne
(bad)
addr16
int3
sbb
or
add
mov
inc
in
pop
rcr
xchg
or
pusha
(bad)
jae
pop
mov
jo
inc
mov
inc
cmp
jb
sbb
mov
mov
nop
mov
sbb
lods
pop
pop
icebp
push
movs
cmps
push
loopne
sub
xchg
mov
and
pusha
imul
(bad)
bound
mov
add
cmp
mov
adc
pop
aas
mov
mov
loop
inc
xor
fstp
sub
nop
push
mov
jg
ins
mov
mov
das
dec
jno
push
mov
fucomp
std
xor
aad
dec
xchg
cmp
xchg
mov
xor
retf
ins
fcomp
sar
pop
ins
pop
popa
adc
jno
mov
stc
das
xor
rol
(bad)
jns
adc
adc
jg
out
call
fst
sbb
std
xchg
es
mov
dec
xchg
or
icebp
and
mov
dec
and
sub
push
repnz
cmp
push
jb
icebp
sub
sti
fidiv
cld
add
iret
pop
fucomp
jae
movs
cmp
shl
dec
and
call
clc
sahf
sub
and
test
dec
jle
mov
shr
mov
jmp
ficomp
adc
adc
push
ins
mov
mov
in
cli
xchg
and
xor
and
push
hlt
sub
sahf
bound
aad
inc
aas
lea
lods
push
or
xchg
push
aaa
and
cli
jne
arpl
xor
test
add
and
mov
aaa
fdiv
push
out
rcl
adc
cld
je
xchg
mov
stc
jge
or
das
mov
sti
ins
ins
cmp
das
dec
pushf
cwde
shl
cmc
loopne
(bad)
adc
imul
lods
js
mov
push
jmp
test
inc
std
adc
mov
jl
and
mov
sub
loop
xchg
rcr
enter
xor
push
out
jp
sbb
cmp
xchg
sbb
or
xchg
arpl
sub
sub
test
push
cmp
mov
adc
push
mov
sar
lahf
in
popf
or
pop
cs
lods
adc
jmp
fnstcw
cmp
call
add
pop
rcr
dec
mov
adc
mov
movs
call
fcomp
cmc
xor
aas
(bad)
(bad)
jmp
jp
test
push
aaa
shr
mov
mov
pop
call
js
mov
pop
cwde
inc
std
mov
aas
int3
and
jmp
jge
cmp
inc
dec
cdq
or
xor
push
cdq
in
fcomip
test
mov
stc
add
cmp
jp
dec
sub
xor
jno
sahf
or
loopne
mov
cwde
inc
inc
(bad)
mov
and
mov
popf
dec
and
es
stos
sar
lods
cdq
mov
jb
call
in
mov
xor
adc
or
call
sbb
or
fldcw
and
pop
enter
add
lds
fs
nop
push
or
iret
pop
lock
sbb
sub
movs
cdq
xor
jecxz
fcmovbe
neg
mov
pop
inc
jmp
test
nop
mov
add
addr16
icebp
add
fsub
mov
pop
ret
test
(bad)
cmp
jmp
out
das
mov
jmp
dec
rcr
test
push
popa
pushf
movs
sub
pop
push
arpl
jg
test
movs
pop
cmp
add
mov
adc
cld
lock
gs
jno
mov
mov
retf
call
test
jns
test
out
and
sbb
push
ror
(bad)
test
cmp
push
pop
dec
sub
fsub
or
(bad)
cmc
or
not
(bad)
adc
dec
scas
cmp
sbb
pusha
loope
ret
push
mov
mov
xor
sbb
jne
cli
dec
sahf
pushf
push
test
test
test
jle
sub
sub
hlt
mov
cmp
jmp
add
sbb
pop
icebp
mov
mov
mov
dec
xor
data16
mov
jecxz
fld
daa
xor
ss
sbb
cmp
dec
cmps
aam
or
xor
mov
mov
adc
sub
je
xor
push
pop
rcr
ja
push
pop
cmp
fst
cwde
call
pop
cld
sbb
push
push
cs
pop
fcmovb
ja
aad
or
cmp
cmp
and
adc
out
cmp
cs
ss
into
sti
sub
out
or
das
jle
jnp
sbb
push
pop
mov
pop
aaa
mov
ins
loop
aaa
cmp
and
out
push
into
jmp
xchg
sub
mov
sbb
popf
fsubr
cmp
out
push
xchg
add
es
outs
test
mov
sbb
add
enter
daa
push
xor
xor
test
xchg
jecxz
sub
stos
pop
shl
pop
mov
jne
xchg
jno
ret
cmp
mov
xchg
xchg
push
mov
pushf
or
or
adc
push
cwde
call
mov
icebp
push
mov
sub
inc
jmp
mov
pop
or
outs
or
xor
jle
rcr
mov
mov
mov
xchg
jge
sar
dec
ins
add
stc
xlat
std
aam
hlt
vaddps
(bad)
xor
push
cmc
push
and
mov
xchg
cwde
retf
in
js
xchg
mov
adc
sub
outs
xor
dec
pop
cmp
cld
in
shl
inc
jg
dec
push
cdq
test
mov
xlat
mov
xchg
xlat
arpl
jnp
mov
in
pop
loopne
rol
push
cmc
add
mov
pop
pop
out
sbb
arpl
ror
and
mov
sahf
popf
cmps
test
ret
or
mov
js
cdq
js
bound
cmps
fisubr
scas
not
mov
jno
sahf
mov
mov
push
dec
mov
popa
movs
pop
imul
loop
movs
sbb
add
clc
sbb
out
mov
outs
shl
or
jb
mov
jae
mov
lock
mov
dec
in
(bad)
xchg
cmps
fmulp
fnstsw
inc
inc
fnstcw
xlat
and
xchg
inc
outs
add
call
shl
int3
in
pop
cld
dec
nop
push
and
int3
mov
cmp
adc
sub
in
push
mov
mov
or
lods
inc
cmp
adc
in
cmps
jp
cmp
iret
in
imul
je
ins
adc
adc
leave
mov
les
mov
sar
cmps
push
outs
fucom
or
clc
or
sbb
adc
inc
xlat
add
add
mov
mov
sbb
and
rcl
pop
std
xor
movs
int3
pop
ja
sub
(bad)
dec
mov
push
jae
cmp
xlat
lahf
shl
shl
dec
call
mov
lds
test
adc
xor
inc
xor
sahf
out
mov
push
shr
mov
jmp
inc
jno
js
(bad)
fisttp
mov
vzeroupper
sub
push
test
cmps
push
jbe
xor
xor
test
cmp
jns
inc
push
or
and
push
inc
inc
in
icebp
jno
cmp
push
int
dec
sti
scas
rcr
jae
pop
sbb
aad
shl
mov
lahf
jl
pop
sbb
jmp
or
les
push
push
stos
xchg
push
scas
shl
inc
out
dec
cmc
pop
xchg
stc
test
and
sub
inc
or
das
repnz
sub
mov
dec
les
inc
inc
or
push
lods
cwde
jbe
fimul
mov
mov
scas
jle
jp
ss
cmp
mov
sbb
int
test
imul
jno
arpl
cs
jnp
mov
fdiv
xlat
or
xor
(bad)
add
push
ins
les
popf
(bad)
xchg
mov
repnz
sti
pop
in
mov
jne
nop
inc
stos
cmp
pop
int
mov
mov
punpckhwd
xor
dec
jno
and
iret
jmp
and
ss
sbb
pop
xor
mov
scas
mov
lea
xor
mov
sbb
xchg
test
sbb
fcom
cmp
ud0
jge
sbb
fstp
aam
jns
xchg
cmp
add
repz
sbb
jo
pop
push
sub
clc
mov
mov
pop
rol
jne
stos
lods
or
inc
xor
inc
xor
sar
pop
jge
loop
adc
push
fs
or
test
and
repz
xchg
sub
icebp
nop
pop
fdivr
push
fiadd
shr
push
sub
outs
call
cmc
dec
pop
push
push
(bad)
push
ss
lods
pop
adc
ror
popa
(bad)
(bad)
push
push
gs
repnz
add
dec
sub
aad
shl
xor
mov
stc
or
sub
jl
clc
xor
push
mov
fld
in
arpl
jmp
std
sar
out
mov
stc
nop
pop
fmul
sti
jle
mov
xor
xchg
add
(bad)
add
pushf
(bad)
fwait
jae
push
aam
sahf
push
push
cmp
(bad)
test
mov
dec
test
inc
pop
sub
pop
mov
cmp
outs
call
or
outs
mov
adc
cwde
(bad)
cmp
inc
cdq
icebp
sbb
cld
sbb
rol
xchg
jbe
sti
mov
neg
ds
add
icebp
(bad)
fld
dec
xchg
icebp
imul
push
sub
(bad)
jle
pop
aas
aas
mov
call
pop
mov
imul
sub
imul
mov
jne
imul
sahf
xor
cli
iret
dec
mov
inc
push
jo
ins
addr16
push
xchg
sahf
jae
sbb
push
movs
retf
dec
mov
sti
fild
js
cdq
push
add
mov
xchg
pusha
out
popa
inc
(bad)
fiadd
mov
(bad)
push
or
push
sar
lar
inc
lock
inc
fs
movs
push
jne
ss
movs
repnz
enter
mov
popa
dec
inc
jle
pop
cmp
xlat
adc
rcl
mov
pop
icebp
mov
add
shl
call
mov
mov
and
cmps
adc
lea
test
sub
stc
sbb
bound
mov
loope
stos
add
mov
push
repz
dec
inc
dec
xor
fimul
mov
pop
xchg
adc
mov
pop
dec
jle
lahf
pop
xchg
cmp
test
adc
jnp
stos
xor
nop
sub
pminsw
loop
test
repnz
jo
iret
pop
push
xor
jmp
aaa
mov
sub
add
out
pop
jmp
adc
leave
div
and
adc
(bad)
push
or
and
out
mov
push
inc
inc
xor
adc
ror
popf
cmp
xchg
movs
out
pop
jae
pop
xchg
and
loop
ins
adc
inc
jne
xchg
(bad)
sub
mov
push
push
xor
push
scas
sar
sar
bound
jmp
ror
sub
pop
nop
mov
ficom
test
in
pop
inc
jmp
das
xor
xchg
mov
inc
add
inc
or
daa
fadd
adc
pop
jmp
lods
jnp
ins
jnp
lods
sbb
mov
scas
push
xor
pop
mov
(bad)
sbb
xchg
mov
add
in
inc
data16
sub
popa
and
jg
test
test
mov
jns
inc
cli
repnz
sbb
clc
loopne
cld
clc
pop
add
mov
adc
pop
add
cmp
nop
push
cmc
(bad)
adc
in
xchg
hlt
inc
add
xchg
push
mov
pop
iret
gs
cmp
ror
mov
sar
data16
xchg
add
sti
jns
gs
pop
shl
shld
dec
and
mov
retf
mov
ret
mov
(bad)
and
ret
cmps
cdq
and
and
icebp
push
stos
and
push
xor
fidiv
jge
(bad)
jle
daa
add
inc
mov
je
fsubp
mov
pop
sbb
loop
push
xchg
xchg
arpl
fs
pop
div
or
in
mov
cs
mov
fisubr
mov
daa
mov
js
xchg
(bad)
int3
lods
jmp
dec
mov
push
cmp
cs
or
mov
jns
jecxz
sub
mov
scas
bound
ret
mov
fidiv
and
pop
ins
loope
cmp
imul
repnz
loop
mov
mov
add
sub
mov
and
sub
dec
jns
xor
rcl
cmc
cs
and
outs
mov
call
push
and
mov
dec
mov
xor
adc
push
(bad)
sub
icebp
sub
dec
rcl
push
pop
jno
inc
(bad)
das
cmps
cmps
pop
in
mov
dec
sub
test
test
jge
cmps
(bad)
cli
jno
pop
rcl
push
inc
cmp
mul
and
lea
pop
adc
jnp
enter
addr16
dec
add
sahf
retf
mov
hlt
push
test
xchg
and
mov
dec
js
mov
retf
add
addr16
repz
ret
call
fisttp
and
movs
add
or
lock
jg
adc
adc
sub
je
jg
lea
daa
dec
jb
movs
sub
aas
mov
(bad)
jmp
mov
cmp
das
jg
addr16
ja
scas
lahf
push
xchg
mov
pop
(bad)
push
xchg
mov
mov
ret
or
mov
rcl
movs
stos
icebp
rol
or
(bad)
sub
jne
loopne
sub
cld
iret
pop
push
mov
cmp
mov
out
adc
jno
jmp
add
sti
sbb
fistp
mov
adc
lods
mov
mov
int
ja
idiv
pop
jb
pop
mov
mov
xchg
fwait
push
ja
dec
inc
fdivr
push
retf
fwait
and
xchg
cmp
ins
and
imul
dec
(bad)
les
inc
fdivp
pop
lahf
xor
jg
fbld
shl
jecxz
cmp
shl
in
mov
xlat
icebp
imul
mov
jl
mov
addr16
cmps
pop
mov
xchg
ja
(bad)
push
dec
test
and
mov
and
sbb
icebp
pop
xchg
retf
dec
xor
xchg
mov
mov
adc
and
movs
mov
push
mov
scas
repnz
sbb
and
and
push
outs
or
fisttp
and
pop
pop
mov
cld
or
xor
popf
mov
data16
stc
pop
out
js
add
and
add
rol
loop
mov
test
mov
pushf
nop
mov
adc
(bad)
cld
int3
scas
int3
sub
add
push
test
jns
hlt
fcomp
sahf
and
movs
jne
imul
pop
xchg
ret
sub
outs
push
inc
or
xor
or
xor
push
sub
fwait
mov
mov
jns
jae
outs
cli
loopne
jle
icebp
jns
fcmovne
mov
push
pop
pop
jne
shl
sub
je
int3
sub
ins
ins
xchg
or
xor
fcom
fstp
daa
lods
xor
leave
add
addr16
fstp
sahf
adc
mov
or
out
jl
add
mov
cmp
sub
cmc
add
dec
ss
retf
aas
(bad)
(bad)
(bad)
test
loopne
sub
push
mov
ja
xor
aas
dec
aad
movs
movs
ret
sub
cli
imul
lods
and
cmp
sti
fs
jecxz
jg
ja
call
loope
outs
(bad)
popa
push
sahf
ficomp
dec
sti
sbb
push
lahf
fnstsw
jmp
xor
jge
test
adc
dec
jmp
pop
lods
stos
test
mov
or
add
hlt
(bad)
sub
cmp
adc
dec
mov
sar
arpl
pusha
les
push
xlat
nop
mov
lods
daa
out
aam
mov
dec
test
or
jg
mov
mov
sub
aas
jge
aas
je
fs
add
inc
sub
mov
cmp
enter
shl
cld
inc
(bad)
fsubr
nop
and
mov
sub
dec
dec
xchg
jg
dec
ja
scas
test
fnstenv
fwait
mov
mov
pop
sub
sahf
sbb
loopne
pop
outs
enter
inc
fnstsw
pop
pushf
xchg
aam
inc
sbb
imul
pop
pushf
ja
jo
inc
jmp
fidivr
jl
test
jb
sbb
xor
test
int
movs
push
jb
jns
dec
pop
(bad)
sahf
sbb
nop
xor
in
test
dec
ins
dec
pop
add
mov
aaa
les
adc
xchg
call
mov
push
(bad)
outs
div
sbb
push
adc
xor
stc
push
in
pop
daa
add
leave
(bad)
sub
adc
pop
into
dec
inc
in
cmc
jl
ins
cs
fnsave
dec
pop
nop
pop
fs
shl
sbb
pop
(bad)
pushf
dec
iret
(bad)
cmc
inc
dec
cmp
cwde
dec
adc
test
or
ins
sti
and
sar
enter
inc
jecxz
test
aas
and
or
pop
xor
cmp
ins
mov
dec
ret
mov
pop
out
sub
out
and
push
cmp
add
call
mov
ret
outs
dec
loope
movs
cli
out
sbb
fsubp
xchg
leave
(bad)
jp
mov
dec
out
pop
mov
sbb
(bad)
dec
sub
loopne
sbb
mov
jnp
test
cld
push
imul
(bad)
icebp
push
ret
adc
add
xchg
push
loop
and
enter
repz
daa
xor
fist
push
adc
icebp
ret
mov
mov
cmp
add
leave
pop
add
aam
stc
icebp
mov
jo
ja
mov
and
daa
and
mov
cmps
(bad)
jns
(bad)
sub
mov
dec
clc
sahf
js
movs
call
(bad)
int
inc
inc
mov
mov
ins
ret
push
jge
inc
pop
cmp
fdiv
jb
dec
iret
cmp
mov
mov
mov
mov
int3
sahf
addr16
clc
mov
ja
mov
and
xor
popf
push
loop
cmp
bound
test
jle
fisub
pushf
jnp
aad
test
add
xchg
mov
push
sub
add
pop
and
adc
cmps
push
dec
xchg
and
pop
cli
xchg
pusha
and
js
jb
int
stos
mov
mov
lods
pop
push
xchg
iretw
retf
out
cld
push
xchg
movs
enter
push
shl
mov
fisttp
ret
xchg
sbb
add
pushf
hlt
sti
mov
call
and
scas
mov
add
hlt
out
xchg
jo
cmps
dec
gs
mov
pop
pop
mov
xor
je
jge
add
mov
sti
stos
xchg
push
xor
adc
out
fimul
cs
aam
cmc
pop
push
sti
lds
mov
jnp
xor
(bad)
dec
push
cld
pop
mov
sub
scas
mov
cmp
add
hlt
mov
cwde
test
adc
mov
sub
test
mov
aad
pusha
mov
mov
mov
lods
cmp
mov
retf
adc
lock
push
outs
fst
push
das
jmp
outs
(bad)
aad
add
test
lods
mov
pop
cmp
inc
data16
daa
ficom
fistp
dec
push
aas
sbb
fst
inc
mov
hlt
ret
add
mov
in
adc
movs
adc
(bad)
scas
adc
or
test
mov
push
enter
pop
adc
lock
pop
(bad)
cmp
adc
sub
jmp
push
dec
add
mov
mov
sub
push
and
ret
popf
aam
fild
mov
cmp
movs
in
ja
popf
ror
stos
movs
push
mov
dec
xor
sub
sbb
push
in
adc
xchg
in
and
sbb
pop
pusha
loope
push
(bad)
and
push
movs
jne
dec
sbb
xchg
push
out
ficom
popf
cmps
or
mov
inc
movs
in
rcr
dec
loopne
popf
mov
out
cmc
and
mov
push
in
jne
adc
xchg
mov
in
adc
dec
fwait
and
adc
mov
(bad)
sub
out
fwait
call
push
or
cmps
in
iret
dec
pop
mov
cmps
or
mov
push
lods
mov
jl
sub
mov
aas
icebp
adc
mov
aam
gs
dec
pop
push
push
mov
loopne
jmp
jg
cmc
(bad)
inc
seta
dec
push
adc
fidiv
std
loopne
jno
pushf
scas
jno
xchg
std
cmp
retf
cmps
test
push
push
ja
cmp
clc
push
ret
cmp
gs
shr
xchg
pop
pushf
retf
mov
inc
pop
xlat
mov
das
sub
add
daa
sbb
jnp
cwde
mov
or
loope
mov
pop
retf
rcl
or
pop
or
jge
loopne
and
xchg
or
enter
(bad)
out
bound
cmps
xor
shl
inc
ror
stc
test
fcomi
mov
mov
or
push
test
fist
je
inc
jle
mov
adc
sbb
fisttp
inc
dec
sbb
mov
in
or
pop
add
iret
adc
retf
iret
ins
dec
adc
repnz
jne
cmp
mov
pop
sbb
ficom
loope
in
aas
add
sub
fdivr
inc
enter
or
adc
mov
mul
push
fdiv
mov
rcr
dec
mov
ja
loop
adc
lahf
cmp
xchg
movs
mov
loopne
add
xchg
jmp
add
xchg
test
cwde
inc
mov
cmp
jmp
cli
retf
xchg
(bad)
scas
sbb
aam
movs
pop
mov
ins
loope
jg
je
cld
(bad)
ret
xchg
lods
cli
mov
adc
mov
fbld
std
retf
mov
pop
lods
es
icebp
jae
and
sbb
xlat
mov
test
out
or
pop
mov
cmp
push
jmp
(bad)
pop
rcl
sbb
dec
hlt
jno
imul
leave
mov
inc
pusha
outs
std
xor
jmp
dec
add
jecxz
hlt
lock
gs
cmp
adc
and
pop
jp
rcr
out
mov
fcom
repz
jmp
sahf
add
hlt
xchg
fdivp
imul
mov
xchg
mov
or
nop
lods
inc
or
ficom
jecxz
mov
or
(bad)
sti
stos
cmp
test
add
addr16
push
jle
cmps
iret
fcomp
jg
mov
sahf
adc
and
stos
loopne
and
fwait
test
outs
mov
stc
mov
retf
leave
add
int
in
xchg
xor
stos
sbb
adc
xchg
lahf
push
sahf
mov
mov
cmp
das
js
jns
push
jno
mov
out
inc
push
mov
into
ror
mov
push
mov
jge
int
mov
jae
loope
hlt
add
dec
lds
popf
add
push
dec
mov
add
mov
data16
mov
sub
fldcw
test
fcmove
cmp
dec
jns
ret
mov
and
ret
xchg
cdq
and
test
mov
adc
sahf
sub
adc
lea
jnp
test
jge
inc
frstor
mov
aaa
out
lahf
int
cmp
in
mov
test
das
popa
pcmpeqd
mov
out
cmp
dec
fistp
jnp
idiv
loopne
fucomp
ret
inc
pop
scas
or
jae
in
lods
int
cmp
int
push
jne
jno
mov
jo
pop
jb
jo
cld
cld
movs
mov
inc
dec
add
loope
mov
jbe
div
mov
mov
imul
dec
sar
arpl
aaa
jmp
rcl
mov
fdivr
cwde
fmul
and
push
cmp
loope
cwde
hlt
pop
call
pop
cwde
pop
cld
icebp
xchg
not
fwait
cmp
mov
lds
mov
jb
xadd
cmp
and
xlat
mov
or
inc
scas
inc
and
pop
div
clc
push
es
in
mov
mov
mov
(bad)
pop
rcl
inc
jmp
add
lea
aad
jbe
aad
out
mov
not
jmp
loop
jg
call
movs
out
and
fnstenv
fld
adc
sub
call
clc
clc
stos
icebp
lods
cld
push
mov
dec
je
lock
mov
movs
add
ret
mov
ret
ret
sub
mov
mov
out
jmp
push
xor
pop
fwait
pop
cdq
sbb
mov
jge
shl
jae
mov
jno
dec
dec
cmp
xor
sub
aad
and
push
pop
pop
jbe
in
ret
push
int3
in
aaa
and
mov
clc
inc
sub
mov
mov
mov
inc
xchg
mov
out
outs
inc
mov
mov
or
sub
sub
sbb
sbb
imul
popf
psllq
pop
cs
mov
xchg
stos
pop
mov
inc
pop
into
inc
jecxz
mov
sbb
pop
push
jl
cmps
jl
out
inc
in
call
adc
jl
rcl
add
pop
mov
sbb
xchg
test
jo
dec
pusha
es
push
(bad)
shr
test
mov
xchg
aas
push
scas
hlt
inc
dec
pop
fcom
cmp
jmp
pushf
dec
stc
pop
mov
sub
add
outs
and
jl
xchg
push
mov
aaa
and
sbb
lea
out
retf
jns
mov
pop
mov
aaa
pop
xor
xchg
mov
inc
in
pop
jp
(bad)
inc
iret
rol
imul
mov
pop
jns
cmp
movs
xchg
loop
and
mov
pusha
fnstcw
push
jb
xchg
imul
enter
fild
or
or
cmp
in
adc
adc
iretw
lock
jb
ret
enter
xchg
std
and
mov
add
xchg
jecxz
dec
sub
mov
movs
sub
add
sti
or
xor
mov
sub
not
fs
jne
dec
pop
ss
inc
add
(bad)
lea
sbb
jecxz
cld
das
or
add
outs
or
pop
pop
sub
cmp
mov
sub
not
js
je
icebp
scas
jl
adc
push
fisubr
mov
loope
sbb
jnp
lods
push
or
push
mov
inc
test
sub
mov
pop
dec
nop
adc
mov
push
cmp
fidivr
data16
ret
push
popf
and
out
ficom
xor
mov
loope
rcl
adc
mov
rcr
ins
jmp
pop
and
mov
adc
add
stos
ins
cwde
sub
les
push
xchg
mov
sbb
pop
or
mov
sub
xchg
xchg
in
into
out
mov
pop
mov
push
push
pop
in
jne
sub
jg
xchg
xor
mov
out
mov
ror
mov
es
xchg
push
in
test
fldcw
sbb
pop
nop
in
fistp
enter
pop
lahf
mov
mov
arpl
sbb
daa
out
or
sub
(bad)
pusha
inc
nop
push
test
test
enter
leave
mov
int
repnz
test
and
xchg
cmps
ins
xor
jg
mov
inc
loope
aaa
mov
push
and
jle
icebp
push
fldenv
xor
popa
shl
sbb
mov
pop
mov
cmp
lods
inc
fcmove
add
xchg
jne
(bad)
popa
in
xor
aam
fidivr
scas
xor
scas
sub
cmp
retf
les
arpl
xchg
dec
jo
push
xchg
xchg
pop
mov
cli
pop
(bad)
pop
and
mov
enter
jo
out
inc
ficom
jnp
outs
mov
movs
and
lds
or
cs
adc
mov
sbb
shl
and
loope
clc
pop
ficom
add
xchg
out
outs
jl
std
xor
in
jecxz
dec
shl
dec
inc
inc
push
cwde
inc
push
mov
nop
mov
mov
sbb
xor
jle
repnz
in
pop
adc
mov
enter
dec
test
stc
inc
sub
mov
pushf
cmp
fldcw
sub
int3
retf
fwait
pop
enter
mov
xor
(bad)
sbb
jg
icebp
xor
std
stos
cwde
adc
nop
cmp
mov
pop
jg
shl
push
daa
pop
(bad)
jo
cmp
hlt
and
sbb
or
add
aas
inc
inc
sbb
imul
ss
loope
call
(bad)
std
pop
div
or
jns
push
mov
int3
lods
push
xchg
out
and
stos
(bad)
ret
add
jbe
mov
mov
aam
mov
xor
inc
scas
pop
(bad)
int3
movs
jo
retf
es
movs
dec
jb
mov
scas
mov
test
mov
ret
mov
adc
pop
sbb
jno
(bad)
in
mov
popf
push
sub
and
push
adc
mov
pop
outs
imul
jnp
mov
add
pop
pop
jg
fidiv
and
pusha
cmc
pushf
aas
ja
or
mov
dec
imul
mov
lahf
enter
xchg
mov
das
xchg
iret
sub
jb
scas
push
ret
push
ret
daa
das
sub
mov
inc
cld
loopne
fsubr
add
add
mov
or
add
and
ret
repz
xchg
scas
adc
jb
and
pop
lods
bound
ds
sbb
adc
dec
mov
(bad)
inc
out
mov
inc
test
cmp
xchg
adc
clc
mov
and
push
push
mov
out
dec
sbb
cmp
push
(bad)
into
cmc
call
lea
fwait
pop
xchg
test
cdq
bound
xchg
sbb
cmps
out
repz
add
adc
xor
push
mov
xor
add
inc
cli
cmc
or
push
sub
cwde
mov
out
sub
xchg
out
aad
test
pop
jb
add
cwde
and
dec
mov
sbb
adc
mov
mov
pushf
jg
sbb
call
int3
pusha
sub
jecxz
mov
mov
mov
xor
cmp
ins
daa
add
or
iret
lea
vpandn
mov
mov
div
es
sahf
dec
movlhps
fdivr
xor
dec
push
scas
jmp
lea
sub
bound
xor
mov
and
out
cmp
nop
and
rol
jne
adc
add
push
aaa
loop
jp
(bad)
retf
mov
pop
cmp
push
data16
push
inc
fmul
xchg
mov
jecxz
fs
adc
loope
sti
cld
sub
cmp
es
fwait
repnz
jns
ins
inc
mov
adc
fild
mov
in
je
push
push
movs
das
aam
mov
ret
mov
popa
rol
mov
and
popf
add
popf
loop
arpl
xchg
push
fld
xchg
add
popf
cmp
push
pop
iret
xor
mov
fsub
bound
lock
ds
sbb
push
das
push
lock
cmp
xchg
mov
mov
in
rcl
dec
popa
pop
jecxz
mov
push
mov
sbb
scas
pop
pusha
mov
push
sub
(bad)
mov
pop
jae
pop
call
inc
inc
bound
and
pop
scas
repnz
xchg
call
adc
pushf
fild
adc
popf
lds
mov
(bad)
xor
lods
pop
lea
or
mov
jae
sub
pop
push
nop
imul
dec
jp
jg
and
cdq
neg
mov
dec
pop
jle
scas
mov
add
jl
sbb
dec
cmps
push
lods
daa
add
mov
push
rcl
pop
and
aad
add
mov
sub
nop
shl
inc
sbb
dec
adc
jmp
jp
jae
rcl
mov
shl
wrmsr
and
int
and
or
(bad)
or
shr
xor
push
ja
pusha
xchg
dec
adc
ins
scas
mov
aam
(bad)
outs
arpl
into
je
dec
pop
sti
or
call
pop
loop
imul
cs
xchg
movs
int
mov
data16
rcr
je
test
daa
sahf
xchg
xlat
or
sbb
inc
(bad)
adc
cmp
xor
mov
push
xor
cmps
call
popa
(bad)
push
sub
mov
jae
lods
pop
outs
xchg
push
out
dec
popf
mov
pop
dec
outs
pushf
push
mov
cld
cmp
loop
push
inc
(bad)
and
out
jae
inc
mov
daa
popf
and
sbb
push
cmp
jmp
xor
out
fnstsw
arpl
lock
sub
jg
adc
cdq
sbb
pop
jmp
je
outs
mov
dec
(bad)
lock
mov
enter
loop
in
and
xlat
inc
sub
test
mov
in
mov
ret
jge
xor
mov
mov
repz
fidiv
int3
sbb
inc
jmp
imul
mov
jle
ror
cmp
(bad)
mov
arpl
ret
mov
lds
pop
(bad)
call
sahf
pop
jecxz
enter
or
outs
jle
ss
xor
xor
ins
xor
dec
jns
or
nop
dec
mov
(bad)
or
mov
mov
cmps
mov
test
add
push
jnp
cmp
jns
pop
and
sbb
add
xor
jp
xchg
mov
iret
jbe
add
iret
test
out
ins
adc
mov
adc
xchg
or
rcr
cmps
push
or
inc
cdq
mov
inc
or
loope
fbld
cmc
stos
ins
cmps
xchg
das
lods
jbe
mov
push
jb
test
and
lock
(bad)
ins
ja
inc
fld
int
xor
mul
sub
push
lahf
test
sub
xchg
ficomp
and
mov
cmc
mov
adc
mov
js
call
jb
cwde
push
addr16
(bad)
mov
cmp
imul
cmc
aam
sbb
jo
test
xchg
aaa
dec
xchg
xor
pop
dec
lea
inc
(bad)
std
mov
mov
or
fild
mov
(bad)
mov
out
(bad)
mov
jl
mov
dec
stos
adc
mov
xchg
test
and
or
pop
cmp
adc
aam
retf
push
jl
(bad)
lods
rcl
call
jb
ins
sti
rcr
fcomp
ret
scas
fadd
or
test
jo
sbb
call
(bad)
cmp
std
cmps
mov
movntq
jp
push
fbstp
xor
xor
sub
pop
lods
inc
adc
mov
jl
or
inc
mov
les
stc
fimul
jns
mov
xchg
fcomp
loop
sub
push
(bad)
push
mov
dec
mov
test
xchg
xchg
stos
mov
mov
enter
sub
mov
jp
xor
lods
or
mov
(bad)
mov
cmp
in
push
inc
rcl
test
adc
xchg
mov
xchg
ret
scas
adc
push
aam
dec
pop
jmp
shl
loop
mov
jl
mov
mov
jle
retf
push
int3
into
imul
retf
test
mov
xor
int
das
sub
daa
rcl
add
inc
mov
pop
sbb
ret
clc
mov
lahf
sub
aad
leave
repz
shl
dec
arpl
sbb
sahf
xchg
fstp
clc
xor
nop
inc
inc
adc
xor
mov
iret
fprem
mov
or
or
mov
or
pop
ja
adc
fsubr
inc
or
imul
dec
inc
in
nop
or
sub
mov
neg
add
shr
dec
xchg
inc
sbb
loop
and
jae
add
or
jge
fisubr
inc
data16
cwde
push
(bad)
rol
imul
sbb
sti
jno
ins
sbb
popf
rcl
add
sub
mov
adc
push
cmp
iret
sub
lods
sbb
lock
fistp
ins
dec
push
inc
mov
push
ja
arpl
hlt
add
lds
dec
jp
or
repnz
push
scas
and
xchg
pop
xchg
xor
push
imul
ret
sub
daa
or
addr16
jmp
mov
pop
test
test
sti
pop
pusha
(bad)
repz
gs
js
scas
jb
in
loop
fld
cmps
adc
bound
cwde
stc
cmp
and
xor
outs
outs
imul
and
sbb
add
push
cdq
dec
lods
add
sub
cmp
cmps
mov
retf
outs
mov
loop
xchg
arpl
call
cwde
push
mov
sub
gs
pop
inc
mov
repnz
int3
out
push
cmp
ja
mov
mov
or
test
lahf
fild
lods
mov
mov
loopne
jns
movs
stos
aaa
cld
pushf
dec
dec
push
mov
in
in
xchg
mov
sub
shl
retf
add
shl
sub
cmp
xchg
mov
daa
stos
fs
hlt
mov
aas
jmp
mov
daa
or
jae
xchg
pop
test
outs
xchg
push
jmp
or
bound
adc
nop
sbb
pop
xchg
add
stc
sub
cmp
push
nop
push
sub
out
out
sbb
in
stos
push
xor
cmp
mov
mov
sahf
mov
adc
movs
int
fild
in
adc
and
adc
or
cmps
aaa
lods
cs
nop
adc
lea
jp
sub
mov
cmc
stc
add
jmp
add
mov
ja
jnp
mov
xchg
sahf
add
out
and
jg
xchg
pop
cmps
cmps
adc
jmp
mov
scas
(bad)
push
xchg
fucomip
aam
mov
xor
mov
xor
scas
mov
pop
pop
and
push
out
sub
xchg
jmp
xchg
add
push
dec
cdq
inc
xchg
vfnmadd231pd
(bad)
or
arpl
int
mov
xchg
xchg
scas
test
jp
and
(bad)
push
retf
inc
imul
mov
into
push
call
popa
xchg
gs
lds
in
add
retf
sbb
stos
xor
add
sbb
ss
les
test
fadd
jno
inc
adc
add
jno
sbb
cmp
mov
sbb
jbe
sub
(bad)
loopne
push
daa
mov
js
sbb
in
ins
call
and
or
in
sub
push
lods
mov
lea
adc
xor
test
pop
jmp
mov
push
dec
scas
xlat
adc
js
scas
push
adc
frstor
lods
movs
jns
jae
mov
fstp
and
(bad)
out
jnp
js
xchg
sbb
cmp
sbb
fs
and
jne
jne
jne
cdq
dec
xchg
mov
movs
call
push
xor
inc
dec
push
adc
mov
(bad)
jg
(bad)
mov
jmp
cs
xor
call
jge
fdivr
xchg
mov
sub
sub
push
jl
sar
pop
and
xor
mov
ror
adc
mov
test
xchg
in
jmp
mov
mov
imul
sahf
inc
stos
(bad)
xchg
test
xor
jnp
ror
and
push
les
stc
mov
gs
xor
inc
cmp
add
push
hlt
adc
xchg
cmp
lea
cmp
xor
mov
jg
mov
into
mul
mov
sub
call
add
(bad)
sbb
mul
ins
or
push
mov
popa
mov
es
stc
push
mov
xor
mov
ret
repz
inc
or
cwde
pop
rol
add
mov
in
es
leave
into
jb
cli
xchg
sub
pop
mov
mov
push
jnp
mov
into
aad
push
(bad)
into
shr
ins
push
jle
arpl
lahf
push
mov
fdivr
dec
mov
add
test
das
sti
mov
movs
or
adc
les
data16
js
jnp
pop
js
lock
and
in
adc
loopne
packsswb
jecxz
sbb
cmp
lea
adc
mov
adc
std
or
adc
aaa
aam
fnsave
jg
cmp
frstor
add
sbb
adc
xor
mov
jbe
adc
scas
adc
cs
pop
xor
test
pop
in
cdq
pop
xchg
sbb
push
mov
ret
loope
mov
out
sbb
and
jb
fld
idiv
pop
fwait
arpl
jge
je
test
inc
jmp
mov
retf
cmp
loopne
jns
inc
inc
push
inc
adc
jnp
pop
add
loopne
dec
cmp
mov
ret
out
call
push
not
(bad)
ins
or
add
pop
mov
ins
arpl
and
call
xor
push
fcomip
pop
and
sub
push
push
mov
das
inc
jmp
push
(bad)
push
jo
push
(bad)
data16
test
aam
lea
ins
jmp
add
scas
es
(bad)
sub
cmp
jge
mov
xchg
add
mov
sub
mov
pop
jmp
les
jl
dec
cmps
(bad)
nop
nop
xchg
jo
sbb
add
push
and
mov
mov
inc
dec
push
outs
out
movs
xchg
jmp
movs
pop
sbb
sub
push
sbb
adc
dec
sbb
xchg
movs
xlat
pop
aas
jmp
cmp
(bad)
jp
adc
xchg
cmp
xor
stos
out
jo
in
mov
mov
sbb
jnp
shr
sbb
cmp
jge
push
add
xor
in
arpl
sub
push
cdq
cs
sahf
cs
push
dec
xchg
fsubr
sar
lods
lahf
pop
shl
cmp
leave
jb
xchg
add
pop
call
mov
jns
repz
rol
(bad)
test
fiadd
push
cmp
js
fcomp
fst
call
cmp
sbb
and
mov
popa
fld
aaa
inc
push
mov
sbb
sahf
dec
test
scas
cld
inc
dec
fidivr
dec
inc
hlt
xor
leave
std
push
cli
mov
fwait
and
mov
loope
push
mov
cmps
cwde
out
mov
inc
in
mov
test
ss
push
lods
imul
sub
add
cmc
adc
pop
fnstenv
xor
push
gs
jecxz
call
je
jno
outs
shl
pop
fild
mov
call
ror
xor
mov
sbb
movs
pop
adc
xchg
xchg
adc
push
or
inc
and
aas
pop
and
stc
mov
xchg
bound
into
lds
push
mov
rcr
sbb
mov
in
pop
push
out
inc
push
retf
sbb
aad
pop
pop
and
imul
inc
shl
fcom
fs
cmps
mov
sbb
imul
adc
push
mov
mov
pop
cdq
in
sahf
or
cs
bound
cwde
test
sti
in
xchg
retf
jmp
dec
ror
adc
aas
mov
xchg
mov
inc
push
cmp
sbb
mov
adc
or
mov
mov
ins
enter
add
sbb
xor
sub
(bad)
pop
xor
stos
adc
stos
mov
pop
pop
jnp
in
pop
popf
sub
sbb
std
jnp
sbb
imul
(bad)
pop
xchg
adc
arpl
cmp
cld
rcr
ret
or
xor
xchg
out
add
add
pop
xchg
push
in
push
sar
arpl
xchg
adc
push
lods
in
test
stos
xchg
push
mov
jmp
ds
cmp
cmp
pushf
push
mov
rcr
adc
call
clc
xchg
sub
dec
sub
push
push
push
or
leave
cmp
push
jmp
sub
retf
in
adc
mov
sub
push
test
ret
mov
les
cmp
cld
and
ds
push
adc
dec
jg
addr16
std
popf
dec
outs
inc
jge
sti
jp
nop
mov
and
mov
loopne
cmp
xchg
(bad)
pop
jmp
cmps
lods
add
daa
pop
fisttp
iret
nop
js
mov
inc
and
cmp
push
ror
in
dec
rcl
sbb
cli
jp
push
dec
xor
ss
pop
pop
iretw
and
sub
aam
fistp
push
lock
push
shr
das
jmp
xchg
inc
outs
add
sbb
loop
xchg
pop
icebp
push
adc
jecxz
mov
adc
bound
inc
xor
xor
aad
ins
or
mov
dec
dec
lahf
call
outs
or
lods
mov
imul
push
leave
shr
mov
xchg
test
ret
ret
adc
loope
pop
aam
or
mov
push
push
mov
adc
xor
shr
nop
mov
test
jle
inc
test
mov
dec
xchg
test
adc
push
jp
add
dec
mov
cmp
pop
movs
inc
sub
lods
or
push
mov
aaa
enter
mov
sub
fnsave
and
pusha
and
adc
cmp
arpl
cmp
mov
pushf
mov
pop
add
xchg
xor
adc
mov
outs
ret
sub
jmp
xchg
(bad)
add
push
jmp
cmp
or
xor
jle
lock
add
jne
inc
pop
jle
popa
loopne
ficomp
push
pop
xchg
fcom
mov
(bad)
add
int
(bad)
add
aas
add
gs
dec
imul
mov
xor
jb
rcpps
inc
das
aaa
cmp
jne
cmc
and
pop
add
dec
inc
dec
dec
mov
pop
das
or
xor
jno
sbb
repz
aas
cmps
pop
sub
and
jno
out
hlt
jl
es
(bad)
add
xor
jmp
jne
dec
xor
mov
les
xor
aam
cmp
and
sbb
pushf
lods
jmp
out
sar
dec
icebp
fwait
dec
shr
iret
mov
in
inc
push
pop
ror
xchg
jge
add
mov
push
(bad)
in
pop
sbb
repz
enter
jecxz
stos
imul
push
jl
and
aam
loope
add
aaa
adc
(bad)
popa
shr
ror
mov
aam
test
arpl
jle
lock
cwde
inc
cwde
push
ficom
pusha
cmp
lea
xor
fstp
shr
adc
loop
xchg
xchg
into
in
xor
pop
mov
adc
pop
call
loopne
ffreep
ins
gs
or
lahf
movs
and
adc
pop
sub
in
adc
aam
and
leave
lods
jecxz
aas
sub
cmp
xchg
add
pop
(bad)
xor
lahf
rsqrtps
dec
les
ds
fwait
icebp
adc
iret
and
pop
fistp
out
fwait
push
xchg
call
cmp
inc
movs
sbb
loop
aad
fisttp
and
add
pop
aam
cdq
and
mov
jge
add
dec
adc
movs
or
popf
add
xchg
les
inc
inc
inc
add
mov
ret
mov
in
sbb
aaa
ins
dec
(bad)
fcom
pop
in
mov
sbb
push
ret
(bad)
add
js
add
inc
aaa
and
and
mov
add
mov
mov
cmp
test
arpl
bswap
icebp
inc
(bad)
jg
repnz
push
aad
imul
(bad)
pop
jecxz
out
ja
pop
pop
jo
in
mov
fisub
dec
adc
inc
add
xchg
sti
pop
shr
push
jp
push
sbb
xlat
into
out
xor
xchg
dec
enter
pop
lods
jbe
xchg
jl
mov
push
repnz
sub
adc
xor
fcmovnbe
hlt
and
cmp
jl
push
outs
std
mov
mov
add
ficomp
mov
pop
jmp
outs
lock
ret
xchg
stos
inc
jne
mov
add
inc
(bad)
pop
ja
mov
add
fidiv
test
sbb
dec
loope
ja
xchg
mov
nop
in
(bad)
push
add
out
mov
mov
lahf
shr
push
in
mov
pop
sub
adc
pop
and
arpl
push
or
lods
or
and
jg
fs
das
call
pop
push
stc
ror
mov
add
addr16
pusha
mov
mov
in
jp
adc
xchg
shr
ins
push
scas
into
pop
mov
pop
rcr
mov
inc
(bad)
in
cld
fcmovnu
mov
mov
mov
scas
aad
call
fldenv
jbe
fwait
cld
sub
add
dec
xchg
push
repz
(bad)
int
aaa
or
sbb
ins
push
cmps
mov
aam
rcr
fwait
pop
test
dec
cmp
add
test
cmp
inc
jns
in
pop
popf
repnz
mov
popa
mov
and
pushf
(bad)
xchg
pop
cs
dec
pop
jecxz
adc
xlat
ins
(bad)
iret
imul
xor
xor
idiv
ret
cmp
icebp
neg
and
push
movs
and
jle
jo
dec
lods
outs
sub
inc
sbb
in
dec
sub
add
xlat
mov
mov
add
fst
fcomp
(bad)
or
ror
jmp
jmp
(bad)
mov
xchg
sub
dec
inc
aad
cmp
and
mov
std
int
add
movs
(bad)
push
lock
adc
jmp
push
cmp
stc
lock
pop
push
dec
push
push
add
jnp
push
retf
lahf
lods
mov
dec
jo
pop
mov
fbstp
adc
mov
(bad)
mov
ins
adc
and
popa
lea
cmp
rcr
push
push
mov
in
pushw
loop
test
mov
cmp
inc
cwde
cmp
pop
mov
leave
lods
mov
inc
xor
cmp
(bad)
call
data16
leave
inc
or
jbe
bound
out
mov
scas
in
repnz
sub
cli
imul
dec
xchg
xor
dec
repnz
mov
dec
test
xor
xor
aam
shl
jmp
inc
add
js
xor
add
push
inc
adc
aas
retf
cli
add
fcom
retf
sbb
sbb
push
daa
pop
mov
movs
add
push
or
dec
adc
mov
xor
sbb
cmp
mov
call
in
mov
pop
sbb
pop
ds
xor
push
mov
cmp
retf
mov
daa
loopne
mov
push
ret
adc
lods
cmp
call
loope
mov
sub
and
push
mov
push
cs
test
sub
pop
jno
mov
and
and
ins
mov
dec
mov
jno
dec
pop
cwde
xchg
sub
fs
std
add
(bad)
push
sahf
(bad)
pop
and
mov
movs
das
out
cmp
mov
repz
adc
xor
mov
ins
mov
jg
aad
cwde
in
clc
test
mov
in
fimul
sbb
mov
jle
outs
repnz
scas
ror
and
outs
jmp
int3
je
arpl
mov
ja
in
pop
leave
test
gs
mov
(bad)
mov
jp
inc
shl
and
test
call
ins
ficom
imul
outs
push
mov
add
sahf
mov
enter
and
xor
jo
or
sbb
hlt
fwait
jl
or
cmc
ds
inc
(bad)
fst
cmc
adc
push
pop
xor
mov
sahf
mov
mov
hlt
or
add
push
std
jmp
adc
(bad)
out
outs
fcomp
aad
les
dec
inc
and
push
imul
add
mov
(bad)
mov
popf
inc
mov
icebp
mov
call
clc
imul
dec
pop
(bad)
movs
sub
iret
iret
push
lods
and
push
rcr
mov
or
jo
mov
mov
push
dec
jne
test
dec
cmc
loop
inc
xchg
movs
adc
xlat
jnp
and
sub
sbb
std
ja
data16
adc
ror
hlt
jge
sbb
jg
or
mov
ja
ss
add
mov
bnd
pop
arpl
dec
cmps
lahf
retf
dec
mov
add
(bad)
sbb
sbb
je
mov
pop
and
out
sbb
dec
fistp
pop
push
inc
and
xor
sbb
xchg
call
cmps
mov
push
mov
cmp
test
sbb
pop
mov
mov
(bad)
iret
lods
fwait
test
push
cs
lea
push
add
inc
loop
into
out
jg
mov
leave
jbe
cmp
shr
sbb
movs
adc
arpl
lahf
xor
into
clc
call
and
dec
dec
pop
das
mov
mov
outs
mov
mov
mov
retf
cwde
or
dec
in
fimul
xchg
jg
inc
loop
pop
jg
loope
add
mov
div
cs
call
sbb
daa
pop
stc
pop
pop
jno
shl
cld
mov
ins
xchg
pop
sti
ins
ins
retf
jmp
(bad)
fist
sbb
lods
in
lea
add
pop
lock
dec
mov
test
jnp
sbb
dec
or
adc
outs
xchg
repnz
loope
cwde
call
jae
or
out
xchg
mov
mov
cmp
jge
daa
scas
loop
mov
stos
jae
sahf
adc
jp
idiv
pop
aas
adc
out
imul
ret
mov
xor
fsubr
fild
lods
xlat
lods
sbb
mov
sub
xchg
mul
in
pop
sti
inc
sub
inc
mov
repnz
sbb
test
(bad)
popf
es
xchg
fisubr
or
mov
inc
and
(bad)
cli
ficom
fsub
sbb
repz
sub
out
test
mov
dec
mov
and
push
add
and
mov
lds
jp
fdivr
inc
inc
out
or
xchg
outs
and
cdq
rol
sub
lahf
xor
push
imul
aas
sbb
mov
sbb
pop
sbb
mov
arpl
sbb
repz
xor
sar
mov
sbb
xchg
fucompp
imul
push
mov
sahf
jbe
dec
xor
ret
xchg
jae
fs
inc
or
int3
loope
push
mov
in
movs
jo
pop
fs
idiv
fidiv
pop
pop
data16
jbe
sti
test
inc
cmp
adc
xchg
jmp
mov
pop
sar
cmp
leave
repz
mov
sbb
test
fbld
jg
loopne
mov
and
je
popf
mov
sub
movs
std
mov
or
jg
loop
jmp
pop
pop
rcr
xchg
mov
es
mov
jno
hlt
sub
sub
jnp
jae
sbb
inc
popf
mov
loopne
cmp
leave
shr
aaa
add
xlat
test
add
xor
xchg
xchg
aam
fwait
pop
lods
iret
inc
jbe
xchg
mov
fistp
data16
or
imul
cvtps2pd
pop
test
imul
test
mov
cmps
test
sub
xlat
cld
leave
rcr
mov
mov
ss
and
adc
dec
je
xchg
ret
jns
(bad)
ret
xchg
jp
loopne
pop
sbb
scas
mov
sub
sub
xchg
movs
pop
mov
cmp
test
out
icebp
xor
fstp
stc
arpl
ror
cmp
pop
shr
repz
inc
stos
mov
push
in
(bad)
fdiv
les
repz
mov
sbb
movs
adc
sbb
mov
test
retf
or
mov
out
jb
jl
jp
(bad)
push
test
sub
out
les
(bad)
lock
mov
or
adc
pop
mov
inc
adc
pop
cwde
jbe
test
xchg
jne
addr16
movs
cmp
movs
sub
hlt
cld
pushf
or
dec
or
pop
jne
fsub
pop
out
lds
sub
fiadd
dec
pop
mov
je
fadd
mov
ds
(bad)
mov
mov
push
adc
add
or
fld
in
ds
mov
push
cwde
mov
mov
mov
and
retf
jmp
jns
xchg
shl
dec
ret
daa
jge
adc
jno
stc
adc
jle
xchg
xor
xchg
imul
push
(bad)
(bad)
cwde
jge
clc
push
scas
dec
or
je
ds
push
pop
push
push
jo
mov
lock
add
mov
sub
jne
loope
adc
xor
call
ret
sub
add
cmp
jle
push
push
push
pop
adc
add
sbb
xchg
hlt
clc
movs
xchg
dec
or
sub
shr
scas
mov
pop
adc
pop
mov
or
mov
test
call
movs
sbb
ds
test
fnsave
xor
int3
jl
les
mov
push
lea
in
and
enter
sbb
inc
ds
popf
jge
xor
adc
push
cwde
mov
and
pop
cmp
mov
shl
and
mov
adc
in
mov
sub
shl
xchg
adc
loope
cmp
call
lss
fcom
lods
test
jae
add
mov
cmp
or
mov
stc
xchg
ins
inc
and
xor
stc
(bad)
aaa
sbb
add
push
js
jae
pusha
mov
scas
sbb
add
cmps
sub
push
mov
jae
xchg
sub
mov
push
and
add
loopne
mov
and
outs
cli
mov
daa
retf
or
mov
fld
(bad)
jnp
cwde
jno
inc
(bad)
cmp
and
cli
gs
inc
inc
adc
mov
loope
adc
aaa
jnp
xor
sub
push
loop
test
pop
jg
or
out
out
or
aas
push
mov
ret
xor
fld
jnp
fld
and
(bad)
lea
sbb
rcr
jecxz
xchg
pop
addr16
popf
ins
add
adc
clc
push
fbstp
push
test
ficomp
out
mov
jle
mov
jl
push
cmps
sbb
add
scas
inc
leave
cmp
push
xchg
aaa
push
mov
test
aas
push
pop
in
sub
cli
scas
lock
inc
mov
pop
je
or
es
into
mov
cmp
icebp
fs
sbb
stos
lahf
sbb
jp
lods
addr16
xor
call
add
adc
mov
sub
int3
push
pop
xor
fstp
retf
dec
push
jmp
push
sbb
cmps
ins
(bad)
pop
out
fild
mov
test
daa
inc
test
mov
hlt
je
jnp
dec
(bad)
inc
loop
xor
or
push
mov
sub
sar
repz
sbb
outs
jno
xchg
sahf
pop
ins
outs
sbb
out
or
js
push
mov
pop
stos
adc
(bad)
adc
shl
rcl
adc
push
jo
xor
sti
aaa
and
idiv
push
leave
in
aas
mov
xor
clc
cmp
stc
pop
sbb
sahf
inc
rcr
adc
lds
xor
adc
icebp
rcr
mov
idiv
test
xor
push
mov
es
adc
xchg
push
or
dec
fimul
les
and
dec
(bad)
cld
cmps
cmp
xchg
lock
das
arpl
sbb
dec
ret
das
les
pop
sub
add
or
jo
adc
jno
out
loope
dec
popa
adc
scas
std
test
gs
movs
mov
sahf
test
mov
mov
mov
add
sbb
idiv
jno
pop
sbb
pusha
and
into
xchg
or
pop
hlt
fbld
je
sar
pop
aas
sbb
sahf
inc
(bad)
in
mov
fcomp
mov
jecxz
inc
mov
pop
jg
add
adc
rcl
leave
cmp
mov
call
stc
or
xchg
mov
ins
inc
sbb
pop
jle
mov
and
xchg
push
pushf
mov
mov
sbb
cli
cs
bswap
iret
jnp
ss
shl
jbe
mov
leave
nop
mov
sub
jl
jns
jp
rcl
inc
push
add
dec
or
pop
add
fld
repnz
lahf
or
dec
mov
and
hlt
lock
push
sub
xchg
sub
jbe
sub
shl
xor
push
mov
push
sub
popf
jo
xchg
stos
xchg
jo
sbb
ja
adc
jle
in
dec
icebp
rcl
push
retf
push
ss
popf
test
shl
adc
fdiv
mov
and
xor
xchg
sti
loopne
cmp
div
popa
(bad)
sub
sub
pushf
call
leave
mov
out
mov
std
shr
and
dec
lock
mov
push
push
xlat
inc
and
or
push
out
mov
aaa
mov
sbb
loopne
pop
pop
ret
cwde
pop
xor
cmp
arpl
jp
popf
mov
test
(bad)
(bad)
out
fwait
jmp
jg
dec
jle
add
xlat
add
cmps
test
jecxz
(bad)
jmp
sub
outs
mov
(bad)
ins
cdq
cmps
rcl
jns
mov
cs
jb
out
xchg
loope
stos
push
add
cli
sti
pop
in
aas
ret
in
retf
daa
inc
mov
jmp
ror
mov
dec
imul
dec
das
scas
inc
std
movs
(bad)
push
lods
mov
mov
mov
pop
cld
sbb
int3
pop
test
je
das
call
xchg
lods
(bad)
ja
pop
sub
add
sbb
in
mov
popa
lds
sbb
scas
sub
adc
xchg
les
xor
jbe
jb
jne
jb
xchg
outs
push
movs
call
aad
imul
lods
wrmsr
and
add
mov
add
pusha
(bad)
dec
stc
jo
pop
test
loop
nop
xchg
pop
add
xor
xchg
test
ins
(bad)
mov
and
and
loopne
or
add
and
cmp
lea
xchg
push
or
xchg
das
mov
data16
loope
icebp
add
stos
sub
and
daa
ror
cmp
mov
lea
lea
addr16
stos
neg
cli
pop
and
mov
ss
loope
cmp
sub
ror
ss
dec
movs
push
dec
jl
sub
jo
add
outs
cdq
xor
shl
mov
add
(bad)
mov
cmp
jmp
lods
add
lahf
js
mov
cs
cli
mov
cwde
cwde
mov
stos
mov
push
pushf
pop
test
add
pushf
sbb
cmp
outs
int3
push
test
xor
jbe
sbb
lea
inc
xchg
dec
pusha
xor
lea
cmc
pop
and
mov
pushf
pop
rcr
scas
and
add
push
icebp
test
aaa
xor
scas
jl
or
inc
loopne
pop
cmp
arpl
loope
cld
fmul
add
jns
cli
addr16
xchg
shl
je
sub
arpl
(bad)
loopne
fld
cmc
add
stc
scas
scas
cmp
lds
int3
push
xor
in
sub
loop
push
cmp
jmp
scas
out
xor
dec
mov
js
cmp
pop
lods
hlt
push
xchg
ror
call
(bad)
add
cdq
int
(bad)
movs
jne
idiv
xchg
pop
push
inc
jbe
ret
push
jecxz
mov
push
cld
mov
pop
les
int3
mov
or
(bad)
frstor
push
cmc
sbb
jns
xchg
sti
adc
lods
call
adc
and
xchg
retf
fld
pop
xchg
xchg
dec
cmc
add
push
popf
ret
mov
retf
bound
shl
push
inc
push
test
sbb
outs
cmp
mov
gs
fistp
pop
xchg
loope
out
cmp
and
sbb
es
std
pop
dec
push
xchg
rcr
dec
xor
cmp
sar
cmp
jmp
mov
(bad)
and
lahf
push
clc
cmp
cmp
cmp
imul
xchg
adc
cwde
inc
inc
fsub
fidiv
int
mov
in
mov
lods
inc
push
loopne
sti
sbb
sti
push
or
jp
push
inc
add
cmp
imul
xor
mov
movs
inc
lea
xchg
pop
shl
cmp
addr16
mov
fcmovbe
not
and
pop
mov
adc
les
repz
sbb
cmps
mov
je
mov
nop
dec
sub
jmp
arpl
mov
clc
adc
mov
push
(bad)
pop
push
int
mov
(bad)
aaa
push
ss
fbstp
pop
xchg
scas
(bad)
out
inc
shl
push
(bad)
mov
jno
sub
int
mov
xchg
pop
and
imul
mov
in
repnz
dec
mov
jnp
xchg
(bad)
jb
pop
add
fs
add
stos
shl
(bad)
dec
cmc
aad
retf
add
or
and
and
inc
mov
push
adc
ins
or
cmp
pushw
mov
xchg
(bad)
fidivr
cmp
scas
xchg
sbb
xchg
cmp
add
push
(bad)
jle
es
sti
fwait
ins
jge
lods
ret
xchg
dec
int
pusha
es
leave
hlt
ds
xchg
loope
fstp
mov
arpl
xchg
je
test
push
das
fwait
xchg
int
and
mov
ss
sbb
fwait
loop
scas
lds
and
mov
icebp
xchg
je
fmul
dec
mov
cli
inc
mov
aaa
icebp
(bad)
out
mov
and
inc
lahf
mov
push
mov
fmul
nop
scas
sub
pop
sbb
cmps
mov
jb
lgdtd
or
lds
fadd
cmp
icebp
test
add
lods
mov
cmp
test
in
sub
mov
mov
(bad)
mov
stos
in
add
pop
(bad)
ins
lock
mov
pushf
jns
sbb
aas
shr
jmp
test
jg
aas
push
jne
xchg
call
jns
mov
add
jno
jnp
std
cmp
call
loope
cmc
cmps
xchg
jae
pop
out
out
jno
add
xchg
repnz
inc
out
(bad)
bound
pop
jb
test
loopne
aad
jb
rcl
push
jg
ins
retf
push
mov
jmp
gs
mov
sub
and
xor
xchg
inc
sahf
fisubr
sbb
lods
add
nop
mov
(bad)
aam
mov
mov
add
mov
pop
pop
test
pop
mov
imul
xor
mov
xor
sub
inc
ins
popf
lock
sbb
sbb
mov
out
mov
sbb
cmp
int3
gs
add
fist
retf
ja
push
into
pop
jb
movs
cmp
fisttp
push
and
sbb
rol
(bad)
shl
or
fldenv
xor
into
pop
push
mov
mov
in
push
(bad)
mov
push
push
sub
sbb
sar
pop
jbe
aas
jno
mov
mov
icebp
xor
jl
(bad)
cmps
sbb
mov
adc
cmps
lods
(bad)
not
push
jno
in
adc
dec
call
jle
(bad)
cs
jle
pop
hlt
push
adc
mov
or
xor
xor
in
jle
out
cmps
test
and
jmp
mov
mov
push
push
sbb
mul
inc
mov
in
cmp
test
out
push
fidiv
les
jge
push
test
jg
mov
rol
aad
dec
fidiv
cmps
test
xchg
into
and
sub
add
jmp
mov
push
inc
into
out
adc
or
dec
fiadd
push
les
and
mov
push
sub
std
ja
bnd
mov
loope
xchg
push
loopne
iret
and
jle
dec
sbb
sbb
mov
popf
adc
xchg
call
inc
imul
mov
xchg
and
sti
pushf
cwde
test
mov
test
inc
shr
pop
mov
adc
cmps
inc
sbb
or
add
push
loopne
jnp
je
aaa
xchg
sbb
push
mov
adc
jns
rcr
xchg
add
stos
push
jae
in
aaa
add
cmp
adc
imul
and
iret
inc
ret
jecxz
inc
xchg
test
enter
cmp
gs
mov
ins
mov
mov
scas
xlat
pop
xchg
mov
dec
faddp
dec
adc
lahf
mov
imul
fisub
daa
enter
add
push
push
mov
xchg
pushf
(bad)
repnz
lods
push
outs
scas
aad
jbe
rep
or
push
ja
fcmovnb
jbe
push
stc
retf
int3
jge
(bad)
mov
and
xor
fnstsw
fwait
push
leave
loopne
test
mov
clc
cmc
adc
mov
sar
mov
xor
cmps
or
jmp
inc
ret
and
vrsqrtps
retf
pop
dec
movs
xor
add
(bad)
xor
adc
and
ins
hlt
shl
mov
in
pop
(bad)
push
loope
jno
jae
jg
or
dec
jnp
xor
and
cmps
and
ss
js
and
push
cs
aad
jge
aas
retf
inc
repz
jmp
inc
xchg
in
(bad)
icebp
fst
sub
xor
cli
icebp
aaa
sar
push
in
jg
imul
mov
arpl
adc
mov
out
in
rcl
shl
jne
xor
jmp
inc
xor
jbe
cld
test
add
mov
or
je
and
les
mov
imul
dec
mov
lock
outs
mov
out
popa
mov
add
aam
shr
add
bound
fnstsw
call
mov
pop
fidivr
mov
das
shr
mov
ror
jmp
popa
pop
sub
jl
ins
cmp
cmp
xlat
and
sub
daa
retf
shr
data16
and
mov
ss
mov
data16
dec
inc
lds
das
int3
sbb
scas
(bad)
fcmovbe
and
mov
xchg
pop
or
push
xchg
jg
stc
aaa
push
(bad)
div
xor
mov
inc
xor
iret
popf
jne
shr
pusha
mov
stos
clc
pop
popf
in
out
jge
je
mov
ret
cmp
pop
jmp
pop
shr
dec
xchg
(bad)
std
fdivrp
add
xor
or
mov
add
jnp
push
mov
scas
mov
jle
and
ficomp
mov
sub
lock
push
scas
xchg
dec
mov
mov
lods
mov
int3
inc
add
inc
sbb
add
cs
sahf
sub
adc
pop
fdivr
call
lock
test
adc
loopne
mov
lock
outs
cs
in
jne
(bad)
jge
out
out
adc
push
and
cmp
icebp
cmps
pusha
jno
dec
adc
pusha
pop
fist
fadd
cli
cmp
jecxz
add
pop
add
add
test
mov
je
adc
ltr
push
dec
scas
ror
fcmovb
mov
cmp
jl
adc
and
mov
retf
mov
scas
inc
lea
js
mov
inc
mov
xlat
dec
lea
add
jbe
fistp
pop
divps
sbb
jb
cmp
test
sub
(bad)
dec
add
fnstcw
mov
sbb
pop
mov
cmps
shl
and
mov
mov
xor
call
out
call
div
dec
sub
lods
sbb
push
mov
dec
or
icebp
mov
retf
fisttp
loope
push
cdq
scas
cmps
mov
stc
xchg
in
retf
jmp
dec
ror
stos
aaa
fidivr
and
adc
inc
dec
push
jg
or
inc
dec
cmp
sub
cmp
adc
or
repnz
retf
jae
loope
xor
imul
das
mov
out
pusha
lods
mov
test
stc
in
enter
jb
leave
(bad)
lods
pop
paddb
outs
or
sar
sbb
shl
push
and
xor
sub
out
pop
mov
sti
sbb
cs
inc
(bad)
fsubr
cmp
jmp
test
mov
neg
pushf
push
ficom
mov
sub
aam
dec
and
push
hlt
sub
xor
dec
adc
sbb
mov
dec
dec
mov
add
jle
movs
ins
or
or
or
pop
cli
dec
and
jbe
pop
sub
mov
inc
out
or
inc
sbb
mov
mov
push
adc
xchg
iret
in
mov
push
test
arpl
std
mov
pop
cwde
mov
aam
stc
xor
in
mov
or
bound
out
pop
mov
sub
ror
push
lock
sub
je
in
fld
jge
xchg
jbe
sbb
push
push
inc
inc
inc
fadd
mov
clc
lea
jecxz
cmp
arpl
gs
nop
sbb
mov
cmc
dec
or
push
jl
sub
in
fsub
aas
sub
adc
out
push
in
mov
mov
push
or
add
pop
adc
push
push
jp
into
pop
mov
inc
mov
push
je
mov
jmp
lock
cmp
shl
ds
xchg
cs
stc
test
fbld
loop
mov
dec
cmp
xchg
cmp
jo
adc
jo
scas
pop
mov
into
sub
aad
or
mov
inc
lock
cmp
jbe
sbb
adc
movs
add
inc
leave
int
sub
retf
(bad)
imul
or
adc
sbb
fadd
sbb
arpl
or
popa
push
add
xchg
(bad)
neg
popa
lods
fnop
mul
sub
lahf
jne
or
loope
movs
sbb
add
jl
sub
js
adc
and
ins
leave
aad
cmp
adc
xchg
and
cmc
dec
jne
inc
pop
pop
push
data16
int3
cmp
sub
cmp
ret
cs
mov
call
repz
jbe
fsub
jge
mov
mov
nop
in
ret
std
out
icebp
imul
sub
jo
mov
and
cmp
outs
ss
aam
mov
sub
dec
sbb
ret
fisttp
mul
xchg
rol
or
imul
sbb
imul
imul
hlt
fcmovnb
mov
enter
push
cmps
and
arpl
sti
push
mov
popf
add
loopne
and
fwait
inc
mov
retf
sar
dec
sub
xor
inc
retf
ds
and
sar
test
push
imul
pop
inc
ds
(bad)
dec
jae
jo
repnz
(bad)
mov
push
in
jmp
loope
adc
mov
jmp
xchg
out
ret
ja
inc
push
(bad)
shr
pop
mov
push
fs
mov
fdiv
mov
xchg
push
mov
pop
mov
out
out
mov
sub
mov
loopne
mov
retf
out
add
pop
(bad)
xor
or
test
xchg
dec
xor
or
(bad)
sti
(bad)
call
loop
push
jnp
xor
dec
(bad)
loopne
pop
jmp
jne
test
add
lods
dec
pop
inc
inc
adc
sub
call
mov
xor
div
mov
push
lahf
mov
jecxz
mov
pop
call
popa
mov
or
xchg
xor
xor
mov
fwait
loop
fisub
dec
or
xor
mov
js
cmp
(bad)
sub
sbb
mov
(bad)
mov
add
mov
xchg
sub
push
adc
xchg
(bad)
sar
and
mov
mov
xor
cdq
stc
fiadd
cmp
js
test
outs
xor
push
out
add
jb
push
mov
je
sbb
outs
mov
sub
lods
test
xlat
add
test
in
in
test
or
adc
lods
ja
jo
fisubr
pop
mov
mov
jp
adc
inc
enter
gs
push
mov
push
dec
sub
ret
movs
add
and
xchg
push
jg
push
cmp
xchg
call
xor
scas
mov
xor
push
xchg
jne
dec
adc
jo
(bad)
mov
xor
call
dec
pushf
mov
movs
lods
mov
push
and
cmc
or
in
fnstenv
mov
shl
and
ins
jns
movs
mov
(bad)
(bad)
hlt
push
addr16
dec
xlat
sbb
imul
xchg
inc
dec
mov
sbb
jns
jmp
repz
pop
inc
mov
cmp
add
test
mov
fdiv
adc
add
fdivr
retf
pushf
ret
pop
and
jl
aaa
in
lds
fild
or
enter
ins
push
xchg
push
int3
adc
pusha
push
loopne
fld
sar
dec
mov
cld
push
and
mov
and
dec
dec
ret
or
pop
and
add
or
pop
cmp
or
retf
out
addr16
inc
(bad)
mov
ins
push
jbe
test
xchg
jg
or
out
fldenv
dec
mov
mov
or
sub
test
dec
xchg
sahf
rcr
scas
ds
(bad)
xchg
sahf
rcr
fs
fdiv
sub
and
leave
mov
mov
pop
sbb
jg
movs
scas
dec
sub
add
sub
cdq
test
push
sbb
push
mov
adc
or
push
call
sbb
cmps
mov
int3
dec
and
or
xor
sub
cmp
cmp
leave
mov
(bad)
push
push
dec
fnstcw
retf
push
xchg
adc
add
dec
(bad)
xor
ret
and
movs
in
rcl
jne
inc
fild
(bad)
out
sub
pushf
mov
jb
out
(bad)
pop
aaa
iret
cs
xchg
call
ja
add
nop
xor
test
push
mov
inc
(bad)
loopne
push
nop
fisub
jecxz
ror
mov
cmps
sub
(bad)
jo
pop
mov
pop
enter
dec
cmc
or
inc
push
pop
bswap
pop
cs
aad
push
add
out
cs
ins
or
stc
xor
and
jg
jmp
push
jle
push
std
add
sub
jg
not
cmc
lahf
lock
(bad)
and
xor
cs
mov
sbb
xchg
and
ret
nop
xor
in
xchg
sub
mov
out
push
xchg
or
mov
shl
sub
cmp
cwde
mov
retf
leave
data16
in
mov
fisttp
push
xor
int3
adc
dec
mov
sbb
outs
add
loop
push
daa
cmp
sub
data16
das
iret
or
(bad)
cmps
clc
pop
in
jne
ss
xor
sbb
or
adc
ins
movs
xchg
push
ret
arpl
dec
or
retf
add
jmp
into
dec
adc
push
xor
xor
pop
out
adc
mov
jmp
cmps
jl
int
out
cmps
aas
cmp
leave
push
mov
aaa
daa
int
push
push
(bad)
call
ror
addr16
xrelease
jmp
das
dec
fstp
ffreep
lods
imul
inc
scas
fs
scas
push
cmps
lea
ret
cmp
sar
jo
push
repz
sbb
int3
std
outs
xchg
retf
xor
or
sti
dec
cwde
sahf
fs
pop
fisttp
xchg
lock
retf
(bad)
sbb
mov
inc
mov
xor
(bad)
cwde
dec
(bad)
mov
nop
sub
mov
(bad)
shl
pop
mov
repnz
cld
mov
sar
pop
pusha
outs
add
adc
jge
rcr
or
bound
xchg
push
jg
daa
adc
mov
mov
daa
add
lds
push
pop
and
test
stos
in
cs
je
cmp
sub
call
and
ja
repz
jg
imul
icebp
pop
aas
mov
dec
xchg
xchg
movs
outs
dec
sbb
inc
or
jecxz
jmp
imul
popf
adc
jecxz
fwait
in
iret
jmp
les
mov
mov
pop
cmc
mov
jno
adc
and
div
dec
or
push
and
mov
cdq
sub
cmp
shl
inc
shl
das
mov
inc
sbb
or
push
outs
sahf
shl
fld
cmps
or
push
daa
fwait
popf
pop
push
pop
cli
out
xor
sub
mov
dec
daa
arpl
add
nop
loop
mov
push
jne
neg
lea
pop
retf
aas
xor
add
push
mov
lock
vaddsd
mov
shl
xor
in
lods
or
pop
jle
imul
repnz
mov
push
retf
jbe
pusha
mov
mov
(bad)
pop
loope
xchg
js
xsha256
cmps
adc
retf
xchg
pushf
loop
ficom
jmp
rcr
rcl
or
lods
rol
mov
dec
or
push
adc
in
mov
int
dec
iret
loope
add
mov
and
leave
sbb
clc
pop
jae
mov
jecxz
xchg
xchg
stos
mov
xor
mov
sti
sub
imul
int
push
aam
fsubr
pop
mov
ret
push
push
sbb
(bad)
or
xor
push
add
ins
call
cmp
or
imul
xchg
popf
call
sbb
xchg
push
adc
aas
(bad)
out
sbb
push
push
aad
inc
out
movs
stos
push
dec
and
jne
cwde
or
rcr
mul
sub
cmp
cwde
fmul
mov
jae
add
bt
adc
adc
lock
or
in
adc
mov
xor
out
adc
xor
and
in
fistp
jge
adc
out
xchg
scas
adc
adc
loopne
push
leave
mov
test
inc
mov
inc
stos
push
jb
repnz
test
out
shl
out
mov
xchg
fiadd
popf
pop
push
mov
enter
cmp
inc
enter
test
mov
shl
(bad)
aaa
rol
ss
in
push
sahf
xor
or
pop
adc
push
das
ja
(bad)
int
mov
cmp
sbb
mov
icebp
push
cmp
test
(bad)
jo
call
ror
(bad)
pusha
lods
inc
xor
lock
sar
mov
clc
mul
sahf
xchg
jmp
pop
popf
inc
int3
pushf
shl
adc
gs
adc
mov
ins
sbb
sub
jne
xchg
pop
push
ins
sub
pop
loop
mov
cmps
mov
shr
xchg
cmp
cmp
lds
aam
adc
(bad)
mov
movs
dec
mov
es
xor
in
jbe
dec
jnp
mov
test
or
nop
and
or
add
test
pushf
leave
push
and
movs
call
(bad)
(bad)
dec
shl
mov
xchg
and
in
add
sbb
sti
cwde
xchg
mov
sbb
mov
gs
xchg
lea
xor
cmp
scas
lods
call
iret
and
or
sbb
outs
int
test
dec
adc
adc
add
xchg
fisub
or
ins
sbb
dec
popf
push
jle
xchg
cmp
loop
jmp
mov
fsubp
push
shl
inc
cmp
(bad)
sahf
pop
sub
ds
add
inc
push
pop
jmp
fimul
cld
lods
ds
mov
mov
in
push
mov
retf
shl
cmp
push
aad
jp
push
mov
dec
les
cmps
jp
push
imul
cmp
aas
cmps
jns
pop
mov
ret
jmp
mov
cdq
test
xchg
ret
add
sbb
pop
in
or
dec
call
adc
xlat
aaa
push
mov
push
cmp
(bad)
mov
mov
adc
mov
pop
cs
adc
push
cmps
xchg
call
into
push
shl
arpl
inc
mov
fucomp
or
mov
push
cmp
cld
push
xchg
sbb
daa
nop
mov
jno
pop
xchg
and
or
adc
cmps
loopne
repz
xchg
mov
js
imul
hlt
xchg
sub
jle
iret
xor
inc
and
pusha
jbe
mov
push
sub
add
pop
lods
imul
imul
test
cmp
pushf
adc
outs
and
pop
sbb
pop
and
test
mov
in
retf
inc
push
fcom
dec
lea
adc
and
mov
lock
mov
pushf
js
xor
sub
cld
xlat
adc
loop
mov
sti
mov
loopne
or
(bad)
in
mov
cli
push
dec
push
lods
pop
mov
mov
cli
inc
sahf
cmp
add
xchg
in
adc
dec
xor
mov
push
in
inc
adc
sub
mov
(bad)
sub
cdq
into
test
push
sub
inc
xchg
bound
and
retf
pop
mov
sbb
xchg
xchg
loop
daa
push
jbe
lahf
jne
sub
repnz
loopne
rol
xchg
movs
mov
mov
cld
retf
and
adc
cmp
cs
fwait
lods
pop
sbb
lds
dec
mov
xchg
inc
jg
loopne
and
adc
rcr
and
ret
into
mov
xchg
cld
movs
mov
ss
lea
lods
and
cmp
std
jmp
sub
lods
mov
icebp
imul
xor
and
ss
pop
idiv
adc
ins
xchg
in
sbb
call
gs
mov
jno
cmp
shl
stos
and
sbb
push
inc
mov
repz
push
sub
inc
(bad)
jmp
retf
sub
adc
mov
lea
adc
sbb
push
xor
sbb
cmp
sar
dec
xlat
movs
ja
mov
dec
dec
xor
adc
jle
mov
adc
push
or
mov
add
div
mov
shl
pmulhw
shl
frstor
pop
(bad)
in
(bad)
push
sbb
fmul
add
adc
pop
mov
mov
jp
jle
mov
xchg
aad
(bad)
sub
arpl
(bad)
mov
ret
cmp
mov
or
mov
cld
idiv
xor
jbe
shl
push
ins
inc
mov
in
pop
lea
push
cli
scas
mov
das
pop
mov
jns
pushf
retf
inc
gs
rcl
out
sub
movs
mov
xor
jo
mov
jns
push
ret
add
cwde
adc
out
cdq
add
mov
cdq
(bad)
cdq
loopne
(bad)
imul
jae
add
sbb
add
loope
push
fnstcw
retf
icebp
xor
lahf
pushf
lahf
add
fsub
push
mov
cld
jp
mov
sub
repz
pop
or
sbb
punpckldq
addr16
cmp
cmp
cld
clc
es
stos
cmps
push
fadd
imul
dec
lds
jb
adc
mov
adc
lgdtd
sahf
and
loop
cmp
std
sub
pop
push
stos
mov
(bad)
jmp
test
mov
xor
mov
inc
leave
mov
or
pop
test
in
push
and
xchg
je
dec
and
dec
retf
and
inc
stos
loopne
imul
fstp
daa
je
pop
cld
je
ret
scas
adc
or
jmp
pop
pop
fisttp
mov
xor
das
ss
mov
dec
ja
test
jmp
sbb
or
in
add
cmp
adc
repz
retf
aas
sbb
xor
bound
jge
adc
mov
adc
pop
jo
cdq
call
sbb
adc
xor
ror
leave
iret
cmp
daa
int
xchg
pop
jle
mov
sub
lods
cld
mov
cmps
ja
loopne
gs
retf
test
add
jg
add
and
imul
mov
push
mov
mov
sub
fs
pop
push
loope
xchg
cmp
movs
ins
adc
pop
mov
adc
test
loop
out
les
jns
bswap
mov
adc
or
repz
loopne
or
jge
ror
or
cmps
(bad)
push
jg
int
arpl
ret
repnz
fbld
popa
shr
cs
inc
push
xchg
sbb
fs
mov
pop
mov
mov
in
mov
push
stos
mov
imul
jl
mov
out
ds
dec
(bad)
scas
sbb
iret
mov
and
pop
(bad)
jp
mov
icebp
adc
(bad)
xchg
or
jmp
jmp
xlat
lods
sub
pusha
push
cmps
xchg
jns
call
out
push
inc
dec
push
iret
mov
and
xor
mov
jge
loop
rol
popa
cs
pop
aaa
push
stos
lds
and
rcl
sub
clc
fldcw
lods
sbb
jle
call
and
icebp
sbb
add
lods
push
sbb
pop
mov
xchg
in
cli
sbb
add
sub
arpl
fdivr
(bad)
xchg
in
lock
mov
adc
or
or
pusha
cmps
sub
popa
in
cli
aas
in
mov
les
jecxz
mov
xlat
push
js
adc
sbb
inc
inc
adc
mov
cs
rcr
addr16
dec
pop
test
lahf
xor
out
outs
jns
xor
outs
mov
and
mov
cmp
sti
jbe
jge
sub
je
jo
push
fcomp
adc
and
fadd
add
out
jg
pop
jbe
xor
jb
(bad)
xchg
adc
stos
dec
push
xchg
cmp
repz
jge
fisubr
out
and
retf
push
(bad)
pusha
dec
push
or
and
pop
cmp
lods
pushf
pop
dec
inc
push
test
cmp
mov
xchg
push
mov
sbb
icebp
arpl
add
pop
jne
dec
mov
adc
mov
imul
push
pop
ins
push
addr16
jo
sub
and
mov
outs
xchg
adc
adc
into
scas
mov
dec
xchg
fdiv
(bad)
mov
dec
push
hlt
mov
leave
mov
es
mov
nop
and
xor
(bad)
push
pop
xlat
xchg
sbb
inc
outs
hlt
outs
add
mov
scas
cmps
sub
bound
pushf
jge
pop
aad
ror
xor
nop
js
mov
sub
call
push
ja
cmps
push
outs
xor
cmp
jo
outs
jg
scas
test
lds
cmp
xor
xor
(bad)
inc
inc
dec
mov
push
cmp
xchg
xor
rol
sub
adc
mov
popf
fmulp
sub
mov
and
or
call
sub
cmps
loopne
retf
adc
leave
je
fild
popa
push
(bad)
push
icebp
cdq
adc
pop
xchg
jle
or
cs
sub
mov
sub
or
dec
jp
push
mov
xchg
mov
mov
in
loopne
cmp
mov
aam
cmp
movs
xchg
jo
in
rcl
adc
fwait
rcl
sti
outs
xchg
int3
jb
div
dec
push
movs
xor
jle
xchg
add
mov
or
pop
jne
inc
mov
sbb
push
hlt
mov
inc
jmp
mov
mov
and
retf
push
cmps
scas
jmp
add
xchg
ds
(bad)
loop
cmp
push
cmp
(bad)
mov
out
outs
xchg
dec
fidivr
inc
mov
sub
mov
out
cmp
call
lock
jl
mul
les
fdivr
xor
int
out
or
inc
sti
fsubr
pop
adc
jl
mov
push
inc
jmp
into
int3
ja
pop
jmp
adc
retf
lods
iret
push
aaa
cmp
lock
test
mov
jnp
je
xor
retf
test
aas
push
dec
neg
cdq
outs
fistp
xor
aam
pusha
add
ja
stos
cli
adc
sub
cmc
mov
or
and
mov
adc
stos
xor
rcl
sub
daa
or
js
cmp
out
repnz
in
mov
xlat
pop
jno
pusha
fldenv
aad
imul
push
sub
stos
or
push
mov
mov
neg
call
dec
lods
jle
or
and
aas
das
icebp
call
or
out
adc
scas
add
aas
(bad)
sub
mov
xor
jns
sar
loop
aas
sti
repz
or
movs
xchg
mov
shl
jle
xchg
push
into
pusha
cmps
push
push
cwde
xchg
cmp
repz
call
in
les
(bad)
popa
cmp
lahf
cmp
mov
or
mov
cmp
(bad)
push
jae
(bad)
xchg
popf
cs
push
add
mov
sti
adc
aas
mov
jno
jb
test
mov
popa
mov
and
ins
in
gs
das
add
dec
retf
push
aad
add
ds
jl
adc
sbb
add
xchg
loop
jo
push
mov
cmp
jno
test
sub
xchg
pop
or
adc
xchg
pop
ss
push
mov
inc
aam
shl
outs
add
push
arpl
mov
lods
cmp
inc
call
xchg
push
jl
mov
adc
mov
mov
cmp
mov
js
push
or
add
jge
fdivr
pop
sti
xchg
jle
cmp
mov
add
stc
int3
add
(bad)
imul
pop
retf
sub
xor
div
movs
push
shl
cmps
adc
out
xchg
mov
mov
icebp
inc
dec
aad
in
neg
loopne
xchg
int
cmp
icebp
outs
loope
movs
pop
or
push
jns
jbe
loopne
mov
cmc
lea
mov
rol
or
cld
inc
ins
test
test
nop
fisubr
xchg
ins
int3
(bad)
jle
dec
in
mov
dec
ret
mov
dec
jno
xchg
in
sbb
iret
pop
pop
mov
pop
cmp
cmps
or
sahf
jl
fidivr
push
sub
repnz
fs
cs
dec
dec
aad
popf
cmp
dec
sahf
fidivr
aas
cld
stos
data16
addr16
dec
inc
pop
lahf
bound
and
pop
ins
xchg
(bad)
xor
xor
xlat
sti
call
test
xor
add
loop
sbb
jo
fisubr
ins
aas
ja
aaa
loope
xor
mov
call
mov
fwait
test
jg
pushf
bound
aad
pop
scas
mov
xchg
push
data16
out
push
imul
pop
pop
sbb
ins
mov
cmp
call
scas
out
gs
fstp
stos
cmp
mov
push
jo
imul
sbb
(bad)
out
or
imul
mov
sub
mov
adc
fadd
sti
jno
addr16
mov
sbb
icebp
loope
lahf
cmps
cmps
dec
jb
cdq
mov
lock
loopne
add
xor
test
pop
imul
call
js
aas
jbe
test
fldcw
cmps
mov
sbb
cdq
cld
push
lods
fdiv
movs
xchg
cld
sub
movs
xchg
sar
pop
mov
or
in
push
lock
shr
mov
popf
scas
ins
cmps
ins
pusha
sub
adc
pop
xor
mov
sbb
scas
shl
and
loop
pop
icebp
inc
push
mov
sbb
dec
shl
xchg
rcr
cmps
(bad)
movs
sbb
sub
cmp
loope
js
xchg
fmulp
dec
xor
test
daa
adc
aaa
cli
lods
loope
jo
imul
test
ss
cmp
push
push
dec
mov
dec
xor
xchg
sub
sub
(bad)
cli
dec
dec
shl
dec
or
ds
push
adc
lahf
pop
mov
add
mov
inc
mov
xor
lds
mov
sub
adc
push
jns
jmp
add
scas
mov
fndisi(8087
mov
retf
fsubr
and
xor
adc
mov
pop
jg
lods
xor
mov
and
arpl
jns
mov
aaa
mov
inc
jl
ror
jo
jmp
movs
xchg
and
sub
imul
rol
pop
test
shr
mov
pusha
fstp
mov
pusha
xor
(bad)
test
and
pop
jnp
out
add
pop
mov
daa
mov
test
bound
push
sbb
out
xor
dec
in
test
push
cmp
push
hlt
inc
(bad)
push
push
or
inc
pop
jmp
mov
dec
aas
pop
fdivrp
(bad)
jbe
pop
ins
mov
mov
inc
retf
das
call
nop
mov
jge
loope
xchg
inc
or
push
stos
xor
sub
jmp
repz
in
and
pop
rol
sahf
and
retf
data16
mov
inc
adc
sub
jno
pop
pop
xchg
add
push
ss
mov
or
nop
push
mov
adc
add
das
push
and
sbb
pusha
js
jae
mov
push
dec
dec
push
cdq
push
sub
jecxz
mov
shl
pop
dec
pushf
push
inc
jno
imul
add
out
cmp
test
into
loopne
aas
inc
cmp
mov
ret
jge
in
sbb
retf
add
mov
test
in
ins
sti
rcl
(bad)
sub
ror
mov
mov
dec
mov
push
sub
je
daa
rcl
mov
xor
retf
lods
and
add
push
sar
cld
jns
jmp
jmp
or
jmp
shl
xor
push
stos
fmul
push
cmc
jne
sbb
ss
(bad)
jae
nop
and
call
cs
mov
ja
mov
jne
jmp
inc
fdivr
add
in
mov
out
add
imul
xchg
iret
aad
ja
pop
or
adc
dec
aas
das
inc
das
push
adc
scas
icebp
hlt
and
pop
mov
add
xor
sbb
add
mov
lods
je
add
xor
ret
ins
popa
mov
cmp
rcl
push
dec
ret
ja
sub
xor
or
mov
xor
mov
dec
sub
adc
pusha
sbb
add
les
div
mov
loop
jnp
outs
mov
loopne
mov
push
stos
or
jle
jl
leave
inc
add
loopne
(bad)
(bad)
and
(bad)
mov
(bad)
out
mov
add
jl
and
mov
adc
test
inc
sbb
imul
push
cmp
(bad)
fbstp
ret
jle
push
cmps
and
movhps
xchg
pmaddwd
mov
or
dec
dec
sbb
fld
push
push
mov
dec
lods
add
push
pop
sbb
pop
cmp
cmps
adc
aaa
xchg
jmp
rcl
add
pop
or
hlt
arpl
mov
jne
jl
mov
adc
jbe
es
inc
cmp
inc
jno
outs
cmp
les
push
mov
jnp
pusha
push
mov
adc
or
push
sar
fidiv
ror
enter
lock
mov
xor
call
cmp
lods
pop
lods
sbb
mov
(bad)
xchg
(bad)
aas
icebp
cmps
aas
ret
lds
hlt
jae
fcomp
and
or
jge
ret
hlt
jl
mov
xchg
ret
mov
xchg
(bad)
jmp
int
push
lods
sar
test
adc
das
adc
cmp
or
mov
(bad)
mov
adc
adc
inc
int
sbb
adc
test
test
push
mov
enter
mov
pop
jo
dec
adc
xor
add
enter
lds
sub
adc
xor
push
shl
mov
aas
lock
mov
les
out
outs
rcl
inc
push
and
cwde
jbe
mov
or
in
pusha
(bad)
jnp
test
cmp
(bad)
push
test
and
cli
adc
(bad)
jmp
das
push
mov
xchg
outs
push
mov
adc
mov
dec
ds
ds
sbb
jl
add
int
les
jecxz
sbb
(bad)
leave
mov
push
retf
inc
mov
add
inc
mov
mov
into
out
or
mov
popa
enter
(bad)
outs
inc
ss
or
inc
jno
inc
fmul
pop
cmp
xchg
jmp
repz
add
or
inc
xchg
lods
mov
outs
push
fwait
cmp
mov
in
mov
aam
sub
cmp
mov
int
adc
fwait
out
sbb
push
les
pop
dec
push
daa
out
cmps
dec
sbb
pop
stos
pop
cmp
push
jg
or
pushf
adc
sbb
sahf
loop
xchg
jg
movs
lock
inc
mov
daa
mov
push
div
fadd
push
sbb
lock
adc
or
dec
clc
(bad)
movs
pop
aam
mov
add
pop
cmps
xor
jae
jno
ins
aam
hlt
lahf
dec
lds
loope
push
outs
dec
dec
vpsubw
call
push
scas
xchg
fs
jne
nop
ret
add
dec
add
hlt
and
call
mov
in
fstp
sbb
or
gs
xchg
add
sub
ja
test
fidivr
test
cmp
ror
movs
loope
adc
(bad)
std
adc
out
and
mov
call
stos
in
adc
push
test
div
pop
ror
outs
and
adc
and
(bad)
cli
mov
pop
sbb
(bad)
fdivp
push
test
sbb
push
fmul
std
and
jmp
pop
xor
repz
shl
or
(bad)
fist
cli
es
xchg
mov
mov
imul
jge
pushf
shr
mov
imul
cmp
mov
pop
and
fstp
jle
test
mov
mov
push
or
pop
cmp
push
jno
lods
(bad)
enter
sbb
addr16
(bad)
jle
imul
mov
xchg
cs
sub
push
or
xor
(bad)
leave
test
lea
push
fdiv
mov
push
cdq
div
mul
outs
das
sbb
xchg
jp
mov
and
test
sbb
jne
fs
jbe
je
(bad)
jns
cmp
sbb
xchg
sbb
sbb
lahf
adc
xor
fist
push
repz
mov
in
inc
int
xchg
and
xchg
fild
lahf
cmp
xchg
push
js
es
xchg
popa
dec
jg
aad
mov
pop
cld
push
mov
jge
and
adc
test
push
or
and
pop
push
enter
mov
sahf
iret
sti
sbb
push
sub
or
in
fdiv
leave
sahf
loop
ror
(bad)
jmp
pop
in
xor
(bad)
mov
sub
les
sti
sti
adc
push
mov
imul
push
cmp
inc
pop
int
js
jge
fist
ss
mov
popf
fnstenv
out
jecxz
movs
adc
and
std
sub
pop
or
jmp
cs
ret
in
xor
pop
push
inc
jo
ficom
fst
pop
add
outs
call
lods
vmread
(bad)
cmp
xchg
dec
xchg
or
data16
pop
mov
aam
test
xor
test
call
enter
dec
add
sbb
fild
stc
fild
xchg
cmps
enter
cmp
jb
and
test
loopne
cmp
outs
popf
rcr
cmp
and
mov
in
and
int3
pusha
xchg
(bad)
jmp
jb
ss
xchg
or
sub
jno
jae
jb
add
(bad)
fwait
fwait
dec
jae
cli
outs
shr
lea
sub
xor
mov
adc
mov
xchg
pop
mov
inc
sti
add
xchg
and
push
call
or
lds
push
xchg
bound
mov
(bad)
jle
mov
and
inc
push
inc
movs
dec
test
loop
add
mov
adc
daa
adc
inc
pop
loop
int
jg
jbe
dec
(bad)
(bad)
jge
xor
stos
daa
loopne
test
lock
push
and
sar
jo
push
movs
icebp
jnp
imul
jmp
jl
push
push
aas
or
push
dec
aad
add
ins
pop
sub
adc
frstor
push
int
jl
jne
adc
cmp
pop
sbb
mov
loop
adc
pushf
push
cmp
pop
loope
pop
sar
jae
cli
pop
mov
xor
jmp
fld
add
lods
mov
arpl
mov
xchg
cld
ret
push
sbb
(bad)
int
sbb
push
mov
cmp
and
push
jbe
jg
dec
pop
repnz
jbe
sar
fldcw
clc
cli
mov
mov
and
stos
pop
sub
ins
push
mov
push
pop
sub
cs
loopne
mov
ja
mov
(bad)
movs
xor
ins
icebp
xor
ja
aam
loope
cli
call
test
add
inc
div
dec
jmp
fisttp
mov
jmp
(bad)
dec
mov
cmps
adc
lods
les
pop
lahf
ficom
inc
push
fdivr
lods
pop
test
inc
nop
stos
jp
scas
repnz
repz
enter
sar
popa
scas
inc
jmp
shl
inc
jno
pop
mov
xchg
cmp
cli
fs
(bad)
aam
inc
addr16
aam
ins
add
out
test
in
rcl
fwait
or
imul
test
cmp
div
mov
jmp
cmp
add
movs
mov
int
mov
and
pop
ror
mov
xor
mov
inc
(bad)
stos
cwde
cmp
xor
repnz
adc
cmps
and
je
rol
xchg
inc
lds
loop
(bad)
lock
jbe
or
sbb
in
and
jmp
pop
mov
dec
dec
xor
inc
in
xchg
mov
scas
inc
dec
pop
arpl
push
dec
push
daa
mov
call
mov
mov
jae
iret
leave
mov
movs
sbb
jo
imul
jecxz
lods
add
adc
icebp
mov
out
push
scas
adc
add
pop
test
ret
retf
mov
dec
scas
jle
pop
lea
adc
or
loopne
jmp
pushf
cmp
mov
inc
ins
shl
mov
xor
in
retf
pusha
push
cmp
stos
xor
in
loop
mov
mov
adc
lods
push
scas
jl
jge
mov
cwde
or
xchg
sub
cmp
inc
clc
mov
pop
cmc
adc
push
ja
test
xor
sbb
test
adc
dec
lds
mov
ss
rol
out
iret
pop
dec
cmc
pushf
leave
or
mov
cmc
lods
iret
push
ret
mov
add
add
sbb
pop
xor
xor
jle
je
call
cmp
out
pusha
in
rcl
mov
dec
pop
int3
int3
push
cwde
push
icebp
data16
sub
mov
mov
jp
mov
sar
jne
enter
out
jecxz
in
sbb
arpl
rol
cmp
xchg
(bad)
movs
sbb
stos
inc
xor
in
mov
mov
mov
mov
aad
add
xchg
dec
pop
xor
cmp
outs
test
scas
jle
mov
jo
xor
push
(bad)
xor
in
xor
mov
or
push
xor
sub
mov
xlat
out
mov
fs
adc
pop
call
sbb
(bad)
cmps
sahf
es
dec
push
and
adc
add
mov
lock
push
jecxz
jne
and
jo
jle
push
or
imul
arpl
adc
pusha
jge
xor
push
bound
mov
(bad)
mov
data16
xor
add
ret
stc
push
movs
ret
pop
mov
imul
mov
push
mov
push
dec
ins
rcr
cwde
repnz
fbld
lea
or
int
push
inc
mov
mov
arpl
add
icebp
shr
push
and
pop
sub
iret
lock
or
xchg
idiv
std
fidiv
inc
and
push
repnz
test
imul
mov
mov
pop
xor
std
(bad)
dec
or
repnz
pop
into
pop
sti
imul
shl
std
pop
adc
xchg
aam
ja
jb
xor
mov
xor
jge
inc
push
inc
sub
fld
cmp
sahf
push
pop
adc
pop
push
arpl
fidiv
dec
aas
or
icebp
in
ins
addr16
cdq
std
or
xlat
pop
fcomp
xchg
push
rol
adc
mov
xor
sub
inc
mov
jnp
retf
mov
leave
and
mul
push
rcr
mov
in
push
test
call
in
jne
retf
pushf
psllq
push
stos
mov
cmp
mov
dec
sbb
xor
fucom
lahf
sar
mov
xchg
add
adc
movs
mov
retf
jge
dec
dec
xor
in
mov
jg
and
hlt
rol
push
pop
mov
pop
ss
push
dec
fdivr
loop
cmps
data16
jo
repz
cld
push
add
imul
push
push
add
scas
xor
sub
mov
fucomp
and
jmp
fdivr
js
inc
sti
arpl
lea
cmp
(bad)
pop
cmp
cmc
in
ret
sub
repz
mov
cmps
in
cdq
lods
cmps
mov
outs
stos
jo
test
int3
pop
call
inc
pop
repnz
xchg
pop
push
adc
mov
sbb
pop
mov
mov
jo
inc
push
cmp
sbb
pusha
retf
adc
sti
cmp
mov
popf
fisttp
in
stos
mov
retf
rol
inc
push
in
xchg
and
add
push
dec
sahf
stos
hlt
in
call
dec
lea
cdq
(bad)
fistp
scas
test
fs
inc
dec
xchg
jns
(bad)
outs
sti
jge
frstor
lds
(bad)
in
pop
out
fwait
cmc
cmp
adc
cmp
sbb
xchg
sahf
ja
(bad)
dec
dec
cmp
fsubr
icebp
or
xchg
jl
fcomp
lods
lods
test
int3
lods
push
shl
push
jbe
add
xor
add
cwde
mov
mov
push
int3
mov
enter
cmp
sbb
mov
inc
push
movs
mov
psubq
xor
mov
ds
dec
cmp
je
mov
cmc
dec
lds
loopne
gs
ficom
push
cwde
mov
jnp
xchg
and
aam
adc
inc
xor
push
sbb
vaddpd
and
dec
popa
xchg
call
xor
mov
in
cdq
loopne
call
fild
(bad)
repnz
mov
adc
fwait
pop
aas
arpl
sbb
arpl
dec
lahf
(bad)
mov
and
stc
or
add
jo
clc
(bad)
sub
out
inc
mov
popa
sahf
stc
aam
xor
sub
xchg
or
mov
sub
lock
mov
ss
cmc
xor
jl
and
std
movs
nop
stos
fdivr
jl
dec
ins
dec
out
(bad)
cmp
adc
cmps
out
pop
fidiv
mov
rcr
outs
pop
std
dec
sub
(bad)
sbb
adc
jo
mov
(bad)
mov
push
retf
dec
movzx
bound
test
ror
and
hlt
xor
cmp
popa
pushf
mov
push
inc
jle
pop
in
test
and
(bad)
mov
mov
pop
mov
es
mov
pusha
imul
sbb
mov
(bad)
mov
stos
or
je
stc
sub
xchg
scas
pushf
push
call
pop
push
ins
dec
popa
rcl
les
dec
add
lea
adc
pop
leave
push
dec
xchg
mov
into
dec
aam
or
fmul
inc
in
push
addr16
pushf
xchg
hlt
or
out
adc
cmp
sub
pop
call
test
in
mov
or
pop
fldlg2
push
ins
add
daa
sti
leave
xchg
xchg
sbb
push
inc
dec
movs
lods
mov
push
add
cld
jbe
jp
cmp
in
mov
sub
mov
retf
in
xor
shl
mov
test
mov
fwait
xor
xchg
xchg
fstp
mov
cmp
je
pop
xor
out
add
xchg
mov
jbe
sub
scas
adc
mov
setg
mov
fdiv
or
aam
pop
iret
xor
ins
or
adc
ss
out
jl
sahf
pop
(bad)
aad
sbb
add
mov
mov
and
gs
in
repz
fmul
cmp
cmps
shr
ret
repnz
mov
je
add
mov
jmp
(bad)
(bad)
std
adc
push
jp
test
sub
cli
arpl
or
mov
pop
pop
pop
mov
push
jne
popa
pop
xor
je
sub
loopne
test
leave
int
cmc
mul
cdq
adc
xor
or
xor
dec
pop
xchg
or
gs
ins
cmc
jbe
or
shr
jg
xchg
pop
repnz
mov
pop
fcomp
pop
ds
sub
inc
fdivp
movs
clc
(bad)
or
test
outs
stc
call
iret
js
cmp
and
add
(bad)
(bad)
out
sbb
jo
inc
lds
xor
cmp
popa
cmp
xchg
rcr
jl
add
aam
repnz
inc
clc
mov
sbb
nop
test
lea
repnz
cdq
mov
mov
call
mov
in
daa
push
mov
sub
sahf
shl
idiv
jbe
sahf
arpl
stos
pop
neg
aas
in
imul
add
sbb
js
xchg
jmp
push
je
xchg
push
jb
mov
(bad)
into
iret
or
jp
les
push
push
sbb
dec
add
shl
rcl
push
outs
xchg
lock
jecxz
shr
lds
cld
into
data16
lahf
push
pop
mov
cmp
inc
repnz
pop
cmp
in
retf
in
mov
cmp
(bad)
aam
mov
pushf
clc
in
sub
push
xor
mov
cdq
mov
fsubr
sub
mov
(bad)
pop
xchg
in
dec
push
xchg
and
pop
adc
mov
push
test
xor
(bad)
ja
cmp
add
das
test
xchg
and
inc
je
jmp
push
mov
sub
sub
jne
push
imul
xchg
test
scas
fs
std
leave
shl
jp
mov
enter
ins
icebp
nop
xor
fmul
cmps
je
sub
adc
sub
pusha
lods
cmp
popf
xchg
push
xchg
pop
test
mov
lods
inc
scas
sub
ds
ds
out
fmul
and
pop
ja
shl
or
pop
pushf
imul
adc
jge
mov
test
mov
imul
inc
mov
jno
inc
popa
or
in
(bad)
sti
xor
lahf
or
mov
xor
adc
cwde
xor
int
push
loop
or
addr16
jp
dec
(bad)
or
retf
leave
sbb
dec
cmc
ret
das
xchg
or
fadd
jbe
repz
scas
lods
repz
out
mov
jecxz
je
adc
cmps
fwait
sti
mov
adc
sub
retf
imul
arpl
iret
ins
fnstsw
ds
fs
retf
mov
xor
out
xor
movs
adc
jecxz
dec
dec
cdq
fwait
pop
stos
jae
xchg
sahf
pop
xchg
outs
add
test
ins
(bad)
cmps
pop
daa
mov
or
mov
add
je
inc
aas
neg
bound
cli
shl
pop
jns
push
int3
xor
lods
xor
test
stc
and
sbb
(bad)
push
daa
sahf
sbb
dec
and
mov
push
xlat
(bad)
dec
sti
out
cs
ds
inc
das
loope
loop
jno
jp
sti
ds
stos
cmp
outs
mov
push
add
mov
mov
scas
iret
loope
pop
jb
mov
(bad)
adc
jl
xor
fadd
jp
mov
bound
sti
dec
(bad)
shr
scas
push
out
mov
inc
stc
lods
lahf
ds
xchg
movs
and
cmp
add
test
std
push
arpl
dec
retf
or
or
sbb
mov
jecxz
jmp
inc
adc
mov
iret
nop
dec
std
mov
add
je
pop
pop
and
popa
jge
out
mov
leave
push
into
arpl
in
sub
test
std
xor
xor
mov
push
ror
int3
or
fcom
and
leave
cli
ret
lock
push
bound
lahf
and
scas
xlat
scas
add
mov
in
mov
icebp
jmp
stc
cmp
sub
movs
push
xor
and
jge
adc
sbb
adc
push
fild
adc
aam
(bad)
daa
clc
push
mov
add
shl
add
call
add
jmp
call
add
out
fimul
pop
and
push
ret
test
xor
sub
leave
mov
cld
addr16
scas
push
jmp
movs
push
xchg
dec
sub
mov
loopne
push
mov
or
ret
les
jl
sub
inc
jmp
push
dec
inc
clc
inc
xchg
add
cmp
adc
jne
push
lods
shl
pushf
ret
mov
cmp
cs
dec
call
mov
pop
jno
sub
mov
jae
pop
mov
cmp
sbb
lods
pop
fsub
adc
mov
inc
jle
or
imul
retf
(bad)
inc
push
inc
mov
lea
test
or
pop
jnp
pusha
cmc
xchg
cli
fnstenv
xor
(bad)
sti
in
add
dec
int
add
xor
jmp
dec
cdq
jbe
ds
fidivr
test
das
and
mov
leave
int
mov
push
sti
cwde
loope
xchg
sbb
mov
mov
inc
push
ins
movsx
push
nop
dec
push
div
pop
fld
cmp
xchg
jae
mov
inc
repz
mov
rcr
test
sbb
movs
dec
rcl
shl
push
adc
fs
sbb
add
mov
xchg
(bad)
jg
mov
fcomp
or
jl
int3
xlat
test
sbb
int
xchg
cld
and
jecxz
adc
xchg
ret
(bad)
(bad)
and
stos
mov
ds
out
je
repz
or
xor
test
sub
(bad)
dec
inc
call
inc
scas
sbb
out
sub
jnp
aaa
dec
aad
ds
sub
push
cld
hlt
movs
push
xlat
mov
fnstcw
sub
and
ror
push
ins
adc
inc
sbb
and
push
sbb
xor
pop
scas
leave
jbe
adc
add
xor
aas
mov
sti
lea
mov
mov
test
fisubr
ret
std
push
push
mov
lock
fnstsw
loope
cmc
inc
lods
xor
addr16
or
jg
in
pop
sbb
mov
cmp
mov
mov
sti
iret
or
jmp
call
arpl
jmp
shr
push
imul
cmp
xor
xor
push
jmp
pop
jge
pop
jns
push
cmp
add
jae
scas
xor
aaa
mov
mov
dec
test
jne
stos
mov
out
(bad)
sar
std
mov
retf
mov
shr
adc
mov
sbb
sbb
shl
jae
pop
dec
add
mov
fadd
mov
jb
or
mov
jne
and
data16
std
and
test
mov
sbb
(bad)
repz
or
fisubr
fcom
adc
(bad)
adc
movs
and
mov
xor
mov
test
xchg
adc
lods
mov
outs
jne
fimul
cs
push
out
mov
stos
sub
pop
sbb
enter
pop
fucom
xor
xchg
mov
lods
inc
sub
int
ja
mov
std
out
and
adc
fisub
mov
push
jmp
jecxz
(bad)
mov
sub
lods
adc
add
int
pop
dec
mov
cli
repnz
in
mov
in
xchg
adc
mov
clc
aaa
arpl
inc
aad
inc
or
jb
mov
ret
mov
iret
or
jg
js
sbb
sub
ret
dec
rcr
lea
jnp
xchg
cs
cmp
std
adc
(bad)
int3
and
pusha
pop
scas
lods
push
out
pushf
push
and
dec
lahf
outs
pop
fsubrp
dec
add
mov
pop
stc
out
mov
imul
aam
jns
push
and
mov
call
inc
jne
mov
out
jle
aaa
mov
sbb
out
adc
sbb
fcomi
push
xor
pushf
movs
push
jp
mov
mov
jmp
jge
fst
dec
push
sub
jp
aam
xor
mov
aad
or
push
jl
ss
xor
int
inc
adc
jmp
push
mov
push
fs
and
jne
fucomp
and
inc
mov
mov
xor
sbb
inc
or
(bad)
(bad)
mov
test
mov
xchg
int
lea
jmp
retf
or
clc
out
addr16
cmps
scas
in
inc
sub
jns
add
xor
add
mov
and
push
into
jnp
mov
mov
aaa
loopne
data16
repnz
hlt
cmp
in
jnp
dec
retf
mov
pop
sbb
rol
pop
and
xor
lods
in
push
addr16
aam
jge
mov
jmp
bnd
pop
xchg
sti
sbb
int3
dec
jle
sbb
pop
ins
add
xlat
in
adc
gs
rcr
lock
int3
and
inc
repz
cmp
or
mov
mov
imul
jbe
push
mov
and
mov
mov
and
es
in
or
lods
dec
push
les
xor
retf
sbb
jns
shr
lahf
dec
inc
cmp
cld
push
mov
ss
jmp
scas
addr16
outs
fs
sbb
xchg
in
stc
cmc
jo
add
and
pop
mov
mov
(bad)
stos
jns
xchg
inc
dec
jns
and
lahf
push
loope
lock
dec
adc
fs
pop
or
rcl
hlt
ret
mov
pop
shl
add
mov
add
cld
outs
jecxz
dec
mov
fistp
pop
add
retf
mov
cmp
enter
gs
call
fucomi
out
push
cmps
mov
in
leave
push
sbb
jmp
or
and
hlt
jbe
pop
cmp
sbb
int3
int3
pusha
sar
xchg
sbb
mov
rcr
(bad)
add
(bad)
fcmovu
xor
add
fnsave
mov
repz
jnp
dec
or
cs
fldpi
xchg
jbe
dec
test
fnstcw
mov
pop
cmps
jl
loopne
das
jo
cmovnp
pop
test
cmp
cmp
call
dec
and
adc
mov
les
ins
sbb
shr
imul
ret
test
sahf
iret
fist
leave
fwait
mov
pop
pop
in
movs
adc
sbb
jne
add
push
push
jle
mov
jmp
pop
neg
push
mov
daa
ins
sbb
sub
jp
das
loopne
repz
pop
mov
stos
ret
xchg
ror
sub
mov
(bad)
(bad)
outs
mov
adc
adc
ret
aas
xchg
pop
mov
sbb
lock
xor
ins
cmc
aad
mov
sbb
pusha
mov
and
ficomp
shl
out
push
push
pop
call
in
fst
xchg
shl
out
mov
push
pop
leave
xchg
mov
push
xchg
dec
and
movs
mov
xchg
call
iret
movs
add
scas
push
ins
xchg
cwde
fcom
out
pop
sbb
mov
test
push
mov
fnstenv
imul
test
popa
ins
repnz
push
pop
xchg
sbb
jle
stos
loopne
push
int3
out
push
gs
mov
bound
mov
mov
mov
and
popa
xor
push
jmp
jne
sti
lods
adc
lods
stos
cdq
leave
sub
repz
push
add
cli
retf
bound
jge
and
rcr
scas
cmp
sub
sbb
dec
into
in
or
push
mov
popf
mov
sahf
js
rcr
ja
push
cmp
sahf
std
sbb
rol
mov
and
mov
cmp
sub
sbb
imul
lea
dec
xor
call
jo
add
mov
xchg
cmp
or
scas
fiadd
imul
push
or
(bad)
sbb
fwait
jmp
cdq
call
loopne
adc
xchg
mov
mov
repz
or
mov
dec
jns
test
dec
xor
pop
retf
lods
leave
push
and
idiv
ja
imul
push
add
or
xchg
dec
call
call
aad
stos
adc
dec
mov
outs
sahf
xchg
cld
xchg
sbb
call
dec
les
shr
inc
mov
jb
xlat
stc
outs
mov
sti
inc
adc
pop
jno
aad
scas
and
fstp
daa
xor
out
mov
mov
or
or
xor
movs
mov
add
add
lea
push
jp
mov
xchg
inc
push
loope
dec
mov
jns
jnp
pop
(bad)
ja
lahf
lds
cmp
out
(bad)
or
movs
jb
dec
vpsubb
or
xchg
mov
call
into
push
xchg
repz
mov
xchg
adc
aam
shl
mov
dec
daa
sbb
sbb
mov
int
popf
sbb
mov
cli
das
xchg
jns
iret
or
mov
popf
lods
aam
ret
pop
test
jb
out
and
xchg
sbb
xchg
jmp
cmp
xor
imul
adc
xor
pop
xchg
mov
adc
out
pop
xchg
sbb
inc
lds
cmp
push
jmp
jmp
dec
ret
addr16
jnp
inc
lea
sbb
pop
leave
inc
cmp
inc
dec
scas
add
and
gs
push
fstp
sbb
aad
sbb
fidivr
and
fdivr
adc
ins
mov
push
repnz
pop
push
in
sub
rol
in
fisubr
inc
sbb
call
pusha
popf
add
xchg
jle
ins
mov
not
pop
aam
dec
xor
sahf
cli
add
mov
xor
test
jne
mov
xor
xor
cmp
xchg
int
push
and
lods
jecxz
push
sub
push
sub
adc
xchg
bound
scas
je
test
mov
pop
dec
dec
stc
rol
adc
nop
vpshlq
push
(bad)
sub
es
into
push
leave
jno
cmp
push
je
call
push
adc
inc
mov
(bad)
lods
ds
dec
mov
xor
or
pop
sub
icebp
inc
dec
lods
imul
into
pop
or
mov
retf
pop
pushf
sub
sub
neg
pop
jl
out
rep
retf
scas
loopne
inc
dec
stos
and
cli
push
jge
add
add
call
xlat
ins
add
gs
lahf
sub
test
cmp
outs
dec
push
pop
test
out
sbb
imul
mov
mov
addr16
and
jne
jb
pop
push
jns
inc
lock
xchg
js
jne
(bad)
xchg
data16
sub
shl
dec
hlt
sub
imul
inc
inc
fmul
daa
inc
mov
pop
(bad)
cmp
imul
ret
sbb
mov
sbb
in
push
lds
dec
inc
js
nop
into
hlt
fidiv
loopne
jns
mov
daa
sub
adc
mov
sbb
sar
sub
bound
pusha
xor
std
sbb
mov
push
repz
sahf
jp
test
scas
xor
or
ret
jecxz
div
add
pop
cmp
sbb
sub
xor
test
addr16
(bad)
mov
and
sub
call
jl
cdq
cmps
cmp
push
add
movs
lods
xchg
dec
scas
mov
inc
jmp
lahf
iret
pop
je
pop
adc
or
push
and
pop
push
cmp
mov
fmul
mov
out
pushf
std
dec
mov
cmc
scas
mov
int3
rol
sub
ins
jns
sbb
cld
pop
jb
push
paddusw
mov
out
outs
sub
adc
sbb
(bad)
(bad)
in
out
mov
into
out
mov
int
and
imul
aaa
cmp
retf
jp
xchg
enter
cmp
cmp
lods
xchg
mov
cwde
xchg
xchg
(bad)
sub
stos
pop
dec
and
pop
loopne
daa
addr16
out
jbe
add
push
shl
inc
dec
cmp
or
pop
pop
dec
jne
iret
push
cld
scas
fidivr
test
push
test
les
mov
or
add
ret
xchg
and
mov
dec
push
jnp
xchg
xchg
push
pop
mov
xlat
xor
sub
fnstsw
fstp
and
mov
(bad)
pop
sahf
hlt
mov
xchg
scas
xor
pop
daa
pusha
pop
jg
aaa
mov
sub
fsubr
test
imul
pop
inc
jno
mov
shl
hlt
mov
btc
mov
cmp
mov
test
jp
sub
xor
popa
nop
cmp
popa
pop
in
fisubr
arpl
imul
aad
inc
inc
inc
push
xchg
cmp
ret
xchg
push
mov
loop
pop
cmp
hlt
dec
add
movs
mov
jo
and
aas
jnp
pop
mov
mov
mov
daa
cmp
push
pop
rcr
pop
mov
ret
in
ficomp
movs
fiadd
sbb
xchg
test
add
mov
xchg
ins
dec
test
iret
loop
push
xor
(bad)
rol
je
lods
xchg
in
pop
sti
stos
in
aam
cmp
and
mov
ret
jbe
outs
stos
or
mov
mov
pop
and
aad
mov
call
cmps
jns
call
fs
loop
xor
fnstcw
iret
mov
in
add
mov
fld
sub
cdq
into
jne
push
and
fldcw
mov
xchg
retf
shl
jno
add
(bad)
inc
jbe
stc
psllw
mov
bound
xor
mov
mov
rcl
(bad)
stos
(bad)
xor
loop
or
mov
jne
xor
lods
or
aad
aas
lods
aam
push
dec
fmul
imul
adc
cmps
adc
inc
dec
or
cdq
sub
push
pop
mov
fwait
xchg
mov
xchg
xor
jbe
or
xor
adc
mov
sbb
lock
xor
popf
inc
test
mov
into
jge
daa
dec
push
test
or
cmp
aaa
add
push
push
xor
pop
mov
int3
cs
xchg
or
inc
pop
pop
and
xchg
imul
pusha
sub
xor
stc
ins
mov
(bad)
xor
(bad)
stc
jle
add
inc
gs
inc
clc
pop
push
(bad)
pop
mov
pusha
xlat
and
imul
stos
dec
or
adc
repz
les
ret
jecxz
jo
stos
lock
add
push
sbb
mov
mov
test
ins
jbe
call
leave
pop
dec
ds
es
jne
(bad)
jg
xor
xchg
sub
(bad)
cmps
fistp
outs
and
or
cmp
iret
fld
add
mov
fisubr
xchg
iret
push
enter
add
call
daa
stos
mov
jno
sub
sub
push
pop
adc
adc
hlt
aad
inc
icebp
push
mov
jmp
inc
jl
ins
in
mov
jp
pop
ds
dec
out
or
shl
dec
jg
and
pop
retf
movs
and
mov
dec
es
rcr
ja
push
cld
jo
imul
or
lods
popa
and
sub
sbb
inc
xor
popf
xchg
ja
outs
push
hlt
and
sbb
lea
ins
stc
fsubr
lods
mov
mov
jno
fimul
push
movs
imul
mov
push
rol
fisttp
cld
or
and
mov
je
outs
mov
adc
data16
outs
adc
adc
xor
jb
(bad)
mov
sbb
test
push
and
and
pop
in
arpl
pop
popf
enter
xor
cmp
jmp
stc
pop
(bad)
iret
xor
dec
into
mov
dec
popa
imul
mov
jns
call
xchg
push
std
loop
cmp
arpl
inc
sub
adc
cmp
dec
mov
mov
(bad)
in
mov
(bad)
ret
cmp
pop
stos
(bad)
xor
sub
or
xor
dec
mov
sahf
and
or
cmps
dec
mov
jge
sub
ficomp
inc
nop
jl
(bad)
cs
fcomi
mov
jne
fdiv
pop
and
adc
add
test
shl
mov
lds
fld
(bad)
lods
mov
ror
jo
jecxz
int3
jmp
retf
sbb
dec
pop
into
jp
popa
or
mov
inc
or
mov
jg
and
push
in
pop
pop
sub
stos
test
mov
mov
(bad)
inc
mov
rol
lea
fstp
sti
iret
rol
(bad)
hlt
push
add
cmp
out
or
test
loopne
xor
inc
mov
and
dec
lds
mov
inc
ins
out
push
mov
cs
repz
int3
add
xchg
and
adc
jbe
popa
int
add
imul
loopne
mov
push
inc
cld
arpl
(bad)
lods
xor
loop
push
xchg
sbb
cmps
jg
sahf
lods
test
xchg
cmps
sbb
mov
ficomp
mov
pop
addr16
sub
(bad)
xor
or
jne
xor
cmp
loope
mov
inc
sbb
int3
cmps
inc
pop
(bad)
push
icebp
ror
cmps
es
loop
jmp
pop
fadd
sbb
cmp
mov
mov
pop
aad
inc
outs
jnp
lods
mov
xchg
(bad)
push
or
cmp
xchg
retf
jge
dec
cmp
fldenv
or
pop
mov
and
ins
mov
loop
push
push
cmps
jne
dec
jnp
mov
add
xor
dec
popa
inc
jp
sub
in
fnstcw
add
add
xor
loope
jmp
push
cwde
mov
fucomip
popf
mov
dec
adc
dec
dec
loope
mov
mov
push
jno
les
outs
faddp
aaa
or
loop
mov
call
add
dec
push
xchg
aas
jp
fwait
dec
jno
shl
inc
xchg
out
fnsave
mov
(bad)
push
shl
cmp
rcr
scas
test
std
repz
stos
lods
loope
xchg
addr16
(bad)
out
add
shl
lods
pop
push
pusha
xlat
pushf
mov
mov
daa
cwde
mov
sbb
or
push
ss
out
adc
mov
gs
pusha
fdivr
fdiv
lods
push
std
jge
test
mov
popf
daa
and
dec
add
xor
imul
aas
mov
mov
mov
mov
xor
dec
xchg
add
mov
mov
dec
pop
cmp
mov
inc
nop
or
(bad)
jns
mov
inc
mov
ja
outs
shl
mov
pop
shl
scas
cli
mov
adc
pop
dec
jo
loope
cli
jbe
ret
ds
push
iret
and
mov
mov
and
adc
xchg
fiadd
push
enter
stc
bnd
push
popa
scas
and
(bad)
push
xor
cmps
push
xor
jb
xchg
daa
cmps
mov
adc
imul
enter
movs
ins
xchg
pop
mov
xor
jl
mov
hlt
adc
pop
test
xchg
cmc
mov
cld
jmp
test
dec
inc
nop
and
dec
add
dec
cld
push
outs
dec
test
je
cmp
imul
dec
pop
mov
dec
xor
jmp
dec
adc
jbe
retf
xchg
pop
aad
imul
call
push
and
mov
jmp
adc
lahf
sbb
cmp
push
push
and
cmps
push
add
ins
mov
sahf
and
jmp
pop
pop
(bad)
mov
cs
rcl
(bad)
push
xchg
cli
loope
ret
clc
mov
xchg
imul
lahf
or
sbb
jle
dec
sbb
push
jecxz
xor
xor
shl
retf
push
cli
cmp
outs
fwait
lea
cmps
gs
jne
xchg
adc
std
fstp
rol
ror
xor
jns
xchg
test
and
scas
sbb
loop
adc
iret
or
pop
mov
pushw
nop
icebp
mov
mov
and
inc
retf
(bad)
(bad)
xor
ds
jp
adc
aam
repz
lods
stos
(bad)
jle
xchg
push
jge
dec
xor
dec
call
mov
mov
pop
cmp
cs
xor
setp
mov
loopne
pop
jno
pop
sbb
pushf
iret
xor
retf
shrd
out
lock
bound
fisttp
out
repz
ins
jmp
call
add
and
js
and
inc
or
mov
ja
cmp
jecxz
rol
sbb
pushf
adc
jae
aaa
je
addr16
frstor
xor
jo
sbb
retf
call
pop
xchg
sbb
retf
sub
sub
sub
ja
repz
cmp
dec
(bad)
ins
push
sbb
add
int3
loop
dec
adc
and
mov
mov
enter
or
mov
or
mov
sub
mov
into
sahf
lea
aaa
lds
adc
in
dec
push
gs
fs
or
out
add
les
lods
js
sbb
mov
call
and
stos
mov
pop
xchg
add
jae
xchg
addr16
or
jecxz
adc
(bad)
adc
jg
lods
cdq
xchg
sbb
cmp
adc
mov
or
scas
dec
cmp
xchg
rol
les
mov
xor
xor
call
sbb
xor
or
jbe
sub
pop
pop
pop
cmp
into
add
push
cmp
repz
push
mov
rol
sub
mov
adc
xchg
fld
push
int3
fdiv
mov
sahf
jp
scas
pop
fldcw
bnd
cwde
ins
and
sbb
gs
lahf
jle
mov
gs
jle
(bad)
neg
(bad)
or
adc
push
jecxz
mov
imul
jo
jno
aam
or
fcmovbe
sub
jmp
add
or
outs
mov
push
sub
jp
sub
push
pop
inc
ror
mov
adc
aad
sub
fld
leave
mov
es
push
das
outs
scas
cmp
mov
cdq
ds
jmp
jno
mov
xor
popf
cmp
pushf
ret
test
or
mov
and
dec
into
xor
int3
mov
cmp
jg
ds
(bad)
out
inc
cmp
push
jmp
mov
mov
fnstenv
out
setae
das
add
pop
xchg
and
ss
shr
mov
aad
lds
adc
jp
xor
dec
mov
push
or
add
adc
mov
push
scas
add
or
mov
jbe
icebp
and
mov
fdivr
sbb
xlat
inc
lahf
rcr
pop
(bad)
cmp
dec
clc
idiv
inc
rol
iret
mov
pop
mov
mov
cmp
jmp
sbb
fwait
call
rol
mov
jnp
imul
icebp
mov
div
cmp
mov
pop
mov
aaa
mov
and
mov
out
or
cwde
retf
(bad)
mov
cdq
or
fmul
daa
mov
dec
or
or
jno
mov
xchg
inc
push
push
ja
sar
mov
call
jne
data16
cmp
xor
inc
jmp
jg
sub
lods
scas
shl
shr
xor
xchg
mov
sbb
inc
pop
push
sbb
aad
stc
cmc
and
psubb
ss
ins
gs
jge
inc
iret
inc
mov
sbb
data16
cld
in
cld
fmul
jno
pusha
mov
mov
pop
mov
je
cmp
sti
ins
add
sub
addr16
(bad)
mov
and
lods
inc
rcr
arpl
es
aam
mov
dec
out
dec
popf
out
or
add
mov
fcomp
inc
mov
mov
add
stos
dec
add
cmps
dec
mov
test
xchg
popa
lods
test
push
mov
mov
adc
sub
sub
sbb
adc
mov
xchg
(bad)
test
popf
(bad)
jno
push
enter
out
mov
ja
cmc
mul
aas
cli
lea
retf
out
push
mov
pusha
cmp
pop
out
outs
mov
pushf
mov
push
adc
int3
out
aam
push
lea
scas
dec
scas
test
std
mov
inc
popf
cmp
pushf
dec
jns
push
cmps
pusha
sub
lahf
aas
cwde
js
ins
int3
test
lea
cs
cmp
retf
idiv
dec
cmps
inc
cld
mov
xor
jecxz
daa
rcl
loope
jge
dec
clc
xlat
sbb
jo
and
sbb
es
xchg
mov
cmp
mov
lods
cmc
add
mov
test
les
hlt
cmc
push
lods
call
pop
(bad)
fdivr
mov
mov
into
(bad)
and
jnp
jle
cmp
mov
xor
xor
lods
inc
shr
call
ror
and
and
into
enter
adc
scas
cli
jge
jmp
mov
cmp
pop
xchg
fsubr
cmp
jl
cs
mov
das
cld
retf
gs
shl
stc
push
test
enter
(bad)
pop
movs
pop
add
mov
xor
call
pop
pop
push
ss
jo
push
sub
push
pop
push
aas
jb
movs
rol
nop
mov
jmp
stos
arpl
nop
pop
scas
clc
jge
mov
ret
loop
sub
(bad)
pop
int
out
out
jge
retf
fld
call
arpl
push
adc
mov
mov
pop
sub
out
xchg
push
xchg
fild
sar
iret
inc
pop
sub
jle
xor
jle
and
cdq
pusha
out
loope
dec
adc
stos
cmp
cmps
mov
mov
dec
xchg
pop
jmp
(bad)
sub
cmps
adc
fwait
popf
mov
cli
mov
mov
jne
xchg
daa
popf
sbb
je
or
mov
shr
sbb
sub
sub
test
and
inc
ins
(bad)
(bad)
mov
imul
pop
and
fdiv
pusha
fidivr
retf
xchg
mov
daa
add
jecxz
xlat
xchg
cli
cmps
cmp
jg
and
ror
dec
cld
dec
sub
arpl
arpl
sbb
hlt
sti
cmovge
not
(bad)
xchg
pop
sti
ja
push
loope
xchg
dec
rcl
xlat
cmc
jle
add
imul
xchg
call
jbe
xor
sub
in
mul
cmp
fstp
pop
mov
sub
mov
rcl
dec
mov
pop
add
mov
sub
jns
xchg
cmp
pusha
pop
add
and
lock
(bad)
xor
jmp
xchg
inc
cld
push
popa
jp
cmp
loopne
rcl
mov
int
and
jno
cmps
stos
cmp
push
outs
and
or
dec
shl
xchg
adc
mov
cmc
or
cmp
ss
adc
cmc
aad
sub
stos
ds
int
(bad)
sub
repnz
jnp
dec
sbb
push
mov
mov
ds
bound
add
mov
es
push
jge
imul
inc
aas
sub
mov
cdq
push
or
call
loop
icebp
imul
daa
jge
and
stos
sbb
pop
mov
fwait
adc
sub
jae
jnp
jns
dec
rcr
pop
into
inc
outs
mov
loope
jp
stos
push
ds
pop
and
lock
push
sbb
dec
std
mov
jno
in
mov
loope
aaa
mov
cld
adc
lods
or
ss
xchg
pop
test
or
xor
cmp
inc
sbb
sub
jno
cmp
jmp
xchg
xor
push
jmp
jmp
ss
push
test
shr
fsub
scas
mov
xchg
lahf
push
iret
mov
xor
mov
stos
fmul
or
imul
retf
jp
(bad)
loop
loope
push
push
lods
jp
out
jecxz
add
mov
push
jmp
leave
imul
mov
lods
add
xlat
or
pop
ins
aas
test
adc
adc
mov
add
inc
or
loopne
add
std
ds
test
int
adc
adc
push
cmp
pop
inc
les
xor
mov
fwait
cmp
mov
inc
cdq
in
lods
or
sub
lahf
pop
adc
(bad)
iret
xor
fs
cmp
test
sub
scas
ja
pop
mov
sub
jg
and
push
dec
add
cmps
dec
les
lods
mov
xchg
sbb
and
into
imul
dec
xchg
cli
xchg
fsub
in
and
rol
jg
scas
mov
scas
adc
pop
mov
dec
int
out
test
push
jae
js
in
loop
inc
jo
mov
pop
push
jbe
fwait
test
(bad)
mov
loope
rcl
sti
jecxz
mov
pop
pop
adc
xor
jge
ret
out
ss
dec
(bad)
cmp
dec
je
add
pop
jb
fwait
out
cdq
adc
repz
mov
jl
xor
jg
push
push
sbb
mov
fnstenv
loop
imul
stos
push
sbb
fidivr
pop
in
and
and
adc
mov
das
lock
cwde
add
push
and
xchg
pusha
jl
dec
fisubr
mov
dec
call
sub
shr
or
mov
push
rcl
cs
fidiv
mov
mov
push
sti
cli
mov
outs
jmp
adc
fucomip
test
cld
jbe
icebp
pop
pop
out
dec
fcmovnu
lods
retf
lods
mov
cmp
adc
addr16
or
nop
pop
sbb
imul
ja
out
sub
mov
cmp
jl
adc
jecxz
mov
mov
cwde
out
outs
jle
inc
mov
and
mov
dec
fldcw
jg
cmp
in
jnp
ror
fisttp
sbb
mov
cmp
pop
push
or
push
inc
aam
addr16
xchg
aad
or
cmp
inc
add
mov
adc
sub
push
cmp
cmp
jae
ror
ret
mov
mov
in
xchg
jb
addr16
and
mov
stc
sbb
lock
cmp
imul
jg
jnp
xor
fimul
rcr
pop
out
retf
inc
or
imul
pop
add
cmps
daa
or
pop
mov
push
xlat
xor
push
dec
jae
int
ret
inc
aas
mov
jmp
out
das
ss
imul
pop
je
lock
jg
icebp
xchg
cmp
dec
stos
dec
xor
inc
dec
jo
add
shr
ds
pusha
pop
cmp
js
fcomp
adc
sbb
stos
xor
dec
in
mov
stos
aam
mov
and
push
add
dec
inc
xchg
adc
cmc
inc
sahf
scas
mov
xlat
inc
dec
out
xor
push
das
jo
or
idiv
or
inc
cwde
push
dec
add
mov
sub
xor
pop
mov
or
push
xor
push
cdq
jnp
add
out
movs
cmp
inc
or
out
sub
jae
shl
repz
sub
xlat
ficom
or
and
cmp
cmp
push
test
fwait
lea
pop
dec
div
cmp
inc
neg
mov
addr16
push
sub
arpl
loope
inc
sti
or
cmp
pop
add
adc
out
xor
xchg
out
add
pop
push
jmp
xchg
xor
pushf
jg
mov
cld
xchg
test
dec
mov
sub
ret
movs
sar
sti
inc
pop
sbb
sbb
rcl
push
mov
cld
lds
mov
ret
jge
test
mov
add
or
mov
dec
cwde
movs
imul
out
xor
retf
enter
repz
jae
ins
fdivr
or
or
ss
stc
lock
xchg
pop
popa
mov
repz
cs
push
call
imul
cmp
stc
ins
jecxz
pusha
xchg
daa
jo
aam
pop
test
dec
xchg
nop
mov
push
cmp
cdq
call
add
jo
jno
loopne
push
sub
loope
inc
retf
jae
les
mov
sbb
scas
push
mov
cs
daa
push
push
gs
lock
cmp
fstp
out
adc
mov
sub
dec
xchg
clc
pop
sbb
and
add
jae
ficomp
cmps
imul
xchg
ret
mov
inc
ss
push
movs
rol
fdivr
cmps
gs
sar
in
cmp
mov
mov
adc
mov
out
pop
movs
xchg
dec
es
shl
push
or
ss
aam
fst
call
jmp
jl
inc
cmc
(bad)
mov
fld
and
inc
sti
outs
add
adc
cmp
cwde
cld
sahf
mov
xchg
call
data16
fild
add
push
sub
test
inc
scas
ins
ja
pop
adc
inc
and
ja
inc
xor
jg
inc
and
push
adc
xchg
pop
leave
cmp
(bad)
in
add
lds
icebp
sub
mov
xchg
add
add
xchg
inc
cmp
inc
(bad)
stc
das
push
das
lock
cmps
pop
xlat
arpl
fcmovnbe
and
fisubr
mov
jmp
xor
dec
mov
inc
std
icebp
mov
pop
aaa
out
mov
pop
pop
das
or
ret
in
pop
inc
ds
aam
or
mov
movs
push
cdq
movs
jns
or
xor
xor
mov
scas
loope
mov
lods
inc
out
hlt
into
les
sub
push
xor
pusha
aad
or
addr16
push
movs
push
pop
lods
ja
stos
inc
lea
adc
popf
pop
xor
push
jne
mov
int3
and
add
cmp
jae
push
mov
pop
mov
lock
(bad)
cmp
gs
cmc
xchg
test
es
cmp
jl
jge
aas
fisubr
ins
fdivp
sbb
or
(bad)
pop
fstp
shl
jl
add
push
inc
ss
pop
shl
push
sbb
ror
mov
stc
adc
test
test
outs
xchg
mov
push
pop
xchg
cmp
std
jecxz
lds
sbb
inc
sub
ins
cdq
dec
cli
(bad)
cdq
ds
seta
add
push
cwde
xor
ins
sub
clc
imul
aaa
hlt
data16
test
icebp
pop
or
or
popa
out
cmp
cdq
xlat
pop
call
dec
imul
xor
ret
mov
stos
add
pop
mov
or
inc
xor
arpl
jo
xor
icebp
mov
and
es
sahf
add
call
and
mov
mov
cmp
sub
ret
test
and
les
xor
imul
and
fdiv
mov
cmc
xor
and
and
pop
outs
shr
fild
bound
rcr
cld
cmps
lock
inc
outs
sahf
div
lods
adc
or
push
add
ds
ret
inc
push
cmp
gs
dec
aaa
adc
or
jecxz
daa
push
data16
xor
in
xchg
ret
sbb
in
xor
aaa
shr
cli
lods
pop
push
leave
iret
xchg
push
addr16
xchg
pop
fistp
adc
out
and
(bad)
jecxz
sub
mov
mov
out
test
pop
leave
add
jg
lods
xor
fwait
adc
pop
das
add
out
clc
jae
test
mov
add
push
cmp
mov
lock
xor
jle
jmp
movs
adc
push
sahf
shr
dec
stos
lds
sti
call
add
in
hlt
hlt
mov
sbb
mov
jb
pop
pusha
in
idiv
fiadd
outs
lods
pop
push
mov
leave
int
mov
mov
add
sub
mov
xchg
ret
hlt
jp
cli
retf
clc
jmp
les
cmps
daa
adc
cmp
push
jmp
sar
(bad)
out
js
add
pop
add
xchg
xor
push
push
jae
scas
dec
loopne
mov
lock
popf
sub
dec
sar
ret
sbb
cli
push
in
mov
jnp
cmps
adc
xchg
mov
dec
(bad)
or
mov
(bad)
sbb
cld
data16
inc
in
scas
retf
test
fwait
div
cmps
shl
cmps
xor
retf
mov
sbb
inc
mov
or
or
cmp
dec
dec
inc
mov
cmp
push
in
es
inc
test
sub
mov
mov
outs
sub
cmp
inc
cmc
add
lock
jecxz
scas
mov
mov
loopne
push
pop
mov
repnz
ret
and
mov
jmp
sub
adc
dec
std
mov
mov
push
ins
sub
cwde
xchg
in
mov
je
cmp
or
das
in
fdiv
and
retf
sub
std
or
inc
fmul
inc
xor
push
mov
mov
fist
test
aaa
add
or
daa
jnp
dec
std
jo
into
std
repz
pop
mov
in
ins
outs
or
add
pop
inc
loop
add
jnp
js
sbb
(bad)
fld
(bad)
lock
sub
clc
lea
data16
pop
add
add
push
or
mov
push
push
mov
cmp
inc
cmp
cmp
inc
adc
mov
jb
rep
ret
shr
inc
test
sbb
aas
xchg
mov
outs
bound
test
xchg
sar
cdq
int
sbb
or
outs
xor
movs
mov
rol
into
bts
nop
pmaddwd
mov
cmp
sbb
ret
pushf
pop
add
loop
cmc
js
ss
dec
inc
xor
xor
fidiv
pop
sub
idiv
dec
neg
pop
mov
(bad)
fstp
dec
mov
add
cmp
mul
push
and
les
lds
sub
stc
movs
cmp
cmc
sbb
aas
pusha
lds
ret
loop
loope
xchg
ds
xor
sub
xchg
inc
xchg
mov
cmc
loopne
jmp
lods
leave
sbb
and
ja
into
fldenv
xor
scas
mov
and
lahf
aaa
scas
lods
mov
clc
dec
fimul
(bad)
in
das
xchg
aaa
and
retf
fcomp
jns
or
jae
push
xchg
inc
xchg
inc
pushf
sahf
dec
add
inc
iret
aam
ja
inc
pop
cli
xchg
sbb
jecxz
repz
mov
gs
std
sub
(bad)
out
callw
cmps
and
pop
push
push
ins
mov
pop
(bad)
cmp
xlat
cmp
call
inc
and
mov
test
add
lea
add
imul
cmc
sub
lahf
gs
sbb
xchg
xchg
shr
push
add
in
lock
xor
jnp
mov
push
push
in
imul
xor
repz
and
(bad)
(bad)
in
xchg
fimul
ins
or
push
test
sub
scas
out
or
mov
cdq
loopne
aad
pop
add
xchg
xchg
pop
sub
sub
push
add
sbb
(bad)
xchg
sbb
sti
dec
test
fimul
push
push
in
xchg
es
push
gs
fs
cmps
cmps
es
(bad)
int
gs
outs
mov
mov
dec
ret
dec
mov
cmp
xchg
pop
mov
xor
ret
jg
cmp
add
add
adc
lock
in
movs
add
pusha
push
inc
pop
mov
mov
and
dec
int
xor
retf
dec
jmp
adc
sbb
aam
add
out
mov
pop
sbb
jo
std
mov
sbb
sbb
jns
fstp
stos
ret
pop
ret
sub
loop
mov
test
rcr
rcl
repnz
xlat
in
daa
add
pop
mov
or
loop
enter
mov
gs
lds
(bad)
(bad)
arpl
out
mov
ret
mov
aas
mov
(bad)
lods
retf
push
test
add
mov
mov
inc
in
ds
inc
(bad)
lea
ds
mov
(bad)
mov
cmp
sbb
mov
aaa
leave
dec
xchg
sub
in
fs
(bad)
sahf
jl
sbb
mov
ins
sbb
imul
pop
jb
push
xchg
mov
mov
push
sahf
mov
pop
mov
push
in
loope
shr
jmp
adc
and
sub
xchg
outs
cmps
jne
pop
pushf
out
outs
outs
mov
pop
ss
adc
pop
rcl
cmp
push
xor
pop
lds
sub
outs
lock
out
cs
mov
out
dec
hlt
adc
push
mov
jns
mov
mov
ss
mov
or
sub
mov
cmp
(bad)
aaa
inc
outs
mov
sbb
bound
(bad)
ins
mov
add
ins
movs
jg
add
ja
bound
cmp
es
xchg
and
(bad)
fiadd
push
lds
outs
xor
rol
mov
mov
push
stos
push
mov
add
in
cmp
in
aam
fbstp
retf
xor
pop
je
aaa
out
dec
cmps
xchg
imul
das
out
sar
or
push
in
cmps
(bad)
pushf
fnstenv
in
scas
mov
mov
lahf
fcomp
mov
add
jp
add
and
mov
outs
jge
pop
pop
mov
cmps
outs
cmp
jno
das
lahf
mov
jecxz
mov
ficom
les
ins
push
jmp
inc
out
je
int3
xchg
and
pop
imul
repz
xor
lods
inc
xchg
pop
fsubr
sbb
push
cmp
dec
jp
sbb
cmp
and
xor
js
sbb
dec
jmp
push
scas
call
add
dec
cmp
jl
mov
icebp
and
and
fdivr
push
pusha
sub
xor
dec
fwait
mov
cld
or
fcmove
inc
push
mov
arpl
and
add
sub
jbe
mov
inc
mov
push
jno
add
mov
std
mov
add
xchg
or
call
frstor
push
push
xchg
popf
or
pushf
fistp
ficom
sub
push
sar
xor
nop
pop
cld
pop
cdq
stos
popf
jp
out
adc
xchg
inc
inc
mov
add
cmps
iret
cmp
add
out
jge
xchg
and
bound
mov
and
pop
out
fcomp
test
adc
sub
inc
push
or
adc
ffree
jl
mov
dec
icebp
push
xchg
jne
push
mov
inc
jno
mov
jne
xchg
sub
cmps
add
sbb
cmp
aaa
xlat
lock
rcl
push
pop
jnp
std
popa
fidiv
dec
ja
mov
xor
test
and
fist
jnp
sbb
add
push
mov
in
cs
pop
lods
(bad)
fwait
and
lahf
mov
push
xor
sti
cli
es
popf
bound
es
adc
loop
xlat
pop
inc
adc
rol
in
or
aam
push
shr
sub
adc
icebp
fcomp
movs
(bad)
lods
xchg
mov
stos
or
(bad)
mov
mov
or
in
sbb
and
outs
das
xchg
cld
mov
mov
inc
je
or
clc
xchg
sti
push
inc
mov
dec
not
pop
out
add
sbb
dec
(bad)
pop
jae
fucomi
xchg
mov
nop
mov
push
adc
rcr
push
inc
adc
enter
push
arpl
cwde
lds
push
jg
push
pop
outs
cmps
push
cwde
repnz
ficom
test
xor
jmp
sbb
test
call
xchg
mov
mov
xchg
pop
pop
inc
into
mov
stos
mov
lds
jg
arpl
outs
inc
dec
rcr
cdq
and
xchg
xor
mov
or
test
idiv
inc
sbb
stc
ja
and
dec
in
pop
hlt
mov
bound
jae
std
adc
jp
outs
jo
dec
into
stos
loop
pop
repnz
sbb
sub
or
jp
fnstenv
ficomp
inc
(bad)
inc
adc
add
lea
jmp
das
dec
(bad)
cmc
pop
sub
mov
sbb
scas
pop
push
cmp
outs
push
dec
cmp
lods
pop
pop
jl
rcl
and
aas
inc
aaa
dec
cmp
and
and
pop
mov
xchg
add
mov
int
ficom
mov
imul
jl
pop
movs
fistp
daa
std
cmc
sbb
dec
jmp
xchg
data16
adc
mov
aaa
nop
ror
mov
jl
xchg
iret
xlat
repz
push
cs
test
pop
(bad)
xor
rol
(bad)
lock
sub
adc
icebp
mov
push
cli
es
fsubr
scas
retf
mov
popf
sbb
mov
xlat
stos
in
fnstcw
cmps
stos
add
add
sub
nop
shl
cwde
mov
nop
add
aad
ja
jle
daa
std
pop
cld
xor
mov
bound
emms
popa
push
cmps
adc
push
push
inc
jmp
stc
and
mov
adc
pop
pop
push
data16
mov
jecxz
jg
test
outs
out
push
sbb
cmps
les
cmc
sub
mov
xor
cmp
cmp
out
pop
pop
pop
sub
jg
dec
cmp
cmp
(bad)
dec
shr
out
(bad)
inc
imul
movs
pusha
mov
sub
inc
imul
shl
(bad)
xchg
inc
mov
and
add
dec
mov
aas
sub
pop
nop
int3
dec
mov
inc
ins
js
enter
push
xor
jno
popf
and
adc
inc
das
push
sbb
sar
cwde
pop
mov
pop
sub
in
jmp
sahf
mov
dec
stos
mov
cmp
inc
inc
adc
cs
mov
jg
inc
sbb
popf
out
xchg
je
fsub
lods
mov
je
push
xchg
scas
stos
cs
mov
or
mov
jle
cwde
mov
or
into
(bad)
xor
cs
pop
fisub
and
xchg
mov
cmps
xchg
pop
mov
aad
dec
and
(bad)
(bad)
jns
stos
mov
sub
pushf
rcr
pop
adc
(bad)
push
inc
xchg
jo
adc
ja
cmp
add
xlat
daa
adc
mov
sahf
cmps
icebp
jae
stc
jp
int3
inc
dec
imul
mov
hlt
sahf
(bad)
lock
mov
sar
sub
(bad)
dec
call
push
sub
ins
push
pop
pushf
movs
and
pushf
cdq
adc
sbb
aam
pop
iret
data16
fwait
xchg
into
mov
fldenv
nop
dec
retf
ret
push
and
push
and
inc
adc
or
test
sahf
dec
dec
(bad)
js
push
jns
outs
ss
fwait
or
xor
xor
nop
lock
fst
cwde
sub
jno
and
and
adc
aas
mov
push
dec
cmp
jmp
pop
out
shr
pop
ret
mov
out
xor
mov
push
daa
ins
arpl
inc
mov
cmp
inc
mov
add
push
pusha
push
cdq
push
out
pop
dec
lea
mov
out
popf
ss
xchg
mov
shld
in
fcom
push
add
sahf
pop
popa
je
lock
sbb
aam
inc
fbstp
cmp
(bad)
cs
scas
mov
pop
aas
cli
fwait
movs
dec
dec
into
mov
aad
popa
adc
mov
inc
sti
loope
xlat
imul
stos
xchg
aas
mov
mov
jnp
movs
sbb
jp
xor
jne
xor
and
adc
clc
popf
mov
xchg
sub
test
aas
ins
mov
ins
sub
mov
(bad)
out
ja
cmp
imul
aas
cmps
out
inc
adc
movs
sbb
outs
fldcw
lahf
pushf
cmp
add
inc
or
test
test
loopne
mov
(bad)
shl
arpl
outs
xchg
cmp
fidiv
pop
inc
ret
mov
push
add
retf
bound
xor
je
jmp
adc
(bad)
(bad)
loop
push
and
inc
iret
cmp
or
or
xchg
jno
js
or
or
add
imul
or
xor
push
mov
loope
lock
pusha
sahf
xchg
popa
pop
xor
fwait
mov
iret
mov
and
int3
fsubr
xor
scas
mov
jnp
add
adc
jns
jecxz
icebp
das
sbb
jmp
fist
call
stc
(bad)
push
push
or
mov
in
(bad)
mov
and
fmul
data16
fadd
pop
icebp
fsub
xor
jmp
pop
pop
add
sbb
add
stc
fist
bound
pop
hlt
mov
xchg
out
push
sub
and
jno
dec
jmp
cmps
out
sar
fiadd
cs
aam
push
out
dec
repnz
and
repnz
mov
out
mov
sar
aas
(bad)
add
adc
and
lds
dec
cmp
data16
imul
sar
mov
push
fistp
outs
jae
jl
out
hlt
shl
mov
int
psrlq
aam
mov
mov
outs
arpl
add
bound
(bad)
jg
add
push
test
push
std
xor
in
jg
mov
sar
js
jbe
add
sub
sbb
lock
and
xor
inc
(bad)
enter
loope
and
das
and
arpl
(bad)
lods
imul
sbb
xor
shr
xchg
ins
jg
shl
inc
int
shl
pop
adc
lock
dec
push
scas
call
inc
jno
popf
(bad)
stc
or
mov
int3
out
in
push
mov
pop
cmc
xchg
outs
in
sub
xchg
dec
scas
in
pop
mov
mov
not
cwde
(bad)
mov
js
call
outs
cld
sti
mov
shr
xchg
fucomp
dec
mov
jmp
cmp
cmps
xchg
jb
add
sbb
sub
inc
jmp
pushf
cmps
xor
cmp
retf
mov
pusha
repnz
fcomp
cmp
in
cmp
sub
pop
push
cmc
sub
mov
mov
xor
es
aas
pop
inc
dec
mov
sar
aaa
xchg
bound
cmp
xchg
scas
popf
lock
mov
aas
xor
push
sbb
sub
das
push
dec
push
xchg
adc
shr
jb
xor
repz
outs
xchg
sbb
sbb
xlat
adc
sub
or
pop
lds
cmp
cmp
push
xor
mov
enter
lea
inc
sbb
xor
(bad)
push
repz
sar
mov
sub
jmp
lahf
jl
adc
inc
rcl
mov
dec
retf
cmp
sub
inc
ds
add
pop
cmp
jb
jp
(bad)
fcomp
inc
and
mov
sub
jl
fidiv
sub
push
out
mov
adc
(bad)
ss
cmc
bound
outs
mov
scas
jge
mov
xor
adc
inc
test
mov
push
jp
sub
lahf
stc
loop
dec
cmps
sub
int
dec
scas
mov
xchg
xchg
mov
into
jecxz
ffreep
and
aaa
dec
xchg
xchg
xchg
cld
jae
popf
add
loop
cld
movs
fcmovne
pop
mov
into
jbe
cmps
and
cmps
cld
mov
int
sti
xor
push
pop
mov
mov
pop
push
add
mov
stc
mov
jge
jle
jo
mov
cmp
repnz
aaa
pop
aam
add
inc
add
inc
cmc
xchg
xchg
rcr
push
xor
or
mov
shl
sbb
xor
sbb
xlat
movs
outs
adc
push
cwde
or
fidivr
mov
push
xchg
inc
add
jl
or
xor
in
xchg
idiv
enter
leave
jae
xlat
jp
pop
in
dec
cmp
out
mov
and
sti
xor
sbb
cs
push
inc
dec
(bad)
lahf
test
sbb
cmc
enter
mov
loop
not
mov
fcom
cmp
lahf
cwde
mov
shl
mov
stos
cmp
pop
or
mov
pop
cwde
mov
dec
push
mov
into
xor
pop
xchg
lods
mov
popa
mov
sbb
push
dec
push
jb
mov
ror
pop
ret
sbb
pushf
adc
leave
sub
mov
mov
add
(bad)
jmp
sub
(bad)
cmp
mov
jmp
test
jecxz
aam
aad
pop
mov
ds
loopne
(bad)
pop
scas
test
inc
mov
sub
mov
push
mov
push
cmp
scas
push
lods
sbb
sbb
xchg
test
dec
int
mov
cs
sbb
xor
retf
xor
mov
ds
pop
jp
pop
mov
inc
cld
lea
add
pop
ds
cmp
sub
movs
push
adc
add
mov
mov
mov
int
sub
outs
icebp
jecxz
cmp
push
in
leave
rcl
and
mov
mov
jge
cmc
push
jg
or
popa
je
inc
sbb
mov
stc
(bad)
jg
call
in
cli
aaa
dec
and
sar
inc
out
out
push
out
adc
retf
ss
inc
ins
loope
scas
sbb
mov
fcomp
stc
mov
adc
shl
adc
cmp
mov
stos
movntps
loope
cmp
arpl
xchg
jle
cmc
mov
dec
fwait
stc
(bad)
jmp
shl
or
enter
xchg
dec
test
and
pusha
mov
out
sahf
shl
ja
div
and
push
das
sub
imul
sbb
daa
pushf
mov
and
fisubr
dec
aam
jecxz
iret
call
jns
jmp
cmp
mov
stos
mov
mov
cmp
sub
ds
cwde
aam
pop
sub
iret
inc
lahf
outs
sbb
loopne
into
shr
cmc
std
mov
outs
clc
mov
das
jae
scas
loope
dec
(bad)
xor
inc
or
lahf
repnz
mov
adc
retf
div
or
test
mov
mov
cmps
mov
cmp
or
fstp
aam
mov
addr16
sub
push
dec
shr
add
daa
xlat
out
call
adc
pop
jmp
into
sbb
push
push
int
add
mov
cwde
sbb
mov
or
in
shl
les
mov
hlt
and
fst
mov
xor
jb
pop
stos
js
jmp
fwait
jle
push
jle
ret
cmp
mov
mov
mov
xchg
or
xchg
icebp
push
sbb
call
and
(bad)
jo
cdq
in
mov
dec
push
jbe
repz
xchg
pcmpgtb
movs
sbb
pop
shr
loopne
mov
clc
xchg
call
icebp
sub
or
mov
out
cmp
int3
mov
sbb
inc
dec
pop
cdq
pop
jecxz
clc
mov
and
xlat
sub
ret
ja
lahf
add
jmp
(bad)
xor
mov
(bad)
iret
cmps
adc
jb
xchg
inc
xchg
shl
aaa
jno
jno
push
cmc
popa
push
mov
cmp
punpckldq
push
test
cwde
mov
ja
mov
das
std
movs
push
enter
cs
mov
jo
mov
xchg
test
jmp
dec
jl
into
mov
repnz
into
in
lea
inc
sbb
jge
xchg
(bad)
inc
xchg
jno
xchg
cmp
pop
adc
and
xor
mov
add
add
scas
mov
and
push
movs
imul
aaa
dec
inc
xor
jmp
fstp
jnp
mov
push
xor
dec
loopne
jbe
mov
pop
jnp
mov
repnz
or
nop
and
or
sbb
pop
cmp
(bad)
fsubr
sbb
xchg
sbb
sub
xchg
sbb
pop
xchg
jo
std
jmp
xlat
inc
xchg
(bad)
xor
fidivr
cmps
adc
into
mov
add
test
pushf
test
and
jmp
xchg
add
addr16
retf
cli
add
rcr
cmp
test
mov
in
retf
sbb
mov
fcom
jl
cdq
mov
xor
sbb
test
test
aas
adc
data16
cmc
loope
xor
lds
cwde
in
mov
enter
dec
adc
es
into
add
sbb
dec
mov
ss
fidiv
fisttp
inc
fnstcw
and
out
pop
test
das
jae
xor
jl
test
loopne
or
fimul
jnp
jne
cmc
dec
jne
in
push
jbe
aas
jno
into
and
imul
dec
push
push
fwait
daa
sbb
jnp
rcl
xchg
mov
pop
cli
out
jns
sbb
ds
jb
add
out
mov
inc
retf
call
cmp
pusha
rol
push
aad
stos
fisttp
repnz
or
push
pop
lods
repnz
pop
stos
fisubr
jmp
lds
fcomp
jle
fdivr
inc
cmp
cld
jecxz
dec
out
push
xor
add
adc
and
dec
inc
adc
nop
(bad)
dec
push
push
mov
add
fsubr
jmp
in
dec
aam
mov
mov
mov
ror
pop
lock
mov
aad
popf
(bad)
xchg
push
xor
outs
mov
sub
inc
out
cmps
mov
retf
ins
cdq
aam
fwait
inc
sbb
sub
gs
(bad)
ss
arpl
fidivr
test
jo
mov
shr
sar
add
stos
mov
inc
inc
mov
(bad)
pusha
mov
outs
xchg
shr
lock
xchg
xor
loop
stos
mov
loopne
mov
(bad)
push
ja
adc
sbb
in
fiadd
scas
push
add
dec
jge
enter
pop
imul
ss
xor
shr
jno
pop
add
inc
fild
retf
std
cmp
aas
xor
xor
xchg
add
jmp
ret
stos
xor
pop
or
mov
cmp
aaa
mov
jae
or
push
mov
scas
leave
pop
jp
lds
mov
cmps
jmp
cwde
jmp
pop
ins
sub
or
test
iret
dec
sahf
imul
sar
mov
inc
dec
jb
in
loopne
mov
add
push
ret
faddp
dec
dec
outs
mov
(bad)
(bad)
mov
lods
cmp
dec
add
ins
push
scas
mov
mov
movs
xchg
je
push
(bad)
into
leave
mov
loopne
jecxz
xor
outs
int3
sub
mov
mov
xchg
adc
cmp
jnp
pop
cmp
jp
mov
mov
push
gs
push
ins
jb
js
pop
xchg
add
enter
dec
fwait
repz
dec
jmp
mov
out
rcr
cmp
test
jecxz
dec
int
cmp
inc
nop
aas
sar
(bad)
adc
loop
jmp
mov
sbb
inc
inc
dec
or
out
push
mov
mov
pop
xlat
fsubr
or
leave
repnz
(bad)
xchg
dec
mov
push
idiv
dec
fcom
and
retf
out
dec
nop
(bad)
in
inc
adc
xor
lahf
jle
cmp
jmp
call
xchg
cmp
pop
cs
mov
ret
out
cmp
(bad)
out
inc
(bad)
retf
cmp
mov
fisub
mov
or
fst
call
mov
and
(bad)
fwait
cmp
mov
mov
push
sar
sub
pop
inc
mov
pop
pop
aas
in
loopne
lods
data16
lods
jno
pop
jmp
dec
test
mov
dec
add
retf
mov
mov
or
jnp
(bad)
and
push
setnp
pop
stc
in
pop
lods
loop
jns
pushf
sub
jle
sahf
lahf
fs
test
mov
outs
sbb
fnstsw
cld
cli
(bad)
in
std
addr16
add
in
(bad)
mov
popa
jmp
mov
fimul
retf
repnz
mov
and
jmp
inc
and
pop
(bad)
pop
rol
cwde
lods
xchg
push
mov
lods
(bad)
div
js
lahf
sub
xchg
mov
sbb
ins
mov
sub
and
mov
sbb
ror
mov
scas
adc
ret
xchg
mov
(bad)
div
out
push
and
out
jmp
cmp
aam
push
rcr
lods
or
cmp
cdq
test
xchg
add
aad
ds
inc
and
aam
xor
cdq
inc
sbb
xchg
mov
inc
mov
and
ds
outs
and
add
stos
aas
out
scas
and
repnz
js
mov
sub
loopne
sar
(bad)
cmp
add
inc
int3
in
sbb
push
pusha
ret
neg
out
mov
sub
cs
xchg
addr16
inc
push
sbb
aaa
mov
cmp
xchg
push
mov
add
inc
daa
jmp
jb
pop
mov
imul
mov
jns
push
movs
mov
aam
jle
outs
inc
addr16
sub
(bad)
in
enter
cmp
xor
ja
push
mov
add
jl
rol
jecxz
in
int
push
test
add
add
xor
and
pop
(bad)
repz
mov
cli
stos
icebp
push
cld
adc
sub
inc
addr16
jmp
or
aas
cmps
or
jae
push
jbe
cdq
sub
cs
adc
ret
cmp
ins
retf
or
adc
adc
add
and
dec
and
jp
push
das
pushf
adc
imul
clc
xor
push
jo
add
xlat
adc
and
push
add
fs
ja
xor
shl
push
pushf
out
mov
ins
xchg
repnz
pop
and
add
and
rcr
das
jnp
shl
xlat
cli
xchg
inc
outs
je
enter
mov
in
dec
movs
jnp
dec
loopne
mov
imul
mov
iret
mov
sbb
xchg
sub
cmp
mov
add
stos
sub
mov
push
ja
repz
popf
mov
lds
imul
xchg
jne
add
or
xchg
in
or
add
rcr
shl
lods
and
out
xchg
inc
test
lods
sub
cmp
out
shl
scas
xor
cmp
pop
adc
push
mov
jo
(bad)
mov
ins
fdiv
nop
dec
fwait
xor
fidivr
add
xchg
push
adc
pop
in
adc
mov
mov
xor
ss
scas
loop
cwde
mov
outs
lahf
push
test
imul
xor
dec
add
sbb
push
scas
aam
mov
cmp
add
shl
cmp
les
xor
fnstsw
mov
push
mov
mov
add
out
sub
icebp
je
pop
sysret
sbb
push
and
sbb
cmp
fldenvw
outs
(bad)
add
int3
test
mov
test
scas
mov
mov
push
ja
pop
jb
mov
addr16
sbb
loope
shl
xor
or
jb
sbb
hlt
jne
arpl
hlt
iret
test
stos
push
retf
cld
arpl
pop
test
cmps
push
inc
pavgw
sbb
in
push
push
ins
push
adc
xchg
call
dec
sub
inc
lock
jge
aaa
push
and
mov
sbb
aaa
pop
mov
aas
adc
movs
shr
mov
inc
cdq
out
cmps
push
mov
mov
fbstp
(bad)
jl
or
add
int3
mov
dec
fiadd
jp
sub
xlat
fld
push
popf
sub
call
adc
inc
lock
xchg
adc
xor
inc
into
movs
aaa
enter
pop
je
mov
js
enter
sbb
pop
movs
das
mov
mov
pusha
push
xchg
xor
hlt
add
pop
in
(bad)
scas
push
and
and
mov
ficomp
jnp
stos
pop
sbb
xor
xor
mov
mov
sub
inc
push
(bad)
pushf
fistp
inc
xchg
sbb
or
idiv
fidivr
xlat
(bad)
popa
add
jb
mov
out
rcr
mov
dec
aad
push
jmp
inc
popa
pusha
ss
cmps
xchg
xchg
cmp
and
push
sahf
lods
xchg
mov
cs
fwait
mov
ins
popa
mov
std
mov
pop
sbb
cmps
hlt
fidiv
inc
pop
mov
cmp
movs
xchg
jp
and
scas
sbb
sahf
xchg
popa
retf
pop
outs
scas
ins
lods
jmp
mov
push
into
sar
mov
xor
mov
jbe
fild
outs
dec
outs
cmp
retf
xor
and
inc
sbb
push
test
mov
aas
mov
fwait
imul
clc
pop
xor
push
jb
imul
or
daa
hlt
sbb
in
stos
dec
mov
jo
inc
cmp
fisub
inc
iret
shr
scas
mov
mov
sahf
div
mov
scas
jbe
std
fisubr
(bad)
and
hlt
test
xor
fld
mov
sar
inc
adc
ja
jb
xchg
fld
xchg
in
ss
jo
sbb
xor
dec
out
and
dec
test
enter
sbb
test
retf
hlt
dec
test
mov
mov
loopne
sub
sub
push
adc
call
or
sub
mov
leave
sbb
adc
xor
int3
inc
cmc
ins
jp
push
sub
in
push
sub
aad
fwait
pop
test
into
and
and
add
aad
pusha
aaa
xor
ins
mov
mov
inc
sar
pop
arpl
jno
push
pop
sbb
addr16
pushf
jmp
add
mov
rcl
cs
xchg
pop
push
mov
ds
mov
enter
pop
popf
retf
and
adc
jmp
mov
ins
adc
pop
shl
lahf
push
mov
xchg
jmp
mov
add
push
push
inc
lods
push
rol
sti
icebp
popa
xchg
pop
and
xchg
push
shr
int
add
(bad)
in
or
adc
push
sbb
lods
loopne
outs
sbb
mov
and
popa
mov
cmps
in
call
mov
add
stos
mov
jl
div
push
pusha
imul
and
sub
shl
popa
push
aas
mov
xchg
xlat
pop
bound
je
retf
repz
push
pop
adc
lods
aam
jmp
test
out
fdivr
lock
pop
ror
mov
in
cmp
jle
add
aaa
iret
pop
in
pushf
jecxz
addr16
push
lds
and
inc
popf
mov
out
pop
xchg
stc
pop
movs
es
out
pop
inc
adc
into
addr16
adc
div
ss
jnp
xchg
dec
or
shl
ror
arpl
aad
test
lods
dec
out
pop
mov
mov
icebp
and
adc
sub
sti
inc
cli
pop
js
push
and
fwait
fwait
adc
scas
push
mov
pop
cmps
cmp
stc
pushf
pop
pop
xchg
push
call
xor
pop
and
add
stos
std
mov
sub
std
clc
sub
lahf
enter
add
xor
push
scas
add
and
jmp
imul
jp
cmp
jb
adc
or
mov
adc
pop
jge
push
cmp
aas
jmp
int
push
jmp
lea
das
add
jnp
xor
retf
or
pop
jmp
jns
cwde
xor
xor
xor
xchg
sbb
mov
dec
sbb
iret
jnp
xchg
sub
ja
inc
xchg
rcr
mov
push
call
jbe
cmp
push
inc
xchg
sbb
inc
mov
xchg
outs
cmp
in
int3
mov
xor
loope
test
or
std
aam
out
pop
out
bound
and
or
ret
dec
xor
mov
pop
xor
in
push
inc
in
inc
mov
mov
repz
sub
xor
pushf
imul
xchg
or
test
xchg
dec
ins
sti
stos
pop
cmp
push
adc
rcr
jo
(bad)
sub
repz
je
mov
mov
mov
shl
lods
xor
test
xchg
cmp
dec
(bad)
popa
pop
shr
bound
jno
mov
fcomip
fcom
add
ss
test
movs
dec
js
lock
in
sbb
(bad)
jmp
mov
push
ds
sar
ret
and
mov
xchg
jp
xchg
imul
(bad)
xlat
cmp
cwde
outs
push
cmp
cmp
dec
xor
inc
dec
or
scas
dec
and
pushf
mov
cdq
cmp
fidivr
leave
push
iret
or
inc
(bad)
popa
dec
(bad)
addr16
sub
stos
dec
pop
cs
daa
mov
inc
and
push
dec
(bad)
pop
cmps
or
add
out
jae
clc
(bad)
mov
jbe
aaa
repz
xor
xor
test
sub
push
in
mov
push
adc
and
lods
xchg
or
adc
test
or
sbb
js
fst
sub
pop
arpl
push
out
push
test
add
mov
cdq
or
or
test
int
add
add
and
cmps
dec
pop
lds
test
sbb
or
cwde
bound
push
test
ins
cs
sar
retf
call
jnp
add
cmp
add
outs
xchg
outs
add
jmp
add
pop
xor
retf
pop
pop
sub
push
inc
loop
jae
iret
xor
pop
fadd
lahf
lods
cmps
fisub
fwait
pop
adc
cli
fsub
sbb
jb
mov
push
or
fcomp
inc
test
mov
add
stos
jge
mov
imul
mov
sbb
jecxz
outs
lock
and
in
jmp
cmp
loopne
mov
and
movs
xor
mov
in
cmp
addr16
cmp
mov
sub
retf
cmp
jne
sub
mov
jno
mov
cld
cmp
movs
add
fxch
ds
pop
aaa
adc
and
or
lock
sub
repnz
pop
inc
ror
addr16
aam
adc
and
xor
clc
loop
or
dec
inc
js
retf
es
cmp
sub
push
or
xchg
xor
jne
je
cmp
retf
stos
mov
pushf
test
cdq
dec
jge
movs
lods
mov
stc
gs
(bad)
or
push
xchg
mov
pusha
fstp
xor
out
movs
jmp
addr16
stc
sahf
mov
int3
xlat
imul
add
clc
shl
loop
push
or
shl
cmps
mov
pop
mov
pop
pop
jbe
mov
mov
xchg
dec
jmp
ret
or
out
sti
enterw
fs
jmp
retf
sub
mov
cwde
inc
in
mov
nop
push
and
clc
sbb
out
cmovl
scas
pop
scas
iret
pop
pop
repnz
mov
imul
aam
jl
test
jmp
cmovbe
and
imul
push
mov
add
dec
cmc
pop
jb
jo
pop
sub
adc
push
xchg
inc
xor
jl
aad
out
in
out
xor
dec
xor
clc
or
add
adc
test
loope
stos
or
hlt
out
rcr
sar
jae
fisubr
push
add
adc
ret
pop
mov
and
(bad)
cdq
(bad)
xor
push
xchg
out
ins
pop
enter
pop
fimul
jnp
mov
pop
arpl
data16
mov
add
and
lods
adc
int3
inc
(bad)
jbe
dec
stc
leave
cmps
mov
jnp
sub
ret
push
fdivr
jmp
in
outs
fmul
scas
mov
test
lods
jg
mov
sbb
mov
jbe
movs
in
pop
mov
push
hlt
jo
push
icebp
and
retf
sbb
mov
and
mov
push
retf
sbb
sub
xor
ss
loop
nop
movs
dec
cdq
push
cmp
icebp
mov
scas
inc
out
mov
pop
mov
out
mov
inc
push
mov
test
imul
add
(bad)
pop
mov
int3
(bad)
pop
lods
stos
(bad)
js
mov
xchg
and
pop
dec
neg
fnstcw
fnstenv
ins
and
call
ins
ss
scas
adc
test
xchg
jl
cmp
mov
mov
mov
inc
addr16
xor
pop
int
stc
pop
fstp
sbb
rcl
scas
scas
add
es
enter
jnp
dec
add
sbb
imul
fdivr
sub
popa
push
xchg
fisub
shl
pop
push
jmp
pushf
add
in
xchg
lods
and
cmps
or
and
xchg
cmp
popf
xor
imul
mov
retf
push
mov
loope
mov
push
and
jl
push
in
jbe
pushf
cmp
arpl
inc
icebp
into
add
mov
inc
cmps
fist
cmc
or
sbb
push
mov
sbb
xor
xchg
mov
enter
test
enter
xchg
inc
dec
jl
push
inc
cld
cmps
jecxz
cmp
mov
popf
dec
sub
fcom
xchg
push
pop
in
enter
test
mov
(bad)
fstp
call
out
retf
xchg
gs
pop
fmul
pop
enter
jne
lods
sbb
xchg
movs
fwait
xor
test
lea
adc
xchg
dec
cmc
xchg
inc
jne
mov
push
dec
fdiv
dec
jno
mov
or
mov
pop
pusha
in
sub
and
into
movs
aam
cmps
mov
outs
jle
movs
or
movs
pop
inc
push
imul
and
cmp
cmp
mov
inc
neg
adc
inc
hlt
cmp
adc
jnp
mov
xor
aaa
cmp
sbb
pop
jbe
out
rol
adc
das
inc
xchg
add
bound
mov
and
dec
and
(bad)
and
add
gs
in
cmp
push
cs
adc
add
inc
clc
test
int3
pop
aam
repnz
std
cwde
xchg
outs
mov
xchg
push
sti
ror
(bad)
or
mov
xchg
add
jg
add
cli
xchg
xor
inc
mul
jno
imul
data16
in
cdq
enter
leave
nop
mov
test
mov
call
mov
sti
xchg
ret
dec
mov
or
fmul
jns
lods
outs
repz
pop
aam
cmps
fs
cwde
push
imul
fs
js
sbb
arpl
sbb
sbb
vpxor
(bad)
jl
mov
xchg
test
test
push
adc
lods
xor
rcr
mov
inc
fbld
fidivr
xlat
xchg
inc
mov
imul
push
xchg
test
mov
add
cdq
arpl
bound
adc
dec
jl
inc
sub
stc
gs
pop
outs
bound
sti
(bad)
aam
mov
addr16
mov
inc
repz
int
int
jbe
loope
cmp
fmul
cmp
adc
dec
jge
cmps
mov
cmp
fwait
jb
cdq
sub
aam
sbb
xor
repnz
add
dec
inc
(bad)
push
shl
aaa
inc
or
cmp
mov
jnp
in
mov
sub
test
hlt
adc
mov
inc
movs
mov
push
(bad)
loop
(bad)
out
sub
(bad)
and
mov
inc
aas
mov
popa
mov
lods
adc
or
xchg
pop
pop
mov
jg
sbb
adc
retf
mov
into
push
ret
ret
xchg
xchg
cdq
and
(bad)
scas
mov
jmp
mov
aam
call
outs
pop
mov
dec
xor
sbb
fstp
mov
and
jge
or
lods
les
cld
fild
or
out
loop
shl
hlt
lods
outs
and
inc
test
test
xor
mov
scas
ret
mov
popf
je
dec
mov
sbb
mov
add
aas
push
add
test
ins
sar
jb
in
sti
call
jbe
add
movs
popf
cdq
pop
xchg
mov
in
rol
lahf
jbe
sub
imul
pusha
jle
les
lahf
push
outs
push
rcr
sbb
shl
in
fist
rol
inc
mov
cmp
cmp
(bad)
iret
pop
jns
aad
adc
pop
cs
cmp
ret
in
adc
mov
enter
imul
std
inc
lods
std
or
and
and
fistp
or
cmps
loopne
push
mov
dec
cwde
nop
(bad)
sti
sub
add
jnp
add
mov
jno
xchg
test
je
(bad)
daa
mov
mov
xchg
jnp
and
add
inc
stos
je
das
mov
xor
xchg
or
(bad)
sub
cwde
xor
call
movs
mov
pushf
(bad)
sbb
data16
xchg
repnz
test
mov
push
jge
inc
push
into
jl
aas
xlat
adc
or
bnd
ss
xchg
sbb
xchg
inc
adc
ret
cmp
repnz
cmp
add
jnp
repz
jbe
push
inc
mov
jmp
out
(bad)
in
xor
in
jmp
das
arpl
sbb
xchg
pop
call
jae
dec
mov
je
cmp
pop
shr
dec
or
stc
add
sbb
adc
inc
aas
pop
xchg
sub
ret
push
xchg
jo
mov
out
and
aad
mov
jp
js
aas
leave
in
in
pop
inc
ret
cmp
into
jg
adc
xor
je
jne
aaa
clc
lods
mov
out
loop
es
push
lods
outs
inc
push
dec
std
mov
pop
pop
xor
sub
jmp
xchg
pushf
bound
mov
enter
es
sbb
add
adc
scas
(bad)
xor
xchg
jno
mov
dec
shl
lea
add
sbb
jnp
lahf
cdq
je
inc
sbb
xchg
test
mov
dec
lahf
loop
adc
push
lea
add
fiadd
jl
inc
iret
jecxz
(bad)
mov
push
inc
and
lea
sar
and
mov
inc
pop
aam
fisub
jge
mov
dec
add
pop
(bad)
mov
ret
lods
ret
mov
fwait
aad
inc
or
or
push
or
test
adc
push
pop
mov
pop
cld
jge
out
in
stc
adc
call
mov
mov
js
sub
popa
popa
loop
push
or
retf
mov
gs
sbb
into
out
fisubr
mov
rol
repz
gs
dec
fisub
add
dec
dec
call
adc
inc
repnz
mov
push
popa
sti
loop
enter
inc
lods
adc
sahf
and
jge
sub
adc
out
rcr
cwde
mov
lods
dec
inc
fsubrp
bound
add
cmp
stc
loopne
stos
sbb
sub
and
adc
xchg
leave
adc
mov
mov
retf
sbb
dec
and
shl
imul
push
or
jbe
nop
ds
test
inc
ins
and
frstor
movs
mov
jmp
imul
xchg
lods
pop
pop
dec
cli
in
bound
movs
sbb
xchg
jo
std
pop
jp
mov
imul
or
add
jno
cmp
mov
adc
mov
(bad)
push
mov
(bad)
jmp
jg
repnz
push
mov
sub
bound
inc
or
and
push
out
sbb
mov
loop
dec
ret
add
mov
and
sub
mov
and
xchg
scas
pop
xchg
sbb
sar
dec
push
mov
push
sbb
outs
sub
cmp
into
bound
aaa
shl
fs
(bad)
push
or
push
or
and
dec
mov
out
pop
xchg
xchg
sbb
lods
jecxz
mov
stos
sub
inc
arpl
dec
test
dec
mov
jmp
test
cmc
push
sub
dec
ficom
aad
push
xchg
mov
imul
pop
inc
daa
pop
clc
add
xor
ins
in
movs
popf
out
gs
inc
call
cmp
in
xchg
xor
(bad)
fmul
push
movs
cld
xchg
push
test
retf
aad
mov
(bad)
in
nop
mov
iret
mov
mov
mov
sbb
in
jae
mov
adc
ins
fld
test
lods
scas
pop
iret
shl
or
repz
xchg
es
sbb
mov
movs
dec
cmp
in
cmp
and
movs
fild
loop
rcr
aam
outs
mov
ret
in
inc
mul
enter
or
jmp
cmp
mov
xchg
das
fisttp
ret
mov
int
stos
movs
lods
gs
leave
gs
push
adc
lods
inc
pop
cmc
mov
clc
retf
(bad)
idiv
inc
loopne
mov
addr16
in
or
aaa
addr16
xchg
test
imul
push
ds
or
mov
pop
popf
sbb
inc
and
pop
add
cwde
pop
sub
adc
push
dec
or
jns
mov
sahf
stos
outs
adc
loopne
xor
push
jle
push
stc
xor
test
loopne
lahf
clc
jmp
sahf
pop
mov
pop
add
ret
jno
xor
fdivr
jne
xor
xor
jns
xlat
stos
adc
cbw
pop
fdivrp
sbb
pop
lock
mov
jo
rcr
pop
cs
cld
jl
js
jle
mov
call
aaa
add
or
jle
inc
pop
test
cdq
std
gs
aas
adc
hlt
icebp
cmps
cmp
test
mov
jmp
adc
mov
jp
data16
push
mov
and
imul
mov
and
and
jecxz
inc
jbe
or
in
or
jmp
rcl
pushf
fld
mov
retf
or
and
jb
mov
fcomip
mov
aad
loop
sbb
rcl
xlat
call
xchg
out
daa
cli
aam
pop
mov
jl
mov
(bad)
cli
and
sbb
push
nop
daa
int
test
sbb
outs
sub
dec
cmps
retf
movs
mov
xor
adc
scas
hlt
jo
sub
dec
add
sub
jle
(bad)
mov
cmp
test
outs
sbb
cmp
movs
test
sub
out
pop
ja
mov
mov
or
mov
pop
adc
mov
adc
pusha
popa
cld
in
jle
inc
add
sub
sub
jbe
cs
inc
jae
jge
sbb
hlt
inc
jo
mov
out
push
cwde
imul
push
cmp
jge
dec
ffreep
lods
icebp
cwde
jns
mov
lock
jns
mov
dec
or
push
loop
stc
sbb
mov
mov
enter
inc
(bad)
ja
int3
sub
int
adc
sbb
pop
adc
mov
adc
int3
ja
dec
cmc
pop
hlt
int
stc
xchg
lods
stos
jae
sub
or
fisubr
retf
not
std
retf
ss
pop
push
mov
jbe
aaa
sbb
addr16
(bad)
loope
xchg
repz
inc
mov
sbb
push
fwait
out
adc
jp
adc
aam
adc
ja
sbb
ja
inc
stc
loop
mov
ins
stc
out
les
push
mov
and
push
pop
adc
arpl
inc
addr16
inc
dec
mov
sbb
add
or
retf
fldcw
pusha
mov
iret
push
jecxz
inc
push
repz
nop
adc
lock
cmp
lea
pop
nop
jp
aaa
push
lods
adc
add
inc
sbb
pusha
dec
inc
mov
clc
jno
push
ss
mov
les
arpl
data16
or
gs
cmp
mov
push
xchg
imul
adc
add
aad
push
push
gs
and
jp
jno
fild
add
in
mov
pop
sbb
jns
cmps
daa
mov
jmp
xor
fadd
addr16
fld
mov
in
imul
sub
mov
ins
xchg
fsub
xor
(bad)
out
cmc
int3
sahf
(bad)
ficomp
sub
(bad)
iret
cmp
int
sbb
out
jb
ja
sub
dec
dec
lahf
cdq
cmp
push
sbb
xor
jmp
pop
dec
push
inc
fwait
jo
dec
shr
sub
pop
lock
cmp
push
jge
dec
fistp
retf
mov
into
dec
leave
and
arpl
dec
ror
mov
mov
xor
or
jnp
sub
dec
das
js
xchg
xchg
pop
inc
and
inc
jb
xor
xor
retf
(bad)
out
ss
push
sbb
pusha
cwde
cmp
push
dec
dec
test
enter
js
sbb
dec
mov
cmp
cwde
neg
(bad)
mov
leave
mov
retf
aas
push
out
jno
dec
jmp
xchg
and
xor
and
fild
dec
xchg
je
xchg
int3
ret
lea
sti
dec
sub
sbb
push
push
sti
pop
add
jge
push
push
shl
mov
aas
mov
xor
iret
xchg
jmp
mov
cs
jae
pop
aas
hlt
clc
push
xchg
idiv
inc
lea
dec
dec
stos
icebp
xchg
jnp
iret
jne
fisubr
push
retf
inc
pop
inc
xchg
cmp
add
adc
cmp
retf
mov
imul
arpl
dec
jno
dec
xchg
adc
pusha
adc
jmp
int3
test
add
test
add
mov
xchg
sbb
aaa
xchg
test
pop
pusha
push
lds
es
xor
jne
pop
xor
ficom
xrelease
or
inc
and
dec
mov
cmps
mov
adc
push
call
jno
and
iret
mov
or
out
imul
mov
xchg
pop
adc
mov
jne
pop
and
adc
and
mov
mov
clc
loop
or
mov
jb
lds
js
xor
mov
dec
push
adc
out
imul
lahf
scas
inc
dec
pop
in
mov
lock
fcmovnu
cld
sbb
adc
std
call
shl
fldcw
inc
jo
enter
mov
ss
inc
adc
jecxz
xor
cld
pop
nop
daa
dec
stos
fwait
test
bnd
inc
shr
imul
daa
add
inc
adc
inc
cmp
enter
(bad)
popa
mov
fcomp
push
mov
jecxz
dec
ja
outs
mov
test
and
pop
fistp
hlt
adc
add
fisubr
rcl
int3
jne
fdivp
js
jmp
enter
mov
icebp
(bad)
fwait
mov
mov
pop
jmp
and
loope
mov
jecxz
sub
ins
pop
daa
mov
sbb
push
push
pop
xchg
retf
adc
inc
stos
pop
cmp
xor
aas
sbb
js
jmp
dec
clc
arpl
pop
push
cmp
ss
ret
ja
push
fmul
sbb
cmp
(bad)
dec
xor
je
shl
fadd
ins
jge
lods
sti
inc
into
lahf
adc
fcomp
lahf
mov
or
repnz
fwait
ja
inc
pop
stc
pushf
sub
sub
loope
mov
adc
cmp
cmps
leave
fnstcw
fdivr
and
sti
sub
neg
sbb
out
lods
cld
pop
jae
inc
mov
dec
inc
or
pop
aas
sbb
dec
jp
rcr
es
cmp
cmp
and
or
addr16
xchg
add
les
jge
mov
sub
add
punpcklwd
pop
pusha
int3
jne
pop
out
(bad)
push
loope
mov
out
sub
adc
push
icebp
mov
(bad)
pop
or
mov
and
add
and
cld
or
xor
cs
lahf
std
mov
jle
rcr
in
mov
mov
cmp
push
repz
fadd
rcr
pushf
jne
fimul
cmp
jbe
cmp
push
pusha
xchg
data16
and
stc
mov
imul
push
popf
xor
ins
int3
push
mov
data16
push
push
es
into
psubsw
int
out
cmp
mov
mov
lds
ss
sbb
adc
adc
and
cmps
mov
aad
rcl
dec
sub
rcr
or
adc
in
pushf
jle
or
aaa
pop
in
ss
fild
shl
cmp
in
xor
adc
mov
inc
stc
mov
pop
rcr
adc
gs
xchg
cmp
push
push
adc
sub
loop
inc
js
aam
xor
outs
dec
in
push
dec
fcomp
inc
sub
ja
aaa
cmp
push
call
sti
cwde
add
jae
fdiv
fcom
hlt
sub
xchg
dec
jecxz
ins
push
pop
push
sbb
lds
pop
into
and
dec
(bad)
jp
mov
sub
fwait
sbb
xchg
gs
cmp
fwait
cwde
mov
adc
or
or
add
or
arpl
fpatan
or
dec
shr
xchg
mov
xchg
addr16
repnz
call
data16
or
and
xchg
xor
js
popa
sub
hlt
shr
sub
jecxz
push
adc
les
push
in
rcl
cmps
inc
mov
xlat
icebp
ror
dec
adc
and
in
jg
nop
jo
or
pusha
sti
sub
mov
xor
ins
stc
push
test
sub
mov
push
dec
cmps
xchg
mov
shr
sahf
fisubr
push
int
leave
xor
arpl
arpl
sbb
stos
push
or
sub
xchg
mov
loop
dec
jno
cdq
adc
and
push
pushf
jns
inc
xor
(bad)
into
or
rol
xor
pushf
retf
outs
add
jnp
adc
bound
retf
arpl
adc
jbe
xchg
leave
push
div
int3
mov
push
jb
in
gs
sahf
or
mov
out
xor
fistp
or
or
mov
outs
call
pop
pushf
mov
mov
sbb
rol
pop
repnz
shr
mov
and
or
mov
xchg
mov
or
push
stos
jge
in
adc
cmp
jge
sub
outs
shr
push
(bad)
jle
adc
fmul
or
cld
xor
dec
xor
cmps
jmp
adc
mov
pop
das
imul
mov
xchg
push
or
add
sbb
aad
(bad)
loope
movs
lahf
je
sub
aam
sbb
pop
jnp
test
(bad)
not
pop
imul
rcl
mov
sti
cwde
ror
pushf
and
adc
pop
xchg
test
gs
and
pop
rcl
xor
jno
pusha
sbb
sub
mov
inc
nop
in
retf
iret
(bad)
outs
push
cdq
lods
push
out
push
in
mov
mov
stos
and
adc
pop
adc
or
mov
mov
push
mov
mov
rcl
jo
into
out
pop
pop
cmp
std
cld
aad
jae
pop
cmp
call
scas
mov
xchg
lahf
stc
dec
or
addr16
mov
mov
jl
dec
jp
daa
sub
cmp
js
dec
(bad)
test
push
es
pop
popf
js
adc
mov
clc
call
mov
mov
jne
sti
xor
test
push
push
out
and
xchg
test
not
inc
les
cmps
loopne
fdivr
repz
sbb
xor
sahf
leave
and
loope
mov
pusha
sub
movs
sub
fiadd
test
add
cs
daa
das
lahf
sbb
adc
mov
int3
pop
jmp
or
xchg
cmps
sub
in
popa
sbb
mov
jg
scas
sbb
pop
inc
push
loop
inc
ja
imul
push
push
outs
ss
or
cmc
push
pop
inc
ins
dec
xchg
imul
in
mov
or
pop
pop
jp
popa
iret
lock
adc
scas
mov
mov
push
rcr
sbb
sahf
jle
jnp
dec
cli
mov
test
rcr
xor
in
sub
ret
rol
inc
jno
cli
cli
jbe
mov
xchg
movs
ss
mov
jp
push
push
pop
(bad)
shl
arpl
pop
loope
pop
push
fcmove
fld
aas
(bad)
mov
pop
xor
jg
or
push
sub
mov
scas
or
mov
fisttp
xor
inc
mov
and
mov
sub
pushf
mov
clc
cli
outs
cmps
xlat
shr
ficomp
xchg
xchg
or
xchg
adc
enter
cmp
mov
not
or
cwde
lock
sahf
mov
adc
jg
cld
xor
dec
dec
pop
call
in
and
and
mov
pop
and
imul
sub
sahf
mov
lds
imul
mov
adc
gs
add
arpl
movs
call
or
movs
inc
std
inc
mov
mov
imul
xchg
into
pop
mov
imul
jmp
pop
xchg
pop
xchg
jp
add
sub
mov
push
jl
ss
data16
fs
cmp
cmp
add
dec
jge
mov
sbb
inc
test
loope
mov
push
movs
lock
mov
jge
pop
fsubr
mov
add
or
mov
mov
mov
scas
or
add
cwde
(bad)
mov
push
mov
mov
fs
and
sbb
xchg
dec
nop
movs
jo
inc
add
mov
ja
cmp
mov
dec
cwde
sbb
push
adc
shl
pop
mov
imul
ss
int3
dec
es
jl
jle
pop
pop
mov
aad
popf
fucomp
cld
sbb
div
cwde
mov
test
ds
pavgb
sbb
cmp
mov
shl
sub
mov
dec
fstp
dec
ret
dec
xchg
and
rcr
sub
xchg
xor
inc
jmp
stc
cmp
jle
jg
mov
out
or
dec
mov
cli
jmp
push
cs
sub
out
nop
push
adc
mov
icebp
dec
mov
test
xor
stc
or
add
arpl
cld
jg
and
cmps
int3
shl
and
call
out
sub
std
test
stc
or
(bad)
or
das
int3
call
rcl
jp
or
int
sub
das
pop
sahf
imul
stos
jnp
dec
xchg
in
mov
ret
test
pop
mov
pop
dec
mov
xchg
stc
jne
jl
lods
cld
and
mov
cdq
or
pop
dec
push
enter
inc
imul
push
sub
jecxz
addr16
xchg
xchg
ds
dec
mov
in
add
lods
and
xchg
cmp
(bad)
or
cld
aad
pop
repz
or
jg
lock
jne
sbb
mov
jns
outs
or
push
or
jno
inc
pop
adc
xchg
fld
push
jge
mov
(bad)
fistp
in
cmp
mov
ds
mov
cmp
push
mov
mov
xchg
or
sbb
xor
and
test
adc
cmp
scas
xchg
daa
ja
pop
test
mov
push
pop
ret
jl
cmps
cli
lock
js
xchg
adc
aas
pop
out
jbe
inc
ins
addr16
test
popa
in
std
out
xchg
and
mov
out
repnz
test
das
call
lods
repz
jmp
xchg
pop
and
cmp
ror
fbld
xor
inc
inc
jecxz
int3
aam
sbb
dec
adc
in
lods
jbe
shl
xchg
sbb
cli
dec
jecxz
sar
fwait
test
mov
dec
(bad)
js
fwait
xchg
shl
pop
mov
push
ss
outs
xlat
sbb
cmps
stos
xchg
mov
xor
or
ins
xchg
xchg
ret
or
retf
fisubr
stc
push
cmp
sbb
adc
cmc
pop
push
inc
(bad)
adc
sub
cmp
push
pushf
and
arpl
sbb
mov
mov
sub
add
push
ja
inc
in
inc
dec
adc
stc
mov
pushf
pop
mov
ds
cld
or
int
cwde
rcl
cmp
xchg
adc
not
adc
xor
inc
mov
jno
in
mov
jae
jl
pop
outs
cmp
adc
dec
jmp
jle
call
popa
jnp
aam
fstp
mov
loop
xor
cmp
push
nop
test
mov
xchg
icebp
xor
outs
fwait
push
add
jle
and
int3
aad
add
mov
retf
adc
push
cmp
loope
add
xchg
stos
pop
js
(bad)
sbb
mov
cli
push
pcmpgtw
jne
jo
mov
xor
lods
xor
sub
shl
rol
fld
mov
adc
dec
test
arpl
mov
dec
or
(bad)
cmp
push
rcr
mov
pop
fild
ins
mov
ret
sti
retf
ds
sub
sbb
aad
or
inc
neg
sub
jns
add
(bad)
or
popf
mov
and
jo
add
fcom
pushf
arpl
ss
mov
push
jno
jbe
movs
popf
xchg
and
mov
sbb
cmps
pop
call
or
sbb
aas
in
inc
fptan
test
cmps
push
push
mov
mov
push
cdq
cmp
idiv
out
in
sub
sub
and
movs
shl
pop
jl
(bad)
jge
and
fnstsw
push
jbe
fs
inc
sbb
fs
aas
lds
shr
mov
sti
fnsave
mov
fimul
mov
mov
cmp
mov
stos
push
inc
jmp
pushf
lods
mov
popa
shl
and
in
frstor
jmp
adc
cdq
jo
pop
outs
fsub
enter
push
jmp
icebp
cmp
mov
test
inc
pop
dec
mov
xor
jmp
iret
ins
mov
mov
lock
test
loope
es
sbb
sub
loop
sti
jns
sbb
ins
fucomip
jo
sub
pop
adc
or
sbb
shr
push
lock
cs
mov
out
xchg
clc
pop
and
rcr
sub
jae
ficomp
sbb
mov
test
mov
push
iret
sbb
xchg
xchg
inc
ds
hlt
retf
inc
sub
leave
xor
ins
add
daa
xor
aas
mov
and
push
and
mov
shl
ins
push
or
mov
hlt
pop
pushf
xor
aaa
jp
rol
rcr
pop
xor
cmp
xor
xor
dec
mov
xchg
add
icebp
icebp
imul
mov
inc
xchg
mov
mov
fcomp
jecxz
cdq
dec
pop
mov
add
in
cmp
adc
adc
in
dec
retf
shl
jg
ret
pop
es
jnp
movs
adc
out
ins
sub
adc
inc
imul
cmps
inc
xor
dec
xor
ins
dec
mov
sub
hlt
mov
retf
ret
push
cmps
inc
imul
jmp
js
outs
rol
je
test
ret
lods
mov
cmp
inc
jns
pop
bound
add
cmps
add
sub
gs
fwait
add
pop
lods
in
call
and
mov
inc
movs
dec
mov
nop
fild
fwait
nop
and
pusha
call
retf
into
pop
mov
in
cmps
out
jno
push
xchg
push
retf
out
or
call
loop
addr16
scas
pop
add
out
cmp
mov
pop
test
jae
lea
pop
(bad)
call
out
jbe
and
pop
stc
imul
and
rol
call
lds
lods
popa
sti
mov
lds
call
cmp
and
cwde
xchg
int
push
dec
stc
aaa
xor
outs
sub
cmp
retf
sbb
(bad)
sbb
pop
pop
adc
shl
sbb
mov
aad
ret
std
shl
xor
test
push
inc
ins
imul
out
pop
call
mov
xor
(bad)
jmp
xchg
movs
dec
fist
and
fild
fsub
test
mov
retf
xchg
ja
loopne
sbb
repnz
or
sub
imul
cld
xchg
repz
push
xchg
fdivr
adc
add
xchg
push
xchg
lods
jg
or
(bad)
je
lock
ja
nop
cmp
xchg
mov
outs
jmp
sub
arpl
add
loopne
add
or
imul
jo
loop
mov
pop
xlat
(bad)
retf
addr16
lea
fiadd
ins
jl
pop
xchg
xor
push
push
loop
add
mul
mov
push
jg
int
pop
nop
and
jnp
mov
dec
xlat
jbe
lea
mov
cmp
pop
daa
hlt
ins
loopne
inc
push
add
push
iret
lahf
xchg
mov
addr16
or
mov
stos
cmp
adc
rcl
inc
rcr
mov
jo
ins
call
loopne
cmps
push
mov
loop
cmps
stos
xchg
xlat
push
add
ins
sar
je
js
std
jns
je
lods
jbe
and
in
fsubr
call
clc
ins
in
cmp
nop
outs
adc
leave
jmp
mov
das
in
push
int
fisttp
loop
popf
mov
shr
jb
fstp
dec
pop
xor
jns
pushf
pusha
push
scas
jge
(bad)
not
jno
mov
adc
fadd
outs
out
(bad)
mov
xor
mov
xchg
fstp
ins
fild
xchg
mov
mov
xor
sar
retf
cmp
dec
add
scas
xchg
fmul
aad
add
fild
(bad)
ds
and
addr16
sub
imul
mov
jmp
pop
mov
call
(bad)
(bad)
test
inc
sahf
pop
bound
pop
push
cmp
push
into
mov
rcr
adc
daa
hlt
pop
das
(bad)
movs
push
adc
sub
jb
neg
call
in
das
pop
cmp
ret
arpl
iret
jmp
stos
fs
pop
adc
ds
mov
mov
test
inc
and
jmp
inc
cmp
stc
iret
call
imul
push
cdq
jmp
mov
inc
jmp
sbb
dec
mov
sub
add
ins
fnstcw
xchg
cmps
and
packsswb
ret
xor
popf
icebp
push
std
push
dec
and
enter
cwde
xchg
dec
dec
jle
and
inc
dec
movs
pop
sbb
fld
out
push
mov
jae
mov
xchg
inc
sahf
jge
push
fidivr
jecxz
les
or
jg
loop
inc
bound
jns
clc
or
xor
call
sbb
dec
mov
data16
dec
mov
enter
fisub
stos
sub
push
pop
jnp
fsubr
adc
xchg
lock
mov
bound
pop
out
inc
fdiv
pop
push
mov
xchg
les
mov
inc
push
jle
sbb
fwait
int3
sbb
out
pop
out
imul
scas
or
xchg
int
cli
add
hlt
rcl
mov
dec
xchg
jp
or
jp
popf
mov
sbb
inc
xor
(bad)
cs
test
pop
mov
lahf
sbb
and
dec
jp
cmp
jle
mov
sub
pop
test
push
repz
mov
cdq
aam
out
fdecstp
fcomp
cmp
cmp
dec
int
jge
lds
ds
call
repnz
fld
ins
cmps
dec
jle
mov
push
and
xchg
dec
pop
lar
out
pop
jle
xor
mov
ja
in
das
xlat
mov
or
cmp
mov
nop
test
(bad)
xor
add
clc
and
mov
add
hlt
std
nop
lea
push
(bad)
mov
clc
loopne
mov
sbb
adc
out
repz
gs
cmp
jb
repz
mov
mov
call
lods
fidivr
jle
dec
fisubr
cmp
jo
pop
ret
sbb
jmp
std
push
loopne
pop
aad
hlt
not
sbb
imul
and
mov
cmp
mov
xor
popa
gs
call
test
push
jmp
dec
adc
(bad)
shr
ret
or
outs
je
mov
dec
pop
fcomp
movd
jp
(bad)
jnp
or
cmp
sahf
cmp
mov
retf
push
stos
ins
and
mov
enter
call
call
call
(bad)
int3
mov
loope
sbb
in
cmp
push
retf
daa
mov
cs
adc
jecxz
setne
and
rcr
or
pop
fisubr
xor
loopne
xor
xchg
mov
stos
fisubr
xchg
pop
jge
out
mov
xchg
ins
aaa
mov
dec
std
or
mov
mov
adc
(bad)
(bad)
adc
vunpcklps
outs
movs
cmp
push
pop
sahf
movs
test
sbb
fidiv
xchg
pop
jae
cmp
cmp
ja
aam
add
(bad)
out
dec
popa
inc
xchg
push
sub
adc
push
cmp
rol
pop
(bad)
js
dec
gs
or
pop
in
shl
or
jecxz
jb
dec
fs
movs
stc
pop
pop
into
pop
sbb
fst
inc
stos
cld
bound
xor
jne
das
hlt
test
push
mov
enter
mov
push
mov
xchg
fist
jb
adc
ror
inc
aas
mov
push
arpl
fldcw
cmp
clc
pop
icebp
mov
push
xor
fiadd
add
dec
scas
in
jno
mov
inc
mov
leave
fxch
cdq
cmps
cdq
pop
and
push
dec
ret
(bad)
ins
mov
stos
or
and
ss
cli
push
and
in
test
iret
xchg
cmps
mov
add
sub
jmp
and
jbe
out
jp
ds
jecxz
hlt
or
cld
aaa
out
test
popf
xchg
movhps
div
imul
data16
outs
jecxz
mov
aad
fwait
jb
inc
push
add
imul
mov
cdq
inc
jecxz
mov
cdq
mov
popf
mov
jo
ficomp
test
cmps
inc
push
mov
test
cs
(bad)
or
mov
adc
sbb
mov
mov
push
xchg
int3
mov
pop
mov
inc
push
(bad)
and
(bad)
retf
xor
pop
pop
je
push
xor
prefetcht1
leave
je
mov
ins
aam
(bad)
gs
test
xchg
jg
nop
push
jmp
xchg
pop
test
push
std
js
outs
pop
xor
xchg
cmp
jns
mov
dec
inc
jl
adc
xor
into
mov
cmp
xchg
cwde
and
daa
dec
repnz
xchg
jp
or
mov
aam
(bad)
cs
movs
dec
fidiv
imul
mov
cmp
loope
(bad)
xor
mov
aam
jge
fidiv
aad
ins
xor
rcl
and
jmp
jno
sbb
fstp
pop
jg
test
mov
mov
mov
mov
mov
cdq
lahf
test
jmp
and
cmps
inc
sti
jmp
xor
ins
pusha
in
xor
xor
mov
mov
xchg
sub
iret
dec
sahf
push
(bad)
(bad)
loopne
push
mov
mov
fwait
xlat
xchg
or
(bad)
ficomp
or
retf
inc
jo
jno
pop
fisub
sbb
adc
mov
sar
inc
mov
xor
sub
push
not
and
imul
les
add
test
nop
out
inc
push
inc
leave
icebp
fucomi
jbe
js
sbb
retf
jle
push
and
shr
dec
pop
loopne
mov
add
scas
sub
lea
mov
jmp
ins
test
ja
mov
mov
cwde
push
(bad)
mov
lds
arpl
pop
and
in
cmp
adc
mov
ficomp
cmp
xor
leave
ss
rcr
fisub
mov
movs
xchg
mov
mov
cmp
neg
(bad)
out
fnstcw
gs
aaa
mov
xchg
ret
mov
ret
push
fstp
cmps
retf
(bad)
loope
jg
fisttp
movs
lea
pushf
jno
lock
add
xchg
lahf
cmps
sub
mov
jmp
cmp
cmp
adc
xor
pop
rcl
enter
repz
test
dec
fs
jl
jns
fild
jecxz
retf
dec
pop
pop
(bad)
mov
and
sti
lock
stos
mov
add
jecxz
sbb
push
add
mov
dec
test
mov
mov
lods
or
icebp
inc
fsubp
mov
icebp
xchg
push
push
leave
mov
sub
imul
test
mov
mov
cdq
xchg
cdq
fdiv
lods
mov
dec
mov
mov
push
add
in
dec
pop
add
fdivr
repz
packuswb
imul
fs
in
cmp
cmp
inc
mov
xchg
out
aam
cmp
sahf
movs
sub
enter
retf
or
pop
cli
leave
sbb
inc
jb
rcl
mov
outs
pop
movs
test
add
sahf
outs
pop
and
sti
fmul
cwde
cwde
cmp
sti
adc
fimul
push
push
xor
push
out
sub
cmp
add
out
add
inc
dec
repz
push
add
cmp
jge
jp
movs
enter
sbb
jle
push
shl
data16
sar
int
sbb
jne
fistp
ins
mov
inc
dec
pop
lock
fwait
and
in
frstor
cld
push
fdivr
fwait
jp
das
test
dec
dec
sub
mov
inc
xchg
fdivr
test
push
clc
and
(bad)
dec
sbb
add
adc
add
int
xor
cmp
lods
add
inc
rcr
mov
sbb
xor
sub
xchg
into
dec
in
sub
mov
and
ins
and
push
jno
fdiv
mov
push
sbb
cmps
inc
int
jecxz
and
shl
fcmovb
dec
je
sub
mov
je
fwait
pop
push
cmp
ins
add
mov
ins
mov
pop
test
lds
jmp
sub
idiv
fcom
(bad)
sbb
(bad)
and
cmp
jp
sbb
inc
dec
push
scas
fmul
xor
add
push
adc
cmp
shl
and
jno
int3
cmp
jmp
jl
xchg
mov
test
js
shl
rcl
loope
jnp
xor
ret
stos
cwde
aam
(bad)
add
js
mov
xchg
mov
fdivr
xor
xchg
pusha
mov
mov
call
cmp
xor
call
call
mov
mov
popa
xchg
push
iret
cdq
in
cmp
fsubr
clc
xchg
and
aas
cmp
fcom
in
ficomp
mov
add
inc
cli
sub
and
adc
leave
fsubr
jns
test
xor
arpl
xor
dec
pushf
jle
scas
shl
jle
clc
sbb
dec
ss
xchg
movs
fdivp
jnp
inc
retf
sar
cmp
in
sahf
fidiv
sar
arpl
xor
jnp
push
xchg
aad
aam
(bad)
fistp
xor
mov
fcos
mov
inc
cdq
loopne
add
cmp
sub
call
inc
imul
(bad)
push
test
arpl
pop
jno
int3
and
scas
mov
js
and
mov
mov
dec
pop
adc
sub
xchg
fcomip
push
movs
call
(bad)
daa
imul
(bad)
shl
dec
pop
adc
aam
in
push
dec
push
jp
push
dec
xchg
pushf
daa
pushf
retf
scas
cmp
in
sub
inc
sar
push
out
xor
fwait
pop
cli
pop
push
cwde
and
movs
into
pop
sbb
repz
test
enter
cmp
xchg
mov
mov
mov
stos
rdtsc
jnp
(bad)
popf
cmp
push
pushf
jnp
stos
inc
inc
das
retf
jo
pop
mov
sub
cld
push
mov
pusha
add
xchg
pop
into
leave
mov
or
lds
in
fisub
cmps
mov
and
pop
mov
loop
aaa
popf
xchg
xor
outs
scas
std
jae
rol
inc
icebp
push
pop
pop
movs
push
xchg
jmp
mov
repz
dec
hlt
outs
ret
rcr
inc
shr
repnz
stc
fdivrp
push
mov
add
pop
pop
stos
push
xor
add
pop
pop
hlt
fbld
fnstsw
imul
or
fld
clc
jbe
test
es
adc
and
mov
push
push
mov
xchg
fwait
out
mov
fcomp
pushf
mov
jnp
ret
inc
(bad)
mov
cs
mov
sub
inc
and
mov
pop
stos
cli
sbb
cmp
inc
mov
movs
aaa
adc
cli
outs
mov
pop
jecxz
push
xor
es
pop
int
jo
sub
jne
jo
xchg
(bad)
in
sbb
repnz
ja
dec
pop
popa
sub
mov
add
mov
mov
sbb
cmp
push
aaa
inc
(bad)
loopne
adc
add
leave
shl
sti
add
add
xor
jle
rcr
sbb
bound
push
jmp
ficom
jmp
pushf
sub
cmp
cmp
mov
push
fmul
dec
push
stos
cwde
ret
call
inc
es
adc
dec
pop
cmp
mov
ficom
inc
scas
jmp
adc
dec
fwait
addr16
jmp
mov
ds
and
add
js
xchg
push
fnstenv
push
fadd
cmp
xchg
lea
mov
xor
adc
sbb
push
adc
out
push
(bad)
adc
cmc
mov
jne
pop
js
stc
mov
sbb
popf
pushf
iret
sub
(bad)
out
and
pop
jmp
or
int
inc
or
cmp
ins
jp
dec
xor
and
jmp
fst
pop
ins
push
jge
enter
test
dec
mov
push
mov
outs
cmps
int3
xchg
sbb
jmp
push
cmp
add
fs
pop
sbb
mov
call
pop
push
xor
inc
or
loop
ret
ss
lock
pushf
in
xchg
(bad)
cmp
xchg
rcl
mov
sbb
std
daa
nop
imul
imul
pop
retf
mov
and
outs
cmps
push
sub
mov
test
push
xor
inc
push
push
out
rol
aad
cmp
and
adc
pop
aam
imul
popf
sbb
in
mov
ror
push
pop
imul
ins
test
pop
and
inc
push
outs
nop
test
sub
push
mov
xchg
bound
sbb
push
or
pop
jnp
lahf
int
xor
dec
cmc
or
or
fistp
out
fisttp
mov
(bad)
call
mov
sbb
mov
les
push
gs
xor
fdivr
mov
mov
repnz
and
lods
or
out
not
ds
fidiv
cmps
out
mov
cmp
mov
adc
pop
push
cmp
jle
sub
cdq
scas
and
sub
push
sub
pop
call
dec
jge
push
mov
out
out
imul
fs
fidiv
jns
push
hlt
aas
push
sbb
cmp
ins
pop
mov
nop
aas
push
dec
(bad)
std
test
popa
pop
xchg
mov
xchg
mov
dec
or
push
mov
nop
pop
pop
xchg
push
xor
imul
cli
aad
or
cmc
jg
cmc
mov
mov
cmp
mov
pop
pusha
scas
pop
rcr
mov
cmp
and
inc
adc
xor
not
xchg
movs
je
jl
daa
inc
push
xchg
(bad)
(bad)
and
xchg
sub
lahf
loope
push
cli
inc
sub
int
or
xchg
xchg
sub
pop
sub
(bad)
pop
sbb
cld
scas
(bad)
into
test
jg
out
and
cwde
mov
dec
mov
loop
sbb
hlt
mov
pusha
sbb
add
sahf
sbb
or
popf
fst
sbb
push
fs
js
mov
(bad)
movs
loope
(bad)
in
ret
repnz
add
add
mov
in
fxch
cs
test
int3
push
and
and
ret
pop
dec
das
jnp
je
mov
retf
push
mov
scas
ret
scas
fwait
adc
xchg
test
out
(bad)
cmp
icebp
or
sbb
mov
xlat
mov
push
xor
mov
mov
cdq
test
pushf
(bad)
xchg
les
in
adc
in
mov
pop
sub
add
dec
or
push
xchg
lea
push
inc
jo
aaa
add
fsub
aam
xlat
jp
xchg
loope
je
test
inc
xchg
rol
or
dec
adc
and
(bad)
cld
jnp
adc
mov
mov
inc
in
(bad)
mov
ds
jge
push
mov
mov
(bad)
jle
cmp
dec
ds
imul
adc
loop
test
inc
adc
stos
mov
inc
in
lods
lds
cmps
push
fcomi
push
bnd
leave
adc
fistp
fadd
xlat
fld
or
inc
jnp
mov
out
fwait
jmp
lds
push
push
cmps
pop
ror
pop
xor
jnp
arpl
pop
sub
ja
push
push
mov
xor
adc
dec
or
arpl
stos
mov
fist
repz
add
mov
test
in
sbb
jge
imul
and
jmp
mov
xchg
xor
pop
mov
mov
inc
adc
dec
push
mov
jp
arpl
cmp
dec
xor
push
push
jns
and
cmp
ret
and
retf
push
dec
jbe
mov
dec
aam
push
mov
aaa
std
cmp
pop
pop
push
adc
jmp
out
push
out
xchg
inc
shr
cdq
pop
add
dec
imul
mov
jp
mov
neg
ret
push
sub
push
xchg
sbb
xor
adc
mov
les
mov
jmp
push
movs
std
jns
popa
fisttp
push
jmp
jl
cmp
xor
ficomp
ret
aaa
cwde
mov
bound
pop
test
hlt
jae
fcmovnu
call
jmp
push
push
lods
ins
inc
mov
add
jbe
push
dec
movs
retf
pop
js
ret
mov
sbb
jl
mov
loope
jmp
ficomp
(bad)
xchg
dec
push
push
xchg
jb
xchg
and
or
iret
mov
jne
jmp
sbb
imul
seto
out
rcr
lea
xchg
fsubr
fucomi
dec
inc
retf
scas
sub
ss
ret
mov
idiv
mov
push
fcmovnb
xchg
push
ins
inc
div
xlat
cmp
sbb
inc
neg
xor
push
pop
stos
adc
cmp
push
rcr
add
sbb
cdq
push
out
mov
scas
xchg
outs
sbb
or
inc
xor
inc
xchg
(bad)
pop
mov
int3
pushf
mov
cmp
jbe
lods
cmp
or
and
fadd
jge
inc
jnp
adc
aad
movs
movs
mov
out
fisttp
push
ret
sub
cld
sub
mov
or
and
scas
add
xor
and
inc
cmps
adc
out
mov
cwde
pop
fstp
retf
sub
sti
enter
loopne
add
cs
or
inc
xor
jl
inc
inc
jge
and
sti
cld
loopne
adc
ja
int3
pusha
jmp
mov
imul
xlat
fild
(bad)
faddp
aad
pop
push
rcl
jg
loopne
iret
jp
scas
and
adc
cdq
(bad)
test
mov
in
(bad)
mov
pop
out
push
or
(bad)
xchg
shr
jg
movs
stos
mov
pop
sbb
popf
push
cwde
jnp
jmp
sbb
inc
push
adc
ds
shr
mov
mov
sub
lea
sbb
sub
mov
in
fmul
clc
push
push
jb
mov
icebp
mov
and
xchg
enter
popf
jbe
fsubrp
pop
mov
ins
dec
loop
fsubp
pusha
xchg
fild
sub
sar
inc
mov
test
cmp
mov
(bad)
xor
sbb
cmp
xchg
dec
mov
mov
mov
repnz
fisubr
sub
cmp
retf
push
lock
adc
cmp
out
(bad)
nop
add
js
add
mov
sbb
ror
iret
cmp
or
ins
cmp
adc
arpl
mov
cmp
xchg
das
les
dec
sub
jmp
mov
and
lea
lahf
sar
(bad)
adc
mov
cmp
push
sar
scas
mov
scas
jae
sub
rcl
mov
icebp
add
pop
lods
ins
dec
sub
pop
inc
fidivr
adc
push
test
(bad)
into
dec
jbe
sbb
inc
mov
cld
jp
(bad)
out
vunpcklpd
(bad)
popf
sub
add
xchg
movs
or
hlt
icebp
int3
loopne
sub
push
ret
sahf
cli
ss
dec
inc
retf
pusha
rcl
in
mov
push
sbb
aas
test
inc
mov
lock
iret
ja
inc
call
lods
cmp
cmp
mov
inc
pop
sub
(bad)
nop
cmp
retf
in
dec
shl
push
cmps
fsubr
or
adc
fst
push
mov
icebp
xchg
mov
fdiv
es
fcom
scas
or
adc
xchg
popf
int
add
xchg
mov
mov
or
inc
pop
or
jge
mov
sti
adc
sbb
stos
es
(bad)
mov
mov
add
retf
push
inc
lods
pop
(bad)
sub
mov
xor
inc
dec
push
inc
sub
jnp
dec
leave
cs
mov
stos
fadd
movzx
mov
loope
pusha
das
scas
lea
push
retf
clc
jge
leave
into
cmp
fdivp
(bad)
imul
ret
inc
pop
loop
pop
retf
sub
loop
adc
xor
push
mov
jge
(bad)
xchg
test
adc
inc
nop
mov
lock
daa
xor
xor
mov
cmc
dec
(bad)
jmp
retf
fucomp
xchg
mov
shl
and
sbb
mov
cmp
inc
mov
sbb
xchg
pop
inc
xor
mov
pop
stos
lods
enter
add
ins
sub
inc
das
out
movs
sbb
add
inc
out
loopne
dec
sbb
sub
cmp
arpl
loope
jmp
test
pop
adc
pop
call
repz
call
ret
push
push
push
or
xchg
or
xchg
sub
jl
add
aas
xor
mov
adc
jnp
mov
(bad)
push
mov
movntq
btr
arpl
inc
(bad)
ja
(bad)
out
sub
pop
lea
add
xchg
mov
push
pushf
(bad)
xor
sbb
xchg
jecxz
cmp
fsubr
es
xchg
sub
inc
inc
jbe
dec
cdq
call
lock
in
mov
sub
and
rcr
adc
adc
arpl
cmp
outs
jo
movs
jae
addr16
adc
add
pusha
pop
add
sar
pop
push
mov
or
mov
(bad)
addr16
lahf
jmp
dec
imul
inc
jne
mov
cmc
es
pop
stc
jp
mov
mov
inc
xchg
lahf
jle
or
xchg
jne
xor
(bad)
ja
pop
push
dec
cmps
xchg
mov
mov
in
adc
aas
dec
cmp
xor
retf
dec
icebp
and
iret
mov
(bad)
repnz
mov
push
dec
push
(bad)
mov
add
les
inc
and
jl
adc
ja
stc
mov
pop
dec
xchg
call
pop
retf
stos
push
mov
push
pop
adc
mov
clc
gs
jle
jp
sub
add
fcmovu
ss
stos
addr16
cdq
push
xor
repz
int
pop
xchg
push
stc
sahf
or
sub
mov
ror
imul
mov
inc
jae
xor
xor
sbb
inc
inc
iret
call
xchg
jg
inc
cwde
xchg
or
int
imul
shl
adc
lock
test
push
test
mov
mov
mov
pand
jne
fst
shr
cmp
daa
(bad)
push
in
and
xchg
add
dec
out
sti
mov
out
sahf
test
xchg
xchg
mov
stos
inc
xchg
cmc
xchg
sub
cmp
jp
shr
sub
sub
js
mov
leave
inc
xchg
mov
cmp
das
sub
pop
int
lods
in
mov
jmp
jle
mov
pop
pop
adc
shl
mov
ficomp
lock
repnz
add
sub
addr16
lods
loopne
mov
push
cmps
scas
mov
sub
dec
icebp
in
sbb
leave
ja
mov
shr
pop
pop
sbb
aad
xor
adc
pop
jle
es
test
aad
(bad)
call
push
hlt
les
pandn
cmp
jle
hlt
sbb
stc
or
fst
dec
push
das
mov
adc
jns
iret
adc
and
mov
push
in
pusha
inc
and
pop
dec
mov
jl
fidiv
gs
loopne
movs
jp
sar
and
mov
jp
jno
or
call
fs
mov
mov
cmp
pop
inc
jbe
mov
in
push
bound
pop
mov
xchg
and
and
ret
sub
data16
sub
inc
and
mov
mov
pop
and
push
adc
leave
leave
push
jo
ja
pop
and
fwait
jmp
push
xor
pop
ins
and
or
mov
dec
sbb
outs
pop
int
call
fimul
and
sar
cmp
push
adc
lods
mov
aaa
add
pop
mov
sbb
fucom
jne
ret
mov
loope
push
xchg
cld
add
sub
and
lods
pushf
cmp
mov
das
xor
sbb
ret
clc
adc
jno
je
mov
ficomp
xor
jne
or
xor
shr
pop
cs
out
adc
je
cmc
mov
fcom
fsub
jg
xchg
fdivr
ds
stos
jl
mov
imul
sbb
push
adc
addr16
std
ret
aad
sbb
dec
nop
sub
xchg
inc
sub
mov
out
arpl
scas
xchg
jbe
fs
(bad)
sbb
add
cmp
xchg
pop
xchg
inc
in
add
rep
or
mov
(bad)
enter
and
test
jecxz
int
stos
ret
fsub
push
inc
les
test
mov
inc
add
xor
aad
call
loope
push
mov
sbb
and
les
inc
add
pop
sub
(bad)
imul
inc
std
movs
mov
dec
fwait
cmp
bound
mov
sbb
pop
iret
imul
jp
pop
jns
push
cmp
jbe
leave
jae
outs
add
inc
mov
ins
or
mov
int
imul
lods
mov
cmc
pushf
xor
iret
popf
retf
mov
shr
inc
dec
shl
push
mov
mov
(bad)
mov
or
inc
inc
pop
test
in
or
pop
jle
add
nop
pop
jmp
sub
cs
(bad)
dec
or
jg
pop
fs
jne
sti
add
adc
mov
out
xor
pop
out
mov
pusha
jne
fimul
in
or
divps
cdq
outs
xchg
cwde
cmc
(bad)
lods
push
jp
cmp
cmp
xchg
in
add
cdq
pusha
mov
and
lods
lods
xor
fisttp
(bad)
stc
adc
and
stc
(bad)
pop
push
aas
sub
imul
fwait
imul
ins
sub
mov
cmps
pop
mov
inc
mov
push
addr16
add
cmp
inc
retf
test
iret
mov
test
in
inc
ins
leave
fs
loope
fcmovb
cmp
or
int
jo
push
sub
(bad)
gs
xchg
leave
cld
mov
enter
sub
and
out
test
sub
into
sub
ret
jb
mov
pop
in
bnd
pusha
fisttp
bnd
mov
push
or
adc
dec
sub
cmp
and
dec
push
push
jle
jo
sbb
jecxz
inc
mov
loopne
xchg
push
pushf
sbb
dec
test
xchg
imul
mov
test
inc
add
xchg
ret
pop
fwait
je
or
jg
fcmovb
not
ror
es
jle
jl
rol
ds
pop
(bad)
mov
rcl
cmp
jb
loopne
lods
sbb
sbb
imul
and
in
inc
adc
xor
push
xchg
cmps
outs
dec
fstp
fdivr
loope
jl
push
cmps
loopne
(bad)
mov
lods
pop
enter
adc
push
les
sahf
mov
fs
(bad)
ficomp
push
test
hlt
pop
fmul
mov
push
mov
repnz
mov
(bad)
xor
dec
fwait
mov
imul
inc
fstp
arpl
pop
dec
in
mov
cmp
push
sbb
jo
xor
push
mov
(bad)
and
inc
mov
outs
jle
mov
test
and
and
inc
addr16
cmp
sub
sbb
pop
mov
inc
pusha
(bad)
sub
cld
or
movups
adc
cmc
dec
scas
aaa
imul
lahf
(bad)
fstp
inc
ficomp
or
or
push
test
dec
icebp
aad
nop
int3
mov
pop
test
inc
inc
mov
aas
or
loope
ss
lock
mov
jmp
push
sahf
mov
cmc
idiv
movd
mov
jle
cld
jle
out
sahf
fcomp
xor
ret
xor
inc
jl
cli
sbb
retf
cdq
cmp
push
or
lea
mul
pop
push
sar
loop
inc
mov
add
push
nop
mov
and
outs
xchg
addr16
shr
or
xchg
pop
xor
adc
xchg
rol
jae
mov
stos
mov
cmp
aas
fwait
inc
enter
and
push
cld
fcomp
mov
xchg
sti
push
inc
add
fadd
add
jb
ja
sbb
push
push
data16
add
aaa
or
push
(bad)
mov
inc
pop
cld
jmp
sti
(bad)
or
enter
xchg
push
loopne
or
in
mov
sub
cmp
retf
xchg
sbb
inc
aas
ss
mov
xor
sub
fsub
aad
mov
(bad)
loope
cs
xor
and
xchg
adc
push
nop
ins
rcr
jb
test
mov
iret
cmp
test
push
or
(bad)
xchg
pop
dec
fmul
mov
mov
mov
jg
xchg
and
sub
mov
loopne
test
lods
jmp
sub
inc
test
icebp
dec
cmp
dec
mov
out
fistp
mov
test
add
shl
and
inc
or
dec
adc
pusha
clc
pushf
cld
aaa
test
retf
or
clc
movs
and
cmp
lds
fisttp
lahf
add
cmp
push
stos
sub
push
cwde
outs
mov
jge
add
dec
ja
test
xchg
daa
fdiv
xchg
stos
lds
sub
sar
cwde
dec
sbb
adc
ins
out
stos
aad
mov
add
call
push
fisttp
push
cmp
mov
int3
inc
push
test
je
(bad)
in
test
(bad)
iret
jge
(bad)
gs
test
sahf
xchg
push
mov
or
or
leave
jbe
ss
fisubr
aaa
add
int3
scas
mov
stc
mov
mov
adc
sbb
xor
popf
in
fs
int3
mov
mov
add
cmp
xor
pop
nop
adc
clc
add
loopne
retf
cld
inc
iret
cmp
push
add
xchg
jge
adc
push
mov
mov
jmp
enter
adc
xchg
dec
cli
push
cli
repnz
jb
pop
sub
loopne
xor
enter
jmp
arpl
pop
js
scas
dec
test
mov
rcl
pop
jmp
jmp
xor
and
sbb
loop
sbb
mov
push
mov
jns
popf
in
xor
sub
dec
lock
push
fcmovu
test
cmp
pushf
mov
mov
hlt
fcom
je
scas
(bad)
jmp
inc
shl
les
shl
inc
outs
xor
shl
pop
shl
in
push
push
pushf
dec
test
ss
sub
and
push
lea
sbb
jne
sub
mov
xor
icebp
retf
and
mov
cmp
ret
rol
ins
xor
enter
fild
cmp
push
(bad)
mov
dec
jno
sbb
inc
sub
pushf
push
gs
loope
sbb
xchg
in
ret
jl
sbb
or
sbb
adc
jmp
mov
mov
mov
test
in
retfw
int
test
xor
in
jmp
enter
inc
inc
push
test
into
stos
js
or
fnstenv
xchg
xlat
fiadd
rol
adc
test
arpl
xchg
dec
jge
(bad)
xchg
shl
retf
hlt
mov
cmps
bnd
mul
movs
push
mov
and
fnstcw
mov
ins
pop
add
push
(bad)
cmp
jp
sbb
push
push
cs
sub
arpl
xor
in
mov
adc
cwde
xchg
pop
sbb
shr
cmc
xor
cmp
xchg
sbb
shl
cmp
(bad)
push
inc
push
xchg
inc
mov
mov
and
loop
imul
jmp
scas
add
mov
mov
jecxz
mov
sbb
mov
or
mov
xchg
out
pushf
repz
xchg
xchg
cs
mov
and
mov
sbb
leave
sbb
mov
imul
jae
push
add
outs
pop
pop
out
mov
pop
adc
sbb
sbb
dec
cli
mov
rol
mov
and
sbb
imul
and
loop
mov
sar
ror
test
imul
ret
push
sbb
mov
int3
stos
in
xchg
fnstcw
scas
pop
cmps
lahf
pushf
sbb
ins
xchg
das
outs
dec
or
mov
cwde
ret
(bad)
out
test
nop
and
add
pop
test
iret
sti
icebp
or
scas
mov
sti
push
jl
inc
scas
inc
out
and
or
and
popa
dec
xchg
movs
dec
int3
mov
in
sub
jp
adc
fdiv
aaa
sub
fst
enter
mov
hlt
inc
inc
in
fnstcw
xor
mov
mov
jg
mov
xor
xchg
inc
cmp
rol
push
ja
adc
clc
jns
xor
xor
clc
in
inc
mov
cmp
pop
test
xchg
inc
ins
inc
add
jmp
pop
mov
fcom
cmps
movs
or
dec
mov
mov
and
je
push
call
pop
fmul
sar
cs
pop
aaa
inc
imul
cwde
xchg
xor
push
sub
out
pop
cwde
mov
stos
test
jo
in
mov
jae
jecxz
(bad)
dec
mov
adc
popf
sbb
mov
sbb
push
out
cmp
mov
rol
out
jl
(bad)
lea
std
cmp
mov
scas
mov
push
pop
fabs
dec
push
mov
mov
dec
test
repz
sub
add
xor
jnp
lods
mov
pop
jbe
movs
pop
adc
clc
rol
and
int3
in
mov
mov
jmp
out
inc
mov
inc
std
mov
repz
fsubr
sub
mov
push
stc
jo
das
loop
loope
pop
cmp
xchg
and
int3
xchg
jl
jmp
mov
cmp
shl
loope
fisub
stos
xor
push
in
outs
adc
push
rcl
or
rol
ret
dec
fnstsw
xor
cld
out
aas
add
cmp
fdivr
ins
xchg
sar
das
nop
test
jo
xchg
pop
in
pop
and
jns
mov
addr16
xor
inc
adc
call
xchg
loopne
push
cmc
push
xor
pop
shl
dec
movs
sub
data16
rol
daa
inc
loope
jg
inc
jmp
test
loopne
fbld
lods
outs
pushf
push
sub
sahf
xchg
jp
jae
enter
fcom
leave
cs
fadd
clc
cmp
repnz
popf
in
jb
add
dec
xchg
sbb
lods
mov
daa
mov
push
mov
and
jno
and
enter
cmp
outs
ins
in
movs
dec
leave
ins
loopne
in
xor
inc
repnz
adc
mov
lock
ds
add
sbb
push
or
loopne
mov
test
test
xor
stos
ins
cmp
into
inc
mov
stos
call
pop
dec
mov
movs
sub
add
out
test
pusha
adc
jecxz
ret
int3
stos
xchg
dec
sub
int3
repnz
imul
xor
sub
fwait
xor
test
iret
sub
ds
and
adc
pop
in
pop
add
mov
cmp
nop
mov
or
pop
cmc
test
loop
or
(bad)
cli
into
(bad)
ins
les
xchg
push
ret
out
(bad)
mov
add
fmul
xchg
pop
add
mov
xchg
jecxz
aaa
ret
jns
cli
and
mov
test
cs
stc
stos
ins
mov
push
(bad)
clc
sbb
enter
div
xor
int
lds
sar
in
add
into
paddw
xor
(bad)
movs
int3
imul
inc
test
mov
cmp
jg
daa
and
in
push
adc
pop
mov
add
aad
(bad)
rcl
xchg
mov
or
mov
cmps
sti
xor
inc
xchg
or
ja
cmp
stos
sub
ret
jb
push
mov
popf
fstp
push
scas
pop
imul
lea
inc
(bad)
scas
jns
and
inc
or
ss
dec
iret
cmp
std
cmp
cmp
fcomp
rcl
sbb
adc
lods
dec
shl
pop
in
es
stos
add
out
les
mov
inc
iret
in
lods
retf
jb
inc
popa
mov
pop
pop
push
mul
xor
cmp
cmp
pop
mov
out
pop
loop
inc
cmps
hlt
adc
push
xchg
popf
int3
test
aam
push
and
test
fsub
sub
lock
cs
shl
call
sub
out
jle
xchg
(bad)
mov
movs
daa
adc
add
sbb
xor
push
sbb
retf
inc
mov
pop
sahf
in
enter
test
xor
fiadd
push
xor
inc
shl
dec
mov
dec
push
sub
cmp
ret
and
xchg
add
in
push
sub
jle
jno
hlt
or
outs
cmp
or
sbb
sbb
or
out
sbb
dec
add
add
jecxz
inc
scas
xor
and
mov
adc
fldenv
mov
inc
je
fisub
jae
adc
add
sub
adc
pop
popf
popw
arpl
push
mov
xchg
pop
sub
cmps
je
into
add
in
xchg
add
sahf
les
sub
outs
dec
imul
add
mov
xlat
push
jp
xchg
and
ficom
arpl
push
pop
mov
sahf
xchg
leave
mov
xlat
lahf
push
loopne
mov
jmp
xchg
sbb
and
into
push
out
outs
and
dec
push
pusha
adc
pop
out
shl
dec
mov
aas
mov
add
sti
add
mov
test
lahf
jne
or
add
and
push
add
mov
sbb
dec
iret
test
repnz
nop
adc
sub
jl
test
imul
scas
jl
inc
sub
add
mov
arpl
xor
xor
(bad)
cli
les
or
fadd
dec
inc
daa
outs
adc
push
jb
sbb
mov
dec
mov
(bad)
stc
out
inc
nop
fwait
and
stos
mov
mov
clc
bound
repz
pop
jmp
aaa
xchg
fwait
push
jecxz
pop
stos
test
(bad)
aam
mov
std
add
popf
jnp
push
in
inc
add
test
inc
fld
xchg
ja
fild
fadd
mov
jno
jo
fmul
sahf
cmps
imul
jne
adc
add
aad
adc
call
(bad)
rcl
adc
dec
lods
jnp
xchg
lahf
cmp
sub
test
jle
jnp
(bad)
cmp
mov
movs
pop
or
int3
mov
inc
mov
and
cwde
call
pop
adc
push
call
fnstenv
push
add
inc
xchg
xchg
cli
fisubr
imul
push
je
call
sub
cld
pop
mov
int3
adc
div
shl
pop
sub
std
pop
pop
sub
add
loope
mov
sahf
xchg
stos
inc
dec
stc
lahf
mov
xor
icebp
movs
in
clc
int3
pop
push
test
(bad)
sub
outs
add
mov
xor
mov
pop
(bad)
fs
dec
imul
xor
retf
and
cmc
cmps
dec
loopne
or
pop
mov
arpl
scas
scas
es
xchg
std
sahf
pusha
lods
cmc
sub
xor
mov
inc
add
xchg
mov
das
adc
push
sbb
cmp
xor
xor
dec
push
cwde
pop
aas
ror
mov
pusha
jge
mov
and
adc
test
pop
xor
outs
adc
lods
jo
fadd
in
stc
mov
pop
mov
hlt
dec
xchg
xor
fsubrp
mov
xor
mov
out
loopne
call
enter
mov
mov
gs
inc
nop
add
arpl
push
ret
ret
mov
inc
xchg
adc
mov
iret
pop
jl
pushf
and
mov
xchg
xor
movs
out
inc
fstp
jns
movs
icebp
pop
pop
sub
push
(bad)
push
stc
aad
in
sbb
jl
test
icebp
cwde
lock
mov
mov
push
into
popa
icebp
sbb
pop
cmps
neg
adc
nop
mov
mov
adc
sub
jne
push
and
test
adc
mov
stos
hlt
lods
aaa
mov
mov
cli
out
adc
in
loope
loope
pop
outs
add
dec
aaa
pop
rcr
pop
or
dec
out
xor
pop
xor
mov
(bad)
inc
add
mov
(bad)
outs
adc
mov
jp
dec
sub
inc
cdq
cmc
pop
repnz
inc
adc
jmp
popa
jmp
jns
push
repnz
sbb
addr16
jns
ins
bound
sbb
jae
sahf
dec
jmp
hlt
sti
mov
repz
mov
mov
shr
dec
das
pop
idiv
test
sub
sub
inc
mov
loope
int
pop
dec
enter
out
popf
repnz
mov
mov
mov
adc
add
mov
std
retf
adc
and
addr16
fs
popa
inc
xor
mov
cmp
and
ja
push
fdivp
out
out
jns
xchg
xlat
mov
cmp
inc
push
call
or
mov
outs
mov
sbb
push
xchg
loopne
jo
push
mov
(bad)
shl
jbe
mov
sbb
push
ins
dec
and
dec
gs
std
movs
pop
fisttp
movs
sub
mov
ret
int3
jae
mov
mov
sub
jnp
pop
fs
xor
cwde
dec
push
test
xchg
mov
sbb
mov
retf
nop
out
mov
adc
lock
push
mov
push
xor
in
add
in
xchg
repz
xchg
jno
mov
int
mov
sar
pop
div
pop
leave
xor
mov
outs
pop
mov
cmps
test
mov
out
xlat
or
push
jbe
repnz
or
mov
add
aam
jle
and
adc
fidiv
sahf
and
cmp
cli
in
frstor
(bad)
addr16
jge
inc
sub
adc
xchg
or
push
arpl
mov
mov
aad
adc
cli
ret
aad
rcl
pop
and
call
pusha
sub
loop
xor
jg
sbb
adc
imul
push
rol
mov
loopne
sub
clc
jmp
in
inc
mov
pop
cmp
sbb
add
inc
mov
imul
pop
mov
jmp
dec
dec
cld
push
outs
ja
or
mov
or
push
sbb
inc
ficomp
sub
mov
cmp
inc
(bad)
mov
xchg
xor
mov
icebp
cmp
jge
std
mov
adc
shl
jo
mov
or
hlt
jns
xchg
mov
repz
mov
jmp
scas
xor
bound
push
cmp
mov
add
sbb
sbb
pop
cmp
or
adc
cmp
bound
mov
push
xor
xchg
ja
pop
out
sbb
pop
movs
jl
push
jl
mov
mov
nop
or
mov
in
daa
(bad)
(bad)
cwde
inc
dec
bound
inc
mov
jnp
inc
mov
and
es
or
xor
mov
add
stos
mov
outs
xchg
or
je
cmc
jmp
add
call
xor
push
sub
daa
or
lds
mov
lahf
std
sub
movs
xchg
mov
mov
push
inc
pop
es
mov
push
mov
push
cmc
mov
push
xor
and
clc
ss
jns
xchg
pop
(bad)
adc
mov
or
dec
mov
hlt
inc
out
cmps
sub
or
bound
xchg
ret
dec
fbstp
and
pop
jb
dec
fcmovb
repnz
xchg
(bad)
fistp
call
cmp
aam
ret
icebp
stc
cdq
aas
pop
out
shl
inc
xor
jge
mov
cdq
ja
jne
in
aas
xor
xor
xor
rcr
jmp
mov
pop
popf
xor
add
out
out
int3
mov
pop
nop
adc
iret
aam
fisub
cmp
mov
pop
pop
cmp
jge
(bad)
shl
cmps
pop
jbe
or
ss
fwait
retf
out
mov
fsub
sbb
stos
inc
into
sar
pop
sbb
jbe
mov
pop
fist
sbb
pop
dec
jecxz
loope
ret
mov
jno
pop
(bad)
clc
sbb
mov
or
adc
pop
push
or
fld
stos
popf
js
mov
sahf
sub
or
sar
out
loopne
mov
lods
cmp
xor
sbb
pop
dec
movs
int
(bad)
or
cli
jecxz
sahf
and
daa
mov
sub
sub
cmps
ss
jmp
xchg
into
neg
mov
mov
fucomip
ins
fwait
push
pop
or
retf
arpl
add
loope
js
and
xchg
adc
pop
(bad)
pop
mov
pop
mov
sub
jg
fisttp
(bad)
cmp
fimul
popf
xlat
pop
neg
mov
stos
in
sbb
jg
pop
jecxz
mov
es
int3
fcomp
movs
mov
adc
xchg
repnz
jnp
mov
push
test
movs
cdq
sahf
ficomp
rol
jno
leave
mov
stc
xchg
int
movs
lock
adc
retf
push
pop
pop
adc
and
cdq
hlt
aas
(bad)
sti
pusha
push
in
lea
xor
inc
ja
pop
icebp
in
xchg
repz
add
out
gs
jle
jo
inc
cwde
mov
cld
movs
jmp
jle
or
fcomip
test
mov
and
mov
mov
fdiv
mov
lahf
lea
xor
(bad)
jae
jae
mov
enter
push
aam
pop
in
and
test
retf
adc
add
lods
sub
or
ret
cmp
inc
arpl
mov
sbb
pop
sbb
xor
dec
shr
pushf
arpl
jl
adc
mov
inc
(bad)
and
sub
fs
(bad)
jmp
stos
imul
(bad)
or
push
shr
or
dec
repnz
mov
data16
xchg
mov
xor
add
or
sbb
pop
outs
cmp
addr16
adc
aas
xor
cli
retf
aam
inc
cmp
dec
fcom
cmc
in
jns
add
lock
nop
rcr
gs
loop
inc
mov
or
xor
dec
sbb
inc
icebp
mov
adc
rcr
movs
inc
or
call
push
mov
cmps
xchg
out
cld
aam
jbe
daa
inc
(bad)
(bad)
jmp
ds
std
adc
mov
cs
sbb
bnd
mov
adc
outs
jecxz
adc
sbb
pushf
pop
pop
push
(bad)
mov
iret
xor
add
lds
cli
push
mov
lea
movs
jo
loopne
jmp
sbb
add
fistp
ret
inc
movs
out
bound
retf
mov
push
cdq
and
aad
stos
xchg
adc
call
inc
js
fmul
mov
and
add
xchg
adc
stc
jnp
das
mov
aas
int
aaa
clc
push
jg
lea
out
and
in
fld
inc
pop
idiv
add
adc
ret
xchg
xchg
fld
cmp
or
js
jmp
and
push
(bad)
mov
mov
loop
lds
call
mov
lods
dec
adc
popf
adc
push
(bad)
mov
xor
mov
retf
adc
ins
xor
or
fwait
retf
jns
(bad)
adc
dec
je
sub
and
stos
mov
mov
call
in
sub
loopne
scas
fimul
sub
push
sahf
xor
mov
sbb
inc
jle
push
leave
pop
das
(bad)
je
dec
shl
dec
sub
dec
mov
cmc
sub
lock
loopne
lods
sub
bndstx
sub
sbb
int3
cmc
sub
outs
jbe
outs
cmps
and
and
les
jge
mov
leave
or
pop
add
call
push
pop
push
jbe
xchg
loopne
loop
dec
xchg
imul
cmp
jg
js
lds
inc
sub
pop
std
add
jne
or
in
pop
ss
std
call
jnp
add
shl
call
and
add
or
outs
call
adc
stos
dec
lds
mov
ja
repz
cmc
aas
jle
push
shl
loop
outs
mov
mov
inc
mov
inc
mov
jmp
fild
adc
cmp
fsub
repz
dec
add
hlt
push
cld
pop
inc
ins
push
xchg
cli
push
out
cmp
sti
cmp
call
nop
jg
out
ja
push
cwde
sub
sbb
mov
push
(bad)
sbb
mov
loope
in
cwde
test
in
sahf
xchg
cld
sub
gs
adc
lahf
push
sbb
sub
test
aaa
mov
sub
retf
jmp
leave
cmp
retf
arpl
out
adc
inc
nop
test
mov
les
idiv
sub
xchg
int
push
enter
ds
sub
sub
add
lock
push
addr16
push
movs
push
sti
movs
(bad)
jecxz
mov
shr
imul
pop
add
dec
sbb
xchg
jo
dec
jge
cmp
scas
imul
add
int
fcom
stc
push
inc
addr16
and
pop
cmp
pop
scas
mov
cmp
cmp
sub
leave
ds
sub
into
jmp
xor
sub
ins
sub
fcomp
push
mov
xchg
sub
ret
push
mov
or
pop
in
dec
inc
xchg
mov
pop
jp
fcomi
cmp
push
xchg
sahf
ficomp
out
(bad)
ret
mov
scas
push
pop
stos
mov
call
add
add
aaa
add
dec
(bad)
mov
push
mov
and
xor
aam
cmp
xchg
movs
pop
cmp
stos
retf
mov
sbb
nop
mov
mov
imul
jmp
ret
dec
aaa
repnz
lock
aad
das
ins
fwait
jge
sub
add
push
adc
out
inc
fmul
jmp
mov
mov
popa
js
jmp
and
inc
inc
sbb
(bad)
mov
jae
mov
jmp
into
sub
rol
lock
cmp
push
mov
lahf
popa
std
xor
add
sub
dec
mov
add
mov
xchg
inc
into
nop
sub
dec
loopne
pop
jo
iret
cdq
call
mov
adc
sub
add
dec
mov
jmp
arpl
outs
mov
push
and
pop
int3
fild
and
add
mov
lods
ja
mov
xor
in
dec
xlat
repnz
lods
push
dec
retf
outs
pop
sub
jmp
stos
gs
jg
push
adc
mov
fcom
rcr
jo
mov
gs
sahf
test
adc
jo
loope
stos
popa
mov
mov
int3
cli
cmp
dec
xchg
stos
pop
xor
add
or
cdq
mov
std
std
dec
mov
add
(bad)
jle
xor
pop
(bad)
sub
add
xor
fimul
loope
jl
inc
inc
jg
fwait
xchg
dec
xchg
jno
mov
add
xchg
jecxz
rcl
add
jecxz
fistp
or
enter
addr16
inc
ret
cmp
xchg
push
cmp
jg
imul
outs
sbb
in
in
or
in
mov
pop
jp
jo
sbb
ret
scas
fmul
repz
data16
pop
pop
in
jne
pop
loopne
imul
popf
inc
(bad)
jne
lods
fld
dec
sub
dec
push
jae
xchg
push
push
cmp
out
stos
fst
in
sbb
stos
jbe
adc
push
test
sti
aad
int3
loop
mov
test
lea
adc
aaa
mov
xor
inc
int3
mov
jb
sub
mov
fstp
mov
scas
outs
cld
push
dec
mov
into
mov
movs
pop
mov
sti
cdq
mov
jl
push
mov
es
xchg
movs
pop
inc
lea
jmp
pop
(bad)
cmp
(bad)
or
pop
sub
(bad)
xor
mov
jbe
test
push
stc
sub
outs
pop
push
mov
jmp
push
mov
pop
test
xor
jl
xor
shl
in
fsubr
test
mov
popa
mov
out
scas
mov
jno
push
add
or
pusha
fld
(bad)
sbb
mov
add
test
lea
scas
add
scas
xchg
in
mov
mov
sbb
mul
add
cdq
hlt
stos
xor
dec
loope
add
pop
lea
push
sbb
cmps
(bad)
pop
movs
sub
mov
cmps
daa
ins
add
fdiv
push
pusha
mov
and
push
and
out
or
mov
xchg
scas
cmp
push
add
jl
lods
inc
das
int3
inc
dec
and
pop
inc
mov
xor
out
sahf
and
mov
or
out
sbb
lds
push
mov
xchg
imul
int
dec
push
(bad)
(bad)
xchg
imul
jp
jmp
or
(bad)
in
mov
xor
sbb
xchg
int3
scas
or
jge
jle
mov
in
cwde
retf
sbb
mov
adc
dec
or
jmp
mov
jb
dec
or
adc
test
cmp
add
jle
xchg
push
jae
mov
or
add
pop
enter
mov
out
cmp
icebp
int
clc
push
cmp
cwde
les
(bad)
mov
xchg
shl
mov
push
repnz
(bad)
outs
stos
lea
or
repz
aas
jl
mov
aad
fimul
cmp
adc
aad
loope
or
sub
jl
xor
cmp
aas
inc
fcom
out
daa
cmp
dec
sub
inc
movs
push
loopne
adc
mov
shl
cld
jbe
repnz
xchg
imul
or
inc
xor
inc
mov
sub
stos
pop
and
dec
pop
add
mov
xchg
sub
cmp
sbb
xor
and
cmps
push
jmp
je
test
mov
fstp
jne
aas
push
repz
ja
call
stc
popf
(bad)
ss
seta
xchg
loopne
xchg
movs
fld
pop
mov
mov
xor
in
cdq
jb
cwde
xor
lods
scas
sub
xchg
sbb
and
inc
pop
add
aas
pop
sub
jecxz
inc
leave
stc
mov
movs
mov
iret
dec
stos
xor
push
bnd
loope
and
add
push
sbb
in
push
cmp
ret
out
add
jmp
scas
jecxz
xchg
push
ror
or
ror
lods
add
lods
pop
pusha
dec
stc
cmc
inc
sub
shr
into
inc
enter
sub
mov
jecxz
sti
fidivr
and
shr
jge
xchg
mov
scas
push
inc
mov
pop
in
inc
(bad)
rol
jmp
inc
fwait
es
mov
fisttp
idiv
rcl
xlat
push
in
push
dec
xchg
mov
mov
bound
mov
imul
or
sbb
sbb
xchg
xchg
daa
mov
cmp
jne
scas
dec
add
and
pop
mov
out
dec
out
mov
inc
mov
cdq
cwde
mov
inc
dec
ror
jmp
es
ret
out
sub
cmp
das
mov
add
sbb
cmp
push
sbb
push
jbe
mov
stos
imul
arpl
std
mov
hlt
aad
xchg
mov
mov
sar
add
inc
into
sub
rcl
inc
(bad)
es
mov
mov
stc
imul
imul
sbb
stos
into
jns
loope
mov
and
imul
cwde
mov
mov
or
ja
xor
and
je
push
in
addr16
pusha
push
arpl
xor
push
add
add
inc
test
add
clc
jecxz
imul
into
and
(bad)
loop
cmp
mov
jmp
fs
or
ins
(bad)
pop
jns
cld
repnz
ins
gs
es
into
(bad)
jl
inc
test
xor
push
inc
mov
xchg
stc
pop
aam
sub
mov
cld
lahf
loope
jg
lods
sbb
jne
xor
fdivr
and
adc
ins
movs
push
push
xchg
retf
dec
repnz
ds
mov
lea
mov
adc
mov
in
xlat
into
mov
mov
push
push
lods
nop
ds
or
movs
(bad)
xor
mov
mov
mov
cmp
push
loopne
cwde
retf
iret
out
xchg
cmps
cmp
jbe
push
stos
mov
xchg
call
add
repnz
into
fstp
(bad)
cwde
add
imul
shr
fsubr
jge
std
nop
and
hlt
stc
loope
mov
ja
cmc
es
sbb
cmp
or
(bad)
gs
pushf
pop
or
inc
mov
push
movs
(bad)
mov
cld
jae
xchg
(bad)
in
shl
dec
outs
inc
mov
mov
call
pop
aam
push
lock
fiadd
and
xchg
movs
std
mov
mov
cmps
cmp
sbb
fs
xchg
or
mov
in
dec
cmp
aad
dec
mov
int3
jmp
and
scas
repz
sbb
cs
fs
jbe
sub
das
out
mov
shl
les
shl
mov
mov
and
mov
mov
dec
clc
sahf
pop
mov
inc
push
call
aaa
xor
and
or
clc
sbb
xchg
mov
cwde
lock
pusha
mov
aam
out
push
imul
sub
pop
int
mov
mov
xor
test
mov
test
out
push
out
ss
jnp
dec
mov
addr16
lods
jno
cli
push
sub
into
xchg
mov
gs
mov
inc
inc
jo
push
pop
push
dec
addr16
mov
sbb
and
data16
add
outs
adc
movs
sbb
daa
sbb
hlt
mov
mov
mov
lahf
push
jecxz
jmp
das
sbb
and
cld
jne
dec
sub
lods
cs
clc
inc
stos
xchg
inc
daa
inc
xchg
push
je
add
mov
jp
stc
lock
jb
cld
push
mov
mov
ss
repnz
mov
push
in
out
dec
iret
popa
inc
aam
or
mov
out
pop
xchg
push
fucom
add
ins
and
mov
pusha
stos
shrd
inc
rcr
enter
fwait
and
jg
lahf
setne
pushf
loopne
les
jmp
movs
add
cmp
in
arpl
xchg
mov
out
push
out
mov
rcr
add
mov
daa
into
pop
hlt
cmp
test
fs
daa
xchg
addr16
cmp
rcl
mul
mov
cmp
ins
xchg
jle
mov
pushf
out
neg
shl
ss
retf
jne
sbb
cmp
or
cs
enter
add
jno
daa
pop
push
and
test
dec
dec
in
xchg
pushf
hlt
pop
mov
or
daa
mov
fcom
mov
aas
scas
sbb
iret
sbb
out
pop
rcr
or
pop
shr
fwait
xchg
repnz
pslld
mov
mov
or
xor
xor
fst
cli
mov
pusha
mov
push
ss
ss
bound
pusha
lea
xchg
lds
jge
in
mov
retf
adc
stos
cld
pop
test
jmp
xchg
jp
adc
cmp
mov
test
xchg
mov
loop
nop
popf
push
xchg
push
inc
inc
sbb
stos
sbb
push
adc
pop
jge
test
sbb
out
stos
call
mov
pop
mov
mov
retf
js
mov
psadbw
mov
xor
repz
dec
mov
mov
cmp
mov
and
fucom
sbb
sar
pop
jge
xor
dec
xor
sbb
sub
lock
inc
sub
sbb
fdiv
sbb
arpl
out
stos
rol
scas
cmp
jmp
and
leave
dec
test
sub
fst
(bad)
stos
inc
(bad)
or
adc
mov
xor
hlt
cli
jmp
mov
nop
test
in
outs
outs
mov
dec
inc
adc
call
mov
jge
clc
lea
iret
int
hlt
xor
ds
cdq
jmp
mov
and
xor
or
test
mov
mov
sbb
adc
lods
(bad)
fst
imul
xchg
dec
(bad)
and
test
call
movs
sahf
and
(bad)
sahf
lock
inc
xchg
lods
fucomp
push
pop
push
cmc
fcom
int
ss
pop
sbb
pop
push
add
test
mov
shl
ret
call
xchg
mov
sbb
sub
stc
jae
sub
aad
add
and
je
sbb
inc
test
mov
or
(bad)
ror
jb
push
imul
in
xchg
mov
jne
cmc
mov
mov
enter
retf
push
xchg
ficomp
loope
mov
ja
test
mov
inc
cmp
and
sbb
repnz
out
fst
movs
cli
mov
sbb
jg
dec
(bad)
enter
jecxz
dec
and
jnp
dec
ss
int
loop
cmp
lahf
adc
ds
ja
fldcw
mov
mov
mov
dec
sbb
loop
cdq
sub
(bad)
in
icebp
pop
mov
sahf
mov
sbb
xlat
(bad)
shl
and
inc
ficomp
push
je
clc
pop
mov
lea
pop
sub
xchg
cmp
mov
add
pop
fld
cmp
jg
dec
es
retf
test
mov
stc
and
xchg
(bad)
fst
xchg
ds
icebp
cmp
jbe
arpl
int3
mov
test
sub
out
ret
rcl
add
cmp
mov
out
stos
fwait
out
jge
push
gs
adc
idiv
and
adc
mov
push
shr
idiv
fwait
pop
mov
in
gs
in
ja
enter
or
xor
out
mov
aas
cmp
cwde
inc
mov
sub
lock
pop
or
daa
adc
push
leave
lods
out
lods
clc
inc
daa
or
pusha
(bad)
push
popa
icebp
mov
pop
and
add
add
mov
iret
fld
test
jp
xor
enter
cmp
xchg
push
cs
xor
push
pop
out
or
inc
mov
sbb
xchg
dec
addr16
cmp
jbe
xor
(bad)
xchg
out
jbe
jo
mov
fst
pop
iret
inc
push
fadd
pop
int
mov
cmp
mov
es
sub
ds
xchg
sub
mov
dec
sub
push
fst
mov
lds
sbb
addr16
and
mov
cmc
imul
(bad)
fisub
or
sub
mov
(bad)
dec
cmps
jle
jl
rol
out
jo
jb
add
cmp
push
imul
mov
lea
mov
cmps
push
lahf
dec
sbb
cmps
fucom
cmps
shl
ret
cmps
out
cmp
bound
mov
fld
dec
sbb
xor
cld
add
call
and
mov
into
or
ficom
ss
dec
xor
(bad)
outs
push
pushf
cs
ret
pop
aad
inc
call
stos
dec
mov
jno
cmp
or
push
pop
in
fisubr
shl
adc
rcl
or
adc
icebp
ss
push
jp
mov
pop
push
rol
icebp
sbb
dec
cmp
push
mov
push
dec
loopne
es
or
push
push
imul
call
mov
jge
clc
sbb
xchg
ret
pop
pop
call
test
shl
test
pop
mov
inc
add
hlt
mov
jge
inc
stc
movs
or
mov
stos
(bad)
div
lock
(bad)
jg
and
rol
popa
mov
inc
(bad)
fisubr
gs
aad
cwde
clc
sbb
gs
push
mov
shl
repz
arpl
imul
xor
push
pop
xchg
dec
lock
sub
add
and
mov
movs
push
repnz
pop
xor
lahf
mov
je
pop
lock
pushf
pop
or
repz
imul
icebp
jno
mov
jecxz
sub
dec
cmp
idiv
xchg
push
je
fisttp
ret
ret
je
nop
and
push
sbb
ins
and
(bad)
jnp
jge
movs
leave
xchg
adc
std
lock
adc
inc
sahf
and
scas
jae
retf
sbb
into
stos
je
and
ret
mov
lea
pop
lods
fisttp
xchg
bound
pop
inc
sub
sbb
pop
pop
es
xchg
pop
data16
or
sub
cs
pop
pop
dec
pushf
sbb
pop
enter
je
test
mov
out
jne
jp
inc
dec
cmc
cwde
adc
lock
jg
or
ja
lea
into
(bad)
pop
or
scas
not
adc
movs
sub
push
add
pop
sub
mov
jmp
sub
mov
mov
dec
loope
(bad)
hlt
ret
ror
cdq
nop
ins
call
push
and
imul
bound
daa
or
inc
mov
jae
fidiv
push
mov
movs
mov
or
ins
mov
popf
arpl
mov
inc
loopne
cwde
fist
arpl
or
add
push
(bad)
mov
ja
jl
ret
loopne
jbe
or
shl
sub
stc
or
call
pop
fld
sub
repnz
and
inc
pop
cdq
scas
in
mov
cmp
mov
or
inc
das
jl
sub
out
mov
shr
(bad)
mov
jnp
imul
jge
sub
inc
inc
icebp
xchg
dec
dec
pop
call
stos
dec
test
mov
jle
mov
inc
jp
addr16
pop
sub
data16
push
and
or
js
jg
fwait
dec
inc
and
or
aad
pop
dec
cmp
adc
mov
xchg
sti
adc
fwait
cmp
bound
sub
lods
cmp
dec
lock
pop
mov
cwde
xor
pop
cmp
sbb
inc
adc
fdiv
cli
dec
dec
arpl
es
or
aaa
jnp
aaa
jle
mov
loop
mov
lock
stos
xchg
jp
and
packsswb
in
jno
mov
je
bound
xchg
pop
enter
push
xchg
inc
or
mov
test
lds
lahf
gs
fwait
sti
call
nop
pop
pop
pop
push
sub
jns
mov
fidiv
inc
repz
sti
test
add
rcr
xlat
and
jg
mov
gs
add
xor
(bad)
lea
xor
push
xchg
(bad)
ficom
imul
jmp
ja
or
fbstp
(bad)
pop
imul
jmp
jb
jmp
jl
and
pop
shl
and
add
pop
pop
mov
pop
jb
xchg
not
int
or
dec
xor
(bad)
or
dec
inc
dec
cmp
loopne
(bad)
jb
daa
test
sbb
out
inc
or
out
cmc
jbe
pop
xor
addr16
push
jae
sub
out
add
sub
push
(bad)
cmp
fild
or
sbb
cmps
lea
jnp
sbb
cmp
sub
pop
daa
mov
int
sub
add
push
push
fs
push
mov
jmp
retf
sbb
add
enter
or
sub
jl
xchg
and
cmp
stos
in
cmp
sbb
push
retf
jne
pop
and
sub
in
jle
mov
test
push
in
mov
inc
out
cmp
mov
pop
and
push
fcmovnbe
cmc
out
fcomp
mov
xchg
add
outs
cmp
sbb
fsub
sti
fiadd
jne
xchg
mov
das
(bad)
(bad)
mov
ja
je
cmp
lea
push
pop
mov
fidiv
dec
into
push
rcr
and
outs
jge
push
or
cmp
out
(bad)
in
ret
lock
nop
retf
adc
cmp
les
sub
mov
xchg
js
in
(bad)
(bad)
push
push
arpl
popa
gs
and
sub
dec
pop
and
push
aad
xlat
mov
or
je
xlat
ds
inc
dec
cmp
pop
push
xchg
pop
je
mov
cli
cmps
sub
fadd
inc
(bad)
adc
mov
add
gs
adc
xor
xchg
xlat
pop
popa
cli
out
sbb
sbb
(bad)
in
sbb
cmps
add
xchg
pop
cmp
add
sti
sub
(bad)
out
imul
test
pushf
mov
mov
xor
out
int3
pushf
lahf
sub
cmc
mov
iret
call
int
mov
mov
leave
aaa
cwde
dec
sub
xlat
loopne
cmp
shl
pop
test
outs
scas
into
clc
lock
movs
aaa
movs
fcom
shr
popa
aas
rcl
cmp
push
xor
pop
repnz
repz
cmp
push
stos
inc
enter
rcr
(bad)
adc
push
int3
outs
out
inc
sbb
mov
xor
cmps
dec
(bad)
fist
loope
sub
imul
enter
fsub
cmp
out
test
mov
retf
lods
push
data16
mov
push
lds
sbb
add
je
gs
out
(bad)
jge
in
mov
out
sahf
nop
fadd
popa
imul
ficomp
out
das
(bad)
jae
ins
adc
cmc
jecxz
or
sub
mov
rol
ret
in
sbb
cmc
jg
cmp
inc
es
(bad)
xchg
out
mov
(bad)
xchg
xor
ins
sbb
cmps
push
jno
arpl
out
dec
pop
sti
mov
scas
rol
aaa
or
and
in
(bad)
lods
sub
bound
fisubr
mov
iret
mov
dec
mov
(bad)
cmp
shl
cmp
fnstsw
xchg
retf
hlt
ds
push
or
inc
or
mov
xor
mov
fyl2x
mov
and
add
xlat
push
pop
fisub
or
in
leave
sub
call
xchg
inc
mov
aas
jle
ret
jno
adc
add
push
inc
mov
inc
xchg
lods
std
ror
sbb
jge
std
add
push
ficomp
mov
lahf
outs
jb
xor
hlt
lea
mov
sbb
and
push
lods
lods
fwait
mov
sahf
ins
rcr
pop
mov
in
cmc
daa
inc
mov
mov
dec
(bad)
cs
nop
gs
xlat
and
iret
iret
movs
xor
ret
in
clc
jne
add
hlt
(bad)
or
or
sub
loop
push
fistp
xor
rcr
mov
es
fnstenv
pop
cs
mov
les
xchg
ins
jl
jmp
pop
xchg
push
addr16
out
int3
fwait
mov
movs
xchg
add
push
mov
loopne
mov
xor
mov
daa
xchg
or
push
scas
mov
data16
frstor
cmp
pop
ins
hlt
inc
int3
sar
test
mov
movs
cli
mov
sub
fs
sar
mov
jge
jge
push
lds
inc
mov
sub
cmc
or
je
repz
out
movs
mov
push
jne
xor
adc
cmp
adc
mov
sub
(bad)
sub
popa
hlt
mov
imul
ins
ror
xor
rcl
add
daa
mov
mov
in
mov
inc
enter
shl
fwait
push
lahf
adc
mov
int
adc
pop
mov
push
push
add
or
mov
mov
dec
inc
fisubr
jle
out
mov
dec
jmp
or
xor
mov
jnp
shl
dec
sub
stos
inc
sbb
sub
sub
and
xor
adc
pop
mov
scas
(bad)
fcmovb
jae
ins
in
push
dec
mov
aaa
sub
ins
jno
les
and
adc
(bad)
xlat
not
les
(bad)
xor
xor
scas
cld
xchg
ficomp
jecxz
adc
nop
fstp
sub
imul
fcmovnbe
(bad)
jns
retf
xchg
mov
mov
jns
xchg
sub
mov
leave
outs
push
sahf
movs
in
out
push
mov
pusha
fld
mov
sbb
mov
sbb
js
mov
push
jno
push
cmps
ins
inc
mov
pusha
jnp
jmp
xor
js
cmp
stc
sbb
sub
cs
mov
clc
push
xchg
jmp
mov
test
push
and
mov
and
jmp
pop
sar
sahf
jno
imul
sub
(bad)
xor
mov
dec
add
mov
push
cwde
jne
fcmovnb
add
cmp
inc
cmps
xchg
aaa
mov
mov
into
or
sub
ss
push
in
mov
add
or
or
std
fstp
dec
(bad)
push
jmp
mov
retf
es
lea
sti
jo
out
add
stc
inc
popf
shl
(bad)
push
ins
in
sbb
or
cld
add
add
pushf
push
cld
xchg
mov
popa
(bad)
dec
lahf
scas
mov
loop
inc
mov
push
dec
push
out
jle
stos
mov
ins
fs
inc
jae
daa
js
adc
push
in
mov
popf
jecxz
outs
mov
arpl
call
inc
mov
inc
push
in
cli
(bad)
retf
sahf
push
call
sbb
jp
sub
lods
pop
xchg
(bad)
in
xchg
push
cmps
loope
aam
leave
dec
sub
pop
jmp
mov
jmp
jge
ja
cmp
xchg
ror
xchg
imul
mov
xor
ins
retf
cs
das
loope
mov
sub
push
movs
ds
pop
sar
fcmovnbe
and
in
fisub
xor
mov
and
or
sar
aaa
loopne
sub
mov
xor
push
les
enter
mov
cdq
stc
rol
lds
repnz
loope
stos
outs
bound
inc
in
pop
mov
fdivr
test
das
outs
fistp
imul
or
mov
mov
in
push
xchg
inc
rol
dec
test
xor
jg
out
add
mov
leave
and
popf
pop
adc
das
cmp
repnz
ja
add
xchg
sbb
out
test
daa
iret
fs
sbb
cmc
cli
call
jb
pop
xlat
adc
int3
mov
js
icebp
push
or
into
dec
arpl
push
push
enter
mov
lods
sbb
sbb
call
sub
movs
mov
test
loop
(bad)
pop
outs
inc
ins
pop
cmps
call
ss
jmp
ret
mov
es
adc
mov
ins
daa
adc
adc
div
adc
xlat
push
sbb
push
ret
cmp
aaa
aam
adc
jle
arpl
and
scas
mov
jl
cmp
jmp
call
movs
pop
mov
xchg
add
stos
mov
mov
xor
rcl
(bad)
aad
add
add
push
mov
dec
out
adc
push
xchg
fcom
jp
cmps
clc
push
xchg
das
(bad)
pop
inc
cmp
xchg
lds
adc
je
xchg
jnp
outs
icebp
sbb
add
popf
aam
fst
mov
sahf
sub
or
xor
out
push
xchg
ss
aaa
int3
nop
inc
not
inc
fidivr
mov
das
out
fisttp
movs
adc
cmp
call
call
out
sbb
jbe
bound
(bad)
mov
sub
into
mov
dec
pop
ins
lds
outs
cmp
cdq
jl
cmp
mov
sti
sub
mov
popf
clc
(bad)
xchg
rcr
lahf
test
in
stc
and
jmp
xchg
imul
mov
test
jmp
retf
sbb
mov
nop
inc
jg
addr16
xor
cmc
pop
aas
jecxz
and
retf
mov
pop
cmc
jno
nop
pusha
jge
movs
sbb
or
sbb
jmp
mov
mov
mov
jmp
fistp
xor
or
jmp
push
js
aaa
arpl
cmp
mov
(bad)
(bad)
lea
out
in
or
sub
je
pop
repnz
dec
jle
mov
and
xor
mov
sub
pop
(bad)
fldcw
and
push
lahf
jbe
mov
sub
call
not
fldl2e
pop
pop
lods
push
xchg
and
test
add
jmp
fcmove
aad
loop
and
dec
dec
call
jl
lds
adc
cmp
lock
pusha
mov
retf
sub
popf
mov
(bad)
out
test
mov
mov
cli
ret
in
ss
sbb
mov
cmp
sbb
or
adc
addr16
dec
jo
and
pop
dec
add
movs
inc
gs
jb
xor
daa
sub
popf
ret
gs
sti
hlt
fistp
mov
aas
xchg
movs
adc
cmp
push
sub
or
pop
mov
out
add
loopne
inc
sub
or
scas
push
test
iret
lahf
inc
fmul
xchg
imul
dec
lahf
fwait
enter
jmp
sbb
ins
and
call
mov
ret
push
cmp
jo
movs
jg
aam
or
cdq
xor
clc
adc
outs
je
pop
lea
ds
cmp
sub
aaa
dec
cld
adc
retf
mov
push
in
adc
imul
add
or
js
(bad)
inc
cmp
xchg
sbb
sub
or
add
fild
mov
or
jl
mov
mov
push
jae
cmc
mov
les
fld
xchg
clc
adc
repnz
and
shl
dec
aas
jecxz
int
pop
shl
dec
repnz
(bad)
(bad)
aam
mov
sbb
sub
aaa
dec
push
int
and
sub
cmps
jl
mov
cmp
fs
out
xchg
jns
mov
bound
mov
leave
imul
sub
pavgw
lahf
(bad)
sar
mov
jg
rcr
xchg
popf
xchg
lds
pop
es
stc
ret
push
xor
sub
(bad)
and
cmp
pop
cmp
pushf
fs
adc
int3
pop
movs
mov
std
sbb
mov
das
pop
int3
lds
dec
pop
push
in
xor
aam
retf
cmps
add
jns
aaa
mov
mov
inc
dec
pop
push
repnz
clc
inc
sub
sti
dec
arpl
movs
shr
(bad)
test
(bad)
int3
mov
adc
fwait
xchg
jle
in
(bad)
mov
pop
loope
in
inc
gs
leave
daa
loopne
mov
jo
(bad)
(bad)
cmc
aam
aad
push
out
int
cmp
sbb
outs
bound
retf
push
enter
add
lock
sub
cmp
and
jle
(bad)
mov
ror
nop
aam
xor
or
mov
movs
mov
xor
addps
jno
or
jg
inc
pushf
xchg
repnz
jmp
iret
mov
jae
out
adc
jns
mov
cwde
test
pop
add
lods
sbb
push
pop
inc
scas
aad
adc
in
shr
mov
sub
push
jnp
sub
mov
add
test
or
rol
aaa
lods
pop
aam
fild
jb
dec
lahf
add
adc
ins
jl
dec
popf
test
mov
mov
and
arpl
cmc
add
int3
(bad)
hlt
lods
ja
mov
jb
sti
addr16
aam
popf
xor
popf
adc
or
popa
push
ja
inc
mov
js
push
inc
push
mov
int3
fwait
push
add
mov
ins
lea
pop
test
ins
ret
xor
xor
cmp
shr
sbb
pusha
pop
inc
mov
jl
fcmovnb
mov
inc
in
xor
jmp
add
fld
pop
adc
jmp
stos
cmp
sub
cmp
xor
add
dec
popa
js
push
out
mov
push
lock
test
aam
cwde
push
lock
call
div
mov
rcr
cmp
not
push
pop
xor
jo
(bad)
scas
(bad)
jne
psubd
fild
call
xchg
imul
add
or
mov
dec
sub
jne
push
adc
push
loope
jg
mov
inc
movs
push
push
call
call
adc
inc
ss
std
adc
xchg
mov
xor
sbb
(bad)
ficom
cmp
(bad)
or
jb
adc
xor
xchg
inc
sbb
xor
popa
or
xor
ins
cmps
push
mov
aas
add
dec
es
push
push
dec
pop
adc
sbb
dec
add
push
cmp
cs
add
mov
movs
rol
sub
ins
js
push
hlt
ror
push
jp
mov
mov
jbe
ds
inc
jg
mov
adc
test
enter
fldenv
lds
jle
mov
loopne
push
sbb
sub
push
cli
jmp
adc
cmp
ds
test
test
imul
fucomip
cmp
fstp
leave
int3
pop
xchg
pusha
lock
out
lds
sub
lea
gs
pusha
movs
jmp
dec
mov
shl
lods
jg
mov
ret
jno
sub
(bad)
(bad)
add
mov
pop
fisttp
mov
fisttp
fist
and
cmps
mov
mov
and
cdq
push
outs
inc
leave
das
(bad)
repz
aaa
mov
mov
sub
xchg
or
mov
js
rcr
cmp
xor
rcl
cld
push
loop
push
pop
ror
das
mov
jg
push
retf
scas
loop
sub
jno
in
or
dec
adc
push
ins
ror
shl
xchg
in
jo
or
jno
push
push
jecxz
jnp
dec
or
add
pop
nop
fsub
cmp
daa
add
sar
dec
daa
out
shl
aaa
dec
add
out
dec
pop
fiadd
mov
jecxz
nop
ficomp
aad
inc
jecxz
adc
test
cmc
in
mov
mov
popa
je
xor
xchg
(bad)
mov
mov
(bad)
enter
cdq
call
ret
xchg
ja
stos
outs
jg
dec
call
out
lea
cmp
push
mov
dec
add
and
ret
inc
mov
aas
cld
xchg
push
arpl
pop
mov
aaa
dec
adc
cmc
pop
(bad)
loope
dec
add
or
adc
stos
push
pmaxsw
les
loopne
jl
push
adc
pop
fdiv
call
(bad)
call
ret
call
sub
(bad)
lods
aas
pop
pop
nop
sbb
inc
or
inc
cmp
sahf
pop
mov
iret
fs
mov
dec
ffree
push
scas
adc
xor
and
jp
iret
aad
or
ss
mov
outs
mov
adc
stos
cmp
scas
stos
enter
sub
jbe
hlt
stos
fwait
aad
jge
mov
popa
icebp
rcl
ja
out
lods
ret
dec
inc
daa
xlat
cmp
fsubr
sbb
fs
dec
pop
idiv
push
imul
not
fwait
out
enter
pop
and
xor
jo
mov
icebp
or
retf
sti
jp
out
retf
out
inc
inc
cdq
(bad)
sbb
adc
cmp
das
jle
xlat
lahf
xlat
stos
int3
and
(bad)
not
add
sub
mov
stos
pop
add
cwde
xchg
pushf
inc
cmp
cmps
or
sub
shr
jg
xor
xor
dec
cmp
dec
push
push
jae
sbb
lea
adc
in
mov
fist
sbb
cdq
fiadd
sub
rol
lock
mov
inc
adc
adc
icebp
dec
inc
dec
call
cmps
out
xor
iret
(bad)
and
or
jne
outs
sbb
push
ds
adc
arpl
hlt
inc
es
push
xchg
cmps
mov
imul
add
test
jmp
add
push
movs
int
mov
(bad)
cmp
mov
xchg
xlat
cmovp
jl
fneni(8087
pop
popa
loop
mov
dec
pop
inc
hlt
cmp
ret
pop
jmp
jb
mov
ins
mov
cld
mov
outs
mov
sbb
or
inc
inc
add
mov
(bad)
dec
pusha
mov
pop
adc
pop
add
mov
in
adc
xlat
aad
pushf
imul
ins
xor
ins
cmc
inc
and
ins
je
or
movs
mov
sar
pop
xor
sub
test
aad
ret
sbb
pop
sub
fwait
mov
sti
jecxz
fdivr
or
cwde
mov
jp
aam
iret
mov
call
iret
test
popf
jns
lds
push
cmps
push
ror
xchg
mov
or
inc
int
xchg
outs
jge
adc
aas
(bad)
dec
clc
pop
mov
sbb
push
adc
sbb
dec
pandn
imul
scas
fld
shl
sbb
hlt
push
dec
mov
jmp
pop
push
lahf
lahf
mov
inc
fild
sbb
jge
jne
mov
aad
dec
jbe
xor
push
lods
adc
inc
cli
mov
movsx
or
neg
inc
iret
push
mov
(bad)
cwde
lods
xor
pop
retf
test
mov
xchg
xchg
call
add
(bad)
fidivr
daa
hlt
or
or
sbb
in
std
jmp
jnp
cwde
push
xchg
mov
hlt
sbb
out
xlat
nop
and
cmp
add
sbb
xor
cmp
cmp
int3
push
rol
push
inc
mov
inc
movs
sub
add
cmps
jne
mov
cmp
fs
mov
test
mov
xchg
retf
and
popf
ficom
(bad)
lds
mov
and
aam
loopne
nop
ss
xor
cs
sti
shl
xor
jmp
xchg
mov
test
lea
es
popf
mov
sub
(bad)
mov
cmp
and
dec
pop
cli
dec
stc
or
dec
cmps
mov
fs
xchg
js
xchg
rcr
dec
push
adc
popf
test
add
mov
int3
mov
xchg
aam
pusha
cmp
mov
jge
mov
stos
or
pusha
inc
jge
(bad)
and
in
adc
rcr
push
mul
xchg
sbb
or
ror
mov
xor
cld
jns
test
in
mov
repnz
ficomp
retf
rcl
(bad)
mov
stos
scas
jle
push
mov
mov
xor
mov
lods
jbe
cli
out
lahf
test
mov
jp
sbb
add
ins
movs
adc
xor
fisttp
nop
pop
cmp
test
add
dec
mov
out
or
pop
adc
inc
jmp
or
in
jne
cmp
pop
gs
mov
(bad)
aad
lods
jl
test
mov
fmul
xchg
call
cmp
xlat
fstp
dec
dec
xlat
fidivr
stos
cmp
call
sub
sbb
adc
sbb
cmp
stos
call
and
push
(bad)
sub
and
push
ret
jb
and
cmc
sub
rol
cli
in
inc
popa
fistp
lods
cld
and
or
sahf
addr16
int3
jne
pop
(bad)
icebp
dec
aaa
popa
cmp
cld
and
in
into
popa
ja
mov
das
aad
loopne
test
jae
sub
mov
stc
cwde
je
or
dec
aam
mov
push
jecxz
and
(bad)
mov
inc
cmps
jmp
mov
or
fs
push
scas
ret
pop
repz
aad
ins
lods
sar
fwait
jae
pop
fisttp
cmps
rol
mov
movs
int
mov
(bad)
push
sub
js
and
xchg
ror
popa
mov
add
int3
movs
inc
cdq
sub
mov
stos
inc
xlat
std
in
push
dec
(bad)
out
hlt
ds
jb
fnstenv
rcr
imul
and
clc
jecxz
jl
icebp
mov
fisttp
dec
inc
stos
dec
jg
adc
addr16
inc
lahf
lds
pop
inc
sub
ds
aad
fcomp
adc
movs
sbb
add
inc
jp
loope
xor
pusha
jae
xchg
enter
shr
sti
jmp
cwde
and
mov
jno
cmc
pop
ins
cmps
pop
mov
mov
ret
aas
cwde
lock
cmc
and
cmp
je
not
xchg
loope
fwait
pop
jg
jns
fwait
xor
stos
sar
std
inc
imul
test
cmp
sbb
call
int
cdq
pop
mov
jmp
xchg
xor
dec
cmp
mov
pop
mov
xor
push
sub
push
ins
and
jl
aam
xchg
dec
popf
cmps
dec
pop
inc
or
sub
mov
ret
dec
rcr
stos
inc
aad
loope
mov
sub
mov
out
out
repnz
inc
out
leave
pop
push
loopne
(bad)
and
fwait
lods
mov
out
not
or
dec
dec
pop
inc
and
mov
fs
dec
dec
(bad)
mov
xchg
jo
sbb
dec
fcomp
ss
xor
out
cmp
pop
push
jp
fsubr
cmps
scas
arpl
out
dec
sub
mov
mov
cld
loopne
push
mov
mov
aas
sbb
push
adc
cmc
sbb
gs
cmp
push
fs
adc
cld
adc
and
leave
es
ror
pop
mov
adc
aaa
mov
mov
add
les
push
sbb
sub
fiadd
sbb
repz
dec
fld
call
outs
xor
or
stc
lock
loopne
push
adc
cmp
jge
and
cmp
push
icebp
retf
lock
and
xchg
lods
adc
jno
inc
inc
dec
pop
mov
clc
jmp
xor
loop
inc
dec
sub
adc
outs
mov
jmp
rcr
sbb
push
cmp
cli
xor
ror
icebp
sahf
adc
sub
cli
std
retf
aas
inc
sub
cmp
inc
inc
fwait
pop
push
int3
add
lods
pop
fst
lods
fdiv
int3
(bad)
out
cdq
and
pusha
mov
xor
fistp
aad
ja
mov
in
jp
mul
aad
cld
(bad)
loop
outs
xor
nop
iret
jne
adc
movs
dec
pop
aaa
jb
out
cmps
retf
mov
or
arpl
jl
fidivr
push
test
lahf
sbb
jle
mov
dec
adc
add
repz
or
sub
int3
loop
push
cmp
and
test
cmp
mov
adc
and
cmp
xchg
iret
jle
adc
dec
ss
sbb
sar
xchg
(bad)
mov
add
mov
test
mov
imul
out
ja
test
ins
mov
cmp
sub
mov
jmp
out
retf
mov
(bad)
ret
pop
push
cmp
and
repnz
es
push
dec
push
adc
fst
lock
jne
loop
mov
(bad)
pusha
and
pop
or
fst
xor
xor
aam
mov
lods
movs
adc
dec
pushf
and
rol
mov
mov
call
fdiv
or
ror
dec
loop
mov
bound
fisubr
loope
adc
pop
dec
cmp
js
test
(bad)
fimul
neg
cli
and
ret
mov
mov
sbb
push
movs
or
xor
push
gs
mov
push
push
push
cmps
lahf
in
push
mov
inc
cmp
xor
pop
xchg
fabs
daa
add
mov
js
lods
ss
xchg
es
aas
test
cmp
stos
fld
pop
leave
adc
cmp
mov
outs
push
jl
popa
lods
sub
adc
out
cmc
fwait
xlat
xor
aam
xchg
mov
and
mov
stos
aaa
jg
inc
repz
retf
push
dec
fwait
mov
xchg
sahf
adc
enter
repnz
addr16
inc
pop
push
ss
aad
add
sub
inc
mov
mov
jo
add
imul
and
push
sub
out
repz
push
aas
out
pop
adc
cld
mov
adc
cmp
sub
daa
test
mov
add
jno
pop
ror
lods
jp
xchg
test
adc
sbb
or
adc
out
mov
push
in
pop
mov
ror
aas
add
adc
jecxz
popf
(bad)
jmp
std
lock
jg
rcr
in
mov
xchg
mov
jle
repz
fstp
adc
pop
cmc
movs
in
bound
call
imul
fdiv
fmulp
sbb
jbe
out
xchg
pop
adc
adc
xor
retf
rol
cmp
or
bound
mov
xchg
xchg
jne
ja
inc
pop
aad
pushf
dec
inc
test
(bad)
pop
sahf
shl
inc
add
retf
fwait
push
sbb
loop
jnp
pop
pop
and
stc
sbb
cmp
mov
fadd
add
jae
std
pop
data16
(bad)
sbb
(bad)
xchg
xchg
xor
popf
sub
push
imul
push
cmc
adc
sub
sbb
mov
sbb
xor
or
xchg
scas
iret
jecxz
dec
addr16
jae
outs
pop
push
fsubp
int
mov
mov
in
dec
sbb
jno
sbb
xchg
enter
jmp
mov
mov
mov
jo
dec
mov
sbb
cmp
jecxz
xor
fsub
xchg
push
jge
lods
cmp
mov
mov
mov
es
dec
jecxz
loopne
xlat
jo
inc
out
int
inc
mov
sub
pop
retf
push
test
pop
mov
lods
sar
outs
or
out
inc
mov
push
sub
in
arpl
xchg
outs
gs
fdiv
cmps
adc
and
aad
xchg
ins
fs
mov
out
mov
or
sti
dec
lahf
fcmovnbe
hlt
xlat
or
les
lock
pop
mov
push
dec
dec
es
cmp
fsincos
sti
ror
pushf
fld
sub
jnp
inc
sub
xchg
add
addr16
jle
call
inc
sbb
pop
mov
add
push
inc
adc
inc
test
shl
push
jmp
jge
sbb
movs
inc
psubusb
mov
jns
push
adc
jb
adc
mov
adc
test
mov
mov
inc
(bad)
sahf
jne
fisub
fwait
xor
test
sahf
cmp
push
jmp
(bad)
aas
adc
and
pusha
cli
imul
mov
ret
sbb
xchg
ins
jg
jnp
data16
pop
xchg
pop
idiv
push
xor
push
(bad)
fsub
or
les
test
ret
ffreep
cmc
dec
mov
inc
xor
inc
fucomp
out
jecxz
(bad)
stos
lahf
pop
sti
mov
mov
mov
mul
inc
cmc
sub
xchg
or
xor
(bad)
js
xchg
(bad)
push
shl
jns
mov
add
cs
and
daa
pusha
cmp
ss
sbb
daa
pop
imul
push
in
or
repnz
jmp
jns
pusha
xchg
xchg
push
mov
hlt
iret
adc
cmps
mov
sbb
sahf
sub
sub
cli
pop
nop
cmp
pop
dec
add
pop
pop
and
neg
dec
add
sub
jmp
mov
dec
fsubr
mov
xchg
push
mov
test
loop
in
les
sub
arpl
or
jmp
popf
aam
test
cmp
adc
mov
or
mov
inc
pop
loopne
xor
and
jno
add
or
(bad)
jge
addr16
in
pusha
and
xchg
loop
xor
and
or
xor
inc
xor
call
xchg
mov
ins
cwde
std
inc
cmp
clc
inc
retf
test
mov
sbb
fadd
loopne
mov
hlt
xchg
mov
jmp
mov
cmc
fs
aaa
or
jle
push
nop
mov
xchg
mov
lods
cwde
ja
inc
xor
not
or
jne
jae
repnz
jbe
dec
das
add
and
sbb
gs
and
inc
mov
lods
retf
mov
mov
sub
lods
jp
adc
xchg
dec
sti
sub
mov
xor
or
xchg
lahf
push
arpl
jae
pop
mov
cmp
mov
push
mov
jns
imul
and
(bad)
jne
mov
jns
leave
div
sbb
clc
pop
mov
mov
jge
add
and
in
xchg
jecxz
mov
(bad)
out
movs
retf
pop
ja
test
repnz
lods
inc
push
cmp
mov
call
les
popa
and
in
cmp
jp
(bad)
ja
mov
or
mov
adc
push
inc
xor
frstor
xchg
adc
mov
leave
lds
push
call
aam
xchg
and
sbb
dec
xchg
pop
ror
inc
add
mov
sub
arpl
call
movs
inc
xor
jne
sbb
add
sbb
cmp
rcl
cmp
aas
xor
inc
fild
add
or
jb
jb
mov
loopne
mov
xchg
jno
retf
mov
inc
iret
jbe
pop
inc
cs
jmp
cmp
pop
stc
test
test
(bad)
ins
xchg
test
ret
mov
mov
inc
cli
lahf
cmp
cs
push
jmp
shr
fdiv
xor
xor
sahf
sub
loop
cwde
dec
cmc
cmp
or
sbb
xchg
test
mov
cmp
cmp
bound
(bad)
jnp
cdq
cmp
add
pop
psubusw
loope
jp
ds
cmps
scas
push
pop
cs
sbb
and
cmp
loope
xchg
push
in
pop
aam
outs
sbb
adc
xchg
xchg
jl
inc
mov
out
test
ficom
stos
(bad)
repnz
and
xchg
sub
clc
sbb
cld
lds
mov
push
mov
and
mov
nop
jge
mov
test
jb
mov
fisub
retf
add
mov
daa
mov
xor
pop
push
shl
mov
push
sub
mov
or
cmp
fisub
test
scas
pop
les
iret
add
or
mov
std
int
pop
ins
xchg
push
xchg
adc
test
sub
test
mov
mov
nop
jne
or
or
aad
and
daa
mov
rcr
arpl
lods
loop
das
jbe
mov
aad
pop
add
dec
xor
inc
push
pop
imul
mov
sbb
fistp
mov
pop
sub
frstor
jge
inc
jecxz
scas
aam
idiv
adc
cmp
xchg
(bad)
pop
scas
xor
jle
sti
popa
adc
sbb
adc
aas
lods
dec
iret
(bad)
fs
push
(bad)
in
fimul
stos
pusha
scas
fs
fmul
push
pop
fild
mov
ins
jmp
adc
fiadd
inc
js
push
(bad)
(bad)
mov
daa
retf
out
repnz
js
mov
rcr
js
sub
adc
addr16
adc
pop
pushf
shl
push
repz
push
addr16
(bad)
pop
scas
iret
test
fild
pop
add
stos
adc
mov
into
inc
(bad)
scas
cmp
xchg
js
sbb
xor
xchg
mov
pusha
gs
fsubr
mov
cli
out
pushf
rol
xchg
pop
in
pop
mov
jmp
ins
test
bound
std
push
pop
enter
dec
add
enter
lea
inc
sbb
(bad)
and
int
inc
das
sti
mov
scas
and
push
xor
sbb
(bad)
cmps
leave
iret
and
mov
add
ficom
inc
mov
or
aam
fdivrp
mov
data16
cmps
test
mov
xchg
cmp
jecxz
push
jae
mul
ret
mov
sub
or
test
fisttp
adc
xlat
mov
cli
xlat
leave
or
mov
test
cmp
fisttp
inc
pop
sub
pop
jp
sahf
mov
cmc
ret
sub
cli
(bad)
retf
add
add
lahf
je
inc
jnp
ret
jbe
arpl
cld
bound
pop
and
sub
pusha
xchg
mov
xchg
or
js
push
push
inc
loopne
push
or
jae
bound
push
stos
mov
arpl
pop
cld
(bad)
dec
fwait
add
mov
das
mov
lea
mov
mov
test
fstp
(bad)
and
push
push
push
out
test
jnp
push
adc
gs
push
cmc
lahf
retf
movs
pop
xchg
aam
or
icebp
push
mov
scas
push
adc
outs
lahf
scas
xchg
jne
test
or
jmp
push
data16
in
cmp
ret
in
push
mov
jno
cmp
push
push
das
out
and
xor
add
(bad)
jle
push
std
and
or
rcl
mov
sub
ss
stc
dec
mov
int
and
inc
lds
lock
movs
xchg
jo
sub
push
mov
fnstcw
je
dec
mov
push
xor
mov
arpl
lahf
adc
sbb
sub
mov
push
mov
mov
and
xchg
pop
inc
dec
xchg
sub
movhps
pusha
push
sbb
es
fcomi
fild
sbb
xchg
push
stos
loopne
jecxz
int
shl
repz
jp
and
push
shr
xor
ret
push
xor
add
sub
jmp
popa
outs
add
add
mov
cmc
aaa
pop
loop
aam
and
nop
mov
mov
lods
mov
popf
in
pushf
push
ficom
retf
in
push
cwde
and
out
sti
xchg
rol
push
ja
in
cmp
dec
sub
(bad)
dec
and
outs
pop
jl
dec
ds
dec
inc
stc
mov
and
ror
jl
(bad)
out
fcomp
add
retf
in
add
mov
or
cmp
xchg
add
mov
xor
stc
or
mov
daa
mov
xlat
into
and
mov
push
fidiv
inc
jne
lock
ins
jmp
fmul
cmp
jge
retf
imul
cli
inc
and
xchg
jb
jmp
test
clc
xchg
cs
mov
adc
sbb
test
iret
fs
xchg
ds
sbb
xchg
pop
jnp
inc
inc
cmp
cmp
mov
jmp
outs
push
jp
in
jae
ins
add
retf
stos
repnz
mov
out
adc
(bad)
shl
mov
ret
push
out
fldenv
scas
arpl
sub
cmp
add
daa
xchg
fs
cld
fldenv
idiv
mov
fdivrp
das
mov
adc
sub
inc
fnstcw
jg
push
ja
dec
inc
scas
rcl
jl
mov
mov
sub
daa
pusha
pop
add
mov
cmp
(bad)
out
pop
into
or
adc
arpl
dec
xchg
mov
push
jae
(bad)
ja
inc
aam
dec
stos
mov
loopne
sti
rcl
pop
ja
xchg
dec
push
ds
cmc
and
movs
out
add
xchg
pop
inc
(bad)
xchg
xchg
clc
hlt
jecxz
outs
push
fwait
dec
(bad)
shl
cmp
sbb
pop
and
cmps
lods
(bad)
cmps
cmc
fisub
out
mov
dec
iret
add
fwait
mov
loop
test
cmp
(bad)
pop
int
lds
xor
and
pop
and
cwde
in
ja
mov
cmps
pop
idiv
shl
(bad)
lods
js
or
push
mov
sahf
xor
jecxz
ja
mov
adc
inc
push
fimul
repnz
test
gs
push
aad
movs
pop
pop
sub
cdq
test
in
adc
push
in
fist
in
test
mov
dec
jg
movs
hlt
and
pop
adc
(bad)
nop
dec
(bad)
into
xor
pop
sub
rcl
(bad)
jecxz
das
adc
mov
ds
leave
lds
sahf
int3
(bad)
xchg
add
pop
pop
arpl
and
adc
je
jecxz
out
jbe
add
dec
or
cwde
push
mov
or
fisubr
(bad)
and
sub
jb
mov
cwde
sbb
pop
jo
das
adc
sbb
mov
xor
rol
pushf
mov
fs
addr16
iret
int
sub
sbb
cwde
loopne
cmp
outs
mov
mov
js
cmps
sbb
imul
mov
mov
hlt
cld
adc
cli
lss
rcl
loop
xor
adc
and
or
not
call
cmc
daa
mov
cli
lds
push
clc
adc
lods
cld
test
jae
inc
jno
cld
ja
sub
fiadd
mov
or
cmp
xchg
inc
mov
clc
add
lea
jno
adc
add
lahf
xchg
xchg
push
int3
sub
lods
not
stos
mov
outs
scas
dec
mov
push
push
push
mov
cmp
aam
or
dec
mov
or
inc
js
stc
imul
pop
mov
or
inc
mov
mov
or
ins
dec
enter
mov
gs
inc
push
cmp
and
shr
cli
scas
lahf
mov
stos
iret
test
nop
data16
pop
dec
adc
jbe
push
repz
iret
test
adc
(bad)
pop
mov
jl
dec
addr16
(bad)
scas
cmc
rcr
pop
pop
nop
mov
push
ret
imul
movs
cmovae
add
dec
mov
pop
cmp
shl
mov
xor
jae
call
adc
fs
xchg
repz
les
xchg
cmp
dec
je
mov
inc
sub
ret
or
jge
and
mov
mov
pushf
xor
or
popa
mov
xor
inc
xor
call
jnp
mov
and
jecxz
dec
outs
lock
gs
popf
out
inc
push
add
xor
inc
xchg
aam
mov
jo
pop
jno
sub
out
xor
int3
fnstsw
sub
fld
xchg
jge
mov
pop
dec
test
or
pop
push
aaa
sbb
cmp
enter
popa
push
push
push
push
lds
mov
in
pop
out
(bad)
pop
or
dec
cli
sub
addr16
and
pop
addr16
(bad)
fisub
fnstsw
xor
sar
adc
gs
xchg
das
jbe
in
jp
xlat
mov
jnp
and
mov
sahf
mov
xchg
sbb
xor
ja
and
push
cmp
out
push
xor
ds
aad
(bad)
fdiv
xchg
cdq
sahf
cmp
adc
cs
pusha
outs
pop
scas
xchg
cli
lahf
mov
call
xchg
cmp
jns
inc
enter
fcomp
mov
adc
and
inc
dec
and
stc
jb
shl
add
mov
cmp
jb
or
arpl
inc
sbb
sub
cmp
inc
aaa
mov
fwait
les
push
and
dec
jmp
push
js
jb
add
cmp
cld
scas
icebp
daa
out
mov
aam
sbb
repz
in
cs
aaa
mov
arpl
pushf
sub
call
mov
fistp
adc
xchg
xchg
add
mov
das
pop
inc
int3
or
and
fdivr
push
shl
pop
popf
cmp
sbb
pushf
push
idiv
dec
add
lods
xor
shl
inc
enter
rcl
in
addr16
(bad)
dec
imul
loopne
jne
inc
sbb
cmp
jmp
xchg
ja
push
cs
and
mov
fbstp
jle
imul
aad
mov
call
fsubr
mov
ds
outs
xor
xor
push
sbb
dec
jl
xchg
int
inc
add
and
cmp
shl
rcl
jb
mov
imul
pop
call
rol
sahf
out
js
out
arpl
mov
iret
sbb
mov
mov
jbe
mov
in
and
fs
fild
out
sbb
outs
sub
test
mov
lahf
xor
push
push
test
sbb
or
enter
inc
jmp
leave
inc
add
xor
frstor
sbb
dec
fdivp
iret
stc
cmps
mov
bound
sar
and
mov
outs
push
xchg
sub
test
pop
cdq
mov
pushf
pop
xor
jge
jp
leave
sbb
jbe
add
gs
call
mov
lahf
cmps
xchg
cmp
imul
sahf
push
cld
jae
push
pop
icebp
xchg
ds
and
sbb
mov
sub
out
sub
xchg
sar
(bad)
mov
nop
iret
sbb
jle
fidivr
hlt
les
fld
mov
push
sub
adc
and
fldpi
mov
dec
jmp
movs
ds
add
inc
inc
xchg
stc
dec
call
popa
into
(bad)
fstp
adc
xchg
(bad)
cmp
xchg
mov
outs
push
into
in
imul
fcomp
call
iret
cdq
xor
jae
and
xor
repz
pop
stos
in
push
in
jmp
sub
mov
push
adc
arpl
xor
out
add
sub
call
sbb
sahf
inc
xchg
(bad)
movs
add
pop
cmp
jle
mov
(bad)
mov
mov
pushf
out
mov
pushf
imul
or
mov
lods
dec
and
mov
or
fnstcw
cmp
jb
mov
push
call
daa
in
loope
enter
std
ret
push
cmps
jne
jle
aaa
pop
iret
loop
call
fisttp
(bad)
mov
mov
inc
push
adc
sub
ins
nop
add
xchg
cmp
fnstsw
repz
and
rcl
(bad)
or
ret
hlt
xchg
jnp
mov
jo
ins
or
(bad)
addr16
jnp
or
mov
inc
mov
popf
inc
jecxz
out
and
pop
mov
sub
jmp
sub
cmp
or
aas
(bad)
xchg
pop
push
cmp
movs
retf
cmps
jp
mov
hlt
xchg
cld
push
fidivr
mul
test
jle
ret
sbb
push
cmp
mov
pop
jno
arpl
mov
iret
scas
xchg
clc
scas
mov
imul
in
(bad)
inc
ins
xchg
add
mov
fcomp
mov
dec
xor
cmp
call
fcmove
push
and
lahf
addr16
cli
mov
sub
cmp
rcl
jbe
repnz
leave
in
out
(bad)
pmaxub
rcr
jb
mov
pmaddwd
or
leave
mov
shr
jmp
sbb
nop
sbb
cli
push
int
xchg
or
adc
dec
inc
fistp
or
push
dec
aas
jnp
mov
dec
aad
sub
or
outs
inc
cmps
mov
int3
xor
popf
pop
push
mov
out
rcpps
iret
imul
hlt
xor
and
push
xchg
daa
(bad)
clc
sbb
xor
cmp
test
mov
add
or
push
enter
add
cmp
cmp
and
push
and
outs
(bad)
js
pop
rep
loopne
repz
inc
push
sub
into
inc
in
das
nop
inc
shl
mov
test
aad
and
push
push
sub
push
cmp
out
cmc
mov
mov
mov
mov
fdiv
pop
cmps
adc
mov
js
icebp
mov
sbb
or
mov
jb
frstor
mov
mov
jecxz
out
ret
push
test
xor
or
(bad)
jmp
cmps
pop
push
sar
ror
xchg
pusha
inc
mov
push
pushf
pop
mov
sub
mov
test
inc
pop
imul
fldenv
sub
and
pop
sbb
mov
xor
inc
ins
cmps
cwde
dec
aad
jmp
shl
fnop
fild
call
adc
and
pop
out
ret
sub
cmp
sub
mov
jmp
jne
xchg
pop
fidiv
xor
int
jae
push
xchg
mov
test
add
mov
sti
lea
pop
jb
and
fmul
add
scas
cmp
xor
sbb
out
pushf
lods
pop
jl
retf
cmp
sbb
push
outs
adc
loope
jo
sbb
fcmovne
bnd
mov
mov
aam
not
xor
dec
lods
mov
jecxz
mov
inc
mov
ficom
inc
pop
pop
pop
in
popf
add
(bad)
jmp
das
retf
gs
imul
data16
mov
call
jns
jle
xor
push
sahf
pop
mov
popf
inc
push
loope
push
stos
add
push
mov
mov
imul
retf
mov
mov
popa
push
sub
adc
outs
add
dec
icebp
(bad)
jo
mov
cmc
push
add
fwait
dec
out
pcmpeqw
push
adc
cmp
aaa
stos
add
mov
gs
out
pop
fdiv
fwait
(bad)
fcomp
xlat
sub
mov
neg
xor
jno
scas
mov
je
sar
add
jl
js
scas
pop
push
jmp
stos
mov
fwait
(bad)
lds
sub
pop
scas
retf
push
and
addr16
and
and
inc
mov
cld
scas
add
xchg
cdq
out
iret
push
add
mov
dec
lods
adc
push
and
push
sub
sbb
fld
push
les
rcl
scas
imul
jbe
add
addr16
add
mov
pop
loope
(bad)
jmp
xchg
jae
int3
xor
sub
inc
xchg
sbb
xchg
push
push
inc
cmps
leave
xchg
test
fisub
faddp
adc
sbb
mov
call
jno
dec
outs
cmps
mov
in
mov
imul
ret
sub
jl
adc
dec
call
mov
push
push
mul
loopne
mov
call
xchg
dec
lock
retf
push
mov
dec
dec
xchg
call
test
ins
(bad)
clc
dec
mov
push
mov
loopne
sbb
jnp
or
dec
ds
les
test
or
jp
inc
cmp
cdq
fiadd
test
cmc
xor
cmp
int
fcomp
lods
mov
and
repnz
stos
jno
sub
sub
adc
aam
inc
push
and
dec
sti
sbb
test
js
and
imul
fistp
hlt
sti
push
pop
dec
rcr
or
jl
push
scas
retf
cdq
dec
out
scas
xor
cmp
(bad)
addr16
mov
out
sub
popa
(bad)
mov
test
les
push
xchg
(bad)
fadd
ja
ret
cmps
ror
lods
dec
out
fistp
jp
xchg
(bad)
sub
aam
popa
cs
(bad)
sub
test
sbb
repz
into
cwde
fdiv
mov
adc
out
adc
mov
xchg
fiadd
retf
pop
jns
clc
mov
adc
call
pop
inc
aam
leave
enter
mov
jl
nop
je
or
mov
sbb
mov
out
stc
add
dec
and
ret
xor
xchg
sti
xchg
mov
jl
or
mov
push
lods
and
xor
int3
aaa
sub
and
lds
and
ret
outs
test
sub
scas
(bad)
daa
retf
adc
in
cmp
(bad)
push
or
dec
jae
xchg
dec
add
mov
ret
mov
test
shl
ror
sbb
es
int3
fild
in
and
mov
pop
ret
es
xor
fwait
mov
imul
cmp
xchg
cmp
in
pop
adc
addr16
ins
inc
outs
hlt
jb
stos
ret
fistp
inc
sub
dec
test
stos
sar
jmp
dec
jo
cmps
mov
push
call
ss
cmps
fwait
jg
std
pop
fisttp
xchg
enter
jno
test
movs
jb
push
adc
jnp
fdiv
add
adc
stos
cld
sbb
pushf
mov
jo
stos
mov
(bad)
xchg
fidiv
sbb
or
js
call
scas
mov
jb
das
jmp
test
hlt
jge
sub
adc
adc
out
into
ins
cmp
jo
sahf
and
cmp
pop
(bad)
aaa
lods
jmp
aad
jns
inc
mov
jae
hlt
aas
imul
dec
push
push
sbb
sub
lahf
dec
adc
mov
and
sar
nop
mov
dec
stc
sub
mov
shl
lahf
outs
jb
fild
aad
cmps
jb
in
xor
std
jb
aad
test
mov
xor
pop
leave
sti
sahf
(bad)
sbb
imul
(bad)
in
fwait
cwde
jp
pop
cmp
ja
sar
dec
inc
(bad)
imul
inc
pop
mov
(bad)
and
pop
mov
lahf
loopne
addr16
and
dec
(bad)
sub
(bad)
cmp
ja
ret
pop
inc
fimul
in
cwde
dec
rol
pushf
sub
jbe
mov
es
out
std
pop
xchg
push
imul
loope
mov
xchg
popf
and
call
xchg
out
inc
adc
test
not
pop
pop
js
adc
cmp
fistp
mov
cmps
add
call
lods
fcomp
imul
mov
push
call
or
or
inc
loop
dec
aas
mov
or
ins
adc
ret
xchg
cmp
aaa
cdq
xor
or
jbe
repz
icebp
adc
mov
lock
sar
mov
adc
adc
les
fidivr
cli
and
xor
cmp
lods
loope
dec
fcom
fstp
dec
push
pop
xchg
fld
xchg
lahf
mov
fs
loope
data16
cs
xlat
jg
mov
frstor
sub
push
fwait
dec
pop
xchg
push
imul
es
adc
popa
scas
es
das
inc
pop
mov
mov
cmp
js
test
inc
test
in
mov
mov
inc
fs
ja
mov
xchg
add
rcr
ficom
inc
jecxz
fisub
fs
and
retf
pop
out
mov
loope
inc
lods
mov
push
aaa
push
or
imul
movs
adc
fist
stc
sbb
xchg
adc
jae
popf
jns
inc
(bad)
pop
(bad)
or
jmp
add
ds
xchg
xor
jae
jnp
aas
inc
imul
in
xor
fwait
repnz
dec
out
mov
xor
fnstcw
push
adc
pop
stos
sub
xor
push
movs
ins
cld
sub
aad
push
fmul
push
fucom
mov
hlt
leave
loop
xchg
add
rcl
out
and
xchg
xchg
imul
fnstenv
(bad)
in
cli
test
or
loop
cmp
int3
ret
int
test
jae
cmps
fdivp
pop
jge
sub
test
sub
ret
jp
clc
sar
imul
mov
pop
inc
mov
ds
das
test
mov
pop
fwait
ret
popa
loop
and
inc
(bad)
add
mov
xchg
sbb
and
inc
mov
mov
cmp
ffreep
sbb
jne
jno
pop
jle
fcom
cwde
mov
push
shl
aad
shl
and
iret
sub
iret
xchg
xor
pushf
mov
gs
push
icebp
stos
inc
pop
cdq
cdq
in
mov
sar
or
jmp
xor
jle
push
add
cmp
aam
leave
pop
add
xchg
cdq
sbb
cli
inc
inc
cmp
cdq
or
inc
arpl
jg
call
inc
inc
inc
les
jg
movs
cmp
pop
lea
pop
cmp
mov
jge
pop
xor
dec
jmp
je
sub
pushf
outs
pop
(bad)
cmp
repnz
adc
xor
stos
add
sub
sbb
push
sub
stc
cmp
test
mov
shl
imul
push
pop
add
dec
jae
jmp
mov
cmc
mov
movs
scas
mov
int
mov
jp
adc
stos
or
repz
push
sub
aas
jne
cmc
lods
out
xor
mov
xchg
xor
loop
mov
mov
jo
cmp
jno
je
jmp
xchg
inc
add
fsub
xlat
addr16
cmp
mov
mov
or
add
arpl
(bad)
jg
std
mov
push
mov
les
jnp
pop
cli
stc
xchg
icebp
adc
push
dec
inc
pop
int
sbb
cmp
sub
ins
or
out
mov
repnz
jmp
(bad)
jl
daa
mov
sbb
dec
mov
ret
push
add
data16
mov
call
outs
jbe
sti
push
dec
sub
fild
inc
ror
out
scas
loop
xor
pop
xlat
fidiv
sub
adc
addr16
push
aad
lds
lds
or
xchg
pop
les
inc
mul
adc
pop
std
inc
mov
mov
outs
xor
and
lds
aad
sbb
test
inc
iret
hlt
cli
inc
xor
ror
push
dec
lds
dec
or
or
retf
inc
leave
pop
inc
stc
mov
icebp
jnp
cmp
std
dec
sbb
fbstp
push
(bad)
rol
leave
out
stc
or
lea
xchg
pop
xchg
add
mov
movs
call
aaa
sti
int
jmp
add
add
(bad)
js
adc
cmp
and
mov
cmp
sti
mov
push
mov
mov
jmp
inc
pop
in
pushf
call
inc
in
dec
pushf
mov
sahf
ds
loope
test
repnz
pop
push
clc
or
pop
shl
sub
fistp
adc
lahf
sbb
push
mov
in
js
jnp
xchg
or
mov
fmul
push
sub
lock
xor
dec
pop
xchg
xor
mov
cmp
ror
movs
mov
lock
ds
or
add
(bad)
push
leave
jne
out
mov
push
dec
aas
ja
mov
fstp
push
adc
nop
add
aaa
fdiv
loop
cmps
add
jmp
ins
ds
mov
adc
dec
push
xchg
repnz
data16
adc
f2xm1
jae
adc
aaa
aaa
push
mov
je
in
pop
jns
ffreep
mov
lods
add
mov
pop
mul
popa
arpl
fmul
jno
call
mov
aam
adc
(bad)
jo
pop
add
sbb
cld
and
or
sahf
mov
out
mov
inc
dec
fadd
mov
xlat
sbb
adc
mov
lahf
xor
or
mov
ror
sbb
jne
add
ret
inc
int3
or
pop
push
fwait
and
jg
cs
inc
das
loopne
push
nop
ds
sbb
sbb
dec
fwait
and
xchg
xchg
scas
(bad)
mov
data16
inc
pop
pop
mov
outs
or
and
and
test
imul
push
daa
xor
daa
fnstsw
sbb
retf
pushf
shl
enter
sbb
push
imul
mov
push
dec
pop
rcr
out
xchg
cmp
enter
scas
daa
and
lods
sub
retf
or
add
adc
icebp
sub
shl
popa
xor
mov
(bad)
stc
xchg
iret
sub
shr
popf
and
fisubr
mov
or
int3
pop
mov
aam
repz
jne
mov
pop
retf
mul
mov
pop
imul
test
(bad)
dec
psrld
js
(bad)
jno
add
arpl
sbb
mov
retf
add
and
adc
cmps
xchg
aaa
or
push
out
push
sub
test
call
and
or
dec
cdq
push
mov
inc
mov
push
mov
cwde
dec
into
xchg
sbb
rcl
out
mov
popf
dec
adc
mov
clc
push
jmp
jns
shl
sub
test
jno
add
push
mov
push
neg
jb
lock
xor
dec
push
mov
cmps
bound
retf
std
sti
xor
call
dec
push
rol
lods
lds
adc
sub
imul
(bad)
popf
loope
mov
xchg
pop
push
mov
hlt
xchg
mov
xchg
sti
jg
sti
and
movs
out
adc
xor
push
push
(bad)
popf
sub
mov
aam
inc
inc
jl
test
dec
inc
or
(bad)
dec
fild
pop
or
lock
in
leave
xchg
in
ds
cmp
dec
std
lods
mov
mov
jge
pop
cmp
cmp
idiv
jl
repz
rol
sub
cld
xor
push
add
loop
sub
mov
or
cli
gs
outs
xor
mov
ret
les
sti
push
ja
mov
xchg
adc
sub
sub
dec
jno
sbb
push
int
test
jecxz
ja
imul
jmp
stos
test
movs
or
mov
inc
repz
rcl
clc
jmp
jmp
mov
stos
cdq
sbb
push
xchg
push
sbb
(bad)
daa
jp
cdq
(bad)
dec
sbb
sbb
mov
dec
xor
jne
leave
fnstenv
and
mov
pop
cmp
sub
call
jb
push
inc
adc
adc
(bad)
push
inc
dec
dec
retf
mov
aas
mov
aad
ja
loopne
xchg
pop
lahf
mov
in
shl
cmp
js
cdq
bound
sbb
jp
fs
adc
inc
gs
inc
xchg
pop
fldenv
loope
push
cmp
jns
aam
inc
int3
inc
or
retf
out
(bad)
fcom
xchg
loope
lock
and
shr
or
call
je
mov
push
mov
std
sub
scas
(bad)
(bad)
sub
js
jns
jmp
push
xchg
(bad)
cdq
and
std
sbb
aad
cmp
cmp
xchg
mov
push
mov
aas
mov
bound
rol
jmp
xor
inc
imul
jb
mov
arpl
test
or
lahf
sbb
stos
cmp
aad
cs
lods
es
mov
push
xchg
xor
scas
mov
aad
(bad)
pop
repnz
loop
sub
push
jmp
repz
fwait
clc
(bad)
jmp
sub
pop
shl
stos
sbb
dec
or
dec
(bad)
scas
adc
cdq
adc
stc
adc
fwait
pop
push
sub
or
(bad)
loope
cmp
sub
into
int3
push
fstp
dec
(bad)
lea
pushf
xchg
or
or
inc
mov
mov
adc
jnp
scas
mov
mov
fmul
sbb
jmp
push
arpl
push
xor
pop
adc
sub
jns
int3
add
mov
out
(bad)
cwde
cdq
fcomip
pop
sub
je
pop
jle
xchg
push
adc
xchg
iret
push
bound
sbb
xor
(bad)
jb
in
pop
add
inc
pop
push
fisubr
xor
mov
pushf
icebp
into
scas
movs
retf
rcr
dec
or
nop
inc
push
xchg
pop
sub
cmc
cmp
and
pop
inc
pop
rcl
sbb
mov
mov
mov
mov
ins
sub
mov
inc
mov
adc
icebp
and
inc
cmps
add
mov
stos
add
inc
pop
mov
mov
jmp
retf
push
cdq
mov
into
adc
pop
pop
xchg
jecxz
jl
retf
or
add
sbb
daa
cmp
movs
pusha
leave
scas
dec
imul
sbb
aad
sub
dec
inc
jp
repz
and
js
mov
loope
fwait
ror
fdivr
outs
xor
retf
mov
push
aaa
add
(bad)
cld
stos
pop
sbb
ror
cmp
mov
out
push
scas
mov
pushf
pop
call
enter
pop
xchg
daa
jl
xor
or
mov
inc
out
xchg
xlat
adc
mov
mov
in
das
out
ins
or
sbb
test
jg
ret
mov
leave
jg
inc
ret
mov
scas
sbb
popf
imul
inc
dec
rcr
repz
mov
retf
add
ins
cmps
pop
test
lock
jae
pop
inc
pop
cmp
in
mov
cmc
mov
mov
xchg
xor
jo
rcl
unpcklps
pop
xor
sbb
mov
sbb
adc
sub
adc
xchg
icebp
dec
stos
mov
sti
pop
test
daa
jbe
mov
push
sub
leave
dec
sbb
mov
xchg
or
mov
cmc
(bad)
imul
sbb
(bad)
stc
push
and
sub
adc
dec
cmp
jg
mov
js
popf
ins
pusha
(bad)
push
(bad)
mov
and
jecxz
ret
in
(bad)
push
clc
mov
xchg
std
jb
or
rcl
clc
nop
out
mov
push
aad
push
pushf
cmc
sbb
and
sub
sbb
mov
jo
add
mov
out
mov
ror
add
sub
adc
add
repz
or
lock
cmps
sub
cmp
dec
mov
adc
lahf
and
push
enter
mov
(bad)
sub
xor
and
pop
dec
adc
xor
sub
xor
xchg
add
dec
idiv
mov
jno
mov
add
fidivr
inc
xchg
js
xor
lahf
dec
cmp
jle
sti
push
sub
add
jmp
cwde
ins
xacquire
sbb
cmps
or
or
jns
add
add
or
enter
je
jb
mov
ds
scas
repnz
dec
and
mov
cmc
push
or
and
aam
add
jl
sar
or
sub
ficom
and
xor
pop
jmp
cmp
test
mul
push
sahf
mov
shl
cmp
sub
js
jo
mov
scas
(bad)
nop
aam
scas
aas
adc
mov
cmps
adc
out
aad
iret
popf
dec
repz
xor
mov
cmps
addr16
inc
add
xor
mov
nop
fild
js
int
adc
sub
pop
xor
push
cmc
sbb
fs
lea
sar
jnp
and
sbb
fimul
rol
mov
out
jmp
dec
cmp
pop
mov
cmps
(bad)
dec
mov
dec
dec
pushf
mov
outs
fst
in
jl
mov
fmul
inc
mov
cmp
fbstp
int3
inc
or
mov
cmp
pop
and
inc
out
adc
dec
lock
cmp
pop
and
imul
test
cmp
test
pop
cmc
movs
push
ins
add
xchg
xchg
gs
mov
or
fs
sub
mov
std
addr16
and
ja
stos
xor
push
clc
mov
stos
pmuludq
cwde
cwde
inc
pop
jne
icebp
ds
cmp
adc
or
ret
lahf
cmp
cmps
mov
fisub
out
mov
add
mov
je
int
enter
sbb
call
ins
pop
sbb
inc
mov
mul
or
or
push
popa
(bad)
cli
jno
jl
rcl
mov
sub
adc
adc
test
mov
test
and
or
ret
pop
cmp
xchg
mov
inc
lock
int
cmp
adc
dec
enter
outs
mov
and
sub
pop
in
inc
(bad)
sbb
stos
enter
jmp
jle
call
mov
inc
dec
xchg
push
jno
dec
repnz
dec
out
mov
(bad)
pop
mov
imul
mov
add
mov
xchg
popf
mov
clc
cld
pop
add
mov
and
cmp
js
fisttp
ret
jl
stos
jo
mov
cmp
push
rcr
cmp
mov
nop
mov
adc
add
mov
pushf
movs
mov
push
into
cmp
push
ficomp
icebp
add
cmp
xor
jo
sbb
adc
mov
lock
test
cwde
pop
inc
imul
retf
push
sbb
mov
mov
test
sub
into
imul
mov
dec
jae
into
push
das
(bad)
lods
sub
xchg
les
xor
pop
ret
fst
cmp
movhps
dec
and
fadd
xlat
jmp
xor
lock
imul
bound
icebp
add
jl
jns
fmul
mov
xchg
xchg
in
add
jge
pop
jbe
sub
adc
cmp
imul
neg
in
in
daa
or
or
aas
jge
mov
pop
push
les
xchg
mov
std
ins
stos
mov
xchg
inc
sub
(bad)
(bad)
and
daa
pusha
dec
inc
mov
mov
fdiv
fs
sbb
mov
std
mov
js
(bad)
ds
dec
sub
in
lock
into
inc
push
push
data16
fs
dec
add
lea
loope
pop
es
mov
sbb
nop
aas
xchg
push
scas
adc
push
dec
call
mov
nop
clc
mov
jmp
ds
inc
push
pusha
push
push
mov
adc
cld
retf
data16
mov
call
inc
jbe
jl
sbb
mov
lds
call
jns
jbe
mov
mov
outs
fnstsw
ins
arpl
jecxz
mov
and
mov
and
loopne
sub
cmc
leave
bound
push
sub
xor
icebp
popf
xor
push
mov
xor
mov
push
xor
push
ret
repz
inc
xor
push
(bad)
ror
imul
xlat
iret
xchg
lahf
test
rol
push
outs
cmp
retf
pop
push
add
in
ret
xor
cld
fist
mov
repnz
ds
xchg
cmc
xchg
inc
or
mov
mov
xadd
add
inc
dec
jb
xor
lods
sar
les
push
fdiv
(bad)
jle
ins
jp
repnz
dec
pop
dec
xor
leave
sub
pop
stos
jmp
clc
or
sub
sbb
cmp
into
mov
inc
shl
sbb
fdiv
enter
add
mov
adc
dec
lea
sbb
jns
push
stc
sub
nop
sbb
(bad)
mov
into
push
jns
or
dec
test
lods
cmp
xchg
fldenv
mov
repnz
sbb
mov
fwait
mov
out
adc
repnz
push
out
add
push
xor
das
dec
hlt
push
push
in
aaa
xor
ret
repz
test
scas
mov
jg
clc
out
push
aam
jbe
sbb
movs
adc
cmps
aas
push
jge
inc
jl
jns
imul
in
scas
and
(bad)
int3
scas
mov
sbb
ret
test
mov
in
adc
or
cdq
scas
mov
sub
jmp
adc
mov
pop
xor
mov
nop
call
adc
xchg
cmp
ds
fstp
daa
or
aas
into
out
(bad)
sti
cwde
fadd
and
addr16
mov
es
scas
xchg
pop
jmp
aam
leave
and
bound
aam
xor
mov
push
outs
scas
pop
jno
xor
clc
in
fdivp
loop
pop
call
sub
fwait
cmp
cdq
mov
daa
pop
out
(bad)
sub
out
outs
clc
jp
ja
out
in
mov
dec
dec
or
pop
xor
(bad)
pop
adc
loope
mov
cmp
push
pop
cli
or
xchg
test
push
repz
inc
cmp
dec
arpl
cmp
push
mov
je
cli
adc
repz
push
cmp
loope
add
jae
jo
sti
push
clc
jno
add
jecxz
push
aaa
into
sbb
add
pop
pop
inc
adc
push
and
pop
xor
das
cwde
mov
pop
in
adc
sub
je
(bad)
jbe
ret
nop
mov
lods
pop
cmp
(bad)
xchg
fcmovnbe
push
out
pop
int3
jmp
ficomp
push
sahf
mov
outs
rol
xchg
mov
mov
fist
(bad)
xchg
mov
xchg
(bad)
pop
xchg
mov
ror
aad
in
push
sti
scas
aaa
push
cmp
mov
cmp
pop
in
push
pop
aas
lods
arpl
dec
out
lea
fs
sub
xor
(bad)
pop
xor
jecxz
xchg
ret
dec
dec
sbb
jne
fiadd
add
xchg
imul
test
ja
shl
inc
adc
sti
dec
outs
retf
adc
xchg
repnz
les
add
jmp
mov
xor
jno
ja
sti
lds
jge
aas
lahf
rol
pop
fmul
scas
add
and
and
push
mov
cmp
mov
sub
pop
sbb
fdivr
jnp
inc
mov
push
jnp
sti
lods
mov
movs
jno
and
rcr
pop
xchg
add
jmp
rol
movs
sbb
push
mov
aaa
adc
cwde
mov
fwait
les
aad
aam
test
std
jbe
pop
not
jmp
lock
out
inc
outs
push
stos
pushf
pop
jecxz
mov
sar
push
ss
ret
push
jo
xor
pusha
das
mov
cs
clc
popa
cwde
cmp
dec
mov
sbb
pusha
fsubr
lods
xor
fwait
(bad)
faddp
out
stc
sahf
aad
jmp
ds
div
inc
sub
inc
jb
aam
aad
aaa
shl
mov
movs
ficomp
pop
movs
xlat
daa
dec
mov
add
data16
lock
xchg
aaa
or
add
cmp
lahf
mov
jns
adc
adc
push
loope
cwde
inc
mov
icebp
cmp
ins
sbb
mov
dec
inc
xrelease
frstor
popf
ror
cdq
mov
ja
ret
dec
pop
(bad)
stc
mov
and
mov
cwde
push
mov
mov
leave
sub
adc
adc
in
je
xor
jmp
repnz
push
push
(bad)
fstp
cmp
addr16
add
jae
cs
xlat
and
sbb
xchg
nop
aam
mov
hlt
push
pop
dec
inc
cmp
add
pop
and
call
jae
xor
mov
arpl
sbb
jmp
adc
into
cmp
(bad)
jle
scas
mov
xchg
xchg
movs
loopne
stc
sub
scas
mov
mov
add
popw
xchg
aam
jge
or
jo
adc
cmp
and
(bad)
retf
cmp
iret
mov
inc
ret
and
sbb
in
bound
nop
xchg
adc
sub
fcmove
mov
outs
jb
std
sar
test
jns
dec
jmp
pop
xchg
into
lods
test
loope
clc
jns
ins
imul
aad
stos
inc
cmp
xchg
(bad)
push
jp
adc
std
enter
push
lea
dec
xor
mov
outs
bswap
aas
jbe
xor
jns
cwde
xchg
adc
in
shl
dec
data16
pop
jno
pushf
aam
adc
xchg
xor
clc
or
scas
mov
sahf
sub
pop
dec
(bad)
and
dec
leave
call
push
pusha
loop
mov
out
mov
mov
ins
mov
xor
jp
cmp
adc
jmp
jg
mov
and
or
adc
or
jne
or
iret
cmps
clc
aas
outs
xchg
xchg
das
sub
(bad)
xchg
add
arpl
sar
outs
dec
ds
dec
dec
movs
mov
mov
fbld
xchg
xor
je
(bad)
xchg
pop
jecxz
jge
ffreep
xor
or
sbb
inc
jns
test
in
mov
test
out
ins
add
or
(bad)
mov
outs
cwde
rcl
ficom
dec
ins
data16
or
ret
fbld
fnstsw
lods
jle
jnp
retf
cmps
int3
jb
mov
and
arpl
push
cdq
or
cmps
les
sti
lods
sub
cmps
xor
mov
loop
or
jbe
pop
mov
xor
test
push
jnp
dec
aaa
(bad)
fwait
call
not
gs
push
and
sub
push
cmp
pop
call
test
xchg
fcomp
loopne
or
add
es
imul
xor
les
data16
or
sub
ins
push
scas
adc
jb
hlt
fidivr
pop
pop
cmp
jno
mov
std
test
pop
mov
xchg
inc
jo
mov
inc
sub
(bad)
push
and
sub
outs
jnp
mov
add
sahf
mov
or
ins
xchg
test
cmp
jg
repz
jecxz
adc
jp
sub
daa
xor
cmp
xchg
pop
sar
mov
xchg
and
pop
sbb
(bad)
js
setbe
pusha
xlat
in
mov
jne
xchg
mov
sar
js
cmps
cmp
add
ja
push
mov
test
sub
dec
pushf
add
dec
cmp
jae
gs
xchg
call
rcr
shl
jmp
dec
lods
jecxz
mov
pop
ss
and
in
es
mov
jne
mov
xchg
sub
fld
int
fiadd
adc
stos
ss
jle
adc
bound
xor
xchg
pushf
outs
movs
test
sar
sub
mov
inc
arpl
adc
add
sub
cld
in
hlt
sbb
lock
inc
jne
or
xchg
xor
out
fs
sub
xchg
loop
hlt
jae
pop
push
jae
dec
out
sti
imul
pop
jge
je
pop
jo
xchg
and
jl
call
out
pop
nop
push
test
mov
adc
test
sar
adc
clc
xchg
cdq
bound
test
xchg
jnp
imul
cmps
xor
(bad)
lock
push
retf
xlat
or
mov
sti
mov
push
jno
xchg
enter
cwde
js
xor
sbb
sub
icebp
fisttp
idiv
movs
push
lods
sub
xor
mov
pop
out
jle
bound
retf
shl
sub
cld
lods
and
jge
xchg
jmp
imul
sub
add
jecxz
mov
pop
xchg
enter
adc
mov
pop
call
xchg
popa
xor
ins
lea
mov
out
mov
dec
add
or
sbb
pushf
push
mov
iret
dec
pop
xchg
loope
cmp
ret
mov
test
jo
in
call
loope
ret
jnp
sub
push
adc
fisttp
or
sub
pushf
jbe
les
gs
shr
dec
mov
std
add
dec
pop
adc
imul
bound
cmps
jno
outs
inc
out
fwait
outs
test
test
(bad)
or
test
in
sar
test
std
stos
push
push
add
es
call
je
jg
sar
push
xchg
in
cmps
pushf
push
cmps
fs
aaa
push
mov
cs
(bad)
fisubr
out
std
loop
aaa
jecxz
gs
(bad)
dec
inc
cdq
jmp
and
xor
in
arpl
mov
dec
add
push
arpl
and
sub
adc
icebp
fcomp
inc
lods
inc
aas
mov
fwait
pop
xor
ror
movs
and
mov
in
pop
sbb
(bad)
arpl
cli
sub
fwait
js
lds
and
sub
js
push
mov
std
mov
aam
mov
adc
cwde
xchg
inc
call
push
add
or
les
xchg
add
xor
lods
xchg
test
(bad)
jge
and
mov
xor
repz
adc
shl
push
push
dec
(bad)
movs
shl
ret
nop
push
xor
daa
add
fwait
mov
jg
shl
adc
push
fild
cmp
jmp
jge
(bad)
aad
dec
aaa
js
ret
retf
push
mov
(bad)
mov
mov
xchg
rcr
mov
sar
and
lahf
cs
jg
sbb
addr16
test
mov
aam
aaa
rcl
inc
jno
mov
retf
adc
mov
push
cmp
fwait
sub
test
jecxz
xor
or
cmps
repnz
clc
mov
jb
jo
test
inc
or
clc
sbb
sub
inc
cs
fild
xor
out
push
push
test
je
icebp
add
stc
lock
ins
push
and
(bad)
iret
repnz
adc
movs
mov
sub
add
add
push
fwait
jae
xchg
fadd
jl
sbb
lods
bound
cmp
lds
bound
nop
data16
retf
in
jnp
mov
mov
xor
dec
inc
and
and
(bad)
sub
ficom
cmps
or
aaa
mov
les
cli
retw
cmps
test
mov
jmp
test
vcmpsd
jl
stc
push
cmps
mov
in
mov
jns
mov
sub
jmp
pop
jmp
jmp
mov
test
jbe
dec
cs
inc
loope
aas
call
or
push
shl
(bad)
xchg
in
call
mov
retf
and
shl
ret
cwde
sub
mov
or
add
push
in
mov
stos
fbld
xchg
and
lock
sbb
xor
repnz
push
jno
rol
(bad)
stc
mov
xor
jb
inc
push
and
sti
stc
das
push
std
xchg
cmp
push
retf
shl
xchg
xchg
cli
rol
or
inc
cmovbe
(bad)
xor
push
into
hlt
in
ja
fs
adc
inc
and
dec
sbb
(bad)
retf
sub
mov
fidivr
nop
popf
sbb
movs
pushf
mov
add
in
mov
call
mov
pop
cmc
loopne
clc
aaa
jg
mov
arpl
(bad)
jg
int
add
pop
sti
jno
mov
lea
adc
xor
jg
add
dec
stos
sbb
fcom
push
xchg
or
stos
and
cdq
jo
xor
adc
loope
sub
xchg
addr16
sub
in
lahf
jo
and
shr
adc
movs
push
xor
(bad)
or
inc
cmp
or
and
sbb
mov
int3
jecxz
shl
aad
out
(bad)
mov
jne
dec
mov
push
add
mov
(bad)
(bad)
aas
or
cmp
je
lea
xchg
jecxz
xchg
mov
fwait
aaa
out
adc
mov
mov
adc
sbb
pop
jne
repz
adc
and
adc
jmp
test
loop
mov
mov
(bad)
pop
jmp
fistp
fst
scas
dec
nop
xchg
ret
(bad)
out
and
cld
ret
retf
pushf
scas
xor
scas
call
fnstcw
and
pop
inc
push
mov
fwait
sbb
ror
jmp
icebp
sub
fidiv
push
les
in
jns
sub
mov
stos
add
and
repz
sbb
push
mov
push
(bad)
mov
push
lock
repnz
xchg
and
mov
jmp
cmp
call
rcr
(bad)
out
xchg
sub
lds
jg
in
in
xchg
mov
rcr
push
jno
xlat
lods
jns
push
cmps
jmp
mov
inc
xchg
mov
inc
mov
aas
push
jg
xor
je
ret
jmp
aas
(bad)
xlat
mov
movs
nop
inc
std
cmps
mov
pusha
adc
add
fisttp
jno
jno
pop
push
enter
in
mov
stc
call
jae
(bad)
fist
jmp
aad
and
xchg
stc
push
dec
mov
das
cs
jne
pushf
ret
mov
movq
stos
xor
cmp
loop
div
scas
mov
(bad)
not
xchg
add
rcr
mov
es
frstor
pop
lahf
leave
push
sbb
movs
jmp
cmp
pop
out
dec
and
push
out
outs
add
push
xchg
fidivr
xchg
daa
test
sbb
imul
dec
dec
icebp
mov
iret
xor
pop
pop
lds
into
outs
fs
outs
push
push
add
adc
call
std
mov
mov
stos
ret
and
lods
cmps
nop
push
adc
test
push
pop
popf
pop
jp
dec
ror
inc
xchg
das
aad
cmp
sbb
std
and
subps
add
push
and
je
repz
push
mov
cli
retf
das
cmp
inc
cld
sti
data16
xor
or
mov
les
sub
mov
add
fsub
mov
out
push
or
sahf
cdq
and
dec
shl
pop
add
add
cmc
lahf
idiv
jne
(bad)
std
dec
add
inc
popf
jge
data16
fisubr
xor
dec
test
add
xchg
out
sub
test
gs
mov
pop
std
push
mov
xchg
fs
ficomp
and
aam
fisubr
sub
jae
call
in
mov
jae
push
repz
dec
in
jmp
mov
aaa
test
or
mov
cmp
imul
hlt
pop
and
xor
inc
adc
mov
enter
add
inc
repnz
(bad)
(bad)
in
in
jecxz
nop
xor
or
cmp
ret
and
xor
pop
imul
out
addr16
add
adc
in
cmps
and
dec
and
cmp
hlt
aas
inc
mov
cmp
lods
xor
or
out
stc
daa
mov
jns
mov
xchg
cwde
xor
and
sub
adc
cmp
fs
jecxz
frstor
aas
xchg
push
cli
mov
shl
and
loopne
dec
mov
mov
sub
inc
cld
cmp
movs
aas
dec
dec
ret
imul
bound
fnstsw
cmp
xor
enter
scas
adc
test
sub
sbb
lahf
mov
(bad)
lock
xchg
lods
mov
pop
fs
xor
call
push
or
mov
jge
adc
sub
pusha
sar
jnp
push
and
mov
sbb
andps
jno
or
mov
mov
rcr
in
es
pop
mul
xchg
ins
sbb
mov
out
stos
or
lahf
jae
inc
mov
xchg
movs
out
imul
ror
popf
aam
lods
fbstp
xchg
icebp
fadd
inc
(bad)
mov
data16
addr16
hlt
cwde
sub
ins
sub
fidivr
fs
inc
test
pop
call
stos
scas
pop
or
inc
lods
mov
push
xor
(bad)
outs
fisttp
aam
cmp
ds
adc
add
mov
aaa
dec
xchg
or
ins
jae
mov
xor
mov
les
out
and
(bad)
fstp
mov
push
pop
imul
dec
lods
cmps
mov
call
jns
repnz
push
cmp
pop
push
popf
xchg
mov
pushf
xlat
lahf
mov
jne
loope
call
prefetch
or
adc
sbb
and
out
or
or
lods
or
adc
in
adc
inc
loopne
mov
enter
add
and
dec
lea
ret
paddusw
xor
lock
or
fnstcw
jns
shl
push
mov
(bad)
out
pop
and
add
cmp
lods
sbb
sbb
retf
push
mov
or
scas
pop
add
(bad)
dec
pop
imul
cmp
leave
or
popa
fs
sbb
pop
jb
add
cwde
loope
push
gs
mov
(bad)
gs
loope
or
xchg
hlt
cwde
enter
push
daa
loop
cmp
sub
daa
popa
jae
xchg
movs
hlt
push
pop
jge
(bad)
daa
mov
xlat
xchg
or
inc
out
and
sub
xchg
mov
pop
in
pop
fwait
add
cmp
mov
lds
sub
add
mov
lds
mov
movs
inc
fistp
fsub
std
dec
sbb
je
adc
rol
(bad)
cmp
mov
add
push
mov
js
jl
mov
mov
xor
sti
inc
jl
aas
xor
js
dec
adc
test
gs
aad
jne
mov
jmp
test
pop
cmp
jno
(bad)
imul
stos
add
push
data16
call
out
es
scas
enter
and
es
outs
in
sub
pop
sar
xor
jno
aad
sbb
and
jo
shl
out
int
test
sbb
cld
mov
(bad)
jmp
jecxz
sub
mov
push
clc
jle
imul
sub
fisubr
mov
or
push
and
push
in
sahf
mov
pop
(bad)
adc
xchg
sbb
cmp
pop
and
fwait
dec
mov
out
test
test
pop
das
fs
push
clc
retf
scas
pushf
cmp
std
stos
push
pop
adc
or
mov
(bad)
and
scas
aaa
in
xlat
jbe
lock
add
or
add
jg
cmps
xchg
out
aad
in
ins
xor
sub
sub
in
add
xchg
jnp
jl
repz
mov
fmul
clc
sub
mov
xor
inc
popa
mov
jle
outs
pop
pop
jecxz
sub
sub
mov
cs
mov
cwde
or
inc
imul
or
xchg
mov
dec
mov
test
cmp
enter
(bad)
jmp
push
xlat
das
cmp
(bad)
loop
loop
sub
js
adc
lock
aam
clc
jae
movs
push
xlat
imul
xor
stc
jo
sahf
mov
mov
xor
cmp
sbb
xor
inc
iret
cwde
and
retf
(bad)
mov
imul
dec
ins
push
test
gs
mov
jns
movs
xchg
daa
inc
loopne
mov
dec
aas
dec
shl
xchg
or
xchg
or
mov
gs
jmp
popf
imul
adc
xchg
add
sbb
push
mov
push
inc
loope
ror
add
jle
mov
push
lock
fld
pop
je
xchg
xor
cdq
xchg
sub
mov
movs
inc
test
inc
or
pop
or
or
sar
ror
push
sub
test
popf
inc
sub
adc
sar
dec
jl
in
or
cli
daa
sbb
leave
pop
jnp
cmc
jge
bound
test
(bad)
ins
rol
clc
out
dec
xor
repz
imul
ins
mov
out
inc
(bad)
jns
inc
jge
lods
mov
xchg
pop
mov
imul
jmp
inc
adc
push
sbb
add
data16
mov
mov
aaa
dec
je
mov
mov
aad
xor
mul
sub
xor
push
das
std
pop
push
jl
xchg
lock
aam
fidiv
xchg
inc
adc
sub
push
cmp
push
sbb
xor
js
jmp
fs
inc
daa
jle
pop
nop
cmp
sub
fisttp
in
out
in
daa
movs
or
xchg
jo
les
fstp
cmps
outs
sub
or
mov
pop
imul
int3
add
dec
(bad)
fadd
sar
add
js
loopne
in
adc
mov
mov
jecxz
jge
mov
dec
mov
stos
iret
iret
xchg
xor
dec
fs
jmp
pop
ins
jp
mov
retf
les
or
jle
xchg
jge
push
sbb
or
add
add
std
pop
or
daa
pop
cs
iret
cmp
addr16
sbb
xor
push
dec
lea
pop
mov
ret
dec
mov
(bad)
adc
dec
data16
je
(bad)
or
lock
mov
fst
aaa
jmp
push
and
mov
test
popf
xchg
inc
cmp
push
push
call
pop
das
movs
lds
mov
test
jmp
inc
pop
pushf
xlat
stos
nop
hlt
mov
pop
dec
push
retf
lods
mov
xor
daa
dec
lahf
cmp
mov
arpl
add
std
(bad)
xor
push
mov
add
sti
daa
or
mov
sub
stos
dec
loope
fcomp
rcl
or
sbb
lahf
neg
aad
fld
push
stos
iret
fs
int
retf
mov
mov
mov
data16
loopne
fsubr
push
mov
inc
aaa
add
inc
push
pop
and
inc
sbb
xor
mov
lahf
sar
jge
pop
mul
xchg
movs
gs
push
push
mov
jo
scas
repnz
leave
outs
xchg
mov
fisubr
jecxz
jae
js
inc
js
stos
scas
jmp
lods
cwde
shl
lock
int3
or
retf
icebp
call
cwde
and
test
daa
mov
sbb
fimul
neg
(bad)
ss
sub
imul
aam
adc
nop
dec
dec
inc
mov
dec
mov
retf
mov
mov
call
mov
xor
inc
ss
push
xchg
jecxz
mov
dec
xchg
add
jmp
lods
imul
sub
int3
push
js
adc
adc
in
enter
aas
outs
adc
jbe
cmp
pop
or
pop
jp
xchg
fs
mov
pop
in
pop
arpl
inc
xlat
movs
xlat
push
jmp
neg
and
ja
rcr
xchg
ss
xchg
loope
xchg
jmp
jecxz
sbb
ss
adc
iret
adc
test
cli
mov
cmp
inc
popf
loope
jmp
cdq
je
fs
mov
jne
cmps
dec
outs
cli
icebp
dec
sbb
add
mov
pop
jg
adc
hlt
push
xor
sub
mov
in
lods
dec
pop
into
in
pop
js
in
(bad)
pop
(bad)
stos
sti
test
inc
or
aad
mov
lock
fld
inc
stos
sub
pop
das
pop
and
mov
dec
aas
sub
(bad)
sar
jmp
aad
iret
call
jnp
fwait
into
jmp
sbb
jge
fild
das
mov
or
out
int
test
sbb
mov
into
lock
push
das
outs
adc
jae
pop
sub
jb
mov
mov
fwait
xlat
aad
retf
lods
mov
jns
xchg
cmps
outs
inc
adc
ror
sbb
in
lds
xchg
cli
aam
addr16
retf
jp
inc
mov
sbb
aas
dec
fs
mov
push
in
fnstenv
fsubr
daa
sub
and
cli
jnp
cmp
loopne
out
idiv
in
aad
mov
rol
fadd
push
jg
push
out
popf
lock
cmp
push
sti
mov
cmp
mov
dec
enter
jmp
sbb
int3
or
ror
fnsave
lahf
mov
lods
mov
rcr
int
arpl
jmp
sub
add
sub
movs
mov
ins
addr16
fst
pushf
jno
loopne
sahf
cmp
ficomp
push
out
lods
adc
or
push
sub
add
ret
lods
stos
sub
lods
or
(bad)
das
jle
mov
(bad)
retf
pop
sub
pushf
or
ins
push
mov
stos
in
aas
adc
xchg
stc
jg
enter
sahf
jne
cmps
jns
mov
adc
shr
lahf
(bad)
out
xchg
sbb
in
jae
push
mov
xor
dec
in
jp
and
push
inc
shl
loop
inc
adc
mov
dec
adc
and
jns
mov
in
mov
inc
gs
mov
adc
les
sub
jmp
push
xchg
jmp
bound
xchg
ja
call
jnp
add
cmps
ins
jo
jge
xlat
push
or
(bad)
arpl
mov
push
scas
mov
lods
and
jo
outs
mov
jecxz
cmp
aaa
xchg
daa
shr
mov
inc
pop
out
(bad)
sub
and
popa
jae
mov
repz
push
cmp
daa
push
dec
pop
cs
xor
and
sub
dec
neg
jnp
cmp
jnp
repz
leave
icebp
aam
(bad)
lds
sbb
mov
mov
lahf
push
retf
cli
xor
jecxz
and
movsx
inc
rcr
push
mov
xchg
mov
pop
xchg
cmp
ret
stos
xchg
sbb
cmp
cdq
jg
mov
enter
ror
clc
cmps
cli
mov
jl
xchg
in
fwait
adc
call
adc
out
js
dec
mov
pop
push
(bad)
dec
push
mov
in
add
repnz
cmp
push
call
add
bnd
ret
data16
and
dec
push
ss
xlat
rcr
out
aas
xchg
leave
jno
nop
push
adc
sbb
fcom
mov
push
ja
arpl
popa
stos
push
adc
pop
jmp
(bad)
xchg
sbb
shr
and
les
jl
std
and
adc
daa
not
mov
jl
outs
xchg
in
fwait
enter
xor
dec
out
iret
push
dec
pushf
pop
test
jb
mov
into
cmps
xchg
fiadd
xchg
and
sub
je
pop
or
sub
pop
and
mov
xchg
pop
sbb
mov
in
adc
out
scas
stc
aaa
sti
sbb
mov
xchg
push
xchg
popa
pop
inc
movs
bound
or
mov
cmp
push
(bad)
cmps
pop
mov
rcr
sub
into
and
mov
arpl
fs
adc
add
stos
call
mov
mov
cmp
rcl
adc
das
fld1
fisttp
inc
(bad)
jmp
dec
jbe
out
or
cmp
ja
fisubr
jge
dec
cmps
mov
in
pop
and
pop
cmps
enter
daa
aaa
and
ss
stc
adc
sub
jle
aaa
ret
and
mov
or
xor
xchg
inc
fstp
mov
push
inc
hlt
sub
sub
mov
adc
sub
mov
shl
clc
sbb
dec
out
sti
sbb
pop
adc
sbb
inc
sub
push
out
lods
xor
pop
push
fucomip
ins
in
add
(bad)
outs
daa
mov
mov
add
push
movs
pop
pusha
out
stos
cwde
sbb
test
inc
adc
mov
cdq
aas
adc
pop
mov
rcr
mov
data16
outs
(bad)
dec
mov
sahf
sbb
stc
retf
gs
shl
xor
lods
stc
(bad)
les
ds
out
dec
xor
sub
pop
stos
and
and
fmul
cs
xchg
xlat
movs
jmp
inc
and
sbb
inc
iret
fucomi
mov
inc
push
add
cs
aaa
xchg
mov
leave
push
(bad)
(bad)
fstp
mov
scas
push
inc
cwde
sub
or
shl
lds
fwait
loopne
jmp
(bad)
call
push
inc
fldcw
push
dec
push
push
xor
dec
mov
test
xor
mov
retf
int3
in
xor
jne
test
lea
and
fisttp
lds
cli
mov
jmp
xor
mov
push
clc
pop
dec
mov
inc
sbb
mov
xor
int3
call
jne
loopne
in
sbb
gs
cmp
movs
js
push
or
cs
icebp
outs
sub
push
push
push
jmp
cmp
lock
sbb
mov
movs
icebp
inc
ss
movs
stc
jmp
jne
lods
mov
adc
push
sbb
sbb
push
push
mov
leave
stc
cmp
rol
xor
jmp
sub
jno
and
cmp
push
mov
in
rcl
adc
loopne
jmp
rcr
stc
sbb
dec
cs
mov
(bad)
mov
dec
jg
aam
loope
outs
movs
(bad)
cli
test
adc
imul
pop
adc
inc
jmp
out
loop
retf
test
mov
mov
jmp
jno
pop
or
mov
shl
lahf
xchg
sbb
cmp
mov
inc
push
pop
and
mov
in
retf
retf
mov
nop
xor
sub
imul
mov
cmps
mov
lods
jns
sub
lahf
mov
mov
cmp
inc
mov
aad
jecxz
addr16
dec
out
call
mov
inc
bound
fmul
pop
adc
xchg
mov
sub
in
mov
jmp
mov
push
ja
out
(bad)
mov
xor
jle
aas
mov
xor
pop
es
mov
fs
hlt
jl
cmp
ins
add
aam
repz
std
out
icebp
in
lock
jecxz
es
fxam
push
jns
cs
push
mov
in
jl
mov
pushf
push
xchg
xor
jmp
sub
pop
xchg
adc
dec
fld
rcr
leave
rcr
dec
inc
mov
dec
inc
jno
and
jp
push
dec
inc
xor
cmps
dec
in
call
shl
mov
push
push
sbb
mov
xor
jge
lods
push
mov
arpl
and
inc
push
test
rcl
lea
mov
int
out
int3
mov
fadd
leave
push
inc
fst
add
test
cmp
test
or
sbb
std
push
data16
sbb
sbb
and
jo
aas
nop
ins
(bad)
xlat
popa
xchg
mov
xchg
push
cmp
jnp
adc
mov
(bad)
adc
sti
xchg
pop
pop
sub
mov
jge
xchg
daa
mov
and
fdiv
mov
mov
retf
push
add
(bad)
f2xm1
xchg
xor
aas
fwait
cmps
imul
je
lahf
fild
bound
push
sbb
jle
das
sar
fld
pop
stc
fbld
inc
mov
loope
add
repnz
std
fcomi
outs
sbb
mov
mov
(bad)
fisub
ins
enter
nop
dec
inc
mov
dec
inc
mov
jp
in
fcmovnu
ret
ss
js
ja
push
mov
xchg
nop
(bad)
call
xchg
ficom
nop
test
cs
and
sbb
iret
es
add
out
loope
loopne
sub
jns
(bad)
fcmovnbe
aad
js
stos
aaa
mov
and
cwde
xor
fdivrp
out
jne
mov
es
out
movs
sti
inc
dec
inc
inc
iret
mov
jecxz
xchg
retf
jns
movs
mov
or
outs
cmp
call
fsub
int3
inc
pusha
shr
les
inc
fistp
xchg
xor
inc
fwait
out
fcmovb
inc
lock
jae
sub
out
movs
mov
adc
lea
sub
leave
imul
xchg
xor
jmp
and
sar
push
std
xor
aad
cmp
pop
xchg
inc
pop
fst
pop
xchg
sar
ja
rol
ss
retf
mov
ins
fadd
push
or
cmc
je
into
test
push
dec
int3
lods
fistp
pusha
ss
mov
fprem1
mov
addr16
repnz
lea
data16
dec
and
adc
inc
xlat
outs
mov
and
xor
lods
sbb
aam
push
push
push
dec
das
sbb
clc
mov
aad
hlt
mov
cwde
sub
cwde
cwde
rol
xchg
or
add
ins
push
mov
dec
fadd
dec
fmul
fldenv
ror
push
inc
popf
jg
sub
ins
mov
and
mov
je
xchg
jne
(bad)
jg
clc
aaa
push
outs
fnsave
jbe
(bad)
out
aam
mov
or
pop
push
mov
loopne
xchg
aaa
test
jmp
sub
push
out
popf
lods
pop
cmp
test
repnz
and
(bad)
cmp
and
push
ja
outs
out
(bad)
and
cmp
sar
clc
cmps
or
jmp
xlat
mov
cli
popa
inc
popf
xchg
loop
out
test
and
shr
stc
sub
or
ss
cmp
ds
sbb
cmp
out
mov
pop
ss
pop
xchg
push
pop
xchg
neg
add
test
movs
les
mov
loopne
and
xor
cmc
retf
repnz
xchg
stc
inc
push
dec
std
(bad)
xchg
in
xchg
mov
in
mov
aam
jg
(bad)
cmp
mov
and
pop
xchg
dec
push
push
out
lds
dec
in
cdq
xchg
mov
mov
xchg
test
push
pop
cld
pop
sbb
test
mov
fdiv
add
in
and
cs
push
bnd
test
fs
add
or
pop
out
and
mov
push
dec
leave
adc
mov
shl
add
or
xchg
xchg
xor
sub
loopne
adc
dec
mov
adc
ja
(bad)
jle
sub
retf
and
addr16
repz
adc
cmp
fidivr
mov
add
and
and
(bad)
pop
cmp
daa
(bad)
clc
(bad)
enter
ja
xlat
cwde
into
aas
aaa
adc
out
add
xor
fmul
loope
jnp
cmps
int
jo
into
fincstp
pop
outs
inc
out
adc
adc
mov
add
in
pop
ss
inc
mov
mov
and
outs
jns
mov
pop
int3
adc
mov
cmc
les
jp
lods
cmc
push
pop
jno
adc
test
in
jns
or
add
push
in
mov
pop
xchg
mov
or
push
xchg
imul
jl
stos
int3
mov
enter
dec
ret
xchg
ja
pop
arpl
dec
jmp
sbb
test
test
cmps
aad
cdq
dec
pop
adc
dec
shr
das
clc
out
rol
push
dec
fadd
dec
aam
cmp
mov
jge
mov
and
sub
shl
mov
or
pop
jmp
(bad)
jnp
dec
mov
icebp
hlt
cli
icebp
stos
std
in
nop
mov
stc
(bad)
or
aam
hlt
push
sub
popf
into
xchg
mov
aad
scas
push
mov
test
jmp
imul
inc
sbb
aad
shl
push
mov
mov
pop
loope
stos
neg
out
sbb
shr
dec
in
jnp
lods
movs
push
popf
ret
pop
aas
ja
into
das
pop
test
inc
cmp
xlat
fisubr
push
dec
bound
ss
mov
push
add
fist
jg
jle
mov
ja
fcom
aaa
xor
jnp
sar
pop
xor
dec
pop
or
jb
pop
mov
popf
xor
pop
dec
pushf
cdq
cmps
in
por
jp
inc
lahf
xchg
in
into
in
xchg
jmp
push
jmp
(bad)
mov
or
scas
or
mov
jge
movs
mov
inc
cmp
fbld
and
jmp
mov
out
and
pusha
enter
out
dec
xchg
fnstcw
push
shl
call
dec
mov
icebp
test
std
dec
repnz
fsub
xor
or
movs
repz
(bad)
mov
push
add
mov
push
aaa
retf
inc
mov
out
pop
adc
jns
mov
sbb
mov
jb
retf
loope
dec
(bad)
sub
sbb
fadd
jl
inc
sub
adc
popf
or
ffreep
xchg
cdq
stos
adc
iret
movs
mov
fdivrp
mov
pop
jbe
fcmovnb
cld
dec
add
das
and
push
sbb
rcl
or
ffree
xor
pop
cld
pop
xchg
rol
into
cmps
jle
jge
popf
mov
xchg
add
in
sbb
ja
add
ds
mov
mov
test
inc
shr
cs
loopne
xchg
xor
arpl
(bad)
iret
daa
cmc
jmp
ja
repz
pop
inc
xor
pop
jmp
les
xor
loopne
jbe
lahf
xor
sbb
push
int3
push
ins
push
push
lods
xchg
mov
mov
cld
sbb
jnp
jge
jecxz
mov
pop
mov
fidivr
scas
adc
pop
cwde
sub
shl
das
retf
and
sbb
xchg
ss
or
dec
mov
sub
pop
jle
cmc
cmp
(bad)
xor
and
or
cmp
mov
sub
push
xchg
in
mov
sub
mov
sub
outs
push
add
stos
rol
xchg
mov
adc
xor
cmp
in
data16
mov
inc
cmps
jo
neg
and
inc
sbb
retf
sub
ficom
shl
aam
jle
cdq
jl
(bad)
mov
popa
pusha
aaa
push
add
call
outs
(bad)
out
fwait
or
call
(bad)
arpl
sbb
extrq
es
cmp
xchg
jmp
add
mov
ins
mov
mov
mov
shl
add
repz
mov
jbe
js
fnstenv
lahf
push
popa
xor
out
fadd
add
out
iret
or
dec
mov
int
jb
adc
jb
bound
fwait
mov
cmp
mov
js
in
movs
add
mov
sub
ret
and
mov
in
xchg
dec
fidivr
inc
pop
mov
cmp
or
sahf
aad
xchg
ret
imul
adc
nop
data16
mov
or
sar
push
loop
outs
ja
retf
or
ret
rol
xchg
xor
jl
movs
cmp
cmp
loop
mov
pop
pusha
repz
mov
push
sub
jp
scas
ins
mov
inc
mov
pusha
cdq
mov
ret
mov
push
or
je
add
pop
shl
fidiv
in
fisttp
hlt
xchg
retf
test
bound
add
je
mov
xor
mov
adc
cmps
shl
jecxz
push
outs
loopne
push
imul
or
test
pushf
jp
add
rcr
repz
int
shr
xchg
sub
ss
loope
(bad)
int
dec
fst
cmp
into
xor
cli
xor
rcl
sub
das
aas
dec
ror
pop
mov
int3
cwde
add
std
pop
movs
mov
jg
stos
mov
adc
fadd
jle
rcl
cmps
add
out
jp
cli
jmp
and
pop
adc
lds
cmp
inc
cmps
xor
dec
stos
outs
pop
xor
retf
and
adc
xchg
mov
cli
aad
dec
dec
lds
pop
xor
add
mov
mov
arpl
mov
loop
shl
xchg
jge
in
shr
mov
adc
call
pushf
fcomp
test
shr
ss
faddp
ror
stos
loop
xlat
in
out
add
stos
(bad)
aam
in
rcr
add
shl
pop
mov
xchg
inc
ficomp
aaa
addr16
cli
fld
out
loope
or
xlat
push
push
push
std
xchg
movs
addr16
mov
fdiv
xor
dec
loopne
fild
inc
and
scas
jmp
stos
fldenv
(bad)
fld
mov
popf
jmp
mov
call
push
inc
paddsb
mov
xchg
xor
(bad)
loop
sbb
add
xchg
fst
lock
test
inc
adc
fwait
addr16
add
mov
jbe
pushf
(bad)
outs
mov
adc
push
or
mov
stos
or
inc
add
xchg
test
cwde
hlt
xor
xor
mov
adc
push
stos
jno
sti
mov
jb
in
pop
ret
outs
je
push
into
push
push
cld
gs
cmc
loope
jp
adc
mov
out
or
jbe
adc
fwait
retf
pop
inc
aas
popa
scas
movs
scas
cmp
push
mov
pop
xchg
cli
(bad)
xor
mov
mov
jle
loope
rol
and
bound
imul
cmc
call
pop
movs
je
ds
mov
cmp
call
mov
popf
out
or
imul
inc
nop
sbb
popa
pop
xchg
ds
push
stos
xchg
(bad)
mov
fwait
mov
fisttp
and
jge
xor
cmps
dec
ss
push
mov
test
add
loopne
cld
je
(bad)
(bad)
pop
cdq
fwait
push
mov
movs
and
inc
xor
cwde
stos
mov
stos
mov
mov
mov
loopne
push
out
cmp
xchg
in
pop
pop
lods
mov
mov
pop
jg
mov
loopne
push
dec
pop
adc
ins
enter
and
lea
test
shr
cmp
mov
push
push
nop
stos
push
xchg
fcmovnb
mov
adc
hlt
loope
enter
ja
stos
mov
jp
push
jp
xchg
cwde
ins
aam
pop
mov
repnz
jns
jb
dec
shr
xchg
xor
mov
and
(bad)
fst
xor
mov
std
cmps
sbb
xor
nop
sbb
mov
adc
retf
scas
shr
inc
fidivr
sub
ins
dec
mov
imul
or
gs
(bad)
ins
ins
scas
mov
test
push
dec
mov
rcl
popa
in
jp
mov
bound
mov
mov
sbb
and
call
outs
lock
jmp
and
sub
jl
ja
xlat
xchg
aas
push
cmp
mov
push
and
icebp
push
fbstp
xchg
or
fadd
sub
mov
test
lods
dec
mov
push
push
xchg
adc
(bad)
not
(bad)
out
call
nop
mov
pop
xchg
mov
retf
and
inc
ss
leave
pop
call
push
dec
push
mov
pop
pop
adc
xor
scas
fwait
mov
ss
stos
mov
cdq
dec
mov
in
xchg
ds
sbb
sahf
jecxz
mov
mov
dec
(bad)
in
dec
cmp
cmp
jmp
jmp
lea
loope
cmp
mov
repnz
inc
cdq
cmp
enter
jp
xchg
inc
out
les
push
ficomp
arpl
pop
mov
ins
jmp
pop
movs
mov
mov
sbb
and
rcl
and
enter
fcomp
cmp
xor
imul
mov
out
scas
push
repnz
mov
arpl
loope
mov
addr16
test
popa
sbb
hlt
call
icebp
pop
mov
ins
lds
adc
cmc
mov
ret
push
cmp
ja
sub
cmp
out
xlat
push
dec
mov
sbb
(bad)
scas
ror
mov
cdq
lods
in
jg
mov
cmp
retf
mov
push
mov
xlat
ds
int3
cld
mov
mov
jecxz
cmp
inc
pop
sbb
arpl
hlt
sbb
rol
dec
fbld
xor
jno
inc
ins
jae
out
or
xor
or
cli
sbb
mov
xchg
xor
jle
jmp
repz
addr16
ds
dec
and
xor
and
stc
inc
cli
call
push
es
mov
loop
repz
push
cmp
mov
cmc
ja
cmps
push
std
pushf
xor
test
shl
out
(bad)
pushf
pop
out
add
scas
and
push
out
sub
lea
push
push
push
data16
xchg
lahf
adc
mov
push
push
adc
xor
and
jmp
mov
pop
mov
pop
(bad)
js
mov
push
cli
sub
(bad)
pop
arpl
outs
aaa
(bad)
sub
add
cmp
pop
xor
(bad)
mov
(bad)
cmp
js
push
lds
mov
mov
ret
fdivr
mov
in
xchg
jb
adc
es
imul
aas
out
fdivr
arpl
jmp
popa
scas
addr16
retf
mov
mov
pop
or
lahf
pinsrw
fwait
pop
mov
cmps
xor
push
push
stc
xchg
jns
mov
dec
mov
sbb
sub
lock
mov
imul
jno
in
mov
and
jo
fscale
sub
pusha
std
fisub
adc
xchg
mov
cmc
shl
(bad)
sub
adc
jge
retf
and
ins
pop
jle
retf
ss
popa
inc
retf
stc
add
pusha
popf
outs
or
imul
call
lock
out
add
lea
push
retf
shl
std
adc
sbb
ficom
popa
cld
mov
ds
dec
aas
stos
fild
test
xor
out
xchg
xor
cmp
imul
mov
dec
popa
iret
dec
and
test
mov
ror
fimul
inc
leave
in
test
sbb
mov
add
ins
pushf
jnp
retf
dec
inc
pop
push
dec
inc
mov
xlat
mov
adc
xchg
pop
dec
xchg
mov
xor
jb
xor
es
dec
pop
stc
lahf
mov
fcom
dec
cdq
outs
repz
(bad)
movs
push
(bad)
aad
test
xchg
jnp
xor
cmps
les
push
mov
adc
cdq
je
mov
add
ins
sbb
jnp
(bad)
in
and
ret
and
xor
jmp
xor
mov
or
cdq
mov
push
adc
out
inc
rcr
ret
xor
or
or
dec
xchg
push
out
movs
es
int
inc
rcr
mov
push
retf
fdiv
mov
hlt
inc
ds
pop
ins
fmul
mov
xor
inc
and
clc
into
xor
jbe
push
mov
fmul
pop
mov
jge
outs
sub
sbb
int
adc
mov
ret
mov
(bad)
jae
cmp
adc
and
pusha
add
fdiv
mov
in
xchg
(bad)
popf
fwait
cmp
scas
into
dec
outs
sar
std
push
imul
add
mov
xchg
xchg
neg
dec
loopne
cmp
std
jmp
push
shl
test
cmp
rol
loop
dec
pop
call
or
sbb
fstp
cdq
cs
dec
pushf
or
mov
clc
iret
outs
xchg
std
data16
int
or
xor
fwait
push
xchg
sub
pop
jae
jmp
jmp
xchg
xchg
mov
(bad)
xchg
xchg
in
mov
jmp
and
jmp
push
out
lahf
dec
xchg
jbe
aad
shr
xchg
dec
mov
mov
and
mov
les
jno
lea
idiv
xchg
mov
mov
je
(bad)
stos
enter
fcmovbe
xchg
mov
pop
jge
popa
int3
fisub
les
stc
fwait
adc
pop
and
adc
mov
fs
(bad)
iret
mov
(bad)
mov
inc
bound
test
mov
mov
outs
cli
stc
ins
and
aad
stc
jl
scas
jl
loop
imul
das
push
xchg
mov
cmp
mov
fwait
lahf
aam
sub
mov
mov
jns
fcomip
inc
push
arpl
test
mov
or
cdq
movs
adc
rcr
ss
jl
in
pop
add
mov
xchg
jbe
and
cdq
pop
fdivr
pop
in
jne
cmps
std
inc
mov
lods
lock
xor
add
cld
sti
call
pop
out
mov
jle
ret
es
retf
mov
arpl
js
xchg
hlt
dec
cwde
push
push
inc
and
mov
pop
neg
add
(bad)
cmp
xchg
jno
xchg
scas
xlat
push
test
adc
sub
sbb
sbb
ret
je
lods
sbb
sbb
push
adc
clc
dec
pushf
mov
push
cmp
sahf
ret
mov
adc
mov
pusha
mov
dec
jnp
pop
inc
js
pop
aas
icebp
mov
adc
or
sbb
stc
sbb
adc
pop
test
stos
xchg
push
sbb
push
cmp
out
xchg
jns
jg
(bad)
pop
icebp
lods
ror
xchg
loopne
aad
movs
jno
test
push
pop
pop
dec
sbb
faddp
xor
mov
scas
stc
adc
add
adc
adc
mov
jle
pop
sub
or
or
xor
or
je
pusha
dec
sub
ror
xchg
rcr
rcr
push
jge
movs
outs
xor
mov
icebp
mov
daa
outs
es
xchg
adc
jo
push
pop
(bad)
jo
mov
sahf
arpl
jno
in
in
in
icebp
jmp
popf
mov
ds
jns
push
mov
dec
das
jbe
xor
icebp
jne
mov
push
fst
mov
or
out
xchg
jecxz
mov
call
test
xor
sbb
test
jle
stos
pop
aaa
pop
jge
mov
mov
nop
ret
push
and
data16
mov
aaa
pop
mov
cdq
nop
adc
xchg
mov
stc
xchg
leave
aam
sbb
popa
scas
loopne
dec
test
test
and
add
jl
pop
xor
bound
and
add
ja
(bad)
in
cmp
xor
inc
xor
mov
xor
sub
sbb
dec
sub
adc
xchg
inc
mov
adc
pop
cmp
fst
jne
push
fwait
les
mov
std
or
(bad)
jbe
popa
aad
pop
jge
dec
inc
sbb
jno
aas
mov
ficomp
sti
(bad)
cmp
loope
das
inc
cmp
xchg
push
lods
or
jb
mov
sbb
test
loopne
push
jns
mul
mov
jae
push
popf
mov
cld
repnz
test
adc
lods
inc
(bad)
sbb
push
lahf
mov
daa
into
xchg
jnp
jns
cmp
(bad)
dec
mov
aas
data16
cwde
dec
xor
push
leave
ins
pusha
xor
xchg
dec
das
cmp
imul
xchg
test
adc
mov
inc
pop
mov
push
xchg
cli
xor
jae
sub
test
cdq
or
jp
es
jns
fiadd
js
mov
jne
cld
xor
or
and
xchg
into
jp
mov
mov
popa
scas
push
daa
stos
pop
je
(bad)
fistp
test
push
call
adc
and
push
mov
shl
test
pop
jmp
mov
ror
sar
push
adc
xor
jne
int
enter
js
fmul
mov
rcr
pop
in
xor
xchg
add
dec
outs
pop
mov
push
mov
cmps
mov
or
(bad)
daa
movs
aas
shr
dec
jne
mov
inc
imul
inc
sbb
mov
icebp
pushf
unpckhps
mov
test
xchg
je
aaa
pushf
cld
test
xchg
call
ret
retf
push
int
fs
and
(bad)
jb
xlat
and
mov
and
or
popf
shl
out
fwait
out
stos
jb
leave
movs
inc
test
fisub
pop
retf
mov
adc
in
cmp
repz
icebp
mov
ja
push
inc
outs
imul
dec
cmps
icebp
lods
push
pop
call
test
(bad)
cli
xor
push
shrd
and
add
push
xchg
movd
out
pop
jo
pop
popf
or
inc
scas
add
mov
and
push
aas
jnp
add
out
add
fsub
outs
pop
outs
mov
push
rcr
jnp
mov
pop
test
dec
ja
iret
gs
scas
in
call
int
pop
jo
dec
(bad)
clc
ror
fwait
mov
push
or
aam
and
mov
call
add
daa
mov
xchg
xchg
adc
cld
cdq
rcl
xor
fistp
outs
(bad)
pop
movs
dec
jmp
inc
inc
cmp
movs
imul
mov
daa
jp
xchg
mov
mov
sbb
mov
pop
rcl
aaa
and
sti
les
add
mov
mov
sub
pop
mov
lods
inc
out
rcl
(bad)
push
dec
dec
ds
movs
loopne
cld
sub
repnz
arpl
cwde
fndisi(8087
or
popa
iret
repnz
xchg
xchg
pop
mov
loop
daa
add
retf
fs
pop
call
cmp
aam
mov
scas
sbb
sbb
mov
scas
inc
sbb
or
adc
push
jp
ins
js
popf
cmp
xchg
popa
pop
mov
rcl
iret
gs
imul
xchg
mov
mov
jnp
mov
push
sbb
inc
and
xchg
hlt
cmp
push
ret
call
or
test
add
jae
push
ficomp
mov
pop
jbe
ds
mov
jae
add
stos
mov
cmp
mov
je
pop
bound
xchg
jecxz
or
inc
and
mul
into
sbb
cmp
ss
xor
es
(bad)
(bad)
mov
enter
iret
out
out
adc
mov
mov
int
jbe
xor
(bad)
data16
mov
sbb
test
and
cs
cmp
loop
inc
mov
ret
mov
(bad)
out
fistp
push
sbb
push
js
sbb
cs
push
cdq
pop
cmp
loopne
and
xchg
mov
scas
or
scas
xchg
fnstenv
push
cmp
sbb
inc
mov
dec
adc
mov
xchg
xchg
inc
sbb
mov
je
stos
mov
dec
lahf
push
mov
retf
push
aas
mov
sub
ror
ins
adc
sti
movs
mov
enter
in
test
cmps
jns
leave
xor
mov
repz
pushf
dec
and
inc
inc
lods
dec
mov
lods
jge
cmp
inc
sub
loopne
test
cmps
(bad)
and
setno
mov
aam
ins
lds
push
fst
out
hlt
lods
mov
sub
add
addr16
cdq
mov
xchg
aaa
pop
(bad)
outs
cmp
fwait
xchg
mov
dec
stc
sub
popa
jmp
repnz
push
mov
fwait
mov
out
push
pop
loopne
imul
fsubr
movs
neg
mov
shr
test
clc
push
dec
push
dec
movs
xchg
xchg
mov
and
sub
loope
adc
jg
dec
vcmpss
iret
call
aaa
mov
adc
dec
fadd
xchg
mov
adc
mov
jo
std
sbb
add
lods
gs
xchg
and
mov
inc
pushf
mov
stos
stos
aam
xor
iret
dec
popf
cmps
xchg
adc
movs
xchg
xchg
out
imul
fmul
sub
(bad)
loop
push
ror
iret
outs
out
push
pop
mov
push
iret
addr16
adc
fwait
sub
cmc
jp
outs
push
cwde
sbb
add
pop
sbb
dec
jb
xor
sub
inc
sbb
sub
pavgb
in
out
gs
ins
jge
mov
ret
call
push
inc
in
js
mov
and
mov
xor
sbb
lods
js
in
loop
mov
inc
sub
inc
je
mov
fild
mov
fcomp
xchg
adc
inc
xchg
add
dec
imul
add
mov
and
mov
push
push
ins
xchg
(bad)
or
nop
mov
aam
cmp
mov
loope
pop
das
cmps
push
inc
add
mov
push
inc
inc
call
dec
imul
xor
pop
dec
fucomp
sbb
dec
shl
mov
out
arpl
es
out
or
lea
movs
push
das
fcom
push
ja
popa
js
mov
out
cmps
push
out
pop
out
inc
or
sub
sub
jo
pop
ins
sahf
ret
(bad)
push
or
imul
cmps
pop
sub
mov
mov
movs
xchg
sub
dec
or
inc
cmp
add
push
dec
retf
pop
hlt
xor
call
inc
ds
shr
movhlps
imul
test
xchg
add
mov
jns
shl
cmp
cmps
cld
mov
out
jp
les
icebp
sbb
adc
pusha
test
test
aad
out
je
and
mov
stos
add
fisttp
sbb
mov
dec
retf
mov
(bad)
in
fs
mov
je
jmp
loop
sbb
inc
loope
sahf
sbb
cmp
inc
repnz
jp
add
mov
xchg
rcr
cwde
lea
or
aad
cmp
bound
xchg
retf
retf
int
mov
push
lea
adc
lds
imul
cli
jnp
xchg
stos
and
adc
repz
xchg
shl
jmp
rol
scas
inc
retf
mov
cmp
dec
pop
icebp
in
in
xchg
dec
pop
test
adc
mov
out
dec
mov
ficom
sar
movs
cmpps
pop
inc
cld
test
sbb
test
ins
loop
hlt
add
sub
pop
mov
jno
mov
mov
pop
mov
leave
ds
or
and
das
shl
stos
ins
push
inc
push
mov
sub
adc
sub
xlat
push
sbb
into
adc
ins
cmps
icebp
adc
mov
repnz
mov
add
(bad)
cdq
fidivr
ins
jmp
mov
dec
mov
pop
lods
pop
ja
popa
into
and
jns
mov
fs
sti
jp
mul
and
inc
dec
push
jg
pusha
es
sbb
out
fisub
shr
jl
xor
pop
dec
out
adc
ins
jge
cdq
xor
cmp
xor
test
cmp
int3
dec
jae
inc
fcom
jb
pop
mov
push
pop
std
xchg
add
daa
cmp
lods
inc
test
xor
shl
cmp
push
add
cmp
jg
push
jb
lahf
pusha
enter
dec
pop
test
icebp
iret
(bad)
repz
cmp
(bad)
(bad)
sub
lds
scas
sub
push
lds
out
in
aam
in
daa
rol
or
mov
outs
fst
pop
mov
iret
dec
nop
add
pop
push
and
dec
cdq
retf
call
or
jecxz
mov
push
jmp
data16
cmp
loope
test
dec
pop
leave
fst
jle
in
stos
push
fdiv
in
cmp
test
test
inc
popa
movs
mov
xor
in
xchg
ja
jg
repnz
sub
add
cmp
adc
jne
(bad)
pop
and
fmul
xchg
aam
push
sbb
out
xlat
fwait
jne
mov
scas
dec
fisttp
xor
daa
into
mov
into
scas
pop
xchg
lock
jae
add
mov
fbstp
cs
mov
cmps
loopne
je
mov
mov
data16
lahf
push
xlat
sub
bound
retf
push
jae
xor
jmp
sti
pop
mov
xor
jb
stos
fbstp
xlat
enter
add
dec
sub
sbb
mov
lods
jo
cmp
in
lea
aas
add
and
fnstenv
fmul
inc
and
sub
(bad)
sti
ds
out
std
add
pop
fst
das
inc
and
test
stos
or
sbb
ret
lods
sbb
sbb
push
ret
cmp
xor
and
call
ret
retf
push
inc
mov
dec
cli
mov
xor
inc
ds
jmp
pushf
scas
cld
and
(bad)
mov
jl
ror
add
mov
sahf
popf
jmp
arpl
call
sbb
inc
retf
cmp
mov
mov
fdiv
jbe
int
in
out
out
mov
cmp
out
je
mov
mov
mov
rcr
push
jl
int
sti
gs
(bad)
jns
adc
repz
outs
std
xchg
push
adc
loop
sub
mov
push
retf
mov
dec
aad
inc
adc
inc
mov
sub
sbb
pop
fiadd
(bad)
mov
mov
stc
(bad)
cmp
stos
sar
popa
fist
adc
stos
mov
sub
push
js
xchg
xor
shl
rep
sub
sbb
jne
sbb
xchg
mov
fdiv
aam
mov
mov
das
dec
dec
(bad)
jae
(bad)
out
popf
inc
sbb
sub
cmc
xor
dec
pop
jle
in
movs
aas
loope
or
cld
xchg
xor
dec
push
sbb
or
push
(bad)
fist
adc
add
and
bound
mov
out
add
in
sbb
jnp
call
aas
xor
in
dec
xor
xchg
fistp
xchg
adc
ficomp
pop
pop
fmul
mov
rep
push
cmp
cli
repz
std
cmp
lods
imul
fiadd
add
sbb
push
imul
mov
push
xchg
cmp
lds
jmp
mov
mov
sti
jge
in
and
lock
lds
sti
aam
sbb
mov
pop
inc
xchg
popa
sub
pop
jne
mov
ficom
mov
cmps
adc
dec
jle
dec
mov
je
out
adc
into
movs
icebp
xlat
js
xor
arpl
xor
retf
or
das
jnp
sub
adc
mov
fdiv
sbb
in
arpl
and
xchg
leave
scas
add
jns
pusha
gs
rcl
rcl
cli
mov
push
lods
ins
cmps
mov
add
cli
es
ins
xor
inc
jp
xor
fisubr
inc
cmps
imul
leave
jno
jnp
sub
add
xor
adc
dec
sub
repz
cmps
test
sub
nop
adc
or
int
movs
ret
ins
into
pop
jmp
push
pop
sbb
out
or
xor
test
test
ror
sahf
std
pop
out
sub
cmps
pop
fdiv
adc
jmp
repz
test
pop
test
jbe
lods
ins
push
outs
inc
push
repnz
in
xchg
mov
and
mov
stc
mov
jl
cmc
dec
or
popa
nop
pop
(bad)
stos
fwait
repz
or
mov
and
and
mov
add
int3
cmps
test
icebp
fbld
retf
xor
shl
xchg
cs
mov
push
mov
mov
push
data16
call
retf
js
jo
and
lods
es
(bad)
jnp
lods
lods
popa
cmps
stc
xor
dec
jnp
cmp
in
lea
clc
jmp
sub
cdq
inc
dec
fwait
jmp
pop
or
repz
cmp
inc
cdq
jns
hlt
inc
dec
inc
adc
rol
hlt
pop
mov
pop
jns
dec
adc
out
cmp
mov
adc
sbb
dec
mov
and
mov
outs
nop
repz
or
xor
data16
sub
and
mov
xor
xchg
cld
inc
xchg
dec
jnp
cli
xor
jl
ret
pusha
(bad)
mov
test
mov
adc
cmp
cdq
jb
sub
mov
test
call
dec
dec
adc
pop
push
lods
xor
push
dec
xchg
std
dec
add
and
test
push
jae
and
(bad)
imul
jl
push
repz
lds
cwde
leave
popf
xchg
mov
mov
lods
dec
sub
xor
test
gs
xchg
or
adc
xchg
lahf
or
sub
or
xor
pop
gs
imul
cmp
sti
sar
ss
lods
and
cmp
cmp
repnz
pushf
loop
dec
inc
popa
dec
lea
xor
and
popf
pop
xor
das
out
outs
fs
int
pop
pop
and
loope
add
mov
pop
push
push
sub
aad
into
clc
movs
mov
icebp
push
push
sbb
jmp
sahf
jle
jmp
xlat
dec
or
dec
push
jg
leave
xchg
cdq
cmp
push
imul
jge
ret
sub
dec
mov
and
ror
mov
mov
jecxz
adc
cld
jne
cmp
sub
lods
call
push
pop
loopne
sahf
mov
or
xor
push
outs
(bad)
in
dec
xor
in
mov
mov
cmp
(bad)
and
inc
xor
xchg
jp
fbstp
lods
adc
mov
icebp
imul
cmp
int3
dec
stos
ja
pop
(bad)
mov
repz
cmp
or
and
fpatan
shl
je
mov
jecxz
mov
sub
and
jle
jne
into
mov
cmp
in
sub
cmp
lahf
sti
rol
out
and
(bad)
mov
test
push
dec
cmp
lahf
retf
leave
push
leave
call
(bad)
jl
dec
or
aas
fwait
mov
gs
mov
int
shl
mov
nop
addr16
push
inc
adc
data16
in
jns
in
shl
cmc
icebp
pop
aam
pop
xchg
bound
aas
jnp
imul
mov
add
mov
rcl
outs
int3
pop
stc
ret
clc
imul
popa
xchg
pop
out
fs
mov
mov
ds
mov
push
rol
stos
adc
imul
loop
pushf
aas
push
call
sub
por
mov
sub
xchg
in
mov
xchg
pop
mov
pop
ins
rcl
cmp
stc
rol
adc
mov
pop
xchg
mov
pop
outs
pop
fs
neg
ins
sbb
sub
dec
enter
jmp
gs
gs
adc
scas
add
scas
cmp
cmps
popf
out
jmp
adc
addr16
fidiv
inc
cld
and
sub
jmp
int
fild
and
pop
stc
ret
mov
mov
mov
xor
jg
mov
mov
or
sbb
ds
dec
ror
inc
push
xchg
test
sbb
sub
sahf
mov
(bad)
pop
dec
(bad)
dec
pop
popf
lock
enter
mov
ss
adc
fnstenv
dec
inc
xchg
mov
adc
add
dec
adc
imul
nop
xlat
adc
not
jns
(bad)
xor
leave
call
cli
cmp
sbb
sub
cli
enter
xchg
inc
push
xor
hlt
cmps
mov
fild
out
mov
pop
ins
xchg
cdq
pop
retf
div
movs
call
out
jnp
mov
outs
push
mov
jae
mov
test
sbb
js
(bad)
push
ret
xchg
push
jp
(bad)
xchg
daa
(bad)
icebp
or
lds
in
cmp
aam
jg
std
out
xchg
movs
loopne
xchg
(bad)
mov
cmps
int3
jo
bound
cmp
push
jmp
int3
sbb
fs
inc
std
out
cmp
inc
movs
lds
push
push
and
mov
cld
adc
loopne
enter
push
out
or
mov
push
fidivr
cmp
out
and
in
mov
pop
sahf
dec
cmps
push
(bad)
adc
mov
push
dec
sub
(bad)
ficomp
jne
add
sar
and
jmp
add
xchg
cmp
cmps
jmp
adc
sub
cmps
jmp
xchg
in
and
jnp
pusha
mov
arpl
fstp
cmp
add
cmps
shr
hlt
dec
or
fbstp
mov
retf
out
enter
test
call
stos
iret
fimul
push
sub
in
jae
in
sbb
mov
clc
test
inc
add
ror
dec
and
jnp
mov
push
jo
int
adc
jns
adc
fwait
sub
sbb
mov
test
hlt
jmp
out
movs
call
push
stos
add
rol
fs
lock
and
cmp
pop
movs
jle
inc
pop
test
push
test
xor
ret
loopne
sub
sbb
in
and
push
and
out
lods
mov
and
cmps
cmc
xchg
push
test
mov
pop
lahf
adc
xchg
call
jb
xor
mov
mov
mov
jne
hlt
repz
ror
mov
mov
test
ins
adc
dec
adc
cld
sbb
sub
out
jmp
call
test
push
cmp
in
es
cmp
lock
add
test
xchg
test
add
push
outs
or
adc
xchg
(bad)
in
pop
ds
sbb
fisubr
add
data16
mov
jne
inc
stos
(bad)
mov
rcr
leave
lock
test
mov
enter
gs
lahf
ret
inc
push
rcl
mov
ret
push
and
ja
mov
pushf
(bad)
setg
movs
add
cmp
fld
jg
lahf
aam
cld
test
pop
popf
lods
mov
push
inc
push
clc
neg
push
sbb
jmp
scas
imul
mov
in
cld
mov
mov
daa
lahf
repnz
mov
movs
mov
inc
push
add
push
add
test
adc
push
inc
fidiv
sub
mov
loop
mov
clc
ss
shr
(bad)
cs
lods
out
xchg
cdq
push
lahf
add
in
xor
inc
mov
aam
jg
pop
mov
pop
add
fiadd
mov
jmp
mov
imul
xlat
arpl
test
sub
call
jnp
jmp
test
push
pop
movs
jp
push
and
inc
pop
leave
mov
mov
jge
push
jb
pop
adc
out
add
or
int3
das
mov
nop
cmps
hlt
ja
aad
jge
xlat
movs
hlt
ror
test
mov
imul
dec
pmaxub
call
pop
adc
gs
push
enter
jbe
mov
mov
mov
lods
out
or
mov
mulps
dec
inc
loopne
jo
mov
test
addr16
add
scas
pop
ds
and
add
and
movs
dec
and
icebp
push
push
push
scas
xor
frstor
or
cmp
lods
scas
out
sub
pop
cmp
push
shl
push
daa
call
mov
jp
sub
fpatan
mov
in
out
push
push
pop
push
xor
dec
sahf
dec
push
es
xchg
xchg
mov
adc
jne
mov
popa
cmp
inc
jp
in
jge
sbb
cmp
xchg
stc
pop
aad
pop
bound
mov
push
dec
adc
bound
jno
jle
scas
jle
repz
cmps
xchg
sub
ret
shl
mov
jae
fiadd
fistp
pop
into
xor
into
jmp
mov
fisub
fsub
adc
inc
sbb
into
(bad)
push
ret
dec
or
in
jb
loopne
push
loopne
lods
and
inc
std
sbb
mov
push
push
push
mov
ja
test
repz
jl
fist
push
xchg
push
in
arpl
xchg
jmp
pop
inc
cmp
xor
xor
jb
push
inc
or
stc
dec
lods
clc
mov
xchg
dec
fidivr
enter
inc
cmps
adc
add
add
mov
dec
scas
jns
scas
scas
cld
xchg
mov
add
pusha
mov
dec
sbb
(bad)
pop
mov
mov
sbb
mov
mov
shr
and
test
xchg
dec
inc
add
cmp
xor
in
por
xor
es
push
out
mul
pop
cmp
push
xor
sub
lea
or
rcl
and
mov
ret
(bad)
lods
ss
dec
xor
cmps
xor
test
or
jo
dec
rcr
push
mul
xor
enter
sbb
cmc
mov
fild
icebp
neg
sbb
popa
cmp
push
pop
and
jge
add
inc
call
mov
loopne
adc
and
pop
adc
iret
adc
in
rol
aad
xchg
mov
or
popf
icebp
dec
jg
inc
fisub
lock
sub
retf
stos
jbe
out
add
repz
lods
xchg
xchg
jle
call
lahf
lahf
ja
ja
fld
or
adc
repz
retf
push
push
lods
mov
aam
adc
dec
sub
into
sbb
mov
cwde
int
std
pop
adc
clc
in
sub
pop
adc
mov
(bad)
retf
xchg
mov
sub
(bad)
ucomiss
lods
sbb
add
movs
enter
lods
arpl
daa
into
xchg
mov
xchg
imul
mov
dec
add
cwde
fisubr
(bad)
icebp
call
cs
ficom
cs
push
xchg
in
jmp
cdq
loopne
enter
push
dec
hlt
push
jnp
fisttp
sbb
js
push
not
jecxz
ja
leave
jnp
or
dec
jge
fdivr
(bad)
enter
and
jge
test
add
sub
mov
pop
ret
xchg
sub
xchg
mov
mov
std
outs
mov
lahf
xchg
mov
mov
dec
mov
pop
(bad)
xchg
cmp
sbb
sar
lahf
pusha
or
ins
stc
(bad)
sahf
enter
xor
mov
clc
mov
dec
add
cmp
or
ret
and
cmp
push
cdq
jp
test
jno
inc
and
jge
pop
dec
lock
sub
and
mov
test
pop
or
dec
pop
lahf
cmc
movs
imul
scas
sub
push
test
adc
fsub
cs
adc
movs
ja
mul
daa
fst
and
scas
pmaxub
mov
and
add
inc
and
fwait
xchg
aas
in
xchg
pusha
xchg
shl
arpl
jmp
sub
fdivr
inc
adc
adc
out
push
mov
fadd
mov
in
sbb
adc
call
xchg
movs
mov
sub
jecxz
inc
mov
mov
dec
nop
pop
mov
jge
sub
xchg
lds
and
and
sub
fidivr
mov
cmp
js
fsub
cmp
xor
sti
cs
fist
mov
cmp
jmp
or
adc
enter
lods
js
repz
jb
sub
data16
jmp
push
and
dec
ret
dec
jbe
into
mov
inc
adc
out
and
lods
adc
js
cmp
ds
mov
cld
lds
sub
fs
mov
mov
hlt
in
enter
leave
cmp
push
sbb
pause
cmp
fmul
dec
movs
dec
pop
xchg
aad
movs
dec
test
or
test
fdiv
jbe
xchg
jg
cwde
cmp
inc
jae
loop
jmp
jb
aas
mov
jle
sub
imul
test
mov
dec
loop
imul
es
xor
retf
mov
cmps
jmp
xor
cmp
std
sbb
mov
loope
mov
inc
jae
retf
inc
add
test
xchg
mov
mov
imul
sub
ins
(bad)
mov
or
push
aam
mov
arpl
aaa
jo
adc
inc
ucomiss
out
adc
xchg
aas
inc
xchg
imul
cmp
jmp
mov
and
inc
mov
stc
inc
and
out
adc
push
lds
sub
add
in
sbb
dec
in
inc
call
push
adc
and
(bad)
(bad)
sub
lods
add
int3
call
adc
xchg
test
inc
(bad)
jb
or
mov
pop
imul
ror
dec
xor
jl
leave
cs
cdq
sub
add
sub
jae
popf
(bad)
mov
jmp
and
jb
gs
jl
popf
out
dec
and
adc
jge
xchg
inc
test
dec
mov
inc
jle
ret
test
mov
loopne
pop
lock
cmp
movs
push
(bad)
shl
push
sbb
cmp
lock
cmp
mov
sbb
add
(bad)
arpl
mov
xor
push
ss
mov
loop
xchg
dec
pushf
cmc
add
sar
jl
aad
pop
mov
(bad)
loop
cmps
jb
scas
(bad)
add
gs
xor
mov
push
sub
jmp
movs
not
jle
js
dec
push
std
sbb
cdq
in
pop
sbb
mov
pmaxub
xchg
std
push
fmul
call
add
scas
jb
xor
mov
(bad)
outs
add
xchg
push
jns
inc
sti
sub
sbb
mov
ret
ss
dec
xchg
mov
push
lea
aaa
cmps
pop
xchg
sub
test
ss
loope
push
test
test
jne
stos
sbb
dec
xchg
shl
mov
cmc
add
lods
pop
xchg
lock
ins
rsm
ins
outs
add
jae
mov
cdq
xchg
and
jmp
xor
daa
lods
std
add
pop
dec
push
pop
mov
jb
int
mov
push
dec
jno
ss
outs
(bad)
jp
mov
push
jae
ret
addr16
mov
movs
sbb
pop
mov
iret
push
cmps
ins
in
aad
mov
push
dec
(bad)
ror
push
popf
stos
stos
mov
repnz
xchg
sub
add
(bad)
dec
out
aaa
adc
daa
mov
push
xchg
(bad)
jo
inc
mov
pushf
movs
leave
movs
cdq
and
ret
or
xchg
mov
mov
fwait
loope
sub
std
sahf
xchg
push
pop
ins
cmp
mov
lahf
cmp
sbb
imul
fcmovnb
movs
and
cdq
lds
lahf
jle
sbb
pop
push
in
mov
out
and
or
jnp
jae
repnz
xchg
in
(bad)
jnp
cli
push
call
repz
stc
push
fucomip
aas
mov
inc
cmp
pop
cmps
stc
push
mov
sub
das
leave
push
test
dec
mov
arpl
mov
fnstsw
shl
adc
cmp
imul
dec
mov
lods
adc
pop
add
pop
mov
cs
jecxz
ror
mov
nop
jp
mov
(bad)
cld
jg
fdivr
jne
mov
sub
repz
retf
and
jns
jg
mov
es
jo
ror
aas
sub
pop
mov
inc
jne
cmp
call
push
pop
ins
dec
push
cmp
cs
ror
push
fld
add
adc
and
cmp
lods
test
add
sbb
cmp
mov
mov
inc
iret
movs
pusha
pusha
and
call
test
cmp
fmul
out
out
rcr
mov
xchg
call
inc
pushf
lods
pop
cli
call
in
xor
clc
mov
popa
int
xchg
imul
stos
and
xor
push
call
sbb
jmp
add
push
or
scas
jmp
inc
cmp
test
xor
xchg
cvttps2pi
cld
imul
pusha
jne
cmp
rcr
test
idiv
std
test
jp
or
in
loope
fwait
ror
push
jmp
inc
mov
and
xor
add
mov
mov
xor
nop
(bad)
mov
jmp
pop
fs
jp
ret
dec
inc
test
into
mov
retf
push
xchg
(bad)
int3
addr16
cmp
add
imul
xchg
sar
push
call
cmp
xor
cmps
pop
sub
pushf
cld
iret
mov
(bad)
xchg
mov
pop
fcomip
es
mov
pop
cli
not
shl
leave
lahf
xchg
dec
inc
(bad)
and
dec
outs
cmps
inc
and
pop
mov
fadd
jb
lahf
fidivr
sbb
mov
sub
jns
and
inc
stos
sub
cmp
mov
push
fs
xchg
xor
fmul
imul
cmp
fadd
pop
inc
into
jecxz
repz
jmp
inc
daa
pop
ja
sub
(bad)
push
cdq
or
dec
mov
and
pop
jle
dec
nop
rcr
adc
iret
or
sub
pop
in
and
test
sub
sub
jae
jno
cdq
popa
aaa
cmp
pop
add
xor
lds
xchg
ins
sbb
fld
jl
outs
xchg
dec
shl
or
jle
cwde
mov
mov
xor
stos
fldcw
fwait
nop
out
fucom
push
test
sbb
jmp
les
pop
inc
dec
mov
mov
ret
sub
in
inc
push
adc
xchg
pop
jb
(bad)
(bad)
xchg
push
dec
adc
cmps
je
sti
and
retf
stc
int3
lea
in
jb
leave
jle
mov
ins
es
cmp
pop
(bad)
mov
and
stos
(bad)
xchg
push
sub
push
arpl
cmps
outs
push
cmp
ins
and
idiv
cmp
popa
push
hlt
jb
int3
push
lea
xor
xchg
pop
adc
adc
mov
outs
xlat
mov
out
es
mov
add
add
and
stos
mov
out
test
lea
push
xor
cmps
bound
ret
aad
shl
adc
mov
arpl
and
jecxz
sbb
add
(bad)
xchg
pop
or
xchg
xor
xor
dec
addr16
dec
loop
or
stos
push
test
mov
int3
and
cmp
push
hlt
std
dec
adc
das
pop
outs
outs
push
(bad)
mov
mov
cmp
push
mov
retf
iret
icebp
pop
fidiv
add
push
(bad)
sbb
xchg
loop
cmp
(bad)
xchg
sbb
fisubr
push
ror
mov
fcomp
lods
in
cmp
pop
bound
and
xor
pushf
test
mov
jle
lods
rol
jecxz
aad
pop
call
mov
fstp
mov
test
fstp
push
sbb
xor
imul
sub
stos
adc
xchg
push
nop
loope
(bad)
and
ror
xchg
push
mov
loope
lahf
ins
cmp
inc
aad
pushf
leave
mov
mov
cmp
mov
or
jbe
int
test
mov
call
bound
dec
pop
rcl
sub
fs
loope
jle
and
dec
imul
das
shl
xor
loope
test
outs
dec
lods
(bad)
cmp
sbb
aam
inc
lods
repnz
and
dec
push
mov
out
push
sub
push
les
pop
xlat
mov
in
icebp
ja
int3
mov
adc
push
outs
ret
pop
dec
push
sub
out
sbb
(bad)
push
xor
(bad)
ins
push
push
cld
push
push
xor
or
gs
push
jp
ret
jb
loopne
fiadd
in
hlt
imul
jl
push
inc
bnd
jmp
mov
popa
jmp
hlt
sbb
in
iret
jge
fstp
pop
loop
inc
inc
or
(bad)
out
retf
mov
in
xchg
xor
aaa
jge
in
mov
mov
aam
or
xchg
or
rcr
xchg
mov
push
mov
sub
arpl
lock
mov
push
adc
jnp
cmp
mov
mov
jg
data16
fidiv
cmc
in
pop
rcl
xchg
cwde
data16
or
adc
cmp
ret
push
adc
sbb
mov
mov
mov
sbb
add
retf
shl
int3
ss
push
es
dec
sub
jae
and
mov
pop
jns
hlt
jns
mov
pusha
cs
scas
jb
xor
scas
(bad)
xchg
cmp
jnp
push
test
sbb
dec
pop
bound
push
xor
add
and
sub
xchg
cli
inc
iret
test
xchg
add
push
rcr
test
out
stos
xchg
push
repz
jecxz
loope
cmp
popf
inc
mov
inc
ins
push
ret
push
adc
arpl
je
push
xor
dec
iret
adc
lods
shr
loop
out
imul
adc
and
out
xor
jecxz
cmp
add
das
test
xlat
cld
scas
(bad)
or
pop
les
mov
arpl
out
jmp
test
cwde
(bad)
mul
not
sbb
add
adc
inc
or
xor
lods
gs
xchg
ins
js
jp
xor
ret
(bad)
or
dec
push
int3
jnp
arpl
das
movs
and
xor
jge
into
cmp
cdq
into
icebp
pop
dec
jbe
daa
movs
sub
adc
lods
cdq
add
inc
out
imul
add
lods
mov
xchg
xchg
lods
out
xor
mov
hlt
sbb
adc
mov
inc
or
movs
loope
sar
mov
xlat
out
mov
shr
jmp
div
sub
mov
mov
or
push
mov
mov
sbb
scas
push
sub
inc
or
cwde
std
popf
cdq
push
inc
dec
rcr
scas
call
sbb
(bad)
jle
aad
dec
daa
and
bound
ret
push
in
mov
ss
xor
les
in
jmp
add
adc
test
and
mov
inc
sar
pop
paddsb
inc
jbe
push
and
mov
cld
ins
and
scas
mov
nop
bound
cmps
jmp
addr16
push
daa
inc
daa
retf
mov
push
cmp
cmc
and
push
cmp
loope
hlt
mov
cmc
clc
mov
fbld
fcmovbe
sbb
inc
xchg
(bad)
dec
movs
cmp
xchg
xchg
add
icebp
sub
mov
popf
pusha
loopne
(bad)
aam
bnd
(bad)
stos
pop
mov
aaa
loope
shl
mov
mov
mov
mov
jmp
repnz
pop
and
mov
outs
imul
ret
out
adc
retf
in
adc
jns
aam
lock
in
pop
bound
pop
fistp
sar
scas
cdq
aam
pop
pop
adc
jl
xor
out
push
xchg
enter
test
cmp
rol
xchg
inc
(bad)
ret
arpl
cmps
ss
(bad)
mov
dec
retf
addr16
mov
xor
faddp
into
mov
push
jmp
cld
aad
rdtsc
mov
xor
xor
lahf
mov
dec
pop
loope
xchg
dec
shl
mov
adc
test
bound
jo
fbstp
popa
(bad)
mov
repnz
mov
mov
inc
retf
pop
icebp
jns
outs
mov
(bad)
call
jnp
mov
or
pop
push
mov
inc
dec
mov
cmp
mov
arpl
sub
dec
mov
icebp
or
and
stc
(bad)
and
test
lock
(bad)
stc
cmps
cli
iret
call
xchg
or
nop
imul
mov
mov
(bad)
fwait
hlt
out
add
les
movs
mov
xor
sbb
ret
sub
xlat
lock
daa
repnz
inc
mov
call
adc
or
dec
mov
xchg
fwait
test
adc
pushf
repnz
xchg
out
aaa
add
mov
shl
lahf
shl
jecxz
jmp
test
lods
data16
jge
icebp
mov
sahf
cmp
sbb
int
lods
sub
push
mov
clc
mov
push
retf
iret
mov
sbb
retf
test
or
sub
jnp
jl
cmp
mov
adc
(bad)
sub
jne
nop
movs
outs
hlt
in
das
push
aaa
xor
push
retf
das
fcom
hlt
jecxz
adc
cmp
xchg
xchg
arpl
jmp
out
inc
in
and
dec
cwde
adc
sub
mov
pop
outs
gs
add
pop
ficom
out
adc
xchg
out
pushf
xlat
xchg
push
lea
xchg
adc
jmp
fcomp
push
loop
rol
jnp
sub
jne
outs
jl
movs
cs
enter
mov
or
gs
out
jo
jp
lods
leave
idiv
xor
out
int
xchg
popf
mov
sahf
xchg
repz
jle
or
dec
adc
xor
pushf
shr
xor
jp
sar
ja
mov
sbb
dec
push
test
shl
push
js
es
inc
inc
mov
jnp
pop
lahf
mov
stos
mov
push
and
or
loope
ins
ins
int
mov
test
inc
xchg
out
inc
push
xchg
ss
mov
fcmovnu
stc
ret
pop
sbb
mov
cmp
xor
js
push
pop
test
sbb
cld
adc
ss
sbb
cmp
call
call
call
bound
(bad)
in
lahf
inc
inc
gs
add
lods
hlt
out
movs
lea
inc
push
retf
sbb
cmp
or
xor
mov
test
mov
or
jo
in
(bad)
lock
leave
sub
add
inc
add
test
mov
jmp
xchg
mov
aas
xor
in
imul
test
ins
gs
jb
xor
(bad)
mov
rcr
pop
and
jmp
xor
loopne
pop
call
jl
dec
rcl
xchg
cs
popa
jb
xchg
xor
xlat
movs
ds
jns
ins
mov
mov
loop
mov
cmps
dec
inc
jecxz
out
cmps
pop
lods
in
mov
xor
loop
lock
adc
dec
cs
and
or
mov
test
add
cmp
xchg
adc
cmp
frstor
xchg
dec
sbb
dec
mov
adc
push
sub
sar
xchg
fs
inc
cli
arpl
or
pusha
call
sbb
cld
sub
icebp
mov
clc
push
pusha
es
cmp
fst
pop
repz
movs
pusha
push
data16
and
dec
dec
fld
daa
push
mov
(bad)
popf
outs
lock
and
mov
(bad)
cli
sub
in
xchg
ins
shl
cmp
xchg
and
cmc
dec
retf
jmp
hlt
mov
jbe
fwait
jl
cdq
push
mov
sbb
cmps
shl
aas
xor
pop
adc
or
(bad)
xlat
clc
aaa
shl
mov
not
dec
ins
cmp
mov
adc
sti
dec
stc
sub
out
lods
mov
add
xchg
jno
jae
or
je
jbe
shr
jecxz
std
sbb
in
std
add
pop
imul
jmp
inc
dec
retf
fisttp
mov
js
mov
jns
mov
loop
pop
sti
sti
cmp
xor
mov
pop
xchg
push
adc
cmp
call
cmp
(bad)
retf
(bad)
std
popf
das
pop
jecxz
(bad)
(bad)
cmc
(bad)
out
xor
sub
jmp
fs
cmps
ficom
xor
shr
call
cmp
arpl
sbb
cmp
into
cmp
retf
xor
daa
test
call
ficomp
jecxz
sub
jns
cmp
(bad)
repnz
cmps
jns
loopne
in
cli
adc
dec
dec
xlat
or
inc
sahf
cmps
out
mov
neg
add
stos
xchg
imul
imul
pop
lea
jmp
cld
fs
mov
adc
sub
stc
mov
leave
aam
call
call
mov
xchg
fsub
mov
sub
jp
iretw
ja
inc
dec
or
and
jbe
addr16
jmp
push
popw
daa
cdq
retf
retf
dec
sti
sub
or
lods
push
and
cwde
adc
xor
mov
sub
mov
jnp
fs
mov
int3
fadd
pop
dec
mov
arpl
sub
mov
sbb
movs
dec
and
or
jo
mov
mov
mov
std
mov
cdq
mov
push
add
adc
into
aam
and
cdq
pop
adc
pop
cmc
push
daa
repnz
xor
jp
or
pop
repz
hlt
inc
test
inc
mov
ja
addr16
stos
xchg
dec
add
xlat
add
inc
and
adc
(bad)
cmc
in
add
jno
dec
add
pop
or
jg
push
jne
lock
dec
add
xor
call
daa
adc
std
and
adc
arpl
mov
push
es
mov
cld
sub
lahf
rol
in
sub
cs
outs
cmps
iret
fisubr
mov
movups
jecxz
add
jge
packuswb
push
pop
aam
in
mov
jns
cmp
mov
fisubr
loopne
loope
mov
mov
cs
out
mov
pop
add
jecxz
sar
push
adc
jl
cmp
push
pop
addr16
adc
(bad)
pop
adc
je
mov
xor
jge
sub
ror
or
mov
fwait
mov
push
jo
push
mov
js
(bad)
mov
repnz
fxch
pop
cmp
adc
adc
inc
sbb
cmp
(bad)
jo
nop
lods
sar
mov
pop
es
jns
dec
inc
repnz
clc
jle
not
arpl
bound
stos
or
jnp
clc
and
jg
jmp
dec
inc
mov
mov
shr
outs
xchg
lock
jo
ss
jl
sbb
xor
pop
dec
xchg
pop
xor
xchg
test
loop
gs
ja
mov
out
cmc
lds
sahf
retf
jg
jmp
(bad)
outs
or
xchg
stos
call
cmps
movs
add
push
sub
in
jmp
pop
fdivr
not
push
add
dec
xchg
sbb
int
fiadd
sbb
pop
mov
stos
cli
mov
or
sbb
nop
pop
pushf
es
push
pop
outs
add
repz
shr
test
nop
rcl
popa
push
cmp
mov
push
js
popf
sub
in
xor
in
int
pop
adc
adc
pushf
scas
or
mov
imul
push
xchg
jmp
xor
aad
and
popf
ins
int
push
jg
icebp
ss
es
jl
mov
xchg
push
sbb
(bad)
fist
pop
xchg
imul
or
das
pop
jb
add
jmp
fwait
jne
jmp
jnp
adc
sbb
repnz
mov
fidiv
stos
(bad)
jge
sbb
jge
push
outs
pop
out
add
and
stos
inc
stc
and
xchg
(bad)
push
pop
sbb
or
pop
imul
jo
dec
aas
or
into
fcmovnu
test
test
push
dec
add
int
stc
pop
sub
daa
mov
or
dec
mov
lock
test
xor
and
or
leave
ret
xchg
and
mov
or
cmps
push
movs
mov
fst
pop
ja
pop
sub
xchg
aam
in
cmp
or
outs
and
cmp
data16
test
jnp
movs
xchg
retf
iret
sbb
(bad)
(bad)
xor
dec
pop
inc
jno
leave
jne
jecxz
cli
ins
and
int
or
(bad)
pop
ret
fidiv
ror
in
imul
clc
jle
sub
mov
popa
cmp
or
test
out
pop
jmp
andps
mov
inc
rcl
xchg
dec
jbe
outs
rcl
and
enter
push
loope
jmp
sbb
pop
loopne
retf
pop
xchg
test
jbe
xchg
(bad)
xchg
push
jle
in
jecxz
retf
cmp
jbe
pop
add
popa
pop
aas
shl
fist
scas
out
sbb
or
xchg
pop
test
mov
mov
rol
pop
dec
lock
xor
or
cmp
mov
ins
xchg
or
shl
or
xchg
fisttp
int3
jg
ja
jp
mov
jnp
jbe
mov
(bad)
loop
(bad)
pop
rcl
mov
pop
(bad)
sahf
call
daa
aad
push
sub
mov
mov
mov
ins
test
push
sub
arpl
ja
jmp
(bad)
xchg
cmp
jle
adc
(bad)
into
mov
jge
test
test
enter
mov
pop
dec
call
adc
js
and
sbb
pop
add
and
cmps
sbb
dec
popa
cmps
push
pop
or
push
add
in
mov
int3
mov
add
sub
call
nop
repz
adc
mov
div
hlt
(bad)
scas
add
xor
xchg
dec
xor
and
(bad)
call
sbb
add
(bad)
aam
imul
pop
aas
push
ror
mov
ret
rol
cmp
fucomi
arpl
aam
das
ret
rcl
paddsb
jmp
aad
mov
lods
jmp
adc
lock
add
enter
aad
sub
mov
in
pop
out
pop
ss
sub
loop
inc
pushf
cld
pop
call
cs
mov
adc
adc
xor
dec
inc
mov
nop
(bad)
mov
and
adc
shl
popf
pop
or
or
outs
inc
cmps
mov
inc
aas
xchg
dec
jmp
jl
dec
nop
or
sbb
mov
cmc
xchg
pop
into
shl
scas
and
rcl
push
push
sub
sub
popa
xchg
into
outs
leave
mov
fsubr
repnz
test
xor
sub
push
std
dec
shr
sub
fwait
xchg
in
cmp
push
lock
inc
mov
iret
hlt
repz
jmp
popf
xor
fstp
inc
jmp
cmc
push
fild
xchg
jg
lahf
loope
test
or
xchg
xor
retf
jp
add
jp
push
bound
cli
mov
fild
ins
dec
inc
mul
inc
clc
lods
and
mov
push
adc
idiv
sbb
cmc
cdq
cwde
mov
fistp
pop
(bad)
jne
cmp
xor
or
inc
cmps
mov
popa
out
int3
imul
fs
mov
adc
icebp
mov
inc
xacquire
inc
push
pop
jge
not
test
in
adc
xchg
sub
mov
rcl
aad
dec
and
adc
mov
jecxz
dec
mov
jo
sbb
adc
scas
cs
call
xchg
(bad)
hlt
movnti
shr
sbb
mov
pop
cwde
sbb
xchg
cli
pop
int3
dec
das
pop
and
mov
jb
pushf
add
(bad)
or
inc
push
xor
retf
jmp
jl
and
xchg
sbb
test
xchg
jne
cmp
and
ret
sar
cmp
cmp
popf
(bad)
(bad)
jp
js
jg
cmp
cmp
xchg
test
pop
dec
mov
div
and
rcr
jl
and
(bad)
stos
in
out
outs
js
push
add
xchg
sbb
mov
scas
push
jo
sbb
dec
(bad)
push
xor
pop
inc
pop
sbb
jmp
cmp
xor
bnd
daa
xor
pop
icebp
out
inc
aad
or
hlt
xchg
xor
(bad)
daa
loop
jmp
mov
repnz
jo
cwde
mov
push
mov
adc
push
dec
adc
outs
or
in
push
sar
retf
inc
sub
mov
mov
jne
add
cmp
test
fwait
int
ds
jmp
mov
leave
inc
jne
pop
adc
xor
cmp
frstor
cmp
cmps
in
sub
add
dec
push
pop
inc
pop
(bad)
cld
sbb
sub
cmp
jae
in
fs
fild
jecxz
loope
xchg
loop
push
(bad)
fcom
outs
addr16
div
push
call
mov
daa
leave
pop
pop
dec
loop
dec
sti
cs
push
mov
loope
test
cs
push
aad
push
test
jp
test
sbb
fsubr
xchg
out
in
rol
daa
mov
sub
cmc
pop
mov
aad
div
adc
jg
xor
jg
add
add
sbb
xor
not
xor
loop
pop
sub
inc
sub
mov
or
push
adc
movs
jno
iret
data16
or
add
push
jae
dec
sub
or
add
pop
shl
sti
int3
mov
sbb
jbe
sub
mov
sti
push
mov
mov
push
shr
xor
sahf
add
xchg
ins
adc
ins
pusha
xor
nop
sar
scas
stos
jmp
lds
xor
pusha
les
xchg
xor
adc
fwait
lods
adc
jmp
cmps
cdq
fst
or
cld
and
ret
ja
xchg
pop
mov
lock
xor
shl
inc
fistp
shr
arpl
int
push
fimul
cmp
dec
pop
mov
sar
cmp
loopne
(bad)
push
jne
sti
cld
not
imul
xor
xor
mov
xor
push
js
push
aaa
daa
push
inc
jnp
(bad)
dec
dec
adc
inc
fisubr
xchg
fdivr
dec
popa
pop
dec
push
jge
ror
dec
call
cdq
mov
lahf
sub
test
dec
xchg
pop
cmps
and
outs
ss
mov
int3
or
lods
mov
mov
mov
nop
and
dec
push
out
jmp
mov
aam
frndint
dec
lea
pop
mov
addr16
push
pusha
inc
into
rol
push
xchg
loop
sahf
ret
mov
shl
loop
pop
push
in
int
ret
pop
push
push
add
popa
ror
mov
call
rol
or
push
push
adc
xchg
mov
and
dec
mov
or
(bad)
pop
jbe
mov
and
adc
(bad)
retf
jmp
aas
aas
stos
sar
test
ss
and
push
cmp
mov
test
loopne
lods
mov
and
leave
lods
dec
jmp
pusha
cmc
xlat
hlt
outs
pop
cli
cmp
sar
and
js
dec
mov
cmp
adc
and
or
push
hlt
jae
jp
mov
sub
push
lds
jmp
scas
test
dec
je
push
loopne
push
jno
sti
dec
(bad)
loope
pop
xchg
xor
clc
pop
aas
xor
jno
stc
inc
fimul
jns
dec
cmp
push
mov
and
xchg
push
sbb
nop
lods
in
push
fiadd
lock
stos
cmp
iret
dec
sub
mov
loope
pusha
dec
cmc
xor
xchg
mov
xchg
or
pop
pop
and
mov
or
shr
add
mov
xchg
call
add
cmp
cmc
mov
ins
cmp
fwait
mov
out
call
or
dec
push
inc
test
loope
stos
xor
mov
adc
fptan
clc
push
mov
and
mov
mov
jecxz
cmp
les
adc
inc
mov
and
jns
add
jno
inc
xchg
movs
call
in
mov
dec
movs
jl
pop
movs
lods
inc
gs
sub
(bad)
(bad)
out
lea
out
push
and
jne
inc
addr16
sub
xor
shl
mov
sbb
cmc
not
sub
lods
in
mov
jae
pop
xchg
sub
xor
and
inc
cmc
fisub
clc
dec
(bad)
out
sahf
das
push
or
mov
pop
pusha
jge
xor
fild
js
fucomi
retf
out
in
xlat
ror
mov
jp
mov
into
pop
ins
inc
dec
add
iret
cmp
push
sbb
push
sbb
dec
clc
outs
xor
int3
jns
ja
xchg
(bad)
mov
jmp
stc
and
cmp
repnz
cmp
movs
sub
push
inc
push
push
xchg
or
sub
clc
popf
clc
xor
jo
xor
iret
ficom
xchg
bswap
pop
mov
(bad)
cmps
ins
xchg
addr16
test
xchg
in
jnp
xchg
leave
outs
aaa
xor
enter
cwde
lds
cmc
outs
js
lock
ins
dec
das
inc
xchg
mov
int3
test
ins
mov
fsub
cmp
leave
lock
jp
or
mov
movs
add
rcr
jg
les
push
in
push
sti
add
mov
xchg
scas
dec
enter
adc
xor
rdpmc
(bad)
jbe
dec
push
xchg
out
stc
inc
xchg
cs
and
iret
icebp
cmp
jb
pop
cli
rcr
and
pop
stc
jmp
sbb
lea
fs
lods
out
(bad)
ja
lahf
and
dec
or
cld
and
nop
xchg
adc
sub
push
or
or
inc
adc
jmp
jns
(bad)
adc
ret
push
mov
push
push
jns
adc
mov
pop
fisttp
cmp
push
or
mov
adc
(bad)
fild
jge
jle
inc
(bad)
test
xchg
cld
inc
call
jbe
dec
pop
adc
in
dec
mov
and
adc
inc
aam
jecxz
movs
add
and
inc
mov
cdq
mov
sub
lods
mov
ja
push
pushf
rcr
ret
lods
cmc
(bad)
in
pop
jle
sbb
pop
imul
cmps
mov
loopne
sbb
dec
dec
jmp
jno
adc
add
cmp
js
push
icebp
lods
dec
mov
aas
(bad)
sahf
test
mov
stc
push
mov
ins
inc
daa
int3
cmp
pushf
pop
mov
mov
mov
and
rcr
fimul
cmp
shl
fmul
shl
sub
mov
cmps
push
ret
int
pushf
ins
data16
jle
fmul
loop
mov
and
or
mov
sbb
push
xor
xchg
aad
cmp
ret
jno
movs
sub
mov
mov
dec
test
or
into
shl
inc
pushf
ss
leave
mov
out
loopne
test
inc
out
fisttp
inc
mov
mov
(bad)
aad
jmp
and
mov
mov
idiv
fsubr
jmp
mov
data16
lea
ins
popa
imul
movs
inc
(bad)
loop
xchg
cmp
shr
and
loop
add
jg
sbb
inc
int
loop
inc
gs
cmps
mov
sub
lods
pop
sbb
or
adc
mov
adc
jle
push
out
pop
scas
sub
xrelease
js
or
pop
xlat
push
jp
sbb
je
inc
mov
leave
ins
jae
retf
push
outs
jl
(bad)
cld
mov
xchg
aam
cmp
cmp
std
jns
lahf
shr
je
mov
into
push
repz
int3
adc
rcl
mov
pop
(bad)
mov
lds
std
xchg
xlat
lods
es
jns
out
or
leave
dec
or
fiadd
adc
outs
cmp
jae
jmp
ja
jae
adc
scas
jl
lods
dec
inc
push
pop
cli
dec
sbb
push
push
into
nop
ret
mov
cmp
cwde
cmp
nop
mov
sbb
lahf
jns
popa
cmp
dec
int3
lds
push
cmps
out
sbb
inc
pop
dec
cmp
arpl
push
lods
add
lods
xchg
xchg
ror
fwait
ins
clc
jg
adc
in
sub
xchg
mov
or
add
idiv
or
adc
mov
jae
cmp
fiadd
rcr
jge
jno
aam
outs
push
lds
inc
call
and
sbb
cmp
imul
jno
jge
add
imul
pop
fwait
jecxz
scas
add
enter
dec
fcom
dec
in
mov
enter
cmps
(bad)
push
push
mov
push
xchg
ror
add
mov
or
mov
jg
out
jge
adc
mov
push
inc
and
cdq
lahf
cmp
sbb
shl
xchg
or
pop
stos
mov
mov
cmp
lock
jae
mov
mov
and
in
outs
retf
loopne
mov
cmps
ror
inc
ficom
std
mov
dec
mov
or
scas
scas
shl
mov
adc
add
xchg
and
ja
mov
pop
add
push
das
loope
push
or
push
pop
int
pop
jmp
jb
lods
call
cwde
sti
jbe
xor
sahf
dec
adc
das
xchg
ins
jl
jae
dec
rol
fbstp
sahf
lds
mov
jmp
cmc
pop
mov
mov
and
sub
cli
daa
mov
in
repnz
adc
and
jle
jno
scas
pop
adc
push
xor
mov
jb
cs
clc
xor
in
ins
pushf
call
push
jle
lea
sar
(bad)
jmp
or
shl
loopne
cmc
cmp
or
ins
inc
(bad)
and
les
ss
mov
(bad)
aaa
inc
push
(bad)
pop
mov
mov
fs
test
inc
mov
loop
addr16
xchg
inc
outs
sub
test
sar
xor
xor
rol
fucomp
mov
sbb
dec
test
push
cmps
inc
jl
call
or
fmul
or
out
pop
fmul
stos
cmp
outs
mov
movs
push
sbb
dec
nop
add
push
outs
lahf
aad
cmps
add
adc
push
outs
call
dec
pop
fmul
lahf
iret
iret
ror
leave
sahf
cs
mov
hlt
sbb
outs
and
js
cmp
mov
retf
mov
lea
or
stos
mov
sahf
or
cmp
add
cmp
pop
pop
adc
jns
mov
inc
dec
xor
push
in
loopne
jns
mov
std
test
stos
std
test
cmps
(bad)
into
mov
mov
xor
inc
jge
jae
pop
jecxz
enter
scas
inc
jecxz
jmp
std
test
pop
adc
xchg
mov
or
dec
push
pop
ins
cmc
stos
push
movs
loopne
loopne
leave
or
mov
xchg
or
pushf
hlt
pop
mov
(bad)
fsubr
add
cmc
movs
(bad)
aad
sub
sub
ins
add
push
lea
into
aaa
xchg
lea
add
sub
aas
xchg
jae
push
push
and
mov
jmp
cmp
xchg
dec
outs
and
loop
movs
in
cld
push
sub
pop
push
lods
cdq
or
(bad)
sbb
mov
(bad)
add
inc
out
inc
pop
ja
sbb
xor
mov
ret
test
mov
pop
jmp
jns
pop
es
fwait
sbb
and
xchg
xchg
or
xchg
cmp
stos
scas
scas
leave
sbb
push
test
icebp
push
and
jnp
xor
movs
fs
sbb
sbb
mov
out
or
dec
daa
cdq
mov
sub
cmp
mov
and
push
dec
sub
push
stos
mov
stc
popa
sbb
mov
push
xor
stos
(bad)
adc
shr
cdq
mov
into
dec
mov
inc
mov
mov
cmp
dec
dec
fld
or
scas
xchg
mov
xor
mov
xchg
out
daa
mov
or
cmp
cmp
pop
fwait
pop
sub
ffree
clc
push
gs
sbb
(bad)
cwde
adc
mov
int
ins
adc
pusha
inc
lahf
add
xor
jp
xlat
xchg
cwde
out
push
jmp
mov
nop
cmp
and
and
xchg
mov
arpl
dec
test
fdivr
loop
retf
int
mov
test
jns
mov
or
xchg
in
jb
xchg
push
sahf
pop
mov
aam
push
and
sbb
in
(bad)
rol
sbb
push
push
pop
movs
dec
mov
or
pop
mov
inc
lods
xchg
ror
into
loopne
add
pop
fcmovbe
push
shl
outs
iret
les
stc
add
add
sahf
jae
jmp
xchg
les
lds
mov
sub
retf
iret
rcl
push
and
neg
(bad)
mov
imul
sbb
xchg
out
push
shl
outs
loopne
mov
dec
sahf
imul
pop
cwde
jns
jp
or
ins
xor
gs
ss
jae
adc
jmp
leave
shl
jno
leave
pop
ror
inc
fldenv
dec
out
(bad)
jg
in
sbb
fwait
or
cmps
sbb
test
push
sbb
pusha
and
push
dec
push
out
aad
push
test
cmp
(bad)
aad
ins
dec
rol
jl
add
and
cmps
pusha
retf
int
jp
mov
inc
mul
imul
lock
cwde
test
push
pop
cdq
mov
pop
mov
(bad)
mov
push
test
sbb
popf
(bad)
inc
aad
jno
into
cld
push
sbb
mov
mov
dec
ret
sti
xchg
imul
push
sbb
rcr
sbb
retf
and
mov
lods
and
cld
test
push
push
shl
cmp
dec
mov
ret
mov
nop
pop
mov
xchg
stc
mov
lods
ror
ja
lds
mov
test
push
outs
inc
adc
sbb
scas
sub
gs
hlt
pop
mov
neg
pop
push
movs
in
mov
clc
push
sahf
(bad)
adc
stos
cmp
retf
xor
xchg
test
xchg
out
cmps
xor
and
sbb
adc
sbb
jle
mov
je
inc
popa
mov
jae
push
rol
xlat
loope
mov
mov
cmps
push
scas
rcr
xchg
shr
cmp
pop
fisub
mov
fs
xchg
std
inc
iret
out
adc
or
int
or
xchg
div
pop
(bad)
push
add
push
arpl
dec
in
cmps
imul
inc
cli
sbb
push
(bad)
and
rcr
retf
push
dec
adc
jbe
(bad)
push
iret
outs
scas
out
xchg
add
add
pop
stos
jmp
loopne
and
sbb
dec
push
cdq
xchg
nop
lods
out
push
xor
ss
stos
inc
retf
stos
xor
icebp
mov
dec
shl
and
xor
xchg
imul
xchg
xchg
add
jle
xchg
mov
push
shr
cmps
jecxz
mul
adc
not
xchg
and
jb
add
in
sti
mov
xor
nop
test
enter
mov
(bad)
icebp
lods
inc
cmps
xor
(bad)
imul
loopne
sbb
sub
sti
adc
sub
movs
sahf
rcl
jg
adc
scas
sub
popa
mov
retf
div
cdq
movs
repnz
fcom
mov
mov
mov
fidiv
inc
xor
push
mov
retf
out
sbb
xor
sub
stos
push
je
mov
repz
fisub
(bad)
pop
push
jl
xchg
mov
add
adc
ds
lds
call
pop
inc
outs
loope
les
das
shl
sbb
shl
xchg
add
and
mov
mov
mov
std
sub
test
xor
lahf
test
push
and
sub
int3
sub
dec
sar
or
mov
cmp
jmp
mov
sub
add
cs
mov
xchg
fild
icebp
adc
mov
xchg
xor
rol
loope
cmp
sar
lock
les
aaa
jge
inc
test
mov
(bad)
fst
jns
xchg
xchg
lods
push
test
jle
sub
mov
sub
out
add
cdq
and
adc
imul
retf
fisubr
cmp
jb
ins
xor
inc
in
leave
sbb
cmps
rcr
inc
or
push
mov
sbb
js
jp
hlt
mov
sub
cmp
sub
jl
xchg
push
iret
add
sbb
dec
in
push
and
gs
pop
mov
neg
(bad)
call
mov
sub
das
add
nop
xor
xchg
nop
or
add
xchg
daa
mov
call
adc
ja
rcl
fstp
leave
ins
sub
fs
mov
pop
xchg
mov
(bad)
sti
fwait
jb
ds
add
xchg
pop
out
jmp
adc
xchg
outs
cld
aaa
ret
pop
les
fdivr
ss
mov
test
mov
cli
mov
dec
cmp
outs
int3
fdivr
xchg
popf
add
pop
loop
stos
loope
adc
popa
xor
lods
inc
into
mov
ror
das
cmc
or
sbb
sbb
mov
adc
jnp
add
imul
push
sbb
dec
loopne
sbb
push
cmp
jno
dec
retf
in
imul
sub
push
jb
dec
xor
adc
inc
fsubp
cmp
fimul
popf
call
sub
mov
xchg
icebp
(bad)
mov
out
sti
xchg
je
and
ss
and
push
retf
inc
xor
fs
adc
sti
ret
mov
shr
repz
lods
idiv
pop
not
mov
neg
fmul
jno
addr16
mov
sub
in
fsubr
(bad)
mov
dec
mov
or
sub
ficom
fwait
and
in
mov
pop
or
enter
sahf
adc
mov
fidiv
ins
jb
pusha
mov
lds
int3
push
mov
inc
jns
fbld
cmp
lahf
cmp
push
stc
cmp
and
or
mov
dec
sbb
push
aaa
retf
iret
mov
pop
nop
mov
adc
and
push
inc
xchg
pop
adc
pop
jb
lods
mov
mov
movs
fdivr
inc
das
(bad)
dec
jb
mov
cmp
ins
push
inc
dec
call
int
dec
add
xor
jge
hlt
sbb
xor
pushf
adc
inc
sahf
mov
inc
mov
or
hlt
mov
jmp
push
arpl
sbb
lods
rol
pop
adc
mov
cmp
shl
xchg
out
gs
arpl
cmp
dec
dec
mov
fisubr
dec
inc
pop
push
ins
dec
xor
out
in
(bad)
inc
mov
test
cmp
jbe
loopne
jns
cs
ret
push
icebp
shl
push
and
push
xchg
ror
loopne
into
push
cli
adc
dec
rcr
mov
or
sub
hlt
test
sub
jns
call
shr
cmps
xchg
jno
inc
jg
xchg
enter
pop
jl
push
and
pop
hlt
dec
jno
jo
jg
or
cs
inc
mov
push
cmp
xchg
pushf
outs
push
icebp
push
js
and
test
fisubr
sub
fcmovb
xor
mov
adc
sub
ja
mov
xor
(bad)
mov
pop
push
out
pop
in
xchg
add
push
sub
lods
add
pop
adc
aas
cwde
out
jne
dec
sahf
loop
or
cs
mov
mov
lds
ds
ficomp
(bad)
jge
outs
mov
ret
enter
cmc
clc
jp
and
push
aas
scas
fdiv
xlat
stc
add
push
loop
adc
fwait
jbe
ja
(bad)
rol
jnp
sbb
sub
and
fiadd
and
mov
dec
lods
ds
jb
shr
out
sahf
adc
mov
mov
xor
inc
mov
rcl
out
shr
and
bound
frstor
push
fwait
jp
(bad)
fwait
pop
jge
dec
or
mov
xlat
scas
push
cmp
adc
pop
mov
push
xor
jb
inc
inc
sbb
xor
jnp
clc
dec
add
les
sub
out
repnz
mov
pop
add
lds
shl
mov
and
sub
pusha
inc
das
shr
mov
out
mov
rcr
pop
imul
fs
mov
mov
add
cmp
inc
(bad)
jmp
ins
hlt
ffree
frstor
hlt
cmps
dec
(bad)
adc
dec
adc
or
jmp
sbb
fld
in
sub
(bad)
(bad)
sub
(bad)
dec
push
xor
cmp
add
inc
jo
push
add
push
je
mov
mov
mov
add
cmc
mov
(bad)
test
cli
loope
push
push
xor
nop
daa
addr16
retf
fadd
or
ret
jno
test
sahf
enter
sub
dec
movs
mov
push
dec
adc
gs
out
xchg
in
inc
sub
out
popf
mov
or
sbb
nop
loop
cmp
xor
scas
and
icebp
mov
cs
mov
aad
adc
test
std
out
and
add
(bad)
cli
cmp
call
dec
cvtps2pi
cmc
in
pop
cmps
int
push
jae
sub
sub
out
idiv
mov
pusha
mov
stos
imul
xor
pop
shl
dec
xchg
shr
push
repnz
std
in
dec
cwde
enter
stos
mov
(bad)
jle
and
pusha
enter
adc
push
jo
ins
std
inc
cli
scas
pop
rol
shl
shl
mov
inc
pushw
mov
test
mov
push
add
jmp
mov
push
fist
mov
jae
sahf
mov
jg
popf
int3
xchg
jnp
mov
imul
sub
fld
pusha
pop
cmps
std
fst
xor
icebp
hlt
test
into
int3
loop
fcmovne
aam
dec
movs
push
sbb
icebp
sti
xchg
retf
daa
(bad)
jmp
mov
pop
xchg
mov
scas
cmp
call
jmp
add
fld
mov
jmp
cld
shl
adc
ret
mov
mov
outs
push
or
dec
imul
xor
inc
rcr
retf
fadd
rcr
adc
test
jecxz
push
or
mov
bound
mov
(bad)
sub
adc
xchg
in
xor
xor
pop
cli
cs
retf
xchg
mov
dec
dec
xchg
mov
inc
dec
movs
pop
mov
jg
sbb
mov
mov
imul
pop
cmp
call
pop
mov
ins
in
js
inc
dec
in
mov
aas
inc
data16
sbb
adc
pop
and
mov
jg
popf
shl
stc
and
inc
sti
sub
xchg
sub
ret
popf
lods
inc
adc
push
adc
arpl
cs
inc
dec
or
cmps
into
dec
sub
(bad)
mov
sbb
movq
mov
je
xchg
jmp
mov
inc
das
not
push
xor
push
hlt
and
jmp
test
cmp
test
and
enter
lods
outs
stc
cmp
mov
and
pop
gs
pop
jmp
arpl
xchg
stos
inc
pop
jno
(bad)
and
cmc
add
ret
bound
ins
gs
test
jg
jmp
test
mov
sar
in
sbb
mov
aaa
adc
cmp
inc
jp
xchg
clc
xor
inc
inc
jne
pop
mov
lock
loopne
and
xlat
cs
or
stos
dec
and
dec
sbb
arpl
movs
fs
and
xor
popf
cmp
xchg
imul
lods
imul
es
dec
loopne
add
sub
add
and
jle
sbb
std
cmp
xchg
push
jo
fld
shl
ss
pop
and
(bad)
push
sub
add
fiadd
shl
jecxz
call
jge
push
call
dec
(bad)
je
mov
xchg
(bad)
jge
icebp
pop
sub
test
fs
stos
dec
gs
push
ret
jmp
inc
push
jmp
sbb
jecxz
movs
mov
rcl
xor
fsubr
aad
inc
scas
jg
and
js
lock
sub
jmp
iret
aam
shr
maxps
out
mov
mov
push
test
xchg
xor
mov
or
inc
and
ror
fstp
jbe
outs
pop
add
mov
pop
pushf
ins
in
pusha
adc
mov
or
mov
adc
jb
fs
xchg
dec
out
mov
fcmovne
dec
and
pushf
inc
sub
jns
out
cmp
inc
xchg
pop
lock
dec
inc
inc
lods
pop
data16
mov
or
rcr
aad
scas
sbb
pop
push
inc
jns
stos
or
lock
xchg
xchg
cld
add
xchg
stos
imul
xlat
lds
out
dec
(bad)
bnd
daa
(bad)
add
in
movs
sbb
les
xchg
dec
icebp
pop
cmp
std
cli
ins
jmp
jle
repz
sub
add
cmps
jp
sub
mov
jns
xor
lea
sub
arpl
fiadd
inc
sub
sti
mov
maskmovq
mul
shl
(bad)
outs
mov
aas
jmp
(bad)
adc
xchg
pushf
sti
(bad)
dec
push
sar
lock
out
sbb
frstor
daa
loope
(bad)
mov
fild
push
mov
mov
add
mov
inc
lea
xchg
jno
loopne
fcmovnu
(bad)
iret
lods
cmp
jg
jbe
or
xchg
and
fisttp
inc
out
xchg
enter
outs
in
or
imul
jae
cs
fcom
loope
inc
out
out
(bad)
pop
sub
jmp
mov
mov
popa
xor
dec
lahf
jge
test
lods
pop
xor
loope
aam
mov
mov
pop
ret
add
jae
out
shl
stos
in
repz
fcmove
pusha
leave
sub
out
out
outs
loop
pop
mov
mov
jbe
sbb
js
repz
push
(bad)
es
mov
mov
fstp
sbb
mov
setg
sub
(bad)
mov
js
jge
add
fisubr
lahf
leave
push
pop
xor
mov
loop
fldcw
and
test
cmp
test
jg
retf
cmps
add
or
call
jmp
js
sub
adc
mov
xor
mov
imul
jae
mov
(bad)
dec
jbe
ins
jnp
in
bswap
xchg
popf
push
push
xor
cmps
pop
cmp
push
inc
mov
mov
movs
inc
test
cmp
imul
and
add
inc
sub
xchg
stc
mov
push
aam
xor
pop
mov
fdivr
stos
(bad)
jns
and
ds
and
das
fwait
jne
jnp
inc
or
jmp
sub
mov
mov
je
cmp
int
ds
jl
dec
sub
cmp
(bad)
mov
add
adc
push
inc
xor
jle
cli
scas
mov
lea
fwait
rcr
xchg
sahf
add
out
mov
xor
pushf
iret
mov
fs
jbe
int
lock
push
adc
pop
pop
sti
xchg
sub
pop
xchg
jbe
(bad)
fnsave
nop
call
or
dec
or
arpl
jae
pop
or
call
fcom
(bad)
jl
dec
push
data16
xchg
jne
sub
jmp
inc
dec
repz
in
aas
sbb
xor
es
ror
xor
test
aad
dec
jnp
outs
mov
mov
cmp
cmps
inc
inc
mov
cmp
clc
jecxz
adc
aad
dec
aaa
and
sbb
lods
push
xor
popf
dec
adc
push
pushf
(bad)
mov
and
and
cmp
inc
(bad)
ror
cmps
adc
dec
sbb
add
(bad)
je
cli
iret
inc
mov
retf
cmp
or
out
sub
movs
jo
bound
adc
mov
les
xchg
xchg
fild
scas
in
inc
xor
add
inc
fidiv
les
cld
jnp
call
mov
mov
scas
(bad)
jnp
dec
ins
adc
jae
xchg
pop
mov
pop
shr
sbb
fmul
xor
xchg
or
outs
cmp
(bad)
out
pop
jge
adc
mov
(bad)
cdq
outs
retf
mov
leave
or
push
les
sti
es
and
add
fucomi
or
into
out
adc
xor
cli
push
jbe
jmp
(bad)
movs
int
cmps
and
push
jno
mov
aam
cwde
scas
es
aaa
popa
cmc
sub
addr16
pop
aam
sti
xchg
fldcw
fadd
mov
inc
inc
aas
cdq
enter
retf
jb
sub
cs
or
jmp
(bad)
sub
mov
cld
push
inc
(bad)
xchg
in
clc
xor
int
ds
cmp
push
clc
push
int3
popa
nop
arpl
mov
cmc
push
mov
dec
loopne
lods
cmp
inc
popf
jbe
push
push
sbb
cli
push
ret
retf
inc
sub
idiv
arpl
push
cwde
inc
mov
lods
sub
std
pop
xor
xchg
aam
stos
or
push
sub
jg
call
pop
pop
in
or
js
sbb
lock
jecxz
outs
sti
push
hlt
mov
xchg
push
out
data16
dec
je
loopne
iret
push
pop
in
arpl
imul
sub
icebp
jb
mov
adc
cmps
mul
nop
mov
push
jnp
ret
or
fs
data16
xchg
add
dec
aaa
or
(bad)
in
mov
push
mov
cmps
xchg
xor
and
repz
add
cdq
stc
jnp
ficomp
mov
mov
shl
scas
jp
ret
loope
push
mov
movs
dec
stc
or
inc
sub
inc
jae
out
and
jl
push
mov
pop
(bad)
frstor
mov
jp
push
adc
mov
retf
fcomp
jmp
and
adc
mov
in
and
imul
mov
neg
out
pop
sbb
mov
retf
push
andps
fst
imul
xchg
fist
add
movs
mov
sahf
test
shl
add
retf
lea
xchg
sbb
mov
test
enter
xor
imul
cmp
out
lock
imul
movs
daa
stc
mov
pop
cwde
jmp
or
mov
pop
popf
mov
xor
ret
mov
enter
(bad)
gs
loopne
(bad)
mov
sub
xchg
inc
inc
sub
inc
fnstcw
cmc
jp
push
push
xchg
std
sbb
rcl
ret
and
out
mov
sbb
sbb
add
aaa
outs
es
jl
hlt
xchg
lods
and
jb
ret
mov
xor
in
pop
shl
(bad)
mov
mov
push
scas
mov
cmc
xlat
mov
sbb
jno
mov
repz
xchg
push
cdq
sbb
pop
bound
(bad)
mov
or
add
add
mov
out
mov
jmp
jne
cdq
dec
shl
fwait
ror
mov
xchg
jmp
lds
inc
sub
mov
and
jno
add
and
das
jo
or
dec
and
das
sub
inc
xor
ror
mov
repz
sbb
adc
xchg
cmp
hlt
mov
xchg
adc
stc
aas
ss
push
cmp
jno
retf
mov
(bad)
fwait
jg
pop
retf
cmps
adc
mov
jle
lock
inc
dec
pop
aas
jo
push
jmp
fs
lock
hlt
stos
mov
ror
pop
test
mov
mov
pop
jp
pop
push
xchg
stc
cmps
push
int
push
nop
mov
ins
mov
stos
mov
and
cmp
mov
scas
pop
push
int
es
add
mov
rcl
mov
pushf
rcr
sub
mov
ins
or
pop
mov
cmp
retf
push
movs
push
inc
jne
fs
xchg
pop
popa
aad
and
icebp
jnp
mov
inc
fidiv
pusha
sub
jl
cmps
push
into
imul
sahf
cmp
out
out
test
enter
sbb
sub
inc
out
dec
dec
dec
fucomp
dec
loope
jbe
xchg
(bad)
out
inc
(bad)
and
outs
sbb
dec
outs
or
sub
outs
outs
shl
arpl
popa
dec
dec
jl
ret
out
shl
scas
dec
ins
adc
xor
sub
adc
clc
sub
fs
inc
cmc
(bad)
jl
mov
jmp
ss
inc
jns
xchg
(bad)
jbe
dec
mov
cmps
int
add
stos
lds
pop
mov
jno
mov
and
leave
(bad)
outs
sbb
(bad)
mov
and
mov
inc
push
inc
jp
lods
mov
fadd
mov
(bad)
dec
stos
mov
ins
je
inc
out
push
cmp
mov
inc
cmp
adc
leave
fisttp
cmp
cmp
movs
cmp
dec
adc
call
xchg
xchg
imul
outs
mov
push
inc
ja
or
sti
pop
pop
adc
or
add
enter
mov
cmps
retf
mov
stos
push
lock
ds
fidivr
cwde
jns
xchg
cmp
jmp
(bad)
(bad)
frstor
mov
or
jg
pop
push
add
cmp
nop
hlt
push
ficomp
les
xchg
mov
lea
lods
mov
ds
lahf
and
(bad)
jp
add
cli
dec
jmp
xor
push
mov
sbb
mov
inc
sub
xchg
ret
mov
mov
lea
les
mov
in
movs
jb
(bad)
cmp
loopne
inc
jo
push
add
dec
adc
dec
and
add
ror
out
icebp
nop
mov
jae
cmps
mov
mov
lods
hlt
pop
je
aaa
scas
stos
pop
xchg
lods
js
jne
or
das
gs
mov
and
aaa
sbb
and
cmp
call
stos
addr16
loope
ss
retf
repnz
mov
scas
in
iret
iret
pusha
sub
pcmpeqb
js
mov
sub
fcomp
repz
sub
mov
ins
repz
jo
fimul
ror
out
lods
pop
push
or
inc
xchg
xchg
(bad)
aad
fidivr
in
dec
(bad)
jnp
shl
pop
js
out
loopne
out
(bad)
pop
aaa
or
pop
in
pop
and
adc
ror
mov
pop
push
xchg
sbb
retf
or
movs
ins
sub
jae
jmp
fwait
std
gs
push
lods
xor
call
cwde
sub
xor
scas
hlt
pop
out
mov
movs
pop
sbb
test
mov
push
mov
and
add
es
fdiv
xchg
scas
mov
and
mov
jnp
cmp
cmp
sbb
mov
outs
sti
sub
cli
xchg
adc
push
push
pop
xor
cmp
mov
retf
jns
test
and
and
pop
sbb
xchg
iret
fidivr
imul
clc
pop
lea
fist
shl
xor
dec
repnz
fs
popa
fdivrp
mov
mov
jae
out
dec
cmp
fbld
push
dec
sub
(bad)
iret
jbe
stos
bound
in
pop
sub
aad
jo
movs
add
pop
or
cwde
push
test
cmc
pop
push
pop
loope
xchg
(bad)
in
cmps
mov
mov
bound
inc
or
test
out
ins
xlat
retf
mov
jmp
add
pop
jb
nop
cmp
ret
es
and
loop
dec
adc
mov
xlat
into
mov
inc
xor
pop
jp
jb
push
std
aad
cmp
data16
xor
hlt
int
sbb
mov
and
sbb
or
(bad)
stos
cwde
(bad)
mov
iret
ret
pop
push
inc
push
add
stos
inc
mov
arpl
dec
test
data16
inc
pushf
retf
push
aaa
jmp
sub
cmps
sub
aad
sbb
cmc
inc
mov
adc
mov
loope
dec
or
into
sub
les
or
(bad)
mov
xor
xchg
call
adc
cmc
and
adc
jle
sub
nop
sti
in
or
call
jecxz
jae
sub
rcr
int
pusha
mov
lods
stos
push
pop
push
dec
or
sbb
test
adc
jge
xchg
imul
out
in
fwait
into
shl
dec
cmp
jmp
sar
std
ins
outs
in
xor
sahf
jae
push
xor
or
push
sub
xor
shl
jmp
pusha
cmp
mov
iret
in
sbb
ror
(bad)
stos
outs
mov
lahf
into
stc
sub
sbb
ror
cmc
adc
pop
fmul
cmp
push
cli
or
jbe
cwde
(bad)
popa
pop
jg
leave
push
push
cmp
sub
adc
or
adc
fdivr
(bad)
test
hlt
pop
in
pop
pop
push
or
xlat
dec
xchg
sbb
aad
or
push
cdq
mov
inc
daa
dec
mov
sub
xor
pop
inc
or
mov
push
mov
mov
in
aas
mov
add
xor
call
push
sti
scas
pop
(bad)
out
out
sahf
lahf
add
test
or
(bad)
scas
or
test
jnp
lds
into
retf
pop
fwait
jg
in
ins
popa
add
xchg
call
clc
mov
aad
adc
mov
adc
test
xor
or
or
lahf
cld
out
popf
mov
xor
xor
mov
mov
lahf
cmpxchg
inc
xor
mov
mov
gs
cmc
adc
pusha
call
aas
mov
fwait
cmp
sar
or
aam
out
xchg
or
push
jae
dec
sub
jo
repz
jo
mov
retf
gs
fld
inc
lea
loopne
imul
jg
sub
cld
pusha
loopne
or
pop
dec
adc
mov
cmc
jmp
inc
mov
add
cmp
jle
and
jge
sbb
mov
repz
xor
pop
mov
mov
jns
cmp
pusha
dec
add
jecxz
hlt
enter
pusha
into
(bad)
pop
arpl
ror
ds
jae
mov
lods
mov
jno
leave
dec
in
repnz
ror
cmp
and
into
repnz
(bad)
mov
rcl
dec
cmps
pop
sar
cmp
ins
jmp
(bad)
or
or
adc
neg
dec
xor
inc
sub
test
into
ret
or
jbe
arpl
sub
and
aas
into
pop
jl
cmp
cmc
pop
leave
pop
adc
les
frstor
test
and
movs
cs
pop
mov
jle
adc
rcr
hlt
mov
mov
into
and
frstor
xchg
cmps
bound
sar
push
add
loopne
push
xor
es
bound
out
faddp
inc
sub
or
xchg
jne
sub
bound
(bad)
push
dec
and
scas
jbe
sub
mov
stos
xchg
test
jl
adc
test
xchg
push
mov
and
mov
xor
jae
xchg
and
rol
lods
loopne
je
cmps
pop
and
add
outs
dec
(bad)
das
xlat
popf
mul
dec
(bad)
dec
xor
sub
inc
lods
xchg
test
jg
out
dec
add
aam
jns
push
shr
xor
fldenv
xor
mov
(bad)
adc
in
mov
dec
xor
mov
mov
push
dec
or
mov
call
shr
sub
mov
inc
lock
rol
and
cmp
(bad)
jecxz
jp
mov
dec
jae
sbb
int3
cmp
hlt
and
inc
loope
cmp
enter
shl
bnd
jno
jmp
getsec
ja
sub
sub
fstp
das
xchg
scas
fild
out
xchg
test
dec
jbe
lods
in
out
aam
cmp
int3
push
test
and
xor
mov
movs
(bad)
cmp
call
mov
retf
and
packsswb
sbb
mov
push
adc
lods
xor
push
ret
push
test
dec
adc
inc
daa
jl
xor
into
not
jo
dec
imul
push
movs
test
popa
xchg
xor
add
pop
xchg
mov
mov
mov
mov
inc
jmp
inc
out
adc
(bad)
xchg
dec
rcr
pop
lods
sahf
xchg
jb
pop
jnp
ja
inc
mov
pop
rol
dec
mov
cmp
hlt
xor
xlat
repz
sbb
in
cs
inc
rol
test
data16
dec
add
in
and
sub
mov
psraw
rol
retf
jno
cmps
icebp
aad
out
cwde
push
cld
shr
cmps
mov
push
scas
adc
push
push
imul
and
mov
adc
mov
fs
cs
xchg
inc
dec
cmp
rcl
call
movs
cmp
and
fisttp
mov
push
mov
adc
pop
shr
popf
imul
loope
push
std
in
or
adc
(bad)
add
adc
sub
rol
repnz
out
pop
mov
stc
ins
test
pop
jge
xchg
out
mov
or
loopne
loopne
fstp
mov
jb
in
aaa
or
inc
lods
inc
repnz
jne
inc
jo
adc
mov
mov
loopne
stc
test
or
xchg
or
mov
in
dec
sbb
mov
cmp
pop
and
popf
inc
call
into
push
fldcw
push
jl
imul
xchg
mov
xor
add
inc
pushfw
dec
out
adc
cmc
and
int3
bound
int
adc
mov
xor
push
cmp
add
aaa
aas
xor
stos
into
push
scas
in
push
inc
jnp
addr16
fld
(bad)
popf
int3
push
cmp
or
addr16
sahf
(bad)
dec
push
(bad)
cmp
jle
lahf
mov
xor
mov
sub
pop
mov
test
test
out
jg
(bad)
gs
test
adc
mov
(bad)
mov
sub
adc
cld
(bad)
iret
xchg
sub
out
test
jmp
mov
(bad)
cmp
mov
arpl
movs
call
repz
enter
add
sbb
repz
repnz
xor
push
gs
jbe
dec
dec
pop
xchg
add
jle
into
scas
xchg
and
push
loop
jbe
add
adc
mov
and
adc
jge
std
ins
jno
or
fdiv
mov
jb
call
or
hlt
push
in
(bad)
pop
mov
push
(bad)
sbb
inc
(bad)
ror
rcl
xchg
test
out
xor
iret
shl
mov
sbb
scas
outs
dec
leave
push
retfw
add
mov
adc
aad
sub
mov
jne
cmps
cmp
imul
aaa
ins
jae
push
std
adc
mov
shr
int3
dec
dec
retf
shl
out
sub
xor
hlt
xor
cmp
xchg
pop
adc
repnz
test
jmp
xor
and
push
hlt
test
sbb
fimul
cmps
xor
sub
out
(bad)
sbb
xchg
sub
xor
das
mov
jle
fisttp
fisub
fisubr
scas
je
aaa
(bad)
jmp
ret
mov
sbb
nop
mov
into
mov
(bad)
ins
and
retf
jmp
jne
stc
push
mov
test
mov
cmc
(bad)
mov
loope
(bad)
cmps
mov
lods
aaa
(bad)
push
rcr
inc
push
icebp
mov
xor
xlat
fwait
xlat
mov
and
lds
push
outs
adc
or
nop
jg
popf
inc
push
ret
push
adc
jne
dec
jne
xor
xlat
call
hlt
push
(bad)
repz
xor
sub
mov
xor
cmp
push
sub
(bad)
fcom
cmp
out
inc
repnz
push
repnz
loop
shr
es
xchg
loopne
inc
mov
cmps
mov
icebp
inc
mov
cli
xchg
mov
mov
enter
xchg
or
mov
add
xor
or
out
adc
mov
sbb
out
pop
pop
movs
stos
pop
cmp
imul
xchg
jns
out
add
pop
mov
scas
and
pop
(bad)
(bad)
enter
and
test
jo
push
loopne
xchg
mov
es
adc
mov
loope
je
mov
jecxz
adc
dec
cmps
push
sar
imul
fbld
jmp
and
les
jno
dec
push
mov
hlt
(bad)
les
js
(bad)
aaa
pop
jl
sbb
pusha
fsub
scas
inc
xor
fldpi
jae
lea
jg
out
mov
jne
(bad)
and
lea
push
lods
pop
xchg
dec
fwait
xor
mov
fs
inc
hlt
shl
fwait
xchg
shl
pop
jmp
std
push
mov
out
adc
dec
test
jmp
imul
xlat
mov
js
mov
(bad)
ret
jg
leave
jmp
cmp
push
mov
adc
dec
mov
sti
rcr
xchg
mov
std
jb
(bad)
mov
jo
xchg
inc
fidivr
xchg
xchg
push
xor
sub
int
mov
dec
test
mov
cmp
push
ja
sub
push
mov
ret
inc
jl
xor
ret
add
mov
sub
test
inc
adc
adc
xchg
sub
ret
enter
outs
sub
outs
adc
jb
or
scas
movs
dec
out
aam
sar
psraw
jecxz
fwait
cmp
dec
daa
jb
jno
test
add
les
ret
aaa
mov
mov
in
jmp
mov
and
mov
jo
sub
mov
add
lahf
ss
fld
adc
sub
xchg
sub
or
shl
xlat
out
adc
aas
hlt
cmps
icebp
mov
add
je
rol
mov
loopne
test
mov
(bad)
ret
dec
adc
shr
icebp
loop
xchg
aad
lds
jl
loopne
(bad)
jp
jecxz
xchg
pushf
aam
mov
int3
nop
shl
and
or
cmp
sub
push
in
pop
(bad)
in
fcom
(bad)
sub
jg
jle
movd
in
xchg
xchg
push
dec
sub
pop
mov
adc
sbb
sbb
in
push
repz
popa
or
mov
js
(bad)
into
call
dec
mov
in
loopne
sbb
pop
movs
jmp
scas
scas
cli
adc
pop
stc
addr16
test
xor
pop
push
shr
fwait
(bad)
or
lock
xor
rcl
inc
sar
test
cwde
or
js
stos
iret
mov
out
push
push
xor
sub
dec
adc
xchg
popa
ror
enter
scas
iret
ja
sti
shr
(bad)
int3
pop
cmp
lods
pop
neg
cmp
imul
int3
clc
mov
mov
pop
adc
xchg
call
xor
imul
jo
cmps
pmulhuw
leave
inc
xchg
and
shl
int
adc
repnz
cmc
(bad)
mov
in
mov
lds
mov
sahf
xor
pop
adc
stos
inc
outs
daa
or
add
loopne
das
test
leave
hlt
sub
adc
fisttp
mov
inc
ret
jecxz
inc
mov
xor
dec
jnp
and
jno
in
mov
icebp
lea
outs
fsub
sbb
cmp
ret
add
fisttp
repz
mov
dec
(bad)
inc
and
push
lea
push
outs
mov
lea
jae
mov
fldcw
or
xchg
cmp
sahf
popf
cmp
popf
cwde
add
cmps
fisttp
push
xchg
fstp
mov
jae
fisubr
cld
xlat
sub
add
ins
ret
pushf
rol
xchg
call
in
mov
aas
xor
inc
sbb
mov
fsubr
sbb
jb
mov
xchg
rol
mov
imul
push
test
lods
test
(bad)
pop
dec
loope
mov
xor
mov
out
sbb
in
pop
xor
sub
pop
cs
sub
sbb
call
cmp
xor
inc
mov
sti
stc
loopne
xchg
lock
pop
mov
sub
adc
mov
test
inc
(bad)
fld
dec
xchg
lods
jmp
ins
fimul
sbb
push
inc
add
fnstenv
and
in
sbb
xacquire
mov
sbb
add
pop
mov
xor
out
xchg
data16
gs
xchg
repz
mov
xor
in
dec
jb
aad
push
push
rcl
inc
sbb
mov
je
adc
scas
jne
arpl
mov
dec
dec
adc
out
call
xchg
imul
retf
das
mov
mov
rol
lds
pop
dec
mov
mov
pop
pop
dec
int
lock
cmp
sub
lahf
adc
mov
xor
and
sbb
in
enter
xor
lds
jge
jmp
adc
or
ins
or
aaa
stc
sub
test
xchg
pop
jecxz
into
push
mov
dec
inc
int3
pop
add
(bad)
push
fnstcw
push
mov
lods
jae
push
fs
nop
or
(bad)
push
mov
ss
dec
shl
and
aaa
mov
scas
or
mov
add
(bad)
pop
or
fwait
in
xchg
dec
jmp
imul
and
movs
add
jb
dec
aas
arpl
mov
sbb
(bad)
fidiv
js
clc
mov
add
out
xor
and
icebp
cmp
or
lea
mov
fadd
sub
xchg
sti
test
xor
les
loopne
inc
and
lahf
sbb
retf
push
add
aas
pop
adc
pop
jmp
jle
or
xchg
jmp
inc
jbe
jo
sbb
jg
int3
push
cmps
icebp
sub
call
repz
ins
jecxz
sahf
imul
mov
inc
adc
leave
dec
int3
hlt
ins
int3
test
mov
adc
mov
(bad)
repnz
ja
xchg
xchg
mov
je
out
mov
adc
scas
js
fisttp
frstor
sub
je
mov
fistp
(bad)
scas
dec
sbb
call
fsubr
xor
pop
int
loope
fwait
aaa
push
fbld
cmp
ror
cmps
test
mov
mov
mov
into
mov
or
dec
add
mov
jno
fcmovbe
je
mov
ret
jbe
cmp
jno
or
lods
or
cld
xchg
add
pop
push
loop
jmp
push
mov
(bad)
fstp
sub
sbb
sbb
cmp
jl
mov
pop
test
(bad)
xor
iret
int
movs
xor
out
ins
ret
sbb
add
pop
std
sbb
idiv
add
or
or
idiv
mov
inc
aaa
imul
and
pop
mov
ds
xchg
mov
mov
jecxz
fld
jb
inc
mov
push
jle
mov
jbe
pop
das
sub
inc
xchg
add
inc
push
pop
lods
push
xor
in
nop
mov
push
adc
call
mov
inc
push
push
jns
inc
xor
inc
jp
outs
mov
add
and
or
push
mov
or
outs
mov
push
neg
cmp
std
adc
inc
je
pop
sbb
jne
cmp
test
scas
sbb
bound
aaa
jne
push
or
iret
jns
ret
call
sti
inc
cmps
mov
jg
dec
stos
xchg
in
mov
retf
pusha
push
xor
aam
sub
lods
add
push
inc
loopne
lahf
and
or
and
int
sbb
adc
add
mov
sbb
inc
hlt
out
adc
inc
ret
shl
ret
(bad)
dec
xchg
call
cmp
lea
xor
xchg
fwait
mov
mov
loope
stos
daa
cli
shr
leave
cmp
test
out
dec
cmp
inc
sbb
mov
in
out
sahf
sbb
xchg
mov
adc
adc
sub
(bad)
mov
and
push
inc
cmp
out
iret
jb
mov
pop
pop
xor
mov
xchg
in
pusha
pop
ret
jl
in
test
jmp
sub
outs
or
jo
mov
lahf
adc
xchg
in
int3
mov
mov
fiadd
inc
repz
push
imul
sbb
sub
aam
repz
sbb
mov
scas
(bad)
rol
popa
pop
in
sbb
call
outs
out
cmps
rcl
dec
in
jecxz
push
push
jb
mov
mov
push
or
cli
or
push
outs
xor
xchg
fdivr
jb
xchg
xor
retf
lds
popf
dec
jge
popa
repz
popf
ficom
shl
das
into
out
mov
pop
mov
fadd
jno
call
or
cmp
sbb
inc
aaa
mov
mov
mov
movs
fwait
jb
mov
mov
add
in
nop
mov
pop
dec
sahf
jb
jbe
dec
add
daa
mov
(bad)
push
aas
xor
fbstp
jecxz
jecxz
cli
cmc
push
and
pop
or
les
cmp
aad
movs
push
inc
iret
sti
adc
pop
ins
in
fdiv
pop
jecxz
jmp
fiadd
out
das
(bad)
jne
dec
cmc
sub
ret
outs
mov
add
ins
repz
mov
data16
in
mov
test
arpl
sub
test
in
mov
retf
mov
push
jl
pop
pop
int
adc
bound
lods
add
xor
adc
pop
jecxz
mov
xor
add
sub
pop
sahf
js
mov
inc
inc
push
xchg
add
jb
call
pop
ror
inc
pop
ja
retf
sbb
not
sbb
dec
outs
(bad)
add
jl
inc
cmps
fild
sti
retf
or
push
jnp
loop
daa
mov
mov
add
xchg
push
retf
cmps
lock
stos
xchg
push
and
outs
in
dec
jle
xchg
lods
dec
jg
dec
pop
dec
jge
ret
mov
pop
xchg
fisub
adc
cvtps2pd
mov
adc
fiadd
shl
int3
ret
and
pop
sbb
jnp
dec
add
(bad)
adc
pop
and
loopne
jmp
pop
push
cmp
cwde
pop
jg
jecxz
rcl
dec
xor
jae
fisubr
pushf
dec
mov
loop
lahf
cmp
inc
call
call
fsubr
or
inc
test
mov
test
(bad)
repz
dec
inc
ror
push
inc
xor
mov
aam
or
pushf
ss
add
rcl
scas
cmc
neg
imul
setno
pop
add
jo
jmp
scas
sbb
stc
jp
or
pop
bound
ret
fist
sub
neg
sbb
jg
sbb
(bad)
cmp
and
or
add
jmp
mov
pop
add
fisttp
shr
(bad)
push
loopne
ret
fwait
xchg
js
dec
adc
test
add
add
rcr
add
call
int
daa
pop
scas
mov
cmp
(bad)
ss
cmc
sub
popa
fisttp
pop
ja
stos
jo
dec
inc
add
(bad)
and
pop
je
ret
jae
inc
mov
xchg
fidivr
stos
adc
or
jne
mov
mov
mov
pushf
cmp
inc
scas
movs
ret
or
sub
dec
pop
or
sbb
cli
jmp
fldcw
mov
std
lea
mov
js
jne
das
inc
nop
scas
pop
sbb
in
sahf
cld
xchg
mov
push
clc
jnp
mov
sub
inc
mov
(bad)
xchg
sub
jno
aam
es
scas
mov
test
jmp
or
repz
push
clc
mov
xchg
add
mov
in
xchg
mov
retf
test
stos
xor
bound
mov
cli
jbe
inc
lock
xchg
(bad)
mov
xlat
sub
sbb
scas
add
(bad)
(bad)
xchg
adc
retf
cmps
leave
push
cmp
jnp
xchg
daa
xlat
jns
jp
fs
sbb
and
shl
pushf
ds
push
jle
pop
shl
fbld
and
sbb
adc
mov
mov
push
pop
out
adc
jge
nop
push
or
out
sub
sub
mov
mov
in
call
movs
les
cmc
xchg
push
stc
inc
rcr
fnstenv
jmp
jmp
mov
xchg
enter
mov
pop
mov
xor
cmp
mov
and
retf
ins
mov
cli
cld
lods
or
fwait
dec
clc
add
stos
push
adc
mov
jg
cli
daa
repnz
les
int
sbb
mov
cmp
lods
test
ss
cs
outs
retf
push
lods
test
mov
fidivr
div
pop
pop
dec
lods
cld
cmp
scas
sbb
or
outs
int3
outs
sub
aas
lods
addr16
mov
(bad)
xchg
stc
mov
loop
push
sub
test
add
movs
or
ds
in
push
lsl
jmp
data16
xchg
(bad)
lods
mov
cdq
mov
push
xchg
adc
(bad)
xchg
das
cmc
push
jne
retf
mov
mov
loopne
cmp
cmp
mov
mov
cmps
xlat
sbb
les
and
and
xor
push
xchg
jae
lahf
stos
and
push
xchg
inc
jecxz
adc
mov
imul
cmc
retf
sub
(bad)
js
jb
mov
jl
cmps
ins
imul
and
test
xor
loope
movs
and
das
push
lea
jg
xor
(bad)
addr16
add
lock
mov
adc
sbb
es
jno
pop
xor
sbb
or
xchg
and
fsub
rcl
mov
sub
adc
cwde
mov
push
rcl
sub
sub
pop
pusha
(bad)
ins
gs
and
aas
fnstsw
imul
add
and
jmp
mov
mov
mov
add
mov
jmp
sub
mov
popa
push
xor
sub
in
ins
mov
call
or
in
(bad)
fcom
nop
adc
es
arpl
mov
and
mov
popf
add
ret
cmc
ds
call
es
cs
adc
jge
jo
cwde
pop
je
out
loopne
mov
and
cmp
(bad)
frstor
mov
ret
scas
or
add
adc
outs
dec
add
pushf
cmps
xchg
add
add
in
adc
out
mov
fistp
push
xor
ror
les
lahf
out
adc
sub
es
xchg
pop
cmp
lds
pop
repz
sub
jne
sub
push
cmp
jbe
call
addps
jb
jmp
sbb
enter
lds
ror
add
pop
test
jmp
xchg
lahf
pop
xchg
imul
xor
pop
sbb
and
icebp
jge
inc
xchg
mov
xchg
mov
adc
xchg
inc
jo
loopne
sub
xor
imul
inc
sbb
xor
xchg
hlt
hlt
nop
push
lods
xor
ss
ds
aam
add
xlat
or
dec
movs
or
lods
jge
add
add
icebp
sar
inc
mov
sbb
jg
cwde
scas
sub
jmp
(bad)
dec
bound
or
(bad)
jp
xchg
fwait
(bad)
pop
test
inc
mov
jbe
or
retf
inc
test
fdiv
popa
cmp
rcl
cld
(bad)
mov
test
dec
out
push
repz
scas
add
adc
shl
pop
cmps
stos
inc
ret
pop
and
stc
(bad)
mov
aaa
inc
xor
sahf
xchg
aaa
(bad)
out
pop
sbb
jmp
out
popf
loopne
cs
mov
push
cmps
mov
mov
test
adc
test
rcl
mov
sub
sbb
jg
xchg
cmp
jl
dec
je
pop
test
adc
xchg
fild
loopne
pop
cmps
js
(bad)
mov
fstp
mov
mov
dec
daa
out
mov
(bad)
out
xchg
add
jae
xchg
hlt
cmp
and
mov
xor
sbb
in
(bad)
xchg
xchg
cmp
fcomp
aaa
adc
inc
and
shl
fnsave
pop
or
xchg
fadd
dec
push
loopne
or
lds
fmul
or
movs
fstp
bound
lahf
adc
pop
hlt
jge
call
rol
sub
mov
dec
lods
push
add
gs
pusha
inc
call
test
jbe
adc
jae
lods
mov
ss
retf
cli
pop
xor
and
sbb
fcomp
arpl
sbb
in
mov
cmps
or
mov
mov
fbld
cmp
mov
push
call
xchg
pushf
adc
mov
mov
or
dec
or
xor
or
shl
mov
ret
pop
jnp
daa
std
out
inc
mov
repz
leave
xor
pusha
into
test
mov
mov
pushf
lods
adc
and
inc
retf
mov
add
xchg
arpl
mov
nop
ins
mov
add
or
dec
jae
sbb
out
jbe
dec
pop
xchg
adc
pop
push
push
xchg
arpl
mov
or
ins
popf
or
mov
test
pop
jmp
and
mov
icebp
clc
out
push
int3
daa
pop
push
(bad)
or
adc
dec
in
mov
sbb
out
dec
push
mov
punpckldq
in
adc
adc
and
sub
daa
or
shl
jp
icebp
loope
sub
mov
fs
xchg
nop
shl
add
(bad)
cmp
imul
shr
mov
lahf
fld
ja
dec
sub
call
mov
ror
daa
lea
pop
inc
mov
mov
mov
add
pop
stc
lock
dec
sbb
dec
jns
push
sti
cdq
(bad)
mov
ret
adc
or
jp
mov
ret
cmp
xchg
add
aaa
jle
(bad)
mov
cs
pop
push
in
pushf
cmps
mov
dec
xchg
(bad)
mov
mov
jnp
cwde
jg
sbb
rol
sub
ret
or
add
(bad)
mov
xor
aad
outs
loope
loop
mov
repnz
rol
into
pushf
jge
(bad)
pop
push
sbb
xor
or
push
into
lea
xlat
xchg
out
clc
inc
rcr
and
(bad)
stos
mov
adc
jecxz
mov
daa
(bad)
fdivr
jge
imul
ins
out
loopne
mov
add
ds
push
sbb
shl
(bad)
dec
repnz
lahf
call
xchg
outs
(bad)
adc
mov
into
es
cs
in
jge
jl
ins
or
inc
test
(bad)
cs
mov
xchg
xchg
push
retf
test
mov
leave
push
cdq
cmp
rcr
mov
(bad)
lahf
xor
mov
pop
icebp
xor
push
cwde
movs
jne
inc
das
push
sar
ret
push
outs
sti
xchg
popa
and
xor
dec
inc
xor
cmp
xchg
pop
sahf
ds
les
mov
dec
cli
repnz
push
out
mov
push
lahf
jo
fimul
out
add
iret
mov
jns
dec
loop
add
addr16
xor
outs
loop
scas
fisubr
sub
xchg
pop
jp
adc
aaa
popf
mov
adc
mov
inc
pop
xchg
movs
xchg
cmp
test
or
cld
dec
in
adc
pop
adc
inc
lds
push
jmp
sbb
add
push
mov
adc
popa
sub
or
add
xchg
test
icebp
sbb
loop
and
daa
inc
pop
push
bound
push
stos
repnz
pop
ins
add
sub
or
inc
fild
pop
xchg
arpl
cmp
jle
stc
daa
ffree
cmps
arpl
xchg
xchg
sbb
inc
xchg
jg
pop
or
push
loope
or
add
mov
test
adc
ret
cld
or
jl
and
pop
lahf
adc
imul
in
mov
sub
push
sbb
scas
xor
dec
(bad)
sar
mov
xor
mov
icebp
into
fstp
adc
inc
jle
xor
int
jle
daa
mov
push
jge
aad
xchg
enter
mov
popa
retf
pop
or
leave
pop
repz
xor
cmps
mov
outs
ror
and
and
jno
enter
int
pop
(bad)
mov
xchg
mov
mov
je
or
mov
fdiv
mov
adc
mov
inc
popa
sub
mov
inc
(bad)
js
ins
out
cmc
je
call
jo
fwait
call
cwde
push
pop
push
(bad)
mov
aad
pop
sbb
fwait
inc
fstp
loop
add
pop
mov
push
mov
aaa
push
fild
pop
ins
mov
adc
and
sbb
vcmppd
mov
cmc
std
out
mov
(bad)
mov
add
fisub
fistp
and
aad
xlat
jg
fsub
mov
mov
sub
inc
xchg
add
out
mov
lods
add
xor
jns
(bad)
and
xchg
daa
imul
outs
push
cdq
push
add
xor
mov
cli
hlt
sbb
stc
sbb
xlat
cli
mov
jmp
shl
pop
xlat
add
dec
gs
adc
js
outs
mov
inc
in
aas
jo
push
cmp
inc
icebp
cdq
push
fs
imul
xor
cmp
and
mul
imul
sub
jecxz
xchg
push
add
stos
xor
addps
sub
or
sub
mov
add
push
dec
ror
xlat
mov
pop
aam
cmp
xchg
or
mov
adc
push
cdq
pushf
(bad)
popa
retf
aam
pop
sbb
jnp
popa
sub
push
add
xor
dec
adc
push
aam
inc
in
push
adc
cmp
push
jnp
repz
lock
xchg
js
je
cmp
addr16
cmps
pop
ds
mov
and
in
jle
imul
jno
mov
pop
inc
leave
jg
shl
xchg
and
jmp
add
repnz
fcomi
scas
add
inc
push
fdiv
xlat
dec
cdq
pusha
aam
sar
cmp
bound
adc
scas
aas
add
pop
cmp
out
mov
loope
jecxz
fist
je
xchg
lods
or
shr
jns
test
xor
cmp
cmp
lea
retf
test
mov
push
arpl
jmp
cmps
imul
int
(bad)
xchg
jns
adc
inc
loope
xchg
ja
push
loop
xchg
dec
sar
xor
sbb
test
out
jo
arpl
icebp
cdq
hlt
scas
arpl
sub
cmps
scas
ja
dec
retf
push
cmp
sbb
fimul
mov
repnz
sti
loopne
fwait
jbe
jo
ins
(bad)
sbb
cmp
ins
fld
dec
stos
xchg
add
loop
xchg
push
fidiv
(bad)
nop
call
mov
mov
jns
xchg
xor
sahf
mov
push
ret
(bad)
aas
outs
clc
add
dec
iret
rcl
mov
int3
mov
retf
push
mov
jae
push
(bad)
popa
inc
pushf
fimul
xchg
out
add
pop
pop
ret
lds
aam
mov
(bad)
push
fisttp
push
xor
cs
loopne
test
aas
ja
aam
mov
jbe
and
lds
test
fldcw
dec
and
movs
mov
jp
test
dec
iret
mov
movs
inc
dec
cmp
and
leave
push
xchg
(bad)
pusha
cmps
dec
movs
jne
pop
mov
ret
mov
es
js
cmc
dec
fisttp
stc
mov
dec
pop
cmc
into
pop
pop
pusha
mov
adc
test
iret
aad
xchg
nop
push
cmp
jp
hlt
mov
retf
pop
sbb
js
inc
xchg
clc
or
add
or
fsubr
and
cmps
daa
adc
sbb
cmp
ds
or
inc
pop
rcl
push
or
in
dec
push
(bad)
in
xor
cmps
dec
retf
stc
jb
repz
xor
add
sti
mov
nop
mov
xchg
popa
jle
out
lahf
fidivr
mov
mov
xor
and
mov
xor
jmp
mov
push
cwde
push
dec
jmp
gs
into
fst
leave
jg
inc
pushf
and
sbb
hlt
add
cmp
inc
fst
(bad)
arpl
sar
xchg
or
mov
and
call
(bad)
hlt
(bad)
mov
adc
in
jl
test
or
mov
and
xchg
imul
popf
iret
call
clc
pop
mov
mov
adc
mov
jmp
test
pop
inc
adc
fstp
adc
xlat
cmp
sbb
jmp
lock
(bad)
fist
in
push
imul
pop
in
mov
push
(bad)
rcr
int3
stos
lahf
int
sub
jmp
mov
and
jo
or
rcl
lock
xor
sub
in
scas
mov
aam
int3
arpl
or
outs
int
mov
je
dec
jg
(bad)
pop
rol
inc
xor
out
repnz
into
outs
fisttp
cdq
or
jl
mov
inc
scas
pushf
inc
add
into
retf
adc
test
in
nop
repnz
sub
daa
lea
ja
sbb
call
jno
test
inc
inc
es
es
rcr
or
ror
lock
ror
pop
pusha
mov
(bad)
movs
and
cmps
jg
nop
xchg
adc
adc
adc
jge
dec
repz
ret
and
test
jns
jmp
lahf
jae
push
push
mov
(bad)
xlat
imul
test
loopne
test
out
mov
loopne
add
call
jne
call
shr
mov
cmp
mov
mov
into
fisub
js
inc
aaa
push
xor
fs
out
pop
push
(bad)
fidiv
inc
pop
out
mov
dec
jbe
popf
jns
loopne
test
push
adc
cmp
add
xchg
and
push
test
mov
add
loope
or
out
push
push
mov
dec
loop
jmp
into
jmp
xor
push
or
cmp
cdq
dec
mov
imul
sbb
call
pop
arpl
repnz
and
push
int
call
and
das
call
xchg
lea
in
stos
mov
adc
xor
mov
fwait
xor
mov
test
repz
xchg
adc
adc
push
fisttp
push
(bad)
jmp
push
pushf
mov
loopne
push
and
push
in
push
mov
inc
retf
adc
jmp
and
mov
mov
inc
rcr
xchg
xor
sub
xlat
xchg
xchg
fst
into
cld
add
cdq
sbb
ss
cmp
push
(bad)
jmp
repz
mov
jae
add
in
jmp
dec
inc
daa
pop
mov
jmp
sub
push
jmp
push
call
mov
cli
imul
or
inc
add
mov
adc
retf
and
pop
or
fldenv
mov
(bad)
cmp
adc
xchg
paddsb
imul
leave
cmp
inc
bnd
fldcw
retf
mov
rcr
ds
fidivr
add
sbb
add
jmp
and
lods
xor
mov
pop
push
mov
sar
mov
pop
mov
sbb
out
push
(bad)
mov
fiadd
sbb
in
daa
cmp
fst
xchg
fadd
cmp
adc
and
jbe
rcr
call
add
inc
xchg
mov
mov
dec
mov
inc
imul
repnz
push
and
pop
cdq
fwait
add
inc
mov
or
repnz
mov
xchg
adc
inc
xor
int3
aas
in
pop
and
push
adc
adc
fisttp
sub
test
inc
or
add
xchg
xor
xchg
jle
in
and
inc
add
pop
ret
inc
sub
jae
(bad)
xor
sub
loope
in
cmps
add
bound
sahf
fwait
xchg
xchg
jl
dec
aaa
fucomp
sub
pop
fnstsw
pop
jno
je
pop
sbb
loopne
mul
or
sbb
or
jle
fimul
das
add
push
or
not
cli
ret
dec
shl
aas
sub
es
into
in
aaa
sbb
ds
xchg
push
call
mov
jg
ins
dec
xchg
iret
jbe
or
(bad)
idiv
cmc
lock
aam
xchg
lds
cmps
adc
inc
out
mov
test
pop
add
outs
jmp
cmps
xor
jecxz
push
mov
bnd
data16
les
push
in
xchg
xchg
aam
je
cmp
adc
mov
push
mov
dec
in
pop
out
ret
in
jns
mov
fcomp
fadd
cmps
jbe
mov
mov
inc
jnp
icebp
pop
xchg
les
mov
retf
mov
cmps
int
jecxz
inc
dec
in
enter
cmp
mov
call
aam
mov
jnp
inc
xor
shr
into
jns
stos
inc
int
mov
add
lds
adc
test
pop
adc
mov
mov
mov
ret
cmp
sbb
aam
int3
fs
in
xor
lods
dec
dec
jg
test
ret
pop
retf
fucomip
sbb
fs
mov
add
scas
hlt
fadd
mov
dec
pop
shl
arpl
xchg
push
dec
mov
and
rcr
jecxz
stos
jmp
sub
lahf
jo
and
mov
and
ins
pushf
push
iret
push
in
cmps
push
(bad)
cmp
ja
aam
sbb
dec
(bad)
pusha
cmps
mov
in
repnz
inc
adc
or
in
sub
stos
arpl
fld
xchg
sbb
cmp
ret
aam
sbb
push
inc
mov
adc
fdivr
maxps
mov
fs
pusha
adc
in
add
jle
add
xchg
test
pushf
dec
(bad)
jg
fidiv
aam
and
add
es
inc
bswap
push
(bad)
jmp
jne
repnz
xchg
out
mov
and
sbb
sbb
mov
mov
jo
add
and
inc
out
int3
sub
int3
jns
les
pusha
pop
xor
mov
dec
cmp
sahf
push
xchg
sbb
sbb
sbb
inc
hlt
push
jg
cmp
push
cli
jmp
(bad)
jne
pop
dec
test
sub
mov
iret
adc
dec
jns
jmp
movs
int3
mov
ja
push
cmc
mov
xchg
jbe
dec
adc
out
ins
out
outs
mov
(bad)
in
add
loope
in
jno
(bad)
jp
mov
retf
ret
push
sbb
aam
rol
mov
xchg
push
nop
retf
(bad)
cmp
push
inc
cmp
shr
sub
xchg
xor
mov
inc
dec
push
stc
push
es
pushf
sub
mov
pop
adc
inc
aaa
and
outs
or
aad
xchg
inc
push
fisubr
es
shr
or
pop
sti
push
repnz
sub
ja
push
pusha
jmp
ret
add
fisttp
adc
ins
outs
add
mov
mov
call
jge
ins
push
or
mov
ds
in
test
sahf
mov
stc
inc
push
scas
stos
ins
add
sbb
das
gs
xchg
gs
cmc
dec
scas
div
sub
or
xchg
mov
xchg
ins
and
(bad)
jle
out
das
ficom
push
mov
push
and
add
dec
sar
sub
mov
or
ror
mov
cmp
push
out
js
mov
xor
fsubr
pop
jne
mov
add
les
adc
and
fsub
test
lods
jmp
inc
cld
daa
cmps
adc
(bad)
xchg
(bad)
xchg
test
pop
xchg
int3
fwait
neg
aam
out
cmp
cmp
jno
cmp
inc
mov
lahf
jle
inc
stos
movs
sbb
xor
das
test
mov
sbb
leave
or
jmp
inc
clc
leave
inc
popa
pop
sbb
add
addr16
sar
jg
(bad)
fs
sbb
mov
adc
jnp
mov
mov
push
lock
cli
cdq
aaa
mov
(bad)
and
test
xchg
dec
mov
adc
in
fld
nop
jmp
adc
ds
inc
mov
in
iret
xor
fs
jmp
pop
xor
inc
sbb
hlt
fidivr
test
retf
or
loopne
xchg
rcr
or
xchg
stos
adc
sar
adc
psrlq
sub
or
mov
mov
and
cmc
mov
mov
bound
call
inc
dec
mov
mov
js
cli
xchg
xchg
pop
es
xor
shl
imul
pushf
ins
mov
movs
imul
data16
sbb
xor
scas
ror
xor
add
cli
xchg
push
sub
and
mov
iret
popf
aad
push
dec
sbb
adc
mov
std
add
cmp
push
sbb
loope
adc
dec
and
adc
fs
fs
jecxz
and
sbb
daa
sbb
mov
int3
xor
mov
pop
das
cwde
(bad)
scas
fs
mov
inc
push
mov
adc
add
jbe
inc
dec
arpl
fistp
or
call
add
push
lahf
cs
(bad)
mov
aam
loopne
sbb
dec
pushf
mov
pop
push
jns
xchg
push
cmp
popa
jo
dec
jae
stos
pop
test
cmps
icebp
cmps
add
pop
pop
ror
inc
or
dec
xchg
ja
lods
daa
pop
pop
fild
and
aam
idiv
adc
ins
push
arpl
push
pop
add
pop
xchg
add
mov
push
jg
(bad)
mov
xlat
xchg
inc
push
mov
dec
push
fstp
scas
fcomp
mov
jp
out
cmps
clc
movs
pop
xor
cmp
cld
xor
and
movs
xor
ret
movs
mov
(bad)
repnz
js
sub
das
mov
aaa
sbb
and
mov
test
xchg
mov
scas
pop
hlt
adc
mov
test
aad
pop
repz
mov
push
mov
jmp
iret
nop
je
add
jl
es
test
es
dec
mov
lods
sub
aas
(bad)
int3
ror
inc
sahf
inc
mov
and
imul
sub
aas
lods
jbe
fwait
jmp
push
call
and
sbb
data16
daa
mov
test
dec
aam
out
cld
pop
inc
iret
out
std
xchg
daa
jb
pusha
jnp
and
je
(bad)
and
lds
jo
or
push
test
pop
push
xor
(bad)
adc
scas
inc
(bad)
out
push
dec
push
bound
jmp
outs
jno
ret
push
rol
inc
arpl
sti
add
xchg
dec
jmp
rol
jge
and
push
aaa
adc
or
stos
add
rcl
pop
mov
loope
ds
loope
xbegin
and
es
pusha
leave
dec
push
add
xchg
hlt
pop
(bad)
mov
mov
dec
adc
out
push
nop
or
sub
aaa
jle
outs
outs
inc
imul
xchg
push
pop
jle
adc
in
fstp
jmp
xchg
in
enter
imul
and
push
aaa
imul
push
aad
aas
or
jle
add
in
pop
fdivr
or
and
ins
hlt
mov
loop
pop
sub
cmp
pop
cmps
pop
call
loop
dec
mov
pop
xor
(bad)
jmp
push
pop
repnz
into
mov
fmul
dec
daa
dec
dec
sar
and
mov
xchg
dec
dec
inc
js
mov
repz
or
add
sbb
lea
pop
in
lahf
and
sbb
push
stos
inc
dec
mov
in
fsub
pop
enter
mov
clc
mov
and
jle
cmp
xor
gs
xchg
add
(bad)
push
icebp
inc
cdq
gs
mov
ds
push
aaa
cmp
jge
push
fcmovbe
mov
inc
pop
sub
outs
xor
retf
mov
cmps
xchg
xchg
loop
fidivr
pop
jl
ret
or
cmp
jbe
test
in
inc
or
ds
add
stc
popf
xor
xor
dec
sbb
xchg
and
loopne
inc
and
fsubr
test
cwde
jge
dec
js
xchg
popf
rcr
jnp
retf
sub
xlat
lds
cmp
pop
jno
shl
movs
push
sbb
out
pop
movs
nop
or
pop
aad
xchg
pop
and
cmc
cmps
push
popa
lahf
xchg
dec
shl
pop
int3
mov
jno
addr16
test
ficom
adc
out
cmps
fbld
repnz
cmp
bound
ror
sahf
sbb
repnz
(bad)
push
ds
inc
fild
dec
lea
test
adc
pop
repnz
jge
add
rcl
out
pop
(bad)
shl
cs
clc
push
dec
mov
repz
mov
enter
or
xor
pop
fwait
aas
neg
cs
fyl2xp1
call
dec
retf
popa
ins
fcom
push
stos
mov
call
mov
sbb
mov
pop
or
pop
das
and
cwde
gs
sbb
daa
xor
call
sbb
stc
or
mov
stos
fistp
mov
aaa
cmp
int
jmp
retf
push
cmp
fdiv
pushf
jmp
inc
loop
push
mov
cmp
loop
pop
loop
test
add
into
xor
int3
repz
and
and
sbb
fistp
push
fs
rcl
jmp
sbb
lahf
stc
jo
cmps
xchg
mov
les
mov
sbb
call
sub
mov
mov
mov
dec
sub
data16
jno
shl
xor
repz
int
ds
mov
aaa
sub
push
add
ret
je
loope
xchg
add
push
jmp
dec
test
test
push
mov
pusha
es
push
add
fcomp
repnz
loope
dec
retf
jbe
adc
add
jge
add
nop
mov
push
jo
(bad)
mov
xchg
out
jno
sub
ss
iret
mov
mov
ds
inc
je
scas
mov
add
test
xor
or
mov
or
stc
mov
mov
mov
shr
xor
or
adc
into
std
pushf
(bad)
je
push
xchg
out
mov
xlat
pop
in
imul
loopne
cmps
pusha
jp
fcomp
xchg
out
jne
push
inc
int3
or
xor
(bad)
mov
in
jns
cmp
cmp
lock
push
dec
sahf
test
xchg
into
xchg
jns
std
loop
fstp
inc
jmp
inc
ins
sub
push
lods
in
push
xchg
jecxz
dec
outs
add
jmp
sbb
mov
push
aaa
movs
mov
in
cwde
sub
sub
or
xor
inc
lods
push
or
arpl
mov
pop
push
pop
jg
push
std
push
je
xchg
pop
cwde
nop
mov
popa
(bad)
or
jg
xchg
pop
fcmovnb
pop
inc
adc
add
cwde
or
mov
imul
or
bound
mov
xor
mov
xchg
scas
xlat
aaa
mov
xor
movs
xor
hlt
jg
les
jno
pushf
push
sub
fst
dec
bound
add
push
push
ret
add
mov
test
add
adc
mov
cmc
mov
mov
mov
jbe
dec
sub
lods
imul
sbb
inc
cli
movs
das
fcmovnb
out
icebp
xor
out
pushf
sahf
inc
sub
pop
sbb
sahf
cmps
or
push
(bad)
xor
push
xchg
mov
sub
inc
pop
loop
xchg
in
leave
rcr
and
inc
sbb
es
sub
jmp
adc
add
cs
and
bound
mov
mov
cmps
cmps
scas
fidivr
test
enter
push
outs
fld
xor
and
in
jge
add
add
xchg
push
retf
into
sti
sbb
lahf
xor
dec
fcmovnbe
(bad)
sti
pop
mov
in
or
mov
test
dec
or
mov
leave
movs
mov
mov
loopne
jnp
cmp
nop
cld
icebp
jmp
cmp
(bad)
xor
lods
mov
ins
ja
inc
pop
test
cmps
pop
fisubr
jns
lahf
and
mov
mov
(bad)
repz
cmp
sub
cld
fidivr
cdq
sub
adc
or
(bad)
add
icebp
das
pop
add
fsubr
sbb
cwde
cmp
cmps
and
inc
mov
sub
xchg
aaa
leave
jp
jns
(bad)
sub
aam
sbb
sub
lods
jno
std
cmps
xor
ds
dec
shr
out
repnz
cld
adc
adc
mul
(bad)
jne
data16
or
ret
data16
pop
pusha
out
mov
movs
sub
mov
leave
jbe
or
and
jno
je
cmps
stos
xor
stos
icebp
popa
and
and
std
adc
pop
xchg
and
sub
into
cdq
ficom
mov
shl
mov
arpl
fbstp
xor
push
adc
data16
and
xchg
add
and
inc
addr16
ret
add
jo
data16
mov
cmp
in
sub
iret
and
add
pop
mov
or
sbb
pop
lods
cli
pop
movs
inc
out
mov
jb
inc
sub
mov
push
repnz
out
mov
add
jl
sub
or
or
leave
jmp
xchg
imul
aaa
je
inc
jecxz
call
pop
dec
stos
xchg
ja
adc
mov
fcomp
scas
(bad)
test
mov
ss
mov
mov
push
cmps
xchg
cmp
adc
or
movs
jbe
pop
sub
(bad)
dec
adc
fistp
mov
jno
xchg
and
in
xor
xor
inc
jle
imul
jno
test
mov
in
imul
jns
inc
fld
jne
in
gs
sahf
ret
jae
clc
test
outs
cmp
and
sar
xor
jge
or
pop
(bad)
jmp
cmp
(bad)
int
call
repnz
and
fs
xor
aas
mov
jl
sbb
pop
cmps
fisttp
pop
mov
(bad)
cld
(bad)
(bad)
ror
imul
mov
pop
adc
adc
xchg
sti
das
(bad)
jae
sbb
adc
imul
shr
(bad)
sbb
mov
jae
cmp
cmp
clc
push
and
fwait
add
retf
mov
test
nop
mov
cmp
ins
xchg
xchg
mov
mov
loope
ds
push
mov
idiv
sahf
inc
int
cmp
xor
hlt
mul
mov
stc
sub
clc
jns
jb
sbb
push
xchg
dec
mov
sysenter
jmp
adc
adc
das
gs
or
ds
sub
lds
std
push
in
push
mov
aas
in
mov
mov
or
outs
push
xchg
inc
sar
nop
mov
inc
inc
or
inc
and
add
cmp
aad
les
xchg
stos
inc
fldln2
stos
ds
mov
into
push
and
push
pop
arpl
call
mov
sub
in
add
xchg
mov
dec
arpl
push
call
gs
div
dec
or
pop
sti
hlt
jmp
jg
push
adc
push
mov
adc
jecxz
push
out
popf
cmps
mov
popf
loopne
xor
data16
adc
js
fs
int
xchg
jno
fs
sbb
cwde
xchg
popf
sahf
pop
inc
shl
(bad)
pop
clc
dec
rcl
xchg
fwait
mov
sbb
pop
push
ss
xor
ins
inc
imul
pop
cli
jae
mov
sub
adc
test
das
mov
popa
test
mul
dec
iret
addr16
and
add
ret
loop
dec
and
dec
push
not
ds
idiv
in
lea
cmps
cmp
mov
add
sbb
push
pushf
or
retf
jae
push
mov
mov
(bad)
or
sahf
addr16
out
inc
push
iret
jae
jmp
xor
or
mov
das
mov
mov
jbe
jae
cld
pop
je
movs
or
push
cmp
mov
dec
ficomp
(bad)
in
xchg
push
cmp
imul
and
push
stos
and
test
addr16
adc
push
mov
xor
mov
dec
pop
cmp
sub
repnz
sbb
sbb
out
jmp
mov
inc
into
and
cmps
mov
add
ror
and
cs
loopne
fldcw
sbb
rcr
push
loopne
int
sbb
adc
cmc
movs
movhps
stc
jp
adc
out
cmc
xchg
stos
mov
ret
jae
aas
cwde
mov
pop
push
xchg
stc
sti
push
repz
jmp
jmp
retf
xchg
in
push
xchg
jne
lock
or
fidivr
fsub
xchg
test
pop
out
or
lock
jns
add
sbb
jne
or
popf
cmp
stc
xchg
sbb
mov
and
mov
sbb
retf
in
cli
clc
mov
push
fnop
push
pop
push
das
jnp
loope
or
cs
dec
sbb
push
stc
out
push
dec
xor
sub
or
and
xor
mov
xor
aaa
add
add
jmp
fsub
mov
sbb
cwde
push
ins
push
jns
mov
mov
jl
outs
ins
scas
or
cmp
scas
dec
je
xlat
in
lods
push
sub
or
and
xchg
xchg
push
mov
ins
adc
add
jecxz
sub
push
adc
inc
mov
cmp
outs
(bad)
and
iret
pop
call
or
mov
jb
add
lock
clc
xchg
cwde
jecxz
sahf
out
dec
dec
sbb
jbe
pushw
mov
int
arpl
cmps
or
jg
adc
lds
pop
xchg
cmc
add
adc
xchg
lahf
push
dec
rcl
scas
int3
mov
je
data16
mov
dec
call
pop
cmp
cmps
imul
xchg
(bad)
out
mov
addr16
in
dec
int
(bad)
dec
in
paddd
or
sbb
dec
scas
or
lods
mov
xchg
fwait
xchg
mov
xlat
jg
(bad)
std
jmp
outs
sbb
ror
pushf
mov
sub
inc
out
lods
push
aaa
jnp
(bad)
es
jne
fiadd
std
sbb
mov
enter
daa
and
push
push
das
jmp
adc
out
or
jmp
mov
lea
(bad)
cmp
lea
daa
and
add
fldcw
leave
jp
nop
or
cmp
sub
jle
addr16
cmp
add
mov
dec
cmps
push
arpl
dec
ja
push
cmp
xor
outs
sub
pop
jecxz
pop
pushf
add
cmp
fldcw
popf
jecxz
push
(bad)
stc
or
out
mov
adc
jbe
arpl
std
out
hlt
jbe
push
imul
fld
push
(bad)
mov
sti
mov
sbb
stos
fs
aaa
fmul
mov
dec
xor
lds
mov
lods
xchg
fs
add
xor
pushf
mov
scas
aaa
pop
sub
inc
dec
dec
inc
jecxz
sub
push
mov
lods
scas
ja
loopne
mov
pop
inc
loope
adc
push
dec
and
sbb
daa
push
arpl
adc
mov
into
data16
fnstsw
mov
and
and
je
mov
int
lock
cmp
popf
mov
ins
cmp
push
daa
xchg
dec
pop
inc
pop
jae
(bad)
or
out
sub
(bad)
sti
jge
xchg
icebp
aas
xchg
aaa
test
jge
dec
loopne
out
xlat
xchg
dec
sub
sbb
out
cmp
cdq
sub
xor
pop
inc
xchg
dec
mov
inc
std
adc
in
fidivr
shl
pop
inc
sbb
fbld
xor
or
push
and
mov
out
push
outs
adc
jo
out
jg
fmul
cmc
in
ds
loope
bnd
jmp
pop
cmps
int
mov
lock
xlat
sub
bound
cmp
push
div
lods
inc
xchg
clc
movs
cs
and
ja
mov
cmp
nop
pop
xor
cwde
pop
push
lds
(bad)
xchg
pop
sbb
jns
push
push
xchg
push
xor
add
dec
and
xor
adc
in
(bad)
je
in
imul
xor
in
loope
pop
(bad)
lahf
xchg
pop
pop
aaa
mov
jbe
dec
mov
repnz
shl
mov
in
push
out
popf
mov
lock
and
(bad)
aam
xchg
test
into
ret
mov
pop
mov
lea
add
add
bswap
jmp
jge
nop
shl
cld
popa
inc
dec
retf
lahf
push
ffreep
das
(bad)
int3
pop
inc
arpl
call
push
pop
cmp
jne
cld
dec
mov
sub
popa
inc
and
cmp
mov
mov
xchg
sub
push
daa
imul
push
sub
xchg
dec
dec
fdiv
sub
fimul
ror
sub
mov
cmc
fistp
pop
pop
mov
cld
js
repz
ins
movs
push
int
add
adc
(bad)
test
retf
and
xchg
jns
mov
inc
or
lds
pop
jle
or
adc
cs
cmps
leave
or
fs
mov
jae
loope
popa
ds
xchg
push
test
add
jb
dec
imul
xchg
mov
shl
pop
aaa
sub
rcl
movs
adc
push
dec
jl
sub
lahf
mov
fsub
fst
sahf
nop
inc
sub
(bad)
ins
adc
cmp
add
mov
sbb
aad
shl
ins
mov
popf
mov
lahf
out
jae
test
mov
retf
(bad)
and
(bad)
(bad)
enter
enter
stos
or
pop
jb
mov
nop
and
dec
hlt
out
push
daa
cmps
movs
loopne
popf
fild
adc
sbb
jb
or
xor
fldenv
call
mov
cdq
ins
dec
iret
pop
call
repz
jns
cwde
dec
and
stc
imul
gs
sbb
mov
push
pop
add
xor
retf
jo
inc
mov
(bad)
in
ja
mov
inc
inc
(bad)
jg
xchg
sub
cdq
test
ficomp
mov
adc
pop
iret
inc
push
jg
mov
out
xchg
inc
push
out
nop
sar
loopne
clc
(bad)
jns
sbb
pop
mov
ins
ins
test
addr16
add
mov
popa
mov
popf
sub
fs
sti
aad
(bad)
mov
in
cwde
out
rcr
jl
ins
xchg
aam
(bad)
pushf
in
addr16
das
xchg
int3
movs
mov
dec
cli
in
xlat
pop
ds
icebp
leave
xlat
scas
push
inc
jb
push
or
mov
(bad)
jmp
pop
xor
sbb
ret
xor
sub
pop
loope
sub
ret
add
sub
(bad)
loope
in
mov
ret
push
mov
into
and
mov
fs
xor
mov
xor
jecxz
jg
pop
dec
cdq
cli
cmps
xor
mov
push
sahf
cmp
ret
aam
les
repnz
mov
fdivrp
sbb
jmp
mov
mov
repz
mov
push
add
aad
sub
sbb
and
fsub
jl
ds
cmp
(bad)
jg
mov
sub
stc
cmp
int3
je
inc
pusha
inc
jns
xchg
pop
jnp
xor
test
mov
jnp
xchg
rol
or
idiv
inc
jmp
push
lock
push
pop
xchg
push
jge
jnp
mov
cdq
ret
xchg
jl
dec
movs
push
inc
loop
scas
pop
inc
sub
fchs
xor
mov
out
or
jns
sub
scas
sbb
stos
lods
xchg
repnz
and
inc
xlat
sahf
movs
cmp
aad
add
xchg
daa
punpckhwd
push
mov
inc
xchg
ins
or
das
stc
stos
xchg
add
pop
mov
cld
add
pop
xchg
jecxz
pusha
aaa
xchg
icebp
inc
dec
push
lock
jmp
ins
stos
dec
dec
pop
cmps
ss
mov
mov
mov
ret
stos
pop
mov
not
inc
jbe
imul
ss
lock
ficom
sti
xchg
idiv
scas
call
add
(bad)
xor
pop
jbe
mov
mov
das
inc
adc
imul
ret
pop
and
dec
ret
sbb
pop
inc
pop
fimul
ret
cmp
in
lods
dec
xor
sti
add
(bad)
mov
nop
push
shl
lods
cwde
aam
push
and
hlt
pop
(bad)
and
enter
gs
sub
lods
lods
(bad)
inc
cs
add
cdq
cwde
iret
call
adc
test
arpl
cmc
imul
mov
retf
pusha
nop
xchg
popf
popa
out
movs
outs
or
push
or
cmp
add
xor
inc
clc
ror
dec
ins
or
jno
xlat
and
adc
scas
outs
pop
sti
popf
sahf
icebp
adc
and
enter
jnp
daa
push
repnz
push
test
pop
shl
fs
dec
jnp
pop
test
jg
push
or
iret
leave
imul
mov
pop
mov
mov
cs
pop
or
xor
and
pop
pop
push
pop
push
cmps
and
mov
adc
adc
add
mov
sbb
ret
std
mov
mov
mov
add
sbb
dec
scas
loope
jl
cmp
test
(bad)
comiss
push
dec
adc
int3
or
or
pop
mov
into
mov
es
dec
inc
and
lock
pushf
sbb
jae
mov
pop
pminsw
sbb
das
cmp
cld
add
pop
mov
ret
pop
std
imul
popfw
push
scas
xor
dec
mov
leave
mov
jge
mov
sbb
xor
cwde
or
(bad)
pop
add
sar
cmps
dec
jl
cmp
popa
sti
int3
push
call
repz
cmp
add
in
xchg
lock
sub
mov
pop
(bad)
rol
mov
xchg
dec
shl
mov
dec
jno
mov
mov
pop
adc
mov
add
or
dec
xor
push
call
cmc
inc
cmps
xor
imul
adc
adc
rcl
inc
jecxz
and
xchg
and
scas
out
pop
scas
xor
(bad)
xchg
jb
cs
and
adc
sti
mov
popa
mov
(bad)
jmp
add
and
jl
jmp
mov
scas
pop
out
add
add
cmps
jmp
adc
fs
push
popa
jle
mov
jno
hlt
gs
loop
adc
ja
das
cmc
test
push
sahf
icebp
push
jns
test
jbe
aad
xchg
sbb
movs
fisubr
jmp
jnp
mov
fcom
and
data16
fcmovnbe
pop
sub
mov
add
jae
push
pop
cmc
jb
adc
lahf
jp
xor
popa
mov
dec
pop
adc
mov
(bad)
cs
jbe
adc
xchg
ret
xor
mov
jns
jmp
adc
adc
jbe
jns
lods
mov
or
(bad)
fadd
jge
xor
outs
xchg
out
in
daa
sub
inc
and
jmp
clc
repz
ins
(bad)
mov
sbb
cmp
mov
cmc
push
dec
es
pop
sub
inc
jle
pop
cwde
fadd
and
test
pop
cli
bound
push
iret
and
aam
shl
loope
and
xchg
fnsave
int3
das
aad
nop
lahf
pop
xor
xchg
add
dec
inc
cmp
jge
stc
jmp
lahf
gs
mov
mov
sahf
loopne
cli
daa
and
inc
sub
into
in
jge
add
or
push
mov
mov
xchg
mul
cs
jns
inc
stc
inc
adc
dec
aaa
call
ja
lock
add
mul
mov
mov
mov
adc
ror
aas
int
sahf
adc
loop
adc
ret
test
pop
pop
sbb
fwait
mov
pop
sub
cmp
pop
mov
mov
and
xchg
sar
loope
cdq
sbb
push
jg
cmps
jo
pop
dec
fcmovnu
aaa
xlat
mov
dec
sub
cmp
ins
pop
push
sub
psubsb
push
push
in
(bad)
out
sub
xor
test
out
ds
xor
jo
rcr
loop
inc
dec
call
or
jle
sbb
popf
and
enter
stos
push
sbb
imul
xchg
mov
(bad)
les
sub
lock
(bad)
js
dec
call
bnd
ins
sub
cmp
mov
aam
mov
(bad)
cmp
sub
jle
xchg
(bad)
jb
mov
in
imul
aaa
or
mov
fmul
aam
pop
push
enter
ja
or
cmp
mov
add
iret
or
iret
mov
push
mov
pushf
inc
out
scas
jns
sbb
imul
test
or
call
mov
jno
movs
out
rol
ds
in
add
and
jne
mov
push
out
std
shl
mov
sub
addr16
int
stos
inc
jne
jge
sub
jo
leave
sahf
push
sbb
leave
js
xchg
int3
sub
xchg
loope
mov
test
gs
(bad)
jno
dec
ins
or
sbb
push
outs
(bad)
scas
sbb
jmp
ins
cmp
out
xchg
mov
adc
xor
push
mov
out
cmp
sub
movs
bound
popf
repz
ficomp
shl
sub
dec
push
sbb
add
data16
pop
pop
in
add
out
jge
pop
jnp
mov
int
push
lock
addr16
lahf
and
xor
ins
inc
sbb
ins
push
inc
sub
xchg
sbb
ficomp
xchg
push
shl
cmp
leave
push
call
out
push
and
ror
mov
mov
mov
mov
rcpps
dec
lds
xor
call
sub
inc
mov
pusha
cdq
test
mov
repnz
push
rcl
add
shl
(bad)
mov
mov
adc
sbb
hlt
and
or
jbe
loope
push
cwde
sbb
pop
repz
(bad)
rol
ret
jmp
dec
fbld
icebp
les
adc
mov
loope
mov
and
jmp
loop
sbb
xchg
and
jg
mov
fdiv
ins
add
fidivr
data16
cmp
dec
cwde
jae
pop
jle
cwde
test
cmps
clc
inc
enter
sbb
ret
jmp
fucomip
aas
int
sti
inc
stos
mov
inc
into
jg
inc
cwde
cli
inc
les
jne
jae
lahf
fcom
pop
mov
hlt
xor
adc
retf
dec
loopne
jp
(bad)
hlt
sbb
ins
lock
lds
aaa
push
xchg
movs
jge
or
and
push
sti
push
mov
repz
jo
data16
and
xchg
into
in
(bad)
jmp
frstor
imul
popf
pop
add
inc
sbb
push
movs
sbb
push
xor
pop
cmp
repnz
pushf
mov
xor
or
xchg
jge
and
inc
out
push
jmp
(bad)
stc
sahf
nop
inc
loope
fnstsw
add
jmp
xor
rcr
mov
sbb
pop
call
popf
add
aaa
or
cs
mov
loop
mov
add
cdq
sbb
ret
pushw
mov
in
pop
xchg
cmp
jle
cmp
pusha
mov
in
lock
into
xor
cmps
mov
inc
call
in
pop
cmp
xchg
push
je
sub
inc
dec
push
ret
iret
mov
pusha
sbb
mov
inc
imul
mov
ja
and
dec
or
test
sbb
push
xchg
das
ins
and
mov
aad
clc
int
xchg
pop
je
dec
jno
imul
sub
cmp
hlt
data16
sbb
xchg
jne
sub
mov
sbb
shl
shl
addr16
jnp
mov
push
or
fist
and
jb
mov
inc
repnz
xor
in
dec
cwde
mov
jp
lods
int3
fwait
and
retf
rcl
mov
xor
sub
jns
retf
repnz
inc
nop
add
shr
arpl
add
cs
and
dec
jnp
cdq
stos
add
dec
push
rcr
push
rol
retf
in
cmc
push
sub
mov
push
jl
mov
mov
test
pop
cwde
push
mov
call
xor
rcl
aad
(bad)
mul
jecxz
adc
sub
jno
(bad)
jno
shr
ror
push
pop
imul
mov
cmp
scas
movs
dec
xchg
aam
mov
or
mov
outs
cmc
mov
shl
adc
(bad)
(bad)
jb
dec
mov
xor
daa
mov
int3
xor
ret
pushf
push
shl
xchg
add
ror
mov
xor
js
(bad)
adc
push
imul
and
cmp
(bad)
div
mov
(bad)
push
dec
lds
js
das
xor
add
mov
shr
sub
mov
mov
jge
mov
mov
cmps
cmps
inc
call
fdiv
xchg
mov
push
mov
sbb
push
sbb
test
jp
fsub
push
jmp
push
or
push
mov
not
mov
sbb
jae
pop
repnz
adc
jle
bnd
mov
clc
pop
mov
sahf
in
out
push
push
int
jmp
or
jno
sti
push
(bad)
call
je
add
ret
sar
add
cdq
(bad)
xchg
sbb
sahf
or
mov
fsubr
fld
test
arpl
mov
popf
or
out
mov
pop
loopne
push
clc
push
cmc
push
ins
movs
cld
mov
push
scas
movs
test
test
fwait
or
add
sub
js
push
jnp
add
lods
rol
in
mov
(bad)
adc
into
inc
and
fidivr
mov
pop
push
and
ror
xor
push
mov
pop
mov
xchg
fst
lods
add
inc
sub
popf
xor
dec
pop
mov
push
gs
xchg
lods
int
rol
xor
sbb
in
dec
mov
in
out
jnp
and
pop
pop
ds
cmp
and
push
ror
mov
(bad)
ret
(bad)
cmp
or
or
lea
xchg
dec
jnp
test
xchg
push
push
ja
mov
pop
jmp
adc
(bad)
pop
fs
xor
dec
(bad)
mov
xlat
(bad)
data16
xor
(bad)
call
or
inc
into
daa
ja
out
mov
lahf
pop
js
or
mov
lods
cdq
jae
adc
mov
mov
fnstsw
cmp
and
jae
and
jg
lods
out
je
push
fisubr
cmp
cmp
cs
fcom
pop
add
lds
aad
and
or
pop
add
jmp
scas
adc
cdq
xor
add
mov
xchg
rol
and
inc
and
adc
or
mov
or
cmps
jbe
mov
je
sbb
jl
enter
cli
stos
push
test
sub
jmp
call
inc
push
or
inc
dec
xor
sbb
or
inc
or
push
int3
lods
add
stc
or
sub
cmp
dec
inc
popa
loope
cmps
xchg
leave
outs
and
data16
cmovle
sbb
into
sbb
cmc
and
pushf
inc
push
ds
add
in
call
xlat
inc
push
dec
(bad)
(bad)
lods
mov
cmps
scas
shr
and
inc
inc
dec
cdq
call
icebp
add
inc
iret
int3
je
add
or
xchg
cmp
cmps
and
jb
cmc
sbb
daa
xor
cmp
add
frstor
pop
mov
cmp
dec
cld
out
lods
jbe
mov
jae
inc
dec
leave
xchg
sbb
pushf
test
loop
mov
pop
ror
cmp
or
push
into
and
mov
mov
mov
or
pop
and
in
rol
push
cmp
xchg
pop
mov
push
pop
pop
(bad)
lds
push
sahf
pop
push
inc
mov
push
mov
test
adc
dec
jo
jnp
xchg
cmp
ss
ret
pop
fild
lods
jns
sub
xchg
cwde
inc
mov
cmps
and
jmp
mov
ja
add
and
lds
pop
sub
mov
pop
cmp
dec
(bad)
int3
mov
sbb
loopne
jne
int
sub
fisttp
test
inc
test
dec
lds
adc
in
sbb
ins
sbb
xor
mov
and
pop
and
ret
or
pop
stc
inc
ficom
pop
and
mov
call
mov
sbb
outs
fistp
cmps
imul
pushf
dec
xchg
aad
fwait
adc
add
xchg
adc
cmp
sub
jmp
xchg
in
(bad)
shr
mov
mov
(bad)
jo
pop
clflush
dec
add
push
dec
mov
push
sbb
neg
xor
pop
cmp
das
or
in
pop
inc
outs
in
dec
(bad)
cdq
cmps
add
mov
pop
bound
mov
xlat
jmp
adc
adc
xchg
out
out
xchg
ja
mov
sbb
xchg
shl
push
invd
mov
push
fild
dec
clc
sti
into
xchg
mov
mov
lds
popa
out
test
adc
mov
jmp
mov
cmps
mov
mul
stos
xchg
call
clc
xor
sar
or
xor
stos
ins
adc
jmp
xlat
int3
mov
ins
(bad)
mov
mov
lea
mov
arpl
loope
in
sub
mov
inc
jmp
mov
outs
jp
lea
ds
aam
add
in
or
addr16
lea
jb
mov
adc
mov
aaa
bsf
xor
mov
test
cmc
jle
xlat
stos
xchg
test
(bad)
and
push
xchg
fst
jo
fmul
je
fldcw
out
adc
js
mov
mov
lods
loop
jecxz
jge
inc
push
les
inc
ja
inc
in
xor
and
je
mov
mov
addr16
add
loope
xor
rol
or
adc
push
jns
jns
cli
adc
test
mov
fisubr
rol
leave
(bad)
mov
push
sahf
stc
and
ja
mov
dec
int
retf
inc
sbb
mov
lea
and
xor
das
ins
and
aam
loope
mov
jle
ror
lahf
cmp
cwde
loope
sbb
inc
and
and
loope
into
and
ins
(bad)
shr
mov
(bad)
outs
sti
fmulp
or
sti
aaa
loope
add
push
or
lock
cmp
mov
mov
jo
mov
test
xchg
ss
lock
mov
cmp
push
shr
and
mov
idiv
mov
jecxz
dec
shl
mov
je
sub
adc
dec
jmp
test
ins
or
pushf
cdq
cmps
or
inc
mov
cmp
add
jns
hlt
mov
add
jne
jl
leave
or
lock
push
cmp
popa
xchg
mov
imul
rol
inc
and
pop
div
in
cmp
(bad)
pop
cwde
adc
mov
test
jmp
cmp
push
bound
stos
cmp
push
jmp
inc
mov
jb
inc
lds
inc
loop
rcl
or
cmp
mov
les
retf
add
cmp
pop
inc
fwait
js
ror
pop
sbb
jae
(bad)
ds
(bad)
xchg
fidivr
dec
ret
retfw
das
jmp
imul
inc
cmps
out
ret
enter
or
into
ds
es
cmp
es
jmp
jae
xchg
pop
dec
cld
repnz
add
ds
test
jo
and
cmps
or
sbb
sbb
or
fs
mov
ror
xchg
fs
cmp
push
imul
add
int
ret
rcr
jl
aam
aaa
in
and
ret
aam
(bad)
fs
jno
lahf
xchg
dec
clc
add
pop
push
mov
iret
icebp
cwde
sub
rcl
int
lds
scas
fiadd
aaa
ffreep
pop
in
ja
xchg
pop
mov
fistp
jae
sete
rol
ret
mov
pop
jp
lods
lahf
cmps
jecxz
les
or
and
nop
es
cmp
movs
mov
dec
or
mov
mul
imul
cmps
jle
mov
cmp
mov
sti
ja
or
fcomp
int3
pop
push
inc
ds
(bad)
cmp
loop
cli
es
fisub
ds
mov
xchg
jb
mov
sar
push
or
sbb
cmc
inc
fs
test
movs
jo
sbb
mov
or
add
sbb
data16
ins
out
out
or
sti
cwde
sysexit
xchg
and
scas
xchg
test
inc
push
fs
cmps
movs
sub
jge
mov
sub
iret
into
push
xor
and
mov
cmp
leave
jne
dec
or
xchg
push
dec
(bad)
xlat
into
jle
shr
inc
sahf
mov
js
inc
push
mov
dec
mov
xlat
and
pop
or
icebp
outs
mov
cmp
inc
xor
add
dec
or
add
push
push
aaa
sbb
out
adc
ins
mov
mov
out
ja
push
add
call
mov
lods
retf
dec
repz
add
ja
lds
shr
mov
push
jno
or
sub
bound
sub
(bad)
icebp
leave
dec
nop
lods
push
xchg
int
(bad)
arpl
(bad)
jo
imul
push
or
or
loopne
(bad)
or
imul
popf
mov
out
dec
rcl
add
push
pop
fisubr
pop
daa
adc
pop
mov
repnz
dec
mov
repnz
div
inc
lods
retf
add
add
shr
push
data16
in
shl
cs
cmp
out
cmp
push
sar
imul
clc
add
sahf
adc
loop
push
gs
xor
hlt
cli
push
xchg
and
jecxz
xor
push
lods
cld
pop
gs
js
cmp
movs
cld
hlt
push
mov
das
jo
adc
or
inc
mov
call
(bad)
sbb
inc
pop
lds
or
xor
add
jno
push
add
pop
dec
lods
adc
repz
test
out
repz
and
sbb
into
test
lods
adc
(bad)
mov
dec
rol
xchg
imul
mov
or
push
cwde
shl
dec
mov
push
mov
call
jl
adc
push
out
adc
pop
jg
pushf
mov
fwait
dec
test
xchg
adc
push
aad
out
out
shr
sub
pop
fnstsw
dec
sti
ror
nop
cmp
pop
inc
pop
add
dec
push
cmp
loop
call
cmc
sub
push
adc
stos
loop
fsubr
push
sub
je
inc
lahf
das
ja
repnz
dec
sbb
adc
loop
adc
test
jp
test
outs
(bad)
jl
xor
lock
and
(bad)
fisub
or
iret
retf
push
pop
add
call
enter
dec
jge
shr
dec
or
xchg
cmovnp
out
jl
fwait
out
in
mov
mov
stos
dec
mov
jle
or
in
out
push
and
dec
pop
imul
pop
cmp
test
jae
cld
in
test
xchg
in
test
fldcw
leave
or
mov
inc
push
xchg
and
lahf
sbb
xchg
cmc
cmp
pop
dec
push
pop
and
repnz
pusha
aaa
jne
test
dec
fs
push
rcl
test
mov
rcr
mov
xor
test
(bad)
pop
add
jecxz
leave
adc
cmp
(bad)
sbb
or
daa
pop
pop
repz
shl
push
add
jge
xchg
jbe
loop
mov
gs
ss
(bad)
scas
pop
inc
xchg
jl
retf
outs
or
shr
xlat
jbe
ins
xchg
add
test
loop
inc
movs
sbb
ins
and
test
fdivr
outs
aas
pushf
jp
(bad)
enter
scas
sub
xchg
call
inc
xor
and
pop
std
sub
add
pop
mov
lea
mov
ja
jle
mov
cli
je
adc
into
leave
aad
dec
jmp
jne
iret
xor
loope
out
mov
pop
fst
sub
mov
jmp
fdiv
fimul
psubq
xor
ret
mov
cmps
jg
std
lods
cmp
xchg
cmps
movs
mov
inc
mov
es
dec
mov
xor
int
cmp
ret
adc
inc
or
or
xchg
mov
sar
adc
mov
xchg
inc
pop
mov
mov
xchg
xor
inc
call
cmc
bound
push
test
jmp
fbstp
retf
mov
enter
push
lds
ss
inc
dec
pusha
leave
xchg
xor
xchg
mov
push
repnz
(bad)
bound
fisttp
and
cld
jne
mov
pop
bound
daa
lds
nop
repnz
sbb
pop
and
ror
push
clc
add
xchg
adc
xchg
mul
mov
dec
xchg
call
sbb
ds
sub
repz
arpl
inc
pop
inc
mov
mov
add
les
(bad)
add
je
push
xor
aas
pop
dec
sahf
mov
(bad)
mov
es
out
and
sbb
data16
sbb
cmps
ja
and
mul
aaa
jmp
add
pop
cmp
movs
mov
fdivr
jne
into
xchg
shl
push
sub
and
std
cs
sar
jp
or
pop
push
jo
mov
icebp
xchg
mov
lods
push
pop
lods
push
jnp
js
movs
push
cmovo
add
mov
rcl
jl
mov
in
cli
cmp
xor
xor
(bad)
ret
inc
jmp
leave
push
stos
mov
shr
neg
dec
push
push
mov
mov
fiadd
es
mov
int3
stos
lock
dec
jle
ret
fadd
sbb
jae
sub
dec
xchg
cmp
fwait
out
test
xor
ds
sub
outs
jb
and
arpl
test
scas
jmp
mov
repnz
push
cmp
or
xchg
push
icebp
mov
icebp
data16
inc
add
mov
in
inc
daa
xor
pop
aad
or
in
mov
test
dec
lock
xchg
and
push
adc
cld
xor
cmp
cmps
cmp
mov
or
out
pop
mov
lock
mov
lods
mov
push
fdiv
mov
fadd
mov
scas
clc
ror
jmp
mov
lds
sub
mov
xchg
inc
sub
add
jbe
mov
inc
fld
and
ss
push
leave
rol
push
jge
mov
xlat
call
and
mov
ret
inc
push
jae
cmp
jmp
ror
popf
inc
cmp
dec
mov
out
mov
xchg
pop
adc
bound
int
aad
js
xor
into
sub
addr16
cmp
jns
test
stos
xchg
dec
dec
push
adc
retf
clc
cmp
out
cmp
std
es
xor
add
sbb
sbb
add
dec
dec
js
fxch
mov
retf
int
sbb
mov
and
dec
out
adc
push
in
mov
cwde
inc
jecxz
xchg
popa
es
xlat
mov
jne
int3
test
push
mov
cmps
pop
sub
ins
mov
je
test
jb
scas
test
fnsave
adc
sbb
mov
mov
xchg
or
int3
fldcw
cmp
push
cmp
cmp
imul
jle
pop
push
outs
dec
add
and
dec
mov
jmp
add
ins
dec
aas
js
call
sti
cld
mov
mov
loop
jmp
fild
mov
in
pop
das
shl
arpl
inc
sbb
rcl
mov
lea
mov
ja
clc
push
xchg
fisttp
fs
iret
add
pushf
fiadd
cmps
je
ins
iret
jae
dec
sbb
push
pop
(bad)
inc
ja
int
ret
stc
sbb
lock
shl
sar
pop
out
dec
call
mov
dec
and
call
(bad)
jl
loop
ins
call
(bad)
pop
mov
adc
pop
jge
cmp
dec
imul
into
mov
stc
sbb
add
push
mov
repz
inc
gs
cmc
adc
cmp
imul
loope
add
or
mov
shl
sti
add
(bad)
sti
jmp
aaa
adc
out
iret
outs
cld
fs
push
mov
out
inc
popa
jb
sub
cmps
adc
push
enter
popa
nop
fld
lea
std
pop
adc
ret
loop
xor
std
and
bound
call
shl
cmps
fmul
mov
(bad)
cmps
ds
sbb
fcomp
push
rcr
aad
pop
pop
cli
jecxz
mov
cld
mov
nop
mov
retf
sbb
in
pop
sbb
mov
mov
inc
iret
popa
shl
mov
loope
fxch
ja
pop
mov
jge
cmps
push
daa
jno
and
loopne
push
ss
shl
dec
xor
lock
call
out
ja
lods
ret
mov
cmp
adc
out
jns
jae
push
sbb
xchg
in
pushf
xchg
jmp
cmps
and
push
gs
test
jle
sbb
sub
(bad)
out
outs
or
test
xorps
and
mov
sub
ins
je
movs
jle
inc
imul
fistp
(bad)
jp
mov
lahf
pop
or
sub
cmps
adc
aam
or
clc
sbb
jmp
in
mov
dec
(bad)
xchg
jg
mov
fisttp
setne
xor
cmps
xchg
inc
call
mov
lods
cli
nop
push
dec
clc
std
push
loopne
sub
sub
and
mov
sbb
imul
adc
mov
xor
dec
loope
mov
mov
push
int
push
xchg
mov
mov
jmp
xchg
cmp
in
inc
int
jo
and
cmc
mov
outs
scas
outs
aas
jle
and
sub
xchg
xor
add
sbb
mov
inc
(bad)
(bad)
icebp
pop
dec
jmp
data16
sti
sahf
shl
xchg
mov
mov
push
inc
cmps
sti
aam
out
cwde
daa
imul
push
xchg
addr16
mul
sbb
adc
popf
fstp
jp
mov
test
and
std
jne
rol
hlt
cmps
cld
sub
dec
movs
sbb
ret
dec
repz
cmc
sbb
ret
loope
movs
ror
mov
imul
in
dec
inc
inc
sti
ret
mov
loopne
jl
(bad)
mov
js
push
scas
stc
cdq
aam
out
fmul
dec
or
mov
jae
call
fpatan
mov
lds
test
push
pop
test
pop
ds
or
fild
fadd
aaa
data16
and
repz
sbb
pop
xchg
or
sbb
adc
mov
xchg
adc
into
ja
xchg
dec
lock
inc
into
lock
adc
mov
sbb
xlat
jns
ss
fisub
push
iret
lahf
push
sahf
adc
mov
daa
xchg
lds
jnp
mov
jge
test
aam
add
sbb
xchg
fcom
lock
in
xor
xor
test
stos
mov
(bad)
cmps
dec
jge
xchg
stos
sub
gs
dec
pop
das
call
icebp
cmp
(bad)
and
push
cmp
out
sar
in
cmps
pop
out
test
ret
xchg
in
aad
xor
test
dec
test
inc
mov
push
pop
loopne
stc
out
mov
sbb
mov
and
xchg
ror
mov
mov
inc
shl
mov
jge
mov
repnz
(bad)
lahf
push
xor
mov
test
mov
idiv
sbb
add
push
pop
sub
bound
movups
in
mov
cmp
pop
sub
mov
adc
xchg
adc
call
js
(bad)
lock
in
pop
cwde
xchg
jg
pop
ror
outs
fidiv
out
xchg
repz
aad
xchg
neg
add
mov
movs
lods
xchg
popa
cmp
inc
dec
fprem
dec
xchg
arpl
into
(bad)
sub
out
sti
aaa
jle
mov
retf
xor
cdq
outs
call
dec
unpckhps
fs
pop
and
mov
push
inc
xchg
mov
sbb
push
ficom
mov
imul
les
mov
jae
mov
out
xor
cdq
inc
jnp
mov
push
imul
push
into
or
sub
ss
lods
mov
mov
mov
push
and
inc
xchg
hlt
cwd
ss
pop
icebp
mov
hlt
int
(bad)
in
inc
mov
inc
mov
fxam
loopne
imul
jl
mov
mov
or
in
pop
add
mov
xlat
cmp
or
or
lods
not
adc
stc
jg
pop
sbb
pop
push
inc
les
inc
xor
mov
bound
aam
fcomp
scas
out
fcomp
xor
add
(bad)
and
or
pushf
cmps
mov
jg
(bad)
jo
and
jle
mov
jmp
xor
leave
iret
out
pop
mov
int
leave
jb
and
add
fst
jecxz
(bad)
retf
xor
cwde
and
adc
mov
sub
add
fcom
mov
xchg
mov
imul
out
sbb
lds
xchg
nop
outs
lea
mov
xor
or
shl
xchg
les
jg
div
cs
push
(bad)
mov
lea
add
lods
jae
mov
jo
sub
stc
mov
data16
cld
mov
mov
aas
dec
js
xchg
aas
inc
loope
xchg
add
out
stc
push
sub
outs
mov
ja
ss
sbb
pop
mov
gs
(bad)
fisttp
sub
and
mov
jp
cmp
jne
inc
cmp
add
cmp
mov
cdq
call
aas
aas
(bad)
popf
cs
dec
cmp
fdiv
sbb
in
movs
fs
test
lahf
and
sahf
retf
or
push
stc
shr
mov
cwde
jecxz
cmc
xor
jnp
pop
mov
scas
mov
xchg
pop
inc
lods
icebp
hlt
or
lods
das
inc
je
cmp
cs
xor
call
sub
jl
js
cs
inc
les
xchg
and
pop
cld
pop
out
or
push
data16
sbb
out
sti
ja
aaa
fimul
add
(bad)
lods
and
movs
pop
xchg
in
pop
inc
(bad)
push
in
add
adc
and
arpl
xor
xchg
loopne
std
add
jg
add
jge
sub
adc
pop
jle
(bad)
(bad)
cdq
pop
push
fiadd
movs
and
xor
and
mov
xor
mov
pop
test
fnstenv
push
and
bound
mov
pop
mov
sbb
push
or
cmp
or
mov
imul
mov
xchg
mov
inc
add
jle
and
cmp
scas
push
and
test
cmp
test
icebp
and
je
push
and
cld
adc
mov
xor
xchg
js
aad
div
lahf
scas
fidiv
xchg
fcom
jmp
shl
mov
lds
sub
cmp
cmp
mov
adc
xor
cmp
and
xchg
outs
pusha
ds
dec
pop
loopne
pop
mov
push
mov
fisubr
(bad)
aam
(bad)
jns
pop
es
cmc
jns
ins
mov
push
loope
mov
popf
inc
add
push
out
je
stc
popf
pop
in
sbb
cmc
push
js
sbb
int3
stos
jb
cmp
aas
mov
jge
adc
cdq
outs
jle
fld
aas
push
xor
jno
push
pop
fidiv
mov
mov
outs
push
pop
movs
fdiv
xchg
cmc
or
scas
ins
or
push
icebp
mov
add
outs
adc
pop
sar
and
adc
inc
xchg
jg
dec
mov
sbb
adc
repz
cld
xchg
mov
sbb
jns
lods
xor
ret
sub
or
xor
call
mov
dec
cmp
xchg
aas
outs
cdq
pop
sub
ins
push
push
mov
jg
cmps
xor
(bad)
test
std
sub
iret
imul
outs
(bad)
icebp
test
scas
scas
mov
dec
sub
adc
sbb
ins
mov
or
cmps
in
stc
sbb
mov
rol
inc
sbb
sub
push
imul
or
mov
xchg
mov
pop
push
xchg
imul
xor
sbb
ror
ret
mov
int
clc
sub
mov
xor
jb
xchg
imul
adc
repnz
movs
push
fwait
call
ja
or
add
mov
lds
popf
cmp
mov
call
push
(bad)
adc
popa
iret
xor
xor
outs
fs
jb
clc
xor
cmp
add
mov
and
mov
shrd
clc
loope
shl
nop
fstp
popf
idiv
fld
push
cmp
xchg
cmp
int3
push
jo
add
data16
test
jmp
(bad)
fisubr
mov
xchg
mov
rcr
cwde
add
rcl
cmp
mov
ins
jno
aas
lods
sbb
pushf
ss
lods
in
fcom
out
not
adc
lds
bound
jge
adc
sbb
cli
popf
add
std
(bad)
shl
jnp
test
cmp
push
sbb
cmps
xchg
inc
les
ret
sub
add
arpl
das
ret
jno
bound
adc
aas
xor
xor
imul
lds
rol
dec
leave
jo
push
pop
inc
nop
add
adc
int3
mov
cmp
stc
cmp
mov
xchg
inc
xchg
cdq
or
pop
mov
aaa
punpckhbw
cmp
mov
mov
jg
pop
das
dec
addr16
int3
fcmovbe
stc
bswap
(bad)
or
push
push
dec
cmps
dec
daa
sub
ret
sub
inc
gs
pop
test
loope
mov
cmp
push
retf
(bad)
cmp
dec
push
mov
loopne
nop
les
imul
pop
adc
ror
in
mov
popa
or
xor
xor
fist
jae
mov
(bad)
mov
ds
fstp
inc
or
dec
xlat
mov
outs
mov
(bad)
lods
pop
shl
mov
cmps
ret
adc
pop
dec
xchg
in
dec
cmp
in
jo
js
aas
lds
pop
add
stos
movsx
jo
pop
cmp
or
movs
enter
sbb
push
(bad)
cmp
(bad)
jp
mov
out
and
mov
(bad)
rol
int
jcxz
xor
mov
hlt
ss
xchg
popa
mov
ficomp
loope
stos
push
sub
ins
jo
sbb
pop
ja
jae
pushf
mov
pop
push
es
cmp
mov
dec
pop
sahf
mov
jbe
stos
hlt
ret
sbb
vmwrite
xlat
imul
sbb
loop
loop
int
sar
cmps
iret
leave
aam
mov
adc
in
xchg
lahf
retf
jb
mov
fidiv
fistp
inc
inc
mov
dec
pop
sbb
pop
int
mov
stos
sbb
pop
(bad)
fwait
mov
cmp
jmp
jp
ret
test
or
jae
dec
test
data16
sbb
scas
mov
mov
lock
dec
pop
fst
inc
push
dec
push
pop
sbb
pop
test
(bad)
ins
enter
cmp
xchg
cmps
mov
mov
xor
push
cmp
adc
stc
test
fisttp
push
test
faddp
fist
mov
popa
jns
loop
jl
add
or
sbb
loope
jecxz
repnz
pop
push
jle
add
jae
fs
jne
and
mov
inc
or
stc
xor
and
cs
(bad)
movs
pusha
xchg
mov
aad
icebp
enter
xor
popa
js
mov
call
inc
out
in
mov
ds
mov
or
std
sbb
or
aas
test
dec
lods
aas
cdq
or
(bad)
popa
inc
cmc
inc
loop
fwait
mov
cmp
inc
aaa
pop
int
push
addr16
stos
push
jmp
in
cmp
or
bound
outs
adc
lods
push
mov
and
adc
stos
dec
ret
div
xor
jae
imul
(bad)
and
mov
js
mov
(bad)
cdq
xchg
jne
ret
mov
add
sub
adc
pop
mov
ins
push
lds
and
mov
add
lods
and
(bad)
pop
and
fistp
stos
test
inc
call
push
mov
(bad)
outs
and
inc
pop
pop
mov
mov
inc
pop
cs
jle
xchg
xchg
not
iret
pop
cld
cmp
and
push
fwait
ror
or
xor
out
push
adc
cmp
fidivr
je
push
out
and
cdq
or
pop
pop
retf
adc
jne
popa
mov
ret
retf
out
into
sbb
retf
mov
arpl
inc
and
shl
xor
(bad)
mov
mov
jnp
and
por
sbb
sbb
cwde
xchg
not
popa
mov
in
sbb
adc
cmp
sbb
push
and
jg
clc
add
add
cmp
jae
imul
pushf
and
jbe
dec
test
add
fadd
enter
push
and
xlat
jmp
xchg
addr16
push
mov
icebp
push
pop
mov
inc
push
mov
stc
xor
inc
pusha
lea
outs
in
icebp
fwait
sbb
aam
lods
xchg
jae
shl
aas
jnp
sub
jge
jge
adc
cwde
mov
fwait
repnz
dec
sbb
jnp
push
push
mov
jne
add
cmp
cwde
mov
mov
dec
sub
mov
jb
push
call
(bad)
cmps
arpl
aam
lds
in
dec
fs
dec
adc
call
outs
cmp
cmp
into
data16
(bad)
sbb
xlat
dec
mov
lods
mov
jne
sbb
cmps
pop
sub
test
sub
dec
add
push
je
bound
lea
adc
inc
push
nop
jo
lds
pop
popf
idiv
sbb
shl
retf
test
xchg
or
mov
(bad)
or
nop
xchg
dec
cld
sar
lods
mov
mov
push
and
push
aas
dec
sbb
xor
xchg
and
and
push
in
(bad)
jo
das
sub
add
lods
pop
cdq
adc
int3
push
js
movs
scas
adc
add
cmp
xchg
xor
or
lea
in
pushf
xchg
cmp
sub
popa
in
dec
xor
dec
call
push
scas
jg
retf
inc
xor
jno
cmp
movs
sub
add
inc
jmp
xor
push
mov
or
inc
cmps
sub
xor
lods
pop
cmp
sub
xchg
sbb
shl
and
add
jecxz
(bad)
mov
into
jmp
loope
rcl
ss
pop
xchg
ret
call
fs
and
imul
arpl
fcomp
add
movs
and
dec
pop
xchg
xor
sub
jns
out
(bad)
iret
fild
fnstsw
jno
xlat
mov
mov
xchg
stos
int3
js
mov
push
cmp
lods
add
push
test
jbe
push
cmp
retf
pop
adc
iret
xlat
ret
aam
shl
rcr
out
gs
in
out
cmc
sahf
push
push
imul
inc
ds
sub
(bad)
int
inc
push
pop
scas
into
cmp
dec
inc
test
lea
adc
mov
jns
pop
mov
xchg
lds
cmp
sbb
jg
adc
push
iret
lds
(bad)
cmp
int3
mov
out
push
daa
pop
mov
xchg
jb
add
jmp
shl
mov
lods
pop
not
dec
mov
loope
fs
(bad)
fcom
add
pushf
inc
push
inc
shl
cmps
stc
cmps
ja
mov
dec
loopne
xchg
cmc
push
and
shl
movs
mov
jle
jmp
push
xor
call
pusha
mov
add
push
or
and
jae
push
out
lds
sahf
pop
pushf
sbb
sbb
jmp
outs
leave
sbb
sub
mov
movs
jl
nop
and
icebp
stc
das
leave
popf
pusha
or
popa
setl
in
outs
jno
lock
icebp
std
jle
or
sar
outs
cmc
inc
sbb
push
and
dec
pop
xchg
in
movs
aaa
cs
mov
imul
mov
lods
mov
lods
and
cmps
in
inc
mov
int
stos
push
fcmovb
sub
repz
inc
popa
mov
pop
test
movs
xor
das
fwait
aam
cdq
das
out
gs
jg
and
inc
cdq
xchg
sbb
repz
dec
(bad)
ret
mov
xlat
imul
mov
jmp
push
in
dec
iret
add
inc
inc
outs
mov
in
pop
aam
adc
es
xlat
into
cmps
scas
xchg
outs
es
mov
xchg
inc
outs
cwde
imul
repz
call
das
leave
ins
outs
mov
and
aam
mov
rcl
add
sub
aad
jo
fisttp
fwait
push
retf
jne
xor
ins
mov
and
call
adc
xrelease
adc
imul
test
sub
(bad)
cmc
mov
jle
jo
mov
es
nop
lea
push
pop
jp
cmp
std
addr16
inc
sbb
adc
pop
xor
add
mov
and
outs
dec
xchg
lods
mov
mov
mov
sbb
sub
jmp
(bad)
int3
pop
mov
push
pop
into
ins
cmp
xor
call
ins
ins
mov
adc
pusha
pop
int3
push
shr
inc
mov
inc
pop
fnsetpm(287
push
dec
pop
(bad)
stos
dec
dec
mov
push
mul
xor
cmp
inc
mov
pushw
pop
mov
xor
lahf
cmps
mov
into
movs
popa
or
sahf
scas
out
xlat
sub
mov
psubb
dec
sub
dec
iret
sti
leave
ss
jmp
or
movs
ins
pop
fimul
mov
shl
shr
xchg
jmp
movs
mov
and
sub
clc
cld
mov
aaa
(bad)
sahf
xchg
in
sbb
push
sub
in
xchg
push
jle
mov
xlat
fcomp
and
loope
and
mov
arpl
jb
not
push
js
adc
cmp
sbb
sub
mov
scas
fimul
push
mov
daa
ret
repz
mov
loopne
jb
fwait
sub
add
sub
daa
and
(bad)
fstp
cld
push
add
sub
adc
mov
jmp
xchg
cli
leave
out
push
dec
jo
jge
pop
in
imul
inc
fcomp
test
pop
leave
std
in
pop
add
pop
cli
push
sahf
xchg
xor
and
cmp
xchg
popf
scas
or
mov
maxps
push
xor
push
cmps
out
add
les
lods
scas
pop
jmp
cmp
ret
jno
or
push
icebp
push
pop
(bad)
jecxz
jbe
jne
inc
lea
xor
jnp
sbb
push
dec
or
mov
push
jecxz
call
push
jl
add
fisttp
call
add
in
push
mov
mov
cmp
sbb
pop
fwait
rol
sbb
push
inc
addr16
sti
sti
mov
jp
(bad)
(bad)
(bad)
pop
sub
push
push
aas
pop
test
fwait
pop
mov
js
cs
mov
mov
push
dec
popa
ret
pop
daa
call
sub
xor
jl
rol
int3
pop
sbb
cmps
scas
rcr
xchg
(bad)
jbe
mov
pop
pop
push
push
pop
icebp
ror
lahf
stos
inc
aaa
je
scas
and
pop
xchg
fwait
(bad)
std
ret
cmp
cmc
dec
cdq
push
(bad)
and
dec
adc
shl
fwait
std
mov
into
cmp
into
loop
xor
sbb
ss
arpl
mov
pop
ss
dec
mov
cmps
adc
and
and
jge
ficomp
call
xor
repz
sbb
retf
adc
mov
mov
pop
mov
sub
or
sub
push
or
sti
icebp
sar
ror
mov
and
fisttp
and
(bad)
sbb
ins
je
(bad)
fcmove
sub
dec
test
ficomp
fiadd
lods
dec
push
mov
jge
pop
fisubr
inc
pop
cmc
scas
ret
cmp
mov
jno
or
mov
adc
inc
push
fadd
mov
fst
imul
in
mov
int3
jle
mov
cmp
xchg
cdq
inc
xchg
push
push
fadd
mov
ret
push
aaa
sti
xor
mul
mov
test
stos
push
sbb
inc
popf
aad
mov
mov
(bad)
sub
push
inc
inc
mov
pop
and
loope
jns
jb
aaa
dec
sar
arpl
push
sub
pop
adc
gs
repnz
ret
mov
clc
jmp
mov
xchg
mov
and
lods
(bad)
mov
push
mov
fst
and
cmc
pusha
lods
and
ds
sbb
nop
xchg
mov
pop
xor
lock
jb
add
xor
lock
push
ficomp
mov
jmp
cmp
cwde
cmp
out
jns
fstp
(bad)
pop
pop
adc
xor
cmp
lock
or
mov
jo
adc
pusha
lods
jg
mov
mov
in
inc
cmp
loop
(bad)
addr16
test
inc
xchg
mov
jg
jo
add
mov
inc
std
test
jbe
add
(bad)
push
loop
retf
div
in
adc
pop
nop
and
and
loopne
xor
pop
jnp
or
push
cmp
mov
scas
ret
and
gs
pop
ins
mov
enter
inc
and
sub
scas
pop
sub
push
jbe
mov
repnz
out
movs
and
ins
jl
jmp
mov
and
shl
mov
pop
mov
lea
add
sub
test
inc
addr16
ret
xor
jmp
inc
mov
dec
jge
mov
movs
rcr
div
and
dec
pop
mov
xor
nop
pushf
mov
repz
xchg
mov
int3
call
loope
hlt
or
add
div
sub
jg
mov
out
mov
out
fld
dec
or
or
xor
and
jp
sar
(bad)
xchg
sub
movs
test
mov
dec
adc
rcr
add
mov
jns
cmp
das
jl
imul
xchg
and
push
or
push
sbb
or
out
mov
inc
div
stos
mov
mov
dec
jns
jg
adc
add
stos
je
out
cmps
jo
mul
fnsave
adc
mov
jmp
(bad)
fstp
rcl
pop
(bad)
daa
mov
(bad)
mov
fdiv
icebp
cmp
addr16
and
movs
push
loopne
nop
fnstenv
fisub
fs
ins
into
sub
pop
cmps
js
mov
jle
repnz
(bad)
clc
mov
push
adc
or
int3
jg
cld
jno
pextrw
push
mov
loop
cli
into
cmp
dec
xchg
ficomp
aam
and
shl
scas
and
repnz
adc
fst
lods
mov
outs
jo
cs
lock
scas
push
xor
pop
mov
inc
or
mov
nop
sahf
(bad)
mov
lods
in
das
mov
cmp
xchg
pop
outs
jne
jge
inc
iret
cs
mov
push
inc
xchg
push
ficomp
inc
lods
pop
(bad)
jns
movs
dec
cmps
pop
cmps
xchg
int3
(bad)
xlat
xor
ss
lods
sbb
lods
loopne
and
and
fsub
mov
sbb
pop
jmp
push
cdq
ins
push
int3
pushf
sbb
out
pop
enter
dec
(bad)
repnz
pusha
cmovae
mov
mov
retf
sub
push
repnz
adc
xchg
mov
sbb
pop
hlt
mov
pcmpgtw
sub
pusha
push
cmp
jp
mov
cmp
retf
mov
cmp
out
jbe
stc
xchg
push
ins
jmp
les
aad
or
add
cs
xor
and
fisubr
cmc
mov
stc
sub
call
adc
sbb
pop
jae
repnz
and
enter
cmp
cmp
xchg
sar
into
out
cmp
neg
xchg
push
out
je
mov
in
lods
rol
jnp
cmp
mov
pop
inc
icebp
mov
shr
and
movs
adc
sti
jl
mov
cwde
xor
mov
and
xlat
shl
jns
adc
sub
or
loopne
mov
xor
inc
pop
and
dec
pop
sub
scas
jle
push
sub
add
add
xor
push
mov
mov
cmp
jb
rcr
push
je
push
in
shl
cmp
cmp
les
les
and
xor
bound
lods
addr16
push
sbb
jne
mov
ret
inc
test
xchg
ja
sbb
and
fdivp
adc
push
push
adc
push
push
sub
loope
icebp
leave
dec
lock
daa
and
leave
push
pusha
test
mov
es
sub
sbb
jae
scas
pop
icebp
sbb
pop
dec
es
test
inc
or
jg
adc
dec
pop
push
mov
mov
ret
dec
mov
jl
jmp
mov
fst
or
push
xor
popf
stc
pushf
enter
ins
call
mov
in
sbb
test
arpl
push
je
or
lds
outs
fst
cs
adc
dec
rol
mov
mov
xchg
jbe
pop
pop
loope
call
xchg
sahf
lea
ds
xor
or
mov
pop
adc
xor
inc
les
out
std
fcmovbe
inc
out
(bad)
dec
push
or
push
add
mov
or
dec
sub
or
cmp
jno
pop
push
add
inc
mov
pop
pusha
inc
xchg
les
movs
lock
mov
dec
jge
adc
inc
pop
inc
inc
test
sbb
dec
fsub
test
bound
cmc
jo
test
add
gs
jle
push
retf
xor
cdq
push
mov
xchg
lock
out
test
push
or
shl
out
aad
push
xor
pop
ret
mov
dec
retf
sbb
dec
dec
cmp
push
inc
inc
xor
push
push
sub
push
jecxz
aad
jge
adc
jns
sti
out
popf
sar
jb
jbe
fsub
jecxz
out
gs
cmp
xchg
imul
mov
mov
add
sti
xor
out
imul
mov
jbe
adc
inc
es
popa
pop
xor
imul
stos
les
in
mov
lea
sbb
xchg
iret
and
fld
dec
dec
adc
xor
in
bound
out
jbe
and
inc
fwait
test
icebp
lds
add
fistp
adc
retf
lods
lea
ret
pop
xor
test
mov
sub
stos
pop
sbb
jge
repnz
shr
xchg
cmps
loop
fs
inc
add
fwait
test
fistp
pop
stc
int3
or
and
ins
xor
pop
push
rcr
lds
mov
or
cs
outs
scas
jge
jno
mov
cmps
adc
push
sbb
or
fdivr
cdq
xchg
mov
add
cmp
jb
ds
sbb
cli
dec
pop
cmps
sub
lea
test
stc
sbb
and
pop
test
mov
jmp
xor
adc
cmp
mov
mov
jmp
jns
cs
sub
outs
jae
(bad)
fucomi
test
push
cmp
sahf
mov
xchg
xor
or
xor
scas
cwde
dec
shr
mov
rcl
push
mov
clc
or
scas
and
cdq
push
xor
mov
push
push
cli
test
mov
xchg
je
mov
mov
test
mov
sub
lock
mov
cmove
std
inc
push
and
test
xchg
push
je
arpl
mov
mov
test
xor
mov
cmp
jno
push
enter
es
adc
pmaxsw
fimul
mov
cmp
fst
cmp
cmps
sti
push
ins
popa
aaa
je
fiadd
push
fs
add
sbb
cld
movs
stc
or
test
or
adc
call
inc
cmp
ret
inc
mov
pop
les
sub
je
sahf
xor
mov
jne
loopne
add
push
add
das
sbb
dec
mov
addr16
jno
std
call
les
aam
adc
adc
adc
cwde
add
inc
fdiv
add
jp
gs
pop
xchg
or
cmp
and
rcr
dec
adc
dec
mov
sbb
and
rol
cmp
hlt
add
jnp
mov
imul
fistp
mov
jns
test
pop
push
pop
xor
xor
mov
mov
out
retf
cmps
popa
dec
mov
cmp
repnz
mov
dec
mov
mov
leave
int3
or
push
fisttp
aam
out
loop
jae
sbb
frstor
scas
xchg
adc
mov
xchg
aad
adc
push
push
retf
xchg
mov
cdq
push
and
push
lods
icebp
cld
jmp
mov
call
in
sub
outs
fisubr
stos
jecxz
daa
ds
aaa
sub
aad
fnsave
ins
setle
mov
imul
cwde
add
sub
and
repnz
sbb
push
adc
push
sbb
xor
inc
jo
sub
pusha
inc
retf
pushf
xor
lea
jae
ret
iret
gs
cmps
add
pusha
out
xchg
jbe
aaa
dec
jnp
fisubr
into
add
pop
adc
loopne
xchg
test
fiadd
sti
push
cmp
inc
and
fisttp
ins
fisubr
mov
repz
cs
out
pop
ja
or
test
dec
xchg
cmp
or
push
sti
test
int3
mov
inc
sbb
or
scas
ror
mov
pushf
mov
xor
mov
mov
fcomi
add
lahf
pop
cld
mov
call
and
sub
push
mov
fisttp
or
jne
xor
pushf
(bad)
pop
jmp
loopne
jmp
cmc
xor
jle
clc
pop
imul
mov
cmc
dec
(bad)
not
es
cli
add
mov
retf
dec
call
scas
jg
fcom
imul
pop
out
or
ins
fisub
fsub
push
inc
sti
xchg
add
aam
pop
pop
aaa
push
sbb
sub
pop
rcl
mov
daa
xchg
inc
xlat
mov
cwde
sub
iret
mov
push
cmp
pop
jge
mov
ins
loopne
test
fcmovb
ret
mov
add
jg
sub
mov
adc
lods
in
(bad)
fnstenv
cmp
shl
push
ins
mov
mov
daa
int3
call
xor
push
loope
sbb
add
fsubp
mov
jbe
in
retf
pop
sub
addr16
cmp
and
jle
dec
mov
cmp
sub
stc
(bad)
stos
cmp
and
jl
push
or
out
fiadd
mov
stc
cmp
mov
clc
pop
jmp
imul
cmp
mov
pop
sub
add
inc
inc
or
push
imul
leave
xchg
ret
js
out
loop
lods
sub
fdivr
inc
jg
jmp
lahf
push
fucomip
sbb
adc
in
cld
mov
cld
jns
scas
cmp
pop
mov
shl
dec
test
mov
and
js
pop
jge
xchg
add
push
or
in
inc
add
mov
mov
enter
imul
push
in
sbb
int
pop
or
push
out
pop
ret
in
mov
(bad)
retf
pushf
pop
test
int3
adc
lds
aad
cdq
mov
movs
jnp
mov
xlat
loope
test
addr16
sbb
inc
aaa
xchg
xor
loop
sub
loope
inc
out
stos
xchg
xor
loopne
repnz
sub
xchg
pop
repnz
cmp
int3
les
imul
pop
push
(bad)
movs
mov
out
retf
loopne
push
mov
and
je
test
aaa
jmp
add
xchg
das
dec
imul
mov
(bad)
movs
daa
dec
mov
or
retf
dec
mov
add
lahf
jnp
mov
(bad)
sub
mov
cli
sbb
bound
dec
pusha
xor
adc
or
je
push
mov
test
mov
and
sub
(bad)
(bad)
jle
jge
cli
sub
rcr
retf
xchg
clc
dec
dec
add
(bad)
fstp
mov
jp
mov
mov
jnp
xor
jnp
xchg
ud1
loop
sar
pop
lahf
rcr
xchg
test
fst
adc
int
push
dec
push
fcomi
xchg
and
jae
jb
sti
mov
cmp
push
imul
xchg
mov
scas
mov
jle
movs
dec
movs
sub
lods
dec
or
je
ins
xor
mov
mov
mov
pop
inc
fcos
jnp
mov
call
xor
lods
leave
int
add
mov
outs
cli
out
rcr
push
xchg
stos
repnz
test
and
mov
sub
cdq
sbb
pop
xor
fs
mov
inc
and
hlt
mov
les
pushf
test
mov
cld
cmps
xchg
movs
push
or
jecxz
rcl
jle
imul
xlat
es
and
loopne
dec
sbb
mov
aaa
sbb
shl
(bad)
jg
jg
nop
(bad)
sbb
das
pop
mov
push
xor
push
pop
cs
cmp
push
inc
cmps
fldenv
loopne
aaa
fs
sbb
xchg
out
pop
adc
rep
sbb
fidiv
sub
pop
cmp
enter
loope
xor
pop
cli
push
rcr
push
test
pop
shr
(bad)
shl
dec
imul
cmps
mov
adc
push
jo
mov
xchg
or
jecxz
push
iret
lahf
pop
test
cwde
mov
dec
sub
mov
rcr
out
dec
or
arpl
cmps
push
outs
in
push
sub
unpckhps
pop
(bad)
and
sbb
into
inc
(bad)
pop
or
pop
sahf
(bad)
js
dec
(bad)
cmp
cwde
and
cmp
mov
dec
sub
push
lahf
push
adc
mov
and
lds
mov
shl
std
cmps
mov
(bad)
sti
stc
outs
test
xor
rol
dec
mov
cmp
(bad)
or
adc
dec
aaa
(bad)
and
dec
mov
sub
add
sub
push
mov
cwde
mov
cmc
push
aaa
aam
inc
adc
icebp
std
aas
and
jp
int
push
jno
sub
sbb
(bad)
cmp
daa
inc
add
fidiv
xchg
mov
movs
clc
mov
push
dec
scas
xchg
imul
(bad)
push
adc
in
mov
test
shr
push
call
jne
jne
cmp
mov
sbb
jnp
ja
js
fiadd
ficomp
(bad)
fbstp
inc
clc
sub
stos
xor
movs
xor
repnz
cli
jbe
jae
in
add
or
jmp
xor
addr16
adc
cmc
aam
cdq
call
xchg
(bad)
lds
adc
ins
sbb
icebp
fidivr
inc
ins
or
mov
cmps
sbb
ret
pop
stos
call
sbb
arpl
push
add
(bad)
aaa
pop
jmpw
mov
and
cmp
loope
cmp
dec
(bad)
into
or
cli
ds
and
sbb
pop
ja
mov
jge
xor
test
je
mov
pop
rcl
dec
mov
(bad)
loope
aaa
mov
inc
push
fs
mov
xchg
stos
test
mov
pop
retf
js
push
push
dec
pop
in
mov
in
outs
or
adc
pop
int
cmc
stos
or
fwait
inc
xor
xor
push
hlt
cmp
loope
sub
sbb
(bad)
pushf
cli
push
daa
cmp
iret
ficomp
or
mov
popf
jae
push
sbb
cmp
mov
mov
or
sub
ds
mov
popf
sbb
pop
iret
xor
or
sbb
xchg
dec
sub
popa
and
fwait
and
dec
shl
inc
mov
mov
test
xchg
shl
cs
cli
xor
jo
hlt
out
jno
add
icebp
ret
lods
mov
sub
stos
fnstenv
imul
aam
test
retf
xchg
fdivr
jmp
sbb
dec
fisttp
std
jo
sbb
gs
or
mov
dec
sub
sbb
fwait
sbb
pop
jbe
xchg
les
xor
pop
je
aaa
mov
out
lock
fisubr
adc
jbe
lea
fist
mov
out
pop
out
push
sub
and
mov
jl
int
call
sub
inc
or
inc
loope
push
sub
test
or
mov
(bad)
mov
fisub
test
jmp
xlat
pop
cwde
add
leave
lea
pop
xor
retf
cli
clc
or
xchg
and
in
mov
xchg
ja
pop
jnp
fsubr
rcr
popa
sbb
pop
jl
enter
sbb
(bad)
daa
cmps
jmp
cmp
adc
in
pop
nop
jno
xor
jne
dec
aas
dec
or
lds
xchg
test
xchg
stc
xor
cli
sti
mov
cdq
call
jg
loopne
shl
sar
retf
aas
retf
cmps
and
xor
cmc
scas
imul
call
push
out
jne
ret
iret
sbb
lods
pop
out
sti
sbb
jae
sub
dec
cmps
mov
jmp
pop
cmc
dec
jg
pop
loope
rcr
rcl
mov
mov
mov
dec
je
in
add
cli
xchg
adc
addr16
mov
fist
dec
retf
scas
push
dec
xchg
sbb
outs
dec
jmp
xchg
xchg
ficom
jae
xchg
mov
push
in
sbb
in
push
arpl
cmp
jle
xor
xchg
aas
or
pop
or
and
pop
in
ja
pop
cmp
jne
out
cmp
dec
int
lock
test
jbe
dec
test
push
pop
ss
or
inc
in
retf
loope
push
push
in
cmps
cmp
retf
ret
imul
mov
sar
dec
mov
add
sub
rol
cmp
popa
jo
sbb
aaa
cld
xchg
in
inc
(bad)
out
fbld
xchg
out
cmps
push
popa
pop
nop
stos
out
lock
cmp
retf
pusha
mov
imul
test
in
sub
or
in
(bad)
xor
popf
inc
inc
mov
fs
mov
mov
or
sub
stos
pop
and
dec
mov
cmc
pop
jecxz
scas
jno
das
jecxz
push
and
fcmove
shl
fimul
xchg
iret
nop
xchg
jle
out
iret
retf
sub
sub
(bad)
cmps
add
loope
mov
repz
cmp
ror
int3
sahf
addr16
les
icebp
adc
cmc
xor
mov
jmp
stc
scas
test
xchg
adc
xor
iret
jmp
dec
push
pop
mov
fwait
inc
add
push
jns
push
fadd
repz
sub
pop
ins
inc
loope
pop
call
pop
pop
test
retf
inc
cmp
in
sbb
test
inc
adc
sahf
mov
retf
dec
sbb
fdiv
sub
call
js
aad
lea
jmp
test
pop
pop
sbb
fmul
ins
sbb
pop
add
arpl
mov
mov
xor
dec
stc
(bad)
leave
xchg
hlt
sub
push
lea
sar
in
mov
int3
leave
mov
shl
out
daa
hlt
in
jbe
pop
cmp
pop
push
xor
lock
jb
sub
loop
retf
xchg
fnstsw
call
add
movs
inc
jmp
sbb
xchg
jnp
cwde
mov
mov
adc
xchg
arpl
neg
mov
imul
icebp
std
or
cld
in
xchg
sub
inc
sar
mov
movs
mov
mov
out
and
lea
xchg
loope
lea
inc
mov
xchg
sbb
nop
push
mov
add
or
bound
or
arpl
ja
jmp
and
xchg
mov
push
test
stc
aaa
int
jle
ret
pop
xchg
scas
fdiv
add
jo
pop
mov
data16
sub
sub
mov
popa
out
sub
xor
mov
sbb
mov
jnp
xor
mov
sbb
adc
xchg
out
mov
outs
aas
dec
xor
fcomp
sub
ja
mov
cmp
stos
and
add
adc
retf
inc
sub
sbb
sar
sbb
inc
mov
add
jl
outs
(bad)
mov
mov
icebp
int
imul
mov
movs
sub
push
pop
addr16
dec
loope
and
mov
fimul
mov
int
fidivr
sub
push
and
fwait
mov
and
push
test
test
pop
and
mov
fimul
mov
xchg
cmp
shl
or
jle
add
mov
sti
jae
add
scas
sar
or
(bad)
xlat
lods
into
adc
push
pop
inc
mov
pop
scas
cmp
cmp
into
jge
cwde
add
inc
pop
lods
push
and
pusha
inc
dec
jle
imul
clc
mov
adc
daa
mov
xchg
sbb
(bad)
cwde
mov
pusha
or
inc
mov
or
ficomp
mov
call
ret
dec
pop
call
or
pop
lods
aad
(bad)
into
lods
jle
adc
jg
or
xchg
add
stc
fmulp
ror
mov
aas
sbb
imul
dec
inc
daa
or
(bad)
xor
or
inc
push
sub
je
add
cld
repnz
ss
sbb
jmp
xchg
dec
lods
cmp
test
test
xchg
imul
pop
cmp
jp
imul
dec
cmp
push
pop
mov
push
and
xlat
or
mov
scas
dec
cmp
(bad)
lock
add
mov
adc
iret
cmp
adc
(bad)
or
and
cmp
jns
inc
push
xlat
leave
mov
fidiv
xchg
jnp
add
movs
js
add
ffree
pop
mov
(bad)
popf
sub
push
inc
mov
push
adc
or
dec
sub
jo
mov
pop
popf
or
imul
pushf
sub
sub
leave
cs
or
test
sbb
push
add
or
mov
pop
aam
shr
xor
and
inc
mov
dec
jbe
pop
sub
add
fcom
shr
clc
in
jno
jno
and
stos
out
cld
cmp
sti
loop
vsubpd
mov
push
stc
in
push
push
mul
xor
retf
inc
push
stos
inc
xchg
arpl
(bad)
loope
cmp
fist
adc
leave
dec
push
ret
std
fsub
mov
lds
lods
(bad)
mov
retf
(bad)
pop
in
out
cmp
ret
(bad)
jl
xor
mov
jno
lahf
fnsave
push
xor
cli
or
jbe
dec
das
fwait
repz
jmp
push
push
(bad)
ss
add
lds
add
sub
adc
clc
push
lds
jmp
pop
imul
xor
cld
jb
inc
into
aad
add
into
cmps
(bad)
inc
mov
and
pushf
mov
mov
cmp
pop
test
mov
hlt
jle
dec
sar
or
mov
mov
into
cwde
sub
inc
push
jl
in
mov
arpl
jb
push
dec
loope
out
cli
mov
js
or
xchg
xchg
cmp
push
outs
dec
mov
cmc
xchg
mov
stos
js
cmp
aaa
out
push
aam
mov
pop
push
call
fwait
sub
xlat
or
leave
sub
rcr
inc
js
xchg
or
nop
test
mov
jmp
or
les
push
repnz
pop
movs
(bad)
arpl
mov
test
sbb
rol
sbb
or
loopne
(bad)
sbb
adc
pop
sbb
test
clc
xchg
inc
jmp
cmps
data16
sbb
mov
rol
jp
(bad)
jne
cs
(bad)
enter
inc
ja
imul
fidivr
shl
into
pop
imul
int
in
jnp
fbld
(bad)
push
sbb
daa
test
mov
sub
or
shl
dec
xchg
pop
pop
adc
sbb
push
mov
push
inc
and
das
mov
dec
dec
jmp
pusha
ret
or
mov
inc
push
and
xor
pop
test
and
and
(bad)
xchg
(bad)
aaa
cmp
or
inc
int3
test
outs
clc
cwde
fisttp
sub
push
jg
std
adc
stc
pop
xor
xor
imul
mov
mov
xchg
cld
xchg
(bad)
aam
mov
(bad)
in
pop
push
sbb
push
cmp
mov
les
adc
sub
adc
sub
addr16
jo
or
jnp
sub
fwait
clc
inc
sbb
dec
scas
jmp
mov
and
sub
push
xor
out
outs
retf
pushf
adc
bound
imul
(bad)
mov
es
dec
lahf
(bad)
mov
inc
lahf
test
xchg
pop
mov
mov
mov
jl
dec
mov
fnop
xchg
push
clc
(bad)
ret
push
inc
std
adc
les
jbe
or
mov
pop
and
adc
lods
mov
outs
pop
test
sub
cld
out
mov
mov
test
jae
ja
out
out
sub
sub
mov
mov
fstp
push
pop
shl
jge
jns
or
cld
add
out
sahf
or
mov
jle
fild
aam
loop
sub
add
inc
mov
cwde
popf
cld
sub
out
(bad)
xchg
ds
pop
mov
mov
push
mov
push
loop
retf
xchg
mov
pop
cmp
test
aaa
or
test
or
xor
xchg
jae
xor
add
ins
in
or
int3
ja
and
out
cmp
jb
dec
cmp
inc
mov
add
fcomip
xor
jae
je
push
push
push
mov
pop
sbb
push
sti
popa
data16
sbb
scas
std
pop
test
mov
and
xor
mov
push
dec
and
sti
xor
ja
jmp
inc
pop
mov
leave
mov
es
movs
test
sub
push
dec
sahf
movs
aaa
mov
cli
mov
cld
push
retf
add
aas
xchg
dec
xor
jmp
imul
(bad)
call
add
jno
sar
push
push
sbb
xchg
mov
out
jbe
(bad)
dec
jbe
xlat
pop
loop
mov
add
data16
fdiv
adc
jmp
fnstenv
outs
aaa
sbb
cmps
add
jl
gs
mov
aad
(bad)
or
add
ins
mov
mov
fild
add
les
(bad)
pop
das
fwait
mov
ret
repnz
(bad)
mov
mov
inc
cwde
pop
xor
cs
out
dec
or
and
jbe
mov
xlat
out
mov
inc
mov
scas
pop
and
and
(bad)
fs
xchg
(bad)
jl
push
mov
in
outs
enter
pop
pusha
in
rcr
sbb
cs
stc
sbb
out
js
xor
movs
add
mov
sub
pop
out
mov
daa
cmp
inc
out
cdq
pusha
stos
pushf
mov
push
pop
int
cwde
popa
cs
mov
mov
xor
dec
cmc
xchg
jecxz
ds
or
mov
mov
push
retf
das
bound
sahf
sbb
inc
aaa
(bad)
(bad)
hlt
ret
adc
fldenv
add
jle
iret
xchg
test
mov
cmp
into
idiv
call
arpl
xchg
cmp
adc
and
mov
mov
jg
(bad)
pop
in
push
retf
or
mov
mov
repz
jecxz
or
xor
mov
test
and
gs
mov
ror
sbb
push
jns
xchg
mov
inc
push
mov
sbb
cs
int
out
pop
jmp
cmp
push
mov
dec
ror
cmp
cmp
push
lahf
jg
addr16
rcl
and
mov
mov
and
sbb
pop
jo
clc
cmp
inc
pop
inc
xchg
dec
outs
jg
fdiv
dec
or
enter
adc
les
fnstcw
je
retf
shr
daa
cli
inc
ret
(bad)
lahf
fnstcw
mov
out
jp
dec
mov
call
loop
cmp
adc
push
shr
sub
fstp
cmps
jno
ins
pop
scas
in
fimul
sahf
adc
mov
fwait
dec
mov
cmp
sbb
test
pop
lods
clc
add
es
adc
inc
sahf
inc
mov
out
inc
loopne
pop
(bad)
rcr
mov
mov
movs
lahf
lock
and
or
leave
outs
mov
repz
mov
imul
loopne
cli
imul
mov
or
mov
ficomp
in
dec
fisubr
inc
mov
pop
loope
out
hlt
jp
ins
aad
or
cmp
inc
jg
jnp
mov
pushf
jbe
aam
fisttp
loop
xor
gs
shr
call
xor
bound
repnz
imul
add
or
and
outs
mov
ins
test
loop
pop
popf
div
shr
jbe
imul
scas
(bad)
jmp
jne
bound
rcl
out
mov
push
in
and
fistp
dec
add
jecxz
pop
push
dec
out
pop
(bad)
pop
lods
lock
scas
mov
xor
out
cli
mov
hlt
cli
outs
mov
aam
stos
adc
mov
jmp
push
sbb
sbb
and
mov
shr
fsubr
pop
mov
imul
int
cmp
imul
sub
xor
mov
out
pop
(bad)
pop
fistp
pop
cmp
or
mov
addr16
iret
mov
adc
xor
pushf
jg
(bad)
movs
aam
imul
dec
add
mov
jecxz
lds
sbb
sub
mov
push
mov
or
pop
sub
jne
mov
add
pop
shl
sti
and
test
imul
sti
mov
out
sbb
jp
push
ja
std
jg
cwde
ins
repz
enter
adc
fwait
adc
js
test
test
das
sar
scas
vpacksswb
xchg
jbe
sbb
imul
cmp
call
test
in
cmp
lahf
dec
xchg
add
cmp
lea
add
adc
mov
pop
jne
xor
aaa
cs
xchg
mov
lea
and
and
pop
loope
jmp
dec
jnp
xchg
les
or
test
add
fwait
jp
sub
cmps
rcr
inc
dec
and
lea
ins
push
jecxz
sub
inc
shr
fdivr
ss
mov
jmp
or
pop
out
ja
add
mov
mov
shr
pop
jecxz
jns
aas
mov
fnstenv
mov
ds
xchg
retf
(bad)
icebp
mov
xchg
mov
xchg
mov
push
adc
stc
or
outs
outs
inc
hlt
or
fnstenv
and
and
push
xor
test
inc
mov
add
out
fs
xor
add
cs
mov
retf
bound
pop
xchg
jmp
add
sub
(bad)
aam
dec
and
out
sar
movs
mov
mov
mov
test
repnz
adc
mov
xor
adc
jno
add
int3
fsubr
push
pusha
das
sub
pop
repz
call
push
adc
pop
pop
mov
stos
aas
mov
fisttp
cmp
dec
add
sar
pop
bound
int3
mov
(bad)
sbb
movs
imul
(bad)
add
pop
ret
aas
adc
jecxz
daa
and
sub
fwait
mov
je
pop
mov
and
cwde
push
push
mov
data16
sahf
sbb
fwait
mov
sbb
scas
mov
in
cmc
dec
jl
repnz
lds
pop
out
jns
sbb
leave
(bad)
pop
inc
mov
fld
fbld
xchg
mov
add
call
pop
aas
les
imul
movs
std
sub
bound
pop
lea
std
inc
xchg
cmp
sub
jnp
pop
sub
aad
cs
aam
mov
add
pop
push
fistp
xchg
push
jmp
leave
jmp
popf
(bad)
je
xor
jbe
loope
inc
shr
inc
pop
fdiv
push
lahf
xor
test
push
mov
jg
mov
jecxz
cld
adc
jbe
clc
popf
mov
into
sbb
test
test
push
addps
sub
repnz
into
(bad)
mov
mov
sub
pop
sub
dec
sbb
xor
sbb
aas
mov
shl
and
pop
out
inc
loope
jp
adc
mov
hlt
in
cmps
and
std
lods
pop
retf
out
pop
xor
in
sub
or
push
mov
xchg
int
cld
repz
jle
adc
jg
add
aad
retf
push
jecxz
out
jo
or
adc
call
adc
pop
movs
fnsave
leave
dec
(bad)
push
mov
in
pop
or
inc
iret
add
stos
dec
adc
lea
inc
mov
push
lods
lahf
pop
loopne
stos
xor
pop
sub
test
shr
fsub
repz
scas
sub
icebp
das
push
add
cmp
inc
outs
retf
inc
test
mov
fdivr
mov
sar
and
inc
sub
inc
and
adc
loope
jmp
jmp
in
ret
add
push
and
movs
mov
xor
sar
dec
inc
push
(bad)
pop
xchg
ror
frstor
ss
sub
hlt
aam
popw
pushf
cld
adc
push
mov
scas
addr16
adc
and
imul
jg
or
and
ja
mov
jl
lock
jno
rcr
fld
inc
mov
jne
xor
xor
cmc
idiv
out
and
sub
adc
cmp
or
push
aas
mov
mov
test
mov
mov
push
xchg
xchg
push
pop
or
mov
pop
cwde
fadd
cmp
jnp
push
dec
js
mov
jns
movs
popf
push
inc
mov
and
inc
and
sbb
xor
jbe
loopne
cmp
add
mov
pop
pop
cmps
cmc
mov
adc
mov
mov
das
in
push
stos
sub
xchg
dec
in
sahf
in
(bad)
aaa
push
xchg
leave
popf
gs
xor
xchg
ss
sub
gs
inc
and
fiadd
sub
add
dec
mov
inc
jmp
shr
inc
pop
movs
je
adc
add
push
lds
call
mov
retf
ss
xlat
inc
and
mov
mov
or
cld
lea
cmp
inc
mov
hlt
out
push
jb
and
(bad)
xchg
loop
jns
dec
int3
cli
cmps
pop
repz
shr
sub
cmp
xchg
ja
lods
xchg
outs
loope
lock
rcl
inc
jp
stc
ja
sub
movs
repz
dec
rol
ss
mov
imul
add
fdivrp
inc
cmp
sub
add
jnp
xchg
xor
ds
xor
lods
repnz
in
test
sbb
mov
inc
pop
push
sub
call
and
sar
and
loopne
rcl
faddp
mov
jmp
xchg
pushf
fwait
sbb
add
dec
xlat
(bad)
(bad)
xchg
aaa
xchg
pop
popa
lds
adc
into
test
cmc
js
xlat
ret
add
loop
or
mov
bts
arpl
movs
repz
push
inc
add
mov
ret
jae
lods
mov
inc
js
aas
adc
lock
cld
inc
js
inc
mov
mov
inc
and
sbb
add
fdivr
loopne
mov
fsub
dec
mov
jg
jns
dec
cmp
pop
mov
push
rcr
cmp
mov
in
pop
aad
jge
jge
pop
arpl
test
ins
jle
and
sbb
hlt
cmc
mov
push
idiv
add
push
sub
mov
enter
sbb
dec
pop
xor
dec
fsubp
jne
das
mov
mov
add
retf
out
nop
cmp
jl
cmp
sbb
loopne
test
call
test
cmp
addr16
fisubr
hlt
in
loop
adc
push
movs
dec
mov
pusha
stc
push
clc
inc
ss
loope
dec
sub
repz
cmps
mov
sub
out
arpl
ret
adc
icebp
pop
sti
inc
(bad)
(bad)
retf
mov
stc
xchg
sub
jo
cmp
in
idiv
push
dec
xchg
add
adc
repnz
push
xchg
mov
fcmovnb
add
int
xchg
in
lods
push
cmp
sub
js
mov
rcr
mov
out
cdq
aad
shl
push
test
das
into
or
sar
pusha
loope
mov
adc
push
cmp
sbb
hlt
fadd
(bad)
push
sub
mov
mov
dec
and
mov
aad
iret
mov
cmps
inc
lds
imul
jmp
sahf
icebp
jl
or
push
dec
and
push
dec
pop
stos
and
adc
adc
test
cmps
leave
retf
cmp
jbe
adc
mov
(bad)
pushf
cmp
out
inc
jae
push
int3
mov
mov
lahf
arpl
and
lahf
mov
jp
add
out
pop
and
int
jb
in
bound
jnp
xchg
cmp
xchg
mov
in
mov
push
adc
xchg
jb
xchg
mov
inc
add
jbe
inc
les
push
lock
aas
out
push
sub
jns
ret
pop
popf
je
pop
aaa
das
jge
mov
mov
push
(bad)
mov
xchg
and
scas
popa
xor
dec
or
pop
punpckhwd
add
dec
(bad)
cld
jbe
scas
jne
mov
fcom
idiv
dec
ret
mov
out
jmp
mov
add
or
pop
pop
inc
outs
fiadd
fst
add
imul
jo
cdq
fdiv
or
minps
or
outs
xchg
xchg
mov
xor
xchg
in
call
mov
sti
aas
adc
push
and
adc
out
pop
js
daa
mov
test
pop
mov
pextrw
mov
mov
hlt
(bad)
adc
cdq
mov
dec
iret
rcl
push
jnp
mov
ds
mov
movs
pop
mov
sub
jb
add
loopne
jmp
popa
pop
stos
and
shl
shl
stos
mov
mov
call
mov
mov
mov
mov
jb
icebp
icebp
mov
pop
arpl
cmps
jo
in
loop
mov
fsubr
xor
jb
xchg
jb
sbb
imul
xor
iret
push
std
cmp
fiadd
dec
fadd
xor
mov
enter
and
stos
aaa
retf
movs
cli
int3
cmp
add
mov
cdq
xchg
mov
mov
ret
cwde
ds
retf
push
sahf
pop
mov
jb
dec
push
repnz
pop
adc
push
push
fdiv
inc
xor
cmps
xor
jge
mov
xchg
pusha
push
ror
in
jnp
mov
(bad)
cmc
rol
pop
cmps
mov
fcompp
bound
fcomp
cmp
jp
add
ins
fisttp
push
les
and
popf
jmp
adc
push
test
or
xchg
mov
push
pusha
push
xchg
cmps
pop
push
sbb
xlat
in
mov
xchg
fiadd
std
push
ja
idiv
(bad)
and
jecxz
cmp
push
mov
inc
not
into
mov
into
das
jo
test
sub
addr16
(bad)
ficom
adc
mul
xchg
xchg
mov
sbb
and
jae
xor
dec
xor
pop
and
push
inc
mov
mov
pop
push
loope
push
push
adc
xor
and
shr
sub
hlt
dec
rol
outs
stos
adc
push
adc
xchg
in
or
repnz
push
sub
(bad)
sbb
jbe
dec
mov
mov
xchg
in
pop
pop
fild
cmps
jns
push
cmps
mov
and
mov
cmp
lock
cmp
cs
aas
and
imul
sbb
jns
dec
push
mov
xchg
and
push
and
mov
xchg
out
dec
and
fistp
jmp
xor
mov
jle
nop
(bad)
int3
fndisi(8087
scas
xchg
mov
aad
dec
pop
mov
std
rol
adc
mov
add
pusha
jmp
push
mov
dec
rcl
stos
jg
add
shl
cmps
add
cwde
mov
fmul
push
mov
sub
mov
js
mov
loop
or
jg
stos
mov
lock
cwde
cld
mov
enter
jp
fstp
ins
cmp
sub
or
(bad)
mov
mov
mov
ret
push
int3
into
jle
in
push
gs
or
ret
fnstcw
aam
sahf
(bad)
adc
lock
dec
outs
cli
pushf
push
jmp
add
push
mov
arpl
retf
pop
ror
sar
or
jl
sbb
dec
fimul
lahf
jp
std
cli
sub
xor
(bad)
hlt
outs
lods
cli
dec
inc
inc
dec
push
arpl
popf
sbb
(bad)
jg
shr
adc
add
cmp
popf
imul
shr
inc
pusha
fadd
cmp
push
xor
(bad)
in
in
aad
test
ds
lods
jbe
ss
pop
addr16
xor
imul
enter
xchg
das
cmp
or
cmp
xlat
pop
mov
aaa
scas
mov
arpl
adc
iret
cmps
pop
push
sbb
movs
mov
mov
jl
jne
xor
lea
mov
or
mov
cmps
adc
push
or
jbe
punpckhbw
push
inc
inc
cmc
aad
mov
rcl
xor
div
loope
jl
aad
jno
jo
scas
repnz
pop
xchg
push
outs
xchg
pop
sbb
test
jp
pop
mov
shl
mov
add
jo
mov
rol
daa
ins
sub
sbb
mov
arpl
and
bound
xor
sbb
aad
adc
test
dec
jnp
lahf
imul
dec
(bad)
mov
loopne
cmc
mov
or
add
ds
adc
sbb
inc
test
push
stc
jno
pushf
pop
mov
pop
push
sbb
mov
scas
mov
mov
cmp
lods
popa
mov
ins
or
cli
dec
push
out
mov
mov
test
xor
xchg
popf
clc
mov
jno
or
add
sbb
into
dec
dec
lea
ins
mov
sbb
(bad)
mov
pushf
mov
pushf
mov
push
push
stos
mov
pusha
scas
call
nop
pop
das
add
ficomp
cmp
and
lahf
fnstsw
cli
and
adc
into
and
or
dec
ins
dec
xchg
pop
xchg
jl
pop
push
mov
test
inc
push
aas
movs
inc
scas
mov
push
add
jge
inc
push
mov
mov
(bad)
por
add
mov
scas
imul
int3
pop
ins
pop
pop
sbb
or
xor
lock
or
inc
cld
js
adc
jecxz
cmp
jno
mov
mov
sbb
and
jge
fwait
mov
sbb
cld
push
popa
inc
bound
jo
xchg
stc
add
je
(bad)
dec
lods
jno
cmps
sbb
stos
rol
sbb
and
fsubr
jae
in
dec
(bad)
add
aad
mov
sbb
lods
out
push
push
cmp
ins
xor
and
aas
or
cld
inc
cmp
xchg
xor
lods
mov
ret
xor
mov
in
inc
sub
jp
or
push
cmp
pushf
je
dec
popa
sbb
addr16
cmp
stos
mov
lea
sti
xor
xchg
imul
jb
pop
bound
add
std
adc
popa
ins
jmp
mov
pusha
cmps
pop
dec
iret
sub
(bad)
repnz
(bad)
sti
push
jb
jb
and
daa
push
rcl
jne
add
push
push
xchg
jmp
or
(bad)
sub
js
inc
rol
out
movs
mov
xor
imul
mov
dec
cmp
fst
pop
mov
int3
enter
aam
add
xchg
(bad)
shl
and
inc
cmc
cld
mov
push
or
aaa
cmp
inc
sahf
mov
jbe
adc
mov
into
repz
sub
cmp
push
mov
imul
adc
rcl
mov
daa
cmc
push
cwde
pusha
push
cmc
or
pop
or
pop
mov
dec
sar
jne
mov
mov
mov
mov
das
ja
sbb
or
aad
and
mov
loopne
and
jecxz
call
fidiv
mov
imul
push
jle
leave
ret
pusha
loope
scas
sub
sub
jle
add
fcmovnbe
clc
mov
or
pop
jb
imul
cmp
and
mov
xor
and
lods
adc
popa
jo
xchg
pusha
cmp
jae
cs
popf
inc
inc
adc
fstp
fucom
nop
ja
pop
mov
sbb
mov
aad
inc
inc
and
pop
dec
adc
sbb
out
in
das
clc
enter
loopne
mov
fwait
jg
inc
out
nop
outs
jbe
sahf
dec
shr
jbe
ds
add
pop
sub
jno
jmp
sub
mov
test
mov
dec
mov
lds
imul
cmp
es
push
xchg
jle
adc
mov
mov
sub
and
dec
inc
call
loop
pusha
pop
mov
loop
cmp
xchg
lea
sahf
or
jno
es
or
xor
repz
ja
in
je
jnp
ins
adc
gs
loop
sub
ja
sub
push
adc
pop
inc
xor
clc
ins
sub
jmp
das
in
sub
sbb
cmp
pop
cmp
inc
imul
fild
stos
push
jg
popf
sub
xlat
adc
(bad)
rcr
sbb
mov
adc
aam
mov
out
xor
bound
and
add
fs
inc
retf
sbb
sub
lahf
enter
fwait
xchg
inc
idiv
push
add
pop
add
mov
xor
jmp
inc
cmps
jecxz
jnp
cmc
movs
xchg
in
movs
dec
push
sbb
adc
stos
aas
(bad)
mov
ror
arpl
jmp
jb
fist
dec
cdq
call
pop
push
mov
or
mov
sbb
xchg
nop
je
add
out
sub
sti
mov
sub
addr16
aaa
fmul
sub
inc
test
inc
in
cmp
push
jo
imul
push
call
jae
in
dec
movs
or
lahf
shl
inc
clc
bound
and
sbb
dec
and
adc
sti
mov
neg
xchg
sub
dec
mov
xor
xchg
add
push
imul
xchg
mov
mov
fsub
pop
add
ins
mov
xor
or
xchg
xor
jae
mov
push
inc
sbb
addr16
jl
jge
or
sub
sbb
jbe
adc
add
or
inc
scas
test
adc
jmp
mul
mov
xchg
scas
lods
mov
aam
(bad)
movs
loopne
mov
adc
xchg
push
pop
ja
xchg
push
test
or
xor
in
sub
mov
adc
add
bound
shl
lods
call
adc
icebp
gs
aaa
xchg
int
ror
js
daa
stos
or
fdivr
mov
push
ins
das
pop
xor
loop
xchg
cmc
and
outs
sub
and
jb
inc
adc
adc
sub
mov
jg
mov
or
lods
in
push
jg
mov
in
or
xchg
inc
mov
mov
mov
mov
dec
js
popa
xchg
jb
inc
push
ins
pop
outs
and
add
xor
pop
nop
les
or
mov
dec
pop
pushf
dec
mov
into
push
mov
push
inc
fnstsw
jnp
xchg
mov
cmps
jb
out
cmps
and
retf
sti
popf
out
or
shl
int3
or
js
xor
xchg
jbe
mov
inc
ss
and
or
mov
call
cwde
dec
loopne
xchg
in
and
sar
xchg
(bad)
add
add
cmps
imul
retf
fwait
mov
cmps
mov
xor
cwde
push
jecxz
adc
mov
cmp
xchg
cmp
fdiv
push
inc
push
outs
imul
aas
ins
jb
sub
adc
jl
pop
jne
xor
inc
idiv
mov
shl
pop
dec
xchg
aad
pushf
jmp
add
add
mov
push
aam
outs
out
push
paddq
add
nop
jp
data16
inc
clc
push
repz
popa
pop
push
xchg
dec
adc
add
push
fs
mov
push
adc
cmp
cmp
add
or
sbb
dec
pop
rcl
ss
cmp
push
sub
sbb
cli
int3
fistp
ret
dec
jno
faddp
cmp
sbb
fistp
pop
xlat
out
push
jp
fmul
and
or
push
xor
adc
mov
nop
xchg
push
mov
pop
ja
pop
sbb
jge
enter
inc
cmps
dec
or
cmp
jp
xor
sub
shl
jae
loop
cli
test
mov
or
in
mov
ret
pusha
xchg
(bad)
je
lahf
jmp
inc
sbb
add
mov
mov
mov
cmp
or
repnz
(bad)
mov
neg
jecxz
mov
(bad)
rcl
fstp
pop
popa
cmps
jnp
pop
in
pop
nop
sub
popf
and
push
(bad)
ficomp
add
scas
or
popa
fnstsw
rol
lds
push
cmp
sub
dec
or
stos
inc
pop
jns
popa
ret
sbb
popf
fisttp
cmps
and
or
pop
cdq
xchg
retf
pop
cwde
pushf
adc
pop
mov
arpl
add
lahf
sbb
das
shl
data16
inc
fs
movs
fwait
int
and
mov
ds
cmp
push
cmp
out
mov
sub
ret
mov
jno
xor
inc
test
add
mov
adc
dec
xchg
push
push
jecxz
icebp
(bad)
xchg
imul
lock
mov
add
jle
lds
addr16
cmp
pop
jbe
cmp
cli
xchg
lods
pop
stos
pop
aas
sub
inc
dec
xchg
ja
sub
test
outs
jmp
dec
sbb
dec
push
xchg
sbb
sub
cmps
repz
das
pop
add
repnz
sbb
fisttp
aas
fimul
xchg
idiv
mov
mov
dec
cmc
pushf
inc
push
(bad)
pop
clc
dec
cmp
pop
and
mov
mov
aas
pop
out
jge
push
mov
mov
ret
cmps
pusha
hlt
jl
fdivr
mov
dec
dec
clc
push
bnd
stos
jbe
nop
sub
mov
xor
daa
and
push
loopne
cmp
cmc
call
sub
add
adc
or
or
pop
inc
sbb
or
cmp
and
sti
test
stos
sbb
inc
in
xor
lahf
daa
cmp
je
pop
mov
cs
mov
and
clc
lods
cmp
pop
jns
and
xchg
lahf
jo
(bad)
cs
cmps
js
call
cwde
gs
mov
aaa
or
jmp
mov
shl
jbe
bnd
cmps
xchg
retf
test
dec
cmc
push
lsl
or
shl
sub
imul
mov
test
xor
push
fld
fimul
cmp
cmp
push
enter
mov
ss
popf
jno
cld
shr
in
sbb
loop
rep
push
repz
sar
or
mov
daa
add
dec
sub
mov
(bad)
jno
xor
test
pusha
retf
icebp
xchg
(bad)
pop
xor
lea
mov
(bad)
cmp
add
rcl
cli
repz
adc
inc
rcl
sbb
mov
pop
pop
mov
mov
or
scas
or
test
dec
add
adc
int
xlat
sbb
pusha
inc
fwait
ins
push
adc
and
int3
sahf
jmp
fldl2t
add
aad
lock
jmp
fnstcw
mov
xor
aaa
repz
cmp
jo
mov
add
pop
int3
call
xlat
mov
fidiv
out
les
cdq
retf
ja
inc
xchg
loop
shl
xor
pop
push
repz
adc
mov
data16
es
cmps
mov
lahf
pop
pop
or
mov
rcr
mov
pop
mov
in
mov
jo
and
retf
mov
mov
mov
rcl
or
inc
mov
jbe
pop
push
scas
cld
loope
xor
mov
loope
jb
xchg
inc
idiv
jmp
mov
add
ret
loop
xchg
jne
movs
push
jne
pop
stc
push
inc
cmp
jbe
fcom
push
or
mov
or
lahf
push
push
or
dec
popf
push
jnp
in
xor
in
and
xchg
mov
xchg
xor
in
xchg
inc
mov
pop
retf
and
xchg
test
mov
or
inc
or
dec
pop
nop
(bad)
pop
dec
test
mov
sti
push
imul
hlt
dec
add
aaa
pop
xchg
gs
sbb
dec
mov
dec
adc
sub
ds
inc
sbb
push
sub
add
mov
and
mov
aas
imul
in
outs
jmp
dec
rcr
loop
aad
lods
cmc
dec
loope
test
push
or
mov
popa
or
enter
leave
mov
arpl
dec
add
int
jae
je
inc
daa
and
daa
das
mov
jge
repnz
xchg
dec
inc
aam
and
mov
or
ss
in
ret
(bad)
mov
mov
xchg
retf
jmp
cmps
mov
push
lea
enter
push
mov
push
xchg
add
pop
sub
stos
push
fisub
xor
pop
push
sbb
pop
fnsave
loopne
scas
jmp
ret
adc
cdq
cs
dec
cs
pop
push
sbb
dec
jnp
int
movs
mov
pusha
push
xor
mov
daa
or
sub
cmp
sub
cs
loope
popf
retf
stos
xchg
pop
fs
sub
cmp
rol
mov
aas
adc
xor
mov
jecxz
or
mov
popf
xchg
arpl
cmc
add
mov
stc
popf
mov
bound
mov
dec
mov
sbb
add
push
push
cli
xor
and
(bad)
mov
in
xor
mov
(bad)
jno
sbb
sub
adc
int
in
popf
mov
inc
pusha
std
lahf
pop
ret
and
dec
repz
mov
daa
das
push
pop
xchg
imul
leave
pop
and
mov
bnd
and
jno
xchg
adc
clc
pop
inc
int3
xchg
sbb
push
adc
mov
mov
test
lds
das
or
imul
leave
into
mov
add
push
pop
push
pop
lahf
mov
add
mov
dec
xor
jbe
in
xchg
mov
jmp
loope
xor
cmp
mov
xor
mov
scas
stos
cmp
jecxz
aam
outs
pop
dec
mov
dec
mov
cmp
popa
fsubr
inc
add
ror
mov
out
fadd
push
outs
mov
add
xchg
sbb
or
scas
adc
cld
ins
aaa
add
or
ja
cmp
rcr
jge
popa
out
dec
mov
xor
ret
loope
fisub
mov
xor
adc
mov
cmp
aas
fcompp
sti
sbb
cmp
push
cdq
pop
xchg
mov
and
xchg
loop
ret
gs
in
jo
lods
and
xchg
and
jmp
add
and
inc
in
imul
sbb
test
lahf
in
clc
mov
cld
push
mov
push
mov
jmp
add
dec
lock
retf
test
jmp
and
scas
ja
pop
xor
sub
cmp
pop
aaa
lahf
mov
add
jle
call
add
xchg
cld
xchg
push
in
into
and
inc
aas
cli
xchg
push
and
loop
inc
sub
sub
jmp
repnz
loope
inc
dec
xlat
aam
in
adc
sahf
(bad)
add
into
pop
pop
lock
adc
adc
iret
jne
cmp
push
std
sbb
fsub
stc
xchg
into
sub
jmp
lods
push
push
mov
adc
dec
sub
retf
xchg
and
lock
stos
or
mov
adc
and
cs
sbb
mov
ins
fcomp
daa
jbe
call
xor
pop
and
pushf
dec
out
sahf
fadd
jb
pop
outs
fist
xchg
adc
out
out
out
xor
fstp
push
xor
ins
cmp
test
stos
inc
shl
dec
gs
ds
adc
add
mov
call
fdiv
pop
or
je
pop
pop
retf
fld
in
hlt
lods
inc
xor
cmp
push
test
cli
sbb
mov
xchg
sahf
shl
or
mov
test
pop
add
dec
retf
out
adc
inc
add
cmps
sar
jno
shl
dec
pop
jo
mov
xchg
push
jbe
add
sub
sbb
or
cld
xor
mov
mov
imul
movs
fnstenv
int
movs
and
mov
add
fwait
mov
aam
sbb
mov
pusha
and
mov
pushf
xor
inc
mov
xchg
cld
sbb
add
inc
ret
sar
shl
mov
aaa
xchg
jmp
ret
sbb
fcmovnu
xor
or
jae
loop
mov
fs
xlat
jle
lea
les
mov
push
jnp
sbb
ins
add
in
pushf
into
icebp
xor
jno
lods
inc
ja
mov
mov
mov
push
or
div
mov
out
cwde
mov
sbb
sti
loop
dec
inc
mov
test
jmp
or
scas
adc
or
retf
div
fcmovnu
pop
bound
jle
jl
pop
cdq
or
in
push
fs
call
ds
loope
stos
push
adc
cld
int3
loop
repnz
popa
outs
into
jmp
sub
mov
or
or
dec
dec
retf
test
data16
ret
adc
push
adc
mov
int
test
dec
push
mov
dec
test
adc
sub
adc
mov
outs
je
ret
add
and
gs
xchg
inc
jg
aas
lds
pushf
cmp
mov
lods
not
mov
jp
fimul
repz
jp
sub
test
inc
pop
repnz
into
cmp
hlt
(bad)
mov
pop
(bad)
push
cld
jb
sbb
arpl
cs
test
lahf
cmp
or
push
test
(bad)
cmp
movs
jnp
inc
sbb
dec
jge
cmp
inc
xchg
or
add
cmp
mov
or
ss
loop
or
fs
jno
pop
jmp
pushf
adc
stos
and
cld
pop
sbb
push
out
jmp
mov
js
out
jns
ins
ficom
stos
adc
jecxz
xchg
retf
cmp
aam
rol
sbb
lahf
mul
inc
sub
aad
and
imul
adc
xchg
fwait
push
jns
icebp
and
aas
(bad)
dec
in
add
lds
and
scas
dec
jmp
jns
je
fst
lahf
sti
out
idiv
popa
ret
push
sbb
aaa
jp
daa
lods
(bad)
mov
push
loop
cmp
push
gs
adc
out
std
or
mov
mov
repz
les
sub
in
push
jb
jecxz
fdivr
cmp
lock
mov
jae
mov
(bad)
int3
inc
inc
aam
mov
lods
cmp
movq
movs
sub
pop
mov
imul
int3
or
add
pop
fcom
pinsrw
dec
in
xchg
js
jl
dec
and
pop
nop
mov
daa
adc
mov
push
dec
and
es
out
lock
in
mov
or
ds
into
add
xchg
(bad)
jae
mov
mov
mov
imul
xchg
add
fild
mov
lods
outs
xor
aad
sub
cdq
paddq
cmp
es
xchg
or
(bad)
sub
dec
fsubr
stos
ins
fadd
fdivr
adc
call
mov
in
inc
mov
xchg
loopne
dec
add
hlt
fisttp
mov
popa
cmp
xchg
jecxz
cmp
ins
mov
mov
(bad)
leave
and
mov
inc
xchg
xchg
cmp
push
dec
stc
mov
loopne
add
mov
movs
into
sub
and
fdivrp
test
in
push
xchg
sbb
pusha
jge
jge
dec
push
in
or
mov
repnz
xchg
cmp
stc
or
loopne
add
add
add
fucomi
cmp
jg
xor
push
xchg
xchg
xor
sub
xchg
cdq
inc
dec
add
fild
clc
arpl
push
jnp
cmps
fmul
mov
icebp
les
push
mov
(bad)
add
sub
mov
sbb
aam
mov
push
mov
jmp
xor
lds
scas
mov
(bad)
aad
mov
fcom
retf
(bad)
sti
push
fs
sub
dec
mov
div
and
mov
push
mov
jle
push
clc
mov
and
sbb
sub
cmp
ret
nop
stc
mov
inc
fsubr
cli
stos
xchg
daa
cmp
push
ja
xchg
shl
mov
jae
cmp
test
popa
(bad)
xlat
or
mov
imul
push
cmp
mov
push
fs
pop
test
in
jnp
int
daa
call
dec
pop
ins
fimul
ror
das
jge
xchg
jmp
sbb
cs
jg
lahf
mov
jl
sub
xchg
ja
(bad)
leave
ins
add
and
sub
mov
add
sbb
pop
cmp
test
sub
mov
popf
ins
or
and
loop
loopne
ins
neg
gs
je
fwait
or
cmp
scas
jmp
cli
and
mov
inc
cmp
mov
pop
aaa
mov
mov
xor
into
addr16
jb
push
mov
retf
btr
test
out
mov
ss
push
pop
cmp
jbe
(bad)
jnp
out
test
pop
std
ret
jecxz
cmp
push
loopne
fs
sti
ins
(bad)
jae
inc
repz
in
push
dec
mov
sbb
mov
mov
mov
and
mov
push
add
fisubr
inc
dec
cmp
dec
scas
aas
pop
aaa
imul
in
ror
clc
pop
add
and
jg
es
ds
pop
in
xchg
add
xor
cli
sbb
xchg
outs
xor
mov
xchg
(bad)
sbb
lock
adc
aad
cmp
jmp
sub
outs
ins
or
xchg
mov
jmp
es
stos
xor
call
loop
ss
or
popf
dec
stc
xor
popf
sbb
xor
or
popf
dec
stc
push
std
pop
repz
arpl
dec
mov
jp
stos
pop
mov
push
cmp
sahf
sar
mov
sbb
call
lea
xchg
sub
sar
cmp
mov
sub
jne
push
stc
(bad)
sar
cli
xchg
cmc
xchg
cmp
pop
retf
jns
mov
(bad)
jecxz
lock
push
in
lods
pop
(bad)
jmp
lahf
cmp
cmp
cmp
fcomi
mov
xlat
xor
popa
cld
ja
js
and
clc
cmp
enter
pop
push
or
(bad)
arpl
jecxz
test
add
stc
in
push
jl
icebp
push
cmp
xor
pop
pop
stos
mov
lock
cmp
pop
icebp
stos
inc
add
push
or
jb
retf
inc
add
out
imul
jmp
pop
icebp
loope
sbb
inc
dec
mov
or
inc
popa
cmp
call
(bad)
jb
mov
test
jne
adc
jg
rcr
repz
xor
fs
mov
ret
mov
push
xchg
pop
test
enter
fs
add
call
mov
sar
out
enter
(bad)
mov
or
jbe
fldenv
xor
dec
jmp
aaa
mov
das
jmp
jmp
bound
(bad)
imul
sub
daa
(bad)
mov
or
sbb
into
dec
jl
sbb
adc
pop
inc
movs
add
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
add
mov
pop
dec
jo
and
dec
or
arpl
call
jbe
push
jns
add
and
or
jo
or
fist
fs
add
test
pusha
cmc
inc
add
cli
das
test
cld
inc
push
hlt
add
cli
add
add
and
and
inc
sub
and
push
dec
test
xchg
dec
and
and
mov
rcr
mov
inc
or
stc
adc
fdiv
and
and
push
sbb
and
or
fsub
push
lea
mov
inc
clc
dec
push
push
(bad)
inc
inc
jne
les
int3
das
sbb
mul
test
inc
xchg
adc
adc
or
xor
push
cld
(bad)
sub
push
push
dec
push
sub
adc
push
push
jl
pop
push
call
(bad)
adc
push
adc
fwait
adc
rol
or
inc
mov
out
or
cmp
add
fnstcw
dec
cld
into
pushf
or
bound
enter
and
dec
ins
or
jl
popf
adc
mov
add
xor
mov
sahf
and
adc
sbb
xchg
and
enter
sti
adc
hlt
sti
or
inc
pusha
and
nop
and
xchg
or
nop
mov
xor
sbb
inc
inc
sub
dec
dec
pushf
xchg
add
int3
aaa
mov
or
in
pop
adc
mov
test
xchg
and
mov
popf
inc
lods
xor
inc
push
add
push
add
ins
popa
outs
fs
jno
call
jo
jb
addr16
cmp
push
dec
outs
(bad)
sbb
jae
das
jg
push
popa
je
aad
ret
mov
add
pop
mov
adc
inc
sub
or
sub
in
int3
imul
xor
or
adc
inc
arpl
les
sbb
add
xchg
inc
adc
and
sub
sbb
push
mov
push
xchg
movs
dec
sbb
aas
sbb
fbld
arpl
xchg
xor
push
and
je
inc
stos
pop
sbb
pop
adc
jne
jg
mov
xchg
inc
lahf
stos
mov
fcom
std
or
adc
xor
xchg
push
and
addr16
adc
and
dec
test
inc
int3
fimul
or
inc
xor
push
dec
popa
xchg
push
jne
adc
xchg
lds
into
inc
fsubr
mov
adc
and
scas
add
dec
daa
xchg
cmp
inc
inc
dec
popa
mov
jns
or
xchg
and
adc
and
dec
out
repnz
and
inc
pop
and
das
adc
inc
dec
push
xchg
pop
and
js
mov
dec
mov
inc
fucomp
mov
adc
add
and
dec
and
inc
push
mov
push
jb
jl
mov
xchg
inc
mov
enter
call
mov
mov
push
and
dec
cmp
pusha
ins
mov
and
xchg
xchg
call
int
fsub
dec
out
xchg
cli
adc
and
mov
adc
pop
dec
ins
xchg
jbe
jg
mov
and
dec
(bad)
xchg
aam
fiadd
mov
mov
push
adc
and
dec
das
xchg
cmp
inc
inc
dec
pop
mov
jge
xchg
xchg
mov
leave
mov
adc
and
dec
hlt
lea
mov
xchg
or
and
dec
adc
popa
dec
push
jbe
add
test
mov
ror
xlat
and
inc
out
cli
mov
and
dec
ds
dec
and
fs
xchg
mov
dec
movs
xchg
scas
and
out
adc
and
mov
adc
xchg
sub
ss
inc
dec
mov
jle
mov
and
dec
ret
and
inc
call
adc
and
outs
mov
mov
dec
popf
xchg
stos
and
loopne
lock
inc
push
mov
and
inc
ds
mov
and
dec
js
and
mov
dec
ficom
dec
inc
mov
sub
and
pop
mov
and
dec
test
mov
mov
xchg
in
repnz
mov
daa
adc
and
dec
inc
xchg
dec
and
popa
imul
dec
xchg
xchg
mov
lds
dec
out
icebp
and
and
mov
sub
xor
xchg
pop
and
outs
jnp
mov
xchg
and
dec
test
inc
int3
fmul
sti
inc
push
mov
and
inc
aaa
inc
mov
sub
or
xchg
(bad)
and
inc
fucomip
mov
adc
mov
dec
sub
dec
pop
mov
cmp
mov
fs
xchg
xor
dec
pop
nop
rol
pop
call
and
mov
sbb
pop
mov
int
mov
push
push
jo
outs
addr16
ins
xchg
outs
pop
dec
je
bound
iret
jne
sbb
inc
dec
je
add
fs
inc
pop
add
sbb
mov
and
sbb
sbb
push
imul
je
push
inc
adc
add
mov
add
adc
adc
test
or
xor
daa
add
stos
or
sub
cmp
dec
or
hlt
js
pop
leave
dec
fdiv
adc
push
inc
or
xchg
add
test
cwde
jns
je
(bad)
xchg
sub
shr
adc
inc
inc
sub
adc
mov
dec
push
pop
js
in
into
or
sub
inc
add
sbb
xor
add
add
xor
adc
(bad)
outs
cmp
add
cmp
pop
dec
add
and
jne
mov
sub
cld
push
retf
xor
sub
jae
sbb
inc
mov
sub
push
fsubr
nop
and
add
lods
adc
push
ds
or
outs
mov
sbb
movs
pop
rol
out
inc
cmc
dec
jecxz
adc
sbb
add
in
test
test
xchg
cmp
inc
push
cwde
adc
add
adc
push
cmps
dec
sbb
test
pop
loopne
jo
xchg
xor
pop
xchg
call
jg
cwde
mov
repz
fdivr
mov
add
in
push
sbb
dec
hlt
out
rcr
fiadd
out
xor
mov
std
je
sbb
sbb
cmc
mul
into
dec
pop
in
pop
sub
shr
arpl
out
mov
jge
mov
pushf
inc
adc
push
and
ret
sbb
pop
push
push
jp
jbe
inc
dec
in
push
or
ins
mov
hlt
jmp
dec
aad
in
add
dec
gs
cs
les
and
lods
adc
jne
ja
fiadd
or
push
push
sbb
mov
inc
leave
lds
mov
pop
push
scas
js
pop
cs
mov
scas
mov
sub
inc
retf
outs
push
adc
loopne
sar
xor
in
lods
pop
cmp
ss
es
fldenv
xor
push
outs
retf
add
inc
pop
es
in
fcom
and
jg
mov
add
mov
cmp
ret
push
jns
or
add
or
jae
jne
jg
arpl
cmp
nop
jmp
adc
dec
pop
add
loopne
mov
repnz
fild
cmp
dec
add
hlt
jne
aam
and
xor
jns
dec
shl
add
jmp
(bad)
xor
add
imul
nop
cli
add
test
les
add
mov
ja
mov
push
repnz
mov
sbb
daa
fs
sahf
add
arpl
or
sbb
push
jno
test
mov
in
xchg
pop
jo
push
retw
hlt
mov
(bad)
pop
add
inc
cdq
xor
pushf
or
sbb
jb
add
dec
cmp
pop
lock
push
xchg
daa
pop
mov
add
aaa
sbb
jno
add
frstor
inc
xchg
mov
push
es
invd
hlt
je
inc
cmps
sbb
mov
jle
por
mov
push
dec
cmp
mov
imul
cmp
loop
out
add
add
sahf
pop
xchg
cmps
int3
add
popa
and
sub
or
mov
popa
add
outs
outs
push
push
xchg
fst
nop
es
test
add
hlt
stos
lea
add
les
pop
inc
xchg
cmps
sbb
ret
mov
add
jp
mov
out
cmp
mov
or
add
and
fisttp
pushf
add
mov
add
call
aas
loope
xor
mov
jae
aaa
cs
push
jno
sti
push
xor
aas
xchg
mov
add
mov
sub
repnz
das
and
xchg
in
test
sti
add
outs
push
cmp
mov
into
arpl
ror
shl
inc
(bad)
and
std
rol
add
or
call
jno
imul
out
add
int
(bad)
push
call
inc
add
sbb
cmp
jl
dec
mov
punpckhbw
pop
add
or
cmp
rcl
sbb
adc
push
mov
(bad)
sub
push
rcl
add
mov
dec
aam
and
jmp
add
sbb
dec
in
add
or
jp
je
into
add
arpl
inc
add
add
jg
pop
sbb
mov
add
rcl
mov
and
add
jne
inc
test
mov
and
mov
cmp
outs
js
mov
inc
add
test
scas
dec
jns
xchg
mov
(bad)
stos
push
pcmpeqd
push
div
sahf
aas
mov
add
aam
add
mov
icebp
sbb
add
inc
(bad)
push
mov
out
adc
jo
add
push
add
add
and
(bad)
jge
add
call
mov
jne
arpl
(bad)
ror
xchg
pop
jl
xor
push
add
and
mov
mov
and
cmc
lods
stos
ret
mov
add
fst
jge
add
imul
sub
add
pop
inc
sub
out
es
shr
add
js
dec
fld
iret
movs
std
mov
mov
lods
and
push
add
sub
out
mov
pop
inc
xor
sbb
dec
cmp
bound
arpl
jmp
push
imul
push
sbb
xchg
xor
add
cmps
aas
push
enter
pop
and
sbb
loop
or
cmp
jne
and
sbb
add
mov
jle
mov
jle
outs
clc
push
sbb
in
mov
out
and
jne
add
inc
ds
repz
stos
xor
push
push
(bad)
push
xchg
rol
das
sub
sar
add
or
cmps
xchg
or
mov
mov
ins
int3
pop
push
mov
js
push
cmp
retf
pop
test
cmp
inc
push
pusha
pop
mov
add
pop
mov
pop
in
pop
fild
push
pop
adc
push
daa
sahf
xor
inc
xor
loopne
add
xor
test
mov
outs
mov
fadd
aad
(bad)
rol
mov
push
icebp
sub
jae
stos
jbe
outs
and
add
fisubr
push
cmp
cmp
jns
cmp
sahf
rcr
sti
pop
xchg
(bad)
lahf
inc
pop
jo
inc
stos
ins
jnp
pop
lods
xor
pop
mov
adc
inc
adc
loopne
dec
pop
jge
add
movs
adc
movs
aam
add
inc
fmul
pop
scas
add
cs
(bad)
cmp
jecxz
and
movnti
mov
(bad)
pop
cwde
ins
clc
inc
pop
and
iret
into
push
add
xchg
mov
or
(bad)
aam
lgs
mov
cmp
add
scas
sub
outs
xor
dec
dec
sub
cmp
inc
cmp
test
add
call
jno
sub
stos
mov
sub
int
dec
popf
inc
xabort
add
mov
adc
out
add
cld
xchg
mov
xor
add
adc
xchg
in
loop
add
sbb
add
out
jns
test
push
aam
sbb
arpl
add
sub
cli
mov
aaa
shld
mov
pop
inc
add
mov
pop
mov
ins
add
push
nop
push
xor
les
cmc
mov
sbb
aam
ror
push
push
not
ss
add
push
aaa
imul
pop
pop
stos
sbb
mov
fnsave
adc
add
dec
rcl
(bad)
fldl2t
add
ds
push
fadd
xor
push
mov
test
loope
pop
repz
lock
jmp
xchg
aad
popf
mov
hlt
pop
dec
jmp
push
mov
ret
int
sbb
cmp
add
sub
in
pop
fstp
jo
add
loope
test
pop
mov
add
aam
cmc
xchg
movs
jae
add
mov
inc
mov
pop
add
mov
bound
jg
rcr
add
mov
lock
xor
retf
jmp
mov
shl
shl
lods
enter
aam
jns
cwde
pop
add
mov
lea
push
test
ins
aad
imul
ds
sti
mov
add
mov
add
(bad)
(bad)
cmp
imul
cmp
call
xchg
aam
pusha
test
xor
cwde
cmps
mov
add
iret
aam
ret
cld
fild
push
add
mov
cmp
add
adc
pushf
loopne
add
in
sub
lahf
scas
mov
aas
mov
enter
cmp
push
addr16
ja
lods
mov
add
xor
ror
cmp
pop
fidiv
lods
xor
outs
adc
add
mov
mov
and
ret
xor
shl
imul
xchg
and
push
push
loope
inc
hlt
int
or
cmp
dec
std
iret
out
mov
mov
inc
arpl
add
inc
out
or
sub
or
jne
scas
sub
cmp
add
cld
xchg
fldcw
mov
push
xor
call
loope
cmp
mov
enter
adc
add
movs
pop
adc
iret
(bad)
inc
loope
imul
pop
or
ficom
mov
inc
out
iret
push
cmp
mov
xchg
mov
push
sbb
mov
add
gs
imul
mov
dec
jne
jns
xchg
scas
ret
add
imul
ds
icebp
das
cdq
add
and
dec
add
push
jmp
aas
add
iret
mov
or
in
jl
xor
sub
xchg
jne
push
mov
jp
call
add
sar
mov
imul
ins
pop
adc
cli
push
fld
xor
add
ret
ins
repz
in
add
movs
xor
sbb
das
pop
sub
add
xor
test
inc
icebp
jmp
mov
ins
sbb
imul
sti
mov
mov
sbb
mul
add
mov
and
out
inc
mov
int
xor
jno
neg
add
mov
jne
add
pop
lods
mov
rcr
shl
cli
(bad)
ja
add
xor
inc
add
cmp
stc
aas
fistp
push
cmp
add
fimul
mov
push
out
push
mov
push
ret
jnp
cmc
add
pop
(bad)
jmp
into
(bad)
add
cld
icebp
(bad)
xchg
add
adc
adc
ds
sar
movs
in
and
out
xor
stos
mov
std
cmp
je
sub
fnstenv
cld
pushf
stos
add
push
or
setns
pop
arpl
(bad)
xlat
xchg
and
xor
stos
lods
retf
clc
mov
xchg
and
daa
or
jge
add
inc
add
mov
push
stc
mov
add
retf
shl
jnp
add
jns
and
int
sub
add
xchg
adc
xchg
cmp
rcr
adc
mov
scas
lock
rol
fld
in
push
mov
popa
mov
mov
add
push
mov
add
fsubp
cld
dec
inc
add
adc
push
mov
cwde
jbe
fsubr
(bad)
sar
movs
or
mov
aam
mov
retf
push
add
add
pusha
cmp
add
xor
push
out
test
cwde
cs
aas
pusha
pop
imul
jg
xchg
scas
fs
(bad)
pop
xor
pusha
ins
jae
ins
ret
arpl
fistp
push
jl
cmp
xchg
cmp
xchg
lods
sbb
es
add
(bad)
jl
test
cmp
add
jne
fs
in
jb
fidiv
inc
ret
pcmpeqd
jge
or
test
pop
int3
cwde
or
sbb
jg
mov
movs
add
add
fimul
adc
pop
leave
arpl
ret
(bad)
int
push
add
jb
and
pop
add
adc
sub
cmp
loop
mov
mov
adc
(bad)
xlat
(bad)
loop
ss
and
push
add
sub
jg
sti
inc
loope
add
mov
add
or
ret
or
out
add
arpl
jne
aas
int3
push
xor
ins
mov
push
sub
aad
add
xor
add
push
jle
jle
xchg
xchg
(bad)
mov
call
adc
push
pop
inc
inc
sbb
ja
aaa
add
sbb
add
(bad)
out
inc
jmp
jns
(bad)
cld
loopne
push
or
es
jb
hlt
xor
sbb
rcr
push
sub
fwait
adc
xor
in
cmovo
jg
lods
push
sbb
movs
and
(bad)
jne
sbb
cmps
cmp
arpl
xchg
into
fist
in
je
mov
cmps
sbb
les
dec
xchg
imul
mov
mov
xchg
out
mov
add
aad
add
mov
mov
cwde
fldenv
add
jge
pusha
cmps
jge
add
das
pushf
xchg
cmp
fisttp
(bad)
in
mov
aad
ror
or
cmps
add
add
and
add
jle
xor
jl
cvttps2pi
jo
out
in
ds
arpl
data16
inc
jae
mov
in
movs
inc
mov
aad
xchg
in
mov
sbb
add
sub
sbb
daa
or
(bad)
pop
jne
or
ret
int
add
repnz
sub
push
jns
push
int3
pop
lahf
fadd
lods
xchg
bound
xor
repnz
movs
lahf
jae
add
add
xor
add
inc
jmp
je
sbb
pop
push
inc
imul
push
les
mov
add
mov
or
xor
in
sub
jmp
pop
jge
mov
jne
sti
fidiv
sbb
stos
and
add
xchg
pop
push
push
xchg
mov
add
adc
and
sbb
clc
mov
pop
pop
rcl
inc
fwait
adc
jae
int3
aad
(bad)
fcom
xchg
pop
add
and
cmps
cmp
les
sub
adc
add
cmps
adc
aas
jno
add
fs
xchg
xchg
not
jle
fisttp
out
outs
mov
sbb
bound
fsub
push
sbb
mov
sti
nop
or
mov
inc
cmps
movs
cmps
into
sahf
lea
imul
sbb
ins
popa
add
shr
push
add
sub
xor
pop
xor
push
pop
xchg
mov
test
push
and
test
add
(bad)
add
inc
ror
inc
test
scas
mov
pop
xor
cli
call
add
dec
repnz
xor
(bad)
cmp
cmps
adc
add
xchg
push
push
xchg
dec
add
stos
sbb
cmc
xchg
ins
shr
mov
jle
add
push
je
ja
rol
clc
test
rcr
pop
cmp
movs
aas
lds
xor
add
xchg
cmp
xchg
add
add
inc
adc
mov
pusha
sub
icebp
xor
sti
ror
into
jo
aas
pop
cmp
ret
rol
test
xlat
add
add
int
xchg
add
mov
pop
(bad)
cli
inc
cmp
mov
mov
mov
or
add
sbb
adc
inc
out
and
(bad)
sahf
and
(bad)
push
dec
cmp
sti
add
cmps
mov
fnstsw
rcl
mov
in
cmp
sub
outs
adc
xor
test
cmp
mov
pop
mov
add
fnstenv
idiv
shr
es
cmp
cmp
addr16
aam
sar
xor
add
xchg
clc
push
ficomp
std
or
mov
mov
jl
add
ja
sub
sbb
xor
fnstcw
sbb
mov
fisubr
and
sbb
sbb
or
mov
adc
clc
mov
cmp
daa
and
xor
adc
adc
ss
dec
or
mov
mov
pop
adc
pusha
cmp
fmul
loopne
adc
bound
shl
aas
push
cmp
or
sbb
mov
data16
xor
adc
and
pop
add
dec
push
mov
sub
push
mov
sbb
scas
shl
stos
sar
push
cmps
jmp
stos
bound
fisub
fisub
popf
(bad)
cli
cmp
mov
and
jns
stc
imul
push
sbb
cdq
ficom
aad
mov
xchg
add
push
(bad)
rcl
xchg
push
fnsave
mov
or
add
fs
xchg
lods
push
cmps
arpl
lds
mov
sbb
pop
and
ror
(bad)
pop
pop
add
or
rcr
sbb
test
sub
xchg
xchg
mov
fsubr
fimul
ficomp
lahf
sbb
test
(bad)
dec
shl
nop
and
xchg
mov
and
jne
inc
inc
push
jmp
mov
xchg
ret
repnz
aas
push
dec
test
or
mov
sub
jl
ret
xchg
push
mov
fcmove
mov
pop
mov
cmps
clc
je
xchg
je
ret
sub
xlat
and
mov
gs
dec
cmp
mov
jecxz
pop
fs
(bad)
fstp
and
push
jmp
sbb
cmp
pop
push
cdq
inc
push
jp
mov
dec
leave
sub
shl
movs
neg
mov
jo
(bad)
jno
push
push
scas
cdq
add
lods
loopne
push
fstp
xor
cwde
mov
out
or
xor
cmp
data16
push
ins
mov
and
xchg
adc
jbe
imul
push
inc
fisub
pop
push
and
push
(bad)
dec
mov
mov
xor
cmp
inc
fldcw
sbb
jg
cmp
or
jp
add
in
xor
pop
in
push
mov
add
push
push
lea
call
xchg
dec
movups
mov
sub
push
xchg
push
lea
nop
pop
mul
add
add
xor
push
push
mov
xchg
(bad)
sub
not
mov
inc
fsubr
cmp
mov
fst
inc
js
je
loop
arpl
push
push
jne
xor
pop
dec
mov
popa
addr16
js
shl
add
dec
dec
add
in
push
push
cmp
fcom
inc
data16
(bad)
mov
fisub
jne
fs
cmp
dec
jnp
push
imul
jns
out
ins
lea
cwde
and
bound
mov
push
fs
gs
push
jne
inc
rcl
and
add
xor
add
push
xor
sar
jne
jmp
add
fstp
add
cwde
test
mov
ins
cli
ror
in
push
add
dec
push
push
shr
adc
pop
pop
ja
inc
pop
push
popa
push
xor
add
or
mov
pusha
sbb
push
and
cmp
and
push
pop
add
in
jno
pop
or
or
clc
adc
add
sub
cmp
pusha
or
mov
add
inc
add
mov
add
sub
ins
push
add
lds
pextrw
adc
adc
and
adc
inc
stc
push
cmp
jb
xor
add
mov
mov
fld
int
mov
shl
and
mov
mov
cmp
jae
pop
hlt
jb
dec
daa
adc
sub
shr
mov
and
add
pop
mov
ds
pop
ret
inc
push
je
or
inc
fcom
sbb
jle
pop
ret
push
push
push
push
cwde
push
and
cs
lea
div
stos
mov
popa
lods
and
out
mov
xor
mov
or
mov
inc
pop
add
inc
inc
cmp
mov
jb
jmp
pop
popa
or
cwde
push
inc
adc
or
add
mov
lea
or
adc
xchg
xor
shl
add
clc
sbb
les
xchg
cmc
int3
xor
jge
push
pop
cmp
ret
cmp
lock
jl
mov
ins
out
pushf
sub
sbb
push
and
add
mov
sbb
loop
fimul
cmp
adc
mov
add
retf
and
repz
dec
add
cmp
mov
mov
fwait
push
cwde
or
lea
inc
xchg
iret
inc
pop
pop
xor
pop
cwde
sub
mov
and
add
test
jbe
loop
inc
adc
mov
add
xchg
mov
push
cmp
aaa
loop
sbb
cmp
inc
cmp
jb
mov
push
nop
jbe
icebp
push
pop
cmp
jb
mov
push
add
int3
dec
loope
loop
retf
mov
ret
xor
pop
pop
stc
lock
shl
outs
inc
adc
dec
sub
and
lock
and
and
and
xchg
mov
fxch
and
adc
xor
mov
mov
inc
sub
jae
or
sbb
ficom
xor
pop
mov
and
xor
or
adc
cmp
cmp
push
jnp
test
mov
es
outs
mov
addr16
jmp
rcr
and
es
xchg
add
pop
ret
mov
rol
xor
rol
push
push
push
call
mov
cmp
dec
dec
mov
shl
add
jb
ficom
push
push
dec
std
xchg
mov
push
inc
or
inc
add
inc
adc
test
xor
pusha
imul
pop
repz
dec
jmp
in
xlat
icebp
mov
nop
jmp
or
adc
inc
push
movs
mov
inc
add
push
push
inc
pop
and
pusha
test
dec
stos
dec
call
das
or
mov
lea
push
call
loope
xor
jne
and
push
push
stos
cmp
push
cmp
mov
adc
cmp
jb
lea
adc
cmp
adc
xor
(bad)
sbb
ds
jno
push
mov
xor
rol
xor
inc
jmp
pusha
jne
push
mov
sti
(bad)
dec
rol
add
dec
cmp
mov
and
jbe
sub
jg
jmp
mov
mov
pop
xchg
jmp
repz
and
adc
push
(bad)
mov
dec
jno
and
jl
lea
adc
aad
sub
sub
movs
mov
push
adc
and
push
dec
inc
ror
and
and
cmp
call
pop
sbb
popa
mov
rep
bound
aaa
call
lock
mov
jmp
mov
jno
push
xor
adc
xchg
dec
dec
xchg
call
sub
adc
or
inc
popa
test
and
sub
inc
cmp
adc
add
pusha
loopne
shr
lea
daa
inc
pushf
cdq
inc
pop
loopne
test
movs
ss
fwait
or
or
jmp
push
xchg
jmp
add
aad
arpl
sbb
push
jo
dec
or
std
ret
cmp
sub
cwde
(bad)
iret
mov
jo
mov
in
shr
jecxz
jecxz
and
add
adc
xchg
out
adc
retf
mov
and
xchg
inc
mov
adc
dec
xchg
xor
mov
je
pop
cmp
jb
xchg
inc
adc
xor
add
in
loop
jg
jl
cmp
mov
and
add
or
ins
pop
push
inc
mov
jae
jns
cmps
mov
shr
mov
int
and
xor
sbb
rol
clc
jmp
pop
add
ins
inc
and
inc
mov
xchg
push
sub
cmp
jae
mov
(bad)
inc
rcl
jmp
sbb
fst
mov
pop
pop
push
in
out
bound
pop
push
adc
lea
cmp
loopne
jae
cld
rol
sub
inc
mov
mov
xlat
sti
dec
and
pop
mov
sub
xchg
or
call
je
cmp
push
jb
sub
dec
cmp
jmp
add
push
jns
or
mov
popf
mov
sub
add
and
neg
xlat
test
and
dec
outs
hlt
jne
out
dec
aaa
popa
outs
inc
inc
daa
cmp
ins
xchg
fucomip
pusha
out
test
dec
lods
push
popf
xor
adc
sbb
stc
sub
inc
lods
add
pop
sub
push
dec
cmp
pop
or
jne
loop
fadd
push
sbb
jne
jns
xor
push
inc
js
adc
push
jecxz
jo
arpl
sub
fldenv
in
push
sti
ret
add
add
or
or
adc
push
add
jmp
xor
add
add
popf
add
jb
bnd
jo
sub
adc
ds
test
cmps
mov
jns
ret
test
mov
add
fnstsw
arpl
mov
pop
jl
call
jg
mov
adc
cmp
push
mov
sub
adc
pushf
push
jge
jle
ror
out
push
and
push
pop
into
xchg
pusha
jb
adc
and
cld
mov
or
or
jle
xor
outs
lods
addr16
push
int
inc
mov
cs
gs
lea
mov
sub
dec
(bad)
test
jb
(bad)
shr
cld
jp
or
sub
jo
xor
add
push
jecxz
xchg
arpl
mov
aam
sub
push
cs
popa
jae
cdq
arpl
pushf
or
push
enter
sub
push
test
out
rcr
mov
add
aas
fld
add
ret
jo
add
or
xchg
add
sbb
xor
adc
lea
add
xchg
and
inc
repz
inc
sub
fmul
push
cmp
sbb
adc
add
mov
jo
stc
in
pop
pusha
loopne
mov
add
jns
cmp
inc
add
sbb
add
data16
xchg
outs
and
dec
mov
and
retf
gs
add
inc
add
aas
ds
out
dec
popf
cmp
push
out
test
xor
out
xor
mov
aas
xchg
cmp
xchg
add
(bad)
lds
pop
inc
test
sub
xchg
dec
add
cmp
add
mov
cmp
in
sti
pop
cli
jge
mov
push
test
add
call
(bad)
pushf
add
dec
pop
inc
scas
jp
call
xchg
add
out
inc
(bad)
icebp
pop
adc
push
pop
cmc
sbb
mov
add
jmp
sbb
and
cmp
test
pop
icebp
cli
xchg
fiadd
mul
imul
pop
sbb
xchg
add
pushf
cmps
ret
mov
dec
add
in
push
adc
push
cld
add
push
scas
mov
add
movs
dec
fyl2xp1
mov
nop
push
out
mov
scas
jp
shr
add
bound
xchg
int
in
cmc
rol
into
ftst
pop
xchg
or
ja
cmp
rcl
shl
jmp
sbb
rol
adc
adc
add
dec
in
cmps
popa
jmp
leave
popf
pop
test
sahf
lods
test
add
and
add
pop
mov
pushf
xlat
mov
repz
les
sbb
sbb
cmp
and
cmp
imul
lods
ret
dec
sbb
in
jb
add
hlt
jl
add
cs
les
mov
dec
movs
push
and
xchg
or
xor
add
or
jmp
out
add
fmulp
fnstsw
push
jbe
add
xor
in
in
call
in
mov
ret
add
sbb
xchg
mov
mov
clc
bound
sbb
or
stc
pop
push
rol
dec
mov
das
adc
jo
test
adc
add
popf
xor
test
inc
adc
loopne
call
cmps
add
aad
and
xchg
push
jb
pop
jecxz
rol
test
(bad)
mov
mov
lods
ds
into
mov
repz
add
imul
xchg
cmps
jge
add
outs
pop
mov
ins
mov
rol
mov
pop
jns
popf
xchg
mov
jecxz
pop
xor
pop
(bad)
mov
dec
hlt
cld
aas
je
out
push
push
add
test
loope
jo
fmul
mov
cld
bound
daa
loope
adc
ret
cmp
mov
les
jp
add
inc
mov
sub
mov
inc
rcl
push
pop
add
lds
sub
test
pop
sub
ret
popf
ja
mov
test
xor
add
cld
aaa
ret
adc
loopne
xor
idiv
iret
mov
imul
push
jae
sub
pop
and
push
xlat
jmp
retf
ds
sar
adc
das
sbb
repnz
cmp
mov
out
mov
int3
jb
inc
mov
ins
mov
dec
cmp
arpl
(bad)
out
cli
push
add
and
xor
add
pop
dec
mov
into
scas
pop
sbb
add
or
xor
xchg
and
add
neg
retf
pushf
xchg
sub
ja
sahf
cmovo
mov
jmp
imul
xchg
jle
test
dec
add
pop
arpl
add
push
iret
add
(bad)
test
add
jne
daa
sbb
rcr
or
pop
add
rcl
cdq
jg
jnp
add
in
xchg
inc
adc
adc
xlat
call
movs
sar
push
imul
inc
out
and
add
pop
or
scas
or
and
cmp
add
fst
fstp
mov
pop
pop
inc
xor
inc
outs
movs
xchg
ins
mov
pop
pop
leave
sbb
push
pop
popa
int
into
je
add
dec
cld
add
cwde
jmp
movs
imul
add
pop
ret
dec
push
or
push
or
loopne
add
sbb
jge
fadd
add
pop
bound
add
xchg
mov
pusha
fnstenv
rcl
int3
add
sbb
rcl
(bad)
js
int3
pop
inc
int
outs
mov
xor
add
aaa
sbb
add
not
mov
aas
sbb
in
test
(bad)
cmp
aad
popa
xor
fadd
scas
(bad)
dec
adc
cmp
aad
nop
sbb
xchg
out
sbb
in
dec
loopne
adc
inc
jle
cmp
sub
adc
scas
hlt
into
add
mov
jge
lahf
cmp
push
xchg
mov
jo
stos
mov
pusha
inc
fstp
add
dec
xchg
and
ss
sbb
mov
(bad)
mov
jmp
icebp
add
mov
mov
into
out
pusha
shl
adc
add
pop
ins
jo
sbb
pusha
sub
out
retf
or
xor
rol
repnz
cmp
push
(bad)
fs
add
loope
inc
cli
xchg
lar
pop
aam
test
icebp
(bad)
fldenv
in
add
cli
or
shl
arpl
add
add
add
push
pop
sub
adc
or
cmp
add
dec
test
cmps
or
dec
or
int3
or
inc
int3
adc
or
xor
xor
lock
popa
call
add
int3
or
daa
push
or
cwde
sahf
sbb
sbb
and
or
xor
pop
jns
es
inc
nop
test
mov
mov
jo
mov
inc
adc
adc
out
and
dec
inc
xchg
bound
jo
test
mov
adc
je
fcomp
pusha
or
cmp
xor
xchg
adc
mov
dec
or
jo
adc
or
adc
(bad)
adc
sub
or
cdq
cli
and
xchg
or
and
jecxz
mov
or
and
inc
retf
mov
pop
jb
lods
and
dec
mov
adc
xor
jl
jbe
and
push
fs
mov
push
and
inc
nop
and
fcom
sbb
sbb
xor
loop
push
inc
(bad)
sbb
add
enter
mov
or
mov
adc
dec
push
adc
inc
sub
cld
test
xor
mov
cmp
adc
and
jmp
sbb
adc
les
outs
and
hlt
and
mov
mov
adc
mov
and
dec
and
sub
and
(bad)
movs
xlat
pusha
dec
inc
inc
xor
xor
inc
dec
cmp
add
data16
gs
or
imul
push
sahf
adc
fisub
cmp
pop
pushf
inc
js
inc
icebp
aad
addr16
test
inc
jae
push
outs
jle
shr
sbb
pop
inc
push
in
ja
pusha
pop
lds
inc
push
pop
push
mov
push
fdivr
outs
outs
xor
js
cmp
mov
and
fsub
jle
jo
cmp
mov
mov
ja
ja
xor
and
lds
test
(bad)
aam
xchg
cmp
push
inc
inc
mov
jge
add
test
outs
ja
inc
mov
push
or
cwde
inc
inc
arpl
xchg
or
dec
pop
dec
sbb
push
dec
(bad)
dec
cmps
fcomp
xor
dec
pop
xor
imul
ja
push
nop
inc
jae
imul
dec
cwde
jns
outs
punpcklwd
push
pop
fs
inc
lods
add
cmp
dec
jl
push
sub
fstp
and
mov
add
mov
xchg
push
outs
push
sbb
jp
sub
cdq
pop
xchg
clc
repnz
fs
(bad)
leave
out
rol
sub
add
xor
aam
loopne
or
or
adc
adc
pop
sbb
adc
stos
xor
sub
and
jae
cmp
pop
jecxz
dec
nop
adc
jecxz
adc
int
push
sbb
jne
mov
and
xchg
add
fmul
adc
sub
adc
add
adc
adc
xor
mov
add
test
add
sbb
js
add
add
hlt
xchg
mov
xor
fcom
(bad)
fdivr
in
add
pop
cdq
sub
movs
fmul
pop
je
add
add
inc
mov
xor
or
addr16
jp
add
or
mov
adc
mov
(bad)
popa
addr16
cmps
call
daa
adc
push
sti
sub
bound
loope
int
in
movs
cmps
imul
add
ror
imul
jl
pop
(bad)
xchg
loope
or
mov
add
sbb
push
and
js
add
dec
pushf
adc
xchg
push
mov
xor
push
pop
push
push
pop
or
adc
dec
and
call
add
(bad)
aad
ins
aad
mov
dec
ins
iret
sub
test
or
mov
cdq
adc
add
bound
adc
add
inc
pop
dec
and
aam
sti
add
jns
ja
mov
sub
adc
or
pop
push
inc
adc
iret
add
jecxz
mov
add
dec
add
jo
push
adc
mov
cwde
mov
hlt
ror
pop
adc
pop
xor
lea
scas
add
or
inc
call
out
(bad)
repz
xor
cld
hlt
xchg
sahf
fcmovb
call
scas
adc
jno
dec
push
bound
rcr
mov
add
push
jo
or
pop
jl
pop
enter
mov
les
sub
jmp
mov
xchg
imul
enter
jb
cmp
arpl
fstp
hlt
out
mov
dec
add
out
loopne
ret
movs
je
lods
lahf
addr16
(bad)
mov
clc
int3
out
sub
cmp
mov
xchg
xor
or
add
push
sub
cld
add
xor
into
shr
inc
call
retf
xlat
add
mov
or
aaa
arpl
dec
leave
sar
aam
mov
fdivr
mov
push
add
sbb
clc
(bad)
aam
xor
ror
and
stos
ins
push
loope
cs
outs
sbb
add
pusha
daa
sbb
(bad)
dec
retf
aas
dec
pop
jnp
sub
adc
push
les
icebp
mov
and
mov
mov
sub
call
cmp
in
clc
push
jp
xchg
jnp
mov
and
pop
push
cmps
xor
movs
push
mov
xchg
mov
fs
and
shr
lds
xchg
cmp
test
cwde
push
retf
cmp
fiadd
sti
arpl
sub
jg
add
out
std
fistp
(bad)
mov
xchg
fwait
loopne
pusha
call
jmp
pop
inc
pop
push
mov
jnp
mov
add
xor
mov
mov
gs
jbe
dec
cs
es
mov
lea
dec
push
mov
and
push
push
inc
push
and
cld
loopne
or
je
push
(bad)
jmp
popf
xor
or
add
mov
adc
and
imul
test
sbb
push
scas
xor
movs
and
push
mov
push
add
sub
sbb
outs
aas
mov
loope
xor
and
add
jmp
aaa
(bad)
cmp
ret
popf
xlat
pop
push
push
push
mov
sbb
mov
add
fisttp
leave
je
js
sub
cmp
movs
and
cmp
jmp
sbb
mov
sub
mov
add
rcr
push
ret
mov
or
pusha
jmp
pop
pop
cmp
pop
loop
call
stc
sbb
rep
(bad)
and
(bad)
push
sbb
or
inc
test
dec
(bad)
mov
xor
stos
pop
jecxz
pop
sbb
shl
ret
jg
sbb
push
xor
dec
lahf
or
movs
(bad)
xor
inc
and
jmp
or
sti
add
aad
add
rcl
sub
das
and
add
(bad)
sbb
and
push
xor
or
sete
loop
push
mov
mov
and
div
add
lods
rol
sbb
sub
sub
movs
scas
xor
test
and
sub
fcomp
pop
push
xchg
fist
(bad)
dec
dec
movs
pop
pushw
inc
add
adc
sbb
sbb
sbb
adc
or
mov
or
fiadd
push
pop
scas
add
lods
mov
dec
pushf
cwde
mov
push
outs
and
push
pop
and
out
jne
push
jmp
dec
in
(bad)
retf
arpl
add
dec
shl
inc
xchg
xor
add
sbb
add
aam
pop
sub
push
push
inc
(bad)
xor
dec
mov
pop
xor
arpl
xchg
dec
rol
stos
or
adc
retf
push
mov
sub
mov
cmp
xor
add
or
mov
push
mov
ret
push
int
push
imul
jge
pop
out
sub
or
mov
jmp
or
push
fstp
test
nop
xor
sbb
(bad)
xchg
and
loopne
data16
mov
xchg
jb
or
retf
xchg
mov
sub
xchg
push
dec
(bad)
lods
mov
jp
add
add
xchg
xor
fmul
fwait
retf
bound
mov
push
add
enter
cmps
push
mov
lods
mov
adc
xor
cmp
add
cmp
mov
fs
adc
fidiv
mov
dec
pop
push
adc
inc
jbe
add
and
scas
into
and
adc
adc
xor
or
adc
and
cmp
popf
rcl
retf
pop
(bad)
xchg
fist
mov
inc
xchg
jmp
loopne
bound
add
pusha
mov
and
shr
rol
add
or
mov
mov
out
jbe
cmp
cmp
mov
cs
das
aam
inc
fs
(bad)
push
push
dec
inc
inc
cmp
jne
sub
add
adc
imul
pop
adc
xor
je
mov
xchg
test
mov
repnz
add
and
dec
or
adc
lods
mov
and
dec
cld
lea
push
imul
data16
dec
sahf
xchg
mov
into
inc
call
or
and
dec
inc
xchg
push
and
nop
mov
dec
rcl
ror
cmp
add
arpl
shl
or
mov
arpl
jns
add
sub
test
adc
inc
in
adc
inc
sbb
adc
push
enter
sub
mov
loopne
pop
pusha
mov
ins
push
mov
clc
add
add
mov
ds
idiv
or
jge
out
push
leave
jae
mov
xchg
jbe
jns
inc
dec
push
test
sbb
push
jbe
xchg
jmp
jb
data16
js
pop
popa
addr16
mov
mov
loope
dec
dec
jnp
xor
inc
aaa
cmp
push
xor
fs
stos
inc
inc
xor
ss
xor
sub
jl
scas
jge
imul
cs
fldenv
dec
or
icebp
inc
push
inc
add
sbb
pop
and
or
inc
cmp
adc
dec
adc
call
mov
sbb
push
dec
sbb
lock
jns
shl
dec
rcl
lods
mov
dec
iret
into
gs
ins
and
adc
cmc
mov
add
add
sbb
xchg
repnz
jb
push
inc
(bad)
xchg
mov
in
cmp
or
push
and
sub
xor
cmps
fist
or
inc
jle
or
mov
lock
or
jb
and
mov
in
call
test
push
or
in
rcr
nop
xor
loopne
or
sbb
mov
js
jnp
rol
mov
ins
xchg
fwait
push
xchg
push
test
push
dec
dec
push
sbb
dec
(bad)
adc
inc
test
aam
adc
xor
adc
bound
outs
cmp
mov
pushf
sbb
out
push
sub
sub
inc
aaa
pop
dec
ret
or
addr16
dec
data16
mov
sub
cmp
dec
xchg
cmp
sbb
or
xor
jbe
xor
mov
fidivr
cmp
sub
pusha
xlat
stc
ins
lea
mov
pop
adc
jecxz
pusha
lds
cmp
jg
in
mov
fs
and
repz
sub
cmp
dec
inc
xor
sbb
pop
xchg
and
aaa
out
lds
xchg
push
mov
and
fsub
ficomp
test
mov
imul
push
sti
dec
and
push
ins
adc
dec
sub
cmp
or
jae
pusha
nop
popa
mov
fild
outs
addr16
xchg
mov
leave
adc
xchg
stos
and
frstor
call
rdmsr
and
mov
jae
mov
outs
dec
dec
cdq
pop
imul
int
and
dec
popa
jae
in
pusha
dec
push
scas
cmp
mov
imul
mov
ss
and
inc
je
xchg
arpl
or
and
and
ins
je
add
mov
mov
pop
sbb
inc
sub
push
sbb
gs
in
push
cld
mov
xor
jne
add
sar
cmp
je
dec
and
sub
dec
lock
in
ret
mov
nop
pop
and
and
sub
or
sbb
mov
jo
sub
or
es
sbb
or
pop
push
jns
call
cwde
xor
popf
mov
sbb
sbb
xlat
inc
dec
add
shl
(bad)
sbb
inc
imul
jp
jo
push
push
push
enter
je
lahf
xchg
and
frstor
mov
mov
(bad)
cmp
outs
xor
inc
and
hlt
jne
xor
mov
test
je
mov
loope
call
add
pusha
and
jl
lea
or
push
add
inc
dec
pop
sti
jl
xchg
gs
dec
jne
jmp
add
pop
retf
movs
cmp
push
loopne
adc
pusha
in
or
sar
inc
xchg
sbb
jp
jl
jo
or
inc
(bad)
push
je
je
mov
lea
jl
add
mov
or
add
inc
jne
jmp
lock
adc
jbe
push
shl
iret
xlat
jp
lods
in
cmp
mov
mov
movs
je
fcmovb
pushf
mov
(bad)
or
push
cmps
sbb
mov
pop
xchg
add
sub
sub
popa
sbb
icebp
adc
aad
jmp
push
jne
cwde
fst
je
mov
or
cmp
xlat
or
sbb
jne
and
popa
dec
out
jbe
cwde
enter
je
add
call
ret
pop
xchg
push
popa
jne
adc
popa
jge
ret
test
test
je
mov
movs
add
push
mov
mov
call
sbb
push
xchg
mov
shl
aaa
mov
rol
mov
inc
nop
fild
lock
(bad)
int3
or
and
push
mov
push
mov
push
fisttp
adc
push
call
mov
lds
push
xchg
mov
dec
inc
add
aam
adc
es
into
or
pusha
inc
xchg
(bad)
int
(bad)
or
push
int3
pop
test
loope
fst
xor
aad
jb
or
lds
push
fdivr
clc
cmovns
add
sub
or
add
cmp
imul
dec
retf
or
push
int3
jg
retf
dec
pusha
jo
mov
jae
sbb
push
neg
lds
call
clc
jne
or
pop
ret
pop
mov
scas
sbb
mov
pop
retf
sub
xor
push
out
movs
nop
sub
mov
idiv
retf
or
inc
mov
sbb
fist
rcl
push
cmp
mov
cwde
push
mov
jmp
sbb
cmc
fdivr
inc
pop
lea
fs
sub
xor
enter
inc
or
sahf
dec
dec
and
mov
inc
push
add
push
mov
cmp
mov
je
dec
dec
mov
adc
xor
adc
mov
ja
and
inc
cdq
dec
cmps
clc
sub
cdq
adc
aam
loop
and
mov
aam
movs
sub
and
add
cdq
adc
mov
mov
lods
xor
mov
shr
and
or
and
mov
repnz
pop
xchg
sbb
test
push
jb
mov
xchg
in
push
(bad)
push
dec
xor
fidiv
pusha
jo
add
je
cmp
lea
mov
je
dec
xor
add
push
int
aas
inc
jp
push
adc
ret
pop
push
(bad)
cli
inc
mov
and
jns
inc
imul
pop
or
dec
xor
fnstcw
push
or
dec
push
lahf
mov
cmp
mov
pop
cli
pop
jno
jge
sbb
icebp
stos
clc
rcl
dec
sti
cld
hlt
pop
iret
mov
test
ret
or
es
cld
(bad)
fist
jle
inc
jae
jnp
ret
lea
mov
(bad)
jp
inc
push
push
adc
das
push
sbb
pop
test
push
xor
dec
mov
sbb
or
fild
fbld
lock
aaa
lods
or
dec
sbb
cmp
mov
retf
adc
sbb
mov
add
enter
push
or
inc
call
loop
inc
movs
cmp
call
in
lods
ds
aad
mov
hlt
pop
inc
mov
mov
pop
je
repz
imul
prefetchwt1
or
mov
popa
fadd
mov
mov
add
xor
inc
mov
sbb
jp
mov
inc
xchg
jo
test
call
fadd
cmp
jne
cmp
call
sbb
or
enter
push
push
shl
or
add
aaa
dec
retf
mov
clc
lsl
push
lods
push
test
xor
imul
inc
adc
xchg
bound
dec
pop
and
or
jne
adc
or
mov
call
adc
mov
(bad)
mov
push
dec
adc
inc
cld
movs
imul
adc
push
gs
sub
or
inc
xor
test
and
jge
sub
adc
fnstcw
into
cmps
push
pop
popf
mov
ja
shr
enter
(bad)
or
sub
(bad)
push
adc
pop
std
and
add
imul
test
lods
adc
cmp
je
inc
adc
or
test
ret
movs
aam
cmp
xor
ja
dec
push
xor
cmpxchg
mov
xchg
cmps
or
inc
test
jb
mov
xchg
add
inc
pop
xchg
rdmsr
out
push
repz
bound
adc
ret
mov
adc
clc
jne
(bad)
lock
jmp
test
cdq
fimul
ret
push
jb
call
and
daa
loope
add
xorps
lahf
fcom
cmp
in
(bad)
push
adc
jmp
adc
cmp
add
sub
xor
and
push
lea
(bad)
lock
retf
rol
and
cli
or
cwde
nop
cld
mov
ds
xchg
add
nop
xor
test
pop
je
clc
sbb
and
or
jg
dec
test
xlat
xor
push
push
fdiv
pop
jno
ss
(bad)
xor
call
pusha
xchg
mov
xchg
rcr
push
jecxz
hlt
test
idiv
adc
push
andnps
dec
sbb
mov
inc
pop
cmp
jecxz
mov
out
nop
mov
cmps
push
pusha
push
mov
sbb
stos
inc
adc
add
cmp
outs
push
mov
jmp
xchg
aam
lods
xlat
xchg
(bad)
jae
push
ins
shl
push
aad
xor
sub
loop
xor
(bad)
mov
mov
sbb
cmp
cdq
adc
push
out
movs
adc
mov
mov
jo
xchg
inc
in
sbb
repnz
jo
mov
mov
sub
loope
push
ret
dec
adc
mov
or
cmc
inc
and
fimul
inc
js
mov
cwde
xchg
nop
add
pusha
jnp
mov
pop
cmp
sbb
mov
clc
jl
test
lds
push
stos
fwait
xchg
adc
add
lea
jae
adc
or
adc
mov
adc
add
pop
dec
xchg
push
mov
pop
jle
mov
or
add
cmp
xor
jmp
jns
sbb
mov
test
sar
push
loopne
loopne
lea
push
sbb
or
fld
jl
mov
sahf
inc
cmp
mov
xor
and
scas
pusha
inc
add
pop
jmp
xchg
ret
dec
neg
sahf
cwde
cmp
in
adc
jno
xchg
retf
inc
mov
pusha
add
push
xor
jmp
movs
inc
or
pop
or
xor
scas
add
jl
cmp
leave
leave
sar
aaa
shl
jae
lea
adc
sbb
push
pop
jl
inc
inc
xchg
xchg
cmp
ret
pusha
inc
jb
push
sbb
test
sbb
add
mov
sub
mov
adc
daa
xor
mov
push
cmp
je
cmp
rol
inc
cwde
dec
and
jnp
jl
jnp
mov
dec
mov
cli
cmp
cmp
popa
xor
cmps
gs
scas
fistp
fwait
sub
cmp
je
cmp
sbb
mov
pop
fadd
push
xchg
lods
inc
es
gs
adc
movs
fwait
call
jne
pop
jmp
comiss
push
mov
add
lea
sub
jb
imul
or
mov
(bad)
sub
lock
into
or
mov
mov
and
test
push
mov
or
sbb
push
mov
stc
pop
xor
icebp
(bad)
pop
push
ss
push
adc
dec
mov
push
popf
sbb
xchg
cdq
xor
scas
and
dec
jne
loopne
or
(bad)
push
add
or
push
lahf
add
sub
inc
ret
fld
cli
int
cwde
test
shl
test
inc
shr
mov
mov
mov
test
push
into
or
repnz
jmp
inc
adc
inc
mov
repnz
sbb
and
or
enter
add
dec
dec
adc
mov
loopne
mov
add
icebp
dec
sbb
stos
mov
stc
add
mov
fmul
xchg
dec
jne
or
not
add
and
jge
pop
or
lea
jmp
jo
and
xor
pop
sbb
xchg
ret
ror
jmp
ror
jno
push
inc
mov
mov
inc
xor
add
aas
mov
jbe
cs
sbb
push
xchg
and
les
pop
add
pop
adc
sub
mov
mov
daa
(bad)
sub
add
dec
push
mov
cmp
xchg
shr
(bad)
or
dec
es
adc
ret
popa
pop
mov
adc
sti
or
jmp
(bad)
or
fcom
or
push
ret
cmp
jno
inc
in
inc
mov
adc
jne
pop
xor
mov
push
aad
sar
xchg
ror
lock
xor
add
cmp
jno
pusha
xor
mul
adc
lods
cmp
push
push
push
daa
cmp
inc
pop
lds
shr
or
dec
pop
mov
lahf
mov
ret
jmp
push
arpl
cmps
mov
je
or
push
clc
mov
pop
imul
mov
mul
pop
add
mov
icebp
sub
mov
shl
push
jmp
cs
xchg
cwde
push
xchg
mov
inc
call
daa
ud1
xchg
push
push
test
pop
popa
je
dec
add
outs
mov
cld
xlat
sbb
cmps
pop
arpl
and
sbb
out
jno
pop
outs
lds
mov
push
inc
cmp
jl
xchg
aam
inc
push
push
xchg
jns
or
sub
xchg
call
xchg
les
addr16
cmp
cmp
pop
mov
sbb
xchg
movs
movs
add
or
daa
leave
mov
and
inc
cmp
icebp
jge
fs
cmp
sbb
stc
sbb
push
retf
mul
call
and
mov
sbb
push
lea
mov
test
mov
arpl
sbb
test
push
mov
sub
sub
sub
test
cmp
sub
sbb
fmul
aas
push
push
aas
dec
push
out
pop
adc
push
xor
lods
sbb
outs
test
mov
push
xchg
lods
jl
mov
adc
xor
push
sub
or
test
sub
pop
jmp
lea
jmp
dec
or
xor
shl
movs
and
inc
mov
dec
popf
sbb
repnz
sbb
test
add
adc
and
les
enter
mov
sub
dec
jl
inc
sbb
add
inc
adc
test
push
adc
adc
les
xlat
imul
jnp
push
imul
and
mov
cmp
ins
push
push
or
add
sbb
fdiv
leave
aaa
clc
xor
cs
lahf
lahf
adc
jbe
add
shl
test
mov
jnp
cmp
call
push
aaa
popa
cli
pop
dec
sub
mov
sub
push
adc
add
pop
dec
in
jne
ret
and
clc
or
or
mov
in
sub
mov
sbb
mov
leave
mov
pop
fwait
sub
mov
pop
jb
cwde
ret
sub
fst
cmp
xchg
dec
ret
inc
dec
loope
jno
sbb
add
push
shr
(bad)
mov
and
add
adc
jp
or
mov
dec
lock
idiv
ret
adc
jne
mov
dec
pusha
pop
sbb
iret
jbe
add
cmovno
or
jne
dec
mov
cmp
jae
pop
mov
push
cwde
add
xlat
and
inc
dec
jne
jnp
add
jmp
add
fwait
pop
push
pop
and
nop
dec
push
xchg
movs
mov
repnz
mov
add
sbb
push
(bad)
sar
sar
cmp
xor
pop
pusha
inc
mov
adc
cmc
and
clc
dec
pop
sub
retf
jbe
aad
jmp
test
sti
and
add
mov
pop
clc
push
mov
mov
and
adc
pop
aam
cmps
inc
push
xchg
mov
mov
dec
xchg
or
pop
loopne
and
push
cmp
jne
cmp
loope
mov
cmp
lock
stc
sub
or
dec
mul
in
mov
or
add
jne
mov
add
and
rol
jae
cmp
mov
mov
shr
mov
or
push
loop
inc
(bad)
mov
sbb
sub
loopne
dec
es
imul
cmps
mov
inc
push
inc
lock
enter
cld
dec
or
xchg
mov
fild
mov
shl
add
mov
mov
xlat
and
xor
or
into
inc
arpl
pop
popa
and
dec
inc
dec
or
cdq
cmp
adc
pusha
sub
adc
js
and
ins
pop
push
adc
jo
mov
adc
lock
pop
dec
cdq
cmc
sahf
mov
repz
inc
xchg
inc
int3
enter
mov
push
jmp
jecxz
adc
or
and
add
or
dec
xchg
add
mov
mov
xchg
addr16
into
rcl
cmp
pop
mov
or
test
sbb
imul
push
into
call
out
jmp
out
fmul
adc
mov
xor
not
call
mov
cmp
rol
nop
loop
and
pop
ret
dec
iret
jne
add
sti
xor
adc
jns
fcmovbe
fsub
and
out
repnz
(bad)
dec
jae
jecxz
or
push
jmp
cmp
es
or
out
adc
call
xor
push
(bad)
fcmove
pop
pop
mov
inc
test
loopne
jmp
sbb
xchg
cs
enter
pop
inc
mov
fld
ds
rcl
xor
push
or
pop
and
(bad)
bt
(bad)
mov
jne
xor
cld
mov
xchg
inc
js
mov
pop
retf
gs
retf
dec
ja
dec
mov
jne
or
retf
pop
test
leave
jl
shl
inc
jmp
arpl
mov
sub
icebp
mov
dec
adc
jle
stc
adc
test
and
sub
jl
ret
popf
aad
hlt
in
and
out
test
dec
jne
jmp
add
in
and
jmp
int
sub
xchg
data16
push
shr
cdq
sub
and
pop
sar
xchg
pop
mov
pop
or
adc
xchg
cmps
lods
inc
ret
pop
inc
fs
cmp
mov
mov
out
ret
fisub
mov
pusha
lea
push
cmp
push
nop
stc
jl
scas
jmp
dec
sub
or
aas
or
mov
mov
sbb
or
imul
or
cld
stos
mov
jp
lock
ror
inc
add
or
cld
mov
addr16
ds
cmp
adc
pop
mov
bound
repz
int3
add
or
push
cmp
mov
jae
pop
xor
mov
or
sub
push
or
inc
loope
mov
inc
and
mov
push
sub
or
cmps
sbb
or
adc
jbe
int
daa
loop
sar
and
add
add
sbb
les
loopne
push
data16
pop
inc
icebp
dec
jno
xor
loopne
inc
ret
cwde
cmp
cdq
adc
or
xor
inc
or
dec
dec
pop
sti
inc
xchg
out
loopne
pop
or
idiv
adc
mov
outs
rcl
xchg
xchg
jne
xchg
jmp
ja
cmps
inc
lock
dec
repz
mov
rol
std
(bad)
mov
mov
push
out
fild
pop
dec
add
sub
adc
sub
jbe
pop
sub
mov
mov
aaa
dec
or
push
sahf
inc
xchg
inc
inc
ror
add
jnp
dec
lock
adc
js
mov
adc
shr
ret
popa
retw
das
gs
mov
dec
adc
ds
fidiv
sti
imul
cmp
pop
pop
adc
dec
sbb
or
cmps
imul
sub
stos
repz
fstp
or
and
je
sbb
and
call
test
das
mov
nop
inc
mov
mov
sub
clc
lahf
xor
stos
cmp
gs
mov
(bad)
push
scas
jo
je
sub
div
mov
sbb
mov
dec
jmp
jno
jecxz
push
movs
jmp
mov
(bad)
mov
add
pop
inc
xor
jg
sbb
(bad)
(bad)
outs
and
rol
jmp
pop
xor
and
inc
sbb
ret
mov
adc
jmp
popa
pandn
mov
data16
ret
push
or
or
mov
sbb
pop
inc
cwde
arpl
jmp
add
pop
push
adc
xor
clc
adc
xor
(bad)
pop
jb
push
pop
ret
data16
or
inc
add
or
or
lock
jg
adc
fild
dec
add
xor
adc
ss
ret
enter
std
or
cld
movs
xchg
neg
cmp
sbb
lock
jle
sahf
or
xchg
xchg
fcomp
xor
pop
inc
xchg
das
push
imul
jo
xchg
push
out
outs
push
adc
sar
sbb
mov
add
inc
cmp
add
inc
call
mov
test
pop
imul
in
pop
pusha
and
loopne
dec
ins
jne
cmc
add
jbe
jge
data16
adc
adc
pop
gs
lds
jmp
xchg
mov
inc
out
xchg
xor
push
pop
mov
xchg
sahf
mov
cmp
push
add
out
xchg
push
cli
or
rol
inc
or
sub
inc
and
cmp
sub
ret
in
sbb
rcl
mov
push
mov
into
call
shl
movs
adc
xchg
sar
dec
das
popa
rol
popa
(bad)
mov
repz
arpl
or
sub
push
xor
cmp
mov
add
outs
or
outs
cdq
pop
lods
mov
xchg
out
pushf
xchg
xchg
mov
mov
(bad)
mov
stos
sub
clc
das
(bad)
jne
adc
and
std
push
and
cmp
test
xchg
sub
loop
call
or
add
mov
adc
jne
or
adc
push
xchg
jb
fsub
outs
mov
xchg
out
shl
adc
cwde
adc
push
xchg
xor
and
je
cmp
mov
add
mov
jb
hlt
mov
retf
adc
inc
shl
push
push
lea
repz
cmp
loop
shl
push
mov
and
mov
jle
movs
retf
mov
jb
mov
ss
push
mov
test
or
push
test
mov
sub
nop
std
xchg
push
sub
mov
aaa
or
cld
cs
push
inc
pshufw
mov
jae
rcl
ret
je
add
and
movs
nop
loopne
jmp
cmp
je
and
xor
mov
inc
and
mov
jmp
sbb
dec
pop
mov
dec
cmp
sahf
shl
aam
pop
ret
xor
adc
or
push
dec
int3
cmp
jmp
mov
adc
push
add
push
call
add
sub
int3
dec
mov
into
dec
adc
mov
hlt
rol
add
cmp
jbe
cmp
inc
test
cmp
enter
add
aas
or
sub
sub
push
loopne
sub
xor
push
(bad)
fdivr
nop
nop
adc
sub
adc
and
ror
inc
add
add
sub
pop
inc
int3
(bad)
lea
sub
es
mov
inc
retf
sbb
inc
jecxz
xor
lods
or
mov
test
xor
mov
in
cmp
and
shl
pop
and
shl
pop
and
imul
arpl
add
xchg
clc
inc
or
icebp
xor
or
cs
pop
dec
pop
jl
nop
sahf
sub
cli
retf
movs
movs
push
fimul
mov
lea
sar
pushf
and
or
icebp
pusha
inc
test
fldenv
jnp
lock
nop
inc
stc
bound
adc
xchg
pusha
inc
data16
cwde
or
xchg
fadd
sbb
loopne
dec
sub
aad
push
and
jecxz
and
out
jle
mov
nop
movs
sub
lods
push
out
scas
dec
inc
sub
cmp
pop
inc
adc
fs
and
sub
xor
cmp
inc
push
mov
sbb
dec
adc
mov
mov
mov
in
and
or
pushf
adc
mov
push
mov
mov
daa
test
enter
dec
enter
push
xor
jp
arpl
cmp
sbb
das
push
dec
test
or
je
adc
adc
pushf
or
mov
xchg
iret
pop
xchg
jecxz
or
call
push
test
xchg
adc
add
aas
sbb
xchg
and
int3
mov
scas
push
mov
push
cmp
pop
inc
adc
mov
xchg
adc
mov
outs
jmp
and
add
je
push
dec
push
sub
adc
mov
fcom
jg
sub
xor
fimul
pop
out
fwait
jp
je
cmp
je
push
out
cmp
ins
xor
cli
push
out
mov
dec
enter
fs
sub
out
(bad)
mov
mov
sbb
mov
jne
je
sbb
xchg
sbb
adc
adc
push
mov
or
pop
add
mov
test
mov
mov
mov
or
ret
in
retf
shl
inc
or
inc
int3
jg
ins
enter
pop
and
into
and
push
sub
loope
inc
or
mov
rcr
test
inc
sub
inc
inc
mov
inc
or
inc
inc
cmp
sbb
or
sbb
dec
pop
gs
sbb
in
in
adc
and
dec
add
pop
jmp
and
dec
xchg
pop
pop
shr
push
popf
rcr
sbb
retf
sub
and
repnz
in
mov
and
sub
inc
adc
xchg
into
xchg
sub
ja
and
mov
mov
enter
stc
sbb
call
cmp
inc
jmp
push
push
cli
scas
ds
sbb
sbb
adc
xchg
add
cmp
jle
sbb
call
lahf
mov
mov
sbb
sbb
push
or
jmp
rol
and
les
fidivr
call
and
adc
inc
add
push
int3
push
and
mov
cmp
xchg
sbb
push
popa
push
and
call
fisttp
les
or
adc
dec
stos
dec
adc
mov
shl
call
cmc
xchg
dec
in
push
sbb
and
pop
mov
jnp
fdivr
div
inc
or
jle
repnz
mov
mov
fld
(bad)
lods
mov
gs
enter
push
add
add
adc
aam
loopne
nop
adc
std
or
je
push
retf
in
push
test
xor
or
push
pop
lea
and
(bad)
sbb
sar
mov
push
pop
or
ins
pop
daa
lock
push
lea
push
inc
sbb
and
add
icebp
dec
pop
mov
fadd
es
clc
push
sbb
mov
and
lea
shl
push
cdq
push
mov
cmps
bound
jmp
test
fmul
and
fwait
cs
and
repz
add
fidiv
push
xor
jmp
xchg
adc
mov
mov
xor
fwait
inc
(bad)
scas
and
arpl
das
pop
cmp
repz
test
inc
jecxz
and
push
(bad)
and
mov
dec
mov
sub
xchg
loopne
es
cmp
xchg
lds
test
int3
loop
cmp
rol
adc
jmp
add
jae
sub
les
call
jmp
loope
add
test
(bad)
adc
push
adc
and
adc
cmc
clc
mov
inc
popa
fs
std
imul
add
out
jo
push
inc
into
bound
inc
data16
jae
sbb
jo
sbb
bnd
sub
arpl
loope
leave
push
adc
jbe
mov
push
jae
pop
adc
inc
fs
add
jmp
inc
push
outs
dec
neg
pop
inc
fcom
push
div
fisubr
inc
mov
(bad)
cli
fisubr
(bad)
aam
jb
sub
mov
dec
out
cmp
jmp
xchg
push
das
(bad)
or
(bad)
das
add
stc
dec
ja
inc
cmp
popa
std
inc
outs
ins
(bad)
stos
iret
movs
cmp
cli
sahf
hlt
iret
pop
cdq
retf
adc
xor
ja
mov
addr16
jp
into
or
dec
lahf
jne
(bad)
push
outs
sub
cli
adc
loope
fiadd
jl
or
loopne
mov
mov
mov
mov
ins
dec
in
es
mov
rcr
or
fs
nop
xor
push
push
xchg
push
popa
and
(bad)
inc
lea
inc
scas
inc
imul
arpl
mov
and
(bad)
mov
ins
fmul
inc
cld
in
ins
inc
mov
sbb
sbb
outs
bound
popf
sbb
cwde
movs
xchg
outs
ret
movs
push
inc
xchg
and
add
retf
sbb
or
fild
cdq
out
scas
cmp
stos
clc
and
ficomp
ss
rol
cwde
push
jbe
fmul
mov
nop
cwde
test
movsx
retf
dec
dec
or
sub
fadd
or
dec
jg
jg
ret
ins
fsub
add
adc
(bad)
cmps
mov
pushf
adc
out
mov
shl
fadd
push
adc
ficom
(bad)
xor
mov
pop
and
inc
lock
retf
or
mov
loopne
inc
push
xchg
icebp
mov
inc
xchg
fld
inc
dec
dec
sbb
ins
dec
inc
jnp
jns
pop
pop
pushf
pushf
adc
inc
xchg
dec
xchg
pusha
xchg
ins
xchg
jo
mov
test
mov
in
in
in
in
in
in
in
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
push
movs
xor
call
xchg
cld
xchg
add
push
xchg
sbb
ds
in
cmp
or
adc
xchg
or
leave
(bad)
movs
leave
ror
fcmove
out
enter
dec
jb
jb
jb
sbb
ds
fs
lods
pushf
hlt
xchg
push
daa
pop
daa
imul
daa
mov
mov
daa
fldenv
loope
out
icebp
daa
clc
sub
cmp
xor
mov
sar
(bad)
in
xor
inc
add
or
and
dec
xchg
push
xchg
ins
xchg
jnp
adc
cmp
push
leave
fs
or
das
fadd
adc
pop
daa
and
cs
pushf
imul
xchg
pushf
fwait
pushf
movs
pushf
mov
pushf
xlat
pushf
fcomp
xor
popa
daa
jb
mov
xchg
daa
popf
daa
stos
daa
mov
shl
xor
dec
leave
push
leave
jp
or
leave
mov
call
aaa
out
inc
leave
popa
leave
jbe
call
cmp
jb
out
leave
pop
leave
imul
leave
lods
leave
mov
cmp
jb
jb
jb
jb
jb
jb
jb
jb
nop
sbb
and
bnd
jb
jb
jb
jb
jb
jno
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sbb
cmp
cmp
pushf
pop
pushf
jno
xchg
pushf
movs
pushf
mov
mov
xchg
ds
daa
pop
daa
jp
xchg
mov
daa
aam
fsub
stc
daa
jmp
pop
aas
bswap
pop
leave
and
sub
xor
cmp
inc
leave
dec
leave
(bad)
leave
push
jb
jp
or
leave
popf
leave
retf
leave
cmc
leave
sti
retf
nop
sbb
or
adc
pop
in
in
in
in
in
in
in
cmp
movs
cmp
cmp
cmp
cmp
cmp
dec
(bad)
cmp
cmp
cmp
cmp
cmp
imul
dec
xchg
cmp
xor
ss
in
leave
lahf
leave
movs
leave
mov
leave
ror
fmul
(bad)
jecxz
repz
cld
enter
daa
dec
sub
jae
fwait
dec
mov
cmp
nop
test
(bad)
in
in
in
in
in
cmp
cmp
dec
cmp
jp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
add
dec
dec
dec
push
dec
pop
dec
imul
dec
(bad)
dec
retf
dec
ror
dec
out
dec
hlt
inc
arpl
cwde
xchg
stos
xchg
rcl
or
jb
dec
and
push
cmp
jbe
mov
cmp
cmp
cmp
cmp
push
adc
dec
pop
dec
pusha
dec
fs
push
dec
je
jb
daa
enter
shl
aam
fisub
lock
outs
cmp
inc
xchg
pusha
xchg
addr16
ins
xchg
jo
je
xchg
xchg
mov
xor
xchg
cld
xchg
add
add
or
pop
leave
cmp
fs
in
in
in
in
in
in
in
xor
js
nop
xchg
xchg
xchg
lahf
ret
sub
aad
sti
nop
adc
call
xor
add
dec
or
or
mov
and
leave
sub
mov
fbld
push
daa
jnp
lods
daa
mov
mov
daa
les
enter
mov
ss
and
sub
sub
ficom
setl
es
pop
ins
pushf
inc
pushf
fs
sbb
pushf
ret
xchg
daa
popa
daa
push
daa
xchg
daa
mov
and
rcl
push
(bad)
std
fdivr
pop
xor
je
jns
fs
push
aam
push
call
push
sub
inc
fsubr
and
add
cs
in
or
fist
test
add
outs
gs
cmp
add
out
jmp
ds
cli
stos
movs
ds
cli
stos
movs
ds
cli
stos
movs
ds
cli
stos
movs
ds
stos
stos
loopne
adc
or
shl
cmp
xchg
and
inc
xchg
fsub
or
mov
add
pop
scas
adc
push
gs
and
push
jb
jb
jp
icebp
retf
or
add
inc
dec
push
sub
pop
xchg
push
or
or
push
fild
dec
inc
pop
bsr
inc
sub
daa
pop
pop
inc
push
push
andps
sub
inc
loopne
xor
movs
or
inc
sbb
dec
or
ret
dec
dec
fwait
sub
inc
dec
mov
push
dec
sub
addr16
outs
jp
xchg
pop
fwait
mov
sub
adc
mov
inc
cdq
or
xchg
mov
or
cmp
mov
or
scas
adc
push
push
push
or
push
dec
xor
dec
sbb
dec
mov
and
lods
or
push
push
push
dec
xchg
or
hlt
inc
je
sub
or
div
(bad)
push
push
inc
mov
gs
imul
xchg
movs
xchg
xchg
movs
push
xor
in
inc
adc
jp
mov
and
or
jb
or
pop
or
push
xor
dec
push
dec
in
or
jl
daa
dec
pop
push
retf
or
mov
mov
lds
sub
out
push
inc
and
pop
dec
dec
inc
cmp
in
xchg
arpl
or
jne
stos
cmc
or
xchg
jae
cmp
ins
adc
dec
pushf
jne
pop
jmp
jecxz
es
pop
fstp
dec
pop
inc
pop
lds
inc
jmp
lahf
mov
sbb
test
sub
rol
or
adc
data16
inc
ds
push
repnz
or
call
test
inc
inc
movs
dec
lock
xchg
retf
push
push
nop
pop
or
or
lea
pop
or
or
push
or
add
or
xchg
dec
or
dec
or
xor
and
mov
xor
movs
or
push
bound
dec
xor
and
push
adc
aam
xor
sub
scas
or
addr16
jo
dec
inc
xor
lods
or
push
dec
imul
cmp
pop
cdq
sbb
or
jnp
dec
out
cmps
inc
cmp
push
push
dec
or
out
cmp
movs
inc
or
or
cmps
movs
pop
bound
push
sub
inc
pop
cdq
jg
leave
pop
push
xor
test
jno
and
push
inc
push
inc
push
push
popf
xor
leave
push
push
sub
push
mov
das
aaa
pop
pop
sbb
fwait
inc
dec
hlt
push
call
adc
(bad)
dec
push
dec
or
inc
mov
push
mov
dec
shl
push
xor
inc
mov
adc
inc
push
push
or
dec
dec
push
sti
fisttp
imul
mov
push
mov
das
sbb
or
iret
lahf
lods
test
push
aad
or
or
mov
xor
adc
sbb
fcomi
dec
scas
sub
inc
movs
or
mov
push
jno
dec
outs
inc
push
inc
cli
dec
push
push
or
int
adc
sub
outs
push
outs
mov
jecxz
cmps
(bad)
movs
into
leave
push
or
sub
xchg
or
pop
stos
push
xchg
lds
adc
pop
lahf
test
xchg
dec
repnz
cmps
aas
hlt
push
xchg
shl
or
adc
mov
jge
mov
movs
dec
jne
adc
xor
inc
pushf
inc
stos
test
or
jne
pop
aam
push
xchg
or
jbe
adc
push
pop
push
or
dec
jne
cmp
or
or
push
stos
into
mov
(bad)
retf
dec
movs
jecxz
add
inc
mov
adc
sahf
dec
pop
dec
adc
xor
adc
push
dec
inc
call
or
dec
fwait
mov
mov
or
mov
rcl
dec
icebp
lds
push
pop
(bad)
ret
inc
lahf
sbb
retf
dec
inc
jns
iret
pushf
lods
push
inc
dec
push
xor
fcomip
ror
inc
imul
adc
and
xor
shr
(bad)
dec
adc
or
push
in
xchg
pop
xchg
je
xlat
push
sub
xor
into
xor
hlt
xor
inc
cmps
jbe
add
loop
inc
pop
fwait
sar
jmp
fs
inc
fidiv
push
arpl
inc
mov
xchg
sub
dec
inc
push
mov
push
push
stos
cmps
adc
pushf
sbb
sbb
ds
(bad)
or
mov
(bad)
dec
imul
sub
lods
adc
fst
retf
or
add
sbb
movs
or
dec
inc
mov
lock
mov
mov
jecxz
pushf
(bad)
mov
mov
arpl
sbb
lahf
mov
mov
push
jno
ins
sbb
cmp
outs
jmp
mov
jno
daa
add
fisub
sbb
pop
mov
sbb
jns
in
sbb
inc
push
and
pop
pop
dec
pop
lods
and
push
sar
mov
ja
xchg
pop
push
push
sti
fisttp
or
xchg
adc
dec
pop
retf
or
lods
or
inc
aam
xchg
cmp
scas
adc
dec
pop
xor
xor
dec
cwde
add
lods
or
xor
mov
bound
or
mov
dec
out
pop
xor
or
push
push
lahf
imul
test
and
or
adc
push
dec
in
pop
sbb
imul
push
adc
aad
mov
outs
mov
mov
or
pop
dec
ss
test
sbb
mov
inc
xor
pop
or
pusha
cdq
addr16
push
stc
inc
dec
push
and
dec
sbb
shl
retf
cmp
adc
rcr
dec
lahf
dec
jbe
and
aaa
cmp
and
sub
mov
mov
mov
pop
es
sbb
cmc
push
and
in
fisttp
dec
adc
or
in
jl
inc
jne
or
push
dec
xchg
push
and
inc
sbb
test
aaa
gs
gs
xor
push
out
or
or
in
xor
pop
mov
or
xor
mov
popa
push
xchg
cmp
and
retf
retf
jbe
sbb
lds
xchg
push
iret
pushf
dec
(bad)
dec
popf
sub
sub
sub
outs
mov
push
fwait
aaa
push
and
and
inc
push
xor
ret
or
dec
test
inc
inc
dec
jne
addr16
mov
jge
dec
dec
mov
add
or
push
mov
xchg
mov
dec
or
popa
sub
jnp
push
shl
sub
inc
push
gs
movs
bound
cmps
cmp
(bad)
cld
jne
cmps
or
in
dec
xor
cmps
sahf
xchg
sar
sub
mov
xchg
ret
push
mov
jmp
int3
aam
mov
imul
sbb
stos
sbb
adc
adc
push
push
xor
cmps
pop
or
or
sbb
xor
rol
or
in
into
xor
dec
pop
xor
sbb
dec
data16
shr
or
sub
dec
push
mov
mov
in
mov
push
xlat
inc
out
mov
(bad)
dec
lds
ins
fwait
out
inc
call
sbb
pop
sbb
cwde
js
push
sub
lock
pop
inc
into
scas
aam
test
xor
xchg
pop
retf
inc
push
xchg
mov
popf
mov
push
xchg
or
pcmpeqw
push
and
lods
das
jns
sub
dec
mov
leave
call
xor
xor
cld
iret
push
xor
shl
xchg
adc
sub
cmp
jl
dec
(bad)
push
outs
inc
fs
je
and
out
xchg
gs
js
cmp
adc
cmps
mov
xor
ja
jb
imul
jae
inc
shl
xchg
dec
dec
inc
pop
dec
pop
mov
jb
jno
lds
push
stc
(bad)
mov
lds
inc
dec
into
dec
popf
mov
adc
sbb
pop
dec
xor
dec
iret
loopne
jo
add
jbe
ins
jne
and
outs
je
jae
sub
and
popa
jne
cmp
cmp
cs
push
pop
clc
push
movs
adc
shl
cmps
ins
jbe
push
push
jae
jb
shl
je
jae
jo
cmp
jns
aas
pop
pop
sub
outs
jae
sbb
dec
push
imul
mov
push
push
cmp
xor
movs
xor
popa
sbb
ins
mov
je
shl
pop
and
xchg
test
(bad)
push
dec
or
push
inc
add
dec
imul
push
mov
ja
add
jb
fld
imul
rcl
inc
fsubr
jae
mov
pop
adc
pop
adc
mov
call
push
inc
jnp
mov
ins
push
cs
clc
push
sbb
and
(bad)
lods
adc
push
and
xor
push
test
and
jmp
bound
fwait
adc
ficom
cmp
les
push
popf
stos
outs
out
jo
ins
inc
retf
sub
addr16
dec
dec
sbb
xchg
popa
xlat
popa
call
je
push
iret
or
ins
(bad)
loopne
jmp
das
outs
imul
push
out
push
rcr
ins
loopne
std
popa
xchg
pop
push
das
sub
jae
arpl
pusha
pop
addr16
into
xchg
and
ds
ins
xchg
outs
jno
(bad)
dec
inc
push
nop
push
inc
push
dec
sbb
movs
dec
hlt
repz
fs
inc
jnp
(bad)
push
dec
dec
mov
popa
imul
jb
mov
lods
test
dec
jne
push
jmp
or
cmp
(bad)
fisubr
outs
or
(bad)
dec
inc
js
retf
push
cmp
mov
inc
push
dec
mov
pushf
dec
jge
push
or
adc
dec
mov
or
mov
retf
cmp
push
or
dec
inc
(bad)
fisubr
fidiv
outs
add
scas
xchg
cs
movs
pop
out
retf
jne
push
sub
xchg
or
or
jmp
add
sub
cmp
jb
sbb
jae
outs
es
fisttp
pop
retf
xchg
sbb
pop
test
sub
add
retf
fmul
ins
cmp
and
fcmovu
dec
jns
nop
jmp
push
js
push
mov
popa
outs
and
sub
cbw
aaa
mov
inc
repnz
aad
xchg
gs
dec
dec
inc
cmc
adc
pop
dec
leave
jne
or
push
inc
push
push
popf
xor
mov
mov
sub
test
and
out
ret
and
leave
stos
shl
jo
repnz
inc
sub
mov
pop
fwait
fwait
adc
imul
das
jae
cmp
popa
sbb
test
loope
(bad)
daa
sub
or
or
cmp
mov
sub
outs
push
outs
pop
lock
push
push
adc
add
pop
bound
adc
inc
cmp
dec
gs
pop
xor
add
push
ja
gs
stc
jb
fwait
or
lods
pop
mov
sub
clc
popa
push
sub
pushf
jbe
jo
xchg
sub
jmp
jmp
inc
fs
inc
gs
cmp
xor
ss
xor
test
xor
dec
cs
or
int3
popf
bound
or
jbe
push
ss
add
lods
jns
sbb
jb
bound
xor
push
clc
and
daa
sub
dec
movs
daa
inc
dec
push
repz
retf
and
js
outs
jb
int
popa
jbe
dec
or
and
xor
jo
sbb
stos
adc
add
push
jns
gs
add
xor
xor
and
inc
dec
push
push
push
dec
inc
pop
push
(bad)
bound
or
cmp
adc
arpl
mov
jecxz
jo
dec
jbe
dec
data16
xor
dec
inc
pop
(bad)
into
dec
push
mov
shl
cmp
jb
mov
bound
test
and
add
xchg
aad
inc
jle
ins
test
inc
xchg
out
jmp
mov
mov
add
xor
retf
cmp
or
cmp
mov
dec
frstor
xor
jns
xchg
out
push
int3
jp
jmp
pop
aas
jns
data16
mov
pop
push
cmps
adc
(bad)
mov
imul
or
pushw
mov
ja
inc
retf
movs
sub
adc
adc
ja
jne
int
xlat
or
cmp
xchg
jmp
cmp
inc
inc
aaa
cmp
stos
xor
jmp
xor
xor
ds
pop
jge
xor
aaa
push
jne
or
and
dec
inc
in
retf
pusha
mov
sub
arpl
adc
out
stos
dec
shr
jbe
ins
adc
push
push
retf
adc
add
or
xor
push
or
adc
sub
inc
push
xchg
pop
retf
inc
and
das
les
adc
movs
add
in
ds
outs
jne
cs
and
data16
pop
jb
imul
inc
es
cmp
pop
arpl
fwait
pop
cmp
outs
pop
mov
mov
xor
imul
xchg
ja
fdivr
pop
cs
daa
pop
pop
pop
inc
cmp
inc
push
aas
pop
adc
mov
pop
and
xor
int3
and
xor
push
jns
xor
push
das
inc
sti
or
in
push
cmp
imul
out
push
sub
sbb
sub
sub
and
je
fwait
cmp
dec
popa
adc
xchg
mov
sub
pop
ret
imul
lods
js
sub
jnp
push
dec
retf
jns
in
retf
bound
or
dec
inc
shl
dec
dec
ins
sbb
push
outs
pushf
push
mov
push
sbb
inc
fstp
xor
cmc
mov
push
and
inc
and
sub
jecxz
dec
outs
cmp
das
xor
in
sub
jo
mov
xor
inc
jmp
sbb
adc
push
xchg
xor
bound
pop
es
jbe
mov
xlat
add
dec
stc
pushw
ror
push
cmc
sub
sbb
jl
das
push
jne
das
jns
xor
jne
sub
mov
jle
sbb
shl
jnp
pop
in
inc
push
retf
push
adc
rep
sbb
imul
(bad)
test
dec
cmp
lock
cs
mov
pop
sbb
jne
outs
push
jnp
cmp
push
sub
adc
das
sbb
jno
mov
sbb
arpl
push
pop
xchg
pop
fcom
test
repnz
cmp
inc
jne
xor
xor
ds
imul
push
ja
fwait
inc
cmp
dec
scas
push
leave
lods
xor
addr16
jnp
lods
fcmovnu
daa
fwait
push
sbb
push
or
outs
and
dec
and
imul
xor
jbe
jae
pop
dec
cmp
jl
jb
inc
push
inc
inc
xchg
and
ins
fs
out
jmp
outs
fs
xchg
sbb
icebp
fimul
in
inc
sbb
imul
mov
or
test
cmp
cmps
push
jecxz
arpl
mov
xchg
pop
idiv
shr
add
push
and
fwait
sahf
jbe
lahf
cdq
into
xor
xor
xor
xor
inc
aaa
mov
xor
xchg
add
xor
or
xor
adc
xor
mov
and
stc
shr
add
or
je
pop
cmp
xchg
jle
inc
adc
pop
movs
cmp
dec
xlat
inc
adc
mov
retf
loopne
push
inc
out
dec
outs
xor
mov
and
or
scas
fisttp
jle
retf
lods
ror
lds
pop
aas
cmp
adc
das
pop
je
mov
adc
repnz
in
sbb
push
xchg
adc
jo
mov
adc
outs
in
ins
shl
cmp
xor
jbe
pop
fs
fisttp
or
jb
jo
cmp
push
js
lods
or
inc
mov
or
addr16
jne
jo
or
dec
inc
dec
dec
xchg
push
cmp
inc
ret
cmps
rcl
pop
adc
dec
bound
sbb
sub
loop
and
jne
lds
out
dec
adc
adc
leave
mov
hlt
stos
xchg
movs
push
fs
inc
shr
loop
imul
nop
es
and
jb
ins
push
out
(bad)
call
retf
rcl
dec
push
xchg
mov
xchg
push
and
out
and
sub
fwait
cmc
cmp
jp
(bad)
push
push
pop
and
arpl
xor
mov
ins
push
push
rcr
shr
pop
or
arpl
outs
ins
mov
sub
push
ins
lods
outs
data16
ins
sub
mov
pop
imul
test
push
call
cmp
inc
adc
aaa
jmp
test
in
imul
sub
cdq
xor
or
lds
sub
push
adc
xor
fisub
inc
ins
xor
ds
add
jae
xchg
into
or
lds
xor
daa
push
push
pop
and
pop
push
dec
mov
jae
jbe
call
(bad)
(bad)
mov
fdiv
fcomp
push
out
xlat
xchg
test
cs
nop
clc
mov
aas
dec
cmp
rcl
fisubr
fsubp
push
pop
hlt
cmp
clc
xchg
inc
inc
push
push
repz
push
cmp
stos
dec
or
es
mov
pop
xchg
pop
bound
sbb
xor
jle
adc
aam
enter
sbb
cs
jmp
dec
cmps
sbb
es
mov
mov
push
and
cmp
inc
cmps
push
adc
dec
loop
cmp
mov
inc
in
xor
pop
xor
cmp
test
jne
ret
movs
sub
rol
push
mov
aaa
pusha
pop
mov
or
daa
inc
jne
enter
mov
xor
pop
sub
and
mov
rcl
xchg
fistp
mov
mov
mov
mov
push
inc
fcomp
jns
add
pusha
sub
bound
push
sub
dec
retf
pop
push
fsub
xor
mov
imul
mov
xor
xor
sub
push
xor
xchg
mov
fmul
xchg
fisubr
popf
push
mov
in
scas
sub
mov
sub
cmps
leave
jge
out
cmp
fidivr
imul
dec
pop
push
dec
rcl
and
hlt
xchg
(bad)
dec
cmp
ss
outs
xor
stos
add
adc
sub
(bad)
push
xor
or
imul
ins
mov
mov
sub
and
sub
mov
add
inc
jmp
xor
repnz
dec
xor
imul
nop
inc
inc
dec
push
push
push
adc
inc
push
add
inc
dec
mov
sbb
dec
push
inc
pop
push
adc
dec
dec
(bad)
mov
push
call
push
or
fcmovbe
mov
xchg
or
ins
icebp
(bad)
fdivrp
std
sub
out
dec
sub
call
outs
js
ret
movs
dec
pop
xor
xor
scas
adc
push
sahf
sub
adc
test
dec
inc
dec
cmc
dec
and
and
xor
and
mov
inc
jb
cmp
ins
push
pop
xor
jns
outs
adc
ja
test
xor
pop
adc
cmp
inc
or
push
push
xor
(bad)
fst
jns
mov
outs
jecxz
inc
test
xchg
cmp
cmp
enter
xor
xor
cmp
mov
icebp
rcr
scas
outs
cmps
aas
mov
push
xor
ins
imul
sub
push
jecxz
sbb
cmp
mov
or
sub
xchg
pop
cmc
pop
popa
and
pushf
cmp
add
shl
adc
push
cmp
cmp
div
sub
cs
icebp
mov
js
sub
xor
sbb
sbb
xor
inc
cmp
pushf
xor
dec
aaa
pop
fmul
pop
xor
loope
mov
loope
js
cmp
sbb
inc
dec
mov
cs
pop
leave
and
fs
loop
arpl
cwde
dec
jecxz
jns
pop
push
jp
es
xor
inc
daa
fisub
dec
into
xor
xor
jns
out
adc
popa
cld
popa
dec
es
aaa
push
pop
ret
mov
outs
inc
popa
scas
and
cmp
jne
jb
ins
je
daa
mov
pop
sbb
xor
les
and
lds
dec
test
ret
mov
xchg
fs
mov
xchg
dec
repz
jo
adc
lock
xor
inc
xor
pop
sub
enter
nop
push
xor
mov
adc
xor
sbb
aaa
pop
pop
jns
jae
and
outs
outs
nop
and
mov
jge
cmp
gs
arpl
repnz
dec
jae
imul
push
and
shl
xor
xor
xor
xor
inc
xor
mov
inc
cmp
xor
mov
xor
xor
xor
or
xchg
sbb
mov
inc
cmp
pop
cmp
ss
shl
and
xor
cmc
nop
sbb
ret
jo
mov
xchg
ss
or
or
xchg
aaa
popf
cmc
and
popa
cmp
pop
arpl
mov
fs
pop
gs
adc
sbb
dec
sub
mov
je
xchg
psrld
push
inc
inc
dec
ficom
test
sbb
inc
test
lods
inc
sub
sub
push
cmp
aaa
adc
cmp
or
dec
popf
out
call
jo
sub
inc
dec
gs
aas
jns
je
and
xor
mov
int3
aaa
push
sbb
jns
sbb
ja
sub
ds
test
loop
xchg
pop
inc
mov
bound
das
sub
mov
rcl
in
jecxz
fs
push
xchg
adc
xchg
scas
repnz
xchg
pop
bound
jns
jne
in
fistp
imul
fisttp
mov
leave
jae
in
dec
ins
loope
jbe
sub
daa
adc
pop
mov
sbb
sbb
popa
jecxz
not
movs
pop
movs
or
jae
jo
sub
test
test
imul
cmps
push
xchg
ss
ss
cmp
cmp
mov
fist
push
scas
ficom
pop
js
std
js
fisttp
mov
adc
xor
icebp
pop
pop
les
addr16
retf
aam
aaa
into
lock
test
xor
es
ja
xor
xor
adc
jns
mov
(bad)
(bad)
in
dec
bound
scas
cs
sub
pop
sub
or
jno
aam
jno
in
inc
cmp
pop
sahf
sahf
ins
aaa
add
push
sub
sbb
push
dec
and
jae
inc
icebp
dec
dec
aam
lds
push
movs
enter
pop
xchg
push
xchg
cmp
sub
fs
fld
outs
movs
xor
xor
xor
and
xor
cmp
push
test
jp
pop
dec
adc
sub
cmp
popa
and
sbb
and
sbb
pop
int3
setg
popf
cmp
retf
mov
pop
out
pop
push
out
ja
push
stos
(bad)
adc
movs
jmp
and
mov
sbb
sti
sub
(bad)
test
dec
add
push
dec
mov
xor
pop
popa
jns
add
popa
push
jmp
jae
lods
test
or
push
pop
mov
push
cmp
js
push
jne
mov
or
cdq
loop
cmp
jbe
fst
mov
iret
ins
mov
push
movs
shr
jl
imul
adc
cs
or
shl
stos
imul
aaa
dec
push
dec
das
xor
xor
xor
inc
cmp
inc
pushf
xchg
aaa
adc
ins
cli
xor
sbb
jae
adc
adc
pop
jns
sbb
pop
mov
repz
and
pop
mov
mov
add
pop
call
shl
cmp
adc
movs
mov
(bad)
imul
sub
leave
sti
jno
popf
imul
push
pop
imul
outs
stos
ins
or
pop
nop
and
in
xor
xchg
mov
test
dec
push
sbb
dec
dec
cdq
ins
rdmsr
xchg
xadd
push
cmp
dec
sub
sub
or
add
fisttp
push
add
bound
scas
pop
dec
sbb
xchg
jb
lea
xchg
xchg
test
mov
mov
stos
dec
fs
imul
sub
mov
push
sub
sbb
pop
int3
add
fidivr
sbb
pop
cld
mov
mov
loope
fisubr
xlat
adc
pop
inc
and
push
xchg
cmp
sbb
sbb
pop
dec
cmps
jecxz
pop
push
add
jp
jmp
or
aas
adc
cld
ds
in
jg
xchg
cli
jg
in
adc
jmp
repnz
push
inc
lock
cmp
test
int
ret
test
sbb
ficomp
sub
push
cmp
fbld
xor
dec
stos
or
movs
or
enter
xor
pop
call
inc
cdq
icebp
xchg
sbb
mov
hlt
aas
mov
sbb
mov
test
inc
add
ror
adc
push
js
mov
push
aas
lock
push
or
dec
push
aam
push
in
jo
or
nop
mov
add
or
aas
repnz
mov
mov
push
cdq
and
in
stos
mov
mov
sahf
pushf
mov
and
sub
call
inc
add
dec
test
mov
adc
jae
aam
and
push
and
or
xchg
enter
adc
cmp
cdq
pusha
sbb
dec
xor
(bad)
and
fs
js
add
lock
cmp
adc
in
(bad)
push
loopne
lods
fcom
adc
or
adc
sbb
xor
and
dec
sub
add
push
sbb
inc
in
cmp
mov
or
enter
fcomp
pop
call
push
movs
dec
adc
jecxz
sub
mov
je
push
sub
aam
xchg
ins
dec
inc
test
out
or
pushf
cwde
and
xor
and
mov
cdq
test
push
sub
cdq
adc
or
vmread
int3
mov
inc
enter
pop
ror
mov
lods
dec
xchg
mov
(bad)
loopne
add
push
or
adc
mov
mov
movs
push
push
nop
adc
mov
test
add
fs
add
push
push
adc
push
aaa
or
xchg
lock
sub
adc
xchg
shl
mov
push
or
pusha
enter
mov
lods
xchg
pop
movs
nop
adc
and
adc
xor
sbb
nop
sub
bound
add
pusha
dec
cmp
jo
sub
and
cmp
cmp
dec
xchg
js
sub
pushf
adc
fisub
pop
cli
iret
and
gs
cwde
movups
push
loope
femms
sub
or
cmp
xchg
shl
push
jl
movs
loopne
push
xchg
xor
push
inc
cwde
enter
lds
inc
enter
adc
adc
sbb
outs
cmp
into
sbb
xor
in
fisub
sub
test
add
adc
fs
cmp
xchg
adc
push
push
pop
and
test
xchg
stos
add
xchg
inc
pop
inc
cld
and
lds
or
xchg
inc
mov
aaa
inc
or
adc
adc
in
inc
aas
adc
push
std
inc
cmp
enter
fsub
call
and
push
ret
pop
sub
or
sub
xor
adc
sbb
enter
mov
movs
push
or
adc
and
lock
xchg
xchg
in
and
iret
push
or
ins
push
inc
jl
mov
or
in
and
or
dec
xlat
jo
pop
xchg
or
mov
fdivr
or
ss
loope
pop
je
inc
push
mov
adc
mov
icebp
enter
lock
or
jno
mov
in
mov
sbb
adc
xor
mov
inc
and
xchg
xchg
in
cld
and
inc
movs
lods
dec
mov
lahf
xor
pop
push
sbb
mov
adc
(bad)
rep
les
(bad)
fmul
sbb
sub
bound
inc
xchg
or
or
and
push
or
fs
mov
in
dec
push
or
fdivr
unpcklps
cmp
adc
or
les
sbb
and
mov
dec
or
mov
push
and
js
addr16
adc
inc
les
jno
repnz
jo
enter
pop
xchg
or
nop
enter
mov
out
or
add
enter
or
inc
cmps
out
jle
add
rcr
xchg
lock
or
stc
inc
data16
pop
and
pop
dec
or
push
xchg
rcl
xor
pop
movs
or
sbb
sub
sub
cmp
add
stc
push
pop
mov
fcom
ss
mov
mov
and
cmp
add
pushf
enter
repnz
fsubr
inc
add
cld
dec
mov
or
rcr
(bad)
cld
imul
jns
and
rol
mov
int
push
(bad)
sub
fwait
inc
push
jl
cli
pushf
sbb
lahf
cmp
je
mov
dec
stos
or
lods
outs
loopne
test
pop
pusha
jp
pop
jp
fadd
sub
xchg
(bad)
nop
nop
repnz
in
sub
test
js
lahf
pusha
lds
jo
or
ins
repnz
pusha
jns
mov
in
cmp
xchg
xchg
push
cmps
adc
jo
inc
xchg
cmp
pop
mov
sub
dec
sub
xor
push
sub
add
sub
adc
sub
and
sbb
hlt
test
or
nop
or
dec
or
test
(bad)
out
mov
sbb
lock
in
cmp
xchg
int3
cli
xchg
sbb
in
adc
in
inc
(bad)
jl
xchg
dec
push
or
enter
(bad)
rcr
cmp
stc
aaa
pushf
xchg
sub
mov
push
mov
enter
mov
in
cmp
(bad)
mov
(bad)
cld
sub
bound
push
pop
and
enter
or
inc
pop
pop
fmul
adc
call
or
mov
xor
movs
daa
push
js
mov
adc
or
clc
cmp
and
push
and
inc
xchg
test
les
pop
adc
push
daa
or
mov
loopne
and
test
inc
sub
mov
dec
cld
sub
or
dec
inc
sbb
cwde
or
cmps
or
add
mov
in
and
push
jb
and
ja
nop
mov
cwde
push
inc
mov
push
inc
call
xor
mov
xchg
mov
mov
and
push
mov
enter
les
and
inc
lock
cmp
or
daa
sbb
sub
inc
in
dec
ins
jns
sbb
mov
add
ins
add
inc
fsubr
in
mov
xchg
inc
sub
add
ss
sbb
add
scas
pop
add
sar
or
pop
add
lds
(bad)
mov
jp
sbb
pushf
inc
ins
add
or
push
xchg
and
pop
mov
and
sub
(bad)
or
sbb
mov
cmp
adc
js
ins
and
jo
xchg
xchg
in
fidivr
pop
rcl
sub
fs
rcr
outs
call
mov
dec
je
jl
or
cld
jmp
and
les
pop
adc
xchg
je
mov
aam
jno
aaa
xchg
adc
imul
sbb
ins
or
jl
sub
sar
and
in
push
movs
retf
pop
and
and
in
cmp
xchg
cmp
sub
push
nop
sbb
mov
mov
nop
shl
xchg
or
loopne
enter
ins
sbb
ret
adc
xor
(bad)
cmp
fdiv
icebp
in
dec
sbb
cld
and
inc
jno
xor
adc
xchg
stos
test
js
inc
xor
test
sbb
mov
dec
fwait
mov
in
dec
pushf
dec
das
call
das
call
test
int
imul
cmps
push
cs
jne
pop
pop
ficomp
lock
jl
mov
push
push
xor
xor
les
in
and
das
xor
cmp
je
daa
in
aam
sub
or
stc
cmp
test
sbb
movs
and
hlt
or
add
adc
cmp
and
push
mov
movs
mov
and
adc
xor
adc
stc
ins
xor
sub
xlat
mov
xchg
scas
push
mov
and
pop
mov
add
and
ins
mov
xchg
add
inc
xor
sub
movs
sbb
je
enter
jb
inc
xchg
and
movs
enter
mov
in
cmp
movs
pusha
pop
pushf
adc
test
sbb
xor
inc
sub
ret
xlat
xchg
lods
pop
fsub
scas
inc
dec
jp
pusha
cli
push
pusha
cli
fldcw
pop
jo
dec
pusha
movs
pop
fs
dec
jmp
inc
jp
je
addr16
or
js
cld
mov
inc
in
nop
repnz
pop
and
jb
enter
(bad)
mov
mov
jno
repnz
mov
adc
cmp
or
sub
cwde
loop
aaa
xor
enter
cld
leave
ror
bound
xchg
or
sub
inc
jns
mov
in
cmp
xchg
and
les
mov
add
fcomp
mov
cmp
pop
and
clc
repnz
cmp
cmp
out
xchg
xor
sbb
jmp
(bad)
in
loopne
shl
mov
call
ins
xor
sbb
pushf
adc
movs
sbb
inc
retf
pop
xchg
pop
sub
movs
push
fild
clc
jmp
cmp
push
cmp
cmp
push
movs
sbb
adc
js
mov
cmp
je
popa
mov
mov
aam
jge
xchg
clc
jmp
movs
mov
test
adc
cwde
pop
ds
test
and
sbb
mov
fiadd
jne
inc
imul
loope
sub
rcl
push
inc
aas
xchg
mov
aas
push
fstp
adc
pop
aas
pop
jecxz
pop
sbb
jmp
inc
cmp
sub
mov
xchg
or
dec
ins
sub
push
movs
jecxz
aam
and
cld
das
mov
fdivr
inc
xchg
(bad)
sbb
cwde
and
pop
inc
pop
rcr
sub
push
in
lock
inc
xchg
test
fdivr
or
or
xchg
add
enter
push
dec
in
dec
inc
fsub
cld
lods
mov
xchg
retf
jl
clc
push
adc
les
inc
cmp
stc
push
ds
dec
shl
ret
jle
adc
jb
movs
retf
jecxz
test
inc
sub
jl
cmp
dec
lods
jmp
loop
inc
(bad)
fcomp
cmp
(bad)
xchg
push
enter
or
lds
std
cmps
repz
loope
adc
stc
xor
sub
or
mov
sbb
sbb
dec
inc
sub
push
dec
or
je
inc
test
xor
sahf
call
pop
or
mov
and
and
enter
dec
retf
cmp
pushf
inc
sub
cmp
inc
dec
js
lods
and
in
pushf
retf
pop
fmul
sub
clc
loop
retf
push
sbb
movs
int
jmp
jl
add
in
mov
or
fcomp
adc
loop
int
mov
iret
fild
popf
mov
cli
out
push
inc
int3
cmp
dec
fwait
mov
je
mov
retf
pop
movs
adc
adc
sub
les
dec
add
push
shr
in
pop
sar
xlat
into
pusha
hlt
retf
movs
dec
mov
ins
sbb
pop
dec
add
adc
jle
adc
out
test
dec
les
inc
dec
cmp
inc
test
pop
iret
mov
repnz
lods
mov
fs
dec
(bad)
pop
enter
es
jl
inc
repnz
sbb
dec
aad
mov
movs
dec
xor
(bad)
loopne
pushf
mov
lds
enter
call
fcom
or
or
les
dec
and
sub
into
les
or
fcomp
dec
(bad)
ror
mov
xor
xchg
cwde
gs
and
dec
push
nop
ins
scas
and
loopne
xchg
mov
xchg
popf
sub
xchg
dec
cmp
mov
push
sub
or
in
hlt
mov
add
and
lea
retf
adc
cs
hlt
test
call
les
test
movs
jl
mov
(bad)
or
mov
sbb
inc
dec
adc
fild
dec
iret
in
add
loopne
dec
xor
test
fisub
lods
loope
mov
loop
loope
sub
inc
add
pop
js
les
loope
dec
jle
cmp
lock
fsubr
push
add
dec
in
lahf
js
lds
xchg
fmul
add
icebp
lock
leave
pushf
mov
in
lahf
and
loopne
mov
push
inc
add
dec
push
pop
jecxz
in
hlt
stc
aas
sub
adc
mov
or
xor
inc
cmp
popa
add
hlt
out
imul
sbb
push
xchg
ins
pop
mov
push
sbb
push
fmul
in
jns
bnd
jbe
or
pop
cmps
jo
push
ins
cmc
adc
mov
jmp
sub
push
pop
movs
cmp
push
xchg
or
mov
or
push
das
inc
adc
retf
sub
icebp
mov
push
mov
pop
shl
ins
or
xlat
aas
nop
sub
fsubr
aas
or
cld
inc
(bad)
ds
pop
mov
inc
shl
stc
pop
mov
inc
mov
hlt
retf
sub
dec
jecxz
hlt
retf
cli
aas
mov
jb
xchg
or
sub
sbb
in
jl
pop
mov
test
call
in
movs
pop
xchg
gs
in
jl
xchg
repnz
sub
ins
imul
nop
aam
sbb
ins
in
mov
outs
fistp
test
cdq
and
outs
ins
push
loope
push
gs
cwde
push
loop
lds
push
sti
sub
pop
stc
ds
cmp
sub
test
or
add
mov
adc
cmp
adc
push
sbb
mov
or
clc
push
fstp
mov
adc
sbb
xor
js
enter
or
mov
in
sbb
mov
mov
adc
sbb
fsub
sub
pop
popa
pushf
sbb
inc
cmps
sbb
push
or
and
xchg
cmp
or
pop
in
sub
(bad)
mov
mov
jmp
cmp
stc
jg
test
pop
sub
xor
std
retf
clc
xchg
pop
sbb
lahf
xchg
clc
jmp
push
in
loopne
and
std
xor
pusha
pop
push
mov
cwde
xchg
arpl
inc
lds
xchg
gs
les
mov
inc
in
outs
enter
(bad)
lock
mov
and
and
(bad)
adc
call
les
cmp
cmp
jmp
inc
pop
(bad)
jo
loop
xchg
or
mov
loopne
shl
inc
pop
mov
adc
add
and
stos
and
cmp
xchg
cli
test
mov
mov
lock
mov
or
jnp
loope
pop
push
ds
(bad)
mov
adc
addr16
mov
je
cmp
inc
enter
pop
fldcw
bound
dec
call
sub
fwait
push
inc
xchg
sbb
pop
shr
pop
pushf
mov
(bad)
lods
ds
aam
mov
sahf
movs
and
or
inc
pusha
lock
xchg
or
test
inc
xchg
das
cmp
ror
push
adc
cld
and
retf
and
test
adc
mov
inc
cwde
enter
add
or
pop
stos
push
js
adc
call
xor
and
outs
sub
lds
call
jle
xchg
cmp
aam
pop
fsub
mov
inc
movs
or
push
dec
mov
hlt
mov
ins
push
inc
mov
aad
inc
icebp
cwde
jg
js
xchg
in
sub
mov
test
enter
pop
xor
je
gs
sub
(bad)
xchg
push
pusha
retf
pop
pop
dec
or
push
dec
mov
xor
mov
cmp
stc
cmp
fmul
clc
xchg
(bad)
sub
or
mov
sbb
mov
mov
in
cmp
xchg
inc
ror
loopne
cld
adc
sub
sub
movs
cdq
adc
lahf
and
fist
mov
hlt
movs
retf
adc
imul
(bad)
cmps
sbb
fwait
adc
xchg
dec
retf
pushf
mov
aam
push
sub
cld
xchg
or
sbb
push
sbb
enter
mov
in
cmp
xchg
add
jmp
jno
not
call
iret
bound
xchg
out
cmp
sbb
movs
or
mov
fsub
or
fiadd
bound
sbb
pusha
xchg
or
nop
sub
lahf
lods
and
jo
and
jns
movups
imul
push
sar
mov
push
and
sub
pop
mov
or
imul
test
sub
call
shl
mov
and
push
pop
and
mov
jl
xchg
(bad)
and
mov
loopne
repz
adc
leave
pushf
fsubr
sbb
lock
in
in
pop
and
ja
int3
dec
fmulp
cli
xchg
cld
dec
fsubrp
jns
dec
fsub
in
adc
sub
xchg
adc
and
rcr
or
sbb
cmc
sub
adc
xor
xor
(bad)
repnz
inc
jne
or
xchg
je
pusha
movs
pop
cmp
jo
add
pusha
cld
adc
sub
mov
cmp
sub
ins
adc
sub
xchg
(bad)
fiadd
jg
je
loopne
(bad)
or
outs
push
and
in
cmp
mov
mov
mov
nop
sahf
nop
push
mov
ror
shl
loopne
lock
ds
mov
ds
inc
(bad)
mov
mov
jmp
mov
sub
pushf
in
jl
lahf
xchg
sub
or
mov
mov
aam
mov
movs
dec
mov
jb
and
jl
mov
aaa
cmp
jne
pusha
jmp
mov
sbb
clc
xchg
push
or
daa
pop
js
mov
mov
push
push
adc
into
int3
cmc
pop
sbb
shr
call
subps
aad
int
daa
pop
clc
pop
sub
xlat
xor
fcom
xor
xor
scas
aas
mov
cmp
movs
cmc
cmp
xchg
(bad)
xchg
test
cwde
cmps
pop
mov
xchg
call
inc
loopne
scas
jg
dec
mov
dec
std
cmps
subps
popf
jno
sti
dec
ud1
test
cmp
not
mov
jg
push
adc
adc
hlt
cmc
cmp
cmp
clc
push
adc
sbb
push
stc
dec
dec
sbb
dec
in
cmp
cmp
cmp
xor
and
in
cmp
(bad)
nop
and
and
inc
sbb
sbb
adc
and
in
cmp
(bad)
mov
cld
std
sbb
clc
(bad)
adc
sbb
lock
or
in
retf
ftst
mov
in
cmp
(bad)
mov
int3
mov
in
cmp
xchg
inc
mov
mov
lods
mov
in
cmp
xchg
inc
xchg
enter
mov
in
cmp
xchg
inc
je
jo
ins
mov
in
cmp
xchg
inc
push
enter
mov
in
ins
adc
ds
cmp
cmp
xor
and
in
jl
(bad)
xchg
and
and
inc
sbb
sbb
adc
and
in
jl
mov
jno
les
int3
mov
jno
sub
push
push
jb
mov
sbb
mov
add
mov
jb
and
jb
and
jb
and
jb
and
push
push
pushf
push
sbb
and
inc
sub
or
cmp
or
cmc
sbb
mov
mov
mov
and
inc
je
cmp
jo
and
jne
inc
jns
mov
in
cmp
inc
jbe
inc
jns
mov
in
cmp
and
xor
inc
xchg
inc
je
test
mov
in
cmp
xchg
inc
hlt
les
cmp
push
inc
xor
dec
jns
mov
in
cmp
inc
jns
push
jns
mov
in
cmp
inc
jp
push
jns
mov
in
cmp
inc
jnp
pop
jns
mov
in
cmp
xchg
inc
in
enter
jl
adc
sub
inc
cmp
dec
jnp
cmp
xchg
mov
ror
ror
loopne
lock
jne
mov
push
cld
call
outs
cmps
adc
lods
(bad)
sub
and
out
and
movs
das
jle
dec
mov
push
imul
test
scas
xor
mov
xor
rcl
int
jb
xor
iret
dec
dec
(bad)
scas
sbb
dec
(bad)
repz
sub
mov
inc
(bad)
scas
jge
lods
subps
(bad)
sbb
push
scas
adc
mov
mov
in
and
or
stos
fucomi
(bad)
repnz
and
mov
and
in
cmp
inc
or
dec
in
cmp
xchg
daa
js
hlt
push
pop
int3
and
push
and
add
cmp
xchg
inc
fs
mov
loop
test
xchg
add
sub
daa
inc
jbe
(bad)
sub
(bad)
sbb
jo
push
pop
sbb
cmp
pusha
or
pop
cmp
pop
mov
aam
and
mov
mov
mov
mov
adc
push
inc
in
adc
cmp
dec
jns
or
fmul
and
movs
sbb
pop
or
movs
xor
add
addr16
hlt
(bad)
jle
pop
pusha
jmp
dec
push
or
inc
fmul
addr16
sub
pop
sub
ins
stc
sub
cwde
mov
test
and
rol
das
hlt
mov
mov
jnp
(bad)
mov
std
lods
psllw
xchg
mov
cld
mov
sbb
add
sbb
mov
retf
hlt
unpcklps
cmp
cmp
add
sub
push
jnp
and
fdiv
ins
push
in
pop
mov
dec
jl
pop
mov
push
loopne
nop
iret
lock
mov
pop
loop
loope
in
sbb
push
xor
and
jno
repnz
test
dec
or
loopne
sbb
js
inc
dec
gs
xor
lea
outs
sbb
inc
nop
inc
sbb
outs
out
push
sub
pop
add
dec
sahf
push
clc
dec
scas
and
lahf
aas
or
movs
lock
mov
ret
aas
or
mov
rcr
cmps
les
and
clc
xor
loope
(bad)
das
mov
lods
movs
andps
xor
sub
xor
nop
test
push
mov
xchg
inc
pop
jnp
push
ins
cli
dec
retf
xor
lods
sub
imul
(bad)
hlt
xchg
dec
ins
cli
pushf
sub
and
aad
cmp
dec
hlt
mov
stos
push
pop
ficomp
scas
or
inc
in
cli
iret
inc
dec
push
nop
cli
int
nop
(bad)
cmc
mov
test
and
jmp
sbb
dec
pushf
sti
pop
pslld
repz
lgs
rcr
test
stos
cmp
shr
mov
and
ins
pop
mov
lahf
mov
stos
aas
lods
push
mov
sbb
xchg
dec
sar
pop
mov
movs
push
mov
mov
imul
mov
ins
lods
sub
fs
sub
rcl
mov
(bad)
stc
std
pop
dec
mov
in
cmp
adc
fsubr
mov
inc
std
fbld
jmp
cmp
std
(bad)
(bad)
movs
pop
xchg
leave
int
adc
test
mov
repnz
outs
pushf
cs
std
orps
lods
mov
std
jp
sbb
outs
movs
cmps
xor
movs
sbb
fs
stos
aas
test
loopne
pop
cmp
fwait
enter
and
int3
pop
jp
mov
movs
pop
(bad)
jmp
ins
mov
or
dec
mov
mov
js
(bad)
lahf
addr16
inc
aam
mov
push
inc
lock
nop
cmp
nop
ins
bnd
inc
mov
pushf
jns
mov
out
or
pop
in
cmp
xchg
and
mov
xor
add
xor
sub
fdivr
movs
push
mov
xchg
or
cmp
and
mov
xchg
fcom
jmp
call
xchg
or
and
and
pop
cmp
xchg
mov
pushf
xchg
adc
and
movs
cmp
or
sbb
inc
xchg
inc
movs
enter
cmp
inc
xchg
mov
jns
mov
movs
and
nop
imul
xchg
(bad)
js
xor
int3
inc
add
aam
mov
adc
fsub
and
adc
and
in
jb
and
ja
nop
mov
cwde
sub
clc
inc
xchg
(bad)
jo
nop
mov
sahf
fs
lock
xor
xchg
push
sbb
pushf
rcr
jne
aaa
or
xchg
mov
fsub
inc
in
and
inc
cld
and
and
adc
and
or
sub
or
cmp
or
dec
xchg
or
push
(bad)
sub
fnstenv
ins
cwde
sub
mov
movs
push
inc
ror
jns
movups
loop
push
inc
dec
enter
mov
in
inc
add
fdivr
movhps
bound
and
cmp
xchg
dec
movs
sbb
pop
or
xchg
xor
adc
cmp
and
js
cmps
or
mov
cwde
jns
dec
dec
nop
mov
sbb
mov
retf
jns
dec
or
sbb
loop
sub
ret
je
imul
dec
loopne
shl
jecxz
les
or
pop
inc
mul
adc
mov
jg
fldcw
js
(bad)
loope
nop
pop
test
adc
clc
pop
inc
xchg
loope
xchg
pop
test
cwde
clc
mov
fwait
pop
test
clc
fadd
in
fbstp
xchg
scas
shl
sbb
in
pushf
scas
push
xor
repz
jmp
jge
add
rcr
lods
adc
stc
xor
fucomip
fs
push
clc
jmp
pop
test
mov
mov
ucomiss
ins
xchg
adc
dec
cmc
imul
push
push
shr
mov
lahf
xchg
pop
das
mov
lahf
xchg
pusha
xor
mov
movs
movs
mov
fbld
mov
fmul
jo
out
xchg
bnd
fwait
in
(bad)
jmp
in
in
leave
jnp
dec
stc
test
lock
pop
sbb
pop
jp
mov
xchg
mov
lahf
lahf
mov
ss
xchg
lods
daa
out
mov
xchg
cwde
sub
les
std
nop
scas
dec
lahf
pushf
dec
fwait
cwde
shl
xchg
hlt
stc
nop
mov
fwait
mov
jecxz
hlt
std
lods
std
aas
imul
stc
int3
mov
outs
mov
in
sub
in
mov
dec
fwait
aam
sub
adc
ins
sbb
xchg
inc
loopne
fdivr
vmread
int3
mov
inc
enter
ror
mov
mov
or
mov
mov
mov
inc
test
movs
cmp
mov
cwde
jl
xchg
inc
mov
test
fld
or
js
sub
jo
mov
mov
push
push
dec
sub
and
push
cmp
xchg
inc
inc
frstor
xchg
inc
sub
sub
and
and
in
jl
xchg
push
push
or
retf
(bad)
(bad)
sti
(bad)
adc
repnz
ds
lock
adc
enter
dec
dec
and
out
adc
mov
ds
int3
adc
enter
dec
or
shr
mov
xchg
mov
mov
inc
lods
enter
pop
and
cmps
lods
xchg
xchg
or
nop
mov
inc
mov
mov
pop
and
(bad)
nop
je
jo
inc
ins
enter
mov
in
cmp
xchg
inc
dec
enter
pcmpeqd
push
push
xor
retf
fldcw
sub
sub
xchg
inc
adc
adc
pop
and
out
nop
test
adc
or
hlt
sub
add
or
call
enter
pop
and
out
adc
sar
push
int3
adc
enter
retf
pop
mov
mov
mov
xchg
lods
repnz
adc
enter
pop
sub
or
lods
sub
ds
test
or
pop
sub
js
fs
jo
xchg
ins
repnz
retf
pop
pop
mov
out
retf
jg
rcl
retf
fld
jbe
or
cmp
cmp
push
xor
retf
fldcw
pop
and
and
xchg
inc
adc
or
add
jo
mov
stc
jno
dec
or
hlt
in
cmp
xchg
ins
lock
mov
icebp
pop
adc
ror
sub
enter
repnz
mov
mov
mov
lods
in
jl
xchg
inc
cwde
retf
fst
in
jl
xchg
inc
je
jo
pop
ins
movntps
gs
pop
(bad)
xchg
pop
repnz
push
inc
push
enter
movntps
aad
mov
ds
xor
enter
dec
sbb
sub
and
adc
(bad)
xchg
sbb
sbb
inc
adc
adc
or
and
out
xchg
test
aas
(bad)
enter
pop
and
in
jl
(bad)
xchg
loopne
fdivr
inc
fcomp
and
sar
lahf
sbb
enter
ds
ror
stc
mov
mov
lods
(bad)
xchg
test
movs
ds
mov
pop
and
xchg
mov
test
inc
clc
aad
mov
xchg
dec
inc
js
je
jo
sub
push
pusha
repnz
mov
push
pop
dec
enter
dec
sbb
dec
in
ins
adc
inc
enter
dec
pop
and
xor
xchg
sub
and
dec
inc
and
sbb
sbb
and
adc
(bad)
xchg
or
dec
sti
test
test
enter
pop
and
in
jl
(bad)
xchg
fdiv
mov
rcr
and
in
jl
(bad)
xchg
shl
ds
mov
inc
mov
lods
stc
test
sub
(bad)
xchg
cwde
repnz
ds
nop
adc
mov
mov
and
(bad)
xchg
js
je
inc
jo
ins
stc
push
pusha
sub
pop
(bad)
xchg
pop
repnz
ds
push
retf
pop
dec
pop
and
repnz
inc
cmp
xor
xor
and
sub
xchg
and
sbb
inc
sbb
adc
adc
and
or
ds
adc
neg
idiv
xchg
div
div
cmp
xchg
cmc
ins
adc
mov
shr
enter
(bad)
enter
pop
adc
mov
mov
xchg
lods
repnz
inc
movs
retf
fstp
jl
(bad)
xchg
mov
mov
inc
test
cmp
pop
and
je
jo
xchg
ins
repnz
pusha
stc
pop
pop
and
push
jl
(bad)
xchg
dec
cld
dec
(bad)
xchg
inc
imul
cmp
enter
pop
and
in
jl
(bad)
xchg
and
and
inc
sbb
sbb
adc
adc
out
xchg
jl
cld
inc
cmc
test
cmc
dec
in
mov
dec
or
js
loop
push
inc
mov
mov
loop
movs
sbb
xor
inc
jnp
cmp
xchg
lods
cwde
xchg
or
test
fdivr
mov
loop
cmps
sbb
sbb
sub
cmp
and
push
nop
mov
mov
and
xchg
mov
aam
gs
or
xchg
dec
jl
inc
cmps
mov
or
inc
mov
in
xor
push
retf
push
fnstenv
and
xchg
inc
ror
loopne
lock
push
or
adc
mov
in
cmp
xchg
inc
or
jns
mov
in
cmp
xchg
loopne
xchg
adc
and
inc
xor
inc
jns
mov
in
cmp
xchg
inc
mov
sar
and
in
cmp
adc
and
xchg
inc
ins
enter
mov
in
cmp
xchg
inc
clc
les
stos
cmp
xchg
inc
dec
enter
mov
in
cmp
xchg
push
and
in
cmp
xchg
inc
mov
sar
movups
lods
loop
push
inc
inc
fisub
xchg
inc
call
and
push
cmc
mov
in
cmp
xchg
je
test
int3
bnd
or
xor
inc
sub
sub
jo
mov
aam
pop
in
or
hlt
loop
mov
inc
and
dec
jns
mov
in
cmp
xchg
inc
ror
loopne
lock
mov
xor
les
xor
mov
xchg
in
cmp
xchg
adc
in
push
or
js
mov
sar
nop
loopne
lock
and
les
sub
nop
cmp
pop
push
inc
je
test
mov
in
cmp
xchg
and
les
sub
nop
cmp
fs
inc
mov
loope
fdivr
inc
mov
sub
push
mov
in
cmp
xchg
and
mov
dec
cmp
xchg
inc
call
clc
lds
xor
pushf
test
repnz
xchg
xor
or
fs
mov
in
cmp
xchg
mov
bound
xor
or
in
mov
in
xchg
push
push
cld
or
or
cmp
nop
inc
repnz
push
inc
fs
andps
scas
nop
movs
sbb
sub
cmp
nop
jb
xchg
sbb
or
push
jns
pop
cmp
int3
nop
movs
repnz
inc
(bad)
les
js
inc
or
sub
gs
or
xchg
cmp
cmp
inc
mov
sub
xor
or
inc
repnz
mov
inc
mov
cmp
xchg
sbb
movs
sbb
inc
fs
mov
in
cmp
xchg
inc
in
hlt
js
mov
and
inc
xor
inc
jns
mov
in
cmp
xchg
inc
mov
inc
push
and
xchg
add
loopne
lock
out
jnp
cmp
push
or
pusha
jns
mov
in
cmp
xchg
inc
ror
loopne
cld
fcomp
sub
add
or
xchg
mov
loopne
and
mov
pop
or
mov
sbb
stc
dec
cmp
or
push
inc
push
mov
in
cmp
xchg
or
xchg
sbb
sub
inc
dec
enter
mov
in
cmp
xchg
inc
loopne
lock
rcr
enter
mov
out
push
repnz
push
inc
jl
mov
mov
in
cmp
xchg
icebp
movups
loop
push
inc
cmp
dec
jns
mov
in
cmp
xchg
inc
(bad)
enter
mov
loop
ret
sbb
and
xor
mov
in
cmp
xchg
inc
lods
enter
mov
in
cmp
inc
les
and
cmp
xchg
inc
mov
mov
in
push
mov
and
sbb
xor
sub
leave
rol
xor
adc
pop
mov
jmp
int3
cdq
or
xchg
xor
mov
dec
or
test
les
xchg
in
jb
xchg
and
adc
adc
sbb
xor
inc
xor
and
sbb
nop
pusha
bnd
in
sbb
mov
enter
sbb
inc
mov
repnz
shl
sub
mov
loopne
lock
and
mov
jo
(bad)
(bad)
adc
jb
sub
xor
mov
and
stos
or
jo
inc
xchg
cmp
and
cdq
or
adc
shr
jb
cmp
adc
add
adc
and
or
push
in
cmp
xchg
nop
les
popa
nop
enter
fadd
dec
xor
push
xor
mov
fcom
mov
sbb
and
mov
and
add
or
pushf
fisttp
sub
xchg
dec
inc
clc
scas
cmps
push
adc
cmp
repnz
sbb
or
or
cld
loop
loope
inc
xor
add
mov
inc
adc
pop
push
scas
and
scas
cld
inc
xor
mov
mov
(bad)
and
les
mov
fcmovu
mov
mov
xlat
lahf
dec
sti
pop
add
loop
test
fbld
faddp
(bad)
dec
and
mov
popf
add
loop
push
sbb
mov
mov
adc
jecxz
sub
xor
or
sub
and
cmp
dec
dec
and
mov
and
or
push
fsubr
fsubr
or
xchg
cmp
xchg
div
call
dec
test
cmps
inc
lods
sub
in
(bad)
pop
pop
in
mov
imul
lahf
sti
jo
jmp
ins
leave
enter
fcomp
fisttp
jp
inc
hlt
fucomip
cmc
iret
xor
dec
in
scas
mov
scas
retf
data16
mov
dec
out
pop
push
jns
bound
aas
adc
(bad)
in
aas
pop
dec
jmp
lods
mov
loop
xchg
or
mov
add
retf
sub
mov
fs
hlt
mov
sbb
pop
out
jecxz
lods
sub
add
sbb
add
imul
mov
sbb
inc
stos
jp
sub
push
hlt
mov
jmp
ds
mov
stos
fistp
in
cmp
stc
adc
aas
xchg
movs
adc
(bad)
(bad)
enter
jecxz
in
in
lock
sar
out
sbb
mov
add
inc
xor
jl
xchg
js
pop
sub
nop
test
adc
je
inc
add
fdivr
sub
test
and
cmp
xor
mov
aam
cwde
mov
mov
or
xor
xor
inc
dec
xor
sbb
or
adc
stc
mov
enter
clc
cmp
mov
xor
adc
outs
mov
add
mov
fwait
mov
and
cdq
xor
pushf
mov
pop
mov
mov
adc
xor
cmps
add
call
shl
movs
fwait
or
cmp
adc
xchg
rcr
(bad)
daa
add
arpl
je
imul
dec
fldcw
icebp
fmul
adc
fsub
push
push
imul
or
adc
icebp
xor
adc
jno
inc
je
jo
adc
xor
dec
das
adc
or
outs
je
in
sub
loopne
inc
push
inc
outs
add
pop
adc
outs
gs
xor
sbb
ret
mov
ins
mov
arpl
or
cmp
xor
loopne
mov
test
and
dec
push
pusha
jmp
movs
xor
push
ds
movs
and
lods
clc
stos
push
adc
cmps
mov
and
enter
sbb
and
sbb
cmp
leave
imul
stos
inc
xor
cwde
xor
inc
add
push
dec
dec
push
imul
push
or
arpl
dec
add
ins
pop
xchg
lods
bound
sbb
xor
fistp
cld
add
sbb
and
xchg
xor
cmp
cld
xlat
cwde
fisubr
mov
dec
cmp
mov
sbb
push
xchg
sbb
xor
adc
jge
inc
les
mov
jl
mov
sahf
in
ret
jl
scas
mov
in
jmp
pushf
test
sbb
enter
and
sbb
imul
leave
enter
(bad)
push
xor
into
loope
push
jle
push
cdq
sahf
jns
shl
adc
xor
test
cmp
in
mov
lods
cdq
inc
or
movs
sbb
adc
popf
je
pop
popf
(bad)
xchg
cld
and
inc
movs
pop
xor
dec
jg
and
adc
mov
cmp
cld
inc
ins
ret
ins
into
pusha
int
push
ins
sub
adc
scas
cmps
adc
xor
fldcw
stos
ficomp
sbb
lods
mov
jns
adc
or
pop
aam
scas
mov
sub
push
loopne
les
hlt
mov
pop
mov
cmc
pushf
call
or
pop
popa
dec
(bad)
into
mov
loope
not
je
inc
cli
mov
adc
inc
mov
js
in
int3
xor
cdq
jmp
or
xor
mov
rol
out
and
es
sub
adc
and
fcom
sub
addr16
and
adc
adc
ret
mov
pop
retf
and
dec
xchg
xor
imul
nop
dec
cld
mov
loope
inc
loope
mul
out
xchg
cmp
mul
stos
or
test
and
push
cmp
loopne
dec
les
ds
stc
dec
movs
cwde
sbb
movs
or
xor
pop
and
clc
loope
pop
bound
in
jo
cmp
cmps
and
pop
fs
adc
mov
iret
mov
fsubr
or
add
jb
and
push
xor
jmp
xor
cmp
into
add
adc
sti
mul
(bad)
mul
daa
inc
or
sub
mov
or
xchg
cmp
mov
test
mov
rol
pushf
dec
lock
psrlw
inc
inc
sbb
dec
dec
dec
add
dec
dec
dec
push
push
push
add
push
push
push
pop
pop
pop
push
popa
bound
repnz
imul
jo
jno
and
jne
ja
jns
mov
xor
sub
das
cmp
or
or
sbb
and
xor
dec
adc
dec
ins
xchg
js
test
mov
inc
les
cmp
fsub
or
cld
enter
inc
rcl
ror
loopne
add
sbb
or
mov
push
test
xchg
ins
lods
daa
adc
dec
retf
pop
nop
and
inc
xchg
adc
mov
xor
adc
mov
adc
dec
in
adc
or
loope
and
xchg
mov
xchg
adc
xor
cdq
mov
push
pusha
add
sbb
jae
shr
mov
inc
inc
int
adc
dec
sub
enter
adc
and
adc
rcr
adc
mov
enter
fadd
adc
pop
and
push
and
sub
mov
enter
popa
xor
add
xchg
add
pop
inc
add
adc
xchg
push
and
adc
and
dec
clc
xchg
or
adc
or
inc
adc
xchg
jo
cmove
adc
dec
adc
fcom
clc
adc
push
dec
sub
sbb
mov
xor
lods
int3
cmp
rcl
mov
adc
and
add
push
adc
xchg
and
inc
cwde
mov
and
dec
mov
in
mov
cld
mov
int3
adc
fimul
xchg
out
and
js
test
dec
add
mov
mov
cmp
or
dec
data16
pcmpgtw
push
pop
or
fadd
mov
jmp
ja
sbb
or
or
stos
push
or
or
or
inc
adc
jmp
dec
addr16
mov
pop
inc
loopne
mov
lods
fs
adc
pusha
into
out
ss
add
xchg
pop
adc
pushf
in
popf
test
out
jo
push
dec
adc
dec
push
adc
or
add
jg
stc
xchg
or
cli
mov
adc
and
dec
call
add
mov
dec
adc
dec
in
icebp
mov
xchg
loopne
loope
push
mov
xor
cwde
jo
or
xchg
cmp
and
js
enter
loope
or
and
dec
xor
pop
jo
inc
cdq
imul
dec
pop
xchg
pop
and
fs
test
add
or
mov
sub
(bad)
in
xchg
adc
and
inc
cld
dec
mov
adc
stc
dec
ins
xchg
clc
and
not
test
cmc
dec
mov
inc
repz
repnz
and
inc
or
lock
sbb
out
inc
xor
mov
and
dec
in
xchg
push
jmp
add
dec
add
(bad)
loop
push
cmps
les
mov
pop
test
add
aaa
pop
mov
call
mov
pop
or
add
aaa
add
inc
lock
push
sub
xor
enter
aam
sub
add
inc
push
xchg
lahf
sub
or
jo
adc
in
jno
dec
imul
or
movd
sub
call
enter
or
dec
sbb
add
xor
lods
nop
xor
shl
(bad)
rol
adc
sbb
or
movs
dec
xchg
add
add
data16
add
loope
cld
dec
add
and
dec
lock
in
and
inc
in
mov
adc
and
dec
rcl
(bad)
ror
dec
mov
lods
and
pushf
adc
xchg
mov
mov
mov
and
push
sub
mov
in
jb
cdq
or
or
cmps
dec
xchg
pusha
enter
cmps
xor
sbb
inc
test
je
sub
stos
sbb
mov
adc
and
lods
xor
and
or
xor
or
dec
in
add
(bad)
sbb
dec
adc
push
or
and
xor
test
push
jne
mov
stos
loope
mov
push
add
aas
es
adc
push
add
shr
jns
inc
gs
mov
jb
arpl
ret
shr
aam
adc
out
and
cmps
adc
push
mov
push
in
inc
and
jne
imul
scas
mov
mov
imul
popf
in
retf
jns
inc
pop
fdivp
jmp
(bad)
cmp
sub
pop
ins
mov
sbb
mov
call
sbb
retf
adc
adc
cmp
jo
and
adc
retf
inc
dec
dec
adc
add
ss
dec
adc
je
test
cmp
mov
popa
and
lods
xchg
pop
jbe
inc
dec
sti
sbb
xor
fidivr
push
push
enter
mov
fs
add
push
ins
daa
sbb
js
push
loopne
arpl
and
popa
je
out
imul
jns
and
nop
lods
sub
data16
popa
imul
mov
and
jecxz
lea
dec
outs
cmp
sbb
mov
arpl
mov
jo
inc
jecxz
pop
and
sbb
repz
rcr
push
retf
popf
out
adc
jo
pop
inc
mov
inc
inc
jb
xor
and
mov
retf
xchg
test
inc
lock
jmp
jmp
int3
cmps
push
outs
and
xchg
shl
bound
and
or
pop
and
fs
les
je
mov
and
inc
or
pop
and
outs
inc
mov
cld
or
loop
mov
int3
xlat
js
or
call
inc
inc
mov
adc
sbb
data16
push
adc
add
add
xchg
sbb
lea
jo
add
sub
cwde
mov
and
aad
cpuid
xor
xor
cs
sbb
adc
sub
cmp
imul
pop
test
aad
xchg
xor
cs
adc
adc
cmp
cmp
mov
inc
jle
into
or
xor
sub
imul
jno
daa
pop
sub
jbe
je
ret
js
mov
inc
pop
sub
cmp
and
pop
mov
int
adc
aam
mov
movs
jns
cmps
cmp
addr16
(bad)
jb
sbb
test
xchg
fld
jae
outs
mov
inc
dec
inc
xchg
sub
xchg
sub
lods
dec
cmps
xchg
inc
mov
out
stos
push
ins
dec
ja
dec
in
cmps
inc
add
daa
jmp
or
push
jae
arpl
gs
adc
sub
inc
fwait
pop
(bad)
std
test
sub
outs
in
adc
les
mov
clc
sbb
mov
jb
xor
jbe
inc
push
and
sub
jge
pushf
or
add
lea
xchg
imul
ja
in
lock
xchg
xlat
and
dec
stos
or
cmp
xor
dec
inc
test
add
sbb
or
hlt
test
dec
lds
sub
jmp
xor
push
jg
je
or
adc
shr
js
jne
fs
into
and
mov
sbb
in
push
jae
adc
dec
push
mov
arpl
adc
mov
jnp
loop
stc
in
push
int3
push
sub
sub
sub
jno
out
pop
loop
cmps
add
cvttps2pi
add
adc
sbb
add
out
jl
push
pushf
and
adc
jmp
and
test
add
push
push
sbb
or
sbb
push
push
add
xor
outs
sub
and
ret
mov
add
and
lahf
sub
inc
nop
push
dec
push
sub
sub
pop
dec
enter
data16
mov
and
dec
out
mov
sbb
adc
es
xor
mov
je
test
xchg
mov
fmul
and
add
dec
dec
xchg
popa
and
test
and
dec
rcl
or
(bad)
inc
cmp
je
mov
dec
test
mov
mov
mov
outs
jbe
sbb
jne
arpl
ret
loope
gs
test
sahf
jae
arpl
imul
sti
aad
loope
push
mov
ins
popa
pop
jns
sti
and
inc
sahf
sub
mov
repz
dec
inc
popa
dec
dec
dec
pop
fs
lods
dec
int3
popa
stos
outs
jmp
jae
xchg
dec
dec
out
out
xchg
sahf
mov
ja
bound
add
sub
ss
dec
out
cmps
iret
and
minps
dec
dec
std
gs
adc
inc
in
cwde
pop
push
dec
repz
jmp
in
jo
fucomi
xchg
xor
cmp
xchg
std
sbb
pop
jae
fwait
mov
dec
or
addr16
inc
adc
sahf
and
test
and
shl
mov
push
or
pop
outs
imul
xchg
adc
stos
cmps
or
sti
mov
push
imul
push
lock
popa
mov
push
outs
jne
inc
xchg
(bad)
aaa
mov
aam
test
dec
lds
jo
jg
lea
popf
dec
mov
xchg
adc
dec
dec
scas
lea
push
xchg
inc
(bad)
stos
mov
jo
add
cmp
xor
sub
sub
mov
sti
push
std
push
dec
pop
or
sbb
mov
sbb
imul
or
jne
dec
fdiv
ins
mov
add
das
mov
push
xchg
jae
cmp
call
push
lods
sub
or
xor
sahf
push
jbe
adc
adc
xchg
cmp
jno
sbb
fisub
les
xor
dec
jae
test
sub
xchg
scas
mov
js
xchg
add
push
adc
adc
add
push
pop
or
pop
inc
or
push
cmovle
dec
or
adc
push
adc
and
push
xor
or
adc
unpckhps
adc
sub
and
xor
mov
xchg
pop
mov
mov
hlt
pop
xchg
mov
mov
aaa
xchg
sub
(bad)
cmp
sar
loop
in
in
add
push
or
fsubrp
add
fdivr
sbb
or
adc
leave
sbb
adc
adc
or
popf
add
jae
push
nop
adc
push
into
push
adc
and
loopne
pop
add
sub
scas
cmp
adc
test
aad
mov
push
add
dec
inc
aas
adc
add
cmp
and
push
stos
xchg
add
pop
pop
cmp
jnp
jl
mov
jg
or
sub
add
or
or
test
dec
sbb
adc
test
nop
pop
jo
fs
int3
or
inc
sub
push
inc
or
xor
pop
test
mov
add
or
or
adc
sbb
add
and
add
sub
or
pusha
cmp
cmp
adc
aas
inc
test
pop
pop
pop
pop
pusha
push
add
jge
jg
add
xchg
mov
add
xchg
cwde
cdq
add
lahf
mov
movs
movs
cmps
cmps
test
add
scas
mov
add
mov
mov
mov
add
ret
(bad)
(bad)
enter
retf
int3
int
iret
rcl
add
rcl
aad
xlat
fcomp
add
fcmovnu
fstp
fnstsw
loope
loop
in
out
call
in
in
out
out
lock
add
repz
cmc
div
clc
stc
add
sti
cld
std
(bad)
inc
push
pushf
leave
gs
(bad)
jmp
inc
pop
dec
dec
add
push
inc
push
pop
(bad)
or
push
fistp
push
out
add
js
inc
ror
ja
pop
push
adc
in
and
inc
inc
inc
xlat
and
xchg
push
inc
icebp
imul
inc
mov
push
cmp
inc
pop
xchg
push
xchg
gs
pop
dec
or
mov
dec
pop
cmp
test
ins
cmp
mov
and
xchg
sub
xor
mov
adc
and
dec
cmp
ds
mov
inc
or
dec
xchg
push
and
push
sub
or
test
and
dec
test
lods
and
mov
dec
rcl
loope
mov
adc
and
inc
add
or
inc
push
and
cs
xor
ds
mov
in
and
xor
and
cmp
inc
push
dec
or
adc
mov
sub
sub
push
sbb
cmps
mov
scas
inc
ins
sti
push
cmps
jbe
mov
and
ja
push
push
mov
ss
mov
jg
or
retf
inc
push
push
inc
(bad)
pop
push
mov
fisubr
adc
sub
daa
inc
and
pop
push
dec
cmp
jb
ja
bound
cwde
dec
or
(bad)
in
shr
and
outs
or
leave
jae
ins
jecxz
popf
loop
daa
dec
mov
mov
inc
sub
xor
push
dec
pop
dec
inc
dec
adc
inc
push
ds
cmp
xor
and
sub
mov
and
test
lods
sub
inc
sub
mov
in
mov
or
sbb
fld
ds
push
adc
aas
or
add
enter
cli
or
pushf
or
push
ret
inc
invd
and
adc
adc
mov
mov
xor
sahf
mov
sub
imul
dec
pop
js
ret
loopne
jmp
add
stc
popf
sti
add
jle
push
inc
(bad)
xchg
push
add
mov
jne
xchg
leave
dec
dec
in
pop
cmp
sahf
xchg
pop
fwait
add
pusha
les
jg
aam
ret
dec
je
jmp
cmp
pop
cmp
iret
jo
and
mov
jns
dec
(bad)
jge
arpl
add
scas
add
aam
out
test
adc
jmp
retf
push
or
sahf
out
cmp
xor
inc
sar
cmp
inc
or
jg
push
outs
xor
ins
outs
je
sub
mov
or
sub
add
adc
cmp
inc
mov
sub
adc
or
push
or
push
rcl
jno
sub
cmps
fbld
pop
cmp
push
xchg
pop
dec
popa
addr16
pop
bound
xchg
pop
and
not
xor
xchg
mov
and
inc
push
test
push
sahf
or
inc
mov
xchg
mov
mov
jge
add
or
cmp
fisubr
mov
aam
ins
adc
je
in
mov
hlt
push
dec
add
int3
not
and
and
sub
sti
xor
retf
push
leave
push
mov
push
sub
fsubr
and
sub
cmc
mov
pop
test
xchg
or
sbb
je
jbe
ins
ds
sbb
mov
out
jae
(bad)
inc
outs
jne
mov
cwde
sub
rcr
std
out
movs
out
mov
mov
pushf
ins
das
jno
inc
or
inc
movups
adc
mov
ins
mov
sub
push
lods
js
dec
jle
sbb
push
sbb
sub
rcl
inc
add
xchg
jle
push
or
pop
xchg
or
or
or
cmp
or
jecxz
mov
xchg
(bad)
movs
or
mov
rcr
ror
loopne
lock
jns
mov
in
xor
dec
loope
xchg
out
js
sub
rcl
adc
stos
adc
sub
mov
dec
cmc
push
loopne
sub
ret
aaa
sub
sub
xchg
xor
sbb
scas
mov
retf
and
aam
pop
sub
rcr
jmp
sbb
rcr
mov
and
cmp
(bad)
dec
enter
aas
adc
and
in
aas
les
cmp
push
ds
loop
pop
in
cmp
xchg
stc
fmul
and
in
jg
hlt
aaa
(bad)
adc
push
in
fs
pop
mov
jg
lods
repnz
aas
nop
mov
jecxz
in
xor
pop
mov
mov
inc
pushf
repnz
in
hlt
xchg
push
(bad)
pop
nop
loop
aas
nop
dec
jmp
mov
les
(bad)
in
aas
les
cmp
sbb
cmp
imul
mov
and
test
pusha
aas
xchg
int3
and
adc
aas
mov
adc
cld
cmp
pop
dec
aam
inc
cmp
inc
(bad)
in
dec
push
inc
dec
repnz
jno
pop
mov
in
enter
shl
inc
imul
jb
push
push
xchg
repnz
lahf
inc
aaa
in
jp
mov
cld
inc
ret
dec
jo
push
sub
dec
and
push
outs
fs
cmc
jno
orps
scas
ins
out
xor
mov
arpl
push
xor
dec
inc
in
cli
imul
and
xchg
lods
mov
mov
ret
sbb
ror
inc
inc
lods
sbb
adc
movs
xor
movs
sbb
xor
sub
test
fcom
dec
out
push
cmp
adc
push
push
scas
or
push
call
mov
outs
xor
scas
cmps
loope
jb
push
in
cmp
int3
les
pusha
sbb
inc
xchg
and
inc
sbb
std
jae
out
push
out
dec
cmp
(bad)
ds
and
adc
or
lea
push
into
es
lods
add
int
and
shr
ins
movs
pop
adc
mov
mov
cdq
fist
xchg
je
imul
jmp
mov
cmp
out
xchg
mov
xchg
push
and
and
inc
and
jp
clc
add
jns
sbb
pop
inc
dec
fidiv
xchg
daa
mov
xchg
pop
adc
xchg
into
xor
shr
pop
mov
adc
push
call
rcl
jns
xor
push
or
sub
cwde
pop
jecxz
and
outs
(bad)
in
stos
and
test
jmp
xor
sbb
push
pop
and
xor
inc
cs
imul
pop
inc
gs
das
mov
je
daa
push
jmp
mov
and
add
outs
das
es
xlat
stc
sub
cmp
mov
dec
aaa
inc
ja
(bad)
sub
xchg
mov
stos
adc
and
call
push
dec
jae
mov
mov
and
mov
lods
xor
in
ins
push
sub
pop
popf
or
outs
push
shr
nop
ds
movs
and
movs
popa
inc
push
ins
addr16
and
pop
cmc
cmp
nop
adc
mov
sahf
sub
stos
dec
retf
inc
dec
faddp
sub
and
test
mov
push
(bad)
push
imul
push
sub
inc
jge
mov
cmp
inc
dec
jl
dec
mov
sar
dec
pop
es
sub
jb
dec
push
cli
push
clc
aam
in
sub
lods
pop
retf
jbe
aam
push
push
mov
movs
dec
test
daa
inc
inc
pop
addr16
outs
arpl
dec
or
imul
pop
pop
aam
out
retf
xor
pop
popf
fxch
push
push
push
and
js
jns
or
rcl
aas
pop
stos
mov
cmp
ds
sub
sbb
fstp
cld
call
hlt
pop
jo
mov
aas
mov
pop
fs
cmp
inc
inc
out
adc
jl
mov
lods
inc
pop
or
enter
fsub
mov
jmp
adc
ins
mov
ds
inc
(bad)
ins
xchg
jmp
push
mov
fdivr
xchg
popa
ins
mov
jne
mov
mov
push
je
or
test
(bad)
pop
scas
sub
lock
retf
lods
loop
push
adc
inc
pop
mov
sahf
mov
in
and
test
inc
sub
sbb
add
cmp
inc
push
mov
cmp
inc
mov
hlt
je
test
into
(bad)
xchg
sar
dec
and
enter
std
or
adc
and
dec
rcl
and
inc
clc
lock
adc
sub
fsub
xor
or
cmp
add
ret
xor
bswap
aas
inc
mov
add
mov
(bad)
dec
mov
adc
sub
sbb
and
jecxz
shr
out
pop
fbld
lods
ins
pushf
pop
mov
scas
outs
lahf
pop
or
enter
les
or
retf
cmp
pop
(bad)
aaa
test
mov
dec
mov
ja
add
sbb
and
adc
sub
jmp
(bad)
out
xlat
test
push
xchg
push
stos
add
pop
cmps
addr16
push
add
ret
push
into
inc
add
xor
or
add
jb
dec
mov
mov
lea
jge
add
adc
cs
push
fisub
add
adc
sub
add
push
scas
outs
sahf
pop
mov
lods
ins
popf
pop
or
retf
push
(bad)
test
leave
cmp
add
add
jp
inc
mov
mov
dec
mov
jne
add
sbb
es
(bad)
sub
jmp
adc
call
add
pop
movs
gs
push
cmps
pop
add
lahf
push
xor
adc
mov
sbb
jnp
cld
jae
push
or
jle
cmp
sbb
ins
push
bound
sub
cmp
pop
adc
cmp
inc
ss
fist
adc
or
fist
sbb
adc
mov
adc
xchg
sbb
mov
add
aas
out
popa
dec
mov
cmp
test
outs
dec
xchg
scas
out
lock
add
ins
out
(bad)
shl
lds
cmp
and
add
cmp
loope
pop
stos
jb
push
test
xchg
repnz
jl
push
sbb
cmp
sbb
fldenv
jnp
(bad)
pop
shl
and
dec
and
sub
dec
sbb
clc
inc
xchg
icebp
int3
inc
push
stos
bound
sbb
and
inc
sub
mov
adc
and
dec
sub
push
sbb
or
adc
and
dec
sub
xor
cmp
mov
dec
daa
xchg
and
adc
and
dec
ds
aas
stos
leave
adc
adc
dec
or
xchg
add
xor
add
push
(bad)
xchg
xchg
aaa
sbb
or
inc
dec
adc
test
push
cmp
pop
push
dec
push
(bad)
in
xor
ins
and
dec
dec
push
and
ins
inc
and
dec
push
js
sbb
pop
aam
and
js
mov
sub
bound
jo
fs
mov
das
cmps
adc
add
adc
sbb
sbb
cmp
dec
sbb
add
in
ds
cmps
shr
retf
sub
push
sbb
sar
aaa
add
jge
cmp
adc
adc
and
inc
push
adc
pop
add
jno
xor
and
rcl
xor
xor
cmp
and
pop
push
jmp
add
hlt
not
adc
lahf
inc
call
hlt
ficom
push
aam
inc
into
test
mov
pop
xchg
mov
push
ja
adc
rcl
push
add
inc
push
pop
popa
jno
and
mov
mov
and
adc
adc
and
loope
icebp
and
mov
xor
jb
mov
cmp
fs
or
dec
sbb
and
(bad)
push
lods
push
ret
push
push
and
sbb
xchg
pop
inc
cwde
clc
mov
adc
sbb
or
mov
int3
xchg
aam
add
and
adc
mov
sub
xor
cmp
inc
and
pop
mov
and
dec
jl
test
xchg
inc
pushf
movs
mov
int3
xchg
aam
fadd
mov
adc
and
je
mov
mov
je
movs
pop
and
pop
dec
mov
mov
movs
dec
lods
xchg
mov
mov
aam
fsub
dec
in
xchg
cld
pop
and
mov
mov
je
movs
pop
and
push
or
js
ret
pusha
cmp
or
cmp
mov
or
inc
je
inc
inc
xor
inc
cmp
in
cdq
and
or
sbb
and
data16
or
fs
xchg
ins
and
dec
mov
xor
mov
dec
hlt
xchg
clc
and
loopne
sub
pushf
int3
adc
je
mov
mov
call
xor
xchg
inc
loopne
or
push
or
call
clc
mov
cdq
and
or
adc
and
xchg
push
push
and
adc
and
dec
mov
cdq
adc
push
and
dec
sbb
lock
test
mov
mov
xchg
and
inc
jo
mov
push
cs
and
cmp
mov
adc
daa
cwde
sbb
and
push
dec
push
mov
adc
and
dec
and
or
and
or
mov
adc
and
dec
enter
mov
mov
dec
mov
jo
test
fadd
or
mov
dec
cwde
xchg
mov
lods
mov
dec
enter
pushf
pop
jns
add
and
or
in
or
inc
hlt
cld
mov
add
add
mov
pop
add
mov
add
lahf
xchg
adc
mov
into
in
js
fstp
dec
(bad)
clc
test
je
ss
or
data16
clc
popa
sahf
das
dec
mov
jl
xor
push
hlt
push
xchg
and
xor
jp
xor
or
arpl
nop
sbb
sbb
popa
jp
shr
pop
inc
pop
imul
(bad)
imul
rcr
dec
stc
add
out
popa
mov
fcomp
jns
rcr
shl
or
xor
lods
jne
cmp
and
adc
jns
outs
push
or
or
int3
lea
call
sub
cmp
or
psrad
push
shr
inc
xor
pusha
pop
outs
push
jg
mov
std
rol
cli
std
retf
pop
sbb
and
jmp
mov
pop
mov
(bad)
fdivr
scas
cwde
pop
pop
cmps
sbb
pusha
scas
sbb
push
jmp
ficomp
inc
and
cmp
mov
push
cmp
clc
xor
repz
mov
xor
dec
mov
je
xchg
movs
nop
fcomp
push
adc
mov
pusha
dec
call
add
movs
(bad)
xchg
pop
pop
jecxz
fwait
jno
mov
sub
retf
dec
inc
fnstsw
add
adc
in
jno
mov
je
and
mov
fadd
(bad)
cmp
js
xchg
fisttp
fnstsw
popa
mov
sub
sbb
inc
push
inc
shl
jne
dec
inc
loop
or
popa
cmp
(bad)
mov
adc
fdivr
out
and
inc
mov
(bad)
mov
or
pushf
adc
add
nop
xchg
dec
(bad)
setle
icebp
add
pusha
pop
xlat
and
aam
mov
stos
adc
mov
call
push
call
cwde
pop
(bad)
or
jle
push
jp
mov
loope
and
sbb
sub
mov
nop
pop
loopne
jb
mov
mov
add
aaa
add
mov
out
test
cmps
or
jbe
inc
sbb
jmp
stos
js
cmp
loope
xchg
jle
pop
pop
jo
shl
imul
sbb
mov
add
xor
and
mov
js
les
jb
sahf
ds
std
jecxz
in
jbe
xlat
cwde
ins
(bad)
cmc
push
shr
dec
inc
xchg
sbb
cmp
lds
push
sbb
add
mov
inc
push
repz
fwait
xor
stos
cmp
pop
and
iret
repnz
jno
outs
imul
mov
pusha
iret
cmp
mov
test
test
inc
sti
cmps
xor
jmp
loop
jb
sub
aad
cmc
(bad)
mov
xor
pop
cwde
clc
push
sbb
popa
repnz
repz
in
repnz
mov
dec
inc
cld
scas
fst
dec
mov
jmp
xchg
sti
clc
mov
ds
jmp
adc
inc
stos
adc
loop
or
stos
mov
jne
dec
(bad)
sub
mov
je
push
movs
xor
repnz
pop
add
iret
or
jl
ret
fild
sub
mov
and
push
xchg
mov
push
aad
jae
jo
push
mov
hlt
inc
push
je
pop
mov
mov
loope
adc
push
ins
movs
push
jmp
lahf
or
cmp
mov
sub
jns
jp
sti
cmp
stos
cdq
cdq
mov
mov
sbb
xchg
mov
mov
add
and
add
retf
jne
add
(bad)
mov
mov
out
mov
dec
or
cmp
cmps
add
push
mov
inc
addr16
iret
sbb
les
stos
leave
pop
ds
(bad)
jae
hlt
xchg
ds
inc
jne
test
xchg
jnp
mov
pushf
lods
scas
jne
inc
(bad)
pop
int3
fs
movaps
push
mov
loop
adc
test
mov
inc
(bad)
xchg
and
add
cdq
(bad)
mov
adc
dec
int
mov
push
mov
ds
stc
inc
ds
push
push
and
sahf
mov
ret
dec
mov
xchg
test
cli
push
in
jnp
pop
lahf
mov
pushf
mov
xchg
inc
cmp
lods
xchg
loopne
add
sbb
xor
(bad)
rcl
mov
xchg
push
retf
std
sub
fwait
xchg
popf
cdq
mov
xchg
mov
jmp
mov
mov
mov
pushf
push
call
in
call
test
sub
add
outs
cmps
add
in
call
les
mov
int
cmp
shl
retf
inc
xlat
test
lock
xchg
jmp
retf
retf
jno
push
xchg
mov
shl
es
or
xor
and
mov
pop
jo
fwait
ins
dec
inc
out
adc
mov
and
popa
mov
iret
and
jbe
sub
ffree
pop
mov
jne
jmp
les
xchg
mov
or
or
jg
ds
sub
push
mov
cli
bound
or
retf
jno
aaa
pushf
(bad)
fstp
xor
pop
sti
and
rol
inc
push
inc
in
jne
hlt
movs
jecxz
adc
or
cli
cmp
dec
jmp
and
cmp
xlat
scas
fnstcw
jbe
push
and
adc
mov
push
test
call
ror
repnz
icebp
int
repz
hlt
pop
lahf
or
popf
jnp
leave
les
ds
jbe
call
sub
into
lock
imul
cli
shl
sub
les
jb
pusha
pop
pop
jae
xor
outs
in
jb
pusha
push
or
and
inc
idiv
ror
test
cmc
push
(bad)
xor
cmp
jne
pop
push
fisttp
push
addr16
lods
sbb
cmps
das
mov
mov
dec
and
mov
cs
dec
jmp
movs
inc
add
neg
jg
jo
dec
mov
and
std
(bad)
rcr
dec
cmp
ss
adc
inc
outs
enter
mov
aam
aam
mov
sub
mov
cmp
fidivr
mov
adc
fild
inc
(bad)
div
mov
adc
movs
mov
or
pop
pop
sbb
and
lods
dec
push
add
outs
leave
sbb
jge
aaa
pop
adc
jl
rcr
fnstcw
jns
xchg
div
sbb
pop
mov
fdivr
jecxz
add
sbb
pcmpgtd
inc
imul
dec
jns
pop
fsubr
les
cmps
mov
stos
mov
aas
inc
inc
test
jmp
push
mov
adc
iret
pop
lea
nop
loopne
mov
shl
mov
pop
jmp
fstp
pop
and
cmp
shr
jl
mov
call
popa
dec
int
mov
out
shl
nop
push
fnstcw
test
test
push
mov
retf
retf
add
dec
push
or
mov
push
or
or
inc
cmp
xor
mov
xchg
xchg
cmc
(bad)
cmp
jp
iret
pop
and
and
cmps
xchg
adc
pusha
push
jge
movs
cmp
ret
lahf
inc
sub
frstor
test
push
or
sub
aas
jb
xor
sbb
aam
sbb
out
sub
(bad)
xorps
pop
jbe
jbe
fwait
jg
sub
adc
cld
cmps
sti
dec
mov
repz
add
rcl
xchg
cwde
(bad)
pop
fisub
es
inc
stc
or
imul
les
fst
scas
push
loop
jo
mov
retf
outs
test
test
xor
lahf
push
sub
inc
pusha
push
test
inc
fwait
add
jne
test
into
into
inc
adc
nop
xor
fidiv
nop
dec
mov
enter
fistp
dec
sub
or
popa
xor
mov
push
xchg
fbstp
mov
mov
sub
mov
sti
fs
movs
stos
(bad)
aam
push
xor
inc
push
test
jg
retf
mov
pop
mov
das
outs
inc
mov
leave
cdq
(bad)
mov
in
test
dec
xchg
stos
neg
hlt
jmp
xor
mov
mul
push
ret
mov
movs
scas
ja
sbb
push
xlat
pop
mov
pusha
push
loop
sti
(bad)
scas
in
push
scas
sbb
cmp
inc
sbb
sub
jb
mov
lods
out
adc
sub
lock
cs
pand
daa
int
cmp
inc
fcmovb
jne
loopne
or
pop
xchg
xchg
mov
(bad)
cmp
(bad)
aas
push
aaa
dec
pop
bound
js
and
cmp
xchg
push
adc
jno
push
sub
shl
cmp
retf
aad
fdiv
int
jb
sbb
mov
outs
in
jge
scas
test
into
sti
sub
popa
or
mov
xchg
push
push
not
and
or
cmp
adc
xor
mov
jne
in
or
loop
xor
aas
retf
fsubr
jle
jle
dec
in
or
xchg
push
pop
mov
sub
inc
dec
sahf
repz
rcl
xchg
mov
lods
jae
or
pop
sub
mov
lods
scas
mov
inc
push
push
mov
shl
mov
call
inc
ins
ret
test
int3
test
jb
sub
and
add
xchg
ror
rcr
out
clc
cmp
int3
inc
pop
je
shl
addr16
add
mov
out
cmp
mov
adc
and
push
ds
ins
mov
data16
sub
cmc
or
mov
fwait
sub
push
jge
xchg
icebp
js
cld
sbb
lea
and
xor
add
or
sub
jge
adc
outs
popa
in
call
cmp
out
mov
test
out
cmp
mov
jge
fsub
or
fdivr
mov
sbb
mov
jne
lahf
sub
cmp
repz
std
sbb
xchg
mov
add
lea
sub
or
push
push
aad
xor
(bad)
xchg
mov
(bad)
jg
adc
ror
jle
or
cmp
mov
sub
fild
pop
lock
xchg
(bad)
addr16
ficomp
lods
out
add
imul
push
mov
stc
loop
out
xchg
mov
mov
and
xchg
cmp
sahf
neg
pop
xor
push
(bad)
je
fbstp
repnz
in
cmc
add
pop
popa
pop
loopne
inc
mov
add
push
test
pop
test
pop
(bad)
inc
jnp
xor
adc
mov
aad
push
xlat
mov
xchg
jbe
mov
xor
dec
mov
push
out
pop
aad
pop
int3
pusha
dec
xchg
dec
pusha
rcl
xor
xchg
jg
dec
bsf
retf
loop
pushf
mov
jmp
iret
push
cli
sub
mov
outs
rcr
push
inc
mov
out
mov
cmps
xchg
leave
xchg
lds
int
sub
clc
dec
fwait
adc
cld
sub
or
sbb
outs
gs
scas
sti
dec
mul
test
inc
mov
lock
test
cli
ret
push
push
and
adc
and
ss
cmp
cmp
imul
mov
mov
arpl
enter
adc
cld
leave
fwait
imul
icebp
outs
jns
fs
inc
sbb
pop
cs
jne
call
stos
add
outs
jl
sbb
cmc
aaa
out
push
sub
sub
rol
cmp
test
loopne
xor
test
push
lods
sbb
cmp
pop
fistp
das
fild
mov
outs
dec
popf
push
xor
nop
loopne
ret
xchg
jge
mov
out
lods
aaa
(bad)
ja
adc
mov
mov
and
lea
(bad)
ins
add
retf
and
add
sub
mov
in
sub
aam
cld
aas
mov
jno
js
das
js
ins
and
into
ins
cdq
adc
in
pop
fimul
mov
or
xor
rcr
xor
mov
shl
mov
sbb
push
out
pop
or
(bad)
jno
ret
fisub
sahf
xor
pop
jb
movs
mov
jecxz
ja
sbb
not
pop
mov
lock
push
push
cmps
jmp
cmp
retf
sbb
fstp
fstp
or
push
xchg
aam
aad
xor
rcl
fwait
cmp
pop
pop
jo
aaa
fdivr
xchg
hlt
retf
pushf
div
mov
jns
test
stc
cs
retf
ret
aam
cmp
pop
cmp
mov
pop
xchg
test
mov
add
adc
sub
(bad)
sbb
dec
call
pop
pop
jp
lods
sub
sbb
in
lods
jmp
push
int
stos
dec
fidiv
mov
ror
or
cmp
push
clc
into
lods
or
mov
test
mov
xchg
sbb
int3
xor
leave
(bad)
jp
jbe
or
mov
push
or
sbb
(bad)
and
fiadd
or
xchg
xchg
push
mov
notrack
dec
pop
mov
sbb
xchg
(bad)
sar
retf
int3
inc
test
xor
mov
sar
xor
pop
ret
scas
mov
cmp
repnz
cwde
pop
std
cmps
inc
not
push
out
jl
popa
js
push
push
push
enter
in
adc
imul
test
dec
cmc
adc
cmp
fmul
data16
arpl
cdq
cwde
pop
stos
(bad)
dec
sbb
pop
dec
ret
dec
fmul
movs
jge
loope
cmp
cs
and
push
inc
cmp
sub
lock
scas
stc
outs
jl
aaa
xor
cmc
outs
leave
push
lock
out
lods
jmp
mov
scas
mov
shr
mov
mov
adc
push
shl
xor
xchg
xchg
push
pop
fbstp
dec
out
je
adc
push
stos
mov
mov
pop
inc
mov
and
jnp
adc
cmp
jb
sbb
and
mov
fwait
mov
and
pusha
sar
inc
inc
or
stos
cmp
sub
xor
jp
aad
add
push
mov
cmp
mov
popf
jecxz
cli
jne
mov
pop
and
mov
stc
jae
aas
repz
rcl
dec
sbb
push
enter
loopne
dec
inc
(bad)
xlat
mov
adc
and
xor
xchg
mov
sbb
je
push
mov
neg
stc
inc
ja
xlat
addr16
shl
xchg
jmp
fistp
pop
jmp
add
xchg
and
push
out
pushf
xchg
push
and
mov
lods
fadd
or
(bad)
xor
fs
shr
in
mov
xchg
or
jae
xlat
(bad)
mov
dec
pop
stos
ins
jno
mov
in
sbb
aam
stos
stos
mov
sub
icebp
das
and
xor
mov
mov
mov
pop
sub
push
imul
aam
arpl
retf
outs
ret
lea
sbb
and
mov
mov
nop
fldenv
out
mov
add
movs
fdivr
jnp
lods
jl
stc
stc
mov
jge
xchg
cld
test
repz
push
push
scas
and
shl
stos
stc
jle
jge
les
imul
cli
mov
jb
fxch
or
mov
out
lock
loop
add
mov
int3
js
pop
es
push
sar
jp
dec
pop
(bad)
ss
inc
mov
retf
mov
jae
pop
and
lds
sub
push
dec
pop
aad
sbb
pop
shr
add
popf
jno
mov
add
call
pop
or
sub
fld
sbb
jg
cli
in
and
movs
mov
test
call
cld
add
dec
jnp
sub
in
(bad)
sub
nop
add
inc
adc
push
inc
scas
aad
mov
adc
cwde
test
sub
mov
mov
mov
loope
movs
sbb
cli
xor
jge
fadd
out
in
(bad)
(bad)
shl
(bad)
cmp
and
dec
mov
pusha
mov
outs
nop
xchg
clc
ficom
mov
sti
sub
push
stc
or
push
cmp
push
add
js
in
mov
cmp
add
test
jmp
push
xor
pop
outs
xchg
ins
test
gs
and
cmp
sbb
dec
xor
jg
fistp
clc
push
retf
dec
inc
cmp
jge
cmp
cmp
push
jp
in
cmp
fldcw
jb
sti
mov
dec
or
in
jns
jne
xor
jecxz
jno
fidiv
les
mov
dec
pop
pop
lock
pop
fnsave
(bad)
popf
jge
jge
int
retf
iret
in
leave
ficom
sbb
xor
jmp
out
cli
mov
jg
daa
dec
cmp
and
mov
dec
cmp
outs
jae
mov
jne
rcl
and
repz
pusha
add
mov
shl
fild
mov
test
test
dec
inc
call
cs
outs
mov
out
pop
outs
push
sti
add
or
scas
sbb
jecxz
push
push
or
jge
xor
lea
pusha
data16
aam
sbb
cmp
pusha
jae
and
in
cmc
pushf
scas
xchg
imul
adc
shl
add
dec
arpl
push
push
inc
mov
stc
pop
dec
xchg
cld
sbb
leave
adc
sub
sbb
mov
hlt
mov
cmps
(bad)
movs
test
cmp
bound
pop
adc
stos
jmp
xor
jmp
bound
mov
std
and
dec
(bad)
and
fbld
jl
or
adc
mov
outs
xchg
inc
pop
sbb
test
ret
jl
pop
ja
cmp
fs
imul
cld
(bad)
adc
movs
sti
call
mov
aas
jns
arpl
mov
inc
pop
stc
sbb
mov
and
repz
push
fisub
movs
test
cmc
cmps
es
movs
dec
sub
fsubr
div
or
lock
scas
stos
sbb
je
dec
add
popf
dec
cmp
shl
sahf
jg
jecxz
lea
cmp
loope
pop
in
jno
not
dec
adc
lahf
cmp
or
stc
mov
cmps
repz
in
inc
mov
push
jg
jecxz
rcr
mov
mov
jb
cmps
adc
jae
fimul
sbb
adc
repnz
cmp
push
cmp
adc
loopne
aad
fdivr
movs
dec
xor
ja
pop
mov
xchg
mov
jge
sub
cmc
cmp
mov
adc
xchg
int3
jno
cmps
mov
xchg
dec
sti
addr16
xor
dec
je
mov
leave
cli
bound
icebp
cmc
int
mov
out
mov
ins
aad
mov
jge
clc
sub
fwait
sbb
retf
loopne
popf
mov
repnz
and
dec
xor
imul
das
cwde
fnsave
push
lods
repnz
rcl
aad
shr
mov
jbe
and
test
imul
call
mov
jl
out
sbb
lahf
cmps
ret
dec
xor
jne
dec
adc
pop
sub
sahf
dec
imul
mov
jno
addr16
shl
js
mov
mov
xchg
sbb
sub
ins
inc
mov
jno
sbb
jecxz
or
xchg
enter
push
cld
test
mov
aaa
iret
cmp
xchg
ins
inc
scas
mov
pop
and
das
mov
leave
out
pop
rol
outs
xor
int3
sub
sub
mov
dec
stos
iret
popf
jne
sub
cwde
or
and
xchg
xchg
mov
addr16
pop
mov
dec
int
ret
cmp
push
retf
(bad)
mov
jg
jmp
mov
push
cmp
or
adc
clc
shl
mov
loop
inc
xchg
sbb
inc
or
and
bound
scas
pushf
mov
std
xor
scas
mov
rol
shr
fisttp
sahf
out
pop
outs
test
cmp
(bad)
js
cmp
popa
xchg
sbb
cmc
(bad)
mov
sbb
cmp
dec
fwait
jl
adc
jne
push
outs
inc
shl
in
and
and
mov
lods
xchg
mov
add
call
push
fnstenv
dec
sub
imul
xor
sar
inc
pushf
and
rol
mov
mov
bound
pushf
or
in
iret
add
dec
(bad)
jb
xor
(bad)
jecxz
aam
aaa
lods
cli
mov
lahf
sbb
and
xchg
xchg
fild
xchg
push
cmp
test
sub
mov
dec
mul
ss
and
fsubr
fisub
mov
sbb
mov
icebp
sbb
pop
mov
daa
iret
inc
fild
or
(bad)
ret
push
cmps
sbb
jl
cmp
cmovs
mov
test
inc
push
jnp
adc
not
xchg
out
pop
inc
jns
mov
pushf
xchg
or
sub
out
add
pop
push
movs
sbb
and
jo
cdq
test
pop
cdq
cmp
rcr
test
mov
push
neg
mov
pop
fwait
popf
mov
adc
inc
push
pop
les
leave
loopne
ja
sub
(bad)
aas
xor
outs
cmp
shl
push
adc
and
jnp
mov
dec
xchg
push
mov
jmp
in
mov
adc
cmps
xchg
push
ja
push
sar
cmp
mov
inc
(bad)
cmc
or
mov
adc
inc
dec
pop
repz
mov
mov
jb
leave
dec
repz
xchg
out
inc
dec
jmp
inc
jmp
jno
cdq
or
and
jbe
aas
mov
inc
in
arpl
push
xchg
or
jae
popa
pushf
mov
and
adc
pop
call
or
test
mov
push
shr
jne
jmp
out
cld
jae
(bad)
loopne
gs
adc
xchg
jp
cmp
(bad)
cmp
inc
cmp
inc
inc
sbb
xor
lods
out
(bad)
(bad)
aam
ja
or
cld
xchg
shr
loop
and
fdiv
mov
sub
adc
sub
jecxz
jp
and
mov
loope
mov
cmp
jns
test
stc
sub
dec
pop
fldcw
push
mov
adc
outs
je
ficom
mov
mov
retf
push
pop
add
lahf
rcr
fwait
cmp
pop
sub
scas
aaa
adc
mov
dec
jno
pop
js
lds
mov
inc
in
pop
sbb
(bad)
stos
in
cli
inc
jbe
adc
(bad)
das
cld
(bad)
repz
dec
xchg
in
xor
and
mov
and
sahf
jbe
ins
sbb
cmp
push
into
jo
scas
fbstp
push
mov
shl
add
push
dec
scas
(bad)
cmp
sub
jmp
repz
aas
hlt
jno
mov
sbb
aam
dec
scas
test
cmp
daa
mov
mov
add
and
popa
mov
test
push
test
jne
cmp
test
dec
inc
cdq
call
and
push
pop
dec
cmps
adc
enter
mov
xchg
jecxz
or
clc
push
or
mov
mov
cdq
cmp
hlt
pop
retf
xchg
and
sbb
and
mov
push
cmp
and
lds
(bad)
pop
push
mov
sbb
or
push
jbe
and
lahf
dec
push
sbb
sbb
mov
ret
adc
mov
sub
or
fsub
adc
xlat
adc
cmp
jl
rol
mov
(bad)
xor
xor
hlt
cmp
int
data16
stos
dec
inc
in
jbe
jae
mov
nop
addr16
pop
aad
mov
cmp
fiadd
sbb
fmul
mov
xchg
jmp
movs
sub
add
jg
mov
out
lds
mov
movs
xor
leave
mov
inc
jnp
out
daa
stos
fimul
mov
push
or
xchg
or
ret
jmp
cld
adc
push
fistp
mov
mov
xchg
mov
pop
movs
rcl
jno
sbb
sub
pusha
repz
pop
rcr
mov
jmp
std
in
std
pop
cmps
daa
ret
jmp
xchg
int3
pop
(bad)
jl
push
dec
inc
mov
jmp
pop
mov
sahf
xchg
xor
mov
loope
es
mov
(bad)
not
sti
push
lea
dec
lahf
pop
fistp
aad
jns
call
(bad)
popa
mov
inc
mov
mov
sub
adc
in
adc
sti
inc
mov
in
push
mov
mov
loopne
fsub
xor
inc
jnp
and
(bad)
mov
fild
inc
iret
neg
popf
mov
rol
fdiv
and
xor
xor
movnti
lea
dec
pop
outs
inc
(bad)
push
into
daa
mov
sub
cmp
ror
push
es
in
xor
fcomp
pop
jle
xchg
sub
bound
xchg
or
mov
push
sbb
loop
loopne
test
cmps
or
sbb
in
inc
mov
call
mov
xchg
or
push
adc
adc
pop
int3
jbe
and
mov
icebp
ds
popa
or
fdiv
fxch
ins
push
in
repnz
leave
or
mov
push
cmp
ret
ret
jbe
aaa
xchg
push
push
xchg
call
cmc
sub
mov
fbstp
adc
sub
adc
add
inc
sbb
inc
and
push
ds
je
sub
dec
push
pop
inc
mov
xor
pop
add
xchg
xchg
pop
xor
mov
mov
jl
lea
ds
push
jmp
xor
xchg
iret
sub
cdq
int
outs
add
mov
xor
push
and
jp
pop
adc
or
mov
sbb
push
sbb
adc
dec
in
push
sub
call
sbb
inc
mov
rol
or
xchg
imul
dec
or
into
and
add
xsave
pop
test
mov
jo
jcxz
scas
repnz
jne
adc
repz
xor
mov
adc
dec
or
call
push
jne
sub
nop
push
repnz
lds
cmps
xchg
data16
xor
lods
adc
lods
jmp
scas
jbe
mov
ins
scas
pop
(bad)
sub
or
arpl
addr16
mov
mov
cmps
mov
inc
pop
sbb
jae
xor
arpl
fs
mov
adc
bound
lods
jp
mov
lahf
rcr
dec
sbb
fisubr
in
sbb
ret
cmp
or
repnz
mov
add
add
or
mov
ficom
jle
out
rcl
push
xchg
xchg
jae
add
jmp
(bad)
push
cmps
lea
jle
fsubr
sbb
push
mov
loop
push
ins
inc
xchg
fld
mov
fcmovnu
(bad)
stos
stos
and
push
mov
lea
(bad)
(bad)
sar
lahf
adc
addr16
stos
and
popf
mov
jnp
and
fstp
in
(bad)
cld
(bad)
into
enter
cmp
dec
xor
std
add
mov
adc
push
push
idiv
sub
mov
test
adc
add
stos
(bad)
mov
adc
iret
xchg
(bad)
sti
fiadd
popa
adc
not
retf
pop
ret
lahf
cdq
sbb
(bad)
out
push
dec
sbb
pop
mov
jo
push
mov
(bad)
push
mov
outs
add
inc
aaa
call
cmps
xchg
mov
leave
scas
retf
add
outs
bound
repnz
shl
jno
rcl
loope
in
clc
pop
ins
lea
mov
jno
mov
or
mov
push
xchg
and
scas
sub
in
and
mov
dec
daa
dec
in
test
div
dec
(bad)
dec
lahf
mov
mov
jb
data16
arpl
pop
xchg
fsubr
sahf
inc
sub
fsub
push
add
and
outs
push
xchg
sbb
mov
sub
fcmovbe
icebp
fcomp
add
jo
scas
ins
mul
mov
outs
sbb
inc
out
pop
into
and
inc
pop
pop
add
mov
out
mov
fxch
in
jae
call
gs
loop
mov
push
jp
out
xor
(bad)
adc
(bad)
fdivp
(bad)
stos
cmp
jae
add
call
pop
add
sub
loop
pop
int3
es
test
jmp
cmps
lods
mov
mov
mov
xor
mov
push
cmp
js
in
adc
movs
shl
daa
push
(bad)
cmp
dec
or
(bad)
fistp
xchg
dec
aas
inc
and
out
test
adc
push
dec
shr
mov
mov
cmc
scas
pop
jo
hlt
stc
loop
push
call
popa
mov
jle
add
ret
(bad)
jb
retf
push
jle
rcr
ret
xor
mov
rol
inc
popf
sbb
retf
pop
outs
lea
mov
loop
fst
mov
cmp
dec
jmp
jne
inc
sub
dec
fwait
adc
mov
(bad)
test
inc
sub
lock
(bad)
mov
sbb
in
fbstp
inc
cmp
add
or
inc
scas
xchg
adc
aaa
sub
leave
test
popf
sar
jbe
loopne
pop
ja
jae
fidiv
xor
icebp
ja
les
xchg
retf
xchg
pop
add
movs
sub
ret
fcom
xchg
adc
(bad)
adc
stos
pop
cmp
mul
dec
ror
pop
push
sub
stos
data16
mov
(bad)
loop
and
xor
mov
sub
std
cmp
xchg
mov
adc
dec
out
stc
cmp
je
push
xchg
sbb
stos
pop
xchg
lea
mov
addr16
bnd
pop
pusha
fcom
dec
mov
mov
mov
mov
(bad)
pushf
ss
xchg
jl
sub
sbb
pop
in
push
loop
mov
sub
or
adc
jmp
call
movs
xor
or
aam
cwde
repz
push
stc
jp
and
je
loope
push
pop
ins
repz
ror
cmp
push
xor
in
fld
jl
retf
or
stos
jmp
jge
xchg
stc
push
repz
jb
stc
cdq
sbb
dec
test
outs
inc
mov
mov
test
mov
jl
mov
scas
cmc
call
shr
or
aaa
stos
sbb
(bad)
pushf
or
mov
inc
add
mov
or
and
jmp
js
jge
sti
inc
test
cmp
fild
cld
rcl
xchg
or
clc
test
call
out
jns
sub
dec
pop
mov
jb
or
mov
inc
ret
pop
xor
loop
jo
pop
repnz
jno
jae
int
push
mov
test
das
dec
fldenv
lock
and
loop
or
jne
test
clc
fnstenv
xchg
(bad)
mov
push
or
ja
in
aaa
pop
data16
or
icebp
(bad)
adc
sbb
lea
add
cmp
mov
xchg
stc
mov
push
test
inc
fist
sbb
addr16
cwde
popa
cwde
lods
xor
test
int
cmp
push
stc
push
push
adc
(bad)
dec
or
fistp
add
or
fisttp
popf
mov
test
push
(bad)
pop
jb
sbb
cmp
aaa
loop
sbb
fbld
inc
and
cmp
fisttp
push
sub
mov
(bad)
mov
xor
fiadd
jp
xor
sub
cli
loopne
inc
into
adc
lods
mov
stos
je
shl
pop
lods
or
and
inc
dec
test
pop
xor
jmp
mov
and
xchg
sub
into
test
stos
scas
in
inc
sub
aad
pop
retf
xor
xchg
or
test
movs
(bad)
in
mov
xor
xchg
jmp
add
cmp
(bad)
es
test
ja
xchg
outs
sar
cli
mov
inc
jp
or
(bad)
(bad)
adc
lds
popf
std
push
bsr
or
nop
(bad)
ss
clc
or
mov
aaa
xor
sbb
and
rcl
pop
dec
fisub
and
into
dec
out
adc
mov
mov
add
xor
sub
push
mov
test
scas
and
data16
arpl
ret
loopne
fs
push
jbe
jnp
aam
or
cmps
cli
jg
frstor
inc
retf
leave
xchg
jecxz
rcr
jmp
test
pusha
push
push
cmp
dec
add
mov
or
lods
jnp
or
sbb
std
shl
mul
(bad)
fucomi
fisttp
ja
in
arpl
push
repz
cmps
cmp
rcl
dec
dec
test
push
add
and
imul
inc
std
leave
lods
add
and
or
xchg
adc
inc
lods
push
xor
jg
mov
dec
pop
and
push
(bad)
inc
adc
nop
retf
push
cs
(bad)
xor
in
nop
push
fist
(bad)
daa
or
ret
fst
retf
mov
shl
in
mov
mov
out
arpl
sbb
dec
ficom
pushf
and
cmps
test
inc
push
in
push
mov
stc
adc
push
mov
and
pop
scas
mov
xchg
mov
xchg
cli
stos
dec
fidiv
xchg
xor
(bad)
adc
mov
clc
xor
xor
push
(bad)
sahf
add
sbb
test
out
jae
dec
push
inc
mov
pop
ds
out
or
jmp
adc
jb
stos
push
dec
push
adc
pop
xchg
loope
xor
fcmove
xor
mov
jg
shl
out
mov
test
jne
cmps
lods
push
adc
push
sub
push
pop
cwde
push
lods
fisttp
imul
movsx
repz
add
into
shl
ret
mov
bound
ins
push
fwait
ins
dec
popf
jnp
jmp
mov
add
shl
push
rol
adc
mov
retf
icebp
pop
scas
and
fdiv
dec
fdivr
inc
(bad)
movs
addr16
fwait
mov
outs
stc
repz
xchg
pop
das
xchg
sub
xor
addr16
js
push
jbe
xchg
fcom
mov
inc
mov
pop
sahf
rcr
or
add
cs
ror
push
push
adc
and
or
xchg
mov
std
nop
inc
fld
xchg
lahf
or
mov
enter
jge
jge
in
or
sbb
lock
ror
dec
adc
clc
mov
stc
ss
(bad)
push
push
pop
ins
inc
into
xchg
add
mov
std
in
mov
clc
or
cmp
fimul
mov
sub
push
cmp
jecxz
cmp
jecxz
push
mov
push
adc
or
xor
xor
out
jo
movs
call
gs
mov
mov
outs
xchg
jno
dec
mov
sbb
jo
dec
je
pushf
add
retf
pop
shl
fcmove
dec
jecxz
sbb
stos
inc
nop
mov
call
add
xchg
mov
mov
(bad)
fadd
in
push
aad
jae
sbb
mov
les
jo
dec
mov
stos
daa
loope
inc
lock
cmp
popa
inc
xchg
nop
fwait
sahf
imul
(bad)
pop
sub
push
(bad)
daa
cli
les
shl
cwde
sub
adc
mov
inc
cmc
sub
or
xchg
xadd
ss
retf
hlt
jo
jns
retf
std
adc
dec
icebp
push
mov
mov
mov
stos
mov
fsub
daa
and
lods
xor
add
push
scas
stos
data16
inc
cmp
jae
shr
call
retf
fs
mov
cld
adc
cdq
adc
xor
jno
sbb
ja
xchg
jge
inc
(bad)
iret
fnstsw
jecxz
or
scas
es
aas
sbb
jge
push
xchg
xor
xchg
mov
cmp
xchg
sbb
repz
xlat
pop
data16
inc
push
push
jle
es
xor
mov
sbb
mov
inc
pop
adc
aaa
mov
push
rcl
pop
sub
mov
sub
or
js
je
mov
js
jge
push
or
jbe
mov
mov
fisubr
push
inc
adc
bound
xchg
es
sub
call
inc
hlt
imul
cld
sub
rcl
xchg
(bad)
or
movs
call
adc
dec
lods
mov
and
inc
xchg
dec
fisttp
pop
loopne
les
repz
mov
jns
sub
xchg
or
in
shr
cmps
popa
ror
mov
js
pop
jge
xor
inc
retf
jo
push
in
dec
movs
mov
fcomp
push
mov
pop
loopne
xchg
push
aas
push
pop
xor
adc
dec
sbb
pop
dec
sahf
dec
adc
loop
dec
fsubr
pop
cmovle
pop
xchg
pop
in
inc
fs
mov
jl
aam
or
dec
add
inc
(bad)
and
mov
int3
ret
outs
push
xchg
test
ret
inc
imul
or
fstp
loopne
shl
ds
outs
and
aas
jmp
pop
sbb
xor
xor
daa
lock
add
aam
call
das
sub
push
shl
scas
retf
sub
into
popa
mov
dec
pusha
sub
and
push
adc
mov
mov
jmp
jo
or
inc
push
jo
in
push
jbe
cmp
(bad)
retf
out
sbb
cmp
mov
add
clc
cdq
lahf
test
std
stos
sbb
add
dec
in
mov
test
mov
pop
mov
xchg
push
out
cmp
add
rcl
lea
lods
into
dec
or
mov
cmp
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
or
dec
dec
cmp
scas
add
add
dec
dec
adc
add
add
add
add
add
add
sub
add
inc
add
or
add
push
add
add
adc
add
add
add
add
add
add
add
add
add
dec
dec
adc
add
add
add
add
dec
add
sbb
add
add
or
add
dec
dec
adc
add
add
add
add
jb
add
add
add
dec
dec
adc
add
add
add
add
or
add
add
add
add
add
adc
add
add
add
add
add
add
or
add
add
add
dec
dec
adc
add
add
add
add
add
add
sbb
add
add
add
dec
dec
adc
add
add
add
add
add
add
sub
add
add
add
dec
dec
adc
add
add
add
add
or
add
add
add
add
sub
push
add
add
add
add
add
sbb
mov
add
add
add
add
add
push
mov
add
add
push
add
add
push
add
xor
push
add
add
push
add
xor
push
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sysret
add
wbinvd
add
add
or
add
or
or
add
adc
add
adc
add
push
add
sbb
add
sbb
add
push
sbb
sbb
sbb
sbb
pop
add
push
add
push
add
xor
add
xor
add
cs
add
and
sub
add
xor
add
cmp
sub
sub
add
outs
xor
sub
add
ins
xor
das
pop
xor
xor
add
xor
cmp
add
aas
cmp
inc
inc
cmp
dec
inc
aas
add
inc
add
inc
add
xor
add
and
test
sbb
stos
push
adc
leave
adc
add
or
test
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
std
push
or
std
sbb
std
and
add
and
adc
std
xor
sbb
std
ds
add
dec
and
cld
push
and
sti
push
sub
cli
push
cs
pop
xor
repnz
xor
jmp
add
pop
cmp
ret
add
pop
cmp
mov
add
inc
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
bound
fs
add
add
add
push
add
push
imul
imul
imul
ins
outs
ins
add
outs
add
outs
add
jo
jb
jo
je
jno
jne
jno
js
jae
jp
jne
jl
js
jg
jp
or
add
cwde
add
fwait
test
jl
xchg
js
xchg
je
test
js
xchg
jge
mov
jg
mov
and
xchg
add
mov
xchg
add
sahf
cwde
add
pushf
xchg
add
cdq
xchg
add
xchg
pop
cwde
xchg
mov
call
add
add
mov
jns
mov
lahf
js
into
mov
jne
fistp
jns
jecxz
jbe
fbld
ins
add
lods
ins
add
scas
outs
add
scas
jbe
les
lea
mov
pushf
add
mov
stos
add
mov
mov
mov
mov
mov
mov
add
enter
retf
ret
add
iret
mov
retf
fcmove
add
fcmovnbe
add
fxch
add
fxch
add
fmul
add
fadd
add
fadd
add
fdivr
add
aad
add
aad
add
rol
add
into
rol
enter
(bad)
sti
ret
rol
mov
add
rcl
add
fcom
add
fstp
add
(bad)
add
loope
add
loop
add
in
add
in
add
out
add
out
add
out
add
out
add
call
call
add
jmp
jmp
out
in
add
lock
add
icebp
out
add
repnz
add
repnz
repz
add
hlt
repz
cmc
hlt
add
div
add
clc
test
stc
stc
stc
add
cli
cli
add
cli
cli
add
sti
sti
add
cld
cld
add
cld
cld
add
std
std
add
std
std
add
std
std
add
std
std
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
sub
sub
sub
and
and
and
and
and
and
and
add
xor
aad
xchg
push
add
xor
xor
sub
sldt
add
ins
out
fs
sub
int
aad
frstor
add
xor
adc
ja
adc
mov
fcmovu
loope
int
push
add
xor
xor
retf
fmulp
jbe
mov
jmp
js
add
pop
ins
shr
mov
pop
in
in
add
add
add
add
add
pop
jp
shl
pop
cmps
cmps
das
sbb
test
mov
or
xor
push
adc
in
rcl
cdq
mov
and
add
and
(bad)
loopne
adc
add
cmps
mov
and
add
add
add
and
mov
jmp
in
pop
add
jns
add
int
fadd
add
add
add
jecxz
rcr
push
push
mov
or
es
daa
sbb
add
add
or
pop
jp
mov
pop
push
sub
popa
and
lock
add
add
add
add
add
add
popa
jbe
add
fadd
add
add
push
and
pop
adc
or
push
pop
adc
xchg
loope
lock
add
add
add
pop
add
adc
lods
mov
and
mov
in
lock
add
ins
shl
mov
das
pop
stos
loop
lock
add
ins
fstp
int3
mov
mov
iret
fcmovu
in
lock
add
push
adc
adc
scas
mov
mov
mov
mov
lock
add
or
adc
adc
adc
adc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
and
lock
add
ss
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
lock
add
ss
ds
ds
ds
lahf
ds
or
lock
add
ss
ds
inc
push
retf
ds
ds
or
lock
add
ss
ds
lahf
dec
dec
mov
ds
or
lock
add
ss
ds
int3
ds
lahf
inc
mov
(bad)
ds
or
aad
rcl
(bad)
add
add
dec
ds
dec
ds
rcl
inc
ds
or
and
adc
adc
add
ss
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
or
adc
(bad)
add
add
or
or
or
or
or
or
or
or
or
or
or
rcl
fcomip
ins
add
add
(bad)
lock
(bad)
(bad)
adc
jo
add
add
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
add
add
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
inc
add
inc
inc
xor
push
inc
outs
jb
xor
xor
gs
call
jnp
inc
outs
jb
gs
arpl
jae
add
inc
outs
jb
gs
je
ins
gs
or
push
imul
ins
imul
addr16
or
imul
je
add
inc
outs
ins
outs
jb
or
inc
je
inc
popa
arpl
inc
outs
outs
je
inc
push
je
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outs
je
inc
outs
ins
outs
jb
or
ins
push
imul
js
or
outs
je
dec
imul
inc
outs
outs
je
dec
popa
ins
gs
or
popa
outs
jae
push
gs
data16
outs
je
push
je
ins
or
or
jns
jb
jbe
gs
push
dec
ins
fs
jb
popa
je
dec
jb
gs
or
inc
jb
popa
je
pop
or
jb
inc
jb
popa
je
or
dec
gs
outs
ja
pop
or
jb
dec
gs
outs
ja
or
ins
jae
gs
outs
arpl
pusha
or
je
imul
add
outs
add
xor
gs
add
push
outs
jo
add
push
dec
imul
inc
ins
imul
push
outs
jo
inc
outs
outs
je
inc
push
je
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outs
je
inc
outs
ins
outs
jb
or
ins
push
imul
js
or
outs
je
dec
imul
inc
outs
outs
je
dec
popa
ins
gs
pop
inc
outs
jne
imul
je
push
je
ins
or
or
jb
outs
je
outs
outs
je
or
jb
ins
ins
inc
popa
jb
pop
push
jae
inc
outs
je
or
dec
jb
gs
add
add
outs
add
xor
gs
add
push
outs
jo
pop
add
push
dec
imul
inc
ins
imul
push
outs
jo
inc
outs
outs
je
inc
push
je
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outs
je
inc
outs
ins
outs
jb
or
ins
push
imul
js
or
outs
je
dec
imul
inc
outs
outs
je
dec
popa
ins
gs
pop
inc
outs
jne
imul
je
push
je
ins
or
or
jb
outs
je
outs
outs
je
or
jb
ins
ins
inc
popa
jb
pop
push
jae
inc
outs
je
or
dec
jb
gs
add
add
outs
add
inc
add
gs
add
push
outs
jo
mov
fs
add
dec
imul
inc
ins
imul
push
outs
jo
push
arpl
ins
ins
inc
popa
jb
pop
push
jae
inc
outs
je
or
dec
jb
gs
add
add
push
push
popa
outs
gs
push
push
popa
outs
gs
xor
gs
push
add
push
outs
jo
sbb
add
push
imul
push
popa
bound
fs
add
add
jbe
jb
outs
arpl
je
push
gs
gs
outs
arpl
je
push
inc
arpl
or
outs
jb
add
adc
push
gs
gs
jns
gs
or
outs
inc
ins
outs
arpl
outs
or
inc
arpl
jo
pop
adc
jb
gs
outs
arpl
je
inc
arpl
jo
adc
inc
ins
imul
arpl
outs
arpl
push
gs
gs
outs
arpl
je
inc
ins
imul
arpl
outs
arpl
outs
inc
ins
imul
fs
pop
push
gs
gs
outs
arpl
je
inc
ins
imul
fs
imul
outs
jb
sbb
jb
gs
outs
arpl
je
inc
ins
imul
outs
jb
dec
gs
add
push
outs
jo
sbb
add
push
push
push
imul
ins
gs
pop
inc
outs
popa
bound
or
dec
outs
je
jb
popa
ins
add
pop
dec
outs
push
imul
imul
ins
gs
dec
gs
je
push
outs
jo
sbb
add
push
push
push
imul
ins
gs
pop
inc
outs
popa
bound
or
dec
outs
je
jb
popa
ins
add
pop
dec
outs
push
imul
imul
ins
gs
dec
gs
nop
add
push
outs
jo
sbb
add
push
push
push
imul
ins
gs
pop
inc
outs
popa
bound
or
dec
outs
je
jb
popa
ins
add
pop
dec
outs
push
imul
imul
ins
gs
dec
gs
lods
add
push
outs
jo
sbb
add
push
push
push
imul
ins
gs
pop
inc
outs
popa
bound
or
dec
outs
je
jb
popa
ins
add
pop
dec
outs
push
imul
imul
ins
gs
dec
gs
enter
outs
jo
sbb
add
or
jo
gs
gs
inc
je
push
gs
gs
add
fs
pop
xor
xor
xor
xor
outs
jb
push
add
xor
xor
inc
popa
outs
outs
gs
and
xor
and
ins
arpl
and
push
jb
push
popa
je
inc
je
pop
push
gs
gs
or
gs
popa
je
add
or
js
ins
imul
push
dec
outs
inc
jne
push
arpl
gs
push
inc
je
push
gs
gs
inc
jne
push
arpl
adc
inc
push
inc
imul
jns
sbb
jo
gs
gs
inc
push
inc
imul
jns
dec
gs
add
add
add
add
add
push
inc
je
push
gs
gs
inc
je
push
gs
gs
add
fs
pop
xor
xor
xor
xor
outs
jb
push
add
xor
inc
popa
outs
outs
gs
and
xor
and
ins
arpl
and
push
jb
push
popa
je
inc
je
pop
push
gs
gs
or
gs
popa
je
add
or
js
ins
imul
push
dec
outs
inc
jne
push
arpl
gs
push
inc
je
push
gs
gs
inc
jne
push
arpl
gs
gs
sbb
add
add
add
add
push
push
imul
ins
gs
pop
dec
outs
push
imul
imul
ins
gs
dec
gs
in
add
add
add
add
outs
je
outs
arpl
je
inc
ins
imul
imul
push
inc
arpl
or
inc
ins
imul
gs
or
inc
ins
outs
arpl
outs
addr16
outs
jb
add
adc
dec
outs
inc
outs
outs
outs
arpl
inc
ins
imul
imul
inc
outs
outs
outs
arpl
outs
inc
jb
outs
jb
adc
imul
imul
inc
jb
outs
jb
dec
gs
and
push
outs
jo
sbb
add
or
outs
je
outs
arpl
je
inc
ins
imul
imul
push
inc
arpl
or
inc
ins
imul
gs
or
inc
ins
outs
arpl
outs
addr16
outs
jb
add
dec
outs
inc
outs
outs
outs
arpl
inc
ins
imul
imul
inc
outs
outs
outs
arpl
outs
push
gs
fs
adc
imul
imul
push
gs
fs
dec
outs
inc
jb
outs
jb
adc
imul
imul
inc
jb
outs
jb
dec
gs
cmp
push
outs
jo
sbb
add
or
je
inc
ins
imul
inc
ins
imul
add
add
outs
jb
push
add
ins
je
pop
inc
push
je
or
outs
sub
sub
outs
je
outs
je
jns
gs
or
push
ins
popa
imul
dec
outs
push
gs
gs
inc
outs
outs
gs
adc
je
inc
ins
imul
gs
inc
outs
outs
gs
gs
cmp
add
add
add
add
outs
je
outs
arpl
je
inc
ins
imul
imul
push
inc
arpl
or
inc
ins
imul
gs
or
inc
ins
outs
arpl
outs
addr16
outs
jb
add
dec
outs
inc
outs
outs
outs
arpl
inc
ins
imul
imul
inc
outs
outs
outs
arpl
outs
push
gs
fs
adc
imul
imul
push
gs
fs
dec
outs
inc
jb
outs
jb
adc
imul
imul
inc
jb
outs
jb
dec
gs
pop
add
add
add
add
add
add
xor
push
inc
outs
jb
xor
xor
gs
nop
add
push
outs
jo
cmp
add
push
dec
imul
or
jb
gs
arpl
jae
or
dec
popa
js
ins
imul
jo
imul
popa
je
inc
outs
ins
outs
jb
or
inc
je
inc
popa
arpl
inc
outs
outs
je
inc
push
je
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outs
je
inc
outs
ins
outs
jb
or
ins
push
imul
js
or
outs
je
dec
imul
inc
outs
outs
je
dec
popa
ins
gs
or
popa
outs
jae
push
gs
data16
outs
je
push
je
ins
or
or
jb
push
je
ins
gs
or
push
je
jns
outs
push
outs
jo
dec
ins
fs
jb
popa
je
dec
jb
gs
or
jae
je
outs
outs
pop
pshufw
jae
je
jo
outs
je
jb
dec
outs
inc
ins
outs
jae
pop
or
jb
inc
ins
outs
jae
or
inc
jb
popa
je
pop
or
jb
inc
jb
popa
je
or
inc
gs
jb
jns
or
jb
inc
gs
jb
jns
dec
outs
dec
gs
outs
ja
pop
or
jb
dec
gs
outs
ja
or
ins
jae
gs
outs
arpl
pusha
or
je
imul
or
outs
jne
inc
outs
js
inc
jb
jne
inc
outs
js
add
gs
add
push
outs
jo
add
push
dec
imul
add
outs
pop
or
inc
ins
imul
jo
imul
arpl
jb
inc
outs
outs
je
inc
push
je
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outs
je
inc
outs
ins
outs
jb
or
ins
push
imul
js
or
outs
je
dec
imul
inc
outs
outs
je
dec
popa
ins
gs
pop
inc
outs
jne
imul
je
push
je
ins
or
or
jb
outs
je
outs
outs
je
or
dec
jb
gs
add
add
outs
add
xor
gs
add
push
outs
jo
syscall
push
imul
dec
imul
add
outs
pop
or
inc
ins
imul
popa
fs
outs
ins
jns
or
jb
ins
ins
inc
popa
jb
pop
or
push
gs
imul
bound
fs
add
add
push
push
push
popa
outs
gs
push
push
popa
outs
gs
xor
gs
add
push
outs
jo
sub
add
push
dec
imul
inc
ins
imul
inc
outs
je
outs
ins
or
dec
jb
gs
add
pop
push
inc
jne
je
outs
pop
inc
jne
je
outs
xor
gs
add
push
outs
jo
or
push
imul
inc
popa
jo
imul
outs
or
dec
jb
gs
add
dec
outs
inc
ins
imul
je
outs
outs
xor
imul
push
inc
jb
jne
inc
outs
js
inc
jb
jne
inc
outs
js
add
gs
add
push
outs
jo
cwde
add
push
dec
imul
add
outs
pop
or
inc
outs
je
outs
ins
pop
inc
popa
jo
imul
arpl
or
outs
outs
je
inc
push
je
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outs
je
inc
outs
ins
outs
jb
or
ins
push
imul
js
or
outs
je
dec
imul
inc
outs
outs
je
dec
popa
ins
gs
pop
inc
outs
jne
imul
je
push
je
ins
or
or
jb
outs
je
outs
outs
je
or
dec
jb
gs
add
add
outs
add
xor
gs
add
push
outs
jo
syscall
push
imul
dec
imul
add
outs
pop
or
inc
ins
imul
jb
ins
ins
inc
popa
jb
pop
or
push
gs
imul
bound
fs
add
dec
outs
dec
gs
outs
ja
pop
or
gs
outs
xor
jns
outs
ja
add
add
add
add
xor
push
inc
outs
jb
xor
xor
gs
out
add
add
add
inc
outs
jb
gs
je
ins
gs
push
bound
outs
outs
gs
inc
popa
jo
imul
je
imul
or
ins
imul
addr16
or
imul
je
add
add
jb
pop
arpl
popa
arpl
inc
outs
outs
je
inc
push
je
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outs
je
inc
outs
ins
outs
jb
or
ins
push
imul
js
or
outs
je
dec
imul
inc
outs
outs
je
dec
popa
ins
gs
or
popa
outs
jae
push
gs
data16
outs
je
push
je
ins
or
or
jb
push
je
ins
gs
or
push
je
jns
outs
push
outs
jo
dec
gs
jb
jbe
gs
push
dec
ins
fs
jb
popa
je
dec
jb
gs
or
outs
outs
ja
je
je
pop
or
dec
popa
js
ins
imul
inc
ins
outs
jae
pop
or
jb
inc
ins
outs
jae
or
inc
jb
popa
je
pop
or
jb
inc
jb
popa
je
or
inc
gs
jb
jns
or
jb
inc
gs
jb
jns
dec
outs
dec
gs
outs
ja
pop
or
jb
dec
gs
outs
ja
push
dec
outs
push
push
inc
outs
jb
push
push
imul
jb
outs
arpl
pusha
or
je
imul
add
outs
add
xor
gs
add
push
outs
jo
add
push
dec
imul
inc
ins
imul
inc
ins
imul
jb
gs
je
ins
gs
push
bound
outs
outs
gs
jb
pop
arpl
popa
arpl
inc
outs
outs
je
inc
push
je
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
outs
je
inc
outs
ins
outs
jb
push
arpl
ins
or
outs
je
dec
imul
inc
outs
outs
je
dec
popa
ins
gs
or
js
fs
jae
inc
outs
outs
je
push
je
ins
or
data16
outs
ins
add
push
popa
jb
outs
je
outs
outs
je
or
popa
fs
outs
ins
jns
or
dec
jb
gs
add
add
outs
add
xor
gs
add
push
outs
jo
push
add
push
dec
imul
add
outs
pop
or
inc
outs
je
outs
ins
or
jb
gs
je
ins
gs
push
bound
outs
outs
gs
jb
pop
arpl
popa
arpl
inc
outs
outs
je
inc
push
je
andps
dec
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
or
outs
je
inc
outs
ins
outs
jb
push
arpl
ins
or
outs
je
dec
imul
inc
outs
outs
je
dec
popa
ins
gs
or
js
fs
jae
inc
outs
outs
je
push
je
ins
or
data16
outs
ins
add
push
popa
jb
outs
je
outs
outs
je
or
dec
jb
gs
add
dec
outs
dec
gs
outs
ja
pop
or
gs
outs
xor
jns
outs
ja
add
push
push
push
imul
ins
gs
or
je
jb
popa
ins
add
outs
push
imul
imul
ins
gs
dec
gs
and
push
outs
jo
sbb
add
add
add
add
and
add
add
or
test
add
add
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
lea
push
call
and
push
push
mov
call
or
call
mov
mov
pop
pop
pop
leave
ret
mov
add
push
call
ret
push
mov
mov
push
test
je
mov
test
jne
xor
jmp
cmp
jne
xor
cmp
sete
jmp
push
push
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
inc
inc
inc
inc
test
jne
xor
jmp
sbb
sbb
pop
pop
test
jne
mov
push
push
call
pop
pop
pop
pop
ret
push
mov
push
mov
push
mov
mov
push
test
je
movsx
movsx
inc
cmp
je
cmp
je
push
call
mov
push
mov
call
pop
pop
mov
cmp
jne
jmp
test
je
mov
inc
test
jne
xor
cmp
sete
pop
pop
pop
pop
ret
xor
jmp
xor
cmp
je
inc
cmp
jne
test
jl
add
push
push
call
pop
test
pop
jne
dec
dec
test
jge
jmp
push
pop
jmp
push
mov
sub
push
cmp
jne
and
xor
lea
stos
stos
stos
stos
stos
lea
push
push
push
call
lea
push
push
call
push
call
mov
push
push
call
mov
push
push
push
push
push
push
push
push
push
call
push
push
call
push
call
lea
push
push
call
xor
jmp
push
push
push
push
call
pop
leave
ret
push
mov
push
and
lea
push
push
call
call
cmp
jne
push
call
push
call
xor
jmp
push
pop
leave
ret
push
mov
sub
push
mov
mov
and
xor
lea
stos
stos
stos
stos
stos
lea
push
push
push
call
mov
mov
mov
push
call
mov
push
call
push
call
mov
push
call
mov
push
push
push
push
push
push
mov
sub
cdq
sub
sar
push
mov
sub
cdq
sub
sar
push
push
push
push
push
call
mov
mov
mov
push
push
push
lea
push
call
test
je
mov
cmp
jne
cmp
jne
jmp
lea
push
call
lea
push
call
jmp
push
call
push
call
and
push
call
push
push
call
xor
pop
leave
ret
push
mov
push
push
push
lea
push
push
push
push
call
test
je
push
call
pop
mov
cmp
je
push
push
push
push
push
push
call
push
call
push
push
call
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
xor
or
repnz
inc
neg
dec
mov
std
repnz
inc
cmp
je
xor
jmp
mov
cld
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
cmp
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
push
mov
mov
pop
jmp
and
mov
mov
push
push
lea
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
push
push
push
push
mov
cmp
jle
movzx
push
push
call
pop
pop
jmp
movzx
mov
mov
and
test
je
inc
jmp
movzx
inc
cmp
mov
je
cmp
jne
movzx
inc
xor
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzx
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
push
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
mov
lea
cmp
ja
mov
movzx
jmp
mov
push
mov
sar
movzx
test
pop
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzx
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmp
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsx
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
mov
push
push
mov
mov
and
shr
test
jne
push
pop
jmp
cmp
jbe
push
mov
cmp
jae
mov
sub
cmp
jl
mov
shr
mov
neg
shl
add
movzx
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
movzx
add
add
add
add
dec
jne
test
je
movzx
add
inc
add
dec
jne
mov
mov
xor
mov
div
mov
mov
xor
div
cmp
mov
ja
pop
mov
shl
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
add
mov
cmp
jge
mov
add
mov
jmp
mov
mov
mov
shr
mov
mov
and
test
jne
mov
call
mov
cmp
jne
jmp
mov
or
mov
mov
and
test
je
mov
call
mov
cmp
jne
jmp
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
mov
call
mov
cmp
jne
jmp
mov
call
mov
cmp
jne
jmp
mov
and
shl
mov
or
mov
mov
and
add
mov
mov
jmp
mov
add
mov
mov
cmp
jg
mov
add
and
mov
xor
mov
mov
mov
mov
call
mov
add
mov
mov
mov
add
mov
mov
and
mov
jmp
jmp
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
cmp
jb
or
jmp
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
mov
push
push
call
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
ja
mov
cmp
jae
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmp
je
cmp
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
call
push
call
mov
cmp
jne
push
push
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
cmp
jne
push
push
push
push
call
call
mov
mov
mov
mov
mov
mov
imul
mov
add
mov
imul
sub
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
add
mov
mov
cmp
jae
mov
cmp
jae
mov
mov
mov
mov
mov
add
and
mov
jmp
mov
add
mov
mov
cmp
jae
mov
imul
add
mov
mov
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
cmp
je
cmp
jbe
push
push
push
push
call
mov
mov
add
mov
mov
shr
rep
mov
and
rep
mov
push
mov
push
mov
push
mov
push
mov
call
cmp
je
push
push
push
push
call
mov
push
mov
push
push
call
add
cmp
je
push
push
push
push
call
mov
push
mov
push
mov
push
call
mov
push
call
mov
push
call
push
call
call
push
call
add
mov
cmp
je
mov
call
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
call
pop
call
pop
mov
popa
pop
pop
call
call
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
daa
dec
inc
push
inc
dec
push
inc
dec
dec
push
inc
dec
inc
inc
daa
or
add
cs
js
add
add
nop
or
add
add
add
add
inc
add
loopne
fs
je
add
add
add
add
mov
adc
add
add
inc
add
loopne
je
jae
add
add
adc
add
mov
add
add
add
add
cs
popa
je
add
add
add
add
add
add
inc
add
loopne
imul
xor
add
rcr
add
add
add
cs
je
add
add
sbb
add
pop
pop
add
add
cs
jb
add
add
add
add
add
add
add
add
inc
add
loopne
jb
ins
outs
arpl
add
rol
add
add
add
loopne
je
js
add
add
add
add
add
lods
add
add
add
inc
add
loopne
jb
popa
je
add
cwde
or
add
pusha
and
add
add
add
add
add
cs
je
add
add
add
add
add
sbb
add
push
sbb
inc
add
loopne
add
xor
xor
call
pusha
call
out
pushf
pop
test
jnp
mov
inc
imul
addr16
fidivr
fnstsw
sub
imul
or
xchg
push
nop
add
mov
add
mov
add
sahf
push
push
sti
(bad)
(bad)
lock
out
pop
add
sub
iret
push
and
fs
in
popa
inc
mov
mov
mov
adc
rol
xor
fwait
adc
mul
push
popf
in
mov
mov
arpl
les
inc
pop
out
push
bound
fld
push
es
mov
pop
sub
mov
sub
push
js
mov
into
mov
pop
test
jecxz
jbe
xchg
jl
mov
jle
aam
mov
ss
cs
lahf
rcl
test
pop
dec
stos
fsubr
and
mov
add
aad
cld
std
push
fisttp
jecxz
gs
cmp
xor
movs
sub
std
jle
push
out
mov
push
and
icebp
nop
pushf
jle
push
mov
leave
stc
inc
(bad)
lea
mov
cmp
jmp
ror
jmp
ret
daa
mov
into
jo
rcl
enter
out
xchg
cmp
rcr
mov
in
and
push
test
ficom
xor
jno
mov
jae
aas
div
mov
out
dec
dec
mov
adc
push
retf
rol
sub
lds
neg
xor
dec
mov
aas
jp
jmp
stos
arpl
and
imul
cmp
daa
fiadd
adc
mov
scas
mov
inc
dec
dec
inc
pop
sahf
loope
xchg
push
cli
pop
clc
int3
lods
push
mov
pop
cmp
cmps
jo
loopne
fcmovne
inc
jae
data16
mov
lods
jmp
shl
cs
xchg
cs
mov
and
push
sub
and
lahf
mov
hlt
push
lods
stos
or
fdivr
lock
push
pop
or
(bad)
lock
jg
push
fsubr
push
xor
sub
scas
sti
and
pop
mov
pop
xor
fsub
repnz
xor
adc
shl
xor
retf
xor
popa
mov
movs
mov
hlt
mov
aaa
adc
movs
les
jae
push
cmc
rcr
cmps
sbb
loopne
and
jae
das
cld
mov
sbb
enter
shr
sub
popa
arpl
ficomp
ja
outs
xchg
or
xchg
push
mul
add
and
push
sbb
shl
sbb
iret
rol
loop
mul
push
repz
movs
movs
jne
push
rcr
cs
fcom
minps
mov
cs
mov
dec
jp
pop
icebp
pop
push
jmp
fcmovu
mov
mov
xchg
sub
adc
pop
lea
les
enter
fistp
sbb
jmp
imul
loope
fdivr
arpl
jg
sbb
retf
cmp
add
mov
std
nop
lea
xor
xor
add
pop
cmp
retf
mov
jmp
pop
mov
cli
mov
jns
rcl
pop
icebp
pop
xchg
cmps
ds
push
mov
gs
jg
shl
pop
lds
jo
ins
add
inc
bound
mov
lods
add
cmps
jns
add
bound
inc
mov
mov
leave
jg
jl
push
pop
outs
mov
mov
pop
dec
push
pop
ds
add
pop
fst
inc
mov
or
outs
xchg
ins
add
ins
aad
out
or
sub
pop
ja
adc
mov
loopne
sbb
pushf
leave
(bad)
nop
int
xor
sbb
sbb
pop
dec
and
push
mov
in
xor
jae
add
or
xchg
dec
mov
adc
lds
sbb
mov
dec
(bad)
jmp
icebp
repz
icebp
movs
daa
out
inc
shl
bound
movs
fimul
in
mov
stc
and
inc
jle
(bad)
retf
add
in
xchg
xchg
xchg
mov
adc
dec
call
cmp
int
dec
in
bound
xchg
xor
add
mov
in
lods
outs
sub
pop
loope
mov
pushf
add
sbb
pop
xor
test
pop
lock
jae
popa
cdq
lds
and
xor
push
pop
inc
ret
lods
dec
scas
inc
iret
mov
das
das
shr
(bad)
sbb
mov
(bad)
adc
cwde
push
sub
adc
retf
adc
pop
stos
push
xchg
dec
mov
in
adc
jbe
xchg
or
fadd
test
sahf
jp
call
inc
mov
fdiv
dec
dec
sub
movs
jp
js
jge
inc
xchg
push
push
dec
xchg
xchg
cs
mov
push
push
xor
push
and
or
mov
and
jecxz
xor
push
dec
dec
dec
int
mov
retf
(bad)
mov
xchg
pop
mov
xor
jbe
push
jge
mov
scas
aam
pop
dec
jo
ror
push
mov
push
int
lods
test
(bad)
xor
cmp
xor
jge
inc
adc
popa
xchg
leave
sar
sbb
je
and
mov
dec
lods
dec
adc
clc
or
fst
movs
mov
xor
cld
jle
mov
out
mov
ja
mov
repnz
push
and
loopne
adc
push
push
jg
sbb
mov
adc
call
mov
fucomp
xor
add
cdq
inc
ss
mov
lods
(bad)
fimul
popa
movs
lods
pop
fist
jnp
outs
pop
fwait
adc
jecxz
movs
retf
addr16
inc
jmp
ss
repnz
fdivr
mov
xchg
pop
lea
retf
mov
shr
out
push
mov
dec
fst
xor
mov
ss
fisub
in
xor
les
nop
mov
cmp
fs
pop
or
pop
imul
into
push
sub
(bad)
stc
cli
pop
into
xchg
pop
or
pop
inc
pop
pop
push
jmp
shr
sar
jp
test
in
mov
sbb
adc
jecxz
data16
jmp
clc
sub
xor
cld
call
cs
jecxz
aas
push
sub
mov
xchg
or
mov
pop
and
adc
mov
pushf
jb
push
mul
cmp
outs
mov
pusha
push
std
jp
fistp
loope
mov
and
inc
sti
dec
movs
jne
in
push
inc
es
cmp
fild
cwde
adc
xor
xlat
sub
or
dec
or
jg
sub
xor
fcomp
rol
push
repnz
ror
popa
call
sbb
icebp
dec
test
es
imul
fcom
(bad)
hlt
sbb
push
in
hlt
test
cmp
sub
das
call
cs
push
add
dec
(bad)
ficomp
mov
or
xchg
inc
sbb
std
pop
stc
jbe
fwait
ret
sbb
int
jg
sbb
in
inc
pop
sbb
ss
adc
pop
xchg
cmc
xor
neg
pop
int3
pop
repnz
ja
scas
xchg
cmc
push
mov
movs
xor
sub
sub
ds
sub
jmp
or
push
sbb
sub
test
pusha
mov
sub
mov
and
imul
scas
sub
mov
jle
scas
int3
mov
jecxz
sbb
adc
imul
dec
push
(bad)
inc
mov
push
dec
inc
jecxz
outs
inc
cmp
add
jl
ret
push
pop
loope
jnp
lea
mov
test
add
and
dec
stc
arpl
shl
imul
pusha
inc
and
push
test
or
cmps
pusha
jp
imul
sbb
inc
ret
or
inc
inc
xlat
dec
xchg
xchg
jns
push
call
jns
test
scas
sar
(bad)
outs
jge
ror
int3
rol
mov
mov
in
stos
mov
std
xchg
push
ds
add
mov
js
mov
rol
xor
push
iret
push
mov
sbb
mov
aas
mov
xor
fwait
aad
and
int3
stos
mov
scas
mov
sti
or
mov
mov
adc
fld
clc
fsub
mov
clc
pop
jg
add
push
pop
ret
push
mov
add
inc
xchg
jne
arpl
sub
cmp
imul
into
or
repz
or
xor
mov
ja
fldenv
ins
outs
cmps
pop
mov
mov
and
(bad)
push
test
das
mov
and
cmp
inc
(bad)
(bad)
push
rcr
sbb
pop
shl
sub
add
mov
std
test
je
push
and
mov
jecxz
test
in
test
push
lock
sub
fsub
aaa
icebp
ja
sub
(bad)
mov
xchg
sub
in
loope
imul
lea
test
(bad)
mov
mov
mov
add
je
idiv
pop
ficomp
push
shr
sbb
xlat
popa
pop
mov
mov
fisttp
cmps
clc
add
mov
in
cmp
push
xor
jge
fwait
push
mov
xchg
cmps
or
rcl
gs
cwde
or
rcl
mov
and
jno
sbb
jnp
outs
loopne
sub
test
and
jb
jno
inc
cmp
retf
imul
outs
not
jle
ret
retf
(bad)
sahf
jo
jle
xchg
mov
ror
jp
sti
mov
dec
std
xor
retf
test
and
addr16
ret
aaa
dec
shr
push
xchg
push
fmul
push
push
push
and
test
inc
leave
xchg
jmp
ins
mov
pop
or
or
fsubr
shl
mov
test
xlat
cmp
aaa
jle
mov
ret
lahf
xor
fwait
mov
enter
pop
inc
push
aas
clc
mov
jg
lods
repnz
es
cmp
sti
jo
jns
repnz
aam
daa
pusha
sti
fbstp
xor
outs
(bad)
or
les
in
mov
cld
xchg
pop
or
sbb
cwde
push
xlat
xor
pop
daa
mov
jle
or
or
(bad)
cmp
in
iret
ds
fisttp
push
xor
test
mov
mov
popa
jp
aaa
fstp
add
or
aad
mov
icebp
adc
jns
add
addr16
sbb
mov
rol
add
fsub
dec
fs
cmc
loope
mov
cmp
push
dec
cmps
aad
ror
jne
add
mov
das
xchg
popf
inc
aam
dec
mov
(bad)
(bad)
adc
sub
mov
dec
mov
sbb
xchg
sbb
loopne
out
and
repz
mov
sbb
inc
mov
pop
xchg
jle
push
push
jne
xor
mov
sub
cli
xchg
out
mov
mov
cmp
out
push
jne
cmc
push
fsubr
inc
cdq
pop
add
icebp
and
push
mov
mov
and
jmp
mov
jne
sbb
xor
or
mov
mov
test
xlat
ret
rol
mov
fisubr
push
shl
inc
fiadd
xor
jge
shr
outs
adc
xor
rcr
add
push
xchg
adc
jecxz
and
aaa
pushf
lods
fcmovne
cdq
outs
outs
mov
xor
ret
and
adc
add
add
lock
mov
inc
in
repz
or
mov
pusha
ja
xchg
hlt
dec
and
frstor
dec
(bad)
hlt
dec
mov
mov
mov
pop
inc
fiadd
ret
outs
and
(bad)
arpl
dec
ins
aaa
mov
hlt
lock
mov
icebp
(bad)
out
cmc
jno
repz
pop
sbb
test
pop
mov
dec
or
xor
call
sub
imul
dec
add
xor
outs
fs
jo
sbb
std
loope
mov
push
imul
pop
imul
out
outs
and
cwde
sbb
fidiv
or
pop
mov
or
retf
xchg
mov
neg
dec
into
jg
enter
push
out
scas
mov
lods
add
in
int
cmp
leave
jae
ficomp
cmp
add
pop
test
out
(bad)
outs
push
(bad)
in
jae
cmps
pop
js
orps
out
jo
cmp
cmp
pushf
(bad)
arpl
cli
pop
in
sbb
fbstp
jmp
loopne
jns
inc
ins
popf
dec
xor
xchg
pusha
daa
stos
ds
jnp
xsave
jne
in
loopne
cld
cmc
pop
sub
movs
daa
push
pop
cmp
ficom
fucomip
les
inc
enter
xchg
and
mov
test
test
rol
test
cmps
cmp
mov
mov
dec
xlat
test
mov
jmp
mov
pop
fist
inc
in
aam
xchg
xchg
in
inc
(bad)
cwde
outs
xlat
fwait
shr
sbb
cmp
or
cwde
sbb
mov
cli
lods
cmp
mov
mov
test
push
lock
push
and
(bad)
(bad)
loope
mov
add
mov
ret
not
cmps
xor
scas
cs
push
popf
jnp
mov
xchg
xlat
cmp
adc
pop
out
xlat
pop
test
test
inc
dec
inc
dec
(bad)
dec
xor
addr16
jns
out
add
loope
dec
xlat
adc
mov
mov
sar
jnp
cmp
in
cmps
scas
mov
jne
jmp
or
shl
dec
xchg
inc
mov
push
movs
xor
arpl
pop
imul
sbb
jecxz
dec
inc
mov
mov
jne
mov
push
xchg
or
adc
stc
xlat
mov
jne
push
or
call
adc
jp
mov
icebp
cwde
push
in
jae
aaa
std
in
jl
xchg
shl
or
fs
(bad)
leave
cmp
out
imul
ins
sub
sbb
jnp
aad
test
cwde
pop
jno
pushf
mov
xchg
add
and
out
scas
mov
xor
bound
and
sbb
push
ins
out
(bad)
call
cmps
cmp
mov
jbe
pushf
(bad)
jecxz
add
sbb
(bad)
xor
cmc
xor
lods
push
jae
xchg
xchg
test
push
inc
cmp
mov
lahf
and
dec
pop
ret
mul
xchg
leave
xchg
mov
xor
pop
cld
mov
rdmsr
mov
stc
dec
movs
stos
jae
or
aaa
dec
int
pop
movs
pop
add
push
in
mov
xchg
std
fs
hlt
in
pop
(bad)
and
dec
pop
xchg
popf
nop
xchg
lea
sti
test
mov
jbe
fisttp
js
jne
xchg
xor
dec
xchg
js
nop
lods
cmc
cmp
test
jecxz
ds
je
pop
xchg
aad
jae
out
or
push
cmps
ins
xchg
in
jecxz
push
adc
xchg
rcl
jp
cdq
jne
push
out
and
mov
jnp
mov
aad
sbb
mov
lock
(bad)
pop
inc
loopne
loop
fbld
ss
mov
mov
xor
cmp
xchg
push
and
jo
inc
inc
movs
scas
adc
stos
jne
test
pop
xor
push
xchg
(bad)
shr
xchg
iret
retf
mov
(bad)
jp
lods
xchg
(bad)
dec
dec
jnp
cmp
and
shr
addr16
inc
jns
mov
cli
sahf
push
out
lock
les
lods
sub
sti
fistp
inc
cwde
mov
lock
jne
mov
popa
push
xchg
retf
add
mov
pop
daa
inc
loopne
inc
int
xchg
jns
and
or
pushfw
mov
lods
jno
sbb
jmp
aas
mov
daa
fsub
cmp
ror
mov
(bad)
sti
xor
into
or
(bad)
js
mov
or
shl
jecxz
inc
movs
jl
adc
(bad)
pop
and
and
or
xor
out
(bad)
xchg
popf
jg
inc
xor
and
popf
sbb
aaa
ins
dec
push
popa
adc
mov
push
sub
push
out
sub
int
neg
repnz
push
fld
fs
xor
es
int3
jbe
push
push
inc
ds
movs
out
push
lock
stc
cld
sbb
int
jl
jno
imul
fcmovnu
mov
pop
cmc
jmp
and
and
(bad)
and
add
faddp
rcr
(bad)
adc
int
add
(bad)
pusha
jo
in
mov
add
out
aad
mov
into
mov
pop
pop
fs
in
jb
push
adc
push
sbb
inc
sbb
or
add
mov
jnp
and
jne
cmp
nop
mov
lock
xchg
xor
and
jo
movs
pushf
mov
lock
fs
push
jns
and
dec
mov
pop
add
cmp
mov
aad
sbb
or
mov
jmp
mov
sbb
rcr
out
mov
shl
mov
js
dec
push
dec
sub
scas
mov
xor
bound
mov
jl
push
je
nop
push
inc
ret
iret
push
hlt
imul
rol
fistp
push
mov
mov
daa
xor
push
hlt
push
mov
jmp
pop
pop
push
dec
xchg
fbld
sub
mov
jp
cmp
sti
cdq
mov
xor
push
test
xor
dec
jbe
jp
cmp
sub
or
call
sar
pusha
call
imul
and
pop
pusha
scas
cmp
(bad)
enter
push
mov
push
sbb
and
les
sub
rcr
push
sbb
call
push
sub
or
xchg
test
sbb
inc
retf
sbb
mov
call
mov
xchg
inc
mov
in
xor
shr
add
lds
or
jp
inc
lods
fdiv
push
pop
aas
jne
clc
adc
lahf
sbb
pop
mul
outs
loop
int3
xchg
movs
test
sub
push
pop
xchg
outs
mov
aad
(bad)
sub
aam
cmp
add
imul
lahf
js
lock
ins
(bad)
enter
pop
mov
outs
pushf
jl
and
cmps
retf
or
mov
enter
les
xchg
inc
cmp
cmp
std
mov
hlt
mov
daa
ror
mov
and
fdivr
cld
mov
mov
cmps
adc
dec
dec
xor
dec
ds
pop
add
rol
es
cs
mov
sbb
pop
cmp
imul
xchg
test
add
mov
ror
fdiv
rcr
leave
add
mov
jae
arpl
cmc
xor
mov
test
or
outs
cmp
inc
popa
loope
sub
fs
out
dec
dec
aad
por
fisubr
push
inc
lea
call
sub
inc
and
and
mov
sbb
or
sahf
cmp
shl
aad
ret
jno
std
loope
xor
or
outs
call
inc
(bad)
out
add
adc
mov
ffreep
sbb
std
or
shr
add
xor
dec
fidiv
inc
inc
sti
retf
jmp
and
loop
adc
mov
loope
int
xor
jo
rol
xchg
jecxz
cmp
jne
inc
mov
mov
call
xor
dec
fild
xchg
retf
lahf
mov
xor
sub
je
inc
das
mov
cmps
sub
lahf
shl
push
or
out
or
xor
lock
fs
outs
add
fistp
fild
fldenv
and
jns
and
into
sub
xchg
sbb
dec
popa
pop
xor
in
idiv
inc
xor
sbb
mov
repz
mov
inc
inc
cdq
add
hlt
dec
ds
lahf
test
bound
loopne
mov
imul
ffreep
ret
ret
xchg
fxch
call
or
push
mov
rol
cmc
nop
xchg
out
aam
xor
dec
int
into
add
mov
cmp
fwait
cld
mov
adc
js
in
cs
mov
cli
ja
(bad)
mov
add
imul
sub
jmp
inc
cmc
mov
and
or
rol
test
es
pop
dec
hlt
test
jl
inc
xor
pop
cmp
adc
push
and
mov
push
jae
ds
fistp
xor
cmp
add
jae
aas
inc
ret
sub
push
sahf
pop
push
dec
cs
stos
push
hlt
xchg
sub
add
cmp
movs
push
sti
sti
mov
mov
test
rol
sub
push
push
sbb
cmp
add
out
shl
adc
ret
inc
and
jp
sbb
cmps
jl
call
rcl
or
mov
aaa
push
gs
(bad)
test
scas
dec
cmc
ins
sbb
and
and
adc
sbb
call
out
pop
inc
jnp
fidiv
cmp
add
push
mov
stos
mov
mov
and
sub
or
pop
inc
cmps
mov
push
pop
jae
test
push
jge
int3
enter
jne
mov
add
xlat
jne
mov
jp
cmp
(bad)
stc
es
jecxz
mov
inc
cmp
js
jmp
hlt
in
daa
enter
pusha
cmp
and
lea
test
inc
jne
adc
xchg
cld
(bad)
lods
jb
or
jo
pop
inc
retf
clc
lods
mov
mov
ss
inc
pop
mov
jb
mov
inc
fsubr
dec
pop
or
pop
add
fs
fst
inc
push
push
mov
push
icebp
mov
xchg
inc
push
pop
sbb
inc
pop
aam
jl
adc
dec
in
push
jmp
or
mov
scas
imul
mov
add
or
sub
and
lds
dec
sub
xor
fdiv
or
nop
pop
pop
int3
mov
cld
lahf
imul
sti
jns
xor
sar
hlt
mov
sbb
pop
xor
sbb
shr
add
sar
mov
mov
enter
cmps
gs
retf
add
xor
mov
inc
inc
dec
ror
lds
dec
jg
mov
cdq
dec
imul
or
addr16
std
enter
mov
xor
stos
icebp
push
out
imul
std
ss
add
dec
pop
das
lock
xor
arpl
das
adc
nop
jmp
icebp
in
push
loop
pop
loope
pop
out
scas
sahf
out
(bad)
out
leave
lahf
out
fild
fdivr
pop
pop
jae
out
popf
xchg
popf
mov
mov
test
fcomp
rol
inc
mov
int3
(bad)
jns
sbb
popa
mov
xchg
mov
ja
das
clc
test
stos
scas
push
ret
jae
arpl
pop
call
mov
popf
pop
cmp
in
sti
dec
fld
fild
adc
scas
hlt
adc
pop
add
xchg
and
pop
jl
cmp
dec
add
cvttps2pi
or
lods
mov
call
lods
add
ins
sbb
and
out
das
aad
and
rcl
dec
jbe
call
cmp
cmp
pop
shl
inc
jnp
lds
jecxz
std
inc
cmp
adc
arpl
jge
in
imul
cmp
fwait
repz
xchg
test
xor
sub
int3
add
push
cld
movs
or
and
sbb
mov
popa
dec
pop
es
xor
sub
cs
(bad)
imul
push
out
xchg
sahf
add
pop
push
dec
dec
addr16
sub
or
adc
xchg
jg
xchg
(bad)
sub
pop
dec
inc
test
cmp
inc
fadd
ret
inc
mov
lahf
test
xchg
jmp
mov
enter
sub
add
mov
adc
adc
stos
xor
(bad)
in
push
mov
xchg
sbb
add
test
dec
daa
shr
pop
xchg
and
int3
ins
jo
xor
or
stc
ins
call
rcr
pop
je
xchg
jecxz
mov
int
ins
mov
push
pop
test
inc
mov
mov
add
out
mov
sbb
(bad)
and
xor
int
std
sub
shl
sbb
mov
fwait
push
pop
(bad)
outs
xor
jmp
push
or
pop
fs
and
xchg
pop
call
sar
sub
gs
mov
daa
sar
icebp
mov
mov
icebp
push
lea
xchg
fs
js
push
adc
xor
pop
retf
and
xchg
jbe
xlat
daa
push
pop
fwait
and
add
mov
mov
das
movs
push
xor
pop
inc
retf
shl
mov
xchg
outs
dec
mov
push
mov
or
fadd
outs
cmp
push
push
jnp
rol
bound
xchg
jle
jmp
ds
xchg
or
inc
out
out
daa
movs
dec
imul
movs
cmp
daa
(bad)
(bad)
nop
fsubr
pusha
jnp
push
and
push
ins
lods
pop
retf
aad
dec
mov
out
fdivr
repnz
and
jns
adc
pop
js
ret
call
sub
dec
jnp
scas
push
dec
sbb
dec
aaa
mov
lds
(bad)
aas
(bad)
hlt
addr16
xchg
sti
sbb
fwait
test
jae
push
jle
mov
mov
fsubr
shr
rol
mov
(bad)
jae
add
mov
bound
or
scas
push
sub
or
sub
or
cmps
sbb
pushf
shl
mov
into
jge
mov
push
rep
mov
or
mov
cmps
clc
add
mov
popa
rcr
sbb
and
sbb
icebp
ror
mov
mov
int
loop
imul
inc
pop
in
movs
xor
cmp
mov
cwde
push
(bad)
mov
dec
mov
adc
fwait
jle
aas
retf
push
jae
adc
popa
mov
adc
jb
sbb
push
cdq
push
mov
pop
fs
and
mov
sbb
sbb
jo
cmc
sbb
dec
lahf
sub
mov
mov
adc
ret
fbld
fwait
lods
jg
into
and
movs
aaa
cmp
and
pop
jns
add
dec
adc
and
xlat
in
mov
or
ins
out
add
cmp
fst
add
adc
bnd
jne
aas
xchg
sbb
mov
cs
sub
pop
shl
shl
pop
add
push
nop
out
cli
sbb
stos
retf
adc
icebp
and
xchg
jb
mov
sub
scas
test
test
push
jno
xor
sub
sbb
xlat
pushf
dec
retf
inc
or
mov
push
(bad)
jmp
sub
clc
je
dec
stos
fcmovnb
adc
or
call
jbe
cmps
mov
adc
fsubr
xor
lock
inc
test
jmp
sub
inc
lods
xor
out
and
push
in
int
(bad)
xchg
or
inc
cmp
(bad)
lea
not
inc
stos
mov
pusha
lea
and
pop
mov
inc
adc
popa
pop
push
jns
sar
push
sbb
je
sub
inc
arpl
jbe
out
retf
push
icebp
rcr
in
iret
aaa
mov
fcomp
xor
adc
ror
or
mov
or
mov
outs
sbb
retf
daa
xchg
push
fisttp
and
cmp
dec
hlt
test
aad
jbe
cld
addr16
test
inc
mov
mov
out
fwait
in
jno
inc
push
int3
cmps
shr
jp
jmp
(bad)
add
xor
les
mov
dec
(bad)
in
pop
mov
or
push
pop
pusha
rcr
cmp
pop
dec
hlt
je
push
cmp
lds
out
cmp
inc
daa
or
call
and
ds
sub
mov
mov
dec
shr
pop
push
(bad)
xor
sub
int3
and
mov
(bad)
sub
ins
dec
xchg
dec
stos
jmp
pop
loopne
sbb
hlt
inc
cs
imul
add
das
jp
mov
lods
xchg
push
push
ins
jl
mov
not
retf
and
dec
ja
and
sbb
(bad)
shl
cmc
outs
pushf
xor
retf
mov
(bad)
sahf
fst
das
cmps
cmp
movs
sub
push
sti
retf
and
cmc
(bad)
cwde
cmc
fild
push
fmul
jnp
(bad)
daa
or
dec
xor
mov
push
xchg
cmp
imul
(bad)
arpl
pop
sbb
int
sub
cmp
lock
mov
push
add
in
dec
push
arpl
(bad)
dec
into
jnp
repnz
mov
das
(bad)
mov
inc
cli
xor
(bad)
fld
mov
jmp
pop
das
jmp
cwde
mov
pop
dec
pusha
sbb
inc
xor
clc
mov
(bad)
mov
jge
fldcw
icebp
xor
hlt
xchg
xchg
sbb
dec
scas
ss
aaa
les
push
push
nop
push
test
retf
jbe
test
xchg
jmp
and
adc
(bad)
test
enter
jmp
add
or
lods
cmp
out
push
aam
xchg
push
aas
pushf
(bad)
dec
mov
xchg
mov
out
inc
adc
das
mov
dec
pop
mov
sbb
int3
call
outs
jmp
mov
jae
in
dec
cmp
mov
pop
jl
int
jo
cmovo
push
fstp
dec
cmp
clc
lods
xchg
inc
jnp
cmp
out
(bad)
mov
jno
call
sub
add
lds
(bad)
ja
push
mov
mov
jp
mov
scas
xor
push
aas
or
jge
adc
loope
mov
pop
shl
mov
xchg
fcmovnb
cmp
fisttp
push
cmp
push
mov
xchg
rcr
mov
popa
dec
fld
jns
pop
mov
xchg
dec
mov
add
cmp
fmul
repnz
or
mov
pop
ror
repnz
mov
pushf
pop
jmp
pop
jp
bound
mov
cs
sbb
das
pusha
aaa
push
clc
and
lea
fwait
inc
lods
dec
push
pop
mov
or
in
addr16
in
je
outs
mov
loopne
arpl
adc
mov
jecxz
pop
fadd
push
mov
mov
shl
mov
push
cdq
repnz
leave
push
fidivr
push
pop
aam
xchg
pushf
add
pop
movs
xchg
retf
xchg
xchg
adc
dec
scas
sbb
dec
test
cdq
(bad)
mov
popa
imul
xlat
or
or
sub
(bad)
shl
sub
xchg
gs
pop
nop
into
movs
sub
or
jno
shr
inc
sub
cdq
(bad)
pop
adc
mov
cwde
push
movs
adc
icebp
sar
rcl
ror
sti
aad
cdq
xchg
ss
shl
pushf
sbb
in
in
arpl
and
(bad)
cmc
add
mov
adc
jo
xchg
push
gs
jle
sbb
dec
mov
mov
push
mov
out
mov
fwait
das
xchg
push
push
add
jl
jle
sub
pop
xchg
clc
sub
or
or
mov
inc
xchg
clc
ja
dec
in
xchg
mov
pop
mov
push
clc
imul
mov
jb
test
xor
cli
or
mov
(bad)
jmp
jne
pop
(bad)
repz
push
push
xor
adc
jmp
cld
jp
bound
jno
xor
js
test
add
pushf
sub
das
jmp
push
(bad)
add
out
push
retf
imul
rcl
mov
test
inc
mov
pop
jecxz
jo
mov
popa
shr
aaa
(bad)
sbb
cs
jecxz
int3
jno
and
test
dec
mov
iret
mov
je
pop
add
push
add
out
div
fidiv
mov
leave
push
push
popaw
pop
repz
arpl
std
addr16
mov
out
int3
push
xlat
sub
sbb
(bad)
mov
inc
jecxz
hlt
mov
push
jl
adc
and
movs
jge
pop
(bad)
rcl
div
std
sti
test
jge
sub
retf
xchg
push
sbb
sbb
cmp
jp
mov
add
pop
stc
int3
inc
cmp
mov
lahf
leave
add
outs
arpl
xchg
xchg
and
ss
cwde
fistp
xchg
push
cmp
fsub
pop
cmc
iret
(bad)
retf
out
xlat
(bad)
mov
jae
int3
fld
jbe
and
gs
cmp
xor
ret
popf
mov
jmp
aaa
outs
mov
or
mov
mov
(bad)
push
mov
push
jge
mov
pusha
jl
add
cmp
mov
iret
and
and
ins
dec
test
mov
add
outs
int3
movs
lock
(bad)
and
jmp
in
mov
arpl
cmp
fwait
xor
xchg
test
loop
stc
stos
inc
mov
fisttp
jns
fisubr
in
test
pop
ret
jge
dec
pop
call
call
inc
inc
aaa
mov
adc
movs
mov
jl
xor
mov
dec
pop
pop
sbb
inc
hlt
nop
(bad)
cmp
pop
test
sbb
dec
mov
sub
mov
mov
out
sti
pop
scas
push
outs
loop
and
or
adc
push
cli
movs
into
dec
inc
and
mov
out
test
mov
or
shl
jp
adc
push
ficomp
das
mov
mov
pop
sbb
(bad)
adc
iret
pop
movs
jno
test
mov
mov
in
dec
test
dec
in
dec
js
out
es
xor
or
pop
xor
popa
mov
aad
iret
push
pop
inc
outs
imul
in
or
mov
sti
cld
dec
jecxz
xchg
and
cmp
push
shl
push
add
pop
iret
xchg
jmp
mov
(bad)
cmp
pop
mov
outs
dec
sbb
xchg
mov
fmul
dec
xchg
cdq
mov
cmp
or
in
and
scas
in
add
mov
and
push
sar
xor
dec
es
adc
loope
mov
les
or
cs
shl
and
inc
xor
and
sbb
repz
clc
xor
retf
lods
std
loopne
jo
adc
mov
mov
test
xor
ins
(bad)
out
cmp
inc
mov
jb
add
repz
bound
xor
mov
push
sar
or
les
ss
jmp
adc
pop
pop
les
and
bound
arpl
mov
lock
fnstenv
fnstenv
xchg
cdq
cs
(bad)
and
mov
cmp
imul
loope
xchg
mov
mov
sbb
mov
sqrtps
ins
das
lods
mov
xor
loop
xchg
test
popf
arpl
mov
mov
das
gs
call
les
out
and
mov
call
cld
aad
es
ror
sbb
jmp
jae
das
cmp
xchg
sbb
hlt
jno
pushf
outs
jecxz
jne
pop
jnp
jmp
scas
lods
jnp
fs
xor
xchg
lds
movs
push
pop
pop
addr16
lods
(bad)
mov
sub
call
or
mov
sub
sbb
rcl
in
lahf
sub
or
leave
mov
dec
or
scas
xchg
or
bound
mov
retf
push
repnz
pop
pop
pop
bound
dec
inc
mov
xchg
popa
push
aam
pop
outs
or
cmps
push
ror
or
fwait
xchg
ins
sub
jmp
out
mov
mov
call
icebp
not
lock
and
jns
or
pop
mov
sahf
or
sub
in
ror
and
in
test
or
ret
cmc
sub
dec
repnz
dec
dec
dec
movs
add
fidiv
inc
sub
aas
inc
pusha
mov
push
cmp
mov
xlat
lea
and
scas
ror
ret
xchg
je
push
dec
popa
ret
cs
jle
and
mov
cmp
jp
je
push
cmp
ficomp
inc
pop
into
cld
cmp
xor
fnstcw
dec
and
mov
xor
mov
jecxz
xor
cmps
jno
mov
sbb
das
je
mov
ss
mov
mov
or
jne
sub
lods
jge
or
inc
fs
dec
inc
pop
dec
mov
scas
frstor
cmp
pushf
lods
hlt
add
es
mov
push
test
jnp
sbb
les
mov
loop
mov
cmp
cld
pop
inc
cmp
pop
or
stos
test
or
jmp
adc
or
mul
jp
retf
add
idiv
mov
out
xchg
mov
lds
(bad)
(bad)
mov
add
inc
ds
(bad)
out
rcl
pop
scas
xchg
shl
loope
dec
push
cmc
inc
shr
adc
sbb
xchg
add
std
sub
in
test
nop
dec
pop
das
xor
stos
int3
mov
ret
mov
rcr
push
adc
addr16
(bad)
add
cmps
mov
dec
dec
(bad)
push
in
div
ja
out
jo
add
in
adc
xlat
adc
mov
sub
inc
in
add
icebp
add
js
sub
ror
jl
pop
xchg
xor
stos
add
or
fldenv
fisub
test
and
sar
or
inc
push
outs
pop
add
ss
dec
cmps
(bad)
mov
adc
ins
xchg
in
stos
lahf
pop
enter
adc
push
push
inc
mov
mov
(bad)
cmps
pop
dec
retf
out
in
jle
ds
and
or
nop
out
fild
scas
sbb
xchg
inc
out
xchg
inc
std
or
stos
and
(bad)
(bad)
popa
aaa
dec
sub
inc
cmp
adc
push
push
add
dec
sub
cmp
ret
xchg
jle
xor
cmp
and
int
mov
xchg
ret
fld
mov
mov
xchg
stos
test
mov
cmp
lea
cmp
mov
loopne
adc
cld
lea
sub
fwait
into
ds
push
pop
call
mov
sbb
cli
adc
std
cwde
xor
mov
aad
fs
mov
out
data16
or
fcmovnu
push
daa
sub
or
cmp
popf
loop
pop
jo
adc
std
mov
mov
int
jg
popf
pop
push
js
pop
repz
enter
lock
xor
push
call
call
add
mov
mov
xchg
fisttp
je
mov
std
test
add
shr
xor
jo
or
sub
leave
jecxz
jo
inc
sbb
mul
call
(bad)
pushf
sbb
fiadd
jg
mov
retf
inc
ds
scas
pop
push
pop
out
or
jp
mov
sub
retf
out
inc
cmp
outs
rcr
mov
adc
adc
rep
enter
call
outs
or
jge
mov
int3
pop
in
leave
gs
in
cli
(bad)
add
mov
les
mov
xor
shr
aad
mov
cmp
in
pop
das
imul
jbe
dec
inc
inc
sbb
mov
pusha
mov
pop
and
push
xchg
stos
enter
pop
daa
bound
push
adc
sub
sar
pop
push
clc
jle
js
xor
ins
outs
stc
push
push
aaa
xor
dec
and
dec
jl
add
ret
(bad)
ins
lea
lods
sbb
jmp
mov
movs
xor
test
xchg
inc
mov
(bad)
popa
sbb
test
add
jmp
stos
imul
mov
sbb
stc
inc
jecxz
fcmovu
sub
ret
retf
lods
cmp
ins
pusha
adc
dec
push
push
popa
(bad)
jnp
(bad)
ffree
jae
mov
jae
out
aad
(bad)
mov
je
pop
or
cmps
lods
pop
jge
(bad)
hlt
test
cmc
sbb
add
mov
mov
pop
add
clc
mov
and
ins
fild
retf
mov
fcomip
rol
jmp
mov
xchg
pop
dec
fnsave
lahf
cdq
or
test
xchg
sub
pop
jge
pop
mov
mov
scas
aaa
arpl
push
push
ror
nop
jne
retf
push
push
js
daa
call
jp
movs
(bad)
stos
rep
test
mov
mov
xchg
mov
(bad)
dec
xchg
xchg
test
mov
scas
(bad)
test
jle
stos
(bad)
repnz
movlps
xor
out
sbb
add
adc
ins
(bad)
aad
stc
jg
adc
rol
leave
fild
sar
aas
adc
pop
sbb
jb
retf
sti
mov
pusha
aad
movs
cmps
pop
cli
stos
mov
xor
mov
sbb
push
mov
ins
and
ins
sbb
stos
jne
and
ja
out
mov
imul
sti
into
lods
push
xchg
(bad)
leave
fs
retf
mov
in
pop
mov
mov
imul
stos
pusha
xrelease
out
fcmovnb
dec
mov
ins
(bad)
xor
(bad)
sub
shr
add
ror
xor
and
fisttp
in
dec
mov
dec
dec
push
ficom
cmp
cmps
movs
fs
imul
cmp
aad
and
mov
or
int
mov
xor
add
outs
scas
dec
fbstp
inc
imul
orps
enter
loop
imul
or
pop
int3
pop
arpl
repnz
fdivr
call
and
sti
push
pop
pop
push
(bad)
nop
add
popa
ffreep
(bad)
pop
mov
out
jmp
(bad)
pop
mov
aas
push
repz
shl
rcr
adc
dec
(bad)
pop
add
retf
and
or
(bad)
aad
adc
sbb
(bad)
sar
cli
jbe
jg
mov
inc
and
mov
mov
pop
mov
iret
mov
push
xchg
inc
push
ds
lock
adc
lahf
inc
jmp
fs
or
iret
mov
adc
icebp
(bad)
loopne
mov
retf
xor
jmp
cmps
and
popf
(bad)
test
sub
sbb
and
push
clc
ins
inc
mov
xchg
into
xor
in
iret
stos
xor
lahf
adc
loop
ficom
push
sbb
adc
aaa
enter
add
sbb
test
pop
adc
pop
ja
xchg
cdq
xor
dec
add
jle
imul
cmp
fwait
inc
call
xchg
cmp
mov
ret
stos
pop
or
jg
inc
xor
call
inc
int3
dec
ja
ins
and
adc
or
(bad)
and
adc
sbb
sbb
sbb
ins
fiadd
mov
shr
mov
js
cli
jmp
scas
sub
sbb
out
push
sub
inc
mov
xchg
mov
clc
daa
in
(bad)
cmc
pop
jb
sbb
test
sahf
push
jbe
je
outs
mov
fcmovnb
or
ret
mov
cmp
neg
lahf
push
fisttp
test
and
dec
shl
aas
aas
cmp
pop
repz
(bad)
fs
das
push
or
sub
adc
push
pop
call
cs
loope
mov
out
(bad)
std
cmps
in
pop
add
stc
movs
pop
mov
lock
and
bound
ret
xchg
lods
xchg
repnz
nop
and
mov
dec
sbb
push
inc
cmp
push
add
and
mov
and
js
loope
dec
xchg
test
xchg
clc
lds
xchg
test
inc
jecxz
jle
movs
mov
jae
adc
sbb
dec
jne
mov
ret
daa
pop
js
das
in
ss
es
jmp
push
cmps
fwait
cmp
pusha
mov
rol
pop
mov
xchg
movs
repz
out
in
enter
(bad)
fnstcw
das
inc
sub
inc
pop
dec
movs
and
sahf
mov
push
xchg
push
cmp
mov
mov
aam
xchg
mov
icebp
movs
pop
push
mov
popa
jns
mov
mov
push
imul
clc
and
xor
or
mov
fs
mov
mov
push
cmp
in
jle
jmp
inc
in
inc
outs
jmp
into
stc
ins
pop
test
and
adc
in
test
xor
or
aad
sti
aad
cli
repnz
pop
adc
(bad)
dec
in
jb
fst
stos
(bad)
loope
mov
xchg
aad
popa
daa
sub
(bad)
fsub
popa
pusha
(bad)
int
lds
lods
popf
test
mov
and
cmp
les
dec
mov
cdq
movs
or
xor
leave
sub
cld
pushf
pop
sbb
loope
ret
inc
ret
jmp
xchg
(bad)
mov
add
cld
push
ror
mov
fwait
int3
xor
fild
push
cmp
pop
mov
dec
jge
mov
jmp
mov
rcr
jge
leave
scas
jge
mov
dec
push
call
inc
mov
xor
mov
jne
shl
(bad)
in
dec
repnz
not
addr16
int
xor
sub
sub
test
xor
pop
push
daa
js
imul
push
add
scas
cmps
mov
xchg
cmc
rcr
jae
repnz
sahf
imul
jmp
sbb
pop
adc
mov
leave
cmp
std
shl
pop
cmps
fstp
mov
test
sub
dec
or
lea
push
scas
mov
out
outs
gs
xlat
jb
js
fdivr
xchg
pop
ret
aad
pop
lods
xor
pop
mov
sti
mov
xor
call
lds
dec
iret
xchg
rol
xchg
sub
mov
lahf
out
push
fadd
mov
mov
mov
adc
or
adc
jbe
add
aad
pop
push
ficom
out
or
cmp
mov
in
mov
hlt
xchg
jno
xchg
dec
xchg
pop
xor
out
fdivr
jmp
lods
cld
sbb
pop
cmps
test
sti
cld
jns
les
(bad)
adc
js
inc
imul
jbe
test
mov
and
jno
sub
pusha
sub
adc
cwde
sqrtps
mov
nop
(bad)
fdivr
ds
test
jmp
sbb
push
add
and
stos
retf
out
rsqrtps
outs
(bad)
mov
sub
pushf
sbb
je
cmp
(bad)
jns
pusha
inc
push
mov
pusha
cli
jg
cmp
neg
jae
and
sub
aas
pop
xchg
js
in
(bad)
pop
mov
ss
sub
jno
inc
dec
loop
inc
fbstp
je
cmps
arpl
sbb
cmp
jae
push
outs
dec
pushf
cmp
loopne
and
xor
mov
std
xchg
mov
add
stc
push
xchg
mov
cmp
leave
xor
jo
sub
sbb
cmps
pop
xchg
pop
jne
mov
leave
ret
int3
sub
scas
add
xor
jge
mov
or
push
popf
xlat
push
rol
mov
inc
bndstx
movs
mov
mov
push
mov
pushf
sub
jmp
call
mov
movq
test
retf
(bad)
mov
mov
mov
jne
adc
jl
cmp
test
or
pop
(bad)
js
scas
movs
jge
mov
xchg
pop
and
stc
out
jp
into
int3
push
mov
(bad)
movs
imul
or
and
fild
(bad)
mov
xchg
inc
xor
sub
fistp
movs
sbb
sub
(bad)
sbb
cs
stos
fmul
and
hlt
push
out
mov
bound
jg
(bad)
xchg
push
jnp
js
in
mov
pop
and
jmp
in
adc
sbb
in
lods
adc
push
push
loop
lea
outs
mov
movs
adc
stc
lods
xchg
outs
adc
ja
cmp
ror
rcr
bound
xlat
retf
cmp
lea
sbb
loope
or
push
das
(bad)
aad
imul
inc
call
sub
xor
popa
jmp
inc
dec
ds
dec
xor
aaa
jl
push
in
mov
fisttp
jo
adc
(bad)
repnz
dec
add
mov
xor
jmp
addr16
ja
cmp
(bad)
jb
clc
les
sbb
add
mov
test
cmp
mov
jecxz
push
jbe
add
into
in
jmp
scas
(bad)
sbb
mov
or
mov
or
or
ja
dec
sbb
out
inc
mov
jmp
loop
or
leave
std
stc
mov
add
cs
push
push
sub
or
movs
mov
push
sub
inc
repnz
push
xlat
pop
faddp
aam
test
mov
jne
dec
and
call
outs
clc
test
push
mov
outs
dec
sub
iret
inc
pop
xchg
xlat
adc
dec
mov
sbb
cmps
mov
jbe
imul
int
mov
xchg
mul
(bad)
xchg
cmp
cmp
mov
cmp
push
into
pusha
inc
sbb
inc
add
sar
and
jae
ja
mov
mov
inc
(bad)
mov
into
ins
sar
loop
mov
and
hlt
push
xchg
sub
repz
adc
arpl
(bad)
push
out
mov
xchg
es
fdiv
xchg
mov
test
push
pop
fwait
ret
addr16
pop
and
sub
cmp
xor
mov
inc
int3
pop
push
push
fimul
mov
ins
push
andps
mov
dec
cmp
sbb
mov
aas
sbb
dec
out
scas
pop
fisubr
mov
xchg
xor
inc
fisub
retf
out
sbb
stos
loope
mov
xchg
pop
mov
in
jns
xchg
push
jmp
add
xchg
imul
das
and
scas
or
add
int3
leave
sbb
fstp
mov
mov
mov
retf
mov
pop
mov
push
or
sti
in
in
loope
mov
mov
cmps
mov
push
push
pop
(bad)
jae
inc
mov
clc
cmp
dec
add
outs
(bad)
push
call
out
in
mov
inc
cmp
inc
xchg
mov
inc
mov
in
cmp
inc
pusha
xchg
cmp
out
retf
and
add
mov
inc
xchg
push
je
add
adc
cmps
shl
or
jmp
fdiv
adc
mov
sub
dec
pop
jnp
add
stos
bt
imul
test
cmp
jnp
repz
pop
in
test
test
data16
leave
arpl
mov
fnsave
mov
xor
push
push
ss
jne
and
mov
popa
bnd
ffreep
mov
aas
sub
ja
xor
cmps
xchg
fsubr
pushf
movs
fnsave
mov
cli
jbe
ret
in
adc
mov
loop
cmps
or
or
add
jne
sub
je
ins
xchg
xor
xor
pop
imul
ret
jo
loop
ss
imul
imul
into
cmp
jg
inc
mov
ret
hlt
pop
fisttp
cmp
xor
dec
and
(bad)
jmp
pop
jmp
(bad)
and
ds
pop
pop
aad
cmps
xchg
or
bound
pop
push
mov
inc
ins
(bad)
xchg
and
cwde
mov
or
(bad)
cs
dec
dec
xor
fnstsw
out
pop
mov
add
test
push
pop
rol
ret
inc
or
cli
mov
and
lods
inc
mov
sub
loopne
adc
push
mov
out
inc
fwait
sub
test
xchg
mov
jg
push
mov
sbb
stos
imul
rcr
test
add
mov
sbb
in
xor
push
test
call
mov
retf
sub
dec
icebp
cmp
pusha
(bad)
sub
pop
test
jge
mov
add
inc
push
mov
bound
inc
cmp
imul
int
or
adc
rol
add
js
sub
or
sub
pop
jle
add
jo
mov
imul
adc
push
ins
repz
movs
stos
xor
cli
mov
icebp
in
out
ret
jns
adc
jb
jl
mov
aam
aaa
vmovntdq
addr16
adc
or
pop
ja
dec
cmp
pop
lahf
mov
xor
pop
mov
push
xchg
je
xchg
jecxz
sbb
pop
dec
adc
ror
in
std
fnstsw
(bad)
mov
out
jg
jb
enter
sub
(bad)
fs
adc
out
xchg
pushf
xchg
movs
mov
adc
icebp
cdq
jb
mov
loope
das
mov
jp
inc
sahf
stos
adc
cmp
xchg
xor
leave
cmp
cli
jmp
mov
cmp
gs
lods
sub
popf
sbb
(bad)
leave
test
mov
pop
jl
push
adc
(bad)
mov
mov
and
xchg
jb
mov
addr16
xor
add
call
and
(bad)
pop
add
jle
call
mov
and
(bad)
mov
je
sub
jnp
mov
adc
pop
jg
and
cli
mov
jbe
mov
(bad)
xor
mov
ficom
scas
out
in
fdivr
inc
push
inc
mov
add
mov
and
hlt
adc
dec
dec
sub
retf
out
shl
cmps
dec
(bad)
xchg
jp
outs
lods
inc
neg
in
rcr
mov
jl
add
adc
enter
fxtract
into
hlt
std
or
cli
adc
bound
jo
add
lods
mov
push
jecxz
adc
loope
cmp
pop
in
sub
dec
pop
stc
push
mov
cmp
ds
mov
xchg
cwde
ret
xchg
mov
je
movs
mov
ja
imul
test
inc
inc
pop
retf
jne
int3
sub
push
dec
(bad)
mov
add
and
call
scas
ins
ins
fucom
fist
fimul
pop
daa
fdiv
mov
mov
push
(bad)
or
jno
adc
sbb
mul
scas
pop
pushf
imul
xor
pop
xchg
inc
sbb
mov
dec
stos
cmp
cdq
mov
sbb
mov
(bad)
cld
dec
outs
mov
(bad)
inc
retf
mov
arpl
aad
dec
pop
pop
pop
test
stos
ror
mov
mov
xor
pop
jae
jle
fidivr
scas
xchg
lods
add
push
cwde
pop
pusha
test
cld
adc
stos
add
mov
rol
push
bound
sbb
aad
push
inc
add
imul
gs
jne
outs
dec
mov
lea
pop
ins
in
bound
push
inc
test
sub
pop
sub
fisttp
dec
mov
dec
push
jl
xor
inc
mov
push
xchg
or
imul
mov
mov
ret
jge
and
int3
dec
icebp
fnstenv
xor
jns
repnz
xor
hlt
test
xlat
xor
fst
dec
and
ja
neg
xchg
jae
repnz
jmp
rcr
sti
xor
and
fs
movs
xchg
out
push
fdiv
int
shl
daa
mov
dec
(bad)
mov
push
(bad)
stos
xchg
outs
mov
cdq
pop
aad
in
mov
ret
sub
adc
mov
cmc
mov
data16
xor
mov
jno
data16
rcl
jns
mov
push
mov
(bad)
cmp
repz
mov
scas
add
or
cs
xchg
jno
mov
mov
adc
loope
push
shl
push
xor
in
xchg
cmp
jecxz
cmps
enter
and
shr
adc
in
push
mov
push
cmp
xchg
es
loop
gs
loop
(bad)
cmp
xchg
pop
xchg
ret
add
mov
(bad)
loopne
outs
push
xchg
data16
mov
sub
pop
jge
add
loop
loope
fst
push
mov
sub
xchg
pop
xchg
and
adc
jno
pushf
push
in
lds
lahf
rcl
les
scas
jecxz
ds
test
test
repz
xor
xor
sbb
loopne
setge
mov
and
ret
pop
fsubr
scas
cmps
test
adc
inc
dec
sbb
cmp
mov
cdq
inc
outs
or
adc
and
xor
and
in
mov
fisub
call
pop
mov
and
cld
or
lahf
jecxz
pmaxub
jne
pushf
and
hlt
xchg
add
and
lahf
push
repnz
or
out
shl
out
ds
test
dec
cmc
cdq
xchg
jns
xor
push
mov
movs
xor
jge
sbb
xor
sub
mov
shl
mov
jne
das
lds
jecxz
xchg
pop
jo
pop
sbb
xchg
xchg
jae
fsub
jmp
fprem
push
sahf
xchg
lahf
out
mov
sbb
sti
and
add
outs
into
dec
lods
pop
sub
inc
mov
gs
and
out
addr16
stc
je
xchg
pop
xor
aam
(bad)
push
push
ror
jne
daa
mov
jmp
adc
ja
vshufpd
in
jnp
movs
pop
pop
bswap
int
stos
ins
(bad)
daa
jo
mov
xchg
(bad)
sti
cmp
jg
inc
mov
mov
add
outs
das
iret
sar
pop
push
out
inc
inc
push
jne
aad
or
cmps
and
cmp
push
sbb
cmp
push
rcl
inc
dec
test
mov
retf
or
call
inc
lods
ret
mov
in
arpl
dec
mov
je
sub
dec
das
daa
or
mov
fwait
xchg
xchg
enter
pop
call
loope
xchg
loop
mov
jmp
scas
shr
mov
pop
inc
nop
mov
and
mov
inc
cld
cmps
pop
test
in
stos
xchg
dec
aaa
test
cmp
ficomp
pusha
xchg
jecxz
jge
ins
bound
frstpm(287
and
sbb
mov
in
push
and
mov
adc
inc
pop
arpl
mov
(bad)
mov
fsubr
dec
outs
nop
retf
dec
mov
or
xor
pop
mov
jne
mov
push
in
mov
mov
arpl
cmovl
cmp
repnz
sbb
xchg
pop
dec
mov
int3
cmp
and
sbb
pop
(bad)
and
(bad)
jae
pop
sub
in
loopne
js
dec
add
imul
out
adc
push
add
cmp
cmp
daa
fdiv
ins
test
adc
mov
push
sbb
and
ret
test
pop
mov
cmp
push
mov
push
in
or
cmp
jb
inc
xor
sbb
stos
mov
test
sbb
jb
data16
sub
jbe
push
adc
sub
mov
lds
movs
(bad)
and
push
ret
aaa
clc
pop
arpl
cld
inc
fdivr
jno
or
xor
jl
jmp
pop
lods
pop
dec
shr
sbb
add
pxor
cwde
movs
cli
mov
imul
or
sbb
push
sahf
push
xchg
push
or
jb
push
ins
rcr
xchg
inc
not
and
cld
cmps
stos
push
mov
mov
sub
mov
push
setp
leave
adc
dec
lock
out
gs
adc
add
rcl
loop
or
push
iret
push
mov
mov
aaa
int3
(bad)
ja
fiadd
sbb
fnstcw
(bad)
out
mov
clc
mov
sbb
push
icebp
push
mov
loop
imul
sub
mov
push
cmps
gs
sbb
movs
jns
fs
cmp
(bad)
cmps
icebp
jle
mov
ror
mov
mov
jae
nop
leave
nop
mov
jecxz
out
sub
push
sub
pop
outs
push
iret
inc
clc
mov
es
das
mov
push
cmp
call
xchg
sbb
sar
ror
mov
cmp
stc
mov
pop
mov
xchg
cdq
pop
jg
fdiv
push
nop
sti
jnp
cmps
gs
xlat
int
aas
es
ss
mov
in
stos
movs
pop
and
mov
push
dec
pop
fld
ficom
push
inc
cdq
inc
mov
mov
jb
adc
sub
pop
or
jmp
int
pop
mov
xchg
(bad)
stc
mov
bnd
ds
cmp
cli
call
cmp
cmp
nop
dec
fucomi
push
push
push
sbb
push
push
pop
scas
ja
sbb
jg
dec
out
ins
push
enter
sub
test
mov
shl
fwait
daa
xor
inc
cs
fldenv
sub
aas
mov
daa
inc
mov
es
adc
push
lahf
aas
mov
add
jp
adc
inc
push
jmp
xchg
(bad)
xor
fiadd
cmp
stc
clc
or
icebp
pop
popa
cmp
push
fidiv
inc
cmp
in
es
int3
inc
mov
cmp
adc
(bad)
xor
pop
or
jb
mov
xchg
mov
fwait
pop
fnsave
iret
scas
addr16
cmps
scas
and
jbe
mov
sbb
push
cwde
xor
jno
pop
mov
lods
mov
cmp
dec
sbb
test
aaa
xor
pop
adc
dec
das
out
cli
dec
pop
xlat
xchg
or
add
pop
xor
test
mov
mov
add
fdiv
ror
jne
and
js
sar
and
imul
je
jne
pop
adc
int
sbb
xchg
dec
js
or
sub
data16
or
xor
cmc
arpl
js
jne
inc
push
dec
cmp
add
cwde
(bad)
(bad)
repz
and
sar
mov
test
popa
(bad)
jmp
lock
push
scas
xor
fild
mov
lods
push
dec
xchg
inc
js
mov
push
loopne
inc
mov
(bad)
push
fcom
rol
mov
lods
sbb
in
into
enter
pop
rcl
imul
fsub
icebp
adc
add
aam
pop
jecxz
mov
sub
mov
jle
push
lods
jnp
xlat
or
cmp
inc
push
adc
adc
inc
aas
fidiv
call
shr
jae
pop
fsubp
movzx
fsub
ins
jb
ins
jmp
xor
mov
(bad)
bswap
(bad)
jge
mov
xchg
or
daa
dec
sub
or
inc
pop
dec
std
jp
adc
icebp
xchg
daa
inc
shl
dec
dec
ins
and
dec
sahf
iret
fstp
test
jb
stos
mov
movs
add
(bad)
inc
retf
in
popa
test
and
xor
and
outs
retf
clc
and
es
mov
fdiv
clc
mov
sub
jecxz
push
push
push
repnz
mov
jecxz
mov
fmulp
ficom
xor
loopne
jno
aas
mov
ret
das
push
push
cmp
dec
jbe
mov
xchg
pop
popa
mov
ficom
cmp
out
rcl
push
out
mov
sbb
sub
mov
fstp
ins
mov
leave
nop
sbb
loop
pcmpeqb
loop
clc
das
jp
bnd
jae
movs
cmp
jnp
cmc
mov
jo
mov
mov
fdivrp
cmp
fcomp
xor
inc
or
mov
cdq
xchg
out
jae
add
mov
jecxz
mov
mov
test
and
scas
push
jno
sub
xor
add
push
in
dec
out
ins
sub
std
into
loope
pop
sbb
lahf
(bad)
pop
out
ds
repnz
inc
xor
adc
je
mov
push
ds
js
mov
push
jge
test
mov
pushf
shl
test
repnz
arpl
push
dec
dec
mov
inc
sub
cmc
mov
mov
(bad)
scas
mov
add
mov
jmp
(bad)
fsub
enter
in
xor
fwait
dec
cmp
adc
cmp
mov
mov
mov
inc
loopne
daa
ja
(bad)
aad
push
stc
cmps
xor
xor
leave
cmp
imul
pop
add
out
out
adc
dec
ds
sub
cmc
stc
fsub
sbb
out
ins
xor
pop
ins
repnz
sbb
stc
jno
in
outs
sbb
pop
nop
cmp
jp
rcr
fadd
scas
outs
clc
movs
add
iret
cmps
cli
outs
jns
test
mov
jge
mov
daa
psllq
inc
mov
xor
std
mov
push
in
xchg
push
addr16
imul
repz
cmp
jno
retf
add
add
sti
cmp
(bad)
mov
or
ret
push
js
xchg
cmp
adc
or
cmp
in
mov
popf
iret
mov
cmp
dec
add
push
das
mov
sbb
test
mov
adc
pop
mov
inc
mov
cli
mov
ret
pop
dec
test
aam
and
adc
ror
mov
(bad)
mov
sbb
dec
lods
adc
iret
pushf
sub
stos
add
xchg
or
mov
jg
addr16
imul
call
sub
sbb
push
enter
push
test
ss
cmp
jl
xor
pop
sbb
nop
push
inc
inc
pop
retf
into
movs
mov
fadd
int
xchg
xor
jmp
pop
mov
add
stc
jo
mov
sub
or
mov
mov
mov
out
push
loopne
sub
shl
pop
(bad)
loopne
sbb
and
in
out
addr16
adc
movs
les
test
xchg
jecxz
scas
and
push
jmp
xchg
sbb
xchg
push
mov
(bad)
mov
jge
gs
neg
nop
mov
jmp
rcr
push
cmp
pushf
stos
xchg
sbb
mov
xor
push
sbb
push
pop
int3
pusha
cmp
push
lods
leave
stc
fbld
retf
(bad)
dec
push
pop
push
enter
mov
lea
pop
inc
sbb
pop
outs
es
xor
clc
sub
and
stc
ficom
jno
pop
pop
enter
push
xor
mov
sbb
xchg
ret
(bad)
sbb
mov
ret
sub
pushf
sbb
aad
mov
xchg
imul
xor
retf
or
xchg
mov
ror
add
ins
icebp
push
xor
adc
mov
jmp
add
rcl
or
xchg
scas
(bad)
or
retf
cld
push
cmp
jg
mov
das
xchg
mov
sbb
cli
sub
push
das
push
lahf
xor
or
sahf
mov
cli
mov
xchg
mov
pop
cmp
lea
cs
ins
imul
inc
jmp
xor
jmp
int
mov
inc
mov
sbb
jecxz
es
bound
cld
adc
scas
mov
pop
mov
outs
pushf
in
push
sub
mov
mov
fild
xchg
mov
and
popf
jecxz
xor
push
rcr
push
dec
sub
pop
ins
movs
les
mov
jb
and
add
mov
test
bound
das
jg
inc
lods
data16
mov
mov
push
push
outs
hlt
aad
cdq
(bad)
test
ret
(bad)
jp
mov
inc
repz
scas
mov
div
scas
xchg
cwde
(bad)
sub
out
jns
push
ins
rcl
popf
scas
repnz
not
inc
adc
adc
mov
addr16
fst
mov
add
shr
cdq
imul
scas
sub
jmp
ret
push
bound
jno
js
push
and
add
xor
clc
mov
cmp
xor
add
enter
repz
aam
add
call
add
out
repnz
or
nop
ss
in
xchg
sbb
sar
push
call
in
jp
ret
sar
xlat
xchg
dec
popa
test
icebp
fwait
jp
and
test
outs
scas
movs
push
and
inc
xchg
lods
test
mov
lea
rol
push
mov
or
push
sbb
int3
cmp
mov
ret
test
int3
ret
enter
mov
loop
fs
jmp
scas
mov
jmp
shl
push
push
repz
(bad)
push
add
adc
mov
inc
or
ins
scas
or
sub
inc
xor
xchg
and
lea
adc
imul
dec
call
scas
cmp
xor
dec
test
rcr
cmp
test
cmp
xchg
add
stos
or
xor
sbb
outs
fs
xlat
iret
popf
jmp
push
and
or
push
or
push
xchg
scas
pop
fwait
add
xchg
imul
clc
loop
cs
jecxz
stos
push
mov
jp
arpl
xchg
neg
dec
add
fsin
scas
mov
push
cwde
imul
mov
inc
mov
push
pop
mov
out
mov
lahf
push
sbb
sub
in
mov
cwde
xchg
ja
sub
repz
mov
mov
pop
out
xchg
out
in
ds
mov
and
stos
jne
xchg
cs
fcomp
mov
mov
loopne
cdq
dec
movs
adc
add
ror
xlat
jle
int3
int
lahf
inc
mov
mov
sbb
xchg
xlat
pop
pop
cmps
xor
rcr
test
inc
pop
adc
mov
adc
push
inc
and
jmp
in
repz
pop
ret
cmps
and
int3
sbb
ret
out
cwde
inc
loopne
sbb
lock
cli
not
jo
or
in
cs
or
sbb
scas
aaa
jne
push
mov
push
mov
fcmovbe
shl
mov
xor
loope
pop
fisub
cs
mov
in
stos
sub
jmp
sub
or
loope
cmp
sbb
inc
xchg
mov
stc
sti
sahf
jno
mov
mov
mov
add
ja
out
push
push
dec
add
jle
iret
adc
pop
cwde
loopne
push
vphaddbw
lds
adc
fs
fcomp
cmp
fcom
mov
xchg
leave
push
mov
fmul
xchg
sbb
jae
mov
cli
and
ins
inc
pusha
sbb
popa
mov
ret
ret
inc
idiv
cld
inc
test
pop
fidivr
mov
imul
and
and
jns
add
aad
js
mov
(bad)
jb
dec
xor
xchg
jmp
add
leave
pop
push
shr
mov
pop
jge
xchg
push
mov
jl
scas
test
in
mov
dec
push
push
mov
test
ins
adc
clc
push
mov
dec
jp
icebp
leave
mov
mov
mov
test
xor
iret
inc
call
loopne
inc
sub
sar
bound
xchg
inc
test
mov
mov
lock
aaa
cli
retf
stc
ret
push
mov
stos
int
jbe
stos
ficom
inc
fcmovnu
mov
loope
dec
pop
dec
inc
inc
ret
mov
dec
pop
es
cdq
out
inc
frstor
sub
ret
xor
mov
fnstenv
xor
pop
jp
add
xchg
mov
fstp
cwde
add
sub
mov
in
repnz
(bad)
iret
retf
(bad)
mov
push
aas
in
hlt
pop
and
out
xchg
inc
test
fst
mov
xor
nop
leave
imul
not
mov
sbb
jp
ja
mov
sbb
stc
in
test
movs
cmps
push
movs
pop
inc
sar
in
xor
(bad)
adc
lods
popf
cmp
jl
loop
add
out
call
cmp
pop
sar
jne
mov
jle
jle
add
cmps
cld
mov
addr16
or
push
mov
mov
test
inc
xor
pusha
inc
dec
mov
js
fwait
sub
loop
mov
mov
in
mov
arpl
lds
aaa
fmul
mov
fs
push
mov
ss
retf
mov
addr16
je
jg
aad
cmc
fldenv
add
mov
push
xchg
leave
rol
xchg
test
mov
dec
ja
cdq
std
fimul
cwde
rcl
dec
adc
mov
arpl
jns
mov
xchg
clc
mov
imul
jge
scas
mov
popaw
push
(bad)
loop
sub
inc
es
inc
xor
cmp
icebp
in
sub
xchg
adc
int3
push
outs
loope
mov
(bad)
sbb
in
(bad)
jmp
aam
vpmacssdd
lods
mov
loop
(bad)
cwde
inc
or
or
pusha
loopne
cmp
call
push
fsubr
mov
add
adc
call
test
cmp
xor
pop
mov
mov
mov
lss
xchg
je
xlat
jbe
js
nop
push
int
outs
aam
xor
das
sub
in
inc
jns
xor
or
cs
add
sbb
pop
adc
pop
retf
push
(bad)
jnp
movs
rol
aas
aas
xor
jno
push
pop
lahf
add
dec
sub
pop
pop
dec
xor
mov
push
data16
iret
icebp
jb
xchg
mov
stos
jo
popa
jbe
xchg
rol
inc
dec
inc
or
push
pop
out
iret
std
cmp
cwde
push
dec
retf
sbb
daa
nop
stos
sbb
in
pop
jae
cwde
pop
pop
pushf
jae
and
scas
bound
rcr
add
ins
jno
mov
stos
jge
out
push
mov
mov
sti
push
test
push
inc
mov
aad
imul
mov
sbb
inc
ss
jnp
xchg
and
xor
lods
dec
test
pushf
mov
fwait
push
cwde
pop
dec
lea
nop
adc
lods
mov
jae
pop
or
cmp
and
xchg
mov
xchg
mov
jge
retf
xchg
cwde
push
pop
jo
inc
cmp
aam
push
pop
out
sbb
push
iret
or
inc
aad
sbb
xor
pop
icebp
fstp
sub
es
cdq
adc
xchg
sub
adc
adc
js
add
loope
js
cmp
jp
cmp
mov
mov
cmps
mov
dec
mov
lahf
mov
pop
enter
mov
repz
popf
test
jae
xchg
movs
mov
bound
test
and
loop
inc
mov
jle
mov
sbb
test
scas
mov
push
in
lds
imul
ror
sbb
retf
mov
mov
jns
push
je
cmp
mov
clc
hlt
iret
addr16
mov
icebp
repz
repnz
xor
scas
xchg
dec
mov
lods
add
xchg
mov
clc
test
add
xchg
or
(bad)
cmp
nop
mov
jo
push
test
nop
pusha
dec
cmp
aaa
cs
ret
mov
jecxz
es
sub
sbb
mov
ss
dec
fwait
jmp
retf
int3
vmwrite
ficomp
aas
cmp
cdq
not
inc
push
pop
ror
sub
pop
stos
pop
and
xlat
sbb
mov
add
or
enter
mov
aas
cdq
sub
push
pop
cdq
or
jg
(bad)
clc
cmp
fcomp
fnsave
or
mov
xor
rcr
lahf
mov
inc
xchg
imul
and
jne
adc
cmps
jbe
sub
jmp
imul
sbb
ja
movs
imul
xchg
push
sbb
std
ror
xor
and
(bad)
jle
loop
pop
addr16
cmps
push
xchg
pop
cld
lds
xor
ss
je
and
sub
pop
xor
inc
xchg
into
cld
push
cld
mov
jns
adc
mov
xchg
retf
icebp
lds
das
sub
xchg
cmp
xor
pop
out
inc
out
cmp
adc
adc
push
inc
dec
cmc
adc
pop
jae
mov
push
lock
add
or
adc
fidiv
ins
xchg
je
mov
inc
add
fld
out
add
mov
inc
or
cli
cmps
push
xor
pusha
das
in
cmp
sbb
stos
jnp
sbb
jae
or
lahf
fwait
mov
addr16
cmp
test
inc
and
out
xchg
rol
and
and
fcomip
mov
jbe
in
fidivr
rcr
(bad)
fwait
rol
mov
cmp
xchg
pop
jge
mov
(bad)
xchg
adc
adc
mov
fmul
les
mov
xchg
ja
mov
push
les
das
rcl
scas
in
fstp
sub
aad
and
mov
dec
fucomi
and
int3
add
cmp
inc
adc
adc
nop
daa
leave
mov
sub
jg
push
in
jae
xchg
into
and
sub
jo
iret
sar
fs
test
jmp
arpl
movs
inc
inc
clc
es
push
and
jo
(bad)
mov
and
cmps
mov
pop
mov
stos
push
in
pop
pop
dec
sahf
leave
sbb
push
dec
stos
dec
gs
dec
sub
adc
xor
clc
fcomp
lods
aaa
mov
jne
mov
in
inc
cwde
loope
(bad)
hlt
outs
xchg
cmp
stos
pop
fistp
pop
jae
adc
cmp
fdiv
lahf
or
xchg
out
sbb
cmp
hlt
fdiv
mov
push
mov
psllq
pop
fidivr
cmps
test
and
sbb
xor
call
imul
xchg
mov
out
stos
pop
xor
xchg
mov
nop
aas
jns
cmp
and
xchg
(bad)
xchg
hlt
rcl
cmps
or
lods
mov
fild
xor
lods
jl
int3
pop
ja
mov
test
mov
lods
jp
cmp
js
xchg
jmp
fucomi
push
loopne
pop
mov
push
push
fiadd
or
dec
int
ret
mov
out
or
xor
pop
movsx
(bad)
call
call
aam
or
sbb
mov
stc
xchg
mov
mov
sbb
sub
lds
mov
mov
push
mov
push
fadd
ja
cs
das
mov
mov
fild
imul
in
dec
jns
or
adc
mov
dec
inc
cmps
mov
dec
repz
inc
(bad)
cmp
sub
in
std
jp
lds
xor
mov
xor
sub
pop
mov
popf
pop
cmps
sbb
xchg
dec
lahf
jnp
mov
iret
sub
mov
loop
out
pop
out
dec
int
fbld
arpl
pop
and
int3
stc
ins
push
cmp
or
jp
frstor
fwait
pop
jae
sbb
cmp
mov
and
lea
sub
pop
in
adc
js
push
xchg
retf
stos
add
lds
sub
cmp
test
jmp
push
ins
cli
jmp
rcl
jmp
or
(bad)
and
inc
sbb
lods
int3
jnp
inc
xchg
cmp
fcmovnb
lahf
xchg
test
add
add
les
lods
out
sbb
out
or
add
cmp
mov
lds
sahf
sub
and
lods
or
ds
xchg
pop
into
inc
popf
xchg
pop
not
inc
sti
jo
mov
adc
inc
clc
mov
fldenv
outs
adc
cwde
aaa
cmps
xchg
xchg
adc
inc
xchg
mov
cmp
jmp
sub
clc
sbb
push
scas
cmps
fnstcw
and
mov
xor
inc
mov
int3
and
repz
aas
xor
pop
push
popf
jb
and
pop
mov
fldenv
hlt
add
xor
lea
sub
lock
jp
and
out
cwde
push
pop
out
mov
mov
outs
jg
jecxz
ss
out
sbb
inc
xchg
cmc
ficom
sar
out
ret
pop
mov
lds
jge
xchg
mov
stc
add
imul
shl
mov
(bad)
jmp
mov
jle
and
mov
gs
pop
dec
inc
stc
leave
mov
pop
cmp
mov
ins
xchg
call
adc
sbb
enter
jne
fs
or
jnp
(bad)
push
adc
mov
nop
lock
jne
outs
lahf
xchg
dec
xchg
nop
and
pop
out
cmp
scas
lods
(bad)
dec
and
out
rcl
mov
lods
stos
(bad)
add
call
pusha
mov
movs
xor
mov
push
(bad)
xor
daa
(bad)
dec
es
adc
clc
rol
dec
in
pop
sbb
jge
sbb
outs
int
push
and
sub
mov
sub
inc
ss
jmp
sbb
bound
popa
test
pop
loop
ret
or
mov
aad
xchg
jg
xor
shl
pushf
xchg
pop
adc
or
jg
cli
sub
je
lock
loop
bound
cmp
inc
jmp
lods
dec
mov
cmp
xchg
sbb
out
xor
fld
push
sbb
ror
adc
mov
dec
push
push
inc
rcr
push
or
cwde
jns
gs
fisubr
sar
test
xor
sub
mov
jl
cmps
nop
xchg
mov
sar
fs
sub
int
mov
or
or
ficomp
cmp
repz
adc
push
inc
fwait
push
xchg
loop
call
sub
popf
fs
sub
add
dec
push
or
cmp
and
(bad)
and
sbb
push
enter
jns
or
jb
mov
cld
movs
push
scas
xchg
inc
into
jnp
loop
sbb
into
pop
cmp
bound
icebp
fdivr
push
jmp
es
shl
imul
es
sub
add
dec
and
sub
popa
mov
fwait
mov
rcl
mov
push
jo
cmc
jp
(bad)
js
xor
inc
xchg
mov
mov
cmp
pop
inc
out
jo
ins
dec
dec
mov
adc
add
jmp
mov
ja
(bad)
rcr
adc
repz
add
jb
daa
cmp
sub
mov
out
or
xor
dec
sbb
mov
les
sbb
inc
xchg
pop
fisttp
xor
add
lds
mov
pop
mov
jmp
stc
(bad)
(bad)
test
ins
je
mov
mov
rcl
cmc
push
(bad)
out
icebp
test
mov
lea
loope
jp
xor
or
ins
outs
push
xor
scas
dec
pop
js
pop
add
push
in
inc
pop
shl
lods
jmp
cld
inc
rol
mov
xor
retf
pop
out
(bad)
jnp
sbb
xchg
sahf
or
mov
dec
inc
fs
out
scas
icebp
call
inc
lods
stos
push
test
xchg
dec
mov
xlat
int3
fadd
js
sar
into
push
test
int
in
adc
xchg
push
push
cdq
mov
(bad)
ds
push
mov
(bad)
and
in
xor
or
scas
mov
sbb
xchg
xor
add
xchg
test
jae
mov
pop
test
jbe
add
scas
movs
popa
test
jo
jmp
pop
mov
ficom
std
in
jmp
stos
adc
pop
dec
call
push
add
mov
sub
mov
out
aaa
dec
xchg
push
imul
fs
sbb
push
retf
or
imul
jl
rol
data16
ins
mov
outs
fld
or
popa
jbe
cmp
inc
dec
ror
xor
inc
push
jo
loope
popf
cmp
sbb
addr16
adc
loope
stos
mov
sbb
arpl
rol
adc
test
lea
outs
adc
sub
(bad)
imul
mov
and
test
adc
pop
daa
fldenv
cs
sub
inc
cmp
mov
test
into
hlt
repnz
ss
add
into
les
jae
pop
adc
jo
scas
adc
sub
pop
(bad)
fimul
cwde
and
sbb
ror
cmc
and
scas
dec
lea
cmp
dec
and
icebp
mov
in
jecxz
dec
mov
mov
rcl
xor
fwait
ins
neg
sbb
(bad)
sub
sbb
mov
xchg
in
dec
xchg
lods
shl
leave
mov
sbb
dec
test
xchg
addr16
ret
and
ror
cli
(bad)
cld
cmps
movs
push
ins
das
rcr
test
or
sbb
retf
mov
inc
cmp
in
arpl
mov
mov
pop
inc
pushf
or
(bad)
fadd
ins
inc
test
into
sub
cdq
mov
push
pop
test
dec
add
aaa
js
mov
(bad)
out
outs
test
stos
(bad)
movs
call
and
int
push
aam
out
loope
repz
lea
jecxz
mov
(bad)
hlt
jge
sub
sub
jmp
add
aad
fmul
dec
rcr
pop
imul
sbb
call
sbb
and
inc
cmc
cmp
sbb
ficomp
mov
out
sbb
popf
icebp
out
cmp
jl
outs
gs
xchg
sbb
js
and
mov
mov
push
icebp
frstor
xlat
push
out
dec
cmp
push
aas
int
aad
add
int3
xchg
cmp
fst
ret
xlat
icebp
cmp
add
adc
and
xchg
iret
jae
cmp
(bad)
es
cmps
add
push
cmp
mov
outs
or
mov
cmp
sahf
dec
adc
stos
xchg
es
mov
xor
fild
or
daa
rol
sub
mov
mov
les
pop
ja
dec
aas
aam
mov
popa
call
mov
stc
call
sar
jl
mov
add
xchg
std
cmp
sti
jge
inc
in
sub
pop
fsub
mov
jl
jmp
jno
fsub
mov
(bad)
dec
cmp
xchg
jno
dec
sahf
iret
xlat
aas
dec
out
neg
xor
fidivr
add
sbb
sbb
or
aaa
je
and
fidiv
jmp
push
and
test
std
gs
mov
int3
jge
lock
cs
cmc
cmc
lods
add
xchg
(bad)
loope
pop
push
sub
push
adc
sub
lea
sub
fucomp
and
dec
xchg
aad
pop
out
enter
cmc
pop
sub
je
mov
les
cmps
sub
pop
mov
hlt
inc
mov
adc
repnz
lea
inc
sub
mov
es
lahf
out
mov
cdq
cdq
ffree
leave
adc
scas
repz
jl
xchg
fs
inc
daa
xchg
push
cmps
retf
push
int
cmp
add
add
out
jl
fwait
jmp
xchg
and
cld
aam
push
ins
push
ins
dec
(bad)
xlat
jg
popa
das
cmp
(bad)
and
cmp
dec
mov
or
aam
test
ret
inc
adc
inc
jle
enter
push
mov
outs
aaa
stc
jle
and
push
(bad)
in
or
mov
mov
(bad)
sahf
dec
data16
popf
arpl
fs
stos
jo
dec
push
repnz
bound
mov
stos
es
retf
das
cmp
ja
jmp
pop
cmp
cmc
std
mov
add
adc
test
xchg
rol
call
sub
repz
fwait
mov
mov
jp
mov
cmp
xor
xchg
or
pop
pop
out
dec
xchg
add
addr16
imul
xor
scas
inc
mov
pop
fcom
test
mov
sub
cmp
mov
fisubr
(bad)
in
call
xchg
and
pop
jns
add
in
jne
push
dec
pop
cmp
stc
ja
push
pusha
sbb
push
shr
dec
test
cmp
mov
push
jb
xor
mov
inc
or
inc
scas
dec
pop
push
jbe
int
adc
mov
std
pop
mov
mov
jbe
pusha
cmp
mov
inc
adc
pop
sbb
ds
and
scas
stos
ja
repz
jb
out
out
lock
fistp
sbb
dec
jg
shr
dec
les
xor
cmp
and
sbb
pop
dec
cmps
dec
bsr
push
jmp
or
sahf
xchg
mov
sub
je
jbe
adc
arpl
sbb
push
fwait
inc
push
loope
mov
adc
inc
outs
or
repz
test
sbb
xor
jmp
and
sbb
retf
sub
and
jbe
(bad)
push
cdq
mov
test
mov
js
inc
hlt
adc
leave
add
xlat
sub
jp
data16
adc
jmp
add
dec
ret
adc
xchg
mov
jae
cmps
jno
jbe
test
dec
adc
dec
retf
cmc
popf
dec
mov
cmc
and
aas
je
jp
rcr
pandn
mov
scas
arpl
dec
cli
pop
xchg
inc
arpl
scas
fsub
push
test
xlat
xchg
fld
jne
inc
rol
push
aas
shl
or
(bad)
mov
jmp
je
jge
jo
leave
stc
test
add
test
loopne
push
rol
icebp
push
dec
loope
and
int
div
out
inc
sub
repz
mov
aaa
hlt
fs
sbb
inc
jle
in
jmp
test
int3
adc
scas
adc
adc
arpl
adc
fadd
inc
and
sar
scas
sub
addr16
add
(bad)
scas
dec
outs
cwde
jns
not
mov
(bad)
out
std
xor
pop
lods
rcr
sbb
(bad)
jge
in
sti
dec
pop
popf
dec
call
xor
xchg
push
mov
ins
inc
mov
out
out
les
ins
mov
fdivr
and
fs
xor
jb
sub
jmp
inc
mov
jl
test
sub
aaa
in
out
xor
(bad)
fs
mov
gs
leave
adc
push
ss
mul
jg
push
xor
aaa
xor
cwde
data16
adc
jns
inc
jl
xchg
arpl
shl
dec
and
fisub
(bad)
or
mov
jns
xchg
mov
arpl
jnp
pop
dec
ret
inc
daa
xor
inc
retf
pop
icebp
mov
push
mov
pop
mov
cmps
test
xor
mov
jns
and
cdq
ja
daa
mov
aad
clc
mov
cmp
test
or
ret
in
pop
out
mov
rcr
add
add
arpl
test
mov
push
xor
rcr
in
bound
aad
int
cs
xchg
pop
aaa
push
pop
jecxz
push
cmps
dec
das
xor
sub
or
mov
jo
push
adc
sub
push
mov
test
test
dec
stos
popf
std
push
mov
or
jnp
mov
mov
adc
rcr
and
cld
mov
xor
mov
or
rol
movs
push
adc
retf
ins
push
mov
push
jo
sbb
retf
aaa
out
loop
(bad)
outs
or
call
pop
loopne
xor
cmp
pop
jbe
stos
mov
out
cmc
jge
cmps
ja
xchg
stos
ds
retf
xor
sub
jecxz
xchg
jbe
or
jg
dec
(bad)
test
dec
mov
fimul
loop
mov
imul
inc
lock
repz
jnp
les
imul
out
call
dec
jo
out
fldenv
mov
inc
and
or
fbstp
add
fdivr
mov
push
fidivr
adc
mov
lock
and
pop
fidiv
xlat
inc
pushf
retf
icebp
icebp
shr
idiv
mov
xlat
sbb
dec
jge
xor
cs
sub
sub
in
popf
lods
mov
xlat
mov
adc
mov
ins
push
movs
adc
xchg
pop
or
pmaddwd
dec
cmp
movs
pop
push
dec
add
dec
and
shr
ins
jo
dec
in
xchg
in
lock
stos
pop
je
sbb
add
jns
fisttp
enter
sub
stc
ret
jge
xor
inc
test
xchg
mov
cmp
lds
sub
ror
jns
jne
addr16
fst
icebp
ss
or
aas
fs
sub
dec
sub
pusha
inc
or
sub
jl
sub
sub
pop
fdivr
sub
mov
mov
call
iret
in
jno
or
pop
push
imul
fs
xchg
sbb
(bad)
sti
mov
ss
cmp
push
mov
jnp
pop
hlt
xchg
mov
(bad)
sbb
fld
je
(bad)
mov
imul
sar
sub
pop
ds
test
inc
cmp
sbb
lea
hlt
in
sub
cmps
mov
dec
mov
pushf
pop
jl
mov
or
sbb
pop
jno
aam
cmp
push
hlt
cmova
aam
and
(bad)
mov
leave
jae
and
dec
ins
cmp
out
mov
ins
cli
test
iret
imul
jp
push
ja
stos
imul
cmp
(bad)
fcmove
cli
adc
push
mov
xor
or
retf
fisub
test
jle
aaa
pop
push
dec
mov
stc
imul
mov
cmc
mov
xchg
call
js
test
mov
jns
das
adc
ret
cmps
inc
adc
mov
pop
imul
(bad)
div
sbb
xor
lahf
mov
rcr
dec
ds
pop
jecxz
cmps
cli
cmps
and
and
cmp
xchg
ret
or
iret
jne
pop
sub
mov
lea
push
(bad)
ja
add
push
pusha
mov
repz
inc
sahf
jns
dec
in
loope
mov
sbb
add
xchg
jge
jb
adc
dec
fsubr
int
clc
xchg
sub
mov
pop
je
retf
push
mov
fwait
push
scas
add
or
inc
das
xor
aas
lea
or
loopne
adc
mov
ret
cmp
jecxz
sbb
pop
inc
div
sbb
adc
mov
xchg
popf
cdq
hlt
(bad)
jge
jmp
(bad)
push
push
popa
inc
outs
xchg
mov
cdq
sbb
out
mov
or
fdivrp
xor
test
xchg
out
rcr
movs
mov
sar
call
pop
mov
mov
inc
xchg
inc
scas
(bad)
aas
fs
jl
dec
and
daa
mov
test
mov
add
mov
das
ja
dec
pop
test
outs
push
mov
(bad)
test
lds
mov
push
xchg
cmp
adc
or
int
xchg
stos
dec
pop
sub
mov
and
add
(bad)
xor
add
in
push
shl
add
or
repnz
cmp
ins
sbb
sub
dec
test
pop
mov
mov
movs
fmul
adc
retf
dec
div
inc
pop
cmps
les
pop
pop
inc
inc
mov
lods
out
push
adc
sbb
mov
jmp
int
dec
leave
repz
jnp
or
and
das
test
or
iret
cmc
(bad)
mov
std
xchg
push
mov
pop
mov
jp
pop
jo
mov
dec
mov
mov
ins
cmps
cmp
sbb
test
outs
mov
cmp
popa
pusha
arpl
into
and
loope
ret
movs
sahf
imul
mov
neg
pop
pop
dec
rcr
push
into
sub
mov
xor
call
mov
or
sub
repnz
fwait
xor
outs
inc
push
cmp
lahf
int
push
cwde
fldenv
xchg
pop
add
jo
sbb
and
jne
shr
mov
lahf
sub
(bad)
lahf
pop
test
inc
mov
arpl
mov
(bad)
fwait
rol
mov
ds
jnp
fnstsw
add
pop
out
and
mov
adc
push
ds
dec
les
out
xchg
push
sbb
dec
mov
mov
and
out
xor
ins
mov
cmp
mov
xchg
xor
in
outs
and
ret
pushf
xchg
sub
lods
mov
(bad)
mov
addr16
mov
test
jl
sbb
(bad)
pop
test
sbb
lods
mov
std
push
aaa
fldcw
(bad)
jp
inc
cmp
in
les
lods
add
sub
clc
cmp
xchg
cwde
mov
loop
inc
cld
cwde
push
aas
inc
mov
inc
pop
fs
push
sti
cmp
xchg
xchg
movs
imul
clc
mov
jne
xor
fld
(bad)
cmp
xchg
mov
inc
imul
inc
ja
adc
sub
inc
sbb
out
inc
ins
cmp
fld
fwait
adc
sbb
sbb
dec
loop
pop
and
aas
jge
mov
pop
xchg
adc
cs
fild
mov
loopne
push
es
cs
cs
mov
clc
add
cvtdq2ps
jle
and
test
mov
mov
and
test
fs
jo
aaa
or
je
mov
xchg
jns
aad
inc
jl
push
out
ins
xchg
das
and
stos
enter
jbe
daa
xor
xchg
sbb
ins
fmul
ss
das
mov
xor
and
out
jmp
mov
sti
fstp
adc
jns
neg
jl
or
lock
es
jecxz
mov
arpl
inc
mov
inc
sub
push
cdq
pop
mov
push
clc
(bad)
jg
imul
dec
aad
pop
shl
dec
cvtdq2ps
addr16
jnp
in
xchg
push
aas
jmp
jmp
cdq
fwait
hlt
mov
loop
mov
xchg
test
cmps
adc
loopne
inc
not
mov
jno
and
or
fdivr
ret
lea
nop
lock
xor
dec
outs
or
stos
sahf
jb
je
aaa
sub
or
aas
test
shl
sub
add
adc
push
dec
xchg
pop
mov
jne
adc
mov
pop
cdq
movs
fs
fidivr
inc
sub
fst
pushf
mov
(bad)
int3
adc
ret
fadd
repnz
push
lea
cld
ret
and
jo
mov
mov
not
mov
test
out
mov
sti
(bad)
ss
push
and
repnz
add
inc
adc
dec
sbb
dec
aas
popa
ins
popf
cmp
xchg
cmc
xchg
aas
in
cs
cmp
jmp
dec
xchg
sbb
cdq
push
adc
fwait
jecxz
scas
sub
add
jge
fpatan
add
and
call
xor
mov
push
fadd
int
popf
std
repnz
hlt
out
sub
mov
test
or
addr16
popa
pop
xor
leave
movs
and
mov
in
imul
mov
and
pop
dec
out
xor
sbb
lods
and
retf
ja
inc
fadd
in
jb
rol
loope
cmp
dec
cs
or
sub
push
enter
xchg
and
or
test
and
and
in
inc
or
iret
jg
cs
pop
cmp
sbb
xor
jae
sahf
cmps
dec
mov
ja
fmul
xchg
add
iret
adc
jecxz
xor
push
jp
cld
nop
outs
mov
pop
mov
pushw
fwait
(bad)
std
mov
xor
ins
mov
(bad)
dec
shl
mov
cmc
dec
xor
cmp
dec
jmp
repz
stos
cli
add
xchg
pop
or
adc
jge
inc
les
adc
mov
mov
sbb
fidivr
mov
cmc
dec
pop
jp
idiv
mov
jo
sahf
in
lods
push
std
out
fiadd
ss
bnd
push
dec
popf
mov
jge
add
(bad)
gs
(bad)
gs
adc
xchg
xchg
jg
popf
div
aas
inc
lods
push
dec
ins
add
(bad)
mov
adc
push
cmp
mov
stc
jge
mov
dec
jb
add
repz
adc
push
in
scas
pop
sahf
cmp
xchg
mov
das
hlt
push
js
inc
xor
imul
lock
dec
jbe
fwait
loope
sti
and
jo
sbb
sbb
lods
pop
lahf
and
push
xchg
sub
(bad)
xor
jae
jmp
xchg
out
or
ds
les
call
mov
inc
and
pop
and
xchg
outs
jecxz
inc
push
jmp
sbb
mov
(bad)
out
and
xor
inc
stos
retf
pop
es
mov
pop
mov
pop
cli
dec
clc
out
(bad)
cmp
out
or
jnp
jno
inc
push
sbb
stos
xchg
arpl
adc
pusha
loopne
jge
imul
shr
repz
and
inc
in
test
xor
adc
je
sar
add
mov
cwde
inc
test
cld
mov
(bad)
dec
dec
mov
xchg
mov
xor
sub
mov
mov
retf
imul
(bad)
addr16
inc
inc
and
inc
mov
fwait
xchg
push
mov
fs
mov
(bad)
sbb
xchg
adc
inc
stos
mov
fidiv
lds
sub
jne
in
add
xchg
inc
stos
(bad)
and
sbb
push
movs
mov
loop
into
xor
xor
sub
movs
or
sbb
jl
movs
pusha
(bad)
iret
fdivr
mov
iret
mov
push
mov
fld
mov
pop
cmc
adc
data16
lock
nop
jmp
pop
in
and
imul
jne
sub
pop
in
xor
jae
mov
sti
ja
imul
inc
inc
xchg
neg
jnp
js
mov
ins
xchg
fnstcw
mov
push
inc
outs
(bad)
in
dec
data16
mov
ds
add
cmp
xor
mov
xchg
jnp
out
xor
mov
gs
ja
scas
das
js
stos
mov
(bad)
fmul
or
clc
dec
fwait
jbe
out
or
inc
repnz
cmps
(bad)
popa
mov
in
(bad)
cmps
cwde
cmps
rcr
jo
pop
rcr
xor
add
mov
scas
out
(bad)
sub
lea
mov
dec
(bad)
call
bound
repnz
fsub
adc
enter
(bad)
cli
arpl
ficom
jle
aam
nop
pop
out
add
iret
push
mov
pop
fld
mov
dec
push
jle
shl
mov
std
mov
aad
push
retf
or
push
mov
ins
cmp
cs
das
and
adc
and
clc
pop
shr
cs
dec
mov
(bad)
xchg
dec
jae
inc
jmp
or
rol
arpl
imul
pusha
pop
xchg
into
sub
xchg
mov
arpl
bound
cli
lahf
jae
es
bound
jmp
rcr
jle
enter
in
not
dec
lahf
mov
cwde
mov
cmp
mov
loope
add
aam
lds
sar
xchg
fnsave
xchg
ja
push
repz
shl
jo
loop
cld
push
dec
outs
out
mov
int
jmp
daa
iret
adc
pop
mov
and
pop
xchg
out
push
push
mov
lods
imul
loop
sahf
jl
sub
into
daa
retf
ins
jecxz
sbb
xchg
js
shl
add
and
add
dec
mov
inc
fcmovnbe
pop
mov
sbb
repnz
lods
(bad)
in
dec
popf
ror
scas
stos
jb
addr16
scas
loop
push
sub
jns
arpl
ja
lea
cmp
leave
std
adc
outs
fwait
test
ss
xor
out
sahf
push
in
popf
xlat
fidivr
pop
ja
jns
inc
shr
mov
stc
cmp
or
or
cmps
mov
mov
xlat
and
mov
repnz
mov
gs
retf
mov
and
push
dec
scas
jecxz
seto
jns
mov
ins
retf
lea
movs
lahf
xchg
push
xchg
sub
icebp
out
add
arpl
cmp
cmp
(bad)
xlat
and
test
cmp
sbb
xor
and
fucomip
pop
xor
sub
add
and
add
add
jmp
call
cmp
aas
out
cmps
or
adc
shl
push
xor
adc
int
jo
clc
push
mov
and
popf
dec
pop
mov
adc
xchg
pushf
sahf
loope
and
dec
pusha
push
pop
pop
push
adc
push
pusha
pop
jl
js
jge
rol
cwde
mov
xor
lods
lea
int3
mov
mov
leave
xlat
push
add
(bad)
adc
xchg
mov
cmc
daa
movs
push
addr16
lods
ret
or
add
gs
loopne
gs
inc
jo
lahf
or
cmp
xchg
push
mov
dec
push
leave
(bad)
sbb
push
aas
or
ret
jnp
add
inc
sti
inc
adc
lock
dec
xor
inc
pop
aam
das
movs
push
cmp
arpl
fcmovnbe
and
std
mov
ret
icebp
cld
out
mov
daa
movs
jp
(bad)
cmp
add
push
sbb
sub
push
enter
mov
mov
pop
cmp
mov
mov
or
rcl
mov
imul
xor
fwait
popa
mov
xchg
test
cmp
shr
inc
and
mov
mov
dec
adc
mov
pop
rol
pop
xrelease
add
sub
loopne
lds
pushf
mov
arpl
cs
xor
inc
out
push
mov
retf
arpl
jge
or
cmp
push
jp
add
jmp
(bad)
std
mov
cmp
push
cld
and
std
inc
jnp
popa
pop
loopne
add
inc
fisub
stos
out
push
int
and
add
repz
push
inc
mov
push
mov
jg
fs
in
sub
movs
test
pushf
jecxz
push
rol
and
sbb
dec
add
mov
mov
cmp
(bad)
pop
mov
mul
mov
xor
push
mov
daa
outs
pop
fbstp
sbb
das
sar
mov
mov
xor
adc
adc
push
add
and
mov
mov
push
and
cmp
sub
jb
pushf
push
add
xchg
popf
movs
dec
sti
mov
mov
and
add
daa
dec
mov
lds
sub
push
popa
lahf
lods
stc
sub
and
adc
push
sbb
int3
mov
data16
or
mov
in
(bad)
xor
or
(bad)
(bad)
(bad)
xchg
ror
sbb
int3
(bad)
push
push
fcomp
xchg
in
repnz
fcom
push
xlat
pusha
imul
fisub
xor
(bad)
(bad)
imul
inc
ja
outs
retf
pop
arpl
aaa
mov
dec
jge
out
jg
shl
cdq
cmc
scas
mov
ror
cmps
and
mov
sar
sub
sub
loop
into
in
stos
dec
repnz
pop
push
rcl
xchg
mov
push
fisub
xchg
aad
mov
xor
les
cmps
imul
int
jmp
cmp
fsubr
dec
popf
xchg
jb
sbb
cmp
sbb
xchg
push
cli
adc
adc
mov
test
out
ror
jge
outs
sbb
xor
pop
sub
or
xchg
(bad)
mul
mov
push
out
cmp
cmp
sub
dec
mov
shl
jge
ins
out
cmp
mul
mov
daa
push
sti
(bad)
mov
pop
jae
jl
fadd
rcr
push
ins
cmp
ret
xor
jmp
rcl
ins
fdiv
adc
push
loopne
jne
mov
out
jecxz
xchg
mov
add
pop
dec
push
lods
sub
ret
fisubr
pop
(bad)
shl
ins
jmp
lock
clc
sub
(bad)
fadd
ror
inc
mov
inc
adc
ins
(bad)
cmp
jne
and
cmp
in
stos
sub
mov
ret
jns
dec
dec
mov
mov
sub
xlat
cmp
mov
cmp
out
and
push
lock
add
fldenv
sub
adc
or
gs
dec
or
mov
xor
push
fld
bound
mov
js
cs
xor
mov
fisubr
clc
jge
mov
scas
sahf
push
out
mov
ja
das
repnz
icebp
test
push
repnz
lahf
push
cmp
fisub
pushf
inc
sti
jno
xor
out
imul
in
mov
int3
pusha
enter
add
retf
lock
sti
out
sar
mov
pop
push
and
sahf
into
cmp
enter
push
sahf
pop
jns
loopne
mov
int
mov
and
mov
test
mov
loop
nop
dec
cmp
aas
jmp
(bad)
repnz
test
mov
in
inc
push
add
rcl
arpl
pop
aaa
lods
adc
mov
fnstcw
add
xor
xor
xchg
popf
scas
and
dec
stos
mov
loopne
pop
jecxz
mov
pop
leave
int
mov
scas
outs
out
in
imul
mov
out
lock
int
ds
js
sub
add
retf
(bad)
xchg
mov
popf
inc
push
ror
shl
push
pop
cmp
cwde
jmp
fdivr
jmp
cs
add
(bad)
test
sahf
adc
gs
xchg
arpl
test
into
leave
mov
sar
xchg
mov
test
les
out
xchg
rcl
out
les
adc
popf
cmp
lahf
pusha
and
push
adc
shr
ret
jl
xchg
pop
shl
and
(bad)
add
movs
add
mov
inc
jno
mov
leave
add
das
jne
jnp
cmps
stc
cdq
test
pop
or
mov
or
jne
scas
rcl
pop
push
sahf
mov
retf
inc
xchg
pusha
cli
dec
test
mov
pop
xchg
loopne
dec
mov
push
int
out
hlt
sti
cwde
pusha
aaa
mov
cmps
mov
inc
mov
jp
int
cmp
mov
cmp
mul
pop
or
xor
sub
mov
lock
sbb
lds
jne
inc
adc
(bad)
outs
xchg
sbb
mov
push
add
jmp
(bad)
fs
inc
mov
push
mov
das
add
out
iret
das
fldenv
pop
call
out
lds
aam
mov
sbb
ins
cld
push
lods
test
iret
and
shl
inc
jbe
out
lods
mov
leave
cmp
call
or
sar
cld
push
mov
gs
rcl
pop
xchg
or
adc
mov
movs
pop
xchg
pusha
sbb
inc
mov
test
add
ds
pop
test
xchg
and
fcmovb
sbb
in
add
xor
addr16
xor
repz
daa
or
or
jmp
jo
adc
leave
call
popf
jecxz
repz
mov
test
fldenv
pop
in
ins
mov
pop
fnstcw
movs
dec
test
cdq
call
nop
ret
cmp
pop
adc
add
mov
inc
lods
test
push
setne
xchg
repz
data16
push
adc
cmps
push
nop
xor
out
lea
xor
pop
mov
sbb
popf
and
jmp
into
or
mov
(bad)
data16
pusha
outs
xchg
(bad)
cmp
push
sub
inc
or
dec
cs
dec
out
mov
xor
mov
shr
lods
mov
add
fs
loopne
jo
adc
jns
mov
sub
dec
jmp
rol
sbb
jmp
fprem1
mov
dec
xchg
pusha
dec
ins
mov
lea
mov
rcr
(bad)
mov
xor
xchg
pop
xchg
or
(bad)
cmps
jecxz
repnz
aas
jb
lods
data16
jmp
push
cmp
sub
sar
(bad)
xchg
sbb
mov
push
inc
in
and
mov
push
inc
leave
jb
adc
add
and
jmp
jl
div
mov
push
retf
add
xadd
fxtract
xchg
xor
loope
js
das
fwait
add
(bad)
xchg
adc
data16
sub
imul
add
jle
imul
(bad)
mov
mov
std
pop
xor
adc
pop
xor
cli
and
cmc
and
scas
adc
cs
mov
push
lods
call
push
inc
xor
test
dec
and
ins
cmp
adc
cs
mov
mov
bound
pusha
test
cmps
fdivr
mov
jns
mov
dec
mov
cmp
loope
and
xchg
stos
pop
or
cmp
popf
mov
(bad)
or
add
jge
sub
or
jae
inc
mov
outs
xchg
das
jns
and
xchg
arpl
xchg
mov
dec
adc
lea
jl
and
call
call
inc
in
repnz
push
(bad)
cld
cwde
neg
lods
dec
cmps
push
mov
leave
rcl
pop
in
cmp
push
jmp
(bad)
aas
sbb
(bad)
loope
pop
or
hlt
rol
and
cmp
inc
aas
mov
sub
mov
test
add
jo
ret
sub
xlat
push
rcr
ds
cmp
lea
push
and
call
arpl
add
dec
adc
adc
loop
xor
inc
fisub
mov
dec
xchg
test
aas
data16
std
scas
aam
test
mov
(bad)
ja
les
clc
jnp
fmul
jl
xrelease
and
mov
jge
add
repz
pop
fwait
and
xchg
in
mov
fs
mov
and
push
mov
xchg
dec
aaa
add
mov
sub
jno
movs
fisub
movs
xor
hlt
or
add
ret
or
(bad)
jge
ficom
jmp
add
movs
mov
imul
dec
pop
dec
mov
sbb
ret
ret
jb
out
pop
fcom
xchg
xor
xchg
or
inc
add
xchg
cdq
jb
leave
scas
push
jmp
sbb
mov
arpl
lds
mov
push
mov
ins
xchg
sbb
xchg
xlat
jbe
test
aam
inc
scas
sub
push
data16
call
mov
mov
and
xchg
jns
stos
pop
cmc
clc
adc
fwait
test
mov
adc
ja
sti
sub
adc
push
lds
xor
jnp
fnstcw
inc
ss
push
jb
dec
and
pop
fsub
les
dec
xchg
sub
pop
das
arpl
inc
inc
aaa
outs
push
popf
mov
retf
cmc
dec
push
arpl
mov
scas
hlt
in
add
sbb
std
mov
dec
mov
(bad)
dec
pop
punpcklbw
pusha
sub
in
movs
jmp
or
or
fidiv
adc
ja
inc
sbb
adc
ss
mov
xchg
mov
enter
outs
loopne
mov
rcr
pop
adc
out
test
fs
arpl
and
xchg
loope
pop
js
inc
rcl
mov
sbb
xlat
mov
mov
mov
xor
jae
nop
sbb
jno
mov
or
call
jo
mov
mov
jae
and
rdmsr
push
cmp
repnz
fld
ins
jge
xchg
aad
out
pop
push
cmc
stc
sub
xor
mov
xor
dec
jl
and
cmp
mov
ror
repnz
push
retf
inc
jo
fsubr
jbe
js
(bad)
jmp
pop
test
jno
ret
movs
mov
test
xor
dec
mov
push
mov
cmps
push
jl
sbb
popa
das
xor
adc
cmp
fcomp
cmc
push
cmp
pop
xchg
add
dec
lods
pop
ds
or
xlat
mov
push
lds
pusha
sbb
dec
test
push
inc
sbb
add
fwait
in
mov
popa
in
add
adc
xchg
push
jmp
rcr
sub
fild
mov
(bad)
movs
jbe
movs
add
(bad)
jnp
adc
inc
pushf
sub
(bad)
jno
stos
hlt
(bad)
je
lahf
in
push
lds
lds
mov
lea
adc
jecxz
out
jae
xchg
popa
mov
sar
push
jp
adc
xor
icebp
dec
fisttp
call
inc
in
das
dec
cmp
retf
push
cli
xchg
into
sub
cmp
xor
sbb
push
shl
aam
in
push
hlt
nop
xchg
pop
mov
xor
mov
or
xchg
or
xor
mov
ds
pop
adc
rcr
out
lods
dec
xchg
jl
lahf
lds
or
push
ret
pop
popf
xchg
jecxz
and
fdivr
int3
aas
and
inc
xchg
in
adc
add
leave
mov
repnz
(bad)
fcom
inc
mov
sub
(bad)
js
call
push
shl
cmp
ret
or
pop
push
in
sbb
mov
sbb
repnz
mov
fild
xchg
or
push
scas
aad
(bad)
retf
leave
xchg
rol
xchg
mov
bound
ficom
repz
inc
es
inc
addr16
daa
aam
(bad)
push
sbb
jmp
and
fld
cmps
jb
push
and
adc
mov
or
jg
jno
pop
xlat
mov
fisttp
push
mov
jge
scas
cmc
hlt
sub
mov
in
je
jnp
jmp
adc
jge
sub
mov
push
pusha
jge
(bad)
dec
inc
jmp
add
test
inc
sahf
inc
xchg
sub
jae
pop
out
fist
xor
arpl
mov
out
ja
imul
xor
dec
shr
mov
shl
in
jecxz
loope
push
out
cmp
scas
adc
xchg
loope
leave
retf
or
add
js
jae
fsubr
cmp
mov
dec
add
sbb
rcr
enter
sahf
lods
push
scas
push
jecxz
and
(bad)
call
(bad)
and
mov
ficom
push
pop
(bad)
out
inc
mov
jmp
push
cwde
fist
add
fldz
ss
mov
adc
push
sub
add
mov
cmps
les
jecxz
push
call
movs
sbb
sub
push
jb
ret
rcr
enter
dec
push
stc
push
(bad)
xchg
mov
popf
lea
out
add
ds
or
aam
fsubr
add
not
sub
ss
aam
movs
gs
dec
dec
jo
cmps
mov
cmc
stc
retf
mov
cmc
cmp
xor
adc
(bad)
retf
movs
cli
pop
xchg
retf
mov
sub
mov
fbstp
jg
rol
hlt
pop
pop
inc
rcl
push
std
ins
fadd
mov
push
mov
sub
cs
shr
std
cmp
inc
mov
sahf
out
adc
pop
mov
pop
xchg
jg
ja
rcl
and
sbb
loop
jae
and
mov
mov
in
cmp
push
mov
ret
sub
retf
xor
jnp
xchg
shl
cld
ds
xlat
xchg
(bad)
cs
test
and
fwait
push
and
popf
sub
sbb
std
push
xor
stc
mov
rol
out
fs
rcr
cmps
adc
cmc
xchg
jg
bound
fs
xor
loope
or
leave
pop
sbb
dec
retf
add
aam
push
mov
push
cs
out
xchg
dec
xchg
fdivr
sub
sub
enter
dec
jnp
stos
shl
div
ja
mov
push
cmps
call
and
in
push
cmp
cli
(bad)
xchg
push
test
jbe
sbb
shr
xchg
or
mov
jp
mov
inc
stos
stos
sub
rcr
in
sub
cmp
pop
mov
stos
add
mov
adc
add
adc
mov
sub
push
lea
jmp
(bad)
(bad)
(bad)
arpl
add
(bad)
div
lods
stos
or
jno
cmp
and
outs
add
inc
into
call
not
mov
cmc
imul
push
movs
inc
stos
add
loope
(bad)
sar
inc
mov
push
mov
sbb
cmp
xor
sub
enter
mov
jmp
rcr
inc
das
outs
out
and
pop
outs
iret
xchg
pop
jmp
add
mov
xchg
call
pop
or
jae
in
mov
(bad)
pop
or
call
dec
cs
std
cwde
xor
push
sub
retf
mov
inc
test
cdq
aas
add
cli
test
add
adc
inc
or
pop
jge
adc
adc
dec
ins
in
jp
in
push
out
and
xor
call
(bad)
fs
and
mov
out
cmp
mov
mov
mov
arpl
call
or
mov
jge
aad
iret
push
test
xor
and
test
mov
outs
dec
mov
ret
lock
jmp
add
dec
and
jns
pop
scas
(bad)
and
(bad)
or
sti
jnp
pop
rcpps
gs
cli
push
clc
mov
inc
sar
xor
inc
(bad)
call
xchg
test
data16
xchg
mul
out
mov
xchg
cs
inc
push
push
hlt
add
into
mov
mov
out
mov
push
pop
leave
jo
jnp
jb
add
jbe
mov
div
hlt
ss
sub
cwde
dec
cmp
mov
retf
std
scas
cmps
cs
ror
std
jmp
int3
dec
and
push
add
pop
cmc
and
sbb
dec
cdq
fstp
or
cmp
leave
mov
jno
pushw
(bad)
jl
sub
fwait
push
imul
cmp
mov
adc
outs
or
pop
clc
xchg
push
add
mov
mov
pop
sbb
cmp
outs
jno
mov
cmp
call
lds
xor
fwait
cmps
mov
(bad)
ss
int3
pop
xor
or
mov
and
clc
loope
cmp
cmps
int3
and
icebp
inc
and
imul
mov
pop
dec
jne
adc
cmps
add
and
jnp
pop
xor
cmps
mov
pop
xor
bts
out
pop
xchg
push
mov
les
out
sub
push
inc
push
pop
stc
pop
daa
dec
jo
jl
stos
xchg
push
sahf
adc
arpl
xchg
cs
inc
std
adc
cmp
inc
mov
pop
pop
mov
data16
xchg
test
(bad)
(bad)
mov
loopne
enter
pop
and
mov
into
dec
in
je
adc
inc
sub
add
inc
add
add
push
and
ret
or
inc
push
or
add
or
add
or
add
(bad)
notrack
cdq
inc
pop
dec
push
or
sub
js
adc
pop
inc
sbb
mov
adc
and
dec
cmp
arpl
adc
and
dec
jecxz
add
xchg
add
add
(bad)
xchg
add
add
inc
add
add
add
sub
dec
sub
and
mov
and
jae
inc
add
mov
push
and
dec
or
adc
sbb
mov
pusha
mov
sub
push
xchg
les
push
cmp
sub
mov
dec
clc
jmp
jo
mov
push
pop
js
data16
jmp
sub
or
lock
xchg
sbb
lock
mov
js
into
mov
ror
and
xchg
lock
adc
das
cdq
(bad)
adc
icebp
stos
sahf
push
adc
loope
test
adc
loope
mov
jne
ret
rcl
rcr
cmp
cmp
xor
ret
sbb
or
sbb
movs
and
rcr
popf
adc
sub
cmp
cmp
vcmpsd
adc
and
sub
daa
sbb
xchg
push
and
pop
repnz
or
mov
sbb
or
and
in
mov
adc
or
adc
outs
push
push
adc
psraw
sub
inc
mov
jo
sbb
push
or
mov
pop
ror
sbb
lock
pop
sub
jb
sub
fs
sbb
addr16
jae
lods
or
sbb
jbe
jo
daa
sub
popa
jne
adc
outs
push
repz
jo
imul
sahf
push
inc
jnp
outs
adc
mov
pop
push
rcl
or
inc
out
outs
retf
inc
test
mov
dec
inc
push
inc
jp
fnstsw
outs
ret
dec
dec
sub
mov
inc
movs
adc
push
push
dec
outs
shr
in
bound
leave
jns
inc
adc
push
jge
mov
outs
inc
test
adc
mov
jno
aam
adc
dec
ins
adc
in
imul
cmps
adc
mov
pushf
xchg
test
xchg
dec
outs
fs
ins
jne
push
mov
repnz
mov
ins
sub
cmp
cmps
arpl
nop
add
push
movs
or
xor
inc
setno
ret
test
ins
jmp
movs
imul
idiv
mov
test
push
mov
cmp
stos
js
sub
in
jne
cmp
dec
cdq
add
jo
outs
add
or
mov
fs
jno
imul
dec
bound
popa
into
dec
outs
test
test
xchg
adc
scas
mov
xchg
repnz
arpl
popf
sbb
test
imul
dec
push
popa
dec
and
neg
in
fwait
xor
lods
push
and
xchg
data16
jb
sub
es
jns
jmp
xchg
in
lods
or
mov
sbb
fwait
push
mov
pusha
inc
fisubr
jne
clc
jae
enter
pop
(bad)
lds
add
xchg
adc
or
not
push
push
xchg
mov
xchg
xor
inc
xchg
inc
ror
ret
mov
and
cmp
mov
ret
sbb
test
sbb
jp
sbb
jns
mov
daa
bound
xor
jo
je
xchg
movs
data16
push
fmul
dec
pop
xor
push
movs
xor
sub
adc
push
dec
dec
test
sar
stos
add
popa
ins
jmp
push
(bad)
xchg
mov
sub
int3
add
inc
in
loopne
cmp
jae
adc
enter
inc
sub
and
shl
jbe
imul
sub
enter
(bad)
push
push
add
imul
pop
mov
sbb
fcomi
or
sub
add
push
das
dec
mov
ja
mov
aam
cs
dec
sbb
call
and
mov
inc
push
stos
push
rcl
push
cmp
nop
push
push
or
clc
inc
push
push
jne
hlt
popf
xchg
push
inc
inc
push
cwde
xchg
pusha
dec
retf
push
repnz
dec
mov
push
cmp
sub
fwait
ret
dec
and
verr
push
inc
mov
adc
push
call
dec
mov
cmp
add
push
enter
rcr
test
xchg
push
std
stos
in
jae
cmps
jns
lds
add
mov
pushf
and
rol
pop
jp
push
pushf
cwde
cld
stc
ds
popa
or
cmp
sbb
aam
fistp
jo
out
mov
aad
in
pop
xlat
sar
jecxz
dec
cmps
push
lock
in
dec
xor
push
cmps
mov
add
iret
inc
sub
pop
cmp
add
sti
adc
dec
test
mov
xlat
ret
movs
sbb
fimul
imul
rcl
out
adc
(bad)
fstp
adc
ins
test
sbb
dec
mov
jmp
ja
jg
xchg
jge
pop
mov
and
enter
push
not
or
loope
int
inc
adc
add
icebp
shl
movs
xchg
ffreep
jle
call
mov
scas
jg
fild
pop
rcr
jne
pusha
pop
fwait
mov
aas
and
mov
sar
xchg
popa
xchg
inc
lahf
push
pop
sub
dec
vpaddsw
add
sub
pop
jecxz
push
push
jge
in
popf
dec
inc
fisttp
cld
adc
push
adc
aam
repnz
ret
push
sahf
scas
inc
retf
inc
ror
pop
lds
js
push
xchg
loope
imul
movs
fnstsw
data16
scas
stc
out
cmp
call
fdiv
push
lahf
dec
outs
(bad)
sbb
mov
daa
aas
jno
(bad)
ss
xchg
imul
push
rcr
shl
test
pop
enter
mov
stos
loopne
jnp
or
(bad)
test
in
pop
(bad)
pusha
pop
out
cmc
mov
mov
push
xchg
test
movs
jp
enter
jge
ror
fiadd
mov
lods
push
jo
mov
out
dec
cli
sbb
ret
xchg
and
dec
ins
mov
xchg
xchg
inc
call
mov
add
popf
jne
mov
push
sbb
into
call
neg
into
push
sub
mov
shr
sbb
out
add
call
mov
aam
(bad)
aam
add
pop
clc
aas
cmp
not
add
mov
pushf
std
test
rcr
pop
jmp
stc
or
not
dec
or
icebp
rol
push
out
sbb
jmp
mov
imul
cmp
lahf
adc
xchg
and
pop
data16
sbb
movs
xchg
sbb
test
rcr
mov
push
in
dec
or
shr
pop
das
mov
jp
retf
jle
stos
out
lock
outs
movs
sbb
push
push
cmp
mov
add
fnstcw
test
push
addr16
xchg
int3
pop
xchg
cli
xor
in
push
xor
mov
jecxz
dec
jecxz
mov
cmp
cs
xor
pushf
(bad)
mov
dec
call
cmp
xor
jbe
test
sbb
or
add
cld
cld
and
popf
daa
stos
mov
xchg
sub
mov
add
or
movlps
and
sbb
popa
rol
dec
ja
sub
jo
cmps
and
and
popf
icebp
pop
hlt
pop
add
cmp
arpl
fild
add
movs
and
in
push
jg
loop
adc
(bad)
repnz
test
pop
xor
adc
xor
stc
leave
xor
jmp
mov
loop
cmc
mov
fld
nop
mov
xchg
pop
fwait
push
jp
mov
jl
out
mov
fwait
(bad)
(bad)
in
pop
push
popf
mov
scas
ins
ret
out
repnz
push
fidivr
call
add
xor
push
mov
mov
inc
rcl
xor
popa
enter
movs
imul
dec
call
inc
jl
pop
mov
ja
jmp
pop
mov
(bad)
mov
popf
xchg
pop
and
cli
int
retf
inc
sbb
add
fnstenv
loope
pop
sbb
jnp
cmp
sub
xor
or
adc
or
inc
pushf
jl
fs
popf
ds
push
adc
dec
xchg
push
scas
lods
leave
out
dec
adc
add
dec
push
jg
in
push
nop
mov
cmps
test
arpl
test
mov
fwait
in
push
mov
out
pop
push
xchg
stos
cmp
or
mov
sbb
cmps
sub
push
icebp
jmp
shl
ror
bound
and
mov
ins
mov
loopne
pop
dec
sbb
test
and
sub
inc
and
ja
outs
jae
adc
sti
xchg
add
adc
imul
mov
int
jnp
mov
add
mov
clc
push
xchg
pop
push
mov
jae
xchg
cmp
dec
add
xor
in
mov
pusha
hlt
cmps
shl
mov
les
mov
ret
into
lods
mov
ins
ja
and
in
jmp
cmp
lods
out
jmp
fnsetpm(287
std
xchg
icebp
jns
mov
retf
jns
push
(bad)
rcr
ss
daa
les
enter
push
shr
mov
jno
aaa
add
dec
movs
mov
pop
cmp
sub
xor
jp
xor
mov
jl
test
sub
pop
dec
bound
call
dec
xlat
retf
dec
adc
out
dec
mov
jle
xchg
pusha
xchg
mov
jno
adc
xor
jb
int3
sahf
mov
jae
pop
push
stos
repz
fnsave
outs
dec
mov
outs
stos
cmp
pop
pop
aad
popa
cmp
test
cli
int
in
call
mov
and
or
pop
test
popa
inc
rcr
inc
popa
jo
fsubr
neg
outs
xchg
jo
pop
jnp
ror
icebp
mov
out
(bad)
std
lahf
jno
ret
scas
xor
enter
stos
sti
jnp
ret
add
mov
in
or
int3
jnp
mov
popa
cdq
or
jno
adc
sbb
sub
cs
push
mov
inc
stos
into
(bad)
aad
stos
test
or
icebp
and
dec
mov
stc
jmp
dec
std
sti
jns
(bad)
stos
xchg
push
aas
es
js
push
mov
xchg
out
pushf
inc
lahf
outs
lods
mov
call
out
pop
or
cmp
ds
mov
mov
pusha
jg
popf
ja
stos
xchg
mov
ret
mov
jns
pusha
mov
jecxz
or
movs
xchg
mov
pop
lahf
icebp
jp
mov
jge
push
imul
fisttp
ss
(bad)
js
cmc
inc
mov
(bad)
pop
ds
int
sub
and
div
and
imul
sbb
adc
test
out
jb
and
aaa
push
mov
ja
inc
mov
sahf
(bad)
jne
mov
and
retf
push
enter
and
jge
mul
cwde
fidiv
(bad)
jns
fbstp
jmp
xchg
sbb
ins
sahf
lahf
call
test
je
mov
sub
push
dec
daa
dec
popa
adc
mov
jl
scas
adc
ror
aas
jb
arpl
or
dec
add
lods
add
xchg
aam
cwde
sbb
xchg
pop
push
call
fbld
pop
sub
into
cmp
push
inc
fwait
das
jae
dec
lods
stos
fxch
adc
dec
or
icebp
inc
pop
rcl
mov
pop
test
jmp
fwait
pop
or
dec
lods
mov
ja
push
pusha
add
enter
inc
jmp
fist
mov
mov
mov
mov
jo
mov
adc
xor
push
add
aad
stc
test
sbb
xlat
cs
pop
inc
adc
xchg
sub
repnz
ins
xchg
aas
sahf
xor
stc
loopne
daa
enter
xor
sub
xchg
int
jg
inc
push
rcr
loope
pusha
movs
xchg
mov
into
sub
aam
ffreep
xchg
lds
jecxz
(bad)
push
jnp
push
lods
jnp
popa
and
mov
xor
outs
dec
adc
ret
mov
icebp
adc
sub
or
adc
bound
mov
cmp
jmp
sbb
dec
dec
xchg
movs
mov
mov
fwait
pop
pop
test
sti
aad
scas
mov
sbb
sub
xor
ror
add
out
cmp
fisubr
pop
xchg
mov
(bad)
xor
jp
jb
xor
cmp
fisttp
push
rcr
mov
xor
jb
js
cmovp
js
adc
mov
inc
scas
stos
push
dec
add
out
and
and
adc
out
sub
ror
into
std
repnz
sbb
cmp
or
pop
shl
jmp
das
cmp
jb
inc
(bad)
jmp
and
push
and
ret
in
add
pop
js
data16
pop
sbb
mov
std
test
repz
cdq
or
mov
cmc
sub
pop
mov
das
push
lds
push
in
(bad)
loopne
jle
pop
rcl
inc
(bad)
repz
fxch
retf
lock
jp
mov
adc
outs
inc
cmps
cdq
or
xor
(bad)
jmp
cmp
mov
ins
lea
sbb
ds
mov
popf
lods
adc
push
xchg
mov
fcmovb
dec
pop
and
das
mov
jmp
sub
cmp
dec
(bad)
ins
add
lds
ret
or
sbb
sub
or
fs
cmp
test
push
lahf
je
out
push
mov
mov
jae
shl
(bad)
das
mov
mov
hlt
dec
add
mov
dec
cmp
dec
aaa
lahf
inc
bound
test
ret
jmp
in
int
adc
push
popw
or
jmp
mov
pop
push
push
inc
test
mov
mov
into
mov
cmp
out
mov
in
psubsw
fsub
ret
mov
out
les
or
push
addr16
cmps
push
into
mov
daa
icebp
sbb
and
sub
iret
mov
or
loope
pop
adc
test
in
pusha
rcl
jno
cdq
retf
dec
dec
(bad)
inc
call
(bad)
in
add
out
xor
adc
dec
sub
aaa
inc
sbb
dec
pop
push
mov
ins
add
(bad)
or
or
rol
pushf
mov
xor
pop
mov
jmp
cwde
sahf
push
fild
pop
dec
fxch
rol
fdiv
mov
rsqrtps
jae
xchg
lahf
xchg
call
mov
call
add
out
fisttp
lea
xchg
(bad)
sbb
adc
xchg
cmp
sub
aas
jno
jecxz
les
jns
ss
dec
dec
js
inc
mov
mov
sub
dec
pop
fst
rcr
cmp
dec
popa
mov
mov
mov
fs
sub
cmc
retf
xchg
xchg
div
std
xchg
(bad)
nop
xchg
ins
jge
(bad)
hlt
mov
xor
xchg
jmp
pusha
iret
lock
ins
cmps
fwait
das
mov
dec
or
pop
inc
mov
fdivr
cld
je
inc
dec
and
mov
rol
sub
ret
inc
daa
mov
mov
and
inc
stos
dec
mov
ss
push
shl
fist
shl
sub
push
les
call
movs
fiadd
out
adc
test
mul
sar
jp
add
add
mov
popa
xor
(bad)
fldcw
push
cmp
add
das
and
test
fs
es
das
in
stos
or
mov
push
adc
loope
in
stc
imul
test
lahf
sbb
mov
cmp
test
jb
aad
sar
jbe
das
jo
aad
jae
sub
ret
mov
je
stos
dec
pop
push
mov
pop
xchg
loopne
rol
lods
shr
daa
pop
(bad)
std
in
dec
sbb
test
push
mov
or
out
xor
cmps
dec
out
ins
int3
xchg
inc
xor
ror
push
add
jp
xchg
or
jno
icebp
(bad)
repz
xchg
lahf
sub
imul
mov
mov
call
mov
cmp
and
adc
pop
cmps
out
gs
test
jb
pop
arpl
rol
in
push
or
ds
pop
sub
sar
xchg
xor
in
call
outs
cmp
shl
sbb
lock
sbb
addr16
in
int
movs
pop
not
and
loopne
mov
cmps
jmp
call
mov
xchg
lock
(bad)
cmp
xchg
sub
fistp
xchg
cld
imul
cmp
(bad)
hlt
mov
mov
pop
cmps
xlat
and
cmp
je
mov
mov
adc
xchg
fwait
shl
leave
aam
sub
lea
(bad)
pushf
ins
adc
lahf
xchg
stos
mov
ss
or
and
loop
xor
mov
cs
nop
enter
ins
call
test
jge
and
jecxz
ficom
es
xor
sub
mov
dec
(bad)
test
test
addr16
pop
add
lea
mov
(bad)
add
jp
pop
into
stos
ret
push
lods
push
cs
adc
push
xor
mov
jns
popa
hlt
frstor
mov
dec
call
or
xchg
add
and
and
movs
cmps
mov
xlat
cdq
xor
lahf
mov
fbld
push
add
neg
mov
push
mov
daa
test
sub
push
sbb
mov
jmp
jg
hlt
dec
in
jns
jbe
cs
rcl
rcr
jmp
pop
push
and
adc
mov
jle
mov
xchg
out
pop
push
sbb
sbb
push
push
inc
int3
or
and
fiadd
dec
mov
sub
les
repnz
ja
outs
stos
sub
cmc
and
cmp
xchg
test
imul
dec
addr16
xor
lahf
sti
test
jp
loopne
mov
dec
sbb
adc
inc
icebp
popf
dec
pop
popf
sar
lods
cmp
retf
in
jbe
inc
and
daa
cdq
sub
outs
loopne
push
cmp
aad
test
xlat
fstp
jno
icebp
(bad)
fisttp
pop
adc
in
adc
xchg
aas
nop
aas
fcomp
div
outs
dec
sbb
pop
mov
adc
push
mov
shr
sub
mov
jnp
popa
or
sub
ret
(bad)
xor
cs
xor
stos
push
xchg
mov
mov
(bad)
(bad)
movs
add
iret
mov
(bad)
addr16
mov
jnp
sbb
dec
push
sbb
adc
out
push
data16
mov
adc
dec
addr16
add
lahf
sbb
vmwrite
xchg
cmp
pop
mov
and
mov
jge
push
popf
mov
loop
cdq
popa
cmp
imul
cmp
movs
xor
lods
mov
cmp
neg
pop
or
mov
es
cmp
push
cmp
xlat
ins
cdq
je
nop
xchg
mov
cwde
stos
jno
cmp
fist
or
and
test
sbb
fdiv
sti
stc
neg
ja
cmp
fdivrp
cwde
sbb
ficomp
inc
(bad)
mov
lock
or
repz
(bad)
ins
cmp
sub
sub
daa
push
inc
cmp
xor
daa
ret
and
mov
mov
hlt
mov
xchg
dec
imul
xchg
push
add
sbb
mov
leave
leave
std
add
mov
out
stc
inc
lock
mov
add
jecxz
retf
or
scas
inc
data16
mov
(bad)
repnz
pop
dec
dec
out
clc
or
shl
sbb
scas
and
stc
ficom
jnp
xor
jae
fiadd
cmc
aam
fwait
sbb
xor
xor
mov
icebp
push
shr
or
stc
fnstenv
(bad)
xchg
lahf
popa
jno
fld
arpl
mov
dec
outs
in
outs
sub
shl
mov
sub
pop
cmps
push
adc
loop
int
sub
sub
leave
xchg
xchg
fisub
ss
out
imul
pop
out
xlat
or
lods
jecxz
pop
fiadd
jne
(bad)
mov
pop
lods
stos
dec
movs
add
(bad)
fs
enter
lahf
fcom
mov
push
jbe
adc
mov
aad
leave
sbb
ret
mov
and
sub
shr
add
into
shr
div
sub
fisttp
(bad)
not
mov
(bad)
mov
mov
ins
sub
lahf
daa
jmp
nop
inc
int3
inc
das
dec
fisubr
sub
jmp
pusha
(bad)
sbb
sbb
or
leave
sbb
add
movs
cld
imul
jmp
(bad)
stos
sbb
jo
sbb
mov
call
jmp
inc
push
xor
mov
daa
popa
sbb
push
push
sub
lea
imul
push
jmp
sub
xor
(bad)
pusha
pop
xchg
and
jae
repz
inc
arpl
imul
sbb
mov
inc
jo
jbe
retf
js
test
inc
test
mov
outs
add
xor
dec
sahf
dec
rol
cld
push
or
or
fsub
mov
mov
cmp
jmp
jno
rcl
push
push
cmp
jle
call
mov
or
sbb
loopne
mov
shl
inc
in
test
push
mov
add
mov
popa
sbb
pop
les
aam
or
jp
ins
loop
jns
sub
nop
scas
les
cmps
fst
pop
jno
scas
pop
push
cmps
inc
arpl
rcr
mov
dec
jmp
or
int
mov
fs
or
push
mov
fadd
lea
adc
mov
js
inc
xchg
inc
mov
adc
adc
dec
jmp
retf
fcom
stos
fstp
xor
movs
sti
pop
iret
jo
call
xchg
dec
and
std
cdq
jp
dec
mov
imul
popf
ret
inc
mov
imul
xchg
fs
stos
cmp
or
fwait
call
or
pop
push
gs
out
aam
pop
outs
scas
repnz
loop
xor
imul
mov
cmp
std
pop
lahf
out
push
imul
ror
push
repz
xchg
scas
es
in
ret
loope
fistp
adc
sbb
adc
push
jge
sub
arpl
jne
scas
in
add
mov
daa
gs
pushf
mov
test
or
fisubr
fst
js
js
pop
pop
das
cli
ds
jmp
cld
mov
mov
mov
mov
lock
shl
pop
shr
mov
(bad)
adc
or
fsubr
cmps
aaa
in
cld
fild
inc
lahf
mov
sub
leave
sbb
cdq
push
adc
lea
clc
and
push
push
pop
ins
test
shl
inc
ja
movs
rcl
xchg
and
adc
out
jno
es
mov
call
add
stos
test
inc
sbb
xchg
and
or
int3
xchg
push
into
xchg
cmps
jnp
jae
jb
dec
daa
rcl
inc
mov
mov
mov
add
retf
mov
add
les
int3
add
in
push
fs
jns
call
les
sub
popa
or
and
adc
retf
mov
cdq
dec
pop
xchg
pop
ficom
scas
out
dec
push
jnp
test
repz
xchg
out
xchg
jl
imul
in
pop
and
inc
mov
out
xor
mov
aas
scas
aam
cdq
jecxz
call
in
xchg
jp
repnz
lds
out
adc
aam
popa
lods
mov
or
loope
sbb
xchg
lock
in
sbb
xchg
out
jmp
cmc
jmp
retf
int
shl
cmp
pop
or
push
dec
fdiv
data16
sbb
dec
dec
clc
inc
inc
jmp
xor
pop
push
adc
imul
fs
mov
push
mov
ins
js
into
pop
das
outs
cmps
cmp
loope
jle
(bad)
push
movsx
xor
mov
cmp
fisttp
(bad)
rcr
pop
fst
or
dec
pop
daa
sti
jmp
xor
adc
sti
arpl
pop
xor
les
dec
jmp
clc
mov
(bad)
bound
sub
pop
jmp
in
stc
pop
jp
test
jmp
pop
aad
outs
dec
push
and
push
cdq
out
xchg
test
stos
xchg
dec
adc
sub
xlat
inc
ret
imul
leave
enter
cdq
cld
dec
jmp
or
jne
scas
mov
mov
xor
dec
xor
push
mov
mov
hlt
or
xor
(bad)
inc
ins
sahf
xor
fld
push
push
out
in
mov
pop
sbb
repz
pop
mov
pop
in
scas
outs
sub
fs
mov
mov
cli
mov
out
aaa
pop
mov
hlt
cmps
ficom
shl
push
dec
ret
xchg
jns
rol
pusha
or
push
xchg
mov
jmp
jge
(bad)
jmp
lds
pop
dec
push
int3
(bad)
out
inc
shl
outs
xchg
lea
inc
clc
ds
repz
inc
cmp
and
push
lock
cmps
out
int3
add
scas
and
sub
out
jae
aad
gs
lods
retf
pop
jl
xchg
and
sub
cs
cli
lds
push
lock
xchg
jnp
pushf
call
pop
out
push
mov
inc
jns
sahf
movs
pusha
inc
and
mov
mov
into
push
les
jl
jns
imul
fdiv
pop
jae
xchg
cmp
lods
mov
adc
mov
xchg
jge
fptan
add
mov
push
xor
xchg
arpl
cdq
mov
das
(bad)
or
or
out
cmps
jo
mov
cwde
test
inc
dec
clc
inc
inc
or
clc
ret
loop
sbb
pop
and
mov
repnz
repnz
add
add
pop
sub
cmp
je
mov
mov
sub
mov
mov
mov
add
mov
cmp
jne
mov
add
mov
mov
xchg
mov
push
push
push
push
call
or
je
mov
mov
add
lods
or
je
mov
add
lods
mov
lods
or
je
push
push
mov
mov
rep
pop
push
push
push
call
add
pop
sub
xor
push
push
xor
stc
jae
dec
je
js
mov
cmp
je
cmp
je
cmp
je
inc
jmp
sub
add
sub
jmp
sub
add
sub
sub
jmp
mov
pop
pop
pop
jmp
push
push
push
call
cmp
jne
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
or
je
add
add
mov
sub
or
je
call
mov
sub
or
je
call
mov
mov
mov
or
je
mov
add
push
push
push
push
mov
mov
call
pop
pop
pop
or
jne
push
push
push
call
or
je
pop
pop
mov
mov
mov
mov
mov
or
jne
mov
add
add
mov
or
je
mov
jns
movzx
jmp
add
mov
inc
inc
push
push
push
push
push
push
push
push
push
call
pop
or
je
pop
pop
pop
mov
pop
pop
pop
add
add
jmp
add
jmp
mov
add
mov
popa
jmp
lea
push
lea
push
push
push
call
add
pop
lea
jmp
lea
test
je
lea
lea
push
push
push
push
push
call
add
pop
lea
jmp
lea
lea
jmp
push
push
mov
mov
xor
push
push
push
push
push
jmp
lods
or
je
mov
add
add
lods
mov
movzx
or
je
cmp
je
cmp
je
cmp
je
add
add
jmp
lods
movzx
jmp
lods
jmp
lods
movzx
or
je
cmp
je
jmp
lods
movzx
jmp
lods
mov
lods
movzx
add
add
loop
jmp
ret
push
mov
pusha
push
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
pop
sub
mov
popa
pop
ret
add
sub
cmp
dec
inc
dec
dec
push
pop
and
inc
push
push
add
sub
cmp
dec
dec
push
dec
push
push
and
and
push
dec
push
add
ins
outs
jb
and
ins
outs
arpl
imul
ins
gs
push
outs
popa
bound
je
and
and
and
je
outs
jne
and
and
imul
xor
push
and
jne
and
and
add
add
add
jmp
jmp
jmp
jmp
jmp
or
add
add
sub
dec
dec
cmp
add
add
add
and
arpl
add
mov
add
add
add
add
push
add
add
add
test
add
add
add
add
add
add
add
into
cmc
and
loope
and
lock
and
add
and
adc
and
push
mul
add
add
add
mul
add
and
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
je
outs
fs
gs
popa
outs
fs
gs
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
ins
inc
ins
ins
outs
arpl
add
push
imul
jb
add
add
imul
jae
push
push
inc
push
xor
cs
dec
dec
add
add
jae
popa
addr16
outs
js
add
add
jo
imul
add
add
add
(bad)
(bad)
(bad)
inc
add
shl
add
add
add
and
mov
and
add
add
add
add
add
add
add
add
add
sbb
add
add
add
push
pop
add
lods
add
add
add
add
add
add
add
add
add
sbb
add
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
les
(bad)
and
sub
and
xor
sub
inc
sub
inc
outs
jo
jb
addr16
cmp
and
and
inc
dec
imul
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
les
add
arpl
pop
outs
je
arpl
gs
add
nop
pop
add
nop
pop
add
jb
gs
xor
cs
ins
add
gs
ins
xor
cs
ins
add
nop
pop
add
nop
pop
add
nop
pop
add
nop
pop
add
add
add
add
imul
jae
add
pop
ins
arpl
popa
je
add
pop
ins
ja
imul
arpl
gs
nop
pop
add
add
add
add
gs
ins
inc
js
arpl
gs
