xor
inc
call
adc
call
jb
ret
mov
add
mov
add
add
add
add
lock
add
inc
add
cmp
inc
pop
dec
push
push
inc
mov
dec
jecxz
sbb
add
push
je
dec
xor
outs
jae
pop
popa
fs
data16
jne
sub
xor
or
push
clc
dec
js
push
gs
ds
cli
mul
inc
outs
inc
jae
adc
ins
sub
test
aaa
jne
xor
mov
fstp
jbe
mov
xor
mov
imul
je
dec
jne
bound
add
xor
push
fsub
outs
pop
jae
push
outs
push
outs
mov
xor
or
sbb
sbb
jns
test
cmp
pop
outs
cmc
inc
hlt
arpl
dec
ins
and
jae
gs
imul
jns
fdivr
inc
jb
outs
adc
jne
ins
je
push
mov
inc
jmp
xor
inc
jb
inc
dec
xor
inc
mov
arpl
imul
dec
jge
jecxz
mov
mov
sbb
adc
and
cdq
pop
or
and
outs
and
adc
sub
jo
push
cmp
push
adc
cmp
sbb
inc
xchg
leave
ja
ins
push
mov
ins
gs
out
popa
and
inc
jb
pop
dec
push
pop
push
dec
push
dec
pop
cdq
xchg
push
imul
movntps
sub
and
xchg
cmp
jne
fs
jae
xchg
scas
call
push
adc
inc
jno
cmp
outs
dec
cmp
and
or
inc
rol
mov
imul
dec
mov
es
push
xlat
mov
adc
data16
lods
test
leave
sub
ss
aam
or
mov
(bad)
push
inc
dec
push
jno
je
pusha
xchg
pop
fs
push
jne
cmp
je
or
push
popf
out
pop
dec
push
mov
fs
cdq
dec
(bad)
sbb
mov
push
push
imul
xor
ret
cmps
jo
or
mov
jmp
sub
adc
retf
dec
xor
dec
xor
mov
adc
sub
ins
aad
pushf
mov
xor
or
dec
(bad)
push
jmp
dec
aad
xchg
sub
cmp
jo
js
dec
sub
or
cmp
sub
mov
mov
into
aad
out
xchg
pop
jmp
sbb
bound
sbb
bound
xor
aas
mov
fwait
mov
inc
or
adc
pop
fucomi
sub
(bad)
adc
std
fs
or
xor
xchg
dec
mov
lds
xchg
or
ret
dec
inc
rol
xor
leave
cmp
or
cmc
cmp
ins
xchg
mov
sbb
xchg
ins
jno
add
pop
mov
xor
and
or
inc
xor
and
pushf
(bad)
nop
cmp
sub
fidivr
rol
das
inc
add
add
call
push
mov
adc
add
or
out
movzx
cmp
test
add
pop
pop
ret
push
xor
xor
push
mov
or
push
push
icebp
fcmovbe
out
enter
(bad)
jb
sub
or
or
adc
out
sub
test
std
inc
add
pop
mov
inc
mov
test
(bad)
movzx
shr
fsubr
or
clc
jae
mov
ins
data16
jo
mov
sar
add
mov
mov
cmp
or
cmp
mov
adc
aaa
clc
and
push
fld
(bad)
mov
sub
pop
cwde
or
push
push
push
cdq
fcmovb
sbb
(bad)
orps
or
ds
add
aam
cld
sbb
pop
inc
mov
add
shl
pop
sub
leave
in
loope
cmp
mov
clc
xor
cmp
cmp
cld
sbb
push
js
inc
inc
or
call
iret
dec
adc
shl
or
xor
dec
jl
pop
bound
inc
push
push
mov
out
pop
shl
nop
pop
or
mov
add
dec
sbb
retf
mov
adc
cmp
ret
inc
add
fiadd
xchg
pop
call
jmp
mov
jge
ins
dec
and
in
call
or
ret
pop
jle
push
(bad)
enter
arpl
test
jne
cli
inc
sbb
push
xchg
adc
pop
lea
xor
jecxz
jmp
mov
ds
add
aas
and
push
jne
dec
adc
mov
add
push
mov
call
test
jecxz
inc
inc
push
lods
mov
fadd
cmp
or
inc
jne
add
cmp
push
push
and
mov
mov
sti
or
pop
add
test
and
lock
push
or
call
neg
and
mov
into
and
lea
rol
add
enter
loop
call
sbb
rol
mov
lea
dec
sbb
xor
mov
jl
(bad)
mov
or
cmp
or
mov
and
push
call
adc
sar
jne
cli
pop
xchg
int3
gs
push
or
mov
xchg
rol
int3
call
adc
in
or
call
fadd
jae
ret
das
mov
inc
cld
clc
cwde
in
xor
mov
and
loop
xor
int3
adc
inc
ror
iret
inc
sub
retf
jne
stos
popa
pop
call
dec
and
repz
sub
cwde
out
gs
jns
mov
mov
jmp
mov
nop
or
popa
add
dec
push
test
sbb
test
pop
in
iret
xor
addr16
(bad)
das
es
fist
addr16
cmp
cmps
pop
mov
fadd
fisttp
and
jne
bound
or
or
call
add
xchg
jl
ret
dec
fst
push
inc
out
push
add
cld
and
mov
sbb
stc
(bad)
out
dec
icebp
iret
add
fisttp
push
jge
lods
push
sub
rol
enter
pop
add
jmp
and
pop
sti
push
push
xor
xchg
push
push
cdq
adc
inc
test
dec
test
dec
sub
jmp
loopne
jae
sub
inc
aam
hlt
push
scas
sti
jbe
fs
add
fld
jb
pop
lods
xchg
adc
pop
call
inc
add
mov
out
seto
shr
retf
xchg
ror
add
add
add
add
add
inc
add
jp
add
add
outs
std
(bad)
push
sub
scas
into
aaa
and
in
pop
popa
xor
test
js
inc
in
mov
sub
addr16
div
mov
(bad)
push
dec
push
dec
cld
pop
add
pop
pusha
aas
and
pop
mov
mov
mov
push
int3
and
pushf
cdq
lea
fldenv
arpl
pop
repnz
movs
push
sub
push
sub
aas
jne
adc
dec
pop
daa
repnz
pop
std
dec
lods
push
mov
aas
sahf
fidivr
adc
sbb
retf
cdq
sub
lods
mov
fisubr
stc
call
cmp
adc
ds
lods
in
popa
stc
mov
dec
mov
(bad)
gs
scas
jno
adc
call
jmp
cmps
clc
mov
mov
push
mov
add
cmp
aad
push
lahf
movs
or
mov
outs
retf
mov
jns
and
or
jbe
mov
out
mov
popa
(bad)
mov
ins
or
into
arpl
jle
fwait
cli
mov
jb
jle
retf
mov
leave
shl
aas
mov
push
pop
rcl
(bad)
(bad)
jmp
adc
cmp
pop
call
xchg
scas
push
push
mov
pop
and
ss
movs
ds
lods
push
jmp
xchg
(bad)
mov
lds
(bad)
jnp
push
xchg
inc
mov
inc
fadd
dec
rol
sub
(bad)
or
mov
iret
cmp
inc
and
push
mov
and
push
or
push
adc
adc
jle
or
dec
and
adc
xor
(bad)
outs
or
imul
and
lds
xlat
clc
or
mov
rcl
jmp
cld
mov
stos
jbe
xlat
mov
add
dec
enter
(bad)
(bad)
stos
in
scas
adc
fisttp
lahf
mov
mov
scas
imul
inc
and
push
pop
nop
fdivp
sub
sub
push
call
jo
int3
jecxz
or
or
adc
imul
inc
add
xor
adc
inc
idiv
mov
jo
pop
loopne
mov
sahf
mov
sub
leave
call
xor
sub
test
xchg
cmp
xlat
and
push
push
leave
jo
jl
std
daa
fcmovne
js
adc
repnz
cmps
sbb
and
xor
rcr
push
lds
stos
pop
mov
sub
xchg
cmp
mov
out
rol
jle
sub
cmp
and
(bad)
cli
jge
addr16
imul
push
push
fisub
inc
sub
push
dec
dec
or
jb
push
popa
xor
lods
dec
and
lahf
pop
inc
icebp
test
push
aas
les
sbb
loop
jb
iret
jo
(bad)
int
imul
in
jmp
dec
fs
add
test
or
fld
repz
fs
sbb
push
inc
(bad)
pop
sub
not
shl
sub
and
xchg
test
xchg
inc
shld
sahf
jne
lahf
jmp
sbb
icebp
and
fidivr
sbb
or
lahf
push
mov
imul
push
or
inc
rol
test
sub
shl
fdiv
sar
jmp
mov
push
push
inc
jmp
fmul
aas
push
cli
cmp
xchg
sub
leave
rol
or
push
je
data16
retf
test
ins
js
cmps
pop
or
aas
mov
push
pop
repz
ret
cld
loop
xor
jle
repnz
inc
fdiv
(bad)
pop
pop
xchg
jmp
bound
aam
sbb
xor
xchg
dec
cmc
xchg
xor
add
outs
popa
xor
xchg
mov
jmp
xchg
lods
fucomp
fisttp
pop
xchg
leave
int
bound
push
fcmovne
fs
jae
in
movs
xor
repnz
cmp
sub
jg
mov
nop
xor
fist
xor
out
jecxz
xchg
cwde
not
fild
push
repz
jp
int
rol
imul
(bad)
pop
hlt
xadd
leave
dec
movs
mov
(bad)
mov
sar
cmps
push
jo
pop
imul
push
sbb
add
jge
cmp
and
sar
push
jmp
(bad)
push
inc
int3
mov
cdq
and
cmp
bound
and
inc
imul
dec
cmp
dec
mov
dec
fnstcw
arpl
dec
push
sar
ds
mov
iret
cmp
mov
push
test
add
push
call
pop
pop
out
jecxz
xchg
jb
or
lea
lods
and
xchg
or
cmc
sub
cmc
int3
adc
cmc
out
std
add
addr16
cmc
ins
shl
mov
cmps
mov
cmp
ins
repnz
ficomp
sbb
daa
mov
xor
cli
out
lahf
push
rcl
xor
loopne
out
xor
je
cwde
jno
in
xchg
repz
lods
or
mov
dec
icebp
sti
add
jne
and
cmps
cmps
js
jmp
daa
jnp
sbb
sar
test
test
jmp
push
fcom
(bad)
lods
jo
ja
test
ret
xor
pop
out
retf
xchg
dec
push
aam
loopne
and
dec
or
test
loop
in
in
push
mov
push
lods
push
cmp
popf
mov
xor
cmp
cdq
daa
adc
int
ficomp
mov
mov
and
in
shl
faddp
cmp
jl
ja
cmps
mov
sti
mov
jg
sar
popa
popa
arpl
push
pop
dec
sub
mov
adc
leave
loop
xor
cvtps2pd
inc
add
jno
fdiv
(bad)
mov
inc
mov
cmp
ret
loopne
das
ds
(bad)
repz
mov
cmp
fild
(bad)
adc
xchg
aaa
mov
lock
neg
adc
fild
jbe
aas
and
xchg
mov
icebp
pusha
pop
nop
(bad)
cmp
sbb
cmp
fistp
inc
mov
push
test
loopne
hlt
cmp
lock
jno
je
sub
cmp
pop
push
ret
ds
les
jmp
cmp
mov
dec
ins
or
lahf
pop
repnz
daa
and
fchs
mov
sub
ds
cmp
xchg
xor
inc
add
cli
rcr
test
xlat
iret
sbb
pop
sub
fwait
adc
retf
imul
(bad)
mov
loope
xchg
cs
ret
imul
add
adc
mov
and
popa
dec
test
xchg
mov
fdivp
push
fldenv
cmp
adc
jge
mov
cmp
xor
mov
enter
inc
lahf
mov
push
mov
xor
das
xlat
mov
repz
xchg
sbb
or
jne
mov
aad
pop
dec
jnp
int3
dec
cmp
lahf
xchg
cs
or
jbe
sbb
add
pushf
and
jp
mov
call
and
iret
jg
dec
dec
pop
retf
dec
das
dec
jbe
ret
xchg
nop
imul
and
js
stos
add
mov
jecxz
mov
lea
add
ret
(bad)
ficomp
imul
fsubr
aaa
xchg
xor
pop
pop
push
add
out
xor
cli
pop
xor
or
mov
out
in
push
in
jl
jle
xchg
inc
fwait
pop
or
cli
dec
dec
rol
(bad)
outs
jnp
and
mov
sahf
mov
scas
push
mov
mov
mov
add
jno
addr16
push
push
ja
dec
fwait
aad
jno
mov
in
call
xor
mov
lods
cli
mov
fisubr
adc
or
out
or
mov
push
sub
fsub
arpl
movs
fdivrp
sti
mov
outs
int
in
sub
lock
push
pusha
inc
or
jmp
add
mov
ss
gs
inc
es
out
data16
iret
xchg
retf
jecxz
dec
stos
popa
jp
dec
arpl
stos
dec
xchg
mov
sbb
aad
je
xor
into
popf
out
push
imul
js
ins
repnz
sbb
adc
xor
cwde
adc
pop
addr16
sbb
xchg
push
iret
adc
(bad)
fcom
(bad)
add
ficom
call
loopne
sbb
or
scas
not
sbb
mov
dec
and
call
xchg
mov
mov
mov
jmp
cli
cmp
call
push
push
cld
jmp
jno
xor
call
div
js
jnp
movs
xchg
mov
jbe
or
hlt
div
(bad)
fisub
dec
and
sbb
cmp
xchg
sub
sbb
dec
jl
pop
ret
mov
je
pop
sbb
sub
mov
mov
dec
mov
lods
mov
mov
sti
add
mov
mov
dec
inc
enter
loop
loop
mul
add
in
cmp
jb
xor
icebp
or
das
es
mov
mov
outs
sub
lock
inc
jns
xlat
mov
dec
adc
in
stos
push
pop
std
leave
sub
sub
sbb
push
aas
xchg
inc
and
iret
cmc
sbb
mov
movs
shl
neg
rol
retf
jp
call
mov
icebp
inc
sub
lea
bound
fcom
dec
enter
outs
mov
cmp
push
popa
daa
mov
mov
add
fmul
daa
shr
dec
outs
and
js
xchg
push
and
mov
nop
mov
hlt
jmp
pop
ds
outs
push
mov
or
rol
xchg
js
mov
das
sub
jno
and
jo
xchg
inc
outs
mov
mov
div
test
(bad)
repz
mov
xchg
mov
pop
cli
pop
dec
out
call
shl
ret
sbb
int3
add
push
xor
mov
enter
add
and
ds
bound
ins
cmp
cwde
jge
fwait
loop
jns
das
ds
cmp
inc
(bad)
fdivr
lods
inc
nop
inc
xchg
add
xor
mov
push
fbld
mov
aad
in
jae
cmp
push
(bad)
(bad)
lock
inc
or
in
inc
mov
into
mov
jnp
add
mov
fwait
adc
mov
data16
or
adc
or
or
push
and
sub
sub
sar
hlt
adc
scas
rol
sub
mov
rcl
jo
pop
push
cs
pop
push
fnstsw
stos
iret
xchg
fcmovnb
rcl
shr
sbb
push
call
mov
xchg
div
ret
fist
rol
imul
pop
jp
(bad)
lods
cmps
out
sbb
xchg
add
add
push
or
js
ins
sbb
fcom
jne
xlat
pop
imul
pop
mov
scas
add
and
nop
cdq
xlat
jmp
mov
push
cmp
fadd
inc
and
dec
fnsave
push
cli
cmps
stos
int
in
sub
retf
add
push
fistp
pop
add
psrad
out
mov
push
dec
add
jmp
aam
cmp
ficom
mov
retf
out
adc
ds
stos
xchg
or
clc
call
add
sbb
jne
stc
ins
test
sbb
jp
dec
adc
outs
fcomp
add
repnz
arpl
fcmovnu
ja
je
sub
fldenv
shl
enter
fldcw
sbb
mov
test
jae
xchg
lods
cli
xor
inc
rcr
xor
(bad)
xchg
pop
pop
sub
inc
and
xchg
fwait
xor
push
(bad)
cmps
pop
add
xchg
add
dec
ins
ret
sub
or
out
cmp
cmp
andnps
jo
aad
push
mov
frstor
retf
daa
into
int3
and
push
xchg
fnstsw
std
push
fcomi
out
mov
nop
mov
fsubr
popf
push
inc
mov
sub
scas
dec
cmps
pop
cmp
adc
lods
daa
dec
enter
dec
(bad)
or
aaa
into
test
ret
inc
dec
(bad)
jecxz
in
retf
push
jmp
jmp
test
retf
rol
bnd
jae
xchg
gs
movs
jae
sub
sbb
pop
stos
add
loopne
sub
inc
fwait
jl
sbb
and
jae
adc
in
inc
test
(bad)
fisubr
add
clc
xchg
add
sbb
out
aam
pusha
jno
stos
pop
js
xor
icebp
xchg
jmp
and
out
push
add
mov
xchg
je
sbb
leave
jnp
outs
pop
movs
mov
sub
add
bound
dec
pop
addr16
add
test
xor
push
pop
imul
pushf
mov
xchg
sar
inc
sbb
inc
pop
push
mov
jae
jne
pop
mov
push
aam
pop
and
push
sbb
pushf
mov
cwde
adc
icebp
xchg
lahf
(bad)
cmp
movs
(bad)
call
xchg
pop
mov
addr16
inc
(bad)
call
xor
and
mov
jmp
dec
arpl
lods
pop
in
or
mov
fcom
mov
fwait
sub
jo
add
and
inc
cld
ins
test
jle
mov
out
out
sub
xor
pop
ja
inc
imul
or
mov
outs
aad
mov
inc
pusha
aad
neg
mov
pop
pop
aas
or
or
(bad)
aas
cmp
mov
xlat
frstor
push
daa
mov
aas
shl
inc
call
add
imul
jle
das
imul
mov
sbb
loop
inc
mov
in
das
icebp
add
xor
xchg
pop
aaa
push
cmp
rcr
jb
in
push
and
cmp
jns
shr
mov
cmp
mov
in
int
fucomp
cmp
xchg
xor
sub
adc
sti
jnp
fsubr
xchg
dec
dec
sbb
mov
ds
pusha
sub
xchg
out
mov
std
scas
popw
idiv
std
xor
pushf
or
fabs
sahf
lock
lea
fld
inc
inc
dec
gs
push
add
jne
add
aam
jle
out
icebp
cmp
or
out
pop
xchg
fisubr
ret
jle
int
shl
lods
(bad)
xor
add
and
shr
data16
inc
or
sub
imul
bnd
(bad)
jmp
jle
cmp
inc
sbb
mov
clc
movs
jg
out
iret
xor
stc
das
(bad)
cld
mov
shl
inc
cmp
std
dec
mov
dec
je
mov
add
imul
(bad)
(bad)
adc
xchg
mov
jp
test
pop
jno
scas
fadd
inc
mov
mov
mov
inc
pop
dec
inc
push
and
popa
repnz
mov
cmps
and
fs
and
icebp
test
xor
adc
cmove
adc
das
jge
dec
jns
les
sbb
movs
add
adc
test
repnz
adc
push
cdq
xchg
cli
jl
cmp
in
sbb
adc
lock
mov
mov
add
int
adc
xchg
sub
call
adc
ffree
iret
add
pop
in
stos
shr
idiv
ds
mov
jnp
into
sahf
call
ds
inc
push
pop
ds
or
stc
dec
jl
pmulhw
rep
addr16
mov
and
cmp
mov
das
xchg
xor
dec
jno
jno
adc
jno
mov
icebp
pop
dec
movs
rcr
lahf
inc
(bad)
pop
dec
in
daa
cvttps2pi
ins
xor
je
pop
shr
cmc
xchg
cs
aaa
test
rcl
popa
sbb
out
dec
sub
mov
cmps
shrd
jecxz
add
or
jle
mov
sahf
addr16
push
lds
out
or
sub
pop
adc
addr16
jp
and
ficomp
jg
lods
jo
mov
test
mov
add
and
adc
ins
inc
and
rcr
add
cmp
cmps
shr
es
push
popf
xchg
int
cmp
adc
dec
xchg
push
jb
and
mov
push
push
push
imul
jmp
out
xchg
push
sbb
ret
daa
xor
rcl
and
nop
jnp
imul
test
jmp
jbe
jno
mov
and
mov
js
adc
mov
sub
mov
xor
rol
fsubr
jl
cmp
out
add
xchg
sahf
push
cli
ins
xor
out
or
jo
stos
mov
add
mov
(bad)
jmp
ins
mov
or
sub
mov
enter
call
test
(bad)
retf
inc
scas
jno
outs
into
dec
pop
mov
cwde
not
in
sbb
xor
push
das
add
jg
pop
xchg
add
mov
ret
jno
sti
xchg
ins
and
xchg
or
adc
mov
adc
test
fistp
inc
mov
pop
das
call
repz
sub
xor
jg
mov
sar
mov
adc
push
aad
test
out
retf
jmp
mov
addr16
dec
pop
cwde
mov
je
jle
cwde
ja
sbb
jmp
mov
enter
loope
jne
loope
stos
rcl
mov
pop
ss
xchg
mov
cld
rol
adc
data16
pop
mov
(bad)
ja
ret
gs
scas
call
mov
and
ret
mov
mov
cmp
or
in
or
and
outs
jecxz
arpl
scas
and
add
ds
rol
outs
repnz
stc
adc
add
mov
cmc
outs
enter
int
add
nop
fmul
xchg
adc
jmp
lea
sub
xchg
adc
test
bound
aad
mov
ror
sahf
lahf
(bad)
jp
stos
aam
ds
ja
adc
push
das
push
ror
sbb
lea
retf
pop
ja
jb
sbb
mov
push
call
movs
xlat
pop
arpl
jge
pop
les
inc
out
mov
call
in
ret
push
jge
repnz
dec
lock
jmp
outs
(bad)
cmp
dec
adc
fs
and
scas
or
xchg
cmc
cmp
scas
adc
imul
pop
and
mov
push
(bad)
cli
mov
add
xor
lock
in
call
shl
pushf
adc
nop
fld
cmps
xchg
jo
xor
mov
sahf
ror
mov
jnp
mov
add
rol
aad
popf
dec
lods
rol
sub
adc
lods
sub
pop
dec
(bad)
push
sub
(bad)
pop
ja
sbb
inc
sbb
es
mov
sub
cmp
(bad)
lods
xor
mov
imul
push
pop
test
mov
mov
imul
adc
jno
sub
cmc
pop
push
sbb
mov
aam
xor
xlat
test
ds
sub
inc
dec
shl
iret
test
mov
or
rcl
sub
pop
in
popf
add
sbb
cmps
push
lea
add
nop
or
aaa
cmp
and
pop
outs
ins
inc
adc
aaa
or
aaa
jno
add
hlt
popa
mov
stos
mov
sbb
shl
inc
cmps
jns
ja
fwait
and
aaa
mov
pop
stos
xchg
sub
dec
xchg
mov
dec
mov
mov
jb
int3
inc
cmc
test
rcr
or
inc
pop
and
test
pop
lea
shl
js
jmp
mov
sar
es
ds
stc
int
aas
and
enter
or
pop
in
mov
cmp
sub
loop
jl
loopne
mov
push
or
dec
popa
mov
xchg
div
cwde
pop
nop
ins
adc
xor
and
jl
(bad)
shl
popa
sbb
(bad)
mov
cmps
and
sub
add
xchg
and
and
jo
idiv
push
(bad)
out
sbb
(bad)
movs
push
fldcw
cmp
arpl
sub
push
fstp
adc
xor
lds
es
imul
mov
dec
cmp
loope
fldcw
ficom
dec
nop
aaa
neg
push
aas
push
not
mov
mov
pop
fwait
mov
add
enter
mov
mov
inc
sub
imul
movs
push
mov
and
add
shl
cli
jl
jge
(bad)
mov
ins
jmp
pusha
pop
pop
outs
inc
pop
pusha
mov
ds
mov
sbb
cmp
pop
cmp
outs
imul
adc
js
dec
mov
add
push
pop
jmp
clc
xchg
mov
bound
test
xchg
mov
and
shr
int
outs
xlat
aam
jne
push
les
pusha
inc
fstp
xchg
pop
cmp
adc
and
inc
dec
jno
inc
mov
push
sub
hlt
and
mov
adc
push
push
cwde
cmp
adc
sahf
pop
aaa
jne
int
mov
sbb
enter
movs
add
in
imul
xor
cld
jmp
dec
xchg
in
xor
mov
sbb
or
xor
cmps
xor
push
cdq
fidivr
into
ins
push
popa
mov
scas
push
cs
add
mov
test
dec
ins
in
out
xlat
mov
sbb
(bad)
dec
sub
add
js
xchg
inc
cdq
inc
aas
loop
or
mov
movs
ins
leave
adc
daa
add
fbld
pop
add
adc
inc
push
mov
mov
push
cmp
inc
cmp
sub
cdq
xor
rcr
pushf
addr16
repz
enter
mov
cwde
or
pop
jne
xchg
dec
test
mov
les
es
sbb
pop
mov
loope
xchg
leave
scas
mov
add
imul
retf
jmp
mov
gs
add
gs
mov
retf
scas
fistp
inc
or
xchg
cmp
jp
scas
sbb
xchg
lds
retf
test
pop
pop
sar
das
pop
push
pop
pop
pop
jl
out
rol
inc
push
jo
fsubr
scas
xchg
ins
pop
fwait
dec
(bad)
sti
push
and
fistp
jl
push
(bad)
mov
adc
stos
fwait
adc
sub
test
jmp
cld
push
sub
rol
or
bound
push
or
jle
cmp
jae
mov
lock
mov
dec
pushf
mov
cld
movs
fimul
xor
push
push
rol
int3
not
outs
and
stos
fstp
add
(bad)
or
add
test
or
push
mov
inc
icebp
pop
jb
add
inc
jmp
test
and
test
mov
clc
loop
and
cmp
stos
test
test
dec
xchg
loope
cmp
jae
jbe
push
xchg
jno
xor
cld
(bad)
gs
xchg
cmp
push
addr16
cdq
out
push
lods
mov
enter
mov
mov
sbb
movs
pop
enter
mov
xor
mov
repz
fist
pop
push
adc
mov
adc
and
inc
call
xchg
or
or
cmp
in
lea
add
scas
sub
xor
xlat
ins
ret
in
stos
jns
das
inc
push
into
movs
mov
clc
outs
loop
pop
test
and
mov
int3
daa
ja
and
adc
cmp
into
movzx
std
data16
jns
pop
dec
shl
call
cs
pop
xchg
jp
sub
fadd
adc
dec
or
aas
nop
aad
hlt
cmp
shl
xchg
out
daa
je
or
push
stc
stc
hlt
stc
and
jl
fwait
xchg
push
mov
sub
ds
or
sub
xchg
add
add
rol
ds
lds
nop
imul
inc
jp
sub
sub
push
sbb
ja
aam
mov
push
dec
movs
inc
das
(bad)
jmp
sub
test
fcom
mov
mov
ror
out
shl
cmc
mov
and
xor
add
and
jecxz
mov
cld
sub
jl
shr
hlt
adc
pop
dec
sbb
arpl
push
inc
xor
push
clc
loop
push
pslld
push
nop
out
jl
cld
or
mov
xchg
popa
popa
push
mov
scas
push
movs
add
inc
ss
xchg
out
cmp
jo
lock
or
(bad)
xor
retf
fisub
and
test
popa
lods
stc
aad
cmps
mul
jmp
shl
pop
mov
rcl
adc
imul
addr16
cmp
jns
inc
xchg
fcomp
jo
arpl
mov
and
jg
and
ror
xchg
xor
std
iret
outs
mov
imul
jp
pusha
pop
mov
mov
hlt
xor
vmptrld
sbb
inc
pusha
sub
cmps
cdq
mov
in
or
(bad)
je
loopne
pop
cwde
push
ins
jb
sahf
icebp
loop
sahf
stos
mov
sti
fild
setae
jne
outs
dec
mov
mov
hlt
cdq
mov
sbb
ins
mov
adc
into
test
(bad)
nop
into
pop
dec
sbb
shl
adc
cmp
sahf
in
int
popa
dec
rol
sub
pop
call
mov
xchg
push
out
pop
aaa
dec
out
adc
fs
add
mov
pop
dec
ds
std
jle
dec
adc
hlt
lods
test
call
movs
mov
mov
inc
sbb
push
adc
dec
mov
test
scas
push
dec
or
scas
pop
(bad)
mov
gs
imul
lahf
retf
jbe
imul
(bad)
inc
enter
retf
xor
dec
jle
ror
or
ins
popa
fld
aam
fwait
mov
loope
into
or
or
sub
ret
push
retf
das
je
mov
ret
inc
sbb
bound
call
sbb
pop
popa
pop
dec
and
jae
mov
fwait
aad
or
mov
js
or
pushf
imul
popf
add
cmp
(bad)
inc
loope
cmp
cmc
out
cld
dec
imul
repz
into
popa
test
dec
addr16
push
dec
and
or
or
call
nop
cmc
mov
and
shr
push
mov
or
mov
jb
xchg
aas
movs
out
dec
inc
xchg
push
movs
in
or
sbb
imul
(bad)
sbb
addr16
push
fnsave
pop
out
mov
stos
pop
test
(bad)
push
inc
inc
add
scas
xchg
pop
or
mov
cwde
inc
jb
jl
add
sub
not
sub
or
iret
pop
lods
jnp
xchg
lahf
xchg
loope
inc
dec
stos
jns
mov
sub
or
and
push
fisttp
push
xchg
push
loopne
fnsave
imul
ins
add
lds
(bad)
sub
ja
add
add
repz
das
add
push
rcr
push
and
pushf
popa
into
or
push
pop
fsubr
je
es
pop
adc
test
mov
and
call
jg
sbb
cmps
cmp
pop
pop
or
mov
iret
cwde
add
mov
fwait
(bad)
out
mov
test
std
ret
xor
jecxz
mov
jne
lods
push
daa
not
(bad)
mul
das
sub
xchg
add
rcr
sahf
push
fidivr
jle
pop
cli
sbb
xchg
loopne
leave
imul
addr16
mov
dec
add
and
adc
xchg
pop
push
inc
sbb
inc
pusha
pusha
xsha256
cmps
xlat
pop
call
add
test
outs
xchg
inc
dec
adc
cmp
lahf
jno
push
arpl
xchg
fwait
xor
push
gs
jge
rcl
mov
mov
jno
neg
dec
xchg
test
(bad)
xor
sub
push
xor
ds
pop
ins
adc
cdq
(bad)
mov
xchg
pop
push
sbb
mov
cmps
dec
xor
mov
clc
push
fsub
sub
mov
sbb
sub
xor
ja
push
cld
movs
inc
cmp
mov
leave
mov
je
pusha
xchg
lahf
fadd
shr
les
adc
or
fyl2x
ds
lahf
out
mov
dec
fs
daa
retf
cmp
popf
ins
or
scas
fld
call
cs
add
cmp
mov
inc
ins
(bad)
mov
push
xor
xlat
fcom
push
ins
mov
std
(bad)
jnp
shl
mov
daa
in
mov
enter
ficom
das
xchg
pusha
iret
mov
sbb
nop
jns
inc
imul
add
shr
movs
dec
in
jg
data16
add
cli
popa
adc
pop
dec
aas
xchg
xchg
(bad)
push
test
cmp
fcom
fstp
push
add
int
xchg
enter
lds
in
mov
push
add
or
mov
dec
in
xchg
sub
fnstcw
mov
lahf
leave
mov
push
pop
or
adc
and
movs
inc
jp
xchg
sub
outs
jno
(bad)
jne
inc
dec
inc
repnz
retf
icebp
push
std
ins
mov
js
retf
pop
fmul
outs
pop
push
sub
lods
push
call
cmp
mov
popa
xor
loop
clc
je
sti
out
iret
in
nop
push
sub
mov
leave
mov
adc
shl
push
movs
jecxz
xchg
xchg
fs
aaa
jmp
ror
in
inc
xchg
jl
jno
xchg
iret
fs
int3
popa
pop
jmp
movs
dec
lock
sahf
ret
popf
popf
xlat
(bad)
and
dec
rcr
jmp
inc
out
dec
sub
scas
dec
jg
sbb
lods
pop
(bad)
arpl
or
(bad)
icebp
arpl
sbb
and
fcmovu
cli
adc
aad
imul
xor
out
sub
fucompp
jle
jmp
repnz
(bad)
push
clc
je
cmp
bnd
jne
out
imul
add
dec
shl
add
repz
inc
push
imul
pop
mov
mov
cmp
mov
adc
cld
sub
dec
lea
push
jmp
or
shl
sub
jo
pop
or
movs
es
test
clc
and
jmp
push
aad
loop
call
inc
lods
lock
add
inc
lahf
adc
add
sbb
xor
sub
cmc
outs
aas
push
and
adc
or
inc
inc
cmp
fs
dec
js
adc
sbb
push
jmp
shr
mov
add
in
cmps
clc
lock
jo
dec
pushf
add
inc
leave
inc
sahf
dec
sbb
daa
pusha
jb
sti
aaa
push
jmp
std
test
xchg
mov
fsub
dec
js
pusha
cmc
add
outs
enter
ret
enter
repnz
lods
pop
mov
ja
inc
jno
loop
mov
repz
data16
inc
pop
movs
cld
add
sar
test
inc
xchg
pop
inc
std
cmp
lahf
mov
xchg
cmp
xchg
inc
fs
repz
and
loope
aam
enter
cwde
fstp
je
arpl
sub
(bad)
jg
jle
add
in
or
lea
or
ficom
pop
ret
daa
leave
and
sbb
mov
test
inc
lods
add
loopne
add
xchg
outs
jl
dec
movs
jnp
cmp
inc
inc
sbb
dec
push
fcomp
cld
shl
pop
lods
and
mov
mov
fs
test
or
inc
xlat
mov
lods
dec
cmp
push
icebp
push
adc
cmps
aad
inc
nop
sub
mov
inc
push
loopne
arpl
inc
sub
psubusb
arpl
sub
mov
cmp
mov
sahf
sub
jo
sub
push
xchg
push
add
stc
add
inc
pop
mov
sub
std
arpl
xchg
xchg
in
cmp
mov
cld
add
into
sub
imul
cmp
sub
out
mov
(bad)
cmc
stos
imul
test
in
outs
ss
pop
cmp
xchg
repz
in
sub
jo
cwde
into
jecxz
cmp
jmp
and
sub
sbb
test
jae
iret
scas
loope
nop
mov
test
in
push
push
sbb
mov
fdiv
xor
jge
popf
imul
fistp
push
aas
push
pop
and
mov
std
mov
adc
xchg
scas
bnd
movs
imul
cmps
xchg
and
jo
das
pop
fst
sar
jp
outs
stos
nop
loope
outs
loope
push
adc
rcr
inc
mov
int3
add
in
fstp
dec
fnstcw
fmulp
fdivr
ror
and
cwde
and
fwait
outs
stos
jo
out
shl
cmp
scas
xor
f2xm1
iret
pop
stos
bound
popf
fidiv
sbb
int3
test
sbb
fmul
mov
cwde
aad
mov
ja
fstp
iret
mov
pop
cmp
mov
scas
fimul
xchg
and
and
or
cmp
loop
popa
cmps
adc
ficom
aad
mov
adc
xlat
mov
cmp
sub
mov
loopne
jb
hlt
push
out
xchg
out
imul
movs
push
dec
imul
sti
adc
sbb
hlt
xor
inc
fs
jge
mov
sub
sub
cmps
(bad)
mov
stos
out
adc
cmp
imul
rol
call
xchg
std
adc
lock
sbb
cmps
add
mov
pop
mov
cmp
mov
data16
push
(bad)
pop
cmp
sbb
cmp
mov
les
push
(bad)
push
jne
push
push
pop
out
bsf
or
xchg
jnp
enter
into
clc
fldcw
xchg
cmp
jge
pop
adc
mov
movs
fld
scas
jle
push
fmul
or
or
pushf
addr16
xchg
pop
jge
dec
jle
lahf
icebp
mov
out
push
cli
jae
sbb
jmp
mov
dec
sti
outs
lahf
dec
icebp
mov
test
mov
adc
pop
xchg
sub
mov
test
scas
push
mov
pop
ins
mov
mov
scas
dec
outs
xor
lock
cmp
out
mov
mov
popf
stos
jmp
push
ret
pop
bound
mov
or
stc
call
mov
mov
dec
not
pop
iret
leave
push
xor
outs
mov
xchg
mov
xchg
call
jecxz
mov
xchg
(bad)
sbb
cmp
imul
icebp
mov
sbb
bswap
(bad)
push
adc
cmps
imul
inc
xchg
aas
push
hlt
(bad)
sti
cdq
adc
out
popf
or
push
pop
loopne
repnz
jnp
aaa
add
jmp
loop
mov
retf
setnp
(bad)
push
iret
sbb
or
mov
pop
mov
add
push
popf
cdq
and
outs
popf
jnp
das
stos
stos
js
in
inc
jp
xchg
das
lea
xor
psubusw
push
mov
inc
adc
mov
cli
outs
push
ss
pop
add
clc
in
pop
and
adc
xor
movs
movs
and
xchg
fwait
call
jp
xchg
(bad)
cwde
fcomp
loop
icebp
jp
(bad)
push
(bad)
pushf
xchg
mov
push
scas
lock
and
pusha
das
cmp
pop
xchg
in
sub
push
ins
sti
call
mov
leave
dec
dec
cmp
test
mov
cmps
loope
loop
adc
dec
cmps
test
or
fcmovbe
ss
cmps
ds
inc
inc
or
mov
jb
jne
jl
test
mov
and
cmps
xchg
mov
mov
push
mov
add
ror
es
stos
fstp
sar
dec
xchg
sbb
das
xor
mov
or
dec
sbb
mov
lods
cmc
mov
imul
movs
cmp
les
repnz
mov
ret
xchg
imul
mov
imul
adc
jns
cmp
test
mov
sbb
cmc
jge
div
(bad)
retf
fmul
jle
cli
call
fcos
ds
dec
or
pop
mov
push
dec
mov
adc
adc
and
enter
ins
cs
inc
push
mov
mov
pop
test
push
add
stc
dec
popa
xlat
sar
clc
aaa
out
mov
lods
adc
mov
sub
adc
jp
jecxz
mov
aam
jbe
cmp
adc
fst
adc
sahf
xor
mov
push
loopne
bound
ins
adc
xor
pushf
add
mov
test
ins
dec
push
jns
xchg
mov
mov
jmp
mov
retf
cld
call
mov
sbb
jo
call
mov
mov
popa
ins
jae
int3
jns
push
popa
xchg
sti
aas
cmp
addr16
xlat
call
jae
bound
jae
inc
sti
cmps
pop
imul
and
sbb
add
pop
ficom
or
into
fst
pop
xor
cmps
leave
out
sub
adc
dec
arpl
sub
retf
iret
xor
mov
jns
dec
adc
dec
out
or
mov
cli
adc
test
movs
xchg
(bad)
ja
adc
aaa
lods
cmp
fcmovnu
mov
test
ret
imul
imul
and
fcmovnbe
enter
inc
test
scas
jmp
push
adc
push
daa
push
sub
adc
or
inc
mov
call
dec
outs
or
jbe
test
jg
(bad)
jae
cdq
pop
fidivr
mov
out
scas
and
fcomi
or
mov
adc
dec
pop
fcom
mov
(bad)
cmp
and
ins
push
mov
mov
mov
add
xchg
stos
adc
jbe
loop
cmp
pop
fld
sti
or
div
ins
rcr
xor
lods
lock
test
xchg
cli
add
inc
xchg
mov
jmp
scas
pusha
cmp
ins
shr
adc
cmps
sar
aas
cmps
jns
int
inc
sbb
in
push
xchg
fist
shr
cmp
loopne
(bad)
loopne
bound
pop
lds
inc
mov
push
lock
(bad)
mov
adc
sub
add
push
enter
jmp
add
pop
aad
pcmpeqb
jns
dec
fisub
cmc
popf
ret
jle
and
(bad)
into
jle
sub
push
xor
aad
scas
lea
retf
or
cdq
pop
jnp
rep
sub
xchg
adc
mov
push
cdq
fisub
cmp
cmps
or
sbb
inc
or
loopne
jb
aam
lods
int
adc
mov
xchg
mov
ret
inc
arpl
push
push
push
or
mov
xchg
fucomp
push
pop
ins
adc
ja
jo
adc
dec
adc
xlat
push
cdq
cmc
cli
mov
xchg
push
xor
popf
js
mov
enter
lods
push
dec
stos
and
cld
cmc
adc
xor
test
fwait
and
retf
sub
add
fisttp
jl
or
in
mov
test
mov
int3
cmp
fucom
mov
xchg
sahf
pop
and
cmp
xchg
dec
cmp
mov
mov
inc
adc
inc
gs
sti
cmp
pop
out
mov
pushf
pop
movs
adc
pop
sar
leave
or
and
loopne
popf
hlt
cmp
mov
pop
mov
dec
in
or
shl
enter
xor
sub
jge
popa
dec
jnp
out
mov
cmp
xor
call
repnz
iret
ins
pop
and
jo
xor
push
sbb
in
test
pop
xor
loope
aad
mov
dec
mov
test
shr
fisub
hlt
ds
dec
loope
mov
inc
mov
into
sbb
jne
pusha
idiv
xor
sbb
jmp
fisub
(bad)
cli
cmps
rcl
add
dec
dec
cmc
into
pop
ins
stos
and
nop
imul
mov
xchg
sar
jo
pop
push
mov
jmp
jp
add
sub
and
jno
xchg
push
add
dec
jl
add
rcr
add
lock
call
arpl
cmp
sub
sbb
js
sbb
hlt
push
xor
outs
lea
sub
(bad)
xor
and
sub
xchg
mov
sub
mov
fwait
xchg
sbb
jmp
jmp
call
es
lods
mov
jge
xor
add
das
mov
push
or
push
bound
aam
in
pop
pop
loopne
rcr
shr
pop
daa
aam
lock
hlt
xor
xor
lods
sbb
push
inc
adc
push
jl
cli
movs
push
dec
movs
or
neg
or
cs
xchg
and
pop
or
out
popf
shl
popa
add
push
in
sbb
retf
or
jg
xchg
xor
jne
mov
push
lods
imul
frstor
push
pop
mov
repnz
mov
xor
dec
call
inc
push
icebp
popa
mov
mov
rol
cmps
call
(bad)
jae
das
enter
jno
into
outs
test
test
mov
imul
outs
cmps
iret
jb
sbb
or
sub
and
adc
sub
sub
xchg
(bad)
jb
fist
(bad)
int3
cmp
fidiv
fwait
shl
xchg
aaa
cmp
and
sbb
popa
fs
outs
dec
push
ins
outs
cmp
jecxz
lods
add
mov
or
retf
nop
data16
cmc
xchg
lds
push
imul
mov
mov
sub
ret
mov
ret
dec
aam
xlat
cmp
ret
lds
and
fdiv
out
and
push
xchg
clc
inc
sti
xchg
mov
cmc
repnz
adc
mov
xor
add
daa
iret
mov
mov
call
pop
lods
push
mov
cli
pushf
cwde
in
mov
mov
test
jl
mov
inc
repz
adc
xchg
xor
div
jle
jno
mov
das
sar
int3
or
mov
pop
inc
push
out
in
mov
xchg
imul
jnp
imul
and
dec
adc
mov
popa
jmp
icebp
gs
push
inc
call
mov
fstp
or
sbb
fwait
sahf
lahf
cld
dec
mov
inc
or
cmp
jbe
(bad)
xchg
or
ins
ss
cmp
shl
fstp
or
cmc
mov
aas
sub
std
xlat
cmp
jmp
jnp
add
sbb
xchg
mov
xor
jecxz
loope
inc
adc
es
pop
addr16
pop
repz
jo
xor
mov
aad
loopne
push
stc
mov
test
push
outs
push
push
jo
pop
int
pop
push
vpaddb
dec
sub
adc
fld
ret
dec
cmp
sub
push
shl
call
nop
aas
mov
repz
sbb
call
dec
fisub
and
inc
jmp
lock
mov
out
jecxz
adc
neg
mov
and
and
out
adc
mov
push
xor
mov
js
and
or
xor
dec
daa
stos
ret
lds
in
retf
stos
push
test
cmp
adc
out
cs
adc
outs
jmp
aaa
ins
lea
sbb
mov
popf
cmp
sub
push
mov
scas
movs
xchg
jnp
sub
jo
test
out
dec
mov
dec
or
es
xlat
fcom
add
sub
lds
push
xchg
cmp
push
adc
mov
dec
retf
sbb
xor
imul
aam
or
push
(bad)
(bad)
adc
nop
div
cmp
and
mov
pop
xor
sub
ret
dec
pop
inc
(bad)
jecxz
enter
js
ins
in
inc
loopne
lds
test
call
call
(bad)
push
pop
outs
mov
adc
pop
mov
jns
mov
test
xlat
jmp
ficom
lahf
adc
inc
inc
mov
fst
mov
in
test
lds
push
push
push
sub
frstor
aas
xchg
xchg
ficom
cmp
push
mov
and
sbb
out
mov
in
and
pop
sbb
mov
xchg
xchg
mov
pop
inc
pop
mov
imul
out
ins
jae
imul
aam
cmps
push
sbb
fbstp
repnz
ins
push
mov
ret
mov
sbb
add
pop
lods
int3
adc
or
jbe
push
loopne
jmp
push
or
jnp
cwde
dec
mov
adc
lahf
ret
push
test
mov
bound
mov
sbb
jmp
stos
pushf
shl
fucomi
push
and
test
mov
ss
push
inc
adc
pop
inc
sbb
mov
push
adc
or
test
xchg
jae
aas
pop
ret
outs
mov
loop
sbb
and
cmp
and
(bad)
(bad)
outs
push
inc
push
lahf
xor
sub
pop
rol
inc
mov
std
call
sub
inc
stos
je
cld
jnp
pop
out
or
cmps
ins
mov
fs
aas
dec
daa
div
push
lods
or
push
jle
cmps
fbld
cwde
iret
mov
mov
or
xor
dec
inc
aam
add
rcl
adc
sbb
(bad)
fwait
pushf
pushf
mov
mov
shl
ds
hlt
push
leave
div
or
out
arpl
popa
icebp
push
xchg
pop
stos
mov
xchg
add
rcr
out
mov
jb
and
pop
cmps
out
lods
push
inc
cdq
lds
mov
cld
icebp
push
xor
adc
inc
inc
jmp
inc
aaa
icebp
or
sbb
xchg
loop
jmp
mov
adc
call
pusha
xor
cmp
fidiv
arpl
ror
jle
ror
mov
mov
pop
push
push
pop
(bad)
cwde
sub
cmp
out
cdq
sub
mov
enter
pop
aad
mov
mov
test
cli
inc
mov
xlat
add
fistp
pop
pop
or
les
fwait
sub
es
gs
dec
xor
clc
or
(bad)
std
loop
and
test
sub
repnz
imul
sub
arpl
mov
ror
add
dec
inc
or
shr
add
adc
sub
cmovno
(bad)
sub
inc
into
xor
dec
fistp
icebp
fist
(bad)
inc
popf
ss
popf
mov
fld
pop
out
data16
cmc
xchg
or
cs
add
sub
addr16
cmp
fs
dec
cli
(bad)
cmp
push
retf
js
inc
pop
in
mov
mov
cwde
ficomp
or
mov
xchg
add
out
fwait
mov
imul
sbb
add
mov
rcr
(bad)
hlt
fidivr
fcom
loop
mov
mov
aas
pop
mov
sbb
fbld
cwde
mov
ficom
jp
popf
xchg
cmp
hlt
cmp
mov
pop
pop
mov
in
inc
dec
lds
fisttp
xchg
inc
aam
add
hlt
or
xchg
movs
mov
mov
xchg
jle
ret
int3
cli
pop
iret
jbe
jns
lock
repz
adc
pop
mov
mov
sbb
mov
test
mov
or
out
push
or
push
shr
in
imul
inc
sub
pxor
icebp
out
mov
popf
aas
(bad)
or
popa
repnz
loop
or
push
and
out
push
pushf
aad
pop
mov
test
push
adc
int
mov
cwde
mov
push
add
call
jge
iret
sbb
mov
vpackuswb
bswap
xchg
inc
addr16
pusha
aam
mov
jmp
out
in
mov
loope
mov
retf
into
mov
jmp
xor
sub
xchg
fxch
ins
stos
imul
or
xchg
adc
push
pop
xchg
std
test
cmp
or
mov
jecxz
(bad)
(bad)
jbe
mul
pop
and
sub
xchg
jl
mov
and
jae
sub
ja
add
popf
retf
imul
ficomp
movs
lods
and
idiv
je
ficomp
cwde
push
cmp
cmp
jo
not
mov
popa
arpl
mov
add
or
ss
pop
dec
fcmovnb
jne
inc
pop
xchg
mov
shl
(bad)
shl
scas
jle
outs
(bad)
jno
cmp
das
adc
push
cs
(bad)
adc
retf
pop
xchg
sbb
clc
loopne
nop
retf
in
out
dec
push
mov
jmp
loopne
dec
pusha
push
mov
xchg
jmp
mov
push
cmps
dec
push
mov
cmps
fbld
ds
push
(bad)
dec
xchg
mov
adc
mov
pop
shl
fsub
ret
fs
sbb
push
sbb
push
mov
repnz
(bad)
loope
not
mov
hlt
out
shl
loope
pop
fcmove
cld
and
jp
jge
call
iret
xchg
adc
pop
xor
sub
jne
sub
(bad)
sahf
pop
pusha
fst
sahf
inc
and
outs
movs
mov
hlt
push
jno
adc
in
(bad)
xor
xor
jecxz
xor
pop
(bad)
and
fs
clc
add
cmp
adc
xor
sbb
adc
mov
out
xchg
sahf
not
dec
shl
fst
lea
sub
push
jmp
clc
jp
inc
fcom
in
outs
pusha
imul
push
nop
ins
sti
int
cmp
rol
pop
xor
sub
xlat
or
adc
mov
ret
rcl
(bad)
push
(bad)
bound
test
mov
out
pop
(bad)
jmp
mov
cmp
fwait
in
pop
cmp
add
(bad)
aas
imul
lahf
pop
mov
test
fistp
popf
xchg
ss
movs
sbb
scas
push
jns
in
jbe
repnz
adc
push
jmp
fisub
scas
fist
jnp
jbe
lods
(bad)
fstp
mov
mov
mov
mov
cdq
jno
cdq
mov
push
pop
jmp
cmp
icebp
fiadd
loopne
adc
jmp
adc
std
neg
in
neg
jmp
fsubr
jne
xchg
mov
ret
rcr
push
xchg
adc
mov
sub
sub
or
dec
cmp
gs
mov
cmp
aas
and
ficomp
inc
cmc
pop
fcomp
ror
gs
xor
add
mov
ins
jne
push
xchg
push
imul
inc
mov
add
nop
shl
or
je
call
in
adc
adc
fidivr
xlat
test
lea
(bad)
idiv
or
ret
cmp
ins
sbb
jp
or
mov
inc
ret
not
xchg
adc
and
pusha
jecxz
js
mov
arpl
popf
or
out
push
mov
ds
mov
xchg
jp
std
retf
test
add
test
push
je
movs
addr16
dec
adc
or
mov
sbb
sub
call
push
sub
sub
mov
cdq
outs
xchg
pop
jno
mov
push
scas
or
ins
int
or
retf
xchg
retf
adc
xchg
pop
jecxz
retf
xchg
arpl
push
jmp
les
cmp
gs
btc
outs
xchg
fldenv
into
mov
adc
rcr
int
mov
ret
in
fsubr
(bad)
push
mov
mov
cli
push
in
ins
push
mov
pop
aad
adc
mov
pop
cmp
stos
int
fdivr
jmp
push
iret
pop
dec
sar
fld
js
adc
icebp
push
outs
cdq
xlat
xchg
fsubrp
inc
push
pop
adc
push
(bad)
leave
xor
mov
cli
xchg
dec
mov
js
and
push
arpl
push
(bad)
scas
mov
adc
popf
iret
loope
jmp
lock
xor
mov
push
lods
int3
xlat
retf
sub
jle
pop
je
cmp
and
push
loop
mov
int
es
mov
(bad)
mov
pop
push
inc
or
test
(bad)
je
in
inc
retf
dec
xchg
mov
retf
pop
pop
shl
push
mov
adc
cmp
adc
dec
test
leave
test
loop
loopne
fiadd
(bad)
(bad)
sbb
int3
push
adc
cmp
call
push
jae
fsubrp
add
lahf
push
loopne
fxch
inc
push
ds
mov
xchg
jmp
test
inc
shl
shl
dec
cmp
jmp
xor
add
fld
out
int
in
xlat
xchg
inc
inc
mov
xchg
arpl
test
js
and
aam
and
les
repnz
mov
adc
xor
shl
push
sbb
fistp
cwde
dec
call
cs
or
ds
test
sub
stc
gs
nop
in
adc
xchg
popf
(bad)
outs
xor
push
push
mov
dec
test
cmc
int3
push
int3
mov
or
inc
call
aas
mov
mov
xor
fwait
sbb
sbb
adc
out
sub
pop
inc
push
test
mov
mov
inc
or
enter
dec
scas
shr
xchg
mov
repz
jb
enterw
xor
mov
jne
fdiv
sbb
mov
mov
imul
je
add
pop
test
repz
movs
fsub
cmp
pusha
adc
push
mov
in
sub
clc
pop
in
mov
xchg
mov
mov
mov
xor
push
xchg
mov
sbb
xchg
sbb
xchg
adc
pop
shr
sar
xor
pop
dec
icebp
cmp
xchg
lods
retf
inc
test
retf
push
cmp
test
xchg
ins
mov
and
movs
popf
(bad)
ja
pop
add
mov
ror
in
cmp
jmp
mov
add
aam
add
push
mov
push
add
jmp
hlt
mov
popa
outs
shr
stc
mov
outs
mov
add
(bad)
rcl
sub
pop
cs
(bad)
loope
in
in
call
add
imul
jbe
or
lods
(bad)
mov
dec
xchg
xchg
lahf
out
adc
aam
inc
fild
xor
pop
jecxz
ds
fwait
cld
pop
jmp
stc
cmp
lea
fwait
jmp
gs
push
pop
dec
clc
pop
movs
int3
inc
xchg
pushf
test
repz
xor
push
jno
std
dec
add
pop
arpl
xchg
adc
mov
mov
and
dec
inc
rol
adc
adc
jmp
xor
data16
jle
adc
pushf
jmp
pop
mov
add
es
mov
fcmovnb
movs
ret
mov
adc
call
pop
loop
js
ret
push
sbb
add
inc
cdq
dec
fwait
repz
aaa
add
push
psrad
je
outs
arpl
xor
add
lock
mov
das
shr
je
das
xchg
push
xchg
jno
nop
fst
mov
cmc
aam
ja
push
test
push
pop
rcr
leave
xchg
add
mov
int
push
add
mov
inc
test
mov
dec
call
sub
rcr
adc
test
bound
das
pop
dec
dec
push
add
cld
inc
xchg
dec
dec
cld
add
xchg
cmp
push
aad
test
jg
lock
dec
and
xchg
xlat
mov
push
pop
ja
jl
aas
pop
xor
(bad)
push
xchg
pop
cmp
popa
(bad)
sti
cmp
adc
adc
sbb
leave
jmp
adc
hlt
push
jmp
mov
adc
ins
pop
in
xchg
test
mov
adc
push
jne
sub
retf
retf
jg
inc
loop
dec
adc
xchg
cli
nop
mov
mov
or
add
sbb
popa
mov
cmps
int3
int
jns
push
out
xlat
mov
repnz
lock
ret
mov
add
fsub
add
mov
xor
lahf
cmps
adc
mov
lods
pop
call
loopne
jmp
dec
lea
and
jns
fs
fwait
dec
pop
dec
inc
cmp
test
mov
pushf
mov
sub
mov
mov
xchg
outs
mov
fstp
sub
rcl
sub
gs
adc
sahf
movs
in
jge
dec
bound
test
cmp
sub
daa
fdiv
sub
cmps
jmp
jmp
cmps
sub
mov
cmp
xor
dec
das
ds
dec
ins
ins
mov
pusha
loopne
(bad)
mov
jne
pop
adc
inc
add
fmul
mov
or
es
pushf
mov
add
imul
imul
jae
stos
xor
pop
jns
es
rdtsc
scas
ss
push
dec
push
sub
daa
push
(bad)
push
fild
pop
test
(bad)
cld
add
or
out
xor
jns
push
das
xchg
daa
je
out
jl
xor
mov
adc
mov
mov
(bad)
out
add
rcr
adc
std
xor
addr16
sbb
mov
mul
call
into
jmp
sahf
jbe
cmp
cmc
xchg
inc
cwde
jnp
into
jmp
mov
pminsw
add
sbb
push
push
push
xor
sbb
popa
out
ins
clc
xchg
hlt
popf
movd
pop
mov
mov
sub
cmp
mov
(bad)
lock
in
aam
jne
pop
lods
(bad)
jge
ds
daa
xor
out
xchg
xchg
push
outs
sub
aas
sti
test
lods
popa
cmp
(bad)
iret
mov
and
push
lea
mov
xor
int3
stos
jmp
mov
mov
out
adc
dec
mov
adc
push
push
push
into
and
mov
int
mov
dec
adc
jecxz
and
or
sub
shr
cmp
arpl
inc
cmovbe
stc
sub
push
fwait
aas
add
mov
cmp
mov
adc
outs
mov
adc
add
cli
lds
int
mov
sahf
jo
enter
add
or
pop
test
xchg
popf
jecxz
(bad)
arpl
inc
inc
dec
movs
scas
add
es
cmp
and
or
inc
popa
xchg
out
mov
test
sub
dec
mov
loopne
sbb
inc
add
ret
loopne
ret
pusha
sbb
in
(bad)
enter
and
pop
jecxz
(bad)
test
out
dec
add
mov
sbb
jp
dec
jecxz
fdiv
sub
mov
inc
pop
and
or
inc
push
cmp
push
popf
imul
inc
aam
ins
jle
das
bound
(bad)
into
xchg
xor
pushf
inc
lahf
scas
jmp
mov
jge
ror
cli
mov
xchg
pusha
cli
and
les
shl
xor
loopne
iret
jo
mov
xchg
push
ret
movs
xchg
lock
pusha
nop
fdivr
les
sbb
or
jo
mov
iret
lock
lods
test
xchg
push
xchg
ins
(bad)
mov
mov
arpl
into
mov
cmp
js
lds
adc
cli
fstp
(bad)
scas
jne
push
pop
sub
jl
xor
stc
adc
outs
mov
pop
mov
mul
jle
mov
lods
xchg
leave
in
imul
add
mov
ret
inc
jmp
movs
or
jp
arpl
mov
sub
sbb
sbb
mov
loop
(bad)
sbb
inc
pop
push
jo
pushf
je
add
repnz
ss
pop
les
xlat
fcmove
adc
in
mov
pop
or
mov
into
jle
shl
das
adc
addr16
lods
retf
cmp
mov
lahf
es
stc
push
add
mov
in
add
pop
scas
cld
mov
add
aad
inc
leave
je
mov
sbb
rol
jbe
retf
mov
dec
cwde
jl
add
xor
loop
(bad)
add
mov
repz
push
sub
or
aas
popf
(bad)
mov
xor
mov
adc
dec
adc
ds
mov
daa
sub
cmp
cmp
retf
(bad)
cs
scas
int
int
inc
popf
or
or
aaa
jmp
movs
mov
test
cs
add
xchg
mov
pushf
xchg
inc
mov
xchg
imul
hlt
rol
mov
sub
mov
imul
sub
in
aad
sub
fiadd
push
clc
jb
cmp
(bad)
dec
inc
in
dec
xchg
shr
sub
mov
lds
pop
xor
imul
pushf
mov
push
dec
pop
xchg
cmps
push
pop
jp
xchg
xor
jbe
nop
mov
test
jmp
enter
mov
xchg
cmp
pop
(bad)
mov
fdivr
mov
mov
dec
enter
popa
lahf
inc
test
adc
cmps
add
sbb
lds
(bad)
aad
leave
aam
sbb
cmps
shl
or
ins
(bad)
xlat
push
cli
push
fimul
stc
cdq
jbe
test
inc
das
add
dec
ins
rcr
and
cli
pusha
xchg
jb
daa
ins
(bad)
sub
mov
inc
and
push
sbb
dec
jb
xchg
push
out
std
ins
outs
xor
call
dec
xchg
(bad)
mov
outs
pop
icebp
rcr
retf
sub
cmp
shl
in
mov
mov
pop
jno
mov
jmp
pop
jno
dec
or
adc
rol
mov
fstp
jecxz
sbb
sbb
ins
mov
jo
shl
mov
stos
mov
and
adc
out
fwait
sbb
pop
cmc
pop
mov
jecxz
(bad)
loopne
jno
jb
sti
add
cdq
stc
xor
sbb
jecxz
and
stos
xchg
sbb
mov
test
xchg
rcr
add
(bad)
into
add
retf
shl
stc
mov
sbb
into
sahf
lahf
inc
jl
lods
aaa
inc
lds
sub
mov
xchg
sbb
xchg
xchg
sbb
jp
jle
push
movs
push
mov
add
ret
sahf
mov
sar
clc
ins
lock
cdq
loope
xor
cmp
fimul
mov
out
mov
(bad)
fdecstp
test
or
push
jnp
pop
imul
and
cmp
stos
adc
mov
mov
xchg
test
lods
(bad)
in
ror
jo
mov
in
aas
stos
mov
data16
cmps
popa
push
or
jb
sbb
fisttp
fidivr
push
jp
mov
pusha
add
mov
or
mov
(bad)
imul
cmp
movs
lods
stc
(bad)
aaa
pushf
sub
popa
add
ror
pop
arpl
aas
jecxz
add
xchg
adc
test
pop
ret
add
mov
jbe
enter
mov
fadd
leave
or
movs
push
mov
or
(bad)
daa
scas
sbb
push
aad
mov
bound
inc
(bad)
fsubr
pop
gs
in
sbb
mov
and
mov
xchg
les
sub
mov
pop
pop
jg
lods
lock
mov
xchg
or
es
jae
mov
xchg
cmc
int
jno
add
fbstp
pop
repnz
dec
add
leave
lods
test
push
and
(bad)
sbb
clc
aaa
adc
push
out
fsub
es
xor
jno
or
jo
mov
lahf
and
fild
sbb
xchg
sub
dec
add
fdivp
fdivr
mov
nop
neg
es
fild
mov
mov
push
js
and
jne
fist
scas
jmp
sub
inc
push
out
sub
dec
cmp
ins
sbb
popa
and
je
adc
push
and
adc
mov
mov
mov
sbb
pop
dec
mov
adc
ds
in
hlt
fcomp
xchg
add
mov
lock
idiv
xor
lea
das
icebp
(bad)
adc
jle
jecxz
pop
sbb
clc
jae
in
ss
adc
pop
and
xchg
js
or
int3
imul
push
sbb
cmps
repnz
ja
inc
sub
lods
mov
lahf
mov
inc
ss
sar
mov
and
leave
sahf
sti
pop
push
ret
imul
jg
call
and
out
imul
lahf
cmp
js
mov
(bad)
pop
xor
push
das
dec
inc
adc
or
rcr
test
hlt
jbe
sar
(bad)
xchg
imul
ret
add
jge
sub
ret
inc
push
icebp
jnp
(bad)
mov
call
pushf
mov
xor
pop
xor
stos
daa
movs
jne
inc
jo
mov
fs
std
jbe
and
mov
xchg
imul
cmp
mov
out
inc
repz
mov
in
dec
mov
fisub
dec
xchg
pusha
mov
mov
cmps
sahf
stos
mov
cmp
js
rol
adc
fild
test
xchg
lock
adc
lahf
add
(bad)
adc
ss
mov
frstor
in
xor
ins
stos
ins
das
mov
sub
int3
xchg
add
jbe
cmps
fldcw
push
pop
scas
push
rcl
ret
pusha
mov
fld
and
mov
inc
sbb
mov
push
cdq
cmp
fld
fistp
cmp
lahf
stc
or
lods
mov
mov
xor
repnz
out
jnp
adc
rcl
iret
fcmovnu
mov
loop
int3
je
sbb
dec
je
sub
push
sar
bound
or
adc
dec
loope
outs
inc
(bad)
sub
fcomp
aas
(bad)
push
jmp
test
jae
movs
mov
cmps
jnp
mov
cs
pushf
dec
cmp
jno
pop
cs
add
daa
sti
mov
mov
xchg
pop
das
mov
fwait
test
repnz
outs
je
fmul
(bad)
xchg
lds
cmps
sbb
(bad)
js
rol
imul
add
lock
cmp
inc
and
aad
and
iret
hlt
nop
iret
adc
nop
cmp
dec
dec
ror
or
xchg
xchg
retf
test
ficomp
aaa
stos
int3
nop
in
(bad)
xor
jno
push
in
dec
fwait
cmp
arpl
and
push
push
pop
std
pop
mov
mov
mov
icebp
gs
int
jbe
outs
push
mov
cmc
adc
daa
sbb
sub
test
add
jmp
cmps
and
loope
adc
sub
(bad)
(bad)
sti
xlat
into
xor
add
icebp
in
dec
add
or
mov
ja
popa
aam
jp
lahf
xchg
mov
xchg
sub
xchg
je
jns
hlt
dec
jno
mov
mov
cmc
daa
shr
xchg
stc
jmp
mov
out
int
fmul
jo
inc
xchg
arpl
shl
ds
fist
imul
push
ins
ja
jge
pushw
push
fldenv
(bad)
repnz
std
or
mov
mov
mov
fcomp
xlat
or
fdivr
cs
jbe
mov
mov
cmps
shr
jmp
in
test
mov
(bad)
push
xor
and
jmp
lods
mov
in
add
aam
and
leave
inc
xchg
jmp
push
mov
and
pop
dec
jmp
out
cs
push
push
lods
lock
mov
and
jle
(bad)
fdivr
push
add
sub
mov
call
lock
xor
jbe
push
pop
sbb
push
mov
mov
or
shr
cmp
stos
sahf
add
xchg
into
ror
xor
in
popa
arpl
cli
loop
test
loope
ins
enter
cs
inc
shl
sub
stos
push
arpl
(bad)
cmp
push
or
je
or
xchg
popa
jnp
shl
into
mov
inc
stos
or
aam
or
int
gs
jne
int
push
xchg
dec
pop
dec
xlat
out
jmp
in
mov
inc
dec
inc
in
fwait
xchg
into
inc
mov
scas
pop
popa
mov
sbb
push
inc
push
sub
fst
(bad)
fidivr
sub
or
sahf
nop
test
das
sbb
jle
int
sbb
into
pushf
pop
sbb
out
fstp
xlat
add
rcr
mov
sbb
lock
push
pop
retf
sub
add
pop
fucomi
mov
adc
mov
or
push
je
aam
jns
xor
inc
js
out
icebp
call
mov
jg
aaa
add
adc
fld
or
inc
xor
adc
loop
fisttp
in
out
pusha
loope
push
stc
enter
cmp
inc
cmp
in
scas
push
imul
inc
or
mov
xor
outs
jmp
test
push
push
cmp
clc
call
push
jmp
push
jmp
cli
daa
repnz
fild
dec
es
out
adc
inc
pop
sar
sahf
inc
sbb
jae
push
int
icebp
mov
aaa
pop
ret
push
inc
das
rcr
sbb
mov
pop
xchg
cli
mov
inc
into
icebp
movs
xchg
pop
mov
dec
out
mov
bound
sub
arpl
mov
ins
test
xchg
adc
aam
cwde
jp
cmp
mov
shr
pop
lds
ins
adc
fbld
lods
sahf
or
test
inc
inc
xchg
mov
jp
rcl
cmp
sub
retf
sub
idiv
call
or
dec
dec
push
(bad)
bound
jb
mov
cld
imul
shl
fisttp
pop
into
mov
xor
xchg
arpl
lock
xchg
adc
and
mov
dec
int
fidiv
cmp
mov
pop
adc
int
xor
pop
jp
cmp
pop
mov
pop
into
out
mov
pop
ins
sub
out
jl
pushf
shl
and
test
(bad)
push
mov
adc
fimul
push
movs
cmp
sbb
fs
icebp
popa
or
push
(bad)
in
data16
adc
fwait
das
pop
ror
std
xor
(bad)
adc
sbb
pop
jge
sbb
mov
xchg
lods
adc
xchg
adc
pop
mov
jg
cmp
or
ret
loop
aaa
fwait
jae
shr
int3
jmp
popf
or
jmp
mov
mov
fucomp
es
jnp
ret
das
fistp
mov
mov
shl
mov
cli
pop
jne
mov
jb
push
and
dec
jnp
ja
mov
mov
pop
cmp
in
imul
push
ja
mov
iret
jp
out
add
repz
(bad)
loope
dec
fld
dec
add
xchg
sub
push
rol
or
into
arpl
aad
jle
push
loope
pop
stc
std
iret
pop
sahf
mov
push
in
mul
add
mov
pop
or
shr
dec
pushf
shl
pop
pop
sub
sahf
push
jae
bound
shr
aaa
pushf
jge
xchg
fisttp
mov
cmp
or
fcom
aad
jmp
sbb
mov
arpl
add
jnp
inc
addr16
(bad)
fwait
hlt
jne
movs
lahf
loop
loopne
dec
jnp
cmc
call
xor
jp
or
lods
cli
pushf
(bad)
xchg
sbb
fsub
jmp
ins
sub
mov
mov
cdq
aaa
xor
push
adc
mov
je
icebp
or
loopne
call
stc
sbb
or
pop
fidiv
jg
out
add
xchg
mov
push
fmul
inc
adc
jmp
inc
jno
mov
push
fild
mov
pop
dec
sub
(bad)
imul
mov
ds
jmp
mov
add
xlat
lock
movs
dec
mov
and
repnz
and
mov
xchg
mov
mov
mov
nop
push
mov
aad
ret
add
sub
mov
rcr
vcvtsi2sd
aaa
jo
imul
mov
push
pop
mov
pop
imul
sub
cld
push
or
fs
lods
lods
fisttp
stos
sub
stc
cmc
mov
xor
sbb
movs
mov
jge
shl
or
in
pop
push
mov
dec
call
in
push
cmp
add
inc
pop
in
push
pop
stos
mov
and
imul
movs
(bad)
arpl
in
sub
scas
jp
and
adc
push
adc
cs
(bad)
cmp
call
test
dec
adc
inc
mov
inc
mov
pavgb
adc
vpaddusw
dec
pop
xchg
fist
jle
out
cmp
inc
jmp
cdq
mov
add
mov
push
frstor
jns
in
cmp
xchg
add
jp
or
les
pushaw
retf
in
xlat
inc
jp
and
cmp
jmp
lea
inc
ret
call
sbb
jo
dec
push
cmp
jno
call
pushf
outs
popa
dec
dec
pop
repz
cmp
pop
aad
call
in
dec
int3
sbb
ss
mov
push
jbe
jl
sbb
pusha
movs
test
dec
dec
ss
inc
xchg
scas
jp
inc
cwde
(bad)
outs
ins
cmps
push
retf
or
inc
xchg
mov
mul
mov
ins
arpl
mov
mov
sub
ja
xchg
adc
aad
xor
js
dec
cmps
jbe
std
adc
stos
jle
push
sbb
div
pop
cdq
mov
loopne
scas
xor
enter
inc
fsubr
shl
(bad)
mov
loopne
pop
into
jmp
fnstenv
mov
shl
cdq
push
fldenv
jno
jge
jmp
jae
mov
mov
stos
and
sub
push
adc
clc
sub
jecxz
fstp
mov
inc
in
and
aam
push
mov
enter
xchg
ficom
dec
les
(bad)
pushf
fcom
lds
push
into
sbb
xor
cmp
pop
pop
das
lods
stos
push
cmc
xlat
sbb
ficomp
test
and
jl
loope
cld
mov
frstor
mov
xlat
xchg
jnp
sub
jno
fwait
add
(bad)
stos
and
xchg
out
jnp
pop
int3
out
pop
sub
push
xchg
retf
xchg
repnz
clc
cld
cmp
fs
dec
or
pop
mov
inc
mov
inc
test
xor
je
mov
mov
xor
pop
std
mov
pop
mov
cmps
push
(bad)
(bad)
pop
js
cmp
jp
pop
cli
and
xchg
xor
mov
bound
outs
push
sub
sti
and
pop
jle
hlt
out
cmp
fild
int
movs
adc
leave
sbb
xchg
pop
jns
test
mov
ins
mov
jb
(bad)
aaa
mov
or
xor
add
pop
nop
bound
(bad)
icebp
rol
fscale
inc
bound
ds
push
sbb
push
(bad)
outs
cmp
jns
push
call
stos
jno
sbb
je
jmp
movs
cmp
pop
in
inc
(bad)
mov
jl
movs
iret
push
out
out
sbb
or
jbe
or
or
pop
jbe
and
fs
jno
add
les
inc
adc
pop
rcr
jbe
mov
cmps
rol
cmps
dec
outs
aas
test
lods
shl
call
int
xor
int
bound
(bad)
push
bound
xor
sub
sub
or
or
mov
bound
js
and
adc
mov
(bad)
loopne
sbb
in
ins
outs
stos
std
mov
enter
stc
dec
mov
jl
lds
dec
stos
sbb
or
dec
ficom
or
dec
lods
pusha
pop
mov
pusha
mov
dec
daa
mov
ins
imul
lahf
inc
fld
sahf
lds
mov
mov
test
ds
outs
fbstp
adc
mov
xor
in
mov
sbb
int
repz
jg
or
ret
aad
lock
xchg
jne
sub
xchg
xor
shr
loop
fcmovu
inc
and
fist
sub
enter
sahf
sti
push
ja
cmc
or
hlt
pop
iret
outs
jmp
lea
mov
sti
adc
and
test
ror
nop
mov
sub
movs
stos
jo
ss
mov
imul
repnz
inc
movs
aas
push
jnp
sbb
iret
div
adc
sbb
out
std
enter
rcr
mov
xchg
jmp
cmc
xchg
pop
xchg
xor
stos
xchg
xchg
add
mov
sub
xlat
mov
sub
mov
imul
cwde
jle
retf
(bad)
xor
push
xchg
pop
dec
sub
inc
add
inc
cmp
loopne
push
inc
mov
sub
push
or
mov
imul
ss
out
repz
mov
sub
(bad)
in
bound
cmps
pop
cs
xchg
packuswb
xchg
inc
push
jne
xor
jbe
xchg
lods
movs
jae
add
pop
(bad)
iret
aaa
or
leave
aaa
movs
imul
aaa
ins
mov
out
in
in
(bad)
xchg
inc
scas
shl
mov
lods
enter
cmc
sub
inc
retf
mov
mov
xor
push
test
out
dec
xor
add
das
imul
or
or
scas
and
and
or
xor
in
sbb
jecxz
loopne
xchg
je
pop
add
out
xchg
adc
xlat
stos
push
pop
shr
(bad)
jno
sub
int
sub
dec
rcr
pushf
ret
pop
add
mov
and
pop
pop
push
pop
jp
ja
mov
jg
adc
mov
cmp
call
dec
cmp
jmp
or
inc
ret
push
xchg
or
push
dec
fnstsw
cmp
and
fdiv
mov
sbb
inc
add
xchg
(bad)
test
std
cdq
hlt
push
pop
sbb
popf
xchg
and
push
and
mov
xchg
xchg
mov
es
outs
sar
arpl
or
push
rcl
js
mov
iret
mov
inc
mov
xlat
shr
test
clc
fcomp
(bad)
push
jp
pop
sub
mov
js
(bad)
pop
cmc
femms
in
mov
ficomp
cmc
push
loope
mov
bound
lods
js
ret
and
aaa
and
loop
lods
mov
or
xor
add
in
lods
nop
pop
xchg
dec
mov
or
test
adc
push
in
ins
push
ret
inc
jp
cli
and
call
mov
inc
in
pop
mov
mov
mov
loope
add
mov
sub
or
mov
int3
xchg
sar
je
xor
les
mov
push
and
leave
into
xchg
int
adc
out
popa
daa
stos
jp
xchg
sbb
or
or
lea
ficomp
(bad)
sbb
pop
test
and
mov
fadd
mov
gs
xor
mov
jl
adc
mov
mov
xor
mov
jl
in
inc
fisttp
xor
sbb
jmp
jno
test
and
cwde
dec
mov
pop
jbe
mov
std
(bad)
fcom
into
jae
fcom
xor
mov
jo
mov
mov
jne
out
mov
mov
sti
mov
sbb
push
ret
pop
(bad)
les
out
xchg
and
pop
add
mov
sub
inc
sahf
into
jmp
es
ja
pop
mov
or
imul
xchg
lea
jge
pop
int3
stos
cmp
and
inc
loopne
arpl
cmp
jmp
mov
mov
out
jne
imul
cdq
sub
dec
mov
popa
and
js
stc
inc
cli
push
jne
push
nop
xor
jb
mov
and
mov
xlat
movs
inc
enter
ins
push
dec
pushf
and
jmp
test
add
out
mov
xchg
and
jns
je
jae
mul
push
jg
outs
and
test
(bad)
xor
mov
pop
adc
push
pop
ret
aas
dec
or
mov
es
push
or
mov
dec
jle
loopne
(bad)
or
xor
mov
dec
js
mov
aad
rcl
pop
and
xlat
dec
and
es
and
fadd
mov
or
pop
cmp
add
pop
add
push
sti
mov
or
cwde
fidiv
mov
je
push
fdiv
(bad)
push
inc
popa
mov
fild
icebp
add
div
(bad)
out
mov
push
xchg
push
mov
mov
xor
and
xchg
mul
and
(bad)
(bad)
pop
test
mov
ret
sub
push
mov
pop
mov
test
(bad)
retf
loope
jne
xchg
push
mov
add
adc
xchg
xchg
into
xchg
ja
mov
mov
xor
iret
and
lods
ins
loopne
jg
cli
retf
loop
mov
jle
mov
jo
ins
(bad)
push
enter
std
inc
aad
xor
rcl
xor
fcomip
mov
shr
mov
sbb
out
push
mov
sbb
push
out
mov
loopne
fist
out
jae
mov
add
ret
add
xchg
in
push
xor
outs
xor
xor
lods
xchg
out
dec
or
fbstp
(bad)
retf
shr
jp
pop
mov
test
fistp
into
jecxz
cs
iret
mov
mov
mov
mov
shr
dec
adc
xor
cwde
add
push
(bad)
cmp
push
mov
mov
sti
xchg
pop
loopne
ins
adc
jno
inc
mov
xor
adc
or
jg
xchg
cmps
pop
sub
(bad)
les
addr16
inc
pop
xor
hlt
js
adc
jne
adc
or
xchg
xchg
pop
dec
xchg
enter
lock
stos
pop
add
stc
push
mov
xor
inc
loope
cmp
(bad)
bound
jne
pop
xchg
sub
sub
(bad)
dec
jg
aad
sbb
sbb
lock
push
jo
sub
stos
stos
pop
test
movs
in
sub
(bad)
cmp
call
push
icebp
cmp
dec
mov
in
mov
push
(bad)
ret
xor
pop
(bad)
pop
leave
pusha
cs
fnstenv
mov
dec
jnp
xor
cmp
lods
cs
jp
adc
cmps
dec
pop
adc
call
movs
jge
hlt
nop
mov
or
sahf
movs
clc
dec
fbstp
sub
dec
push
xor
sub
sbb
repz
shr
cmp
retf
iret
setns
lock
punpcklwd
fcomp
fld
(bad)
(bad)
mov
mov
push
jno
rcr
movs
sub
add
add
pop
xchg
jbe
jg
(bad)
into
push
jmp
jge
sbb
jno
ror
cmp
mov
mov
fwait
je
loope
mov
inc
test
ins
and
push
imul
xchg
add
xlat
cmps
clc
sub
mov
inc
inc
cdq
aas
xchg
aad
xlat
add
sbb
dec
cmc
xor
jb
retf
mov
call
pop
sbb
jg
cdq
adc
daa
xchg
ret
stc
add
bound
pop
cmp
or
mov
add
mov
rcl
mov
(bad)
cdq
sub
mov
add
inc
into
jmp
imul
nop
rcl
sbb
aas
add
jo
scas
sub
neg
loope
retf
sub
sbb
sbb
lds
lods
scas
sti
outs
xor
in
xchg
pop
dec
lea
sub
stos
adc
cmps
add
sbb
cwde
dec
lea
(bad)
je
jge
mov
adc
fst
inc
imul
ret
mov
stc
ret
mov
lods
or
dec
sbb
and
(bad)
xor
dec
popf
stos
or
mov
scas
jmp
int3
push
add
ror
dec
fild
mov
xor
lods
mov
outs
mov
cmp
adc
sub
jne
or
rol
lock
sbb
mov
jmp
inc
cwde
add
pop
sbb
inc
scas
cmp
xchg
out
inc
les
lahf
add
std
(bad)
xor
cmp
push
mov
sub
add
and
mov
dec
out
xchg
xor
cmp
push
pop
jae
mov
dec
in
clc
jns
das
lods
xchg
sti
je
iret
push
iret
imul
ins
pop
sub
fwait
in
mov
(bad)
out
rol
mov
mov
pop
xchg
aad
aad
mov
or
push
jmp
or
push
jle
cdq
gs
pop
or
(bad)
sbb
leave
jo
mov
mov
dec
sbb
bound
sbb
push
stc
fist
sub
stos
xor
(bad)
leave
hlt
cmp
ins
jp
pop
ficomp
sub
fld
dec
mov
cs
xor
in
addr16
mov
(bad)
imul
das
lods
es
xchg
and
or
jl
xchg
xchg
stos
or
das
sbb
loop
jmp
mov
retf
pop
nop
and
movs
call
fcomi
cs
dec
shl
add
mov
mov
les
lea
cld
and
ss
mov
cmp
dec
or
rcl
nop
xor
pop
cmps
push
fld
cld
dec
lea
adc
xchg
addr16
retf
cmp
dec
xor
push
pop
mov
in
push
push
imul
movs
sub
push
ret
addr16
jmp
mov
cmp
(bad)
movs
fbld
sbb
iret
jg
(bad)
out
test
dec
push
shr
rol
jl
loop
ins
cmp
lea
mov
loope
jg
adc
lahf
aaa
cmc
inc
lahf
mov
(bad)
cmc
mov
cmps
xchg
mov
mov
sbb
stos
call
call
xlat
xchg
pop
xor
popw
inc
in
rcr
mov
cmp
xchg
pop
mov
add
call
int
push
adc
cwde
rcr
(bad)
retf
dec
cmp
jecxz
dec
fst
pushf
int3
sub
or
data16
pop
icebp
cmc
iret
mov
loop
ds
and
fisub
movs
and
jb
jbe
loope
or
add
popa
movs
retf
push
aad
mov
push
xchg
pop
xchg
pop
and
test
fistp
scas
dec
dec
outs
mov
add
clc
(bad)
test
sar
pop
mov
loopne
push
or
add
cmp
or
fadd
repz
pop
or
mov
lahf
outs
pop
test
lock
mov
xchg
sub
cmp
mov
jb
ret
setb
push
xchg
and
adc
ds
adc
jno
dec
mov
mov
sbb
ds
or
or
sub
ficom
mov
mov
out
sub
mov
pop
pop
mov
push
mov
leave
loopne
lock
xchg
jnp
daa
pusha
repnz
and
jl
inc
movs
pusha
into
jmp
js
sub
xchg
stos
or
ins
jnp
xor
mov
ins
mov
in
mov
cmp
lock
sub
lea
dec
mov
push
sub
jns
(bad)
mov
push
daa
pop
cmps
ds
fnstenv
test
pusha
imul
xchg
ins
inc
and
mov
add
sbb
jnp
adc
or
je
test
ret
inc
xor
add
pop
pop
and
mov
xchg
rol
or
push
push
js
mov
scas
push
mov
add
sub
repz
int
xchg
mov
gs
test
popa
xor
pop
imul
nop
shl
push
cmp
or
scas
pop
pop
popf
stc
mov
fs
sub
dec
or
or
inc
xchg
and
fiadd
(bad)
lahf
mov
cmp
sbb
lahf
not
mov
pop
xor
hlt
cmps
loop
mov
pop
and
inc
mov
add
xor
in
jo
pop
and
sbb
sub
adc
mov
clc
dec
pop
jno
ja
xchg
sar
outs
dec
jbe
cli
dec
jbe
cmps
addr16
or
arpl
adc
popf
jno
and
scas
or
xchg
pushf
out
inc
jno
mov
call
cdq
in
cmp
clc
bound
fwait
jmp
ss
lods
mov
mov
inc
and
sub
or
std
sub
sub
push
push
xchg
cdq
cmp
xor
cmp
call
pop
cmp
sbb
scas
std
push
cld
jge
pop
sub
mov
sar
arpl
cmp
sbb
fbld
popa
pusha
pop
jbe
inc
cdq
dec
mov
dec
popf
add
fmul
inc
and
pop
nop
pop
adc
pop
ins
fs
icebp
daa
push
in
mov
push
scas
xchg
cli
adc
sbb
scas
pop
cwde
xchg
in
aam
push
ss
icebp
mov
call
fisttp
shr
fdivr
push
js
push
loope
lahf
ja
add
lods
dec
sahf
cwde
sti
femms
sahf
sub
movs
add
nop
sub
aaa
movs
test
xchg
fcomi
dec
and
in
pop
dec
push
call
or
pop
inc
inc
lods
pushf
aas
mov
and
out
cmp
xchg
adc
sub
popf
in
dec
ins
jecxz
jp
or
adc
jmp
pop
stos
test
cs
aas
call
xchg
in
xlat
add
pop
rcl
sbb
pop
movs
mov
cmp
fxch
xchg
push
mov
out
or
jns
call
push
mov
dec
out
xor
xor
mov
out
fwait
xchg
aam
aad
addr16
out
lods
sub
ftst
ret
je
mov
mov
adc
rcl
popf
inc
inc
xor
mov
dec
fwait
cmp
dec
pop
mov
pop
sub
into
sbb
stc
or
add
hlt
cmps
call
repnz
shl
lds
lods
jge
loope
sub
xor
xchg
cmps
stos
or
or
mov
cmc
add
fs
mov
adc
push
out
(bad)
imul
xchg
or
add
sbb
dec
ds
jmp
push
xchg
push
xor
and
idiv
lods
push
pop
sbb
xor
mov
inc
popa
shr
mov
pop
lds
addr16
mov
mov
sbb
lea
(bad)
adc
cmps
mov
push
jo
int3
xchg
sub
ret
jb
das
in
pop
pop
fidiv
mov
popa
rcl
in
adc
xor
(bad)
inc
mov
add
mov
aas
lods
mov
xchg
jb
mov
sbb
ja
mov
les
dec
bound
loopne
ret
mov
sbb
stc
xchg
(bad)
int
lods
cwde
(bad)
cmp
jb
outs
adc
aaa
pushf
jge
mov
nop
das
dec
add
mov
jle
xchg
and
xchg
dec
cmps
pop
jl
ret
icebp
or
sub
call
xchg
dec
fist
arpl
cmps
lods
and
test
repz
jmp
xchg
aad
lds
jecxz
cmps
div
pop
test
mov
ins
mov
and
push
mov
xchg
mov
push
test
cli
fcmovbe
shr
push
dec
mov
add
pop
dec
inc
xchg
xchg
js
lock
cmp
jne
in
push
(bad)
loopne
jo
aas
dec
xor
mov
(bad)
rcl
lods
xchg
stc
push
jo
imul
xor
retf
movs
inc
jmp
jp
mov
or
js
movs
xchg
pop
icebp
shl
pop
ds
mov
cmps
cmp
mov
imul
retf
mov
ins
push
cmp
push
loopne
cmp
lods
lods
xor
inc
mov
adc
outs
pop
pop
mov
js
mov
popa
xchg
cwde
jbe
mov
lds
retf
ret
dec
call
loope
out
pand
daa
xor
ret
jnp
outs
pushf
sar
dec
std
cmp
or
push
cmps
jl
js
ins
push
shr
js
lea
sbb
in
mov
jb
push
outs
sub
ret
add
jne
test
mov
sar
and
loope
xor
sub
push
inc
shl
cmp
jb
cmp
and
sub
add
test
dec
xor
data16
dec
add
inc
pop
popa
into
pop
add
pushf
or
imul
shl
int3
adc
js
mov
sub
fisub
and
test
cwde
nop
sbb
or
ret
mov
test
lock
cmovno
cs
dec
aad
div
adc
int3
out
sbb
data16
mov
cmps
enter
add
push
mov
enter
or
mov
loop
stos
sahf
hlt
xor
inc
push
cli
outs
mov
jge
sub
xchg
gs
mov
es
push
and
mov
and
or
mov
jmp
inc
repz
cmp
mov
adc
push
mov
cs
cmps
mov
inc
int
fdivr
outs
stc
adc
jae
mov
and
xchg
add
pop
adc
ins
repz
cwde
mov
call
inc
inc
retf
mov
out
xchg
xor
mov
cld
in
neg
and
xchg
push
ins
mov
sub
push
ins
fst
ret
and
or
sub
fld
cmp
xlat
(bad)
xchg
daa
ret
push
in
daa
ins
pushf
jne
test
(bad)
push
test
push
mov
(bad)
xchg
sbb
call
retf
es
and
fwait
rcl
jb
gs
push
rcr
or
popf
adc
test
in
retf
or
push
cmp
xchg
dec
and
movs
mov
dec
arpl
and
imul
push
pop
or
js
stos
mov
jns
push
or
adc
das
clc
adc
aas
mov
xlat
adc
cmp
gs
mov
stc
mov
mov
and
push
ret
scas
sbb
gs
jnp
xchg
outs
cmc
std
push
sbb
call
xor
mov
sub
(bad)
js
mov
push
in
push
mov
mov
inc
pop
mov
dec
jmp
xchg
sar
add
mov
ret
std
inc
or
cmp
mov
in
out
adc
jo
mov
add
out
add
lea
ja
xor
js
ss
add
mov
cdq
inc
inc
push
add
int
xor
cli
ret
test
inc
push
(bad)
frstor
iret
xor
mov
mov
mov
pop
adc
pop
ret
add
sub
dec
call
mov
rcl
ins
es
mov
xchg
in
sub
add
xor
and
inc
cmp
nop
add
xlat
cmps
sbb
and
js
mov
mov
inc
test
xor
and
sbb
jl
sbb
retf
sbb
addr16
lahf
stc
sbb
(bad)
loopne
fmul
mov
xlat
lods
xchg
pop
and
xchg
xchg
xor
push
and
js
pop
mov
leave
adc
sti
in
in
fs
inc
dec
cmc
or
or
adc
push
stos
xchg
ss
les
push
pop
cmps
mov
inc
add
ficom
mov
pop
add
sbb
push
xlat
add
(bad)
rcr
or
test
in
pop
xor
pop
ds
fidiv
dec
mov
aas
fistp
es
inc
out
jle
xchg
xor
jmp
jae
push
sub
mov
or
ins
daa
out
mov
jmp
lock
xchg
push
xchg
add
imul
push
pusha
fs
cmp
stos
imul
xor
ja
mov
inc
sub
mov
inc
pusha
ds
scas
out
dec
pop
arpl
adc
mov
push
adc
inc
xchg
ss
dec
cli
pop
int
dec
int
imul
xor
inc
in
mov
and
scas
(bad)
movs
mov
cmp
pop
repnz
js
shr
into
jge
mov
fisub
(bad)
pop
or
and
pop
inc
lahf
mov
xor
test
pusha
inc
aaa
lea
and
cld
xor
aad
xor
ret
xadd
push
push
into
scas
scas
aad
push
mov
jg
mov
std
daa
rol
test
gs
jle
and
gs
pop
aaa
inc
imul
pusha
xchg
inc
int3
lods
rol
mov
and
mov
inc
scas
scas
ret
pop
js
dec
(bad)
pop
cmp
cmp
mov
icebp
imul
je
inc
sub
dec
jae
sub
fld
and
das
push
cdq
ss
cmps
add
hlt
add
mov
push
add
fisub
fadd
jle
lods
outs
jne
pop
inc
ret
nop
call
sbb
aam
outs
xchg
adc
popa
sahf
push
retf
push
add
mov
fiadd
sbb
in
rol
(bad)
ret
mov
lahf
add
adc
push
inc
in
es
pop
cmp
xchg
mov
fidivr
iret
xchg
(bad)
fiadd
or
or
lock
popf
cli
imul
aas
cmovns
test
xchg
or
es
in
rol
mov
push
ds
pop
cmp
inc
aad
ror
cwde
call
mov
or
and
cmp
sbb
nop
clc
sbb
xchg
cmp
fisttp
mov
mov
sbb
mov
loopne
sahf
sahf
mov
inc
xor
jg
jno
push
mov
dec
outs
xchg
add
imul
mov
dec
test
imul
cmc
sub
retf
dec
in
in
push
test
bound
cmp
push
pop
fs
xchg
sub
xlat
cmps
rcl
mov
fidiv
jb
inc
int
add
nop
jnp
cdq
cmp
(bad)
inc
xor
sahf
jle
xor
(bad)
sub
push
mov
mov
scas
or
clc
push
mov
fistp
inc
fld1
cmps
ret
shr
push
push
push
xchg
mov
lahf
cmp
pop
stos
rol
scas
dec
add
xor
enter
mov
jg
popa
out
and
jnp
loope
adc
xchg
jmp
ins
bound
pop
loopne
in
jg
adc
push
xchg
and
repnz
inc
adc
mov
xchg
mov
in
fs
mov
pop
inc
ret
mov
dec
jecxz
cmp
sbb
cwde
bswap
out
sbb
xchg
leave
in
xor
xor
std
mov
loope
repz
std
sub
fisubr
arpl
pop
dec
mov
inc
inc
push
mov
fs
cs
dec
or
cmp
cmp
push
ss
pop
imul
xacquire
fs
adc
cmps
enter
cdq
xlat
repnz
push
jp
push
loop
inc
leave
inc
scas
pop
and
ja
ficom
(bad)
fcom
rol
ret
sahf
gs
mov
jbe
hlt
imul
xchg
sub
xchg
inc
cmc
repnz
in
pop
(bad)
lods
daa
ins
cmps
mov
pop
inc
bound
cli
aad
xor
mov
cs
pop
lea
popf
mov
std
adc
out
shl
fidivr
sub
mov
mov
imul
leave
fdivr
sub
addr16
cmps
pop
or
adc
push
jnp
lea
inc
ins
sbb
jae
fcomp
loopne
mov
xchg
lods
fisubr
fdiv
ret
loop
imul
(bad)
cld
ficomp
fs
pop
ret
xor
add
int
rol
xor
jp
mov
(bad)
cld
ret
jge
movs
adc
push
dec
xlat
shr
mov
and
repz
test
(bad)
lock
std
or
or
clc
loopne
movs
dec
inc
rcl
pop
dec
jge
jae
fild
pop
push
jo
stc
popf
dec
sub
xchg
dec
cdq
call
sbb
mov
inc
push
push
test
loop
clc
stos
loop
fadd
mov
mov
pop
xchg
dec
xlat
xlat
cmps
imul
push
ror
out
ins
ja
jne
xor
xchg
cld
ss
sbb
xor
je
fldcw
pop
out
cmp
dec
cmp
push
std
inc
imul
mov
outs
(bad)
cld
cmc
xchg
push
ss
test
(bad)
sar
loop
dec
aam
fwait
jle
cmps
shl
xchg
and
into
lock
sbb
ror
push
cmp
(bad)
out
jge
mov
xchg
inc
and
mov
jno
cdq
rol
aad
mov
add
ficom
cmp
mov
mov
xchg
call
and
lods
pop
sahf
dec
lods
shr
pop
cmp
dec
jo
rcr
and
mov
add
push
fidivr
mov
cmps
xor
sub
and
inc
jne
pop
push
pop
imul
(bad)
in
pop
addr16
repnz
xor
aaa
dec
or
out
addr16
arpl
sbb
fistp
and
in
jno
or
iret
dec
mov
mov
jge
jbe
sbb
pop
pushf
adc
xor
scas
xchg
int
arpl
add
test
adc
push
not
add
aaa
test
mov
ds
in
adc
imul
imul
jmp
ins
or
inc
(bad)
stos
ins
popf
push
mov
mov
push
sbb
mov
mov
jg
daa
xchg
int
scas
cmp
imul
push
ds
push
jecxz
scas
lahf
ins
int3
push
test
sub
mov
dec
test
loop
cwde
cmp
mov
cmp
mov
js
push
jno
push
(bad)
mov
movs
jmp
jne
movs
ret
pushf
xlat
adc
leave
sbb
lea
cmp
out
mov
cmp
aaa
aas
xchg
out
jae
mov
mov
push
and
adc
cwde
popa
sub
test
cmps
push
test
dec
xchg
int
adc
or
lods
and
and
adc
cmp
imul
adc
leave
mov
lds
xor
in
or
jmp
sar
stos
mov
aad
add
sub
adc
test
loopne
xchg
stos
cs
(bad)
mov
daa
mov
jge
jmp
sbb
int3
jg
fld
popf
sub
mov
mov
std
add
sub
xchg
in
addr16
xor
mov
mul
xchg
cmp
fs
aas
push
rcl
das
inc
mov
into
push
jecxz
rol
pop
jg
in
mov
stos
iret
(bad)
mov
das
mov
outs
pop
push
xor
jno
jg
imul
lahf
ins
in
icebp
xchg
and
or
adc
mov
call
xchg
aad
push
jge
iret
call
arpl
mov
sbb
adc
inc
push
rol
imul
ret
mov
jno
lahf
lock
retf
jbe
lods
iret
pop
push
mov
movs
pop
sbb
cmp
push
cli
dec
xchg
dec
pop
mov
cmp
ret
int
mov
daa
(bad)
addr16
ds
std
imul
push
xor
jge
push
mov
mov
inc
add
add
add
add
add
add
add
sbb
add
add
add
add
mov
xchg
mov
aam
add
jbe
fmul
sahf
into
sbb
pop
js
data16
ja
xchg
mov
int
int
fstp
jbe
fsub
test
sub
add
and
cmp
pop
arpl
ins
ins
xchg
stos
stos
stos
int
int
fstp
fs
movs
out
ins
sar
ins
sar
data16
cld
dec
shr
mov
push
movs
(bad)
add
sbb
adc
data16
ja
mov
mov
add
add
lods
shr
stos
fldenv
jmp
ins
sar
ins
sar
ins
sar
ins
sar
ins
sar
pop
retf
repz
jecxz
test
add
mov
addr16
data16
ja
xchg
mov
cmp
in
push
push
push
push
push
push
push
push
push
push
push
call
repz
mov
pop
rol
cdq
int3
adc
inc
ins
js
imul
xchg
mov
add
add
lods
ror
sahf
into
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jmp
stc
dec
shr
mov
push
movs
(bad)
add
and
cmp
push
imul
jl
jl
xchg
xchg
stos
stos
stos
add
add
test
add
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
push
call
jmp
mov
add
sbb
(bad)
ja
ja
stos
stos
add
sahf
into
add
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
call
repz
ret
mov
add
mov
add
cdq
int3
add
mov
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
(bad)
jle
dec
repnz
add
cdq
int3
add
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
repnz
ja
aam
add
es
fimul
sahf
into
fcomi
cwde
jmp
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cld
add
int
int
add
stos
fisub
stos
ficomp
std
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cld
add
mov
add
fldcw
stos
fstp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
cld
sub
fild
js
stos
stos
add
add
fldcw
stos
fnstcw
jmp
repnz
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
sub
(bad)
jo
mov
add
(bad)
in
idiv
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
pop
retf
jbe
xchg
xchg
xchg
add
add
out
mov
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
jmp
cld
xlat
jmp
jl
xchg
mov
out
mov
retf
xchg
sti
call
call
call
call
call
call
call
call
call
call
call
call
call
cld
(bad)
out
adc
fstp
fld
add
add
fcomp
out
mov
int3
cld
call
call
call
call
call
call
call
call
call
call
call
call
call
jmp
cld
cwde
jmp
or
aam
aam
add
add
fcomp
out
(bad)
mov
aad
call
call
call
call
call
call
call
call
call
call
call
call
call
jmp
cld
int3
cld
inc
cdq
int3
data16
int
add
add
fadd
repnz
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cld
int3
cld
dec
sahf
into
push
push
jbe
fcom
repnz
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cld
aad
push
js
stos
stos
inc
mov
xchg
xlat
repnz
adc
int3
cld
(bad)
mov
push
push
push
push
push
push
push
push
push
push
push
push
cld
(bad)
call
fild
jbe
pushf
pushf
pushf
cmp
in
dec
sahf
into
pop
mov
in
stc
(bad)
in
stc
(bad)
loop
(bad)
(bad)
call
sti
call
sti
dec
cld
inc
std
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
cld
(bad)
push
out
jbe
xchg
xchg
xchg
in
in
cmp
in
jmp
hlt
sub
fild
cdq
int3
adc
ins
(bad)
in
shr
mov
icebp
(bad)
cld
in
stc
(bad)
in
stc
(bad)
loop
dec
cld
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
inc
std
jmp
cld
loop
dec
movs
xchg
add
lods
rcl
repnz
dec
jge
stc
outs
(bad)
dec
(bad)
out
mov
sbb
(bad)
add
dec
mov
in
stc
(bad)
aad
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
dec
cld
jmp
cld
in
stc
(bad)
scas
out
adc
fstp
fld
ss
(bad)
bnd
xchg
sti
call
call
call
call
cmc
push
int
adc
in
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
cld
in
stc
(bad)
(bad)
repnz
ins
aam
aam
add
stos
(bad)
call
call
call
call
call
call
loop
lahf
iret
jmp
push
std
(bad)
in
stc
(bad)
in
stc
(bad)
loop
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
cld
cmc
std
push
std
inc
cdq
int3
data16
add
cdq
int3
jecxz
std
stos
(bad)
call
call
call
call
call
call
(bad)
cmp
inc
mov
jge
out
shr
mov
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cmc
std
push
std
push
std
(bad)
in
stc
(bad)
in
stc
(bad)
in
stc
(bad)
data16
cld
cld
cld
cld
cld
cld
cld
adc
mov
mov
add
(bad)
cdq
(bad)
call
call
call
call
call
jmp
(bad)
jge
cmc
xlat
jmp
int
xor
add
xor
retf
out
aad
mov
(bad)
cld
cld
cld
cld
cld
cld
(bad)
repnz
cld
cld
cld
cld
cld
cld
inc
mov
dec
jns
mov
add
add
fstp
call
call
call
call
call
jmp
(bad)
in
stc
(bad)
(bad)
call
sti
inc
std
(bad)
mov
call
cld
je
repnz
jmp
int
xor
add
inc
mov
push
mov
mov
icebp
xor
fstp
pop
movs
shl
cmc
std
(bad)
cdq
(bad)
call
call
call
call
jmp
(bad)
inc
jmp
dec
mov
test
in
mov
icebp
(bad)
repnz
std
push
std
(bad)
(bad)
call
sti
inc
std
push
call
stc
je
repnz
ss
push
mov
frstpm(287
call
add
add
fnstsw
out
stc
(bad)
cdq
(bad)
call
call
call
call
jmp
cmc
std
mov
mov
in
test
in
ret
fdivr
lods
shr
cmps
rcr
movs
sar
in
retf
out
fdivp
mov
icebp
cmc
std
(bad)
in
stc
(bad)
(bad)
call
lahf
iret
mov
add
lahf
iret
jmp
cld
cld
cld
cld
loop
jmp
(bad)
dec
cld
inc
std
push
(bad)
cld
cld
cld
push
mov
fstp
fld
add
add
js
fimul
aad
lods
rol
cdq
int3
add
add
pop
mov
inc
mov
pop
mov
(bad)
shr
mov
cmc
cld
cld
cld
cld
cld
cld
(bad)
shr
and
add
add
in
test
in
ret
fcom
sar
lods
shr
cmps
rol
cdq
int3
sbb
int
fcomp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
aas
(bad)
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
pop
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
pop
(bad)
(bad)
inc
add
ror
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
sbb
add
add
add
sub
sub
sub
sub
sub
add
add
dec
mov
and
sub
sub
sub
sub
add
add
jnp
jmp
call
test
adc
sub
sub
sub
sub
sub
add
add
test
div
push
push
push
push
jmp
dec
out
xor
or
sub
sub
sub
sub
add
add
mov
push
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
push
call
idiv
mov
sbb
sub
sub
sub
add
sahf
into
xor
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
jmp
test
adc
add
add
movs
out
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
push
jmp
jns
add
add
movs
out
inc
test
inc
test
inc
test
inc
test
inc
test
inc
jae
jmp
jns
add
add
mov
inc
test
inc
test
inc
test
inc
test
inc
test
inc
sub
add
add
(bad)
repz
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
jnp
inc
fisubr
jns
sahf
into
sub
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
inc
(bad)
out
jns
sahf
into
sub
xchg
sti
call
xchg
sti
call
xchg
sti
call
xchg
sti
call
xchg
sti
call
xchg
sti
call
jae
jmp
jns
sahf
into
xor
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
jnp
imul
jns
sahf
into
pop
ret
out
fcomip
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
mov
jmp
jns
sahf
into
pop
ret
out
out
lods
sti
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
adc
add
jnp
out
sti
call
sti
dec
sti
inc
sti
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
fisubr
jns
add
xor
cmp
pushf
xlat
out
mov
imul
sti
jmp
sti
inc
sti
inc
sti
inc
sti
inc
sti
inc
sti
inc
sti
inc
sti
inc
sti
inc
sti
inc
sti
call
inc
mov
sub
add
mov
dec
imul
dec
iret
out
mov
imul
out
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
sti
call
imul
sub
add
xchg
sti
call
xchg
sti
call
xchg
sti
jmp
mov
jnp
out
sti
(bad)
out
sti
(bad)
out
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
sti
jmp
dec
add
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
dec
sub
pop
mov
lods
fucomip
mov
(bad)
(bad)
(bad)
push
sti
inc
out
(bad)
fdivp
(bad)
mov
xchg
add
pushf
(bad)
call
pushf
(bad)
call
pushf
(bad)
call
sti
call
sti
inc
sti
(bad)
mov
idiv
test
and
cmp
jnp
out
shr
sub
add
movs
(bad)
call
pushf
(bad)
call
(bad)
sti
call
add
add
(bad)
jmp
fdivrp
call
sti
inc
sti
push
out
sahf
into
add
sahf
into
out
sti
jmp
sti
dec
sti
dec
sti
push
dec
out
test
add
sahf
into
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
aas
(bad)
push
add
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
pop
clc
add
jg
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xor
sbb
imul
imul
imul
imul
imul
imul
imul
imul
cmp
sbb
xor
sbb
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
(bad)
jnp
inc
ficomp
sbb
xor
sbb
test
inc
test
inc
test
inc
movs
idiv
sbb
xor
sbb
xchg
sti
call
xchg
sti
call
xchg
sti
dec
pushf
(bad)
call
mov
sahf
mov
mov
(bad)
call
movs
idiv
pushf
(bad)
call
pushf
(bad)
jmp
call
sbb
xor
sbb
idiv
push
sti
push
sti
push
sti
push
sti
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sbb
xor
test
call
mov
mov
mov
mov
mov
mov
add
xor
mov
dec
mov
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
jge
add
sahf
mov
(bad)
call
pushf
(bad)
(bad)
(bad)
(bad)
call
mov
mov
mov
add
add
sahf
mov
(bad)
(bad)
(bad)
(bad)
push
sti
push
sahf
mov
add
sahf
mov
sahf
mov
add
inc
add
add
add
add
add
pop
add
add
add
cmp
add
(bad)
inc
add
inc
add
add
add
add
xor
add
add
add
jne
and
add
add
add
jne
adc
add
add
add
add
xor
add
add
jae
inc
je
add
add
add
add
add
and
add
rol
add
add
xlat
jae
inc
je
add
add
add
xor
add
add
jo
add
cwde
add
add
add
xlat
jae
inc
je
add
add
add
add
add
pusha
add
add
sbb
add
add
add
add
add
jae
inc
je
add
add
add
add
add
mov
add
gs
add
test
add
mov
add
xlat
jae
inc
je
add
add
add
add
add
mov
add
or
add
add
add
add
add
add
jae
inc
je
add
add
add
add
add
fadd
add
xlat
jae
inc
je
add
add
add
add
add
lock
add
add
xor
add
mov
add
add
add
imul
gs
xor
cs
ins
add
fs
imul
add
je
jb
arpl
fs
jae
add
adc
add
movs
das
add
or
add
