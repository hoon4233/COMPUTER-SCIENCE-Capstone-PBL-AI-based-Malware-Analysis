fsubr
adc
add
add
dec
add
add
add
add
in
add
add
add
add
add
push
add
xor
adc
xchg
popa
sbb
movs
imul
cmc
sub
in
popf
enter
adc
dec
(bad)
cmp
iret
jb
daa
call
and
add
ss
adc
out
sbb
mov
fs
adc
std
int
sti
mov
pop
adc
mov
pslld
fucomip
add
add
add
jge
add
add
sub
add
jge
add
add
jle
add
add
add
add
jae
add
or
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
adc
jnp
add
add
outs
aaa
add
or
add
add
xor
add
add
adc
sbb
or
add
add
add
add
add
add
inc
add
add
add
add
add
add
dec
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
add
add
mov
sub
add
push
outs
aaa
add
or
add
add
dec
add
sub
add
push
add
sub
add
outs
aaa
add
or
add
xor
add
add
adc
and
or
add
add
add
add
cmp
add
jl
add
ins
add
add
add
add
add
add
add
push
add
sub
(bad)
sub
add
or
add
add
dec
add
sub
adc
jb
add
jo
adc
add
sub
add
or
and
add
add
push
add
sub
add
push
and
add
add
push
add
sub
add
or
sub
sub
and
add
add
push
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
(bad)
inc
adc
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
mov
add
adc
add
or
jle
add
add
add
add
add
and
add
es
add
add
jle
add
add
and
add
add
add
add
cmp
add
or
sub
add
or
add
add
sub
add
push
sub
add
jo
adc
add
jb
add
jo
adc
add
outs
mov
add
or
enter
push
or
and
add
es
jle
add
add
daa
add
or
adc
sub
add
sub
add
push
or
add
outs
or
add
fadd
outs
add
add
sub
adc
add
add
push
add
add
adc
add
fadd
add
add
add
sub
inc
pop
add
add
add
add
add
pop
add
lahf
add
add
add
or
add
jg
add
add
push
add
add
push
add
sub
jb
add
jo
adc
add
sub
add
add
dec
add
sub
add
add
add
add
(bad)
(bad)
dec
add
add
add
and
add
add
push
add
sub
jo
adc
add
sub
sub
push
sub
sub
and
push
add
cmp
(bad)
push
add
jo
adc
add
sub
add
add
dec
add
cmp
inc
or
add
add
dec
add
cmp
jmp
sbb
add
add
dec
add
cmp
(bad)
push
add
jo
adc
add
sub
add
jo
adc
add
sub
xor
add
add
add
add
adc
jl
add
add
push
adc
add
outs
add
add
sub
add
ja
add
adc
add
add
add
add
add
add
sub
add
push
sub
add
adc
add
pop
add
add
add
adc
or
add
add
xor
add
add
add
add
adc
or
adc
add
pop
add
add
add
adc
or
add
add
xor
add
add
add
sub
or
add
add
add
add
add
add
add
add
and
add
cmp
add
jbe
add
add
pop
add
add
push
add
sub
add
add
add
add
add
and
add
add
push
add
sub
add
add
add
add
and
add
add
push
add
sub
add
cmp
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
add
adc
add
sub
add
push
add
cmp
(bad)
inc
jnp
add
add
or
and
add
add
push
add
cmp
(bad)
inc
jb
add
jo
adc
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jle
add
add
add
sub
add
push
sub
add
or
add
add
add
or
add
add
jle
add
or
add
add
add
xor
add
add
adc
sbb
or
add
add
add
add
dec
add
add
add
add
add
add
add
add
dec
add
sub
add
add
add
mov
add
sub
and
add
add
push
add
sub
add
jge
add
add
add
add
dec
add
sub
push
sub
sub
and
add
add
push
add
sub
add
add
test
adc
add
add
mov
add
jge
add
add
add
adc
push
add
add
adc
sbb
or
add
add
add
add
dec
add
add
add
add
add
add
add
add
dec
add
sub
add
add
add
mov
add
sub
and
add
add
push
add
sub
add
jge
add
add
add
add
dec
add
sub
push
sub
sub
and
add
add
push
add
sub
add
add
test
adc
add
add
mov
add
jge
add
add
add
and
add
adc
add
sub
add
adc
add
inc
add
add
push
dec
add
add
add
add
xchg
add
add
add
add
add
add
mov
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
adc
add
dec
add
sub
add
add
and
add
add
push
add
sub
add
adc
add
sub
and
add
add
push
add
cmp
(bad)
inc
add
add
add
add
add
and
add
dec
add
cmp
(bad)
inc
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
cmp
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
adc
add
sub
push
add
add
push
add
cmp
(bad)
(bad)
inc
jb
add
jo
adc
add
sub
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
and
add
dec
add
cmp
add
add
add
adc
add
sub
sub
push
sub
cmp
(bad)
(bad)
jmp
or
push
add
cmp
(bad)
inc
add
add
add
add
add
and
push
add
cmp
(bad)
cmp
or
add
dec
add
cmp
(bad)
inc
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
and
add
add
push
add
cmp
push
and
add
add
push
add
cmp
jnp
add
add
cmp
add
and
add
add
push
add
cmp
std
(bad)
inc
add
add
add
adc
add
sub
or
add
dec
add
cmp
std
(bad)
inc
add
add
add
adc
add
sub
sub
add
push
sub
add
sbb
add
add
add
adc
add
jo
adc
add
sub
add
push
adc
add
lea
add
adc
add
inc
add
add
push
add
jo
adc
add
jb
add
jo
adc
add
sub
add
or
add
add
xchg
add
jo
adc
add
push
sub
pop
add
push
jle
add
add
sub
add
push
sub
add
add
adc
add
and
sbb
add
jo
adc
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
sub
adc
add
add
add
and
add
add
xor
add
add
adc
add
jo
adc
add
sub
add
push
adc
add
lea
add
adc
add
sub
add
adc
add
sub
add
jle
add
add
xchg
add
jo
adc
add
jb
add
jo
adc
add
sub
add
or
add
add
sub
add
push
sub
add
adc
add
sub
add
sub
jb
add
jo
adc
add
sub
add
jle
add
add
int
add
outs
inc
add
push
jb
add
jo
adc
add
sub
xchg
add
jo
adc
add
sub
add
or
sub
inc
jle
add
add
sub
add
push
outs
enter
or
add
add
mov
adc
add
pop
sub
pop
add
push
jle
add
add
sub
add
push
sub
add
add
adc
add
and
jb
add
jo
adc
add
jle
add
add
sub
add
push
jae
add
push
sub
push
fiadd
sub
add
adc
add
add
add
cli
add
or
xor
add
add
adc
add
jo
adc
add
sub
add
push
sbb
add
lea
add
sbb
add
inc
add
add
pop
add
jo
adc
add
jb
add
jo
adc
add
sub
add
or
add
add
mov
adc
add
push
sub
pop
add
push
jle
add
add
sub
add
push
sub
jle
add
add
pop
add
jo
adc
add
jb
add
jo
adc
add
sub
add
or
add
add
icebp
add
jo
adc
add
push
sub
pop
add
push
push
sub
or
sbb
add
sbb
add
and
sbb
add
add
push
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
sub
add
add
add
add
pop
add
add
add
xor
add
add
adc
add
add
push
sub
add
push
sbb
add
lea
add
sbb
add
and
add
lea
add
and
add
and
add
lea
add
and
add
sub
add
lea
add
sub
add
sub
add
lea
add
sub
add
xor
add
lea
add
xor
add
xor
add
lea
add
xor
add
cmp
add
lea
add
cmp
add
cmp
add
lea
add
cmp
add
add
add
lea
add
add
add
add
jle
add
or
push
or
add
lea
add
or
add
inc
add
add
cmps
add
add
push
jb
add
jo
adc
add
sub
add
or
add
add
icebp
add
add
push
push
sub
pop
add
push
jle
add
add
sub
add
push
sub
add
add
and
add
and
sbb
push
add
adc
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
jle
add
add
jno
add
adc
add
jb
push
add
adc
add
sub
add
or
int
add
add
add
adc
add
or
sub
pop
add
push
jle
add
add
sub
add
push
sub
add
add
xor
add
and
sbb
pop
add
adc
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
jle
add
add
jg
add
adc
add
pop
sub
add
adc
rol
add
out
add
adc
add
adc
imul
sub
add
adc
push
push
adc
sub
push
adc
call
add
cmp
add
adc
add
adc
push
sub
add
adc
jo
adc
add
sbb
add
or
pop
sbb
add
add
add
or
push
jle
add
add
pop
or
jo
adc
add
adc
sub
pop
add
push
jle
add
add
push
sub
add
push
sub
push
add
add
pop
pop
pop
adc
adc
adc
mov
js
(bad)
(bad)
jle
add
add
retf
add
add
add
jg
add
adc
add
push
sub
add
adc
rol
add
jge
add
adc
add
adc
imul
sub
add
adc
and
adc
sub
and
and
add
add
cmp
add
adc
add
adc
sub
pop
add
push
adc
jb
or
jo
adc
add
sbb
add
or
pop
sbb
add
pop
push
sbb
xchg
add
or
or
add
add
pop
or
jo
adc
add
adc
sub
pop
add
push
jle
add
add
or
sub
add
sub
push
add
add
and
pop
adc
adc
adc
mov
js
(bad)
(bad)
fisub
adc
sbb
or
jo
adc
add
jle
add
add
or
push
add
push
jae
add
push
sub
add
fiadd
sub
or
or
add
or
and
xchg
add
sub
add
adc
jle
add
add
pop
add
jle
add
add
int
add
or
add
push
jb
or
jo
adc
add
sub
in
add
adc
add
sub
add
adc
int
add
lahf
or
jo
adc
add
adc
sub
pop
add
push
jle
add
add
or
sub
add
sub
add
add
or
and
add
adc
add
adc
add
jle
add
add
or
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
inc
add
add
int
add
or
add
push
jb
or
jo
adc
add
sub
cmp
add
adc
add
sub
add
adc
jle
add
add
aas
or
jo
adc
add
adc
sub
pop
add
push
jle
add
add
push
sub
add
push
sub
add
add
push
sub
add
adc
sbb
or
jo
adc
add
jle
add
add
movaps
add
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
inc
add
add
int
add
or
add
push
jb
or
jo
adc
add
sub
cmp
add
adc
add
sub
add
adc
jle
add
add
test
add
push
adc
sub
pop
add
push
jle
add
add
adc
sub
add
sub
add
add
adc
fisub
adc
sbb
or
jo
adc
add
jle
add
add
adc
push
add
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
inc
add
add
int
add
or
add
push
jb
or
jo
adc
add
sub
cmp
add
adc
add
sub
add
adc
jle
add
add
xchg
or
jo
adc
add
adc
sub
pop
add
push
jle
add
add
adc
sub
add
sub
add
add
adc
fisub
adc
sbb
or
jo
adc
add
jle
add
add
adc
push
add
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
inc
add
add
int
add
or
add
push
jb
or
jo
adc
add
sub
cmp
add
adc
add
sub
add
adc
int
add
cmp
jo
adc
add
adc
sub
pop
add
push
jle
add
add
adc
sub
add
sub
add
add
adc
cmp
add
adc
add
adc
add
jle
add
add
adc
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
inc
add
add
int
add
or
add
push
jb
or
jo
adc
add
sub
cmp
add
adc
add
sub
add
adc
jle
add
add
in
add
adc
add
adc
sub
pop
add
push
jle
add
add
push
sub
add
push
sub
add
add
push
cmp
add
adc
sbb
or
add
push
jle
add
add
pop
sub
add
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
inc
add
add
int
add
or
add
push
jb
or
add
push
sub
cmp
add
adc
add
sub
add
adc
jle
add
add
(bad)
or
add
push
adc
sub
pop
add
push
jle
add
add
sbb
sub
add
sub
add
add
sbb
fisub
adc
sbb
or
add
push
jle
add
add
sbb
push
add
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
inc
add
add
int
add
or
add
push
jb
push
add
adc
add
sub
cmp
add
adc
add
sub
add
adc
jle
add
add
inc
push
add
adc
add
adc
sub
pop
add
push
jle
add
add
sbb
sub
add
sub
add
add
sbb
fisub
adc
sbb
push
add
adc
add
jle
add
add
sbb
push
add
push
jae
add
push
sub
add
fiadd
jle
add
add
mov
add
cmp
inc
add
add
int
add
or
add
push
jb
push
add
adc
add
sub
cmp
add
adc
add
sub
add
adc
int
add
or
add
adc
add
adc
sub
pop
add
push
jle
add
add
sbb
sub
add
sub
add
add
sbb
dec
add
add
adc
add
adc
add
jle
add
add
sbb
push
jae
add
push
sub
add
fiadd
adc
sub
add
cmp
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
or
add
fsubr
add
add
add
add
add
iret
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
push
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
push
add
imul
add
add
add
add
add
add
imul
add
add
add
add
add
pop
add
imul
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
push
add
add
add
add
xor
add
add
adc
adc
add
adc
sbb
add
sub
add
push
or
sub
add
push
or
sub
add
push
or
inc
add
add
jb
(bad)
jo
adc
add
sub
add
or
add
stos
(bad)
jo
adc
add
or
sub
pop
add
push
jle
add
add
sub
add
push
sub
add
outs
xchg
add
or
(bad)
jo
adc
add
sub
add
sub
pop
adc
add
inc
add
add
jb
(bad)
jo
adc
add
sub
add
adc
int
add
ror
add
adc
add
adc
sub
pop
add
push
jle
add
add
add
sub
add
sub
add
add
xchg
add
or
(bad)
jo
adc
add
sub
add
sub
pop
adc
add
add
jb
(bad)
jo
adc
add
sub
add
adc
add
in
(bad)
jo
adc
add
adc
push
sub
add
jle
add
add
add
push
sub
add
add
or
(bad)
jo
adc
add
sub
add
sub
pop
sbb
add
adc
sbb
adc
jo
adc
add
jle
add
add
push
sub
add
push
jae
add
push
sub
add
fiadd
sub
add
inc
sbb
add
add
dec
add
add
add
add
xor
inc
or
add
add
adc
xor
or
add
add
add
add
jns
add
test
add
pop
add
sub
add
ss
add
pushf
add
add
add
add
add
add
add
add
add
add
add
xchg
or
add
add
add
add
lods
pop
add
int
add
push
add
add
in
add
add
add
into
or
add
add
add
lods
push
add
xchg
push
add
pop
add
add
add
cmp
add
add
push
or
add
add
add
add
add
or
add
push
add
bound
add
add
add
cmps
add
add
pop
add
add
add
sbb
push
add
sub
add
add
add
add
mov
add
add
add
stos
or
add
add
or
add
jo
add
movs
add
add
add
rol
add
pop
add
add
add
sbb
add
pop
push
add
lods
add
add
add
push
add
add
std
add
add
dec
add
add
add
add
and
add
dec
add
cmp
add
or
and
add
add
push
add
cmp
pop
adc
jo
adc
add
outs
xchg
add
or
test
sbb
add
dec
add
cmp
or
sbb
add
add
add
dec
add
cmp
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
sub
add
scas
add
add
xor
add
dec
add
cmp
mov
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
std
(bad)
call
push
add
add
push
or
add
and
push
add
cmp
std
(bad)
call
add
add
push
sub
add
xor
add
dec
add
cmp
std
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
jo
add
and
add
dec
add
cmp
or
aaa
add
add
inc
add
add
push
add
cmp
or
and
add
add
add
dec
add
cmp
(bad)
(bad)
jle
add
add
fld
add
and
add
dec
add
cmp
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
xor
add
and
add
add
push
add
cmp
std
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
std
(bad)
(bad)
jle
add
add
add
add
and
add
add
push
add
cmp
cld
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
mov
sbb
add
dec
add
cmp
cld
(bad)
call
add
add
push
adc
add
inc
add
add
push
add
cmp
call
add
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
xor
add
xchg
add
add
xor
add
dec
add
cmp
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
push
add
cmp
(bad)
call
add
add
push
adc
add
aas
add
add
push
add
cmp
cld
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
sti
(bad)
(bad)
jle
add
add
mov
add
and
add
add
push
add
cmp
sti
(bad)
(bad)
jle
add
or
and
add
dec
add
cmp
sti
(bad)
call
add
add
push
sbb
add
and
add
dec
add
cmp
imul
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
push
add
cmp
jb
adc
jo
adc
add
outs
xchg
add
or
jmp
(bad)
jmp
push
add
add
push
add
cmp
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
adc
push
add
add
push
add
cmp
sti
(bad)
(bad)
jle
add
add
std
add
add
cmp
add
dec
add
cmp
sti
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
cli
(bad)
(bad)
jle
add
add
sub
add
and
add
add
push
add
cmp
cli
(bad)
call
or
sub
add
push
xor
add
das
add
add
push
add
cmp
cli
(bad)
call
sub
add
push
and
add
cmp
add
dec
add
cmp
rcl
add
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
push
add
cmp
and
add
jp
add
and
add
add
push
add
cmp
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
push
add
add
adc
add
dec
add
cmp
(bad)
(bad)
jle
add
or
and
add
dec
add
cmp
cli
(bad)
(bad)
jle
add
or
and
add
dec
add
cmp
cli
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
stc
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
dec
add
add
sub
push
sub
cmp
push
add
add
push
add
cmp
add
add
push
sub
add
xor
push
add
cmp
inc
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
or
and
push
add
cmp
(bad)
call
add
add
push
sbb
add
cmp
add
dec
add
cmp
(bad)
call
or
sub
add
push
add
add
sub
add
dec
add
cmp
stc
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
clc
(bad)
(bad)
jle
add
add
mov
(bad)
jmp
add
add
push
add
cmp
clc
(bad)
(bad)
jle
add
add
mov
xor
add
dec
add
cmp
clc
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
adc
add
mov
(bad)
jmp
inc
add
add
push
add
cmp
fwait
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
or
and
add
dec
add
cmp
clc
(bad)
call
or
sub
add
push
cmp
add
sub
push
add
cmp
clc
(bad)
(bad)
jle
add
add
movs
cli
(bad)
jmp
add
add
push
add
cmp
clc
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
cmp
add
add
push
add
cmp
idiv
inc
jb
adc
jo
adc
add
outs
xchg
add
or
or
add
and
push
add
cmp
idiv
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
or
aas
add
add
inc
add
add
push
add
cmp
(bad)
(bad)
jle
add
or
and
add
dec
add
cmp
(bad)
call
or
sub
add
push
cmp
add
sub
add
dec
add
cmp
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
idiv
call
add
and
add
aaa
add
add
push
add
cmp
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
jmp
and
add
dec
add
cmp
idiv
(bad)
jle
add
or
and
add
dec
add
cmp
idiv
inc
jb
adc
jo
adc
add
outs
xchg
add
or
mov
and
add
dec
add
cmp
adc
add
out
(bad)
jmp
inc
add
add
push
add
cmp
inc
add
add
jle
(bad)
jmp
sub
add
dec
add
cmp
(bad)
call
or
add
add
add
daa
add
add
push
add
cmp
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
(bad)
sti
(bad)
jmp
adc
add
dec
add
cmp
idiv
(bad)
jle
add
add
lods
sti
(bad)
jmp
cmp
add
dec
add
cmp
idiv
inc
jb
adc
jo
adc
add
outs
xchg
add
or
into
idiv
jmp
adc
add
dec
add
cmp
cmc
(bad)
call
add
add
push
xor
add
xor
add
dec
add
cmp
cmc
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
sub
add
adc
add
out
or
add
add
adc
sub
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
dec
add
add
add
add
add
sbb
add
mov
add
add
add
add
and
add
scas
add
add
add
add
add
add
jmp
add
push
add
adc
push
add
aas
add
add
add
add
add
int
add
jbe
add
call
or
add
add
ds
add
into
add
add
add
add
add
sbb
add
clc
push
add
push
add
add
add
add
add
add
add
add
add
add
xor
add
add
mov
add
inc
add
add
push
add
jmp
add
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
pop
add
sldt
add
and
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
add
or
and
add
dec
add
cmp
add
add
mov
sub
add
dec
add
cmp
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
dec
add
cmp
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
or
and
add
dec
add
cmp
(bad)
(bad)
jle
add
or
pop
sub
push
sub
sub
and
add
add
push
add
cmp
std
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
std
(bad)
(bad)
jle
add
or
and
add
dec
add
cmp
or
aaa
add
add
inc
add
add
push
add
cmp
jb
adc
jo
adc
add
outs
xchg
add
or
outs
add
add
sldt
add
push
add
cmp
(bad)
(bad)
jle
add
or
and
add
dec
add
cmp
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
sbb
add
lods
add
add
cmp
push
add
cmp
jb
adc
jo
adc
add
outs
xchg
add
or
add
push
add
cmp
jb
adc
jo
adc
add
outs
xchg
add
or
xchg
add
add
and
add
dec
add
cmp
cld
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
adc
add
outs
(bad)
(bad)
jmp
aas
add
add
push
add
cmp
jb
adc
jo
adc
add
outs
xchg
add
or
add
add
adc
add
dec
add
cmp
(bad)
call
add
daa
add
push
adc
add
inc
add
add
push
add
cmp
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
adc
add
jne
(bad)
jmp
inc
add
add
push
add
cmp
or
sub
add
push
xor
add
add
add
push
add
cmp
cld
(bad)
call
add
daa
add
push
sbb
add
cmp
add
dec
add
cmp
sti
(bad)
(bad)
jle
add
add
and
add
add
push
add
cmp
sti
(bad)
(bad)
jle
add
add
ins
and
add
add
push
add
cmp
add
daa
add
push
and
add
cmp
add
dec
add
cmp
add
daa
add
push
sbb
add
cmp
add
dec
add
cmp
sbb
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
pop
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
cmp
add
add
push
add
cmp
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
and
add
add
push
add
cmp
sub
add
call
add
dec
add
cmp
and
add
xor
add
and
add
add
push
add
cmp
cli
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
adc
add
and
add
add
push
add
cmp
cli
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
lahf
add
add
pop
add
add
push
add
cmp
add
daa
add
push
sub
add
xor
add
dec
add
cmp
fwait
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
call
or
sub
add
push
add
add
sub
add
dec
add
cmp
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
cli
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
dec
add
cmp
stc
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
stc
std
(bad)
jmp
sbb
add
dec
add
cmp
stc
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
and
push
add
cmp
add
daa
add
push
sub
add
xor
add
dec
add
cmp
or
das
add
add
inc
add
add
push
add
cmp
xor
add
pop
and
add
add
push
add
cmp
call
add
and
add
push
add
add
push
add
cmp
(bad)
call
add
daa
add
push
xor
add
xor
add
dec
add
cmp
stc
(bad)
call
add
daa
add
push
adc
add
add
add
push
add
cmp
stc
(bad)
(bad)
jle
add
add
sub
(bad)
jmp
das
add
add
push
add
cmp
stc
(bad)
call
or
add
add
add
add
add
push
add
cmp
clc
(bad)
call
push
add
daa
add
push
or
add
and
add
dec
add
cmp
clc
(bad)
(bad)
jle
add
add
mov
xor
push
add
cmp
jb
adc
jo
adc
add
outs
xchg
add
or
xor
(bad)
jmp
or
push
add
cmp
ins
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
call
or
sub
add
push
cmp
add
sub
add
dec
add
cmp
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
clc
(bad)
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
idiv
call
or
sub
add
push
cmp
add
sub
add
dec
add
cmp
idiv
inc
jb
adc
jo
adc
add
outs
xchg
add
or
xor
(bad)
jmp
sbb
push
add
cmp
daa
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
add
or
and
add
add
push
add
cmp
inc
jb
adc
jo
adc
add
outs
xchg
add
or
(bad)
sti
(bad)
jmp
pop
add
add
push
add
cmp
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
(bad)
stc
(bad)
jmp
or
add
dec
add
cmp
idiv
(bad)
jle
add
or
and
add
dec
add
cmp
idiv
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
add
push
add
cmp
idiv
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
and
add
dec
add
cmp
cmp
add
and
(bad)
jmp
sub
add
dec
add
cmp
jb
adc
jo
adc
add
outs
xchg
add
or
and
add
add
push
add
cmp
or
cmp
add
add
push
add
cmp
(bad)
inc
jb
adc
jo
adc
add
outs
xchg
add
or
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
idiv
push
adc
jo
adc
add
jle
add
add
adc
add
sub
pop
add
push
sub
add
xor
add
add
add
add
adc
sub
add
push
add
and
add
add
push
add
push
sub
sbb
add
test
add
adc
pop
add
push
sub
jle
add
add
iret
adc
jo
adc
add
push
outs
dec
add
or
inc
add
push
sub
add
push
outs
push
add
or
push
cmp
add
adc
sub
add
or
outs
xchg
add
push
or
outs
cmp
add
adc
cmp
add
add
pop
sub
add
or
add
adc
add
push
sub
jle
add
add
add
push
sub
add
jle
add
add
xor
jo
adc
add
adc
push
sub
add
inc
adc
push
sub
add
jle
add
add
pop
adc
jo
adc
add
adc
push
sub
add
sbb
adc
jo
adc
add
adc
push
sub
add
add
pop
add
push
adc
push
sub
jle
add
add
add
push
sub
add
jle
add
add
fist
jo
adc
add
adc
push
sub
add
inc
adc
push
sub
add
jle
add
add
pop
adc
jo
adc
add
adc
push
sub
add
sbb
adc
add
push
adc
push
sub
add
add
pop
add
push
adc
sub
add
cmp
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
or
add
fcom
push
sub
or
movs
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
or
or
add
fsubr
add
add
add
add
add
jno
add
xor
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
jle
add
push
add
add
add
add
add
add
add
add
add
call
add
add
add
xor
add
add
adc
xor
or
add
add
add
add
add
add
sbb
add
into
add
add
add
add
add
mov
add
xor
add
add
or
add
dec
add
adc
pop
add
add
push
add
inc
add
add
or
sub
add
and
push
add
sub
add
push
or
add
add
dec
add
adc
or
push
add
add
push
add
(bad)
jmp
je
add
add
dec
add
(bad)
dec
jb
adc
add
push
outs
xchg
add
or
and
add
add
push
add
(bad)
inc
or
sub
sub
and
add
add
push
add
(bad)
(bad)
jle
add
add
sub
add
or
or
add
dec
add
(bad)
call
add
pop
adc
add
add
dec
add
(bad)
call
add
mov
ins
(bad)
(bad)
jmp
sbb
add
jmp
add
adc
add
push
or
outs
pusha
add
push
pop
outs
bound
add
or
outs
popa
add
push
pop
outs
pop
add
push
sub
jle
add
add
outs
push
add
push
sub
add
jle
add
add
push
adc
add
push
pop
outs
push
add
push
sub
fidivr
es
outs
push
add
push
sub
add
jle
add
add
jnp
add
adc
add
pop
outs
push
add
push
sub
ficom
jb
adc
add
push
pop
outs
push
add
push
sub
push
sub
add
jle
add
add
sub
add
push
sub
add
sub
add
push
sub
jle
add
add
pop
sub
add
jle
add
add
add
add
adc
add
or
sub
sub
jb
push
add
adc
add
or
pop
add
or
sub
add
sub
add
add
add
add
and
sub
add
add
xor
add
add
add
and
add
jle
add
add
push
add
add
jne
add
sub
jle
add
add
jle
add
add
jbe
add
gs
add
adc
add
sub
sub
jle
add
add
sub
add
push
sub
add
jne
add
adc
add
or
sub
pop
add
push
sub
push
add
adc
add
or
pop
add
sub
add
jb
push
add
adc
add
jle
add
add
add
add
adc
add
or
aaa
add
push
pop
push
sub
add
sub
jb
pop
add
adc
add
or
sub
add
sub
jb
pop
add
adc
add
or
pop
add
or
sub
add
or
mov
int
add
test
add
adc
add
or
sub
ficomp
or
jo
add
jle
add
add
mov
add
adc
add
or
sub
fiadd
push
sub
add
sub
add
adc
add
add
add
in
add
or
xor
add
add
adc
sub
add
push
or
mov
jle
add
add
jb
sbb
jo
adc
add
push
sub
add
es
outs
dec
add
or
add
daa
adc
dec
add
or
push
outs
inc
add
push
or
add
jb
sbb
jo
adc
add
push
sub
add
adc
dec
add
or
add
push
or
add
outs
or
add
fsubr
add
adc
add
add
xor
add
add
add
adc
add
fadd
add
sldt
adc
push
dec
add
add
add
add
add
add
sbb
add
or
add
outs
add
add
add
sub
add
outs
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
adc
add
dec
add
sub
add
sbb
add
adc
add
sub
and
add
dec
add
sub
add
sub
add
adc
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
cmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
jle
add
add
cmp
adc
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
arpl
add
adc
add
sub
and
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
jae
add
adc
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
(bad)
sbb
jo
adc
add
sub
and
add
add
push
add
cmp
push
add
add
mov
adc
add
sub
and
add
add
push
add
cmp
push
add
add
mov
add
adc
add
sub
and
push
add
cmp
(bad)
inc
or
add
add
dec
add
cmp
(bad)
(bad)
jle
add
add
mov
adc
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
rcr
add
adc
add
sub
and
add
add
push
add
cmp
push
add
add
loope
add
adc
add
sub
and
add
add
push
add
cmp
std
(bad)
inc
inc
sldt
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
call
add
(bad)
dec
add
add
(bad)
(bad)
push
add
add
add
add
adc
add
dec
add
cmp
push
add
add
out
sbb
jo
adc
add
sub
and
add
add
push
add
cmp
push
add
add
std
sbb
jo
adc
add
sub
and
add
add
push
add
cmp
(bad)
jle
add
add
adc
add
adc
add
sub
and
push
add
cmp
(bad)
(bad)
jle
add
add
and
add
adc
add
sub
jle
add
or
sbb
push
add
add
adc
add
jle
add
add
aas
sbb
jo
adc
add
add
inc
add
push
sub
add
add
and
add
or
add
add
sub
add
push
sub
jle
add
add
test
adc
add
add
inc
add
push
sub
add
jle
add
or
jle
add
add
jb
sbb
jo
adc
add
sub
add
or
add
add
adc
add
adc
add
pop
mov
add
add
inc
add
push
sub
add
jle
add
add
jle
add
or
push
add
push
cmp
add
add
mov
or
add
or
add
mov
add
dec
add
or
add
int
add
outs
inc
add
push
push
sub
or
adc
add
sub
add
or
add
add
jle
add
or
push
add
push
sub
jle
add
add
jb
sbb
jo
adc
add
adc
(bad)
push
adc
add
outs
add
add
push
sub
add
push
sub
jle
add
add
popa
sbb
jo
adc
add
pop
mov
add
add
inc
add
push
sub
add
sub
jb
sbb
jo
adc
add
pop
mov
add
add
xchg
add
or
pop
add
push
sub
add
dec
add
or
push
(bad)
(bad)
(bad)
fimul
adc
push
or
add
outs
or
add
fadd
sub
add
add
add
add
mov
mov
add
add
add
adc
push
add
add
add
add
adc
and
or
add
add
add
add
add
mov
add
add
add
lea
add
add
add
push
add
sub
jle
add
add
jb
sbb
jo
adc
add
adc
(bad)
push
adc
add
outs
add
add
push
sub
add
push
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
or
and
add
dec
add
sub
jo
adc
add
pop
mov
add
add
xchg
add
or
pop
add
push
and
add
add
push
add
cmp
(bad)
jmp
cmp
add
push
add
cmp
(bad)
inc
sub
add
push
or
add
add
dec
add
cmp
mov
adc
add
pop
mov
add
add
xchg
add
or
pop
add
push
pop
sub
add
adc
add
pop
add
add
add
adc
sub
inc
or
add
push
add
add
add
jle
add
or
add
iret
add
add
add
add
add
add
and
add
add
push
add
sub
pop
add
add
add
add
add
dec
add
sub
add
sub
add
or
test
add
and
add
add
push
add
sub
add
add
add
add
dec
add
sub
jo
adc
add
jae
add
push
or
add
add
dec
add
cmp
(bad)
inc
sub
and
add
add
push
add
cmp
(bad)
inc
add
sub
add
jge
add
add
push
add
add
push
add
cmp
(bad)
(bad)
inc
add
sub
add
jge
add
add
sub
push
sub
sub
and
push
add
cmp
(bad)
(bad)
inc
sub
add
or
add
add
dec
add
cmp
(bad)
inc
sub
add
es
sub
adc
add
add
add
adc
sbb
inc
add
add
add
add
add
add
outs
add
add
and
add
dec
add
sub
jb
sbb
jo
adc
add
sbb
add
push
add
sub
add
mov
sub
add
mov
adc
add
mov
or
sub
add
mov
add
push
mov
add
add
add
add
or
xchg
add
or
and
add
add
push
add
cmp
(bad)
inc
sub
add
or
add
add
dec
add
cmp
(bad)
inc
sub
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
jle
add
or
push
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
sbb
add
push
es
sub
xor
add
add
sldt
adc
push
dec
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
ja
add
rol
add
add
adc
add
dec
add
sub
jo
adc
add
sub
push
add
add
push
add
sub
jo
adc
add
sub
add
add
dec
add
cmp
push
sbb
jo
adc
add
sub
push
add
add
push
add
cmp
(bad)
push
sbb
jo
adc
add
sub
or
add
dec
add
cmp
(bad)
push
sbb
jo
adc
add
sub
add
add
dec
add
cmp
(bad)
(bad)
push
sbb
jo
adc
add
sub
sub
push
sub
cmp
(bad)
jmp
add
push
add
cmp
loopne
add
adc
add
sub
or
push
add
cmp
(bad)
(bad)
push
sbb
jo
adc
add
sub
sldt
add
push
add
cmp
(bad)
(bad)
push
sbb
jo
adc
add
sub
add
add
dec
add
cmp
add
add
push
sub
or
add
dec
add
cmp
inc
sldt
add
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
dec
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
push
add
add
add
imul
add
xchg
add
add
adc
add
dec
add
cmp
(bad)
push
sbb
add
push
sub
or
add
dec
add
cmp
(bad)
(bad)
jmp
je
add
add
dec
add
cmp
(bad)
(bad)
push
sbb
add
push
sub
or
add
dec
add
cmp
(bad)
(bad)
push
sbb
add
push
sub
pop
add
add
push
add
cmp
std
(bad)
push
sbb
add
push
sub
or
add
dec
add
cmp
std
(bad)
inc
or
add
add
dec
add
cmp
std
(bad)
push
sbb
add
push
sub
add
or
add
adc
add
cmc
add
add
add
adc
push
dec
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
xchg
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
and
add
add
push
add
sub
add
and
add
add
push
add
sub
add
and
add
add
push
add
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
pop
sub
push
sub
sub
and
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
and
push
add
cmp
adc
add
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
and
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
inc
sldt
add
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
push
add
add
add
pop
add
add
add
add
add
and
add
add
push
add
cmp
inc
add
add
and
add
add
push
add
cmp
(bad)
jmp
pusha
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
and
add
add
push
add
cmp
inc
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
or
add
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
jle
add
or
add
add
add
add
add
sub
add
jbe
add
adc
add
sub
add
and
fild
add
sub
add
adc
add
add
xor
push
add
adc
and
add
call
add
and
add
sbb
jae
add
or
jle
add
add
loopne
add
pop
add
push
jb
sbb
add
push
sub
push
or
add
add
sub
add
push
sub
add
sub
add
or
push
pop
jae
add
or
sub
xor
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
pop
push
add
add
or
push
sub
add
or
push
sub
add
or
pop
xor
push
sub
add
or
push
outs
cmp
add
adc
sub
add
inc
add
or
sbb
add
sbb
or
sub
add
push
adc
pop
jle
add
add
add
sub
aaa
add
or
add
dec
add
or
add
push
or
add
outs
or
add
fadd
sub
adc
add
add
aaa
mov
push
add
add
adc
add
into
add
add
add
adc
and
inc
pop
add
add
add
add
add
add
add
lea
add
dec
add
add
add
or
add
add
push
add
add
push
add
sub
add
sub
add
push
or
sub
push
sub
sub
and
add
add
push
add
sub
push
outs
fiadd
add
or
add
add
dec
add
sub
add
push
add
sub
add
sub
add
add
dec
add
cmp
(bad)
dec
adc
sub
add
sub
and
add
dec
add
cmp
(bad)
inc
mov
xor
add
push
add
cmp
(bad)
push
sbb
add
push
sub
add
jb
add
jo
adc
add
sub
add
xor
or
add
add
add
add
xor
add
sub
add
xor
add
add
add
add
adc
lea
add
push
jle
add
add
sub
add
push
sub
adc
adc
add
sub
pop
outs
cmp
add
adc
sub
sub
add
or
or
add
xor
add
sub
push
adc
add
or
pop
or
add
add
add
adc
add
jg
add
add
and
dec
add
add
aaa
add
push
sub
add
jle
add
add
arpl
add
outs
add
push
or
add
add
test
push
sub
add
sub
push
(bad)
push
or
add
outs
or
add
(bad)
xor
add
in
add
dec
push
add
adc
add
add
push
add
adc
add
jle
add
add
add
push
add
push
sub
add
sub
add
fiadd
jb
push
add
adc
add
sub
add
push
sub
add
add
add
add
add
add
add
add
add
sbb
xchg
test
add
adc
add
add
add
adc
sub
inc
or
add
js
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
sub
fld
add
and
add
add
push
add
lea
add
sub
add
add
dec
add
pop
lea
add
adc
add
jb
push
add
adc
add
mov
cdq
add
or
and
add
add
push
add
(bad)
inc
mov
mov
add
and
add
add
push
add
(bad)
inc
jb
push
add
adc
add
outs
xchg
add
or
and
add
add
push
add
(bad)
inc
pop
call
dec
add
(bad)
dec
sub
add
outs
add
push
sub
push
sub
sub
and
add
add
push
add
(bad)
inc
push
call
dec
add
(bad)
push
push
add
adc
add
pop
or
call
sub
add
sbb
push
add
add
add
add
adc
add
add
out
add
adc
add
add
sub
pop
add
push
add
lea
add
push
push
or
adc
jle
add
add
sub
add
je
add
add
jle
add
add
sbb
rol
add
sub
add
jle
add
add
sub
out
add
add
jmp
sub
enter
inc
das
add
add
add
add
sub
jae
add
or
add
jle
add
add
add
in
add
add
sub
sub
pop
or
push
sub
add
imul
add
push
sub
add
ficom
adc
or
hlt
add
add
add
fwait
add
push
(bad)
wbinvd
sub
jle
add
add
sub
or
add
or
pop
add
adc
add
outs
les
add
adc
add
jo
add
adc
add
adc
push
sub
add
jle
add
add
add
push
sub
pushf
pop
add
adc
add
outs
fwait
add
or
push
jle
add
add
mov
add
adc
add
adc
mov
add
sub
add
sub
add
adc
push
xor
add
add
pop
outs
pushf
add
or
int
add
rcr
add
adc
add
add
sub
pop
add
push
ficomp
adc
jle
add
add
cli
pop
add
adc
add
adc
sub
add
sub
add
fiadd
ficomp
adc
jle
add
add
inc
and
jo
adc
add
adc
sub
add
sub
add
fiadd
push
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
add
xor
scas
add
add
add
adc
xor
add
outs
add
push
sub
data16
jo
adc
add
push
sub
add
sub
pop
outs
cmp
add
adc
sub
add
or
or
sub
add
sub
pop
adc
pop
or
pop
or
add
add
add
adc
add
jg
add
add
and
dec
add
add
aaa
add
push
sub
add
jle
add
add
arpl
add
outs
add
push
or
add
add
scas
adc
or
add
add
outs
or
add
fcom
sub
add
add
adc
add
add
add
add
add
add
sbb
push
add
add
add
add
adc
add
add
je
add
adc
add
add
sub
pop
add
push
jle
add
add
std
add
add
mov
sub
jle
add
add
sub
add
je
add
add
jle
add
add
jb
and
jo
adc
add
sub
add
jb
and
jo
adc
add
sub
or
add
push
mov
sub
or
add
and
mov
add
jle
add
add
sub
or
add
push
push
push
mov
mov
invd
sub
jle
add
add
sub
pop
outs
int3
add
or
add
or
add
sub
jmp
sub
enter
inc
adc
or
add
add
sub
adc
aam
add
jmp
add
adc
inc
add
push
sub
add
push
adc
sub
sub
add
add
sldt
add
add
ret
add
in
sldt
add
add
add
repz
or
xor
add
add
sbb
add
sub
dec
add
xchg
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
or
add
dec
add
add
or
and
add
add
push
add
pop
outs
sub
add
and
push
add
adc
popf
add
or
and
add
add
push
add
jno
pop
add
add
push
add
(bad)
call
adc
add
add
dec
add
(bad)
dec
and
and
add
add
push
add
(bad)
inc
or
sub
push
sub
sub
and
add
add
push
add
(bad)
inc
or
add
push
add
(bad)
call
add
pop
adc
add
add
dec
add
(bad)
call
add
outs
sahf
add
or
ins
(bad)
(bad)
(bad)
jle
add
add
sub
add
push
sub
adc
push
add
add
add
add
sub
inc
pop
add
add
add
xor
add
jl
add
retf
add
add
cmps
add
add
add
add
push
add
add
push
add
sub
jb
and
jo
adc
add
add
pop
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
cmp
add
add
push
add
sub
add
sub
sub
add
push
or
add
push
add
cmp
(bad)
inc
push
xor
add
add
dec
add
cmp
(bad)
inc
jle
add
add
jb
and
jo
adc
add
sub
outs
lahf
add
or
and
add
dec
add
cmp
(bad)
push
and
jo
adc
add
push
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
add
add
or
pop
outs
pushf
add
or
jle
add
or
adc
add
adc
add
add
add
jb
adc
jo
adc
add
sub
add
push
sub
xor
add
add
sub
dec
add
add
add
add
ins
add
add
add
add
add
add
add
and
push
add
sub
jb
adc
jo
adc
add
push
sub
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
dec
add
sub
push
sub
and
add
add
push
add
sub
jo
adc
add
sub
add
and
add
dec
add
cmp
(bad)
jmp
rol
add
sub
add
or
add
add
dec
add
cmp
(bad)
call
sub
sub
xor
add
sbb
or
add
add
add
add
jae
add
or
add
xor
add
add
add
add
dec
add
sub
jb
and
jo
adc
add
add
pop
add
or
sub
push
sub
sub
and
add
add
push
add
sub
jo
adc
add
add
pop
add
sub
add
and
add
add
push
add
sub
jo
adc
add
add
pop
add
sub
add
and
add
add
push
add
cmp
(bad)
jle
add
add
push
sub
push
sub
xor
add
add
add
add
adc
sub
add
or
outs
push
add
or
push
adc
sub
add
or
outs
dec
add
push
adc
sub
add
sub
add
push
sldt
sbb
add
or
sub
adc
add
add
add
sub
push
add
add
adc
push
add
add
add
sbb
inc
add
add
add
add
mov
add
add
add
add
and
add
dec
add
sub
push
outs
xchg
add
or
(bad)
jo
adc
add
sub
add
add
add
add
dec
add
sub
add
or
xchg
and
jo
adc
add
jle
add
add
mov
adc
add
sub
leave
(bad)
jo
adc
add
sub
add
or
add
add
dec
add
cmp
inc
sub
cmp
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
push
(bad)
jo
adc
add
push
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
sub
push
add
add
add
sub
sub
add
or
add
aas
add
push
add
inc
add
push
add
push
sub
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
adc
add
add
add
jle
add
add
jnp
add
add
test
add
adc
add
sub
inc
add
push
sub
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
lods
add
add
sbb
inc
add
add
add
add
add
add
sub
add
add
add
add
dec
add
sub
push
jb
and
jo
adc
add
sub
and
add
add
push
add
sub
add
and
add
add
push
add
sub
add
adc
add
outs
xchg
add
or
push
sub
sub
and
add
add
push
add
sub
add
test
add
adc
add
outs
mov
push
and
add
add
push
add
cmp
(bad)
inc
add
pop
add
or
sub
add
data16
outs
add
push
add
add
push
add
add
push
sub
add
sbb
add
into
add
add
add
adc
add
or
add
sub
add
or
outs
pop
add
or
pop
sub
add
or
int
add
lods
and
jo
adc
add
or
add
push
sub
pop
add
push
or
add
push
or
add
or
pop
sub
add
sub
pop
(bad)
push
adc
add
outs
or
add
fsubr
mov
add
add
dec
add
or
or
cmp
or
dec
add
or
add
add
lods
and
jo
adc
add
adc
push
sub
pop
add
push
adc
push
adc
push
adc
outs
push
add
or
or
dec
add
or
or
push
or
add
outs
or
add
fadd
sub
add
sbb
add
add
add
add
add
add
add
ja
inc
mov
add
sbb
add
add
add
adc
cmp
add
es
add
add
sub
add
jb
and
jo
adc
add
sub
push
sub
fisub
or
add
add
cmp
add
adc
add
jle
add
add
sub
add
push
sub
pop
add
push
fiadd
sub
add
adc
add
add
add
sub
daa
or
xor
add
add
adc
add
jo
adc
add
sub
add
adc
jae
add
or
jle
add
add
int
add
sub
push
jle
add
add
sub
xchg
add
jo
adc
add
sub
add
or
leave
add
add
sub
add
push
sub
jle
add
add
outs
add
add
xchg
add
jo
adc
add
sub
add
or
sub
adc
add
add
sub
add
push
outs
enter
or
add
jo
adc
add
push
sub
pop
add
push
push
jae
add
or
fisub
or
add
adc
add
jle
add
add
sub
add
push
jae
add
push
sub
push
fiadd
pop
sub
adc
add
add
add
add
add
xchg
add
jo
adc
add
sub
add
add
add
xor
add
add
add
add
or
jle
add
add
rol
add
pushf
and
jo
adc
add
jle
add
add
aaa
add
push
outs
aaa
add
or
add
or
jle
add
add
rol
add
pushf
and
jo
adc
add
jle
add
add
aaa
add
push
outs
aaa
add
or
add
xor
add
add
add
add
adc
add
add
add
adc
add
push
add
add
add
adc
add
add
add
adc
add
add
add
adc
and
and
add
jae
add
or
jle
add
add
push
add
add
ret
add
push
sub
add
push
sbb
and
add
add
adc
add
push
add
add
ret
add
push
sub
add
push
push
sub
add
push
sub
sub
adc
add
pop
add
add
add
adc
add
add
push
add
add
ret
add
push
sub
add
push
sbb
inc
jle
add
add
adc
add
push
add
add
ret
add
push
sub
add
push
sub
add
push
sbb
and
add
add
adc
add
push
add
add
ret
add
push
sub
add
push
sub
add
push
push
inc
sub
sub
xor
pop
add
add
add
adc
add
add
push
add
add
ret
add
push
sub
add
push
sbb
inc
jle
add
add
adc
add
push
add
add
ret
add
push
sub
add
push
sub
add
push
sbb
and
add
add
adc
add
push
add
add
ret
add
push
sub
add
push
sub
add
push
pop
inc
sub
sub
xor
add
add
adc
or
or
add
add
mov
add
adc
add
pop
sub
add
or
inc
add
add
cld
and
jo
adc
add
pop
sub
add
or
push
adc
push
add
push
adc
push
adc
or
pop
add
add
cmp
add
jle
add
add
mov
add
adc
add
jb
and
jo
adc
add
pop
sub
add
push
adc
adc
sub
jle
add
add
pop
jb
add
jo
adc
add
sub
add
push
sub
inc
add
add
xor
pop
or
hlt
add
add
adc
push
adc
jle
add
add
je
add
adc
add
pop
sub
add
sub
adc
sub
add
adc
add
sub
jb
and
add
push
adc
jle
add
add
je
add
adc
add
adc
pop
sub
add
push
adc
adc
sub
jle
add
add
pop
jb
add
jo
adc
add
sub
add
push
sub
inc
add
add
xor
pop
adc
jle
add
add
fs
add
push
pop
sub
add
sub
jle
add
add
fs
add
push
jb
and
add
push
pop
sub
add
push
adc
adc
sub
jle
add
add
pop
jb
add
jo
adc
add
sub
add
push
sub
inc
add
add
xor
pop
adc
adc
sub
or
or
pop
or
add
add
adc
cmp
add
add
or
repz
add
or
in
add
add
cmp
add
add
cmp
add
add
adc
push
adc
inc
add
add
into
and
add
push
pop
sub
add
sub
jle
add
add
into
and
add
push
jb
and
jo
adc
add
pop
sub
add
push
adc
jle
add
add
or
jo
adc
add
sub
add
push
sub
inc
add
add
xor
pop
adc
jle
add
add
dec
add
adc
add
pop
sub
add
sub
jle
add
add
dec
add
adc
add
jb
and
add
push
pop
sub
add
push
adc
jle
add
add
or
jo
adc
add
sub
add
push
sub
inc
add
add
xor
pop
adc
or
adc
adc
or
or
or
push
inc
or
push
inc
or
add
fiadd
push
sub
add
push
sub
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
sub
xor
add
add
add
add
add
add
adc
add
xor
add
retf
jo
adc
add
xor
add
repnz
adc
add
xor
add
add
add
adc
add
xor
jb
daa
add
adc
add
xor
add
or
add
adc
add
xor
add
xchg
add
jo
adc
add
xor
add
or
add
adc
add
cmp
add
push
daa
add
adc
add
cmp
add
cmp
add
adc
add
cmp
add
jl
add
adc
add
cmp
add
jmp
add
cmp
jb
sub
jo
adc
add
cmp
add
jp
add
adc
add
cmp
add
les
add
adc
add
cmp
add
jmp
add
add
sub
jo
adc
add
add
sub
jo
adc
add
add
adc
add
dec
add
add
add
add
sub
add
or
jb
add
jo
adc
add
jge
add
add
jb
add
jo
adc
add
jge
add
add
jb
add
jo
adc
add
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
sahf
add
or
add
push
add
add
add
add
adc
push
add
add
add
add
adc
add
add
into
add
add
test
add
jne
add
sub
int
add
sub
add
jb
sub
jo
adc
add
sub
sub
add
add
xor
add
add
add
add
adc
add
add
sub
add
sub
add
push
sub
add
adc
add
sbb
add
add
add
add
add
add
sahf
add
or
add
push
add
add
add
add
adc
add
sbb
add
add
add
jle
add
add
ret
jo
adc
add
add
push
add
push
sub
add
xor
add
add
add
add
adc
sub
jo
adc
add
sub
sbb
add
pop
add
add
jnp
add
add
sbb
add
outs
and
add
sub
jle
add
add
sub
add
jb
sub
jo
adc
add
sub
add
or
add
add
sub
add
adc
add
push
sub
pop
add
push
add
jae
add
or
add
add
add
fiadd
add
add
add
add
adc
add
add
push
push
add
or
xor
add
add
add
add
adc
jnp
add
add
sbb
add
outs
and
add
sub
add
add
push
add
add
add
add
xor
add
add
add
add
adc
sub
push
add
pop
add
push
outs
and
add
sub
pop
sub
sub
sbb
add
add
add
adc
jnp
add
add
or
add
imul
add
pop
add
push
sub
jle
add
add
sub
add
sbb
loope
add
or
jae
add
or
jle
add
add
push
push
sub
add
push
es
add
add
sub
add
push
or
and
add
sbb
sub
add
push
add
add
add
or
xchg
add
push
jge
add
add
sysret
sub
jle
add
add
sub
ficomp
push
sub
jle
add
add
sub
jb
sub
jo
adc
add
sub
add
add
add
add
add
add
add
add
add
je
sldt
add
add
das
add
add
add
add
adc
add
mov
add
adc
sbb
inc
add
add
add
add
add
add
add
add
and
add
dec
add
sub
jb
sub
jo
adc
add
add
pop
add
push
mov
add
sub
pop
add
push
and
add
add
push
add
sub
add
and
add
add
push
add
sub
jo
adc
add
add
push
add
push
sub
pop
add
push
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
sub
add
and
add
add
push
add
cmp
(bad)
inc
add
push
mov
add
adc
add
add
add
cmp
or
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
and
add
push
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
sldt
add
and
push
or
cmp
(bad)
push
sub
jo
adc
add
sub
add
and
add
add
push
or
cmp
(bad)
push
sub
jo
adc
add
push
sub
pop
add
push
and
add
add
push
or
cmp
(bad)
(bad)
push
sub
jo
adc
add
or
sub
jo
adc
add
add
push
add
push
sub
pop
add
push
and
add
add
push
or
cmp
(bad)
(bad)
call
adc
and
add
add
push
or
cmp
(bad)
(bad)
push
sub
jo
adc
add
push
sub
pop
add
push
and
add
add
push
or
cmp
(bad)
(bad)
jmp
and
add
add
push
or
cmp
add
or
or
add
dec
or
cmp
adc
and
add
dec
or
cmp
sbb
adc
add
pop
mov
inc
add
add
xchg
add
or
pop
add
push
and
add
add
push
or
cmp
(bad)
inc
sub
add
sub
add
or
and
add
dec
or
cmp
(bad)
inc
sub
add
or
add
adc
add
dec
or
cmp
sub
add
push
and
add
add
push
or
cmp
(bad)
(bad)
call
or
or
add
add
push
or
cmp
(bad)
dec
add
push
add
push
sub
inc
and
add
add
push
or
cmp
std
(bad)
dec
sub
add
or
add
push
or
cmp
std
(bad)
jmp
and
push
or
cmp
std
(bad)
call
or
pop
adc
and
add
add
push
or
cmp
or
pop
adc
and
add
dec
or
cmp
or
pop
mov
cmc
add
add
sub
push
sub
sub
and
add
add
push
or
cmp
sub
add
or
mov
add
and
add
add
push
or
cmp
(bad)
call
add
add
and
add
add
push
or
cmp
(bad)
call
adc
and
add
add
push
or
cmp
(bad)
(bad)
cmp
or
add
dec
or
cmp
std
(bad)
call
push
mov
ds
(bad)
(bad)
jmp
or
push
or
cmp
std
(bad)
call
add
add
mov
cmp
(bad)
jmp
or
add
dec
or
cmp
cld
(bad)
call
add
jo
adc
add
sub
add
or
push
and
add
add
push
or
cmp
cld
(bad)
dec
sub
adc
push
or
cmp
cld
(bad)
inc
jb
sub
jo
adc
add
sub
add
or
and
add
add
push
or
cmp
pop
adc
call
dec
or
cmp
or
or
(bad)
jmp
add
adc
add
and
add
add
add
jle
add
add
fild
add
sub
add
sub
add
add
push
add
push
sub
add
add
xor
add
add
add
add
adc
add
add
jle
add
add
sub
push
jb
sub
jo
adc
add
sub
add
sub
add
sbb
pop
add
add
add
sub
add
sub
add
push
sub
test
jo
adc
add
sub
add
add
sub
add
or
add
add
scas
sub
jo
adc
add
push
sub
pop
add
push
jle
add
add
sub
add
push
sub
add
adc
add
sub
add
jle
add
add
sub
add
push
es
add
or
add
or
sub
add
push
sub
add
or
jae
add
or
push
add
add
pop
sub
pop
add
add
jle
add
add
popa
sub
add
push
add
push
add
push
push
sub
add
push
sub
and
add
push
sub
add
push
jle
add
add
push
sub
add
push
jae
add
or
add
or
cli
add
push
jle
add
add
sub
add
push
es
add
add
sub
into
add
add
jb
sub
jo
adc
add
sub
add
retf
add
add
add
sub
add
cmp
add
add
add
push
add
push
sub
add
push
jne
add
add
add
jle
add
add
xchg
add
push
push
sub
pop
add
push
push
adc
(bad)
add
jo
adc
add
jle
add
add
sub
add
sub
add
outs
rol
add
jle
add
add
add
add
add
sub
add
push
jb
sub
add
push
sub
add
sub
jb
add
adc
add
push
sub
pop
add
push
push
adc
fimul
push
add
adc
add
sub
add
pop
adc
fidiv
adc
sbb
add
adc
add
jle
add
add
push
sub
add
push
jae
add
push
sub
add
fiadd
jb
add
adc
add
sub
add
push
sub
pop
sub
add
add
add
add
and
add
mov
add
fadd
add
add
add
xor
add
add
add
adc
add
add
sub
add
push
or
add
add
adc
add
adc
add
push
sub
pop
add
push
jle
add
add
sub
add
push
cmp
add
add
sub
add
or
jle
add
add
jb
das
add
adc
add
sub
push
jge
add
add
int
add
pop
das
add
adc
add
add
add
add
sub
pop
add
push
add
add
add
jb
das
add
adc
add
sub
push
jge
add
add
in
add
test
adc
add
add
add
add
out
das
add
adc
add
add
add
add
jae
add
sub
add
add
add
add
std
das
add
adc
add
outs
fwait
add
or
push
xor
jnp
add
add
sbb
pushf
add
or
add
sub
add
push
sub
sbb
add
jge
add
add
sub
add
int
add
add
add
adc
add
jle
add
add
add
push
add
push
sub
pop
add
push
fiadd
add
add
add
jnp
add
add
out
das
add
adc
add
add
add
add
mov
lea
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
adc
or
add
add
sub
add
sub
add
pop
or
sub
jle
add
add
xor
add
adc
add
jle
add
add
sub
add
push
sub
pop
add
push
push
or
add
sub
add
add
add
add
add
adc
add
or
xor
add
add
adc
dec
dec
add
add
add
add
add
add
inc
add
add
add
fadd
add
xchg
add
add
add
add
mov
add
add
add
add
add
jbe
add
add
sldt
add
push
add
sub
push
or
sub
push
sub
sub
and
add
add
push
add
sub
jo
adc
add
sub
add
and
add
add
push
add
cmp
(bad)
inc
sub
add
sub
add
or
and
add
add
push
add
cmp
(bad)
inc
add
add
add
mov
add
pop
add
add
push
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
mov
add
cmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
dec
pop
outs
jbe
add
and
add
dec
add
cmp
(bad)
(bad)
push
xor
jo
adc
add
pop
sub
pop
add
push
and
push
add
cmp
(bad)
(bad)
push
xor
jo
adc
add
add
add
add
add
add
sub
pop
add
push
and
add
add
push
add
cmp
lds
add
adc
add
pop
sub
pop
add
push
and
push
add
cmp
outs
jb
add
sub
and
add
add
push
add
cmp
(bad)
dec
outs
xchg
add
or
or
add
dec
add
cmp
(bad)
inc
sub
and
add
add
push
add
cmp
(bad)
dec
add
add
add
outs
test
add
and
add
dec
add
cmp
(bad)
inc
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
sub
add
xor
add
add
adc
sub
add
or
xor
jo
adc
add
sub
add
jle
add
add
xor
add
adc
add
push
sub
pop
add
push
jle
add
or
push
or
pop
outs
popf
add
or
cmp
cmp
add
add
push
outs
popf
add
or
push
add
push
sub
jle
add
add
xor
add
push
outs
popf
add
or
adc
push
mov
add
pop
outs
pushf
add
or
inc
add
push
or
mov
add
adc
add
or
pop
add
sub
add
jle
add
add
inc
add
mov
sub
jle
add
add
push
add
or
sub
add
push
adc
xor
add
pop
adc
sbb
retf
xor
jo
adc
add
jle
add
or
add
or
add
add
iret
xor
jo
adc
add
adc
push
sub
add
adc
or
inc
adc
adc
outs
popf
add
or
push
jle
add
add
jle
add
add
test
add
add
add
xchg
add
push
sub
add
push
sub
add
push
mov
add
inc
add
push
or
or
pop
adc
adc
adc
outs
sahf
add
or
mov
int
add
or
add
adc
add
pop
sub
pop
add
push
fisub
adc
sbb
xor
jo
adc
add
jle
add
add
pop
sub
add
push
jae
add
push
sub
add
fiadd
pop
sub
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
sbb
inc
add
add
add
add
scas
add
add
add
push
add
add
and
add
dec
add
sub
jle
add
add
sub
add
jb
xor
jo
adc
add
add
push
add
push
push
sub
add
push
sub
and
add
add
push
add
sub
jo
adc
add
sub
add
and
add
add
push
add
sub
jo
adc
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
sub
add
jb
sub
jo
adc
add
add
pop
add
push
outs
add
add
push
sub
add
push
sub
and
add
add
push
add
cmp
(bad)
push
xor
jo
adc
add
add
pop
add
push
outs
add
add
sub
pop
add
push
sub
add
xor
add
add
sub
add
adc
sbb
add
push
adc
jb
xor
jo
adc
add
sub
add
sub
add
or
sbb
xor
jo
adc
add
jge
add
add
scas
xor
jo
adc
add
or
xor
jo
adc
add
or
into
add
add
fild
add
and
push
jb
xor
add
push
sub
jle
add
add
fild
add
and
push
jb
xor
add
push
sub
add
adc
inc
add
add
push
sub
add
cmp
inc
add
add
push
sub
add
adc
adc
adc
adc
adc
jle
add
add
or
jb
and
jo
adc
add
adc
sub
imul
add
sub
add
sbb
add
or
adc
adc
add
xor
add
adc
push
sub
add
sub
adc
adc
sub
or
push
adc
xor
push
adc
adc
adc
xor
add
or
lea
add
adc
pop
pop
adc
adc
sub
jle
add
add
jb
and
jo
adc
add
adc
push
or
int
add
mov
adc
add
adc
push
sub
add
jle
add
add
jb
add
adc
add
push
push
sub
add
cmp
add
add
add
add
jb
add
jo
adc
add
pop
push
sub
add
cmp
add
add
add
add
jb
add
adc
add
jb
add
adc
add
push
sub
add
push
cmp
add
add
add
add
jb
xor
add
push
or
sub
add
push
cmp
add
add
add
add
jb
add
adc
add
jb
add
adc
add
push
sub
add
push
cmp
inc
add
add
jb
add
adc
add
pop
push
sub
add
push
cmp
inc
add
add
jb
add
adc
add
jb
add
adc
add
push
sub
add
push
sub
jle
add
add
jb
add
adc
add
jb
add
adc
add
push
sub
add
push
sub
jle
add
add
jb
add
adc
add
pop
push
sub
add
sub
jle
add
add
jb
add
adc
add
push
push
sub
add
sub
jle
add
add
iret
add
adc
add
adc
push
sub
add
add
pop
add
push
adc
jle
add
add
or
sub
add
adc
adc
add
or
pop
push
adc
sub
adc
call
add
sub
add
jle
add
add
or
or
sub
add
sub
add
sub
adc
add
add
add
adc
add
adc
push
sub
add
sub
adc
push
sub
or
push
adc
xor
push
adc
adc
pop
pop
adc
adc
adc
mov
xchg
adc
or
adc
pop
pop
adc
adc
sub
jle
add
add
inc
aaa
add
adc
add
adc
push
sub
add
jle
add
add
or
add
add
push
sub
add
push
sub
jb
aaa
add
adc
add
sub
add
push
sub
sub
add
sub
add
or
aaa
add
adc
add
jb
aaa
add
adc
add
outs
mov
add
or
add
or
aaa
add
adc
add
jb
aaa
add
adc
add
outs
mov
add
adc
sub
add
or
jle
add
add
add
sub
add
cmp
adc
add
add
inc
add
mov
sub
add
jae
add
or
push
adc
jle
add
add
adc
push
imul
push
jae
add
or
jle
add
add
cmp
add
adc
adc
adc
jb
aaa
add
adc
add
outs
aaa
add
or
push
jle
add
add
sbb
add
add
sub
aaa
add
or
adc
add
push
adc
adc
sub
push
sti
add
push
jae
add
or
sbb
sbb
add
or
adc
adc
aaa
add
adc
add
sub
add
adc
adc
pop
pop
jle
add
add
sbb
add
add
sub
cmp
adc
adc
outs
add
or
outs
xchg
add
or
add
adc
add
sub
add
adc
and
and
add
add
and
and
add
or
sub
aas
add
or
adc
jle
add
add
adc
push
ins
add
push
jae
add
or
jle
add
add
cmp
add
adc
adc
adc
cmp
jo
adc
add
sub
add
adc
adc
pop
pop
jb
cmp
jo
adc
add
outs
cmp
adc
add
add
add
add
add
push
outs
inc
add
or
add
add
mov
xor
push
sub
lea
add
adc
and
jb
aaa
add
adc
add
mov
int
add
sbb
add
add
sub
adc
jb
cmp
jo
adc
add
mov
jle
add
add
add
adc
add
add
mov
xor
push
jb
cmp
jo
adc
add
sub
add
or
cmp
jo
adc
add
sub
add
or
sbb
add
or
adc
adc
add
add
mov
out
add
or
adc
adc
add
add
mov
or
add
adc
add
adc
xchg
add
push
push
push
ss
add
add
adc
add
mov
add
jle
add
add
adc
add
mov
add
jb
cmp
jo
adc
add
sub
add
cmp
add
add
adc
in
add
or
add
add
and
adc
adc
xlat
add
push
jle
add
add
adc
cmp
jo
adc
add
sub
add
sub
jb
cmp
jo
adc
add
sub
add
sub
add
or
add
add
adc
in
add
add
adc
xchg
add
push
jle
add
add
adc
xchg
add
push
pop
imul
outs
fiadd
add
adc
jle
add
add
inc
cmp
jo
adc
add
adc
sub
pop
add
push
adc
sbb
adc
pop
popf
adc
adc
add
adc
adc
adc
push
adc
sub
adc
call
pop
add
push
sbb
add
or
add
push
add
push
sbb
add
or
cmp
jo
adc
add
sub
add
fucom
add
add
daa
pop
pop
adc
adc
adc
mov
mov
loope
add
jle
add
add
sub
add
push
mov
add
inc
add
push
outs
loopne
add
adc
jle
add
add
adc
add
inc
add
mov
and
add
mov
add
adc
add
add
pop
add
push
adc
push
sub
ss
push
jle
add
add
adc
add
jle
add
add
adc
add
push
jle
add
add
adc
sub
add
add
adc
add
push
jle
add
add
adc
add
push
jle
add
add
adc
add
push
jb
cmp
jo
adc
add
sub
add
ficom
adc
sub
jle
add
add
adc
fwait
add
push
fsubr
add
add
add
add
das
push
add
xor
add
popa
or
add
add
add
add
add
xor
adc
add
add
add
add
aaa
add
adc
add
sbb
add
or
add
adc
add
adc
add
add
add
add
cmp
jo
adc
add
sbb
add
or
add
adc
add
add
add
add
add
cmp
jo
adc
add
add
add
add
jbe
add
adc
add
sub
add
and
fild
add
sub
add
add
add
adc
add
add
cmp
jo
adc
add
add
push
add
pop
or
sbb
push
add
add
add
add
adc
jle
add
or
adc
add
or
add
add
add
add
jae
add
or
jae
add
or
add
pop
sub
add
push
jle
add
add
pop
sub
add
push
jle
add
add
add
add
add
adc
adc
add
adc
add
jmp
sub
add
push
add
pop
outs
popf
add
or
add
push
xchg
popa
rcr
push
adc
jle
add
add
add
adc
adc
pop
pop
adc
adc
add
add
or
retf
or
adc
jle
add
add
aas
add
add
inc
add
mov
add
inc
add
push
add
sub
or
adc
sub
or
or
add
or
adc
or
aaa
add
add
xchg
add
add
or
daa
add
push
popa
rcl
or
or
adc
xchg
popa
rcl
or
inc
add
add
adc
inc
add
push
adc
pop
pop
adc
adc
jle
add
add
xchg
add
add
xlat
add
push
xor
push
adc
adc
pop
pop
adc
adc
jle
add
add
add
adc
adc
pop
pop
adc
adc
adc
outs
sahf
add
or
xchg
add
add
add
add
or
or
pop
pop
pushf
adc
pop
pop
adc
adc
jle
add
add
jmp
add
sub
add
adc
push
adc
sub
adc
adc
xchg
adc
rcr
push
adc
jle
add
add
add
adc
adc
pop
pop
adc
adc
push
in
add
add
sub
(bad)
jle
add
add
adc
push
jle
add
add
sub
jle
add
add
inc
add
add
sub
add
sub
add
push
fiadd
es
adc
fiadd
pop
sub
adc
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
sub
add
cmp
add
dec
add
add
add
add
jle
add
jle
add
sbb
add
rol
add
add
sbb
add
jbe
add
sahf
add
add
add
add
add
add
add
add
add
aam
add
mov
add
call
add
add
add
add
add
add
add
add
add
add
push
add
xor
add
add
add
add
or
add
add
xchg
add
add
add
add
or
add
add
add
add
pop
add
add
push
add
sub
add
push
add
add
add
add
add
add
mov
add
repz
add
add
add
add
mov
add
bound
add
in
add
add
add
add
add
rol
add
add
add
add
add
add
cmp
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
mov
add
add
add
add
add
dec
add
add
push
adc
cmp
jae
add
or
add
add
dec
adc
cmp
sub
push
and
add
dec
adc
cmp
(bad)
call
push
jle
add
add
or
add
and
add
add
push
adc
cmp
(bad)
inc
jb
cmp
jo
adc
add
jb
cmp
jo
adc
add
outs
mov
add
adc
and
add
add
push
adc
cmp
(bad)
(bad)
call
sub
dec
add
add
push
adc
cmp
(bad)
(bad)
call
adc
pop
adc
and
add
add
push
adc
cmp
loop
add
jle
add
add
loopne
add
or
add
add
dec
adc
cmp
std
(bad)
(bad)
jle
add
add
add
add
add
dec
add
add
push
adc
cmp
std
(bad)
(bad)
jle
add
add
add
add
add
push
adc
cmp
std
(bad)
dec
adc
xchg
add
add
adc
add
dec
adc
cmp
rol
add
sub
add
dec
adc
cmp
or
popa
rcl
or
add
push
adc
cmp
(bad)
dec
adc
push
add
add
push
adc
cmp
(bad)
call
lea
add
mov
add
add
push
adc
cmp
(bad)
call
or
pop
adc
sbb
add
dec
adc
cmp
(bad)
call
add
add
mov
add
push
adc
cmp
std
(bad)
call
adc
and
add
add
push
adc
cmp
std
(bad)
call
adc
and
add
dec
adc
cmp
std
(bad)
call
adc
and
add
add
push
adc
cmp
cld
(bad)
call
add
push
push
adc
xchg
adc
push
xchg
popa
rcr
dec
adc
cmp
cld
(bad)
inc
jae
add
or
sbb
add
dec
adc
cmp
cld
(bad)
call
push
pop
pop
adc
and
add
add
push
adc
cmp
adc
and
add
add
push
adc
cmp
adc
and
add
dec
adc
cmp
or
enter
and
add
add
push
adc
cmp
(bad)
call
add
and
add
add
push
adc
cmp
(bad)
call
adc
pop
adc
and
add
add
push
adc
cmp
(bad)
call
push
pop
pop
adc
and
push
adc
cmp
adc
add
push
adc
cmp
(bad)
call
pop
pop
pop
adc
and
add
dec
adc
cmp
cld
(bad)
call
adc
and
add
add
push
adc
cmp
cld
(bad)
call
or
add
add
add
add
aas
add
add
push
adc
cmp
sti
(bad)
call
pop
push
mov
xchg
add
add
aas
out
(bad)
jmp
or
add
dec
adc
cmp
sti
(bad)
call
sub
add
add
push
adc
cmp
adc
and
add
add
push
adc
cmp
adc
and
push
adc
cmp
add
add
dec
add
add
push
adc
cmp
or
pop
adc
and
add
add
push
adc
cmp
(bad)
cmp
(bad)
jmp
inc
add
add
push
adc
cmp
(bad)
(bad)
cmp
(bad)
(bad)
jmp
dec
add
add
push
adc
cmp
(bad)
call
or
popa
rcl
or
add
push
adc
cmp
sti
(bad)
call
adc
and
add
dec
adc
cmp
or
pop
adc
and
push
adc
cmp
sti
(bad)
call
or
mov
and
add
add
push
adc
cmp
cli
(bad)
call
push
jle
add
add
(bad)
(bad)
(bad)
jmp
inc
add
add
push
adc
cmp
cli
(bad)
call
adc
adc
xchg
popa
rcl
adc
xor
add
dec
adc
cmp
cli
(bad)
call
or
add
add
imul
add
add
push
adc
cmp
or
in
add
and
add
add
push
adc
cmp
xchg
add
add
add
add
dec
add
add
push
adc
cmp
or
xchg
add
add
xchg
add
add
aas
jns
add
and
add
add
push
adc
cmp
(bad)
(bad)
jle
add
add
or
adc
add
dec
adc
cmp
(bad)
call
or
pop
adc
and
add
add
push
adc
cmp
cli
(bad)
inc
sub
add
or
and
add
push
adc
cmp
(bad)
call
adc
and
push
adc
cmp
cli
(bad)
(bad)
cmp
add
and
add
add
push
adc
cmp
cli
(bad)
call
adc
and
add
add
push
adc
cmp
stc
(bad)
call
adc
adc
xchg
popa
rcl
adc
sbb
add
dec
adc
cmp
stc
(bad)
(bad)
cmp
(bad)
jmp
cmp
add
dec
adc
cmp
stc
(bad)
dec
adc
adc
or
push
xchg
popa
rcr
dec
adc
cmp
movhps
adc
dec
adc
cmp
outs
sahf
add
or
add
add
xchg
add
add
pop
pop
cmp
sti
(bad)
jmp
add
add
dec
adc
cmp
(bad)
call
or
pop
adc
and
add
add
push
adc
cmp
call
or
mov
pop
and
add
add
push
adc
cmp
(bad)
call
adc
and
add
add
push
adc
cmp
stc
(bad)
call
or
pop
adc
and
add
add
push
adc
cmp
stc
(bad)
call
or
add
add
(bad)
jmp
add
add
push
adc
cmp
stc
(bad)
call
adc
and
add
add
push
adc
cmp
clc
(bad)
inc
adc
adc
add
push
adc
cmp
clc
(bad)
call
adc
and
add
dec
adc
cmp
clc
(bad)
call
adc
add
add
je
sub
add
dec
adc
cmp
adc
xchg
adc
and
add
add
push
adc
cmp
adc
mov
xchg
add
add
xor
and
add
add
push
adc
cmp
adc
and
add
dec
adc
cmp
(bad)
inc
push
mov
xchg
add
add
adc
pop
xchg
adc
or
jmp
push
add
add
push
adc
cmp
(bad)
dec
adc
xchg
or
adc
call
sub
push
sub
sub
and
push
adc
cmp
clc
(bad)
(bad)
jle
add
add
xchg
add
add
adc
and
add
dec
adc
cmp
clc
(bad)
(bad)
cmp
or
add
dec
adc
cmp
(bad)
inc
push
jle
add
add
inc
add
mov
movaps
add
outs
daa
add
or
and
add
add
push
adc
cmp
idiv
call
adc
and
add
add
push
adc
cmp
idiv
call
sub
sub
add
jo
adc
add
adc
xchg
add
add
adc
cmp
jo
adc
add
adc
add
jne
add
sub
sub
add
or
jb
add
jo
adc
add
jge
add
add
adc
xchg
add
add
jae
add
or
add
add
and
add
jae
add
or
add
push
add
push
jae
add
or
add
add
add
outs
mov
jnp
add
add
outs
mov
jnp
add
add
outs
mov
jnp
add
add
adc
add
or
add
add
xor
add
add
add
add
adc
add
add
sub
add
sub
add
push
sub
add
adc
add
add
add
add
add
sub
add
adc
add
or
add
adc
jnp
add
add
outs
rol
or
add
add
xor
add
add
add
add
add
add
add
rol
or
adc
add
push
add
add
add
adc
sub
add
sub
xchg
add
add
sub
add
sub
add
xor
xor
add
add
add
jle
add
add
jnp
add
add
sub
add
sub
add
add
add
push
add
add
add
jnp
add
add
dec
add
push
jge
add
add
add
add
xor
stos
add
add
add
adc
and
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
xor
add
add
dec
add
sub
push
sub
and
add
add
push
add
sub
add
add
add
add
dec
add
sub
jo
adc
add
add
jp
add
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
inc
outs
jge
add
sub
adc
add
adc
add
add
add
jle
add
add
jnp
add
add
push
add
push
sub
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
adc
jnp
add
add
push
add
ja
add
add
add
add
add
add
xor
add
add
adc
sub
or
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
pop
add
add
push
add
sub
jb
cmp
jo
adc
add
add
jp
add
sub
pop
add
push
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
sub
inc
and
add
add
push
add
cmp
(bad)
inc
sub
add
sub
add
or
and
push
add
cmp
inc
pop
add
jnp
add
sub
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
and
add
add
push
add
cmp
(bad)
(bad)
call
or
push
add
add
push
add
cmp
(bad)
(bad)
inc
outs
jge
add
sub
xor
add
add
adc
or
sub
add
or
sub
add
or
sub
or
icebp
cmp
jo
adc
add
add
jp
add
sub
pop
add
push
push
sub
sub
push
jle
add
add
hlt
add
add
push
add
push
add
or
jle
add
or
cmp
add
sbb
adc
add
add
jp
add
jb
push
add
adc
add
jle
add
add
sub
add
push
sub
add
sub
add
push
or
add
sub
add
push
sub
add
add
add
add
cmp
sbb
or
xor
add
add
adc
push
dec
add
add
add
add
hlt
add
add
add
add
add
fiadd
add
push
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
add
add
or
or
add
dec
add
sub
and
add
dec
add
cmp
push
cmp
jo
adc
add
push
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
inc
sub
add
or
and
add
add
push
add
cmp
inc
sub
fld
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
or
or
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
mov
add
push
add
cmp
(bad)
(bad)
push
cmp
jo
adc
add
add
pop
add
sub
add
and
push
add
cmp
(bad)
(bad)
inc
add
jg
add
and
add
add
push
add
cmp
sub
push
add
add
push
add
cmp
add
jnp
add
sub
add
or
or
add
dec
add
cmp
sbb
and
add
add
push
add
cmp
(bad)
push
cmp
jo
adc
add
add
pop
add
sub
add
and
add
add
push
add
cmp
push
cmp
jo
adc
add
add
pop
add
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
xor
pop
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
or
and
add
add
push
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
inc
sub
add
or
or
sub
add
sub
add
xor
add
cmp
or
add
add
add
add
adc
add
or
add
ret
add
add
add
add
add
cdq
add
add
add
add
add
cmp
add
add
and
add
add
push
add
sub
jo
adc
add
pop
sub
pop
add
push
and
add
add
push
add
sub
or
and
add
add
push
add
sub
add
sub
add
sub
add
or
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
dec
sub
add
and
push
add
cmp
(bad)
inc
jle
add
add
sub
add
sub
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
or
mov
add
add
push
add
cmp
(bad)
(bad)
inc
add
mov
add
add
push
add
cmp
(bad)
push
cmp
add
push
add
pop
add
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
mov
or
add
add
dec
add
cmp
(bad)
add
or
or
add
dec
add
cmp
pop
cmp
add
push
add
pop
add
sub
add
sub
add
adc
add
mov
add
add
add
sub
dec
add
add
add
add
add
add
add
add
or
add
add
add
push
add
sub
add
je
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
sub
and
add
dec
add
sub
add
dec
add
sub
add
sub
add
and
add
add
push
add
sub
jo
adc
add
add
jp
add
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
inc
sub
add
sub
add
add
xor
add
add
xor
add
adc
jle
add
add
sub
add
sub
add
push
sub
add
jp
add
jae
add
or
jle
add
add
sbb
push
sub
add
or
add
adc
clts
sub
jle
add
add
sub
push
sub
sub
add
add
add
sbb
add
add
add
and
add
add
add
adc
add
cmp
add
add
add
jle
add
add
mov
sub
add
push
add
jp
add
sub
add
sub
jle
add
add
mov
sub
add
push
add
jp
add
sub
add
push
sub
add
adc
add
sub
add
adc
cmp
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
or
add
dec
add
sub
add
add
push
add
sub
add
add
push
add
sub
add
and
add
add
push
add
sub
add
add
push
add
cmp
(bad)
inc
add
fisub
add
add
dec
add
cmp
(bad)
(bad)
cmp
add
add
dec
add
cmp
(bad)
call
sub
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
mov
mov
ins
(bad)
(bad)
jmp
or
add
dec
add
cmp
sub
add
add
dec
add
cmp
push
xchg
add
xchg
cs
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
pop
or
push
add
add
push
add
cmp
(bad)
(bad)
inc
add
sub
add
pop
add
jno
add
add
add
jo
adc
add
jge
add
add
adc
add
sldt
add
add
adc
add
add
add
add
cdq
add
add
add
xor
add
add
adc
or
add
add
jnp
add
add
sub
add
sub
add
add
add
jnp
add
add
das
add
push
or
sub
jnp
add
add
jnp
add
add
add
xor
add
or
jle
add
add
jnp
add
add
sub
xchg
add
add
pop
sub
add
add
jne
add
sub
add
push
or
pop
or
add
mov
add
adc
add
or
inc
add
push
sub
add
push
or
add
sub
adc
add
add
add
add
or
xor
add
add
add
add
adc
adc
jo
adc
add
sub
add
push
sub
xor
lods
add
add
and
or
add
add
add
add
add
add
test
add
inc
add
add
add
or
add
add
add
push
add
sub
sub
je
sub
push
sub
sub
and
add
add
push
add
sub
jo
adc
add
sub
add
and
add
dec
add
sub
add
add
dec
add
sub
add
add
or
add
add
dec
add
cmp
(bad)
push
adc
jo
adc
add
push
sub
add
or
add
add
dec
add
cmp
(bad)
call
sub
sub
xor
mov
add
xor
add
sub
inc
add
add
add
add
mov
add
or
add
cmp
and
add
dec
add
sub
jb
add
adc
add
push
sub
pop
add
push
and
add
add
push
add
sub
or
and
add
add
push
add
sub
add
push
add
jo
adc
add
jb
add
jo
adc
add
sub
add
or
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
sub
adc
add
push
add
cmp
(bad)
inc
jae
add
or
pop
sub
xor
add
add
adc
sbb
inc
add
add
add
add
jb
add
or
add
dec
add
add
and
add
dec
add
sub
push
jb
add
adc
add
jae
add
or
add
or
xor
add
add
dec
add
sub
sub
add
push
sub
add
and
add
add
push
add
sub
push
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
push
add
cmp
(bad)
push
add
adc
add
sub
add
push
sub
add
xor
add
add
xor
add
jb
aas
add
adc
add
sub
add
sub
push
outs
push
add
or
push
adc
sub
add
or
outs
xchg
add
push
adc
sub
or
add
push
or
or
add
fsubr
add
add
add
add
sbb
sbb
add
add
add
push
add
add
add
sub
add
outs
add
push
add
add
push
add
add
push
sub
jle
add
or
pop
add
add
sub
jae
add
or
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
sbb
add
xchg
add
xor
jnp
add
add
inc
add
or
add
sub
add
jb
aas
add
adc
add
sub
push
jae
add
or
jle
add
add
sub
add
push
sub
jle
add
add
sub
add
or
adc
adc
adc
call
add
sub
add
push
outs
aaa
add
or
add
adc
xor
fiadd
fiadd
add
add
add
add
add
add
add
or
add
add
add
xor
data16
add
add
adc
add
or
sub
pop
outs
dec
add
or
add
xor
add
or
int
add
jge
add
adc
add
or
add
push
sub
pop
add
push
or
add
push
or
add
or
add
dec
add
or
add
push
or
add
outs
or
add
fadd
sub
add
adc
add
add
inc
push
add
add
add
sbb
add
add
add
adc
add
add
sub
add
jb
aas
add
adc
add
sub
push
jae
add
or
jle
add
add
sub
add
push
sub
sub
jle
add
add
sub
add
or
adc
push
adc
sub
call
jle
add
add
sub
add
push
jb
aas
add
adc
add
sub
add
add
mov
adc
pop
pop
adc
adc
adc
mov
ret
fisubr
adc
add
sar
jo
adc
add
jle
add
add
add
push
sub
pop
add
push
fiadd
sub
add
adc
add
add
add
add
add
add
push
sub
add
adc
add
add
add
adc
sub
add
or
push
inc
push
add
add
add
add
add
push
add
add
mov
add
jle
add
add
outs
inc
add
push
jb
aas
add
adc
add
sub
popf
add
add
add
add
add
outs
inc
add
push
jb
inc
add
adc
add
sub
popf
add
add
add
add
add
outs
inc
add
push
jb
inc
add
adc
add
sub
popf
add
add
add
add
add
outs
inc
add
push
jb
inc
add
adc
add
sub
popf
add
add
add
add
add
outs
inc
add
push
jb
inc
add
adc
add
sub
popf
add
add
add
add
add
outs
inc
add
push
jb
inc
add
adc
add
sub
popf
add
add
add
add
add
outs
inc
add
push
jb
aas
add
adc
add
sub
popf
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
sub
sub
add
sub
add
adc
add
adc
add
add
add
jle
add
add
sub
push
add
push
sub
add
adc
add
adc
add
add
add
jle
add
add
sub
sub
add
push
sub
add
xor
add
add
add
add
adc
sub
jmp
add
jne
add
add
add
add
xor
push
add
add
add
adc
add
sub
add
push
sub
add
adc
add
cmp
add
cmp
add
sub
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
add
fwait
add
push
or
add
add
dec
add
sub
add
push
je
add
add
add
push
add
sub
add
adc
add
outs
daa
add
or
mov
add
add
dec
add
cmp
(bad)
dec
cmp
add
add
dec
add
cmp
(bad)
inc
cmp
pop
add
add
push
add
cmp
(bad)
inc
jb
inc
add
adc
add
outs
daa
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
jb
inc
add
adc
add
outs
sub
add
jne
add
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
jb
inc
add
adc
add
outs
sub
add
jne
add
add
push
add
add
push
add
cmp
(bad)
(bad)
dec
sub
and
add
dec
add
cmp
(bad)
(bad)
dec
sub
add
add
xor
push
add
add
add
adc
xor
inc
or
add
out
add
cmp
add
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
or
add
dec
add
sub
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
or
and
push
add
sub
add
and
add
add
push
add
sub
add
adc
add
outs
sub
add
jne
add
add
pop
add
add
push
add
cmp
(bad)
inc
jb
inc
add
adc
add
outs
daa
add
or
xchg
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jb
inc
add
adc
add
outs
sub
add
jne
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jb
inc
add
adc
add
outs
daa
add
or
and
add
add
push
add
cmp
(bad)
(bad)
dec
sub
and
add
add
push
add
cmp
(bad)
(bad)
dec
sub
and
add
dec
add
cmp
(bad)
(bad)
dec
add
add
push
je
add
add
add
push
add
cmp
push
sub
add
adc
add
cmps
add
add
add
adc
and
or
add
add
add
add
add
add
add
pop
add
add
add
add
add
and
push
add
sub
push
sub
pop
sub
push
sub
sub
and
add
dec
add
sub
add
adc
add
outs
rol
add
or
add
add
dec
add
sub
add
add
dec
add
sub
add
push
or
add
add
dec
add
sub
add
jae
add
or
and
add
add
push
add
cmp
(bad)
call
add
adc
or
add
adc
push
add
add
add
add
adc
dec
dec
add
and
add
pop
add
add
add
stos
add
add
add
add
add
add
add
or
add
aas
add
add
add
add
add
add
add
xchg
add
add
and
add
add
push
add
sub
pop
add
push
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
or
add
add
dec
add
(bad)
dec
sbb
inc
add
adc
add
mov
add
push
add
(bad)
inc
sub
and
push
add
(bad)
dec
sbb
sub
and
add
add
push
add
(bad)
dec
sbb
mov
add
push
add
(bad)
inc
add
popf
add
push
or
add
add
dec
add
(bad)
dec
pop
or
and
add
add
push
add
(bad)
dec
sbb
inc
add
adc
add
mov
add
push
add
(bad)
push
inc
add
adc
add
add
inc
add
adc
add
add
xchg
add
push
sub
pop
add
push
and
add
add
push
add
(bad)
dec
jae
add
or
and
add
add
push
add
(bad)
inc
sub
and
add
add
push
add
(bad)
dec
push
jb
inc
add
adc
add
mov
add
push
add
(bad)
inc
jb
inc
add
adc
add
outs
rol
add
or
add
add
dec
add
(bad)
call
or
add
push
add
(bad)
call
add
adc
adc
add
sbb
add
mov
add
cmp
add
add
fwait
add
push
or
jb
inc
add
adc
add
outs
daa
add
or
push
jb
inc
add
adc
add
outs
sub
add
jne
add
add
pop
sub
pop
jb
inc
add
adc
add
outs
daa
add
or
add
aas
inc
add
adc
add
add
xchg
add
push
sub
pop
add
push
pop
or
inc
add
adc
add
add
xchg
add
push
sub
pop
add
push
ficom
or
mov
sub
add
push
sub
add
fiadd
jb
inc
add
adc
add
add
xchg
add
push
sub
pop
add
push
push
sub
sub
adc
add
add
add
add
add
xor
add
add
add
add
adc
adc
jo
adc
add
sub
add
push
sub
xor
add
add
add
add
adc
mov
add
sub
sub
sbb
add
inc
add
add
iret
inc
add
adc
add
sub
add
pop
sub
push
outs
arpl
add
or
push
adc
sub
add
or
outs
test
add
adc
sub
add
sub
add
push
adc
or
add
fsubr
add
adc
add
add
push
add
add
push
add
add
add
sub
add
add
push
add
add
push
add
add
push
sub
add
sbb
add
into
add
add
add
adc
add
or
add
sub
add
or
outs
pop
add
or
pop
sub
add
or
int
add
repz
add
adc
add
or
add
push
sub
pop
add
push
or
add
push
or
add
or
pop
sub
add
sub
pop
(bad)
push
adc
add
outs
or
add
fsubr
mov
add
add
dec
add
or
or
cmp
or
dec
add
or
add
add
repz
add
adc
add
adc
push
sub
pop
add
push
adc
push
adc
push
adc
outs
add
or
or
dec
add
or
or
push
or
add
outs
or
add
fadd
sub
add
sbb
add
add
add
add
add
add
add
ja
inc
mov
add
sbb
add
add
add
adc
sub
jle
add
add
sub
add
push
sub
sub
push
sub
fisub
or
add
add
sub
sub
add
push
jle
add
add
sub
add
push
sub
pop
add
push
fiadd
sub
add
add
add
add
and
add
or
xor
cmp
add
adc
jb
inc
add
adc
add
sub
add
or
add
add
jb
aas
add
adc
add
sub
add
or
add
add
jb
inc
add
adc
add
sub
add
add
xor
add
add
add
add
adc
add
adc
add
sub
add
add
add
jle
add
add
dec
add
add
inc
add
add
arpl
push
sub
add
sub
add
push
jae
add
or
test
or
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
adc
sub
or
add
add
add
add
add
add
add
add
add
pushf
add
add
add
push
add
add
and
add
add
push
add
sub
add
lods
add
push
sub
add
push
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
sub
push
add
add
push
add
sub
add
or
add
add
add
add
dec
add
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
sub
add
push
and
push
add
cmp
(bad)
inc
and
add
jae
add
or
and
add
dec
add
cmp
(bad)
(bad)
inc
outs
scas
add
push
add
lods
add
push
jle
add
add
repnz
add
adc
add
add
lods
add
push
sub
add
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
xor
add
pop
sub
add
adc
add
and
add
add
add
sub
dec
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
push
add
add
and
add
add
push
add
sub
add
add
add
loope
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
and
add
add
push
add
sub
sub
add
or
add
add
dec
add
sub
jo
adc
add
add
lods
add
push
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
xor
add
sub
and
push
add
cmp
inc
jnp
add
add
xor
add
and
add
dec
add
cmp
(bad)
(bad)
push
inc
add
adc
add
add
lods
add
push
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
(bad)
push
inc
add
adc
add
add
add
add
xor
add
mov
add
sub
pop
add
push
sub
xor
add
add
add
add
adc
add
add
xor
add
add
adc
sbb
or
add
add
add
add
pusha
add
add
add
add
add
add
add
add
dec
add
sub
jb
inc
add
adc
add
add
lods
add
push
sub
pop
add
push
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
and
add
add
push
add
sub
add
sub
add
add
dec
add
sub
add
sub
add
xor
add
add
add
add
adc
add
add
xor
cmp
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jb
inc
add
adc
add
sub
jle
add
add
sub
add
push
sub
add
add
push
sub
add
adc
add
add
add
add
add
sub
add
push
add
pop
add
or
adc
add
add
add
sub
or
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
push
or
sub
or
and
add
add
push
or
cmp
(bad)
push
add
or
and
push
or
cmp
(bad)
inc
jb
inc
add
adc
add
outs
aaa
add
or
sub
push
sub
sub
and
push
or
cmp
(bad)
(bad)
jle
add
add
add
jb
add
adc
add
sub
add
adc
add
push
or
cmp
(bad)
(bad)
inc
jb
inc
add
adc
add
outs
aaa
add
or
add
add
dec
or
cmp
(bad)
(bad)
inc
jb
inc
add
adc
add
outs
aaa
add
or
add
add
dec
or
cmp
(bad)
(bad)
dec
adc
add
push
adc
and
add
dec
or
cmp
(bad)
(bad)
inc
jb
inc
add
adc
add
outs
aaa
add
or
adc
add
dec
or
cmp
jb
inc
add
adc
add
outs
aaa
add
or
adc
add
dec
or
cmp
inc
add
add
push
add
add
push
or
cmp
(bad)
dec
adc
and
push
or
cmp
(bad)
(bad)
jle
add
add
add
aam
add
adc
add
sub
add
adc
and
add
add
push
or
cmp
(bad)
(bad)
call
or
or
add
dec
or
cmp
(bad)
(bad)
(bad)
jle
add
add
xchg
add
jo
adc
add
push
sub
add
or
adc
add
dec
or
cmp
(bad)
(bad)
inc
or
add
or
add
dec
or
cmp
std
(bad)
call
or
pop
adc
and
add
add
push
or
cmp
std
(bad)
inc
jb
inc
add
adc
add
outs
aaa
add
or
add
add
dec
or
cmp
add
or
add
dec
or
cmp
adc
and
add
add
push
or
cmp
jb
inc
add
adc
add
outs
aaa
add
or
adc
add
dec
or
cmp
(bad)
inc
adc
outs
dec
add
or
or
add
dec
or
cmp
(bad)
dec
jb
inc
add
adc
add
sub
add
push
add
add
push
or
cmp
(bad)
call
or
or
(bad)
inc
sub
add
adc
add
pop
add
add
add
sub
dec
add
jl
add
imul
add
add
retf
add
add
add
add
add
add
add
add
or
add
dec
add
inc
add
add
or
jo
adc
add
sub
add
or
add
add
dec
add
pop
pop
or
add
push
add
mov
add
and
add
add
push
add
jb
inc
add
adc
add
outs
xchg
add
or
and
add
add
push
add
(bad)
call
adc
pop
add
add
push
add
(bad)
call
or
or
add
dec
add
(bad)
inc
or
sub
sub
and
add
add
push
add
(bad)
dec
adc
or
push
add
add
push
add
(bad)
call
add
pop
adc
add
add
dec
add
(bad)
call
add
mov
rol
sub
push
add
add
add
sub
xor
add
add
add
add
adc
jnp
add
add
add
add
add
add
add
jge
add
add
add
xor
jnp
add
add
add
sub
inc
add
add
add
add
pop
add
add
add
inc
add
add
and
add
add
push
add
sub
add
popa
xor
add
add
dec
add
sub
add
inc
xor
and
add
add
push
add
sub
sub
sub
push
sub
sub
and
add
add
push
add
sub
add
inc
sub
add
add
dec
add
sub
add
xor
add
add
add
add
add
add
add
add
sub
add
push
sub
adc
add
pop
add
add
add
adc
add
add
jnp
add
add
outs
mov
cmp
add
sub
adc
add
xchg
add
add
add
sub
inc
add
add
add
add
add
add
or
add
dec
add
add
and
add
add
push
add
sub
add
lds
add
sub
and
add
dec
add
sub
add
sub
add
push
sub
and
add
add
push
add
sub
add
sub
sub
and
add
add
push
add
sub
add
push
sub
and
add
add
push
add
sub
add
push
sub
sub
add
xor
add
add
add
add
add
add
add
add
add
sub
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
rol
push
sub
xor
add
add
add
add
adc
add
rol
push
push
inc
sub
push
add
sbb
and
add
push
add
or
add
add
add
sub
add
or
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
push
add
add
add
add
sub
add
or
sub
add
adc
add
jae
add
or
outs
sahf
add
or
add
adc
add
jb
inc
add
adc
add
jae
add
or
add
add
add
add
sub
add
add
test
add
xor
add
adc
xor
inc
or
add
(bad)
add
add
add
pusha
add
add
add
add
add
add
add
jo
add
mov
add
or
add
add
or
add
dec
add
sub
or
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
add
and
mov
add
and
push
add
sub
add
adc
add
outs
daa
add
or
and
add
add
push
add
cmp
(bad)
call
or
pop
add
add
push
add
cmp
(bad)
inc
jnp
add
add
mov
add
and
add
add
push
add
cmp
(bad)
inc
add
add
add
daa
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
jb
inc
add
adc
add
outs
daa
add
or
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
pop
or
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
outs
and
add
outs
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jb
inc
add
adc
add
outs
daa
add
or
jle
add
add
sub
add
push
sub
add
and
add
add
or
add
add
sbb
int
add
sub
add
xor
sub
add
sub
add
or
add
add
add
sub
add
sub
add
or
add
adc
add
imul
add
add
adc
sbb
or
add
add
add
add
inc
add
add
add
add
add
add
and
add
add
push
add
sub
add
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
sub
add
add
dec
add
sub
add
sub
and
add
add
push
add
sub
sub
add
xor
add
add
add
add
adc
add
daa
add
or
add
sub
add
or
adc
add
xor
add
add
add
jb
(bad)
jo
adc
add
sub
inc
add
adc
add
sub
add
adc
add
sub
dec
add
adc
add
sub
pop
add
pop
pop
jae
add
or
adc
sub
scas
add
add
fs
pop
jae
add
or
sub
xor
add
add
add
aad
add
or
add
add
push
dec
add
adc
add
push
mov
add
jb
inc
add
adc
add
sub
add
sub
xor
xor
add
inc
add
adc
add
add
jle
add
add
ja
add
sub
jle
add
add
add
add
adc
scas
add
add
and
daa
add
push
or
sub
xor
pop
add
add
add
adc
add
adc
add
push
jle
add
add
sub
add
or
sub
adc
add
sldt
add
add
adc
sub
add
jle
add
add
add
xor
add
add
add
add
adc
add
add
sub
push
sub
add
push
sub
add
adc
add
or
add
add
add
jle
add
add
sub
add
push
sub
xor
adc
add
add
add
lldt
dec
add
add
add
add
sub
adc
add
adc
add
add
add
lldt
dec
add
add
add
add
sub
adc
add
adc
add
add
add
lldt
dec
add
add
add
add
sub
adc
add
adc
add
add
add
lldt
dec
add
add
add
add
sub
adc
add
adc
add
add
add
lldt
dec
add
add
add
add
sub
adc
add
adc
add
add
add
lldt
dec
add
add
add
add
sub
adc
add
adc
add
add
add
lldt
dec
add
add
add
add
sub
adc
add
adc
add
add
add
lldt
dec
add
add
add
add
sub
adc
add
adc
add
add
add
lldt
dec
add
add
add
add
sub
adc
add
adc
add
add
add
lldt
dec
add
add
add
add
sub
adc
add
adc
add
add
add
lldt
dec
add
add
add
add
sub
adc
push
add
add
add
add
jle
add
add
and
add
dec
add
adc
add
jle
add
add
add
add
pop
and
jb
add
sub
xor
add
add
add
add
adc
pop
and
out
add
sub
add
adc
add
or
add
add
add
add
pop
sub
add
add
xor
loopne
add
inc
add
adc
popa
dec
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
jo
add
and
add
push
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
pop
add
add
and
push
add
sub
add
sub
add
push
sub
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
and
add
dec
add
cmp
(bad)
inc
movs
js
add
sub
add
push
sub
or
add
dec
add
cmp
(bad)
inc
cmp
add
add
dec
add
cmp
(bad)
(bad)
inc
movs
ja
add
sub
add
push
sub
or
add
dec
add
cmp
sbb
adc
add
cmp
(bad)
inc
add
add
add
rol
add
in
add
add
add
add
add
add
(bad)
(bad)
call
add
jg
add
inc
add
add
add
add
adc
add
dec
add
cmp
movs
inc
add
add
fiadd
add
sub
push
add
add
push
add
cmp
je
add
add
out
add
sub
adc
add
dec
add
cmp
movs
adc
add
sub
add
push
sub
or
add
dec
add
cmp
(bad)
inc
jne
add
add
and
add
add
push
add
cmp
inc
movs
jns
add
sub
add
push
sub
add
push
add
cmp
(bad)
inc
movs
jbe
add
sub
add
push
sub
or
push
add
cmp
(bad)
(bad)
inc
movs
jne
add
sub
add
push
sub
push
add
add
push
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
add
cmp
std
(bad)
inc
movs
add
add
loop
add
sub
pop
add
add
push
add
cmp
std
(bad)
inc
movs
je
add
sub
add
push
sub
sldt
add
push
add
cmp
std
(bad)
inc
movs
pop
add
add
fadd
add
sub
add
add
dec
add
cmp
movs
jb
add
sub
add
push
sub
or
add
dec
add
cmp
jne
add
add
and
add
add
push
add
cmp
(bad)
inc
movs
dec
add
add
loope
add
sub
or
add
dec
add
cmp
(bad)
inc
outs
xor
add
or
add
add
dec
add
cmp
(bad)
inc
movs
sbb
add
sub
add
push
sub
dec
add
adc
add
jle
add
add
sub
nop
add
or
add
or
xor
or
add
add
add
add
adc
jmp
add
xor
imul
add
add
jle
add
add
add
add
or
add
push
or
add
add
sub
adc
outs
xor
add
add
call
pop
pop
or
add
imul
add
push
or
pop
outs
dec
add
push
pop
or
outs
inc
add
push
fimul
or
jle
add
add
sub
push
outs
add
add
sub
add
add
add
inc
add
add
adc
add
or
add
add
add
add
sub
add
push
sub
add
adc
add
or
add
add
add
add
adc
out
add
push
sub
add
adc
add
or
add
add
add
add
add
add
sub
xor
sbb
add
add
add
add
add
add
pop
add
sbb
mov
push
add
out
add
push
movs
pop
add
sbb
sbb
add
pop
add
add
add
add
add
or
jae
add
push
or
add
add
sub
adc
outs
xor
add
add
call
pop
pop
or
add
imul
add
push
adc
adc
outs
xor
ficom
adc
or
hlt
add
add
add
fwait
add
push
fmul
sub
adc
add
add
add
add
adc
add
sldt
add
add
jae
add
push
or
add
inc
add
push
sub
adc
add
and
add
adc
add
add
jmp
adc
add
add
add
pop
add
or
aaa
add
push
jae
add
or
add
push
add
add
add
sub
add
das
add
or
adc
add
mov
add
dec
add
adc
sbb
inc
add
add
add
add
add
add
add
add
and
add
dec
add
sub
add
add
pop
sub
and
add
add
push
add
sub
add
or
add
or
add
add
dec
add
sub
add
sub
sub
and
add
add
push
add
sub
add
and
add
add
push
add
cmp
inc
pop
xor
sub
adc
add
mov
add
dec
add
adc
sbb
inc
add
add
add
add
add
add
add
add
and
add
dec
add
sub
add
add
pop
sub
and
add
add
push
add
sub
add
or
add
or
add
add
dec
add
sub
add
sub
sub
and
add
add
push
add
sub
add
and
add
add
push
add
cmp
inc
pop
xor
sub
adc
add
test
add
dec
add
adc
sbb
inc
add
add
add
add
pop
add
add
add
add
and
add
dec
add
sub
add
outs
imul
add
add
push
add
sub
add
add
or
add
push
or
add
add
dec
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
and
add
add
push
add
sub
push
sub
add
adc
add
push
add
add
add
adc
jnp
add
add
or
add
add
add
or
add
sbb
add
push
add
dec
add
adc
sub
add
adc
add
jae
add
or
mov
add
outs
mov
add
add
add
jae
add
or
clc
add
push
fidivr
or
add
add
push
sub
jle
add
or
add
push
jle
add
add
sub
adc
dec
add
adc
add
push
jae
add
or
add
add
add
add
add
adc
push
xor
cmp
xor
add
add
add
add
adc
sub
add
add
add
add
sub
add
or
add
sub
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
cmp
sub
add
or
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
adc
add
jae
add
or
add
add
add
and
adc
add
add
push
jge
add
add
push
jge
add
add
jae
add
or
add
add
push
jge
add
add
sbb
push
add
push
sub
add
adc
add
sbb
add
add
add
add
add
add
outs
ins
add
or
and
add
pop
jge
add
add
add
xor
das
add
add
add
add
or
add
or
jnp
add
add
jnp
add
add
ins
add
or
pop
outs
outs
add
or
and
add
pop
jge
add
add
sub
adc
add
adc
add
add
add
add
add
add
jnp
add
add
pop
outs
outs
add
or
adc
add
int3
add
add
add
cmp
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
add
add
add
add
add
add
add
mov
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
add
sldt
add
and
add
add
push
add
cmp
(bad)
call
or
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
sub
adc
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
sldt
add
push
add
cmp
(bad)
(bad)
inc
pop
and
push
sub
add
dec
add
cmp
(bad)
(bad)
inc
pop
daa
cs
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
and
push
add
cmp
pop
outs
cmp
add
push
add
add
push
add
cmp
cmp
(bad)
jmp
adc
add
dec
add
cmp
jnp
add
add
inc
inc
add
add
push
add
add
push
add
cmp
dec
pop
bound
cli
add
add
and
push
add
cmp
(bad)
dec
pop
cmp
add
add
add
push
add
cmp
(bad)
(bad)
cmp
jmp
and
add
dec
add
cmp
push
add
add
or
add
dec
add
cmp
(bad)
(bad)
dec
pop
jb
inc
pop
add
add
add
es
(bad)
inc
add
sbb
(bad)
(bad)
jmp
(bad)
(bad)
call
and
add
dec
add
cmp
std
(bad)
(bad)
cmp
add
add
or
push
add
cmp
std
(bad)
(bad)
cmp
(bad)
(bad)
jmp
pop
add
add
push
add
cmp
std
(bad)
(bad)
cmp
add
add
or
add
dec
add
cmp
jnp
add
add
or
add
push
and
add
add
push
add
cmp
pop
dec
add
adc
add
add
xchg
add
or
add
push
jp
sbb
add
dec
add
cmp
(bad)
inc
jnp
add
add
outs
pop
add
and
add
add
push
add
cmp
(bad)
(bad)
cmp
add
and
add
add
push
add
cmp
(bad)
inc
push
jge
add
add
pop
add
add
push
add
cmp
std
(bad)
(bad)
cmp
add
and
add
add
push
add
cmp
pop
cmp
(bad)
jmp
add
add
dec
add
cmp
std
(bad)
(bad)
cmp
add
add
or
add
dec
add
cmp
cld
(bad)
inc
pop
pop
inc
scas
add
add
daa
add
add
push
add
cmp
cld
(bad)
inc
sbb
add
adc
add
dec
add
cmp
cld
(bad)
inc
jnp
add
add
outs
mov
add
and
add
dec
add
cmp
jnp
add
add
or
push
and
add
add
push
add
cmp
and
add
add
push
add
cmp
add
add
or
add
dec
add
cmp
(bad)
inc
sub
add
push
cmp
sbb
add
dec
add
cmp
(bad)
inc
jnp
add
add
or
pop
add
and
add
add
push
add
cmp
jnp
add
add
jnp
add
add
pop
add
and
add
add
push
add
cmp
cld
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
cld
(bad)
push
dec
add
adc
add
add
xchg
add
or
add
push
jp
sbb
add
dec
add
cmp
sti
(bad)
inc
cmp
std
(bad)
jmp
adc
add
dec
add
cmp
sti
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
jle
add
add
inc
add
add
mov
push
jge
add
add
adc
push
add
cmp
jnp
add
add
add
add
jge
add
add
push
add
add
push
add
cmp
(bad)
inc
sub
add
push
cmp
std
(bad)
jmp
add
add
dec
add
cmp
inc
jnp
add
add
or
add
push
and
add
add
push
add
cmp
(bad)
inc
add
add
add
adc
add
ins
add
add
sbb
or
add
add
add
add
dec
add
add
add
add
add
add
and
add
add
push
add
sub
push
adc
add
sub
sub
and
add
add
push
add
sub
add
sar
add
add
add
add
dec
add
sub
add
push
add
or
and
add
add
push
add
sub
adc
add
adc
add
add
add
add
add
add
push
add
or
add
add
adc
add
or
add
adc
jnp
add
add
push
add
or
sub
add
adc
add
or
add
add
add
add
jge
add
add
adc
add
add
add
add
adc
sbb
or
add
add
add
add
inc
add
add
add
add
and
add
add
push
add
sub
add
add
add
xor
sub
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
add
push
add
sub
add
sub
adc
add
dec
add
add
add
sub
dec
add
add
add
add
mov
add
popf
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
or
add
dec
add
sub
push
sub
add
add
dec
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
inc
sub
add
push
sub
add
add
dec
add
cmp
(bad)
inc
sub
add
push
sub
add
dec
add
cmp
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
pop
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
push
sub
pop
sub
push
sub
sub
and
add
dec
add
cmp
(bad)
inc
sub
add
push
sub
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
mov
add
push
add
cmp
(bad)
(bad)
call
sub
dec
add
adc
add
add
add
add
sub
add
sub
sub
add
jp
adc
add
push
add
add
add
sub
or
add
add
add
add
add
add
movs
add
add
add
mov
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
mov
add
add
add
add
push
add
add
push
add
sub
add
and
add
add
push
add
cmp
(bad)
inc
pop
das
xor
adc
push
add
cmp
(bad)
call
sub
sub
push
sub
cmp
push
add
add
push
add
cmp
inc
pop
das
cmp
add
and
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
or
push
add
push
and
add
add
push
add
cmp
(bad)
inc
pop
jge
call
add
dec
add
cmp
(bad)
(bad)
inc
pop
pop
cmp
adc
add
dec
add
cmp
(bad)
(bad)
jmp
je
add
add
dec
add
cmp
(bad)
(bad)
call
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
sub
or
add
dec
add
cmp
or
adc
add
dec
add
cmp
(bad)
jo
adc
add
add
add
add
pop
add
add
xchg
add
or
add
push
jp
or
add
dec
add
cmp
(bad)
inc
jnp
add
add
add
add
sub
and
push
add
cmp
(bad)
inc
pop
or
push
add
push
and
push
add
cmp
(bad)
(bad)
inc
sub
push
add
add
push
add
cmp
pop
sub
out
add
add
dec
add
cmp
(bad)
(bad)
call
sub
adc
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
push
and
add
add
push
add
cmp
std
(bad)
inc
sub
or
add
dec
add
cmp
std
(bad)
jmp
push
and
add
add
push
add
cmp
std
(bad)
call
sub
pop
add
add
push
add
cmp
sub
add
push
cmp
(bad)
(bad)
call
sub
add
adc
add
inc
add
add
add
sub
inc
or
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
and
add
dec
add
sub
add
add
push
add
sub
add
and
add
add
push
add
sub
push
add
push
and
add
dec
add
sub
xlat
and
add
add
push
add
cmp
(bad)
call
sub
or
add
dec
add
cmp
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
(bad)
inc
pop
sub
mov
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
or
push
add
push
and
add
add
push
add
cmp
pop
jge
push
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
pop
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
sub
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
push
sub
push
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
push
cmp
call
sub
add
adc
add
je
add
add
add
sub
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
add
add
adc
add
cmp
add
add
add
add
dec
add
sub
mov
add
add
sub
add
push
and
push
add
sub
jo
adc
add
add
add
add
pop
add
add
xchg
add
or
add
push
jp
sub
push
sub
sub
and
add
add
push
add
cmp
inc
jnp
add
add
daa
xor
and
add
add
push
add
cmp
(bad)
jmp
jnp
add
add
dec
add
cmp
(bad)
inc
add
add
add
adc
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
mov
add
push
add
cmp
(bad)
(bad)
inc
pop
cmp
push
add
push
and
add
add
push
add
cmp
jnp
add
add
cmp
or
(bad)
jmp
add
add
dec
add
cmp
mov
outs
mov
add
pop
sub
xor
add
add
adc
sbb
inc
add
add
add
add
pop
add
add
add
push
add
add
and
add
dec
add
sub
add
add
add
jnp
add
add
pop
add
and
add
add
push
add
sub
add
dec
add
sub
add
xor
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
sub
add
cmps
dec
add
adc
add
add
inc
add
push
jae
add
push
jp
xor
add
add
add
add
adc
add
add
jnp
add
add
push
add
push
sub
add
add
pop
or
jnp
add
add
and
add
pop
sub
add
adc
add
cmp
add
adc
xor
or
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
cmp
add
add
and
add
add
push
add
sub
add
add
add
jnp
add
add
pop
add
and
add
add
push
add
sub
add
cmp
sub
pop
add
add
push
add
sub
add
add
add
cmp
add
add
push
add
cmp
inc
add
add
add
adc
add
sub
and
add
add
push
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
(bad)
push
dec
add
adc
add
add
add
add
pop
add
add
xchg
add
or
add
push
jp
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
pop
sub
push
sub
cmp
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
jmp
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
push
and
push
add
cmp
(bad)
(bad)
inc
sub
add
push
cmp
(bad)
jmp
add
add
xor
or
add
add
add
add
adc
pop
add
push
sub
add
adc
add
pop
add
add
add
cmp
or
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
(bad)
inc
add
add
add
add
add
dec
add
cmp
inc
pop
pop
inc
push
add
add
add
je
add
and
add
enter
mov
add
mov
add
enter
mov
add
mov
add
mov
add
popf
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
jge
add
add
pop
add
add
push
add
cmp
(bad)
(bad)
inc
sbb
add
add
or
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
add
dec
add
cmp
(bad)
(bad)
inc
push
sub
add
push
and
add
add
push
add
cmp
bound
add
and
add
add
push
add
cmp
sbb
add
add
add
add
dec
add
cmp
sub
adc
add
dec
add
cmp
(bad)
inc
pop
or
sbb
add
and
add
add
push
add
cmp
(bad)
inc
jle
add
add
sub
mov
add
or
push
add
cmp
(bad)
(bad)
inc
sub
adc
add
dec
add
cmp
(bad)
(bad)
inc
sub
push
add
add
push
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
sbb
add
dec
add
cmp
std
(bad)
inc
add
mov
add
adc
add
dec
add
cmp
std
(bad)
inc
pop
or
sbb
add
and
add
add
push
add
cmp
std
(bad)
inc
pop
sub
add
push
and
add
add
push
add
cmp
push
jge
add
add
sub
push
sub
sub
and
add
add
push
add
cmp
pop
and
add
add
push
add
cmp
sbb
add
add
add
add
dec
add
cmp
(bad)
inc
sub
add
push
add
cmp
(bad)
jmp
and
or
add
dec
add
cmp
(bad)
inc
push
jge
add
add
adc
add
dec
add
cmp
inc
and
add
dec
add
cmp
std
(bad)
jmp
in
and
push
add
cmp
std
(bad)
jmp
frstor
pop
add
add
push
add
cmp
std
(bad)
inc
adc
mov
add
push
add
add
push
add
cmp
cld
(bad)
inc
or
sbb
add
dec
add
cmp
cld
(bad)
inc
adc
mov
add
add
xor
add
add
push
add
adc
stc
add
add
or
add
add
add
add
add
add
jge
add
cmps
add
add
add
fadd
add
add
add
add
add
add
add
sub
add
lar
add
add
add
add
cwde
add
add
add
jo
add
cmp
add
add
add
add
add
add
add
rol
add
gs
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
fiadd
add
add
add
add
(bad)
add
add
add
add
add
jmp
add
bound
add
jne
add
repnz
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
nop
add
add
add
add
add
add
cmp
add
dec
add
cmp
(bad)
(bad)
call
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
pop
das
cmp
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
sub
push
and
add
add
push
add
cmp
pop
and
add
add
cmp
add
dec
add
cmp
pop
je
inc
add
add
xchg
add
add
add
and
add
add
push
add
cmp
adc
add
cmp
add
dec
add
cmp
(bad)
inc
pop
sub
inc
add
add
add
add
dec
add
cmp
(bad)
inc
pop
das
cmp
aaa
add
add
push
add
cmp
(bad)
inc
sub
adc
add
dec
add
cmp
(bad)
(bad)
inc
pop
or
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
pop
pop
pop
inc
add
add
fild
add
cwde
add
add
add
push
add
cmp
std
(bad)
inc
pop
sub
add
push
and
add
add
push
add
cmp
std
(bad)
inc
sub
add
push
and
add
dec
add
cmp
std
(bad)
inc
pop
outs
cmp
add
add
xor
add
dec
add
cmp
inc
add
add
add
add
dec
add
cmp
and
add
add
push
add
cmp
add
add
or
add
dec
add
cmp
add
add
add
or
add
and
add
add
push
add
cmp
(bad)
call
sub
or
add
dec
add
cmp
(bad)
inc
pop
daa
pop
inc
add
add
sar
call
add
add
add
and
add
add
push
add
cmp
add
add
push
add
add
push
add
cmp
std
(bad)
inc
pop
jne
pop
add
and
add
add
push
add
cmp
std
(bad)
inc
jnp
add
add
cs
sub
add
and
add
add
push
add
cmp
cld
(bad)
inc
sub
add
push
cmp
add
add
das
add
add
push
add
cmp
cld
(bad)
inc
sub
add
or
or
add
dec
add
cmp
cld
(bad)
call
sub
sub
add
dec
add
cmp
jnp
add
add
and
add
add
push
add
cmp
mov
add
and
add
add
push
add
cmp
pop
xor
and
add
add
push
add
cmp
(bad)
call
sub
or
add
dec
add
cmp
(bad)
inc
sub
add
push
and
add
dec
add
cmp
(bad)
push
dec
add
adc
add
add
add
add
pop
add
add
xchg
add
or
add
push
jp
sub
add
dec
add
cmp
pop
or
push
add
push
and
add
add
push
add
cmp
cld
(bad)
call
sub
sub
add
dec
add
cmp
cld
(bad)
inc
sub
add
push
and
add
add
push
add
cmp
sti
(bad)
inc
pop
or
push
add
push
and
push
add
cmp
sti
(bad)
inc
sub
add
push
and
add
add
push
add
cmp
sti
(bad)
inc
jnp
add
add
add
add
cmp
std
(bad)
jmp
and
add
dec
add
cmp
sub
add
push
and
add
add
push
add
cmp
sub
sub
add
dec
add
cmp
pop
or
push
add
push
and
add
add
push
add
cmp
(bad)
call
sub
add
add
push
add
cmp
(bad)
call
sub
daa
add
add
push
add
cmp
(bad)
call
sub
and
push
add
cmp
(bad)
call
sub
and
add
dec
add
cmp
sti
(bad)
inc
sbb
push
add
push
and
add
dec
add
cmp
(bad)
push
dec
add
adc
add
jae
add
push
jp
sub
push
sub
cmp
(bad)
(bad)
jmp
adc
add
dec
add
cmp
cli
(bad)
call
sub
and
add
dec
add
cmp
cli
(bad)
inc
jnp
add
add
or
aaa
and
add
add
push
add
cmp
cli
(bad)
inc
pop
cmp
(bad)
jmp
add
add
push
add
cmp
cdq
(bad)
(bad)
jmp
sub
push
add
cmp
push
dec
add
adc
add
add
add
add
pop
add
add
xchg
add
or
add
push
jp
and
add
dec
add
cmp
inc
jnp
add
add
add
add
cmp
add
add
push
add
cmp
(bad)
call
sub
sbb
add
dec
add
cmp
(bad)
inc
jnp
add
add
sub
jmp
sbb
add
dec
add
cmp
cli
(bad)
inc
pop
cmp
(bad)
jmp
xor
push
add
cmp
sub
add
and
push
add
cmp
cli
(bad)
inc
pop
jnp
inc
add
add
out
sti
(bad)
(bad)
js
(bad)
(bad)
stc
std
(bad)
jmp
xor
add
dec
add
cmp
stc
(bad)
push
dec
add
adc
add
add
add
add
pop
add
add
xchg
add
or
add
push
jp
sbb
push
add
cmp
sub
add
push
cmp
cld
(bad)
call
sub
add
xor
add
add
sub
inc
pop
add
add
add
push
add
add
add
jns
add
or
add
cmp
add
inc
add
add
and
add
add
push
add
sub
add
add
add
add
add
sub
push
sub
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
add
push
add
sub
add
add
dec
add
sub
add
and
add
dec
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
inc
sub
sub
xor
add
add
sub
or
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
or
add
jmp
add
add
add
add
inc
add
mov
add
add
add
sbb
add
or
add
dec
add
add
add
mov
add
add
add
add
add
add
and
add
add
push
add
pop
or
add
add
push
add
add
push
add
(bad)
inc
jb
dec
add
adc
add
pop
sub
add
push
cmp
add
and
add
add
push
add
(bad)
push
add
or
and
add
dec
add
(bad)
inc
sub
add
push
cmp
or
add
dec
add
(bad)
inc
sub
add
push
and
add
add
push
add
(bad)
inc
jnp
add
add
or
add
add
or
push
add
(bad)
inc
jnp
add
add
add
add
or
add
add
dec
add
(bad)
inc
jnp
add
add
outs
mov
add
and
push
add
(bad)
(bad)
cmp
add
add
dec
add
(bad)
dec
sub
add
push
or
add
push
add
(bad)
inc
pop
jae
add
push
jae
add
push
adc
or
add
dec
add
(bad)
inc
add
add
add
and
add
and
add
add
push
add
(bad)
inc
sub
add
push
cmp
add
and
add
add
push
add
(bad)
inc
jnp
add
add
sub
add
add
add
push
add
(bad)
inc
pop
sub
add
push
cmp
add
add
sbb
add
dec
add
(bad)
inc
jnp
add
add
add
push
and
add
add
push
add
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
and
add
add
push
add
(bad)
inc
pop
push
or
pop
add
push
and
add
add
push
add
(bad)
inc
push
outs
and
add
sub
add
or
or
add
dec
add
(bad)
inc
push
sub
add
push
and
add
dec
add
(bad)
inc
jb
dec
add
adc
add
sub
loopne
(bad)
call
sub
push
sub
sub
and
add
add
push
add
(bad)
jmp
dec
and
add
add
push
add
(bad)
inc
pop
or
add
add
adc
add
dec
add
(bad)
(bad)
cmp
std
(bad)
jmp
adc
add
dec
add
(bad)
inc
pop
or
add
push
and
add
dec
add
(bad)
inc
sub
add
push
sub
add
adc
add
add
add
sub
or
add
add
add
add
add
add
xchg
add
add
add
and
add
pop
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
add
add
add
add
sldt
add
push
add
sub
add
sub
push
sub
sub
and
push
add
sub
add
add
add
jle
add
add
add
add
mov
add
or
or
add
dec
add
cmp
(bad)
inc
sub
add
push
cmp
add
add
dec
add
cmp
call
or
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
outs
mov
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
cmp
or
add
dec
add
cmp
(bad)
(bad)
call
or
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
and
add
add
push
add
cmp
(bad)
(bad)
call
add
push
add
cmp
(bad)
(bad)
inc
sub
add
push
sub
and
add
add
push
add
cmp
pop
outs
mov
xor
and
add
dec
add
cmp
pop
(bad)
(bad)
jmp
or
add
dec
add
cmp
jnp
add
add
add
add
jle
add
add
add
add
mov
add
or
push
add
add
push
add
cmp
(bad)
inc
jnp
add
add
add
add
or
or
add
dec
add
cmp
(bad)
call
or
add
push
add
cmp
or
sub
add
push
sub
add
xor
add
add
add
pop
add
push
or
add
push
add
push
push
cs
add
add
cmc
dec
add
adc
add
add
mov
add
add
lock
push
jae
add
push
jp
adc
add
adc
add
push
add
adc
xor
or
add
add
add
add
add
add
mov
add
les
add
outs
add
add
add
pop
add
add
add
add
and
add
add
push
add
sub
add
and
add
add
push
add
sub
add
pop
add
add
push
add
sub
add
sbb
add
int3
(bad)
(bad)
jmp
add
add
add
add
dec
add
sub
add
push
add
cmp
(bad)
inc
sbb
add
add
add
add
dec
add
cmp
(bad)
inc
pop
or
mov
add
add
dec
add
cmp
(bad)
inc
sub
add
push
or
sub
push
sub
cmp
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
inc
or
or
add
dec
add
cmp
(bad)
(bad)
jmp
and
push
add
cmp
(bad)
(bad)
jmp
jb
dec
add
adc
add
push
mov
add
add
xchg
add
or
add
push
jp
adc
add
xchg
add
add
add
sub
inc
add
add
add
add
add
add
or
add
dec
add
add
and
add
add
push
add
sub
sub
add
add
dec
add
sub
add
and
add
add
push
add
sub
inc
add
add
adc
add
and
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
adc
add
add
xchg
add
or
add
push
jp
adc
add
add
add
adc
dec
dec
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
sldt
add
push
add
sub
add
sub
adc
sub
push
sub
sub
and
push
add
sub
add
jnp
add
add
pop
add
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
sub
add
push
and
add
add
push
add
cmp
inc
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
mov
add
and
add
add
push
add
cmp
jnp
add
add
das
cmp
or
add
dec
add
cmp
mov
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
push
cmp
add
add
dec
add
cmp
(bad)
(bad)
inc
sbb
jnp
add
add
add
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
sub
and
add
add
push
add
cmp
pop
and
add
dec
add
cmp
mov
or
add
dec
add
cmp
pop
dec
add
adc
add
jae
add
push
jp
push
add
add
push
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
and
add
add
push
add
cmp
inc
sub
add
push
cmp
add
push
add
cmp
(bad)
(bad)
inc
sub
add
adc
add
pop
add
sbb
sbb
inc
add
add
add
add
add
add
or
add
dec
add
add
and
add
add
push
add
sub
push
pop
pop
or
add
add
dec
add
sub
push
or
add
add
dec
add
sub
add
push
outs
popf
add
or
das
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
or
adc
add
add
dec
add
sub
add
sub
sahf
add
or
add
add
xor
add
add
adc
and
inc
pop
add
add
add
add
add
add
jnp
add
or
add
xor
add
add
and
add
add
push
add
sub
add
or
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
add
push
add
sub
add
sub
add
add
dec
add
sub
add
add
dec
add
cmp
(bad)
inc
add
and
add
or
add
add
dec
add
cmp
(bad)
call
sub
sub
add
xor
xchg
add
add
add
sub
or
add
add
add
add
push
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
sldt
add
push
add
sub
add
sub
push
sub
sub
and
add
add
push
add
sub
add
add
and
add
add
push
add
sub
add
or
add
add
push
add
add
push
add
cmp
(bad)
inc
pop
sub
cmp
or
push
add
cmp
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
sub
add
push
sub
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
add
add
dec
add
cmp
(bad)
(bad)
call
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
pop
pop
(bad)
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
jge
cmp
add
push
add
cmp
(bad)
(bad)
inc
sub
add
pop
sub
add
and
push
add
cmp
(bad)
(bad)
inc
pop
sub
inc
(bad)
(bad)
jmp
add
add
dec
add
cmp
jnp
add
add
add
add
sub
and
add
add
push
add
cmp
sub
or
add
dec
add
cmp
pop
das
cmp
(bad)
jmp
or
add
dec
add
cmp
(bad)
call
sub
sub
add
adc
add
sub
add
add
add
add
add
add
sub
add
push
sub
add
pop
mov
add
sub
add
push
sub
dec
add
adc
add
jae
add
push
jp
xor
daa
add
add
add
adc
jle
add
add
sub
add
push
sub
add
or
push
add
push
sub
dec
add
adc
add
jae
add
push
jp
adc
add
daa
add
add
add
adc
jle
add
add
sub
add
push
sub
add
or
push
add
push
sub
dec
add
adc
add
jae
add
push
jp
adc
add
sub
add
add
add
add
add
add
sub
add
push
sub
add
push
mov
add
sub
add
push
sub
dec
add
adc
add
jae
add
push
jp
xor
add
add
add
add
adc
pop
sub
add
push
sub
xor
add
add
add
add
adc
jnp
add
add
or
sub
add
sub
add
sub
adc
add
fild
add
add
add
sub
dec
add
add
add
add
add
add
mov
add
movs
add
add
add
dec
add
add
add
cmp
add
add
pop
add
add
push
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
add
push
add
add
push
add
sub
add
add
add
add
dec
add
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
inc
and
add
add
push
add
cmp
(bad)
inc
adc
mov
add
add
push
add
cmp
inc
jnp
add
add
push
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
nop
add
push
sub
push
add
or
add
sub
add
sub
add
or
add
add
add
add
or
add
sub
add
add
or
add
sub
add
sub
add
or
add
add
add
add
or
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
jo
add
add
add
sub
dec
add
add
add
add
add
add
xor
add
or
add
add
add
add
dec
add
sub
add
xor
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
xor
and
add
add
push
add
sub
jo
adc
add
jae
add
or
add
add
dec
add
sub
add
add
adc
add
sbb
add
add
add
add
add
add
or
jae
add
push
jge
add
add
jnp
add
add
add
cmp
sub
add
or
push
jge
add
add
add
xor
or
add
add
add
add
adc
xor
add
add
xor
jbe
add
add
add
sub
dec
add
add
add
add
add
add
cmp
add
add
and
add
add
push
add
sub
add
push
sub
sub
and
add
add
push
add
sub
jb
dec
add
adc
add
jae
add
or
add
add
dec
add
sub
add
sub
add
dec
add
sub
add
cmp
add
sub
add
xor
in
add
add
add
sub
inc
or
add
sbb
add
cmp
add
or
add
nop
add
add
add
add
add
sub
add
pop
add
add
and
add
add
push
add
sub
push
sub
add
push
add
sub
add
push
add
add
push
add
sub
inc
and
add
add
push
add
sub
and
add
add
push
add
sub
add
or
add
add
dec
add
cmp
(bad)
push
add
push
or
add
add
dec
add
cmp
(bad)
inc
add
cmp
add
or
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
pop
outs
and
add
and
add
dec
add
cmp
(bad)
(bad)
inc
outs
sgdtd
push
sub
add
adc
add
jae
add
push
jp
xor
aam
add
pop
add
adc
dec
dec
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
and
add
aaa
add
add
add
add
add
add
add
push
add
add
add
add
sldt
add
push
add
sub
cmp
sub
push
sub
sub
and
add
add
push
add
sub
add
push
add
add
push
add
sub
add
push
add
add
push
add
cmp
(bad)
dec
sbb
add
add
ins
add
add
add
add
or
push
add
cmp
(bad)
push
add
push
or
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
add
add
sbb
pop
and
add
add
push
add
cmp
(bad)
push
dec
add
adc
add
jae
add
push
jp
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
or
add
or
or
add
dec
add
cmp
(bad)
(bad)
inc
outs
add
add
outs
add
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
sgdtd
push
sub
add
dec
add
cmp
(bad)
(bad)
inc
add
cmp
add
or
add
push
add
cmp
outs
add
add
or
add
push
add
cmp
dec
add
adc
add
add
add
push
mov
xchg
add
or
add
push
jp
pop
add
add
push
add
cmp
(bad)
inc
sub
or
add
dec
add
cmp
(bad)
jmp
shl
add
add
push
add
cmp
(bad)
inc
outs
sgdtd
push
sub
add
adc
add
jae
add
push
jp
xor
add
add
adc
sub
inc
or
add
sbb
add
add
add
add
loope
add
pop
add
add
add
add
add
add
or
add
dec
add
sub
cmp
add
push
add
sub
sub
add
sub
and
add
add
push
add
sub
push
add
add
add
add
add
add
call
add
add
add
add
add
add
stos
add
add
add
add
dec
add
cmp
(bad)
inc
outs
add
add
or
pop
add
add
push
add
cmp
(bad)
(bad)
inc
add
icebp
add
push
sub
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
aaa
add
push
sub
add
add
add
push
or
addr16
or
add
add
push
sub
add
add
cmp
sub
add
add
push
add
cmp
add
or
inc
add
add
push
outs
add
add
or
xor
sub
jb
dec
add
adc
add
add
add
push
mov
xchg
add
or
add
push
jp
add
add
dec
add
cmp
(bad)
inc
and
add
pop
jge
add
add
sub
adc
add
add
add
sub
or
add
add
add
add
add
add
or
add
int3
add
add
add
sub
add
sbb
add
pop
add
add
add
add
add
or
add
sub
add
push
add
add
add
add
and
add
add
push
add
sub
add
or
sub
push
sub
cmp
add
add
add
add
dec
add
sub
add
inc
add
add
mov
push
outs
cli
add
or
jmp
add
add
dec
add
cmp
(bad)
inc
add
dec
add
cmp
(bad)
inc
sub
or
add
dec
add
cmp
(bad)
inc
outs
add
and
add
add
push
add
cmp
(bad)
inc
or
add
or
and
push
add
cmp
(bad)
(bad)
push
dec
add
adc
add
jle
add
add
sub
sub
cmp
add
jp
push
add
add
push
add
cmp
(bad)
(bad)
inc
push
outs
cli
add
or
xchg
add
and
add
dec
add
cmp
(bad)
(bad)
call
and
push
add
cmp
(bad)
(bad)
inc
cmp
(bad)
jmp
add
add
dec
add
cmp
add
arpl
or
add
dec
add
cmp
sub
pop
add
add
push
add
cmp
push
outs
cmp
add
sub
add
dec
add
cmp
(bad)
inc
sub
add
or
outs
sti
add
or
or
add
dec
add
cmp
(bad)
inc
adc
dec
add
add
add
add
or
add
add
adc
add
add
adc
and
or
add
add
add
add
outs
add
add
add
or
add
cmp
add
daa
add
add
and
push
add
sub
add
sub
add
push
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
dec
add
sub
add
adc
outs
jae
add
sub
and
add
add
push
add
sub
add
jge
add
add
add
add
dec
add
cmp
(bad)
inc
sub
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
push
outs
je
add
push
sub
xor
add
add
adc
pop
adc
in
add
or
add
push
or
outs
jne
add
adc
sub
or
jns
add
or
pop
sub
add
sub
add
add
or
add
inc
add
or
pop
add
or
add
and
mov
push
pop
outs
pop
add
or
add
add
adc
or
loop
add
adc
adc
or
adc
sub
adc
outs
mov
add
adc
sub
add
sub
or
push
sbb
add
outs
or
add
fadd
sub
add
add
add
add
pop
add
add
add
add
adc
push
add
add
adc
push
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
inc
add
add
add
add
adc
add
dec
add
sub
add
sub
add
dec
add
sub
jo
adc
add
push
add
nop
add
or
add
push
jp
adc
add
dec
add
cmp
(bad)
inc
add
push
or
add
add
dec
add
cmp
(bad)
jmp
and
add
dec
add
cmp
(bad)
inc
push
add
xor
add
or
add
push
add
cmp
(bad)
(bad)
inc
and
add
push
add
outs
data16
or
sub
push
sub
cmp
add
add
or
add
dec
add
cmp
(bad)
(bad)
call
add
test
add
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
sub
add
push
or
add
push
add
cmp
add
xchg
add
sub
add
dec
add
cmp
outs
add
fadd
add
or
pop
add
add
push
add
cmp
add
test
add
sub
add
push
or
or
add
dec
add
cmp
(bad)
call
and
add
sub
add
or
or
and
add
add
push
add
cmp
(bad)
inc
push
add
xor
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
sub
add
push
or
or
add
dec
add
cmp
(bad)
call
add
test
add
cmp
(bad)
jmp
push
add
add
push
add
cmp
(bad)
(bad)
jmp
jb
push
add
adc
add
push
add
ret
add
push
add
add
sub
push
add
push
sub
add
push
jp
add
adc
add
add
add
sub
inc
add
add
add
add
add
add
or
add
push
add
add
and
add
dec
add
sub
pop
add
add
add
add
add
dec
add
sub
jae
add
push
or
add
add
dec
add
sub
add
jge
add
add
sub
push
sub
sub
and
add
add
push
add
sub
add
add
add
add
dec
add
sub
std
add
push
jae
add
or
test
push
sub
xor
add
add
pusha
add
adc
cmp
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
or
add
dec
add
sub
add
or
add
add
dec
add
sub
add
or
add
dec
add
sub
add
sub
push
sub
sub
and
add
add
push
add
sub
add
or
add
add
dec
add
cmp
dec
pop
or
and
add
add
push
add
cmp
(bad)
(bad)
cmp
add
add
dec
add
cmp
(bad)
inc
outs
add
add
outs
add
add
or
add
add
dec
add
cmp
(bad)
dec
sbb
loop
or
add
dec
add
cmp
(bad)
(bad)
inc
add
add
sub
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
push
add
add
push
add
cmp
(bad)
(bad)
push
push
add
adc
add
add
add
push
mov
xchg
add
or
add
push
jp
add
push
add
cmp
(bad)
(bad)
inc
outs
sgdtd
push
cmp
(bad)
(bad)
push
push
add
adc
add
jae
add
push
jp
add
adc
add
push
add
add
add
adc
add
add
push
add
inc
add
push
sub
add
xor
add
add
adc
sbb
inc
add
add
add
add
add
add
daa
add
add
and
add
dec
add
sub
jb
push
add
adc
add
jae
add
or
add
add
dec
add
sub
add
add
push
add
sub
jo
adc
add
jae
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
add
dec
add
cmp
(bad)
inc
add
inc
add
push
sub
add
adc
add
add
add
cmp
add
add
or
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
cwde
add
add
add
and
add
mov
add
add
add
add
add
add
add
add
add
sbb
add
lahf
add
add
add
add
add
add
add
add
add
pop
add
add
mov
add
ds
add
add
push
add
add
add
in
add
add
add
add
add
nop
add
add
add
sub
add
sahf
add
add
add
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
add
add
add
add
aad
add
rol
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
cmp
add
and
add
dec
add
cmp
(bad)
(bad)
inc
outs
push
add
add
push
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
add
lock
push
and
add
add
push
add
cmp
pop
movs
je
add
outs
jae
add
and
push
add
cmp
and
add
add
push
add
cmp
(bad)
inc
or
xor
add
dec
add
cmp
(bad)
inc
outs
xor
add
or
add
add
dec
add
cmp
dec
sbb
adc
add
add
add
add
add
add
add
(bad)
call
add
add
add
add
add
std
add
add
add
add
add
push
add
add
add
add
xor
add
dec
add
cmp
std
(bad)
inc
pop
movs
adc
add
outs
jns
add
and
add
dec
add
cmp
std
(bad)
jmp
and
add
add
push
add
cmp
std
(bad)
jmp
and
add
add
push
add
cmp
std
(bad)
jmp
and
add
add
push
add
cmp
and
add
dec
add
cmp
pop
movs
pop
add
add
add
push
and
add
add
push
add
cmp
and
add
add
push
add
cmp
(bad)
inc
pop
movs
jns
add
outs
ja
add
and
add
add
push
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
(bad)
inc
xchg
add
add
add
add
dec
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
std
(bad)
inc
pop
movs
pop
add
add
add
push
and
add
add
push
add
cmp
std
(bad)
inc
cmp
push
add
add
push
add
cmp
std
(bad)
(bad)
cmp
add
add
add
push
add
cmp
cld
(bad)
jmp
and
add
add
push
add
cmp
cld
(bad)
inc
pop
je
add
add
add
push
and
add
add
push
add
cmp
cld
(bad)
inc
add
and
add
sub
add
and
add
add
push
add
cmp
jne
add
add
and
add
add
push
add
cmp
add
and
add
sub
add
and
add
add
push
add
cmp
(bad)
inc
pop
movs
jb
add
outs
outs
add
push
and
add
add
push
add
cmp
(bad)
inc
pop
movs
inc
add
add
add
push
and
add
add
push
add
cmp
inc
pop
movs
ja
add
outs
outs
add
push
and
add
add
push
add
cmp
cld
(bad)
inc
add
and
add
sub
add
and
add
add
push
add
cmp
cld
(bad)
inc
pop
movs
js
add
outs
jo
add
and
add
add
push
add
cmp
sti
(bad)
inc
pop
movs
jne
add
outs
je
add
and
add
dec
add
cmp
sti
(bad)
inc
pop
movs
dec
add
add
add
push
pop
sub
push
sub
sub
and
push
add
cmp
jle
add
add
sub
add
inc
add
push
sub
and
push
add
cmp
and
add
add
push
add
cmp
and
add
add
push
add
cmp
(bad)
inc
pop
movs
sbb
add
outs
js
add
and
add
add
push
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
(bad)
inc
cmp
(bad)
jmp
add
add
dec
add
cmp
sti
(bad)
jmp
and
push
add
cmp
sti
(bad)
inc
pop
movs
jbe
add
outs
ins
add
push
and
add
add
push
add
cmp
and
add
add
push
add
cmp
cli
(bad)
inc
add
inc
add
push
and
add
add
push
add
cmp
cli
(bad)
jmp
and
add
dec
add
cmp
cli
(bad)
inc
cmp
sbb
add
dec
add
cmp
cli
(bad)
jmp
and
add
add
push
add
cmp
pop
movs
add
add
add
push
and
add
add
push
add
cmp
and
push
add
cmp
and
push
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
(bad)
jmp
and
add
dec
add
cmp
(bad)
inc
jle
add
add
sub
add
push
outs
push
add
and
add
dec
add
cmp
(bad)
inc
add
inc
add
push
sub
add
xor
cli
add
add
add
sub
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
aas
add
add
and
add
add
push
add
sub
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
add
xor
add
xor
add
add
dec
add
sub
add
jnp
add
add
dec
add
cmp
(bad)
inc
add
add
push
sub
and
add
add
push
add
cmp
(bad)
call
sub
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
outs
xor
add
or
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
pop
or
add
push
add
cmp
(bad)
(bad)
inc
push
and
add
add
push
add
cmp
adc
push
sub
add
xor
bound
add
arpl
add
sub
inc
or
add
or
add
ret
add
add
add
add
in
add
add
add
add
add
je
add
inc
add
add
add
add
and
add
add
push
add
sub
add
push
or
sub
push
sub
cmp
or
add
dec
add
sub
jo
adc
add
jae
add
push
jp
add
add
dec
add
sub
add
push
outs
and
add
adc
add
add
add
dec
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
(bad)
inc
inc
add
add
movs
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
and
add
dec
add
cmp
(bad)
(bad)
push
push
add
adc
add
add
add
add
sub
add
sub
cmp
add
jp
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
push
sub
add
dec
add
cmp
(bad)
(bad)
jmp
movs
and
add
add
push
add
cmp
(bad)
(bad)
inc
push
add
sub
add
add
sub
add
push
outs
pop
add
push
and
push
add
cmp
add
sub
add
sub
add
xor
add
add
add
adc
add
add
sub
jle
add
add
sub
pop
sub
pop
jne
add
add
add
sub
push
add
add
cli
add
add
mov
push
cs
jle
add
add
jle
add
add
inc
add
add
mov
push
sub
adc
jle
add
add
add
movs
add
push
outs
imul
push
sub
outs
dec
add
push
add
and
add
add
add
push
add
sub
add
push
or
outs
jge
add
adc
xor
add
add
or
add
push
sub
xchg
add
sub
add
add
add
test
add
adc
sub
inc
add
push
adc
cmp
(bad)
ficom
adc
or
hlt
add
add
add
fwait
add
push
fadd
outs
pop
add
push
add
add
push
add
and
add
sub
add
adc
add
add
adc
add
add
xor
add
add
jle
add
add
sub
add
push
lea
add
add
jle
add
add
push
push
sub
add
sub
add
sub
adc
push
add
add
sub
inc
pop
add
add
add
add
add
or
add
mov
add
ins
add
add
add
aas
add
add
and
add
add
push
add
sub
add
jle
add
add
push
sub
inc
add
push
pop
sub
push
sub
sub
and
add
dec
add
sub
add
add
push
add
sub
push
and
add
add
push
add
sub
add
sub
add
push
xor
add
push
add
cmp
(bad)
inc
pop
pop
or
add
add
dec
add
cmp
(bad)
jmp
shl
add
add
dec
add
cmp
(bad)
inc
outs
pop
add
push
sub
xor
ins
add
add
add
add
add
push
jle
add
add
sub
sub
jle
add
add
sub
mov
add
or
adc
sub
add
outs
add
add
outs
pop
add
push
add
adc
sub
add
sub
add
pop
outs
cmp
(bad)
ficom
pop
jne
add
add
sub
jle
add
add
sub
add
add
push
sub
adc
add
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
or
jae
add
or
add
add
jnp
add
add
add
adc
add
inc
add
add
adc
sub
inc
or
add
push
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
dec
add
sub
add
add
add
and
add
add
push
add
sub
add
add
push
add
sub
add
add
push
add
sub
add
add
push
add
sub
add
add
push
add
sub
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
pop
add
add
push
add
cmp
(bad)
call
sub
sub
push
sub
sub
and
push
add
cmp
sub
add
add
dec
add
cmp
sub
push
add
adc
add
add
add
add
xor
add
sub
add
push
jp
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
add
das
adc
push
add
adc
add
jae
add
or
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
jb
add
add
add
sub
dec
add
add
add
add
dec
add
add
add
or
add
add
add
add
dec
add
sub
add
and
ds
sub
push
sub
sub
and
add
add
push
add
sub
add
daa
cs
add
add
push
add
sub
jo
adc
add
jae
add
or
add
add
dec
add
sub
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
add
add
add
add
sub
add
or
sub
add
adc
add
jae
add
or
add
add
add
pop
and
add
add
pop
jge
add
add
pop
and
add
add
sbb
add
add
push
jge
add
add
pop
jae
add
or
add
add
jnp
add
add
outs
ins
add
or
push
jge
add
add
add
add
xor
add
add
adc
sbb
inc
add
add
add
add
add
add
or
add
add
add
add
dec
add
sub
add
add
pop
jge
add
add
add
add
dec
add
sub
add
outs
ins
add
or
add
add
dec
add
sub
push
sub
sub
and
add
add
push
add
sub
add
ins
add
or
jnp
add
add
push
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
outs
jno
add
sub
adc
add
pop
add
add
add
add
push
add
push
or
and
add
pop
jge
add
add
sub
adc
add
adc
add
add
add
add
add
add
jnp
add
add
outs
add
or
add
adc
add
or
add
add
add
add
add
add
pop
add
or
adc
add
adc
add
add
add
add
popa
add
push
add
add
add
pop
add
or
add
adc
add
and
add
add
add
add
sub
add
add
sub
add
add
add
add
dec
push
add
adc
add
outs
pop
add
or
adc
add
or
add
add
add
add
or
add
push
sub
add
adc
add
and
add
add
add
add
sub
add
add
sub
add
add
add
add
dec
push
add
adc
add
outs
pop
add
or
adc
add
or
add
add
add
add
or
add
push
sub
add
adc
add
fld
add
add
add
sub
inc
pop
add
add
add
add
add
or
add
movs
add
add
add
test
add
add
add
and
add
add
push
add
sub
add
add
add
outs
pop
add
or
sub
push
sub
sub
and
add
dec
add
sub
add
fldenv
add
push
add
sub
add
push
and
add
add
push
add
sub
add
jnp
add
add
pop
add
or
add
add
dec
add
cmp
inc
jnp
add
add
sub
add
push
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
cmp
add
or
add
add
xor
add
add
adc
add
push
add
push
sub
add
sub
add
adc
add
rol
add
add
sub
inc
pop
add
add
add
add
add
jle
add
pop
add
add
add
add
add
and
add
add
push
add
sub
add
pop
add
push
pop
sub
push
sub
sub
and
add
dec
add
sub
add
fcos
(bad)
call
add
add
add
push
add
sub
add
add
push
add
sub
add
and
add
add
push
add
cmp
jmp
and
add
add
push
add
cmp
(bad)
jmp
mov
add
add
push
add
cmp
(bad)
jmp
jb
push
add
adc
add
add
xchg
add
or
add
push
jp
add
adc
add
adc
add
add
add
sub
add
pop
add
push
add
add
add
xor
sub
add
xor
xchg
add
add
add
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
add
and
add
add
push
add
sub
sub
and
add
add
push
add
sub
add
sub
sub
and
add
add
push
add
sub
inc
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
sub
add
adc
add
add
xchg
add
or
add
push
jp
adc
add
xchg
add
add
add
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
add
and
add
add
push
add
sub
sub
add
push
add
sub
sub
push
sub
sub
and
add
add
push
add
sub
add
fdivr
(bad)
dec
add
add
add
add
dec
add
sub
rcl
sub
add
push
add
xchg
add
or
add
push
jp
add
xor
cld
add
add
add
cmp
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
and
add
dec
or
cmp
(bad)
cmp
add
add
add
add
dec
or
cmp
(bad)
call
or
and
add
dec
or
cmp
(bad)
(bad)
call
add
add
add
push
or
cmp
(bad)
(bad)
push
push
add
adc
add
adc
sub
xchg
add
or
add
push
jp
or
add
dec
or
cmp
(bad)
(bad)
inc
jnp
add
add
outs
outs
add
or
add
bound
add
xor
add
add
dec
or
cmp
(bad)
(bad)
(bad)
cmp
sbb
add
dec
or
cmp
jnp
add
add
pop
or
sub
push
sub
cmp
(bad)
jmp
and
add
dec
or
cmp
pop
pop
or
and
add
dec
or
cmp
and
add
add
push
or
cmp
inc
sub
add
dec
or
cmp
(bad)
push
push
add
adc
add
jae
add
push
jp
add
push
or
cmp
(bad)
call
or
add
push
or
cmp
cmps
add
add
push
add
add
push
or
cmp
(bad)
(bad)
inc
sbb
add
add
adc
add
dec
or
cmp
jnp
add
add
cs
and
add
add
push
or
cmp
std
(bad)
inc
push
jge
add
add
adc
add
dec
or
cmp
std
(bad)
inc
sub
add
and
add
add
push
or
cmp
std
(bad)
call
add
push
and
add
add
push
or
cmp
std
(bad)
inc
jnp
add
add
inc
push
add
adc
add
outs
pop
add
or
or
add
dec
or
cmp
and
add
add
push
or
cmp
push
aas
xchg
add
and
push
or
cmp
inc
jnp
add
add
inc
push
add
adc
add
outs
pop
add
or
or
add
dec
or
cmp
(bad)
jmp
inc
and
add
add
push
or
cmp
(bad)
call
pop
inc
add
add
scas
add
add
(bad)
(bad)
cmp
(bad)
jmp
adc
push
or
cmp
std
(bad)
(bad)
cmp
(bad)
jmp
sbb
add
dec
or
cmp
pop
pop
or
add
push
or
cmp
std
(bad)
inc
add
push
add
push
sub
add
adc
sbb
push
or
cmp
cld
(bad)
inc
sub
add
adc
add
push
or
cmp
cld
(bad)
jmp
jg
add
add
dec
or
cmp
cld
(bad)
call
push
pop
or
add
add
xor
(bad)
(bad)
in
(bad)
(bad)
jmp
or
add
dec
or
cmp
jnp
add
add
cmp
(bad)
(bad)
jmp
sbb
add
dec
or
cmp
sbb
add
add
adc
add
dec
or
cmp
(bad)
call
or
add
add
dec
or
cmp
(bad)
inc
pop
pop
or
and
add
dec
or
cmp
(bad)
inc
add
add
add
test
(bad)
jmp
add
add
dec
or
cmp
cld
(bad)
jmp
mov
add
add
push
or
cmp
cld
(bad)
jmp
jb
push
add
adc
add
adc
add
xchg
add
or
add
push
jp
xor
sub
add
imul
dec
add
add
add
add
lahf
add
add
add
add
add
mov
add
add
add
add
add
add
push
add
add
and
add
add
push
add
sub
add
pop
add
add
mov
pop
add
or
sub
push
sub
cmp
or
add
dec
add
sub
add
jnp
add
add
pop
add
or
add
add
dec
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
inc
pop
pop
or
push
add
add
push
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
inc
add
add
add
cmps
and
add
add
push
add
cmp
(bad)
jmp
inc
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
xor
and
add
add
push
add
cmp
shl
add
add
push
add
cmp
(bad)
(bad)
inc
pop
pop
or
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
xchg
add
add
xor
add
add
sub
or
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
and
add
add
push
add
sub
add
add
push
add
sub
add
inc
add
add
pop
add
add
push
add
cmp
(bad)
cmp
add
and
add
add
push
add
cmp
(bad)
jmp
push
and
add
add
push
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
(bad)
jle
add
add
add
add
add
add
adc
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
xor
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
or
or
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
cmp
add
add
dec
add
cmp
(bad)
(bad)
inc
sbb
add
sub
sub
and
add
add
push
add
cmp
or
add
add
dec
add
cmp
sbb
push
and
push
add
cmp
sti
add
add
xor
or
add
dec
add
cmp
sub
add
and
add
add
push
add
cmp
(bad)
dec
sbb
or
add
lock
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
adc
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
sbb
jns
or
add
dec
add
cmp
(bad)
inc
sbb
xchg
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
sub
pop
add
or
or
push
add
cmp
std
(bad)
push
push
add
adc
add
add
add
add
add
add
add
xor
add
outs
add
add
sub
add
push
jp
sldt
add
push
add
cmp
pop
jge
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
outs
pop
add
or
adc
add
push
add
add
add
adc
jle
add
add
or
add
push
sub
add
xor
push
add
add
add
adc
jle
add
add
or
add
push
sub
add
xor
or
add
add
add
add
pop
or
add
push
sub
add
xor
adc
add
add
add
add
add
add
add
out
add
sbb
push
sub
xor
push
add
add
add
adc
add
fiadd
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
fld
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
fiadd
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
fild
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
loopne
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
loope
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
xlat
add
push
push
sub
add
sub
add
xor
push
add
add
add
adc
add
fild
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
fadd
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
fadd
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
loop
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
jecxz
add
sbb
add
push
sub
add
xor
push
add
add
add
adc
add
in
add
sbb
add
push
sub
add
xor
sldt
add
add
adc
add
aam
add
pop
push
sub
add
sub
adc
add
mov
add
add
add
sub
dec
add
add
add
add
pop
add
add
add
inc
add
add
and
add
add
push
add
sub
add
add
add
cld
push
add
adc
add
outs
pop
add
or
add
add
dec
add
sub
add
outs
pop
add
or
add
add
dec
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
add
jo
adc
add
outs
pop
add
or
add
adc
add
js
add
add
add
sub
dec
add
add
add
add
push
add
add
add
add
add
add
and
add
add
push
add
sub
add
out
add
push
sub
add
dec
add
sub
jb
push
add
adc
add
jae
add
push
jp
add
add
dec
add
sub
sub
push
sub
sub
and
add
add
push
add
sub
add
outs
pop
add
or
adc
add
or
add
add
add
add
sub
add
sub
xor
add
add
add
add
adc
sub
add
pop
cs
add
pop
add
push
sub
xor
add
add
sbb
jae
add
or
push
push
push
sbb
or
push
pop
sbb
or
push
sbb
or
push
sbb
or
push
sbb
or
push
sbb
or
push
sbb
sub
push
sbb
add
push
pop
push
sbb
add
or
pop
pop
sbb
add
or
pop
sbb
or
pop
sbb
or
pop
sbb
sub
pop
sbb
sub
pop
sbb
sub
pop
sbb
add
push
sbb
sbb
add
or
sbb
sbb
add
or
sbb
sbb
or
sbb
sbb
or
sbb
sbb
add
or
sbb
sbb
add
or
sbb
or
sbb
add
push
sbb
sbb
or
sbb
sbb
or
sbb
pop
sub
sbb
pop
sub
sbb
sbb
or
sbb
sbb
or
sbb
or
sbb
add
push
sbb
sbb
or
sbb
pop
sub
sbb
sbb
add
or
sbb
sbb
add
or
sbb
sbb
add
or
sbb
sbb
add
or
sbb
or
sbb
add
push
sbb
sbb
or
sbb
sbb
add
or
sbb
sbb
or
sbb
sbb
or
sbb
sbb
add
or
sbb
sbb
add
or
sbb
or
sbb
add
push
xor
add
add
add
or
add
sub
add
sub
add
or
add
add
add
add
or
add
sub
add
add
add
add
push
add
add
add
add
push
add
or
add
push
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
push
sub
xor
add
add
ins
add
adc
sub
or
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
mov
add
add
pop
add
add
push
add
sub
jb
push
add
adc
add
(bad)
sub
add
test
add
outs
pusha
add
or
call
add
jp
add
add
dec
add
sub
add
push
sub
and
add
add
push
add
sub
add
push
add
cmp
(bad)
inc
push
sub
add
es
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
(bad)
sub
xor
add
or
add
push
add
cmp
(bad)
(bad)
call
add
test
add
sub
add
dec
add
cmp
(bad)
inc
(bad)
sub
xor
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
jg
add
sub
push
add
xor
add
sub
xor
add
add
add
add
adc
jnp
add
add
add
xor
add
add
add
add
adc
add
add
add
dec
add
add
add
add
add
add
or
add
add
sub
add
or
add
jge
add
add
adc
add
add
jnp
add
add
pop
add
add
add
imul
xchg
add
push
add
add
add
and
add
or
pop
jge
add
add
add
add
adc
add
add
add
add
add
add
or
add
push
jge
add
add
add
xor
add
add
add
add
add
sbb
lea
add
jle
add
add
jnp
add
add
add
add
add
ret
push
add
jge
add
add
add
xor
adc
add
add
add
add
add
add
add
add
add
test
add
push
lea
add
sub
add
adc
add
pop
add
add
add
adc
jae
add
or
add
xor
add
add
add
add
add
jle
add
add
sub
add
push
push
inc
sub
sub
xor
add
add
add
add
adc
sub
add
add
or
inc
sub
sub
adc
add
adc
add
add
add
add
add
add
sub
pop
sub
sub
add
sub
add
add
xor
add
add
add
add
add
adc
push
sub
add
adc
or
mov
add
adc
xor
or
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
mov
add
add
add
add
or
add
dec
or
sub
add
add
dec
or
sub
add
add
dec
or
sub
add
add
dec
or
sub
add
or
add
dec
or
sub
add
sub
add
dec
or
cmp
(bad)
push
add
or
and
add
add
push
or
cmp
(bad)
push
push
add
adc
add
jae
add
or
or
add
dec
or
cmp
sub
add
push
or
cmp
add
or
add
sub
jb
push
add
adc
add
jb
push
add
adc
add
jae
add
or
sub
push
sub
cmp
(bad)
jmp
add
add
dec
or
cmp
(bad)
(bad)
call
push
sub
add
sub
adc
sub
add
or
adc
adc
sub
add
sub
adc
sub
add
or
adc
adc
sub
add
sub
add
or
pop
adc
sub
add
or
or
or
outs
mov
add
or
or
xor
or
or
outs
mov
add
or
jle
add
add
push
sub
add
push
or
bound
add
add
add
or
pop
sub
add
push
or
adc
add
add
mov
add
outs
xchg
add
adc
pop
adc
add
xor
push
sub
xor
jno
add
jo
add
add
add
adc
add
jae
add
or
pop
add
or
outs
xchg
add
or
add
xor
add
xchg
add
or
add
outs
xchg
add
or
or
add
add
or
add
or
xchg
add
or
pop
outs
xchg
add
or
add
cmp
(bad)
ficom
adc
or
hlt
add
add
add
fwait
add
push
fadd
sub
add
add
add
add
and
cmp
add
add
xor
add
add
jno
add
add
add
adc
add
jae
add
or
sub
xchg
add
or
sub
pop
outs
cwde
add
or
add
outs
mov
add
pop
outs
cmp
jmp
hlt
add
add
sub
sub
adc
add
add
add
cmp
sldt
add
sbb
add
inc
add
add
add
jae
add
or
add
add
or
sbb
add
cdq
add
or
push
pop
outs
mov
add
sub
xchg
add
adc
sub
(bad)
push
adc
(bad)
push
sub
add
outs
or
add
fadd
sub
add
adc
add
add
push
add
add
adc
add
add
add
jae
add
or
jae
add
or
add
add
or
pop
push
sub
add
sub
sub
xor
add
adc
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
and
add
add
add
add
and
add
add
push
add
sub
add
or
and
add
add
push
add
sub
add
or
pop
xor
add
add
dec
add
sub
add
or
add
dec
add
cmp
(bad)
inc
push
pop
outs
mov
add
outs
sahf
add
or
or
push
add
cmp
(bad)
dec
pop
pop
or
add
push
add
cmp
(bad)
dec
add
outs
lahf
add
or
add
or
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
dec
add
cmp
(bad)
(bad)
inc
add
pop
add
sub
add
sub
or
add
dec
add
cmp
(bad)
(bad)
call
or
push
add
add
push
add
cmp
(bad)
(bad)
dec
add
mov
mov
add
push
add
cmp
(bad)
(bad)
push
add
or
or
add
dec
add
cmp
or
add
or
sub
push
sub
sub
and
add
add
push
add
cmp
push
and
add
add
push
add
cmp
or
add
push
add
cmp
pop
pop
or
pop
add
add
push
add
cmp
(bad)
inc
push
outs
mov
add
aas
cmc
(bad)
(bad)
jmp
add
xor
add
add
sub
dec
add
add
add
add
push
add
add
add
add
add
add
and
add
add
push
add
sub
jb
push
add
adc
add
jae
add
or
add
add
dec
add
sub
add
add
or
or
add
add
dec
add
sub
sub
push
sub
sub
and
add
add
push
add
sub
arpl
add
push
jae
add
or
add
adc
add
add
add
sub
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
sub
add
add
dec
add
sub
mov
add
add
outs
mov
add
outs
movs
add
or
retf
add
add
add
push
add
sub
add
add
dec
add
cmp
(bad)
inc
adc
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
call
sub
add
add
dec
add
cmp
(bad)
(bad)
cmp
or
add
dec
add
cmp
(bad)
(bad)
jmp
movs
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
dec
add
cmp
or
add
add
dec
add
cmp
(bad)
(bad)
call
sub
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
mov
add
add
add
or
lods
and
add
add
push
add
cmp
(bad)
(bad)
call
sub
pop
add
add
push
add
cmp
(bad)
(bad)
inc
pop
pop
or
push
add
add
push
add
cmp
add
add
or
(bad)
(bad)
(bad)
call
sub
add
adc
add
or
add
add
add
add
add
pop
add
sub
add
add
xor
add
add
add
add
jae
add
or
push
add
add
or
add
add
or
inc
stos
add
or
add
or
or
add
sub
adc
add
or
add
add
add
add
sub
add
sub
adc
add
mov
add
add
sub
dec
add
add
add
add
add
add
sbb
add
or
add
pop
add
add
and
push
add
sub
add
add
push
add
sub
adc
(bad)
adc
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
or
and
add
dec
add
sub
add
sub
add
dec
add
sub
or
xor
add
push
add
cmp
(bad)
inc
sub
push
add
adc
add
jle
add
add
pop
add
sbb
mov
push
add
add
or
call
add
jp
add
xor
add
add
jns
add
add
push
add
adc
add
sub
add
push
add
add
or
add
or
add
add
or
sbb
outs
cwde
add
or
add
add
outs
lea
add
sub
xchg
add
or
add
or
sub
jle
add
add
sub
push
sub
add
adc
add
add
add
dec
add
add
add
adc
add
jge
add
jp
add
sub
dec
add
add
add
add
push
add
add
add
add
add
add
and
add
add
push
add
sub
add
add
sbb
and
add
add
push
add
sub
add
add
sub
add
add
dec
add
sub
add
adc
add
sub
add
push
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
or
outs
mov
add
sub
add
adc
add
sub
add
add
add
add
push
add
adc
add
sub
add
push
jle
add
add
add
add
sub
push
lea
add
add
jmp
add
sub
xor
iret
add
add
add
adc
and
inc
pop
add
add
add
add
add
add
add
xor
add
popa
add
add
and
add
add
push
add
sub
pop
sub
push
add
add
push
add
sub
add
push
add
adc
add
sub
add
push
and
add
add
push
add
sub
add
add
push
add
sub
add
cmp
add
add
add
or
and
add
dec
add
cmp
(bad)
inc
jle
add
add
sbb
add
sub
aam
add
sub
and
add
add
push
add
cmp
(bad)
inc
outs
cmp
add
sub
pop
sub
push
sub
sub
and
push
add
cmp
(bad)
(bad)
call
sub
sub
adc
add
add
add
cmp
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
push
add
add
add
jle
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repnz
add
add
add
add
push
add
inc
add
add
add
add
and
add
add
push
or
cmp
inc
jb
push
add
adc
add
sub
add
push
and
add
add
push
or
cmp
(bad)
(bad)
inc
outs
cmp
add
cmp
and
add
dec
or
cmp
or
add
add
dec
or
cmp
cmp
add
and
push
or
cmp
(bad)
(bad)
push
add
or
and
add
add
push
or
cmp
(bad)
(bad)
inc
jle
add
add
push
add
add
mov
push
sub
add
push
cmp
add
and
add
add
push
or
cmp
sub
add
push
cmp
add
and
add
add
push
or
cmp
push
add
add
push
add
add
mov
push
adc
sub
add
push
cmp
and
add
dec
or
cmp
(bad)
inc
outs
cmp
add
push
call
dec
or
cmp
(bad)
call
sbb
add
sub
add
or
lea
add
add
or
or
or
add
push
adc
sub
push
sub
sub
and
add
add
push
or
cmp
push
outs
dec
add
or
pop
and
add
add
push
or
cmp
(bad)
(bad)
inc
outs
cmp
or
and
add
dec
or
cmp
std
(bad)
call
adc
and
add
add
push
or
cmp
std
(bad)
call
adc
add
push
or
cmp
std
(bad)
call
or
or
add
add
push
or
cmp
std
(bad)
call
or
or
sbb
add
dec
or
cmp
pop
outs
scas
add
or
xor
or
add
dec
or
cmp
dec
add
add
sldt
add
push
or
cmp
or
and
add
dec
or
cmp
(bad)
jmp
inc
and
add
dec
or
cmp
(bad)
call
or
pop
adc
and
add
add
push
or
cmp
call
add
pop
push
outs
scas
add
or
add
or
add
or
and
push
or
cmp
std
(bad)
call
add
add
or
add
dec
or
cmp
std
(bad)
push
push
add
adc
add
add
add
call
add
jp
sbb
add
dec
or
cmp
cld
(bad)
(bad)
cmp
add
add
dec
or
cmp
cld
(bad)
call
or
sbb
add
dec
or
cmp
cld
(bad)
inc
outs
cmp
add
cmp
std
(bad)
jmp
adc
add
dec
or
cmp
push
or
push
or
cmp
sub
and
add
or
or
add
dec
or
cmp
jb
push
add
adc
add
sub
add
push
and
push
or
cmp
(bad)
call
adc
add
push
or
cmp
(bad)
(bad)
cmp
pop
add
add
push
or
cmp
(bad)
inc
push
outs
jl
add
and
add
add
push
or
cmp
cld
(bad)
push
pop
add
adc
add
add
nop
add
or
add
or
sbb
add
dec
or
cmp
(bad)
inc
sub
add
or
add
or
pop
add
add
push
or
cmp
sti
(bad)
inc
je
add
add
sub
add
push
outs
dec
add
or
and
add
dec
or
cmp
sti
(bad)
jmp
dec
and
add
add
push
or
cmp
sti
(bad)
call
and
add
sub
add
or
outs
cmp
add
sub
and
add
add
push
or
cmp
pop
lea
add
add
or
or
push
mov
add
or
add
or
sub
xor
add
add
add
add
add
arpl
add
sub
add
push
add
pop
add
adc
add
jb
pop
add
adc
add
jb
dec
add
adc
add
jb
pop
add
adc
add
pop
sub
add
push
or
add
add
test
add
adc
add
push
jb
push
add
adc
add
sub
push
sub
add
xor
add
add
add
add
add
arpl
add
sub
add
push
add
add
add
and
jo
adc
add
add
and
jo
adc
add
sub
jo
add
adc
add
jb
dec
add
adc
add
jb
pop
add
adc
add
pop
sub
add
push
or
add
add
es
add
adc
add
push
jb
push
add
adc
add
sub
push
sub
adc
add
bound
add
push
add
adc
popa
dec
add
add
add
add
add
add
add
add
icebp
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
sgdtd
add
add
push
add
add
add
add
add
add
add
add
adc
push
add
sub
add
add
push
add
sub
add
dec
add
cmp
(bad)
inc
pop
and
out
add
add
add
add
dec
add
cmp
(bad)
inc
jb
pop
add
adc
add
outs
pop
add
or
adc
add
dec
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
(bad)
inc
jb
pop
add
adc
add
outs
pop
add
or
or
push
add
cmp
(bad)
(bad)
inc
pop
pop
frstor
adc
add
dec
add
cmp
(bad)
(bad)
inc
jb
pop
add
adc
add
outs
pop
add
or
adc
add
dec
add
cmp
(bad)
(bad)
jmp
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
or
or
add
dec
add
cmp
jb
pop
add
adc
add
outs
pop
add
or
sldt
add
push
add
cmp
and
add
add
push
add
cmp
add
and
add
or
pop
add
adc
add
outs
pop
add
or
and
add
dec
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
(bad)
jmp
and
add
dec
add
cmp
(bad)
jmp
and
push
add
cmp
jb
pop
add
adc
add
outs
pop
add
or
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
push
pop
inc
push
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
cmp
(bad)
dec
add
add
adc
add
dec
add
cmp
std
(bad)
inc
jb
pop
add
adc
add
outs
pop
add
or
adc
add
dec
add
cmp
pop
pop
xor
and
add
add
push
add
cmp
add
add
add
sub
add
xor
stc
add
add
xor
or
add
add
add
add
add
add
sbb
add
add
add
jns
add
mov
add
add
add
and
add
add
push
add
sub
add
add
add
add
dec
add
sub
add
or
aaa
and
push
add
sub
add
add
dec
add
sub
add
add
push
add
sub
add
add
dec
add
cmp
(bad)
inc
add
outs
popf
add
or
lods
add
push
and
add
add
push
add
cmp
(bad)
inc
pop
pop
or
add
add
dec
add
cmp
inc
add
pop
add
or
or
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
(bad)
call
sub
push
sub
cmp
jmp
add
add
dec
add
cmp
(bad)
(bad)
inc
add
pop
add
or
add
add
xor
or
add
add
add
add
and
sub
add
sbb
push
add
add
jl
add
add
add
add
or
add
bound
add
sub
pop
adc
sub
add
sub
add
push
or
add
add
lods
add
push
jle
add
add
sub
add
push
or
clts
sub
jle
add
add
sub
pop
sub
add
add
add
add
and
pop
cmp
sldt
add
adc
add
loop
add
add
add
sub
inc
or
add
xchg
add
add
add
pop
add
add
add
test
add
add
add
add
add
add
or
add
dec
add
sub
add
popa
aas
add
add
push
add
add
push
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
and
add
add
push
add
sub
and
push
add
cmp
(bad)
inc
pop
popa
pop
pop
or
and
add
add
push
add
cmp
(bad)
inc
pop
inc
xor
add
add
dec
add
cmp
(bad)
inc
pop
data16
and
add
add
push
add
cmp
pop
inc
xor
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
inc
pop
pop
or
adc
xor
add
add
add
add
add
or
push
add
xor
sub
pop
or
popa
pop
shr
push
add
add
add
sub
xor
add
add
add
adc
jb
pop
add
adc
add
sub
add
push
add
outs
lods
add
or
pop
or
or
add
adc
push
or
add
sub
add
adc
add
add
add
and
or
add
add
xor
add
add
add
add
jae
add
push
or
add
add
add
inc
add
add
jae
add
or
sub
adc
add
add
add
sub
inc
or
add
push
add
add
add
scas
add
add
add
iret
add
add
add
add
add
add
add
or
add
xchg
add
add
and
add
add
push
add
sub
add
or
add
add
dec
add
sub
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
sub
and
add
add
push
add
sub
add
or
or
add
dec
add
cmp
(bad)
inc
or
or
add
dec
add
cmp
(bad)
inc
sub
add
dec
add
cmp
(bad)
jmp
mov
add
add
dec
add
cmp
(bad)
(bad)
inc
jb
pop
add
adc
add
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
jle
add
add
sub
add
push
outs
aas
add
or
and
add
add
push
add
cmp
(bad)
(bad)
dec
sub
and
push
add
cmp
(bad)
(bad)
dec
outs
inc
add
sub
pop
add
adc
add
jle
add
add
sub
nop
add
or
add
or
add
xor
add
add
add
add
sub
inc
pop
add
add
add
inc
add
add
add
xchg
add
add
add
add
add
add
add
and
add
add
push
add
sub
pop
pop
pop
or
add
add
dec
add
sub
push
pop
jle
add
add
pop
sub
leave
add
push
mov
add
push
add
sub
add
add
push
add
sub
add
dec
add
sub
add
adc
add
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
outs
bound
add
lea
add
or
sub
push
sub
sub
and
push
add
cmp
(bad)
inc
jle
add
add
sub
add
push
aas
jbe
(bad)
inc
sub
add
xor
add
add
adc
sub
add
adc
add
sub
outs
add
add
sub
add
adc
add
or
add
add
add
add
outs
add
adc
add
add
add
adc
sub
inc
or
add
mov
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
sub
add
add
or
cmps
add
add
push
add
add
push
add
sub
add
cmp
sub
push
sub
sub
and
add
add
push
add
sub
add
sub
add
dec
add
sub
add
adc
add
sub
add
push
and
push
add
cmp
(bad)
inc
jle
add
add
xchg
add
add
mov
push
xor
and
add
add
push
add
cmp
(bad)
inc
sub
add
push
sub
add
dec
add
cmp
(bad)
inc
outs
inc
add
or
add
dec
add
cmp
(bad)
(bad)
call
sub
add
add
dec
add
cmp
(bad)
(bad)
call
sub
sub
xor
add
add
add
add
adc
jb
pop
add
adc
add
sub
add
push
jle
add
add
sub
add
push
sub
pop
sub
pop
adc
push
lea
add
add
inc
add
or
add
inc
sub
add
xor
add
add
add
add
adc
jb
pop
add
adc
add
sub
add
push
jle
add
add
sub
add
push
sub
add
rol
add
sub
sub
add
xor
cmp
add
add
add
add
pop
add
adc
add
sub
add
push
jle
add
add
sub
add
push
sub
jle
add
add
sub
push
add
add
adc
add
sub
add
push
sub
xor
push
add
add
sub
outs
add
rol
add
or
add
add
push
sub
add
push
sub
add
xor
cmp
add
add
add
sub
inc
or
add
aad
add
or
add
mov
add
test
add
add
add
add
add
add
add
add
or
add
dec
add
sub
add
add
or
mov
push
add
add
push
add
sub
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
jo
adc
add
add
nop
add
or
pop
add
adc
add
jae
add
or
add
add
dec
add
cmp
(bad)
inc
jb
pop
add
adc
add
sub
add
push
and
push
add
cmp
(bad)
inc
jle
add
add
xchg
add
add
mov
push
xor
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
inc
add
or
and
add
dec
add
cmp
(bad)
inc
outs
inc
add
or
add
dec
add
cmp
(bad)
(bad)
call
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
or
jb
pop
add
adc
add
add
nop
add
or
pop
add
adc
add
jae
add
or
adc
add
and
add
add
add
add
pop
add
adc
add
sub
add
push
jle
add
add
sub
add
push
sub
add
push
inc
sub
xor
or
add
add
adc
sub
add
push
sub
add
xor
add
add
adc
jb
pop
add
adc
add
sub
add
push
add
pop
add
adc
add
sub
add
push
add
add
(bad)
add
push
sub
add
xor
add
add
adc
jno
or
add
add
add
add
add
add
add
jecxz
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
mov
add
scas
add
add
add
push
add
rol
add
and
and
add
add
push
add
sub
sbb
add
dec
add
cmp
(bad)
inc
jle
add
add
sub
add
push
cmp
add
sldt
add
push
add
cmp
dec
or
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
push
add
add
push
add
cmp
outs
inc
add
or
add
add
and
add
add
push
add
cmp
(bad)
inc
inc
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
cmp
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
push
add
cmp
and
add
add
push
add
cmp
and
push
add
cmp
inc
add
or
mov
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
add
add
push
add
cmp
(bad)
inc
add
push
(bad)
(bad)
jmp
add
add
dec
add
cmp
(bad)
dec
pop
pop
or
add
push
add
cmp
(bad)
(bad)
fst
add
add
pop
add
add
push
add
cmp
(bad)
(bad)
dec
or
(bad)
jmp
or
add
dec
add
cmp
(bad)
(bad)
inc
outs
dec
add
or
add
add
dec
add
cmp
(bad)
inc
outs
inc
add
or
add
dec
add
cmp
std
(bad)
inc
outs
dec
add
or
add
dec
add
cmp
std
(bad)
inc
push
add
sub
add
push
cmp
(bad)
jmp
add
push
add
cmp
and
add
add
push
add
cmp
and
add
add
push
add
cmp
and
add
dec
add
cmp
push
and
push
add
cmp
(bad)
inc
jle
add
add
sub
add
push
sub
sub
add
adc
add
add
add
sub
inc
or
add
fadd
add
or
add
jle
add
mov
add
add
add
add
add
add
add
pusha
add
add
and
add
add
push
add
sub
add
add
add
sbb
add
sub
add
aad
add
sub
and
add
add
push
add
sub
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
sub
add
add
dec
add
cmp
(bad)
inc
jb
pop
add
adc
add
sub
add
push
and
push
add
cmp
(bad)
push
pop
add
adc
add
add
nop
add
or
add
or
add
add
dec
add
cmp
(bad)
(bad)
call
and
add
sub
add
or
outs
cmp
add
sub
and
add
dec
add
cmp
(bad)
(bad)
inc
outs
inc
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
cmp
add
push
call
dec
add
cmp
(bad)
(bad)
call
jb
pop
add
adc
add
add
nop
add
or
add
or
add
xor
or
add
add
dec
add
add
add
add
push
add
add
add
add
add
inc
add
add
add
add
push
add
add
push
add
sub
shl
add
sub
add
or
outs
cmp
add
cmp
add
add
dec
add
sub
add
pop
call
dec
add
sub
add
sub
and
add
add
push
add
sub
jo
adc
add
add
nop
add
or
add
or
add
add
dec
add
cmp
inc
jb
pop
add
adc
add
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
jle
add
add
jno
add
sub
add
aad
add
cmp
(bad)
call
sub
push
sub
cmp
(bad)
jmp
add
push
add
cmp
(bad)
(bad)
call
jb
pop
add
adc
add
add
nop
add
or
add
or
add
adc
add
pop
add
add
popa
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
out
add
ins
add
add
add
rol
add
and
add
cmp
add
add
and
push
push
add
xchg
add
push
add
adc
add
sub
add
push
and
add
add
push
push
add
jne
(bad)
(bad)
cmp
add
add
or
add
dec
push
add
(bad)
(bad)
(bad)
inc
outs
inc
add
or
fadd
add
and
add
add
push
push
add
dec
(bad)
(bad)
(bad)
cmp
add
add
adc
add
dec
push
add
ss
(bad)
call
add
pop
add
add
or
add
dec
push
add
and
(bad)
inc
or
add
or
add
or
push
push
add
add
sub
add
push
or
sldt
add
push
push
add
lock
(bad)
call
add
add
sbb
add
or
test
add
add
push
push
add
iret
(bad)
(bad)
inc
or
add
or
add
add
push
push
add
mov
or
or
add
dec
push
add
test
(bad)
dec
add
add
or
jnp
(bad)
jmp
or
add
dec
push
add
mov
(bad)
(bad)
cmp
add
add
adc
add
dec
push
add
jnp
(bad)
inc
outs
inc
add
or
scas
add
add
push
add
add
push
push
add
(bad)
(bad)
(bad)
call
sub
add
add
dec
push
add
push
(bad)
(bad)
jmp
test
pop
add
add
push
push
add
inc
(bad)
(bad)
call
sub
add
add
dec
push
add
xor
(bad)
dec
add
add
or
push
(bad)
(bad)
jmp
add
push
push
add
sbb
(bad)
call
or
sub
sub
and
add
add
push
push
add
add
(bad)
inc
outs
add
xlat
add
push
or
adc
add
dec
push
add
out
(bad)
dec
pop
pop
or
adc
add
dec
push
add
aam
(bad)
dec
pop
pop
or
add
push
push
add
ret
push
pop
add
adc
add
push
sub
or
add
jp
sub
xor
or
add
test
add
sub
dec
add
add
add
add
cmp
add
xchg
add
mov
add
add
add
add
add
push
and
add
add
push
add
sub
push
sbb
add
add
call
add
add
and
add
add
push
add
sub
and
add
add
push
add
sub
and
push
add
sub
or
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
jb
pop
add
adc
add
sub
add
push
and
add
add
push
add
cmp
(bad)
inc
je
add
add
add
or
and
add
dec
add
cmp
(bad)
(bad)
inc
je
add
add
add
or
and
add
add
push
add
cmp
je
add
add
add
or
jb
pop
add
adc
add
jb
pop
add
adc
add
jae
add
or
adc
add
jae
add
test
add
sub
dec
add
add
add
add
add
add
cmp
add
or
add
add
add
add
dec
add
sub
add
pop
add
adc
add
sub
add
push
and
add
add
push
add
sub
add
add
add
and
add
add
push
add
sub
sub
push
sub
sub
and
add
add
push
add
sub
add
sub
sub
adc
add
and
add
add
add
add
pop
add
adc
add
sub
add
push
jle
add
add
sub
add
push
mov
inc
sub
add
adc
add
add
add
adc
add
sbb
fiadd
add
sub
adc
push
add
add
add
jb
pop
add
adc
add
sub
add
push
add
inc
add
adc
add
sub
add
push
jle
add
add
add
push
or
sub
add
sub
add
sbb
add
add
jb
pop
add
adc
add
sub
add
push
add
pop
add
adc
add
sub
add
push
jle
add
add
sub
add
push
or
sbb
pop
or
adc
movntps
je
add
add
outs
dec
add
or
add
add
add
push
add
or
pop
or
add
add
jne
add
adc
add
jle
add
add
sub
add
push
sub
add
push
jb
pop
add
adc
add
push
jae
add
or
rcr
adc
add
jle
add
add
sub
add
push
sub
fstp
jo
adc
add
jae
add
or
sub
add
add
add
add
inc
add
push
add
xchg
add
add
xor
add
dec
add
add
add
add
add
add
mov
add
jecxz
add
or
add
inc
add
add
add
add
add
add
or
add
dec
add
sub
add
add
add
outs
imul
or
add
add
dec
add
sub
add
adc
add
sub
add
push
and
add
add
push
add
sub
add
add
dec
add
or
add
add
dec
add
cmp
inc
jb
pop
add
adc
add
sub
add
push
and
add
add
push
add
cmp
(bad)
jmp
imul
dec
add
cmp
(bad)
inc
outs
popa
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
pop
adc
data16
(bad)
jmp
add
add
dec
add
cmp
(bad)
(bad)
jmp
and
push
add
cmp
(bad)
inc
sbb
jbe
(bad)
call
sub
push
sub
cmp
(bad)
(bad)
jmp
pop
add
add
push
add
cmp
(bad)
(bad)
jmp
jb
pop
add
adc
add
jle
add
add
sub
add
push
sub
fstp
jo
adc
add
jae
add
or
add
adc
add
nop
add
add
dec
add
add
add
add
xor
add
pop
add
add
add
inc
add
add
add
add
and
push
add
sub
pop
sub
add
add
dec
add
sub
add
add
or
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
dec
add
sub
sbb
add
add
dec
add
sub
and
add
dec
add
sub
add
outs
ins
add
or
push
sub
xor
nop
add
add
dec
add
add
add
add
xor
add
pop
add
add
add
inc
add
add
add
add
and
push
add
sub
pop
sub
add
add
dec
add
sub
add
add
or
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
dec
add
sub
sbb
add
add
dec
add
sub
and
add
dec
add
sub
add
outs
ins
add
or
push
sub
xor
add
add
add
add
adc
add
add
pop
add
sbb
mov
push
add
in
add
sub
add
xor
add
jbe
add
or
jle
add
add
add
in
add
outs
ja
add
push
jle
add
add
add
jmp
add
push
sub
xor
add
add
add
add
adc
pop
sub
add
sub
adc
add
adc
add
jne
add
add
sub
add
sub
push
pop
sub
add
sub
adc
add
add
add
adc
jb
pop
add
adc
add
sub
add
push
jle
add
add
jle
add
add
pop
add
sbb
mov
push
add
out
add
push
je
add
sbb
add
add
xor
add
add
add
add
add
pop
add
adc
add
sub
add
push
jle
add
add
ret
add
add
sub
add
push
jb
pop
add
adc
add
jle
add
add
dec
add
add
imul
add
sub
add
push
sub
add
sub
add
push
sub
add
xor
add
add
add
sub
or
add
add
add
add
das
add
add
add
add
add
add
add
push
add
add
pop
add
add
push
add
sub
add
pop
cmp
add
add
dec
add
sub
or
add
add
dec
add
sub
cmp
add
push
add
sub
add
push
add
or
add
or
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
jb
pop
add
adc
add
sub
add
push
and
add
add
push
add
cmp
(bad)
jmp
xor
add
add
dec
add
cmp
(bad)
(bad)
inc
jle
add
add
sbb
add
add
push
outs
ja
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
dec
add
or
push
sub
xor
add
add
add
adc
jb
pop
add
adc
add
sub
add
push
add
pop
add
adc
add
sub
add
sub
add
add
sub
add
push
jb
pop
add
adc
add
jle
add
add
sub
adc
add
add
aaa
add
push
sub
add
push
jle
add
add
add
inc
push
sub
xor
add
pop
lea
add
add
push
push
add
add
push
sub
xor
cmp
add
add
jmp
add
adc
add
sub
add
push
add
pop
add
adc
add
sub
add
sub
add
or
add
sub
add
push
or
add
add
add
add
add
xor
add
add
add
sub
or
add
add
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
and
add
add
push
add
sub
push
or
add
add
dec
add
sub
add
or
add
add
sub
and
add
add
push
add
sub
add
add
push
add
sub
jo
adc
add
jae
add
or
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
sub
add
dec
add
cmp
(bad)
call
sub
add
add
dec
add
cmp
(bad)
inc
pop
pop
or
add
add
dec
add
cmp
(bad)
(bad)
inc
add
add
or
jne
(bad)
call
sub
add
adc
add
add
add
sbb
xor
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
sub
push
pop
pop
or
add
add
dec
add
sub
sub
add
push
jae
add
or
or
add
dec
add
sub
add
or
add
add
sub
add
dec
add
sub
add
add
dec
add
cmp
(bad)
jmp
pop
and
add
add
push
add
cmp
(bad)
inc
outs
sahf
add
or
add
dec
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
(bad)
call
sub
add
push
add
cmp
(bad)
(bad)
call
sub
sub
push
sub
cmp
(bad)
jmp
pop
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
or
imul
add
adc
pop
add
add
xor
or
add
add
add
add
add
add
add
add
rol
add
sgdtd
add
add
push
add
add
add
data16
add
and
add
add
push
add
sub
push
push
outs
sahf
add
or
outs
sahf
add
or
push
add
add
or
sub
in
add
and
add
dec
add
sub
jo
adc
add
jae
add
or
or
add
dec
add
cmp
(bad)
inc
sub
add
add
dec
add
cmp
(bad)
inc
sub
add
dec
add
cmp
(bad)
inc
add
add
or
outs
sahf
add
or
push
add
add
or
sub
cmp
push
add
add
push
add
cmp
(bad)
inc
sub
add
dec
add
cmp
(bad)
(bad)
inc
outs
sahf
add
or
outs
sahf
add
or
dec
and
add
add
push
add
cmp
(bad)
(bad)
inc
adc
stos
add
or
and
push
add
cmp
(bad)
(bad)
push
dec
add
adc
add
jae
add
or
sub
push
sub
cmp
(bad)
(bad)
jmp
pop
add
add
push
add
cmp
(bad)
(bad)
inc
sub
add
pop
add
sub
xor
add
add
add
add
adc
add
lar
or
pop
sub
add
adc
add
sub
adc
add
data16
add
add
adc
sbb
or
add
add
add
add
add
add
sub
add
or
add
add
add
add
dec
add
sub
add
mov
add
sub
and
add
add
push
add
sub
pop
sub
add
add
dec
add
sub
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
adc
add
or
add
add
add
add
adc
repz
push
sub
add
adc
add
pop
add
add
add
sub
dec
add
add
add
add
xor
add
add
add
inc
add
add
add
add
and
push
add
sub
add
pop
and
add
add
push
add
sub
add
mov
add
sub
push
sub
sub
and
add
add
push
add
sub
add
dec
add
sub
add
or
add
add
dec
add
sub
add
add
push
add
cmp
(bad)
inc
outs
mov
add
sub
adc
add
or
add
add
add
add
pop
and
cmc
add
push
sub
add
xor
add
add
add
xor
or
add
add
add
add
add
add
mov
add
out
add
or
add
das
add
add
add
add
add
add
or
add
dec
add
sub
jae
add
or
and
add
dec
add
sub
add
add
or
add
dec
add
sub
jo
adc
add
jb
pop
add
adc
add
jae
add
or
add
add
dec
add
cmp
(bad)
push
add
push
or
add
add
dec
add
cmp
dec
jnp
add
add
xor
push
add
add
push
add
cmp
(bad)
dec
add
stos
add
add
add
add
dec
add
cmp
(bad)
(bad)
push
pop
add
adc
add
jae
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
or
and
push
add
cmp
sub
push
sub
cmp
(bad)
jmp
pop
add
add
push
add
cmp
(bad)
(bad)
inc
pop
or
push
add
add
jae
add
push
sub
add
push
jle
add
add
sub
add
push
sub
xor
add
dec
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
add
dec
add
add
and
add
add
push
add
sub
pop
sub
add
dec
add
sub
add
add
push
add
sub
add
and
push
add
sub
add
sub
sub
and
add
add
push
add
sub
add
add
push
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
inc
push
outs
add
add
and
add
add
push
add
cmp
inc
outs
push
add
or
(bad)
jmp
adc
push
add
add
add
and
inc
pop
add
add
add
add
add
add
add
add
add
dec
add
add
and
add
add
push
add
sub
jae
add
or
and
add
add
push
add
sub
add
push
add
sub
add
or
add
add
dec
add
sub
add
add
add
add
dec
add
sub
or
add
add
dec
add
cmp
(bad)
push
pop
add
adc
add
jae
add
or
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
pop
or
push
add
add
add
sub
add
push
jle
add
add
sub
add
push
sub
adc
add
adc
add
add
add
jle
add
add
sub
add
push
sub
sub
add
adc
add
cli
add
add
xor
or
add
add
add
add
add
add
add
add
add
add
xor
add
outs
add
add
add
cmp
and
add
add
push
add
sub
pop
or
add
or
and
add
dec
add
sub
or
and
add
add
push
add
sub
add
add
push
add
sub
add
or
add
add
dec
add
sub
add
add
push
add
cmp
(bad)
call
or
add
add
dec
add
cmp
(bad)
dec
sub
and
add
add
push
add
cmp
(bad)
inc
add
add
or
and
push
add
cmp
(bad)
(bad)
jmp
sbb
sub
push
sub
cmp
(bad)
jmp
pop
add
add
push
add
cmp
(bad)
(bad)
inc
outs
push
add
or
mov
sub
add
push
sub
add
xor
add
add
add
add
adc
adc
cld
add
push
sub
xor
add
add
add
add
adc
sub
add
adc
add
jae
add
or
add
cld
add
push
sub
sbb
push
add
add
adc
add
push
or
adc
lods
add
add
sub
or
outs
mov
add
jae
add
or
add
add
outs
mov
add
or
mov
add
or
jnp
add
add
outs
scas
add
or
add
or
outs
cmp
loopne
wbinvd
sub
jle
add
add
sub
jb
pop
add
adc
add
push
jae
add
or
jle
add
add
add
inc
pop
add
push
jae
add
or
or
add
add
add
add
sub
and
add
add
add
adc
add
adc
add
add
add
add
jb
pop
add
adc
add
sub
add
push
sub
add
xor
add
cmp
inc
or
add
add
add
cmp
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
or
add
dec
add
sub
add
and
add
add
push
add
sub
jo
adc
add
jae
add
or
add
add
dec
add
sub
add
add
or
add
dec
add
cmp
(bad)
push
pop
add
adc
add
jb
pop
add
adc
add
jae
add
or
or
add
dec
add
cmp
(bad)
push
pop
add
adc
add
jae
add
or
or
add
dec
add
cmp
(bad)
(bad)
inc
push
xor
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
sahf
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
pop
add
or
push
add
add
push
add
cmp
(bad)
(bad)
inc
outs
sahf
add
or
xor
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
mov
add
or
add
push
add
cmp
push
outs
scas
add
or
and
add
add
push
add
cmp
sub
sub
add
adc
add
adc
add
xchg
add
adc
jae
add
or
push
jae
add
or
pop
sub
xor
add
add
add
add
add
adc
push
sub
outs
sahf
add
or
add
or
add
add
xor
add
add
xchg
add
adc
add
or
push
add
add
add
jle
add
add
sub
add
push
or
clts
sub
jle
add
add
sub
pop
sub
adc
add
add
add
add
add
xor
cmp
add
adc
xor
inc
or
add
inc
add
add
add
or
add
jnp
add
jmp
add
add
add
rol
add
daa
add
add
and
add
add
push
add
sub
add
adc
add
sub
add
push
and
add
add
push
add
sub
pop
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
pop
maxps
mov
add
or
or
add
dec
add
cmp
(bad)
inc
sbb
maxps
mov
add
or
or
add
dec
add
cmp
(bad)
inc
push
outs
pop
add
or
push
add
add
push
add
cmp
(bad)
(bad)
inc
pop
pop
outs
pop
add
or
pop
add
add
push
add
cmp
pop
jne
pop
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
outs
pop
add
or
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
maxps
mov
add
or
add
push
add
cmp
(bad)
(bad)
inc
or
add
or
add
push
add
cmp
(bad)
(bad)
inc
or
add
or
add
add
xor
jp
add
add
add
sub
dec
add
add
add
add
add
add
pop
add
add
and
add
add
push
add
sub
add
add
or
add
dec
add
sub
add
add
dec
add
sub
add
jp
sub
push
sub
sub
and
add
add
push
add
sub
jo
adc
add
add
nop
add
or
jae
add
or
add
adc
add
sub
add
add
add
add
sub
add
push
add
out
add
push
sub
jle
add
add
stos
pusha
add
adc
add
add
aaa
add
push
add
add
or
adc
add
cmp
add
add
add
add
pusha
add
adc
add
sub
add
push
jle
add
add
sub
add
push
sub
add
(bad)
pusha
add
adc
add
add
aaa
add
push
add
add
or
add
adc
push
add
add
adc
add
add
add
xor
jo
adc
add
add
aaa
add
push
sub
add
sub
add
adc
add
imul
add
add
adc
sbb
or
add
add
add
add
add
add
pop
add
add
and
add
add
push
add
sub
add
add
or
add
dec
add
sub
add
add
dec
add
sub
add
jp
sub
push
sub
sub
and
add
add
push
add
sub
add
or
add
xor
add
add
adc
add
add
add
xor
jo
adc
add
add
aaa
add
push
sub
add
add
xor
imul
add
add
adc
sbb
or
add
add
add
add
add
add
pop
add
add
and
add
add
push
add
sub
add
add
or
add
dec
add
sub
add
add
dec
add
sub
add
jp
sub
push
sub
sub
and
add
add
push
add
sub
add
or
add
xor
add
add
add
add
adc
sub
add
or
add
xor
sbb
add
add
add
add
xor
add
mov
add
jb
popa
add
adc
add
jae
add
or
adc
add
adc
add
add
add
add
xor
add
mov
add
add
cmp
add
jp
add
xor
sbb
add
add
add
add
inc
add
add
popa
add
adc
add
jae
add
or
add
xor
adc
add
add
add
add
inc
add
add
cmp
add
jp
add
adc
add
xor
add
js
add
lldt
add
adc
push
(bad)
push
pop
add
sbb
add
or
cs
add
mov
add
sbb
popa
add
adc
add
jae
add
or
add
add
xor
adc
add
add
add
add
xor
add
mov
add
add
cmp
add
jp
add
xor
add
add
adc
sub
jle
add
add
sub
add
push
jae
add
or
add
add
xor
add
add
add
add
add
daa
add
or
call
sub
add
push
sub
add
add
jge
add
add
add
pop
add
add
add
add
add
xor
add
xor
inc
or
add
inc
add
add
add
or
add
test
add
or
add
and
add
iret
add
add
add
add
add
popf
add
add
and
add
add
push
add
sub
add
add
and
add
add
push
add
sub
add
cmp
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
adc
add
sub
add
add
or
add
dec
add
cmp
(bad)
inc
add
add
add
adc
add
sub
or
add
dec
add
cmp
(bad)
inc
jle
add
add
add
push
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
add
pop
add
add
push
add
cmp
jle
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
jnp
add
add
or
add
sub
add
and
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
and
push
add
cmp
add
add
add
add
add
add
adc
add
sub
add
sbb
add
add
add
add
sub
push
adc
adc
adc
add
add
jno
add
sub
add
add
sub
jle
add
add
push
sub
push
add
add
push
jle
add
add
sub
add
push
sub
add
push
sub
add
push
adc
outs
cmp
int
sbb
push
jne
add
add
pop
adc
sub
jle
add
add
pop
sub
adc
adc
xor
fiadd
push
sub
sub
add
add
add
add
push
add
add
add
xchg
xchg
add
add
add
sbb
add
bound
add
xchg
add
adc
or
add
add
sub
pop
or
aas
or
add
or
sub
jle
add
add
sub
add
push
fiadd
fiadd
or
add
or
or
inc
add
add
xor
push
add
push
or
add
or
push
pop
pop
or
add
pop
adc
add
mov
mov
add
sub
add
sbb
add
add
add
sub
add
add
add
add
add
add
add
add
sbb
add
xor
add
nop
add
adc
or
add
add
je
add
jae
add
sbb
add
sub
add
add
push
or
pop
add
add
push
fiadd
fiadd
push
sub
add
add
add
add
add
sub
add
add
add
xor
mov
add
xchg
add
adc
or
add
add
sub
pop
adc
push
adc
sub
push
adc
call
or
xlat
add
push
adc
adc
das
add
push
adc
add
adc
push
sub
fidiv
sub
jle
add
add
sub
add
push
or
add
or
or
inc
add
add
xor
push
add
push
or
add
or
push
pop
pop
or
add
fiadd
adc
pop
pop
adc
adc
adc
mov
xchg
fiadd
fiadd
push
sub
sbb
add
add
pop
je
add
add
add
add
add
add
add
xor
add
add
xchg
add
adc
add
add
sub
push
mov
inc
or
add
sub
sub
adc
add
add
add
add
add
xor
add
add
add
jo
add
sub
push
mov
fiadd
sub
sub
add
add
add
add
add
adc
add
add
add
sbb
add
add
jo
add
sub
push
mov
xor
jle
add
add
jne
add
push
call
push
add
push
or
pop
fiadd
fiadd
adc
pop
sub
add
add
add
add
add
cs
add
add
adc
add
mov
add
adc
sub
or
add
add
add
add
add
add
jno
add
mov
add
pop
add
add
add
add
add
sbb
add
add
pop
add
add
push
add
sub
push
or
add
push
add
sub
add
or
add
add
dec
add
sub
add
dec
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
add
push
add
cmp
(bad)
dec
pop
pop
or
add
push
add
cmp
(bad)
inc
outs
jmp
add
and
add
dec
add
cmp
dec
or
add
add
xor
add
add
sbb
or
add
add
add
add
add
add
or
add
sbb
add
add
add
add
dec
add
sub
sub
add
add
dec
add
sub
add
jecxz
add
or
add
add
dec
add
sub
adc
sub
push
sub
sub
and
add
add
push
add
sub
loop
add
sub
add
xor
imul
add
sub
dec
add
add
add
add
add
add
or
add
sbb
add
add
add
add
dec
add
sub
sub
add
add
dec
add
sub
add
jecxz
add
or
add
add
dec
add
sub
adc
sub
push
sub
sub
and
add
add
push
add
sub
outs
jmp
add
es
add
add
xor
sbb
add
pushf
add
adc
xor
inc
or
add
xor
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
mov
or
and
add
add
push
push
add
scas
pop
adc
sub
push
sub
sub
and
add
add
push
push
add
cwde
sub
add
or
and
add
add
push
push
add
xchg
adc
add
push
push
add
jbe
(bad)
dec
sub
popa
and
add
add
push
push
add
pusha
(bad)
(bad)
call
add
add
add
add
push
push
add
dec
(bad)
(bad)
dec
outs
call
add
push
or
add
push
push
add
xor
(bad)
inc
or
add
or
add
add
dec
push
add
sbb
and
or
add
dec
push
add
or
add
and
push
push
add
stc
(bad)
(bad)
call
add
xor
add
sub
xor
add
add
popf
add
adc
add
add
or
jae
add
or
and
add
add
add
sbb
jle
add
add
jle
add
or
sub
or
add
or
push
sub
add
push
push
adc
add
add
sub
add
push
adc
fstp
add
add
or
sub
add
push
fsub
add
add
add
sbb
jle
add
add
jle
add
or
sub
add
add
or
add
adc
add
push
add
add
ret
add
push
sub
add
push
sub
add
push
sbb
and
push
pop
adc
sub
add
push
sub
or
adc
add
add
sub
add
push
adc
(bad)
pop
push
sub
add
push
push
inc
mov
add
jle
add
add
sub
add
push
adc
ja
add
xor
push
adc
sub
pop
adc
call
pop
add
add
or
or
pop
pop
popf
adc
outs
stos
add
or
push
sub
add
push
push
ss
adc
mov
sub
add
push
outs
xchg
add
or
jle
add
add
add
sbb
add
sub
add
push
outs
xchg
add
or
sub
push
ficomp
adc
pop
pop
adc
adc
adc
mov
xchg
fimul
or
and
add
fdivr
add
or
adc
sub
add
add
add
and
add
add
add
add
jp
loopne
add
add
add
sbb
add
add
jle
add
or
jle
add
or
lea
add
or
add
or
jle
add
add
bound
jo
adc
add
add
and
jo
adc
add
sub
add
jae
add
or
pop
jae
add
or
sbb
add
js
add
sub
xlat
add
push
sub
fstp
add
add
outs
adc
add
outs
pop
add
or
pop
cmp
jns
add
pop
sub
add
add
add
add
adc
jp
add
jb
bound
jo
adc
add
adc
cmp
aas
add
jnp
add
jb
bound
jo
adc
add
sub
push
je
add
add
add
add
call
jle
add
or
adc
call
jle
add
or
lea
add
adc
add
jb
bound
jo
adc
add
adc
sbb
aas
add
add
adc
fisubr
adc
outs
sbb
add
cmp
(bad)
(bad)
ficom
adc
sub
jle
add
add
pop
sub
fiadd
es
adc
fiadd
push
sub
push
sub
inc
xor
add
add
add
add
mov
add
sub
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sub
xor
add
add
adc
sbb
or
add
add
add
add
add
add
sub
add
add
add
add
dec
add
sub
push
jb
bound
jo
adc
add
sub
and
add
add
push
add
sub
add
add
push
add
sub
add
adc
add
outs
mov
adc
sub
push
sub
sub
and
add
add
push
add
sub
or
or
add
or
add
add
pop
push
add
cmp
add
xor
add
add
add
add
adc
add
jge
add
push
sbb
add
cmp
add
xor
add
add
add
add
push
sub
add
add
or
add
add
add
push
or
add
sbb
pusha
adc
sub
add
push
or
sub
add
push
adc
sbb
pusha
push
adc
adc
sub
add
push
or
add
push
add
add
add
push
or
sub
fimul
fimul
pop
sub
pop
sub
add
fcom
sub
add
add
add
add
pop
add
add
add
xor
add
add
sub
add
push
or
sub
pop
sub
add
push
or
sub
add
sbb
pop
add
add
mov
or
add
push
sub
add
add
or
add
add
push
or
add
pop
pop
pusha
adc
sub
add
push
or
add
push
adc
add
add
adc
add
adc
jle
add
add
push
push
and
add
sub
add
or
adc
push
adc
push
or
add
adc
or
or
pop
inc
pop
add
add
add
add
add
add
add
add
add
add
mov
add
push
adc
push
adc
sub
pop
adc
sub
add
or
push
push
adc
outs
in
add
or
js
add
or
or
add
add
add
add
mov
push
push
adc
push
adc
push
adc
adc
push
adc
outs
mov
add
adc
sub
adc
adc
adc
adc
adc
pop
outs
scas
add
or
add
or
or
pop
adc
adc
push
adc
outs
mov
add
adc
adc
adc
xor
adc
outs
inc
add
or
sub
adc
push
sub
add
or
fimul
or
or
xor
add
fadd
sub
add
add
add
pop
add
add
add
inc
add
add
add
add
add
add
xor
add
add
adc
add
add
lea
add
push
or
add
push
add
add
push
sub
add
add
or
sub
and
add
add
or
or
add
xor
add
adc
add
ss
adc
add
push
jle
add
add
push
and
add
sub
add
or
adc
xor
add
add
or
add
add
fimul
or
or
xor
add
fadd
lea
add
pop
jle
add
add
adc
pop
sub
add
push
adc
sub
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
push
je
add
add
add
xor
push
add
add
add
adc
add
add
push
je
add
add
add
adc
add
add
sbb
or
add
add
add
add
dec
add
add
add
pop
add
add
and
add
add
push
add
sub
adc
(bad)
adc
and
add
add
push
add
sub
add
add
sub
add
push
or
add
add
dec
add
sub
sub
push
sub
sub
and
add
add
push
add
sub
stc
add
or
add
or
add
xor
jb
add
mov
sbb
or
add
add
add
add
add
add
or
add
pop
add
add
and
add
add
push
add
sub
adc
(bad)
adc
and
add
add
push
add
sub
add
add
add
push
or
add
add
dec
add
sub
add
sub
sub
and
add
add
push
add
sub
stc
add
or
add
or
add
adc
add
add
add
push
or
add
add
sub
add
push
sub
jle
add
or
push
jae
add
or
adc
add
and
add
add
add
inc
add
push
or
add
add
sub
add
push
sub
jle
add
or
push
jae
add
or
add
xor
add
add
adc
add
sub
add
sub
pop
sub
add
sub
add
sub
adc
add
add
add
push
or
sub
sub
add
adc
add
adc
add
adc
add
sub
add
sub
pop
sub
add
sub
add
sub
add
sbb
push
add
add
movs
add
adc
or
jg
add
sub
add
add
or
push
and
add
add
push
or
or
add
pop
push
pusha
adc
sub
add
push
or
or
or
sub
pop
sub
add
fmul
sub
add
add
add
add
pop
add
add
add
xor
add
add
mov
sub
sub
add
sub
add
add
or
push
and
add
add
push
or
add
sbb
pusha
adc
sub
add
push
or
sub
add
push
adc
sbb
pusha
push
adc
adc
sub
add
push
or
sub
fimul
fimul
pop
sub
pop
sub
add
fcom
sub
add
add
adc
add
add
or
add
add
xor
add
add
add
or
jg
add
sub
add
add
or
push
and
add
add
push
or
or
jb
and
jo
adc
add
outs
mov
add
or
jo
adc
add
adc
xchg
add
jo
adc
add
adc
add
pop
pop
outs
pushf
add
or
add
push
or
add
or
add
and
add
add
pusha
adc
sub
add
push
adc
adc
sub
sub
add
push
sub
or
sub
pop
sub
add
fmul
sub
adc
add
add
xchg
or
add
add
xor
add
add
movs
add
adc
add
push
sub
add
add
or
add
add
push
or
or
add
and
add
add
pusha
adc
sub
add
push
or
add
aaa
add
push
sub
or
sub
pop
sub
add
fmul
sub
add
adc
add
add
add
inc
add
add
add
adc
add
sbb
add
cmps
add
adc
add
sub
add
or
mov
or
add
sub
add
or
sub
add
sbb
or
cmps
add
add
add
add
or
push
and
add
add
push
or
add
or
sub
sub
add
sub
add
or
add
push
push
push
pusha
adc
sub
add
push
or
adc
add
add
add
or
add
add
add
pop
pop
adc
add
add
or
add
or
add
or
push
sub
add
push
or
jle
add
add
add
push
outs
aaa
add
or
add
pop
adc
outs
jle
add
add
mov
or
sub
pop
sub
add
fmul
outs
inc
add
or
add
adc
add
add
add
add
add
add
adc
add
sbb
add
cmps
add
adc
add
sub
add
or
mov
or
add
sub
add
or
sub
add
sbb
or
add
add
add
or
push
and
add
add
push
or
add
or
sub
sub
add
sub
add
or
add
push
pop
push
pusha
adc
sub
add
push
or
add
push
adc
adc
pop
adc
add
or
push
jle
add
or
add
or
pop
jle
add
or
add
or
add
or
add
cmp
add
or
add
add
add
or
or
adc
sub
add
add
or
adc
adc
adc
jle
add
or
add
or
add
or
add
or
cmp
add
or
jle
add
add
or
push
add
push
outs
aaa
add
or
or
pop
adc
adc
push
pop
outs
xor
pop
pop
sub
add
fmul
outs
inc
add
or
add
add
add
add
sub
lods
aam
or
add
add
xor
sbb
add
adc
add
sub
add
or
add
inc
add
or
sub
add
or
sub
add
sbb
or
add
add
add
or
push
and
add
add
push
or
add
adc
add
or
jg
add
sub
add
pop
push
pusha
adc
sub
add
push
or
adc
jle
add
or
push
jle
add
or
add
or
pop
jle
add
or
add
or
add
or
add
cmp
add
or
add
jb
add
push
or
or
and
or
add
add
or
add
jae
add
outs
pop
sub
add
jae
add
or
or
sub
pop
sub
add
fmul
sub
add
add
add
add
and
or
add
add
xor
add
add
add
add
sub
dec
add
add
add
add
add
add
add
sbb
add
add
add
add
dec
add
sub
sub
add
add
dec
add
sub
add
push
add
dec
add
push
sub
and
add
add
push
add
sub
sub
add
sub
push
sub
sub
and
add
add
push
add
sub
push
add
add
push
sub
add
adc
or
cli
add
add
push
dec
add
add
add
add
pop
add
add
add
add
add
add
add
fwait
add
add
add
add
add
and
add
clc
add
add
add
xor
add
outs
add
add
add
or
add
add
adc
add
dec
or
sub
add
push
adc
and
add
add
push
or
sub
add
adc
add
or
mov
add
adc
sub
push
sub
sub
and
add
add
push
or
cmp
(bad)
call
adc
and
add
add
push
or
cmp
(bad)
call
push
adc
call
dec
or
cmp
(bad)
inc
add
push
add
add
inc
add
push
or
add
add
dec
or
cmp
(bad)
(bad)
inc
add
push
and
add
add
push
or
cmp
(bad)
(bad)
inc
jo
adc
add
or
mov
add
adc
add
push
or
cmp
(bad)
(bad)
call
pop
adc
mov
lea
or
push
or
cmp
(bad)
(bad)
inc
adc
adc
sub
add
and
add
add
push
or
cmp
sahf
add
add
add
push
or
cmp
pop
pop
adc
and
add
add
push
or
cmp
or
or
add
dec
or
cmp
call
pop
pop
pop
adc
and
add
add
push
or
cmp
(bad)
(bad)
cmp
(bad)
jmp
add
add
dec
or
cmp
(bad)
inc
add
add
push
and
add
add
push
or
cmp
(bad)
inc
add
dec
add
push
adc
and
add
dec
or
cmp
adc
and
add
dec
or
cmp
(bad)
call
or
or
(bad)
jmp
add
push
add
add
add
sub
and
add
add
add
add
add
add
xor
add
add
add
add
and
add
xor
add
add
and
add
xor
add
add
add
add
add
or
and
add
xor
add
add
add
add
add
or
and
pop
add
or
and
add
xor
add
or
add
add
adc
add
add
add
adc
add
add
loop
add
loope
add
pop
add
push
jb
bound
jo
adc
add
sub
push
sub
add
push
push
inc
sub
xor
add
add
add
add
adc
or
add
add
xor
add
add
push
add
adc
sub
push
fiadd
fiadd
jb
bound
jo
adc
add
sbb
add
add
lock
jo
adc
add
add
inc
add
push
sub
add
push
or
or
add
pop
add
push
fiadd
push
sub
sub
sbb
add
add
add
or
add
add
add
xor
or
xor
add
add
add
add
adc
add
add
sub
add
push
sub
add
sub
add
adc
add
adc
add
add
add
jle
add
add
dec
add
add
sub
add
sub
add
sbb
or
jge
add
lods
add
adc
add
add
loope
add
pop
add
push
jb
bound
jo
adc
add
sub
push
or
add
add
sub
add
push
sub
sub
add
add
mov
add
sub
jle
add
add
sub
add
push
sub
sub
or
add
dec
add
add
sub
add
or
add
dec
add
add
sbb
add
sub
add
sub
and
add
sub
sub
or
push
jle
add
add
jb
arpl
jo
adc
add
sub
rol
add
or
add
add
adc
add
pop
sbb
bound
retf
add
add
sub
add
push
sub
pop
jae
add
or
add
sub
add
and
push
or
add
add
sub
sub
add
or
add
test
add
add
or
add
adc
add
sbb
add
add
add
add
addr16
add
add
mov
dec
add
add
adc
add
test
add
ins
add
add
push
mov
add
mov
mov
add
mov
sub
add
mov
add
mov
mov
add
adc
or
hlt
add
add
add
fwait
add
push
(bad)
add
fiadd
sub
add
add
add
add
add
add
add
add
add
add
jns
add
xor
add
add
lods
add
adc
add
add
add
add
add
adc
sub
add
or
add
add
add
lock
push
pop
and
add
add
add
inc
pop
or
add
add
xchg
add
mov
add
add
add
add
add
add
sub
add
pop
push
pop
sub
add
sub
fiadd
es
sub
fiadd
or
add
add
adc
add
add
add
add
add
add
push
add
add
add
sub
xor
add
add
scas
add
adc
xor
inc
or
add
xor
add
pop
add
add
add
imul
add
or
add
mov
add
add
add
add
add
add
and
add
add
push
or
sub
or
and
add
add
push
or
sub
sub
push
sub
sub
and
add
add
push
or
sub
add
add
add
add
pop
es
adc
mov
add
or
or
add
dec
or
cmp
(bad)
call
adc
and
add
add
push
or
cmp
(bad)
dec
mov
inc
test
add
and
add
add
push
or
cmp
(bad)
call
add
and
add
add
push
or
cmp
(bad)
(bad)
dec
pop
lea
add
pop
adc
push
pop
cmp
mov
add
or
add
push
or
cmp
(bad)
(bad)
inc
jle
add
add
push
call
fiadd
add
pop
call
mov
or
add
add
dec
or
cmp
(bad)
(bad)
jmp
and
or
add
dec
or
cmp
(bad)
(bad)
call
push
pop
pop
adc
and
push
or
cmp
(bad)
(bad)
call
push
adc
(bad)
(bad)
inc
sub
data16
outs
add
push
add
add
push
add
add
push
sub
add
sbb
add
mov
add
scas
add
adc
add
or
jle
add
add
xchg
and
jo
adc
add
jle
add
add
sub
sub
or
add
or
push
sub
push
sub
add
or
add
push
adc
inc
add
add
add
push
das
add
adc
add
sub
add
adc
add
add
push
sub
bound
add
outs
pop
add
or
push
sub
add
sub
push
(bad)
push
or
add
outs
or
add
fadd
sub
add
adc
add
add
add
add
add
add
adc
add
adc
add
add
add
and
and
add
add
push
sub
pop
sub
sub
xor
add
add
sub
inc
add
add
add
add
add
and
add
or
add
add
add
add
dec
add
sub
jb
arpl
jo
adc
add
or
add
add
dec
add
sub
sub
add
or
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
jb
add
jo
adc
add
sub
add
or
add
add
dec
add
sub
add
sub
add
or
and
add
add
push
add
cmp
(bad)
jle
add
add
jb
add
jo
adc
add
adc
(bad)
push
adc
add
outs
add
add
push
sub
add
push
es
sub
xor
add
add
sub
or
add
add
add
add
out
add
add
add
add
add
add
add
add
add
test
add
out
add
add
add
add
add
add
add
xchg
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
adc
add
dec
add
sub
jo
adc
add
or
add
add
dec
add
sub
add
jle
add
or
add
push
adc
add
outs
add
add
push
sub
add
push
and
add
add
push
add
cmp
(bad)
dec
jle
add
or
push
add
or
and
add
add
push
add
cmp
or
or
add
dec
add
cmp
ds
adc
add
or
xchg
add
or
pop
add
push
and
add
add
push
add
cmp
jle
add
or
push
add
or
lea
add
and
add
add
push
add
cmp
(bad)
(bad)
dec
jle
add
or
push
add
or
and
add
add
push
add
cmp
(bad)
(bad)
jmp
adc
add
or
sldt
add
push
add
cmp
or
or
add
dec
add
cmp
or
sub
push
sub
sub
and
add
add
push
add
cmp
mov
sub
add
push
pop
mov
add
add
xchg
add
or
pop
add
push
and
add
add
push
add
cmp
(bad)
inc
jle
add
or
push
add
or
and
push
add
cmp
(bad)
dec
jle
add
or
sldt
or
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
jle
add
or
sub
add
or
adc
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
pop
add
add
push
add
cmp
std
(bad)
inc
jle
add
or
sldt
or
push
(bad)
jmp
or
add
dec
add
cmp
std
(bad)
push
add
adc
add
pop
mov
add
add
xchg
add
or
pop
add
push
and
add
dec
add
cmp
inc
add
add
jle
add
or
sub
add
or
adc
add
dec
add
cmp
paddd
jmp
add
push
add
cmp
inc
add
add
jle
add
or
add
push
adc
add
outs
add
add
pop
sub
add
push
sub
xor
add
add
add
add
adc
add
add
push
add
add
and
jo
adc
add
sub
add
or
add
add
sub
jo
adc
add
push
sub
pop
add
push
jle
add
add
sub
add
push
sub
mov
pop
outs
dec
add
or
add
xchg
add
add
add
dec
add
or
inc
add
add
int
add
outs
inc
add
push
jle
add
add
sub
and
jo
adc
add
sub
add
or
add
add
sub
add
push
sub
add
push
add
add
and
jo
adc
add
push
push
sub
add
push
sub
jle
add
add
jp
add
adc
add
push
sub
pop
add
push
sub
jo
adc
add
push
sub
pop
add
push
push
or
sub
add
cmp
(bad)
(bad)
fimul
adc
push
or
add
outs
or
add
fdiv
data16
adc
add
sub
add
jle
add
or
or
add
add
add
add
push
add
add
sbb
pop
add
add
add
lea
add
or
add
add
adc
add
push
add
add
ret
add
push
sub
add
push
sub
add
push
or
data16
adc
add
or
sbb
push
jle
add
add
jb
add
adc
add
sub
or
add
adc
add
jae
add
or
add
js
add
sub
test
cmp
add
add
add
add
push
sub
add
add
add
add
outs
sahf
add
or
mov
pop
add
add
add
hlt
add
add
add
add
sub
add
push
sub
add
jb
add
adc
add
sub
adc
push
add
adc
add
outs
sbb
add
sub
jle
add
add
jle
add
add
jnp
add
add
push
add
adc
add
sub
push
sub
add
push
sub
pop
sbb
inc
jle
add
add
add
imul
sub
add
push
sub
push
sub
jle
add
add
jb
add
adc
add
jle
add
add
add
imul
sub
add
push
sub
push
sub
add
or
dec
pop
sbb
inc
jle
add
add
add
mov
jo
adc
add
sub
push
sub
jle
add
add
jb
add
adc
add
jle
add
add
add
mov
jo
adc
add
sub
push
sub
add
or
push
outs
sbb
add
cmp
(bad)
(bad)
(bad)
ficom
adc
sub
jle
add
add
push
sub
pop
sbb
pop
add
add
jb
add
adc
add
jae
add
or
add
js
add
sub
test
cmp
add
add
add
add
pop
sub
add
add
add
add
add
and
mov
add
adc
add
add
add
sub
add
push
sub
add
jb
add
adc
add
sub
adc
jo
adc
add
outs
sbb
add
sub
jle
add
add
jle
add
add
jnp
add
add
jo
adc
add
sub
push
sub
add
push
sub
adc
jo
adc
add
outs
sbb
add
sub
jle
add
add
jb
add
adc
add
jle
add
add
add
jo
adc
add
sub
push
sub
add
or
pop
outs
sbb
add
cmp
(bad)
(bad)
(bad)
ficom
adc
sub
jle
add
add
pop
sub
fiadd
fiadd
jb
add
adc
add
push
sub
pop
add
push
push
sub
add
add
add
add
jb
add
xor
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
mov
add
adc
adc
jle
add
add
cmp
jo
adc
add
outs
mov
add
adc
jle
add
add
cmp
jo
adc
add
outs
mov
add
adc
jle
add
add
cmp
jo
adc
add
outs
mov
add
adc
jle
add
add
cmp
jo
adc
add
outs
mov
add
adc
or
push
add
push
jb
push
add
push
jae
add
or
jle
add
add
js
add
sub
test
cmp
jns
add
pop
sub
add
add
add
cmp
jnp
add
jle
add
add
inc
add
push
jle
add
add
mov
jnp
add
jle
add
add
inc
add
add
push
outs
mov
add
or
add
add
sbb
add
sub
push
jle
add
add
mov
jnp
add
jle
add
add
inc
add
add
push
outs
mov
add
or
add
add
sbb
add
sub
push
jle
add
add
mov
jnp
add
jle
add
add
inc
add
add
push
push
push
outs
scas
add
or
add
or
pop
outs
sbb
add
cmp
(bad)
(bad)
(bad)
ficom
adc
sub
jle
add
add
pop
sub
fiadd
fiadd
adc
jb
push
add
push
jb
push
add
push
jae
add
or
add
mov
add
js
add
add
xor
test
cmp
jns
add
or
cmp
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
jnp
add
add
add
inc
add
add
push
jb
push
add
push
outs
xchg
add
or
jle
add
add
jnp
add
add
add
inc
add
add
push
outs
sahf
add
or
or
xor
add
add
jnp
add
add
add
inc
add
add
push
pop
lea
add
or
or
pop
sub
mov
add
or
outs
sbb
add
cmp
(bad)
(bad)
ficom
adc
sub
jle
add
add
or
fwait
add
push
fmul
sub
push
jle
add
add
lea
add
adc
adc
push
or
call
xor
jo
adc
add
mov
sbb
jb
xor
jo
adc
add
mov
sbb
mov
add
or
mov
add
or
add
fiadd
push
sub
add
add
add
xchg
add
add
add
add
add
adc
add
bound
add
adc
add
jae
add
add
add
or
add
add
add
add
add
adc
add
jbe
add
popa
add
add
add
add
add
add
xor
and
add
add
add
jle
add
add
loope
add
adc
add
add
sub
pop
add
push
add
sub
add
sub
xor
je
add
mov
add
jle
add
add
and
jo
adc
add
add
sub
pop
add
push
jae
add
or
jle
add
add
sub
add
push
sub
jle
add
add
sub
pop
sub
jle
add
add
sub
add
push
or
adc
mov
sub
add
push
sub
add
fiadd
jb
imul
add
push
sub
pop
add
push
push
sub
adc
add
add
add
dec
add
or
xor
add
add
jo
adc
add
or
add
add
int
add
outs
inc
add
push
jle
add
add
sub
mov
adc
add
sub
add
or
sub
jle
add
add
sub
add
push
and
jle
add
add
add
jo
adc
add
sub
add
sub
add
add
jo
adc
add
sub
add
sub
add
add
jo
adc
add
sub
add
sub
rcl
add
adc
add
or
sbb
adc
jo
adc
add
or
or
adc
jo
adc
add
or
sub
push
add
int
add
outs
inc
add
push
jle
add
add
sub
lea
add
sub
add
or
sub
jle
add
add
sub
add
push
outs
xchg
add
or
push
jb
imul
add
outs
fwait
add
or
adc
pop
outs
mov
add
pop
pop
or
push
or
or
scas
add
or
ficomp
adc
aam
add
imul
jo
adc
add
adc
inc
add
push
sub
add
fiadd
push
sub
add
add
add
add
or
add
push
add
add
add
add
add
add
xor
add
dec
dec
add
add
add
add
add
add
mov
add
rol
add
dec
add
add
add
arpl
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
push
add
stos
push
or
add
add
sub
add
push
outs
mov
or
add
dec
push
add
mov
sub
add
or
and
add
add
push
push
add
jns
(bad)
inc
adc
add
add
dec
push
add
push
add
and
add
add
push
push
add
push
(bad)
(bad)
call
add
add
add
add
push
push
add
inc
(bad)
(bad)
dec
sub
shl
add
push
push
add
sub
(bad)
inc
or
add
or
add
dec
push
add
adc
(bad)
call
adc
add
push
push
add
add
(bad)
dec
outs
in
add
or
sub
and
add
add
push
push
add
out
(bad)
push
push
jo
adc
add
or
pop
add
sub
add
and
add
add
push
push
add
ret
(bad)
(bad)
jmp
ins
and
add
add
push
push
add
mov
(bad)
dec
outs
call
jbe
add
or
sub
sub
and
add
dec
push
add
xchg
(bad)
(bad)
dec
cmp
(bad)
(bad)
jmp
add
add
dec
push
add
jge
(bad)
push
add
or
and
add
add
push
push
add
imul
movs
add
or
add
push
push
add
push
(bad)
(bad)
call
add
aas
cmc
(bad)
(bad)
inc
sub
adc
push
add
add
adc
inc
dec
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
fild
add
xchg
add
add
add
retf
add
add
add
push
add
add
push
push
add
scas
jae
add
or
and
add
add
push
push
add
sahf
add
jecxz
add
or
or
push
push
add
mov
push
jo
adc
add
or
pop
add
sub
add
and
add
add
push
push
add
imul
add
add
sub
push
sub
sub
and
add
add
push
push
add
dec
(bad)
(bad)
call
adc
add
push
push
add
cmp
sub
mov
add
and
add
dec
push
add
and
(bad)
dec
cmp
add
add
dec
push
add
adc
(bad)
dec
outs
in
add
or
sub
add
add
or
add
dec
push
add
icebp
(bad)
(bad)
inc
adc
add
add
dec
push
add
loopne
(bad)
dec
outs
call
ja
add
or
add
push
push
add
(bad)
(bad)
(bad)
call
add
add
add
add
push
push
add
mov
(bad)
inc
or
add
add
sub
add
push
outs
mov
push
add
add
push
push
add
xchg
(bad)
(bad)
inc
or
add
or
add
dec
push
add
jnp
(bad)
call
add
and
add
add
push
push
add
addr16
(bad)
call
add
xor
add
xor
inc
add
add
cmp
inc
or
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
and
add
jbe
add
out
add
add
add
add
and
add
dec
push
add
mov
outs
call
pusha
add
or
or
add
dec
push
add
mov
add
add
outs
mov
xchg
add
add
add
add
dec
push
add
adc
or
add
push
push
add
outs
(bad)
(bad)
jmp
jmp
add
push
push
add
pop
(bad)
(bad)
inc
sub
and
add
add
push
push
add
dec
(bad)
(bad)
dec
adc
or
sub
push
sub
sub
and
add
add
push
push
add
xor
(bad)
inc
or
add
push
push
add
and
(bad)
call
add
add
and
add
add
push
push
add
or
(bad)
(bad)
fimul
add
add
dec
push
add
cld
(bad)
(bad)
call
add
pop
adc
pop
add
add
push
push
add
call
in
add
or
and
add
add
push
push
add
aam
(bad)
call
adc
add
add
dec
push
add
ret
(bad)
(bad)
call
add
xor
add
add
add
aam
add
push
imul
sub
add
push
add
inc
add
push
or
jae
add
or
jle
add
add
sub
jle
add
add
sub
pop
sub
jns
add
pop
sub
add
add
add
add
adc
adc
push
jle
add
or
lea
add
mov
jle
add
add
jp
add
jb
bound
jo
adc
add
adc
aas
add
add
adc
add
add
add
call
adc
add
adc
call
push
fisub
adc
outs
sbb
add
sub
pop
sub
jle
add
add
pop
sub
jle
add
or
adc
sub
add
add
add
add
cmp
test
add
sbb
push
add
add
adc
add
add
push
imul
sub
add
push
add
inc
add
push
or
jae
add
or
jle
add
add
sub
jle
add
add
sub
pop
sub
jns
add
pop
sub
add
add
add
add
adc
adc
push
jle
add
or
jle
add
add
jp
add
jb
bound
jo
adc
add
adc
aas
add
add
adc
push
call
outs
sbb
add
sub
pop
sub
jle
add
add
pop
sub
jle
add
or
adc
sub
adc
add
add
add
add
add
add
sbb
add
retf
add
or
add
add
mov
add
adc
add
add
sub
pop
add
push
jle
add
add
sub
pop
adc
dec
adc
or
jle
add
add
mov
add
sub
add
push
add
cmp
add
sub
jle
add
add
in
imul
sub
add
push
add
sub
pop
add
push
jle
add
add
sub
or
push
pop
pop
adc
adc
adc
push
sub
add
sub
sub
add
push
add
sub
pop
add
push
fisub
or
add
jne
add
adc
add
or
inc
add
push
sub
add
push
adc
add
sub
add
add
add
add
add
sbb
mov
add
sbb
push
add
add
adc
add
add
sub
add
push
sub
jb
ins
add
adc
add
sub
add
push
sub
add
or
jle
add
add
add
stos
add
push
jle
add
add
add
stos
add
push
jle
add
add
add
push
jle
add
add
sub
add
or
add
add
sub
or
nop
add
add
and
jo
adc
add
add
or
sahf
add
add
push
push
or
add
add
adc
add
add
add
add
or
xor
mov
add
adc
add
add
sub
add
push
sub
jb
ins
add
adc
add
sub
add
push
sub
outs
add
adc
add
add
pop
add
sub
add
jle
add
add
cmps
outs
add
adc
add
add
sub
pop
add
push
add
sub
jle
add
add
or
jo
adc
add
push
mov
inc
add
push
sub
add
adc
(bad)
adc
adc
(bad)
adc
adc
jle
add
add
mov
add
sub
add
add
add
adc
adc
jle
add
add
mov
add
sub
add
add
add
add
or
add
add
fild
add
sub
add
adc
int
add
test
jo
adc
add
adc
sub
pop
add
push
push
adc
or
push
add
add
add
add
add
adc
push
add
add
add
adc
adc
adc
sub
jle
add
add
fld
jo
adc
add
jle
add
add
mov
inc
add
add
inc
add
push
sub
add
pop
adc
fimul
pop
jle
add
add
and
jo
adc
add
add
pop
sub
pop
add
push
fiadd
fisubr
jle
add
add
pusha
jo
jo
adc
add
jle
add
add
mov
inc
add
add
inc
add
push
sub
add
fcom
sub
or
inc
xor
add
add
add
add
add
add
add
add
and
add
or
add
add
add
add
add
add
sub
add
add
add
sbb
or
cdq
add
add
leave
add
add
sub
add
push
sub
jb
ins
add
adc
add
sub
add
push
sub
outs
add
adc
add
add
pop
add
sub
add
add
sub
jle
add
add
or
jo
adc
add
push
mov
inc
add
push
sub
add
adc
(bad)
adc
adc
(bad)
adc
adc
jle
add
add
mov
add
sub
add
add
add
adc
adc
jle
add
add
mov
add
sub
add
add
add
add
or
add
add
fild
add
jb
jo
jo
adc
add
jle
add
or
add
or
push
add
push
adc
int
add
test
jo
adc
add
adc
sub
pop
add
push
push
adc
or
push
add
movd
add
add
add
adc
push
adc
adc
adc
push
adc
adc
adc
sub
jle
add
add
fld
jo
adc
add
jle
add
add
mov
inc
add
add
inc
add
push
sub
add
pop
adc
fimul
pop
jle
add
add
(bad)
jo
jo
adc
add
add
pop
sub
add
push
sub
add
fiadd
fisubr
jle
add
add
pusha
jo
jo
adc
add
jle
add
add
mov
inc
add
add
inc
add
push
sub
add
fcom
sub
or
add
add
add
add
add
push
add
add
add
add
add
and
add
or
add
add
add
add
add
imul
add
add
add
add
add
xor
rol
add
mov
leave
add
add
sub
add
push
sub
jb
ins
add
adc
add
sub
add
adc
(bad)
adc
adc
sub
outs
add
adc
add
add
pop
add
sub
add
jle
add
add
cmps
outs
add
adc
add
add
sub
pop
add
push
add
sub
jle
add
add
or
jo
adc
add
push
mov
inc
add
push
sub
add
adc
(bad)
adc
adc
(bad)
adc
adc
jle
add
add
mov
add
sub
add
add
add
adc
adc
jle
add
add
mov
add
sub
add
add
add
add
or
add
add
fild
add
sub
add
adc
int
add
test
jo
adc
add
adc
sub
pop
add
push
push
adc
or
push
add
add
add
add
add
adc
push
add
add
add
adc
adc
adc
sub
pop
adc
sub
push
add
dec
adc
jnp
add
add
sub
adc
jnp
add
add
or
mov
add
es
add
add
xor
jo
adc
add
adc
mov
add
sub
add
sub
add
adc
jae
add
or
or
push
fisub
adc
jle
add
add
and
jo
adc
add
add
or
sahf
add
add
push
fiadd
fisub
aam
add
mov
adc
add
sub
jbe
add
sub
add
sub
add
fcom
or
adc
adc
adc
sub
inc
xor
add
add
add
add
add
add
jle
add
and
add
or
add
add
add
add
add
mov
add
add
add
add
xor
je
add
mov
pop
dec
add
add
add
add
add
add
jns
add
or
add
imul
add
push
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
je
add
test
add
sub
add
add
adc
add
dec
add
sub
add
and
add
add
push
add
sub
add
push
outs
fild
add
pop
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
inc
outs
out
add
or
outs
fiadd
add
and
add
add
push
add
cmp
(bad)
inc
outs
out
add
or
outs
fiadd
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
out
add
or
outs
fadd
add
and
add
add
push
add
cmp
outs
icebp
add
or
add
or
add
push
add
cmp
(bad)
(bad)
inc
outs
out
add
or
outs
fld
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
icebp
add
or
add
or
fiadd
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
lock
or
add
or
or
add
dec
add
cmp
add
or
and
add
dec
add
cmp
outs
lock
or
add
or
add
dec
add
cmp
(bad)
push
add
or
and
add
add
push
add
cmp
(bad)
dec
sub
and
add
add
push
add
cmp
(bad)
inc
or
add
or
and
push
add
cmp
(bad)
(bad)
jmp
inc
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
out
add
or
outs
fld
add
and
add
add
push
add
cmp
(bad)
(bad)
dec
sub
and
(bad)
jmp
push
add
add
push
add
cmp
std
(bad)
inc
outs
out
add
cmp
(bad)
jmp
or
add
dec
add
cmp
std
(bad)
inc
or
add
or
and
add
add
push
add
cmp
std
(bad)
inc
outs
lock
or
add
or
and
(bad)
jmp
or
add
dec
add
cmp
outs
icebp
add
or
add
or
add
mov
sub
add
push
sub
xor
add
add
add
add
adc
add
add
mov
inc
sub
add
xor
add
add
adc
sbb
inc
add
add
add
add
add
push
add
add
add
add
add
add
dec
add
sub
sub
add
sub
and
add
add
push
add
sub
sub
add
adc
sub
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
add
dec
add
sub
jo
adc
add
jb
jb
jo
adc
add
sub
adc
add
add
dec
add
cmp
(bad)
inc
sub
sub
xor
xor
add
mov
sub
add
or
add
add
jle
add
or
sub
jle
add
add
add
imul
add
or
sub
sub
add
xor
dec
add
add
add
adc
jle
add
add
mov
and
add
add
fiadd
add
pop
jb
jo
adc
add
sub
add
sub
add
push
sub
add
adc
add
sub
add
or
jb
jb
jo
adc
add
sub
add
or
add
add
xor
adc
add
adc
add
add
add
push
jle
add
add
sub
add
add
xor
adc
add
adc
add
add
test
add
jle
add
add
sub
add
add
xor
adc
add
adc
add
add
add
add
add
sub
add
add
xor
mov
add
adc
sbb
inc
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
jle
add
add
push
add
add
aaa
add
adc
add
sub
add
or
add
add
dec
add
sub
add
sub
sub
and
add
add
push
add
sub
add
sub
and
add
add
push
add
sub
jo
adc
add
jle
add
add
pop
add
sub
add
and
add
add
push
add
cmp
(bad)
push
jb
jo
adc
add
jle
add
add
pop
add
sub
add
pop
sub
add
xor
cmp
add
add
inc
add
add
push
add
add
pop
jae
jo
adc
add
sub
add
or
add
add
sub
add
push
sub
pop
sub
jb
jae
jo
adc
add
sub
add
xor
add
add
adc
popa
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
retf
add
add
add
adc
add
add
add
add
add
sbb
add
jmp
add
inc
add
add
add
add
add
add
add
add
add
adc
push
add
sub
jo
adc
add
sub
add
and
add
add
push
add
cmp
(bad)
jmp
xchg
add
cmp
add
add
adc
add
dec
add
cmp
(bad)
(bad)
jle
add
add
push
add
add
pop
jae
jo
adc
add
jb
jae
jo
adc
add
push
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
jg
add
or
adc
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
push
add
add
(bad)
jae
jo
adc
add
jle
add
add
jle
add
add
mov
adc
add
sub
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
push
add
add
(bad)
jo
adc
add
pop
push
sub
add
and
add
dec
add
cmp
in
jae
jo
adc
add
pop
sub
pop
add
push
and
add
add
push
add
cmp
inc
add
add
push
add
add
aaa
add
adc
add
jle
add
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
push
add
add
or
sub
add
push
jle
add
add
jle
add
add
sub
sub
add
push
sub
sub
add
push
and
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
push
add
add
inc
je
jo
adc
add
jle
add
add
popa
je
jo
adc
add
jle
add
add
jg
add
sub
sub
sub
add
push
and
push
add
cmp
std
(bad)
jmp
and
add
add
push
add
cmp
inc
add
add
push
add
add
ja
add
adc
add
pop
push
sub
add
and
add
add
push
add
cmp
inc
add
add
push
add
add
mov
sub
add
push
jle
add
add
addr16
add
add
add
add
add
push
sub
add
push
and
add
add
push
add
cmp
(bad)
push
sbb
add
push
sub
add
or
add
add
dec
add
cmp
std
(bad)
(bad)
jle
add
add
push
add
add
mov
adc
add
jle
add
add
popa
je
jo
adc
add
jle
add
add
jg
add
sub
mov
add
adc
add
sub
sub
add
push
and
add
add
push
add
cmp
cld
(bad)
call
es
add
or
add
add
rol
add
jb
and
jo
adc
add
sub
and
add
add
push
add
cmp
je
jo
adc
add
sub
add
and
add
add
push
add
cmp
inc
add
add
push
add
add
repz
jo
adc
add
jle
add
add
jle
add
add
or
jo
adc
add
sub
sub
add
push
es
sub
push
sub
cmp
(bad)
jmp
push
add
add
push
add
cmp
cld
(bad)
(bad)
jle
add
add
push
add
add
adc
adc
add
jle
add
add
sub
add
push
and
add
add
push
add
cmp
cld
(bad)
(bad)
jle
add
add
push
add
add
sub
jo
adc
add
jle
add
add
popa
je
jo
adc
add
jle
add
add
jg
add
sub
mov
add
adc
add
sub
sub
add
push
and
add
add
push
add
cmp
add
add
push
add
add
inc
jne
jo
adc
add
pop
push
sub
add
push
and
push
add
cmp
arpl
jo
adc
add
sub
add
sub
xor
jp
add
mov
mov
add
or
add
add
sub
add
push
sub
add
(bad)
jne
jo
adc
add
push
sub
pop
add
push
jle
add
add
sub
add
push
or
sub
add
adc
add
sub
jb
jbe
jo
adc
add
push
sub
pop
add
push
pop
or
or
mov
sub
add
push
sub
add
fiadd
push
sub
sub
add
adc
add
add
add
add
or
xor
add
add
adc
xor
or
add
add
add
add
add
add
add
add
add
add
add
add
and
add
retf
add
add
add
and
add
add
push
add
sub
push
push
pop
sbb
scas
add
or
and
push
add
sub
or
and
add
add
push
add
sub
sub
add
push
jle
add
add
pop
add
sub
add
and
add
add
push
add
cmp
(bad)
inc
sub
dec
and
add
add
push
add
cmp
(bad)
inc
push
xor
add
add
dec
add
cmp
(bad)
(bad)
jle
add
add
push
add
add
or
sub
add
push
sub
add
or
or
add
dec
add
cmp
jb
imul
add
sbb
add
or
and
add
add
push
add
cmp
aad
add
adc
add
push
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
(bad)
inc
sbb
or
push
pop
and
popf
or
pop
daa
popf
or
add
or
pop
sub
push
sub
sub
and
add
dec
add
cmp
div
jo
adc
add
push
sub
pop
add
push
push
sub
adc
or
adc
add
rol
adc
add
add
sub
jo
adc
add
add
inc
add
push
sub
add
jle
add
add
sub
jmp
and
add
add
add
adc
sub
aam
add
xchg
ja
jo
adc
add
adc
sub
add
mov
add
sub
add
sub
add
jle
add
add
div
jo
adc
add
jle
add
add
mov
inc
add
add
inc
add
push
sub
add
add
push
add
add
add
add
add
mov
add
sub
add
add
pop
or
add
pop
adc
sub
jle
add
add
xor
jo
adc
add
adc
sub
add
mov
add
sub
add
sub
add
jle
add
add
mov
adc
add
jle
add
add
mov
inc
add
add
inc
add
push
sub
add
pop
sub
sub
add
adc
add
add
add
adc
and
or
add
add
add
add
add
add
lea
add
jns
add
sbb
add
add
and
push
add
sub
jle
add
or
and
add
add
push
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
scas
add
push
or
add
add
dec
add
sub
jo
adc
add
jle
add
add
mov
inc
add
add
xchg
add
or
pop
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
or
and
add
add
push
add
cmp
(bad)
push
jns
jo
adc
add
adc
sub
add
mov
add
sub
pop
add
push
push
sub
add
xor
add
add
adc
and
inc
pop
add
add
add
add
add
or
add
je
add
cmp
add
pop
add
add
add
add
and
add
add
push
add
sub
push
sub
add
dec
add
sub
sub
and
add
add
push
add
sub
add
push
add
sub
add
add
dec
add
sub
or
add
add
dec
add
sub
push
or
sub
push
sub
sub
and
add
dec
add
cmp
(bad)
jmp
pushf
add
push
or
sub
adc
add
mov
add
adc
and
inc
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
sub
and
add
add
push
add
sub
push
or
add
add
dec
add
sub
push
or
add
add
dec
add
sub
add
add
push
add
sub
add
add
dec
add
sub
sub
push
sub
sub
and
push
add
cmp
(bad)
jmp
xchg
add
push
or
sub
sbb
add
mov
add
ret
add
adc
add
add
pop
jns
jo
adc
add
push
lea
add
add
mov
add
or
jae
add
or
jle
add
add
sub
jle
add
add
sub
push
sub
jns
add
push
sub
add
add
add
jnp
add
jb
jns
jo
adc
add
sub
push
jne
add
add
add
leave
add
add
add
sub
add
sub
xchg
add
or
add
add
outs
xchg
add
or
push
adc
outs
sbb
add
sub
push
sub
jle
add
add
push
sub
push
sub
add
add
add
add
cmp
fs
add
add
add
adc
add
adc
add
add
add
jb
jns
jo
adc
add
sub
adc
add
and
add
add
add
jb
jns
jo
adc
add
sub
adc
jns
jo
adc
add
sub
pop
sub
adc
add
adc
add
add
add
jb
jns
jo
adc
add
sub
adc
add
adc
add
add
add
jb
jns
jo
adc
add
sub
adc
add
jns
add
push
add
adc
sbb
inc
add
add
add
add
add
add
or
add
sbb
add
add
add
add
dec
add
sub
push
sub
add
dec
add
sub
sub
sub
push
sub
sub
and
add
add
push
add
sub
push
or
add
add
dec
add
sub
add
add
dec
add
sub
push
or
sub
add
adc
add
icebp
add
add
add
adc
xor
or
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
push
add
add
and
add
add
push
add
sub
push
outs
or
add
and
push
and
add
add
push
add
sub
xor
and
add
dec
add
sub
add
add
push
add
sub
and
add
add
push
add
cmp
(bad)
jmp
or
add
outs
or
add
or
add
add
dec
add
cmp
(bad)
dec
pop
pop
or
add
push
add
cmp
(bad)
(bad)
fidivr
and
add
add
push
add
cmp
(bad)
jmp
xchg
and
add
add
push
add
cmp
(bad)
(bad)
call
or
sub
push
sub
cmp
(bad)
jmp
push
add
add
push
add
cmp
sub
sub
add
sbb
add
xor
add
push
add
adc
push
add
push
jb
jp
jo
adc
add
jae
add
or
adc
add
outs
push
add
or
inc
or
add
add
sub
adc
add
add
add
sub
add
adc
add
test
add
add
adc
xor
or
add
add
add
add
add
add
movs
add
add
add
mov
add
add
add
xchg
add
add
add
add
or
add
dec
add
sub
push
outs
or
add
outs
or
add
and
push
and
add
add
push
add
sub
xor
and
add
dec
add
sub
add
add
push
add
sub
and
add
add
push
add
cmp
(bad)
jmp
or
add
outs
or
add
or
add
add
dec
add
cmp
(bad)
dec
pop
pop
or
add
push
add
cmp
(bad)
(bad)
fidivr
and
add
add
push
add
cmp
(bad)
(bad)
jmp
xchg
and
add
add
push
add
cmp
(bad)
(bad)
call
or
sub
push
sub
cmp
(bad)
jmp
push
add
add
push
add
cmp
(bad)
(bad)
call
sub
sub
add
xor
add
add
push
add
adc
sbb
inc
add
add
add
add
add
add
or
add
sbb
add
add
add
add
dec
add
sub
push
sub
add
dec
add
sub
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
push
or
add
add
dec
add
sub
add
add
dec
add
sub
push
or
sub
add
adc
add
lods
add
add
add
adc
sbb
or
add
add
add
add
add
add
or
add
add
add
add
dec
add
sub
jle
add
add
mov
jo
adc
add
sub
add
sub
add
dec
add
sub
add
or
jo
adc
add
sub
add
sub
add
dec
add
sub
add
mov
jo
adc
add
sub
add
sub
push
sub
sub
and
add
add
push
add
cmp
(bad)
(bad)
jle
add
add
add
adc
add
sub
add
sub
sub
xor
add
add
adc
add
add
cmp
adc
add
sub
add
sub
add
adc
add
inc
add
add
add
adc
add
add
or
jo
adc
add
sub
add
sub
add
pop
jge
jo
adc
add
sub
add
sub
add
mov
add
adc
add
sub
add
sub
sub
sbb
add
xor
add
push
add
adc
push
add
push
jb
jle
jo
adc
add
jae
add
or
adc
add
outs
push
add
or
inc
or
add
add
sub
adc
add
add
add
sub
add
adc
add
adc
add
push
add
adc
popf
add
push
or
sub
add
or
sub
add
adc
add
adc
add
adc
add
add
ins
jle
jo
adc
add
sub
add
sub
add
sbb
add
add
add
adc
mov
jle
add
add
movs
jle
jo
adc
add
push
outs
dec
add
or
inc
add
push
sub
add
push
outs
dec
add
or
sub
add
or
add
add
int
add
outs
inc
add
push
jb
jle
jo
adc
add
sub
dec
add
push
sub
pop
or
sbb
add
dec
add
or
add
push
or
add
outs
or
add
fcom
sub
sub
add
adc
add
add
add
jo
push
add
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
sub
add
sub
add
adc
add
sub
add
adc
add
add
push
jg
jo
adc
add
sub
add
sub
add
test
jo
adc
add
sub
add
sub
sub
add
adc
add
dec
add
add
inc
add
add
adc
add
adc
add
jb
jg
jo
adc
add
sub
add
or
add
add
sub
add
push
sub
jle
add
add
aam
add
adc
add
jb
add
jo
adc
add
sub
add
or
sub
add
sbb
add
lea
add
mov
add
add
sub
add
push
sub
and
add
push
add
pop
add
sub
add
jle
add
add
sub
push
adc
adc
adc
add
add
sub
add
fiadd
fiadd
adc
adc
xor
jle
add
add
sub
or
push
push
adc
sub
adc
adc
call
push
adc
pop
pop
adc
adc
adc
mov
in
sub
add
add
add
add
add
add
add
xor
add
add
add
add
adc
add
add
sub
add
push
sub
sub
jle
add
add
sub
add
fiadd
fiadd
pop
sub
adc
add
add
add
add
add
xor
bound
add
enter
jle
add
add
fild
add
and
push
jb
add
sub
add
push
sub
jle
add
add
sub
add
or
outs
movs
add
or
outs
movs
add
or
add
or
aam
add
jle
add
adc
add
or
inc
add
push
sub
add
fiadd
push
sub
sub
add
adc
add
add
add
add
sbb
add
mov
add
adc
add
add
fild
add
and
push
jb
add
sub
add
push
sub
jle
add
add
sub
jae
add
or
adc
inc
adc
or
add
or
outs
xchg
add
or
add
or
jle
add
add
scas
add
sub
add
push
or
sub
pop
add
push
sub
or
outs
aaa
add
or
push
pop
pop
adc
adc
adc
jle
add
add
or
add
or
mov
pop
adc
aam
add
retf
jo
adc
add
adc
inc
add
push
sub
add
fiadd
sub
adc
add
add
add
add
add
xor
add
add
adc
jae
add
or
jle
add
add
jle
add
add
pushf
add
add
mov
push
sub
add
add
add
jle
add
add
sub
add
push
sub
adc
add
aaa
add
add
add
adc
add
add
ret
add
push
or
add
add
sub
add
push
sbb
sbb
adc
add
adc
add
sub
add
push
sub
add
push
sbb
add
inc
sub
sub
adc
add
add
add
sub
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
sub
add
or
and
add
add
push
add
sub
push
outs
lock
or
xor
and
add
add
push
add
sub
add
outs
pop
add
or
and
sub
sub
and
add
add
push
add
sub
add
outs
and
add
pop
inc
inc
sub
sub
add
sbb
add
test
add
int3
add
adc
add
add
add
add
push
push
lea
add
add
mov
add
or
jae
add
or
jle
add
add
sub
jle
add
add
sub
push
sub
jns
add
push
sub
add
add
add
jnp
add
jb
add
add
sub
push
movs
inc
add
sbb
add
add
les
add
sub
fisubr
adc
lds
add
adc
outs
sbb
add
sub
push
sub
jle
add
add
push
sub
push
sub
add
add
add
add
add
add
add
sbb
add
mov
add
int
add
jae
add
push
adc
lods
add
add
jbe
add
adc
add
sub
add
jle
add
add
movs
add
add
adc
add
sub
pop
add
push
push
or
add
add
add
add
sub
add
sub
add
adc
add
sub
add
push
sub
add
sub
add
push
sub
add
or
add
add
xor
add
adc
add
pop
outs
mov
inc
add
add
inc
add
push
sub
add
pop
outs
mov
or
add
pop
outs
rol
or
add
or
push
cmp
add
add
push
sub
add
or
or
add
adc
add
add
add
add
or
add
or
add
add
aam
add
nop
add
sub
add
push
adc
scas
add
add
inc
add
add
inc
add
push
sub
add
jle
add
add
inc
add
push
adc
add
sub
pop
add
push
adc
push
or
add
jae
add
or
add
or
add
sub
int
add
xor
add
push
adc
add
sub
pop
add
push
jle
add
add
and
jne
add
mov
add
add
xchg
add
push
adc
add
sub
pop
add
push
adc
sub
add
or
sbb
(bad)
(bad)
ficom
adc
(bad)
push
inc
add
sbb
add
or
pop
or
add
add
sub
inc
xor
add
add
add
add
add
add
add
add
add
add
add
xor
mov
add
add
add
jb
add
sub
add
push
or
add
arpl
add
or
add
int
add
mov
add
adc
add
jle
add
add
sub
push
add
add
int
add
xchg
and
jo
adc
add
jle
add
add
sub
push
add
add
pop
test
jo
adc
add
adc
add
daa
test
jo
adc
add
adc
add
inc
test
jo
adc
add
adc
jb
test
jo
adc
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
sub
add
rol
sub
add
or
add
add
add
jb
add
jo
adc
add
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
xor
add
add
adc
add
add
add
add
xlat
add
push
sub
add
push
jle
add
add
add
add
xor
add
add
add
add
adc
add
add
add
sbb
add
inc
add
add
jnp
add
add
sbb
add
outs
and
add
sub
jle
add
add
jle
add
sbb
add
adc
add
sub
add
or
push
jae
add
or
add
add
add
fiadd
add
add
add
add
add
add
sub
push
cmp
add
xor
add
add
add
add
adc
jnp
add
add
sbb
add
outs
and
add
sub
add
mov
jnp
add
add
add
xor
add
add
adc
sbb
or
add
add
add
add
add
add
inc
add
add
add
add
add
add
dec
add
sub
add
mov
add
add
mov
and
add
sub
and
add
add
push
add
sub
jo
adc
add
sub
add
and
add
add
push
add
sub
add
sub
sub
and
add
add
push
add
sub
jo
adc
add
sub
add
push
sub
add
sbb
push
add
add
add
adc
add
add
sub
add
push
or
add
add
in
test
jo
adc
add
push
sub
pop
add
push
jle
add
add
sub
add
push
cmp
add
add
sub
add
or
add
add
jb
das
add
adc
add
sub
push
add
add
add
sub
add
push
jle
add
add
sub
pop
add
push
add
add
add
jb
das
add
adc
add
sub
push
jge
add
add
int
add
jnp
add
adc
add
add
add
add
sub
pop
add
push
add
add
add
std
das
add
adc
add
outs
fwait
add
or
push
xor
jnp
add
add
sbb
pushf
add
or
add
sub
add
push
sub
sbb
add
jge
add
add
sub
add
int
add
iret
xchg
jo
adc
add
jle
add
add
add
push
add
push
sub
pop
add
push
fiadd
add
add
add
jnp
add
add
out
das
add
adc
add
jle
add
add
mov
add
add
add
add
add
add
leave
add
repz
or
xor
add
add
add
add
adc
add
add
into
add
add
jnp
add
add
aaa
inc
add
adc
add
sub
int
add
sub
inc
add
push
sub
sub
add
xor
add
add
add
add
adc
add
add
into
add
add
jnp
add
add
aaa
inc
add
adc
add
sub
int
add
mov
add
jb
xchg
jo
adc
add
sub
sub
add
adc
add
adc
add
add
add
jle
add
add
sub
sub
add
sub
add
adc
add
adc
add
add
add
jle
add
add
sub
add
push
sub
add
sbb
add
add
add
add
jle
add
add
sub
inc
add
push
ficom
or
add
add
sub
add
push
sub
add
fiadd
sub
add
adc
add
add
add
adc
adc
xor
add
add
adc
cmp
inc
or
add
add
add
iret
add
add
add
add
add
add
add
add
add
jo
add
stc
add
add
add
or
add
add
or
add
dec
add
sub
add
add
push
add
sub
add
add
add
add
add
push
add
sub
push
or
add
add
dec
add
sub
add
push
outs
jbe
add
and
add
add
push
add
cmp
(bad)
inc
outs
xchg
add
or
or
add
dec
add
cmp
(bad)
push
xchg
jo
adc
add
add
mov
pop
add
sub
add
pop
sub
push
sub
sub
and
add
dec
add
cmp
(bad)
(bad)
inc
cmp
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
mov
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
sub
or
add
dec
add
cmp
(bad)
(bad)
inc
outs
jb
add
sub
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
outs
test
add
and
add
add
push
add
cmp
and
adc
add
sub
add
and
add
add
push
add
cmp
sub
sub
xor
add
add
add
add
adc
add
add
jle
add
sbb
add
adc
add
add
mov
add
outs
add
add
push
sub
add
push
sub
jb
xchg
jo
adc
add
sub
add
sub
adc
add
jns
add
add
add
jb
xchg
jo
adc
add
cmp
add
int
add
mov
add
adc
add
jle
add
add
sub
jl
add
int
add
xchg
and
jo
adc
add
jle
add
add
sub
jge
add
int
add
jge
add
mov
adc
add
sub
jle
add
xchg
add
jo
adc
add
add
add
adc
add
pop
add
add
mov
test
add
xrelease
jo
adc
add
add
add
add
loope
add
pop
add
push
jb
mov
jo
adc
add
sub
push
or
add
add
jg
add
add
retf
add
and
test
add
add
sbb
push
add
add
add
add
adc
mov
jo
adc
add
sub
add
jb
mov
jo
adc
add
jae
add
push
or
add
add
sbb
mov
jo
adc
add
or
pop
outs
adc
add
pop
sub
add
jle
add
add
sbb
mov
jo
adc
add
or
pop
outs
adc
add
pop
sub
add
sub
add
push
adc
pop
add
push
sub
add
push
sub
add
push
sub
add
push
sub
adc
jb
mov
jo
adc
add
outs
adc
add
jle
add
add
int
add
lea
add
push
jle
add
add
sub
mov
adc
add
sub
add
sub
add
push
jle
add
add
int
add
lea
add
push
jle
add
add
sub
mov
adc
add
jb
mov
jo
adc
add
push
sub
add
push
es
add
push
sub
add
sub
jb
mov
jo
adc
add
sub
add
sub
add
push
es
add
push
sub
add
push
add
sub
add
push
add
inc
enter
jae
add
or
test
add
test
add
je
add
jge
add
add
aam
add
fisttp
add
push
jle
add
add
inc
add
add
inc
add
push
sub
add
push
sub
add
sub
jnp
add
add
mov
and
mov
jo
adc
add
or
pop
outs
adc
add
pop
sub
add
sub
add
push
fidivr
jnp
add
add
in
add
push
es
mov
jo
adc
add
sub
add
jle
add
add
push
pop
push
jae
add
or
outs
add
push
add
add
add
or
jnp
add
add
xchg
jb
mov
jo
adc
add
sub
add
ficomp
add
push
mov
jo
adc
add
or
inc
add
push
sub
add
fiadd
jb
mov
jo
adc
add
sub
add
sub
add
sti
add
add
add
add
add
add
xor
add
add
jb
mov
jo
adc
add
sub
add
jle
add
add
int
add
lea
add
push
jle
add
add
sub
mov
adc
add
sub
add
sub
add
mov
add
add
int
add
lea
add
push
jle
add
add
sub
mov
adc
add
push
sub
add
es
add
push
sub
add
sub
add
mov
push
sub
add
push
es
add
push
jb
mov
jo
adc
add
sub
add
fisub
sbb
mov
jo
adc
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
jb
mov
jo
adc
add
sub
add
sub
add
add
add
add
mov
add
add
xor
add
add
adc
and
inc
pop
add
add
add
push
add
add
add
add
add
add
add
add
push
add
add
push
add
sub
jb
mov
jo
adc
add
sub
add
and
add
add
push
add
sub
add
inc
and
add
add
push
add
sub
add
add
and
add
add
push
add
sub
jo
adc
add
sub
add
and
add
dec
add
cmp
jmp
out
add
push
sub
add
dec
add
cmp
(bad)
inc
push
jge
add
add
sub
push
sub
sub
and
push
add
cmp
(bad)
(bad)
call
jb
mov
jo
adc
add
jb
mov
jo
adc
add
jae
add
push
sub
add
sub
add
adc
add
outs
add
add
add
adc
sbb
or
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sub
jb
lea
jo
adc
add
sub
add
and
add
add
push
add
sub
sub
add
push
and
add
add
push
add
sub
push
pop
sub
push
sub
sub
and
add
add
push
add
sub
push
sub
sbb
add
add
add
adc
lea
jo
adc
add
sub
add
add
add
add
add
adc
add
jae
add
push
add
sub
add
push
jge
add
add
jnp
add
add
xor
lea
jo
adc
add
sub
add
jle
add
add
ret
jo
adc
add
add
add
add
pop
add
add
inc
add
push
sub
add
add
retf
push
or
pop
lea
add
pop
adc
push
pop
sub
adc
outs
mov
add
or
lea
jo
adc
add
push
sub
add
push
or
mov
add
or
adc
cmp
add
adc
adc
call
add
or
add
sbb
push
pop
add
(bad)
adc
add
add
adc
add
pop
(bad)
ret
or
jo
adc
add
push
sub
jb
adc
jo
adc
add
pop
sub
jb
adc
jo
adc
add
sbb
mov
jb
adc
jo
adc
add
sbb
mov
jb
adc
jo
adc
add
sbb
mov
jb
adc
jo
adc
add
sbb
mov
jb
adc
jo
adc
add
sbb
mov
jb
adc
jo
adc
add
sbb
or
jo
adc
add
push
sub
jb
adc
jo
adc
add
pop
or
mov
jb
adc
jo
adc
add
pop
or
mov
jb
adc
jo
adc
add
pop
or
mov
jb
adc
jo
adc
add
pop
or
mov
jb
adc
jo
adc
add
pop
or
or
jo
adc
add
pop
push
sub
adc
(bad)
adc
add
add
sbb
sbb
ret
add
or
and
add
adc
inc
sldt
add
add
add
add
add
add
test
add
or
add
outs
add
add
add
add
add
xchg
add
add
add
add
add
rol
and
add
cmp
add
add
add
or
sldt
or
lds
add
add
push
adc
add
outs
add
add
adc
jle
add
add
or
add
push
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
jbe
add
sub
adc
pop
mov
jo
adc
add
sub
add
cmp
add
jle
add
add
or
sldt
or
inc
add
add
add
push
adc
add
outs
add
add
adc
jle
add
add
mov
adc
add
adc
sub
pop
add
push
add
add
add
add
or
adc
add
or
cli
add
add
add
add
or
sldt
or
out
add
jg
add
add
push
adc
add
outs
add
add
adc
jle
add
add
test
add
adc
sub
pop
add
push
add
add
add
add
or
adc
add
or
cdq
add
add
add
add
or
sldt
or
test
add
add
add
push
adc
add
outs
add
add
adc
jle
add
add
xor
add
adc
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
ss
add
add
add
or
sldt
or
and
add
add
add
push
adc
add
outs
add
add
adc
jle
add
add
mov
add
push
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
rol
add
jle
add
add
or
sldt
or
mov
daa
add
add
push
adc
add
outs
add
add
adc
jle
add
add
call
adc
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
jo
add
jle
add
add
or
sldt
or
pop
add
add
add
add
push
adc
add
outs
add
add
adc
and
add
inc
nop
add
adc
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
or
das
add
add
or
sldt
or
stc
add
add
add
add
push
adc
add
outs
add
add
adc
add
sahf
nop
add
adc
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
stos
add
add
add
add
or
sldt
or
xchg
add
add
add
add
push
adc
add
outs
add
add
adc
jle
add
add
cli
nop
add
adc
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
inc
add
add
add
add
or
sldt
or
xor
add
jg
add
add
push
adc
add
outs
add
add
adc
jle
add
add
push
xchg
add
adc
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
in
add
jle
add
add
or
sldt
or
rol
add
jg
add
add
push
adc
add
outs
add
add
adc
jle
add
add
mov
add
adc
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
add
add
add
or
sldt
or
ins
add
add
add
add
push
adc
add
outs
add
add
adc
jle
add
add
adc
add
push
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
push
add
add
add
add
or
sldt
or
or
add
jg
add
add
push
adc
add
outs
add
add
adc
jle
add
add
outs
xchg
add
adc
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
mov
inc
add
add
or
sldt
or
cmps
add
add
add
add
push
adc
add
outs
add
add
adc
jle
add
add
fcom
add
push
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
pop
jle
add
add
or
sldt
or
jg
add
add
push
adc
add
outs
add
add
adc
and
add
dec
xchg
add
adc
add
adc
add
push
sub
add
add
add
add
add
or
adc
add
or
sbb
pop
adc
adc
adc
mov
cmp
inc
jnp
add
add
mov
leave
add
or
sbb
adc
add
or
adc
mov
add
or
sbb
retf
add
or
sbb
push
inc
add
sbb
add
or
add
jge
add
add
sub
jb
xchg
add
adc
add
sub
add
sub
add
push
fisub
adc
sbb
xchg
add
adc
add
jle
add
add
push
sub
add
push
jae
add
push
sub
add
fiadd
jb
xchg
add
adc
add
sub
add
sub
add
add
add
inc
or
add
add
add
add
push
add
add
add
add
or
add
add
add
xor
mov
add
add
sbb
inc
add
add
add
add
jp
add
or
add
pop
add
add
and
add
dec
add
sub
push
sub
jl
add
add
dec
add
sub
jb
xchg
add
adc
add
sub
add
pop
sub
push
sub
sub
and
add
add
push
add
sub
jo
adc
add
push
sub
pop
add
push
and
add
add
push
add
sub
add
add
push
or
add
add
dec
add
cmp
(bad)
inc
outs
xchg
add
or
(bad)
jo
adc
add
sub
sub
add
adc
add
add
add
and
add
push
sub
add
jle
add
add
add
push
or
add
add
pop
and
jo
adc
add
push
sub
pop
add
push
push
sub
add
add
jge
add
add
pop
jge
add
add
jae
add
or
add
add
sub
add
or
add
add
xor
add
add
add
test
add
or
add
or
add
push
sub
add
adc
add
sub
jb
xchg
add
adc
add
or
add
add
adc
add
push
add
add
ret
add
push
sub
add
push
sub
add
push
pop
or
adc
add
adc
add
push
add
add
ret
add
push
sub
add
push
sub
add
push
pop
or
add
push
adc
add
add
sub
add
sub
add
adc
add
arpl
add
add
jno
or
add
add
add
add
pop
add
add
add
xchg
add
add
add
add
add
mov
add
xchg
add
add
add
add
add
add
add
add
add
add
or
add
rol
add
or
add
pop
add
add
add
add
add
jl
add
add
add
add
add
and
add
add
push
add
sub
add
add
add
and
add
add
push
add
cmp
(bad)
inc
add
add
add
add
add
and
add
dec
add
cmp
(bad)
inc
jle
add
add
adc
add
sub
adc
add
dec
add
cmp
(bad)
(bad)
inc
add
add
add
adc
add
sub
pop
add
add
push
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
pop
add
add
add
adc
add
dec
add
cmp
(bad)
(bad)
inc
jle
add
add
add
push
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
add
add
and
add
add
push
add
cmp
jle
add
add
pop
add
add
add
adc
push
add
cmp
jle
add
add
add
add
add
dec
add
cmp
(bad)
inc
jle
add
add
add
add
and
push
add
cmp
(bad)
inc
jnp
add
add
cmp
add
pop
sub
push
sub
cmp
(bad)
(bad)
jmp
add
add
dec
add
cmp
jle
add
add
pop
add
add
add
push
add
add
push
add
cmp
(bad)
(bad)
inc
jle
add
add
pop
add
add
add
adc
add
dec
add
cmp
std
(bad)
inc
jle
add
add
pop
add
add
add
adc
add
dec
add
cmp
std
(bad)
inc
jle
add
add
adc
add
sub
adc
add
dec
add
cmp
jle
add
add
pop
add
add
add
or
add
dec
add
cmp
jnp
add
add
or
in
add
add
add
add
dec
add
cmp
sbb
add
add
add
and
add
add
push
add
cmp
(bad)
inc
jle
add
add
adc
add
sub
sldt
add
push
add
cmp
(bad)
inc
jb
mov
jo
adc
add
sub
add
add
sbb
add
dec
add
cmp
std
(bad)
inc
jle
add
add
pop
add
add
add
or
add
dec
add
cmp
mov
add
inc
add
add
add
push
add
add
push
add
cmp
cld
(bad)
inc
jle
add
add
inc
add
add
add
or
push
add
cmp
cld
(bad)
inc
jle
add
add
pop
add
add
add
add
add
dec
add
cmp
add
add
add
add
add
add
adc
add
xor
bound
add
add
and
xchg
add
add
sub
loop
add
loope
add
pop
add
push
jb
xchg
add
adc
add
sub
push
or
add
add
sub
add
push
sub
add
add
sub
add
jge
add
add
add
fiadd
add
jge
add
add
pop
jge
add
add
add
add
add
add
adc
aas
push
add
or
xor
add
add
add
add
adc
lea
jo
adc
add
sub
sbb
add
add
add
adc
add
jo
adc
add
jae
add
push
sub
add
sub
pop
jge
add
add
jae
add
push
jge
add
add
jnp
add
add
les
add
add
jge
add
add
jnp
add
add
ss
add
add
stos
xchg
add
adc
add
add
add
add
inc
add
add
inc
add
push
sub
add
jle
add
add
jnp
add
add
push
add
push
sub
jb
xchg
add
adc
add
sub
add
add
add
add
xchg
push
pop
jb
xchg
add
adc
add
jle
add
add
sub
add
push
jae
add
push
sub
push
fiadd
pop
jb
xchg
add
adc
add
jle
add
add
sub
add
push
jae
add
push
sub
push
fisub
sbb
xchg
add
adc
add
jle
add
add
sub
add
push
jae
add
push
sub
add
fiadd
sub
add
add
add
add
add
xchg
xchg
add
cmps
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
xor
or
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
add
add
push
jge
add
add
add
add
dec
add
sub
add
add
or
add
add
dec
add
sub
jo
adc
add
sub
add
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
ins
and
add
add
push
add
cmp
inc
push
jge
add
add
add
add
dec
add
cmp
(bad)
push
xchg
add
adc
add
sub
add
and
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
push
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
loop
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
mov
push
pop
sub
push
sub
cmp
(bad)
jmp
push
add
add
push
add
cmp
(bad)
(bad)
jmp
call
add
or
add
xor
add
add
add
add
sub
dec
add
add
add
add
add
add
cmp
add
or
add
add
add
add
dec
add
sub
jb
xchg
add
adc
add
sub
add
and
add
add
push
add
sub
add
add
add
sub
add
add
dec
add
sub
add
jge
add
add
sub
push
sub
sub
and
add
add
push
add
sub
add
lds
add
sub
add
xor
add
add
add
add
adc
hlt
add
push
sub
add
add
add
add
sub
xor
add
add
adc
add
add
xchg
add
add
sub
add
jb
xchg
add
adc
add
jle
add
add
push
add
add
pop
add
add
mov
push
sub
add
push
jae
add
or
push
adc
add
add
add
xor
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
adc
adc
adc
add
add
lahf
add
add
(bad)
add
push
jb
xchg
add
adc
add
jle
add
add
aad
add
or
je
add
sbb
add
adc
add
add
lahf
add
add
(bad)
add
push
jb
lea
jo
adc
add
jle
add
add
aad
add
or
je
add
sbb
add
adc
add
add
add
adc
add
add
(bad)
add
push
jb
xchg
add
adc
add
jle
add
add
fiadd
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
xchg
add
add
jle
add
adc
add
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
cwde
add
add
jle
add
adc
add
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
cdq
add
add
jle
add
adc
add
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
cdq
add
add
mov
add
push
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
call
add
adc
add
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
fwait
add
add
in
imul
add
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
pushf
add
add
jle
add
adc
add
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
pushf
add
add
mov
add
push
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
popf
add
add
jle
add
adc
add
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
popf
add
add
mov
add
push
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
sahf
add
add
in
imul
add
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
sahf
add
add
xchg
xchg
add
adc
add
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
lahf
add
add
movs
xchg
add
adc
add
sub
sub
adc
push
add
add
add
add
adc
add
add
rol
add
dec
add
add
ins
add
push
sub
add
push
jle
add
add
mov
in
imul
add
sub
sub
adc
pop
add
add
adc
add
add
mov
jbe
add
sbb
fild
add
add
jl
add
sbb
fild
add
push
sub
add
sbb
add
add
add
adc
xchg
add
adc
add
sub
add
push
or
add
add
loop
add
sub
add
push
sub
jb
xchg
add
adc
add
sub
add
jb
push
add
adc
add
jle
add
add
xor
add
adc
add
sub
add
push
sub
add
push
pop
push
sub
add
sub
jb
cwde
add
adc
add
sub
add
pop
or
and
cwde
add
adc
add
sub
add
sub
jb
cwde
add
adc
add
sub
add
sub
add
push
sub
pop
jb
cdq
add
adc
add
sub
add
jb
push
add
adc
add
jle
add
add
xor
add
adc
add
sub
add
push
sub
add
push
pop
push
sub
add
sub
jb
cdq
add
adc
add
sub
add
push
or
cdq
add
adc
add
sub
add
sub
jb
call
push
sub
add
ficomp
or
add
add
jb
add
adc
add
pop
sub
add
sub
add
push
or
add
sub
sub
add
add
add
add
adc
stc
or
pop
or
xor
add
add
adc
call
push
sub
add
push
or
add
add
loop
add
sub
add
push
sub
jb
call
push
sub
add
jb
push
add
adc
add
jle
add
add
dec
fwait
add
adc
add
sub
add
push
sub
add
push
pop
push
sub
add
sub
jb
fwait
add
adc
add
sub
add
pop
or
and
fwait
add
adc
add
sub
add
sub
jb
pushf
add
adc
add
sub
add
sub
add
push
sub
pop
jb
pushf
add
adc
add
sub
add
jb
push
add
adc
add
jle
add
add
dec
fwait
add
adc
add
sub
add
push
sub
add
push
pop
push
sub
add
sub
jb
pushf
add
adc
add
sub
add
push
or
and
popf
add
adc
add
sub
add
sub
jb
popf
add
adc
add
sub
add
ficomp
or
add
add
mov
adc
add
pop
sub
add
sub
add
push
or
add
sub
sub
add
add
add
adc
sti
or
pop
or
xor
add
add
aam
add
jb
sahf
add
adc
add
sub
add
jle
add
add
loop
add
sub
add
push
sub
jle
add
add
in
add
sub
add
push
sub
jle
add
add
out
add
sub
add
push
sub
jle
add
add
jecxz
add
sub
add
push
sub
jle
add
add
in
add
sub
add
push
sub
jle
add
add
out
add
sub
add
push
sub
add
sub
add
push
es
add
push
sub
mov
add
jle
add
add
loop
add
sub
add
push
cmp
add
jle
add
add
in
add
sub
add
push
cmp
add
jle
add
add
out
add
sub
add
push
cmp
add
jle
add
add
jecxz
add
sub
add
push
cmp
add
add
add
add
in
add
sub
add
push
cmp
add
add
add
push
adc
jb
sahf
add
adc
add
sub
add
adc
jle
add
or
add
add
outs
mov
leave
add
or
or
cmp
add
or
adc
and
add
and
add
fs
add
adc
add
push
push
sbb
add
or
push
outs
mov
lock
push
sub
mov
add
or
retf
add
or
or
push
inc
add
sbb
add
or
adc
jnp
add
add
mov
add
sub
jnp
add
add
ja
add
adc
add
sub
mov
add
or
add
and
add
js
add
adc
add
jle
add
add
ins
add
push
sub
add
push
sub
mov
add
int
add
stos
sahf
add
adc
add
adc
jnp
add
add
sub
pop
add
push
sub
add
push
or
add
add
call
adc
add
pop
outs
mov
inc
add
add
inc
add
push
sub
add
pop
outs
mov
ds
outs
rol
or
add
or
or
mov
add
adc
mov
sub
add
push
sub
jle
add
add
inc
lahf
add
adc
add
or
sub
pop
add
push
cmp
or
add
adc
add
or
add
add
int
add
mov
add
adc
add
or
sub
pop
add
push
adc
or
add
or
add
add
aam
add
adc
add
adc
add
adc
mov
add
inc
add
add
inc
add
push
sub
add
adc
push
or
and
das
add
or
add
sub
int
add
and
add
sub
add
push
sub
pop
add
push
or
repnz
push
sub
jle
add
add
(bad)
mov
add
push
or
sub
pop
add
push
cmp
push
add
push
adc
adc
adc
jge
add
add
int
add
push
mov
add
push
or
sub
pop
add
push
adc
pop
or
add
or
add
add
aam
add
ret
jo
adc
add
adc
jnp
add
add
inc
add
add
inc
add
push
sub
add
adc
inc
lsl
push
jae
add
or
add
or
add
add
add
push
jle
add
add
mov
add
push
sub
add
push
sub
pop
add
push
adc
enter
cmp
(bad)
(bad)
fimul
adc
push
inc
add
sbb
add
or
pop
adc
fisubr
mov
add
push
sub
add
push
adc
ficomp
pop
jle
add
add
sbb
add
adc
add
adc
sub
add
sub
add
push
adc
fidiv
jb
mov
add
push
sub
add
push
adc
fisub
adc
jle
add
add
mov
adc
add
adc
sub
add
sub
add
push
adc
fiadd
adc
sub
add
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xchg
add
add
add
adc
sbb
or
add
add
add
add
add
add
cmp
add
or
add
add
add
add
dec
add
sub
jb
movs
add
adc
add
sub
add
and
add
add
push
add
sub
jle
add
add
js
add
and
add
add
push
add
sub
add
js
add
sub
pop
sub
push
sub
sub
and
add
add
push
add
sub
jb
movs
add
adc
add
sub
js
add
sub
sub
add
xor
add
add
add
adc
inc
dec
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
add
sahf
add
add
jecxz
add
or
add
add
dec
add
outs
in
add
or
add
add
mov
add
sub
and
add
add
push
add
cmp
add
jle
add
add
pop
add
sub
add
and
add
add
push
add
(bad)
call
or
sub
push
sub
cmp
add
add
dec
add
(bad)
call
add
pop
adc
add
push
add
(bad)
call
adc
add
add
dec
add
(bad)
call
add
mov
push
and
add
add
push
add
(bad)
inc
sub
and
add
add
push
add
(bad)
push
movs
add
adc
add
jle
add
add
pop
add
sub
add
and
add
add
push
add
(bad)
(bad)
fiadd
or
add
dec
add
(bad)
dec
adc
or
add
add
dec
add
(bad)
inc
or
add
push
add
(bad)
(bad)
cmp
(bad)
jmp
or
add
dec
add
(bad)
call
sub
sub
xor
popf
add
add
add
adc
inc
dec
add
add
add
add
pop
add
add
add
sub
add
out
add
sub
add
push
add
add
add
int
add
test
add
add
add
add
add
add
add
push
add
add
push
push
add
scas
jle
add
add
xor
add
sub
and
add
add
push
push
add
(bad)
add
or
sub
add
add
add
add
dec
push
add
jo
(bad)
call
add
add
add
add
push
push
add
pop
(bad)
(bad)
call
adc
sub
sub
and
add
dec
push
add
inc
(bad)
(bad)
push
movs
add
adc
add
push
sub
pop
add
push
and
add
dec
push
add
and
(bad)
inc
adc
add
add
dec
push
add
ud0
dec
sub
and
add
add
push
push
add
(bad)
(bad)
(bad)
jmp
push
and
add
add
push
push
add
out
(bad)
(bad)
call
add
aas
jae
(bad)
jmp
push
add
add
push
push
add
aad
(bad)
call
or
add
push
push
add
(bad)
(bad)
ficomp
add
add
push
push
add
mov
(bad)
push
movs
add
adc
add
push
sub
pop
add
push
and
add
add
push
push
add
xchg
(bad)
(bad)
call
add
and
add
add
push
push
add
jle
(bad)
inc
sub
add
or
and
push
push
add
imul
or
add
add
xor
aas
add
add
add
adc
pop
dec
add
add
add
add
sbb
add
xor
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
and
add
add
push
push
add
fwait
push
sub
adc
add
dec
push
add
mov
add
add
jecxz
add
or
adc
add
dec
push
add
jne
(bad)
push
movs
add
adc
add
add
pop
add
sub
add
and
add
add
push
push
add
push
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
push
add
aas
(bad)
(bad)
push
movs
add
adc
add
sub
add
and
add
dec
push
add
and
(bad)
dec
add
sub
cli
add
add
push
add
add
push
push
add
pop
(bad)
(bad)
inc
outs
call
jbe
add
or
or
push
push
add
in
(bad)
(bad)
call
add
add
add
add
push
push
add
fsin
(bad)
inc
cmp
add
add
dec
push
add
(bad)
inc
outs
in
add
or
add
add
mov
add
cmp
sub
push
sub
sub
and
add
add
push
push
add
call
and
add
add
push
push
add
mov
(bad)
call
add
xor
dec
push
add
jae
(bad)
call
adc
add
push
push
add
(bad)
(bad)
(bad)
push
cmps
add
adc
add
jle
add
add
pop
add
sub
add
and
push
push
add
cmp
(bad)
call
or
add
push
push
add
sub
(bad)
(bad)
fisub
add
add
push
push
add
sbb
(bad)
call
add
and
add
add
push
push
add
pop
(bad)
(bad)
inc
sub
xchg
(bad)
jmp
add
add
dec
push
add
out
std
(bad)
push
movs
add
adc
add
jle
add
add
pop
add
sub
add
and
add
add
push
push
add
(bad)
std
(bad)
call
sub
sub
adc
add
add
add
adc
pop
dec
add
add
add
add
ret
add
add
add
add
add
out
add
inc
add
add
add
add
add
add
add
add
add
add
add
jnp
add
mov
add
and
add
lahf
add
add
add
inc
add
add
add
add
adc
add
dec
pop
add
xchg
or
add
or
jbe
add
or
add
push
pop
add
adc
adc
call
add
inc
add
add
add
add
dec
pop
add
popa
(bad)
(bad)
push
cmps
add
adc
add
add
pop
add
sub
add
and
add
add
push
pop
add
ds
(bad)
dec
cmp
add
and
add
add
push
pop
add
sub
(bad)
inc
sub
add
or
and
add
add
push
pop
add
adc
adc
or
add
dec
pop
add
add
(bad)
call
adc
and
add
add
push
pop
add
repz
(bad)
(bad)
cmp
add
add
adc
add
dec
pop
add
loopne
(bad)
(bad)
jle
add
add
xor
add
sub
and
add
add
push
pop
add
mov
push
cmps
add
adc
add
push
sub
pop
add
push
and
add
add
push
pop
add
call
add
and
add
add
push
pop
add
xchg
(bad)
inc
sub
sbb
(bad)
jmp
push
add
add
push
pop
add
outs
(bad)
(bad)
inc
adc
add
push
pop
add
pop
(bad)
(bad)
dec
add
sub
jo
or
push
pop
add
inc
(bad)
(bad)
push
cmps
add
adc
add
sub
add
and
add
add
push
pop
add
sub
(bad)
call
sub
adc
add
dec
pop
add
sbb
(bad)
dec
outs
in
add
or
sub
and
push
pop
add
cld
std
(bad)
call
push
adc
(bad)
(bad)
jmp
or
add
dec
pop
add
jecxz
(bad)
call
push
pop
pop
adc
and
add
add
push
pop
add
iret
std
(bad)
push
movs
add
adc
add
push
sub
pop
add
push
and
add
add
push
pop
add
lods
std
(bad)
call
sub
add
add
xor
add
dec
dec
add
add
add
add
add
jge
add
mov
add
add
add
add
add
add
add
push
add
xor
add
add
add
add
add
add
add
add
and
add
add
push
push
add
stos
jb
push
jo
adc
add
or
pop
add
sub
add
and
add
add
push
push
add
mov
adc
add
push
push
add
jp
(bad)
dec
cmp
add
add
add
add
dec
push
add
data16
(bad)
dec
sub
push
add
add
add
push
push
add
dec
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
push
add
cmp
(bad)
call
add
add
add
add
push
push
add
es
(bad)
inc
adc
add
add
dec
push
add
adc
outs
in
add
or
add
sub
add
push
sub
add
add
or
add
dec
push
add
in
(bad)
(bad)
dec
outs
call
jbe
add
or
add
push
push
add
sar
(bad)
inc
or
add
add
sub
add
push
outs
mov
or
add
dec
push
add
mov
(bad)
push
add
or
and
add
add
push
push
add
lahf
(bad)
(bad)
dec
outs
movs
add
or
sub
sub
and
add
add
push
push
add
cmp
inc
or
add
or
add
dec
push
add
imul
push
add
sub
add
push
sub
add
or
and
add
add
push
push
add
dec
(bad)
(bad)
call
add
and
add
add
push
push
add
cmp
(bad)
call
add
aas
hlt
(bad)
(bad)
inc
sub
add
xor
add
add
add
dec
dec
add
add
add
add
test
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
or
add
add
add
add
adc
add
dec
add
sub
jo
adc
add
sub
add
and
add
dec
add
sub
push
sub
add
push
and
add
add
push
add
cmp
(bad)
jmp
out
add
push
and
add
add
push
add
cmp
(bad)
jmp
lock
push
sub
and
add
add
push
add
cmp
(bad)
jle
add
add
call
cmc
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
loopne
add
sub
add
push
and
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
jmp
cmc
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
fadd
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
push
test
jo
adc
add
sub
add
push
sub
add
push
jle
add
add
dec
add
add
ins
add
push
sub
add
push
sub
and
add
add
push
add
cmp
fild
add
sub
add
push
pop
sub
push
sub
cmp
(bad)
jmp
add
add
dec
add
cmp
out
add
push
cmp
(bad)
jmp
add
push
add
cmp
(bad)
jmp
fiadd
add
sub
add
push
and
add
add
push
add
cmp
(bad)
jmp
call
test
add
add
push
add
cmp
(bad)
(bad)
jmp
loope
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
push
test
jo
adc
add
push
sub
pop
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
jmp
pop
push
sub
add
and
add
add
push
add
cmp
std
(bad)
push
test
add
push
sub
add
sub
add
xor
add
add
adc
add
add
bound
add
push
add
sub
add
push
sub
add
jle
add
add
sub
add
push
sub
add
(bad)
add
push
add
inc
add
add
sbb
push
sub
push
mov
xor
jle
add
add
(bad)
test
add
push
add
sub
add
push
sub
add
jle
add
add
push
sub
add
jb
stos
add
adc
add
push
lea
add
add
xchg
add
or
pop
add
push
ficomp
add
mov
add
push
pop
sub
add
sub
add
fiadd
sub
add
adc
add
add
add
add
adc
add
mov
add
adc
inc
dec
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
dec
add
add
add
add
add
add
and
add
add
push
add
sub
jo
adc
add
sub
add
and
add
add
push
add
sub
push
sub
add
push
and
add
add
push
add
sub
push
sub
add
push
and
add
add
push
add
cmp
(bad)
jmp
in
add
sub
add
push
pop
sub
push
sub
sub
and
add
dec
add
cmp
(bad)
jmp
fadd
add
sub
add
push
and
add
dec
add
cmp
(bad)
(bad)
jmp
loop
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
in
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
out
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
loopne
add
sub
add
push
and
add
add
push
add
cmp
(bad)
(bad)
jmp
fld
add
sub
add
push
and
add
add
push
add
cmp
fiadd
add
sub
add
push
and
push
add
cmp
loope
add
sub
add
push
and
add
add
push
add
cmp
fild
add
sub
add
push
and
add
add
push
add
cmp
(bad)
jmp
call
test
add
add
push
add
cmp
(bad)
push
stos
add
adc
add
sub
add
sub
add
xor
ja
add
dec
add
adc
add
add
dec
stos
add
adc
add
add
sub
pop
add
push
jle
add
add
sub
add
push
sub
jle
add
add
cwde
stos
add
adc
add
add
sub
pop
add
push
jle
add
add
sub
add
fimul
add
jo
add
fiadd
ficomp
add
lods
stos
add
adc
add
push
sub
add
sub
add
fiadd
sub
add
add
add
or
add
add
add
add
pop
add
push
add
add
add
sub
xor
add
add
add
stos
add
adc
add
adc
add
add
jbe
add
push
lods
add
adc
add
sub
cwde
add
add
jl
add
cdq
add
add
int
add
jbe
add
or
add
adc
add
sub
call
add
adc
add
sbb
add
add
jl
add
dec
push
add
adc
add
jle
add
or
jmp
inc
push
add
adc
add
jle
add
or
add
or
xor
jo
adc
add
jle
add
or
add
or
jle
add
add
jl
add
dec
push
add
adc
add
jle
add
or
jmp
inc
push
add
adc
add
jle
add
or
add
or
xor
jo
adc
add
jle
add
or
add
or
pop
adc
scas
add
or
jle
add
add
jbe
add
sub
add
sub
sahf
add
add
jmp
add
sbb
lods
add
adc
add
and
xchg
add
adc
add
and
add
add
add
add
sub
xor
push
add
add
add
adc
add
add
add
outs
xchg
add
or
add
push
add
add
add
sub
xor
repz
add
add
adc
sub
or
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
add
add
add
add
add
or
push
add
add
push
add
sub
and
add
add
push
add
sub
add
jnp
add
add
jnp
add
add
cmp
add
or
add
add
dec
add
sub
fcom
sub
push
sub
sub
and
push
add
cmp
(bad)
jmp
and
add
add
push
add
cmp
(bad)
inc
sbb
and
add
add
dec
add
cmp
(bad)
inc
push
outs
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
sgdtd
push
cmp
push
lods
add
adc
add
jae
add
push
jp
push
add
add
add
sub
xor
add
add
add
add
adc
jnp
add
or
jnp
add
or
or
add
sub
add
add
add
add
sub
xor
add
add
add
add
add
add
add
leave
add
push
sub
add
add
add
sub
xor
add
add
adc
add
add
add
add
add
jnp
add
add
lods
add
or
stos
add
push
jle
add
add
add
stos
add
push
sub
add
push
add
add
add
sub
xor
add
add
adc
sbb
or
add
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
sub
add
jl
add
add
mov
outs
lods
add
or
add
or
add
add
dec
add
sub
add
adc
add
outs
pop
add
or
add
add
dec
add
sub
add
or
sub
push
sub
sub
and
add
add
push
add
sub
add
pop
jge
add
add
add
add
add
add
add
sub
xor
add
add
adc
sbb
inc
add
add
add
add
add
add
add
add
and
add
add
push
add
sub
add
add
add
outs
inc
add
or
and
add
add
push
add
sub
add
jb
lods
add
adc
add
outs
add
add
outs
add
add
outs
scas
add
or
pop
sub
push
sub
sub
and
add
add
push
add
sub
or
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
cwde
and
add
dec
add
cmp
(bad)
(bad)
jle
add
or
add
add
or
add
push
add
add
add
sub
add
add
add
sub
xor
add
add
add
add
adc
jnp
add
add
or
ret
jo
adc
add
add
add
add
lods
add
add
mov
add
adc
add
sub
sub
add
sub
push
add
add
add
sub
add
add
add
sub
xor
add
add
adc
jnp
add
add
out
add
add
add
add
mov
add
sub
add
sub
add
add
add
add
sub
xor
add
add
adc
jnp
add
add
out
add
add
add
add
mov
add
sub
add
sub
add
add
or
add
sub
or
and
add
lea
add
add
bound
add
xor
add
xor
add
add
adc
add
add
mov
add
add
jle
add
add
mov
add
sub
add
push
sub
jle
add
add
mov
add
sub
add
add
add
jns
add
or
push
or
xor
add
add
jle
add
add
pop
outs
popf
add
or
add
add
jle
add
add
imul
add
sub
add
pop
pop
or
add
add
or
(bad)
jle
add
add
mov
add
jle
add
add
sub
add
push
sub
push
add
jle
add
add
sub
add
push
or
or
movs
add
add
sub
add
sub
add
adc
add
add
add
add
add
add
dec
add
add
ins
add
push
adc
push
adc
add
jae
add
or
pop
push
add
sub
add
xor
add
add
adc
add
add
lods
add
add
or
add
sub
add
push
sbb
dec
jle
add
add
push
add
add
mov
add
sub
fsubr
add
or
add
add
add
lea
push
push
add
or
add
add
jle
add
add
arpl
push
sub
add
adc
jle
add
add
adc
sub
add
jle
add
add
pop
jle
add
add
dec
add
add
arpl
push
jb
lods
add
sbb
add
or
sub
jle
add
add
sub
push
add
cmp
add
add
adc
mov
add
mov
and
mov
invd
sub
jle
add
add
sub
fimul
add
push
sub
add
outs
jae
add
adc
adc
add
add
mov
add
cmp
add
sub
jle
add
add
adc
adc
add
imul
add
sbb
add
add
sldt
add
add
outs
add
add
adc
push
add
add
add
add
adc
jae
add
or
jle
add
add
sub
add
push
or
add
add
jle
add
add
sub
icebp
add
add
sub
imul
or
add
or
add
jle
add
add
add
add
mov
sub
ss
push
jle
add
add
jle
add
add
add
add
mov
sub
ss
push
jle
add
add
sub
push
add
adc
jae
add
or
add
push
jae
add
or
push
adc
jae
add
or
jle
add
add
jle
add
add
add
push
imul
adc
adc
sub
push
add
imul
push
lea
mov
add
add
sub
add
push
sub
xchg
lods
add
mov
mov
add
outs
mov
add
push
call
mov
add
sbb
add
add
add
adc
add
add
add
add
add
mov
add
sub
fiadd
es
add
add
and
add
add
add
or
movhps
adc
mov
movups
call
or
add
adc
lods
add
sahf
add
or
pop
adc
rol
add
adc
adc
push
pop
and
lahf
add
or
add
add
mov
push
adc
push
sub
pop
jg
add
add
pop
and
add
or
pop
add
sub
retf
add
push
(bad)
add
add
outs
movs
add
or
pop
outs
xchg
add
or
sub
fld
add
add
fisttp
add
add
outs
movs
add
or
or
or
or
or
adc
adc
push
rol
add
add
nop
add
or
pop
adc
adc
adc
adc
pop
pop
call
adc
pop
pop
adc
adc
adc
xor
jle
add
or
outs
xchg
add
or
or
pop
jae
add
or
or
or
cwde
add
or
or
add
or
add
or
or
xor
or
or
add
or
or
xor
or
or
add
or
or
xor
or
or
add
or
or
xor
sbb
push
sub
or
or
push
outs
fwait
add
or
push
pop
pop
adc
adc
adc
xor
adc
jle
add
or
add
or
outs
pushf
add
or
or
or
add
or
or
outs
cdq
add
or
or
xchg
add
or
add
fiadd
adc
pop
pop
adc
adc
adc
mov
push
(bad)
(bad)
jmp
add
inc
add
add
add
sbb
add
les
add
add
add
mov
add
add
scas
add
rol
fiadd
add
add
mov
or
add
fiadd
add
add
les
or
add
les
add
push
add
mov
add
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sbb
add
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sbb
add
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
add
sub
add
push
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
add
push
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
add
push
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
add
push
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
add
push
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
add
push
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
add
push
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
add
push
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
add
push
sub
and
sbb
add
sub
and
sbb
add
sub
and
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
sub
add
push
sub
and
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
and
add
add
sbb
add
sub
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
pop
add
and
jb
outs
addr16
add
add
add
and
add
add
add
add
inc
push
dec
inc
add
add
add
ins
outs
bound
add
add
add
add
add
push
mov
add
add
and
add
add
add
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
pop
add
add
add
and
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
nop
add
add
add
jo
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
pop
add
add
jo
push
add
add
add
add
add
mov
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
das
add
add
das
add
add
out
add
add
out
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
push
add
inc
add
add
popa
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
out
add
add
out
add
add
mov
add
add
add
add
add
add
push
add
and
das
add
add
add
add
inc
add
dec
add
push
add
arpl
ins
add
jae
das
add
add
add
add
add
add
add
rol
fild
in
iret
add
add
add
test
push
add
push
das
add
add
push
das
add
add
sub
push
add
sub
push
add
das
add
add
das
add
add
iret
add
add
iret
add
add
add
add
add
add
add
add
add
push
out
add
add
push
out
add
add
push
jo
push
add
push
das
add
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
add
add
das
add
add
das
add
add
das
add
add
das
add
add
das
add
add
das
add
add
mov
das
add
add
add
add
add
add
pop
das
add
add
pop
jo
push
add
pop
das
add
add
das
add
add
add
or
add
add
das
add
add
push
add
add
or
or
add
add
or
or
or
add
add
add
ror
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
out
add
add
or
add
add
add
add
add
add
or
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
push
add
jo
push
add
or
push
add
or
add
add
add
add
add
add
add
add
add
add
add
int
out
add
add
or
add
add
out
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
lea
loop
sub
push
add
or
push
push
add
add
sub
push
add
pop
add
add
or
push
push
add
sub
push
add
add
add
add
push
out
add
add
add
add
add
add
or
add
add
out
add
add
pop
das
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
pop
push
das
add
add
push
das
add
add
das
add
add
add
or
add
add
add
add
add
add
add
mov
mov
or
or
or
or
add
or
or
add
or
or
or
add
or
add
add
or
add
add
iret
add
add
jb
push
add
add
add
or
or
add
or
or
add
or
or
or
or
xlat
or
add
xlat
or
add
xlat
or
add
xlat
or
add
add
add
add
add
add
or
loopne
das
add
add
or
or
repz
repz
repz
repz
pop
push
push
add
pop
push
push
add
add
add
add
add
mov
add
push
popa
or
add
push
popa
or
add
push
add
push
add
(bad)
or
add
lar
push
add
femms
add
repz
repz
stos
movhps
ror
movhps
fimul
int3
movhps
test
adc
add
push
add
add
int3
bndldx
push
adc
add
add
add
add
add
add
adc
jno
jbe
add
add
adc
add
add
add
add
adc
adc
adc
add
add
add
adc
test
jbe
adc
push
add
add
add
add
add
add
add
adc
(bad)
adc
add
add
adc
add
add
sub
add
add
add
sub
add
adc
add
add
add
add
add
add
aaa
add
add
add
add
cmp
add
add
inc
add
add
add
add
dec
add
adc
add
add
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
dec
add
add
add
adc
add
add
add
add
adc
xor
call
add
adc
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
xor
movs
add
add
adc
adc
add
add
add
adc
add
add
add
add
adc
adc
add
add
add
adc
adc
add
add
add
add
add
add
push
adc
add
add
add
push
adc
add
add
add
push
adc
add
adc
adc
add
add
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
add
adc
add
add
add
add
adc
adc
add
add
add
adc
adc
add
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
push
adc
add
add
add
add
adc
adc
add
add
add
add
inc
adc
adc
add
add
add
add
dec
adc
adc
add
add
add
adc
push
adc
adc
add
add
add
adc
add
add
add
add
adc
popa
adc
adc
add
add
add
cmp
cmp
add
add
add
cmp
push
add
add
add
cmp
add
add
adc
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
adc
add
add
add
add
adc
adc
push
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
add
adc
add
add
xor
add
adc
ficom
jbe
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
adc
add
add
add
add
adc
xor
dec
add
add
add
adc
add
add
adc
add
add
mov
or
adc
add
add
mov
or
adc
add
add
mov
add
add
adc
add
or
jno
mov
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
sbb
mov
int3
add
add
add
adc
add
add
add
add
adc
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
mov
add
add
add
add
add
add
adc
add
add
add
add
mov
or
add
adc
xchg
adc
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
cmp
mov
add
add
add
add
add
add
add
adc
add
add
add
add
adc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcl
inc
add
add
add
add
lds
add
fadd
dec
add
add
add
adc
add
fiadd
push
add
add
add
adc
add
fild
push
add
add
add
adc
add
loopne
pop
add
add
add
adc
add
loop
popa
add
add
add
adc
add
jecxz
add
add
add
adc
add
in
imul
add
add
adc
add
in
jo
add
add
in
add
inc
add
add
add
add
jmp
add
add
add
add
in
adc
add
call
add
add
adc
add
jmp
add
add
adc
add
jmp
add
adc
add
in
add
add
adc
add
repnz
add
adc
hlt
add
add
add
add
add
adc
add
mov
add
add
cmps
add
add
add
adc
or
lods
add
add
add
add
add
add
adc
or
mov
add
add
sbb
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
adc
adc
retf
add
add
add
add
add
add
add
adc
adc
aam
add
add
xor
add
add
add
add
add
adc
and
fiadd
add
add
cmp
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
repnz
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
adc
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
jne
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
pusha
add
add
add
add
gs
add
add
add
push
add
add
lods
adc
dec
add
add
add
mov
add
inc
add
je
add
add
mov
add
inc
add
jns
add
add
mov
add
jle
add
add
mov
add
add
add
rcl
add
add
adc
push
add
add
adc
push
add
add
adc
pop
add
add
adc
pop
add
aad
add
inc
add
mov
add
adc
pop
add
add
adc
pop
add
add
adc
pop
add
add
adc
pop
add
add
adc
pop
add
add
adc
pusha
add
add
adc
popa
add
add
add
add
adc
arpl
leave
add
add
add
adc
fs
add
add
add
adc
gs
add
add
add
push
add
inc
add
fadd
add
add
add
fld
add
add
push
add
inc
add
loop
add
add
or
add
out
add
add
adc
add
inc
add
in
add
add
add
add
icebp
add
add
add
push
add
inc
add
add
add
add
add
sti
add
add
add
push
add
inc
add
add
and
add
add
add
push
add
inc
add
or
sub
add
syscall
add
add
xor
add
inc
add
adc
add
add
xor
add
sbb
cmp
add
inc
add
add
cmp
add
and
inc
push
add
inc
add
sub
inc
push
add
inc
add
sub
add
add
inc
add
xor
dec
push
add
inc
add
aaa
add
push
push
add
inc
add
cmp
add
add
push
push
add
inc
add
inc
add
pop
push
add
inc
add
inc
add
pop
push
add
inc
add
dec
add
popa
push
add
inc
add
push
add
gs
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
jns
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
push
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
push
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
inc
add
add
lds
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
loope
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
add
push
add
inc
add
add
stc
push
add
inc
add
add
add
push
add
inc
add
add
add
pop
add
inc
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
pop
movs
adc
push
pop
movs
adc
sbb
test
add
and
movs
adc
and
push
sub
mov
push
xor
mov
push
xor
mov
push
cmp
adc
inc
pop
mov
adc
inc
pop
movs
adc
dec
pop
mov
pop
mov
pop
movs
adc
pop
pop
movs
adc
add
mov
pop
mov
pop
movs
adc
add
test
adc
jae
mov
pop
mov
pop
movs
adc
add
add
add
xchg
pop
movs
adc
add
add
add
add
add
add
add
mov
add
add
pop
mov
pop
mov
pop
movs
adc
add
pop
test
adc
xlat
pop
mov
pop
mov
pop
movs
adc
add
pop
test
adc
jmp
mov
pop
mov
pop
movs
adc
add
pop
test
adc
call
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
mov
push
and
sbb
adc
scas
sbb
adc
mov
rcl
cmp
mov
add
rcl
add
rcl
or
rcl
adc
rcl
adc
rcl
sbb
rcl
and
rcl
and
rcl
sub
rcl
add
sbb
sbb
sbb
adc
push
sub
mov
push
cmp
leave
adc
add
leave
adc
or
leave
adc
or
adc
leave
adc
pop
sbb
sbb
sbb
sbb
sbb
sbb
lods
adc
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
add
sbb
adc
add
sbb
adc
add
sbb
sbb
sbb
sbb
sbb
sbb
adc
aaa
sbb
adc
cmp
movs
adc
inc
sbb
adc
inc
sbb
test
add
push
sbb
sbb
pop
mov
push
sbb
adc
pop
sbb
adc
fs
adc
imul
outs
sbb
adc
jae
ficom
add
js
loop
add
xchg
mov
sbb
sbb
sbb
adc
add
add
add
add
mov
movs
adc
add
add
sbb
adc
add
sbb
adc
add
sbb
sbb
adc
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
sbb
add
call
add
sbb
adc
add
sbb
sbb
sbb
adc
push
sub
mov
push
add
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
mov
push
cmp
inc
sbb
adc
dec
sbb
adc
add
adc
add
mov
add
pop
sbb
adc
add
and
pop
mov
push
sub
adc
ins
sbb
adc
jns
cld
adc
test
cld
adc
xchg
sbb
adc
cdq
sbb
adc
mov
adc
cld
adc
out
add
lods
sbb
adc
mov
cld
adc
cmps
sbb
adc
mov
cld
adc
mov
add
cld
adc
push
sub
mov
push
adc
pop
sbb
adc
retf
sbb
adc
push
sub
mov
push
cmp
rcr
xor
add
or
sbb
sbb
pop
mov
push
sub
adc
out
cmp
xor
out
sbb
adc
add
sbb
sbb
adc
add
sbb
add
stc
sbb
add
(bad)
sbb
adc
add
sbb
adc
add
sbb
adc
add
sbb
adc
add
add
sbb
push
push
sub
mov
push
add
push
adc
or
push
adc
adc
push
adc
adc
sbb
push
adc
pop
sbb
push
and
adc
lds
push
adc
add
sbb
adc
add
sbb
adc
add
mov
sbb
adc
add
sbb
adc
add
sbb
add
sub
adc
add
sbb
adc
xor
cmp
movs
adc
aas
sbb
adc
inc
sbb
adc
dec
sbb
adc
dec
sbb
adc
push
sbb
adc
pop
sbb
adc
pop
sbb
adc
add
movs
adc
add
movs
adc
add
mov
push
push
sub
adc
ins
sbb
adc
jno
adc
pop
mov
push
xor
adc
jnp
ins
adc
sbb
push
add
mov
adc
(bad)
sbb
adc
xchg
sbb
adc
cdq
sbb
adc
sahf
sbb
adc
mov
push
sub
mov
push
sub
lods
sbb
adc
mov
jno
push
xor
mov
add
jno
push
add
jno
push
or
jno
push
adc
jno
push
sub
push
adc
jno
push
sbb
jno
push
sbb
jno
push
push
sub
mov
push
and
jbe
push
sub
jbe
push
sub
jbe
push
xor
jbe
push
cmp
jbe
push
cmp
jbe
push
add
jbe
push
add
jbe
push
or
sbb
push
sbb
sbb
and
and
add
sbb
das
sbb
xor
jnp
push
add
sbb
ds
inc
sbb
dec
sbb
dec
sbb
mov
mov
sbb
push
sbb
pop
sbb
popa
sbb
sbb
xor
imul
sbb
jne
movs
adc
add
movs
adc
add
mov
xor
test
mov
mov
xchg
sbb
cwde
sbb
popf
sbb
mov
add
add
mov
mov
add
mov
movs
adc
add
add
sbb
lds
retf
adc
add
sbb
aam
mov
add
fstp
ficomp
jecxz
mov
add
call
add
sbb
repnz
neg
cld
sbb
add
jle
push
push
sub
mov
push
add
test
push
or
test
push
push
sub
mov
push
adc
mov
push
adc
sbb
mov
push
sbb
mov
push
and
adc
sub
mov
xor
xchg
sbb
push
movs
adc
add
push
movs
adc
add
push
movs
adc
cmp
add
movs
adc
mov
mov
sbb
sbb
push
mov
xor
dec
push
movs
adc
add
movs
adc
add
mov
add
pop
push
mov
push
mov
push
xchg
adc
add
sahf
adc
add
mov
push
mov
push
mov
adc
jle
movs
adc
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
push
movs
adc
add
push
movs
adc
add
push
movs
adc
add
push
movs
adc
add
push
movs
adc
add
push
movs
adc
add
push
add
push
add
mov
push
add
pop
mov
push
add
add
pop
mov
pop
add
push
add
add
stc
adc
add
adc
add
lods
adc
add
movs
adc
add
les
push
add
add
add
add
rcl
push
add
add
rcl
push
add
add
add
add
add
add
add
pop
jmp
pop
movs
adc
add
pop
out
adc
add
pop
out
adc
add
pop
out
adc
add
pop
out
adc
add
pop
out
adc
add
pop
out
adc
add
and
adc
add
and
adc
add
and
adc
add
out
adc
add
and
adc
add
and
adc
add
clc
adc
add
clc
adc
add
adc
add
clc
adc
add
std
adc
add
std
adc
add
add
adc
and
mov
or
adc
xchg
and
adc
pushf
and
adc
movs
and
adc
add
add
add
and
adc
add
and
adc
add
and
adc
add
and
and
and
and
and
and
adc
add
and
adc
add
and
adc
add
and
adc
sub
add
and
adc
add
and
adc
dec
and
adc
push
and
adc
pop
and
adc
and
adc
outs
and
add
pop
adc
add
add
add
add
add
add
add
add
and
adc
shl
imul
add
and
adc
out
imul
add
and
adc
sti
and
adc
add
add
and
adc
sbb
imul
add
and
adc
sub
add
and
adc
aas
and
adc
dec
and
adc
push
and
adc
pop
and
adc
and
adc
outs
and
adc
js
jp
adc
and
adc
add
xchg
and
adc
mov
add
add
mov
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
lods
adc
add
add
xchg
and
and
adc
add
add
add
(bad)
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
aam
adc
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
call
and
adc
add
adc
add
not
adc
push
add
add
add
push
adc
add
mov
adc
add
add
add
mov
adc
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
or
cmp
add
and
pop
and
sub
xor
cmp
inc
and
dec
and
push
and
pusha
and
push
push
adc
add
adc
add
pop
adc
add
add
add
add
add
add
add
and
retf
and
aad
mov
add
and
call
add
and
cli
and
add
pushf
adc
add
add
cmps
adc
add
es
adc
add
es
adc
xor
add
es
es
les
add
leave
adc
add
into
adc
add
rcl
add
fcom
add
lea
loop
adc
xchg
es
adc
mov
add
add
mov
add
add
add
or
unpckhps
add
es
adc
clc
es
adc
add
sbb
push
adc
and
sub
sub
daa
xor
aaa
adc
cmp
adc
dec
daa
inc
adc
inc
adc
inc
adc
dec
adc
push
adc
push
adc
pop
adc
pop
adc
fs
fs
imul
mov
add
daa
jae
adc
int
js
adc
xlat
daa
jge
adc
loopne
adc
adc
xchg
xchg
mov
xchg
adc
xchg
adc
fwait
adc
mov
sub
sub
sub
sub
sub
mov
sub
sub
sub
sub
adc
enter
fwait
sub
adc
rcl
xlat
adc
fcom
loope
adc
retf
sub
adc
jmp
adc
fild
lock
cmc
adc
cli
adc
or
xchg
sbb
sub
add
add
sbb
sub
add
in
and
add
add
add
add
and
add
add
add
add
add
add
add
sub
and
add
add
add
push
and
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
sbb
sub
push
add
add
add
add
add
add
add
xchg
add
sub
or
je
add
add
xchg
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
sub
or
fsub
add
add
sbb
sub
or
add
add
add
sub
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
xchg
add
and
lldt
add
add
add
add
xchg
add
pop
add
add
add
add
add
dec
add
add
xchg
add
add
fmul
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
cmp
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
sbb
sub
add
add
pop
add
add
xchg
add
add
pop
add
add
xchg
add
add
add
add
shl
add
add
add
add
popa
add
add
xchg
add
add
arpl
add
add
add
add
add
add
xchg
add
sub
data16
add
xchg
add
sub
add
add
xchg
add
sub
add
add
xchg
add
sub
add
add
xchg
add
sub
add
test
add
add
xchg
add
sub
add
pusha
push
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
mov
add
add
xchg
clc
sub
add
add
ins
add
add
or
cmp
fsubr
add
xchg
add
sub
cmp
lock
add
add
or
cmp
add
add
add
xchg
or
sub
cmp
sbb
add
add
add
add
xchg
push
sub
add
call
add
add
add
add
add
add
outs
add
add
xchg
in
jl
aas
add
add
add
add
add
add
add
add
add
add
add
xchg
sbb
sub
add
add
jo
add
add
add
add
jo
add
add
add
add
jo
add
add
add
add
add
add
add
add
xchg
add
rol
add
add
add
xchg
add
sub
add
add
je
add
add
add
add
je
add
add
add
add
add
add
xchg
add
jl
aas
add
add
add
xchg
sub
add
add
add
add
add
jbe
add
add
add
add
jbe
add
add
add
add
ja
add
add
add
add
add
add
xchg
push
sub
add
add
add
add
xchg
pop
sub
add
add
ja
add
add
add
add
js
add
add
add
add
add
add
xchg
imul
add
add
js
add
add
add
add
jns
add
add
add
add
add
add
xchg
jp
sub
aas
add
add
add
xchg
jp
int3
add
add
xchg
jg
test
add
add
test
test
jl
inc
add
add
add
add
mov
add
add
mov
add
add
test
xchg
sub
add
jo
add
add
xchg
cwde
sub
add
add
add
add
or
xchg
add
add
pop
add
add
add
dec
pop
add
add
add
mov
add
add
loopne
add
add
xchg
add
sub
add
xor
xchg
sbb
sub
add
pop
call
add
jl
inc
add
call
dec
sub
add
add
add
sub
add
fwait
add
add
add
sub
add
add
add
add
sub
add
inc
fwait
add
add
add
sub
inc
add
add
add
test
out
jl
dec
add
add
dec
add
add
add
add
sub
add
sbb
cmc
sub
add
xchg
pushf
add
add
add
sub
add
mov
add
add
sub
add
mov
add
add
les
add
out
add
fs
add
add
test
or
push
add
test
test
push
sub
mov
xchg
adc
jl
dec
add
mov
add
sub
add
cmp
add
add
test
sbb
add
test
and
xor
push
add
movs
add
add
sbb
sub
add
movs
add
add
add
sub
push
add
movs
add
add
add
sub
add
pushf
movs
add
add
xchg
add
sub
add
mov
add
add
jo
add
add
xchg
add
add
sub
add
add
xchg
add
sub
add
fsub
xchg
add
sub
add
inc
test
add
add
add
dec
test
add
add
add
sub
or
dec
add
xchg
test
add
add
add
test
add
add
xchg
dec
sub
add
mov
add
add
shr
add
sub
pop
add
add
add
add
clc
test
xchg
in
jl
pop
add
stos
add
add
xchg
add
rol
pop
add
stos
add
add
xchg
add
popa
add
hlt
stos
add
add
xchg
inc
sub
add
or
add
out
add
sub
add
sub
pop
add
add
add
test
arpl
and
pop
add
add
add
xchg
push
add
add
pop
add
xchg
jb
jbe
pop
add
lods
add
add
xchg
ja
and
pop
add
add
add
add
add
xchg
sub
call
add
add
mov
add
add
aam
add
add
xchg
add
add
mov
add
add
add
push
mov
add
add
add
pop
mov
add
add
add
je
add
add
xchg
add
add
add
add
add
aam
add
add
xchg
call
mov
add
add
add
add
mov
add
add
add
push
add
arpl
jl
add
add
add
sub
add
mov
add
add
add
add
add
add
add
data16
add
add
add
add
data16
xchg
fild
jl
data16
add
add
add
add
data16
mov
add
add
add
in
mov
add
add
add
jl
add
add
les
std
sub
add
xchg
or
add
fdivr
les
push
sub
add
call
add
data16
mov
xchg
add
add
mov
xchg
add
sub
add
loopne
add
add
xchg
add
jl
data16
mov
xchg
pop
sub
add
cld
mov
xchg
add
and
data16
xchg
add
sub
add
xchg
mov
mov
sub
add
mov
add
add
xchg
sub
add
mov
xchg
add
add
add
add
mov
sub
add
mov
mov
sub
add
mov
xchg
or
mov
mov
xchg
or
add
sar
sbb
sub
add
mov
xchg
add
retf
add
aam
add
add
xchg
add
aam
jno
loopne
add
add
xchg
pop
sub
add
hlt
mov
xchg
pop
sub
add
or
xchg
add
fiadd
jb
push
add
add
sub
add
rol
add
xchg
add
in
je
loopne
add
add
xchg
sbb
sub
add
hlt
rol
add
xchg
add
jl
jne
add
add
add
xchg
add
outs
add
adc
add
add
xchg
imul
rol
add
xchg
ins
sub
add
lods
rol
add
xchg
sbb
sub
add
sbb
add
add
xchg
add
sub
add
push
ret
add
xchg
add
inc
jp
nop
ret
add
xchg
add
add
ret
add
xchg
add
sub
add
add
ret
add
xchg
add
sub
add
add
ret
add
xchg
add
sub
ret
add
add
xchg
add
sub
add
add
ret
add
add
xchg
add
sub
add
add
add
add
xchg
add
sub
ret
add
add
xchg
add
sub
add
add
add
add
add
add
add
add
ret
add
add
xchg
add
sub
add
add
ret
add
add
xchg
add
sub
add
add
les
add
add
add
add
les
add
add
add
add
add
add
xchg
add
sub
mov
push
add
add
add
add
add
add
add
add
add
les
add
add
add
add
mov
add
fs
add
mov
add
push
xchg
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
enter
add
add
add
add
add
add
add
add
add
mov
sub
add
add
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
add
add
add
xchg
lds
add
add
add
add
add
add
movs
add
retf
add
xchg
add
sub
add
add
add
add
les
jmp
iret
add
add
loope
repz
add
add
add
add
loope
sbb
and
add
add
test
add
jl
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
jg
nop
add
add
add
add
add
xchg
add
jmp
stos
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
rol
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
scas
add
xchg
les
or
add
add
add
scas
add
add
add
add
scas
add
fadd
add
add
add
add
add
add
add
fiadd
add
add
add
add
add
add
mov
js
add
add
add
mov
nop
fadd
add
add
add
add
add
add
mov
sub
add
add
add
mov
fsub
add
add
add
mov
in
jmp
add
mov
shr
add
add
add
mov
adc
add
add
add
mov
xor
add
add
add
mov
aam
add
add
add
mov
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
jl
mov
add
add
add
add
add
add
add
add
xchg
pop
xor
add
add
xchg
jb
cmp
add
add
xchg
mov
aas
add
add
add
xchg
add
jl
ret
cmc
add
add
xchg
fwait
cs
add
add
add
xchg
fwait
movs
add
add
add
add
add
add
add
add
mov
stc
add
add
add
mov
add
add
leave
add
add
retf
add
add
add
add
int3
add
inc
add
add
add
add
add
add
rol
fadd
add
add
add
rol
inc
add
add
add
add
add
add
xchg
dec
sbb
add
add
add
add
add
or
add
add
add
add
add
add
fld
pop
or
add
add
add
add
add
add
add
jecxz
pushf
or
add
add
add
add
add
add
out
in
or
or
cs
jmp
add
add
add
add
add
xchg
or
rol
add
add
add
add
add
xchg
sub
mov
add
add
xchg
cmp
aam
jmp
add
add
add
add
add
add
adc
add
add
add
add
add
add
xchg
data16
inc
add
add
add
xchg
jne
out
add
add
add
add
add
add
add
add
xchg
add
into
add
add
add
add
out
add
add
lock
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
add
xchg
mov
jl
lock
add
add
add
add
add
add
add
add
add
add
icebp
add
add
add
add
add
add
repnz
add
repz
adc
add
hlt
add
sbb
add
add
add
add
add
add
add
cmc
add
add
add
add
add
add
xchg
adc
jl
clc
add
add
add
add
sbb
xchg
sub
and
clc
add
sbb
xchg
xor
add
add
add
xchg
xor
add
push
add
add
xchg
xor
add
add
add
xchg
xor
add
add
add
xchg
xor
add
add
add
add
add
add
xchg
xor
add
xchg
xor
add
push
add
add
xchg
xor
add
push
add
add
xchg
xor
add
pop
add
add
xchg
xor
add
add
add
xchg
xor
add
pop
add
add
xchg
xor
add
add
add
push
push
add
add
add
xchg
xor
add
xchg
inc
xor
or
sub
add
add
xchg
dec
xor
or
lods
and
add
add
add
cs
or
shl
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
xchg
add
sub
add
add
xchg
add
pop
push
push
add
and
add
add
add
add
add
add
xchg
bound
sub
adc
sbb
add
add
xchg
addr16
add
add
add
add
xchg
ins
xor
add
add
add
add
xchg
jno
out
add
add
add
add
add
xor
adc
push
add
push
adc
js
add
add
xchg
add
jl
adc
add
add
add
add
add
add
add
add
add
add
xchg
add
aam
push
add
and
add
add
add
add
and
xchg
cwde
xor
add
and
add
sbb
ins
and
mov
sub
add
add
xchg
sbb
sub
add
add
xchg
add
add
add
push
sbb
shl
xchg
add
add
and
xchg
add
or
add
add
xchg
add
add
add
add
xchg
add
add
daa
add
add
xchg
add
add
xchg
add
add
sub
add
add
push
sub
dec
sub
add
add
push
sub
jo
add
add
xchg
add
xor
push
sub
sbb
add
add
xchg
add
add
add
pop
das
add
sub
xchg
add
xor
pop
xor
xor
xchg
add
xor
xor
fs
xchg
add
xor
add
add
add
xchg
add
xor
aaa
add
add
add
pop
cmp
les
add
add
xchg
add
xor
das
add
add
xchg
add
xor
das
add
add
xchg
add
xor
xor
add
add
pop
ds
xor
add
add
pop
inc
add
add
add
xchg
add
xor
xor
xchg
add
xor
pop
inc
add
add
add
pop
dec
add
add
add
add
cmp
add
add
pop
dec
add
cmp
add
add
pop
push
add
cmp
add
add
pop
push
add
cmp
add
add
add
add
add
add
xchg
add
in
push
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
xor
pop
push
add
add
add
add
pop
push
add
add
add
add
add
add
add
add
add
add
jmp
add
add
add
xor
or
add
add
add
xchg
add
in
pop
add
add
add
add
add
add
add
add
add
add
invd
pop
add
add
add
add
add
xor
or
add
add
add
xchg
add
in
arpl
add
add
add
mov
xor
or
add
add
add
mov
xor
add
add
add
add
add
xor
or
add
add
add
xchg
add
in
ins
add
add
add
add
add
add
add
add
add
add
dec
or
add
add
add
mov
xor
jbe
hlt
cmp
add
add
or
inc
cmp
add
add
or
ins
cmp
add
add
add
add
add
or
cmp
xchg
add
pop
add
add
add
or
sar
xchg
add
xchg
pop
jg
fdivr
add
add
xchg
add
xchg
pop
add
aas
add
add
xchg
add
xchg
pop
add
add
xchg
add
xchg
pop
add
aas
add
add
xchg
add
or
add
add
pop
test
adc
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
push
xchg
add
dec
add
add
xchg
add
adc
add
add
xchg
add
add
xchg
add
add
dec
add
add
xchg
add
add
dec
add
add
xchg
add
add
dec
add
add
xchg
add
add
dec
add
add
xchg
add
add
add
add
xchg
add
add
dec
add
add
xchg
add
add
add
add
xchg
add
add
xchg
add
add
dec
add
add
xchg
add
call
add
or
add
add
or
add
add
or
add
add
or
add
xchg
add
xor
mov
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
or
add
add
add
xchg
add
xor
push
add
add
xchg
add
xor
push
add
add
xchg
add
xor
pop
add
add
xchg
add
xor
add
add
xchg
add
xor
add
add
xchg
add
xor
into
add
add
add
xchg
add
movs
add
add
add
add
xchg
add
mov
rol
push
add
or
add
add
add
xchg
add
xor
pop
add
add
xchg
add
xor
add
add
xchg
add
xor
or
add
pop
add
add
xchg
add
xor
or
add
pop
add
add
xchg
add
add
pop
add
add
xchg
add
xor
or
add
add
add
add
pop
fild
add
add
add
mov
xor
or
add
add
add
add
add
jecxz
jecxz
add
add
add
mov
xor
pop
out
test
add
add
add
add
add
add
xchg
add
pop
add
add
add
add
or
add
xchg
add
xor
or
add
add
or
add
pusha
add
add
xchg
add
xor
or
add
add
add
or
add
pusha
add
add
xchg
add
xor
clc
add
pusha
add
add
xchg
add
xor
or
add
add
add
xchg
add
xor
or
add
add
add
xchg
add
sub
inc
pop
popa
add
add
xchg
add
xor
add
jl
add
add
xchg
add
aaa
or
mov
add
or
add
popa
add
add
xchg
add
aas
or
add
bound
add
add
or
add
bound
add
add
or
add
add
add
mov
sub
add
add
add
add
xor
adc
add
add
add
and
pop
or
add
add
add
xor
adc
add
add
add
and
push
or
add
add
add
xor
pop
add
add
add
xor
sbb
add
add
add
and
jp
push
add
add
add
xor
add
add
xor
add
add
and
add
xchg
add
add
add
or
add
xchg
add
add
add
add
or
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
or
add
xchg
add
add
add
add
add
add
add
or
add
ins
add
add
xchg
add
jl
cmp
add
add
add
and
xor
add
add
xor
or
add
add
add
and
xor
or
add
add
add
and
xor
or
add
add
add
and
xor
or
add
add
add
and
xor
or
add
add
add
and
xor
or
add
add
add
and
xor
or
add
add
add
and
xor
or
add
add
add
and
xor
or
fsubr
add
xchg
add
xor
or
js
add
add
xchg
add
xor
or
ins
add
add
xchg
add
xor
add
add
xchg
add
xor
xchg
dec
outs
add
add
xchg
add
xor
mov
les
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
xchg
add
xor
je
add
add
or
add
add
or
add
add
or
add
add
add
xchg
add
xor
jne
add
add
or
add
xchg
add
or
add
add
or
add
add
add
or
add
js
add
add
or
add
jp
add
add
add
add
jp
add
add
add
add
jp
add
add
add
add
add
add
add
jp
add
add
add
add
jp
add
add
or
add
add
add
or
add
add
add
add
add
xchg
add
stc
or
add
xchg
add
add
add
xchg
add
jl
loope
les
add
add
or
add
jg
add
add
add
add
add
add
xchg
add
or
add
add
xor
or
add
add
add
xor
in
add
add
add
and
add
add
add
xor
jmp
add
or
add
add
add
xor
jg
add
add
add
add
add
add
xchg
add
sub
or
add
add
add
xchg
add
add
add
add
or
add
xchg
add
add
xchg
add
add
or
add
add
add
xchg
add
add
add
add
xchg
add
add
mov
add
add
or
add
add
add
or
add
add
add
xchg
add
xor
icebp
add
nop
add
add
xchg
add
xor
or
add
add
add
xchg
add
xor
add
add
xchg
add
add
xchg
add
xor
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
xor
test
xchg
add
add
xchg
add
xor
cli
add
add
add
or
add
add
add
xchg
add
xor
add
ins
fwait
add
add
xchg
add
xor
push
add
popf
add
add
xchg
add
xor
add
add
sahf
add
add
xchg
add
xor
add
add
xchg
add
xor
sahf
add
add
xchg
add
xor
or
dec
lahf
add
add
xchg
add
xor
or
ins
lahf
add
add
xchg
add
xor
or
nop
lahf
add
add
xchg
add
xor
or
add
xchg
add
xor
add
add
add
add
add
add
mov
xchg
add
xor
add
add
add
add
xchg
add
xor
add
add
movs
add
add
xchg
add
xor
or
add
add
add
xchg
add
xor
or
add
add
or
add
add
add
xchg
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
xchg
add
rol
add
add
add
xchg
add
rol
add
lods
add
add
xchg
add
rol
add
add
add
add
add
add
add
lods
add
add
xchg
add
add
add
scas
add
add
xchg
add
rol
add
add
add
add
mov
add
add
add
add
add
add
add
add
xchg
add
rol
add
mov
add
add
add
add
mov
add
add
add
add
add
add
xchg
add
fdiv
xchg
add
add
mov
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
xchg
add
add
add
add
xchg
add
add
mov
add
add
add
add
xchg
add
xor
add
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
add
add
xor
or
add
xchg
sbb
sub
add
add
add
add
add
add
add
add
mov
xchg
add
xor
or
add
mov
xchg
pop
sub
add
add
add
add
xchg
popa
sub
add
add
add
add
add
add
mov
test
repnz
add
add
add
add
xchg
inc
sub
add
add
xchg
div
add
add
mov
xchg
dec
sub
add
add
mov
xchg
cld
xor
add
add
add
add
xchg
add
test
xchg
push
xor
add
add
add
xchg
cwde
sub
add
add
add
xchg
sbb
sub
add
add
mov
xchg
sbb
sub
add
add
rol
add
add
xor
mov
add
add
add
xor
jl
add
add
add
xor
je
add
add
add
ss
les
add
add
add
add
int
add
add
add
add
add
add
add
into
add
add
xchg
add
jl
aaa
add
add
add
xchg
sbb
sub
add
add
add
add
add
iret
add
add
mov
sub
add
add
add
add
xchg
add
jl
cmp
mov
add
add
les
leave
sub
add
add
rol
add
add
add
sub
add
aad
add
add
add
sub
add
(bad)
add
add
les
std
sub
add
(bad)
add
add
les
push
sub
add
add
(bad)
add
add
sbb
sub
add
(bad)
add
add
xchg
or
xor
xor
add
add
xchg
or
xor
dec
xlat
add
add
xchg
or
xor
pop
xlat
add
add
xchg
or
xor
nop
xlat
add
add
xchg
or
add
xlat
add
add
xchg
or
inc
or
add
xlat
add
add
xchg
or
inc
or
add
add
add
xchg
or
or
add
add
add
xchg
or
inc
or
add
xchg
or
inc
or
add
fld
add
add
or
add
add
add
or
add
add
or
add
fld
add
add
or
add
fiadd
add
add
or
add
add
add
or
add
add
or
add
fiadd
add
add
or
add
fild
add
add
or
add
add
add
or
add
add
or
add
fild
add
add
add
add
fld
add
add
add
add
add
add
or
add
add
add
add
add
jecxz
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
jmp
add
add
or
add
add
xchg
add
add
out
add
add
xchg
add
add
add
add
add
add
add
add
repz
add
xchg
add
jl
aas
add
repz
add
xchg
sbb
sub
add
add
xchg
add
jl
aas
add
xchg
les
test
add
add
xchg
add
jl
inc
add
add
or
add
add
xchg
add
jl
inc
add
add
pop
inc
add
cmc
add
add
xchg
add
jl
inc
add
cmc
add
add
xchg
add
sub
inc
add
cmc
add
add
xchg
add
jl
inc
add
test
add
xchg
sbb
fisttp
inc
add
test
add
xchg
add
jl
inc
add
add
add
xchg
es
inc
add
test
add
xchg
add
jl
inc
add
test
add
xchg
cmp
push
or
add
add
xchg
add
jl
inc
add
add
add
mov
add
add
xchg
push
ss
inc
add
test
sbb
sub
add
test
sbb
sub
add
add
add
xchg
fs
inc
add
clc
add
add
xchg
add
jl
inc
add
clc
add
add
xchg
ja
jl
inc
add
add
add
add
ins
clc
add
or
xchg
sbb
sub
add
xchg
clc
add
add
xchg
add
add
add
add
xchg
add
add
xchg
add
add
cli
add
add
xchg
add
add
xchg
add
jl
dec
add
xchg
sbb
sub
add
(bad)
sti
add
add
xchg
sbb
sub
add
call
add
or
add
add
xchg
add
jl
dec
add
add
add
add
pop
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
in
dec
add
add
add
add
add
xor
dec
add
add
add
add
add
xor
pop
dec
add
add
add
add
add
add
add
or
xchg
sbb
sub
add
add
add
mov
add
add
add
add
mov
add
add
add
add
enter
add
int
add
add
shl
add
add
xlat
add
add
fdiv
adc
add
loope
add
add
out
add
add
jmp
add
add
lock
add
cmc
add
add
cli
add
add
push
add
add
add
add
add
or
add
add
push
aaa
add
add
adc
add
add
sbb
add
add
sbb
add
aaa
add
add
daa
aaa
add
add
sub
add
add
xor
add
add
ss
add
add
cmp
add
add
inc
aaa
add
add
inc
aaa
add
add
dec
aaa
add
add
dec
aaa
add
add
push
aaa
add
add
pop
aaa
add
add
pop
aaa
add
add
arpl
add
add
push
add
add
add
jb
add
add
ja
add
add
jl
add
add
xor
xchg
add
add
mov
add
add
nop
aaa
add
add
xchg
aaa
add
add
call
aaa
add
add
movs
aaa
add
add
test
add
add
add
add
add
aaa
add
add
(bad)
aaa
add
add
int3
aaa
adc
add
shl
add
add
(bad)
aaa
add
add
(bad)
add
add
loopne
add
add
loopne
add
add
loop
add
add
out
add
add
in
aaa
add
add
icebp
aaa
add
add
div
add
add
sti
aaa
add
add
add
add
add
add
add
cmp
add
add
cmp
add
add
add
add
sbb
add
add
push
cmp
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
cmp
add
add
add
add
inc
cmp
add
add
add
add
dec
cmp
add
add
add
add
push
cmp
add
add
add
add
pop
cmp
add
add
add
add
add
add
outs
cmp
add
add
add
add
js
adc
add
jge
add
add
das
pop
add
add
cmp
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
pop
add
add
loopne
add
add
in
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
jmp
pop
add
add
das
pop
adc
add
repz
add
add
pop
add
add
repz
add
add
cmp
add
add
pop
add
add
das
pop
add
add
pop
cmp
add
add
pop
add
add
das
pop
add
add
cld
cmp
add
add
pop
add
add
pop
cmp
add
add
cmp
add
add
add
add
das
pop
add
add
push
pop
add
add
adc
add
add
adc
add
add
das
pop
add
add
das
pop
add
add
or
add
add
push
cmp
add
add
cmp
add
add
cmp
add
add
add
pop
add
add
cmp
add
add
add
inc
cmp
add
add
add
add
add
add
push
cmp
add
add
add
add
pusha
cmp
add
add
add
add
push
add
add
outs
cmp
add
add
add
add
add
add
jle
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pop
add
add
push
pop
add
add
push
pop
add
add
adc
add
add
mov
add
add
mov
add
add
mov
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
out
add
add
in
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
pop
add
add
or
add
add
das
pop
add
add
push
cmp
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
cmp
add
add
add
add
cmp
add
add
cmp
add
add
add
add
dec
cmp
add
add
add
add
push
cmp
add
add
add
add
pop
cmp
add
add
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
data16
add
add
add
add
jo
add
add
jne
add
add
jp
add
add
jg
add
add
test
add
add
mov
add
add
mov
add
add
xchg
cmp
add
add
add
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
das
pop
add
add
mov
add
add
add
add
add
add
add
cmp
add
add
cmp
add
into
cmp
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
cmp
add
add
add
add
sbb
add
add
push
cmp
add
add
cmp
add
sub
add
add
sub
add
cmp
add
add
cmp
add
add
add
add
inc
cmp
add
add
add
add
dec
cmp
add
add
add
add
push
cmp
add
pop
cmp
add
add
add
add
cmp
add
add
add
add
outs
cmp
add
add
add
add
js
add
add
jge
add
add
cmp
add
add
add
xchg
cmp
add
add
add
add
add
add
add
add
mov
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
lock
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
add
or
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
cmp
add
add
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
add
add
add
add
dec
cmp
add
add
add
add
sbb
add
cmp
add
add
add
add
add
push
cmp
add
add
add
add
push
cmp
add
add
add
add
push
cmp
add
add
add
cmp
add
add
add
add
add
add
add
dec
cmp
add
add
add
add
data16
add
add
add
add
push
cmp
add
add
add
add
sbb
add
cmp
add
add
add
add
add
jo
add
add
jne
add
add
jp
add
add
jg
add
add
test
add
add
add
add
add
add
add
add
add
mov
add
add
mov
add
add
mov
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
fidivr
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
push
cmp
or
adc
adc
add
cmp
pop
cmp
and
add
add
sub
cs
xor
cmp
cmp
add
add
add
inc
cmp
dec
cmp
push
cmp
push
cmp
pop
cmp
pusha
cmp
gs
push
add
add
outs
cmp
je
add
add
jns
add
add
jle
add
add
cmp
cmp
lea
xchg
cmp
xchg
cmp
pushf
cmp
mov
add
add
add
add
add
add
add
cmp
leave
cmp
into
cmp
sar
fdivr
fnstsw
loop
add
add
out
add
add
in
cmp
icebp
cmp
idiv
sti
cmp
add
add
add
add
add
add
add
(bad)
add
add
adc
add
add
sbb
add
add
push
add
add
and
add
add
sub
add
add
sub
add
add
add
aaa
add
add
cmp
add
add
inc
add
add
inc
add
add
dec
add
add
push
add
add
push
add
add
pop
add
add
pop
add
add
fs
add
imul
outs
add
add
jae
add
add
js
add
add
add
add
add
jge
add
add
add
add
add
jge
add
add
sbb
add
cmp
add
add
add
add
add
xchg
add
add
xchg
add
add
fwait
add
add
mov
add
add
add
add
mov
add
add
add
add
enter
add
int
add
add
sar
add
add
xlat
add
add
fdivr
add
add
loope
add
add
out
add
add
jmp
add
add
lock
add
cmc
add
add
cli
add
add
(bad)
add
add
add
add
add
or
add
add
push
aas
add
add
adc
add
add
sbb
add
add
sbb
add
aas
add
add
daa
aas
add
add
sub
add
add
xor
add
add
ss
add
add
cmp
add
add
inc
aas
add
add
inc
aas
add
add
dec
aas
add
add
dec
aas
add
add
push
aas
add
add
pop
aas
add
add
pop
aas
add
add
arpl
add
add
push
add
add
add
jb
add
add
ja
add
add
jl
add
add
cmp
xchg
add
add
mov
add
add
nop
aas
add
add
xchg
aas
add
add
call
aas
add
add
movs
aas
add
add
test
add
add
add
add
add
aas
add
add
(bad)
aas
add
add
int3
aas
adc
add
sar
add
add
(bad)
aas
adc
add
fstp
add
add
loopne
add
add
in
adc
add
jmp
aas
add
add
hlt
aas
add
add
stc
aas
add
add
(bad)
aas
add
add
add
add
add
inc
add
add
or
add
inc
add
add
pop
inc
add
add
sbb
add
add
and
add
add
inc
add
add
sub
add
add
inc
add
add
xor
add
inc
add
add
aas
inc
add
add
inc
inc
add
add
dec
inc
add
add
dec
inc
add
add
add
add
add
pop
add
add
or
bound
add
add
add
add
ins
inc
add
add
jno
add
add
jbe
add
add
jnp
add
add
add
add
add
add
add
cdq
inc
add
add
sahf
inc
add
add
add
add
add
add
add
add
rol
add
mov
add
retf
inc
add
add
rol
add
add
add
inc
add
pop
add
inc
add
or
in
add
add
jmp
add
inc
add
add
repz
add
add
clc
inc
add
add
add
add
inc
add
pop
add
inc
add
or
or
add
add
adc
add
add
inc
add
add
sbb
add
and
add
add
add
inc
add
pop
add
inc
add
or
xor
add
or
cmp
add
add
inc
add
or
inc
inc
add
or
dec
inc
add
add
dec
inc
add
add
push
inc
add
add
push
inc
add
add
pop
inc
add
add
add
add
add
add
imul
add
jo
add
add
jne
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
mov
add
add
mov
add
add
mov
add
inc
add
add
lds
add
add
inc
add
add
iret
inc
add
add
add
add
inc
add
add
fiadd
add
add
inc
add
add
call
add
inc
add
add
repnz
add
add
test
inc
add
add
add
add
add
inc
add
add
or
add
add
inc
add
add
adc
add
inc
add
add
pop
inc
add
add
and
add
add
sub
add
cs
add
add
xor
add
add
inc
add
add
cmp
add
add
add
inc
inc
add
add
dec
inc
add
add
push
inc
add
add
push
inc
add
add
pop
inc
add
add
pusha
inc
add
add
gs
add
add
push
add
add
outs
inc
add
add
je
add
add
jns
add
add
jle
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
inc
add
add
leave
inc
add
add
into
inc
add
add
rol
add
add
inc
add
add
fld
add
add
inc
add
add
out
add
add
in
inc
add
add
icebp
inc
add
add
test
add
sti
inc
add
add
add
add
add
add
inc
add
add
add
add
add
add
sbb
add
add
inc
add
add
and
add
sub
add
add
add
inc
add
add
aaa
inc
add
add
cmp
add
add
inc
inc
add
add
inc
inc
add
add
dec
inc
add
add
push
inc
add
add
push
inc
add
add
pop
inc
add
add
pop
inc
add
add
fs
add
add
imul
inc
add
add
jae
add
add
js
add
add
jge
add
add
add
add
xchg
add
add
xchg
inc
add
add
xchg
inc
add
add
fwait
inc
add
add
mov
add
add
add
add
mov
add
add
inc
add
add
enter
add
int
adc
add
rol
adc
xlat
inc
add
add
fadd
add
add
inc
add
add
out
adc
add
jmp
add
add
lock
add
add
cmc
inc
adc
add
cli
inc
add
add
inc
add
add
add
add
or
add
push
inc
add
add
add
add
inc
add
add
sbb
add
inc
add
add
daa
inc
add
add
sub
adc
add
xor
add
ss
add
add
cmp
add
inc
inc
add
add
inc
inc
add
add
dec
inc
add
add
dec
inc
add
add
push
inc
add
add
pop
inc
add
add
pop
inc
add
add
arpl
add
push
add
add
add
jb
add
add
ja
add
add
jl
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
inc
add
add
mov
add
add
rol
add
(bad)
inc
add
add
fild
add
add
add
inc
add
pop
add
inc
add
or
out
inc
add
or
hlt
inc
add
or
stc
inc
add
or
inc
add
add
add
add
inc
adc
add
or
add
inc
add
add
pop
inc
add
add
sbb
add
add
and
add
add
inc
add
add
sub
add
add
inc
add
add
loopne
add
add
adc
add
add
add
add
xor
add
add
add
cmp
add
add
inc
add
add
inc
inc
add
add
dec
inc
add
add
dec
inc
and
jno
daa
add
add
add
add
add
sub
add
sub
add
add
add
mov
out
or
pop
inc
add
sbb
add
jl
pop
add
sub
add
jl
imul
imul
imul
mov
fwait
sbb
sub
push
mov
dec
sub
push
mov
jb
cmp
add
sub
push
mov
add
and
cdq
add
sub
add
push
cdq
add
push
push
cdq
add
add
jmp
cdq
add
add
add
sub
push
mov
add
add
push
mov
push
mov
add
add
push
mov
push
mov
push
test
push
test
push
mov
add
jl
mov
in
inc
push
push
mov
in
inc
pop
push
mov
in
inc
bound
mov
add
aam
mov
hlt
inc
mov
push
push
mov
push
mov
or
outs
push
mov
add
add
add
push
mov
add
push
mov
add
add
sub
push
fld
push
inc
jg
fld
imul
inc
out
fld
jp
out
add
add
add
add
add
add
add
inc
out
add
add
inc
out
add
add
inc
out
add
add
inc
fwait
push
fld
sbb
add
add
inc
out
fld
inc
inc
out
add
add
xchg
fld
pop
inc
out
fld
push
out
fld
jns
scas
push
fld
add
fld
lea
push
fld
fwait
inc
sub
fld
test
enter
mov
rcl
fld
rol
loope
adc
add
add
sub
rol
add
add
jl
stc
add
inc
sub
add
xchg
das
jl
add
push
cs
add
fild
add
add
inc
inc
add
inc
jl
add
in
hlt
push
or
pop
sub
add
add
inc
sti
push
or
stc
inc
out
or
or
pop
adc
sbb
add
add
or
sbb
sub
push
sbb
das
dec
adc
and
sub
pop
and
cmp
pop
inc
add
and
inc
add
out
inc
add
sub
inc
add
das
pop
inc
add
add
mov
add
xchg
dec
aaa
pop
imul
imul
imul
jns
test
add
add
sub
add
dec
push
pop
cdq
add
sub
add
dec
fs
cdq
add
dec
ins
pop
cdq
add
dec
hlt
add
or
add
sub
add
sub
add
sub
add
sub
rol
add
and
fld
add
and
loope
add
and
jmp
add
add
sub
stc
add
sub
add
add
and
or
add
push
add
add
sub
sbb
add
aam
and
add
jl
sub
test
sub
add
dec
or
mov
sbb
dec
jnp
sub
or
jae
sub
adc
pop
sub
sbb
pop
sub
and
add
sub
sub
xor
test
xchg
pop
sub
sbb
add
add
dec
pushf
pop
sub
or
mov
dec
stos
pop
sub
adc
pop
sub
inc
dec
mov
mov
dec
out
adc
add
inc
mov
rcl
add
test
mov
dec
leave
pop
sub
sub
add
sub
sub
cmp
add
fcom
sub
or
ficom
sub
jns
in
sub
add
jmp
sub
mov
pop
sub
nop
dec
call
sub
add
add
dec
mov
dec
sub
sub
dec
dec
nop
pop
sub
mov
sub
sub
mov
or
sub
inc
dec
adc
sub
ret
or
push
sbb
add
sbb
dec
leave
pop
sub
adc
sbb
add
dec
call
sub
sub
add
dec
cmps
or
add
dec
xor
xor
sbb
sub
xor
sbb
movhps
out
dec
add
out
dec
cld
add
cmc
dec
cmp
inc
add
dec
movs
add
push
dec
pop
add
adc
sbb
and
sbb
cs
pop
sbb
cmp
sbb
dec
dec
pop
add
dec
dec
sbb
adc
sbb
and
sbb
out
dec
cld
add
out
jns
dec
add
jg
dec
add
ins
sbb
jno
xchg
dec
add
ins
sbb
out
dec
add
or
dec
movs
add
call
dec
movs
add
ret
or
add
dec
cld
add
fisttp
add
test
pop
add
xchg
sbb
adc
or
add
dec
mov
imul
imul
imul
imul
imul
imul
imul
imul
jno
sbb
movhps
sbb
sbb
push
add
add
mov
add
mov
mov
jne
and
mov
jg
mov
mov
sub
add
add
add
sub
sbb
add
sub
leave
add
fstp
rol
mov
add
(bad)
dec
out
fld
aad
pop
sbb
add
dec
in
sbb
add
dec
icebp
sbb
add
dec
neg
fld
test
fld
out
dec
push
sbb
add
dec
fild
loope
push
dec
scas
add
add
dec
or
loope
sbb
adc
add
dec
scas
add
add
dec
scas
add
add
dec
scas
add
add
scas
add
add
sub
add
adc
stc
add
sub
sbb
add
sbb
add
dec
and
sub
inc
aam
adc
fild
add
add
inc
inc
add
sub
inc
or
adc
push
cs
sbb
add
jl
sbb
push
dec
adc
sbb
pop
dec
sub
and
sbb
movhps
add
sub
add
repnz
add
repnz
add
sub
xor
cmc
dec
xor
xor
hlt
inc
push
push
dec
add
out
add
fwait
inc
sub
dec
add
dec
jl
push
add
inc
sbb
xchg
dec
inc
sbb
call
sub
add
cmps
dec
dec
sbb
xchg
dec
loope
popa
add
sub
pop
imul
jno
add
push
push
jno
add
and
jno
add
push
sbb
push
mov
push
test
push
mov
sbb
movhps
push
rol
sub
push
leave
add
sub
push
rol
mov
pop
sbb
add
sub
icebp
add
sub
stc
add
add
add
dec
ins
sbb
add
sub
sbb
sub
sbb
sub
sub
sub
dec
nop
pop
sub
dec
mov
cmp
dec
out
add
add
dec
nop
add
test
fwait
sbb
add
add
jg
nop
add
add
movs
sbb
or
sbb
push
dec
stos
sbb
adc
sbb
pop
dec
mov
imul
add
sub
add
dec
mov
dec
and
mov
dec
out
xchg
add
dec
out
xchg
add
dec
xor
dec
adc
dec
out
rol
and
leave
add
sub
rol
dec
les
fld
dec
retf
add
dec
rcr
jmp
adc
add
sub
sbb
add
dec
stos
add
add
dec
mov
out
or
or
adc
sbb
and
sub
inc
add
push
add
pop
add
pop
add
pop
add
pop
add
popa
add
popa
add
imul
add
jno
mov
add
jns
add
in
add
add
mov
mov
mov
xchg
add
cdq
add
mov
push
mov
push
test
sbb
add
sbb
sbb
add
leave
add
rol
fld
loope
add
sub
loope
inc
dec
sub
loope
jne
and
jmp
add
add
add
add
xor
or
pop
dec
aas
sbb
push
inc
dec
stos
push
adc
dec
dec
adc
adc
push
dec
adc
adc
pop
dec
inc
sbb
push
add
jl
sub
jge
dec
sbb
push
outs
dec
push
sbb
push
jns
pop
sbb
push
mov
sbb
push
pushf
dec
sbb
push
inc
ins
sbb
add
dec
push
inc
dec
jg
dec
push
jae
adc
dec
jg
pop
push
mov
push
xor
sbb
add
xchg
sbb
into
dec
mov
dec
cmps
sbb
fisttp
sbb
fisttp
sbb
fisttp
sbb
add
add
pop
xchg
push
fwait
sbb
dec
pop
sbb
sbb
sbb
add
sbb
push
or
loopne
rol
dec
loopne
rol
dec
loopne
rol
dec
loopne
rol
dec
loopne
rol
dec
loopne
rol
dec
loopne
rol
dec
loopne
fld
add
jl
loope
inc
dec
aad
loope
push
dec
out
add
push
fs
jl
jmp
add
push
jle
in
icebp
push
jmp
jmp
icebp
push
mov
sbb
push
xchg
dec
neg
icebp
push
lahf
dec
std
sbb
push
test
pop
add
sub
or
sbb
add
jl
sbb
aam
adc
sbb
loopne
adc
sbb
in
dec
sbb
sbb
clc
dec
and
sbb
or
add
pop
and
add
pop
cmp
add
pop
das
dec
int3
add
pop
ins
sub
add
pop
add
jl
xor
sub
push
cmp
inc
push
sub
cmp
push
push
sub
inc
pop
gs
xor
dec
pop
jne
sbb
jl
cmp
push
inc
sbb
cwde
push
and
dec
pop
mov
pop
mov
jmp
dec
pop
lds
add
rcl
sbb
add
push
sbb
loop
dec
sbb
hlt
push
push
push
jno
push
push
push
sbb
push
cs
jns
adc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
sbb
add
add
add
add
sbb
sbb
push
mov
sbb
add
sbb
sbb
sbb
sbb
sbb
pop
mov
add
in
rol
sub
rol
push
sub
rol
push
movs
add
pop
xchg
push
movs
sbb
pop
xchg
push
lods
sbb
pop
mov
pop
mov
aas
or
hlt
add
pop
in
mov
rol
icebp
push
scas
add
pop
(bad)
push
sub
icebp
pop
push
push
mov
dec
lds
or
jg
sub
adc
add
int3
sbb
or
aam
and
add
in
xor
hlt
push
mov
sub
inc
or
push
fcomp
inc
or
loop
inc
or
jmp
push
mov
lock
add
push
push
popa
or
sub
sbb
xchg
add
jg
sub
jns
add
and
or
or
or
or
mov
sbb
add
sbb
or
dec
adc
or
dec
out
add
add
sbb
or
xor
or
add
jl
or
add
sbb
sub
add
sub
sbb
add
dec
sub
dec
xor
add
add
dec
sub
dec
mov
aas
sbb
add
dec
cmp
add
dec
or
sbb
and
add
sub
sbb
add
push
sbb
add
dec
push
dec
push
dec
daa
sbb
add
sub
add
dec
sub
dec
mov
cmp
add
dec
or
sub
add
jl
xor
rol
sbb
add
sub
add
dec
daa
sbb
add
dec
jo
cmp
cld
dec
jl
cmp
add
sbb
push
jns
cmp
sahf
push
test
add
add
dec
sub
dec
nop
sbb
add
xchg
sbb
add
dec
mov
cmp
add
sub
add
push
out
add
sub
add
daa
sbb
add
dec
sti
pop
dec
add
dec
out
add
dec
jo
push
add
sub
add
dec
daa
sbb
add
dec
mov
sti
pop
pop
add
dec
out
add
dec
mov
jo
add
sub
add
dec
daa
sbb
add
dec
sti
pop
ins
add
dec
out
add
dec
jo
je
add
jl
je
sub
sbb
add
dec
sti
pop
jl
loop
out
add
test
add
jl
test
sub
sbb
add
dec
sti
pop
mov
loop
out
add
pushf
add
sub
sbb
add
scas
push
out
add
movs
add
sub
add
dec
daa
sbb
add
dec
sti
pop
lods
add
dec
out
add
les
adc
add
sub
pop
int3
add
sub
add
dec
daa
sbb
add
dec
mov
aam
int3
add
dec
sub
sub
add
add
dec
nop
sbb
add
sub
add
push
cmps
sbb
add
dec
push
dec
jo
fadd
add
jl
fadd
jecxz
sbb
sub
dec
sti
pop
in
loop
out
add
add
sub
pop
in
add
add
dec
mov
hlt
add
add
dec
daa
sbb
add
dec
sti
pop
add
ins
sub
sbb
add
sub
sbb
add
enter
add
sbb
sub
add
dec
daa
sbb
add
dec
jo
or
xor
cmp
add
sub
add
push
xchg
sbb
add
dec
mov
daa
sbb
add
cmp
add
dec
sub
sub
add
push
cmps
sbb
add
dec
push
dec
mov
xor
jmp
sti
pop
cmp
adc
add
sub
add
dec
daa
sbb
add
dec
mov
push
add
dec
sti
pop
pop
add
dec
sti
pop
pop
add
dec
out
add
sub
add
dec
daa
sbb
add
sub
add
dec
push
dec
or
ins
add
dec
mov
sbb
dec
sub
dec
mov
popf
sbb
add
add
add
pop
mov
sub
add
add
pop
mov
xor
add
in
movs
add
add
dec
mov
sub
sub
pop
int3
add
add
dec
mov
mov
in
jmp
sti
pop
hlt
add
sub
add
dec
push
dec
push
dec
mov
cmp
add
push
fstp
add
dec
or
cld
add
sub
add
dec
cmp
add
dec
push
dec
mov
fstp
add
dec
or
cld
add
sub
add
add
push
cmps
sbb
add
add
sti
pop
or
cmp
sbb
add
dec
sti
pop
adc
loop
out
add
cmp
sbb
add
dec
sti
pop
and
loop
out
add
add
jl
or
sbb
mov
add
sbb
(bad)
sbb
aas
sbb
retf
sbb
or
or
dec
add
sbb
aas
sbb
(bad)
sbb
rcr
sbb
rcr
aad
or
fs
sbb
fistp
in
or
jo
jmp
add
sbb
repz
clc
sbb
std
sbb
or
or
xchg
add
sbb
(bad)
sbb
rcr
sbb
rcr
or
or
jl
retf
sbb
aas
sbb
(bad)
sbb
rcr
sbb
rcr
retf
sbb
aas
sbb
(bad)
sbb
rcr
sbb
rcr
aad
or
adc
ficomp
fistp
in
or
and
jmp
add
sbb
repz
retf
sbb
aas
sbb
(bad)
sbb
retf
sbb
aas
sbb
(bad)
sbb
rcr
sbb
rcr
aad
or
ins
add
sbb
fistp
in
or
js
jmp
add
sbb
repz
clc
sbb
std
sbb
retf
sbb
aas
sbb
(bad)
sbb
retf
sbb
aas
sbb
(bad)
sbb
rcr
sbb
rcr
retf
sbb
aas
sbb
retf
sbb
aas
sbb
(bad)
sbb
rcr
sbb
rcr
aad
or
adc
sbb
add
push
add
add
add
add
pop
push
add
inc
add
push
add
inc
add
push
push
add
adc
push
add
push
push
add
stc
push
push
add
and
add
into
and
add
and
add
sbb
(bad)
sbb
fistp
into
and
add
mov
add
and
add
add
mov
add
test
mov
add
sbb
into
and
add
mov
add
rol
or
les
and
add
add
and
add
add
and
add
add
and
add
add
sbb
aas
sbb
(bad)
sbb
rcr
sbb
mov
add
sbb
aad
or
clc
add
sbb
fistp
in
or
add
jmp
add
or
out
sbb
add
add
int3
add
aam
aas
sbb
(bad)
sbb
mov
add
in
into
and
add
add
lods
or
add
mov
or
add
ror
and
add
or
and
add
or
and
add
or
and
add
or
add
cmc
or
add
add
and
add
add
or
and
add
add
add
sbb
lods
sbb
lods
sbb
lods
sbb
lods
sbb
lods
sbb
lods
sbb
mov
add
add
sbb
mov
test
test
and
or
pop
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
inc
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
aas
sbb
rol
call
aas
push
call
dec
push
call
add
push
dec
and
push
and
and
jbe
jle
mov
and
and
and
and
and
and
and
push
and
jb
mov
xchg
and
and
and
and
and
es
and
and
and
and
and
and
and
and
and
and
and
xor
ds
pop
and
mov
mov
and
or
ss
inc
es
es
es
and
es
cmps
es
es
es
shl
fisub
fbld
out
in
es
add
or
adc
push
daa
sub
xor
daa
push
daa
mov
xchg
daa
popf
daa
movs
daa
mov
daa
aad
jmp
daa
push
sub
sub
sub
ins
sub
xchg
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
pop
sub
push
sub
cmps
sub
sub
sub
sub
sub
sub
sub
sub
xor
sub
pop
sub
xchg
pushf
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
pop
sub
jbe
xchg
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
xor
ds
jbe
jge
xchg
leave
sub
or
cs
cs
cs
cs
outs
test
and
add
add
cmp
add
add
add
add
or
push
add
add
or
add
daa
add
add
add
add
sbb
add
add
add
and
pop
add
add
add
push
cmp
push
cmp
push
cmp
push
cmp
push
inc
adc
add
push
inc
adc
add
push
cmp
push
cmp
push
dec
adc
add
push
cmp
push
inc
adc
add
dec
push
dec
adc
add
push
adc
add
pop
adc
add
add
add
pop
adc
add
gs
push
push
outs
adc
add
jbe
add
dec
adc
add
adc
add
dec
adc
add
add
xchg
push
cmp
push
xchg
add
mov
add
add
add
add
mov
add
add
push
pushf
adc
add
push
pushf
adc
add
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
or
add
mov
or
add
pop
or
add
nop
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
xor
and
add
xor
and
add
xor
and
add
add
add
sub
add
dec
add
add
add
sub
add
dec
add
add
add
add
add
das
add
add
xor
add
push
add
add
add
xor
add
push
add
add
add
add
test
cmp
add
xchg
cmp
add
xchg
cmp
add
add
add
pop
add
add
(bad)
add
add
xlat
add
add
fadd
inc
add
add
add
add
fiadd
dec
add
add
add
add
fadd
dec
add
add
add
add
fiadd
push
add
add
add
add
loopne
push
add
add
add
add
loop
pop
add
add
add
add
in
pop
add
add
add
add
out
popa
add
add
add
add
call
add
add
add
jmp
add
and
test
add
add
adc
xor
clc
add
add
push
ds
dec
push
pop
push
arpl
add
add
add
add
add
add
inc
add
push
add
popa
add
outs
add
jge
test
lea
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xor
add
add
add
push
add
inc
add
add
push
add
add
cmp
push
add
add
cmp
add
add
add
push
add
add
inc
add
push
add
add
inc
add
push
add
add
inc
add
push
add
add
arpl
push
add
add
gs
push
add
add
addr16
push
add
add
imul
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
push
add
add
push
add
inc
add
add
push
add
inc
add
add
push
add
push
add
add
push
add
inc
add
add
push
add
add
push
add
inc
add
or
add
pop
add
inc
add
sub
add
pop
add
inc
add
pop
push
add
inc
add
ins
push
add
inc
add
adc
push
and
add
add
add
add
adc
add
add
xchg
push
add
add
add
add
mov
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
or
int3
sldt
add
add
add
or
mov
add
add
int3
push
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
add
adc
pop
add
pop
add
add
aas
add
inc
add
inc
add
inc
add
dec
add
dec
add
pop
add
pop
add
pop
add
imul
add
add
repz
add
add
js
cmc
push
add
add
js
repz
add
add
jp
cmc
push
add
add
jp
clc
push
add
add
jp
repz
add
add
jl
cmc
push
add
add
jl
clc
push
add
add
jl
sti
push
add
add
jl
repz
add
add
mov
add
add
add
push
add
add
fld
repz
add
add
sub
repz
add
add
sub
add
add
add
push
add
add
xor
repz
add
add
xor
repz
add
add
xor
add
add
add
add
add
push
add
add
cmp
repz
add
add
cmp
repz
add
add
cmp
add
add
add
push
add
add
inc
add
push
add
add
inc
add
push
add
add
inc
add
push
add
add
inc
add
push
add
add
dec
add
push
add
add
dec
add
push
add
add
dec
add
push
add
add
pop
repz
add
add
mov
repz
add
add
mov
add
retf
add
push
add
add
int
repz
add
add
iret
add
push
add
add
adc
add
add
add
push
add
sbb
daa
add
push
fadd
out
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
dec
add
sbb
add
sbb
mov
adc
retf
sbb
int3
add
sbb
add
sbb
add
sbb
ins
add
sbb
and
add
add
add
add
add
dec
gs
jne
dec
gs
jo
inc
jb
ja
gs
fs
jo
gs
xor
xor
xor
cs
ins
add
push
arpl
jns
je
ins
add
jne
add
jb
push
push
gs
bound
arpl
imul
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
inc
outs
jne
gs
je
jb
push
gs
fs
outs
ins
jns
outs
ins
ins
arpl
outs
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
je
outs
outs
popa
jb
pusha
xor
dec
gs
outs
ins
ins
arpl
outs
add
ins
ins
arpl
outs
pusha
xor
inc
je
jb
bound
add
imul
ins
add
arpl
je
outs
outs
add
ins
jne
push
jns
add
jns
fs
outs
ins
ins
arpl
outs
pusha
xor
dec
jne
je
arpl
je
gs
gs
je
add
imul
bound
xor
inc
popa
je
push
imul
jae
outs
outs
add
gs
jo
outs
add
jb
outs
addr16
jne
ins
fs
push
jns
je
ins
cs
gs
add
gs
add
jae
gs
cs
push
imul
jne
gs
bound
xor
dec
dec
imul
arpl
popa
ins
add
add
outs
je
popa
outs
fs
gs
inc
arpl
outs
pusha
xor
inc
jbe
outs
je
jb
jae
push
gs
push
gs
fs
push
jns
je
ins
cs
dec
add
je
jb
je
jb
dec
gs
bound
dec
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
outs
ins
ins
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
dec
dec
imul
arpl
outs
popa
jb
add
outs
ins
ins
arpl
outs
pusha
xor
dec
inc
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
jb
jo
jb
jns
outs
outs
add
ins
bound
push
jns
gs
inc
imul
ins
popa
addr16
dec
inc
jne
je
ins
inc
je
jb
bound
gs
jb
jbe
fs
dec
gs
bound
inc
imul
jb
outs
addr16
jb
je
jb
dec
inc
outs
ins
jo
jb
bound
xor
inc
dec
dec
inc
push
dec
dec
inc
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
arpl
jae
dec
gs
ins
jae
push
jns
je
ins
cs
arpl
imul
arpl
popa
ins
add
outs
dec
ins
jo
jb
outs
outs
popa
je
outs
outs
dec
gs
ins
add
gs
push
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
je
je
jb
bound
add
jb
ins
inc
jb
popa
jns
je
jb
bound
add
jb
push
inc
je
jb
bound
add
ins
popa
outs
popa
addr16
jns
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
gs
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jb
outs
add
je
xor
push
je
imul
popa
jb
jae
outs
add
ins
add
arpl
jns
push
popa
je
add
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
inc
outs
arpl
imul
bound
push
je
imul
je
jo
imul
jb
popa
ins
add
outs
popa
jb
push
gs
fs
inc
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
gs
je
outs
addr16
jns
je
ins
add
popa
je
outs
jb
dec
inc
add
ins
gs
je
gs
ins
add
ins
gs
outs
fs
imul
imul
gs
outs
add
arpl
jns
outs
outs
add
jo
outs
ins
popa
imul
gs
add
popa
jb
push
dec
inc
xor
popa
gs
jae
gs
cs
arpl
imul
je
addr16
jo
jns
dec
popa
jae
inc
ins
outs
jb
je
ins
add
je
outs
outs
jbe
jb
gs
push
jb
imul
add
ins
gs
arpl
jae
add
outs
popa
jb
push
jb
je
jb
push
popa
outs
outs
ins
add
je
add
ins
outs
jb
push
je
gs
ins
add
ins
gs
outs
outs
add
ins
gs
push
dec
dec
inc
js
gs
imul
gs
jns
je
ins
dec
outs
outs
add
jae
ins
bound
inc
jae
gs
bound
popa
ins
add
gs
fs
je
jb
add
addr16
outs
je
jne
ins
inc
js
gs
imul
jne
outs
je
js
gs
imul
popa
ins
imul
jb
jb
xor
dec
inc
jno
popa
ins
imul
jb
jb
xor
dec
inc
imul
jb
pusha
xor
dec
outs
je
xor
dec
inc
outs
jb
popa
je
jb
jbe
fs
dec
outs
je
add
outs
je
add
outs
je
xor
push
dec
outs
je
xor
push
imul
inc
jns
add
outs
outs
jbe
jb
imul
jo
inc
outs
fs
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jb
outs
addr16
gs
fs
dec
outs
je
ins
jo
gs
outs
je
fs
js
gs
imul
gs
je
add
je
jb
outs
arpl
add
je
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
popa
ins
imul
imul
jo
imul
imul
dec
inc
outs
jne
gs
je
jb
xor
dec
inc
outs
jne
gs
je
jb
inc
jb
popa
jns
dec
inc
imul
jb
inc
outs
jne
gs
je
jb
inc
imul
jb
inc
outs
je
jns
push
je
jne
je
popa
jns
jne
inc
je
jb
bound
add
outs
jne
dec
imul
push
popa
jns
imul
jae
jb
arpl
dec
outs
outs
add
je
outs
fs
popa
jae
add
jb
ins
gs
jb
outs
outs
add
gs
fs
outs
outs
add
imul
jb
push
popa
jb
ins
gs
jb
outs
imul
jbe
outs
je
outs
outs
add
addr16
popa
jb
ins
gs
jb
outs
jne
je
js
gs
imul
arpl
jae
outs
jae
fs
js
gs
imul
dec
ins
jo
jb
inc
je
jb
bound
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
outs
outs
ja
dec
fs
je
je
add
arpl
imul
imul
outs
je
je
add
outs
je
je
add
jb
popa
ins
push
jb
je
jb
push
jns
je
ins
inc
js
gs
imul
jae
popa
ins
add
jb
popa
ins
push
gs
fs
dec
push
inc
arpl
jne
je
dec
fs
je
je
push
gs
outs
arpl
push
imul
ins
bound
imul
push
dec
outs
je
jb
jne
je
fs
js
gs
imul
gs
fs
bound
je
js
gs
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
je
ins
gs
imul
fs
add
outs
je
ins
gs
gs
jo
jb
add
jae
je
bound
dec
outs
outs
imul
outs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
dec
bound
jae
popa
je
outs
outs
inc
je
jb
bound
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
inc
inc
push
inc
jb
jo
outs
push
gs
imul
imul
jns
je
push
jb
outs
jae
outs
jb
add
jns
je
push
je
gs
ins
add
ins
ins
gs
imul
imul
jo
outs
push
je
gs
ins
dec
outs
fs
fs
add
fs
gs
popa
outs
fs
add
je
outs
fs
outs
outs
add
popa
ins
imul
add
jae
gs
cs
gs
arpl
outs
cs
ins
imul
gs
je
jb
push
jne
je
ins
gs
gs
outs
fs
popa
outs
fs
add
inc
outs
fs
dec
jo
outs
fs
je
jo
popa
outs
fs
gs
push
jns
je
ins
cs
bound
dec
je
jo
gs
outs
outs
jae
add
je
inc
outs
outs
je
js
add
add
jae
gs
cs
bound
push
dec
add
outs
je
outs
ins
add
je
push
outs
push
gs
js
gs
imul
outs
je
arpl
jo
dec
popa
outs
popa
addr16
inc
imul
ins
push
popa
je
push
imul
ins
inc
jbe
outs
je
jb
jae
push
outs
popa
ins
gs
jbe
outs
je
jb
jae
dec
popa
ins
gs
popa
ins
jne
inc
outs
ins
ins
arpl
outs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jo
arpl
ins
imul
ins
gs
gs
imul
add
outs
imul
je
outs
outs
push
gs
imul
jae
gs
cs
outs
outs
imul
je
outs
outs
add
bound
jno
gs
add
jae
gs
cs
gs
dec
je
jo
bound
jno
gs
add
je
push
gs
gs
inc
popa
arpl
push
outs
ins
imul
je
ins
cs
gs
inc
popa
arpl
add
je
push
gs
gs
inc
popa
arpl
dec
gs
ins
add
jno
gs
inc
popa
arpl
push
outs
ins
imul
push
gs
outs
outs
jae
add
je
push
bound
jae
outs
outs
jae
add
je
push
je
je
jae
outs
fs
bound
popa
fs
outs
ins
ins
arpl
outs
add
bound
arpl
je
outs
outs
add
outs
arpl
jae
je
jb
dec
outs
outs
add
outs
arpl
jae
inc
imul
ins
inc
jbe
outs
je
popa
outs
fs
gs
push
outs
popa
ins
gs
jbe
outs
je
popa
outs
fs
gs
dec
outs
je
data16
imul
jb
add
gs
gs
jb
jo
outs
jb
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
gs
outs
outs
jbe
jb
gs
dec
push
jns
gs
gs
jb
jo
outs
jb
outs
outs
je
js
add
ins
jo
outs
outs
je
outs
outs
jbe
jb
gs
inc
gs
jb
jo
imul
imul
popa
je
push
je
ins
cs
gs
cs
gs
popa
jb
js
jb
jae
imul
outs
jne
inc
outs
ins
ins
arpl
outs
add
outs
jne
add
jo
jne
add
addr16
push
gs
jo
imul
je
push
jne
je
jb
push
jb
arpl
jae
push
inc
outs
ins
ins
arpl
outs
add
outs
arpl
jae
push
add
outs
arpl
jae
outs
fs
add
inc
ins
outs
bound
push
jb
jo
jb
imul
je
ins
cs
gs
dec
gs
outs
jb
dec
outs
outs
jb
popa
je
outs
outs
add
inc
outs
fs
outs
imul
inc
outs
outs
outs
arpl
outs
dec
outs
outs
jb
popa
je
outs
outs
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
ins
push
je
imul
je
ins
cs
popa
je
cs
jno
push
jns
gs
dec
bound
arpl
gs
add
jae
gs
cs
popa
outs
popa
gs
outs
je
dec
popa
outs
popa
gs
outs
je
bound
arpl
popa
jb
push
popa
outs
popa
gs
outs
je
bound
arpl
ins
ins
arpl
outs
add
outs
popa
gs
outs
je
bound
arpl
jne
gs
je
jb
dec
popa
outs
popa
gs
outs
je
popa
jae
dec
bound
arpl
popa
outs
popa
gs
outs
je
bound
arpl
outs
outs
imul
je
outs
outs
dec
popa
outs
popa
addr16
cmp
outs
fs
gs
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fs
bound
inc
gs
je
jo
inc
outs
ins
ins
outs
outs
add
push
cmp
outs
je
imul
gs
outs
outs
jae
data16
dec
jae
outs
add
jb
popa
jns
dec
popa
jbe
push
arpl
jo
inc
outs
outs
jae
jb
arpl
add
jbe
push
arpl
jo
push
popa
jb
ins
gs
jb
add
bound
arpl
jae
outs
inc
outs
outs
jbe
jb
add
outs
outs
inc
outs
outs
jbe
jb
gs
dec
jae
outs
inc
outs
outs
jbe
jb
gs
outs
ins
ins
arpl
outs
add
outs
outs
dec
popa
outs
fs
gs
dec
jae
outs
dec
outs
outs
jb
inc
je
jb
bound
add
outs
outs
push
jb
jo
jb
jns
je
jb
bound
add
outs
outs
push
gs
fs
imul
add
outs
outs
push
gs
fs
js
gs
imul
outs
push
gs
popa
ins
imul
inc
js
gs
imul
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
outs
push
gs
popa
ins
imul
outs
outs
push
outs
imul
xor
cmp
cmp
je
push
je
je
add
jb
popa
je
imul
outs
push
jb
je
jb
dec
jae
outs
push
jb
je
jb
js
gs
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
je
jo
inc
jb
ja
gs
fs
jo
gs
jno
imul
add
imul
pop
inc
imul
ins
popa
jae
add
arpl
inc
imul
ins
popa
jae
xor
cmp
arpl
inc
imul
ins
popa
jae
xor
add
arpl
inc
imul
ins
popa
jae
xor
cmp
arpl
inc
imul
ins
popa
jae
aaa
add
arpl
inc
imul
ins
popa
jae
xor
cmp
jb
jbe
je
dec
ins
jo
gs
outs
je
je
outs
outs
inc
gs
imul
inc
inc
xor
xor
sub
sub
sub
ss
xor
cmp
jge
dec
bound
jae
popa
je
fs
jns
imul
gs
je
jb
bound
add
arpl
gs
gs
ins
cs
je
jb
bound
gs
cmp
imul
gs
push
add
xor
cmp
ins
popa
jae
inc
xor
xor
add
push
cmp
cmp
xor
xor
inc
sub
sub
sub
sub
aaa
xor
xor
ss
jge
out
mov
out
mov
add
popf
mov
add
popf
mov
add
popf
mov
add
sahf
add
sahf
add
out
add
sahf
test
out
test
out
xchg
out
xchg
out
mov
out
mov
out
mov
out
mov
out
mov
out
lea
out
mov
out
pop
out
nop
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
xchg
add
sahf
cwde
add
sahf
cdq
add
sahf
call
sahf
pushf
add
sahf
popf
add
sahf
sahf
add
sahf
lahf
add
sahf
mov
add
sahf
mov
add
sahf
movs
add
sahf
movs
add
sahf
cmps
add
sahf
cmps
add
sahf
test
out
test
add
sahf
stos
add
sahf
lods
add
sahf
lods
add
sahf
scas
add
sahf
scas
add
sahf
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
sahf
mov
add
sahf
mov
add
sahf
mov
add
lahf
add
lahf
add
out
add
lahf
test
out
test
out
xchg
out
xchg
out
mov
out
mov
out
mov
out
mov
out
mov
out
lea
out
mov
out
pop
out
nop
add
lahf
xchg
add
lahf
xchg
add
lahf
xchg
add
lahf
xchg
add
lahf
xchg
add
lahf
xchg
add
lahf
xchg
add
lahf
cwde
add
lahf
cdq
add
lahf
call
lahf
pushf
add
lahf
popf
add
lahf
sahf
add
lahf
lahf
add
lahf
mov
add
lahf
mov
add
lahf
movs
add
lahf
movs
add
lahf
cmps
add
lahf
cmps
add
lahf
test
out
test
add
lahf
stos
add
lahf
lods
add
lahf
lods
add
lahf
scas
add
lahf
scas
add
lahf
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
lahf
mov
add
lahf
mov
add
lahf
mov
add
mov
add
out
add
mov
test
out
xchg
out
xchg
out
mov
out
mov
out
mov
out
mov
out
mov
out
lea
out
mov
out
pop
out
nop
add
mov
xchg
add
mov
dec
cmp
cmp
cmp
cmp
cmp
jne
pop
pop
add
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
inc
push
and
cmp
inc
popa
arpl
fs
outs
outs
outs
jns
outs
jne
dec
gs
outs
fs
gs
gs
je
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ins
jne
imul
add
push
gs
imul
cmp
cmp
je
add
add
ins
jae
add
ins
ins
add
fs
push
inc
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outs
jb
dec
outs
outs
jb
add
jb
popa
ins
imul
cmp
cmp
cmp
cmp
add
popa
jb
dec
bound
arpl
je
jb
inc
jb
popa
jns
push
jb
jo
jb
jns
popa
ins
add
ins
ins
outs
je
dec
outs
je
addr16
inc
ins
outs
popa
je
inc
outs
fs
bound
arpl
outs
fs
jb
popa
jns
inc
outs
outs
jae
jb
arpl
add
add
js
cmp
jae
add
outs
jo
jb
jns
push
je
jb
add
fs
je
add
inc
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
imul
outs
jae
outs
outs
jae
gs
gs
gs
outs
je
jns
add
xor
pop
je
imul
gs
ins
imul
jne
outs
inc
gs
jne
je
inc
ins
jo
jns
jbe
ins
jne
add
fs
je
je
outs
outs
add
fs
je
push
imul
gs
jb
ins
outs
jbe
push
popa
addr16
jo
gs
fs
je
jo
popa
je
add
and
cmp
ins
outs
arpl
jae
add
outs
arpl
jae
add
ins
gs
outs
xor
xor
xor
bound
sub
addr16
outs
je
add
xor
add
add
xor
add
push
cmp
cmp
cmp
cmp
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
dec
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
dec
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
dec
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
dec
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
dec
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
dec
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
dec
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
push
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
addr16
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
ja
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
inc
inc
inc
inc
cmp
inc
inc
inc
inc
inc
cmp
arpl
outs
jb
arpl
add
dec
cmp
cmp
cmp
je
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fs
je
push
outs
ins
imul
xor
cmp
jo
popa
je
push
outs
ins
imul
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
popa
ins
imul
je
ins
gs
gs
imul
cmp
push
gs
imul
push
ins
jne
imul
inc
outs
push
je
jb
add
outs
jo
inc
outs
push
je
jo
dec
outs
jae
popa
ins
ins
add
imul
add
outs
imul
add
jo
inc
outs
inc
jne
jo
push
js
cmp
cmp
pop
dec
popa
ins
add
push
cmp
popa
ins
jae
inc
gs
popa
jae
inc
outs
fs
pop
inc
jno
popa
ins
imul
outs
gs
popa
ins
imul
push
popa
jb
ins
gs
jb
add
je
inc
gs
push
push
inc
push
cmp
imul
bound
arpl
gs
jb
popa
ins
imul
arpl
jb
je
dec
jae
outs
add
popa
fs
jae
outs
add
outs
inc
outs
outs
jbe
jb
add
fs
inc
jb
outs
jb
jb
ins
outs
jbe
pop
inc
jb
outs
jb
push
jb
je
push
gs
ins
je
dec
jae
outs
push
gs
outs
outs
jae
add
inc
jb
outs
jb
push
jns
je
ins
cs
bound
dec
dec
je
jo
popa
outs
fs
gs
push
jb
arpl
jae
gs
gs
add
jae
gs
cs
bound
dec
dec
je
jo
popa
outs
fs
gs
addr16
dec
jae
gs
popa
bound
addr16
push
jb
jo
jb
jns
popa
ins
add
je
push
jb
jo
jb
jns
popa
ins
add
je
push
jne
je
inc
push
gs
push
outs
imul
jns
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
push
jns
add
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
ins
cs
inc
imul
ins
gs
imul
imul
add
outs
jae
add
je
push
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
pop
push
gs
outs
arpl
outs
outs
jo
popa
outs
fs
imul
pop
inc
outs
outs
jbe
jb
gs
add
gs
popa
ins
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
push
jb
je
push
je
je
add
je
inc
outs
jb
popa
je
imul
pop
inc
outs
jb
popa
je
imul
pop
dec
outs
fs
je
je
outs
outs
add
je
dec
outs
fs
je
je
outs
outs
add
je
push
jne
je
inc
push
gs
dec
outs
fs
je
push
gs
dec
outs
fs
je
push
gs
push
jne
je
dec
popa
ins
add
je
push
jne
je
dec
popa
ins
add
jne
push
je
push
je
jb
dec
bound
arpl
jb
je
inc
outs
fs
bound
arpl
jb
je
push
je
jb
inc
jb
popa
jns
push
jb
je
inc
outs
fs
jb
popa
jns
push
jb
je
push
jb
jo
jb
jns
popa
ins
add
imul
js
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
dec
jne
ins
add
imul
imul
imul
jb
je
push
popa
ins
jne
add
imul
outs
je
push
jb
je
push
push
jo
arpl
inc
js
cmp
cmp
cmp
cmp
cmp
dec
gs
outs
jb
je
ins
add
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outs
imul
imul
add
fs
outs
jbe
imul
push
push
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fs
je
push
outs
ins
imul
xor
cmp
outs
jo
ins
popa
je
dec
imul
xor
cmp
jb
inc
gs
imul
gs
bound
xor
cmp
jb
inc
gs
gs
jb
jo
imul
xor
cmp
outs
fs
je
bound
xor
cmp
jne
bound
dec
imul
pop
xor
cmp
gs
outs
jbe
dec
je
ins
dec
outs
je
jb
popa
ins
bound
add
je
ins
ins
inc
push
push
bound
xor
cmp
je
jb
pop
push
dec
push
inc
jo
bound
xor
cmp
je
jb
pop
push
dec
push
inc
jo
bound
xor
arpl
jb
jb
push
inc
push
cmp
cmp
add
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
gs
imul
imul
outs
outs
add
push
cmp
cmp
add
outs
arpl
outs
add
bound
push
push
push
cmp
cmp
cmp
cmp
cmp
cmp
add
ins
add
push
cmp
cmp
imul
outs
fs
je
add
outs
jbe
jb
gs
add
add
imul
arpl
jo
add
jae
outs
outs
jae
add
imul
outs
add
arpl
je
js
add
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
jb
je
jb
push
outs
outs
push
jb
je
jb
ja
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popa
push
arpl
jo
add
je
ja
add
push
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ins
add
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ins
bound
imul
bound
arpl
gs
ins
je
gs
js
cmp
cmp
cmp
xor
addr16
pop
cmp
cmp
xor
addr16
cmp
cmp
xor
push
imul
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
arpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ins
popa
je
push
cmp
cmp
cmp
cmp
push
jns
add
data16
outs
arpl
jno
popa
ins
jae
inc
imul
dec
gs
jne
add
je
push
imul
pop
dec
gs
push
push
jb
ins
inc
imul
addr16
push
je
dec
outs
ja
outs
jo
inc
jb
popa
je
jb
push
inc
jno
popa
ins
add
je
dec
popa
push
jb
addr16
dec
imul
ins
jo
jb
push
outs
add
je
push
outs
je
ins
push
arpl
fs
inc
jo
outs
add
je
dec
outs
addr16
add
jo
outs
fs
imul
gs
addr16
dec
jae
ins
imul
jb
add
je
inc
jne
jb
outs
je
push
add
je
dec
popa
outs
popa
addr16
push
dec
add
imul
jb
jne
je
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
inc
jae
imul
inc
jb
ins
add
je
dec
jae
jb
popa
jns
inc
gs
outs
gs
arpl
addr16
outs
je
add
je
outs
outs
jae
jb
arpl
jae
addr16
dec
jae
outs
jne
add
je
imul
je
dec
jae
bound
jb
arpl
gs
dec
jae
outs
je
jb
popa
arpl
addr16
dec
jae
outs
gs
arpl
gs
imul
outs
outs
add
je
dec
jae
popa
ins
jne
push
jns
add
je
outs
outs
jae
jb
arpl
add
je
dec
jae
outs
gs
arpl
add
je
outs
gs
arpl
gs
imul
outs
outs
add
je
dec
jae
ins
popa
jae
add
je
outs
je
jb
popa
arpl
add
je
inc
popa
jae
push
jns
add
je
ins
gs
outs
je
jns
add
je
gs
bound
add
je
imul
gs
jb
jo
jb
imul
pop
inc
jne
ins
dec
popa
ins
add
je
inc
jae
gs
bound
inc
imul
gs
add
imul
outs
gs
arpl
add
imul
gs
fs
imul
je
add
imul
dec
jae
imul
addr16
inc
arpl
imul
add
je
dec
gs
bound
push
jns
add
je
inc
outs
jne
je
inc
outs
jo
push
outs
add
add
je
dec
je
ins
add
je
outs
jne
gs
je
jb
inc
gs
outs
fs
popa
jb
ins
gs
jb
add
je
push
jb
jo
jb
jns
jns
add
je
popa
ins
jne
add
je
popa
ins
jne
add
je
inc
popa
outs
push
gs
add
je
inc
popa
outs
push
jb
je
add
je
jne
je
ins
inc
je
jb
bound
gs
fs
imul
push
imul
outs
ja
popa
je
push
imul
outs
add
je
bound
arpl
gs
je
imul
pop
dec
outs
jbe
jb
popa
outs
je
jne
je
jb
add
dec
jne
ins
dec
jb
ins
jo
jns
push
gs
popa
arpl
inc
outs
outs
arpl
add
jb
popa
je
push
je
jb
jae
imul
jbe
add
outs
ja
jb
inc
outs
outs
je
imul
imul
dec
data16
bound
jb
outs
add
je
inc
push
inc
outs
fs
imul
ja
jb
outs
jbe
jb
popa
outs
je
inc
outs
ins
jo
jb
dec
jb
imul
ins
jo
jb
add
ins
inc
outs
add
fs
gs
push
outs
push
jo
gs
outs
jbe
jb
popa
outs
je
push
jb
ins
add
push
jb
jns
dec
popa
jae
dec
outs
fs
data16
ins
push
je
jb
add
jb
add
push
popa
jb
add
gs
add
imul
outs
add
popa
fs
ins
ins
push
gs
add
imul
js
add
popa
fs
ins
ins
dec
imul
imul
outs
gs
push
gs
fs
ins
ins
inc
jns
gs
push
jb
je
inc
ins
ins
inc
jns
gs
dec
outs
jbe
add
jo
outs
fs
gs
add
je
imul
inc
imul
imul
popa
je
inc
imul
jns
inc
outs
ins
bound
add
je
imul
jns
popa
ins
add
je
imul
imul
je
outs
jae
outs
outs
add
je
imul
inc
gs
gs
jo
imul
dec
popa
jae
js
outs
jae
outs
outs
add
je
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
inc
gs
outs
ins
fs
popa
je
add
je
dec
push
push
gs
imul
pop
dec
gs
imul
dec
outs
imul
jbe
jae
addr16
inc
gs
jne
je
addr16
push
push
inc
cmp
inc
gs
jns
gs
addr16
push
outs
imul
gs
inc
push
inc
dec
dec
add
imul
gs
push
outs
jae
je
outs
outs
add
popa
fs
jns
gs
push
gs
fs
outs
je
xor
addr16
push
ins
popa
je
outs
jb
add
je
push
gs
imul
pop
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
push
outs
inc
popa
jae
ss
je
imul
ins
inc
popa
jae
ss
je
imul
outs
je
xor
push
outs
dec
outs
je
xor
push
outs
inc
outs
jne
ins
add
push
jae
outs
ja
jb
push
outs
push
jo
gs
dec
jae
push
jo
arpl
dec
jae
gs
gs
jb
imul
dec
jne
bound
add
dec
gs
gs
inc
outs
ins
jo
je
dec
popa
jae
add
js
inc
jns
gs
dec
gs
add
je
jne
data16
push
outs
inc
jb
popa
jns
addr16
inc
js
jae
jae
inc
gs
js
arpl
imul
ins
bound
inc
gs
popa
ins
add
je
inc
outs
fs
popa
jae
add
je
jae
gs
bound
popa
ins
add
je
jns
gs
outs
fs
ins
jo
jb
inc
js
push
add
gs
je
dec
outs
jae
popa
outs
arpl
dec
outs
jbe
dec
gs
add
je
inc
jne
jb
outs
je
inc
outs
jo
add
gs
jb
addr16
dec
gs
dec
popa
js
dec
imul
add
ja
push
jb
outs
arpl
add
je
popa
jb
ins
gs
jb
add
je
push
popa
jb
ins
gs
jb
jns
add
je
inc
imul
add
je
inc
jbe
outs
je
popa
outs
fs
gs
jns
add
je
jne
jb
outs
je
addr16
push
jae
jb
pop
gs
add
je
push
imul
gs
data16
je
popa
jae
push
imul
outs
jb
addr16
inc
outs
fs
push
je
gs
ins
add
outs
jae
popa
je
add
imul
inc
jb
popa
jns
inc
outs
outs
je
imul
jae
je
dec
je
ins
add
je
jb
inc
js
je
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
gs
jb
jo
jb
jns
push
gs
fs
je
imul
pop
dec
gs
jae
je
dec
push
add
gs
je
inc
arpl
jo
outs
jb
inc
gs
outs
fs
gs
addr16
dec
outs
fs
gs
popa
outs
fs
add
jae
ins
jbe
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
dec
gs
outs
fs
popa
outs
fs
add
je
push
gs
jb
push
jns
add
gs
je
inc
gs
gs
je
add
je
dec
inc
outs
gs
je
jb
inc
ins
imul
je
xor
inc
gs
gs
outs
fs
jb
ins
dec
popa
outs
fs
add
je
dec
jae
je
je
arpl
dec
fs
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
xor
dec
fs
jb
pop
push
add
ins
ins
add
ins
ins
jbe
jb
add
je
push
jb
arpl
jae
gs
gs
add
je
dec
jae
gs
popa
bound
inc
ins
gs
jb
gs
fs
add
gs
jb
outs
outs
je
outs
je
addr16
dec
jne
jo
je
addr16
push
gs
outs
outs
jae
add
fs
jb
outs
jb
addr16
inc
jb
outs
jb
addr16
inc
ins
imul
imul
inc
popa
ins
ins
bound
imul
outs
je
gs
outs
arpl
popa
fs
inc
push
add
fs
inc
gs
gs
add
fs
push
outs
popa
ins
gs
je
dec
outs
je
data16
imul
je
inc
outs
popa
bound
popa
imul
outs
je
add
je
inc
outs
popa
bound
popa
imul
outs
je
add
je
inc
jne
ins
push
popa
je
add
je
gs
imul
add
je
inc
imul
outs
outs
add
je
inc
jo
push
gs
imul
gs
je
add
je
inc
popa
arpl
push
outs
ins
imul
push
gs
outs
outs
jae
add
je
dec
gs
outs
add
je
inc
outs
outs
je
outs
je
jns
add
je
inc
outs
outs
je
outs
je
outs
addr16
add
je
push
imul
inc
gs
gs
gs
push
je
gs
ins
add
je
gs
outs
outs
jae
push
je
gs
ins
add
je
inc
outs
outs
je
outs
je
outs
addr16
add
je
dec
gs
fs
add
je
push
je
je
jae
outs
fs
je
inc
imul
jae
je
inc
jb
jne
outs
je
add
je
push
jae
push
push
js
arpl
add
je
inc
jb
popa
je
dec
outs
push
imul
gs
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
push
gs
popa
outs
fs
jb
inc
jb
outs
jb
jae
je
push
je
jb
dec
outs
outs
add
imul
je
inc
gs
jb
arpl
jae
jae
jns
popa
ins
add
je
push
push
jae
inc
ins
outs
jae
dec
popa
imul
ja
dec
imul
dec
popa
jae
js
je
add
je
dec
add
je
dec
popa
imul
add
je
dec
popa
outs
fs
add
je
jb
arpl
jae
jae
addr16
push
jb
arpl
jae
popa
ins
add
je
push
je
jb
dec
outs
outs
add
je
push
je
outs
fs
jb
dec
jne
jo
je
addr16
push
je
outs
fs
jb
inc
jb
outs
jb
inc
gs
jb
arpl
jae
jns
add
je
dec
outs
arpl
push
popa
je
add
gs
popa
jo
inc
popa
je
push
je
imul
inc
outs
outs
jbe
jb
gs
inc
popa
outs
inc
outs
outs
jbe
jb
inc
jb
ins
add
outs
jbe
jb
push
outs
dec
outs
jbe
jb
popa
outs
je
je
imul
jbe
jb
inc
jb
ins
dec
outs
jbe
jb
popa
outs
je
je
imul
jbe
jb
inc
jb
ins
add
outs
inc
outs
outs
jbe
jb
push
outs
add
je
inc
gs
jb
jo
imul
pop
inc
jb
jne
jae
addr16
inc
imul
inc
gs
push
inc
ins
outs
bound
push
jb
jo
jb
imul
inc
arpl
gs
fs
imul
jae
inc
gs
arpl
gs
arpl
outs
outs
outs
arpl
outs
jae
addr16
push
outs
jb
add
je
push
gs
outs
je
inc
outs
fs
outs
imul
pop
dec
jae
jne
ins
add
jbe
imul
je
outs
add
outs
fs
outs
fs
dec
outs
jae
jb
add
je
dec
popa
jae
popa
ins
jne
add
je
popa
ins
jne
dec
jb
gs
jne
je
push
gs
outs
jbe
inc
je
push
jb
inc
gs
popa
ins
jne
add
fs
popa
outs
add
je
dec
gs
add
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
jb
ins
gs
jb
add
jae
gs
cs
bound
dec
dec
je
jo
popa
outs
fs
gs
dec
jae
gs
popa
bound
push
jne
je
inc
push
outs
imul
jns
add
ins
jne
add
outs
jbe
jb
gs
add
dec
outs
fs
je
je
outs
outs
add
fs
je
push
jne
je
dec
popa
ins
add
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outs
gs
xor
cs
ins
add
fs
ins
cs
ins
add
popa
jo
cs
ins
add
jbe
jo
xor
cs
ins
add
jbe
jo
xor
cs
ins
add
gs
xor
fs
ins
add
gs
outs
jbe
fs
ins
add
jae
outs
fs
push
add
jae
ins
gs
push
add
outs
push
push
add
push
jne
jo
outs
fs
jb
arpl
jae
dec
jo
outs
push
jb
arpl
jae
inc
gs
outs
fs
gs
imul
js
inc
gs
jb
arpl
jae
ins
popa
addr16
imul
push
jne
jb
inc
jne
ins
push
jb
arpl
jae
ins
popa
addr16
popa
ins
add
gs
inc
outs
jae
gs
arpl
inc
ins
outs
jae
dec
popa
outs
fs
add
addr16
jo
outs
dec
gs
js
push
gs
jb
popa
je
dec
gs
js
push
gs
gs
popa
ins
jne
inc
js
push
gs
ins
outs
jae
dec
gs
push
gs
jne
jb
push
popa
ins
jne
inc
js
push
gs
gs
gs
dec
gs
push
gs
gs
gs
push
popa
ins
jne
add
addr16
outs
jne
dec
gs
js
push
gs
outs
jne
push
popa
ins
jne
add
addr16
jne
jb
dec
outs
outs
dec
gs
inc
gs
jns
je
ins
dec
gs
imul
gs
imul
push
outs
ja
xor
jb
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
inc
gs
outs
fs
gs
popa
outs
fs
add
je
jb
arpl
fs
jae
add
je
popa
jae
inc
jb
outs
jb
dec
jo
outs
push
jb
arpl
jae
outs
imul
inc
jne
ins
imul
imul
js
inc
jb
popa
je
inc
outs
jbe
jb
outs
ins
outs
je
ins
outs
arpl
inc
gs
jb
jns
outs
jbe
jb
outs
ins
outs
je
ins
outs
arpl
push
popa
imul
ins
gs
bound
arpl
gs
js
je
outs
fs
jb
arpl
jae
inc
jb
popa
je
push
jb
arpl
jae
jae
jae
jb
dec
gs
jne
dec
gs
jo
inc
jb
ja
gs
fs
jo
gs
xor
xor
xor
add
arpl
ins
imul
gs
cs
popa
je
add
inc
inc
cmp
xor
inc
cmp
sub
sub
inc
inc
cmp
xor
inc
jge
push
add
add
add
add
push
add
add
daa
push
add
add
add
add
int3
add
add
add
add
into
add
add
add
add
add
add
add
add
add
loop
aad
push
add
aad
xchg
add
or
jl
loope
fadd
add
push
add
add
add
add
add
icebp
add
or
addr16
add
add
add
push
add
add
add
sub
inc
add
add
add
inc
add
add
add
add
add
add
add
add
pop
jne
sbb
clc
add
inc
jle
inc
add
add
add
inc
add
add
xchg
add
add
add
and
add
outs
add
add
add
add
add
add
add
add
cmp
out
add
ret
add
inc
add
add
cdq
add
cmc
add
add
add
add
add
out
les
add
js
inc
add
add
add
dec
add
add
xchg
add
rol
add
add
add
add
in
lahf
add
inc
js
pop
add
add
add
inc
add
add
add
add
add
add
add
add
jecxz
fild
or
pop
add
add
add
add
add
dec
add
lods
add
add
add
sbb
jae
xchg
mov
add
repnz
add
add
add
add
leave
add
add
inc
add
add
add
add
add
sub
add
ins
add
add
add
add
add
add
add
add
add
add
int3
add
add
jne
push
add
das
js
inc
add
add
add
dec
add
add
xchg
add
rol
add
add
add
add
in
lahf
add
pop
ins
add
rol
xlat
add
je
in
mov
add
add
add
add
jmp
add
add
add
add
jbe
cmp
cdq
add
add
add
add
add
movs
add
add
add
rol
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
cmp
iret
add
add
rol
xlat
add
je
in
mov
add
add
add
add
leave
add
add
add
mov
add
add
add
push
add
rol
lods
add
add
add
add
add
add
add
add
add
add
add
rol
xlat
add
je
in
mov
add
add
add
add
jmp
add
add
add
add
jbe
cmp
add
add
add
sbb
add
add
repnz
add
add
add
add
leave
add
add
inc
add
add
add
add
add
sub
add
ins
add
add
add
add
add
add
add
add
add
add
int3
add
add
jne
push
add
das
js
inc
add
add
add
dec
add
add
xchg
add
iret
add
add
add
add
add
in
lahf
add
dec
js
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
fwait
add
add
add
adc
mov
add
add
add
lds
mov
add
repnz
add
and
jo
xchg
jecxz
jae
inc
add
add
add
add
add
(bad)
add
aam
jecxz
ins
add
out
add
sbb
jo
xchg
mov
add
repnz
add
add
add
add
leave
add
add
inc
add
add
add
add
add
sub
add
ins
add
add
add
add
add
add
add
add
add
add
int3
add
add
jne
push
add
inc
js
inc
add
add
add
dec
add
add
xchg
add
leave
add
add
add
add
add
std
add
add
add
mov
add
add
add
or
add
add
dec
js
pop
add
add
add
inc
add
add
add
add
add
add
dec
add
add
add
inc
rol
pop
add
aad
in
add
add
add
jae
xor
mov
rol
add
add
js
push
add
add
add
dec
add
add
test
pop
add
add
add
add
add
add
leave
add
add
inc
add
add
add
add
add
sub
add
ins
add
add
add
add
add
add
add
add
add
add
add
xor
add
inc
add
add
add
jae
add
rol
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pusha
add
add
add
inc
add
add
sbb
aad
loopne
imul
test
enter
test
pop
add
add
add
and
inc
add
add
add
add
xlat
add
add
add
add
pop
imul
out
jbe
inc
add
add
add
add
add
sub
add
ins
add
add
add
or
sahf
add
add
iret
add
add
or
mov
add
add
add
add
add
addr16
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pusha
add
add
push
add
leave
add
add
add
add
add
add
xchg
add
cmps
add
add
add
add
add
loope
rol
sbb
or
add
add
add
add
add
add
add
add
add
add
add
adc
inc
add
add
add
pop
add
add
or
ret
add
add
add
and
add
add
add
add
add
add
add
add
push
add
leave
add
add
add
add
add
add
xchg
add
cmps
add
add
add
add
add
loope
rol
sbb
or
add
add
add
add
add
add
add
add
add
add
add
add
add
leave
add
add
inc
add
add
add
add
add
sub
add
ins
add
add
add
add
xchg
add
add
iret
add
add
or
mov
add
add
add
add
add
jae
add
rol
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pusha
add
add
add
pop
add
add
and
pop
add
add
add
add
xlat
add
add
add
add
pop
imul
out
jbe
inc
add
add
add
add
add
sub
add
ins
add
add
add
add
add
iret
add
add
or
mov
add
add
add
add
add
sbb
rol
add
inc
add
add
add
add
add
add
add
push
pop
add
add
add
add
xlat
add
add
add
add
pop
imul
out
jbe
inc
add
add
add
add
add
sub
add
ins
add
add
add
sbb
call
add
add
or
mov
add
add
add
add
add
cmp
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
call
add
add
and
push
add
add
add
pop
add
add
test
pop
add
add
add
add
add
add
leave
add
add
inc
add
add
add
add
add
sub
add
ins
add
add
add
add
add
add
add
add
add
add
add
xor
add
inc
add
add
add
pop
js
pop
add
add
add
inc
add
add
add
add
add
add
lds
sti
add
push
add
add
test
pop
add
add
add
add
add
add
leave
add
add
inc
add
add
add
add
add
sub
add
ins
add
add
add
add
add
add
add
add
add
add
add
xor
add
inc
add
add
add
and
pop
add
add
add
inc
add
add
add
add
add
add
daa
jge
pop
add
add
add
push
add
add
add
add
add
add
inc
add
pop
imul
out
jbe
inc
add
add
add
add
add
sub
add
ins
add
add
add
add
add
add
add
add
adc
cmps
add
add
add
add
add
lods
add
add
test
pop
add
add
add
inc
add
add
add
add
add
and
(bad)
add
add
add
add
add
add
test
inc
add
add
add
add
pop
imul
out
jbe
inc
add
add
add
add
add
sub
add
ins
add
add
add
add
add
add
add
pop
add
add
mov
mov
xchg
add
aas
add
add
add
add
and
rol
add
inc
add
add
add
add
add
add
add
sub
pop
add
add
add
add
add
add
add
add
add
add
add
popa
imul
out
jbe
inc
add
add
add
add
add
sub
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
test
add
sub
pop
add
add
add
inc
add
add
add
add
add
add
add
add
clc
add
das
jle
pop
add
add
add
pusha
add
add
xchg
add
cmps
add
add
add
add
add
imul
out
jbe
inc
add
add
add
add
add
sub
add
ins
add
add
add
sbb
add
add
add
add
add
add
add
add
add
ins
add
add
dec
add
add
jmp
add
js
pop
add
add
add
inc
add
add
add
fild
xchg
add
dec
add
add
add
clc
add
das
push
add
add
pusha
add
add
xchg
add
cmps
add
add
add
add
add
imul
out
jbe
inc
add
add
add
add
add
sub
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
dec
add
add
jmp
add
pop
add
rol
adc
pop
add
add
add
add
add
or
inc
add
add
add
pop
pop
add
lds
add
pop
add
iret
add
add
popa
add
add
pop
pop
add
add
adc
pop
add
add
add
add
add
pop
imul
out
jbe
inc
add
add
add
add
add
sub
add
ins
add
add
add
push
add
add
add
add
verr
add
add
aas
add
add
add
add
or
lds
sti
add
push
add
xor
rol
mov
push
add
add
add
fild
mov
pop
add
sbb
or
jl
stos
add
add
add
enter
add
js
push
add
add
add
add
add
add
add
dec
add
add
stos
add
adc
push
add
add
add
dec
add
add
add
aam
inc
push
or
inc
add
add
add
add
js
push
add
add
add
add
add
add
add
add
daa
js
push
add
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
cmovns
inc
add
add
add
inc
add
add
or
add
add
add
daa
js
push
add
add
add
add
add
add
add
add
sub
rol
mov
push
add
repnz
add
add
add
add
add
or
rol
add
dec
add
sub
push
add
add
add
add
add
add
add
add
add
add
add
maxps
push
add
add
add
add
add
sub
push
add
add
add
add
add
add
add
add
add
add
add
sub
push
add
add
add
add
add
add
add
add
add
add
add
daa
js
push
add
add
add
add
add
add
add
add
cmovge
pop
add
add
add
dec
add
add
adc
pop
add
add
add
push
add
add
add
leave
add
add
inc
add
add
xchg
add
add
js
push
add
add
add
add
add
add
add
add
sub
push
add
add
add
add
add
add
add
add
add
and
adc
pop
add
add
add
add
add
sbb
pop
add
add
add
inc
add
add
xchg
add
add
pop
add
aam
repz
add
dec
add
iret
add
add
add
rol
mov
inc
add
out
add
add
fild
mov
pop
add
sbb
or
jl
stos
add
add
add
enter
add
add
add
add
dec
add
add
add
add
add
or
verw
jecxz
fadd
or
or
add
nop
add
imul
rol
cmps
add
add
add
add
add
add
add
add
add
add
add
daa
jns
push
add
add
add
inc
add
add
add
add
mov
add
add
add
add
pop
data16
add
add
add
add
add
add
add
add
add
add
add
aad
rol
add
add
pop
add
add
add
add
add
add
add
(bad)
add
sub
gs
add
add
add
add
add
add
add
inc
add
add
das
jns
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
xchg
add
call
add
add
add
inc
lea
inc
add
add
pop
add
enter
add
in
mov
add
jns
push
add
add
add
inc
add
add
add
add
scas
add
add
add
add
push
data16
add
add
add
add
add
add
scas
add
add
add
add
add
stos
add
add
add
add
add
add
cmps
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
stc
add
add
pop
add
add
sub
push
add
add
add
inc
add
add
add
add
scas
add
add
add
add
cmp
stos
add
aaa
push
add
add
add
add
add
jmp
add
add
sbb
inc
add
repnz
add
add
add
add
imul
mov
add
add
aaa
imul
mov
popa
add
in
mov
add
add
add
add
add
add
add
or
popf
add
inc
jle
pop
add
add
add
dec
add
add
add
add
add
or
verw
jecxz
fadd
or
pop
add
int
sub
pop
add
add
add
add
rol
add
push
add
pop
add
inc
add
add
add
add
aam
add
jle
pop
add
add
add
dec
add
add
add
add
add
inc
ins
add
add
add
inc
add
add
add
add
add
add
add
push
stos
add
add
add
add
add
pop
add
add
push
add
add
add
inc
add
add
add
add
mov
add
add
add
inc
add
add
add
add
push
data16
add
add
add
add
add
add
mov
add
add
add
add
add
stos
add
add
add
add
add
add
cmps
add
add
add
add
add
retf
add
push
add
add
add
or
leave
add
add
dec
add
adc
arpl
leave
add
add
inc
add
add
and
enter
pusha
add
out
add
add
add
add
add
add
emms
add
add
add
inc
add
add
sbb
pusha
add
add
add
dec
add
add
add
add
adc
popa
add
add
add
dec
add
add
add
into
add
add
dec
add
add
or
retf
add
add
dec
add
adc
jae
iret
add
add
inc
add
add
add
leave
add
add
inc
add
add
or
(bad)
add
add
inc
add
or
(bad)
add
add
dec
add
adc
iret
add
add
dec
add
add
add
emms
add
mov
push
add
add
sbb
jbe
aam
inc
jbe
push
add
add
add
add
imul
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
pop
add
add
add
add
add
add
loopne
fld
add
add
rol
rol
ja
dec
add
add
add
rol
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
rol
rol
ja
dec
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
fadd
imul
cmc
add
add
add
add
add
ins
ins
add
rol
rol
ja
dec
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
jmp
fiadd
or
sbb
xchg
add
imul
mov
add
dec
add
add
add
add
add
imul
js
addr16
add
add
add
sti
add
add
addr16
add
add
inc
add
add
add
add
add
inc
add
cmp
cmps
add
add
add
add
cmc
add
add
add
add
add
int3
add
add
add
add
cli
add
jnp
add
ret
add
add
inc
add
add
add
add
add
inc
add
cmp
cmps
add
add
fld
imul
cmc
add
add
add
add
add
int3
add
add
add
add
mov
add
out
add
add
add
add
rol
add
push
add
gs
add
lock
add
dec
add
add
mov
int3
add
add
rol
aam
pop
add
add
add
add
add
add
add
jp
add
mov
mov
add
loopne
jge
enter
in
add
add
add
add
ret
add
add
or
inc
add
add
add
add
lds
sti
add
push
add
add
add
rol
add
dec
add
or
pop
add
add
add
add
add
enter
pusha
add
add
jg
pop
add
add
add
add
jle
pop
add
add
add
pusha
add
add
xchg
add
add
jge
pop
add
add
add
push
add
add
add
add
add
add
add
adc
pop
add
add
add
add
add
sbb
inc
add
add
add
pusha
add
add
xchg
add
add
jnp
addr16
add
add
arpl
int3
add
add
add
add
add
add
add
dec
add
aad
scas
add
push
add
add
add
sbb
push
add
add
add
add
add
add
add
aaa
jns
push
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
adc
nop
add
add
add
add
xlat
add
add
push
add
add
add
add
lahf
add
jecxz
int3
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
cmp
push
add
add
add
inc
add
add
add
add
add
add
add
jp
repz
add
add
add
add
add
add
or
sbb
xchg
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
nop
add
add
add
adc
add
push
add
add
add
add
add
add
sub
rol
cmc
add
push
add
add
add
add
jecxz
fld
movs
add
push
add
add
ins
add
add
add
xlat
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
daa
push
add
add
dec
add
add
add
add
test
inc
add
add
add
add
add
add
sub
pop
add
add
add
dec
add
add
add
add
test
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
pop
dec
add
add
add
inc
add
add
add
add
sub
pop
add
add
add
dec
add
add
add
add
add
add
add
cmp
add
add
add
add
inc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
str
add
add
and
push
add
add
add
push
add
add
add
add
lahf
add
jecxz
int3
add
add
add
(bad)
add
add
add
daa
jnp
pop
add
add
add
add
add
add
add
test
inc
add
add
add
add
inc
add
or
jp
cmc
add
add
inc
dec
add
(bad)
add
add
add
add
add
add
add
inc
add
add
clc
add
add
or
xchg
enter
rol
sub
inc
add
add
xor
push
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
in
add
add
push
add
add
cmp
add
add
add
dec
add
add
add
rol
add
jbe
or
adc
add
add
add
xchg
add
add
add
add
inc
ins
add
rol
rol
push
dec
add
add
add
rol
add
jbe
or
adc
add
add
add
xchg
rol
add
add
add
adc
mov
xchg
add
add
pop
add
add
add
add
add
add
add
test
pop
add
add
add
inc
js
jp
loopne
les
push
add
rol
xchg
add
add
cdq
add
loope
les
mov
jno
data16
adc
ja
out
rol
cmp
cmp
lea
rol
or
rol
cmp
inc
add
mov
add
xor
retf
add
add
dec
add
add
sahf
add
jmp
add
add
add
add
adc
fwait
add
push
add
add
add
dec
add
add
sahf
add
jmp
add
add
add
add
adc
fwait
add
add
inc
add
add
add
add
add
add
adc
pop
add
add
add
inc
add
add
add
add
ins
add
rol
rol
ins
add
out
add
add
add
add
add
add
add
in
ret
add
add
add
add
add
add
add
dec
ins
add
leave
add
add
inc
add
add
add
add
add
push
add
pop
add
add
add
and
mov
rol
add
add
inc
add
add
add
add
xor
pop
add
add
add
inc
add
add
add
add
jmp
add
or
add
add
add
xor
add
add
add
je
in
mov
add
add
add
add
and
je
out
call
add
pop
inc
add
rol
loopne
aas
add
add
add
inc
js
jp
loopne
les
push
add
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
push
js
jp
loopne
les
push
add
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
add
outs
add
add
add
add
add
and
aad
icebp
add
dec
add
add
add
add
add
add
add
jno
add
loopne
les
push
add
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
pop
add
xor
pop
add
add
add
dec
add
add
add
add
add
add
or
ins
add
add
add
adc
xchg
add
dec
outs
add
add
add
dec
add
add
add
add
add
add
add
add
jmp
fild
adc
pop
add
add
add
add
push
add
add
add
add
loopne
les
push
add
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
pop
js
push
add
add
add
push
add
add
add
add
loopne
les
push
add
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
add
outs
add
add
add
add
add
mov
add
and
xchg
add
cwde
add
cli
add
add
add
repz
add
add
pop
js
jp
loopne
les
push
add
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
add
outs
add
add
add
add
add
mov
add
and
inc
add
add
add
inc
add
add
add
add
add
add
pop
add
ret
add
inc
add
add
add
leave
add
add
add
add
pop
add
rol
test
repnz
pop
dec
add
add
adc
push
add
add
add
outs
add
add
sbb
retf
add
add
dec
add
add
add
add
add
aas
pop
add
rol
cld
add
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
pop
add
ins
inc
add
rol
loopne
jbe
sbb
scas
add
add
add
add
lds
movs
add
dec
add
add
add
jecxz
fld
add
adc
fadd
lds
inc
add
add
add
push
add
rol
add
add
pop
add
push
add
jmp
add
add
add
add
add
xchg
add
add
add
add
add
add
or
push
add
add
dec
add
add
add
mov
jno
sbb
pop
add
add
add
add
inc
inc
add
int3
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
loop
loopne
add
add
add
add
pop
add
add
add
mov
mov
jnp
dec
add
add
add
cmc
add
and
iret
add
add
add
add
add
add
add
add
dec
add
iret
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
pop
add
xor
aad
in
add
in
add
add
add
add
add
add
add
add
add
jns
cli
add
add
cmp
ret
add
add
inc
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
rol
add
inc
add
add
add
add
add
add
add
add
in
rol
or
sbb
test
add
add
add
push
add
add
add
add
add
add
outs
add
add
add
add
cmps
add
add
add
aam
jecxz
ins
add
out
add
aas
add
mov
dec
add
add
add
add
test
inc
add
add
add
add
add
add
stos
add
add
add
add
iret
add
add
das
push
add
add
add
add
add
add
dec
add
pusha
add
add
add
add
sbb
inc
add
add
add
add
add
add
add
rol
in
ins
add
add
add
add
mov
gs
add
add
add
add
add
push
add
add
dec
add
add
call
add
add
add
add
add
add
add
add
dec
add
add
cdq
add
cmps
add
add
add
add
add
add
add
or
popf
add
add
add
sbb
cmc
add
add
add
add
add
cwde
add
add
add
add
mov
mov
push
add
mov
add
test
add
add
add
adc
rol
inc
popa
add
add
add
add
xor
add
into
add
add
add
in
mov
add
add
add
str
add
add
add
add
add
inc
outs
add
add
add
push
add
add
add
add
add
add
add
add
jmp
add
add
fadd
sub
add
add
cmp
inc
add
add
add
push
add
add
add
add
add
or
adc
cmp
in
add
add
add
add
add
add
add
add
inc
add
add
add
add
or
add
add
add
add
add
add
js
inc
add
add
add
dec
add
add
cwde
add
out
retf
add
add
dec
add
add
inc
jle
pop
add
add
add
dec
add
add
add
add
add
add
add
add
jmp
ret
add
adc
fwait
add
add
add
add
add
add
pop
jle
pop
add
add
add
dec
add
add
add
add
add
add
add
add
jmp
ret
add
adc
fwait
add
add
add
add
add
add
add
add
add
dec
add
push
add
nop
dec
add
add
add
add
and
mov
jmp
add
add
add
add
add
add
add
add
add
dec
add
inc
jle
pop
add
add
add
inc
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
pop
inc
add
fild
add
ret
add
inc
add
add
add
add
cwde
add
add
add
add
add
add
in
xchg
add
add
add
add
add
push
add
inc
jle
pop
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
out
add
add
add
lahf
add
add
add
add
inc
add
cmp
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
fadd
add
add
aam
inc
push
add
add
add
add
or
add
add
add
add
add
add
(bad)
mov
add
add
(bad)
add
add
dec
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
inc
outs
add
rol
inc
imul
mov
jmp
add
add
add
add
add
add
stos
add
add
add
add
add
add
ltr
cmc
add
add
add
add
rol
inc
imul
mov
jmp
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
or
ret
add
inc
add
inc
outs
add
rol
inc
imul
mov
jmp
add
add
add
add
add
add
stos
add
add
add
add
popf
add
pop
add
add
add
or
ret
add
add
pop
add
add
add
outs
add
rol
inc
imul
mov
jmp
add
add
add
add
add
add
mov
xchg
add
add
outs
add
retf
add
inc
add
add
add
add
daa
js
inc
add
add
add
add
lds
mov
add
add
add
add
add
sbb
push
add
add
add
add
ret
add
add
add
add
xor
ret
add
dec
add
add
cdq
add
out
les
icebp
add
inc
add
add
add
in
fld
inc
add
add
xor
pop
add
add
add
dec
add
add
add
add
add
add
add
inc
fild
inc
add
aad
add
js
inc
add
add
add
dec
add
add
xchg
add
jecxz
fiadd
mov
pop
add
and
add
add
add
add
add
xchg
add
push
ins
add
enter
ja
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
add
add
add
add
adc
int3
add
inc
ins
add
enter
ja
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmc
add
add
add
cmp
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
aas
ins
add
enter
ja
inc
add
add
add
add
add
add
add
add
add
add
add
add
adc
inc
add
push
push
add
add
inc
add
add
add
add
add
or
adc
jns
inc
rol
sub
sbb
mov
retf
add
add
add
add
or
sti
add
add
add
add
add
fadd
lods
add
or
push
add
add
add
cmp
inc
add
add
add
inc
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
sub
inc
add
add
add
dec
add
add
xchg
add
out
add
add
add
dec
add
add
inc
jle
inc
add
add
add
inc
add
add
add
add
scas
add
add
add
add
add
add
add
add
or
nop
add
add
add
add
add
add
add
ret
add
dec
add
add
cdq
add
out
add
add
add
add
dec
add
in
fld
add
jmp
add
mov
dec
add
add
add
add
add
add
jmp
fiadd
add
or
sbb
add
add
add
fild
add
mov
add
add
pop
add
add
add
inc
add
lea
or
pop
add
xchg
add
add
add
add
add
add
add
add
add
fadd
jl
jmp
add
add
mov
push
add
add
add
xchg
add
cmp
add
int3
add
add
add
add
add
or
add
loopne
les
push
add
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
jnp
mov
xor
movs
add
add
add
xchg
add
add
add
add
add
add
add
add
mov
add
add
add
(bad)
add
add
imul
add
add
add
add
add
add
push
add
add
add
daa
ins
add
leave
add
add
jb
out
add
add
add
add
add
add
add
ins
add
leave
add
add
jb
out
add
add
add
add
add
add
add
pop
ins
add
add
add
pop
add
add
add
add
rol
inc
popa
add
add
add
xchg
add
add
add
add
add
add
stc
add
add
add
add
add
pop
add
add
add
pop
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
pcmpgtb
inc
add
add
add
dec
add
add
or
test
add
dec
add
adc
pop
add
add
add
gs
add
pop
add
add
add
inc
add
add
add
add
lds
icebp
add
add
mov
add
add
xchg
adc
add
add
add
rol
cmc
add
push
add
add
add
add
enter
add
add
lds
icebp
add
add
ins
add
jmp
add
in
add
ins
add
jmp
add
add
or
mov
dec
add
xor
ret
add
add
icebp
add
xchg
add
add
add
add
add
add
stc
add
add
add
add
add
pop
add
add
add
add
ret
add
add
add
add
add
pop
add
add
add
add
add
sldt
cmp
push
add
add
add
add
add
add
call
add
add
inc
add
add
jge
stos
add
add
adc
nop
add
imul
push
add
add
add
add
ret
add
add
add
add
add
pop
add
add
add
add
add
adc
dec
add
add
add
dec
add
adc
dec
add
add
add
add
add
adc
jb
ret
add
add
push
add
add
addr16
push
add
add
add
inc
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
jle
mov
cmp
add
add
ret
add
inc
add
add
add
add
add
add
add
jg
fiadd
hlt
add
add
add
add
add
push
sbb
mov
add
add
adc
and
inc
add
add
pusha
add
add
lea
and
test
add
add
test
push
add
add
fiadd
lods
add
add
inc
push
push
add
add
add
inc
add
add
test
pop
add
add
add
add
dec
add
add
jecxz
les
adc
pop
add
add
add
add
dec
add
add
jge
push
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
fadd
movs
add
add
add
add
sbb
push
add
add
add
push
add
add
add
xor
inc
add
add
add
dec
add
add
xchg
add
cmps
add
add
add
add
add
add
add
add
add
add
cmp
dec
add
add
add
dec
add
add
cdq
add
out
add
add
add
add
add
add
add
add
pop
jl
je
hlt
add
add
add
add
add
add
add
add
add
dec
add
add
add
repz
add
add
add
dec
add
add
add
add
add
add
add
sahf
add
add
add
and
pop
add
add
add
pop
add
add
add
add
add
add
add
dec
outs
add
iret
add
add
dec
add
add
cdq
add
out
add
add
add
add
add
jmp
rol
sbb
pop
add
add
add
add
or
add
add
pop
jo
dec
add
add
add
add
add
add
add
add
xor
push
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
and
iret
add
add
add
add
add
test
pop
add
add
add
add
sbb
pop
add
and
push
add
add
add
inc
add
add
add
add
add
and
add
xchg
add
add
add
add
add
add
or
add
add
add
dec
add
add
add
outs
add
add
add
add
ret
add
dec
add
add
xchg
add
out
mov
mov
inc
add
dec
add
das
ins
add
add
add
add
add
add
add
add
add
jl
stos
add
sub
pop
add
add
loopne
repz
add
(bad)
add
hlt
add
add
add
add
add
stos
add
sub
push
add
add
add
inc
add
add
add
add
add
add
add
dec
add
add
cmp
add
push
add
add
dec
add
add
lahf
add
jecxz
retf
add
add
cmp
pop
add
add
add
add
add
add
xchg
add
jecxz
int3
add
add
add
add
add
add
sbb
pushf
add
add
nop
add
add
add
add
add
add
add
add
xchg
add
jecxz
int3
add
add
add
add
add
add
add
adc
add
add
add
add
add
pop
add
add
inc
add
add
add
add
add
add
add
call
and
iret
add
add
add
add
add
add
fwait
add
cmps
add
add
add
and
add
add
add
push
add
add
add
add
add
add
pop
add
ret
add
add
push
add
add
add
add
add
add
cmp
retf
add
inc
add
add
add
add
add
add
inc
add
add
stos
add
add
add
add
add
add
inc
ins
add
add
add
inc
add
add
add
add
add
add
add
add
out
rol
dec
add
add
add
add
add
pop
add
add
pop
pusha
add
add
add
add
add
add
add
test
push
add
add
add
add
add
add
dec
add
add
add
add
test
inc
add
add
add
add
pop
sbb
add
imul
icebp
add
dec
add
add
add
add
add
add
add
add
add
add
add
fadd
test
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
xor
add
cwde
add
imul
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
fadd
test
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
xor
xchg
add
add
add
sub
ret
add
add
dec
add
add
lahf
add
jecxz
out
add
add
add
add
loop
rol
add
data16
fadd
stc
add
dec
add
add
add
mov
jne
push
add
add
jecxz
fild
add
or
add
rol
(bad)
add
ja
repnz
add
add
cmps
add
add
sbb
(bad)
jl
stos
add
add
add
add
add
or
push
add
add
add
add
ins
add
add
add
dec
add
add
add
les
mov
dec
add
das
add
add
loop
rol
pop
add
aad
add
add
leave
add
add
dec
add
add
add
int
lea
js
push
add
add
add
add
add
add
add
add
add
add
add
verr
add
add
add
add
add
pop
clc
add
add
leave
add
add
dec
add
add
add
int
lea
js
push
add
add
add
add
add
add
add
add
add
add
add
verr
add
add
add
add
add
add
add
add
add
mov
sahf
add
inc
add
arpl
je
lock
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
jae
daa
add
add
add
add
aaa
add
mov
clc
add
add
add
addr16
ins
add
add
add
inc
add
add
add
add
add
add
add
add
clc
add
add
add
add
stc
add
add
add
mov
icebp
add
add
add
add
sahf
add
add
add
add
test
add
leave
add
add
dec
add
add
add
leave
add
add
add
jle
jmp
ret
add
add
add
add
add
adc
mov
fild
add
add
add
(bad)
add
add
inc
add
add
add
add
add
add
sbb
add
push
jmp
xchg
add
add
add
fadd
adc
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
rol
cmc
add
push
add
add
add
dec
add
add
add
dec
add
add
xchg
add
jmp
add
or
add
add
add
leave
add
add
add
add
add
add
add
inc
outs
add
add
add
add
mov
add
xchg
add
add
add
add
clc
add
add
add
add
add
or
pop
ins
add
rol
inc
popa
add
add
add
add
add
add
add
or
inc
add
add
add
add
pop
add
leave
add
add
add
add
sub
push
add
add
add
jge
icebp
add
add
add
add
add
adc
and
pop
add
add
add
add
in
add
add
add
add
add
rol
cld
add
add
out
add
nop
add
add
add
add
push
add
add
add
out
rol
inc
add
add
xor
rol
cld
add
add
out
add
nop
add
add
add
add
inc
add
add
jbe
inc
fadd
inc
add
add
and
pop
add
add
add
dec
add
add
mov
adc
add
add
aaa
ins
add
rol
fld
inc
add
repnz
add
add
cmps
add
add
sbb
(bad)
jl
stos
add
add
add
add
add
sub
jo
repz
add
push
add
add
xchg
add
lds
leave
add
add
inc
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
cmps
add
add
add
add
inc
add
add
jle
stos
add
add
test
mov
add
add
add
add
add
add
add
add
pop
push
add
add
dec
add
add
add
add
ret
add
push
push
inc
add
add
add
push
add
add
add
add
jmp
add
inc
add
add
add
add
adc
aad
rol
add
iret
add
dec
add
add
add
add
add
add
add
add
add
add
rol
mov
data16
in
add
add
add
add
add
add
clc
add
add
adc
fwait
add
add
add
rol
test
mov
add
add
add
add
add
add
add
out
add
add
add
add
add
inc
add
add
add
rol
test
mov
add
call
add
add
add
add
push
stos
add
add
add
add
add
inc
ins
add
rol
mov
data16
in
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
lds
sti
add
dec
add
add
add
movq
push
add
add
add
dec
add
add
sbb
pop
add
add
add
add
rol
add
add
add
out
add
outs
add
loopne
rol
push
add
aad
add
js
sbb
xchg
add
add
adc
sbb
xchg
add
add
adc
add
add
add
add
add
(bad)
add
add
add
add
adc
sbb
xchg
add
add
adc
add
add
add
add
add
loopne
les
push
add
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
mov
cwde
add
pop
add
js
sbb
xchg
add
add
or
push
add
add
add
inc
push
add
add
push
add
add
add
leave
add
sldt
add
in
fadd
adc
pop
add
add
add
pop
add
add
add
add
inc
add
rol
mov
add
add
add
dec
add
add
add
add
inc
add
retf
add
adc
pop
add
add
add
dec
add
add
adc
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
sbb
mov
inc
add
add
dec
add
add
add
add
add
add
add
add
add
pop
add
dec
push
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
cmovs
pop
add
add
add
pop
add
add
or
pop
add
add
add
or
mov
push
add
push
jle
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
and
ret
add
add
inc
add
add
add
add
repnz
add
add
jge
add
rol
cmc
add
add
icebp
add
add
add
add
or
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
pop
jmp
add
add
add
mov
add
mov
add
inc
cmp
lea
jecxz
add
add
rol
icebp
add
dec
add
add
add
add
cdq
add
jecxz
fiadd
movs
add
add
add
add
add
sbb
pushf
add
add
add
add
add
add
add
add
dec
jle
pop
add
add
add
push
add
add
add
add
add
add
add
add
out
add
add
add
add
add
cmp
dec
add
add
add
bound
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
jl
add
lea
out
add
add
add
add
add
ret
add
add
inc
add
add
add
add
out
add
add
add
add
push
stos
add
add
add
add
add
add
pop
add
add
add
add
jl
xor
add
add
add
add
xchg
add
add
add
add
sbb
ret
add
add
inc
add
add
add
add
call
pop
inc
add
rol
add
outs
add
add
add
imul
inc
push
add
jmp
add
add
add
add
add
add
adc
pushf
add
add
fild
add
inc
add
add
add
jl
ltr
add
add
mov
add
cmps
add
add
cmp
add
add
add
repnz
add
add
add
dec
add
add
jmp
rol
add
or
aad
xlat
add
add
inc
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
sbb
test
dec
add
pop
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
cmp
pop
add
add
add
add
add
add
add
add
add
in
fld
xor
adc
sahf
add
add
add
inc
outs
add
aam
inc
ja
add
icebp
add
add
add
add
add
add
jbe
inc
cdq
add
cmp
lea
aam
or
fiadd
cmp
add
add
cmp
inc
add
add
add
add
icebp
add
add
add
add
add
add
jns
in
xchg
add
add
add
add
add
aam
inc
ja
add
icebp
add
add
add
add
add
inc
add
jmp
fild
adc
sbb
fild
add
aam
inc
ja
add
icebp
add
add
add
add
or
pop
add
in
rol
add
pop
add
add
add
add
add
pop
add
add
add
add
add
ret
add
add
inc
add
add
add
add
call
add
dec
add
add
add
add
add
add
add
test
lods
add
add
add
add
add
ret
add
add
inc
add
add
add
add
call
add
dec
add
add
add
add
add
add
add
test
mov
add
add
add
ret
pop
jle
pop
add
add
add
inc
add
add
add
add
jmp
add
add
add
out
rol
inc
add
add
add
add
add
(bad)
mov
add
add
add
add
add
pop
jmp
add
pop
jle
pop
add
add
add
inc
add
add
add
add
jmp
add
add
add
out
xchg
add
add
add
add
add
add
or
scas
add
add
add
add
add
add
arpl
push
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
jnp
inc
xchg
add
add
add
add
add
add
add
sldt
add
add
add
add
add
pushf
add
add
add
add
rol
add
add
ret
add
add
inc
add
add
add
add
call
add
dec
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
add
add
add
cmp
imul
addr16
add
add
add
out
add
nop
add
add
add
add
inc
add
add
add
clc
add
add
add
add
popf
add
add
inc
add
add
add
add
add
add
add
add
cs
add
les
xor
std
add
pop
jle
pop
add
add
add
inc
add
add
add
add
jmp
add
add
add
in
xchg
add
add
add
add
add
add
or
scas
add
add
add
add
add
add
push
jle
pop
add
add
add
inc
add
add
add
add
call
add
dec
add
add
add
add
add
add
add
add
add
add
add
or
mov
add
add
add
add
add
add
adc
leave
add
add
push
add
add
add
sub
push
add
add
add
add
add
add
add
add
add
add
cli
add
pop
jle
pop
add
add
add
inc
add
add
add
add
jecxz
into
add
add
add
jge
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
icebp
add
dec
add
add
add
add
add
jecxz
xchg
add
add
push
bound
pop
add
add
add
push
add
add
add
add
add
add
add
stc
add
add
sbb
nop
add
sub
dec
add
add
add
add
add
add
add
sbb
add
add
dec
add
add
add
add
add
add
add
add
add
add
imul
add
add
adc
xchg
add
add
push
add
add
add
add
and
pop
add
add
add
scas
add
aad
cmp
scas
add
add
add
add
add
add
add
add
add
add
add
add
and
adc
fld
jno
jne
add
add
add
add
fiadd
in
push
add
call
add
add
push
add
add
add
add
ret
add
add
inc
add
add
add
add
inc
fadd
mov
or
add
jbe
stos
add
add
add
add
add
add
dec
add
add
add
daa
add
xchg
in
jl
push
add
add
add
add
test
adc
add
add
inc
add
xor
pop
add
add
repnz
add
add
add
add
dec
add
add
ins
add
add
add
add
add
daa
bound
pop
add
add
add
dec
add
add
add
add
cdq
add
rol
mov
dec
add
inc
add
and
xchg
in
push
dec
add
add
add
add
add
add
add
jbe
add
push
add
and
int
inc
push
push
add
add
add
add
cdq
add
rol
rol
mov
add
or
add
add
add
cli
add
add
add
add
add
add
add
add
arpl
mov
add
add
add
add
pop
add
add
add
add
add
and
inc
add
add
add
add
add
nop
add
pushf
add
add
add
add
add
rol
inc
add
add
add
add
add
add
add
retf
add
add
add
add
test
add
add
add
add
clc
add
add
add
add
add
add
mov
add
or
sub
add
mov
mov
add
add
add
add
inc
add
add
add
add
add
dec
add
add
out
rol
inc
add
mov
xchg
add
call
add
add
add
and
sub
pop
add
add
pusha
add
add
les
xor
hlt
add
add
inc
add
add
inc
jg
std
add
add
add
adc
aam
data16
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
jno
jae
scas
add
outs
add
add
or
pop
add
add
add
sub
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
or
inc
add
add
add
pop
inc
add
fild
ret
add
dec
add
add
add
pop
add
add
add
add
add
adc
retf
add
inc
add
add
add
push
outs
add
(bad)
add
add
push
add
add
add
add
add
pop
add
cmp
jecxz
fld
inc
add
add
popf
add
add
pop
add
add
add
add
add
add
rol
std
add
push
add
add
add
adc
pop
add
add
add
pop
add
add
jns
push
add
add
add
dec
add
add
add
add
add
dec
add
add
add
adc
call
add
add
push
add
add
add
add
add
add
add
add
jp
mov
data16
add
add
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
mov
mov
add
daa
add
add
add
rol
add
pop
add
(bad)
add
add
inc
add
add
add
push
push
add
add
push
add
add
xchg
add
jecxz
mov
mov
inc
add
dec
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
sbb
inc
add
add
add
arpl
repz
xchg
add
repnz
sbb
inc
add
add
add
popa
add
add
add
add
sbb
inc
add
add
add
popa
add
add
add
add
jns
add
enter
jno
dec
add
add
add
add
add
add
add
jge
in
ret
add
sbb
add
add
add
add
add
(bad)
mov
add
add
add
add
add
mov
in
mov
add
cmp
cdq
add
lods
add
add
and
add
or
add
add
enter
jno
dec
add
add
add
add
add
add
add
add
jmp
add
add
add
dec
add
add
add
add
add
add
lea
inc
mov
add
add
add
add
add
add
add
add
add
dec
add
ret
add
add
dec
add
add
add
inc
add
xchg
aam
pusha
add
loop
mov
add
add
add
add
add
add
inc
ret
add
add
call
add
add
add
add
add
add
add
add
push
add
or
rol
cld
add
pop
add
add
add
add
add
add
add
add
add
add
or
adc
jno
jmp
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
jg
dec
add
add
add
add
add
add
add
add
add
jno
in
les
adc
pop
add
add
add
add
add
adc
inc
add
add
add
push
add
add
add
ret
add
add
add
jg
dec
add
add
add
add
add
add
add
add
add
stc
add
add
add
jg
dec
add
add
add
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
xor
and
pop
add
or
retf
add
add
push
add
jg
add
retf
add
add
push
add
add
add
add
repz
add
add
add
jno
in
add
add
add
add
add
(bad)
mov
cld
add
add
add
add
aaa
add
pushf
add
add
add
add
add
add
add
add
out
add
add
add
or
aam
test
add
add
retf
add
add
push
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
mov
add
add
jae
add
retf
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
push
add
add
add
add
add
add
int3
add
add
add
sub
test
mov
inc
add
mov
add
jne
add
retf
add
add
push
add
add
add
add
add
add
add
add
inc
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
sbb
test
and
inc
add
add
add
add
add
add
rol
add
push
add
add
add
aam
test
aad
stos
add
add
add
dec
add
enter
ja
dec
add
add
add
add
add
add
add
add
in
add
enter
ja
jbe
clc
add
add
push
jg
dec
add
add
add
add
add
add
add
add
add
in
rol
pop
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
aad
in
and
add
add
add
xchg
add
add
add
add
add
jbe
stos
add
add
add
call
add
ret
add
push
add
add
add
add
retf
add
add
inc
add
add
add
add
add
add
adc
lods
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
or
add
add
add
test
pusha
add
add
add
inc
add
add
add
add
loope
outs
add
add
add
add
add
or
rol
add
add
push
data16
add
add
push
add
add
add
add
cwde
add
repnz
add
add
push
add
add
add
add
sbb
xchg
rol
add
add
pop
add
mov
add
add
add
add
add
add
sbb
push
add
add
add
push
add
add
add
add
jns
add
enter
jno
dec
add
add
add
add
add
add
add
add
add
add
pushf
add
add
fiadd
cmp
dec
add
add
add
or
cmp
xor
pop
add
add
popa
add
add
xchg
add
add
add
add
add
add
add
or
iret
add
add
push
add
sub
xchg
add
add
add
add
add
add
add
add
add
adc
ins
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
adc
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
retf
add
inc
add
add
add
add
add
add
add
add
in
fadd
adc
pop
add
add
add
pop
add
add
push
inc
add
add
add
inc
add
add
add
add
add
add
add
jbe
out
add
add
or
pushf
add
add
xchg
add
xor
inc
add
add
add
inc
add
add
add
add
add
add
add
bound
out
add
add
add
add
jnp
pop
add
add
add
dec
add
add
add
add
add
add
add
add
jecxz
lds
add
sbb
fild
add
jle
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
retf
add
push
add
add
test
pop
add
add
add
pop
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
dec
add
add
add
add
add
pop
ins
add
rol
fild
jb
dec
add
add
add
add
adc
pop
add
add
add
dec
add
add
add
add
inc
add
aad
jecxz
add
in
out
add
or
add
add
cmp
add
add
adc
cld
add
add
add
add
add
add
pop
add
xor
add
add
add
add
rol
jnp
add
rol
add
inc
add
add
add
add
add
das
add
add
add
add
add
add
add
loope
cwde
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
jnp
add
rol
add
inc
add
add
add
add
add
das
add
add
add
add
add
add
add
in
add
add
add
add
sbb
aam
mov
mov
push
add
test
jg
jecxz
int
str
add
add
clc
add
add
add
dec
push
add
add
jno
hlt
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
dec
push
add
add
jno
hlt
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
dec
push
add
add
jno
hlt
add
add
add
add
dec
add
add
add
add
add
add
add
add
inc
add
add
add
add
jl
add
add
add
rol
fld
imul
add
add
add
add
add
add
inc
add
add
or
add
add
add
dec
add
mov
add
add
add
add
jno
add
rol
fld
imul
add
add
add
add
add
add
inc
add
add
add
add
add
add
mov
add
add
add
add
add
int3
add
add
add
add
call
add
jg
cmc
add
add
add
add
add
push
add
add
add
add
add
add
inc
add
add
pop
add
add
add
mov
add
add
add
add
add
imul
add
xchg
add
add
mov
daa
add
add
cmc
add
inc
mov
mov
add
outs
ins
add
rol
fld
imul
add
add
add
add
add
add
inc
add
add
add
fiadd
int
sbb
popf
add
add
verr
add
add
add
add
inc
add
add
dec
add
add
add
add
add
add
leave
add
add
jno
in
mov
fadd
push
lahf
add
inc
jmp
mov
inc
add
or
adc
add
sbb
add
jmp
add
add
movs
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
inc
add
add
add
add
leave
add
add
inc
add
add
add
add
add
inc
add
out
repz
inc
add
add
add
add
add
add
add
add
out
rol
add
add
add
jmp
add
add
movs
add
retf
add
add
add
add
add
add
or
nop
add
add
add
add
add
add
rol
ret
add
call
add
test
push
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
leave
add
add
popa
add
add
add
xor
jo
jmp
add
add
movs
add
retf
add
add
pop
add
inc
add
add
add
add
add
jmp
add
add
add
aam
out
pushf
add
add
add
add
add
add
add
add
add
push
add
adc
sbb
xchg
add
add
add
aas
data16
add
add
add
add
add
add
test
adc
add
add
add
ja
in
xchg
add
add
add
add
add
sldt
add
ins
add
rol
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
punpckldq
jo
mov
fadd
push
add
rol
add
aam
cmc
add
dec
add
add
add
adc
aam
inc
push
add
add
or
add
add
inc
ins
add
add
add
inc
add
add
add
add
add
or
add
add
add
add
add
add
add
cmc
add
or
add
add
push
add
add
test
gs
add
add
add
add
imul
add
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
xchg
add
add
out
add
add
add
ret
add
add
fiadd
inc
add
add
add
add
add
or
add
add
push
add
add
test
gs
add
add
add
add
imul
add
add
add
add
add
add
add
add
ins
add
add
add
mov
mov
add
stos
add
add
test
fld
dec
add
mov
add
add
rol
add
add
add
loopne
cmp
and
add
add
retf
add
push
add
add
test
pop
add
add
add
pop
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
pusha
add
add
add
push
add
add
add
add
add
sldt
imul
add
add
adc
nop
add
cmp
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
dec
pusha
add
add
add
push
add
add
add
add
add
add
add
add
add
sbb
pushf
add
add
add
or
mov
rol
xchg
add
add
add
add
inc
pusha
add
add
add
push
add
add
add
add
add
or
adc
ins
add
add
add
add
call
add
add
push
add
add
outs
add
ret
add
add
push
add
add
add
add
add
add
inc
add
jecxz
fild
add
xor
xchg
add
add
popf
add
add
or
add
nop
add
add
add
add
cwde
add
add
add
jl
out
jge
add
add
outs
add
ret
add
add
push
add
add
add
add
add
add
add
cmp
int3
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
inc
add
add
xor
loope
push
add
add
add
add
mov
adc
stos
add
out
add
add
add
add
add
add
add
outs
add
ret
add
add
push
add
add
add
add
add
add
add
add
stc
add
add
adc
test
rol
add
add
add
add
mov
add
add
add
add
add
ret
add
add
add
mov
add
mov
add
mov
add
add
add
add
add
add
push
add
add
add
ret
add
add
push
add
add
add
add
add
add
add
add
stc
add
add
adc
test
rol
add
add
add
add
mov
add
add
add
add
add
lea
lock
add
add
popa
outs
add
ret
add
add
push
add
add
add
add
add
add
add
add
stc
add
add
adc
test
rol
add
add
add
add
mov
add
add
add
xor
inc
add
add
cs
add
add
jnp
add
ret
add
add
push
add
add
add
add
add
add
add
add
stc
add
add
adc
test
rol
add
add
add
add
mov
add
add
add
add
add
add
push
add
test
add
add
data16
add
mov
add
push
outs
add
ret
add
add
push
add
add
add
add
add
add
add
add
stc
add
add
adc
test
rol
add
add
add
add
mov
add
add
add
add
adc
int3
add
add
add
add
push
add
add
add
add
add
add
add
add
stc
add
add
adc
test
rol
add
add
add
add
mov
add
add
add
add
add
add
add
lea
jmp
add
add
nop
add
add
add
mov
add
add
add
add
add
add
popa
outs
add
ret
add
add
push
add
add
add
add
add
add
add
add
stc
add
add
adc
test
rol
add
add
add
add
mov
add
add
add
add
add
scas
add
add
sti
add
add
add
add
imul
repz
push
add
add
add
add
add
add
add
cmp
retf
add
add
add
add
add
add
add
add
add
add
add
add
and
add
pushf
add
add
add
add
mov
js
cmps
add
add
or
add
add
push
add
add
add
add
add
add
add
add
stc
add
add
adc
test
rol
add
add
add
add
mov
add
add
add
add
add
add
add
lea
jmp
add
add
nop
add
add
add
mov
add
add
add
add
add
add
add
inc
add
dec
add
add
add
push
add
add
add
add
add
add
add
add
stc
add
add
adc
test
rol
add
add
add
add
mov
add
add
add
add
add
lahf
add
add
add
add
add
sbb
push
add
add
add
dec
add
add
add
add
icebp
add
add
adc
mov
add
add
xchg
add
cmc
add
add
sub
jmp
add
rol
pushf
add
add
mov
addr16
add
add
add
add
sub
mov
and
inc
add
add
add
inc
add
add
add
add
add
add
add
add
jnp
inc
add
add
add
inc
add
add
add
xor
pop
add
add
add
add
mov
add
xchg
add
add
add
add
add
stos
add
add
add
add
rol
inc
popa
add
add
add
add
add
add
add
add
or
jle
cmc
add
add
add
jg
inc
add
add
add
pop
push
add
add
dec
add
add
cdq
add
add
or
inc
add
loop
fadd
adc
adc
xchg
add
cmp
add
add
add
add
add
add
add
sub
inc
add
add
add
ja
out
add
add
add
add
add
add
and
pop
add
add
add
push
add
add
add
add
add
adc
pop
add
add
add
dec
add
add
add
aad
in
add
in
add
add
add
test
verr
add
iret
add
add
push
add
add
add
add
add
add
iret
add
add
push
add
add
add
add
sbb
addr16
add
add
inc
add
add
add
add
adc
rol
loopne
aas
add
add
add
add
add
hlt
add
add
inc
add
add
add
aad
in
add
in
add
add
add
retf
add
dec
add
add
add
rol
loopne
jne
dec
add
add
add
rol
in
ins
add
add
add
add
lahf
add
cmc
add
add
add
add
repz
add
pop
outs
add
add
add
inc
add
add
add
add
add
add
adc
inc
add
add
add
add
add
sbb
addr16
add
add
inc
add
add
add
pop
bound
pop
add
add
add
add
add
add
add
add
add
rol
mov
push
add
cmc
add
add
add
add
add
add
add
add
add
popf
add
add
inc
add
rol
add
add
add
cwde
add
add
test
add
pop
push
add
add
dec
add
add
cdq
add
cmps
add
add
add
add
jbe
jmp
add
add
add
add
add
adc
mov
add
add
add
add
add
aas
outs
add
add
add
add
add
add
cwde
add
cmps
add
add
add
add
add
add
add
movs
add
add
add
add
add
ins
add
rol
inc
popa
add
add
add
add
add
add
add
add
ins
add
add
add
inc
push
add
add
dec
add
add
cdq
add
cmps
add
add
add
add
add
add
add
add
add
add
inc
add
and
pop
add
add
add
push
add
add
add
add
add
xor
pop
add
add
add
dec
add
add
add
add
add
add
add
add
inc
fild
inc
add
aad
add
add
rol
lds
jbe
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
rol
xchg
add
add
add
add
add
aaa
add
pop
clc
add
add
add
add
add
rol
lds
jbe
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
rol
xchg
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
ret
add
add
push
add
add
add
add
add
or
adc
push
in
lds
add
add
add
outs
ins
add
rol
lds
jbe
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
rol
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
inc
add
add
add
add
add
add
add
add
or
adc
push
in
lds
add
add
add
cmp
ret
add
add
inc
add
add
add
lds
mov
inc
add
add
add
add
cmp
xchg
(bad)
add
add
add
sldt
aas
push
add
add
inc
add
add
add
lds
mov
inc
add
add
add
add
or
nop
add
add
rol
cmp
add
inc
js
jo
jmp
add
add
add
cmps
add
add
add
add
in
test
push
add
add
add
add
add
or
pop
add
add
add
add
pop
add
rol
icebp
add
or
pop
add
add
add
sub
lds
loop
push
push
add
add
add
add
add
dec
add
add
add
or
push
add
add
add
pop
push
add
enter
test
jo
jmp
add
add
movs
add
retf
add
add
pop
add
inc
add
add
add
add
add
add
add
add
push
add
add
add
add
add
lahf
add
add
mov
jb
cwde
add
cli
add
add
add
fild
ltr
add
add
jg
add
loopne
les
push
add
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
rol
mov
add
add
add
arpl
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
stos
add
add
add
cdq
add
add
jns
add
loopne
les
push
add
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pusha
add
add
add
pop
add
add
call
aaa
js
jp
loopne
les
push
add
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
or
add
loopne
les
push
add
rol
xchg
add
add
lahf
add
hlt
add
add
add
add
add
add
add
add
add
add
add
rol
test
xchg
jbe
sbb
add
dec
add
call
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
iret
add
add
add
add
add
add
push
js
ins
add
add
add
outs
add
add
add
fadd
xchg
add
dec
add
add
add
out
in
add
or
test
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
outs
add
add
add
fadd
xchg
add
dec
add
add
add
out
in
add
or
test
add
add
add
add
mov
mov
add
add
add
add
add
add
push
js
ins
add
add
add
outs
add
add
add
fadd
xchg
add
dec
add
add
add
out
in
add
or
test
add
add
add
add
mov
mov
add
add
add
add
add
addr16
jo
jmp
add
add
movs
add
retf
add
add
pop
add
inc
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
pop
add
add
add
movs
add
add
add
aaa
js
jp
loopne
les
push
add
rol
xchg
add
add
test
push
add
add
add
sbb
inc
add
out
add
add
add
pushf
add
add
add
push
bound
inc
add
add
add
dec
add
add
add
add
add
add
add
add
jmp
aam
or
add
add
into
add
pop
add
add
add
add
add
add
add
loopne
les
push
add
rol
xchg
add
add
mov
add
add
aas
js
jp
loopne
les
push
add
rol
xchg
add
add
xchg
add
hlt
add
add
add
add
add
add
or
add
add
adc
add
js
jp
loopne
les
push
add
rol
xchg
add
add
cdq
add
out
add
add
add
add
add
add
add
js
jp
loopne
les
push
add
rol
xchg
add
add
cdq
add
out
add
add
add
add
add
loop
ret
add
add
add
sbb
aam
loop
pusha
add
add
add
add
add
dec
js
jp
loopne
les
push
add
rol
xchg
add
add
xchg
add
hlt
add
add
add
add
add
add
or
add
add
adc
test
fld
xchg
add
add
outs
add
retf
add
dec
add
add
cdq
add
loop
int
mov
add
add
add
add
add
add
add
add
add
iret
add
add
push
add
add
add
add
add
add
das
arpl
push
add
add
add
push
add
add
add
add
add
add
add
add
in
lea
inc
add
sbb
push
add
add
add
inc
add
add
add
add
cwde
add
cmps
add
xor
retf
add
add
inc
add
add
add
add
add
add
pop
add
add
push
add
add
add
add
jo
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
lahf
add
add
sbb
push
add
add
add
inc
add
add
lahf
add
add
iret
add
add
push
add
add
add
test
icebp
add
dec
add
add
push
out
add
add
sub
pop
add
add
add
push
add
add
add
test
icebp
add
inc
add
add
add
add
add
iret
add
add
push
add
add
add
test
icebp
add
inc
add
add
add
add
add
push
add
popf
add
add
add
inc
add
add
add
adc
dec
add
add
add
push
add
add
add
iret
add
add
push
add
add
add
test
icebp
add
push
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
jle
pop
add
add
add
push
add
add
add
test
icebp
add
push
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
push
add
movs
add
xchg
cmp
xchg
add
add
xor
pop
add
add
add
push
add
add
add
test
icebp
add
pop
add
add
dec
add
add
add
add
push
jle
pop
add
add
add
push
add
add
add
test
icebp
add
push
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
jg
sldt
aas
jle
pop
add
add
add
push
add
add
add
test
icebp
add
inc
add
add
add
add
add
add
add
sbb
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
mov
add
add
add
add
add
push
add
add
add
add
cmps
add
add
add
add
add
add
add
and
icebp
add
data16
add
je
mov
inc
jg
add
add
rol
add
inc
add
add
add
add
add
and
xor
add
add
add
add
add
add
add
push
add
add
add
add
add
add
imul
in
jb
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pusha
add
add
add
pop
js
jl
loop
add
js
push
add
add
add
add
add
add
sbb
push
add
add
add
inc
add
add
add
pop
jns
push
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
outs
add
add
add
add
add
inc
jae
gs
add
add
add
add
add
add
add
inc
add
in
fild
or
adc
nop
add
cmp
pop
add
add
cmp
rol
inc
imul
mov
jmp
pop
add
add
add
add
add
push
out
add
add
add
add
popf
add
add
dec
ins
add
rol
(bad)
add
jb
in
add
add
add
add
add
add
add
out
fadd
add
sbb
mov
add
add
add
add
add
add
push
ins
add
rol
(bad)
add
jb
in
add
add
add
add
add
add
add
out
fadd
add
sbb
mov
add
add
add
test
mov
add
add
add
das
outs
add
rol
inc
imul
mov
jmp
pop
add
add
add
add
add
add
mov
xchg
add
add
add
add
add
sbb
push
add
add
add
add
fld
add
add
add
add
daa
js
inc
add
add
add
add
lds
mov
add
add
add
add
add
aas
jle
inc
add
add
add
inc
add
add
add
add
mov
add
add
add
add
add
add
add
add
or
nop
add
add
add
add
add
daa
dec
add
iret
add
add
add
add
add
test
push
add
add
add
add
push
add
adc
pop
add
add
add
dec
add
add
add
ret
add
inc
add
add
add
add
add
add
add
add
sub
ret
add
inc
add
add
add
add
add
add
add
add
add
cmp
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
mov
dec
add
add
add
add
sub
ret
add
inc
add
add
cdq
add
cmc
add
add
add
add
add
add
push
js
pop
add
add
add
dec
add
add
xchg
add
out
fld
mov
add
or
add
add
add
cwde
add
daa
add
add
add
add
add
add
and
dec
add
push
js
pop
add
add
add
dec
add
add
xchg
add
out
fld
mov
add
add
add
in
les
adc
pop
add
add
add
inc
add
add
add
dec
add
add
add
aas
ins
add
xchg
rol
jo
push
add
add
add
add
add
add
add
jno
out
rol
inc
add
add
add
add
add
adc
jp
loopne
les
push
add
rol
xchg
add
add
pop
dec
add
into
add
add
add
xor
inc
add
add
add
dec
add
add
cdq
add
cmps
add
add
add
add
add
add
adc
add
add
add
add
add
add
(bad)
add
out
add
add
or
push
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
pushf
add
add
add
cmps
add
add
add
add
add
add
add
sbb
test
ins
add
or
fld
add
iret
add
add
dec
add
add
xchg
add
out
fld
mov
add
add
add
add
add
add
push
add
add
add
add
inc
jl
pop
add
add
add
add
in
add
(bad)
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
in
mov
and
inc
add
add
add
dec
add
add
call
add
xor
inc
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
sbb
pop
add
add
add
inc
add
add
fiadd
sbb
add
js
inc
add
add
add
dec
add
add
cwde
add
add
add
add
add
xor
add
jle
pop
add
add
add
push
add
add
add
add
add
dec
imul
out
jbe
inc
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
and
mov
add
outs
add
ret
add
inc
add
add
cwde
add
repnz
add
add
add
js
inc
add
add
add
dec
add
add
test
pop
add
add
add
or
add
push
add
add
inc
js
inc
add
add
add
add
add
add
test
add
add
add
in
fild
or
sub
pushf
add
add
iret
add
pop
add
add
add
add
aas
imul
out
jbe
inc
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
inc
add
add
add
add
add
add
dec
add
add
add
in
add
push
add
add
dec
add
add
sahf
add
cmps
add
add
add
add
add
dec
js
inc
add
add
add
dec
add
add
xchg
push
add
add
add
add
pop
add
in
add
add
add
add
add
add
add
pop
add
add
add
add
dec
js
pop
add
add
add
dec
add
add
xchg
add
out
fld
mov
add
add
add
add
add
aad
imul
cmps
add
add
add
leave
add
add
dec
add
add
add
add
add
add
inc
add
sbb
leave
add
add
inc
add
add
add
add
add
push
push
push
add
add
add
inc
add
add
add
add
add
add
dec
add
add
jmp
add
add
add
add
dec
add
cmps
add
add
add
add
add
pop
ins
add
rol
inc
popa
add
add
add
add
add
add
add
add
push
add
add
add
add
add
fild
cmp
inc
add
add
add
add
add
sub
inc
add
add
cmp
ret
add
inc
add
add
add
add
add
add
dec
add
add
jmp
add
add
add
add
sldt
cmp
ret
add
inc
add
add
add
add
add
add
dec
add
add
jmp
add
add
add
add
sldt
pop
push
push
add
add
add
inc
add
add
test
push
add
add
add
add
stos
add
add
sbb
add
add
add
add
sbb
cmc
add
add
add
add
lldt
add
pop
push
push
add
add
add
inc
add
add
xchg
add
cmps
add
add
dec
add
add
add
sbb
add
add
add
add
sbb
cmc
add
add
add
add
lldt
add
pop
push
push
add
add
add
inc
add
add
xchg
add
out
add
add
add
ins
add
add
add
add
add
add
adc
lods
add
add
add
add
add
add
add
add
ret
add
inc
add
add
xchg
add
cmps
add
add
dec
add
add
add
sbb
add
add
add
add
sbb
cmc
add
add
add
add
lldt
add
pop
push
push
add
add
add
inc
add
add
xchg
add
inc
mov
xchg
add
dec
add
add
ins
add
add
add
add
add
add
adc
lods
add
add
add
add
add
add
add
add
ret
add
inc
add
add
popf
add
repnz
add
add
ins
add
add
add
add
add
add
adc
lods
add
add
add
add
add
add
add
add
ret
add
inc
add
add
test
pop
add
add
add
add
stos
add
add
sbb
add
add
add
add
sbb
cmc
add
add
add
add
lldt
add
pop
push
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
or
add
add
add
add
add
add
aas
add
add
ret
add
inc
add
add
call
add
add
push
add
add
add
add
sbb
pushf
add
add
add
add
cmps
add
add
add
add
add
add
push
add
add
add
add
add
ret
add
inc
add
add
popf
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
inc
add
add
xchg
add
les
fiadd
mov
add
add
add
inc
fiadd
add
pop
add
add
add
pop
add
cmc
add
add
add
and
pop
add
add
jl
out
push
add
add
add
add
mov
add
add
ret
add
inc
add
add
test
inc
add
add
add
add
add
add
inc
fiadd
add
pop
add
add
add
pop
add
cmc
add
add
add
and
pop
add
add
jl
out
push
add
add
add
add
mov
add
add
ret
add
inc
add
add
lahf
add
repz
add
add
add
add
out
add
add
add
add
add
add
cmc
add
add
add
add
pushf
add
add
add
imul
add
nop
add
add
add
leave
add
add
inc
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pop
add
test
pop
add
add
add
jp
movs
add
mov
and
add
add
add
push
push
add
add
inc
add
add
add
add
test
add
add
add
add
in
add
add
add
add
add
add
add
xor
mov
rol
add
add
add
add
inc
push
add
add
dec
add
add
cdq
add
cmps
add
add
add
add
jecxz
ret
add
add
add
add
add
leave
add
add
add
ret
add
add
dec
add
add
cdq
add
cmps
add
add
add
add
add
stos
add
add
or
add
add
add
add
pop
push
add
pop
push
add
add
add
leave
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
iret
add
add
add
cmc
add
call
add
add
dec
add
add
add
add
les
rol
push
dec
add
add
add
add
add
add
add
jno
stc
add
add
add
add
add
int
mov
add
add
add
mov
in
add
inc
jnp
pop
add
add
add
add
add
add
add
add
add
add
dec
add
add
jns
out
add
add
add
add
add
add
add
cmp
in
test
add
jnp
pop
add
add
add
add
add
add
add
add
add
add
dec
add
add
jns
out
add
add
add
add
add
xor
rol
test
scas
add
add
add
add
add
inc
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
jmp
add
add
bound
pop
add
add
add
push
add
add
add
add
add
add
sub
push
add
add
add
add
add
add
add
mov
add
add
add
add
add
adc
ja
int
lods
add
add
stc
add
or
add
add
add
or
inc
add
add
add
or
add
add
or
mov
hlt
add
dec
add
or
mov
cmc
add
inc
add
pop
add
add
daa
jns
push
add
add
add
push
add
add
add
add
add
add
add
rol
add
push
add
add
add
add
add
or
or
push
add
add
add
add
add
add
add
mov
add
add
add
push
add
add
add
bound
stos
add
adc
inc
add
add
add
add
add
inc
jns
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
jns
push
add
add
add
push
add
add
add
add
add
add
jl
stos
add
add
add
xchg
rol
add
add
add
push
add
add
add
sub
add
add
add
inc
jns
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
mov
add
pop
jns
push
add
add
add
push
add
add
add
add
add
or
or
push
add
add
add
add
add
add
add
mov
add
add
add
push
add
add
add
bound
stos
add
inc
jns
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
jns
push
add
add
add
push
add
add
add
add
add
add
jl
stos
add
add
add
xchg
rol
add
add
add
push
add
add
add
sub
add
add
add
inc
jns
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
mov
add
inc
jns
push
add
add
add
push
add
add
add
add
add
or
adc
ins
add
add
add
add
call
add
add
push
add
add
sub
pop
add
add
add
dec
add
add
add
add
add
sbb
add
push
inc
add
add
rol
add
push
add
add
add
add
add
or
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
add
dec
jle
pop
add
add
add
dec
add
add
add
add
add
add
adc
jge
in
add
add
add
add
add
add
sbb
push
add
add
add
add
add
pop
jle
pop
add
add
add
dec
add
add
add
add
add
or
add
add
add
or
call
add
add
add
mov
add
add
add
push
add
add
add
bound
stos
add
dec
jle
pop
add
add
add
dec
add
add
add
add
add
add
dec
add
jecxz
ret
add
cmp
cdq
add
add
rol
add
inc
add
add
add
add
rol
add
push
add
add
add
add
add
or
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
jle
pop
add
add
add
dec
add
add
add
add
add
add
adc
jge
in
add
add
add
add
add
add
sbb
push
add
add
add
add
add
pop
jle
pop
add
add
add
dec
add
add
add
add
add
or
add
add
add
or
call
add
add
add
mov
add
add
add
push
add
add
add
bound
stos
add
dec
jle
pop
add
add
add
dec
add
add
add
add
add
add
dec
add
jecxz
ret
add
cmp
cdq
add
add
rol
add
inc
add
add
add
add
aam
cmc
add
dec
add
add
add
add
add
adc
add
jge
cli
add
add
adc
fwait
add
sub
pop
add
add
add
sub
inc
add
add
add
jp
aad
lahf
add
add
xchg
inc
add
add
push
add
add
aaa
js
inc
add
add
add
jp
aad
lahf
add
add
xchg
inc
add
add
push
add
add
add
add
add
xchg
add
add
add
adc
add
add
add
add
add
add
add
xor
dec
add
add
add
add
add
add
add
add
add
add
add
or
adc
ins
add
add
cmp
mov
jp
aad
lahf
add
add
xchg
inc
add
add
add
inc
add
clc
add
add
add
add
add
add
sldt
pop
js
inc
add
add
add
jp
aad
lahf
add
add
xchg
inc
add
add
push
add
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
jp
aad
lahf
add
add
xchg
inc
add
add
add
inc
add
stc
add
add
add
add
add
add
add
add
add
add
add
pop
add
push
add
mov
jge
xchg
add
mov
add
arpl
inc
add
add
add
jp
aad
lahf
add
add
xchg
inc
add
add
add
inc
add
stc
add
add
add
add
add
or
mov
add
add
jl
xor
pop
add
add
arpl
mov
add
ins
js
inc
add
add
add
jp
aad
lahf
add
add
xchg
inc
add
add
push
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
push
add
movs
add
xchg
cmp
xchg
add
add
push
js
inc
add
add
add
jp
aad
lahf
add
add
xchg
inc
add
add
push
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
jg
sldt
jns
add
mov
jp
aad
lahf
add
add
xchg
inc
add
add
add
add
add
jno
inc
xchg
add
push
add
add
add
dec
add
add
add
add
sub
sub
inc
add
add
add
scas
add
popf
add
scas
add
add
add
mov
jno
add
mov
jp
aad
lahf
add
add
xchg
inc
add
add
add
add
add
jno
inc
xchg
add
push
add
add
add
inc
add
mov
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
mov
jp
aad
lahf
add
add
xchg
inc
add
add
push
add
add
add
add
add
ret
add
add
add
inc
add
test
mov
add
add
add
add
add
imul
push
add
stos
add
add
add
add
mov
jp
aad
lahf
add
add
xchg
inc
add
add
push
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
cwde
add
add
cld
add
add
jnp
add
mov
jp
aad
lahf
add
add
xchg
inc
add
add
dec
add
add
add
add
sbb
pushf
add
add
add
add
add
add
add
add
lahf
add
add
add
add
and
stos
add
add
add
repz
add
add
dec
js
inc
add
add
add
jp
aad
lahf
add
add
xchg
inc
add
add
inc
add
add
add
add
add
add
add
inc
add
sahf
add
add
push
js
inc
add
add
add
jp
aad
lahf
add
add
xchg
inc
add
add
pop
add
add
add
inc
(bad)
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
inc
js
inc
add
add
add
jp
aad
lahf
add
add
xchg
inc
add
add
pop
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
inc
add
add
add
jbe
int
add
add
xchg
sbb
add
add
add
add
inc
add
add
add
out
loopne
jne
jo
hlt
add
add
add
add
add
in
rol
inc
add
add
add
add
add
add
inc
add
add
add
add
add
push
bound
inc
add
add
add
jo
hlt
add
add
add
add
add
out
rol
or
pop
add
add
add
add
inc
add
add
add
add
add
push
bound
inc
add
add
add
adc
mov
add
cwde
add
add
add
add
add
add
in
ret
add
add
add
add
rol
daa
add
or
add
add
add
add
push
bound
inc
add
add
add
adc
mov
add
cwde
add
add
add
add
add
add
in
ret
add
add
add
add
add
add
add
add
imul
loopne
jne
jo
hlt
add
add
add
add
add
loope
fiadd
or
sbb
aad
ret
add
add
pop
add
add
add
add
add
add
add
add
add
add
loopne
fld
add
add
out
loopne
jne
jo
hlt
add
add
add
add
add
in
rol
inc
add
add
add
add
add
add
inc
add
add
add
add
add
cwde
add
add
add
outs
add
add
add
inc
add
dec
add
add
add
add
ja
add
out
loopne
jne
jo
hlt
add
add
add
add
add
in
rol
inc
add
add
add
add
add
add
inc
add
add
add
add
add
cwde
add
add
add
outs
add
add
add
pop
add
add
ins
bound
inc
add
add
add
adc
mov
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
cwde
add
add
add
jge
mov
add
add
add
add
jnp
add
out
loopne
jne
adc
mov
add
cwde
add
add
add
add
add
add
in
ret
add
add
add
add
rol
daa
add
or
add
add
add
add
add
add
add
add
add
add
out
add
scas
add
inc
add
add
out
loopne
jne
adc
mov
add
cwde
add
add
add
add
add
add
in
ret
add
add
add
add
rol
daa
add
or
add
add
add
add
add
add
add
add
add
add
out
add
add
xor
(bad)
add
xor
mov
dec
add
add
cwde
add
out
retf
add
add
add
add
clc
add
add
add
add
xor
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
jle
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
inc
add
int3
add
jl
xor
inc
add
add
jl
mov
add
mov
mov
dec
add
add
add
cmp
pop
add
add
add
inc
add
add
add
add
call
add
dec
add
add
imul
add
add
add
add
xchg
add
arpl
pop
add
add
add
dec
add
add
add
add
add
add
add
add
loop
rol
push
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
aas
add
add
pop
jle
pop
add
add
add
dec
add
add
add
add
add
add
add
add
clc
add
add
or
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
dec
add
add
add
add
add
add
add
add
in
ret
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
dec
jle
pop
add
add
add
dec
add
add
add
add
add
add
add
add
repnz
add
add
add
add
add
inc
add
add
add
add
add
xor
mov
dec
add
add
xchg
add
jecxz
fadd
mov
jg
inc
add
add
add
clc
add
add
add
add
cmp
pop
add
add
add
inc
add
add
add
add
jecxz
les
mov
pop
add
add
imul
add
add
add
add
xchg
add
dec
js
inc
add
add
add
dec
add
add
xchg
add
jecxz
fadd
mov
jg
inc
add
add
add
clc
add
add
add
fadd
test
lldt
add
add
add
add
sahf
add
add
adc
push
add
add
add
dec
add
add
outs
add
retf
add
inc
add
add
add
add
add
add
add
add
repnz
add
add
add
add
add
inc
add
add
add
add
add
or
popa
add
add
add
add
add
imul
loopne
jne
add
jae
popa
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
add
add
mov
pop
add
add
add
inc
add
add
add
add
call
add
dec
add
add
add
add
add
add
add
add
add
add
add
or
mov
add
add
add
add
add
pop
add
add
daa
or
adc
add
inc
add
add
add
add
add
add
add
add
jno
jne
add
je
imul
inc
add
jae
add
bound
ins
add
add
add
inc
add
cmp
xor
inc
add
add
xor
add
add
add
add
add
add
add
add
add
inc
add
add
xor
xor
xor
inc
add
add
add
inc
add
add
xor
xor
xor
inc
add
add
add
add
xor
aaa
add
sub
add
add
add
add
xor
xor
aaa
add
add
cmp
xor
cmp
add
jge
add
and
xchg
mov
cmp
in
dec
dec
mov
(bad)
fs
add
or
xor
mov
mov
pop
jg
aad
cmp
sbb
adc
push
adc
sbb
adc
or
push
adc
cmp
adc
add
push
adc
dec
add
push
push
adc
xor
adc
xor
adc
push
push
adc
push
push
adc
xor
adc
xor
adc
cmp
add
cmp
add
dec
add
push
adc
fs
adc
fs
adc
push
add
add
adc
add
adc
cmp
adc
adc
adc
add
adc
jne
adc
sub
adc
sbb
adc
or
add
add
push
adc
add
adc
push
add
adc
add
add
add
adc
add
adc
push
add
adc
push
add
add
adc
add
adc
add
adc
push
add
adc
add
adc
adc
add
add
adc
push
add
adc
adc
push
add
adc
adc
push
add
adc
adc
add
adc
push
add
adc
adc
pop
adc
push
add
adc
push
add
sbb
adc
inc
pop
adc
add
adc
adc
push
adc
push
add
push
push
adc
push
add
sbb
adc
or
add
adc
or
adc
or
adc
push
push
adc
push
push
adc
add
sbb
add
add
push
add
add
add
add
sbb
and
add
dec
pop
and
adc
add
or
add
add
add
push
add
xor
push
add
sbb
and
add
adc
and
add
adc
and
add
add
or
add
push
adc
push
add
push
push
adc
pop
add
sbb
or
add
adc
add
add
push
or
add
push
adc
add
add
adc
push
add
push
add
add
push
and
add
push
push
add
add
push
add
xor
add
adc
xor
add
add
push
pop
add
adc
add
add
add
add
add
add
add
push
push
add
add
adc
pop
add
add
adc
pop
add
add
sbb
adc
sbb
add
sbb
add
adc
add
add
push
adc
add
add
push
add
add
inc
add
inc
add
add
add
add
adc
push
pop
and
add
xor
pop
add
add
add
adc
adc
add
push
or
add
add
and
sbb
and
add
push
pop
and
add
push
adc
add
adc
xor
add
or
add
add
add
sbb
and
add
jo
add
add
jo
jo
and
or
and
add
add
add
or
add
jl
and
add
adc
add
adc
add
sbb
and
sbb
add
dec
add
dec
add
or
add
add
add
add
or
add
or
add
push
add
add
pop
add
add
or
add
or
add
or
add
or
add
push
or
add
add
add
push
adc
add
push
adc
add
push
push
add
add
sbb
add
push
sbb
or
add
sbb
sbb
add
sbb
push
add
sbb
adc
adc
add
add
or
add
push
add
sbb
add
sbb
adc
adc
add
add
or
add
sbb
adc
and
add
jno
and
add
add
add
add
xor
jne
adc
add
jns
and
add
cmp
add
add
mov
and
adc
and
add
jge
and
add
cmp
mov
add
add
add
and
add
xor
mov
add
add
add
and
adc
add
add
and
add
adc
sub
lods
add
mov
and
sbb
sbb
sbb
adc
sbb
adc
and
adc
and
adc
push
pop
and
add
add
adc
adc
add
add
adc
add
adc
or
add
adc
or
add
adc
pop
and
adc
add
mov
add
and
add
add
and
add
add
mov
cmp
adc
add
add
add
or
add
or
add
or
and
add
push
add
add
pop
add
add
add
add
and
add
imul
add
adc
add
test
and
push
adc
add
adc
adc
add
add
add
adc
add
adc
push
add
adc
add
adc
add
adc
add
add
add
adc
push
adc
add
adc
push
add
add
adc
adc
pop
adc
add
add
add
push
add
push
add
add
adc
add
adc
add
add
adc
add
add
add
add
adc
adc
add
add
push
add
adc
add
adc
adc
push
add
adc
push
add
adc
add
add
add
adc
add
or
adc
add
add
adc
add
push
add
adc
add
adc
add
adc
add
adc
add
add
add
add
push
add
add
adc
adc
push
add
add
add
add
sbb
popa
add
add
ins
add
ins
push
add
adc
adc
adc
push
adc
or
add
adc
push
or
add
adc
add
adc
push
add
push
push
add
add
add
add
add
or
sbb
and
adc
sbb
and
add
sbb
pop
and
adc
adc
adc
adc
or
add
sbb
sbb
and
adc
adc
adc
adc
adc
or
cdq
adc
adc
adc
add
add
sbb
adc
adc
adc
mov
adc
add
add
sbb
add
sbb
adc
push
add
push
add
add
add
push
or
add
adc
adc
add
add
sbb
add
add
and
ins
adc
add
add
ins
adc
adc
add
adc
ins
adc
adc
add
adc
ins
pop
add
adc
add
add
test
ins
push
adc
adc
adc
pop
add
sbb
add
adc
adc
add
add
add
add
or
add
push
add
sub
add
sub
sbb
lods
add
ins
adc
adc
adc
and
mov
or
add
ins
adc
adc
add
sbb
ins
adc
sbb
add
sbb
ins
adc
ins
sbb
push
push
push
push
add
add
test
or
add
push
adc
push
add
add
adc
adc
add
or
add
push
push
or
or
add
adc
add
add
push
adc
push
add
push
push
or
push
add
adc
add
push
pop
add
add
add
adc
add
sbb
sbb
adc
or
add
add
push
add
or
adc
push
add
push
pop
add
add
or
adc
add
add
add
push
push
add
add
push
push
pop
adc
add
push
add
push
add
add
adc
add
add
push
push
pop
and
add
or
push
add
add
sbb
add
sbb
add
sbb
sbb
sbb
sbb
add
sbb
adc
pop
add
or
adc
or
add
sbb
adc
or
add
or
adc
add
add
sbb
add
add
or
push
add
add
push
add
or
add
push
or
push
adc
or
add
or
or
add
or
push
or
or
or
or
or
add
or
push
or
sbb
add
or
push
or
push
or
or
add
or
push
push
add
or
or
pop
adc
sbb
sbb
or
or
pop
adc
sbb
sbb
push
add
or
pop
adc
sbb
or
sbb
or
sbb
adc
cmp
push
push
push
add
add
or
or
push
add
push
push
sbb
add
add
sbb
push
push
pop
add
sbb
push
add
add
push
add
adc
push
sbb
push
add
add
push
sbb
push
or
add
adc
or
push
push
add
add
adc
sbb
push
or
add
inc
sbb
push
add
add
adc
push
push
push
add
add
push
push
pop
add
sbb
push
add
push
push
add
add
push
add
add
sbb
add
sbb
or
add
dec
sbb
or
add
dec
sbb
add
add
add
push
sbb
add
add
or
or
add
add
adc
add
add
or
add
adc
add
cmp
or
add
add
push
adc
add
adc
add
add
add
add
push
add
push
add
add
inc
add
add
or
add
push
add
push
add
xor
add
adc
or
pop
add
push
push
add
pop
add
or
push
add
add
add
push
add
add
or
push
push
add
add
add
add
sbb
add
or
add
add
adc
add
add
adc
inc
adc
adc
pop
add
add
sbb
add
or
add
add
adc
sbb
or
sbb
push
adc
add
sbb
adc
or
add
adc
adc
add
adc
add
sbb
add
push
or
add
or
and
add
or
cmp
add
adc
leave
pop
add
sbb
add
add
or
and
adc
popf
sbb
and
push
sbb
and
adc
push
add
push
push
and
adc
add
push
sbb
and
add
push
add
sbb
and
add
add
and
add
inc
adc
and
push
adc
adc
push
sbb
add
add
push
add
push
pop
and
push
push
push
push
push
and
adc
add
sbb
xor
mov
adc
add
add
sbb
and
sbb
and
adc
sbb
and
add
add
or
or
and
sbb
add
add
push
push
push
add
dec
push
and
adc
add
push
sbb
and
or
sbb
and
adc
pop
or
add
sbb
adc
adc
add
push
sbb
add
add
and
add
or
and
push
sbb
add
push
add
add
add
and
sbb
pop
and
push
sbb
and
or
add
or
and
sbb
xor
push
sbb
push
and
add
add
push
and
push
sbb
add
sbb
add
sbb
and
sbb
add
adc
add
and
sub
and
adc
push
sbb
sbb
and
add
dec
adc
and
push
add
rol
sbb
and
adc
xor
sbb
xor
xor
adc
and
add
ins
or
add
sbb
and
add
or
and
adc
add
or
add
adc
or
or
and
adc
pop
push
sbb
add
pop
and
sbb
push
and
push
adc
push
and
adc
add
adc
sbb
adc
sbb
add
and
adc
add
sbb
and
mov
or
add
ins
sbb
adc
and
sbb
ins
sbb
push
sbb
adc
adc
add
test
adc
add
sub
add
xor
and
adc
add
sbb
add
adc
adc
sbb
push
sbb
sbb
push
add
or
and
add
and
or
and
sbb
add
add
dec
or
and
or
push
add
or
add
dec
add
add
pop
pop
and
add
sbb
or
or
add
or
test
add
push
push
and
adc
add
adc
or
and
push
sbb
sbb
and
push
sbb
push
and
adc
add
push
sbb
sbb
add
push
sbb
adc
add
or
and
add
adc
or
add
push
adc
push
sbb
adc
push
sbb
or
and
push
sbb
push
add
sbb
and
add
push
and
adc
add
and
add
sbb
and
add
cmp
fld
and
adc
and
sbb
sbb
sbb
and
adc
and
adc
and
sbb
add
cmp
add
add
add
add
inc
add
add
add
add
jl
sub
add
mov
sub
sbb
sub
adc
sub
adc
adc
adc
add
mov
add
sub
or
test
or
add
int
or
adc
sbb
push
add
push
add
adc
push
adc
add
or
push
adc
push
adc
push
add
push
adc
add
adc
push
adc
add
sbb
adc
push
adc
pop
add
adc
push
adc
or
push
adc
push
adc
push
adc
push
add
adc
add
adc
push
adc
and
add
cmp
add
adc
adc
adc
push
adc
cmp
push
adc
or
add
add
push
push
adc
add
adc
or
push
adc
add
push
or
adc
sbb
add
adc
add
sbb
push
push
add
adc
adc
add
add
push
adc
push
add
adc
sbb
add
adc
xor
pop
push
adc
add
adc
adc
push
adc
sub
add
adc
push
add
adc
cmp
add
les
adc
or
rol
adc
sbb
fadd
adc
and
call
in
add
adc
xor
clc
add
adc
add
push
adc
or
push
adc
adc
push
adc
sbb
push
adc
and
push
adc
sub
push
adc
xor
push
adc
cmp
push
adc
add
adc
or
adc
adc
adc
sbb
adc
and
adc
sub
adc
xor
adc
cmp
adc
add
add
adc
or
push
adc
sbb
add
adc
and
push
adc
xor
add
adc
cmp
push
adc
or
push
adc
adc
push
adc
sbb
push
adc
and
push
adc
sub
push
adc
xor
push
adc
cmp
push
adc
add
push
adc
or
push
adc
adc
push
adc
sbb
push
adc
and
push
adc
sub
push
adc
xor
push
adc
cmp
push
adc
add
adc
or
adc
adc
adc
sbb
adc
and
adc
sub
adc
xor
adc
cmp
adc
add
add
adc
or
push
adc
sbb
add
adc
and
push
adc
xor
add
adc
cmp
push
adc
or
push
adc
adc
push
adc
sbb
push
adc
and
push
adc
sub
push
adc
xor
push
adc
cmp
push
adc
test
add
adc
or
adc
adc
adc
sbb
adc
and
adc
sub
add
sbb
add
add
inc
adc
and
push
push
adc
add
or
add
add
pop
add
add
dec
adc
add
adc
and
push
adc
add
or
or
add
add
push
adc
and
add
push
add
push
add
add
pop
push
add
add
sbb
add
add
push
push
and
add
xor
add
pop
add
adc
xor
adc
and
sbb
and
adc
add
cmp
push
sbb
adc
add
adc
or
add
sub
and
add
adc
adc
sbb
and
adc
adc
and
add
jns
push
adc
and
add
sbb
add
ins
add
movs
pop
and
add
and
add
add
add
sbb
and
adc
sbb
and
sbb
sbb
add
sbb
sbb
push
and
add
or
adc
and
adc
add
or
and
add
adc
sbb
adc
push
push
adc
add
and
add
push
push
push
push
add
sbb
and
add
adc
push
or
add
sbb
add
push
push
sbb
push
push
push
push
push
or
add
cmp
and
push
or
and
or
adc
or
or
add
cmp
add
sbb
sbb
add
or
push
pop
and
add
add
or
or
or
adc
push
sbb
add
or
add
or
or
and
sbb
add
push
sbb
push
push
sbb
sbb
add
add
push
adc
add
adc
or
add
adc
add
sbb
xor
push
sbb
add
push
push
add
add
sbb
adc
add
add
push
sbb
add
add
add
sbb
add
adc
add
adc
adc
adc
sbb
and
add
and
or
adc
add
add
add
add
adc
adc
push
and
sbb
add
adc
push
sbb
or
add
or
add
or
adc
or
add
add
or
add
and
sbb
add
push
sbb
add
sbb
add
sbb
add
or
and
adc
adc
add
test
sub
and
add
push
adc
sub
cmp
cmp
push
add
push
add
add
add
and
add
or
and
add
sbb
pop
add
sbb
ins
sbb
add
and
and
or
add
adc
and
add
xor
add
or
or
add
or
add
and
ins
add
sbb
sub
add
xor
add
sbb
pop
and
adc
add
add
and
and
add
mov
adc
adc
adc
add
add
add
sbb
add
adc
push
and
adc
add
adc
add
adc
cmp
or
add
cmp
add
adc
sbb
and
adc
adc
add
sbb
add
adc
or
add
add
add
and
add
adc
adc
add
adc
and
and
add
cmp
and
adc
push
and
add
and
add
adc
add
adc
push
add
or
add
sbb
pop
push
and
sbb
push
adc
adc
adc
adc
add
xor
xor
or
add
push
and
add
adc
and
add
sbb
and
add
sbb
add
adc
add
sbb
movs
push
push
and
add
xor
mov
add
xor
lds
rol
add
adc
sbb
add
adc
test
push
add
sbb
add
adc
add
int
and
adc
adc
add
sub
ins
push
add
adc
add
sub
adc
add
std
push
and
adc
add
adc
push
adc
test
push
and
sbb
and
sbb
and
adc
adc
adc
test
and
adc
test
and
sbb
sbb
add
add
add
or
add
add
and
add
add
and
add
adc
adc
add
adc
adc
adc
adc
adc
pop
and
add
add
add
and
adc
add
and
or
adc
or
add
or
adc
push
and
add
adc
add
add
add
adc
adc
or
add
adc
adc
add
and
adc
adc
pop
and
adc
and
add
or
and
add
or
or
and
add
add
add
and
adc
add
add
and
adc
add
add
add
add
mov
inc
add
test
add
add
add
ins
add
add
add
cmc
add
cwde
add
add
jno
add
add
add
add
inc
ins
ins
outs
ja
jne
je
jo
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
add
add
add
popa
add
add
add
add
add
add
add
and
add
add
add
add
add
sub
sub
pop
add
sub
sub
pop
add
sub
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
jnp
xor
sub
xor
jge
sub
sub
and
push
sub
pop
add
add
add
add
add
add
add
aas
add
add
add
add
xor
sub
xor
jge
sub
sub
aas
add
add
xor
jge
sub
sub
sub
pop
add
add
add
add
add
add
add
or
add
add
add
add
add
add
xor
sub
add
add
add
add
pop
add
add
add
xor
xor
pop
add
add
pop
add
add
add
add
sub
xor
aas
add
xor
xor
xor
add
jl
xor
pop
add
add
add
sub
pop
add
add
add
add
sub
sub
xor
pop
add
add
add
add
add
add
add
add
add
add
xor
jge
jl
pop
add
add
add
add
add
add
add
xor
sub
add
add
add
add
pop
add
add
add
add
add
pop
add
add
add
add
sub
xor
aas
add
xor
xor
xor
xor
add
add
add
jl
xor
pop
add
add
add
add
sub
pop
add
add
add
add
sub
sub
xor
pop
add
add
add
add
add
add
add
add
add
add
xor
jge
jl
pop
add
add
add
add
add
add
add
xor
sub
add
add
add
add
xor
sub
add
add
pop
add
add
add
add
xor
aas
add
add
pop
add
add
add
add
sub
sub
xor
pop
add
add
add
add
add
add
add
add
add
add
xor
jge
jl
pop
add
add
add
add
add
add
pop
add
add
add
add
xor
aas
add
add
pop
add
add
add
add
sub
sub
xor
pop
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
pop
add
add
add
add
add
pop
add
add
cmp
pop
add
add
add
add
add
pop
add
add
add
sub
jl
sub
sub
xor
add
add
add
add
add
pop
add
add
cmp
pop
add
add
add
add
pop
add
add
add
sub
xor
xor
sub
jl
xor
xor
jl
pop
add
add
cmp
pop
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
ins
add
jb
add
sub
add
add
je
add
pop
add
jb
outs
add
jae
add
inc
add
add
je
add
add
add
push
pop
add
adc
or
add
adc
or
or
add
or
pop
add
adc
push
push
adc
push
adc
push
push
push
push
push
adc
adc
adc
push
adc
adc
adc
adc
adc
push
or
xor
or
or
push
push
push
push
push
adc
adc
push
adc
adc
push
push
push
adc
add
push
adc
or
pop
push
push
sbb
or
pop
pop
add
adc
or
pop
add
push
push
or
pop
push
push
adc
xor
xor
adc
xor
add
or
push
push
adc
adc
add
xor
xor
xor
push
pop
add
adc
pop
pop
add
inc
adc
or
pop
add
inc
push
sbb
add
or
adc
adc
push
adc
push
adc
adc
or
pop
add
add
adc
adc
push
or
xor
adc
pop
push
sbb
sbb
or
adc
adc
push
or
xor
adc
pop
push
adc
push
or
adc
or
pop
pop
sbb
adc
adc
push
adc
or
or
add
add
or
pop
add
adc
add
xor
xor
adc
sub
or
xor
adc
add
cmp
adc
xor
xor
xor
adc
adc
xor
or
add
adc
adc
adc
lar
add
add
add
add
add
sbb
or
add
adc
adc
or
sbb
push
push
sbb
sbb
pop
or
push
adc
push
adc
or
pop
push
push
adc
xor
add
xor
add
adc
pop
or
push
push
sbb
add
xor
pop
sub
push
push
push
push
push
or
sbb
push
push
add
or
or
adc
push
sbb
adc
push
adc
or
adc
add
or
push
or
pop
pop
adc
or
sbb
or
push
or
add
pop
adc
add
sbb
or
add
or
or
add
add
adc
sbb
pop
add
sbb
add
adc
push
or
add
adc
or
add
adc
push
adc
adc
add
adc
add
push
adc
adc
adc
pop
push
adc
adc
or
sbb
push
adc
push
adc
xor
xor
push
adc
xor
push
pop
or
adc
adc
sbb
or
add
pop
sysret
add
add
or
pop
add
add
or
sysret
push
adc
sbb
adc
or
or
add
add
pop
add
adc
add
adc
adc
sub
or
fs
cmp
adc
xor
xor
fs
cmp
adc
or
or
pop
add
xor
adc
adc
sbb
push
adc
sbb
pop
push
sbb
push
or
add
or
pop
add
pop
or
add
or
add
or
pop
add
sub
or
mov
xor
push
pop
push
adc
or
sbb
mov
or
add
jno
jno
jno
push
pop
add
add
add
or
pop
add
cmp
add
or
pop
add
and
or
pop
add
xor
or
add
or
pop
push
push
adc
or
dec
adc
or
add
xor
mov
or
add
je
adc
add
sbb
xor
or
pop
add
ins
adc
pop
add
adc
and
or
add
test
adc
adc
add
add
adc
ins
sbb
adc
or
add
or
pop
add
push
adc
add
or
in
or
pop
add
adc
add
sub
adc
adc
sbb
adc
add
add
sub
and
add
or
adc
or
or
or
xor
adc
add
or
or
add
adc
or
pop
add
or
add
add
push
pop
add
adc
add
or
pop
add
or
pop
or
add
or
or
adc
adc
adc
or
pop
push
adc
add
add
add
add
add
push
add
or
add
add
push
add
adc
add
adc
add
add
add
add
adc
add
adc
add
add
push
add
adc
add
push
add
adc
add
or
pop
add
pop
add
push
add
or
pop
add
push
add
add
or
pop
add
adc
add
add
add
push
add
or
add
add
and
or
ins
add
ins
adc
adc
add
add
ins
sbb
sbb
add
xor
or
push
pop
add
cmp
sub
or
pop
add
pop
add
add
or
pop
add
adc
or
pop
pop
adc
or
sbb
add
push
pop
add
and
and
adc
add
sbb
and
adc
add
add
adc
add
add
pop
add
pop
add
xor
cmp
or
add
xor
add
pop
add
or
pop
add
adc
sbb
push
or
or
pop
add
pop
adc
add
xor
add
add
or
pop
or
adc
test
add
adc
adc
push
or
adc
adc
pop
or
sbb
adc
push
push
sbb
or
pop
add
or
pop
add
or
pop
add
or
pop
add
adc
ror
or
pop
add
adc
adc
push
sbb
adc
sbb
or
pop
or
adc
or
push
push
sbb
or
test
test
push
sbb
dec
or
pop
add
sbb
push
or
or
add
pop
pop
push
sbb
or
or
sbb
adc
push
push
or
adc
or
or
or
add
or
pop
add
or
pop
or
or
or
push
or
add
or
pop
or
or
or
adc
or
adc
adc
or
cmp
or
or
pop
add
dec
or
pop
or
or
dec
or
cmp
adc
or
adc
push
push
sbb
or
push
pop
pop
push
push
or
sbb
add
or
or
sbb
sbb
sbb
or
cmp
add
xor
xor
push
adc
xor
or
add
adc
inc
or
push
adc
test
test
test
daa
pop
or
adc
test
test
push
adc
adc
test
test
add
add
push
adc
or
pop
push
sbb
or
xor
pop
adc
or
adc
sbb
or
pop
pop
sbb
adc
adc
or
adc
or
pop
or
adc
test
push
or
adc
pop
or
sbb
adc
add
or
or
add
adc
xor
or
adc
adc
adc
push
sbb
add
dec
push
or
add
adc
or
adc
or
pop
add
pop
push
push
or
add
or
pop
add
push
adc
or
add
add
pop
pop
add
or
add
sbb
add
or
pop
or
adc
test
add
test
or
add
sbb
or
add
sbb
or
pop
add
adc
adc
add
xor
sysret
or
push
sbb
or
or
add
add
adc
or
sbb
add
push
adc
or
add
or
pop
add
or
adc
test
adc
add
adc
add
or
adc
or
or
pop
add
adc
pop
add
sbb
push
push
sbb
sbb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
or
or
push
or
pop
add
sbb
or
pop
add
or
pop
pop
add
adc
push
push
adc
or
adc
sbb
adc
adc
push
adc
or
adc
push
sbb
adc
sbb
or
pop
pop
push
sbb
adc
sbb
or
pop
pop
sbb
adc
add
or
pop
or
sbb
adc
add
or
pop
add
pop
pop
add
xor
or
adc
adc
rcr
push
push
pop
or
xor
sbb
adc
adc
pop
adc
and
and
sub
or
sbb
adc
or
sbb
adc
push
add
inc
cmp
es
cmp
nop
hlt
rol
pop
packsswb
sar
inc
xlat
mov
xor
(bad)
and
jmp
std
popf
xor
pop
mov
imul
cmps
je
mov
test
adc
sub
or
sub
cmps
adc
pushf
or
xchg
or
adc
mov
pusha
jbe
mov
cmp
sub
xchg
ds
sbb
test
sar
xchg
cmp
xchg
dec
inc
inc
mov
xchg
movs
(bad)
ds
test
jno
sub
pop
sahf
push
push
mov
out
inc
or
movs
and
pop
xchg
movs
imul
rol
cmps
dec
inc
and
cwde
add
popa
adc
mov
sub
xchg
or
jp
fidivr
inc
imul
mov
popa
out
mov
cli
pop
(bad)
fsubr
mov
inc
test
jbe
in
(bad)
scas
sub
mov
jecxz
xor
xchg
loope
pop
lea
(bad)
push
mov
jbe
xor
rcr
pushf
outs
cmc
gs
pop
(bad)
jns
sub
add
imul
imul
xor
mov
jno
test
mov
add
std
mov
adc
xchg
mov
adc
xchg
jbe
push
mov
test
not
adc
gs
rcr
lea
lock
imul
fidivr
cmps
shl
hlt
nop
xor
sub
movs
mov
mov
jns
in
dec
inc
repnz
(bad)
lock
ror
pop
jno
inc
jl
test
(bad)
mov
sbb
out
mov
xchg
(bad)
stos
retf
and
jns
fld
xor
jns
int
daa
sbb
sbb
stos
ds
and
xchg
pusha
push
out
pop
mov
int
stc
iret
add
daa
movs
push
jae
je
adc
sub
mov
xchg
pusha
je
jae
or
cmp
pushf
or
pop
pop
lods
outs
frstor
cmc
test
xchg
scas
sbb
cli
dec
out
inc
sub
pop
or
fdiv
add
push
cmp
adc
pop
xchg
cmps
shl
and
jb
and
jl
rep
pop
push
push
dec
loope
retf
mov
(bad)
mov
mov
das
mov
inc
mov
rol
shl
int3
adc
push
aam
mov
call
xchg
pop
cmps
sbb
and
mov
add
fidiv
aas
fucomi
adc
mov
sub
cld
icebp
std
push
push
mov
shl
mov
cwde
add
mov
mov
test
fisubr
mov
jmp
mov
and
or
nop
pop
daa
xor
inc
test
add
daa
(bad)
push
enter
iret
(bad)
sbb
mov
ss
push
stc
cmc
jbe
sub
sub
pop
or
ss
jbe
mov
(bad)
adc
xor
popa
pop
and
dec
xor
int
jmp
leave
add
leave
stos
inc
int
pop
xchg
loope
mov
(bad)
int
xchg
push
sbb
test
sub
pop
ror
push
sbb
test
xchg
ins
adc
mov
jp
loopne
out
cdq
jo
in
fs
or
jecxz
mov
hlt
stos
add
jecxz
adc
mov
and
bnd
test
xlat
mov
inc
jp
xlat
push
xor
mov
ja
push
sub
add
add
cmp
fs
xchg
inc
out
sub
int
mov
cmp
xor
lahf
in
loop
and
dec
ins
inc
jae
push
and
dec
adc
pop
fucom
es
add
out
ret
mov
xor
xchg
jp
pop
mov
cmp
add
xor
cmc
arpl
fistp
gs
add
mov
mov
nop
mov
(bad)
sbb
adc
and
dec
xchg
pop
push
call
cmp
mov
xor
sbb
mov
out
mov
and
movs
dec
aaa
imul
sbb
push
jge
push
push
fwait
scas
push
outs
mov
push
mov
sub
(bad)
cli
scas
inc
outs
inc
jae
dec
fbstp
loop
(bad)
pop
push
rcl
out
jle
jbe
mov
(bad)
imul
push
sub
js
shl
xor
popf
clc
xchg
mov
lea
(bad)
fsubr
mov
pop
cli
int3
movs
jp
adc
jmp
cld
jg
ror
push
mov
dec
push
imul
popa
adc
in
jmp
fidivr
lahf
mov
cld
mov
mov
test
movs
mov
das
or
mov
jle
mov
je
fild
jecxz
and
idiv
mov
int3
sbb
loop
out
dec
sub
daa
imul
dec
push
mov
adc
push
and
add
pushf
cmc
mov
inc
mov
adc
push
inc
dec
inc
or
pop
fnstcw
xchg
inc
and
mov
outs
or
ja
dec
mov
and
pop
xchg
fnstcw
adc
int3
call
jnp
jns
mov
inc
inc
mov
jp
mov
aam
add
mov
sbb
lahf
cld
inc
pop
jmp
push
hlt
dec
(bad)
ds
out
lods
(bad)
mov
cld
add
mov
out
cmp
jae
stos
pusha
xchg
pushf
xchg
push
arpl
cdq
mov
rol
movd
or
jmp
scas
addr16
in
lods
mov
ins
xor
cmp
fnsave
sbb
out
(bad)
xor
dec
sbb
retf
sbb
test
leave
rol
mov
push
or
(bad)
mov
push
xor
jae
dec
das
push
or
les
or
xlat
outs
mov
mov
mov
jp
cwde
sar
cmp
sub
cmp
shl
xor
adc
cli
jbe
(bad)
jp
or
mov
sbb
sahf
arpl
scas
mov
fdiv
lods
jle
(bad)
mov
repnz
retf
dec
mov
loope
fcomp
mov
push
xchg
stos
test
xchg
mov
add
iret
lods
sbb
or
dec
(bad)
push
or
jb
lods
push
dec
dec
mov
cmp
out
iret
or
pop
add
in
mov
lds
clc
pushf
movs
push
mov
sub
xchg
sahf
es
jmp
(bad)
into
int
out
outs
ins
jo
loope
ds
jmp
fwait
cmp
enter
retf
lods
jge
mov
stos
add
jns
lea
outs
bound
fwait
or
div
mov
jnp
xor
xor
sahf
fisub
dec
mov
in
fidivr
pop
outs
cs
jo
add
retf
stos
inc
adc
or
std
pop
inc
and
xchg
gs
and
pop
or
inc
cmp
ins
pop
adc
test
xor
(bad)
and
lahf
cmp
push
shl
mov
andps
sub
out
sub
or
in
push
pop
or
pop
test
out
mov
imul
dec
mov
clc
or
scas
mov
(bad)
cmc
xchg
xor
fwait
cmp
adc
add
stc
pop
mov
inc
sbb
inc
and
pop
mov
and
and
push
addr16
out
pushf
jmp
(bad)
adc
xor
mov
push
sti
xor
movs
imul
loop
fs
loop
or
mov
push
outs
push
dec
fs
rol
xchg
pop
icebp
cmp
adc
jbe
jl
mov
cmp
cmps
(bad)
sub
inc
ror
in
call
mov
into
dec
dec
les
cli
inc
jb
jge
add
ja
mov
add
mov
cmp
test
movs
jmp
mov
outs
push
leave
neg
and
prefetchnta
fistp
in
mov
inc
jecxz
(bad)
lods
icebp
ins
add
cdq
sbb
stc
add
(bad)
jns
fldcw
imul
add
cmp
cmp
daa
dec
lods
movs
xor
icebp
push
jno
mov
out
ds
retf
in
fisttp
mov
cmps
(bad)
bound
dec
pop
jbe
inc
dec
pushf
dec
cmp
icebp
or
stos
jp
xchg
jg
dec
pop
mov
xor
xchg
mov
lock
je
xchg
iret
aam
cwde
daa
dec
ins
jb
jl
jbe
xor
retf
(bad)
(bad)
mov
aad
mov
call
xchg
xchg
movs
out
retf
(bad)
repz
scas
aam
cdq
jmp
std
or
lock
cmps
repnz
iret
add
out
sub
scas
es
mov
(bad)
(bad)
push
dec
mov
jbe
ja
outs
and
mov
push
test
push
rcr
shl
int
jbe
adc
les
adc
pop
inc
or
popa
sbb
and
js
and
mov
pop
inc
retf
pop
ficomp
push
add
mov
(bad)
cwde
lds
movs
dec
mov
ja
mov
push
retf
js
sub
push
xor
jmp
jmp
sbb
inc
popf
mov
lock
sbb
sub
add
test
repnz
pop
fimul
test
popa
fbld
fsub
push
xchg
mov
and
xchg
add
push
push
aad
cmp
mov
cmps
and
mov
adc
mov
xchg
iret
je
data16
outs
mov
mov
lahf
test
jecxz
mov
inc
add
fcom
or
push
inc
cwde
out
sar
xchg
jb
js
fcmovb
in
cmp
and
xchg
push
dec
jg
push
mov
sub
mov
ret
xor
mov
lea
pop
fst
jecxz
and
sti
(bad)
out
in
adc
lahf
fs
sbb
imul
sub
xor
xchg
fidiv
inc
cmps
iret
sbb
cmp
sbb
adc
jmp
jecxz
xchg
and
pop
iret
ins
stc
adc
ror
fst
jle
stos
or
sbb
mov
lea
push
mov
fcmovnbe
cs
mov
nop
mov
xchg
add
sti
in
out
inc
pop
dec
adc
add
jae
scas
sar
ins
cdq
mov
ss
mov
fiadd
mov
cmps
jge
arpl
nop
daa
cmp
mov
movs
mov
lds
and
jecxz
or
loopne
shr
ss
xchg
sbb
mov
push
jecxz
and
fidivr
adc
pop
bswap
mov
scas
jnp
shl
cmp
loopne
in
ja
xchg
inc
mov
jne
mov
test
mov
xchg
cld
pop
ss
inc
jmp
(bad)
repz
inc
or
rol
mov
popa
gs
mov
int3
loope
in
adc
xchg
fisubr
push
out
dec
dec
adc
jmp
jne
in
cdq
out
inc
add
cmps
aas
pop
push
test
lahf
lds
xlat
icebp
add
push
inc
inc
mov
or
jae
xchg
leave
jns
in
jecxz
imul
push
movs
jmp
scas
lea
int3
jmp
sub
add
daa
cwde
mov
sub
jmp
xor
js
push
sbb
xchg
in
and
in
test
in
mov
or
xlat
xor
sub
outs
daa
aaa
ds
ja
and
into
mov
mov
xor
and
push
inc
jne
(bad)
gs
sub
dec
shl
mov
cmps
pop
push
mov
in
pop
pop
aas
fsub
lods
out
mov
jne
and
cmp
cmp
pop
adc
xlat
push
sbb
pop
ins
dec
cdq
mov
or
xchg
xchg
cmp
jae
retf
push
in
or
in
cmp
aas
lods
stos
xchg
add
jmp
test
jne
out
fmul
mov
xor
add
jno
inc
xchg
adc
jae
ret
ss
dec
add
pop
ror
aaa
ror
mov
add
mov
inc
inc
push
fstp
ins
push
mov
ror
sahf
mov
sbb
adc
push
or
pushf
ret
xchg
jb
add
(bad)
mov
cs
outs
sbb
dec
scas
outs
(bad)
jp
xchg
pop
test
jecxz
push
jp
mov
inc
scas
bound
mov
xor
and
retf
jne
and
inc
push
in
stos
push
mov
pop
fs
sub
loope
pop
clc
fwait
sbb
fdivr
jmp
ins
addr16
dec
xchg
popf
sub
ret
add
mov
xchg
imul
dec
xchg
mov
sub
je
test
fxch
mov
out
fimul
xor
stos
je
and
ins
ret
xor
icebp
out
xchg
sbb
mov
lds
inc
mov
mov
loope
mov
lea
xchg
sbb
sub
lahf
icebp
(bad)
stc
in
idiv
push
xor
out
push
and
inc
push
mov
mov
fsubp
pop
and
idiv
or
mov
dec
scas
jg
por
shl
pop
jle
and
call
scas
shr
lock
pushf
inc
pop
and
cwde
dec
and
in
cmp
rol
adc
fnstenv
jno
in
push
jmp
in
inc
cmp
clc
push
mov
cmp
add
inc
mov
xchg
retf
daa
jbe
and
lock
adc
pop
scas
sahf
jmp
jne
inc
add
hlt
mov
nop
or
loope
adc
ret
cs
xor
std
das
es
cmc
jo
xchg
js
or
jmp
xchg
stos
add
jo
xchg
push
mov
jge
add
pop
fwait
int3
or
(bad)
rol
(bad)
gs
mov
arpl
outs
mov
or
cmp
mov
mov
sub
ror
fimul
sub
sbb
push
xchg
cmc
leave
ja
fmul
mov
push
js
movs
fs
jne
popa
out
cwde
xor
mov
push
js
out
call
sub
lods
(bad)
cmp
mov
cmp
cmp
call
push
or
add
dec
mov
sbb
fcom
int3
push
mov
push
jmp
icebp
loope
lds
sbb
inc
ja
bound
pop
cmp
ret
adc
pop
jmp
pusha
ja
add
int3
push
mov
pop
and
adc
addr16
xchg
int3
jge
hlt
xchg
idiv
fldcw
(bad)
(bad)
and
ret
sar
pop
es
(bad)
cmp
mov
mov
push
test
jmp
fldcw
sahf
rcl
popf
test
jne
scas
ficomp
sbb
fld
and
and
es
jmp
and
cdq
inc
adc
push
ins
movs
pushf
dec
or
lea
mov
pop
icebp
xchg
out
push
out
mov
jnp
push
jbe
and
iret
(bad)
or
and
hlt
xchg
add
(bad)
cmp
int
rep
outs
test
out
cdq
cdq
(bad)
ds
cmp
and
scas
int3
aas
xchg
mov
and
xor
inc
fld
mov
mov
push
push
scas
lods
mov
pop
loope
push
xor
ret
jnp
rcl
push
mov
and
ja
pop
mov
das
je
test
cmp
int3
fcomp
and
jecxz
aam
mov
sbb
shr
ror
(bad)
mov
sahf
xlat
cld
mov
mov
cmp
test
pop
mov
adc
(bad)
cmp
add
lds
add
int3
fs
movs
in
jmp
dec
shl
xchg
stos
jle
in
sub
pop
xor
cmps
push
retf
mov
mov
mov
pop
push
mov
jecxz
xchg
xchg
mov
and
cmp
adc
adc
cmp
(bad)
shl
adc
imul
int
dec
in
ja
inc
(bad)
icebp
scas
gs
into
add
cs
jl
add
fidiv
addr16
cmps
add
out
or
inc
inc
jo
mov
add
sub
pop
pop
adc
sbb
cs
cwde
adc
aaa
add
xchg
pop
sbb
popa
icebp
cmp
sbb
out
nop
inc
xchg
movs
jo
shl
in
cmp
cs
data16
dec
(bad)
cmp
les
adc
jle
(bad)
test
adc
push
fs
jne
add
arpl
or
jle
nop
fdiv
gs
(bad)
sar
sbb
call
pop
loop
sti
adc
push
and
mov
jp
ins
aas
ror
mov
movs
xchg
fild
ss
fnstcw
movs
ins
add
mov
stc
clc
dec
jecxz
pop
xchg
fistp
mov
and
into
out
call
mov
or
je
imul
xchg
and
sub
fdivr
jb
pop
fwait
xor
mov
mov
or
stos
mov
fldenv
loopne
(bad)
mov
mov
add
repz
cmp
xor
mov
dec
jle
shl
lds
xchg
ja
mov
dec
in
jae
(bad)
adc
or
mov
sbb
mov
sbb
mov
push
lods
inc
int
dec
cmp
push
dec
rcl
shl
int
adc
movs
mov
or
test
mov
loope
aad
repnz
movs
inc
rcl
inc
inc
movs
mov
and
scas
jmp
sbb
adc
je
int3
fwait
into
out
or
outs
xchg
lds
sub
push
inc
popf
sbb
pop
idiv
and
or
sar
add
pop
imul
xchg
cmp
mov
fldcw
movs
mov
gs
mov
inc
cmp
sbb
lods
stos
dec
mov
sahf
add
push
bnd
pushf
ja
(bad)
out
push
xchg
sub
movs
and
mov
or
pop
or
mov
scas
ror
pop
cmps
loopne
outs
test
push
(bad)
adc
mov
dec
aas
or
mov
loopne
sbb
loop
fisttp
sub
cmc
nop
out
inc
cmc
aas
adc
pop
xchg
cmc
fmulp
inc
sbb
inc
or
push
pop
int3
pop
shr
xor
fldenv
push
sar
dec
aad
dec
sub
fld
jnp
mov
xor
adc
xchg
std
or
adc
sub
je
in
or
add
fnstenv
aam
sti
jl
hlt
cdq
mov
inc
and
adc
and
jns
jb
mov
mov
mov
sar
mov
dec
in
repz
and
sbb
out
mov
lahf
sbb
cmc
xchg
inc
cmp
cdq
stos
inc
and
adc
sbb
and
ds
sbb
rcr
jp
add
sub
retf
jns
push
gs
in
mov
out
daa
push
and
icebp
add
xchg
(bad)
call
loope
or
pop
mov
(bad)
lds
loopne
inc
enter
mov
fsubr
fsub
mov
pusha
xchg
pushf
pop
popf
into
and
sub
nop
mov
fwait
mov
cs
jne
adc
adc
push
fwait
xchg
jl
rol
dec
mov
sub
hlt
mov
mov
mov
inc
cli
mov
xchg
add
mov
sub
gs
popa
or
les
sub
ins
xchg
inc
dec
push
dec
push
lods
adc
xchg
push
xchg
out
es
call
enter
mov
leave
aad
fidivr
mov
push
daa
ins
sub
mov
sbb
xor
jbe
push
add
test
pop
jle
jl
mov
cmp
jp
jmp
cwde
or
daa
pop
pop
lods
popf
or
cdq
mov
outs
xchg
dec
mov
xor
pushf
je
(bad)
sub
fs
add
mov
inc
mov
outs
rcl
fnsetpm(287
inc
addr16
or
inc
xor
dec
(bad)
mov
add
sub
fcom
cmp
mov
adc
sbb
retf
jle
mov
sub
or
pop
or
sub
stos
sub
nop
inc
cmp
sar
jp
dec
imul
adc
xor
scas
shl
test
ins
push
test
xor
sti
jecxz
cmp
jmp
ja
jno
shr
or
adc
iret
push
lods
leave
xor
int3
scas
xchg
jge
aad
jne
pushf
(bad)
daa
dec
ins
dec
push
shl
mov
jp
push
test
(bad)
out
or
cwde
fdiv
push
gs
inc
out
(bad)
out
(bad)
jmp
xchg
js
xchg
dec
nop
psraw
xor
leave
sbb
out
mov
push
test
and
push
sahf
rcl
cmp
sub
xor
jle
dec
mov
xchg
rcl
mov
jbe
add
jne
cmps
rcr
add
or
xor
cmps
xchg
xor
adc
pop
add
push
cmp
dec
pop
pop
jno
ja
mov
fisttp
lods
(bad)
xor
pop
inc
sbb
psrlw
xor
jns
pop
test
xchg
and
outs
ror
xor
and
xor
ss
pop
xchg
or
into
test
inc
loop
pop
lahf
dec
xchg
mov
push
mov
xor
xchg
hlt
xchg
jmp
xchg
pop
jg
pop
test
add
and
fnsave
cs
pop
add
popf
(bad)
cmp
sub
and
retf
push
clc
push
js
jecxz
or
push
es
call
sbb
inc
cmp
xor
ins
dec
(bad)
fadd
outs
loopne
push
pop
mov
dec
cmps
mov
push
in
ins
outs
js
(bad)
sub
(bad)
in
pushf
cmp
fwait
inc
lea
into
les
mov
fwait
lea
std
pop
mov
mov
pop
sbb
jl
xchg
jg
lods
mov
sahf
add
aaa
xchg
pushf
mov
shl
out
outs
or
sbb
call
leave
into
push
test
ret
pop
xor
push
jmp
pusha
xchg
frstor
ds
cmp
loopne
mov
pop
daa
xor
push
pop
jo
addr16
test
sbb
outs
inc
mov
add
jp
and
loopne
mov
cmps
mov
int3
(bad)
scas
loope
clc
pop
sbb
cmp
mov
test
cwde
or
leave
fwait
pop
inc
or
mov
or
fs
scas
mov
loopne
mov
aaa
dec
mov
mov
ret
mov
retf
test
xchg
sbb
cmp
in
and
xor
pop
into
imul
stos
test
sub
stc
sub
inc
inc
cmc
cdq
mov
jg
(bad)
xchg
sti
jp
xor
jle
imul
mov
aam
call
into
sahf
jmp
inc
sti
rol
mov
fiadd
mov
and
daa
(bad)
hlt
add
or
add
add
repnz
push
cmp
ja
mov
repz
pop
cli
or
mov
push
out
add
aad
sub
jg
inc
daa
ret
adc
(bad)
mov
repz
lods
push
int3
adc
fcom
mov
fidiv
movs
not
mov
scas
cmp
mov
(bad)
adc
mov
test
jle
in
retf
leave
arpl
div
and
shl
(bad)
jg
xchg
shr
dec
push
mov
gs
mov
movs
lods
mov
pop
dec
pop
sub
xor
cli
mov
pop
das
dec
gs
mov
sbb
mov
pushf
lods
sahf
or
mov
pusha
nop
pushf
fldenv
sar
mov
xor
adc
ret
mov
adc
sahf
sub
push
data16
mov
fst
mov
xchg
fdivr
popa
out
mov
xchg
fbstp
and
pop
mov
fdivrp
pusha
in
pop
aam
cld
pop
xchg
ins
or
push
xchg
add
imul
in
jl
dec
daa
xor
call
dec
dec
shl
and
outs
inc
add
and
out
lds
jns
xchg
mov
and
hlt
fcom
sti
inc
(bad)
scas
lods
fst
sub
push
in
lea
cmp
adc
cmp
push
xor
pop
push
movs
movs
inc
scas
imul
fstp
out
aas
je
in
mov
mov
mov
into
inc
mov
test
xchg
push
loop
dec
add
vmwrite
shl
xchg
ds
js
arpl
jo
sub
adc
movs
xchg
cwde
movs
adc
inc
pop
pop
dec
arpl
dec
aam
pusha
jnp
push
clc
xor
aas
sar
out
push
ret
cmps
mov
mov
test
jmp
lods
pop
movs
inc
repnz
dec
aas
out
jge
xor
mov
ret
sub
sar
adc
and
scas
jmp
xor
outs
inc
test
dec
popf
sti
pop
mov
mov
fnstcw
adc
aaa
int
xchg
ret
ds
pop
call
pusha
push
jmp
imul
mov
cld
popf
cmp
in
and
cmps
push
and
pop
xchg
enter
mov
imul
add
xor
repz
and
adc
xchg
adc
fdivrp
or
mov
je
cmp
push
fdivr
das
ins
sub
pusha
fldcw
add
(bad)
in
mov
jl
xor
ret
sahf
mov
dec
adc
jg
jl
push
das
jae
dec
pusha
(bad)
fiadd
adc
mov
dec
and
inc
inc
in
and
call
daa
scas
shl
mov
xchg
pop
in
pop
in
jnp
ret
jp
fmulp
inc
cmc
xor
imul
push
cmp
das
xor
cmp
xchg
xor
push
sub
cmp
xchg
aam
mov
xchg
inc
lods
dec
cmp
jo
clc
inc
enter
clc
xor
sub
sub
test
inc
xchg
mov
cmp
lea
mov
movs
or
sahf
loop
jl
pop
pushf
gs
dec
mov
sbb
and
mov
cs
mov
or
push
retf
enter
dec
(bad)
movs
mov
fcom
xor
(bad)
push
mov
out
cdq
mov
(bad)
std
imul
test
xchg
add
movs
arpl
mov
jo
bnd
sbb
push
or
mov
rol
push
mov
js
mov
sub
add
dec
xor
ret
ins
cmp
adc
mov
jnp
dec
sti
cmp
gs
ret
push
push
mov
push
jns
or
push
jbe
dec
dec
sub
imul
or
(bad)
mov
leave
push
and
cs
mov
(bad)
sub
inc
std
mov
cmp
xchg
stos
mov
pop
inc
adc
into
fild
xor
and
add
in
mov
mov
xor
movs
imul
jmp
and
sbb
clc
dec
adc
int
mov
mov
xsha256
cmps
rol
jge
mov
pop
icebp
sub
dec
jp
outs
mov
pop
add
ficomp
add
scas
arpl
sub
mov
test
cmp
jmp
add
xor
aaa
adc
dec
mov
pusha
adc
dec
add
cli
cld
mov
add
jp
cmp
jle
mov
dec
adc
(bad)
sbb
jmp
stos
imul
mov
int3
cmc
leave
mov
pusha
fwait
push
sbb
push
mov
cmp
in
popa
push
test
xlat
jle
add
pushf
jl
(bad)
clc
loopne
(bad)
xor
xchg
fiadd
jle
jp
add
pop
daa
dec
int3
mov
pop
js
cmp
test
jne
mov
ror
in
jne
test
adc
add
adc
adc
cwde
repnz
sbb
mul
loop
inc
jp
or
(bad)
iret
jno
push
and
in
mov
lock
adc
dec
mov
pusha
ja
stos
bound
xlat
pop
lea
(bad)
push
js
(bad)
test
push
bound
call
inc
inc
ret
xchg
stc
je
pop
adc
ins
loope
(bad)
out
(bad)
xchg
mov
or
test
add
aad
addr16
lods
popa
jae
mov
pop
xor
push
sahf
pop
idiv
test
mov
sub
xor
in
sub
push
sahf
faddp
mov
mov
pushw
test
scas
retf
dec
scas
sbb
xor
xchg
aam
cld
mov
mov
pop
pop
push
mov
jmp
ins
pop
pop
imul
pop
jl
add
jae
popa
popf
push
aas
inc
cmp
jb
lds
or
xor
jmp
fst
imul
(bad)
xor
or
in
imul
loope
outs
pop
mov
jg
scas
xchg
xor
movs
retf
xor
and
and
cmp
and
imul
(bad)
adc
lock
inc
jg
sbb
or
ret
mov
loopne
push
push
psubusw
and
sbb
fsub
or
mov
pop
jle
add
lods
cs
xor
aaa
(bad)
movs
sub
int3
sbb
jle
push
sub
ins
loopne
mov
std
fimul
call
cdq
inc
mov
cmp
xor
repz
not
shl
mov
mov
dec
jo
dec
jns
jmp
test
mov
mov
mov
icebp
aas
inc
pop
cwde
jbe
stos
movs
and
stos
les
ret
adc
outs
xlat
aaa
sub
push
neg
xchg
mov
fcom
jns
cmp
out
clc
js
and
repz
cmp
out
inc
xor
inc
lock
or
scas
mov
mov
adc
push
or
mov
enter
lock
mov
and
shl
lds
push
fbld
jge
mov
outs
mov
jbe
adc
pop
ret
enter
fs
or
retf
push
je
ror
push
sbb
stos
ret
push
jo
icebp
inc
mov
sub
xlat
inc
loopne
xor
lods
inc
ins
mov
pop
push
outs
add
clc
out
fisttp
mov
cs
sub
mov
xchg
ins
push
xchg
loop
dec
in
jno
dec
movs
test
xchg
ret
loopne
fwait
outs
stos
(bad)
cmp
jo
clc
or
outs
dec
jle
jecxz
sub
fist
sbb
ror
or
nop
jns
and
pop
add
lds
xor
dec
das
test
bound
dec
test
mov
shl
or
add
inc
xor
add
ja
sti
mov
xchg
mov
xor
cli
mov
test
xchg
mov
adc
pop
hlt
cmps
xchg
fist
add
shr
(bad)
prefetch
clc
cld
call
fucompp
dec
pop
mov
adc
pop
in
das
add
sub
loope
call
repnz
mov
mov
sbb
data16
or
xor
xchg
push
(bad)
jle
cli
sbb
jmp
jle
jmp
add
or
jno
push
and
push
fadd
xchg
push
inc
inc
ror
cmp
sub
mov
cmc
repz
(bad)
or
stos
hlt
pop
bound
add
mov
pop
test
test
cmova
sub
gs
rcr
mov
and
mov
mov
add
pusha
enter
das
xor
fadd
xchg
repnz
mov
cmp
into
inc
stos
xor
add
fdivr
dec
jg
in
and
dec
(bad)
dec
in
and
and
enter
and
and
jmp
xor
sar
shl
not
pusha
pusha
inc
xchg
leave
fwait
hlt
adc
push
jne
out
mov
xor
add
xor
push
adc
adc
lods
stos
push
call
das
pop
test
xor
xchg
jmp
iret
mov
dec
out
div
or
lods
cs
xor
(bad)
out
mov
popa
repz
fst
xchg
inc
int3
adc
inc
pop
repnz
inc
ret
ja
mov
add
(bad)
in
mov
push
lea
pusha
sbb
mov
cmp
pop
and
enter
xchg
push
adc
adc
or
jecxz
xchg
and
cs
nop
or
dec
mov
jmp
in
cdq
sub
gs
xlat
popa
cmovns
and
inc
ja
inc
jnp
add
xor
test
dec
mov
mov
push
push
push
dec
push
sahf
and
jnp
(bad)
iret
inc
ins
jge
jecxz
retf
sub
cwde
adc
(bad)
push
lds
sub
jg
mov
(bad)
xchg
push
add
pop
sub
sub
pop
lea
mul
and
xchg
jle
in
sahf
(bad)
stc
icebp
clc
mov
in
cmp
arpl
mov
dec
call
int
add
aam
into
aad
or
jb
push
xor
and
inc
and
lds
sbb
xor
es
cli
lods
lea
sbb
mov
fist
imul
adc
add
fsub
sahf
jle
js
mov
lea
es
cmps
lods
push
lods
pop
out
ja
test
pop
jecxz
ins
push
push
jmp
or
cmp
add
out
cld
push
or
mov
sar
mov
cdq
pop
imul
lods
lds
enter
dec
mov
mov
sub
sti
inc
mov
cmp
sbb
xor
mov
mov
ret
adc
test
int3
fld
jge
xchg
out
sub
pop
mov
daa
mov
and
push
push
imul
pop
xor
jmp
xchg
inc
aas
push
xor
push
add
cs
outs
mov
ins
(bad)
int3
sbb
sub
ds
imul
scas
cmp
(bad)
jp
aas
lahf
push
ret
push
cmp
(bad)
pop
jns
fndisi(8087
jle
stos
inc
jo
pop
aaa
mov
add
and
inc
(bad)
ja
or
test
inc
mov
les
(bad)
out
out
clc
and
and
lea
push
add
push
out
push
xchg
sub
or
pop
nop
clc
pushf
(bad)
daa
and
push
or
mov
xchg
bnd
push
retf
push
fcom
and
out
cmp
jg
int
add
mov
jne
mov
out
mov
xor
or
add
jge
pop
aaa
test
jmp
xchg
jp
fs
imul
add
and
loop
std
retf
repnz
in
push
inc
cld
stos
cmp
ret
mov
push
ret
rcr
dec
adc
cmp
jle
mov
fsubr
push
inc
sub
add
xlat
daa
jle
xor
fdivr
loop
fst
loop
fs
lods
jnp
mov
xor
cdq
pop
jne
sar
out
retf
outs
xchg
mov
pop
stos
mov
hlt
adc
test
mov
clc
stos
sub
add
xor
and
pop
loope
pop
out
fwait
mov
and
cmp
xor
fsubr
lea
in
mov
xchg
fnsave
ret
sub
test
ds
dec
jo
mov
sbb
jmp
addr16
cdq
xchg
push
mov
adc
je
cmp
mov
dec
sub
dec
xchg
fild
clc
fdivr
(bad)
out
dec
pop
push
(bad)
mov
mov
mov
or
sti
ja
sbb
shr
dec
and
jns
mov
xor
stos
mov
mov
mov
out
(bad)
sbb
sub
pushf
imul
pushf
or
or
mov
call
mov
push
in
outs
mov
(bad)
iret
ss
mov
int3
add
sbb
or
mov
push
adc
(bad)
inc
loope
fwait
and
add
or
inc
mov
sub
lods
xchg
movs
mov
ja
std
test
inc
stc
js
or
mov
ror
xor
add
call
std
add
mov
mov
dec
cmp
mov
not
xor
loop
nop
pop
arpl
cmp
out
pop
adc
cld
and
rep
push
inc
mov
cmp
adc
mov
add
in
cmps
push
movs
mov
test
(bad)
xchg
cmp
movs
dec
leave
pop
pop
lods
mov
dec
jae
in
pop
lods
test
pop
mov
or
inc
pop
lods
and
inc
and
dec
xchg
cli
xor
mov
retf
xchg
xchg
jno
cld
repnz
push
mov
push
add
out
das
and
lods
jbe
xorps
repz
cmp
push
add
jb
jns
mov
xchg
jge
sub
fst
xor
mov
push
test
push
inc
add
jge
ja
(bad)
jmp
inc
call
out
mov
stos
loopne
add
sti
xor
scas
pushf
pop
popf
mov
clc
jbe
mov
test
mov
inc
stos
out
mov
mov
jns
pop
(bad)
iret
pushf
inc
push
push
dec
xchg
sbb
mov
adc
(bad)
std
sbb
push
pop
hlt
ret
addr16
fistp
jne
add
lds
shl
sub
adc
test
mov
dec
retf
jle
xor
arpl
call
xor
sbb
in
xor
jmp
mov
icebp
shr
cbw
inc
lods
mov
pop
in
repnz
sbb
inc
jge
pop
dec
das
leave
mov
addr16
shl
add
push
mov
js
xchg
int
inc
add
cmps
and
mul
add
into
jmp
mov
xor
shr
sbb
adc
mov
push
test
aad
push
or
cmp
rcl
sbb
pushf
inc
sbb
xchg
aad
pop
inc
hlt
inc
push
mov
add
adc
or
mov
addr16
xchg
movs
dec
repz
call
jo
lahf
push
mov
xchg
xchg
dec
pop
mov
and
sub
and
pop
ret
call
call
jns
ficomp
inc
(bad)
leave
mov
xchg
push
fild
pop
lock
or
jnp
lock
scas
jmp
loop
push
xor
xchg
cmp
and
mov
xor
jp
pop
jbe
add
add
stos
fdivr
popa
lock
mov
and
jmp
push
xor
lods
cmps
inc
mov
icebp
jecxz
xor
outs
arpl
mov
inc
std
sahf
inc
sbb
mov
xor
inc
mov
adc
or
mov
mov
out
sbb
sub
pop
(bad)
imul
cmp
jecxz
sbb
ror
dec
mov
in
ja
test
mov
in
ss
rcl
xor
stos
sti
loop
xchg
push
ins
dec
jmp
jg
aas
mov
retf
push
scas
es
test
xor
mov
push
jmp
das
dec
daa
push
sbb
stos
jmp
mov
mov
xor
les
imul
add
(bad)
into
mov
shr
clc
and
loopne
call
mov
mov
(bad)
aaa
dec
sub
mov
ja
mov
jle
adc
mov
mov
leave
stc
adc
repz
arpl
jne
repz
mov
dec
aam
push
pop
or
aas
or
pushf
ret
dec
pop
mov
in
nop
push
stos
jb
sbb
ror
sahf
cwde
push
test
dec
cli
pop
mov
bound
call
sub
das
jae
addr16
retf
retw
adc
xchg
imul
ret
loop
push
(bad)
jb
or
sbb
int
ss
test
test
mov
push
movs
test
pusha
adc
adc
lock
jp
xor
pop
jns
fst
jbe
jo
push
imul
stos
shl
push
repz
ret
fdiv
push
mov
loopne
cdq
and
pusha
sbb
ret
cld
cmp
rep
aam
ss
cmp
xchg
sar
outs
pusha
xchg
sbb
sbb
push
mov
xchg
sub
das
inc
test
pop
pop
ss
nop
jge
aaa
jge
repz
imul
or
das
std
fmul
jmp
jb
inc
push
popa
leave
push
sbb
jmp
mov
dec
push
push
mov
movs
jmp
sub
and
sub
fistp
mul
jp
xor
pop
mov
push
push
pop
enter
mov
mul
pop
shr
add
retf
inc
push
imul
xor
call
jp
sbb
push
xlat
mov
mov
les
jbe
call
mov
xor
mov
xchg
push
neg
jb
mov
fst
xchg
sbb
xchg
das
stc
xchg
inc
in
sbb
outs
adc
cmp
popf
xchg
lods
arpl
or
push
xchg
mov
test
xchg
sub
test
aaa
mov
data16
scas
dec
mov
aam
ins
sbb
add
mov
or
dec
mov
or
je
sub
jg
ds
xchg
mov
stos
add
lods
(bad)
pop
cmc
dec
jns
xchg
adc
cmps
int
js
leave
and
inc
test
xor
pop
jno
mov
pop
sahf
jg
loopne
adc
cmp
rcr
inc
cmps
gs
pop
cmp
pop
jb
jns
cli
xor
cmp
sub
mov
or
(bad)
in
int
push
test
inc
or
xchg
fdivr
sub
pop
xor
ret
in
out
lods
mov
or
and
jbe
cmps
test
mov
retf
sbb
addr16
loop
add
sbb
jp
jne
out
lods
pop
pop
retf
sub
repnz
es
fcmovne
imul
fwait
je
fadd
imul
jp
jnp
test
popf
mov
jmp
sar
clc
jl
mov
stc
in
jmp
or
adc
sub
fsub
jmp
sub
pop
cmc
adc
setns
ror
out
call
mov
adc
mov
movs
test
scas
pop
jp
outs
dec
leave
dec
jg
sub
shl
pop
add
xor
sub
lds
scas
pop
inc
mov
loopne
cmp
fistp
loop
cld
adc
inc
fdiv
jne
pop
popa
es
xor
sbb
dec
jmp
cmp
jmp
mov
ins
jnp
sti
inc
mov
jmp
dec
lea
lea
cmp
idiv
cmp
xor
es
imul
cli
nop
arpl
jg
sub
ss
addr16
inc
inc
sub
retf
mov
adc
push
xor
sub
out
out
stos
sbb
or
adc
add
fld
icebp
daa
es
adc
aam
mov
jae
gs
mov
leave
inc
push
retf
and
and
push
jle
xor
data16
in
xor
push
cmp
shl
fs
inc
popf
or
push
sbb
xchg
shl
xor
mov
xchg
es
repnz
dec
cld
jb
or
pop
xchg
lahf
movs
(bad)
movs
pop
dec
(bad)
xchg
cld
shr
cmc
stc
add
fld
push
sbb
jo
aaa
movs
(bad)
cmc
daa
push
cmp
cli
mov
(bad)
mov
mov
imul
int
sbb
test
(bad)
cmp
rcl
leave
adc
push
inc
call
pop
test
neg
fnstsw
jne
cwde
cmps
dec
stos
inc
inc
dec
stos
ror
into
mov
mov
pusha
mov
test
adc
add
xor
cmp
into
addr16
pop
std
cli
dec
mov
and
je
push
or
mov
(bad)
adc
push
push
call
cs
dec
and
loope
jg
test
call
mov
mov
(bad)
loopne
(bad)
and
sbb
inc
les
pusha
out
inc
xchg
scas
mov
dec
add
lahf
xlat
sbb
xchg
ret
or
punpckhwd
call
and
clc
daa
pop
jnp
push
psubusw
sub
into
stos
sbb
sub
sub
cmp
inc
sbb
cs
xor
jecxz
add
sbb
movs
pushf
xlat
hlt
aam
mov
in
inc
mov
ret
out
(bad)
outs
sti
mov
cmp
jno
inc
leave
push
dec
(bad)
imul
out
sbb
or
mov
mov
aam
push
xchg
push
adc
cwde
das
inc
adc
scas
icebp
pop
add
jne
or
pusha
fimul
and
mov
mov
cmp
sbb
sbb
mov
repnz
sub
xchg
cmp
xchg
popa
outs
adc
mov
aam
sub
fnstcw
mov
jge
push
mov
push
or
jno
and
push
mov
adc
push
fwait
jle
repnz
cmp
and
jo
pop
xchg
retf
add
jp
or
lock
out
popa
and
fwait
jp
icebp
xor
inc
call
push
mov
xor
push
aaa
inc
xchg
inc
(bad)
out
scas
loopne
daa
dec
jecxz
cmp
test
pushf
cmp
rol
push
jge
fidiv
popf
dec
cli
test
cld
inc
mov
and
int
cmps
call
outs
add
push
cmp
push
and
les
and
enter
xor
push
xor
pop
push
ins
dec
retf
not
inc
mov
daa
out
mov
cs
repnz
push
cmps
call
inc
and
mul
xor
shl
mov
es
stos
(bad)
icebp
jg
mov
inc
sar
mov
xchg
or
cmps
mov
cmp
ds
call
jmp
sbb
outs
fwait
cmps
mov
sub
dec
daa
xor
cs
pop
add
sub
ret
movaps
xor
stos
(bad)
test
mov
mov
or
and
ja
xchg
mov
pop
cmp
scas
cmps
xchg
push
jne
xchg
into
push
imul
cmp
call
push
cmp
xchg
fwait
pop
jae
int3
enter
mov
sub
push
adc
retf
jmp
aaa
icebp
repz
test
movs
mov
repz
jns
mov
pminub
mov
lock
xchg
inc
xchg
inc
mov
fucomi
int3
sbb
lods
mov
addr16
test
add
sub
inc
mov
cmp
cwde
sbb
sahf
inc
lock
or
pop
gs
loopne
inc
and
jecxz
adc
xor
frstor
test
push
leave
adc
xchg
adc
jmp
xor
inc
popa
fld
sbb
jmp
in
inc
rol
sub
cmp
cmp
int3
mov
mov
pusha
adc
and
pop
and
fchs
iret
xlat
mov
mov
push
pop
jne
and
jnp
push
outs
sub
(bad)
int
push
jl
lds
jno
jecxz
cmp
movs
xor
scas
jo
xor
gs
test
retf
pop
sub
mov
inc
inc
std
cs
in
pop
add
stc
popa
mov
jb
xor
and
push
and
mov
call
adc
mov
scas
and
out
ins
aam
out
ret
pop
mov
or
arpl
cmp
sti
jns
rol
cmp
aaa
fld
in
ds
push
add
cmc
push
movs
xor
ja
sti
dec
adc
and
sub
mov
arpl
enter
or
jnp
in
mov
lahf
push
(bad)
dec
dec
inc
xor
adc
adc
icebp
add
sar
pop
pop
outs
ja
popa
idiv
into
mov
xchg
xor
xor
in
aaa
jno
jecxz
cdq
push
push
push
pop
xchg
xor
add
jno
sbb
shl
cmp
ja
scas
fidivr
mov
aas
jbe
addr16
and
adc
ret
loopne
stc
fidiv
sub
xor
call
ins
add
test
jb
in
repnz
fwait
cmp
jge
or
adc
pop
sar
gs
inc
mov
lods
in
adc
dec
dec
push
ins
lahf
lea
clc
push
mov
mov
push
mov
and
leave
sbb
adc
cmps
jno
rcr
daa
das
jae
sbb
adc
fnsave
add
push
ror
mov
push
loope
dec
cmps
adc
mov
test
or
xor
test
sbb
test
stos
cld
cmps
or
or
int
dec
mov
arpl
jns
pop
cmp
cmps
cmp
inc
out
in
js
dec
cwde
sbb
mov
sbb
imul
rol
test
loope
or
dec
cmc
xchg
and
sbb
bound
aam
dec
xor
xchg
out
inc
cmps
push
inc
fmul
xor
and
out
dec
xchg
push
jmp
outs
cs
fsubr
dec
fisttp
test
out
movs
or
out
fs
paddsw
mov
aas
vshufps
cmp
pop
add
mov
int3
mov
or
test
push
sbb
pop
outs
jmp
outs
rcl
in
cwde
fs
push
repnz
push
push
mov
test
popa
xchg
test
test
inc
inc
dec
fnsave
add
push
(bad)
in
jecxz
push
popf
nop
xchg
das
sti
stc
(bad)
sbb
les
cmps
movs
pop
mov
xchg
retf
adc
xchg
jp
push
add
lock
neg
bound
pop
cs
stos
outs
inc
mov
leave
or
iret
rol
mov
inc
xchg
test
ret
mov
push
add
adc
mov
ins
push
lods
cmp
add
idiv
ins
inc
or
inc
xchg
fild
ins
xchg
iret
mov
fdivr
loope
in
add
fcomi
sub
pusha
cld
xor
(bad)
movs
test
je
dec
mov
out
add
shr
xchg
dec
call
mov
jno
cs
pusha
xchg
(bad)
sti
xchg
inc
and
jmp
cwde
sub
ins
mov
sub
fsub
imul
xchg
jle
test
xchg
loop
mov
test
mov
mov
mov
loopne
adc
repnz
sub
ins
cdq
adc
enter
imul
pop
push
push
addr16
xchg
push
or
jmp
xor
pop
and
test
dec
and
add
int
call
aam
cmc
and
add
xor
xor
sbb
mov
add
mov
mov
pop
test
xchg
ins
dec
sbb
out
(bad)
push
jns
test
or
test
out
xlat
in
sti
jnp
ja
jae
int
aas
push
sbb
fidivr
mov
push
xchg
nop
inc
test
ret
push
ror
(bad)
and
push
(bad)
ja
mov
std
idiv
xchg
jmp
or
lea
pop
mov
inc
mov
stos
stos
pop
push
jae
xor
sbb
stos
stos
and
cmps
jae
xor
push
mov
inc
aam
cmp
(bad)
pop
jl
into
fld
ficomp
pop
pop
dec
pop
jle
jns
shl
sub
call
xchg
and
test
sti
clc
inc
jl
inc
cmps
cmps
pop
adc
push
cmps
jmp
inc
repz
icebp
retf
jb
mov
in
pop
scas
icebp
jg
push
push
std
inc
movs
cwde
retf
jge
sub
adc
(bad)
in
sbb
lods
cwde
fstp
push
jmp
rcr
lock
inc
rol
sbb
call
jnp
pop
ret
popa
xchg
fimul
push
push
int
lods
mov
mov
mov
pop
repz
inc
pop
adc
(bad)
pop
es
out
lea
rcr
into
pop
inc
and
pop
aaa
jbe
sub
mov
mov
mov
(bad)
dec
adc
jmp
mov
push
iret
jne
(bad)
and
cld
inc
aam
mov
xor
outs
mov
mov
jnp
sbb
into
scas
hlt
adc
jb
int
dec
xchg
sbb
dec
add
bound
jmp
jg
call
inc
mov
mov
(bad)
jb
cs
bnd
sbb
iret
ja
fsub
fld
fadd
inc
outs
sahf
das
fbstp
and
push
pop
sbb
(bad)
xlat
out
adc
xor
jecxz
fwait
lock
shl
and
rol
popa
loopne
inc
mov
ficomp
popa
js
ja
cld
pop
adc
ins
(bad)
int3
sbb
outs
mul
fwait
dec
sub
dec
push
xchg
jmp
adc
push
ja
(bad)
adc
mov
jns
xor
lods
(bad)
jmp
cmp
(bad)
outs
call
cmp
mov
and
lods
in
lds
lock
mov
nop
pop
test
xchg
add
cmp
adc
lods
lock
out
sbb
fs
cmp
addps
dec
aad
scas
out
out
lock
inc
sbb
mov
sbb
mov
inc
call
(bad)
mov
sbb
lahf
pushf
dec
aad
pop
and
xor
fistp
(bad)
pusha
cmp
sub
pop
gs
scas
pop
and
lods
mov
iret
loope
sbb
xchg
and
adc
sbb
pop
push
cld
pop
dec
scas
test
jl
ret
jnp
mov
adc
(bad)
imul
das
popa
and
add
and
push
pop
push
pop
loope
add
cdq
outs
mov
dec
pop
sbb
fwait
stos
ss
jnp
jg
ins
sub
fldenv
jo
lds
leave
or
xor
push
je
dec
dec
and
fst
jmp
data16
out
mov
sbb
mov
in
cmps
repnz
push
push
inc
ins
(bad)
stc
sub
shl
push
and
dec
in
aam
rol
xor
lock
and
dec
bound
or
sbb
sbb
lds
outs
pop
mov
in
cmc
cli
adc
aas
mov
ins
dec
je
into
lock
pop
call
ja
jle
aas
retf
les
mov
mov
(bad)
in
ficom
aad
mov
pusha
iret
push
or
jns
xchg
sub
pop
aam
inc
neg
cmp
clc
or
popf
add
push
or
xor
popa
in
int3
mov
retf
mov
iret
call
pop
cld
sub
jecxz
jl
cmp
lods
adc
and
push
scas
in
fdivr
fst
nop
dec
shl
jg
xchg
mov
std
fmul
dec
jg
or
or
jge
dec
or
mov
shl
adc
mov
popa
clc
fs
iret
xor
fiadd
hlt
das
pop
pop
sub
cmp
jae
adc
ins
jmp
inc
inc
xlat
ret
sbb
jge
xlat
nop
ret
or
imul
jmp
loopne
inc
jl
pop
test
xchg
sbb
cmp
pop
(bad)
stos
xchg
test
adc
mov
pop
jo
imul
jecxz
push
inc
repnz
dec
pop
cmp
jne
loopne
shl
pop
push
jle
test
paddsb
pusha
lahf
push
xchg
stos
stc
add
fwait
push
in
lods
push
pop
cmp
in
cmps
sti
int3
int
or
std
dec
gs
ret
pop
cld
sub
lock
das
popa
mov
mov
cmp
test
mov
jg
icebp
leave
sbb
sub
sub
lods
xchg
adc
xchg
repz
retf
mov
fdivr
sub
fcom
jne
(bad)
ss
push
mov
mov
pop
sbb
out
fidivr
push
jmp
sub
imul
adc
das
mov
pop
adc
pop
jmp
out
aad
inc
or
jp
jecxz
fwait
push
cmc
aaa
icebp
mov
push
adc
into
mov
cs
jecxz
stc
in
add
sbb
rcl
fwait
pop
jno
int
mov
icebp
retf
popa
pusha
jne
mov
ret
xor
(bad)
out
cld
bound
fmul
lahf
push
sbb
sub
lods
and
inc
fyl2xp1
stos
jno
xchg
adc
mov
cmp
jg
hlt
xchg
jbe
xor
out
push
das
aaa
push
pop
ja
xchg
inc
mov
pop
jno
ins
xor
pop
popw
add
add
es
clc
jmp
add
cdq
loope
mov
xor
mov
fmul
test
fs
sahf
retf
int
test
loop
push
pop
test
popa
xchg
mov
jmp
leave
jae
fmul
fdivp
mov
inc
movs
or
mov
bnd
(bad)
and
push
push
ja
mov
sbb
cmps
fcomp
fidivr
pop
mov
jae
adc
mov
fisttp
jmp
nop
rcr
mov
cmps
shl
repnz
cmp
mov
mov
inc
clc
imul
cmp
in
pusha
mov
hlt
xor
mov
or
imul
push
mov
add
pop
es
jge
pop
jmp
jnp
dec
push
inc
stos
dec
mov
outs
movups
fnstcw
and
push
ja
inc
dec
int
je
or
ins
les
sub
hlt
shr
adc
inc
fidiv
sahf
popf
add
aad
fcomi
je
xchg
shr
push
stos
mov
mov
mov
jns
xchg
and
push
xor
jecxz
and
gs
xchg
or
repnz
xor
lds
fstp
xlat
nop
adc
in
or
cmps
xlat
mov
pop
call
cmps
dec
jns
sub
bound
dec
cmps
sbb
jne
pop
push
xchg
gs
(bad)
pop
arpl
out
outs
(bad)
dec
fst
in
dec
dec
push
and
outs
or
loop
or
add
mov
dec
or
fwait
mov
fcomp
out
mov
aam
inc
test
scas
dec
gs
mov
lock
leave
jg
out
jmp
fild
mov
add
add
pop
push
jb
mov
(bad)
iret
mov
jp
out
mov
push
pop
repz
or
or
sub
jl
int3
mov
dec
jmp
test
inc
mov
mov
out
and
pop
inc
xor
mov
or
jecxz
nop
sti
mov
push
test
jmp
cdq
outs
mov
aad
inc
lods
div
jl
retf
add
cmp
dec
fistp
cwde
out
das
ss
out
dec
push
mov
pop
mov
in
xor
push
cmp
je
bound
xor
cmp
xchg
and
jp
fdiv
or
inc
push
pop
lahf
mov
and
test
xchg
lds
pop
jb
jge
add
je
mov
sti
addr16
adc
push
int3
mov
jmp
in
in
inc
daa
les
jae
sbb
sbb
mov
sub
pop
imul
popa
jl
scas
mov
sbb
ret
lock
and
add
pop
jmp
movs
sub
aam
dec
xchg
pop
or
fwait
pop
cmps
jmp
push
(bad)
jns
stos
ja
sbb
pop
shl
data16
aas
inc
inc
dec
sbb
cmp
pushf
sbb
xchg
cli
arpl
aam
dec
je
ret
sub
les
aad
test
fisttp
mov
dec
sub
idiv
dec
shl
fcmovne
imul
test
js
fs
shl
mov
pop
fwait
sbb
push
xor
into
mov
jge
outs
sub
mov
call
mov
pop
cmp
aam
cli
push
inc
adc
push
ds
dec
jp
ja
inc
mov
xor
cdq
push
inc
push
mov
and
push
mov
push
mov
js
mov
fadd
mov
(bad)
adc
bound
lock
xchg
and
addr16
mov
mov
test
add
xchg
push
push
cmp
sub
mov
and
mov
into
add
sbb
(bad)
cmps
mov
(bad)
pop
inc
inc
outs
outs
xor
xchg
cmp
dec
sar
in
dec
xchg
sar
loopne
mov
jb
push
mov
in
fdivr
movs
fcmovbe
push
in
xchg
mov
or
jb
pop
es
in
adc
ins
jo
inc
ret
sub
cmps
sbb
lods
aaa
arpl
fwait
jno
popa
daa
adc
leave
mov
push
mov
and
cwd
or
dec
cli
mov
sahf
dec
getsec
push
push
push
shl
retf
sub
repz
icebp
cmp
test
mov
push
jno
xchg
loope
icebp
sbb
mov
cli
push
test
idiv
repnz
mov
outs
mov
idiv
add
jl
bsf
fdivr
out
ds
cmps
ja
inc
aam
jne
retf
cli
icebp
dec
mov
or
push
enter
push
div
mov
inc
call
and
(bad)
mov
cmp
cmova
bound
cmps
xchg
jno
xor
sub
xchg
mov
jne
xor
mov
xor
retf
lods
aas
xchg
or
add
(bad)
jmp
mov
(bad)
push
jecxz
cmp
scas
scas
add
out
mov
xchg
mov
es
movs
sub
sbb
cli
iret
adc
xchg
mov
sar
out
mov
jmp
sbb
and
cmp
arpl
call
lahf
mov
movs
jg
push
mov
push
mov
xlat
ja
xchg
and
xchg
inc
clc
leave
or
sti
sub
ret
cli
ret
pop
aad
ret
test
push
mov
xor
sub
cmp
xor
jp
jnp
stos
idiv
sbb
out
movs
inc
mov
dec
mov
call
xor
mov
mov
push
scas
jne
xchg
sbb
mov
inc
sbb
push
in
(bad)
push
or
push
xchg
jmp
xor
test
jmp
call
popa
lock
mov
cmp
cmps
jge
sub
test
mov
lds
xor
sbb
das
inc
scas
lods
cmp
push
fcmovnbe
xor
cdq
mov
jp
inc
cmp
rcl
xchg
outs
rcl
adc
dec
mov
fstp
push
dec
pop
inc
xor
xchg
mov
aas
mov
cmp
pop
add
xlat
stc
fwait
outs
daa
dec
mov
mov
mov
sub
stc
aaa
enter
arpl
push
push
pushf
mov
not
ins
pop
sbb
div
cmp
ret
loopne
(bad)
out
dec
jecxz
dec
in
mov
adc
out
retfw
inc
mov
mov
add
xchg
or
fistp
sub
les
pop
inc
pop
idiv
push
adc
iret
fwait
mov
push
xchg
inc
pop
mov
aad
pusha
movs
or
add
dec
cmps
jge
lds
push
inc
(bad)
jmp
jmp
mov
or
pusha
cmp
pushf
leave
xor
daa
fild
(bad)
popa
push
jge
clc
add
and
and
xor
and
or
and
pop
mov
push
add
mov
clc
fwait
in
js
stos
push
push
scas
jno
aam
xchg
ins
and
sbb
shl
pop
repnz
rol
ds
std
pop
add
pop
pop
mov
mov
retf
fidiv
push
cs
(bad)
movs
adc
xor
push
not
sbb
pop
sbb
cmp
clts
sub
cmp
adc
pushf
mov
in
mov
dec
loope
xlat
add
pop
pop
push
fiadd
lds
mov
jle
leave
push
inc
jmp
data16
jmp
jo
push
clc
jp
add
pushf
mov
stc
inc
ds
mov
pop
xor
div
out
(bad)
fdivp
mov
mov
out
daa
inc
lods
lea
mov
add
xor
and
push
(bad)
(bad)
test
inc
arpl
cmp
stc
hlt
gs
lahf
pushf
mov
popf
mov
and
neg
push
aaa
stos
in
cs
sub
fwait
cmp
popa
ja
cmp
mov
fsub
dec
jle
pop
xchg
mov
add
shr
(bad)
push
das
cwde
cmp
fidivr
shl
mov
jmp
mov
mov
pop
dec
or
jl
sub
sti
movs
jle
add
mov
push
dec
idiv
dec
jnp
adc
jge
lock
xchg
mov
mov
ficomp
int3
(bad)
jmp
xchg
test
and
pop
sub
fwait
lods
add
loope
xlat
es
sbb
cmps
mov
rcr
sbb
sbb
jle
clc
sbb
mov
pop
jge
sbb
mov
adc
sub
sub
rcl
enter
cli
and
ds
out
xor
jmp
(bad)
sub
dec
aaa
xchg
std
push
xor
enter
add
jo
aad
data16
adc
mov
push
mov
cmps
sar
mov
ja
das
add
mov
or
nop
js
inc
and
in
mov
mov
ret
out
mov
sbb
sbb
dec
mov
mov
mov
push
daa
jmp
inc
dec
xchg
retf
dec
push
test
inc
fisubr
icebp
dec
(bad)
mov
pop
call
clc
fsub
dec
push
lahf
sub
mov
aad
mov
xchg
xor
les
(bad)
fiadd
enter
loopne
jmp
call
push
dec
xchg
call
nop
lods
aaa
cmps
retf
rol
xchg
and
xchg
mov
ucomiss
xchg
mov
add
mov
and
(bad)
and
cwde
loope
inc
test
jbe
mov
or
dec
cmps
and
inc
movs
scas
cmp
or
fidivr
mov
push
ret
dec
mov
les
sbb
dec
or
add
test
arpl
call
loope
sbb
add
xor
syscall
fisttp
sbb
loop
outs
in
pop
fidiv
mov
mov
inc
mov
adc
mov
shl
mov
add
cmp
enter
push
xchg
ins
mov
shl
fs
dec
loope
ror
dec
push
sti
or
push
rcr
or
xchg
cs
mov
into
test
das
mov
xor
push
dec
pop
pop
nop
fistp
sbb
jecxz
cmp
cmp
mov
cmp
pop
leave
popf
mov
pop
pop
sahf
in
sbb
push
jl
and
cmc
shl
cmp
or
cmp
xor
lods
add
adc
dec
nop
cli
mov
popa
inc
popa
sbb
(bad)
loopne
movs
or
pop
lea
add
pop
fist
xchg
inc
mov
ss
jl
adc
(bad)
cli
jl
push
retf
sbb
mov
fsubr
sub
cmp
fld
mov
cmp
ins
push
daa
pusha
mov
std
push
dec
cmps
lahf
mov
sub
fidiv
in
jns
or
outs
aaa
sub
cld
inc
idiv
ss
ins
(bad)
and
jmp
mov
call
inc
arpl
into
dec
loop
fs
inc
dec
pop
mov
xlat
jg
dec
xchg
and
cmc
loopne
daa
lods
jle
sbb
test
sahf
push
test
popa
hlt
gs
adc
sub
and
sbb
and
add
cmp
or
add
push
mov
pop
out
or
mov
push
add
call
fs
xor
js
cwde
(bad)
jae
jns
pop
inc
mov
inc
lods
movs
jle
mov
inc
rcl
and
arpl
mov
addr16
fs
mov
mov
icebp
push
out
cmps
xchg
xor
loope
xor
add
and
mov
push
int3
xor
cli
shr
adc
sub
dec
loope
sub
dec
mov
je
mov
scas
or
or
mov
(bad)
inc
aas
ftst
mov
add
fidiv
aaa
mov
fwait
adc
std
jl
dec
repz
pop
dec
jmp
jae
and
inc
mov
(bad)
xchg
pusha
jbe
adc
xchg
scas
and
mov
push
push
pop
push
test
fucom
sti
jp
push
jnp
add
and
xlat
lods
cmp
xchg
ja
shr
aaa
sub
sbb
or
sub
jle
sub
scas
xor
mov
mov
and
cvtps2pd
push
dec
mov
xor
repnz
in
xchg
and
retf
pop
mov
adc
lds
push
and
jbe
push
loop
inc
jge
mov
call
cmp
jb
mov
int
or
js
push
sbb
pop
pushf
inc
call
cmc
xor
add
push
ins
sub
fisub
cmps
cwde
jo
loope
mov
mov
outs
call
mov
mov
stos
xlat
dec
pop
ret
mov
pop
scas
mov
sahf
dec
or
xchg
inc
test
cli
xor
jle
in
inc
dec
dec
test
fdivr
out
dec
dec
test
into
scas
scas
sbb
imul
dec
cld
push
mov
scas
fdivr
sub
add
xor
push
pop
xor
into
repnz
xchg
lods
(bad)
xchg
pushf
push
leave
mov
sahf
adc
mov
imul
aas
xchg
outs
pop
(bad)
shl
mov
gs
and
(bad)
mov
jno
movd
sbb
in
sub
pushw
dec
cmps
fwait
cmp
mov
les
sbb
sbb
pop
push
pop
in
sahf
mov
dec
(bad)
jmp
test
mov
dec
xor
mov
xchg
(bad)
sub
retf
ja
mov
jge
(bad)
stos
into
(bad)
cld
push
shr
and
push
add
lds
arpl
jge
adc
cpuid
inc
sub
dec
xor
xchg
push
cmp
(bad)
(bad)
jecxz
inc
inc
jns
and
hlt
push
add
jge
cmps
push
retf
push
mov
pop
inc
ret
ret
ins
in
sbb
jmp
adc
push
mov
out
jae
inc
repz
pushf
lahf
cmp
dec
xchg
fld
push
or
mov
cmp
push
inc
and
pop
movs
js
pop
jmp
pop
and
inc
push
test
fld
mov
xchg
int
and
aas
das
push
icebp
or
inc
test
sbb
push
push
push
push
xor
dec
mov
je
shr
shl
push
fisubr
inc
mov
sbb
xchg
adc
sbb
sahf
mov
popa
add
adc
sti
icebp
ss
push
fcom
icebp
ss
jecxz
retf
or
iret
stos
jmp
fisub
pminub
jb
jbe
pop
aas
into
pop
pop
movs
in
iret
retf
fs
or
mov
jmp
dec
(bad)
cmp
(bad)
cmp
fdiv
test
cmc
xchg
mov
mov
pop
dec
mov
sub
xor
cld
sub
cmp
fdivr
mov
or
jb
push
inc
dec
sub
push
cmps
fstp
cwde
je
test
and
cdq
out
jmp
xchg
popa
hlt
add
and
push
fimul
add
popf
cmps
(bad)
jl
call
or
jge
push
adc
mov
push
mov
ficom
sti
jae
aas
shr
xchg
inc
jp
mov
adc
aaa
push
lea
pop
or
cdq
mov
into
jae
mov
popa
jo
popf
pop
test
(bad)
in
les
movs
stc
inc
and
and
inc
sbb
es
hlt
test
stos
dec
pop
inc
hlt
out
push
mov
mov
dec
xchg
lea
lock
aam
out
shl
(bad)
jecxz
ds
jb
mov
adc
retf
retf
stos
fisttp
cld
dec
call
repnz
outs
sahf
lds
inc
int3
push
jl
xor
inc
xchg
dec
inc
ja
xor
mov
sbb
cmp
add
ret
and
test
add
sbb
inc
popf
movs
das
scas
(bad)
or
pop
lods
mov
sub
xchg
jge
int3
ja
test
jbe
sbb
nop
cmps
xchg
bound
dec
imul
xor
adc
mov
jmp
ja
sub
mov
xchg
mov
fwait
aaa
push
mov
sti
movs
mov
dec
jge
cmpxchg
mov
(bad)
pop
rcr
stos
ret
iret
fld
sub
in
sbb
scas
inc
mov
jp
dec
mov
scas
and
ds
adc
ja
data16
mov
inc
xchg
fs
cs
or
hlt
(bad)
push
push
push
dec
mov
mov
in
jg
cmc
sub
mov
adc
pushf
pusha
mov
mov
inc
(bad)
inc
cmc
loope
packssdw
xlat
stos
add
je
enter
fadd
stos
push
ss
jmp
stc
(bad)
sbb
cmc
clc
xor
adc
pop
not
and
outs
pop
in
jp
aas
fnsave
jecxz
fs
in
ret
sub
bound
in
das
pop
rcl
xchg
xchg
ins
cmps
in
cmps
sub
movs
sub
in
lods
inc
push
lock
cs
ret
popf
test
add
mov
sub
loop
sub
test
arpl
sar
xor
xor
ja
ffree
adc
lea
xchg
xor
nop
daa
jae
inc
in
sub
and
add
adc
in
mov
mov
dec
xchg
add
out
js
pusha
mov
sbb
jmp
loope
popa
outs
add
std
mov
iret
push
xlat
jae
jle
sbb
xchg
clc
fadd
dec
sbb
int
psllq
scas
jle
in
and
mov
inc
and
enter
sbb
mov
push
aas
pushf
sub
mov
pop
test
hlt
les
mov
xchg
xchg
xchg
enter
rcl
xor
adc
cld
icebp
dec
sub
imul
adc
add
xor
fsqrt
jp
repnz
shr
mov
xor
mov
mov
lds
dec
test
sbb
mov
ins
mov
(bad)
sti
cmps
mov
dec
mov
mov
or
push
sub
ins
test
call
cmp
and
xor
cmp
adc
fwait
jle
pop
(bad)
mov
movs
lods
sbb
mov
mov
mov
loop
push
xor
push
movs
(bad)
xor
stos
leave
jle
jne
(bad)
cmc
(bad)
aaa
xchg
mov
cmp
jbe
mov
mov
jae
add
(bad)
lods
(bad)
adc
or
sub
clc
jecxz
inc
out
jecxz
fimul
sbb
stc
push
stos
adc
cwde
jg
and
cld
sbb
fisttp
(bad)
cli
cs
int3
daa
std
xchg
leave
mov
(bad)
pop
(bad)
(bad)
push
cmp
arpl
rcr
pop
jge
inc
mov
dec
jnp
mov
push
clc
test
ins
mul
push
jns
inc
or
cmps
xchg
loopne
dec
popf
hlt
call
jge
repnz
hlt
adc
sub
aad
adc
jo
cmps
sub
pop
pop
jno
out
out
push
enter
ficomp
xor
in
call
or
sbb
pop
outs
jb
sbb
adc
loopne
(bad)
push
mov
aam
sbb
push
mov
(bad)
iret
movs
es
mov
mov
data16
cli
jb
stos
ins
retf
lods
xchg
mov
adc
mov
jne
push
xchg
jb
jmp
mov
mov
cmp
xor
stos
out
inc
pop
jp
push
ins
or
and
mov
or
leave
cmc
cmps
ror
das
imul
and
add
ins
jo
sbb
jbe
mov
mov
fistp
test
jbe
adc
cmp
push
(bad)
(bad)
repz
lods
mov
aad
add
aas
fidiv
shl
in
cmp
push
mov
std
push
push
xor
aaa
xor
popf
in
(bad)
mov
js
ins
adc
ins
(bad)
mov
sub
dec
xchg
push
out
inc
push
jmp
dec
jle
popa
rol
jecxz
jbe
scas
out
popa
cmp
pop
ret
cmps
jp
jl
push
cmp
daa
cmp
xchg
mov
sbb
pop
in
sub
push
bnd
jne
fwait
sbb
cmp
lock
shld
and
mov
hlt
or
pusha
lahf
(bad)
out
mov
or
fs
fdivr
bound
xchg
mov
mov
arpl
xchg
xchg
bound
jg
xor
lods
xor
fcomp
xchg
push
adc
pop
lods
cmp
push
adc
mov
pop
aaa
(bad)
test
cmp
jmp
xor
mov
cs
dec
out
or
mov
jg
cmps
xor
pop
mov
sub
outs
cmp
stos
adc
in
sub
stos
xor
adc
add
xcrypt-ofb
cmps
test
mov
or
nop
outs
lahf
xor
xchg
outs
xchg
pop
jno
sbb
pop
add
test
sahf
cld
jne
lock
mov
mov
out
(bad)
test
imul
shl
(bad)
fldcw
dec
xchg
mov
fsubr
jp
or
pop
je
adc
mov
add
out
call
inc
pop
imul
stos
xor
stos
mov
enter
(bad)
and
xor
or
add
pop
call
pop
xchg
add
retf
or
out
sar
dec
js
mov
and
cmp
mov
sub
and
pop
cmps
(bad)
rcr
mov
hlt
or
pop
cmp
mov
stc
mov
dec
push
jo
call
adc
repnz
sar
cli
inc
mov
stos
enter
sub
lods
(bad)
xor
xor
popa
out
fadd
out
stc
loop
pop
add
dec
sub
pop
xor
xchg
and
out
cmps
push
test
or
aad
mov
jmp
xchg
xchg
jmp
dec
inc
test
es
lock
jg
mov
xchg
xchg
retf
adc
nop
in
xchg
sbb
cmovno
aad
jle
es
aam
adc
xchg
popa
or
cmps
les
ds
push
fisubr
cmp
(bad)
fcom
xor
sbb
push
icebp
pop
mov
popf
dec
and
popf
sub
leave
in
in
cld
xor
mov
jno
sub
inc
mov
jge
(bad)
mov
dec
out
fnstsw
and
retf
adc
test
das
xor
out
mov
or
push
stos
int3
sti
adc
pop
icebp
loopne
lods
bound
mov
fidiv
jae
dec
sar
mov
push
add
push
xlat
inc
mov
pop
pushf
xor
cmc
(bad)
lods
mov
outs
js
adc
imul
dec
(bad)
(bad)
stc
nop
mov
stos
call
push
pop
nop
mov
push
xchg
leave
xor
push
popf
cmp
pushf
rcl
shl
pop
repz
icebp
idiv
js
cmp
cmp
movs
mov
pop
xchg
mov
inc
xchg
mov
shr
mov
pop
icebp
in
ror
adc
(bad)
sti
cmp
jae
pop
sbb
mov
cli
xchg
lods
jno
jns
sub
fdiv
add
xor
mov
pop
xchg
enter
aam
lds
outs
mov
xchg
or
xchg
rcl
push
cli
fsub
retf
aam
jo
inc
xor
inc
and
cmp
fldcw
push
call
icebp
mov
mov
push
cdq
jle
or
mov
outs
jbe
or
ins
daa
adc
div
inc
pop
movs
mov
jge
push
adc
call
inc
arpl
stos
clc
mov
leave
mov
add
sub
call
repnz
push
pop
mov
cmp
cli
mov
push
xor
call
ja
adc
mov
mov
bsr
mov
xor
aas
ins
jmp
movs
loop
adc
stc
cs
inc
popa
pop
lea
call
mov
mov
iret
lods
iret
out
movs
or
iret
cmc
adc
push
nop
sbb
push
lahf
mov
lods
lock
and
ins
add
pop
mov
or
and
repnz
scas
cmp
(bad)
push
cs
jb
imul
fsub
adc
adc
ficom
rol
add
jno
mov
sahf
mov
pop
loope
and
inc
inc
test
sub
xor
mov
mov
fwait
shr
sub
mov
mov
or
stos
add
inc
inc
mov
pusha
mov
das
adc
adc
icebp
inc
sub
jge
movs
mov
dec
leave
pop
fs
jge
sub
xchg
or
call
int3
rcr
xchg
ret
mov
test
rcr
and
pusha
clc
in
xchg
add
mov
clc
mov
in
push
pop
loop
call
mov
dec
jmp
jnp
or
mov
push
jg
or
retf
push
or
sahf
pop
mov
cmp
push
cmp
iret
test
mov
test
sar
mov
push
ret
dec
cmp
fwait
adc
mov
pop
mov
mov
sbb
test
hlt
ret
dec
(bad)
mov
inc
mov
mov
into
xor
jmp
ss
fs
and
jno
aas
mov
in
cmc
div
inc
sub
sahf
int
iret
xor
popf
mov
sub
loope
jg
jae
jg
sbb
frstor
(bad)
(bad)
jmp
hlt
enter
dec
shl
test
mov
cs
cmps
and
clc
pop
popa
movs
fld
in
mov
(bad)
lock
mov
je
and
push
lods
aas
jo
(bad)
gs
test
push
scas
xchg
pusha
xor
mov
mov
bound
dec
or
dec
push
push
sbb
popa
sub
cmp
push
cmc
sbb
call
mov
inc
jns
popf
lahf
xchg
sub
xchg
(bad)
pushf
(bad)
cli
mov
fldcw
mov
shl
sbb
jge
jae
push
fldenv
xor
fadd
mov
and
call
aaa
rcr
xor
push
test
xor
jo
mov
loope
push
fs
imul
jge
mov
call
inc
fsubr
int
pop
jns
call
jge
push
icebp
inc
(bad)
(bad)
jecxz
pop
stos
fist
mov
fs
pop
int3
leave
pushw
cmps
sar
add
mov
or
test
sbb
dec
icebp
out
sub
stos
sub
dec
fst
dec
dec
cmp
shl
jmp
or
inc
inc
push
mov
retf
call
loop
sbb
or
popa
xchg
adc
cwde
bound
and
mov
mov
mov
sub
and
mov
test
scas
cmps
imul
jge
xchg
sti
xor
and
addr16
mov
jmp
loopne
adc
cdq
pop
or
mov
mov
lds
movs
neg
clc
(bad)
jecxz
inc
jb
test
sti
ja
lea
fwait
pusha
lods
sub
hlt
imul
cmps
xchg
add
test
mov
retf
xor
sbb
mov
fiadd
sub
pop
pop
dec
pop
bound
pop
pop
xchg
and
(bad)
pop
mov
or
sbb
(bad)
stos
xchg
pop
(bad)
inc
das
paddusw
(bad)
jns
xchg
stos
add
add
inc
shl
inc
pushf
push
mov
or
jecxz
movs
or
int3
and
sti
dec
not
lods
lods
out
mov
dec
sub
(bad)
aad
in
jle
or
or
outs
inc
mov
jmp
dec
jle
cli
pop
cmp
lods
loopne
out
cmp
pushf
jg
in
(bad)
test
pop
sub
pusha
xchg
sbb
xor
mov
cmp
mov
into
outs
xchg
cmp
xor
fmul
in
cmp
inc
fadd
sub
xchg
retf
inc
and
cs
hlt
adc
bound
dec
mov
dec
jle
stos
stos
inc
mov
push
test
jo
and
mov
jmp
(bad)
outs
xor
fiadd
xchg
pop
xchg
js
retf
movlps
push
add
fwait
retf
out
idiv
shl
jnp
lds
cwde
jo
mov
xchg
push
loop
sti
shl
xchg
js
add
mov
xor
rol
(bad)
popa
mov
jno
imul
or
aas
mov
arpl
sub
add
and
dec
js
repz
sub
enter
jmp
aad
mov
(bad)
sub
jg
sar
dec
icebp
add
scas
lods
std
outs
pusha
lods
(bad)
psraw
fldl2t
xchg
mov
test
sbb
push
xchg
mov
sbb
outs
loop
fpatan
dec
outs
add
repnz
sti
mov
pop
retf
adc
mov
dec
mov
or
cld
es
lea
adc
lods
and
(bad)
outs
jno
inc
stc
mov
adc
mov
and
mov
ins
mov
sub
or
push
add
inc
pop
daa
scas
mov
mov
xchg
or
aaa
sbb
sar
dec
call
mov
mov
in
int
enter
mov
xchg
stos
xor
aam
and
dec
fist
outs
bndstx
nop
daa
dec
(bad)
div
movs
nop
jmp
js
shl
in
mov
dec
dec
popf
and
mov
ins
jg
sbb
inc
xchg
and
aam
add
daa
(bad)
jg
js
aas
mov
or
jno
add
push
sahf
cli
jmp
xor
add
pop
loope
stos
xchg
dec
adc
popf
js
shr
mov
test
sub
das
(bad)
mov
jl
fucomi
cmp
jo
cmp
and
fwait
dec
repz
push
loope
or
pop
xlat
(bad)
push
mov
or
imul
xor
mov
dec
dec
ficom
in
mov
add
pop
jne
aas
jg
jb
push
fs
ret
test
xchg
add
cdq
push
fs
lods
fwait
jnp
xchg
cmp
cmp
xchg
stos
(bad)
sub
in
in
mov
fsub
sbb
jae
sbb
call
fstp
cld
xor
mov
xchg
xor
mov
repz
adc
int
outs
outs
fs
retf
aad
das
mov
adc
mov
xor
push
inc
xchg
mov
pop
icebp
retf
jecxz
in
cli
shl
adc
xchg
fimul
fwait
jmp
and
ins
push
inc
mov
bound
ror
sbb
xchg
inc
repz
jno
inc
fst
xchg
push
dec
mov
clc
loop
or
(bad)
and
or
mov
mov
add
pop
add
cmp
mov
jae
mov
cmp
retf
daa
rcl
ins
xor
shl
mov
mov
gs
mov
jmp
xchg
xchg
xlat
xchg
int
mov
push
sbb
loop
(bad)
xchg
cmp
jp
(bad)
call
test
inc
sar
repz
(bad)
push
xchg
not
and
mov
cmc
sub
mov
mov
jg
and
cdq
jl
pop
push
fdivp
mov
mov
adc
mov
cld
(bad)
jnp
fisttp
jecxz
pusha
out
and
jae
ss
adc
pusha
mov
and
adc
dec
daa
clc
data16
out
jl
pop
ja
fsubr
test
and
add
sbb
cmp
mov
fist
pop
fldcw
and
sub
ror
sbb
sub
jge
fstp
push
ss
sbb
loopne
test
idiv
cdq
jnp
cmp
loope
retf
mov
inc
sbb
and
pop
iret
jae
xor
ret
cmp
xchg
cld
lods
cmp
dec
adc
jle
jo
xchg
popf
mov
push
shr
mov
xchg
jp
test
scas
ins
dec
inc
popa
jge
int3
loop
inc
scas
retf
in
cmp
fsub
call
sub
dec
ret
mov
xor
addr16
jl
xor
fs
ins
xchg
add
sub
add
xor
xchg
in
mov
inc
push
daa
mov
or
push
cwde
div
sar
mov
jb
dec
pop
jne
ins
lea
xchg
cmps
mov
cs
mov
repz
mov
xchg
test
xor
int3
xor
ins
sar
push
retf
retf
aaa
add
cld
cmps
test
inc
push
cmps
xchg
movs
sub
movs
lods
icebp
xchg
adc
stos
xchg
or
data16
pop
sbb
dec
jno
pop
test
dec
ins
xor
push
scas
xchg
enter
loop
or
push
sbb
sahf
fidiv
into
dec
addr16
fbld
and
add
xchg
pop
mov
imul
adc
out
(bad)
sbb
adc
add
jo
dec
pushf
dec
add
loopne
mov
cmps
adc
inc
sub
jae
add
popa
sub
mov
lea
and
push
mov
xor
dec
sub
xchg
pop
int3
xchg
mov
xchg
ds
repnz
movs
les
inc
js
ds
scas
cmp
cmps
xchg
pop
out
imul
xor
add
add
cs
in
jnp
inc
test
push
xchg
out
movlhps
lds
mov
(bad)
cmp
push
adc
sbb
dec
mul
inc
jmp
icebp
test
ret
add
sub
lock
add
pop
jnp
das
mov
xchg
dec
lods
mov
fldcw
lods
or
xor
test
(bad)
in
loope
inc
sbb
popf
xor
retf
mov
fcomp
push
and
loopne
adc
int3
sbb
mov
adc
sub
jmp
mov
adc
popf
out
mov
rol
jle
jnp
imul
inc
ins
fisttp
fcmovne
rol
not
dec
fimul
adc
jmp
rcr
push
sub
imul
push
ret
add
jmp
add
shl
(bad)
sbb
hlt
sbb
mov
mov
shl
into
and
lahf
dec
or
push
pop
xchg
retf
(bad)
cmp
push
loop
xor
sub
add
aaa
jle
leave
mov
push
cmps
xchg
stos
mov
cli
inc
mov
adc
pop
js
shl
retf
cmp
(bad)
std
lahf
in
jbe
inc
int3
add
fidivr
jns
pop
jo
int
lea
mov
sbb
cmp
jb
(bad)
scas
jge
xor
adc
rcr
cmc
adc
int3
mov
arpl
inc
adc
xchg
sbb
jmp
inc
lods
icebp
fisubr
inc
pop
sbb
mov
div
pop
fsubr
ret
(bad)
mov
mov
ret
ret
std
sbb
in
scas
das
xor
mov
bound
jmp
(bad)
pop
out
push
inc
out
cmp
in
dec
dec
jne
scas
js
mov
pop
and
call
xor
push
ss
jae
mov
mov
addr16
sbb
xchg
dec
inc
xchg
js
dec
pop
pop
mov
sbb
sub
mov
push
or
mov
inc
jmp
scas
cmp
xor
shl
jb
xchg
pop
add
(bad)
stc
dec
adc
ret
cdq
pop
imul
or
jnp
lods
add
cs
div
das
ret
nop
lock
les
mov
push
fs
adc
das
aam
fdiv
xchg
stc
sub
mov
and
adc
les
nop
inc
(bad)
xchg
inc
retf
sub
or
jecxz
bound
lods
adc
bound
mov
outs
mov
jmp
retf
test
jmp
ins
shl
call
xchg
stos
inc
xor
inc
ss
sbb
stc
cmc
jb
std
sub
jnp
jecxz
or
test
repz
lock
in
mov
std
and
call
push
push
pop
movs
dec
xor
mov
adc
adc
mov
sbb
or
mov
popa
fxtract
sar
push
lock
cwde
sub
pushf
lock
mov
fdivrp
xchg
test
inc
lahf
aad
xchg
rol
scas
pop
jge
sbb
setg
xchg
aad
add
or
and
fs
icebp
cld
cmc
lock
sar
pop
adc
push
sub
enter
sub
repz
push
sti
and
cmp
jl
and
fild
stos
int3
add
mov
jb
out
push
dec
shl
aam
jae
pop
popa
pop
imul
push
arpl
popa
daa
ja
cmp
or
xchg
imul
into
in
jecxz
shr
xor
mov
test
imul
pop
in
popf
lods
pusha
ins
dec
test
hlt
repnz
mov
xchg
push
inc
xor
push
jbe
xor
pop
and
leave
push
fild
and
xor
sub
sbb
mov
push
or
les
add
inc
bound
sub
mov
(bad)
pop
adc
or
std
loop
mov
jns
clc
jg
outs
sti
shl
stc
fsub
lock
cmp
hlt
jmp
xchg
add
movs
mov
inc
cs
mov
mov
sub
rol
dec
iret
pop
jmp
cwde
loopne
shr
pop
in
inc
popa
xchg
add
es
xor
dec
retf
push
lock
js
fisub
loope
cmps
cmps
rcl
adc
outs
inc
dec
ds
pop
aaa
mov
dec
or
nop
mov
dec
pop
repz
(bad)
adc
call
sbb
in
scas
and
outs
and
jl
sbb
sub
loopne
jg
jne
rol
dec
pushf
dec
lahf
dec
fwait
dec
sub
jmp
inc
xchg
adc
repz
and
sub
adc
mov
fild
jo
nop
and
cs
and
or
sub
ror
xor
hlt
jmp
cmp
dec
add
cdq
xor
loop
fisubr
xchg
scas
fs
push
and
popa
dec
rcl
call
dec
mov
dec
and
iret
leave
fidivr
inc
ins
xor
sti
push
dec
mov
(bad)
enter
add
jl
jmp
inc
out
daa
movs
push
mov
and
or
pushf
arpl
jb
push
adc
loope
dec
jmp
sub
inc
ins
add
and
ror
mov
mov
adc
xchg
in
dec
inc
call
int3
out
mov
push
inc
xlat
xor
sbb
mul
dec
test
test
mov
in
push
pop
push
fadd
cmp
xor
sub
jns
mov
sar
xor
mov
mov
sub
mov
int
bound
jg
lods
and
sar
jg
xchg
push
pop
lahf
inc
adc
add
mov
add
call
xchg
int3
push
push
and
pushf
imul
xchg
pop
adc
cmp
arpl
jmp
sti
jbe
push
inc
mov
sar
inc
xchg
adc
mov
sbb
leave
fwait
mov
dec
test
mov
adc
mov
daa
cmp
and
jnp
mov
mov
cli
xchg
test
or
xchg
adc
sbb
sub
inc
xchg
call
dec
pop
cld
cmp
mov
int
inc
xchg
sub
and
sbb
add
mov
aaa
xor
add
xor
or
adc
int
cmc
inc
dec
adc
out
cmc
push
xchg
pop
(bad)
push
inc
push
nop
xor
iret
(bad)
jne
jg
pop
mov
jnp
push
icebp
sbb
inc
icebp
mov
ins
ss
scas
dec
sub
popf
sbb
fidiv
push
dec
add
mov
inc
into
cmp
add
mov
or
dec
pop
popa
fst
xchg
imul
add
sbb
xor
ds
das
rol
jl
ficomp
sub
pop
mov
push
(bad)
aaa
stos
mov
inc
repnz
cmc
add
lds
aam
jge
sar
push
jo
adc
rcl
aaa
push
out
push
mov
es
inc
dec
jae
or
pop
pop
dec
addr16
mov
stos
call
sahf
test
xchg
jle
push
bound
imul
or
or
xchg
mov
mov
dec
hlt
mov
pop
xchg
dec
jl
sub
stos
sbb
xchg
cmp
add
sub
jg
sahf
adc
jns
mov
mov
jo
push
hlt
fld
lods
pop
movs
in
nop
pop
xor
mov
mov
push
and
in
jno
lds
inc
adc
retf
dec
dec
stos
(bad)
lock
mov
sub
sub
rol
call
leave
push
shl
sbb
mov
or
or
and
std
bnd
rol
in
xchg
mov
int3
mov
pop
fidivr
adc
pop
cmp
cmp
test
sbb
ror
stos
into
mov
push
or
jb
retf
cdq
(bad)
xor
jns
int
sub
mov
and
xor
call
imul
outs
jae
dec
cld
dec
jb
jae
adc
loopne
jmp
or
fild
test
xchg
sub
js
add
inc
shl
imul
daa
aaa
ret
mov
jmp
es
fld
push
fwait
xchg
arpl
lds
dec
pop
push
sub
out
cli
adc
(bad)
mov
cwde
push
adc
inc
test
retf
(bad)
outs
ins
inc
push
sbb
daa
dec
pusha
fimul
xchg
arpl
cmp
dec
cmc
sub
scas
inc
ins
scas
add
xor
adc
xchg
fmul
adc
sar
out
pushf
test
in
daa
mov
ins
sbb
cmp
div
out
dec
ins
add
lahf
idiv
push
dec
ret
inc
hlt
addr16
push
pop
adc
pop
push
add
xor
call
or
aam
addr16
mov
mov
mov
loope
jg
pop
cmps
and
cmp
mov
data16
mov
(bad)
pop
int
pop
mov
aas
rol
cmps
jbe
pop
add
ror
and
push
inc
push
xchg
lock
jns
repz
mov
loop
outs
xor
mov
push
mov
mov
jno
lock
xchg
inc
ins
dec
sar
dec
adc
dec
fimul
cli
sti
popa
jecxz
mov
cmp
pop
mov
and
xor
sub
std
das
dec
stc
cmps
mov
std
mov
retf
sbb
inc
mov
cwde
sbb
jo
push
or
inc
fcomp
push
pop
in
ret
xchg
aas
and
push
(bad)
xor
int3
icebp
jge
aaa
xor
test
adc
mov
movs
add
cmp
pusha
stos
sbb
or
jl
inc
pop
mov
cs
pop
jle
test
or
mov
fidivr
jnp
out
nop
dec
mov
add
xor
cmp
mov
into
ds
lock
push
dec
push
(bad)
pushf
dec
hlt
fs
or
call
cdq
bound
push
mov
mov
jg
(bad)
xchg
jno
fnstsw
daa
push
enter
dec
lds
push
lods
daa
pop
addr16
stos
dec
lahf
int3
jmp
(bad)
fs
dec
scas
inc
stos
push
xchg
mov
add
in
fsubr
les
adc
jno
loop
sub
mov
loope
sbb
mov
or
lds
(bad)
out
and
and
or
mov
cmp
data16
jl
jle
or
xchg
int3
sbb
(bad)
sbb
dec
popa
fisub
retf
dec
dec
bnd
rcr
dec
push
in
(bad)
(bad)
imul
push
jo
push
shl
std
aaa
imul
sub
out
imul
outs
(bad)
inc
xchg
lods
sub
or
ja
imul
les
cmps
ror
xor
mov
jo
jae
xlat
or
dec
jecxz
jb
adc
pop
pop
packssdw
jecxz
sub
std
pop
std
movs
or
add
(bad)
xchg
sub
push
fdiv
retf
mov
pop
push
cmp
je
imul
iret
xchg
push
sbb
popf
retf
sbb
push
aam
hlt
fidiv
lea
pop
scas
adc
test
or
xchg
scas
xchg
outs
ret
repnz
jp
pop
mov
xchg
xor
imul
jp
out
jle
and
sub
dec
push
sub
pop
mov
retf
mov
push
test
fidivr
jle
dec
in
push
or
push
into
scas
mov
jb
and
repnz
jmp
adc
mov
mov
cmc
mov
xchg
test
sub
loop
adc
or
xchg
loope
dec
sub
lea
leave
lock
adc
push
mov
mov
aam
inc
xlat
lea
rcr
outs
adc
push
jo
loope
mov
jge
stc
sub
stc
push
xor
jno
out
stc
xor
ror
mov
fiadd
or
fs
js
call
lods
es
push
in
sub
dec
add
cmp
and
xor
fst
mov
(bad)
fistp
jns
out
retf
and
jne
sub
jmp
fstp
cmp
adc
dec
adc
add
fcmovne
jle
xchg
psubusw
scas
cdq
imul
push
movs
cli
mov
data16
repz
(bad)
in
push
jae
data16
mov
pusha
jne
dec
mov
sahf
int3
xchg
jg
pop
xchg
es
movs
cld
ja
mov
xchg
xchg
xchg
cmps
pop
stos
add
cmp
mov
inc
dec
mov
xchg
fld
mov
(bad)
fnclex
jge
xchg
mov
(bad)
cld
(bad)
push
ins
jle
xchg
xor
scas
(bad)
jge
xchg
inc
ror
mov
adc
or
out
test
fadd
cs
xor
stos
adc
pop
and
or
xor
popf
mov
add
frstor
cs
rcl
jae
retf
ins
retf
add
arpl
jge
xor
sub
daa
ror
and
and
fldcw
popf
jno
push
imul
mov
sub
fdiv
and
or
mov
jno
push
push
and
test
popf
inc
push
push
aad
jl
inc
add
push
add
lods
les
cmps
sbb
push
mov
bound
cmp
xor
cmc
mov
or
leave
clc
(bad)
inc
and
pushf
jb
add
mov
and
stos
pop
fdivr
push
rcl
clc
cmp
and
jo
pop
xchg
in
jecxz
dec
mov
cld
push
sbb
cmp
out
jno
add
in
jmp
inc
(bad)
push
out
fisttp
(bad)
add
pop
cmp
inc
add
setle
mov
xor
adc
add
adc
aas
fdivr
popa
jge
rcl
mov
jle
inc
xchg
pop
jg
jge
sbb
outs
popf
dec
mov
mov
and
sub
lea
and
call
test
cdq
outs
jbe
fnstenv
cmc
and
enter
pop
xchg
fdiv
pushf
cdq
sub
mov
jl
and
push
push
mov
jo
arpl
sar
popa
das
retf
loop
ret
mov
mov
mov
xor
push
jge
xor
push
imul
push
jl
mov
out
ficom
out
adc
(bad)
jb
mov
in
rcl
jecxz
in
mov
cmc
into
add
and
outs
adc
push
sbb
adc
jb
(bad)
sub
mov
aam
add
aas
rcr
or
sbb
hlt
int
jmp
pop
sbb
pcmpeqb
lea
repnz
dec
push
mov
fild
call
add
sub
sub
sar
mov
xchg
pop
pop
jne
jns
int3
sbb
idiv
dec
call
mov
cmp
in
out
cvtdq2ps
sub
sub
retf
cmc
push
and
mov
iret
jbe
jno
lods
mov
jbe
scas
into
mov
aas
xor
dec
pop
stc
cmc
cld
clc
sbb
mov
nop
ins
pop
daa
and
arpl
fwait
push
and
movs
lds
call
jmp
(bad)
jle
mul
data16
(bad)
fisub
inc
leave
pop
jmp
push
movs
dec
add
hlt
push
add
ja
mov
jno
fisttp
neg
ret
or
stc
shl
adc
popf
adc
xchg
pop
inc
mov
and
jo
enter
mov
gs
adc
xor
out
out
push
out
mov
jmp
mov
adc
xchg
xchg
jge
ffreep
scas
leave
sbb
mov
xor
inc
mov
jne
inc
adc
pop
xor
icebp
jg
data16
fwait
loopne
repnz
jmp
jecxz
pop
ja
add
(bad)
cmp
push
push
sbb
jns
push
and
hlt
mov
call
or
fist
(bad)
or
test
loopne
mov
mov
ins
daa
sub
xchg
movs
xor
fcmovu
sar
neg
lods
inc
jno
imul
xchg
mov
mov
and
dec
mov
push
in
outs
(bad)
repnz
sbb
inc
sub
loop
inc
arpl
not
outs
mov
fdiv
jno
daa
retf
pop
mov
dec
fadd
div
aaa
jnp
shr
push
out
hlt
ins
icebp
adc
or
cmps
ss
sub
push
lahf
jno
call
push
mov
stc
jmp
jnp
dec
ret
lods
dec
inc
sahf
cmp
ins
mov
inc
arpl
jo
test
mov
loope
sub
hlt
mul
jne
int
push
adc
ret
mov
xor
iret
out
jecxz
mov
movs
adc
inc
retf
test
pop
adc
sub
xor
popf
sti
es
push
neg
and
sar
and
push
stos
mov
pop
hlt
inc
inc
jo
cmp
xor
outs
(bad)
jg
(bad)
sub
ficomp
cmp
(bad)
xor
repnz
sub
mov
cwde
cmp
(bad)
jbe
sub
loopne
sbb
dec
sub
push
jg
cli
imul
jbe
clc
dec
in
test
fs
add
cmp
sbb
and
call
push
rcr
push
nop
add
aaa
mov
jns
je
adc
add
mov
pop
jl
or
mov
mov
rcl
cdq
sbb
sbb
mov
iret
pop
scas
pop
das
mov
push
psubusb
dec
push
add
jb
jnp
out
aaa
mov
gs
cmp
retf
hlt
lock
pop
xchg
sub
push
sahf
mov
shl
mov
and
hlt
jg
int3
loop
pop
(bad)
mov
sbb
adc
sbb
push
adc
stos
out
out
clc
adc
mov
cmp
scas
mov
fdivr
sahf
or
call
inc
push
sub
movs
rol
(bad)
mov
test
or
ins
xor
inc
jno
mov
pop
sub
(bad)
and
(bad)
mov
xchg
pop
(bad)
int
and
push
xchg
pop
or
test
cmp
aam
and
add
jmp
jl
fsubr
repnz
retf
jle
cld
into
clc
jg
and
xchg
rcr
pushf
pop
sub
pop
mov
jmp
outs
pop
mov
push
add
out
movs
xor
adc
xchg
add
out
mov
nop
icebp
mov
jo
pop
jo
adc
fsub
push
(bad)
mov
dec
loop
int3
or
xor
lahf
int
sbb
popa
cmc
dec
jo
jae
inc
ja
push
lahf
pop
dec
jecxz
sbb
lds
cmp
in
add
mov
cmp
(bad)
mov
shl
es
cmps
das
or
xchg
mov
cmp
jmp
push
mov
out
cmp
cmp
fiadd
sti
mov
jne
bnd
mov
jecxz
xchg
add
aas
xor
push
out
pop
imul
clc
ret
scas
dec
clc
inc
add
xor
test
loope
jae
fadd
pop
aad
movs
in
sbb
pop
jmp
push
mov
add
pop
add
(bad)
cwde
jbe
mov
mov
push
lods
push
and
mov
push
pusha
retf
and
pop
dec
push
push
addr16
ret
sahf
push
ror
dec
jg
mov
xchg
dec
xor
mov
mov
ret
jb
addr16
and
popa
and
imul
and
mov
pop
fdiv
outs
jbe
inc
xor
cmc
pop
pcmpgtw
pop
push
sar
add
jbe
cmp
imul
mov
or
icebp
cmp
sbb
jg
icebp
enter
mov
scas
gs
adc
mov
push
mov
sub
adc
push
in
iret
mov
xor
jmp
cmp
das
mov
imul
adc
sub
push
aaa
or
push
lods
push
add
imul
aad
xor
inc
inc
fs
cmp
add
pusha
add
stos
jae
daa
sbb
dec
enter
push
sbb
fidivr
aas
lds
icebp
ja
pop
add
adc
jge
sti
lods
mov
sbb
mov
cmp
xchg
je
in
(bad)
cmp
movs
jno
mov
adc
push
xchg
jecxz
(bad)
mov
mov
cmp
stos
and
arpl
push
adc
mov
cwde
shr
(bad)
add
rol
outs
cmps
das
jg
sub
repnz
sar
xor
test
inc
outs
or
outs
sub
add
or
popa
(bad)
push
sbb
fdivr
mov
lock
mov
and
sub
mov
mov
adc
lock
jne
scas
sub
loopne
out
int3
sbb
into
and
sub
inc
mov
fstp
aas
cmps
sbb
test
inc
jl
sub
and
jge
(bad)
icebp
jmp
pop
and
jle
stos
xchg
sbb
(bad)
pop
inc
xchg
xchg
(bad)
jne
inc
icebp
sar
cmps
ss
pop
mov
xchg
pop
push
(bad)
cmp
sbb
cmps
repz
fnstsw
jmp
out
cmps
pop
and
pop
sub
xchg
cmp
xlat
pop
popf
sti
push
inc
mov
push
or
sahf
add
loop
ret
test
bound
jns
ds
cmps
lods
out
inc
jmp
popa
cwde
push
gs
(bad)
(bad)
mov
or
movs
jmp
jmp
ds
popf
xchg
dec
lods
push
add
stos
or
fisub
mov
retf
ins
push
inc
into
sbb
je
lahf
dec
(bad)
mov
adc
adc
pop
hlt
clc
add
shl
push
jb
mov
outs
ficomp
out
leave
repnz
retf
jnp
dec
ja
loopne
js
call
(bad)
in
stos
push
cwde
jnp
push
arpl
clc
clc
hlt
aaa
jne
aam
or
nop
pushw
pop
aaa
ret
fidiv
mov
sub
pop
push
pop
ret
jno
cs
jne
sbb
or
imul
xor
dec
push
rol
dec
mov
jno
sbb
mov
and
push
aad
int3
dec
movs
inc
push
mov
mov
movs
dec
je
xor
push
sbb
mov
or
cmp
jge
xor
push
mov
pusha
stos
push
inc
xor
dec
cli
shl
adc
(bad)
mov
loopne
fsub
out
les
pop
daa
ins
in
jle
std
pop
adc
mov
fwait
je
adc
movs
dec
mov
inc
adc
test
std
jmp
data16
sub
cdq
xchg
cmps
jmp
call
push
dec
fnstsw
sahf
in
jnp
iret
and
pop
mov
enter
sbb
inc
in
neg
in
mov
mov
scas
mov
xchg
xor
test
adc
aad
mov
call
push
das
sar
out
mov
jmp
ins
lods
cs
xor
(bad)
aad
stos
daa
mov
call
popf
les
sbb
lods
mov
cwde
aaa
mov
jno
mov
adc
mov
pop
push
das
scas
ss
inc
movs
mov
add
mov
ja
mov
sub
sbb
sbb
imul
sbb
jmp
mov
cmp
jmp
or
or
shr
mov
sub
jb
xlat
nop
fistp
retf
pop
jg
mov
clc
add
jmp
call
mov
mov
int3
leave
lods
sbb
xchg
pop
pop
mov
outs
pop
lods
test
int
retf
inc
jne
imul
dec
leave
(bad)
mov
mov
push
call
imul
adc
jno
or
cdq
std
aad
rcr
outs
jle
and
addr16
pusha
(bad)
pusha
cli
or
mov
xor
aas
sbb
rcr
sar
in
pop
push
mov
(bad)
in
and
retf
out
sub
lsl
pusha
ja
ds
in
dec
test
dec
ficomp
mov
test
imul
sub
call
sbb
jne
outs
mov
aad
loopne
push
loop
pop
clc
movs
add
(bad)
add
in
sbb
repnz
into
cmp
popa
dec
push
scas
add
push
mov
(bad)
push
setno
mov
adc
xor
(bad)
sub
(bad)
cmp
adc
lock
mov
jmp
fdiv
loope
fstp
xor
pop
push
lds
lahf
stc
cmc
jo
pop
popf
ds
mov
popf
pop
pop
inc
sub
(bad)
add
push
in
rcl
and
lock
std
addr16
inc
lods
ss
push
xor
pop
dec
or
scas
fcomip
ins
inc
sbb
and
add
loopne
jmp
cmps
jns
mov
push
inc
cmp
dec
in
fisub
and
sar
inc
push
call
out
lea
pusha
test
adc
jae
mov
or
xchg
pop
ds
cmp
cdq
sbb
sbb
mov
pusha
test
sbb
push
ins
(bad)
mov
mov
inc
push
stos
pop
pop
xchg
sub
(bad)
(bad)
aam
movs
adc
inc
enter
xor
outs
pop
inc
xchg
(bad)
ror
adc
das
dec
das
jle
je
jmp
cmp
push
sbb
(bad)
(bad)
adc
mov
cs
in
leave
push
(bad)
jl
xor
js
xor
push
jmp
cmp
arpl
fsub
jp
cmc
sub
dec
mov
dec
mov
or
loop
lods
pop
sub
or
xor
lods
ja
les
je
sub
shl
pop
and
movs
and
lahf
adc
movs
mov
lods
pop
fcomp
retf
stos
js
xchg
test
dec
inc
(bad)
bound
or
enter
aam
or
dec
sub
test
mov
int
cmp
dec
cli
add
pusha
adc
popf
sti
aam
sub
cmp
out
xchg
shr
(bad)
(bad)
retf
jge
test
adc
push
sar
dec
les
stos
nop
ins
sbb
adc
cmp
jmp
call
lock
jo
pusha
(bad)
jl
and
cwde
push
and
aad
pop
mov
pop
xchg
jl
xor
mov
pop
(bad)
pop
lock
jp
fstp
sbb
and
mov
fprem1
clc
repz
add
xchg
adc
ss
clc
add
(bad)
out
cmp
push
mov
pop
xor
rcpps
iret
stc
fstp
aad
rol
adc
(bad)
test
clc
dec
inc
jle
into
jmp
nop
cmp
cmp
dec
dec
mov
int3
and
push
sub
sub
jb
cmp
pop
cmp
fucomi
inc
movs
mov
jp
outs
cmps
xor
sub
fdiv
cwde
outs
push
xchg
retf
xchg
ds
aam
add
fs
aaa
inc
lds
mov
inc
xor
and
sbb
fdiv
mov
push
jne
mov
dec
out
fs
jmp
inc
ficom
icebp
fbld
bound
xor
in
pop
mov
bound
pop
inc
aad
sub
ret
stc
add
scas
stc
push
jl
push
and
push
leave
rcl
fs
add
pop
add
in
dec
mov
js
fmul
xchg
push
fisub
inc
(bad)
gs
out
cmp
push
sub
adc
adc
push
rol
push
movs
ret
jbe
add
test
fs
scas
mov
dec
cmp
mov
test
inc
enter
sub
and
sub
test
fwait
in
fdiv
out
push
xor
aad
push
mov
sbb
lds
imul
sbb
retf
adc
cli
xchg
retf
mov
test
sub
aas
inc
mov
sbb
cwde
ror
out
pop
push
jmp
mov
fs
hlt
sahf
shr
adc
jmp
sub
xor
shr
ins
jb
iret
mov
jne
sahf
pop
inc
xchg
cmp
sbb
adc
sbb
lds
into
push
imul
or
dec
mov
cmp
in
adc
push
aas
xchg
in
dec
in
push
movnti
int3
push
jnp
inc
fimul
lds
jae
dec
in
or
cmps
loop
xor
aas
or
out
and
inc
pop
das
dec
inc
add
jns
sub
pusha
jmp
out
cli
mov
jnp
add
outs
inc
jbe
into
arpl
mov
xchg
or
xor
cli
cmps
sbb
xchg
mov
pop
or
xchg
out
xchg
cwde
or
and
xchg
out
in
jae
and
pop
or
aad
fnsave
ins
push
test
cmp
push
sub
mov
jmp
xchg
cmc
loope
outs
(bad)
int3
sub
pop
into
cmp
or
jo
mov
cwde
es
cwde
mov
mov
ja
ins
mov
adc
add
outs
lods
ss
test
jns
push
mov
in
vmread
fistp
lds
sbb
int3
(bad)
mov
out
popf
mov
mov
(bad)
cmp
pop
aas
mov
xor
inc
mov
jge
sti
inc
imul
cld
jo
pusha
out
pop
inc
scas
jge
sub
gs
popf
sub
jno
cmp
inc
xchg
sub
mov
in
cmp
inc
div
mov
aaa
fimul
inc
or
mov
or
xchg
cmp
jl
sar
inc
dec
cmps
add
sub
mov
mov
nop
call
arpl
inc
int3
mov
mov
leave
aad
cmp
call
gs
sub
dec
adc
cmps
sub
adc
sbb
dec
iret
mov
ret
and
je
mov
es
cmp
inc
adc
jle
scas
imul
cmc
into
jmp
daa
inc
outs
je
jbe
in
das
xchg
test
xlat
(bad)
dec
(bad)
mov
dec
(bad)
loop
popa
pop
inc
jne
stos
adc
dec
xchg
xchg
stos
shr
sbb
and
mov
pop
inc
outs
lods
push
sbb
daa
cli
sar
inc
clc
sub
adc
mov
jns
mov
and
scas
push
call
out
jns
inc
xchg
push
je
call
ret
mov
cmps
sbb
mov
xchg
add
lea
mov
adc
bound
popf
add
mov
jmp
sub
(bad)
cmc
movs
push
fadd
adc
sar
scas
push
ss
or
sbb
xlat
sub
fst
call
mov
jae
leave
jae
push
fs
sub
push
or
xor
xlat
loopne
cmps
pop
data16
retf
fcom
or
ja
scas
cwde
jp
inc
cmp
add
mov
mov
out
jbe
push
fyl2x
xor
mov
sub
ds
mov
cld
push
mov
shl
int3
sbb
push
test
sbb
xchg
inc
(bad)
cmp
ins
xchg
mov
adc
jle
std
mov
xor
jo
or
push
imul
push
jge
mov
or
sub
test
test
and
dec
jnp
jmp
loope
add
int
movs
jecxz
mov
inc
inc
cmp
xor
mov
inc
or
pop
mov
ds
outs
adc
arpl
xor
and
call
adc
(bad)
int3
pop
xor
xor
and
push
mov
sahf
sbb
enter
xlat
cmc
xor
pop
dec
mov
jmp
mov
push
(bad)
dec
jae
cmp
(bad)
add
(bad)
int3
pop
int3
adc
je
iret
loopne
arpl
call
pop
mov
inc
(bad)
xlat
jmp
xor
popa
cwde
inc
cmp
gs
xlat
ret
into
xchg
lods
dec
mov
hlt
push
mov
dec
jp
xor
iret
fisubr
ins
cld
adc
out
ja
mov
stos
fiadd
cmp
jno
outs
out
mov
dec
or
lods
and
xor
add
sbb
ret
mov
stos
mov
pusha
push
sti
movs
xchg
sahf
out
xor
lahf
inc
xchg
int
cmp
mov
fabs
je
sbb
(bad)
std
into
add
sub
out
icebp
fsubr
sti
mov
stos
bound
fwait
movs
xchg
ret
sete
stc
xchg
jb
jmp
vmwrite
shr
out
push
mov
jp
add
xor
jecxz
das
js
push
arpl
sbb
or
imul
xchg
mov
xchg
pop
xchg
sub
cmc
es
or
aad
aam
je
xor
in
ins
or
mov
or
jo
mov
scas
dec
movs
push
stc
ror
arpl
push
aaa
scas
sbb
jnp
das
cmp
inc
lahf
adc
call
movs
movs
ss
adc
push
inc
mov
enter
iret
push
sbb
repz
imul
pop
iret
rcr
ret
sub
ja
add
aas
xor
repz
adc
sbb
int
pop
ins
pop
scas
cwde
xor
xor
xchg
pop
lds
mov
int3
dec
and
sar
fst
ins
daa
(bad)
jmp
les
into
sub
mov
jp
jecxz
addr16
ins
jmp
dec
and
or
add
imul
loop
std
imul
inc
loop
cmp
je
fnstenv
fbstp
mov
mov
and
ret
and
loopne
stos
xlat
xor
add
xchg
xchg
sbb
jno
xor
out
fimul
cld
ins
mov
push
cmc
mov
cmc
pop
call
frstor
mov
push
sub
jg
lea
inc
(bad)
adc
fldz
shl
ffreep
movs
sbb
pop
adc
xor
and
es
sbb
mov
and
test
or
retf
es
mov
xor
call
xchg
pop
jns
pop
sub
(bad)
daa
dec
sub
adc
test
pop
jp
cmps
mov
cmp
push
mov
arpl
dec
icebp
imul
push
cmp
add
push
add
scas
fcomp
shl
movs
loope
mov
xchg
push
ds
imul
add
cdq
enter
repz
mov
(bad)
popa
fsubr
push
xchg
out
or
mov
fnstcw
jo
movs
push
imul
jecxz
inc
add
adc
add
inc
sti
sbb
cmps
mov
mov
xor
maxps
call
xchg
sbb
dec
push
std
mov
aad
mov
imul
je
pop
or
cmp
or
xchg
popa
pushf
fnop
outs
push
push
outs
or
push
popa
rol
sbb
add
jle
les
gs
inc
ret
and
retf
jns
sbb
cmp
scas
dec
dec
imul
lds
xchg
and
fnstcw
stos
and
push
data16
retf
dec
hlt
in
(bad)
xchg
dec
jae
mov
(bad)
pop
aam
out
movs
dec
jnp
fst
sahf
push
mov
fisttp
xor
sub
sbb
clc
fnsave
pop
lods
es
dec
pop
fst
xchg
shl
(bad)
dec
push
xor
jbe
dec
movs
xchg
fbld
int
aas
jbe
loope
ret
dec
loop
pop
cld
and
xchg
lods
or
ins
(bad)
test
sub
push
mov
(bad)
lods
std
jmp
hlt
icebp
loope
xor
pop
ss
popw
rcr
sbb
mov
std
push
movs
data16
pop
or
int3
pop
mov
scas
repz
lahf
mov
retf
adc
ret
cdq
cmps
ins
add
ret
add
(bad)
(bad)
xchg
pop
dec
in
add
push
mov
icebp
in
nop
lahf
dec
leave
xchg
or
scas
add
mov
aas
jg
clc
and
adc
lock
mov
sti
jno
popaw
call
daa
fild
in
push
scas
hlt
adc
dec
jp
shl
nop
mov
pop
push
push
cmps
cdq
div
and
add
pop
mov
push
push
bound
clc
outs
jb
lods
xor
mov
mov
xchg
pop
repz
lds
or
jecxz
mov
data16
sbb
pop
mov
scas
mov
and
(bad)
sub
mov
pop
xchg
dec
push
rcl
lods
sbb
fsubr
dec
iret
mov
push
adc
jae
rol
inc
sbb
stos
jge
add
inc
adc
mov
std
stos
xchg
aaa
sbb
aam
call
adc
hlt
push
aad
add
cs
mov
loopne
push
data16
inc
pop
cdq
sbb
and
inc
scas
fnsave
repnz
loope
(bad)
adc
adc
xlat
shl
outs
pusha
(bad)
adc
sub
inc
ficom
imul
push
and
dec
mov
jno
call
ins
or
jnp
sub
mov
icebp
xchg
or
push
es
pop
lea
fs
pop
mov
jns
cwde
aad
jmp
and
push
mov
clc
aas
fidivr
in
and
test
mov
shl
mul
sbb
iret
mov
push
imul
fs
push
out
mov
adc
loope
xchg
sub
in
ret
cli
push
jg
mov
sbb
dec
add
(bad)
lock
(bad)
lock
jecxz
je
les
mov
arpl
adc
or
dec
adc
jg
outs
aam
cmp
nop
fucomi
push
(bad)
pop
sbb
jmp
clc
scas
sub
enter
xor
nop
outs
xchg
mul
add
out
cmp
loope
fsub
push
pop
(bad)
lock
or
loop
mov
push
xchg
adc
inc
or
mov
movs
stos
jp
jmp
mov
or
pop
dec
mov
(bad)
int
xor
or
xchg
adc
dec
jne
cwde
jp
repz
pop
jmp
leave
xchg
fisubr
mov
cmp
jne
jmp
ror
test
jge
mov
fiadd
stc
in
xchg
xchg
shl
push
outs
shl
xchg
xor
data16
xor
add
cmp
jmp
bound
fst
push
loopne
ins
jle
push
add
mov
arpl
jbe
mov
fimul
mov
clc
inc
or
fsub
fisttp
pop
scas
aam
bound
add
dec
jg
and
icebp
lahf
jle
jl
hlt
sbb
(bad)
fwait
inc
test
imul
in
(bad)
lahf
adc
xchg
rcr
(bad)
adc
xchg
(bad)
enter
or
aam
fidiv
(bad)
jns
in
cmps
dec
pop
cmp
lea
push
or
pop
int
test
adc
and
pop
sti
cmps
add
sbb
cmp
sbb
add
fcos
ret
pop
jmp
rcr
sub
cmp
pop
hlt
lods
rep
loopne
frstor
push
push
mov
dec
ds
pop
fcmovbe
dec
popa
push
cmp
(bad)
xlat
addr16
cmp
add
sub
arpl
aad
ja
mov
cmp
or
mov
shr
(bad)
in
pushf
cmp
dec
push
outs
mov
mov
or
ds
mov
and
inc
and
adc
inc
sub
scas
and
xor
(bad)
out
sbb
sar
cdq
sbb
outs
scas
or
xchg
sbb
repz
in
or
pop
mov
out
and
xor
adc
cmp
enter
fisttp
ja
sub
mov
ins
jno
xor
dec
enter
jns
pop
stc
lods
mov
pop
(bad)
mov
in
cdq
mov
cmp
call
test
not
movs
pushf
cdq
xchg
push
xor
jne
ret
cli
lods
pop
stc
jb
xchg
push
inc
fdiv
mov
jecxz
cmp
dec
in
daa
popa
cdq
jge
xlat
fwait
push
inc
adc
jmp
and
pop
aad
jmp
aam
imul
or
bound
ins
push
rol
ficom
or
sub
ds
xor
jp
imul
ret
push
jg
adc
enter
pop
inc
lds
xor
in
pop
xchg
xchg
data16
fld
sbb
clc
mov
mov
push
cmp
dec
xor
daa
push
jge
cdq
lods
sub
out
int3
pop
jle
fadd
xor
sbb
pop
pop
mul
adc
inc
pop
push
test
out
jne
adc
mov
cmp
add
in
arpl
push
xor
inc
xlat
inc
test
lds
(bad)
cmps
mov
movs
test
jo
shl
cwde
lds
push
add
and
pop
push
xchg
inc
lods
fcomp
mov
cmp
mov
xchg
cmc
sbb
lea
cld
push
jp
rol
xchg
jbe
inc
sub
pop
mov
sbb
push
sbb
test
adc
(bad)
hlt
(bad)
cmp
pop
jno
iret
pop
xlat
ins
test
adc
jbe
mov
mov
mov
popf
add
sub
jmp
pop
ret
or
inc
icebp
cmp
test
stos
adc
cmp
mov
aaa
lods
call
jb
or
inc
movs
inc
and
cli
mov
xchg
push
mov
int3
pop
pop
retf
pop
es
dec
adc
aad
pop
xchg
in
movs
sbb
adc
or
inc
push
jne
add
dec
pop
aam
mov
lds
push
adc
push
std
shl
ds
sbb
icebp
mov
jb
ss
sbb
loop
and
pop
add
iret
movs
mov
mov
mov
pop
mov
mul
das
mov
test
lods
xchg
ds
jle
test
in
push
sti
mov
adc
repnz
ret
sbb
sbb
js
jl
je
jg
lds
sbb
cmp
xchg
fsub
je
inc
ins
add
mov
and
mov
pop
jns
add
or
push
push
retf
dec
lock
sahf
pop
outs
adc
imul
mov
aaa
jno
xor
mov
mov
fiadd
leave
(bad)
sbb
push
jnp
scas
pop
mov
push
js
test
int3
and
ror
data16
lods
fxch
push
dec
sub
and
sti
(bad)
out
push
sub
pushf
fwait
pop
in
or
in
stos
dec
mov
pop
mov
out
js
and
gs
adc
or
dec
adc
mov
mov
pop
dec
or
dec
jecxz
dec
pushf
push
rcr
xchg
and
or
retf
mov
out
dec
sbb
call
xchg
js
imul
adc
mov
mov
xchg
into
xor
and
sbb
xchg
sub
jnp
lahf
addr16
or
mov
sar
mov
and
add
retf
cmp
imul
inc
add
div
ret
loope
inc
rol
clc
loope
push
cmps
and
mov
pop
or
jmp
push
retf
pop
jno
and
jg
(bad)
adc
in
pop
out
xor
pop
fbstp
call
clc
jp
mov
dec
(bad)
in
enter
and
mov
jle
movs
inc
int3
adc
mov
or
outs
out
ret
add
xchg
rcr
inc
cmp
imul
enter
sti
ret
aam
mov
cld
jnp
push
aam
ret
mov
loop
lods
xor
inc
dec
push
cmps
in
adc
push
cld
mov
int3
adc
stos
rcl
shl
xor
imul
clc
bound
sub
push
xor
xor
push
fs
int3
sub
mov
and
js
xor
jmp
hlt
imul
(bad)
push
sbb
push
xchg
in
js
cmp
sub
ss
ss
fcmovb
mov
mov
sub
nop
inc
daa
cli
pop
sbb
out
cli
pop
rcr
cmp
pop
add
jge
arpl
cli
adc
lahf
pop
sub
std
or
push
scas
add
dec
adc
or
push
and
cmc
jl
aaa
test
pop
cwde
sar
clc
push
sub
pop
mov
shl
push
adc
stos
jno
jmp
fild
mov
std
xor
mov
mov
arpl
sbb
call
loop
inc
stos
xchg
jae
jo
sub
shl
outs
inc
gs
cmc
call
xchg
mov
stos
jne
aas
pop
jo
mov
mov
aad
cmp
in
dec
sub
test
push
inc
adc
ret
fs
out
bound
inc
adc
(bad)
aam
movs
(bad)
les
imul
das
pop
inc
in
mov
popa
pop
sub
leave
test
(bad)
pop
test
popf
xor
push
fdivr
pop
cmps
and
or
jae
cwde
inc
shr
dec
pop
xor
push
jb
ss
sar
int3
call
pop
or
repz
icebp
pusha
push
xchg
pop
fisub
popf
inc
inc
sbb
adc
xchg
stos
ins
lea
mov
out
out
imul
shl
imul
sub
cmp
xchg
popf
add
mov
stc
popa
addr16
mov
dec
sub
test
aad
sbb
nop
jns
push
in
fwait
movs
push
inc
push
gs
sub
mov
mov
ret
jl
pop
push
mov
aas
xchg
repz
fild
or
xor
xor
test
scas
pop
fcmovbe
push
xor
movs
push
xchg
mov
xchg
lahf
xor
out
or
ror
sub
mov
in
cmp
xchg
dec
mov
xor
cmp
repnz
test
jle
push
scas
mov
test
xlat
add
retf
lds
cld
into
pop
mov
aas
js
add
aas
xor
pop
mov
aas
das
add
pushf
clc
jmp
inc
mov
sbb
scas
jle
sbb
inc
mov
or
loopne
iret
cli
loope
int
data16
stos
mov
mov
cmp
sbb
or
sbb
inc
push
popa
push
ins
jo
inc
dec
or
or
(bad)
pushf
mov
stos
test
bound
rcr
push
test
movs
pop
inc
add
inc
xor
sbb
pusha
mov
push
enter
and
and
out
iret
mov
outs
int3
push
leave
add
inc
dec
dec
pop
shl
inc
add
test
clc
jmp
sbb
mov
es
pop
jmp
mov
push
cmp
(bad)
sti
push
test
push
adc
stc
fbld
out
xor
mov
inc
jl
xor
push
push
inc
cmp
mov
outs
test
pop
pop
xchg
sub
iret
jno
pop
je
xchg
leave
gs
das
mov
into
cmp
push
pop
dec
cmp
cmps
sbb
in
adc
js
pop
sbb
cmp
js
mov
movs
jne
(bad)
push
and
ror
movs
jge
dec
bts
jmp
(bad)
int3
movs
sbb
mov
ret
sub
cmp
jle
jecxz
mov
imul
cld
pop
lods
es
push
xchg
pop
icebp
fcom
push
icebp
daa
pop
cmps
jmp
mov
je
les
and
stos
adc
lahf
mov
dec
mov
pop
(bad)
cdq
enter
pop
cmp
xchg
jnp
icebp
push
addr16
inc
push
and
pop
mov
jae
mov
or
fadd
jae
shr
je
sahf
les
jmp
fadd
stos
test
ret
or
mov
call
dec
call
(bad)
dec
pop
xor
mov
cmp
cmp
ja
(bad)
dec
sbb
(bad)
sbb
out
jle
sub
pop
dec
push
ret
ret
mov
mov
mov
xlat
sbb
adc
or
jge
mov
lods
lock
out
cwde
sub
mov
jl
test
jge
les
inc
ins
sbb
retf
mov
jp
inc
sub
cmp
sbb
push
add
push
and
shl
shl
in
or
mov
ja
jnp
lods
mov
jecxz
imul
push
(bad)
daa
add
in
fist
mov
push
adc
int3
dec
and
aad
and
scas
jnp
es
fisubr
daa
fimul
stos
movs
movs
hlt
jmp
push
scas
or
sbb
call
rcl
int3
xchg
fs
cmp
fs
push
cs
jl
test
(bad)
inc
and
inc
mov
or
xchg
std
mov
test
xor
enter
bound
pop
jmp
dec
mov
aas
rdmsr
pop
pop
rcl
mov
dec
lahf
fld
aas
add
sbb
mov
jmp
mov
push
hlt
add
in
jno
aas
jmp
popa
test
arpl
imul
dec
cdq
push
cmp
scas
sub
outs
mov
mov
or
push
jle
pop
sbb
test
push
fimul
fucom
add
sub
imul
jmp
fnsave
and
mov
ins
mov
xchg
shr
xor
jg
ss
dec
push
rol
aaa
and
out
popf
pop
scas
fcomp
hlt
ss
mov
push
in
mov
and
stc
dec
cs
pop
aam
inc
pop
in
sbb
pop
push
or
addr16
daa
movs
sub
cmp
test
push
jmp
mov
into
(bad)
xor
inc
inc
mov
or
mov
sar
or
mov
xor
outs
aas
push
icebp
or
scas
inc
dec
mov
push
or
mov
sbb
cmc
inc
pop
das
(bad)
das
sti
aad
cmc
sbb
in
xchg
cld
lock
cmp
in
mov
push
pusha
mov
pop
sahf
pop
test
test
lea
cmp
xchg
xchg
inc
adc
test
movs
loop
push
mov
out
mov
inc
ret
jg
inc
and
jne
sbb
adc
xchg
in
jge
out
mov
and
xchg
sbb
cs
clc
add
pop
and
not
xchg
or
arpl
ins
scas
mov
xor
or
jp
dec
sbb
dec
sub
cdq
ins
sbb
mov
xor
popa
pop
push
jne
add
push
arpl
mov
push
push
pop
dec
pop
aam
imul
add
jae
out
dec
int3
xchg
ret
mov
nop
shr
push
ins
aam
cs
fisttp
and
int3
add
fdiv
mov
sub
inc
inc
test
out
pop
jg
adc
movs
(bad)
icebp
inc
out
lods
sbb
cmps
mov
push
data16
test
enter
jbe
add
and
test
pop
pop
mov
fld
mov
ret
dec
in
cwde
push
mov
push
mov
int3
in
int
arpl
push
lea
aaa
sar
mov
jno
stos
xchg
mov
jmp
fdiv
xor
leave
add
mov
pop
fmul
xor
xchg
aad
in
call
pushf
repnz
cmps
xor
imul
stos
iret
movs
daa
and
dec
sbb
adc
mov
push
shr
call
imul
sub
addr16
test
pushf
(bad)
loopne
inc
push
std
ins
mov
jle
mov
mov
data16
push
adc
fsubp
pop
jo
pusha
pop
movs
fistp
cmp
in
add
imul
stos
cmp
aad
jbe
outs
outs
leave
ss
sub
scas
push
push
mov
imul
cmps
cmps
jae
sub
adc
mov
sahf
dec
cmp
mov
int
stos
sar
and
retf
fist
mov
push
imul
cmp
or
xor
out
jecxz
aaa
fidiv
add
jmp
ret
xchg
pop
pop
fs
das
repz
mov
fstp
fwait
out
adc
ror
imul
not
outs
sbb
(bad)
mov
jb
sbb
mov
adc
not
mov
stc
xchg
(bad)
push
pop
or
cs
cmp
mov
dec
sub
hlt
(bad)
(bad)
ss
push
jo
pop
pop
stos
mov
sub
in
mov
call
mov
jno
pusha
mov
enter
push
test
retf
xchg
arpl
jg
xchg
fmul
std
jnp
movs
fs
adc
movs
fs
dec
cmp
inc
sbb
add
mov
add
je
and
fisttp
retf
sub
and
dec
cmp
dec
cmp
xchg
dec
xor
cmps
push
mov
aaa
out
mov
xchg
adc
pop
test
sub
push
xchg
repnz
inc
jae
ds
js
or
inc
ds
cmp
lds
shl
sub
movs
xchg
xor
out
fmul
add
out
add
adc
jno
pop
dec
ins
cmp
add
inc
nop
iret
ss
push
adc
es
ret
adc
cwde
jbe
xchg
jne
sub
xor
sbb
fcmovu
les
xchg
cmp
add
in
cmp
imul
out
cld
inc
xchg
out
cs
or
cmc
jmp
inc
mov
cmp
out
scas
repnz
pop
mov
mov
in
push
mov
add
aam
xchg
hlt
pop
jno
inc
sbb
(bad)
call
lahf
sub
and
and
out
int3
shr
lock
(bad)
jmp
xlat
rcl
arpl
ins
or
dec
sub
or
mov
xchg
hlt
jl
popf
loop
sti
adc
xchg
or
cmp
xchg
test
push
dec
shl
jmp
mov
mov
jmp
mov
mov
nop
mov
loopne
or
inc
jl
add
inc
rcl
jle
and
push
frstor
int
and
fisub
dec
sbb
jge
aam
push
jecxz
iret
push
mov
jecxz
cdq
mov
sbb
add
xor
lods
and
in
loop
out
add
mov
lds
iret
dec
int
or
cmp
pop
je
sub
fdivr
sbb
and
ret
jno
sbb
xchg
mov
inc
dec
mov
mov
xchg
out
aad
xchg
sub
fwait
xchg
in
jo
aas
das
add
ds
je
imul
mov
daa
fs
aas
sbb
out
mov
mov
mov
xchg
inc
ret
xlat
inc
push
adc
arpl
pop
in
sar
daa
xchg
fucomp
sub
retf
call
jmp
push
xor
pop
xor
jl
and
xchg
in
adc
mov
js
jns
push
(bad)
fcom
or
icebp
dec
stos
stos
imul
inc
sub
sbb
out
xor
mov
in
jg
jns
cmp
in
arpl
cmp
cmp
pop
dec
push
inc
xchg
lahf
inc
cpuid
lahf
out
pushf
mov
call
or
or
push
in
push
inc
pop
pop
mov
sbb
jae
ror
sbb
rcl
dec
push
test
sub
lods
xchg
(bad)
pop
jmp
pop
sbb
shl
and
stos
jle
mov
pop
jne
sub
(bad)
adc
push
fsub
or
in
dec
test
or
xchg
jo
stc
lods
mov
mov
loopne
shl
das
or
lods
push
jmp
out
mov
daa
(bad)
mov
gs
fild
in
or
pop
ss
fwait
add
xchg
push
loop
(bad)
mov
addr16
cmc
mov
mov
add
data16
jbe
mov
(bad)
retw
out
aam
std
scas
iret
jle
addr16
sahf
mov
xor
imul
in
hlt
pop
pop
pop
jns
dec
loope
mov
jmp
imul
fneni(8087
xlat
mov
stos
int
std
(bad)
sbb
scas
lahf
pusha
test
add
ss
pop
mov
in
jmp
pop
mov
or
mov
jbe
fwait
ins
shl
sub
xor
mov
imul
mov
ins
lods
pop
jle
lods
cmp
sub
outs
pop
in
add
ss
jo
int3
icebp
adc
xchg
mov
dec
push
xor
out
cmp
or
scas
cmp
add
retf
rol
test
shl
sbb
push
sub
inc
or
jae
leave
adc
dec
out
test
push
ins
and
in
cmp
cmp
clc
sub
repz
cmp
mov
dec
ret
mov
xor
jo
das
lods
ficom
das
xor
lods
ret
stos
dec
lea
dec
pop
aad
xor
pop
into
fidivr
fidivr
sbb
iret
ins
rol
xchg
ja
adc
push
sti
aad
cmp
jmp
push
dec
cmc
ss
adc
pushf
jle
call
inc
call
mov
in
sbb
imul
pushf
(bad)
push
push
fild
dec
mov
std
dec
dec
adc
xor
cmp
gs
jns
lds
or
xor
mov
jmp
mov
imul
cmc
retf
in
adc
(bad)
pop
mov
sbb
pop
sub
jge
imul
mov
(bad)
lds
add
sub
fucomip
xor
push
lods
popf
xchg
es
retf
push
xchg
adc
mov
adc
add
mov
and
movs
jmp
inc
and
fs
loopne
mov
cmp
fcomp
lock
adc
cdq
xor
mov
push
aad
jl
mov
xchg
xlat
jge
pop
push
retw
or
mov
movs
push
cmps
imul
cli
out
dec
mov
adc
in
xchg
and
inc
mov
sbb
movs
inc
mov
imul
adc
mov
js
push
aas
addr16
sbb
pop
sbb
dec
push
sar
sbb
loope
loop
sbb
pushf
mov
cdq
xchg
call
add
xor
or
out
(bad)
pop
inc
movntq
xor
sub
call
leave
pusha
dec
dec
adc
jnp
shr
push
and
lahf
jl
add
in
cmp
mov
push
xor
fwait
daa
sub
ror
cmp
(bad)
(bad)
mov
jbe
push
ja
test
and
and
pushf
ss
mov
add
jp
sub
or
in
push
cmp
call
cmc
mov
add
mov
or
je
mov
rol
push
icebp
pusha
ds
inc
cmp
in
jmp
aaa
adc
in
adc
push
cmps
stos
jg
ret
mov
ins
dec
cmovb
add
xchg
lock
call
lods
stc
sbb
lods
mov
(bad)
hlt
xor
inc
or
sub
jbe
push
add
js
pop
adc
jnp
test
movs
shl
dec
add
test
push
and
mov
fisubr
jo
repnz
sub
sub
xchg
push
or
test
leave
inc
or
fnstcw
retf
lahf
push
push
aam
das
adc
mov
and
fadd
out
and
in
(bad)
aaa
mov
imul
rol
xchg
les
cmp
and
mov
daa
je
jo
push
gs
jbe
(bad)
dec
sub
dec
scas
mov
ds
(bad)
dec
mov
mov
fst
xor
mov
lock
jp
lock
(bad)
xchg
cwde
jmp
add
and
adc
call
sub
push
inc
mov
jg
je
mov
scas
fstp
std
inc
fwait
xchg
xchg
fsubr
cdq
fisub
js
push
jo
test
or
cmc
popf
dec
dec
or
movs
stos
xchg
std
adc
mov
hlt
jmp
pop
adc
pop
dec
stos
test
test
sub
push
ins
out
and
pushf
fmul
add
sub
pop
cli
or
add
cld
mov
clc
data16
cld
sar
inc
push
inc
stc
cmp
int3
adc
ss
xor
add
and
jae
jns
out
repz
sub
ficomp
es
ret
push
add
push
inc
and
dec
pop
jbe
inc
dec
jo
sub
adc
popf
xchg
sub
fisub
cmps
je
cmps
mov
rcr
mov
add
and
cli
fbld
push
push
dec
aam
fldenv
test
ins
clc
dec
dec
inc
test
sub
aam
gs
rol
adc
add
xor
adc
mov
mov
shl
std
or
in
shl
inc
mov
xchg
loope
inc
xchg
xchg
xor
pop
xchg
mov
cmc
fwait
retf
fistp
sub
cwde
sub
test
ss
adc
jge
sub
cmp
jge
retf
icebp
fisttp
xor
add
push
inc
push
outs
nop
stos
enter
inc
push
ins
shl
dec
enter
stos
outs
repz
add
xchg
jge
rcl
jl
xor
xchg
push
add
push
dec
mul
fucomi
mov
add
adc
test
jecxz
mov
pop
mov
mov
cli
ficom
xchg
sti
cmc
movs
inc
xchg
fisub
(bad)
cmps
cmp
mov
repnz
loope
inc
cmp
fisub
pop
cmc
xchg
mov
outs
ins
inc
loope
movs
adc
and
jb
jb
mov
cmp
mov
jecxz
rcl
xchg
inc
mov
scas
cs
cmps
mov
mov
cmp
sub
add
sub
sub
dec
fs
stc
mov
test
or
push
push
cdq
jmp
dec
dec
dec
dec
add
dec
sub
jae
(bad)
pop
mov
cmps
and
ret
or
mov
int
or
in
clc
pop
aaa
loopne
fsub
add
fadd
mov
js
jecxz
jae
mov
imul
add
pop
jmp
test
outs
and
inc
addr16
mov
div
and
outs
sub
div
mov
xchg
call
fwait
in
dec
push
mov
mov
mov
sbb
rcl
or
scas
outs
sar
dec
adc
xchg
dec
jae
clc
leave
mov
std
adc
jno
mov
mov
sub
pop
adc
ins
jmp
and
xchg
fldcw
inc
add
fiadd
test
repnz
retf
imul
mov
mov
pushf
mul
daa
ss
call
mov
sar
popa
sahf
cwde
push
xor
inc
mov
ja
pop
mov
xor
(bad)
idiv
(bad)
mov
div
loopne
jg
xchg
mov
loope
add
mov
inc
ds
sti
cmp
ja
jb
inc
sub
cmps
sub
das
inc
adc
dec
(bad)
into
rol
mov
(bad)
cld
sbb
inc
retf
dec
cwde
out
ret
pavgw
pushw
repz
adc
mov
sbb
(bad)
hlt
ret
sbb
ins
push
mov
pop
jge
(bad)
jecxz
xor
fwait
aad
sbb
rcl
(bad)
shl
loope
mov
mov
sbb
push
(bad)
or
sbb
mov
fild
adc
ret
jp
adc
pop
sub
adc
add
lock
imul
xor
mov
fmul
mov
les
sub
dec
and
cmp
loope
pop
sub
outs
sub
and
add
lahf
dec
movs
push
fst
mov
aas
xchg
bound
mov
call
dec
cmps
(bad)
push
mov
xchg
push
push
fst
test
jg
push
call
sub
fbld
cli
ja
adc
int3
enter
jb
scas
jg
cs
dec
loopne
mov
xchg
add
out
sti
mov
mov
xchg
rcr
fisub
jmp
scas
int
dec
cmp
retf
fcom
scas
jp
jp
psubusw
mov
xchg
inc
in
pop
add
ss
sub
(bad)
adc
(bad)
sbb
push
inc
fidivr
test
push
sub
das
add
movs
push
les
loopne
xor
in
adc
push
jmp
sub
xlat
mov
std
cmp
neg
inc
retf
sub
and
dec
add
cmp
ds
cmp
mov
jg
arpl
rol
in
out
push
mov
cld
adc
inc
jl
pmuludq
and
movs
mov
mov
sbb
int
les
sub
retf
retf
sbb
call
xchg
fisttp
ror
div
add
pusha
xchg
mov
xchg
dec
std
jbe
push
fs
inc
ret
xchg
push
cmc
retf
(bad)
cwde
push
ss
ror
jge
add
ins
mov
xchg
pop
xlat
inc
retf
pop
icebp
aaa
mov
mov
cmps
xchg
xchg
movs
adc
neg
(bad)
mov
movs
dec
inc
fist
into
(bad)
cmp
retf
test
sub
mov
jmp
xlat
(bad)
cmp
pop
inc
ss
cmp
test
fisttp
mov
mov
int3
dec
mov
mov
cli
fidiv
push
out
jge
cmp
push
loope
dec
mov
add
bound
jl
enter
xor
mov
in
inc
stos
mov
inc
push
or
test
mov
pop
in
test
enter
cmp
ror
add
mov
sbb
jae
mov
and
pop
inc
add
test
pop
sub
sub
mov
test
out
jg
enter
ins
xchg
shr
add
in
jle
add
in
aas
mov
es
std
hlt
mov
rcl
mov
ins
jecxz
ret
fsub
dec
aaa
out
das
ret
sahf
mov
xchg
out
in
jae
pop
and
pop
icebp
(bad)
pop
mov
dec
or
inc
setns
ss
test
test
std
push
cmp
outs
jae
and
fnstenv
mov
pop
adc
mov
adc
addr16
ins
mov
sub
mov
add
and
xor
stos
push
add
lods
pop
xor
push
mov
pop
or
mov
pop
add
sti
shl
dec
inc
les
or
pop
sbb
shr
xor
mov
inc
in
fs
and
push
pop
pop
enter
rcl
add
div
mov
mov
mov
outs
leave
xor
dec
sub
mov
inc
cmp
lmsw
call
(bad)
mov
xor
add
cmp
dec
mov
cvtps2pd
clc
and
sahf
mov
xchg
mov
movs
sub
and
icebp
sbb
sub
jb
les
in
imul
push
mov
dec
shr
push
in
movs
std
js
test
pop
iret
jns
push
jmp
or
ret
xchg
cmp
cmp
int3
imul
xor
push
dec
adc
outs
data16
outs
cmp
data16
cmp
scas
aad
push
jle
cpuid
das
pop
pop
mov
jge
test
pop
sbb
pop
outs
add
pop
cmp
mov
xor
(bad)
mov
mov
in
add
pop
fsubr
movs
call
sti
fbstp
icebp
sar
jmp
adc
pop
mov
add
ja
pop
fcom
jmp
cmps
sub
hlt
cld
push
or
jb
mov
je
jns
xor
ss
mov
in
rol
movs
sbb
add
scas
mov
out
and
retf
adc
ins
xchg
adc
or
nop
push
pop
les
add
or
sti
pusha
ds
fs
dec
jmp
sub
cmp
xlat
nop
dec
rcl
dec
ret
es
jmp
jno
imul
jns
stos
cli
add
call
mov
push
inc
adc
cmp
mov
or
xchg
mov
mov
(bad)
jmp
or
and
pop
mov
sub
test
add
std
adc
jnp
jb
aad
adc
test
jmp
xchg
(bad)
into
inc
mov
lods
or
(bad)
adc
mov
rcl
inc
push
mov
adc
in
aaa
fisubr
stc
mov
ins
xor
test
push
and
jge
sbb
and
ror
dec
aam
mov
retf
and
fcmovbe
shr
lahf
inc
mov
pop
mul
and
inc
adc
aam
cwde
fbstp
and
sub
fs
sbb
push
pop
mov
or
leave
xlat
lods
test
repnz
(bad)
rol
es
dec
pop
mov
sbb
pop
jecxz
stos
pop
mov
addr16
cmp
jo
jmp
inc
cs
cdq
or
mov
popa
pop
stos
jnp
jnp
test
jne
imul
and
lods
retf
adc
cmp
aam
adc
fwait
mov
das
lock
cmp
jmp
push
inc
push
add
add
(bad)
ds
out
stos
mov
sub
lds
xchg
loopne
fcom
outs
fst
bnd
jecxz
cwde
pop
scas
sub
out
(bad)
xor
mov
inc
push
test
ss
shl
cmps
adc
sbb
or
scas
add
mov
fsubr
in
shl
jno
test
pop
sub
jne
sbb
xor
adc
das
inc
and
jle
cmps
fcmovne
loope
test
pop
inc
xchg
jmp
adc
push
out
adc
push
jne
outs
pop
inc
jb
mov
ja
fucom
mov
push
sub
adc
and
jge
push
cmp
cs
in
lahf
popf
sbb
pop
cmps
aad
mov
outs
outs
or
daa
and
mov
pop
and
fdivr
cli
sub
popa
sub
iret
mov
inc
jge
sbb
dec
mov
iret
fisttp
pop
mov
in
cmp
pushf
nop
jb
lahf
and
retf
mov
clc
(bad)
ins
xchg
mov
js
fmul
repz
in
fwait
daa
xchg
adc
ret
ror
loope
add
imul
movs
push
cld
out
jae
pushf
mul
mov
in
jp
sub
jg
push
int
out
lock
pop
lods
sub
fnstsw
and
mov
add
pop
mov
xchg
inc
cdq
push
cmp
adc
jmp
pop
mov
mov
sbb
gs
inc
data16
repnz
(bad)
lahf
jp
sbb
xchg
xchg
js
test
retf
sbb
popa
mov
or
ins
int3
out
test
cdq
or
mov
gs
pop
pop
and
stc
cmp
pop
call
pop
test
loopne
fdiv
ror
cmp
cmps
and
xchg
fst
mov
aam
mov
jmp
sub
sbb
adc
sti
cmc
push
fild
aaa
push
mov
jae
mov
jno
sbb
in
aad
cs
xchg
in
loope
jnp
push
ds
popf
(bad)
push
or
xchg
lods
ja
call
daa
and
inc
dec
xor
imul
int
cmps
retf
repnz
int
xchg
xlat
pusha
push
inc
ret
fisubr
sahf
cmp
cwde
in
retf
mov
pushf
jge
inc
lods
push
dec
xchg
push
xlat
inc
jae
add
push
dec
push
and
inc
les
xor
lods
pop
icebp
in
jbe
pop
sti
jecxz
nop
jmp
cli
inc
dec
pop
sub
dec
and
loopne
mov
cmc
mov
xchg
ins
cmp
inc
out
int
and
mov
out
push
or
xlat
xor
inc
(bad)
in
arpl
mov
(bad)
inc
or
es
jecxz
lahf
jmp
hlt
mov
imul
das
imul
test
std
sbb
dec
mov
dec
loope
add
adc
sbb
mov
movs
je
dec
adc
fist
and
(bad)
lahf
lea
xchg
outs
(bad)
ret
inc
outs
stos
xor
adc
jge
pop
leave
mov
mov
ficomp
push
sub
pushf
inc
rcr
outs
adc
jge
daa
mov
nop
or
in
pop
push
dec
cdq
sbb
mov
mov
fwait
xchg
cmps
bound
sbb
mov
xchg
cld
xlat
mov
lahf
cmp
or
and
sar
in
mov
jo
xor
imul
cmp
xchg
sub
jl
frstor
fwait
sub
sbb
or
aaa
mov
ds
cmps
adc
xor
clc
test
es
mov
fnstsw
mov
mov
idiv
stc
out
mov
mov
pop
mov
or
mov
push
fiadd
leave
leave
aas
ror
jns
shr
std
pop
je
clc
xor
test
pop
loopne
jbe
mov
add
dec
rol
xchg
(bad)
sub
fisubr
lods
movs
sbb
fwait
scas
push
stc
cmp
jae
cld
data16
clc
mov
adc
aaa
dec
pop
sub
inc
(bad)
scas
mov
mov
enter
fmul
or
cmps
js
push
push
push
(bad)
std
out
adc
cmps
in
lods
(bad)
movs
add
sar
fnstsw
ss
arpl
xor
sub
pop
enter
in
sbb
jno
lods
lods
sub
sub
dec
punpckhdq
jl
movs
add
inc
push
lods
pop
jmp
fild
fimul
popf
mov
cmps
ins
and
inc
fldenv
rcl
pop
bound
dec
mov
pop
aaa
cld
or
jae
stos
mov
dec
push
clc
mov
xchg
lock
fwait
xor
aad
mov
sbb
out
shr
lds
inc
xor
add
push
rcl
push
faddp
loop
xor
adc
push
scas
nop
data16
ins
clc
fstp
cdq
push
push
out
lds
aas
pop
jge
jg
das
imul
sub
xor
popa
imul
outs
out
dec
adc
push
movs
push
hlt
push
mov
cmp
dec
retf
adc
out
out
sar
enter
mov
fst
jmp
or
xlat
mov
or
jne
mov
push
int
adc
mov
sub
sbb
aam
scas
mov
jnp
loope
cmps
movs
dec
lea
or
pop
or
lea
cld
push
call
and
sub
pushf
bound
enter
(bad)
clc
aad
cli
and
stos
dec
adc
in
xor
add
add
fcmovu
aaa
mov
out
pop
arpl
mov
dec
jbe
mov
push
sub
sub
ja
mov
inc
addr16
cwde
xchg
inc
sahf
pop
scas
sub
loope
stc
mov
inc
sub
test
call
(bad)
pop
or
inc
lea
sub
lea
loop
enter
call
lahf
mov
add
push
ret
cld
(bad)
pop
xorps
mov
sbb
icebp
and
pop
jge
es
int
mov
xor
nop
mov
push
(bad)
(bad)
retf
or
addr16
xor
mov
movs
add
sahf
scas
inc
and
xor
pop
jmp
outs
xor
es
bound
in
mov
push
mov
jns
adc
ret
push
inc
xchg
xchg
repnz
add
icebp
mov
sbb
or
push
mov
clc
fsub
retf
xchg
das
adc
not
adc
sbb
xor
sub
sbb
sub
add
(bad)
mov
(bad)
push
push
xor
int3
inc
scas
xchg
xor
outs
in
std
repz
cmps
mov
addr16
clc
mov
sahf
inc
bound
pop
in
jmp
cmc
(bad)
xchg
sub
mov
shr
fild
and
enter
inc
leave
sub
mov
cmp
dec
call
icebp
xor
jle
mov
jecxz
mov
mov
add
push
mov
cmp
leave
fdiv
inc
int
dec
mov
sti
sub
pop
nop
nop
sub
sub
fild
(bad)
jo
int
mov
ret
mov
push
jmp
movs
sbb
bound
cmp
fs
push
xor
int3
sub
test
sbb
cmp
mov
cmc
mov
jbe
lock
inc
cs
sti
dec
pop
sub
dec
(bad)
(bad)
push
jmp
je
jmp
cmp
test
dec
ja
or
xlat
pop
ret
lock
fdiv
pop
add
cs
clc
lods
inc
xchg
jp
and
stc
inc
push
mov
cmp
lock
popf
lahf
cmps
mov
mov
int
dec
mov
ja
int3
jge
lahf
add
adc
das
inc
mov
xor
int3
mov
jno
sbb
adc
jmp
(bad)
sub
repnz
pop
loope
neg
mov
sti
adc
jnp
push
arpl
mov
retf
cmp
(bad)
data16
push
les
cmc
inc
mov
or
jp
ins
sbb
mov
ins
cdq
in
push
popf
dec
fsub
jp
push
mov
mov
call
push
fucom
test
lea
sahf
mov
adc
xor
xchg
xor
sbb
or
and
sbb
or
mov
mov
in
jmp
xor
sbb
adc
dec
mov
lahf
lds
inc
mov
test
jnp
xchg
mov
xor
push
dec
adc
adc
dec
jmp
sub
enter
xor
pop
ror
ret
fld
push
xlat
clc
dec
lock
fwait
cmp
and
jae
push
ins
jecxz
js
cmps
sub
(bad)
fs
fld
lods
jecxz
inc
mov
push
loop
push
xchg
push
bound
inc
ja
lods
jnp
scas
enter
sub
enter
xchg
and
in
pop
push
adc
shr
cmp
inc
in
mov
neg
inc
out
sub
dec
pop
xchg
neg
cmp
lods
jb
jo
inc
ss
sbb
add
adc
fidivr
jmp
pusha
adc
adc
cmp
ret
loope
jmp
mov
mov
cmp
adc
bound
fucomip
jno
imul
in
sub
adc
cmp
sub
jbe
adc
out
xchg
sahf
inc
or
xor
shr
hlt
loope
hlt
jecxz
pop
fldcw
mov
mov
lods
ret
xchg
push
fsub
cmp
dec
mov
and
push
inc
mov
nop
pop
aas
neg
inc
inc
shl
inc
xchg
idiv
and
mov
jecxz
cmp
sub
retf
(bad)
cs
int3
int3
xor
cmp
sar
mov
mov
ja
call
mov
aaa
in
dec
jp
adc
div
xchg
aam
sbb
pop
mov
adc
sub
leave
int
xchg
xchg
repz
xor
(bad)
(bad)
mov
fs
xor
cmps
sar
cmp
in
mov
sub
(bad)
lods
das
jnp
xor
xor
adc
mov
mov
push
xchg
inc
mov
inc
dec
pop
into
call
pop
jle
popa
jne
xchg
cs
mov
movs
stc
jnp
lock
mov
mov
xchg
mov
dec
dec
push
aaa
sbb
add
or
loope
enter
mov
pop
add
xor
iret
jg
repnz
sub
frstor
enter
push
sbb
idiv
jecxz
sbb
inc
je
movs
test
jo
mov
stos
jmp
jg
push
shr
mov
ins
mov
adc
shl
jnp
into
mov
or
push
shufps
sub
xor
jge
push
sub
cmps
(bad)
mov
bnd
inc
mov
jo
and
(bad)
stos
jmp
ins
into
dec
add
ret
cmp
arpl
mov
shl
xchg
gs
xor
jp
out
xchg
add
sub
js
out
sub
das
cmp
mov
xchg
repnz
or
push
arpl
lock
leave
sar
aad
js
ins
mov
test
dec
jnp
nop
sub
in
loope
sub
icebp
inc
push
movs
sar
add
jmp
jmp
in
bound
es
pop
imul
push
jecxz
mov
add
(bad)
cli
jnp
ret
(bad)
(bad)
iret
mov
js
jl
push
adc
fadd
cmp
in
sub
js
fsubr
or
pop
and
or
outs
test
fdivrp
movs
lods
cmp
and
das
aam
das
dec
and
gs
sbb
pop
jge
test
jmp
dec
popa
cmp
cmp
shl
sahf
nop
or
mov
mov
fisttp
adc
push
mov
fcom
ins
xchg
jg
dec
inc
into
test
or
mov
and
sbb
push
lahf
mov
dec
cmp
leave
leave
std
pop
stos
lods
xchg
aas
sub
fdivr
mov
or
(bad)
xchg
std
mov
fucomi
hlt
hlt
sub
xor
inc
xor
xchg
sti
push
js
ret
out
mov
rcr
sub
je
dec
bound
aaa
mov
push
mov
inc
mov
adc
inc
mov
sub
mov
out
jecxz
pop
jne
adc
sar
xchg
or
call
push
test
and
and
xor
scas
mov
adc
and
push
add
into
retf
aas
rol
mov
cmp
push
aad
push
movs
push
jmp
test
ins
outs
loopne
jns
sti
out
into
in
mov
lock
mov
cmp
xchg
dec
pop
ins
cmp
pusha
aam
pusha
sub
aaa
imul
clc
cmps
sub
fstp
ins
mov
dec
jmp
mov
sub
adc
pop
call
(bad)
push
aas
sbb
xor
and
inc
or
popf
ds
dec
pop
dec
mov
(bad)
adc
call
push
data16
cmp
sbb
jle
xchg
mov
add
cli
mov
inc
outs
(bad)
mov
test
sub
xchg
in
dec
cmp
fiadd
dec
sar
cmp
push
jp
mov
fist
ins
adc
inc
icebp
cld
out
xchg
mov
sbb
iret
pop
or
and
imul
jne
inc
clc
inc
inc
mov
inc
pop
ins
inc
sahf
imul
neg
jp
test
nop
lock
mov
cdq
call
mov
cmp
pusha
xchg
in
das
rcr
(bad)
cmp
div
jne
sbb
adc
cs
push
sbb
pop
push
mov
cmps
adc
mov
stos
dec
or
scas
adc
dec
shr
pusha
retf
jnp
lea
adc
xchg
sub
jae
mov
popf
cmp
mov
rcr
dec
adc
cs
pop
cwde
dec
push
xchg
ja
lods
test
cmp
(bad)
loope
mov
call
mov
xor
xchg
fisub
sbb
cmp
or
(bad)
cmp
repnz
js
cld
pmaxub
mov
call
push
leave
sub
leave
inc
addr16
jge
mov
aas
or
call
add
lods
mov
aas
dec
mov
shl
jmp
mov
stc
or
rol
sub
cmp
ins
or
dec
xlat
cmps
inc
inc
cld
add
pop
dec
jnp
adc
(bad)
imul
xlat
mov
ins
retf
fst
dec
call
call
hlt
addr16
xchg
mov
arpl
cld
outs
retf
js
cmc
icebp
cmp
stc
pop
add
push
icebp
lahf
cdq
cmp
gs
ins
jmp
inc
jg
dec
ss
sti
push
push
inc
adc
jne
pop
dec
fld
xchg
ret
leave
stos
xor
pop
in
pop
jno
ins
mov
lahf
lea
pop
stos
popf
cmp
movs
or
movups
aaa
retf
ds
lods
lds
es
in
aam
test
int
and
fisubr
pop
or
(bad)
xor
push
test
cwde
rcr
cmps
dec
dec
mov
cs
mov
imul
iret
neg
sbb
pop
leave
mov
lock
mov
mov
pop
ret
cmp
repz
pop
out
lods
leave
mov
sub
test
sbb
sti
mov
ins
adc
inc
mov
popa
adc
mov
ror
and
xchg
dec
stos
les
and
jns
mov
mov
mov
xchg
add
gs
pop
cmp
mov
push
xor
enter
cmp
ss
shl
push
push
out
cld
sbb
fcmovne
int
loope
dec
outs
lods
popa
cwde
jb
pop
push
jo
jle
xchg
dec
and
push
push
lahf
cld
mov
out
xor
fnstsw
fsub
clc
jne
ins
xchg
das
push
sti
or
cld
rcr
ins
cld
jecxz
pop
into
shr
(bad)
cmc
imul
scas
mov
push
leave
scas
xchg
sub
test
mov
cmp
mov
test
les
mov
adc
daa
enter
mov
sub
mov
mov
loopne
stc
cmps
xchg
aad
cwde
jne
stos
and
and
jge
xchg
add
jle
jg
dec
fcomp
outs
in
xchg
fisub
pop
pop
mov
movs
xchg
cmc
push
fadd
xor
pop
push
movs
pusha
sub
je
cld
cld
sub
and
(bad)
repz
jmp
cs
sbb
push
or
pop
xchg
ja
jb
xchg
nop
shl
out
adc
ds
mov
fistp
adc
sub
xlat
fsubr
sbb
push
stc
pop
nop
inc
lds
mov
mov
retf
ret
loopne
adc
jecxz
ds
(bad)
(bad)
out
sti
dec
fist
pop
stos
imul
sub
std
pusha
test
add
xor
outs
mov
hlt
push
push
fst
xchg
cli
and
gs
or
movs
int3
into
or
sbb
push
mov
clc
clc
inc
(bad)
xchg
pop
mov
xor
gs
mov
out
jne
out
pop
mov
inc
push
adc
(bad)
dec
out
sub
mov
jle
lds
cli
pop
aad
(bad)
sub
xor
adc
dec
sti
into
adc
inc
mov
fdiv
(bad)
mov
push
pop
loopne
xlat
jno
ficomp
jl
lock
stos
repnz
push
jl
and
retf
push
inc
fucom
cmp
inc
(bad)
sbb
cmp
lahf
popa
mov
and
bnd
test
mov
fs
sbb
inc
mov
call
gs
dec
sbb
push
jns
adc
ja
pop
cmps
push
xchg
push
pusha
call
mov
leave
repz
popa
sbb
out
jbe
push
push
cmc
je
fsubr
pusha
or
push
mov
lds
sbb
push
sar
test
test
mov
std
cld
test
sbb
adc
or
mov
xor
mov
sub
movs
mov
(bad)
push
lock
jae
mov
xchg
mov
ror
shl
pop
fsub
std
adc
pop
push
dec
mov
jno
xor
lea
addr16
outs
xchg
lock
mov
mul
mov
or
or
push
mov
mov
test
sbb
adc
sbb
cmp
mov
call
mov
jno
mov
stc
inc
and
add
pushf
pop
xchg
add
inc
fisubr
pop
ret
sbb
cmc
lea
addr16
and
add
clc
add
pop
(bad)
cmc
and
and
test
adc
xor
xor
inc
pop
fstp
js
je
(bad)
movups
cmp
add
shl
fs
mov
or
push
lds
jno
ins
mov
adc
neg
and
xchg
das
or
jo
jne
mov
jp
into
mov
or
sbb
xchg
int
test
or
in
jecxz
push
push
shr
or
xchg
mov
dec
pop
xor
jb
(bad)
cwde
in
out
add
aas
xor
push
adc
xor
lds
fld
cmp
push
sub
xchg
stos
push
xchg
xchg
add
cmp
pop
cmp
pop
and
out
repnz
pop
fld
adc
sub
dec
dec
test
mov
add
jg
push
add
sbb
outs
test
ror
pop
mov
in
fwait
ret
and
daa
fs
js
cs
add
mov
je
or
cmp
xor
and
sub
ficomp
fst
cld
sbb
retf
pop
or
push
loopne
inc
cld
push
(bad)
lea
inc
mov
outs
bound
xor
sub
call
sahf
lds
ret
mov
imul
dec
adc
outs
popa
into
jp
cmp
movs
or
mov
ficomp
cs
mov
pop
aam
aas
jmp
call
in
pusha
xor
push
mov
push
shl
das
pop
inc
pusha
imul
inc
and
shl
hlt
sar
pop
jbe
imul
inc
push
adc
push
cmp
rcr
aad
(bad)
xchg
mov
cmp
jge
rsqrtps
aam
mov
nop
dec
sbb
jns
int3
sti
inc
gs
in
test
sub
call
fst
fs
data16
xor
cmps
mov
mov
ret
xchg
popa
out
fucom
and
loopne
add
pusha
imul
int3
or
es
jp
pop
sbb
sbb
add
xchg
sub
add
and
lahf
movs
(bad)
pop
pop
push
std
outs
ds
clc
cmp
nop
add
into
fstp
sahf
jp
or
pop
arpl
lea
push
push
cdq
fisub
ja
stos
inc
push
cmps
call
push
fsub
fcom
iret
mov
cdq
adc
dec
adc
xor
sub
fstp
jle
std
adc
push
mov
jl
das
pop
fild
std
mov
mov
(bad)
jne
pop
retf
lock
(bad)
mov
retf
dec
or
add
xchg
xchg
jg
push
xor
pop
mov
or
jne
shr
shr
sbb
sub
sub
aaa
push
sbb
pop
and
jl
inc
adc
and
cmp
add
jecxz
jp
sbb
xchg
je
fwait
sbb
mov
xlat
daa
sbb
xor
pop
stos
mov
jp
adc
sub
imul
pop
rcl
adc
(bad)
xor
nop
test
mov
inc
mov
add
sbb
sub
ss
out
xchg
test
cmp
add
mov
pop
jl
cli
cmp
fs
cld
mov
stos
mov
es
scas
cmps
nop
push
repz
jb
push
sub
lahf
(bad)
into
out
inc
cmps
add
sub
cld
sbb
pop
dec
push
aam
sub
mov
xor
dec
shl
imul
cs
mov
imul
fdivr
sbb
fwait
retf
out
movs
pop
push
xchg
and
imul
xchg
jbe
movs
stos
loop
adc
mov
data16
xchg
int
jmp
sahf
in
lods
mov
arpl
xor
sub
inc
and
lea
jmp
push
int
movs
sub
fwait
jo
and
or
ja
pop
sub
test
(bad)
fisub
sub
inc
mov
repnz
jne
cwde
sbb
adc
pop
dec
cmp
sbb
jae
es
(bad)
push
xchg
or
int
repz
imul
sbb
xor
mov
sbb
ja
outs
pop
iret
lods
fs
jne
call
xchg
jno
fs
data16
aas
sbb
stos
or
loopne
test
and
xor
in
popf
adc
xor
xor
mov
mov
cmps
sbb
sar
jp
shr
test
and
movs
pop
out
xor
pop
adc
jmp
mov
mov
js
dec
pop
repz
mov
pop
cmp
xor
add
push
fcmovnbe
pusha
jmp
out
ins
push
xor
adc
jae
lock
loopne
and
dec
call
arpl
imul
in
out
in
adc
cmp
add
jno
pop
repnz
nop
sbb
inc
mov
repz
mov
aaa
sbb
ins
repz
(bad)
jbe
pop
sbb
jge
daa
ret
sbb
out
ins
xor
call
aam
sub
inc
adc
fwait
ds
jg
fnsave
outs
lds
push
mov
cli
loope
sbb
loop
(bad)
cmc
scas
arpl
and
inc
xchg
js
xor
mov
mov
push
pusha
mov
adc
jp
nop
pop
arpl
loopne
jbe
sub
mov
mov
sbb
test
jae
leave
push
daa
mov
mov
loop
push
xor
jnp
mov
out
and
inc
mov
cs
push
mov
cmp
push
mov
(bad)
sub
fcmovb
sahf
push
jae
inc
cs
mov
mov
(bad)
mov
cmp
sub
iret
xchg
push
shl
stc
adc
or
push
or
dec
sbb
or
in
cmp
pop
ret
hlt
nop
mov
pop
jae
loop
sbb
sub
not
stc
push
cld
repnz
loopne
mov
cmp
cmp
push
stos
in
(bad)
aas
jno
mov
hlt
dec
inc
lods
addr16
dec
loope
ja
jno
scas
fnsave
adc
in
inc
inc
(bad)
shr
jg
in
out
mov
outs
xchg
mov
jmp
rcl
xor
inc
mov
movs
push
movs
adc
ficom
retf
mov
cdq
and
(bad)
xchg
and
outs
(bad)
dec
in
inc
push
fdiv
sub
jge
xor
ins
add
xchg
leave
xor
sub
sar
je
mov
movs
jle
and
retf
jo
push
outs
mov
push
popa
cmps
nop
adc
test
or
add
mov
lods
sbb
mov
jne
sbb
dec
imul
(bad)
mov
cs
pop
in
mov
xor
test
(bad)
cmp
data16
pop
out
call
not
xchg
sbb
pop
dec
aam
pop
and
dec
(bad)
jnp
mov
loop
in
rcr
fcomp
sbb
push
les
test
outs
sbb
out
jmp
jle
jo
jmp
mov
xchg
loopne
(bad)
outs
xchg
imul
pop
scas
dec
pop
pop
leave
cmp
adc
mov
test
push
or
(bad)
(bad)
sti
pop
ret
jbe
dec
fbld
sahf
mov
leave
(bad)
or
pop
xor
scas
(bad)
popf
pop
sahf
sub
mov
cmp
sbb
xchg
daa
dec
and
mov
sbb
or
push
enter
ins
xchg
mov
fcom
mov
lds
xor
mov
mov
mov
in
xchg
add
aad
hlt
retf
or
leave
fldenv
pop
in
clc
les
in
mov
mov
ss
pop
out
sub
mov
inc
mov
aad
ror
dec
sub
inc
pop
jo
pop
dec
stc
inc
stc
nop
inc
bound
pop
les
sub
xchg
xor
and
pop
(bad)
push
lods
aaa
call
cs
test
fidivr
jge
and
xor
dec
sti
std
test
fcomp
pop
sub
arpl
mul
imul
xor
mov
and
fidivr
adc
add
jmp
movs
lods
mov
aas
test
sub
out
mov
pusha
(bad)
lds
inc
test
ins
sbb
mov
jp
push
inc
jbe
xchg
arpl
loop
mov
fwait
add
mov
cmp
outs
hlt
xlat
stos
cmp
xchg
add
retf
pop
ins
add
add
xor
push
jae
fcomp
in
or
cmp
add
imul
stos
add
retf
mov
outs
dec
jb
inc
aaa
sbb
add
shl
cmp
mov
or
addr16
and
std
sub
int3
mov
test
repz
cmp
cmps
pop
(bad)
mov
stc
cmc
pushf
stos
inc
imul
loop
int3
jno
pop
mov
into
call
clc
in
push
in
cmp
imul
jne
xor
inc
dec
inc
push
popf
cmp
dec
into
shr
das
push
mov
mov
lods
xor
pop
pop
cmc
inc
(bad)
mov
sub
cmps
dec
jns
aas
cmp
push
sbb
push
fnsave
lods
mov
mov
cli
inc
sbb
add
in
mov
cmps
push
lock
test
jns
arpl
je
xchg
add
shl
inc
scas
mov
adc
stos
cwde
inc
push
lock
loope
cmp
movs
and
xchg
inc
xor
call
pusha
inc
jmp
mov
mov
xor
mov
cmp
iret
repz
mov
mov
sbb
nop
sahf
(bad)
pop
jbe
jge
test
cmc
cmp
jmp
xchg
sub
or
adc
cmps
mov
dec
mov
xlat
inc
mov
cmps
sbb
inc
imul
sbb
sub
nop
fcomp
add
call
jnp
push
mov
shl
nop
ja
mov
push
push
jnp
out
out
and
dec
xchg
add
lods
pushf
pop
sub
mov
cmp
cmp
aam
(bad)
call
cmp
sbb
jns
stc
(bad)
mov
gs
add
mov
sub
and
popa
fidiv
(bad)
retf
add
jl
test
lods
pushf
fstp
push
mov
in
ret
test
in
mov
push
jo
in
scas
adc
mov
cs
jae
ins
clc
mov
xchg
cmps
shr
out
sub
mov
pushf
aad
popa
cmc
imul
aaa
out
cdq
and
popa
add
jmp
mov
cmp
ficom
or
and
std
outs
jmp
xchg
cdq
in
rep
pop
push
ds
sub
add
lods
aam
push
mov
xlat
inc
add
mov
lods
fcmovbe
xchg
sub
push
or
mov
mov
xchg
test
sbb
xchg
div
(bad)
retf
mov
lock
mov
aad
xchg
jg
ss
sti
xor
cmc
pop
push
movs
push
int
sub
sbb
(bad)
xchg
shl
push
and
sbb
in
lods
pop
add
jl
pusha
mov
pushf
or
jecxz
and
and
test
leave
inc
cli
add
clc
mov
mov
lahf
ins
pop
xchg
rcl
mov
repz
jmp
js
jecxz
inc
fldenv
dec
or
cli
xchg
out
test
les
(bad)
mov
addr16
mov
and
shl
xchg
add
mov
sar
mov
popf
aad
stc
popf
pop
shl
scas
enter
xchg
cmps
ja
sbb
lods
movs
aaa
shl
sbb
std
sub
popa
adc
xor
sub
sbb
and
in
jne
mov
mov
hlt
stos
mov
call
retf
push
mov
iret
push
push
daa
sub
out
lds
dec
cmp
popa
adc
jl
jno
jge
add
dec
icebp
inc
cmp
js
sub
pop
retf
push
neg
dec
loop
rcl
scas
push
fisttp
sub
leave
hlt
jbe
stc
push
fiadd
cmps
push
mov
test
mov
in
and
adc
imul
call
sti
and
and
stc
jp
rol
mov
js
retf
push
mov
inc
xchg
ret
outs
pop
add
hlt
pop
cmc
(bad)
xchg
cld
out
stc
mov
adc
ror
mov
push
adc
adc
movs
mov
ins
and
std
adc
sub
arpl
out
pop
cmp
daa
or
cwde
in
sbb
add
test
iret
jne
xor
icebp
pop
aam
enter
mov
sbb
ins
arpl
mov
or
(bad)
(bad)
in
les
sub
ds
lods
cmps
push
sbb
inc
sub
das
inc
mov
push
fnstcw
cwde
push
cld
addr16
out
test
dec
icebp
xor
push
imul
addr16
ficom
push
cmc
or
js
sbb
sar
dec
xchg
fild
mov
pop
add
jb
fiadd
inc
cmp
mov
fwait
dec
mov
test
aaa
add
cmp
mov
xchg
xchg
push
out
xlat
add
fs
clc
or
stos
mov
nop
shl
fs
lods
pop
cmp
out
ja
and
dec
pop
push
shl
ror
(bad)
ror
cmp
xor
ficomp
add
xor
add
add
aas
and
ins
push
std
leave
call
mov
imul
cmp
movs
test
ds
sub
adc
add
inc
js
sub
adc
adc
or
add
mov
push
pop
or
pop
xlat
retf
loop
cmc
sbb
or
fwait
stos
dec
xchg
mov
mov
icebp
jmp
push
sub
(bad)
pop
cmp
sbb
pop
jo
and
xor
xor
jl
es
push
mov
leave
out
retf
in
fidivr
jp
outs
jnp
mov
xor
and
rcr
mov
add
outs
outs
dec
or
cwde
(bad)
jb
or
dec
les
and
and
test
dec
rcr
fcom
or
sub
xchg
and
scas
and
cmp
loop
xchg
push
jg
mov
(bad)
mov
test
xchg
sub
inc
sub
popa
dec
pop
sub
idiv
xor
or
inc
daa
and
(bad)
das
jnp
repz
mov
jo
call
cmp
popa
push
jae
push
adc
popf
aaa
adc
cld
fwait
hlt
frstor
(bad)
ror
jle
jecxz
int
aaa
jno
pushf
aaa
pop
mov
retf
jo
into
clc
push
and
sub
sub
inc
mov
aad
hlt
ja
mov
sbb
mov
and
les
jbe
fs
dec
rcr
jle
mov
rol
pop
mov
dec
mov
scas
sti
pop
ret
icebp
xchg
jge
out
rcl
mov
inc
aaa
fs
ret
in
ins
jecxz
movs
mov
mov
mov
inc
xor
cmps
inc
retf
shr
xor
test
ss
mov
or
xchg
scas
(bad)
icebp
jmp
cdq
arpl
cdq
xor
fs
stos
in
pop
or
xor
pop
push
loope
rcr
popf
jo
add
xor
pop
movs
mov
jns
adc
jmp
sahf
popa
fdivp
fdivr
mov
push
sub
add
mov
push
mov
ret
ret
mov
cli
mov
sbb
cmp
dec
ss
data16
aad
inc
add
ret
movs
cmps
fwait
inc
stc
bound
jg
js
rcr
and
ret
ja
push
ret
adc
push
pop
mov
pop
dec
inc
and
inc
cli
mov
adc
and
mov
in
das
jne
shr
mov
aad
adc
add
or
pop
mov
add
or
xchg
cmp
jp
pop
je
ins
fistp
xor
push
jbe
push
mul
inc
in
call
dec
lds
cs
sti
hlt
pop
cmp
xor
ret
push
or
push
aas
shr
and
inc
jge
mov
push
or
xor
xor
push
rcr
lods
jne
arpl
bound
dec
std
mov
sub
loope
nop
push
and
in
(bad)
psllq
mov
cmp
and
mov
arpl
retf
lea
adc
scas
loop
add
push
mov
fild
shl
push
aad
push
cmp
imul
pop
jp
imul
lock
ds
jnp
sub
call
or
fisttp
mov
nop
pop
(bad)
or
outs
jmp
jns
fidiv
jo
rol
mov
fdiv
bound
mov
daa
mov
dec
test
and
inc
int3
daa
adc
pop
or
arpl
push
fdivp
rcl
xchg
push
cmps
inc
sub
adc
(bad)
cs
or
jmp
ss
sbb
sub
mov
lds
adc
dec
inc
ror
fwait
movs
outs
dec
cli
inc
push
rol
dec
rol
inc
jbe
cmp
out
mov
loop
sbb
(bad)
ins
pop
repz
leave
and
in
xor
test
jb
iret
jbe
pusha
popf
ret
cmc
outs
icebp
inc
and
mov
add
test
ret
test
fsub
std
dec
iret
aam
daa
cmp
inc
mov
xchg
jno
cmp
data16
and
xor
cmps
cmp
(bad)
dec
or
jle
dec
adc
rol
lock
mov
push
mov
stos
sbb
aam
ins
mov
push
cdq
(bad)
(bad)
out
jb
loopne
pop
aas
add
xor
inc
sbb
pop
push
in
loop
push
(bad)
aad
repnz
cmps
mov
mov
lea
inc
push
jle
imul
ror
push
enter
test
imul
or
lods
loope
adc
dec
jmp
inc
jo
sbb
shr
cmps
dec
scas
pop
(bad)
sbb
rcl
and
jecxz
xchg
(bad)
jmp
sbb
rcl
and
jp
dec
jno
mov
jb
xchg
in
leave
mov
leave
sub
loopne
push
xchg
cmp
fdivr
test
adc
dec
scas
sub
imul
mov
cmc
mov
(bad)
sub
xchg
out
in
jne
daa
in
mov
js
mov
inc
cmps
outs
fldenv
adc
ins
add
xchg
movs
aaa
aad
sbb
push
mov
xor
and
mov
sar
(bad)
pop
dec
retf
ret
sub
sar
jbe
push
mov
test
std
clc
aaa
jg
mov
imul
jns
xor
movs
movs
jg
data16
(bad)
xor
push
push
std
inc
jns
sar
lahf
jnp
les
stos
stos
cmps
pop
mov
iret
dec
push
sub
xor
in
pop
and
addr16
shr
jmp
and
gs
in
cmp
xchg
push
lock
into
sub
bound
jo
jmp
mov
mov
sub
inc
mov
jo
xor
push
inc
cli
sbb
push
jle
and
test
(bad)
jmp
data16
in
and
sbb
mov
mov
cld
and
retf
dec
sti
test
daa
loopne
imul
cmp
das
std
and
push
retf
test
daa
xor
add
cmc
cmp
paddsb
cmp
cmp
mov
fstp
push
mov
addr16
add
loope
cmps
mov
dec
mov
fdivp
fistp
dec
fnsave
dec
dec
cmp
xchg
and
fisub
cmp
addr16
dec
out
cli
push
bnd
pop
stc
add
les
out
add
loop
bound
data16
mov
push
mov
mov
cli
scas
out
in
xchg
movs
and
imul
rep
repz
xor
jb
cmc
push
rol
daa
jp
xchg
ds
out
repnz
pushf
sbb
hlt
inc
mov
inc
cmps
mov
or
sub
mov
stos
int
xor
push
out
push
push
lahf
mov
outs
cmps
push
les
adc
mov
cmp
xor
cdq
or
shl
sub
and
leave
in
stos
je
cmp
cmp
jnp
push
dec
(bad)
stos
and
es
jns
mov
push
pop
jmp
mov
(bad)
popa
aad
fsubr
in
pop
ret
cdq
xchg
fild
repz
mov
or
mov
jl
ret
aas
ficomp
xchg
and
cmp
in
arpl
cmc
jno
dec
shl
jns
push
(bad)
adc
test
repz
pop
and
mov
ror
dec
les
cmps
push
mov
pop
lods
call
cmp
sbb
inc
dec
and
shl
lods
inc
pop
in
cdq
jne
mov
out
sub
add
and
repnz
and
ja
pop
push
or
stc
(bad)
xchg
adc
(bad)
adc
xchg
push
das
into
sbb
popf
mov
fst
pop
cs
shl
jp
ja
fimul
stc
mov
sbb
push
sbb
pop
push
pop
lock
in
mov
popa
sub
jmp
scas
lods
jnp
mov
push
inc
push
and
jle
pop
xlat
cdq
fst
add
aad
xchg
outs
test
rol
inc
mov
push
sub
les
daa
sbb
mov
scas
push
mov
pushf
mov
pcmpeqw
sqrtps
movs
add
fisubr
dec
aas
fdiv
scas
xchg
or
dec
out
mov
ss
mov
mov
loop
xchg
mov
mov
mov
ss
lods
test
gs
inc
lock
sahf
jbe
xchg
(bad)
fwait
add
repz
add
clc
pop
sub
ror
fdivr
mov
loop
mov
imul
stos
xchg
add
stos
push
cmp
dec
shl
nop
mov
jns
out
ret
popf
push
mov
push
xchg
jg
push
mov
mov
popf
or
pusha
nop
test
xor
mov
fimul
and
push
loope
jns
loop
fstp
cmp
sbb
mov
and
ret
sar
in
pop
retf
ins
add
sar
fdiv
push
mov
sub
mov
mov
xor
hlt
cmps
scas
fwait
cmps
xlat
int
loopne
sbb
loop
mov
cmp
xchg
inc
popa
xor
jns
sub
lahf
mov
call
xchg
nop
cmp
cwde
js
mov
neg
fisub
aas
mov
pop
sbb
jbe
bnd
dec
lea
in
pop
pop
fidiv
xchg
cs
sbb
lods
lahf
aas
xchg
xor
sahf
dec
and
add
sti
adc
push
adc
lock
mov
cmp
and
(bad)
jnp
inc
js
or
repz
or
cli
cmovno
outs
idiv
jb
jb
cmp
dec
rcl
cli
dec
pop
jbe
cdq
adc
mov
nop
int3
xor
shl
jmp
xchg
sub
addr16
xchg
xchg
mov
push
cmp
lods
enter
jecxz
in
retf
loopne
ja
cdq
cmp
push
das
mov
sbb
mov
push
mov
mov
jns
xor
mov
sbb
mov
not
or
imul
lods
pushf
mov
(bad)
loope
repz
fiadd
pop
push
into
pop
fdivr
xchg
repz
xor
pop
jp
dec
jg
sub
push
aad
shl
jge
in
mov
adc
xchg
aad
sti
add
test
dec
ja
jp
sub
or
pop
in
scas
in
scas
jl
cli
out
aad
aas
lea
mov
in
cmp
mov
jb
mov
mov
out
mov
leave
movs
lods
scas
push
lds
fist
ins
stos
pop
in
cmp
add
add
dec
adc
add
push
sti
adc
adc
pop
pop
push
retf
ret
bound
add
jns
lea
popf
pusha
aam
imul
cmc
loopne
sub
dec
repnz
daa
enter
dec
iret
cmc
call
nop
addr16
xchg
outs
test
push
aam
xchg
jnp
icebp
sbb
mov
and
sub
jle
test
xor
ja
stc
add
outs
pop
(bad)
fsub
fidivr
rol
fcomp
imul
pop
mov
mov
enter
fiadd
cli
rol
mov
out
pop
lds
stos
repz
xor
mov
dec
test
dec
imul
daa
xlat
leave
loopne
adc
push
dec
fs
mov
retf
(bad)
jmp
sub
cmps
(bad)
(bad)
fstp
scas
call
push
jbe
test
xchg
and
mov
jmp
push
jne
into
mov
inc
in
sbb
cwde
sub
mov
add
inc
xor
je
mov
imul
and
ins
mov
mov
jp
sub
stos
cld
(bad)
push
mov
stc
pop
add
mov
xchg
inc
or
adc
pusha
xchg
ret
mov
inc
(bad)
cmps
arpl
mov
mov
mov
jle
push
xchg
push
fdivp
fsubrp
daa
cmp
push
pop
push
or
xor
xor
mov
cmp
push
retf
jl
data16
cdq
sbb
cdq
inc
sub
xorps
jne
rcr
test
adc
adc
not
sub
jge
or
and
pop
jge
mov
jb
cmp
mov
(bad)
movs
clc
imul
outs
add
lods
cmc
inc
rcr
dec
aam
rcr
out
push
es
push
out
xchg
lea
cmp
push
shl
inc
stc
dec
adc
pop
pop
mov
mov
mov
popf
sbb
retf
hlt
mov
and
adc
arpl
dec
lods
mov
jle
jp
stc
pushf
jg
pushf
push
cmp
(bad)
lods
std
call
leave
les
shl
jmp
push
leave
mov
mov
add
shl
push
adc
cmp
cmps
inc
out
outs
xor
pop
or
lea
pop
mov
ins
push
xor
inc
and
ret
retf
mov
in
imul
mov
fidivr
mov
and
push
jmp
jp
xchg
inc
sti
inc
dec
xor
test
mov
mov
call
cli
pop
aad
jno
call
or
scas
push
mov
mov
movs
les
hlt
pop
or
sbb
add
dec
mov
push
xor
mov
jns
jne
rcr
test
mov
into
cwde
and
leave
out
ds
xlat
jae
cdq
cmp
jp
rcl
and
mov
jecxz
daa
xor
repz
sub
or
pusha
rol
les
je
jo
data16
jmp
test
retf
xchg
fnstsw
xlat
push
xchg
jge
add
inc
add
es
movs
add
or
lock
iret
mov
or
cmp
dec
popa
jmp
shl
cmp
mov
test
inc
dec
js
test
push
mov
cmp
or
imul
pop
mov
pushf
and
test
(bad)
pop
sbb
pop
daa
xlat
cmps
mov
mov
(bad)
movs
in
add
loop
js
les
dec
leave
sub
push
loope
inc
loop
push
mov
test
dec
and
jbe
add
imul
out
add
sub
repnz
rol
(bad)
jecxz
jo
and
repz
cmp
inc
xchg
or
stos
cwde
mov
fwait
pop
das
scas
outs
xor
push
in
inc
cld
mov
inc
pushf
hlt
push
cmp
in
add
or
dec
pop
cmps
add
pop
hlt
mov
sar
sub
outs
dec
clc
sbb
or
jne
lahf
arpl
mov
jecxz
and
sbb
mov
mov
jecxz
and
hlt
pop
mov
into
in
mov
mov
jne
je
mov
mov
mov
in
bound
popf
xor
push
ins
pusha
add
fwait
ja
jno
(bad)
push
popa
xchg
into
dec
sbb
pop
hlt
fldcw
pop
clc
retf
sub
sbb
test
test
jecxz
mov
(bad)
and
jmp
xor
mov
cli
push
test
mov
jge
lods
js
int
in
mov
gs
pop
into
add
movs
pop
inc
aaa
mov
(bad)
mov
and
inc
neg
sbb
mov
or
jo
push
fsubr
pushw
scas
xor
out
inc
mov
add
fistp
inc
pop
xor
mov
pusha
(bad)
div
mov
mov
repz
jge
retf
adc
sbb
sbb
iret
bound
ret
or
xor
push
scas
adc
call
pushf
bound
and
or
imul
fdivr
cld
jo
push
scas
xchg
jno
mov
mov
push
mov
jae
jl
ja
dec
or
fadd
xor
out
pop
out
mov
mov
adc
std
int3
sub
cmps
dec
pop
jmp
pop
sbb
dec
jb
mov
mov
adc
adc
xchg
jbe
loopne
fadd
xchg
jmp
ja
jg
pop
out
(bad)
ins
or
inc
paddw
pop
xor
enter
fcmovbe
repnz
jmp
sbb
mov
xchg
or
dec
js
cwde
and
ja
jae
cmp
ins
in
pop
lds
in
dec
mov
mov
test
mov
xchg
mov
sti
sbb
aaa
scas
leave
inc
or
test
lea
rol
ins
dec
xor
sti
aas
dec
dec
nop
mov
sti
mov
mov
sar
mov
dec
(bad)
aam
aas
scas
sub
ds
push
nop
xchg
cmps
test
ss
and
shl
sub
into
sub
shl
into
ins
ds
xchg
adc
cmp
inc
add
or
frstor
aam
push
cmc
or
bound
mov
add
mov
cmps
add
ins
pop
cwde
jge
into
and
xchg
enter
retf
sub
push
cmp
xchg
popa
mov
dec
mov
(bad)
fisttp
std
bound
in
cmps
cwde
fs
adc
sbb
scas
mov
adc
jle
mov
sub
inc
xchg
iret
repnz
iret
add
icebp
popa
loope
fdiv
cmp
bound
mov
test
mov
sub
mov
mov
push
or
sub
and
inc
fstp
sub
scas
pop
bound
pop
ins
data16
pop
inc
cwde
pop
or
add
and
(bad)
popf
sub
(bad)
xchg
pop
mov
push
gs
cli
js
mov
out
mov
sbb
outs
cwde
cmp
call
hlt
sub
xor
and
mov
scas
xchg
pop
(bad)
call
lds
mov
xchg
mov
outs
nop
stos
lods
push
fwait
and
xchg
add
add
mov
xor
aaa
loop
pop
dec
pop
int
ins
lods
es
inc
fidivr
dec
cwde
popa
pop
sbb
sub
shl
call
pushf
div
xchg
out
lods
jnp
inc
add
lods
dec
mov
(bad)
fld
loope
das
inc
nop
aad
mov
xchg
sbb
jae
sahf
repnz
or
jle
pop
mov
sbb
push
sub
out
hlt
add
sub
ja
push
test
ss
aam
and
rol
push
lock
xchg
les
push
mov
sub
fstp
push
add
test
jle
call
vmwrite
loopne
rcr
(bad)
out
dec
fild
rol
scas
jbe
sahf
jnp
cld
test
test
loop
and
ds
cmp
add
(bad)
cmp
std
call
and
sub
pop
adc
jb
xlat
xchg
and
xor
lods
push
adc
push
xchg
sti
leave
inc
dec
rcl
or
arpl
push
popa
sub
xchg
out
neg
inc
es
int3
test
movs
jmp
push
scas
cmps
(bad)
push
out
and
enter
movs
aas
dec
add
mov
fst
pop
ins
jg
jo
lods
xchg
add
loop
(bad)
ja
xor
dec
ss
sbb
dec
push
ror
jbe
loop
iret
adc
dec
cmps
les
xor
popa
enter
and
xlat
out
mov
mov
arpl
mov
and
fmul
or
repz
cmc
clc
pop
jae
sbb
ret
sbb
xchg
pop
cmp
dec
mov
jge
mov
imul
lock
dec
add
or
outs
leave
retf
add
sbb
mov
(bad)
out
xchg
arpl
mov
scas
sahf
push
sub
imul
jl
stos
cld
ins
push
sbb
jo
jnp
imul
popf
xchg
(bad)
scas
fimul
xor
mov
shl
outs
sti
mov
jl
jmp
hlt
mov
dec
dec
xchg
pop
das
mov
push
cli
dec
xor
mov
lock
je
repnz
push
push
or
adc
iret
and
xor
cmp
(bad)
stos
mov
pushf
add
and
das
add
jo
addr16
pop
xor
aas
std
stos
dec
in
(bad)
cmc
call
movs
aas
js
mov
daa
jne
popf
push
push
xchg
dec
inc
ret
std
mov
in
nop
xor
in
fwait
repz
test
stc
jmp
shl
xchg
movs
not
inc
and
add
mov
jmp
bound
daa
cmp
outs
mov
gs
xchg
aaa
aam
mov
mov
adc
mov
loopne
imul
mov
ds
pop
dec
sub
cmc
push
cmp
mov
rol
push
fnstsw
jmp
outs
hlt
cmp
hlt
sbb
mov
mov
and
(bad)
gs
(bad)
mov
sub
std
cmp
outs
mov
pop
jmp
and
sub
out
mov
and
xlat
and
cld
adc
ficom
test
xchg
push
jo
jbe
push
test
div
or
push
and
shl
shl
int3
pop
cmp
mov
xor
imul
test
fdivr
jo
outs
sub
mov
loop
je
add
xchg
cwde
mov
mov
pop
lods
call
out
pop
add
jae
gs
and
cmc
(bad)
adc
cmp
mov
push
(bad)
mov
xor
xor
mov
xchg
mov
imul
enter
mov
push
xchg
test
in
pop
ins
or
repz
fstp
adc
and
mov
or
lds
jbe
shr
push
test
or
xchg
lods
pop
lahf
pop
loopne
or
retf
pop
fbld
test
pop
sahf
push
xchg
pop
sahf
xor
or
xor
in
lahf
bound
pop
(bad)
adc
xchg
shl
xor
stos
cwde
addr16
loop
jle
xchg
sbb
and
arpl
add
daa
cmp
inc
ret
fwait
popa
pop
(bad)
jge
and
jecxz
das
adc
pop
jae
pop
mov
xlat
jmp
inc
jecxz
ins
lds
xchg
mov
mov
not
cmc
ss
jmp
hlt
ficomp
xchg
add
cld
mov
out
lods
pmuludq
mov
fcomip
sti
xchg
sub
stc
loopne
addr16
pop
loop
fst
push
lea
pop
cmp
mov
iret
retf
retf
jg
jle
jmp
daa
call
push
sti
ficom
hlt
mov
pop
int3
out
sbb
movs
mov
sub
or
mov
pop
jno
pop
jmp
and
nop
daa
sbb
ror
pop
pop
inc
sbb
out
aaa
push
ds
cmps
and
iret
das
test
movs
movs
fidivr
jl
mov
adc
mov
or
scas
inc
std
mov
scas
xor
std
mov
jge
sbb
push
gs
inc
mov
fadd
or
mov
call
rcr
cmps
add
cli
jle
retf
scas
jo
sbb
sbb
out
hlt
xor
mov
sets
pop
jno
mov
retf
std
sti
aam
rcr
xlat
das
xor
mov
inc
adc
call
push
outs
mov
inc
(bad)
cmps
jle
pop
call
and
cdq
pop
pop
fcom
cmps
jmp
add
adc
cdq
xchg
pusha
ret
fidiv
js
pushf
inc
ret
loop
add
cmp
or
sub
dec
das
icebp
jns
lea
cmp
xchg
(bad)
xlat
out
test
cmps
sbb
dec
repz
out
cmc
mov
and
mov
dec
cmp
scas
xchg
outs
clc
dec
fwait
(bad)
test
mov
punpckhdq
push
add
cwde
jo
mov
bound
xchg
cmp
cmps
pop
aaa
movs
retf
xor
push
inc
out
push
rcl
mov
inc
push
mov
cmp
repnz
test
(bad)
shr
mov
sub
xchg
sti
or
fs
jecxz
add
or
push
mov
popf
jle
shl
ins
sub
leave
xchg
mov
jle
and
pop
xchg
xchg
adc
movs
ja
ja
cmps
repz
jl
(bad)
or
mov
adc
jg
int
mov
(bad)
sub
jl
aas
repnz
sbb
gs
addr16
sub
cmps
sub
jno
adc
sbb
mov
mov
daa
int
xor
fdiv
jnp
mov
xor
pop
xchg
mov
jl
dec
mov
aaa
push
pop
dec
iret
lock
sbb
add
stos
xchg
lds
lea
sti
mov
push
je
xor
mov
mov
test
sahf
ror
(bad)
dec
dec
mov
in
sub
jae
sbb
cs
jns
sbb
in
outs
cwde
mov
sahf
push
cmp
test
pop
sub
or
jmp
sbb
and
jns
cld
ret
xor
ins
sbb
clc
sub
(bad)
or
enter
cdq
in
mov
sar
test
mov
add
sar
fwait
inc
sub
das
add
in
xor
mov
outs
ss
pop
add
aam
out
ins
cmp
inc
js
jp
xchg
cmps
add
push
or
out
leave
dec
sbb
cmp
in
mov
xor
rol
xchg
push
inc
repnz
sub
mov
lock
data16
jnp
or
js
sahf
xchg
cmp
push
lods
jae
add
add
pop
not
nop
xor
xlat
out
sbb
xchg
pop
jbe
lea
jne
imul
imul
xchg
adc
mov
test
jbe
push
mov
pop
in
mov
cmp
xlat
xor
loop
inc
not
hlt
sub
fild
cli
loop
push
js
xchg
add
lea
stos
fsub
rcl
ja
out
adc
jns
xchg
xchg
mov
loopne
xor
add
int3
mov
jmp
or
pop
ins
mov
dec
jnp
and
mov
mov
cmp
out
cmp
or
fmul
and
dec
fcmovbe
xor
xchg
mov
cmp
popf
mov
test
(bad)
popf
dec
sahf
(bad)
call
fld
sub
push
loop
or
retf
xor
mov
sbb
inc
rcl
arpl
(bad)
out
mov
(bad)
fisub
je
daa
shl
loope
jb
sub
loope
mov
in
xlat
inc
add
cwde
pushf
jo
fwait
pop
push
neg
sub
enter
test
sub
imul
pop
stos
push
dec
into
lods
mov
jmp
sub
popf
cmp
hlt
push
cli
mov
mov
cmc
scas
faddp
dec
movs
sahf
scas
lea
aad
and
cwde
out
or
test
pop
sbb
bnd
inc
jns
cwde
xchg
vmulpd
aam
repnz
add
add
ret
or
sub
jno
jns
jns
xchg
mov
fsubr
xchg
adc
xor
repz
mov
mov
jb
mov
and
add
or
sub
mov
push
and
mov
sub
xlat
ins
repnz
xchg
push
xor
int
xchg
imul
popf
gs
jnp
sti
cmp
call
(bad)
retf
fwait
mov
inc
cwde
iret
sub
xchg
lock
mov
mov
retf
inc
pop
or
jae
xor
mov
mov
enter
jge
sar
adc
pop
mov
fs
sub
loope
pop
add
mov
jmp
fstp
ja
fcomi
mov
outs
outs
or
frstor
jl
icebp
jb
iret
nop
aam
mov
enter
inc
add
mov
jmp
push
pop
xchg
inc
add
lock
xchg
mov
mov
movs
pop
mov
xchg
scas
sahf
fcomi
push
(bad)
push
xlat
and
add
outs
loopne
sbb
and
hlt
shl
jg
mov
cmp
jo
jns
push
and
pop
push
and
scas
mov
mov
imul
idiv
test
cmp
sbb
pop
cmp
dec
mov
push
jb
inc
xchg
scas
inc
iret
mov
ret
mov
aam
lods
shl
pop
movs
cwde
mov
mov
xchg
icebp
pushf
bound
ror
les
pushf
leave
dec
and
jae
aas
mov
push
cmps
xor
mov
add
cmp
xor
push
retf
repz
ins
(bad)
cmps
cmps
inc
pusha
int
mov
xchg
dec
(bad)
adc
jno
pop
test
push
ja
pushf
push
mov
cmp
or
mov
cmps
je
dec
or
es
push
(bad)
pusha
ror
jle
pop
ds
outs
enter
not
sub
cmp
xchg
pop
mov
(bad)
pop
ffreep
bound
mov
ins
pop
cwde
stc
xor
sbb
add
les
mov
mov
in
mov
fimul
test
daa
inc
fmul
sbb
mov
add
jp
xchg
mov
cdq
cwde
inc
mov
xor
call
pop
xchg
rol
fwait
dec
mov
ret
sti
mov
hlt
stc
xchg
movs
mov
scas
ins
add
sahf
dec
sti
sti
xlat
call
loopne
leave
addr16
jg
pusha
loopne
mov
aaa
test
cmp
push
movs
(bad)
cmp
daa
ins
mov
pop
push
jns
scas
jle
pop
xor
loopne
imul
loop
in
mov
inc
inc
ins
xchg
mov
jl
retf
push
mov
movs
mov
outs
dec
xor
dec
jb
xchg
and
inc
dec
and
icebp
outs
xchg
call
mov
arpl
hlt
dec
mov
js
lods
xchg
pop
imul
ja
sub
outs
pop
push
lods
jmp
test
pop
popf
(bad)
xlat
add
and
(bad)
or
xor
push
call
add
cmc
push
sub
retf
push
and
inc
jnp
jbe
je
cmp
mov
nop
das
ins
jge
into
add
stos
pop
loope
mov
dec
pop
inc
push
xor
scas
iret
sbb
cmp
icebp
mov
dec
pop
mov
aam
cs
in
int3
push
bound
cs
lea
push
push
rsm
repz
loope
or
(bad)
out
push
call
cmp
bound
sub
jo
jbe
dec
xor
sbb
mov
loopne
retf
sub
ror
dec
cmps
push
ret
loope
cld
aad
jo
add
push
cmp
and
ror
or
mov
xor
test
mov
mul
mov
inc
addr16
stos
dec
add
pop
sub
sti
jns
mov
add
cmp
xor
xchg
or
sub
hlt
mov
addr16
pop
hlt
sar
cdq
mov
fsubr
pop
ror
repz
jl
xchg
stc
mov
or
mov
jmp
push
(bad)
retf
push
xor
rcr
ss
scas
push
ins
cmp
add
adc
sbb
in
add
call
fisubr
dec
adc
not
ret
inc
mov
xchg
cmps
mov
lds
adc
lock
mov
cdq
mov
test
aam
out
fcomp
call
repz
icebp
dec
sub
adc
or
scas
jl
add
std
ins
hlt
jecxz
or
adc
pop
daa
inc
out
sub
(bad)
or
and
push
(bad)
sub
sub
dec
fucomi
movs
dec
sbb
nop
or
es
xchg
outs
jnp
pusha
xchg
out
xchg
in
ret
xchg
lock
outs
and
sub
pop
je
sar
mov
lock
ss
add
(bad)
push
lods
fisttp
out
fnstcw
dec
xor
sub
test
adc
ret
xor
pop
mov
xor
ret
inc
jb
sti
fbstp
movs
mov
jmp
mov
xchg
cmps
ds
cmc
loop
(bad)
or
mov
ja
and
push
dec
mov
pop
ret
cwde
adc
data16
popa
lds
cmp
in
mov
je
xchg
mov
mov
xor
out
or
in
xchg
lods
sub
mov
mov
xchg
in
push
dec
cmp
cs
clc
outs
and
mov
push
stos
cmp
in
and
add
stos
in
xor
xchg
inc
cdq
mov
sub
jbe
mov
out
sub
xchg
ret
mov
mov
loope
jne
mov
out
div
dec
cmp
cwde
jne
std
or
pop
pop
shl
(bad)
pushf
mov
inc
inc
ss
std
call
add
call
call
aaa
mov
xor
jecxz
stc
imul
sub
cmps
loopne
inc
jnp
ja
rol
imul
push
sbb
aaa
ins
xor
bound
dec
scas
ja
mov
stc
lahf
pop
or
mov
ss
rcl
int
mov
or
push
call
adc
imul
dec
dec
xchg
loop
lahf
push
sbb
and
es
jns
js
push
daa
and
pop
xor
outs
test
sub
jnp
mov
js
dec
adc
or
and
stc
xchg
inc
cmp
or
mov
jae
sti
xchg
daa
inc
mov
stos
gs
pop
mov
xchg
ds
mov
movs
jno
outs
imul
mov
daa
popa
out
dec
mov
les
fst
dec
jbe
lahf
or
mov
arpl
mov
cmp
push
fisttp
pop
xor
das
lock
or
test
pop
adc
frstor
shl
push
imul
(bad)
shl
cmp
(bad)
shl
repnz
jo
neg
add
das
mov
cmp
inc
imul
loop
mov
clc
cs
cs
in
push
push
(bad)
sub
jno
xchg
std
mov
bound
cld
sbb
dec
push
jno
and
retf
sub
into
mov
ss
add
xor
adc
icebp
cmp
push
jbe
pop
sub
lea
dec
jbe
cs
jb
bound
push
xchg
aam
les
mov
sub
retf
pop
cmp
jmp
push
push
addr16
std
push
push
mov
sar
adc
mov
dec
jbe
push
int
loopne
into
cwde
adc
mov
mov
xor
retf
jge
loopne
push
je
je
add
pop
sbb
xchg
pop
aaa
jl
test
jp
cmp
stc
mov
pop
jbe
inc
test
fldpi
xchg
repnz
fldenv
mov
mov
popa
(bad)
and
jmp
pop
popa
icebp
adc
(bad)
aas
cmc
push
outs
inc
enter
jg
sub
shr
(bad)
mov
aam
or
into
jmp
jb
icebp
and
ret
clc
mov
lods
iret
imul
clc
sub
push
sbb
icebp
jae
or
inc
fstp
jle
js
adc
push
xchg
mov
shl
mov
inc
clc
add
xchg
(bad)
add
les
hlt
add
pop
cs
movs
mov
sub
add
daa
jl
xchg
les
jne
jg
jp
out
ja
pop
fstp
xchg
pop
(bad)
gs
ret
jb
fwait
pop
imul
enter
push
inc
out
push
lock
sbb
pop
jnp
xchg
shl
xchg
mov
out
sbb
mov
fwait
add
push
inc
in
in
pop
push
arpl
ds
rol
cmp
sub
jnp
inc
pop
push
int
lds
bnd
inc
push
pcmpgtb
push
push
jmp
(bad)
in
mov
xchg
cs
xchg
in
loopne
sub
pushf
imul
aaa
and
cmp
iret
mov
rcl
adc
loope
call
pop
dec
mov
ins
(bad)
icebp
lods
adc
push
xor
je
sti
out
push
jp
popf
(bad)
shl
adc
lods
addr16
push
inc
mov
test
iret
jbe
imul
push
pop
or
jle
xchg
imul
lds
xor
jecxz
cmp
aam
aas
xor
xor
clc
inc
adc
retf
rcr
scas
or
jl
mov
movs
jnp
in
or
sbb
shl
sbb
pop
outs
test
int
loope
call
mov
mov
cmp
sti
push
sahf
loope
out
dec
xor
ins
ja
lods
aas
cmp
mov
jb
pop
cmc
adc
cdq
enter
push
out
mov
xchg
or
sbb
or
jle
pushf
movs
dec
add
cmp
mov
add
in
in
fisttp
dec
out
mov
movs
or
xchg
movs
ss
and
sub
pop
test
pop
mov
cmp
xlat
mov
iret
pop
rcr
into
arpl
loope
mov
in
ja
push
mov
inc
dec
aad
or
fsub
test
mov
dec
pusha
shr
iret
push
cmp
nop
mov
ja
adc
addr16
repz
xchg
int3
dec
dec
mov
push
or
xor
jnp
mov
repnz
das
lods
scas
jno
pop
dec
fld
in
ins
data16
jge
stc
xor
lds
inc
xchg
xchg
jecxz
push
lods
arpl
mov
sub
or
clc
clc
fldcw
mov
(bad)
and
dec
xor
ds
lods
enter
arpl
inc
mov
sbb
rcl
arpl
js
cmp
repnz
cmp
aas
mov
xor
lds
sbb
jmp
xor
test
cmp
mov
adc
jae
push
aam
into
sub
cmp
pop
add
xor
xchg
add
mov
(bad)
push
cmps
cmps
fist
dec
cld
adc
in
test
xchg
pop
out
adc
pop
popa
push
int
adc
xchg
fdivr
sbb
jnp
movs
mov
mov
sub
xchg
sbb
mov
sbb
loope
and
out
test
pop
cmp
pop
cmp
lock
aaa
mov
xor
push
aam
xchg
dec
sbb
cmp
shl
outs
leave
cwde
inc
std
add
loope
call
add
push
mov
stos
ret
call
jge
lock
jno
inc
test
mov
push
arpl
int
out
sbb
fdiv
add
add
test
cmp
bts
ficom
ficomp
mul
push
cmps
je
inc
retf
pop
jb
or
mov
cwde
stos
mov
sbb
inc
movs
jbe
shl
sti
ret
adc
xor
gs
mov
adc
out
fst
(bad)
jmp
mov
aam
dec
hlt
fcom
cmps
mov
jmp
pusha
(bad)
imul
in
lock
mov
lock
sub
(bad)
pop
imul
and
popa
lds
jbe
arpl
lahf
dec
aad
mov
sbb
xchg
lock
push
cmp
push
fild
mov
sbb
cmp
inc
jo
ja
add
add
cmps
test
test
lea
out
ins
out
(bad)
xor
les
test
aas
dec
dec
jb
out
or
xchg
nop
fmul
adc
pop
int3
pop
adc
lea
adc
pop
lods
addr16
lods
leave
loope
neg
out
xchg
jno
fs
and
dec
pop
out
dec
mov
shl
arpl
push
mov
mov
adc
call
jbe
jb
ins
out
clc
sub
enter
in
xchg
ins
out
mov
lea
add
mov
lods
inc
fstp
mov
push
retf
data16
ds
push
mov
out
rol
stc
clc
and
xchg
pop
sub
mov
inc
rol
pop
adc
(bad)
push
mov
stos
popf
mov
loopne
pop
cmp
and
dec
in
in
xlat
out
inc
rcl
(bad)
xchg
jno
movs
lahf
fisttp
adc
cmp
push
fbstp
js
inc
(bad)
jg
xor
loop
pop
loop
jge
je
enter
cdq
mov
mov
mov
pop
push
xchg
add
adc
jmp
cld
sub
idiv
pop
or
test
addr16
mov
(bad)
mov
ins
sub
xchg
inc
pusha
and
inc
adc
push
int
cmc
dec
mov
xchg
outs
movhps
inc
imul
inc
fs
push
and
lods
jne
mov
dec
fmul
jg
retf
push
cmps
out
sbb
out
nop
mov
mov
sti
test
and
sub
clc
je
dec
cmp
or
lock
and
test
and
jno
push
xchg
scas
int
mov
fs
retf
ja
mov
mov
scas
mov
ins
fs
ja
jge
aas
dec
and
lahf
pop
pop
xchg
test
sub
mov
mov
jns
mov
dec
inc
fimul
loopne
dec
cmp
loopne
fst
fnstcw
dec
push
mov
jl
fld
iret
(bad)
push
rcl
push
call
sbb
iret
gs
add
cmps
mov
bound
pop
(bad)
ret
(bad)
ror
lods
jg
sahf
int
sub
sbb
arpl
gs
inc
aad
cmc
xchg
ins
fstp
(bad)
mov
sti
push
ficomp
fnsave
jb
cmp
sub
jmp
jmp
jg
push
ja
repz
hlt
dec
fscale
mov
inc
aaa
or
pop
outs
mov
xor
xchg
push
sbb
sub
popa
dec
dec
dec
xchg
mov
pop
push
mov
jp
mov
mov
pop
daa
(bad)
arpl
jge
das
push
or
push
sbb
loopne
data16
pop
lea
xchg
mov
lods
mov
jne
mov
adc
call
or
data16
nop
push
mov
xor
enter
iret
mov
add
or
ins
push
add
fsub
aam
cld
or
lods
dec
adc
push
out
lock
xchg
jnp
repz
cmp
mov
push
xchg
adc
jns
pop
fsub
or
lock
dec
lahf
inc
sbb
rol
test
push
fild
(bad)
dec
xchg
add
lods
mov
mov
lock
mov
ret
ins
ins
push
xor
mov
mov
outs
mov
shr
jmp
pop
aam
imul
push
sub
and
clc
idiv
pop
cli
or
sub
out
outs
fimul
push
out
inc
jge
sbb
out
bound
jmp
leave
sbb
push
pop
(bad)
jge
push
xlat
gs
pop
dec
xor
cmp
out
sahf
icebp
mov
popa
movs
imul
push
dec
inc
rol
jge
jb
xchg
imul
jmp
jp
jnp
xchg
pushf
popa
and
push
inc
nop
cli
dec
and
xchg
push
mov
adc
push
fimul
inc
mov
cmc
in
inc
push
ins
nop
push
sbb
fwait
out
sub
test
jecxz
daa
das
mov
fld
popf
mov
and
repnz
fwait
stos
and
into
loopne
adc
aam
xchg
pop
popf
stos
xor
push
or
lods
mov
lea
int
cmp
(bad)
cmp
mov
out
mov
or
cli
dec
sbb
rcl
scas
lods
pop
inc
je
fnsave
push
ror
popa
mov
bnd
sub
call
inc
jle
out
inc
outs
shl
xchg
es
cmps
mov
es
popa
mov
fisub
mov
add
stos
dec
pop
pop
and
mov
leave
stos
nop
movs
in
inc
pushf
xchg
jae
adc
cmp
test
cld
push
int3
cdq
(bad)
push
sahf
ficom
sbb
adc
jle
ja
(bad)
div
cmp
push
iret
push
dec
scas
inc
jno
mov
dec
aad
data16
fild
lds
ret
xor
cmc
pop
xchg
mov
inc
cdq
lods
rol
movs
rcr
pop
test
mov
xor
les
outs
add
jb
dec
int3
push
cmp
test
aaa
out
xor
push
leave
inc
and
cmc
sub
pop
int3
xor
out
add
iret
repz
pushf
fst
loopne
loop
xor
(bad)
das
and
(bad)
cmp
pop
pcmpgtw
imul
xchg
mov
push
in
mov
cdq
inc
(bad)
sbb
push
mov
jp
add
rcl
aaa
push
je
ret
pop
cdq
sti
bound
inc
pop
sub
fist
mov
jl
cmp
jmp
sub
(bad)
sahf
fldenv
sti
test
in
hlt
sti
jl
imul
mov
pop
cmp
aaa
mov
call
iret
aam
mov
ror
sub
mov
jae
jo
dec
sub
cmps
mov
std
xchg
push
add
loope
dec
pop
push
pop
les
sbb
(bad)
push
xor
jmp
cmp
adc
xchg
nop
aaa
scas
jecxz
xor
fidivr
adc
cmps
pop
mov
or
dec
xchg
or
mov
xlat
in
bound
add
std
cdq
push
adc
mul
cmp
pop
cs
mov
jnp
push
xor
retf
xchg
inc
and
call
(bad)
lock
push
add
iret
out
int3
mov
test
jmp
std
jne
(bad)
into
jbe
cmp
popf
mov
xchg
dec
aaa
das
add
xchg
cld
stc
dec
adc
stos
repnz
dec
imul
jae
push
mov
cmps
cmps
ss
call
(bad)
jle
xchg
mov
and
adc
fisubr
adc
xchg
imul
lods
test
cmps
popf
inc
ja
cmp
data16
dec
lahf
leave
jle
addr16
adc
cmp
sbb
dec
cdq
lock
fbstp
mov
inc
add
xchg
jl
adc
or
cmps
fsubr
mov
mov
repz
pop
jnp
call
xor
adc
leave
jo
dec
pop
cmps
jae
dec
mov
dec
mov
xor
scas
mov
dec
xchg
idiv
jbe
mov
addr16
in
cs
mul
mov
mov
loope
jge
(bad)
adc
push
imul
ret
stc
mov
mov
je
and
xchg
lea
in
lahf
popf
std
inc
inc
add
xor
xchg
cmc
(bad)
mov
mov
scas
movs
or
xor
sar
inc
xor
aas
cmp
and
cli
xchg
mov
inc
ror
lock
out
std
(bad)
imul
stos
adc
push
xchg
cld
xor
pop
in
jo
clc
gs
aad
inc
or
jno
stc
ds
push
pop
or
cdq
jmp
or
mov
push
rol
pop
repz
and
imul
or
jbe
loop
add
fild
sub
push
or
mov
into
pop
js
shl
xor
xchg
repz
in
not
sub
in
sbb
adc
jle
cmp
xor
pop
xchg
mov
xor
and
mov
add
sub
aam
scas
cdq
loope
mov
dec
mov
dec
mov
mov
inc
push
jg
aad
adc
pop
pusha
mov
and
iret
ss
mul
add
sub
mov
and
mov
cld
mov
xor
(bad)
shl
cmp
or
sub
aam
and
pop
iret
push
jmp
int
dec
mov
into
cmp
fwait
mov
stos
mov
or
ds
scas
mov
mov
add
sub
jle
and
mov
fimul
and
pop
mov
fdivr
adc
jno
xor
push
cwde
mov
jge
jbe
movs
imul
data16
in
es
fs
or
pop
xor
xchg
push
int
dec
ja
push
fild
in
mov
and
pop
inc
test
mov
dec
mov
pop
mov
shr
imul
pop
xchg
cmp
loop
cli
sti
sub
daa
stos
inc
xchg
xchg
sbb
aas
push
rol
add
push
jge
idiv
xchg
jle
extrq
jns
sbb
daa
out
mov
jge
(bad)
pop
adc
repz
rcl
xlat
mov
ror
sti
mov
or
push
cmp
shr
(bad)
mov
jbe
retf
xlat
not
jno
stc
and
jp
(bad)
cmp
xchg
inc
outs
cmps
add
retf
fisttp
adc
ins
imul
ret
jmp
jg
sbb
sahf
inc
and
inc
repnz
inc
mov
mov
ret
out
sbb
fwait
mov
mov
cmp
push
popa
fnstcw
jo
mov
addr16
adc
mov
xor
pop
sub
mov
cmp
adc
mov
pop
ds
jmp
pop
sub
or
ret
and
mov
xchg
xor
add
icebp
mov
sbb
sub
lahf
push
add
(bad)
scas
sub
mov
outs
stc
lds
clc
mov
push
mov
push
jb
lds
data16
jmp
int
and
outs
sub
sub
ja
cmps
inc
test
mov
jb
sbb
dec
hlt
push
and
xchg
xchg
pop
sub
jmp
mov
xchg
stos
cmp
and
and
inc
imul
sub
repz
dec
adc
add
loope
int
in
std
lods
add
mov
out
jmp
inc
in
jbe
pushf
xchg
mov
fcmovbe
xor
or
fistp
xchg
mul
fs
mov
sar
mov
or
cmp
iret
retf
lods
pop
nop
push
cld
je
jle
lods
inc
mov
aaa
gs
inc
aaa
out
call
inc
dec
push
stos
pop
(bad)
loope
xchg
mov
push
sti
jp
iret
and
aaa
jne
mov
adc
pop
mov
adc
inc
mov
sti
cmp
cmps
jnp
or
gs
dec
loop
or
clc
xor
iret
lahf
call
(bad)
sub
loop
mov
jne
inc
pop
arpl
rcl
or
inc
jp
add
cmp
adc
jmp
test
mov
sbb
jge
or
icebp
nop
test
outs
cmp
js
mov
rcr
sbb
push
es
les
out
stc
dec
mov
adc
imul
lods
push
retf
cmps
and
ret
sar
or
fld
mov
cmc
cmp
in
hlt
cmps
fcomp
jne
add
dec
cmps
add
jnp
sub
repnz
add
push
int3
lea
jge
push
sbb
jae
mov
test
inc
sbb
(bad)
add
mov
dec
or
sbb
cdq
out
push
call
loopne
inc
mov
jbe
push
out
(bad)
xchg
sub
cdq
pop
mov
call
cmp
(bad)
push
or
mov
int
xchg
jo
jnp
icebp
out
test
in
and
ja
out
ss
sub
dec
dec
outs
in
push
hlt
(bad)
lahf
mov
jno
in
cli
and
jp
mov
inc
rcr
fwait
add
sub
je
jge
inc
sbb
push
loop
int3
jle
dec
movs
mov
jp
call
(bad)
(bad)
fnstsw
pop
repz
mov
out
sub
fcmovu
enter
pop
jg
push
dec
mov
test
pop
fnstenv
mov
sub
jnp
dec
shl
fld
or
mov
and
or
jnp
add
mov
sbb
mov
lds
imul
adc
pop
add
or
push
or
sbb
pop
nop
test
pmullw
leave
xor
nop
cmp
(bad)
std
icebp
loope
adc
scas
sub
jnp
inc
sbb
xlat
nop
lds
adc
stos
es
rcl
jns
push
sbb
push
mov
shl
retf
inc
rol
inc
fidivr
sbb
(bad)
lahf
push
rcl
fimul
xlat
mov
push
bound
sbb
mov
pop
sbb
xchg
inc
pop
out
aam
xchg
mov
sbb
push
aaa
mov
addr16
mov
fwait
inc
jl
add
mov
in
cmp
push
in
mov
outs
das
jb
pop
outs
lahf
mov
dec
aad
mov
pop
gs
push
add
in
repz
jne
int3
loop
icebp
xchg
test
out
js
sti
xchg
nop
mov
or
aad
ja
rcr
adc
pusha
inc
mov
mov
ins
push
es
cwde
pop
or
movs
les
mov
dec
xchg
mov
and
nop
sub
adc
(bad)
add
test
jnp
int3
div
inc
mov
gs
jl
mov
(bad)
ficomp
test
push
pop
adc
ins
pop
lock
push
sub
jmp
les
sbb
enter
int3
fistp
es
div
repnz
fwait
inc
add
stc
xor
ss
ficomp
(bad)
shl
inc
push
sar
out
fsub
sub
fld
mov
or
mov
jns
xor
int
xor
dec
add
add
call
jns
add
int
fdiv
mov
fidiv
xchg
in
and
and
inc
rol
xor
push
inc
dec
ss
add
ins
adc
bound
pop
in
add
sahf
sub
and
jge
and
lods
jp
sbb
fmul
sub
mov
mov
mov
mov
or
in
fsubr
mov
pop
or
inc
out
(bad)
push
add
repnz
(bad)
mov
pop
pop
call
aam
scas
cmps
cld
lods
test
div
fcmovb
outs
cmps
aaa
test
adc
cmp
dec
sub
push
in
fcom
pop
inc
fst
jns
retf
add
jecxz
repnz
cmp
mov
leave
adc
dec
jb
pop
dec
xchg
aad
mov
xor
pop
outs
out
fbstp
dec
xlat
icebp
jle
sbb
or
xchg
sub
bound
ds
mov
icebp
sbb
fidivr
or
mov
xchg
stos
dec
xor
cs
add
xchg
sub
push
xor
shl
xor
inc
adc
movs
imul
imul
push
lea
jmp
(bad)
mov
sub
icebp
xor
loop
std
or
pop
sbb
push
and
leave
bound
xchg
adc
push
jbe
xchg
xor
mov
sub
rcl
pop
sub
jl
xor
(bad)
push
leave
adc
repnz
mov
inc
movs
ins
(bad)
adc
add
test
and
xor
cmp
inc
inc
mov
inc
pop
enter
add
pop
mov
mov
leave
and
dec
sbb
fnsave
retf
movs
sbb
shl
ja
(bad)
adc
add
imul
xchg
adc
(bad)
scas
pop
stos
jno
jl
mov
cs
mov
inc
push
jne
out
pop
repz
out
in
pop
loop
cmps
movs
rcl
test
sub
sbb
jl
cs
cmp
dec
push
pusha
pop
push
jge
xor
sbb
arpl
mov
fistp
mov
dec
mov
cmp
pop
(bad)
push
cmps
sar
add
add
popa
mov
xchg
sub
pop
ds
in
fdiv
pop
stos
inc
pop
adc
jg
std
push
jo
dec
test
cmp
icebp
fdivr
or
push
rcr
xor
push
das
dec
mov
or
rcr
dec
repnz
scas
dec
and
jne
push
mov
or
loopne
outs
jp
jg
adc
shl
leave
mov
inc
adc
inc
dec
push
adc
or
jo
shl
add
inc
out
nop
pop
outs
outs
cwde
sbb
rcl
dec
add
cmps
popa
into
clc
lea
ins
not
adc
add
nop
dec
clc
stos
sahf
or
sahf
clc
xor
xor
sbb
mov
inc
mov
adc
lods
out
loope
sub
pop
mov
shr
repnz
sub
enter
sbb
in
pop
std
outs
shr
lock
sub
mov
je
repz
leave
in
stos
mov
cdq
mov
retf
(bad)
pop
stos
rol
xor
int
not
movs
fstp
cwde
test
or
adc
sbb
pop
xchg
movs
loop
dec
mov
scas
adc
movs
sbb
repz
rcr
ss
fsubr
push
icebp
cs
enter
xchg
(bad)
mov
xor
ins
out
(bad)
aam
and
idiv
mov
mov
in
cmps
mov
and
in
jo
add
jge
ficom
inc
(bad)
jg
dec
jecxz
jmp
shr
xlat
jne
pushf
jp
add
add
sub
add
jb
xor
and
jo
les
add
retf
xchg
cdq
jae
pop
adc
push
cwde
inc
xchg
and
aam
mov
mov
popf
xchg
sbb
clc
mov
nop
push
test
aad
loop
shr
icebp
inc
add
(bad)
fmul
loope
dec
jb
sbb
outs
stc
mov
(bad)
mov
aam
xor
jp
cmp
ret
addr16
xchg
sbb
jb
outs
pop
sub
je
fmul
jnp
sbb
push
or
and
add
jno
fstp
cld
addr16
(bad)
(bad)
adc
xchg
and
rcr
cmp
xchg
push
dec
test
aaa
mov
mov
iret
push
sub
movs
ds
sub
(bad)
mov
cmp
leave
fbld
sbb
out
daa
ror
jne
dec
pop
xor
pop
xor
mov
jnp
ja
pop
inc
fld
arpl
and
out
out
into
dec
mov
push
fmul
ret
sbb
bound
add
outs
inc
sub
mov
sar
in
loop
repz
jmp
inc
add
fwait
clc
ins
jl
xor
arpl
push
add
push
xor
add
pusha
mov
ror
out
jmp
sti
cmp
push
ss
push
fimul
je
call
pop
ret
or
daa
jmp
jmp
xor
mov
stos
scas
mov
imul
retf
mov
mov
pop
(bad)
or
cmps
pop
mov
xchg
adc
adc
pop
add
and
or
bound
push
loopne
sar
(bad)
or
sbb
in
jge
in
in
cmp
and
mov
cmp
rol
mov
outs
mov
retf
lods
add
daa
mov
pop
add
int
popa
mov
or
loop
jo
test
repz
xchg
das
xlat
rol
rcl
xchg
cdq
retf
adc
dec
mov
movs
out
jno
or
push
cmp
xchg
xchg
xor
lds
test
xor
inc
test
xor
out
lds
ret
loopne
inc
sbb
mov
pop
push
je
sahf
adc
mov
loope
mov
sbb
fimul
arpl
mov
fwait
mov
les
adc
out
div
repnz
dec
cs
fidiv
push
iret
jle
aaa
cmp
add
idiv
out
adc
xor
cmps
je
cs
fdivr
enter
icebp
push
cmps
sbb
adc
sbb
mov
push
stc
mov
jecxz
dec
fcom
push
push
dec
inc
or
pusha
aam
lahf
out
(bad)
mov
cld
je
pop
inc
inc
cmp
sbb
jnp
adc
call
mov
jo
out
mov
mov
sub
inc
test
xchg
mov
or
jl
or
lea
fmul
aad
cs
mov
hlt
sbb
inc
scas
push
and
push
xor
push
pop
and
in
neg
sub
inc
mov
popa
xchg
cmp
jl
jne
je
into
aad
shl
mov
pop
enter
mov
lds
movs
shl
mov
pop
nop
aad
int
call
and
mov
mov
push
jns
pop
xchg
pop
out
lods
jmp
popf
fwait
and
push
and
mov
mov
shr
dec
xchg
and
ror
aam
fimul
ins
dec
sub
icebp
xchg
mov
clc
cmps
push
jmp
repz
daa
test
mov
inc
in
ja
adc
jg
add
mov
scas
cmp
jbe
jl
in
fnstcw
lahf
sbb
pop
inc
in
out
add
bound
scas
push
inc
cmp
or
pop
sub
js
(bad)
mov
mov
hlt
and
dec
xlat
lock
dec
mov
mov
inc
addps
movs
mov
lds
mov
or
sub
data16
mov
sti
fisttp
sbb
leave
imul
inc
mov
dec
jg
movs
in
out
sub
retf
xchg
mov
fisub
mov
fst
stc
(bad)
ror
inc
and
call
add
push
push
mov
push
sbb
and
test
movs
(bad)
mov
das
mov
leave
imul
outs
and
std
sub
sbb
arpl
cdq
sub
cmc
mov
sub
cmp
adc
mov
arpl
xchg
leave
cmp
mov
sahf
outs
out
sbb
xor
(bad)
push
sub
sub
ja
sbb
cs
add
fild
outs
pop
xor
cmp
out
sti
and
fcmovnbe
pop
inc
mov
jle
lods
dec
(bad)
mov
popa
es
scas
mov
dec
stos
sub
sbb
pop
ret
jnp
icebp
iret
ss
popf
xor
cmp
fabs
pop
xor
les
neg
jae
mov
cli
jnp
jg
xchg
mov
cld
pop
test
xor
inc
clc
and
inc
push
push
push
sahf
call
push
lods
add
ds
test
pushf
dec
mov
stc
ja
mov
cmp
out
dec
sbb
daa
dec
ret
bound
aad
ds
and
rcr
jns
xchg
mov
adc
gs
ins
mov
mov
sub
pop
xchg
xchg
push
imul
jo
scas
fwait
inc
jno
ds
retf
sub
std
lock
clc
mov
jmp
fs
scas
adc
ja
int
jnp
xchg
jecxz
mov
aaa
pop
pop
adc
fwait
out
test
lods
pop
fldpi
fadd
pushf
hlt
into
cld
or
pop
jae
pop
mov
ret
or
inc
cmps
aam
repnz
(bad)
jmp
div
mov
mov
movs
imul
inc
mov
sub
pop
fidivr
push
adc
sub
arpl
mov
jb
test
jmp
inc
popw
sbb
and
mov
lock
popf
pop
dec
mov
mov
mov
cmc
sub
in
push
cmp
cld
(bad)
or
dec
in
xor
out
push
jmp
cld
add
dec
pop
or
lds
addr16
(bad)
dec
xchg
mov
cld
imul
mov
xchg
lods
cmp
mov
(bad)
mov
push
dec
call
hlt
or
mov
inc
and
sub
icebp
pop
adc
push
pop
cmp
xchg
nop
aaa
xor
mov
scas
je
int3
ret
in
add
pusha
mov
jne
fst
mov
jb
shl
inc
pop
jecxz
and
adc
outs
fmul
sbb
jne
clc
test
xchg
mov
pop
fstp
loop
cmc
sub
add
mov
ret
ucomiss
mov
adc
dec
lods
sub
pop
cmc
add
or
xchg
sbb
ret
dec
lds
nop
adc
outs
push
cdq
xchg
sbb
inc
or
sbb
and
pop
mov
xchg
xor
test
fisubr
arpl
push
lods
inc
nop
aaa
shl
in
ja
vcvtsd2si
cmc
jbe
retf
ret
fsubp
dec
push
dec
xor
push
fisubr
and
mov
and
shl
cdq
push
dec
fidivr
clc
sbb
xchg
cmp
xchg
retf
push
or
mov
call
sti
loopne
xor
mov
inc
mov
aas
mov
push
ficom
xchg
pusha
push
cmp
hlt
cld
loopne
(bad)
lods
lock
adc
(bad)
outs
sbb
jg
xchg
jmp
mov
sar
cmp
mov
push
loopne
rcr
sbb
pop
mov
xchg
mov
mov
inc
adc
gs
dec
popf
cmp
lods
mov
ds
dec
push
cmp
push
pop
daa
inc
(bad)
jbe
shr
ins
push
pop
lock
push
enter
ss
inc
inc
(bad)
add
mov
cli
icebp
movs
popa
stc
div
(bad)
jl
enter
imul
dec
jnp
pop
jecxz
push
mov
rol
clc
push
in
lock
add
test
scas
out
inc
or
mov
pop
jmp
push
mov
xor
jo
(bad)
sub
jcxz
mov
add
push
(bad)
jmp
stc
lahf
inc
push
ja
mov
jb
dec
ss
cmp
das
push
xchg
push
inc
mov
sub
xor
jbe
jae
dec
jecxz
xchg
push
xor
fist
mov
ds
lods
fldpi
xchg
out
leave
dec
or
push
loopne
mov
add
fld
dec
sbb
sbb
lods
fmulp
mov
inc
mov
pop
mov
cmp
jne
imul
ins
popa
jmp
fdecstp
xor
xor
shr
jae
repnz
jae
mov
add
mov
hlt
jle
xchg
xchg
add
or
cmps
rol
xchg
mov
aam
push
pushf
or
xchg
jge
scas
push
mov
addr16
ror
in
lock
cli
cmc
push
loop
test
and
(bad)
out
mov
add
std
sub
cmc
pop
mov
or
jae
ja
push
pop
or
nop
add
aam
pop
in
pop
lods
push
pop
ror
xor
xchg
mov
jp
popf
std
movs
(bad)
mov
inc
test
icebp
repz
xlat
retf
mov
jno
(bad)
and
es
sub
xor
popf
lods
xchg
ror
mov
or
push
mov
out
clc
shl
loop
test
and
mov
lods
push
mov
fnstcw
push
mov
mov
stc
jle
push
add
mov
adc
or
ins
dec
rcr
pop
push
adc
mov
or
push
mov
push
xor
retf
push
test
mov
dec
lea
sbb
nop
xor
sbb
clc
daa
icebp
sets
(bad)
jl
xor
dec
mov
and
pop
xlat
add
test
rcl
xchg
out
inc
push
lahf
pop
test
cmps
iret
ins
or
jne
arpl
mov
(bad)
arpl
sub
push
inc
jge
dec
inc
jp
jbe
into
in
clc
inc
scas
out
clc
push
jae
mov
movs
sub
jecxz
and
lea
loopne
(bad)
movs
inc
mov
inc
icebp
xlat
jge
icebp
popf
jmp
adc
xor
or
sbb
xchg
aaa
neg
cdq
or
sbb
lods
mov
int
and
xor
(bad)
adc
jno
mov
pop
push
lock
mov
push
enter
sahf
push
pop
fwait
xor
in
pop
pop
cs
mov
inc
mov
pushf
mov
jo
sub
sar
movs
dec
xor
lds
enter
into
dec
push
loopne
and
inc
outs
fsubrp
xchg
adc
push
mov
call
fcmovnbe
mov
fidiv
call
xchg
jno
ret
pop
dec
adc
jmp
mov
xor
into
sbb
call
fstp
ret
fbld
loop
sub
pop
out
retf
mov
jg
inc
add
fcom
out
shl
sbb
(bad)
mov
outs
push
js
mov
mov
lea
or
lahf
push
lods
lods
cmp
dec
nop
pop
inc
xchg
add
pop
or
cmp
sar
inc
test
cmc
fdivrp
mov
out
cld
rcl
rol
or
shr
push
and
xchg
iret
push
sbb
inc
mov
call
js
mov
arpl
pop
scas
(bad)
and
retf
stc
adc
outs
dec
jle
mov
sbb
sub
pop
retf
push
in
jp
movs
ins
popa
dec
inc
cld
push
test
xor
mov
cmp
push
popa
shl
sbb
push
aam
leave
or
inc
call
sbb
or
add
lahf
jb
(bad)
jb
jns
adc
ret
test
xor
popa
rcr
push
jle
jbe
xor
mov
jno
scas
mov
fnstenv
js
jbe
lahf
jno
popa
cmp
push
fisttp
(bad)
into
mov
test
and
add
mov
sub
pop
ror
pop
sbb
mov
pmullw
clc
cmp
sbb
leave
dec
int3
push
(bad)
sub
jle
dec
rcl
pusha
popa
and
push
mov
inc
lods
xchg
lods
pop
pushf
popf
(bad)
jne
(bad)
imul
out
push
fdivr
mov
(bad)
cdq
pop
jnp
xchg
mov
jnp
mov
mov
(bad)
jnp
je
rcr
sbb
or
mov
out
int3
jge
jo
cs
loop
fcom
pop
xchg
fist
loopne
xchg
dec
movs
cmp
pop
and
cmp
aad
pop
mov
push
xor
popa
xor
imul
les
cld
adc
cdq
or
xor
es
(bad)
call
repnz
xchg
dec
fist
(bad)
jo
je
ins
(bad)
repz
(bad)
mov
div
add
loope
xchg
add
add
mov
test
push
retf
daa
xor
sbb
cmp
sbb
cmp
push
xor
imul
retf
cmps
lds
push
clc
sti
push
daa
ror
cmc
jle
mov
xchg
xchg
loop
popf
jmp
pop
out
cld
loope
mov
imul
or
push
jmp
sub
in
push
mov
jbe
adc
dec
imul
pop
inc
jecxz
pop
fst
dec
lds
(bad)
jmp
ja
dec
mov
aaa
(bad)
ds
xor
fs
clc
sti
and
gs
retf
or
(bad)
out
sbb
or
mov
lea
mov
sbb
mov
int3
daa
call
cmc
cmps
in
xchg
outs
movs
xchg
cli
push
mov
out
test
stos
aaa
ret
or
jno
and
das
xchg
sbb
and
pushf
aas
push
xchg
out
movs
test
popf
movs
dec
push
scas
lea
retf
out
cmp
xchg
imul
loope
jns
es
xchg
cmp
popf
xchg
or
jle
shl
mov
adc
xor
ins
jb
mov
and
(bad)
push
sub
jecxz
arpl
pop
jb
cld
mov
iret
and
or
test
xor
mov
inc
inc
sub
cs
es
aam
sbb
arpl
or
ss
inc
mov
pop
rcr
(bad)
in
psllw
lods
xor
fmul
aaa
int
fild
jl
and
mul
jl
adc
dec
(bad)
and
and
adc
jp
dec
dec
cmp
scas
popaw
call
pop
aas
cmp
call
push
sub
aam
mov
retf
jl
cmp
cmp
in
or
add
inc
mov
mov
shl
(bad)
xchg
int
cmc
movs
pop
iret
mov
test
loop
stos
push
inc
(bad)
pop
cmc
adc
sahf
retf
sub
je
dec
sbb
add
pop
pop
movs
out
jle
push
or
adc
popa
sbb
out
lea
mov
test
out
push
cwde
js
xchg
mov
fadd
adc
cmp
jge
sbb
lods
sub
jge
rol
jne
adc
fcom
not
jae
mov
dec
not
test
dec
stos
out
xor
enter
push
fidivr
mov
pop
imul
jb
or
pop
aaa
mov
hlt
jle
or
cmp
inc
adc
sti
ja
dec
push
and
inc
mov
dec
loopne
gs
ds
bound
add
dec
add
mov
or
xchg
inc
adc
mov
push
pop
or
xchg
dec
fs
sub
sub
mov
sbb
inc
mov
pop
call
movntps
cmps
imul
and
sbb
ja
mov
dec
xchg
xor
xlat
mov
iret
not
xchg
into
scas
pop
jle
and
cwde
mov
loop
dec
and
pusha
imul
mov
dec
test
sbb
inc
add
call
scas
ror
jno
fild
sbb
ins
push
ds
test
lds
into
mov
(bad)
(bad)
in
hlt
pop
or
call
mulps
add
nop
(bad)
sbb
dec
stc
repz
aam
sub
(bad)
test
and
mov
add
test
jno
fdivp
mov
(bad)
push
into
inc
pop
sahf
pop
and
aas
ret
xchg
and
leave
and
inc
sahf
stc
inc
or
dec
(bad)
stc
xchg
xchg
jecxz
lock
add
mov
ins
or
xor
pop
add
inc
aam
mov
xchg
push
mov
ins
(bad)
xor
inc
cld
fsubr
mov
call
icebp
(bad)
cli
in
cmp
sub
jo
dec
mov
sbb
in
cld
jne
xor
xchg
inc
mov
or
call
imul
nop
in
(bad)
fmul
adc
sar
add
inc
icebp
mov
sbb
xor
pop
mov
mov
aam
test
cwde
ins
jmp
dec
cmps
mov
das
sahf
mov
into
mov
out
push
scas
jmp
xchg
fsub
cmp
and
xchg
sbb
adc
neg
aaa
xchg
mov
addr16
xchg
loop
xchg
les
sub
repz
or
shr
aaa
xchg
push
inc
fnstsw
nop
outs
jp
setne
and
push
lock
ins
adc
mov
inc
mov
test
mov
adc
inc
pop
adc
outs
sti
jne
loope
ret
enter
pusha
push
xchg
repnz
jg
das
push
int
sbb
call
jp
clc
dec
shl
cmp
xor
cdq
jmp
retf
pop
dec
mov
sbb
js
icebp
mov
sahf
add
push
fwait
js
loope
sub
rcr
shl
xchg
or
pop
cdq
push
rcr
push
fmul
fld
out
dec
into
pop
sub
add
in
jo
loope
adc
jmp
xchg
rol
adc
pop
and
outs
add
in
sbb
std
mov
or
mov
lea
add
enter
loopne
(bad)
cs
cmp
mov
movs
push
adc
pop
int
xchg
test
and
inc
cmp
es
mov
xchg
test
enter
daa
(bad)
mov
and
shl
xor
mov
sub
sti
and
pop
pusha
add
loopne
and
mov
lods
xor
add
out
cwde
push
outs
clc
inc
rcr
dec
jno
xor
int
stos
icebp
cmp
xchg
cmp
jp
out
fimul
out
js
and
pop
push
sub
jne
lods
neg
cs
xchg
js
cmp
sar
hlt
push
push
sbb
and
sbb
and
xor
push
lea
es
inc
imul
into
xchg
fld
frstor
sbb
int
gs
jne
inc
dec
inc
shl
adc
push
in
dec
imul
icebp
movntq
out
mov
sub
pop
jmp
jmp
add
push
dec
fst
shl
jmp
push
inc
fsub
ss
xchg
retf
cmp
pop
mov
jecxz
fisubr
dec
jl
jne
hlt
push
movs
mov
lock
in
adc
add
jl
stos
dec
jmp
and
mov
lock
(bad)
or
pop
add
push
icebp
test
and
or
fwait
adc
dec
fbld
mov
icebp
jnp
add
adc
cwde
aaa
push
daa
cmp
ins
pop
dec
add
and
cli
mov
mov
fwait
lahf
cmp
bound
pop
and
pop
xchg
sub
retf
xchg
mov
xor
ins
mov
pop
mov
cmp
pop
das
addr16
jp
daa
int
or
stc
je
fnsave
adc
pushf
dec
in
dec
inc
dec
add
push
or
loop
pop
dec
call
mov
jmp
ret
mov
movs
or
lahf
inc
pop
jo
add
cld
push
sbb
and
ds
(bad)
push
bound
mov
cmp
xchg
movs
int
pop
mov
retf
xor
ficom
sub
cmp
pop
out
ins
cmps
mov
mov
fcmove
xchg
mov
pop
hlt
add
and
cwde
mov
(bad)
mov
shr
xlat
add
mov
neg
mov
mov
stos
mov
jge
adc
repz
(bad)
in
dec
lock
fist
sub
out
dec
adc
push
xlat
inc
jbe
sbb
xor
jno
mov
daa
push
jae
mov
mov
bound
imul
inc
mov
icebp
add
out
and
mov
fbstp
mov
data16
data16
pop
sub
out
push
adc
push
add
fucom
sahf
int
add
pop
pop
xor
pop
dec
stos
cmp
mov
mov
enter
ret
hlt
or
mov
jge
mov
adc
pop
mov
lods
or
movs
in
adc
cmp
cmps
push
and
sbb
aad
pop
sbb
and
push
adc
add
ds
or
add
stos
mov
fsubp
and
lea
pop
pop
fldcw
sbb
inc
mov
lock
fadd
out
and
add
mov
lea
cmp
mov
or
fwait
sbb
icebp
mov
pop
pop
inc
xor
pop
std
pop
cmp
cmp
inc
cmp
in
dec
not
jle
dec
adc
dec
pop
push
xchg
cmova
idiv
sbb
aad
adc
sub
ja
stos
aad
push
mov
arpl
pop
enter
and
mov
cmp
dec
into
mov
fiadd
add
rcr
int3
jecxz
in
scas
pop
sahf
stc
imul
push
fsub
mov
(bad)
cmps
adc
fcomp
cmp
pop
mov
xchg
adc
ins
sbb
adc
pop
mov
xchg
mov
add
das
shr
fdivr
(bad)
js
and
sahf
mov
push
loop
test
dec
loope
popf
dec
xor
scas
push
jno
cmp
inc
test
out
add
push
cmp
dec
pushf
scas
and
idiv
or
in
stos
inc
cmp
test
std
inc
push
sti
and
in
mov
and
mov
int3
xchg
cwde
jmp
xchg
mov
clc
das
loop
xor
sbb
xchg
ja
pop
pop
or
fs
enter
clc
iret
xor
mov
sub
sbb
mov
scas
jecxz
and
pop
or
imul
pusha
adc
nop
mul
mov
adc
lods
ficom
dec
xlat
loop
(bad)
in
ds
fsubr
dec
add
push
fst
cld
mov
xlat
sub
jo
mov
xchg
or
icebp
cmp
(bad)
movs
popa
popa
dec
mov
shl
jl
shl
mov
imul
push
push
hlt
ret
data16
jns
inc
mov
xor
mov
jne
(bad)
sbb
pusha
xchg
push
jbe
jmp
aas
xchg
inc
aad
push
icebp
sub
outs
stc
and
ins
stc
clc
push
(bad)
push
sub
mov
loopne
mov
xchg
mov
imul
inc
fstp
cmc
xchg
push
or
mov
dec
repnz
sbb
clc
(bad)
fwait
mov
imul
mov
push
xchg
idiv
loop
jne
test
fs
cmps
jmp
xchg
shl
ret
movs
pushf
inc
xchg
stos
retf
addr16
gs
push
pop
dec
leave
sub
es
or
mov
es
mov
(bad)
outs
icebp
outs
sub
mov
jmp
gs
xchg
push
test
aaa
xor
xchg
into
out
pop
(bad)
jp
je
nop
dec
enter
mov
popf
ss
ins
adc
fadd
jmp
rol
pop
dec
jle
ret
adc
inc
outs
in
int3
adc
pusha
sbb
sbb
shl
add
jge
ret
add
(bad)
lock
test
inc
inc
xor
test
cmp
mov
cmps
lods
inc
xchg
xor
rcr
inc
sahf
sub
pop
mov
or
shr
inc
and
arpl
dec
dec
push
fwait
jge
stos
lahf
icebp
hlt
in
mov
ds
jbe
cmp
xor
je
mov
cli
div
mov
cmp
inc
xchg
data16
jo
inc
dec
fadd
(bad)
scas
aam
mov
fld
xchg
(bad)
fcmovnu
xchg
mov
loopne
or
sub
cmp
stos
or
gs
xor
sbb
ins
cdq
push
push
jge
hlt
xor
mov
mov
or
dec
frstor
rcr
in
mov
dec
es
dec
cmp
add
cld
sub
cs
jmp
xchg
xchg
bound
mov
les
push
add
or
nop
inc
dec
pop
or
hlt
cwde
ja
sbb
(bad)
hlt
fs
inc
xchg
cmp
add
xchg
les
jmp
loope
inc
dec
xchg
not
mov
jg
cmp
mov
mov
xor
sub
fwait
push
jmp
cmps
fst
mov
std
les
dec
imul
(bad)
pop
dec
mov
das
mov
mov
test
(bad)
(bad)
out
jno
pusha
cmp
repnz
xchg
pusha
icebp
lods
fstp
inc
(bad)
xor
dec
pop
lods
(bad)
sub
mov
sub
mov
retf
imul
jecxz
fimul
jecxz
js
push
pop
lock
push
es
mov
xor
retf
ins
sbb
inc
push
daa
out
mov
or
push
jno
std
sahf
add
inc
sbb
int3
(bad)
mov
cmp
add
mov
push
push
data16
push
je
mov
or
jmp
jno
add
mov
push
inc
add
jo
aad
int3
fcom
dec
movs
adc
push
iret
adc
push
jb
sahf
ds
dec
sub
std
ret
lods
cld
lock
xor
loope
sbb
aaa
lods
inc
ss
int3
jno
and
mov
mov
cmp
rol
jo
imul
lods
mov
and
out
in
xchg
je
mov
or
and
es
push
leave
push
dec
push
int
or
add
scas
pusha
and
test
jno
or
adc
pop
rcl
fiadd
fwait
push
rol
pop
imul
pop
sub
in
lea
cmp
call
cmp
ret
fidivr
mov
dec
push
or
mov
ds
ret
aad
stc
fs
addr16
xor
push
pop
push
mov
(bad)
jae
loop
hlt
or
mov
xor
cmc
je
add
hlt
call
into
and
dec
inc
stc
xchg
xchg
fiadd
in
in
(bad)
push
push
cli
daa
or
es
into
(bad)
in
popa
jno
retf
pop
xchg
callw
jbe
cmp
in
push
retf
jl
and
and
push
mov
jp
cmp
dec
repz
push
adc
jge
mov
and
test
retf
mov
jle
dec
mov
das
mov
push
fbstp
or
out
mov
cmps
dec
jmp
imul
sub
mov
cs
int3
sbb
add
fdiv
xor
and
leave
shr
int3
mov
xor
mov
cs
pop
(bad)
jno
or
sub
mov
jmp
mov
jnp
mov
dec
ds
fbstp
mov
cs
xchg
fsubr
jecxz
std
adc
(bad)
push
popf
movs
out
repz
pop
cmps
mov
leave
aaa
ficom
dec
push
(bad)
sub
in
fmul
xchg
ds
adc
pusha
and
in
jmp
add
(bad)
not
jl
sub
push
repz
cld
stos
je
push
sbb
jmp
cwde
mov
mov
sbb
cmp
pop
mov
repz
mov
(bad)
lahf
cwde
dec
push
out
enter
repz
fmul
xchg
cmc
or
cmc
pop
inc
js
adc
or
ins
sub
dec
test
imul
int
bound
and
leave
adc
cmp
cmps
popa
jb
test
sub
les
push
pop
cmps
and
fstp
loopne
sub
adc
aam
stos
clc
fbstp
add
xchg
ret
xchg
cmp
xchg
cmp
pop
mov
mov
cdq
stc
pusha
xor
(bad)
mov
cmp
sbb
sbb
retf
and
sbb
je
adc
imul
ja
sbb
clc
ret
clc
outs
addr16
lock
daa
add
les
pop
cmc
jbe
hlt
ins
xor
or
es
fsubr
stos
push
pop
popf
mov
mov
test
mov
adc
clc
push
push
out
(bad)
outs
pop
daa
mov
mov
or
xchg
push
sub
stos
sbb
mov
or
in
xchg
ins
sub
xchg
jmp
daa
ret
mov
call
clc
sub
mov
sbb
add
ja
or
inc
pop
test
mov
mov
and
push
jl
ss
adc
adc
cwde
aaa
imul
push
fwait
idiv
sub
out
adc
cmp
dec
mov
scas
inc
sub
or
dec
mov
xor
sub
pushf
dec
sub
push
in
adc
adc
int
(bad)
xchg
jne
dec
mov
pop
gs
ins
push
push
mov
shl
xchg
xchg
sub
dec
push
push
sub
retf
push
fstp
push
mov
bound
jge
jae
fistp
(bad)
add
rcr
mov
push
cmp
lods
shl
repz
pop
mov
mov
in
fldln2
ds
sub
or
push
or
or
cmp
mov
push
push
repnz
jmp
leave
jbe
mov
pusha
sub
xor
movs
inc
stos
push
xlat
and
les
daa
inc
mov
loope
movs
repz
and
(bad)
sbb
retf
call
pop
in
cmp
aaa
cmp
xchg
jne
(bad)
loopne
mov
xchg
jmp
scas
into
(bad)
(bad)
sub
sbb
lahf
test
inc
data16
pop
pop
clc
bound
xor
push
int
mov
sub
lods
dec
sbb
ds
fistp
pop
test
mov
sub
je
or
loop
pop
xor
adc
pop
sbb
sub
mov
or
sub
sub
rcl
dec
scas
std
xchg
ds
dec
lods
and
push
add
dec
jle
arpl
cmp
sub
ret
mov
mov
ins
or
add
or
cs
retf
or
rol
xchg
mov
xor
inc
jecxz
or
stos
jmp
fs
popa
mov
mov
sub
outs
pop
ret
dec
mov
retf
jmp
imul
aas
xchg
mov
jge
pop
fmul
jbe
mov
jae
inc
push
outs
imul
jecxz
scas
jp
push
out
add
icebp
add
xor
adc
mov
scas
std
es
mov
mov
adc
xor
repnz
out
cmp
pop
or
hlt
in
cmc
iret
aaa
pushw
retf
jno
repz
push
mov
and
sub
and
(bad)
xchg
sbb
inc
mov
aas
add
repnz
xor
in
pop
pop
mov
jb
jae
mov
add
or
retf
mov
push
adc
inc
jmp
ins
shr
shl
push
enter
imul
rol
(bad)
pop
mov
(bad)
jmp
mov
add
mov
xchg
leave
ins
fimul
in
jno
jl
jns
xchg
push
push
push
cdq
sti
loope
lods
cmps
scas
cmp
int
push
fld
push
gs
cmp
push
fiadd
dec
or
mov
aas
and
mov
imul
mov
not
mov
imul
lahf
mov
outs
(bad)
int3
and
ins
jnp
push
in
jle
xor
imul
shl
sub
test
sub
and
movs
sub
push
jmp
imul
cld
jmp
les
or
clc
pop
pop
call
call
jge
inc
aaa
inc
pop
fistp
lds
movs
push
cvtdq2ps
lahf
mov
xor
movs
add
cli
(bad)
cmps
rcr
(bad)
mov
xchg
(bad)
movs
push
inc
mov
sbb
jge
(bad)
mov
push
scas
fisubr
xor
pop
arpl
dec
inc
pop
pop
mov
rcr
pop
cld
jbe
cmps
dec
sub
inc
loopne
loop
aaa
pop
or
ret
imul
add
sub
mov
xlat
add
inc
mov
rcr
mov
push
pop
and
mov
and
cmp
xchg
push
loop
sbb
pusha
mov
inc
jmp
(bad)
data16
cmp
scas
out
push
jl
sbb
sti
imul
adc
nop
push
test
lods
(bad)
pushf
lods
movs
imul
inc
(bad)
pop
dec
cwde
aaa
pop
xor
mov
xchg
xor
es
jge
xor
ins
aaa
and
icebp
jb
fbld
ss
push
arpl
sub
movs
fisttp
xor
and
push
aas
mov
ret
cld
sbb
mov
icebp
mov
leave
sbb
or
dec
movs
lock
mov
cmp
out
sub
shl
mov
out
ffree
and
xchg
or
stc
mov
movs
dec
mov
js
outs
pop
outs
add
and
fstp
aam
outs
jmp
add
in
mov
in
sub
(bad)
bsr
mov
lods
vpmacssdqh
imul
test
push
add
jle
icebp
xchg
cmp
push
data16
mov
test
into
jmp
sbb
shr
ror
out
adc
sbb
mov
push
aas
popf
clc
push
shl
jp
je
imul
pop
jbe
dec
shl
xchg
popf
adc
xchg
cdq
(bad)
ror
test
idiv
js
push
adc
(bad)
mov
sbb
jecxz
pop
shr
push
mov
jge
adc
dec
fcom
xor
aam
push
and
sbb
pop
lds
fwait
add
and
push
or
or
(bad)
ficom
mov
add
cmp
(bad)
sub
sub
cmp
fstp
mov
stos
jae
pushf
jmp
inc
pop
xchg
cmps
(bad)
and
cmp
mov
cmp
xor
xlat
into
xchg
call
mov
in
ret
clc
enter
(bad)
or
fdivr
(bad)
retf
mov
xor
out
adc
push
mov
sub
cli
shl
stos
mov
lds
inc
fdecstp
jae
pop
jae
add
rol
mov
jne
pop
inc
pop
aam
call
xchg
fcomp
adc
sbb
in
ret
out
sti
push
jmp
dec
jbe
shl
push
xchg
xor
pop
lock
mov
cli
xor
mov
sub
jno
(bad)
xor
or
cdq
or
fmul
add
inc
add
push
sbb
std
rol
mov
cs
jnp
and
push
mov
dec
inc
push
bound
imul
aaa
lods
shl
jl
shl
xchg
movs
ret
les
or
jns
jp
fcomp
adc
lahf
daa
pop
or
jecxz
xor
or
es
retf
push
inc
mov
lods
jp
add
nop
cmps
rcl
pop
xor
xchg
ret
stos
add
stc
push
jo
loop
call
ret
mov
lahf
pop
cdq
mov
daa
xcrypt-cbc
cmps
adc
and
xor
jo
(bad)
cmp
in
retf
mov
clc
rcl
ret
cmp
jg
mov
add
push
inc
pop
sbb
pop
ficomp
cmp
push
cmp
repz
adc
lds
xor
xchg
adc
stos
sbb
loope
mov
cmps
das
mov
inc
xchg
push
sub
dec
dec
out
adc
sbb
(bad)
aam
xchg
daa
sbb
jae
ret
inc
inc
ret
in
lock
mov
inc
sbb
clc
push
and
pop
mov
repz
aaa
outs
sub
mov
loopne
scas
xor
data16
cmps
data16
mov
cmp
sbb
xchg
cmp
xchg
fistp
or
scas
xchg
shl
cmp
arpl
xchg
test
cmps
shl
xchg
xor
dec
fcomp
inc
cdq
jge
daa
test
inc
scas
imul
loope
or
enter
jne
scas
xchg
inc
xchg
sbb
xor
and
repz
mov
mov
clc
xchg
lods
push
mov
lock
pop
pop
pop
popf
inc
mov
and
aam
fs
fisttp
jmp
movs
dec
repz
les
inc
clc
popa
cs
(bad)
pop
xchg
jl
shl
loopne
loope
fisub
xchg
cmp
jmp
and
add
inc
je
xor
fistp
retf
(bad)
fidivr
pop
dec
dec
mov
sbb
add
fwait
inc
in
dec
retf
inc
fld
jb
adc
sbb
loop
adc
nop
stos
xchg
sub
push
loope
inc
cmp
xchg
push
test
xchg
mov
not
inc
xor
int
or
cmps
repz
inc
add
cmc
cmp
aaa
mov
sbb
das
test
dec
add
ret
cmps
pop
cdq
sub
mov
fistp
add
frstor
aas
pop
sub
dec
loope
vpunpcklqdq
mov
fadd
push
popf
or
or
sbb
mov
inc
xchg
pop
daa
ficomp
shl
cmp
shr
shl
xor
jle
xchg
mov
sub
hlt
pushf
das
xchg
test
(bad)
adc
push
mov
hlt
lds
sahf
bound
push
(bad)
scas
inc
inc
sbb
cmp
and
daa
test
daa
sub
icebp
and
or
push
push
mov
pop
jg
stc
xchg
(bad)
fidiv
adc
and
and
or
js
or
sub
or
cli
pop
psrlq
sbb
push
or
fsubr
cwde
ss
pushf
(bad)
mov
aaa
add
movs
lahf
or
fstp
adc
fsubr
shl
(bad)
dec
mov
pop
dec
mov
les
xor
clc
es
push
pusha
sub
pop
or
les
pop
jmp
mov
sahf
xchg
cdq
push
ret
sbb
adc
xchg
popa
cli
(bad)
mov
pushf
dec
sub
(bad)
fsubr
pop
iret
xor
leave
push
mov
aam
int
xchg
and
pop
icebp
(bad)
jno
push
pop
stos
lahf
fisttp
mov
adc
in
add
outs
jns
dec
imul
or
jle
xor
jbe
inc
(bad)
out
cmp
lds
inc
jne
js
hlt
and
adc
xlat
test
test
rol
clc
push
pop
retf
or
(bad)
push
popf
out
mov
jle
push
pop
cmps
loope
pusha
sub
xchg
push
xor
fist
in
mov
mov
inc
stc
les
fld
jl
inc
cmc
mov
or
ins
aas
std
bound
mov
push
(bad)
pop
popa
dec
mov
mov
sub
movs
in
inc
or
sar
mov
retf
or
sub
xchg
and
out
fidivr
push
out
xor
add
xchg
mov
cmp
mov
inc
aam
cwde
ins
pmuludq
stos
and
sbb
fiadd
repz
aam
pop
cdq
mov
xchg
aam
and
das
addr16
sub
(bad)
loope
jae
imul
sbb
sub
test
icebp
popa
cmp
mov
adc
pop
push
and
sbb
outs
dec
inc
sar
out
hlt
inc
xchg
pop
fldenv
mov
push
test
(bad)
std
mov
jg
in
cmp
out
ins
leave
movs
jle
stc
dec
mov
cmp
mov
repz
or
cmps
outs
ret
push
fadd
cmp
lock
xchg
add
inc
stos
pusha
jb
mov
je
inc
add
jmp
push
(bad)
test
mov
dec
dec
xchg
fist
ret
mov
adc
test
ja
shl
xchg
cmp
jns
dec
dec
mov
ror
xchg
xchg
dec
push
push
inc
icebp
(bad)
repz
sbb
push
shl
jnp
pop
fs
mov
inc
aas
je
cmp
pop
mov
push
ret
dec
js
scas
add
push
push
inc
rol
push
dec
adc
and
enter
int
cld
sbb
aaa
push
pop
adc
lock
sub
movs
adc
sbb
or
daa
pop
outs
push
stos
push
dec
cmp
jg
or
sub
(bad)
dec
movs
shr
and
inc
sub
imul
mov
push
pop
and
repnz
push
and
es
daa
aas
stos
pop
call
and
xchg
add
xor
(bad)
pushf
cwde
(bad)
push
arpl
pop
jne
mov
idiv
bnd
xchg
iret
jl
mov
sahf
nop
dec
jb
push
test
ror
sbb
mov
and
mov
add
xor
fadd
jp
test
ja
adc
dec
inc
xor
in
inc
in
data16
out
cmps
dec
sar
les
push
inc
enter
imul
stos
inc
mov
push
int
ds
sub
stos
dec
popa
fdiv
movs
cmps
push
mov
pushf
repnz
movs
pop
mov
repz
ins
je
and
pushf
xor
stos
jp
jg
and
ja
mov
(bad)
in
(bad)
pop
fld
jae
add
mov
dec
dec
rep
mov
adc
jp
mov
imul
popa
or
mov
es
sti
les
xor
push
pop
sar
add
ins
lods
xor
adc
aad
mov
cmp
les
mov
jbe
repz
loop
addr16
mov
nop
sar
pop
addr16
inc
(bad)
out
icebp
bound
nop
dec
clc
stc
push
jne
in
mov
hlt
dec
add
sbb
and
push
jnp
mov
out
cmp
arpl
loope
adc
dec
mov
mov
(bad)
ds
stos
dec
mov
sub
push
fiadd
jnp
cmp
(bad)
repnz
cmc
stos
sahf
or
jmp
in
js
or
outs
mov
outs
dec
add
push
xor
sub
sub
and
add
repz
cmp
mov
stos
ins
push
test
adc
jb
ror
mov
cmc
stos
outs
jle
je
push
cld
and
sub
in
lods
stos
push
adc
sub
ds
fs
and
and
mov
jmp
mov
outs
test
xor
(bad)
sti
or
loop
mov
call
sahf
std
xchg
iret
fcomp
dec
inc
cdq
ins
(bad)
test
fistp
add
inc
mov
pop
and
jge
popa
sbb
sbb
sub
popf
arpl
cmp
popf
ror
fnstsw
test
inc
cmp
stos
xchg
pop
cmp
jne
lea
mov
xchg
std
pop
stos
jne
fs
or
xchg
lods
mov
sbb
pop
sbb
xor
popf
xchg
and
adc
test
and
aad
fnstcw
jno
cmp
inc
push
sub
xlat
stos
fld
mov
js
sub
pop
and
fwait
(bad)
stc
mov
sub
xchg
jne
mov
fdivr
cmp
sbb
int
cmc
ror
dec
(bad)
lods
fwait
or
push
ror
sub
enter
jb
cwde
or
or
int3
retf
dec
(bad)
dec
aad
jmp
fadd
add
leave
cmps
scas
mov
scas
ret
in
sahf
lock
fstp
xchg
aad
add
jae
aas
fcomip
cmp
sub
fs
mov
(bad)
mov
mov
jle
ret
nop
test
ret
(bad)
lahf
movs
inc
push
mov
jmp
xor
mov
jbe
aam
daa
hlt
ins
xchg
je
and
in
ja
bnd
(bad)
pop
enter
jae
sbb
jmp
addr16
dec
gs
pop
or
jne
push
adc
sbb
test
fdiv
inc
mov
push
mov
in
sar
push
fsubr
cdq
mov
in
or
push
add
nop
aam
add
mov
push
xor
cwde
out
xor
(bad)
fldcw
mov
sub
add
adc
mov
icebp
mov
jno
repz
fistp
mov
xchg
movs
lds
(bad)
enter
mov
jl
rol
mov
and
out
out
pop
dec
retf
xchg
in
or
outs
inc
push
add
push
xchg
add
adc
xchg
(bad)
fmul
xor
test
iret
inc
movs
and
stos
imul
add
push
test
ja
mov
scas
add
sbb
ins
xchg
pop
add
aas
jne
test
sbb
(bad)
and
int
pop
mov
ret
sbb
lahf
xchg
aam
mov
and
add
mov
in
xchg
mov
mov
and
mov
jb
or
pusha
js
rcl
and
jne
shl
aaa
in
in
sub
retw
test
arpl
sbb
fdivr
mov
lea
sbb
ds
int3
mov
jno
and
sbb
inc
add
sahf
ret
xchg
cmps
inc
call
aam
jl
sbb
inc
nop
int
pop
and
ret
out
fsubr
out
and
pushf
(bad)
inc
push
inc
bound
loope
test
push
aad
xchg
push
mov
mov
loope
sub
in
sub
sbb
xor
aas
hlt
inc
retf
and
cmc
(bad)
jnp
pusha
dec
(bad)
cmp
ret
add
loopne
enter
std
push
dec
jmp
cmp
add
mov
cmp
mov
or
add
in
out
dec
adc
push
in
mov
(bad)
nop
retf
jle
xchg
outs
dec
and
scas
dec
adc
mov
test
rol
stos
imul
push
push
ins
sub
or
fmul
xchg
fs
out
adc
inc
popf
rcr
enter
sbb
push
aaa
ret
das
je
and
jle
or
push
stos
jns
push
in
rcl
adc
stc
and
dec
pop
xchg
or
sub
pop
cmp
ja
scas
cmp
inc
imul
inc
xor
stos
adc
cmova
adc
es
adc
lods
scas
jae
inc
xor
mov
sbb
push
outs
push
or
push
jp
ret
sahf
scas
xchg
es
test
xchg
pop
jl
ror
sahf
sub
js
ds
lods
push
pop
add
test
div
es
retf
mov
dec
imul
jae
lods
cmp
cmp
push
ror
mov
dec
add
or
pop
in
push
xchg
jno
neg
mov
xchg
repz
add
add
lahf
cmp
sub
xchg
shl
or
mov
mov
ds
xchg
xchg
inc
out
mov
mov
js
jmp
aas
(bad)
test
shl
enter
fnsave
jg
mov
(bad)
adc
adc
arpl
push
enter
gs
xor
add
in
sti
cmp
shr
or
adc
add
repz
push
arpl
sub
lods
sahf
inc
push
mov
dec
rcl
ror
stos
and
push
test
mov
xor
leave
dec
and
xchg
(bad)
scas
inc
xchg
mov
mov
les
mov
icebp
call
sbb
popa
and
inc
mov
sub
inc
xor
mov
mov
mov
inc
pop
cdq
mov
call
aam
inc
mov
hlt
and
add
cmp
push
cmp
repnz
lahf
cmp
push
inc
cmp
(bad)
pushf
add
mov
imul
stos
xchg
push
ins
js
lahf
sub
inc
das
nop
jecxz
and
adc
xor
pusha
test
mov
std
imul
or
jl
test
pusha
jne
jl
mov
jp
lahf
cdq
cmp
ja
test
stc
nop
pop
cmp
jmp
push
lock
ret
jg
dec
daa
popf
xchg
repz
add
scas
xor
cmp
call
jb
inc
into
into
adc
mov
cmps
cwde
push
mov
sbb
mov
loope
psubsw
lock
aaa
cmps
and
sbb
dec
leave
push
shl
mov
sbb
and
jl
xor
jmp
mov
push
ss
add
xchg
dec
sbb
and
in
xor
pop
call
sbb
daa
adc
std
movs
cmps
sub
(bad)
in
mov
jo
and
adc
scas
xor
jle
sbb
scas
sbb
push
push
shl
icebp
xchg
hlt
xchg
pop
es
sub
pop
(bad)
cmp
mov
je
mov
lds
(bad)
jle
pop
push
in
int
fdivrp
adc
mul
inc
inc
aad
(bad)
inc
xchg
cld
js
dec
inc
or
fcom
sub
call
inc
jecxz
xchg
and
mov
jmp
ja
or
addr16
sub
jne
into
aam
ds
pop
jmp
rol
es
push
jne
adc
add
hlt
mov
sbb
outs
xchg
daa
jg
mov
retf
cmp
(bad)
push
ret
and
arpl
jae
fadd
mov
push
fwait
pop
mov
push
adc
inc
cmp
mov
mov
fs
repnz
ins
inc
pop
and
or
xor
les
(bad)
test
add
ficomp
scas
cmc
inc
movs
cwde
adc
sub
idiv
pop
push
push
repz
pop
cmp
stos
dec
(bad)
out
js
add
shr
mov
les
sbb
mov
mov
(bad)
pop
mov
mov
inc
inc
mov
xchg
(bad)
scas
xchg
rcr
dec
js
es
fld
mov
fist
jmp
pop
retf
sub
pop
sbb
jecxz
in
les
jne
push
jmp
push
mov
lea
(bad)
ja
mov
retf
jge
and
cmp
mov
inc
clc
pop
add
call
in
in
call
repz
cmp
mov
fdiv
cmp
retf
das
dec
in
pop
cmps
ror
cmp
dec
int
xor
inc
pop
or
dec
fs
shl
xchg
mov
mov
add
popf
data16
mov
push
sbb
push
add
and
fwait
stos
pop
icebp
and
mov
pop
jg
lea
mov
pushf
pop
mov
mov
into
or
and
sub
jno
xchg
and
aam
call
xlat
shl
pop
jns
in
jp
xchg
(bad)
stos
int3
inc
or
xor
dec
stos
call
ret
adc
push
dec
ja
movs
pop
scas
sbb
js
pushf
pop
mov
mov
movs
pushf
imul
mov
ins
clc
and
sub
cmp
(bad)
push
or
mov
popf
pop
cs
mov
es
xor
or
call
sub
dec
das
ret
push
and
out
cmc
and
push
pop
test
xchg
adc
imul
sub
inc
sbb
cmp
loope
leave
xchg
(bad)
sub
jns
sbb
push
cmc
fimul
push
gs
push
fst
jmp
stos
xor
call
pop
sbb
in
outs
jl
jb
fisub
jb
mov
push
pushf
fisub
or
fiadd
push
aas
cmp
pop
push
loope
popa
add
(bad)
pop
loopne
pcmpeqd
push
cmp
add
or
cmps
popa
aas
mov
push
repnz
fldcw
or
inc
mov
mov
test
adc
pop
repnz
push
es
pop
lods
push
lods
lds
ins
movs
scas
cld
stos
cmp
les
adc
cmp
mov
pop
push
es
popf
or
out
icebp
mov
inc
inc
retf
inc
jns
stc
fmul
enter
or
into
ins
jnp
pop
xchg
and
jl
add
mov
call
dec
or
inc
pop
aaa
sub
push
(bad)
pop
shl
mov
cwde
sub
sub
mov
mov
xchg
or
xchg
stos
mov
adc
mul
mov
mov
cmp
lods
lahf
mov
jbe
(bad)
jnp
je
jne
inc
out
or
imul
(bad)
ja
fsubr
and
xchg
cdq
pop
fst
mov
sub
retf
dec
push
xchg
test
sbb
ret
mov
imul
inc
ins
imul
ror
aaa
mov
xchg
jns
cmps
pop
pop
clc
pop
sbb
sbb
mov
sti
jo
retf
push
add
arpl
data16
cmp
mov
mov
aaa
sub
inc
sub
test
loope
stos
adc
out
adc
pop
ins
xor
leave
adc
sbb
stos
pop
call
jbe
or
ja
inc
jp
add
sahf
mov
aam
cld
fild
pop
arpl
mov
outs
sbb
cmp
test
mov
(bad)
mov
xor
repz
push
xor
xchg
cmp
and
mov
cmp
fs
cs
jl
jge
xchg
hlt
repnz
push
mov
jmp
adc
scas
and
add
cs
push
gs
mov
div
pop
add
jns
add
push
mov
add
adc
cmp
call
cmp
fdiv
mov
cwde
cwde
xchg
sub
or
rcl
push
mov
mov
or
jb
sbb
jle
jne
push
mov
iret
sbb
ins
add
push
clc
in
adc
push
add
test
out
adc
adc
push
xor
xor
sti
lock
jmp
jmp
mov
push
jns
in
addr16
cs
into
sub
jnp
(bad)
mov
int
in
(bad)
loop
popa
adc
sbb
pop
mov
scas
sbb
sbb
sbb
push
call
mov
int3
shr
(bad)
outs
fbstp
inc
cld
cwde
or
stos
add
mov
scas
(bad)
mov
ins
test
pop
retf
je
cld
loopne
dec
sahf
scas
push
movs
icebp
clc
dec
pop
lds
(bad)
mov
pop
pop
xchg
loope
pop
mov
aad
jno
xor
(bad)
xor
mov
and
jno
(bad)
sbb
push
ficom
jno
push
daa
cmp
cld
popa
out
shr
(bad)
std
push
aad
test
sub
repz
mov
xlat
loop
mov
(bad)
pop
xchg
mov
lds
cmp
xchg
sub
or
and
lods
repz
je
mov
movs
(bad)
call
mov
cmp
stos
dec
jle
push
mov
aam
and
jge
xor
xor
js
movs
repz
mov
scas
retf
add
dec
xor
mov
stos
pushf
gs
xchg
adc
mov
mov
jle
cs
test
sar
(bad)
out
mov
cmp
cli
dec
scas
imul
inc
or
or
push
adc
fsub
loopne
pop
bound
jp
xchg
(bad)
sbb
push
call
sbb
loope
and
push
jg
and
sub
xchg
aaa
or
push
std
cmp
ror
pushf
xor
test
sub
test
scas
cmc
mov
mov
test
popf
or
sbb
push
push
mov
ret
jmp
add
and
pop
rcl
out
jle
test
lock
retf
outs
in
sub
xchg
jp
xor
jnp
popf
xlat
and
test
aas
or
fisttp
jle
fldenv
xchg
fisttp
push
int
rol
inc
int
leave
push
cmp
push
add
mov
(bad)
mov
push
mov
xchg
fmul
(bad)
in
jge
push
dec
jae
shl
cdq
mov
push
(bad)
(bad)
leave
scas
mov
and
mov
ss
stos
data16
cld
pop
into
jge
aaa
scas
loopne
arpl
push
inc
call
pop
stc
scas
pop
test
bound
add
out
test
ins
call
fdiv
enter
and
sbb
pushf
data16
mov
xchg
jne
int
aad
jmp
mov
mov
push
or
pusha
and
in
dec
pop
pop
or
pop
adc
in
xchg
pop
pusha
popf
push
(bad)
bound
imul
xchg
adc
test
mov
sbb
addr16
push
test
jns
sbb
mov
push
dec
mov
or
lds
(bad)
loope
clc
dec
pop
xchg
jo
cld
xchg
adc
sbb
test
mov
inc
xor
aaa
dec
sbb
cmp
push
out
imul
mov
mov
rcr
or
jecxz
or
popa
cmps
lahf
out
imul
adc
push
rol
or
movs
repnz
dec
sub
push
xor
js
sub
and
fmul
jno
jmp
pushf
sti
sbb
arpl
call
pop
cld
xchg
popa
adc
xor
repz
push
fnsave
sahf
add
and
xchg
je
add
push
dec
dec
aam
jmp
push
fwait
scas
data16
movs
sub
sbb
imul
mov
movs
mov
jb
rcr
in
dec
das
push
cmps
dec
mov
adc
sti
retf
aas
lods
retf
je
rol
cli
xchg
in
push
adc
push
aaa
lea
nop
xor
sbb
mov
push
cld
cli
or
test
lock
rcl
imul
or
sub
push
xor
cld
xor
jno
push
fbld
and
(bad)
dec
mov
fadd
xchg
fisttp
mov
mov
and
mov
fsub
aas
xor
scas
push
and
push
push
aam
push
lahf
dec
retf
push
jns
push
in
sbb
add
inc
jp
mov
repnz
sbb
pop
pop
aaa
inc
mov
adc
retf
stos
push
(bad)
xchg
nop
shl
jge
sub
xchg
(bad)
xchg
mov
and
imul
push
or
les
sub
movs
stc
mov
mov
jmp
cmc
cmp
leave
push
repz
cdq
add
pop
mov
jnp
iret
js
cmp
(bad)
aas
pop
jl
arpl
(bad)
out
fs
aaa
pop
pusha
dec
clc
cmp
mov
and
and
pop
dec
mov
xor
(bad)
mov
jb
xchg
adc
xchg
ret
adc
lods
xchg
inc
loope
sbb
cmp
fs
mov
outs
(bad)
jp
test
sbb
sub
scas
scas
mov
outs
dec
sar
call
jl
lods
and
jecxz
xor
popf
dec
inc
xor
cmp
cmp
sahf
xchg
ja
in
adc
in
adc
mov
jmp
sub
aaa
cmp
out
jmp
cmp
mov
std
retf
mov
inc
(bad)
lahf
(bad)
adc
cmp
fwait
fwait
xchg
xchg
stc
sbb
scas
inc
popa
imul
stos
sub
fcmovnbe
iret
mov
dec
cmp
lods
les
adc
xchg
mov
push
dec
push
inc
pop
cli
addr16
mov
jp
les
and
inc
dec
into
add
inc
inc
sub
pop
xchg
push
int
push
lods
push
cdq
adc
inc
ret
mov
clc
leave
dec
or
mov
sahf
leave
mov
test
fwait
pop
(bad)
call
and
adc
jmp
addr16
push
xchg
push
sbb
mov
fisttp
icebp
mov
jmp
jmp
je
mulps
inc
pushf
cmpps
imul
xchg
iret
movs
ror
xchg
cli
hlt
cmp
pop
sub
test
mov
(bad)
dec
fidiv
(bad)
xor
jo
jmp
push
and
jge
cmps
xor
int
mov
hlt
imul
push
and
pop
sub
icebp
mov
jae
add
pop
lahf
cmps
inc
repz
bound
xchg
test
mov
cli
data16
aam
jecxz
pop
pop
gs
cdq
pusha
aas
test
jae
cmp
sbb
mov
lock
sahf
in
jp
and
je
sbb
cmp
movs
es
repnz
mov
xchg
ret
or
sub
int
mov
hlt
in
clc
pop
push
or
add
repnz
dec
jle
push
mov
cmp
nop
fbld
dec
adc
push
add
shl
fnstsw
dec
or
and
mov
jbe
pop
pushf
push
sbb
cmc
stos
pop
xchg
and
imul
in
mov
or
ja
loop
jp
push
fcomp
and
add
loop
xchg
xchg
ss
push
fidivr
not
aaa
jbe
and
and
shr
and
push
hlt
xchg
lock
or
pop
daa
or
fild
jmp
or
inc
cli
cmp
push
pop
mov
push
jge
popa
dec
mov
cwde
rcr
sbb
and
dec
movs
mov
loope
sbb
imul
movs
aam
xor
jmp
cmp
jl
addr16
mov
push
leave
dec
daa
push
push
movs
adc
retf
rcl
test
ja
mov
add
in
sbb
ss
addr16
imul
retf
cmp
call
fstp
leave
sbb
or
out
sub
mov
imul
or
in
xor
clc
jae
icebp
push
lea
dec
lock
or
scas
adc
jp
scas
shl
xchg
sub
mov
or
out
add
add
std
pushf
les
xchg
mov
sar
jae
in
int3
or
pusha
jbe
pop
ret
js
sub
sub
xchg
es
jp
pop
das
sti
jo
nop
or
loopne
mov
jmp
arpl
icebp
pop
mov
mov
pop
sbb
add
jae
sbb
mov
inc
test
add
sbb
(bad)
stos
adc
push
push
je
jnp
and
test
cmc
inc
arpl
jecxz
pop
cmp
cmp
aam
or
movs
mov
jbe
inc
enter
not
cli
ficom
cwde
push
mov
(bad)
cdq
lahf
in
mov
jno
push
or
xchg
arpl
or
fstp
xchg
sbb
dec
dec
fnstenv
icebp
jo
ja
(bad)
sbb
in
adc
pop
jecxz
and
adc
jb
enter
mov
fild
call
inc
adc
cmps
not
sub
sahf
js
fbld
mov
les
jp
sbb
enter
loopne
or
and
aam
xor
shl
jnp
call
ja
sub
ja
pushf
pop
pop
push
in
out
add
sti
xchg
cmp
sti
cmp
xlat
enter
or
and
adc
addr16
(bad)
pop
int3
sub
cs
cmp
mov
dec
xor
(bad)
pop
jae
mov
mov
xchg
ror
inc
push
inc
nop
jno
cmp
cmp
mov
sar
jle
cmp
test
pop
cdq
mov
ss
jmp
xchg
push
pusha
pop
sbb
lock
dec
and
nop
les
loop
dec
and
mov
mov
fwait
das
repz
jl
enter
sbb
fstp
outs
mov
dec
fidiv
iret
xor
ss
or
fild
or
aad
out
push
fdivr
and
xor
stos
dec
sar
shr
lock
sahf
jge
jbe
fldenv
ficom
(bad)
xchg
push
jne
and
jl
pop
call
leave
mov
popf
jbe
and
lds
leave
out
mov
sub
or
out
dec
rcl
push
(bad)
and
dec
(bad)
cli
inc
cmp
cli
out
int
out
jmp
sbb
sar
or
and
lods
mov
xchg
repnz
mov
mov
shl
mov
mov
push
xlat
dec
jno
ja
sub
fisttp
adc
rol
or
ja
jo
mov
sub
ret
mov
jg
xor
mov
std
xchg
scas
inc
cwde
or
mov
in
gs
xchg
adc
outs
push
and
(bad)
pop
mov
mov
imul
jmp
(bad)
adc
add
stos
or
iret
mov
mov
pop
iret
mov
mov
sbb
inc
sub
push
gs
cmps
push
loope
and
outs
test
test
cmps
jae
(bad)
push
mov
iret
(bad)
xlat
or
mov
(bad)
test
stc
repz
push
mov
jge
loop
ins
push
js
add
rol
sbb
and
cmp
adc
inc
out
rol
les
fdivr
adc
pop
fdivr
push
jae
mov
pop
xchg
fimul
popf
aam
(bad)
push
and
and
xchg
mov
dec
ds
rcl
retf
inc
mov
aas
call
fsub
dec
xor
sar
mov
cmp
pushf
mov
and
rol
aam
mov
xchg
lods
push
pop
cdq
cld
cwde
es
fs
call
nop
ins
daa
adc
retf
push
arpl
lahf
fwait
(bad)
fld
pusha
ret
das
call
mov
repz
jnp
xchg
jmp
and
hlt
pop
bound
pop
xchg
inc
out
dec
add
add
dec
outs
xrelease
cli
fisubr
(bad)
xchg
(bad)
shr
jl
ret
xchg
clc
cmps
sbb
pop
cli
cdq
pop
jae
cmc
adc
iret
push
lock
sub
xor
add
push
mov
loope
bound
gs
sub
mov
int
push
bound
ins
add
test
jae
cmps
addr16
retf
mov
fistp
sub
sub
icebp
push
xchg
push
cli
cmp
mov
push
stc
dec
aaa
leave
stos
or
mov
push
outs
mov
(bad)
dec
mov
or
jge
scas
mov
and
repnz
(bad)
mov
cmps
daa
in
or
jne
loopne
xchg
or
add
cmp
(bad)
xchg
jge
shr
sbb
xor
ja
daa
push
loop
push
adc
repz
adc
xor
movs
les
and
outs
popf
adc
adc
out
cli
fist
jge
pop
pop
cmp
jne
aas
frstor
aaa
les
xchg
mov
outs
jg
xor
xchg
and
and
push
mov
fild
out
and
pusha
dec
inc
mov
dec
push
dec
xchg
sbb
cld
adc
es
ins
or
adc
jb
aaa
aas
ins
lods
jne
pop
jmp
jge
clc
fdivp
sub
jge
push
xchg
sbb
xor
mov
adc
mov
ja
cmp
lods
push
push
adc
call
dec
push
mov
inc
push
xor
adc
sub
ins
xchg
in
sahf
cli
jae
stc
push
adc
inc
cli
addr16
pop
outs
movs
dec
lods
(bad)
(bad)
lods
push
sbb
xchg
mov
mov
rcl
out
xlat
pop
cmp
sub
hlt
ins
add
and
mov
cld
cmp
sbb
fwait
inc
movs
jecxz
push
in
lods
imul
sar
sbb
call
movs
(bad)
jne
xchg
imul
sti
aam
mov
mov
push
into
xchg
imul
cmp
jle
xchg
lds
icebp
xchg
sub
push
icebp
jbe
in
push
xor
icebp
mov
pop
dec
shl
pminsw
xor
or
sbb
out
out
push
sub
fsubr
ja
xor
in
inc
int3
ja
movs
stos
pop
pop
popf
iret
lock
imul
out
loope
inc
outs
jg
ret
add
push
hlt
out
sub
movs
sub
hlt
aas
jg
inc
cld
xchg
jns
add
frstor
test
pop
dec
cmps
cmps
sub
enter
jo
in
or
and
mov
add
ror
mov
pop
or
repnz
jb
mov
pop
mov
sti
and
sub
fbstp
or
inc
mov
sub
jmp
clc
(bad)
cmps
mov
aas
lea
and
fstp
enter
scas
push
adc
xchg
adc
pop
std
mov
dec
daa
mov
js
and
ds
(bad)
mov
xchg
enter
ror
cmp
js
jb
das
sbb
xchg
mov
loopne
mov
imul
sbb
loope
dec
mov
in
test
dec
je
outs
jmp
ins
ins
shl
and
cmp
jl
ret
pop
aaa
jmp
or
dec
dec
in
test
(bad)
popf
and
xor
adc
dec
retf
pop
stos
xchg
pop
inc
sbb
icebp
repz
std
and
xlat
mov
ret
push
mov
test
mov
push
inc
lods
(bad)
jnp
mov
sub
xchg
pop
xor
push
sub
mov
inc
repz
les
les
out
imul
sub
or
add
adc
or
cld
out
dec
in
les
dec
xor
mov
aaa
rol
icebp
call
mov
inc
sbb
(bad)
dec
lea
xchg
fdivr
mov
aas
push
push
dec
push
ss
xor
ret
clc
cmps
add
mov
jns
repz
jne
mov
test
fldcw
repz
adc
rcr
mov
push
repnz
stc
push
mov
cmc
jg
xlat
sub
pusha
pop
push
mov
inc
das
lahf
int3
cmp
addr16
adc
or
sahf
add
int
sbb
xor
ins
xchg
jl
mov
(bad)
mov
out
fcmovb
jg
pop
les
movs
mov
inc
cmps
scas
xchg
and
ins
mov
cmp
(bad)
xchg
dec
sbb
outs
into
mov
sbb
mov
add
jl
inc
popa
leave
(bad)
jmp
out
jb
std
cld
add
lods
push
xchg
mov
out
jle
push
add
es
cmps
test
and
sahf
movs
mov
sbb
or
mov
xchg
test
dec
gs
(bad)
not
cmp
or
test
call
sub
mov
sub
mov
inc
mov
nop
fcomi
xor
out
ret
loop
cmp
lds
in
xchg
xchg
add
lock
mov
clc
scas
je
pop
sub
or
sub
pop
sti
push
jbe
call
lods
mov
cs
jne
mul
movs
add
repnz
push
inc
xor
and
daa
in
add
ret
cmps
pop
dec
mov
int3
test
inc
nop
or
stos
das
(bad)
movs
cmp
cld
xor
imul
and
icebp
call
sbb
xor
xchg
test
adc
test
scas
inc
pop
jno
xor
push
es
inc
add
mov
repz
or
dec
nop
cmp
cmp
retf
sub
ds
cmp
mov
and
mov
les
cmp
jmp
xor
push
sub
pop
push
loope
push
jmp
scas
mov
or
popf
enter
sbb
hlt
pop
rol
xchg
pusha
xchg
cmp
xchg
test
aam
xchg
inc
and
fwait
stos
inc
mov
inc
es
lods
scas
outs
test
jp
xchg
ins
jnp
mov
pop
in
jg
or
jnp
pusha
into
arpl
mov
mov
dec
daa
mov
fnstcw
push
out
sub
lock
fnsave
addr16
call
mov
mov
mov
xchg
push
cmp
shr
out
sub
sub
loop
test
mov
and
mov
inc
sahf
(bad)
loopne
jno
ja
jl
popa
xchg
hlt
push
sahf
jmp
xchg
ret
mov
push
and
clc
xchg
jecxz
ins
adc
or
jmp
loop
xchg
sbb
rcr
fldenv
outs
mov
pop
pusha
pusha
inc
cli
mov
shl
pop
jae
imul
mov
adc
cld
sub
jnp
(bad)
cwde
sti
pop
and
inc
and
fcmovu
jmp
push
rcl
ja
call
fnstenv
xlat
cmps
data16
stos
or
call
(bad)
mov
and
in
adc
gs
cmp
cdq
dec
aas
(bad)
aam
add
retf
hlt
dec
test
scas
or
mov
cmp
enter
(bad)
(bad)
in
not
test
movs
mov
idiv
push
sbb
mov
cmc
(bad)
fwait
cmp
xchg
or
and
enter
dec
xchg
pop
lods
pop
jmp
in
adc
movd
mov
and
test
in
xchg
call
add
xlat
mov
bound
leave
jl
mov
xor
and
mov
mov
pop
cld
pop
xor
inc
xor
in
clc
test
mov
sub
stos
add
in
shl
lds
sbb
dec
(bad)
ss
xchg
retf
div
dec
sbb
push
cs
sub
sub
inc
or
(bad)
jno
pop
ins
and
dec
loopne
std
jb
call
push
in
rcr
xor
pop
repnz
mov
mov
sub
jg
hlt
shl
test
mov
cmp
pop
mov
dec
sub
dec
in
mov
xchg
mov
push
jmp
call
or
or
push
test
inc
pop
ret
cmp
mov
mov
int
pop
xchg
ss
jnp
jmp
js
xchg
ret
and
push
jb
mov
mov
aam
add
xchg
push
adc
pop
rol
inc
fwait
out
js
ror
mov
stos
inc
sbb
lahf
push
dec
shr
outs
rcr
mov
es
or
mov
jl
push
pop
imul
pop
dec
popf
pusha
shl
ins
aam
sbb
aam
aas
cmps
ror
hlt
enter
lahf
xchg
cmps
jmp
jmp
sub
or
add
mov
add
inc
cmps
jmp
xlat
(bad)
cmp
pop
das
inc
or
cld
shl
inc
push
push
je
mov
inc
dec
mov
or
pop
push
enter
push
push
xchg
lock
inc
call
(bad)
mov
popa
cmps
xchg
ss
xor
pop
mov
sub
inc
pop
data16
fisub
lahf
neg
popf
xchg
cmps
mov
adc
pop
add
outs
fisub
push
shl
jne
(bad)
mov
loopne
hlt
retf
int
nop
cmp
push
pop
in
loop
sub
adc
push
dec
call
adc
leave
fwait
pmulhuw
hlt
test
xchg
ja
inc
test
test
nop
ror
aaa
inc
xor
call
les
enter
out
inc
mov
mov
sti
sub
fbstp
jmp
pop
scas
sub
xor
pop
gs
xchg
mov
rol
jg
sub
jmp
push
mov
movs
sbb
sbb
xor
leave
push
cmp
in
vrcpss
adc
loope
int3
cmp
fdivr
pop
jne
leave
mov
or
js
xchg
pop
pop
mov
push
mov
cli
(bad)
fstp
or
(bad)
gs
stos
out
cmps
mov
repnz
fild
adc
mov
lds
mov
jae
test
dec
sahf
jns
clc
adc
xchg
fs
mov
pop
xor
cmp
xor
jle
div
inc
pushf
sub
jb
inc
imul
dec
fst
add
imul
or
(bad)
jno
aas
(bad)
loop
outs
test
pop
(bad)
rol
fucompp
adc
outs
and
ins
cmp
mov
mov
stc
cmps
out
test
adc
pop
xchg
sub
(bad)
adc
mov
loope
mov
test
sbb
inc
push
sub
retf
lahf
pop
jae
test
jmp
enter
mov
lods
aas
xchg
arpl
mov
pop
mov
cmp
and
test
(bad)
sahf
inc
inc
xor
ficom
imul
rol
int3
in
std
pop
xor
ins
outs
mov
call
fidivr
and
or
add
rcr
(bad)
retf
cmp
into
push
retf
fcomp
outs
inc
lods
and
hlt
cld
test
xor
scas
(bad)
jae
cmps
mov
and
ficom
cs
stos
ror
daa
pop
and
sbb
xor
fiadd
(bad)
fcmovne
ret
push
sbb
xchg
inc
pop
inc
jp
stc
outs
outs
push
xor
mov
and
mov
pusha
shr
je
scas
cmps
pop
inc
pop
lods
je
cmp
popa
sub
sbb
loop
mov
sbb
idiv
mov
mov
fild
test
loopne
imul
es
mov
shr
cli
ins
shl
adc
cmp
(bad)
or
xor
jl
scas
sbb
cmp
out
push
mov
push
jno
les
dec
mov
and
pop
jno
daa
sbb
xchg
(bad)
ins
pusha
and
int3
enter
inc
fcom
mov
movs
nop
xchg
shl
in
das
shr
adc
(bad)
(bad)
jne
lahf
ret
pop
jo
jmp
sub
mov
in
xchg
sub
movs
loope
neg
xchg
mov
xchg
mov
jmp
xchg
bound
or
mov
test
outs
push
fmulp
pop
jbe
sbb
(bad)
(bad)
jne
rcr
fcmovnbe
dec
cmp
int
dec
fbstp
and
push
std
push
mov
scas
and
shr
sub
push
ins
dec
xchg
mov
jns
push
inc
jge
int3
dec
mov
in
pop
fwait
loopne
mov
push
xchg
in
enter
push
jmp
mov
retf
nop
cmp
sub
aaa
inc
mov
cmc
add
or
or
mov
out
add
fnstenv
shl
xchg
sub
pushf
cmp
in
jno
fistp
and
mov
inc
mov
daa
loop
sbb
push
enter
mov
in
test
std
adc
jle
fcomp
rol
(bad)
sbb
push
dec
xor
jmp
out
fwait
outs
gs
mov
(bad)
add
add
std
imul
ret
inc
adc
aad
test
out
adc
sar
lahf
in
cmp
xchg
and
in
(bad)
movs
cs
lock
xor
lock
mov
jne
cmp
call
loope
ret
scas
shl
pop
out
idiv
mov
fwait
push
out
call
into
lahf
xor
(bad)
icebp
pop
inc
pop
sar
xchg
imul
call
xchg
ffreep
(bad)
pop
sbb
out
movs
sbb
int3
mov
push
mov
mov
cmc
aad
adc
adc
cwde
jnp
dec
cmps
jle
xchg
dec
fbstp
mov
fs
cdq
retf
mov
jb
fild
es
jo
inc
mov
jo
cmp
mov
sar
std
add
cmps
mov
nop
jge
push
jmp
add
mov
xor
mov
(bad)
dec
xlat
jmp
mov
data16
dec
lock
pushf
jmp
jp
addr16
dec
loop
push
lahf
and
outs
sub
inc
imul
fnstenv
mov
jne
mov
(bad)
xor
ins
out
aad
xchg
aad
jle
pop
pop
mov
lock
mov
sbb
popf
xchg
xchg
or
mov
dec
cli
sti
dec
sbb
loop
test
push
popf
sbb
idiv
xchg
(bad)
int
clc
dec
adc
js
aas
adc
jae
test
rol
repz
dec
std
ret
cmps
xor
xor
sub
push
mov
pop
retf
retf
int3
adc
mov
dec
sahf
popf
pop
addr16
retf
ficomp
test
mov
mov
arpl
or
jno
call
xchg
jb
dec
in
imul
xor
and
scas
lahf
adc
ja
jns
dec
xor
sbb
js
add
jge
rol
mov
lock
sbb
sub
(bad)
clc
das
or
inc
retf
inc
adc
call
push
mov
pop
and
sar
jge
add
inc
pop
xor
sub
push
(bad)
les
xchg
pop
jnp
mov
xor
mov
mov
pop
xchg
cmp
popf
push
int3
loop
leave
es
aas
sbb
jno
ss
jle
and
adc
loop
sub
test
mov
retf
and
sbb
jle
add
pop
push
test
push
call
push
dec
leave
and
repz
test
xchg
jmp
call
adc
dec
out
jl
scas
inc
inc
inc
ins
rol
add
ss
pop
add
xchg
(bad)
jl
mov
dec
xchg
push
mov
dec
icebp
in
(bad)
fiadd
add
push
mov
fwait
mov
test
inc
inc
icebp
push
push
in
xchg
(bad)
jmp
adc
sub
hlt
fidiv
sbb
add
push
cmp
inc
cmp
mov
adc
adc
shr
sub
push
add
and
leave
(bad)
pop
add
xchg
nop
sbb
xchg
mov
jg
adc
add
cmp
loop
js
out
pushf
(bad)
(bad)
jo
jmp
mov
or
or
add
iret
std
pop
sbb
rcl
(bad)
std
stos
pop
inc
add
mov
mov
fld
ja
jno
mov
es
sub
mov
or
hlt
cmc
bound
inc
int3
adc
jge
call
retf
repz
test
(bad)
aam
ja
stos
mov
dec
sbb
xchg
movs
jecxz
popf
loope
add
and
imul
pop
(bad)
mov
aad
aam
shl
rcr
xor
or
out
data16
fldcw
or
dec
add
test
popa
bound
fnsave
mov
les
mov
xchg
xchg
lds
retf
cmp
sbb
push
cmps
sub
push
inc
dec
out
repnz
push
sub
xchg
push
adc
pop
cmp
adc
gs
popa
hlt
hlt
int
jmp
in
xor
and
mov
out
dec
xor
iret
mov
add
cmps
lods
into
fdiv
dec
mov
mov
jmp
(bad)
dec
std
inc
shl
sahf
mov
or
sub
mov
mov
aam
pop
jno
sub
test
inc
dec
inc
data16
mov
inc
jecxz
pop
jmp
loopne
fst
and
add
sbb
rcl
shl
(bad)
jl
push
or
dec
jmp
inc
pop
jle
add
call
daa
mov
repnz
(bad)
movs
lds
sbb
pop
sub
mov
mov
mov
push
mov
push
in
inc
adc
xchg
outs
in
test
mov
mov
jmp
imul
or
fld
adc
mov
dec
add
xor
inc
lock
pop
test
or
xor
jle
shl
inc
fsubr
imul
nop
inc
or
pop
repnz
ds
jle
jb
cmps
(bad)
jae
sbb
mov
push
xchg
and
sbb
dec
into
dec
dec
bound
cmp
into
push
leave
or
xor
fild
loope
out
mov
push
test
mov
push
daa
mov
sbb
arpl
sbb
sub
aaa
add
xor
data16
mov
rsqrtps
xor
ficom
and
sbb
xlat
sti
mov
dec
or
std
clc
xchg
cmp
inc
sbb
lds
inc
sbb
(bad)
xchg
sti
movs
pop
cdq
and
dec
aad
aad
or
iret
inc
daa
pop
sub
sbb
ret
mov
dec
xchg
mov
inc
xor
mov
mov
sbb
xchg
pushf
cs
mov
pop
mov
out
lods
aaa
sbb
daa
stos
pop
mov
cmp
cmp
sbb
or
daa
inc
(bad)
jb
cdq
mov
jnp
movs
outs
xchg
pop
nop
xor
push
xor
cmp
add
cmps
mov
sub
imul
popf
and
mov
dec
dec
xor
in
jl
xchg
test
xchg
inc
push
stc
dec
aaa
push
ret
aas
ja
push
and
fcmovbe
jmp
js
jo
mov
(bad)
loopne
jl
xlat
jns
imul
dec
daa
ret
aas
push
das
mov
mov
jmp
retf
iret
push
aas
jb
lods
movs
out
ins
repz
jecxz
push
adc
cwde
push
jo
lods
adc
sets
pop
sbb
pop
cmc
(bad)
jmp
fistp
push
js
push
ss
daa
arpl
inc
mov
mov
sub
jle
push
loope
sbb
xor
dec
xor
push
xchg
test
fmul
and
pop
jae
xchg
push
adc
jmp
(bad)
xor
push
or
imul
push
in
cmp
int
shl
in
mov
dec
push
dec
in
xlat
jmp
popf
mov
jmp
cmp
lea
pushf
pop
pop
(bad)
mov
jnp
xchg
mov
jl
jg
jecxz
lock
aaa
xchg
in
sbb
lods
pop
push
data16
push
mov
sub
loop
push
aas
fstp
lock
sub
popf
mov
or
pop
pop
sbb
ret
pop
cmp
jnp
inc
jbe
pop
pop
mov
add
push
shl
test
sahf
inc
push
jmp
mov
sub
in
mov
inc
adc
jae
xor
mov
xor
mov
or
out
pop
ss
(bad)
cld
inc
inc
aad
add
jmp
hlt
cmovle
retf
push
push
add
adc
movs
imul
lock
cmps
push
icebp
mov
mov
sub
aam
mov
neg
inc
test
rol
test
cs
ret
(bad)
adc
add
inc
fadd
cmp
(bad)
loop
adc
retf
jb
mov
out
adc
scas
in
and
cmp
out
in
sbb
mov
call
sub
xchg
mov
xor
sub
ret
cmp
jae
jae
push
xor
sbb
ret
nop
jnp
div
daa
int3
add
xor
push
rcr
int
xchg
dec
repnz
mov
lea
ja
jno
arpl
add
retf
push
cwde
push
ror
xchg
dec
push
or
ret
fcomp
lea
ja
retf
lods
sub
js
mov
stos
add
inc
int
and
xchg
jb
sub
add
(bad)
fidiv
fdiv
and
xor
push
push
or
ds
nop
mov
mov
out
test
pop
jmp
sub
mov
(bad)
popa
push
pushf
ret
sub
inc
adc
scas
inc
ret
lods
(bad)
dec
daa
in
mov
imul
lock
out
jbe
mov
inc
movsx
idiv
mov
pop
xor
push
mov
sub
xor
mov
loop
sbb
jg
push
outs
repnz
jmp
cwde
movs
xor
push
std
std
dec
leave
neg
inc
iret
cmps
pop
or
js
push
cmps
push
fidivr
push
dec
imul
mov
jmp
popa
push
rcr
retf
jbe
ins
lds
stos
enter
jmp
cmp
xor
cmc
pop
xchg
leave
ret
scas
inc
jae
out
(bad)
movs
xor
jae
shl
out
dec
cs
(bad)
imul
fmul
inc
sub
shr
mov
sub
sub
inc
shl
sbb
dec
inc
clc
pop
(bad)
pop
dec
sub
clc
loope
rcl
arpl
cdq
cwde
call
push
mov
jmp
push
pop
xor
data16
ds
cld
jmp
and
jo
fadd
mov
mov
or
sti
jmp
sar
inc
fidiv
and
pushf
sub
aaa
inc
sub
jl
jns
aam
dec
jnp
iret
imul
and
mov
bnd
sahf
dec
xor
mov
iret
and
cmps
or
arpl
jge
adc
jns
fcomp
jns
ficomp
mov
test
ret
in
dec
push
pusha
ds
xchg
ja
xor
fist
call
popa
repnz
out
scas
xchg
add
mov
movs
add
add
loope
mov
cs
pop
aad
aam
xchg
push
adc
jmp
pushw
dec
cmp
push
imul
pop
data16
imul
jmp
or
cld
rol
mov
jbe
jmp
je
push
inc
push
stos
cmps
mov
addr16
(bad)
rol
sub
xchg
xchg
mov
sar
dec
or
sbb
push
pop
dec
or
mov
rcl
xlat
inc
xor
cmps
das
popf
mov
jo
movs
sahf
dec
jo
ins
cmp
fimul
pushf
aam
add
cdq
cmc
mov
adc
test
int
sub
sub
ds
xchg
fst
ds
mov
sar
add
daa
in
mov
add
mov
ror
push
pop
in
sbb
popf
inc
push
sub
pusha
adc
(bad)
stos
ss
test
adc
xchg
mov
jb
cmp
out
fmul
sub
sti
pushf
leave
push
mov
pop
mov
lahf
sbb
mov
mov
add
shl
push
mov
lds
jmp
lea
and
cli
inc
ds
out
scas
and
or
jmp
sti
inc
cld
(bad)
or
ret
cmc
add
data16
cmp
enter
sbb
mov
mov
jmp
dec
jb
test
or
add
pop
adc
mov
test
jp
outs
test
sub
lods
dec
jno
test
pop
fwait
lock
mov
jle
outs
pop
loopne
das
and
inc
inc
mov
out
cmps
js
ret
adc
sub
mov
cmp
cdq
xchg
pop
lahf
xchg
fwait
mov
fwait
popf
cld
mul
icebp
loope
rcl
mov
mov
fwait
inc
outs
push
push
rcl
lods
xchg
test
dec
out
rcr
sub
cmp
out
mov
js
adc
pop
cmp
loopne
jns
cmps
inc
jnp
fisubr
cmps
pop
scas
repz
mov
out
in
aam
add
add
sub
nop
(bad)
popf
daa
or
fadd
dec
ss
cli
fld
imul
je
push
popa
fld
or
sub
aam
popf
xchg
sub
int
les
cmp
aaa
out
jne
jl
sub
mov
sub
pop
mov
xchg
mov
push
test
lds
jnp
loop
dec
push
in
cmp
adc
ins
pop
and
out
dec
add
add
pushf
mov
arpl
mov
pop
jecxz
shl
dec
xor
dec
inc
mov
(bad)
push
sbb
fcomp
(bad)
jle
cmps
ret
sub
call
int
mov
mov
lods
sbb
bswap
repz
addr16
cmp
dec
pop
xlat
jecxz
repz
test
inc
jp
mov
jle
je
repz
ds
cmp
dec
popa
dec
stc
mov
fsubr
fistp
dec
sbb
leave
ret
stos
fcomp
mov
test
cmps
jl
jp
inc
jne
test
sub
push
dec
fsubr
add
jae
scas
jl
cli
inc
test
retf
push
popa
push
sti
and
mov
ins
inc
jge
xchg
xor
retf
cld
movs
les
mov
pusha
or
retf
cmps
lock
or
retf
adc
push
mov
xchg
das
aad
and
xchg
pop
pop
push
jae
jnp
mov
cmp
xor
push
shl
jecxz
xchg
xchg
mov
loope
je
sbb
jl
cmp
icebp
xor
push
fld
je
aaa
jle
jp
outs
xchg
sbb
pushf
jo
adc
inc
sar
xor
ret
shl
movs
push
int3
or
adc
into
push
retf
mov
or
or
jo
pop
push
fdivr
in
rcl
fadd
or
inc
pop
pop
arpl
jno
xlat
addr16
mov
in
mov
lea
sub
retf
loop
lahf
or
sti
inc
scas
lea
mov
dec
ret
daa
ss
outs
xchg
lahf
gs
lock
cmp
call
or
dec
(bad)
movs
scas
mov
imul
je
pop
and
(bad)
pop
mov
xlat
inc
xor
push
daa
test
fbld
mov
mov
mov
mov
lds
lahf
pop
scas
push
mov
es
in
stc
mov
addr16
enter
out
jecxz
xchg
adc
xchg
in
lds
push
or
push
jne
test
mov
fwait
mov
aam
lods
fchs
jnp
sbb
push
dec
mov
pop
sub
imul
test
jne
fisub
scas
mov
cmc
rdmsr
cmp
cs
fisub
pop
jl
adc
or
pop
push
movs
push
into
sub
ins
pop
outs
xchg
clc
lock
aad
cmp
in
add
sub
jl
sub
or
inc
hlt
mov
mov
into
(bad)
sbb
mov
or
inc
iret
int
mov
push
mov
add
xchg
cmp
shl
inc
jmp
mov
dec
xor
repz
mov
aaa
in
mov
ret
cmp
dec
jmp
gs
je
xor
ret
pop
movs
data16
test
pop
jmp
xchg
jno
aaa
cwde
push
mov
in
int3
fisttp
lods
cli
out
push
inc
hlt
enter
mov
dec
or
xchg
into
(bad)
mov
inc
jno
xchg
fst
mov
test
scas
in
inc
das
out
jbe
daa
push
int
lahf
leave
or
aaa
adc
in
mov
ins
or
ins
clc
imul
inc
dec
xor
dec
cmp
cmp
(bad)
es
mov
mov
add
adc
loopne
adc
inc
jp
test
repnz
test
dec
(bad)
pop
jae
mov
sbb
mov
jg
jb
ret
mov
icebp
xchg
adc
scas
std
hlt
inc
ss
imul
mov
popf
push
cld
mov
mov
xchg
repz
in
mov
fcomi
xor
js
fild
icebp
inc
add
int3
adc
mov
mov
(bad)
push
inc
dec
mov
repnz
lock
dec
mov
ins
icebp
fcomp
aas
sub
mov
leave
iret
hlt
cmp
mov
cmp
mov
add
jns
mov
fcom
xor
mov
mov
retf
daa
jp
sahf
mov
ror
test
mov
add
mov
pop
inc
mov
inc
in
fs
out
std
xor
jle
mov
lahf
push
cld
stos
cs
push
or
pop
push
cmps
outs
adc
addr16
cmps
jg
dec
fabs
xor
in
mov
fsubrp
lods
jge
and
fbld
dec
add
sti
cmps
stc
dec
xchg
(bad)
cmp
shr
push
xchg
dec
or
xor
jle
mov
les
add
cmp
rcl
add
mov
add
pop
mov
dec
push
push
jbe
(bad)
clc
mov
gs
or
and
or
jmp
dec
aas
ror
jmp
and
movs
retf
sti
test
ins
push
jno
dec
push
sbb
adc
jae
jp
test
or
(bad)
fdivr
inc
jne
pop
and
jge
xor
inc
pop
inc
mov
je
sti
cld
dec
fwait
mov
mov
add
adc
push
repz
outs
add
sub
pop
jmp
mov
add
pop
mov
inc
add
(bad)
ret
and
out
dec
repnz
clc
leave
ret
adc
cwde
cmp
xlat
outs
mov
out
inc
mov
sbb
and
pop
inc
or
add
fsubr
jmp
and
push
pushf
or
push
call
xor
(bad)
adc
scas
pinsrw
jns
ins
in
add
mov
sub
jb
cdq
push
mov
push
idiv
fsub
add
xchg
dec
scas
adc
push
add
and
ficom
mov
data16
sbb
mov
rol
add
or
fwait
iret
ficom
xor
iret
ja
mov
sar
jns
not
sbb
sub
das
int3
jae
mov
xor
mov
jge
dec
mov
add
xchg
iret
xrelease
in
ret
popf
xchg
leave
cmps
xchg
add
cmp
(bad)
in
out
pushf
jnp
ret
cld
fsincos
cmps
mov
jle
or
jge
push
loop
sbb
(bad)
iret
leave
arpl
mov
mov
cmp
mov
inc
inc
sub
out
movs
xor
cmc
fisub
or
test
or
or
sub
sti
(bad)
lea
adc
stos
adc
sbb
repnz
enter
jge
cwd
(bad)
jg
sub
inc
xchg
jp
mov
mov
je
mov
pop
pusha
xchg
push
xchg
sbb
and
(bad)
cmp
je
mov
or
(bad)
mov
adc
jae
adc
inc
and
jbe
sahf
std
test
adc
repz
imul
repz
push
test
in
pop
push
inc
shl
clc
jp
lods
mov
ss
mov
jo
xor
or
leave
popf
mov
fnstsw
fstp
mov
jecxz
pop
dec
jmp
cmp
mov
or
pop
sub
push
and
mov
clc
pushf
cwde
mov
jno
dec
lods
jmp
out
mov
sti
adc
hlt
aam
xchg
mov
jbe
daa
loope
xor
pop
sub
stos
cmp
in
sub
mov
dec
push
icebp
and
inc
sub
clc
pop
(bad)
int3
jne
or
mov
outs
xor
or
jg
adc
push
xchg
dec
xor
bound
mov
dec
(bad)
ret
inc
or
dec
in
cwde
jg
stc
push
aaa
pop
scas
into
dec
stc
push
push
mov
xchg
cmp
pop
ins
mov
iret
scas
add
fidivr
mov
arpl
mov
dec
rcl
add
jbe
xor
imul
fist
inc
xchg
cmp
push
and
adc
bnd
mov
icebp
xor
(bad)
cli
and
pop
mov
(bad)
cmp
ss
adc
aam
pop
and
ss
jmp
mov
inc
lods
aas
dec
cmp
rol
xor
mov
into
ficom
(bad)
rcl
movs
lfs
mov
test
dec
es
fld
push
pop
ds
push
movs
jno
das
xchg
add
and
loop
ins
xor
jp
stc
std
outs
add
out
icebp
rcr
les
pop
jp
in
mov
push
sub
jl
pop
cld
mov
mov
outs
enter
adc
cmps
ds
imul
retf
mov
iret
dec
pushf
sub
mov
mov
sbb
mov
mov
(bad)
aad
mov
(bad)
vunpckhps
fidiv
add
push
add
cmp
pop
adc
enter
dec
test
sti
jne
push
push
mov
push
fcomp
and
add
xchg
push
sbb
jb
in
or
sub
lock
xlat
mov
fild
or
cli
retf
mov
mov
arpl
pop
stos
sbb
push
push
inc
and
call
rol
sub
and
xchg
(bad)
mov
inc
push
out
inc
add
and
mov
std
imul
pop
arpl
or
retf
cwde
add
cmc
lahf
leave
push
add
arpl
pop
(bad)
addr16
mov
daa
mov
dec
cld
sar
jb
xor
jmp
mov
mov
inc
in
mul
popf
inc
int3
or
test
fisttp
push
pop
test
(bad)
mov
loop
cld
add
lods
jg
push
mov
out
adc
mov
(bad)
iret
inc
(bad)
pushf
inc
push
test
xor
inc
in
add
das
cdq
xor
mov
retf
(bad)
mov
popf
out
ror
mov
lds
movs
mov
cmps
out
cmps
test
ja
xchg
dec
sub
sub
xchg
xchg
popa
sub
int
mov
sub
jnp
dec
jns
ins
lea
sbb
inc
loope
pop
mov
dec
cmps
or
fs
mov
ins
lods
or
test
jne
jp
sbb
loope
les
cld
cmp
and
mov
fwait
xor
pop
sahf
les
aad
lods
repz
(bad)
xchg
dec
xor
out
dec
cmp
stos
adc
fistp
cmp
icebp
push
mov
gs
inc
es
aas
mov
xor
sub
mov
les
add
jmp
push
xor
lea
cmp
out
inc
or
enter
idiv
repz
jo
cmps
sub
mov
pop
ret
inc
or
push
enter
sub
ins
jp
jae
xlat
hlt
nop
adc
xor
sub
jb
jb
adc
ret
repnz
dec
dec
sub
push
scas
aas
xor
xor
stos
lock
and
bound
mov
jb
adc
dec
dec
jmp
dec
or
push
mov
test
sub
enter
cld
loop
add
fadd
jg
or
and
test
or
test
leave
dec
cmp
pop
leave
push
test
xchg
pop
(bad)
xlat
out
sub
arpl
xchg
sub
and
hlt
mov
(bad)
pop
clc
push
xchg
add
call
in
push
inc
cmps
xchg
in
dec
cmp
push
stc
xor
push
ja
adc
push
mov
sbb
cld
xor
test
adc
and
sbb
dec
and
je
out
add
and
pushf
add
push
daa
out
cmp
lods
leave
sub
cmps
dec
mov
jmp
mov
or
cwde
fldenv
mov
mov
mov
jae
scas
sbb
jno
adc
xor
loop
ret
(bad)
bound
loop
jae
fcom
mov
ja
das
fwait
in
in
jmp
and
jge
mov
push
stos
xor
pop
fld
imul
fsubr
mov
(bad)
fcomip
sbb
imul
cmps
push
push
inc
xchg
push
adc
push
loopne
xchg
sti
dec
inc
mov
ins
icebp
je
mov
push
add
lods
push
or
jmp
add
aam
clc
test
jl
scas
in
mov
aad
cmp
or
cdq
cli
movhlps
fdiv
xor
int
pop
(bad)
(bad)
(bad)
ins
mov
icebp
les
xchg
mov
movs
inc
cmp
jg
int3
outs
cmp
fs
pop
sub
jo
retf
or
pop
and
or
loope
add
xor
xor
mov
jg
(bad)
popa
adc
(bad)
cdq
inc
pop
jmp
aad
sub
xchg
and
xor
jl
jle
data16
scas
fmul
sub
sbb
pusha
or
xchg
movs
out
sahf
rcl
pop
stos
push
hlt
mov
inc
sbb
pop
inc
je
loop
and
aad
push
inc
xor
fisttp
out
adc
inc
pop
adc
or
cmp
cmp
pop
push
or
aam
ja
sbb
pop
push
adc
add
xchg
or
jno
cs
out
out
add
imul
out
cld
pop
cmp
lahf
pop
pop
test
mov
dec
repz
je
leave
cmp
push
pop
nop
jno
out
aam
inc
into
mul
cmps
xchg
dec
jb
mov
jmp
add
dec
mov
fsub
sub
scas
imul
aam
mov
jle
fst
pop
sub
test
fild
das
cmp
xchg
mov
pop
call
add
fucomip
enter
frstor
sar
push
repz
imul
aad
sti
adc
lock
inc
pop
xchg
and
push
das
sub
mul
adc
fs
mov
mov
and
mov
jno
in
loop
and
add
out
fist
popf
stos
inc
repz
idiv
mov
cmp
mov
addr16
lock
pop
jnp
outs
out
cmp
xchg
outs
or
das
(bad)
dec
mov
jnp
sub
repnz
movs
and
inc
add
pushf
(bad)
cdq
inc
mov
lock
lmsw
xchg
add
xor
xor
jp
hlt
adc
out
jb
and
xchg
add
add
mov
jmp
test
sub
adc
xchg
inc
cmps
sub
mov
rcl
adc
xor
js
xor
in
xchg
mov
mov
jge
push
jo
call
xchg
sub
and
ss
xchg
outs
outs
aaa
xchg
add
aad
or
in
and
mov
pop
add
cmp
mov
jecxz
or
or
clc
frstor
adc
add
push
push
sbb
cmp
jbe
hlt
shrd
aaa
xor
std
fstp
outs
inc
adc
mov
hlt
test
std
test
mov
mov
mov
push
out
xchg
out
mov
js
aaa
jno
mov
jmp
jmp
loop
out
mov
xor
imul
xchg
dec
sub
mov
stos
rol
fisubr
inc
add
icebp
pop
mov
sti
es
pop
data16
retf
push
fimul
mov
dec
xchg
lods
aad
pop
mov
sbb
xor
add
pusha
mov
imul
xchg
test
int3
ss
mov
and
fld
xchg
jmp
mov
(bad)
test
cmp
mov
jo
pop
dec
push
inc
adc
add
lods
cmp
jle
jne
jmp
lahf
pop
jle
jg
mov
popf
push
add
test
cmp
xchg
and
fistp
jo
ror
aad
mov
addr16
mov
jnp
mov
adc
imul
inc
(bad)
ror
mov
out
add
aas
scas
into
lods
in
mov
repnz
sbb
shl
adc
mov
clc
jmp
movs
ss
xchg
adc
addr16
fdivr
lea
outs
or
cmp
enter
and
repz
cli
daa
in
rol
dec
bound
xchg
push
xchg
pusha
das
daa
add
xchg
inc
pop
cdq
xchg
out
out
xchg
aam
xchg
(bad)
pop
and
bound
jne
add
cmc
lea
pop
loope
sti
lea
add
clc
sbb
stos
mov
int
les
mov
sub
clc
enter
mov
xchg
xor
jmp
cmp
(bad)
call
adc
ds
out
bound
(bad)
fsubr
mov
icebp
leave
iret
mov
popf
or
mov
mov
adc
les
call
(bad)
mov
sub
or
mov
xor
not
mov
push
jno
push
loop
test
sub
add
or
pop
js
lock
lahf
(bad)
xor
and
shl
sub
xchg
ja
pop
je
adc
pushf
jecxz
loop
and
jecxz
dec
rcl
pop
jle
sbb
mov
mov
inc
movs
inc
xlat
lods
(bad)
fisubr
mov
in
adc
repnz
jmp
lahf
mov
out
pop
int3
add
jb
jbe
(bad)
je
nop
rol
mov
int
in
mov
test
adc
leave
mov
adc
pop
mov
inc
sub
xor
inc
int
outs
xchg
imul
and
adc
arpl
mov
sbb
xchg
inc
jne
or
nop
dec
in
test
cmp
push
jb
jnp
scas
pop
fwait
cmps
lods
mov
mov
imul
test
cmps
sbb
mov
push
sar
pusha
es
pop
movs
imul
nop
cs
hlt
in
(bad)
mov
inc
imul
in
pop
mov
jg
(bad)
mov
dec
mov
or
aaa
lock
sbb
xchg
push
pop
push
(bad)
mov
ret
pop
and
xor
(bad)
in
sub
fwait
int
(bad)
push
inc
adc
jo
jne
out
outs
pop
rcr
sbb
retf
mov
(bad)
loopne
or
or
(bad)
dec
fwait
jb
xchg
xor
stos
pusha
hlt
jl
hlt
cwde
stos
jmp
push
inc
into
mov
clc
repz
inc
ror
fnstcw
sbb
frstpm(287
sub
call
push
cdq
into
cmp
mov
call
sbb
pop
aaa
mov
and
xor
aas
(bad)
imul
lods
xor
jge
xor
test
cmp
iret
fwait
loope
pop
or
cmp
and
scas
into
(bad)
jp
add
adc
pmullw
pop
adc
fmul
and
jae
pop
stos
std
inc
scas
inc
enter
mov
xor
xor
and
ret
sub
xor
out
xchg
jmp
js
and
and
xchg
and
mov
pop
dec
xchg
mov
in
(bad)
fdiv
mov
add
cmc
xchg
cmps
cmc
sbb
cwde
mov
std
pop
adc
mov
imul
push
jnp
jno
not
adc
ds
or
loopne
mov
imul
das
retf
neg
popf
mov
adc
mov
xchg
or
adc
shl
dec
call
xor
adc
jmp
pop
mov
mov
out
(bad)
sar
cmp
aaa
movs
cmp
stos
out
mov
cmp
adc
adc
lock
push
dec
xchg
dec
jmp
xor
xor
xchg
loope
push
arpl
cdq
push
push
jb
aad
movs
mov
loopne
jle
lods
(bad)
jnp
mov
das
shl
mov
bnd
test
dec
or
lods
mul
mov
jl
xadd
mov
test
mov
dec
inc
outs
add
mov
int3
push
push
push
or
je
sti
sar
(bad)
repz
sar
dec
sbb
cli
stc
xlat
xchg
xor
sub
adc
ficomp
cmp
int3
xchg
call
stos
mov
fidivr
xlat
mov
je
mov
das
sub
adc
or
icebp
jne
inc
das
pop
xchg
repnz
add
add
and
lods
retf
out
push
mov
inc
mov
cmp
psllq
mov
pop
sbb
push
dec
hlt
repnz
in
jle
lea
inc
test
movs
mov
xlat
retf
aad
aad
inc
dec
push
cwde
leave
xchg
(bad)
cmp
inc
push
shl
sbb
popf
mov
cmp
sub
lds
stc
mov
(bad)
(bad)
call
pop
jo
movs
cmp
mov
cli
cmps
enter
jge
fucom
aam
cmp
pop
(bad)
dec
ja
retf
inc
and
jo
(bad)
pop
out
popf
aaa
cmp
popf
and
jnp
mov
or
pushf
cwde
xchg
xor
push
fwait
shl
xor
xchg
inc
mov
mov
pusha
jae
jnp
in
xor
mov
push
ja
push
inc
xchg
mov
add
xchg
jae
pop
and
xlat
pop
aaa
ss
test
js
jge
jp
lock
fild
adc
push
xlat
movs
push
add
xor
cmp
jno
or
jg
and
or
(bad)
pop
(bad)
sbb
aam
mov
jno
lea
jge
pop
and
push
mov
outs
fisub
pop
test
ins
mov
inc
clc
or
lods
call
cwde
jle
dec
clc
push
daa
or
pusha
outs
or
push
pop
iret
les
pop
fistp
inc
mov
jne
xor
mov
and
pop
sbb
mov
fst
mov
dec
fld
loope
ins
sub
stc
ret
dec
stos
sub
lods
or
mov
pop
jo
mov
rcr
sub
mov
loop
imul
dec
retf
pop
and
into
es
loopne
xchg
pop
pop
nop
popf
pusha
sahf
adc
and
out
aad
adc
adc
shl
test
mov
lahf
cmp
imul
add
mov
adc
imul
pop
movs
or
mov
adc
repz
test
xor
push
adc
shr
adc
xchg
sbb
inc
and
lock
jo
pop
xchg
call
cmps
mov
aam
das
push
mov
cmp
pop
rol
push
and
dec
(bad)
fnstcw
aad
pop
mov
adc
push
push
xchg
or
mov
and
js
mov
in
repz
stos
cli
ficomp
mov
mov
add
inc
pop
ins
sub
lods
idiv
loope
test
mov
(bad)
mov
and
inc
in
push
lahf
ficomp
xchg
test
mov
std
and
push
cmp
push
xor
cmc
or
xchg
shl
std
fstp
(bad)
jbe
and
fstp
add
mov
test
rcr
shr
mov
out
sbb
jne
inc
push
xchg
or
sbb
sbb
mov
mov
cmp
add
or
mov
cmp
ror
ficomp
(bad)
pusha
cmp
sbb
popf
pop
retf
lods
loope
scas
adc
dec
pmulhw
cld
test
inc
push
fdivr
mov
mov
cmps
and
jl
inc
xchg
add
push
fadd
(bad)
mul
ror
xchg
add
xchg
xor
cmps
push
gs
dec
adc
int
jecxz
outs
inc
xlat
inc
not
mov
ror
jnp
sar
and
stc
dec
stos
pop
sub
sub
or
div
mov
jle
pop
xor
out
inc
xor
push
es
ins
mov
cmp
dec
loopne
cmps
in
dec
jnp
ret
xchg
cmps
sbb
rol
hlt
jmp
cmp
cmc
or
cmp
mov
test
out
fwait
adc
out
imul
cwde
jecxz
mov
xor
pop
cmp
call
jbe
push
shl
outs
ror
shl
pop
cli
pop
and
out
and
dec
xchg
pop
in
pop
icebp
jmp
retf
hlt
das
jp
mov
pusha
push
mov
pusha
sub
stos
shr
sbb
lahf
out
fstp
repnz
jmp
push
mov
(bad)
or
and
xor
or
std
fdivr
repnz
cld
dec
in
add
and
mov
stc
test
fisubr
cmp
aaa
mov
stos
icebp
sahf
daa
call
movs
push
mov
jnp
sti
mov
addr16
xlat
sbb
out
sbb
mov
aad
test
popf
pop
fcom
stc
dec
mov
dec
ds
adc
xor
inc
mov
pushf
sub
sub
inc
ins
mov
dec
jge
in
mov
(bad)
cmp
pushf
add
adc
fstp
fadd
int3
sub
mov
js
xchg
dec
jbe
push
mov
mov
retf
adc
fidivr
ror
and
pop
cs
jno
add
sub
rol
dec
mov
ins
adc
in
sbb
iret
adc
inc
pop
xor
push
sahf
loop
mov
push
sub
sbb
out
mov
iret
lods
(bad)
push
lock
cmps
je
scas
xchg
in
sbb
outs
outs
cmp
add
adc
mov
aad
xor
pop
jmp
int3
mov
add
mov
ds
ins
mov
xchg
sub
arpl
fnstsw
and
jmp
dec
push
add
(bad)
cmc
fs
xor
ins
cmp
scas
add
push
mov
pop
setge
xor
dec
icebp
jmp
dec
call
hlt
dec
mov
cmps
cmp
je
das
mov
int3
and
sbb
cld
push
neg
cmp
(bad)
mov
retf
mov
push
mov
int
out
or
lahf
retf
cdq
mov
sar
dec
xchg
loopne
jl
cwde
(bad)
sub
fs
and
cmp
loop
fwait
ins
mov
mov
add
pushf
mov
stc
add
pop
retf
daa
mov
push
pushf
stc
adc
int3
jns
mov
push
jl
mov
cdq
bound
xchg
or
out
dec
sub
pop
aad
clc
xor
(bad)
jb
stos
scas
ds
mov
push
lds
fidiv
and
lds
iret
sbb
pushf
mov
fdivr
aas
loope
sub
in
and
xchg
pusha
xor
mov
xchg
mov
lock
shl
inc
mov
xchg
inc
add
jg
fst
in
arpl
pop
sub
sbb
sub
jae
in
test
add
or
sub
icebp
gs
mov
scas
data16
xchg
mov
js
adc
sar
cld
adc
push
xchg
inc
nop
cmc
(bad)
pop
inc
pop
rol
outs
mov
xor
cmc
fwait
or
sub
stc
push
jmp
das
lock
push
fist
lahf
add
hlt
jae
inc
ins
mov
mov
iret
xor
test
xchg
mov
enter
out
mov
test
xlat
xor
or
fistp
(bad)
in
cmp
push
mov
js
not
js
xor
mov
or
lock
(bad)
clc
push
sbb
loopne
xor
mov
sbb
into
(bad)
mov
stos
popa
or
(bad)
cs
cdq
rcl
test
dec
cmp
fwait
sbb
ja
sbb
adc
stos
es
jg
pop
jno
shr
or
mov
pop
mov
daa
test
xor
repnz
fs
jge
add
dec
mov
repnz
loopne
xchg
cmp
stc
xchg
and
mov
or
cmps
cmp
mul
repz
jle
movs
std
clc
fnstsw
(bad)
pop
mov
mov
enter
je
xchg
repnz
push
cld
bound
enter
fbld
jns
out
jno
mov
add
jg
jp
or
cld
jmp
mov
cmps
sti
icebp
jb
pop
adc
call
imul
cmp
test
sub
pop
mov
pop
and
and
setl
mov
call
hlt
and
addr16
dec
fldenv
sbb
or
pushf
sbb
ret
mov
cmp
cli
rcr
xlat
pop
lock
cli
cmp
jmp
or
push
add
inc
sub
jecxz
stc
pop
pop
rcl
inc
jae
sub
loop
cmps
jbe
in
dec
std
(bad)
mov
fisub
data16
(bad)
jle
pop
call
(bad)
fld
push
pop
stos
scas
lahf
xlat
pop
test
jo
xchg
popf
(bad)
and
into
dec
mov
xor
push
xor
ins
jge
dec
adc
sbb
scas
fxch
push
push
push
fs
xchg
dec
jecxz
and
mov
fwait
add
mov
and
sub
mov
fisub
fiadd
xor
(bad)
into
loopne
neg
mov
adc
fisubr
nop
cwde
dec
fldcw
sti
ins
in
sub
xchg
test
rol
test
lea
add
ins
adc
cmc
ja
test
pop
and
mov
sub
and
push
mov
rcr
pop
sbb
cmp
mov
test
xchg
jmp
sbb
outs
(bad)
jecxz
stc
xchg
or
test
(bad)
dec
jle
jmp
sbb
std
pop
bound
in
sub
push
dec
jp
icebp
aad
ja
push
add
mov
arpl
sub
mov
dec
les
xchg
lea
aas
shr
fisttp
mov
(bad)
retf
cmp
mov
sub
cdq
aaa
or
pop
push
repz
or
jnp
sbb
add
push
shr
push
mov
pop
ss
adc
fist
les
push
sub
fisub
fs
jle
es
xor
mov
fnstsw
xor
dec
in
fwait
and
aas
stos
push
push
cmp
inc
lock
pop
in
lahf
pop
retf
jns
cmp
push
icebp
push
cmps
jmp
stc
cmp
add
dec
push
repz
je
sub
add
push
aam
fs
(bad)
call
jmp
push
fsub
dec
enter
mov
fdiv
xor
add
out
sbb
mov
out
jmp
fimul
outs
adc
pop
mov
and
sbb
push
popf
mov
int
shl
inc
mov
cmc
push
jno
movs
ret
call
in
xor
mov
mov
pop
jecxz
addr16
repnz
push
or
scas
xchg
call
cmps
nop
adc
inc
cmc
add
inc
mov
fnsave
cmp
pop
fwait
pop
mov
hlt
sahf
jnp
nop
das
mov
inc
sub
pop
mov
pusha
dec
test
jne
(bad)
jo
mov
ins
in
jbe
les
pop
lahf
repz
test
sti
or
in
inc
lea
add
pop
xchg
mov
rcr
jnp
in
mov
rcl
jb
pop
iret
pop
shl
pop
(bad)
jle
pushf
xor
ja
test
ffree
dec
pushf
xor
into
aaa
call
call
dec
mov
in
data16
dec
or
loopne
xchg
sbb
fisttp
mov
fcomip
pop
cli
cld
lahf
cmp
mov
jecxz
sub
test
jl
xor
movs
cmp
adc
and
xor
arpl
fwait
aam
pop
jnp
jp
das
mov
das
inc
movs
jle
pop
add
jmp
xor
bound
or
mov
inc
xor
cmp
dec
adc
int3
enter
imul
lods
push
mov
xchg
mov
mov
mov
fptan
or
not
(bad)
push
mov
push
maxps
ss
mov
cmps
pop
lea
add
xchg
add
shl
ss
add
pop
sub
test
call
lahf
rol
xchg
pop
xchg
int3
ja
and
add
imul
aaa
sub
pop
(bad)
cmc
stos
leave
retf
cli
jbe
fst
dec
fistp
dec
xchg
xlat
jbe
clc
inc
fnsave
movs
jnp
iret
push
call
ins
and
popf
cmp
push
push
pop
je
(bad)
aad
sub
mov
add
out
imul
push
inc
or
ds
push
loope
lods
and
sub
dec
shl
stos
push
in
aas
pop
and
jbe
into
push
dec
enter
pop
cwde
jne
sbb
sub
int
pop
in
jmp
jnp
cmps
(bad)
mov
int
jns
cs
lods
pop
cmps
repz
push
cdq
and
(bad)
leave
popa
fcomp
enter
dec
xor
test
into
int
inc
xchg
pop
iret
bound
ret
inc
mov
push
ret
and
jbe
push
xor
rcl
add
or
gs
popf
sub
sbb
jns
loope
int
repz
add
sub
mov
aaa
xlat
push
(bad)
ds
(bad)
add
mov
stos
ss
jmp
jo
nop
push
ins
sub
sub
inc
sub
xchg
fdivr
outs
mov
idiv
dec
xor
aad
sub
retf
test
pop
loop
outs
xchg
mov
ret
inc
pusha
out
inc
imul
mov
adc
mov
loop
or
ffreep
pop
mov
or
mov
xchg
push
imul
dec
xor
loopne
sahf
stc
daa
push
or
add
sub
sbb
mov
xor
jg
sbb
ins
mov
test
add
(bad)
cld
mov
mov
fadd
sub
ds
icebp
jg
dec
add
xchg
enter
jl
xlat
sub
xchg
push
fistp
(bad)
mov
call
imul
loop
test
rol
icebp
pop
mov
popf
out
and
cmps
dec
sar
cmc
call
cmp
xchg
adc
in
pop
add
inc
test
xor
ja
add
pusha
lock
cmp
(bad)
clc
push
pop
lods
push
idiv
mov
add
xchg
sub
in
dec
inc
dec
outs
sub
test
push
and
cmc
hlt
lods
shr
sar
daa
fist
aaa
adc
mov
stc
(bad)
js
cmp
xchg
jecxz
mov
or
aaa
sbb
sub
xlat
mov
pop
xor
jbe
mov
inc
cmp
lods
pop
retf
pop
inc
fidiv
int
pop
cmp
lods
and
and
push
ds
inc
cmc
push
ja
and
pop
push
push
add
sub
dec
loope
aam
xor
push
lock
jmp
into
jno
jmp
adc
sbb
loope
rcl
add
aaa
dec
push
pop
adc
jmp
sbb
(bad)
sbb
jl
fdiv
dec
mov
ret
mov
pop
mov
das
or
lock
add
sub
pusha
mov
inc
aad
mov
dec
cmp
push
sar
push
daa
jge
stos
adc
imul
ret
push
cmc
xchg
fst
add
inc
and
cmp
jl
loop
mov
lods
fidivr
outs
repnz
pop
push
mov
mov
push
inc
inc
(bad)
dec
in
adc
and
fld
sbb
push
test
ss
js
xchg
mov
sbb
push
(bad)
cmp
mov
adc
pop
icebp
mov
js
mov
jbe
inc
cwde
cmps
sbb
stos
pop
and
(bad)
scas
push
in
or
sbb
mov
in
mov
inc
xchg
(bad)
and
xchg
stos
mov
ds
icebp
les
mov
push
pop
cdq
jnp
outs
into
xor
call
clc
mov
imul
int
cwde
ss
jecxz
adc
add
mov
repnz
inc
mov
adc
test
movs
xchg
call
loopne
jle
push
inc
out
or
pop
mov
sub
loope
lock
repz
pslld
inc
test
scas
mov
mov
xlat
iret
rol
jge
inc
pop
clc
jmp
dec
test
call
mov
dec
sbb
xor
and
imul
fs
neg
and
pop
xchg
sbb
test
mov
jb
scas
test
arpl
(bad)
out
adc
mov
mov
push
dec
pop
mov
inc
sbb
fst
or
stos
lock
push
or
sub
pop
add
out
push
and
inc
mov
fs
push
lock
adc
sub
xchg
pushf
inc
into
sbb
cmp
repz
bound
mov
xor
lahf
and
lea
xor
aad
aas
mov
repz
adc
aaa
cdq
pop
sub
adc
fild
js
and
retf
sysret
dec
add
mov
aad
ss
aad
out
push
cmps
push
sub
daa
retf
aam
imul
outs
sub
outs
ret
pop
fcomp
jno
(bad)
adc
pop
mov
xchg
dec
mov
fcomp
jmp
jns
sub
add
(bad)
sub
jo
shr
js
scas
push
js
and
pop
call
enter
sub
clc
iret
cmp
shr
push
arpl
retf
shr
imul
sbb
sbb
xchg
or
mov
jb
mov
cmp
std
ins
jae
rol
push
pop
sbb
test
psubw
mov
mul
outs
retf
push
ins
cmps
enter
clc
cmc
out
pop
inc
pusha
stc
shr
push
repz
pop
ret
push
jbe
jp
scas
not
or
adc
cmp
mov
jns
xor
test
sub
bound
sbb
int3
inc
jns
xor
add
push
stos
aas
pop
jbe
fsubr
jbe
int3
cs
push
inc
loop
dec
add
dec
loope
and
add
xor
fcom
int3
icebp
add
inc
xchg
or
ret
or
ins
dec
lock
rcl
daa
mov
adc
int
jno
lds
sbb
scas
clc
sub
pop
f2xm1
xor
rcl
dec
mov
scas
pop
shl
or
cli
int3
mov
sbb
sar
xor
std
pop
or
dec
push
shr
xlat
hlt
lods
repz
cli
iret
mov
mov
mov
pop
mov
push
fwait
push
jle
dec
je
(bad)
pop
test
mov
inc
sbb
push
pop
mov
mov
or
in
xchg
mov
sbb
std
cmp
ret
jo
lods
(bad)
dec
mov
lock
pop
(bad)
fistp
fwait
icebp
addr16
push
gs
xor
mov
jae
adc
and
ret
es
xor
push
xchg
int
mov
repz
ss
cmp
mov
sar
mov
movs
mov
xor
inc
int3
or
sti
xchg
jle
dec
jns
mov
out
inc
fsubr
mov
dec
push
push
in
test
jae
popa
in
add
cmp
int3
cmp
inc
add
in
(bad)
pop
repnz
test
pop
loopne
sub
cld
aad
mov
cmps
inc
mov
xor
mov
sahf
sub
test
sbb
inc
ds
into
jno
adc
mov
fimul
repz
lds
ret
out
test
movs
pop
cmp
retf
mov
mov
add
rol
out
rcl
shr
mov
pop
movs
push
(bad)
push
dec
sub
mov
mov
nop
outs
setbe
aad
movs
push
and
push
inc
add
lock
pop
ret
(bad)
sub
xor
dec
aas
dec
jp
inc
sbb
or
sub
repz
sbb
sub
mov
push
xchg
mov
repnz
jo
jnp
das
sbb
mov
pop
push
cmp
cs
rol
loope
and
shr
xor
ins
jg
dec
jbe
jecxz
push
test
cld
xchg
(bad)
sbb
or
pusha
icebp
push
loope
inc
mov
fldcw
das
mov
and
mov
mov
or
popa
lds
mov
bound
js
add
sbb
jb
xor
jne
sbb
dec
cmp
xor
out
inc
xor
adc
cmps
out
pop
sar
jg
lahf
movs
xchg
es
iret
imul
icebp
fmul
cmp
jbe
sti
jmp
popa
mov
or
ror
and
jb
sub
sbb
jmp
pop
xor
push
mov
stos
fs
aas
pop
mov
jecxz
data16
mov
push
aas
jmp
mov
cs
ja
lahf
out
sub
outs
mov
mov
xor
(bad)
mov
add
fwait
mov
iretw
fisubr
hlt
ret
xchg
mov
xchg
lock
pop
sar
xor
repz
ins
add
dec
sahf
jp
mov
add
retf
push
loopne
or
in
div
sbb
test
fcomp
and
jo
inc
adc
rcl
mov
lea
in
push
inc
icebp
or
out
and
sbb
jp
dec
jno
cmp
mov
xchg
jmp
aas
xor
(bad)
mov
xchg
and
call
retf
mov
retf
xchg
xchg
repnz
dec
ficom
lock
cmps
jno
xlat
pop
cmp
repz
mov
rcl
add
push
scas
sbb
ins
je
ret
jge
cmps
loopne
shl
(bad)
out
cmps
jge
pusha
ss
mov
or
jb
mov
data16
and
sahf
aas
dec
jl
cmp
jne
jnp
les
imul
dec
rol
sub
push
into
cmp
ja
push
jo
mov
(bad)
sub
and
jmp
inc
test
icebp
adc
jbe
mov
jp
arpl
mov
mov
gs
(bad)
hlt
fnstenv
(bad)
test
pop
cmp
xchg
and
loope
add
daa
imul
sub
adc
or
ss
rcl
(bad)
retf
push
mov
ins
sub
push
les
inc
in
mov
loop
call
or
dec
test
cld
jmp
out
rcl
or
stos
aad
push
test
jmp
and
pop
mov
out
mov
add
stos
mov
fsqrt
jne
sub
mov
inc
jo
and
or
jnp
je
or
mov
lods
push
dec
icebp
call
mov
(bad)
rcl
adc
cmp
xor
push
in
inc
jle
xor
ss
adc
dec
and
hlt
in
mov
leave
movs
inc
imul
ds
pavgb
xor
cmp
jns
mov
mov
pop
ret
inc
jg
out
scas
pop
lea
aad
mov
(bad)
dec
fwait
sti
icebp
jle
pop
popf
retf
cmp
adc
jne
les
adc
aad
mov
pop
addr16
(bad)
iret
(bad)
(bad)
xchg
or
je
ja
sbb
mov
adc
push
aas
adc
mov
cmc
jl
dec
cmps
(bad)
loopne
(bad)
not
push
sbb
dec
cmp
add
mov
or
cmps
mov
out
mov
and
xor
imul
add
xchg
xchg
cli
out
jne
mov
push
shr
pusha
sbb
imul
cmps
or
dec
push
ins
cli
loopne
ins
inc
stos
mov
xor
pop
xchg
dec
retf
in
jge
jb
push
cdq
movs
add
and
xchg
cmps
and
sbb
js
imul
aaa
nop
scas
adc
lds
jae
jae
sub
ins
sti
shr
enter
push
mov
push
push
fwait
data16
mov
scas
mov
and
cmps
push
fsubr
fidivr
pusha
pop
aam
inc
cdq
dec
test
inc
dec
mov
shl
retf
jp
or
sbb
sbb
jb
loopne
xor
data16
mov
das
pop
inc
dec
or
pop
data16
or
or
or
xor
mov
xor
adc
adc
add
call
cmp
add
fcomi
inc
dec
xor
add
(bad)
mov
add
mov
aad
out
sar
push
jmp
xor
fst
xor
mov
aam
or
xchg
dec
aas
adc
push
movs
sti
pop
(bad)
ds
mov
mov
sbb
add
call
sub
adc
daa
jmp
xor
jno
push
retf
or
ja
adc
shl
mov
cmp
mov
stos
sbb
(bad)
or
dec
and
adc
cli
push
aaa
xchg
sbb
ret
push
xchg
ds
jne
jae
lahf
cmps
test
je
das
test
mov
js
xor
das
retf
dec
cmp
sub
and
jle
push
scas
mov
pop
shr
add
jl
dec
xchg
jae
push
xor
inc
xchg
loopne
nop
int
jle
xchg
xor
push
int
cmps
mov
inc
(bad)
cmps
jg
cdq
ror
je
sub
hlt
test
shl
leave
mov
xchg
call
dec
dec
pop
icebp
cmps
jge
(bad)
cmc
out
test
sub
(bad)
xchg
js
mov
repz
retf
js
push
sub
mov
jecxz
cdq
adc
xor
shl
jb
lods
mov
jbe
cs
ret
mov
cmp
sbb
mov
das
or
xchg
repz
cmp
cdq
lea
add
pusha
pop
pop
fcomp
icebp
or
je
cmp
sbb
dec
xor
(bad)
mov
fimul
sbb
jnp
sub
bound
in
dec
call
sub
ret
in
jne
mov
push
push
mov
pop
xchg
bound
cmp
fs
jg
sbb
(bad)
fldl2e
ja
mov
push
adc
mov
sbb
or
fdivr
sti
and
loope
adc
out
sahf
pop
fisubr
xor
add
push
cmc
dec
xor
jle
cmp
jp
fistp
ins
pusha
frstor
adc
aaa
(bad)
push
cmps
leave
push
fwait
mov
aad
stos
mov
cmp
in
cld
(bad)
popa
xor
xchg
sbb
or
mov
nop
mov
and
scas
pushf
jl
cmc
fisttp
nop
iret
je
mov
inc
xor
cmp
push
push
xchg
mov
cmp
leave
mov
mov
gs
push
and
shl
jb
xchg
jns
add
or
and
cld
int
ins
inc
hlt
or
clc
stos
fadd
and
add
ins
mov
push
adc
and
loop
cli
outs
repz
ds
jg
imul
xchg
cmps
jg
xor
jo
das
int
inc
and
or
int3
mov
xor
mov
jge
dec
adc
dec
enter
je
fxch
mov
jmp
add
mov
ror
xchg
gs
pop
(bad)
mov
inc
in
sub
jge
icebp
mov
test
push
xlat
rcl
pop
iret
int3
xchg
adc
push
sbb
sbb
in
aas
jmp
cmp
mov
mov
sahf
inc
and
jns
pop
hlt
sub
cmp
sbb
cmp
shl
rcr
test
push
xchg
arpl
int3
pop
ja
ins
sub
retf
nop
call
sti
ret
cdq
inc
dec
push
jg
(bad)
adc
pusha
and
sbb
es
sbb
fwait
in
adc
les
mov
fwait
(bad)
ja
fimul
(bad)
jns
mov
leave
fiadd
mov
mov
js
test
out
mov
and
enter
xchg
cmp
mov
scas
idiv
leave
sahf
adc
add
inc
push
pop
xchg
ins
or
pusha
pop
mov
mov
inc
xchg
out
add
or
add
mov
xchg
or
inc
push
ret
mov
mov
mov
dec
sub
sub
call
push
mov
mov
mov
inc
pop
xor
cwde
mul
sub
je
or
sar
cld
mov
test
fnsave
gs
ret
and
dec
retf
xchg
or
out
inc
test
xchg
mov
mov
leave
mov
adc
mov
ds
sub
inc
lock
enter
jge
ja
cmps
fisubr
xchg
or
and
xchg
stos
retf
or
xchg
(bad)
jae
leave
fidivr
jl
ss
fld
(bad)
sti
rcr
pop
jge
xlat
lock
xor
pop
mov
ret
sub
call
shl
cs
mov
div
mov
dec
adc
je
dec
out
and
mov
cmp
test
paddsb
sar
stc
inc
stc
jo
sub
lock
add
or
mov
fisttp
lock
scas
addr16
jge
mov
dec
aad
test
and
xchg
xor
pop
push
mov
xchg
in
outs
xor
psllq
push
es
jp
mov
push
cld
pushf
fcmovbe
push
mov
jg
mov
cmc
lahf
shl
mov
cdq
push
sbb
xchg
dec
cmp
sub
ja
test
add
inc
aad
pop
jae
out
pusha
mov
loopne
adc
imul
pop
jmp
push
movs
inc
dec
or
xor
ds
mov
daa
xchg
std
cld
pop
lahf
cmp
fwait
mov
mov
and
xor
out
add
jp
jmp
ins
leave
fiadd
ret
inc
int3
sub
xlat
jge
xor
test
add
ret
sar
fs
lock
lea
lahf
arpl
xchg
(bad)
lods
add
and
stos
adc
lahf
je
in
pop
std
aas
test
cld
ins
ins
push
xor
test
je
or
pop
je
stos
jle
cmp
aam
push
imul
(bad)
and
and
in
pop
dec
cdq
sbb
xlat
data16
mov
outs
cmp
xchg
pop
iret
push
sub
fs
test
sub
cdq
add
leave
ret
addr16
push
stos
lds
lds
repz
loop
pop
jo
xchg
fst
jl
cld
xchg
mov
(bad)
(bad)
test
adc
sub
test
addr16
inc
push
imul
(bad)
addr16
scas
adc
add
mov
lds
imul
lods
bound
add
movs
pop
jecxz
and
cmp
inc
pop
xchg
mov
or
or
pop
call
cmp
push
cmp
inc
cs
pop
call
daa
adc
mov
icebp
fnstenv
push
int
and
enter
push
test
mov
or
inc
int
sbb
test
mov
fild
rcl
mov
push
das
test
in
push
sbb
shr
dec
jmp
push
sub
ins
and
call
scas
jae
and
int3
inc
scas
ja
ror
outs
xor
test
xchg
xchg
pushf
mov
or
fmul
repnz
mov
aas
mov
or
mul
ret
adc
dec
sub
mov
jge
repz
add
cmps
loopne
inc
fprem
xlat
loope
not
cld
shl
dec
inc
aas
into
xchg
push
dec
cmp
fs
aam
push
mov
sbb
leave
and
cdq
adc
fcmovne
(bad)
or
into
add
adc
jge
(bad)
cmp
jne
cwde
aaa
jnp
out
les
fld
stc
dec
add
out
push
hlt
mov
shl
mov
data16
sbb
xor
lahf
cmps
fisub
xor
pop
add
jmp
sbb
xor
mov
mov
in
les
fistp
jne
add
jmp
loop
call
stos
or
mov
pushf
inc
shl
adc
shl
sbb
or
hlt
cmps
jl
push
and
in
aad
mov
cdq
popa
mov
movs
xchg
or
xor
stos
loope
sub
inc
idiv
mov
(bad)
pop
out
pop
cmps
mov
sbb
stos
push
push
rcr
(bad)
icebp
sbb
and
popf
loopne
push
sub
xchg
sbb
test
adc
ja
retf
test
cs
loopne
xor
push
loop
xchg
int3
cmps
stc
lods
pushf
xor
call
aas
pusha
fild
ret
or
dec
or
ins
sar
adc
push
add
sub
jb
mov
mov
stos
aaa
sbb
movs
cmp
push
jmp
loop
in
inc
dec
dec
out
ficomp
leave
or
adc
push
shl
hlt
sub
push
movs
in
enter
inc
adc
inc
and
add
adc
jge
stos
popa
or
sub
xchg
xchg
ret
mov
mov
xchg
dec
inc
jno
adc
test
in
repz
retf
add
sti
retf
jmp
add
xchg
icebp
mov
in
pop
inc
je
xlat
mov
cmps
add
sub
xchg
and
into
inc
pushf
xchg
cs
or
dec
cmp
or
clc
mov
cwde
jge
xor
nop
imul
adc
mov
or
mov
adc
dec
jb
outs
pusha
fwait
sbb
jo
add
mul
(bad)
shr
mov
mov
or
movs
add
outs
popa
sbb
stc
cmp
jb
call
and
adc
jb
xchg
popa
adc
hlt
lods
mov
dec
mov
cmp
call
rcl
mov
call
loope
or
pop
repnz
sbb
and
cmps
retf
daa
rcr
iret
add
repnz
ret
sub
call
jp
push
ficom
xchg
repz
add
mov
fidivr
inc
add
jns
fs
scas
sbb
(bad)
lods
xchg
punpckldq
jbe
test
(bad)
mov
jg
xor
jl
je
inc
scas
aaa
cld
movs
dec
es
into
scas
int
lock
inc
shl
sahf
lock
scas
and
or
mov
fld
aaa
neg
xchg
jmp
out
adc
adc
pop
cwde
jmp
ret
adc
mov
push
dec
xchg
mov
retf
xor
imul
arpl
mov
push
int3
inc
(bad)
call
(bad)
cmp
cmps
(bad)
jmp
xor
ins
mov
sbb
jns
pop
sub
adc
sbb
xor
stos
push
test
das
cmp
je
or
sbb
(bad)
addr16
or
inc
inc
ret
jp
mov
or
adc
test
std
pushf
pusha
adc
sub
cmp
xor
out
ret
push
mov
int3
in
adc
leave
div
jae
sbb
ds
(bad)
dec
jmp
inc
sbb
mov
retf
xor
mov
sbb
aaa
pop
dec
rcl
xchg
push
cmp
pop
mov
hlt
push
in
lahf
mov
ds
loop
push
xchg
js
cmps
xor
mov
call
inc
sub
cmps
adc
js
xchg
cmp
cli
jae
ss
cmp
ds
mov
xchg
add
mov
(bad)
jge
jno
test
rdmsr
xchg
xchg
sahf
adc
aas
mov
call
xchg
xchg
mul
xchg
mov
pop
mov
cmp
retf
pop
push
cmp
pop
test
mov
xor
adc
xchg
lods
adc
add
fadd
ficomp
inc
mov
pop
mov
or
mov
mov
mov
mov
fadd
mov
jg
push
nop
add
je
sahf
inc
test
mov
add
pop
dec
push
(bad)
enter
(bad)
int
fiadd
sub
pop
popa
cmp
or
gs
popf
bound
repz
xor
jmp
ins
inc
xchg
call
push
data16
shl
imul
(bad)
xor
jns
mov
mov
cmps
push
stos
push
ins
sbb
fs
jg
and
fwait
movs
scas
(bad)
ret
or
mov
add
sar
push
pop
and
mov
add
jbe
cmp
sar
push
cmps
(bad)
loop
fwait
(bad)
push
mov
test
in
imul
mov
and
dec
xchg
ja
out
mov
cmp
push
and
mov
pusha
mov
mov
daa
mov
jns
int3
xchg
sub
call
pop
cmc
or
ins
mov
scas
xchg
aaa
sbb
jle
and
jp
push
push
adc
call
rcl
inc
dec
cmc
mov
xor
into
loope
cmc
frstor
sub
rep
jns
sbb
jg
xor
not
push
push
fsub
xchg
push
add
neg
push
ins
push
pop
int
inc
lods
les
and
sbb
push
cmp
mov
leave
and
(bad)
aam
in
in
sbb
retf
fadd
movs
push
jns
sub
push
(bad)
in
popa
dec
cli
push
outs
xchg
repz
mov
adc
test
jmp
jo
iret
cmps
clc
add
rcl
stc
xor
xlat
enter
fdivr
inc
(bad)
ss
push
inc
inc
sub
mov
jge
mov
test
icebp
std
xchg
mov
sahf
jmp
push
add
test
stos
inc
xchg
stos
int
leave
daa
xchg
mov
arpl
pop
mov
enter
(bad)
fs
outs
mov
stos
popf
inc
pop
in
pop
sbb
out
imul
loop
in
popa
xchg
mov
mov
push
xor
or
lds
stc
(bad)
cld
mov
sbb
dec
pop
pushf
mov
ds
push
ror
add
(bad)
pop
mov
int
ret
xor
outs
xor
stos
jae
stc
jle
jnp
or
es
adc
mov
mov
shl
jp
push
fisub
xor
mov
inc
jmp
dec
out
jmp
cmp
mov
jbe
setb
or
add
mov
pop
lahf
cwde
sbb
je
dec
add
fsubr
ror
(bad)
mov
cdq
aaa
jecxz
fdivr
lahf
scas
mov
xchg
and
movs
pusha
gs
jge
movs
mov
jne
fwait
and
(bad)
xchg
mov
jmp
push
xor
movs
adc
aaa
sub
out
sahf
fist
push
mov
add
xchg
cmp
in
jle
inc
jae
xchg
sahf
dec
cmp
fldl2e
or
or
mov
cmp
and
cmp
outs
(bad)
xchg
pop
and
adc
aad
mov
mov
jl
cdq
loop
mov
in
div
lods
inc
pop
xchg
outs
in
pop
out
jo
xor
pop
dec
cwde
iret
push
adc
push
lea
lock
loope
mov
mov
popf
pop
ret
mov
shr
mov
inc
ins
xchg
in
sub
and
add
dec
add
lahf
jno
mov
arpl
aaa
jmp
xchg
push
or
add
pop
fidiv
ins
push
mov
(bad)
cwde
sub
pop
fldcw
cmp
icebp
enter
out
ret
nop
out
push
inc
or
je
jle
icebp
mov
and
in
pushf
jno
outs
adc
xor
inc
dec
inc
cmc
stos
and
lods
ss
pop
xor
fidivr
pop
test
jge
mov
jmp
shr
mov
jp
add
clc
cmc
daa
(bad)
push
outs
push
push
aad
xor
test
mov
push
sub
mov
cdq
dec
mov
idiv
stc
test
into
imul
xchg
(bad)
ins
push
repnz
test
jmp
mov
pop
in
stos
cmps
mov
or
sar
into
shl
xor
sar
mov
sbb
xor
mov
cdq
mov
adc
dec
test
mov
xchg
sbb
je
int
pop
xchg
out
fs
xchg
mov
dec
sbb
dec
jnp
mov
in
dec
clc
dec
adc
dec
lahf
mul
xor
mov
sti
pusha
xchg
pop
mov
push
rol
adc
xor
lods
gs
jg
inc
pop
imul
add
sbb
jl
int
and
out
cmp
or
mov
xor
movs
sbb
stc
mov
add
ret
jae
adc
sub
clc
xchg
shr
js
ins
mov
aas
scas
and
pop
mov
lds
(bad)
call
fst
leave
imul
bound
push
cs
xchg
mov
inc
mov
sar
cmp
fidivr
or
rcl
(bad)
test
adc
ror
jnp
movs
adc
sub
nop
icebp
push
mov
sub
fbld
call
xchg
inc
lods
mov
or
(bad)
das
pop
mov
or
jmp
adc
dec
shl
add
mov
rcl
ins
add
adc
push
or
pop
stos
cmp
mov
not
cmp
xor
dec
fwait
popa
push
fild
push
push
cdq
xor
lods
jbe
pop
dec
push
out
into
push
out
cld
mov
stos
adc
rcl
mov
adc
movs
pop
pushf
sbb
(bad)
sbb
push
adc
(bad)
xchg
inc
aad
jecxz
sub
nop
out
xor
sub
xchg
pop
pop
jmp
add
retf
fist
inc
fadd
rcr
outs
stos
ret
xor
sbb
mov
jge
int
test
icebp
test
(bad)
hlt
call
call
test
fst
inc
dec
popf
and
repz
and
je
pop
mov
jmp
retf
int3
ret
test
pushf
loopne
adc
cmp
sub
add
jmp
repnz
or
ss
orps
push
test
imul
mov
(bad)
movs
fidiv
cmps
push
clc
mov
xacquire
push
dec
xchg
pop
ficomp
push
adc
in
scas
and
bsr
pop
xchg
xor
test
(bad)
pop
mov
movs
jns
push
adc
psllw
(bad)
fidivr
add
lods
loop
shl
jbe
retf
mov
inc
push
aas
xor
mov
imul
repnz
push
push
mov
fbstp
out
adc
in
mov
xchg
add
mov
lods
or
rol
in
iret
add
aaa
outs
pop
test
fdiv
test
sti
in
push
cdq
dec
pop
and
or
xor
stc
dec
push
mov
jg
ins
nop
popf
jo
inc
mov
add
xchg
test
std
cli
out
push
pop
mov
lea
mov
sub
enter
lds
sar
ficomp
inc
popa
movs
dec
outs
dec
ds
scas
cmp
call
arpl
jg
in
adc
ss
mov
iret
aaa
jne
inc
cmp
test
mov
jl
call
icebp
loopne
push
inc
or
sahf
xor
test
outs
rcl
mov
xchg
adc
pop
sbb
das
fist
mov
inc
enter
jns
jae
leave
test
inc
movs
gs
jp
addr16
or
daa
lods
jb
dec
fdivr
sub
mov
stos
fmul
and
sub
sub
bound
lds
push
(bad)
retf
pop
mov
imul
hlt
adc
push
loope
or
jno
adc
popf
ret
rcl
jns
mov
adc
and
xor
mov
cmc
lock
stc
cdq
cmc
dec
imul
je
and
stos
push
cld
adc
shl
add
imul
pop
jecxz
jp
jns
sbb
sbb
sub
cmps
repz
add
push
inc
idiv
inc
adc
in
das
push
inc
add
mov
out
loope
add
adc
ret
sbb
adc
mov
sti
cmp
shr
cmp
enter
dec
daa
jge
cwde
je
mov
pop
pop
mov
aam
inc
and
xor
fs
out
push
in
jns
jo
push
in
mov
test
pop
xchg
cmp
loopne
popa
rcr
loope
jmp
sbb
sub
retf
imul
add
sub
add
jle
pop
fdivr
jle
(bad)
(bad)
cmps
ror
jp
in
outs
ret
adc
sub
inc
loopne
mov
mov
shl
push
mov
inc
mov
pop
xchg
iret
out
mov
(bad)
loope
mov
cs
pop
mov
mov
adc
out
mov
mov
(bad)
sbb
repnz
outs
push
dec
sahf
cmp
sbb
adc
mov
bound
push
jbe
in
xchg
fwait
sbb
sar
mov
js
and
mov
movs
fs
jp
int3
out
pcmpgtw
stos
mov
lds
test
sub
jno
out
sbb
ficomp
movs
add
sbb
dec
mov
inc
rcl
or
leave
bound
push
ficomp
les
xchg
retf
mov
scas
adc
pop
lods
sar
repnz
sti
popa
pop
push
cmp
retf
lea
daa
mov
sub
or
test
mov
lahf
fdiv
or
retf
or
ins
(bad)
lock
mov
mov
int3
fnstsw
xor
cmp
pop
stos
imul
adc
cmp
call
sti
push
sub
jb
dec
adc
repnz
jg
movs
adc
jge
push
out
jmp
xchg
xchg
loopne
dec
mov
outs
or
fnstenv
pusha
fdivr
mov
(bad)
(bad)
lock
scas
dec
dec
jnp
out
jne
mov
inc
shl
jns
jne
adc
or
mov
movs
punpcklwd
je
or
xor
sub
in
loop
test
hlt
pop
loop
lock
in
cmp
fmul
ret
jae
add
xor
retf
or
or
test
stos
shr
imul
mov
sub
in
dec
sub
adc
jbe
mov
scas
imul
test
ins
fist
ficom
fst
sub
iret
xor
add
in
sub
jp
clc
add
(bad)
and
out
or
test
(bad)
daa
mov
push
scas
fs
jmp
mov
call
(bad)
mov
mov
out
retf
scas
cmp
loope
popa
push
push
repnz
xchg
mov
cmp
test
test
mov
addr16
mov
xchg
cmp
mov
inc
pop
dec
mov
cmp
cmp
fsub
mov
jbe
push
sbb
and
mov
jecxz
mov
jmp
imul
aam
pop
frstor
sbb
push
xchg
in
movs
adc
xor
mov
xor
cld
pop
je
sbb
mov
js
mov
or
stc
adc
retf
xor
movs
mov
xchg
or
jb
sbb
jmp
xchg
pop
mov
sub
iret
int
and
stc
lea
jge
fs
add
jnp
bound
dec
add
pusha
cmp
test
adc
jb
adc
nop
ds
inc
jns
paddusw
mov
test
fmul
into
in
push
sti
inc
sbb
dec
sub
add
int3
pop
jbe
dec
xor
movs
jecxz
and
(bad)
(bad)
iret
jne
leave
jnp
mov
xchg
mov
into
push
pop
ret
std
jle
js
dec
jp
push
adc
and
cmp
popf
xor
or
pop
and
and
nop
ins
les
xor
aad
jb
or
js
or
popa
sub
jmp
pop
jmp
mov
push
in
jb
outs
dec
fwait
out
and
inc
nop
fwait
in
ja
test
mov
adc
cmp
jno
rcl
aaa
dec
int
das
enter
inc
sti
mov
pusha
je
adc
mov
mov
sub
or
mov
adc
adc
repnz
dec
cmp
pop
push
cmp
cmps
jg
retf
adc
xor
mov
cmp
pusha
adc
xchg
mov
adc
and
cmc
cli
stos
sbb
add
daa
(bad)
mov
pop
cmp
sub
push
mov
ins
xor
(bad)
enter
xchg
mov
ror
pop
icebp
mov
sub
sahf
(bad)
loopne
imul
call
hlt
je
jae
call
dec
push
pop
dec
xchg
cs
dec
retf
pop
mov
or
retf
leave
es
imul
ds
out
and
enter
push
push
es
rcr
xlat
fcomp
adc
push
push
pop
sub
ds
cld
pop
scas
mov
adc
sbb
fnstcw
mov
shr
lods
lahf
fist
ret
cs
sub
shr
cwde
push
mov
jecxz
(bad)
xlat
jae
retf
jmp
inc
mov
ret
lds
es
or
jae
inc
and
fs
pop
rol
int3
setnp
hlt
fmul
dec
in
pop
pop
pop
jae
push
xor
mov
adc
mov
icebp
adc
movs
adc
or
xchg
es
add
mov
mov
jle
xchg
mov
call
inc
xor
sbb
sbb
pushf
xchg
ds
xchg
xor
mov
inc
mov
cwde
cmp
xchg
lods
ror
cmp
loopne
fld
loope
push
pusha
out
mov
sti
push
int3
push
mov
(bad)
movs
or
jno
adc
jae
mov
adc
adc
cli
icebp
(bad)
leave
pop
popa
arpl
leave
out
fnstenv
sub
stos
cmps
mov
jge
pop
cmps
mov
inc
jle
push
pop
cmp
jecxz
mov
pop
xchg
jo
stos
pop
pop
aad
sar
add
ds
aaa
lds
jno
dec
cli
jnp
scas
sbb
out
inc
(bad)
and
into
retf
mov
dec
pop
and
pop
cmc
xor
movs
sub
pop
xor
(bad)
and
add
ja
aad
ror
mov
and
jbe
loopne
xchg
pop
shl
xor
push
add
sub
mov
std
mov
inc
sahf
fisub
mov
mov
sub
or
xchg
popa
push
jmp
push
pop
and
add
je
xor
push
push
jo
js
xchg
dec
and
mov
jle
sti
mov
pop
je
push
cs
jns
mov
int3
and
mov
mov
ins
xchg
dec
xor
sahf
aas
cmp
pop
adc
jae
mov
push
in
cli
arpl
pop
push
stc
mov
imul
daa
xor
cs
int
ins
xor
jo
add
cmp
dec
cmp
iret
cmp
push
mov
popa
dec
lea
and
dec
and
daa
jmp
je
leave
scas
cmp
jo
add
jno
xor
shl
cmp
pop
outs
loope
retf
rcr
push
imul
mov
xlat
scas
lds
fwait
and
int
cli
pop
inc
fstp
jb
pop
cmp
mov
ja
xchg
fisub
xor
test
out
sub
movs
loop
aam
mov
adc
cs
scas
in
fdiv
adc
(bad)
fldlg2
ins
aas
sub
gs
fistp
add
sub
pop
jecxz
sub
leave
out
int3
add
mov
leave
xchg
xor
(bad)
pop
mov
sbb
xor
cli
or
sbb
adc
cmc
pop
aas
mov
out
outs
mov
cld
xchg
(bad)
mov
stos
jmp
dec
jne
adc
xchg
dec
aam
pop
xchg
repz
push
cmp
jno
imul
cmp
xlat
cmp
sbb
pop
dec
mov
lds
stos
mov
push
sub
out
push
mov
test
xor
add
and
xor
addps
adc
test
lds
mov
cs
add
lods
scas
mov
jge
mov
stos
pop
push
shr
fwait
add
xchg
ins
mov
out
fild
cdq
or
mov
pop
jb
add
mov
pusha
dec
mov
movs
sbb
xchg
sub
test
jns
mov
xor
jge
or
push
orps
in
mov
out
mov
cmp
push
icebp
ins
sub
ror
test
cmp
stc
push
lahf
adc
fwait
xor
fidiv
div
pop
sbb
add
ret
sti
dec
bound
shr
scas
pop
test
mov
pop
xor
je
cmp
ret
pop
mov
cmp
xchg
aaa
pop
sbb
pop
(bad)
int
adc
add
sub
ja
iret
mov
and
xchg
jns
pop
push
fstp
imul
cmp
aaa
dec
je
fs
ficomp
vpsadbw
repz
shr
sub
dec
pop
retf
xor
in
and
xchg
mov
fwait
enter
cmp
ja
ror
retf
test
cs
cdq
xor
xchg
popf
enter
lds
loop
xchg
sub
push
dec
sahf
cmp
cmps
movs
add
sub
push
cmp
aaa
xor
test
jmp
sahf
push
loop
pop
add
xchg
(bad)
lods
xchg
sub
fisub
cmp
js
sar
test
push
cmp
add
int3
jb
jo
outs
int
fadd
(bad)
data16
push
stos
push
(bad)
adc
mov
inc
cdq
cmp
leave
fcom
popf
or
cmp
(bad)
adc
adc
rcr
cs
cmp
inc
add
xchg
nop
adc
aas
or
mov
add
or
shl
sub
or
inc
xor
inc
fist
fisttp
call
mov
push
popf
rol
adc
imul
and
sbb
fmul
pop
dec
mov
leave
mov
fbld
jmp
push
imul
int
cmps
jmp
jp
test
loope
je
lods
rcr
jb
sbb
push
jmp
dec
aaa
imul
stos
ret
jb
push
clc
(bad)
cmp
inc
sti
movs
adc
cs
mov
test
icebp
adc
les
mov
popf
mov
int3
jg
lods
push
jnp
xchg
push
retf
dec
mov
daa
xchg
xor
mov
adc
in
loopne
sub
popf
pop
mov
pusha
scas
pusha
sbb
cld
push
jae
jg
pop
jg
cs
adc
mov
pop
ja
fist
inc
push
popa
push
and
mov
cmp
xchg
sbb
test
mov
sub
inc
(bad)
sti
adc
sub
scas
mov
push
aam
pop
sub
fist
aaa
sub
icebp
out
fistp
clc
xchg
lods
int3
cs
stos
jmp
or
movs
mov
inc
push
mov
mov
push
hlt
lods
bound
dec
cwde
or
mov
pop
mov
js
push
or
ror
fld
and
sub
mov
mov
pushf
xchg
sbb
ret
es
sbb
in
dec
cmp
add
mov
cmp
xlat
dec
pushf
push
cli
or
adc
retf
xchg
test
cmp
mov
js
sub
xor
popf
cs
mov
dec
sbb
pop
mov
mov
movzx
es
jg
std
sbb
sbb
in
xchg
adc
ds
xor
xchg
mov
or
fild
jp
push
adc
mov
push
dec
aaa
lods
les
loop
push
add
stos
fwait
sbb
cmp
js
cwde
pop
pop
mov
or
add
inc
mov
pusha
in
jl
(bad)
bound
and
gs
cmp
loope
mov
pop
sbb
cmps
push
retf
pop
lahf
mov
cmc
sub
mov
xchg
nop
sub
inc
dec
sahf
or
mov
(bad)
in
mov
bound
cmps
mov
mov
sbb
xchg
cmps
ss
ins
jl
sti
push
push
cmp
bound
cmp
in
xor
(bad)
gs
and
sub
mov
sub
add
jmp
cmp
inc
pop
adc
push
test
xor
push
push
repnz
push
or
jb
push
ds
sbb
cs
jmp
jae
mov
jno
loope
push
fidiv
add
cwde
mov
cli
sbb
or
mov
es
cs
sub
call
mov
xlat
adc
mov
and
xor
ret
and
sub
mov
jle
in
dec
frstor
jbe
push
cmps
cmps
push
ss
imul
pop
or
call
call
out
mov
nop
cmps
pop
mov
and
dec
shl
inc
push
leave
sbb
mov
pusha
lds
fimul
mov
imul
rcl
cmp
pusha
mov
scas
bound
xor
pop
repz
ror
jg
sub
adc
aad
loope
adc
push
sub
cld
ror
xlat
dec
ins
adc
dec
sbb
into
mov
into
jmp
(bad)
fst
das
cs
pushf
fistp
and
cmp
sub
push
movs
push
sbb
fbld
movs
iret
lods
and
cmp
jge
jno
scas
div
lea
xchg
mov
push
cld
es
xor
fld
idiv
je
(bad)
iret
or
xchg
sbb
sub
sub
fisttp
sub
xor
bound
nop
xchg
mov
jecxz
arpl
xchg
xchg
mov
add
adc
fiadd
or
pop
in
fwait
dec
fcom
push
dec
aam
lahf
sbb
mov
sub
popf
mov
inc
mov
cli
xchg
jl
sti
add
cwde
js
adc
jne
dec
jmp
lock
ret
xchg
jo
lea
outs
mov
aam
mov
jmp
data16
xchg
(bad)
(bad)
ja
int
icebp
cmps
clc
cmp
fdivr
jecxz
movs
out
call
dec
les
inc
xchg
(bad)
aam
xchg
push
test
sub
into
jmp
je
mov
xchg
call
jo
shl
fistp
out
xchg
repz
je
fmul
push
sbb
sti
jmp
mov
out
xchg
mov
iret
inc
sbb
call
sar
(bad)
aad
aas
call
mov
addr16
fsubr
(bad)
fcmovbe
mov
push
jle
mov
loop
jmp
inc
xor
inc
sbb
xchg
pop
push
push
mov
push
jae
and
mov
jge
adc
ja
ins
mov
add
push
(bad)
sbb
mov
pushf
popa
push
cli
pop
mov
pushf
pushf
dec
jl
add
je
mov
xchg
jmp
add
add
adc
test
push
mov
jecxz
scas
std
scas
sbb
jbe
test
out
add
sbb
xor
and
push
mov
fst
adc
outs
and
gs
pop
push
outs
stos
xor
and
not
imul
fstp
sbb
inc
mov
(bad)
aad
inc
mov
fisubr
fwait
sbb
test
dec
jmp
loope
cmps
jbe
dec
aad
aam
int3
cdq
inc
and
lds
lds
fcomip
scas
das
jecxz
cli
sub
dec
pushf
mov
mov
imul
mov
sbb
mov
rcr
xchg
(bad)
xchg
pop
(bad)
mov
or
dec
lahf
test
cmp
pop
mov
scas
mov
adc
fadd
mov
fadd
out
test
into
shr
(bad)
sub
pushf
push
xchg
mov
mov
aaa
sbb
adc
js
pop
xor
mov
mov
jecxz
mov
xchg
call
jecxz
das
push
fldcw
out
aas
lea
int
xor
xchg
lods
mov
jno
mov
jmp
cmps
sbb
and
mov
xchg
add
xchg
(bad)
adc
int
stos
mov
in
dec
ins
jns
sub
xor
mov
fisttp
xor
or
ss
aam
mov
mov
pop
xor
lods
adc
imul
fild
leave
shr
frstor
iret
inc
jns
les
loop
xchg
lods
adc
aas
pusha
mov
fidiv
cmp
inc
ds
arpl
dec
sub
xchg
jle
mov
fwait
mov
push
jl
popf
xor
xor
push
xor
scas
rep
push
add
sub
retf
ret
xor
lea
(bad)
inc
inc
add
div
sbb
cmp
pop
out
outs
stos
xchg
pop
loop
pop
add
movs
and
in
ss
fcmovne
push
shl
shr
sbb
icebp
cmps
pop
push
inc
adc
ds
into
aaa
sub
jmp
pop
ins
sub
push
mov
cmp
push
in
outs
imul
call
imul
in
mov
dec
shl
xchg
jl
or
stos
inc
xchg
fimul
sub
mov
mov
pop
test
push
inc
ja
shl
inc
cld
push
inc
mov
dec
in
adc
loope
xor
cld
and
cld
les
push
out
jmp
retf
sbb
pop
clc
dec
stos
aaa
ds
pop
inc
add
fbstp
(bad)
lahf
adc
enter
lock
cwde
loop
xor
or
or
lea
dec
push
sahf
pop
pop
mov
imul
loopne
sahf
gs
and
je
call
and
aaa
lds
pop
inc
inc
cmps
imul
mov
push
sbb
sbb
sub
mov
pop
mov
pop
imul
jo
in
push
mov
or
cmps
aas
push
dec
enter
fmul
out
aas
sub
cwde
mov
xor
pusha
adc
adc
adc
daa
jecxz
mov
fdivr
or
mov
xchg
add
or
es
mov
dec
push
fucomp
in
sub
pop
jbe
add
lea
fsub
jecxz
sub
mov
inc
and
mov
fldcw
cs
dec
js
jmp
add
ror
mov
outs
sar
retf
push
mov
push
sbb
fisttp
enter
test
in
push
loop
add
or
pop
inc
xchg
daa
jg
js
add
shr
xor
xchg
add
dec
cmp
(bad)
push
popf
mov
ret
in
xchg
xchg
jnp
into
dec
stos
lea
sub
test
cmc
mov
add
enter
sbb
mov
jno
add
jne
add
ror
xchg
xchg
stos
push
int3
in
push
dec
shl
mov
fldenv
inc
cld
xchg
jnp
fs
es
std
retf
push
xchg
call
mov
xor
lahf
fcomp
or
sar
aaa
xchg
std
sbb
pushw
jp
jo
mov
pop
loope
pushf
xor
ss
bound
data16
push
arpl
jle
sti
jl
popf
dec
je
push
sti
inc
inc
push
mov
and
sub
jg
mov
cmp
into
outs
jno
or
movs
shl
mov
out
mov
test
ds
and
scas
cmp
movs
outs
or
leave
movnti
pop
jne
es
repnz
ficom
jno
pusha
xchg
into
sti
and
mov
out
shl
fbld
xchg
sub
sub
sbb
push
or
bnd
dec
adc
loope
ds
jecxz
repz
fwait
xchg
pop
sbb
in
sar
sub
mov
sbb
(bad)
sub
xor
test
xor
add
sub
cmp
clc
cmps
es
movs
jmp
imul
mov
mov
inc
std
push
pop
(bad)
test
pop
xchg
ins
out
out
call
popa
enter
sbb
inc
lods
test
sahf
in
stos
and
xchg
or
xchg
dec
popfw
fs
ins
push
pop
mov
cmp
aad
shl
sahf
pop
repnz
popf
test
and
out
adc
dec
jno
xlat
jmp
movs
pop
stc
jno
mov
adc
ds
pushf
xchg
xchg
and
out
jmp
aaa
mov
cmp
test
(bad)
push
es
mov
and
gs
xor
ss
in
pop
xchg
jecxz
sbb
or
mov
pop
movs
(bad)
sub
add
mov
(bad)
mov
es
sahf
mov
inc
xabort
out
or
pop
popf
mov
into
mov
sub
inc
pop
lahf
pop
hlt
arpl
out
call
cmp
sub
fisubr
push
xchg
into
aas
das
mov
mov
xchg
outs
data16
xchg
inc
mov
dec
jle
repz
or
(bad)
xchg
rcr
dec
xor
lods
(bad)
inc
and
jne
jmp
mov
push
cmp
and
cmps
repnz
sbb
inc
xlat
xchg
pop
out
fidivr
imul
out
add
fs
popf
jl
sti
shr
js
mov
ja
je
sbb
call
mov
sub
inc
shl
adc
and
lahf
cmps
sub
inc
movs
mov
popf
cwde
cmps
adc
sbb
xor
jl
retf
jmp
mov
(bad)
sub
rcr
fild
mov
mov
jb
stc
aaa
inc
gs
mov
inc
dec
cs
mov
arpl
lods
ja
rep
lea
or
dec
sbb
inc
(bad)
out
dec
push
stos
dec
scas
pushf
mov
ds
loope
(bad)
pop
pop
pop
in
repz
clc
stc
lds
(bad)
and
xchg
mov
sbb
xor
movs
into
and
aaa
add
iret
mov
ret
inc
xchg
jge
rcl
shr
jns
dec
mov
sub
pusha
mov
add
scas
loope
loopne
fst
loopne
fsub
cwde
stc
inc
cli
or
sub
xor
mov
les
mov
js
int3
(bad)
aam
mov
adc
push
pop
pusha
int
into
movs
icebp
xlat
aaa
push
push
ret
inc
lods
sbb
and
add
out
or
sub
ror
fldenv
sbb
jl
jle
mov
cwde
jle
dec
or
push
pop
aad
daa
inc
sub
(bad)
aam
mov
mov
push
std
inc
repz
scas
shl
push
ins
fistp
xor
sbb
pop
xor
adc
rcl
retf
mov
lea
scas
adc
or
call
inc
xchg
mov
pop
hlt
mov
or
cdq
icebp
jge
outs
bound
mov
push
in
push
inc
ds
add
inc
dec
push
inc
jle
out
loop
scas
cmp
clc
imul
push
test
fcomp
ffreep
mov
loopne
xor
rcr
js
sub
mov
push
and
mov
stos
add
call
cmp
addr16
(bad)
(bad)
lds
fidivr
sub
sbb
fs
fstp
enter
leave
je
push
in
inc
xlat
fst
sub
mov
shl
mov
xchg
fist
cmp
addr16
out
icebp
and
inc
xchg
sbb
ss
in
cwde
popf
adc
inc
pop
mov
sar
sub
test
into
mov
mov
jmp
sbb
out
js
xchg
inc
dec
and
retf
div
mov
out
std
(bad)
push
add
popa
push
fsubr
loop
or
popf
ds
push
and
push
iret
xor
dec
ds
daa
adc
jg
inc
jae
mov
imul
and
add
std
sti
adc
mov
pop
pop
(bad)
nop
(bad)
fldcw
inc
pop
adc
das
add
jns
into
and
aam
add
lods
cld
pop
imul
jecxz
cdq
add
adc
and
jbe
mov
cmc
push
xchg
aad
adc
jbe
in
pop
daa
adc
push
push
mov
fst
movs
arpl
repz
pop
and
int3
mov
sbb
sbb
mov
inc
sub
inc
std
push
test
ja
or
inc
pop
sti
ss
fidivr
adc
test
ins
pop
into
xchg
sbb
cmp
adc
dec
pushf
fsub
call
loope
add
and
(bad)
(bad)
repz
pop
xchg
fcmovnb
sti
mov
inc
mov
sbb
out
repnz
ror
fsub
in
enter
movs
sub
add
pop
or
push
jmp
icebp
jno
cmc
in
popf
pusha
jl
pop
ret
or
push
xor
sub
enter
bound
sub
pop
test
xor
(bad)
fdiv
xchg
mov
test
int3
in
xlat
xlat
dec
outs
adc
retf
ss
sbb
cdq
push
test
test
and
aas
in
add
cmp
neg
ror
movs
mov
adc
push
(bad)
xor
in
jecxz
inc
xor
nop
stc
push
lods
js
push
pop
xlat
mul
push
loope
sbb
test
int3
pop
push
mov
or
adc
mov
daa
mov
(bad)
or
das
inc
add
loope
jmp
mov
test
jo
cmp
adc
fidiv
xor
je
adc
pushf
jge
xchg
sub
sub
clc
jae
mov
sahf
out
les
mov
movs
inc
fwait
cmp
and
int3
mov
or
scas
sub
inc
cld
mul
and
hlt
ficom
mov
jg
cmps
jl
push
jmp
cdq
add
std
dec
xlat
jle
(bad)
test
xor
push
sub
out
sbb
push
test
push
cmps
mov
scas
sbb
ds
in
cwde
je
and
gs
rcl
pop
pop
inc
or
or
xor
xor
pop
ror
pop
repnz
pusha
adc
cwde
mov
popf
jge
add
(bad)
sub
jmp
xor
cld
stos
movs
sbb
mov
cmp
in
gs
jno
add
dec
push
test
pop
mov
(bad)
loop
outs
inc
push
mov
jns
mov
adc
call
ret
or
jle
ins
ss
je
test
icebp
adc
call
scas
inc
and
or
pop
enter
inc
std
push
dec
push
mov
and
nop
cmp
push
inc
test
jl
aam
push
gs
sbb
inc
mov
sub
adc
xor
sti
lods
(bad)
mov
jmp
push
into
sahf
cdq
mov
cmp
ds
inc
mov
mov
inc
aad
xchg
and
outs
bound
test
fstp
or
iret
cmp
xchg
xchg
mov
mov
(bad)
int3
(bad)
test
pusha
jae
ins
clc
and
les
add
cli
mov
pop
enter
jl
and
add
cmp
std
cmp
mov
cld
jno
js
sbb
xchg
push
mov
(bad)
fild
loopne
dec
push
ror
ja
ror
and
xor
xor
jmp
sahf
mov
scas
into
cdq
repnz
add
ins
fnsave
jae
out
adc
fwait
cmps
jns
jmp
add
sbb
fucom
pop
and
jp
pop
fs
ja
push
rcr
xchg
ins
or
pop
pop
lds
test
outs
data16
pusha
clc
sub
sbb
jmp
pop
retf
addr16
adc
fld
mov
repnz
out
test
sbb
and
add
lock
(bad)
cmp
adc
into
std
xlat
xor
sbb
daa
jp
(bad)
stc
sbb
cmp
loopne
icebp
outs
movs
mov
fstp
and
cs
push
call
in
adc
adc
ret
gs
sub
repnz
lahf
out
scas
(bad)
ret
jl
fsub
cld
leave
(bad)
jg
rcl
or
scas
jo
add
mov
loopne
mov
std
(bad)
fisttp
(bad)
jns
fsubr
sbb
clc
call
daa
nop
jmp
push
jmp
mov
push
imul
mov
outs
call
jmp
and
mov
mov
pop
mov
push
stos
or
push
and
jns
jmp
sar
jmp
adc
outs
fnstcw
retf
xor
mov
fimul
pusha
xchg
cmps
arpl
outs
pop
out
jle
in
nop
into
fmul
sub
hlt
inc
out
xor
stos
jge
mov
pop
cwde
dec
inc
jp
pop
push
outs
outs
fucomip
test
or
inc
pop
and
or
rcr
mov
std
inc
jg
dec
mov
push
add
test
aad
and
mov
or
out
push
mov
(bad)
fisubr
add
fistp
xchg
imul
sar
aad
mov
or
jbe
push
sub
xchg
fs
in
mov
mov
out
fild
out
push
push
sub
fisttp
and
xchg
jmp
push
sbb
sub
gs
mov
data16
or
xchg
inc
in
call
mov
mov
add
mov
xchg
and
dec
cmp
mov
test
out
and
jo
dec
lea
or
dec
call
jno
sub
xor
fdivr
movs
mov
pop
movs
add
mul
hlt
and
outs
or
enter
lods
mov
sub
imul
xor
dec
fmul
js
dec
movs
inc
pop
sar
inc
mov
jmp
pop
mov
(bad)
(bad)
pushf
ins
push
push
sar
mov
call
jle
sbb
push
hlt
add
mov
inc
rol
shl
in
test
arpl
sbb
cmc
dec
call
retf
test
jne
mov
sti
inc
retf
add
xchg
pop
(bad)
xchg
mov
xor
lods
mov
retf
adc
shl
and
cmp
call
mov
xchg
mov
dec
xchg
pop
les
in
rol
clc
xchg
test
mov
sbb
xchg
(bad)
imul
mov
pop
imul
sub
push
imul
mov
xor
cmps
rol
jbe
xchg
data16
mov
pop
shr
jg
leave
hlt
xor
xchg
cmp
inc
xlat
dec
jmp
push
sbb
xor
ret
out
jecxz
add
inc
(bad)
xor
call
ins
cmp
jecxz
fisttp
xchg
iret
out
and
retf
sub
leave
mov
adc
xor
pop
cmp
imul
lahf
nop
pop
movs
test
popf
xor
loope
jmp
dec
rol
dec
jmp
inc
test
imul
cld
mov
add
nop
adc
cmps
mov
ficomp
pop
jge
inc
pushf
test
in
int
fwait
mov
les
adc
xor
adc
pop
ds
ins
(bad)
pop
jno
arpl
cli
xchg
leave
push
repnz
xor
gs
cmps
and
cwde
push
int3
mov
push
int3
pop
push
inc
jmp
js
adc
adc
retf
push
jb
jmp
daa
pop
inc
mov
xor
enter
xchg
stos
jns
dec
inc
aam
repnz
hlt
jmp
test
cdq
jno
fcomp
push
mov
les
inc
dec
(bad)
add
cmp
cmp
and
cs
je
and
(bad)
inc
fmul
loopne
(bad)
ins
push
mov
hlt
inc
mov
lods
mov
stos
and
stos
out
push
fisub
xchg
cmp
add
push
addr16
mov
mov
push
(bad)
mov
shr
xor
or
and
loop
int3
nop
dec
push
sub
jns
sti
jae
dec
dec
jae
mov
adc
data16
test
cwde
je
push
jo
mov
loope
out
out
aad
aas
push
push
js
mov
xlat
inc
adc
mov
repz
xchg
xor
xchg
or
out
pop
adc
(bad)
mov
jle
jge
les
mov
push
dec
mov
mov
fwait
mov
cs
mov
inc
js
push
add
popa
call
add
jo
sbb
pop
dec
sub
jnp
jb
addr16
jmp
gs
pop
jmp
jle
and
dec
dec
lahf
add
and
push
sub
std
add
das
aas
xlat
data16
add
pop
mov
sub
adc
inc
div
lods
fisttp
jecxz
push
xchg
std
cmp
fs
imul
and
add
pop
xlat
fnstcw
ror
pop
clc
and
push
neg
and
loopne
push
jle
xor
add
fld
ss
jae
mov
add
xor
pop
and
lahf
cli
imul
leave
mov
mov
and
cmps
jo
test
mov
lock
lods
cld
shl
imul
inc
sub
or
pop
sub
fldenv
jge
pop
jbe
and
(bad)
cli
add
mov
loope
mov
push
jmp
mov
adc
pop
sub
cdq
movs
mov
je
dec
inc
out
and
fdiv
xor
scas
mov
dec
push
leave
pop
push
sub
sub
test
and
je
cmp
or
sahf
lahf
jge
data16
xchg
outs
dec
push
(bad)
fcom
mov
leave
xor
loopne
mov
jnp
xor
mov
sar
push
cmp
ja
aaa
imul
not
mov
mov
or
mov
scas
fistp
and
sbb
mov
(bad)
xchg
push
adc
cmp
xchg
push
mov
test
adc
das
(bad)
fadd
cdq
push
and
adc
call
dec
daa
push
mov
lea
(bad)
cwde
xchg
test
xor
adc
idiv
dec
imul
mov
pop
sub
(bad)
cmps
mov
xchg
sub
test
mov
shl
xchg
mov
stc
addr16
cld
stos
mov
scas
loopne
or
inc
ffreep
ins
jns
aam
push
jno
push
ret
jae
hlt
aas
lea
sbb
aam
cld
movs
push
push
cmps
scas
scas
dec
mov
cmp
cdq
(bad)
int3
mov
retf
adc
daa
push
sub
push
dec
repnz
push
xchg
push
or
sahf
mov
stc
mov
sub
daa
outs
pushf
pop
hlt
loopne
or
retf
ja
jne
int
imul
test
test
fwait
cwde
shl
ror
cmc
add
and
sbb
cld
pop
xchg
lahf
pop
mov
add
mov
test
jno
cdq
sub
and
(bad)
add
cmps
or
int
xor
inc
out
jmp
xchg
adc
jb
in
and
aas
scas
iret
icebp
add
inc
enter
cld
cmp
retf
mov
dec
push
stc
sahf
jbe
mov
push
aam
cmp
outs
into
or
add
cmp
dec
inc
push
mov
fimul
int
fldenv
add
scas
cmp
mov
fisub
cmp
push
lahf
fwait
jp
movs
movs
or
rcl
in
cmp
pusha
sub
push
(bad)
in
pop
or
dec
add
jb
cmp
scas
adc
cs
sbb
pop
mov
jl
sbb
lock
push
into
xchg
push
fild
sar
mov
inc
into
ds
push
adc
cmp
ror
or
mov
mov
hlt
loop
mov
and
out
fstp
mov
cmp
xor
mov
lock
jp
in
icebp
or
fwait
push
cli
jmp
xor
pop
sbb
mov
es
in
movs
xor
jmp
imul
jl
push
cmc
aam
movs
test
enter
mov
push
dec
pop
mov
jmp
cmp
push
xchg
mov
jge
cmp
bound
test
push
mov
and
push
int3
push
fimul
xchg
mov
imul
scas
cli
retf
test
imul
add
adc
inc
aas
cmps
xchg
mov
je
push
inc
mov
rol
push
sub
mov
or
rol
cmovs
adc
jne
retf
jbe
cmp
push
das
push
sbb
stos
popa
scas
pop
xor
push
out
pop
pop
jno
lods
pop
inc
out
adc
std
sbb
cmp
dec
push
cmp
dec
fisub
es
inc
mov
cdq
inc
fucom
in
retf
test
outs
ds
cmps
xchg
add
add
push
inc
pushf
fld
imul
mov
jns
sar
push
inc
push
dec
pop
mov
and
call
mov
hlt
imul
mov
jae
push
inc
jbe
pushf
fsubr
mov
pusha
fcom
in
clc
retf
add
ds
push
ins
pop
popf
xchg
movs
les
push
in
mov
paddq
xor
sahf
jl
repz
and
mov
and
mov
fnsave
cmp
or
shld
or
add
xchg
push
mov
pop
cmp
pusha
aam
and
xchg
mov
outs
sbb
cli
cmp
in
push
xchg
call
sub
(bad)
jne
stc
mov
and
mov
gs
rcl
cmps
xor
(bad)
retf
fld
mov
call
sub
sbb
mov
(bad)
(bad)
out
lea
(bad)
mov
xchg
mov
pop
adc
cwde
enter
dec
xchg
push
call
cmp
inc
dec
xchg
xchg
call
push
sbb
ret
or
sti
mov
xor
bound
add
and
mov
add
(bad)
div
arpl
aaa
jmp
imul
cli
or
pop
inc
fld
pusha
xchg
xor
jl
in
repz
push
mov
in
sub
sti
out
pop
lods
cmp
lahf
out
neg
ror
add
lea
jmp
inc
dec
aad
aas
pop
adc
push
(bad)
push
jl
(bad)
mov
sar
jg
push
push
je
jno
gs
aam
jle
stc
xchg
adc
push
mov
scas
stc
xchg
call
ins
out
mov
xchg
stos
or
out
mov
fidivr
test
scas
test
adc
repz
movs
in
push
enter
or
loop
cwde
test
cwde
jnp
mov
xor
in
or
adc
push
div
call
fnstcw
cld
add
push
jmp
push
(bad)
sbb
or
in
sub
adc
pop
mov
daa
pop
iret
es
xor
mov
or
sub
jge
sub
fnsave
push
iret
xchg
dec
add
aad
fldenv
imul
sar
pop
push
mov
sbb
repnz
int3
loop
xor
idiv
and
arpl
adc
mov
mov
sbb
adc
in
add
sbb
ins
jmp
jmp
retf
jp
xchg
hlt
or
in
push
aas
jo
jne
sbb
xchg
jg
mov
mov
out
cmp
jl
mov
shr
inc
mov
sbb
jnp
mov
jle
adc
lods
mov
fsin
cmps
push
test
xchg
xor
xor
inc
mov
jb
xor
pusha
mov
cmp
cwde
dec
pop
push
cs
test
jl
fdivr
neg
dec
arpl
sbb
dec
mov
mov
les
jmp
stos
add
aas
fsubr
and
pop
adc
adc
aaa
lds
pop
mov
lods
enter
xor
pop
push
mov
ret
sbb
shr
sub
ret
loop
jmp
pop
push
ficom
data16
fcomp
push
clc
mov
and
mov
mov
push
or
dec
frstor
cli
xchg
push
call
repz
pop
cmp
in
dec
sti
mov
pop
dec
movs
(bad)
jmp
xchg
inc
push
and
mov
test
or
add
sbb
mov
loop
add
mov
cmps
(bad)
push
add
aam
push
fst
cmp
adc
(bad)
cld
pusha
add
std
cmp
sub
(bad)
enter
push
mov
stos
push
jb
in
stc
cmp
jbe
nop
(bad)
mov
clc
and
xchg
shl
mov
lock
sahf
adc
es
jge
rcr
pusha
sbb
jae
push
lea
inc
call
jg
fstp
aam
xchg
mov
mov
add
hlt
push
xor
int3
xchg
paddsb
pop
xchg
pop
dec
jg
mov
or
jno
arpl
jmp
xchg
sbb
mov
xchg
or
addr16
out
dec
jle
mov
or
push
adc
imul
push
pusha
mov
int
in
cmp
inc
jnp
retf
aas
add
rcl
or
popa
enter
adc
xor
sbb
add
cmps
inc
inc
mov
dec
and
push
ins
xchg
xor
nop
push
dec
adc
add
jbe
or
or
(bad)
xchg
test
movs
pop
into
loope
add
(bad)
fisub
cmc
mov
cmc
dec
ss
adc
and
add
bound
xchg
(bad)
xor
mov
mov
ret
push
cld
cmps
push
mov
sti
fild
leave
js
cmp
inc
gs
cmp
mov
stos
imul
test
xor
popa
and
sbb
jno
xor
rcl
sub
cmp
sub
(bad)
fstp
adc
xchg
dec
push
push
or
jmp
push
enter
xchg
cdq
cld
(bad)
sub
cmp
jecxz
int3
out
loop
ja
push
mov
loopne
je
sub
jl
in
out
(bad)
mov
sbb
cs
push
ds
cmp
mov
lods
add
jo
(bad)
xor
mov
data16
cmp
ror
mov
fist
pop
cmp
call
retf
jge
or
sub
rol
repz
jle
rcr
loop
sub
mov
clc
mov
xchg
or
jge
mov
sub
fistp
imul
cmc
push
sbb
add
ret
mov
and
xchg
xchg
dec
mov
(bad)
outs
retf
push
enter
sub
dec
rcl
pop
enter
cld
nop
fcmovb
fucomip
mov
iret
pop
mov
or
or
jb
movs
add
rcl
mov
lahf
aas
ss
sub
lahf
loope
add
les
fcmovnb
dec
xor
mov
loope
add
rcr
sahf
inc
sub
fbld
addr16
data16
loopne
data16
aam
xor
cwd
and
outs
aas
stos
push
imul
jge
sti
in
in
retf
and
jecxz
int3
xchg
jb
iret
inc
test
out
jl
jl
les
sbb
mov
ins
pop
cmp
lods
sbb
mov
xchg
outs
cmp
scas
pop
pop
xor
or
push
outs
inc
out
enter
pop
dec
mov
inc
rcr
push
outs
sbb
stc
xchg
inc
mul
out
xor
stos
inc
jg
loopne
inc
popa
push
nop
ins
outs
aam
inc
or
movs
mov
mov
cmovne
icebp
dec
call
aad
nop
ficom
aas
fiadd
xor
imul
mov
mov
test
mov
fmul
out
adc
leave
adc
pop
mov
js
sbb
mov
repz
dec
(bad)
pop
mov
jne
hlt
pop
not
icebp
lods
stos
stos
pop
jge
xor
fwait
push
xor
imul
imul
cmps
icebp
mov
outs
jbe
sahf
add
imul
movs
xchg
xor
fwait
mov
in
cmp
pop
pop
mov
mov
ret
clc
pop
out
lahf
in
inc
(bad)
out
bound
xchg
sbb
cmp
sub
push
jo
shl
dec
xchg
xor
rol
(bad)
cli
pop
inc
test
int
jmp
mov
popf
mov
lds
mov
push
in
mov
ret
dec
push
pop
cmc
test
mov
inc
test
push
and
cmp
sub
or
and
ins
push
mov
mov
lahf
inc
mov
(bad)
xor
imul
dec
sbb
inc
mov
dec
sbb
(bad)
mov
mov
cld
sti
jbe
and
sub
outs
mov
sahf
and
mov
dec
dec
scas
jne
adc
mov
js
test
mov
pop
(bad)
loope
and
inc
mov
pop
inc
cmp
sub
cmp
sbb
ror
cmp
or
test
aam
test
std
fwait
jmp
fidivr
mov
cmp
pop
fild
cmp
cmc
cmp
jno
cs
imul
leave
fldenv
lock
std
ja
pop
xchg
(bad)
xchg
retf
in
pop
imul
mov
mov
or
mov
test
(bad)
pop
stos
sub
in
mov
and
stos
cmc
push
xchg
mov
inc
retf
or
mov
test
je
pusha
es
cmps
or
or
cmp
push
cmp
sub
sub
sub
fs
or
call
fs
shl
inc
popf
fs
pop
sbb
arpl
xchg
jbe
mov
mov
fist
test
sbb
xor
mov
enter
sbb
mov
cmp
mov
call
cmps
imul
push
push
mov
(bad)
leave
and
mov
push
jg
div
clc
push
push
nop
outs
daa
cmps
js
jne
push
int
and
mov
repnz
leave
jo
call
(bad)
sbb
adc
shl
push
mov
mov
adc
jge
fld
lea
lea
rcr
mov
sub
data16
xchg
push
scas
sub
out
mov
ret
aam
shl
cli
hlt
push
mov
or
cmp
jno
jo
fst
hlt
jne
repnz
mov
xor
gs
mov
or
jo
inc
cmp
add
dec
push
adc
xchg
lock
(bad)
lods
add
or
mov
and
mov
jge
or
movs
loop
pcmpgtw
mov
add
cmps
xor
sbb
lock
dec
inc
cmp
and
inc
outs
repnz
xchg
xchg
xchg
adc
inc
and
test
xchg
les
cmps
jns
adc
pop
and
je
sub
inc
out
imul
scas
pop
inc
jl
es
sub
cdq
test
inc
clc
jmp
shl
jae
jne
xchg
and
xchg
ds
inc
xchg
jno
jmp
push
inc
(bad)
bndldx
jbe
dec
xor
mov
adc
lahf
cmp
dec
stc
outs
jne
push
or
fsub
mov
pop
cmps
les
mov
dec
fnsave
adc
push
repz
sub
dec
push
(bad)
outs
cmp
inc
repz
mov
mov
mov
jae
and
xchg
in
icebp
jae
jmp
mov
jnp
sub
bound
push
int3
in
jne
cwde
sbb
or
popf
sub
call
js
inc
adc
jmp
dec
shl
(bad)
not
movs
pop
sar
mov
test
out
pop
mov
pop
cmp
and
xor
cwde
xchg
ds
int
nop
or
xchg
bound
nop
call
sahf
push
push
add
sahf
loope
mov
add
icebp
or
xchg
jnp
(bad)
sbb
shl
jno
mov
scas
mov
enter
popa
popa
stc
jno
jbe
in
out
outs
daa
rcl
lock
ror
clc
int3
or
cmp
mov
xor
ins
dec
imul
sbb
mov
scas
jle
out
mov
je
sub
lea
inc
cdq
push
jne
ror
call
call
push
xlat
mov
add
push
inc
mov
es
mov
out
lea
or
lds
cmp
(bad)
scas
dec
ret
mov
inc
xchg
retf
jbe
lock
mov
cld
shr
jmp
cmps
cmp
or
pop
xchg
push
lods
jg
dec
cld
and
out
jl
sbb
cmp
push
fwait
(bad)
fisttp
lahf
(bad)
imul
jns
fcmovne
jnp
(bad)
jb
fs
lods
inc
hlt
push
mov
fyl2xp1
shl
mov
add
or
and
jnp
sub
mov
retf
in
sub
fstp
pushf
fnsave
inc
jo
add
ror
push
xor
mov
retf
push
in
mov
mov
push
cmps
cmps
dec
mov
inc
out
lea
xor
mov
sub
fsubr
scas
xchg
dec
mov
in
jp
stos
sar
enter
int
call
jle
into
or
shl
push
and
or
and
push
push
imul
arpl
cmp
mov
jmp
or
jg
push
inc
jnp
dec
mov
pushf
mov
pop
(bad)
scas
dec
rcl
inc
ja
out
bound
(bad)
or
sbb
xor
inc
xor
add
shr
jne
or
cmps
out
adc
out
and
mov
cli
cmc
cmp
lods
xchg
push
pushf
mov
shl
inc
frstor
jne
rol
cmp
in
fwait
push
jge
ds
mov
out
mov
(bad)
lock
or
inc
(bad)
push
es
test
test
popa
test
pop
xchg
xchg
dec
inc
cs
adc
push
icebp
adc
jmp
in
adc
std
lods
lahf
arpl
push
or
ss
cmp
mov
mov
mov
(bad)
jbe
cmp
mov
sbb
pop
push
cmp
nop
mov
xchg
push
sbb
pop
dec
scas
fild
aas
aas
xchg
inc
add
cmp
inc
and
sbb
jmp
and
in
fdiv
ret
stc
cmp
xchg
mov
aas
lahf
shl
movs
aas
sbb
fstp
ror
xchg
call
sub
dec
dec
inc
jnp
loopne
mov
aad
inc
fs
enter
sbb
xchg
dec
sub
mov
pop
mov
jb
xchg
xor
push
push
imul
bound
mov
scas
jp
mov
adc
cwde
jmp
lds
add
outs
jns
out
dec
shr
push
lea
mov
pop
aaa
js
es
ror
popf
lods
mov
cmc
jp
inc
xlat
iret
dec
fidivr
jo
mov
sub
nop
icebp
add
scas
and
sar
mov
add
mov
movs
pop
cmp
lods
aaa
ja
or
add
pop
jle
push
inc
repnz
adc
imul
sbb
repz
daa
jg
movs
loop
dec
stos
(bad)
add
movs
or
inc
sbb
sub
mov
inc
mov
jbe
loop
cmp
mov
ins
sub
jp
hlt
fld
xchg
jmp
mov
dec
enter
fisttp
test
xor
inc
cmp
fimul
imul
sbb
out
xchg
or
loope
inc
enter
xchg
paddsw
mov
xchg
or
icebp
daa
jl
fs
repnz
dec
sub
(bad)
hlt
cwde
inc
rcr
fwait
bound
dec
sqrtps
or
out
dec
mov
in
xchg
push
xor
movs
sti
mov
cli
or
add
mov
in
stos
out
xor
cmp
fild
mov
mov
jmp
mov
movs
cmc
dec
in
scas
in
ins
pusha
adc
sahf
push
sub
lea
lea
movs
mov
sbb
icebp
leave
into
push
pop
xor
sbb
push
push
retf
jg
sahf
jne
sbb
enter
js
mov
imul
adc
ins
cmp
fbld
test
dec
ss
inc
ins
cli
mov
dec
and
mov
mov
arpl
xor
call
arpl
sbb
shr
add
mov
mov
lods
jne
xor
clc
out
and
in
popf
xor
jae
pop
cmp
push
loope
mov
mov
mov
out
call
pop
addr16
xor
cwde
mov
mov
xchg
loop
test
mov
arpl
fild
sbb
cmp
mul
adc
xchg
pop
and
out
xor
ret
cwde
popa
fs
sbb
push
shl
gs
mov
xor
xchg
xchg
into
stos
xchg
fstp
jg
adc
nop
(bad)
ss
stos
int
and
lods
scas
retf
xchg
ror
or
and
sahf
jp
inc
hlt
shl
nop
(bad)
push
jbe
sti
xchg
sub
sub
in
sub
shl
add
ds
sbb
xchg
out
lds
and
bound
test
aad
and
inc
lods
lods
into
push
fisubr
cdq
xchg
(bad)
adc
fdivrp
test
xchg
xchg
pop
pop
dec
push
dec
popa
xor
test
jl
inc
rcr
xor
mov
rcl
imul
bound
aaa
jnp
push
sbb
outs
xchg
xchg
add
jmp
fisub
push
add
sub
gs
out
out
xor
icebp
add
mov
cdq
pop
sub
sbb
sbb
pop
data16
mov
pusha
adc
push
lds
jle
into
in
data16
fidivr
or
fs
lea
cmc
dec
mov
es
push
ja
mov
xchg
sar
push
sub
repnz
dec
jl
dec
mov
mov
and
cmp
push
mov
in
cli
scas
push
push
push
(bad)
push
mov
cmp
in
test
das
call
int
push
or
loope
and
and
xor
call
stos
jg
jbe
inc
mov
mov
adc
push
ror
dec
pop
sbb
retf
jae
mov
dec
mov
sub
push
jnp
dec
popa
add
ror
fsub
aad
sbb
and
rcr
scas
xor
xchg
mov
push
cmp
cld
sbb
loope
ficomp
push
mov
xor
out
jbe
sub
xchg
xchg
stc
lods
not
sub
mov
and
ret
out
ss
or
aad
or
test
pop
fwait
xor
popf
inc
adc
mov
mov
jno
les
xchg
mov
sbb
cmp
(bad)
iret
retf
jae
add
add
fidiv
dec
pusha
push
push
in
sub
sbb
bound
xor
adc
repz
inc
in
and
pop
mov
mov
cmp
stc
mov
sbb
ror
add
fcmovnu
sbb
add
stos
scas
loope
inc
ret
mov
jne
pop
adc
mov
pop
mov
xor
pop
push
mov
dec
pop
loopne
out
sub
test
ret
xor
push
lea
sub
iret
repnz
sub
cmc
push
mov
xchg
aam
and
popa
mov
rol
or
lea
out
push
dec
call
stos
std
cmps
rol
adc
sub
xchg
and
arpl
mov
xchg
enter
popa
dec
imul
cmp
ins
fadd
inc
int3
jo
lahf
jnp
dec
jns
push
fmul
fild
pop
pop
or
dec
xlat
jecxz
repnz
jmp
mov
lea
push
rcl
xchg
xchg
cmp
sub
jmp
bound
jae
or
shl
pop
jmp
test
loop
xor
xor
pop
jb
mov
cmps
push
mov
out
cmps
mov
xor
imul
cmp
sub
push
add
push
pop
push
pushf
popa
cs
fsubr
es
mov
ret
clc
xor
adc
mov
pop
fbld
jne
call
loop
stos
popa
pop
pusha
pusha
(bad)
mov
popa
cli
sub
xor
jmp
dec
lods
sub
inc
pusha
cmp
loope
add
out
jbe
pop
fstp
stc
cdq
cdq
dec
cmp
jp
xchg
jnp
cmp
rcr
sbb
push
data16
or
scas
mov
inc
mov
repz
add
or
test
ja
test
cwde
xchg
neg
cmp
mov
int
pusha
and
iret
mov
adc
ds
ins
pop
lds
or
lock
xor
xchg
mov
xchg
add
dec
pop
jp
mov
(bad)
lahf
jge
xchg
xchg
loope
push
jb
neg
adc
mov
das
lods
sub
pop
stos
xor
jne
add
mulps
dec
jge
push
jg
inc
fild
(bad)
jp
inc
bound
fwait
into
adc
jge
mov
pop
inc
rcl
inc
iret
cwde
inc
test
sub
fs
addr16
and
or
mov
imul
scas
call
call
call
push
inc
cmc
popa
dec
es
in
arpl
cmp
inc
jl
das
mov
cld
lock
pop
push
out
cmps
jmp
das
out
jl
mov
jne
xchg
leave
adc
or
fdivr
pop
iret
bound
cld
jmp
mov
cmp
mov
jnp
mov
cmp
mov
jnp
mov
scas
sub
jo
repz
rcl
push
movs
sub
or
add
jb
jns
ja
xchg
push
push
jge
push
or
push
sbb
fwait
jbe
in
(bad)
push
out
call
lods
sbb
cmp
inc
jge
(bad)
pusha
shl
aaa
jbe
adc
xchg
pushaw
popa
add
loop
or
int3
mov
cs
addr16
xor
push
popa
mov
sahf
aad
test
jecxz
ds
pushf
sub
jo
ins
xchg
loopne
loop
or
pop
add
adc
(bad)
mov
rcr
hlt
mov
ss
in
pop
adc
cld
and
es
mov
arpl
xchg
arpl
adc
cmp
inc
pop
scas
les
je
movsx
in
jne
ret
sbb
(bad)
lods
adc
ins
out
(bad)
popa
push
ja
mov
push
mov
and
loopne
push
sahf
call
pusha
retf
es
inc
fnstsw
mov
add
xor
dec
jecxz
pop
test
daa
sbb
sti
aas
mov
jnp
add
push
mov
mov
jbe
jge
pop
inc
in
sahf
cld
lock
xor
mov
outs
pushf
lods
dec
sbb
lds
imul
adc
xor
pop
repnz
dec
mov
and
fs
aam
(bad)
mov
inc
mov
ss
cwde
adc
mov
les
repz
retf
mov
adc
inc
xchg
in
sbb
and
and
mov
movs
je
aam
or
ror
cmp
mov
mov
and
ret
iret
scas
mov
hlt
push
test
int3
or
mov
jno
cld
sub
cmp
or
xchg
(bad)
dec
sub
push
mov
dec
xor
stos
inc
cmc
popf
movs
mov
aam
mov
cmps
mov
sahf
bound
jae
test
jecxz
out
adc
xchg
jmp
and
xchg
aaa
jmp
es
ss
mov
movs
sahf
aaa
cmp
(bad)
out
in
les
cmps
and
add
fisttp
enter
adc
push
jmp
fadd
rol
ins
out
aas
jg
loop
fwait
loope
es
mov
pusha
mov
mov
aas
jecxz
push
repz
pop
leave
sbb
(bad)
test
and
jecxz
dec
xor
loop
adc
pop
cmp
not
sbb
ins
movs
push
test
and
xor
outs
jbe
in
(bad)
in
sub
scas
movs
hlt
xchg
js
les
inc
js
mov
sbb
push
(bad)
in
or
int3
ret
std
je
aaa
push
jle
jno
pop
fs
pop
xchg
test
std
pop
hlt
dec
push
fstp
dec
adc
in
sbb
dec
rcl
pop
mov
xor
pop
test
or
cmps
jb
test
cmp
fidivr
into
inc
fs
mov
inc
dec
cmp
and
in
in
inc
je
in
jg
adc
sub
sbb
sub
ss
out
push
xchg
ret
adc
nop
xor
mov
inc
xor
inc
test
sbb
sub
push
inc
mov
and
ret
icebp
fstp
retf
gs
push
xchg
or
mov
les
push
mov
pop
inc
cmp
jmp
mov
cld
push
dec
push
out
ins
stos
inc
adc
mov
pop
sbb
push
hlt
mov
call
xor
push
(bad)
outs
int
ja
cmps
jmp
cmp
pop
pop
push
shl
movs
test
sbb
(bad)
jge
sbb
pop
sub
ret
shl
arpl
inc
in
ds
std
xchg
out
push
or
loop
pop
fcomp
fist
ja
fidivr
das
pop
outs
push
pop
push
fnstsw
jae
or
aas
adc
ds
add
mov
in
out
xor
in
shl
(bad)
inc
mov
js
pop
(bad)
fstp
sbb
aaa
and
pop
icebp
cmps
xor
shl
fs
aam
arpl
sbb
pop
(bad)
out
or
jne
enter
sub
ds
sbb
sbb
sub
and
dec
sub
clc
jo
sub
and
leave
cdq
ret
in
bndstx
jmp
fwait
arpl
sub
inc
test
add
inc
mov
cs
jp
xor
movs
ins
popf
mov
mov
add
cmp
addr16
imul
and
lock
sahf
inc
movs
(bad)
shl
cmc
fiadd
sbb
loope
hlt
mov
mov
rcl
sar
inc
es
(bad)
jo
ror
stos
mov
rcl
ss
push
pusha
mov
mov
mov
je
nop
inc
sub
xlat
or
and
cmc
lock
mov
ror
imul
mov
add
inc
mov
hlt
leave
push
call
sbb
sbb
xor
(bad)
imul
add
imul
pop
iret
jl
repnz
dec
sub
xchg
pop
popf
aas
jae
loopne
sbb
es
std
inc
out
push
stc
mov
adc
ror
push
xlat
inc
jge
adc
adc
call
adc
pushf
add
retf
out
push
push
inc
ins
lock
mov
shl
in
shr
movs
pop
add
ins
sbb
adc
add
mov
adc
xchg
jecxz
js
xchg
dec
mov
shl
aad
int3
or
inc
inc
mov
sbb
imul
pop
push
ror
xchg
or
loop
cmps
lock
inc
dec
sbb
xor
shr
in
adc
push
lock
imul
mov
inc
add
call
sbb
sbb
loopne
mov
stos
scas
inc
cdq
(bad)
in
and
xor
je
xchg
adc
jb
inc
jle
xchg
iret
mov
sahf
mov
pushf
test
add
test
push
cmc
in
pop
xor
jg
mov
sti
xchg
dec
pop
in
retf
repnz
xor
xlat
pop
outs
xor
cli
mov
out
aad
cmc
sbb
out
fldcw
test
cmp
dec
lea
inc
fwait
dec
xchg
test
sahf
ss
inc
outs
xchg
es
ins
shr
inc
mov
mov
pop
test
ja
(bad)
aas
(bad)
mov
inc
pop
scas
repnz
or
mov
dec
push
fldenv
aam
loopne
pop
adc
mov
add
lds
mov
std
fcmovne
cmp
std
xchg
shr
jnp
fwait
(bad)
loope
ins
cwde
pop
jae
add
adc
cmps
movs
jg
pop
adc
mov
add
mov
arpl
out
and
or
sub
sbb
adc
pop
sahf
imul
jmp
sbb
daa
mov
clc
or
jns
xchg
icebp
inc
dec
mov
push
ret
mov
xchg
mov
cmp
out
pop
xchg
fs
or
adc
mov
out
jmp
ss
inc
test
adc
sub
cs
or
call
sbb
pop
sub
jae
loop
ins
dec
push
and
sbb
jae
push
mov
hlt
push
inc
scas
lock
(bad)
retf
stc
popf
cdq
cmp
fucomi
(bad)
push
shr
mov
push
xor
pop
push
adc
in
xor
in
add
mov
cmp
in
adc
lods
sti
jno
jns
or
pop
aad
aad
in
sbb
jo
retf
dec
lods
mov
dec
mov
mov
pop
(bad)
repz
retf
mov
ja
add
mov
push
sub
sbb
cmps
or
pusha
xchg
jb
inc
cmps
pop
(bad)
or
lahf
in
std
mov
pop
(bad)
jnp
stc
fidivr
scas
mov
daa
or
je
sub
sbb
clc
inc
adc
ins
test
jl
sbb
xchg
cwde
stos
nop
sbb
test
pop
sti
add
jg
mov
mov
movs
mov
data16
adc
push
or
add
clc
leave
imul
int
stc
xchg
inc
dec
sbb
inc
cmp
repz
jmp
dec
jl
sub
(bad)
fadd
and
fld
retf
and
and
or
and
jmp
in
mov
bound
mov
push
push
cmp
xor
jne
imul
xchg
mov
push
gs
jl
mov
xor
adc
or
cld
xor
and
mov
xchg
mov
imul
aaa
or
lods
(bad)
imul
mov
push
sub
push
xchg
in
dec
inc
loope
es
mov
sbb
(bad)
xchg
fsub
and
mov
lock
mov
pop
cli
cmps
dec
add
jge
xor
xchg
sbb
pop
rol
fadd
xor
sub
in
scas
sbb
cmp
gs
mov
(bad)
jno
push
cmp
push
mov
inc
add
imul
push
xor
and
sbb
jo
mov
sub
push
jecxz
pop
add
jl
or
leave
jp
sub
add
push
fcomi
jnp
cmp
cmp
cli
mov
mov
call
mov
sub
das
push
(bad)
scas
ficomp
xor
mov
scas
(bad)
push
adc
mov
cdq
or
mov
jecxz
adc
and
call
xor
xchg
lahf
jle
push
mov
jmp
mov
and
pushf
mov
repz
mov
cli
pop
xchg
cmps
mov
ficom
out
popf
push
cmp
out
lock
sub
call
jmp
mov
shl
jle
xchg
jmp
add
pshufw
jnp
or
aad
sbb
stos
sub
and
push
test
adc
cmp
add
inc
movs
aas
in
pop
in
mov
add
daa
scas
call
test
xor
mov
sub
push
dec
push
repnz
sub
lods
clc
pop
jp
cmp
add
es
xchg
mov
loopne
and
jl
cld
cmps
inc
popf
mov
pop
xor
imul
imul
mov
jecxz
repz
or
data16
push
into
mov
or
movs
pop
inc
int3
lock
sub
movs
imul
adc
cmp
test
push
pop
cmp
arpl
ins
xchg
js
or
dec
aam
pop
ror
aad
es
dec
jl
cmps
and
pop
mov
mov
fstp
pop
pop
jns
stos
dec
cmp
daa
les
daa
rcl
sti
clc
pop
int3
xchg
lods
xchg
cmp
mov
inc
(bad)
push
inc
(bad)
and
mov
or
jmp
std
pop
and
push
or
dec
and
out
push
sti
lahf
in
cwde
sbb
iret
out
daa
imul
cld
fs
jno
div
xor
cmps
cmps
cmc
pop
pop
or
pushf
out
sti
imul
cld
in
shl
xor
idiv
and
loop
or
icebp
push
xlat
push
xor
xlat
cdq
mov
fdivr
pop
rol
test
mov
pusha
lods
js
inc
jnp
cmc
mov
xor
icebp
je
or
and
add
or
js
scas
adc
sbb
outs
outs
and
(bad)
pop
mov
pop
fadd
cwde
or
popf
mov
adc
sub
adc
pop
int3
sbb
movs
mov
inc
dec
pop
imul
ins
arpl
sub
push
sub
call
mov
add
mov
loopne
add
mov
add
add
jae
xor
aas
(bad)
int
jae
jne
call
mov
ds
ins
push
gs
gs
mov
sti
jecxz
popfw
pop
stc
cmp
mov
xchg
js
dec
xchg
sar
pop
outs
ss
mov
xchg
cmova
push
sbb
or
jae
repnz
retf
cmp
dec
(bad)
dec
sub
fcmovbe
test
cs
cld
push
test
call
jle
movs
mov
mov
jb
sbb
popf
outs
imul
jecxz
xor
fwait
ror
ins
mov
push
movs
mov
ds
rcr
xor
xchg
sub
fsubr
leave
inc
(bad)
push
std
lds
mov
dec
nop
mov
mov
test
pusha
pop
ins
movs
test
jae
enter
jmp
call
pushf
ins
xlat
jp
jge
and
inc
mov
dec
push
jne
out
out
sub
adc
inc
inc
push
(bad)
adc
push
into
lahf
jmp
jns
retf
sti
daa
stos
sub
jns
scas
inc
jge
stos
aam
jmp
inc
lds
xor
(bad)
dec
neg
pop
movs
data16
and
xor
pop
pop
add
leave
(bad)
xor
pusha
inc
shr
adc
fucomi
nop
xor
xchg
not
pop
(bad)
into
push
fimul
dec
fwait
push
inc
mov
cmps
call
cwde
add
out
(bad)
aad
push
pop
aad
push
jg
dec
cwde
xor
jecxz
sbb
or
push
gs
cld
aad
sub
jge
push
xchg
aam
pop
lock
push
ins
lods
mov
leave
ror
add
addr16
iret
add
xor
in
and
out
outs
jmp
fs
fwait
cmp
jne
enter
push
enter
mov
in
dec
gs
add
push
lock
sbb
cmp
and
mov
add
or
ret
push
inc
ja
or
push
stos
push
inc
sbb
jg
in
or
adc
mov
dec
inc
push
movs
stc
call
add
sbb
mov
mov
mov
add
stc
adc
ficomp
sbb
and
inc
jmp
or
push
jmp
mov
jne
stos
repz
xchg
add
and
imul
repnz
lahf
sub
jo
mov
cmp
sar
push
jbe
sbb
lea
imul
outs
mov
pop
cld
ins
call
pop
adc
sbb
dec
xor
dec
push
addr16
mov
stc
fild
retf
aaa
inc
jmp
inc
out
jno
scas
jnp
jge
and
call
xchg
xchg
gs
mov
inc
fistp
stos
inc
sub
les
xor
shl
pop
mov
sub
str
ror
fist
sbb
cld
ss
xlat
mov
sbb
pop
icebp
mov
pop
test
mov
int3
mov
shl
fcom
add
leave
enter
or
daa
(bad)
jmp
popf
enter
sub
loopne
fiadd
mov
rol
enter
jnp
sub
mov
cld
add
movs
cdq
pop
(bad)
mov
push
ffree
xchg
xchg
sub
push
out
push
mov
sbb
inc
xlat
pop
and
loope
std
dec
outs
or
rcr
xor
jne
inc
mov
ss
dec
std
ret
adc
mov
and
pushf
in
or
aaa
adc
mov
push
cmp
add
xchg
cmp
and
xor
push
mov
push
iret
cmps
adc
mov
pop
clc
mov
pusha
cdq
cmp
pop
mov
in
jmp
add
dec
jns
aas
push
add
adc
jbe
bound
fidiv
scas
aas
enter
dec
test
in
stos
push
xchg
add
fld
jbe
int
ja
imul
loope
mul
xchg
xchg
fisub
push
cld
aad
pop
sub
cmp
cmp
mov
add
dec
shl
das
popa
cmp
sub
push
jns
stos
je
(bad)
ret
dec
dec
jno
inc
sbb
inc
xchg
(bad)
ja
imul
loopne
or
cwde
fistp
or
loopne
jbe
call
out
cmp
dec
dec
or
push
fwait
out
sbb
sbb
xor
pushf
cmc
xor
test
push
jmp
cmp
lods
push
sbb
xor
pop
imul
fsubr
push
aam
aaa
mov
sub
cdq
lods
shl
xor
mov
or
(bad)
pop
inc
aas
stos
leave
cmp
pop
jo
ins
lahf
je
(bad)
pcmpgtd
rcr
jle
not
inc
stos
out
aaa
jmp
dec
jno
lods
lds
sub
es
jle
jle
ds
cwde
mov
js
scas
cmp
xchg
jns
sti
out
ret
pop
mov
cmp
nop
add
out
nop
call
test
outs
xchg
into
lea
jl
inc
cli
cdq
jb
ins
push
mov
hlt
or
xchg
mov
fbstp
mov
inc
cmp
adc
retf
push
addr16
push
cld
jp
push
arpl
mov
mov
das
int
sar
push
ds
dec
in
das
jnp
cwde
outs
rol
jns
xchg
mov
adc
mov
outs
push
lds
sub
fstp
fimul
pop
cmc
mov
pusha
jl
hlt
fdivr
call
and
inc
xor
js
mov
sbb
les
mov
ret
(bad)
repz
ret
in
dec
mov
mov
retf
shr
inc
nop
or
mov
cmc
mov
call
jp
rcr
inc
push
mov
nop
inc
ins
pop
inc
xchg
jg
in
push
adc
js
rcr
(bad)
ds
clc
sahf
int
cld
call
xor
push
xchg
mov
add
les
int
dec
inc
mov
mov
xchg
movs
jb
adc
sbb
popf
sbb
aas
jns
xor
inc
scas
xchg
mov
jmp
mov
sub
iret
imul
stc
cmp
or
xor
jb
dec
fidivr
arpl
dec
jg
nop
pop
stos
stc
push
ins
test
mov
cwde
mov
mov
hlt
int
fld
(bad)
out
(bad)
movs
push
and
xchg
(bad)
out
cmp
arpl
push
aas
push
(bad)
push
movs
out
push
sub
or
dec
mov
call
xor
(bad)
fisttp
dec
leave
lahf
movs
sub
xchg
fstp
jb
push
and
loope
(bad)
mov
push
inc
dec
inc
ret
sbb
frstor
xlat
xchg
xchg
jb
sahf
jb
sub
sub
mov
dec
call
dec
xor
mov
aam
dec
jne
or
in
jle
pushf
sbb
loope
mov
rcl
cmp
sti
or
jp
ds
and
pop
hlt
out
out
add
jae
sbb
in
cmps
xor
inc
and
inc
out
dec
mov
xlat
(bad)
pop
jb
sub
lahf
jg
loope
and
std
js
add
pop
xchg
fsubrp
xlat
stc
dec
mov
inc
sbb
inc
push
push
jnp
icebp
je
ds
mov
sbb
(bad)
fbstp
sbb
adc
ret
aas
out
retf
outs
test
outs
adc
pusha
mov
or
sti
jb
ja
les
je
xchg
add
xchg
(bad)
fld
sahf
xchg
inc
mov
mov
loope
sbb
out
cmp
sub
(bad)
cwde
push
mov
cmps
sbb
push
and
cwde
sub
ins
inc
fld
fstp
rol
mul
push
dec
std
pop
jbe
xchg
cmps
jge
lahf
icebp
out
fmul
add
fmul
mov
ret
scas
das
call
aam
aad
imul
add
sahf
adc
mov
and
push
cmc
mov
std
sahf
jmp
sub
jp
xor
mov
and
rol
aad
jle
cs
dec
mov
les
iret
imul
ds
sbb
mov
outs
fxch
fmul
ficom
lods
add
dec
dec
pop
inc
movs
(bad)
daa
pop
mov
add
outs
jmp
movs
xchg
jmp
scas
sbb
and
mov
dec
daa
js
inc
cdq
and
xchg
sbb
xchg
cmps
mov
mov
(bad)
je
dec
dec
jae
mov
adc
ret
mov
pop
arpl
jg
scas
mov
arpl
call
push
inc
les
jns
sbb
push
adc
adc
or
inc
push
lahf
in
dec
sbb
xchg
adc
test
int
ret
jle
popf
stc
sub
adc
pop
mov
cmc
mov
out
and
jns
repz
inc
jb
pop
and
(bad)
aam
rcr
mov
out
adc
out
ror
sub
pop
ja
push
pop
jle
push
(bad)
(bad)
push
xchg
loop
sti
cli
mov
loopne
out
lods
mov
or
iret
aam
fbld
jmp
(bad)
stos
and
(bad)
loop
gs
sbb
inc
or
push
sub
sti
movs
cwde
or
(bad)
cmc
cmp
mov
rcr
fs
inc
mov
add
arpl
aas
push
xor
les
adc
push
out
ficomp
pop
sbb
fs
fisttp
sbb
inc
dec
icebp
loopne
xchg
inc
and
and
mov
dec
les
mov
mov
sub
mov
test
pushf
push
xchg
ds
loopne
shl
cld
pop
in
mov
push
mov
imul
ja
pop
pop
das
hlt
(bad)
nop
sbb
cmc
out
into
outs
jmp
adc
pusha
push
mov
cmp
ret
inc
jp
add
push
adc
fbstp
loopne
test
ret
cli
lea
lahf
push
fld
loopne
scas
test
rol
ret
dec
xchg
test
push
pusha
jnp
mov
mov
xchg
pop
pop
adc
or
inc
mov
fcmovne
les
fnstenv
jg
les
mov
addr16
or
test
pop
shl
outs
jbe
fmul
mul
popf
cmp
mov
icebp
scas
dec
cs
inc
in
mov
mov
mov
dec
mov
cmp
add
retf
push
je
cwde
jmp
in
ror
pushf
sar
mov
sahf
fisub
dec
out
aaa
xlat
jne
repz
aad
xchg
pushf
jle
pop
cli
sub
lods
jne
xor
jae
adc
or
pushf
ins
add
sub
push
adc
jmp
popf
loopne
cmp
imul
fwait
push
jmp
ins
scas
es
or
ins
sub
adc
jmp
and
(bad)
mov
dec
(bad)
ficomp
not
jmp
(bad)
ins
lock
mov
mov
test
add
mov
dec
scas
pop
push
adc
lods
cmc
out
hlt
dec
lock
mov
pusha
sub
das
push
push
leave
jle
pop
mov
mov
or
cwde
fild
icebp
(bad)
lods
lahf
sbb
leave
mov
pop
mov
mov
cmp
push
fisttp
test
pop
ja
push
adc
push
sti
inc
call
(bad)
mov
mov
fwait
jl
cmp
imul
mov
push
mov
int
leave
xor
pop
div
xchg
mov
xchg
gs
pop
stos
xor
inc
fcom
lock
bsf
xor
jmp
inc
or
push
jecxz
cli
call
out
outs
xor
fisubr
or
jle
pop
arpl
inc
mov
sti
pop
lods
push
jb
xchg
fst
xchg
cmp
sbb
cmp
jae
lds
clc
push
loop
repz
sub
(bad)
out
xchg
pop
fsubr
mov
arpl
fistp
add
sub
or
mov
mov
mov
cmp
sub
fwait
push
rcr
cmp
push
inc
mov
xchg
xor
jl
aaa
mov
dec
int
push
jmp
or
pop
scas
mov
movs
out
inc
inc
add
lods
bound
mov
in
mov
xchg
adc
jp
dec
mov
loopne
add
add
jnp
jb
sub
ins
or
imul
dec
loop
in
adc
jp
enter
pop
loopne
push
add
sub
js
ds
xchg
ja
adc
mov
cs
xor
inc
lds
cmc
lods
push
mov
out
in
and
fimul
icebp
mov
sbb
ins
pop
jl
je
and
inc
xchg
push
mov
popa
addr16
push
sahf
stos
mov
push
adc
cmp
or
push
int
retf
out
xchg
ret
cdq
js
push
gs
sbb
(bad)
or
fisub
sub
(bad)
jnp
adc
bound
cmp
icebp
xlat
(bad)
ficomp
and
xlat
hlt
enter
and
pop
inc
outs
push
fadd
aam
xchg
mov
adc
mov
data16
jl
mov
scas
dec
repnz
out
shl
dec
(bad)
jns
push
adc
lock
mov
repnz
(bad)
mov
or
cdq
(bad)
xlat
int3
pop
jl
push
dec
into
jg
mov
out
push
pop
test
or
test
adc
mov
gs
inc
scas
jp
cmp
xchg
into
addr16
and
pop
sub
cmp
inc
pop
xchg
mov
push
sub
ja
pop
mov
xchg
sahf
daa
sub
mov
xor
pop
push
and
arpl
add
call
lods
enter
mov
sbb
cld
out
fcmovnbe
xchg
jge
loope
adc
neg
sub
popf
mov
lods
mov
ret
sub
stos
push
test
pop
enter
sahf
mov
cmp
sub
inc
repnz
imul
das
push
stc
or
cmp
mov
in
rcl
or
jns
jge
cmps
pxor
popa
shl
mov
jne
mov
jl
push
(bad)
pop
jbe
xor
into
xchg
into
out
mov
and
in
and
mov
(bad)
inc
inc
push
pop
mul
jnp
and
xor
push
stc
pop
aas
sub
cmc
sub
fnsave
cs
sub
push
out
xlat
(bad)
(bad)
jb
mov
mov
inc
(bad)
into
jp
es
pop
mov
and
xchg
call
inc
test
ror
mov
mov
(bad)
dec
sbb
dec
mov
dec
in
mov
cwde
sbb
mov
test
push
mov
loop
mov
cmc
scas
jg
push
cmps
jge
ret
out
scas
je
(bad)
lahf
mov
jmp
in
cdq
arpl
jp
mov
cmp
sub
(bad)
daa
or
mov
stos
scas
jge
rcr
es
fidivr
pop
jae
lahf
mov
inc
mov
out
mov
jmp
add
sub
push
in
(bad)
out
or
jmp
jecxz
mov
sub
mov
enter
mov
repz
push
or
mov
jnp
cmps
rcr
jns
pusha
dec
mov
jecxz
xor
sbb
outs
adc
xchg
rol
std
enter
mov
cs
int
lds
in
xor
call
mov
imul
pop
push
xor
(bad)
dec
cmp
dec
xchg
loope
daa
mov
dec
xor
int
push
shl
movs
jmp
scas
xor
push
dec
or
enter
lahf
or
pop
or
out
leave
cmps
cli
push
mov
into
call
imul
scas
xlat
pop
dec
sbb
je
adc
pop
jge
imul
jo
int3
push
sbb
inc
hlt
loopne
imul
movs
push
leave
inc
add
je
xchg
rcr
repnz
push
mov
out
mov
inc
mov
sbb
mov
xchg
dec
cmp
or
or
addr16
cmp
cmc
mov
push
cmp
xor
mov
mov
add
sbb
data16
(bad)
fdivr
mov
retf
cmp
in
inc
out
dec
test
mov
stc
and
pop
mov
ja
fdiv
add
test
xchg
hlt
aas
arpl
jmp
jecxz
mov
mov
lahf
cmp
sbb
scas
xlat
into
sub
push
pop
and
addr16
addr16
pusha
pop
repnz
cmp
cmp
sub
mov
adc
jb
call
stos
stos
inc
lods
mov
fstp
sbb
push
mov
mov
push
arpl
mov
inc
mov
rcr
out
ja
jecxz
adc
cli
add
repz
push
jmp
inc
je
mov
xchg
add
scas
loop
jmp
call
int3
mov
xlat
mov
pop
sbb
dec
dec
iret
cmp
mov
pop
cmps
ret
ds
mov
test
push
mov
mov
push
aaa
pop
pop
push
push
repnz
adc
jns
data16
jg
in
mov
mov
repnz
scas
je
cmp
fcom
retf
or
std
mov
dec
jmp
ds
or
xor
dec
mov
ror
mov
mov
jmp
imul
xlat
pop
movs
in
fdivr
mov
clc
push
cmp
mov
cmp
pop
mov
add
inc
cs
stc
or
out
xchg
cmp
add
adc
and
xchg
jmp
cmc
mov
pop
cmp
cmp
pop
(bad)
data16
add
rol
mov
aam
ins
pop
and
pop
xchg
sub
daa
mov
mul
ret
call
aam
fnsave
mov
xchg
jecxz
add
dec
jns
mov
sbb
cmps
push
nop
xlat
adc
ret
inc
mov
xchg
sbb
and
mov
jmp
jg
and
xchg
or
imul
add
xor
sub
and
dec
jmp
rep
add
pop
push
fistp
lods
pusha
jmp
sbb
clc
push
jp
jo
test
imul
mov
dec
out
pop
cmps
rcl
pushf
xor
inc
enter
aaa
pop
jg
ins
out
outs
push
dec
imul
or
push
ins
inc
mov
jecxz
pop
mov
push
mov
retf
or
gs
shl
mov
mov
popf
mov
push
add
test
xchg
cmp
out
push
xchg
repnz
adc
pop
sub
fdiv
mov
push
fisub
adc
inc
popf
adc
je
inc
clc
jmp
std
jmp
push
fprem
das
cmp
sub
int
mov
adc
or
adc
and
gs
movs
ret
adc
xchg
xchg
out
ret
es
push
mov
outs
jnp
sbb
shl
gs
(bad)
mov
sub
mov
in
ret
dec
or
mov
xor
cmc
adc
dec
push
js
pop
or
pop
mov
adc
xchg
xor
pop
push
ss
jb
cmp
idiv
rcr
shl
ja
retf
adc
ss
popa
out
mov
mov
dec
pop
and
mov
aaa
jbe
xor
daa
sub
inc
rcr
xor
sti
sbb
ja
jmp
add
mov
es
shr
in
add
inc
dec
cdq
inc
mov
lds
loope
andps
pop
mov
aad
mov
test
loope
adc
pusha
inc
inc
cmps
(bad)
addr16
loopne
xor
push
popa
leave
mov
loopne
mov
add
adc
pop
gs
out
cmps
(bad)
mov
fucomp
pusha
(bad)
sbb
imul
push
pop
dec
out
or
cmp
xchg
xchg
push
xor
mov
mov
movs
stos
icebp
jl
xchg
pop
jo
mov
out
iret
lods
enter
jmp
bound
and
push
movs
push
out
pop
loopne
xchg
in
popf
sbb
or
pop
mov
out
adc
inc
adc
mov
and
jmp
in
jae
and
push
js
in
add
and
or
push
out
pop
cwde
in
sub
clc
cs
popa
std
bound
pushf
mov
pop
mov
ins
mov
enter
and
mov
movs
scas
jp
stos
jg
jo
mov
aam
jp
pop
mov
daa
stc
test
pusha
dec
xchg
mov
stos
cmps
retf
call
mov
mov
and
jne
xchg
jno
out
xchg
jmp
mov
push
mov
cmp
jmp
loop
loop
cld
in
imul
lahf
mov
xor
nop
inc
sub
mov
je
pop
int
xchg
sub
sub
call
nop
mov
ret
loopne
push
fs
neg
test
or
xchg
cmp
lea
movs
fs
out
(bad)
hlt
xor
mov
es
scas
mov
xor
inc
test
xchg
push
scas
add
out
mov
lea
sbb
(bad)
icebp
out
sub
dec
mov
adc
push
ret
arpl
popf
call
rcr
ss
lods
or
data16
test
mov
(bad)
xchg
repz
popf
xor
shl
clc
or
jo
sahf
xchg
pop
inc
cld
call
jbe
xor
mov
imul
push
xchg
xchg
jo
adc
outs
mov
loope
sbb
fbld
call
push
dec
inc
mov
jne
loope
test
cli
mov
mov
cmp
push
or
cwde
addr16
mov
push
and
dec
(bad)
loope
xor
aaa
fmul
jle
push
imul
sub
xor
movs
mul
add
xlat
gs
mov
data16
jg
sub
cmps
lea
jge
push
fistp
mov
sub
push
fmul
xchg
loope
add
hlt
cld
out
pop
lods
sti
pusha
je
loopne
ins
xchg
mov
sbb
test
(bad)
iret
cmps
out
loope
ja
iret
lea
sub
sbb
adc
jmp
sahf
gs
fistp
and
xor
lahf
jno
in
rcl
stos
stos
jge
popf
movs
add
addr16
pusha
cmps
dec
fmul
or
push
dec
and
(bad)
and
xchg
fisttp
fist
das
data16
cmp
sbb
pusha
icebp
cld
or
push
shl
cmp
bound
pop
lods
ja
int
rcl
push
iret
arpl
popa
push
shl
mov
bound
inc
das
pop
cmp
(bad)
mov
xor
add
inc
push
pop
ins
imul
push
pusha
adc
push
mov
mov
mov
mov
mov
std
pop
stos
add
jmp
repnz
sti
push
rcl
or
pop
push
lds
retf
jmp
std
mov
xor
adc
addr16
retf
paddusb
push
loopne
je
daa
out
pop
das
fsub
xchg
lods
inc
fsubrp
jae
(bad)
sub
imul
xor
lock
lahf
dec
xlat
add
or
aaa
call
call
push
push
dec
xor
jp
int3
jecxz
or
jp
or
leave
ret
mov
int3
xor
out
jae
adc
call
arpl
cmp
les
pushf
cwde
fidivr
mov
mov
cld
and
adc
or
add
(bad)
or
lods
push
push
xor
out
mov
es
out
cmp
sub
out
xor
pusha
sub
fwait
mov
push
int3
jne
lock
sahf
jb
mov
inc
ins
ds
rcl
cmp
std
jmp
popf
mov
imul
mov
popf
mov
push
ret
and
icebp
cs
into
jg
jae
movs
xor
cs
nop
inc
inc
fnstcw
(bad)
es
and
pop
add
fs
jns
inc
jg
pop
dec
add
ds
fiadd
xchg
in
div
inc
jge
and
mov
jns
sar
jg
mov
mov
stos
inc
push
cmp
ret
stos
lods
mov
cmc
adc
nop
(bad)
push
mov
int
xor
jmp
and
pop
push
fwait
aam
leave
js
inc
xchg
popf
bound
mov
aad
ja
lea
sub
cdq
loope
jle
mov
add
and
lods
add
in
sub
(bad)
sar
shl
sbb
add
movs
mov
sub
sbb
inc
ffreep
pop
inc
xchg
les
mov
xchg
inc
ret
lock
pop
push
push
mov
popw
pop
adc
pop
mov
je
push
adc
or
xor
inc
lock
fiadd
hlt
mov
or
les
hlt
cld
out
cdq
clc
xor
adc
pop
push
lods
mov
fadd
int
or
rol
xchg
xchg
shl
pop
les
dec
enter
mul
jg
stos
push
cs
dec
cmp
push
imul
icebp
dec
cli
out
add
fwait
test
daa
sahf
aas
cld
enter
mov
add
dec
out
mov
in
mov
jmp
fisttp
mov
(bad)
outs
sti
gs
mov
into
mov
lods
call
out
jl
xchg
bound
std
rep
je
sub
mov
inc
sub
jecxz
dec
inc
mov
adc
ja
enter
cmc
fnsave
aas
sub
sub
fwait
stos
fidivr
movs
inc
dec
loope
cmp
adc
cli
cmp
jp
sahf
into
aaa
xor
push
movs
mov
xchg
sbb
pop
idiv
jae
sub
mov
and
pop
sbb
lahf
xor
out
add
das
(bad)
(bad)
cli
sti
cmp
repz
add
daa
lods
retf
ins
jb
mov
ins
pop
push
rcr
dec
mov
icebp
and
icebp
je
fiadd
cmp
adc
fs
cwde
mov
cmp
mov
xor
imul
and
lock
aaa
mov
mov
std
into
jbe
pop
int
mov
int
retf
cmps
es
cmp
movs
dec
jecxz
sbb
cmp
mov
xchg
mov
stc
cmp
in
js
aam
ins
jno
adc
mov
cli
es
out
mov
dec
sti
jb
addr16
pop
jns
inc
into
movs
pop
hlt
fdiv
icebp
or
adc
pop
stc
dec
movs
shr
or
and
jmp
jmp
mov
arpl
outs
jge
imul
cmp
outs
movs
push
lea
pop
into
fdivr
push
cwde
ficomp
jae
lds
repnz
bound
inc
add
addr16
sti
cmps
push
daa
loope
cmp
push
xor
xchg
add
sbb
lock
mov
lss
jns
fsin
in
xchg
or
dec
pop
mov
cmp
pop
or
shr
and
xlat
add
pop
pop
inc
jo
xchg
push
test
sbb
mov
xor
jno
push
lock
ds
cwde
call
mov
dec
xchg
(bad)
fwait
imul
add
and
bound
rol
mov
(bad)
cmp
pusha
add
scas
dec
ja
adc
test
add
mov
push
or
mov
cmp
cmp
sbb
dec
sbb
outs
xchg
mov
mov
dec
test
stc
sbb
cvtpi2ps
and
jno
xchg
xor
add
fcom
lock
rcr
addr16
push
mov
sbb
int3
cwde
and
fidivr
in
les
push
sub
add
add
lds
call
and
mov
scas
add
jnp
(bad)
sbb
cs
call
mov
sub
mov
mov
popa
or
mov
sub
xchg
xor
(bad)
push
and
xor
mov
push
dec
bound
mov
loopne
cmp
mov
lods
mov
cmp
and
daa
mov
retf
dec
sbb
mov
scas
ins
inc
adc
sti
cwde
mov
imul
push
xor
hlt
inc
mov
outs
cmc
mov
fwait
sbb
sub
or
test
jmp
mov
scas
das
push
jecxz
and
push
or
xor
cmp
xor
adc
movs
push
mov
pop
xlat
xor
sbb
cdq
sub
imul
xor
ja
mov
aaa
dec
icebp
mov
pop
in
xor
dec
stc
add
pop
xchg
pushf
sbb
lods
xor
das
dec
inc
cmps
inc
sahf
adc
mov
mov
jmp
xor
mov
push
mov
stc
loope
or
cld
xchg
call
cmp
mov
mov
sub
jbe
push
jg
pop
lahf
mov
sahf
aaa
and
jno
nop
pop
and
outs
daa
cmp
imul
fsubr
dec
test
lahf
pop
repnz
or
or
sbb
push
add
fadd
in
push
adc
xchg
inc
mov
mov
nop
or
and
push
push
and
cwde
mov
(bad)
fs
je
aaa
dec
xor
jo
imul
pop
scas
pop
jle
cmps
(bad)
stc
and
or
and
aam
arpl
xchg
push
push
lods
add
(bad)
add
ss
out
lea
jno
retf
gs
or
and
ins
pop
jae
(bad)
jb
pop
push
sub
sti
neg
dec
(bad)
mov
mov
push
stos
sahf
clc
fisub
jno
out
xlat
xor
sub
jmp
(bad)
pop
stc
ins
xor
clc
push
jle
xchg
test
adc
push
jecxz
pop
(bad)
sub
mov
std
sbb
dec
js
jp
sbb
push
ss
dec
pop
mov
jp
jnp
dec
jg
mov
push
and
cwde
scas
gs
cmp
mov
aad
push
xor
dec
xor
jp
dec
test
pop
add
xor
clc
ror
xchg
add
imul
sub
xchg
mov
cmp
retf
lods
adc
out
jle
fst
shl
add
ror
inc
xchg
inc
pushf
pop
cld
add
push
fcom
pusha
inc
das
mov
ds
sub
in
outs
ficom
push
lock
cmps
dec
sbb
pop
sub
pushf
hlt
les
push
iret
pop
int
cdq
cmp
cmp
or
int3
stos
sub
inc
lock
rcr
fwait
jnp
dec
test
frndint
mov
add
cli
sub
push
fcomp
popf
adc
scas
repz
repnz
(bad)
je
mov
ror
sti
sbb
sbb
xor
and
pop
xchg
popf
in
jp
mov
xchg
and
cmp
clc
sbb
or
mov
jmp
imul
ficom
cmps
dec
mov
lods
jae
push
das
call
std
dec
xchg
aam
and
xchg
xchg
mov
out
or
push
push
sbb
(bad)
test
or
mov
and
pop
stos
inc
add
sti
std
push
adc
jmp
add
icebp
lods
sbb
je
test
js
mov
clc
jmp
outs
stos
js
and
bound
jecxz
or
pop
inc
dec
adc
clc
mov
mov
mov
mov
pop
push
imul
jo
pusha
xchg
test
mov
(bad)
(bad)
jle
xchg
(bad)
(bad)
cmp
jnp
push
mov
jb
jecxz
sub
xchg
imul
mov
cmp
adc
daa
das
mov
xor
jo
and
add
add
arpl
mov
mov
xlat
adc
fild
scas
and
jb
lods
test
fcomp
xchg
cmp
cmps
xchg
shl
mov
cmps
outs
sbb
repnz
add
pop
call
js
xchg
in
inc
xchg
aaa
and
mov
mov
lods
out
lods
loopne
ret
adc
sahf
mov
loopne
out
xor
pop
jmp
and
pop
xor
or
xor
movs
das
ficom
clc
outs
fcomip
fwait
nop
int3
xchg
not
dec
pop
outs
enter
stos
inc
xchg
cmps
sbb
sub
adc
or
outs
out
mov
bound
iret
retf
and
mov
add
dec
dec
mov
adc
jl
mov
daa
or
cs
in
dec
adc
push
out
xor
and
and
outs
call
cmp
(bad)
(bad)
call
cli
ror
out
dec
popf
or
into
mov
data16
inc
pop
aam
fcom
loope
fs
fwait
sub
and
jno
leave
inc
dec
call
enter
sub
repz
inc
mov
out
mov
neg
pop
shr
ror
or
sbb
movs
mov
scas
or
fdivr
call
clc
push
ja
js
jb
adc
inc
sbb
xchg
mov
jmp
js
dec
js
mov
cs
mov
pop
dec
xchg
stos
test
call
xchg
jnp
repnz
movs
adc
dec
jbe
cmp
and
in
pop
cmp
pop
cdq
xchg
mov
xchg
add
mov
inc
and
arpl
inc
mov
icebp
xor
int
lods
js
cmc
outs
inc
lods
add
(bad)
repz
call
mov
or
cwde
shl
lds
test
popa
mov
add
jp
cdq
hlt
push
jmp
cmps
sbb
hlt
into
in
int
mov
cmp
push
cwde
out
sti
test
and
adc
(bad)
arpl
aaa
inc
dec
inc
sbb
sub
pop
xchg
pop
repz
push
inc
sub
mov
movs
iret
fist
add
rcl
jge
inc
jmp
aam
fldenv
sbb
push
ror
sahf
pop
cs
mov
pop
(bad)
int3
cwde
ficomp
and
jo
repz
imul
push
test
call
aaa
sub
jae
loope
and
leave
and
sub
sbb
fwait
stos
push
imul
cli
add
hlt
test
jp
es
enter
push
and
inc
daa
pusha
out
mov
out
push
or
mov
jbe
rcr
pop
cmps
xchg
jo
xchg
pusha
repnz
jmp
push
fisub
fisubr
shr
push
mov
jl
call
pmulhuw
mov
sbb
xlat
fiadd
jg
mov
sub
jnp
xor
jno
ret
jns
addr16
and
in
mov
mov
dec
sub
push
push
xchg
cmp
scas
cmp
scas
test
or
dec
lods
ds
test
mov
fiadd
cmp
xor
js
sub
inc
jo
aam
and
add
adc
jo
mov
adc
push
and
lods
inc
or
ss
bound
(bad)
xchg
jp
mov
cwde
adc
and
cmps
xchg
sbb
pusha
push
xor
cli
inc
lds
shl
add
jno
xchg
(bad)
jnp
dec
nop
fist
jge
add
mov
jo
push
adc
mov
push
jle
dec
stos
into
jbe
mov
mov
sahf
xchg
or
push
sub
es
(bad)
ss
aam
sub
xchg
sahf
sbb
fwait
jmp
outs
ret
je
call
cmps
clc
shr
sbb
jns
out
(bad)
addr16
stc
jb
xor
inc
in
jmp
scas
xchg
mov
aaa
pop
adc
jne
ret
cwde
mov
(bad)
clc
(bad)
pop
push
xchg
pop
scas
fs
pop
ds
sub
shr
cmp
mov
pushf
loop
aas
jae
(bad)
fiadd
cli
(bad)
arpl
cwde
adc
scas
or
cmp
fidivr
aas
push
(bad)
fcmovne
ja
cmp
mov
aad
ret
pop
pop
mov
inc
cmps
pop
sbb
mov
jne
in
cmp
cmp
(bad)
in
stc
neg
cmp
jecxz
iret
pop
push
push
add
pop
jl
stos
mov
mov
loop
js
sub
xchg
pop
enter
jle
xchg
movs
or
pop
push
pop
mov
or
movs
mov
pop
cmps
pop
popa
ins
mov
dec
imul
cmps
arpl
cmp
ficom
pop
data16
loopne
cld
popa
inc
push
mov
dec
jae
jmp
std
aam
cdq
in
(bad)
or
add
aas
pop
cmp
test
aad
ja
sar
js
out
sub
xchg
sahf
ret
pusha
mov
xchg
mov
xchg
sbb
(bad)
not
cld
mov
out
xchg
and
gs
mov
das
addr16
mov
dec
sti
paddd
push
mov
inc
ins
daa
and
xchg
mov
retf
les
and
pushw
push
mov
adc
rcl
xor
aaa
jnp
(bad)
dec
mov
inc
push
inc
and
lea
or
sahf
xor
cmp
ror
push
xchg
lahf
aas
xlat
in
in
mov
daa
mov
cmp
push
retf
dec
xor
sbb
jae
mov
call
xor
aad
sub
pop
lods
leave
add
aad
ret
fldenv
push
outs
adc
call
inc
mov
fiadd
mov
sbb
test
sub
mov
mov
sahf
(bad)
jmp
inc
ins
mul
mov
xchg
inc
push
push
inc
xchg
fistp
(bad)
fdiv
in
push
push
int
sar
xchg
jbe
lahf
iret
xor
xchg
outs
push
dec
sahf
xchg
push
and
das
jo
ja
xor
adc
out
ja
cmc
imul
arpl
call
adc
arpl
(bad)
xor
jb
cld
int
cmps
jne
mov
or
ss
lods
jmp
cli
data16
inc
int3
pop
in
adc
cld
sub
cmc
push
push
ret
or
call
out
adc
(bad)
sub
mov
in
mov
in
out
out
xchg
sub
gs
enter
jns
sbb
jbe
xor
add
sbb
xor
in
dec
mov
and
js
sbb
xor
pop
mov
dec
jmp
movs
xor
pop
stc
sar
adc
mov
or
xchg
stos
sahf
mov
sbb
shl
fld
and
(bad)
cmc
loop
xchg
sub
and
jecxz
pop
cmp
repz
das
aad
mov
add
imul
mov
(bad)
xchg
inc
inc
fld
xchg
adc
mov
sub
fld
push
icebp
or
and
sti
cmc
sbb
jmp
repz
mov
fs
aad
mov
jge
jne
retf
mov
add
push
(bad)
pop
push
mov
ja
push
scas
fidiv
push
lods
sar
aad
pop
xchg
or
out
scas
xchg
shl
fisubr
test
enter
jle
and
dec
and
push
aam
and
iret
fmul
add
pop
xor
xor
cmps
adc
inc
xchg
adc
inc
mov
repnz
cmps
(bad)
jns
pop
inc
neg
push
test
mov
sub
mov
xchg
repz
mov
xor
loope
pop
cld
lock
xchg
out
(bad)
sub
aad
xchg
je
xchg
js
in
push
pop
sbb
mov
outs
inc
push
mov
jl
jg
mov
test
(bad)
pop
aaa
imul
mov
fsubr
bound
mov
scas
mov
icebp
or
mov
cmc
pop
sti
jmp
add
je
repnz
aaa
mov
test
imul
fdiv
mov
jne
popf
adc
lods
movs
repz
shl
xor
fisub
call
sbb
in
loop
shl
mov
call
mov
push
sbb
dec
sub
dec
push
jge
fimul
xchg
inc
jo
imul
push
pop
and
aas
pop
inc
sbb
mov
inc
cmp
sbb
jae
ds
mov
call
bound
das
inc
mov
cmp
movs
(bad)
mov
xchg
mov
pop
add
hlt
ror
shl
enter
jb
cs
xchg
pop
xchg
mov
imul
(bad)
pop
mov
pop
pop
adc
scas
pop
jmp
push
call
push
pusha
push
mov
retf
std
enter
adc
jo
retf
repz
loop
xchg
nop
movs
xor
cdq
mov
push
test
(bad)
das
fwait
mov
sub
sub
dec
enter
sub
pop
loopne
fistp
jmp
in
xor
stos
or
and
xor
sbb
fild
test
cwde
std
inc
shr
adc
pop
and
loope
in
fsub
cmp
jle
call
stos
jb
xchg
iret
ror
ds
jo
mov
paddsb
or
(bad)
adc
call
add
pop
push
loope
jecxz
push
mov
adc
test
mov
sbb
xor
jle
and
in
jle
adc
test
push
jo
lea
xor
cli
or
adc
mov
lea
cdq
loop
mov
in
div
lea
sub
push
mov
pushf
or
mov
stc
ja
aaa
cmove
and
(bad)
and
popa
ins
lods
or
inc
xchg
data16
std
cmp
in
(bad)
and
cmp
test
sub
enter
retf
cwde
cmp
adc
dec
fdivr
mov
mov
fcom
add
fbld
out
mov
mov
inc
cmp
pcmpgtd
push
sub
jl
aas
adc
stos
push
xor
inc
leave
cmps
jne
cs
cmps
in
inc
and
pop
movs
(bad)
add
jnp
jne
mov
stc
mov
and
push
repnz
sub
ins
jae
cdq
mov
fucomi
fdiv
mov
fcomp
mov
scas
scas
cdq
cmp
push
in
inc
inc
mov
and
push
and
(bad)
cli
mov
dec
mov
outs
xchg
xchg
sub
fs
sub
cdq
fldenv
outs
lods
daa
jne
pop
in
cmp
stos
inc
jnp
mov
or
(bad)
pop
stos
and
add
cmp
mov
jbe
in
sub
and
pusha
mov
jbe
push
cld
dec
or
xchg
retf
jle
mov
aas
sub
fdiv
nop
jae
mov
(bad)
push
dec
hlt
fs
inc
mov
cwde
pop
xor
dec
mov
pop
pop
sbb
and
and
xchg
pop
dec
lods
dec
fistp
xchg
loopne
mov
or
push
mov
sub
add
jge
inc
imul
and
mov
les
ss
outs
jecxz
fist
mov
pushf
dec
std
adc
jmp
adc
mov
(bad)
sbb
fwait
rcl
(bad)
out
add
jmp
jae
inc
mov
pop
shl
jmp
adc
push
jno
push
pushf
retf
mov
push
cmp
fwait
mov
dec
(bad)
repz
(bad)
dec
rol
jae
pop
shl
mov
jne
js
dec
ins
fs
or
mov
jae
jge
outs
cld
mov
repz
adc
pushf
or
shr
inc
in
(bad)
out
imul
and
jo
call
xchg
add
mov
xlat
sbb
retf
and
jne
scas
pop
sbb
mov
movs
ins
mov
add
adc
fcomip
pop
inc
ins
iret
push
ret
fwait
scas
mov
xchg
mov
shr
and
jbe
in
not
or
and
movs
dec
fninit
mov
retf
mov
mov
call
in
push
(bad)
fisubr
repnz
punpckhwd
aaa
sar
sub
retf
stos
inc
dec
mov
jno
std
xor
cld
sub
mov
xor
enter
dec
mov
mov
adc
xor
push
aaa
add
jb
xchg
add
mov
add
rcr
mov
sar
in
xor
outs
jb
add
mov
cli
add
(bad)
fiadd
push
pop
cmps
clc
lea
adc
adc
push
or
xor
ins
mov
pop
push
arpl
loope
repz
mov
push
adc
jmp
lock
and
mov
xchg
fnstenv
add
ficomp
mov
outs
shr
fidivr
jmp
pop
adc
fbld
mov
inc
faddp
inc
hlt
mov
cld
and
push
jmp
sar
cmc
mov
push
dec
call
jge
repnz
jo
ficom
inc
sbb
imul
xlat
mov
push
add
jmp
jne
shr
call
das
cmp
jmp
dec
add
adc
int3
and
inc
lods
into
arpl
es
xor
pop
sbb
aad
xor
rcr
stc
fadd
ret
pop
add
fwait
(bad)
retf
lods
sub
out
xor
ss
dec
mov
rol
xor
push
jl
fstp
cmp
aam
xor
xchg
mov
push
ss
in
mov
pop
sub
push
sub
adc
icebp
movs
scas
pop
jl
cmp
das
jge
fmul
add
in
or
rol
int3
lods
pop
icebp
inc
test
or
cwde
lods
mov
sbb
and
rcl
ds
jl
mov
(bad)
sbb
in
jmp
mov
xchg
pop
and
(bad)
into
mov
jl
pusha
pop
jmp
mov
aam
clc
(bad)
mov
ja
stos
neg
mov
rcl
and
in
sub
mov
and
(bad)
dec
in
(bad)
or
dec
hlt
int
cmps
mov
retf
in
mov
stos
pop
dec
cmp
mov
idiv
fwait
adc
add
fdivrp
jmp
mov
dec
test
test
jl
jne
dec
enter
fwait
cmps
pop
push
rol
pop
cmp
daa
and
rol
or
loopne
not
inc
sbb
addps
(bad)
pop
pop
mov
push
dec
sub
mov
and
mov
push
push
jmp
pusha
inc
int
arpl
adc
mov
mov
mov
mov
xchg
inc
loop
loope
and
dec
pop
jmp
xchg
add
mov
call
add
daa
add
mov
sub
jae
sahf
lahf
cdq
mov
add
cli
sub
in
cmp
mov
add
imul
jae
jp
mov
fsubr
sbb
popf
stos
sahf
or
imul
je
stos
test
imul
push
fcmovbe
cmps
lds
jae
in
popf
sub
mov
ins
cdq
rcl
push
hlt
push
stos
xchg
push
icebp
aas
cmps
ins
repnz
test
stc
dec
rol
std
ins
ins
adc
shl
lods
push
xchg
mov
cmp
fwait
xor
iret
fisttp
leave
scas
clc
cdq
adc
aaa
out
push
xor
pop
ja
enter
dec
cmp
pop
mov
(bad)
call
nop
lods
xchg
inc
lea
icebp
clc
xchg
adc
pop
lock
(bad)
arpl
push
ins
int
inc
int3
inc
ds
dec
jle
mov
scas
xchg
leave
in
or
pushf
sub
(bad)
cmp
mov
js
test
inc
test
cmc
sub
aad
or
mov
test
addr16
inc
inc
movs
(bad)
push
test
sub
mov
cmps
pop
in
sbb
ja
enter
mov
cmps
lods
ret
sub
das
xchg
hlt
cmp
pushf
nop
and
sub
push
fsubr
jb
mov
int3
movs
shr
outs
or
jno
leave
sbb
inc
add
xor
cmps
sub
(bad)
jle
ins
inc
mov
add
lea
stc
jb
pop
jns
mov
or
sub
jmp
test
sub
loopne
sti
scas
test
in
dec
jmp
test
xchg
retf
movs
pop
xchg
popf
sbb
ret
jecxz
mov
mov
add
gs
sbb
loopne
push
jb
mov
sti
push
and
bound
mov
sbb
dec
aad
cvtps2pd
mov
cmp
gs
std
retf
mov
sar
cmp
or
dec
iret
clc
jbe
int3
lods
xor
into
cmps
shr
xchg
xchg
aas
mov
sub
xchg
aam
fdivr
lds
jb
add
std
cs
das
xor
int3
daa
xchg
adc
or
xchg
pop
shl
es
inc
in
dec
out
pop
adc
or
mov
ror
pop
dec
sub
nop
inc
pop
gs
jmp
inc
jns
fldcw
xor
punpckldq
(bad)
pop
movs
setne
repz
pop
and
or
mov
xor
mov
mov
adc
in
jle
js
inc
stos
push
popa
dec
mov
mov
retf
xchg
xchg
jge
pop
jns
add
pop
(bad)
mov
popa
(bad)
xor
test
xchg
jmp
int
and
sub
mov
fiadd
xchg
pusha
adc
(bad)
aas
shr
jbe
dec
stc
das
jnp
setbe
iret
leave
and
inc
xchg
out
add
rcr
sbb
jmp
jp
mov
add
pushf
push
addr16
xlat
imul
ret
aad
imul
sub
test
daa
mov
mov
push
cmps
mov
sbb
neg
or
mov
pop
stos
pop
leave
xchg
call
fwait
je
mov
and
and
add
out
push
mov
or
mov
mov
repz
cld
scas
xchg
cs
push
mov
(bad)
mov
mov
add
gs
outs
dec
retf
or
push
sbb
xor
pop
or
leave
cmp
popf
mov
test
ja
and
fdiv
pop
mov
mov
xchg
stos
dec
sub
xor
inc
pusha
inc
(bad)
ja
(bad)
mov
lods
xor
cmp
in
ins
mov
fs
(bad)
mov
(bad)
push
call
mov
adc
or
ror
dec
push
jnp
xchg
inc
xor
inc
pusha
iret
mov
je
sbb
pop
add
xchg
out
jnp
dec
outs
les
inc
dec
leave
aaa
mov
rol
adc
stos
add
es
jno
int
pop
int
leave
int3
adc
sti
sub
jecxz
pop
sbb
int3
adc
and
inc
jnp
pop
loop
inc
ret
mov
dec
jb
sub
jle
push
push
push
ficom
pop
clc
push
mov
repnz
cmp
shr
adc
adc
mov
lds
(bad)
gs
call
cmp
int
ins
mov
pop
sbb
leave
arpl
jge
lahf
xor
fisub
sub
mov
je
loopne
std
aas
mov
dec
sbb
dec
loop
sbb
dec
pop
or
or
(bad)
sbb
outs
push
test
sub
inc
icebp
pop
(bad)
dec
js
daa
sar
and
xor
out
xchg
cmp
dec
cld
cmp
fnsave
neg
in
pop
jmp
add
jle
sbb
pop
xchg
and
cwde
ja
and
inc
push
inc
(bad)
jl
mov
fld
mov
das
ficom
add
pop
cwde
rcr
div
jecxz
sti
inc
imul
mov
mov
and
in
sbb
or
mov
add
pop
jle
js
jp
lock
loope
ret
das
xor
add
in
push
mov
js
jmp
sti
add
repnz
enter
jo
push
(bad)
mov
out
xchg
push
sar
sbb
add
or
sub
add
retf
ret
hlt
bnd
jmp
(bad)
lahf
fcmovnb
pop
cld
xor
push
xchg
xor
mov
test
pop
inc
aam
sub
xor
ficom
sub
pop
sub
shr
pop
cmc
in
aaa
ja
imul
shl
jb
xchg
sbb
sbb
(bad)
scas
jmp
ret
lods
mov
mov
(bad)
aam
retf
inc
outs
leave
imul
xor
repz
mov
mov
sub
imul
int3
jns
adc
call
inc
retf
int
pop
mov
xchg
ja
pop
or
rcl
dec
xor
(bad)
js
xlat
ja
xchg
pop
out
cmp
push
mov
mov
jge
dec
sub
sub
cmp
scas
and
lods
dec
jmp
iret
stos
jmp
jmp
jne
xchg
mov
adc
lock
mov
lds
dec
xchg
sbb
frstor
cmp
cmp
cmps
div
pop
push
pop
mov
sbb
xor
sbb
xor
sti
movs
cwde
mov
push
jmp
inc
out
and
mov
jge
mov
ror
and
push
sub
add
and
add
div
int3
xor
mov
sbb
cmp
mov
sbb
sub
jmp
adc
inc
inc
mov
mov
xchg
mov
cmps
jmp
push
mov
push
nop
sub
inc
aam
xchg
pop
push
icebp
rcr
inc
mov
fisubr
rcr
repnz
clc
int3
pop
or
mov
mov
pusha
in
xchg
mov
clc
mov
or
pushf
xchg
repz
cmp
lea
sub
les
popa
jge
or
fsub
(bad)
jecxz
into
inc
fcom
mov
out
imul
or
sub
cmps
popf
jo
dec
icebp
into
retf
xchg
pop
mov
adc
inc
jo
icebp
jmp
jmp
ins
cmp
xor
cdq
outs
cwde
loopne
and
xchg
push
xor
scas
dec
xor
dec
add
sub
and
loope
ins
jmp
fst
pop
xchg
ret
(bad)
hlt
mov
push
pop
ss
sbb
test
pop
fst
mov
push
jbe
or
pop
aaa
push
movs
and
xor
aas
push
mov
inc
dec
rol
nop
aaa
xchg
push
out
push
jmp
mov
mov
pop
cmc
sbb
lods
es
enter
cli
push
xor
aaa
sti
lock
int3
pop
mov
ffree
xchg
fcom
xor
or
call
or
cmp
mov
jmp
lea
xchg
adc
fnstenv
mov
scas
xor
adc
dec
pop
loope
scas
(bad)
sar
test
(bad)
fisttp
enter
outs
je
aad
hlt
sub
push
sub
sbb
dec
jbe
jno
add
daa
(bad)
(bad)
jmp
(bad)
rcl
adc
cmp
cmp
add
neg
sub
or
in
mov
repnz
xor
pop
dec
push
pop
push
push
dec
je
push
fstp
jmp
arpl
cmp
push
ds
mov
jo
or
mov
stos
xor
cmp
js
(bad)
sbb
movs
cmc
in
xchg
jae
dec
pop
sub
or
test
xor
loope
xor
loope
test
inc
std
ret
push
std
xor
ins
push
outs
push
mov
push
aaa
pusha
in
adc
stos
xor
or
push
jp
data16
stos
add
aas
ins
outs
ins
sub
out
out
es
mov
pop
push
mov
dec
inc
or
js
mov
xchg
ret
sahf
jecxz
inc
pushf
shl
mov
xor
and
cmps
aas
and
pop
pop
and
or
mov
push
test
cmp
xchg
leave
inc
popf
arpl
ficomp
mov
cmp
and
pusha
je
lock
xor
retf
lahf
cmp
cld
push
pop
leave
jnp
push
dec
sti
jb
out
dec
cmp
dec
ins
(bad)
fnstenv
arpl
mov
add
mov
ret
pop
adc
mov
add
pop
mov
jle
push
inc
stos
cli
jmp
div
fmul
test
cmp
xor
pusha
shl
pop
jne
scas
(bad)
out
int
jnp
xor
ins
inc
sbb
loop
enter
dec
call
test
(bad)
fcompp
sbb
jecxz
mov
pop
push
pushf
mov
pop
mov
outs
pushf
cmp
daa
pop
call
jle
ins
fst
arpl
jb
xor
push
xchg
fbstp
(bad)
fld
dec
fmulp
out
(bad)
jecxz
aad
fwait
movs
xchg
fstp
mov
movs
sbb
sbb
movs
cmp
adc
ret
cs
mov
mov
adc
lds
add
in
repz
xchg
push
xor
pusha
ret
xchg
inc
ja
lods
jmp
out
call
mov
pop
mov
push
pop
es
push
push
shl
outs
adc
adc
pop
or
(bad)
push
add
mov
add
push
jge
ins
ja
jecxz
or
mov
inc
sbb
sbb
aad
or
mov
sbb
sub
nop
ins
mov
sub
push
into
(bad)
dec
hlt
jo
out
xchg
div
test
xor
std
push
pop
and
cmc
sub
xchg
or
add
in
mov
imul
jb
cdq
sub
add
jl
(bad)
lock
retf
(bad)
lahf
push
aad
xchg
cmp
pop
stos
jecxz
or
xor
jmp
mov
fwait
mov
xor
in
pop
or
rcl
fcomi
add
cmp
jnp
addr16
shl
ret
daa
mov
mov
scas
adc
or
mov
xchg
iret
int
daa
pop
pop
iret
or
mov
inc
sbb
imul
cmp
repnz
xchg
cld
pushf
fst
jl
jmp
xchg
xchg
lock
or
jb
sub
adc
cld
or
add
push
(bad)
les
movs
adc
hlt
stc
ss
and
xor
jnp
or
clc
out
add
mov
test
scas
cmp
xchg
ret
or
xor
dec
test
cmp
test
or
popf
ins
mov
cld
mov
push
cmp
push
xchg
or
and
and
scas
pop
int3
push
mov
and
dec
mov
(bad)
(bad)
cmp
cli
pop
inc
rcl
adc
retf
cmp
push
ss
cli
inc
outs
adc
and
lahf
jmp
loope
mov
lea
cli
or
jb
stos
or
sbb
add
int3
inc
ret
shr
or
dec
push
push
es
mov
jne
xchg
adc
mov
sbb
mov
jecxz
(bad)
in
es
inc
mov
scas
mov
ins
addr16
jb
sti
retf
fst
imul
mov
int
in
sahf
in
push
aad
push
xlat
cmp
rcr
or
das
mov
adc
mov
push
rcr
dec
push
mov
push
repnz
test
adc
adc
out
pop
(bad)
lds
add
and
std
xlat
xchg
rol
aam
inc
nop
call
test
cdq
fadd
xchg
pop
mov
or
imul
cdq
imul
int
test
test
sbb
push
fiadd
in
stos
or
fldenv
ret
sbb
clc
loope
fstp
jns
mov
mov
pop
jmp
pop
xchg
fcom
sbb
sub
add
out
or
sub
fidiv
add
jne
(bad)
xchg
iret
jno
leave
outs
sub
shl
je
mov
pop
ins
lods
xor
nop
xor
adc
xor
clc
add
push
fisttp
test
pop
sub
clc
add
xor
lods
push
rol
je
ins
jmp
(bad)
iret
daa
and
stos
dec
repz
sub
call
xlat
(bad)
icebp
sub
sbb
push
fcom
mov
inc
push
xor
jmp
repz
cmc
ins
(bad)
pop
jmp
dec
or
xchg
sub
ins
add
mov
in
mov
ins
movs
shl
pop
mov
jae
in
mov
or
push
cmp
cld
dec
add
out
mov
in
fsub
fidivr
mov
mov
imul
push
mov
mov
and
sahf
sub
les
pop
cs
arpl
std
cmc
mov
(bad)
dec
push
cmp
outs
xchg
lods
add
cld
ins
cli
and
fcom
addr16
cmp
or
jmp
mov
cmp
fimul
xor
jns
push
pop
mov
inc
xor
(bad)
jmp
add
mov
and
cld
(bad)
lods
loope
mov
cmp
addr16
push
push
test
push
and
stos
std
mov
jecxz
ret
fs
jae
(bad)
pop
jecxz
push
adc
mov
jnp
idiv
cmp
xchg
xor
cmps
jo
xor
imul
sub
push
mov
push
push
jnp
push
fisub
sub
bound
jge
inc
femms
dec
mov
out
push
dec
fninit
in
mov
aaa
jg
cmps
push
(bad)
push
pop
call
arpl
cmps
and
retf
loope
fild
scas
mov
sti
inc
int3
rcr
inc
stos
inc
popf
stos
loop
nop
pop
xchg
jbe
loop
leave
jo
xchg
mov
xchg
stos
cld
sub
sub
inc
loopne
jl
int
pop
test
icebp
daa
sub
ret
inc
imul
fisttp
dec
aam
clc
nop
test
add
ret
and
xchg
outs
mov
add
xlat
sti
add
js
and
cli
add
repz
ror
sbb
add
push
adc
cs
gs
jge
shl
push
or
test
push
ins
daa
out
sub
clc
pop
addr16
nop
and
mov
xor
dec
cmps
jl
push
cdq
mov
mov
mov
pop
cmps
jnp
jo
lds
clc
and
xchg
push
add
jmp
add
stos
cmps
mov
jl
add
loope
or
xchg
xor
ja
push
(bad)
xor
lock
out
jne
inc
daa
(bad)
ret
jge
shl
inc
dec
add
jnp
ja
les
pop
sub
int3
test
mov
jae
and
js
aam
or
mov
fnstsw
dec
popf
jae
add
out
or
jns
les
or
mov
mov
cmp
sub
xchg
cmp
aam
loope
push
xchg
fidivr
jbe
repz
je
push
test
cmp
fistp
mov
(bad)
repnz
ins
or
in
addr16
inc
loope
adc
and
xor
mov
iret
shl
int3
jmp
rol
sbb
dec
mov
and
jl
pop
cmps
dec
js
mov
mov
pop
dec
dec
adc
and
xchg
push
xor
pop
mov
fcomp
loope
popa
and
(bad)
retf
mov
shr
sahf
aad
data16
adc
adc
or
mov
mov
popa
xchg
jmp
(bad)
ret
cmp
pop
pop
mov
and
arpl
adc
lds
and
pop
pop
aad
(bad)
(bad)
mov
cmp
mov
jb
dec
dec
das
fnstenv
stc
leave
ret
and
hlt
out
jge
mov
mul
(bad)
push
outs
into
test
pop
or
(bad)
adc
sbb
scas
inc
cmps
cdq
push
xor
out
adc
add
sbb
mov
std
cmps
push
xor
ret
or
dec
add
jmp
xchg
add
fst
test
and
pop
sar
sbb
sbb
aad
jmp
mov
or
mov
fbstp
in
add
jp
retf
data16
je
in
iret
inc
cs
xchg
ret
cmps
push
inc
xor
call
aam
scas
sbb
outs
jl
mov
rcr
and
xchg
inc
adc
mov
sbb
call
fnsave
cmp
push
pop
test
pusha
in
jnp
aaa
pusha
cld
(bad)
mov
sub
xchg
lods
xchg
jo
in
call
fld
dec
push
xchg
jae
cwde
push
out
fisubr
add
pop
addr16
int
(bad)
cmps
ret
add
hlt
out
push
push
sub
ret
dec
or
mov
push
fimul
jbe
retf
mov
cmp
fsubrp
or
add
call
cwde
or
mov
or
ins
mov
nop
daa
not
retf
xor
les
popa
ficom
ds
icebp
stos
fst
mov
or
jle
mov
mov
popf
mov
xchg
pop
int
daa
test
cmps
popf
mov
bound
popf
fidiv
adc
adc
and
mov
xchg
cmps
stos
inc
mov
das
ret
inc
sbb
inc
lahf
sti
fisub
or
mov
or
xor
push
mov
or
sbb
clc
mov
mov
mov
push
jnp
fiadd
loopne
push
fs
fidiv
aas
push
pop
pop
in
inc
adc
data16
les
imul
hlt
and
mov
or
jo
into
fst
out
fimul
movs
push
xchg
push
mov
sbb
cmc
repz
adc
mov
fst
mov
mov
dec
js
stos
or
shl
cli
imul
cmps
test
mov
mov
cmp
sbb
pop
or
pop
lds
fisub
imul
clc
jg
dec
retf
jecxz
pop
pusha
icebp
jl
push
es
inc
test
dec
cmps
cmps
out
lock
inc
loop
hlt
fprem
(bad)
test
sub
nop
pop
and
push
dec
dec
aas
add
mov
jbe
test
and
imul
pop
add
lods
pop
cld
adc
push
and
push
test
mov
sbb
adc
mov
adc
or
sahf
sbb
sub
mov
sti
or
leave
outs
xchg
adc
xor
scas
mov
adc
sub
ins
pop
mov
fs
imul
pop
pop
adc
mov
adc
jbe
jp
mov
pop
inc
in
outs
mov
dec
clc
sub
add
jo
sti
mov
pop
push
fwait
imul
ret
int
ins
sbb
(bad)
mov
dec
dec
xor
xchg
pop
and
push
add
and
ret
push
xchg
adc
push
(bad)
mov
push
lds
xor
stos
cmp
cdq
xor
dec
and
popf
or
dec
inc
cmp
in
xchg
out
cmps
xchg
test
jo
mov
lahf
lds
dec
and
stos
xchg
fisttp
mov
imul
sbb
iret
rcl
in
pop
cdq
xor
fstp
add
ror
xor
mov
test
sub
movs
mov
mov
pop
ret
pop
cmp
ss
pushf
pop
xor
lea
fdivr
dec
jo
aaa
dec
test
out
cli
push
stos
sub
arpl
into
push
cmps
ja
adc
jnp
icebp
(bad)
sbb
or
or
arpl
dec
(bad)
mov
inc
stc
jns
inc
jmp
fst
mov
pop
lds
cmps
movs
sub
hlt
mov
cs
retf
(bad)
fisttp
retf
rcr
and
push
ja
xor
outs
sub
push
mov
inc
dec
sbb
add
sbb
lea
jno
lds
mov
and
add
cld
pop
push
arpl
cmp
xor
popf
fs
mov
jge
(bad)
xchg
mov
movs
push
mov
cmps
lods
and
pop
sub
inc
retf
ror
ja
sbb
and
mov
rcl
pop
ja
mov
sub
arpl
xchg
push
inc
and
sbb
push
mov
mov
(bad)
and
cmp
xchg
call
(bad)
in
les
inc
movs
scas
and
adc
enter
mov
(bad)
jnp
mov
rcr
loope
cmps
inc
xor
inc
dec
pop
cdq
enter
test
jbe
push
jmp
(bad)
in
pop
repnz
sbb
lock
push
in
(bad)
fadd
adc
xchg
mov
dec
lds
mov
jb
dec
out
pop
fmul
loope
mov
xchg
(bad)
and
sub
into
dec
sub
add
sti
mov
ins
xor
inc
add
dec
hlt
jb
sbb
call
jne
aaa
imul
out
outs
popf
ss
retf
outs
neg
shr
mov
or
mul
mov
inc
xchg
xor
stos
imul
das
scas
dec
test
dec
ror
clc
dec
not
jg
cmp
fwait
out
push
shl
(bad)
imul
iret
and
repz
xchg
ss
dec
jbe
scas
(bad)
call
mov
adc
pop
mov
push
popf
fstp
mov
adc
cmp
xor
dec
pop
out
fs
push
or
jmp
(bad)
jmp
dec
ds
mul
sub
pop
adc
addr16
or
xor
xlat
addr16
sub
xchg
jae
sbb
inc
jns
or
sub
xchg
sar
sahf
add
sub
xchg
ins
jl
xchg
mov
add
xlat
jno
iret
retf
mov
stos
movs
push
xchg
mov
ins
(bad)
and
imul
lds
(bad)
mov
jne
pop
dec
or
outs
popa
in
push
out
sub
jg
pop
daa
je
or
call
lods
cld
mov
ret
sub
xor
test
fistp
stos
adc
pop
push
ror
sbb
push
inc
int3
or
or
int
or
jne
sub
ins
mov
stc
pop
adc
call
xchg
push
xchg
mov
(bad)
and
xchg
dec
push
add
(bad)
aam
mov
adc
in
cmp
stos
jle
scas
addr16
mov
mov
jmp
sub
cmp
mov
and
xor
mov
jns
ret
xchg
fld
dec
gs
dec
push
int3
mov
sub
sbb
xchg
xchg
out
into
ins
cmp
mov
adc
and
aas
cmps
hlt
dec
movs
jae
jp
std
in
das
sub
leave
pop
daa
loop
pop
test
je
mov
lahf
push
mov
dec
dec
cmp
jp
enter
sub
xchg
iret
test
cmp
push
cmp
add
lock
repz
mov
add
fistp
fbld
fcom
adc
xchg
lods
xchg
popa
in
cmp
js
jns
jns
in
xchg
je
dec
aam
pop
and
mov
and
push
outs
lahf
jnp
aaa
imul
retf
test
jns
jp
ins
std
cld
pop
test
hlt
mov
jo
mov
idiv
mov
scas
das
push
pop
jl
cli
mov
scas
(bad)
push
xchg
(bad)
out
js
test
mov
inc
pop
sub
jne
int3
shl
mov
ds
shr
pushf
in
les
cmp
jg
sar
dec
sub
pop
mov
xor
aas
imul
xor
adc
and
mov
jo
gs
stos
push
inc
mov
sub
repz
pop
in
mov
mov
and
inc
jecxz
(bad)
add
sbb
xchg
and
fwait
aas
stc
sbb
lock
inc
popa
cli
inc
dec
fwait
add
out
cmps
inc
pop
psllq
ja
jecxz
adc
dec
dec
and
int3
(bad)
in
inc
test
daa
outs
push
jb
les
das
cmp
cmp
and
cmp
js
xor
fmul
add
popa
xchg
sbb
(bad)
das
icebp
cld
push
aam
les
pop
pop
aas
clc
pop
movs
lock
pop
jae
xchg
dec
fiadd
mov
test
xor
cmc
cmp
mov
pop
mov
pop
push
mov
or
inc
retf
ror
pop
pop
leave
mov
push
jno
jno
push
adc
stos
ss
sbb
mov
mov
inc
mov
mov
test
dec
fs
je
mov
ret
mov
cmp
aam
mov
mov
jnp
fmul
lods
pop
data16
sahf
icebp
sbb
mov
xchg
jno
imul
sbb
es
(bad)
out
(bad)
call
stc
mov
add
xchg
loop
xchg
cdq
inc
dec
test
mov
or
xchg
dec
fdivrp
mov
dec
and
rcr
pop
add
ins
mov
mov
inc
push
in
pop
sbb
adc
xor
jns
imul
add
xor
test
push
cwde
mov
shr
push
out
sub
das
mov
ror
retf
sbb
dec
pop
and
xchg
xlat
push
cmp
push
loopne
pop
loop
push
jae
and
into
iret
push
xor
and
add
call
xchg
dec
(bad)
push
movs
cli
xor
loop
pop
setns
xor
arpl
aaa
mov
bound
test
std
jbe
ds
push
fisub
mov
xchg
das
lods
or
ins
jmp
or
paddw
mov
sbb
mov
outs
jns
pop
(bad)
leave
jp
stc
adc
add
ret
inc
adc
into
mov
in
pop
push
popa
std
sahf
fcomp
pop
(bad)
inc
fild
iret
cmp
mov
in
jmp
in
jmp
loop
dec
mov
push
add
dec
sbb
inc
xor
mov
enter
lea
test
repnz
ret
addr16
hlt
fcom
es
xor
(bad)
into
add
fsub
xor
fisubr
fs
sub
push
out
push
rcl
xchg
xor
pop
stos
adc
jl
cmp
in
jbe
(bad)
add
(bad)
gs
into
retf
pop
xchg
or
jb
ss
inc
test
scas
add
add
xor
test
cmp
push
repnz
xor
repnz
test
mov
sbb
push
retf
ficom
repnz
sar
(bad)
das
add
mov
mov
out
mov
leave
jne
rcl
inc
cwde
sbb
sar
data16
and
sbb
dec
mov
fadd
mov
cmp
jne
test
cmc
push
ror
jg
pop
pop
jp
lods
cmp
and
xchg
xchg
mov
jmp
cmp
fidivr
out
cmp
and
add
aam
lahf
out
shl
test
out
xchg
test
cmp
mov
jecxz
dec
push
mov
fstp
pusha
add
xor
aas
les
sbb
mov
mov
cmp
ret
movs
dec
mov
aaa
fdivr
or
dec
mov
hlt
xor
hlt
cmp
mov
push
add
rcl
cli
jmp
aam
inc
mov
in
xor
repnz
push
xchg
xchg
sbb
adc
cmps
mov
push
pop
test
ficomp
mov
cs
fcom
sub
inc
jge
and
jmp
mov
dec
sub
fwait
aam
mov
(bad)
(bad)
mov
mov
add
hlt
cmp
retf
mov
xchg
cmp
mov
adc
call
sbb
rcl
dec
mov
frstor
xor
outs
inc
sub
inc
movs
or
and
sub
sbb
call
pop
call
pop
std
ds
pop
cwde
ja
add
sbb
cmp
mov
lods
cli
adc
repz
adc
je
movs
sbb
in
mov
fcomp
int
mov
sub
shr
inc
mov
cmp
or
fisub
inc
rcr
aaa
mov
cmp
in
mov
jns
cmp
push
ret
or
sub
ja
call
mov
sub
fst
clc
inc
inc
(bad)
jge
lods
(bad)
das
repnz
jl
mov
jmp
fwait
sub
popf
out
retf
pop
loop
sbb
mov
mov
xor
test
fdivr
icebp
xchg
daa
lods
(bad)
loopne
cwde
sbb
push
jl
and
fisub
push
xor
xchg
push
mov
dec
fwait
lea
gs
xchg
test
daa
js
pop
push
clc
xor
jne
xor
das
push
ins
add
cmps
add
aam
adc
pushf
fwait
add
in
aad
xchg
iret
ins
sub
fnstcw
dec
jg
cmc
test
and
stc
jae
test
jo
nop
stos
in
push
or
shl
mov
cmp
(bad)
push
popa
inc
test
mov
retf
adc
xchg
xchg
jnp
loope
in
daa
sbb
fs
push
imul
jbe
addr16
push
sbb
(bad)
outs
in
pop
lods
lods
lock
mov
xchg
adc
jmp
aad
(bad)
into
std
imul
(bad)
and
sar
movs
fcmovnb
outs
or
dec
and
in
jl
jecxz
and
mov
(bad)
xchg
(bad)
(bad)
push
adc
inc
lds
pop
sbb
or
lock
adc
xchg
push
xchg
cmp
popf
or
dec
adc
jmp
ret
sub
lds
sti
bound
inc
out
sub
fisttp
aas
mov
or
sbb
adc
pop
js
popf
lahf
jno
mov
shl
out
ret
outs
adc
lods
push
and
mov
(bad)
cmp
mov
mov
inc
int
pop
mov
test
aam
test
(bad)
ins
jns
push
cmp
add
addr16
xchg
retf
test
out
and
adc
and
inc
scas
xor
inc
(bad)
jmp
sub
mov
repz
and
int3
test
mov
xchg
repnz
popa
jle
jo
gs
stos
jbe
dec
jb
jae
adc
aas
mov
mov
pop
lea
dec
in
jo
cmp
es
jl
fnstenv
retf
or
jne
add
push
cmp
ja
fisubr
outs
inc
xchg
retf
out
push
pop
aaa
mov
fcmovnbe
pop
xor
push
and
cmp
and
add
mov
pop
mov
mov
dec
(bad)
loope
hlt
add
test
shl
sub
fstp
adc
stos
push
lods
xchg
and
xor
ret
push
jmp
cmp
mov
mov
test
mov
imul
lds
(bad)
aad
xchg
fisubr
jmp
cld
xchg
adc
fimul
popa
stos
jle
iret
adc
push
(bad)
jmp
outs
or
adc
dec
out
loopne
(bad)
std
and
pop
mov
push
xor
mov
leave
dec
mov
cmc
out
mov
in
xor
sbb
push
push
bound
test
repz
xor
mov
push
xchg
lods
call
or
mov
in
clc
xchg
add
fadd
cmp
mov
nop
jb
jle
mov
arpl
inc
test
mov
push
pop
sbb
(bad)
fstp
into
repz
in
mov
adc
sbb
test
adc
add
sub
imul
lds
or
pop
mov
cmps
sbb
out
mov
(bad)
hlt
mov
xchg
push
add
sbb
xchg
add
cmp
push
dec
push
sbb
mov
mov
repz
pop
dec
data16
mov
icebp
loopne
in
dec
jl
rcl
mov
ret
scas
xlat
inc
mov
popa
lds
je
xchg
test
lea
jp
hlt
adc
dec
jecxz
fsub
lds
stc
add
dec
add
jnp
mov
mov
jle
fimul
xor
addr16
popa
cmp
dec
cmp
ins
sbb
cld
cdq
ins
push
xchg
xchg
mov
pop
jmp
sub
jl
gs
lds
pop
shl
or
xchg
js
stos
into
fwait
retf
xchg
inc
inc
imul
sub
xchg
cmp
pop
xchg
push
lahf
jne
cmp
les
data16
stos
pushf
dec
pop
jmp
xor
push
das
add
mov
lods
stc
lds
push
loope
pop
test
xchg
xlat
sbb
loope
rol
stos
fs
adc
test
mov
into
jmp
adc
push
aam
clc
jp
or
gs
and
push
mov
xchg
add
and
arpl
push
inc
fs
cmps
sbb
outs
mov
aad
mov
cmps
push
and
(bad)
adc
(bad)
adc
enter
call
add
xchg
sbb
aad
out
inc
vmovups
inc
push
pop
and
dec
sete
inc
ins
ret
cli
inc
dec
std
inc
shr
retf
inc
push
enter
cmps
cmp
mov
hlt
dec
dec
dec
mov
jmp
dec
(bad)
push
bound
cs
daa
mov
psubw
call
mov
sbb
icebp
mov
enter
scas
xchg
in
xlat
mov
dec
xchg
mov
outs
jp
and
xchg
rcr
mov
mov
sbb
dec
stos
lods
loopne
push
cmp
sub
addr16
sub
out
mov
jo
loope
fcmovnbe
or
xor
ret
cmc
(bad)
fwait
dec
cmp
add
scas
dec
sub
xor
test
inc
imul
jae
dec
jp
lock
(bad)
movs
cs
adc
dec
add
jl
sbb
cld
mov
lahf
cmp
and
iret
adc
fst
les
push
out
push
mov
push
(bad)
cld
inc
xchg
call
jge
in
cmp
int3
imul
xchg
mov
stos
std
push
leave
retf
add
xchg
add
xor
xor
test
adc
jb
not
jne
cmp
sub
sbb
push
mov
xor
jnp
ss
push
in
sbb
inc
adc
in
jmp
mov
push
dec
adc
cdq
lods
jb
je
or
leave
leave
stos
cmp
jbe
ret
imul
sbb
jge
jp
jmp
fbld
pop
inc
push
aas
sub
sub
arpl
inc
sub
push
mov
test
lock
ins
mov
xchg
or
out
stos
icebp
fsub
mov
sti
std
mov
cmp
push
dec
xor
cld
inc
pop
aaa
aas
cwde
pop
fnstenv
mov
scas
retf
adc
in
fbstp
pop
add
loope
pop
sbb
push
retf
add
stos
pop
adc
add
jge
mov
jae
fmulp
inc
push
lds
xchg
outs
paddw
out
add
add
fistp
mov
adc
mov
loopne
mov
jge
push
xchg
sub
mov
out
cli
es
int
es
dec
rcr
jg
and
cmp
xor
and
mov
pop
cmp
jno
shr
lds
mov
sbb
inc
test
popf
ja
dec
addr16
jecxz
nop
rol
addr16
mov
and
mov
in
adc
add
sub
xor
cmps
aas
jg
lds
adc
lods
mov
pop
mov
mov
retf
sub
gs
js
out
lea
imul
and
mov
popa
and
sub
out
pop
arpl
jl
jl
movs
jno
(bad)
and
popf
pop
(bad)
(bad)
arpl
ror
hlt
pop
xor
jno
jmp
sbb
and
inc
ss
fdivp
ds
dec
leave
sub
or
data16
cmp
adc
gs
push
stos
mov
cmps
fmulp
lahf
push
sub
pop
xor
jns
jge
mov
test
mov
dec
pop
adc
fnsave
adc
stos
popf
js
stos
sub
xchg
enter
or
mov
xchg
ret
cmp
gs
arpl
push
xor
dec
out
popf
addr16
mov
adc
clc
adc
outs
and
sub
ins
inc
sbb
ror
movs
mov
xor
xchg
(bad)
jmp
test
mov
push
adc
scas
mov
dec
xlat
popf
jae
and
jge
jne
inc
stos
dec
xlat
stc
mov
mov
ss
xor
outs
jno
cmp
popf
fwait
xor
dec
aad
mov
jle
and
addr16
ss
mov
mov
ret
mov
pop
and
adc
inc
jecxz
ror
sbb
xchg
arpl
js
jl
xchg
loopne
adc
loop
mov
xchg
arpl
fmul
cmp
jno
sbb
das
int3
rcr
bound
push
jmp
enter
sbb
or
mov
daa
and
xor
mov
xchg
fild
xchg
mov
lar
mov
or
cmp
cwde
test
adc
stos
pop
pusha
test
aam
mov
inc
add
push
push
pop
push
int
or
push
inc
test
es
jmp
(bad)
dec
mov
jg
or
fisttp
dec
scas
ins
mov
jo
mov
sti
stc
repz
inc
jmp
xchg
fsubr
(bad)
aaa
or
addr16
cmp
sahf
loop
call
cmp
sub
lock
loop
test
push
imul
dec
(bad)
sti
jno
loop
iret
jno
add
nop
and
or
mov
aaa
inc
pop
adc
(bad)
xor
in
test
mov
mov
mov
xchg
addr16
es
(bad)
lods
cmc
xchg
cmp
ret
mov
test
rol
rcl
in
lods
xchg
cmp
pop
daa
sub
leave
sub
scas
outs
in
pop
push
jb
adc
test
inc
xor
out
sub
jg
push
jns
dec
lahf
das
ds
and
ds
sar
ins
test
jae
fst
pop
jmp
push
jne
stos
movs
mov
xchg
lods
push
mov
mov
(bad)
cwde
mov
inc
aaa
stos
mov
jp
stc
ret
cmp
xor
in
std
in
dec
mov
xor
mov
arpl
stc
dec
add
aas
ficomp
add
jp
sbb
push
fld
call
mov
pop
ins
js
dec
xor
push
sbb
mov
lock
sar
push
fnstcw
dec
fild
cmc
xor
into
scas
iret
push
dec
sbb
inc
add
push
pop
pop
inc
dec
xor
cmps
xchg
fs
sbb
mov
dec
test
mov
pop
fs
mov
sub
cwde
test
mov
ret
stos
mov
xor
shl
push
or
mov
int
lods
add
add
(bad)
ficomp
mov
xchg
les
sti
(bad)
lahf
add
in
and
add
mov
dec
sub
jmp
mov
scas
jo
xor
das
iret
nop
push
push
stos
repnz
xchg
jb
call
dec
lods
dec
ins
mov
in
push
(bad)
push
jecxz
xchg
inc
cmc
in
pop
sbb
imul
mov
push
fst
aaa
push
jle
sub
loop
sub
sbb
out
(bad)
(bad)
cmp
cmps
jnp
out
in
shl
jb
xchg
cld
outs
mov
and
adc
test
iret
ror
addr16
aam
js
or
lods
sub
xchg
add
mov
mov
cdq
or
mov
mov
xchg
cmp
push
fwait
mov
in
cmp
aaa
inc
adc
lock
(bad)
(bad)
mov
push
dec
mov
inc
ret
fistp
fcom
call
cmps
cmp
aas
cmp
gs
add
pop
sub
mov
xchg
xchg
sbb
hlt
popa
mov
xchg
clc
vprotb
jg
push
arpl
xor
das
cmps
into
inc
imul
push
jmp
stos
mov
es
mov
gs
dec
dec
xor
in
lahf
ret
xchg
jl
mov
loopne
add
mov
cmp
adc
dec
fstp
pop
dec
sbb
jo
xchg
mov
xor
pusha
push
gs
icebp
mov
in
fwait
xor
rcr
mov
(bad)
ins
xlat
inc
pusha
mov
xchg
popf
sti
sbb
or
sbb
mov
push
mov
sub
mov
add
fwait
dec
stos
xlat
js
add
mov
leave
fst
loop
ja
sbb
sbb
and
add
mov
outs
mov
shl
and
dec
fstp
cld
xchg
inc
call
jmp
rcl
cmc
push
into
daa
push
add
add
add
jmp
cmp
mov
xor
pop
div
mov
test
mov
lea
int3
cmps
cld
mov
bound
or
push
loope
inc
leave
int
clc
lea
xor
and
xor
sahf
jnp
loop
push
xor
fwait
icebp
sub
sahf
out
or
scas
mov
or
mov
cmp
adc
jmp
mov
sahf
add
inc
lahf
dec
dec
mov
xor
fnsave
push
aad
(bad)
mov
in
mov
mov
out
push
js
mov
mov
popf
retf
mov
aas
stos
sub
loopne
jnp
xor
mov
xchg
push
mov
dec
pop
aaa
out
ret
pop
xor
dec
mov
in
dec
cmp
xor
mov
jg
add
iret
movs
arpl
push
sahf
shr
aas
jmp
outs
pop
pop
int
sbb
cmp
in
in
lods
pop
sbb
sub
xchg
xor
pop
hlt
cmp
push
jmp
xor
pushf
imul
cmp
mov
mov
repz
outs
js
pop
(bad)
adc
(bad)
bnd
mov
jg
int
adc
cwde
inc
xchg
push
mov
(bad)
sbb
mov
jbe
mov
mov
cld
or
cs
das
push
mov
add
xor
cwde
sub
xor
add
dec
mov
pop
or
and
xchg
test
mov
leave
test
fisttp
clc
and
(bad)
jmp
sbb
cmps
sbb
arpl
icebp
lods
int
mov
pop
pop
inc
mov
push
mov
mov
enter
gs
push
retf
jge
sar
mov
adc
mov
lods
into
sub
out
jecxz
hlt
mov
test
pop
stc
out
adc
or
push
push
nop
mov
fwait
add
cwde
lahf
mov
push
cli
push
sti
xchg
or
aam
mov
or
or
retf
sahf
fwait
aas
bound
xchg
fwait
adc
retf
cmp
sbb
xlat
mov
cmc
jp
adc
pop
push
loope
mov
pop
add
inc
cmps
adc
cmp
pop
lock
jae
cwde
mov
jge
repz
cmps
adc
in
rcl
repnz
xor
daa
adc
je
mov
cmp
push
bnd
or
and
dec
fld
cli
(bad)
jecxz
stos
sub
icebp
js
pop
icebp
mov
mov
scas
mov
xor
inc
cmp
xor
push
js
lock
je
sub
sbb
mov
xchg
jno
fwait
popf
outs
push
push
(bad)
sbb
dec
add
enter
dec
sub
out
dec
cmps
cmps
add
iret
aad
ret
jecxz
fisttp
dec
and
fwait
xchg
pop
ja
add
mov
stos
jge
cmps
outs
js
adc
(bad)
pusha
dec
mov
mov
mov
cld
sbb
mov
mov
repz
pop
push
dec
sub
(bad)
cmps
xor
mov
jg
in
retf
ins
pop
daa
out
or
repnz
test
adc
push
push
jmp
inc
ret
jg
pop
push
fsub
xchg
push
dec
sbb
into
xor
pop
into
out
(bad)
cld
or
pusha
or
add
movs
cmps
jmp
or
cmp
test
xchg
cmp
pop
call
icebp
mov
mov
js
and
in
pushf
mov
xor
mov
lock
ins
gs
fnstenv
dec
les
scas
out
es
mov
popa
and
stc
std
js
lods
retf
int
shl
cwde
adc
fisttp
movs
or
ror
stos
retf
or
sub
(bad)
and
adc
inc
ins
mov
push
cmp
mov
mov
push
mov
out
clc
or
push
and
lods
inc
mov
sbb
xlat
lods
ret
mov
xor
push
ds
repnz
mov
push
inc
mov
jmp
lods
popf
mov
dec
popa
inc
mov
arpl
into
and
enter
inc
add
bound
pop
cmc
push
repnz
shr
mov
out
push
scas
inc
cmp
lock
push
test
dec
dec
push
cmp
and
sbb
fwait
repnz
mov
or
ss
icebp
inc
xor
ss
in
scas
outs
xchg
arpl
bound
test
add
popa
fistp
test
mov
fld
sub
bound
xlat
aad
jb
mov
cmp
(bad)
(bad)
mov
das
push
call
or
sbb
scas
pop
mov
sbb
jmp
jp
sbb
dec
mov
cmp
test
ret
xor
ins
mov
(bad)
mov
repnz
push
inc
sub
mov
enter
(bad)
mov
or
xlat
in
or
shr
imul
loope
jmp
push
inc
push
pop
loope
leave
or
inc
jb
fistp
adc
fcmove
cmp
xor
pop
(bad)
pushf
and
jg
pop
lock
sub
test
lods
gs
cli
in
pop
sub
push
lods
add
dec
xchg
ins
push
in
lock
sar
jge
rcl
fdivr
dec
int3
add
fidiv
inc
cmp
adc
gs
sbb
xor
xchg
repnz
cmps
jge
stos
cmp
sub
pop
cmps
sub
lock
sti
rol
fdiv
xchg
inc
(bad)
test
cs
aam
mov
not
and
addr16
and
sbb
and
lods
into
push
sbb
xchg
(bad)
and
adc
pop
add
fs
scas
jl
scas
fistp
repz
stos
aas
jns
lds
adc
jmp
not
jecxz
mov
(bad)
aaa
jno
inc
out
(bad)
push
sti
stc
pushf
jnp
mov
sahf
sti
out
jecxz
inc
mov
out
mov
(bad)
xchg
arpl
add
nop
and
or
out
add
aad
aas
xchg
sbb
cmps
mov
jne
xor
lods
ins
lahf
add
scas
outs
in
pushf
lahf
jl
and
push
je
fmul
xor
cmps
repz
dec
scas
outs
jg
bnd
mov
sub
inc
in
fwait
xor
test
mov
mov
adc
lock
pop
mov
ins
pop
mov
fisttp
push
js
retf
fwait
adc
push
cmp
cmp
jae
fs
stos
xchg
adc
jmp
add
int3
xchg
jl
sub
xchg
das
adc
cli
pushf
xchg
shr
jle
shr
dec
(bad)
dec
sbb
mov
push
icebp
mov
not
shr
xchg
fcomp
test
mov
or
into
add
pop
push
sahf
test
pop
mov
sbb
ins
mov
rcr
sub
ja
pop
cs
pop
sub
push
inc
add
fidivr
mov
push
sub
xbegin
sti
mov
cmps
add
pop
sub
adc
xlat
adc
fisttp
inc
fidiv
jle
movs
and
int
adc
xchg
loopne
pusha
jl
js
(bad)
push
or
and
inc
sbb
leave
lea
leave
cmp
in
add
add
mov
loop
xor
sbb
inc
scas
(bad)
jae
jno
sub
jge
mov
ss
sbb
mov
push
rol
inc
jo
outs
mov
ficom
dec
out
mov
loope
dec
(bad)
cmp
jb
inc
adc
(bad)
cmp
cdq
sub
in
(bad)
daa
mov
mov
mov
or
cdq
ja
or
mov
lahf
add
pop
lods
push
lock
cdq
mov
adc
mov
fwait
clc
push
lods
cwde
out
push
xor
aaa
jg
mov
cdq
je
das
ds
jnp
cmps
sar
mov
int
retf
push
stc
cmp
outs
xchg
addr16
xor
test
shl
and
mov
icebp
mov
mov
mov
push
aad
push
addr16
sbb
push
push
lods
stc
adc
or
popa
add
xor
in
sub
sub
loop
xchg
jne
cwde
or
mov
call
pop
fdivrp
rcl
sub
add
lahf
movs
clc
or
das
or
dec
and
xchg
add
sti
sub
xor
dec
mov
in
sub
cli
les
ins
mul
xchg
or
fstp
pop
jl
jle
mov
mov
hlt
jg
cld
movs
(bad)
jb
mov
jae
repnz
(bad)
pop
xchg
scas
sbb
(bad)
fcom
fcmovnbe
xor
push
push
fwait
ret
pop
sub
xchg
jnp
test
fwait
stc
aam
ret
adc
sub
outs
gs
mov
inc
xchg
cld
jmp
test
xchg
setge
test
pop
mov
js
aaa
pop
xchg
add
pop
gs
cwde
xor
out
out
mov
push
push
xchg
cwde
lock
mov
aad
cmps
xchg
fs
cmp
adc
sub
test
fdiv
out
xchg
mov
mov
fimul
adc
mov
neg
jp
push
jns
push
imul
les
pop
pop
int
inc
mov
mov
jg
xlat
cli
gs
cs
xlat
cmps
pop
push
jmp
pop
sub
stos
enter
out
aaa
movs
add
jae
jmp
push
cmp
pushf
sub
outs
push
adc
mov
xchg
dec
xor
clc
fisubr
ret
mov
rol
int3
leave
in
pop
loopne
dec
pushf
arpl
cmp
jae
sbb
jns
xchg
add
popa
adc
iret
and
add
inc
inc
add
stc
in
adc
sub
xchg
stos
adc
jge
jle
mov
sbb
test
adc
test
mov
add
mov
inc
int3
into
pop
mov
cdq
js
sub
sbb
scas
and
fcmovu
sbb
imul
inc
mov
jb
in
(bad)
mov
adc
and
pop
or
sub
dec
add
(bad)
jmp
or
iret
outs
iret
mov
dec
mov
and
cmp
popf
mov
xor
js
cmp
not
scas
cmps
sbb
inc
shl
int
iret
add
outs
loope
jns
inc
out
cs
pop
pushf
(bad)
dec
rcl
mov
xor
stc
clc
fbstp
cwde
addr16
jae
sbb
push
sub
push
mov
and
push
(bad)
rol
lods
mov
sub
cmps
ret
jmp
xchg
std
push
push
push
lds
dec
sub
lods
ins
jmp
or
adc
mul
mov
rcl
loopne
fmul
inc
mov
pop
xor
stos
jge
mov
adc
shr
jg
rcr
sbb
ins
repnz
pusha
sub
push
dec
lea
xor
add
in
jmp
cld
mov
ret
test
js
sub
mov
aam
push
xchg
jmp
pusha
adc
sub
pop
call
jo
xchg
aad
cmp
mov
dec
fbld
push
cmp
es
mov
in
mov
movs
push
add
sub
mov
dec
cmps
cmc
jmp
xchg
jnp
pusha
cmps
xchg
inc
or
dec
ja
lods
rcl
mov
aaa
and
ins
(bad)
in
into
jmp
(bad)
lock
push
out
jg
stos
test
xor
xchg
(bad)
(bad)
movs
idiv
clc
fimul
clc
inc
or
sub
enter
iret
fucomi
call
mov
mov
cld
inc
fndisi(8087
jg
retf
(bad)
call
jg
js
pop
pop
popf
arpl
dec
cmps
push
inc
jecxz
in
cmps
or
popf
push
xor
cdq
cmp
movs
and
add
rcr
(bad)
(bad)
inc
in
jmp
pop
xchg
jg
add
push
fwait
xchg
adc
call
mov
fidiv
and
jg
jl
daa
stos
mov
push
not
inc
mov
jmp
sahf
pop
jmp
out
add
cmp
or
mov
sti
in
sub
cmp
inc
push
pop
and
xchg
out
mov
or
test
sahf
ds
imul
pop
inc
pop
inc
mov
pop
int
xchg
hlt
cmp
adc
push
xchg
out
pop
and
es
imul
xchg
loope
inc
cli
bound
push
add
inc
aas
hlt
sub
push
movs
xor
xchg
mov
rcl
shr
call
pusha
and
inc
das
sbb
shl
xchg
rol
mov
or
stos
das
mov
loop
inc
pop
je
push
rcl
mov
cmp
mov
(bad)
pushf
mov
ret
loop
clc
dec
int3
icebp
mov
jl
leave
out
xchg
push
in
mov
clc
hlt
mov
lds
enter
push
inc
push
cmp
fldenv
out
outs
mov
cmp
or
cmp
jo
adc
mov
inc
mov
in
imul
leave
dec
pop
jp
mov
sub
push
dec
pop
cmp
fsub
push
ret
inc
cmps
push
adc
or
scas
mov
fwait
jle
mov
or
pop
(bad)
or
mov
pop
sti
dec
scas
daa
jae
fidiv
xor
sbb
gs
or
xchg
xchg
add
icebp
inc
and
cmc
shr
test
(bad)
(bad)
test
sbb
fwait
clc
xlat
and
retf
sahf
into
pop
leave
mov
mov
div
aas
imul
mov
rcl
out
mov
iret
cmp
and
fstp
mov
cmp
xchg
ds
call
pop
xor
jmp
lahf
(bad)
retf
test
jnp
dec
dec
push
shr
lahf
in
call
in
sbb
dec
or
call
(bad)
jno
jnp
pop
pop
and
aas
mov
das
gs
add
push
arpl
push
mov
test
inc
fnstenv
inc
das
add
hlt
scas
jnp
outs
fstp
and
(bad)
jae
repnz
lods
jbe
fidivr
push
mov
cld
push
adc
test
sbb
ins
xor
mov
(bad)
sbb
push
lods
leave
dec
cmp
xchg
(bad)
mov
dec
mov
mov
sbb
inc
push
adc
aad
fwait
call
xchg
lea
stc
sete
xchg
les
(bad)
mov
mov
pushw
push
and
jge
mov
(bad)
nop
das
mov
stos
jmp
mov
add
(bad)
neg
push
mov
cdq
xchg
cmp
pop
mov
cdq
pop
or
lds
sbb
sbb
mov
mov
or
mov
or
sbb
jne
les
cmp
jne
xor
(bad)
out
cmp
and
das
xchg
hlt
dec
lods
xchg
cmps
cdq
mov
ins
ret
or
pushf
out
add
mov
cli
imul
push
mov
or
mov
stc
je
sub
sbb
int3
shl
mov
sbb
ror
jmp
repnz
xor
fnstenv
pop
mov
rol
loopne
ins
inc
aas
jg
adc
fmul
fstp
mov
push
into
fadd
inc
mov
jae
cmp
(bad)
push
ins
mov
fimul
xor
fsqrt
or
ss
dec
and
push
sbb
jnp
adc
pop
js
push
int
out
cmps
hlt
jg
push
adc
imul
xchg
push
retf
ins
inc
add
mov
pop
xor
fnstenv
int3
test
cs
or
ja
arpl
mov
inc
popa
out
push
mov
sub
dec
jge
imul
mov
add
sub
ins
scas
ds
cmp
push
iret
(bad)
xchg
fmulp
cmp
mov
dec
out
test
xor
(bad)
mov
sbb
cld
adc
sub
aas
in
sbb
sub
icebp
mov
pushfw
int
jmp
gs
adc
call
cmp
retf
cs
cmp
xor
retf
(bad)
leave
xor
inc
retf
pop
ja
push
ret
dec
(bad)
sti
sahf
enter
repnz
es
adc
mov
mov
(bad)
push
and
icebp
mov
das
xor
and
mov
mov
pop
mov
pop
(bad)
in
addr16
fld
cmp
dec
test
push
sbb
loope
cmp
sbb
jg
lahf
test
jecxz
mov
xchg
mov
inc
jae
call
icebp
bound
lahf
ficom
and
mov
mov
mov
iret
inc
ja
jnp
add
or
mov
jg
pop
fcomp
out
xchg
shr
ja
in
sub
test
mov
fsub
add
push
ds
lds
sahf
rcl
imul
rcr
sahf
sti
sahf
dec
retf
pop
aam
rcr
add
into
out
add
xchg
pop
dec
jmp
xor
sub
push
ja
sbb
cmps
(bad)
push
loop
xlat
fldenv
cmc
stos
and
sub
neg
stos
mov
imul
call
imul
rol
and
out
ja
jbe
inc
fmul
pop
imul
imul
call
adc
xchg
ror
shl
jmp
jp
cmp
inc
sbb
lock
mov
push
sub
loope
pop
sahf
stc
mov
xchg
push
add
sbb
shl
pop
mov
ins
je
jno
(bad)
inc
jae
mov
in
es
sub
mov
pop
and
ins
inc
sbb
sub
jl
out
and
std
add
xlat
test
dec
loopne
and
cmp
push
sbb
push
in
pop
add
aam
(bad)
dec
rcr
mov
pop
popa
sar
xchg
sbb
pop
hlt
and
inc
repz
add
inc
cmp
outs
scas
fcomp
inc
fcmovne
xchg
retf
cld
mov
js
inc
(bad)
cmp
outs
xor
pusha
jmp
mov
mov
fst
int3
nop
cmp
sbb
xchg
daa
sub
inc
bound
dec
inc
nop
std
dec
das
cmp
out
loope
push
inc
mov
inc
xchg
dec
mov
imul
and
pop
push
push
inc
int3
mov
mov
iret
test
mov
cli
push
mov
fwait
in
pop
in
push
je
icebp
gs
sar
xchg
jmp
in
in
mov
iret
js
gs
adc
iret
inc
sub
xchg
(bad)
clc
jb
ds
jno
je
mov
add
or
mov
cmp
ss
jnp
xchg
xor
cli
or
ja
and
jo
(bad)
shr
sbb
fucomp
sbb
mov
(bad)
iret
(bad)
xor
inc
push
dec
cdq
jne
(bad)
aas
jno
loopne
mov
adc
(bad)
ss
xor
movs
adc
das
and
mov
(bad)
adc
mov
mov
(bad)
pop
inc
jge
mov
mov
add
imul
jns
ja
icebp
jmp
scas
cmp
(bad)
cmp
in
push
ja
retf
mov
or
mov
and
scas
xchg
fidiv
jle
pop
cdq
jl
imul
arpl
inc
xor
push
in
(bad)
sub
fs
mov
lahf
inc
cmp
cmp
outs
cmp
and
sbb
sub
and
mov
pop
addr16
pop
fimul
arpl
mov
aad
push
inc
scas
les
push
mov
push
xchg
pop
xor
lock
bound
mov
sub
(bad)
sti
pusha
mov
jle
mov
cs
shl
adc
sahf
(bad)
jmp
aam
jnp
in
sahf
add
sub
mov
aas
adc
test
and
jae
adc
(bad)
out
lods
(bad)
sti
dec
or
clc
push
dec
in
mov
cmc
cmp
ficomp
cmps
add
aad
mov
das
push
dec
retf
sar
adc
int3
gs
cmps
icebp
pop
imul
dec
out
and
xchg
xchg
in
in
sbb
lds
xchg
iret
mov
cli
stos
adc
(bad)
cld
(bad)
mov
stos
mul
sbb
sub
mov
loopne
adc
xor
or
test
sbb
xor
adc
xchg
cmps
fist
shr
loop
dec
push
aas
sub
pop
pop
xchg
mov
out
push
ja
pop
test
inc
mov
dec
cmp
push
lods
rcr
xor
sbb
pop
xchg
(bad)
shl
sbb
fisttp
outs
jmp
push
outs
xor
pop
inc
(bad)
cmc
or
xor
jecxz
push
xor
das
mov
cmp
mov
cmp
fmul
mov
mov
(bad)
dec
fidivr
xchg
or
pop
jge
cld
xchg
push
add
xchg
lods
outs
xchg
sbb
or
sub
sbb
shr
adc
fimul
inc
in
lods
sbb
and
xchg
in
outs
jnp
sub
loopne
dec
and
xor
arpl
call
loop
hlt
dec
jae
das
sub
test
mov
push
pop
sub
lds
xchg
cs
cmp
fiadd
mov
jmp
lods
jnp
int
pushf
mov
fwait
push
in
call
in
adc
sub
pop
imul
inc
dec
jmp
enter
or
inc
cwde
adc
cmp
repnz
test
jbe
(bad)
fidiv
les
add
jecxz
jae
mov
imul
mov
inc
sbb
push
das
pop
mov
sbb
inc
ffreep
dec
jge
mov
idiv
outs
test
push
bound
aad
xor
mov
xchg
pop
outs
adc
pop
mov
dec
outs
and
cmp
pop
add
sbb
adc
adc
mov
and
cmp
adc
jae
stos
mov
cmp
aad
stos
fwait
pop
push
sti
jbe
xchg
data16
jno
cwde
and
scas
repz
mov
xchg
jge
add
add
call
mov
or
and
push
adc
xchg
jmp
sahf
mov
mov
inc
fwait
(bad)
inc
or
mov
in
cmp
add
dec
(bad)
adc
pop
ds
mov
inc
(bad)
out
movs
fisttp
push
add
adc
cld
cmps
fbld
pop
rcl
mov
pop
xor
pop
and
das
stos
add
sbb
push
mov
inc
cmc
and
pop
xchg
mov
adc
pop
mov
jae
push
or
in
lock
pusha
and
push
xchg
mov
sbb
or
cmc
cmps
dec
sahf
nop
push
scas
inc
imul
sub
or
jge
call
sahf
repz
call
ins
out
stos
lea
jp
jg
mov
push
push
stc
movs
repz
mov
movs
je
xor
shl
mov
fcmovnu
or
mov
je
cmps
pop
imul
jmp
stos
repz
cmp
or
and
mov
scas
mov
scas
sbb
xlat
mov
loop
ss
mov
mov
pop
(bad)
or
mov
jmp
mov
xchg
xchg
mov
or
out
push
in
dec
add
es
dec
nop
mov
xchg
sub
retf
dec
sub
int3
in
dec
mov
jno
int
mov
adc
arpl
in
mov
and
ror
arpl
dec
or
mov
inc
rol
dec
cmp
mov
loope
test
into
jmp
ret
or
xchg
repz
les
add
aam
fdivr
xchg
adc
aas
pop
outs
inc
mov
outs
in
cwde
cdq
mov
fcom
mov
test
rcl
div
leave
dec
adc
ins
mov
xchg
movs
(bad)
fadd
aam
mov
dec
popa
pop
daa
repz
imul
sbb
dec
lods
xchg
movs
imul
jp
fmul
dec
adc
repz
xchg
ins
cdq
movs
aad
scas
movs
jnp
add
retf
ds
dec
ja
js
sbb
aad
mov
addr16
shr
xchg
adc
jle
imul
xor
dec
cmp
fdiv
mov
sar
or
inc
(bad)
adc
js
dec
ret
and
cli
push
std
addr16
or
xchg
call
push
out
xchg
sbb
scas
loopne
test
dec
std
aam
ins
in
push
imul
and
cmps
arpl
add
cmp
in
test
ret
and
mov
test
popf
push
mov
mov
loopne
ins
push
mov
sub
mov
pushf
dec
or
mov
idiv
movs
cmp
cmp
mov
ins
imul
sub
not
dec
addr16
jae
cmps
add
arpl
add
push
dec
popa
push
xchg
mov
xchg
(bad)
xchg
clc
int
jg
addps
inc
data16
pusha
aad
sahf
sub
jmp
jns
push
in
stos
sub
popf
scas
or
sub
adc
inc
sub
cmps
test
dec
sub
imul
xchg
dec
jg
mov
call
pop
sbb
mov
cmp
dec
popa
mov
nop
popa
pop
cmp
out
xchg
inc
mov
scas
daa
or
pop
xchg
out
std
mov
lods
clc
xor
sbb
scas
xor
sahf
inc
mov
test
sbb
mov
enter
xor
mov
dec
ds
and
ffree
or
mov
sub
sbb
inc
cmps
mov
mov
repz
pop
ss
cmp
cli
ins
fwait
not
test
outs
adc
retf
cmp
test
out
addr16
xor
jne
or
sub
jmp
fwait
jbe
add
cmp
ins
outs
mov
popa
mov
iret
jmp
cs
ins
stc
mov
cmps
arpl
lock
xor
jnp
cmp
mov
arpl
cmp
xchg
(bad)
jb
jmp
mov
daa
ds
push
adc
dec
(bad)
dec
xchg
or
scas
(bad)
jb
dec
xchg
cs
add
sbb
adc
imul
dec
inc
push
cmp
cmp
xchg
and
das
sbb
mov
sbb
jo
aas
mov
idiv
push
jnp
pop
pop
das
pop
call
xchg
mov
popa
add
jmp
rcr
test
jns
popa
dec
push
data16
push
in
das
mov
pop
sub
fstp
mov
and
adc
pop
sbb
push
arpl
lock
enter
inc
add
mul
mov
jle
xor
div
sbb
cmp
dec
add
adc
pop
and
ins
dec
mov
mov
push
mov
mov
addr16
sub
shl
pmaddwd
add
mov
dec
rcr
pop
inc
in
in
push
pop
sbb
inc
mov
mov
cli
xchg
and
test
mov
stc
loop
push
add
adc
inc
inc
cdq
adc
(bad)
xlat
dec
mov
sub
sbb
mov
push
inc
sbb
arpl
xor
inc
add
sub
xchg
xor
xchg
ret
data16
pop
mov
pop
mov
test
xor
jbe
scas
mov
loope
sar
or
test
mov
fsub
iret
ret
xchg
push
cmp
cmp
and
push
mov
jge
sahf
adc
retf
jmp
lods
jns
ds
retf
and
retf
and
sub
data16
mov
lock
in
jmp
in
dec
or
jne
popa
pushf
out
neg
mov
cdq
and
xchg
repz
movs
jo
bound
pushf
cmp
fimul
ins
push
jge
sbb
xchg
and
jbe
adc
daa
push
sbb
mov
shr
rcr
add
jmp
test
push
and
xor
dec
out
mov
jne
jb
mov
sub
mov
loope
and
mov
mov
or
movs
and
pusha
loope
xchg
sub
ins
repz
fistp
or
aad
arpl
inc
in
(bad)
add
add
outs
sub
add
les
cmps
std
lods
scas
outs
sub
adc
hlt
inc
and
cmps
and
pop
pop
mov
jge
call
into
ds
call
xchg
out
adc
shl
pop
or
mov
dec
out
xor
jno
push
mov
mov
jl
pop
movs
add
xchg
sbb
xchg
mov
pop
mov
jmp
cmp
je
(bad)
fnsetpm(287
adc
xchg
sbb
jnp
fwait
pop
mov
fst
not
mov
stc
adc
retf
mov
stos
fincstp
mov
mov
test
retf
aad
icebp
jg
rcr
sub
cli
dec
xlat
call
xchg
sub
test
add
aad
jno
adc
frstor
lock
jns
mov
xchg
cld
jl
jnp
jg
xchg
jle
nop
fnstcw
cmp
push
jo
test
inc
sti
repz
stc
lods
loope
enter
ret
or
inc
and
lds
mov
cli
inc
mov
push
mov
mov
mov
cli
call
push
jno
cmp
das
movs
mov
inc
inc
clc
and
pop
inc
xlat
stos
adc
imul
aam
and
test
in
sub
mov
mov
(bad)
icebp
jmp
xor
xchg
in
cld
sub
jmp
scas
sar
sbb
pop
(bad)
lds
(bad)
out
pop
mov
sbb
adc
sub
xchg
fimul
and
call
mov
adc
out
sbb
xchg
test
jl
sub
mul
int3
sbb
(bad)
inc
inc
pop
adc
es
cmp
rol
sbb
fwait
dec
cmp
rsm
xchg
xor
(bad)
adc
adc
cmp
sub
cmp
imul
mov
mov
and
and
imul
mov
push
sbb
out
icebp
and
push
enter
cmps
adc
out
out
hlt
(bad)
ins
fbstp
test
ja
dec
icebp
pop
mov
mov
pop
mov
fnstenv
jbe
xor
out
pop
cdq
pop
rcr
test
mul
nop
sbb
outs
mov
clc
retf
out
sahf
push
cmp
jno
cmp
sbb
adc
jo
add
loopne
pop
lea
xor
inc
sub
vorps
mov
js
sub
push
(bad)
pop
push
popa
int3
test
dec
fmul
pop
out
out
jno
ins
sbb
mov
psllq
dec
and
mov
retf
call
push
test
repnz
sbb
dec
xchg
in
xchg
or
inc
sbb
adc
retf
scas
mov
or
scas
and
test
sub
jo
in
icebp
cld
jge
sub
jne
adc
pushf
enter
pop
retf
jnp
pop
jo
pop
mov
call
stos
xor
pop
sahf
pop
dec
data16
pop
mov
inc
cmp
cmp
fild
dec
mov
sbb
mov
sub
pop
and
cmp
test
sbb
xchg
fld
int3
push
mov
fldcw
idiv
and
mov
lock
add
dec
cmc
shr
cmps
or
push
pop
in
test
clc
add
mov
pop
inc
fsubrp
dec
mov
push
sub
imul
inc
lock
mov
xchg
push
movs
xchg
(bad)
fild
gs
fsub
jmp
call
js
es
inc
stc
sub
dec
loop
pop
outs
adc
sub
inc
mov
int
push
loope
or
jo
cmc
jl
cmp
mov
fld
xchg
retf
out
jmp
mov
int
gs
xchg
pop
mov
imul
cmc
mov
sub
pushf
mov
scas
xchg
enter
sub
outs
cmp
fs
js
adc
or
push
nop
test
push
std
adc
pop
addr16
add
jle
and
cmp
test
hlt
jmp
push
loop
fs
fwait
add
xor
dec
sbb
test
hlt
out
jl
mov
xchg
push
jo
shl
div
retf
test
fcom
inc
pop
sbb
mov
pusha
push
inc
push
cmp
stc
and
or
mov
push
inc
ret
stos
cmp
cld
cmp
mov
lods
sub
add
repz
bound
and
xor
rcpps
ja
xor
mov
adc
cmp
mov
in
pop
or
inc
(bad)
mov
cmp
pop
add
fiadd
or
movs
xchg
sub
mov
fmul
or
mov
popa
test
cs
outs
aam
jmp
fcmovbe
add
mov
outs
lds
aad
repz
(bad)
arpl
outs
mov
jmp
enter
and
popf
pop
xor
shl
sbb
mov
mov
adc
test
out
push
out
jmp
jle
(bad)
mov
mov
not
fwait
and
fsubrp
fnsave
retf
in
add
pop
xor
and
das
std
cli
test
(bad)
nop
cmp
(bad)
aaa
in
adc
jns
mov
add
pushf
pusha
adc
mov
cmps
mov
xor
out
mov
add
jmp
rol
push
sub
mov
inc
add
mov
sahf
dec
fwait
bound
inc
xor
shl
inc
fdivrp
adc
cld
or
sub
fsub
scas
test
(bad)
(bad)
push
rcr
push
and
lea
aaa
mov
mov
cmp
test
pop
mov
out
jp
ins
pop
jmp
dec
adc
mov
or
ret
jne
add
fisttp
cmp
fcom
pusha
jge
repnz
or
dec
(bad)
faddp
aad
pop
outs
mov
jg
pop
dec
dec
jns
or
sub
sbb
shr
pop
test
jnp
xchg
dec
inc
mov
imul
shr
or
mov
mov
fwait
aam
inc
cmp
xlat
scas
sub
sub
sub
in
inc
mov
xor
push
in
and
inc
push
int
pop
mov
lods
leave
mov
call
sbb
inc
sub
inc
or
(bad)
aam
outs
popa
call
ins
sbb
fwait
dec
lods
sub
out
clc
sbb
mov
pop
(bad)
popf
sbb
rcr
sub
sahf
loop
jnp
sbb
mov
push
cmps
jp
sbb
loope
mov
jmp
js
lods
inc
mov
xchg
sub
xchg
mov
mov
dec
push
inc
or
jecxz
rol
xlat
repnz
(bad)
out
imul
add
pushf
jmp
out
lahf
pop
jmp
(bad)
(bad)
sub
inc
mov
test
es
jb
sub
call
xchg
cmp
cmp
ins
mov
cli
adc
xchg
adc
push
cmp
inc
push
add
add
lea
jns
cmp
jp
dec
jno
push
fistp
mov
int3
dec
sub
add
push
xchg
pop
push
fild
mov
in
adc
int3
sbb
(bad)
or
lods
and
bound
stos
jo
(bad)
cmp
mov
push
lds
enter
inc
mov
dec
dec
repnz
loopne
sub
xchg
clc
adc
xchg
les
jg
xlat
push
sub
data16
push
clc
gs
mov
pop
inc
call
repnz
ins
jp
xor
(bad)
pop
pop
push
cmc
enter
fidivr
(bad)
es
pop
cmp
jmp
push
xchg
pop
sub
popa
mov
bnd
add
xor
adc
scas
inc
cwde
lods
sbb
fist
or
jl
jnp
sbb
out
jbe
(bad)
mov
inc
std
jl
cmp
pusha
adc
enter
leave
(bad)
sbb
mov
xor
out
(bad)
inc
cmp
js
xor
and
inc
jmp
mov
sbb
std
mov
and
sub
inc
pusha
mov
fsub
ret
cmovbe
popf
(bad)
and
cmps
fdiv
aaa
out
(bad)
mov
xor
mov
jmp
rcl
jg
pusha
je
dec
sbb
out
int
cmp
in
adc
mov
stos
dec
mov
sbb
shl
outs
das
mov
jecxz
movs
mov
mov
and
mov
aam
sub
lock
addr16
push
dec
xchg
xchg
sub
addr16
inc
ins
inc
daa
jmp
int
fldenv
pusha
dec
cmp
sbb
inc
dec
cld
dec
inc
xchg
cmp
rcl
ficomp
outs
das
mov
mov
arpl
mov
ds
add
ins
sub
sbb
dec
pop
xchg
shl
outs
je
jecxz
jae
movs
retf
(bad)
xchg
mov
fist
mov
mov
xor
xchg
iret
jne
ret
dec
add
in
and
inc
and
lods
adc
jmp
adc
push
mov
sahf
cmp
xchg
or
sbb
(bad)
icebp
test
aaa
clc
scas
xor
pop
xlat
das
test
and
sub
adc
jg
pushf
push
xor
repz
pushf
call
push
cs
and
push
mov
(bad)
lds
or
in
jecxz
popf
dec
sbb
mov
je
mov
pop
xchg
xchg
mov
clc
mov
and
and
outs
xor
mov
mov
setl
add
imul
nop
(bad)
mov
adc
outs
ret
push
xor
movs
repz
jle
and
inc
or
retf
push
(bad)
mov
ds
dec
fild
addr16
lahf
push
bound
(bad)
sub
add
fld
inc
js
mov
cmp
imul
cmps
sahf
jmp
shr
pop
int3
lods
xchg
xchg
pop
sbb
mov
int3
lahf
push
aam
jl
sbb
push
idiv
cmp
jg
sahf
pop
mov
retf
inc
dec
mov
cmp
in
out
jne
mov
push
or
mov
cmp
xchg
or
mov
or
inc
adc
retf
adc
cdq
ret
push
add
lods
loope
inc
mov
(bad)
out
and
loop
dec
cmp
neg
xchg
aam
or
retf
mov
movs
mov
ret
inc
add
pop
cmc
repz
mov
adc
inc
xor
loope
sub
fistp
push
mov
mov
push
dec
mov
js
adc
lods
ret
retf
add
std
aas
mov
xchg
mov
xchg
jne
cmp
adc
jae
xchg
mov
jo
adc
adc
pop
sar
les
loop
xor
sbb
xor
dec
test
in
add
adc
xor
out
(bad)
jns
stc
pushf
mov
dec
cli
aad
xchg
cs
inc
add
cwde
dec
pop
sbb
ins
pop
add
cwde
daa
out
cmps
enter
mov
and
inc
add
out
(bad)
out
cmp
add
enter
sub
or
pop
xchg
push
mov
push
xchg
push
pop
aad
jb
adc
push
cmp
cli
pop
ret
sub
jno
mov
ds
xor
iret
mul
outs
sub
xor
icebp
xchg
jl
daa
ja
lahf
out
cmp
pushf
gs
jbe
or
push
cmp
add
or
fsub
jnp
loope
loop
pop
mov
mov
adc
mov
nop
push
cmp
mov
add
add
mov
cwde
jp
aam
or
xchg
aam
push
add
add
sub
sbb
xor
sbb
into
sub
out
adc
mov
xor
loop
out
sbb
xchg
jnp
xchg
(bad)
sahf
push
jp
movs
xlat
dec
mov
mov
cmps
fmul
dec
sub
ret
mov
push
fcomp
popf
ret
fisttp
xor
ins
pop
cld
test
out
pusha
jno
cmp
inc
js
push
jg
mov
sbb
add
xchg
retf
mov
jl
mul
jle
(bad)
ins
cmp
sub
inc
nop
fsub
xor
pusha
pusha
jle
adc
sbb
shl
inc
int
xchg
adc
fadd
adc
imul
cmp
add
ret
sbb
call
lea
xchg
adc
out
lods
or
ret
call
pop
add
push
movs
sbb
xor
aaa
sti
addr16
xchg
and
inc
retf
xchg
mov
pop
and
jl
sub
aaa
inc
daa
jle
add
mov
into
pop
loopne
ds
pop
es
ror
(bad)
out
mov
xchg
jp
movs
jno
fs
ficomp
iret
dec
fadd
sub
outs
(bad)
outs
cmp
sub
shl
push
in
jge
movs
fistp
in
lea
shr
test
sbb
retf
outs
mov
shr
into
arpl
dec
js
adc
shr
out
adc
push
int
cmp
pop
clc
mov
scas
cmp
dec
jnp
ja
jmp
jns
lahf
jae
es
mov
adc
pop
adc
xor
ins
je
out
and
aad
dec
mov
lods
inc
push
shl
cld
into
test
fsub
xchg
jmp
push
fisub
cmc
xor
mov
mov
or
adc
mov
sbb
adc
out
inc
retf
or
popf
(bad)
cdq
mov
shl
ror
jmp
movs
mov
dec
call
sbb
push
mov
or
inc
inc
jmp
popf
movs
jle
mov
mov
enter
or
nop
(bad)
jge
xchg
jo
pop
pop
jno
cmp
scas
xchg
jmp
mov
loopne
bound
inc
add
xor
xor
ins
bound
fadd
loop
les
sub
xchg
mov
xor
mov
or
and
and
or
dec
mov
sbb
mov
lock
repz
mov
push
cmp
sahf
gs
dec
outs
pop
jge
test
out
leave
iret
std
(bad)
rcr
das
xchg
fs
cmp
sti
add
dec
mov
mov
aas
jge
adc
xchg
mov
xchg
or
xor
adc
adc
add
mov
ja
bound
int
adc
inc
mov
ins
pop
cmp
es
add
in
inc
jmp
dec
aam
ins
inc
sbb
test
or
pushf
shl
hlt
xchg
xchg
call
xchg
aad
sbb
jnp
lds
jmp
or
(bad)
jb
into
jmp
daa
fyl2xp1
xor
add
inc
add
in
and
je
add
pop
(bad)
shr
pop
(bad)
leave
xlat
aas
pop
into
outs
jne
sub
rol
cld
jl
sahf
push
int3
call
cwde
mov
mov
scas
nop
push
xor
xchg
cli
jnp
stos
adc
(bad)
clc
sub
fadd
xchg
pop
scas
fstp
jno
sbb
inc
dec
ds
mov
jmp
add
dec
rcr
sti
movs
inc
push
dec
inc
adc
push
adc
in
adc
jge
adc
in
cmp
sbb
sub
adc
inc
cmps
dec
dec
sbb
and
loop
xchg
mov
movs
adc
popa
out
call
fdiv
rcl
into
inc
cmps
sahf
mov
inc
push
mov
cmps
jl
mov
adc
push
ficom
or
sub
mov
fs
mov
clc
xor
jne
cmp
or
jb
ss
and
jb
sbb
and
lar
sbb
jmp
cmp
lods
jne
push
cld
push
sub
aas
push
jge
lods
adc
pop
add
es
rcl
clc
shr
jae
push
add
jne
je
data16
jp
inc
sub
lods
cmp
lahf
and
idiv
ds
sbb
jp
ffreep
or
idiv
enter
sub
jno
adc
gs
aam
dec
adc
pop
add
call
sar
ret
dec
add
jmp
outs
pop
mov
cmps
shl
scas
pop
xchg
jle
(bad)
fisttp
popa
jae
daa
or
mov
adc
repz
call
rcr
and
sub
in
mov
div
push
scas
(bad)
add
cmp
or
or
in
js
(bad)
mov
(bad)
aas
pop
shr
outs
cmp
loopne
mov
les
and
enter
dec
jo
in
xchg
inc
or
jns
xchg
fcomp
ret
in
aas
xor
dec
ret
fldcw
inc
jl
xor
pop
sbb
mov
pop
or
loope
inc
jmp
or
inc
cbw
mov
loop
add
jo
std
(bad)
leave
mov
mov
mov
inc
add
cmp
add
ja
pop
add
xor
cmp
sub
leave
mov
sbb
cmps
stc
pop
cdq
sar
or
cs
lahf
clc
mov
inc
in
mov
jmp
je
cmps
cmp
xor
xlat
mov
push
out
test
loope
aaa
dec
sar
fnstsw
xor
push
sub
stc
cli
les
in
push
cli
fcom
sub
call
xchg
ss
popf
addr16
mov
mov
mov
cmps
pop
paddsw
mov
xor
add
lods
sub
imul
mov
dec
mov
and
js
test
sub
int
xor
jae
jne
lock
pop
fsub
xchg
retf
gs
daa
mov
shl
sbb
xor
fisubr
cdq
fcomp
mov
hlt
add
fnstsw
les
sub
inc
popa
popf
hlt
je
mov
inc
(bad)
div
xor
fcom
sar
pop
rol
lods
dec
jbe
sub
mov
(bad)
sub
jle
popf
mov
pushf
dec
aad
push
push
inc
ror
jl
sub
mov
inc
pop
inc
sub
mov
sar
call
adc
sbb
shr
cs
cmps
sub
das
mov
push
int
nop
mov
add
adc
(bad)
dec
sbb
outs
push
inc
xchg
add
fst
cmps
fs
bound
jb
sub
cli
adc
cld
fnstenv
popa
cmp
push
rcl
mov
cmp
neg
or
mov
call
jmp
add
test
fcmovne
jo
dec
sbb
out
outs
pop
imul
or
dec
mov
lahf
ds
loope
popf
push
andps
mov
push
sub
dec
in
or
pop
(bad)
std
inc
inc
test
out
xchg
inc
xor
std
xor
inc
repz
sbb
sbb
xor
inc
popf
sbb
daa
mov
fstp
inc
inc
cli
xor
out
mov
or
pop
cmp
or
pop
test
pop
mov
imul
in
fbld
loopne
es
ss
cmp
stc
and
push
retf
push
add
in
aam
ins
inc
add
(bad)
cmp
pop
xchg
pusha
rol
mov
es
sub
mov
(bad)
outs
xor
dec
or
sub
stc
dec
push
neg
xchg
push
nop
lds
fwait
cmp
fadd
inc
lock
cli
das
daa
dec
fdivr
repz
xor
ds
push
jge
sbb
inc
jnp
pop
or
jmp
(bad)
lds
addr16
aaa
daa
adc
das
call
pop
pop
das
xchg
adc
pop
in
jl
jns
mov
or
xchg
pop
push
outs
xchg
pop
mov
pusha
fcomp
in
cmp
outs
fiadd
fsubr
gs
push
mov
jmp
jns
aam
jae
repnz
dec
push
stos
mov
sub
bound
cmp
xchg
inc
test
iret
mov
movs
cli
scas
mov
pop
jmp
inc
call
mov
dec
xor
push
mov
jmp
add
mov
outs
sbb
es
imul
imul
push
out
retf
sar
mov
jg
jne
cdq
adc
inc
mov
(bad)
jge
mov
adc
or
daa
push
inc
inc
pop
fistp
dec
sub
mov
adc
(bad)
cmp
repz
sbb
adc
jno
addr16
out
mov
ja
or
repnz
and
mov
outs
adc
mov
ss
stos
popf
pop
fs
jecxz
add
jnp
cmp
mov
fist
jmp
into
mov
push
out
cmc
loope
fwait
mov
pop
mov
xor
jle
sbb
outs
and
push
lea
sbb
mov
rcl
pop
mov
jbe
in
mov
pop
(bad)
sbb
or
xor
rol
loope
xchg
retf
or
cmp
mov
iret
dec
or
xchg
add
iret
int
das
adc
sub
(bad)
or
push
add
push
xchg
ret
sub
idiv
mov
and
cs
loop
leave
cld
adc
movs
std
adc
mov
pop
jae
jl
shr
imul
outs
or
dec
xor
lahf
pop
push
js
sub
dec
jnp
and
and
loopne
sub
arpl
movs
or
ror
mov
jb
xor
aam
out
arpl
icebp
cmp
cwde
jne
aas
cmp
or
lods
repz
enter
rol
xor
jne
in
pop
div
inc
in
loope
inc
fsubr
gs
pop
add
fwait
jp
ds
aas
mov
retf
inc
push
mov
int3
idiv
fcmovb
and
fwait
xor
jo
xchg
jmp
movs
sub
imul
add
movs
aaa
mov
bzhi
inc
or
xchg
and
mov
movs
push
addr16
push
pop
mov
int
cmp
pop
in
cwde
push
jo
push
inc
add
pusha
cwde
dec
xchg
push
stc
mov
adc
das
rcl
and
sbb
out
stos
retf
jecxz
outs
imul
add
cmps
jle
or
mov
cmps
je
popa
sub
hlt
fisubr
add
push
pop
(bad)
(bad)
pop
jo
adc
or
pop
outs
or
mov
and
test
(bad)
sub
pop
or
sub
jp
sbb
jb
sbb
mov
inc
sbb
sbb
cmps
imul
mov
inc
jle
sub
scas
or
adc
stc
scas
mov
mov
ficom
pop
mov
jo
cld
fisub
call
xchg
je
mov
xor
retf
cli
mov
cmp
retf
inc
in
xchg
add
jmp
neg
ss
int
in
(bad)
push
pop
jmp
and
dec
adc
mov
mov
ret
push
je
out
push
fdivr
outs
lea
pop
and
dec
mov
mul
clc
add
rcr
xor
popf
(bad)
loopne
mov
push
xchg
sub
sub
repnz
or
call
lea
leave
inc
mov
in
ins
pop
inc
dec
sbb
pushf
adc
xchg
push
add
lahf
cmp
cmp
or
xlat
cli
mov
loopne
sbb
pusha
shr
and
jp
ss
pop
dec
mov
fdivrp
div
jns
or
fs
xlat
bound
call
in
rcr
(bad)
loop
rcr
dec
sub
in
dec
shr
xor
mov
and
jbe
movs
outs
push
test
jns
arpl
jecxz
and
fcomp
adc
call
push
push
lods
int3
int3
aas
sub
stos
lahf
shl
adc
xor
hlt
add
out
(bad)
dec
stc
or
scas
mov
xor
fidivr
fwait
xor
pop
sbb
arpl
dec
inc
inc
sbb
inc
cmps
add
mov
test
xchg
or
mov
add
mov
mov
push
push
rcr
adc
mov
lds
and
scas
imul
xlat
jns
retf
out
inc
(bad)
mov
aad
jl
jne
scas
add
xor
xchg
call
jl
cmps
lods
loop
push
ror
adc
add
out
sti
xchg
data16
scas
cmpps
jmp
data16
mov
sti
jp
aam
mov
fld
ins
sahf
inc
es
sub
adc
xor
pop
pushf
pop
add
xchg
mov
add
push
pop
jecxz
or
clc
push
(bad)
cmp
(bad)
push
jge
outs
aad
xor
cmp
xchg
inc
fstp
add
cmp
lods
xor
inc
ins
pop
push
xor
jb
and
adc
add
pop
xchg
xchg
stos
add
test
movs
adc
inc
ret
(bad)
aam
fcom
dec
sub
ds
rcl
push
jmp
xor
das
dec
push
movs
cwde
inc
and
inc
outs
je
mov
ins
pop
cmp
inc
push
(bad)
cmps
fldcw
ins
adc
iret
aam
adc
jmp
xchg
test
js
jmp
cld
ss
lea
sbb
cmp
dec
and
test
hlt
adc
adc
mov
mov
xchg
add
mov
ss
stos
cmp
push
jl
dec
xor
arpl
(bad)
je
mov
add
cwde
movs
lods
push
cmp
stos
addr16
adc
fild
shl
push
inc
sub
or
dec
xor
inc
xor
xchg
pop
fcomp
ja
jns
push
clc
sbb
sub
repnz
sub
aad
mov
ins
ret
lock
out
jb
pop
js
or
sbb
call
in
and
sahf
inc
neg
outs
das
pop
ss
ins
add
cli
pop
jle
and
xchg
mov
push
in
ins
fstp
mov
or
movs
aas
shl
hlt
mov
aas
adc
into
pop
lock
push
mov
mov
imul
pusha
xor
ins
xchg
out
ss
xchg
repnz
mov
cs
js
adc
cmp
mov
out
sbb
mov
jns
cmp
aas
stos
push
push
sbb
in
ret
jb
fcom
mov
int
frstor
sub
shl
je
aas
jae
nop
pop
(bad)
pop
dec
in
cli
sbb
jmp
sub
sbb
mov
mov
sbb
sbb
les
add
pop
outs
ins
mov
hlt
dec
and
or
jge
scas
mov
mov
aaa
or
clc
push
dec
jecxz
and
dec
and
enter
rcl
push
paddq
jns
and
std
test
in
(bad)
xor
xor
push
push
inc
sbb
cmp
in
idiv
mov
in
(bad)
mov
xchg
rcr
pop
or
cmps
dec
(bad)
dec
mov
jecxz
pop
jecxz
push
sub
cmp
jbe
stos
and
nop
aas
mov
das
scas
mov
push
mov
xchg
jge
cmp
lock
gs
fucom
lahf
mov
mov
cmp
(bad)
(bad)
xchg
fild
shl
mov
jmp
fdiv
aas
mov
add
push
and
or
jb
inc
add
inc
jae
mov
sbb
addr16
loop
or
sbb
cli
or
lea
push
enter
aad
(bad)
rol
pusha
jns
js
fmul
push
daa
fisttp
movs
sub
(bad)
or
inc
mov
shr
test
stos
add
lods
dec
iret
cmp
xchg
pop
jne
scas
(bad)
xlat
mov
inc
(bad)
xchg
loop
fcomp
jns
rcr
outs
or
retf
dec
and
xlat
sub
int3
ja
call
das
xchg
lock
add
in
fisubr
sbb
jmp
sbb
stc
lds
cmc
or
int3
add
sbb
(bad)
mul
inc
aas
mov
add
add
sub
(bad)
call
xlat
in
and
je
cmps
fs
push
mov
imul
test
and
cwde
and
outs
outs
xlat
add
lgs
in
loopne
mov
lock
test
jns
mov
repz
aam
jecxz
test
dec
push
enter
mov
iret
jg
aam
pop
lock
loopne
push
les
and
sub
jg
js
aas
cmp
(bad)
cld
aas
mov
fnsave
mov
xlat
inc
sbb
in
mov
fwait
loopne
pop
mov
and
dec
ins
retf
inc
push
loop
retf
mov
push
push
retf
leave
mov
data16
pop
icebp
adc
mov
jmp
sub
pushf
cld
and
pop
push
mov
test
xchg
lock
fistp
xor
mov
sub
dec
mov
mov
mov
hlt
std
lea
xor
outs
into
xchg
aam
mov
dec
xlat
shl
xor
dec
out
je
xor
add
mov
mov
scas
sar
jle
enter
das
xor
stc
dec
popa
sub
lahf
test
ret
retf
mov
and
ror
jno
and
or
pop
sub
dec
addr16
sti
leave
cmp
in
push
sub
xor
(bad)
addr16
js
fwait
mov
mov
fdivr
(bad)
add
cwde
and
add
fimul
pop
sbb
stos
movs
mov
fisttp
fisub
in
push
mov
mov
dec
not
test
fsub
mov
sub
ret
fnstsw
push
int3
mov
and
pop
adc
retf
and
jecxz
or
jecxz
cmps
jge
xchg
jne
gs
rcl
mov
std
cmc
pop
jo
push
pop
cmp
into
neg
cmps
lods
add
sahf
icebp
and
push
pop
push
popf
pop
jg
lahf
cs
outs
and
mov
sbb
jb
mov
mov
cmc
cmp
jmp
jno
inc
xlat
cmp
cs
sub
pop
movs
aaa
adc
push
add
arpl
mov
mov
sub
jp
(bad)
xor
and
adc
in
out
push
imul
hlt
mov
jnp
fadd
sub
fistp
inc
pop
imul
cwde
xchg
xchg
imul
sar
(bad)
push
mov
xor
cmps
jno
mov
out
xchg
retf
cmp
fwait
mov
mov
test
sbb
stos
loope
mov
and
add
add
call
jae
fiadd
(bad)
mov
sbb
or
sub
fisub
lea
je
jmp
xchg
retf
popf
or
mov
outs
shl
fsubr
repz
movs
or
pusha
or
shl
pop
mov
les
adc
into
mov
std
shl
into
call
rcl
sub
dec
push
repz
data16
and
and
xlat
shl
imul
out
(bad)
ss
es
pop
pop
gs
xchg
mov
jb
jecxz
sbb
mov
addr16
adc
sub
loopne
test
xor
xchg
add
and
(bad)
out
cmp
js
clc
add
mov
getsec
jle
(bad)
into
and
or
clc
movs
dec
(bad)
int3
xor
les
mov
je
cmp
push
pop
sahf
xchg
aas
loop
dec
mov
outs
retf
rcl
inc
jnp
mov
dec
out
shl
and
leave
xor
dec
add
jns
push
cmp
adc
sbb
push
push
mov
mov
sbb
aas
sbb
fmul
dec
mov
mov
pop
mov
cmp
jns
lahf
sbb
sbb
jge
cmp
or
push
(bad)
mul
push
lock
ss
lahf
xchg
mov
mov
push
jb
mov
inc
cmp
test
ins
rcl
adc
add
inc
xchg
jbe
popa
sub
cld
pop
and
mov
clc
inc
iret
(bad)
jno
ss
mov
(bad)
int
sbb
movs
sbb
je
cwde
and
push
bound
and
xor
push
push
aam
test
cld
pop
arpl
movs
xchg
cmp
pop
out
and
mov
test
movs
cmps
xchg
xchg
and
ffreep
(bad)
jns
adc
adc
dec
(bad)
out
push
dec
scas
dec
in
pop
mov
out
out
pop
dec
popa
mov
pop
and
pusha
push
add
pop
(bad)
out
dec
push
inc
inc
in
push
ss
loop
into
dec
fild
fsubr
les
jo
je
jmp
jnp
rcr
je
cmp
or
adc
scas
sub
ds
(bad)
pop
mov
outs
inc
cmps
push
enter
xor
shl
sti
sbb
sbb
dec
sub
out
cld
inc
shl
mov
fs
mov
xor
jbe
cmp
mov
stos
ins
popa
sbb
ins
(bad)
push
in
fcomp
sbb
cdq
and
jb
std
in
getsec
iret
cmp
(bad)
std
ds
ja
jmp
sti
ja
ins
push
and
rcl
movs
mov
je
mov
fsub
jg
adc
xor
jno
aaa
cmp
ins
adc
push
xor
push
sbb
add
iret
cwde
mov
push
push
mov
int
cmp
cmp
mov
fcmovu
add
fisttp
jne
pop
test
inc
sti
out
retf
jo
jbe
add
mov
xor
stos
cmps
mov
pop
jge
mov
add
dec
arpl
jnp
enter
mov
ins
scas
inc
mov
sub
xchg
rol
sti
ret
xchg
arpl
out
imul
jno
lea
aam
sbb
out
and
mov
hlt
repnz
aad
call
cmp
ret
add
aam
mov
inc
dec
ins
in
cld
cmp
aaa
pop
dec
in
adc
inc
repz
xchg
ror
jmp
sbb
jmp
or
outs
inc
inc
fwait
out
das
push
(bad)
push
add
ret
std
mov
ss
cwde
inc
fbld
xchg
or
cmc
push
cmp
mov
dec
imul
aad
cs
clc
mov
ret
and
shl
jmp
xchg
dec
push
inc
les
push
fwait
inc
push
ficom
(bad)
jmp
or
outs
sub
call
jbe
outs
enter
xchg
adc
mov
pop
adc
test
cmp
xchg
sahf
or
pop
shl
mov
ja
(bad)
das
arpl
mov
mov
adc
rol
je
fdivr
popa
rcl
call
dec
aas
(bad)
fisubr
jo
mov
aas
inc
sahf
cmps
or
into
shr
int3
jle
(bad)
int
ja
repnz
cmp
or
dec
xchg
mov
push
xchg
xor
popa
(bad)
into
pop
inc
add
ins
outs
retf
pop
xor
imul
add
call
in
lahf
ficom
fsub
push
mov
push
call
sbb
inc
repz
mov
sbb
push
inc
addr16
(bad)
push
mov
pop
pop
repnz
cmp
xchg
mov
popa
jns
sbb
in
sbb
pushf
arpl
add
repnz
add
and
xor
push
dec
repnz
mov
mov
mov
fs
inc
add
inc
out
(bad)
fnstsw
jl
and
sub
repnz
inc
out
and
push
dec
pusha
int
fsubr
push
cld
inc
dec
push
in
int3
mov
push
inc
cmp
or
pushf
in
int
push
loope
enter
lahf
mov
loopne
out
call
mov
jle
adc
nop
hlt
das
test
cmp
(bad)
cmp
sbb
jg
mov
push
xor
pop
clc
or
das
les
mov
and
push
jno
cwde
mov
inc
push
jnp
or
stos
mov
pop
xlat
and
das
jae
add
jns
rol
scas
arpl
xchg
ins
or
adc
mov
jp
lods
mov
dec
mov
je
mov
stc
sub
in
and
add
fwait
outs
ret
pop
xchg
retf
or
and
or
addr16
dec
push
and
sub
repz
loopne
lods
xor
loopne
rol
or
mov
or
add
in
sub
jmp
dec
ins
sub
mov
stos
js
cmp
jns
jo
pop
ja
adc
pop
mov
push
popa
outs
sar
dec
pop
mov
cmp
in
daa
mov
mov
or
cmp
mov
js
scas
mov
repz
pop
in
mov
xchg
int3
cld
pop
add
ficomp
fcomp
fucom
mov
mov
lock
push
push
sbb
dec
jle
je
dec
pop
xchg
enter
dec
cmps
jnp
mov
xchg
aad
fs
dec
and
cli
pop
sbb
ins
hlt
loopne
xchg
add
(bad)
xchg
loop
repz
icebp
push
dec
cmp
js
sahf
jno
in
repnz
movs
push
mov
cmp
lds
push
not
daa
jno
jmp
pop
(bad)
fld
das
jp
imul
sahf
jns
adc
arpl
pusha
(bad)
lahf
cmc
push
jo
(bad)
jb
push
push
fcmovbe
div
mov
sahf
inc
mov
jecxz
mov
xchg
test
rcr
push
inc
mov
xchg
mov
sub
fs
push
lds
mov
iret
sub
(bad)
not
xlat
cdq
cli
pop
push
push
mov
push
and
jmp
loop
push
ja
jecxz
mov
sub
leave
pop
pop
pop
nop
fwait
mov
jle
mov
xor
stos
mov
fnsave
(bad)
mov
cmc
popf
inc
jp
fisubr
dec
xchg
int3
pop
dec
cs
add
and
jg
mov
pushf
aas
pushf
add
cmp
jae
icebp
cmp
dec
pop
jb
jle
sub
stc
mov
pop
les
daa
push
dec
xor
iret
sahf
and
rol
stos
mov
jmp
push
imul
adc
loope
popf
dec
out
mov
je
sbb
inc
mov
into
sbb
jns
fcmovnu
inc
ss
ret
test
inc
cmps
dec
cs
popf
cmp
mov
jne
inc
ret
cmc
pop
js
cld
aas
pop
out
call
scas
(bad)
or
jmp
nop
std
adc
xchg
dec
dec
jae
cmp
inc
scas
cmp
gs
clc
icebp
test
xchg
mov
jp
outs
push
mov
add
js
leave
lods
sub
out
sbb
in
jmp
dec
jmp
xchg
gs
cmp
fs
xchg
push
cmp
pop
mov
cs
jno
sbb
inc
addr16
call
adc
jge
and
iret
cmp
add
or
push
cmp
adc
imul
mov
xor
nop
mov
inc
or
mov
gs
lock
push
push
sub
jo
div
dec
dec
out
dec
sbb
dec
adc
inc
dec
into
mov
xchg
mov
into
pop
movs
jl
loop
pop
adc
test
dec
rol
pop
push
cs
sub
cmp
es
cdq
test
mov
dec
add
sbb
mov
int3
ds
xor
(bad)
sub
cmp
icebp
loop
and
mov
sbb
adc
sbb
icebp
pusha
or
sti
mov
mov
icebp
pop
hlt
rcl
and
sbb
mov
jno
or
pop
mov
adc
js
inc
cmc
add
push
les
add
inc
shl
mov
test
push
pop
enter
pop
or
int
or
and
clc
sub
add
sub
je
ss
pop
adc
sbb
xor
and
pop
shl
lds
jo
sti
or
xchg
xchg
ss
xchg
sub
mov
sub
xchg
dec
call
aaa
int3
dec
mov
and
adc
jmp
jns
mov
movs
mov
sub
inc
pop
pop
push
add
push
and
dec
jo
(bad)
lahf
inc
aas
ror
dec
inc
movs
jb
jmp
mov
cdq
mov
test
imul
pop
stc
jge
(bad)
imul
xor
jp
push
je
imul
repz
ds
test
pop
mov
fidiv
jne
push
mov
(bad)
cmc
cs
leave
daa
imul
icebp
sbb
std
xor
sbb
call
or
inc
ja
out
into
aaa
stos
ins
mov
int
(bad)
inc
iret
jle
jne
test
mov
(bad)
push
inc
shl
cmp
loop
cmps
sub
push
lods
mov
xor
hlt
loopne
cdq
add
arpl
push
push
dec
mov
or
ret
add
xchg
xor
mov
jmp
mov
js
ins
push
xor
pop
in
mov
popa
shl
sbb
sub
cs
(bad)
(bad)
enter
mov
sahf
mov
enter
add
ret
jge
sahf
mov
mov
icebp
in
rcr
loope
rcr
cmp
jns
mov
pop
pop
xor
shl
ss
jno
or
pop
lods
mov
mov
jno
test
or
aam
lock
dec
in
ja
fwait
ret
xchg
jns
outs
aaa
cs
xor
push
mov
out
sbb
cmp
jge
cli
and
movs
bound
test
xor
cmp
mov
pop
sub
xchg
cwde
mov
in
xchg
xchg
iret
jne
push
push
cmp
jbe
inc
pop
push
les
pop
iret
scas
iret
cmp
mov
dec
leave
dec
add
mov
repz
sub
pop
mov
arpl
nop
lock
cmp
sbb
les
das
mov
daa
retf
and
mov
(bad)
gs
adc
ucomiss
inc
fdiv
push
and
xacquire
lods
adc
jmp
shl
inc
je
mov
aam
outs
push
and
push
xchg
cwde
sbb
shl
mov
cmps
xor
shr
sub
add
(bad)
sbb
(bad)
loope
mov
mov
xchg
mov
lds
bound
adc
call
cmps
in
in
mov
xor
aad
outs
sub
nop
mov
pop
out
ds
into
addr16
outs
pop
jl
clc
sbb
sub
xchg
mov
add
xchg
pop
retf
fstp
push
pop
cmps
test
ss
dec
mov
fidiv
cmc
into
cmp
loop
fnstenv
xchg
adc
jge
cmovg
rol
cld
into
sub
int
(bad)
adc
cmp
std
lods
jo
sbb
mov
scas
mov
pop
or
inc
je
dec
mov
outs
dec
ds
lock
sbb
mov
hlt
lea
leave
push
mov
or
sbb
stos
imul
push
pop
repz
(bad)
ins
pop
test
nop
enter
adc
sbb
mov
xchg
lods
dec
add
pop
aad
sub
mov
popa
jns
pusha
fld
test
(bad)
(bad)
leave
cmps
imul
mov
xchg
push
mov
test
test
mov
enter
and
cmps
scas
ficomp
sbb
cmp
popf
retf
movs
test
mov
adc
lods
test
fyl2x
and
out
icebp
sbb
push
sbb
mov
out
nop
in
mov
rcr
mov
cmc
mov
stos
outs
add
repz
sbb
push
sbb
or
cdq
mov
(bad)
aas
xor
in
push
add
mov
out
mov
rol
xor
or
test
lahf
jo
cmp
lods
xchg
(bad)
push
fwait
ins
inc
fwait
lock
inc
data16
mov
outs
sti
sbb
inc
lahf
push
test
sub
xor
cmps
out
and
mov
stos
int3
dec
comiss
cmp
into
jbe
jecxz
push
inc
mov
adc
jo
ret
mov
outs
ins
xchg
data16
pushf
std
mov
popa
add
mov
ficomp
data16
mov
or
cwde
push
loop
xchg
scas
pop
sub
pop
adc
arpl
movs
sub
mov
xor
out
ss
push
mov
out
pop
ror
lock
cmc
push
push
call
mov
shl
or
inc
cld
mov
push
test
cmp
fisttp
xor
scas
mov
pop
and
or
pop
mov
shl
imul
(bad)
inc
jecxz
int3
push
rcl
jecxz
pop
popa
mov
push
fild
cld
pop
mov
fs
repnz
outs
sar
xadd
push
xchg
ins
push
es
xchg
icebp
dec
add
jo
je
loope
add
aam
push
mov
fisttp
in
movs
lods
or
dec
mov
loope
icebp
and
(bad)
out
(bad)
jns
fistp
sbb
sar
push
fsubr
dec
inc
(bad)
js
inc
std
movs
jle
and
xor
xlat
add
js
std
inc
push
sbb
sahf
lods
sub
daa
jp
inc
(bad)
out
inc
xchg
mov
ss
shr
xchg
jne
inc
das
sub
bnd
dec
das
out
push
gs
sbb
push
mov
in
mov
lods
cmc
sub
mov
stc
enter
pop
ins
cmp
(bad)
lahf
xor
mov
push
cld
xchg
mov
xor
cmp
inc
mov
into
repz
arpl
(bad)
repz
sub
scas
test
push
push
fwait
push
sbb
fs
xchg
enter
lock
inc
movs
mov
shl
xchg
sub
mov
pop
dec
sub
xlat
fs
mov
icebp
repz
push
shr
jb
jmp
aas
ins
sbb
sub
mov
pop
sub
scas
fmul
cli
mov
sahf
cld
pop
cmps
push
dec
sub
or
lahf
mov
test
adc
cmp
sub
push
retf
in
inc
jmp
mov
adc
dec
cwde
(bad)
pop
es
mov
xor
cmps
scas
cmc
ja
cli
into
sub
and
and
imul
sbb
pop
ins
mov
mov
push
(bad)
cmp
in
rcl
lahf
xchg
xchg
shl
cmp
jb
fcom
call
xchg
(bad)
jp
inc
pop
cld
xchg
jnp
clc
push
lahf
fisttp
push
pop
mov
imul
shr
cdq
lds
add
sub
pop
inc
stos
ret
and
popf
cmp
push
mov
scas
jg
in
stos
imul
fsubrp
add
mov
test
mov
scas
mov
push
mov
(bad)
mov
repz
xor
add
icebp
pop
jae
xor
adc
inc
(bad)
cli
lds
inc
retf
xor
jmp
sub
cld
out
cmp
shl
ret
ins
and
mov
xchg
imul
mov
nop
in
icebp
mov
fstp
dec
mov
rol
into
stos
aad
cmp
and
mov
jl
mov
add
inc
mov
sub
loop
adc
push
pop
jns
enter
jl
jg
dec
or
stc
or
cmp
cdq
jle
addr16
cmc
sar
xchg
mov
mov
pop
out
xor
xchg
mov
or
push
adc
shl
push
loop
mov
stos
jae
sar
cmc
cmp
cld
and
dec
in
test
fimul
xchg
idiv
xor
cdq
stos
pop
retf
lock
addr16
mov
push
test
and
fmul
cmps
in
retf
xor
push
xchg
fld
push
inc
jmp
pop
pop
and
jns
mov
(bad)
add
nop
mov
push
shl
fisub
leave
xchg
mov
loope
jne
mov
cmp
aaa
jb
mov
(bad)
xor
xor
xchg
(bad)
icebp
mov
dec
mov
adc
inc
sub
dec
push
xchg
clc
(bad)
cmp
mov
popa
pop
push
mov
jl
or
sbb
ja
push
movs
cld
rol
ins
push
add
inc
xchg
push
mov
cmps
fisub
and
(bad)
int
scas
pop
jnp
lahf
and
jmp
mov
mov
pop
mov
je
jge
push
fdivr
addr16
mov
jbe
push
and
movs
icebp
cmp
and
push
add
out
mov
ins
and
push
push
push
stos
xchg
shr
hlt
dec
out
jbe
in
adc
cmp
int
sar
mov
adc
loope
rol
je
out
dec
xchg
(bad)
mov
jecxz
in
cli
xchg
and
push
jmp
pop
loop
fld
mov
mov
dec
andps
xor
pop
push
jmp
push
gs
(bad)
mov
dec
dec
sub
arpl
xchg
push
and
push
push
pusha
inc
lea
mov
jp
jb
pop
fnstsw
arpl
push
fcomp
xchg
sahf
je
push
mov
in
cmp
cmc
push
jge
jns
scas
call
mul
aas
and
mov
das
leave
outs
in
in
jmp
int
je
repz
frstpm(287
lea
fcomp
or
mov
or
pop
sahf
xlat
pop
retf
mov
push
cmp
mov
cmp
push
dec
mov
xor
cmps
repz
pusha
iret
pop
bound
push
inc
into
inc
shr
js
jp
lock
or
cmp
fcomp
jmp
jle
daa
popa
imul
and
push
jno
xor
lds
in
pop
adc
(bad)
mov
inc
mov
lds
push
stos
xchg
mov
and
jg
sub
loop
push
mov
popa
cld
mov
xchg
inc
repz
push
mov
ret
and
ins
push
sub
aaa
dec
ret
call
add
push
retf
jp
stos
push
retf
out
push
ds
xchg
xor
popa
inc
and
loope
imul
pop
jb
leave
sbb
dec
and
xchg
mov
push
lock
mov
pop
loop
push
push
ret
cmp
mov
xor
cld
pop
mov
dec
daa
adc
sub
sbb
call
loop
push
fistp
repnz
dec
pop
or
and
ret
movs
(bad)
ss
daa
adc
daa
dec
add
(bad)
pop
movs
pushf
cmps
icebp
xor
ins
das
das
in
xchg
mov
or
adc
add
cs
or
test
(bad)
shr
jo
repz
aaa
sahf
pop
fld
cwde
arpl
rcl
inc
mov
mov
dec
ins
ins
cmp
mov
int3
enter
movs
xchg
cmp
ja
loop
sbb
jle
inc
push
outs
pop
jbe
inc
pop
jge
shl
(bad)
lds
jae
into
stos
jmp
add
popa
mov
in
std
mov
dec
sub
cmp
cmc
push
dec
stc
push
xchg
lods
hlt
pop
bound
cli
and
test
xor
dec
push
push
test
fdivr
(bad)
sub
and
push
pusha
int3
sub
pop
adc
lea
mov
ds
in
adc
iret
xchg
jbe
repz
rcr
ins
test
sub
out
push
mov
jmp
in
sar
jno
lds
mov
lahf
xor
dec
leave
pop
(bad)
hlt
stos
je
repnz
sbb
push
(bad)
push
mov
addr16
ja
mov
ss
mov
sub
push
dec
push
xor
or
ret
mov
pushf
sub
repz
mov
ss
add
sbb
or
fwait
jle
pushf
cmp
ror
pop
sub
fild
cmp
stos
xchg
bound
sbb
repnz
inc
and
shr
or
sbb
jp
inc
(bad)
sti
pop
sbb
xor
std
test
aam
lock
adc
(bad)
stos
cmps
dec
outs
mov
in
cli
ja
or
addr16
mov
sbb
mov
out
adc
sbb
and
imul
fcmovnbe
mov
sbb
rol
mov
out
popa
dec
push
xor
out
add
out
inc
arpl
(bad)
add
clc
lahf
je
or
sub
stos
sub
fisttp
pop
ja
push
out
arpl
enter
rcr
popf
mov
xor
enter
jg
outs
cwde
cmp
push
mov
adc
gs
mov
or
xor
pop
(bad)
loopne
push
movhps
stc
xor
or
mov
adc
call
pusha
jae
add
mov
daa
jmp
cmp
xchg
pusha
(bad)
sub
jns
cmc
cmp
cmps
loopne
(bad)
cmps
nop
pop
add
cmp
repnz
adc
sub
ins
std
aam
loope
jl
xor
(bad)
icebp
pop
jbe
or
mov
popf
inc
cs
stos
sar
add
mov
jge
(bad)
jg
jne
push
ins
loop
sbb
pop
outs
add
loope
xor
cli
nop
ss
jno
sub
ret
ss
arpl
add
cmc
or
js
sti
adc
dec
sti
sub
out
cmc
movs
push
xor
scas
out
pop
in
lods
es
test
mov
pop
mov
sbb
add
xchg
rol
xor
cmp
mov
iret
shl
cmp
cmps
fs
in
adc
nop
jb
lea
lea
pop
inc
pop
inc
xchg
mov
and
hlt
pop
(bad)
mov
into
dec
sbb
xchg
fcmovbe
mov
jb
loope
clc
lods
xor
fs
xchg
lea
push
inc
and
frstor
mov
(bad)
sbb
pop
fbld
push
je
ins
and
js
fs
sub
jo
jecxz
or
add
push
inc
add
(bad)
mov
cmps
mov
xchg
stc
(bad)
push
pushf
xchg
xchg
pushf
repz
or
mov
ins
aaa
jl
stc
fisub
in
or
lods
mov
int3
dec
push
pop
push
and
retf
push
sbb
pop
jmp
fdiv
in
inc
sub
inc
mov
dec
xor
push
adc
mov
adc
or
cld
into
es
jb
cmp
scas
jb
adc
ss
mov
fisub
push
dec
aad
adc
sub
and
movs
aad
icebp
mov
pop
jae
lods
clc
outs
lds
addr16
popf
call
stos
sbb
lea
mov
cmp
ins
inc
repz
cmp
(bad)
cmp
jbe
enter
es
cmps
bound
icebp
jb
pop
loope
xor
std
sub
sub
arpl
inc
cwde
icebp
inc
jae
not
iret
add
add
rol
mov
(bad)
out
out
sub
pop
lea
cdq
pop
push
fs
test
push
stc
or
jns
jg
add
inc
fs
hlt
das
cdq
imul
pop
push
or
aad
repnz
xchg
nop
sub
or
in
scas
mov
ret
or
sbb
mov
daa
loopne
push
pop
xor
jmp
add
sbb
not
sub
jg
in
sbb
adc
sbb
loop
add
aad
inc
cmp
into
ss
add
call
mul
inc
adc
add
mov
xchg
add
mov
jle
icebp
add
lea
fild
push
jae
and
mov
mov
ret
std
test
mov
sbb
imul
repz
push
retf
jmp
pminub
inc
add
mov
inc
push
xchg
or
and
mov
adc
mov
lds
shl
pop
pop
xor
sbb
in
jle
ret
jae
scas
sti
mov
jo
pusha
jl
adc
ret
std
pop
aam
add
scas
rol
fisttp
out
in
pop
mov
sub
mov
xor
pop
sar
cmp
(bad)
sti
mov
jbe
mov
nop
call
inc
cmc
mov
dec
imul
out
jge
pop
(bad)
mov
inc
dec
or
pop
push
popa
mov
and
or
loope
(bad)
outs
cmp
dec
push
mov
xchg
sahf
rcl
sahf
inc
into
adc
add
sub
add
jo
ds
mov
xchg
jecxz
sbb
mov
enter
push
pusha
sahf
jno
pusha
xlat
or
in
pop
inc
dec
sbb
adc
fistp
idiv
adc
push
out
mov
in
in
mov
sbb
dec
ins
std
enter
xor
push
and
push
(bad)
pop
xor
retf
jp
pusha
mov
scas
shl
cmps
das
mov
ss
or
out
adc
jbe
(bad)
aas
(bad)
stos
cmp
dec
xor
cmps
fisubr
nop
in
jnp
jmp
dec
retf
scas
push
jne
out
fs
sbb
dec
inc
in
ret
(bad)
and
scas
jb
and
(bad)
mov
jg
imul
and
retf
lahf
jecxz
sar
xor
test
test
sub
pusha
and
lea
dec
mov
imul
popf
jge
or
js
xchg
test
fwait
fwait
jmp
ins
mov
ret
sub
or
jge
push
sahf
xor
sub
add
loope
scas
test
cmp
xchg
xlat
push
and
add
cmp
or
arpl
add
push
ret
cmp
je
dec
(bad)
cmc
xchg
adc
and
push
shl
ins
aad
fld
push
mov
xor
push
hlt
pusha
stos
inc
pop
jbe
jle
xor
aam
iret
ins
and
cs
adc
cld
mov
inc
icebp
in
repnz
xchg
lahf
and
fwait
sbb
mov
adc
mov
lods
mov
push
sbb
inc
stc
jae
and
(bad)
daa
xchg
push
cs
arpl
push
sbb
xchg
and
push
sar
mov
push
push
fimul
ja
pop
rcl
ds
cwde
inc
fadd
cmp
repz
mov
xchg
jne
popf
push
inc
mov
mov
adc
sub
xchg
dec
mov
clc
xchg
xchg
repnz
inc
jno
xor
(bad)
aam
scas
pop
repz
sti
(bad)
sar
daa
aam
adc
stos
mov
ja
(bad)
adc
dec
push
retf
ss
leave
cmp
repnz
inc
mov
out
mov
cmp
sbb
leave
sub
push
aam
test
rol
sbb
stos
push
sub
pop
fwait
sbb
jno
dec
test
adc
std
inc
jmp
inc
xor
ja
jne
dec
dec
push
ret
push
mov
and
out
(bad)
push
mov
ss
mov
sahf
retf
push
adc
shr
js
xchg
paddsb
sub
cmp
pop
sub
test
pop
fstp
xchg
sub
cmp
mov
jbe
cwde
stos
test
and
jne
push
xor
repnz
mov
pop
retf
rol
jl
add
scas
mov
mov
rol
bound
icebp
lods
adc
cmps
push
aaa
mov
jbe
mov
ins
(bad)
sbb
int
push
aaa
fnsave
retf
adc
pop
gs
stc
pop
cmp
adc
out
loopne
push
stos
adc
(bad)
xlat
sti
adc
js
adc
pop
call
fwait
js
mov
jg
add
outs
fist
sub
xor
(bad)
dec
dec
mov
call
idiv
push
(bad)
aam
stos
mov
in
xchg
pop
shl
movs
add
or
xchg
stos
dec
or
add
mov
add
loope
lea
xor
retf
cld
xchg
mov
fstp
imul
push
sbb
xchg
rol
and
mov
outs
pop
je
mov
pop
fstp
mov
mov
shr
xchg
pop
fld
cmps
(bad)
jp
in
imul
dec
mov
mov
fcomp
std
add
xchg
(bad)
ret
inc
cs
dec
push
dec
fwait
jbe
inc
jne
jecxz
js
gs
xor
fsubr
(bad)
out
mov
and
and
cmp
cmc
(bad)
jle
sub
test
iret
dec
mov
in
ins
in
scas
lds
mov
daa
sbb
mov
mov
push
ja
imul
repnz
aad
inc
jno
cld
(bad)
cmc
or
clc
mov
stc
cmp
or
retf
lods
pop
call
push
jle
aad
ret
cmp
jmp
or
ds
xchg
fiadd
cwde
xor
pop
dec
push
xor
fstp
mov
ins
adc
loope
mov
jmp
cwde
fadd
cmp
pop
fxch
(bad)
stos
dec
push
loopne
fimul
shl
ds
add
mov
xor
jnp
xor
les
and
add
lods
jnp
into
int3
enter
cli
bound
ret
push
mov
lahf
push
sub
push
jmp
jl
xlat
sti
out
mov
pop
pop
jne
jle
push
jmp
sbb
sub
jns
(bad)
(bad)
cmp
mov
jle
jmp
fisttp
mov
lock
xor
cmp
int3
(bad)
cmps
mov
in
ins
adc
mov
sub
out
pop
sub
xor
call
dec
iret
ret
mov
dec
rol
adc
sbb
xor
sti
mov
mov
xchg
mov
lahf
out
jno
sbb
mov
dec
rol
jp
addr16
jg
and
cmps
pop
(bad)
js
(bad)
aaa
popf
xor
push
ret
lock
test
mov
and
sbb
jmp
pop
mov
pop
lods
into
pop
fmul
or
leave
test
ins
mov
stos
xlat
in
pushf
xchg
or
aaa
aaa
addr16
cmp
push
je
les
and
addr16
sbb
ret
(bad)
(bad)
nop
cmp
xor
fiadd
pop
out
popf
cld
imul
push
cmp
add
in
adc
aas
and
cmp
jae
cmp
sbb
pop
mov
loop
je
inc
inc
lods
jbe
adc
leave
mov
jp
cdq
xor
aad
ret
out
jecxz
cmps
cmp
mov
cmp
push
push
cmps
jnp
jmp
adc
scas
(bad)
xor
and
es
stc
mov
das
test
into
ins
adc
das
xchg
jne
push
dec
icebp
ins
or
out
jp
dec
adc
addr16
pop
pop
xchg
ss
jmp
lds
add
sub
pop
(bad)
arpl
adc
pusha
aaa
jge
push
enter
dec
cmp
mov
add
sbb
xor
pop
jbe
cmp
in
ret
std
(bad)
inc
sahf
jmp
mov
push
pushf
enter
push
loope
test
loopne
push
aaa
mov
pop
jl
xchg
or
and
fcmovne
sbb
adc
pop
jg
int3
adc
pop
adc
jmp
fwait
bound
push
and
cmc
sbb
cmp
les
push
adc
dec
push
sub
cmp
(bad)
xor
xor
daa
push
stos
call
stos
out
and
adc
cmc
inc
push
mov
into
add
sub
jle
mov
pushf
inc
movs
lock
sbb
cli
cmp
adc
leave
inc
cmp
ret
mov
test
mov
add
in
cmp
cmps
nop
sbb
push
jecxz
push
xchg
pop
xor
(bad)
int
addr16
adc
pop
cmp
push
dec
jmp
adc
inc
pop
adc
sti
dec
pop
mov
xchg
mov
adc
fisub
xor
xchg
stc
push
push
test
or
lods
xor
pop
sbb
cs
bound
sbb
ret
or
ret
push
mov
pushf
sbb
(bad)
pushf
jmp
push
movsx
sub
cmps
jbe
sar
sbb
fisub
mov
sbb
cmps
push
clc
aaa
call
out
pop
inc
xchg
jmp
add
scas
mov
adc
movs
scas
outs
movs
dec
ror
adc
out
push
pop
cs
dec
push
es
adc
(bad)
(bad)
jecxz
add
lods
cmp
pop
mov
ss
jmp
fld
int
fld
int
mov
arpl
loop
push
ja
cdq
sbb
or
not
hlt
adc
adc
xchg
sbb
dec
sub
push
mov
(bad)
loopne
in
(bad)
aam
mov
aam
push
fwait
sbb
xchg
loopne
imul
ja
int
mov
and
in
shl
jmp
and
pop
jl
or
inc
(bad)
hlt
dec
stos
ja
outs
push
mov
scas
out
in
daa
mov
sbb
adc
push
cmp
rcl
xor
pop
mov
or
leave
aam
adc
cwde
popf
sub
popf
push
mov
xor
ja
xor
fbstp
cmps
adc
dec
push
push
cmp
sub
dec
pop
cmp
cli
push
add
adc
push
sbb
retf
xchg
das
push
iret
cmps
cmp
out
ret
push
cli
in
dec
mov
adc
scas
pop
jg
cli
and
add
jmp
cld
in
enter
sbb
mov
ret
scas
outs
jl
fldcw
sbb
sub
inc
inc
lods
test
cmp
je
in
xchg
call
bound
daa
fisub
push
and
pop
imul
popf
stc
push
(bad)
lds
arpl
and
sub
adc
jmp
add
fnsave
loope
push
fisubr
mov
jmp
fucomi
fs
mov
jns
sbb
addr16
push
ficom
lahf
sbb
inc
dec
adc
jno
add
pop
xor
std
adc
stos
sbb
xchg
adc
xchg
std
cmp
(bad)
aas
cwde
cld
adc
stos
loop
sub
mov
and
call
into
cmp
xchg
cmp
mov
leave
inc
inc
lds
repz
mov
jmp
pop
sbb
push
pop
dec
push
add
jg
sar
and
mov
repz
ja
frstor
imul
imul
xchg
pop
jg
xchg
clc
out
sbb
retf
and
inc
mov
and
mov
add
dec
pop
xor
add
inc
imul
jno
xchg
repnz
nop
sti
jb
shl
add
push
and
imul
test
sbb
ins
cmps
sti
cs
data16
addr16
adc
dec
mov
sub
mov
dec
movs
mov
ffree
mov
adc
push
adc
xchg
jl
dec
call
push
or
ret
aam
not
push
mov
inc
push
inc
push
sbb
(bad)
imul
add
mov
int3
cwde
out
xchg
retf
jp
pop
movs
xchg
nop
test
popf
xchg
imul
sbb
into
jp
sub
dec
mov
jge
dec
sbb
inc
dec
and
ins
xchg
sbb
jb
xor
gs
push
mov
jmp
mul
(bad)
arpl
inc
adc
pop
inc
lods
mov
or
or
das
dec
rol
leave
outs
dec
into
jbe
jno
js
pusha
arpl
xchg
jp
outs
jge
out
in
(bad)
push
enter
inc
int
repnz
mov
ds
test
cli
jb
adc
dec
in
sub
push
mov
or
movs
mov
cld
dec
mov
test
ret
ret
inc
pop
dec
pop
add
sbb
movs
add
imul
pop
mov
jo
fmul
sub
gs
shl
inc
adc
fidiv
lea
pop
push
loopne
outs
hlt
sub
(bad)
mov
mov
shl
out
mov
cmc
pop
add
scas
pop
xlat
enter
or
pop
adc
scas
jb
addr16
mov
stc
int
push
rcr
ret
pop
add
xlat
mov
fcomp
sbb
mov
and
adc
pusha
(bad)
nop
inc
retf
mov
call
or
enter
fisubr
(bad)
(bad)
xchg
jb
adc
or
or
inc
inc
pop
jbe
cmp
call
(bad)
pop
retf
call
lods
pop
ficom
(bad)
push
xor
ja
xor
xchg
xlat
mov
dec
fsubrp
inc
arpl
add
sub
add
into
pop
xchg
rol
fwait
neg
ins
fs
pop
shr
xor
ins
stos
mov
outs
pop
(bad)
mov
pushf
mov
xchg
popa
cmp
stc
loop
mov
repz
add
add
dec
and
mov
pop
jne
push
lahf
pop
push
mov
(bad)
xor
inc
shl
jmp
and
nop
pop
je
xchg
dec
pop
imul
mov
cmp
loopne
pop
dec
and
pop
jbe
inc
icebp
retf
sbb
dec
mov
jno
iret
xor
jnp
sar
xor
stos
retf
and
add
sub
jae
mov
popa
cmp
ficomp
jmp
and
jo
lods
xchg
xchg
xor
mov
cmps
push
push
mov
jecxz
(bad)
lods
sti
icebp
sbb
vpandn
popf
je
sbb
xor
mov
push
adc
pop
(bad)
mov
fwait
int3
add
push
cld
dec
adc
call
pop
adc
sar
cmp
call
mov
mov
mov
cmp
adc
cmp
inc
sub
and
nop
inc
and
sub
sub
mov
call
ins
jne
xchg
jl
scas
xor
and
cpuid
(bad)
in
push
mov
fistp
repz
idiv
jge
ja
adc
outs
in
shl
(bad)
jp
mov
jmp
or
jo
ja
inc
stos
mov
clc
aaa
mov
ja
in
nop
mov
je
pop
shl
mov
mov
hlt
inc
sbb
jae
xchg
inc
js
(bad)
ins
xchg
imul
xchg
movs
adc
dec
adc
loopne
fcom
gs
jmp
jb
inc
jmp
ret
repnz
ret
cmp
adc
iret
int
add
or
nop
xlat
movs
ror
sbb
cmp
in
jp
mov
js
and
scas
jecxz
mov
(bad)
and
sub
cs
pop
hlt
rol
adc
jmp
std
jmp
ret
cmps
ret
xchg
leave
test
bound
mov
and
cdq
cmp
cmp
callw
mov
jne
imul
ret
cmp
xor
mov
push
into
add
push
or
aaa
scas
cmp
xor
jo
inc
or
pop
in
arpl
add
(bad)
sbb
add
push
pop
push
imul
inc
addr16
pop
repnz
sub
mov
retf
xchg
(bad)
inc
cmp
ins
mov
shl
push
xchg
fs
aas
movs
or
ffreep
cmp
repz
pusha
fst
and
stc
pushf
stc
dec
lods
adc
mov
cmps
inc
and
adc
test
mov
lahf
retf
retf
mov
jne
outs
daa
cs
jecxz
fwait
xchg
clc
retf
ror
ret
sub
pop
loopne
mov
mov
mov
pop
aaa
scas
(bad)
(bad)
or
icebp
or
iret
xor
iret
or
xor
aam
add
mov
cmp
xchg
mov
out
lods
in
aaa
mov
push
sbb
sbb
fldcw
repz
sub
mov
and
or
pop
nop
jno
mov
pop
lods
rcl
mov
fdivrp
push
mov
rol
xor
adc
mov
js
inc
add
xor
pop
and
dec
mov
shl
imul
push
clc
cmp
sahf
shl
fs
or
jbe
bound
loop
cmp
mov
call
repnz
xchg
imul
test
das
outs
dec
scas
add
add
lods
data16
test
jae
push
cs
dec
jno
in
imul
cdq
bound
ins
or
out
push
push
iret
jle
fsubr
jg
adc
sub
push
mov
xchg
repz
loop
cmp
cmp
dec
adc
pop
popf
xlat
cwde
hlt
mov
jecxz
out
or
or
inc
lahf
stos
jmp
push
dec
xor
jl
dec
test
jae
mov
je
push
movhps
mov
in
call
push
jb
adc
adc
xor
inc
sar
fwait
mov
mov
cmp
sbb
movs
out
retf
jno
dec
stos
ja
cld
mov
mov
mov
sub
inc
pushf
adc
jp
jecxz
(bad)
fst
sar
imul
out
adc
dec
dec
enter
xor
shr
xor
add
or
dec
repnz
out
popf
adc
jnp
bound
ds
adc
popf
inc
add
cmp
int
push
movs
pop
push
and
test
sub
mov
loopne
mov
(bad)
inc
into
test
and
jbe
push
dec
scas
out
add
(bad)
mov
call
fisttp
ins
add
arpl
mov
push
js
xchg
xchg
pusha
mov
out
outs
shr
jle
mov
lahf
xchg
pop
inc
cmp
xor
sar
out
pop
ficomp
arpl
(bad)
cmps
mov
es
loopne
jle
(bad)
dec
and
sub
and
xor
(bad)
push
xor
(bad)
lea
mov
cmp
call
mov
out
fsub
dec
push
popf
outs
pop
lahf
sbb
enter
and
xchg
jecxz
xor
pop
or
call
cmp
xchg
call
mov
add
test
ins
mov
out
lock
and
in
jmp
jae
xchg
(bad)
add
fucomi
mov
nop
sbb
xor
out
sub
adc
ror
les
push
inc
rcl
fmul
inc
fnstsw
mov
jecxz
das
ret
push
or
stc
scas
mov
pop
int3
loopne
daa
int3
pop
add
mov
push
xor
retf
xchg
ror
fs
pop
add
or
nop
jb
cmp
aad
movs
enter
daa
repz
push
sbb
fwait
pop
iret
cmp
xchg
push
pop
mov
int
(bad)
dec
aad
dec
std
stos
sub
sbb
nop
mov
jmp
mov
clc
mov
lahf
or
add
and
cmps
cwde
mov
adc
mov
push
mov
test
adc
cmps
iret
cli
cmp
not
hlt
retf
shl
cmp
push
sub
test
in
push
xor
aam
and
into
add
mov
xchg
or
pop
fadd
cs
inc
add
or
movs
add
adc
mov
mov
scas
call
test
xchg
aas
adc
icebp
ror
sub
out
sbb
xor
mov
iret
xchg
mov
cmp
adc
rol
pop
nop
pop
adc
pusha
push
adc
push
inc
test
mov
stc
jmp
out
xor
test
scas
mov
imul
pusha
test
mov
loopne
aad
fist
mov
inc
jbe
cmp
adc
inc
inc
fs
(bad)
xlat
icebp
lahf
sbb
cld
test
mov
add
push
cmp
(bad)
lea
xchg
push
lds
xchg
stos
aas
mov
rcl
movs
fidivr
leave
jl
push
shl
shl
or
xchg
std
nop
bound
push
mov
(bad)
xchg
fstp
(bad)
jmp
or
stos
iret
cmp
mov
js
out
or
pop
iret
inc
scas
shl
push
out
jnp
and
or
imul
sbb
pop
mov
add
push
sbb
inc
add
ins
retf
jno
push
aaa
fwait
add
(bad)
scas
bound
or
outs
mov
loop
fwait
pop
dec
sbb
jo
mov
(bad)
fs
out
xchg
sub
aas
std
(bad)
bound
add
sub
dec
add
test
into
stc
or
popf
lds
dec
ret
adc
add
into
(bad)
mov
and
xchg
int
pusha
iret
dec
adc
jae
mov
scas
lea
mov
ins
push
mov
std
jmp
jmp
and
and
jle
jne
outs
mov
mov
repz
icebp
imul
mov
mov
push
jmp
pop
jne
(bad)
sub
loop
in
push
sar
popa
into
call
inc
adc
pushf
add
fcmovu
(bad)
addr16
ret
fcomp
or
jmp
addr16
fisttp
in
adc
mov
or
fcomi
mov
jne
fcom
xchg
setg
lock
and
xchg
push
pop
(bad)
cli
dec
popa
mov
popf
sub
cmp
test
(bad)
hlt
stos
mov
movs
dec
push
jmp
jno
jno
dec
sub
mov
sbb
and
pop
inc
cs
jg
jp
jg
cmp
sbb
cmp
inc
imul
shl
jl
xchg
push
pop
jle
stos
enter
(bad)
push
ds
push
fstp
int3
shl
iret
add
imul
add
aam
pop
mov
stos
loope
cld
lea
mov
push
pop
sbb
ins
fisub
out
push
sti
mov
rcr
push
leave
mov
sbb
push
jne
ret
mov
and
mov
dec
inc
mov
pop
cmp
movs
sub
mov
clc
mov
xchg
addr16
xchg
add
xor
jo
fild
fwait
push
cdq
jl
out
xchg
jecxz
or
fcom
ja
mov
lahf
retf
ds
lods
add
jmp
fs
xor
push
cmp
ins
or
frstor
sbb
mov
dec
addr16
xchg
mov
xchg
imul
xor
mov
jnp
jmp
js
data16
jns
ret
push
pop
arpl
add
dec
sbb
lods
push
mov
daa
xchg
cs
lea
mov
xchg
xchg
mov
push
repnz
sbb
cmp
sub
pop
jo
fcom
push
fidiv
(bad)
push
add
hlt
push
jbe
mov
mov
ja
mov
xchg
mov
push
rcl
or
jae
mov
test
mov
add
mov
inc
inc
push
add
pop
adc
fstp
ss
jne
idiv
(bad)
fidivr
jnp
jbe
stos
out
jmp
inc
xchg
and
in
stos
jle
call
(bad)
repz
fwait
or
mov
fisttp
(bad)
(bad)
loop
inc
and
lock
cli
jg
jge
pop
push
cdq
sub
in
mov
pop
pop
jecxz
stos
push
loope
(bad)
push
cmp
xor
sub
and
gs
add
fsubp
add
sbb
mov
fld
add
lods
lods
add
sbb
lds
jl
in
add
jle
ja
loopne
push
ret
test
rol
ret
jno
retf
in
test
jae
sub
cmps
sub
xchg
retf
adc
mov
xor
call
(bad)
movs
adc
push
and
cdq
jb
out
jmp
dec
push
repz
cmp
mov
adc
xor
call
inc
xchg
daa
(bad)
pusha
xchg
pop
and
inc
add
call
adc
mov
repnz
mov
jecxz
cmps
clc
jnp
pop
xor
add
call
mov
push
in
in
dec
into
inc
mov
nop
and
in
(bad)
mov
push
xor
in
or
xchg
out
ins
aaa
sar
rol
fs
stc
test
enter
mov
inc
jg
and
mov
jno
pop
sbb
(bad)
shl
ja
adc
mov
iret
mov
ror
xchg
imul
xor
aas
not
out
push
mov
ja
dec
dec
cmp
push
and
sbb
fistp
or
stos
out
push
(bad)
sbb
or
hlt
pop
push
sbb
gs
mov
mov
(bad)
pop
in
xlat
or
hlt
xchg
imul
cwde
movs
dec
push
pop
retf
or
jp
xchg
iret
pop
cmps
pop
jno
imul
pushf
addr16
mov
stos
stos
fs
stos
fbld
push
stos
jge
jno
jg
cwde
movs
push
iret
hlt
push
sti
xchg
dec
(bad)
(bad)
add
or
sub
sbb
out
retf
xchg
adc
xchg
adc
cli
inc
and
and
sahf
push
inc
ds
mov
sub
cld
pop
out
sub
cmc
jecxz
mov
adc
adc
xchg
mov
outs
push
push
retf
addr16
dec
retf
add
ins
arpl
dec
push
cmc
jge
pop
push
mov
xchg
jle
mov
mov
push
loope
sub
dec
fcmovnb
icebp
fist
pop
xor
or
mov
push
fwait
gs
clc
mov
push
inc
sub
xor
out
cmp
sub
xchg
ror
push
sub
fistp
cwde
mov
sahf
lahf
xor
add
and
inc
repz
data16
or
mov
push
mov
neg
add
cmps
cmp
or
sbb
and
sub
and
jle
out
mov
xor
add
and
and
sar
into
dec
jbe
adc
mov
jecxz
jb
sbb
repz
cdq
neg
lea
push
(bad)
jl
popa
xchg
mov
add
les
dec
xchg
iret
pop
lock
aas
mov
bound
dec
adc
mov
mov
(bad)
cmps
imul
js
or
jns
popf
mov
mov
push
mov
sti
js
fsubr
mov
push
add
pop
fcmovne
pop
hlt
inc
inc
ins
outs
dec
xchg
and
dec
lock
mov
mov
xchg
mov
pop
pop
xor
xor
mov
push
scas
adc
mov
jmp
xor
repnz
push
jg
(bad)
push
cld
add
xchg
mov
das
(bad)
arpl
je
pop
or
(bad)
sbb
dec
rcl
je
cmc
pop
jae
enter
xchg
push
inc
inc
jo
ins
imul
vhaddps
and
sub
jmp
jl
iret
pop
test
scas
lahf
add
cmp
ss
dec
push
fchs
jnp
dec
push
hlt
call
xchg
sbb
std
dec
sub
in
retf
aam
mov
shl
xchg
dec
sti
nop
xchg
lock
(bad)
repnz
sub
mov
push
or
jne
jge
mov
or
mov
fwait
cmp
pop
xor
(bad)
clc
clc
xor
(bad)
or
fmul
aad
(bad)
xor
push
stos
stos
adc
cmp
test
or
jg
int
pop
add
loop
iret
mov
or
(bad)
or
sub
gs
push
test
jnp
jnp
pop
cmps
fdivp
sub
jecxz
out
aad
in
test
fwait
das
call
mov
call
lods
jae
or
(bad)
loop
je
xor
movs
data16
mov
(bad)
sbb
xchg
pop
sub
or
xor
loop
test
in
add
gs
cmp
jg
jbe
add
cmp
daa
mov
cmp
bound
aas
out
cwde
popa
sahf
ds
repz
repnz
push
int3
daa
fild
push
adc
fisubr
mov
mul
in
fxam
sub
inc
jnp
outs
stos
fstp
lods
clc
addr16
add
xor
jmp
mov
xchg
aam
fistp
mov
mov
ds
mov
fsub
dec
in
loopne
adc
push
push
ins
add
jo
add
pop
xchg
push
jnp
and
push
pop
loopne
ins
out
outs
xchg
retf
movs
ins
add
jns
shr
loop
sub
cmps
not
scas
cwde
mov
xchg
out
sbb
pop
inc
(bad)
aaa
cmps
ja
dec
mov
cmp
les
popf
xor
into
push
pusha
arpl
mov
sbb
icebp
fwait
push
loopne
dec
dec
sbb
(bad)
call
sbb
sub
add
mov
ss
int
mov
xlat
and
xlat
mov
push
cmp
ret
or
mov
ins
mov
cmp
pop
and
out
mov
inc
sbb
or
push
pop
push
sub
aam
mov
imul
pop
inc
(bad)
ins
addr16
repnz
shl
ins
stos
pop
pusha
add
arpl
sub
cs
int
loop
jne
or
rcl
xchg
dec
adc
frstor
xor
ret
jmp
cmc
(bad)
(bad)
pop
fldenv
cmps
sub
xor
sub
xchg
dec
(bad)
mov
xchg
std
and
js
fmul
or
push
mov
call
fld
cli
cmp
lahf
cmps
gs
sahf
iret
sar
or
cmp
xchg
adc
push
sbb
sub
ret
call
ror
push
cs
cmp
in
push
xor
sbb
test
stos
mov
mov
jno
xchg
cmp
mov
xor
retf
and
scas
push
jmp
in
repnz
jmp
outs
inc
and
ret
mov
cli
add
jg
add
pop
push
mov
sub
movs
arpl
repz
mov
repnz
test
sbb
xor
xchg
hlt
mov
pop
push
adc
mov
inc
les
repnz
xchg
aas
fs
cmps
mov
pop
imul
push
dec
test
in
or
test
fild
cli
(bad)
jp
(bad)
dec
adc
enter
xlat
lock
(bad)
(bad)
stos
xor
movs
push
sahf
pop
call
in
cmp
push
in
mov
push
data16
mov
xchg
push
add
adc
cmp
int3
push
jmp
mov
(bad)
fmul
inc
and
into
cmp
arpl
jns
cs
inc
clc
jns
sbb
dec
vmread
pop
ror
push
sbb
xchg
test
and
xor
movs
mov
cs
push
mov
dec
data16
jg
mov
inc
mov
not
push
pop
mov
add
lds
inc
outs
mov
mov
jp
hlt
push
popaw
cmc
call
xchg
push
add
mov
outs
jnp
mov
mov
(bad)
int
pop
arpl
push
retf
add
iret
lods
ss
jmp
mov
xor
lahf
aas
mov
(bad)
sti
jno
inc
mov
mov
outs
pop
inc
movs
clc
or
pop
pop
mov
push
inc
xchg
push
push
mov
fbstp
mov
out
in
iret
jne
in
add
mov
int
out
lahf
or
out
cmps
gs
mov
cmp
loope
add
adc
mov
fst
cmp
call
sti
xlat
xchg
fst
ror
mov
mov
dec
lea
inc
and
les
add
(bad)
repnz
mov
cmp
std
fs
jns
sub
(bad)
push
pop
int
sbb
test
or
lea
enter
cmp
sub
xor
in
cdq
add
enter
(bad)
(bad)
icebp
lods
sub
push
pop
cmp
sbb
arpl
fstp
mov
pop
stos
mov
mov
sti
cmp
lahf
in
leave
in
xor
add
and
and
dec
sbb
es
cli
sub
in
cli
pop
adc
and
inc
or
jge
xchg
test
in
inc
shl
jle
into
xchg
push
leave
mov
in
movs
not
ds
pop
xchg
xor
(bad)
fs
add
test
jno
int3
sbb
or
popa
sub
push
inc
sahf
lock
xchg
push
pop
cmc
loop
pop
lods
dec
xchg
into
stos
scas
test
dec
movs
dec
rcl
and
jge
or
(bad)
addr16
mov
mov
pop
(bad)
mov
addr16
cs
out
movs
arpl
out
out
cs
inc
inc
xor
mov
mov
push
loop
(bad)
loopne
repz
mov
jne
inc
ret
test
fs
mov
mov
addr16
dec
inc
(bad)
add
clc
add
inc
outs
inc
sub
xchg
mov
mov
ds
adc
xchg
pop
push
mov
in
mov
jmp
push
dec
jo
jl
inc
cmp
mov
loop
and
mov
cmp
or
push
and
fs
test
lock
daa
jecxz
add
add
mov
jg
nop
xor
scas
mov
adc
cmp
popa
test
push
popa
mov
sub
cmps
cmp
(bad)
clc
mov
cld
out
test
sbb
ins
jmp
add
leave
mov
pop
add
xchg
jle
push
jge
pop
push
lock
adc
sbb
and
and
cld
pop
inc
jg
mov
push
cmp
inc
iret
adc
pop
scas
xor
and
xor
xor
pop
mov
aaa
mov
movs
pop
push
adc
cwde
lds
cmc
pop
clc
adc
lock
and
pop
data16
mov
shl
imul
dec
scas
stos
sub
mov
pop
nop
sub
test
pop
test
pop
xor
ins
sub
jp
push
psrld
sbb
cmp
mov
mov
cmps
arpl
and
inc
sub
pop
test
enter
xchg
xchg
test
(bad)
mov
jecxz
add
add
add
xor
lock
sahf
sbb
sar
movs
sar
fs
dec
in
ror
push
lods
loope
imul
xor
or
xor
stos
rcl
cld
adc
mov
aad
(bad)
ss
js
mov
adc
add
push
or
iret
fadd
in
xchg
in
inc
lds
jp
and
dec
mov
jp
ret
dec
inc
dec
mov
js
adc
cmc
xchg
les
shl
leave
les
jg
xchg
ins
push
loope
push
js
lock
cmp
imul
test
imul
aas
bound
inc
rcr
inc
sub
rol
sub
jmp
stc
push
sbb
out
dec
in
ja
in
lods
pushf
movs
xor
daa
xchg
push
enter
int
xlat
fs
sbb
gs
mov
push
xchg
mov
jbe
(bad)
cld
and
jecxz
(bad)
bswap
cmp
sar
push
stos
daa
shl
mov
push
ret
dec
out
cld
cmp
retf
stos
jecxz
jge
adc
jo
pop
shl
sub
repz
clc
rcl
rol
xchg
sbb
or
fistp
shl
add
jb
cmp
push
and
mov
pop
push
cmc
sahf
jbe
adc
and
sti
xor
mov
xchg
in
push
out
mov
cs
loopne
dec
jle
test
dec
xor
dec
dec
pop
mov
mov
mov
das
xchg
xchg
or
js
rcr
stos
and
test
jno
add
xchg
aad
inc
sub
xchg
mov
pusha
sbb
fistp
add
ds
mov
push
fisubr
cmps
mov
inc
jge
popf
xor
dec
and
jns
fdivr
shl
test
push
les
pushf
mov
push
enter
sbb
mov
out
xlat
add
lea
mov
sbb
es
or
sub
das
icebp
fidivr
push
push
pop
and
in
sbb
mov
scas
jp
int
xchg
repnz
add
push
loopne
jmp
jle
xlat
mov
mov
cmp
push
aam
dec
test
je
jmp
dec
sbb
stos
xchg
fisub
mov
sub
add
jmp
mov
add
test
lods
sbb
js
inc
xor
leave
xor
loopne
sbb
xchg
into
jns
ss
add
cdq
in
adc
retf
and
mov
or
and
punpcklbw
stc
in
imul
xchg
jle
pop
cmp
mov
push
je
cld
sbb
mov
jns
stos
je
ror
push
imul
mov
add
ss
int3
movs
pop
pushf
into
aaa
mov
sub
shl
fwait
jae
fst
out
cmp
outs
cmp
out
stos
or
xchg
out
mov
ins
jb
out
or
mov
sub
gs
xlat
(bad)
jmp
cmp
cmp
push
shl
idiv
pop
push
sub
movs
pop
popa
or
xor
pslld
push
mov
or
push
cdq
dec
ds
cmp
mov
(bad)
fdivr
loopne
cmps
or
movs
in
add
test
mov
and
xor
mov
repnz
cmp
push
shl
or
sbb
pusha
jnp
lods
sti
cdq
add
jge
xlat
mov
adc
mov
adc
(bad)
ss
jnp
ret
or
popa
stos
and
mov
es
inc
mov
inc
xor
push
mov
pop
xchg
pop
dec
(bad)
mov
mov
jae
ins
lahf
adc
loopne
leave
stos
jno
lods
add
push
neg
sbb
jmp
mov
pop
cs
aas
in
cmc
int
ja
inc
arpl
movs
(bad)
stc
jge
movs
jmp
jne
imul
jbe
dec
fcomip
(bad)
jmp
or
add
jo
pop
fidivr
jns
jbe
int3
stos
popa
repnz
ret
sahf
sbb
test
add
pop
sub
outs
cmp
aaa
fld1
or
mov
bound
pop
jl
retf
pop
lea
stc
into
repz
add
or
leave
mov
neg
xchg
lock
imul
enter
in
xchg
mov
mov
fstp
add
ret
repz
cmp
enter
dec
jno
dec
mov
cld
fld
outs
movs
sub
xor
icebp
test
imul
xchg
and
aad
rcr
popa
add
pushf
stos
and
aam
shl
add
mov
push
xor
adc
inc
js
cmp
fisttp
or
jno
jle
push
scas
lods
ss
pop
mov
(bad)
jmp
adc
xchg
cdq
push
pushf
pop
xchg
pop
es
xchg
cld
mov
mov
ds
xlat
inc
mov
cmp
sbb
shr
xlat
test
jo
and
call
adc
outs
retf
mov
push
sub
mov
xlat
sub
or
cwde
fiadd
mov
cwde
out
add
mov
pop
adc
repz
cmp
mov
fsub
scas
push
jg
push
jmp
repnz
lods
jle
ror
xchg
sti
or
sub
cmp
aaa
or
xchg
dec
scas
int
loopne
mov
retf
in
cdq
es
imul
adc
mov
movs
(bad)
jle
push
adc
rcr
fwait
mov
jmp
fs
cmp
loop
mov
pop
add
xor
push
cld
dec
aaa
hlt
xchg
xchg
ins
jl
dec
mov
mov
xchg
mov
mov
fnstenv
shl
mov
pusha
xchg
je
mov
or
bsr
ds
das
retf
xor
sahf
js
outs
xchg
cwde
jbe
mov
sbb
push
inc
and
sbb
pop
or
jmp
xchg
(bad)
pop
outs
xchg
scas
and
in
cdq
ins
or
ret
cmp
sub
lods
add
mov
lods
sahf
mov
sbb
push
mov
ins
mov
xor
iret
push
push
pop
inc
xchg
add
xchg
jnp
mov
fsub
and
fst
and
jmp
enter
push
mov
daa
enter
jmp
inc
cmp
pop
sbb
dec
cmp
int3
in
push
popf
test
(bad)
sti
repz
push
jmp
inc
cmp
push
sub
push
stc
inc
jns
cmp
dec
test
stos
jge
sbb
scas
iret
xchg
mov
jae
pop
pop
mov
in
pop
sbb
pop
fcom
shl
stc
sar
call
rcr
(bad)
dec
push
loop
push
in
sbb
mov
cld
sti
ret
cmp
push
add
add
push
(bad)
jecxz
test
mov
add
std
sub
(bad)
sub
cli
outs
cmp
cmps
inc
movs
fild
cmp
cli
fcomp
cmp
mov
cld
ret
push
pop
mov
dec
frstor
and
inc
out
mov
push
cmps
adc
js
inc
push
mov
cwde
and
ins
sub
cwde
aas
xor
cmp
cwde
call
movs
lods
aam
mov
rcr
fcmovnb
xchg
mov
bound
mov
fist
mov
xor
mov
and
sub
lahf
dec
inc
mov
mov
stc
daa
and
out
xlat
cmp
sub
inc
fidiv
lea
or
enter
pop
xchg
scas
jmp
loopne
retf
mov
retf
add
lods
sbb
ror
dec
and
lods
inc
ja
ror
inc
push
sbb
jbe
sbb
dec
jne
sahf
jnp
test
mov
test
out
lock
or
jno
sub
loopne
ret
pop
pop
mov
xchg
ins
int
scas
popf
imul
ins
rcl
lahf
sub
pop
or
dec
dec
jecxz
clc
fdivrp
add
rol
sti
mov
ret
sti
(bad)
jnp
push
mov
pop
jge
outs
sub
xchg
sbb
sub
jl
xor
xchg
ret
push
xacquire
mov
sar
scas
xchg
sub
inc
movs
(bad)
into
test
test
mov
in
sti
pop
ret
pop
mov
inc
dec
into
inc
cmp
mov
jb
jae
test
dec
lds
sub
dec
repz
push
xor
fst
add
popa
adc
jae
mov
and
aad
mov
fmul
sahf
mov
sbb
pop
jl
in
cmp
mov
sub
push
fisubr
dec
sub
int
xchg
push
mov
mov
jg
xor
mov
stos
dec
(bad)
out
xchg
out
data16
push
dec
sbb
cwde
test
ins
retf
fs
out
jmp
(bad)
jmp
iret
dec
jge
push
sub
call
or
mov
dec
and
retf
push
mov
xchg
mov
cmps
xor
fistp
cmp
(bad)
add
sbb
les
mov
sbb
scas
pop
lea
jle
sub
jne
ins
(bad)
xchg
sub
pop
mov
adc
mov
adc
cmp
pop
push
jns
test
push
rcl
jo
push
cmp
int
mov
inc
sti
xchg
(bad)
mov
and
(bad)
imul
and
sub
jp
stos
cs
xor
setb
sub
loop
push
jae
loope
sbb
jecxz
ins
or
xchg
xchg
cmp
cwde
push
jge
mov
scas
popf
xor
cli
outs
or
fmul
test
pop
xor
add
imul
mov
sar
js
sub
shr
adc
neg
add
pushf
inc
cmp
fimul
push
popa
push
in
adc
gs
mov
pop
adc
in
fs
sub
xchg
sbb
imul
push
xor
imul
mov
sbb
push
pop
rcl
loopne
not
xchg
or
and
inc
lods
adc
push
je
out
inc
test
push
cmp
mov
les
lds
cs
je
add
por
lea
mov
adc
pop
shl
xchg
xchg
xor
pop
mov
mov
fmul
aas
xchg
rcl
ja
pushf
xchg
(bad)
outs
js
jl
and
ret
sbb
in
cs
in
mov
mov
adc
das
mov
mov
(bad)
push
push
outs
int3
dec
es
add
retf
pop
mov
es
fidiv
pop
out
xchg
mov
pop
(bad)
xchg
cmc
enter
stos
adc
retf
dec
inc
push
mov
pop
jne
cmp
lock
and
das
sbb
or
and
rol
(bad)
(bad)
(bad)
icebp
out
add
lea
cmpxchg
jmp
es
aaa
inc
pop
stos
stos
inc
jae
in
popa
jo
ja
xchg
fwait
cmp
adc
inc
fwait
mov
cmp
sub
fcomp
dec
cli
fld
(bad)
out
cmp
inc
dec
xchg
adc
icebp
push
lea
pushf
imul
pop
mov
(bad)
cmc
mov
imul
jbe
lahf
out
and
xlat
fcmove
sbb
xor
push
sbb
jb
mov
xor
fld
in
clc
xor
mov
cmp
jbe
rol
and
retf
push
clc
mov
mov
aaa
mov
pop
mov
out
dec
mov
inc
jbe
mov
mov
fstp
imul
das
or
or
mov
loop
xchg
aam
sar
dec
mov
lods
adc
push
dec
loope
mov
sar
pop
adc
data16
pusha
inc
xchg
cmc
push
add
dec
jo
data16
sbb
push
jmp
cmp
(bad)
out
lahf
enter
jo
adc
xor
inc
jle
jo
jno
jns
(bad)
mov
fcom
mov
or
nop
in
aaa
add
int
jge
shl
mov
mov
add
fsubr
dec
lds
pusha
dec
jp
es
inc
and
mov
cmp
adc
adc
or
cwde
xchg
xchg
sbb
loop
mov
idiv
gs
(bad)
test
mov
int3
popf
push
loopne
ja
lahf
cmp
ja
fst
pop
in
pop
xchg
inc
jle
jmp
ds
xor
add
stos
sub
js
xchg
push
aad
adc
dec
sbb
mov
sbb
adc
fs
rcr
fisubr
pop
rcr
add
outs
pop
adc
inc
fwait
push
jne
dec
ret
xor
outs
add
pushf
scas
push
scas
test
sar
sti
xor
push
mov
das
pand
sbb
hlt
iret
add
aaa
ss
jbe
sahf
(bad)
xor
push
out
or
fidivr
sti
js
cmp
in
das
dec
jle
sub
pop
jno
hlt
ror
xchg
jmp
mov
mov
rcr
in
push
out
fidivr
jle
push
inc
or
or
xlat
pop
pop
sbb
mov
dec
push
or
cdq
mov
icebp
jno
in
or
pop
(bad)
icebp
mov
jle
push
in
jl
popf
fimul
(bad)
out
mov
xor
test
push
mov
and
xlat
enter
lds
cmp
xor
xor
retf
mov
push
ffreep
mov
bound
xor
jns
xlat
ins
or
idiv
sub
stos
stos
pushf
push
fistp
cwde
nop
inc
xor
mov
dec
push
es
fs
mov
inc
sub
lahf
sbb
int3
xchg
push
rcl
xchg
pop
data16
or
mov
inc
rol
xor
push
inc
loopne
jp
push
mov
push
xchg
add
orps
scas
inc
ret
(bad)
cwde
or
push
mov
and
cmp
mov
adc
bswap
xchg
jnp
retf
mov
dec
push
inc
out
jb
mov
shr
xor
pop
test
jnp
push
ins
push
bound
cmp
ja
cmp
test
(bad)
iret
xchg
mov
lods
xor
pusha
clc
loop
xor
call
in
inc
cdq
mov
mov
push
sub
and
loop
fisub
ins
cmps
jecxz
mov
aad
pop
mov
add
mov
sbb
lds
ins
add
out
(bad)
sub
or
scas
jp
fwait
dec
cdq
mov
inc
les
sbb
cs
push
mov
xchg
sar
pop
push
sti
xor
push
xchg
and
nop
xchg
popf
rcl
sub
push
push
dec
(bad)
xchg
adc
cmc
(bad)
mov
shl
cmps
add
btc
retf
xor
and
push
arpl
dec
hlt
mov
or
ror
cmc
xchg
mov
mov
adc
cdq
sub
xchg
sbb
sub
xor
mov
xchg
test
push
dec
and
movs
aaa
and
sbb
adc
iret
jno
test
sbb
fbstp
mov
scas
push
jo
jbe
arpl
imul
jae
retf
(bad)
xlat
stos
mov
adc
mov
rcr
mov
aaa
inc
lods
fsubrp
mov
mov
ret
cmps
cmp
mov
lock
cmp
jecxz
stos
scas
jnp
xor
mov
dec
adc
dec
(bad)
mov
ret
int
xor
outs
scas
je
push
(bad)
jle
aas
push
dec
jns
lods
into
xor
call
inc
loop
or
jo
cmp
mov
enter
(bad)
test
loopne
test
les
add
jge
xor
and
mov
adc
nop
clc
sti
pop
mov
scas
or
(bad)
ins
jns
mov
sub
loope
jl
dec
dec
xchg
call
fsubr
and
dec
xchg
cmp
or
leave
test
jae
and
fisttp
dec
outs
pop
push
lahf
mov
pop
pop
mov
mov
data16
out
adc
scas
inc
mov
int3
rol
sti
mov
repz
cmp
jmp
fcom
popf
call
fiadd
fwait
dec
fsubrp
jne
movs
sub
push
sar
push
and
pop
ds
sbb
jne
int
dec
cmp
push
and
mov
std
xor
iret
dec
push
jl
das
mov
ret
ss
fmul
lods
push
sub
(bad)
std
(bad)
and
or
pop
rol
mov
and
das
mov
push
inc
(bad)
push
pop
dec
cmps
(bad)
loop
aaa
scas
mov
fcmovb
je
dec
test
cmp
mov
les
xchg
push
push
ja
cld
icebp
aas
pop
js
stos
push
cmps
lds
sahf
iret
iret
repnz
jmp
push
out
add
repz
cmp
pop
dec
dec
push
cmp
lods
pop
movs
xchg
imul
cmp
jge
sub
in
fistp
pop
inc
jae
neg
jmp
inc
jae
adc
ret
out
sub
lea
push
mov
xchg
ja
ds
cmp
aad
retf
add
sbb
add
mov
lods
adc
dec
jae
adc
and
pushf
dec
rcr
clc
movs
out
cwde
pop
mov
aam
xchg
shl
mov
inc
add
in
jge
mov
adc
mov
test
aad
cmp
xor
popf
jmp
fcmovne
jmp
loop
in
adc
mov
sbb
add
test
clc
mov
fsub
xor
xor
cld
add
mov
std
pop
lods
xor
xchg
mov
jb
cld
sbb
mov
adc
movs
xor
daa
cdq
xchg
cmp
push
in
hlt
js
sahf
xor
mov
jo
xor
adc
out
pop
dec
or
jno
inc
or
xor
push
stos
cmp
mov
cmp
xchg
push
out
jmp
mov
or
pop
lea
cld
inc
inc
pushf
ret
cdq
jmp
xchg
jp
in
lahf
mov
das
mov
xor
les
rcl
inc
or
jg
cmps
xchg
iret
lock
rcr
sbb
mul
jbe
cdq
shr
dec
xchg
sbb
sub
les
inc
arpl
push
loope
jno
neg
or
pop
dec
jno
fild
adc
cdq
cmp
iret
inc
pop
sbb
icebp
xchg
push
pop
and
loop
push
pop
mov
push
(bad)
dec
out
cmp
xchg
in
movs
lds
xlat
mov
mov
mov
cdq
sub
test
add
and
dec
dec
and
and
in
mov
ja
xchg
push
fisubr
call
aam
add
adc
push
mov
mov
cmps
xchg
test
outs
pop
cwde
pop
mov
pop
dec
call
xchg
adc
sub
into
fld
sbb
or
movs
sti
mov
jno
or
mov
fcom
mov
lds
mov
xchg
push
repnz
ror
push
fcomp
inc
dec
out
push
retf
repnz
out
push
xchg
add
sbb
sbb
dec
aaa
pop
lahf
icebp
add
pop
mov
(bad)
fidivr
sub
fs
mov
pusha
bound
mov
inc
je
sub
xchg
inc
push
movs
call
test
mov
push
push
xlat
fs
ret
fmul
mov
popa
loope
les
je
into
mov
out
lods
xchg
mov
adc
imul
push
aaa
imul
ror
adc
push
mov
test
mov
je
in
jp
xor
xor
add
mov
out
out
inc
or
mov
leave
inc
call
adc
or
mov
xor
out
add
sbb
jo
gs
in
aam
test
aad
cmp
mov
pop
jl
frstor
ret
mov
and
adc
fidiv
mov
mov
push
add
add
hlt
add
push
popf
loop
into
pop
fcmove
xor
xchg
xchg
pop
mov
mov
and
(bad)
mov
fucomip
and
mov
and
cmp
adc
add
adc
jge
xchg
ins
in
fcmovnbe
aas
or
fild
xor
pop
sbb
mov
mov
and
out
pxor
ficomp
jp
jge
mov
in
repnz
inc
(bad)
in
test
jle
add
test
jmp
adc
enter
data16
out
das
mov
retf
mov
xchg
xchg
jbe
adc
rcl
mov
nop
adc
jnp
mov
loopne
push
adc
stos
cs
(bad)
retf
push
imul
mov
and
push
mov
mov
sbb
cmc
mov
cmp
sar
inc
dec
in
sub
mov
pop
fnsave
dec
xlat
imul
jle
repz
outs
adc
mov
and
ret
scas
jecxz
out
xchg
sub
xchg
test
cmps
pop
dec
int3
test
int3
jecxz
and
outs
cmp
daa
cmps
jecxz
mov
cwde
aam
hlt
mov
fs
push
xchg
retw
mov
jb
push
mov
loopne
out
xchg
pushf
arpl
inc
mov
mov
push
icebp
push
bnd
repnz
inc
dec
ror
cdq
daa
cmp
inc
mov
mov
mov
call
movs
cmp
ror
call
jmp
push
pop
rol
imul
loop
ins
pop
fcomp
addr16
cmp
sub
sub
and
xchg
or
sbb
imul
mov
xchg
aas
mov
jbe
lea
fwait
arpl
retf
push
sbb
cli
das
sub
das
stc
(bad)
daa
retf
fxch
aaa
add
mov
sbb
and
rol
or
leave
retf
mov
lock
cdq
xchg
xchg
lea
pop
adc
movs
loopne
test
sub
movs
int
scas
inc
sbb
mov
sub
dec
push
mov
loope
mov
and
fnstsw
retf
pop
or
nop
data16
mov
gs
mov
loope
push
push
fdiv
sub
push
ins
and
inc
pop
pop
adc
pop
mov
(bad)
in
and
inc
mov
xchg
push
xor
adc
popa
xor
mov
loop
xchg
push
arpl
sbb
js
mov
cmps
cmp
dec
or
mov
repz
fs
or
aaa
fsub
movs
enter
pop
jl
fwait
lahf
ret
inc
enter
cmp
xor
rol
loope
mov
mov
retf
xor
sbb
test
sbb
mov
pop
sbb
popf
inc
add
mov
ret
fcmovbe
(bad)
mov
aad
xor
aas
stos
data16
or
rcr
shl
outs
ret
aam
xor
(bad)
(bad)
iret
in
rcl
rcl
xor
pop
xor
ffree
call
push
fcmovnbe
jns
mov
aam
push
mov
xor
push
jle
jl
pop
inc
rol
sub
jbe
jp
outs
xchg
xchg
gs
fwait
pusha
mov
in
dec
sub
dec
jae
ja
push
cmps
inc
sbb
xchg
test
inc
jns
outs
xchg
xchg
das
stc
xchg
cwde
fnsave
xchg
std
imul
out
pusha
xchg
or
shl
dec
out
or
cmc
jmp
add
pop
es
mov
rcr
rol
adc
stos
aaa
mov
adc
xor
mov
xor
jg
add
dec
inc
(bad)
mov
xchg
es
adc
dec
(bad)
test
push
retf
pop
shl
sbb
or
sbb
xchg
mov
push
add
cdq
push
xchg
inc
call
rol
aad
xchg
sbb
or
mov
inc
in
pop
shr
call
dec
mov
cmc
xchg
imul
int3
pushf
add
push
into
or
sub
(bad)
out
pop
push
ret
(bad)
push
ds
inc
shr
adc
stc
ror
dec
mov
(bad)
ror
ja
or
in
sub
xchg
cmp
or
jecxz
jns
scas
test
aad
lock
shl
jmp
pop
mov
lods
cmp
(bad)
xor
imul
lods
movs
clc
and
xor
add
(bad)
adc
sub
pushf
dec
aas
push
or
cmp
test
dec
sub
sbb
retf
dec
mov
neg
movs
sbb
mov
ins
pop
icebp
push
fs
(bad)
mov
push
icebp
cmp
std
sbb
loopne
(bad)
cwde
fbld
out
retf
pop
cwde
mov
sbb
pop
jnp
movs
fs
jl
jle
pop
popa
adc
mov
rol
mov
dec
mov
push
dec
xor
mov
nop
ret
out
xchg
lds
sar
fs
and
sbb
or
loop
sub
inc
dec
pop
sbb
xor
pushf
cmp
cli
xchg
mov
in
in
ror
ret
js
loopne
add
das
sub
cmp
mov
adc
inc
mov
rcr
(bad)
mov
(bad)
faddp
add
stos
cdq
cmps
xor
jno
aas
fist
out
retf
and
xchg
mov
stc
pop
mov
and
outs
pop
mov
in
sub
sub
rol
fsubp
cs
mov
xor
lea
clc
outs
inc
xor
sub
push
enter
call
sub
jno
clc
jmp
mov
mov
lahf
add
pop
mov
mov
(bad)
rol
cmps
popa
addr16
adc
pop
mov
pushf
xor
ret
les
cmc
adc
nop
inc
out
movs
jns
xor
pop
mov
addr16
or
pop
in
fadd
push
in
or
leave
ss
cmp
shr
sub
mov
es
fstp
sub
adc
dec
mov
mov
add
jbe
mov
test
sbb
rcr
rol
dec
mov
rcr
lds
or
mov
ror
inc
movs
fiadd
loopne
push
lock
xor
fistp
iret
ja
jnp
(bad)
cmc
aas
scas
cmp
and
loope
pusha
es
adc
scas
test
push
test
(bad)
pop
pop
pop
mov
stos
xor
mov
or
jg
pop
call
outs
xchg
and
jmp
retf
in
movs
inc
jl
aad
out
sbb
neg
lods
mov
mov
xor
fucomp
dec
jle
ins
mov
outs
cwde
mov
mul
or
je
mov
ins
es
adc
scas
or
and
fs
aas
mov
and
fwait
inc
cmp
clc
cli
mov
into
dec
outs
(bad)
push
sbb
repz
test
shl
dec
leave
and
dec
pop
push
dec
fwait
ins
xor
das
adc
xor
jecxz
cwde
cmps
add
pop
add
es
hlt
inc
test
mov
xchg
jae
sub
std
loopne
test
jmp
sbb
xlat
movsx
and
cmps
imul
add
jge
lods
cli
or
cdq
mov
shl
(bad)
aas
jg
call
mov
ret
sbb
loopne
sub
inc
dec
sbb
cwde
inc
lds
imul
mov
(bad)
dec
jecxz
xchg
sbb
push
adc
mov
iret
add
lahf
sbb
loope
pusha
mov
mov
jne
jecxz
dec
das
push
pusha
pop
call
aad
dec
fsub
xchg
stos
pop
push
add
subps
sbb
adc
lods
(bad)
repz
sub
mov
shl
sbb
in
aaa
add
hlt
sub
arpl
xor
mov
dec
xchg
sub
in
ret
shl
repz
dec
inc
push
sar
sub
push
jne
mov
test
sti
cs
ror
add
pop
jg
mov
mov
stos
xchg
sub
sbb
loope
out
pop
movs
(bad)
daa
popf
mov
pusha
xchg
daa
adc
lock
sub
or
movs
mov
push
sub
out
pop
gs
nop
adc
daa
mov
cmp
sahf
dec
jne
aas
repz
hlt
add
cmp
or
pop
mov
(bad)
(bad)
retf
shr
out
sbb
or
push
mov
xor
stos
and
mov
gs
xchg
jno
mov
sbb
data16
or
pop
xchg
push
pop
xchg
ds
push
(bad)
cmp
sbb
arpl
push
fwait
mov
loop
sbb
nop
sbb
or
push
xchg
int
jb
inc
cmp
pop
pushf
mov
xchg
mov
push
ss
cmp
sub
cmp
jno
sub
cmc
inc
inc
dec
fwait
adc
repz
leave
les
mov
ret
adc
(bad)
mov
test
js
inc
cmp
inc
pop
mov
(bad)
mov
xchg
loope
adc
lds
or
(bad)
js
cmc
retf
dec
mov
xor
nop
or
add
(bad)
mul
mov
pop
out
xor
test
inc
mov
jle
rcr
imul
pop
sbb
xor
stc
jecxz
cs
add
mov
dec
imul
dec
je
mov
mov
scas
sub
imul
xlat
jne
and
cmp
ins
and
sbb
aaa
jbe
add
shl
push
lods
mov
scas
imul
adc
jb
lea
test
mov
lock
movs
dec
aam
ror
mov
clc
fisttp
loop
pusha
jl
pop
jl
shr
out
fidivr
xchg
test
je
dec
cmp
sub
mov
dec
sbb
lods
nop
sar
or
rep
push
out
push
and
xor
or
jnp
mov
retf
mov
pop
dec
outs
cwde
adc
push
test
pop
push
xor
lods
call
repnz
es
int3
sbb
arpl
repnz
and
sbb
jae
mov
or
pushf
adc
js
aaa
outs
dec
xor
pop
fimul
sahf
retf
std
or
lds
xor
and
push
add
sub
sahf
addr16
inc
mov
mov
or
xchg
ins
sub
push
movs
je
iret
inc
jb
inc
xlat
xchg
push
mov
div
xchg
test
and
out
lds
pop
test
inc
xchg
ffree
lock
and
dec
jge
ins
call
pop
popa
jp
(bad)
stos
inc
jmp
dec
fwait
(bad)
xor
jl
inc
pop
into
ja
(bad)
cmps
stos
aad
and
inc
shr
jns
out
popa
push
pop
rol
cmp
popf
push
mov
mov
fcomp
loop
pop
ret
test
int3
pop
and
push
xchg
xchg
pop
sub
mov
dec
pusha
mov
inc
jmp
imul
in
test
gs
ret
pop
lods
pusha
sahf
call
mov
push
dec
test
sbb
jno
dec
or
retf
leave
call
adc
int3
mov
mov
mov
mov
(bad)
stc
jecxz
popa
es
push
stos
cmp
outs
xor
mov
sbb
push
call
inc
sbb
outs
call
sti
xor
in
mov
call
mov
fild
fisttp
fisub
cmc
(bad)
mov
(bad)
cmp
xchg
xchg
int3
xor
mov
mov
adc
idiv
in
cdq
jo
mov
dec
test
push
test
outs
hlt
stos
pop
or
call
in
int
adc
in
xchg
cld
xor
or
iret
leave
clc
fmul
rcr
in
shr
xor
push
arpl
add
inc
je
xchg
stc
sub
mov
scas
dec
dec
in
fldenv
icebp
mov
pop
adc
pop
mov
mov
xchg
pop
mov
xchg
sub
mov
add
cmps
xor
das
lahf
ins
ds
adc
sbb
cmp
xchg
xlat
pop
(bad)
jns
push
mov
xor
je
ja
mov
xor
inc
cmp
add
jmp
inc
mov
inc
aam
xchg
mov
jmp
xchg
mov
pop
ret
pop
in
rcr
push
and
sbb
retf
neg
and
pop
cmp
dec
popf
loope
mov
xlat
cdq
rcl
sub
xchg
mov
mov
fisubr
ja
pop
fstp
daa
mov
fimul
inc
lea
push
push
jo
repnz
(bad)
rol
mov
or
add
push
mov
jge
fisub
aaa
pop
jg
xlat
aam
sti
xor
push
loop
jns
cmp
mov
out
dec
cmps
repnz
and
pop
mov
jmp
dec
pop
cdq
(bad)
pop
inc
cmp
inc
icebp
stc
(bad)
cmp
fist
xchg
push
mov
in
sub
retf
in
push
loope
pop
dec
xchg
imul
les
jp
push
fistp
outs
(bad)
xor
nop
ret
and
add
pop
sbb
and
dec
mov
lods
inc
ds
(bad)
std
cmp
test
int3
mov
sbb
push
les
call
scas
(bad)
scas
mov
xor
pop
mov
sub
inc
mov
sub
mov
call
pop
frstor
stc
scas
cmp
xchg
sbb
add
fiadd
idiv
int
test
outs
lods
mov
or
mov
dec
(bad)
imul
in
and
iret
and
outs
xor
or
aaa
in
loope
fild
push
jmp
inc
or
lahf
pop
call
mov
test
jg
je
fwait
push
fs
inc
mov
inc
les
xor
lods
enter
xchg
lahf
cwde
add
arpl
mov
jl
out
movs
mov
leave
and
pop
cmp
pop
jecxz
mov
push
das
or
in
jg
hlt
pop
push
sbb
push
mov
pusha
lds
xor
pop
inc
outs
ins
mov
sbb
lods
jb
xor
cmps
and
jge
jmp
imul
jns
in
sbb
mov
scas
(bad)
pop
mov
shr
in
test
inc
sbb
addr16
cmp
movs
ficom
push
push
rcl
dec
sahf
and
or
test
xor
ret
push
inc
or
push
popa
in
mov
popf
push
inc
xor
jg
xchg
mov
sub
aaa
add
jb
aaa
sub
pop
push
movs
jbe
lods
push
inc
call
and
mov
int
adc
fwait
daa
test
adc
inc
mov
pop
add
cdq
push
xlat
repnz
(bad)
fisttp
scas
mov
pop
aas
pop
test
inc
push
gs
pop
push
enter
jo
pop
adc
aaa
push
add
add
and
ret
rcl
test
data16
sub
sbb
dec
mov
out
pop
cmp
in
adc
dec
mov
jecxz
arpl
repz
or
inc
jb
daa
jecxz
cli
jb
adc
xchg
loop
repz
out
push
mov
iret
lahf
hlt
dec
sar
clc
dec
std
inc
lea
mov
cmp
inc
fwait
ja
and
call
icebp
popa
aam
jle
or
sub
cmp
scas
test
lahf
repz
stos
and
xor
xor
or
mov
pop
(bad)
jnp
dec
cmp
scas
scas
sbb
mov
std
sub
ins
cld
mov
aad
xor
shl
clc
xor
test
adc
mov
imul
add
loope
iret
push
stos
inc
stos
add
cmps
aaa
inc
mov
popf
rcr
push
mul
mov
cmc
push
ins
arpl
lods
mov
add
adc
test
jp
push
ret
not
iret
es
adc
cmp
mov
or
add
mov
inc
push
pop
in
jno
je
or
dec
das
pop
sbb
xchg
push
sub
xor
mov
in
mov
loop
fisub
sbb
add
mov
xchg
add
test
test
xchg
(bad)
sbb
shl
push
and
movs
dec
mov
cdq
fcmovnbe
pop
out
stos
inc
inc
je
mov
xchg
mov
(bad)
pop
xchg
cmps
dec
sub
push
sbb
movs
xor
and
cs
pop
fsub
in
mov
cmp
sbb
adc
inc
add
jae
cdq
jl
mov
aas
pop
push
inc
fcomp
mov
or
push
lods
push
jb
movs
jmp
fsub
fwait
xchg
mov
xchg
fidiv
cmps
dec
in
jge
out
cli
aaa
add
fsubr
sbb
mov
lock
cmp
leave
pop
aam
pop
gs
pop
or
mov
(bad)
movs
dec
jge
mov
(bad)
dec
ins
dec
or
mov
pop
imul
jnp
mov
or
jecxz
fcomp
inc
fldpi
or
jge
fimul
mov
loope
xchg
jns
jns
imul
(bad)
sbb
not
gs
call
push
sbb
or
sbb
push
mov
ret
lods
test
push
mov
repz
popf
pop
push
sbb
jecxz
pusha
stos
dec
(bad)
push
xchg
mov
xor
out
hlt
ins
out
fwait
int
cs
inc
mov
xchg
or
add
bound
shl
and
loop
cmc
rcl
(bad)
dec
mov
gs
icebp
mov
xchg
inc
mov
mov
aam
addr16
inc
fist
scas
imul
repz
lock
bound
cmc
fs
bound
xchg
mov
mov
scas
push
inc
rcl
out
neg
rcr
sbb
ins
stc
or
mov
xchg
stos
ret
jno
(bad)
dec
push
xchg
mov
pop
xchg
jbe
fistp
outs
dec
or
pop
(bad)
and
pop
or
dec
fwait
push
xor
jmp
add
xor
sti
scas
jo
cmps
and
jae
jns
frstor
sub
mov
mov
ret
adc
test
sub
out
test
mov
movs
sbb
and
mov
aad
cmp
rcr
or
mov
je
(bad)
(bad)
xor
push
aam
jo
mov
test
xchg
ret
and
cmps
mov
inc
sbb
adc
mov
mov
pop
je
(bad)
inc
aam
fs
jge
mov
cdq
adc
xor
xchg
into
dec
jno
and
movs
loopne
neg
mov
sti
shr
cmp
or
push
ja
inc
inc
push
(bad)
push
pop
mov
ins
test
fwait
push
ds
cmp
pop
repz
mov
je
jle
fisubr
call
mov
mov
xchg
sahf
outs
aaa
inc
out
push
dec
xor
pop
sub
or
div
add
mov
add
dec
and
and
xchg
stos
jne
jne
mov
jb
aad
fadd
out
adc
pop
lahf
and
jmp
movs
sub
loopne
cs
fst
in
xchg
fldenv
sub
dec
(bad)
mov
cld
add
add
lea
and
imul
mov
lahf
ja
mov
loope
leave
aaa
and
cmp
daa
lea
aaa
cmp
mov
pop
mov
leave
dec
or
lods
lahf
test
data16
sub
aas
push
xchg
dec
je
mov
dec
cmc
mov
pop
mov
les
mov
sub
lods
jl
adc
mov
pop
mov
push
fcmove
into
lock
mov
outs
ffreep
push
je
shr
addr16
sbb
mov
or
imul
push
(bad)
adc
pop
push
mov
jg
shr
push
mov
outs
mov
fwait
leave
outs
add
test
mov
js
pop
jne
cli
sbb
dec
lods
adc
test
cdq
adc
outs
jle
jbe
stos
sbb
(bad)
enter
leave
std
fbstp
push
and
and
mov
in
dec
and
cmp
stos
arpl
cdq
out
imul
ret
test
je
sub
cmp
xor
xchg
and
stos
or
jmp
aad
fst
repnz
and
rcr
icebp
(bad)
dec
push
adc
mov
sub
xor
adc
jmp
bound
ja
cdq
call
push
pop
add
dec
rcl
xor
cmp
push
pop
(bad)
arpl
fisttp
adc
sub
or
jae
jae
stc
push
add
jmp
call
push
xchg
je
enter
fisttp
retf
xchg
or
aas
out
adc
fs
dec
dec
mov
pop
pushf
aaa
shr
jecxz
frstor
stos
retf
hlt
push
add
xor
cli
mov
jb
int
mov
repnz
cmp
aaa
sub
lock
loope
sub
das
push
cli
cmps
add
fsub
mov
inc
and
add
dec
sub
push
ret
mov
cmp
ficom
shl
adc
fadd
aam
(bad)
cs
xor
es
jmp
pop
xor
shr
ret
dec
mov
hlt
(bad)
imul
mov
int
adc
jb
dec
scas
mov
add
mov
inc
int
jmp
aad
adc
shl
call
or
lahf
mov
xchg
(bad)
xor
cmps
popa
xlat
ficomp
call
ror
jmp
hlt
pop
ja
jle
arpl
jge
call
aam
push
stc
dec
xchg
mov
push
in
nop
mov
ficom
sub
dec
dec
sub
jne
gs
xlat
bound
push
add
cmps
mov
sub
mov
nop
jb
fnstsw
dec
add
jno
and
jbe
pop
and
sub
pop
sub
sahf
loope
push
lods
stc
scas
fbstp
sub
movs
cmps
jb
and
repnz
dec
mov
jmp
test
xor
cmp
arpl
mov
and
push
inc
(bad)
mov
test
cmp
dec
retf
push
fdivr
dec
idiv
jae
inc
hlt
fadd
jp
sub
les
and
cld
aaa
pushw
test
xlat
adc
fwait
push
rcr
sti
pop
icebp
pop
mov
mov
call
cmp
cmps
inc
dec
push
bound
sar
aas
shl
lea
dec
daa
aaa
out
mov
mov
xchg
pop
or
xor
sub
cmp
pop
pop
push
cmp
xchg
sub
mov
loop
push
xchg
movs
stos
dec
adc
aas
fdivr
sahf
push
pop
(bad)
loopne
int
ds
adc
add
jl
cs
mov
cwde
pop
repz
ret
cmp
mov
daa
sbb
lods
call
adc
mov
imul
lock
fwait
repz
test
pop
jge
push
xchg
jg
jg
shl
inc
adc
and
pop
mov
daa
xchg
xlat
sbb
lock
xor
xor
sbb
aaa
pop
sbb
jecxz
mov
xchg
test
pop
push
int
arpl
btr
dec
aam
jl
push
inc
jmp
add
xor
sar
popf
ins
cmp
popa
scas
adc
pop
movq
or
xchg
fs
and
dec
push
repnz
cmp
retf
adc
gs
and
cs
movs
xor
(bad)
les
pop
loope
arpl
pop
mov
repnz
sbb
jmp
xor
outs
imul
pop
shl
int
cmp
sub
out
sub
push
sbb
out
jle
or
jmp
loope
mov
test
push
inc
outs
shl
neg
cmc
popa
sub
popa
mov
repnz
rcl
cs
and
cmp
cmp
repnz
ds
hlt
popf
jb
xor
dec
test
xchg
sbb
mov
push
cwde
outs
cmc
mov
inc
sub
imul
sub
fwait
ja
out
or
ret
int
repz
mov
sbb
shl
call
mov
lds
call
neg
mov
pop
pop
pop
pop
movs
xchg
mov
dec
popa
cmp
mov
cwde
out
rcl
sbb
cs
aas
cmp
sbb
dec
push
inc
mov
sub
xor
fxam
cwde
jnp
cld
cmp
repnz
in
sbb
or
lgs
inc
dec
cmp
dec
movs
aas
cmp
xchg
push
cmp
nop
or
mov
pop
(bad)
mov
dec
inc
xor
cli
mov
in
and
movs
or
mov
(bad)
mov
inc
repnz
jg
std
int3
cmp
mov
leave
aaa
js
sub
(bad)
fs
icebp
inc
jno
iret
xor
dec
adc
mov
add
imul
and
add
push
fldcw
leave
sar
sub
out
dec
push
or
sti
popf
scas
add
jmp
pop
iret
int3
mov
imul
je
lods
or
pop
in
jno
dec
outs
dec
(bad)
mov
std
adc
push
les
daa
imul
xor
cmp
ss
ret
xor
sub
movs
cmp
mov
mov
or
or
pushf
or
jge
push
shr
arpl
push
cmp
mov
popf
aam
sar
call
jns
stos
rcl
sahf
outs
pusha
xchg
movs
out
push
adc
prefetchwt1
fwait
jnp
mov
mov
xor
dec
mov
dec
mov
es
and
loope
int
cmp
mov
clc
rol
mov
jne
clc
mov
repz
gs
push
cwde
add
dec
int3
inc
shr
in
mov
lahf
mov
xor
sub
pop
repz
and
outs
push
(bad)
push
dec
clc
adc
sbb
inc
gs
cmc
out
pusha
or
mov
mov
fld
pop
cs
dec
and
jnp
sub
movs
mov
stos
mov
xchg
lds
jmp
mov
sbb
xchg
cmp
lahf
mov
cmps
leave
aam
scas
or
and
rcl
xchg
mov
fst
adc
push
sti
adc
dec
loopne
fstp
or
add
nop
mov
fld
pushf
mov
mov
or
(bad)
in
sub
fwait
mov
int
hlt
jbe
mov
mov
adc
jbe
test
cmps
pop
jno
adc
push
enter
inc
xchg
and
js
pop
test
iret
iret
les
pop
adc
mov
inc
and
retf
into
mov
mov
xor
(bad)
xor
mov
mov
(bad)
xor
push
cdq
mov
jno
push
and
sub
mov
dec
test
adc
stos
sbb
and
lahf
push
xor
inc
xchg
push
mov
fdivr
fild
scas
sbb
into
ds
div
shl
or
jno
add
push
dec
shl
sbb
or
nop
jmp
jmp
mov
inc
push
sbb
xor
mov
sub
ins
pop
mov
shl
pop
pop
push
push
mov
xchg
hlt
aad
mov
aas
cs
retf
xor
mov
pop
movs
jp
push
shl
mov
xchg
out
jp
or
ins
pop
push
dec
repz
mov
arpl
xlat
or
lock
pop
sub
pop
cmp
rol
or
(bad)
pop
pop
data16
dec
clc
or
popf
and
pop
adc
sbb
jp
jb
pop
call
jae
add
mov
mov
es
and
loop
lods
mov
mov
bound
das
push
out
cmp
frstor
push
int3
or
or
stos
mov
adc
mov
shl
loopne
clc
rcr
push
push
jl
mov
imul
and
outs
std
ds
stc
call
and
lahf
(bad)
push
out
push
cs
xor
stc
cmp
aaa
test
lahf
mov
pop
outs
pop
cs
mov
adc
add
adc
(bad)
std
sub
bound
add
(bad)
fidivr
sub
push
xor
adc
xchg
loopne
mov
aam
mov
enter
lahf
scas
ins
adc
or
(bad)
mov
jne
xchg
add
cmp
lock
cli
jae
mov
imul
int3
loopne
cld
add
push
xchg
mov
mov
add
cmps
imul
in
adc
repnz
aam
jne
cs
fdivr
popa
mov
inc
add
mov
shl
loopne
mov
ja
clc
mov
imul
fucomip
loop
adc
fnstsw
mov
scas
in
ror
into
adc
in
jmp
push
movs
xchg
xchg
pop
jle
in
and
fnstsw
mov
mov
pop
xchg
cwde
repnz
sub
nop
sti
mov
push
out
in
sub
cmp
dec
call
daa
call
mov
and
pop
pop
sub
xor
mov
ds
sar
pop
pusha
sub
pushf
jne
or
fnstenv
xchg
jo
jno
mov
out
das
ret
mov
lods
ss
in
jo
aas
test
stos
jbe
dec
pusha
xchg
inc
jb
or
sbb
jmp
mov
int
mov
test
leave
jno
std
inc
xor
dec
das
(bad)
fimul
sbb
ins
and
push
xchg
xchg
iret
and
or
daa
sti
fsubp
test
gs
in
lds
loop
inc
inc
mov
pop
retf
lea
rcr
sbb
hlt
icebp
mov
ret
pop
pop
push
mov
dec
out
xor
xor
aam
frstor
xchg
and
add
adc
nop
pop
inc
daa
sub
cmp
movs
push
movs
jmp
push
and
stos
sub
lds
call
inc
and
in
gs
push
movs
mov
push
je
push
int
mov
in
sbb
jno
imul
scas
jne
ins
jle
daa
push
jns
lahf
mov
cmp
sbb
call
sub
sar
mov
ds
jmp
das
dec
cld
movs
test
cmp
push
sub
call
bound
addr16
sti
and
pop
dec
imul
and
shr
cmc
push
and
cmps
add
retf
cld
sahf
scas
or
dec
xor
fwait
test
les
add
pop
rol
cmp
sti
je
fdiv
aaa
mov
hlt
pop
and
and
cdq
int3
int
inc
rcl
mov
sbb
or
and
out
push
in
das
dec
outs
int
push
pop
frstor
add
and
mov
inc
out
call
push
mov
jg
repz
enter
cmp
and
scas
idiv
(bad)
fcmovnbe
dec
sub
adc
les
mov
mov
(bad)
cmc
jmp
xor
xchg
ss
pop
(bad)
push
jg
mov
rol
sbb
mov
fmul
sub
dec
xlat
aad
xor
shr
dec
js
test
(bad)
mov
pop
rcr
inc
or
std
push
mov
jnp
pop
mov
imul
inc
add
lds
hlt
mov
je
inc
or
add
push
add
pop
lds
(bad)
xchg
push
push
adc
xor
push
fcomp
call
call
dec
sbb
jg
pop
jg
jae
inc
jne
loopne
cmp
xor
push
movs
ret
div
loop
in
fcmovbe
lods
sbb
push
mov
loope
lock
sub
fs
xor
push
sub
stc
in
in
icebp
arpl
test
stc
and
je
mov
pop
nop
es
cdq
ds
(bad)
(bad)
dec
div
inc
repz
xchg
ror
sub
xor
and
cs
not
fist
xor
ins
mov
dec
and
sahf
push
and
xchg
and
jp
clc
dec
xchg
dec
cld
add
out
lock
(bad)
jmp
xchg
repnz
sub
and
mov
cwde
out
pop
pop
xchg
mov
inc
jns
sbb
cld
xchg
or
in
out
xor
adc
pop
xchg
mov
push
ins
or
aad
ret
jo
jns
jno
sub
adc
dec
jnp
xlat
add
push
mov
cmp
mov
icebp
ja
cdq
nop
mov
sub
cmp
ret
in
enter
mov
ds
sub
scas
loopne
mov
sbb
es
sub
cmp
add
test
xor
dec
add
fldcw
mov
repz
popa
ins
sub
leave
hlt
mov
mov
adc
sbb
inc
cmp
inc
xchg
shl
push
dec
sbb
mov
and
mov
jns
xchg
loop
daa
shl
stc
dec
loopne
xchg
sbb
bound
enter
mov
xchg
cmp
jecxz
jbe
lfs
jmp
loope
mov
aas
mov
shr
clc
test
enter
push
mov
inc
rcr
shl
int3
(bad)
ja
bound
dec
out
stos
xor
movs
outs
jne
rcr
dec
dec
lahf
push
push
xor
mov
or
mov
cwde
popa
xchg
mov
xor
or
sbb
mov
sbb
sub
div
sbb
sar
rcr
inc
xchg
or
js
fs
repz
es
test
cmps
or
or
push
in
shl
ret
mov
addr16
call
cmps
jnp
movs
stos
mov
adc
and
push
push
aaa
inc
popf
push
jl
movs
rol
stos
ins
sbb
add
das
adc
gs
mov
mov
sub
mov
popf
(bad)
and
add
adc
jbe
adc
xchg
push
sbb
rcl
loop
rcl
mov
arpl
jmp
cmp
(bad)
sub
rol
cmc
dec
mov
add
in
pop
mov
(bad)
pop
add
retf
stc
and
imul
add
sub
mov
test
pop
jmp
mov
jne
outs
sbb
mov
leave
jl
jnp
mov
cli
adc
pop
sar
in
mov
mov
jge
or
xor
rol
and
mov
xchg
mov
not
retf
call
or
addr16
leave
test
pop
fdivrp
jnp
aas
mov
xor
in
mov
add
pushf
jo
and
cmps
sub
ds
popa
push
test
xor
cmp
add
xchg
add
(bad)
cmp
mov
or
pop
xor
add
or
jg
or
sub
pop
pop
ja
cmp
add
sbb
mov
loope
sti
lds
aam
ds
or
fisttp
in
jbe
cmp
aam
push
jg
adc
add
cmp
inc
retf
popf
pop
fist
inc
pop
adc
inc
sbb
lods
mov
cmp
aaa
mov
sbb
jae
mov
(bad)
in
stos
cmc
retf
jg
scas
adc
dec
jns
mov
jge
test
mov
gs
stos
mov
jno
cmp
test
or
cmp
(bad)
sub
pusha
and
js
xor
aad
xor
or
test
pop
lds
xor
jmp
pop
data16
repnz
jg
pop
jae
pop
xchg
and
push
call
bound
dec
xchg
mov
inc
sub
(bad)
(bad)
mov
sbb
int3
out
push
scas
dec
aas
mov
stc
mov
and
bound
lods
ss
adc
cmp
xchg
into
xor
dec
pop
sub
jmp
mov
cmps
xchg
or
hlt
mov
loopne
arpl
mov
push
ss
jg
pop
mov
mov
ret
rcl
mov
xor
inc
jmp
pop
add
and
ret
into
mov
mov
mov
push
not
pop
mov
popa
push
push
movzx
sub
xor
sub
fldenv
add
inc
or
or
and
in
sub
inc
fidivr
sti
xchg
out
jnp
cs
repnz
xchg
cmps
je
cld
jns
cli
(bad)
in
aam
out
test
xor
(bad)
retf
cmp
cld
dec
rcl
fs
push
in
lahf
pop
cmp
enter
les
push
mov
xchg
inc
inc
mov
jae
cmp
rol
xchg
aad
sti
out
cmps
xlat
repz
cmp
in
(bad)
fimul
out
adc
or
ds
mov
out
ret
adc
push
pop
nop
sub
fwait
mov
pop
js
imul
into
add
ins
cdq
mov
(bad)
sub
lods
jne
jecxz
pop
aaa
jno
dec
push
xor
add
sti
in
lock
mov
out
sbb
imul
sbb
or
sbb
sahf
enter
add
and
mov
push
lods
into
or
pop
and
pop
sub
dec
jmp
(bad)
push
dec
mov
sub
jmp
or
pop
jns
xor
test
mov
out
ss
loop
dec
adc
pop
mov
push
or
adc
stc
cdq
ins
push
movzx
xchg
addr16
push
cwde
lods
pushf
or
mov
jae
cli
inc
add
ror
push
loop
(bad)
dec
test
mov
mov
jle
dec
mov
push
sub
jle
mov
add
es
into
ss
push
out
push
mov
out
out
enter
fstp
sahf
repnz
and
popf
std
(bad)
shl
stos
xor
ds
and
pop
adc
setle
in
sbb
or
mov
inc
sub
rcl
popa
mov
ins
pop
and
fsubr
add
ret
(bad)
outs
dec
mov
pushf
inc
(bad)
hlt
pusha
icebp
mov
push
mov
call
xchg
lods
test
test
mov
fwait
(bad)
mov
ds
enter
pop
daa
mov
mov
inc
stc
icebp
rol
cli
pop
retf
push
test
push
inc
leave
nop
(bad)
mov
xor
js
out
js
call
dec
(bad)
neg
push
movs
push
sbb
fs
call
xchg
inc
popa
pop
push
xor
sar
push
pop
jo
mov
outs
mov
imul
and
xchg
push
fldenv
mov
xchg
popa
mov
jmp
push
movs
sbb
sub
nop
js
or
je
or
xor
mov
jge
cwde
jae
pop
pop
ds
out
add
cmp
xor
add
dec
pushf
dec
jmp
out
cmps
(bad)
mov
xor
cmp
stos
pop
mov
mov
into
jbe
cdq
or
imul
cmps
sahf
je
mov
push
and
inc
jmp
inc
xor
cmps
inc
(bad)
xchg
jne
lahf
cmp
jge
fnstenv
je
pop
mov
push
push
div
fsub
xchg
inc
sbb
push
or
test
push
ss
out
js
push
inc
jp
not
or
movs
adc
mov
cld
adc
gs
cmp
fcmovnb
mov
loope
mov
cli
cmp
sbb
mov
iret
push
ds
sbb
mov
pop
data16
mov
mov
cld
mov
data16
xchg
fdivr
xchg
scas
retf
inc
pop
ss
(bad)
ds
jns
cdq
push
scas
inc
pop
jmp
mov
adc
cwde
mov
jmp
sub
hlt
mov
jno
fisubr
push
adc
loope
xchg
xlat
sub
sub
sub
aam
out
jmp
jmp
nop
dec
mov
into
xchg
sti
fistp
(bad)
xchg
repnz
sub
cmp
movs
sbb
xor
and
je
mov
scas
xor
in
std
popf
loope
push
cmp
shr
arpl
jo
adc
es
push
repz
lahf
mov
inc
out
fmul
pusha
retf
push
movs
lods
rcl
unpckhps
shl
fidiv
imul
mov
dec
or
data16
outs
dec
and
xchg
fbstp
or
ror
pop
imul
jae
sbb
aad
sahf
rol
movs
mov
mov
cmp
add
mov
cmp
retf
push
je
and
(bad)
cmps
adc
js
jmp
xchg
push
imul
mov
jne
test
stos
xor
pusha
mov
mov
test
add
fsubrp
mov
inc
(bad)
push
(bad)
mov
or
mov
push
jp
(bad)
loopne
mov
jmp
pop
test
test
rcl
fcom
jecxz
cli
mov
cmp
push
out
adc
(bad)
test
xchg
xchg
cmps
popa
stc
mov
test
stc
adc
js
pop
scas
inc
lods
push
mov
gs
mov
jecxz
imul
or
pop
ror
retf
lock
cmp
popa
dec
stos
inc
test
adc
retf
pop
(bad)
ds
not
adc
es
pop
test
jns
push
sbb
mov
ins
cmp
(bad)
in
add
and
cli
sbb
push
and
dec
and
retf
push
outs
jg
jns
pop
stos
xchg
push
stos
jo
adc
scas
sbb
xchg
and
rcl
(bad)
fmulp
sbb
data16
sar
mov
fs
dec
mov
in
fst
mov
mov
cmps
pushf
and
xor
dec
jg
cmp
das
add
cmp
fxch
ret
sbb
push
mov
xor
shr
int
std
pop
adc
mov
sub
sub
mov
xchg
inc
push
mov
les
data16
jg
in
push
push
xor
int
in
mov
jp
popa
add
retf
mov
test
stc
ror
xor
xor
xchg
movs
xchg
pushf
cmp
aad
fbld
stos
ins
push
int
push
ror
mov
ret
test
aas
mov
jne
popa
sti
pop
mov
lds
loopne
cmps
mov
xor
mov
adc
and
shr
pop
addr16
mov
xchg
cld
inc
out
nop
int
pushf
adc
call
div
test
repnz
movs
sub
add
inc
sbb
mov
iret
sbb
cdq
das
inc
push
ins
sti
jle
std
fsub
call
mov
dec
mov
push
add
mov
mov
mov
subps
test
pop
orps
pop
(bad)
imul
add
jnp
push
sub
stos
fwait
adc
retf
push
sub
sub
jg
(bad)
cmps
das
cmp
lahf
shl
ss
fdiv
fldenv
mov
push
nop
outs
scas
cld
mov
mov
test
icebp
cmp
push
add
mov
sahf
sub
mov
aas
mov
xor
xchg
inc
xor
sub
imul
pop
pop
call
and
pop
fstp
fs
xlat
jbe
out
repz
jecxz
cmp
icebp
not
out
inc
fidiv
pushf
mov
cli
jbe
nop
mov
dec
or
or
mov
nop
adc
mov
push
mov
shl
pusha
fmul
mov
xchg
add
test
mov
sbb
jmp
repz
mov
xor
mov
ja
cmp
adc
push
outs
xchg
pop
fisubr
test
sub
outs
mov
cld
push
lahf
inc
jp
sub
rcl
jecxz
jecxz
data16
sbb
(bad)
int3
stc
pop
(bad)
popf
adc
pop
lds
xor
stos
pop
and
loope
and
aas
mov
test
cmp
dec
shr
popa
popa
mov
push
inc
ins
es
call
or
jb
(bad)
daa
jge
push
push
sar
add
push
rcr
hlt
(bad)
mov
stc
mov
fwait
aaa
nop
ss
push
pop
mov
les
(bad)
loop
in
movs
xchg
cmp
adc
int
mov
dec
sbb
les
cs
fucomp
xchg
or
xchg
je
cmp
inc
es
jb
fsub
out
jo
movs
mov
pop
jns
cmp
das
data16
mov
xchg
(bad)
fnstsw
and
push
sub
movs
xor
sub
mov
(bad)
xchg
xor
mov
jnp
test
lods
xchg
repnz
adc
cmps
scas
adc
pop
xchg
hlt
test
iret
retf
sub
arpl
xor
mov
test
fsubr
pop
push
inc
pop
pop
push
mov
out
pop
sbb
clc
popf
push
add
ins
sub
sub
fucom
out
and
imul
mov
jge
cmp
add
repnz
push
xor
and
popf
fs
fistp
mov
dec
mov
cdq
cmps
and
clc
int
mov
jp
in
xchg
jmp
mov
xchg
cmp
into
xor
adc
mov
dec
cdq
jp
mov
sub
cmp
pop
push
in
dec
hlt
lock
test
inc
shr
enter
jge
aad
pop
leave
adc
mov
mov
push
gs
add
cmp
fld
aaa
pop
stos
push
fsub
pop
and
cmps
fwait
mov
mov
test
fsubrp
cmp
xchg
fsub
in
cmp
xor
sub
xchg
movs
lahf
jmp
clc
in
adc
and
fwait
shl
mov
xor
sbb
ss
jbe
rcr
mov
je
dec
sbb
xchg
lock
cwde
pusha
clc
mov
je
(bad)
fisttp
(bad)
jbe
jecxz
sbb
loopne
push
out
push
sub
sti
icebp
addr16
mov
mov
pop
pop
scas
mov
jne
jne
sahf
popf
or
je
and
sub
shl
jmp
clc
ins
xor
xor
xor
cmp
es
xor
ins
sbb
(bad)
test
fiadd
mov
std
dec
xchg
inc
movs
mov
jae
jmp
sahf
cmps
jne
je
arpl
in
xor
mov
or
fisub
lea
adc
ret
cmp
push
push
inc
mov
es
scas
jp
pop
outs
inc
mov
imul
aas
fwait
cmp
fisub
out
xchg
jo
mov
add
sub
leave
lahf
and
xor
js
xor
adc
dec
cmp
pop
or
add
inc
or
inc
jns
push
inc
add
test
sbb
cwde
xchg
fadd
icebp
arpl
xchg
out
hlt
mov
push
fwait
cmps
mov
jae
mov
push
push
xchg
loop
mov
test
cmp
push
inc
fnsave
jge
add
arpl
movs
mov
sbb
and
xchg
outs
adc
imul
aad
sbb
enter
xor
dec
call
lods
xchg
ja
popa
dec
mov
es
stc
dec
lahf
popa
jge
sub
sti
xchg
enter
inc
dec
push
popf
jae
xlat
mov
sbb
or
sar
xor
dec
mov
sub
fbstp
cmp
out
adc
push
inc
jg
dec
mov
cmp
lods
xchg
(bad)
or
in
imul
ins
adc
jbe
pop
pop
inc
jp
and
(bad)
jmp
add
lods
mov
outs
(bad)
ret
mov
stc
jl
inc
(bad)
mov
inc
inc
stos
mov
mov
ror
div
or
out
mov
ss
das
pop
cmp
xchg
test
push
mov
aam
clc
popa
icebp
adc
pop
lea
ret
ret
or
jne
fild
sbb
cmp
mov
imul
dec
jo
adc
push
push
(bad)
mov
push
mov
mov
mov
(bad)
stos
loopne
push
push
jmp
pop
inc
(bad)
push
lahf
dec
jp
inc
das
adc
add
loope
out
cwde
test
das
fwait
adc
in
mov
cmp
push
ret
loopne
out
push
cwde
leave
popa
cwde
inc
pop
mov
in
push
leave
sub
mov
call
add
leave
cmps
ffreep
sub
xchg
mov
sar
sbb
jo
test
fist
push
add
leave
retf
adc
mov
or
mov
fst
int3
sbb
cmp
jmp
xchg
push
xchg
lods
and
xor
in
cmp
mov
add
jle
pop
inc
div
frstor
mov
push
jo
jle
aaa
out
push
imul
mov
loope
sbb
lahf
movs
cmp
xchg
xlat
lods
push
pop
xlat
addr16
push
or
mov
aam
xchg
out
dec
repnz
jmp
pop
mov
push
xchg
ja
rol
sub
cdq
clc
cmp
shl
and
cmps
enter
mov
mov
mov
fs
aam
retf
cmp
push
test
repz
adc
push
inc
dec
icebp
or
xor
test
and
jmp
or
sub
hlt
jae
sub
pop
mov
cmp
xor
cmp
lds
cmp
sub
in
add
jne
cwde
repnz
jl
call
mov
dec
pusha
mov
sub
cmps
mov
in
sub
inc
pop
cmp
sbb
shr
(bad)
push
test
sbb
cmps
aaa
sbb
mov
mov
sbb
dec
outs
or
les
jns
xor
loop
test
retf
adc
mov
cmps
push
xor
sbb
mov
jae
jmp
lock
scas
sbb
push
mov
adc
(bad)
pop
and
jmp
rcr
jp
mov
xor
or
call
test
and
sbb
cmps
xor
jno
jae
dec
inc
call
pop
bound
jle
inc
gs
jl
inc
in
cs
dec
retf
movs
js
lods
fimul
jl
and
jae
adc
or
or
ds
xor
xchg
sbb
rcl
mov
ss
hlt
xchg
daa
and
rol
inc
ja
aas
outs
inc
ret
retf
cdq
or
jno
push
push
leave
pop
pop
les
es
jl
pop
stos
mov
in
dec
jmp
pop
loop
cmp
jbe
jne
or
cmp
pop
and
pushf
cmp
les
rcr
cmp
ror
int
aaa
loope
sub
lea
out
jmp
out
(bad)
mov
cmp
xchg
dec
popf
pop
fnstcw
leave
(bad)
add
das
xor
imul
mov
sbb
enter
cmp
cmps
fwait
sbb
iret
pop
jne
and
movs
push
mov
inc
nop
arpl
mov
add
test
dec
jae
or
retf
sub
scas
cld
cwde
mov
mov
fsub
jo
push
inc
dec
add
push
mov
xchg
mov
lock
ret
call
fwait
mov
inc
retf
test
(bad)
push
xchg
sti
dec
fstp
lock
mov
lahf
and
add
fs
or
cmps
mov
add
sbb
sub
mov
sub
cmps
mov
add
in
pop
icebp
arpl
jb
xor
add
push
je
jnp
pop
lods
jno
jmp
or
repnz
dec
mov
(bad)
pushf
fiadd
jno
mov
or
je
shl
mov
mov
mov
ja
repz
int
push
jns
pop
jmp
mov
fcomp
mov
mov
dec
sub
cmp
scas
mov
mov
pop
adc
(bad)
fsub
adc
imul
leave
cmp
jp
mov
push
cmp
pop
xchg
ret
xor
ret
call
mov
or
cwde
fbld
add
jb
push
mov
cmp
lds
xchg
mov
outs
dec
popf
sbb
push
and
xlat
movs
cmp
pop
sbb
ja
pop
push
jg
mov
push
imul
or
jmp
das
cmp
fild
lahf
and
push
or
in
push
or
test
lods
push
adc
retf
pop
in
mov
call
in
dec
(bad)
sbb
cwde
fmul
push
jb
cli
stos
sbb
xor
lahf
pop
repnz
out
stc
cmp
or
into
inc
sbb
fisubr
mov
mov
or
mov
out
call
push
mov
push
not
addr16
or
ret
inc
fnsave
adc
jns
repz
lea
push
sti
cmp
es
inc
push
daa
xchg
adc
fst
in
rcr
or
cs
int
jns
hlt
(bad)
mov
imul
mov
mov
cmp
pushf
adc
les
in
mov
and
loope
data16
ja
je
daa
test
cmp
sar
cli
jmp
sub
shr
fld
mov
bound
push
inc
mov
rep
mov
repz
or
xor
rol
nop
or
xchg
push
loopne
imul
in
and
enter
in
or
pop
inc
pop
pop
mov
pop
or
popa
cs
mov
rol
mov
sahf
jg
(bad)
fldcw
jmp
jno
xchg
sbb
sbb
adc
repnz
ss
xchg
add
cwde
out
sub
les
cli
fsub
pop
jb
pop
lock
sar
idiv
movs
cwde
jno
push
(bad)
mov
shl
fiadd
and
push
cmps
out
outs
mov
(bad)
xchg
call
test
imul
loopne
inc
sub
jb
mov
pop
clc
add
add
idiv
pop
push
fdiv
sbb
repnz
movs
nop
popf
ret
jbe
in
mov
pop
lds
out
add
ds
jae
or
mov
cmc
out
xlat
cwde
cs
xchg
test
push
imul
adc
mov
scas
leave
jmp
mov
nop
cld
and
lea
cmp
pop
add
jae
stos
dec
sti
in
int
xor
cmp
loopne
sub
adc
sub
cwde
das
and
fs
das
sub
adc
shl
test
aaa
retf
or
mov
sub
add
repnz
xor
(bad)
daa
sar
adc
shl
lds
aas
lods
add
pop
aas
pop
mov
mov
leave
addr16
mov
mov
call
cmp
push
inc
loopne
retf
loopne
mov
pop
sbb
push
mov
dec
sbb
sub
fcmovnu
jecxz
adc
jg
xor
sbb
xor
mov
xor
pop
in
push
outs
fwait
pop
dec
xchg
mov
ja
ret
mov
jmp
cli
xchg
icebp
adc
loope
in
aas
inc
cmps
adc
or
retf
xchg
adc
aad
retf
bound
jecxz
pop
test
(bad)
xor
cmp
sbb
adc
push
adc
cmp
(bad)
push
mov
mov
imul
cmc
sub
cmp
es
test
movs
ds
mov
popa
pop
mov
cmp
imul
dec
or
jp
(bad)
fnsetpm(287
sbb
mov
int3
and
mov
inc
xchg
cmp
mov
out
push
rol
dec
mov
retf
in
lods
ss
outs
sub
bound
dec
hlt
dec
cdq
lds
sbb
jp
inc
mov
cmp
gs
movs
test
and
xchg
js
cmp
fidivr
enterw
fdivr
push
xchg
cs
aas
cdq
call
push
lds
add
arpl
and
jnp
sahf
aad
sar
jne
mov
sub
mov
and
mov
cmp
push
add
stos
js
cmp
sbb
mov
xor
mov
test
mov
or
aas
mov
jno
push
mov
sahf
sbb
sbb
outs
loope
rol
jne
iret
dec
cmps
rcl
inc
or
(bad)
mov
scas
loop
sub
xor
ins
xor
push
and
mov
xor
es
xor
push
mov
mov
test
cmp
rcl
leave
jl
pause
stc
in
xchg
mov
xor
fsubr
dec
aas
xor
jno
div
mov
cld
out
scas
sahf
add
cmc
daa
call
push
mov
ins
sub
repnz
scas
fsubr
stc
pop
aad
addr16
dec
loopne
xchg
xchg
into
adc
pop
dec
inc
into
adc
ja
popa
pop
and
adc
push
cli
or
inc
and
imul
hlt
mov
jno
pop
mov
lea
aaa
imul
and
jg
jp
mov
es
push
stos
out
sahf
retf
jl
sbb
fidiv
cld
add
inc
pop
mov
ret
inc
or
mov
xchg
addr16
pusha
xor
or
inc
pusha
inc
imul
in
xor
xchg
fbstp
test
stos
xchg
dec
pop
retf
arpl
aad
les
push
mov
imul
test
std
mov
fstp
movs
jg
mov
jo
xchg
aaa
(bad)
xchg
inc
pop
mov
xchg
fsubr
sub
int
or
adc
inc
and
(bad)
(bad)
mov
inc
inc
push
or
or
ins
mov
pop
mov
cmps
shr
ins
jecxz
scas
jbe
pop
(bad)
scas
sbb
mov
outs
mov
jmp
cmp
xor
mov
adc
not
mov
inc
dec
mov
out
sbb
jle
push
sbb
data16
lds
or
(bad)
aam
lea
xchg
cmp
pop
jnp
sub
push
mov
sbb
xor
retf
adc
in
push
test
popf
add
test
retf
and
push
inc
push
out
int
movs
mov
xchg
mov
sub
pop
inc
fs
imul
pop
push
mov
inc
cmp
mov
and
and
sbb
mov
(bad)
mov
imul
int
jle
out
sti
hlt
je
icebp
xchg
pusha
cmp
ficomp
lock
cmp
test
pop
pop
cs
add
add
or
aaa
fisub
not
cmc
lea
mov
fwait
push
je
jg
movs
test
stos
sbb
fmul
sub
add
jmp
push
in
mov
xor
xor
dec
ins
das
in
aaa
dec
xlat
vmwrite
add
out
mov
ja
clc
or
fcomp
and
sub
add
pushf
push
hlt
jno
repnz
xor
adc
jmp
(bad)
ja
leave
gs
and
pushf
sub
add
int3
push
(bad)
fnsave
into
mov
fndisi(8087
fisttp
mov
jns
imul
push
popf
jp
addr16
(bad)
hlt
ins
clc
dec
nop
pop
mov
scas
in
call
xchg
retf
sahf
fbld
cld
addr16
sub
mov
vpsubsb
das
xor
fild
(bad)
inc
ja
jnp
and
fnstcw
add
adc
push
dec
in
and
xchg
cmp
mov
mov
inc
pop
repz
or
jecxz
sub
popa
xor
push
movs
aaa
mov
dec
mov
int
fst
jl
mov
cmps
mov
jns
mov
jmp
add
out
popf
inc
out
push
jno
jne
das
hlt
ss
popf
mov
(bad)
test
repnz
inc
aas
pop
pop
data16
mov
inc
inc
pop
push
stos
mov
push
sub
mov
inc
and
int
popf
or
dec
in
movs
inc
pop
pop
outs
ret
mov
and
xor
adc
enter
call
dec
jno
mov
push
fnstenv
push
xchg
xchg
aaa
inc
xchg
js
in
data16
push
std
dec
mov
outs
mov
cmp
pop
dec
mov
mov
mov
dec
cmp
mov
add
fisub
dec
je
jecxz
lds
sbb
adc
lods
dec
sbb
push
retf
out
popf
jmp
pop
lods
and
push
mov
sbb
call
aaa
loopne
and
pandn
pop
sbb
lods
add
shl
lods
das
sub
inc
pop
jl
push
lods
imul
add
cmp
sub
jle
imul
call
sbb
pusha
cdq
inc
popa
retf
(bad)
or
int3
adc
out
mov
(bad)
adc
cs
pop
dec
hlt
sub
push
lods
push
sub
cmp
in
cli
rol
outs
out
inc
retf
out
gs
int3
cmc
xor
and
jmp
adc
repz
inc
mov
push
leave
iret
rcl
mov
hlt
imul
mov
xor
je
dec
and
inc
xchg
cli
mov
adc
dec
dec
mov
pop
xor
pop
sbb
push
adc
rol
int
(bad)
dec
js
ins
lds
cmp
adc
jl
xchg
jmp
jp
std
test
loop
jecxz
ds
in
push
(bad)
das
jmp
pop
test
outs
dec
mov
xor
test
cmp
inc
mov
adc
add
hlt
cmps
push
ja
cmp
cmps
test
or
shr
aaa
add
nop
test
ret
aam
pop
ins
jg
das
stc
jne
pusha
xor
gs
cmc
mov
and
neg
adc
or
aam
jge
pop
pop
push
imul
add
sbb
ins
sahf
bound
sbb
cs
sub
ret
push
mov
mov
sbb
add
test
(bad)
jmp
inc
jmp
xchg
ins
test
dec
(bad)
mov
pop
ffree
(bad)
sub
aas
lea
test
mov
lahf
mov
hlt
jle
(bad)
loopne
pusha
push
lock
or
bound
call
fs
push
inc
cld
fidivr
cmp
mov
jmp
out
jnp
ins
es
mov
xor
pop
leave
xchg
dec
stos
push
jb
test
or
xor
call
jle
movs
or
cld
adc
(bad)
clc
test
mov
inc
dec
or
mov
xor
sbb
jmp
pop
arpl
push
jne
fdiv
inc
sbb
rcl
inc
adc
ins
and
jmp
fistp
cmp
pop
xchg
push
arpl
out
scas
inc
xchg
es
dec
ror
jmp
push
sti
cmp
mov
in
fiadd
mov
cli
dec
gs
cmc
sub
fisttp
shr
pop
icebp
ret
(bad)
cmp
mov
dec
jp
adc
xchg
sbb
hlt
pushf
and
sti
loop
test
xor
(bad)
push
adc
and
pop
sub
pop
ror
push
xchg
xchg
mov
push
sbb
adc
int
adc
into
leave
mov
in
clc
add
xor
mov
xchg
into
clc
lds
pop
popa
jmp
movs
jnp
and
mov
shl
ret
xchg
out
mov
lahf
mov
nop
loop
add
adc
popa
mov
cwde
xor
cdq
pop
(bad)
xchg
cmp
or
or
cmp
push
cli
add
or
mov
jle
(bad)
cmp
cwde
out
mov
ret
and
loop
sbb
cmp
xchg
call
das
inc
sahf
sar
cmp
ret
dec
dec
xchg
shl
leave
pop
aas
add
mov
repz
cs
pop
and
jns
inc
call
xor
xchg
inc
stos
ins
ror
iret
adc
mov
fsubr
and
add
shl
mov
push
(bad)
pop
adc
jnp
loopne
push
xchg
leave
rcr
adc
fimul
stos
sub
add
pusha
aaa
popf
not
syscall
aam
sbb
or
rol
adc
cmp
push
imul
ret
sbb
xor
xchg
push
es
cli
mov
cmps
fsub
jp
fmul
fwait
xchg
adc
jg
push
fimul
test
adc
sbb
test
jge
ret
inc
xor
add
(bad)
fisttp
ja
fstp
scas
mov
loopne
lods
push
sbb
daa
push
and
neg
or
jecxz
or
jo
add
dec
popf
sbb
popa
cmp
int
mov
retf
into
mov
retf
jb
ds
sbb
cmps
pop
inc
cmp
jo
push
popa
and
fnsave
rol
test
mov
mov
add
xchg
jecxz
xchg
or
or
mov
dec
cmp
inc
hlt
in
pusha
into
addr16
iret
stc
adc
dec
adc
js
or
lahf
or
cwde
xchg
mov
push
xor
lahf
mov
js
dec
sub
sub
jo
pop
fild
nop
adc
jle
jmp
(bad)
cs
repz
call
push
push
enter
arpl
xchg
push
das
add
retf
loopne
ror
add
(bad)
(bad)
sti
xchg
xchg
imul
lahf
inc
bound
out
iret
movs
mov
(bad)
pop
jge
test
int
fwait
nop
cmp
fwait
sub
xor
and
ficom
imul
mov
rol
ins
xor
mov
std
loope
fstp
popa
test
pop
pop
jae
jecxz
dec
mov
adc
dec
(bad)
int3
push
in
sbb
adc
lods
dec
js
jae
push
pop
aam
mov
bound
mov
jle
inc
sbb
push
sub
or
repz
mov
jbe
xor
push
pop
movs
call
int
test
not
mov
mov
inc
jg
ror
jge
std
lahf
dec
les
fnstenv
dec
pop
mov
outs
add
pop
mov
cmps
push
ret
cmps
dec
push
pop
push
and
int3
add
ins
mov
fucomp
imul
imul
out
pusha
xchg
repz
push
mov
in
fidiv
push
and
cmp
add
scas
dec
cmp
cwde
retf
xchg
jge
in
lods
mov
pop
jne
or
or
mov
loop
out
loopne
ins
push
test
lahf
and
fiadd
dec
push
iret
mov
jmp
leave
ins
jl
loopne
inc
sbb
inc
pop
inc
xor
imul
imul
cmc
in
xchg
cmp
xchg
fcom
jmp
(bad)
stc
mov
xchg
sub
sbb
jnp
xor
mov
pop
dec
push
or
outs
aaa
popa
(bad)
fwait
xchg
popa
(bad)
out
inc
jge
je
mov
imul
aam
xor
mov
scas
push
inc
push
dec
ret
mov
pop
sub
hlt
mov
dec
pop
dec
sub
pop
popf
sub
push
movs
dec
xchg
cmp
xchg
cdq
test
inc
jp
inc
cmc
in
leave
cwde
xchg
mov
pop
mov
push
sbb
out
inc
out
xchg
mov
mov
lds
nop
(bad)
gs
xchg
ins
je
arpl
cmp
push
sub
out
xor
jl
retf
dec
and
add
pop
jo
xchg
dec
cdq
arpl
pop
stc
dec
out
out
js
imul
jo
sbb
adc
in
stos
in
mov
test
mov
cmp
pushf
fisttp
mov
cdq
fild
inc
add
sbb
lods
(bad)
ss
hlt
adc
fisttp
popf
jmp
xor
lock
mov
jno
test
cmps
sub
fwait
je
ror
imul
push
call
fld
push
cli
xchg
and
inc
cmp
push
mov
test
lods
cli
push
mov
xor
jbe
ins
lods
(bad)
stos
fwait
in
xchg
cmp
adc
add
sbb
push
add
xchg
loope
pop
jbe
aaa
not
pop
nop
(bad)
pushf
adc
loopne
loopne
mov
shr
retf
sbb
sub
mov
das
mov
xchg
or
bound
dec
cmps
mov
jno
cmc
sbb
data16
addr16
daa
mov
jno
ret
(bad)
cld
jecxz
sub
jbe
inc
xor
mov
fidiv
cmp
inc
stos
jl
push
xor
push
cmp
xor
xor
aam
pop
lds
mov
mov
sbb
lds
push
in
mov
mov
inc
stc
loope
mov
mov
adc
sub
sub
sti
loopne
out
(bad)
loop
jmp
in
xor
ret
mov
mov
sbb
dec
cmp
pop
fs
push
pop
mov
xor
jl
cmp
sub
mov
ret
shl
push
push
xchg
ins
jae
sbb
pop
enter
out
adc
pop
inc
pop
fadd
push
lds
out
jmp
int3
aad
jl
sbb
add
pushf
out
pop
cmp
test
mov
psrlw
sbb
and
mov
imul
xchg
and
xchg
or
std
cmp
jmp
lds
xlat
js
mov
pusha
push
inc
movs
shl
pop
mov
sbb
jmp
arpl
or
retf
dec
cmp
xchg
call
jmp
xor
xor
shl
xchg
repnz
pop
mov
cmps
mov
xchg
test
jo
shr
cs
mov
enter
ja
shl
push
daa
inc
ficomp
or
and
sbb
(bad)
ds
add
push
jno
out
mul
out
int
repz
lds
cmps
xor
mov
in
sti
mov
fisttp
or
adc
fld
jge
test
adc
jmp
dec
mov
push
sbb
dec
mov
cmp
(bad)
mov
and
or
(bad)
ret
dec
jmp
push
xor
mov
lods
jnp
push
jmp
or
add
mov
pop
jmp
inc
mov
xchg
enter
popa
mov
pop
jle
clc
jb
push
jmp
or
jp
fst
inc
lock
mov
int
ret
xor
fdivr
out
les
mov
jp
into
mov
mov
or
dec
sub
or
out
gs
cmp
loop
jge
mov
cmp
out
iret
cdq
shl
dec
inc
enter
or
ret
mov
popf
cmp
jnp
int
inc
inc
and
rcl
aaa
pop
adc
push
hlt
cmc
mov
adc
fadd
rcr
rep
and
es
hlt
stos
mov
movs
lds
cmp
xor
test
or
mov
dec
mov
xor
sub
fnstenv
jnp
pushf
jae
mov
mov
push
cs
pop
pop
add
iret
addr16
(bad)
out
xor
sub
xchg
and
les
inc
inc
xchg
and
loopne
cmc
mov
push
fiadd
cwde
and
sub
inc
rol
jle
pop
cdq
repz
jb
mov
or
mov
jmp
push
mov
mov
inc
push
mov
xchg
fcomp
das
mov
fstp
fimul
bound
ss
cmps
leave
cmp
pushf
imul
sub
arpl
mov
xor
test
mov
cld
cmps
ds
icebp
js
pusha
xchg
jecxz
sbb
inc
sub
aam
dec
shr
and
pushf
add
fistp
jge
retf
call
test
pop
push
mov
jnp
sti
sub
sub
lea
add
ja
pop
push
loope
mov
daa
sti
and
test
jmp
lock
loopne
inc
lods
or
xlat
enter
add
mov
adc
rcl
mov
in
xchg
loopne
mov
fsub
loop
dec
sahf
sub
add
mov
sahf
jns
xor
fcmovnu
into
test
adc
pop
std
lock
mov
mov
sub
inc
sar
jp
std
dec
xor
retf
push
xor
sub
xor
push
stos
loopne
mov
and
cmp
xor
ror
jno
retf
sbb
cmp
jbe
jmp
pop
test
or
cdq
pop
sub
cs
dec
aas
fbld
add
add
gs
retf
xor
mov
repz
push
jl
loope
mov
mov
mov
add
push
sbb
dec
in
mov
xchg
jecxz
into
pushf
cmps
js
cmp
jnp
mov
(bad)
or
aaa
mov
(bad)
jl
(bad)
into
bound
mov
inc
stos
jle
add
jmp
jmp
scas
imul
sub
jmp
pop
aaa
pop
jnp
fnstenv
or
jecxz
aas
mov
mov
xor
and
ss
sub
retf
cwde
(bad)
ja
call
pop
add
dec
daa
dec
mov
cmp
jnp
and
push
sbb
xchg
sbb
fs
xchg
repnz
dec
shr
inc
dec
loopne
and
lods
push
out
xor
stos
(bad)
movs
sbb
std
(bad)
inc
pushf
adc
scas
push
push
ja
std
mov
movs
xchg
sub
stos
adc
jle
push
cdq
shl
pop
jo
imul
out
scas
mov
stos
cmp
mov
cs
pop
cmp
nop
imul
adc
push
test
lods
test
mov
pop
or
lock
fmul
outs
mov
in
mov
xchg
and
aaa
jae
and
and
sub
push
mov
leave
lods
jmp
mov
imul
out
sub
cdq
loope
xchg
(bad)
mov
les
iretw
xchg
pushf
adc
test
mov
dec
cmp
xor
mov
add
adc
sub
or
xor
fs
aas
xchg
call
cmp
mov
test
sbb
cmp
aas
jl
ins
movs
ficomp
rcl
stos
lods
sahf
scas
push
aad
push
std
mov
lds
inc
and
pop
jle
sar
xchg
adc
mov
out
sbb
ret
enter
xlat
not
xchg
mov
push
cs
push
jbe
inc
jecxz
adc
in
mov
xor
mov
xchg
cmp
ret
sbb
push
mov
add
push
mov
daa
iret
or
leave
div
or
cmp
jne
fidiv
mov
adc
cmp
enter
clc
fnstsw
test
push
pop
ror
bound
sbb
adc
enter
rcl
sbb
push
mov
rcl
dec
ins
sbb
sar
mov
xor
in
enter
mov
mov
adc
mov
jno
adc
jmp
loop
aad
jns
mov
sbb
cld
rcr
xchg
dec
lods
xor
aaa
add
inc
xor
push
or
adc
push
pop
inc
arpl
in
xchg
outs
mov
jno
shl
pop
push
pop
push
sbb
adc
fwait
xchg
repz
add
xchg
ja
rcl
cmp
loop
and
push
jne
mov
and
cs
mov
push
test
pop
push
ror
xor
mov
call
push
cmc
and
jb
(bad)
sbb
dec
cmp
cld
sub
lods
movs
(bad)
outs
out
sbb
push
push
dec
fnstsw
mov
sub
pminub
ror
jg
jb
add
cs
lea
iret
sub
push
lock
loopne
adc
xchg
adc
and
xlat
das
xchg
(bad)
lds
push
(bad)
bnd
xchg
mov
xchg
fldcw
popa
xchg
xchg
inc
add
or
mov
stos
cmp
jg
cli
xor
hlt
mov
mov
jo
aas
rcl
xchg
scas
mov
sub
mov
and
aam
in
imul
mov
rcl
repz
mov
adc
bound
ja
xor
cs
jae
cdq
mov
push
ss
mov
add
pop
bound
adc
popa
clc
or
sbb
popa
jp
in
dec
inc
sub
nop
mov
ss
mov
ror
push
int3
sub
fwait
push
jmp
fcomp
dec
xchg
jne
add
aad
imul
jno
call
cmc
nop
add
sub
add
rol
jb
je
push
adc
sub
xlat
rol
adc
cmps
xchg
or
dec
ins
arpl
or
(bad)
pop
or
and
mov
jl
pushf
cli
and
push
fsubr
jne
mov
pop
ret
xchg
push
sbb
nop
xor
jle
adc
mov
pop
sub
and
inc
mov
test
ret
cmp
ss
imul
or
fimul
xlat
out
inc
imul
dec
inc
xchg
xchg
fdivr
ss
aam
movs
out
jns
popf
jnp
js
(bad)
jmp
mov
add
or
lea
pop
sbb
out
test
inc
jae
ja
das
in
loope
mov
mov
cmp
repz
test
xor
jg
(bad)
fidivr
retf
ss
sub
outs
outs
push
(bad)
into
sub
cmps
ja
sub
aad
dec
lahf
and
add
aas
in
adc
leave
and
lock
fsub
outs
in
hlt
mov
stos
out
jl
xchg
xor
cmps
imul
pop
into
comiss
in
and
dec
cmp
std
jg
(bad)
loop
mov
mov
lods
inc
pop
ins
jmp
lods
adc
in
int
push
cmp
repnz
push
ja
pop
xor
mov
sub
and
push
cdq
jp
mov
ret
adc
outs
rcl
stos
mov
sbb
ins
pop
xchg
add
mov
in
(bad)
movs
idiv
retf
and
inc
dec
sbb
test
jp
paddsw
mov
lea
xor
out
fnstsw
and
or
(bad)
pop
shl
test
fstp
les
je
fwait
(bad)
aam
and
out
in
xor
sub
scas
fadd
ret
xchg
push
mov
inc
fisub
retf
mov
ss
dec
jae
sub
xchg
mov
jg
or
add
frstor
fdiv
pop
enter
sahf
mov
and
dec
push
mov
mov
out
adc
cmovs
movs
dec
(bad)
fucomp
movs
mov
xchg
push
rsqrtps
sahf
jmp
inc
shr
ins
call
mov
jl
movs
iret
and
mov
jno
leave
std
(bad)
dec
push
dec
sar
cmp
pop
or
jmp
lds
ds
xchg
out
stos
mov
xchg
ficomp
dec
in
inc
xor
inc
sub
jmp
mov
ins
adc
jb
test
in
popa
add
push
dec
repz
jecxz
mov
dec
cs
jmp
outs
clc
inc
add
outs
cmp
call
imul
add
(bad)
xchg
mov
sbb
fwait
xchg
mov
fs
arpl
aas
nop
mov
stos
imul
pop
sbb
pop
sbb
or
div
xchg
jo
add
adc
cmps
pop
pop
push
ins
adc
sub
les
mov
outs
call
xor
shl
mov
xor
adc
push
fsubrp
fisttp
sub
retf
sbb
xchg
jbe
sbb
mov
rep
ret
mov
loop
jecxz
scas
es
add
add
sbb
pop
pop
sbb
jne
popa
adc
adc
push
das
in
icebp
lahf
daa
cmps
rcr
movs
(bad)
ss
pusha
and
leave
das
retf
ins
movs
mov
(bad)
shr
sub
bound
(bad)
pop
js
jp
pop
xchg
adc
in
outs
pushf
adc
fisub
jl
push
cmp
addr16
inc
leave
sub
retf
pop
shl
jb
and
popa
xchg
sbb
jp
test
push
lahf
pop
ficomp
sbb
imul
push
inc
nop
stos
jmp
or
mov
adc
ins
and
jmp
mov
ins
mov
(bad)
mov
mov
dec
jmp
sub
fcomp
push
pop
sahf
cs
push
dec
fisttp
mov
ret
add
data16
pusha
jecxz
lds
dec
mov
dec
sub
or
jmp
mov
idiv
push
mov
jmp
pop
aaa
hlt
arpl
js
fbld
neg
mov
or
stos
sbb
sbb
adc
pop
or
outs
add
stc
cmp
push
push
je
fnstsw
jp
lahf
test
push
mov
push
and
mov
xor
mov
cmps
je
inc
pop
lds
sub
(bad)
push
aam
jbe
add
add
push
sub
push
scas
mov
sbb
ss
push
movs
adc
xor
fiadd
and
retf
mov
jp
sub
fsub
inc
mov
mov
jecxz
mov
push
sub
xor
push
pop
pop
daa
adc
push
int
xor
out
push
inc
stos
std
call
pop
jnp
das
les
lock
ret
mov
test
cmp
loop
push
mov
dec
stc
push
lahf
jge
sub
sbb
xchg
sbb
jg
loop
sub
push
aas
push
pushw
xor
xchg
mov
into
das
jle
cdq
dec
mov
mov
in
sbb
(bad)
repnz
test
inc
rcl
mov
mov
jno
jmp
stos
loop
fucomp
inc
call
cwde
xchg
loop
sahf
pop
xchg
jle
pop
mov
mov
add
ins
enter
mov
or
in
in
push
shl
jae
mov
jne
(bad)
cmp
sub
outs
cwde
add
cli
mov
dec
out
jbe
xor
rol
bound
push
loope
xchg
jge
lahf
test
mov
cmp
xor
mov
mov
pop
cmps
cmp
test
std
popa
dec
adc
jecxz
fistp
and
in
sbb
cli
call
and
fst
(bad)
cmp
ror
jo
xchg
imul
stos
jg
and
adc
mov
jae
out
in
ja
test
cld
mov
xor
cs
sti
mov
outs
pop
imul
addr16
inc
or
push
sub
fsubr
ds
xchg
inc
rol
xchg
inc
xchg
imul
pop
shr
call
jl
pop
psubsw
retf
jecxz
fwait
mov
pop
push
scas
adc
mov
mov
ds
addr16
pushf
in
adc
xchg
mov
adc
fcom
or
scas
sbb
aad
test
sub
xchg
mov
jmp
aam
push
sub
in
iret
fst
sub
cmp
iret
test
lods
sbb
dec
mov
mov
mov
mov
cld
stos
out
jle
push
pop
repz
(bad)
pop
out
outs
(bad)
stos
xor
or
scas
jp
(bad)
enter
pushf
mov
cmp
leave
(bad)
sbb
jg
mov
loope
repnz
lock
push
loop
ror
cmp
jbe
into
dec
daa
dec
adc
cmp
pusha
mov
push
jb
popa
out
xlat
xchg
ret
adc
dec
sub
mov
inc
pop
pop
lods
cmp
xchg
outs
out
pop
xchg
cwde
iret
mov
je
dec
fadd
mov
xchg
mov
add
jge
call
aad
out
push
sub
mov
imul
sahf
dec
mov
in
jmp
mov
pop
loopne
fdiv
mov
test
jns
jno
inc
jmp
push
sbb
fsub
or
add
adc
mov
xchg
std
stc
loope
push
cmp
push
imul
ins
jno
adc
loopne
dec
(bad)
sbb
mov
inc
mov
and
(bad)
mov
push
xor
sub
xchg
scas
rcl
repnz
ins
retf
jb
gs
dec
rcl
bound
test
(bad)
push
cmp
pop
sub
imul
sbb
dec
push
lds
push
pminsw
adc
in
cdq
jns
mov
cwde
lods
inc
xchg
sahf
mov
xchg
js
pop
push
es
mov
xchg
jle
hlt
ficom
jns
popf
jae
mov
mov
push
iret
dec
imul
repnz
leave
mov
sti
adc
test
sbb
mov
cs
sbb
or
inc
and
pop
dec
scas
shl
sbb
out
xor
xchg
inc
and
sub
and
jg
sub
sti
sbb
popa
(bad)
push
push
mov
push
stc
shl
pop
lds
inc
sbb
inc
gs
cwde
retf
mov
dec
xlat
jmp
outs
test
adc
inc
push
or
sub
outs
push
imul
sahf
jl
pop
pop
and
(bad)
shl
xlat
daa
and
imul
fbld
sbb
jbe
xor
shr
sar
and
iret
call
mov
sbb
out
push
cmp
push
mov
mov
push
cmc
cwde
sahf
dec
mov
out
ret
xor
xor
xlat
mov
addr16
add
pop
inc
iret
push
and
jo
mov
inc
cli
(bad)
jmp
mov
lods
cmp
jns
call
loop
dec
push
in
retf
(bad)
and
repnz
cmps
pusha
stos
cld
lock
(bad)
movs
fnstsw
and
iret
mov
jnp
dec
jmp
stos
inc
das
sar
xchg
sub
test
sub
inc
loopne
jo
jae
add
push
mov
jmp
mov
shr
inc
scas
add
xor
rcr
lea
push
test
popf
ds
into
push
mov
jle
cdq
stos
add
fcmovbe
jae
sbb
pop
repnz
das
int3
jns
cmp
jg
cmc
add
dec
mov
dec
bound
sbb
pop
neg
push
adc
adc
inc
test
imul
aaa
sbb
jp
sub
sbb
mov
cs
ret
les
mov
stos
jg
(bad)
or
jmp
jne
clc
lods
jb
int
cmp
dec
test
jecxz
in
mov
jmp
hlt
leave
adc
inc
cmps
movs
mov
iret
mov
push
fldcw
jae
cwde
cmp
std
jl
inc
fcomp
inc
push
add
mov
fst
cmps
or
push
jl
mov
stos
mov
push
cmp
sbb
push
and
xlat
ds
cld
out
test
jb
cmp
outs
adc
popa
ror
inc
int3
ins
push
daa
push
xchg
add
add
mov
pop
in
(bad)
scas
jae
daa
cmps
leave
stos
sbb
dec
push
imul
sti
cmp
aas
and
push
adc
adc
repz
cmp
xor
popf
xchg
or
add
in
inc
push
adc
not
mov
add
inc
je
adc
dec
test
cdq
addr16
mov
movs
push
mov
sar
dec
cmp
aas
(bad)
movs
xor
pop
dec
sahf
xchg
repz
adc
jae
xchg
leave
or
retfw
in
or
jl
mov
push
out
jnp
in
and
test
inc
imul
push
out
ja
add
mov
std
or
mov
movs
aaa
stos
(bad)
mov
cmp
xor
cmp
lock
mov
out
mov
jl
nop
jnp
(bad)
adc
mov
jns
push
xchg
cld
xor
arpl
mov
mov
add
(bad)
cmp
pop
xchg
or
jmp
xchg
data16
cmps
(bad)
xor
mov
mov
stc
lods
mov
pop
or
addr16
xchg
adc
sub
xor
loopne
repnz
les
xchg
cmp
pushf
imul
cs
inc
loope
add
jp
or
fcomp
repz
(bad)
dec
adc
cmp
xchg
cmps
pop
cmp
xchg
scas
repnz
lods
mov
arpl
inc
mov
dec
mov
(bad)
clc
ja
stos
pop
mov
and
mov
jns
mov
js
out
test
adc
div
xlat
lods
xor
jle
int
rcr
pop
and
mov
push
in
test
cld
add
mov
dec
or
xchg
mov
les
or
add
daa
sbb
std
les
push
(bad)
mul
icebp
xchg
sub
aam
push
loop
xchg
or
cmp
ret
dec
sahf
repnz
std
in
inc
(bad)
mov
dec
sbb
daa
aaa
pop
push
push
inc
mov
sub
pop
sbb
in
and
mov
pop
jbe
jb
jp
sbb
adc
add
(bad)
mov
jp
xchg
pushf
arpl
cmp
daa
cmc
(bad)
mov
jno
out
fild
mov
mov
and
cs
adc
shl
cmps
sub
and
xlat
pop
ins
dec
std
(bad)
out
clc
outs
pop
pop
loope
ret
sbb
mov
pop
add
and
pop
scas
dec
xchg
pop
and
jne
aam
jmp
enter
in
jge
arpl
pop
mov
push
sbb
bound
inc
sbb
mov
ficom
test
fisub
xor
mov
or
popf
movs
sbb
fistp
loopne
in
push
fwait
sub
imul
pop
mov
test
int3
push
out
xchg
ret
pop
sub
or
mov
jle
cli
push
sub
mov
popa
cmp
mov
aad
dec
sub
pop
lods
pusha
push
je
ins
or
sub
add
mov
icebp
xor
mov
cwde
cmps
push
jnp
or
inc
das
out
jbe
outs
das
add
rol
push
test
(bad)
paddusb
fnsave
add
cdq
sahf
movs
cmc
mov
mov
fld
imul
jmp
int
push
dec
xor
adc
call
xchg
ror
cmp
es
imul
cmps
cs
inc
je
je
mov
pop
fdiv
inc
push
pop
test
stc
in
mov
leave
cmp
xchg
jo
or
idiv
loopne
inc
mov
cmp
(bad)
xchg
movs
inc
adc
fs
(bad)
ret
push
mov
adc
idiv
and
(bad)
xor
retf
in
fidivr
mov
mov
adc
jmp
jnp
cwde
clc
int
and
inc
or
cs
pushf
loop
jecxz
add
std
and
arpl
push
out
test
popa
fldenv
jo
xchg
push
mov
inc
arpl
jp
dec
sub
and
and
(bad)
stos
movs
sbb
movs
icebp
lahf
add
cmp
sbb
jg
dec
outs
push
icebp
ins
add
cwde
xor
aad
iret
mov
mov
mov
(bad)
xor
xchg
in
enter
adc
sub
inc
retf
lods
pop
and
popa
adc
mov
repnz
pop
retf
cmp
or
xchg
retf
aas
imul
sub
mov
mov
fidivr
lds
sub
inc
idiv
sbb
pusha
clc
imul
out
(bad)
adc
fadd
test
jbe
sahf
push
repnz
rcl
cmps
sub
adc
and
sub
lods
into
mov
jl
out
sub
push
sub
mov
fisubr
sbb
sub
sbb
mov
jle
inc
mov
and
arpl
in
ins
pushf
push
and
into
sbb
mov
inc
add
leave
mov
sbb
retf
int3
or
(bad)
(bad)
add
dec
sub
sahf
sahf
add
lahf
or
inc
xchg
and
scas
jbe
mov
add
into
jbe
movs
xor
stc
mov
test
add
push
sbb
ror
clc
add
icebp
mov
xlat
repz
pop
mov
adc
push
retf
ja
mov
jns
xchg
in
jno
dec
scas
xchg
mov
jl
push
dec
sar
ja
mov
hlt
call
repnz
imul
cmp
in
push
and
pop
push
inc
lahf
imul
pop
cld
aad
hlt
(bad)
jno
inc
mov
push
and
jecxz
xor
or
(bad)
hlt
cmp
and
pop
test
or
pop
ins
push
mov
or
inc
test
test
and
std
jl
xor
add
(bad)
mov
cmp
mov
or
loop
fprem
clc
test
rcr
iret
and
adc
and
ss
or
out
dec
sahf
mov
xor
dec
hlt
movs
repz
int
dec
ror
push
xor
push
test
test
popf
stc
jle
nop
pusha
mov
mov
rcr
pop
xchg
mov
or
fbld
icebp
arpl
ins
jge
xor
in
out
sbb
lea
add
xchg
ror
adc
mov
movs
imul
sbb
repnz
sub
xor
xchg
loope
in
scas
dec
jge
les
lock
(bad)
xchg
movs
mov
rol
popf
xchg
loop
push
outs
loope
stos
add
cwde
xlat
inc
jmp
jg
cwde
aas
mov
mov
xchg
aam
aas
push
jg
pop
aad
jbe
sti
adc
mov
(bad)
cmp
mov
push
shl
mov
aad
jmp
xchg
jb
push
mov
mov
gs
std
or
adc
sbb
dec
and
ret
clc
lea
adc
arpl
pop
mov
add
mov
sti
sbb
jle
add
cmp
fiadd
fsub
mov
jmp
jmp
scas
cmp
mov
repz
ret
aaa
mov
mov
es
inc
add
shl
stc
les
jmp
mov
ficom
mov
push
mov
out
jl
mov
out
add
ds
push
dec
cmp
icebp
aaa
out
inc
ror
shr
outs
aam
lods
adc
sub
std
mov
xchg
and
test
inc
xor
hlt
retf
(bad)
adc
xchg
std
pop
sub
pop
or
int
mov
pop
or
fidiv
in
cmc
(bad)
mov
jmp
stos
daa
loope
xchg
gs
paddq
mov
push
add
or
xor
iret
mov
sbb
mov
cmp
adc
push
add
pop
mov
repz
leave
inc
mov
push
mov
add
or
rol
inc
mov
shr
jecxz
leave
dec
add
out
jmp
xchg
or
mov
xchg
repz
mov
xor
addr16
inc
push
hlt
cvtpi2ps
mov
pop
dec
mov
add
lds
pop
and
daa
clc
cli
adc
push
mov
fild
sub
mov
pop
hlt
adc
or
fild
mov
sub
jno
add
and
fld
inc
or
mov
sbb
faddp
push
pop
je
call
pop
adc
popa
ss
sbb
shl
popa
xchg
sub
add
adc
sar
clc
ds
inc
add
inc
xchg
cmp
inc
adc
scas
or
xor
or
adc
fadd
push
mov
mul
add
xchg
mov
xchg
jge
cmps
mov
xor
icebp
mov
retf
call
loopne
jecxz
shl
jge
add
or
imul
pop
xchg
outs
xchg
mov
push
and
sub
fbstp
jno
test
sub
(bad)
jmp
mov
pop
nop
push
in
das
pop
dec
cdq
aas
and
cmp
jno
or
mov
inc
xchg
push
add
mov
stc
mov
or
jle
pop
sbb
in
ret
repz
call
pop
in
or
test
jno
ss
inc
xor
jne
mov
movs
outs
mov
sbb
hlt
loop
pop
jmp
jno
(bad)
ins
push
sbb
cmp
movs
(bad)
fdiv
xchg
add
call
dec
mov
inc
push
aas
dec
or
xchg
xchg
outs
out
mov
loopne
add
xor
jmp
xlat
pushf
sub
sbb
gs
loop
(bad)
popf
mov
adc
pusha
cmp
cmp
or
xchg
mov
or
lahf
jbe
push
cmp
je
jg
nop
int3
jecxz
out
cli
scas
pop
jmp
or
nop
sbb
jmp
xchg
rcr
mov
mov
cwde
add
jno
xlat
mov
add
je
scas
ins
mov
enter
push
xor
outs
shr
xor
mov
hlt
cs
(bad)
sub
mov
pop
ins
enter
fisttp
add
cmp
xor
or
aad
and
retf
dec
sub
xchg
je
retf
hlt
daa
imul
jo
enter
xchg
jge
xor
scas
mov
sbb
repz
lods
jp
addr16
jp
mov
mov
xchg
test
pop
mov
aam
mov
jle
movs
or
xor
ret
xlat
xor
aad
mov
push
pushf
out
dec
repz
push
adc
mov
stos
aad
call
jo
jo
aas
cmp
jo
imul
inc
sbb
xchg
mov
pop
test
js
mov
push
mov
hlt
ss
dec
pop
sub
retf
cdq
mov
pop
(bad)
enter
arpl
add
push
mov
pop
add
aad
ds
sub
sbb
lods
or
rcr
mov
das
(bad)
mov
int
outs
mov
neg
aas
pop
loopne
fnsave
inc
and
sub
push
test
test
add
or
jmp
xchg
jnp
aas
dec
adc
xchg
add
addr16
into
div
push
fldenv
sub
cmps
xchg
mov
mov
std
fcomp
jo
xchg
cmc
jnp
pop
xor
(bad)
out
ss
fisub
xchg
jbe
aaa
add
movs
bound
inc
jmp
xchg
mov
and
popf
out
dec
mov
push
fwait
or
jno
clc
out
adc
outs
adc
fst
jne
sbb
ins
cmp
jecxz
jbe
bound
mov
inc
or
mov
cmp
jmp
mov
les
cmp
test
mov
std
jo
xor
sahf
nop
push
inc
movs
mov
test
xchg
fisttp
in
xchg
sub
push
shr
js
jmp
daa
push
and
neg
ins
fsub
ins
ja
jns
or
pop
mov
pop
push
lahf
sbb
mov
iret
push
in
push
jp
jbe
(bad)
cmp
test
call
ffreep
shr
rcl
pop
icebp
shl
jbe
test
icebp
xor
loope
fcom
add
inc
int
pusha
test
cmc
js
sub
das
ds
push
les
jnp
pop
stc
inc
pushf
xor
pushf
(bad)
mov
stos
xor
(bad)
mov
aam
int
cmp
(bad)
lds
pop
inc
jp
test
stos
adc
mov
mov
stc
pop
or
cmp
lods
dec
sbb
inc
lea
int
sbb
cmp
loope
les
push
push
jae
or
jecxz
adc
daa
hlt
mov
pushf
dec
ficomp
jnp
leave
shl
sahf
loope
mov
add
xchg
jae
out
jp
mov
dec
pushf
jnp
pop
arpl
mov
pushf
pop
jne
mov
mov
add
test
(bad)
ins
inc
mov
or
retf
(bad)
fsubr
out
add
movs
in
xor
push
test
jp
sbb
stc
pop
mov
ja
int
js
xchg
sub
mov
loope
ss
cmp
sbb
sahf
pop
rcl
pop
mov
xchg
jns
cmp
int
cmp
stos
les
and
fucom
out
repnz
pop
and
xlat
sub
aam
push
out
cld
xlat
stc
(bad)
out
fs
fbld
inc
jmp
or
out
mov
cs
test
test
out
(bad)
movzx
pop
or
push
mov
and
sbb
(bad)
cmp
movs
cmp
cs
out
mov
and
add
std
nop
jnp
xor
pop
push
push
pusha
fnstsw
jge
mov
jge
push
adc
dec
pushf
jbe
push
xor
or
adc
and
inc
shr
jns
xchg
jmp
test
popf
add
mov
adc
mov
out
shr
neg
jmp
cld
fld
or
and
mov
ficomp
jmp
repnz
fld
std
lods
sti
iret
call
adc
xchg
bound
stc
or
or
xlat
adc
sbb
lds
adc
dec
mov
retf
in
push
lahf
mov
inc
or
jg
mul
cmp
out
(bad)
adc
sbb
jle
mov
xor
dec
das
in
dec
dec
lods
aad
pop
jp
add
icebp
mov
nop
repz
scas
into
or
mov
outs
pop
lods
(bad)
fprem
sub
mov
jp
mov
mov
mov
pusha
mov
jae
in
lods
and
or
addr16
repnz
std
and
jmp
std
sbb
add
popf
dec
add
out
sbb
jne
rcl
dec
inc
jge
or
inc
add
stos
sub
adc
arpl
xchg
jmp
daa
repz
xchg
or
icebp
cwde
int3
(bad)
mov
inc
cld
push
fwait
dec
and
sbb
xor
push
xor
jo
or
(bad)
push
imul
gs
sbb
push
jmp
dec
mov
xchg
push
test
(bad)
push
fwait
ins
add
sar
pop
pushf
fnsave
xlat
lods
add
cdq
jb
jb
jb
std
add
ins
cmps
fldenv
push
pop
ret
push
push
xor
aaa
into
xchg
and
mov
out
scas
add
sub
push
inc
push
jecxz
dec
mov
stc
sbb
shr
pop
popf
cmp
mov
repnz
(bad)
(bad)
push
imul
fst
retf
mov
or
xor
xor
mov
in
lahf
adc
repz
mov
cmp
fs
mov
repz
jbe
out
cmp
cmc
nop
fidivr
arpl
xchg
mov
jae
ja
popa
mov
(bad)
pop
xchg
test
cmp
adc
sub
xchg
xchg
cmp
push
pop
imul
cmp
jmp
les
cmc
push
adc
call
or
and
xchg
pop
lods
aas
push
les
(bad)
ins
xor
dec
lods
xlat
mov
retf
movs
jg
mov
jge
push
jl
xchg
cmc
jmp
push
cwde
scas
rcl
shr
adc
mov
cmp
sub
jb
shl
std
ins
stos
addr16
shl
mov
sti
rcr
adc
push
add
data16
push
test
dec
jle
jmp
jb
mov
das
sub
dec
inc
ds
fstp
loope
pop
out
clts
mov
dec
push
mov
fidivr
in
out
mov
lds
leave
arpl
adc
push
in
sbb
adc
(bad)
cmp
sub
das
test
aaa
adc
sub
faddp
stos
ins
push
frstor
push
sub
popf
loop
push
aas
mov
mov
cdq
sbb
aaa
jmp
jl
push
test
sub
out
sahf
inc
add
repz
iret
lahf
xlat
mov
loope
aaa
xor
xor
adc
out
dec
or
mov
mov
(bad)
add
pop
pusha
cs
div
mov
fcom
daa
daa
sub
rol
scas
bound
xor
or
pop
repnz
retf
push
xor
mov
shl
xchg
daa
loop
lds
push
stos
cwde
retf
lgs
push
mov
mov
imul
sbb
dec
fidiv
std
cli
mov
ds
pop
into
fdivp
mov
out
idiv
xor
jl
pop
mov
add
hlt
ja
fstp
add
sub
and
mov
xor
adc
mov
lea
retf
shl
fs
push
call
lods
dec
out
jmp
mov
add
movs
push
xlat
xlat
ins
cli
stos
sbb
ja
inc
xor
add
call
call
lods
out
jg
sbb
mov
imul
(bad)
and
sti
std
jae
add
repz
fadd
fwait
mov
sbb
push
mov
lods
inc
push
adc
add
adc
push
(bad)
mov
rol
xor
inc
retf
iret
push
cli
js
in
(bad)
movs
addr16
cmp
jmp
pop
xor
xchg
push
test
fwait
dec
lods
inc
dec
mov
jne
jle
jp
leave
outs
xor
lods
or
je
(bad)
pop
call
push
aam
mov
in
jmp
push
sub
inc
cwde
xchg
xchg
pusha
lods
dec
pop
cmp
jae
inc
aam
sbb
fs
in
inc
pop
rcl
adc
inc
jp
cmp
int3
jmp
shl
xchg
stos
jp
mov
loop
jne
pop
and
ja
dec
mov
dec
jle
mov
imul
pushf
jmp
or
mov
sbb
or
fidiv
mov
mov
dec
jg
dec
pop
cld
xor
mov
cmp
adc
sti
dec
ret
int
fucompp
fidivr
jnp
or
or
lea
add
data16
add
shl
add
ret
adc
outs
retf
add
fnsave
inc
sub
ds
scas
cmp
or
push
mov
aam
xchg
lahf
xor
pushf
outs
das
and
pop
ror
sbb
clc
xchg
(bad)
fdivr
adc
adc
cmp
mov
mov
add
cld
fmul
jno
lds
lds
rcl
jmp
in
adc
or
pop
pop
fisttp
inc
call
dec
imul
sbb
pop
hlt
xchg
push
and
inc
cmp
xlat
push
mov
dec
cdq
std
xchg
xchg
xlat
mov
xchg
fs
retf
(bad)
fisub
push
mov
mov
sbb
int
jno
inc
(bad)
idiv
jmp
(bad)
pop
sub
inc
dec
repz
fild
fidivr
in
lock
in
cmp
dec
mov
pusha
add
xor
stc
xor
enter
cmp
loope
inc
sahf
pusha
add
mov
mov
xor
arpl
sbb
mov
stos
xchg
cmp
loope
sub
and
imul
imul
out
mov
(bad)
ftst
jb
int
and
inc
pop
test
mov
mov
inc
mov
cmp
outs
inc
pop
clc
shl
fcmovne
in
push
sbb
ins
pop
push
and
inc
xor
inc
stos
out
xchg
dec
nop
cmp
fst
and
add
and
push
(bad)
scas
mov
ja
pop
xor
in
lods
adc
lods
lods
(bad)
push
fistp
add
test
dec
jno
dec
cs
mov
mov
js
pop
or
out
imul
mov
push
(bad)
outs
add
aam
fild
cmps
cmc
adc
cmc
cmc
dec
mov
mov
lock
sub
push
fwait
rol
jge
adc
dec
js
xor
arpl
(bad)
sub
add
gs
cmp
das
aam
pop
stos
jg
push
pop
(bad)
sbb
movs
mov
fild
pop
adc
test
adc
push
mov
mov
in
aas
(bad)
sub
out
outs
push
dec
mov
inc
(bad)
mov
adc
lds
loop
and
push
shl
sbb
xchg
xchg
pop
unpckhps
popa
jns
fiadd
or
mov
fdivp
loope
outs
xchg
(bad)
or
dec
jl
ret
push
adc
sbb
movs
in
js
add
jno
mov
xor
sbb
out
xor
popf
and
or
sahf
ret
mov
adc
cs
push
loopne
push
rol
fnstcw
or
inc
add
punpckhwd
xor
jp
nop
cmp
and
imul
sar
enter
cli
mov
fsub
push
mov
mov
sahf
sbb
stos
mov
mov
iret
adc
adc
hlt
pop
std
adc
xchg
mov
cmp
nop
push
lea
test
lds
xor
mov
adc
retf
and
enter
jp
iret
xor
sub
rol
cmp
loop
movs
sti
pop
cmp
sbb
clc
or
sub
leave
add
push
les
(bad)
popa
jmp
fnstsw
enter
push
mov
loopne
dec
push
or
xchg
sar
ss
xchg
(bad)
and
sub
mov
cmp
jle
push
add
cs
sti
and
iret
mov
je
into
cli
mov
cwde
ins
aas
cmp
jg
mov
sub
bound
dec
push
cmp
arpl
sahf
into
clc
loopne
mov
xchg
or
push
or
outs
or
mov
dec
xchg
out
sub
loopne
popa
shr
in
cmp
jno
or
jg
mov
inc
enter
push
addr16
in
mov
mov
cmp
jne
popf
fs
aam
mov
hlt
mov
inc
push
pop
xchg
loope
mov
fdivp
out
push
stc
movs
test
dec
clc
mov
sub
jle
rcr
dec
or
mov
sahf
loop
cdq
mov
cli
inc
pop
cmp
jmp
add
and
repz
push
in
int
dec
and
daa
fisubr
cmps
bound
push
dec
bound
xor
sub
int3
fiadd
lea
repnz
sbb
adc
in
sub
xor
mov
or
mov
mov
adc
cmp
(bad)
mov
out
jmp
pop
bound
pusha
lods
mov
je
dec
repnz
call
and
add
mov
(bad)
pop
xor
dec
pop
rol
je
arpl
movs
push
fld
mov
pop
mov
movs
test
push
ins
repz
mov
in
aam
retf
and
or
jmp
fwait
jg
call
or
add
repz
xor
jecxz
or
aaa
inc
ins
sbb
jo
(bad)
mov
outs
xchg
dec
out
cmp
adc
push
add
xor
or
pop
retf
(bad)
cli
inc
and
dec
mov
int3
xor
inc
jnp
(bad)
inc
push
adc
(bad)
gs
cmps
sub
dec
inc
aam
sar
jp
mov
jnp
out
sbb
add
mov
adc
mov
aam
fimul
das
xchg
cmp
push
sbb
pop
cmp
call
sub
cmp
scas
das
inc
xchg
cmp
lods
cmps
adc
adc
jno
int
mov
add
fdivr
pusha
mov
(bad)
fsqrt
push
cmps
xor
jmp
lds
(bad)
xor
mov
out
scas
dec
sub
loopne
shl
pop
cmp
aaa
div
outs
cmps
popa
xor
or
bound
sbb
and
movs
sub
test
xchg
xor
add
inc
dec
push
nop
dec
ds
and
cmps
pushf
loop
rcl
hlt
cmps
pop
fwait
repz
leave
pop
sub
and
add
inc
and
jne
xlat
mov
arpl
xchg
dec
loope
scas
add
sub
cmp
leave
mov
jp
mov
or
inc
inc
and
movs
(bad)
xor
mov
les
stos
in
pop
cmc
cmp
mov
xor
mov
std
int3
gs
out
or
mov
call
int
mov
cwde
jne
punpckldq
inc
fld
sub
test
stos
pop
cmp
pushf
jno
sub
xchg
pop
mov
jmp
jge
xor
add
(bad)
mov
pusha
gs
jne
mov
mov
sub
push
scas
leave
leave
lea
outs
sub
jb
stc
aam
jmp
sbb
out
cmp
sti
mov
jmp
push
mov
cwde
mov
dec
stos
shr
mov
or
pop
cld
dec
enter
call
add
mov
ret
jecxz
out
lods
ds
daa
jo
imul
rcl
cmp
bound
lea
xchg
lods
dec
mov
fsubrp
mov
fdivr
push
retf
push
leave
test
movs
jne
cmps
repnz
cmp
mov
icebp
hlt
cmp
(bad)
mov
stos
mov
fbstp
maskmovq
cmp
outs
xchg
jg
jle
(bad)
movs
mov
out
out
mov
pop
jnp
call
das
mov
(bad)
xor
out
sub
mov
mov
mov
jae
clc
and
jns
adc
dec
sbb
jecxz
imul
mov
mov
lods
shl
es
pop
mov
jb
scas
hlt
cld
fs
sbb
xor
test
dec
ret
in
cmp
pop
(bad)
in
jge
mov
jecxz
xchg
adc
xlat
sar
fisttp
std
adc
sub
ror
(bad)
int
and
data16
test
and
inc
inc
cmc
inc
xchg
daa
cmp
aas
push
mov
sub
cmp
cmp
cmp
mov
push
cmp
repz
add
jns
fs
mov
and
or
bound
jb
aaa
mov
cmc
cmp
leave
sub
loop
jge
vpmacsww
div
and
xchg
xor
out
sub
fcmovnbe
ins
mov
jmp
fs
out
or
retf
cs
cdq
mov
xchg
(bad)
sti
repz
cmp
icebp
movs
cmp
pop
fld
ret
mov
pop
add
xchg
mov
jge
mov
mov
pop
sti
pop
and
cmp
jmp
xchg
movs
in
(bad)
sbb
repz
xchg
or
dec
test
inc
adc
jmp
jb
(bad)
push
push
dec
mov
sbb
adc
mov
pop
pop
shl
jp
call
mov
dec
jge
inc
mov
int
sbb
retf
cmps
inc
fdivr
xor
xchg
mov
stc
mov
fiadd
les
enter
jmp
dec
data16
pop
mov
mov
imul
sub
dec
sbb
mov
outs
mov
or
sti
or
push
jge
movs
xchg
dec
cmp
fld
pop
sbb
jbe
and
rcr
(bad)
fwait
adc
retf
adc
div
sub
push
fdivr
inc
push
jg
sbb
and
cli
jmp
aam
scas
push
jb
in
and
lea
mov
jmp
dec
jmp
repz
aad
stos
push
jg
leave
jae
xchg
cmp
and
mov
pop
push
xchg
mov
sbb
sahf
std
xchg
push
push
ret
mov
test
sub
outs
retf
push
xacquire
loope
call
and
xor
loope
stos
pusha
push
and
push
das
out
imul
aas
(bad)
pusha
pop
pop
adc
adc
pop
enter
cld
cmp
pop
mov
or
movs
adc
mov
data16
mov
pop
lahf
jp
xchg
jbe
imul
jmp
jmp
or
loope
leave
mov
ret
rol
aam
pop
mov
cwde
push
adc
cmp
das
pop
fstp
xor
xchg
jmp
in
adc
neg
jb
push
das
in
dec
cmps
enter
stc
add
enter
in
pop
std
xchg
call
push
fs
inc
leave
cmp
out
fisubr
jns
mov
nop
pop
mov
jne
mov
retf
jmp
xchg
push
pop
jl
out
or
cwde
lahf
or
pushf
lock
pushf
bound
or
and
lods
cld
jb
bound
push
mov
jl
gs
lods
pop
push
sub
push
(bad)
neg
mov
sbb
or
adc
jecxz
jb
repz
lea
adc
sub
add
rcl
cmps
or
movs
cmp
xor
dec
jle
ss
fwait
outs
cmp
test
sar
xor
bound
pop
jae
cld
dec
test
ja
test
retf
sbb
in
mov
imul
or
icebp
mov
jns
cwde
and
iret
(bad)
mov
arpl
mov
push
dec
cli
sbb
and
mov
sub
or
dec
jg
aaa
xchg
xchg
xchg
int
cwde
popa
(bad)
rol
das
fsubr
mov
in
and
fild
jo
loop
pop
jnp
test
sahf
ret
sbb
es
sub
and
lds
aam
stos
mov
shr
xor
sbb
sbb
add
add
stos
push
cmps
rol
inc
ins
and
adc
fcomp
mov
dec
fild
push
addr16
mov
xchg
iret
test
in
xchg
mov
sub
inc
shl
mov
push
xchg
fisttp
pop
inc
in
and
add
ins
(bad)
jno
imul
sbb
sub
xor
lods
in
or
imul
imul
push
pop
js
and
sbb
sti
sub
out
xor
loope
xor
test
jno
sub
add
sbb
(bad)
sbb
loope
push
inc
test
sbb
cdq
lods
(bad)
shl
or
or
test
ins
push
pop
push
int
scas
fiadd
push
push
sti
push
xchg
mov
jge
(bad)
out
pop
pop
jle
pop
jne
xchg
cmp
movs
ret
fs
sub
call
repz
add
fcom
add
push
jge
out
pop
xchg
adc
repz
rcr
cwde
loopne
jno
ins
xor
xor
(bad)
add
add
cmp
into
outs
shld
dec
lea
mov
jo
repz
icebp
sbb
out
xchg
dec
add
std
cdq
neg
or
cli
ret
int
pop
pop
fisubr
cwde
outs
loope
ret
cmps
fcomi
and
inc
in
inc
dec
mov
movs
push
sahf
rcl
jecxz
mov
mov
adc
aaa
cli
pop
pop
sahf
sub
mov
js
xchg
inc
sub
popf
and
movs
xor
xor
imul
sub
add
sub
test
test
outs
xchg
or
fcom
mov
(bad)
dec
dec
sbb
les
jp
xchg
lods
jbe
dec
std
push
repnz
fsubr
jl
or
mov
daa
js
inc
mov
enter
mov
call
jbe
and
mov
cli
dec
rcl
fld
inc
cmp
mov
inc
cwde
into
push
add
cmp
fild
push
cmps
add
pop
arpl
mov
imul
sub
idiv
cmp
adc
inc
sub
cmp
xchg
dec
push
sbb
mov
(bad)
sub
inc
movsx
pop
jo
fcomip
push
xchg
cmp
adc
xor
cmp
adc
pop
mov
ja
test
dec
hlt
xor
cmp
je
pop
and
mov
cmc
enter
jb
out
pusha
fisub
push
outs
xchg
push
imul
idiv
mov
aaa
inc
addr16
cmp
es
cmc
pop
sub
mov
mov
mov
mov
inc
jmp
js
cwde
adc
jne
sar
jmp
mov
stc
jo
jl
xor
fs
xchg
push
inc
in
adc
add
sub
pop
xor
inc
pop
lods
(bad)
popf
vunpcklpd
ins
mov
scas
sbb
push
add
jmp
xor
jmp
test
sbb
push
hlt
stos
jge
xor
mov
jl
into
or
outs
mov
dec
xor
sub
push
push
add
mov
pop
jge
jge
sti
fidivr
dec
dec
cmp
ficom
pop
inc
sbb
adc
cmp
adc
iret
or
out
rol
fimul
sub
mov
inc
lahf
lods
inc
inc
xchg
repz
test
(bad)
lahf
pop
jbe
ja
call
push
shl
imul
sub
mov
int3
stc
cmps
ficomp
jg
sub
mov
(bad)
cmp
cmp
retf
mov
mov
and
xor
mov
outs
sub
push
mov
cmp
push
or
sbb
daa
adc
lock
pop
fimul
aas
pop
dec
fs
pop
dec
sbb
aaa
sub
pop
sub
inc
outs
mov
inc
mov
push
push
aad
stos
xchg
pop
push
sahf
lea
push
mov
mov
call
mov
or
ins
pop
sbb
mov
pop
test
movs
push
daa
aad
mov
mov
jne
ds
test
call
pushf
das
enter
call
jne
movs
pand
ins
mov
push
test
push
mov
pop
js
dec
arpl
pop
xor
jns
jnp
aas
xchg
jae
(bad)
std
mov
jno
shl
fisub
pop
xchg
jbe
mov
lods
xchg
pop
in
xchg
inc
jne
push
int3
cld
adc
sbb
cmps
and
adc
cmc
cmp
je
sub
jbe
pop
fadd
aas
(bad)
xchg
cwde
dec
(bad)
enter
jns
out
iret
(bad)
aad
adc
xchg
aad
dec
mov
push
mov
jae
ret
jl
retf
jge
pop
and
nop
stos
xor
mov
dec
push
sbb
sbb
(bad)
mov
adc
xchg
inc
xchg
inc
(bad)
xor
int3
xor
jmp
xor
adc
mov
fs
mov
repnz
imul
test
or
dec
mov
out
mov
repnz
retf
loope
push
or
push
inc
xor
cmp
xor
xor
xchg
xchg
repnz
loop
mov
jl
into
adc
frstor
push
je
pop
sar
ins
adc
repz
ins
mov
(bad)
jge
fistp
xchg
or
jmp
ret
sub
cmc
out
pop
push
shr
jmp
(bad)
and
into
scas
sub
jp
jge
cmp
mov
sbb
in
aaa
and
xchg
cmp
lahf
icebp
or
adc
inc
pop
stc
push
ret
lods
sbb
mov
loop
das
push
jge
mov
int
fs
pop
jmp
(bad)
push
push
push
pop
out
enter
in
jp
test
mov
lods
test
jmp
std
(bad)
enter
adc
mov
les
movs
out
mov
into
or
or
clc
mov
sbb
loopne
jmp
not
mov
fwait
repz
scas
mov
push
bound
int
sub
movs
ficom
cld
sahf
fcom
jnp
lods
(bad)
repnz
imul
test
sbb
jmp
push
sar
mov
or
pusha
cmp
fdivp
and
inc
repnz
enter
cmp
test
or
mov
into
xchg
ss
lods
dec
mov
cli
push
aaa
loope
or
nop
push
out
inc
sub
xchg
(bad)
fimul
jle
jno
mov
(bad)
xor
gs
sbb
push
xor
outs
cmp
shl
sbb
xchg
xor
sub
mov
mov
fist
frstor
sub
inc
stos
scas
clc
xchg
loop
lods
lea
mov
out
jo
inc
rol
(bad)
sub
xor
test
fs
mov
sub
mov
inc
pop
out
je
add
in
lahf
inc
xchg
inc
repz
jl
sti
iret
push
add
pusha
mov
iret
jno
test
and
in
scas
jo
pop
mov
jno
shl
sahf
or
outs
inc
fcom
push
mul
outs
cwde
add
cmc
mov
and
ror
mov
je
das
mov
mov
adc
adc
jne
mov
xchg
mov
add
inc
mov
jecxz
mov
inc
mov
scas
ficomp
inc
xlat
sub
and
jmp
jg
dec
pop
rol
mov
sbb
mov
jns
ins
push
lods
inc
call
sub
xchg
xchg
lods
aad
add
mov
xchg
xchg
xor
push
stos
test
sub
lods
test
sub
push
rcl
mov
jo
retf
pop
(bad)
jecxz
push
popa
xor
fisttp
neg
sub
les
push
pop
iret
mov
ret
add
push
push
(bad)
add
add
mov
xchg
xchg
lods
fs
and
fdiv
pop
retf
lahf
jns
repz
arpl
jp
mov
sub
xchg
or
jecxz
iret
rcl
(bad)
sbb
les
mov
stos
sub
fadd
xchg
aas
stos
fdivp
dec
into
mov
sub
ret
stc
mov
div
mov
aas
add
call
imul
and
pop
int3
movs
out
cmp
sar
jae
fstp
mov
lock
xchg
xchg
dec
scas
stos
jns
xchg
cmp
sbb
jp
jno
scas
sahf
jne
pushf
mov
push
push
dec
xchg
push
inc
push
push
cld
cmps
loope
das
sub
jg
popa
and
lock
es
mov
or
jp
sub
pop
cmc
fstp
jmp
loope
in
jae
jp
(bad)
sbb
inc
test
cdq
jmp
loopne
adc
lock
xchg
retf
outs
mov
movs
xor
lea
mov
cld
rol
js
fst
je
ror
imul
loopne
(bad)
pop
outs
sar
lock
jbe
popf
loope
cmc
push
mov
and
pushf
fsubp
xor
pop
hlt
and
je
mov
repnz
aam
adc
xchg
cmps
clc
ins
int3
cdq
push
pop
neg
adc
adc
xor
frndint
mov
add
dec
cdq
or
dec
stos
sub
jle
lods
leave
sub
mov
or
aad
inc
cmp
stos
setp
push
push
popf
adc
popf
xor
data16
or
and
sbb
daa
or
clc
push
les
mov
mov
adc
in
aas
push
mov
call
xor
rcl
mov
adc
adc
aad
jo
jns
adc
add
pop
and
scas
jbe
std
pop
pop
push
fimul
add
inc
jg
mov
mov
sar
loop
hlt
int
popf
dec
cmps
pop
popa
fild
leave
into
inc
adc
ss
jnp
xor
jp
add
(bad)
scas
push
stos
inc
leave
cmc
jmp
fld
jp
cmp
mov
daa
push
daa
mov
ins
mov
ret
out
fldenv
rep
and
push
xor
aam
jbe
xchg
adc
jmp
push
inc
fs
mov
sub
jb
cld
jb
in
out
mov
jbe
xchg
mov
fld
ins
in
setns
loopne
addr16
mov
mov
cdq
mov
push
pop
movs
movs
xor
jnp
idiv
lahf
in
push
push
dec
sahf
sti
and
inc
int3
fist
jp
jmp
mov
nop
cmp
pop
and
inc
cld
or
pop
ror
or
ins
leave
(bad)
mov
repz
pop
or
scas
test
xor
test
sub
test
aad
inc
and
adc
push
cmp
outs
int3
sbb
sbb
nop
mov
test
out
adc
mov
aas
or
push
ret
lahf
mov
sbb
mov
mov
ret
mov
mov
clc
xchg
pop
inc
sahf
or
faddp
cmp
and
call
inc
add
pop
rol
and
repz
add
and
jecxz
lock
loope
or
and
stos
pop
mov
xchg
lahf
ins
data16
adc
adc
add
sar
int
push
dec
movs
push
imul
out
add
repz
lock
mov
sti
and
jno
ror
jle
repz
fmul
sti
dec
pop
neg
mov
lock
out
movs
out
or
push
shl
outs
scas
ss
rcr
fs
lds
int3
xor
add
xor
stos
dec
mov
push
jg
jb
sbb
push
and
mov
jo
pop
xchg
and
pop
mov
xchg
js
sub
pop
movs
arpl
or
inc
sub
int3
jg
aas
and
sub
add
cmc
add
sub
sbb
lock
test
xchg
xchg
sbb
dec
fdiv
into
or
rol
adc
mov
sub
(bad)
ror
std
jnp
movs
inc
idiv
test
push
rol
xchg
or
aam
imul
cmp
or
mov
mov
fdivr
lds
push
ins
mov
fistp
cld
mov
push
cmps
in
and
adc
and
ins
scas
cmp
add
mov
jne
jns
fstp
gs
popa
pop
xlat
jne
jae
mov
xlat
mov
into
(bad)
movs
fistp
mov
cbw
lock
and
inc
js
ins
mov
retf
sbb
pop
gs
and
dec
les
inc
sub
rol
clc
jl
test
jle
xchg
pop
mov
or
sbb
in
in
ret
mov
dec
stos
arpl
test
(bad)
mov
imul
pop
jmp
jmp
or
mov
xchg
jae
cmps
inc
in
xchg
ins
push
xor
mov
pop
add
and
nop
bound
inc
hlt
mov
mov
clc
push
cmps
mov
cmp
push
jb
in
jno
std
enter
cmps
lock
fadd
fcom
call
imul
fistp
movs
dec
mov
call
jmp
(bad)
nop
xchg
fcmovnb
js
cmp
mov
sti
mov
and
xlat
add
push
data16
rol
mov
neg
stc
jmp
das
inc
rep
push
sbb
popf
cmp
jp
xlat
test
mov
sbb
loope
scas
jmp
cmps
xor
out
icebp
mov
sub
sbb
xchg
addr16
jo
xor
retf
mov
into
std
sub
inc
shl
jp
inc
addr16
mov
icebp
stos
xor
xchg
pusha
or
push
movs
inc
or
(bad)
out
repz
stos
lods
scas
lock
adc
adc
and
stos
ja
adc
and
jg
or
leave
loop
dec
mov
es
add
push
jne
test
cmp
stos
int3
jge
sbb
fidiv
mov
jge
imul
repnz
addr16
xor
jg
push
cld
pop
lods
ds
in
cmc
out
test
aaa
std
out
mov
xchg
mov
jns
sbb
and
aas
inc
mov
cli
or
adc
scas
repnz
xchg
mov
xor
mov
(bad)
(bad)
fisubr
cmps
iret
test
jbe
imul
addr16
call
cmp
sub
dec
fstp
push
or
cmc
jbe
daa
pop
push
les
clc
sbb
test
xchg
das
imul
and
add
add
mov
loope
aad
sahf
repnz
xchg
mov
cdq
push
adc
js
mov
fldl2t
aam
inc
xchg
push
shl
mov
ja
je
sti
jmp
add
mov
adc
jne
sbb
bound
fs
test
ins
add
sbb
outs
xor
dec
nop
out
xchg
xchg
imul
add
cmp
sbb
jmp
cdq
and
push
fbstp
addr16
sahf
xor
cmp
xchg
mov
xchg
mov
xor
xor
sbb
mov
test
fisttp
sbb
pop
sbb
xchg
fdivr
mov
pop
mov
fs
mov
mov
xor
fs
mov
fwait
test
lahf
nop
sub
leave
lds
sbb
mov
adc
popa
pop
jle
inc
in
icebp
pop
into
add
ror
dec
lock
int3
outs
push
push
mov
hlt
test
lea
inc
jb
xor
jae
pop
mov
test
sub
cwde
movs
pop
std
fs
(bad)
mov
es
cdq
or
inc
call
jns
push
inc
push
mov
imul
mov
lock
movs
call
mov
and
in
lock
and
or
mov
mov
or
(bad)
out
in
fdiv
ins
mov
push
pusha
mov
jmp
dec
shl
or
push
sub
(bad)
pop
arpl
push
jg
mov
les
test
test
pop
inc
fcomi
xor
jecxz
pop
mov
inc
push
bound
retf
sbb
(bad)
cli
push
cmps
inc
mov
mov
dec
ror
ins
push
out
jp
scas
(bad)
mov
fidiv
push
inc
push
jg
xchg
dec
rol
add
mov
sahf
and
mov
shl
jnp
sub
test
out
inc
retf
add
repnz
dec
inc
cmovo
leave
jns
arpl
xor
cmp
push
es
adc
xor
mov
mov
outs
cmc
scas
mov
adc
stos
or
retf
xor
in
xchg
inc
mov
fcom
lods
mov
mov
scas
xor
jecxz
dec
inc
xchg
mov
pop
(bad)
xor
inc
inc
xchg
sub
cmp
lds
sar
dec
stc
xor
test
sub
jge
or
and
adc
add
ss
sub
pushf
mov
xchg
adc
out
or
shl
(bad)
fcomp
or
enter
jo
cmp
xchg
pop
pop
cwde
leave
sub
mov
inc
xlat
inc
out
(bad)
jns
clc
lea
or
or
retf
call
mov
sti
and
and
cmp
cmp
sub
and
xor
pop
jne
stos
ins
mov
mov
add
ret
gs
idiv
xchg
adc
mov
(bad)
lds
dec
push
and
push
jnp
mov
adc
stos
dec
imul
sbb
xor
stc
jae
fisubr
push
push
cmp
sti
fcmovnb
mov
leave
into
fwait
ret
adc
cli
es
fwait
dec
repnz
push
pop
sbb
leave
fisttp
jbe
pop
bound
ja
push
mov
rcl
movs
mov
mov
mov
enter
and
add
pop
jp
loopne
inc
adc
adc
push
ins
pop
cld
and
push
imul
inc
cmp
push
call
in
inc
cmp
xchg
pop
mov
and
jecxz
outs
jecxz
pop
pop
fnsetpm(287
sub
data16
adc
push
(bad)
movs
cmp
stos
mov
std
mov
or
inc
add
iret
stos
movs
dec
mov
shr
xchg
mov
shr
std
pop
cmc
shl
jg
test
ss
imul
out
mov
dec
inc
mov
push
shr
xchg
add
clc
cmps
das
imul
dec
mov
mov
ss
xor
stos
ja
aad
fs
xor
(bad)
sbb
(bad)
mov
or
jno
ins
mov
ja
sub
mov
jb
leave
sbb
or
jg
or
cmp
pop
movs
mov
dec
mov
(bad)
stc
ror
adc
movs
loop
mov
pop
pop
imul
fidivr
pop
(bad)
les
js
loopne
pop
retf
clc
inc
adc
ins
ins
dec
dec
dec
mov
call
add
xchg
scas
mov
outs
mov
sbb
sti
fadd
xor
sbb
xor
retf
sbb
bts
es
imul
out
loopne
int
mov
or
lods
pop
(bad)
sti
nop
fs
mov
daa
push
sbb
bound
scas
fwait
sbb
mov
pop
sub
add
jne
xchg
das
xor
xchg
mov
sbb
jp
xor
mov
xchg
mov
(bad)
imul
sti
out
data16
(bad)
scas
test
adc
sbb
and
jb
shl
pop
push
sub
xor
cmps
bound
mov
inc
clc
in
ficom
scas
je
fild
gs
mov
sub
mov
mov
adc
cmp
retf
int3
pushf
jns
mov
lock
jmp
mov
mov
mov
adc
xchg
push
out
cmps
fcom
and
pusha
add
push
in
in
fld
mov
adc
xor
(bad)
(bad)
push
imul
jmp
outs
lea
mov
push
xor
dec
rcr
jo
es
sbb
xor
loopne
sti
inc
jae
sub
cmp
or
jl
pusha
push
loop
sbb
adc
mov
xor
jecxz
add
push
imul
rcr
mov
ins
sub
jbe
dec
xchg
loopne
xor
mov
dec
clc
imul
jb
call
xor
cwde
pop
xor
lahf
sbb
lahf
movs
popa
jns
mov
cmps
popf
push
add
mov
je
iret
sbb
retf
scas
ret
leave
call
loop
call
add
dec
adc
mul
es
xchg
aam
inc
adc
fs
sbb
out
mov
addr16
call
lds
sahf
cmp
cmp
mov
mov
jns
dec
imul
jmp
push
xor
jmp
sbb
xchg
add
push
fimul
dec
add
dec
arpl
sub
or
das
jbe
test
pxor
push
xor
into
out
mov
sbb
hlt
in
test
mov
mov
xchg
addr16
jns
outs
add
pop
pop
dec
add
repnz
or
fisttp
call
mov
xchg
or
popa
and
in
int
add
sbb
lock
lods
inc
mov
daa
jle
test
pop
jns
push
sbb
out
popf
cmp
(bad)
es
dec
cmc
dec
(bad)
sub
test
retf
(bad)
cmp
or
jbe
dec
sahf
cmp
pusha
sbb
jns
mov
xor
sti
(bad)
lock
sbb
lds
sub
mov
push
or
push
mov
xor
out
jo
push
fistp
or
or
es
fdivr
js
(bad)
aam
jle
cmc
loopne
cwde
xchg
inc
ins
retf
xor
sub
ins
(bad)
sbb
sbb
pop
outs
pop
ret
push
push
jae
aad
mov
shr
or
les
mov
cmps
mov
leave
pop
out
arpl
imul
imul
sbb
pop
lock
push
jbe
jge
push
mov
mov
inc
inc
xchg
lock
lods
into
pop
mov
dec
or
jmp
inc
lods
out
out
mov
repnz
fwait
push
xchg
mov
lock
push
adc
inc
js
shl
cmp
cmps
xchg
retf
(bad)
mov
pushf
(bad)
pusha
(bad)
rcr
stos
sbb
mov
xor
mov
add
push
cmp
dec
std
out
inc
int3
cmp
stc
mul
loop
hlt
mov
mov
out
ja
cmp
aas
mov
nop
pop
dec
dec
push
or
mov
cwde
stos
add
cmp
test
cmp
je
xorps
cmp
jo
jne
cdq
sti
jle
fistp
stc
lods
xor
cwde
xchg
in
jnp
mov
mov
mov
and
or
fild
adc
sbb
cmps
sbb
add
loope
outs
dec
mov
popf
inc
dec
sub
push
punpckhwd
mov
adc
mov
(bad)
and
into
in
in
jle
jecxz
add
rcl
mov
lods
xor
mov
and
mov
pop
adc
fdivr
add
mov
or
and
jecxz
adc
inc
inc
jbe
mov
mov
sub
nop
pop
repnz
mov
lods
jno
dec
dec
add
movs
popf
jge
cmp
push
sbb
add
cmps
cs
les
push
sbb
jg
or
out
mov
fdivr
sbb
in
retf
xchg
aas
pop
movs
popf
call
add
push
jno
int
pop
xor
or
fdivr
jmp
push
imul
dec
mul
je
sbb
lock
sbb
pushf
and
xor
adc
ins
popa
jbe
adc
jo
xchg
pusha
out
jg
fiadd
(bad)
dec
hlt
push
sbb
fsubr
inc
jp
shl
jp
shr
lock
sahf
jmp
fidiv
cwde
push
jnp
icebp
sbb
call
adc
jo
mov
dec
arpl
sti
sbb
repnz
sbb
out
jae
test
pop
imul
inc
(bad)
push
gs
jecxz
dec
mov
dec
mov
pop
stc
(bad)
call
cmp
push
xlat
push
jns
hlt
jns
xor
or
aad
jb
loop
lods
sbb
mov
cmc
push
or
repz
nop
lea
bound
pop
and
jp
jb
xchg
push
mov
lahf
mov
xor
dec
and
loope
xchg
adc
push
jno
cld
fld
out
ins
cmp
cmp
xchg
loop
pusha
mov
or
fimul
nop
pop
jl
popa
dec
add
inc
(bad)
int
cmps
sub
in
inc
lahf
nop
in
add
shr
pop
dec
fptan
fbld
mov
sbb
mul
fidiv
add
jnp
sub
push
pop
jbe
ins
xchg
(bad)
xchg
sahf
sbb
and
add
dec
xor
pop
inc
xor
enter
aad
pop
jg
add
fldenv
add
inc
scas
cmps
retf
fnsave
pop
mov
sbb
cmp
jno
fcomp
je
(bad)
and
jmp
(bad)
pusha
or
push
(bad)
dec
fild
jmp
(bad)
outs
fild
adc
test
or
mov
ins
cdq
mov
out
retf
adc
sbb
xchg
mov
clc
ret
adc
and
mov
and
push
hlt
inc
push
repz
xor
dec
push
adc
xor
fld
test
sti
add
in
retf
sbb
retf
call
add
xchg
mov
add
mov
frstor
mov
and
xchg
retf
out
adc
les
push
(bad)
jae
jnp
adc
jg
outs
push
mov
leave
sbb
adc
jo
loope
rcr
imul
lahf
shl
iret
mov
sbb
shl
xor
jp
sub
into
push
and
inc
loope
popa
dec
xchg
inc
mov
push
imul
neg
and
jle
push
inc
test
xchg
daa
sbb
jnp
sub
pop
into
cmp
xor
mov
rcl
push
add
fistp
xchg
or
sbb
lea
xchg
enter
push
xchg
shl
icebp
jne
sub
movs
jno
mov
ror
add
mov
mov
jmp
push
popf
sahf
arpl
mov
in
mov
pop
jg
cmp
cmp
sbb
and
push
mov
jae
scas
cmp
push
clc
fcomp
call
sar
shl
jne
sub
cmp
mov
ror
test
jmp
and
pop
dec
loopne
mov
(bad)
loopne
fwait
rcr
jecxz
mov
dec
stos
xor
xchg
sub
fdiv
and
pop
cmp
lea
enter
cdq
pusha
jl
inc
sub
ret
jecxz
cwde
xchg
dec
dec
jnp
add
pop
bound
jg
ffreep
jp
xchg
and
xor
adc
or
hlt
aam
mov
cmp
cmp
and
sub
xchg
fdiv
dec
jno
dec
mov
nop
jecxz
fcom
out
lds
outs
or
icebp
cld
add
adc
cmp
fstp
iret
xor
inc
in
mov
inc
loopne
aaa
sub
xchg
push
push
jno
xchg
xchg
dec
pop
call
inc
mov
mul
inc
mov
cdq
int
sub
stos
pop
not
pop
adc
pop
jne
sub
fs
push
mov
jl
add
mov
aas
sub
push
push
xchg
neg
enter
sbb
bound
lods
pushf
fsub
or
mov
push
test
in
or
mov
sbb
pop
fstp
sub
sti
mov
dec
adc
fmulp
cmp
mov
adc
mul
push
dec
cli
xor
fs
xchg
xor
mov
mov
fiadd
pop
mov
mov
adc
inc
inc
pop
in
jg
sub
pop
mov
in
pop
and
push
xor
fsub
in
mov
mov
sbb
jg
(bad)
shl
mov
aam
fwait
and
scas
inc
(bad)
push
mov
data16
xor
pushf
cmp
or
test
sub
push
fisub
fild
lods
aad
mov
repnz
bound
jle
xchg
xchg
je
retf
mov
add
jmp
sub
es
(bad)
retf
pusha
popa
test
outs
cdq
arpl
test
mov
push
pop
rcr
mov
imul
loope
dec
jmp
xlat
add
sub
iret
fdivr
mov
int3
out
call
icebp
jp
pop
xchg
ss
enter
pop
shl
es
retf
mov
sbb
xchg
push
cmp
ror
and
je
call
sub
or
nop
mov
je
(bad)
add
ror
lahf
mov
(bad)
cmp
and
inc
mov
push
push
mov
cmp
fmul
jg
popf
sub
loope
test
jns
lahf
(bad)
fbstp
pop
mov
mov
dec
sub
jno
jl
(bad)
push
xor
sub
inc
call
test
stc
or
cs
or
cmc
sbb
test
arpl
out
out
fisttp
jmp
es
aas
and
add
arpl
and
lea
mov
or
or
xor
cmps
ror
loop
(bad)
lods
sub
vmulpd
inc
or
dec
mov
pop
inc
sbb
retf
and
cdq
mov
push
aaa
push
jo
outs
pop
jne
jmp
mov
daa
out
mov
jo
pop
pop
stc
pop
fst
inc
aam
fst
aas
pop
jb
mov
cdq
fsubr
loop
sub
mov
add
jmp
aad
cmps
std
fdivp
push
push
ins
clc
arpl
xor
jl
in
cmps
lods
mov
dec
jo
adc
test
popw
inc
mov
pop
stos
jle
mov
mov
xchg
adc
mov
push
jp
in
mov
pop
push
sub
xor
rcl
iret
neg
repnz
out
and
adc
cmps
cmps
sbb
sub
jge
loope
ins
imul
out
pop
aam
(bad)
jp
push
out
sub
test
js
mov
or
mov
pop
or
iret
xor
rcl
push
dec
(bad)
in
shl
xor
push
sub
add
cmp
cmp
dec
(bad)
fbld
dec
or
ss
in
repz
or
les
jns
cmp
ss
stos
adc
sub
inc
ja
in
mov
icebp
inc
sahf
and
ror
dec
push
mov
mov
rcl
data16
retf
into
mov
and
int3
les
shl
pop
dec
scas
mov
xor
out
imul
rcr
mov
mov
cmp
and
push
cmp
mov
xor
jp
outs
lock
push
fistp
add
std
cmps
hlt
pop
out
pop
fldenv
std
xchg
(bad)
jge
test
mov
add
cld
cmp
push
fist
push
pop
and
push
fsub
pop
mov
fstp
adc
inc
dec
ja
outs
lods
jne
in
popa
sti
adc
aam
test
mov
je
mov
in
or
xor
and
arpl
pushf
pop
call
cmps
cmp
jb
mov
retf
jbe
xchg
idiv
sbb
cmp
popa
push
or
pop
lds
cld
sbb
sub
mov
mov
mov
inc
xlat
cmp
push
nop
movs
cwde
jge
scas
popa
es
cli
mov
adc
shr
in
jo
adc
push
nop
rcl
xchg
inc
xor
or
xchg
cmp
fs
daa
push
push
pushf
mov
mov
addr16
rcr
mov
test
or
jno
popa
imul
adc
or
dec
push
xchg
cli
dec
mov
fwait
clc
xchg
xchg
dec
stos
mov
xchg
push
pop
dec
add
mov
js
stos
je
mov
inc
jae
mov
mov
xchg
sti
xor
mov
push
and
lods
hlt
(bad)
mov
push
cmp
jge
push
xchg
mov
stos
fsub
xchg
xchg
(bad)
pop
xor
stc
cmp
sub
jne
push
retf
or
retf
cld
xchg
pop
mov
pop
adc
jmp
(bad)
or
jo
inc
and
cmp
cmps
mov
out
sbb
inc
or
popa
in
or
fs
fstp
(bad)
clc
xor
cmp
icebp
cmps
xor
jns
repnz
push
inc
icebp
dec
sar
stos
out
jmp
xor
leave
mul
mov
xlat
not
inc
adc
push
aad
rol
sbb
pop
mov
shrd
xchg
bound
shl
out
ret
cld
stc
mov
jmp
mov
jle
into
div
push
sub
je
(bad)
lods
mov
ins
gs
ja
lods
shl
(bad)
pop
inc
(bad)
cmp
test
int
push
mov
or
rol
and
retf
ret
cdq
mov
pop
pop
mov
shl
fld
(bad)
into
rcl
dec
xor
or
movs
xchg
ins
cmp
test
push
mov
fmul
out
cmp
test
mov
inc
jo
xor
outs
or
loope
mov
loope
inc
or
mov
jno
mov
sub
mov
pop
ret
pushf
(bad)
rol
cld
dec
lods
mov
call
pop
cmps
sti
inc
mov
into
jecxz
pop
cmp
sub
lahf
cmp
fwait
mov
or
dec
mov
jp
movs
xor
add
cmp
jae
pop
push
pop
div
push
cmc
mov
mov
test
div
push
or
call
sbb
push
xchg
sub
jo
mov
mov
cli
cmovp
cmp
add
mov
xchg
mov
jp
iret
test
add
(bad)
fcom
inc
mov
pusha
add
repz
lds
call
mov
or
bound
dec
inc
sbb
or
pop
and
and
fisttp
push
lock
ins
xor
lods
sbb
inc
jnp
push
jb
mov
push
push
test
sub
loope
cli
ja
in
arpl
imul
adc
xchg
jae
es
ins
popf
shl
frstor
push
inc
loop
or
adc
push
test
scas
mov
jne
xchg
test
push
mov
pop
cmp
pushf
sbb
aad
mov
cmp
inc
dec
fstp
mov
and
fist
push
mov
inc
hlt
sahf
add
movs
push
pop
nop
push
icebp
jno
neg
jae
sub
sub
add
pop
and
adc
lods
(bad)
xor
lahf
outs
imul
mov
movs
lock
out
push
xor
call
inc
or
cwde
dec
mov
adc
jl
xchg
aaa
js
adc
(bad)
hlt
add
repz
les
in
mov
cmc
nop
and
and
add
sbb
xchg
push
je
mov
fxch
out
mov
or
xchg
or
sbb
push
repnz
in
push
add
popa
stos
push
jp
test
xchg
pop
adc
dec
cmc
mov
popa
push
hlt
dec
xor
sar
loop
fimul
xor
mov
cli
cmp
push
loopne
cmps
scas
and
dec
popa
xbegin
mov
imul
out
xchg
xchg
(bad)
cmps
adc
ss
fs
sub
lock
xchg
test
(bad)
jmp
mov
daa
gs
adc
clc
mov
aas
in
sbb
ss
xor
adc
stos
sahf
jge
add
movs
push
pop
outs
xchg
repz
leave
cmp
rcl
js
adc
(bad)
in
inc
mov
jne
xor
pusha
dec
jmp
jp
jge
js
or
lods
pusha
pushf
push
mov
or
push
adc
or
sub
jle
mov
jl
sbb
xchg
int
aaa
sbb
mov
bound
out
and
jb
ja
in
sar
mov
sbb
(bad)
aaa
dec
lahf
lods
stc
loop
xchg
scas
pop
mov
sub
cmc
fld
stos
xor
mov
jmp
rcr
add
mov
dec
sub
push
lods
pop
into
xchg
add
xchg
mov
and
dec
jge
jo
movs
add
dec
add
mov
loope
pop
fisubr
nop
test
jbe
dec
push
clc
fsub
or
jae
and
jo
push
arpl
popf
es
mov
and
in
push
mov
nop
jl
xor
repnz
sub
les
and
xchg
add
call
neg
pop
dec
neg
jb
repz
lahf
pop
push
cmp
dec
std
mov
xchg
mov
dec
and
cmp
mov
xor
pop
shr
into
sbb
retf
sar
pop
mov
inc
xchg
mov
ins
gs
in
mov
jbe
aam
sub
shl
cmp
sbb
mov
pop
iret
dec
es
xor
(bad)
adc
sbb
mov
add
or
pop
rol
dec
icebp
push
mov
sbb
shr
add
mov
dec
jl
and
retf
push
inc
imul
ret
xchg
mov
je
add
dec
or
xchg
pop
imul
mov
mov
call
out
cmc
sbb
cmp
ficomp
iret
mov
in
rol
xchg
sbb
int3
push
hlt
xor
sbb
jbe
push
psubusw
and
ins
jne
das
inc
jmp
shr
cmc
test
enter
jmp
inc
(bad)
cmp
jne
xchg
call
pusha
dec
sahf
stc
pop
repnz
mov
sub
jp
jl
xchg
cmp
xor
clc
mov
lds
push
repz
jle
mov
test
sub
sahf
adc
retf
adc
iret
outs
shl
fistp
mov
(bad)
es
adc
scas
mov
pop
jno
js
les
shl
xchg
imul
mov
int
test
cli
out
iret
mov
jge
mov
mov
ins
push
ins
sbb
mov
push
dec
dec
or
popf
outs
(bad)
cs
in
lods
jns
mov
(bad)
jne
ss
push
cdq
fcomp
repz
sub
dec
popa
in
or
fist
jmp
cmp
dec
repnz
leave
jo
int
adc
pop
or
or
imul
pop
mov
sbb
aas
add
(bad)
push
xchg
jno
cmp
movs
cmovle
ins
movs
add
in
call
scas
add
imul
sbb
call
lods
push
xchg
loopne
ret
xchg
addr16
sbb
pop
dec
inc
adc
inc
ret
lock
pop
mov
xor
xchg
xchg
xchg
push
inc
xchg
mov
dec
or
mov
fild
lods
imul
dec
mov
in
fcom
jl
dec
xor
and
mov
js
mov
retf
nop
idiv
push
(bad)
push
cmps
and
test
daa
push
(bad)
cmp
ror
sub
test
pop
dec
aam
mov
fwait
aad
lock
cmp
ror
push
push
(bad)
xchg
scas
icebp
or
sbb
pop
test
sbb
xor
test
push
loop
scas
sar
mov
mov
aad
or
mov
jb
cwde
or
jg
add
cmp
jb
sub
sbb
sub
stos
aad
push
xchg
inc
icebp
ins
dec
in
retf
inc
sub
cmp
bound
retf
jle
scas
ret
jmp
pop
add
pop
mov
and
dec
adc
or
or
retf
jecxz
outs
pop
(bad)
sub
dec
xchg
push
scas
mov
out
mov
shr
mov
xor
mov
pop
iret
sbb
mov
pop
pop
mov
scas
shr
stos
leave
cwde
cmp
daa
mov
and
aas
cmp
icebp
sbb
push
loopne
or
mov
(bad)
xor
call
(bad)
adc
fcom
(bad)
fstp
xor
(bad)
cld
mov
in
outs
jmp
push
mov
or
push
lock
and
push
xor
mov
xor
xchg
pusha
mov
mov
inc
or
test
pop
jbe
cld
stos
add
xchg
call
daa
and
movs
cwde
pusha
into
repz
jnp
and
push
sub
fnstcw
mov
pop
int
(bad)
aam
mov
inc
fwait
aam
in
js
push
dec
push
mov
pusha
pop
jge
add
out
jno
inc
jecxz
pushf
stos
call
push
test
fwait
hlt
sti
out
adc
push
mov
push
sbb
mov
ins
mov
bound
movs
push
mov
mov
and
sbb
or
xchg
and
inc
std
push
xchg
popf
mov
pop
dec
rol
scas
jp
mov
sub
test
inc
mov
adc
scas
cmp
in
jo
out
pushf
retf
test
pop
retf
cmps
movs
push
sbb
mov
pop
jmp
push
fwait
mov
cs
add
imul
jns
std
loope
xlat
sbb
cmp
mov
xchg
mov
pop
jge
popf
scas
aad
rol
daa
sub
or
xor
dec
data16
and
add
push
dec
in
mov
fwait
sahf
fdivr
or
and
push
mov
mov
idiv
inc
fisttp
inc
jl
push
adc
mov
xor
in
(bad)
mov
ins
and
mov
(bad)
cmp
jae
mov
pop
inc
mov
xchg
je
mov
mov
in
pop
daa
or
cmc
aad
dec
pop
(bad)
shl
sbb
cmp
jo
rol
jle
imul
and
mov
adc
jl
push
xchg
lods
mov
nop
sahf
ins
mov
inc
cld
cli
xchg
(bad)
mov
cmps
jnp
les
pop
and
fdiv
(bad)
sub
sub
inc
into
scas
in
std
adc
add
shr
retf
mov
sahf
mov
pushf
push
and
mov
pop
mov
and
dec
mov
mov
and
cmps
in
shr
cmp
iret
ror
jle
mov
xor
ds
adc
add
dec
push
jl
pusha
xor
push
imul
cwde
jbe
pop
sti
sub
fwait
jmp
in
xchg
inc
cli
outs
dec
clc
mov
stos
xor
popf
retf
jmp
aaa
test
test
xor
sbb
rol
xchg
or
sbb
test
ret
push
push
inc
daa
cmp
stos
je
std
dec
cs
les
mov
das
bswap
into
call
sub
outs
xchg
aam
mov
push
cmps
push
std
in
mov
inc
outs
mov
shl
adc
outs
cmp
mov
call
call
stc
cdq
cli
inc
sub
fwait
repz
cmps
pop
(bad)
call
sbb
xchg
repz
ror
cmp
imul
add
mov
xchg
fsubr
xchg
sub
imul
and
and
pop
paddusw
lods
adc
add
or
test
outs
lahf
retf
mov
les
mov
mov
add
or
(bad)
jle
cmps
push
sub
jmp
inc
cmps
push
cmp
imul
push
add
shr
dec
add
sbb
ins
nop
arpl
loopne
push
icebp
pushf
inc
add
xchg
push
scas
sbb
movs
cmp
dec
(bad)
sbb
out
sub
mov
and
aad
adc
fisubr
fidivr
mov
pop
lahf
ret
(bad)
stos
in
sahf
sub
dec
daa
pop
jae
jmp
retf
jg
mov
push
adc
or
out
mov
cmp
cmps
in
inc
pop
push
sbb
sbb
dec
adc
(bad)
pop
or
sbb
pop
repnz
push
je
push
cli
mov
cmp
movs
push
sub
cmps
jmp
jmp
cld
mov
adc
xchg
fild
test
push
pop
adc
test
mov
shr
xchg
jae
(bad)
adc
jp
cmp
clc
stc
push
into
les
cmp
mov
call
sbb
mov
fld
add
jne
gs
jp
lds
adc
cmp
jp
xor
xor
inc
in
jg
(bad)
mov
or
add
add
push
mov
fimul
or
jbe
dec
lahf
xchg
sub
sti
mov
popf
lea
or
adc
add
rcr
add
pop
cmps
xor
out
jp
int
daa
or
jp
call
int
push
sub
int3
outs
idiv
mov
mov
push
jmp
pop
retf
mov
adc
inc
mov
add
mov
xchg
gs
mov
xlat
ficomp
and
sbb
sub
push
adc
(bad)
enter
or
jp
add
or
mov
enter
stos
jne
sub
retf
jbe
xchg
jnp
ficom
scas
push
bound
sub
sbb
mov
push
aam
mov
rcl
dec
sbb
mov
pop
dec
sti
or
xchg
sbb
xchg
dec
pop
test
and
in
div
rol
es
mov
sbb
addr16
pop
mov
cmp
pop
in
int
cmps
cmps
stc
sbb
fld
and
fsubr
or
fisub
sub
push
mov
sti
push
inc
xchg
adc
retf
ss
jb
or
test
cdq
xchg
xchg
jmp
or
adc
and
movs
adc
jp
push
xchg
loop
movs
fidivr
add
aaa
mov
pop
les
bound
bound
xchg
loopne
xor
repnz
cld
jmp
or
mov
lds
pusha
nop
(bad)
sbb
mov
mov
sbb
jne
into
out
out
out
jno
inc
ins
mov
pop
dec
or
(bad)
xchg
fnsave
inc
dec
push
bound
inc
push
sub
fimul
jge
dec
loop
les
dec
adc
not
mov
cmps
pusha
cmc
imul
mov
mov
inc
cdq
push
mov
shl
sar
pop
adc
std
es
iret
add
frstor
and
add
adc
adc
push
and
test
nop
jnp
call
dec
xchg
in
xchg
inc
cdq
dec
mov
add
xor
mov
jne
sub
pop
mov
add
pop
lods
enter
lock
pop
jp
loope
out
cmp
cmps
push
adc
hlt
(bad)
push
cmps
push
sar
adc
outs
push
dec
inc
xchg
fs
ds
cwde
jae
out
or
bound
hlt
push
cwde
push
(bad)
aas
daa
jmp
dec
fs
mov
sub
dec
xchg
lods
mov
mov
out
(bad)
mov
adc
shl
sahf
adc
jns
aas
scas
pop
push
hlt
mov
jne
call
test
test
cs
movs
cmp
retf
cmp
cmp
lea
mov
fdivp
ror
retf
lock
add
adc
(bad)
shl
jmp
cwde
ins
xchg
pop
test
adc
sub
lock
repnz
mov
sub
sub
lods
xor
mov
pop
or
(bad)
jmp
cmps
mov
and
in
cmc
arpl
les
int
out
popf
xchg
push
push
loopne
mov
call
test
and
xchg
test
fiadd
adc
mov
jge
cmps
ds
xsha256
cmps
push
ja
add
adc
(bad)
jge
sbb
xchg
push
or
lods
sbb
dec
fadd
mov
lock
or
iret
hlt
imul
arpl
xor
mov
iret
pop
stos
jnp
push
outs
outs
pusha
pop
cmp
test
stos
(bad)
test
inc
xchg
arpl
mov
sbb
mov
mov
aas
dec
jmp
add
cmp
mov
xchg
nop
inc
loope
push
ror
popa
repnz
sub
xor
(bad)
cmp
xor
jge
jge
push
mov
stc
ss
pushf
jnp
mov
add
and
add
shl
mov
enter
cmp
jne
cwde
lock
stos
xlat
dec
shl
dec
xchg
xor
mov
aas
loope
cmp
loopne
adc
fs
out
cmps
mov
mov
sbb
sbb
lds
jl
int3
ds
jmp
stos
sbb
xchg
jmp
xchg
xor
xchg
pusha
enter
fmul
or
pop
add
jnp
cmp
xchg
pop
(bad)
outs
or
loopne
aas
push
addr16
jg
iret
pop
fist
push
movs
test
cmps
push
jne
mov
jbe
jo
in
inc
push
iret
in
xchg
jecxz
shl
shr
in
outs
enter
fcomp
shr
jp
sbb
shl
and
mov
mov
inc
fs
pop
ret
mov
dec
sbb
lea
pop
ja
mov
xchg
rol
imul
fbld
in
das
mov
fucomp
push
popa
add
and
mov
idiv
test
jnp
retf
xor
gs
push
aam
inc
or
ins
adc
xor
add
jno
jb
(bad)
jae
imul
jecxz
and
pop
call
dec
push
out
xchg
add
inc
xor
push
dec
pusha
mov
fs
into
cmp
pop
addr16
sub
jl
xchg
enter
or
test
dec
dec
inc
shr
dec
jno
dec
(bad)
adc
jecxz
stos
push
push
out
ss
ret
test
jmp
push
js
addr16
add
mov
mov
loopne
outs
inc
aam
je
push
dec
aad
inc
(bad)
cmp
pop
mov
dec
xchg
sbb
xchg
lahf
jae
mov
pop
mov
(bad)
dec
sub
shufps
sar
pop
mov
add
(bad)
ror
add
mov
dec
mov
lahf
mov
or
aaa
stos
jnp
mov
adc
pop
inc
pop
ins
shl
test
mov
push
in
or
push
aam
xchg
sub
dec
es
dec
mov
daa
and
lea
ret
mov
xchg
and
and
push
jbe
jmp
mov
add
adc
and
out
mov
ja
test
inc
dec
mov
mov
(bad)
pusha
pop
leave
adc
pop
jne
cmp
push
ins
lock
jge
or
jo
sbb
cmps
add
addr16
popf
and
mov
sbb
shl
mov
push
sub
je
les
push
jo
sbb
cld
push
mov
cmc
lock
inc
mov
push
shl
pop
dec
dec
int3
or
pop
vminss
rol
cmc
es
adc
outs
popa
int
xchg
push
dec
popa
cdq
es
sbb
cmp
repnz
out
adc
clc
pusha
lea
mov
or
cpuid
inc
adc
or
add
popa
xchg
mov
lds
mov
aas
pop
in
add
jmpw
adc
inc
push
(bad)
push
addr16
arpl
sub
sbb
inc
xchg
cli
cld
(bad)
aaa
add
inc
retf
out
xor
mov
pusha
sahf
sar
xchg
push
mov
outs
jge
dec
cmp
dec
cs
ins
ja
mov
repz
push
push
cwde
cmp
add
add
fwait
daa
mov
out
jae
fistp
add
je
mov
xor
daa
xchg
nop
xchg
lds
arpl
dec
sbb
pop
std
shl
out
pusha
out
outs
js
inc
mov
mov
stos
adc
mov
imul
repz
push
in
dec
stos
test
into
mov
cmp
inc
(bad)
imul
jno
or
clc
test
xor
push
adc
mov
cmp
aaa
mov
cmp
xor
loope
fstp
bound
jecxz
mul
icebp
iret
jb
push
pop
mov
jp
jns
(bad)
and
mov
es
dec
test
ret
test
jmp
pop
xchg
cwde
jle
data16
call
(bad)
ficom
jl
or
dec
leave
inc
pop
bound
icebp
dec
cmp
pop
(bad)
jnp
xor
jmp
cmp
xlat
in
fisub
call
movs
sti
inc
out
jge
fimul
jle
mov
sbb
push
call
and
aas
mov
jmp
outs
test
push
jb
leave
dec
add
cdq
cmps
mov
imul
add
movs
mov
clc
xchg
pop
jns
ret
lods
aam
add
js
cmp
add
push
js
mov
and
pusha
lahf
or
mov
retf
or
nop
push
mov
xchg
data16
sbb
lods
into
repz
popa
sbb
out
push
es
jle
pop
push
xchg
in
mov
iret
fldenv
xchg
loope
pushf
xor
pop
mov
mov
sbb
ret
cmp
and
push
std
and
das
popa
pop
ss
adc
pop
adc
mov
adc
or
fwait
and
jle
ret
sahf
je
jb
push
sub
sbb
rcr
xchg
xor
lock
jmp
addr16
jae
int
mov
dec
stos
jmp
pop
push
sub
cmp
scas
inc
je
(bad)
js
in
or
pop
add
add
sub
mov
(bad)
(bad)
loop
mov
in
(bad)
dec
or
mov
jnp
idiv
mov
call
stos
movs
and
pushf
cmp
push
sbb
outs
jge
dec
cmp
fwait
push
repz
test
jno
sub
std
movs
pop
mov
push
sbb
mov
mov
test
and
rol
retf
or
mov
or
stos
or
pop
mov
test
sbb
mov
fimul
mov
or
dec
sbb
xchg
pop
mov
pop
(bad)
cmp
arpl
dec
(bad)
call
dec
inc
pop
iret
jmp
jecxz
punpckhbw
aas
mov
xor
(bad)
rep
adc
xlat
mov
das
dec
or
sbb
std
js
hlt
mov
sub
dec
loope
cmp
jae
mov
jb
sub
push
pop
clc
call
dec
call
adc
int3
popa
scas
adc
sbb
add
add
icebp
mov
std
cdq
sub
dec
das
jp
dec
js
sub
(bad)
in
call
xchg
sbb
shl
sub
push
repnz
cld
mov
sub
rcl
mov
dec
(bad)
ins
adc
xor
push
(bad)
jnp
pop
xchg
inc
cs
jns
(bad)
(bad)
rcr
ins
push
cld
leave
xor
fcmovnb
xchg
inc
dec
sbb
pop
cdq
(bad)
retf
mov
int3
xchg
push
push
in
inc
and
addr16
inc
adc
jbe
je
sub
adc
popa
dec
in
test
pop
pop
ja
mov
es
or
fisub
push
xchg
sbb
idiv
xor
mov
xchg
jp
pop
mov
mov
jne
test
mov
mov
test
add
fist
popa
mov
clc
enter
and
xor
add
cmps
dec
fdivr
pop
js
inc
mov
je
xor
in
jmp
movs
rcr
fstp
arpl
rcl
add
(bad)
rol
(bad)
fstp
xlat
sub
stos
iret
adc
dec
dec
sub
cld
fild
cmp
mov
lods
xor
ds
iret
into
test
mov
dec
std
iret
(bad)
lods
pop
inc
dec
es
outs
mov
sub
hlt
pop
cmp
sub
xlat
and
and
push
mov
sub
or
(bad)
dec
push
and
mov
jle
jmp
mov
call
add
in
cmps
std
mov
neg
xor
sbb
dec
mov
inc
jo
mov
or
aaa
and
xchg
repz
mov
jbe
cmc
and
icebp
inc
test
cmovs
jns
sub
xor
pop
jmp
test
arpl
jns
inc
and
(bad)
mov
(bad)
mul
hlt
div
mov
jne
cmp
xchg
inc
xor
pop
sahf
hlt
xchg
scas
add
(bad)
aam
jne
push
(bad)
adc
lahf
jge
in
and
outs
out
xchg
popa
xor
fcomp
imul
fimul
dec
mov
(bad)
hlt
or
push
jge
cmp
sahf
movs
push
lods
push
add
(bad)
ss
(bad)
loopne
ret
jge
mov
into
scas
fs
les
pop
loop
imul
fimul
call
jno
dec
xchg
int3
loope
mov
inc
cmp
in
pop
and
pop
(bad)
and
call
(bad)
cmp
cdq
imul
jle
mov
mov
call
dec
inc
jl
adc
jmp
mov
movs
pop
push
mov
push
mov
repnz
ss
out
mov
cmp
inc
mov
jns
sub
sbb
cmp
inc
cmc
sar
int3
dec
popa
jae
jbe
add
ficomp
dec
or
inc
iret
enter
cs
out
pop
mov
fchs
fisub
(bad)
fwait
jae
jp
xchg
mov
test
dec
(bad)
movs
or
jne
jae
gs
aam
push
mov
popa
jg
dec
xor
jbe
add
pop
cmp
fstp
stos
lahf
mov
adc
xchg
dec
xchg
das
sbb
int
test
ja
clc
mov
orps
ja
cmps
push
jp
sbb
(bad)
out
or
xchg
pusha
shr
or
scas
xlat
popf
pop
pop
cdq
in
xchg
mov
xchg
mov
int
or
add
jae
inc
pop
cs
cmp
adc
ins
(bad)
stos
js
(bad)
adc
xchg
sar
pusha
(bad)
jge
cmp
iret
mov
mov
jecxz
dec
pop
push
neg
xchg
repz
shl
adc
sub
lds
cld
sub
xor
jnp
add
(bad)
fld
sub
out
pop
mov
cli
lods
mov
mov
lahf
push
inc
push
sub
out
push
mov
inc
ret
ffreep
push
jmp
fadd
cdq
or
call
mov
std
inc
dec
pop
aad
jb
shl
fidivr
inc
add
xchg
xchg
cld
call
add
mov
aad
inc
test
fisttp
jno
add
pop
dec
add
ja
add
(bad)
rcr
jae
mov
stos
adc
fcomp
add
mov
lahf
xchg
mov
inc
pop
inc
out
push
sbb
pop
lods
retf
pop
lds
mov
mov
pop
ja
js
xchg
(bad)
mov
inc
cld
retf
and
and
push
sbb
pop
jg
mov
mov
test
adc
cmp
sahf
fmul
repz
mov
mov
push
fs
bound
ins
imul
mov
adc
fistp
adc
xlat
and
push
mov
and
or
bound
popa
cmp
adc
loop
jo
in
xchg
repnz
out
or
fcomp
jge
scas
rcr
or
data16
mov
add
mov
mov
sbb
push
xchg
(bad)
xor
lods
gs
xor
cmps
shr
in
dec
mov
cmps
sub
adc
adc
or
loope
scas
imul
lea
fidivr
(bad)
jmp
inc
movs
std
push
bound
bound
cmp
push
xchg
mov
mov
mov
jge
(bad)
dec
jmp
fiadd
add
jge
je
lds
jno
sub
shl
lods
mov
ret
cwde
mov
test
mov
pop
xor
adc
mov
lods
jmp
je
mov
xchg
and
aam
jns
dec
arpl
enter
push
or
push
jne
and
fs
mov
shl
retf
mov
test
jo
(bad)
xlat
adc
jg
xchg
ror
cmc
outs
adc
mov
mov
std
call
pop
out
dec
and
sbb
out
aaa
xchg
aas
loope
fiadd
ins
ds
aad
jecxz
inc
mov
mov
jmp
pop
mov
cmps
sbb
div
aad
(bad)
into
lds
xchg
inc
enter
jne
hlt
fld
in
mov
add
jbe
jmp
mov
mov
xchg
sub
push
xor
cmp
mov
in
rcl
mov
cmps
pop
push
(bad)
movs
mov
pusha
jno
icebp
push
xchg
retf
call
arpl
sub
dec
ror
sub
ja
add
mov
inc
aaa
xchg
ja
pop
add
inc
jge
cmp
add
xchg
mov
cmps
sbb
ins
addr16
pusha
mov
lds
test
sub
xchg
in
mov
mov
push
sti
hlt
inc
mov
(bad)
inc
in
loopne
test
push
aaa
data16
mov
pop
popf
sbb
mov
or
mov
sti
add
pop
ret
addr16
sbb
jb
mov
inc
ret
das
jno
push
loop
push
cmp
loope
jge
and
cli
bound
mov
xor
pop
mov
or
lods
and
mov
sub
bnd
push
mov
inc
aas
mov
add
and
jecxz
ins
xchg
(bad)
xchg
(bad)
jl
mov
xchg
aad
loop
sbb
sub
or
rcl
out
mov
hlt
inc
xchg
call
in
sub
dec
and
loope
push
cmp
dec
sbb
pushf
dec
retf
js
enter
dec
add
inc
dec
mov
lods
popf
pop
sbb
mov
(bad)
leave
out
jmp
dec
mov
retf
jp
into
mov
pop
xchg
jmp
rol
push
mov
mov
retf
cmp
xchg
int
jl
pop
cld
stos
mov
adc
inc
repz
mov
pop
stos
fldenv
or
je
pushf
or
cmp
inc
push
mov
sub
sbb
pop
(bad)
(bad)
and
sbb
in
out
jge
push
push
inc
popa
or
push
lods
adc
jne
or
data16
lea
lods
xchg
(bad)
fistp
es
adc
repnz
cdq
outs
es
call
fwait
(bad)
jns
push
pusha
cwde
shl
bound
ss
mov
mov
dec
jb
dec
(bad)
xchg
in
out
shl
add
push
xchg
xchg
fldenv
dec
rol
ja
cli
xchg
and
dec
ficomp
imul
sbb
adc
sub
call
cli
cmp
dec
dec
shl
mov
cmps
or
ins
mov
jmp
sbb
jnp
punpckldq
nop
dec
arpl
xchg
sub
fstp
inc
loopne
and
add
out
stos
dec
mov
mov
pop
sbb
test
xor
cdq
in
add
stos
cmp
ja
pop
fisttp
mov
mov
jbe
jne
call
push
pop
push
imul
add
lods
xchg
bswap
imul
inc
ficomp
hlt
int
sbb
jo
dec
sub
sar
xor
dec
out
(bad)
imul
test
pop
inc
cmp
dec
mov
jbe
retf
pop
pop
(bad)
loope
shr
je
push
or
inc
jne
lock
int
jne
retf
jle
outs
inc
xchg
out
adc
call
ficom
mov
sti
or
sti
lods
pop
in
stos
outs
leave
rcl
mov
dec
jge
mov
xor
(bad)
push
add
pop
and
sbb
xor
and
call
leave
inc
xchg
repnz
xchg
pop
jmp
in
repnz
stos
sub
inc
and
xchg
dec
jmp
sub
out
stos
cmp
ins
fld
fcomip
test
adc
jmp
jb
daa
jns
or
mov
in
nop
cmp
or
or
outs
iret
mov
sti
sbb
repz
xchg
mov
lahf
fistp
clc
inc
aaa
sti
mov
bound
cmp
and
add
push
adc
bnd
cmc
andps
adc
call
cmp
gs
test
arpl
mov
mov
pop
mov
xchg
mov
movs
fnsave
dec
jp
aam
mov
inc
mov
aam
lods
retf
fwait
repnz
mov
pop
inc
out
push
(bad)
cli
jo
mov
cmp
imul
(bad)
mov
in
mov
sub
xchg
aaa
aad
pop
or
and
sub
jge
(bad)
push
cdq
cdq
jbe
xor
ret
or
lods
mov
cld
mov
dec
dec
cmp
mov
neg
jmp
mov
fs
xor
mov
ds
in
test
enter
pushf
cwde
mov
dec
bswap
aaa
mov
mov
and
mov
imul
shr
jge
jbe
push
and
out
jle
outs
(bad)
sub
arpl
jno
jmp
mov
inc
inc
into
and
stos
push
das
sub
repz
mov
and
test
jmp
lods
mov
nop
test
es
mov
in
inc
jno
adc
ja
cmp
mov
(bad)
mov
cwde
aad
xor
test
lock
xchg
xchg
or
jb
test
in
ret
mov
ror
or
sub
neg
(bad)
cmp
dec
jmp
push
xor
and
outs
arpl
xacquire
(bad)
jmp
jne
dec
jmp
rcr
sbb
movs
pop
mov
cmps
inc
cmps
(bad)
dec
cmp
outs
dec
jns
and
mov
push
cmp
out
outs
pop
mov
imul
pop
cdq
add
jne
cmc
hlt
(bad)
xor
pop
icebp
mov
nop
xor
lds
mov
jns
imul
outs
inc
mov
arpl
popf
sub
adc
call
loop
sbb
fnsave
add
and
add
ror
call
ret
inc
mov
out
jecxz
dec
dec
sub
int
aam
mov
(bad)
fcom
aad
aaa
pop
dec
cwde
imul
inc
sub
and
retf
sub
mov
pushf
dec
bound
inc
and
mov
inc
shl
sti
mov
sub
cld
sub
sub
mov
dec
mov
retf
and
push
push
jne
leave
jmp
xchg
clc
retf
bound
jae
xor
cmp
jno
pop
enter
(bad)
fisttp
and
mov
cmp
fcomp
jl
xor
retf
shr
sub
cld
or
ins
rol
dec
mov
xor
pushf
cmps
mov
cdq
push
scas
stos
xchg
mov
clc
fdiv
and
sbb
loopne
adc
cmps
push
lea
add
xchg
pop
add
lahf
push
test
(bad)
mov
mov
push
fcmovbe
xor
jns
es
fwait
sub
xor
gs
repz
int
jl
sar
test
lahf
in
xlat
mov
mov
fs
dec
add
mov
movs
cmp
aad
jl
shl
jl
pop
inc
fistp
sahf
xchg
repz
int
jmp
mov
inc
sbb
pop
and
dec
and
push
inc
jmp
mov
(bad)
out
dec
push
fwait
imul
enter
cmps
mov
cmps
sub
sub
add
sub
push
rol
dec
adc
pop
or
fdiv
scas
mov
fsub
xor
gs
call
loope
ret
and
int
les
rcl
mov
mov
xor
cld
mov
fnstsw
ss
icebp
cmp
mov
into
jmp
pop
int
mov
pop
adc
stos
add
das
cdq
cmp
inc
out
stos
(bad)
cmp
outs
and
xchg
pushf
pop
jmp
sar
stos
test
sub
sbb
ss
sti
jg
daa
fwait
adc
sbb
clc
xchg
jmp
(bad)
push
fnstcw
retf
cmp
scas
in
enter
push
pop
mov
sub
out
cmp
and
enter
mov
mov
shl
inc
pop
mov
hlt
and
comiss
or
rcr
sti
out
test
bound
pop
addr16
scas
fisub
xchg
bswap
in
call
jmp
mov
test
adc
pop
jle
inc
xchg
cmc
mov
push
xchg
into
retf
add
cmp
sbb
or
pusha
ins
push
nop
cdq
dec
cmp
mov
retf
jae
je
pushf
aam
sbb
bound
imul
xchg
adc
add
scas
xor
stos
into
add
mov
push
imul
sbb
xor
sub
es
pop
or
enter
das
jmp
pop
lahf
xchg
nop
lock
cmp
mov
mov
bound
mov
push
test
in
imul
push
sbb
cdq
int
or
dec
pop
imul
inc
sbb
jecxz
sbb
push
loopne
popf
test
loope
mov
ror
test
xchg
push
loop
test
xchg
stc
in
(bad)
fld
and
push
cmps
jo
(bad)
(bad)
out
xor
inc
cmps
and
es
mov
ja
in
fdivr
es
jmp
je
sbb
jne
lods
jl
mov
sbb
rol
xor
rcl
adc
xchg
aad
iret
sbb
js
outs
mov
int3
adc
push
push
mov
cmp
aaa
pop
xchg
cmps
sub
es
retf
pop
dec
mov
cmp
(bad)
add
ror
repz
sbb
ucomiss
enter
cwde
retf
jle
fdivr
adc
pop
sub
mov
stc
data16
paddsb
cs
mov
sub
or
retf
fdiv
aas
xchg
jb
loopne
push
mov
dec
aas
mov
mov
mov
push
add
sub
ins
loopne
or
imul
fs
adc
and
sub
jo
not
addr16
push
dec
out
sbb
cmc
retf
cld
inc
or
test
inc
test
jge
lods
inc
loope
and
and
pop
das
cs
mov
mov
sar
adc
pop
in
xor
or
cmp
dec
push
stos
fist
icebp
fiadd
fs
into
xchg
push
add
push
or
cmc
and
mov
mov
mov
out
push
and
xchg
hlt
add
cdq
xchg
or
das
or
mov
and
push
or
cmp
jle
bound
movs
mov
jmp
inc
in
sbb
push
xlat
xchg
or
mov
add
je
mov
cmps
jno
mov
sti
sbb
jbe
test
dec
mov
test
xor
ret
fwait
mov
sti
les
xor
cs
inc
das
jbe
dec
sbb
outs
dec
add
int3
add
jbe
rol
mov
in
scas
mov
int
mov
dec
and
cmc
inc
cmp
ja
stos
xchg
cmp
xchg
push
inc
dec
adc
mov
cmp
cmp
and
add
or
popa
sub
shr
xor
jae
or
cmp
faddp
xchg
cmp
je
jecxz
inc
inc
in
(bad)
sbb
inc
(bad)
mov
mov
es
push
lea
mov
mov
fsub
mov
sbb
sub
adc
pop
cli
int
and
jnp
mov
or
mov
ins
fs
aas
int
add
mov
lahf
leave
sbb
pop
cmp
cs
fwait
neg
add
inc
psubsw
add
into
add
ins
out
mov
push
test
push
xor
sbb
jae
outs
in
nop
(bad)
and
mov
test
scas
pop
aas
lea
mov
stc
push
rdpmc
push
imul
hlt
jge
add
pop
or
fst
xchg
pop
lahf
jo
add
fadd
adc
(bad)
ret
xchg
mov
imul
sar
mov
mov
int3
fisub
lods
adc
sbb
stc
fwait
add
in
mov
mov
cdq
lock
stos
sub
adc
push
jne
std
fld
and
(bad)
push
arpl
jns
pop
enter
or
jae
dec
add
imul
mov
sbb
out
std
out
dec
sub
test
jns
sbb
aaa
cmp
test
jns
addr16
or
shl
sahf
add
iret
xor
push
dec
and
inc
push
fdiv
and
jmp
or
jle
(bad)
(bad)
loopne
cmc
ins
xchg
out
xor
lock
jle
pop
cmp
cs
inc
mov
arpl
sub
into
fs
fs
popw
mov
pop
lods
sti
enter
pop
aaa
dec
movs
xor
sub
inc
mov
cld
in
xor
in
lock
lahf
aam
neg
jae
ss
sub
cmp
aas
cmps
imul
adc
fnstsw
xor
cmp
pop
mov
bound
add
rep
aas
add
add
xor
mov
jae
sub
mov
div
arpl
loopne
sbb
aaa
sub
or
(bad)
mov
inc
adc
div
push
adc
add
iret
xchg
pop
or
cmps
xchg
lock
push
ins
fisttp
pop
and
dec
and
push
imul
outs
pop
bound
mov
or
sar
test
pop
out
(bad)
cmc
ror
ins
mov
(bad)
into
mov
push
push
xchg
xchg
add
mov
stc
mov
dec
(bad)
mov
fst
pop
icebp
mov
aam
(bad)
cmp
jne
sub
add
repnz
nop
popa
and
jmp
into
pop
push
or
push
mov
xor
shl
xor
and
scas
ds
hlt
ja
pop
(bad)
mov
xor
push
out
cmp
mov
xchg
addr16
jae
sub
je
lahf
mov
out
and
cmps
ins
lahf
mov
and
fimul
mov
ins
mov
gs
jno
outs
mov
xor
mov
pop
rcl
cmp
xor
push
es
push
pop
mov
nop
add
int3
ja
lds
jnp
stos
in
pop
leave
mov
clc
rol
clc
cld
test
mov
jnp
movs
in
js
pusha
imul
jmp
pop
lock
push
sar
mov
mul
pusha
sbb
rcl
sbb
out
mov
ret
jns
and
jg
test
cmc
cs
xor
cmp
pop
test
mov
mov
(bad)
pushf
out
hlt
pop
call
loop
mov
dec
mov
pop
shl
iret
inc
cli
in
ins
dec
idiv
inc
push
sub
cwde
shl
mov
int
pop
mov
(bad)
loope
ins
fcmovne
loop
mov
out
cmc
sar
add
jg
fstp
xchg
int
push
dec
inc
inc
out
and
pop
(bad)
add
es
fcmovnu
cwde
hlt
and
rcr
loopne
sbb
popa
cmp
inc
std
mov
mov
fcom
ds
das
xchg
lods
fld
xchg
jmp
push
push
call
inc
mov
dec
scas
cmp
push
xor
cwde
pop
mov
in
sub
add
jno
ds
add
dec
push
sbb
inc
xchg
xor
mov
jl
mov
mov
shr
sub
lods
ja
push
pop
inc
test
imul
std
stos
ret
pusha
pop
cmps
mov
xchg
and
mov
outs
in
dec
sbb
aam
lods
leave
mov
bound
scas
in
lods
(bad)
mov
fld
cmp
jmp
sbb
fwait
inc
mov
mov
setp
dec
div
cwde
into
stos
jne
mov
retf
imul
push
jmp
sahf
push
jle
push
mov
bound
sbb
std
jecxz
mov
pop
pop
mov
cld
pop
pop
jl
cmp
ja
xchg
das
(bad)
pop
shr
stos
std
clc
lock
sub
shl
test
lea
(bad)
jae
dec
fld
mov
push
es
loop
mov
jg
or
and
add
push
add
das
(bad)
jp
jmp
sbb
xor
mov
nop
ins
cmc
outs
test
mov
shl
xchg
jp
dec
adc
leave
adc
ins
add
xor
xchg
or
out
stos
test
inc
adc
cmps
icebp
xor
dec
daa
in
mov
add
pop
fcmovnu
xchg
or
or
xor
lock
(bad)
stos
mov
js
mov
aaa
scas
mov
pop
jmp
(bad)
jno
jecxz
jne
loopne
out
sbb
imul
movq
fwait
fs
mov
jbe
and
test
dec
fld
ja
iret
repz
xchg
dec
or
inc
std
dec
sub
add
popf
popf
(bad)
and
xchg
xor
cmp
cli
(bad)
jnp
pushf
cmp
fs
mov
or
mov
dec
inc
pushf
sub
mov
inc
push
out
mov
pop
and
ss
add
xchg
leave
out
jae
jmp
dec
es
or
sbb
mov
daa
jne
or
adc
jl
xor
xor
inc
arpl
ja
(bad)
inc
stos
dec
mov
pop
add
shl
shr
cmp
ret
in
fs
xor
es
mov
ins
add
or
add
aas
outs
out
jp
sub
or
outs
cmp
ins
nop
mov
push
sub
add
push
adc
lods
outs
dec
or
test
sbb
sub
pop
inc
sbb
mov
(bad)
sub
pop
xchg
inc
sbb
and
cmps
int
and
inc
mov
push
xor
or
imul
cmp
sub
jmp
jne
cmp
fidiv
jp
inc
jns
push
sub
adc
mov
stos
in
jecxz
stos
mov
push
arpl
jb
mov
dec
(bad)
lock
fcmovnb
gs
dec
mov
inc
lods
rcr
xor
xor
mov
in
adc
xchg
(bad)
cwde
add
xchg
hlt
repz
fbstp
mov
scas
aas
xlat
cmp
mov
jecxz
movd
dec
cmps
fiadd
fstp
(bad)
ret
pushf
bound
pop
push
fwait
ss
out
das
fiadd
and
xlat
inc
aaa
and
or
xchg
lea
cmc
scas
jae
sbb
and
jo
test
mov
dec
(bad)
lock
dec
clc
stc
fisub
pextrw
jle
(bad)
xor
ret
aas
cmp
test
popa
cmp
or
test
shl
push
or
xor
popw
or
rcr
fdivr
sbb
clc
pop
dec
dec
add
or
xchg
adc
adc
iret
dec
jmp
movs
loopne
enter
loopne
aaa
out
dec
pop
repz
inc
jno
cli
push
out
cmp
movs
je
iret
daa
add
mov
adc
rcr
(bad)
rcr
mov
and
pop
shl
sbb
mov
sahf
ret
mov
xchg
test
out
in
push
ret
inc
in
jo
jbe
ss
mov
test
or
jbe
ins
outs
cmp
jb
ret
aaa
cmp
xor
adc
jge
pusha
xchg
mov
cmp
and
loop
cs
je
lock
cmp
dec
push
fdiv
retf
jle
sbb
das
outs
nop
leave
push
in
(bad)
dec
cs
and
sub
(bad)
loopne
pop
hlt
int
adc
jae
pop
gs
jg
inc
retf
push
xor
xchg
or
daa
adc
lea
mov
pushf
dec
out
gs
frstor
mov
xchg
mov
stos
mov
add
cmps
daa
imul
push
addr16
addr16
sub
ss
push
push
pop
cmp
mov
or
push
and
pop
push
jp
mov
movs
stos
stos
jnp
adc
inc
dec
inc
mov
jecxz
and
ffree
rcl
inc
xchg
mov
push
xor
fldcw
fstp
lea
sbb
ud2
bound
into
pop
ins
pop
pop
dec
out
push
push
mov
imul
mov
cmp
mov
(bad)
das
mov
push
mov
mov
cmp
cmps
das
adc
into
rol
add
push
rcl
add
mov
popf
repnz
cmp
cmp
sbb
cwde
out
and
rol
movs
loopne
out
cmp
jb
sbb
repz
lock
pop
not
cmc
inc
mov
sar
inc
add
test
push
mov
xor
test
mov
add
jbe
(bad)
xchg
sti
call
imul
out
ins
push
mov
std
inc
jle
fdiv
stos
test
aam
dec
xor
xlat
mov
adc
jmp
int3
arpl
jne
ror
dec
jmp
jae
jae
outs
imul
sub
(bad)
paddusb
or
mov
in
and
call
xor
pop
xchg
push
(bad)
and
dec
mov
xor
pop
inc
stos
imul
inc
or
out
jge
or
jmp
jle
jp
xchg
mov
bound
test
xchg
aas
arpl
xchg
adc
dec
and
fst
xor
adc
pop
int3
sbb
jg
or
cli
sbb
xchg
sub
enter
pop
mov
pop
push
neg
out
jp
div
cld
push
into
sbb
mov
xchg
xlat
xchg
dec
jle
les
mov
cli
xchg
retf
mov
fldcw
in
imul
movs
imul
dec
das
xchg
inc
ds
and
sbb
xchg
les
cmp
or
mov
mov
xor
jmp
ins
dec
pop
aaa
inc
mov
cmps
mov
jl
xchg
stos
dec
mov
pop
movs
xchg
ins
(bad)
jmp
movs
jl
xchg
mov
dec
(bad)
or
leave
pop
xchg
pop
call
mov
sub
pop
adc
pop
or
dec
cmps
dec
inc
imul
cmp
mov
cmps
inc
sar
and
cmp
nop
clc
sar
adc
cs
lahf
or
xchg
add
jne
adc
mov
out
int
mov
inc
jp
adc
lods
es
jnp
xchg
adc
leave
jl
and
or
mov
adc
xchg
inc
adc
popf
xor
pop
sbb
scas
pushf
pop
jo
pop
call
and
or
xchg
leave
sub
xor
inc
xlat
sbb
dec
cli
inc
loope
sub
inc
aad
mov
shr
cmps
mov
sbb
mov
inc
(bad)
xchg
pop
rol
xor
into
das
adc
xor
arpl
lock
inc
fsubr
mov
and
inc
shl
jmp
cwde
das
sar
mov
dec
into
jecxz
stos
shl
lahf
inc
shl
ins
inc
int3
add
(bad)
ins
mul
xlat
sbb
movs
push
mov
cmp
pop
push
or
test
repnz
xchg
jmp
aas
int
dec
int3
out
add
dec
or
fcom
or
js
fisub
push
lods
in
(bad)
les
mov
adc
mov
push
pop
inc
clc
jne
int3
add
pop
push
test
nop
sub
fsubp
add
and
scas
xor
adc
shl
xor
inc
out
sbb
adc
movs
xchg
jg
es
push
lods
and
cmps
push
inc
mov
outs
movs
(bad)
jne
push
repz
cdq
(bad)
jmp
fnstcw
dec
xchg
jl
sub
ins
pushf
or
inc
or
fstp
shr
fst
mov
mov
mov
mov
aad
imul
jg
lea
out
shr
cwde
push
mov
cmps
mov
mov
mov
das
push
or
mov
or
cmp
push
mov
lea
add
int
inc
sahf
nop
sbb
fidiv
aaa
stos
mov
adc
xor
mov
pop
dec
xchg
adc
push
retf
pusha
fldcw
xchg
xchg
mov
jge
mov
sub
(bad)
adc
push
mov
test
push
iret
dec
cmps
stc
mov
adc
dec
cld
lea
pop
outs
iret
mov
mov
pushf
jnp
imul
pop
mov
jo
cmc
jg
mov
in
add
stos
daa
jl
mov
mov
jae
fadd
ja
dec
rol
pop
mov
jo
frstor
fadd
iret
mov
test
stos
xchg
call
xchg
add
lods
ror
pop
(bad)
int
lods
montmul
cmps
lds
int
fsqrt
fmulp
and
gs
push
xor
mov
leave
fwait
jmp
cmp
out
test
sbb
mov
bound
xor
mov
ds
jmp
add
es
test
fwait
cmp
and
or
inc
mov
add
cmp
test
dec
cmp
retf
call
mov
and
cmp
cli
imul
movs
es
cmps
inc
cmp
dec
pop
test
inc
jmp
je
or
mov
pcmpgtw
dec
fist
push
outs
xchg
loop
test
sar
ins
sahf
inc
leave
xchg
add
xchg
add
leave
in
pop
xchg
pop
xor
xchg
fsub
pop
and
adc
xchg
jl
add
es
and
xchg
and
jb
sbb
cmp
xor
xor
xchg
mov
cld
inc
out
fdivr
outs
sbb
mov
mov
add
cmp
loope
and
push
cmp
nop
les
push
ret
mov
rcr
mov
rcl
mov
daa
cmps
xlat
pop
mov
mul
push
mov
nop
push
or
ficomp
fs
jl
push
jbe
jmp
(bad)
pop
mov
loope
movs
jb
cld
pop
jmp
loope
jg
ss
lods
lea
stos
push
jge
jecxz
xchg
jmp
inc
mov
mov
cmc
sar
push
push
mov
outs
in
cmp
pop
test
pop
loop
xor
push
sub
xor
add
xor
stc
push
mov
popa
out
rol
xchg
sub
jns
test
xchg
arpl
pop
pushf
inc
fidiv
or
xchg
pop
sub
cmp
sar
test
inc
dec
mov
push
sub
loopne
inc
jbe
movs
(bad)
xor
icebp
and
aas
into
cmp
je
ss
jmp
push
std
les
pop
cmp
das
je
pop
addr16
(bad)
cs
mov
rcr
mov
jnp
(bad)
call
hlt
mov
ret
(bad)
sti
jg
adc
xchg
int
scas
lahf
repnz
movs
ret
mov
in
sahf
jl
sub
cwde
in
xchg
popf
dec
adc
(bad)
ins
adc
inc
inc
pop
data16
daa
and
inc
fldenv
or
ror
sub
xchg
les
(bad)
cmp
cmp
adc
adc
jns
cmps
adc
bound
add
fwait
adc
xor
stc
mov
imul
lods
cmp
outs
sub
xchg
pop
sahf
retf
shl
mov
arpl
icebp
or
xchg
scas
xchg
xor
pop
pushf
xchg
ins
mov
jle
mov
icebp
adc
call
repz
push
rcr
xor
sbb
or
mov
ss
sub
push
movs
sub
mov
cmps
popf
mov
out
jecxz
cmp
sub
adc
popf
add
ins
(bad)
mov
call
cmp
mov
pop
sub
inc
pop
jmp
xchg
rol
push
xor
sub
mov
mov
lock
arpl
mov
and
pop
sub
lea
stc
stos
je
out
cmp
js
sahf
iret
mov
mov
inc
inc
fwait
shl
aaa
xchg
call
sti
push
retf
in
jbe
out
jmp
repz
mov
jg
jp
test
enter
int3
jge
add
in
sbb
dec
push
in
mov
mov
jb
mov
outs
test
retf
sbb
rcr
xchg
sbb
push
stos
pop
mov
mov
jmp
scas
cld
dec
mov
lock
cdq
jno
fisubr
cmc
push
or
out
jb
movs
imul
dec
out
scas
or
cmp
inc
add
jge
nop
mov
adc
sbb
out
push
and
retf
stos
and
xor
addr16
das
xchg
sar
in
pop
inc
fcos
fidivr
fimul
pop
adc
pop
in
lods
adc
xor
cs
in
jb
add
aam
adc
nop
mov
call
jbe
in
mov
icebp
repnz
pop
sub
pop
xchg
sub
jl
fld
sti
xchg
dec
arpl
xchg
or
xchg
xor
nop
push
loopne
push
call
out
pop
clc
ss
mov
mul
popa
pop
cdq
or
loop
bound
es
rcl
movs
mov
sbb
nop
jbe
(bad)
push
shl
jl
xchg
ja
dec
cmp
sub
xchg
mov
push
push
sbb
dec
std
adc
inc
inc
cli
loop
pop
in
adc
(bad)
fdivr
cmp
jnp
sub
test
pop
shl
jp
inc
cdq
ins
pushf
scas
(bad)
dec
in
pop
adc
adc
loopne
aad
lock
xchg
dec
xor
inc
jae
ret
aam
jp
mov
(bad)
xor
aad
inc
daa
popa
and
inc
cwde
or
leave
dec
lds
icebp
or
mov
or
xchg
in
xchg
or
inc
and
pop
(bad)
jmp
jbe
jmp
jne
arpl
jg
xor
les
nop
test
cmp
ror
fbld
loop
push
jl
mov
dec
jp
push
fsubr
(bad)
cmc
mov
dec
inc
push
or
call
sahf
pop
fwait
cmp
mov
dec
(bad)
inc
xor
ror
pop
cmp
mov
outs
adc
cmps
(bad)
hlt
add
fcmovbe
enter
adc
sbb
lahf
xchg
scas
dec
adc
xor
loope
mov
pop
push
jp
aam
jp
xor
shr
adc
scas
mov
fwait
in
mov
es
retf
jbe
fsubr
in
jnp
sub
xchg
ret
enter
dec
fs
mov
pop
movs
cmps
mov
mov
mov
int
sub
or
test
mov
dec
push
cmc
icebp
xor
data16
ret
or
mov
fs
or
not
xchg
jle
popf
sub
xchg
xchg
xor
dec
inc
jmp
lods
neg
xor
mov
into
sbb
cmp
gs
loope
and
shl
and
push
push
pop
or
or
icebp
push
inc
sti
aam
ret
push
sbb
fcom
and
jg
repnz
(bad)
lea
or
iret
in
cmps
cmp
popf
jnp
ret
lea
ret
(bad)
adc
pop
pop
loopne
jne
mov
jno
mov
and
dec
sub
mov
(bad)
ror
stos
mov
dec
mov
dec
fsubr
add
mov
outs
(bad)
iret
div
out
push
push
cmp
mov
xchg
adc
mov
mov
push
sub
in
imul
in
and
(bad)
test
mov
fxch
inc
lods
sahf
dec
pop
pop
(bad)
ds
dec
push
mov
sbb
pop
in
push
adc
dec
mov
jnp
inc
ja
add
out
mov
enter
scas
lahf
xchg
mov
dec
dec
pop
push
retf
popa
shl
pop
fistp
enter
xchg
xchg
push
repz
int3
jns
xchg
cs
test
mov
pusha
inc
ror
sub
das
jno
push
add
adc
dec
inc
rcr
js
xor
jne
mov
xchg
out
movs
mov
test
outs
cld
mov
das
xor
add
je
pop
mov
xchg
sub
outs
das
ror
mov
ins
adc
outs
or
cmp
fcomp
outs
out
data16
lods
xor
and
pop
xchg
daa
retf
(bad)
xchg
push
cld
xor
mov
sub
retf
stos
stc
ins
pushf
test
push
xchg
mov
push
jno
mov
add
out
dec
mov
push
adc
mov
sbb
shr
pop
in
cdq
rcr
in
les
mov
xchg
add
rol
xor
outs
imul
(bad)
shl
xchg
dec
mov
adc
mov
(bad)
ficomp
pushf
call
mov
jb
inc
sub
jae
test
add
cmp
add
out
xchg
in
mov
lods
sbb
fs
lahf
mov
push
gs
jno
push
int3
xor
movs
sar
jle
lea
push
push
std
and
jg
jns
add
movs
push
ja
xor
fwait
add
sbb
(bad)
and
jne
jecxz
js
mov
push
sub
inc
shr
sbb
das
loop
jno
cmp
sbb
fdiv
inc
std
adc
scas
xchg
mov
xor
mov
lds
cmp
dec
in
mov
dec
push
cmp
ja
retf
hlt
inc
pop
pop
or
or
push
fst
out
enter
das
mov
cmp
inc
dec
push
mov
inc
mul
dec
jno
imul
add
mov
push
fldenv
xor
(bad)
and
jo
loope
sub
xlat
call
mov
inc
xchg
pop
test
fisubr
xor
je
sub
bound
mov
je
dec
popf
loop
mov
pop
out
pop
mov
cmp
adc
jecxz
out
fsub
repz
or
push
pop
lock
and
push
jge
scas
sbb
loop
mov
shl
dec
mov
das
xchg
push
inc
mov
sbb
push
out
stc
repnz
js
pop
std
adc
cmp
and
inc
push
xchg
xchg
sbb
mov
push
mov
in
xor
clc
push
inc
test
xchg
adc
adc
stos
or
(bad)
ficom
(bad)
arpl
aas
aaa
addr16
push
mov
movs
mov
jmp
and
or
fsubp
ror
(bad)
fucomip
retf
xchg
fcom
addr16
jp
mov
pop
sub
push
call
shr
mov
inc
push
mov
in
jbe
pop
add
cmp
int
mov
clc
mov
mov
mov
inc
aas
sub
jmp
add
jge
mov
hlt
sbb
in
jp
mov
dec
mov
push
mov
inc
loop
inc
sub
fwait
aaa
popa
mov
loope
in
into
pop
jmp
cmc
mov
imul
das
mov
inc
mov
jmp
aam
jl
dec
ror
push
inc
lods
fbstp
mov
dec
jbe
cmp
sub
and
sahf
mov
xor
sbb
fwait
(bad)
popf
add
xchg
jae
add
jne
mov
rcr
jne
fwait
jmp
pop
imul
push
movs
nop
ins
retf
adc
and
jne
int
mov
int3
lods
or
push
fidivr
iret
aaa
clc
adc
fwait
aaa
cmp
ficomp
ins
(bad)
fild
shl
lods
jle
jnp
out
ja
ins
jmp
popa
loope
imul
mov
pop
dec
mov
jge
out
daa
pop
xchg
pop
cmps
je
mov
movs
mov
pop
cmc
data16
cmps
pop
ret
movs
cwde
mov
(bad)
fcomp
outs
shl
das
popa
and
push
xor
pop
adc
inc
push
pop
je
mov
loopne
je
ja
mov
cmp
cli
and
and
shl
mov
jecxz
js
mov
jmp
adc
mov
fwait
pop
inc
jg
shr
jp
ss
(bad)
push
mov
(bad)
pop
test
mov
addr16
fisub
pusha
sub
hlt
push
leave
adc
pop
mov
and
mov
enter
shl
mov
and
inc
icebp
fwait
jnp
(bad)
dec
inc
lds
pusha
loop
mov
mov
fs
repz
rcr
js
add
cld
mov
(bad)
jb
jp
test
xchg
popa
and
mov
loop
dec
push
call
cmp
pushf
adc
nop
imul
or
shl
mov
fstp
(bad)
(bad)
stos
scas
adc
cmps
sbb
inc
xchg
popa
push
into
cli
into
sti
xchg
adc
jmp
sub
fs
or
mov
sar
adc
pop
fldcw
shl
or
lahf
sahf
add
rcr
into
stc
inc
sbb
cmp
out
sbb
in
xor
sbb
fs
arpl
xchg
test
imul
mov
jl
jae
addr16
pcmpeqb
pop
cmp
ds
jb
das
ret
mov
mul
xlat
jnp
dec
adc
outs
rol
dec
imul
ss
jmp
jp
jl
imul
and
inc
in
and
mov
inc
movs
pop
cmp
sub
mov
aaa
out
cvtps2pi
xor
add
outs
test
push
mov
xchg
imul
sub
movs
lods
or
mov
cmc
popf
cld
stos
mov
jo
mov
inc
int3
shl
test
leave
mov
test
int3
jmp
cld
cld
fnstenv
imul
xchg
jg
xchg
sbb
dec
mov
div
out
dec
cwde
sar
inc
mov
cmps
add
mov
fs
jp
and
cwde
movs
add
dec
lahf
test
fxch
xor
mov
maskmovq
jle
jbe
jmp
sub
sub
(bad)
push
xchg
sub
mov
aad
(bad)
out
aas
repz
mov
stos
cdq
addr16
out
in
add
cmp
(bad)
mov
jmp
not
ficom
jb
adc
jmp
sub
fwait
mov
pop
inc
sar
movs
nop
out
repz
ror
pop
pop
jg
or
pop
sbb
push
jle
xor
xchg
push
popa
mov
je
addr16
cmp
clc
or
clc
fwait
sahf
(bad)
das
jmp
push
(bad)
rcr
mov
hlt
mov
test
sbb
mov
popa
in
in
push
push
or
cmp
icebp
add
cs
jae
and
lods
adc
adc
or
xchg
mov
lods
ds
xchg
popf
movs
in
les
mov
pop
mov
in
rol
mov
push
mov
add
pop
(bad)
jg
mov
jl
xchg
in
adc
mov
jge
xchg
inc
aam
mov
xor
adc
inc
xor
xrelease
and
push
movs
retf
cld
mov
xchg
cdq
add
xor
inc
add
ffreep
mov
loopne
mov
xchg
push
cli
mov
jg
clc
dec
nop
int
and
xchg
push
movs
mov
or
or
jb
or
clc
sbb
cmps
movs
mov
mov
pusha
and
(bad)
repnz
(bad)
xchg
jb
sub
rcl
lds
jg
std
or
sub
ret
cmp
sub
call
gs
(bad)
in
dec
xchg
mov
sbb
and
lahf
mov
repz
mov
pop
ret
scas
scas
jecxz
xchg
jmp
scas
cli
cmp
cld
xchg
mov
jmp
push
outs
sbb
test
mov
mov
fidivr
dec
les
sbb
outs
xor
rcl
sbb
cdq
inc
pop
mov
loop
pop
sub
mov
mov
out
scas
lock
mov
outs
outs
out
adc
push
(bad)
mov
jle
call
fiadd
adc
mov
mov
in
hlt
sti
push
fwait
or
jmp
mov
push
adc
xor
popa
cmp
xlat
ins
lods
sahf
add
mov
loopne
aas
idiv
cli
inc
xchg
shl
ss
xor
les
sbb
xchg
push
out
inc
cmp
jle
pop
sbb
mov
scas
cmps
mov
pop
lock
push
mov
shr
shr
pop
ins
jp
mov
mov
sub
mov
push
in
xchg
xchg
rcl
(bad)
loope
scas
loope
in
jnp
cmp
mov
out
nop
cmps
sub
rol
ror
add
mov
stc
rcr
push
pop
jg
jp
sub
movs
fsubr
fiadd
and
scas
stos
stc
repnz
inc
clc
sahf
call
inc
popf
scas
mov
jle
aam
dec
cmc
icebp
call
push
mov
dec
jmp
pop
lods
or
movs
xchg
das
add
jle
imul
pop
and
add
xor
sub
adc
sub
or
loope
push
es
jb
mov
pop
test
int3
jp
jmp
mov
inc
or
xlat
inc
cmovae
dec
fs
mov
ffree
cdq
pop
stc
fisttp
sbb
lods
dec
push
jno
into
adc
mov
fimul
sbb
sti
idiv
(bad)
cmc
or
and
lods
sub
pop
out
xchg
fcmovnu
fs
leave
fstp
xor
pop
or
inc
dec
mov
stc
fs
add
push
adc
pop
call
cdq
xchg
jecxz
lods
scas
mov
ins
mov
scas
aaa
and
rcl
adc
jecxz
and
imul
xor
outs
retf
outs
inc
and
les
aam
fisub
fwait
jb
fisttp
mov
cmps
inc
pop
pop
jbe
mov
add
fwait
jle
adc
int
xchg
adc
outs
outs
jge
dec
sub
add
or
adc
or
es
mov
add
jmp
cwde
jmp
aam
add
(bad)
mov
inc
or
sub
pop
int3
xchg
fbstp
sahf
cmps
xchg
dec
int
fidivr
sbb
xchg
push
sub
jmp
ds
push
repz
out
xchg
test
cld
in
repnz
(bad)
inc
inc
sub
mov
fnstsw
mov
or
or
sbb
push
jae
push
or
mov
adc
into
add
test
or
(bad)
pop
push
push
and
jmp
mov
inc
out
ds
dec
xor
ins
dec
int3
ret
stos
adc
test
lods
outs
mov
or
push
stos
shl
popf
popf
ror
inc
dec
pop
aas
jns
dec
(bad)
or
ror
shl
cmp
retf
adc
shrd
xchg
aaa
or
sub
pop
cmp
icebp
push
push
in
pop
mov
loop
dec
dec
in
sub
pop
dec
clc
and
mov
jae
clc
fimul
xchg
jl
arpl
movs
(bad)
sub
ret
mov
cmp
push
sbb
lahf
fwait
dec
push
mov
movs
(bad)
sub
dec
fst
int3
(bad)
mov
inc
dec
popf
dec
in
jb
or
mov
andnps
adc
xchg
fcom
jno
mov
mov
outs
mov
sub
inc
add
mov
lock
dec
sbb
jecxz
mov
dec
inc
or
inc
push
dec
in
adc
push
in
mov
dec
sbb
neg
cmp
(bad)
inc
shl
xlat
ret
adc
outs
js
or
test
out
jnp
fcom
out
aas
mov
cli
or
das
add
in
test
imul
and
repnz
sbb
mov
ret
or
sbb
pushf
pop
popa
pop
neg
inc
sbb
inc
adc
cmps
add
xchg
clc
(bad)
cwde
cmp
mov
mov
je
aaa
jl
sti
xor
dec
inc
shl
in
fst
xor
push
adc
sub
mov
sbb
or
and
in
sub
jecxz
sti
add
sbb
xor
(bad)
ins
int3
leave
loop
jmp
sbb
add
dec
inc
push
jg
xchg
add
test
cld
or
repz
cmp
push
popf
jns
std
hlt
iret
add
xor
shl
push
jp
push
loopne
shr
rol
lock
jnp
or
scas
pop
jne
imul
aaa
pop
shr
call
push
icebp
xchg
iret
push
push
xchg
test
outs
mov
lahf
mov
movs
imul
and
adc
cld
call
lds
fucomip
retf
or
and
mov
pushf
sub
push
add
pusha
ss
arpl
cmp
loop
leave
ret
xchg
xor
xor
aam
je
push
out
dec
fsubr
cmp
int
pop
std
test
cmp
push
fld
fisttp
(bad)
aad
sbb
in
and
fwait
push
jge
jge
inc
sbb
pop
movs
out
push
sub
adc
jb
inc
fld
movs
pop
jmp
cmp
out
push
adc
add
sbb
jmp
dec
xor
and
dec
icebp
adc
call
push
test
pop
jo
cmp
sub
cmps
jmp
popf
ins
leave
cmp
repnz
mov
int3
popa
call
cmovge
imul
fxtract
in
int
das
ror
fsubr
int
push
fiadd
cwde
cmp
in
iret
add
imul
sub
pop
cmp
sti
lods
mov
ss
aaa
leave
pop
stc
jl
shl
in
inc
scas
sub
or
push
dec
push
out
pop
inc
or
lds
xor
xor
sbb
stos
cmp
retf
jo
stos
(bad)
gs
xor
ja
add
dec
lods
xor
pop
scas
shr
iret
pop
jmp
mov
jb
fs
adc
repz
fs
arpl
pop
cld
imul
(bad)
daa
bound
ja
cmp
cwde
pusha
retf
mov
cmps
adc
sub
mov
jmp
inc
cmp
repz
in
pusha
sub
mov
dec
mov
xchg
mov
int
jno
pop
shr
into
xchg
mov
inc
jnp
xor
lds
dec
scas
push
rol
aam
clc
mov
fdivr
mov
inc
jae
push
adc
sub
test
adc
adc
xchg
push
fcmovb
scas
(bad)
cmp
pop
popa
mov
and
cmc
cmp
dec
int3
imul
push
jo
test
mov
in
pop
jmp
cdq
mov
jle
inc
xor
sub
mov
fwait
in
sub
lods
adc
add
stos
mov
inc
ss
arpl
test
ret
in
stos
mov
mov
popf
shl
stos
pop
mov
leave
pop
push
dec
in
icebp
imul
bound
mov
jmp
dec
lea
lods
adc
and
add
cmp
push
pusha
xor
cmp
mov
xor
out
movs
test
or
cmps
sub
pusha
mov
mov
mov
lea
rcl
fdiv
fsub
ds
or
or
fimul
jmp
test
push
stos
jmp
in
push
fld
inc
popa
jno
movs
ud0
jl
test
in
cmp
xor
and
jmp
push
add
xchg
ds
dec
push
sbb
bound
call
add
sub
or
mov
and
test
jns
pop
(bad)
pop
add
mov
adc
sar
xchg
hlt
lahf
push
mov
int
jge
pop
ficom
xor
jg
inc
sahf
pop
fwait
pop
call
je
mov
dec
mov
call
push
cwde
in
cmps
loope
mov
add
push
(bad)
mov
mov
inc
xchg
push
jnp
inc
test
cld
sub
dec
out
jg
dec
jns
pop
add
push
push
mov
add
jge
mov
dec
test
imul
sbb
int
and
push
mov
add
add
xchg
push
mov
mov
lahf
xchg
xchg
sub
les
push
in
ins
or
inc
pusha
rcl
stc
pop
xchg
bound
(bad)
retf
jmp
hlt
mov
mov
jp
dec
and
adc
out
push
push
add
movs
xor
scas
popa
cs
imul
dec
aam
mov
movs
jecxz
push
inc
aaa
ss
imul
(bad)
xor
sbb
mov
(bad)
xchg
(bad)
int3
push
xor
scas
leave
adc
mov
fld
push
int3
inc
mov
xchg
outs
sub
and
mov
daa
ja
div
and
jmp
icebp
lds
cs
stos
jae
sti
inc
lahf
iret
adc
(bad)
daa
pushf
iret
xor
xor
imul
fs
dec
fst
adc
cwde
mov
adc
les
ret
or
dec
pop
inc
int3
(bad)
clc
lods
and
cld
push
add
fs
and
mov
movs
or
xor
adc
inc
or
in
fld
inc
mov
data16
mov
cld
add
push
add
hlt
in
sbb
or
iret
add
mov
(bad)
xlat
dec
es
nop
movs
sbb
repnz
dec
dec
and
out
pop
jl
cs
sub
cmps
dec
push
push
mov
push
or
aaa
jb
retf
mov
fs
mov
mov
xor
lods
jge
adc
sbb
std
push
lods
loop
inc
xlat
test
je
mov
cmps
mov
mov
xchg
sbb
std
test
mov
jmp
cmp
clc
mov
rol
adc
in
stos
ret
retf
dec
es
mov
mov
nop
cmp
pop
mov
cli
je
xchg
adc
jnp
and
mov
sub
not
mov
dec
in
or
shl
fisttp
jmp
add
nop
jae
imul
js
pop
xor
retf
push
(bad)
stos
fld
popa
xor
imul
icebp
jge
mov
adc
loope
aaa
jmp
or
adc
dec
dec
clc
inc
cmp
imul
in
push
inc
add
push
dec
clc
xchg
(bad)
xor
div
aam
lds
push
or
or
and
fstp
addr16
xor
cmps
cmc
push
jge
sbb
xchg
mov
dec
inc
add
adc
and
cli
sub
cmp
call
call
pop
cmc
repz
popf
fwait
in
xor
jg
loop
lea
call
ins
cmp
push
imul
stos
xchg
lds
ds
inc
sub
or
cmps
movs
fnsave
ins
cmp
fidivr
mov
ret
and
sub
aam
retf
in
sar
add
in
aaa
hlt
in
fidiv
test
hlt
fs
push
shl
pop
push
test
push
push
push
shr
or
or
xor
das
cmc
cmps
adc
inc
leave
add
xchg
mov
hlt
inc
sbb
jle
add
lods
mov
js
push
ret
imul
adc
xchg
sub
cmp
ins
mov
pop
fwait
jmp
xlat
xchg
mov
add
aad
jg
or
imul
ror
cmps
xlat
mov
cmp
mov
dec
out
mov
loope
mov
cmp
sbb
dec
aas
sbb
xchg
imul
mov
test
xlat
cli
movs
sbb
xchg
push
xchg
int3
mov
sub
xchg
stc
dec
dec
push
xor
movs
loop
push
gs
xchg
adc
push
test
fsub
xchg
mov
mov
cmp
mov
dec
(bad)
repnz
mov
jbe
and
adc
jp
cmp
repnz
sub
inc
loopne
pusha
(bad)
sar
mov
pop
outs
push
(bad)
sbb
call
mov
mov
add
pop
test
fisttp
lahf
inc
loope
scas
pop
dec
push
add
mov
mov
lahf
outs
ror
inc
mov
mov
cdq
xlat
pop
adc
or
stos
outs
fwait
sub
in
out
ins
mov
and
cs
std
push
fstp
bound
push
mov
loop
jo
movs
add
call
int
dec
mov
pop
xor
adc
inc
xor
adc
pop
pop
es
jmp
xor
je
(bad)
jmp
inc
lock
jne
and
cmc
mov
push
push
outs
pop
jb
and
loope
sub
adc
push
inc
ins
jmp
(bad)
das
push
or
or
outs
push
xchg
ret
ins
pushf
mov
mul
rcl
cwde
add
push
or
sti
mov
test
in
xchg
ins
xchg
and
sbb
pop
xchg
jo
push
inc
pop
jb
retf
jg
dec
mov
aas
jae
imul
mov
inc
jmp
aad
and
fisubr
out
mov
push
sbb
lods
out
cmc
jno
add
outs
dec
xor
adc
or
mov
push
fs
scas
jl
jnp
mov
jmp
mov
(bad)
out
test
ins
sub
scas
jmp
les
and
loope
shl
cmovo
jnp
lods
aas
and
mov
out
dec
sub
jae
fs
aaa
adc
cmps
sub
imul
shl
jmp
push
jge
xchg
rcr
push
add
pop
test
dec
inc
and
add
jl
fistp
or
xchg
dec
dec
or
pushw
(bad)
ret
ss
std
vmovupd
sahf
hlt
mov
pusha
movs
iret
movs
in
daa
sub
call
adc
xchg
or
push
dec
mov
cmp
mov
jecxz
std
hlt
jg
hlt
or
mov
push
or
or
jbe
mov
sar
jle
shr
inc
and
ins
ret
shl
shl
popf
inc
sti
and
outs
jns
lahf
xor
xchg
lock
cmc
jle
pop
test
fild
push
sbb
call
mov
push
inc
inc
nop
out
inc
aad
mov
mov
or
rol
cmp
and
je
and
leave
rcr
ror
fcomp
popa
out
dec
mov
leave
mov
cmp
shl
stc
jge
or
inc
sub
arpl
(bad)
shr
das
mov
xchg
sbb
push
pop
call
ja
cmp
cli
mov
sbb
pop
and
adc
neg
movs
mov
sub
xchg
xchg
pop
retf
(bad)
cmp
mov
dec
xchg
and
out
in
es
dec
fucom
jb
addr16
je
xchg
or
push
mov
stos
scas
cmp
loopne
stos
or
mov
aaa
in
and
sub
mov
mov
push
add
push
cmp
or
repnz
dec
mov
jge
idiv
sbb
push
and
mov
jns
dec
mov
jno
dec
mov
or
popa
in
pushf
das
and
test
pop
movs
push
sti
clc
mov
mov
inc
push
loopne
fnstsw
cmp
cmc
pop
ret
sbb
pop
jne
mov
cmp
sar
jnp
and
out
aam
enter
call
lods
mov
xchg
ret
xor
cmp
imul
mov
mov
pusha
pop
rol
in
jb
pop
sar
je
sbb
popf
data16
gs
inc
les
ss
(bad)
mov
retf
cli
inc
mov
dec
cwde
cmp
cmp
push
mov
cmp
jno
push
in
std
adc
add
dec
jg
outs
outs
push
dec
imul
adc
aad
xchg
jo
jae
pop
lahf
fidivr
int3
fidiv
fisttp
add
inc
xor
arpl
push
sar
xor
(bad)
and
aad
fnstcw
push
hlt
or
push
inc
fisttp
mov
(bad)
nop
sbb
sub
rcl
mov
leave
jecxz
bound
test
cmp
mov
or
movs
pop
das
adc
mov
inc
mov
fstp
mov
sub
fisub
retf
pop
repz
push
ret
push
inc
jb
mov
das
(bad)
imul
xchg
push
imul
cmp
sub
enter
push
cmp
mov
stos
inc
syscall
dec
sub
outs
mov
sbb
and
or
push
neg
dec
ret
scas
add
arpl
add
mov
(bad)
repnz
jns
loop
or
pop
and
popa
adc
ja
xor
into
jmp
mov
ja
fisttp
imul
outs
xor
inc
inc
pop
ja
movs
movs
cld
push
aad
movs
retf
or
shr
and
push
jl
mov
adc
push
scas
mov
xor
(bad)
inc
or
add
stos
addr16
loope
into
fisttp
shr
xchg
out
push
ret
jle
push
test
xchg
scas
imul
(bad)
loopne
mov
retf
inc
into
stos
push
jae
pop
mov
sbb
mov
jge
mov
push
cwde
ror
ror
call
dec
hlt
xlat
dec
cmc
sbb
es
in
xchg
push
mov
inc
(bad)
jmp
jl
adc
mov
push
xchg
mov
mov
ins
adc
cmps
push
and
xchg
sahf
jb
or
scas
(bad)
dec
push
addr16
jo
and
(bad)
(bad)
leave
mov
mov
das
or
inc
dec
out
das
jb
fdivr
pop
dec
cli
cwde
loopne
std
mov
cmp
popf
sub
iret
xchg
sahf
inc
scas
or
cld
jmp
xchg
jmp
adc
add
pop
jae
cmp
and
sub
stos
test
mov
mov
repz
cwde
fs
loope
xchg
sbb
fldcw
inc
push
cmp
adc
pop
pop
xchg
sti
dec
repz
mov
stos
ins
cmp
jbe
je
outs
aas
cld
xor
clc
mov
or
cmp
in
mov
out
mov
mov
xchg
(bad)
sbb
push
imul
and
mov
mov
gs
sub
outs
xchg
add
mov
cld
fst
inc
push
push
fiadd
add
ins
ss
test
icebp
pop
inc
pop
pop
ins
jne
or
push
xor
nop
imul
repnz
mov
cmp
ins
pusha
icebp
xor
(bad)
pop
jae
sbb
pop
mov
mov
sbb
imul
inc
es
paddsb
push
mov
outs
inc
mov
sbb
jo
stos
pushf
shl
(bad)
cld
outs
push
mov
jno
and
mov
sbb
loop
sti
cmp
mov
nop
dec
adc
popa
call
mov
lods
xlat
imul
xchg
dec
repz
out
xor
jo
adc
pusha
dec
pusha
sti
jo
scas
data16
mov
in
or
loopne
add
sub
jns
mov
pushf
je
or
mov
out
ins
loope
(bad)
lahf
call
xor
mov
dec
mov
fdivr
lahf
lods
cmp
jo
test
and
(bad)
dec
lahf
and
(bad)
pop
pop
sbb
inc
data16
or
imul
loop
jmp
stc
cmp
jle
mov
out
mov
mov
in
stos
mov
sbb
sahf
mov
lods
mov
lds
pop
inc
je
out
imul
and
and
cmc
out
out
cmp
sbb
cwde
xchg
pushw
clc
sti
inc
sbb
(bad)
out
in
push
push
dec
cmp
nop
lahf
sti
das
or
xlat
mov
pop
dec
(bad)
mul
push
(bad)
xor
(bad)
jmp
dec
push
les
inc
(bad)
mov
mov
mov
test
inc
rcr
xchg
repnz
sub
arpl
jb
bound
js
and
pop
sahf
xchg
aam
sbb
imul
jae
bound
ficom
fldcw
jbe
push
xchg
cmp
adc
xor
test
shr
jle
popa
ss
cmp
daa
push
sbb
jae
xchg
adc
out
stc
scas
mov
aam
sub
ja
inc
ret
xor
and
or
mov
lahf
cmps
mov
das
aam
popa
cdq
out
enter
mov
xchg
push
lea
(bad)
in
xor
sbb
ds
daa
mov
jl
sub
add
push
xor
addr16
fld
shr
and
div
shl
leave
icebp
xchg
stc
pop
hlt
into
lock
daa
or
sbb
pusha
test
sub
xor
bound
ret
outs
ret
xchg
adc
ret
mov
xchg
mov
push
dec
rcl
jo
jbe
movs
into
xchg
pop
push
xor
jle
cdq
hlt
mov
in
scas
xchg
jp
dec
xlat
hlt
and
xor
mov
or
arpl
mov
dec
sub
movs
pop
jecxz
jns
or
dec
sbb
and
ins
shr
add
lds
shl
add
and
mov
in
test
push
ret
mov
retf
push
jmp
xchg
lahf
sti
dec
retf
das
repz
cmp
fwait
push
xor
es
cmc
jb
hlt
popa
jecxz
mov
sub
mov
mov
es
fistp
push
and
and
cmp
ins
pushf
push
aam
mov
mov
jp
push
sar
rcr
gs
daa
cmp
jp
sub
bound
jge
xchg
push
in
rol
cmps
outs
loopne
stos
jns
adc
mov
mov
pop
rol
inc
pusha
lds
adc
out
out
imul
loop
ds
push
mov
add
call
adc
jno
push
jge
fisubr
int3
out
pop
es
adc
xor
jno
jmp
push
inc
sub
mov
lea
stos
pusha
pop
test
cmps
inc
pop
hlt
(bad)
add
call
repz
dec
dec
xor
mov
mov
sub
xlat
fwait
cld
mov
jns
or
mov
or
push
ror
not
loop
paddb
iret
ret
inc
in
push
pop
dec
and
pusha
shl
mov
mov
out
aam
fadd
mov
sub
inc
imul
xor
daa
cld
mov
cmp
dec
iret
mov
leave
scas
xchg
mov
jmp
inc
cdq
rcr
jmp
fistp
jo
shl
sub
cmc
movs
in
test
and
inc
mov
pop
cmps
push
mov
sti
adc
pop
arpl
push
icebp
mov
xor
pop
mov
mov
push
bound
jmp
xor
mov
(bad)
xchg
xor
rcl
ret
iret
jmp
test
hlt
mov
cli
mov
sbb
inc
pop
scas
jge
scas
xor
inc
lock
in
bound
imul
xor
dec
jmp
(bad)
ds
loop
rcr
test
out
sub
pusha
cmps
outs
xor
cmps
test
xchg
pusha
fs
retf
imul
ja
mov
mov
add
scas
popf
sbb
push
fs
fmul
in
aas
mov
dec
cmps
add
jno
pop
mov
inc
mov
xchg
movs
push
loop
ja
aas
sub
mov
ja
ret
ret
xor
sub
xor
ds
fild
out
mov
xor
and
iret
push
pop
std
mov
xchg
in
dec
movs
adc
cld
les
xor
and
sub
sbb
jg
(bad)
sti
jne
lahf
mov
fwait
cdq
push
lods
cmp
fwait
cmp
out
add
sbb
test
cmp
jmp
xlat
call
mov
push
add
xchg
pop
fidiv
xchg
sahf
jg
les
jecxz
repnz
mov
cwde
test
xlat
sbb
or
inc
sti
data16
mov
dec
and
das
icebp
(bad)
(bad)
push
or
aas
mov
(bad)
push
aaa
jle
clc
je
jecxz
(bad)
test
add
or
sub
test
fld
rcl
lods
popf
or
pusha
aad
sub
stos
jmp
jl
pusha
cmp
jmp
mov
xchg
cwde
mov
jnp
mov
jno
mov
and
aas
pop
and
iret
pop
mov
xchg
fs
and
mov
ss
and
sbb
cdq
or
cld
xor
sub
pushf
call
cli
in
in
mov
std
sub
jge
jmp
push
mov
cld
pop
fwait
dec
mov
pop
mov
arpl
out
loop
xor
mov
scas
xchg
jbe
js
mov
scas
pop
ret
mov
cdq
arpl
jle
cmp
in
(bad)
jns
imul
ss
outs
add
dec
mov
jge
fsubrp
loopne
dec
lods
lock
pop
pop
mov
mov
cmp
inc
out
jb
add
mov
lds
sti
aas
inc
sub
or
stc
jle
inc
icebp
(bad)
jecxz
cmp
sbb
ficomp
int3
ror
mov
test
icebp
add
mov
cld
add
mov
retf
xchg
mov
pop
add
ss
push
xor
fadd
mov
movs
sub
loopne
test
outs
inc
push
out
test
sbb
mov
xor
not
leave
mov
pop
ror
sub
mov
call
rcl
scas
cmp
(bad)
cs
jmp
and
inc
or
shl
fcmovnb
pop
and
aas
add
cmp
fidiv
jns
stc
aad
es
rol
dec
jnp
lea
xor
ss
loop
xor
clc
pop
add
retf
xchg
sti
push
ins
pop
iret
cmps
ss
pop
adc
ja
in
and
mov
call
cmp
mov
(bad)
pop
add
pop
mov
mov
mov
mov
jno
jecxz
retf
pop
mov
sub
mov
push
stos
mov
cmps
stc
(bad)
jecxz
mul
int
push
aad
daa
shr
push
cld
bound
mov
js
add
jl
movs
cld
in
mov
nop
loop
push
xchg
ins
inc
sub
ret
push
scas
pop
outs
fs
or
sub
es
mov
push
dec
xchg
mov
or
or
inc
movs
jmp
inc
push
xchg
aam
and
xchg
inc
sbb
mov
(bad)
rol
popf
lock
or
lods
loop
add
push
xchg
ins
cs
jb
inc
aaa
mov
data16
xchg
sbb
call
lahf
hlt
(bad)
jo
shl
aad
xor
dec
add
sbb
mov
ss
fxam
int
retf
sub
and
jnp
movs
movs
ds
cmp
pop
pusha
ss
inc
lea
popf
jno
cs
sbb
xor
cdq
data16
pop
cli
add
dec
je
sub
add
mov
push
cmps
xlat
adc
jbe
bound
pushf
int
iret
mov
add
ret
jmp
(bad)
push
imul
fdiv
push
ins
xchg
jmp
fisttp
and
scas
jecxz
pop
adc
pop
jmp
inc
in
in
add
rcr
mov
cmp
push
mov
sbb
fwait
xchg
aam
retf
add
outs
mov
int
pop
xchg
dec
pop
dec
mov
add
add
pushf
jge
fld
outs
or
imul
dec
mov
or
xor
inc
xchg
cmp
dec
in
sbb
and
into
loopne
aad
cwde
and
push
outs
lahf
jmp
inc
adc
add
aad
xor
mov
fs
and
clc
mov
push
repnz
xchg
adc
test
(bad)
and
pop
std
cs
mov
sub
sti
mov
jnp
gs
cs
push
nop
pushf
cmp
pop
imul
jmp
int
push
retf
push
adc
jo
das
fdiv
inc
ins
fwait
add
aas
sub
cli
sub
cmp
and
inc
pop
xchg
adc
outs
imul
mov
xchg
es
mov
enter
or
xor
adc
neg
adc
mov
jbe
add
jmp
sub
bound
out
sbb
xlat
dec
mov
cld
cmc
cmp
inc
xchg
clc
add
xlat
mov
and
icebp
pop
mov
dec
sbb
sub
iret
sti
add
jg
sbb
in
mov
retf
jecxz
push
mov
or
fiadd
test
(bad)
pop
jns
int3
or
arpl
(bad)
xchg
xor
hlt
push
pop
retf
iret
and
sahf
hlt
outs
cmp
addr16
or
xor
lock
cld
fwait
cwde
in
and
aas
sbb
push
mov
mov
inc
xor
jo
or
inc
jmp
rol
mov
cld
imul
pop
pop
mov
mov
(bad)
pop
add
cs
fwait
pop
outs
and
sub
push
add
int
test
hlt
push
jp
jg
mov
cmp
inc
lods
pop
aam
xlat
adc
int3
mov
into
or
mov
test
xor
xor
test
cmp
pop
jns
inc
and
(bad)
scas
ss
adc
dec
test
sbb
cmp
push
gs
dec
fwait
ja
in
add
js
push
shl
stos
add
test
and
mov
push
shl
in
popf
mov
je
loopne
pop
pop
(bad)
jnp
pop
ds
in
xor
jmp
test
cmp
daa
fild
sar
pop
not
adc
jne
pusha
dec
cld
xchg
pop
shr
xchg
stos
and
out
push
mov
add
fmul
std
aad
enter
out
adc
movs
dec
(bad)
fistp
leave
xchg
ret
pusha
xchg
sahf
(bad)
dec
sahf
pusha
cmps
mov
mov
sbb
hlt
push
pop
mov
cmp
adc
js
dec
stos
inc
sub
or
mov
test
(bad)
jmp
add
test
cmovbe
cmc
mov
xchg
rol
enter
int
add
pop
mov
shl
adc
outs
jno
out
(bad)
cmp
adc
in
outs
and
dec
cli
daa
pop
jl
mov
pop
or
retf
push
or
ss
fstp
movs
or
in
pop
or
xchg
sti
mov
cmp
pop
mov
xchg
xlat
inc
scas
xchg
fadd
xchg
inc
push
call
lods
iret
(bad)
in
in
push
repnz
arpl
std
sbb
or
int
ja
outs
add
repnz
data16
sar
adc
(bad)
in
xchg
out
movs
movs
loopne
pop
cmps
loope
and
shl
mov
outs
mov
xchg
aas
dec
jne
jb
xchg
inc
call
in
xor
das
or
pushf
xchg
call
mov
push
pusha
jae
shl
sub
cmp
mov
dec
cmp
fwait
xchg
int3
loopne
test
and
cs
sahf
dec
jmp
push
add
mov
loopne
frstor
jge
and
add
dec
adc
mov
jl
icebp
dec
inc
add
mov
dec
fadd
cs
hlt
shl
ja
adc
cmp
out
sub
xor
lea
cli
mov
rcl
outs
dec
cmps
jecxz
push
hlt
cmp
xor
fucomp
and
adc
stc
out
jl
jb
xchg
pop
cvttps2pi
mov
and
dec
lods
loopne
jmp
jbe
test
fstp
ficom
inc
ror
imul
pop
push
(bad)
in
aad
fisub
dec
adc
leave
out
and
xchg
cmp
mov
paddsb
lea
dec
cmp
cmps
mov
add
sti
ins
xlat
imul
aas
xchg
mov
mov
ret
or
jnp
sbb
mov
and
test
xchg
dec
xchg
(bad)
ins
mov
call
mov
call
aaa
pushf
jae
ret
jmp
ror
add
cmp
packssdw
addr16
scas
jnp
fld
mov
lock
fnstenv
xchg
inc
call
xchg
or
iret
dec
push
jle
xor
and
mov
addr16
pop
cmp
ret
adc
mov
xor
add
sub
add
jg
sbb
sub
shr
lods
xchg
movs
mov
sub
mov
lods
jmp
fisttp
cmp
aad
jge
popa
xchg
fadd
xchg
in
retf
aad
jl
test
push
arpl
xchg
rol
sbb
int
xor
sbb
in
sbb
xchg
jo
inc
ins
js
pop
push
lods
xchg
mov
(bad)
push
xor
jmp
dec
jb
adc
imul
cmp
add
xchg
in
sub
sbb
mov
push
arpl
shl
pop
in
stos
imul
jo
ficom
nop
ins
ins
bound
ret
repnz
out
or
cmps
(bad)
imul
inc
and
mov
or
aad
jl
call
jp
repnz
push
mov
call
xor
sub
sub
call
push
add
(bad)
or
div
xor
inc
out
pop
pop
mov
rcr
cmps
xor
gs
stos
out
inc
leave
imul
inc
push
outs
cmp
push
xor
cmp
cmp
sub
out
or
in
pop
shr
pop
jg
inc
dec
hlt
das
dec
jmp
adc
push
cdq
or
adc
sbb
cmps
and
pop
call
bound
xadd
(bad)
mov
add
jae
mov
lahf
aaa
and
scas
imul
cli
sub
or
fnstcw
xchg
push
sub
aaa
loop
and
ret
and
adc
lahf
mov
mov
adc
pop
in
jge
jo
mov
inc
xchg
adc
dec
cmp
mov
sub
adc
add
in
xchg
bound
aaa
hlt
or
test
jge
mov
sub
sub
pop
mov
in
adc
hlt
daa
jbe
btr
push
inc
add
add
xchg
xor
fld
xchg
cmp
in
push
sbb
iret
ja
clc
xor
mov
push
and
lods
xchg
pop
jbe
mov
clc
push
es
cmp
jp
leave
int3
cli
pop
xor
sub
cwde
dec
fisubr
add
jb
(bad)
arpl
xor
icebp
xor
adc
xchg
cmp
loop
aam
inc
ret
in
xor
push
mov
mov
inc
ror
dec
mov
add
mov
imul
in
add
fmulp
push
data16
shl
test
and
jge
dec
ret
loopne
retf
clc
and
bound
loopne
test
in
(bad)
xchg
mov
xor
aas
jl
scas
(bad)
fistp
xor
dec
xor
(bad)
fadd
cmp
push
push
add
push
ror
pusha
sub
sub
in
test
mov
dec
pop
out
and
adc
mov
xchg
rcr
sbb
cs
loopne
sub
int
jb
in
dec
add
imul
lods
push
fiadd
add
dec
xor
mov
out
inc
jmp
cmp
or
push
sub
test
shl
stos
(bad)
shl
and
add
mov
mov
(bad)
cmp
fdivr
jae
jb
inc
call
xchg
js
cmp
cmc
pop
(bad)
pop
in
cs
xchg
xor
sbb
inc
and
pusha
xor
dec
std
inc
out
sahf
fsubr
fimul
inc
test
jg
gs
adc
mov
mov
cmp
dec
outs
lock
mov
or
mov
imul
push
in
out
push
aaa
(bad)
mov
mov
das
fidiv
lea
lahf
dec
sbb
xchg
mov
inc
and
inc
std
sub
pop
and
jge
std
gs
pushf
add
repnz
mov
aam
fs
xor
xor
cmp
inc
cs
jmp
jle
dec
dec
fcmovnbe
pop
and
lock
push
mov
test
ret
inc
sbb
mov
cli
outs
loopne
inc
sub
xor
icebp
push
rol
mov
inc
dec
inc
inc
scas
pop
popa
sub
jg
fnstenv
jo
xor
lods
imul
out
push
leave
std
xor
adc
jnp
sub
xchg
xchg
cmp
mov
or
enter
js
xor
sbb
mov
(bad)
pop
jg
add
dec
stc
push
pop
cwde
aaa
loop
(bad)
mov
imul
neg
into
gs
xor
fucomi
jb
push
sti
test
lsl
mov
mov
jne
jbe
pop
sub
sbb
js
cs
or
data16
xor
fnstcw
(bad)
mov
sub
stos
pop
jmp
out
xchg
inc
push
das
cmp
xchg
leave
aas
test
pop
jmp
cmc
adc
out
call
add
movs
iret
enter
out
leave
test
xor
loopne
mov
jne
add
xchg
and
loope
out
into
lahf
clc
cmp
les
jnp
dec
jmp
add
enter
or
mov
adc
in
xor
fwait
jmp
inc
xlat
pop
mov
in
mov
xchg
sub
inc
or
lock
mov
loopne
ficomp
fwait
push
ins
or
or
loopne
(bad)
cmp
leave
repnz
dec
rol
cmp
adc
(bad)
dec
xchg
push
(bad)
adc
adc
push
jmp
into
inc
jge
pop
pop
fadd
add
xor
push
cmps
jle
mov
test
cmp
pop
retf
adc
lods
fist
push
mov
mov
jle
cmps
sbb
outs
out
push
mov
scas
outs
dec
mov
ins
mov
and
stos
xchg
outs
cmp
(bad)
and
test
sahf
push
push
aas
int3
loope
call
cli
mov
cmps
mov
cli
push
mov
push
mov
(bad)
mov
sahf
lods
fdivr
sar
cld
lea
ds
ja
cwde
jge
push
mov
mov
mov
xor
add
jno
ror
ret
or
mov
fnsave
pop
inc
push
fadd
mov
mov
add
aas
test
add
loope
push
sar
mov
cmp
pop
push
add
lahf
mov
in
inc
adc
clc
out
adc
push
sub
lea
mov
pop
xchg
and
mov
ror
or
repz
dec
pop
push
loope
xor
mov
jl
jmp
push
sub
sbb
lahf
adc
addr16
jg
cmp
sub
and
dec
ja
pushf
xchg
mov
jmp
mov
repnz
test
test
add
sub
jle
jno
sahf
mov
push
pop
pushf
sbb
cld
xchg
sahf
jp
jne
cmovle
mov
inc
jo
mov
or
xchg
fcom
xor
mov
jnp
movs
mov
iret
jnp
cmp
and
sbb
(bad)
jmp
cs
fwait
mov
in
test
xchg
sub
inc
dec
leave
mul
cmc
aaa
mov
jae
sti
stc
xlat
dec
xchg
nop
cwde
cmp
ret
mov
lods
les
retf
pusha
adc
mov
int3
jge
mov
call
arpl
daa
mov
and
xor
pop
lods
mov
test
lahf
add
inc
adc
inc
leave
dec
loop
jns
adc
inc
push
call
ret
push
jb
js
lods
test
push
mov
cli
ret
pop
in
sub
repz
sti
xchg
cmps
mov
push
in
or
jp
ret
jmp
stos
mov
lock
sub
iret
jo
stc
adc
dec
pop
pop
jbe
out
mov
adc
fcomp
xor
mov
loope
or
rcr
pop
fld
sbb
cdq
mov
cmp
lea
imul
push
ret
inc
stc
popf
jb
out
fsubr
sub
or
mov
jnp
iret
out
sub
jns
pop
sub
jno
cdq
into
test
out
daa
cmc
outs
pop
stos
push
and
out
jmp
push
add
fistp
rol
lahf
or
fucomip
push
stos
jae
mov
popf
or
outs
sub
push
call
ud0
adc
(bad)
pminsw
ds
xchg
cmp
pop
test
add
push
or
fs
test
inc
and
dec
adc
enter
xor
mov
dec
test
xchg
(bad)
daa
sahf
imul
push
out
adc
into
fcom
aam
std
add
or
fnstenv
(bad)
lea
aam
cld
push
inc
out
pop
icebp
pop
pop
call
ds
pop
test
mov
retf
pop
outs
jnp
shl
cdq
sub
je
dec
inc
jnp
xchg
dec
outs
inc
lock
or
inc
or
and
or
test
jmp
cmp
ins
mov
daa
aaa
and
add
xchg
pop
sahf
outs
das
(bad)
fld
in
inc
or
cld
cdq
jae
in
xchg
or
dec
xchg
lea
loop
mov
xor
add
add
mov
jecxz
push
push
sub
fbstp
imul
imul
xchg
jg
sbb
mov
jge
jg
cmp
test
jmp
pop
test
jecxz
adc
(bad)
jnp
sub
test
popf
and
movs
mov
ret
retf
pop
jg
div
pusha
fcomp
sub
pop
mov
pusha
(bad)
cmps
mov
mov
mov
enter
data16
or
into
jo
sub
jmp
pop
mov
fsubr
mov
push
dec
inc
mov
pop
jl
cmc
fiadd
mov
(bad)
(bad)
sbb
adc
fs
adc
fild
dec
xor
push
sbb
push
imul
sbb
mov
sbb
xor
cmp
add
push
or
jb
xchg
hlt
fs
mov
mov
paddb
or
loopne
xchg
cmp
imul
pop
or
call
xchg
jbe
xchg
cmp
sub
mov
inc
cwde
cmp
mov
(bad)
and
iret
movs
push
scas
lahf
hlt
ins
adc
das
and
mov
outs
cmp
out
bound
cdq
test
dec
sub
movs
inc
pop
sub
loopne
js
pminub
sahf
mov
loopne
shl
mov
les
or
(bad)
push
pop
leave
aam
out
nop
daa
aaa
mov
adc
mov
mov
sbb
dec
cdq
pop
clc
mov
push
cmps
jne
mov
add
jnp
in
cmps
xlat
jne
push
xchg
dec
add
push
dec
aad
push
cmp
fnstcw
(bad)
(bad)
popf
pop
dec
outs
addr16
fidivr
das
add
push
inc
cwde
addr16
jb
mov
mul
stos
lds
shl
xchg
cmp
lock
lea
pop
das
imul
or
je
push
cmc
xor
mov
fucomip
pushf
repnz
repz
(bad)
mov
repz
aad
mov
jbe
popa
jnp
or
psrad
jg
pop
(bad)
cmp
rol
inc
jo
or
pop
shl
in
mov
jmp
and
xor
push
test
(bad)
push
push
je
add
push
push
jmp
(bad)
cmps
jae
mov
stc
and
inc
into
in
out
jmp
lahf
scas
xchg
jmp
xchg
adc
adc
ins
mov
dec
movs
imul
xor
shl
pop
(bad)
iret
sub
mov
xchg
ja
aad
and
dec
out
mov
jecxz
cmp
push
mov
mov
addr16
jge
outs
cmc
je
jp
sub
ja
fisttp
mov
addr16
xrstor
retf
sti
idiv
mov
push
out
or
stos
pop
cmp
add
lea
inc
jo
mov
mov
(bad)
retf
aaa
or
push
loop
inc
push
xchg
xor
loopne
or
mov
fwait
cli
jg
mov
jb
jge
pop
ss
mov
les
jl
mov
mov
push
mov
sbb
push
xchg
xor
enter
enter
cs
pop
mov
repz
out
inc
jns
or
dec
ds
int3
or
add
les
cmp
rol
cmp
das
xchg
fstp
rcr
push
lahf
mov
push
jnp
(bad)
enter
xchg
dec
mov
or
xlat
lea
test
inc
jge
push
adc
xor
fisubr
std
sti
cmp
pop
jmp
lock
push
xchg
cs
or
dec
push
sub
adc
or
les
sbb
mov
and
ret
push
cmps
in
scas
xchg
inc
in
xchg
mov
fiadd
test
jmp
rcr
xor
loopne
shl
mov
inc
inc
in
cmp
mov
test
pop
ja
stc
and
push
dec
call
xchg
scas
inc
push
(bad)
(bad)
xor
jl
inc
(bad)
test
dec
and
mov
loopne
mov
mov
jb
xor
or
and
test
mov
xor
pop
and
shl
imul
mov
add
dec
popf
ficom
cdq
retf
push
fidivr
sub
jmp
push
dec
out
pop
mov
cmc
sti
rcl
mov
repz
sbb
xor
sub
and
adc
cmp
jno
dec
mov
int
xor
(bad)
jg
jge
call
inc
fsub
test
jmp
(bad)
retf
xchg
call
xor
mov
ud2
adc
lods
(bad)
stos
pop
pop
push
jle
jnp
mov
out
mov
xor
and
pop
add
mov
aas
xlat
jecxz
call
dec
std
add
mov
jmp
jmp
mov
or
mov
out
ret
adc
jmp
stos
mov
jns
or
push
stc
inc
xchg
ins
imul
xchg
stos
in
popa
mov
sbb
aas
jp
scas
int3
in
mov
mov
out
xchg
out
je
movs
cmp
cmps
jns
repz
sub
push
into
jo
mov
pop
dec
or
jle
cdq
out
shl
push
cmp
mov
jno
stc
or
xchg
fwait
mov
cli
(bad)
js
add
inc
xchg
test
das
cmc
push
mov
div
push
pop
cld
and
xor
jmp
call
xor
cmps
mov
lea
in
mov
or
adc
loop
scas
mov
lahf
ja
jecxz
hlt
jbe
xor
mov
in
xchg
fild
es
fisub
sti
pfpnacc
sbb
sub
leave
cmp
cld
scas
push
ja
mov
inc
mov
jp
call
adc
test
shl
dec
cli
stos
inc
and
mov
sbb
in
xchg
fmul
mov
pop
stos
and
xchg
inc
mov
adc
push
pop
mov
imul
cmp
or
pop
add
and
adc
pop
dec
jp
movs
into
push
or
shl
nop
fmul
pop
ret
jle
jle
repz
or
cmps
mov
in
cmp
add
and
test
jne
loop
ins
mov
xchg
scas
jne
ds
and
sbb
inc
cmps
popf
inc
inc
or
loop
loopne
jle
mov
shl
jb
mov
pop
mov
cwde
int
aam
rcl
cmp
stos
int
xor
es
push
test
and
xchg
xchg
cmps
mov
loope
sub
je
scas
jmp
xchg
scas
imul
cmp
add
loop
mov
test
dec
int
xor
ja
inc
(bad)
jg
inc
iret
adc
popf
(bad)
(bad)
jmp
(bad)
add
in
fnstsw
test
mov
and
shl
inc
pop
lock
jmp
movs
inc
call
push
or
in
sbb
(bad)
into
sahf
shr
aaa
jo
in
inc
or
fcmovb
into
inc
add
ins
mov
les
cmp
pop
ja
pop
pop
mov
jge
cli
pop
push
jle
scas
pop
loopne
fmul
push
jmp
mov
ficomp
jb
ins
jne
popa
fisub
outs
jne
pusha
cld
fcom
push
(bad)
in
lock
xchg
test
jmp
lods
cli
cdq
out
adc
lahf
mov
cld
ins
fwait
in
jle
test
or
adc
mov
in
fwait
adc
mov
test
sbb
rcl
pop
sbb
(bad)
stos
mov
sbb
scas
std
(bad)
pop
aaa
movs
dec
mov
add
cmc
retf
inc
xlat
mul
rcr
or
adc
sub
jecxz
ret
push
xor
ins
pop
sti
(bad)
jp
adc
sbb
sbb
xor
and
cdq
sub
and
hlt
push
mov
push
add
popa
jg
push
cmp
jl
add
test
pop
repnz
icebp
dec
adc
call
rcr
ror
dec
dec
ds
lock
cs
adc
or
mov
repz
scas
pusha
dec
cli
js
fnstsw
sub
leave
retf
push
imul
sti
pushf
inc
sti
and
sbb
retf
xor
ins
(bad)
dec
ds
out
mov
leave
test
ins
inc
mov
or
mov
in
loop
push
mov
cmp
retf
xor
loop
clc
shl
push
shl
mov
fdivr
xor
es
mov
xchg
cmps
sub
sbb
in
mov
jge
push
xchg
push
or
add
lods
shl
mov
cwde
sbb
(bad)
rol
push
bound
sub
dec
jp
jecxz
das
xchg
dec
mov
push
sub
div
in
fdivr
out
scas
adc
xchg
getsec
inc
cmp
push
test
rcl
pop
stc
inc
call
pushf
aaa
daa
test
jge
sub
mov
ror
push
jns
adc
xchg
or
(bad)
dec
mov
sub
dec
in
or
xchg
mov
lds
or
(bad)
or
loopne
xchg
mov
xchg
cmp
xchg
cmp
pusha
push
cmp
cmp
jne
sub
inc
jmp
adc
xor
jmp
ror
add
push
popa
test
push
nop
xor
inc
dec
pop
movs
jmp
inc
arpl
and
mov
push
and
movs
ret
aam
out
imul
xor
jecxz
sub
xor
inc
lea
jmp
bound
xchg
mov
jae
xchg
(bad)
dec
(bad)
sub
xor
mov
out
jmp
enter
add
jno
sti
dec
(bad)
in
jmp
gs
fcmovnu
gs
(bad)
out
xchg
in
push
push
cmp
(bad)
(bad)
lahf
cld
rcl
sub
out
(bad)
div
test
fsub
mov
push
ret
add
dec
pushf
inc
cld
and
cwde
mov
inc
and
add
pushf
inc
or
push
gs
add
sub
(bad)
cmp
adc
pushf
int3
mov
jno
leave
mov
mov
stos
pop
xor
lea
loop
inc
add
retf
push
mov
out
int3
jg
adc
sbb
es
inc
xchg
out
clc
stc
aaa
in
pop
xchg
(bad)
and
pop
mov
aad
inc
dec
xor
repz
out
mul
mov
aad
retf
mov
ret
adc
jp
or
daa
dec
add
in
mov
rol
out
mov
xor
cmp
stos
cmp
xor
pop
inc
add
(bad)
clc
mov
mov
push
pushf
inc
fild
bound
pop
bound
out
push
cmps
jno
push
sub
in
mov
push
jmp
in
push
jge
cmp
mov
jb
jae
push
jns
sbb
xor
xlat
xor
push
cmps
in
dec
push
and
int
popf
rcr
test
jp
rol
call
pop
fadd
and
and
pusha
sti
xchg
movs
xor
sahf
psrad
into
mov
repnz
jae
ja
adc
(bad)
(bad)
ins
inc
loopne
movq
arpl
push
in
and
push
mov
sbb
scas
pop
sbb
popa
out
dec
adc
cmps
adc
out
stc
(bad)
mov
add
mov
add
retfw
outs
xchg
inc
dec
dec
inc
call
xchg
push
jae
add
loop
jae
sbb
lahf
aaa
nop
xor
ins
jae
int3
inc
mov
push
(bad)
int3
test
enter
mov
iret
inc
sti
out
sub
jb
xchg
adc
call
xchg
mov
nop
xchg
fmul
xor
xchg
push
test
ja
sbb
mov
nop
sbb
sub
(bad)
cmp
xor
icebp
daa
in
cld
stos
mov
xor
jge
movs
call
add
ja
fsubr
loop
mov
pop
sbb
in
shr
add
push
inc
ins
shl
(bad)
sti
fwait
pop
adc
sbb
mov
ss
sub
push
cmp
dec
jb
mov
inc
add
icebp
lea
call
(bad)
inc
jb
pop
clc
sbb
(bad)
icebp
sbb
xor
shr
repnz
out
popaw
dec
inc
std
pop
dec
and
out
mov
pop
push
bound
popf
out
(bad)
pusha
test
inc
jmp
inc
pop
pop
daa
out
adc
not
jbe
pop
inc
xchg
movs
in
or
xor
into
dec
(bad)
fs
xor
and
mov
idiv
cmp
imul
fisubr
gs
jecxz
mov
mov
(bad)
dec
int
rcr
js
dec
(bad)
xor
(bad)
(bad)
loopne
adc
cwde
jmp
movs
and
xchg
cdq
movs
call
xor
pop
je
or
mov
add
inc
lods
loop
je
xchg
fldenv
test
rcr
jecxz
fimul
mov
mov
call
mov
add
mov
adc
pop
push
scas
addr16
ja
xchg
mov
pop
sub
sub
lock
xor
out
stos
inc
outs
call
test
fucomi
fs
adc
mov
icebp
push
push
dec
clc
xlat
push
cmps
mov
lahf
in
pop
sub
repz
xchg
mov
out
(bad)
sub
daa
jl
cmp
dec
aad
in
xor
movs
fadd
loopne
or
ss
cld
arpl
push
sti
out
das
leave
pop
lds
cld
imul
(bad)
sbb
stc
fsub
xchg
push
push
sti
stos
popa
mov
std
out
addr16
cld
or
pop
mov
cmps
mov
enter
imul
mov
and
stc
mov
fwait
or
xchg
and
mov
add
test
mov
jmp
sub
mov
sar
push
imul
push
fimul
mov
out
ja
mov
into
sbb
xor
sbb
inc
bound
fs
pop
pop
xchg
push
sahf
ins
xchg
xlat
push
inc
rcl
cmp
sbb
dec
xchg
jl
pop
push
ins
pusha
mov
(bad)
je
gs
jecxz
or
outs
xor
inc
pop
ss
pop
sahf
lods
xchg
(bad)
sbb
add
(bad)
scas
shl
test
mov
mov
div
xchg
clc
mov
gs
cli
xor
or
test
ret
shr
cmp
jl
mov
out
call
jl
mov
sbb
(bad)
loop
aaa
sahf
mov
jno
lds
pop
or
stos
jno
in
xchg
call
adc
int3
rcl
cdq
ret
shr
pop
outs
loop
das
leave
std
out
(bad)
movs
mov
leave
std
inc
xchg
mov
mov
lahf
xor
and
fidivr
pop
ss
mov
add
sbb
out
out
push
(bad)
fdivr
mov
je
sub
push
xchg
xor
std
xchg
mov
sbb
out
inc
out
mov
aaa
mov
sub
pusha
mov
cwde
cmp
pop
ja
lods
bnd
mov
jbe
mov
mov
mov
cmp
and
dec
mov
test
xor
adc
xchg
lock
mov
imul
hlt
int
bound
fs
mov
shl
loopne
push
idiv
pop
adc
push
(bad)
jnp
mov
push
ret
jg
and
nop
cld
dec
(bad)
adc
lock
cmp
sbb
and
pop
lock
sbb
dec
mov
out
mov
ret
sub
jg
movs
(bad)
scas
fwait
sbb
cdq
cmp
or
adc
dec
or
rcl
mov
sub
dec
iret
xchg
and
scas
out
inc
iret
add
icebp
sbb
fdiv
cmps
mov
cmp
lea
ss
std
pop
(bad)
cdq
lods
or
in
jle
mov
and
test
inc
stos
loopne
lahf
lds
shr
inc
jne
stc
(bad)
jmp
out
adc
inc
test
mov
dec
sub
jl
sub
jge
mov
sub
popf
push
movs
sbb
push
mov
xchg
gs
cmp
cmp
mov
(bad)
and
xchg
bound
les
mov
into
mov
imul
popa
mov
push
dec
(bad)
pop
int3
push
xor
dec
popa
addr16
jo
scas
icebp
jecxz
lea
cmp
and
mov
inc
(bad)
mov
fisubr
out
ficom
mov
pop
(bad)
hlt
fwait
mov
das
xor
mov
sbb
inc
or
sub
pop
pop
mov
retf
cmp
jle
xchg
ret
jae
int
out
adc
jp
mov
dec
jle
aas
call
les
inc
call
xor
inc
mov
jle
adc
cmc
sub
aas
sbb
lock
imul
cmp
and
addr16
aam
mov
xor
test
fnstenv
jl
mov
push
outs
xor
cmp
mov
rcl
out
data16
jnp
inc
jae
pop
pushf
sbb
dec
xchg
out
mov
fdivr
aam
mov
es
inc
sub
cmc
les
int
mov
ficomp
pop
movs
jns
outs
gs
sub
mov
sub
aam
pop
inc
movd
xchg
aaa
jo
jb
mov
jns
or
retf
pop
iret
mov
jge
fimul
out
dec
sub
cld
retf
xor
rcl
jle
inc
not
and
shl
and
jns
scas
ret
imul
jno
enter
in
mov
mov
sbb
pop
das
test
pop
pop
dec
adc
and
xchg
pop
sbb
xor
xor
push
pusha
shl
fidivr
pop
popa
in
stos
and
xchg
jge
xor
fnstenv
pop
stos
ret
push
je
lds
out
fcmovne
mov
test
jl
dec
idiv
jl
pop
or
jecxz
mov
jle
push
inc
inc
out
in
xchg
cmps
les
or
cmp
inc
fxtract
outs
movs
fcomp
(bad)
mov
fdivr
push
jg
cmp
sub
push
inc
int3
mov
mov
lods
lds
fcom
jmp
repnz
stos
sub
rol
push
and
aas
push
ins
and
jnp
xor
sub
push
jno
push
adc
jmp
mov
lea
cwde
xor
sbb
sub
call
js
jmp
fisubr
pop
inc
mov
les
dec
popa
pop
out
cmc
sbb
add
cmps
sti
out
pop
sub
mov
repz
das
mov
mov
pop
pop
inc
dec
cld
in
outs
stos
imul
xchg
fadd
stos
bound
ds
das
fnstsw
ficom
and
fidiv
call
sub
loope
lods
ror
sar
push
ds
ins
inc
mov
push
int3
mov
xchg
xor
push
sbb
cld
cdq
inc
call
sbb
js
xor
pop
pop
sar
and
dec
jg
test
pop
mov
shr
xchg
dec
mov
xor
(bad)
ficom
inc
lahf
jb
jmp
in
in
mov
arpl
sbb
test
mov
cmp
or
xchg
xchg
jbe
mov
cwde
and
ins
lea
sub
pop
call
lods
cmp
test
sbb
(bad)
push
mov
adc
lods
xchg
cwde
stos
mov
(bad)
aas
sub
jecxz
jl
rcr
mov
inc
jne
test
inc
lds
jge
or
and
or
or
cli
push
ins
mov
in
pusha
cmp
test
test
dec
cmp
stos
popf
fistp
jns
lods
sub
sub
inc
mov
fwait
inc
mov
mov
and
jnp
les
dec
adc
mov
inc
push
mov
dec
fidiv
inc
or
or
fwait
sbb
(bad)
dec
enter
and
pop
scas
mov
lods
lods
inc
pusha
sbb
in
cmpxchg
adc
gs
jae
ins
movs
push
lds
push
cmc
dec
push
frstor
mov
xor
inc
push
and
(bad)
or
dec
retf
or
xlat
inc
les
ret
mov
fdiv
out
mov
into
fild
gs
jmp
dec
mov
mov
sub
cmps
jo
mov
xor
repnz
stos
ret
adc
setg
ret
push
fwait
mov
jl
push
jge
das
test
pop
cwde
pop
aad
call
cmc
repnz
mov
loopne
test
stos
push
das
int3
or
push
stc
xor
rcr
fwait
inc
mov
jmp
mov
mov
pushf
aas
adc
mov
icebp
xor
add
jl
cmp
inc
cli
data16
mov
les
mov
and
sub
jl
int
cmp
cs
pop
jno
xchg
mov
gs
mov
call
sub
cmp
pop
push
imul
cmp
adc
inc
mov
test
or
idiv
aas
sbb
cmps
enter
bound
lods
out
pop
jbe
cmp
pop
dec
sbb
fadd
nop
jb
jmp
cwde
inc
mov
adc
sar
push
mov
rol
push
sub
out
outs
pop
(bad)
or
mov
cmps
dec
loop
mov
out
xchg
dec
jno
pop
push
mov
cmp
mov
cmp
mov
rol
xchg
and
call
xchg
cwde
cld
stos
popa
(bad)
(bad)
std
inc
jge
cmp
ret
mov
(bad)
dec
dec
int3
push
mov
mov
adc
out
add
fistp
xchg
push
mov
pop
cwde
jnp
mov
cwde
xchg
je
js
push
add
pusha
mov
retf
dec
sub
shl
dec
jo
aaa
fisub
jmp
xor
xchg
and
call
adc
scas
iret
pop
mov
es
fcomp
mov
out
lods
and
add
push
loopne
cmps
std
or
add
push
gs
imul
call
enter
test
xchg
std
mov
dec
or
mov
test
mov
pop
sar
xor
sar
pop
inc
ret
aas
imul
push
pop
out
xor
int3
lock
pop
test
test
nop
sbb
pop
sti
jmp
xor
push
in
and
retf
push
mov
sahf
fsub
daa
xor
ins
sbb
cmc
arpl
idiv
push
mov
inc
mov
not
retf
sub
fistp
mov
xchg
fld
sahf
(bad)
mov
xchg
push
sub
sbb
push
idiv
cmp
clc
cmps
pop
dec
jle
test
sub
inc
pop
xor
fnstsw
push
test
out
call
mov
(bad)
cmp
cmc
lods
mov
xchg
out
mov
leave
or
icebp
sti
test
mov
fadd
test
inc
sub
fs
sub
jp
int
addr16
int3
leave
pop
aad
fst
retf
or
sahf
jns
sar
add
mov
jbe
loope
rcl
xchg
cmps
cmp
xchg
add
das
mov
lods
push
add
mov
xchg
and
retf
jno
mov
jnp
pop
leave
in
add
push
pop
scas
xor
cmps
sar
outs
mov
or
sub
mov
into
pop
movs
in
push
test
mov
mov
loope
les
loop
xchg
xlat
les
lods
imul
fnsave
out
xor
repnz
jmp
add
test
or
dec
lds
mov
xchg
out
jae
stc
into
adc
pushw
sar
cmp
je
mov
sub
call
fwait
sbb
mov
ret
cmps
sbb
in
(bad)
mov
mov
or
pop
xor
pop
pop
add
fs
pop
js
add
and
xchg
dec
xor
cdq
neg
push
xor
xor
rcl
jbe
rcr
sti
out
mov
cmp
sub
pop
push
jmp
inc
popa
pop
jns
not
cmp
jle
mul
jbe
jb
test
add
sbb
sbb
ror
pop
xor
loopne
jg
mov
aaa
jg
push
mov
sbb
jb
mov
mov
push
inc
push
js
push
test
adc
ret
jmp
inc
pushfw
mov
xchg
mov
jecxz
fisub
ret
pop
in
pop
pop
(bad)
mov
jno
(bad)
clc
xchg
add
scas
daa
cmp
stc
pop
push
inc
sub
mov
mov
sub
adc
sub
repz
xor
dec
dec
enter
push
push
cwde
sbb
jp
imul
in
int
(bad)
xchg
test
pop
xlat
pop
retf
les
xchg
pop
push
stc
call
outs
adc
test
out
int3
in
mov
or
nop
das
cmp
out
mov
ret
cld
lea
cmp
and
jb
inc
inc
mov
lock
fistp
ins
aas
call
(bad)
cdq
test
xchg
push
addr16
aad
dec
popa
push
scas
std
and
jno
sub
repz
mov
out
xchg
es
or
and
mov
mov
cmp
pushf
lea
xchg
xor
mov
lds
pushf
jle
or
push
aaa
int3
shr
stos
movs
jmp
xchg
add
or
xor
xchg
push
fnstsw
popa
cmp
int
mov
adc
cdq
or
test
pop
dec
inc
loopne
or
in
xchg
ins
dec
repz
xchg
push
test
outs
adc
adc
data16
movs
adc
dec
add
imul
pop
inc
test
loope
jns
nop
pop
pop
fwait
inc
(bad)
pop
and
xor
adc
ins
mov
cld
sti
in
jle
inc
scas
push
sbb
dec
mov
repz
aam
or
pop
out
cmps
mov
or
mov
xlat
xchg
hlt
mov
jp
mov
add
scas
jns
sub
clc
fadd
aas
pop
aad
arpl
xor
jecxz
sub
jnp
mov
(bad)
hlt
cdq
jge
cmp
and
xlat
cmp
in
sub
call
les
pop
je
loopne
shr
mul
lods
pop
and
and
nop
jne
ins
or
jp
jbe
inc
fild
sbb
xor
cmc
push
inc
shr
push
sub
fmulp
push
imul
inc
dec
fcom
xor
(bad)
xlat
arpl
test
ins
loopne
mov
pop
imul
or
push
pushf
sbb
push
and
(bad)
push
fisttp
(bad)
out
cmp
cli
clc
stc
icebp
xchg
bound
sub
fucomip
fs
retf
add
mov
push
mov
mov
dec
in
out
in
adc
mov
pop
pop
lock
jge
push
push
cmp
in
and
int3
inc
push
mov
sub
dec
outs
sbb
out
js
cdq
mov
clc
xchg
adc
jmp
mov
fild
inc
push
repz
inc
(bad)
ror
ja
retf
mov
adc
ins
stos
pop
xor
icebp
pop
(bad)
clc
sub
xor
repz
mov
int3
js
inc
vmulss
or
lods
sub
int
loopne
repnz
arpl
in
cmp
loop
(bad)
adc
ins
pushf
jnp
cs
(bad)
xchg
pop
arpl
inc
or
ins
fimul
lods
push
outs
pop
repz
or
imul
std
push
cli
add
popf
fcmovne
out
add
popf
data16
stos
and
mov
cmps
sbb
in
push
lahf
test
sub
jg
mov
mov
sbb
in
jg
jge
jp
add
adc
xor
js
sub
sub
push
mov
gs
jg
jge
add
hlt
iret
hlt
lods
adc
aaa
in
leave
sub
adc
push
dec
inc
xchg
pop
pop
jg
sbb
cmp
inc
cwde
or
pop
dec
icebp
ja
xor
mov
fsubr
std
mov
fist
mov
pop
or
pop
retf
adc
imul
mov
fucompp
xchg
push
sbb
pop
push
push
ja
ds
int
xor
cmp
(bad)
(bad)
nop
jo
cld
jmp
jg
fcomi
jle
mov
movs
mov
aad
out
add
fcomp
mov
adc
add
add
push
pop
leave
int
pop
sub
and
nop
xor
push
push
popf
aaa
and
mov
add
nop
aam
jge
mov
je
pushf
cmp
loope
nop
out
ss
enter
cmc
sbb
fadd
mov
popa
out
sub
fild
test
add
rol
mov
mov
cmp
and
jge
sub
add
inc
or
xchg
imul
aas
push
mov
and
adc
sbb
mov
add
inc
jg
and
mov
mov
mov
mov
xor
mov
inc
jb
mov
aad
shl
push
fnstenv
cmc
cmps
xchg
iret
cdq
dec
dec
and
push
in
dec
xchg
call
mov
jns
imul
ins
push
dec
retf
retf
or
push
outs
stc
add
dec
xor
mov
and
adc
je
rcr
int3
sahf
xor
lea
fisub
push
rcl
les
loope
sub
mov
push
emms
and
int3
mov
jb
mov
or
pop
push
sbb
outs
lods
pop
cdq
xor
push
or
inc
into
add
shr
in
jmp
jle
push
iret
leave
dec
mov
sbb
push
xor
cmps
xor
loope
fisubr
push
add
ret
or
push
gs
std
jne
or
push
sti
pop
retf
es
xchg
pusha
popf
jle
aaa
test
sub
dec
jecxz
jne
inc
div
or
add
out
std
call
and
sbb
clc
jno
ins
push
repz
jg
xchg
dec
mov
inc
jae
or
push
or
loop
or
sub
adc
mov
out
ret
pop
iret
sbb
sti
fadd
pop
mov
xchg
jge
or
rcr
stos
lds
cmps
inc
and
out
rcr
popf
adc
movs
cs
lods
retf
in
cmp
aas
inc
stc
mov
leave
mov
stos
inc
test
data16
cmc
dec
mov
mov
push
into
gs
jle
inc
or
movs
jg
les
aaa
ins
cmp
cmps
ja
pop
cmp
inc
inc
sub
xchg
sub
jns
xchg
fstp
lahf
push
enter
pusha
adc
cld
jno
in
cmp
inc
ret
xor
cmp
cld
repnz
mov
lods
cdq
bound
sub
cmc
out
out
pop
mov
aam
(bad)
mov
(bad)
ficom
das
imul
enter
stos
pop
lock
dec
inc
out
aas
xchg
(bad)
jb
aas
aam
gs
loop
retf
push
adc
cmp
cli
adc
in
hlt
scas
movs
xchg
and
xor
mov
mov
icebp
jmp
sbb
lock
rcl
pop
out
fs
xchg
mov
cmp
pop
sbb
imul
xchg
add
sbb
sbb
jns
mov
sub
call
js
pop
xchg
inc
(bad)
dec
jmp
pop
xor
bound
imul
mov
push
jns
inc
repz
xor
repz
int3
test
and
push
xor
add
sbb
sbb
call
(bad)
push
icebp
je
and
adc
inc
ins
xchg
mov
inc
push
call
mov
mov
inc
ins
test
xchg
(bad)
add
mov
jbe
cmp
inc
repz
mov
retf
inc
pop
iret
in
in
ss
ror
pushf
out
dec
in
(bad)
sbb
aad
fdivr
ins
dec
cld
mov
(bad)
mov
fdivr
cdq
mov
cwde
xor
push
pusha
ss
sub
das
js
push
ret
sbb
(bad)
mov
ja
add
push
push
dec
test
mov
pop
and
call
mov
mov
fnsave
fs
fstp
push
add
push
into
sub
ror
shl
add
out
cmp
or
movs
hlt
cmps
lahf
mov
jge
jp
mov
ret
fisttp
jge
mov
mov
inc
add
pop
jno
jp
in
or
dec
in
lea
loope
mov
jno
pop
mov
sar
ds
jle
dec
enter
jbe
(bad)
mov
jge
pusha
loop
retf
sbb
icebp
mov
fmul
out
enter
mov
xchg
lahf
jmp
cmp
ficomp
js
imul
mov
pop
sar
repnz
bound
icebp
cmp
js
ins
mov
xchg
sbb
js
mov
aam
xlat
adc
adc
and
fcom
or
xor
addr16
ss
xlat
(bad)
cli
mov
mov
es
call
loope
cld
mov
push
or
rcl
jo
push
sbb
inc
mov
push
es
add
fwait
pop
adc
push
das
xchg
(bad)
imul
and
rcr
fsubrp
cmc
(bad)
rol
js
out
add
dec
mov
imul
inc
lea
xor
mov
pop
daa
mov
jbe
mov
jecxz
test
and
dec
mov
inc
fidivr
pop
sbb
lea
inc
xchg
push
inc
xor
ret
adc
icebp
sbb
push
jge
je
call
sbb
call
sub
sbb
retf
push
push
rol
pop
lods
sub
es
inc
jno
add
inc
sbb
jmp
loop
rcl
cmp
sti
jge
mov
mov
mov
retf
inc
ds
mov
loope
mov
push
push
add
mov
mov
dec
into
in
cwde
xchg
dec
and
pop
sbb
push
cmps
inc
ss
int
cwde
sub
aad
xchg
icebp
movs
sar
inc
gs
movs
retf
in
shl
jmp
pop
out
mov
jnp
xchg
test
cmp
pop
mov
or
fild
or
push
xchg
cmp
stc
ja
lods
pop
in
bound
mov
scas
lods
push
daa
mov
call
js
stos
mov
xor
inc
and
repz
add
stos
mov
mov
pop
mov
dec
add
dec
dec
adc
mov
push
loop
lea
(bad)
loop
idiv
cmp
sbb
in
add
mov
je
movs
fimul
(bad)
sti
retf
dec
gs
xchg
and
inc
mov
dec
jle
jo
pop
inc
in
aad
cli
data16
fsub
sbb
ins
cmp
adc
cmc
jg
push
xchg
or
ret
push
out
in
pop
mov
jl
call
sete
pop
shr
xchg
pop
(bad)
lds
scas
jp
pop
or
mov
js
cmp
imul
js
cmp
inc
mov
mov
xchg
(bad)
xchg
xchg
bound
adc
fcomp
call
add
and
jae
lea
jp
inc
gs
fsub
mov
xchg
mov
fistp
mov
ins
jnp
lahf
push
shr
xchg
sahf
jp
mov
push
(bad)
sahf
xor
xor
pushf
js
dec
mov
xchg
pop
xor
hlt
stos
or
xor
pop
cwde
in
int3
mov
sub
mov
rcl
ret
out
jnp
arpl
push
or
cdq
xor
fisttp
mov
jecxz
cmps
test
push
out
aad
jecxz
(bad)
mov
ds
lds
add
movs
(bad)
icebp
shr
pusha
pop
push
push
in
fld
jp
push
dec
sub
movs
sub
pop
xor
xchg
cmc
stos
adc
pop
sub
repnz
and
fbstp
pop
xchg
xchg
cld
sub
pop
mov
call
or
push
fcmovbe
and
xor
xchg
jbe
xchg
pushf
jno
scas
or
inc
cmp
ins
xchg
jl
pop
push
cmps
sub
enter
mov
pop
mov
fild
into
sbb
pop
inc
mov
xchg
sub
and
movs
dec
push
inc
pushf
aam
jno
jae
dec
xlat
cwde
sub
aam
fmul
sahf
jae
sbb
(bad)
fcomp
push
push
ror
adc
imul
jno
sti
cmp
adc
dec
and
imul
outs
pop
movs
mov
pusha
out
jns
aas
gs
fcmovne
fwait
push
(bad)
repz
inc
sub
pop
cwde
lods
inc
xor
stc
imul
mov
mov
dec
xor
repnz
fst
sub
push
cmps
iret
(bad)
arpl
jl
out
mov
dec
mov
push
int
xchg
iret
push
sub
sub
popa
mov
mov
imul
cmp
or
sbb
push
xchg
movs
shl
add
push
push
sti
(bad)
(bad)
ins
jmp
(bad)
hlt
loope
adc
sub
sbb
jmp
test
xchg
scas
push
stos
cmp
adc
inc
cli
jg
jmp
stos
pusha
push
repz
pushf
mov
outs
jle
cs
xchg
dec
je
xchg
add
repnz
call
xchg
leave
jbe
and
retf
fnsave
sar
sbb
loop
jbe
sub
push
push
pop
xchg
shl
fld
mov
inc
xchg
xchg
dec
clc
scas
and
pop
xchg
xor
sbb
out
bnd
add
mov
adc
or
lahf
bound
jge
or
or
imul
dec
mov
push
push
mov
(bad)
outs
and
jns
sub
cld
pop
and
push
inc
imul
jno
mov
inc
xchg
add
and
mov
or
fstp
cli
pushf
mov
in
aad
pop
gs
mov
xchg
or
shl
imul
sbb
push
test
ds
xchg
lock
xchg
and
pusha
dec
xchg
xor
push
or
push
mov
lahf
call
mov
repz
data16
sub
push
test
call
(bad)
cmps
(bad)
(bad)
sub
shl
emms
and
scas
mov
inc
jl
pop
mov
(bad)
int3
mov
mov
xchg
jmp
scas
leave
add
pop
or
inc
dec
bound
dec
and
rol
test
enter
dec
jecxz
adc
mov
shl
clc
in
jne
jbe
movs
push
cs
mov
cs
fmul
pop
sahf
jge
adc
sbb
cmps
mov
jbe
inc
fist
stc
dec
mov
js
and
cmp
cmp
bound
jb
xor
cmp
fs
cdq
xchg
mov
mov
add
imul
jecxz
dec
aad
es
mov
inc
aad
mov
(bad)
pop
or
pop
aam
(bad)
sub
xchg
mov
out
clc
outs
mov
pop
cmp
cmp
dec
test
shl
or
pop
add
and
dec
std
push
je
sbb
adc
push
sbb
mov
or
call
(bad)
ins
retf
add
and
push
mov
js
call
add
mov
jb
(bad)
test
push
stos
outs
and
iret
sti
fsubrp
cmp
loopne
nop
xchg
cmp
mov
fsubr
and
pushf
mov
sub
xor
xor
stos
and
pop
mov
cmp
xor
mov
es
call
cdq
adc
push
xor
xor
cmp
pushf
lods
call
mov
push
ror
loope
lock
fs
jae
repz
push
sub
ja
sub
(bad)
movs
mov
inc
cmp
cli
pop
dec
iret
mov
xor
lods
xchg
and
fsub
pop
es
scas
dec
cld
shr
cdq
sub
es
sbb
add
shl
cmp
dec
outs
or
dec
sub
xor
nop
cwde
das
xlat
jle
dec
push
pop
mov
or
jmp
pusha
pop
xor
jo
ror
stos
jb
add
movs
(bad)
enter
cmp
(bad)
ja
lahf
out
iret
xchg
int
daa
scas
ja
ja
cmc
cmp
test
pop
sub
pop
push
ins
cmp
pop
(bad)
hlt
mov
pop
cmp
scas
(bad)
loop
xchg
(bad)
fisttp
shr
rcl
pop
stos
xor
mov
stc
sbb
pop
dec
fadd
sar
cmp
fsubp
cli
out
div
popa
cs
mul
mov
jns
fiadd
dec
jle
inc
jmp
inc
xor
cmp
sub
(bad)
or
xchg
(bad)
mov
stos
xor
push
mov
cmp
mov
ficom
xor
mov
xlat
push
fbld
mov
jl
mov
adc
xchg
pop
mov
jecxz
daa
cli
cs
cmps
adc
sub
pop
pushf
pushf
jg
call
push
sbb
pop
and
(bad)
hlt
outs
pop
mov
shr
sub
add
and
addr16
or
jl
jbe
stc
xchg
lods
xchg
or
mov
adc
loop
add
push
dec
daa
or
jae
xlat
xchg
push
xor
inc
xor
out
push
or
sub
aam
mov
push
popa
ds
mov
adc
push
pop
out
and
sahf
mov
into
inc
mov
pop
addr16
or
mov
cmps
or
rcr
ds
add
xor
mov
repz
mov
aaa
mov
test
jnp
cmp
fcom
cs
stc
push
cdq
pushf
add
adc
xchg
pop
add
mov
leave
xchg
push
adc
in
call
xor
clc
std
aaa
jmp
ins
test
data16
jge
and
retf
aad
jns
pop
je
lods
sahf
popa
ins
in
dec
jno
mov
jp
pop
out
push
jle
je
and
lods
mov
sbb
aad
test
mov
push
jno
(bad)
int
mov
jne
scas
add
jbe
xlat
jae
ss
pop
mov
rcr
imul
mov
cli
loopne
or
ds
das
or
mov
dec
leave
xor
dec
push
fwait
addr16
not
sub
push
add
sub
mov
in
push
and
jns
sub
addr16
mov
push
add
test
and
(bad)
inc
popf
xor
lahf
inc
(bad)
mov
aaa
jmp
ror
xchg
fist
sub
dec
pushf
cmp
cmp
aad
adc
std
test
daa
in
enter
sbb
cmp
imul
mov
daa
cmp
xchg
and
cld
repz
mov
inc
xor
jno
adc
lock
popf
sbb
mov
jle
addr16
imul
cdq
cs
and
sub
pusha
mov
jo
cmp
add
repz
pop
and
inc
ret
dec
dec
sbb
sub
add
adc
xchg
adc
into
outs
in
sub
mov
imul
sub
jnp
and
push
fbstp
mov
add
loope
fcom
xchg
fsub
das
ret
mov
add
pop
js
sbb
pop
xor
xlat
pop
rol
cmps
std
inc
fwait
cmp
fst
mov
xchg
or
and
das
jmp
mov
repz
mov
dec
nop
repnz
xor
ficomp
repz
shr
aad
les
and
stc
push
xchg
into
test
pusha
jb
fstp
xchg
push
je
ds
ins
(bad)
sti
dec
jle
pop
std
shl
enter
and
mov
mov
mov
ins
sub
jge
cmps
pop
xchg
cdq
push
lods
and
jbe
mov
fs
je
ins
enter
enter
test
rol
jmp
mov
xor
ja
pop
dec
test
int3
xor
sub
pop
push
mov
out
jmp
(bad)
stos
loope
push
cdq
shl
xor
sahf
ret
bound
bswap
add
add
jl
dec
push
popf
jp
in
(bad)
xor
sbb
lods
xor
mov
pop
and
mov
jo
fdiv
dec
xlat
pop
out
fnstcw
xor
repnz
call
jl
mov
scas
enter
test
ss
mov
xchg
inc
inc
dec
fidiv
xor
adc
mov
xor
(bad)
or
jecxz
xlat
or
sub
pop
cli
jle
or
sahf
out
ficom
pop
iret
xchg
shr
mov
or
rol
jle
sub
mov
into
leave
add
lea
outs
pop
push
in
sub
xchg
mov
push
ins
dec
pop
push
neg
pop
mov
js
in
sub
adc
mov
imul
repnz
enter
sbb
adc
jns
icebp
sbb
mov
loope
jmp
pop
cmp
xlat
(bad)
mov
js
sbb
dec
and
jmp
pop
dec
(bad)
dec
dec
or
out
inc
stc
call
pop
cwde
fadd
dec
mov
imul
sub
mov
dec
int3
and
adc
out
stc
xor
icebp
fnstenv
das
scas
(bad)
jns
cmp
mov
fld
sub
ficom
mov
dec
jecxz
cli
adc
and
(bad)
dec
in
mov
sahf
xor
inc
dec
pop
jns
pop
sahf
repnz
push
fisub
retf
jno
xor
sub
add
cdq
pop
mov
dec
and
jno
sbb
leave
or
adc
iret
sbb
jns
daa
dec
(bad)
push
dec
icebp
mov
popa
mov
push
sbb
fnstcw
es
lea
add
jae
mov
ret
(bad)
push
jne
add
ret
mov
mov
mov
jns
(bad)
out
data16
ret
(bad)
jg
je
das
pop
sbb
aaa
mov
mov
pop
outs
fcomp
aas
hlt
adc
mov
idiv
push
xor
icebp
jns
and
stos
xor
sahf
xor
sar
imul
stc
scas
test
test
aaa
into
push
jbe
imul
mov
(bad)
push
add
pop
and
aaa
jns
aas
and
adc
or
call
or
mov
sub
mov
mov
jge
add
pop
loop
adc
inc
cld
pop
xchg
jg
fucom
sbb
inc
sub
cmp
xchg
pop
add
(bad)
pop
ror
and
and
inc
test
jge
mov
xchg
pop
mov
in
out
inc
push
lock
sub
sub
out
ss
add
dec
iret
inc
aaa
dec
xor
aad
(bad)
jmp
pop
mov
loopne
ins
mov
dec
inc
jl
test
(bad)
sahf
xor
xor
pop
sub
nop
or
idiv
cmp
dec
ret
loope
enter
icebp
cmp
stos
clc
push
push
aad
pop
pop
inc
out
(bad)
out
test
xchg
outs
sbb
xor
jle
call
das
jbe
xchg
out
imul
stos
and
sbb
out
dec
push
arpl
je
(bad)
scas
sbb
dec
jmp
movs
jns
int3
jge
sub
xlat
lock
dec
jb
dec
in
popa
jecxz
(bad)
pop
(bad)
or
nop
pop
xchg
mov
aam
repz
scas
lock
cmp
mov
mov
xchg
add
add
ins
mov
aam
jp
outs
push
mov
mov
(bad)
fld
cld
dec
inc
ret
pop
pop
pusha
cwde
addr16
sub
stos
or
out
pop
inc
repz
repnz
aam
cs
sar
enter
or
daa
sti
mov
ins
mov
imul
push
imul
or
pop
ret
add
mov
int
dec
sub
mov
push
jle
in
scas
push
xchg
popf
ds
xchg
dec
pop
cli
call
mov
push
out
(bad)
not
xchg
jp
xchg
or
adc
and
mov
push
imul
adc
inc
js
(bad)
push
jmp
pop
mov
mov
daa
enter
popa
fmul
out
push
xor
mov
cmp
bswap
pop
cmp
jge
xchg
jcxz
pushf
(bad)
in
cmp
inc
fcomp
das
ins
jle
lods
retf
outs
pushf
bnd
into
inc
xor
jle
jle
mov
stos
call
push
pop
inc
lods
das
fsub
sahf
in
retf
imul
frstor
mov
sbb
push
sub
push
retf
neg
stos
jge
out
and
aaa
mov
jo
push
mov
in
aad
outs
mov
mov
cmp
into
cmp
imul
pop
xlat
push
xchg
jg
ffree
cwde
jg
dec
push
push
addr16
add
into
jns
test
jmp
dec
shr
sub
outs
mov
cmp
inc
cdq
sub
out
cmp
ins
mov
jecxz
std
mov
xor
sbb
push
sar
jo
mov
je
mov
mov
jb
jmp
add
pop
jg
push
js
xchg
cwde
retf
pop
fist
out
mov
xor
cmc
pusha
add
movs
sub
fldl2t
cmp
inc
add
mov
shl
fdivr
mov
inc
xor
call
cwde
mov
or
sar
cmps
stos
sub
xchg
test
sbb
movs
cmp
inc
jns
mov
repnz
xor
gs
mov
scas
cdq
mov
outs
js
mul
adc
adc
pushf
jle
leave
dec
inc
ds
pop
stc
jecxz
aam
cmp
xchg
dec
fimul
mov
fcomp
scas
add
xchg
in
(bad)
je
rol
inc
test
movs
cmps
jne
fistp
repz
cmp
fbld
dec
add
mov
push
pop
cmp
es
fmul
es
test
out
mov
jle
inc
pop
test
shr
sar
fs
adc
in
ins
aad
sar
and
mov
xor
ret
mov
fisubr
add
pop
add
ret
push
mov
mov
xchg
xlat
mov
rol
fisub
lds
inc
ja
test
inc
out
cmps
sar
out
jg
in
mov
cmc
leave
outs
or
pop
mov
xchg
sub
cmp
loopne
out
push
lods
adc
lods
push
test
sub
jge
and
mov
pop
fidiv
xor
mov
xchg
xor
icebp
call
call
jae
sub
jne
pop
mov
adc
push
repz
test
sbb
sti
dec
std
jle
inc
lds
repnz
xchg
pushf
loope
vorps
mov
bswap
loope
je
mov
mov
and
iret
jmp
and
clc
enter
push
push
stos
jns
call
xor
retf
dec
call
jne
pop
call
sub
dec
adc
test
jne
jl
clc
daa
imul
adc
sbb
mov
mov
rcl
mov
jg
mov
cmp
sbb
fist
hlt
iret
sbb
fucomp
jmp
and
data16
push
cmc
sbb
and
adc
sbb
cmp
int3
sar
mov
daa
add
push
in
test
dec
jg
rcr
pop
enter
ror
sbb
call
in
sar
dec
mov
jo
or
add
adc
jecxz
nop
sbb
repnz
dec
and
mov
dec
push
mov
inc
xor
cmps
loop
(bad)
movs
or
jecxz
cdq
mov
pop
ins
add
jmp
inc
popa
xor
call
scas
sub
push
jecxz
out
sub
ins
inc
test
retf
stc
(bad)
ror
and
mov
in
arpl
xchg
(bad)
dec
daa
xchg
push
pop
cmps
(bad)
xchg
ret
mov
xchg
retf
fstp
xchg
imul
jg
sar
ins
xor
xchg
jb
xchg
dec
call
cmp
cdq
adc
enter
inc
das
rol
add
lds
lods
and
sti
ja
push
(bad)
cli
dec
xchg
jb
aaa
shl
push
mov
out
(bad)
mov
cmp
in
add
pop
jne
les
call
mov
xor
dec
xor
add
push
pop
addr16
adc
int3
pushf
int
push
test
shr
stos
ds
arpl
push
pop
mov
mov
jl
cmp
cmp
stos
mov
fwait
(bad)
lods
outs
jns
scas
mov
or
push
rol
fstp
jle
ja
fs
jae
imul
mov
or
push
cmps
or
mov
or
std
or
add
movs
inc
fstp
retf
mov
lods
outs
ss
je
lgs
inc
sub
rol
pop
clc
out
push
(bad)
ror
sub
adc
repz
addr16
loope
add
pop
hlt
imul
jge
loope
mov
retf
test
clc
dec
les
repnz
pop
cli
hlt
inc
add
push
ins
rcr
sbb
sub
cmp
fs
jae
aaa
cmp
inc
out
pop
sub
idiv
mov
(bad)
cmc
jo
adc
call
pop
test
jbe
xchg
lds
ret
sbb
enter
out
xor
sub
inc
sbb
pop
repz
jb
dec
dec
movs
sbb
xchg
stos
lods
sti
xlat
inc
les
mov
rep
je
nop
int3
cmps
mov
(bad)
fsub
push
call
and
stos
jb
sub
mov
jge
retf
cmp
loopne
js
xor
push
repz
dec
fld
imul
add
or
pop
fdivr
imul
sub
daa
aaa
cmp
mov
scas
push
pop
mov
push
or
mov
adc
pop
pop
jne
mov
arpl
push
xor
push
or
in
push
or
add
push
inc
cmp
add
mul
and
jne
movs
xor
ins
mov
mov
inc
fwait
lock
arpl
jle
imul
fs
cmps
pop
inc
mov
mov
mov
jno
enter
popa
stos
pusha
jae
mov
pusha
cmp
xor
clc
xor
fild
cmp
addr16
mov
bound
mov
lds
stos
inc
pop
push
shl
fwait
sub
pop
push
cmp
sti
loopne
sub
jmp
lods
push
or
add
mov
popa
cmp
mov
add
xchg
out
mov
add
add
xor
dec
inc
push
sbb
cmp
push
(bad)
xlat
adc
dec
sub
and
inc
jmp
push
push
(bad)
mov
loope
aam
xchg
in
mov
sub
sahf
cmp
mov
dec
jmp
xchg
in
jbe
xchg
addr16
sahf
sbb
jl
jns
(bad)
stos
sub
push
test
or
ins
cwde
outs
jne
sti
icebp
or
inc
xchg
cmp
popf
(bad)
aad
xor
into
jns
jl
mov
pusha
div
inc
push
mov
ret
lahf
xor
popa
jo
sbb
xchg
out
lods
lods
aam
imul
mov
cdq
pop
je
lds
ret
cmps
jecxz
ds
out
clc
sbb
mov
cmps
cmc
xor
stos
pop
mov
cmp
dec
push
test
sahf
(bad)
das
fst
fwait
mov
jmp
std
mov
or
mov
sub
in
jge
jmp
daa
xor
jle
fs
cmp
jne
dec
and
ds
test
jmp
sub
adc
cmp
and
xchg
sub
mov
mov
sub
std
hlt
outs
mov
jle
(bad)
mov
retf
pop
inc
push
xchg
mov
sbb
xchg
inc
mov
loope
jo
cmp
outs
adc
add
cld
je
xor
lods
pop
das
sbb
lods
nop
xor
xchg
cwde
xor
xchg
bound
push
imul
jbe
or
pop
jg
inc
jne
push
pop
pop
xlat
mov
gs
scas
es
xor
mov
xchg
(bad)
bound
inc
sbb
into
add
push
gs
shl
je
jmp
sub
mov
pop
pop
push
stos
inc
sbb
int3
cdq
xchg
cmp
daa
dec
push
lods
test
popf
xchg
push
sar
push
fistp
or
mov
or
daa
fsubr
push
push
(bad)
mov
sub
or
daa
das
adc
push
dec
adc
dec
addr16
jge
pop
mov
mov
pusha
adc
ja
je
leave
xor
dec
dec
leave
cmps
dec
sub
xor
pop
retf
ror
add
cmp
pop
mov
dec
or
mov
dec
adc
daa
daa
ret
push
push
sub
add
mov
push
pop
scas
in
xchg
sub
outs
xchg
jns
pop
test
sbb
add
enter
mov
ja
shr
fld
stos
mov
mov
fisttp
mov
xchg
addr16
cmp
inc
pusha
xor
pop
pushf
(bad)
push
les
cdq
movs
mov
sub
pop
cs
sub
mov
sub
pop
sti
adc
push
mov
ins
and
(bad)
push
sbb
loopne
lock
xchg
and
retw
pop
sbb
adc
sbb
inc
cmc
loop
adc
jnp
mov
adc
int3
sbb
test
cwde
test
in
cmp
out
out
xor
mov
dec
mov
leave
test
push
gs
sbb
clc
jg
lods
mov
das
js
cmps
add
sbb
jl
jp
aam
popf
mov
add
pop
sahf
and
cdq
or
mov
sbb
and
(bad)
mov
sahf
jne
arpl
xor
sbb
pop
ins
sbb
cld
xor
cmp
mov
rcl
xchg
test
pop
adc
xchg
mov
pop
mov
pop
mov
int
and
(bad)
(bad)
out
mov
push
(bad)
(bad)
out
icebp
outs
ins
popf
pop
icebp
inc
int
sub
mov
and
jge
das
jge
or
sbb
mov
repz
cmp
push
sbb
sbb
je
pop
push
pop
pop
repz
cs
adc
pop
hlt
pop
jo
push
mov
jns
or
pop
ror
daa
retf
inc
out
nop
xor
dec
jbe
ins
loopne
inc
mov
jle
inc
out
mov
dec
fs
dec
adc
inc
xor
mov
and
adc
fisub
loop
mov
mov
inc
(bad)
xor
hlt
ret
outs
cmp
bound
sbb
imul
lahf
adc
fadd
mov
loop
mov
aad
fcmovnb
mov
dec
jecxz
and
test
pop
mov
xchg
inc
jns
pop
pop
cmp
dec
cmp
xor
in
and
scas
jne
inc
mov
sbb
sbb
push
dec
popf
(bad)
jo
out
push
(bad)
dec
jbe
clc
(bad)
and
fistp
jmp
mov
mov
xor
mov
(bad)
xchg
not
fwait
add
mov
and
outs
cmp
xchg
pop
sub
and
pop
idiv
test
in
dec
mov
xchg
sbb
pop
enter
or
ins
cmp
les
arpl
jo
xchg
cwde
das
mov
add
cmp
cmp
fmul
cmp
call
test
pop
or
mov
push
gs
ins
cmps
movs
mov
outs
push
out
xchg
out
mov
pop
and
and
ss
js
int
ds
sti
scas
(bad)
cli
cld
punpcklwd
sub
loopne
jno
pop
mov
add
adc
out
jg
(bad)
mov
and
mov
push
pop
lods
out
sbb
fdivr
(bad)
pushf
jmp
jge
inc
push
rol
and
xchg
push
xlat
jecxz
add
std
dec
dec
test
cmp
xor
movs
cmps
aad
push
bound
lea
add
push
scas
adc
push
jae
pop
sahf
hlt
dec
and
dec
sbb
and
ds
pop
out
ins
nop
mov
xchg
loope
dec
ret
dec
xor
test
lods
push
push
daa
xchg
jne
pop
push
pop
dec
sahf
dec
push
aam
ret
(bad)
fs
or
jge
xor
pushf
repnz
pop
adc
cdq
add
adc
cs
retf
sti
out
hlt
mov
test
(bad)
mov
scas
mov
stos
fild
test
es
xlat
je
cmp
sub
mov
dec
(bad)
mov
repnz
xchg
ret
jmp
xchg
or
mov
aas
jnp
(bad)
dec
sub
aam
cmp
sbb
cmp
mov
sub
imul
es
jnp
ss
sub
ret
icebp
mov
mov
fdivr
test
icebp
mov
push
and
add
movs
retf
(bad)
ret
out
and
je
in
pop
in
lods
push
cmps
test
enter
add
call
add
sub
pop
cmc
sahf
outs
push
jo
adc
xchg
leave
dec
add
xchg
cmp
dec
mov
jo
lea
inc
dec
cmp
sub
xchg
mov
scas
mov
jbe
inc
sahf
xchg
pop
punpcklbw
retf
mov
es
push
inc
push
sub
mov
fs
adc
int3
ret
out
xor
fnstsw
ins
fwait
inc
punpckldq
loopne
arpl
adc
push
ds
movs
xor
mov
xor
xchg
shl
stos
cmp
popa
ficom
mov
or
xor
mov
cdq
xchg
pop
ins
push
enter
test
push
push
jae
jp
sbb
stos
xchg
fs
data16
sbb
ins
movs
xchg
es
inc
test
cmpps
cmp
fisub
fnstcw
fs
ins
add
adc
mov
jge
dec
ss
mov
ss
push
cmps
out
jno
(bad)
div
and
xor
nop
dec
jne
inc
mov
cld
aam
shl
mov
pop
loop
jle
pop
mov
movs
sbb
lods
loopne
or
loop
push
xor
cli
aas
jae
mov
lock
lods
movs
shr
pusha
xor
lods
test
enter
mov
mov
in
adc
mov
or
out
or
adc
out
mov
mov
dec
and
add
mov
xchg
stos
push
cmp
sti
xor
cmps
rol
xchg
xchg
jmp
cdq
mov
cld
fwait
xchg
mov
inc
imul
mov
adc
scas
fst
fwait
je
xlat
cmp
or
inc
sbb
es
mov
fstp
inc
retf
call
loope
sbb
add
dec
sar
jle
mov
mov
nop
ins
cmc
xchg
mov
or
mov
pop
jmp
cs
je
fmul
pop
push
jb
cwde
dec
pushf
jns
xor
nop
std
syscall
mov
lock
cmp
dec
fwait
fs
in
xchg
xlat
mov
cwde
mov
xchg
movs
jns
dec
and
fist
minps
sub
lds
lahf
mov
hlt
push
mov
mov
popf
aad
retf
push
dec
or
sub
scas
mov
mov
adc
mov
jmp
pop
xor
lds
or
mov
push
lahf
mov
mov
mov
mov
mov
add
jp
(bad)
cwde
adc
or
inc
aad
in
xchg
rcr
pop
add
cmp
cmovle
mov
iret
mov
out
arpl
push
fsub
xor
jecxz
mov
mov
xchg
arpl
test
je
mov
loopne
ins
sbb
mov
push
dec
jo
jne
push
aaa
retf
fisub
cmps
(bad)
dec
mov
push
in
shl
adc
jg
xor
cdq
stc
lds
or
sbb
test
jnp
mov
xchg
outs
fs
add
retf
jae
xchg
sbb
adc
pop
jge
mov
cmp
fwait
into
mov
mov
stos
test
jne
int
dec
xchg
cmps
les
or
push
push
sub
mov
sub
push
iret
and
test
(bad)
pop
pop
xor
dec
fld
add
mov
jmp
xchg
or
std
dec
(bad)
cmp
sbb
sbb
fs
mov
fdivp
ins
(bad)
aas
rol
pop
adc
xchg
dec
fcom
pop
rcr
push
sti
in
ss
sub
cdq
fbstp
neg
mov
mov
push
xchg
push
pop
js
test
adc
push
pop
rcl
sub
test
in
sub
inc
sbb
(bad)
ror
mov
fwait
stos
lods
(bad)
aad
ins
mov
lock
loopne
dec
mov
dec
and
into
aaa
repz
push
add
jge
outs
and
inc
mov
addr16
fdiv
repz
(bad)
mov
push
shl
repnz
sub
dec
into
sub
popf
inc
pushf
daa
adc
lds
enter
or
imul
jne
sti
jbe
push
mov
sbb
pop
not
and
xor
xchg
adc
inc
jp
fs
neg
jmp
jg
inc
jne
and
test
test
pop
sub
pop
lods
or
das
push
fs
cmc
mov
mov
adc
fprem1
cli
cmp
dec
movs
pop
cs
sti
mov
mov
or
ja
mov
les
std
push
add
mov
jecxz
retf
and
mov
sbb
call
sub
jmp
sub
nop
pop
test
lods
adc
fisttp
and
sti
adc
ds
repnz
push
fsub
dec
cmp
test
retf
mov
or
pop
shl
into
sbb
and
or
retf
test
sti
mov
sub
sbb
scas
cmp
or
or
push
lahf
cmp
out
cmp
xor
jo
int3
in
jo
cmps
fwait
jg
dec
ins
mov
out
jmp
adc
pop
lock
fnstcw
lds
mov
loopne
push
cli
imul
fcomp
repz
js
bnd
gs
adc
adc
adc
mov
dec
jne
push
mov
xchg
repz
jge
mov
xchg
leave
push
nop
cmp
popf
fwait
iret
in
(bad)
push
push
and
dec
dec
sub
sub
scas
cld
dec
push
int3
fnsave
dec
sub
js
popa
das
loope
add
loopne
in
retf
aas
fbstp
pop
mov
(bad)
ror
and
int3
ret
xlat
xchg
ja
xor
dec
clc
lods
outs
movs
push
enter
pop
mov
push
dec
push
int
xlat
or
nop
pop
arpl
push
and
sub
aaa
data16
jmp
push
add
mov
aas
and
outs
pop
mov
mov
xor
bswap
in
xor
ins
cmp
cmp
out
out
adc
inc
or
stos
test
loope
mov
pop
cmp
jo
call
sub
fcmovu
pushf
cmc
out
xchg
mov
pop
popa
cmp
jmp
(bad)
mov
fisub
mov
imul
sahf
jle
mov
push
adc
mov
fst
cs
nop
loop
cwde
ins
ror
pop
aam
iret
mov
jbe
ss
dec
xor
std
or
mov
setbe
push
fstp
mov
pop
sbb
or
xchg
scas
(bad)
xor
aas
or
adc
ds
xchg
stos
cmp
fld
ins
sbb
sti
mov
mov
rcr
dec
mov
idiv
pushf
xor
add
jb
arpl
mov
dec
push
call
or
push
aad
fild
dec
(bad)
push
bound
(bad)
cmp
ins
sub
jmp
sti
movs
sahf
loope
not
cmps
bound
lea
(bad)
jo
mov
push
jl
icebp
out
push
jg
or
jb
pop
fsub
mov
mov
js
ss
jne
cpuid
mov
inc
das
aad
cs
rcl
mov
out
cmp
pop
stos
gs
fadd
or
or
aaa
xchg
mov
jo
and
mov
in
popa
ins
and
xchg
add
xchg
lds
mov
nop
pop
loope
adc
outs
mov
jo
pop
dec
jbe
mov
aad
and
lods
and
xor
adc
inc
adc
sti
jg
add
sub
enter
sub
xor
stos
test
mov
pop
xor
dec
push
push
leave
jmp
sti
enter
cmp
fdivr
imul
inc
jne
daa
shr
aad
cmp
jp
mov
sbb
aaa
or
js
ins
mov
cmp
inc
test
sub
fdivr
pop
adc
jmp
sub
cli
push
or
ret
repz
pop
jg
movs
lea
and
add
int
shl
inc
sub
sbb
cmp
jl
data16
jmp
leave
dec
imul
adc
mov
push
sti
les
ja
mov
jne
js
ss
arpl
sbb
imul
pop
div
cmps
lods
sub
jb
mov
xor
sub
mov
adc
or
das
out
push
(bad)
int3
adc
mov
pop
and
movs
sti
and
loopne
fcomp
cwde
into
ficomp
dec
mov
sar
mov
aad
sbb
xchg
std
mov
add
mov
iret
jno
sbb
pusha
das
popf
mov
inc
or
pusha
shl
ret
jno
push
das
lahf
mov
mov
pop
mov
in
push
fwait
mov
scas
(bad)
mov
fisubr
cmp
jns
and
(bad)
push
adc
cmps
push
sub
(bad)
dec
loop
lock
retf
and
test
add
jmp
je
movs
xchg
mov
sar
mov
jo
out
jo
mov
outs
mov
mov
outs
mov
xor
mov
mov
fidiv
aad
cmps
pop
pop
mov
xchg
xor
test
or
daa
add
icebp
stos
popf
jl
mov
sar
sar
(bad)
loope
test
jae
sbb
sub
cli
xchg
push
xor
inc
inc
aas
pop
ds
sbb
mov
inc
scas
cmp
jle
inc
or
cmp
sub
cmps
push
fisub
in
fwait
pop
aad
mov
int
or
ftst
ja
gs
jp
sub
mov
xchg
inc
in
push
jp
stos
mov
or
mov
int
add
cld
push
push
ds
sub
jo
xchg
aam
(bad)
mov
pusha
repnz
fcmove
xchg
mov
ss
shr
add
out
dec
sub
dec
outs
arpl
les
stc
push
mov
mov
inc
cmp
xchg
fisttp
add
jae
dec
imul
test
loopne
mov
ja
call
cmp
push
xchg
(bad)
lods
cwde
push
(bad)
arpl
dec
mov
in
sbb
jnp
xchg
cmp
shr
jae
add
add
mov
daa
outs
fnsave
cld
xchg
bound
jmp
in
pop
sbb
xor
xchg
xor
fidivr
out
sub
pop
rcl
or
push
retf
mov
lods
stos
in
or
add
cld
outs
adc
nop
add
jp
imul
sub
cmp
pop
mov
xor
jp
je
cwde
(bad)
adc
leave
xor
push
pop
and
icebp
push
sar
(bad)
mov
es
push
lea
push
mov
cmp
fistp
push
test
je
push
jae
je
sbb
or
stos
int3
xchg
(bad)
(bad)
iret
push
xchg
(bad)
fistp
rcl
out
popf
jae
push
pop
add
movs
mov
(bad)
jns
xchg
sbb
daa
js
lods
xchg
sbb
add
mov
mov
fisubr
lock
int
out
mov
mov
sar
xor
xchg
test
xchg
call
jo
cld
outs
sti
in
shr
js
pop
aad
cs
(bad)
xchg
adc
cmp
test
pop
lock
cmp
repnz
sub
mov
mov
xchg
cmc
rcr
mov
dec
aam
iret
pop
inc
enter
mov
in
mov
xchg
jecxz
jmp
iret
cdq
mov
or
scas
xlat
jp
jnp
mov
inc
mov
dec
xchg
xor
adc
mov
or
int
sub
xchg
pusha
sub
popf
mov
cmps
xlat
xchg
sbb
xlat
pop
rcl
inc
push
scas
retf
jbe
jmp
mov
(bad)
mov
shl
add
and
mov
(bad)
(bad)
aas
xor
inc
data16
ss
iret
xchg
rcl
sbb
adc
lahf
loop
outs
sub
cmp
popf
(bad)
jmp
fwait
jl
pop
or
push
rol
ins
xchg
lds
adc
jmp
(bad)
lock
aaa
out
push
int3
test
mov
int
push
cmp
inc
or
adc
jmp
xchg
leave
mov
jnp
jle
imul
jmp
out
popa
aad
mov
sbb
into
cmp
push
or
push
or
dec
or
fadd
pop
mov
inc
jne
data16
in
sbb
iret
xchg
aam
or
retf
or
in
(bad)
cld
pop
add
mov
nop
sbb
dec
aam
mov
cli
fistp
or
dec
mov
xchg
clc
shl
rcl
jns
xchg
(bad)
xor
push
call
into
or
mov
push
in
iret
push
scas
mov
out
test
or
jmp
cld
int3
cmp
cmp
add
in
push
ffreep
hlt
inc
or
mov
(bad)
dec
or
jmp
pop
mov
in
add
rcr
or
fdivr
dec
xchg
jae
lods
jnp
lds
shr
jmp
out
mov
test
ss
sub
and
inc
nop
jo
mov
sub
shl
cmc
add
pop
pop
outs
data16
ss
dec
cmp
cmp
ret
dec
mov
xor
pop
add
pop
sub
inc
xor
sbb
lods
imul
mov
cli
movs
cmp
push
loop
stos
fist
(bad)
out
cmp
sbb
cld
add
and
dec
add
jl
cmp
cmp
mov
adc
dec
pop
mov
hlt
xchg
and
mov
sahf
add
cli
xchg
imul
cmps
or
stos
sbb
js
icebp
fidivr
inc
mov
jl
mov
bound
fsubr
xchg
add
mov
aad
and
out
rol
fsubr
retf
in
pop
mov
out
sub
lahf
ror
out
push
jae
and
fsubrp
inc
or
push
xchg
mov
cmp
cmp
push
xor
jbe
dec
imul
cmp
fxch
push
xlat
pop
js
inc
jmp
fcomp
cmp
es
out
inc
mov
mov
into
movs
clc
stc
jmp
add
dec
outs
jecxz
cdq
cmp
and
sti
test
mov
jge
jecxz
mov
add
or
push
aas
lods
mov
cmp
ss
scas
adc
ja
pop
(bad)
mov
pop
jmp
js
cmp
dec
(bad)
js
dec
into
pop
pop
scas
xor
pop
sub
inc
cli
fmul
shl
iret
dec
dec
push
stos
xchg
call
push
jae
test
xor
xor
push
bound
lods
imul
jae
loop
inc
in
lea
sub
shr
adc
leave
jle
test
test
xchg
adc
sahf
out
cmp
inc
mov
repz
sbb
adc
into
jecxz
std
sub
mov
enter
shr
inc
shl
leave
and
jp
mov
sbb
inc
cmc
(bad)
pop
add
jmp
loope
int
dec
fprem1
mov
jns
stos
or
rol
fwait
ins
pop
cmp
int
push
je
push
iret
imul
push
enter
loope
repz
jo
mov
mov
mov
enter
jge
jb
sub
add
push
stos
das
xor
xor
add
jb
dec
pop
ret
sbb
add
fisttp
outs
xchg
fld
mov
dec
scas
cmps
mov
inc
cwde
shl
mov
xchg
and
ret
in
push
test
fidiv
xor
xchg
cld
int
xlat
and
ret
dec
push
mov
aaa
push
mov
and
sub
pop
mov
in
retf
test
jle
jge
push
pop
cwde
pop
pusha
mov
popa
(bad)
cs
adc
and
icebp
mov
sub
jp
cmc
sbb
xchg
sbb
out
inc
ficom
cmps
jno
nop
xchg
pop
adc
repnz
push
fs
sub
das
(bad)
stc
jne
or
cmc
sbb
xchg
jo
iret
push
ss
stos
ss
jecxz
aas
inc
(bad)
fst
imul
pop
and
fadd
test
adc
inc
aaa
mov
mov
push
sbb
test
cmp
out
fwait
or
sbb
test
jle
(bad)
stc
mov
adc
mov
sub
test
cwde
lds
add
(bad)
pop
stos
mov
in
dec
mov
sub
lea
test
pop
or
in
stos
adc
clc
jno
(bad)
xchg
dec
jns
ja
mov
mov
cmp
ds
or
(bad)
cdq
sahf
es
stos
mov
jg
(bad)
and
loope
fucom
dec
lea
aaa
fisub
or
push
jecxz
pop
imul
sub
bound
(bad)
out
pop
jb
movs
mov
out
xor
mov
sbb
sar
repz
sub
int
cmps
jo
mov
mov
std
jns
pop
out
mov
popa
scas
scas
out
addr16
xchg
mov
aas
sub
xchg
pop
or
repnz
pusha
mov
xor
into
xor
mov
sbb
mov
xchg
loop
mov
pushf
hlt
sahf
dec
test
cli
and
jnp
pop
sub
inc
push
add
je
jae
xchg
add
sbb
lea
bound
repz
(bad)
sbb
fdivr
retf
sbb
clc
xor
daa
in
pop
sbb
xchg
xlat
mov
in
gs
xchg
out
mov
popa
pushf
push
xchg
fisttp
std
je
push
call
inc
sub
xchg
aad
imul
jnp
mov
mov
jmp
icebp
add
jnp
(bad)
mov
(bad)
scas
lods
jnp
jne
loop
shl
add
push
xchg
dec
and
mov
push
adc
test
mov
pop
cdq
xchg
jne
mov
push
cmc
cmp
add
or
jp
ret
sbb
aaa
js
icebp
xchg
test
shr
data16
out
aad
xchg
pop
out
adc
cmps
xchg
cmps
jo
sub
aad
xchg
jns
push
stos
jl
fiadd
fdivr
add
(bad)
in
pop
scas
shl
push
xchg
arpl
and
sti
cmp
out
pop
add
or
pop
mov
xchg
jnp
inc
stos
stc
push
and
outs
repnz
pop
outs
sbb
repnz
(bad)
cmp
cwde
out
in
jnp
pop
push
test
push
sbb
xchg
add
pop
mov
or
push
mov
out
dec
mov
or
icebp
ret
or
or
push
push
aad
xchg
xor
lods
and
jp
jno
in
ret
cmps
ja
aam
retf
hlt
xchg
aaa
and
cmp
cmp
fadd
dec
es
mov
imul
fwait
scas
stos
call
outs
cmp
jmp
sub
xchg
xor
sahf
shl
xor
aaa
out
retf
mov
aaa
xor
sti
mov
mov
popf
xor
sub
sub
movs
push
retf
jmp
sbb
mov
test
call
cmc
push
fs
ins
adc
in
call
es
push
scas
xlat
add
add
scas
push
sbb
xlat
xchg
or
pop
out
add
ins
fsub
sbb
sub
push
or
dec
repz
retf
mov
push
es
or
pop
push
or
cmp
mov
(bad)
clc
pop
jecxz
call
mov
movs
inc
fbstp
pop
add
dec
in
pop
xchg
mov
div
lahf
dec
adc
movs
push
mov
int
and
lods
xor
call
test
lock
add
inc
std
or
mov
adc
scas
out
icebp
mov
mov
cmps
add
inc
shl
call
fwait
dec
and
xor
rcr
inc
mov
sub
xchg
mov
es
sub
xchg
push
rol
xor
outs
push
xchg
jne
lock
jmp
std
stc
jp
inc
leave
xchg
repnz
rcr
jbe
aas
xor
scas
retf
stos
retf
xchg
retf
cmps
jp
push
lock
into
xchg
jg
and
sahf
imul
mov
mov
or
push
popf
pop
inc
mov
mov
mov
inc
out
pop
ins
and
inc
(bad)
and
xor
mov
xor
jb
in
pushf
gs
jl
shl
neg
inc
xacquire
xor
lods
jmp
(bad)
div
sbb
lahf
dec
fs
dec
xchg
add
addr16
mov
cmc
ja
pop
iret
mov
gs
and
xchg
js
and
mov
lock
mov
xor
mov
test
mov
je
cmp
xor
push
jmp
adc
sbb
pop
cwde
addr16
fwait
cli
mov
in
xor
mov
repz
push
inc
popf
pop
popa
retf
xor
stos
shl
xlat
jae
pop
in
push
cmp
nop
fiadd
mov
mov
shr
xor
mov
xlat
lods
jge
add
xor
test
pop
test
pop
sahf
jg
and
daa
jl
nop
loopne
pop
sbb
cld
cmp
dec
jg
pop
cmps
loopne
mov
in
jnp
sub
retf
jmp
(bad)
cli
pop
jge
or
add
lock
div
(bad)
js
sbb
and
mov
cli
(bad)
push
loopne
(bad)
and
cmp
mov
scas
xchg
xor
fistp
scas
push
xchg
sbb
into
out
and
dec
aas
and
je
test
jns
stos
add
neg
mov
mov
ins
push
pop
mov
xor
movs
(bad)
iret
inc
stos
repz
cmp
push
xchg
inc
aam
adc
mov
xor
jno
outs
into
(bad)
cmc
inc
xchg
push
mov
push
cmp
(bad)
icebp
push
inc
mov
movs
es
mov
or
ret
adc
hlt
add
fldcw
int
jnp
push
pop
mov
fidivr
loopne
mov
scas
sub
mov
outs
cmp
xor
repnz
adc
pop
push
xor
sub
inc
push
imul
(bad)
outs
or
or
pop
movs
push
inc
push
push
bnd
sbb
iret
cld
aas
ret
les
(bad)
mov
pop
xor
pop
cmc
inc
iret
bound
imul
and
cmc
xchg
bound
inc
mov
addr16
xor
adc
aas
daa
push
pop
mov
neg
mov
pop
les
mov
mov
add
fs
inc
cmps
addr16
and
jecxz
pop
stc
xlat
movs
cmps
add
add
mov
adc
mov
or
cdq
jbe
sbb
pop
fmul
pop
iret
(bad)
(bad)
mov
(bad)
(bad)
aad
adc
dec
mov
add
mov
fist
adc
daa
repnz
xor
in
mov
test
je
push
pop
not
int
test
fwait
sub
inc
pop
push
add
outs
or
sub
mov
push
mov
mov
mov
aam
pop
icebp
sbb
jb
ins
out
pop
xor
inc
jmp
adc
pop
or
call
sub
scas
outs
cmp
mov
dec
rcr
movs
xor
cmps
mov
fmul
lods
jns
movs
fwait
mov
push
jp
mov
xchg
pop
aad
lods
push
test
push
or
xor
fistp
add
std
inc
adc
in
mov
shl
xor
jb
sbb
add
or
aam
dec
cmp
add
mov
mov
aaa
in
loope
call
xor
imul
and
(bad)
pop
stc
pop
adc
push
loope
retf
ror
out
movs
dec
ja
push
adc
xor
and
pop
retf
jns
or
push
sbb
ja
je
mov
sub
shl
cli
dec
fcmovu
(bad)
and
sbb
lds
inc
repnz
push
scas
lock
cwde
scas
pop
mov
xor
ins
and
xchg
mov
outs
pop
je
xchg
mov
scas
and
adc
adc
mov
mov
add
adc
ja
sub
repnz
pop
fnsave
shl
inc
or
jmp
sar
data16
rcl
xchg
push
sub
push
mov
mov
adc
push
stos
push
or
loop
movs
jl
jo
ja
les
popa
xchg
add
fnsave
mov
push
test
dec
dec
aas
fwait
int3
add
stc
js
adc
cli
dec
mov
and
inc
mov
mov
scas
out
jb
sbb
push
dec
loope
retf
mov
aaa
mov
rol
loope
fcmovnbe
fs
mov
lea
jae
aad
mov
sbb
sahf
jge
fdiv
and
fucom
pop
lods
outs
sbb
add
xchg
test
ficomp
push
repnz
cmps
xchg
sub
retf
mov
xlat
dec
mov
inc
rol
test
xlat
out
pop
dec
jne
pop
leave
and
xchg
out
dec
in
dec
dec
or
scas
ds
dec
cmp
sbb
stos
push
pop
pop
push
pop
push
xchg
xchg
add
sbb
push
mov
std
bound
push
test
jo
xlat
icebp
inc
jne
mov
xlat
test
dec
data16
and
mov
cmps
push
je
popf
hlt
inc
(bad)
mov
test
cli
adc
xor
data16
dec
pop
add
in
mov
push
cmp
mov
or
retf
push
repz
movs
in
push
(bad)
stc
lds
pusha
pusha
inc
pushf
cmps
xlat
jg
cmp
dec
movs
and
ret
ins
gs
push
enter
inc
(bad)
mov
push
lahf
or
sbb
sub
inc
add
pop
inc
sbb
int
loope
or
mov
hlt
inc
push
pop
cmp
xor
test
pop
inc
inc
ret
add
lods
jge
jge
jno
adc
addr16
jae
mov
pop
retf
int3
sahf
jae
gs
aam
mov
xchg
test
lock
int3
lea
cdq
add
int3
adc
jmp
adc
(bad)
int
mov
test
int
or
jp
adc
cmc
xor
jecxz
hlt
sbb
or
jb
scas
leave
in
or
sbb
cmp
fistp
dec
mov
sub
sbb
addr16
xchg
cdq
ret
cmp
pop
mov
pop
mov
and
inc
cld
aas
xchg
add
lds
imul
and
imul
jge
jae
sub
sbb
jle
and
sbb
das
pop
mov
dec
push
shl
jmp
retf
push
adc
(bad)
jge
jmp
xlat
xchg
and
dec
shr
jle
dec
or
pop
xchg
cld
cdq
jb
pop
and
pushf
jge
jmp
fcomp
repz
mov
pop
ja
movs
in
pushf
les
xchg
clc
inc
outs
test
repz
mov
pushf
sti
mov
cmp
mov
enter
or
out
rol
rcr
fwait
retf
lds
scas
and
lahf
mov
leave
cmp
fs
fcomp
inc
outs
(bad)
ja
mov
nop
cmp
cmps
xor
fistp
jle
arpl
ins
fsub
push
daa
or
mov
sahf
mov
push
das
dec
push
inc
or
stos
add
sbb
fiadd
pop
xchg
popa
sbb
movs
sbb
sbb
pop
pusha
fcomp
adc
mov
and
jbe
popa
push
mov
sbb
add
push
dec
jb
in
das
mov
mov
mov
xlat
jmp
and
cdq
aas
fisttp
mov
outs
imul
push
add
mov
push
in
js
test
test
std
in
xlat
into
mov
add
xchg
and
jbe
out
dec
cmp
dec
add
cld
jl
sub
adc
adc
out
lods
mov
xor
dec
mov
es
xchg
mov
jns
shl
fdivr
call
movs
js
jg
xchg
(bad)
retf
adc
into
mov
rcl
mov
stos
jmp
nop
adc
out
cmc
push
dec
fwait
jbe
sub
(bad)
sbb
xor
shl
pop
mov
push
(bad)
cmp
pusha
lds
jge
jae
adc
xchg
push
push
sbb
add
jne
icebp
into
les
and
scas
cmp
push
and
rcl
push
rol
(bad)
imul
add
cmp
xchg
dec
adc
call
movs
cli
push
inc
xchg
mov
daa
xor
in
popa
sbb
shl
rcr
dec
xchg
out
jmp
mov
sbb
lock
mov
(bad)
jb
xchg
xchg
fsubr
push
mov
xchg
jecxz
fstp
jge
fisubr
sahf
out
pop
sbb
popf
imul
mov
ins
pop
test
popa
dec
push
or
xchg
lods
pop
and
mov
cmps
rol
mov
mov
(bad)
hlt
dec
push
or
lahf
xchg
xlat
xchg
scas
xchg
aad
popa
push
inc
jmp
repnz
and
dec
mov
popa
test
test
or
xchg
ja
daa
mov
sbb
sahf
cwde
idiv
push
mov
mov
cdq
push
test
inc
push
movs
stc
sbb
ss
push
push
movs
push
mov
test
test
xor
arpl
loop
push
in
mov
in
out
xchg
push
xchg
dec
mov
stos
xchg
(bad)
fiadd
sbb
cmps
push
ins
sub
fcmovb
push
test
fwait
add
or
mov
jb
mov
jmp
(bad)
int3
das
ds
or
stc
add
add
fcomp
jmp
das
push
(bad)
pusha
ror
js
aam
test
xchg
and
test
or
push
lahf
jbe
pop
pop
cmps
cmp
mov
mov
retf
jmp
cmp
ficom
add
iret
out
dec
mov
sub
jno
mov
or
mov
xor
xchg
repnz
dec
xor
lods
push
xor
movs
sbb
cmp
pop
or
or
fwait
sbb
push
pop
jne
imul
in
(bad)
call
inc
sub
cmp
or
pusha
add
push
xchg
les
(bad)
jl
out
movs
addr16
in
lds
ror
aad
dec
addr16
push
(bad)
jae
ror
and
mov
inc
imul
stos
inc
icebp
gs
repz
cmp
in
adc
mov
sub
push
inc
jl
jg
bound
xor
jo
pusha
add
repz
js
dec
lods
mov
mov
(bad)
or
in
pop
adc
mov
mov
daa
jmp
push
ins
inc
adc
xchg
not
clc
add
loopne
mov
loope
clc
pusha
call
fwait
xor
(bad)
loop
test
repnz
cld
popa
sub
mov
mov
inc
imul
sbb
cmp
leave
push
(bad)
xor
dec
mov
cld
outs
mov
ins
stc
imul
push
ss
mov
enter
mov
xor
sbb
aas
mov
xor
fnstsw
sbb
icebp
mov
fmulp
sub
xor
(bad)
mov
in
xchg
mov
jmp
fiadd
lock
(bad)
cmp
and
out
les
(bad)
(bad)
(bad)
cdq
mov
ds
and
fucomip
sar
ins
mov
push
cdq
repz
inc
dec
mov
jle
loopne
outs
jge
adc
push
repz
popa
mov
dec
popf
and
ret
pop
jg
outs
cmp
xchg
push
mov
sbb
popf
in
ss
imul
push
movs
inc
sub
xor
mov
mov
dec
int
mov
xor
retf
stc
pop
adc
cwde
jmp
mov
fs
jl
fwait
(bad)
pop
mov
mov
in
cwde
fs
ins
sti
jne
push
mov
out
jecxz
(bad)
pop
xor
(bad)
sbb
mov
push
cli
xchg
mov
mov
cmp
fld
addr16
mov
xchg
imul
stos
mov
mov
cmps
ja
push
arpl
mov
daa
aad
xlat
test
cld
or
pop
daa
adc
jne
aad
and
sub
add
add
outs
xchg
ins
xchg
(bad)
retf
sbb
xchg
stos
shr
add
ja
rcr
(bad)
inc
cmps
mov
hlt
loop
push
and
inc
cmc
mov
frstor
(bad)
dec
dec
xchg
aad
inc
stos
cmp
popa
jo
adc
lods
cmc
sbb
ret
inc
add
adc
and
add
lods
jno
out
ss
adc
jg
hlt
fiadd
dec
xor
jae
adc
and
add
leave
stos
lock
scas
int
popf
sub
xlat
and
daa
pop
xchg
gs
and
cli
pop
jmp
and
out
sub
das
inc
add
push
add
pop
lods
fdivp
rcl
push
or
test
ja
jae
pop
cwde
dec
imul
pop
loopne
xchg
loop
int3
jne
lods
push
or
sbb
push
or
mov
in
in
fs
and
dec
inc
or
adc
add
push
mov
mov
and
or
je
ret
jne
cwd
cld
sub
outs
mov
xchg
jne
into
mov
jecxz
fwait
shl
loope
inc
mov
sbb
xchg
rcl
stos
int3
and
push
or
or
in
cmps
test
mov
out
fwait
adc
int3
push
inc
push
int
gs
bswap
jno
xlat
mov
retf
sub
ins
daa
hlt
inc
jno
xor
retf
wbinvd
xor
mov
pop
inc
ret
pop
adc
pop
stos
(bad)
mov
cwde
(bad)
mov
inc
pop
pop
(bad)
nop
lock
loope
jno
mov
fidiv
imul
sbb
cmp
outs
or
(bad)
jb
jg
jg
pop
jo
xchg
sbb
rcr
daa
rcl
jge
fcom
mov
fcom
and
pop
jbe
cdq
add
repz
push
add
sahf
icebp
jno
jle
sar
mov
or
addr16
mov
cwde
sbb
not
or
loop
pop
cdq
stos
jo
cmp
ret
mov
pop
add
dec
xchg
cli
inc
mov
sahf
in
and
push
mov
xor
inc
mov
xchg
inc
jmp
inc
sbb
fistp
and
fcmovu
ds
sub
(bad)
lods
rcl
jl
sub
imul
inc
mov
or
sub
jae
xchg
inc
sbb
mov
sub
in
sahf
aaa
mov
add
inc
and
gs
out
pop
jmp
and
xor
(bad)
mov
inc
movs
imul
cli
or
das
cdq
mov
pop
fcomp
push
test
ret
fsubr
jg
push
xor
xchg
jl
test
cmps
jo
push
retf
cmp
cli
call
dec
mov
jbe
xchg
inc
ja
pop
jno
cmp
mov
mov
aam
rcl
inc
rep
sub
dec
push
xor
xor
pop
push
pop
xchg
fsubr
jnp
ds
enter
sub
inc
cdq
mov
mov
xor
sub
xchg
xchg
sar
push
loop
fnsave
xchg
mov
cmp
push
call
add
and
mov
adc
je
cmp
push
retf
ror
push
enter
pop
call
jae
and
sar
inc
dec
out
jns
sbb
mov
or
xor
lds
cmp
and
daa
je
mov
outs
or
pop
dec
sub
push
mov
std
mov
fidiv
enter
test
and
jmp
mov
xchg
sbb
dec
or
and
jnp
dec
mov
ss
dec
sbb
push
add
xor
dec
jmp
(bad)
push
dec
and
pop
outs
imul
(bad)
mov
mov
lods
mov
cmc
pop
adc
inc
(bad)
clc
arpl
sub
fisttp
pop
mov
add
jmp
mov
inc
xchg
aam
add
enter
nop
call
mov
push
test
cli
loope
mov
fs
add
dec
cmp
sub
mov
cmp
sbb
pop
ret
mov
dec
and
loope
cwde
xor
cmps
ret
adc
scas
jns
mov
xor
stos
and
dec
push
arpl
movs
push
inc
fidivr
xchg
and
mov
mov
stos
xor
dec
jmp
inc
jg
sbb
retf
push
dec
repnz
sub
icebp
push
sub
mov
sbb
sti
dec
clc
xlat
mov
mov
cmp
xchg
or
inc
enter
arpl
cmp
cmp
push
(bad)
or
loope
xor
or
fnstenv
mov
jae
or
aaa
inc
dec
repz
add
and
sub
pusha
inc
add
out
and
stos
dec
js
es
scas
pop
pushf
dec
jmp
(bad)
stos
shl
(bad)
daa
sub
movs
adc
or
cli
mov
ficomp
mov
pushf
push
push
iret
(bad)
lock
imul
iretw
(bad)
adc
and
cmp
retf
(bad)
lods
mov
ja
adc
(bad)
push
pop
push
pop
and
ficomp
mov
ds
adc
mov
xor
pop
loop
shl
push
js
or
and
add
div
fwait
xchg
rcl
ret
inc
data16
in
fisub
imul
mov
mov
sub
dec
mov
pop
rcl
push
popa
push
and
jmp
add
jbe
mov
or
shl
ret
out
sbb
std
push
fld
xchg
dec
fwait
lahf
nop
or
imul
lock
xor
or
or
and
mov
(bad)
jno
ret
mov
jne
push
adc
cmp
shr
mov
nop
inc
mov
mov
in
test
xchg
cmp
mov
ja
std
push
mov
mov
xor
jecxz
js
mov
test
add
scas
adc
inc
out
pop
in
inc
loopne
mov
adc
lock
or
add
into
int3
ja
fistp
mov
rcl
ror
iret
add
test
jae
scas
retf
not
jmp
jmp
jae
test
aas
push
push
into
cld
xchg
cdq
pusha
jb
mov
loop
dec
fbstp
xchg
loopne
lock
icebp
test
mov
icebp
or
adc
jae
mov
sti
jnp
mov
aas
xor
adc
fstp
sub
(bad)
bound
cmp
xchg
mov
out
add
mov
pop
mov
inc
inc
or
int
mov
in
xchg
das
cmp
mov
adc
add
stos
fsubr
xor
dec
cmp
xchg
aam
cmp
add
add
inc
sub
cld
add
iret
ror
add
cs
in
(bad)
call
jae
(bad)
push
in
aas
dec
mov
push
imul
push
pop
dec
test
push
fwait
repnz
push
pop
(bad)
jnp
jmp
out
add
and
cld
mov
fwait
aam
hlt
xchg
imul
in
out
pop
test
clc
or
jno
rcl
xchg
add
dec
push
jle
fld
(bad)
(bad)
je
mov
cmp
test
jg
dec
imul
jmp
dec
stos
jecxz
xor
call
sub
das
and
mov
or
mov
mov
push
mov
cmp
loope
ins
ja
es
fidivr
iret
in
xor
mov
movs
xor
mov
mov
icebp
pop
imul
pop
gs
lods
adc
sbb
int
ret
jge
mov
scas
ds
cmp
pop
popa
sbb
in
movs
push
mov
mov
aam
retf
clc
in
ins
sub
cmc
sbb
pop
jmp
mov
jae
fst
inc
(bad)
imul
dec
lods
jno
call
pop
cmp
retf
fwait
imul
test
in
xor
and
(bad)
sbb
push
retf
loopne
mov
or
jb
push
ffreep
mov
pop
cmp
mov
jp
or
loop
imul
lahf
(bad)
arpl
push
inc
xchg
retf
lahf
add
xchg
addr16
pop
fwait
dec
push
cld
scas
pushf
bound
or
hlt
fs
sub
js
adc
sub
jns
inc
nop
push
js
aad
inc
jnp
cmp
mov
pop
push
mov
and
call
imul
add
stos
inc
push
test
call
mov
and
gs
fadd
dec
rcl
sbb
dec
les
sti
dec
jl
mov
pop
shl
xor
out
cmp
sahf
aad
pop
js
add
ror
adc
add
mov
cmps
mov
add
pop
cs
pusha
jecxz
sub
fsubr
dec
aam
(bad)
in
aam
loop
out
xchg
jo
xchg
xchg
dec
push
and
cmp
in
push
jne
cmps
sub
inc
cmp
aad
jmp
xchg
movs
add
jp
clc
(bad)
mov
mov
push
inc
test
sub
je
mov
ss
shl
push
rcl
or
push
cwde
pop
or
xchg
jo
xor
sbb
rol
push
fcmovnu
hlt
xor
pop
ins
xor
sub
mov
xor
es
pop
mov
add
cmps
cwde
pop
fdivr
lea
(bad)
aas
aas
lahf
push
mov
nop
inc
mov
aam
rcl
mov
sub
stos
jmp
fstp
xchg
movs
sub
sbb
adc
ror
cli
sbb
jo
mov
out
rcl
mov
xchg
lds
fidivr
push
cmc
add
enter
mov
push
lahf
ins
and
sub
add
pop
popf
jmp
sub
jmp
mov
mov
mov
adc
add
or
(bad)
sti
into
push
ins
enter
sar
bound
das
test
cmp
data16
or
sbb
aas
js
inc
jmp
jbe
xchg
push
les
(bad)
pop
imul
popf
xchg
fstp
leave
gs
and
mov
in
jecxz
push
dec
ja
fistp
ret
xchg
(bad)
je
(bad)
dec
retf
aaa
leave
(bad)
test
fild
or
xor
(bad)
mov
out
dec
xor
and
xchg
inc
and
cli
mov
jecxz
aad
push
pop
pop
jne
retf
mov
or
pushf
xor
int3
iret
jecxz
jle
fsubr
aaa
xchg
test
(bad)
sti
out
ds
push
neg
cwde
and
jmp
cmp
ins
sti
pushf
(bad)
loopne
dec
xor
je
rcl
in
movs
sar
sbb
les
add
mov
das
adc
pop
mov
bound
xor
jl
fld
mov
pushf
aaa
stos
mov
xor
push
xor
xor
inc
aas
mov
mov
mov
das
lods
sub
jae
dec
add
(bad)
adc
ds
jno
or
out
adc
or
push
xchg
cmp
sahf
out
sbb
mov
fucomp
dec
dec
inc
iret
aas
fst
mov
pop
fistp
push
mov
adc
sbb
mul
adc
stos
sub
pop
gs
mov
dec
mov
xchg
jge
dec
dec
das
adc
xchg
cmps
imul
cmps
ret
mov
xchg
push
in
cmp
push
js
mov
scas
js
aad
xor
cmc
repz
jo
popa
add
mov
sub
bound
jmp
ror
rcr
data16
rcr
mov
ins
jno
jne
ret
fnstsw
push
mov
mov
pop
jmp
jns
cmp
call
sub
xor
inc
ja
or
stos
mov
repnz
sub
clc
dec
pop
cwde
retf
loop
jbe
loopne
or
test
imul
pop
push
jecxz
or
and
jb
jo
and
mov
movhps
push
mov
mov
adc
clc
jns
retf
sbb
loope
jae
push
adc
push
(bad)
and
pushf
fldenv
cmp
sar
xchg
aas
push
(bad)
lea
push
paddusw
call
dec
jl
xor
ds
sub
test
in
lea
cmp
clc
dec
or
adc
adc
mov
pop
ins
fadd
shl
sbb
push
clc
cli
mov
test
mov
jl
scas
xchg
sbb
jnp
jmp
fsub
mov
das
call
add
add
xor
cmp
sbb
inc
pop
movs
mov
retf
jl
cwde
scas
push
sub
push
or
sub
mov
mov
push
enter
outs
jb
lock
or
dec
mov
ror
push
sbb
ss
sbb
loop
imul
and
gs
jmp
out
adc
mov
nop
iret
imul
lock
xchg
icebp
call
push
and
push
in
jb
add
jge
push
cmp
(bad)
rol
popf
in
ret
movs
add
mov
cmp
add
test
xlat
fbstp
cmp
cmc
cmp
add
loop
add
and
mov
xor
mov
dec
mov
jae
sbb
pushf
jno
push
popa
inc
ds
(bad)
icebp
inc
fdivr
mov
dec
out
stos
out
cmp
add
jge
sub
aaa
jbe
lock
adc
in
xor
or
xchg
dec
or
push
test
cmps
jne
cli
in
inc
mov
cmc
test
aas
pushf
xor
adc
cmp
push
sti
pop
add
fadd
scas
mov
adc
or
call
mov
xchg
and
mov
jnp
rcr
scas
out
xor
dec
cmp
daa
mov
in
js
sub
mov
add
pop
outs
rcr
lods
pop
inc
rcr
xchg
popf
dec
jno
sbb
lds
out
jp
push
xchg
repz
lods
cmp
xor
push
ret
pop
rcr
cli
rcl
cli
pop
inc
outs
add
sbb
xor
mov
test
fwait
mov
xor
mov
mov
mov
add
dec
popf
adc
mov
sti
push
jns
inc
aad
mov
bnd
mov
std
cmp
psrad
inc
cli
je
clc
xchg
lahf
cmp
xchg
iret
push
rol
pushf
inc
(bad)
rcr
mov
mov
lea
(bad)
repnz
test
xchg
sbb
test
pop
jb
je
rol
jl
scas
push
mul
out
loopne
mov
gs
pop
sub
mov
push
dec
jmp
bound
sub
sub
jp
std
push
dec
(bad)
rol
pop
scas
stos
icebp
pushf
in
add
pop
inc
jno
adc
push
push
dec
and
das
pop
lods
icebp
pop
dec
(bad)
and
pop
inc
lahf
jns
cmp
push
pop
xor
das
push
int
pusha
fwait
xchg
dec
stos
outs
mov
xor
push
and
scas
fs
call
sub
add
mov
adc
dec
test
sub
pop
inc
aad
call
stos
xchg
test
in
cdq
mov
mov
leave
pop
adc
jl
mov
mov
addr16
(bad)
cmps
mov
mov
dec
ss
into
pop
xlat
in
or
out
frstor
(bad)
push
fdivrp
xchg
push
push
or
sbb
and
add
xchg
jno
pop
mov
dec
or
imul
or
cmps
push
and
sbb
and
shl
sbb
cli
cmp
inc
retf
jecxz
scas
call
call
mov
cmp
inc
sub
movs
cs
inc
stc
mov
dec
xchg
sub
mov
mov
jg
pop
push
inc
loope
(bad)
dec
rcl
mov
loope
xchg
inc
mov
push
push
pop
(bad)
mov
dec
jns
fldenv
dec
pop
cmps
cli
cmps
xchg
retf
addr16
test
sti
sbb
add
inc
ss
push
push
ret
hlt
sub
shl
adc
ret
jae
push
jne
arpl
shr
mov
pop
sbb
ret
jae
mov
in
shl
pop
dec
loope
in
loop
add
mov
cmp
sbb
in
sub
xchg
shl
add
outs
ss
test
pop
out
xor
mov
hlt
xor
daa
aam
fcomp
or
cdq
rcl
test
push
(bad)
mov
xchg
mov
in
adc
fwait
mov
inc
mul
inc
and
push
pop
pop
pushf
mov
ja
dec
fimul
dec
icebp
call
pusha
fstp
int
jle
xchg
cmps
les
mov
movs
cmps
sub
in
mov
int3
(bad)
in
xchg
les
sbb
lahf
stc
jg
mul
ins
(bad)
mov
push
sub
pop
adc
jb
(bad)
adc
test
pop
mov
mov
clc
pop
ins
add
stc
push
jnp
sti
xchg
arpl
das
fsubr
inc
add
repnz
inc
mov
mov
jns
cmp
mov
scas
icebp
test
sbb
xor
rcr
inc
or
dec
xor
cmp
fbld
cli
test
pop
loop
sti
adc
xchg
adc
push
movs
arpl
mov
pop
sti
lea
mov
add
int
rcr
mov
xlat
xor
mov
mov
dec
inc
adc
sub
fdivr
popa
mov
aas
push
scas
adc
popf
add
sbb
mov
jno
jo
dec
popa
pop
arpl
shl
pop
and
retf
jae
outs
or
xor
call
(bad)
xor
and
movs
cdq
rol
and
fisubr
jnp
leave
movs
jns
enter
outs
adc
dec
dec
jg
pop
inc
mov
dec
js
xor
scas
mov
pop
or
add
movs
or
dec
and
stc
push
test
sub
retf
addr16
mov
or
gs
push
out
push
iret
jl
cmp
dec
mov
aad
pop
mov
mov
mov
fs
pop
dec
ds
push
push
pop
push
fmul
ret
dec
mov
sub
inc
adc
cdq
add
dec
dec
test
test
xor
sti
out
mov
dec
rcl
xor
push
sbb
adc
cld
fadd
push
shr
icebp
test
movs
out
inc
mov
mov
jge
in
xchg
cmp
and
jne
sbb
hlt
aad
daa
out
push
aam
adc
pop
fisubr
dec
retf
xchg
xchg
push
sbb
movs
jecxz
pop
adc
push
pop
xchg
lods
xor
cmc
ret
stc
jg
popf
out
popa
push
pop
jecxz
lds
(bad)
sub
or
xor
jbe
imul
jl
sub
leave
or
fadd
sahf
loope
sbb
mov
xchg
test
mov
pop
mov
aas
shl
sub
jae
mov
call
add
xchg
test
mov
stos
push
and
dec
popa
or
jmp
aam
fwait
retf
xchg
std
test
inc
outs
cs
jno
popf
mov
jmp
add
imul
mov
jno
outs
into
push
sar
xor
hlt
jmp
inc
xchg
xor
jge
(bad)
stos
xor
dec
les
add
out
xchg
dec
mov
cwde
mov
lock
(bad)
mov
cmp
mov
mov
pusha
add
mov
sbb
sub
xor
lea
xchg
and
or
test
cld
jae
push
in
hlt
js
or
add
jle
and
dec
ins
pop
ins
les
not
inc
in
nop
xchg
repz
sbb
dec
es
pop
dec
fldenv
lods
mov
push
xchg
mov
pop
(bad)
mov
pop
ja
mov
inc
mov
stos
das
pop
movs
sub
sub
add
pop
add
mov
adc
jg
pop
fnstenv
call
mov
jecxz
test
iret
repz
invd
es
mov
loop
cmp
xor
mov
popf
mov
cmp
repnz
mov
jo
es
and
sbb
jo
jmp
and
retf
or
fld
hlt
push
jg
cs
test
aas
std
xor
mov
adc
fild
add
nop
mov
adc
mov
mov
mov
mul
ins
or
jno
movs
loopne
je
push
dec
jo
sbb
jge
int3
push
mov
stc
(bad)
sbb
outs
push
pop
repz
sar
jo
xchg
mov
sbb
push
sub
jae
and
mov
leave
sbb
mov
cs
dec
or
or
push
mov
ret
mov
cmp
dec
push
in
cwde
scas
call
jb
call
test
pushf
pushf
xchg
jmp
pop
mov
mov
cmp
adc
mov
push
loopne
frstor
in
pop
jns
and
inc
add
inc
mov
jl
add
daa
ret
sub
dec
ins
rcr
leave
int
dec
ss
mov
sub
jbe
pusha
fcom
dec
sbb
test
dec
cmp
sub
pop
fcomp
pop
dec
and
and
inc
push
cmp
(bad)
mov
jmp
add
movs
das
add
mov
cmp
lods
pop
mov
dec
dec
icebp
and
ja
inc
div
loopne
mov
idiv
push
xchg
push
repnz
rcl
dec
in
xor
enter
js
cld
jle
push
enter
cdq
in
adc
push
and
cwde
or
movs
retf
pop
mov
pop
pop
cmc
ja
out
sub
leave
push
push
push
jge
mov
test
ins
sbb
sti
js
xchg
xor
pop
test
dec
and
hlt
jae
std
or
sbb
push
pop
ja
es
loopne
pop
pop
clc
jg
cmp
mov
in
jns
iret
inc
ja
icebp
xor
imul
rol
xchg
adc
push
push
hlt
loop
xor
movs
(bad)
(bad)
shl
sar
mov
mov
mov
jge
in
sbb
dec
lds
mov
jl
(bad)
jbe
rcr
into
or
inc
dec
push
mov
ins
and
adc
aad
mov
movs
out
cmps
fadd
push
cmps
or
mov
hlt
and
ret
(bad)
aas
adc
mov
sbb
je
dec
leave
mov
in
into
adc
cmp
sbb
cmc
adc
iret
xor
xor
mov
stos
(bad)
sbb
adc
jns
push
mov
stos
loop
lock
hlt
mov
mov
mov
lods
scas
sti
popf
mov
xor
sub
inc
mov
or
inc
arpl
xor
popa
pop
dec
xchg
sub
or
xchg
cli
and
(bad)
jmp
push
popa
rcr
push
mov
mov
mov
loopne
cld
push
adc
inc
adc
dec
cmp
popa
inc
sbb
outs
cmps
mov
in
pop
out
lea
in
jp
pusha
fcomp
push
shr
popf
adc
js
imul
inc
in
inc
or
dec
cmps
loopne
fcom
(bad)
sbb
lods
retf
xlat
fnsave
daa
std
push
mov
(bad)
xchg
or
mov
and
in
push
xor
sbb
pop
stc
cmp
xor
push
add
pop
out
mov
ficomp
hlt
add
push
and
mov
jecxz
mov
xor
dec
sbb
lods
mov
xlat
pop
xchg
loope
mov
push
push
jg
shr
add
fadd
stc
(bad)
jmp
test
jl
mov
xchg
push
out
lods
fwait
and
mov
movs
cmp
pop
sub
inc
push
dec
pop
lock
ins
addr16
xchg
mov
repnz
lahf
aas
pop
test
clc
jmp
adc
cdq
aad
mov
imul
(bad)
inc
add
sbb
sub
mov
pop
stos
and
(bad)
pop
iret
or
sub
cmp
imul
adc
mov
int
dec
movs
cmp
into
ss
pushf
mov
fist
cmp
mov
xchg
xchg
mov
out
inc
sbb
jmp
push
inc
jp
xor
xor
shl
sti
outs
push
lahf
ret
sbb
add
pop
add
loope
pop
jge
sahf
sub
xlat
(bad)
xchg
jge
daa
adc
mov
sbb
dec
jns
fild
nop
outs
sbb
mov
or
inc
sar
mov
inc
je
pop
cmp
mov
dec
sbb
adc
fstp
aaa
jns
mov
mov
mov
add
and
push
ins
sbb
imul
add
jns
xlat
sub
inc
ja
fimul
cmp
sbb
icebp
mov
mov
adc
clc
(bad)
push
test
xchg
out
aam
xor
loope
int
ins
xchg
adc
iret
xchg
mov
sbb
and
js
sbb
dec
rcl
loop
pop
push
aas
lock
jle
xor
sbb
lds
stos
cdq
call
jno
and
add
jg
pop
push
add
ds
and
dec
push
add
xchg
not
adc
frstor
jns
(bad)
enter
nop
(bad)
and
lods
adc
mov
pop
movs
mov
and
dec
test
pop
pop
loope
in
lods
jnp
shl
cwde
or
sbb
pop
loope
sbb
gs
imul
xchg
(bad)
adc
cld
fidiv
or
push
mov
xchg
mov
and
out
outs
loopne
int3
mov
div
leave
movs
sub
(bad)
xor
jecxz
mov
ret
sub
jo
pop
sbb
dec
imul
inc
jecxz
shr
mov
jo
adc
stos
xor
shl
aas
lods
pushf
test
or
mov
and
lahf
or
daa
rcl
retf
cmp
xchg
sub
inc
jp
out
xchg
retf
or
movs
int3
or
push
jmp
stc
sub
fnstcw
movs
cmc
arpl
loopne
test
lahf
sbb
stos
test
shr
jmp
jp
inc
sar
xchg
sbb
cmps
enter
or
bound
in
shr
test
and
push
test
adc
div
stos
sahf
xor
ja
in
inc
dec
fld
xor
push
ss
add
repz
loope
inc
inc
jge
xchg
push
jl
ja
mov
add
loopne
(bad)
int
pop
fisttp
and
xchg
cmc
je
and
stos
dec
fdivr
fsub
retf
xor
fisttp
out
xchg
sbb
retf
fwait
cli
popa
rcl
push
cmp
or
mov
aam
cwde
dec
xchg
jmp
xlat
xor
pusha
loope
fmul
push
mov
push
shl
mov
mov
dec
add
es
or
xor
sbb
mov
pop
mov
mov
push
mov
loop
int
and
xlat
pusha
outs
and
adc
mov
daa
xchg
outs
daa
movs
sbb
test
sbb
sub
(bad)
inc
adc
mov
mov
push
in
push
xchg
adc
push
and
daa
pop
sub
lods
jno
cmp
sbb
and
xchg
fdivr
loopne
push
xlat
jmp
ss
ss
push
add
fiadd
into
xor
sub
adc
leave
ror
or
scas
mov
push
test
inc
fs
push
scas
retf
mov
aam
fwait
mov
jg
xchg
mov
jnp
retf
mov
je
and
jmp
mov
stc
ret
cmps
adc
daa
mov
and
or
ss
cmp
and
pop
jmp
cmps
bound
add
lea
dec
mov
shl
xor
push
mov
test
sbb
sub
js
ds
cmove
(bad)
xor
jg
enter
ret
xlat
inc
cmps
push
jle
rcr
ss
loope
sub
push
imul
(bad)
out
cdq
mov
or
cmp
jg
add
jo
or
ret
cmp
sub
pop
push
add
sbb
xor
inc
push
addr16
adc
dec
shl
in
call
dec
fiadd
jne
sbb
and
popa
(bad)
jnp
aaa
shl
push
inc
inc
gs
scas
int3
mov
xor
std
inc
push
or
outs
mov
xchg
and
pop
dec
aaa
mov
outs
ss
xor
dec
aad
inc
aad
scas
pop
in
jmp
pop
jl
out
popa
out
jbe
dec
cdq
add
pop
dec
fsubr
(bad)
ss
(bad)
mov
pop
cld
mov
in
push
scas
mov
not
xchg
xchg
inc
or
int3
sar
ds
jnp
jp
push
jl
cmp
mov
pop
mov
push
rcr
mov
loopne
ds
jb
xor
or
sub
inc
mov
jne
popf
sub
and
xor
jb
popa
cmp
pop
dec
ficom
outs
mov
rol
les
or
push
loope
test
jne
sbb
cmps
stos
mov
lahf
hlt
aad
inc
cmp
dec
mov
leave
mov
fisub
pop
sbb
sbb
add
xchg
jne
pop
add
push
cld
pushf
jne
xchg
leave
cmp
mov
jecxz
pop
mov
inc
fistp
pop
xor
jbe
out
fisub
imul
adc
cmp
stc
out
sub
jp
mov
out
xor
jno
mov
repz
mov
inc
mov
mov
mov
(bad)
std
sbb
call
je
movs
sub
int3
popa
xchg
dec
gs
out
and
call
mov
cmp
sub
mov
xor
add
movs
dec
inc
pop
or
lock
fucom
cli
outs
adc
and
in
and
test
inc
div
or
call
fisubr
ss
fwait
lahf
hlt
mov
push
mov
loope
cmps
sub
adc
xor
repz
rol
sbb
mov
or
sahf
cli
(bad)
push
aaa
rcl
cmp
jae
sub
stc
and
in
or
mov
(bad)
lea
and
neg
adc
mov
xchg
xchg
cmps
fnsave
icebp
je
add
mov
push
sub
loope
js
cmp
(bad)
dec
fidiv
inc
leave
pop
jl
sbb
stc
scas
mov
jmp
or
mov
sub
(bad)
push
xor
dec
inc
mov
dec
xchg
push
aaa
repz
out
ret
(bad)
jmp
shufps
ins
dec
sbb
loop
cmp
scas
jl
xchg
xchg
mov
xor
scas
outs
dec
jle
jb
sub
push
jp
xchg
add
jecxz
lods
inc
stos
push
and
in
and
cmps
loopne
mov
in
bound
jae
in
cmp
sbb
mov
inc
es
jo
push
bound
xlat
fwait
mov
cmps
mov
(bad)
or
les
cmp
jb
leave
or
dec
cwde
in
dec
imul
inc
add
cmp
adc
les
inc
xchg
pop
push
cld
out
sub
pop
add
jmp
fnsave
out
hlt
push
rcl
jnp
shl
in
mov
sti
inc
jmp
(bad)
out
mov
xchg
fsubp
sbb
fiadd
fstp
ror
in
mov
out
jp
adc
and
sbb
or
inc
sub
imul
xlat
sub
push
fdiv
mov
iret
xchg
ss
xor
mov
inc
mov
std
ds
xchg
add
or
xchg
mov
rcl
and
mov
ret
fnstenv
mov
jle
push
and
gs
aas
lock
into
addr16
mov
daa
cli
out
push
inc
mov
cmp
rcr
sub
mov
sbb
fcmovbe
retf
fimul
sbb
mov
dec
dec
xor
add
shl
xchg
loope
mov
push
popa
sbb
imul
cmps
xchg
sbb
daa
mov
gs
cmp
fdiv
je
test
(bad)
scas
lea
test
push
mov
mov
neg
sbb
stc
and
sbb
(bad)
test
inc
retf
cmp
dec
icebp
jmp
xchg
or
sbb
ds
jae
sar
lods
mov
mov
std
xor
add
daa
stc
jle
and
and
movs
cmp
stos
fndisi(8087
jmp
cmp
inc
adc
add
popa
mov
jb
test
xchg
test
test
movs
out
fscale
lds
lods
js
lock
icebp
add
pop
leave
scas
xor
sti
cmc
jge
sbb
xchg
xchg
jbe
bound
in
popa
ss
repz
xor
mov
push
push
or
sub
test
jle
adc
jns
(bad)
xchg
cmp
lds
mov
pop
xor
(bad)
mov
test
and
arpl
add
pop
dec
sub
mov
retf
push
ds
loope
jecxz
sub
adc
shl
sub
(bad)
call
adc
ss
jno
or
cmp
xor
ins
loopne
cmp
push
sbb
fcmovne
jmp
test
data16
or
movs
xchg
std
pop
xor
lock
rcr
dec
xor
xchg
sub
imul
xchg
jo
sub
jmp
cmp
pop
push
adc
xchg
shr
in
popf
push
cli
sub
leave
or
sti
cs
adc
mov
jmp
dec
fstp
inc
xor
aaa
mov
movs
xchg
movs
iret
cmp
jp
in
int3
jp
scas
mov
adc
inc
aam
pushf
or
loop
les
dec
test
xchg
in
in
sub
push
add
adc
test
int
call
div
and
xor
xchg
push
int3
(bad)
shl
xchg
jp
push
push
jae
iret
mov
syscall
xchg
sub
(bad)
and
mov
repz
popa
mov
push
or
sti
pop
adc
(bad)
loop
dec
int3
daa
ret
push
push
ret
lds
aaa
push
loop
sbb
add
stos
push
and
inc
adc
cwde
sub
sub
jle
gs
fld
jbe
cli
or
div
pop
mov
outs
and
and
mov
jg
gs
or
lods
pop
adc
shr
mov
aaa
mov
(bad)
enter
mov
in
rol
fs
jns
mov
mov
mov
lahf
add
popf
aas
pop
xchg
push
dec
xor
jbe
cmp
mov
xchg
mov
fiadd
dec
cmp
fimul
xchg
hlt
bound
cmp
aad
push
mov
xor
(bad)
cmp
add
xchg
test
inc
add
push
stos
pop
pop
dec
push
and
xor
cmp
lahf
mov
cwde
repnz
inc
xor
sahf
fsubrp
into
inc
test
and
lods
xor
sub
and
cmp
mov
push
fcmove
ja
arpl
jo
enter
clc
xchg
jne
cdq
inc
ja
mov
add
mov
push
mov
inc
idiv
pop
and
ins
stos
sub
stos
sbb
ins
addr16
push
leave
jmp
mov
xor
jle
mov
in
mov
ret
dec
xor
push
push
pop
fdivr
pusha
dec
add
pop
sub
jp
mov
xor
fisttp
mov
xor
xor
mov
cwde
cmp
iret
aam
xlat
out
aaa
pop
adc
into
popa
sub
and
es
cmp
push
shl
pop
push
mov
test
lahf
jo
(bad)
iret
jb
pop
xchg
mov
xchg
dec
adc
xchg
jmp
pop
push
(bad)
dec
mov
call
jg
cmc
xor
dec
pop
mov
sub
ret
jae
lods
sbb
cmp
sub
inc
jb
push
push
ja
dec
push
jno
pop
mov
enter
ins
and
mov
sub
inc
lods
adc
add
pop
pop
clc
stc
xor
jo
xor
imul
mov
test
xlat
push
lea
mov
pushf
pop
add
pushf
sbb
mov
mov
or
sub
test
pusha
xor
stc
(bad)
mov
bound
cmp
pop
popf
gs
retf
mov
mov
sbb
fst
sti
rsm
mov
loopne
mov
mov
dec
push
outs
push
ret
movs
nop
cli
mov
sub
sub
retf
popa
pop
(bad)
adc
aad
adc
xchg
and
call
fstp
push
sbb
inc
cli
or
mov
aaa
clc
cmp
jno
cmc
cld
mov
cmp
cmp
or
cmp
add
cmps
cmps
in
fld
ret
or
arpl
pop
scas
pop
pop
mov
jnp
mov
jns
mov
jp
aam
inc
mov
fcom
icebp
or
sbb
movs
mov
fisub
mov
pop
mov
dec
mov
sbb
(bad)
rcr
inc
mov
lods
push
dec
aad
arpl
ins
test
pop
int3
push
test
aam
mov
test
aas
ss
add
add
mov
repnz
adc
cmp
sub
dec
fucomip
mov
mul
dec
sub
dec
mov
xchg
dec
xor
jle
bound
add
xchg
stc
mov
inc
(bad)
(bad)
cmps
add
xchg
jp
(bad)
xchg
stos
popf
sub
mov
enter
mov
popa
(bad)
repnz
pushf
sbb
mov
xchg
pop
inc
retf
in
cmp
imul
jno
jl
out
sub
call
lea
cdq
in
shl
inc
jmp
lock
cmp
inc
and
pusha
sbb
sub
sbb
sub
test
xchg
adc
push
aad
xchg
fisubr
imul
jle
lea
mov
mov
mov
dec
loope
xchg
add
xor
mov
shl
jp
fpatan
jno
xchg
rcr
push
(bad)
xchg
cs
and
mov
pop
not
(bad)
das
retf
xor
aas
mov
addr16
jnp
and
std
mov
imul
outs
sub
outs
sub
popa
and
or
mov
(bad)
dec
sub
fwait
adc
push
iret
dec
cmp
mov
clc
repnz
ins
adc
ds
ins
aaa
push
push
inc
xchg
jnp
fimul
stos
(bad)
imul
test
ss
adc
mov
inc
mov
fild
and
xchg
jmp
int3
or
sbb
pop
call
adc
mov
jns
mov
cmp
retf
scas
stos
jne
or
shr
cs
cmps
cmps
xchg
loop
mul
sub
lods
inc
dec
push
imul
stos
jmp
mov
sar
cld
test
imul
jnp
adc
adc
ja
xor
xchg
inc
jle
cs
into
cmp
shl
icebp
je
jl
xchg
mov
outs
cli
pushf
cmps
in
lods
int
cmp
jmp
xchg
(bad)
movs
das
fdiv
push
icebp
inc
jl
mov
imul
retf
retf
scas
xor
mov
dec
mov
pop
(bad)
dec
or
xor
(bad)
hlt
(bad)
in
ret
hlt
sub
xchg
test
cmp
lods
es
cmovne
stos
mov
icebp
test
cmp
loop
inc
ins
sbb
out
jo
mov
retfw
sub
sbb
(bad)
pop
cmp
ret
mov
loop
gs
pop
and
mov
loop
movs
cmp
sbb
xchg
mov
ror
inc
jmp
and
jg
ins
and
hlt
jno
cs
fadd
in
je
(bad)
(bad)
aam
call
or
push
add
sbb
cmps
sub
pop
(bad)
into
(bad)
inc
adc
cmc
dec
pop
rep
(bad)
mov
lds
jbe
push
xor
xchg
mov
sbb
and
push
fcomp
push
mov
adc
push
push
xor
outs
pusha
cld
ins
mov
and
push
cmp
test
adc
xor
cmps
pop
dec
ret
pop
retf
mov
mov
jnp
js
movs
in
test
dec
test
add
clc
jb
ret
loopne
in
or
xor
cli
mov
(bad)
sub
fnop
adc
push
inc
and
leave
pop
add
dec
adc
arpl
cmp
pusha
(bad)
leave
mov
int
outs
or
popa
cmps
movs
repnz
hlt
call
mov
mov
sahf
fwait
(bad)
aam
(bad)
xor
sbb
or
push
mov
jmp
and
test
jb
test
jle
xchg
sub
xchg
xor
xchg
jo
cmp
(bad)
in
mov
push
sahf
in
ret
stc
(bad)
addr16
retf
daa
movs
or
pop
jo
into
push
imul
sbb
adc
icebp
adc
mov
outs
jnp
mov
jne
shl
sub
mov
jmp
std
mov
xchg
dec
xchg
cmp
outs
test
push
add
or
adc
ja
mov
push
add
push
xchg
out
shl
push
lahf
mov
jmp
rol
or
cdq
data16
fidivr
push
sub
mov
outs
ja
dec
stc
xor
leave
outs
or
push
xchg
sbb
push
mov
retf
pop
das
push
sbb
pop
cmp
inc
pop
push
call
sub
mov
jmp
iret
aas
cld
mov
and
jno
cs
jecxz
outs
pop
imul
mov
js
inc
xchg
dec
push
ror
daa
sbb
imul
pop
ins
xchg
or
sbb
in
test
dec
add
mov
jns
cwde
xchg
push
movs
cmps
inc
mov
xor
pushaw
pop
inc
loope
fst
test
lock
into
imul
adc
repz
(bad)
push
xor
into
push
retf
add
jmp
or
fdiv
xlat
in
stos
jecxz
pop
sbb
cmp
repnz
lahf
adc
mov
xor
lods
mov
ret
jae
adc
cmps
mov
and
mov
shl
les
test
mov
mov
out
ret
int3
adc
out
pop
fnstcw
es
movs
cmp
fsub
or
fist
mov
neg
sti
mov
lds
iret
and
leave
int
mov
xadd
sbb
retf
jmp
retf
xor
fwait
pop
jae
repz
and
cmp
popa
mov
xchg
inc
xchg
mul
push
xlat
imul
js
xor
fst
xor
pop
std
out
sar
push
pop
inc
jl
lds
xlat
pop
call
mov
imul
lods
pop
lock
jp
jecxz
mov
mov
push
ins
(bad)
rcr
sbb
outs
cmc
xchg
sbb
popa
mov
and
lock
or
lahf
jnp
das
rcl
sbb
enter
pop
push
inc
fisub
or
xchg
hlt
jge
pop
add
or
xchg
mov
push
out
fimul
jg
add
push
imul
mov
jl
or
jge
lds
(bad)
adc
add
in
sbb
js
adc
(bad)
cli
mov
ret
cmps
clc
mov
or
push
inc
pop
adc
jp
int3
push
dec
dec
frstor
cmc
pop
call
popf
sbb
repz
jmp
inc
xor
or
and
sbb
add
icebp
sbb
sbb
fdivr
xor
hlt
xchg
dec
pop
test
cmc
mov
loopne
cmp
inc
push
and
and
xor
jge
lock
jmp
xlat
imul
or
dec
inc
adc
icebp
mov
dec
xchg
push
aam
sbb
fcomi
imul
or
lock
dec
cmp
test
add
test
sbb
movs
popa
jp
cmps
or
out
xor
cs
xor
sub
add
call
loop
add
fst
into
xchg
dec
mov
imul
ins
mov
(bad)
push
scas
lahf
retf
push
xor
inc
jp
leave
pop
sti
xor
jo
sbb
jmp
(bad)
fcomp
sub
in
retf
stos
dec
mov
aam
es
push
and
add
push
adc
stos
daa
lock
mov
out
out
push
mov
inc
mov
(bad)
jnp
jmp
stc
mov
fsub
xor
sbb
adc
sub
pusha
(bad)
jmp
out
dec
mov
pop
pop
xchg
jl
pop
cmp
ja
inc
sub
popf
cs
sbb
ds
call
xor
aad
sub
sbb
mov
xchg
retf
jp
cs
sub
push
sub
aas
cmp
xor
push
int3
mov
imul
sbb
jle
fwait
push
mov
jmp
add
or
jmp
dec
ret
jne
fidivr
pop
and
mov
cmp
sahf
add
aam
sub
dec
arpl
call
lods
jo
mov
(bad)
push
mov
popf
pusha
push
retf
repz
mov
sub
es
scas
fwait
dec
and
(bad)
idiv
loopne
call
mov
or
inc
fs
or
in
xchg
and
add
fidivr
jecxz
lods
out
xor
outs
cmp
pop
jnp
xor
loope
sub
mov
jno
mov
mov
enter
fucomp
adc
out
jl
std
test
xchg
ret
push
popa
pop
fwait
and
std
push
fstp
pop
mov
xor
xor
(bad)
inc
lods
mov
aas
loop
push
mov
(bad)
sub
shr
ja
jbe
add
jmp
mov
pop
cwde
jo
call
bound
sti
xchg
mov
xchg
mov
ror
cmps
add
and
movsx
scas
aad
jmp
scas
mov
retf
call
aad
push
mov
gs
cld
add
dec
mov
push
or
xor
mov
inc
cwde
dec
cmps
and
push
cmc
ret
push
push
in
pandn
in
sub
lods
test
cs
jecxz
adc
mov
popa
sar
inc
call
xor
ret
xlat
call
gs
(bad)
call
mov
pushf
rol
fstp
push
pop
add
dec
jg
pushf
sti
dec
xchg
sub
push
outs
shl
mov
pop
xor
sahf
out
sbb
gs
imul
jp
jne
xchg
ret
(bad)
in
std
(bad)
jmp
rcr
push
mov
fcomp
push
jo
jns
adc
shl
(bad)
push
fisubr
dec
leave
mov
xchg
repz
mov
mov
fmul
pop
xor
sbb
out
leave
inc
push
outs
lock
sub
nop
adc
or
xchg
sbb
enter
dec
cmp
(bad)
stos
int
jle
loope
(bad)
pop
rep
adc
or
(bad)
cmp
and
mov
je
jbe
inc
loopne
xchg
ffreep
int
stos
sub
dec
fst
int
push
neg
pop
xlat
mov
in
int
dec
xchg
div
mov
movs
sbb
retf
jb
cmps
lea
pop
dec
arpl
jbe
ja
cmp
adc
mov
data16
push
pop
and
mov
sub
xor
add
jnp
mov
inc
stos
or
(bad)
jecxz
ret
dec
mov
repnz
div
adc
mov
dec
ficom
cmp
jp
cdq
or
in
mov
mov
in
pop
jo
pop
xchg
cld
jl
out
iret
or
cmc
out
cmp
mov
jno
lock
lods
pop
mul
push
mov
ret
and
rcr
sub
adc
and
and
nop
ror
pushf
lea
js
inc
loop
(bad)
ins
xor
push
in
adc
fld
cdq
fwait
mov
adc
or
scas
out
sub
inc
sub
in
lock
push
xor
cmps
outs
jmp
lahf
cmp
fs
retf
add
sbb
xchg
dec
mov
or
push
and
sub
clc
cwd
jne
popf
add
xor
nop
das
adc
leave
out
mov
jno
pop
ja
push
pop
lods
iret
add
jnp
imul
imul
stc
xchg
fwait
cmps
ins
mov
ret
or
mul
mov
loopne
test
shl
int
mov
(bad)
lods
leave
cmps
fucom
fimul
cmp
stc
mov
dec
add
leave
ret
(bad)
cmp
inc
sub
mov
std
xchg
mov
int
dec
stos
loop
aas
xchg
mov
or
nop
in
inc
pop
(bad)
or
cmps
ja
sahf
sbb
and
mov
jl
in
retf
ret
mov
and
push
ja
(bad)
mov
out
aas
mov
into
shr
push
jmp
xor
sbb
imul
mov
jns
inc
(bad)
in
xor
ret
ret
mov
in
popa
sub
xchg
sbb
pop
mov
mov
add
bound
cdq
in
inc
ds
les
(bad)
cld
mov
dec
dec
je
sbb
add
adc
cmp
mov
fstp
sbb
aaa
popf
mov
add
inc
hlt
jle
pusha
mov
and
out
adc
lods
lock
xchg
test
out
repz
mov
jnp
out
cmp
push
cdq
xchg
push
jo
enter
or
outs
(bad)
xor
cmp
jle
popf
(bad)
cli
mov
xchg
or
push
in
xchg
(bad)
imul
mov
movs
stc
jne
mov
mov
and
sbb
adc
into
inc
pop
dec
jne
retf
pop
dec
test
fcomp
cmp
rcl
mov
push
pop
jno
add
dec
mov
cs
sub
into
cmps
in
fsubrp
and
xchg
aaa
pop
cmps
mov
mov
push
inc
or
mov
in
or
shr
inc
dec
inc
nop
cld
rol
test
jb
ret
push
rcr
or
pop
xchg
das
jnp
out
int
mov
fmul
jne
js
stos
icebp
xchg
mov
test
xchg
jb
out
add
int
mov
cmp
jmp
sbb
(bad)
push
repnz
fmul
xchg
addr16
ret
stos
jmp
sub
mov
pop
pop
fidiv
xchg
mov
or
fist
inc
test
sub
call
dec
std
fwait
xchg
adc
jnp
xchg
hlt
loope
adc
cs
test
imul
aam
in
push
cmps
in
cmc
push
xlat
add
mov
lock
cmp
pop
pop
jmp
test
aad
movs
push
ret
xor
pop
push
je
call
test
jne
mov
fiadd
push
add
push
mov
mov
xlat
lds
push
mov
push
sub
outs
jno
gs
lds
push
fdiv
mov
jle
ja
fisttp
mov
ror
add
js
or
popf
(bad)
idiv
sbb
sub
scas
push
daa
jne
mov
jg
and
sub
adc
mov
or
adc
and
inc
idiv
out
sub
retf
test
cmps
(bad)
mov
xchg
or
mov
pop
sbb
xor
or
fcomp
loopne
or
nop
jb
ficom
jmp
inc
mov
pop
stos
add
gs
mov
(bad)
dec
sbb
mov
es
js
test
hlt
test
dec
dec
retf
les
imul
add
cmp
loope
push
mov
jno
popa
mov
fdiv
lods
test
add
add
sbb
sbb
push
mov
sbb
fwait
xor
or
movs
out
add
pop
mov
repz
(bad)
jbe
sbb
pop
loope
add
sbb
mov
data16
mov
or
mov
add
mov
adc
jecxz
retf
in
mov
xchg
and
xor
aam
ds
inc
dec
out
cmp
mov
mov
ficomp
lds
mov
js
pop
jo
xor
cmps
and
push
mov
or
imul
mov
cmp
in
imul
sub
icebp
push
inc
icebp
inc
cli
movs
int3
inc
jae
jo
push
ins
mov
or
pusha
sbb
ror
vminss
gs
sub
add
mov
ss
nop
mov
in
sub
sbb
iret
sbb
inc
jle
mov
xlat
cdq
lds
sahf
loopne
pop
je
dec
inc
or
fwait
pop
and
sub
sar
in
sub
repz
sub
push
mov
dec
imul
lods
test
inc
clc
in
lea
sbb
cmp
test
fldenv
in
hlt
int3
cmc
cwde
jmp
das
mov
inc
(bad)
icebp
outs
icebp
test
out
shr
mov
xchg
adc
push
js
test
jbe
in
and
dec
dec
nop
and
cmp
pop
fadd
push
ficom
test
inc
fdiv
scas
xor
or
clc
sbb
aam
sbb
imul
in
sub
jg
inc
repnz
adc
jb
loopne
sbb
xchg
out
sbb
xor
outs
adc
add
jno
aaa
sbb
cmp
ret
jne
adc
cwde
iret
test
sbb
and
and
maskmovq
test
outs
dec
shr
pop
outs
cdq
sub
mov
jge
sub
xor
mov
dec
(bad)
pusha
add
dec
aad
mov
mov
push
push
pusha
dec
inc
xchg
push
movs
mov
ja
bound
movs
aaa
add
ror
cmps
add
sbb
call
fwait
adc
nop
cwde
or
xchg
mov
in
add
(bad)
(bad)
sbb
dec
cmp
stos
lods
push
push
imul
enter
mov
fwait
scas
cmps
sti
pop
add
cmp
outs
jns
cmps
xchg
jle
mov
fwait
mov
inc
inc
test
(bad)
sub
add
retf
fst
leave
lock
adc
in
repz
gs
(bad)
xlat
pop
xor
jmp
movs
pushf
push
cmps
test
dec
and
stos
jp
retf
and
adc
outs
std
add
test
leave
jbe
inc
lock
cli
out
inc
mov
xchg
or
scas
dec
adc
icebp
daa
lds
ret
push
nop
jmp
mov
inc
add
xchg
inc
mov
jae
mov
bnd
mov
adc
jb
bnd
jbe
mov
aad
add
jbe
push
xor
sub
int3
lds
(bad)
jg
add
xor
and
shr
outs
mov
rcl
adc
fmul
movs
or
xor
cmps
xor
dec
lods
cmp
and
xchg
cmp
mov
outs
in
sub
stc
dec
sub
adc
(bad)
cmp
adc
dec
lds
sub
mov
loop
dec
sub
xchg
retf
out
in
jb
xchg
mov
lahf
shl
cdq
pop
loop
mov
sub
cmp
jl
(bad)
jnp
mov
dec
aad
in
lock
(bad)
jmp
dec
outs
mov
pop
outs
(bad)
mov
shr
fwait
inc
retf
int3
sub
imul
hlt
inc
jmp
add
sbb
ss
mov
xor
cmp
push
out
inc
out
ret
or
sahf
scas
fdivr
mov
in
dec
call
push
mov
xchg
ret
pop
pop
adc
or
inc
js
int
cli
push
and
xchg
mov
mov
jno
jl
add
xchg
mov
push
je
aad
in
mov
and
popa
idiv
out
push
out
stos
inc
outs
add
enter
mov
sahf
push
outs
jmp
clc
cs
push
test
addr16
das
int3
mov
enter
mov
pop
fidiv
call
sbb
cmps
pop
in
lods
ret
push
push
iret
dec
into
pop
fnsave
pusha
(bad)
mov
adc
fbstp
shl
push
sar
inc
shl
jmp
sub
ds
rcl
add
fwait
inc
xor
xchg
push
mov
lods
scas
and
fbstp
sbb
jmp
imul
cdq
outs
xchg
xchg
dec
dec
xor
sbb
jmp
mov
mov
mov
not
je
daa
es
out
shr
lahf
wrmsr
cmp
xor
dec
lods
inc
jne
faddp
pop
imul
mov
fidiv
pop
ss
mov
fistp
into
xchg
mov
pop
rol
jb
push
push
(bad)
iret
addr16
stos
mov
add
(bad)
ja
hlt
pop
std
out
jecxz
inc
xor
dec
in
push
sub
les
dec
cmp
js
xor
int
pusha
cmp
jecxz
jmp
repz
retf
repnz
fmulp
jno
mov
dec
imul
mov
test
mov
pop
mov
shl
shl
push
out
icebp
xor
pop
adc
jle
test
leave
mov
xchg
push
mov
in
fnstsw
pop
imul
fstp
hlt
inc
stos
jecxz
and
pop
xchg
aas
popf
mov
mov
ret
jns
std
pop
mov
inc
push
repz
sbb
aaa
sub
in
in
sub
mov
div
xor
add
mov
pop
inc
mov
and
jecxz
push
ret
stos
in
pop
pop
xor
add
mov
or
jl
jns
outs
or
mov
loopne
es
imul
std
(bad)
popf
clc
push
push
stos
fs
movs
mov
es
xchg
stc
xchg
inc
push
loope
mov
or
mov
pop
jmp
sub
cld
ficom
adc
scas
cmp
inc
adc
test
sub
mov
fadd
push
movs
push
pusha
fisttp
rcl
jge
stos
(bad)
jecxz
pusha
inc
ror
lahf
fisttp
int
ficom
dec
out
inc
call
lods
fidiv
mov
shr
inc
adc
shr
or
int
xchg
and
or
fistp
jno
int
mov
xchg
sbb
pop
dec
mov
and
out
loopne
pop
xor
jno
aaa
ins
or
mov
icebp
push
popa
in
clc
repnz
cmc
arpl
mov
lea
xor
mov
js
cmp
inc
sub
shl
enter
pop
add
xor
test
(bad)
sbb
mov
pop
popa
xchg
sbb
sar
fidivr
sbb
cs
jo
dec
or
fwait
cmp
xchg
lods
lock
int3
rcr
stos
adc
cmps
cld
hlt
xor
test
push
xor
push
pop
pop
fadd
lods
sub
jbe
mov
pop
sbb
adc
mov
jecxz
push
js
call
(bad)
(bad)
mov
cmc
(bad)
imul
scas
and
pop
test
int3
cmps
test
cmp
ins
add
sbb
push
std
fsub
mov
dec
daa
int3
fadd
mov
inc
add
pop
aam
xchg
add
int
retf
inc
mul
addr16
cwde
adc
dec
pop
sub
lods
inc
mov
cmc
mov
sahf
out
retf
scas
sbb
call
jo
or
outs
addr16
sbb
ja
mov
icebp
jecxz
stos
jne
add
sub
jmp
sub
push
pop
lock
nop
pop
or
imul
fsubr
(bad)
mov
or
arpl
in
cwde
mov
sub
adc
jmp
out
mov
push
arpl
rcl
imul
gs
inc
pop
mov
iret
aaa
xchg
loopne
mov
mov
scas
gs
sbb
lahf
and
addr16
inc
mov
jno
pop
adc
adc
cmp
inc
push
add
xor
sub
out
add
lods
jg
prefetcht2
mov
add
shl
or
movs
jb
cmp
ja
stos
rcl
pop
and
add
push
push
loop
push
call
in
and
adc
mov
adc
mov
xchg
add
iret
pop
out
and
xchg
mov
fdiv
retf
outs
sub
mov
cwde
icebp
add
mov
in
mov
mov
inc
add
popa
inc
jo
in
imul
push
mov
adc
lock
scas
rol
mov
fs
aad
fcom
cmp
xor
test
pop
outs
div
mov
sbb
xor
ins
add
jns
repz
cmp
pop
or
mov
mov
jb
cwde
daa
adc
lahf
inc
cwde
loop
xor
dec
inc
or
mov
xchg
(bad)
mov
fisubr
cmp
mov
ins
adc
inc
add
call
out
adc
ja
adc
and
rol
and
jae
int3
and
pop
lods
lds
and
int
add
mov
imul
(bad)
cmp
aad
add
add
idiv
in
push
int
clc
mov
sbb
mov
mov
and
pop
retf
sahf
adc
sar
push
inc
(bad)
in
pushf
jne
mov
mov
sub
movs
or
movs
xor
rcr
xor
xor
icebp
lock
aad
mov
mov
push
in
data16
push
sbb
xchg
push
inc
sub
mov
dec
push
ss
sbb
mov
xlat
mov
out
lds
pop
mov
mov
shl
pusha
ret
add
dec
(bad)
xchg
pushf
xchg
mov
xchg
lods
jbe
mov
mov
lods
cmp
jae
sbb
xor
stc
stos
repnz
inc
imul
xor
xchg
mov
je
dec
or
sbb
xchg
mov
(bad)
repz
enter
push
addr16
jge
loop
popf
fbld
mov
aad
cs
(bad)
adc
icebp
imul
inc
hlt
es
fcom
repnz
into
jmp
jno
sub
or
push
sbb
ficom
pop
je
into
jg
inc
scas
je
xchg
mov
nop
inc
stc
add
or
arpl
jno
lock
lods
add
call
int3
sub
cmp
and
rcr
dec
test
mov
xchg
jp
and
lock
fs
jecxz
cs
inc
dec
ffreep
pop
sbb
jno
lock
aaa
xchg
xor
push
scas
and
jmp
xor
sar
test
mov
mov
xor
xchg
jae
cmp
or
clc
out
ja
xor
jmp
add
inc
jle
mov
outs
cwde
idiv
fsubr
sahf
push
xor
jp
fwait
sub
movs
dec
push
scas
xor
and
push
dec
bound
ins
pop
das
out
xchg
movs
xor
cli
(bad)
sbb
dec
jmp
lock
or
imul
push
ins
aaa
sbb
mov
cli
or
arpl
dec
pop
rcl
and
jg
mov
cli
mov
out
int3
loop
stos
and
mov
gs
lods
ins
push
mov
sub
into
jno
jae
adc
pop
(bad)
repnz
adc
movs
lea
jmp
push
in
popa
pushf
imul
inc
jo
scas
add
jnp
xor
xor
xor
adc
mov
test
sbb
ins
nop
mov
mov
jmp
loope
sub
fisttp
out
repnz
cmp
dec
push
xor
push
in
bound
push
adc
sbb
xchg
test
cmp
jo
cmp
(bad)
loopne
jecxz
jge
xor
mov
icebp
xlat
xchg
add
ror
inc
and
dec
cmp
mov
add
je
lods
mov
fld
push
pop
daa
jl
pushf
call
or
dec
mov
push
push
retf
mov
es
push
in
imul
gs
adc
clc
fs
popa
sbb
sbb
lods
leave
fild
push
pop
cld
add
cmp
aaa
xchg
or
inc
jns
push
mov
ret
jmp
dec
in
ret
sub
push
mov
jg
mov
scas
ja
xchg
push
add
jp
imul
std
mov
push
xchg
sbb
mov
mov
and
mov
xor
add
dec
or
jnp
jae
es
imul
mov
stc
ret
adc
dec
xlat
imul
les
lods
pop
(bad)
mov
addr16
xchg
je
(bad)
mov
shr
ret
dec
xchg
fisub
arpl
das
fiadd
push
test
scas
lods
push
inc
fs
push
aam
adc
sub
(bad)
jge
add
xor
cld
jmp
fwait
inc
retf
in
fsub
mov
push
(bad)
adc
fiadd
cli
push
dec
scas
das
mov
or
fisttp
mov
or
add
aam
add
outs
push
cmp
in
and
xor
inc
movs
out
mov
nop
xor
and
enter
(bad)
jge
inc
fwait
cmp
sbb
in
fucom
sbb
mov
or
enter
xor
inc
pop
sahf
fs
mov
inc
movs
push
nop
pop
or
sbb
shr
pushf
cmc
sbb
mov
mov
aam
int
mov
movs
daa
iret
add
pop
push
repz
jae
fld
and
pop
mov
pop
stc
jns
data16
push
clc
dec
cmp
inc
icebp
sbb
fist
jmp
popa
test
push
js
pop
push
xor
and
nop
push
mov
add
mov
pop
xchg
xor
inc
in
pop
(bad)
jl
scas
xor
std
iret
push
sbb
fsubr
fnstsw
mov
xchg
dec
pop
scas
es
pop
imul
push
jle
out
outs
dec
clc
retf
test
jmp
pop
or
enter
fild
arpl
daa
xchg
pop
dec
gs
repz
xor
jae
adc
into
or
push
jb
push
outs
sbb
jo
loop
stc
aad
push
sbb
jae
lea
mov
mov
mov
jbe
cmps
adc
rcr
in
nop
mov
ins
inc
mov
(bad)
aas
push
icebp
jecxz
or
mov
stos
dec
jmp
or
jl
retf
xchg
inc
cs
mov
push
inc
repz
sub
inc
push
or
jmp
mov
pop
cmps
fistp
mov
icebp
int3
pop
loope
inc
cmps
pop
scas
loopne
xchg
popa
push
cmp
mov
std
push
pop
mov
mov
dec
pop
mov
xor
inc
add
pop
es
test
ror
pop
inc
jmp
lock
jge
fstp
in
dec
push
push
jnp
adc
movs
inc
ja
xchg
cmps
push
stc
lock
lods
dec
adc
and
into
ret
xchg
xlat
movs
sub
(bad)
rcr
out
int
pop
push
mov
scas
cmp
dec
xor
pop
(bad)
sbb
rcl
xor
add
cli
idiv
test
or
data16
in
jno
std
or
cmp
pop
ffree
sbb
(bad)
mov
sbb
hlt
jo
pop
or
pop
inc
cmp
pop
cli
ja
fdivr
adc
cwde
push
mov
(bad)
(bad)
dec
push
leave
enter
mov
cmc
jge
fnstcw
inc
lods
cdq
repz
mov
add
clc
fdivr
stos
inc
sti
or
inc
sbb
push
je
lods
test
out
pop
outs
mov
adc
pop
aaa
pusha
dec
add
sar
or
mov
imul
ss
imul
jmp
aaa
div
mov
xchg
mov
xchg
mov
push
pushf
cmp
lea
adc
jp
test
push
imul
push
push
gs
xchg
loop
cmc
sahf
popa
inc
gs
popf
pop
adc
push
js
xor
retf
jle
jae
cmp
adc
dec
fdiv
xor
cmp
cmc
rcr
shl
sub
jb
(bad)
into
pusha
ja
shl
inc
fucom
mov
inc
adc
mov
jmp
pop
adc
mov
out
in
lahf
ss
fs
sub
popf
or
sbb
outs
jge
inc
scas
pop
iret
sbb
rol
(bad)
adc
inc
fistp
cdq
mov
shl
nop
xlat
jb
bound
add
div
cmp
jmp
sahf
movs
mov
inc
jg
jnp
test
cmp
ds
dec
inc
add
int
cli
sub
sbb
push
enter
add
pushf
mov
fsubr
cmc
xlat
dec
mov
and
dec
les
xor
popf
xchg
es
dec
cmp
movs
sub
fsubr
in
(bad)
cmp
adc
sbb
inc
mov
pop
stos
and
mov
jne
inc
mov
add
sbb
div
enter
mov
xor
adc
ds
add
imul
mov
mov
push
or
push
push
xchg
ficom
test
or
mov
arpl
ret
mov
xor
test
pop
or
ins
mov
sti
jb
hlt
jo
pushf
movs
pop
rcr
pusha
pop
xor
cwde
pop
imul
jne
retf
icebp
push
loop
mov
popf
ins
xchg
xchg
push
and
and
bound
jae
push
fld
pusha
inc
push
or
test
fdiv
ss
add
arpl
mov
mov
mov
call
xor
ret
pop
or
mov
ror
sbb
pop
repz
mov
xor
fisubr
cwde
jl
in
mov
and
aaa
cmps
mov
push
push
iret
mov
cs
xchg
mov
and
and
and
shl
sti
pop
push
cmp
retf
mov
(bad)
in
pop
int3
adc
inc
xor
push
mov
ins
jmp
test
scas
lock
fnsave
call
out
lds
adc
dec
add
and
xor
push
test
mov
push
pop
pushf
push
mov
jg
outs
push
mov
shl
adc
pop
push
pop
das
jo
stos
push
loopne
dec
xor
into
stos
in
sub
sbb
inc
shr
push
xchg
mov
shr
dec
mov
jo
sar
xor
getsec
scas
xor
outs
mov
cli
cmp
(bad)
ds
aad
pop
sbb
repnz
pushf
xchg
movs
jg
imul
movs
mov
mul
ror
sbb
dec
pop
clc
lock
imul
loope
sbb
daa
adc
hlt
mov
pop
out
out
mov
iret
bound
movs
cmps
lds
je
out
(bad)
jmp
sub
call
icebp
outs
into
repnz
mov
cmc
cmc
pop
inc
std
jns
jecxz
ja
ret
int3
imul
cmp
int3
cmp
xchg
pop
(bad)
das
gs
inc
cmp
mov
inc
repnz
pop
or
sbb
out
cdq
lock
imul
ja
fwait
in
stos
jl
add
lahf
adc
sbb
sbb
or
cmps
loopne
inc
test
call
xor
retf
sub
xor
cmp
mov
mov
cmps
sti
cdq
stc
mov
icebp
rol
test
ret
mov
fisttp
inc
push
or
xchg
mov
cwde
icebp
mov
pushf
inc
data16
fwait
out
and
sbb
xchg
ds
mov
or
and
test
pop
out
add
js
jno
pop
pop
jmp
je
cmp
pop
pop
fwait
loop
out
xor
test
ror
out
ret
out
jp
jp
xor
fist
aad
adc
(bad)
inc
or
inc
sub
and
sub
loopne
retf
mul
in
test
mov
add
xlat
lock
pop
cmp
imul
mov
dec
dec
ret
sbb
pop
fcmovnu
movs
bound
pop
aas
cmp
mov
mov
rcl
add
out
adc
add
mov
mov
add
rcr
repnz
adc
out
fidivr
fsubr
sbb
fnstsw
nop
div
in
push
mov
clc
dec
dec
in
test
shl
and
xor
(bad)
jmp
ret
je
sbb
mov
loope
mov
mov
jle
inc
push
xlat
(bad)
call
mov
loopne
or
xor
in
out
nop
xchg
test
rcr
fimul
cwde
test
test
ficom
xchg
xchg
enter
mov
and
int
cld
xchg
or
jg
mov
cmps
sbb
jnp
adc
fisttp
lods
xlat
push
push
js
rcl
sbb
inc
test
sti
sbb
inc
dec
shl
dec
jns
adc
pop
jp
dec
lods
lods
mov
in
sbb
and
lock
push
push
xor
pop
adc
push
xchg
cmp
pop
dec
mov
mov
xor
mov
jl
fimul
jge
xchg
add
lahf
pusha
cmp
movs
out
scas
mov
(bad)
loopne
dec
and
int
sbb
int3
cmp
outs
dec
cli
cs
in
xor
jp
fucomi
pop
ins
mov
xor
and
sub
cmp
pop
sbb
hlt
mov
stos
or
push
mov
fild
push
push
mov
sub
shl
jne
jnp
jmp
(bad)
int
and
jmp
push
dec
and
xchg
xor
std
ds
ret
popf
cli
jno
cmp
cmp
cld
shl
inc
and
sahf
nop
cmp
jp
int
pop
or
gs
loopne
stos
test
fs
xlat
mov
ficomp
outs
sahf
add
out
fdivp
clc
call
jge
or
call
jae
arpl
sbb
push
sahf
clc
xlat
mov
dec
xchg
lds
call
movs
or
outs
sbb
mov
(bad)
xor
cmc
jle
add
mov
dec
jno
xchg
in
repz
cmp
push
pop
jbe
arpl
adc
fisttp
jae
cwde
cmps
fsub
inc
loop
fs
sti
jl
pop
rcl
mov
lods
es
and
dec
iret
and
or
or
push
or
rcl
xor
xchg
daa
mov
fldcw
int3
ss
ret
test
sub
jg
(bad)
xor
adc
aaa
aad
mov
sti
cli
out
mov
jl
(bad)
xlat
out
out
test
xor
dec
jge
outs
mov
jge
jmp
jae
pusha
dec
add
sbb
mov
jnp
je
pushf
(bad)
and
push
mov
outs
xor
jmp
in
cdq
scas
mov
bound
or
call
adc
and
lds
cld
nop
sub
jae
iret
inc
lsl
push
shr
jmp
daa
call
dec
cwde
aad
jp
into
xor
aam
inc
inc
xlat
cld
loope
(bad)
imul
and
pop
pop
xchg
daa
xor
fwait
inc
sahf
dec
mov
add
push
pop
(bad)
jmp
cmp
xor
daa
xor
sahf
add
std
(bad)
rol
mov
pusha
(bad)
push
mov
or
push
pop
aad
mov
loop
xchg
adc
fldenv
in
(bad)
dec
add
pop
pop
outs
fidiv
mov
movs
pusha
push
loopne
dec
rcl
clc
push
adc
xchg
cmp
lods
and
adc
je
ds
push
js
mov
stc
sub
cli
addr16
inc
mov
movs
repnz
sar
arpl
fidiv
mov
and
adc
add
leave
and
movs
or
test
call
stos
(bad)
dec
adc
dec
fld
xor
mov
mov
ins
mov
pop
call
add
jae
add
cmps
arpl
stos
jecxz
data16
int
ins
dec
push
ds
sub
jne
das
jnp
lahf
or
pop
pop
(bad)
outs
xor
test
(bad)
and
fcom
stos
lock
dec
sub
jp
movs
stc
mov
dec
push
cmp
ss
mov
enter
mov
outs
cmps
movs
and
addr16
sbb
into
xor
icebp
sbb
fnstsw
sbb
fidiv
inc
pop
adc
mov
jecxz
push
add
jg
inc
add
jns
fadd
adc
sub
loope
cmp
dec
cdq
outs
test
jnp
aad
sbb
ds
jmp
dec
mov
dec
aad
shl
and
lock
int
data16
dec
push
pop
xchg
fisttp
shl
add
clc
push
mov
cwde
and
mov
out
add
mov
xor
mov
mov
dec
cdq
inc
popa
les
or
mov
or
inc
adc
xchg
jle
push
and
adc
int3
and
mov
stos
jb
retf
neg
cmp
dec
dec
mov
push
push
or
fidivr
pop
pop
mov
push
scas
ret
dec
aaa
xchg
lahf
sbb
dec
popa
cmps
cmp
dec
ss
mov
das
or
add
lea
pop
repz
dec
(bad)
aam
cli
xor
jne
push
sbb
cmps
pop
mov
mov
cmps
iret
adc
inc
mov
add
enter
cli
sub
xchg
nop
mov
push
sbb
sbb
mov
xchg
xchg
(bad)
cmp
out
sub
xor
retf
daa
int3
dec
cmc
xor
xchg
(bad)
mov
and
hlt
pop
mov
jmp
or
xor
xor
sub
lods
and
pop
into
sbb
arpl
std
sti
(bad)
out
xor
jb
aad
ss
icebp
jmp
jp
cmp
adc
out
jnp
in
pop
js
cld
lds
cs
mov
aas
inc
dec
mov
test
fdivr
and
test
xchg
jge
inc
aas
mov
outs
pop
imul
sbb
and
pusha
jmp
scas
je
call
ror
rol
add
dec
stos
lods
jle
mov
es
add
lods
push
jmp
jge
add
push
js
push
dec
dec
xlat
fild
shl
mov
cmps
push
sbb
inc
cwde
repz
outs
jbe
loope
retf
xlat
mov
add
jg
mov
pop
inc
sbb
push
call
repnz
xchg
adc
add
fsub
pop
xchg
movs
stc
dec
mov
push
shl
push
movs
sub
into
dec
test
sbb
(bad)
out
pusha
cmp
dec
or
sub
ins
enter
mov
pop
cli
out
lods
test
mov
fadd
jl
scas
dec
ret
movs
sbb
adc
sti
push
test
cmp
imul
or
mov
xor
push
or
fmulp
push
xchg
(bad)
mov
mov
int3
cmp
mov
xor
mov
push
outs
dec
sbb
fisub
(bad)
push
mov
icebp
mov
inc
call
(bad)
loope
mov
scas
nop
sbb
in
enter
push
mov
stos
into
(bad)
cmp
fisttp
sbb
inc
add
push
shl
retf
jp
mov
mov
dec
cmp
out
sar
dec
sub
aas
lea
sub
daa
and
imul
mov
jnp
jno
sbb
ss
mov
loop
mov
mov
xor
xor
ret
inc
ins
cmc
push
inc
popa
std
cld
ror
mov
adc
ja
and
adc
mov
push
in
lock
xchg
push
aaa
add
mov
clc
outs
loopne
adc
aam
xor
rcr
mov
jbe
jp
clc
or
xor
add
cwde
clc
xor
into
ja
jbe
push
or
loop
test
in
dec
int
test
xchg
pop
xrelease
ret
and
addr16
(bad)
aas
loope
ins
ss
hlt
pop
stc
push
rol
mov
mov
push
sbb
lahf
jns
add
mul
cmp
or
shr
mov
jbe
xor
(bad)
das
dec
inc
icebp
sub
mov
inc
ret
fcom
pop
mov
jecxz
cwde
sbb
mov
xor
in
int
adc
fs
or
sub
and
out
jmp
scas
rcl
scas
repz
jb
mov
shr
mov
pushf
xchg
dec
xchg
mov
cwde
mov
es
push
out
repnz
jnp
adc
xor
fistp
jmp
fwait
cli
call
cli
and
leave
fwait
push
pop
lock
loopne
push
add
popf
inc
jl
mov
add
outs
es
push
std
gs
push
mov
add
(bad)
cdq
cwde
sub
sbb
cmp
push
add
push
push
out
push
sbb
fdivr
xor
dec
jns
inc
mov
and
push
sub
xchg
mov
inc
push
retf
add
mov
add
or
test
shr
(bad)
(bad)
fistp
cdq
dec
inc
ss
lods
dec
add
xchg
iret
xchg
mov
push
mov
pop
icebp
pop
pop
push
mov
sub
pop
mov
std
xor
sbb
or
(bad)
push
aaa
loopne
ins
xor
cmp
xlat
push
adc
mov
mov
dec
or
nop
sub
outs
and
push
outs
sti
mov
xchg
aaa
int3
in
ins
gs
call
out
xchg
pop
pop
sub
jle
push
int3
mov
(bad)
adc
push
and
shl
movs
jo
in
mov
add
push
mov
std
icebp
jnp
movs
push
in
repz
and
push
daa
push
dec
sbb
jbe
or
mov
mov
jle
or
outs
bound
pop
jo
sub
dec
or
mov
adc
sub
and
lods
xchg
(bad)
retf
push
or
sbb
or
jmp
jecxz
loope
neg
mov
jbe
cmp
mov
sbb
mov
(bad)
jmp
cmp
(bad)
mov
pop
inc
movs
ret
fwait
das
mov
dec
(bad)
jno
xchg
lods
inc
push
ret
out
inc
or
and
loop
push
add
mov
popa
shl
push
xor
shl
jbe
mov
and
cli
mov
mov
mov
and
pop
dec
ja
cs
xor
loop
sar
mov
test
pop
in
and
xlat
test
push
sbb
sub
fdivr
arpl
jmp
jl
adc
pop
outs
out
push
dec
xor
xchg
iret
stc
das
dec
inc
retf
mov
pop
stos
fsub
push
xchg
push
sbb
xchg
pop
ds
outs
xlat
enter
jl
stos
sub
or
repz
sub
and
jmp
lds
sub
sub
push
(bad)
sahf
inc
jle
lahf
xchg
jl
addr16
xor
pop
arpl
mov
mov
enter
lock
push
or
shld
adc
inc
das
in
lds
fisttp
dec
lock
data16
jo
rol
daa
xor
sub
stos
out
mov
out
out
push
xchg
or
les
xchg
mov
test
in
fistp
iret
fiadd
js
add
adc
add
add
inc
inc
call
cmp
imul
pop
int
pop
add
into
dec
(bad)
jb
enter
cmps
and
jecxz
nop
and
jne
fnstenv
movs
and
mov
xor
outs
icebp
sub
mov
in
(bad)
mov
dec
push
cmp
adc
scas
and
repnz
mov
repz
push
out
ins
pop
lea
jmp
and
fbstp
pop
cmp
mov
aaa
bound
test
lock
pop
stos
fdivp
adc
fidiv
lods
leave
jle
or
push
hlt
cmc
add
pop
adc
lock
fdivr
into
pop
cmps
aas
adc
iret
jecxz
rcl
and
pop
push
fst
jg
mov
test
jne
mov
daa
dec
pop
cmp
pusha
fsub
sahf
(bad)
js
add
pop
mov
popf
dec
xchg
push
mov
dec
adc
pop
cwde
jl
inc
aas
xor
sbb
mov
icebp
mov
(bad)
sti
mov
or
retf
icebp
mov
push
retf
dec
add
cs
add
xchg
inc
or
jp
xchg
mov
ja
jns
add
push
mov
cmp
pusha
cli
push
call
daa
daa
inc
cmp
inc
and
out
movs
pop
push
mov
mov
and
retf
retf
mov
cs
or
outs
aas
idiv
stos
pushf
push
ds
loope
mov
in
fiadd
jne
(bad)
imul
jo
mov
dec
xchg
pop
out
gs
movs
pop
mov
rcl
test
(bad)
dec
mov
xchg
inc
loopne
dec
or
xor
daa
retf
cli
add
mov
and
push
pop
sub
sub
add
inc
sti
or
inc
test
xlat
xchg
mov
xor
dec
mov
xor
imul
idiv
pop
inc
mov
xlat
gs
mov
aas
add
pop
loopne
imul
out
mov
cmp
std
in
pop
xlat
push
mov
mov
mov
pop
out
pop
mov
ins
imul
popa
or
div
mov
fwait
mov
out
inc
es
jnp
lds
push
adc
(bad)
gs
mov
out
pop
ja
xchg
dec
fs
mov
mov
xor
mov
xor
mov
inc
dec
hlt
and
push
and
cmp
movs
and
mov
popa
test
or
and
in
sub
loop
xchg
(bad)
fldcw
jns
mov
rcl
cs
std
inc
mov
data16
cmp
cmp
push
mov
(bad)
adc
movs
popf
je
xor
test
scas
mov
lock
xor
out
lods
and
sbb
shr
xor
ins
(bad)
jmp
loopne
jl
int
(bad)
sbb
fmul
int
or
mov
jle
and
hlt
add
pop
out
(bad)
push
sub
xchg
mov
pop
and
mov
sbb
(bad)
neg
add
shl
das
push
mov
add
sbb
inc
push
sbb
push
add
pop
jmp
push
ins
pop
push
loopne
popf
mov
js
jne
mov
xor
clc
adc
nop
and
xor
rol
dec
sti
mov
retf
sbb
or
int3
mov
mov
xchg
mov
imul
mov
lea
jmp
and
mov
jg
fimul
aas
xlat
mov
xchg
int3
(bad)
fistp
cmp
pusha
cli
jecxz
adc
dec
imul
sub
inc
and
jmp
mov
inc
test
rol
ss
call
ss
addr16
sub
xor
les
cmp
loope
rol
sahf
inc
stos
inc
retf
es
mov
test
jg
cmp
or
adc
scas
mov
test
stos
mov
jne
stc
arpl
pop
dec
mov
clc
xchg
pop
xchg
jo
(bad)
call
js
mov
dec
jmp
jae
aam
arpl
jmp
mov
inc
fprem1
and
cmp
out
sub
cmp
cmps
out
call
cwde
pop
sub
ins
cmp
jmp
scas
mov
hlt
cli
mul
jb
(bad)
mov
hlt
mov
sbb
push
test
ins
mov
(bad)
pop
sbb
pop
push
xchg
xor
iret
ins
mov
jge
mov
adc
shl
xor
sbb
sar
jmp
test
xor
jb
pop
cmp
sbb
mov
mov
push
mov
xchg
add
cmc
js
mov
xor
cmp
sbb
ss
inc
xor
push
add
shl
sbb
mov
scas
adc
(bad)
jno
call
jp
push
add
ja
je
mov
cmp
dec
repz
lea
add
popf
pop
and
pop
les
and
pop
and
(bad)
sahf
loope
out
in
mov
pop
pop
iret
push
adc
imul
jp
cmp
push
jne
adc
adc
inc
jge
mov
xor
ss
loop
popf
xor
jge
dec
xchg
add
mov
(bad)
cmp
xor
xor
mov
and
rol
sub
push
xlat
retf
sbb
sti
cmps
enter
and
loope
xchg
daa
int
dec
xchg
pop
jbe
retf
mov
mov
aas
into
mov
adc
in
mov
lds
fmul
jae
mov
or
ss
jb
div
repz
adc
int
cdq
xchg
cdq
aaa
loopne
push
jg
jmp
or
adc
test
cdq
out
inc
add
cmp
clc
mov
stc
and
xchg
fs
cwde
jmp
fisttp
mov
ss
pop
inc
fisubr
lds
mov
imul
and
adc
dec
clc
repz
jae
mov
push
movs
jmp
iret
add
adc
shr
mov
or
(bad)
test
hlt
in
movs
mov
aad
cmp
stos
adc
push
cmp
hlt
imul
xor
xchg
aad
pop
cdq
sub
into
sti
pusha
or
or
sbb
pop
dec
cmps
or
xor
icebp
cmp
pop
jae
add
mov
mov
jo
popa
test
out
cmp
or
out
cmp
into
mov
fcmovb
cmps
mov
jmp
xchg
into
loop
xchg
out
arpl
or
test
sti
lds
or
imul
push
pushf
daa
into
ins
mov
xchg
jne
mov
mov
jecxz
adc
ret
fimul
scas
push
cwde
inc
dec
out
jns
test
jbe
adc
loopne
ja
dec
(bad)
daa
test
test
sub
inc
test
ret
or
xor
push
adc
fisttp
sbb
dec
int3
mov
in
rol
out
aam
sub
jb
inc
(bad)
out
fxch
xchg
or
test
cmps
outs
dec
add
(bad)
stos
outs
dec
fisub
repz
rcl
or
mov
retf
sbb
jmp
popa
mov
call
clc
inc
and
mov
fadd
xchg
mov
cmc
sbb
ss
scas
fisttp
push
xchg
push
mov
ror
lods
fdiv
add
movs
xchg
add
idiv
cmp
add
add
(bad)
fdiv
dec
xlat
xchg
fcmovnu
shl
(bad)
loopne
sahf
int3
nop
test
test
aas
cmp
(bad)
xor
xor
xlat
push
cld
add
push
mov
je
bound
leave
add
jmp
out
arpl
inc
lods
fwait
sub
inc
mov
sti
push
lds
dec
repnz
cmps
pop
mov
data16
daa
mov
sbb
lahf
shl
js
mov
rol
cli
stos
fucomi
enter
xor
test
iret
jmp
adc
mov
adc
sub
push
cmp
in
sub
mov
add
nop
xor
fisubr
sbb
and
ret
mov
out
or
leave
xor
call
mov
test
pop
cld
sub
or
clc
mov
cwde
fisttp
lea
not
mov
xlat
call
dec
or
push
pop
pmulhw
les
xchg
xor
adc
or
int3
stos
popa
les
enter
movs
inc
dec
repnz
mov
mov
fwait
push
sub
hlt
mov
xor
inc
mov
mov
popf
retf
retf
shl
push
mov
mov
add
mov
aas
mov
sub
shl
jp
fisubr
xchg
iret
cs
rcl
cwde
sub
lods
add
clc
sar
jae
mov
ficom
(bad)
mov
xchg
pop
pop
loopne
sbb
stos
sbb
adc
inc
dec
mov
test
pop
mov
or
leave
fstp
add
push
rcl
aas
xchg
or
xor
mov
je
cmc
call
push
mov
mov
adc
inc
mov
mov
retf
pop
sbb
pop
pop
(bad)
rcr
jmp
out
fidivr
pop
cmc
jae
dec
adc
push
hlt
ficom
xor
mov
mov
fstp
push
sbb
jge
inc
mov
xor
stos
cmp
push
push
aas
mov
mov
cmp
js
retf
std
dec
ja
xlat
cld
cmp
jno
jbe
sub
clc
pop
mov
loop
xor
je
jge
pushfw
retf
mov
adc
pop
and
xor
popa
pop
ja
pop
push
nop
cmp
loopne
and
jo
push
adc
out
call
imul
loope
ins
inc
and
inc
loop
mov
push
push
fist
ins
push
or
aas
inc
pop
sahf
popa
mov
cdq
jmp
(bad)
outs
pop
cmp
(bad)
pop
xor
mov
dec
sbb
dec
movs
sbb
and
pop
mov
test
fst
loopne
add
mov
xchg
idiv
xor
cmc
xchg
scas
mov
pop
gs
dec
mov
ja
mov
pushf
inc
out
cmp
rcl
add
xor
aad
add
nop
popf
xchg
cmp
iret
sbb
dec
(bad)
(bad)
in
outs
test
jg
cmp
mov
ins
and
int
mov
jge
mov
sub
mov
stc
cmps
fs
pusha
or
aas
(bad)
mov
lds
cmp
push
add
xchg
in
psrad
movs
lahf
lods
jb
test
cli
inc
sahf
and
cmc
(bad)
outs
adc
xchg
or
rcr
in
jo
and
out
xor
aam
in
shl
xor
pop
or
jecxz
loop
dec
neg
jo
pop
and
push
add
ins
cmps
loopne
pop
std
jnp
push
jns
loopne
push
and
pop
das
movs
push
minps
(bad)
jg
jle
sti
in
mov
xor
cwde
adc
cmps
push
rol
dec
(bad)
sub
xor
dec
inc
mov
arpl
xchg
outs
add
or
cmp
dec
inc
sbb
ss
fcmovbe
xchg
dec
mov
jle
mov
and
enter
fild
sbb
xlat
inc
cmp
lods
sub
adc
test
pop
cmp
fs
xchg
push
mov
ins
(bad)
jne
mov
shl
test
push
arpl
adc
scas
jmp
push
repnz
in
call
dec
push
and
mov
(bad)
xchg
in
adc
aas
mov
and
mov
scas
fadd
retf
rcl
jge
ret
data16
mov
and
jmp
outs
pop
out
lahf
mov
or
mov
icebp
inc
mov
jnp
das
stos
(bad)
rep
pop
mov
lods
aas
mov
pop
in
pop
mov
jmp
inc
pop
cmp
(bad)
fwait
xchg
je
adc
out
scas
jae
std
cmp
cdq
in
jns
or
in
adc
loop
push
jl
push
cmp
call
fdivr
inc
xchg
lock
aaa
push
push
mov
mov
fist
call
sbb
fidiv
and
fidivr
bound
jne
pop
jo
js
aam
xor
lock
clc
jbe
enter
ret
fdivr
sub
xor
or
xor
or
pop
dec
cmp
loop
sbb
aad
mov
mov
cld
sub
mov
mov
adc
dec
in
or
imul
cmp
pop
xchg
mov
sbb
add
in
mov
or
dec
and
mov
not
add
lods
cmp
popf
xchg
cmp
add
lahf
cdq
data16
scas
push
test
inc
sub
jp
out
fs
jne
dec
mov
inc
add
jo
in
mov
shr
and
call
mov
retf
xor
data16
in
icebp
pop
and
sbb
jge
(bad)
jbe
cwde
add
sub
mov
xor
lods
push
xor
aas
push
mov
and
lds
sbb
cs
mov
cli
call
push
(bad)
push
sub
mov
pop
out
add
push
iret
cli
out
loopne
pop
mov
pusha
jle
sub
mov
sub
and
cmps
inc
xor
inc
fdivr
add
fs
jns
addr16
or
(bad)
push
jne
fist
pop
daa
je
fs
mov
mov
mov
imul
sti
or
xchg
call
mov
push
int
outs
ins
ss
add
fs
pop
repz
retf
test
mov
jg
rcl
out
cmps
ja
add
cld
cli
imul
mov
add
mov
rcl
and
add
push
fcomp
pop
sti
push
das
rol
outs
xchg
mov
mov
popf
lds
xor
pop
dec
test
in
or
retf
mov
cmp
add
nop
sub
or
rcl
rcr
int
addr16
fxch
mov
xor
test
loop
cmps
mov
call
xor
ja
into
test
in
mov
fucomi
cdq
(bad)
mov
lods
add
dec
push
stos
mov
adc
cmps
ins
cwde
mov
mov
scas
imul
pop
ins
mov
into
int3
add
sub
mov
mov
sub
and
rol
ins
sahf
loop
test
cmp
ins
repnz
xchg
fld
mov
dec
aaa
inc
les
ror
lock
add
push
mov
mov
cmps
div
cmp
imul
sti
or
mov
or
aas
movs
pop
cmp
rcl
(bad)
mov
mov
cli
cmp
outs
call
lds
jnp
outs
mov
adc
jp
icebp
sub
movs
pop
xor
mov
fxch
pop
mov
pop
bound
push
mov
xor
test
lock
in
test
shr
or
xchg
push
cwde
mov
sub
sar
pop
fcomp
push
ficom
jecxz
jbe
add
fwait
mov
sbb
in
add
gs
ds
int
pop
loope
sbb
retf
mov
fadd
adc
xchg
jle
lock
(bad)
mov
(bad)
test
inc
pop
cmc
mov
xchg
ror
into
fwait
retf
or
lds
jmp
jmp
clc
lods
cli
pop
fisubr
inc
jo
mov
add
push
aas
pop
pop
cld
scas
mov
mov
into
or
aaa
pushf
arpl
imul
mov
sti
dec
pusha
loop
cs
fisttp
mov
fisub
adc
in
sar
adc
and
mov
stc
push
dec
push
pushf
cmps
adc
mov
mov
cwde
pop
retf
(bad)
pop
clc
or
fwait
mov
ins
push
out
in
sar
jne
mov
lahf
sar
pop
inc
jp
push
icebp
pop
mov
mov
loopne
cmp
pop
xor
(bad)
or
adc
(bad)
dec
sub
mov
cdq
inc
lahf
dec
xor
cmp
loopne
shl
sbb
inc
pusha
mov
mov
jp
push
sub
add
rcl
cmp
aas
std
data16
(bad)
sbb
jne
xlat
jmp
mov
sar
addr16
dec
cmp
ficom
(bad)
and
int3
xchg
in
fsubp
leave
or
lahf
cwde
add
inc
movs
jae
cmps
jle
hlt
xlat
dec
pop
jl
push
mov
sbb
ins
(bad)
js
cwde
cwde
addr16
dec
jg
mov
shr
(bad)
call
inc
xchg
mov
sub
jns
pop
outs
xor
data16
and
sti
pop
les
imul
dec
test
mov
(bad)
and
fadd
aaa
in
dec
push
mov
jmp
pop
lea
xor
add
arpl
xor
sti
jnp
jnp
je
imul
adc
adc
adc
nop
sbb
mov
push
fcomp
retf
stos
mov
xor
sbb
dec
popf
jl
les
movs
sbb
cs
dec
cmp
pop
das
xor
mov
xor
push
pop
addr16
dec
pop
cmp
scas
inc
les
mov
fimul
jns
fld
or
ja
mov
in
xchg
fdiv
mov
jnp
or
(bad)
xchg
cwde
in
add
call
and
mov
in
pop
leave
lods
scas
inc
pop
push
into
pop
popa
imul
out
push
in
aad
push
mov
imul
aas
into
adc
add
jo
and
shr
cmp
mov
dec
adc
lea
out
cmp
dec
lds
dec
popa
jl
sahf
sbb
add
sub
push
xchg
(bad)
inc
scas
and
mov
ins
test
out
jmp
(bad)
lds
les
gs
outs
or
clc
stos
call
in
cwde
inc
or
mov
fnstenv
inc
mov
jecxz
xor
(bad)
in
push
mov
idiv
xor
in
movs
add
outs
mov
jo
gs
lods
cmp
cs
imul
in
aad
cmps
shl
mulps
movs
inc
jne
test
mov
push
sbb
clc
sar
pushf
push
xchg
sbb
push
or
hlt
dec
sub
mov
in
pop
mov
xchg
pop
(bad)
mov
(bad)
das
xor
and
pop
imul
pop
xor
(bad)
mov
mov
add
jmp
jnp
push
cmc
hlt
lods
dec
(bad)
inc
xor
dec
retf
call
adc
jle
jns
rcl
daa
cmc
mov
pushf
adc
mov
xchg
dec
addr16
and
(bad)
std
xchg
or
ins
add
push
stos
jnp
xchg
inc
mov
(bad)
(bad)
add
retf
into
push
dec
dec
nop
mov
fninit
sahf
nop
sub
or
mov
dec
mov
jg
(bad)
mov
xor
(bad)
cmp
into
movs
jnp
pushf
lock
inc
or
dec
popa
inc
repnz
cdq
sub
cwde
test
imul
es
jae
ret
push
(bad)
push
xchg
icebp
shl
cs
jne
vpabsq
imul
sbb
adc
sub
fidiv
cmps
cld
(bad)
or
movs
repz
push
push
xor
or
mov
jl
sti
push
add
std
sbb
cli
jnp
sub
mov
push
ins
cld
ss
ja
and
movs
lds
xchg
aas
rcl
mov
sub
das
imul
int3
jno
push
xor
jnp
int
mov
pop
cld
dec
popa
cmps
popa
jno
int3
fbstp
pop
movs
test
xor
push
or
and
add
inc
std
pushf
sbb
jbe
cmp
movs
cmps
push
mov
test
out
in
shl
or
inc
leave
mov
inc
dec
lods
dec
or
fidivr
pop
clc
ins
cld
iret
xchg
xchg
(bad)
jnp
pushf
push
and
and
push
sar
imul
dec
ins
in
add
push
pop
inc
mov
aas
pop
jns
xor
dec
jno
and
sbb
ret
(bad)
push
add
and
ret
add
mov
iret
retf
movs
leave
jp
inc
test
jbe
and
adc
and
or
pslld
sub
test
jmp
shr
inc
sub
jmp
add
js
cs
jle
mov
cmp
add
sub
or
adc
adc
xchg
fsubr
cdq
ja
push
clc
data16
push
inc
push
ret
inc
xlat
loop
test
rcr
fisttp
les
retf
cdq
call
leave
imul
out
fbld
shl
jo
test
jge
jmp
pop
scas
shr
adc
ss
or
xchg
leave
add
mov
js
mov
pop
mov
xchg
jo
inc
add
sbb
fistp
lock
out
mov
imul
test
push
mov
pop
add
mov
jmp
add
or
and
out
and
jmp
push
jg
mov
mov
pop
or
sub
(bad)
int3
ins
ins
cmp
pop
mov
int3
mov
xchg
pop
xchg
push
or
inc
sub
add
outs
cmps
add
(bad)
mov
lods
jp
mov
lsl
inc
dec
mov
push
(bad)
push
mov
stc
stos
aas
sub
scas
and
and
sbb
or
sbb
js
call
pop
jmp
fstp
aam
pop
add
or
cmp
cmp
cmp
clc
or
rcl
pop
jge
in
cmp
push
enter
mov
and
mov
and
mov
mov
loop
pop
sub
add
adc
and
mov
sti
mov
inc
xor
cmp
movs
frstor
loop
into
test
push
loopne
lods
push
push
rol
mov
inc
out
sub
es
mov
push
push
sbb
stos
push
and
mov
xchg
call
inc
int
daa
jae
inc
loopne
movs
ins
mov
mov
push
or
pushf
cmp
test
loope
sub
jp
pop
cmp
cs
dec
(bad)
in
es
inc
dec
pop
dec
jmp
xor
xor
mov
imul
test
daa
int3
or
movs
shl
clc
ret
cdq
sub
cli
dec
ja
adc
ins
xchg
cld
shl
lods
sti
daa
test
xor
fwait
sahf
outs
xchg
inc
or
sub
or
call
adc
jns
bnd
aaa
jb
fild
mov
xchg
pop
xchg
dec
mov
mov
popa
rol
push
inc
cli
inc
sub
adc
inc
in
push
xchg
and
test
lds
retf
stos
es
cmp
scas
fbstp
js
xchg
mov
popa
outs
outs
enter
je
and
scas
adc
xor
aas
pop
pop
leave
mov
les
fisub
test
xor
cmp
adc
ror
(bad)
retf
jo
or
add
or
aam
retf
cmp
xchg
xchg
add
jae
or
mov
jmp
push
xlat
js
repz
mov
mov
sub
sub
aas
pop
sbb
inc
or
mov
int
pop
fidivr
mov
loope
add
jae
adc
daa
lea
arpl
push
xchg
pushf
mov
je
mov
adc
arpl
ror
xor
pop
push
aaa
inc
mov
lea
shl
pushf
adc
sbb
not
(bad)
adc
jecxz
add
ret
add
add
push
in
mov
jae
(bad)
and
xchg
xor
test
jp
push
cmp
cmc
xor
cwde
bound
aam
jmp
hlt
(bad)
es
movs
into
lds
xchg
xchg
xor
sub
loopne
sub
push
fbstp
je
stc
and
cmp
aas
call
fldenv
fistp
mov
dec
sbb
adc
in
popf
les
idiv
into
xchg
push
in
stc
sub
mov
mov
add
out
aas
jbe
es
mov
add
add
(bad)
mov
retf
fidiv
xchg
sbb
add
(bad)
xor
in
lods
sub
scas
outs
pop
mov
mov
push
inc
sub
xor
retf
push
inc
sub
jno
mov
inc
push
push
add
retf
cmp
fsub
cmps
lods
in
enter
and
fwait
popf
mov
in
loope
in
mov
sar
scas
jae
repnz
inc
fdiv
push
or
mov
xchg
dec
and
neg
int
in
pushf
sub
lds
test
lods
sti
cmp
stos
or
dec
sbb
jl
lahf
mov
hlt
stos
jmp
cmps
fsubp
pop
out
add
daa
loopne
or
fs
adc
stc
mov
xchg
dec
sub
cli
rcr
cmp
lods
das
icebp
add
ret
mov
sub
sbb
adc
inc
pop
or
jmp
or
pop
bound
mov
idiv
popf
jmp
dec
outs
ret
mov
mov
xor
aaa
xchg
jecxz
fistp
add
lds
xor
pf2id
js
jae
cmp
mov
(bad)
push
clc
mov
call
aaa
sub
jmp
sbb
int3
jecxz
pop
add
pop
push
push
push
fisubr
push
lock
lahf
dec
cmps
imul
and
mov
push
rcr
inc
adc
mov
jb
rol
push
js
lds
add
xchg
jb
popf
add
mov
push
xor
sbb
pop
shr
xor
xchg
mov
arpl
xor
push
scas
(bad)
pop
int
jbe
push
sbb
mov
(bad)
sbb
add
js
fist
mov
clc
fdivr
mov
lock
mov
and
xchg
and
frndint
mov
pop
xor
mov
and
and
mov
inc
xor
lahf
jne
ss
mov
jmp
adc
sbb
jo
addr16
(bad)
mov
(bad)
adc
repz
adc
push
icebp
pop
repnz
cmps
dec
aas
xor
xlat
test
or
adc
out
add
xchg
add
mov
adc
add
xor
inc
ins
leave
imul
inc
daa
movs
and
call
icebp
or
add
lods
or
or
mov
or
addr16
in
gs
xor
mov
inc
adc
call
shl
icebp
adc
fs
inc
adc
daa
dec
push
iret
mov
test
jge
cs
cmp
aaa
ret
dec
fwait
fwait
xchg
lahf
pop
out
adc
jmp
add
test
dec
and
push
pusha
lock
int3
cmps
out
(bad)
loop
imul
mov
and
in
pushf
cmc
outs
mov
mov
test
nop
cmp
sbb
(bad)
mov
jg
xchg
shl
jns
jbe
out
jb
in
push
je
or
push
cmp
push
jno
pop
dec
js
mov
mov
daa
iret
outs
stos
das
jg
jnp
fwait
mov
mov
lods
add
scas
and
ja
int3
jb
xor
sbb
pop
arpl
enter
in
fldcw
fucomi
lods
mov
mov
or
ins
fsub
movs
out
test
ins
rcpps
xor
in
(bad)
sbb
out
out
dec
aam
adc
lods
lahf
jg
(bad)
xchg
in
dec
gs
mov
jae
pop
es
pop
and
out
(bad)
dec
in
mov
push
data16
adc
mov
loope
sbb
push
iret
or
dec
mov
mov
loop
add
jmp
mov
pushf
mov
ins
fld
mov
icebp
mov
(bad)
xlat
ret
cli
rcr
and
cs
lahf
and
inc
xlat
inc
shr
call
into
jg
enter
mov
inc
jns
pop
fnstsw
jge
das
icebp
dec
call
dec
jo
das
ins
test
addr16
leave
dec
xchg
push
scas
mov
stc
mov
mov
outs
clc
xor
retf
rcr
repnz
jb
mov
jle
pop
dec
dec
das
das
cmp
cdq
mov
lds
mov
stos
inc
cld
sub
pop
aaa
ss
enter
arpl
sub
sub
add
adc
push
sub
mov
test
inc
and
jmp
stos
mov
mov
dec
lods
add
sbb
inc
or
sub
loope
push
retf
lahf
and
and
and
int3
jb
pop
aas
inc
dec
mov
and
and
movs
sub
movs
mov
loopne
loope
mov
push
sbb
mov
movs
inc
jmp
je
adc
(bad)
gs
fisub
not
dec
push
mov
nop
outs
or
mov
xor
push
rcl
rcr
fwait
in
inc
xchg
icebp
push
sub
xor
cli
scas
push
clc
adc
aaa
je
inc
leave
pop
ss
ret
sti
std
cmp
inc
mov
push
(bad)
test
jl
test
sbb
mov
mov
aam
xchg
pushf
adc
adc
stc
add
push
mov
cmp
cwde
mov
test
adc
jae
imul
lods
mov
xor
popf
cmp
or
jle
mov
cmp
sbb
test
jle
cs
dec
daa
pop
out
push
shl
(bad)
aaa
pop
sub
push
sub
jp
sbb
sti
js
ficom
fwait
xchg
lods
jbe
out
cdq
pop
(bad)
or
sub
push
ins
push
hlt
sbb
(bad)
in
addr16
aam
sub
(bad)
pop
stos
xchg
and
outs
scas
(bad)
adc
adc
je
mov
or
xchg
scas
adc
sub
sahf
add
dec
lds
inc
cwde
xor
imul
mov
js
pop
lods
push
xchg
pop
add
imul
bound
outs
jns
fidivr
lds
fcomp
xchg
cmp
gs
and
neg
jno
daa
ss
loopne
push
cli
jmp
jl
sahf
sbb
pop
adc
mov
into
xchg
(bad)
aas
push
in
inc
push
adc
stos
sub
imul
imul
dec
aas
mov
jg
popa
popf
bound
pop
mov
jne
(bad)
arpl
call
ret
loopne
sbb
aad
jp
retf
push
and
fild
fwait
mov
das
pop
push
and
(bad)
fucomp
in
xor
pop
mov
sbb
(bad)
call
imul
out
or
sub
mov
movs
pop
and
add
mov
lds
popf
sahf
arpl
js
push
shr
jo
sub
jo
ds
jl
ret
aas
(bad)
or
test
out
jle
aam
add
pop
add
movs
lods
out
sbb
mov
sub
icebp
xor
outs
cs
cmp
cli
stc
aam
xchg
pop
mov
xchg
jne
sti
dec
test
jge
push
adc
ja
and
sahf
push
mov
mov
mov
int
push
icebp
push
adc
cmps
stos
mov
test
mov
fs
js
sbb
div
cdq
cmp
lods
out
xchg
jb
scas
adc
push
xchg
sbb
jl
add
mov
stos
or
jecxz
jns
ret
and
lods
das
and
js
bound
(bad)
enter
jl
mov
sub
popa
sahf
sar
out
and
jo
test
jnp
sahf
mov
movs
shr
popf
stos
cmp
(bad)
sahf
inc
(bad)
dec
cmc
pop
lahf
shl
pop
inc
and
and
pop
or
cld
jle
iret
mov
clc
sbb
pop
aaa
fdivr
xchg
out
pushf
addr16
bound
arpl
pop
or
jae
adc
mov
js
mov
inc
(bad)
dec
mov
jle
mov
mov
cmps
gs
add
add
stos
add
hlt
imul
cmp
or
loope
test
ror
scas
jns
sbb
out
cmp
lds
pop
mov
pop
dec
aam
mov
jg
retf
enter
sub
xchg
push
int
pop
pop
test
mov
push
fstp
dec
icebp
mov
outs
outs
mov
jo
dec
xor
idiv
(bad)
or
mov
xchg
into
in
cmp
stc
pop
xor
and
inc
jecxz
mov
push
jmp
adc
scas
cwde
pop
enter
movs
mov
ret
add
sub
scas
shl
xchg
add
shl
aad
push
ja
pop
pop
mov
aas
pop
test
mov
lahf
jge
add
mov
(bad)
out
or
sub
mov
dec
int
jge
js
adc
mov
movs
test
clc
loope
cmp
mov
stos
fucomp
inc
test
xchg
mov
pop
mov
test
push
pop
icebp
shl
push
call
aaa
xor
es
sub
retf
push
jns
sub
js
adc
sub
xchg
in
test
loop
sub
jns
push
jnp
and
and
call
dec
pop
cmp
dec
ss
out
(bad)
mov
je
add
sbb
adc
add
push
and
pop
cmps
retf
add
mov
int3
add
in
jg
xor
jle
js
pop
inc
adc
xchg
mov
leave
repz
fist
adc
dec
bound
xchg
mov
or
push
call
cmc
xor
sub
dec
idiv
js
xor
in
ficomp
popa
stc
inc
cmps
and
mov
test
pop
pop
xchg
ja
fcmovnu
ja
jl
aam
mov
icebp
inc
fadd
nop
stc
call
lods
jbe
mov
movs
leave
aad
shr
das
inc
scas
push
push
idiv
add
dec
xchg
stc
pop
sub
push
xor
jbe
sub
push
fbld
cmp
pop
dec
dec
dec
push
push
mov
add
aas
outs
out
sbb
or
cs
or
test
adc
inc
inc
in
mov
xchg
(bad)
sahf
sti
xor
cvttps2pi
dec
xchg
jae
jl
adc
cs
cmps
inc
cmc
sbb
dec
out
(bad)
jo
pushf
shl
mov
add
test
cmps
ins
sbb
adc
inc
imul
jno
cld
jmp
dec
mov
push
and
inc
or
sbb
or
jns
call
fsub
jmp
pop
or
loopne
fwait
adc
mov
mov
cmp
out
mov
sub
push
inc
pop
iret
cdq
or
push
jmp
push
cmp
dec
into
(bad)
imul
pusha
retf
es
daa
mov
xchg
mov
dec
push
add
mov
int3
out
mov
repz
stc
xor
push
xchg
cs
stos
mov
cs
test
leave
push
pop
add
sub
jb
mov
adc
stos
fld
jne
repnz
out
inc
pusha
inc
adc
push
xchg
retf
xor
retf
add
xor
mov
pop
inc
jno
out
adc
pop
test
fucom
dec
test
outs
das
jmp
pop
push
mov
cmc
sbb
enter
pop
cdq
std
aad
xchg
dec
cdq
jmp
loop
lds
sub
cmp
popf
fwait
mov
fdivr
push
push
dec
push
jl
jmp
retf
add
test
mov
mov
imul
dec
cld
or
add
dec
bnd
jp
pop
pop
mov
jb
and
jl
out
dec
push
fistp
sub
lahf
outs
and
fs
jnp
fst
and
in
repnz
push
fdiv
lods
sub
and
adc
(bad)
ffreep
jb
pop
xchg
test
jmp
mov
pop
mov
xchg
lods
dec
aaa
loope
add
cs
xor
lock
pop
jno
or
ins
fistp
mov
dec
inc
xchg
xchg
sub
ja
cmp
dec
in
ret
sbb
lods
push
mov
in
adc
mov
xchg
cmc
jne
je
xchg
fdivrp
or
fsubr
pop
pop
nop
and
push
stc
xchg
jmp
jmp
enter
inc
ins
ret
out
xor
rcl
push
and
jg
push
xchg
ret
cmc
mov
push
mov
pop
sbb
dec
out
nop
fidiv
jmp
push
(bad)
mov
in
push
push
lea
(bad)
xor
add
or
jb
jmp
mov
inc
repnz
cmp
xchg
xor
mov
sub
scas
lods
jo
sbb
push
mov
aad
jno
sub
or
add
maskmovq
scas
inc
das
xor
pop
imul
leave
outs
xor
push
push
cli
imul
inc
cmps
fwait
xchg
push
adc
mov
sahf
jp
inc
call
jae
jle
hlt
mov
sbb
inc
repz
movs
fild
pop
les
les
(bad)
shl
cmp
jno
dec
outs
xor
and
clc
sbb
pop
test
out
mov
and
out
inc
mov
addr16
inc
jo
push
push
clc
sub
ret
pop
pop
add
or
add
or
pop
xlat
cmc
push
add
mov
add
out
push
sbb
call
jo
clc
mov
xor
fimul
add
sub
jg
dec
mov
dec
test
rcl
je
inc
lods
fild
inc
xor
xchg
loop
push
inc
mov
mov
mov
repnz
movs
ins
cmps
addr16
push
push
pop
scas
aam
adc
hlt
cmp
adc
cdq
rol
scas
pop
and
in
sub
mov
pop
mov
loope
inc
(bad)
jmp
(bad)
sti
mov
imul
mov
sbb
inc
push
and
das
ds
daa
stos
movs
jg
jle
cmp
(bad)
fwait
xchg
arpl
aad
(bad)
out
adc
jp
jp
xchg
mov
xchg
jb
in
sub
mov
jl
nop
in
mov
daa
adc
adc
mov
test
stos
mov
out
mov
add
mov
bound
jmp
add
loopne
das
sbb
fadd
fnstsw
jmp
dec
jg
xor
mov
push
in
retf
ss
das
into
or
(bad)
pop
sub
sahf
sbb
inc
ins
push
jl
and
xchg
jmp
mov
adc
je
or
jae
fdiv
mov
inc
mov
movs
out
pop
and
(bad)
ds
jge
test
cmps
les
aam
push
adc
adc
fnstcw
loop
call
cmps
test
push
sub
lds
(bad)
iret
js
mov
fadd
sahf
cmp
ds
(bad)
loopne
sbb
mov
dec
out
ins
push
ins
repnz
out
loopne
in
aam
aas
repnz
lods
out
inc
xchg
(bad)
jae
lahf
dec
in
(bad)
xlat
xor
mov
adc
bound
add
lahf
ins
inc
push
repnz
push
mov
xlat
mov
lds
mov
out
sub
test
push
push
xor
push
sbb
xchg
or
rcr
xor
popa
xor
cmp
aam
sub
test
sub
push
imul
jmp
ins
jns
mov
sahf
(bad)
xor
test
ss
clc
shl
ins
int3
add
and
shl
aaa
aaa
out
dec
pop
pop
jmp
gs
retf
adc
scas
add
sbb
stos
les
jmp
and
jl
ins
stc
mov
(bad)
mov
test
sbb
gs
arpl
test
nop
dec
pusha
pushf
jmp
cwde
maskmovq
idiv
inc
iret
xor
lahf
mov
fwait
ret
stos
ss
cmps
mov
sti
mov
jmp
and
jns
push
lock
sub
xchg
les
dec
ss
call
test
mov
ds
or
xchg
inc
add
mov
mov
sub
cli
fnstsw
mov
mov
jo
inc
mov
in
lahf
adc
fmul
es
jge
or
fcmovnu
sbb
cli
mov
xchg
sbb
popa
add
xor
mov
jo
jmp
leave
data16
jne
shl
dec
fimul
ds
and
sub
inc
xor
and
jle
sbb
jle
adc
and
dec
push
sar
pop
dec
scas
jmp
imul
loopne
jo
inc
pop
lods
rcl
ss
in
mov
rol
mov
adc
js
fsubr
div
popa
call
sti
fisttp
jp
add
ss
push
gs
test
mov
add
fwait
cwde
lahf
or
cmp
(bad)
or
mov
into
stc
or
mov
mov
add
xor
(bad)
push
daa
dec
inc
mov
sbb
fild
sbb
dec
sub
fcom
test
or
add
ficom
call
cmp
jae
scas
pop
cmp
cmp
movs
clc
in
repnz
rcr
add
xchg
adc
or
xor
mov
popa
jne
test
pusha
xor
cdq
xor
outs
sar
xchg
outs
or
in
mov
jo
aad
loope
loopne
jle
fistp
loop
inc
xlat
sbb
je
pop
and
(bad)
or
(bad)
xchg
in
mov
xchg
test
xor
jl
cmp
fistp
outs
test
stos
ja
mov
pushf
scas
lahf
mov
xchg
scas
aad
jo
push
retf
mov
or
mov
dec
jb
test
sub
add
cmps
nop
out
ss
int
pop
mov
mov
mov
or
push
jmp
sub
popf
bound
outs
or
sub
push
or
call
mov
xchg
aam
inc
cld
or
push
sar
jmp
xchg
arpl
test
sbb
stos
sbb
and
cwde
inc
sbb
xor
adc
sub
inc
mov
jle
loope
mov
popa
adc
xor
push
and
xchg
inc
fwait
jmp
outs
xlat
jbe
repnz
(bad)
mov
sub
test
jo
ss
mov
pop
mov
sub
push
and
cmps
pop
mov
scas
mov
xor
jle
neg
fild
adc
push
mov
gs
gs
mov
xchg
xor
mov
not
push
fist
or
dec
sub
mov
aas
scas
es
mov
cdq
push
imul
imul
dec
and
xchg
int3
or
add
sbb
sbb
mov
cmp
outs
inc
mov
je
ds
mov
xchg
aas
imul
xchg
mov
cmp
jo
cmp
inc
pop
pop
ret
clc
out
test
div
pop
add
enter
mov
adc
mov
stc
addr16
mov
add
xor
in
jmp
lds
jge
out
test
cwde
xor
mov
ret
jno
push
mov
lea
cli
push
lock
pop
push
pop
adc
add
mov
sbb
push
sbb
out
aad
sub
pop
xchg
out
fisttp
xchg
inc
loopne
stc
jmp
nop
dec
dec
pop
fs
out
or
mov
push
mov
inc
xchg
sub
jno
es
hlt
outs
js
leave
retf
ror
mov
inc
add
stos
(bad)
jno
sbb
xchg
loopne
out
dec
(bad)
mov
sub
add
xchg
retf
inc
push
jp
mov
xor
add
(bad)
add
or
stc
in
and
aas
out
xchg
scas
push
lock
daa
or
mov
fcom
adc
and
(bad)
mov
push
ret
outs
sbb
sbb
inc
cmp
out
xor
sub
mov
dec
shr
jns
rol
rol
dec
pop
sub
push
mov
(bad)
push
jmp
mov
xchg
xchg
shr
repnz
fimul
pop
mov
sub
addr16
mov
mov
test
test
sbb
test
(bad)
retf
(bad)
fdivr
cmp
les
stos
mov
ret
sub
mov
add
nop
jne
adc
sbb
outs
mov
icebp
aam
xor
add
nop
retf
cmp
jge
loop
xchg
scas
lds
(bad)
mov
std
fs
data16
ret
div
mov
cmp
push
pop
in
mov
retf
arpl
push
xchg
xor
dec
mov
es
fstp
mov
add
or
jno
mov
int
or
and
cmps
adc
stc
movs
xchg
std
nop
mov
pushf
mov
(bad)
jne
lds
sbb
cs
pop
int
cmps
test
sti
dec
push
lods
dec
push
mov
imul
outs
loop
mov
push
inc
jmp
mov
js
dec
popa
lds
(bad)
aaa
jg
dec
fcmovu
rol
cmp
cmps
and
jp
mov
sub
add
add
in
icebp
push
jg
loopne
in
cmp
aad
shl
mov
add
inc
sub
(bad)
out
dec
aaa
adc
leave
int3
xor
addr16
xor
sbb
cmc
stos
push
xchg
push
scas
mov
sub
ja
mov
xchg
bnd
pushf
mov
aad
sbb
in
push
fwait
or
dec
dec
aaa
push
into
test
repnz
dec
ficomp
push
and
call
ss
pop
rol
ss
sti
dec
add
sub
enter
mov
cmp
stos
push
push
retf
sti
pop
jne
cmps
push
imul
or
out
xor
xor
mov
addr16
icebp
loope
jl
inc
sub
sahf
ret
rcl
inc
mov
xor
mov
lahf
jae
aaa
mov
pop
rcl
bound
aaa
aad
pop
push
out
mov
or
xchg
sub
test
mov
fnsave
adc
cmp
cmp
lds
adc
dec
sahf
fwait
mov
cmp
lea
ror
jae
cmps
sahf
cwde
mov
(bad)
aaa
arpl
jns
jne
inc
cmp
sub
je
aam
mov
jne
popa
repnz
adc
jne
and
imul
push
imul
or
dec
push
(bad)
cwde
sub
xchg
jae
out
adc
add
dec
xor
mov
enter
inc
or
sub
xchg
adc
movs
sbb
lea
mov
cld
mov
movs
jle
mov
dec
add
sbb
add
pop
sub
(bad)
(bad)
cmp
aaa
je
sbb
ins
jl
sub
cdq
inc
mov
addr16
movs
call
aam
sbb
popa
sub
stos
leave
mov
sub
arpl
xchg
pop
inc
mov
inc
mov
cmp
xchg
das
adc
inc
xchg
enter
bswap
adc
push
aam
out
push
jnp
iret
fsub
loopne
mov
dec
inc
(bad)
push
push
pop
inc
jb
lds
cs
call
lahf
push
dec
scas
xchg
out
dec
mov
sub
scas
pop
sub
and
jge
push
jl
inc
fild
aas
mov
jecxz
in
movs
cwde
mov
mov
not
xor
test
pslld
mov
loop
in
movs
mov
and
or
outs
jnp
lea
mov
push
pushf
xor
popa
xchg
arpl
stc
xchg
dec
stos
xor
push
sub
xor
leave
adc
fisub
pop
sub
add
pop
mov
mov
mov
sub
les
sbb
mov
fisttp
or
into
iret
sti
div
mov
xor
ja
jle
adc
pop
ins
rcl
push
pop
or
lock
or
inc
imul
fwait
xchg
jle
cmp
out
cmps
gs
sbb
bound
push
push
jl
cmp
repz
in
imul
mov
xor
(bad)
mov
push
and
hlt
xchg
adc
cli
cmp
hlt
popf
ins
sar
test
jmp
cld
lea
test
xchg
and
mov
mov
adc
arpl
stos
pop
cmp
(bad)
push
pop
call
add
data16
jmp
adc
xchg
test
and
sar
ret
jb
mov
push
inc
sbb
push
mov
test
jmp
mov
or
push
jle
clc
or
adc
xor
cmps
jo
xor
(bad)
retf
xchg
mov
pop
pop
in
xchg
clc
in
mov
push
mov
mov
pop
or
or
mov
mov
adc
call
xor
and
stos
inc
scas
outs
sbb
and
jl
mov
sbb
outs
loop
mov
(bad)
mov
loopne
add
inc
jecxz
aam
sub
outs
mov
push
cs
movs
scas
fcomp
outs
mov
loop
fcom
mov
daa
test
hlt
adc
(bad)
cld
pusha
jle
scas
cs
or
mov
mov
dec
les
xor
out
dec
in
inc
call
nop
ret
xchg
fdiv
xchg
add
lock
rol
jecxz
xchg
popf
add
add
pop
test
adc
stos
cdq
mov
mov
add
xor
gs
lss
leave
dec
das
pop
ret
test
push
cmp
sti
mov
bound
inc
xor
adc
mov
inc
jecxz
dec
dec
xor
test
das
jmp
data16
scas
jb
add
adc
test
cmp
dec
lods
xor
inc
mov
mov
jge
sub
jns
dec
adc
movs
jo
aad
mov
mov
fcomp
jns
push
int3
and
mov
icebp
stc
mov
bnd
push
xor
dec
icebp
(bad)
int3
pop
pushf
jg
jl
cld
in
loop
sbb
cdq
es
fbld
rcl
sub
or
add
nop
mov
jo
rol
aam
gs
mov
and
or
dec
inc
push
daa
shr
loope
inc
jle
and
je
jmp
cld
fisttp
mov
and
jecxz
call
(bad)
fwait
jae
adc
dec
mov
cmp
addr16
mov
and
xlat
push
add
dec
in
arpl
popa
cmp
jb
ret
dec
fwait
pushf
bnd
push
jns
pop
(bad)
sub
sbb
push
push
jge
mov
sub
loope
pop
or
stc
cmp
xchg
and
adc
fld
mov
mov
cdq
dec
pop
jecxz
cmps
jae
sub
sahf
cmp
jmp
and
add
pop
pop
dec
pop
push
mov
jb
test
cwde
xor
sub
mov
or
and
sahf
sub
mov
dec
fwait
ds
leave
shl
or
sbb
daa
mov
je
inc
test
cmc
call
fwait
call
je
mov
mov
xchg
test
jae
es
fidiv
or
imul
cld
movs
loope
pushf
jo
loope
ins
cmp
in
pop
out
pop
addr16
sub
or
add
(bad)
adc
jmp
repz
push
mov
(bad)
adc
jno
push
mov
push
(bad)
int3
inc
repz
inc
in
shr
lods
mov
(bad)
in
fadd
push
iret
loop
sahf
xchg
jnp
fild
rdtsc
stos
fdivp
cmc
clc
cmp
scas
je
outs
sub
retf
adc
and
push
inc
fadd
mov
js
and
dec
xchg
and
rcl
jb
test
adc
fist
xchg
dec
and
movups
push
shl
sti
ja
jle
cli
sub
mov
push
jmp
mov
fiadd
jecxz
loop
(bad)
call
shr
out
(bad)
fs
shl
pop
std
call
lea
push
dec
scas
sar
aam
in
jno
popf
div
jne
inc
fld
push
cmp
pop
mov
out
popw
and
and
xor
cmp
adc
inc
lahf
popf
mov
ret
mov
jl
mov
nop
inc
mov
mov
sub
xlat
rcr
push
retf
aas
leave
add
sub
fidivr
xchg
call
movs
push
xchg
sub
jns
jge
mov
adc
jp
pop
aas
mov
and
dec
enter
shl
shl
cmp
aas
mov
mov
shl
adc
outs
test
xor
fisubr
cmc
movs
pusha
push
cmps
in
js
mov
(bad)
mov
fstp
or
data16
inc
cmc
pop
je
lods
es
cdq
cvtps2pd
cmp
ret
push
out
push
mov
mov
sub
mov
jp
jge
jle
add
leave
enter
push
xlat
mov
sub
aam
fdiv
push
aad
add
stos
ss
add
leave
and
test
cmps
add
inc
int
and
popf
in
(bad)
imul
shl
mov
mov
push
lds
adc
loopne
test
and
fsub
shl
mov
movlhps
scas
push
mov
or
scas
loopne
bt
inc
pop
rcl
lods
sbb
call
cmps
aad
jne
sub
or
js
add
cs
mov
dec
cmc
ja
push
adc
jne
test
(bad)
test
ins
mov
cmp
cmp
xlat
pop
xchg
add
mov
movs
push
cmp
pop
inc
ins
mov
mov
(bad)
loopne
mov
aad
je
jne
iret
pop
dec
cmp
cmp
mov
inc
clc
jae
inc
dec
dec
popf
cld
mov
(bad)
jnp
aam
push
aaa
xor
int3
mov
dec
and
xor
mov
push
cmp
pop
push
mov
cmp
inc
nop
mov
test
mov
xchg
mov
sbb
or
xchg
loopne
sub
loopne
(bad)
mov
mov
aas
sar
and
lea
cli
xor
test
ins
(bad)
fiadd
cmp
mov
cmp
dec
mov
bound
(bad)
aas
(bad)
popf
sbb
in
outs
add
mov
jmp
ret
sahf
jbe
pop
xchg
lahf
push
fs
ins
shl
jmp
shr
jmp
fild
dec
push
stc
popa
mov
push
out
movs
sti
outs
lods
and
ja
cmp
sbb
xor
xor
push
cmps
adc
cmp
rol
lea
jmp
push
leave
cwde
sub
xor
stc
add
mov
push
and
(bad)
movs
ror
movs
jbe
xchg
mov
sbb
adc
std
add
cmp
enter
cwde
out
rol
mov
lock
pop
cmp
sbb
jne
scas
ss
push
les
ss
aad
js
out
movs
fild
ret
inc
mov
xor
sti
sbb
(bad)
in
lods
mov
inc
imul
and
and
ds
mov
lea
fnstcw
adc
inc
in
push
retf
xor
lahf
xor
out
mov
mov
pop
sbb
pop
dec
(bad)
pop
xlat
test
inc
mov
in
inc
outs
mov
je
std
sbb
gs
loop
cli
mov
aad
jbe
add
pop
mov
out
(bad)
cmp
and
push
call
(bad)
push
xchg
mov
xchg
and
test
outs
add
iret
lea
lea
cli
dec
ror
mov
push
imul
push
sub
sbb
clc
dec
mov
call
popf
mov
mov
jecxz
outs
cli
sub
shr
inc
cmp
lock
add
inc
mov
rol
mov
jge
pop
push
ins
sub
cmps
sti
push
lods
add
inc
jae
dec
call
push
scas
mov
xchg
lods
mov
dec
stc
adc
idiv
mov
sub
loop
gs
xchg
clc
test
pop
or
push
(bad)
mov
mov
mov
mov
mov
pextrw
sahf
cmp
aas
add
xor
sbb
aas
push
repz
inc
push
nop
ret
pusha
sbb
mov
fiadd
loopne
aaa
and
mov
jb
sbb
pop
dec
ins
jns
jle
call
mov
and
fsub
xchg
sub
rol
inc
mov
push
sub
push
idiv
xchg
or
leave
test
ins
lods
call
xchg
inc
mov
in
iret
mov
aaa
int
push
js
es
or
into
xlat
jmp
or
cli
(bad)
xor
in
pushf
mov
push
outs
cdq
push
fisttp
mov
loope
jno
out
ror
ffreep
jns
sbb
dec
ficom
jae
cdq
loope
cmp
jbe
pop
jne
outs
outs
movs
mov
push
cmps
dec
cmp
xchg
(bad)
push
scas
dec
jo
fistp
lea
push
mov
test
(bad)
js
inc
lea
adc
pop
mov
ror
cli
(bad)
popf
dec
fs
ss
dec
push
gs
mov
aad
ret
enter
das
popa
test
scas
(bad)
sub
fs
scas
ss
xor
xchg
sub
bound
jno
aaa
jnp
mov
adc
jmp
in
sbb
or
xchg
add
nop
push
sub
sar
arpl
loopne
idiv
jmp
add
mov
add
in
ins
in
data16
ds
repnz
cli
or
adc
add
dec
sbb
jmp
inc
lds
adc
xchg
push
jmp
sbb
cs
pusha
inc
sbb
cmps
cmc
outs
push
fs
xor
shl
add
inc
pushf
mov
xor
ins
out
mov
mov
add
scas
mov
sbb
cmps
js
data16
in
jnp
and
cld
fisub
sbb
arpl
mov
mov
lods
adc
dec
inc
jne
jp
daa
push
shr
js
xchg
sub
jb
adc
cdq
into
jg
test
dec
mov
dec
jl
movs
mov
shl
mov
retf
sahf
or
call
rol
mov
ins
mov
and
ror
(bad)
pop
cmps
sub
pusha
retf
xchg
mov
ret
fs
push
(bad)
popa
pop
pop
xchg
dec
pop
das
jecxz
adc
(bad)
test
int
cs
adc
jno
mov
(bad)
jne
je
fnstcw
jae
sbb
lea
cdq
xchg
ins
fnsave
or
inc
loope
ror
sub
inc
sub
pop
aam
pop
pop
pop
sub
mov
in
(bad)
clc
cmps
adc
mov
or
das
inc
fdiv
cmp
inc
push
adc
push
inc
(bad)
mov
push
scas
add
adc
mov
xor
jns
loope
test
push
mov
sub
adc
fs
push
add
popa
arpl
cs
and
or
mov
or
or
push
xor
push
retf
pop
cli
lods
(bad)
pop
ins
cmps
mov
iret
sub
rol
pushf
xchg
push
(bad)
push
cmps
not
movs
repz
rcr
outs
mov
je
xchg
out
scas
jp
sbb
jl
stc
xor
add
in
bound
lods
push
dec
hlt
mov
xor
lds
adc
xchg
mov
xchg
mov
clts
inc
lahf
xchg
pushf
scas
shl
pop
push
cmp
cwde
or
add
adc
pop
mov
call
inc
mov
mov
jno
sbb
ins
(bad)
mov
sub
inc
xlat
aam
int3
je
jge
jl
scas
add
movs
xor
cmc
out
out
js
jae
outs
mov
cwde
(bad)
inc
inc
loope
es
add
xchg
mov
shl
repnz
jmp
test
pop
add
push
lods
fs
add
iret
xchg
jmp
test
pop
popa
scas
loopne
mov
aam
mov
popf
loopne
mov
dec
sahf
nop
mov
dec
sub
mov
xor
xchg
adc
call
aam
retf
ffree
les
pop
lods
fs
xchg
out
out
push
fsub
test
sbb
and
shr
lods
adc
cs
jno
call
scas
ins
movs
mov
inc
cli
xchg
mov
cs
bound
cmp
in
nop
lds
push
imul
pop
mov
int
pop
pop
or
gs
xchg
pop
call
jbe
sub
pop
stos
jp
idiv
ror
or
mov
stos
pop
ins
inc
cwde
mov
adc
mov
or
scas
jle
mov
dec
es
push
(bad)
aad
call
add
add
(bad)
test
jnp
ja
push
retf
aam
and
(bad)
pushf
stc
dec
pop
enter
pop
adc
cs
push
mov
xor
push
std
and
pop
(bad)
in
mov
sbb
add
add
cwde
fcmovbe
arpl
fisubr
jg
lods
and
mov
or
(bad)
(bad)
add
mov
or
xchg
pop
sbb
xor
outs
(bad)
mov
icebp
and
bound
xor
int3
xor
cdq
scas
lods
xchg
lds
cmc
sub
lods
test
out
mov
ja
add
pop
xor
and
shl
push
and
mov
aam
inc
int3
push
cwde
loopne
xor
or
mov
ficomp
pop
mov
ins
or
aas
ret
les
jnp
push
add
stos
pushf
mov
and
lea
cmp
nop
test
mov
leave
pop
pop
pusha
std
pushf
jns
test
std
jbe
sub
hlt
bound
inc
and
test
in
add
cdq
(bad)
sti
lahf
and
push
retf
ja
pusha
cvtps2pi
xor
mov
push
and
les
jg
and
jmp
jmp
movs
iret
out
jg
out
push
jp
lods
mov
fadd
punpckldq
dec
pop
out
cmp
jmp
xchg
adc
fisttp
jb
jo
ja
xchg
leave
sbb
test
shl
push
movs
dec
call
(bad)
cmp
pop
dec
outs
out
push
retf
cmps
das
test
jo
inc
mov
xor
in
mov
push
inc
sub
das
cmp
jns
scas
cdq
and
fldcw
jmp
loop
inc
mov
xor
scas
pop
jg
retf
ja
clc
mov
loopne
cli
inc
shr
movs
inc
jns
mov
out
(bad)
cmp
clc
add
sbb
fcom
imul
repz
inc
dec
mov
sbb
pop
xchg
mov
cs
sbb
(bad)
adc
lea
sahf
out
int
or
(bad)
jo
hlt
or
mov
or
or
mov
ds
outs
sub
or
mov
sar
iret
(bad)
push
mov
scas
jo
cmp
xor
xchg
dec
mov
call
pusha
xchg
fiadd
pop
ret
das
(bad)
jg
int3
outs
xor
stc
jle
sub
data16
(bad)
leave
xor
xchg
inc
push
arpl
sti
sub
lahf
mov
push
out
jg
adc
outs
outs
push
test
(bad)
enter
adc
inc
jnp
pop
rol
push
stos
popa
rep
push
dec
cmp
aam
and
jle
mov
ds
or
clc
xlat
fsubr
test
sbb
add
pop
pop
data16
lods
push
ins
xor
jno
enter
xchg
pop
out
pop
jecxz
mov
and
arpl
xchg
cmp
add
es
fwait
sub
cld
cmps
test
inc
retf
jno
pop
xchg
test
mov
(bad)
xchg
add
fwait
sbb
add
mov
mov
sub
jo
adc
jle
jne
out
ror
sbb
popa
shl
xchg
xchg
xor
je
pop
jno
mov
mov
mov
jns
push
pop
and
xchg
inc
mov
mov
fstp
out
xor
jno
fst
sbb
xchg
les
xchg
push
call
cmp
and
jno
jo
or
cli
mov
shl
or
xor
jnp
and
xor
imul
xchg
inc
iret
cdq
lea
je
data16
jo
mov
sbb
dec
enter
icebp
jb
cmc
outs
mov
pusha
xchg
(bad)
loopne
das
add
add
or
test
in
les
jge
and
mov
xor
test
(bad)
lds
(bad)
mov
inc
sbb
and
das
daa
fsubrp
ret
push
loopne
push
dec
jmp
mov
leave
test
push
stos
add
cwde
jmp
into
inc
push
popf
jb
pop
inc
dec
(bad)
adc
movs
iret
sub
(bad)
mov
inc
pusha
imul
jne
jns
out
adc
pop
jecxz
inc
or
pop
cmp
xor
dec
dec
div
push
dec
pop
pop
mov
mov
and
mov
mov
outs
cs
jb
sub
or
cmp
aam
push
mov
xchg
push
aam
les
xor
mov
push
xor
call
xchg
inc
fs
outs
jns
jbe
adc
imul
in
add
push
add
xchg
cs
ds
call
mov
pushf
test
repnz
cwde
pop
push
test
(bad)
mov
and
jp
call
ror
add
xor
inc
pusha
xchg
or
mov
mov
adc
cld
retf
jo
xchg
sub
or
pop
mov
mov
or
movs
cmp
jp
jecxz
out
aas
mov
mov
xor
add
mov
ss
xor
pop
ret
adc
je
jl
mov
es
out
in
cli
arpl
ret
adc
les
cld
dec
sub
cmp
dec
jnp
aad
jo
aam
jg
stos
push
inc
sub
(bad)
in
dec
int
cmp
or
push
ss
ins
(bad)
jb
fxch
or
aam
mov
adc
cld
shl
pop
jae
das
and
cdq
pop
jp
jp
int
mov
add
sub
inc
cwde
pop
mov
push
js
sbb
aas
xchg
xchg
cs
in
add
mov
cli
mov
mov
jbe
jno
push
xor
dec
cli
mov
xor
ja
(bad)
ret
cmp
mov
pop
es
mov
lds
mov
mov
les
cwde
adc
dec
and
xchg
cli
pop
sub
call
(bad)
imul
cmp
cli
sbb
imul
lods
push
mov
cmp
and
inc
jns
jg
xchg
(bad)
mov
push
enter
int3
inc
mov
mov
in
loop
fwait
popa
adc
aaa
xchg
pop
rcl
shr
fwait
rol
mov
pop
mov
xor
add
in
jo
sub
aam
sbb
mov
dec
mov
push
(bad)
outs
in
cdq
inc
clc
pop
push
ins
sub
lahf
inc
push
adc
adc
adc
movs
xor
out
mov
xchg
and
sub
shl
std
hlt
and
lods
dec
stos
jecxz
fiadd
pop
pop
je
xchg
cmp
xchg
dec
imul
in
out
sub
(bad)
dec
neg
cmp
out
sahf
jnp
lods
lea
mov
and
fcom
inc
daa
dec
int
enter
loope
gs
(bad)
sbb
or
xchg
sbb
loop
retf
pop
in
mov
ins
and
xchg
pushf
leave
pop
pop
cli
pop
rcl
and
pop
es
or
push
ret
in
enter
popf
sbb
or
pop
fild
push
ja
scas
jae
movs
jg
not
addr16
inc
es
mov
sahf
stos
out
es
retf
sbb
and
sbb
cmps
stos
pop
sbb
in
fcomp
mov
or
lahf
inc
adc
xor
std
imul
pop
push
mov
dec
pop
or
in
add
cdq
pop
mov
(bad)
jle
add
jne
mov
aas
sti
fbld
push
sub
call
nop
cmp
cmc
adc
test
lods
scas
out
rol
lahf
and
xchg
jle
lock
mov
cmp
pop
xlat
fadd
push
push
cmps
fistp
fldcw
mov
repz
xor
and
dec
sbb
push
xor
enter
pop
sbb
popa
(bad)
cmc
(bad)
aam
sbb
cmp
sti
rol
cs
mov
xor
push
inc
leave
lds
outs
outs
pop
cmp
push
test
jecxz
in
cmp
sbb
push
mov
shl
js
pushf
and
into
xor
xchg
adc
or
or
(bad)
fld
push
(bad)
push
cmp
push
js
rol
leave
(bad)
stos
mov
je
rcl
add
cmp
mov
lahf
xor
int
imul
clc
cld
scas
push
add
inc
cmp
in
nop
(bad)
in
stos
fstp
and
sub
mov
mov
pop
gs
mov
retf
cli
sub
fs
sub
sub
jae
and
dec
fsub
xchg
cs
popa
dec
jne
cmps
push
fild
cmp
xor
sbb
xchg
cmp
in
xor
mov
sub
sub
jno
out
sub
lods
cs
jae
mov
push
pop
mov
loop
xor
call
aam
fild
mov
jb
xor
or
dec
jg
inc
cmps
in
call
movs
retf
adc
xor
retf
lahf
pop
dec
je
aaa
test
jmp
inc
sub
je
sbb
cmp
inc
shl
adc
xor
lods
gs
loope
sbb
rcr
mov
jnp
push
idiv
jnp
jns
xor
mov
out
mov
and
mov
cli
mov
in
mov
cmps
mov
jle
and
mov
mov
movs
cwde
jnp
push
lods
mov
or
(bad)
in
cdq
test
bound
xlat
inc
push
push
xor
cdq
iret
mov
sahf
cmp
ins
das
jno
cmps
mov
mov
pop
in
push
fsubr
hlt
shl
dec
cmp
retf
(bad)
fnstenv
popf
data16
retf
xchg
mov
fwait
sbb
xchg
lds
and
arpl
push
inc
mov
js
push
and
or
cmps
rcr
push
mov
cmp
xchg
lods
arpl
xchg
inc
mov
inc
jge
mov
pop
inc
mov
mov
stos
popf
repz
pop
and
mov
lods
repz
out
pop
jmp
add
pop
out
(bad)
mov
mov
in
dec
dec
ds
fstp
ss
adc
jge
aaa
push
nop
ins
imul
and
pop
pushf
retf
enter
xchg
scas
bound
push
movs
cld
xor
mov
jne
lods
add
aaa
cmp
mov
cmp
daa
lea
int3
lods
leave
test
into
shl
push
std
ret
test
cmp
push
cli
inc
hlt
nop
inc
jle
mov
mov
test
clc
pop
loopne
stos
dec
fsubr
in
mov
jmp
repnz
je
in
add
jo
xchg
loope
sbb
add
mov
pusha
hlt
jbe
mov
and
push
dec
shl
in
sub
and
repz
dec
dec
ins
aas
cld
add
pop
ja
gs
scas
bound
cwde
sbb
add
call
push
ret
clc
and
dec
sub
xchg
mov
xchg
push
jg
(bad)
sahf
and
xchg
xor
movs
rcr
(bad)
xor
mov
rol
add
out
adc
arpl
pop
dec
mov
int3
sbb
shl
mov
adc
loopne
ss
lock
scas
jno
mov
or
ret
pop
push
scas
popf
jae
(bad)
test
fdiv
outs
mov
mov
xor
cmp
ror
xchg
rcr
das
gs
pop
movs
dec
(bad)
sub
pop
inc
inc
pop
stos
push
loope
lahf
mov
or
enter
adc
jns
cld
push
xor
inc
retf
jecxz
ficom
inc
mov
ffreep
stos
leave
cmc
popa
pushf
retf
and
add
mov
aam
add
jo
sbb
enter
cdq
and
fldenv
pop
xchg
add
pop
test
cmps
gs
jmp
sbb
inc
pushf
push
cmp
popf
add
xlat
jle
mov
(bad)
xchg
ins
sar
dec
aam
xor
adc
mov
cmp
sub
jae
fisttp
and
call
push
daa
inc
js
repz
pop
inc
and
fisub
adc
cmp
outs
push
cmps
xchg
or
push
in
dec
mov
int
dec
dec
(bad)
cmp
jp
or
mov
add
inc
mov
add
mov
sbb
addr16
ins
bound
les
xor
mov
rcr
out
and
inc
or
leave
lods
add
jns
movs
(bad)
cmp
out
xor
push
and
jmp
cdq
dec
mov
adc
stos
add
nop
ficom
add
sahf
ret
mov
stc
jecxz
xor
std
div
push
out
and
arpl
(bad)
shl
movs
pop
or
jne
push
loope
je
in
test
sahf
adc
mov
xchg
sub
fcmove
pop
xor
bound
fwait
xor
sub
cmp
inc
jbe
and
push
pop
or
(bad)
xor
dec
inc
xchg
lods
ss
dec
push
(bad)
aas
(bad)
xchg
(bad)
mov
mov
(bad)
cli
mov
in
retf
sbb
sti
cmp
sub
in
xor
cmp
jb
xlat
ins
std
add
movs
sbb
push
dec
(bad)
jp
sar
mov
pop
pop
js
shr
jecxz
and
cmp
xchg
popf
and
or
retf
lods
lds
fcom
xlat
and
mov
inc
out
jmp
push
aas
aas
adc
push
stc
sub
cmp
in
popf
or
xchg
push
clc
cs
out
xchg
outs
out
ins
jmp
xchg
adc
in
xchg
cli
cmps
xchg
mov
fcmovbe
test
bound
data16
lahf
xor
sahf
add
jp
sub
dec
cld
fdivp
pop
ja
and
and
inc
repnz
adc
call
leave
inc
(bad)
movs
xor
fs
stc
pop
js
icebp
pop
xchg
mov
mov
adc
xchg
stc
mov
out
movs
and
cli
push
xlat
xor
inc
stos
sub
fwait
lahf
ret
std
imul
jb
sub
(bad)
idiv
hlt
adc
sub
not
popf
outs
mov
loopne
xlat
pop
inc
dec
jb
pop
sbb
gs
xchg
sbb
lock
daa
sbb
cmp
mov
xchg
jmp
adc
aaa
lahf
fs
or
shr
and
push
fmulp
add
int
xor
mov
js
out
shl
inc
mov
jg
ror
dec
cmp
call
(bad)
jne
mov
xor
sub
fiadd
mov
mov
jmp
push
xchg
das
ds
xchg
push
xchg
xchg
ja
mov
and
inc
popf
pop
or
jae
pop
jb
jle
int3
jl
xor
ja
add
mov
jp
das
(bad)
mov
rcr
jo
add
inc
cwde
retf
xor
sar
fbld
pop
imul
or
int
xchg
retf
adc
or
(bad)
xor
dec
pop
jmp
out
jns
pop
mov
add
mov
int
xchg
xchg
div
push
stos
xchg
enter
inc
add
in
ins
add
mov
popa
call
test
xchg
out
loope
popa
xor
(bad)
retf
loope
cmp
and
das
js
sar
shl
out
mov
push
aas
pop
xor
xchg
leave
sahf
in
arpl
aam
push
ss
add
inc
jbe
sub
dec
lods
js
out
sub
cmp
sub
not
pop
dec
call
stos
fisttp
mov
pusha
adc
xchg
(bad)
jp
cwde
pop
mov
cli
or
fistp
mov
push
inc
jbe
xchg
cli
mov
data16
dec
jns
pop
and
push
jl
nop
popf
xchg
mov
clc
fnstsw
out
movs
sub
les
enter
popf
adc
enter
xlat
pop
movs
scas
fisubr
sub
push
pop
(bad)
add
rol
push
adc
sbb
ins
inc
ja
fidiv
xor
jo
push
mov
rcl
pusha
ret
sub
outs
rcr
cld
push
adc
ss
fdiv
push
ss
push
dec
jge
sub
mov
jmp
ins
mov
sub
and
out
sbb
xlat
lods
mov
fs
mov
dec
sbb
xchg
xchg
mov
lea
and
mov
pop
xchg
aaa
in
cmps
inc
push
push
inc
xor
pop
pop
mov
in
cmc
pop
pop
mov
jae
out
xor
fstp
xchg
jne
jne
xchg
(bad)
js
or
(bad)
repz
and
in
call
pop
stos
jmp
dec
xchg
pop
pop
mov
hlt
ffree
pop
push
jmp
cli
test
xlat
or
xchg
daa
adc
mov
xor
vorps
(bad)
mov
pop
push
or
adc
mov
inc
repz
pop
cmp
(bad)
push
xchg
xor
test
call
lods
sbb
iret
popa
fistp
jecxz
mov
pop
xchg
(bad)
rcr
call
and
pop
inc
lahf
rcr
cmp
and
test
iret
lods
cld
cmp
retf
ret
add
mov
mov
xor
imul
pop
dec
dec
imul
xchg
inc
dec
jae
int3
retf
and
pop
sub
sbb
ret
jae
and
neg
inc
cwde
mov
hlt
aam
in
adc
mov
ss
out
mov
fld
jmp
sbb
pop
cmp
jae
cmp
(bad)
mov
out
xchg
add
loop
jp
inc
out
call
shl
sub
pop
pop
in
inc
cmc
push
xchg
outs
scas
imul
pop
pop
inc
das
xchg
cmp
push
(bad)
out
push
jmp
ds
push
mov
mov
mov
addr16
jmp
xor
sub
out
ins
sub
aad
xor
jge
cmp
push
xor
jbe
and
xchg
jae
cmp
xchg
in
sub
movs
xchg
inc
mov
out
push
add
sbb
cmp
mov
rcl
mov
push
xor
inc
sub
push
adc
jl
rcr
stos
pop
dec
mov
push
lahf
jbe
pop
dec
mov
icebp
push
sbb
scas
xchg
ds
out
mov
in
and
sub
xchg
xor
rcr
jns
stc
nop
sbb
ja
mov
dec
cmp
lea
cs
arpl
and
mov
in
jmp
(bad)
cld
icebp
ins
inc
cmp
icebp
push
call
iret
nop
ins
jns
jae
jle
test
and
sbb
mov
imul
popa
sbb
mov
lahf
loopne
mov
movs
pop
lds
out
or
(bad)
out
pop
sub
sbb
call
bound
inc
mov
ja
(bad)
mov
scas
mov
ins
or
inc
fadd
mov
mov
or
fisttp
mov
adc
mov
or
mov
rcl
sti
adc
(bad)
fstp
repnz
ror
retf
or
outs
pop
jmp
dec
mov
or
xchg
data16
lahf
call
mov
mov
out
xchg
bound
sbb
jmp
aam
movs
xchg
xchg
sbb
addr16
lods
sub
dec
xor
sbb
popf
pop
int
test
adc
xor
fmul
mov
mov
sar
enter
sbb
push
push
mov
xlat
push
loope
call
jge
push
and
push
xchg
cli
push
sub
movs
leave
push
pop
mov
push
xchg
add
popa
pushf
bound
mov
xchg
scas
fcom
movs
jecxz
cmp
xchg
int
adc
aam
shl
aad
sar
sbb
jns
test
loope
push
xchg
push
int3
dec
xchg
mov
xchg
js
xor
xor
add
or
fcom
xchg
sub
xchg
iret
out
fisttp
jbe
push
sub
aam
adc
inc
dec
jbe
jnp
adc
out
and
push
shl
retf
in
fsubr
cmps
fldenv
jne
jo
inc
pop
sbb
sbb
cwde
jns
into
jb
stos
int3
arpl
in
and
jo
cwde
push
popa
dec
mov
outs
movs
lods
fsub
mov
xor
pusha
cmp
jle
por
mov
inc
out
push
stc
loope
stos
pop
sahf
add
js
loope
iret
outs
or
or
or
inc
jns
outs
mov
pop
(bad)
fwait
jl
out
xchg
das
pop
sub
mov
push
jmp
clc
sub
ret
mov
int3
jge
ss
pusha
pushf
mov
and
pop
pop
(bad)
push
ja
xlat
jns
jo
push
pop
fistp
cmps
lahf
xchg
lock
clc
mov
int3
xor
ja
push
mov
mov
pop
cmp
mul
add
data16
ret
jo
out
stos
xchg
cmc
cmc
cmps
xor
sbb
cmp
out
lods
cmps
stos
aas
je
mov
ins
cmp
push
ss
sbb
add
mov
test
inc
test
outs
adc
outs
loope
test
cmp
xchg
lea
xchg
sub
xchg
arpl
clc
es
sbb
sub
fwait
outs
cmp
cmc
sub
xchg
mov
xchg
jb
test
push
jle
ss
out
sti
in
jne
loope
cs
out
cmp
popa
add
jmp
aam
mov
lock
sti
jb
test
(bad)
add
adc
outs
sbb
test
fdiv
mov
jmp
inc
push
mov
(bad)
cmp
test
jecxz
mov
test
shl
and
nop
xchg
or
mov
in
jmp
push
or
push
inc
xchg
sbb
shl
adc
std
dec
ds
out
sub
ret
mov
out
lea
or
fidiv
inc
push
sub
dec
mov
mov
jg
xchg
add
pop
mov
ins
push
sbb
pop
(bad)
les
inc
aad
ret
cs
aas
lods
ins
or
mov
adc
fisubr
(bad)
mov
into
push
or
jl
xlat
call
test
jle
cld
sar
or
int3
xchg
pushf
add
test
pop
(bad)
in
cdq
cli
push
and
lods
sbb
std
add
pushf
pop
retf
pop
and
inc
sub
xor
add
xor
pop
nop
pushf
push
gs
cmp
push
out
fstp
and
(bad)
cmp
mov
movs
rcr
pop
scas
cmp
and
dec
push
pop
and
xchg
push
mov
cmp
icebp
cmc
inc
jnp
std
mov
cmp
pop
lock
push
outs
dec
cdq
bound
mov
fdiv
jge
and
popa
mov
mov
xlat
dec
ins
stos
jo
push
add
cmp
jl
or
imul
xor
pop
inc
push
inc
inc
jno
cmp
daa
cmp
push
retf
dec
xchg
cwde
dec
inc
fs
test
loopne
in
sti
xchg
mov
xor
mov
aas
arpl
xor
xchg
xchg
mov
nop
int3
jp
nop
and
(bad)
and
sub
mov
inc
imul
and
sub
xchg
mov
mov
scas
xor
sub
scas
js
leave
xor
retf
clc
scas
hlt
fnstenv
imul
push
and
or
inc
imul
xor
cld
sbb
mov
sbb
lea
movs
in
sub
jb
or
ss
fild
test
jns
add
call
icebp
aaa
push
jno
iret
std
sbb
fwait
sbb
pop
fwait
dec
retf
xor
sbb
or
nop
cs
push
fld
retf
test
and
cs
mov
not
push
pop
cmps
shl
mov
mov
mov
mov
sti
push
out
push
inc
xlat
pop
cmp
(bad)
adc
fs
mov
adc
daa
and
js
mov
and
nop
add
loopne
ret
push
push
(bad)
out
jmp
jb
test
popa
ja
loop
push
test
pop
fisub
ret
and
pop
and
sti
into
jecxz
and
xchg
and
push
cmp
pusha
out
jp
fdivrp
repnz
mov
loop
dec
outs
ret
and
bound
ins
jb
lea
punpcklbw
out
(bad)
pop
or
loope
sub
pop
int3
mov
stos
pmullw
pop
lock
dec
ja
pop
add
and
rcl
retf
popf
cwde
xchg
ins
and
jecxz
loope
pop
push
mov
rol
iret
add
push
xchg
cmp
out
movs
call
out
xchg
mov
sub
pop
imul
jge
jno
cmp
pop
add
sub
in
mov
xchg
retf
neg
xor
pop
ret
or
cld
inc
cmp
in
imul
fs
fisttp
es
cmp
add
cld
icebp
rol
daa
dec
xchg
sub
or
cli
add
push
adc
xchg
add
or
dec
xor
jb
test
movs
xchg
mov
mov
out
xchg
xor
loop
sub
or
xchg
stos
push
fbld
sub
in
adc
sub
xchg
mov
imul
int3
cmp
cmp
dec
pusha
inc
mov
cmp
and
pop
xchg
pop
dec
fs
scas
add
adc
pushf
loope
das
xor
mov
add
in
das
cli
push
mov
mov
dec
(bad)
es
fldcw
aad
repz
in
(bad)
cwde
(bad)
pop
jbe
nop
dec
sahf
jmp
dec
sbb
jnp
and
adc
dec
call
mov
xor
mov
repnz
sar
cmp
mov
pop
or
mov
dec
shr
fadd
add
pop
push
ret
cmps
shl
push
jbe
add
(bad)
arpl
(bad)
mov
js
jl
sub
adc
and
or
lods
stos
push
jge
inc
fstp
xchg
or
arpl
das
and
and
gs
xchg
mov
or
out
xor
cmp
stos
in
js
es
cli
push
into
jle
cmp
pop
mov
pop
mov
dec
jnp
repnz
rcl
mov
loop
shl
shl
pusha
pop
xchg
jnp
adc
push
add
sbb
ror
out
aas
scas
pop
rol
outs
imul
ss
dec
xchg
cmp
jne
inc
xchg
mov
hlt
dec
pusha
enter
xor
push
ror
bound
mov
mov
call
js
out
clc
xor
repz
rol
mov
push
jne
pop
xor
push
xor
outs
lahf
dec
adc
loopne
stos
cmp
dec
push
lahf
ds
data16
push
mov
mov
cwde
jo
jno
xchg
mov
in
cmp
dec
xor
xor
sub
mov
sbb
adc
cwde
mov
stc
(bad)
mov
fbld
les
retf
enter
mov
jg
nop
push
push
in
mov
jbe
stc
mov
mov
add
out
lea
imul
jno
jns
cmps
fidiv
cdq
sahf
add
push
xlat
push
xor
inc
cmp
(bad)
mov
push
cmp
sbb
movs
and
mov
imul
fcom
xchg
not
jns
dec
lds
lds
mov
dec
test
dec
out
js
push
mov
sbb
lods
int
shr
xchg
cmp
jb
cmp
fbstp
(bad)
cmp
mov
out
test
arpl
je
into
repz
ss
test
xchg
(bad)
in
add
adc
add
in
icebp
popa
daa
push
jne
gs
xor
imul
outs
jbe
pop
mov
stos
mov
sub
dec
retf
retf
pop
xchg
mov
fdivr
(bad)
daa
cmp
sub
adc
popa
xchg
inc
imul
cld
xor
mov
add
loopne
mov
jle
push
push
int
enter
add
out
mov
jmp
push
mov
mov
cmp
push
neg
sub
int
push
jp
pop
pop
jo
push
jo
stc
or
or
stos
test
or
leave
mov
push
int3
fstp
js
inc
cs
sub
test
push
push
fistp
mov
dec
in
mov
imul
jne
hlt
fisttp
and
xor
outs
and
repz
loopne
rsqrtps
imul
mov
jle
ins
out
clc
push
adc
or
shl
ja
xchg
popf
xchg
enter
jmp
stos
cli
cmp
cmp
inc
sub
mov
shr
cmp
mov
sub
mov
fisttp
cmc
jo
les
and
cmp
mov
loop
xor
(bad)
dec
enter
ins
adc
cmp
ins
mov
sub
clc
sbb
push
sub
sub
sbb
jno
mov
or
sub
in
fs
sbb
pop
jmp
shl
dec
(bad)
and
push
(bad)
enter
ins
ja
cmc
push
push
icebp
and
cli
dec
data16
movs
sub
sbb
test
lds
es
aaa
pop
in
jge
(bad)
mov
and
jns
mov
fdivr
pop
add
mov
push
(bad)
ror
aam
popa
mov
cmps
lds
sbb
lods
stc
fwait
mov
adc
pop
sub
adc
adc
popf
push
mov
hlt
jge
sub
scas
mov
sub
cdq
test
mov
idiv
xchg
pop
mov
jmp
add
cmps
mov
or
push
jae
pop
aaa
cmc
add
sub
pushf
mov
imul
mov
and
add
xchg
mov
std
pop
hlt
cmp
sbb
mov
jbe
enter
sahf
dec
inc
mov
shr
mov
daa
mov
sbb
mov
mov
rcr
dec
repnz
(bad)
mov
loopne
xor
mov
mov
(bad)
and
jl
ss
(bad)
or
xchg
or
push
jne
loop
or
call
xchg
jb
push
mov
sbb
(bad)
and
or
fadd
add
push
imul
leave
fadd
out
inc
fcom
(bad)
popf
pop
addr16
ret
(bad)
nop
sub
mov
push
jle
stos
pop
jg
inc
inc
fdiv
pop
push
retf
nop
scas
xor
cmp
add
das
mov
add
loope
scas
jbe
sahf
sar
push
in
sub
add
popf
cmp
fnsave
lea
jp
mov
jae
mov
cmp
(bad)
loop
pop
jbe
inc
inc
call
jecxz
movs
fwait
je
rol
in
inc
jo
or
int3
iret
mov
and
add
adc
and
lahf
xchg
jecxz
das
inc
clc
inc
dec
push
fiadd
or
push
add
sbb
mov
sbb
mov
jp
popa
push
pop
xchg
fldpi
ss
outs
pop
lock
scas
push
loop
mov
push
or
arpl
pop
ins
jg
adc
daa
mov
mov
fadd
mov
aaa
push
shl
(bad)
cwde
popf
sti
ins
pop
mov
fsub
ins
jmp
outs
mov
xor
movs
adc
out
movs
push
mov
adc
and
fsubrp
push
push
mov
and
mov
stos
sbb
push
and
ror
mov
mov
int
push
fdivr
and
ret
outs
add
or
das
mov
add
xor
push
int
ja
addr16
jno
mov
xchg
mov
add
shr
cmp
pop
inc
cmp
jb
ss
ror
lock
mov
push
lds
loopne
ss
ror
test
cdq
shl
xchg
and
xor
inc
(bad)
xlat
aad
adc
lock
leave
inc
xchg
sub
lea
inc
lods
sbb
cmc
xor
mov
sbb
xlat
(bad)
jmp
jle
pop
addr16
(bad)
retf
push
adc
movs
clc
lea
retf
fimul
pop
fdiv
gs
xchg
aas
popa
and
cmp
jne
xchg
xchg
push
push
int
imul
sar
lods
into
cmp
add
adc
sbb
test
lods
ds
ds
jb
cmps
stos
fstp
(bad)
popf
test
push
mov
scas
ret
mov
pop
test
or
jns
adc
(bad)
(bad)
jmp
inc
inc
cmp
popa
mov
cmp
aad
sar
push
in
pushf
mov
aas
retf
in
mov
mov
(bad)
out
call
jecxz
lock
mov
xchg
cmp
ret
out
jno
sub
imul
jmp
mov
mov
dec
(bad)
push
mov
rcl
mov
ficomp
mov
cmp
push
xchg
lock
outs
push
mul
mov
addr16
xchg
push
mov
and
mov
pop
call
pusha
xchg
push
mov
add
pop
sub
push
in
into
pop
retf
fimul
fnsave
fwait
aaa
mov
jmp
bound
xchg
fisttp
mov
adc
dec
mov
or
xchg
mov
stc
stos
sub
rcl
cmps
fst
jmp
push
stos
jmp
sub
fdivr
leave
inc
jmp
xor
iret
mov
movs
(bad)
mul
cmp
xor
std
dec
bound
pushf
fsub
inc
js
clc
sti
test
push
bound
add
and
push
mov
popf
pop
jo
cmp
test
arpl
mov
adc
ret
inc
add
cwde
popf
sbb
jmp
fisttp
push
or
jmp
psadbw
sub
sahf
aas
push
or
es
inc
out
in
fwait
cmp
and
fadd
mov
lods
(bad)
loopne
inc
pop
dec
nop
test
mov
dec
mov
dec
enter
pop
sar
push
xor
scas
cmp
pop
mov
add
mov
push
(bad)
repnz
inc
push
scas
jg
xchg
inc
aad
popf
push
inc
stos
or
cli
xchg
cs
jns
and
jp
sbb
xor
sbb
or
cwde
cs
jno
clc
clc
mov
mov
sbb
fcom
inc
adc
lds
adc
ins
mov
jb
mov
scas
call
mov
ins
fdivp
sub
(bad)
ja
cmp
les
inc
retf
jb
out
movs
and
(bad)
(bad)
retf
dec
leave
push
jl
adc
ss
fs
or
pop
lea
fcomp
push
mov
inc
fsub
pusha
mov
cs
fcmovb
push
mov
shl
fdivr
popf
xrelease
and
and
or
fs
sar
push
sub
(bad)
mov
xlat
pop
into
loopne
imul
mov
jne
movs
inc
lds
cdq
iret
cdq
add
retf
jae
fldenv
dec
scas
cdq
cmc
stos
out
ror
test
ror
dec
sbb
loopne
les
cmp
add
xchg
xchg
mov
mov
je
cld
mov
popa
jne
mov
pcmpgtw
cmps
popf
mov
fisttp
push
xor
lds
es
jae
leave
mov
and
cmp
xor
shl
fs
out
xor
mov
pop
(bad)
outs
mov
push
ds
mov
ins
mov
and
push
xchg
out
sbb
aas
pop
inc
pop
push
lods
aas
mov
ins
inc
mov
hlt
jmp
stos
jecxz
popf
jmp
and
mov
mov
pusha
add
(bad)
aam
mov
shl
cli
lock
repz
or
jp
iret
xchg
mov
cwde
sub
mov
call
movs
in
scas
and
xchg
cmp
adc
push
ret
popa
xchg
adc
std
cmp
and
stos
adc
rol
sbb
jl
lods
dec
loopne
ret
movs
rol
mov
push
dec
lock
call
in
mov
jae
dec
xchg
sub
adc
jnp
enter
addr16
loopne
inc
jne
pop
adc
test
and
movs
test
ins
push
das
(bad)
xchg
rcr
or
pop
add
jbe
into
pop
mov
loope
and
out
fwait
adc
pop
in
cld
adc
sub
dec
out
or
xor
inc
lea
shl
cmp
or
xchg
fs
stos
leave
hlt
sbb
pop
imul
mov
inc
retf
out
test
inc
xor
fs
in
add
inc
mov
or
je
int3
lods
and
mov
sub
je
or
lea
lahf
push
scas
sub
xchg
push
out
lahf
sbb
ins
sti
and
aam
push
hlt
ror
dec
pop
xchg
jecxz
stos
add
push
fs
xor
aad
lahf
adc
and
cmp
cmp
mov
bound
or
pop
xor
sbb
inc
cmp
fstp
frstor
hlt
mov
das
mov
das
pop
and
iret
fldcw
ret
ffree
dec
xor
or
cmp
jb
popa
pushfw
jae
retf
cmp
adc
or
push
test
fidivr
or
movs
xor
ja
inc
xchg
or
xlat
mov
dec
inc
pop
mov
stos
and
test
pop
jmp
xlat
lahf
(bad)
mov
(bad)
mov
out
test
mov
div
ret
cmps
popf
cmp
mov
mov
(bad)
hlt
mov
xchg
ret
pop
pop
aaa
(bad)
cmp
enter
mov
cld
out
(bad)
mov
cmp
out
movs
mov
ds
sub
inc
cmp
fld
jb
xchg
jo
mov
out
push
mov
mov
popa
(bad)
(bad)
in
imul
dec
or
add
xchg
cmp
test
push
rcl
lods
movs
sbb
and
mov
xchg
inc
ins
rcr
jno
aas
js
mov
fistp
fdivr
mov
jge
jb
dec
test
mov
test
cmps
pop
xor
enter
and
pop
imul
idiv
stos
jb
lahf
mov
mov
sti
popf
push
add
leave
getsec
out
aam
js
adc
sbb
push
sti
stos
or
jl
xchg
fnstsw
retf
jecxz
call
in
popf
ret
mov
imul
or
leave
sub
movs
pop
add
cmps
dec
lahf
call
push
jne
mov
adc
cmp
(bad)
repnz
xchg
cmc
test
shl
std
rcr
mov
dec
and
xchg
xchg
imul
xor
jno
inc
pop
leave
clc
popa
jae
shl
ins
sti
pop
lods
(bad)
scas
xchg
add
ins
jp
les
push
fcmovu
lahf
mov
sbb
loop
xor
fdecstp
popf
mov
mov
mov
loop
push
mov
cmps
push
jno
push
push
ins
jno
mov
dec
push
jg
les
das
popa
(bad)
test
addr16
mov
cs
mov
adc
cmp
cmp
jmp
jb
shl
xchg
mov
mov
repnz
xchg
(bad)
arpl
ficom
inc
loope
pushf
and
out
outs
leave
jmp
cmp
aad
sub
push
cmps
cmp
test
test
ins
adc
dec
mov
in
test
sar
shr
mov
jbe
cmps
adc
mov
inc
into
adc
(bad)
fist
mov
add
jge
cmp
ins
fidivr
pop
popf
mov
push
or
enter
pop
xor
stos
lods
xor
aad
jnp
scas
mov
sbb
sbb
test
mov
mov
mov
mov
fnstsw
jmp
lods
retf
push
sbb
cmp
movs
add
loopne
in
inc
jb
xor
adc
fst
xor
adc
into
inc
ja
sub
inc
bound
stc
add
test
(bad)
sbb
repnz
shl
iret
push
mov
push
pop
leave
xchg
fwait
sti
cmp
out
scas
jo
fstp
xor
lea
lds
dec
inc
scas
gs
mov
pop
mov
mov
mov
cmps
xor
lea
mov
in
adc
or
push
dec
leave
inc
adc
aaa
cmc
sub
jmp
lock
cmps
jbe
or
or
pop
push
fs
(bad)
mov
sub
outs
dec
push
es
mov
vaddss
enter
ret
sub
or
sar
dec
outs
fstp
ins
jno
scas
leave
mov
ins
xchg
movs
inc
pusha
gs
jmp
popf
xor
mov
shl
retf
xchg
inc
adc
scas
out
mov
hlt
inc
jnp
sbb
push
retf
inc
and
sub
jmp
iret
cmp
mov
rol
es
fcom
push
imul
pop
mov
xchg
add
scas
push
adc
fwait
xor
cmc
jb
jecxz
fistp
sub
fs
retf
into
not
data16
cli
dec
or
ds
iret
jno
test
das
movs
mov
jb
cmp
xchg
repz
adc
call
loopne
xchg
push
push
mov
jecxz
fbld
std
push
add
imul
mov
sbb
in
cmps
arpl
iret
cmps
fdiv
daa
and
mov
pop
pop
test
jp
lock
sbb
cmps
daa
inc
xchg
push
dec
clc
pop
nop
imul
shl
(bad)
(bad)
ror
xor
pop
(bad)
cwde
movs
mov
(bad)
jge
(bad)
in
cwde
addr16
add
movs
jle
jl
mov
cmp
mov
xchg
xor
jmp
aaa
pop
loopne
and
outs
icebp
leave
dec
outs
mov
loopne
stos
out
pop
xchg
pop
mov
sbb
lock
repnz
lock
and
pop
aaa
dec
xor
test
xchg
adc
pop
retf
fld
pop
inc
lods
(bad)
jmp
(bad)
xor
adc
sub
jg
retf
mov
jmp
data16
fidivr
int3
loop
movzx
xchg
xchg
cmps
dec
and
repz
fld
or
shr
hlt
imul
cmp
xor
pop
fs
cmps
clc
into
jge
es
outs
xor
and
leave
cmps
xchg
or
mov
mov
ins
aaa
sub
and
mov
mov
pop
arpl
clc
cs
mov
iret
cmps
add
outs
fs
cmp
or
or
add
loop
scas
lahf
imul
pop
mov
adc
and
or
pop
lods
arpl
push
xchg
out
pop
(bad)
push
or
ins
cmp
pop
movhlps
and
mov
pop
jbe
jp
dec
cmp
(bad)
cli
test
scas
or
mov
push
out
pop
inc
in
or
dec
sahf
retf
inc
inc
sub
js
lahf
aaa
and
jae
sbb
ffree
or
xor
aam
adc
dec
cmps
inc
jb
jns
and
(bad)
(bad)
leave
icebp
xor
jnp
pushf
mov
jns
add
mov
movs
adc
push
js
movs
sbb
and
jns
not
inc
jne
test
and
adc
aam
or
movs
les
das
retf
mov
mov
and
or
inc
cmps
jmp
(bad)
in
or
push
mov
lea
int
and
cli
dec
sbb
sbb
loope
push
in
ret
out
in
mov
mov
fwait
xchg
sub
xchg
jae
mov
and
punpckhdq
sbb
cmp
in
jge
loopne
sbb
test
xchg
lods
arpl
cmp
das
cmp
jae
stc
js
mov
adc
xchg
test
or
jecxz
push
xor
in
add
loope
inc
mov
cmp
mov
hlt
leave
popa
in
ret
fst
mov
pop
cmp
xor
retf
cs
and
inc
push
push
stos
mov
out
fild
cld
jle
or
adc
out
xor
cmp
lods
dec
cmp
dec
aam
pop
push
push
daa
test
mov
xchg
adc
(bad)
stc
jno
popf
xchg
gs
fsub
dec
test
sbb
mov
loopne
cld
(bad)
fld1
pop
movs
adc
movs
iret
sahf
and
or
js
jecxz
rcr
sar
loopne
jno
jle
xchg
pop
sub
ds
adc
dec
pop
test
(bad)
jle
and
pushf
stos
add
xchg
in
clc
dec
out
adc
mov
mov
aam
out
jg
outs
lock
aaa
ret
jmp
dec
mov
gs
sub
rol
add
fs
scas
shr
iret
fwait
add
retf
xor
mov
pusha
imul
out
cs
lahf
pop
test
add
jnp
imul
fdiv
sbb
add
push
movs
sub
xor
das
xchg
add
icebp
iret
lock
mov
and
dec
lods
jae
adc
nop
(bad)
xor
dec
or
or
push
fbld
test
and
ffree
fiadd
dec
sub
sub
mov
out
mov
ja
or
mov
cmp
mov
inc
add
das
ss
in
jg
addr16
jg
lods
mov
hlt
jmp
sbb
pshufw
push
call
retf
sti
sbb
nop
sub
lds
push
adc
mov
sbb
ins
stc
jns
das
je
push
pop
cmps
je
sub
inc
add
add
or
imul
in
push
pop
jl
pop
xchg
fidivr
lea
or
jmp
dec
cli
pop
or
loop
mov
outs
mov
xchg
pop
add
out
sub
mov
cs
out
xor
inc
sbb
ret
cmp
mov
es
out
add
mov
dec
ret
rcl
or
idiv
push
pop
loope
adc
pop
sub
fidiv
sub
fld
mov
sbb
imul
cwde
cli
call
rcl
pop
adc
test
xchg
mov
push
push
adc
or
out
xor
fild
pusha
cld
lock
xor
mov
stc
cmps
call
jno
imul
mov
add
adc
xor
inc
int3
add
retf
jmp
mov
mov
add
fwait
les
cmc
adc
cmp
in
push
in
in
ins
xor
js
aas
daa
jmp
imul
in
ret
fistp
adc
(bad)
mov
popa
push
jns
imul
stc
xchg
mov
fbld
push
(bad)
mov
dec
mov
call
push
adc
cmp
cdq
xchg
imul
sub
cmp
xor
or
out
sbb
xor
mov
fbld
fwait
and
out
push
fsub
cli
shl
sbb
fist
call
stc
lds
cmp
imul
pop
loop
dec
fmul
push
(bad)
cmp
dec
cld
xchg
popf
pop
inc
or
jmp
or
stc
call
loope
pop
push
xchg
adc
in
ss
sub
sbb
retf
mov
loopne
jno
fcom
add
jg
aas
ret
push
icebp
(bad)
ror
and
jbe
cmps
inc
mov
mov
int
(bad)
(bad)
jb
in
aaa
imul
mov
push
cs
pop
mov
push
inc
push
(bad)
xchg
(bad)
cmp
and
mov
adc
leave
call
data16
jae
stc
jg
jno
cmc
xchg
add
add
test
(bad)
stc
push
push
cmps
test
ror
jne
pusha
(bad)
adc
and
(bad)
jmp
(bad)
or
mov
pop
ins
pop
and
or
shl
mov
sub
add
int
bound
xor
jne
test
jecxz
sub
cmp
xchg
sbb
retf
mov
mov
icebp
aam
sbb
mov
in
adc
repnz
ret
jae
dec
movs
push
retf
xchg
loop
dec
mov
sbb
rol
cld
xor
cmps
jns
adc
adc
gs
(bad)
cmp
enter
scas
popf
test
adc
ins
inc
add
lea
sbb
lock
push
sbb
dec
scas
test
pushf
cdq
inc
or
aad
sbb
out
push
mov
sahf
inc
add
stos
aaa
pop
(bad)
fs
iret
(bad)
pushf
xor
shl
imul
cmp
(bad)
mov
add
add
add
xor
inc
xchg
xchg
leave
or
fild
sti
jmp
xchg
or
sbb
test
or
mov
rol
outs
sub
xor
sbb
ret
out
test
push
sub
mov
cmp
dec
mov
lahf
add
call
mov
popa
xor
mov
ret
mov
fimul
inc
ins
loope
(bad)
push
xchg
js
fcom
and
movs
outs
stos
and
cmp
add
mov
ret
jp
xchg
fimul
mov
stc
vpmaddwd
imul
jae
pop
jno
sbb
push
(bad)
cli
(bad)
in
loop
adc
bound
je
(bad)
mov
(bad)
lock
jo
or
mov
enter
jae
jnp
dec
fidivr
mov
ret
sbb
sbb
and
xchg
xchg
xchg
mov
outs
(bad)
cmp
xor
add
cmp
xchg
dec
mov
sub
xor
out
lods
test
pop
add
push
xor
aad
mov
add
xor
cmp
jp
ins
adc
push
jnp
mov
mov
(bad)
movs
idiv
pop
dec
adc
pop
hlt
mov
iret
daa
(bad)
out
lock
ins
mov
inc
lahf
dec
inc
add
mov
push
push
popa
push
dec
aam
mov
sub
outs
jo
dec
(bad)
mov
neg
repnz
sub
ja
xchg
adc
jno
sar
sbb
add
lds
cmps
adc
(bad)
test
sub
add
jnp
sbb
and
sub
or
jle
lods
int
popf
or
jmp
sbb
dec
jg
stc
enter
gs
(bad)
dec
mov
fadd
mov
pop
scas
das
lods
in
int3
and
xor
lods
ret
add
push
or
pop
and
out
dec
mov
icebp
and
sub
outs
sbb
adc
pop
jns
sbb
fs
jae
push
xchg
aas
neg
push
pop
repz
imul
mov
aad
loopne
push
dec
sbb
mov
xor
(bad)
lahf
sbb
mov
inc
pop
push
xor
or
loope
test
ins
cmp
mov
xchg
leave
push
rol
inc
inc
dec
test
xor
inc
push
dec
jle
cmp
adc
clc
mov
xchg
cmp
xchg
repnz
test
dec
pushf
out
xor
into
jno
daa
pusha
dec
jmp
xor
in
cld
loope
movs
xor
test
scas
cmp
push
sub
outs
jb
mov
shl
xor
mov
jle
sbb
pop
cmp
in
ret
sbb
pop
push
stc
inc
stos
pop
stos
rcr
add
shl
push
or
into
cmp
mov
sahf
mov
movs
sub
mov
inc
jns
ror
xor
push
push
sub
jno
mov
xchg
push
add
dec
cs
cs
adc
fs
pop
outs
movs
fldcw
cld
sbb
call
jecxz
out
repnz
mov
push
xchg
rol
jmp
test
lods
movs
inc
mov
xchg
fist
scas
xchg
pop
mov
out
or
add
dec
daa
aas
push
outs
mov
(bad)
icebp
mov
repz
or
xchg
add
inc
int
ja
ds
jae
in
loopne
jecxz
not
pop
in
lods
cmp
aaa
push
ins
sub
sbb
inc
test
sbb
cmc
jnp
jp
mov
sbb
cli
(bad)
test
sbb
adc
mov
mov
int
ins
add
pop
in
loope
pusha
add
clc
ja
jmp
stc
dec
xlat
stc
ror
mov
adc
pushf
cmp
icebp
gs
xchg
and
xor
cmp
mov
push
fdiv
inc
vprotd
xlat
in
pop
inc
call
cmps
clc
aaa
and
jecxz
stos
movs
outs
jmp
push
iret
sbb
mov
retf
cmp
js
inc
sbb
xor
jle
and
popf
xchg
cld
push
push
and
(bad)
mov
mov
push
ins
inc
test
jmp
aad
push
push
jg
into
ins
sbb
pop
dec
push
jp
mov
jl
cmps
inc
ret
push
mov
cmc
fadd
cmp
ret
and
pop
outs
mov
jo
movs
add
mov
pusha
dec
push
xchg
sub
call
into
mov
jne
outs
fld
test
movs
fs
or
in
and
xchg
mov
ret
and
(bad)
pop
or
pop
jns
xchg
mov
xor
xchg
in
and
cmp
sub
test
cwde
dec
xchg
ror
pop
sub
mov
pop
popa
outs
movs
mov
mov
inc
data16
leave
gs
(bad)
jae
lea
ja
xor
cmps
mov
jne
(bad)
lods
push
js
adc
loope
out
inc
movs
push
xchg
test
iret
out
and
(bad)
call
loope
test
aam
sub
dec
push
or
mov
inc
jno
imul
daa
add
test
pop
arpl
int
xor
ins
jge
mov
leave
cmp
lock
pop
fldenv
mov
push
add
hlt
dec
call
aam
mov
pop
sbb
clc
xchg
or
push
xchg
xchg
cwde
jmp
cli
loopne
xchg
rol
xchg
mov
pop
xor
addr16
leave
adc
jl
data16
add
xchg
sub
cmp
jecxz
and
out
mov
je
mov
es
mov
shl
outs
mov
test
lods
cs
outs
outs
jnp
mov
fistp
in
add
or
inc
(bad)
jmp
jle
in
jnp
pop
scas
scas
lods
js
and
repnz
adc
dec
bound
pop
cmps
or
rcl
test
mov
ins
jge
lds
cmp
sub
cdq
shr
and
ffreep
push
mov
dec
scas
cwde
push
jb
cdq
push
push
adc
or
xchg
and
and
fistp
pop
psubsb
xor
les
(bad)
call
mov
mov
push
rcl
inc
jmp
or
or
rcl
pop
cmp
sub
lea
out
and
pop
fsubr
fst
inc
sub
push
xchg
pop
mov
cmps
lahf
lock
jp
push
or
xchg
mov
sub
outs
test
std
and
sbb
fst
cdq
mov
loop
pop
xor
and
xchg
jbe
xchg
mov
and
out
call
sbb
shr
inc
in
push
xchg
dec
shl
push
xor
aam
sub
jo
mov
(bad)
ss
(bad)
adc
loope
lds
fbld
in
lock
xchg
pop
mov
mov
jp
(bad)
mov
mov
push
pop
cld
sub
adc
scas
imul
mov
xchg
jp
mov
or
mov
js
inc
adc
int
jle
movs
xor
xchg
push
std
inc
sub
sbb
repnz
ss
fcmovne
mov
fdivrp
pop
lods
push
scas
je
add
and
jle
stos
and
adc
mov
xlat
mov
ja
inc
scas
fild
imul
mov
adc
test
fiadd
call
xchg
scas
enter
jecxz
xchg
pop
mov
mov
mov
idiv
outs
inc
cmp
mov
mov
mov
add
clc
movs
xor
xor
test
mov
enter
(bad)
inc
in
aaa
mov
pushf
into
mov
cli
inc
dec
and
retf
jb
test
out
ins
nop
and
and
pusha
cmp
add
sub
mov
jge
dec
pop
loop
dec
sti
loopne
or
pop
or
push
std
mov
sub
stc
jne
mov
movzx
cmp
jns
jbe
mov
inc
dec
sbb
(bad)
js
sub
xchg
fucomip
lods
pop
jl
cmp
dec
jmp
adc
lahf
push
adc
ds
ss
ins
test
and
rcr
mov
lahf
ins
dec
push
stos
pop
or
mov
out
out
mov
les
(bad)
adc
nop
jns
or
mov
test
into
mov
jge
mov
jnp
inc
dec
loope
imul
ins
loope
sbb
or
mov
dec
jecxz
loopne
neg
jp
sbb
mov
jb
xor
mov
xlat
mov
jo
dec
jge
dec
loop
cmp
outs
pop
inc
xchg
inc
pop
push
mov
into
hlt
push
aad
rcl
nop
out
arpl
pop
xchg
jae
jnp
shl
or
sbb
jo
in
mov
hlt
cmp
fadd
xchg
add
loop
scas
sbb
(bad)
mov
inc
sub
dec
pop
iret
addr16
scas
adc
mov
add
inc
data16
lds
cmps
dec
mov
inc
add
adc
xchg
fdivr
fld
(bad)
pop
xchg
mov
call
fwait
setb
ja
mov
mov
xlat
push
addr16
mov
(bad)
jbe
in
push
test
push
lds
or
pop
xor
fidivr
iret
aaa
cmp
fiadd
fsubr
out
add
hlt
enter
and
(bad)
cmp
jnp
pop
mov
shr
into
fidivr
fsub
repz
enter
sbb
(bad)
sar
push
hlt
and
lock
lds
test
sub
sbb
loop
js
xchg
stos
inc
out
sub
or
inc
pushf
into
mov
mov
pop
(bad)
icebp
mov
xchg
mov
in
inc
add
cs
mov
jb
ja
or
(bad)
dec
jnp
dec
leave
aas
pop
lea
stos
xchg
es
lahf
fdivr
pop
inc
test
movs
xchg
scas
cmps
in
fiadd
inc
adc
mul
and
iret
outs
sub
movs
cmp
(bad)
les
das
jbe
dec
push
(bad)
pop
or
shl
cmps
fs
mov
cmp
push
xor
push
mov
sahf
(bad)
jp
and
mov
or
test
add
push
nop
inc
enter
lods
retf
jno
rol
shr
lods
jp
out
xchg
xor
outs
fiadd
and
fild
jb
fsubr
mov
sti
mov
jge
adc
jnp
jle
int
dec
mov
(bad)
jl
pop
mov
ds
fucomp
mov
mov
ins
dec
lock
js
arpl
jmp
inc
jae
into
outs
mov
mov
dec
mov
fbstp
push
push
ins
and
outs
pop
ja
(bad)
jg
cmp
lock
mov
sub
(bad)
pop
inc
sub
stos
fsub
jp
push
(bad)
dec
sbb
ret
mov
retf
movs
rcl
pop
xor
mov
jno
xor
or
cmc
icebp
daa
push
jae
cmc
scas
ficomp
aas
popa
movs
xchg
rcl
jmp
sub
(bad)
bnd
dec
jl
push
xchg
leave
adc
sti
mov
dec
and
adc
dec
inc
adc
and
into
ss
cli
xchg
sub
sti
sti
fld
fwait
scas
dec
out
cmps
add
imul
repnz
in
aas
pop
push
push
iret
push
jae
xchg
repz
xchg
push
push
pop
pop
pusha
dec
push
sti
call
mov
pop
cmp
dec
adc
pop
movs
scas
out
mov
jae
out
xor
cmps
fwait
test
rol
sbb
cwde
pusha
jns
fadd
push
nop
jle
test
imul
or
push
mov
inc
add
jg
jne
xchg
and
fisubr
lods
lea
bound
je
enter
pushf
mov
aad
aaa
je
(bad)
loop
add
popa
fsubr
xor
jmp
sbb
jl
adc
shr
pop
pop
sub
lock
add
shl
cmp
cmp
sub
retf
pop
lods
outs
xor
mov
loope
xor
sbb
xchg
scas
loop
xor
fnstcw
and
inc
cmc
sar
int
or
iret
mov
sub
xor
out
push
rcr
pusha
adc
movs
movs
cs
jns
cwde
cmp
cmc
not
dec
arpl
mov
add
in
jns
cmp
inc
jns
adc
mov
fisttp
jle
popa
iret
xchg
imul
inc
jge
xchg
ins
(bad)
push
data16
call
mov
dec
fdivr
js
(bad)
iret
push
and
mov
sbb
pop
cmc
add
ret
pop
mov
call
mov
fldcw
stos
sti
mov
int3
cmp
xchg
call
jp
pop
ds
cmp
ins
sub
add
push
ss
lea
fistp
mov
add
sbb
repnz
pop
add
mov
mov
movs
mov
js
ret
retf
sub
mov
stos
jb
sahf
jno
mov
add
sub
rol
loope
pop
jne
add
arpl
int
mov
mov
icebp
adc
dec
dec
jge
movs
fsubp
jb
or
scas
xor
cs
pop
mul
neg
mov
mov
addr16
xor
out
cmp
jp
xchg
xor
cmp
mov
dec
loop
popf
push
push
pushf
lods
push
test
mov
ret
dec
lds
shr
aad
mov
mov
shr
dec
jae
stos
sbb
cld
mov
popf
ror
push
push
and
inc
push
push
retf
int
enter
xchg
add
add
ret
mov
int
hlt
aaa
pop
inc
pop
xlat
sub
jg
xor
pop
test
jg
push
mov
jne
jne
cld
repz
pop
movs
mov
repz
jmp
jo
and
inc
(bad)
sbb
packuswb
loopne
jecxz
ins
ret
cmc
jg
cmps
call
dec
and
enter
pop
pusha
daa
fwait
mov
pop
inc
repnz
out
inc
rep
shld
jb
pop
inc
jmp
popa
dec
imul
jmp
not
stc
movs
fisttp
mov
xor
lds
imul
std
push
in
adc
aam
ja
int3
sub
mov
mov
int3
idiv
dec
scas
retf
sbb
add
call
jo
or
push
cmp
cmp
ficom
retf
je
fwait
lock
call
dec
or
pushf
ret
and
or
mov
cwde
pop
retf
xor
mov
lods
neg
int3
(bad)
clc
(bad)
xor
enter
lahf
fs
popa
movs
mov
in
sub
adc
ret
ror
jmp
mov
sbb
jmp
mov
add
dec
sub
stc
ins
and
test
cmp
push
lods
mov
int
mov
dec
ret
fnsave
mov
sbb
fsub
pop
mov
fs
or
call
shr
add
sub
test
add
mov
xchg
xor
inc
xchg
out
js
jno
nop
cmc
or
xchg
xlat
sbb
retf
mov
repnz
xor
lock
adc
jmp
adc
out
push
and
test
int3
test
sub
and
lods
inc
mov
sbb
and
adc
or
adc
adc
je
pushf
cmps
jp
mov
inc
fmul
lock
test
in
jb
shl
cmp
xchg
neg
popf
pop
add
or
(bad)
or
sar
mov
pop
in
outs
dec
out
daa
mov
jecxz
pop
mov
cmps
and
mov
loop
cs
test
int3
push
sbb
mov
(bad)
call
cs
dec
jg
ror
aad
sar
(bad)
test
jg
push
call
push
ins
fmulp
mov
sahf
scas
push
hlt
call
outs
adc
add
movs
outs
xchg
rcr
pop
out
adc
call
jbe
cmp
jp
retf
cmps
(bad)
and
sub
outs
imul
mov
sbb
hlt
repz
mov
out
jnp
mov
js
test
mov
in
daa
mov
inc
sub
fnstenv
mov
in
push
inc
cmp
mov
cli
mov
mov
push
shl
pop
and
mov
js
jne
mov
jg
pop
icebp
mov
lods
jle
or
and
adc
mov
jo
clc
mov
inc
aas
popa
jb
arpl
xor
pop
les
aaa
aam
pop
adc
retf
imul
push
fld
pop
mov
ror
mov
daa
or
loopne
shr
jno
jae
inc
nop
add
test
inc
dec
xor
sub
mov
into
dec
ds
mov
sbb
and
sti
es
xchg
jne
fisub
adc
xchg
pop
sbb
out
das
cmps
add
movs
int3
call
fdivr
xchg
sbb
push
jmp
addr16
pop
iret
mov
in
ret
arpl
dec
cmps
shr
sbb
and
cld
int3
repnz
pop
pop
xchg
jmp
arpl
jmp
ror
cdq
jo
mov
inc
test
gs
outs
jnp
sbb
adc
outs
test
xchg
sbb
lock
pop
dec
stos
out
ror
push
call
push
sbb
frstor
in
push
mov
(bad)
fimul
dec
xchg
repz
rcl
add
je
xchg
pushf
lahf
push
aam
sahf
rcr
add
xor
test
inc
mov
jbe
aad
or
retf
sub
adc
je
sbb
and
jae
jae
movs
dec
sbb
cmps
cmp
push
add
or
push
mov
and
neg
inc
dec
les
inc
pop
xor
mov
es
and
and
pop
js
add
sub
push
dec
shl
retf
test
xor
xchg
mov
scas
aas
jp
imul
sub
sti
sbb
mov
adc
arpl
(bad)
dec
cmp
pop
and
adc
lods
push
imul
sub
cmc
(bad)
jmp
outs
mov
xor
jo
dec
(bad)
fstp
or
popa
out
loopne
call
and
hlt
out
pop
mov
fsub
loope
cmp
in
adc
(bad)
jmp
(bad)
jmp
movs
aam
cmp
jle
iret
xchg
(bad)
ins
adc
jne
mov
popa
xor
or
jge
adc
retf
mov
sahf
iret
mov
shr
pusha
enter
sbb
mov
(bad)
mov
mov
test
sar
jecxz
cmp
pop
adc
pop
push
outs
sbb
push
pop
into
xchg
aam
call
xchg
ins
jno
sub
and
and
sbb
push
in
fsubr
push
int
mov
imul
stos
fwait
repnz
hlt
mov
jno
je
mov
data16
scas
sub
loopne
movlps
cmps
push
ror
frstor
les
and
dec
inc
iret
cmp
outs
outs
cld
mov
jg
fdiv
pop
jp
movs
je
adc
test
cdq
inc
mov
rcl
test
xchg
push
mov
xchg
and
sub
or
(bad)
pop
jl
add
leave
shr
loop
pop
sbb
pop
push
sub
stos
scas
cmp
lock
icebp
js
jecxz
dec
leave
(bad)
(bad)
cmp
inc
ss
xor
cmp
jmp
ins
inc
add
fisub
jl
pop
shl
or
fwait
push
outs
int3
push
adc
jle
cmc
sbb
mov
pop
adc
xor
add
sub
xor
inc
push
sbb
fadd
mov
push
sbb
out
jmp
loopne
aam
cli
xor
mov
xor
loope
pop
mov
mov
or
xlat
sbb
in
cli
push
shl
js
push
outs
stc
push
out
std
les
aaa
mov
sbb
imul
iret
pop
add
inc
das
xchg
push
enter
mov
mov
dec
pop
dec
fs
mov
cmp
sub
jmp
and
sahf
fild
adc
cdq
add
add
mov
lds
xor
mov
aas
push
pusha
aad
sti
fild
dec
fucomip
enter
push
je
popa
nop
std
sbb
shl
pop
inc
sbb
adc
mov
retf
out
or
inc
or
push
les
adc
aam
das
adc
sbb
fnstsw
or
jg
push
cwde
and
stc
xor
jne
ret
inc
bound
xchg
sahf
es
pusha
pop
mov
repz
mov
sahf
mov
imul
mov
sub
iret
int3
int
xor
jmp
sub
fldcw
addr16
js
cmps
push
lahf
sub
ror
sahf
in
aad
pop
pop
jmp
cwde
retf
pmuludq
push
jb
mov
jno
in
int3
scas
jge
arpl
bound
fstp
or
jge
fimul
leave
sbb
xchg
loopne
cwde
je
and
mov
(bad)
dec
dec
adc
xchg
(bad)
repz
test
xchg
xchg
push
add
(bad)
sbb
stc
mov
mov
fldenv
cmp
xchg
dec
mov
int
xchg
fistp
test
dec
dec
sbb
dec
sar
xchg
not
xor
sbb
add
test
call
sbb
stos
inc
lahf
push
mul
fcom
sub
mov
stos
lds
or
out
jnp
test
dec
retf
imul
test
push
leave
test
pop
cmp
jp
and
inc
pop
add
fld
jo
push
xchg
jb
in
(bad)
(bad)
jmp
out
sti
adc
pop
pop
pop
ret
add
sbb
or
or
movs
dec
jge
fbld
or
mov
sub
add
sbb
aam
into
wrmsr
out
test
pop
mov
js
push
mov
adc
jno
mov
dec
jmp
add
js
xor
movs
pusha
jle
sbb
dec
cmp
add
test
or
fcomi
xchg
(bad)
sub
add
fwait
sar
cmp
mov
jbe
gs
icebp
daa
out
mov
adc
push
fimul
sbb
popa
jno
pop
cwde
cmps
jnp
(bad)
push
sub
inc
test
loope
test
jb
ja
cwde
call
imul
mov
jmp
mov
jnp
stos
retf
js
mov
mov
mov
mov
pushf
dec
loopne
mov
scas
rcr
mov
xchg
or
jmp
in
mov
inc
test
fsubr
xor
mov
(bad)
rcl
lea
iret
cmp
(bad)
rol
in
jle
aas
test
iret
inc
xchg
push
stos
push
or
adc
xchg
inc
xor
pusha
call
or
mov
pop
pusha
cmp
inc
mov
xor
mov
mov
and
mov
dec
imul
jge
mov
xchg
add
sub
movs
cmp
nop
(bad)
cmp
enter
xchg
call
addr16
cmp
repnz
rol
aas
or
mov
out
pop
inc
push
lock
frstor
lds
sbb
scas
ret
js
lds
in
cli
jecxz
sahf
ret
addr16
sub
add
mov
mov
call
mov
int
mov
ret
xor
inc
enter
push
lods
nop
jmp
dec
pop
daa
mov
jle
shl
xor
sbb
mov
movs
aas
in
stos
js
jae
fcomp
cli
pushf
gs
mov
jb
push
push
in
fwait
cmp
push
inc
xlat
mov
xor
mov
adc
icebp
fcmove
push
inc
add
adc
add
mov
movs
adc
xchg
psubq
data16
push
iret
xchg
ror
or
push
jno
scas
inc
push
push
clc
daa
inc
jae
in
or
mov
mov
aaa
adc
dec
jb
push
or
xor
and
retf
xor
rcl
push
sbb
inc
pop
add
jne
in
jbe
add
dec
call
dec
jns
jl
sbb
and
inc
xchg
pop
movsx
mov
imul
inc
das
push
retf
test
mov
mov
jo
(bad)
or
sahf
mov
lods
in
rol
push
loop
cmps
gs
cdq
jge
xchg
jl
dec
(bad)
jecxz
and
pushf
das
adc
fist
dec
xchg
jp
sub
into
fstp
xlat
jmp
or
aaa
cmp
jb
je
add
scas
mov
or
push
adc
cmp
jp
xchg
imul
inc
(bad)
(bad)
jecxz
(bad)
(bad)
cmp
daa
cld
xor
jb
iret
push
inc
retf
jecxz
test
inc
and
rol
aad
sub
push
lock
int3
jg
mov
cmp
dec
xchg
les
cmps
fstp
pop
sub
loopne
mov
sub
xor
repz
sub
arpl
repz
pop
test
mov
ret
enter
daa
mov
mov
leave
fsin
add
jecxz
movs
cli
fsub
push
cmp
imul
xchg
push
sbb
jl
pop
cdq
jb
dec
ss
cs
dec
jge
pop
cmc
and
sub
(bad)
std
mov
aad
mov
cli
adc
xchg
mov
ja
cmp
jmp
xchg
fst
lods
fcmovu
sti
cvtdq2ps
sbb
fs
cmps
dec
loop
sbb
cmp
fwait
inc
adc
mov
int3
jg
add
retf
sub
jo
cmp
ja
out
xchg
jae
xchg
imul
jge
gs
mov
cdq
gs
or
add
test
inc
adc
xor
repz
jmp
or
sub
(bad)
cmps
jg
fistp
in
mov
cmp
or
dec
retf
dec
xchg
into
mov
lock
and
(bad)
leave
adc
pop
jbe
mov
in
cmps
mov
rol
loope
fist
and
xor
sti
jmp
jne
loop
push
not
push
neg
sub
les
push
lahf
and
push
test
push
xor
icebp
ins
stos
outs
fninit
cmp
mov
sbb
call
into
test
neg
jae
ds
loopne
rol
inc
imul
outs
dec
leave
jge
sbb
lahf
push
pop
in
pop
sub
iret
cwde
or
push
mov
mov
cmps
es
cmp
cmp
and
data16
inc
jl
push
cmp
adc
das
sbb
scas
cmp
jle
shr
out
outs
pop
cmps
and
jnp
sti
sub
fs
loope
in
add
lods
cmp
popa
sbb
mov
pop
add
or
(bad)
into
adc
xor
or
int3
jbe
add
out
retf
dec
lahf
mov
cmp
in
mov
jmp
repz
repnz
mov
cmp
pop
ins
(bad)
inc
call
dec
mov
push
movs
add
mov
lods
dec
pop
test
ret
pop
mov
xor
push
test
mov
push
hlt
scas
mov
dec
or
adc
pop
mov
in
movs
xchg
adc
nop
xchg
jle
sbb
mov
sbb
pop
pop
out
inc
sub
or
scas
lods
mov
paddb
repz
cs
cld
inc
scas
or
push
xchg
xchg
js
mov
addr16
retf
cdq
sub
popf
adc
jbe
and
sbb
(bad)
pushf
ins
shr
and
sub
and
dec
mov
sbb
xor
les
sbb
es
fnstenv
gs
mov
xchg
cli
and
sbb
push
sbb
in
cmp
mov
fisub
scas
push
fwait
xchg
jg
or
imul
xchg
popa
or
pop
inc
dec
cmp
dec
lahf
in
jp
inc
shr
mov
mov
adc
jnp
push
adc
les
out
cli
jbe
call
or
xor
pop
mov
adc
adc
retf
and
aam
test
nop
rol
out
jle
jns
rcr
and
movs
out
icebp
out
nop
or
imul
push
jns
test
dec
into
xchg
fmulp
xchg
mov
push
or
aad
retfw
lods
xchg
inc
addr16
ret
inc
mov
fxch
and
rcl
pusha
enter
stc
mov
inc
dec
fldz
lds
into
int3
sub
sbb
xchg
pop
pop
dec
pop
mov
mov
xchg
shl
out
mov
fild
jge
or
iret
es
inc
pop
add
outs
(bad)
(bad)
jecxz
xchg
(bad)
or
mov
add
scas
mov
add
test
sub
lods
jo
pop
in
sbb
pop
loope
sbb
push
push
aas
cld
mov
jmp
in
in
ret
add
cmp
and
hlt
mov
or
fistp
lods
outs
add
(bad)
jbe
daa
sar
loope
adc
or
xchg
loopne
mov
xor
sbb
out
push
adc
inc
mov
test
push
jnp
or
mov
inc
pop
icebp
or
xor
call
or
pop
jecxz
imul
mov
mov
test
push
ds
and
dec
xor
adc
aad
(bad)
fwait
cmp
scas
cmp
mov
pop
mov
jb
retf
into
shr
sbb
(bad)
test
dec
movs
push
mov
add
pop
ror
mov
popf
stos
pusha
mov
or
sub
int
and
mov
les
in
enter
retf
(bad)
loopne
sbb
out
sbb
ss
jecxz
icebp
mov
xor
add
push
jo
mov
jbe
test
and
cmp
adc
add
cmp
xlat
jb
sbb
xor
pop
adc
(bad)
xchg
cmp
aad
fwait
dec
outs
retf
call
mov
popa
jl
ss
or
dec
and
pop
and
movs
out
in
jle
test
pop
sahf
bound
lods
mov
in
ss
dec
inc
or
jecxz
arpl
cli
mov
(bad)
push
leave
rcl
shl
xchg
into
cmps
out
stc
scas
loopne
(bad)
xchg
cwde
push
loopne
rcr
leave
retf
jo
mov
imul
pop
xor
push
mov
ins
sti
dec
retf
jmp
inc
mov
out
dec
pop
mov
push
retf
int
fmul
ret
std
and
imul
or
cmps
jae
mov
xchg
mov
loope
sti
int
mov
adc
add
movs
in
fadd
clc
cmp
lods
outs
pop
and
gs
mov
call
out
dec
and
add
hlt
and
sub
icebp
outs
sbb
push
sti
dec
(bad)
inc
das
popf
pop
loopne
(bad)
fld
loope
sbb
jl
daa
fcomip
cmp
inc
sbb
and
je
jbe
jno
dec
pop
mov
pop
sbb
sub
cmp
ror
stos
cmp
sub
rcl
imul
leave
js
or
sbb
add
xchg
stos
push
inc
pop
out
leave
call
rcl
sub
mulps
(bad)
dec
psubsw
push
adc
mov
mov
iret
sub
out
jmp
fs
sar
cld
mov
jp
out
ret
dec
mov
push
mov
mov
xchg
loope
mov
mov
sub
outs
ss
dec
retf
xchg
pop
arpl
(bad)
lock
imul
ror
sub
(bad)
push
inc
push
push
in
cmps
add
cmp
pop
lock
push
aas
aam
pop
mov
add
jp
jns
add
pop
into
test
push
fidivr
call
jg
mov
lock
neg
pop
pop
dec
and
es
jmp
fnstenv
enter
ret
xchg
push
call
push
popf
push
shl
scas
mov
scas
enter
or
cs
inc
daa
fistp
cwde
daa
in
mov
xlat
cmp
cs
ror
addr16
mov
xor
push
cmp
pusha
in
xchg
add
xchg
dec
mov
jns
(bad)
adc
jo
dec
rcl
jg
xor
mov
push
out
mov
ret
or
cmps
jns
test
cli
fwait
cld
mov
sbb
movs
je
inc
iret
mov
xor
cmp
pop
aas
xor
push
inc
pop
add
(bad)
inc
xor
xor
js
or
xchg
pop
mov
(bad)
mov
mov
rcr
jo
ret
call
lods
pushf
(bad)
pop
stc
fs
mov
addr16
hlt
xor
fwait
adc
fsub
push
je
xor
es
xchg
ds
mov
shl
pusha
cli
loope
mov
jmp
mov
cmp
mov
inc
(bad)
(bad)
loope
enter
xchg
pop
icebp
and
mov
mov
clc
rcl
ds
std
xchg
dec
and
sar
sti
and
push
ins
out
jb
push
mov
jae
sub
out
xchg
mov
add
jne
pushf
mov
call
dec
fs
xchg
or
arpl
daa
fwait
retf
(bad)
in
fldenv
sub
mov
lods
mov
popa
call
pushf
mov
fiadd
out
aaa
jmp
(bad)
aas
jmp
shr
test
ds
lds
js
add
mov
push
int3
cmp
adc
cwde
sbb
push
mov
add
add
or
enter
sub
mov
inc
mov
adc
or
pop
aam
rcr
jmp
inc
pop
add
jmp
pop
xchg
or
out
jg
fiadd
scas
adc
loopne
ds
std
mov
bound
and
mov
cmp
out
call
jnp
xor
dec
lds
mov
xor
push
mov
adc
sbb
mov
or
sub
mov
jmp
mov
xchg
js
jmp
pop
pop
fwait
pop
push
sbb
pop
xchg
mov
inc
fs
inc
mov
mov
nop
dec
adc
sbb
cmp
aas
(bad)
nop
popa
jmp
or
repz
xor
and
jmp
and
sub
cmps
mov
inc
pop
xlat
pop
pop
nop
and
ins
mov
inc
jb
sub
adc
stos
xchg
push
mov
cmps
ret
adc
dec
jb
cmps
add
inc
lds
jge
imul
cmovne
outs
and
jg
sti
std
or
xchg
mov
or
sub
xchg
add
push
movs
and
fild
sbb
inc
inc
shl
push
inc
sub
sbb
dec
stc
imul
ud1
mov
pop
adc
or
iret
cmp
test
loopne
and
jno
test
out
arpl
push
push
and
or
jmp
pop
mov
add
repnz
jns
and
xlat
and
aas
jl
mov
add
gs
movs
fisttp
sub
imul
in
cmp
arpl
xor
jg
push
push
dec
gs
xor
dec
out
(bad)
popf
ret
inc
sar
inc
jae
dec
(bad)
shl
into
movs
or
push
push
out
mov
outs
retf
add
jbe
mov
movs
icebp
in
jecxz
mov
in
loope
xor
hlt
in
xchg
push
call
dec
ds
jns
sbb
mov
pusha
enter
movs
inc
dec
sbb
dec
addr16
cmp
icebp
(bad)
sub
into
iret
test
dec
sbb
mov
lods
lock
mov
out
mov
cmp
test
jne
adc
jne
jnp
cmp
xor
(bad)
pop
fldenv
mov
fcmovu
dec
shl
and
push
add
sar
in
fcom
mov
movs
or
in
sahf
or
lds
data16
stos
imul
add
ins
pop
cdq
lea
jmp
sub
sbb
cli
div
mov
clc
or
mov
pusha
inc
repz
lea
sbb
or
aaa
push
jo
mov
shr
add
loopne
loop
sub
div
cmps
jb
mov
test
arpl
lods
in
pop
pop
outs
sbb
pop
sbb
loopne
(bad)
int3
stc
jge
cmc
push
inc
sbb
dec
jg
xchg
push
jg
fwait
in
js
clc
mov
rcl
cld
mov
push
mov
js
add
dec
(bad)
pop
ja
or
fwait
xchg
retf
fs
jp
fist
aam
xor
fadd
cwde
xor
mov
mov
cmps
push
mov
fisttp
push
aaa
scas
jo
call
lea
mov
cld
or
sbb
xchg
jmp
test
fnstcw
js
jno
adc
xor
enter
test
xor
xchg
and
fisub
sbb
adc
or
pop
test
lods
pop
jns
mov
mov
pop
add
gs
sbb
inc
(bad)
lds
ja
dec
xchg
test
std
jmp
dec
mov
jno
xchg
in
or
lea
in
xchg
into
mov
punpcklwd
xor
xor
cmp
aad
push
sub
retf
mov
xchg
fcomip
cmp
mov
fs
cmp
add
repnz
cmps
jae
xchg
dec
(bad)
push
mov
xor
leave
loop
(bad)
call
mov
fst
icebp
pop
cdq
xor
or
imul
jecxz
aad
aam
(bad)
pushf
mov
inc
les
aad
into
pop
mov
jnp
pop
xor
mov
fisttp
ret
bound
sahf
jae
xchg
inc
(bad)
repnz
xchg
cmp
xchg
dec
inc
iret
retf
call
sete
into
nop
dec
pop
inc
mov
and
arpl
pusha
sub
stc
popa
dec
mov
sub
fidivr
dec
adc
out
jle
rcl
fcom
sbb
jno
sub
push
ret
jbe
mov
and
pushf
lds
popa
and
cmp
movs
push
aam
fsubr
adc
in
mov
jle
stos
mov
jae
dec
js
adc
xchg
stos
dec
dec
cmp
pop
mov
pop
jmp
in
jnp
dec
xchg
ins
pop
adc
lds
fadd
jl
and
repz
ret
iret
jmp
cld
cli
pop
je
imul
dec
pop
mov
dec
dec
xchg
mov
jl
xchg
call
mov
fild
aaa
pop
shr
pop
jne
xchg
cs
xchg
ss
cmp
xor
mov
sahf
xchg
mul
mov
dec
dec
jp
ror
cmps
rcr
mov
sbb
lock
cmp
lahf
cwde
mov
lahf
add
(bad)
into
into
jge
push
gs
rol
add
dec
rcl
xor
in
sbb
movs
aam
push
sbb
sbb
push
aam
sbb
psubsb
dec
or
dec
(bad)
fimul
cmps
test
xor
mov
dec
in
mul
mov
pop
xor
jne
adc
cdq
adc
xor
adc
out
jmp
loop
clc
or
sbb
and
loopne
mov
jl
int3
push
inc
loopne
add
enter
mov
into
jmp
or
cli
aaa
test
sahf
imul
adc
cli
call
js
inc
jl
std
aad
int3
xor
add
jbe
inc
jb
xchg
nop
in
je
clc
sub
shl
int3
mov
xchg
cmp
sub
call
loopne
fsubr
sub
es
sbb
(bad)
mov
mov
xor
cmp
stos
mul
pop
mov
test
dec
inc
inc
jo
sbb
cmp
lods
mov
cmp
xor
lea
leave
push
ins
jle
mov
jl
hlt
or
repz
adc
fdiv
dec
sahf
cli
pop
fs
mov
call
mov
aas
fnsave
push
add
stc
fdivr
call
lock
dec
push
xor
inc
xchg
or
cmp
xchg
cmp
jne
sub
sbb
jne
imul
cmp
xor
mov
mov
je
sbb
add
data16
neg
icebp
inc
stos
test
xor
jbe
jmp
add
sbb
cld
fld
scas
pop
jnp
cmp
cdq
push
fsubr
mov
push
in
cmp
lods
data16
mov
imul
pop
or
pop
mov
inc
push
inc
cmp
test
movs
out
or
pusha
inc
int
loopne
xchg
call
mov
xchg
jge
jne
fcomi
xchg
ror
fnstenv
and
mov
push
xor
xor
loope
fwait
(bad)
ins
push
adc
rcr
add
or
xchg
test
(bad)
cmp
xchg
call
test
sti
retf
in
cmp
push
scas
sub
and
sti
fiadd
dec
mov
cmps
jmp
cmp
mov
call
imul
dec
in
jmp
ret
push
adc
xor
mov
jmp
repz
(bad)
imul
mov
sbb
and
adc
xchg
inc
push
mov
xchg
add
stos
push
sbb
rcl
les
mov
lds
push
int
push
dec
stc
cmp
lock
in
cmp
sub
mov
iret
push
movs
inc
in
arpl
xor
sub
pushaw
ror
fsub
jo
stos
sub
jge
mov
mov
shl
push
repnz
je
and
cmp
fnstenv
mov
xor
add
es
mov
xchg
loop
int
movs
ins
js
nop
lods
daa
sub
pop
popf
push
mov
sub
mul
push
or
fldlg2
pop
arpl
xor
mov
out
ret
add
(bad)
jmp
loopne
or
addr16
fisttp
jmp
jmp
cmp
call
adc
mov
pop
shl
loope
fist
ret
pop
retf
xor
dec
sar
jmp
jmp
and
lods
cli
mov
mov
dec
mov
in
or
in
jbe
call
dec
mov
fbld
loopne
in
mov
xlat
mov
inc
lds
jmp
(bad)
(bad)
loope
mov
add
adc
movs
add
pop
call
push
rol
stc
jg
test
sti
and
jg
mov
je
call
fst
xchg
stc
add
mov
in
test
movs
xor
cmp
movs
shl
scas
movs
pop
std
mov
icebp
pop
xchg
jns
ror
fstp
mov
cmp
sub
sub
jmp
pushf
sar
and
mov
call
sbb
xor
xchg
or
push
inc
in
mov
inc
sub
bnd
es
scas
dec
cmp
inc
imul
push
call
aaa
pushf
sbb
shr
jge
js
call
inc
jmp
hlt
(bad)
adc
xor
mov
enter
fisubr
jmp
mov
pushf
or
int3
mov
pusha
xor
stos
repnz
mov
(bad)
int3
shr
loopne
push
out
dec
hlt
mov
pop
int3
ss
ja
mov
xchg
push
dec
dec
test
mov
sbb
in
push
sbb
iret
ret
cmp
jmp
hlt
xor
mov
jne
aas
cs
sbb
pop
push
push
mov
call
retf
jmp
adc
mov
jge
popa
jg
pop
jb
mov
jbe
in
repz
mov
sub
jp
packssdw
xchg
imul
in
iret
movs
rcr
jmp
xor
aas
xchg
push
(bad)
jp
cs
imul
adc
(bad)
aam
push
(bad)
(bad)
add
jmp
mov
sbb
sub
dec
sbb
mov
aad
(bad)
or
sub
fnsave
aad
fcomp
jl
js
je
iret
pop
test
out
mov
adc
mov
or
outs
fcom
dec
lods
clc
int3
mov
inc
call
out
cmp
ja
pop
adc
push
mov
push
sahf
outs
shr
jns
and
loopne
sub
pop
add
and
push
xchg
jmp
ins
push
sbb
inc
push
mov
push
cmc
dec
pop
(bad)
movs
jge
sub
leave
pop
das
inc
outs
xor
push
and
stc
inc
cmp
mov
mov
lock
cmp
(bad)
mov
hlt
call
inc
cli
jmp
mov
lsl
ret
sbb
mov
pop
in
pop
(bad)
fldlg2
dec
and
aad
sub
jo
into
inc
icebp
or
and
jnp
cmp
ss
xor
sub
mov
adc
push
inc
imul
pop
pop
xchg
mov
cmps
inc
sub
cmp
sub
(bad)
aam
js
in
loopne
mov
into
rcr
mov
je
mov
outs
inc
adc
adc
fidiv
mov
fidivr
and
sti
adc
movs
pusha
or
pushf
ja
mov
cs
test
push
jnp
fprem
mov
xor
cmp
pushf
jmp
loopne
retf
(bad)
aaa
jge
loope
pop
and
xchg
in
add
repnz
sub
xchg
fdivrp
cli
push
jns
pop
mov
cwde
dec
fadd
sbb
cdq
inc
mov
dec
xchg
or
call
fmulp
add
jge
sbb
jne
jp
inc
jmp
sbb
pop
test
ins
sub
nop
loope
jbe
mov
xchg
dec
sti
jno
daa
dec
push
add
dec
lahf
push
imul
adc
xchg
jp
sar
add
stos
pop
cs
jg
stos
fstp
inc
push
xchg
frstor
push
fwait
xchg
xor
adc
or
mov
mov
mov
push
xchg
sub
push
pop
mov
mov
mov
and
xor
dec
push
out
adc
mov
fldl2t
es
jge
ins
jl
rcl
pop
mov
fs
push
jo
ja
jbe
jmp
aad
ss
loopne
cmps
and
sti
das
sbb
int3
shl
add
xchg
pop
xchg
push
jae
lock
hlt
dec
mov
inc
pop
mov
push
lods
sub
or
xchg
test
pop
xor
mov
repz
jle
inc
es
push
inc
inc
leave
mov
das
adc
mov
or
or
icebp
sbb
add
hlt
mov
ss
pop
add
pop
sbb
mov
adc
mov
popa
push
lods
cmp
sbb
std
xor
dec
pop
in
inc
add
ret
jbe
mov
add
dec
and
adc
shr
fnsave
fisub
mov
xchg
cmp
add
inc
aaa
fld
jmp
cmp
jle
inc
and
mov
cwde
push
fisubr
dec
ror
ret
dec
aam
and
or
cmp
call
in
ins
js
adc
loope
push
int
loope
faddp
jae
mov
sbb
into
inc
addr16
lea
jno
mov
(bad)
mov
push
push
add
movs
mov
xor
stos
lods
mov
stos
pop
out
mov
xchg
sub
aam
push
cmps
mov
aaa
in
mov
mov
fs
jle
arpl
inc
jo
pushf
dec
es
mov
psubsw
arpl
nop
xor
xor
sub
test
jmp
outs
in
mov
shr
jmp
xor
jge
add
push
push
call
jp
aam
sbb
push
dec
xlat
retf
neg
cmp
nop
into
sub
add
idiv
ret
in
lock
clc
and
add
(bad)
or
dec
adc
xor
sub
add
hlt
(bad)
arpl
nop
frstor
jge
push
push
leave
sbb
movs
xor
in
xchg
fadd
jge
cwde
cdq
xor
or
inc
js
push
push
adc
mov
popf
push
jg
imul
cdq
inc
ss
jecxz
xor
pusha
out
les
sub
xchg
and
lods
repz
mov
icebp
inc
jno
pushf
mov
(bad)
cmp
or
pop
aad
jo
pop
sub
int
stos
std
mov
cld
idiv
or
cdq
mov
xor
cmps
rcl
cld
sbb
(bad)
in
xchg
jnp
lahf
adc
outs
pop
ficom
stc
mov
jg
hlt
loop
xor
(bad)
and
in
cmp
xor
loope
pop
cwde
cmp
sub
ret
cmps
popf
movaps
lock
push
ss
xchg
pushf
sahf
pop
jo
or
out
lea
jbe
push
push
scas
movs
and
mov
mov
cmp
(bad)
lods
nop
pushf
mov
or
or
mov
shl
icebp
sub
scas
adc
ret
lods
retf
cli
fidiv
inc
xor
sub
mov
jno
add
add
add
jmp
out
lahf
int3
mov
fs
jmp
sbb
jmp
adc
hlt
xchg
inc
out
test
cmp
xor
cli
shl
xchg
dec
iret
add
sub
dec
ret
dec
ret
xchg
rol
loopne
in
adc
div
hlt
fiadd
pop
(bad)
jmp
fst
inc
xor
xchg
adc
xor
adc
in
mov
(bad)
lock
mov
ja
ret
js
lahf
mov
mov
aas
inc
ror
pusha
shrd
inc
cmp
dec
(bad)
rcl
test
data16
lods
pop
add
sbb
stos
iret
push
je
inc
mov
rcr
add
test
jge
cmc
jno
push
push
imul
sbb
pushf
retf
ret
inc
lods
mov
(bad)
pop
fisttp
mov
hlt
lock
pop
sub
mov
mov
mov
aam
jg
pop
and
dec
gs
and
div
shl
jns
fistp
enter
(bad)
les
ret
ss
jae
je
aam
cmp
sub
test
adc
cwde
sub
imul
push
xchg
mov
xchg
fimul
sub
shr
popf
inc
shl
cmp
cmp
imul
jo
sub
push
dec
sub
jmp
sti
and
mov
sub
push
jg
les
sbb
mov
push
inc
leave
(bad)
shl
and
out
sahf
pop
mov
pop
inc
in
adc
dec
mov
cwde
fld
cs
lea
enter
xchg
les
inc
cmp
and
jae
fidiv
test
cdq
(bad)
mov
inc
pop
add
sub
xor
into
jecxz
dec
pop
int3
dec
adc
jno
dec
lods
cmp
iret
add
lds
(bad)
xchg
pop
loop
jo
add
sbb
call
jle
shl
xchg
lods
lea
sahf
out
xchg
push
jbe
lea
dec
sahf
int3
iret
je
scas
lds
adc
cli
pushf
or
xchg
push
and
lds
mov
xor
in
outs
dec
push
movhps
inc
sub
aam
mov
data16
mov
cvtps2pd
inc
cmc
inc
pop
retf
push
out
pop
fdivr
or
pop
test
pop
stos
pop
mov
xchg
cld
mov
inc
test
xchg
dec
inc
mov
mov
test
jg
mov
out
push
shl
fcom
sti
mov
scas
(bad)
loope
pusha
jae
inc
lea
cmps
fcmovu
or
jl
sub
mul
xchg
xchg
jge
xchg
inc
inc
fdiv
add
aad
add
aas
dec
mov
xor
or
push
call
rcr
sbb
fnstsw
icebp
ret
or
sbb
sub
sbb
xor
cmp
mov
xchg
std
push
rcl
or
pop
cmps
jne
mov
je
cmp
push
mov
je
int
cs
sar
iret
mov
(bad)
ja
xchg
imul
cmp
xchg
sbb
mov
push
mov
retf
and
xor
mov
shl
test
dec
or
das
mov
adc
psrlw
adc
enter
(bad)
in
xor
mov
arpl
sub
push
adc
mov
push
loop
mov
mov
jno
sbb
jmp
fld
or
cmp
js
sbb
inc
adc
lea
or
aas
inc
loopne
xlat
add
lea
aad
adc
icebp
ins
mov
mov
push
xchg
fs
cmc
adc
(bad)
ror
xchg
es
lods
pusha
cdq
lods
sbb
push
nop
mov
stc
pop
repz
jno
sub
cmp
pushf
sar
jno
dec
int
loope
pop
push
mov
jmp
push
or
loope
mov
xchg
pusha
pop
in
xor
lock
lds
lea
cwde
xchg
fs
pop
push
cmovs
dec
add
imul
jp
ror
or
test
inc
retf
std
dec
stos
pop
ins
cmp
(bad)
in
cli
xor
lsl
sub
cld
dec
out
shl
daa
cmp
pop
sbb
cs
mov
jno
fdivr
mov
adc
stos
mov
nop
test
inc
cmp
loop
mov
iret
fadd
repz
dec
retf
gs
enter
xchg
pop
jb
into
das
mov
shl
jno
in
lock
test
mov
bound
call
push
or
xchg
or
mov
popa
test
cs
inc
mov
add
adc
sbb
shr
addr16
ss
test
into
ss
pop
mov
jmp
shld
(bad)
push
push
ds
mov
(bad)
cmp
hlt
pop
sub
loope
rol
mov
repz
xchg
enter
xor
xchg
(bad)
jl
retf
cld
test
xchg
cld
add
jge
mov
dec
(bad)
cmps
pop
stos
xchg
push
pusha
test
fld
add
imul
xor
js
stos
pop
mov
(bad)
mov
dec
test
xor
in
aam
push
jne
and
xchg
cli
js
add
cmp
inc
daa
cmp
out
ret
daa
adc
cli
xor
nop
cmp
mov
mov
scas
add
sahf
fnsave
bound
pop
nop
mov
mov
pusha
add
mov
inc
push
cmc
test
xchg
lea
pop
cmps
push
(bad)
stc
sti
push
add
sub
dec
lea
jbe
adc
dec
imul
clc
cmp
loopne
jae
leave
(bad)
cmp
nop
addr16
fidivr
cmc
sbb
sbb
jae
cmps
push
jns
jae
rcr
jmp
pop
fdivr
add
xchg
and
dec
inc
mov
shr
shl
bswap
jne
xor
dec
xchg
test
sub
imul
ret
jns
pop
cmp
or
inc
and
sub
mov
arpl
pusha
into
nop
jno
add
inc
and
scas
push
push
inc
jl
adc
or
xchg
jo
(bad)
loope
das
jbe
imul
xor
sub
fmul
call
js
lds
ins
or
inc
push
lahf
mov
inc
out
fld
pop
(bad)
out
push
mov
mov
int3
ret
popf
pushf
(bad)
in
stos
inc
mov
scas
lods
cwde
fsub
jp
addr16
outs
js
(bad)
jo
dec
inc
add
shr
fs
shl
push
cmc
fwait
sub
xlat
adc
jnp
div
cli
not
fld
int
dec
fst
fdivr
add
dec
sahf
retf
(bad)
cmc
js
push
in
cmp
add
inc
mov
fdiv
add
jbe
dec
(bad)
jo
adc
or
and
fwait
or
ret
inc
pop
(bad)
cld
cmps
push
jl
xchg
push
inc
sub
lea
das
ins
imul
adc
xchg
lea
(bad)
push
cli
cmp
shl
movs
data16
inc
push
xchg
dec
(bad)
adc
or
dec
movs
fdivp
fisubr
repnz
das
rol
or
cmp
sub
movs
xor
cs
mov
cli
inc
mov
and
cmp
pop
inc
xchg
pusha
movs
jno
pop
cmp
xchg
movs
adc
cmp
call
call
xchg
cdq
cmp
and
push
mov
mov
pop
not
js
hlt
mov
pop
pop
inc
lea
inc
push
pushf
ret
jl
sar
jmp
pop
out
mov
ins
(bad)
cmp
in
cmp
jns
fadd
sbb
mov
jb
std
push
mov
movs
inc
pop
pop
lock
aaa
jo
movs
inc
scas
mov
loopne
outs
mov
dec
jecxz
dec
stc
sbb
fidiv
es
jecxz
pop
xor
push
shl
jge
push
sbb
sti
aaa
push
sub
push
cmp
rol
and
in
lds
pop
push
mov
test
sub
mov
es
test
imul
in
dec
out
pop
repnz
std
add
mov
mov
imul
cmp
mov
cdq
push
jo
jle
mov
sbb
push
push
or
mov
pop
jge
ins
mov
out
mov
mov
fidiv
sub
std
dec
dec
xor
mov
xor
out
popa
mov
(bad)
mov
mov
or
mov
or
movs
aad
push
cmp
jne
pop
mov
inc
lea
and
pop
push
pop
(bad)
data16
cmps
mov
outs
and
inc
jmp
jno
fisub
pop
mov
imul
fwait
leave
inc
adc
test
push
mov
cld
inc
bound
mov
cmp
add
mov
mov
mov
pop
pop
dec
scas
mov
sar
ret
dec
push
adc
mov
movs
adc
lock
(bad)
jb
rcl
dec
pop
mov
in
retf
sbb
inc
cmc
xchg
mov
or
jmp
mov
aas
enter
sbb
jno
jle
int
xchg
hlt
retf
mov
push
mov
xchg
push
sar
inc
adc
xchg
sub
enter
jnp
jb
xor
add
call
jne
gs
add
fcmovbe
dec
xlat
push
xor
outs
pop
mov
ins
push
jbe
jecxz
dec
das
pxor
inc
mov
retf
jb
jge
add
jo
dec
pop
sbb
jns
mov
fistp
outs
add
xor
xchg
stos
inc
xchg
inc
sbb
cmp
dec
adc
mov
xchg
and
sub
ja
pop
fdiv
jnp
inc
pop
aam
mov
jmp
xchg
fdivr
push
xor
inc
repz
dec
jne
cmp
adc
xor
(bad)
stc
jmp
pushf
jge
add
pop
fcomp
mov
shl
mov
mov
and
cs
cmps
dec
sub
xor
stc
push
out
jae
add
cmp
inc
sbb
xor
lods
movs
loop
inc
js
pop
pop
fsub
shr
arpl
mov
in
mov
pop
icebp
inc
pop
push
inc
in
add
test
ret
pop
push
push
mov
call
jbe
jbe
dec
loopne
push
and
inc
stos
xchg
test
push
push
mov
aas
inc
sub
addr16
push
dec
test
out
cmps
mov
repnz
retf
dec
cli
data16
adc
mov
xor
aad
sub
lea
and
out
mov
call
xchg
xchg
mov
jns
scas
xor
xlat
xchg
mov
jge
ret
pop
lods
js
mov
and
outs
xor
dec
les
pop
push
cs
daa
arpl
inc
sbb
mov
cdq
pop
adc
push
mov
imul
adc
sbb
inc
test
xchg
xor
cli
inc
aas
gs
jae
dec
cmp
gs
mov
mov
enter
jl
repz
mov
mov
pop
in
icebp
outs
inc
enter
xchg
mov
push
lahf
aas
cs
inc
test
jp
(bad)
cmc
or
je
mov
cmp
(bad)
retf
mov
add
pushf
fdivr
popf
bound
adc
push
xchg
popa
xchg
xor
fisubr
pop
leave
repz
stos
jp
pop
stos
mov
jbe
mov
bound
gs
push
add
sbb
push
loope
pop
push
xlat
jge
sti
stos
inc
inc
rol
sbb
cmps
pop
rcl
push
sbb
pushf
pusha
sti
dec
in
pop
hlt
movs
adc
aad
adc
mov
adc
rcr
mov
mov
imul
sbb
xchg
es
ins
movs
movs
jge
cmc
inc
mov
push
mov
enter
push
jge
call
popf
jge
jbe
add
inc
push
mov
jae
or
mov
out
inc
adc
sbb
out
popa
(bad)
push
aas
jl
call
jno
add
ret
sub
push
daa
aaa
call
ficom
aam
(bad)
push
jne
mov
inc
test
adc
add
into
imul
push
(bad)
pop
clc
sbb
retf
dec
call
add
pop
mov
in
dec
fld
cmps
lahf
call
adc
and
lods
and
ja
neg
iret
gs
cmp
test
pushf
jns
jne
and
push
es
add
sub
sti
push
add
daa
popa
mov
aad
push
es
clc
cmps
sub
and
jnp
push
sahf
mov
aas
cwde
jmp
sahf
pop
mov
mov
cwde
cwde
cmp
iret
inc
fnsave
imul
sub
and
and
aaa
xchg
xor
push
adc
(bad)
dec
ins
mov
bound
or
add
and
add
sbb
adc
lea
cmp
xchg
cmp
pushf
push
ret
fisttp
jo
mov
sbb
sbb
dec
(bad)
xor
xchg
not
(bad)
dec
cmp
jno
ins
stc
inc
xchg
jns
and
mov
and
fnsave
retf
push
lock
mov
jns
ror
test
shl
mov
jo
adc
xchg
mov
xor
fldenv
mov
icebp
jl
sub
loop
(bad)
ret
aaa
cmp
or
lods
pusha
xchg
fimul
inc
int3
add
or
inc
mov
stc
cmp
aaa
xchg
test
ss
aad
add
mov
outs
adc
push
repnz
pop
loopne
setb
adc
pop
enter
repnz
dec
mov
sub
mov
test
sub
dec
mov
test
jbe
lds
aaa
cdq
inc
xchg
sbb
inc
aad
retf
and
shr
lock
gs
and
fistp
bound
gs
push
sub
fwait
stc
hlt
fdivr
adc
push
gs
pop
mov
jg
pop
daa
stos
adc
inc
mov
scas
mov
dec
add
sub
js
dec
fucomi
stos
sub
ins
lods
xchg
clc
mov
sub
cmp
sti
rcr
inc
dec
rcl
adc
ss
push
inc
repnz
pusha
xor
inc
add
stc
jns
bound
dec
in
iret
test
push
mov
dec
fucomip
fadd
call
xchg
pop
div
(bad)
inc
inc
lds
std
shr
mov
dec
jle
mov
pushf
leave
sbb
(bad)
mov
ret
gs
push
mov
addr16
gs
dec
adc
jne
xchg
ret
xor
dec
adc
in
outs
(bad)
imul
popa
mov
dec
sbb
pop
inc
cmp
loope
sub
out
lods
not
in
bound
inc
mov
jb
(bad)
cld
push
lds
cmp
xchg
mov
shl
or
pop
mov
jns
adc
and
pop
adc
outs
inc
idiv
test
mov
cli
and
nop
sti
jl
adc
or
cdq
xor
fiadd
fcom
dec
lock
inc
add
cwde
cwde
dec
je
mov
fld
push
xchg
inc
ins
adc
leave
dec
jne
push
shl
hlt
rcr
sbb
fsub
fsub
test
int
and
or
pushf
adc
shr
daa
lea
into
scas
cmp
xor
mov
sub
xor
imul
psrlw
push
jb
cmps
mov
mov
mov
hlt
sbb
jge
dec
pushf
add
(bad)
sub
lock
aas
jg
cmp
arpl
sar
push
jl
fs
jb
mov
popa
push
push
mov
ja
jmp
shr
inc
addr16
nop
push
popf
mov
ins
pop
jns
jne
pop
jp
fstp
inc
and
lock
pop
not
enter
dec
jns
lahf
jg
sbb
pop
int
fsub
xchg
ins
push
adc
cli
into
mov
jmp
jg
int
mov
into
inc
sbb
dec
sub
mov
and
fisubr
in
mov
stos
(bad)
retf
popa
cdq
les
xchg
lods
cmc
int
add
sti
sbb
in
lods
jecxz
outs
retf
call
xchg
loop
cwde
arpl
repnz
lods
aam
jp
out
sahf
hlt
lea
dec
jo
jp
popa
push
inc
shl
pop
push
int
js
das
test
pop
sub
test
cs
sub
jbe
mov
pop
jnp
pop
sbb
(bad)
out
and
rcl
xchg
cwde
aad
test
ja
fild
and
cs
jb
test
pop
ficomp
adc
inc
das
jge
mov
cdq
xchg
dec
mov
xor
push
jo
adc
aam
scas
mov
and
mov
dec
popa
mov
fbld
leave
and
or
jae
ret
popf
(bad)
push
je
add
cwde
jmp
loop
jecxz
jno
hlt
stc
clc
sbb
mov
pop
std
popa
mov
cmps
ret
mov
push
pop
lods
and
fcomip
jp
or
xor
inc
fistp
iret
call
pop
(bad)
push
xchg
je
inc
repnz
into
mov
add
cmc
div
push
popa
inc
cmp
aad
pop
aam
test
xchg
inc
inc
aad
dec
in
mov
stos
push
sti
pop
sub
fsub
inc
aad
pop
xor
mov
cmc
das
lahf
in
inc
mov
mov
xor
xchg
jmp
sbb
inc
jecxz
jl
inc
data16
pop
mov
dec
outs
(bad)
sti
jmp
cmp
sbb
lods
pop
dec
int3
sub
push
sub
xor
add
repnz
and
add
pop
sbb
lods
jge
loopne
cli
test
sub
cmps
lds
sbb
xlat
rcr
fbld
push
ins
push
jno
aad
jno
gs
sub
add
inc
mov
loopne
aas
shl
je
push
pop
sub
jmp
and
inc
jge
jmp
leave
repnz
aad
or
push
or
fcomp
stos
test
test
inc
jmp
xchg
rcr
add
(bad)
leave
sbb
xor
(bad)
mov
mov
push
pop
dec
sub
loope
dec
fwait
mov
aas
mov
push
loopne
or
cmc
pop
inc
ds
jo
jmp
inc
sbb
inc
stc
imul
dec
xchg
es
and
mov
pop
mov
mov
fbstp
loope
inc
push
ss
out
stos
xor
int
mov
mov
sbb
(bad)
xor
fs
dec
enter
mul
push
mov
pushf
fs
cmp
sbb
jno
fldenv
cmove
xchg
and
ret
mov
bound
test
stc
mov
push
or
jbe
inc
stos
js
jle
add
rcl
pop
mov
iret
(bad)
push
sbb
cdq
add
or
inc
lock
xlat
xchg
dec
movs
or
jnp
add
dec
sbb
adc
les
daa
aad
leave
js
adc
or
mov
adc
push
inc
xchg
es
test
cmp
adc
cdq
call
pop
test
push
jp
(bad)
cmp
or
fimul
dec
push
out
clc
std
cmp
or
cwde
mov
mov
pushf
mov
(bad)
jmp
mov
xor
stos
popa
or
cdq
pop
in
ins
ins
dec
xor
fs
loop
sub
pop
mov
stos
nop
mov
sub
sbb
push
imul
and
mov
mov
test
jge
not
xor
popf
adc
je
mov
sub
mov
push
lds
cld
dec
and
dec
jmp
jecxz
cmp
fsubr
push
fistp
and
jg
test
ret
int3
dec
push
es
push
jp
cmp
xchg
or
imul
mov
push
ficomp
out
mov
mov
mov
aas
std
pop
lods
bound
sbb
or
in
idiv
scas
jo
out
add
gs
ret
repz
push
mov
mov
int3
xor
aam
pop
xchg
mov
cli
test
rcr
xchg
retf
cmp
ds
pushf
adc
mov
out
(bad)
int
sbb
adc
imul
jo
mov
push
cmp
cmp
ins
loope
stos
daa
loopne
ins
cmps
sbb
mov
mov
xchg
or
call
arpl
enter
mov
ret
jns
dec
std
iret
inc
ret
sahf
xchg
fdiv
mov
cdq
movs
sbb
xchg
movs
xchg
lahf
addr16
in
sbb
ficom
mov
adc
push
xchg
sub
xor
cmps
or
inc
test
push
dec
daa
jg
adc
enter
neg
sti
outs
movs
push
movs
call
cmp
xlat
rcl
inc
mov
dec
in
ret
pushf
jbe
jge
jno
pop
pop
push
icebp
adc
lods
enter
dec
pusha
jmp
sub
fisttp
cdq
repnz
lea
xchg
push
popf
sar
jae
push
aad
ficomp
ins
and
stos
pop
clc
ret
or
cmp
test
push
retf
sub
mov
test
dec
sar
js
je
xor
pop
shl
jae
mov
xor
loope
enter
outs
mov
(bad)
sbb
repnz
xor
int3
ds
cli
jns
dec
outs
pushf
mov
jmp
ins
inc
add
add
mov
(bad)
adc
mov
out
jno
sub
out
pop
shl
test
sub
test
mov
sar
jne
out
aad
inc
push
movs
sbb
jmp
sub
stos
call
mov
cmps
rcl
retf
int
imul
xor
ret
or
cwde
bound
test
pop
leave
retf
jne
sub
lods
repnz
jmp
inc
dec
bound
hlt
(bad)
push
ds
popa
ror
add
jle
sub
and
and
rol
xchg
mov
xor
xchg
test
sahf
js
jg
stc
push
fld
sub
mov
mov
xor
sub
call
xor
push
mov
adc
iret
repnz
call
sub
stos
xchg
inc
xchg
fdivr
out
shr
push
push
test
jbe
add
adc
jge
jg
sahf
mov
shl
scas
cmp
ja
mov
lds
inc
ror
jge
sbb
arpl
adc
jg
mov
inc
loopne
outs
jle
aas
ins
pop
addr16
push
cmp
push
cmc
mov
inc
imul
push
sti
sahf
sbb
or
xchg
sub
sub
dec
mov
or
cmc
shr
in
mov
pop
imul
out
fwait
lock
add
pop
add
xor
sub
jbe
push
pop
mov
xchg
and
pop
shl
mov
nop
sbb
rcr
cmp
mov
outs
xchg
ficomp
or
push
hlt
push
jb
fidiv
mov
push
ret
mov
les
out
xchg
or
mov
cmp
jo
xchg
cmp
mov
jmp
pop
loope
nop
lds
jno
js
mov
imul
pop
scas
ja
mov
inc
jnp
pop
fst
cmp
sub
mov
dec
xchg
fisubr
addr16
(bad)
adc
sub
shl
lods
mov
xchg
add
mov
gs
and
xchg
push
inc
rol
in
out
sahf
jmp
dec
pop
jmp
push
stos
(bad)
dec
leave
pop
mov
lods
pop
mov
mov
cmp
sub
sbb
pop
dec
mov
in
out
adc
mov
mov
add
(bad)
adc
ror
movs
lods
xor
push
mov
scas
ins
fs
inc
sbb
adc
arpl
dec
test
inc
or
movs
sub
int3
gs
sbb
push
aad
test
mov
arpl
adc
loope
repz
or
pop
pop
lds
arpl
xor
cld
jo
and
fnsave
inc
xor
in
jecxz
ins
retf
mov
xlat
sbb
xor
lahf
cmc
lahf
xor
dec
xchg
or
call
inc
mov
and
repz
addr16
(bad)
cmc
lea
cdq
or
jmp
or
cwde
dec
mov
sub
(bad)
lahf
cmc
clc
daa
dec
pop
jmp
cmp
bound
icebp
ror
in
loopne
sahf
push
std
(bad)
add
sbb
les
iret
dec
pop
xchg
pop
or
js
cs
xchg
jae
mov
xchg
inc
pop
leave
pop
pusha
add
stos
imul
inc
je
nop
add
nop
pop
ror
ja
fs
sbb
adc
dec
mov
add
ficom
jp
(bad)
cli
movs
loope
inc
jmpw
xor
stos
stc
and
pop
adc
add
das
cvtpi2ps
adc
jp
sub
dec
icebp
dec
inc
cmp
mov
jp
pop
cmp
test
jno
in
xor
or
addr16
scas
push
fadd
dec
xor
rcr
aad
aas
call
loopne
int3
push
add
adc
(bad)
cld
dec
and
jp
jge
push
xchg
fwait
inc
mov
into
cmp
mov
aaa
mov
fs
mov
in
cmp
sbb
mov
movs
bound
loopne
nop
ret
movs
scas
cmp
or
cmp
dec
cmp
(bad)
ror
jl
fs
inc
sti
stos
ja
stos
add
cmps
gs
out
mov
popf
xchg
add
ret
dec
sbb
xchg
or
adc
ss
call
shl
pop
mov
test
add
jle
aad
add
icebp
add
in
dec
dec
and
jp
pop
mov
(bad)
and
fsub
cmp
mov
fcomp
lods
xchg
rcr
mov
sub
fwait
cdq
movs
cmps
mov
sar
or
mov
rcl
not
(bad)
cwde
cmp
iret
cmp
rol
cmp
cwde
xchg
dec
xlat
rcl
mov
xchg
in
loope
call
les
retw
mov
stc
dec
rol
sbb
push
sahf
nop
mov
xchg
call
icebp
retf
daa
cld
shl
sti
test
leave
dec
das
push
adc
in
or
jl
out
inc
les
fs
push
aas
xor
jg
push
int3
imul
sahf
pop
fs
(bad)
aas
cmps
rcl
cmc
adc
das
sbb
xchg
hlt
add
(bad)
adc
dec
das
(bad)
and
rcr
shl
push
imul
jae
dec
push
pop
push
les
cmp
pop
sub
inc
and
(bad)
mov
jl
and
loop
jo
push
jmp
outs
and
rcr
aam
dec
inc
popf
cwde
inc
and
mov
daa
sub
scas
out
scas
dec
sub
gs
inc
aam
xchg
outs
push
pop
ds
icebp
ss
jl
movs
(bad)
aad
dec
inc
call
ins
shr
inc
and
push
shl
mov
xchg
cmp
or
push
in
dec
inc
mov
out
mov
sti
xchg
es
and
in
adc
loopne
lahf
cmp
gs
ins
in
(bad)
out
loope
pushf
and
mov
pop
loopne
sub
dec
movs
movs
sub
jno
xchg
mov
pusha
clc
std
(bad)
imul
arpl
pop
lods
sbb
in
out
rcr
fcomp
scas
mov
mov
push
sub
std
test
(bad)
imul
stc
sbb
adc
ins
pop
ror
ret
add
dec
mov
adc
and
jnp
jbe
jle
mov
pop
push
inc
sbb
into
cmps
ror
mov
inc
inc
fcomp
clc
lods
cmp
or
inc
mov
aad
and
cmps
xor
or
enter
sbb
push
mov
or
adc
push
leave
xchg
test
fbstp
enter
mov
(bad)
lahf
mov
pushf
out
lock
call
dec
inc
leave
mov
inc
push
mov
adc
cmp
mov
ror
scas
inc
xchg
stos
int
adc
dec
or
repz
xor
sti
pop
fcom
ficom
test
cmp
pop
je
retf
jmp
xchg
push
lods
inc
mov
jmp
dec
icebp
ds
cmp
repz
mov
adc
in
sub
pop
fld
xchg
cmp
stos
mov
loop
mov
cmps
or
cmp
cmc
out
jae
iret
dec
in
out
mov
sub
(bad)
mul
push
xor
jb
xor
test
sub
(bad)
stc
sub
lods
sbb
mov
sti
push
sbb
adc
call
push
lds
dec
cmp
aam
fisub
inc
iret
fstp
fs
jg
mov
je
mov
into
test
test
mov
iret
jno
cmp
out
inc
xchg
movs
fcomp
test
enter
test
retf
jae
xchg
jno
fwait
arpl
mov
add
inc
dec
sbb
pop
push
push
xchg
(bad)
loop
stos
int
cmps
out
imul
movs
push
xor
mov
adc
(bad)
adc
sub
inc
mov
dec
ror
fdivrp
xchg
call
or
mov
or
inc
add
cmp
jp
dec
pop
hlt
push
fild
inc
adc
jae
stos
and
dec
xchg
rol
test
test
jns
ja
sahf
iret
dec
ja
fmul
cmp
mov
mov
adc
add
fucomp
xor
(bad)
mov
sbb
mov
sub
pusha
test
stos
movs
test
icebp
addr16
xor
jmp
fwait
je
aas
stos
lds
out
lods
fldcw
add
pop
jo
stc
sub
inc
out
std
dec
dec
dec
push
cmp
inc
test
add
sti
xchg
or
mov
fsubr
add
in
in
loopne
shr
inc
adc
addr16
pop
push
and
(bad)
mov
dec
push
push
fistp
imul
push
shl
div
push
lea
fisub
cmp
push
fmulp
icebp
test
ds
ja
and
scas
ja
daa
and
xchg
and
dec
in
pop
inc
js
movs
test
test
add
repnz
(bad)
mov
iret
xchg
mov
sbb
inc
xchg
aam
pop
sbb
sbb
pop
pop
mov
inc
cmp
mov
mov
jbe
jmp
push
movs
fldenv
xor
xor
ret
fcom
mov
mov
xadd
gs
adc
sbb
add
or
dec
cmc
in
das
sub
dec
das
scas
scas
sbb
mov
hlt
(bad)
jge
push
mov
rcl
lock
mov
jecxz
mov
lods
imul
xchg
in
push
outs
test
mov
ss
adc
cdq
jg
shl
out
je
lahf
movs
xchg
xor
or
pushf
jmp
cmp
xchg
(bad)
sbb
adc
retf
int3
inc
sti
aad
fild
adc
jp
mov
push
mov
xor
rol
jmp
mov
aad
jmp
push
shl
call
inc
push
push
xor
sub
(bad)
xchg
xchg
rol
dec
lods
popa
fld
xchg
xchg
mov
pop
sahf
xchg
mov
xor
retf
push
jbe
clc
pop
cmp
mov
icebp
fisttp
lods
repz
jns
jge
retf
xchg
xor
xchg
mov
inc
lahf
pop
(bad)
les
jge
xchg
inc
sbb
pop
cmp
inc
cmp
jbe
push
adc
jb
mov
jmp
fisubr
(bad)
in
cmp
and
les
dec
mov
stc
js
sub
add
xor
push
neg
call
pop
(bad)
test
sub
mov
cdq
push
and
mov
ss
jb
js
ror
or
test
pop
sar
popf
je
call
int
shl
out
add
sub
push
repnz
push
sub
scas
xor
test
and
xchg
sbb
pop
data16
mov
int3
jg
stos
fadd
fwait
or
inc
mov
jne
mov
add
cmp
out
nop
inc
pop
call
add
test
fstp
and
add
sbb
das
in
rcr
ja
dec
cdq
add
and
aaa
mov
clc
cmp
(bad)
ja
popf
loop
lea
pop
pop
push
leave
dec
add
fs
(bad)
into
cmp
inc
ja
inc
pop
mov
ret
add
pop
frstor
inc
dec
jmp
test
xchg
or
iret
pop
adc
int3
mov
stc
add
daa
es
stos
dec
mov
adc
xor
fcmovne
push
shl
pop
outs
ret
mov
int
cmps
in
movs
xchg
and
movs
ins
ja
addr16
jle
enter
test
lods
(bad)
cmp
scas
sbb
popf
push
push
test
rcl
movs
cmp
jb
sbb
fst
mov
xchg
jl
(bad)
repz
mov
daa
ret
mov
jnp
mov
dec
pop
ret
or
push
mov
fldcw
jmp
jne
imul
test
int
repz
sub
mov
lods
jae
cwde
sbb
mov
cmp
aam
test
test
in
mov
adc
cdq
add
cdq
inc
push
out
push
adc
sti
fsubr
fidiv
lods
fcomp
loop
add
jmp
push
les
add
(bad)
mov
inc
stc
(bad)
add
inc
out
sbb
pushf
xchg
cmp
imul
cld
sub
aas
sub
adc
jge
sbb
fimul
out
test
or
add
push
jne
sbb
xlat
cmp
fwait
(bad)
retf
jns
push
shl
popa
push
test
mov
mov
test
pushf
sti
aad
int3
push
xchg
mov
push
clc
sub
imul
xchg
in
push
mov
call
cli
xor
popf
cmp
in
add
in
add
shl
int
pusha
lds
cmc
cdq
js
jecxz
and
test
call
mov
inc
retf
repnz
ret
xchg
das
imul
(bad)
or
loop
fnsave
daa
sbb
mov
scas
push
sbb
sub
xor
and
loope
ins
daa
clc
dec
jp
adc
imul
push
mov
clc
iret
lds
cmp
ds
out
xor
lock
inc
and
cld
adc
into
hlt
scas
push
sub
mov
dec
in
push
scas
push
mov
les
jb
xchg
mov
push
push
pop
jae
add
sbb
push
jns
scas
xor
iret
mov
ret
and
inc
mov
ds
iret
in
lahf
inc
mov
les
cmp
es
mov
xchg
call
imul
cmp
push
div
push
shl
movs
imul
cmp
add
call
mov
fidivr
test
jp
js
cmp
add
lods
pusha
add
int3
lock
adc
(bad)
call
in
xor
imul
xor
jp
xor
or
pop
repnz
loop
adc
push
or
rcl
test
rol
cld
cmps
mov
pop
sub
and
jle
rcl
xor
repnz
dec
push
(bad)
xlat
in
cmps
inc
and
adc
fbstp
or
ins
inc
dec
out
cmp
frstpm(287
test
pusha
mov
pop
sub
push
dec
pop
and
popf
bound
pop
fwait
cdq
cmp
sub
cmp
xchg
fs
leave
mov
jne
inc
idiv
jecxz
test
jle
jge
or
add
xchg
pop
lock
xchg
fbld
int3
cvtps2pd
sub
cmp
inc
xchg
inc
jp
ja
sbb
(bad)
cmps
in
mov
and
xchg
fmul
ret
mov
iret
js
inc
mov
mov
mov
jl
dec
aaa
xchg
mov
es
movs
in
mov
loop
repz
sti
movs
sub
clc
stos
cli
mov
jg
add
rcr
scas
repnz
test
sbb
leave
push
xor
mov
ins
lods
in
nop
lock
test
mov
pusha
ds
arpl
and
pop
mov
in
out
inc
inc
push
cmps
xchg
add
cmp
jae
xchg
inc
call
cmp
fwait
les
mov
sub
loop
and
aam
push
xor
push
sti
out
adc
mov
xchg
mov
fs
fld
fs
add
push
bound
inc
pop
sbb
sar
sub
rol
push
dec
fldcw
test
push
loope
pop
jg
mov
and
jo
loop
adc
not
push
fprem
sar
nop
xor
pop
and
pushf
(bad)
xor
jmp
adc
test
sbb
ret
inc
scas
jmp
imul
mov
mov
fsub
push
xchg
retf
sub
cs
aad
mov
xchg
cmp
push
int
imul
jno
in
adc
xor
not
ret
inc
loope
or
sbb
loop
add
ficom
fcomp
cmp
ja
gs
cdq
out
jae
or
and
stc
push
push
outs
popa
in
pop
aas
adc
imul
daa
or
popa
ds
ror
and
outs
push
rcr
lahf
push
mov
mov
cmp
fwait
stos
jle
mov
sahf
in
sub
and
push
pop
ret
int3
sub
xchg
xchg
imul
jl
test
and
scas
div
jmp
repnz
ja
mov
add
scas
pop
sbb
imul
lds
mul
and
sahf
sbb
(bad)
inc
sub
xchg
mov
(bad)
xchg
pop
lods
cmps
push
std
pop
adc
inc
into
call
sbb
in
div
shr
lods
inc
lock
fsub
data16
rcl
sub
push
mov
xchg
dec
pop
sub
mov
push
fs
(bad)
imul
sbb
int
enter
aam
xchg
or
enter
xlat
mov
cmps
mov
(bad)
cld
pop
adc
xchg
in
mov
cs
add
test
mov
push
(bad)
xor
xchg
rcl
(bad)
xchg
jge
fs
mov
xchg
test
(bad)
dec
shr
or
mov
push
scas
popf
cwde
rcr
(bad)
xchg
repz
into
and
shr
mov
jl
leave
mov
or
fwait
adc
retf
bound
aad
inc
shl
mov
idiv
loope
xor
enter
(bad)
lods
jnp
(bad)
ins
jl
mov
xchg
movs
xchg
mov
jb
stos
dec
sbb
push
sbb
dec
dec
cwde
pushf
data16
shl
test
data16
ret
sub
mov
or
dec
or
jmp
fild
adc
sub
inc
dec
cmp
pop
adc
jp
ins
xor
sbb
out
sti
jnp
out
cmp
dec
neg
bound
cmp
add
mov
pop
aaa
and
js
stos
cmp
sbb
mov
push
rcr
out
aad
sub
mov
pop
iret
in
or
push
rcl
xchg
dec
rcl
xchg
pop
jb
fidiv
or
cmps
aas
inc
cmp
adc
push
mov
or
(bad)
les
dec
or
xor
jg
mov
jne
sub
icebp
add
scas
xor
push
sbb
push
xlat
sub
mov
ss
lods
add
mov
mov
mov
add
in
movs
and
jecxz
sbb
not
(bad)
call
repnz
loopne
dec
test
mov
dec
adc
jg
xchg
sbb
aam
cwde
out
mov
sub
xchg
sub
mov
inc
arpl
clc
cmp
es
and
mov
test
jmp
cmp
fild
inc
push
cmp
inc
std
shl
data16
in
or
xor
pop
(bad)
enter
jmp
loopne
sub
test
mov
ins
pop
adc
inc
xlat
mov
inc
inc
aad
(bad)
pop
add
push
arpl
loope
pop
adc
sbb
cmps
sbb
outs
xor
adc
pop
das
inc
out
lock
fwait
gs
repnz
cmp
outs
cmps
cwde
enter
pop
xchg
sbb
mov
dec
stc
retf
popa
inc
in
mov
sub
sbb
icebp
pushf
jg
xor
push
push
sub
jo
cmp
dec
jmp
xlat
lods
dec
mov
dec
inc
or
and
push
adc
push
dec
sub
aam
jns
sar
dec
(bad)
jne
fcomp
cs
ds
stc
dec
jecxz
mov
inc
add
sub
xor
xchg
stc
push
push
add
std
push
aaa
out
or
fadd
nop
cmp
movs
mov
js
mov
mov
xor
mov
sar
loope
jo
iret
sub
and
sub
jae
xor
scas
dec
jo
pop
(bad)
sbb
in
xchg
pop
push
pop
les
mov
xor
dec
(bad)
xor
fcomp
mov
mov
rcr
cld
cmp
ss
sti
stos
les
mov
mov
mov
ret
sbb
xor
inc
fmul
mov
xchg
xor
jbe
pop
mov
push
push
add
xchg
sbb
ja
outs
push
sub
mov
subps
(bad)
inc
sub
mov
dec
(bad)
repz
ss
jge
iret
icebp
mov
jb
mov
out
dec
pop
cs
mov
rcl
hlt
push
out
cmp
pop
pushf
lahf
(bad)
xor
inc
lahf
xor
addr16
jmp
dec
cwde
or
sub
imul
hlt
sti
retf
xor
jge
movs
movs
js
out
jb
aas
mov
xchg
jo
loop
je
aad
xor
jno
and
and
pop
inc
loope
mov
push
add
int
cs
lds
cli
daa
mov
leave
out
add
stos
fld
adc
adc
mov
sbb
mov
cmp
sub
fs
mov
fisttp
xor
ja
fwait
nop
test
fld
push
xchg
xchg
retf
sahf
retf
lods
pop
fucomp
or
xor
mov
faddp
cdq
push
jmp
int3
jl
jp
xor
jl
sbb
into
leave
aas
xchg
ficom
cmp
imul
mov
idiv
lahf
cmp
loope
cmp
in
or
das
or
outs
push
pop
retf
(bad)
fwait
pop
ss
jo
mov
sahf
or
fcmovb
test
pop
inc
sbb
cmp
add
sbb
imul
fidiv
mov
xor
dec
sub
or
std
inc
ficomp
scas
jmp
add
ret
cmp
nop
jp
cmp
and
pusha
xchg
div
(bad)
mov
jbe
sub
js
jmp
daa
mov
mov
xchg
aas
out
aaa
(bad)
mov
mov
mov
pop
cmp
test
xor
mov
cwde
add
retf
dec
pop
arpl
pop
idiv
retf
rcr
out
sbb
gs
outs
mov
jno
inc
mov
test
mov
leave
mov
stc
sub
jo
adc
xchg
inc
out
xor
dec
shr
fdivr
(bad)
jbe
loope
stos
pop
sbb
sbb
xor
add
out
cmp
cmp
sbb
in
cdq
loop
and
cwde
(bad)
int3
int3
adc
cmp
imul
inc
cmps
outs
dec
loope
sti
enter
mov
out
(bad)
(bad)
popa
das
jg
xlat
arpl
cld
cmp
or
ins
sbb
xor
jns
xor
and
mov
imul
cmp
outs
mov
cld
retf
push
pop
jecxz
inc
into
ins
rcl
fs
lahf
pop
or
imul
(bad)
sbb
or
mov
inc
jmp
mov
aas
xchg
lods
jne
sar
ret
xor
loopne
mov
adc
sub
push
mov
mov
pop
es
pop
push
fdiv
dec
mov
and
mov
fstp
aad
lea
jecxz
test
lahf
ror
push
pusha
dec
std
neg
push
in
dec
scas
arpl
(bad)
push
push
in
retf
aam
xchg
jmp
or
inc
neg
lods
daa
xchg
enter
and
std
jge
test
add
aam
jmp
and
mov
fnsave
dec
ficomp
cli
ins
sub
xor
cdq
mov
out
ins
push
xor
push
sbb
mov
ret
cld
fdiv
or
std
push
aad
mov
xor
dec
bound
out
pop
jnp
nop
dec
ins
mov
repz
ds
cmc
loop
inc
and
adc
mov
(bad)
push
mov
push
jne
pop
jns
loope
nop
mov
and
cmp
lods
sar
cmps
retf
mov
adc
xor
nop
xchg
clc
and
adc
sbb
cwde
loopne
mov
fdiv
push
or
in
or
int3
movs
stos
mov
out
lds
mov
cld
repz
or
ror
jo
sub
add
call
xor
sti
push
pop
loope
enter
push
xchg
outs
or
ret
xchg
lods
pusha
or
iret
or
lods
and
jmp
cwde
jne
pusha
dec
pop
xlat
adc
cwde
inc
mov
add
je
ret
push
ror
or
scas
and
es
mov
mov
data16
mov
adc
outs
jbe
shl
xor
rol
add
pop
bound
and
rol
in
ins
ret
lds
out
mov
aas
iret
xchg
mov
add
mov
xor
loop
ja
jnp
xchg
div
mov
sub
mov
adc
cmp
inc
mov
cmps
iret
pop
xor
adc
push
(bad)
mov
inc
add
xor
and
out
pop
add
and
mov
jmp
pop
mov
rcl
mov
call
and
test
lods
aad
xor
fisttp
xchg
lods
mov
dec
sti
test
ss
int
adc
ret
pop
xor
push
loop
das
out
xor
cmp
mov
xchg
dec
cmp
mov
mov
push
xchg
pusha
jbe
add
add
mov
ins
test
add
jae
imul
sub
data16
jb
xchg
jo
sub
sbb
aam
add
jl
aas
repz
(bad)
fiadd
mov
jo
lock
push
pop
movs
(bad)
rcl
repnz
loopne
mov
ins
sbb
pop
add
and
retf
popa
inc
push
and
frstor
mov
pop
(bad)
mov
bound
hlt
pop
fist
or
pop
sbb
cmc
fdivr
stos
sbb
and
sub
(bad)
xlat
or
cmp
jo
or
(bad)
lods
and
mov
cmp
jae
mov
popf
jg
into
cli
xchg
sub
add
sub
push
data16
jns
fwait
or
test
add
sbb
pop
lock
div
cmp
test
xlat
es
or
xchg
mov
xchg
inc
sbb
mov
ja
out
push
mov
ror
inc
sar
mov
enter
iret
ja
jmp
fs
xor
jae
sti
or
inc
ret
fcomi
data16
add
rcl
scas
popf
sbb
mov
in
test
nop
aaa
jg
std
sbb
and
std
push
je
adc
xchg
scas
aaa
inc
ja
and
cmp
dec
call
jp
mov
into
sub
adc
test
aas
jmp
xor
adc
je
mov
imul
push
les
mov
jne
nop
jbe
mov
ss
cmc
shl
jbe
fstp
jge
pushf
adc
scas
pop
pop
mov
adc
cdq
(bad)
xlat
fdiv
rcl
cmp
test
sub
nop
mov
hlt
movs
or
js
inc
sbb
addr16
aam
cmp
movs
lods
pop
call
aaa
pop
cmp
inc
xor
cmc
mov
std
ds
inc
xchg
cmp
mov
nop
add
xchg
dec
adc
xchg
push
data16
push
mov
dec
das
xchg
aaa
push
xchg
fimul
push
mov
mov
lock
and
test
adc
cwde
dec
xchg
ja
dec
or
jmp
fadd
cmp
xor
pop
in
test
push
cmp
enter
jnp
dec
ins
adc
adc
xchg
imul
rol
js
stos
inc
and
mov
test
loopne
ins
jns
dec
push
in
je
pop
int
xchg
popf
ins
pop
ins
shr
mov
lahf
xor
int3
push
sbb
in
push
(bad)
test
adc
adc
adc
sbb
mov
push
dec
lods
jge
mov
and
cmc
mov
adc
es
(bad)
jmp
popf
add
pop
jge
ror
ret
cmp
into
cmps
aas
sbb
mov
out
repz
push
mov
mov
sahf
test
inc
push
shl
xchg
iret
jp
call
mov
and
push
jns
shl
sahf
retf
hlt
dec
jno
jb
sbb
shr
push
sahf
mov
pop
sar
xchg
ret
xor
and
add
fwait
pop
icebp
pusha
mov
clc
mov
jge
push
ds
mov
shl
nop
rep
stos
dec
iret
add
icebp
mov
fiadd
mov
mov
sub
popa
or
aas
scas
loopne
out
stos
add
shr
mov
and
in
xchg
sbb
push
pop
jmp
dec
fadd
cmps
push
jne
pop
pusha
push
xchg
neg
hlt
ja
cmp
sub
(bad)
sub
inc
pop
data16
mov
out
push
xchg
lea
jns
mov
test
enter
or
imul
mov
cli
mov
(bad)
jmp
(bad)
mov
xchg
in
xchg
cmp
lock
aas
pop
xor
call
cmp
in
fadd
and
mov
aad
scas
stos
ins
sti
fstp
in
cmove
mov
inc
ror
in
sub
adc
pop
pop
push
mov
mov
cmp
stos
popa
sbb
aas
xlat
push
push
mov
xchg
dec
(bad)
xor
(bad)
dec
dec
jle
test
loope
not
movs
sub
sbb
jb
lahf
fwait
(bad)
mov
push
movs
cwde
or
pop
movs
push
jle
pusha
sub
call
jecxz
jae
pop
popa
sar
popa
in
push
and
ret
aad
mul
or
rol
inc
or
test
ret
mov
fild
push
daa
dec
out
jne
jl
gs
hlt
lds
iret
test
(bad)
int
xchg
mov
(bad)
into
mov
popa
stos
mov
cli
inc
test
jmp
out
lds
fstp
pop
xchg
test
fsubr
jmp
out
adc
mul
adc
jecxz
sti
adc
loope
pop
mov
mov
lahf
cdq
and
adc
shl
dec
in
pushaw
cmps
(bad)
lods
cmp
or
retf
and
test
fadd
mov
into
sbb
pusha
loop
stos
xor
aam
je
movs
mov
adc
ret
push
enter
xor
popa
pop
mov
jmp
fstp
push
aas
or
pop
push
in
ja
idiv
mov
sub
xor
aam
add
sbb
fs
add
xchg
push
cmps
inc
pop
in
or
retf
test
push
add
into
aaa
jecxz
inc
rcl
xchg
dec
mov
jns
aam
sahf
int
mov
fcomp
int3
jne
mov
mov
idiv
retf
push
add
(bad)
out
mov
movs
or
inc
lahf
mov
(bad)
out
push
mov
outs
xchg
or
movs
push
pop
xor
pusha
add
bound
adc
rcl
sbb
test
adc
outs
test
xchg
jo
dec
sub
bound
ins
bound
bound
rcl
xchg
retf
xor
ja
repz
xor
bound
mov
add
cdq
dec
xchg
(bad)
lock
mov
fs
xchg
in
lock
lods
dec
test
stc
js
jge
ds
lods
sub
adc
mov
inc
imul
mov
xchg
sbb
adc
xor
scas
cmp
xlat
sub
mov
cmps
je
xchg
fwait
sub
jecxz
mov
enter
cwde
iret
addr16
rcl
adc
pop
pop
outs
iret
push
aad
jns
jp
dec
(bad)
mov
(bad)
not
add
adc
imul
jns
ja
pop
ret
out
mov
mov
inc
sbb
popf
dec
mov
and
xchg
cmp
fsubr
xchg
dec
ret
mov
pop
ss
add
shl
mov
pop
mov
call
lahf
fstp
cli
adc
push
mov
push
or
adc
dec
mov
sub
lea
jge
dec
lahf
jmp
int
xchg
gs
inc
inc
lods
dec
idiv
push
xchg
rcl
pop
add
in
lock
or
js
cmp
inc
mov
out
pop
imul
shl
shl
psraw
out
cli
leave
and
push
(bad)
cmp
pop
fist
adc
popf
scas
jge
test
pop
arpl
in
add
scas
xchg
data16
hlt
jp
jmp
dec
ret
dec
adc
or
shl
mov
bound
xchg
ss
ret
mov
mov
arpl
mov
in
in
std
fiadd
xchg
jl
and
test
mov
out
arpl
mov
dec
repnz
mov
or
push
xor
xchg
clc
push
sub
sub
data16
cli
pusha
ss
inc
or
xchg
scas
adc
mov
mov
sbb
(bad)
retf
daa
fisubr
aaa
je
clc
cdq
adc
pop
mov
add
jl
test
fsub
pop
or
(bad)
cmc
ins
test
jo
ja
out
(bad)
cli
out
(bad)
test
das
adc
xor
mov
popf
sar
pop
push
pop
mov
inc
add
or
cdq
mov
fmul
outs
in
addr16
out
pusha
stos
jg
bound
mov
jbe
adc
in
mov
jo
push
cmp
jb
bound
and
inc
cmps
mov
shl
cwde
cli
dec
gs
out
xchg
pusha
push
xchg
gs
cwde
mov
jmp
(bad)
hlt
jnp
inc
mov
xchg
call
outs
(bad)
dec
push
jg
sub
cmp
int3
fstp
inc
xor
pusha
jae
jmp
scas
jge
cdq
imul
enter
test
fdivr
pushf
and
push
push
pop
inc
movq
cmp
inc
adc
ss
lea
and
outs
movs
adc
dec
fucom
bound
mov
dec
pop
stos
cmp
sbb
(bad)
push
outs
xor
pop
push
adc
arpl
or
mov
pop
in
inc
cs
xchg
add
(bad)
sub
pop
out
adc
(bad)
and
imul
ins
sbb
jbe
adc
call
add
std
mov
adc
pop
xlat
jmp
mov
adc
out
fld
call
and
push
js
in
movs
mov
scas
inc
fdivr
mov
in
test
jmp
cmp
data16
rcl
fchs
sbb
mov
pop
or
ret
mov
push
sub
push
iret
enter
fistp
out
inc
inc
dec
jmp
sbb
adc
(bad)
pushf
pop
xor
push
mul
aad
jl
and
das
aad
sub
cmp
rcl
fnsave
add
aad
and
inc
dec
xor
add
loope
sti
adc
mov
into
mov
xchg
dec
das
in
test
(bad)
xor
jbe
add
or
rcr
add
or
iret
cmp
dec
or
mov
stc
mov
pop
jp
lods
dec
inc
xor
(bad)
or
mov
inc
xchg
or
xlat
pop
fcom
das
shl
stos
push
dec
leave
sti
mov
mov
adc
or
jo
pop
out
in
or
and
jecxz
xchg
ins
pop
xor
jecxz
imul
jg
out
dec
cmp
and
imul
xchg
jnp
pusha
cmps
jne
daa
pop
cmp
jmp
(bad)
cld
add
jmp
aaa
fbld
daa
neg
dec
cmp
adc
jl
sub
in
neg
xchg
mov
je
(bad)
test
xor
test
jae
das
pusha
loopne
popf
and
mov
cmp
lods
pandn
cmp
sub
add
xchg
add
cmp
dec
jbe
xor
test
test
cmp
sbb
mov
and
jle
pushf
cmp
loope
xor
call
and
push
mov
sahf
dec
fimul
fidiv
fnstcw
out
xchg
out
and
jae
jne
outs
mov
inc
mov
outs
movs
jmp
push
ror
aam
inc
pusha
repnz
repnz
push
rcr
pop
jb
mov
fadd
sbb
sbb
call
test
mov
mov
iret
mov
ins
push
ins
jle
sbb
cli
pop
scas
mov
xor
dec
push
push
call
sub
push
inc
repz
pop
int3
dec
and
out
jo
cwde
adc
push
xor
mov
sub
xchg
popa
repnz
jle
cmp
ins
pop
fisttp
mov
jo
leave
sbb
adc
cwde
retf
icebp
jmp
dec
mov
pop
jmp
jle
cmps
xor
xchg
gs
call
out
push
jbe
popf
scas
pop
scas
and
addr16
cmp
dec
pop
call
jo
mov
pop
jbe
out
sub
mov
sub
pop
lahf
adc
popa
pop
jb
sub
adc
fbld
lahf
pop
call
(bad)
iret
dec
sbb
movs
mov
xchg
fsubr
cmp
sub
mov
sbb
repz
sti
cwde
cmp
imul
xchg
fs
mov
add
(bad)
mov
sbb
pop
mov
ja
lods
xchg
xchg
push
inc
shl
adc
int3
jmp
mov
add
sub
push
mov
gs
out
cmps
or
repz
lods
mov
daa
movs
cmp
push
cmps
cmp
dec
cmp
rcr
or
lahf
sti
pop
xor
jns
pop
aad
daa
data16
hlt
cmps
cwde
sahf
jmp
xchg
push
(bad)
mul
jge
sub
and
into
popa
add
push
inc
mov
std
imul
adc
ja
push
aam
test
movs
leave
dec
rcl
sub
mov
mov
into
pop
enter
arpl
call
stc
or
and
ins
loopne
push
dec
mov
jge
mov
out
mov
shl
dec
adc
(bad)
ins
into
aas
xchg
lods
xchg
fisttp
cmps
dec
call
xchg
xor
(bad)
in
repnz
inc
out
adc
pop
les
jns
inc
jns
dec
cmps
ffree
sub
mov
sub
mov
cmp
call
pop
fstp
popa
fninit
(bad)
(bad)
jmp
xor
inc
push
test
fcomp
sahf
rcl
cmp
mov
ins
aam
repz
or
into
lods
movs
jae
sub
or
mov
mov
push
push
call
mov
in
adc
mov
mov
mov
sti
fwait
es
sub
mov
nop
daa
cmp
push
fidivr
and
xchg
inc
es
add
cmp
movs
jnp
mov
fsub
mov
and
jge
push
or
and
mov
pop
mov
sub
xchg
rcl
icebp
fiadd
push
lea
iret
inc
xlat
xchg
push
adc
push
inc
cmc
jle
outs
imul
jp
jge
jl
add
mov
daa
dec
leave
push
loopne
push
mov
lahf
(bad)
hlt
xchg
inc
and
fs
xchg
fs
int
das
ret
inc
repz
mov
leave
xlat
fidiv
inc
mov
idiv
pop
fisubr
les
test
sbb
mov
sbb
in
(bad)
call
xchg
fwait
inc
inc
pop
popa
adc
aam
popf
mov
jnp
jecxz
cmp
retf
ss
jae
mov
mov
lahf
sbb
ss
js
mov
mov
dec
pushf
push
sub
pop
adc
mov
movs
mov
jnp
adc
shr
add
mov
push
and
movs
mov
xchg
std
mov
pusha
mov
mov
cwde
lea
xchg
jecxz
sbb
lahf
aam
test
nop
cmp
lahf
rol
xor
inc
icebp
mov
movs
cmp
xor
xchg
jecxz
sub
push
loopne
or
xchg
add
dec
pop
cld
jo
jo
enter
pusha
or
mov
inc
push
inc
cmp
int
xchg
ins
shl
jl
cdq
dec
mov
mov
pop
cli
pop
(bad)
cmp
jo
jo
dec
cli
push
fs
in
call
and
(bad)
(bad)
jmp
fcmovnb
xchg
retf
cmp
xor
inc
mov
dec
jmp
loopne
sub
push
bound
xor
sbb
xor
push
fild
mov
add
out
fcmovnu
jle
jl
popf
(bad)
jnp
call
scas
loope
ds
adc
repnz
dec
cld
xchg
dec
call
sti
mov
mov
clc
mov
push
and
arpl
push
xchg
das
js
cli
cwde
je
dec
push
dec
ins
dec
pop
pop
cmp
outs
sbb
cdq
inc
mov
aad
mov
adc
aad
rcl
std
scas
std
push
ds
mov
add
popa
mov
loope
and
mov
fld
(bad)
cld
(bad)
or
std
dec
aam
or
(bad)
xchg
mov
push
jne
push
das
add
movs
out
xor
nop
leave
pop
pop
cmc
retf
(bad)
je
out
in
lahf
cmps
mov
call
mov
cmps
mov
(bad)
sbb
loopne
cmp
arpl
dec
aam
jge
jecxz
sti
popa
aaa
into
lods
adc
lock
jp
mov
pushw
jmp
dec
push
or
and
and
push
in
push
or
inc
mov
jp
dec
repz
stc
mov
rol
mov
adc
push
fisttp
mov
inc
icebp
enter
pop
cwde
lods
or
jns
mov
dec
mov
jmp
pushf
cmp
loop
movs
push
ret
shr
xor
or
and
jp
cmp
test
rcl
test
xchg
popf
gs
xchg
inc
push
test
pop
mov
(bad)
fidiv
push
loop
fmul
enter
mov
inc
loope
jnp
inc
dec
and
jo
or
adc
or
pushf
pop
addr16
xchg
mov
sti
lds
xchg
fistp
push
and
mov
xchg
jnp
adc
stc
inc
(bad)
or
iret
gs
jmp
jmp
rcr
imul
shr
pop
mov
nop
loopne
mov
push
int
ja
fcomp
mov
mov
in
push
mov
outs
das
(bad)
jmp
push
adc
out
xchg
xchg
mov
push
cmp
sub
add
adc
cs
fld
in
ret
pop
adc
sbb
test
(bad)
push
inc
xor
(bad)
jns
or
sti
pusha
cwde
ins
dec
clc
scas
jp
leave
cmp
outs
adc
call
fs
cmps
daa
das
xor
test
pop
xor
xchg
xor
pxor
cmc
add
push
or
add
retf
jb
push
cmp
mov
cdq
(bad)
imul
data16
pop
sti
push
dec
jmp
cmp
inc
or
xchg
push
ds
push
xlat
dec
fnstsw
cmp
push
adc
jp
(bad)
cmp
mov
lods
repz
out
ficomp
addr16
cmps
pop
xchg
jnp
jl
mov
pop
in
sub
out
xchg
es
ja
adc
jo
mov
mov
iret
push
aas
mov
mov
sub
mov
xchg
cmp
sbb
mov
mov
sub
push
sar
sub
enter
in
sbb
pop
inc
mov
push
sbb
xor
outs
rcr
jbe
stos
shl
add
rol
sub
push
clc
stc
add
aam
add
adc
in
retf
ds
jl
xlat
inc
lea
shr
jns
mov
ins
loop
cmp
jge
cwde
test
in
sub
arpl
in
(bad)
bound
push
fcmovb
dec
imul
sbb
sub
out
(bad)
sub
(bad)
loopne
outs
sbb
lods
mov
call
adc
cmp
pop
xchg
dec
lods
jne
xchg
mov
popa
cmp
out
das
test
sub
sbb
aad
inc
push
and
call
adc
out
dec
sar
xor
fnstenv
clc
js
xor
les
mov
mov
ja
pop
xchg
adc
repz
adc
sbb
shr
out
ror
dec
xor
cmp
and
jo
xchg
pop
mov
mov
icebp
ds
(bad)
jbe
mov
ret
lods
mov
fimul
add
adc
or
int3
in
lods
adc
out
nop
loopne
aad
jno
adc
dec
pop
int
xchg
fild
mov
jno
mov
xor
clc
(bad)
mov
fnsave
xchg
fcomp
test
fistp
popa
movs
jbe
adc
cmp
inc
shl
push
daa
pop
in
dec
leave
rcr
xchg
test
sbb
je
je
js
outs
mov
mov
loope
(bad)
loopne
jno
push
mov
mov
repnz
push
and
fild
mov
jbe
push
ja
out
dec
std
dec
cdq
cmp
or
lds
inc
outs
sub
mov
dec
jns
int3
push
outs
pop
shl
sbb
push
sar
or
xlat
sbb
and
sbb
dec
aaa
out
lock
and
(bad)
fwait
clc
pop
icebp
push
jl
int
pusha
push
and
xlat
sbb
pop
mov
jge
fcomi
adc
imul
sbb
mov
lods
dec
push
jnp
sar
lods
cmps
scas
push
pop
inc
adc
inc
jmp
popa
inc
inc
out
outs
cmp
xor
dec
clc
mov
imul
shr
xlat
pop
mov
rcl
dec
add
jle
fs
test
push
jmp
inc
icebp
mov
popa
or
mov
out
cmp
dec
xor
jg
mov
ins
in
out
daa
in
test
in
sbb
outs
xchg
fstp
das
inc
out
bound
stos
xchg
mov
cmp
(bad)
fcmovnu
vsubss
add
cdq
jge
fnstenv
inc
loopne
mov
sbb
jle
push
mov
and
mov
push
jmp
push
xor
mov
out
lods
xor
xchg
inc
shl
fs
lods
push
sub
cmp
call
inc
pushf
jo
sbb
xor
popf
adc
and
pop
js
xor
and
pop
ret
cmp
shl
sub
adc
aad
add
xor
lods
pushf
mov
cmp
or
cmp
hlt
pushf
or
bound
xchg
push
xchg
sar
mov
or
and
mov
fsubr
dec
jmp
daa
ins
and
(bad)
data16
inc
iret
lods
stc
loopne
pop
lods
jbe
test
or
sub
adc
mov
in
and
ja
pop
mov
xchg
in
(bad)
xlat
call
mov
dec
addr16
adc
ret
call
or
mov
jecxz
in
(bad)
ret
int
mov
scas
loopne
mov
add
push
sar
add
and
cmp
add
jecxz
jb
bound
iret
outs
add
mov
or
loope
sub
ds
imul
push
mov
xchg
sbb
pop
(bad)
clc
movs
inc
(bad)
inc
xor
cmp
mov
int3
dec
test
jecxz
or
cmp
jl
(bad)
std
adc
dec
jle
xor
imul
mov
jno
ss
mov
dec
cmp
lock
inc
adc
inc
mov
scas
inc
cmp
push
nop
std
or
cmps
dec
pop
cmp
push
sbb
push
pop
out
fimul
or
mov
test
xchg
mov
movs
and
dec
sub
inc
lds
add
jmp
dec
dec
xchg
jno
pop
dec
jns
lock
cmps
fisttp
test
pop
(bad)
sti
dec
movs
dec
push
call
outs
test
pop
test
jb
enter
push
push
jmp
adc
repz
cdq
shl
and
mov
adc
cmp
and
dec
jnp
and
mov
sbb
xlat
sub
cmp
loop
fidivr
in
inc
aam
xchg
push
xchg
stc
push
or
push
aad
inc
iret
xchg
cmp
xchg
mov
adc
jge
repz
aad
jbe
or
cmp
xor
arpl
ins
mov
(bad)
sbb
sbb
mov
nop
jb
(bad)
mov
xchg
jg
rcl
ret
cmp
in
fisubr
cmps
mov
or
add
mov
fsubr
inc
out
cld
inc
cmp
or
mov
jns
js
shr
nop
or
test
add
jb
mov
mov
into
adc
and
push
adc
mov
retw
jg
or
sbb
data16
add
inc
aam
dec
cmp
call
sbb
cwde
outs
repnz
sbb
sub
cld
cld
stos
lods
mov
xchg
ud1
leave
or
pop
cwde
(bad)
(bad)
pop
sub
add
pusha
push
dec
pusha
adc
adc
icebp
pop
int3
and
lods
call
push
int
pop
stc
test
pop
test
mov
in
mov
push
mov
xchg
adc
adc
adc
jb
sar
jge
popa
jae
adc
fdivr
pop
(bad)
adc
hlt
sub
ret
push
jmp
jecxz
sub
and
fs
adc
dec
mov
stc
xor
xor
shr
dec
sbb
and
mov
dec
popa
mov
dec
mov
pop
xor
xchg
mov
rcr
mov
seta
push
add
and
shl
mov
or
cmp
xchg
pusha
mov
in
call
sbb
inc
push
and
ret
mov
dec
mov
div
push
inc
cmps
pushf
es
mov
fmul
sub
jge
mov
retf
ins
sbb
aaa
mov
or
and
fisubr
into
push
leave
or
sub
xchg
retf
inc
iret
inc
xchg
popf
jl
in
mov
out
push
mov
xchg
cmps
sti
ret
or
or
ss
or
cmc
sub
push
jmp
jmp
add
lahf
and
in
lahf
sbb
mov
shl
adc
fstp
xlat
in
mov
aad
xchg
gs
add
fwait
imul
mov
ins
retf
mov
shl
dec
mov
jne
jl
les
vmovdqa
sub
rcl
add
in
in
ret
xor
jmp
mov
or
fistp
mov
(bad)
cmp
push
and
pop
dec
sahf
mov
in
inc
jmp
test
lods
in
mov
dec
xlat
xor
push
xchg
das
mov
and
sbb
sbb
mov
cs
cmp
mov
add
mov
repz
cmp
in
add
jo
mov
lods
out
imul
push
adc
cli
xor
mov
sbb
pop
in
stos
lahf
push
xchg
fadd
sub
mov
mov
mov
add
push
mov
je
mov
mov
mov
cmp
cdq
or
mov
fdivp
in
mov
inc
into
sbb
iret
lsl
(bad)
(bad)
ja
mov
jne
fsubr
in
jne
pop
mov
dec
and
out
mov
fldenv
rcl
rcl
aad
jp
test
dec
int3
pop
out
dec
or
daa
stos
sbb
dec
sar
(bad)
aas
sbb
jmp
test
ja
add
xchg
mov
pop
ss
cmp
ror
mov
mov
or
movs
shr
imul
xchg
stos
sbb
jl
fcmovnb
(bad)
adc
jbe
shl
jae
ret
jns
movs
mov
push
mov
outs
sub
pop
jne
add
sub
pop
gs
push
cdq
and
inc
lods
jmp
call
xor
mov
daa
mov
(bad)
movs
cli
push
sub
xchg
push
cmp
jl
gs
xchg
lds
mov
fwait
loop
sub
push
mov
pop
(bad)
fs
das
enter
loopne
fldcw
cmp
xchg
xor
pushf
xchg
xchg
push
and
popf
ret
mov
ins
mov
sub
sub
ins
test
add
mov
xlat
fs
xchg
jp
xor
aas
outs
push
or
fisttp
stc
scas
ins
xlat
int
fistp
es
pop
xor
repz
lahf
xor
lea
mov
jo
loope
arpl
ss
scas
sub
ins
outs
cmp
je
shl
hlt
or
pop
or
xlat
and
mov
xor
pop
addr16
ja
xchg
mov
lods
add
aam
xor
lds
es
push
inc
sub
test
mov
inc
in
jnp
daa
mov
clc
or
mov
arpl
or
pop
adc
and
stos
mov
cmp
xor
test
out
popa
stc
je
mov
xchg
cs
mov
retf
into
cmp
sub
outs
xor
clc
mov
(bad)
jne
jmp
mov
cwde
lsl
scas
mov
sbb
enter
nop
xor
psubq
adc
in
cmps
inc
add
sahf
dec
push
or
hlt
xor
xchg
cli
sbb
lock
xlat
mov
je
sbb
lods
stc
jo
adc
xchg
addr16
mov
dec
jne
pop
mov
out
mov
outs
push
pop
pushf
adc
jmp
and
scas
das
(bad)
(bad)
sbb
ficom
iret
dec
mov
mov
ret
cwde
mov
fistp
ja
into
push
mov
sub
xor
leave
out
fcomp
cmc
out
in
aas
mov
cmc
cmp
push
fdiv
sahf
mov
gs
js
xor
(bad)
fwait
jle
mov
ret
mov
dec
jbe
loopne
cmps
test
fwait
aas
adc
pop
pop
mov
mov
mov
jne
lods
aas
add
push
push
xlat
push
or
dec
pop
adc
(bad)
sbb
shl
xor
xchg
fcomp
jg
cdq
ret
cdq
push
aad
sti
lods
fdiv
call
push
aaa
test
dec
in
pop
mov
xor
jno
ins
xor
aaa
dec
sbb
and
or
call
(bad)
test
inc
xor
dec
xchg
xchg
jl
cmp
add
call
fwait
pop
mov
cmp
or
mov
test
aaa
(bad)
shl
and
jmp
push
ja
retf
cs
mov
adc
scas
push
dec
js
hlt
and
pop
std
and
jne
out
jecxz
fisub
in
sub
dec
fsubr
mov
stos
adc
shr
xor
mov
inc
cwde
jg
cmps
int3
and
or
aaa
inc
dec
inc
inc
mov
mov
cmp
and
out
adc
sbb
sbb
out
xor
cdq
push
or
pop
or
add
(bad)
ins
mov
mov
cmp
sbb
jmp
push
add
enter
xor
push
mov
lds
lds
outs
stos
scas
ins
in
push
call
dec
loopne
int
mov
push
or
lock
push
sub
mov
cmp
mov
test
jmp
push
xchg
call
pushf
cmp
mov
lea
xor
push
fsub
pop
(bad)
int3
ror
outs
das
lea
ret
stc
pop
cmp
adc
and
sbb
pop
aaa
fisubr
cmc
mov
and
or
bound
xor
lods
cmp
rcr
push
clc
jle
mov
mov
mov
add
inc
xchg
sbb
jp
cmps
mov
xchg
iret
mov
(bad)
(bad)
jae
ss
int
nop
mov
ins
jae
fadd
push
add
jae
cmps
je
repnz
adc
popa
frndint
sbb
inc
and
ficom
sar
inc
lods
imul
cmc
popa
cmp
adc
addr16
sbb
xchg
rol
sub
shr
mov
pop
repnz
fdivr
adc
cmc
push
jae
push
mov
es
or
repz
sahf
movs
inc
fwait
shl
cld
xor
xchg
bound
jecxz
test
jmp
fwait
and
mov
push
lahf
imul
lahf
cli
mov
push
jo
sub
test
cli
into
or
nop
jmp
rol
enter
shl
icebp
xor
outs
and
sbb
out
pop
das
sub
push
popf
sbb
add
fisubr
sti
mov
jmp
call
(bad)
stos
dec
fdivp
cmps
leave
mov
pop
or
or
repnz
lods
sub
out
push
dec
fstp
cmp
adc
(bad)
dec
movs
lahf
xlat
js
data16
jle
xchg
or
adc
inc
rcl
imul
fdivr
jbe
pop
jns
or
cmp
mov
jbe
pop
dec
xor
(bad)
out
sub
movs
push
repz
enter
sub
(bad)
push
in
inc
addr16
mov
xchg
sbb
call
loopne
ror
cmp
call
lock
into
aam
retf
in
(bad)
cld
sbb
xchg
sub
and
or
(bad)
xor
js
inc
jbe
pop
add
pop
push
xor
arpl
cmp
rcl
popf
fidiv
jge
and
movs
mov
cwde
or
imul
pop
add
mov
pop
inc
pop
or
add
pop
adc
lahf
add
xchg
fwait
test
sub
rcr
mov
mov
mov
cdq
mov
adc
data16
and
in
jo
dec
mov
jge
fdivr
aad
or
iret
sbb
adc
fcom
outs
lahf
push
sar
pop
pop
xor
xchg
jl
push
jmp
fisub
mov
test
sbb
in
scas
imul
lods
imul
push
adc
out
jno
sbb
in
enter
sub
enter
test
lea
push
xchg
scas
cmc
cwde
dec
inc
nop
enter
xchg
fcomi
push
push
or
js
pop
sbb
(bad)
sbb
mov
mov
mov
test
or
pop
xchg
sub
(bad)
daa
mov
sub
pop
pushf
dec
dec
pop
jg
push
xor
loopne
mov
mov
cmps
shr
jne
xchg
das
outs
repz
xchg
dec
inc
cmps
sub
push
test
lea
and
inc
faddp
aaa
push
or
mov
xchg
inc
inc
jp
ficomp
dec
and
xchg
or
aas
xor
mov
xlat
cmp
outs
cmp
jmp
dec
inc
add
mov
push
jne
les
sbb
cwde
xchg
out
aam
push
sub
or
xchg
popf
pop
adc
adc
dec
push
sahf
clc
sbb
(bad)
push
add
push
and
cli
push
cmps
or
push
push
pop
outs
jge
mov
test
mov
sbb
mov
fwait
rcr
sub
mov
or
xchg
fdiv
jnp
and
scas
push
xchg
sbb
loope
mov
(bad)
mov
out
imul
mov
out
jmp
pop
jnp
adc
xor
inc
mov
mov
and
inc
sub
pop
out
mov
or
xor
cdq
lahf
aad
pop
push
fs
jmp
mov
cmp
sbb
nop
jo
int3
xchg
or
sbb
push
daa
pop
movs
jle
jns
mov
outs
enter
inc
xchg
or
outs
rol
sbb
pop
adc
xor
xchg
int
(bad)
aam
pop
cmp
sub
mov
fdivr
mov
ret
inc
sbb
push
add
and
dec
lahf
test
jp
shl
jns
dec
cmps
into
cmps
fs
lods
add
mov
xchg
and
or
std
lods
sub
cwde
pop
and
xor
scas
dec
sahf
pop
cmp
inc
out
test
aad
mov
mov
cmp
or
inc
aas
cmps
mov
add
pushf
jle
ds
dec
fsub
dec
int3
dec
addr16
mov
shr
pmulhw
pop
test
xchg
jg
icebp
mov
mov
sti
das
lock
mov
into
xor
xor
or
test
mov
sub
adc
lock
(bad)
iret
lock
adc
add
jp
outs
test
(bad)
mov
fs
xchg
iret
push
aas
stos
repz
inc
test
inc
mov
push
pop
jecxz
pop
sub
in
fcom
(bad)
inc
movs
je
pop
into
jge
pusha
xchg
push
mov
outs
xor
imul
dec
pusha
(bad)
xor
sub
or
retf
push
je
xor
cdq
dec
loop
jmp
sbb
js
scas
cs
xchg
mov
ret
mov
inc
push
xchg
xor
jne
pushf
mov
jae
out
jp
mov
mov
(bad)
enter
dec
jo
pop
cmp
(bad)
loop
xchg
cmp
sub
(bad)
shl
jne
jmp
sbb
cwde
mov
inc
mov
loop
lods
xchg
loopne
ret
int3
cli
add
sbb
out
inc
loopne
pop
(bad)
pusha
mov
jp
cmps
push
push
push
addr16
outs
outs
ret
cmps
mov
les
mov
test
xor
loope
ins
jno
jl
and
xchg
sar
lahf
das
movs
xchg
sahf
call
js
mov
mov
pop
inc
cmp
or
adc
fwait
xchg
sbb
sbb
inc
jge
add
(bad)
jno
pop
cmp
inc
xchg
dec
ja
mov
inc
inc
lods
mov
adc
jno
ins
adc
sbb
sub
int3
out
shl
popa
dec
or
fwait
or
je
mov
jmp
fst
psubsw
fld
icebp
sbb
cdq
mov
inc
or
daa
jnp
xor
sbb
stos
cmp
out
push
and
aaa
es
jmp
mov
or
mov
mov
ins
push
(bad)
aam
jl
outs
adc
xchg
lock
faddp
outs
leave
pop
or
cs
js
pop
inc
push
sar
ja
(bad)
dec
fst
test
ret
push
cmp
addr16
cmps
dec
sub
inc
scas
cdq
adc
imul
shr
movs
pop
push
fsub
mov
das
or
push
xor
rol
daa
mov
fsub
add
loop
jnp
jae
retf
jg
inc
int
(bad)
inc
add
nop
jns
int
mov
in
add
pop
inc
mov
inc
sub
lea
mov
std
outs
hlt
add
fnstsw
push
or
mov
(bad)
and
jmp
push
sbb
push
int
xchg
(bad)
fsubr
ror
xchg
mov
leave
retf
dec
push
popa
jno
ds
fidiv
test
fiadd
cmp
mov
std
push
sbb
pop
push
rcr
mov
push
pop
clc
sbb
xor
repz
inc
xchg
push
cwde
pop
jmp
jmp
in
in
(bad)
arpl
test
xchg
xor
push
mov
and
sub
out
push
cmp
jmp
jmp
lods
push
arpl
out
jmp
movs
jmp
sub
pop
out
call
out
test
add
iret
push
or
(bad)
lahf
mov
out
jne
jle
loope
aam
xchg
push
or
xor
and
adc
sbb
add
adc
sbb
dec
icebp
sbb
hlt
add
xor
sub
loope
cmp
ss
or
fnstsw
xchg
shr
and
lds
inc
add
and
lds
dec
(bad)
push
mov
ficomp
xchg
lods
adc
jae
xchg
xlat
shr
mov
and
ja
fwait
dec
out
loop
inc
fcomp
add
xchg
(bad)
sbb
aam
jle
push
shl
aaa
movs
into
or
rcl
sub
jmp
xchg
ds
xor
test
in
int3
jl
scas
in
inc
adc
and
mov
lea
in
add
mov
movntps
ins
xchg
pop
or
rcl
out
test
fnsave
jbe
mov
jno
push
or
xor
add
leave
adc
xchg
jg
xor
cmp
mov
xor
push
push
push
in
mov
sbb
xchg
mov
iret
loope
xor
add
jns
(bad)
call
sub
pop
outs
cmp
das
xchg
or
sar
jmp
sub
dec
test
xor
icebp
xor
loopne
imul
add
push
jnp
inc
gs
(bad)
push
xchg
adc
mov
jno
inc
pop
jl
mov
xchg
mov
fisub
dec
inc
fwait
pop
mov
inc
push
mov
adc
cmps
ins
iret
clc
ja
adc
retf
(bad)
xchg
cdq
sbb
sub
popf
dec
adc
pop
aad
xor
mov
stc
std
sbb
clc
movs
or
pop
ins
adc
adc
pushf
pop
mov
sbb
mov
clc
(bad)
lea
dec
xchg
aas
fisttp
push
add
dec
add
push
sub
cld
ins
cmp
sti
imul
mov
mov
adc
in
pop
jns
test
add
add
inc
sub
loopne
inc
xchg
push
dec
add
retf
pop
pop
xor
in
adc
inc
mov
je
xor
sub
adc
xchg
into
adc
hlt
add
mov
mov
push
pop
sbb
stos
pop
fcom
sub
in
mov
adc
dec
mov
pop
jg
adc
xor
push
call
xchg
popf
sbb
xchg
mov
jnp
mov
dec
jae
sahf
cmp
ror
outs
jmp
movs
aas
test
shl
stos
arpl
add
hlt
or
pop
bswap
or
add
xchg
and
sti
inc
shl
mov
add
or
icebp
or
jb
add
inc
and
xor
sub
inc
mov
int
fimul
mov
mov
clc
cmp
outs
lods
aas
mov
mov
dec
(bad)
out
test
mov
inc
mov
daa
dec
dec
outs
movs
jg
dec
cmp
pop
daa
test
fsubr
popf
shl
daa
xor
lea
jge
xchg
movs
(bad)
iret
lea
add
cmp
xchg
js
push
adc
sahf
das
dec
ret
movs
je
(bad)
retf
cmp
sbb
or
adc
cmps
xor
(bad)
jmp
rcr
fld
int
jmp
pop
mov
add
xchg
mov
dec
lods
inc
xor
hlt
adc
int3
fmulp
ror
jnp
or
dec
pop
ins
xchg
das
fcmovu
retf
(bad)
(bad)
jmp
xlat
in
mov
fs
mov
jecxz
sbb
jmp
adc
or
jb
arpl
bound
cwde
loopne
inc
inc
push
fidivr
(bad)
push
enter
push
adc
mov
or
pusha
imul
pop
ret
stc
or
inc
out
hlt
add
inc
pop
cld
js
lods
lods
lahf
adc
jmp
ins
sub
icebp
xchg
aad
mov
js
cli
daa
push
bound
es
jge
jne
lds
movs
sar
test
mov
mov
jns
pop
adc
xchg
sbb
cs
int3
sbb
mov
mov
cwde
inc
idiv
rcr
inc
mov
inc
ins
adc
sbb
xchg
ds
clc
stc
lock
push
scas
dec
cmp
xlat
leave
xchg
scas
test
or
sbb
adc
les
xchg
ins
mov
sahf
jnp
pop
mov
das
or
add
jae
ss
sahf
hlt
dec
xor
mov
fild
aad
lea
call
neg
jp
imul
scas
leave
push
add
mov
or
aam
mov
fld
icebp
adc
cmp
and
movs
xor
xchg
xchg
inc
jmp
(bad)
out
test
adc
in
pop
shl
add
mov
pop
shl
mov
scas
stos
mov
jae
test
inc
int3
or
xor
cmp
arpl
imul
push
mov
sbb
jnp
cmps
aaa
in
mov
cmp
aas
pop
cmp
mov
test
and
xor
jns
hlt
add
mov
push
ret
cmp
inc
scas
je
in
sbb
pop
pop
nop
into
into
push
and
dec
mov
sbb
test
jno
jmp
pop
mov
popa
(bad)
das
jge
sub
shl
cdq
pop
pusha
mov
movs
lahf
pop
fsub
mov
mov
xchg
in
loopne
in
jg
sub
push
retf
jnp
mov
jmp
xchg
rol
mov
or
sbb
xchg
dec
push
test
ja
ret
mov
movs
test
stc
mov
or
fs
mov
xchg
xor
jb
sti
loop
fadd
mov
adc
sub
adc
js
sbb
leave
or
outs
add
ss
dec
or
xor
rcl
out
add
sub
cli
sbb
fwait
pop
mov
dec
cmp
arpl
cmp
add
jle
add
pop
mov
sub
and
jg
push
add
and
rcr
sar
ret
int
movs
pop
sbb
adc
ss
stos
pop
or
mov
data16
and
into
fwait
mov
adc
sahf
xchg
clc
shl
mov
pop
js
dec
js
iret
imul
imul
icebp
cld
retf
hlt
ja
mov
adc
mov
cmp
out
and
std
shl
pop
jg
ficom
sub
mov
dec
mov
push
lock
dec
stos
inc
(bad)
cmp
xor
xor
dec
mov
push
imul
jge
adc
mov
call
(bad)
push
inc
inc
std
mov
sbb
mov
inc
pop
outs
xlat
aaa
and
mov
(bad)
das
data16
push
fadd
iret
fsubr
sub
jecxz
out
inc
pop
mov
movs
or
push
jge
mov
xchg
gs
xchg
pushf
or
jge
push
pusha
mov
xchg
out
sub
pop
dec
enter
imul
(bad)
inc
or
mov
clc
push
clc
jae
(bad)
movups
push
or
fisub
mov
pop
retf
xor
arpl
jae
wrmsr
mov
lahf
dec
pop
push
cmp
movs
cmp
mov
out
push
push
xchg
or
ja
sahf
jle
fcomp
(bad)
cld
into
stc
push
out
ins
bound
sub
(bad)
jp
stos
ret
add
or
dec
add
mov
repnz
das
ja
dec
fwait
mov
add
movs
jle
lods
test
add
mov
sbb
mov
fwait
adc
loop
mov
scas
jb
or
inc
lods
not
dec
pop
in
mov
ret
cmp
push
mov
or
pop
xchg
push
mov
add
jnp
lahf
outs
jle
lds
addr16
pop
outs
xor
jp
add
add
cmp
push
shl
and
xor
jle
push
inc
pop
add
in
adc
mov
aaa
pop
cmp
push
push
je
test
(bad)
jmp
repz
mov
ins
pusha
movs
out
ins
or
cs
pop
enter
mov
rcr
mov
push
imul
std
sar
mov
ins
dec
jae
repz
mov
xchg
fucom
dec
add
push
int
lds
mov
and
mov
xor
mov
sub
fsubr
pop
pop
push
sar
fwait
stc
ja
imul
lock
lods
lods
jns
ins
movs
dec
and
ret
jmp
inc
ja
lds
out
push
mov
mov
inc
jmp
enter
push
rol
add
retf
pop
xor
sbb
jbe
sub
add
lock
fsubr
popf
imul
int3
retf
push
xlat
iret
icebp
mov
sub
jmp
cs
mov
dec
push
ins
test
cmp
pop
sbb
(bad)
xor
div
ins
xchg
pushf
sar
scas
mov
jmp
out
int3
add
dec
adc
adc
ss
movs
mov
sbb
(bad)
lock
xlat
int
pushf
dec
mov
jl
jp
mov
cmp
in
push
adc
xor
mov
mov
dec
xchg
imul
jo
shl
cmp
jg
sbb
adc
xchg
mov
push
sbb
mov
xchg
stos
or
xchg
jp
push
clc
or
stc
std
mov
sub
lahf
jg
mov
rcr
cmps
fwait
pop
jns
xchg
cmp
shl
cmp
adc
add
scas
sub
inc
test
push
ins
(bad)
fwait
and
or
mov
add
retf
in
sbb
jecxz
inc
(bad)
xor
aaa
call
in
pushf
inc
push
xchg
rol
sar
out
(bad)
mov
lods
adc
loopne
enter
in
pushf
push
fsubr
and
bound
mov
je
push
sub
add
in
dec
jge
shr
pop
adc
or
(bad)
add
sub
adc
push
mov
lds
cmp
sbb
cmp
and
mov
mov
call
daa
sub
int
mov
imul
daa
sub
arpl
(bad)
cld
int
jo
aam
mov
loope
(bad)
cli
mov
sub
dec
inc
push
jmp
inc
push
retf
pop
sub
sbb
les
or
mov
test
mov
mov
push
popa
test
mov
sub
je
xor
and
push
adc
shl
and
dec
fisttp
sahf
test
fadd
mov
shl
stc
jge
sub
or
and
cmp
and
ins
test
arpl
inc
push
sti
loop
pop
push
(bad)
sbb
lock
fucomp
adc
stos
mov
popa
hlt
in
push
mov
add
loope
pop
add
xchg
jmp
push
inc
mov
xchg
mov
dec
test
shl
in
aas
shl
loope
ins
test
ror
cld
dec
fucomp
lea
jle
ja
in
jbe
mov
jno
pop
jmp
movs
leave
pushf
mov
pop
int3
mov
es
inc
out
rcl
mov
inc
imul
test
jmp
dec
mov
mov
mov
dec
rol
sbb
call
dec
shl
fnstsw
sbb
pop
pop
jae
xchg
out
mov
shr
not
aas
lds
inc
dec
pop
add
(bad)
(bad)
rcl
xor
cdq
mov
lods
daa
jns
fmul
out
mov
jmp
sar
daa
pop
add
dec
outs
rcl
leave
lahf
into
or
sub
stos
stos
xchg
test
bound
popa
cdq
cmps
cdq
push
pop
movs
push
out
inc
sub
xchg
push
sbb
and
cmc
movs
ret
pop
or
js
adc
imul
repz
mov
mov
lds
daa
jmp
(bad)
lods
loope
dec
inc
mov
fwait
(bad)
(bad)
mov
into
mov
push
aam
pushfw
xor
xor
repnz
sub
(bad)
test
das
push
retf
xchg
jmp
imul
or
mov
xor
out
push
lds
mov
dec
iret
pop
xor
and
call
leave
push
aad
daa
es
inc
cli
dec
sub
push
std
sbb
add
lea
mov
aad
sub
cmp
push
sub
mov
iret
push
(bad)
pop
push
lahf
ret
jnp
popf
aaa
xchg
xchg
sbb
ins
push
js
xchg
mov
mov
movs
jbe
push
mov
cmp
movs
stc
fs
dec
mov
mov
hlt
rcl
mov
fs
hlt
int
or
dec
test
test
sub
daa
sti
or
bswap
sub
jmp
(bad)
rcr
mov
jne
mov
add
mov
inc
mov
pop
sahf
out
in
mov
popf
pop
and
pop
and
push
nop
pop
scas
adc
ret
les
jae
push
popa
popa
(bad)
aad
xchg
xor
xor
mov
inc
jmp
adc
inc
fcomp
add
dec
and
mov
rcr
out
pop
repnz
je
xor
push
adc
pop
push
lock
mov
pop
xor
retf
aaa
mov
stos
out
mov
in
sub
sbb
inc
cmp
push
mov
rcl
cmps
popa
or
xor
or
test
and
lock
ins
and
mov
push
mov
sti
jne
sbb
sbb
(bad)
in
sbb
(bad)
cmp
in
in
popf
push
arpl
or
mov
xor
push
pop
js
jge
sbb
mov
call
add
cmc
push
ds
popf
mov
loop
ins
mov
pop
jmp
dec
dec
cmp
push
add
and
outs
imul
sbb
sub
sub
xchg
rcr
stos
inc
repnz
in
push
scas
jmp
mov
jae
dec
popf
(bad)
sbb
and
in
fwait
mov
loop
cmps
lods
or
push
clc
push
call
mov
in
das
sub
leave
sub
cs
and
jecxz
fisttp
xchg
cmp
pop
mov
xor
repz
pop
mov
imul
mov
push
iret
xchg
jmp
inc
test
fmul
shr
in
and
(bad)
xor
jbe
aad
lock
or
or
cli
js
jg
dec
mov
push
pushf
cmp
jb
pop
xor
jne
lahf
test
mov
xor
sahf
(bad)
push
arpl
adc
mov
iret
(bad)
sub
das
nop
pop
inc
dec
jmp
popa
mov
pushf
enter
cmp
xchg
xchg
jbe
mov
sbb
sub
mov
ror
mov
mov
fisttp
mov
mov
sub
inc
mov
mov
mov
lea
or
movs
aam
cmps
stc
pushf
inc
push
jmp
jge
mov
bound
out
pop
int
ins
sbb
and
pop
jb
or
cdq
or
push
jle
jg
je
fabs
popa
(bad)
test
push
out
jbe
ret
rcr
(bad)
and
stos
cld
pop
push
xchg
pop
and
rol
mov
int3
loopne
out
test
fucomi
xor
cmp
(bad)
cld
mov
pop
cmp
inc
call
loop
pop
jl
xlat
push
dec
mov
mov
mov
icebp
fst
adc
xlat
xchg
ins
jecxz
(bad)
xchg
frstor
mov
clc
add
xor
or
clc
loopne
jno
dec
stc
adc
sbb
and
cmp
stos
mov
sub
adc
inc
add
sub
adc
jns
push
cmp
dec
xchg
das
movs
neg
arpl
sub
or
dec
mov
dec
repnz
sub
or
push
retf
jae
sub
shl
xchg
add
ja
mul
cmp
dec
mov
outs
fadd
jmp
mov
pop
shr
daa
mov
std
(bad)
daa
inc
setle
test
in
push
add
mov
pop
pop
jb
(bad)
div
sbb
fist
mul
popf
push
inc
sub
jmp
mov
dec
mov
out
mov
sbb
in
fwait
call
push
sbb
mov
addr16
jmp
in
out
mov
scas
inc
stos
cld
std
cs
xchg
jecxz
popaw
cmp
stc
retf
adc
cmc
mov
jmp
inc
test
dec
rcl
jb
mov
je
mov
loop
jle
in
inc
cmp
cmp
(bad)
aad
pop
pop
popf
call
xchg
or
mov
mov
push
into
mov
cmp
adc
push
sti
outs
jne
and
or
loope
(bad)
cwde
ds
repz
push
cmp
pushf
shl
outs
pop
scas
mov
scas
out
pop
pop
sub
or
push
out
test
and
in
rcr
cmps
fwait
movs
jg
and
mov
in
and
cmp
out
in
lahf
jnp
fldenv
push
jnp
lock
test
add
cmps
sub
std
pop
push
lods
ins
adc
fadd
push
jl
cmp
sub
sbb
fdiv
inc
mov
pop
jg
cs
jecxz
mov
jmp
xchg
push
mov
pop
adc
inc
and
mov
xchg
xor
push
jmp
rcr
add
pop
inc
push
mov
xchg
pop
aaa
inc
mov
push
lahf
mov
aas
and
push
mov
push
adc
jmp
ds
push
inc
inc
sbb
or
mov
aas
jle
(bad)
sbb
lods
scas
push
stos
fwait
inc
pop
and
fdiv
lahf
jbe
mov
inc
cmp
and
outs
mov
pop
sub
pushf
imul
clc
(bad)
popf
xor
push
xchg
repnz
das
gs
jno
xor
mov
cmp
jnp
add
lods
add
repnz
push
push
pop
xchg
cmp
das
push
mov
push
mov
xlat
(bad)
lock
icebp
dec
cmc
mov
push
xor
cmp
and
in
jge
retf
cmp
scas
lock
mov
shl
jne
xchg
or
cwde
sub
sub
push
jmp
mov
inc
(bad)
into
mov
jbe
pop
mul
pop
dec
pop
xchg
ret
mov
pop
data16
in
dec
in
mov
enter
cmp
sbb
dec
fiadd
inc
cmp
mov
and
rcl
push
cmps
mov
scas
cmc
shl
std
mov
sub
xor
pushf
js
aas
(bad)
xor
call
pop
push
ds
mov
xor
inc
sbb
(bad)
icebp
inc
add
ficom
dec
mov
cmp
pop
xchg
push
stc
(bad)
daa
mov
or
sub
inc
jo
sbb
jne
test
loope
inc
pusha
leave
sub
push
rol
enter
addr16
xor
jg
jns
pop
lods
imul
ins
mov
add
jo
push
mov
xor
rol
push
jmp
retf
popa
inc
fidivr
fist
mov
or
adc
jno
retf
sbb
mov
pop
xchg
jo
movs
sbb
clc
mov
inc
ins
add
or
inc
or
call
pusha
xor
(bad)
je
pop
js
dec
pushf
aas
cmp
xchg
iret
adc
pop
(bad)
fldenv
add
xor
int3
rol
xchg
pop
in
sbb
lods
in
icebp
rcr
test
arpl
and
std
and
dec
inc
(bad)
xchg
xchg
lods
nop
lea
sbb
mov
cmp
int3
mov
add
retf
mov
sub
sbb
loopne
xchg
in
rol
inc
mov
or
lock
mov
into
fdivp
shl
shl
shr
mov
add
cmps
or
shl
mov
pusha
(bad)
adc
cmp
mov
adc
mov
pop
push
add
push
add
jle
push
aaa
push
iret
stos
pop
dec
ins
xor
(bad)
in
mov
xor
xchg
mov
loope
dec
movs
mov
jg
push
(bad)
data16
jmp
push
xchg
iret
das
aad
push
lods
ins
xchg
jmp
rcr
sbb
xchg
mov
ret
rcl
fbld
inc
arpl
cmp
dec
in
push
mov
movs
imul
pusha
cmp
xchg
pop
mov
mov
sbb
movs
xchg
aam
pop
lods
loop
push
lock
popa
std
call
fist
cmps
jne
push
xchg
dec
cli
popa
lds
push
int
dec
xor
cld
cmp
shl
js
and
aam
nop
pop
mov
sub
pop
lds
add
jns
popf
lods
push
add
dec
call
mov
movs
mov
movs
or
arpl
fst
movs
outs
fcomp
jmp
movs
test
add
aad
loop
call
mov
adc
sbb
sub
ja
and
out
pop
xor
jecxz
pop
mov
frstor
xor
out
sub
pushf
sub
shl
jge
mov
sar
push
adc
or
es
(bad)
in
(bad)
loop
hlt
xchg
mov
mov
lds
(bad)
pop
and
adc
loopne
pop
sbb
xchg
mov
mov
mov
xor
cld
sbb
(bad)
jb
sbb
or
stc
xchg
jl
fs
loope
and
enter
cmps
hlt
shr
ss
neg
mov
jmp
mov
leave
mov
xchg
xchg
daa
dec
pop
out
jb
mov
pop
mov
ja
adc
jnp
int
in
stos
cmps
sub
dec
mov
push
nop
push
popf
call
stos
push
cdq
(bad)
jae
pop
push
popa
mov
cs
push
mov
sbb
xor
bound
mov
adc
cmp
cld
dec
ja
nop
xor
push
cmp
xchg
lods
mov
sub
mov
xor
es
lods
mov
adc
mov
xchg
mov
or
cmc
stos
rol
adc
movs
call
arpl
ret
jg
mov
mov
hlt
inc
adc
mov
inc
or
mov
jle
jecxz
test
fsubr
and
push
pop
ret
dec
fucomip
fdivr
adc
mov
loopne
cmp
cmp
je
dec
xchg
scas
in
lea
imul
inc
mov
lods
push
retf
mov
cld
gs
mov
cmp
test
push
lods
pop
sbb
fpatan
mov
(bad)
cli
inc
jb
mov
xchg
push
add
aam
adc
cmp
or
inc
ins
cwde
mov
shl
inc
clc
daa
test
icebp
dec
mov
cmps
inc
bound
sub
push
movs
xor
in
xor
mov
in
fwait
out
jo
(bad)
mov
mov
ins
add
ja
retf
retf
fcmovnbe
imul
push
adc
sbb
adc
popf
mov
xchg
loop
je
sbb
xchg
repnz
xchg
movs
xchg
ss
mov
dec
cs
loop
cmps
jmp
xchg
cmps
out
push
jecxz
inc
das
sub
add
ins
sbb
xchg
test
test
sub
stos
fdiv
inc
cmp
add
cmp
mov
jbe
dec
mov
les
xor
retf
pop
jnp
or
sbb
jns
adc
call
aad
int3
jp
mov
mov
stos
gs
cs
push
xchg
jno
div
inc
fisubr
sbb
adc
icebp
(bad)
out
jns
mov
test
push
mov
pop
imul
enter
cli
cld
dec
bound
jne
test
aam
mov
(bad)
rcl
clc
xor
movs
xchg
adc
mov
push
pop
sahf
pop
sahf
pop
out
push
push
lods
cmp
rcr
sub
jge
pop
cmc
mov
out
push
loop
inc
pop
mov
push
out
jle
lods
adc
mov
int3
adc
add
outs
xor
sub
jae
loopne
push
push
cdq
or
inc
jo
daa
popf
cwde
stos
pop
scas
add
shr
leave
ret
dec
dec
jecxz
les
mov
add
pushf
out
jg
mov
fldcw
(bad)
push
xchg
adc
or
int
inc
sub
sub
call
cwde
test
dec
sbb
imul
dec
and
movs
pop
ss
mov
iret
mov
or
call
aas
imul
out
add
pop
adc
ffreep
es
dec
xor
imul
mov
(bad)
cmp
or
into
add
sub
leave
test
movs
add
xor
and
sub
aaa
int
inc
xchg
or
inc
and
adc
test
xchg
cmp
out
rcr
mov
cmp
sub
jg
lods
or
cmp
push
pop
or
mov
cmps
stos
jb
fcomp
daa
cmp
jae
das
inc
pop
lods
push
outs
test
(bad)
enter
mov
sbb
popf
jae
inc
inc
cmps
mov
enter
icebp
leave
stos
jae
mov
mul
mov
cmps
in
inc
push
adc
outs
or
js
xor
push
retf
mov
pop
shl
std
fs
mov
sti
retf
(bad)
(bad)
xchg
mov
jge
shr
jecxz
cmp
inc
xchg
neg
mov
outs
xchg
mov
daa
xchg
ins
rcl
lock
ror
lahf
push
leave
out
js
stos
test
popa
js
jnp
imul
iret
in
scas
push
ficom
mov
test
data16
sbb
jge
repnz
cmps
cmp
jno
gs
lods
in
push
(bad)
xor
cmps
iret
cmp
mov
sub
mov
daa
dec
dec
and
lahf
sbb
(bad)
leave
fwait
dec
dec
test
pushf
test
add
lds
push
xchg
or
lock
(bad)
(bad)
cmps
xchg
sbb
sub
fimul
mov
(bad)
xlat
jb
sub
mov
(bad)
add
mov
lds
xor
aaa
inc
aad
stc
mov
arpl
int
push
addr16
sub
mov
mov
pop
cmc
sti
mov
stos
push
xor
mul
push
xlat
jg
fs
xchg
mov
xor
outs
pop
adc
enter
jmp
cld
cmp
test
inc
mov
dec
push
or
sbb
xor
(bad)
adc
inc
add
inc
jecxz
out
mov
inc
jecxz
out
lahf
sbb
loope
sar
pop
xchg
inc
scas
rcr
stc
int3
push
pop
nop
daa
push
cmp
pop
mov
shl
sbb
xchg
loop
sti
call
ret
out
inc
jecxz
retf
pop
adc
pop
std
jne
sbb
(bad)
in
sbb
jns
dec
push
dec
xchg
mov
adc
jbe
enter
pop
mov
adc
cmps
cmp
test
mov
(bad)
fcom
out
loopne
jle
std
inc
cmp
ja
sub
inc
lahf
mov
retf
xor
push
cwde
call
pop
jbe
pop
and
push
sahf
xlat
jne
add
sbb
scas
xor
and
es
movs
lea
(bad)
xlat
shl
ja
jmp
adc
sub
or
mov
push
inc
cmp
test
mov
mov
stc
in
retf
sub
jae
fisttp
out
cmps
aaa
arpl
inc
mov
in
stc
push
icebp
stos
sbb
ins
add
mov
fwait
cwde
(bad)
addr16
dec
xor
ror
and
pusha
daa
jg
sahf
cld
call
mov
js
out
jmp
add
pop
popa
mov
jmp
ret
xchg
mov
sub
xlat
push
jb
sbb
jge
retf
popa
rol
shr
(bad)
push
cmp
dec
aam
fsubr
int
inc
mov
adc
jmp
sbb
cli
jge
xor
pop
stos
or
cmp
(bad)
push
or
or
bound
ja
mul
dec
mov
or
std
std
jge
push
pop
loopne
dec
cs
push
mov
(bad)
mov
idiv
mov
daa
mov
outs
add
ret
cmp
lods
repnz
xchg
mov
or
repz
imul
or
dec
fstp
push
out
mov
in
bound
ss
hlt
ds
add
and
jl
mov
cmp
inc
or
(bad)
cmp
ss
out
pop
xchg
lods
ja
sub
in
sub
movs
inc
pop
ins
xor
into
sahf
add
inc
or
in
mov
inc
inc
int
pushf
pop
test
lods
mov
and
inc
bound
jp
inc
mov
push
aad
mov
sub
jmp
adc
lods
test
pop
mov
or
jns
jg
add
mov
adc
leave
out
jbe
call
inc
xchg
test
js
mov
mov
mov
je
mov
jno
call
cmps
or
repnz
hlt
dec
cmp
add
(bad)
test
repz
dec
fbstp
dec
xor
jmp
ins
(bad)
cmp
popf
ret
mov
jno
bound
sbb
imul
push
retf
stos
sub
sub
fdivr
bnd
mov
push
fisttp
sahf
mov
adc
movs
loopne
enter
jne
(bad)
out
inc
push
xor
xchg
popa
sub
pop
inc
ror
ins
jae
and
ret
loopne
xchg
call
cmps
push
stc
xchg
sub
daa
les
push
push
xchg
cli
scas
sbb
or
shr
xor
inc
pop
popf
push
das
dec
imul
push
lock
das
cmp
int
xchg
xchg
or
fsubr
dec
xlat
push
pop
mov
jnp
inc
mov
int3
(bad)
movs
movs
imul
ja
xchg
pop
stos
ins
jp
pop
mov
xor
fcomip
jmp
cmps
call
retf
psubsw
jbe
and
shr
icebp
repnz
mov
ret
cwde
arpl
ins
sbb
fcomp
sub
jp
fstp
jl
mov
inc
inc
cmp
fistp
xchg
add
pop
jl
out
mov
and
bswap
push
xor
inc
(bad)
inc
ss
aaa
or
jnp
je
push
mov
sahf
fild
not
pop
sbb
mov
jns
add
fidiv
mov
sub
mov
or
mov
mov
inc
and
and
rcr
iret
xor
push
stos
rol
out
sbb
adc
imul
or
jl
jmp
cmps
dec
fwait
dec
stos
movs
gs
out
jle
aaa
jnp
aas
loope
les
in
xor
mov
xchg
pop
repz
xor
mov
cld
inc
rcl
inc
nop
into
add
adc
test
push
jle
jae
fdiv
fldln2
pop
mov
aaa
sub
push
out
lock
mov
xor
mov
(bad)
out
add
pop
dec
pop
push
xor
inc
fst
sbb
push
sub
retf
cld
adc
dec
nop
int
xchg
cs
in
push
dec
sti
adc
mov
sbb
sahf
idiv
in
mov
mov
test
adc
lods
add
lods
mov
xor
imul
stos
ins
mov
out
mov
sub
lock
push
inc
pusha
push
inc
repnz
inc
fwait
ss
cmp
rcl
call
push
movs
xor
mov
push
in
pop
mov
addr16
xor
adc
cdq
xor
jecxz
xor
scas
dec
jno
and
ds
pop
loop
call
pusha
inc
cmp
hlt
dec
aam
jno
fisttp
rcr
popa
pop
mov
cmp
mov
neg
loop
aam
imul
cld
(bad)
mov
jb
push
sub
ret
pop
jae
cmp
add
les
mov
mov
mov
xchg
(bad)
sbb
jp
stos
mov
daa
repnz
cmp
jo
jae
cmp
cdq
sahf
addr16
push
cmp
mov
sti
mov
sub
(bad)
out
inc
xchg
sbb
popa
xchg
pop
sub
inc
or
and
pop
xor
(bad)
pop
dec
sbb
call
outs
push
(bad)
cmp
clc
pop
into
mov
jns
cmp
stos
cld
cli
or
mov
push
xchg
jmp
jbe
or
pop
and
and
push
fisub
std
and
jle
fwait
sub
sbb
das
push
into
push
pop
jae
xchg
or
cli
push
add
pop
and
rcl
cwde
mov
fsub
adc
pop
mov
adc
add
fsub
(bad)
xchg
xor
adc
rol
xor
out
loopne
mov
int
mov
inc
ror
xor
test
xchg
or
idiv
int
xchg
test
inc
leave
xchg
(bad)
xor
or
cmp
pop
aaa
jae
stc
push
fild
mov
push
add
dec
(bad)
retf
mov
aaa
icebp
jae
xchg
and
push
add
xchg
outs
mov
cmp
fsubr
mov
push
xor
out
aad
psllq
imul
mov
cmp
xor
in
mov
xor
jle
daa
mov
inc
shl
enter
add
hlt
lods
retf
mov
xor
xor
inc
xlat
mov
mov
lea
push
xchg
les
push
or
xchg
xchg
jno
mov
push
mov
xchg
push
out
sahf
and
mov
popa
je
or
xlat
xor
das
jbe
gs
or
in
fistp
mov
or
and
dec
or
jns
fs
out
mov
xor
xchg
or
daa
mov
mov
push
pop
std
stc
rcr
shr
lock
or
pop
rcr
jge
mov
scas
sub
pop
xor
add
push
pop
mov
sahf
cmp
push
xchg
xchg
shr
(bad)
or
imul
fsubr
sub
add
xor
cmc
cli
mov
mov
je
jno
das
shl
pop
mov
dec
pop
jle
data16
cmps
arpl
sti
movs
fldenv
dec
mov
scas
sahf
(bad)
dec
movs
dec
inc
test
push
or
scas
out
xor
test
dec
adc
rcl
push
xchg
mov
js
(bad)
dec
cmp
lock
push
push
shl
xor
push
pop
dec
push
mov
icebp
fwait
test
cdq
dec
sbb
sbb
push
ret
loopne
scas
inc
and
cmp
push
sbb
arpl
out
add
in
sbb
aaa
pop
cmp
dec
push
cs
ss
and
inc
leave
mov
stos
iret
hlt
xchg
sbb
mov
stos
add
xor
out
(bad)
mov
push
test
add
mov
je
mov
mov
inc
add
pop
cmp
in
int
sub
inc
push
stc
xlat
jmp
adc
xchg
(bad)
fidiv
out
cmps
int
xchg
mov
add
cmp
aam
cli
ins
fstp
out
(bad)
in
iret
mov
in
ins
dec
adc
inc
cdq
xchg
add
ds
xchg
loop
push
hlt
int
call
or
xor
sbb
and
mov
call
jmp
mov
pop
fwait
cmps
xor
les
pop
das
test
lods
bound
aas
cmc
(bad)
mov
xor
inc
mov
aas
mov
mov
lods
push
mov
movs
mov
jnp
cmp
lods
pop
inc
sub
popf
pop
pop
stc
lea
cmp
test
dec
jp
out
adc
int
hlt
mov
xchg
inc
cmp
jecxz
mov
jo
pop
aam
lahf
mov
leave
push
xchg
mov
push
sbb
inc
outs
loope
(bad)
(bad)
mov
jg
fsub
xchg
je
sbb
imul
inc
add
das
mov
dec
jno
mov
add
mov
mov
inc
rcr
mov
sbb
mov
and
cmp
cmp
mov
jl
pop
fsubr
rcr
mov
dec
cmp
cmp
sbb
loope
(bad)
push
lock
push
imul
push
xchg
out
(bad)
fdivp
jecxz
pop
fisttp
scas
push
stc
in
es
adc
dec
idiv
mov
adc
loope
dec
sti
(bad)
pop
dec
sub
cmc
push
(bad)
mov
imul
inc
out
popf
test
add
shr
push
mov
sahf
cmp
out
inc
mov
and
xor
cli
nop
test
iret
clc
mov
push
pusha
data16
jo
mov
fistp
mov
mov
imul
sbb
xchg
jmp
push
loope
loopne
adc
enter
dec
jg
out
xchg
(bad)
inc
xchg
mov
hlt
jmp
and
sbb
scas
repz
jmp
fmul
jle
daa
ds
sbb
int3
movs
mov
movs
and
sub
je
scas
jl
fiadd
sar
scas
mov
aam
sar
test
enter
retf
data16
pop
neg
push
inc
mov
outs
xchg
sub
xor
cli
test
adc
aas
cmp
ins
dec
sub
xor
cmps
sti
test
mov
and
inc
xchg
mov
pop
mov
mov
fst
test
sub
js
and
in
f2xm1
sub
inc
push
imul
xchg
daa
(bad)
pusha
popf
xor
imul
sbb
add
mov
imul
mov
lds
mov
mov
jmp
adc
shl
les
pop
jmp
fisttp
call
hlt
pop
or
std
pop
aas
or
add
ret
adc
adc
mov
sub
aaa
ss
int3
push
clc
add
sti
dec
xlat
mov
shl
sbb
cld
pop
out
fadd
jg
sbb
inc
cwde
pop
cmp
sbb
outs
movs
sti
mov
and
stos
ss
sbb
je
push
sbb
cmp
jnp
dec
leave
cmp
rcr
(bad)
mov
cmps
jl
outs
jp
mov
das
(bad)
mov
mov
and
pop
mov
lods
lahf
sub
div
pop
dec
jp
mov
sub
clc
adc
shl
dec
sub
loope
mov
push
call
ficom
scas
jge
mov
sbb
not
push
test
jno
pop
popa
mov
cmp
cmp
push
push
enter
mov
pop
add
push
and
test
test
loopne
hlt
mov
js
xchg
push
pop
adc
ret
inc
sub
jecxz
adc
inc
dec
jb
stc
sub
and
jle
jbe
mov
out
icebp
dec
inc
fsubr
movs
sahf
add
jp
or
or
dec
(bad)
lock
fucomi
push
fbld
add
inc
adc
leave
in
ror
shl
and
xor
int3
int
mov
cmp
cmp
add
xor
mov
jbe
movs
jns
push
jae
push
push
dec
xchg
sub
adc
xor
mov
fiadd
inc
lock
pop
cmp
stos
mov
mov
cmp
daa
mov
addr16
push
and
cmp
inc
pop
shl
mov
adc
test
(bad)
repz
gs
test
lea
shl
icebp
or
add
fisttp
push
arpl
fiadd
cmc
mov
in
test
fwait
sbb
ds
xchg
xchg
rol
inc
mov
vcvtss2sd
adc
fnstenv
and
ror
fdiv
jne
jge
call
ror
icebp
icebp
pop
fmul
sahf
pushf
push
sub
pop
jae
or
dec
inc
test
or
cld
imul
or
cli
sbb
inc
sbb
mov
in
cmp
push
push
jle
iret
dec
dec
xchg
int3
xchg
pop
fcomp
pop
lock
mov
into
pop
or
adc
mov
mov
out
push
lahf
sar
imul
rdpmc
outs
arpl
shl
push
and
xchg
repz
addr16
add
push
fisub
xchg
mov
fcmovnbe
cmp
mov
xor
xchg
cli
add
push
or
dec
in
in
es
sub
out
add
in
adc
mov
mov
xchg
mov
jl
ficomp
pop
inc
idiv
enter
mov
lock
rcl
inc
jmp
clc
xchg
movs
std
test
cmp
cmp
out
dec
xor
cmps
int3
add
xchg
into
and
sub
push
iret
ror
add
repnz
adc
push
cld
out
mov
stos
out
test
inc
sti
jns
fwait
or
or
sbb
dec
pop
sbb
sti
fsub
push
sbb
jne
ror
sbb
mov
mov
push
in
leave
cmp
push
into
ret
shrd
outs
outs
inc
retf
dec
push
cs
(bad)
adc
dec
out
inc
in
mov
fsubr
push
pop
rcr
xlat
mov
sub
in
ret
lahf
jnp
mov
add
dec
xchg
(bad)
out
mov
cmps
jnp
and
jl
cmp
stc
mov
mov
outs
shr
push
inc
lods
mov
add
hlt
nop
pusha
pop
(bad)
jecxz
mov
int3
add
mov
jae
sub
(bad)
out
pushf
cdq
jp
sub
mov
cmps
aas
subps
mov
jnp
sub
retf
into
cmps
xchg
and
enter
mov
cmp
out
mov
xchg
bnd
(bad)
xor
jbe
outs
(bad)
mov
out
and
adc
dec
data16
mov
mov
xor
int
push
(bad)
xchg
dec
inc
test
out
pusha
imul
adc
out
movs
inc
xor
retf
and
sar
in
xlat
dec
pop
dec
imul
cmp
cmp
int
mov
cld
ret
scas
xor
xchg
arpl
das
jne
rcr
pop
scas
adc
fsubrp
test
lea
test
and
sbb
movs
mov
(bad)
(bad)
mov
xor
cmp
jnp
int3
inc
das
stos
jmp
out
fld
call
xchg
jg
mov
test
push
cmp
jmp
add
adc
jecxz
mov
pmaxub
mov
sub
or
xlat
jge
std
cwde
xchg
pusha
sub
jnp
(bad)
loop
push
rcl
add
loope
push
dec
jge
inc
xchg
xchg
jb
out
jns
inc
retf
cmp
retf
cdq
add
inc
shr
stos
call
fld
test
sub
sbb
mov
push
inc
ror
jns
fldcw
inc
jg
sbb
cmp
movs
imul
(bad)
mov
mov
cmps
leave
mov
adc
(bad)
aam
movs
aaa
loop
fs
dec
sub
add
pop
test
jp
cmps
or
js
sbb
jnp
xchg
scas
dec
scas
stos
sub
cmps
pop
add
les
xchg
jecxz
jns
enter
es
ficomp
xchg
imul
mul
frstpm(287
xlat
dec
jno
pop
jecxz
push
xchg
mov
cwde
ins
stc
out
imul
ret
retf
mov
inc
mov
sbb
xchg
div
ss
mov
hlt
fnstenv
dec
shr
hlt
das
cld
loope
retf
and
(bad)
retf
dec
push
cli
ins
mov
loop
jo
jno
xchg
bound
sbb
in
mov
push
pop
fsubr
or
push
lds
(bad)
ret
xor
repz
daa
mov
test
lods
xor
cld
shl
lods
jmp
mov
rcl
add
pop
mov
sar
mov
clc
fsubr
pop
stos
popf
mov
ja
das
in
shr
popa
ucomiss
cld
xor
scas
js
pop
sbb
pop
stos
into
inc
out
in
mov
ret
(bad)
hlt
scas
lds
cld
pop
ja
xor
dec
fnstcw
aaa
cmp
mov
mov
inc
enter
dec
inc
sbb
mov
clc
aaa
mov
push
jmp
enter
jecxz
repz
or
stos
jp
(bad)
adc
add
pushf
loop
sahf
ins
mov
mov
fild
mov
je
test
sub
mov
jae
jle
sbb
popf
fmul
xor
xor
cld
fsubrp
inc
jmp
ss
je
push
pop
or
cmp
xor
xchg
movs
push
dec
xor
mov
sub
stos
leave
cmp
js
clc
leave
(bad)
jmp
and
pusha
mov
mov
push
(bad)
lock
popa
mov
outs
test
out
outs
js
int
fs
out
fnstenv
imul
jg
fimul
test
and
out
(bad)
stc
push
movmskps
and
inc
and
cli
nop
call
ficomp
mov
mov
pop
rol
or
cmp
mov
mov
imul
into
int
test
ja
pusha
xor
mov
add
push
popf
add
hlt
pop
stc
cld
add
aas
lock
pop
js
jmp
sub
ds
scas
fisubr
jl
call
mov
jmp
mov
jae
ss
icebp
js
test
inc
xor
hlt
lock
xor
(bad)
push
push
mov
sub
imul
pop
inc
cmc
pop
lahf
adc
xchg
mov
adc
icebp
pop
enter
std
out
not
enter
mov
mov
jbe
mov
addr16
xor
push
inc
cmp
shl
mov
sub
repnz
xor
adc
ins
add
or
mov
outs
mov
adc
fnstcw
pop
ror
push
clc
ret
mov
pop
aam
ret
and
iret
loope
xor
pop
rcr
fcom
and
push
mov
and
mov
pop
xor
in
retf
jp
sub
aaa
mov
or
ds
push
xor
add
jb
cmps
popa
repz
or
cwde
mov
mov
cmps
sub
mov
jecxz
into
arpl
or
lds
sub
fidiv
test
stc
pop
adc
add
mov
push
sub
call
jae
sti
cmp
sub
fsubr
adc
icebp
lea
dec
dec
dec
(bad)
or
addr16
xchg
mov
xor
neg
out
sbb
sahf
or
call
xchg
dec
mov
xor
and
loop
dec
or
push
xchg
loope
scas
mov
(bad)
xchg
int
inc
mov
mov
inc
mov
sbb
(bad)
jg
cdq
leave
ror
arpl
cmp
push
mov
push
mov
fcom
ret
jmp
rol
adc
jb
(bad)
hlt
and
dec
in
jo
jecxz
aaa
push
mov
cmps
mov
xchg
or
out
mov
fs
push
outs
xor
add
into
dec
mov
pushf
loopne
push
inc
jns
(bad)
pusha
shl
push
clc
pop
retf
adc
pop
sti
aaa
push
out
cmp
cmp
dec
push
sbb
(bad)
mov
mov
bound
lods
stos
les
adc
inc
popa
scas
jne
cli
add
leave
scas
pop
sti
je
dec
in
test
call
pop
add
and
gs
test
enter
mov
xor
cmp
adc
movs
mov
xchg
je
push
ds
lahf
inc
sar
push
xchg
fld
mov
push
fidiv
das
cmps
clc
mov
pushf
int
cmp
bound
aaa
mov
mov
cmps
nop
inc
out
mov
aas
or
movs
idiv
mov
daa
ret
pop
jno
jge
cld
cmps
outs
in
aam
mov
shr
push
push
in
out
call
jo
(bad)
fld
jo
xchg
inc
sahf
pop
retf
idiv
ror
cmps
xor
xchg
jae
rcr
add
dec
mov
push
inc
dec
repnz
xlat
into
popa
xchg
inc
cmps
pusha
retf
sbb
push
cmp
js
and
jg
sbb
test
cmp
xchg
ret
jecxz
mov
xchg
test
pop
push
ja
scas
jnp
cwde
out
jg
xchg
and
jno
and
ror
adc
fiadd
rol
mov
cmp
sar
pop
mov
scas
xchg
in
mov
inc
xor
jnp
aad
add
jo
push
dec
int
fwait
nop
mov
dec
mov
jnp
ins
(bad)
neg
call
hlt
ds
fs
fs
inc
and
sahf
cld
dec
mov
dec
add
push
push
dec
jmp
int
rcr
push
lods
arpl
cmps
cmp
cmp
and
pop
cmps
stc
fsubr
inc
ficom
imul
xchg
shl
and
popf
mov
mov
add
and
sbb
fstp
ds
xor
sub
mov
stos
add
push
shr
xchg
sub
fistp
xchg
and
(bad)
gs
xchg
scas
inc
fdiv
mov
mov
ss
and
fcom
stc
movs
test
xchg
adc
sbb
inc
xchg
cdq
mov
jecxz
aaa
out
xor
shl
clc
test
mov
xchg
cdq
add
pop
mov
mov
loop
and
mov
inc
jg
cmp
cmps
sub
aam
adc
jne
das
pop
js
stos
gs
inc
jnp
fwait
shl
loop
dec
push
in
mov
sub
push
push
push
rcr
fisttp
jecxz
push
mov
push
mov
adc
mov
dec
jae
mov
adc
xchg
inc
jo
out
std
xchg
jmp
sbb
inc
imul
sahf
mov
push
sub
lahf
(bad)
sbb
lods
mov
add
sbb
push
mov
push
shl
loope
dec
mov
movs
inc
sbb
sbb
mov
scas
int
in
call
add
cmovb
mov
mov
inc
aam
pusha
jge
sbb
out
les
jle
test
fnstcw
xor
outs
aas
push
jne
inc
jle
xchg
adc
mov
push
mov
sar
ja
pop
shl
dec
push
repnz
into
loope
cmp
adc
mov
sub
xchg
shl
mov
push
mov
xor
xchg
movs
loope
ret
adc
mov
xor
(bad)
jae
inc
add
lock
cmp
and
adc
les
ins
arpl
and
jl
iret
addr16
inc
stos
hlt
and
add
aam
in
and
(bad)
cs
(bad)
iret
sub
in
sbb
sbb
icebp
sbb
shr
jp
repz
hlt
aaa
adc
mov
cmp
shr
cs
(bad)
mov
push
add
lods
gs
push
fcmove
inc
jns
pushf
mov
div
mov
mov
aas
sbb
dec
nop
cmc
ret
jbe
cmp
pop
std
xor
dec
xor
push
xor
mov
scas
stc
pop
out
cmp
or
add
mov
shr
mov
rol
std
xchg
jl
dec
push
popa
mov
add
in
or
sub
jle
adc
int3
adc
aaa
or
xor
dec
fstp
mov
sub
mov
cld
jge
out
jp
inc
data16
icebp
scas
arpl
sub
sbb
popf
sub
mov
jbe
cmp
inc
test
fidivr
lahf
cmp
les
cdq
cwde
pop
loope
retf
and
data16
jns
rol
dec
xor
mov
inc
push
movs
aaa
dec
iret
push
aad
mov
mov
inc
cmp
cmps
cmp
sti
or
fdivp
cmp
and
pop
ins
add
out
jmp
stc
inc
cs
jne
xor
sbb
cmps
jmp
ja
xchg
jns
mov
shl
stc
cli
or
pop
push
xor
mov
pop
cmp
xchg
das
pop
aas
and
xchg
inc
push
inc
sub
mov
jmp
jp
xchg
jb
gs
or
add
(bad)
loopne
inc
in
cdq
add
lahf
dec
xchg
sub
pop
imul
jg
sar
out
(bad)
cmp
jnp
rol
idiv
sbb
fstp
xor
push
ins
out
aas
inc
cmp
sti
jae
leave
push
cld
pop
dec
popa
sahf
add
enter
loopne
or
inc
ds
jmp
arpl
ret
pop
xchg
and
cdq
in
sub
jae
aaa
dec
and
jmp
scas
and
jae
stos
mov
enter
in
outs
mov
mov
out
mov
xor
jge
push
mov
inc
jae
and
bnd
add
call
cmp
jecxz
mov
ret
clc
aaa
fnstenv
mov
jns
fldcw
pusha
dec
sar
leave
outs
arpl
dec
dec
pop
aaa
xchg
mov
daa
xchg
sbb
and
pop
dec
jns
lock
and
push
fwait
cld
cmp
add
out
out
jmp
add
ficom
test
jae
aam
jno
test
int3
je
pop
add
inc
pop
jge
shl
aaa
int3
bound
inc
cld
add
(bad)
cmp
ret
mov
adc
lods
and
js
mov
js
sbb
popf
cmps
jmp
dec
rol
gs
fwait
clc
clc
inc
pop
int
imul
gs
pop
iret
cld
js
dec
(bad)
ss
fucomp
xchg
xor
jle
jne
adc
outs
(bad)
iret
dec
ret
mov
push
or
rcl
(bad)
push
push
jp
mov
pop
pop
jmp
or
sbb
lds
mov
jg
(bad)
ror
jecxz
mov
push
xor
push
push
pushf
(bad)
aas
mov
adc
sbb
ficomp
lods
call
lock
ins
stc
push
ss
and
xchg
test
mov
mov
jmp
xor
push
push
sti
push
mov
ror
xchg
mov
ins
sub
mov
cmp
xchg
fstp
adc
sub
adc
pop
and
loop
pop
movs
test
fwait
repz
daa
daa
cs
xbegin
ret
sti
jecxz
or
jmp
mov
fcmovnb
cmps
in
das
xor
cmp
or
jp
xlat
mov
ds
test
mov
sub
dec
dec
fnsave
sahf
mov
push
fucomi
jle
in
popf
cld
lock
mov
loopne
test
xchg
dec
and
or
sar
sbb
xor
das
cmps
aam
aaa
ss
jne
or
sub
dec
mov
add
mov
lock
and
mov
test
(bad)
lods
mov
mov
das
inc
jecxz
ret
adc
rcl
push
add
cld
in
xlat
call
or
cmp
mov
enter
mov
nop
adc
punpckldq
ja
in
mov
push
xlat
ja
push
xor
mov
hlt
call
push
ficom
ds
lds
cld
xchg
sti
iret
adc
dec
shl
cs
ss
out
xor
lds
cmps
jb
dec
std
jl
push
aaa
mov
jmp
sbb
mov
pop
(bad)
es
test
add
sub
rol
and
outs
dec
mov
mov
shl
test
or
outs
sbb
pushf
add
mov
xor
add
frstor
pusha
push
or
das
jecxz
lods
sub
push
push
fistp
int
retf
xor
jmp
pop
xchg
or
mov
(bad)
xchg
ret
imul
clc
dec
call
push
push
and
add
jl
xor
xchg
lods
loopne
test
shl
lfs
inc
xor
dec
and
adc
pop
jno
pop
mov
pop
nop
add
nop
jae
outs
and
(bad)
fnstcw
sub
xor
adc
cmp
xchg
add
or
fxch
retf
or
mov
jle
lock
add
pop
stos
les
ret
(bad)
cmp
test
xchg
ret
adc
call
into
rcr
dec
idiv
test
pop
adc
cmp
int
xchg
das
mov
out
movs
mov
cvtps2pd
and
jno
aad
lods
adc
or
add
mov
sar
push
ret
arpl
ja
jecxz
test
or
das
mov
jno
mov
add
xlat
fs
sar
ficom
mov
(bad)
sti
mov
cmps
lds
cwde
jnp
clc
adc
loope
dec
aas
mov
fimul
mov
ret
mov
push
xor
lds
punpckldq
dec
and
pop
or
push
pop
and
aam
and
or
std
std
(bad)
imul
loop
adc
jmp
xor
les
movs
inc
(bad)
pop
fucomp
es
mov
sbb
or
popa
out
cs
in
pop
jno
imul
add
rcl
es
jp
cdq
mov
and
outs
sti
mov
jo
fild
mov
mov
mov
in
outs
je
inc
xor
pop
fwait
cmp
or
adc
inc
test
and
repz
mov
not
not
lea
pop
push
and
out
aad
fsubr
sub
cld
gs
cmp
cmps
in
pop
in
icebp
out
push
idiv
frstor
std
jb
pop
dec
fs
enter
adc
mov
in
ins
push
ror
nop
push
scas
gs
in
pop
push
pop
ins
hlt
jns
in
fild
retf
cmp
cmp
in
mov
lock
dec
add
xchg
add
jb
loopne
retf
lods
and
jb
dec
iret
loope
cmp
sbb
icebp
xor
imul
in
loopne
pop
lds
stos
pusha
sbb
or
into
mov
xchg
mov
push
lods
mov
mov
mov
repz
(bad)
mov
or
adc
cmovo
push
(bad)
es
mov
mov
sub
push
add
ss
adc
sub
test
or
data16
sbb
sub
fnstsw
sbb
imul
adc
inc
call
out
adc
adc
nop
(bad)
out
adc
movs
(bad)
enter
adc
adc
stc
leave
xor
ss
fnstsw
mov
or
je
and
and
cmp
outs
add
pop
pusha
pop
push
loopne
inc
scas
int
pop
jbe
cdq
jns
pop
push
stos
int
jae
pop
xchg
sbb
cdq
adc
sbb
outs
sbb
mov
clc
addr16
movs
ror
lahf
std
xor
stos
ins
lea
or
popa
idiv
cmps
mov
stos
in
in
dec
out
pop
adc
lds
adc
inc
movs
add
jo
shr
test
adc
pop
loop
jns
dec
pop
pop
adc
dec
pop
jmp
and
xor
push
sbb
xlat
adc
pop
fisttp
mov
test
mov
jle
jo
add
pop
(bad)
aaa
dec
and
inc
mov
leave
sub
add
mov
(bad)
fcomp
or
xchg
shl
inc
xchg
mov
call
inc
xchg
nop
push
add
mov
dec
(bad)
sub
mov
pusha
xchg
or
push
dec
pusha
adc
mov
fild
dec
jge
movs
xor
(bad)
mov
(bad)
enter
jmp
cmp
push
ror
sahf
bound
pop
mov
push
push
push
xor
sub
adc
cmps
lods
add
jle
les
das
jl
mov
jnp
(bad)
cmp
sub
call
adc
mov
jg
jb
jp
pop
dec
addr16
dec
data16
cmp
add
or
adc
sub
pop
pop
inc
add
mov
sbb
sbb
push
adc
cwde
xor
int
jmp
clc
add
mov
ret
fimul
in
in
mov
jo
pop
pop
add
call
icebp
test
scas
jbe
cmp
add
je
adc
inc
sbb
or
add
cmp
int3
mov
idiv
jno
mov
push
aad
shl
or
mov
ss
test
loope
push
psubd
fistp
ret
or
(bad)
loop
jo
xchg
in
mov
xchg
push
or
jmp
cmp
inc
adc
sti
icebp
push
jp
jl
adc
and
and
dec
test
xchg
dec
and
mov
and
imul
push
in
xchg
cs
sar
(bad)
(bad)
or
ror
test
inc
in
dec
stc
cld
in
or
mov
aad
adc
and
daa
cli
les
jns
fisub
adc
(bad)
dec
addr16
mov
or
in
jmp
xor
enter
sbb
lds
sti
mov
jns
pop
add
stc
cmp
stos
jecxz
rcr
or
gs
and
xchg
mov
fucomi
dec
or
mov
jno
data16
jecxz
out
jecxz
mov
mov
push
mov
or
inc
std
inc
pushf
popa
aas
mov
mov
jne
pop
xchg
in
in
dec
add
ja
mov
pop
xchg
nop
push
sti
pop
mov
stc
push
xchg
mov
stos
ds
ret
sbb
fldcw
xor
jcxz
xchg
scas
(bad)
or
xor
and
mov
lock
aam
add
ins
jle
mov
outs
bound
jns
les
xor
repnz
daa
adc
jbe
fucom
in
mov
in
sbb
xchg
ret
sub
jno
mov
mov
mov
jnp
push
repz
or
or
mov
sub
rcr
xchg
push
aaa
mov
sub
sub
cmp
mov
adc
stos
jecxz
(bad)
out
fistp
push
xlat
loopne
push
inc
das
add
test
xchg
lea
inc
stos
sub
out
pusha
add
hlt
mov
loop
dec
push
dec
ror
icebp
and
stos
test
adc
ds
mov
icebp
or
aam
les
or
add
or
dec
pop
xor
sbb
xchg
and
cmp
daa
ja
push
push
or
dec
adc
fs
popf
daa
bound
xor
jno
cmp
outs
jns
test
jnp
inc
imul
push
mov
mov
inc
jmp
adc
dec
adc
scas
es
aaa
sar
lock
gs
imul
fstp
in
or
jmp
shr
sbb
mov
push
xor
retf
stos
loopne
mov
imul
push
fst
mov
adc
push
jmp
rol
fisttp
test
or
call
out
jecxz
jne
add
inc
iret
jns
out
push
pop
add
shl
and
pop
loopne
test
repnz
dec
clc
cmps
inc
mov
jge
or
xchg
mov
data16
jmp
into
inc
xor
nop
pop
xchg
stos
and
or
int
and
lea
mov
sbb
dec
fcmovbe
mov
lock
pop
outs
cdq
push
mov
and
fstp
xor
xchg
test
cld
pop
stos
aas
pop
cmp
dec
mov
setne
scas
pop
movs
sbb
cmp
xor
fsub
test
icebp
add
xor
scas
icebp
rol
pop
sahf
data16
dec
fdivr
xchg
ins
sub
scas
xor
sub
sub
add
addr16
push
ds
ins
mov
fadd
iret
cmps
ss
mov
retf
cmc
sar
jg
jno
int3
cmp
enter
daa
fmul
mov
ss
push
mov
mov
int3
or
add
cmp
jae
pop
js
sub
push
cmps
cdq
stos
hlt
hlt
stos
or
xor
mov
cmp
iret
and
inc
ds
div
mov
cld
cmp
jl
xchg
test
dec
inc
sbb
aas
add
mov
ja
and
mov
pop
push
and
fwait
add
add
cmp
retf
test
mov
in
lea
cli
push
enter
in
scas
test
(bad)
loope
in
pop
xor
xchg
lods
sub
fcomp
setg
push
mov
mov
movs
mov
call
cmc
mov
iret
pop
call
fnstenv
lock
mov
cmp
pop
or
sti
adc
test
ds
or
retf
stos
cmps
and
xchg
push
cmp
pop
push
mov
neg
pop
pop
jge
add
ins
sub
test
sbb
cld
in
loop
add
sub
mov
inc
inc
out
inc
addr16
dec
in
pop
iret
push
inc
and
add
aam
sub
cmc
cmp
leave
dec
inc
div
cdq
push
mov
add
cmp
push
mov
cpuid
in
mov
test
movs
inc
out
or
adc
inc
xchg
push
(bad)
rcr
loopne
jo
mov
ret
and
cmp
cmc
aam
push
jno
xchg
aas
arpl
enter
dec
jmp
mov
sbb
mov
xchg
or
mov
rcr
xor
out
push
sub
dec
(bad)
sub
adc
jp
test
mov
arpl
mov
hlt
xchg
dec
inc
scas
push
ret
xor
loope
sbb
scas
dec
cwde
sbb
push
jmp
rcl
imul
movs
stc
xor
js
adc
retf
popa
inc
push
(bad)
in
jmp
lock
add
das
das
mov
loope
adc
xor
add
xlat
adc
sub
mov
je
test
jge
aaa
lea
ins
xor
inc
fs
call
loop
pushf
jno
or
adc
mov
or
repz
jns
xor
inc
aas
call
sbb
imul
shl
inc
clc
inc
test
movs
pop
mov
xor
dec
das
ins
xchg
rol
aad
popf
cmps
and
pop
add
addr16
xlat
out
dec
sti
aas
mov
jnp
mul
add
pusha
cmps
ins
add
xor
das
les
sahf
popa
test
loopne
ja
in
dec
inc
je
and
mov
sub
mov
sbb
pop
scas
push
jbe
mov
scas
cmps
adc
test
ficom
or
dec
sbb
ins
sub
fild
(bad)
mov
mov
call
mov
pop
pop
dec
mov
xor
mov
(bad)
ins
daa
ins
xor
scas
mov
rcr
or
jge
ror
je
xchg
ins
rcl
push
lds
mov
add
cwde
mov
movs
lock
(bad)
addr16
cmp
jbe
jae
test
mov
sub
stc
or
dec
icebp
in
cmp
loop
es
mov
cmp
dec
jecxz
push
imul
lods
or
xchg
xchg
pop
xchg
arpl
mov
ds
nop
fcmovnbe
push
inc
clc
jne
push
dec
mov
ror
ds
mov
cdq
leave
addr16
int3
inc
xchg
mov
shl
addr16
mov
int
and
cmc
mov
dec
es
sbb
push
xor
(bad)
imul
retf
pop
sub
stc
cmp
data16
or
or
mov
mov
sub
pop
ss
inc
xchg
fwait
call
pop
xchg
dec
int
mov
loopne
aad
fiadd
pop
int3
mov
mov
inc
aaa
push
and
lock
adc
xor
imul
(bad)
pop
fisub
cwde
and
cli
clc
and
xor
add
pusha
lea
xchg
arpl
cmp
int
xor
dec
fdivr
mov
aam
popf
fwait
loope
pop
jmp
xchg
popa
adc
or
ins
add
pusha
inc
jg
test
scas
inc
or
xor
and
fsubr
neg
into
push
sub
mov
xor
rol
lahf
push
lahf
jle
jmp
outs
push
repnz
mov
idiv
mov
mov
xor
pop
jnp
ret
cmps
fistp
mov
mov
push
stos
repnz
jmp
sub
sbb
mov
push
inc
add
fidivr
stos
xchg
jo
or
mov
add
cli
pop
mov
mov
add
pop
es
xchg
ss
loop
cmp
ret
push
pop
sub
push
sti
mov
sbb
call
popa
ret
out
sbb
out
pushf
xor
cmp
xchg
mov
mov
aam
(bad)
cdq
leave
sbb
add
cli
pop
mov
rcr
add
fdivr
sbb
mov
push
xchg
push
shl
or
repz
in
jecxz
daa
push
loop
lods
mov
(bad)
adc
stos
(bad)
or
xchg
fst
mov
mov
mov
loopne
push
in
nop
ins
stos
inc
aaa
sbb
je
outs
sub
xchg
push
das
ret
out
lds
retf
jb
aaa
mov
pushf
loopne
push
add
xor
and
xchg
mov
fnstsw
retf
sub
iret
jns
dec
ret
jns
aad
xchg
mov
jp
imul
xchg
retf
mov
adc
xchg
push
mov
or
inc
sbb
inc
pop
mov
mov
and
xor
adc
jmp
pop
add
shr
loopne
lds
enter
mov
sbb
pop
push
je
push
ja
aaa
es
mov
ret
push
pop
ret
ss
gs
sar
shr
jle
cmp
mov
retf
cmp
adc
pop
bound
je
xor
mov
fcom
out
ret
cmp
cwde
popf
stos
data16
mov
test
pop
mov
test
dec
loop
retf
fisub
xor
mov
pop
sbb
push
loopne
jle
sbb
mov
mov
and
retf
out
xor
sub
jmp
pop
addr16
lds
or
(bad)
cld
dec
add
mov
mov
popa
popf
loop
int
jge
mov
dec
loopne
jnp
shr
loop
fwait
mov
jb
popa
xor
(bad)
lock
mov
pop
or
inc
xlat
cli
inc
retf
aad
shl
(bad)
push
idiv
in
cmp
retf
sti
out
push
arpl
retf
mov
(bad)
xchg
ins
shl
jge
inc
test
push
repz
das
shl
jl
rcr
xchg
int3
mov
out
call
lock
dec
call
fdiv
adc
xor
iret
or
repz
test
(bad)
pop
sub
adc
xor
in
dec
pop
sahf
in
out
cs
iret
lods
xor
jp
ret
xor
pop
cli
stc
scas
(bad)
ret
cmps
std
fdivr
or
sub
mov
push
fld
mov
cmps
pop
loop
loope
mov
mov
call
add
push
fcom
or
fnstenv
xchg
out
(bad)
mov
(bad)
xchg
pop
loope
mov
stos
(bad)
test
cmp
pop
add
jb
pop
pop
pop
test
in
dec
not
mov
sahf
sub
lods
call
cmp
sub
mov
push
ret
daa
repnz
fdivr
add
xchg
jo
or
cmp
call
inc
es
clc
inc
xchg
(bad)
loopne
xchg
fwait
add
jl
pop
shl
jbe
int3
repz
adc
mov
dec
sbb
addr16
cld
and
xchg
dec
int
dec
inc
rol
(bad)
aaa
adc
jge
and
add
(bad)
sbb
stos
gs
mov
xchg
sar
outs
inc
xchg
add
ins
data16
mov
and
jno
clc
and
mov
add
push
stc
and
pop
repnz
adc
dec
pusha
xor
or
(bad)
cdq
outs
arpl
outs
dec
jno
push
pop
int3
cld
arpl
repnz
hlt
cmp
sub
adc
lea
pop
test
fbstp
xchg
out
and
leave
dec
jb
add
(bad)
retf
scas
xor
daa
push
adc
scas
enter
outs
mov
jns
test
nop
or
imul
adc
ins
push
mov
mov
clc
cli
int3
retf
ja
and
pop
push
jns
jmp
and
push
lods
dec
mov
or
rcr
add
add
xor
popf
test
mov
outs
addr16
je
dec
push
fidiv
cmps
std
bound
jno
aas
retf
std
in
push
push
mov
fcom
pop
sbb
mov
push
cli
push
icebp
int3
inc
mov
rcr
aam
hlt
mov
call
adc
popa
sub
inc
sahf
cmp
mov
add
lock
scas
movs
outs
sbb
loope
sub
inc
sbb
lock
icebp
xchg
mov
xchg
add
jae
xor
pusha
jg
adc
out
fstp
fistp
mov
shl
mov
add
out
mov
inc
sbb
xchg
stos
fdivrp
xchg
movs
addr16
adc
and
xchg
scas
hlt
cli
add
mul
or
retf
sub
popa
fldl2e
pop
or
sbb
call
retf
mov
dec
jne
and
mov
mov
test
js
push
and
sbb
and
stos
mov
in
adc
imul
sub
fcomp
jle
sub
pop
in
js
clc
adc
xor
xor
stc
addr16
sbb
xor
int3
test
(bad)
sub
inc
push
mov
mov
mov
xchg
push
outs
cdq
ret
rol
adc
aas
daa
movlps
push
ins
dec
cmc
xchg
lahf
cmp
mov
mov
xchg
pop
cwde
cmp
dec
inc
mov
cwde
sub
shl
cs
jecxz
dec
lods
(bad)
mov
jge
stos
dec
aas
int
add
xor
dec
mov
adc
data16
cmp
cmp
xor
pop
ficomp
rcr
test
(bad)
inc
mov
pop
test
out
cmp
js
pop
mov
fdiv
dec
adc
out
popa
arpl
jmp
push
add
loope
dec
jbe
mov
icebp
pop
or
and
sbb
fsubr
pop
pop
dec
add
push
jmp
ds
int
and
clc
sbb
int3
push
call
mov
or
jbe
mov
test
data16
call
push
ja
mov
xchg
rcl
inc
adc
xor
push
fmul
push
scas
gs
xchg
mov
out
dec
mov
shl
lahf
aam
test
je
sub
or
hlt
popa
push
adc
mov
xlat
fisttp
adc
push
push
dec
inc
adc
out
int3
loope
push
inc
rcl
call
sbb
add
pop
(bad)
(bad)
inc
enter
aaa
fwait
or
ja
xor
(bad)
cmp
data16
cs
sbb
pop
in
rcr
test
in
stos
das
int
xchg
sub
jae
sbb
jb
mov
push
imul
adc
int
stos
jle
std
jmp
rol
rcl
imul
(bad)
imul
jns
aaa
scas
dec
sbb
inc
es
nop
(bad)
std
add
add
sbb
push
repnz
(bad)
cmp
adc
inc
ror
sahf
out
and
add
outs
repz
xchg
int3
or
xchg
pop
jne
movs
cmps
(bad)
fs
sbb
popa
add
dec
sbb
gs
jb
xchg
outs
and
enter
xchg
jge
int3
add
(bad)
xchg
jb
add
out
mov
jmp
jo
retf
mov
adc
(bad)
or
xor
inc
and
jns
cmps
inc
iret
ficomp
popa
dec
fsubr
js
mov
icebp
or
jl
aaa
cdq
push
and
or
mov
data16
push
stos
adc
jno
xchg
mov
push
nop
mov
xchg
pop
aaa
mov
or
loopne
ret
pop
and
mov
ja
stos
adc
xchg
cdq
jb
mov
mov
mov
fldenv
adc
xor
xchg
leave
iret
jmp
cdq
jl
pop
js
xchg
mov
(bad)
test
into
push
xchg
adc
mov
mov
mov
inc
fisub
imul
(bad)
xchg
jmp
sub
sbb
push
mov
retf
ret
cdq
je
inc
xor
jge
ins
mov
jle
xor
retf
pop
push
dec
adc
cmp
lds
mov
dec
dec
lods
or
push
jg
inc
xchg
lds
fcomp
jb
(bad)
ja
enter
(bad)
xchg
stc
xchg
mov
mov
xchg
into
arpl
enter
ds
mov
cmp
clc
fsubr
fs
jp
clc
sub
cwde
and
pushf
jbe
ror
xchg
jmp
and
jmp
sub
mov
and
in
ins
leave
and
call
outs
ror
jp
inc
in
mov
mov
sub
out
inc
aas
push
cdq
xor
mov
push
leave
push
inc
mov
push
ins
sbb
ror
aam
mov
stc
jno
stc
add
or
test
xchg
or
jne
test
or
cmc
int
call
add
cmps
fwait
retf
shl
fnstcw
adc
mov
mov
push
sub
ds
(bad)
stc
or
mov
mov
push
xlat
xchg
les
ja
pop
movs
lods
xor
(bad)
mov
jo
fwait
mov
lock
outs
sub
cmp
xor
push
outs
mov
test
popa
xlat
ret
enter
xchg
movs
neg
or
in
hlt
test
sub
mov
data16
adc
fisub
cmps
ins
ficom
mov
ja
mov
and
dec
push
cmps
cmp
lock
jns
pop
mov
test
xchg
push
ds
mov
daa
leave
ds
pop
popa
or
(bad)
aaa
stc
rol
les
ins
mov
add
xor
xchg
das
cmp
or
xchg
test
(bad)
jmp
dec
sbb
or
pop
dec
lods
out
jnp
and
push
(bad)
retf
mov
push
adc
mov
add
cs
out
cdq
push
enter
fld
add
scas
xlat
sbb
fadd
stos
retf
cmp
xchg
fdiv
mov
pop
push
inc
int
cli
inc
inc
or
cmp
or
add
aas
nop
inc
loope
cmps
push
test
add
cdq
inc
sbb
xchg
ds
inc
pop
jmp
or
cs
mov
loop
xchg
jb
sub
xchg
aaa
in
hlt
jp
push
push
std
xor
loopne
aas
mov
jecxz
popf
ins
xchg
lea
stos
push
neg
mov
dec
sbb
jmp
out
push
xor
sbb
push
or
mov
lock
jmp
or
or
mov
dec
rcr
inc
leave
xchg
pushf
and
int3
pop
ins
clc
xchg
(bad)
sti
repz
lahf
ret
in
sti
(bad)
fcomp
adc
ds
bound
in
rol
inc
sbb
sub
in
dec
enter
push
popf
pop
add
test
push
div
sahf
inc
mov
stos
and
(bad)
ds
int
mov
or
push
add
iret
jecxz
imul
aas
sub
jmp
retf
je
sub
pop
movs
xchg
mov
add
mov
mul
call
int3
stos
mov
sbb
xchg
mov
aaa
sbb
popa
mov
ficom
push
push
sbb
(bad)
xor
lods
add
push
popa
jne
jp
(bad)
xor
cmps
sub
pop
ja
or
in
mov
sahf
pop
rcl
and
push
out
jg
sbb
or
shl
adc
test
vmwrite
imul
cs
nop
cs
js
shr
add
or
(bad)
ds
dec
sbb
loope
jo
sub
and
into
sub
ret
dec
dec
call
es
imul
das
xor
xchg
test
jp
outs
inc
pop
leave
adc
(bad)
addr16
jg
data16
leave
ss
mov
ss
adc
xor
out
mov
stc
cdq
(bad)
movs
mov
adc
aas
sub
(bad)
outs
repz
pop
loop
fcomip
lock
xchg
sub
jp
cvtps2pd
sti
cmp
(bad)
dec
sbb
mov
scas
cmp
pop
in
inc
mov
das
addr16
sub
push
dec
adc
(bad)
xchg
in
sbb
or
adc
mov
in
mov
xor
add
ret
ja
dec
mov
std
popa
xchg
mov
push
test
add
mov
(bad)
cdq
je
fsubr
mov
jo
sahf
pushw
jle
and
dec
and
push
jmp
dec
inc
mov
sbb
mov
aam
ds
sub
fisub
dec
mov
add
leave
mov
mov
mov
out
cmp
out
ins
mov
(bad)
clc
mov
jle
xor
push
dec
mov
mov
cs
pushf
cdq
mov
aas
cld
frstor
mov
(bad)
mov
fwait
xor
ret
mov
cmps
ja
cmp
pop
sub
in
push
jecxz
pop
fs
lds
and
add
push
repz
jl
or
arpl
and
sahf
enter
add
mov
xchg
dec
push
xor
addr16
sub
sahf
sti
pop
test
jmp
neg
mov
or
cwde
inc
(bad)
ins
mov
iret
in
mov
test
add
xor
test
cmps
cli
loope
int
push
and
fwait
push
into
push
pop
jecxz
xor
xlat
movs
lock
arpl
jp
xchg
push
xor
xchg
add
inc
shr
adc
out
or
cmp
and
adc
shl
mov
cmp
xchg
out
fcomp
adc
adc
aaa
sbb
mov
cs
in
sub
add
dec
jge
std
or
int
mov
mov
das
mov
jbe
and
gs
stos
inc
popf
push
push
mov
add
daa
movs
push
ret
lock
or
or
pop
cmp
repz
out
push
aam
pop
mov
aaa
mov
into
out
mov
mov
mov
pop
mov
ins
pop
out
push
mov
es
pushf
add
or
lock
push
pop
sar
push
adc
push
cmp
sbb
mov
out
fistp
xchg
out
and
cs
mov
test
les
mov
pop
movs
sub
movs
cwde
jo
movs
test
mov
push
jmp
dec
pop
cdq
xor
xor
jae
xchg
(bad)
mov
mov
(bad)
daa
loop
dec
xchg
add
xacquire
stc
jecxz
icebp
nop
fwait
pop
xor
test
retf
push
call
mov
sbb
push
scas
dec
lahf
xor
arpl
cmp
xchg
mov
fcmovnu
sub
push
(bad)
xchg
lea
jno
nop
mov
pop
ret
mul
mov
add
scas
in
sar
fistp
popf
leave
inc
mov
sub
pop
out
out
out
jae
xchg
aaa
dec
leave
sbb
cmp
inc
enter
popf
mov
xlat
sub
mov
(bad)
enter
jmp
outs
cmc
mov
pop
lods
sar
cmc
mov
jnp
sti
xor
mov
mov
fisttp
(bad)
imul
cmc
pop
mov
mov
lahf
jae
push
mov
add
dec
shl
aad
mov
jge
add
ja
inc
call
push
xchg
pop
xor
jmp
stos
pop
test
inc
jne
xor
cmp
fsubr
and
pop
dec
push
mov
ins
test
sub
rol
frstor
mov
and
mov
jmp
inc
imul
icebp
or
jo
rol
mov
stc
idiv
cmps
inc
xchg
cmc
(bad)
std
jmp
xor
xor
test
mov
xchg
adc
jecxz
test
sub
dec
jecxz
das
nop
fisttp
loopne
xor
cld
xlat
push
inc
jmp
xchg
sbb
int3
xlat
mov
cdq
movs
cmp
ret
sar
sub
fcom
rcl
lods
out
push
xchg
loopne
mov
or
and
pop
icebp
mov
les
jmp
or
popa
pop
ficomp
mov
sub
retf
pop
sub
mov
sti
or
int
mov
ja
cmps
mov
addr16
mov
lahf
inc
push
in
push
jmp
sar
add
retf
or
and
imul
sar
fwait
pop
and
scas
xchg
test
push
mov
xchg
in
movs
adc
mov
push
pop
dec
test
jl
(bad)
pop
je
mov
js
sub
mov
div
cmp
and
adc
lock
sbb
jnp
mov
xor
sub
pop
aad
jmp
mov
push
mov
add
or
mov
cmp
dec
mov
lods
mov
outs
popf
leave
push
xor
xchg
xor
movs
mov
es
in
pop
sbb
add
mov
or
ins
sub
add
outs
sbb
cmp
and
loopne
add
imul
pop
leave
or
fist
lea
xor
pop
mov
xchg
jb
out
push
push
sub
mov
xchg
or
lea
xor
lds
idiv
sub
mov
xor
sti
nop
ror
call
jecxz
add
sti
adc
mov
scas
and
add
lods
cmc
jnp
xor
xor
sbb
pop
mov
loopne
add
in
push
inc
inc
in
or
rcl
sub
or
pop
jmp
gs
mov
in
mov
mov
cmp
mov
fwait
xchg
lods
mov
inc
inc
cwde
jp
jne
js
les
jae
outs
adc
mov
clc
das
aaa
sub
and
push
jle
lods
pop
lods
aas
or
mov
mov
xchg
sub
call
lods
inc
push
and
jle
test
gs
cli
cmc
gs
pop
and
bswap
dec
jb
in
movs
xchg
add
cdq
std
mov
xchg
push
nop
push
pop
sti
or
xchg
pop
add
push
int3
ret
sar
mov
repnz
idiv
adc
inc
xchg
addr16
aaa
xchg
mov
mov
mov
or
data16
inc
(bad)
(bad)
or
xchg
jmp
jne
hlt
mov
sub
lahf
sbb
sub
shl
sti
jb
fcomi
or
xor
sub
imul
fst
xor
int
cmps
or
fsub
mov
(bad)
fmul
jle
scas
pop
cs
popa
xchg
aaa
sub
mov
(bad)
cwde
inc
or
fwait
mov
ret
mov
(bad)
hlt
movs
je
push
mov
xchg
mov
xor
call
popa
mov
aam
xor
inc
enter
jo
ds
mov
cmp
fs
std
in
test
sub
aaa
cmps
shr
mov
fcomp
jns
cmc
mov
and
push
cmps
int
or
(bad)
les
inc
lods
xor
and
or
xor
jo
test
inc
xchg
loop
jl
mov
gs
rol
jbe
jge
cdq
shl
(bad)
repz
and
hlt
push
inc
xchg
dec
adc
les
es
jge
jns
dec
and
add
or
xor
sahf
ror
dec
jne
adc
out
cmp
or
inc
and
inc
add
(bad)
and
xor
sti
inc
mov
test
cmc
and
not
cld
add
mov
(bad)
ins
aaa
add
pop
movs
sub
or
push
pop
mov
rcl
sub
fwait
push
fistp
add
cmp
push
add
mov
cmp
scas
add
iret
daa
in
mov
sbb
xchg
lahf
adc
nop
test
dec
xor
sub
ja
lds
sbb
mov
into
icebp
or
xchg
imul
jae
ficom
lods
mov
mov
aad
shl
xchg
push
add
fisttp
dec
and
and
out
pop
xchg
push
popf
test
pop
ins
fld
inc
sub
in
(bad)
out
mov
mov
dec
adc
cmp
cmp
lds
jle
xchg
scas
add
mov
ret
and
cmp
call
cmc
test
std
jmp
xchg
push
aas
pusha
jno
mov
inc
test
sbb
xor
jmp
jns
retf
stos
jmp
inc
scas
add
mov
rcr
loope
jmp
out
pop
popf
std
mov
xor
iret
sub
outs
sbb
ja
cmc
jnp
lahf
jmp
push
xor
vpavgb
sub
cwde
add
push
pop
fwait
call
sub
xchg
jle
sbb
mov
pusha
cmp
jno
ficomp
vmovntps
mov
dec
push
cmp
aam
push
scas
xchg
pop
mov
out
cmps
fcom
lahf
nop
enterw
adc
nop
aaa
dec
fstp
jno
cdq
out
sub
adc
dec
mov
repz
stc
int3
mov
sub
add
clc
and
adc
ins
mov
mov
and
lods
dec
or
mov
inc
imul
lahf
push
inc
outs
fstp
mov
fist
mov
adc
sbb
imul
in
ret
jb
sub
push
movs
repz
lods
fcom
outs
enter
pop
adc
les
cmps
xchg
shr
add
fstp
js
sbb
(bad)
jo
pop
push
cmp
pop
sub
pop
push
in
xchg
frstor
mov
out
mov
add
push
inc
cmp
mul
xchg
stos
ins
xor
in
cmp
out
gs
push
push
dec
out
sub
je
add
dec
loope
and
jle
test
daa
scas
and
retf
mov
rol
cmp
out
popa
xor
clc
pop
cdq
cmp
jae
pop
push
and
and
mov
mov
jmp
jb
jp
xchg
ins
sbb
mov
das
inc
cli
pop
fidiv
arpl
sbb
inc
pop
jmp
add
call
mov
dec
sti
mov
cwde
xchg
ds
scas
or
outs
vrcpss
inc
jo
push
aaa
ror
sbb
dec
push
lods
sbb
pop
aas
pop
ret
lea
popa
jge
sbb
gs
fst
add
shl
sbb
test
cmp
lods
mov
adc
leave
mov
xor
daa
cdq
std
icebp
push
icebp
enter
xor
(bad)
out
push
aad
(bad)
stc
and
scas
div
loopne
pop
add
jnp
xchg
or
dec
inc
fisub
add
and
add
shl
dec
mov
imul
adc
sub
jmp
lock
inc
nop
add
pop
pushf
sub
xchg
xchg
(bad)
push
jno
push
dec
mov
fstp
pop
inc
fdiv
mov
jne
cmp
jo
cdq
mov
mov
imul
int3
pop
xchg
mov
push
cli
push
stc
test
push
pop
adc
outs
loop
ins
sub
adc
xor
pop
and
aaa
pop
(bad)
outs
mov
dec
sti
icebp
(bad)
icebp
test
dec
pop
lds
inc
in
mov
mov
sbb
fisub
mov
add
pop
push
add
js
jl
sub
stc
adc
test
test
push
hlt
and
pop
std
xchg
mov
sub
ret
adc
sub
push
test
lock
dec
cmp
sub
push
or
out
enter
jne
sub
mov
sub
ret
movs
cdq
sti
std
mov
pop
or
fistp
xor
outs
xchg
cli
dec
mov
xchg
fwait
data16
mov
(bad)
ret
das
xchg
jmp
mov
mov
loopne
push
xchg
push
pusha
stc
pop
es
xor
mov
sub
cs
jnp
hlt
xlat
wbinvd
and
dec
add
and
add
mov
repnz
cmp
stos
call
mov
xlat
jecxz
xlat
jmp
or
mov
inc
push
jb
sbb
xchg
inc
retf
pop
pop
mov
in
xlat
or
mov
cmp
mov
sbb
adc
pop
int
lds
push
push
fild
addr16
add
jl
jnp
pop
xchg
dec
and
mov
and
pop
pop
cmp
adc
push
inc
hlt
sub
test
push
mov
cld
out
sub
out
gs
inc
sbb
mov
(bad)
outs
shl
fwait
gs
popa
cmp
xor
daa
push
mov
sbb
test
das
jp
repz
pop
in
add
js
or
and
in
pop
(bad)
xor
sbb
adc
dec
pop
pop
popa
stos
sbb
iret
cmp
mov
aam
push
gs
jnp
in
popf
movs
das
mov
pop
pop
movs
pop
dec
aaa
xchg
and
dec
dec
jo
or
and
cmp
ss
inc
fst
mov
dec
pusha
inc
hlt
imul
mov
mov
cdq
jp
loop
push
add
sbb
lea
mov
inc
hlt
mov
bnd
nop
sub
iret
loop
mov
xchg
stos
mov
mov
dec
pop
shr
clc
jmp
dec
scas
aad
cmc
ja
sbb
ror
push
in
pushf
jmp
loopne
sub
mov
cmp
loopne
mov
fcom
daa
pop
test
mov
ficomp
push
outs
xor
arpl
pushf
ins
aas
aaa
stc
jmp
rcr
dec
jne
data16
pop
setl
dec
add
cmp
sub
mov
jmp
cmps
std
imul
inc
dec
push
into
adc
mov
mov
xchg
pop
in
mov
inc
es
add
sbb
inc
and
stos
sub
cwde
call
xor
arpl
rcr
mov
jns
sar
and
jle
pop
loopne
sbb
test
pop
cdq
add
cmc
jb
dec
mov
mov
sbb
or
xchg
sahf
pop
xor
sbb
mov
cdq
shl
xchg
xlat
aaa
call
and
pop
or
push
sub
pop
xchg
popa
push
pop
cmp
mov
dec
imul
sub
into
dec
pop
(bad)
xchg
cmp
mov
add
mul
fidiv
das
lds
iret
or
arpl
pusha
lea
push
fdiv
xchg
outs
cmp
mov
inc
adc
test
jb
inc
mov
pop
cmp
les
cvtps2pd
push
jbe
mov
inc
push
lahf
test
mov
cmps
leave
ret
inc
fsub
fisttp
sub
aas
cmp
bound
fistp
jb
out
sub
data16
sub
cs
jnp
lods
test
dec
shl
jo
(bad)
enter
pop
mov
popf
ds
cs
mov
jno
scas
stc
inc
popf
inc
or
push
mov
aam
enter
pop
jb
in
cmp
icebp
loop
and
pop
xor
jle
sub
xchg
jo
aaa
aam
mov
imul
mov
add
cmp
mov
dec
test
lods
inc
xor
shl
repnz
je
int
lock
push
fisubr
lea
push
aas
mov
add
mov
out
mov
outs
xor
cmp
push
xchg
hlt
hlt
mov
jp
icebp
mov
fst
rcl
sahf
loope
sbb
pop
clc
push
mov
cmp
adc
outs
cmp
data16
pop
jns
push
in
test
sub
mov
or
push
(bad)
(bad)
or
repz
ss
add
not
cdq
mov
sbb
inc
leave
in
stc
or
pop
mov
fdiv
lahf
or
sar
jl
js
xchg
xchg
imul
inc
push
jg
sub
jnp
jmp
aad
and
popa
popa
sub
cs
mov
inc
mov
mov
and
add
inc
jp
in
loope
ds
jb
out
lods
push
cmp
jo
inc
and
cmc
and
nop
mov
push
push
jp
or
(bad)
gs
pop
jbe
push
inc
jmp
dec
ins
jge
inc
inc
das
push
inc
ficom
inc
in
mov
cmp
shr
enter
mov
mov
nop
xor
xor
imul
(bad)
jns
xor
push
mov
push
sub
add
xchg
je
xchg
dec
aas
or
add
out
fld
daa
sub
mov
fs
push
jbe
cld
ret
aas
sbb
cmp
pop
and
jne
push
shl
mov
outs
jp
xchg
mov
jno
loope
pop
push
mov
cmovne
mov
fld
adc
pop
mov
add
pop
mov
push
xor
vandps
cld
add
mov
cmp
mov
pushf
add
jg
or
(bad)
bound
mov
movs
data16
mov
sbb
addr16
out
scas
inc
push
and
cs
inc
and
shl
jae
mov
inc
dec
xor
cmp
scas
je
mov
inc
sbb
jne
fs
(bad)
jecxz
adc
shl
ret
out
ror
cmp
push
mov
add
sbb
aas
jmp
and
sahf
ror
or
and
fadd
or
mov
enter
lods
xor
ror
(bad)
aam
jbe
(bad)
in
push
add
imul
cld
int3
mov
add
xor
cmps
adc
pop
daa
out
jb
loop
ins
xor
jns
add
mov
sbb
xlat
push
(bad)
push
mov
fisttp
fst
test
aaa
stos
fdivr
loop
lea
dec
sub
in
and
retf
push
out
lods
test
fwait
repz
mov
mov
inc
bound
cmp
cwde
repnz
int3
retf
popa
ret
inc
inc
mov
shl
xchg
pop
pop
pushf
stc
xchg
pop
and
and
dec
pop
sbb
in
push
sbb
dec
hlt
jbe
jnp
sbb
add
imul
inc
rcr
or
movs
stc
xchg
sbb
pusha
adc
aaa
sbb
in
sub
cmp
jp
in
jmp
push
and
ret
dec
mov
(bad)
sti
nop
test
mov
adc
or
sbb
sub
cmp
bound
popf
(bad)
mov
(bad)
lock
dec
mov
xor
leave
mov
push
dec
add
jmp
data16
sub
enter
jmp
outs
pop
mov
es
test
or
xchg
cmp
pop
pop
sahf
adc
push
adc
ret
or
lds
retf
mov
addr16
jle
mov
test
ins
or
jl
push
out
or
mov
fisttp
jb
mov
mov
dec
gs
add
mov
cmc
push
jge
pop
cmp
lods
push
cmp
test
ret
call
sbb
add
cmp
es
inc
repz
js
stos
je
push
mov
shr
cmps
fcom
inc
pop
dec
pop
pop
dec
or
gs
aad
test
mov
iret
push
push
cs
xchg
cmc
movs
mov
mov
lea
(bad)
test
xchg
clc
gs
push
mov
stc
mov
imul
out
into
xchg
cmp
push
fisub
push
je
jmp
fdiv
lock
mov
mov
or
dec
fcomp
(bad)
mov
add
cmp
in
dec
jno
xor
nop
xchg
mov
or
rcr
or
adc
add
pop
xchg
mov
sar
dec
sub
push
mov
mov
pop
cmp
shl
sbb
jns
mov
lahf
push
cmps
jnp
outs
pop
add
and
in
je
lock
je
(bad)
and
mov
push
xchg
rcl
pop
dec
dec
mov
mov
les
adc
frstor
lods
add
or
pop
xchg
or
adc
pop
data16
ins
push
mov
dec
xchg
cmp
jg
cmc
mov
xchg
cmps
out
add
dec
clc
mov
cli
shr
in
push
lahf
ins
les
out
retf
mov
push
or
sub
xor
pop
add
mov
dec
test
nop
pop
and
push
mov
ret
sbb
dec
jae
dec
inc
scas
and
cmps
push
mov
cmp
xor
ja
(bad)
into
repz
mov
ins
jge
push
mov
lahf
pop
int
test
mov
ds
xor
mov
icebp
add
inc
push
push
xchg
ins
mov
pusha
in
loopne
dec
xchg
outs
add
out
in
mov
pusha
and
arpl
cmc
aaa
jmp
stc
pusha
dec
fcom
push
cdq
dec
xor
adc
sub
pop
retf
and
(bad)
aad
xor
cmps
adc
test
push
lds
pop
adc
sbb
not
movs
adc
sti
mov
sub
adc
xlat
and
push
lahf
leave
mov
jp
pop
xlat
adc
in
xor
pop
fs
push
xchg
sub
test
ret
mov
sbb
mov
push
jecxz
sub
cld
and
mov
icebp
mov
push
jne
or
jge
jl
daa
and
ins
sub
mov
or
retf
cdq
cld
ret
(bad)
mov
rcl
(bad)
leave
mov
scas
adc
mov
retf
adc
or
shr
pushf
int
movs
or
and
adc
arpl
inc
sbb
(bad)
jmp
ins
sub
int
push
cmp
sbb
jmp
pop
xor
retf
fnsave
out
push
stc
clc
cmps
xchg
loop
repz
mov
sbb
(bad)
sub
hlt
loopne
(bad)
mov
aas
push
lock
popf
sub
(bad)
sub
mov
xor
into
inc
fnstsw
cmp
test
clc
cmps
dec
mov
xchg
gs
and
arpl
fs
pop
or
mov
das
xor
sub
mov
hlt
scas
loopne
pushf
repz
or
pop
jmp
aaa
neg
adc
mov
push
fs
mov
cmp
les
pop
jbe
sbb
push
add
adc
int3
push
sbb
xchg
into
ins
adc
add
(bad)
loope
popa
or
jo
lar
adc
mov
xor
scas
lock
xchg
inc
push
in
sbb
pop
cmp
dec
std
dec
push
call
cmps
jmp
add
sbb
or
neg
pop
std
loop
jl
or
(bad)
addr16
push
mov
out
(bad)
xchg
jecxz
les
cmp
or
sar
lahf
stos
jge
xchg
ret
xchg
ror
adc
push
(bad)
mov
mov
mov
sub
adc
add
add
scas
(bad)
in
cmps
(bad)
cmc
bound
pop
jns
loopne
push
jbe
cmps
mov
jae
mov
inc
mov
sub
loop
mov
es
xor
and
mov
xchg
fnstcw
mov
mov
popf
ds
adc
cli
xlat
into
lock
test
lea
add
(bad)
fmulp
cmps
movs
cmp
dec
test
out
int3
cs
pop
dec
jnp
push
aaa
jg
push
push
in
add
mov
mov
mov
ret
jecxz
adc
and
push
rcr
jg
in
sub
aam
movs
shr
ret
(bad)
jbe
or
enter
xchg
out
and
fisttp
shr
xchg
in
xor
add
jo
stos
dec
cmps
icebp
mov
cmp
neg
pop
out
xlat
fcomp
pop
or
sub
test
push
push
pop
mov
aad
addr16
cmp
fbstp
push
setg
cld
stc
push
imul
mov
test
add
jae
inc
pop
cmp
ret
add
xchg
movs
mov
retf
cmp
adc
arpl
popf
mov
test
xchg
shl
xor
xor
mov
outs
mov
fdiv
stc
add
xchg
stos
fcomp
sub
loopne
test
dec
xor
out
test
or
push
cld
cmp
mov
push
xchg
sbb
push
mov
call
ds
ins
push
cli
cmp
inc
cmp
cs
and
ins
out
inc
in
xchg
test
dec
jp
sahf
imul
rol
dec
imul
dec
inc
pop
or
iret
add
jmp
pop
sub
ja
and
retf
iret
cli
pop
jmp
fistp
pop
sub
int
lahf
nop
add
add
mov
pop
(bad)
jne
imul
test
xor
push
cmc
repnz
pop
aam
jo
xchg
inc
xor
mov
shl
imul
inc
cwde
mov
into
aad
sbb
mov
jecxz
add
mov
push
pop
call
pop
and
call
jecxz
pop
mov
loopne
in
sahf
cdq
sbb
xchg
(bad)
aam
sub
push
aaa
mov
push
in
pop
pop
dec
std
in
mov
fsub
adc
shl
sub
push
adc
cmp
xchg
mov
adc
push
jnp
imul
xlat
pop
punpckldq
sar
mov
push
(bad)
loope
xchg
dec
imul
ret
xchg
clc
xchg
cmp
cmp
and
adc
sbb
dec
int
sar
xor
cs
cmp
ret
xor
and
inc
pop
xchg
cmp
cmp
ja
jb
(bad)
push
hlt
popa
pop
sbb
jne
add
cli
adc
add
and
push
fst
xor
jns
mov
mov
mov
mov
dec
pop
pop
push
std
mov
push
stc
mov
popf
mov
bound
inc
cmps
jge
mov
inc
mov
sbb
cs
clc
loopne
in
fld
pusha
imul
xor
add
cmps
cmp
pop
pushf
pop
mov
add
fiadd
stc
or
mov
jecxz
dec
dec
xor
adc
jnp
rep
and
daa
adc
in
xor
and
loope
out
mov
xchg
call
loope
push
loop
jp
xchg
push
sbb
add
dec
imul
xchg
xor
sbb
and
sahf
xor
cmp
push
sbb
sub
aam
(bad)
and
lock
jmp
dec
mov
xor
jnp
xor
lds
pop
xchg
jae
(bad)
add
push
mov
fsubr
clc
(bad)
xor
dec
sub
popf
jbe
sub
sti
or
and
push
data16
sahf
mov
fcmovnbe
jnp
sub
scas
inc
and
or
xchg
mov
das
fs
pop
cdq
inc
xchg
aam
mov
sub
dec
ret
xor
lods
or
sub
(bad)
sti
push
cmc
sbb
or
inc
jmp
cmps
and
inc
and
inc
push
movs
mov
pusha
ret
jmp
mov
and
or
mov
cmp
fsubr
ret
sbb
jbe
lods
adc
dec
cmp
xor
jne
test
call
stc
pop
cmp
aas
lahf
(bad)
mov
cdq
lea
arpl
adc
gs
pop
outs
xchg
sbb
add
div
(bad)
sbb
cwde
out
xor
add
test
xor
call
fisubr
jmp
cmp
pop
xor
adc
push
sub
and
fnstenv
mov
push
stos
pop
jno
or
hlt
arpl
cdq
das
mov
inc
nop
jmp
not
outs
lock
sub
out
sub
mov
push
adc
sub
scas
or
(bad)
out
clc
pop
inc
cdq
sbb
inc
xchg
stos
cmp
sub
ds
mov
sbb
and
daa
std
cmp
cmp
test
xlat
push
inc
test
sti
or
(bad)
imul
(bad)
sar
popf
daa
cwde
int3
and
pop
sbb
jle
sbb
in
jb
cmp
aaa
std
sbb
push
mov
scas
(bad)
dec
retf
xchg
sub
xor
push
mov
jns
out
cs
xchg
fcomp
jmp
xor
xchg
add
pusha
pushw
fwait
repz
push
mov
outs
sub
push
into
add
popa
add
mov
scas
sub
fs
(bad)
in
mov
test
(bad)
adc
(bad)
gs
jmp
dec
push
jecxz
call
dec
pop
add
mov
push
or
out
jge
cdq
pop
imul
js
add
stos
cli
mov
mov
jecxz
add
repz
mov
and
sahf
aad
xchg
mov
xor
mov
adc
sub
mov
mov
cmp
das
in
mov
dec
loope
cli
mov
jae
xchg
fcom
cmp
fwait
jle
fistp
add
das
fs
test
ins
or
arpl
pop
pop
xchg
(bad)
loopne
cs
enter
ss
dec
sbb
sti
aad
pop
cmp
or
sub
jecxz
loopne
inc
(bad)
mov
data16
aas
div
jmp
push
stos
shr
add
aaa
sbb
cmp
pushf
shr
les
inc
cld
sbb
dec
lea
sub
pop
sbb
xchg
jo
fcomp
loop
xor
dec
xor
mov
jne
test
je
or
aam
inc
cs
jnp
(bad)
int
(bad)
cli
cmp
fisttp
mov
mov
xor
mov
outs
outs
movs
fidivr
mov
ja
mov
les
xchg
fnsave
push
ja
movs
jo
jmp
pop
repz
sub
mov
movs
fs
fnstsw
xchg
jle
xor
lods
fld
clc
cmc
in
(bad)
inc
js
pop
std
xchg
jo
hlt
mov
loope
fsub
adc
pop
rcl
mov
sar
rol
fs
mov
and
sub
hlt
adc
pusha
adc
push
mov
sub
mov
add
pop
sbb
pop
sub
mov
pop
or
inc
fistp
arpl
dec
add
fwait
inc
aaa
lods
lods
pop
mov
jg
push
dec
pop
jno
mov
aad
repnz
cmps
cdq
mov
push
es
ins
sub
in
jae
add
or
jne
dec
or
mov
xor
jmp
push
cmp
ss
ins
icebp
push
test
stos
imul
pop
mov
inc
cwde
add
push
in
into
cld
addr16
pop
mov
and
aaa
jmp
jae
add
mov
daa
pushf
push
repnz
lds
jecxz
retf
loop
cmp
je
addr16
xchg
into
stos
mov
retf
aaa
je
mov
cmp
jae
push
je
mov
in
jo
enter
stos
or
ins
pop
sub
jle
das
xor
and
dec
jo
mov
mov
into
push
loop
xor
jae
ret
add
cmps
inc
sub
mov
pop
xchg
inc
aaa
adc
jbe
out
repnz
or
sti
adc
and
mov
test
cmps
dec
push
test
add
(bad)
repz
ins
dec
pop
popf
les
dec
lods
jmp
cmps
test
enter
js
mov
xor
cmp
inc
jnp
shr
rcl
inc
test
or
sub
aam
add
inc
push
arpl
in
fistp
ja
ins
es
pop
into
sub
ret
es
dec
pop
lods
dec
jno
out
sbb
mov
shl
mov
adc
sbb
aaa
push
int
fwait
pop
hlt
push
or
movs
jne
jns
cdq
dec
fimul
sbb
nop
jns
jb
out
loop
adc
mov
aas
and
jb
ret
xlat
cmp
cmp
rcl
bound
cld
arpl
or
dec
jmp
ret
or
sahf
out
movs
popa
jae
push
jl
pcmpgtd
fdivr
mov
fimul
or
xchg
stos
test
(bad)
xor
and
fidiv
pop
popa
hlt
sbb
cmps
sbb
xlat
jl
test
idiv
cmps
out
rcl
adc
adc
cmps
das
add
sbb
pop
jns
lds
adc
pop
lock
imul
sar
cmp
loopne
add
das
fnsave
xchg
xchg
mov
cmp
dec
cmc
cmps
add
xchg
es
xor
imul
push
les
sbb
adc
loopne
jle
xchg
in
jecxz
mov
or
xor
scas
inc
or
or
enter
mov
scas
cmp
in
cmp
mov
movs
(bad)
fild
mov
and
xchg
test
xchg
cli
mov
jne
mov
sbb
fwait
lods
fcmovnbe
dec
movs
xor
inc
ret
mov
cmp
test
dec
pop
mov
fsub
into
sbb
aas
jno
nop
xor
lea
test
and
mov
paddusb
mov
or
mov
ret
retf
pusha
mov
aaa
bound
pop
lods
fild
aam
mov
int
jb
jno
and
jns
mov
push
clc
pop
mov
dec
pop
in
cmp
push
push
call
adc
inc
arpl
imul
mov
jmp
dec
test
sahf
xor
pop
imul
jbe
jnp
inc
mov
pop
add
dec
in
sub
(bad)
mov
retf
cli
retf
mov
mov
cs
mov
xor
fsubr
lahf
rcl
xor
addr16
lea
nop
add
shr
frstor
(bad)
cmp
pop
push
movs
xor
(bad)
mov
sahf
cmps
cmp
push
mov
lds
movs
adc
hlt
les
shl
out
(bad)
push
ja
jle
add
test
fninit
and
(bad)
in
jmp
fisttp
aas
outs
fistp
adc
mov
cmps
into
arpl
mov
rcl
adc
xchg
cmp
adc
stc
jae
stc
sub
fld
aaa
lods
das
xor
mov
nop
test
enter
cmp
popa
cli
mov
ret
push
lea
stc
sahf
cmp
mov
mov
cmc
fcom
add
mov
or
ret
cdq
mov
or
pop
inc
movs
cmp
mov
je
cmps
or
xor
psadbw
scas
and
lds
xchg
mov
add
fsubr
cwde
jle
jl
stc
jo
sub
xchg
mov
or
retf
test
rcr
test
outs
inc
ficom
jnp
push
push
pop
mov
call
inc
dec
fs
rol
inc
push
lods
out
sbb
dec
and
xchg
mov
mov
lods
jl
ja
mov
cmps
movs
enter
fidiv
xchg
sbb
mov
sbb
mov
test
jle
or
xor
mov
and
call
repz
pop
lds
push
dec
inc
jecxz
inc
push
outs
fdiv
push
(bad)
call
and
out
xchg
cli
lea
dec
sbb
xor
sahf
cld
pop
lock
cmc
gs
adc
ret
outs
in
lahf
rcr
pop
cmc
imul
jp
loopne
cmp
pop
enter
outs
cmp
ins
data16
shl
jae
sub
cld
adc
jns
mov
inc
inc
cmp
outs
mov
dec
mov
popa
and
lods
popa
cmps
mov
lds
xor
jle
(bad)
sub
jp
pop
xchg
(bad)
and
add
fisttp
jne
mov
mov
inc
mov
dec
mov
jno
test
inc
fsub
fild
adc
xchg
jnp
sti
xchg
xchg
stos
or
mov
add
mov
fwait
or
xor
(bad)
movs
and
hlt
ret
sub
cwde
pop
mov
cmp
sub
pop
(bad)
jl
xchg
mov
mov
stc
xor
or
sbb
jg
push
loop
xchg
push
pop
sub
mov
div
sti
jne
jg
lock
pusha
(bad)
push
test
shr
add
dec
sahf
mov
mov
jns
and
sub
dec
fidiv
or
jmp
je
test
sub
jae
cmps
sub
cmps
mov
xchg
pop
retfw
js
jb
bound
sub
gs
cmp
retw
ds
ror
push
push
sub
sub
into
push
aam
shr
and
imul
sub
mov
jb
loop
inc
jo
test
sbb
inc
sar
icebp
sahf
lds
inc
aad
repnz
mov
icebp
lock
(bad)
addr16
mov
rcr
sar
push
ffreep
add
jle
push
lea
jmp
lock
test
sub
pop
fisubr
cmp
das
nop
(bad)
xchg
das
call
push
daa
jl
inc
adc
jns
sub
enter
adc
jo
push
jb
add
and
scas
sbb
cmp
mov
stos
shl
adc
mov
stos
mov
out
cmc
push
or
jb
stc
add
ja
lea
ins
scas
pop
cwde
dec
into
mov
fcom
ins
outs
call
pushf
xchg
cmc
lods
jno
or
xchg
loop
add
add
in
fidiv
scas
push
sbb
mov
cmp
lods
outs
clc
sub
(bad)
or
popf
div
dec
cmp
inc
leave
(bad)
mov
scas
adc
test
pusha
adc
je
adc
sub
fnstsw
mov
(bad)
sbb
push
scas
in
pop
mov
and
popf
or
into
jl
add
sbb
lock
stos
xlat
xor
push
sub
test
sar
jmp
test
nop
in
xchg
sub
xor
jg
cmp
inc
cmp
jne
jno
push
rol
xor
mov
cmp
lahf
mov
movs
test
xchg
pop
scas
xor
and
in
or
ret
data16
pop
mov
add
push
adc
cmp
cli
adc
mov
jle
popf
cs
in
xchg
mov
ja
leave
jp
xor
pop
out
and
mov
(bad)
pop
pop
pop
jae
inc
mov
mov
xadd
push
push
not
not
dec
inc
pop
pop
xchg
jns
and
aad
xor
movs
fs
test
out
out
jnp
inc
xor
call
cmps
mov
addr16
adc
in
pushf
js
ds
sti
cli
and
xchg
in
add
fnstcw
push
mov
cmps
ficomp
inc
cld
jo
stc
or
nop
rcr
sti
aaa
sub
cmp
pop
not
ficomp
jmp
adc
xor
or
xor
xchg
dec
inc
inc
movs
adc
sub
push
aaa
dec
xor
psraw
inc
xchg
and
cmp
sub
push
shl
mov
ins
add
and
mov
push
in
(bad)
xchg
outs
data16
push
ret
pop
mov
push
adc
mov
repnz
pop
xchg
xchg
out
inc
or
vpunpcklqdq
cdq
sbb
mov
or
adc
adc
xor
dec
mov
push
cli
nop
stc
loop
ins
push
sub
xchg
xor
dec
adc
inc
mov
sub
sbb
imul
dec
lods
stc
out
movs
jle
mov
xchg
mov
pop
xlat
rcl
sbb
lods
int3
jne
pop
sub
pop
ins
adc
dec
cdq
and
call
popa
xchg
(bad)
lea
xchg
pop
lds
repnz
call
in
sub
dec
or
retf
cdq
test
inc
int
xchg
das
sbb
or
repz
js
retf
inc
fcomp
mov
dec
sti
leave
or
and
daa
dec
sub
out
pop
fwait
cmp
imul
push
ja
sbb
or
add
in
and
inc
xlat
lds
stc
sbb
ror
cmp
inc
cmps
jp
les
repz
push
fwait
cmp
test
in
inc
iret
in
movs
cmps
xor
sub
jp
int
test
xor
mov
cmp
push
lods
sbb
jp
retf
aas
jnp
dec
mov
shl
cmp
cmp
icebp
push
fisubr
arpl
js
mov
dec
leave
push
and
mov
jb
pop
data16
mov
fs
xchg
push
ss
mov
dec
(bad)
push
sahf
stos
push
sahf
(bad)
mov
jmp
sbb
sub
jge
mov
js
xchg
or
in
hlt
sbb
in
in
fwait
sbb
imul
adc
or
xor
iret
mov
aam
ins
popf
pusha
mov
pop
dec
sub
test
fcomp
or
mov
mov
cs
inc
pop
xchg
mov
dec
mov
fisttp
repz
or
xor
stos
inc
iret
aaa
pop
sbb
sub
inc
lds
push
rcr
movs
mov
pop
sbb
retf
push
sub
push
jb
xchg
adc
dec
mov
push
cmp
(bad)
push
sub
xor
bnd
popa
mov
push
xchg
adc
mov
push
std
mov
inc
in
ret
mov
es
cmps
cmp
aaa
cli
sbb
icebp
in
ret
mov
pop
push
and
popa
sub
xor
mov
push
jno
inc
and
cmp
mov
sbb
add
lods
test
les
push
xor
ins
dec
into
cdq
jns
jo
lea
push
fldenv
xchg
(bad)
repz
iret
xor
into
mov
jae
dec
cmc
jne
(bad)
pop
dec
enter
add
in
or
test
sbb
pop
aad
mov
add
mov
and
arpl
(bad)
fcmovnu
shl
sbb
ins
mov
cmp
sub
cmp
div
test
repz
pop
imul
push
jmp
sbb
jp
hlt
(bad)
rol
adc
aas
movs
pop
stc
sbb
pop
cmp
lods
push
scas
cs
add
and
inc
pop
stos
jmp
stc
xor
jnp
pop
push
ror
push
sbb
dec
movs
adc
inc
add
mov
jnp
imul
scas
cli
dec
mov
imul
(bad)
pop
stos
stos
cdq
mov
rcr
test
jns
pushf
outs
gs
dec
add
jp
dec
cmps
mov
ins
daa
cmps
xchg
loopne
inc
in
das
xor
inc
(bad)
test
and
add
aad
mov
dec
adc
dec
sub
lahf
add
jl
scas
sbb
int
mov
enter
pop
js
loope
stos
push
cmp
fisub
sub
sub
adc
dec
cli
inc
in
sub
mov
mov
hlt
or
sahf
push
jbe
xchg
add
sbb
adc
jb
xchg
and
mov
push
fimul
cmp
mov
xchg
pusha
jl
sti
out
aam
or
jmp
popf
add
or
pop
cwde
jecxz
mov
cmp
jno
out
imul
es
test
fwait
xchg
addr16
pop
cmp
mov
pop
xor
js
mov
or
je
enter
mov
popa
mov
adc
into
jns
jecxz
cmp
fs
jne
inc
les
jmp
inc
push
xchg
jns
pop
test
lods
fsub
gs
inc
mov
xor
sahf
test
pop
dec
mov
jns
pushf
mov
or
fld
out
fdiv
cmps
aas
inc
pop
aam
sub
or
repnz
out
bound
call
pop
jb
mov
xor
xor
in
push
idiv
je
and
ja
clc
ss
add
aad
lahf
int3
stos
ja
adc
cmp
arpl
ficomp
ins
xchg
inc
cmp
cwde
cwde
test
add
and
sbb
rcr
inc
mov
leave
inc
lods
sbb
inc
inc
mov
pop
push
jno
in
jne
and
test
mov
int3
add
xchg
pop
jle
cdq
stc
(bad)
inc
je
or
jns
rcl
and
sbb
cld
gs
ss
push
pop
mov
cli
mov
dec
or
arpl
push
repnz
cmps
retf
fsubp
jbe
mov
add
into
pop
sti
xlat
mov
dec
inc
lods
cmp
ror
mov
shl
fs
lds
xor
popa
stos
das
dec
inc
cs
dec
imul
daa
aam
in
push
xor
xchg
(bad)
sbb
nop
stc
sub
mov
sbb
scas
sub
pop
push
sti
xchg
push
out
sub
out
mov
add
xchg
mov
mov
add
or
and
cmps
mov
sub
outs
push
sub
popf
fsub
dec
xchg
sbb
sub
aad
pusha
adc
xchg
or
xor
dec
mov
xor
popf
pop
ss
mov
jmp
inc
por
push
ds
cli
cdq
add
cmc
fdivr
dec
jmp
repz
aaa
daa
popa
imul
pop
scas
xchg
inc
stos
inc
sahf
out
sti
push
loop
sar
xor
cmp
mov
das
xlat
sub
fistp
mul
xor
bnd
xor
stos
repnz
fucom
aad
adc
pop
inc
dec
outs
mov
ds
fs
jg
xchg
push
and
lock
out
clc
test
jnp
imul
push
test
addr16
jecxz
dec
jns
(bad)
fwait
nop
adc
sbb
jbe
sub
retf
mov
mov
outs
sbb
mov
xor
pop
outs
call
loop
pop
sub
xor
iret
push
adc
movs
sbb
jmp
mov
mov
gs
jle
mov
lea
inc
push
push
xchg
jae
mov
xchg
fldenv
push
sub
stc
ret
sbb
inc
out
in
or
popf
jp
out
clc
add
in
outs
pusha
sub
mov
iret
mov
cmp
xor
pop
fwait
ds
not
xchg
rcr
cli
fdiv
lods
cmp
loope
sub
pop
lea
mov
jle
clc
leave
bound
fwait
cli
cmps
shl
or
aad
push
sbb
mov
stc
ins
dec
inc
and
aaa
loope
pop
jecxz
mov
push
nop
sub
or
aas
jmp
int3
sub
jle
jecxz
test
js
or
addr16
inc
and
int
sub
int
inc
mov
mov
aas
sub
push
iret
jns
out
xor
jecxz
rcr
stos
lods
imul
xchg
in
rol
sbb
sub
test
shr
loopne
into
fild
cmps
xor
push
scas
pop
mov
fldenv
loop
and
idiv
mov
test
out
jl
xchg
sar
push
loopne
fst
xor
push
or
scas
das
push
pop
adc
pop
pop
int
dec
xchg
gs
call
or
sub
je
fs
lea
sbb
sub
mov
jecxz
xchg
jns
outs
(bad)
fnstenv
xlat
add
shl
neg
sbb
js
dec
xchg
inc
jb
ins
cmp
rcl
push
aad
out
jl
or
mov
xchg
mov
mov
mov
mov
out
loope
repz
mov
int
(bad)
in
out
adc
retf
mov
add
nop
or
cmp
rcr
add
movs
jl
push
movs
sbb
les
xchg
dec
and
cwde
sahf
dec
pop
push
outs
dec
sub
push
mul
push
cmp
mov
aad
fdivr
dec
and
mov
sbb
jle
mov
push
xor
jmp
std
cmp
movs
inc
cmp
call
push
movs
sub
xor
stc
sar
sbb
inc
cmc
xchg
fist
enter
push
pop
add
cmp
outs
aas
test
lds
cli
xor
or
mov
push
sub
xchg
push
mov
mov
add
test
xchg
push
adc
(bad)
dec
or
in
mov
mov
out
sbb
std
arpl
stos
adc
inc
fistp
and
mov
cmp
repnz
fistp
cmc
lahf
dec
xchg
mov
dec
cmps
mov
inc
jmp
or
or
pushf
ins
push
cmps
inc
ins
in
fdiv
repnz
mov
cli
or
imul
fstp
fist
pop
rol
push
in
cmp
xor
sar
movs
add
sbb
mov
mov
movs
or
daa
mov
cmps
push
sub
addr16
cmp
arpl
cmp
adc
sub
call
dec
enter
sub
add
add
push
inc
adc
arpl
mov
mov
jp
call
pop
xchg
mov
adc
mov
mov
push
(bad)
sti
mov
inc
mov
cdq
(bad)
pop
xlat
mov
push
les
aam
push
jp
and
stos
jnp
mov
aas
ficom
mov
fbld
outs
popa
push
pop
mov
shr
ss
adc
push
mov
in
loopne
sbb
retf
add
ror
aam
xchg
repnz
dec
in
push
test
cmp
jb
push
out
xchg
mov
mov
xchg
pop
pop
popa
aad
push
pop
scas
(bad)
fist
sub
mov
dec
push
xchg
jo
mov
mov
cmp
lahf
pop
jo
fs
jno
out
mov
icebp
lds
jmp
add
(bad)
rcr
jns
nop
inc
fnsave
adc
stos
clc
int3
enter
pop
xchg
push
test
scas
jae
cld
mov
sbb
push
sbb
push
xchg
jmp
xor
jae
pop
imul
cld
xchg
pop
and
ret
xor
jb
test
jecxz
cmp
mov
pop
push
scas
pop
xchg
bound
add
fwait
xchg
frstor
dec
in
mov
cs
iret
pop
xchg
into
jge
outs
adc
les
dec
in
sub
out
imul
jno
stc
mov
loope
ja
push
aad
sub
idiv
sub
neg
imul
ret
sbb
mov
ja
popa
scas
stc
jae
push
xchg
add
jl
inc
inc
dec
out
mov
or
add
pusha
xchg
ret
sub
mov
xchg
ins
sbb
aas
adc
rcl
and
mov
cmp
outs
imul
imul
pop
lea
lds
(bad)
push
scas
(bad)
aas
clc
cmps
and
adc
ret
(bad)
push
ss
add
xor
jle
cmp
cmp
(bad)
fnstcw
dec
pop
imul
imul
cmps
pushf
movs
adc
inc
or
add
inc
fstp
push
adc
out
xchg
shl
add
jnp
and
cmps
bound
mov
cmps
leave
push
into
rep
jnp
adc
lock
enter
aad
mov
pop
pop
jecxz
mov
ds
mov
pop
dec
and
xchg
lds
cmps
es
mov
fstp
jne
lock
add
clc
pushf
das
cdq
push
pop
leave
push
(bad)
mov
jle
push
aad
jns
test
shl
mov
push
test
vmovmskps
sti
jg
shl
adc
push
rcr
jl
adc
dec
or
mov
ins
das
cmp
enter
es
jp
mov
xor
and
jmp
int3
mov
pop
push
cmps
pop
nop
jle
movs
jbe
jg
mov
es
movs
xor
jb
sahf
push
mov
pusha
test
dec
xchg
jmp
imul
mov
sti
aaa
popf
pop
mov
add
sbb
adc
jmp
mov
pop
sbb
xchg
lock
pop
ins
pushf
jmp
aad
mov
sbb
(bad)
(bad)
mov
call
jns
lods
scas
jecxz
push
outs
dec
sahf
nop
jle
dec
xor
sbb
mov
pop
test
dec
(bad)
cmps
daa
push
xor
push
push
sbb
imul
les
adc
cmp
jmp
int
es
mov
adc
int3
lods
jge
mov
cs
leave
ds
in
or
in
xor
sub
sar
idiv
fidivr
daa
data16
dec
inc
ror
mov
dec
pop
je
ja
and
test
call
sar
jle
mov
iret
les
(bad)
movzx
jnp
mov
jmp
cmp
sbb
movs
jge
ja
xchg
int
push
adc
std
mov
bnd
lahf
movs
clc
mov
rol
push
test
push
or
ss
data16
dec
(bad)
in
push
and
fldcw
mov
add
pusha
dec
jg
xchg
mov
push
xchg
and
xchg
pushf
jl
and
sbb
in
out
mov
or
mov
dec
adc
pop
dec
mov
mov
in
bnd
cs
cmp
and
clc
retf
mov
movs
jae
or
stc
daa
dec
aam
push
cmp
mov
mov
sbb
cmps
sub
shr
out
iret
and
cli
addr16
clc
push
pusha
pop
hlt
push
daa
push
mov
mov
or
add
fldenv
dec
iret
ins
test
jbe
dec
mov
add
mul
mov
rcl
or
jmp
div
lock
out
cmp
fcmovbe
lahf
cmpxchg
sbb
clc
int3
arpl
loop
mov
dec
(bad)
adc
mov
xor
fst
lock
mov
in
push
jne
ds
mov
lods
sbb
push
cmp
and
fstp
push
cmp
in
ds
lock
mov
inc
push
dec
data16
jmp
or
jl
push
sbb
jno
out
sar
xor
pop
into
(bad)
xor
daa
(bad)
stos
mov
not
or
dec
mov
or
jnp
and
xchg
bound
push
xor
repz
pop
es
inc
aas
pop
push
mov
adc
mov
sbb
or
das
int
int
popf
pusha
stos
addr16
xchg
or
jg
inc
mov
sbb
lds
sbb
or
out
and
loop
or
and
inc
inc
fs
add
mov
or
les
sti
cmp
lock
test
cld
adc
jp
or
aaa
fild
in
das
mov
mov
ins
ds
cmps
push
int
and
xchg
cmc
jp
pop
ins
mov
xchg
or
push
adc
fld
dec
dec
stc
mov
adc
sub
jp
out
aaa
or
push
push
nop
jne
ss
(bad)
repnz
gs
jmp
repnz
push
jg
loop
jae
xor
cdq
test
pop
out
in
jmp
xor
ret
fcmovnb
iret
(bad)
enter
mov
push
loop
xchg
shl
ds
adc
xchg
jl
sub
xor
xor
adc
jbe
jl
and
mov
xor
pop
mov
daa
dec
scas
adc
cmp
jbe
daa
(bad)
adc
xchg
mov
sbb
add
out
sub
pop
imul
loopne
leave
pop
jae
loopne
gs
adc
out
out
addr16
adc
or
xchg
repnz
idiv
push
xchg
cli
fs
std
push
call
adc
jecxz
js
xor
pop
pop
(bad)
jmp
xchg
mov
dec
test
inc
add
idiv
lods
xchg
bndstx
and
cli
int3
test
push
les
rol
daa
or
int
sub
(bad)
cmp
xchg
push
mov
add
jno
not
pavgb
call
(bad)
popa
dec
mov
sbb
loop
ret
and
imul
shl
jp
scas
es
es
loope
jbe
cld
xor
pop
jge
in
addr16
push
leave
in
stos
pop
stc
jmp
cmp
pop
mov
cli
cmps
cwde
adc
dec
fnsave
sbb
sar
pushf
clc
and
mov
jg
jo
lods
call
cmp
jnp
lds
add
or
mov
xchg
scas
sub
sbb
rsqrtps
push
in
pop
jno
mov
hlt
push
xor
push
or
lahf
ficomp
jo
xor
sbb
out
push
jmp
ret
je
push
sub
mov
and
mov
loope
nop
dec
ficomp
dec
xlat
or
popa
inc
dec
jmp
xor
int
(bad)
push
adc
mov
jno
mov
xchg
inc
xchg
(bad)
fwait
cmp
push
sub
inc
mov
push
movaps
xchg
mov
mov
in
cld
fisubr
call
mov
jno
(bad)
sti
daa
cli
or
sub
outs
(bad)
sub
xchg
sbb
adc
sbb
aad
jae
cmp
or
mov
aam
pop
rcr
push
inc
add
test
mov
push
call
inc
fcom
out
adc
mov
test
sbb
xchg
jle
cwde
jns
mov
fcom
or
xor
(bad)
shr
ds
cmps
pop
out
lahf
mov
ds
and
jae
ins
mov
fsubr
loopne
ja
mov
xor
into
(bad)
jbe
mov
data16
in
and
dec
mov
and
test
(bad)
jae
bound
dec
lahf
sti
(bad)
(bad)
ds
fdivr
cmp
nop
push
dec
xchg
cdq
rcr
fwait
test
lea
push
jmp
adc
sub
cs
out
shl
in
push
pop
mov
retf
mov
int
pop
add
(bad)
or
into
fldcw
sahf
aaa
inc
mov
test
lods
pop
retf
test
mov
jno
push
mov
fld
mov
repnz
int
mov
aam
add
sbb
test
add
pushf
and
inc
adc
cld
push
cdq
fstp
xchg
in
adc
jmp
call
dec
jp
mov
mov
pop
cmps
retf
mov
out
mov
(bad)
repz
mov
and
add
sub
jmp
mov
fdiv
pop
fadd
sbb
push
shr
shl
std
cmp
and
lods
cmp
imul
(bad)
fstp
inc
mov
sub
repz
sbb
jns
into
(bad)
retf
arpl
test
inc
cmp
cld
ror
scas
add
call
jl
mov
lods
xchg
ret
add
sar
inc
cmps
(bad)
push
add
jl
jnp
jmp
pop
pop
mov
pop
fild
mov
push
push
inc
sub
je
rcpps
push
xlat
pop
out
ins
fdiv
(bad)
int3
xchg
aas
mov
mov
lahf
popf
arpl
inc
ins
inc
and
paddusw
cmc
inc
and
popa
push
sub
repz
xlat
sbb
push
jg
mov
lods
repz
or
and
sub
sbb
pop
lahf
sbb
adc
call
or
mov
fxch
jl
out
sbb
cmp
sbb
mov
cs
lahf
or
inc
cmp
xchg
repz
(bad)
std
inc
dec
cld
cli
ds
push
push
xchg
leave
xchg
nop
pop
xor
adc
outs
jmp
(bad)
lock
test
lods
scas
jns
mov
xor
dec
xchg
fwait
push
push
sbb
cmp
push
cmp
clc
xchg
xchg
mov
adc
addr16
inc
push
mul
inc
stos
daa
mov
js
sbb
and
dec
outs
nop
ret
mov
pop
leave
pop
lea
sub
pop
and
xchg
xor
sti
mov
sub
std
inc
stc
add
dec
jmp
retf
mul
pop
jo
jne
xchg
push
cmc
das
jb
sbb
fnstsw
pop
je
das
call
sub
test
pop
icebp
sti
test
inc
mov
sbb
push
xchg
aas
test
mov
dec
int3
vunpcklps
pop
xor
xchg
or
lock
aas
ja
es
cmp
fwait
mov
std
sbb
or
fdiv
jmp
ret
push
aas
sbb
jbe
jmp
and
push
sub
lea
loop
pushf
cmp
pop
fnsave
sahf
stos
pop
xor
repz
add
sub
xor
mov
inc
push
jo
lock
mov
repnz
shl
fs
lock
sub
aad
scas
add
fsubp
pushf
cmp
push
sub
sti
jecxz
sbb
shl
mov
dec
xor
mov
cmp
mov
mov
jg
int3
and
movs
int3
test
sbb
mov
enter
or
inc
rol
inc
or
ret
out
add
mov
in
addr16
jnp
fwait
in
jge
add
addr16
test
inc
cmps
add
adc
jo
retf
lds
mov
mov
mov
push
dec
out
jecxz
loopne
retf
xchg
jmp
dec
inc
xor
pop
jg
jl
lea
lds
xor
inc
cmps
sar
mov
stos
test
dec
push
stos
xchg
cs
psrlq
pop
pop
xchg
mov
mov
stos
fcom
inc
jne
outs
mov
sub
shr
and
in
cmp
push
xor
inc
rcl
(bad)
popa
inc
or
pop
push
int3
retf
test
dec
xchg
inc
test
scas
add
inc
dec
dec
cmp
cmps
push
pop
add
cmps
movs
and
add
push
push
hlt
imul
pop
pop
(bad)
mov
mov
lods
outs
test
outs
adc
sbb
cmp
outs
pop
dec
fs
and
sar
lock
dec
mov
lods
mov
mov
lods
into
stos
inc
xor
(bad)
cli
sub
lahf
xchg
push
rcl
shl
mov
rcr
cmp
outs
mov
cmp
or
lea
push
mov
or
scas
in
mov
retf
mov
add
lods
(bad)
fld
push
test
out
stos
icebp
cld
add
adc
daa
lods
cli
jne
dec
or
mov
cmp
out
mov
lea
cmp
pop
xor
ror
out
xchg
jp
sbb
xchg
ret
movs
aam
dec
jle
sbb
inc
cld
je
mov
push
jb
mov
pop
les
jne
cdq
mov
inc
mov
and
xor
sub
lock
sbb
loop
(bad)
adc
xchg
movs
jge
daa
hlt
hlt
ret
cmp
inc
sbb
sub
sub
sub
inc
cmp
test
nop
loope
mov
jb
mov
add
cmp
mov
push
mov
jae
loope
cmc
imul
or
xor
iret
hlt
add
add
add
jo
or
fiadd
rol
mov
jmp
rcl
mul
inc
cmp
pop
xchg
jb
popf
and
(bad)
das
fbld
std
jmp
cmp
lea
cmp
bound
sar
popf
in
fwait
push
mov
mov
dec
cmp
enter
push
lods
mov
and
push
and
(bad)
cmps
sbb
call
xor
movs
rol
sahf
shl
pop
or
jecxz
je
push
or
dec
mov
jmp
cmp
jno
ins
neg
jecxz
clc
cdq
cld
mov
movs
push
(bad)
data16
retf
shr
mov
clc
xchg
ja
mov
aad
or
sub
cmp
cmps
scas
jle
push
movs
icebp
pop
adc
into
dec
pop
lods
adc
cmp
pushf
cs
out
scas
xlat
fdivr
call
add
sub
bound
(bad)
mov
push
imul
inc
dec
cmps
add
loop
les
push
(bad)
and
sbb
into
movs
lea
mov
mov
jae
mov
addr16
(bad)
jg
(bad)
dec
mov
pop
ficom
add
inc
imul
cmp
or
and
aas
mov
and
mov
or
ror
addr16
repnz
jnp
sti
repz
loope
jle
ins
adc
adc
jno
repz
data16
je
pop
aaa
and
cmp
rcl
sub
test
fst
movs
mov
aas
arpl
dec
sbb
push
aad
mov
mov
push
mov
inc
pushf
aad
out
test
pop
push
loopne
aam
mov
in
and
or
scas
cmp
mov
icebp
sub
mov
lods
pop
retf
or
mov
xchg
imul
cmps
jmp
pop
movs
cmc
jo
scas
addr16
loopne
adc
cmp
lea
mov
hlt
jl
test
cli
pop
retf
fcomp
cwde
sti
xor
hlt
push
(bad)
aaa
mov
popf
fild
arpl
push
push
pop
lea
push
dec
out
(bad)
cmps
in
sbb
xchg
int
and
or
xor
inc
push
leave
inc
mov
xor
(bad)
fistp
mov
out
into
hlt
mov
outs
frstor
das
add
jo
adc
in
shl
or
adc
mov
dec
adc
das
test
and
push
movs
jmp
shr
add
xor
sub
ds
retf
shl
mov
mov
(bad)
sbb
sub
in
pop
imul
popa
xchg
jp
imul
pop
aad
fldenv
mov
push
ficomp
xchg
mov
aaa
mov
cwde
mov
add
cmp
sahf
sub
lock
adc
or
xlat
repnz
cmps
lahf
push
mov
rcl
in
pusha
or
jl
jnp
loop
xor
push
(bad)
mov
fldcw
(bad)
sub
cmc
dec
push
in
ret
and
js
jbe
movs
fbld
mov
mov
adc
out
and
pop
or
and
pop
and
mov
xchg
jo
addr16
pop
xchg
in
ins
jnp
push
and
adc
jne
stc
fiadd
and
dec
dec
pop
dec
ret
pop
ret
and
jle
ror
pop
xchg
mov
icebp
mov
and
inc
mov
in
sti
dec
into
fst
bound
sub
(bad)
or
(bad)
sbb
adc
shr
mov
jmp
dec
jae
push
scas
add
idiv
stos
add
jno
push
adc
mov
mov
push
rol
push
and
xor
and
dec
jle
inc
sahf
js
sahf
sbb
add
adc
add
mov
mov
inc
das
dec
pop
xchg
das
pop
ficom
mov
sbb
repz
add
loop
push
arpl
jbe
push
jecxz
push
cmp
cmovbe
jne
data16
sub
sbb
jle
push
pop
adc
cmps
les
lds
dec
cmp
mov
mov
push
(bad)
loope
jle
(bad)
xchg
push
lods
jle
sbb
mov
inc
xor
jno
jg
(bad)
retf
in
push
xor
add
mov
aaa
push
add
ins
cwde
sub
(bad)
lods
imul
aas
xchg
sub
cmp
test
shl
(bad)
fld
pop
or
cs
pop
in
loope
or
sub
cli
out
mov
cmp
pop
or
imul
and
dec
movs
mov
add
hlt
jo
cmp
xchg
sbb
and
dec
adc
add
imul
push
mov
lods
inc
and
dec
mov
popa
movs
cmp
sub
ins
in
push
dec
mov
sub
adc
pop
ror
pop
push
shr
dec
push
pop
not
es
mov
mov
mov
repnz
cmp
out
or
xor
sbb
push
inc
mov
pop
fstp
push
repz
jecxz
or
sub
adc
fld
fdivr
aad
adc
push
add
mov
retf
jno
jno
pusha
mov
xor
nop
and
inc
ds
fadd
xchg
mov
cld
inc
sub
add
test
cmp
ret
xor
adc
ja
fsub
sub
or
adc
jmp
in
addr16
inc
loope
jp
gs
mov
and
dec
adc
sub
mov
test
popf
adc
lahf
xchg
(bad)
in
call
mov
fisttp
test
leave
dec
adc
cmp
push
fld
jp
push
xchg
pushf
dec
push
xchg
pop
add
hlt
test
pusha
fwait
movs
stc
cs
cld
jmp
adc
or
sbb
inc
inc
dec
mov
loopne
repnz
cdq
pop
int
sti
jge
jp
aaa
pop
or
mov
inc
push
(bad)
sbb
mov
pop
out
(bad)
dec
push
add
pusha
mov
(bad)
cmps
push
test
clc
daa
lods
jbe
adc
cmp
idiv
inc
hlt
mov
fnstcw
mov
jge
sub
adc
sbb
lods
jo
arpl
xchg
dec
(bad)
mov
sti
mov
stos
sub
inc
inc
sahf
add
fnstenv
int3
push
daa
dec
rcr
imul
(bad)
sbb
and
jbe
out
jmp
scas
lds
jle
push
adc
repnz
mov
mov
lock
sub
xchg
(bad)
mov
pop
mov
icebp
pop
adc
cwde
mov
enter
aam
mov
xchg
stos
jl
and
sbb
or
sti
fwait
mov
icebp
jns
mov
adc
fild
inc
iret
shr
jnp
jecxz
sub
mov
cmps
(bad)
in
push
dec
push
arpl
int
in
(bad)
outs
pushf
mov
add
repnz
xlat
push
in
test
jg
fwait
daa
and
mov
xchg
sub
sub
pop
jmp
add
in
dec
pop
push
lahf
inc
sub
mov
daa
dec
xor
xchg
sti
jae
adc
inc
stos
dec
ds
adc
aam
into
outs
push
aas
and
jae
fprem
shl
or
push
ret
pop
or
add
(bad)
rcr
sub
inc
lock
or
shl
imul
lods
mov
xlat
push
enter
repz
pop
ret
addr16
lds
in
mov
ror
cmp
xchg
xor
mov
stos
test
movs
test
test
push
jg
ins
mov
inc
xor
sbb
xchg
(bad)
jmp
inc
gs
imul
ins
push
ja
push
(bad)
xchg
push
mov
ds
push
addr16
mov
scas
jno
shl
add
(bad)
in
push
push
dec
(bad)
ror
ror
cwde
cmp
jecxz
dec
les
or
popf
mov
jmp
pop
outs
mov
cli
fdiv
mov
popa
jg
xchg
int
outs
pop
loop
cs
xor
neg
cld
mov
inc
mov
xchg
cdq
jecxz
ror
movs
mov
and
pop
test
iret
xchg
clc
push
jle
push
jle
imul
sbb
imul
bnd
ficomp
add
adc
dec
cmp
xchg
not
jmp
dec
shl
repnz
mov
into
mov
enter
mov
pop
sub
sar
pop
sbb
cwde
push
dec
jp
xchg
mov
pop
fld
jecxz
or
inc
aam
fld
test
cmp
and
in
std
and
mov
and
les
(bad)
scas
xchg
dec
pop
loope
xor
out
ss
xchg
or
int
(bad)
das
add
in
mov
je
jmp
sbb
rol
fsubp
aaa
das
test
retf
shr
cmp
fistp
mov
inc
rcr
call
das
(bad)
or
rcl
mov
inc
lea
retf
stc
mov
int3
inc
xor
lods
pushf
aaa
mov
movs
mov
outs
int
mov
add
aaa
ss
cs
aad
or
lahf
jo
fsub
aam
adc
mov
enter
sub
mov
(bad)
cmp
xor
push
mov
cmp
pop
mov
push
aad
pop
mov
mov
or
push
xchg
fdivrp
cmps
leave
mov
mov
jg
jnp
xchg
pop
push
sub
mov
dec
cmp
dec
test
mov
cmp
adc
(bad)
cmps
add
push
cmp
scas
loope
iret
mov
and
pop
inc
ror
push
retf
sbb
idiv
mov
pop
stos
mov
das
mov
es
push
adc
mov
stc
push
mov
push
pop
adc
and
in
sbb
add
int3
sahf
jae
inc
nop
sbb
ja
clc
mov
popa
mov
test
pop
xlat
adc
or
retf
test
jo
inc
inc
stos
inc
movs
mov
jns
inc
xlat
dec
sbb
inc
mov
mov
in
les
mov
or
out
push
or
jno
jbe
mov
mov
xor
jnp
pop
add
stos
leave
dec
(bad)
jmp
jb
in
push
imul
fwait
mov
lock
push
ror
sub
(bad)
(bad)
pop
shr
out
jle
mov
xor
call
inc
sub
sbb
inc
or
imul
int3
lods
cmp
push
cmp
jmp
ins
cld
sbb
sbb
sbb
repz
pop
push
cmp
cld
jmp
mov
and
mov
push
push
mov
fwait
pusha
push
lock
iret
dec
cmps
movs
or
test
sahf
dec
xchg
add
add
add
dec
cmps
cmp
mov
cmp
call
data16
std
xlat
call
stos
mov
push
outs
js
mov
bound
movs
sub
jecxz
mov
jecxz
and
cmp
mov
fcom
and
jae
mov
sub
adc
out
add
enter
dec
push
nop
sbb
scas
popf
dec
jle
adc
or
push
rep
imul
test
imul
mov
pop
loope
and
cmps
mov
aad
sub
push
inc
rcl
or
mov
in
push
push
cwde
xor
jns
gs
aam
mov
test
cmp
rcl
push
dec
jno
jp
jge
test
stos
inc
push
mov
repnz
out
dec
or
push
lds
loopne
push
cmp
int
or
cld
sbb
pusha
lea
inc
dec
retf
mov
popa
stos
add
mov
cs
adc
call
mov
pop
xchg
pop
jp
xor
sub
lods
aas
mov
test
popf
mov
mov
rcl
fsubr
test
inc
jnp
cli
add
pop
inc
cmp
pop
mov
cmps
pop
adc
popf
daa
les
lahf
ror
jg
mov
lock
(bad)
fmul
retf
movs
cmp
imul
outs
cmp
mov
jg
push
mov
mov
bound
inc
dec
xlat
pop
mov
je
add
xor
ins
lea
iret
stos
fidiv
popf
jae
popf
in
jo
lods
adc
lds
pop
mov
mov
stos
cld
pop
push
jle
sbb
pusha
xor
xor
xchg
lea
mov
jno
fstp
pop
outs
xor
sbb
test
jle
dec
sti
fwait
or
popf
jnp
sub
mov
push
stc
(bad)
jmp
test
and
ins
in
pusha
sbb
lods
or
mov
add
xlat
cmps
jg
push
add
push
jae
arpl
lds
ds
jge
sbb
les
iret
cmp
adc
(bad)
push
aad
mov
mov
js
and
mov
and
jle
out
jg
stc
pop
aas
ss
and
push
mov
xor
push
cmp
pop
mov
outs
loope
(bad)
in
aad
sub
(bad)
adc
stc
add
push
jecxz
sbb
cmps
lods
sbb
and
xor
aas
loopne
cmp
nop
cmps
xor
pop
pop
mov
aad
fmul
gs
jnp
jg
xor
push
ja
adc
pop
repz
into
sub
pop
das
out
cwde
les
jne
jl
(bad)
(bad)
xchg
jns
cmp
adc
fidivr
and
jge
movs
push
push
sbb
mov
inc
data16
repz
loop
inc
mov
or
test
or
cmp
outs
ja
xor
enter
xchg
or
mov
push
leave
xchg
lods
cmp
mov
iret
mov
push
mov
fld
nop
or
sub
dec
mov
js
ror
push
cmp
(bad)
jnp
popf
sub
push
add
xor
imul
pop
adc
jno
cli
adc
jmp
aad
cmps
jl
dec
xor
(bad)
ror
xchg
stos
jecxz
fs
movs
dec
push
mov
xchg
fprem1
outs
inc
inc
cmp
xchg
sub
ins
push
lods
fcomp
xchg
push
xchg
sbb
jp
(bad)
xchg
test
call
xor
or
(bad)
mov
aam
loope
lea
hlt
test
pop
push
mov
push
dec
lds
or
cdq
sub
xor
sbb
mov
mov
js
mov
aaa
mov
inc
test
or
fwait
aaa
lock
mov
lock
xor
or
add
jnp
fmul
push
bound
ret
imul
jne
jge
cmps
xchg
fsub
int3
push
sbb
push
push
out
mov
in
xor
aaa
pop
sub
js
push
pop
xor
ins
xchg
pushf
clc
mov
jp
cmp
ds
mov
cmp
dec
stc
sbb
pop
popf
cld
or
into
mov
fst
sbb
adc
add
retf
jge
push
scas
les
in
lea
mov
jns
fist
xchg
jo
jmp
inc
scas
sub
out
pop
xor
jmp
inc
sub
and
ds
cmp
add
xor
and
test
mov
add
or
call
mov
cld
test
mov
aaa
jno
xor
in
mov
push
jnp
mov
cmps
mov
ficomp
inc
aad
inc
pop
xchg
mov
push
push
pop
jno
xchg
jle
jle
cmps
xchg
ret
das
mov
xchg
xchg
cdq
test
or
mov
loope
enter
test
sti
sub
out
cdq
inc
pop
xor
shl
in
pop
retf
shr
cmp
cmp
sub
xor
xchg
out
lea
psllq
fdivr
fwait
xor
cs
lods
mov
mov
jmp
into
scas
mov
(bad)
ja
mov
data16
pop
or
ss
out
pop
xchg
xor
cmp
out
jl
add
cmp
lods
push
inc
mov
ss
mov
fisub
mov
fld
test
mov
ja
loope
jp
xchg
and
adc
push
fwait
mov
push
fdiv
push
retf
mov
jo
xchg
stos
pushf
popf
dec
sbb
in
push
fnstsw
sti
sub
jle
in
mov
push
movs
cmp
dec
inc
loope
cmp
scas
mov
adc
scas
sub
mov
rcr
dec
retf
fwait
push
out
dec
cli
popf
je
(bad)
(bad)
jae
or
push
mov
jnp
ins
ret
cli
sub
test
icebp
outs
enter
ins
ja
mov
daa
shl
adc
add
cmp
outs
test
xchg
xchg
or
xor
and
xor
mov
dec
iret
outs
jmp
sbb
mov
out
push
movs
outs
push
jmp
push
shl
dec
fnsave
mov
popf
or
xlat
sub
xchg
sub
pop
jp
imul
cmp
cmc
stos
nop
sbb
jne
and
hlt
push
mov
repnz
pop
sbb
dec
call
out
mov
inc
cmp
pop
xchg
cmp
stos
dec
pop
xchg
xor
push
sbb
pusha
jo
jne
mov
xchg
push
aas
push
retf
imul
mov
jle
fldz
inc
jb
leave
(bad)
mov
jnp
and
test
pop
sbb
loop
jle
xor
add
aam
rcr
inc
jp
mov
fcmove
int
dec
loope
jecxz
stos
in
sbb
push
sbb
inc
push
hlt
imul
out
loope
xchg
xor
dec
sbb
and
jne
popa
xor
push
shl
cli
mov
arpl
ins
fldcw
imul
xor
or
xchg
xchg
mov
test
popa
xlat
jnp
cmp
sub
movs
pop
in
movs
cs
add
popa
icebp
inc
leave
outs
inc
cld
ins
mov
pop
adc
and
xchg
out
aaa
arpl
outs
jne
or
movs
mov
out
cmc
loopne
pop
add
bound
(bad)
das
sahf
sub
jmp
jmp
add
mov
(bad)
out
aam
arpl
aam
fidiv
ja
es
mov
je
or
jl
and
fs
fstp
fcmovnbe
xor
mov
call
retf
lea
push
mov
jle
loop
icebp
or
ins
iret
xchg
and
adc
pop
or
inc
ss
bound
ret
push
xchg
mov
jae
fcmovne
mov
sub
lods
and
inc
ficom
or
sbb
enter
imul
inc
clc
ror
aad
inc
dec
cmp
pop
in
dec
leave
sahf
pusha
mov
fst
cwde
inc
cmp
fst
push
adc
imul
cld
push
ins
dec
bound
clc
sbb
fldcw
mov
es
scas
push
mov
push
cmp
std
loop
fwait
mov
dec
sub
and
and
iret
inc
inc
das
lock
and
inc
cvtdq2ps
fidiv
out
loop
(bad)
cwde
bound
mov
fist
bound
scas
rcl
into
add
(bad)
ror
cmps
das
ins
sar
mov
sub
pushf
scas
push
jge
push
aaa
ja
imul
push
jg
test
das
and
fsubr
dec
sbb
push
sahf
sti
lds
aas
xor
(bad)
add
shufps
adc
les
mov
mov
mov
jg
xchg
sbb
lea
cmp
push
out
push
outs
dec
push
cs
movs
mov
add
push
test
call
cmc
ficom
mov
mov
cs
mov
aas
popa
add
xchg
jmp
mov
inc
mov
(bad)
sub
dec
out
aaa
shr
xor
lods
inc
xor
sub
mov
outs
cmp
sbb
mov
imul
adc
pop
int
mov
sub
add
in
mov
mov
jbe
xchg
aam
call
shr
pop
xchg
push
test
adc
adc
jno
mov
mov
pop
and
movs
aaa
pop
cwde
pshufw
adc
fld
xchg
mov
jp
fist
jne
dec
jbe
out
sar
std
gs
stos
pop
outs
adc
xor
inc
jmp
cmp
mov
mov
adc
popf
cmc
int
cwde
loope
dec
imul
in
icebp
mov
sub
cli
fisubr
push
ret
enter
mov
jp
mov
mov
fcomp
xor
fucomp
shl
xchg
dec
ret
mov
mov
call
mov
in
sahf
mov
out
pop
pop
fnsave
push
outs
pop
daa
fwait
pop
aaa
push
and
add
or
sahf
sbb
add
inc
dec
fld
lds
fucomp
cmps
xor
f2xm1
stc
or
imul
mov
fidiv
pop
push
sti
loop
mov
and
xor
loope
fistp
xchg
pop
les
adc
movs
and
sahf
and
mov
icebp
xor
xor
popa
add
pusha
mov
cmp
pop
xchg
call
xor
jle
(bad)
push
lds
push
sbb
xchg
cmps
loop
xlat
std
push
pop
dec
and
stos
xchg
push
jge
push
out
add
mov
test
(bad)
xchg
ss
jmp
mov
js
imul
fmul
push
pop
sbb
mov
add
push
ins
pop
xchg
nop
les
popf
rol
loopne
test
mov
aam
jns
xchg
add
daa
xor
dec
or
test
mov
jno
push
aam
add
sbb
dec
test
push
mov
jmp
xchg
jl
out
add
mov
sub
pop
jno
adc
dec
push
test
pop
adc
sti
aad
scas
into
test
xchg
xchg
repz
jbe
xchg
test
ror
ds
fistp
sahf
outs
ret
aaa
mov
pop
jo
xor
push
sahf
int3
pop
adc
mov
imul
test
(bad)
mov
pushf
scas
push
dec
add
mov
aas
int
loopne
and
and
dec
and
stc
call
shl
mov
sbb
rep
pop
jne
dec
int
sub
dec
sub
stos
gs
xchg
xchg
add
in
mov
xchg
mov
dec
dec
sub
xor
int3
nop
push
or
xchg
mov
and
sub
or
dec
test
or
movs
jmp
(bad)
mov
imul
sbb
es
jo
iret
inc
adc
mov
and
out
and
(bad)
aad
add
popf
repz
js
jp
mov
popa
add
addr16
pop
mov
jmp
out
addr16
adc
xchg
call
adc
sbb
push
test
scas
rol
jmp
ret
cmp
and
iret
cmc
(bad)
shl
lock
into
xchg
ret
call
in
dec
ins
push
push
inc
add
je
jns
and
repz
sbb
cmp
sub
mov
ins
xor
pop
jae
(bad)
pop
or
pushf
push
lea
test
leave
dec
pop
dec
fimul
or
test
jnp
fs
scas
or
push
mov
sbb
movs
mov
out
ret
adc
jae
jp
push
pop
xchg
stos
fcom
stos
dec
xchg
inc
std
ror
jb
movs
rep
pop
cmp
sti
push
fcom
and
xlat
(bad)
scas
(bad)
pop
pushf
inc
mov
imul
mov
push
enter
and
and
jecxz
pop
imul
push
loope
pop
sbb
inc
cmps
shl
or
dec
lods
jnp
sbb
xor
out
(bad)
cmp
sub
xchg
call
movs
lock
outs
daa
repnz
outs
mov
test
or
mov
or
inc
pusha
mov
fdivr
(bad)
pop
xchg
cmp
cmp
mov
pop
cdq
or
jo
mov
test
jnp
rcr
test
and
push
xor
stos
mov
adc
ins
lock
lods
sar
pop
ss
icebp
fcomp
mov
ficom
sub
inc
jp
mov
ja
push
jb
fadd
xadd
and
push
les
jle
or
sub
adc
or
fld
dec
cs
jle
call
xlat
or
sbb
ja
or
dec
ror
fdivr
cdq
jo
sub
(bad)
cli
stos
pusha
xor
dec
pop
out
cmp
mov
(bad)
push
(bad)
stos
xor
cwde
push
push
aas
rcr
lds
lods
(bad)
cli
inc
fisub
mov
xlat
mov
stos
adc
mov
popf
jns
mov
lods
add
sti
lds
xor
xor
arpl
lahf
or
cmps
test
call
or
ss
ds
pushf
mov
je
and
sar
cmp
add
lds
lahf
push
or
inc
je
mov
in
adc
call
or
and
fistp
mov
mov
rcr
adc
xor
test
nop
retf
push
popa
adc
mov
or
mov
fbld
dec
and
or
movs
dec
adc
mov
xor
je
pop
nop
ins
leave
nop
loop
push
add
or
jl
jecxz
adc
jns
and
sbb
xchg
jl
(bad)
jmp
push
int3
jmp
or
and
pop
movs
mov
nop
sar
xchg
test
ins
sahf
shr
inc
pop
mov
add
out
xor
lahf
sahf
cmp
pop
stos
inc
jbe
fld
mov
pop
add
mov
and
ucomiss
hlt
fidiv
cmp
sub
adc
push
xchg
iret
or
mov
int3
out
push
aam
mov
scas
push
addr16
cmp
cmp
jecxz
mov
or
and
pop
popa
sbb
jo
lods
ja
xor
fidivr
out
pop
imul
(bad)
imul
mov
aas
ret
fist
jg
ins
retf
repz
or
jns
adc
mov
or
jno
jno
and
lds
ds
dec
inc
fwait
push
movs
cld
pop
push
mov
mov
xor
in
jnp
mov
xchg
repnz
into
mov
mov
lods
out
sub
leave
jmp
xor
or
gs
adc
pop
addr16
fild
xchg
push
dec
mov
lock
les
add
cmps
add
fisubr
add
dec
cwde
fimul
rcl
loopne
mov
int
mov
pushf
pushf
add
in
(bad)
cmp
ret
mov
leave
sbb
mov
mov
sub
push
and
and
dec
jo
icebp
dec
and
push
inc
fstp
(bad)
(bad)
test
xchg
test
es
dec
adc
cmp
or
jmp
push
inc
loope
call
add
xor
popa
pop
mov
pop
inc
clc
jbe
loopne
adc
adc
pop
dec
jns
icebp
mov
sbb
xor
les
dec
push
jge
push
repz
js
mov
mov
pop
or
and
xchg
mov
ins
xchg
retf
push
scas
mov
jae
out
hlt
test
iret
cmps
jmp
pop
jp
sar
mov
pop
out
push
test
or
mov
scas
mov
cdq
pop
popf
cmp
sti
xchg
hlt
and
(bad)
and
or
lahf
xor
mov
and
xor
mov
pushf
iret
leave
sbb
adc
sbb
enter
sti
dec
dec
std
(bad)
mov
xchg
or
cmp
ins
cmp
and
dec
push
mov
or
fcomp
aad
mov
inc
add
dec
fwait
into
xchg
push
dec
int3
and
sbb
jmp
aam
jmp
cmp
stos
mov
sbb
bound
dec
push
dec
and
xchg
(bad)
and
mov
push
stos
retf
xor
imul
push
(bad)
mov
sti
pop
imul
xchg
push
lock
(bad)
rcl
popa
xchg
popf
mov
and
pushf
(bad)
in
sti
out
inc
dec
(bad)
dec
in
or
jb
xor
mov
je
inc
add
dec
and
cdq
test
inc
daa
mov
popf
xchg
out
retf
jl
sbb
and
mov
push
cld
push
(bad)
clc
cmp
xor
daa
mul
shl
popf
pop
xchg
data16
dec
std
int
jle
xchg
stos
sbb
ror
imul
imul
push
in
xor
popa
repz
mov
lahf
sub
pop
pop
das
jle
adc
cmovs
inc
mov
pushf
addr16
dec
enter
inc
mov
mov
fld
mov
lods
inc
mov
mul
xchg
push
nop
ret
inc
in
lahf
popf
mov
shl
in
arpl
jo
pop
shl
mov
fadd
repnz
int3
loopne
stc
sbb
jb
or
ret
xchg
enter
mov
(bad)
(bad)
jnp
std
aad
lea
pop
sub
inc
les
jns
pop
mov
rcl
mov
mov
repz
mov
jno
jl
xor
(bad)
inc
mov
add
mov
adc
inc
sbb
cmp
mov
iret
test
popf
push
scas
jbe
and
(bad)
mov
sub
jne
xchg
in
in
dec
sbb
push
xor
adc
mov
lods
mov
retf
or
sub
xchg
icebp
out
ret
jae
outs
ss
outs
mov
std
retf
cmp
sar
loopne
jle
rol
pop
mov
dec
daa
pushf
popa
inc
add
xor
xor
add
sbb
push
xchg
add
aam
test
jecxz
mov
pop
in
sti
xchg
ss
jb
hlt
ror
pop
pop
imul
cmp
lock
movs
shr
mov
jmp
jecxz
das
adc
sbb
sbb
neg
movs
sbb
retf
pop
pop
mov
sbb
(bad)
jns
or
hlt
and
adc
cmp
in
ins
jg
enter
aas
mov
sbb
int
in
stos
mov
xchg
into
int3
sub
sbb
push
add
and
lods
xchg
mov
and
inc
mov
in
fadd
icebp
push
test
bnd
xor
xchg
push
enter
fisubr
das
ja
repnz
daa
out
jb
fcom
add
dec
js
out
pop
jo
cmps
push
mov
xor
xchg
mov
mov
mov
and
mov
test
imul
jns
imul
pop
mov
rcr
mov
les
repz
in
push
adc
pop
shl
arpl
jmp
or
cs
push
and
pop
loopne
movs
push
in
jmp
retf
xchg
and
fiadd
dec
jle
retf
mov
sbb
or
mov
je
adc
icebp
pop
xor
in
cmp
std
pop
push
dec
movaps
add
mov
xchg
mov
je
fmul
fmul
daa
das
out
xor
clc
ret
pop
fiadd
shr
cmp
pusha
sub
dec
shl
test
and
sbb
xchg
mov
sahf
xchg
retf
cs
mov
mov
jp
bound
push
daa
test
lea
fsubr
push
aas
lock
push
test
jae
inc
mov
mov
push
inc
mov
test
or
sbb
lods
sar
push
jge
or
xchg
(bad)
lahf
sti
mov
push
icebp
jle
push
adc
and
xor
sbb
sar
fwait
cmp
push
xchg
push
dec
inc
loop
xor
inc
jae
imul
pop
jno
sar
fsubr
shr
dec
mov
retf
push
cmps
and
loope
ss
cmc
sahf
out
lods
push
sti
mov
imul
ja
in
mov
in
ins
rcr
test
retf
add
pushf
sbb
or
xchg
shl
in
inc
pop
or
and
cmp
mov
sub
xor
cwde
dec
dec
popa
int3
and
fstp
shl
xchg
cmp
out
xchg
xchg
mov
mov
jns
pop
adc
lahf
movs
out
cmps
hlt
and
outs
mov
lods
mov
sbb
xlat
push
loop
sub
fbld
iret
int
(bad)
push
dec
xchg
push
mov
and
sti
test
and
(bad)
repnz
imul
lods
(bad)
cmp
xchg
ja
push
call
pop
es
int3
sbb
sbb
iret
pop
arpl
xchg
xchg
dec
dec
push
scas
jae
pop
sbb
mov
mov
adc
sar
call
std
std
ret
movs
mov
enter
(bad)
jge
and
jge
adc
cmp
add
push
cmp
imul
arpl
(bad)
loopne
cmps
or
jb
sub
cwde
fild
std
in
(bad)
sbb
push
add
(bad)
adc
mov
fisubr
les
addr16
aad
sbb
test
xor
outs
aad
jl
mov
jp
je
pop
clc
(bad)
cwde
jg
loope
xor
or
rcr
mov
fucom
inc
outs
scas
mov
cmp
nop
out
fwait
adc
(bad)
dec
out
cdq
arpl
popa
mul
push
mov
xchg
or
adc
out
cmps
xchg
inc
jb
fwait
popa
xchg
arpl
cmp
sub
iret
mov
movs
ins
test
enter
jno
sbb
lock
sbb
int3
cmps
outs
push
mov
sbb
push
into
and
xor
push
mov
scas
mov
jns
xor
icebp
push
pop
ins
mov
fnstsw
hlt
pop
pop
push
mov
jns
mov
mov
ret
sti
sub
mov
hlt
in
jno
ret
pushf
in
sbb
movs
ror
(bad)
call
sub
call
out
imul
cs
mov
les
xchg
sbb
mov
pushf
fidiv
outs
mov
push
sub
hlt
mov
pop
(bad)
xlat
inc
loopne
je
inc
xchg
pop
mov
push
out
push
mov
cmps
stos
xor
sbb
sub
(bad)
fst
fisttp
mov
mov
pop
or
or
adc
ss
cmp
xchg
lods
xor
mov
mov
xor
in
add
stos
sbb
pop
add
fcom
or
addr16
outs
idiv
or
push
std
lahf
dec
test
fstp
imul
sub
call
push
mov
mov
lods
sbb
(bad)
cli
(bad)
aad
and
cwde
jp
je
pop
cdq
dec
sub
sbb
and
popa
(bad)
pop
dec
dec
cmp
leave
inc
nop
jecxz
mov
inc
ds
das
jmp
les
jge
orps
shl
mov
add
lock
mov
jb
cmp
retf
ret
stc
add
(bad)
mov
sti
xor
hlt
mov
imul
adc
push
sub
fnstcw
and
sti
inc
dec
jp
sub
(bad)
sahf
out
lds
adc
dec
xchg
mov
adc
jno
jno
(bad)
(bad)
(bad)
in
outs
in
cld
pop
movs
(bad)
aad
pop
scas
mov
out
sbb
push
xchg
push
and
mov
mov
fwait
js
xor
ins
xor
test
lods
cmps
repz
dec
out
in
ret
fbstp
scas
cmc
sub
push
ins
push
into
pop
lahf
sub
inc
xchg
sbb
repnz
sbb
jnp
fimul
lock
pop
or
(bad)
imul
mov
out
je
sbb
cmp
loope
pop
xor
ficomp
mov
pop
in
xor
idiv
xor
mov
mov
xor
mov
js
mov
int3
rcr
inc
sub
rol
test
push
or
and
adc
sbb
pop
ret
jns
mov
(bad)
enter
rcl
test
and
shl
cwd
pop
cmc
lahf
rol
xchg
cwde
push
pop
add
adc
daa
inc
mov
stos
cli
and
arpl
ds
out
add
sub
push
xchg
and
int3
daa
pusha
sub
scas
fidivr
dec
enter
pop
xchg
cdq
ret
fistp
xor
retf
cmp
je
xor
fcmovu
js
mov
adc
xchg
mov
addr16
and
leave
enter
fimul
fbld
jecxz
mov
sti
aad
dec
sbb
sub
or
jecxz
add
lods
push
mov
add
sbb
(bad)
sub
xchg
cld
mov
cmp
fidivr
jg
loopne
out
or
out
fnsave
rcr
lods
call
js
cmp
lock
or
sbb
push
xchg
in
hlt
loope
lods
cdq
cmp
ins
scas
loope
movs
out
dec
mov
pusha
pop
sbb
push
dec
fadd
jo
push
in
pop
mov
outs
lea
jae
xor
mov
(bad)
cmp
cdq
arpl
pop
lods
js
aad
jecxz
(bad)
cwde
dec
jmp
sbb
cmp
push
xlat
scas
add
movs
or
inc
test
dec
in
xor
push
and
add
sbb
cs
ins
loope
cmp
jg
lods
pop
stc
jae
adc
loope
cs
adc
push
shl
cmc
mov
lock
push
pop
push
ret
sub
or
and
stc
lahf
(bad)
jnp
outs
or
fsubr
xor
jo
test
sahf
cmp
jbe
lea
mov
mov
push
add
(bad)
stc
movs
fdiv
scas
mov
sti
fisttp
iret
mov
(bad)
ja
daa
cmps
mov
jne
pop
icebp
shl
(bad)
daa
adc
cdq
xchg
mov
push
sbb
cmp
and
mov
pop
adc
out
dec
xor
jmp
jmp
push
mov
mov
ins
scas
sbb
(bad)
addr16
outs
add
sbb
cs
mov
lds
inc
dec
scas
fadd
push
mov
sbb
push
jae
push
push
xor
jg
push
jecxz
pop
dec
pop
fwait
push
clc
mov
call
adc
cdq
cmp
or
call
fadd
pop
jno
pop
movs
mov
xor
xchg
fiadd
lds
repnz
aas
scas
scas
push
ret
lods
rcr
adc
(bad)
jmp
lock
lds
pop
or
pushf
xchg
push
std
mov
movs
adc
xchg
pop
pop
pop
or
jno
leave
loope
sub
and
push
adc
call
sbb
pop
inc
or
in
mov
jae
hlt
inc
adc
cli
icebp
pop
shl
pop
les
mov
cs
pop
sbb
add
mov
pop
ja
mov
mov
clc
call
daa
ins
ss
jo
fucomip
mov
mov
enter
pushf
(bad)
std
cs
dec
mov
or
adc
mov
mov
jge
out
retf
inc
inc
jp
adc
cmp
dec
and
pop
neg
cli
push
aam
aam
lahf
outs
push
xor
aas
(bad)
adc
sahf
sahf
out
ret
cmc
mov
fs
and
adc
(bad)
pusha
sti
bnd
jnp
xchg
ds
pop
mov
int3
(bad)
dec
xchg
pop
sti
and
sub
and
and
mov
push
loope
call
cmp
and
mov
adc
int
popf
out
jns
fcomp
jecxz
mov
sbb
test
test
mov
(bad)
cmp
scas
pop
sub
lods
mov
in
clc
xor
xchg
popf
jne
sahf
mov
dec
push
push
sbb
loop
out
sahf
in
mov
in
sbb
mov
jg
out
push
add
push
add
imul
push
sbb
inc
dec
pop
add
ret
stos
lahf
xchg
and
jmp
xlat
dec
retf
addr16
cmp
imul
out
out
xchg
push
fmul
mov
(bad)
jno
jo
loop
and
push
iret
mov
mov
shl
sub
mov
jns
or
sbb
sbb
ror
(bad)
out
or
mov
sub
jmp
and
add
je
xchg
test
lock
sub
mov
pushf
stos
adc
jle
sub
cmc
adc
pop
leave
sar
mov
cs
clc
pop
cmc
adc
movs
rol
mov
lock
mov
dec
sub
or
sbb
ss
adc
test
inc
into
mov
lock
xchg
jne
mov
dec
(bad)
xchg
cld
push
popf
add
dec
pop
cmp
adc
inc
jecxz
rcl
imul
je
movs
fdivp
pop
fidiv
popf
callw
sub
aas
lods
adc
xchg
fsub
push
ret
mov
cmc
pop
jne
mov
(bad)
enter
add
dec
sub
jmp
pop
sbb
scas
(bad)
stc
jge
mov
scas
das
cdq
jb
out
outs
adc
mov
es
sub
je
cli
mov
dec
daa
into
bound
and
jb
mov
shl
jb
leave
add
les
pop
int
in
push
and
sbb
test
retf
shr
adc
rol
inc
inc
arpl
mov
cdq
pushf
or
cmp
xchg
xchg
dec
scas
cmps
adc
lea
stos
pop
mov
fadd
push
inc
push
sub
cmp
in
lds
out
sub
dec
lods
scas
or
xor
mov
retf
ins
pusha
xor
add
jmp
push
dec
add
in
push
out
sbb
sub
lahf
adc
jmp
pushf
inc
xor
sub
les
push
test
ins
fs
mov
inc
push
repnz
scas
sahf
cmp
mov
push
leave
mov
cmp
add
dec
jmp
mov
push
inc
xor
fisttp
inc
hlt
in
sub
sub
xchg
xchg
in
sbb
aaa
cli
ret
pop
inc
xor
mov
retf
sbb
sbb
aas
cdq
(bad)
adc
jne
pop
scas
jnp
cmp
call
cmp
mov
dec
je
xor
cwde
jae
xlat
jnp
cmp
inc
pop
dec
xor
int3
test
xchg
and
xchg
arpl
fs
(bad)
int
fistp
xchg
iret
xchg
push
(bad)
stc
test
retf
xor
dec
sar
xchg
jl
xchg
mov
cmps
lahf
cli
sub
ins
test
mov
xchg
(bad)
sbb
pusha
push
mov
xchg
mov
or
pusha
xchg
push
aas
ja
sub
mov
cld
adc
int
cmp
sub
rol
xor
sub
fsubp
sbb
sar
pop
xchg
xchg
sub
xor
stos
dec
cli
cmps
push
or
retf
push
std
pop
les
adc
inc
pop
icebp
into
ds
aaa
xor
pop
and
xor
jle
dec
xchg
or
fld
or
or
daa
popf
arpl
call
movs
ja
add
in
inc
data16
pop
sbb
jg
dec
jge
xchg
sti
adc
les
je
add
shl
(bad)
jg
lds
adc
movs
sbb
cmp
push
sbb
pop
mov
or
rol
fsub
loopne
movs
adc
mov
mov
aas
pop
dec
add
fisttp
mulps
mov
push
push
outs
push
mov
push
or
pop
popf
cmp
popf
mov
xor
mov
and
mov
mov
out
add
call
adc
inc
call
mov
imul
adc
mul
or
push
gs
cdq
icebp
mov
stc
aam
mov
mov
pop
push
daa
ret
push
outs
fs
retf
mov
mov
jg
sti
push
test
test
stos
mov
dec
xor
stos
sub
pop
sub
out
scas
xor
out
push
jle
xor
int3
lods
dec
mov
mov
cmp
js
rcr
pop
or
gs
test
(bad)
scas
push
mov
shl
mov
inc
mov
or
outs
out
rol
sti
cs
sar
and
jns
mov
in
enter
movs
dec
push
mov
(bad)
pop
shl
push
mov
and
fisub
mov
test
movs
retf
xor
mov
add
adc
pop
aaa
fs
xor
cmps
data16
mov
push
daa
clc
or
arpl
mov
adc
jae
lods
shl
loope
outs
mov
jb
cmp
jno
std
ins
test
sbb
push
cmpxchg
out
aas
dec
fldcw
fsubr
fldenv
fwait
adc
sbb
add
jmp
out
into
popa
jnp
or
and
mov
(bad)
mov
cs
pop
fcmovbe
sti
mov
cmp
movs
(bad)
fcmovu
xor
mov
ud0
or
js
pushf
mov
scas
or
jmp
or
push
and
adc
and
mov
or
popf
mov
js
xor
iret
inc
pop
mov
sub
cmp
mov
cdq
dec
lods
in
dec
sti
add
int3
popf
or
inc
icebp
daa
add
scas
mov
mov
nop
mov
ins
ret
imul
add
push
scas
jne
dec
ret
push
repz
pop
pushf
scas
push
mov
fld
jae
and
mov
jnp
ffreep
jp
aam
hlt
jns
push
mov
les
mov
pop
ins
fsubr
dec
mov
lea
stc
or
inc
pop
jne
call
sub
lea
scas
ins
jbe
mov
addr16
popf
ins
mov
cmp
bound
outs
adc
in
enter
and
jmp
shl
pusha
and
dec
loopne
popf
push
sbb
or
push
sahf
(bad)
out
arpl
mov
fs
fadd
sub
imul
jecxz
mov
xor
adc
cwde
push
mov
mov
or
imul
add
mov
sbb
aaa
mov
in
test
cli
loop
addr16
jle
test
pop
adc
mov
dec
(bad)
push
mov
and
scas
mov
leave
inc
adc
scas
xchg
mov
mov
and
in
repnz
cs
pop
int
pop
lods
dec
add
jle
std
xor
js
cmp
xchg
outs
add
ror
popa
(bad)
sub
pop
jecxz
or
(bad)
rcr
xor
push
aaa
push
add
lods
mov
inc
adc
es
pop
mov
dec
pushf
pop
loopne
inc
or
push
or
fidiv
push
outs
inc
cmp
or
jp
lock
sahf
push
popa
and
cs
sub
mov
in
xchg
div
pop
shl
hlt
mov
pushf
sbb
xchg
mov
(bad)
mov
inc
addr16
fs
pop
mov
pop
jnp
xchg
mov
test
adc
into
pop
cmp
mov
lss
adc
cmps
jo
(bad)
stos
inc
inc
outs
push
cmp
jnp
imul
dec
leave
and
xor
fwait
add
jp
pop
aaa
pop
aad
(bad)
shl
jno
cmp
mov
stos
ret
or
fst
xchg
fsub
dec
dec
mov
push
imul
dec
aaa
pop
mov
pushf
idiv
or
outs
es
cli
jnp
ins
xchg
icebp
aad
imul
test
sti
call
call
and
sub
xchg
pop
sbb
adc
cmp
or
sbb
mov
pop
lahf
and
add
mov
stc
shl
in
jecxz
jg
imul
jge
mov
jg
sbb
and
fld
cmp
stc
push
dec
fidiv
xchg
fst
push
lock
cmc
add
mov
sub
mov
mov
sub
fcomip
or
jnp
fmul
into
mov
movs
sub
xor
inc
xchg
icebp
inc
lds
inc
es
into
popa
data16
fild
leave
fist
cld
jl
in
lods
or
scas
cld
push
pop
pop
mov
popf
int
push
sub
leave
mov
pop
mov
mov
jbe
(bad)
pop
inc
cmp
mov
push
retf
aaa
fmul
sbb
movs
push
inc
push
inc
jnp
sub
sub
pop
rcr
clc
xchg
in
jb
dec
dec
xchg
stc
mov
mov
cmps
or
es
sbb
xor
mov
pop
mov
in
or
mov
push
sbb
pop
dec
das
lds
sub
mov
stos
jmp
(bad)
sar
ins
xor
int3
leave
pop
and
in
add
(bad)
js
adc
sub
inc
movs
pop
stc
movs
cmc
and
push
sub
sbb
xchg
(bad)
ja
and
(bad)
add
push
add
xor
rcl
shl
cs
shufps
int3
cmp
jbe
cmp
jp
pop
adc
dec
inc
push
imul
sbb
cmp
arpl
in
icebp
push
retf
mov
icebp
pop
sbb
loopne
es
ins
idiv
(bad)
outs
cmp
push
jp
add
loope
pop
sub
inc
nop
mov
punpcklwd
jb
and
sub
nop
cmp
xlat
inc
movs
mov
jle
xor
and
repz
add
call
sub
mov
push
mov
mov
push
jecxz
les
push
ins
leave
leave
(bad)
aad
adc
push
sbb
(bad)
icebp
ss
push
adc
cdq
jmp
fadd
out
jae
shr
mov
pop
fild
jge
scas
xchg
out
push
mov
in
fld
add
add
xlat
ja
and
adc
popa
fistp
add
push
sub
je
inc
mov
aam
(bad)
sahf
pop
mov
scas
jmp
loopne
inc
es
and
sub
in
xchg
mov
inc
je
(bad)
iret
mov
push
jge
ins
lea
lds
test
and
jmp
and
and
inc
xor
sbb
xor
xchg
rcl
push
repnz
loope
fxam
inc
(bad)
mov
pop
cmps
or
jmp
movs
mov
mov
pushf
icebp
pop
mov
pop
sub
popa
mov
fst
sahf
mov
mov
inc
mov
jg
xchg
jnp
stos
xor
sbb
sub
mov
sbb
call
call
dec
or
push
gs
push
(bad)
pop
push
cli
mov
test
mov
fprem
xor
iret
sub
lock
cmp
cmp
dec
daa
cmps
jb
jnp
enter
or
std
sub
(bad)
test
enter
xchg
xchg
pop
or
pusha
ret
sbb
inc
rol
inc
ss
mov
or
inc
cmp
mov
xchg
iret
dec
out
push
jns
jae
jmp
xor
fimul
inc
into
pushf
lahf
es
movs
sbb
call
adc
and
push
in
popa
sub
loopne
nop
dec
rcr
pusha
aad
outs
sub
mov
mov
dec
not
aad
imul
fwait
sub
in
fisubr
jb
in
adc
xchg
cmps
cmp
fnstcw
xor
sub
je
pop
test
imul
bound
pop
lds
adc
test
sub
mov
mov
retf
mov
stc
push
call
test
inc
into
aaa
or
lahf
and
cmc
xchg
xchg
or
jl
jns
pop
ss
or
scas
cmp
test
mov
cmp
inc
or
and
scas
push
inc
inc
test
cmp
ror
or
in
test
pop
mov
shl
test
repz
pop
jg
mov
push
push
cmp
mov
(bad)
(bad)
ins
es
jmp
retf
jne
cmp
xchg
retf
clc
leave
jmp
in
aad
cld
mov
xor
out
cdq
xor
jae
dec
mov
add
adc
ret
mov
clc
mov
fnstcw
scas
xor
shr
mov
cmps
call
pop
jbe
xchg
hlt
cmp
and
sbb
mov
sbb
cmc
(bad)
xchg
add
push
sahf
mov
xchg
add
mov
sbb
xchg
jp
add
pop
aam
std
call
mov
das
mov
cwde
cmp
sub
cmp
push
dec
sub
(bad)
ror
or
(bad)
or
ins
or
dec
or
and
dec
out
fs
arpl
dec
nop
mov
mov
pop
jno
xor
std
cdq
pop
dec
mov
pusha
fsubp
lods
sub
icebp
popf
(bad)
(bad)
lock
adc
sub
repz
jge
fs
xor
int
pushf
stc
xchg
sub
lds
js
pop
fstp
hlt
and
gs
(bad)
hlt
fs
jbe
loope
into
sbb
mov
mov
scas
movs
rcr
in
ins
jp
aaa
cmp
ficomp
sub
and
(bad)
(bad)
loop
dec
mov
inc
mov
aas
xor
xchg
xlat
mov
call
mov
xor
icebp
sub
push
mov
adc
inc
fidiv
leave
or
(bad)
cmc
pop
popa
add
in
stc
stc
add
xchg
pop
in
inc
lahf
or
aas
fstp
retf
pop
aam
or
lods
outs
cld
mov
mov
jge
nop
clc
js
bound
into
jmp
dec
out
imul
mov
ins
mul
or
and
dec
fistp
enter
jne
std
jecxz
jns
sub
push
xchg
sbb
sub
leave
outs
cmp
push
(bad)
xor
mov
cwde
rol
jae
addr16
add
scas
aas
jns
adc
fcomp
and
inc
dec
in
mov
jle
frstor
js
dec
jmp
sbb
pop
dec
sbb
inc
mov
adc
cld
push
ror
jge
jecxz
jmp
les
sahf
push
sbb
jbe
fdiv
inc
sbb
stos
test
ret
jmp
call
jmp
stos
mov
or
imul
or
or
and
adc
jle
dec
jl
lods
(bad)
push
sahf
jbe
js
fcomp
sbb
out
mov
lods
xor
push
mov
test
sbb
xchg
pop
dec
add
inc
ret
mov
and
ss
inc
fild
inc
test
add
out
mov
cdq
lock
iret
icebp
rcl
push
out
and
out
iret
sub
add
and
pop
sbb
or
cdq
mov
sar
(bad)
lea
out
xor
pop
bnd
mov
and
mov
mov
enter
push
stos
jg
clc
(bad)
leave
mov
mov
rcl
jmp
icebp
sbb
xor
out
add
(bad)
cld
clc
mov
out
xchg
test
add
sahf
les
cdq
fcomi
jae
push
mov
retf
pop
and
push
jbe
out
daa
sbb
jmp
or
cs
mov
or
and
and
jns
sub
mov
push
in
lods
scas
add
mov
jle
shl
pop
sahf
push
xchg
jae
loop
fisub
repz
loop
dec
xor
(bad)
adc
xor
addr16
out
shl
fs
sub
and
dec
jnp
cmps
dec
aam
sbb
pop
test
fcmovnb
push
leave
nop
mov
dec
nop
mov
xchg
cmp
sub
movs
fld
movs
loop
dec
ss
pusha
xchg
inc
ss
inc
shl
xor
imul
imul
dec
cmp
mov
out
mov
xchg
(bad)
push
repnz
je
sub
mov
fdiv
dec
mov
jo
or
lock
call
xchg
es
push
lods
and
stos
dec
jb
pop
ins
mov
mov
(bad)
ror
icebp
dec
inc
stc
cli
inc
(bad)
fwait
mov
push
dec
and
cld
push
addr16
fild
lods
int
test
pop
jae
mov
cs
cs
fcom
loop
jbe
scas
adc
popa
out
xchg
push
ret
ds
sahf
mov
jno
push
fisttp
push
test
add
mov
pusha
repnz
arpl
mov
mov
mov
imul
adc
test
sub
mov
adc
pop
out
movs
imul
add
(bad)
pop
test
cmp
sub
jno
add
push
sbb
in
push
out
dec
(bad)
popa
pop
adc
mov
sbb
push
push
mov
fimul
jo
clc
cmp
(bad)
(bad)
imul
push
or
mov
cmp
cdq
mov
aas
mov
enter
pop
pop
imul
ds
ret
repnz
(bad)
xor
dec
jno
cmp
jmp
mov
and
movs
not
adc
sub
add
and
sub
imul
add
push
sub
mov
jge
mov
inc
mov
shl
test
dec
addr16
dec
xchg
aas
call
sub
lea
push
cmc
imul
test
in
jmp
push
mov
fnstcw
arpl
call
sti
xchg
push
jmp
sub
call
mov
jg
(bad)
pop
and
xchg
loope
jl
xchg
(bad)
(bad)
push
add
shl
sub
dec
mov
arpl
and
(bad)
mov
inc
test
cmp
mov
inc
jle
xchg
push
leave
(bad)
and
mov
loopne
mov
mov
sub
xor
out
pop
(bad)
icebp
out
iret
xchg
fld
mov
inc
dec
cmc
xchg
into
pop
sub
lahf
imul
in
int3
and
push
adc
xor
shl
xor
(bad)
imul
cld
(bad)
pop
push
sub
inc
mov
int
xchg
add
mov
xor
pop
cmp
cmp
cmp
aad
std
push
or
adc
ror
jbe
mov
sbb
cld
ins
out
mov
pop
outs
fsubrp
xchg
xor
or
mov
or
cmp
and
push
pop
ffreep
xchg
shl
or
lds
or
mov
scas
sub
retf
fcmovnb
xchg
mov
fidivr
jno
leave
dec
mul
dec
xor
fisubr
mov
jbe
test
data16
mov
pop
inc
cld
in
jne
fwait
popa
dec
xchg
and
inc
lea
cdq
les
iret
and
bound
hlt
ja
add
(bad)
jno
cmovle
cmps
mov
xor
in
inc
fstp
or
fucomi
add
stc
jmp
jns
adc
inc
aaa
mov
test
jmp
and
faddp
pop
or
(bad)
in
xchg
ret
stos
adc
add
push
dec
lods
jmp
lahf
or
stos
xor
and
mov
clc
sbb
bound
clc
stos
enter
sub
sbb
js
inc
jp
les
ret
pushf
int
pop
xor
daa
shl
mov
das
mov
in
inc
addr16
cli
pop
or
dec
aad
ja
out
daa
retf
pop
cmp
jl
mov
loopne
(bad)
jecxz
jp
fwait
ror
and
adc
xchg
adc
mov
xchg
fild
(bad)
rcr
pop
pop
mov
or
pusha
(bad)
push
popa
adc
xor
xchg
dec
imul
xchg
in
mov
out
add
push
rol
pop
push
fs
ror
aam
test
dec
(bad)
sub
inc
int
in
loope
imul
xor
jne
mov
xor
push
rcr
aaa
es
iret
or
dec
cli
aas
mov
or
pop
xchg
std
lahf
mov
int3
mov
sar
lock
cmovnp
sbb
mov
add
or
add
mov
enter
adc
or
cmp
mul
xor
mov
in
pop
ds
out
or
shr
sub
mov
es
mov
call
mov
fstp
push
or
sub
pop
shl
(bad)
mov
mov
or
and
or
add
imul
sub
fdivrp
push
sub
mov
push
jne
shl
repz
pushf
cmp
inc
jmp
sbb
jb
fdiv
sti
out
outs
sbb
retf
mov
imul
sbb
repz
popf
call
ja
dec
lods
les
jbe
jnp
sub
cmp
leave
mov
in
pusha
into
or
loope
das
popa
mov
fsubr
fwait
xchg
sbb
stc
ja
lahf
shr
mov
dec
dec
dec
xor
in
sti
fisub
mov
sahf
outs
jnp
fst
jo
adc
xchg
sbb
dec
add
test
or
jg
and
daa
scas
adc
mov
cmp
aaa
into
cmp
repnz
ins
push
pop
adc
imul
xchg
dec
je
pop
xchg
xchg
lods
hlt
add
call
scas
fsubr
dec
inc
popa
push
mov
or
or
jge
pop
sahf
push
fisttp
xor
xor
(bad)
cmp
ficom
div
lock
in
pop
bound
or
popw
mov
mov
inc
push
push
lahf
(bad)
jl
mov
mov
popa
mov
pop
mov
inc
idiv
and
ss
in
test
mov
inc
lods
repz
inc
cmps
mov
daa
outs
xor
jmp
rol
in
leave
retf
push
fild
rcr
(bad)
es
mov
rcr
push
inc
xor
sub
je
inc
pop
jmp
inc
das
ins
imul
pusha
aam
test
mov
fimul
ret
jge
mov
retf
out
mov
ja
jb
or
les
imul
sbb
adc
(bad)
popf
and
mov
cwde
out
fidiv
xchg
sub
cmp
into
adc
into
xchg
enter
in
sub
jmp
adc
aas
dec
adc
js
test
call
into
xchg
push
mov
push
pusha
mov
aad
jno
xchg
aas
or
xchg
mov
test
jnp
mov
fisub
mov
or
out
cli
sub
cmp
jmp
iret
out
dec
movs
repnz
pushf
mov
fidiv
clc
es
fild
lock
adc
neg
jne
mov
pop
sbb
out
fwait
sahf
mov
repz
call
popf
(bad)
fist
mov
lods
mov
lods
lock
push
push
and
adc
ins
idiv
lea
fbstp
xor
inc
pop
xchg
push
iret
push
xchg
fucomi
pop
mov
xchg
ja
mov
add
iret
shl
mov
adc
jns
jecxz
push
jnp
les
dec
fcom
rcl
aas
mov
sub
xchg
rcl
out
dec
test
pop
test
jl
mov
movs
mov
aaa
cmps
adc
push
addr16
xor
push
jmp
jbe
xchg
rcr
jl
iret
hlt
loope
fcmovnu
dec
retf
mov
sbb
mov
out
shl
xchg
push
xchg
mov
sbb
pop
jmp
mov
or
push
jecxz
out
push
push
retf
pop
mov
daa
mov
jnp
sbb
push
cmp
dec
dec
xor
jge
xchg
push
outs
xchg
pop
(bad)
xchg
movs
dec
push
out
mov
or
aad
adc
ins
mov
pop
inc
and
out
sub
jl
call
add
mov
pop
stos
sbb
(bad)
jnp
scas
in
inc
out
ds
aam
adc
cmps
test
call
inc
das
cs
out
scas
into
rol
adc
adc
iret
enter
add
dec
ficom
push
cmp
push
jae
sub
popa
adc
lock
dec
scas
sbb
stc
rcl
loope
cmp
loope
sahf
mov
loopne
mov
cmc
push
dec
ja
sub
out
mov
push
lock
xchg
mov
outs
cmovl
mov
cli
inc
jp
adc
xor
xor
shl
in
imul
mov
(bad)
pop
push
jno
adc
test
(bad)
test
cmp
popa
mov
push
add
dec
and
jge
lods
mov
push
jnp
sub
jmp
aam
mov
jmp
sahf
retf
clc
mov
xchg
cmp
scas
aad
fcmovu
lods
lods
(bad)
mov
jnp
addr16
imul
and
es
mov
mov
and
into
mov
and
or
fidiv
sti
imul
stos
fisttp
ret
or
cmp
sbb
int
fld
hlt
and
ja
and
out
add
sar
mov
push
mov
mov
cmp
pop
out
out
scas
call
test
adc
jae
cmp
(bad)
call
hlt
test
movs
or
je
lds
or
push
sbb
mov
or
hlt
jg
cli
stos
ins
imul
lods
nop
aas
call
cld
dec
xchg
xchg
pusha
jge
adc
mov
in
cmc
lds
or
into
sbb
fdiv
mov
std
ret
pop
int
out
sbb
retf
add
cld
sti
daa
ret
repz
xchg
sbb
adc
(bad)
clc
and
aam
jb
add
jno
sti
and
pop
pop
push
mov
add
push
popa
dec
mov
and
mul
aam
push
xlat
lahf
out
pop
adc
add
lar
(bad)
xchg
lahf
xor
popf
mov
mov
movs
xchg
jns
jo
dec
pushw
adc
out
idiv
pop
mov
lahf
scas
mov
pop
mov
pop
push
pop
shl
xchg
fs
popa
push
push
fs
lds
push
add
cmp
pusha
sbb
mov
pusha
(bad)
out
jns
hlt
fisub
sbb
push
mov
cmps
repnz
(bad)
(bad)
pop
mov
mov
loopne
inc
jg
test
mov
test
popa
bound
pop
fisub
cmp
adc
data16
(bad)
into
lods
sar
jecxz
inc
inc
xchg
movs
adc
inc
push
sub
cwde
pop
inc
push
es
xchg
fdivr
aad
add
mov
or
sti
jecxz
ins
cli
cmp
push
cmc
push
jbe
mov
aas
jecxz
mov
dec
xor
sahf
inc
mov
inc
std
xor
mov
cmp
ret
cmps
sub
add
cld
adc
in
int
push
mov
out
scas
and
inc
pop
addr16
cmc
inc
adc
dec
(bad)
sbb
or
aad
dec
pushf
cdq
ds
imul
cwde
lods
div
outs
jb
mov
pop
inc
dec
cli
(bad)
pop
jbe
in
mov
imul
xchg
add
inc
lock
dec
xor
lahf
pop
outs
jmp
jae
ja
inc
push
pop
sbb
push
leave
test
loope
ss
pop
lods
mov
jbe
lds
cmc
or
add
mov
xchg
jmp
pop
loope
or
movs
xlat
test
mov
ins
and
inc
pop
inc
xchg
jns
push
outs
clc
inc
pop
fist
push
(bad)
jo
xlat
int3
cmp
fimul
push
cmp
leave
pop
(bad)
cli
(bad)
pop
push
nop
data16
mov
lea
xchg
div
xor
or
cmp
lods
lahf
mov
push
repnz
inc
retf
test
pushf
outs
dec
or
rcr
sbb
rol
cmp
ret
pop
mov
or
jge
adc
fist
sbb
sub
popa
jae
(bad)
add
ds
std
lods
fmul
mov
ror
fs
inc
gs
adc
(bad)
call
nop
or
mov
int3
cwde
test
cli
scas
dec
pop
rcr
jg
dec
mov
mov
xor
fidivr
es
jg
leave
movs
addr16
push
jmp
xor
fistp
xchg
loop
enter
gs
retf
or
xlat
mov
mov
nop
pop
jp
inc
mov
in
pop
mov
sbb
fcom
pop
inc
cdq
(bad)
ds
mov
inc
cmp
push
jle
dec
cwde
sbb
call
pop
dec
dec
push
xchg
jae
mov
push
mov
pushf
sub
dec
pushf
dec
data16
int
push
cs
hlt
icebp
mov
push
mov
test
add
repz
inc
fistp
jno
mov
mov
pop
int
mov
mov
cli
adc
std
mov
fisubr
pushf
pop
adc
call
and
and
fiadd
scas
sub
xor
mov
ins
aam
mov
dec
xor
add
mov
pop
lahf
push
in
test
cli
je
cld
enter
cmc
int
(bad)
test
loop
movs
sbb
je
inc
cmps
inc
cmp
mov
adc
jge
fdiv
mov
sub
in
mov
adc
jp
sub
or
mov
inc
sbb
addr16
mov
xor
mov
inc
mov
sar
pop
cwde
dec
cmp
mov
pop
into
cmps
mov
inc
xchg
ds
adc
xlat
push
inc
cld
imul
or
ins
add
mov
or
mov
sub
xchg
adc
lods
cmp
std
dec
mov
pop
fsub
add
mov
xor
jnp
sub
fst
lahf
dec
mov
add
clc
js
dec
int3
outs
jbe
inc
fisttp
test
leave
cdq
cmps
lea
cmp
loopne
adc
(bad)
xchg
mov
fwait
ss
int3
ret
mov
mov
ins
mov
mov
imul
mov
sahf
sub
sbb
and
mov
(bad)
and
ins
jne
rol
icebp
shl
add
jns
out
xor
inc
outs
ficom
loopne
pop
jg
add
adc
inc
ss
and
mov
mov
cmp
jno
fldenv
push
shl
or
pop
sbb
retf
nop
ds
jnp
jns
push
sub
popf
mov
xchg
add
push
imul
call
dec
cmp
mov
and
je
xchg
neg
iret
sbb
pusha
xor
mov
loopne
xchg
sub
cmp
add
rcr
sbb
mov
mov
pop
push
jge
test
imul
clc
mov
xchg
adc
adc
sub
sub
push
or
ins
call
add
or
sub
mov
and
xor
mov
cmp
sub
gs
in
and
test
pop
retf
jo
fwait
jge
sti
pop
loope
imul
inc
cmp
je
push
fild
std
dec
scas
sbb
test
(bad)
out
inc
idiv
cli
xor
bound
nop
mov
(bad)
push
rol
jne
add
test
aaa
fiadd
imul
ins
cmp
sub
push
ins
pop
shl
ja
test
mov
jge
jnp
in
dec
popa
js
adc
out
mov
popf
rol
gs
and
sbb
inc
ror
fild
adc
aam
iret
and
div
xor
and
out
adc
std
push
daa
xlat
xchg
mov
sbb
out
dec
fs
add
and
cld
and
ret
stos
inc
dec
aam
loope
lods
call
enter
mov
adc
mov
cmp
inc
mov
cmp
xor
dec
hlt
iret
fwait
adc
ds
jnp
(bad)
ins
push
xchg
dec
sub
ss
sbb
rcl
call
and
pop
mov
imul
(bad)
loopne
sub
fwait
into
cmovnp
cmc
jae
push
adc
jmp
dec
fst
fs
or
xchg
shl
cmps
mov
xor
mov
sub
sub
push
clc
jb
cmp
pushf
dec
popf
in
mov
popa
push
stos
fdivp
mov
mov
inc
xchg
leave
inc
mov
dec
push
xor
(bad)
and
sahf
or
cmp
es
push
pop
cmp
sub
addr16
jmp
enter
and
xor
in
or
and
sub
adc
jecxz
int
cs
push
loop
cmp
and
jbe
(bad)
call
inc
sbb
retf
xor
sub
ins
cmp
sbb
sub
mov
(bad)
mov
mov
mov
imul
jb
ror
sub
jb
mov
sub
dec
push
adc
inc
and
outs
mov
shl
mov
clc
std
xor
enter
pop
cdq
out
push
and
xchg
xchg
mov
std
test
xor
push
xchg
or
inc
icebp
and
daa
mov
jnp
adc
mov
je
mov
dec
stc
adc
mov
pop
dec
or
ins
lods
pop
inc
adc
xor
push
pop
test
mov
jecxz
loope
aaa
add
sbb
inc
mov
pop
mov
mov
push
repnz
xchg
adc
cmp
xor
inc
icebp
(bad)
icebp
add
jns
out
mov
aam
adc
sbb
(bad)
sub
mov
mov
dec
or
or
mov
nop
call
scas
scas
mov
in
shr
fcmovb
mov
mov
aam
dec
fld
sbb
dec
mov
jno
lods
pop
rcr
or
mov
test
rol
inc
in
dec
retf
dec
(bad)
arpl
call
mov
pop
push
xchg
jno
clc
rol
mov
sub
push
mov
push
inc
cmp
imul
adc
ret
cwde
sub
jns
sbb
mov
sbb
(bad)
cld
fadd
or
and
and
gs
mov
jmp
imul
loop
dec
jmp
and
faddp
and
mov
mov
dec
cmp
sbb
dec
in
sub
jg
jb
cmp
cs
or
repz
shl
icebp
xor
mov
fild
or
xlat
mov
and
sub
cmp
retf
aaa
out
jmp
adc
add
cmc
retf
jbe
fsubp
ret
dec
nop
js
mov
xchg
loop
and
in
cmp
enter
test
ret
and
adc
jle
enter
sbb
sub
pusha
sar
jne
mov
mov
or
or
mov
pop
jns
enter
add
bound
gs
shl
push
push
stos
and
sahf
(bad)
fcomp
inc
icebp
movs
idiv
fisttp
fcom
push
jecxz
jmp
fs
sti
xor
mov
add
fs
(bad)
hlt
imul
or
mov
inc
sub
dec
cmps
shl
mov
aaa
imul
call
inc
push
(bad)
sbb
loopne
mov
repnz
xor
stos
ins
and
cmp
mov
pop
rcl
cmp
push
xchg
ins
(bad)
mov
arpl
pop
xchg
sub
cld
or
sbb
aam
rcr
mov
and
fiadd
xchg
push
imul
(bad)
(bad)
add
not
stc
sub
hlt
fiadd
pop
push
clc
iret
mov
cld
jmp
sub
aam
sar
je
fwait
add
add
xor
ins
and
push
mov
out
arpl
pop
nop
dec
add
ret
movs
inc
xor
mov
mov
lods
lods
adc
and
not
dec
ds
xor
jne
leave
faddp
mov
aaa
outs
add
push
das
popa
pop
jmp
out
push
pop
pop
mov
sti
jb
mov
(bad)
or
xchg
in
scas
neg
jecxz
movs
jae
in
mov
cdq
push
mov
adc
pop
sbb
adc
ret
stos
mov
jbe
mov
call
inc
inc
fcmovnu
xlat
mov
xchg
push
mov
movs
and
push
mov
imul
jp
cmps
(bad)
dec
nop
int
xchg
movs
jmp
xchg
je
xor
and
cmp
or
sbb
loopne
push
out
sub
cmp
das
imul
sbb
jecxz
mov
rep
adc
mov
adc
pop
mov
(bad)
mov
test
into
es
sar
mov
ja
into
mov
pop
xchg
imul
scas
nop
es
sbb
jb
and
js
jmp
jl
cmc
jb
mov
push
(bad)
cmp
xor
test
aas
inc
cmp
push
sbb
add
mov
mov
out
sub
ja
cwde
sub
adc
cmp
std
cmp
jecxz
adc
sbb
add
xor
mov
xchg
dec
int
or
mul
mov
adc
xchg
mov
add
xchg
div
xor
push
mov
cmps
or
imul
mov
pop
ins
call
mov
xchg
pop
jecxz
mov
cmps
adc
stos
adc
les
out
pop
push
stc
mov
jle
test
ror
mov
push
jle
call
push
jmp
(bad)
pop
gs
aad
push
cmp
movs
push
or
inc
xor
jle
dec
ret
jp
fadd
bound
jmp
leave
mov
es
mov
jbe
xchg
jb
lea
or
mov
mov
mov
mov
sub
dec
test
cli
or
jbe
(bad)
xor
cmp
in
shl
movs
jg
lahf
aas
fisubr
sbb
inc
in
cld
and
das
call
and
test
pop
call
in
rcr
leave
mov
mov
inc
test
mov
and
cmp
or
test
inc
nop
jb
mov
adc
fnstcw
cmp
icebp
mov
idiv
sub
mov
push
mov
mov
mov
sbb
adc
xor
adc
add
mov
std
push
nop
nop
mov
pop
fdivr
dec
into
popa
je
ret
lods
aas
mov
fidiv
xor
xor
xchg
fisttp
sub
add
adc
mov
mov
iret
add
cdq
jbe
mov
loop
push
pushf
and
sbb
cdq
xchg
cmps
cmps
mov
int
and
fdivrp
fs
pop
pushf
mov
xchg
mov
pop
stc
idiv
adc
nop
inc
je
xchg
test
test
mov
icebp
push
test
xor
xchg
pushf
fsub
xchg
imul
xor
das
nop
adc
lea
lods
pop
mov
pusha
or
ja
rcr
jnp
mov
adc
xor
add
orps
(bad)
(bad)
mov
out
fdivr
lods
adc
jo
inc
popa
call
cmc
push
mov
cmp
mov
fisub
popf
leave
sbb
stos
sbb
jg
pop
xchg
ins
inc
and
lods
(bad)
leave
jne
mov
icebp
mov
add
mov
adc
and
pop
shr
cld
xor
and
jmp
add
aas
cmps
fisttp
mov
int
retf
inc
push
fwait
neg
or
pop
lods
cmp
adc
pop
jg
mov
loopne
inc
lods
inc
scas
popf
ret
fs
arpl
movs
rol
sub
es
add
retf
fstp
xchg
clc
in
test
mov
or
xor
jp
idiv
int
fdivr
push
(bad)
in
mov
xchg
cmp
adc
in
rcl
popa
call
add
add
and
add
nop
sbb
shl
sbb
xlat
mov
out
sbb
inc
add
jo
out
inc
and
mov
icebp
push
sar
pop
mov
ss
vpmacsdqh
(bad)
daa
stos
(bad)
push
xlat
mov
push
xchg
jne
mov
mov
dec
outs
jecxz
es
enter
pop
sahf
push
loop
xor
mov
inc
(bad)
aam
retf
cdq
fimul
xchg
xchg
dec
mov
das
xchg
xchg
pushf
int3
dec
add
xlat
in
cmp
in
add
repz
into
fdiv
scas
sub
or
in
jecxz
add
pop
jmp
sub
lods
stc
push
jmp
or
call
loopne
fcomp
xor
inc
test
sbb
mov
(bad)
shr
sbb
push
add
pushf
out
out
or
inc
fs
dec
fist
adc
movs
push
mov
(bad)
out
push
je
pop
stos
ds
mov
and
mov
or
ins
shl
int
adc
inc
xor
stos
sub
pop
xor
sub
mov
std
xor
mov
lock
in
js
inc
xchg
ret
dec
jge
test
(bad)
(bad)
imul
punpckldq
inc
push
fwait
xor
jl
jmp
add
jl
sub
in
adc
jmp
repz
and
daa
lea
(bad)
test
imul
mov
imul
outs
shl
loope
in
pushf
lds
cmp
mov
xor
mov
pop
scas
dec
out
jmp
and
jl
lods
jp
ja
sar
lods
mov
cmps
inc
adc
data16
add
data16
jle
jnp
add
rcr
sbb
lds
inc
mov
in
mov
dec
dec
and
sbb
das
pop
adc
lahf
jbe
mov
out
or
push
ds
or
rcr
push
jns
mov
sub
sub
xor
ficom
enter
push
mov
fisttp
hlt
mov
cwde
mov
xchg
mov
je
and
adc
inc
cmps
in
ss
int
imul
or
cmp
dec
jmp
xchg
js
inc
call
xchg
dec
or
sbb
jge
sub
scas
pop
mov
ret
xlat
mov
sbb
and
xchg
in
inc
mov
mov
retf
or
scas
mov
mov
imul
addr16
pop
movs
cld
xor
xchg
add
sub
sub
dec
cld
mov
lods
mov
sti
icebp
pop
shl
ss
(bad)
push
xor
push
stc
mov
fimul
scas
jmp
mov
test
je
(bad)
rcl
fisttp
aad
xor
arpl
sub
iret
push
jbe
mov
dec
adc
ja
les
fistp
jae
inc
mov
inc
cld
scas
cmp
jle
xor
push
es
in
adc
js
(bad)
push
and
pusha
jge
xlat
xchg
or
rcl
jno
pop
fistp
je
mov
stos
call
mov
std
push
cmp
push
and
into
pop
push
cmps
dec
sub
ret
xchg
dec
imul
add
mov
clc
cli
out
cmp
lea
rcr
addr16
dec
push
call
out
jb
lock
sbb
movs
dec
outs
es
and
(bad)
sbb
jno
inc
sub
jmp
jg
pusha
adc
sbb
pop
push
fistp
mov
(bad)
jmp
xchg
rol
xor
es
add
pop
in
out
daa
push
xchg
cmp
aaa
repnz
sub
fldcw
cmps
mov
cmp
(bad)
ds
inc
test
mov
and
jns
sbb
and
mov
in
ror
out
imul
test
mov
outs
imul
pushf
ss
retf
sub
sbb
inc
and
push
scas
xchg
add
shr
push
in
push
fchs
jecxz
jge
movs
adc
push
xchg
or
in
pop
sub
jl
lea
in
inc
xor
lds
jp
pop
sbb
xchg
cmp
mov
xor
clc
jl
loopne
mov
retf
mov
gs
sbb
dec
test
jp
(bad)
and
mov
fwait
jl
hlt
fnstsw
popa
sub
je
add
lods
outs
jecxz
shl
sahf
mov
sbb
sub
repz
das
and
xor
pop
sbb
mov
cmp
retf
rol
xchg
dec
mov
mov
jge
ins
cs
pop
adc
inc
(bad)
data16
fld
lea
jle
add
xor
inc
int
jbe
fiadd
mov
out
add
ja
pop
jnp
aaa
out
and
test
movs
call
mov
out
inc
pop
adc
mov
pop
inc
cmp
pop
xor
aam
ins
jge
sub
ret
sbb
pusha
jle
mov
xchg
arpl
jmp
(bad)
ins
jbe
(bad)
sub
push
stc
cs
jg
movs
ja
mov
retf
mov
shr
shl
fild
sbb
jnp
fsubrp
jl
mov
cmps
retf
daa
lds
push
adc
xchg
mov
jbe
test
mov
(bad)
cmc
and
ja
movs
call
mov
jmp
stos
jl
jb
sbb
scas
in
xor
cmp
test
ret
out
pop
mov
sbb
inc
mov
fcmovnb
or
test
sbb
push
dec
and
outs
adc
leave
sub
aad
pop
int
(bad)
mov
ja
mov
mov
pop
fdivr
jno
in
adc
cmp
jne
sub
fsub
mov
icebp
mov
ss
jmp
int3
iret
addr16
push
dec
mov
jge
pop
sub
mov
mov
pop
push
cli
ficom
outs
or
push
aad
icebp
call
dec
cmp
push
jle
mov
js
xchg
hlt
add
mov
cdq
inc
test
repnz
jle
call
pop
xchg
movs
and
sub
pop
mov
adc
arpl
inc
jge
xchg
leave
dec
xor
fidivr
icebp
xlat
outs
and
add
and
dec
hlt
movs
rcr
xchg
jmp
fist
pop
cmp
imul
add
fld
dec
xchg
fs
test
add
xchg
ja
popa
nop
out
jno
mov
jne
inc
push
xchg
in
outs
mov
stos
mov
pop
aaa
mov
(bad)
fsub
push
mov
arpl
lods
rcl
sbb
cli
adc
cmp
test
push
mov
lods
xchg
and
mov
sbb
and
pusha
xchg
js
xor
xchg
inc
scas
popa
cli
ja
add
xor
and
pop
dec
cmp
inc
mov
xor
mov
not
mov
aaa
add
scas
(bad)
in
std
add
sbb
or
clc
xchg
lods
push
jbe
lods
les
jmp
(bad)
ret
cmp
sar
pop
sub
sbb
or
lds
sti
sti
dec
out
push
jmp
xlat
(bad)
into
retf
xchg
pop
push
(bad)
add
jmp
mov
jmp
retf
push
fwait
add
lock
punpckhwd
sbb
ret
jne
pop
push
and
pop
test
out
ret
jecxz
mov
push
jno
pop
mov
(bad)
sbb
sbb
pop
add
in
push
xlat
pop
cmp
push
or
outs
nop
out
pusha
pushf
and
xchg
mov
outs
stc
pop
sub
xor
ins
pop
push
hlt
inc
aad
inc
(bad)
shr
(bad)
in
jbe
push
sub
or
cmp
inc
iret
imul
ret
xchg
mov
jmp
cmc
shl
scas
sbb
push
cmp
sub
dec
mov
push
mov
dec
add
add
test
mov
mov
pop
ins
mov
cmps
repnz
and
ja
clc
adc
sub
mov
dec
fwait
or
cld
push
retf
lock
dec
mov
push
iret
scas
ficomp
or
push
int
jge
loopne
(bad)
call
jne
int3
pop
add
and
jmp
je
or
sub
bound
ret
ror
das
(bad)
mov
into
aam
pusha
es
repnz
(bad)
cmp
mov
ins
mov
push
push
jecxz
adc
push
sbb
cld
xor
jmp
jo
nop
fwait
scas
pop
adc
push
aas
sub
push
or
pop
cmp
push
jge
ret
adc
xchg
dec
inc
out
xchg
mov
jmp
pop
push
and
xchg
or
and
lock
xor
add
imul
fs
pop
and
fcom
adc
jle
xchg
jb
add
retf
loop
mov
bnd
test
ret
scas
add
sar
jmp
test
xchg
sbb
je
sub
xor
enter
in
or
popa
stos
popf
in
cmp
cmp
mov
inc
fdiv
js
mov
mov
out
push
push
pusha
dec
or
and
sub
arpl
(bad)
not
adc
icebp
rcr
mul
or
xchg
ror
lods
mov
and
mov
mov
out
push
and
push
aas
and
mov
cmp
xchg
loope
push
xchg
cmp
in
fldcw
bsf
mov
xor
pop
xlat
ret
movs
(bad)
push
mov
inc
lds
fsub
and
xchg
and
mov
mov
and
sub
dec
or
std
and
mov
dec
inc
call
adc
fist
or
stos
out
pop
scas
jg
cmp
or
out
mov
cs
fist
pop
cs
aad
jecxz
loope
inc
jmp
int
outs
shl
ss
call
mov
fcom
inc
rcr
mov
cwde
in
loope
int
lods
loope
out
mov
xor
pop
mov
or
fwait
push
mov
popa
dec
inc
and
adc
mov
pop
ret
sub
and
push
xchg
mov
xor
rcl
cmp
jle
pop
and
icebp
(bad)
push
or
and
add
in
lock
fld
mov
adc
xlat
push
cmp
(bad)
aas
test
cwde
ss
pop
dec
retf
sbb
std
mov
in
pushf
sbb
cmc
in
mov
push
test
push
pop
rcr
xor
inc
add
mov
mov
lahf
xchg
mov
xchg
add
pop
imul
or
cmc
int3
sahf
(bad)
jns
cmps
xchg
mov
mov
jns
dec
test
mov
inc
or
adc
or
xchg
aaa
aaa
push
sbb
stos
mov
fucomp
adc
jecxz
mov
adc
cwde
xor
sar
aas
pop
out
pusha
add
mov
daa
clc
pop
(bad)
aas
push
cmp
mov
cdq
call
fisttp
aad
rcl
fsub
adc
fisub
imul
loopne
add
jmp
data16
or
fucomp
fst
cmp
cmp
call
add
jl
sub
mov
adc
rcl
xchg
jl
push
mov
push
xor
stos
xchg
(bad)
dec
dec
push
mov
(bad)
fcom
stc
scas
popf
cmp
addr16
aas
inc
and
cmps
repnz
cmc
mov
xor
jbe
repz
mov
push
shr
add
sbb
add
jo
sbb
adc
adc
aaa
scas
icebp
out
ror
xor
inc
mov
mov
jmp
cmp
pop
test
iret
(bad)
lods
scas
mov
or
repnz
xchg
ret
and
sahf
stc
sbb
adc
xchg
pusha
shl
retf
retf
cmc
lods
out
ja
cmps
addr16
jmp
jp
mov
sub
dec
loop
xor
je
mov
adc
pop
xor
jnp
retf
jg
rcl
cmps
iret
(bad)
jo
test
jge
add
cli
jp
push
(bad)
mov
xchg
outs
push
xchg
loopne
fimul
test
into
sbb
and
mov
xor
outs
fcomp
inc
xchg
cmp
jle
adc
inc
sbb
outs
push
div
clc
mov
into
sub
jbe
inc
sub
fldcw
or
pop
sub
call
inc
mov
pushf
mov
js
sahf
in
arpl
rcl
mov
add
inc
push
out
mov
loopne
aam
popf
out
add
bound
cmp
jl
aaa
outs
mov
sub
cmp
mov
jge
push
mov
add
cmp
mov
sar
cli
retf
pop
pop
or
ret
popa
(bad)
cmc
push
sub
mov
push
fidivr
sub
aam
sub
les
test
ret
outs
add
pop
jmp
nop
dec
and
lock
and
inc
add
xchg
xchg
mov
popf
and
dec
lods
adc
fucomp
fcmove
hlt
jne
(bad)
xchg
sar
mov
mov
jmp
xchg
(bad)
jmp
loopne
jge
dec
cwde
and
adc
add
xor
stc
xor
sbb
adc
dec
retf
and
or
mov
jge
xchg
cmps
pushf
repnz
out
adc
shl
into
or
sub
loopne
out
imul
retf
out
dec
mov
add
jl
cmp
and
pop
cmps
pop
pusha
pop
inc
xor
mov
add
cmp
dec
add
int3
leave
lock
mov
and
sub
cli
lock
bound
dec
sub
inc
stc
outs
xor
jecxz
icebp
mov
xor
xchg
jne
and
push
sbb
add
adc
cmps
cwde
repz
(bad)
and
cmp
rcr
(bad)
int
retf
push
repnz
imul
ret
mov
clc
push
push
stc
into
xlat
out
pop
mov
call
jno
fild
enter
nop
sar
inc
call
aad
scas
not
imul
cmps
inc
sbb
fcomp
daa
sbb
scas
repz
dec
inc
cmp
dec
xor
mov
lods
add
push
aad
xchg
aas
out
pop
mov
xor
imul
shl
add
popa
icebp
jp
in
(bad)
movs
mov
pop
mul
mov
inc
cmp
lea
sbb
paddq
lea
loopne
mov
sbb
jbe
cwde
out
fucomi
and
test
inc
adc
sub
adc
ja
repnz
test
sub
and
mov
ja
push
jb
(bad)
inc
test
es
pop
idiv
cmp
popf
adc
enter
jns
push
mov
push
inc
mov
test
pop
test
movs
jmp
mov
jbe
mov
mov
cld
cs
ins
mov
and
and
dec
or
add
xchg
push
mov
xchg
(bad)
push
cmp
jmp
mov
cmp
lock
cmp
pop
adc
in
int3
mov
jno
mov
add
jae
inc
xor
cdq
mov
xor
lock
aam
adc
jno
(bad)
nop
cmc
cmp
cli
add
aad
mov
in
mov
test
inc
cdq
in
out
int3
add
sub
push
mov
outs
lock
mov
mov
adc
in
nop
in
popa
mov
dec
sub
lea
sbb
jge
inc
jle
push
ret
fdiv
lock
std
ins
mov
push
cmp
jb
(bad)
fimul
or
aaa
sub
adc
add
push
pop
stc
dec
mov
sub
cmp
imul
dec
mov
ret
test
mov
loop
xchg
in
xlat
mov
(bad)
jmp
sahf
push
fld
ja
sbb
pusha
retf
popf
jnp
inc
adc
pushf
fs
ss
add
fild
test
adc
add
mov
cdq
adc
mov
out
push
test
inc
out
sub
push
cmps
add
jp
jmp
xor
mov
pop
pop
mov
enter
retf
jbe
out
xchg
fmul
add
addr16
mov
repnz
mov
inc
es
test
lahf
mov
inc
inc
mov
div
jb
popa
jns
push
arpl
sub
mov
sbb
jmp
pop
xor
loopne
fnsave
sbb
pmaxub
mov
out
repnz
push
xchg
div
ds
mov
xor
cmp
call
or
jmp
push
out
loope
jl
sub
jno
mov
pop
mov
fnsave
lock
popa
pushf
pcmpgtw
test
lar
psubb
int3
mov
add
dec
iret
and
dec
push
mov
or
loop
mov
jae
jb
dec
mov
das
push
shl
jmp
jbe
mov
sbb
or
xchg
(bad)
xlat
sub
and
out
push
(bad)
dec
mov
aaa
test
pop
or
jmp
and
ss
leave
lea
nop
jns
outs
jno
sub
or
gs
cs
neg
test
adc
and
aas
jbe
out
and
mov
pop
mov
(bad)
frstor
push
or
sbb
pop
(bad)
sahf
dec
mov
xor
push
sub
dec
int
jmp
mov
scas
jne
loop
shr
push
mov
test
repz
ja
rol
xchg
ins
mov
ds
adc
jmp
mov
cmps
cmp
push
mov
push
add
in
popa
out
push
jge
inc
jae
pop
shl
mov
add
cwde
jle
dec
(bad)
sbb
jae
rol
retf
sbb
inc
pop
add
arpl
rcr
cmp
mov
loopne
mov
lock
jmp
mov
sbb
mov
jl
ins
jg
mov
sahf
push
cmp
or
mov
jbe
fiadd
cmps
js
loop
add
pusha
adc
xchg
fild
call
sbb
cdq
pop
fild
popa
pop
inc
and
call
mov
mov
jl
das
or
mov
or
(bad)
popa
inc
addr16
dec
add
neg
ja
mov
mov
ins
adc
dec
push
cmps
inc
ror
sub
add
adc
mov
cmps
mov
jmp
(bad)
stos
dec
cmp
lods
push
jnp
in
fidivr
pop
jae
inc
lock
or
xlat
aas
jno
enter
test
adc
arpl
je
scas
inc
xchg
(bad)
cmc
aas
fld
ds
xlat
pop
push
mov
pop
sub
movs
fwait
push
cmp
sub
daa
lock
mov
add
outs
fst
dec
and
cmp
xchg
mov
loop
mov
fwait
fs
fs
clc
sbb
(bad)
mov
pop
repnz
int3
stos
sub
push
je
into
in
leave
pop
and
rol
retf
push
in
repz
or
shr
pop
es
ret
mul
add
jno
mov
adc
xchg
dec
mov
cmps
data16
pop
(bad)
out
jns
shr
jg
mov
xor
jns
mov
in
or
lea
lods
add
and
and
mov
call
shr
aaa
pusha
das
jg
lahf
sbb
jae
pushf
data16
mov
fild
xor
shl
cmp
ret
daa
xchg
int
repz
cmp
push
adc
lea
imul
imul
scas
push
add
inc
shl
inc
call
push
jmp
bound
sbb
fld
jo
in
lea
pop
aad
sar
sahf
jo
dec
mov
xchg
adc
sub
out
gs
ret
push
cmps
pop
aam
ds
push
not
pop
stos
out
jmp
mov
je
or
aad
add
cs
ret
adc
jns
jno
mov
jg
in
mov
out
add
std
mov
stos
sbb
and
stc
jg
imul
ror
icebp
ss
jmp
test
aam
jb
aam
stos
fwait
xchg
push
push
arpl
push
in
inc
jge
into
add
inc
fimul
loop
cli
xchg
stos
ss
mov
loope
in
pop
pop
test
std
ja
jmp
xchg
cwde
test
sub
mov
and
jbe
jnp
ss
xor
dec
ins
test
or
adc
mul
movs
pop
and
into
enter
int
dec
lahf
inc
pop
aas
ret
loope
inc
movs
mov
inc
jecxz
bound
jle
scas
test
mov
sbb
pushf
lea
or
mov
jle
retf
sub
push
sbb
push
push
nop
pop
call
gs
jo
pop
mov
call
cmc
test
and
inc
jmp
mov
push
cmps
push
movs
mov
add
jnp
mov
nop
sbb
jp
call
retf
cmc
cmp
dec
lods
dec
ins
std
mov
mov
mov
xor
dec
test
outs
jb
dec
and
js
mov
test
push
or
ds
mov
inc
mov
not
les
mov
sub
dec
data16
push
and
in
add
xchg
out
and
pop
push
inc
xor
xor
add
retf
sub
jbe
mov
lea
sbb
add
sub
inc
and
pop
stos
(bad)
int3
scas
push
test
add
scas
xchg
mov
and
add
jb
(bad)
mov
sub
xor
pusha
pop
nop
dec
int3
sub
pop
test
in
fcmovnb
sub
mov
mov
mov
imul
inc
ror
push
inc
xchg
xchg
sub
in
cli
add
arpl
push
push
(bad)
retf
outs
es
xor
or
xchg
(bad)
cli
mov
xchg
fs
mov
sbb
cli
jne
and
and
pop
inc
sub
mov
pop
pop
mov
or
mov
in
adc
mov
mov
or
out
call
loope
bound
inc
and
mov
add
xor
jg
in
jns
cmp
jmp
push
lahf
sar
das
in
jge
test
(bad)
jp
jae
(bad)
jge
jno
test
push
push
nop
lods
jg
loopne
dec
pop
call
and
pop
mov
xlat
in
mov
bound
push
neg
pop
data16
cmps
shl
mov
inc
rcr
xchg
mov
push
popa
push
out
fwait
pop
int3
ds
fldcw
imul
out
test
stos
rcl
xchg
dec
cmp
xchg
loopne
cmp
dec
and
cld
stos
adc
sbb
sub
out
arpl
mov
jae
ret
loopne
call
movs
cs
sbb
scas
cmp
les
int
ficom
in
add
jle
daa
mov
pop
inc
movs
lea
mov
ret
mov
out
fwait
adc
push
mov
mov
mov
jnp
mov
stc
jmp
add
inc
or
mov
fcmovnu
fsub
pop
xlat
cmp
cmp
jbe
and
cmp
sahf
mov
lods
and
in
fldenv
sbb
adc
aas
cmp
push
clc
stos
xchg
arpl
lds
jg
call
(bad)
retf
sub
mov
int3
icebp
pop
xchg
fstp
adc
mov
cdq
test
addr16
inc
xchg
sub
sbb
je
mov
ret
sub
cmps
xchg
shl
sub
and
cdq
aas
or
rcl
xor
sub
fimul
fisub
or
jge
jmp
jmp
pop
scas
fisubr
mov
add
cld
fucomip
pop
and
(bad)
jmp
push
sti
xchg
sahf
add
jecxz
call
neg
sub
inc
pusha
aam
retf
sbb
adc
and
mov
or
xchg
sub
fst
and
xor
sub
into
ins
aas
xchg
pop
mov
xor
mov
(bad)
jl
stos
hlt
adc
mov
out
gs
push
dec
(bad)
popf
adc
stos
jecxz
clc
jb
sbb
jns
pop
or
cmp
fcom
xchg
jle
test
mov
xchg
(bad)
outs
int
push
mov
and
sub
inc
and
and
mov
mov
and
ja
loope
jne
(bad)
dec
hlt
mov
push
fwait
ins
pop
pop
sbb
into
(bad)
int
aaa
inc
jmp
sub
fwait
push
push
out
imul
fdivp
sub
mov
fs
loop
adc
push
or
hlt
mov
stos
sbb
xchg
rol
aas
jne
xchg
xchg
push
cli
inc
bound
xor
sub
shl
in
xchg
xor
ja
ror
ja
mov
jno
add
fimul
inc
pop
pop
sbb
hlt
movs
dec
jl
xor
mov
jns
(bad)
in
adc
and
sub
mov
sti
imul
xchg
std
(bad)
not
mov
pop
mov
and
out
inc
xchg
dec
xor
inc
and
mov
sahf
mov
or
movs
imul
test
push
movs
push
je
rcl
push
das
test
sub
dec
(bad)
mov
push
out
std
push
mov
inc
aaa
mov
add
inc
dec
ror
push
jns
ret
inc
nop
cli
sti
scas
push
xchg
outs
arpl
push
mov
lock
inc
and
pcmpgtd
xor
jl
xor
fsubr
dec
fmul
imul
mov
xor
movs
ins
outs
sub
cld
fwait
and
jbe
lds
mov
jge
inc
pop
xchg
jecxz
add
jbe
pusha
lds
or
sbb
cmp
push
pop
lahf
test
lahf
in
cmp
mov
cmp
mov
and
aaa
inc
repz
movsx
push
mov
test
rcl
push
sub
push
cmp
or
in
or
mov
mov
pop
dec
popf
stc
in
dec
xchg
stos
mov
out
clc
bnd
outs
aaa
add
aad
pop
movs
jns
pop
sbb
rcl
data16
sahf
cmp
adc
scas
and
pop
shl
or
rcl
push
mov
add
fldcw
js
add
push
mov
fild
push
daa
hlt
xchg
cdq
inc
vmread
jmp
aad
and
aam
gs
enter
xlat
add
pop
xchg
fcmove
je
mov
jmp
inc
adc
jno
out
aad
loope
icebp
sub
mov
lds
jle
and
push
dec
sahf
adc
jmp
sub
cmp
fmul
test
jae
imul
sbb
in
repz
enter
push
mov
sub
jb
mov
jmp
sbb
inc
sub
push
xchg
mov
add
data16
push
jns
cmp
xchg
xor
cmc
ins
or
std
mov
pop
jl
jbe
push
dec
ret
push
movs
xor
push
(bad)
nop
dec
xor
in
push
stos
push
cmp
test
in
mov
and
mov
add
adc
scas
paddq
call
add
cwde
sti
in
clc
dec
dec
xchg
aaa
push
sub
and
push
sub
shr
cmp
sbb
mov
clc
std
push
sub
pusha
dec
rcr
imul
sub
jmp
or
sub
out
out
and
(bad)
jmp
mov
stos
lds
fisubr
ds
sub
in
adc
cmp
and
jmp
loop
mov
jmp
adc
cld
sbb
pop
ins
adc
mov
adc
mov
xchg
push
(bad)
int
enter
jns
jmp
pop
mov
imul
cmps
imul
imul
imul
dec
and
call
lds
pop
icebp
mov
mov
in
loope
movs
or
pop
aad
cs
fild
fcom
stos
fs
mov
cmp
cmp
mov
(bad)
into
xchg
xor
jecxz
ja
(bad)
mov
push
mov
hlt
out
jl
cmp
ret
js
xchg
imul
lods
jmp
sbb
cmc
shl
pusha
mov
ds
xchg
jge
leave
push
arpl
setne
jbe
adc
or
pop
cmp
test
(bad)
lods
bound
mov
int
js
movs
or
aam
mov
popf
scas
das
jbe
pusha
push
daa
xor
cwde
arpl
retf
fwait
addr16
and
jmp
push
mov
lahf
add
jbe
int
push
lock
or
mov
nop
mov
mov
cmp
cmp
cmp
push
sbb
add
hlt
in
jne
and
push
inc
imul
iret
lods
mov
movs
inc
ins
icebp
or
mov
xchg
imul
test
jb
push
push
movs
addr16
gs
sbb
stos
mov
sti
jb
enter
push
pop
mov
jmp
adc
xchg
pop
jecxz
ret
jmp
dec
jp
mov
jne
sub
fnstsw
into
popf
or
cmp
(bad)
sbb
adc
inc
mov
jmp
xor
pop
(bad)
ins
clc
xchg
sub
dec
std
cmc
pop
scas
shr
pop
inc
add
dec
shl
xchg
or
fstp
cmp
inc
cmp
in
or
dec
loop
and
jae
cwde
dec
or
xor
inc
ss
in
pop
jns
lock
sub
shl
cmp
cmp
cmp
xchg
sub
rol
sbb
mov
cmps
daa
pop
xor
popf
or
dec
mov
or
inc
lods
push
stos
cwde
lock
scas
and
ja
push
(bad)
in
sbb
or
jnp
jae
(bad)
mov
mov
pop
icebp
mov
cld
or
sbb
jnp
fdivr
mov
adc
sbb
jmp
sbb
jo
mov
mov
into
and
jmp
in
rcl
lds
pop
cmp
ficomp
xchg
outs
pop
jecxz
sbb
cmp
test
loopne
movs
hlt
add
mov
pop
mov
das
gs
jne
sbb
dec
cdq
pop
dec
in
movs
inc
pop
mov
mov
or
lods
neg
fwait
mov
stos
xor
das
push
mov
xchg
mov
repnz
cs
lock
and
or
loopne
mov
mov
addr16
(bad)
jmp
arpl
xor
int
pop
je
arpl
sbb
xchg
enter
rol
or
and
(bad)
and
sub
jb
mov
(bad)
test
lea
push
dec
mov
lock
mov
xor
jnp
add
cli
arpl
movsx
cli
shl
push
movs
pop
in
sub
jle
mov
and
outs
or
push
dec
jl
ret
sub
dec
add
sbb
popf
dec
lock
stos
bound
ds
mov
mov
ds
xchg
pop
pop
mov
hlt
cmp
call
aad
push
xor
push
xlat
out
add
loopne
outs
dec
test
mov
jp
ficomp
aam
xor
aaa
hlt
sahf
or
jbe
push
jno
push
retf
sbb
call
jle
push
std
into
pop
loopne
out
ror
jnp
mov
fidiv
cli
aaa
sub
mov
cmp
sub
xchg
nop
lods
mov
adc
jecxz
dec
or
fdivr
xchg
dec
movs
xchg
jae
adc
jecxz
cmp
jmp
scas
mov
(bad)
movs
mov
dec
pop
push
and
xchg
loop
std
mov
jmp
add
stos
jae
or
dec
gs
push
(bad)
leave
in
inc
outs
loop
mov
cli
mov
and
cmps
pop
fs
cld
mov
fdiv
lds
je
out
pusha
and
pop
mov
push
vmovd
cld
repz
ret
(bad)
cmps
loopne
ins
std
mov
cmp
mov
je
repz
inc
push
push
adc
or
cld
mov
scas
in
mov
mov
and
test
jns
mov
aaa
inc
mov
icebp
outs
addr16
xchg
xor
xor
jns
sub
xchg
pop
mov
adc
mov
jae
nop
icebp
push
sub
inc
cmps
dec
mov
inc
push
or
pop
addr16
add
ret
call
dec
xchg
int3
movs
in
shr
ret
adc
mov
or
loop
xchg
push
scas
push
retf
mov
xor
dec
ss
xor
jo
jmp
test
cwde
mov
sub
inc
sub
call
or
adc
pop
in
mov
lds
cmc
xchg
and
icebp
push
nop
mov
xor
arpl
jmp
and
dec
aas
or
or
fnsave
push
lea
pop
xchg
mov
gs
aad
scas
scas
jnp
scas
in
adc
arpl
int
ds
jp
jb
out
add
xor
mov
and
out
xchg
xchg
sbb
iret
lock
jnp
sub
mov
mov
xor
xlat
addr16
rcr
jg
sbb
pop
imul
inc
adc
aad
add
popf
add
cmps
pop
int
sub
inc
and
xor
adc
(bad)
out
mov
add
jb
pop
ss
rcl
mov
adc
sbb
aam
ins
mov
xchg
mov
mov
jo
daa
jl
daa
fwait
jne
cmp
jp
rcl
out
loope
jae
and
jne
push
xchg
or
repnz
int
push
mov
sub
aam
lods
fs
inc
rcr
mov
leave
xchg
ins
out
retf
dec
add
mov
inc
dec
fadd
xor
mov
ficomp
packsswb
push
cs
push
in
lds
cmps
cli
and
sub
xchg
(bad)
rcl
mov
mov
sar
out
xor
fiadd
cmp
push
jns
pop
aaa
or
data16
adc
push
jns
sub
mov
sub
xlat
adc
ror
push
popa
out
out
adc
aaa
adc
xor
repnz
or
mov
mov
adc
mov
dec
and
push
int3
rol
pop
push
scas
test
jne
fs
dec
test
mov
(bad)
mov
inc
add
fwait
pop
pushf
jnp
xchg
cmp
xor
lock
sub
and
ror
mov
ret
out
jno
xor
and
push
lds
and
mov
adc
adc
inc
mov
mov
call
mov
ins
js
jge
cmps
pop
lea
sbb
stos
push
into
jl
mov
in
js
rcl
out
clc
sub
push
or
repnz
lock
sub
dec
push
dec
mov
sub
xlat
inc
shr
push
xchg
addr16
pop
movs
lods
cld
sub
mov
jns
sub
mov
add
div
dec
stos
dec
jmp
mov
movs
xchg
push
out
out
rcl
sub
push
enter
je
push
xlat
out
cmovg
and
ins
mov
xchg
sbb
hlt
xor
sbb
xchg
shl
aaa
not
test
pop
mov
inc
scas
xor
jmp
aaa
and
or
outs
popa
inc
aad
xor
nop
adc
xchg
cmp
or
in
repz
int
cmp
les
out
cmp
mov
fwait
adc
fdivr
rcr
sub
mov
outs
test
aam
or
dec
test
mov
nop
and
pop
cs
jmp
dec
mov
and
sbb
adc
cmp
push
cmp
push
inc
outs
outs
mov
jg
rol
imul
jmp
dec
imul
add
repnz
adc
mov
repnz
dec
adc
(bad)
adc
cld
clc
push
adc
icebp
fs
inc
sbb
dec
pop
xlat
(bad)
sbb
cmp
lods
and
int
jbe
pop
and
mov
nop
rol
imul
test
sub
or
sub
add
(bad)
pop
repz
aad
sub
test
sub
jl
xor
cmp
xor
dec
into
into
adc
cli
dec
xchg
dec
repz
mov
pushf
jnp
add
leave
mov
fsubr
rcl
stc
jle
add
sbb
sbb
xor
sub
mov
xchg
xor
fucomip
test
and
jno
push
cmp
out
addr16
cli
popa
out
dec
mov
stos
es
fdivr
rcr
sbb
outs
in
cmp
lock
enter
inc
jne
adc
fidiv
jecxz
nop
mov
fstp
mov
rcr
xchg
jnp
cli
dec
lods
es
stos
fimul
addr16
test
jb
adc
lea
lahf
cli
adc
test
dec
sub
push
or
(bad)
(bad)
mov
cs
stos
adc
push
dec
pusha
cld
and
(bad)
sar
mov
push
add
fadd
imul
sub
inc
inc
jp
mov
pop
dec
cmp
and
imul
inc
adc
pop
outs
lahf
js
cdq
xchg
jbe
iret
push
mov
dec
cmps
(bad)
jnp
jmp
add
xor
push
inc
dec
sub
pop
push
jne
pop
test
imul
push
adc
daa
dec
ret
cmps
cmps
mov
dec
sahf
test
sub
rcr
mov
mov
cmp
pop
sub
call
repz
aad
mov
ds
(bad)
icebp
cmc
sbb
pop
sub
movs
in
pop
cdq
mov
test
cmp
sbb
lods
mov
shr
inc
(bad)
add
inc
sbb
hlt
pop
jo
shl
shl
ficom
sbb
push
movs
xchg
fwait
ror
ss
icebp
lods
xchg
dec
inc
push
xchg
jmp
pop
(bad)
cmp
enter
mov
jb
push
sahf
inc
aaa
cld
push
test
xor
and
push
mov
nop
fwait
mov
jle
mov
dec
fnstsw
imul
add
adc
xchg
icebp
push
mov
push
pop
jae
sbb
jecxz
pop
pushf
ds
sbb
jbe
mov
into
jmp
jecxz
lods
test
adc
and
and
test
jns
enter
outs
mov
rcr
ss
rcl
sbb
sbb
je
mov
ret
cmp
jne
ficom
fs
scas
or
call
aas
icebp
mov
push
add
push
mov
bound
pop
cmp
pop
xor
lods
hlt
xchg
lds
sbb
push
retf
fiadd
loop
ss
jp
stos
ffree
push
aaa
add
add
es
jl
mov
(bad)
push
sub
sub
sbb
ret
or
arpl
outs
inc
jp
xor
hlt
mov
cmp
pop
mov
retf
ds
add
xor
ret
mov
sbb
and
inc
movd
xor
push
inc
cli
aam
or
xor
(bad)
xor
je
(bad)
pop
inc
push
xor
pop
jmp
or
stc
mov
call
loope
sub
mov
int
call
pop
fcomp
and
outs
imul
in
test
adc
cmp
movaps
adc
hlt
ds
sahf
cmp
shr
or
fs
hlt
sbb
xor
retf
aas
dec
outs
imul
je
(bad)
fdivr
mov
push
adc
sar
xor
push
(bad)
sub
xchg
cmp
cmp
cmc
jl
std
add
rcr
xchg
das
xchg
push
scas
add
mov
lea
sahf
mov
in
sub
lock
pusha
jb
popf
or
mov
stos
call
hlt
bound
jmp
pop
rcl
ins
dec
rcr
inc
pusha
pop
repnz
pop
in
cmp
sbb
mov
sbb
push
cwde
inc
int
dec
inc
jo
int
xchg
mov
ins
mov
ins
(bad)
mov
idiv
or
ins
fimul
out
shl
mov
cmps
dec
xchg
imul
jo
fist
fild
call
dec
enter
cld
mov
cmp
push
into
movs
stos
std
adc
add
loopne
shl
jmp
jmp
in
push
sub
cmp
setl
and
push
dec
sub
and
add
dec
cmps
int
sar
mov
outs
(bad)
push
sbb
cdq
jno
push
(bad)
xchg
outs
jae
fsincos
retf
retf
xchg
ret
cmp
std
(bad)
out
sub
(bad)
jae
sub
inc
aaa
std
bound
xor
jl
sub
lahf
mov
sar
sbb
adc
sar
sti
add
mov
dec
mov
sub
imul
sub
add
call
jmp
leave
out
inc
xor
push
xchg
adc
pushf
ror
add
inc
xchg
adc
cs
(bad)
in
cmp
cli
sti
ss
dec
int
pop
les
push
leave
sbb
pop
xchg
mov
pop
ins
pop
sar
xor
ins
pop
fsub
add
in
dec
xor
mov
inc
imul
sbb
pop
imul
xchg
push
mov
xchg
xor
inc
or
mov
inc
es
sahf
mov
clc
cmp
imul
idiv
inc
out
outs
retf
in
add
aam
jp
popa
jp
sub
cs
add
dec
ins
mov
popa
xor
pusha
push
stos
mov
ret
ins
mov
aas
test
pop
leave
lds
mov
sar
js
or
aaa
xchg
mov
in
sub
out
cmp
test
dec
(bad)
pop
fwait
xchg
xor
cmp
inc
mov
mov
scas
and
and
pop
cmc
pop
jl
and
pusha
(bad)
mov
das
or
xor
dec
pop
jno
inc
add
inc
cdq
push
sub
imul
jp
push
add
or
cli
jne
je
adc
adc
sbb
push
pop
mov
sbb
lahf
sub
mov
int3
xchg
fisubr
push
inc
push
pop
sbb
cmp
push
mov
in
sar
stos
push
dec
retf
xor
xor
sub
mov
xchg
adc
(bad)
cmps
sub
sbb
pop
mov
leave
mov
arpl
leave
cmp
push
bound
adc
and
or
push
sub
mov
mov
fldenv
clc
lea
idiv
retf
jmp
fisttp
xchg
mov
or
gs
push
inc
not
retf
mov
movs
pushf
jno
push
jle
pop
(bad)
repnz
push
cmp
lods
test
sbb
in
scas
mov
pushf
mov
jp
jmp
pop
mov
sub
(bad)
test
mov
ret
ins
test
cmc
or
btr
jno
ins
adc
mov
fisttp
jo
call
xor
pop
arpl
add
fcomp
pop
fwait
jae
clc
or
or
xor
mov
outs
xor
add
push
mov
outs
and
cmp
jge
fild
out
mov
retf
int3
or
mov
dec
cdq
inc
int
ins
ror
and
clc
sbb
enter
sub
loop
shr
and
int
or
test
inc
sbb
mov
(bad)
mov
push
test
mov
(bad)
xor
jmp
les
dec
jns
lock
xor
hlt
sub
push
(bad)
mov
sbb
cmp
mov
std
iret
jg
daa
fs
dec
mov
or
push
lods
aad
jno
pushf
and
xlat
jno
ficom
push
bnd
push
pop
xchg
add
jns
jp
stos
push
sbb
fsubr
jnp
dec
dec
xchg
cmp
adc
mov
rcl
xchg
fadd
mov
shl
aaa
xchg
inc
jno
add
retf
lods
fmul
mov
mov
dec
pop
mov
test
popf
xchg
outs
mov
jmp
cld
adc
shr
jo
dec
jo
add
xor
cmp
ss
jmp
dec
jae
mov
mov
dec
retf
add
lds
pop
in
adc
lods
gs
jno
sahf
add
mov
dec
imul
mov
xchg
mov
and
stos
xchg
aas
mov
sub
cwde
ret
in
sti
int3
ror
retf
cs
loopne
into
sbb
or
sahf
cmp
dec
test
sti
push
xlat
fnstenv
or
(bad)
mov
sbb
and
mov
jno
cmp
jbe
or
xchg
call
cwde
xor
cld
jmp
pop
push
or
ins
cmp
arpl
movs
pop
je
and
or
sub
scas
nop
mov
cmps
xor
out
jg
in
ds
hlt
xlat
dec
dec
into
not
mov
adc
mov
xchg
inc
push
gs
fs
ficomp
out
pop
mov
mov
(bad)
and
lahf
sub
or
push
fist
stos
mov
mov
dec
fild
xchg
mov
ins
push
out
test
mov
mov
dec
mov
cld
loop
mov
je
(bad)
pop
dec
mov
pop
scas
xchg
push
sbb
xor
sub
xchg
xor
xchg
xor
cmp
leave
addr16
adc
ds
repz
out
jge
scas
xor
test
dec
cmp
adc
mov
push
hlt
mov
pop
aad
lods
cmps
mov
stos
pop
pop
jmp
add
and
leave
xor
jecxz
push
xchg
dec
icebp
cmp
or
pop
xchg
ss
xor
dec
and
xchg
pop
(bad)
fdiv
das
xor
cld
inc
push
adc
adc
test
adc
xchg
leave
cwde
popf
ss
leave
push
(bad)
mov
xor
jnp
popf
inc
xlat
mov
pop
cmc
aam
xlat
(bad)
cmp
nop
shl
ret
es
pop
fwait
daa
sti
mov
sub
outs
out
into
test
jnp
jnp
xchg
pushf
outs
imul
xor
js
mov
dec
and
or
mov
mov
rep
jb
sub
cmps
into
adc
sbb
add
cmp
lock
mov
and
arpl
push
jae
pop
mov
loopne
jbe
mov
cmp
mov
pop
hlt
pop
sub
mov
mov
inc
ins
jecxz
not
or
sub
jle
sbb
add
xchg
sbb
pop
ss
icebp
xor
lods
in
mov
and
inc
or
inc
pop
jbe
aas
mov
pop
pushf
cmc
ins
pop
retf
jns
mov
adc
and
pop
fild
jnp
lods
mov
mov
sbb
popa
aaa
sbb
or
shr
js
cmps
push
add
sbb
enter
sub
loop
je
ins
out
cmp
repnz
ret
jge
dec
jge
xor
loopne
or
lock
nop
stos
sub
fisub
cmp
xchg
push
mov
cmp
or
pop
add
mov
cld
dec
push
fwait
jbe
xor
(bad)
jmp
popa
int3
jae
cmp
(bad)
cmp
xlat
jle
inc
in
xchg
lea
fcom
cmps
and
pop
pop
outs
iret
ret
jo
cs
in
gs
cmp
mov
int3
mov
sti
dec
ins
adc
push
jb
mov
fnsave
mov
and
pop
xchg
push
cdq
movs
inc
fidivr
cwde
adc
add
xchg
jae
cmp
stos
cli
das
jl
pop
mov
add
mov
cli
sbb
mov
stos
(bad)
shl
xchg
test
test
xor
sbb
ss
mov
mov
inc
out
imul
fscale
mov
(bad)
xchg
shl
and
sahf
jg
cmps
inc
sbb
clc
stos
fs
add
scas
mov
jecxz
add
fs
aaa
add
jno
ret
xchg
cld
push
xlat
repz
pop
std
sbb
or
(bad)
shr
dec
pusha
or
test
pop
cmp
ret
ret
pop
jbe
jbe
sti
in
aas
or
repnz
mov
push
push
cwde
scas
(bad)
iret
mov
add
inc
sbb
mov
push
fdiv
loope
and
cmp
push
outs
pop
and
mov
xor
aas
movs
(bad)
repnz
mov
test
push
aas
push
pop
jl
mov
test
xchg
dec
or
hlt
inc
into
mov
test
mov
inc
sub
or
fdivp
xor
les
push
in
daa
cmp
in
or
fucomi
push
ins
mov
dec
pop
stc
dec
xor
push
push
adc
lds
jl
xchg
ret
call
or
mov
mov
in
mov
inc
mov
push
repnz
enter
data16
mov
mov
pusha
pusha
pop
jmp
adc
jo
and
ds
shl
or
test
clc
js
pop
mov
pop
dec
mov
lock
adc
or
mov
shl
jp
repz
pop
clc
inc
outs
pop
je
xchg
lods
rol
add
movs
rol
push
retf
mov
js
or
dec
shr
scas
retf
pop
enter
fwait
adc
xor
or
xchg
ror
pop
and
retf
dec
loop
adc
fcomp
daa
popf
mov
jns
jbe
push
dec
aam
and
retf
jmp
sbb
iret
movs
jmp
lods
rcl
mov
pop
push
fldcw
std
into
or
imul
jge
mov
dec
push
mov
js
mov
test
scas
loop
xor
cmp
(bad)
mov
pop
cld
add
outs
xor
jmp
or
push
(bad)
arpl
call
loop
pop
mov
add
imul
jge
jp
icebp
push
nop
pop
add
jp
loope
jns
cmps
push
ror
aaa
retf
pushf
fisttp
dec
xchg
dec
js
add
call
inc
mov
fstp
and
and
adc
jnp
pushf
enter
xchg
cmp
sbb
dec
mov
cmps
std
mov
out
sub
jns
cli
xchg
cmc
cmpps
or
adc
(bad)
push
add
push
popf
mov
pop
jb
sub
jmp
shl
iret
xchg
xchg
and
or
int
(bad)
pop
ins
jle
repz
daa
push
xchg
push
xchg
xchg
jecxz
mov
test
out
mov
cmp
(bad)
int
or
push
into
pop
stc
jnp
stos
mov
jb
push
rcr
sbb
mov
(bad)
clc
mov
sbb
mov
dec
sti
jp
je
or
sbb
jnp
(bad)
into
je
movs
jns
dec
lds
in
mov
push
xor
mov
outs
jg
scas
call
int3
arpl
xor
mov
clc
mov
lock
push
and
pop
ins
cmp
cmp
inc
fcmovnb
fld
sbb
adc
inc
sbb
dec
sbb
pop
into
fcom
test
hlt
sbb
pop
mov
xchg
ret
dec
mov
ja
popf
mov
push
jecxz
scas
(bad)
rcl
fucomip
shl
aam
fcomp
sbb
sub
or
and
cmp
add
adc
sti
movs
push
xchg
sub
adc
ret
adc
push
fidiv
(bad)
dec
push
xor
outs
mov
stc
(bad)
mov
sbb
or
ret
adc
push
xchg
jb
icebp
bound
call
movs
xor
fstp
retf
je
imul
mov
jg
jg
gs
mov
jb
shl
mov
stos
sbb
sbb
aaa
pop
or
rol
sbb
pop
jg
ja
lds
xchg
push
int3
xor
xlat
push
test
shr
jmp
in
and
and
sahf
dec
or
out
sub
into
js
jnp
adc
movs
mov
mov
mov
xor
cmp
or
push
scas
(bad)
pop
nop
cmp
jmp
nop
mov
cli
inc
scas
stc
aaa
cld
mov
adc
xor
cmps
mov
xor
mov
movs
mov
xor
std
sub
add
std
cmp
ret
sbb
sbb
inc
xor
and
cmp
movs
jle
sahf
test
call
fbstp
jle
adc
scas
sub
test
sar
xchg
xor
cmps
repnz
aaa
inc
xchg
add
adc
inc
mov
mov
(bad)
cmc
inc
cmp
icebp
nop
repnz
scas
dec
and
mov
clc
xor
mov
cmp
fdivr
sbb
retf
movs
sub
push
hlt
stc
cmp
cdq
or
xchg
adc
inc
into
push
mov
dec
push
add
or
push
gs
loop
ret
mov
or
xor
pop
imul
cwde
aad
stos
int
pop
lds
jne
iret
mov
imul
call
iret
sbb
adc
daa
icebp
push
dec
or
mov
sbb
ror
jbe
inc
and
mov
and
mov
fs
ror
jg
inc
and
mov
jg
inc
cmps
fist
sbb
jnp
inc
lock
fstp
jns
push
cs
mov
mov
aam
cmp
pop
call
pop
popf
lahf
adc
addr16
ja
aas
fisttp
fsubr
test
lods
push
inc
jnp
add
xchg
imul
(bad)
ins
add
test
pop
mov
or
mov
mov
xor
in
imul
mov
mov
push
mov
shl
iret
xor
push
movs
popf
lods
cwde
or
outs
push
xchg
inc
in
rcl
dec
add
int3
or
inc
cmc
cmps
not
std
mov
push
in
push
leave
rol
xchg
inc
test
pop
pop
test
jae
pop
adc
pop
adc
push
xor
xlat
ret
inc
test
nop
or
outs
mov
in
call
cmp
hlt
call
loop
mov
(bad)
pop
outs
pop
xor
fld
jle
imul
xor
xor
jb
push
int
adc
sbb
ins
popf
push
and
lahf
xor
lds
dec
aad
and
sub
test
dec
imul
jecxz
sbb
clc
arpl
jnp
out
or
jge
inc
icebp
push
cmp
out
lods
rcl
fbld
jbe
push
sbb
sbb
cmp
push
adc
or
repz
jmp
out
sub
aas
push
jle
xchg
mov
out
repnz
je
imul
mov
out
jns
inc
mov
fidiv
mov
cmp
in
sub
loope
and
rcl
addr16
mov
sub
les
hlt
popf
dec
mov
xor
dec
sub
cmc
dec
dec
movs
adc
push
mov
fnstenv
pusha
mov
dec
and
je
stc
jno
pop
pop
pop
jb
push
sbb
loope
xchg
cwde
rcl
daa
sub
fsub
mov
pop
jmp
xchg
jbe
in
add
xor
ret
retf
mov
cwde
pop
clc
pusha
jmp
or
test
out
(bad)
sbb
cmps
in
xchg
pop
push
hlt
push
xchg
and
pusha
(bad)
mov
push
mov
enter
push
das
push
push
pusha
sahf
test
xor
adc
shl
stos
pop
lods
inc
adc
mov
mov
and
das
or
repnz
jae
mov
js
xor
push
outs
arpl
pusha
mov
lahf
sbb
mov
push
hlt
xchg
xor
pop
fsubr
add
popf
lods
int3
(bad)
xor
lea
mov
lahf
xor
inc
popa
aaa
stc
sbb
fcomp
push
mov
adc
or
and
imul
lea
jmp
(bad)
sbb
or
xchg
xchg
frstor
outs
inc
xchg
push
add
dec
(bad)
call
xor
adc
and
mov
sub
in
and
pushf
mov
retf
push
sub
sti
xor
mov
mov
add
test
movs
push
jmp
(bad)
retf
inc
or
stc
cdq
mov
rcr
or
pusha
fcom
dec
rcr
cmp
in
rcl
adc
and
push
aam
mov
dec
pop
shl
jb
iret
add
push
dec
jle
stos
lods
into
mov
xor
test
push
adc
fstp
dec
scas
jno
std
jnp
adc
movs
sbb
mov
sub
imul
and
jnp
adc
dec
mov
data16
clc
or
and
out
aam
push
stc
lahf
mov
dec
add
pusha
push
fs
jecxz
lds
push
shl
dec
sbb
mov
out
dec
cmp
jbe
and
fisubr
adc
loope
adc
mov
add
sbb
fld
ds
mov
pop
cwde
pop
push
and
cmp
fldcw
mul
mov
test
je
jl
mov
mov
or
fxch
aas
xchg
in
enter
lods
ficom
xor
mov
push
aam
mov
repz
call
push
push
or
sahf
mov
xlat
out
(bad)
repz
enter
push
pushf
das
adc
dec
jbe
call
test
and
cmp
retf
sbb
jno
mov
(bad)
stos
mov
call
mov
int3
xor
mov
clc
pop
push
imul
push
retf
fcmovbe
mov
cmp
dec
inc
pop
xor
daa
(bad)
(bad)
dec
ret
clc
ds
lock
xor
cmp
sar
add
shr
in
mov
mov
mov
xchg
mov
lods
inc
pop
es
stc
inc
sbb
out
push
adc
sbb
addr16
xchg
outs
mov
mov
loope
stos
jg
daa
sbb
into
push
xor
xchg
sub
and
inc
jbe
lock
mov
push
fadd
xor
outs
mov
jne
es
call
cs
stos
out
arpl
mov
xchg
into
mov
js
test
addr16
retfw
(bad)
xchg
push
push
or
push
mov
xor
lock
inc
cdq
stos
jecxz
(bad)
lods
loopne
ins
std
out
jnp
mov
and
dec
lahf
out
add
cmp
or
push
dec
outs
sti
lods
or
aad
cmp
stc
test
lods
and
pop
cmp
js
inc
inc
push
mov
dec
or
pop
inc
ret
mov
jge
inc
fld
jbe
movs
jmp
movlps
cmovg
sbb
(bad)
add
push
addr16
stos
cmc
push
ds
jo
test
inc
sti
aad
mov
(bad)
jae
leave
push
mov
cmps
dec
pusha
push
push
push
mov
aad
iret
inc
push
cs
xchg
pushf
adc
fbld
retf
mov
jge
cmp
daa
adc
push
inc
mov
mov
ret
xchg
int
imul
adc
sub
sahf
mov
cwde
cmc
sub
pushf
imul
je
mov
xchg
xor
add
mov
inc
pop
lock
add
bound
ins
xchg
dec
ja
inc
iret
adc
jns
aad
retf
mov
jmp
pop
xchg
mov
dec
mov
gs
or
enter
xor
outs
shr
cmps
in
adc
pop
rcl
popa
ins
movs
dec
std
cdq
pop
aas
ror
mov
and
xor
shl
sbb
mov
leave
push
inc
inc
pause
xor
jns
mov
jbe
lods
or
jnp
(bad)
xor
jg
cmps
in
test
xor
add
cmps
movs
mov
data16
fs
jbe
xchg
mov
cmc
xor
js
jae
shr
jecxz
xchg
aaa
in
js
jb
xor
dec
into
mov
inc
cmc
lods
arpl
jb
cmc
dec
daa
int3
mov
mov
cmps
leave
cli
scas
dec
inc
jp
pushf
fwait
shl
fsubr
icebp
fwait
xchg
(bad)
pop
sub
push
mov
aad
out
in
xlat
enter
popa
dec
dec
(bad)
bound
imul
xchg
hlt
repz
bound
push
cs
cmps
pop
shl
jbe
les
out
popa
mov
push
dec
and
(bad)
xchg
xor
mov
nop
mov
and
push
inc
gs
and
fstp
inc
test
repnz
xchg
jecxz
inc
ret
div
inc
cwde
xchg
push
and
mov
jl
test
add
fist
pop
dec
fistp
push
mov
xlat
rcr
cmp
jg
mov
ss
and
test
mov
mov
adc
mov
test
in
add
pop
rcl
push
bound
add
mov
or
or
sbb
imul
mov
mov
fisubr
xchg
sbb
mov
test
rol
pop
mov
jl
les
es
inc
mov
jecxz
inc
mov
outs
dec
jns
rol
shr
scas
lods
sub
les
out
loop
mov
sbb
jl
call
aaa
sbb
daa
add
add
jno
test
xchg
sahf
mov
popf
ret
stos
fwait
xchg
cdq
not
xor
jecxz
mov
stos
ficomp
es
push
xchg
fiadd
add
je
sbb
sbb
pop
lods
es
lahf
adc
xchg
sub
clc
mov
adc
jmp
retf
pop
fwait
mov
imul
push
jmp
fldcw
shl
xor
jae
ss
mov
add
sub
repnz
jno
dec
aad
mov
jecxz
loopne
pop
jmp
sub
pop
push
mov
push
xor
scas
mov
mov
cmp
rcl
jecxz
movs
jle
call
pop
jb
ins
mov
jne
ficomp
cld
dec
sub
inc
repz
clc
mov
dec
out
push
bound
cmps
mov
das
dec
lock
or
xchg
xchg
iret
pop
sub
mov
outs
mov
js
ss
jo
call
not
push
into
cmp
aas
adc
sbb
xor
xchg
xchg
pusha
aas
pushf
jmp
cmps
jmp
ds
mov
mul
fs
push
dec
cld
leave
out
out
jp
int
(bad)
out
sbb
push
mov
push
arpl
rcl
cmp
sub
add
add
pop
push
cmps
dec
pushf
jp
inc
fwait
data16
(bad)
cwde
call
scas
dec
adc
aad
(bad)
mul
mov
movs
add
xchg
add
rcr
inc
cmp
stc
cmps
test
mov
xlat
or
mov
es
ror
stos
sub
rcr
sbb
out
fdivr
sti
mov
or
ss
push
into
cli
fst
xor
frstor
push
xor
sti
cmc
sahf
push
add
sub
sbb
test
rcr
jb
sub
dec
pusha
repz
sbb
arpl
cld
jb
(bad)
push
sbb
pop
mov
dec
dec
hlt
xor
inc
jnp
int3
mov
sub
loop
mov
xor
push
inc
and
push
dec
xlat
cmp
test
rep
in
scas
or
xor
inc
xor
jmp
fistp
mov
aaa
call
xchg
or
sahf
inc
outs
sub
jb
pop
daa
(bad)
in
test
add
jl
scas
fs
sbb
jecxz
inc
sbb
sahf
adc
in
call
and
int
mov
call
dec
pop
bound
neg
jle
(bad)
mov
and
pop
fs
rcl
(bad)
bound
or
jae
mov
(bad)
arpl
push
test
adc
xchg
adc
shl
add
mov
into
jo
fild
pop
mov
sub
add
or
shl
sahf
movs
stos
xor
push
pop
jg
or
sub
mov
cmp
mov
push
or
repnz
out
jbe
xor
add
xchg
fwait
lock
out
push
or
leave
dec
mov
test
test
cmps
pop
test
fcomip
adc
jae
(bad)
cld
push
mov
sub
adc
aam
mov
push
dec
fimul
in
add
dec
dec
or
hlt
mov
hlt
jl
test
daa
jecxz
ret
mov
inc
lea
int
movs
jbe
pushf
jmp
ret
(bad)
xor
jmp
sub
sbb
sbb
mov
pop
arpl
sub
test
sbb
or
mov
es
fnsave
ins
lock
mov
or
fs
jns
xchg
into
cdq
push
rep
iret
(bad)
push
push
or
pop
inc
jne
stc
imul
enter
inc
aad
imul
add
cmp
cmp
dec
jbe
and
shr
or
rol
rcr
adc
loope
retf
dec
(bad)
rcl
movs
and
lahf
mov
loopne
cmc
pop
nop
mov
xor
push
mov
xor
xchg
cli
sti
push
xchg
or
dec
fisubr
mov
clc
mov
rdtsc
sub
xchg
cmp
mov
in
rol
dec
dec
mov
in
sti
(bad)
in
(bad)
iret
lea
call
xor
xlat
in
adc
jl
mov
mov
imul
aas
jo
dec
out
pop
sub
adc
iret
mov
stc
cmp
rcr
dec
retf
push
lahf
js
mov
movs
lods
sub
bound
and
mov
jle
test
mov
xchg
jge
fist
leave
sti
mov
ins
pop
scas
xchg
pop
adc
sbb
jmp
add
sbb
dec
pop
sbb
inc
fwait
dec
jp
or
sub
dec
push
mov
adc
mov
cmps
sar
fisubr
pop
jle
sbb
sbb
dec
sub
mov
mov
movs
lods
dec
shr
jnp
test
pop
cmc
ds
mov
call
or
je
add
ret
push
(bad)
jle
jge
call
lods
retf
lods
mov
lods
data16
mov
jmp
stos
mov
jmp
and
mov
aam
cmp
inc
imul
mov
int
ffreep
inc
(bad)
sbb
sub
xor
ror
out
imul
and
lahf
cli
fsub
xchg
in
mov
jnp
jbe
jecxz
mov
int
and
scas
rcr
sub
xor
ins
sub
mov
fimul
or
pop
loope
cmc
xor
jmp
js
add
dec
and
jae
inc
pop
sbb
(bad)
cmp
lahf
pop
add
jle
leave
push
sbb
test
mov
outs
jb
in
mov
sub
dec
out
push
clc
push
add
sbb
xchg
stos
outs
push
(bad)
neg
sub
gs
and
add
lahf
adc
nop
xor
cmp
test
mov
and
inc
rol
mov
mov
rol
cmc
pop
mov
dec
icebp
in
dec
shr
lock
scas
cmp
jmp
mov
iret
loop
cmp
dec
pop
mov
jmp
and
mov
int3
xor
sbb
cmp
mov
mov
fld
sar
jmp
cld
mov
or
dec
sahf
pusha
mov
push
pop
cmc
jl
mov
dec
aam
stc
add
xor
leave
sbb
adc
push
xchg
aad
daa
fadd
je
movs
or
neg
sbb
mov
push
add
retf
pop
neg
xchg
and
and
fld
test
xchg
pusha
xor
(bad)
jmp
fisub
sbb
out
ja
mov
cli
push
cmp
cmp
fidivr
jle
stos
in
cli
adc
mov
std
dec
jecxz
bound
jmp
adc
pop
push
mov
and
sbb
call
cli
xchg
and
xchg
scas
sahf
loop
xchg
dec
push
(bad)
aam
(bad)
cmp
cs
cmps
mov
das
mov
std
push
sbb
loope
sub
leave
adc
mov
inc
pop
data16
pop
mov
mov
xchg
call
mov
sar
cdq
stc
int3
mov
aad
xor
nop
xchg
retf
xchg
pop
push
adc
(bad)
popf
movs
les
lds
cli
(bad)
mov
(bad)
mov
cdq
aaa
retf
pop
inc
xor
cmc
xchg
(bad)
sti
add
data16
sub
pop
sub
jl
popf
push
dec
xchg
test
xor
push
lods
mov
xchg
cmp
inc
neg
mov
add
fld
into
imul
xchg
arpl
ds
fwait
std
popf
pop
inc
movs
jmp
dec
arpl
jmp
dec
fst
lods
adc
mov
leave
xor
push
pop
push
push
ins
mov
ds
push
dec
ret
jne
retf
daa
xchg
add
cmp
xchg
xor
jns
mov
addr16
xor
das
(bad)
(bad)
xor
sbb
xchg
ret
(bad)
icebp
iret
scas
out
xlat
push
mov
pop
sbb
mov
out
imul
stos
stos
mov
adc
adc
fbld
add
xchg
push
enter
outs
sti
movups
mov
mov
and
jge
into
int3
xor
adc
xchg
movs
cmps
stc
pop
lea
xchg
pop
(bad)
push
not
mov
test
push
jg
xchg
rol
adc
loopne
xchg
xchg
sbb
xchg
pop
imul
(bad)
mov
fs
pop
fisub
imul
dec
xchg
and
or
mov
sub
int
test
cwde
jno
sahf
ins
out
pop
les
push
out
call
cwde
and
mov
cld
inc
mov
pushf
out
int3
push
inc
mov
fisub
stos
adc
xchg
push
adc
xchg
inc
inc
sub
push
mov
std
mov
stc
xor
jns
int
and
jmp
mov
inc
jle
dec
push
iret
add
dec
scas
mov
scas
xchg
pushf
cmc
and
mov
out
and
sbb
adc
mov
imul
lea
test
push
cmp
pop
mov
xchg
js
mov
popa
jne
rcl
fs
mov
lock
push
jo
mov
mov
ins
lods
mov
xor
mov
or
push
clc
hlt
adc
(bad)
outs
or
ret
aaa
(bad)
popf
lock
popf
sbb
add
scas
or
xor
iret
cwde
arpl
cs
outs
cmp
jo
test
inc
mov
outs
jb
mov
test
add
test
or
aad
stos
cmps
ds
lods
xchg
mov
push
arpl
fcmovbe
mov
retf
adc
cmp
test
push
mov
mov
fcom
stos
add
jg
sbb
mov
test
or
dec
(bad)
jg
mov
out
out
mov
int
mov
idiv
call
inc
mov
lock
sub
jg
sbb
(bad)
sbb
lahf
inc
push
imul
adc
dec
mov
(bad)
iret
or
cmp
jmp
imul
lock
jne
out
xor
mov
jnp
cs
mov
retf
dec
push
call
inc
data16
mov
mov
jb
mov
imul
icebp
sahf
fstp
dec
sbb
bound
dec
vmovdqu
int3
iret
adc
xchg
mov
call
mov
gs
fs
jecxz
in
call
ins
ins
xchg
sub
(bad)
jge
scas
std
push
mov
stc
inc
push
lods
arpl
add
fistp
shr
push
inc
push
push
xor
popf
int
add
and
sub
pop
push
and
lea
rcr
xor
add
outs
fisub
add
sbb
ins
mov
xor
movs
adc
adc
enter
xor
mov
ret
je
out
jno
iret
pushf
sbb
mov
dec
xor
and
js
xchg
(bad)
pop
dec
inc
adc
out
pop
fs
mov
(bad)
mov
(bad)
lock
adc
adc
out
push
cdq
mov
aas
mov
adc
xchg
fld
call
adc
sub
popf
and
jmp
popa
add
inc
inc
push
bound
jae
jb
int
pusha
cmp
and
cmp
push
add
pop
xchg
pop
fstp
xor
push
stos
push
jb
fadd
sahf
ret
and
leave
or
adc
push
test
mov
ret
adc
xchg
fwait
jne
loopne
sbb
cmp
push
enter
sub
fs
inc
loop
cdq
sub
loopne
adc
jns
test
cli
cmp
ins
mov
bound
jo
jnp
scas
jnp
xchg
or
mov
push
aaa
movs
pop
imul
pop
pushf
rol
mov
rcl
fwait
addr16
mov
xchg
xlat
inc
call
inc
mov
jg
fsubr
ror
dec
xchg
mov
outs
dec
lods
neg
inc
dec
or
dec
xchg
cld
nop
cli
add
fldenv
or
mov
js
imul
xchg
lods
xchg
loop
mov
cmp
(bad)
rcr
dec
mov
shl
cmps
test
dec
pop
and
cvtdq2ps
mov
imul
jge
ret
popf
mov
xor
jle
cmps
cli
pushf
push
enter
xchg
into
lods
shr
or
add
xchg
xchg
mov
mov
rcl
mov
ret
out
mov
pop
adc
fs
nop
pop
neg
sbb
jmp
xchg
mov
test
jg
mov
xchg
rcl
imul
jl
mov
stos
add
je
mov
cli
in
shl
lock
xor
mov
jg
into
repnz
mov
fdiv
cmp
mov
sbb
inc
retf
(bad)
push
mov
ins
(bad)
rcr
mov
jb
inc
pushf
js
jno
mul
fstp
fsub
dec
jb
lods
stos
stos
xchg
sbb
xor
sub
inc
in
fiadd
mov
aad
clc
xlat
fst
jmp
mov
ja
cmc
add
push
mov
aad
cmp
inc
add
mov
movs
loopne
neg
cs
jmp
enter
add
mov
mov
sbb
pop
in
sbb
out
retf
test
inc
mov
push
mov
fidiv
ja
lods
fwait
xor
popf
shl
cmp
xor
push
arpl
sbb
clc
mov
sahf
jmp
shl
xor
mov
sbb
sub
js
cwde
adc
not
jmp
adc
mov
push
sub
das
sbb
int3
or
push
repnz
sbb
outs
stc
cvttps2pi
mov
scas
mov
inc
loope
ja
mov
xor
je
mov
loopne
jae
push
shl
mov
hlt
mov
jmp
xchg
adc
adc
jno
jl
ror
ss
and
mov
ret
or
(bad)
cli
mov
and
mov
xor
mov
mov
sti
dec
iret
rcl
and
ds
fcomp
sbb
or
jp
repnz
sub
dec
lahf
pusha
movs
(bad)
(bad)
cmp
xchg
and
loop
and
inc
movs
shl
aad
in
push
in
lods
and
es
ins
pushf
cmp
xchg
dec
adc
fidivr
xchg
push
lods
rol
enter
ficomp
scas
popw
push
out
cmp
fld
out
mov
push
loope
push
pop
push
aad
mov
mov
call
iret
jnp
add
inc
fwait
into
push
das
pop
push
sub
jno
(bad)
shl
jmp
scas
jae
mov
xor
add
lock
jmp
cmc
and
es
loopne
jmp
jne
arpl
push
or
mov
dec
test
sbb
and
add
lds
call
aas
fnstsw
sub
cmps
adc
bound
enter
rcr
push
lock
jg
cwde
xor
jb
sbb
es
dec
fnstcw
jecxz
inc
add
jno
popf
pop
xchg
ja
sub
dec
aad
xor
arpl
call
mov
(bad)
icebp
adc
mov
push
aad
sbb
repnz
jg
mov
sbb
rcl
mov
mov
push
je
(bad)
fsubr
mov
(bad)
push
bswap
aam
mov
push
test
loop
push
and
popa
mov
mov
imul
dec
pop
pop
lahf
fidivr
adc
xor
in
sbb
xlat
or
push
loope
loope
enter
cmps
mov
push
(bad)
fild
fsubp
add
mov
arpl
div
sbb
popa
imul
jmp
jnp
loopne
push
les
stos
rcr
dec
jp
or
cmp
loop
adc
xchg
ins
xor
mov
push
push
ror
cld
and
cmp
push
push
sub
inc
jl
adc
mov
dec
lods
xchg
lds
inc
push
movs
ins
je
add
and
ror
in
jmp
lds
xor
ins
call
mov
xchg
mov
inc
lock
xor
xchg
test
scas
push
cmp
cld
data16
mov
pop
add
jbe
or
fisub
in
(bad)
mov
leave
ins
aam
fwait
adc
test
jno
and
xchg
lods
adc
sbb
out
lods
or
push
add
imul
test
inc
mov
mov
cmps
add
push
(bad)
cmp
pusha
(bad)
imul
mov
or
sbb
ret
pop
test
out
movs
enter
das
mov
ret
jb
xchg
(bad)
aam
mov
mov
cld
xchg
mov
jg
retf
dec
pop
popf
mov
enter
(bad)
adc
inc
out
scas
(bad)
fld
test
adc
retf
stc
stos
test
or
sub
jmp
or
cli
mov
jo
mov
inc
pop
sbb
mov
lds
(bad)
cwde
daa
rol
xlat
or
push
cmc
inc
lods
jo
jp
in
push
ja
mov
mov
and
test
cmp
(bad)
mov
das
cdq
add
or
stos
mov
sbb
clc
push
xchg
test
(bad)
jmp
or
in
jle
jmp
xor
rol
xchg
add
sbb
inc
mov
dec
sti
jmp
retf
or
jns
and
hlt
sti
mov
inc
vcvtdq2pd
es
das
jecxz
jge
mov
xchg
lock
sub
jbe
ins
or
loopne
ss
adc
dec
data16
mov
pop
inc
jl
loop
repz
fisub
outs
mov
xor
pop
sbb
fwait
icebp
jle
cs
dec
sbb
clc
push
js
aam
push
loope
inc
ja
jo
movs
lahf
jo
jp
or
mov
das
and
nop
rcr
mov
adc
mov
aad
in
push
loope
mov
pop
adc
pop
ss
dec
loope
push
jle
mov
jmp
out
xchg
jne
jnp
pop
pop
mov
movs
push
das
neg
ss
es
gs
fistp
sub
int3
int
shl
ret
lds
pop
cdq
jle
in
mov
ret
iret
push
stos
inc
push
neg
outs
rcl
pusha
push
xor
(bad)
stos
repnz
ss
dec
and
push
mov
repnz
dec
cmp
aad
mov
fcmovne
nop
das
in
mov
xchg
jne
ss
bound
loop
sti
dec
xor
int
inc
rcl
cmp
add
mov
dec
pop
xchg
out
sub
pop
xchg
cmovne
int3
or
mov
adc
push
push
xor
push
dec
loope
dec
shl
cmp
and
in
adc
adc
cmp
fsubp
(bad)
inc
push
push
rcpps
pop
int
movs
daa
ins
aaa
mov
fistp
fadd
inc
gs
pop
push
pop
push
or
jae
cmps
mov
jne
dec
ret
call
stos
call
outs
or
and
ret
fwait
sub
and
mov
mov
(bad)
arpl
jbe
xor
dec
cld
addr16
sbb
adc
xlat
inc
add
xchg
push
mov
mov
fs
sub
lahf
pop
push
sub
test
jmp
mov
cmp
das
inc
adc
repz
repnz
movs
sbb
sub
add
jae
adc
adc
or
call
adc
inc
rcl
dec
or
push
push
pop
test
pop
cmps
jo
inc
cli
ret
pop
(bad)
pop
or
outs
push
daa
xchg
repz
push
repnz
rcl
mov
cmp
sbb
and
jmp
mov
jmp
cmc
sub
cmp
mov
ror
ror
mov
ret
iret
mov
retf
(bad)
ret
les
add
jmp
in
(bad)
or
push
mov
in
stos
pop
or
test
xor
movs
mov
push
or
dec
test
mov
scas
cli
mov
adc
add
mov
or
fisubr
mov
jnp
and
mov
mov
pop
ss
in
pop
or
(bad)
and
push
xchg
popa
and
aam
mov
push
jmp
cmps
dec
repnz
fisttp
fbld
stos
stc
push
es
sbb
inc
cmp
ror
jo
aad
rcl
iret
data16
and
push
xchg
add
mov
sub
gs
adc
xor
mov
jl
fnstsw
call
cdq
mov
lods
psubsb
dec
inc
cli
fmulp
inc
fsubr
pop
pop
nop
or
sbb
or
(bad)
js
pop
xchg
call
sub
rol
out
sbb
loop
mov
sbb
xor
pop
pop
add
inc
ins
jg
mov
aad
pop
fisttp
(bad)
pop
pop
jmp
pushf
fs
push
ds
cmc
mov
or
jnp
push
popa
cmp
ror
out
mov
cmp
sete
inc
in
mov
xchg
push
lock
jnp
data16
mov
clc
pop
sbb
push
inc
icebp
sbb
mov
gs
cmp
call
xor
in
scas
push
cdq
pop
and
adc
leave
test
shl
mov
nop
jle
test
xchg
jns
jns
inc
jecxz
jbe
add
movs
out
cmp
imul
xchg
xchg
xchg
push
cli
sub
out
retf
xlat
js
adc
cmp
and
(bad)
xor
lods
push
stos
mov
inc
test
lock
adc
mov
ret
sar
ror
mov
inc
dec
jo
xor
pop
jge
stc
xchg
loop
inc
xchg
sub
in
jl
pop
jle
int3
push
jp
ficomp
and
ins
das
pop
push
push
inc
or
xchg
ffreep
add
push
push
mov
(bad)
test
cmps
loop
pop
repz
pop
(bad)
retf
sub
xchg
mov
aam
shl
and
pop
pop
mov
inc
and
push
scas
cmp
test
clc
imul
sub
pop
les
out
fld
out
stc
and
movs
xor
gs
jp
inc
ja
adc
push
fstp
mov
mov
scas
push
sub
jle
inc
and
inc
mov
ss
add
clc
mov
cli
mov
movs
add
das
cdq
aas
scas
inc
fwait
cwde
push
nop
mov
rol
std
(bad)
and
sub
in
inc
test
jo
cld
retf
test
(bad)
lods
sbb
xchg
sub
mov
inc
shl
lea
(bad)
jns
retf
ins
addr16
mov
scas
lods
mov
scas
sbb
mov
and
jmp
fistp
gs
addr16
push
jbe
dec
pop
ficom
mov
adc
mov
in
fimul
lahf
push
adc
int
add
sbb
pop
sbb
sbb
dec
or
outs
addr16
xor
imul
aas
mov
das
pop
jb
push
inc
dec
mov
inc
add
into
mov
ret
shr
push
add
stos
aam
popf
popa
in
imul
xchg
mov
push
aaa
mov
jle
push
mov
jae
dec
jp
pop
daa
mov
xchg
dec
pop
leave
xor
repz
retf
fs
or
adc
test
cmp
cmp
mov
in
out
shl
cdq
push
(bad)
xchg
jmp
xor
aad
push
or
add
test
xor
or
pusha
stos
test
inc
mov
call
gs
aam
dec
imul
cmp
iret
lock
or
pmulhw
hlt
push
nop
scas
xchg
mov
fwait
mov
add
jp
xchg
jecxz
cdq
je
jg
out
xor
sub
or
pop
je
sub
mov
dec
xchg
int3
or
test
js
push
jmp
xchg
iret
adc
cdq
and
adc
xor
mov
jle
scas
out
lahf
cmp
inc
out
inc
jno
fs
fidivr
jg
inc
adc
cmps
sar
dec
jl
ss
mov
pop
cmps
sbb
sbb
mov
repnz
fs
ror
ins
fmul
xchg
cmps
inc
loop
and
lods
cwde
xor
daa
pop
sbb
mov
pop
sub
pop
jo
mov
fst
jae
outs
jg
pushf
loopne
cs
mov
movs
pushf
pop
cmp
dec
aad
sub
xchg
adc
pop
inc
fwait
mov
xor
push
adc
xor
xchg
fs
sbb
cmps
cmc
mov
les
stos
mov
(bad)
out
shl
pushf
ss
dec
sub
mov
jnp
jg
push
sub
fstp
neg
push
lods
int
and
loopne
not
cmp
sub
ror
mov
dec
gs
and
adc
pop
jns
xchg
js
addr16
xchg
mov
lods
imul
rol
xor
pop
enter
lods
pop
dec
jne
add
dec
out
retf
or
pop
cs
mov
adc
in
or
jnp
mov
sbb
adc
add
rcr
or
in
and
sub
les
in
stc
xchg
push
pop
int
lods
inc
test
add
loope
arpl
inc
fwait
push
dec
repz
dec
and
mov
pop
pop
sub
lock
push
mov
dec
gs
sbb
mov
pop
dec
xor
loope
cmps
retf
inc
cmp
arpl
and
jg
mov
sub
push
jae
out
jo
mov
ja
mov
enter
xchg
sbb
shr
mov
sti
cmp
sbb
jno
sub
add
movs
scas
out
mov
iret
(bad)
je
pop
mov
sbb
pop
lods
hlt
out
mov
sbb
nop
int3
aas
lock
movs
xor
mov
dec
and
mov
sbb
test
pop
jne
sub
sub
sbb
jns
and
or
cwde
mov
pop
(bad)
rol
pop
pop
cmc
cwde
xchg
call
mov
adc
aas
loope
adc
dec
push
cs
and
popa
cmp
push
jo
shr
ret
icebp
ds
leave
push
xor
mov
jge
sub
adc
rcr
je
loope
cmp
jae
xchg
xlat
mov
lea
daa
scas
add
or
cwde
test
iret
sbb
retf
ins
jle
ds
into
stos
pop
jp
test
mov
push
cmp
movaps
stos
pop
fidivr
xchg
dec
in
ficomp
not
dec
mov
xchg
or
push
lea
out
and
jp
push
pop
jmp
mov
jne
jno
cld
fs
out
lea
gs
imul
lea
adc
ins
cs
mov
add
js
cmp
jle
gs
cli
not
adc
mov
adc
ins
lock
sahf
addr16
cld
cmps
mov
hlt
in
push
mov
cmps
xor
jmp
sbb
xchg
call
movs
push
jmp
push
xchg
cmps
aad
xlat
cmps
mov
into
in
and
lods
or
xor
icebp
std
xor
pop
dec
jnp
xchg
imul
fild
dec
jno
push
xlat
mov
mov
fs
std
movs
ss
mov
pop
retf
cmp
adc
in
jb
int
repnz
out
jb
push
loop
lahf
cmp
int3
cmps
add
stos
sub
push
les
adc
nop
fdiv
setp
scas
xchg
adc
jg
dec
fld
cwde
dec
push
ins
(bad)
sub
ds
int3
ja
adc
xchg
xchg
jmp
xor
add
cmp
jle
fsub
xor
jge
icebp
pop
in
or
ficomp
xchg
pop
sub
sahf
xor
xchg
stos
int3
out
mov
mov
mov
call
xchg
xor
push
adc
(bad)
data16
push
jne
repz
outs
push
mov
sub
pop
pop
call
imul
xchg
popf
ds
cld
jns
and
sub
jne
les
in
add
jb
(bad)
sbb
or
(bad)
and
push
aaa
cmp
imul
stc
outs
pop
xchg
mov
enter
call
mov
(bad)
(bad)
(bad)
stos
or
lods
dec
cwde
test
dec
addr16
repnz
push
push
push
add
cmp
and
cdq
cmp
or
push
pop
pop
stos
jb
arpl
inc
sub
ins
loop
loope
hlt
jmp
ss
es
lea
push
mov
jno
pop
add
(bad)
mov
mov
fmul
and
add
ror
loopne
mov
and
es
push
movs
dec
pop
push
movs
ja
and
cmp
pop
mov
fnsave
adc
mov
mov
inc
and
inc
sub
mov
jno
mov
jle
lods
sbb
mov
xchg
fs
in
dec
(bad)
xor
icebp
sbb
ret
fs
sbb
out
xchg
dec
sub
sub
jmp
push
(bad)
xchg
lock
add
sub
xor
sbb
inc
mov
ret
cmp
xchg
out
inc
hlt
push
push
(bad)
xor
dec
bound
(bad)
popa
jns
mov
jae
sbb
push
adc
xchg
rcr
(bad)
mov
dec
add
jnp
aad
int3
sbb
ret
ret
jmp
leave
das
ss
aam
outs
cmps
add
cmc
lds
imul
idiv
in
int3
(bad)
sub
jo
repnz
rol
ins
repz
cwde
scas
push
(bad)
test
aas
cld
jno
push
xlat
mov
popf
into
adc
jae
inc
add
lea
mov
popf
bound
cwde
xchg
fnsave
cmp
inc
sar
pop
fstp
xor
fbstp
cld
xchg
mov
mov
xor
push
jae
add
xor
rcr
into
mov
mov
inc
arpl
and
sbb
jmp
in
xchg
adc
fmul
rol
cmps
cmps
push
cmp
(bad)
push
jg
in
xchg
outs
jmp
xor
aad
mov
jle
sbb
(bad)
mul
jp
xor
push
mov
out
sub
sub
mov
loop
mov
sub
pop
outs
das
cmp
movs
mov
lds
popa
xchg
cdq
dec
and
jge
or
int3
jg
dec
hlt
repnz
fdiv
cmp
mov
cmp
sub
jl
cli
sar
mov
int
inc
call
dec
out
mov
adc
cmp
push
iret
pop
ja
dec
adc
and
jbe
sbb
rcr
adc
adc
addr16
in
das
jbe
xchg
stos
xor
adc
mov
inc
sbb
iret
test
outs
test
xor
pop
mov
push
xor
mov
stc
xor
test
dec
arpl
in
jnp
aaa
clc
and
push
mov
xor
out
xor
jp
nop
scas
test
dec
push
cmp
dec
pop
dec
sbb
out
int
push
lods
xor
jne
ret
repnz
and
push
jecxz
mov
pushf
fmul
push
inc
daa
sub
and
jno
out
jmp
jmp
mov
aam
lock
mov
jle
pop
call
lea
and
ret
fwait
mov
xchg
enter
xor
ret
inc
xor
mov
xor
jmp
sub
push
(bad)
xchg
sbb
cmp
into
aam
push
pop
inc
dec
mov
and
adc
mov
test
pop
pushf
jl
dec
push
out
ror
pop
xor
repz
dec
cmp
jecxz
add
adc
aad
out
or
xor
xchg
or
add
cld
add
fbstp
popf
cmpxchg
mov
dec
sbb
adc
nop
ja
inc
in
enter
mov
mov
lock
bnd
mov
fnstenv
icebp
inc
aas
shr
cmp
inc
out
sub
mov
shl
test
adc
addr16
pop
retf
adc
je
ins
or
adc
mov
xor
push
mov
inc
mov
jnp
sahf
leave
lock
in
and
add
push
push
mov
sbb
sti
cmps
pop
sub
jmp
or
ja
xor
stos
jp
fisubr
jmp
dec
mov
mov
sbb
ins
xchg
fadd
into
mov
push
out
test
mov
icebp
or
jmp
mov
outs
jecxz
adc
mov
add
mov
xor
or
xor
popa
std
loopne
xchg
pusha
push
out
pop
mov
push
adc
and
mov
std
icebp
test
into
mov
adc
cmp
test
mov
xor
pop
cmp
lods
push
dec
mov
repz
(bad)
push
pushf
ja
loopne
push
push
arpl
andps
jo
(bad)
mov
jae
xchg
pusha
clc
xor
mov
xor
fistp
jb
xchg
pop
test
fldcw
cmc
scas
out
and
(bad)
out
push
je
(bad)
fsub
sub
push
cmp
(bad)
jmp
mov
sbb
std
sbb
out
push
lahf
jae
sub
sub
add
jmp
fsub
dec
or
dec
xlat
es
jmp
aaa
inc
(bad)
cmp
call
rcpps
or
xlat
cdq
xchg
sbb
add
fisub
or
out
in
sub
cmp
cmp
mov
call
pop
xchg
push
enter
pop
mov
fidivr
(bad)
aad
sti
ret
push
jecxz
pop
test
mov
daa
jnp
ret
dec
mov
dec
sbb
inc
mov
xor
leave
sub
(bad)
mov
cld
push
jecxz
into
push
jmp
push
mov
or
or
inc
in
in
jo
pop
xchg
add
push
sbb
mov
or
leave
popf
and
xchg
push
das
mov
sbb
jne
outs
cmc
addr16
movs
pop
shl
pop
mov
xor
or
nop
push
scas
out
retf
(bad)
push
xchg
mov
mov
les
jmp
mov
jno
(bad)
cwde
dec
pushf
and
cs
push
mov
jnp
inc
jnp
or
inc
out
rcr
sub
inc
pop
pop
neg
xchg
and
ins
xor
jb
mov
jno
jmp
ret
inc
nop
neg
fwait
fs
mov
push
mov
adc
ss
pop
arpl
add
jae
xor
scas
xchg
and
movs
ss
inc
ss
retf
fs
cld
(bad)
(bad)
fisttp
(bad)
bound
adc
rol
and
outs
int
mov
jae
cmp
add
sbb
push
jae
popf
pop
pusha
mov
(bad)
inc
and
ss
icebp
ror
mov
xor
jmp
jl
inc
stc
push
xor
pop
sub
cmp
in
cmp
push
jns
sub
mov
movs
out
sbb
mov
jns
adc
iret
repz
ror
ins
fs
sbb
std
(bad)
enter
nop
dec
sub
fimul
mov
mov
call
fs
mov
sub
bound
inc
lea
adc
sub
xchg
xlat
push
xchg
push
xchg
push
jmp
les
and
stos
mov
jnp
retf
jo
setns
push
dec
mov
aam
repnz
sbb
pop
sub
xchg
retf
jae
cdq
cs
and
retf
cmp
sub
mov
push
test
(bad)
out
add
pop
pop
mov
sysenter
adc
dec
xor
mov
add
adc
jg
add
pop
ja
and
stc
fsubr
(bad)
cmp
das
daa
or
ret
cmc
(bad)
jo
test
pop
js
stos
ins
xor
mov
stos
push
in
lahf
add
imul
or
fsub
mov
cwde
push
push
ret
stos
push
push
cmc
push
jl
cmp
mov
jo
movs
icebp
fwait
out
mov
repz
loop
aaa
(bad)
pop
sbb
sub
push
xchg
cmp
stos
fbld
cmc
(bad)
enter
cmp
push
and
adc
sub
adc
adc
ins
and
ror
add
call
add
mov
pop
aam
nop
jb
shl
xor
or
mov
retf
dec
mov
in
mov
frstor
xchg
(bad)
fdivrp
pop
call
fld
aaa
or
pop
fiadd
pop
xlat
xchg
and
movs
in
std
dec
inc
jbe
dec
mov
je
repnz
cmp
xor
xchg
fwait
lds
pop
in
adc
mov
test
add
rcr
imul
dec
xchg
movs
gs
mov
ret
cmps
(bad)
popf
mov
xchg
test
mov
or
cdq
add
inc
(bad)
stos
scas
rcr
add
jb
mov
stc
sub
push
fnstenv
popa
dec
adc
aaa
ret
cmps
jne
add
sbb
pop
ret
jns
mov
sub
cld
xchg
in
int
iret
push
test
inc
lods
xor
push
cmc
test
in
(bad)
push
jmp
addr16
adc
pop
scas
inc
jg
push
dec
push
adc
cmc
inc
and
idiv
repnz
jne
mul
ins
movs
xchg
mov
pop
addr16
daa
inc
daa
jbe
inc
fsub
retf
pop
mov
and
dec
scas
mov
fbstp
pop
pop
push
rcl
mov
fldcw
(bad)
sti
sbb
pop
cmp
ins
pusha
fstp
xor
xchg
xor
ficom
sbb
arpl
sub
pop
aam
dec
test
mov
sub
idiv
xchg
cld
and
(bad)
movs
cmc
or
dec
sub
jl
push
pop
sbb
callw
push
movs
ds
clc
mov
mov
mov
xchg
ret
in
cmp
mov
es
mov
cli
jecxz
mov
imul
neg
enter
xchg
fisubr
dec
sbb
pop
fisttp
stos
fucomp
adc
and
std
inc
xchg
pop
into
mov
cmc
xor
jle
aad
xor
sub
imul
pop
push
or
sbb
loopne
fisubr
lods
fmulp
jp
sbb
cmps
cdq
dec
aam
ins
mov
rcl
int
lods
sbb
popa
mov
pop
into
push
pop
pop
add
lods
mov
mov
outs
(bad)
xchg
ja
add
daa
adc
mov
mov
jbe
xchg
call
mov
cdq
inc
(bad)
pop
inc
in
xor
mov
ins
cmp
cmp
das
les
mul
adc
std
mov
and
mov
xor
and
loope
or
cmp
cmp
mov
popa
ins
xchg
shr
outs
(bad)
jmp
push
mov
icebp
jle
enter
xor
sbb
lods
call
test
mov
sti
shl
xor
jp
(bad)
clc
cmp
and
jmp
push
push
pop
int3
add
sub
fist
jp
sub
mov
sub
mov
push
sub
(bad)
pop
in
sahf
arpl
xlat
push
pop
test
push
(bad)
mov
inc
inc
push
mov
loopne
sub
aad
inc
sub
sub
xchg
push
mov
mov
imul
add
pop
out
adc
cli
or
push
and
xor
aam
push
cmp
push
cmp
adc
test
mov
pop
or
ret
push
mov
ret
pop
fmul
daa
mov
sahf
sbb
sbb
movs
test
je
rep
loopne
test
aaa
mov
pop
pop
push
xor
imul
hlt
ret
mov
adc
xchg
test
inc
ins
imul
aas
addr16
push
ss
fistp
hlt
cmp
rol
cmp
adc
jnp
and
popf
fbstp
jb
inc
cmps
out
pop
loope
cmc
push
mov
pop
pop
movs
(bad)
test
and
icebp
push
in
mov
jmp
add
call
ins
sub
sahf
retf
pop
adc
push
adc
ror
std
or
(bad)
xor
mov
sub
cmp
push
xchg
and
les
dec
mov
cmp
jge
mov
jnp
lods
leave
sub
and
adc
push
dec
int3
outs
jae
or
mov
add
and
out
and
pop
nop
cmps
xchg
enter
rcr
sub
pop
fst
(bad)
pop
(bad)
icebp
jp
pop
adc
fisubr
ja
sub
scas
dec
mov
and
(bad)
repnz
or
xchg
mov
xor
or
stc
sbb
mov
adc
push
sbb
pushf
pop
pop
sub
jne
aad
ror
mov
jae
cmp
or
sub
xor
aas
shr
mov
rcl
jo
sub
jne
loope
cmp
jbe
xchg
and
add
cmp
sti
xlat
jecxz
add
in
xor
push
mov
stos
movs
fisub
out
stos
mov
sub
call
test
mov
mov
mov
cmp
pop
out
jae
repnz
inc
sbb
xor
(bad)
cmc
stos
aam
jbe
out
stos
mov
xor
(bad)
mov
or
retf
pop
imul
cld
cdq
in
adc
lds
adc
(bad)
push
shl
pop
cmps
jmp
add
sqrtps
adc
aas
test
mov
out
jmp
mov
neg
xchg
iret
stos
pushf
aas
inc
sbb
inc
add
push
push
addr16
ror
inc
mov
and
mov
mov
lock
test
aad
lea
sbb
out
js
xor
sar
mov
sub
jmp
int
jbe
dec
sbb
xchg
and
jp
sbb
fnop
arpl
shl
mov
jmp
push
loope
pusha
inc
pop
jbe
sbb
ins
cld
scas
sbb
and
imul
or
out
int3
es
fistp
mov
xlat
aaa
movs
sub
sbb
fisubr
mov
adc
fcmovb
add
mov
cmp
loopne
pop
mov
sub
pop
(bad)
jae
test
pop
jp
mov
imul
mov
(bad)
fldcw
and
adc
jecxz
inc
jp
push
data16
jmp
xchg
fcmove
xor
or
pusha
rcl
shl
jae
cdq
mov
fld
jb
(bad)
out
aaa
js
xor
sbb
mov
test
mov
adc
inc
mov
jge
jb
gs
mov
push
xor
dec
xchg
mov
or
(bad)
push
xchg
in
cmp
mov
jno
add
mov
sub
add
cli
dec
push
iret
fnstcw
push
leave
js
stos
ja
mov
(bad)
sti
xor
neg
and
int3
stos
pop
cmps
cmp
ret
push
pop
xchg
stc
push
mov
cmp
fisttp
in
pop
xchg
std
out
jl
es
pop
rcr
and
fnstsw
jbe
add
rcr
add
ret
retf
pop
dec
in
rep
aaa
mov
inc
sbb
(bad)
mov
mov
in
sub
sub
(bad)
(bad)
jne
in
nop
daa
sub
fisub
dec
repz
jmp
aaa
dec
movs
scas
aam
mov
fistp
sahf
repnz
ftst
sub
dec
leave
dec
pushf
hlt
push
movd
(bad)
push
es
ret
or
fistp
(bad)
dec
mov
dec
(bad)
push
sub
fcompp
outs
cmp
and
scas
sub
les
add
(bad)
cmp
lds
stc
pop
daa
sahf
add
dec
xor
sar
js
xchg
adc
call
dec
xor
mov
sbb
mov
mov
pop
aaa
aaa
pop
jl
push
mov
pop
(bad)
mov
cmp
aaa
mov
pop
push
data16
in
ffree
dec
xchg
xchg
scas
mov
je
(bad)
in
lds
repnz
je
js
adc
loop
and
repz
pusha
inc
cdq
add
js
icebp
aad
stos
iret
mov
lods
or
xor
jnp
push
jge
jnp
mov
sub
fmul
stc
movs
pusha
sbb
push
adc
mov
adc
aas
loope
sti
xchg
test
movs
scas
sbb
inc
xchg
jge
push
add
movs
sub
adc
ds
xor
fcmovnu
sbb
mul
iret
out
ss
inc
les
mov
mov
mov
sti
ds
das
pop
test
ja
mov
or
or
(bad)
inc
dec
stos
mov
inc
scas
test
pop
xchg
aam
jge
inc
mov
jl
and
repnz
inc
jae
jp
mov
cli
lea
clc
push
jmp
and
or
mov
mov
add
add
fcom
cmp
outs
pop
jmp
and
(bad)
push
cmc
add
dec
xor
sahf
sub
test
lds
mov
scas
dec
jge
lods
test
inc
int
clc
mov
pop
enter
lock
sbb
and
sahf
retf
inc
mov
mov
dec
mov
or
mov
and
sub
sbb
mov
cmp
inc
inc
mov
out
in
and
cmp
xchg
xchg
out
std
int3
and
call
sahf
iret
popf
inc
xor
out
lods
fisttp
sub
mov
adc
xor
xchg
and
xchg
adc
outs
jle
ret
pushf
ss
movs
(bad)
les
fist
or
add
je
cmps
iret
daa
out
sub
mov
mov
xor
jns
mov
(bad)
mul
and
je
enter
pop
out
in
add
or
mov
push
jl
ins
ficomp
lods
jle
int
out
xor
dec
and
cmp
test
dec
loop
and
dec
test
adc
or
ins
data16
mov
cmps
mov
push
xchg
jmp
test
cwde
dec
jmp
retf
sbb
push
xchg
xor
hlt
xor
test
cwde
sahf
out
arpl
mov
jecxz
or
gs
or
jl
xchg
push
mov
inc
pop
aad
or
sub
sahf
movs
and
ins
or
movs
leave
dec
lods
pop
push
stc
jp
nop
scas
push
(bad)
fstp
xchg
cmp
jne
sbb
xchg
jecxz
xor
retf
sti
xor
dec
das
xchg
and
jge
ins
sbb
pushf
rcr
mov
inc
data16
xor
jmp
stos
hlt
pop
sar
mov
int
cmp
sub
mov
leave
jge
ror
cmp
in
cmps
call
imul
aaa
imul
adc
outs
sub
jnp
push
test
cmc
adc
sbb
sub
test
cmp
pop
dec
sbb
popf
inc
jb
push
inc
outs
test
xchg
xor
adc
call
movs
push
jb
jg
test
(bad)
sbb
mov
bswap
xor
cmp
jecxz
jmp
mov
call
sbb
nop
outs
push
cmp
je
sub
mov
pushf
mov
or
rol
jnp
pop
inc
inc
ins
sbb
inc
push
sbb
mov
push
fiadd
pop
mov
or
ja
inc
pop
jmp
push
outs
jecxz
mov
adc
loop
js
stos
dec
dec
adc
movs
inc
mov
jns
out
xlat
int3
lea
adc
icebp
clc
mov
sahf
mov
(bad)
test
jecxz
pushf
sbb
push
and
jo
(bad)
jmp
mov
rcr
mov
mov
sti
mov
adc
cmps
hlt
ins
push
pop
inc
and
outs
pushf
leave
add
scas
fs
pop
push
mov
(bad)
in
push
ja
and
in
jmp
shr
in
bound
scas
dec
das
xchg
cmc
push
jno
int3
inc
and
stc
jecxz
add
pop
dec
mov
mov
data16
sbb
or
sahf
and
push
clc
jmp
and
sub
sub
cmp
es
push
add
jp
lods
(bad)
xor
pop
stc
daa
adc
(bad)
imul
jae
dec
sti
jle
push
adc
adc
ins
outs
bound
fadd
movs
bound
cmpxchg
xor
icebp
into
adc
mov
inc
cmp
xlat
test
rcr
push
addr16
xchg
sahf
fsub
out
adc
(bad)
pop
mov
not
repnz
mov
nop
std
les
mov
ss
xor
clc
out
mov
inc
mov
mov
aas
std
pop
popa
sbb
mov
dec
cli
mov
int
popa
retf
out
cmp
adc
mov
xor
xor
test
adc
fld
test
xchg
outs
jge
xchg
pop
xor
inc
cmp
test
in
fisub
jbe
ins
enter
inc
test
xor
xor
rol
pop
jecxz
xchg
(bad)
mov
push
sbb
ret
shl
ror
lods
jmp
cwde
xchg
(bad)
mov
fbstp
dec
imul
aas
cmp
pop
jns
stos
ss
push
mov
cmps
fimul
xor
test
jns
cmp
push
pop
adc
test
ds
xchg
adc
mov
add
nop
ins
and
and
(bad)
cmp
cmp
arpl
dec
xor
idiv
imul
pop
push
xchg
(bad)
out
in
aas
gs
sti
fstp
sar
or
inc
mov
and
mov
fild
add
jl
mov
hlt
(bad)
imul
loopne
lods
shl
mov
test
or
push
daa
mov
mov
xor
out
ss
push
inc
addr16
or
test
ins
mov
lds
jmp
dec
jns
push
jl
push
mov
xor
mov
mov
out
mov
call
and
icebp
mov
shl
xor
sbb
in
xchg
add
and
xchg
mov
cmp
lds
lock
xchg
data16
scas
dec
mov
mov
sub
out
add
lods
aad
pop
cmp
mov
sar
jle
ss
or
inc
rol
dec
mov
push
jmp
jnp
lock
xchg
sar
mov
icebp
in
push
adc
xchg
cmp
sahf
inc
pop
(bad)
cmps
push
pop
xchg
jbe
inc
test
or
lods
pop
(bad)
fidivr
(bad)
popf
or
or
xchg
push
jne
and
(bad)
cmp
xor
test
push
xchg
lock
hlt
(bad)
fidivr
mov
mov
sahf
add
push
push
mov
pop
ret
call
jge
push
mov
ins
xchg
jge
adc
mov
sbb
xor
bound
js
mov
imul
(bad)
sbb
push
rol
pop
cmp
jae
sub
mov
pusha
push
mov
dec
xor
in
inc
adc
out
and
inc
pop
and
ja
les
iret
jns
sti
lock
outs
loop
jmp
push
xchg
ds
rcl
and
popa
xor
xor
rcr
pop
xor
pop
into
push
sbb
cmps
cmp
rcl
dec
add
mov
mov
sbb
mov
push
ja
dec
mov
inc
xor
xlat
jmp
les
push
push
xchg
sub
popf
adc
adc
dec
xchg
rol
mov
(bad)
out
sbb
(bad)
aad
jle
jg
xor
test
out
icebp
cli
and
dec
mov
cmp
int3
test
dec
xchg
xchg
int3
dec
out
mov
fidivr
xbegin
push
mov
cmp
jle
pusha
(bad)
sub
jb
mov
repz
xchg
jb
or
add
sub
stos
push
fwait
and
scas
call
bound
push
ret
dec
int
into
pusha
jb
cld
jg
fiadd
sbb
adc
data16
push
jnp
pop
mov
fist
sti
push
jle
mov
mov
xor
je
sti
in
xchg
or
lods
jne
shl
xor
ret
pop
data16
or
jno
mov
or
or
cmp
mov
mov
fisub
mov
xchg
add
dec
pusha
add
bound
shl
int
sahf
ja
js
fst
mov
cmps
jnp
in
ret
sub
das
fwait
lods
mov
jb
jle
jecxz
cli
cmps
test
retf
pop
xor
sbb
or
sub
retf
data16
dec
fiadd
shl
adc
in
das
xchg
imul
and
rcl
cwde
xchg
adc
xor
xchg
iret
xor
push
jl
dec
dec
fild
and
mov
dec
ja
pusha
sub
aaa
test
mov
push
xchg
aam
cmp
(bad)
pop
ss
retf
scas
movs
dec
jmp
lods
xchg
dec
test
scas
or
sbb
or
mov
and
sbb
lods
sub
sbb
dec
and
adc
inc
lock
sbb
fadd
sbb
pop
pusha
push
aaa
mov
test
das
(bad)
pop
xchg
inc
mov
add
test
(bad)
add
cmp
xchg
dec
mov
jge
xor
or
popf
sub
mov
mov
ror
test
xchg
xor
dec
je
ds
fsubr
mov
pop
in
pop
add
leave
sub
icebp
jmp
xchg
cld
jae
and
cli
aam
xchg
cmp
mov
xor
lahf
das
adc
int3
in
push
mov
jle
test
mov
mov
push
mov
xchg
push
mov
pop
and
test
dec
sbb
ins
cdq
dec
dec
hlt
out
nop
or
xchg
(bad)
(bad)
pop
dec
test
in
pop
mov
sbb
add
and
aad
lods
cmc
pop
outs
cmp
data16
xor
adc
xchg
and
stos
fs
mov
cmp
(bad)
bswap
(bad)
jge
imul
pop
add
and
shl
push
pop
or
lods
test
dec
iret
mov
nop
repz
cmp
movs
push
mov
(bad)
retf
jl
sub
(bad)
xor
push
jb
adc
repnz
out
sbb
(bad)
xchg
sub
jne
jae
cmps
aas
and
mov
shr
int3
mov
sbb
xlat
fist
stos
inc
frstor
loopne
mul
outs
sbb
add
out
mov
(bad)
sub
inc
out
sbb
es
push
xor
inc
and
cwde
cwde
adc
pop
outs
mov
mov
xchg
xchg
cmp
stos
addr16
into
jl
jb
pop
pop
les
push
mov
in
les
mov
push
lods
add
push
out
xor
sahf
nop
(bad)
out
pop
mov
mov
out
xor
les
jecxz
or
out
push
pop
xor
movs
sub
adc
and
in
xor
ja
xchg
push
jmp
out
call
and
add
or
test
movs
out
scas
push
fistp
push
out
mov
lock
push
pop
ja
adc
mov
jns
sbb
mov
cmp
jae
xchg
out
jbe
lods
xor
fld
aaa
xlat
pop
push
aad
out
ror
adc
into
shl
into
xchg
jb
mov
in
dec
lea
pusha
ins
and
xor
stos
xor
in
push
fidiv
pop
or
in
xchg
dec
push
xor
jle
xor
xor
std
dec
mov
js
dec
stos
sub
cmps
out
adc
sti
sub
bound
popf
mov
rcr
or
sub
movs
shr
mov
iret
cli
pop
mov
sub
and
or
xchg
mov
test
dec
cmps
(bad)
cmps
fwait
js
pop
out
and
adc
push
or
shl
lods
xchg
sar
jno
adc
adc
jmp
cmp
test
jno
jmp
loopne
add
mov
cmp
mov
or
out
aaa
add
call
xchg
sub
data16
mov
cdq
push
scas
pop
(bad)
fwait
add
icebp
ss
xchg
cmp
ss
sahf
mov
cmp
jns
retf
jb
jmp
pop
sti
jecxz
push
xor
cmp
cmp
ret
dec
xor
ret
mov
xor
fldcw
fld
jp
sbb
sub
push
aaa
lods
fdivr
daa
sti
fmul
out
je
icebp
sub
test
push
inc
(bad)
(bad)
fs
or
jle
mov
push
or
mov
call
fs
mov
cdq
pop
sbb
iret
jno
jbe
stos
call
sub
int
sbb
arpl
js
lods
ret
push
mov
sbb
cmp
sar
xor
ret
aad
mov
jmp
enter
nop
(bad)
pop
in
sub
test
data16
call
jg
mov
mov
int
icebp
inc
cmc
(bad)
pop
test
mov
out
pop
jle
popa
out
cmp
push
jp
aas
xchg
sub
addr16
pop
test
imul
sar
retf
shr
cwde
enter
or
mov
ror
stos
xor
aam
ficomp
dec
in
sbb
adc
aas
shr
shl
sbb
out
loope
lds
shl
ret
jmp
push
push
retf
mov
arpl
dec
xchg
add
lea
push
mov
jmp
push
mov
cli
pop
jo
dec
repnz
out
xchg
shl
loop
xchg
mov
dec
adc
fwait
shl
or
pop
sub
pop
cmps
outs
pushf
jo
mov
mov
cmp
mov
jmp
bound
fst
mov
xlat
(bad)
(bad)
out
sti
add
daa
icebp
jne
jmp
push
in
jp
pop
ins
movs
aas
xor
das
ror
mov
push
dec
pop
pop
xor
push
mov
mov
arpl
lods
xor
fidivr
js
push
push
call
fcomp
add
loope
es
cmp
pop
and
pop
mov
adc
sub
ins
sbb
in
loop
jno
and
stc
or
(bad)
in
mov
xchg
push
outs
lds
cmp
dec
push
and
bound
retf
jg
fld
push
jge
xor
xor
popf
add
or
sub
push
iret
(bad)
outs
jp
or
ins
mov
fst
dec
lock
out
and
outs
imul
push
pushf
scas
enter
sar
mov
mov
push
and
jo
pop
sub
inc
in
(bad)
sbb
in
pop
dec
inc
cli
dec
jnp
lods
inc
add
arpl
jae
pop
clc
dec
xchg
cmp
fst
aaa
xor
xor
ret
xchg
xchg
xchg
lods
dec
pop
sar
xor
movs
add
inc
mov
icebp
mov
cmps
and
out
pop
imul
addr16
mov
mov
cmps
cld
mov
mov
std
lods
aaa
scas
sub
outs
inc
push
dec
or
dec
outs
pop
dec
inc
aaa
mov
jnp
dec
mov
sub
movs
adc
inc
xchg
or
xchg
stos
mov
fwait
add
jg
add
leave
mov
cdq
push
sbb
sub
outs
mov
test
cmp
out
lods
cmp
sbb
sbb
imul
push
stc
mov
jnp
call
scas
(bad)
xor
ss
jp
or
in
mov
xchg
fild
sahf
bound
ss
jbe
push
pop
popf
xchg
ss
jnp
mov
mov
rcl
inc
pop
and
sbb
ret
out
idiv
das
repz
mov
mov
cmc
jae
push
xor
dec
stc
unpckhps
js
sbb
inc
pop
cdq
jo
fld
adc
rcr
aam
sub
mov
scas
mov
imul
and
in
shl
je
mov
es
mov
xchg
fimul
arpl
jecxz
push
ret
das
and
or
sbb
mov
push
add
mov
data16
sbb
dec
add
push
dec
js
les
lock
test
or
mov
or
jecxz
mov
adc
pop
(bad)
push
clc
ins
push
and
cwde
push
xchg
fincstp
lock
adc
adc
pop
(bad)
lea
sbb
cdq
std
leave
jnp
mov
lods
cmps
pusha
call
frstor
cwde
cdq
jo
rcr
jnp
cmc
fist
ror
or
cmps
mov
inc
add
test
(bad)
movs
dec
test
mov
mov
add
mov
dec
mov
push
inc
mov
xor
push
cmp
add
adc
lahf
or
sti
push
jbe
jle
clc
xchg
pop
dec
pop
mov
mov
sbb
scas
jbe
jno
or
xchg
inc
loope
dec
push
inc
inc
in
sub
loope
cmps
into
push
sbb
mov
daa
xor
pusha
iret
pop
jo
daa
sub
lods
mov
sbb
jns
test
arpl
lock
iret
mov
rcl
push
push
enter
clc
adc
out
cwde
frstor
jmp
cmp
test
inc
xchg
dec
add
sub
js
fwait
and
pop
mov
aaa
dec
jae
pop
mov
arpl
stos
int3
cmp
movs
test
sbb
in
mov
xor
adc
cmp
daa
mov
add
jg
arpl
mov
inc
rcl
jp
jl
cmps
mov
gs
fadd
push
jns
inc
pop
test
aas
pushf
mov
enter
gs
sub
icebp
dec
ins
jne
pop
ror
mov
or
sahf
adc
sbb
(bad)
mov
or
pushf
mov
fdivr
cmps
int3
clc
mov
pusha
cmp
dec
repz
mov
stos
jg
fst
mov
xchg
inc
out
xor
pop
adc
movs
pushf
adc
or
in
dec
pop
inc
pop
xlat
fdivr
jl
add
inc
inc
pop
push
gs
aad
mov
add
sub
add
sar
xor
dec
out
push
xchg
cmps
and
idiv
pusha
pop
ds
mov
cmp
cmps
adc
stc
mov
mov
jecxz
jmp
lods
mov
mov
stos
je
jg
sub
push
sub
jnp
je
lea
dec
mov
in
(bad)
mov
test
ins
push
and
popa
and
mov
mov
lock
jle
jnp
mov
enter
ins
xchg
dec
add
xchg
dec
cs
clc
mov
mov
cmp
mov
cdq
push
out
outs
pop
test
sbb
push
daa
xchg
mov
and
inc
sub
ret
inc
str
or
add
and
fiadd
fs
fsubp
mov
mov
jne
ins
push
add
test
dec
push
xchg
popa
cmc
cmp
popf
jg
shl
test
out
rol
test
and
adc
movlps
rol
arpl
imul
lods
es
je
add
out
jns
or
bswap
jo
sbb
xchg
test
ins
jne
nop
sbb
pop
push
mov
(bad)
shl
out
stc
mov
xor
test
jae
xchg
xlat
mov
hlt
or
fild
fiadd
inc
jae
pop
xlat
fdivr
(bad)
inc
add
sahf
aaa
add
jl
(bad)
inc
add
test
mov
lods
jmp
in
add
rol
fcmovnu
icebp
and
scas
mov
int
add
(bad)
mov
mov
nop
call
push
dec
into
into
pop
xor
dec
movs
into
fimul
das
and
and
cld
and
push
ss
lahf
mov
mov
cmps
sub
fs
std
pop
or
mov
lods
xor
out
call
jge
add
ins
mov
mov
jle
repnz
mov
and
jl
shl
mov
(bad)
cmp
jg
sbb
push
mov
mov
or
or
push
loope
repnz
inc
jecxz
mov
mov
mov
mov
or
fwait
in
pop
loopne
ror
jo
in
mov
ret
aam
or
test
add
leave
xchg
sub
popa
mov
sbb
cmps
das
or
cmp
cmp
dec
clc
fisttp
inc
add
test
dec
ins
jp
mov
jnp
add
pop
add
pop
xchg
pop
pop
outs
add
iret
mov
bound
pop
mov
jo
pop
mov
add
lods
ja
xor
stc
jnp
pop
lea
jmp
inc
pop
sub
xor
stos
xchg
mov
inc
jmp
jnp
cmps
push
mov
xchg
loope
pop
sbb
ss
inc
mov
cmps
repnz
ds
pop
bswap
inc
mov
xchg
in
mov
jae
pusha
or
add
repnz
mov
inc
lods
data16
jl
dec
add
jne
call
add
addr16
shl
pop
mov
mul
add
shr
inc
repnz
push
and
sbb
movs
sbb
loopne
pop
dec
rcr
ins
sub
shl
stos
inc
cs
es
inc
dec
or
cmp
stc
push
mov
sbb
and
xchg
pop
not
or
shl
inc
push
push
inc
or
mov
sbb
popf
retf
inc
jno
repz
sbb
pop
movs
mov
arpl
jg
sbb
out
mov
sbb
sub
test
xor
je
imul
adc
fiadd
leave
aam
push
dec
stos
je
rcl
adc
xlat
arpl
mov
hlt
ja
inc
out
fdivr
iret
inc
bound
icebp
fnstenv
pop
addr16
adc
enter
imul
cmp
dec
aad
dec
xchg
push
xchg
(bad)
cdq
pop
xchg
push
(bad)
les
jae
mov
cdq
or
xor
nop
mov
mov
push
lock
cli
clc
dec
rol
in
test
pop
rcl
and
lahf
xchg
or
mov
mov
add
add
imul
inc
movs
adc
leave
mov
push
or
test
gs
in
clc
jbe
push
mov
imul
sbb
or
fild
pop
cmp
adc
shl
add
popf
es
cmp
add
mov
(bad)
jb
jns
pop
mov
xchg
xchg
lods
and
dec
cwde
shl
mov
mov
clc
(bad)
adc
lock
sub
test
cmp
scas
rcl
mov
add
and
stos
push
cmp
jo
sub
outs
stc
imul
push
pop
mov
mov
and
arpl
or
cli
cld
lods
sbb
aad
mov
out
or
lds
nop
push
hlt
push
xchg
push
rcr
adc
cmp
push
adc
and
(bad)
imul
hlt
hlt
jg
sbb
push
pusha
dec
mov
pop
sahf
dec
aad
dec
nop
addr16
cmps
xchg
mov
inc
dec
and
das
jle
repz
xchg
(bad)
pop
out
pop
fistp
push
mov
test
push
fwait
xor
dec
shl
int3
stos
pop
fwait
test
push
aad
repnz
sub
out
retf
out
push
es
mov
ja
fistp
test
dec
sub
xchg
outs
je
test
sbb
inc
mov
cmp
ja
jo
push
mov
outs
dec
iret
cmps
sub
adc
mov
inc
cmp
das
push
mov
arpl
test
mov
aad
ficomp
out
jl
push
loop
arpl
rcl
gs
cdq
or
(bad)
jmp
mov
addr16
cmp
pop
movs
test
inc
adc
dec
popf
mov
dec
adc
(bad)
mov
outs
xor
sub
(bad)
cld
add
mov
or
jle
xor
push
add
fucomip
mov
imul
jb
jg
dec
movs
aaa
inc
push
fdivr
(bad)
enter
cmc
push
fisttp
mov
sub
jae
or
push
xor
nop
cmp
repnz
jle
xor
pop
mov
cmp
lock
mov
jbe
push
shl
fisttp
(bad)
xor
fmul
adc
addr16
repnz
jl
push
push
xchg
mov
fidiv
xor
(bad)
imul
mov
shl
cmp
pop
and
clc
inc
pop
std
xor
pop
sub
mov
aas
(bad)
outs
push
jp
mov
jmp
inc
retf
sbb
dec
adc
sahf
lds
cld
mov
push
aas
icebp
inc
mov
adc
push
mov
fimul
or
pusha
es
aam
dec
daa
ret
fsubr
imul
dec
adc
ins
enter
xchg
mov
xor
and
fcomp
push
lods
jle
xchg
mov
in
shr
jge
cmp
xchg
in
(bad)
mov
adc
jns
push
xor
cli
xchg
jne
xchg
pop
mov
xchg
mov
sbb
test
fbld
xchg
mov
inc
push
dec
test
and
dec
push
pop
imul
cli
cmp
cmp
lahf
push
pop
inc
xor
ficom
jo
mov
sbb
jne
adc
push
cmps
imul
sahf
push
and
add
mov
jae
and
or
pusha
sti
dec
ins
adc
jns
sbb
cmp
mov
xchg
retf
in
out
fild
out
sti
push
rcr
dec
(bad)
jmp
outs
pop
test
and
das
sbb
jge
retf
pop
je
pop
jbe
sub
test
fisttp
fst
cs
retf
arpl
push
ins
(bad)
rcl
mov
xor
es
mov
into
sbb
in
jae
shl
test
add
(bad)
or
into
dec
gs
xor
push
dec
aaa
adc
movs
sub
(bad)
std
mov
loop
inc
arpl
push
into
dec
sti
shr
(bad)
lahf
shr
and
push
xor
mov
(bad)
in
sbb
test
xchg
add
push
cmps
loop
inc
cmc
les
ds
shr
cmps
frstor
(bad)
cmp
ja
movs
in
dec
jns
jb
inc
xlat
sti
cmp
cmp
movs
(bad)
cmp
sub
mov
adc
xor
fistp
arpl
xor
cmps
xchg
jo
jl
pop
hlt
xchg
add
mov
cmp
out
les
js
dec
push
mov
ror
fcos
sahf
or
mov
sbb
add
outs
jno
jae
daa
or
cmc
fdivr
cmc
dec
sbb
arpl
dec
xchg
outs
icebp
pushf
rol
movs
shl
icebp
call
dec
jp
or
cwde
mov
es
jne
aam
push
sahf
inc
adc
add
lea
ins
nop
repz
mov
loop
dec
mov
inc
cmp
sbb
rol
pushf
mov
mov
pop
sub
xlat
cmp
dec
add
hlt
jp
xchg
jmp
or
dec
loop
mov
retf
or
add
xor
gs
scas
push
xor
les
in
scas
mov
stos
(bad)
sub
and
fcom
(bad)
cli
sti
loope
mov
sbb
outs
or
or
mov
imul
inc
mov
inc
test
jp
retw
and
sbb
stc
shl
(bad)
inc
aas
add
shr
push
mov
mov
iret
mov
jno
mov
pop
adc
mov
add
shl
inc
fwait
push
lahf
sbb
add
pop
mov
lods
daa
call
cmp
mov
pop
pop
(bad)
lods
dec
cmps
addr16
mov
sub
outs
xor
mov
mov
or
out
mov
inc
jmp
fdiv
loopne
xor
push
push
cmp
in
xchg
sub
iret
push
out
push
out
mov
adc
daa
mov
xor
dec
jnp
(bad)
lods
cmp
cmps
pushf
ja
int3
cmp
or
shr
outs
jne
mov
loope
mov
aas
retf
jae
repnz
add
nop
cdq
aaa
jp
jle
xor
xor
test
out
iret
rcl
mov
movs
leave
ja
cmp
mov
push
add
xor
sti
gs
sbb
jl
dec
gs
in
pop
fist
pop
adc
jecxz
lods
xchg
imul
fwait
adc
ss
adc
nop
sub
cmps
sub
jns
pop
jno
cwde
je
ret
add
popa
fisubr
fwait
or
mov
xchg
add
(bad)
adc
mov
mov
fiadd
jne
das
(bad)
shl
add
sbb
outs
pusha
push
mov
or
sbb
mov
adc
ret
pushf
jnp
dec
mov
stos
int3
ja
xor
es
leave
jbe
out
xchg
xchg
push
ins
pushf
xchg
sti
or
push
add
div
add
jmp
in
xchg
aaa
pop
f2xm1
ins
rcr
ss
pop
(bad)
cmp
call
cdq
inc
sub
jo
pop
neg
xchg
les
mov
aas
push
mov
jns
jl
push
ror
jb
repnz
out
cwde
cwde
in
int3
push
dec
dec
add
cmp
mov
ja
adc
bound
bound
iret
ret
shl
ins
pop
jg
bound
hlt
int3
int
adc
leave
push
jo
cld
nop
ret
dec
arpl
inc
push
push
lock
mov
retf
cld
outs
mov
pop
push
push
ficomp
fadd
dec
retf
leave
and
push
(bad)
rcr
adc
mov
xor
pusha
les
hlt
push
dec
jmp
adc
scas
ja
mov
xor
xchg
sbb
sbb
mov
mov
aas
sbb
mov
ja
sub
loope
jp
(bad)
pushf
dec
cmps
pop
sub
es
xrelease
mov
ret
cwde
push
pop
xchg
sbb
jb
mov
jns
pop
(bad)
and
cmps
pop
pop
push
xchg
icebp
daa
and
aas
aaa
sbb
test
popa
xor
fwait
jle
push
call
cdq
jne
push
(bad)
outs
sub
lods
icebp
shl
jns
inc
lods
movs
fiadd
test
movs
pop
lods
in
bound
xchg
mov
mov
mov
shr
inc
ja
shl
jmp
or
pop
iret
add
sbb
mov
lea
call
push
sbb
movs
icebp
sub
xchg
adc
mov
mov
int3
mov
pop
pop
inc
pusha
repz
xor
jle
push
dec
fimul
mov
sbb
pusha
cmp
mov
test
es
popa
pop
movs
push
push
push
jbe
inc
pop
push
or
cmps
rcr
in
test
ins
jle
jmp
imul
jge
dec
adc
cmps
andnps
cmp
sub
mov
adc
jmp
les
cmps
jmp
int3
cmp
mov
xor
sar
and
adc
jb
test
test
dec
aaa
loope
and
fs
mov
outs
fild
add
mov
test
mov
xchg
xlat
sbb
popf
pop
dec
jo
int3
fstp
iret
cmp
lods
addr16
jmp
test
sahf
or
into
lahf
adc
cmp
sub
sbb
outs
cmc
xor
dec
pushf
jg
aam
inc
jns
sub
inc
call
mov
cli
mov
mov
enter
call
push
mov
mov
push
es
cmp
loope
int3
loope
outs
ror
push
(bad)
mov
mov
mov
lock
(bad)
imul
xchg
push
and
fstp
cwde
jmp
sbb
mov
xchg
sub
rol
fadd
fwait
xchg
js
cli
ror
dec
sub
lahf
inc
bound
cli
mov
sti
add
jp
mov
test
aaa
mov
jle
in
adc
cmp
shl
lods
jmp
(bad)
push
ss
mov
sbb
push
cmp
leave
enter
repnz
lea
sub
jnp
mov
cmps
fstp
out
xchg
cmps
sbb
mov
lds
data16
cmp
mov
(bad)
dec
lds
mov
jnp
jge
cwde
pop
int
sahf
mov
loop
repz
xlat
inc
call
lock
(bad)
(bad)
fldcw
inc
and
mov
dec
or
push
leave
fst
xor
mov
gs
repnz
or
adc
loopne
mov
cmp
aam
lahf
or
data16
add
ja
or
sbb
in
dec
std
test
adc
inc
jle
jns
cld
not
mov
retf
xchg
adc
or
jae
fidivr
cmp
jbe
or
dec
enter
sbb
ja
(bad)
pop
sub
and
xlat
shl
pop
or
mov
repz
loopne
aas
dec
mov
xchg
jae
xor
cli
rcr
fwait
mov
mov
adc
cs
add
add
mov
cli
mov
mov
dec
dec
int3
sub
iret
mov
inc
mov
sub
push
aaa
loopne
sub
mov
mov
dec
xchg
sbb
je
sub
repnz
pop
push
sar
push
(bad)
mov
jns
dec
jg
pop
push
mov
mov
lods
and
xchg
pop
mov
lock
xchg
push
jl
mov
cmp
add
dec
jmp
pop
not
pop
in
in
mov
mov
call
mov
push
aaa
(bad)
mov
(bad)
xchg
mov
es
cwde
jmp
inc
(bad)
adc
icebp
mov
add
vpunpcklqdq
xor
fwait
lock
jmp
scas
push
shl
push
not
stc
repz
xchg
stos
cdq
mov
lods
out
enter
push
jmp
out
jno
movs
push
dec
or
fiadd
dec
outs
outs
push
scas
aam
or
dec
dec
stc
jl
jmp
mov
inc
adc
or
cmp
push
dec
iret
or
cmovo
test
adc
ret
in
icebp
or
cmp
or
ins
mov
xchg
js
and
aam
repnz
ins
lahf
lods
mov
mov
outs
mov
jg
clc
(bad)
out
push
sbb
int3
test
test
ss
inc
bound
xor
sbb
call
in
data16
push
and
mov
das
pop
jmp
ins
mov
add
addr16
std
mov
sar
test
gs
es
retf
bound
rcl
sub
sbb
aaa
aam
cdq
mov
push
fisttp
mov
or
xchg
outs
lods
in
sub
xchg
mov
mov
loope
sub
jno
and
xchg
pop
lods
sbb
jo
push
dec
jg
out
sbb
std
lods
push
(bad)
cmp
sub
jo
lds
mov
ds
push
(bad)
adc
loop
xor
push
mov
popf
jmp
pop
xchg
mov
(bad)
cwde
and
scas
xchg
xchg
and
nop
outs
(bad)
xor
icebp
dec
outs
mov
es
dec
mov
clc
aaa
pop
ror
pop
xchg
sti
push
icebp
retf
xor
mov
dec
add
or
or
jbe
cwde
push
popa
ret
in
rcl
imul
sti
mov
ret
mov
test
jns
inc
xor
adc
test
shr
test
cmp
test
mov
aad
sub
sub
jbe
xchg
inc
test
push
into
xchg
pop
and
sbb
mov
dec
inc
add
test
jb
or
inc
xor
nop
arpl
mov
arpl
cmps
mov
xchg
in
clc
jmp
xor
push
into
mov
push
sub
or
mov
test
int
lods
icebp
adc
cmp
nop
outs
jne
aas
xor
sub
inc
ror
dec
(bad)
test
jmp
cmp
jno
mov
(bad)
loope
mov
sub
std
rcl
xor
add
and
popa
pop
push
adc
push
push
xchg
ja
mov
or
xchg
mov
cld
cmp
pop
mov
test
jle
xchg
mov
in
push
jne
retf
jne
xchg
and
pop
xchg
add
leave
sub
push
(bad)
push
or
mul
aaa
sub
mov
and
dec
push
lock
stos
xlat
jmp
dec
out
dec
pop
dec
cmp
mov
fidivr
loopne
jl
aad
xor
sahf
lods
inc
cmps
loop
daa
or
jl
addr16
mov
jo
(bad)
mov
retf
dec
cwde
sbb
repz
fwait
fs
lods
sbb
lods
dec
jns
mov
mov
stos
cdq
xlat
lds
test
stc
ins
pop
jl
leave
xchg
outs
push
movs
repz
push
and
popa
jae
out
xchg
dec
into
pushf
pushf
jg
fcom
sub
inc
jl
repz
pop
xor
xchg
xor
xchg
fcomp
dec
sub
ror
cmp
data16
out
imul
pusha
pushf
adc
sub
mov
inc
mov
imul
cld
dec
cmp
call
fsubr
mov
in
lahf
mov
repz
xchg
or
addr16
sti
jb
aam
out
pop
add
hlt
out
jmp
add
jecxz
fdiv
loop
dec
dec
mov
repnz
cmp
imul
dec
and
cmps
rol
xchg
xchg
mov
test
sbb
ss
sub
retf
hlt
xchg
mov
jl
imul
xor
retf
daa
or
inc
call
(bad)
loopne
es
push
test
xchg
lods
int3
push
jmp
cmp
mov
pop
sub
fcomi
fnstcw
xor
mov
push
mov
retf
add
push
adc
iret
movs
fcomip
and
pop
sbb
add
adc
mov
mov
pop
adc
call
jo
outs
pop
outs
adc
pusha
xchg
cmps
(bad)
fstp
in
xor
cmp
mov
jp
leave
xchg
and
(bad)
adc
test
ins
push
ins
stc
pop
sbb
add
mov
fisttp
fcomp
aad
fimul
ret
sub
add
jo
call
sar
jmp
jge
jo
cmp
sbb
sbb
cwde
daa
iret
pop
data16
stc
not
clc
call
rcl
retf
ds
sahf
cmp
les
jge
dec
push
xlat
into
(bad)
fdiv
jne
xchg
xchg
call
lahf
mov
sti
xchg
jecxz
adc
rcr
xor
imul
stos
add
lds
mov
mov
cmp
push
jbe
jge
xchg
pushf
(bad)
loopne
cmps
sbb
ds
jae
xor
jns
std
outs
cmp
xchg
repnz
lea
dec
sbb
xchg
aam
inc
dec
repz
add
or
add
aam
repz
fcomip
jbe
out
pop
xor
es
mov
or
add
jmp
addr16
mov
add
int
sub
xchg
sbb
ret
fadd
push
sub
inc
pop
lea
ins
arpl
jno
and
bound
push
mov
xchg
and
push
fnsave
(bad)
and
adc
xor
xchg
mov
mov
out
xor
jmp
add
movs
sub
dec
inc
xor
jmp
or
out
scas
popf
ja
sub
lock
mov
pop
jae
adc
mov
clc
pop
leave
out
(bad)
int3
jns
or
lods
push
sahf
mov
inc
mov
stc
and
rol
bts
or
gs
out
aaa
das
test
rcr
xchg
into
xchg
and
mov
ja
hlt
push
(bad)
enter
push
iret
mov
xlat
(bad)
lock
sbb
fstp
add
adc
movs
gs
sub
dec
es
out
or
jg
mov
or
mov
out
loope
ret
dec
into
repnz
aas
cld
jle
aad
xlat
(bad)
(bad)
test
outs
jae
or
(bad)
icebp
pop
cli
dec
jge
scas
dec
pop
int
or
loope
push
shl
mov
sahf
mov
jecxz
push
mov
(bad)
cmp
movs
mov
adc
sahf
push
push
inc
xor
mov
mov
cmc
xchg
xchg
or
dec
leave
daa
leave
sub
xchg
and
xchg
push
mov
out
jmp
jl
sub
pop
(bad)
jle
or
dec
xchg
loope
push
scas
pop
cmp
popa
push
pop
popa
xchg
jecxz
mov
and
scas
add
rcr
loope
cmps
bound
scas
mov
or
add
pop
mov
clc
mov
mov
jp
and
push
scas
lahf
in
out
sbb
or
inc
cmp
and
jecxz
jnp
jns
popa
in
sbb
pop
out
mov
cli
pop
jmp
jo
(bad)
mov
adc
pushf
movs
fisttp
pushf
mov
push
int
jmp
sbb
jb
adc
and
adc
and
les
jmp
fdivr
mov
scas
inc
pop
in
in
adc
inc
mov
in
xchg
(bad)
sbb
aas
jecxz
xlat
xchg
jecxz
dec
fbstp
call
and
cmps
cmp
pop
hlt
into
mov
cmps
arpl
movs
in
gs
xor
jmp
inc
jmp
aaa
loopne
and
xor
jae
add
repz
dec
mov
sar
cli
ret
cmp
or
movs
daa
push
fcom
or
(bad)
push
add
fadd
ret
out
mov
jb
sub
cmp
(bad)
and
imul
pop
push
mov
xchg
hlt
std
xor
jae
jge
stos
out
sbb
mov
int
and
stos
mov
push
ins
loop
cmp
shr
push
pop
dec
ins
popa
mov
daa
push
(bad)
ins
inc
imul
clc
sbb
and
pop
mov
fisubr
stos
sbb
xchg
aaa
mov
test
sbb
mov
fcmovnbe
clc
pop
movs
sub
pushf
arpl
and
cmc
push
ins
push
call
std
test
mov
dec
cmp
push
fisttp
les
out
pop
repz
mov
mov
mov
out
inc
sbb
leave
push
mov
inc
cmps
fistp
(bad)
fstp
cmpxchg
push
dec
loop
xchg
mov
loopne
aam
dec
mov
xchg
aas
pop
cmc
call
xchg
enter
sub
or
aaa
ret
dec
mov
push
mov
sbb
repz
jb
dec
pop
add
in
outs
lds
push
das
dec
lock
cmp
repz
test
rcl
push
mov
aas
mov
xchg
mov
ret
repz
jne
popf
fstp
mov
(bad)
dec
fld
nop
jne
div
fmul
pop
pop
bnd
dec
inc
mov
adc
and
xchg
push
(bad)
test
dec
int3
xchg
sub
push
lfs
sahf
adc
cmp
and
sar
daa
jae
pusha
xor
pop
xor
sbb
xchg
in
out
or
jle
mov
out
cmp
mov
nop
in
dec
sbb
clc
dec
fldl2e
sub
std
inc
mov
push
xor
clc
xchg
cmc
loopne
retf
call
les
ins
nop
xor
int
outs
scas
mov
cmp
mov
aas
xlat
aam
ins
jne
push
dec
ret
sbb
xchg
je
add
push
call
adc
and
fcomp
pop
sbb
jo
mov
loop
pop
cld
repnz
xor
sub
leave
gs
add
cli
arpl
add
cmp
aas
outs
mov
data16
push
mov
sbb
add
jmp
aad
cwde
mov
data16
lahf
pop
ins
int
dec
rol
repz
inc
push
xchg
scas
cdq
and
jp
(bad)
(bad)
ja
das
in
dec
mov
inc
mov
mov
or
sub
cli
ins
jecxz
(bad)
addr16
sbb
push
inc
xchg
ja
push
xor
repz
adc
mov
add
mov
add
pop
pop
loope
adc
sahf
add
mov
fwait
push
inc
cmps
xchg
data16
mul
mov
fcomp
aas
popf
cmp
(bad)
jp
xor
jmp
stos
xchg
ins
xchg
jg
daa
mov
aaa
sbb
jge
mov
or
mov
push
push
inc
in
sbb
jns
scas
cs
ds
pop
es
xor
or
xchg
ficom
lock
mov
ror
sbb
bound
test
jl
dec
retf
cmps
xchg
test
call
fistp
add
mov
push
cmps
retf
and
jb
ds
pop
stc
dec
or
les
xlat
and
jns
inc
lods
adc
aas
mov
movs
enter
adc
cmp
mov
push
mov
sub
adc
lahf
arpl
adc
or
adc
stos
(bad)
xchg
cmp
test
sbb
jns
sahf
stos
cdq
movs
sub
in
xor
fcom
(bad)
or
mov
aam
add
or
mov
adc
jmp
mov
pop
outs
sar
push
sbb
inc
xchg
dec
jnp
nop
push
fldenv
sub
pop
and
sbb
inc
inc
or
out
adc
loop
test
out
jbe
push
fild
and
(bad)
sub
jmp
and
adc
je
jp
ss
test
es
leave
mov
cmp
sub
loop
mov
sub
iret
lods
movs
loope
clc
jo
xchg
lods
fistp
ja
scas
mov
repz
es
mov
shl
ss
int3
ins
aam
cmp
fcom
lahf
add
retf
cmp
cmps
jmp
pop
icebp
mov
push
pop
and
sahf
inc
jmp
push
and
mov
adc
and
(bad)
lahf
push
retf
adc
cmp
aas
mov
sahf
inc
fnstenv
inc
aad
mov
push
imul
jmp
leave
lods
fiadd
cmp
movs
xchg
jge
xchg
pusha
mov
outs
stos
jns
(bad)
dec
adc
(bad)
mov
imul
jne
movs
adc
into
in
adc
jmp
repz
dec
in
imul
xor
xor
aam
push
popa
cmps
arpl
repz
in
xchg
hlt
cmp
call
cmp
pop
adc
mov
dec
outs
je
ins
pop
jo
test
inc
pop
sub
xor
sbb
dec
jae
mov
jne
int3
(bad)
dec
outs
retf
outs
sbb
cmps
push
scas
aam
aas
xadd
ja
mov
test
adc
pushf
adc
mov
jmp
call
sbb
js
cmc
out
test
mov
cmp
or
add
or
sub
hlt
shl
push
mov
movs
sbb
aam
cdq
jnp
(bad)
jl
push
sub
loope
lods
adc
pop
clc
pop
ret
and
loopne
jecxz
aad
mul
cmc
mov
pop
mov
adc
lods
lahf
leave
hlt
dec
lods
in
repz
iret
mov
(bad)
mov
fdivrp
clc
inc
sbb
pushf
dec
adc
xor
or
pop
mov
in
call
mov
aas
xor
outs
scas
mov
xchg
pop
ins
(bad)
rcr
cmc
dec
mov
sub
or
add
push
inc
pop
outs
(bad)
jle
in
loopne
or
push
imul
and
inc
test
imul
jl
xchg
inc
cmp
popa
scas
xchg
mov
and
nop
ret
mov
sub
scas
ror
xchg
(bad)
sub
cmp
dec
icebp
cmps
mov
add
push
push
ror
inc
jo
add
scas
mov
stos
in
std
mov
jp
cmp
cmc
loop
mov
mov
daa
lods
adc
cwde
sbb
jmp
xor
mov
rcr
or
cmc
and
call
adc
dec
clc
mov
add
jb
inc
xor
or
push
push
test
cs
test
sbb
imul
(bad)
jne
pop
pop
fidivr
fst
mov
mov
jo
lds
scas
dec
jl
mov
imul
jo
out
aad
fsubr
push
cwde
dec
jnp
pushf
ss
jmp
jns
inc
lock
or
push
cmps
adc
(bad)
sbb
mov
div
cmp
das
popa
and
pusha
push
pop
pusha
lods
test
ds
into
sbb
add
movs
add
(bad)
js
jmp
cld
in
inc
push
dec
in
push
mov
sti
xor
add
pop
sti
or
loope
mov
movs
push
stos
popa
cmp
test
jb
jmp
daa
push
dec
je
retf
bound
push
lods
jg
and
ret
mov
pop
or
shr
cld
pop
sbb
add
mov
xchg
pop
xor
inc
adc
pop
xor
jecxz
shl
add
out
sbb
outs
hlt
jmp
sbb
mov
xchg
ret
outs
mov
into
shr
push
and
ins
sbb
out
inc
pop
xchg
lds
xor
mov
dec
lods
or
dec
xchg
ret
mov
outs
ror
adc
push
daa
pop
mov
push
adc
les
jno
sbb
lds
add
cmp
(bad)
adc
jo
push
fdiv
int3
mov
push
js
cwde
jb
pop
ja
sbb
mov
or
adc
dec
cmc
shl
pop
shl
jo
loope
sbb
push
sar
ret
jecxz
(bad)
jmp
scas
loopne
push
not
sbb
push
sub
in
cs
mov
add
scas
dec
sbb
dec
fimul
push
mov
sbb
sub
mov
jge
sub
cdq
pop
pop
sub
mov
jecxz
out
sti
ins
or
(bad)
(bad)
jl
cmc
adc
pop
pop
adc
(bad)
mov
sti
mov
jp
call
mov
push
jmp
or
jbe
mov
retf
inc
imul
mov
fwait
iret
movs
jno
lods
sub
out
cmps
fidiv
mov
(bad)
pop
push
sub
sub
iret
pop
fild
rcr
pop
pushf
cmp
call
aad
xlat
imul
and
clc
push
cs
dec
sbb
cld
stos
xchg
mov
nop
mov
push
mov
jmp
ret
inc
and
rol
mov
or
pushf
or
dec
leave
sub
cs
cmp
int3
lods
jmp
loopne
xchg
xor
cmp
call
mov
sub
pop
(bad)
outs
hlt
push
test
lock
cld
ss
sbb
mov
add
push
inc
pusha
push
push
xchg
inc
dec
sub
and
mov
add
pop
push
inc
sub
test
in
or
retf
cmp
inc
pop
les
adc
jp
push
or
inc
mov
ins
mov
stos
xor
push
arpl
stos
mov
inc
dec
mov
jp
dec
sti
test
(bad)
ja
mov
sub
mov
and
xor
inc
out
push
aad
sbb
add
mov
loope
dec
bound
mov
imul
xchg
pop
sub
cmc
push
push
fidivr
jle
lock
xor
lds
mov
pop
and
dec
cmp
es
(bad)
cdq
gs
push
imul
call
bound
dec
ja
sbb
mov
push
mov
ret
aaa
ficom
out
jg
mov
push
fcmovnbe
sub
stc
stos
inc
mov
xchg
retf
in
iret
xchg
xlat
aas
jge
push
push
sub
aad
jns
xor
daa
outs
call
push
cmps
sbb
add
add
popf
fldenv
cmp
mov
movs
stos
and
pop
adc
test
(bad)
jne
(bad)
inc
pop
(bad)
sub
sti
jmp
mov
mov
cdq
lds
lea
push
mov
rcl
lock
dec
or
mov
mov
and
mov
push
int3
jg
(bad)
cmp
dec
cmps
mov
iret
mov
js
(bad)
fisttp
out
movs
mov
repnz
shr
stc
(bad)
push
cwde
popf
cmp
push
cli
xchg
inc
and
clc
inc
dec
mov
repz
sar
shl
ret
cmp
add
pusha
sub
or
rol
out
xchg
sub
imul
inc
xchg
cwde
pop
pop
pop
mov
jmp
test
inc
nop
add
ins
mov
cmp
in
loop
mov
dec
inc
mov
sub
add
push
mov
pop
aas
pop
cmp
fdivr
fmul
and
outs
push
out
and
sbb
jp
mov
push
push
xchg
outs
jmp
xchg
push
jne
mov
ins
addr16
and
or
inc
movs
add
sbb
clc
xchg
adc
sub
jo
cmps
dec
add
pop
mov
mov
inc
cmp
mov
inc
std
and
and
mov
test
outs
fdiv
neg
dec
lea
add
xor
stos
cwde
sbb
stos
adc
pop
and
mov
or
loop
pop
loop
mov
dec
adc
xchg
dec
mov
ja
add
inc
ret
jmp
and
ja
cmps
lods
xchg
jb
cmc
mov
push
fcmovu
fcom
repz
cmps
cs
aas
add
mov
sbb
cs
nop
mov
out
not
mov
mov
adc
and
fld
cmp
jno
inc
mov
push
imul
adc
dec
mov
pop
push
adc
or
push
adc
daa
int
sahf
lods
fs
jne
sahf
dec
lods
ret
adc
(bad)
lds
call
and
jbe
jne
in
cmc
push
mov
test
xchg
retf
aas
(bad)
hlt
scas
mov
ret
cmp
aad
stos
ins
fist
pop
ss
data16
push
es
cdq
repz
rcr
mov
jge
sahf
mov
call
int3
cmp
gs
sub
imul
ins
sub
push
call
xchg
neg
push
sar
mov
pop
jae
push
push
shl
xor
fist
ins
out
inc
xor
dec
pop
outs
movs
loop
movs
jp
in
or
cmp
js
(bad)
mov
test
jb
test
fs
or
aam
jmp
jmp
test
cmp
or
add
push
mov
out
outs
icebp
sub
ror
mov
out
dec
int3
sbb
dec
xor
cmp
xor
sub
in
mov
stc
test
push
dec
mov
cld
mov
dec
(bad)
out
in
fidiv
mov
push
clc
popa
mov
add
mov
fmul
xor
hlt
push
inc
inc
mov
ficom
ret
push
adc
xchg
mov
repz
ins
call
hlt
and
xor
jbe
cli
sub
add
std
fs
mov
fsubr
inc
xor
inc
mov
mov
mov
loop
loopne
fstp
hlt
scas
sbb
sub
iret
xchg
cmc
pop
(bad)
scas
loope
call
in
dec
into
pop
pop
dec
hlt
dec
pop
and
fstp
lods
pop
mov
mov
xchg
and
mov
mov
rcl
add
fwait
inc
test
dec
jp
jg
cmp
sahf
test
xchg
neg
je
ror
pop
adc
outs
and
in
sbb
movs
mov
sti
fwait
add
mov
add
mov
cs
pusha
into
movs
mov
call
icebp
lahf
push
repz
cld
xchg
xlat
pop
mov
hlt
push
std
fbstp
sub
aad
xor
repz
inc
repnz
(bad)
ja
cld
mov
(bad)
stc
aaa
fsubr
jmp
fnsave
push
and
cmp
mov
out
and
dec
xlat
dec
popa
stos
xchg
push
out
aad
cli
add
mov
jmp
nop
shl
std
jmp
ret
xor
jno
lods
lds
test
pop
add
leave
cdq
cmp
or
xor
(bad)
stc
and
in
(bad)
retf
mov
fistp
xor
fild
ss
fidivr
aam
mov
mov
mov
ret
xchg
pushf
loopne
jmp
jg
pop
push
or
xor
mov
pop
out
dec
aam
dec
sbb
pop
inc
in
inc
ret
popa
loopne
movs
mov
lods
repnz
jmp
imul
pop
loop
pop
mul
sbb
loop
shr
loop
mov
fiadd
cmp
jo
and
mov
inc
sbb
(bad)
icebp
cmps
mov
push
mov
mov
fadd
pop
sbb
sar
adc
add
add
or
jle
push
push
jmp
int3
test
das
(bad)
dec
cwde
in
fmul
stc
xchg
jl
out
add
loope
pop
call
cld
std
loop
lods
pop
out
data16
jae
scas
cmp
add
ja
inc
xchg
fs
jbe
mov
out
sub
push
rol
imul
frstor
je
cmp
push
pushf
jb
push
jmp
mov
and
mov
pop
jmp
imul
imul
test
inc
out
cmps
xor
mov
pushf
retf
xchg
inc
test
loopne
sbb
dec
pop
jns
cmp
(bad)
aam
xchg
mov
cmp
mov
loope
sub
pop
fldenv
icebp
mov
stos
or
das
in
jno
pop
jmp
addr16
xchg
add
(bad)
stc
aam
in
xchg
push
push
cmps
xchg
or
clc
les
hlt
xchg
inc
out
dec
cmp
mov
mov
push
jp
fcom
jmp
push
iret
cmp
mov
outs
adc
and
dec
iret
in
pop
in
stc
aaa
daa
lds
inc
push
cmp
leave
mov
dec
repnz
pop
(bad)
popa
xchg
stos
mov
cmp
sub
sub
sub
dec
fs
aaa
xchg
aad
imul
nop
jae
and
push
fadd
sub
or
pop
fwait
push
(bad)
lods
pop
cmp
xor
nop
and
mov
setae
or
mov
jmp
jl
sar
shl
movs
je
imul
out
out
push
adc
or
cmp
xchg
ins
fst
ss
push
jns
xchg
(bad)
mov
inc
sbb
adc
ins
lock
fst
push
mov
cmp
add
xchg
jb
mov
enter
movs
jecxz
ss
movs
shl
jbe
fucomp
mov
mov
adc
xchg
js
mov
jp
and
xlat
mov
mov
and
cmc
cmp
not
jno
jmp
fidiv
adc
mov
int3
in
jle
retf
int3
add
lock
stos
sub
int
sub
movs
inc
xchg
mov
retf
and
int
jbe
cwde
mov
adc
imul
inc
mov
test
push
das
cmps
pop
mov
jmp
cmp
addr16
dec
push
dec
cmp
cmc
add
inc
scas
pop
sar
fisubr
lods
pushf
mov
sbb
sbb
mov
ret
js
sub
add
push
sub
mov
xchg
sub
adc
inc
mov
dec
or
mov
je
pop
js
pop
mov
adc
pusha
mov
or
cmps
mov
stos
rcr
ret
or
or
pop
lods
dec
mov
push
aad
mov
push
add
pop
fist
xor
(bad)
(bad)
jmp
scas
pushf
loop
out
xchg
mov
lods
mov
or
mov
jns
(bad)
jns
jo
xchg
xchg
mov
push
mov
pop
and
sbb
pop
add
es
cmp
ret
cmp
daa
add
jno
hlt
xor
daa
sub
out
inc
ds
bound
and
(bad)
mov
sub
sahf
pop
in
pop
cmps
jo
or
clc
push
add
jle
sbb
jge
mov
je
loop
outs
mov
test
pop
das
clc
std
pop
sbb
push
jno
loope
or
mov
scas
inc
gs
sahf
push
mov
adc
mov
push
xor
add
adc
mov
push
add
mov
fld
fsub
aaa
mov
sbb
fist
in
(bad)
and
out
xor
cmp
lock
dec
mov
(bad)
idiv
(bad)
jle
or
or
add
xor
fwait
inc
xchg
and
jno
mov
push
sub
inc
repz
dec
fstp
sbb
(bad)
sar
out
xor
xlat
mov
sub
lods
xchg
pushf
lods
mov
dec
outs
mov
(bad)
jge
jle
or
xchg
push
cmp
out
jmp
ss
mov
and
pusha
hlt
les
enter
and
aas
inc
lea
mov
(bad)
push
fldcw
outs
fld
leave
(bad)
out
and
mov
dec
add
mov
out
jg
mov
jp
adc
pop
adc
pop
imul
cwde
pop
dec
and
fisubr
adc
lds
jns
mov
stos
inc
jmp
and
push
neg
jbe
adc
mov
mov
test
js
ror
mov
ins
sar
dec
mov
cmp
add
mov
lea
pop
sub
cmp
inc
add
mov
(bad)
push
in
mov
or
rol
xor
mov
outs
pop
daa
lock
push
out
pop
push
mov
scas
sbb
stc
sbb
dec
jae
pop
fistp
outs
xor
adc
jg
mov
adc
mov
dec
mov
scas
aad
stc
inc
inc
or
jmp
xor
loop
cmps
mov
cmp
sbb
hlt
xchg
arpl
stc
aad
pop
and
xchg
mov
aas
shr
mov
pushf
fstp
test
lahf
or
clc
stc
nop
pop
in
ins
ja
fpatan
jne
push
int
leave
add
out
test
je
pop
dec
bound
outs
outs
xchg
je
add
out
mov
mov
cmps
push
cmp
fsub
inc
in
or
mov
leave
push
inc
xchg
stc
int3
shl
test
cmps
jmp
mov
or
lods
mov
or
pop
push
jnp
loope
add
test
add
sub
mov
dec
ja
dec
cmp
repz
pop
dec
cmp
push
inc
inc
inc
jge
push
mov
stc
inc
aas
push
sbb
cmp
add
xchg
les
out
xchg
xchg
in
jmp
int
ss
sti
rol
push
push
in
(bad)
jmp
xchg
add
retf
adc
jmp
dec
push
dec
scas
in
dec
jmp
jle
out
pop
sbb
push
adc
test
or
out
sti
(bad)
shl
xchg
sub
cmp
or
rcl
pop
lods
fcmovnu
inc
test
cmps
ss
add
jge
imul
inc
jg
(bad)
sbb
js
push
and
ret
push
loope
out
sti
ror
or
sti
pop
fild
fcom
push
push
gs
or
cmp
loope
mov
in
sbb
inc
outs
fmul
sub
(bad)
imul
jmp
movs
fadd
lea
dec
or
jbe
out
adc
test
or
loope
and
lods
push
ins
imul
sar
add
xchg
fld
icebp
test
jge
mov
iret
lea
or
mov
xor
movs
cmp
xor
dec
dec
pop
lods
(bad)
test
or
and
fidiv
mov
mov
lods
inc
pop
sub
pop
push
and
jne
jmp
mov
pop
jmp
add
jns
(bad)
lahf
xor
in
es
mov
inc
push
pop
mov
push
push
add
out
loop
xchg
or
outs
leave
push
mov
mov
xor
leave
and
dec
ror
jl
push
ror
push
in
mov
or
cmp
cdq
js
fucomi
sbb
in
cld
ret
mov
popf
daa
enter
push
inc
push
ret
xchg
mov
(bad)
adc
ficomp
int3
pop
inc
adc
xchg
fdivr
cmp
dec
adc
push
lds
jle
daa
add
cld
shl
lods
mov
add
rcl
(bad)
mov
clc
or
enter
shl
xlat
std
call
jmp
sub
add
test
movs
fxch
pop
xchg
shl
dec
in
repnz
packsswb
repz
std
ins
add
jo
sbb
setae
mov
retf
inc
adc
and
sbb
push
xlat
dec
jbe
call
xor
pop
fmul
std
dec
gs
pop
push
fcomp
ffreep
jbe
movs
sbb
lods
in
popf
sub
out
inc
lds
call
xor
inc
jbe
lock
mov
aaa
or
jmp
in
(bad)
in
out
push
pop
pop
jmp
pushf
inc
enter
cli
fimul
rcr
add
cmp
fsubrp
hlt
push
aam
or
dec
cmp
sub
in
mov
shl
jmp
mov
or
nop
xchg
pop
dec
and
mov
jmp
dec
cli
arpl
sub
adc
lea
or
adc
in
(bad)
pop
pop
or
dec
inc
lahf
out
inc
pop
js
mov
cmp
push
cwde
inc
jno
xchg
sub
mov
xor
ins
jmp
jbe
sub
inc
push
fbstp
inc
adc
loope
fcomp
(bad)
push
mov
cmps
(bad)
clc
inc
(bad)
and
jecxz
cmp
lock
lds
aam
mov
jmp
jmp
pusha
add
dec
jmp
test
adc
test
add
daa
xor
fcmovnu
xchg
add
push
arpl
fnsave
sub
dec
test
pop
sbb
mov
sbb
or
xchg
fisub
or
out
test
dec
test
ds
or
int
mov
hlt
ja
retf
jmp
fistp
jg
mov
popf
jne
push
adc
mov
fs
popf
inc
jecxz
out
dec
mov
xchg
pop
sub
mov
pop
ds
(bad)
sub
adc
imul
push
sub
dec
movs
and
lods
(bad)
fwait
cld
push
push
mov
aam
adc
lods
xlat
pop
in
aam
cmp
sbb
mov
sti
cmp
repnz
shr
fwait
movs
test
and
cmp
daa
or
pop
retf
ds
cmps
test
pop
rcl
ficom
dec
jge
push
mov
leave
push
add
jb
jo
cmp
arpl
sbb
push
cmps
mov
jo
jge
or
in
cs
lods
fld
lock
out
jmp
lods
dec
jbe
dec
test
fcmovnu
lock
xor
in
and
mov
mov
xchg
leave
ror
cs
push
(bad)
loope
iret
repz
xlat
test
cld
int
pop
inc
push
pop
pop
xor
jne
xchg
dec
cmp
(bad)
jae
fisub
ss
stos
mov
ret
xchg
icebp
(bad)
cdq
cmc
dec
test
int3
daa
push
test
adc
jnp
or
push
cld
pop
cmp
(bad)
imul
mov
mov
or
movs
adc
les
fcomip
sub
jo
or
mov
(bad)
or
stc
jns
add
in
nop
ret
jp
inc
jno
loope
push
fidiv
dec
mov
in
lahf
push
pop
xor
fidivr
bound
sbb
and
mov
cmp
xor
test
aad
shr
pop
pop
sub
or
stos
ret
call
mov
fucomip
mov
call
cmp
stos
mov
rcr
push
and
jbe
mov
sbb
scas
push
dec
leave
push
jnp
call
jmp
in
addr16
cld
jmp
call
js
dec
call
dec
mov
and
and
scas
rcr
addr16
adc
out
ss
pop
or
mov
fst
cmp
retf
movs
adc
and
outs
cdq
adc
stos
sub
in
jae
ja
dec
mov
inc
retf
mov
popa
push
gs
pop
dec
cmc
inc
imul
or
adc
int3
fild
jns
sti
lods
fs
push
rol
adc
ret
sub
fs
daa
stos
inc
jg
int
ret
les
icebp
jmp
lds
jl
test
pop
push
jbe
cmp
cmc
inc
or
shr
(bad)
out
push
pushf
stos
dec
jns
push
shl
retf
jns
(bad)
fsubp
mov
fld
xlat
cmp
add
pop
mov
xchg
fild
lock
(bad)
stc
out
adc
ret
ins
sti
mov
out
dec
push
jge
lods
push
test
dec
mov
cmc
mov
cli
jge
hlt
and
xor
sbb
adc
test
adc
inc
push
add
fimul
pop
adc
push
xor
loope
push
into
mov
or
pop
xchg
sbb
and
jp
and
pop
dec
pop
aam
mov
aas
ror
mov
and
add
or
cwde
jle
inc
sub
sar
and
enter
cdq
scas
fmulp
jo
mov
add
jmp
loopne
xchg
mov
push
push
dec
test
xchg
shr
sahf
mov
nop
retf
pop
jle
(bad)
jecxz
ret
test
daa
xchg
dec
pop
push
dec
dec
sar
popf
cmp
cwde
add
gs
movs
xchg
mov
mov
xor
add
adc
mov
imul
pop
push
jecxz
repz
clc
pop
jns
fs
mov
push
lock
cmp
cmp
push
das
call
mov
pop
test
xor
dec
(bad)
test
rcr
dec
jge
loope
scas
push
push
cmp
loopne
add
add
ja
inc
or
call
fcomip
inc
lods
jns
and
sar
jmp
add
mov
dec
or
inc
inc
jg
sbb
mov
outs
and
push
adc
fidiv
mov
stos
rcl
mov
int
mov
call
retf
dec
mov
fwait
sbb
xor
sbb
push
lods
iret
and
imul
jl
jae
sbb
add
into
imul
push
push
popf
mov
enter
sahf
sub
and
loopne
ins
dec
popf
mov
popfw
cmp
out
push
(bad)
lods
cmp
(bad)
out
cmp
sub
stos
cld
out
mov
adc
outs
dec
pop
add
pop
mov
mov
jne
xchg
add
ret
sub
iret
fstp
xchg
pop
fld
cdq
push
push
add
dec
js
or
inc
ss
loope
mov
(bad)
stc
and
push
jp
ror
dec
into
aaa
fbstp
pop
add
stos
mov
jl
inc
push
add
cmp
inc
adc
and
sub
mov
popf
aam
mov
or
pop
pop
pop
pushf
xchg
xchg
stc
xchg
and
inc
adc
jle
add
lea
mov
pop
dec
int
or
out
sbb
or
adc
cmp
inc
hlt
cdq
inc
ins
sub
or
jae
or
push
inc
sbb
mov
dec
cmp
sti
ins
(bad)
push
mov
mov
jl
sub
cmps
or
push
or
call
mov
js
inc
add
mov
mov
fs
mov
cs
xchg
test
and
or
loopne
addr16
js
enter
push
imul
xor
enter
or
push
ja
sar
push
loop
and
aad
mov
sbb
cmc
mov
adc
cwde
retf
or
mov
movs
mov
xchg
fistp
iret
call
ins
jmp
sbb
int3
mov
adc
fdiv
push
cmp
pop
cmp
ins
xchg
sbb
pop
aaa
out
push
mov
dec
adc
or
inc
scas
inc
jno
sti
imul
imul
adc
cmp
repz
lods
jno
xchg
or
cmps
inc
fild
pusha
pop
sti
mov
imul
iret
jg
pop
and
mov
(bad)
fild
jecxz
stos
xchg
dec
daa
pop
vsubpd
jle
jbe
ficom
jmp
nop
or
cmp
pop
inc
xlat
retf
scas
jb
cmp
out
fwait
adc
into
push
xor
ds
push
mov
jmp
mov
pop
mov
cmp
aaa
sbb
shl
xlat
xor
add
push
lds
inc
(bad)
xlat
sub
pushf
xchg
push
ss
div
lahf
mov
in
mov
adc
(bad)
call
inc
push
cmp
jb
stos
pop
mov
and
imul
push
jnp
jmp
mov
push
pop
sub
ss
adc
das
mov
ror
movs
(bad)
or
xor
dec
mov
repz
ins
bound
dec
adc
aad
xchg
mov
mov
aad
ss
test
dec
push
jmp
push
push
sahf
into
shr
mov
add
and
push
or
jmp
sti
popa
mov
cmps
out
and
(bad)
bound
inc
and
or
sub
jl
inc
mov
xchg
xlat
iret
cmc
sbb
retf
ret
xchg
sahf
push
(bad)
std
out
mov
and
and
popf
push
cmp
(bad)
in
and
sbb
pop
mov
aas
mov
je
sbb
mov
jmp
cwde
popa
mov
or
pop
out
lods
enter
repnz
lahf
popf
loope
jns
ror
xor
xor
loope
out
adc
add
mov
mov
jmp
xchg
daa
shr
fadd
jmp
xor
add
jmp
ds
les
clc
fs
(bad)
fsub
dec
aas
sar
xor
dec
or
lods
push
adc
fadd
add
jne
arpl
dec
mov
push
adc
std
ret
dec
mov
icebp
jp
adc
(bad)
repnz
fsubp
jb
xchg
shl
cmps
sar
pop
jae
sub
pop
mov
jle
sub
jnp
jmp
cmp
test
mov
pop
(bad)
jb
(bad)
fimul
sbb
imul
dec
aam
loop
repz
inc
mov
repnz
dec
aaa
mov
out
shl
and
pop
lods
xchg
sub
or
jl
inc
movs
sahf
xchg
repz
inc
pushf
jmp
cdq
or
push
xlat
cmps
daa
mov
ins
jp
frstor
mov
lods
xchg
pop
leave
pop
(bad)
test
mov
out
add
ret
adc
shl
fistp
jo
sbb
add
test
jmp
retf
std
ds
sbb
pop
fdivrp
test
inc
cmp
xlat
jns
jmp
and
pop
inc
call
jns
mov
imul
dec
sub
jne
xchg
ja
pop
loope
sbb
pop
test
cmp
fisttp
xchg
dec
mov
sub
and
in
jno
mov
inc
push
stos
dec
mov
xchg
inc
cmp
out
add
add
inc
inc
fwait
call
sbb
fild
jge
repz
sbb
xor
aad
in
icebp
jnp
movs
cmp
and
(bad)
mov
xchg
fild
sub
jns
jp
xchg
cli
mov
mov
push
push
aad
sbb
or
leave
or
jb
pop
push
sbb
(bad)
xor
jb
jmp
sbb
xchg
js
fcomp
xor
sahf
in
lods
mov
xchg
jp
or
lods
dec
cmp
cmp
jmp
cwde
(bad)
movups
stos
mov
scas
xchg
sbb
ret
test
std
jmp
bound
cmp
enter
xor
add
arpl
xor
sbb
jnp
xchg
das
jl
shl
int
inc
(bad)
call
inc
cmp
push
shl
ins
ins
ret
xor
shr
mov
sbb
inc
jg
fnstenv
ja
cmp
pop
jmp
lods
cmp
mov
or
inc
hlt
push
pop
ret
inc
push
mov
movs
push
je
mov
imul
ret
pop
movs
add
sbb
fdivr
lds
in
adc
(bad)
mov
jecxz
xor
popa
daa
nop
je
inc
pusha
mov
pop
sbb
xchg
mov
or
push
xor
fldcw
fisub
sub
sbb
(bad)
cmps
stc
aas
stc
fld
jae
mov
sub
aam
aad
add
lods
in
push
xchg
adc
jge
shr
and
js
(bad)
std
and
xor
inc
(bad)
jo
push
retf
inc
or
test
imul
dec
mov
xor
js
cs
cdq
cli
or
mov
ins
pop
cmp
xor
xchg
inc
mov
ret
adc
call
push
or
pop
pop
and
mov
shr
lods
pop
xor
mov
cmps
(bad)
jmp
adc
push
fwait
stos
push
jmp
test
pop
(bad)
xchg
inc
(bad)
out
js
mov
inc
pushf
sbb
pinsrw
mov
sub
arpl
pop
jne
mov
mov
lock
fwait
daa
pop
inc
lods
sub
and
xor
out
pop
leave
dec
sbb
sub
jnp
cmp
in
cmp
fcomp
jne
cmp
loope
xor
and
inc
xor
cmp
lahf
mov
mov
daa
pop
or
jecxz
pop
pop
mov
jno
adc
jb
(bad)
push
jmp
scas
mov
(bad)
inc
repnz
loop
mov
clc
fdivr
pop
int
movs
inc
cs
dec
and
stc
jnp
jmp
repz
lods
hlt
push
adc
push
xchg
mov
ror
push
aad
es
mov
dec
movs
dec
and
xor
jne
sahf
xor
ret
lahf
test
(bad)
jae
dec
jne
hlt
jmp
mov
daa
mov
sub
enter
lock
mov
pop
push
loope
lods
xchg
dec
mov
imul
lods
sahf
add
dec
jmp
mov
inc
lds
mov
adc
bound
fs
push
mov
add
rcr
xchg
mov
(bad)
mov
call
and
mov
(bad)
and
mov
loope
rcr
(bad)
or
mov
jb
add
xchg
test
xor
div
push
or
aaa
mov
jbe
test
adc
jns
cmp
mov
mov
add
pusha
inc
icebp
xor
mov
sbb
pusha
add
xchg
xor
dec
inc
out
enter
adc
cmp
test
push
xchg
js
arpl
scas
sbb
(bad)
sahf
sbb
and
inc
push
dec
int3
and
adc
je
inc
dec
iret
push
mov
or
pop
(bad)
pop
outs
adc
mov
mov
jo
test
inc
mov
mov
push
retf
addr16
dec
repz
adc
lods
xchg
test
mov
pop
dec
aas
xor
add
fild
sar
rcl
add
enter
bound
arpl
inc
fisttp
cdq
sbb
inc
mov
push
lods
jb
pop
lods
dec
xor
std
pop
and
mov
fimul
leave
cwde
fst
mov
pop
mov
imul
pop
jo
movs
nop
and
call
fst
pushf
addr16
mov
lods
mov
adc
sbb
and
xchg
inc
xor
xor
xchg
pop
and
dec
sub
push
popa
les
rol
(bad)
xlat
sub
add
or
xchg
(bad)
inc
add
and
cdq
or
sub
ficomp
mov
jmp
dec
fdivr
mov
jbe
and
inc
or
mov
push
sti
sub
xchg
sti
test
lds
mov
(bad)
and
cwde
mov
inc
sub
add
addr16
sti
aas
jmp
jne
jge
in
sbb
(bad)
sbb
cs
in
push
ss
retf
fldln2
push
push
xrelease
scas
inc
ins
aas
jmp
sub
test
jmp
and
lock
and
mov
jle
sub
xlat
outs
mov
inc
mov
inc
jecxz
mov
stos
sub
xchg
popf
cwde
loope
fistp
daa
imul
and
sti
xor
fldl2t
scas
cwde
inc
es
cmps
(bad)
inc
mov
rcl
adc
mov
sub
je
mov
ret
mov
xchg
fs
outs
dec
add
outs
xor
loope
inc
sub
(bad)
retf
cwde
cmps
addr16
mov
movs
test
fs
mov
sub
int3
test
mov
or
sar
pop
pop
imul
or
out
sub
lock
ret
mov
push
sub
scas
addr16
(bad)
cmps
enter
aam
bound
mov
and
xlat
daa
jbe
pop
retfw
mov
(bad)
xor
in
inc
cmp
mov
adc
sbb
fistp
sbb
sub
sub
xchg
mov
hlt
xor
cmp
sbb
pop
sahf
iret
dec
sbb
es
xchg
pushf
fst
ja
add
ins
jae
inc
cmp
std
xor
pop
jmp
dec
imul
sub
pushw
in
mov
scas
xchg
fsub
retf
pop
mov
mov
jnp
daa
dec
pop
sbb
aad
add
cmp
bound
xchg
sahf
aad
mov
jae
in
mov
leave
outs
mov
addr16
inc
fistp
retf
mov
fdiv
mov
and
dec
cmps
stos
mov
aad
mov
hlt
dec
sub
mov
loope
sub
pop
add
out
movs
sub
dec
ins
fstp
int
leave
imul
add
add
fcomp
imul
fs
leave
jecxz
fild
mov
adc
pop
jns
add
sbb
inc
ins
repnz
clc
dec
das
xor
inc
dec
shr
adc
pop
cs
loope
and
inc
test
and
sub
push
out
fld
les
jae
cmp
stc
sub
push
fs
push
es
xor
imul
aad
iret
loop
mov
loopne
fst
pop
pop
push
cwde
nop
jae
in
imul
mov
outs
dec
hlt
and
dec
pop
jmp
neg
add
test
pop
adc
push
inc
or
push
mov
sbb
movs
mov
add
or
mov
sbb
adc
inc
pop
ins
jle
fstp
stos
imul
stc
xor
rep
jo
sub
scas
fs
leave
sahf
jno
jg
mov
retf
xor
mov
(bad)
and
mov
push
adc
mov
cmps
push
(bad)
stos
mov
pop
or
nop
push
pusha
fistp
xchg
sub
rcl
mov
push
xor
sub
cwde
jns
mov
(bad)
push
dec
ss
and
push
cmc
xor
lea
cmp
cmp
cmp
je
repz
test
shl
cmps
sub
add
dec
inc
test
in
add
pop
test
arpl
sbb
(bad)
int3
mov
jo
sbb
xchg
(bad)
repz
xchg
mov
xor
stos
(bad)
fcmovbe
in
cs
bswap
scas
fcom
mov
mov
sub
push
(bad)
mov
sbb
inc
in
jmp
out
out
add
(bad)
mov
leave
std
xchg
pop
mov
mov
mov
inc
dec
outs
mov
adc
push
sbb
jno
aam
pop
and
in
imul
mov
sub
or
out
fstp
xchg
fidivr
mov
js
sub
fistp
mov
fs
test
(bad)
in
ja
mov
inc
mov
ss
scas
jg
adc
jno
or
ror
sub
adc
retf
xchg
ins
outs
shr
stc
and
push
jnp
pop
psubw
cdq
(bad)
call
xchg
sub
pop
push
jae
fild
mov
inc
push
int3
loop
xor
fdiv
pop
mov
mov
fisubr
jns
js
test
cmp
mov
aaa
ins
mov
inc
icebp
ret
loopne
sub
pop
pop
and
xor
adc
add
adc
mov
test
xor
cwde
xor
jae
fstp
into
mov
mul
sub
cmp
loope
dec
in
mov
dec
mov
jl
out
enter
xchg
push
jbe
push
mov
push
jmp
ficom
sub
stc
and
dec
test
pop
inc
fiadd
pusha
int
or
add
jo
rsqrtps
add
sbb
popa
xchg
dec
outs
cld
outs
push
mov
adc
xor
pop
es
adc
test
inc
imul
fidiv
pop
mov
in
inc
pop
fcmovnb
icebp
dec
(bad)
xchg
pop
stc
cdq
adc
fisubr
mov
aam
sub
stos
loope
mov
pop
sbb
cmps
sub
or
jle
dec
sbb
xor
adc
ja
retf
out
mul
movs
sti
mov
pusha
aam
les
dec
sbb
and
dec
dec
scas
cmp
int
xor
jl
mov
or
push
jmp
sub
pop
mov
jne
loopne
inc
loope
mov
(bad)
int
and
inc
cdq
(bad)
shr
cmps
xlat
dec
(bad)
cmc
push
inc
inc
test
inc
out
movs
or
dec
xchg
xor
mov
push
dec
adc
adc
dec
je
adc
pop
js
sbb
sub
(bad)
out
xchg
jmp
xchg
or
cmps
pop
fisttp
(bad)
cdq
inc
sbb
sub
xchg
dec
sar
hlt
je
jl
jmp
arpl
sti
fwait
or
cmp
lods
sbb
pop
xchg
aam
fsub
fs
sbb
and
dec
es
out
pushf
test
lods
inc
dec
pop
xchg
add
cli
iret
sub
lods
push
sbb
pop
sti
scas
mov
mov
jbe
mov
out
cmp
bt
rcr
or
adc
fdiv
cmps
push
dec
in
hlt
retf
sbb
inc
icebp
sub
push
dec
pop
inc
dec
arpl
sbb
cmp
mov
gs
jmp
das
adc
add
scas
xchg
mov
loop
fbld
pushf
into
mov
add
rcl
data16
push
outs
push
cmps
cld
xor
jne
xor
daa
xchg
adc
pop
add
(bad)
inc
lea
dec
cld
ds
sbb
lods
adc
test
or
mov
shl
jne
(bad)
mov
(bad)
xor
add
lea
inc
and
pop
pusha
jge
test
inc
inc
enter
imul
jnp
out
ds
(bad)
mov
jmp
jg
or
rcr
retfw
mov
inc
sbb
mov
and
cdq
inc
and
jl
lahf
cmp
out
dec
add
(bad)
adc
push
(bad)
push
repz
and
mov
movnti
cdq
cmc
lods
mov
cmp
jl
dec
rcr
shl
cmps
cli
retf
dec
mov
adc
mov
daa
loopne
push
push
xlat
ins
jb
call
shl
ret
or
mov
loop
fidiv
inc
fstp
add
shl
lds
mov
sbb
lds
and
mov
mov
inc
lock
outs
pop
les
xor
inc
jmp
xchg
xor
loope
cmp
(bad)
pop
jo
xchg
ds
fiadd
repz
rcr
sbb
es
retf
cmp
add
ret
adc
add
outs
fsubr
(bad)
fbld
and
fisubr
movs
mov
out
mov
aaa
sar
push
daa
jmp
call
and
pop
int3
mov
xor
sub
rcr
or
dec
aam
mul
je
add
cs
cmp
bnd
and
cmp
stos
sub
xor
in
cdq
and
test
jno
sub
xor
call
scas
dec
fs
cmp
imul
sbb
cmp
jae
jp
or
std
mov
adc
ja
sbb
shl
add
pop
and
fwait
xchg
inc
sbb
and
lea
in
inc
sbb
pop
push
repnz
lods
sub
je
loope
or
lods
sbb
call
sbb
jmp
jae
mov
inc
jns
dec
push
mov
retf
sti
out
lahf
outs
daa
or
add
xchg
mov
bound
in
sub
mov
repz
push
mov
in
jae
dec
mov
xchg
les
and
out
loope
in
dec
mov
fs
mov
pop
pop
data16
popf
fbld
mov
adc
sbb
add
xchg
sub
ficom
push
bound
(bad)
sbb
cli
or
int3
xor
jns
xor
adc
jns
sahf
jae
out
test
lahf
cmp
aam
fwait
mov
cmp
test
sbb
pop
in
mov
loop
mov
push
cmc
push
mov
mov
int
mov
ds
push
cmp
ror
dec
mov
pushf
shr
adc
cwde
(bad)
stos
mov
cmp
jo
ret
pop
lea
call
shl
xchg
ja
fbstp
imul
imul
das
mov
cdq
or
xor
loop
pusha
and
mov
fst
int3
jno
mov
test
dec
adc
aam
(bad)
pop
les
(bad)
cmps
xor
jae
movs
and
fcomi
scas
adc
mov
imul
fisttp
jnp
mov
push
fucomp
and
push
fdivr
xor
xor
cmovo
sbb
push
rcr
loopne
lock
std
add
xchg
cmps
in
lock
push
stc
xlat
movs
ret
push
int3
xor
dec
into
xor
mov
pop
dec
in
je
ret
pusha
jl
mov
push
push
enter
popf
icebp
and
mov
aam
lds
and
mov
out
jns
pop
cwde
and
fs
mov
jecxz
dec
fisttp
dec
push
fiadd
(bad)
xor
dec
sub
add
rcl
add
mov
out
in
add
cmps
std
sti
pop
pop
fldcw
arpl
xor
xchg
mov
xor
loopne
and
mov
mov
fcom
cmp
(bad)
sub
push
aam
idiv
mov
int
cmp
inc
icebp
cmp
inc
push
(bad)
sub
inc
xchg
mov
lds
dec
int
dec
repz
jno
inc
mov
mov
nop
test
dec
or
ins
jmp
xchg
xchg
push
popa
mov
pop
sbb
adc
fdivr
in
pushf
fisubr
sti
mov
loope
imul
mov
cli
out
cld
loop
or
push
sub
lods
xchg
adc
(bad)
(bad)
push
aam
or
in
pop
push
in
retf
push
xchg
out
ror
in
xchg
loopne
out
or
fld
cmp
push
imul
rcr
push
push
ret
adc
sub
mov
cwde
stos
stos
jns
inc
xor
(bad)
sahf
mov
inc
sbb
mov
jno
and
and
sahf
pop
mov
daa
push
adc
jg
jg
jp
pop
inc
stos
cmps
cmc
stos
ins
mov
xor
je
inc
pop
xor
(bad)
outs
imul
cld
cli
(bad)
pusha
cmp
arpl
ja
stos
in
aam
adc
xor
out
retf
dec
jp
iret
or
cmp
in
hlt
ins
bound
push
add
push
jecxz
ror
hlt
adc
mov
test
dec
add
out
pop
call
in
sub
sbb
cmp
xor
jmp
(bad)
adc
mov
rol
pop
pop
popa
inc
sahf
or
js
sbb
dec
test
mov
shl
jnp
sub
ror
retf
inc
ins
or
aas
int3
pop
in
enter
sub
movs
dec
xlat
sbb
scas
fnstenv
mov
(bad)
movs
bound
dec
int3
add
repnz
add
mov
jne
jge
inc
ja
cmp
lock
andnps
jmp
inc
inc
shl
pop
inc
mov
adc
inc
jmp
xchg
xchg
xchg
xchg
pop
jne
cwde
test
adc
int3
pusha
xor
mov
inc
and
xchg
dec
push
nop
jno
arpl
rol
popf
sbb
push
movs
pop
jmp
push
xor
and
out
xor
add
mov
push
div
inc
test
loopne
clc
cwde
jg
popf
pop
jmp
movs
pop
imul
xor
xor
aam
rcr
mov
pop
je
aas
mov
add
inc
pusha
and
cmp
(bad)
int3
imul
(bad)
es
push
inc
jp
hlt
loope
es
xor
jmp
sbb
cmpps
cmp
sbb
mov
xchg
call
push
push
xor
mov
mov
inc
adc
icebp
dec
jns
icebp
scas
arpl
fimul
aam
popf
push
cli
mov
xor
test
pop
ret
shl
inc
and
sub
pop
push
add
or
scas
pop
pushf
push
ret
fisttp
int3
jmp
clc
or
arpl
xlat
xor
fucomp
push
inc
ret
shl
dec
nop
(bad)
fcmovnbe
scas
fcmovu
ret
xlat
out
mov
inc
xchg
push
inc
jp
dec
das
enter
add
push
sbb
lods
pop
sub
icebp
or
cmp
ja
cwde
outs
sbb
and
leave
sub
dec
shl
js
loopne
bnd
xchg
add
clc
mov
jge
sti
sar
out
push
mov
mov
mov
jecxz
test
icebp
mov
mov
stc
xchg
adc
clc
fwait
scas
movs
jmp
adc
movs
out
je
cmp
push
sbb
inc
je
shl
mov
loopne
adc
jne
out
fist
nop
jmp
lock
xchg
pmaxsw
xlat
(bad)
and
add
dec
cmps
xchg
cmp
into
sub
pop
ins
mov
repz
mov
xor
lock
pop
sti
sub
cmps
mov
(bad)
outs
ret
pop
jecxz
pop
fcomp
sbb
icebp
aaa
sbb
pop
pop
sti
fld
into
lds
mov
xchg
scas
pop
pushf
adc
cld
fs
or
jb
shr
test
push
jmp
cmp
cmp
pop
cwde
addr16
adc
pop
mov
xchg
shl
mov
sub
addr16
js
mov
or
pop
loope
stos
sub
fucom
shl
iret
add
mov
fild
mov
cmp
xchg
mov
pop
cmp
inc
xor
loopne
outs
out
imul
xlat
pop
ret
test
jno
repz
xor
outs
ins
xchg
and
cmp
cdq
pop
or
jb
jbe
sahf
inc
push
sbb
sbb
sub
pop
jp
cmp
or
sbb
test
sub
mov
xor
scas
inc
xor
xor
or
out
ret
bound
add
sub
mov
fsubr
mov
or
pop
fadd
dec
jge
rol
scas
rcr
aaa
fwait
movs
out
sbb
jp
pop
bound
in
arpl
jne
pop
and
jmp
mov
mov
shl
lods
sub
and
xchg
out
dec
dec
adc
sub
ja
mov
and
push
out
std
shl
push
mov
cmp
dec
add
pop
xor
jo
sub
jns
adc
xchg
add
out
adc
inc
jae
js
inc
scas
mov
(bad)
js
add
mov
retf
push
leave
aas
xchg
inc
stc
cmp
jo
push
jbe
or
das
push
jb
jb
call
add
mov
aaa
xchg
repz
icebp
xchg
call
rol
xchg
cmps
sar
mov
movs
jo
sub
lods
mov
sar
dec
jmp
js
inc
cld
mov
ds
mov
sbb
nop
add
jecxz
add
jns
dec
xor
lahf
mov
lds
sub
outs
lahf
push
popf
dec
es
xor
popf
shr
aam
int
loopne
xchg
jle
jae
pusha
mov
mov
lahf
rcr
adc
mov
cwde
test
jnp
mov
mov
test
(bad)
pop
(bad)
pop
std
inc
jg
ins
sub
sahf
imul
dec
dec
pop
repnz
mov
pop
jo
add
pop
xchg
aaa
cmp
in
test
jae
or
push
(bad)
xchg
adc
dec
add
aam
push
add
clc
lods
neg
jae
sbb
fist
xlat
cmp
(bad)
cmp
sub
imul
inc
movs
int3
push
retw
jns
cs
add
mov
xor
sbb
mov
retf
ins
rol
dec
xor
sahf
cmp
fiadd
cs
lahf
scas
fmul
dec
fcomp
push
loop
mov
cmp
leave
mov
scas
cmp
rol
mov
pop
and
fist
(bad)
mov
aaa
adc
add
mov
mov
push
and
mov
mov
out
aam
lods
stc
into
xchg
sub
cs
push
mov
daa
stos
(bad)
xor
shl
mov
jae
rcr
mov
push
jg
aam
add
shr
jne
or
mov
cmp
lahf
push
sahf
push
loopne
std
push
into
dec
sbb
sar
(bad)
clc
cwde
xchg
push
es
test
test
mov
mov
call
sub
xchg
inc
retf
stos
ds
mov
lds
retf
jp
hlt
sub
scas
mov
xlat
push
xor
jmp
xchg
xchg
stc
cmc
pop
adc
mov
arpl
and
fistp
xchg
sub
bnd
cli
push
daa
mov
push
mov
mov
jnp
imul
and
aad
cmps
(bad)
outs
add
xchg
cmp
mov
pop
jns
inc
inc
jmp
mov
push
dec
pop
jg
loope
sbb
fdiv
out
fst
mov
sub
js
in
aam
push
int
in
aad
cmp
xor
adc
inc
and
or
add
cdq
cmp
sub
in
pop
mov
or
push
push
inc
aad
loopne
pop
cs
dec
or
in
popf
mov
sbb
jp
cmps
fbld
push
inc
mov
out
loopne
sbb
loop
and
ss
mov
movs
leave
mov
pop
stos
pop
dec
xchg
mov
mov
jecxz
std
fisubr
xchg
(bad)
out
ss
or
icebp
movs
dec
push
mov
stos
add
cld
gs
jmp
and
or
or
xor
and
leave
mov
shl
xchg
pop
outs
mov
or
bound
out
call
fimul
adc
(bad)
xchg
int
setns
cld
or
push
push
dec
sbb
xchg
sti
cmc
nop
(bad)
push
mov
and
scas
xlat
mov
sar
and
sar
push
retf
shl
jge
adc
sbb
sub
or
(bad)
std
mov
adc
in
or
loope
cmp
jns
bound
mov
call
mov
xchg
ds
add
mov
jne
clc
push
mov
xor
scas
pop
data16
and
mov
cmc
(bad)
cli
push
sub
sbb
push
inc
or
enter
jo
or
add
hlt
loope
cdq
call
loop
or
in
xchg
(bad)
clc
fsub
sbb
ret
cmp
iret
out
push
pop
lds
dec
adc
add
dec
call
jnp
data16
cmp
jmp
loop
xor
sbb
js
sub
test
aaa
pop
cwde
ret
out
outs
into
out
and
jb
retf
adc
push
lods
sub
xor
mov
repz
aas
dec
mov
mov
mov
add
scas
js
movs
fistp
mov
ins
pop
mov
jb
cmp
jmp
xchg
enter
rol
mov
hlt
leave
push
test
sahf
movs
out
cmc
movs
push
lods
mov
scas
add
outs
hlt
movs
fcos
mov
push
pop
or
push
fdiv
fs
jmp
lods
scas
push
lods
dec
jecxz
outs
loop
sbb
call
in
mov
fnstenv
jg
adc
xor
fist
sahf
dec
or
and
in
jb
lahf
retf
add
adc
pop
ficom
push
push
(bad)
retf
das
and
mov
mov
adc
and
adc
cmp
cmc
inc
cmps
push
mov
call
xor
push
jo
mov
test
ds
enter
cmps
xchg
mov
add
adc
pop
lods
pop
push
pop
repz
imul
icebp
(bad)
pop
icebp
xchg
shr
retf
ret
xchg
cmp
pop
dec
es
push
repnz
(bad)
sub
and
retf
push
std
std
out
mov
outs
mov
ret
into
mov
pop
es
fld
pop
push
mov
mov
xchg
mov
jl
dec
inc
sub
mov
jne
inc
dec
aas
aas
lea
mov
add
or
jecxz
xchg
add
adc
xchg
out
xor
sbb
(bad)
or
mov
in
dec
nop
fs
cmps
mov
inc
repz
retf
mov
cmp
call
add
pop
rcr
int
(bad)
dec
adc
lea
jge
add
loop
(bad)
not
jb
cmp
ins
cld
out
mov
dec
lds
mov
pop
cmp
shr
mov
mov
mul
mov
push
je
jbe
jb
fdivr
movs
mov
adc
pushf
lds
push
adc
repnz
xchg
cmc
mov
loopne
push
and
call
mov
cmp
mov
call
pusha
mov
lods
cmc
pop
xchg
clc
gs
xchg
lds
add
ja
fdiv
call
xchg
sti
sub
test
dec
xchg
dec
inc
cmp
sbb
test
mov
xor
mov
pop
jb
mov
(bad)
mov
jmp
sub
mov
mov
xchg
aaa
xor
mov
fimul
jg
cwde
cld
ret
sar
adc
xchg
push
fisub
xchg
cmp
loop
(bad)
cdq
stos
adc
cmp
mov
fucom
fwait
scas
xor
push
rol
dec
repnz
jl
push
inc
sbb
ins
inc
pop
jge
xor
js
jl
dec
movs
mov
or
push
inc
xlat
lods
xchg
sub
push
ret
sbb
cmp
mov
jmp
jno
fist
mov
rol
scas
xlat
pop
out
pusha
mov
shl
out
(bad)
fisttp
jmp
cmp
mov
aaa
xchg
xchg
fwait
mov
xchg
xlat
adc
sbb
mov
xchg
(bad)
sbb
adc
cmp
xchg
adc
(bad)
ins
test
or
(bad)
and
adc
and
sub
xor
scas
nop
sahf
fld
xor
xchg
popa
outs
arpl
mov
fxch
mov
xor
loop
pop
mov
stos
or
leave
pop
mov
mov
sub
push
inc
addr16
out
cmp
push
test
mov
dec
mov
jmp
lock
cmp
ins
jge
inc
imul
mov
xor
mov
adc
(bad)
loop
or
stc
cmp
fcmovnbe
(bad)
dec
push
js
bound
sbb
mov
xor
or
(bad)
stc
mov
dec
lgs
aas
xchg
bound
push
jno
xchg
jnp
test
sub
loope
dec
mov
ret
test
call
add
icebp
jnp
inc
lds
xlat
pop
cli
mov
mov
lods
repz
xor
push
repnz
(bad)
cmps
(bad)
retf
mov
cli
call
adc
sti
pop
ret
or
shl
movs
es
sub
and
hlt
xchg
dec
fild
cmc
in
xchg
sub
sbb
sub
dec
inc
test
mov
scas
mov
mov
arpl
shr
ret
scas
aam
call
fcom
sahf
leave
ds
adc
retf
inc
dec
push
pop
leave
(bad)
xchg
mov
lock
xor
iret
aaa
mov
mov
jle
adc
jle
adc
xor
sub
sub
push
dec
dec
adc
mov
and
or
nop
sbb
mov
popa
xchg
repnz
movs
mov
pop
cvtpi2ps
test
cli
inc
sbb
fwait
leave
test
cmps
fdivr
and
mov
adc
jmp
ja
xor
in
call
in
out
jge
call
jne
sub
xor
and
out
iret
fisttp
adc
mov
push
scas
gs
or
or
mov
jo
movs
aas
fxch
sbb
or
lock
mov
or
jge
in
adc
scas
inc
cmp
push
hlt
inc
je
mov
push
sahf
addr16
test
shl
les
push
push
js
push
scas
bnd
dec
mov
add
sub
cmps
cmp
add
(bad)
imul
popf
add
or
lods
sub
jo
(bad)
mov
sbb
inc
scas
pop
ins
sbb
cmps
bound
and
mov
movs
arpl
xchg
fdivr
pop
add
call
fs
lods
(bad)
mov
aaa
push
sar
cmp
and
xchg
add
jo
push
xor
pop
jmp
mov
pop
cli
push
int3
sbb
ret
push
adc
or
stc
jmp
(bad)
out
pop
into
push
loopne
mov
pop
retf
sub
(bad)
(bad)
sti
arpl
jmp
fild
pop
(bad)
popa
popf
mov
add
test
lods
or
cmc
mov
xchg
movs
(bad)
and
repnz
pop
int
(bad)
xor
call
js
mov
xor
aas
aaa
jbe
jnp
fs
aaa
(bad)
jmp
sub
xchg
pop
lock
cmp
test
and
cmc
ror
lahf
mov
xor
mov
add
mov
mov
or
frstor
sahf
int
jle
pop
jo
gs
fwait
ret
inc
loop
cmp
push
out
push
cwde
ss
mov
cmps
pusha
jns
xchg
fs
push
rol
add
fcomp
pop
sbb
mov
pop
cwde
inc
ss
call
test
scas
cmp
loopne
cmp
ret
scas
out
dec
lock
(bad)
pop
adc
add
outs
mov
(bad)
test
sbb
popaw
fcomp
test
and
(bad)
push
jnp
fild
pop
(bad)
add
vcvtpd2dq
sub
and
pushf
mov
xor
mov
repz
push
in
cmp
mov
cmp
push
inc
(bad)
(bad)
xchg
loop
sub
(bad)
or
mov
dec
and
cmps
lods
or
mov
pop
xor
inc
and
scas
cwde
add
(bad)
dec
pushf
inc
push
jl
sbb
pop
call
jb
xchg
cdq
jmp
loopne
mov
lds
xor
loope
not
pop
and
add
mov
sbb
ds
retf
push
mov
hlt
xchg
pop
adc
(bad)
sub
js
jo
mov
sub
pop
lods
aam
js
mov
sub
jg
jno
shr
pop
adc
mov
jo
dec
std
clc
or
pop
outs
aas
pop
inc
push
sbb
mov
in
stc
std
mov
dec
loopne
and
push
sub
inc
add
xor
and
ror
ret
ja
adc
je
fsub
test
mov
aad
add
js
or
pusha
movs
stos
sbb
xchg
dec
ror
pop
inc
add
sbb
arpl
in
idiv
jns
push
push
mov
sub
aam
pop
xor
ins
popa
shl
je
pop
push
push
aam
jp
lock
mov
in
fisubr
leave
retf
cmp
dec
jg
cmp
in
xlat
(bad)
xchg
outs
sahf
cmp
addr16
push
or
adc
rcl
pop
cmp
xchg
mov
mov
popf
cmc
sbb
neg
push
sbb
in
sbb
mov
jecxz
and
test
out
int3
iret
popf
sbb
adc
and
in
xchg
xor
nop
jns
out
es
sub
les
inc
stc
popf
sub
xor
inc
pop
mov
ss
fsubrp
adc
or
jbe
pop
scas
pop
aam
out
test
sbb
push
fiadd
jbe
and
neg
pop
outs
or
adc
imul
dec
clc
sub
ds
stos
adc
xor
fcomp
mov
cmp
inc
add
nop
aam
aaa
xchg
pop
test
rcr
sub
ror
and
jb
sahf
ror
push
ret
daa
cmp
push
data16
scas
or
xchg
push
sub
or
loope
test
cmp
std
lock
pop
add
imul
test
inc
inc
cmps
leave
retf
jp
out
dec
inc
icebp
mov
(bad)
sti
cmps
or
ret
mov
adc
sbb
sar
xor
mov
aaa
push
rol
in
stos
(bad)
jmp
mov
mov
fwait
jns
pop
jb
push
sub
out
shl
mov
add
neg
ds
js
mov
in
dec
es
or
fdiv
js
movs
lock
mov
xchg
mov
xor
adc
mov
es
movs
dec
adc
add
aaa
sbb
adc
aam
mov
retf
sbb
call
adc
rol
int
ret
xchg
popa
push
shr
data16
lods
jb
cmp
push
cs
adc
sti
(bad)
and
adc
add
test
jb
add
sbb
out
and
xor
imul
dec
arpl
or
ds
jmp
into
das
mov
sbb
nop
adc
test
sbb
cmp
fwait
sbb
enter
fiadd
push
jge
mov
cs
arpl
imul
push
push
dec
xchg
jmp
loopne
inc
and
cdq
sub
cwde
pop
shl
mov
aas
adc
(bad)
xor
cs
imul
daa
sub
jmp
cmps
pop
jmp
rol
out
shr
lds
mov
xchg
adc
arpl
pop
xchg
or
jecxz
adc
jne
mov
leave
dec
mov
push
test
mov
and
in
rol
bound
xor
sti
pop
add
xlat
je
adc
xrelease
test
arpl
cmp
nop
sbb
dec
or
retf
inc
dec
jmp
int3
jnp
adc
and
inc
leave
mov
xor
jb
adc
mov
loope
xchg
(bad)
cmp
aam
inc
out
lds
mov
aas
or
jl
fcmovnbe
jno
push
pop
jne
xor
inc
add
sub
ds
mov
hlt
(bad)
(bad)
outs
jne
jo
lea
sub
ja
retf
push
rol
dec
sbb
jg
adc
jns
fmul
inc
xchg
cmp
and
(bad)
mov
cmp
jmp
out
test
dec
push
fsubr
push
mov
sbb
mov
sub
aaa
movs
mov
or
xchg
pop
and
jb
or
dec
ss
add
stos
loopne
sub
lds
mov
mov
int3
adc
loop
and
jbe
push
xchg
ins
and
in
lds
ss
pop
movs
(bad)
sar
mov
lods
out
jl
shl
dec
or
mov
mov
xchg
mov
iret
sbb
shl
xchg
imul
fdiv
add
ds
rol
sub
jecxz
ret
loopne
mov
lods
fwait
mov
mov
inc
fdiv
fadd
ficomp
ja
out
pop
add
sahf
push
and
mov
leave
inc
dec
and
push
and
dec
(bad)
mov
add
bound
mov
push
xchg
and
inc
jp
add
sbb
sbb
inc
fild
adc
stos
test
jno
fcomi
shl
jecxz
jns
addr16
or
int3
pop
into
ss
or
pop
fisub
ret
pop
xchg
fs
stos
imul
ror
(bad)
out
ja
mov
sbb
cmp
movs
mov
jb
loope
call
push
das
mov
loop
cmps
add
jbe
xor
loope
mov
mov
lock
call
cmp
aam
rcr
dec
lods
test
adc
add
nop
add
in
dec
pop
test
xchg
movs
adc
in
jne
inc
adc
lods
sbb
adc
mov
out
not
jmp
in
fld
pop
or
enter
sbb
adc
sbb
(bad)
xchg
jmp
js
adc
adc
iret
push
iret
iret
sub
loope
fs
bnd
jbe
xchg
rcr
jo
ret
jae
mov
stos
xor
lods
iret
dec
push
jecxz
add
shl
inc
sub
mov
and
mov
xchg
call
(bad)
cmp
call
sti
outs
and
outs
pop
ins
ret
xlat
(bad)
pop
xchg
add
and
push
push
imul
(bad)
mov
maskmovq
test
rcr
pop
dec
mov
dec
add
into
push
ficom
fnstcw
lds
fnstcw
dec
test
bswap
or
pop
mov
iret
cmp
push
jecxz
inc
cwde
adc
(bad)
imul
sub
cli
jecxz
mov
xchg
sbb
scas
xchg
sar
xlat
or
ja
adc
pop
push
jp
setg
daa
sbb
test
fadd
frstor
mov
dec
js
adc
imul
icebp
cmp
js
jmp
sub
lock
dec
in
aad
xor
dec
fadd
cmp
add
fild
sub
sahf
inc
cld
fistp
iret
sti
push
fs
arpl
sbb
cmps
mov
xor
mov
data16
ja
jo
daa
xor
retf
loope
test
pop
add
or
jne
cmc
retf
cld
xchg
cmp
push
(bad)
popf
xor
push
icebp
push
out
jle
xlat
and
addr16
pop
movs
xor
jno
xchg
add
and
test
xlat
pop
rcl
xchg
shl
xlat
adc
shl
and
les
inc
neg
adc
and
daa
or
sbb
cmp
js
adc
jno
ret
and
(bad)
(bad)
fnstenv
or
into
js
add
outs
push
mov
ror
shr
in
shl
and
add
neg
rol
ins
movs
jno
das
aam
cdq
mov
inc
dec
nop
adc
adc
sbb
jnp
test
add
fistp
fisubr
cmp
inc
xchg
aas
pop
and
cmp
or
(bad)
aam
mov
xor
dec
arpl
xchg
(bad)
lods
aam
fmul
or
dec
pop
pop
mov
dec
rcr
adc
mov
push
jns
xchg
bt
pop
movs
dec
and
aaa
mov
adc
iret
addr16
push
and
xchg
ins
cmps
adc
sub
push
sbb
xor
mov
cdq
and
pop
push
std
inc
ds
cwde
sub
addr16
pop
aam
movs
mov
iret
leave
inc
or
pop
pop
rcr
xchg
int3
loope
and
loop
dec
lahf
out
mov
or
hlt
pushf
xor
stos
cmp
test
inc
inc
xor
and
xchg
mov
shl
jecxz
push
call
and
aad
cmp
push
inc
jnp
clc
mov
enter
in
and
mov
sahf
push
(bad)
into
cli
(bad)
scas
dec
pop
cwde
(bad)
fwait
ins
int
fimul
push
pop
scas
popa
test
loopne
xchg
(bad)
or
sub
xchg
inc
xchg
xchg
je
adc
pop
and
loope
dec
pop
outs
mov
imul
add
jmp
sbb
stos
cmc
ret
sti
xchg
push
mov
fs
(bad)
imul
pop
in
outs
and
gs
out
mov
in
int3
call
dec
es
inc
push
xchg
xchg
das
and
mov
jl
pop
jp
pop
call
in
and
xor
add
mov
mov
mov
out
and
pop
pop
mul
movs
and
xchg
gs
mov
jmp
addr16
pop
retf
outs
hlt
hlt
inc
mov
sub
cmp
mov
jg
jge
call
pop
and
mov
push
imul
sub
jae
gs
cwde
xlat
fwait
sahf
jmp
stos
aad
(bad)
or
jns
retf
fdiv
(bad)
jnp
lods
jne
adc
xchg
aad
jg
jmp
cmps
sub
inc
test
ss
repz
cs
inc
(bad)
ror
daa
int3
or
js
xor
stos
sub
std
clc
daa
int3
loopne
push
mov
cmp
ror
es
sub
repz
sbb
leave
mov
lock
scas
sbb
mov
cmc
push
inc
mov
repnz
enter
loop
repz
jle
std
xlat
jbe
mov
cld
cwde
adc
xchg
outs
xor
(bad)
cmc
adc
pop
dec
loopne
dec
adc
jecxz
arpl
sbb
iret
xchg
push
inc
cmp
shl
mov
(bad)
mov
shl
and
dec
jecxz
and
jg
sbb
pop
in
ins
ret
in
aad
dec
jbe
cwde
cdq
inc
mov
dec
(bad)
mov
xchg
inc
xor
mov
mov
jge
jmp
dec
jo
push
(bad)
fldenv
jle
push
movs
xlat
adc
jge
pop
jmp
xchg
cmp
jle
cmp
push
rcl
dec
push
mov
xchg
or
push
retf
pop
jmp
cmp
movs
or
mov
mov
or
push
mov
cwde
dec
add
sub
xor
and
cdq
push
out
push
mov
call
jmp
mov
push
pop
cmp
or
jl
jge
scas
stos
jmp
add
push
daa
pop
or
and
sub
add
(bad)
xchg
rol
push
jecxz
aam
fsubr
rol
jae
xchg
(bad)
ficom
mov
jne
fdivp
fmul
dec
ret
fcmovnb
sub
(bad)
pop
ds
repnz
mov
cld
lods
aaa
xor
dec
inc
inc
and
sbb
into
pop
xchg
test
xchg
aas
call
cmp
jl
fadd
adc
cs
lahf
enter
xchg
pop
test
fistp
mov
sbb
popa
pop
inc
xchg
int
add
adc
and
adc
pop
pop
inc
and
cmp
or
jmp
push
adc
sti
jle
jb
add
sahf
scas
pushf
or
fist
jmp
mov
add
add
aad
mov
call
cmp
les
nop
rcr
inc
or
bound
cli
inc
ja
mov
aas
outs
es
data16
out
mov
inc
adc
pop
cmp
push
test
sbb
ucomiss
imul
test
(bad)
ja
loopne
scas
gs
rcr
in
dec
sub
push
icebp
fsub
mov
jnp
repnz
popf
dec
jmp
or
pop
fld
test
outs
(bad)
(bad)
inc
hlt
xchg
clc
xor
cmc
mov
ins
rcl
out
sbb
xchg
ins
xchg
(bad)
in
pop
jmp
or
sub
or
popf
repnz
push
and
mov
mov
pop
push
stos
inc
jmp
mov
iret
push
cs
xchg
sub
das
jg
ss
lea
or
xchg
mov
into
push
bound
jne
cmp
movs
stos
gs
sbb
popf
stos
mov
adc
xor
ss
push
(bad)
loopne
inc
inc
fld
xchg
div
sbb
jecxz
addr16
shl
add
scas
test
xchg
pop
imul
std
fcmovb
sbb
sub
ja
pop
and
push
pusha
jmp
(bad)
xchg
adc
inc
inc
mov
fdiv
scas
push
xor
and
imul
ins
push
push
cmps
retf
xlat
mov
sub
and
adc
inc
cli
sbb
dec
jl
into
rol
push
nop
cld
imul
add
or
mov
pusha
inc
and
into
cmp
and
fwait
repnz
inc
xchg
or
into
mov
or
fist
int
stos
xchg
dec
cmp
and
push
sub
xchg
adc
(bad)
or
sbb
mov
test
lds
dec
dec
pop
cmp
bound
stos
pop
out
xor
sub
or
aam
gs
pop
mov
xor
adc
sub
aas
out
imul
pop
sar
jns
dec
nop
inc
jno
jp
push
push
shl
scas
gs
cmp
or
sbb
inc
scas
ins
push
cmps
cmc
jbe
nop
loope
ins
sahf
in
loope
mov
xor
(bad)
shr
clc
jmp
and
ficomp
mov
bound
test
gs
lds
inc
add
push
int
repnz
les
push
das
and
leave
xor
popa
xor
push
push
ins
jae
adc
in
loopne
enter
(bad)
or
jb
mov
je
jo
das
cmps
popf
icebp
test
and
sbb
jg
inc
xchg
or
jae
and
push
dec
out
mov
cwde
data16
mov
ins
cmps
scas
repz
sub
rcr
and
fst
repz
fmul
lods
stc
loope
or
outs
sbb
add
xchg
dec
fidiv
cmp
and
mov
(bad)
adc
add
sbb
arpl
mov
mov
mov
dec
fsub
sub
cwde
xor
lods
pop
pushf
jb
xchg
xchg
hlt
jo
add
neg
mov
imul
gs
fwait
arpl
into
rcl
rol
sub
mov
sahf
pop
adc
imul
jp
mov
inc
rcl
dec
fsub
xchg
repz
jmp
jns
ins
dec
and
adc
pop
fs
out
add
push
into
test
adc
mov
test
icebp
jp
xchg
daa
sbb
mov
addr16
sti
sbb
push
cld
cli
pop
mov
cld
sti
jbe
ds
cmp
sbb
mov
ret
icebp
fist
xor
cmp
mov
sub
mov
and
popa
nop
pop
jmp
adc
jb
dec
(bad)
clc
cwde
xor
out
push
mov
(bad)
enter
adc
pop
icebp
push
xor
stos
call
adc
adc
inc
sti
mov
lahf
xor
fneni(8087
xchg
inc
xchg
inc
cdq
rcl
loop
pop
xchg
push
xor
xor
(bad)
out
test
call
fadd
jp
jnp
push
adc
bound
pop
add
mov
rcl
inc
dec
mov
pop
enter
cs
add
or
mov
ret
mov
sbb
or
pop
jl
out
loop
adc
imul
rcl
and
mov
pop
mov
add
mov
mov
jmp
push
retf
call
aad
mov
in
arpl
mov
cld
enter
lock
inc
xchg
inc
lods
cmps
xor
sub
jmp
daa
rcr
loope
jns
or
adc
mov
mov
jbe
mov
ret
and
jp
push
dec
out
pop
repnz
cmp
ja
xchg
dec
outs
lods
lock
xchg
and
inc
jp
fyl2x
xchg
sti
dec
mov
push
in
push
rcl
iret
or
loope
adc
inc
cmc
pop
pop
pop
inc
in
mov
daa
push
data16
and
test
lock
sbb
or
mov
ins
xor
inc
stos
or
arpl
ins
outs
int3
xor
int3
push
(bad)
aam
call
(bad)
into
stc
mov
cwde
aam
pop
out
mov
sbb
push
or
call
jle
jnp
ins
pushf
add
into
das
mov
lea
daa
das
cmp
(bad)
dec
dec
rol
pop
sbb
push
in
(bad)
iret
or
cdq
test
push
pusha
retf
pop
inc
imul
adc
scas
shr
enter
lahf
jno
push
sbb
and
dec
xor
adc
pop
addr16
sbb
sbb
sub
cmps
mov
jne
mov
test
add
retf
jle
pop
xchg
ins
rcr
dec
cwde
outs
leave
pop
dec
add
std
sub
mov
add
adc
xchg
daa
in
stc
fs
arpl
push
pop
jecxz
clc
rcr
mov
cwde
add
into
and
jle
jmp
mov
fwait
cs
les
cmp
sbb
xor
(bad)
aaa
inc
in
stos
rcr
pop
xlat
inc
jmp
daa
xchg
dec
test
mov
movs
mov
add
jl
cwde
rol
add
mov
(bad)
xlat
xor
xchg
ret
jo
mov
movs
int3
leave
pop
and
test
ja
dec
push
push
lea
add
in
div
and
adc
xor
push
out
jmp
xor
inc
and
dec
fisubr
stos
or
pop
scas
ret
scas
loop
push
lods
adc
mov
stos
sub
movs
add
mov
aaa
dec
jp
mov
xchg
jmp
ja
dec
mov
leave
push
jmp
iret
into
push
mov
or
mov
fsubr
dec
xor
adc
cmp
pop
lods
xchg
push
xor
das
repnz
cmp
into
es
inc
les
pop
bound
xor
mov
bnd
rcl
pop
mov
xchg
shl
pusha
call
pusha
fdivr
or
fst
cmp
ret
aam
or
imul
xchg
pop
aad
cld
(bad)
xor
mov
adc
enter
or
dec
adc
add
in
mov
cmps
pop
sub
cmp
ret
in
scas
std
adc
in
lock
aas
and
cmp
inc
mov
out
push
not
pop
xchg
add
loopne
mov
sbb
int
js
shl
in
out
repnz
popf
in
test
add
test
jmp
jne
adc
push
movs
and
sbb
push
or
mov
aad
repnz
xor
cwde
setge
sbb
sbb
sbb
or
ins
cmp
sbb
xor
pop
push
push
cmp
out
push
stc
test
inc
and
adc
fs
imul
es
fimul
and
or
pop
cmp
cmps
fmul
inc
sahf
sub
scas
or
mov
or
jb
xchg
imul
inc
ins
adc
jae
push
pop
jmp
jo
out
or
pop
cmps
call
inc
repnz
sub
adc
inc
inc
push
fisub
push
mov
in
in
ins
lea
in
mov
adc
cmp
or
out
lods
sar
cmp
mov
inc
aaa
mov
inc
adc
iret
jbe
sbb
add
sub
push
pop
xor
jbe
mov
sbb
and
stos
fisub
dec
mov
xchg
movs
or
cmc
pmulhuw
mov
loope
rol
sub
out
ja
mov
jo
std
and
ss
xchg
dec
sub
xchg
xchg
cmc
xchg
rcl
xlat
xchg
xchg
inc
mov
in
in
xor
out
dec
popf
sub
mov
and
cmp
inc
inc
sub
pop
mov
and
retf
mov
not
fs
imul
mov
push
dec
sbb
inc
mov
sub
xor
sbb
dec
jecxz
mov
inc
jle
pop
outs
(bad)
test
mov
dec
jmp
icebp
mul
call
cwde
adc
sbb
mov
jns
repz
rol
shr
cmp
xchg
sub
loop
sbb
test
sub
imul
cmp
add
shr
pop
dec
or
inc
sbb
add
mov
in
push
ret
jle
pop
sbb
aas
pop
pop
push
xlat
jg
jg
icebp
push
rol
daa
mov
add
aas
mov
loope
fs
and
mov
lock
inc
mov
adc
jge
icebp
mov
mov
push
stos
stos
add
cmps
sti
pop
bound
and
mov
and
(bad)
cmc
pushf
push
jb
and
jg
inc
and
pop
fmul
fiadd
je
pop
shl
jmp
mov
jl
sahf
mov
pusha
inc
lods
cmp
je
add
and
enter
leave
loop
mov
div
push
xor
mov
jmp
cmps
pop
pop
imul
js
(bad)
fldcw
(bad)
or
fmulp
xor
pop
sbb
add
or
cmp
loopne
push
pop
div
mov
in
xchg
dec
mov
pop
cmps
repz
imul
loope
add
pop
inc
xor
(bad)
push
rol
mov
push
retf
ins
rcl
sar
cmp
or
hlt
mov
jb
call
mov
cld
sub
or
jmp
and
sub
imul
xchg
pop
out
cmp
sbb
sub
stos
nop
aam
jge
xlat
mov
push
stos
imul
mov
sub
(bad)
(bad)
adc
pusha
je
mov
xchg
adc
(bad)
fstp
(bad)
mov
(bad)
inc
mov
mov
(bad)
push
and
retf
push
lahf
ds
icebp
inc
cmp
outs
cmp
jmp
bound
test
jmp
mov
lds
cmp
jbe
xchg
(bad)
cmp
mov
inc
adc
cmp
cld
cmp
push
fcom
repz
aaa
test
sar
pop
int3
jle
adc
daa
mov
out
mov
(bad)
sahf
pop
mov
sbb
shr
cmp
xlat
dec
adc
add
popa
rcr
and
xchg
xor
out
retf
mov
jmp
push
jnp
dec
push
lods
xor
adc
push
sar
ret
xchg
movs
scas
sub
xor
cmp
cmp
into
pop
fs
je
aam
shl
push
adc
mov
xor
pushf
rcr
dec
in
and
sbb
xchg
jbe
imul
ficom
sbb
xchg
ficomp
jbe
sar
sti
inc
(bad)
iret
pop
push
je
xchg
mov
sbb
push
add
fcom
mov
retf
jp
movs
(bad)
fucompp
stos
dec
(bad)
push
fild
xor
into
mov
xchg
ret
dec
jbe
dec
mov
test
sub
add
cmp
popf
add
bound
(bad)
pushf
xchg
mov
addr16
xchg
fisttp
daa
xor
mov
pop
jns
dec
mov
(bad)
jle
aam
adc
ss
retf
mov
faddp
(bad)
pushf
sar
push
stos
push
stos
data16
das
iret
add
push
lods
jae
adc
inc
imul
lods
loope
mov
mov
scas
add
push
ja
add
jle
push
dec
call
xchg
and
jb
xlat
xor
repnz
add
xor
push
jne
sub
test
cmps
mov
jne
jg
loop
mov
in
and
test
add
outs
repnz
add
in
scas
dec
push
call
jae
push
mov
dec
repz
mov
js
jo
jnp
in
mov
dec
sbb
repz
lock
mov
out
xchg
stos
sar
jle
xchg
lds
loopne
mov
lea
or
mov
scas
adc
(bad)
stc
adc
fldcw
test
cmc
ins
sti
rcr
mov
mov
data16
mov
in
dec
sbb
(bad)
fdiv
xor
outs
mov
mov
xchg
das
aam
stos
jns
mov
and
push
jne
repnz
jmp
(bad)
xchg
pushf
ret
test
adc
push
int3
jg
inc
int
mov
add
and
lahf
mov
scas
push
xchg
xor
xchg
pop
inc
arpl
jp
pop
xchg
mov
aad
sub
pusha
push
mov
jge
ds
test
clc
cli
inc
fst
imul
jmp
bnd
push
and
inc
icebp
sub
ins
fnsave
inc
frndint
div
in
stc
push
stos
push
xchg
movs
xor
dec
mov
push
adc
outs
adc
sub
enter
sbb
sti
out
mov
or
xchg
jnp
loop
add
imul
rol
adc
push
adc
mov
rcl
shl
sar
xchg
adc
push
pop
clc
neg
fs
sbb
cli
ror
test
jecxz
cmps
in
or
icebp
mov
clc
aas
test
fldl2e
add
push
nop
add
xchg
cs
int
or
(bad)
icebp
inc
xchg
cmp
xor
out
dec
jb
cmp
aam
sub
test
daa
out
outs
lock
jb
iret
mov
jnp
ins
mov
ret
out
mov
xchg
pop
xor
xchg
retf
jecxz
inc
fdivr
je
stos
pop
mov
shl
xchg
pop
retf
(bad)
in
cwde
xchg
push
shr
push
stc
mov
push
jl
gs
pusha
fisttp
mov
outs
fdivp
pop
pushf
xchg
ins
sub
sub
push
aaa
fcomp
scas
cmp
test
mov
adc
pusha
sub
lahf
jnp
int3
xchg
pushf
or
fstp
(bad)
das
inc
in
int
int
jbe
pushf
xor
(bad)
(bad)
or
mov
jns
push
movs
arpl
in
stos
add
add
int
xor
cmps
dec
cdq
or
mov
ja
fidiv
mov
in
mov
pop
ins
dec
or
loopne
outs
sub
mul
mov
popf
cmp
push
imul
sub
call
or
xchg
dec
cmp
clc
fadd
les
or
push
jl
aad
adc
jne
ja
cmp
cmps
lock
and
push
(bad)
retf
cli
lods
mov
(bad)
call
add
xor
test
or
sbb
inc
scas
and
(bad)
out
ins
cmp
jg
inc
fisttp
xchg
and
adc
dec
out
mov
dec
cmp
into
pop
pop
imul
jecxz
sbb
std
mov
shr
test
and
sbb
xchg
inc
xchg
dec
push
movs
and
into
out
clc
out
xor
(bad)
shl
xchg
das
adc
cmps
dec
dec
lock
jmp
popa
sbb
nop
es
ret
jbe
cmp
jecxz
inc
inc
adc
mov
clc
(bad)
xor
push
mov
jmp
dec
retf
jp
push
test
dec
push
movs
mov
call
in
mov
cdq
imul
mov
sbb
int3
rcr
mov
jmp
mov
add
xchg
test
xchg
xchg
xor
jl
adc
out
pusha
not
(bad)
sub
dec
outs
fldcw
jns
sti
imul
push
mov
imul
mov
or
and
shl
outs
cld
jns
rcl
push
ror
jl
push
dec
mov
or
dec
int
jmp
scas
sbb
pop
adc
mov
int
adc
pxor
ds
retf
loop
add
inc
dec
enter
xchg
or
xchg
mov
mov
shr
inc
out
enter
aam
cmc
xchg
in
test
in
hlt
iret
test
xchg
icebp
jmp
fcom
add
xchg
(bad)
mov
enter
push
shl
clc
dec
pop
stc
repnz
xor
out
mov
sahf
dec
lds
mov
add
leave
hlt
xor
outs
push
add
mov
jmp
push
adc
push
jge
add
jecxz
mov
pop
retf
arpl
sub
cmp
xor
imul
arpl
xlat
push
jno
(bad)
lods
idiv
jp
adc
xchg
xor
bound
sbb
fadd
je
mov
xor
push
mov
repz
dec
loop
and
sti
(bad)
cwde
inc
data16
test
pop
push
sbb
jbe
bnd
pop
xor
popa
inc
xchg
jg
ds
mov
and
add
cmc
pop
mov
scas
hlt
push
sar
jle
imul
ds
call
mov
pop
(bad)
mov
arpl
shr
dec
(bad)
fdiv
mov
sbb
adc
pusha
or
out
add
xchg
adc
mov
jne
rol
fwait
jecxz
dec
pop
mov
fsub
hlt
adc
in
pushf
cmp
shl
pop
mov
mov
adc
sbb
xchg
fidivr
retf
push
int
jne
aaa
sbb
loop
aad
aas
mov
aam
adc
js
and
inc
push
push
or
mov
out
dec
cmp
jnp
push
pop
movs
cmp
retf
xor
daa
adc
sub
xchg
aad
push
fsubr
inc
adc
xchg
stos
mov
shr
push
js
xchg
aam
stos
das
cli
add
and
or
sub
push
fwait
cs
push
jg
fadd
ss
mov
fld
adc
shl
jbe
pop
or
pop
cmp
pop
mov
dec
int3
popw
ins
fidivr
cmc
enter
xchg
dec
out
lea
(bad)
mov
sub
int
jl
push
cmp
pop
pushf
ror
xchg
lods
loope
lea
cmp
sar
dec
ror
daa
(bad)
daa
jg
inc
push
add
ret
xchg
(bad)
sub
in
jo
and
addr16
(bad)
je
sub
mov
imul
retf
jl
xor
lock
mov
add
cmps
cmp
loopne
stos
cld
jl
call
or
out
cmp
mov
mov
inc
fidivr
dec
mov
into
ins
mov
(bad)
std
sub
dec
jnp
cmp
dec
jo
inc
add
and
(bad)
jge
add
in
sbb
sbb
imul
out
scas
repz
dec
mov
pop
pop
sahf
sbb
in
dec
fsubr
and
jnp
cmp
mov
jge
pop
jno
jmp
xor
pop
mov
nop
nop
ins
ss
or
frstor
or
mov
retf
dec
mov
push
mov
dec
xor
adc
fld
cmps
pop
cmp
mov
aad
in
enter
ret
bound
inc
lock
jge
inc
shl
cmps
fldenv
in
ds
cmps
and
sbb
xor
ret
test
aaa
jno
mov
mov
cdq
(bad)
out
mov
or
jl
(bad)
jbe
movs
adc
adc
inc
out
adc
pop
pop
out
sbb
cmp
add
retf
xchg
repnz
aas
pop
inc
mov
jmp
sub
sub
mov
cli
stos
and
xchg
dec
pop
rcl
movs
movs
dec
push
lods
ret
jecxz
pop
jmp
movs
jae
xor
clc
lock
sbb
or
sti
(bad)
cmc
xchg
and
mov
mov
sbb
int3
push
pop
mov
and
pop
xchg
movs
ja
add
jnp
lds
sub
mov
sbb
(bad)
iret
cmp
mov
(bad)
and
lss
xor
or
movs
ins
push
push
mov
jne
inc
mov
cmp
frstor
pop
mov
adc
inc
jmp
mov
xchg
data16
xchg
mov
cmp
inc
cmp
xor
cs
mov
add
push
(bad)
sbb
loope
cmps
xchg
push
sbb
jl
mov
jns
out
push
pop
mov
ret
jmp
mov
repz
xor
sub
mov
jb
dec
(bad)
push
sub
or
je
mov
sbb
ins
jnp
test
inc
jecxz
sbb
mov
xchg
jae
jl
xchg
ret
pop
imul
shl
rcr
pop
xchg
xchg
popa
push
xchg
and
push
adc
aad
(bad)
in
mov
dec
retf
mov
xchg
pop
outs
lods
call
and
nop
sub
pop
shl
xor
sub
pushf
jp
aaa
ins
adc
mov
xor
xor
sub
xor
mov
cmps
dec
test
and
rcl
loop
iret
nop
pop
iret
or
out
mov
mov
loop
pop
aad
jb
fadd
sbb
stc
ss
fisttp
fcomi
inc
dec
retf
cmc
sub
mov
add
ret
pop
or
lock
adc
cmp
(bad)
retf
xchg
adc
lock
fisub
movs
mov
push
adc
lods
mov
xchg
pushf
jno
rol
push
dec
shl
push
pop
sar
ret
int3
out
gs
repz
shr
faddp
fiadd
les
hlt
or
cmp
in
arpl
sbb
lods
mov
mov
(bad)
(bad)
push
xchg
addr16
pop
or
inc
xchg
shl
out
shl
inc
xchg
lds
jmp
hlt
fwait
push
sub
or
jnp
adc
add
mov
aaa
iret
xchg
imul
in
add
shl
dec
int3
mov
imul
imul
mov
mul
ss
jp
into
and
sbb
and
dec
nop
aas
mov
and
cli
mov
inc
xor
rcl
sbb
cli
inc
scas
xor
(bad)
out
xor
cmp
jno
pop
(bad)
cli
out
loop
jp
aas
xchg
adc
test
jae
fdivr
iret
repnz
inc
push
fiadd
mov
push
xchg
ins
cmps
xor
and
outs
cmp
or
xlat
cmp
pop
jmp
call
jle
sbb
inc
fdivr
repnz
and
pop
cmp
inc
xchg
xchg
call
jmp
fsubr
outs
js
(bad)
dec
bnd
loopne
add
jl
jmp
aaa
sbb
cwde
(bad)
push
shl
mov
in
push
fs
jecxz
out
add
push
out
dec
jp
or
sub
push
xor
add
mov
dec
inc
mov
sub
sbb
pop
and
pop
cmp
int
xchg
push
aaa
cmc
xor
cmp
imul
sub
dec
adc
div
jb
arpl
cmp
fldenv
and
and
mov
mov
or
ss
sbb
jmp
add
lds
cmp
push
and
dec
mov
lock
pop
out
not
retf
sahf
repz
mov
sbb
in
or
vpmaxub
inc
shl
sbb
push
into
dec
int3
aas
and
jl
dec
dec
stos
mov
sahf
in
xlat
lahf
mov
mov
sar
mov
cmps
cli
js
mov
data16
ret
outs
or
xor
inc
leave
or
jo
or
jecxz
inc
push
cwde
cmp
push
in
imul
test
stos
xlat
push
and
(bad)
je
and
movs
or
imul
rol
fistp
loop
mov
inc
fwait
dec
aad
aas
mov
pop
jl
stos
pusha
ror
movs
mov
jae
pop
int3
xchg
pusha
shl
dec
je
ss
inc
out
outs
and
je
add
jge
xor
or
cmps
bound
cmp
mov
dec
or
push
pop
leave
jno
dec
adc
mov
bound
jno
imul
daa
outs
add
ins
ss
fadd
aad
dec
inc
in
and
fidivr
fcom
xor
(bad)
retf
call
stc
(bad)
imul
inc
adc
and
jnp
shr
sub
push
cmps
rcr
jns
jmp
aam
jae
xchg
int3
retf
cs
cld
cmp
imul
shr
inc
call
aas
fcomp
mov
mov
cmp
pusha
sbb
and
inc
(bad)
push
daa
repnz
(bad)
xor
mov
and
into
neg
mov
pusha
ror
out
mov
mov
push
(bad)
adc
and
fisub
mov
cs
mov
or
cli
jl
aas
fucomip
dec
xor
push
lds
add
inc
test
imul
or
outs
bound
retf
and
jb
or
cmp
push
scas
lods
sub
sbb
dec
sub
mov
mov
jle
dec
add
hlt
pop
pop
test
pop
shl
(bad)
xor
nop
pop
scas
inc
shr
mov
lods
ror
test
dec
fisttp
ror
fs
clc
mov
and
inc
push
popf
out
adc
stos
(bad)
outs
fs
xchg
jbe
in
std
das
and
loopne
scas
lods
cmp
sbb
push
movs
fld
mov
or
sub
dec
add
or
ins
fistp
lods
lea
adc
jbe
cs
enter
xchg
mov
test
sub
loope
push
xchg
mov
test
sub
xor
fsub
mov
pop
cdq
pop
lahf
sbb
xchg
ins
xor
pop
in
and
pop
pop
int3
cmp
cmp
push
push
inc
ss
xchg
out
outs
iret
pop
je
(bad)
xchg
sbb
pop
cmp
test
push
sub
stos
push
jmp
pop
out
pusha
push
push
retf
mov
sbb
ss
dec
xor
pop
sbb
add
imul
data16
test
fdivr
and
lahf
pop
sbb
or
pop
xchg
xor
mov
xlat
dec
jl
pop
xchg
scas
test
retf
(bad)
jno
mov
xor
ins
inc
retf
xor
stos
retf
lea
(bad)
lds
mov
lahf
mov
or
aam
neg
sub
push
iret
sbb
sub
or
jmp
out
xor
hlt
xchg
ins
lea
add
and
push
leave
or
mov
imul
imul
push
add
ror
fneni(8087
push
xchg
add
out
(bad)
(bad)
cdq
daa
in
inc
mov
inc
mov
loope
scas
inc
dec
mov
aad
dec
add
and
add
add
cmp
adc
dec
adc
pop
loopne
mov
aam
scas
pop
add
jo
dec
(bad)
cmp
loop
dec
dec
mov
or
repz
xor
aad
mov
in
int3
inc
xchg
mov
add
jo
test
xlat
mov
(bad)
push
push
xchg
add
(bad)
sub
xchg
movs
sar
lds
dec
xchg
xor
pop
mov
sbb
fnstcw
push
add
pop
sar
mov
add
cmps
mov
in
dec
push
dec
push
loopne
dec
or
(bad)
mov
pop
or
inc
dec
mov
dec
adc
movs
fwait
and
or
cdq
xchg
fs
sbb
dec
xor
mov
jb
xor
jne
sbb
mov
mov
fwait
in
jo
cdq
lds
pushf
mov
jecxz
dec
sub
daa
shr
inc
pop
in
daa
push
mov
pop
call
repz
(bad)
in
mov
cld
int
dec
cmc
nop
adc
sbb
cmps
idiv
cmps
jmp
adc
stc
ins
sti
pop
fdiv
or
pop
jnp
mov
loopne
jmp
or
jp
cmp
xor
jb
cmp
jmp
dec
xchg
ja
int3
xchg
xor
jl
movs
add
adc
dec
fsub
sbb
xchg
stos
(bad)
cmp
and
repz
pop
loop
mov
add
add
je
cmc
mov
in
daa
fnstenv
dec
faddp
mov
pushf
jp
sub
or
cmp
fdivp
test
mov
imul
xor
push
cmp
cmps
aaa
xchg
cld
stc
jp
xor
jo
jge
pop
inc
push
inc
cmps
div
mov
std
mul
rol
sahf
fwait
sub
dec
les
inc
xchg
cs
dec
pop
ficom
cs
clc
jae
(bad)
and
sub
jg
repz
sbb
adc
sub
or
lock
mov
gs
fmul
aad
popa
cld
je
test
test
loop
fwait
icebp
add
mov
jl
stos
sbb
jnp
mov
add
(bad)
shr
stos
sub
arpl
and
or
lea
mov
pop
pop
cmp
jb
stos
lods
jns
js
inc
das
inc
sahf
pop
xchg
jne
push
push
sbb
push
pop
cmp
mov
cmps
add
icebp
cmp
or
fisubr
and
adc
movs
cmp
or
pop
cmps
lock
leave
fnsave
shr
ja
dec
sar
inc
pop
sub
fadd
mov
push
je
mov
sub
sub
gs
jmp
push
xor
mov
push
cmp
mov
ss
stos
dec
jo
int3
jo
arpl
cmp
xchg
push
cmp
scas
mov
and
loop
inc
(bad)
imul
std
aad
ss
mov
sbb
jns
push
jne
les
cmp
test
leave
les
mov
aas
push
hlt
mov
adc
mov
pop
mov
pop
ror
cs
cmp
xor
call
add
sbb
or
sub
xchg
jae
sbb
(bad)
sub
aad
lock
(bad)
xchg
dec
inc
aaa
mov
xor
or
mov
cmc
scas
sbb
loop
mov
xor
ror
pop
(bad)
mov
rol
adc
aad
test
outs
jbe
cmp
push
sub
(bad)
mov
gs
xor
nop
pop
cmp
sti
adc
aam
jne
dec
inc
push
sbb
jno
mov
pop
jns
cmp
lods
sbb
popf
adc
dec
push
jbe
jl
push
pushf
mov
dec
call
or
jno
adc
std
or
jge
fldl2e
popa
cmp
mov
(bad)
fwait
mov
pop
xor
leave
fsub
iret
leave
mov
pop
sar
mov
rcl
jo
scas
sti
dec
push
outs
mov
xlat
cs
push
arpl
lds
adc
xchg
add
mov
inc
jle
mov
int3
ja
jp
or
cmps
rcl
mov
mov
cs
stos
dec
lock
pop
push
pop
sbb
scas
xor
jge
out
(bad)
and
jmp
jg
sahf
(bad)
or
clc
jmp
ins
sub
push
adc
fadd
and
and
loopne
or
xor
jmp
retf
jmp
mov
call
idiv
adc
pop
xor
adc
aas
pop
push
and
cli
scas
and
or
sub
(bad)
das
mov
mov
test
rcr
jmp
push
xor
cmps
sbb
(bad)
fisttp
rcr
jp
sub
loopne
xchg
aas
cmp
pop
sub
(bad)
pop
in
push
call
mov
push
push
ins
mov
bound
loopne
adc
lods
xchg
mov
adc
cli
push
mov
loopne
scas
jne
cmp
out
sub
pop
test
bnd
mov
mov
repz
(bad)
jmp
nop
mov
or
sub
ins
ror
adc
or
dec
std
pop
mov
ret
out
push
dec
mov
sub
test
cmp
lods
imul
loope
call
outs
scas
jns
aas
lods
xor
jnp
shr
fisubr
adc
pop
add
lock
call
js
xor
in
fdiv
ret
mov
jae
fisub
mov
sub
mov
retf
adc
cmps
xchg
or
push
scas
imul
dec
lahf
les
cwde
or
aam
mov
mov
jmp
sbb
imul
pop
mov
sub
pop
cmp
adc
sahf
pop
and
xchg
dec
xor
jne
nop
inc
sbb
xor
dec
in
xor
sub
add
sbb
lea
test
lea
test
popf
sub
sbb
mov
xor
push
jmp
push
push
pop
mov
call
adc
inc
push
mov
mov
xor
frstor
xor
out
movs
jnp
es
(bad)
push
sbb
sub
mov
xchg
adc
ficomp
inc
call
(bad)
enter
xor
push
call
add
mov
jne
mov
xchg
sbb
nop
(bad)
shl
js
out
inc
jb
leave
retf
pop
(bad)
test
mov
xchg
in
xchg
inc
in
xchg
push
arpl
and
jns
and
push
pop
call
dec
jmp
sub
dec
jl
daa
jge
imul
sbb
gs
adc
fs
mov
call
in
fadd
imul
imul
sub
in
or
sbb
sub
or
adc
mov
add
daa
jge
sub
adc
das
les
das
cmp
imul
leave
push
inc
mov
cmp
push
mov
add
cmp
mov
inc
ins
out
cmc
loop
cmp
addr16
or
xor
push
mov
enter
add
imul
pushf
push
je
sub
int3
and
mov
dec
aaa
jmp
add
sub
pop
gs
mov
dec
sbb
test
sahf
push
bsr
jmp
rcl
mov
xor
jae
mov
cmp
ficom
cmp
imul
out
adc
push
fwait
(bad)
movs
jo
imul
mov
ins
out
xor
(bad)
(bad)
and
push
std
jmp
xchg
iret
pop
sub
lods
ret
repz
adc
or
sbb
push
cmp
ins
popf
jns
retf
jg
push
arpl
rol
fimul
jle
push
mov
pop
push
xor
fistp
imul
add
fsubr
outs
or
(bad)
add
movs
push
mov
test
or
inc
lods
imul
and
mov
movs
call
inc
jo
and
movs
and
mov
mov
(bad)
std
in
lods
js
lods
xlat
cmp
in
cmp
js
jmp
and
pop
std
test
add
fimul
inc
dec
xchg
jl
leave
xchg
pop
inc
mov
fsubr
punpckhdq
add
push
sbb
int
test
int3
daa
test
pop
mov
xor
ror
add
cmp
mov
jge
pop
sbb
pop
pop
scas
and
(bad)
bound
sbb
aam
cs
sub
les
test
sub
out
push
cmc
xchg
rcl
jge
int
fwait
sti
xchg
test
repz
pop
call
(bad)
mov
jecxz
push
fs
out
call
push
ficomp
fdivr
shr
mov
hlt
jo
jo
mov
aam
test
das
mov
clc
push
or
into
or
pop
xchg
pop
inc
in
lea
enter
outs
sbb
jmp
jmp
in
shl
or
fdivr
leavew
adc
stos
daa
icebp
scas
push
scas
mov
cmp
stc
popa
repz
(bad)
shr
std
cmp
out
dec
test
(bad)
mov
and
mov
and
cmp
xor
into
and
mov
(bad)
scas
sbb
fcomip
sbb
arpl
mov
sti
test
sbb
es
(bad)
cmp
xor
mov
inc
add
or
xchg
pusha
and
add
aas
loope
push
xor
clc
repz
lods
push
push
xchg
ror
sub
shl
xchg
push
mov
jecxz
scas
mov
pop
xor
test
dec
pop
adc
mov
ret
into
pop
fs
(bad)
in
popa
xor
mov
cwde
data16
sar
into
(bad)
or
sbb
aas
lahf
adc
or
rol
and
ins
in
cmp
std
dec
inc
inc
test
cmp
leave
mov
loope
mov
and
mov
jg
fadd
fs
add
test
adc
and
repnz
xor
out
mov
out
cmp
inc
pop
mov
mov
into
mov
jnp
inc
mov
lahf
ja
in
dec
hlt
push
pop
movs
test
jg
ins
and
mov
and
inc
retf
mov
and
dec
stos
repnz
scas
in
imul
push
call
mov
aad
daa
stos
fdiv
jp
mov
push
mov
xor
dec
push
loop
stc
arpl
lahf
cmp
mov
pop
add
ror
jb
(bad)
add
repnz
xor
cmp
int3
pop
push
adc
sbb
inc
lods
in
out
or
xchg
mov
stc
sub
sbb
jo
aam
sub
dec
mov
sbb
(bad)
out
pop
sbb
sub
jae
cmp
inc
outs
(bad)
mov
outs
xchg
and
pop
fstp
add
test
jmp
inc
inc
add
stos
add
(bad)
fist
sbb
sbb
mov
mov
and
gs
aaa
dec
fnsave
cmp
jnp
mov
add
adc
js
inc
or
test
loopne
test
cdq
movnti
sbb
xchg
retf
mov
daa
cmc
push
jge
repz
std
mov
pop
push
enter
je
pop
mov
jnp
mov
fcomp
out
int3
pop
dec
aam
pop
in
cmp
and
cmp
pushf
mov
aaa
mov
(bad)
push
lods
jle
jle
xor
mov
nop
outs
mov
aas
fadd
mov
jne
xlat
ret
lods
jecxz
and
outs
lahf
pusha
les
jbe
add
stc
pop
lea
inc
inc
popf
push
dec
imul
push
pop
outs
fs
sahf
xchg
adc
jmp
pop
js
jb
test
mov
mov
addr16
retf
imul
fcomp
out
rcr
sub
cmp
addr16
retf
or
sbb
mov
test
pushf
popf
jecxz
outs
sub
nop
shl
mov
push
dec
imul
ss
cwde
retf
dec
into
or
xchg
in
hlt
add
(bad)
shl
dec
daa
push
and
push
xor
clc
add
mov
jnp
mov
or
sbb
lds
and
cwde
xor
ficom
ja
mov
movs
pop
sahf
inc
jmp
adc
fisttp
xor
cmps
inc
mov
rcr
and
push
sahf
test
aas
jmp
outs
jb
pop
loopne
call
ror
mov
sub
loop
enter
test
adc
mov
pop
es
jmp
stos
jge
mov
jne
xchg
jne
es
fabs
imul
and
ficom
pop
popa
push
mov
mov
push
cmp
int3
(bad)
scas
sbb
les
sahf
jae
into
mov
(bad)
mov
inc
dec
clc
mov
ss
sbb
ret
stos
xchg
ss
repnz
push
call
or
pop
pop
mov
jmpw
(bad)
or
loope
pop
ret
cmp
int3
aam
jge
mov
js
xor
int
rcr
outs
nop
pop
jmp
cmps
add
fild
pusha
jno
or
cli
fs
dec
shr
xchg
repnz
out
iret
xlat
sub
test
fst
cmps
dec
mov
jle
enter
pusha
fstp
cli
addr16
je
and
jb
jle
enter
jp
sbb
xor
dec
sbb
sbb
pop
xor
push
out
out
jl
xor
ss
stos
stc
mov
jo
cmp
mov
inc
hlt
test
dec
out
ins
pop
mov
push
mov
rol
sbb
jmp
cmp
div
sub
or
rol
mov
or
jle
pop
mov
inc
lods
sub
nop
icebp
dec
jp
enter
in
jb
aad
pop
cmps
js
cdq
cli
cld
cli
in
and
add
adc
jo
xchg
out
push
and
adc
or
push
scas
ds
jl
mov
ret
fs
into
aad
ins
js
addr16
ja
ud1
fisub
push
cmc
dec
mov
push
fst
adc
out
xchg
dec
mov
sub
sahf
imul
dec
lahf
popa
push
or
cmp
sub
retf
pop
icebp
sub
out
adc
loope
pop
hlt
mov
loop
out
scas
xchg
rcr
mov
imul
or
test
repz
sbb
retf
stos
cmps
inc
xor
or
or
jae
je
test
arpl
jns
int3
inc
add
pop
push
pop
gs
sub
(bad)
xchg
nop
repz
cmp
aad
xlat
push
aad
inc
std
cmc
stos
pop
cmc
fsubr
xchg
jecxz
dec
xchg
sbb
xor
xchg
lods
pop
or
jle
mov
jle
mov
dec
mov
sbb
into
push
jle
mov
lock
mov
inc
add
dec
xchg
or
mov
in
cwde
fst
(bad)
icebp
ret
ja
hlt
dec
pop
inc
imul
pop
test
and
xchg
ficom
mov
nop
sbb
jb
pop
popa
inc
test
and
mov
push
mov
xchg
adc
outs
push
mov
daa
xchg
(bad)
ja
mov
retf
xchg
gs
into
xchg
dec
lods
mov
push
rcl
fldcw
(bad)
lods
retf
jle
sub
call
jo
aam
xchg
or
in
cmp
(bad)
jmp
mov
scas
jmp
ins
xchg
or
js
repz
cld
mov
cmp
popf
xor
icebp
out
lock
pop
retf
dec
hlt
cdq
leave
push
lods
xor
into
dec
inc
popf
push
sahf
add
mov
cwde
mov
test
mov
mov
in
jb
(bad)
cdq
inc
fldcw
shl
popf
lock
popa
mov
sub
cs
js
xchg
dec
sub
jp
retf
pop
push
xor
dec
in
(bad)
and
or
jb
sub
sahf
test
jle
(bad)
in
mov
mov
fs
std
add
push
fs
inc
jo
loope
push
imul
scas
sbb
xchg
ficom
xchg
xor
icebp
leave
push
rcr
test
mov
adc
jmp
cmp
repz
js
outs
sbb
adc
icebp
push
shl
scas
add
mov
call
fwait
enter
jae
xchg
cld
xchg
add
iret
hlt
cmp
in
mov
call
adc
add
fcmovnu
repz
xor
movs
stc
xchg
cli
sbb
popa
daa
push
jnp
push
fdiv
cmc
mov
fst
push
lods
test
nop
int3
ins
outs
icebp
mov
loope
xor
adc
adc
jle
daa
push
or
jge
pop
push
in
call
ret
pop
adc
mov
aam
adc
inc
xchg
push
or
fbld
cs
add
mov
iret
adc
rol
stc
jp
cli
push
adc
adc
mov
mov
movs
nop
mov
sbb
xlat
xchg
push
adc
das
cld
jg
lea
in
cdq
adc
xchg
xchg
rcl
xchg
outs
sbb
inc
out
cld
dec
loope
push
adc
mov
xor
sbb
ja
loopne
dec
add
scas
sub
iret
jnp
or
pop
std
push
cmp
xchg
sbb
pop
inc
sub
inc
inc
loope
repnz
ins
mov
iret
xor
pop
test
(bad)
mov
sub
cwde
jo
cdq
inc
sti
shl
adc
add
pop
pop
mov
pop
inc
inc
xor
xor
mov
adc
(bad)
cld
jmp
mov
xor
add
push
mov
cwde
rol
mov
or
in
sub
rcl
push
dec
jb
out
dec
or
push
pop
loopne
pop
pushf
add
js
into
dec
push
retf
jmp
ds
aam
xchg
rcl
xor
inc
ins
jmp
stos
mov
sbb
jmp
stos
pop
sbb
jae
add
cmps
ret
loop
pop
and
sbb
enter
push
dec
add
jbe
mov
(bad)
loop
xchg
cwde
sub
mov
cmp
mov
into
or
and
int
pop
popf
shl
add
mov
sti
cli
jmp
test
mov
pop
push
push
xor
out
cli
mov
xchg
shr
sar
mov
test
jecxz
loope
mov
inc
or
sar
es
inc
and
lea
sbb
(bad)
sub
in
sbb
pop
fcom
mov
push
sub
xlat
jecxz
jmp
sub
jo
scas
cmp
pop
inc
dec
push
loopne
sub
mov
adc
cmc
inc
pushfw
leave
mov
sbb
mov
add
sar
inc
clc
push
jns
cdq
mov
das
sbb
sbb
push
xor
jno
int3
test
gs
nop
push
mov
out
test
shl
jecxz
push
popa
push
imul
aam
rcr
cmp
pop
int3
pop
scas
xor
(bad)
fnstenvw
inc
out
adc
std
adc
xor
cmp
sub
pusha
stos
cmp
mov
std
aad
out
xor
test
or
ja
popa
stos
arpl
lock
cpuid
adc
popf
or
es
cmp
mov
ds
stos
sub
jb
jae
and
in
dec
and
call
test
push
add
mov
fcos
scas
xchg
dec
data16
ins
ds
mov
(bad)
icebp
retf
inc
jns
(bad)
mov
xchg
xor
sti
ror
or
pop
mov
repnz
dec
xchg
movs
jecxz
xchg
adc
popf
scas
push
pop
cdq
pushf
pop
pop
push
sub
adc
shr
scas
sti
pop
pop
(bad)
iret
fild
dec
popf
xlat
in
test
das
stos
cmp
cmp
std
jne
or
pop
call
dec
cmc
sbb
pusha
push
mov
mov
pop
retf
mov
cld
pop
or
loopne
leave
arpl
jnp
sti
cwde
out
fstp
push
pusha
mov
sbb
in
and
and
add
cld
test
call
shl
xchg
mov
push
lahf
adc
xlat
sub
and
sub
ror
cmp
mov
mov
repnz
or
xchg
repnz
sub
sub
add
xor
mov
frstor
mov
dec
mov
mov
popa
mov
mov
neg
aas
(bad)
xchg
xchg
in
clc
sub
aad
cld
jge
sbb
leave
pop
int3
ja
jne
dec
xor
imul
mov
out
cmps
dec
pop
loop
jmp
adc
and
adc
push
aad
cmp
xor
cmp
add
cmp
and
cmps
xchg
mov
dec
jmp
mov
xlat
adc
mov
lds
and
mov
sbb
dec
jmp
ins
sub
fbld
test
xchg
pop
mov
or
rol
das
add
ret
adc
dec
(bad)
movs
mov
mov
in
mov
push
jp
aas
dec
pusha
mov
lea
lahf
cmp
aad
add
sbb
test
fwait
push
je
push
lock
mov
outs
push
dec
loop
scas
sub
in
xor
stos
jmp
adc
inc
push
sbb
mov
cmp
fild
mov
mov
imul
(bad)
int
call
hlt
mov
push
fbld
push
rol
idiv
mov
and
xchg
xchg
stc
pop
pop
imul
out
jmp
adc
outs
sti
pop
or
test
cmp
imul
push
mov
xor
ins
xor
push
test
leave
test
loope
or
pop
jo
xor
or
popf
mov
lock
ret
outs
hlt
scas
retf
mov
or
pop
xor
mov
outs
mov
leave
in
lahf
sahf
imul
repnz
inc
mov
inc
inc
test
push
mov
(bad)
das
xchg
xchg
inc
shr
out
jno
push
pop
and
movs
jb
ror
and
xchg
add
add
inc
pop
inc
(bad)
int
inc
outs
cmp
add
scas
leave
xchg
sub
mov
or
add
push
inc
out
outs
dec
in
les
xchg
lods
(bad)
in
shl
sbb
lods
adc
cs
xor
fs
sar
popf
jo
or
sub
inc
mul
cmps
xchg
adc
addr16
dec
fdivp
push
ins
fs
pop
mov
movs
cmp
inc
and
ror
int3
cmp
mov
jge
int3
hlt
cs
mov
jl
or
or
outs
mov
pop
sub
hlt
ss
add
(bad)
sahf
aam
sbb
and
adc
mov
cmps
jnp
ds
jb
pop
std
fistp
mul
push
aaa
mov
ins
lahf
and
popa
adc
adc
leave
lea
jp
or
inc
cs
xchg
(bad)
xor
and
imul
imul
xchg
mov
cmps
in
imul
std
cmps
in
mov
jg
push
mov
adc
pop
ret
sbb
add
out
cmp
jmp
aaa
fisttp
bound
out
sbb
push
mov
out
sbb
data16
or
push
shr
repnz
lods
inc
mov
je
je
sahf
je
inc
mov
xor
dec
mov
sub
stc
fwait
adc
scas
inc
mov
inc
outs
pop
into
(bad)
push
mov
test
cdq
xor
je
sub
iret
sbb
pop
outs
sub
or
push
inc
ins
(bad)
sbb
aam
xchg
(bad)
jae
sbb
xchg
cmp
sahf
sbb
std
mov
sbb
dec
or
fstp
daa
sbb
mov
pop
int
inc
dec
je
(bad)
movs
fsub
jnp
push
sbb
push
int
loop
cmp
pushf
call
cmps
xchg
mov
mov
dec
je
pusha
mov
(bad)
sbb
push
cwde
inc
pop
in
xchg
lahf
or
xor
in
pop
dec
movs
fwait
mov
push
sub
sub
out
mov
hlt
leave
mov
loopne
scas
push
mov
call
out
mov
fisubr
mov
or
lea
ins
xchg
retf
inc
stos
ret
xor
ja
cmp
stos
xchg
lods
xchg
add
ret
jle
mov
ja
lahf
aad
data16
jno
add
and
cmc
and
fidivr
in
pop
jmp
dec
std
shl
add
aas
and
inc
jns
and
ss
call
into
aaa
jbe
sub
stos
cmp
shl
sub
mov
loopne
dec
in
mov
in
dec
imul
(bad)
rcl
sbb
dec
movs
test
icebp
adc
scas
lods
mov
movs
sub
lds
inc
stc
gs
and
lods
push
cwde
pop
scas
inc
mov
pop
repz
inc
adc
shl
jmp
mov
jp
fs
inc
in
mov
neg
xchg
push
add
sbb
das
test
add
inc
xchg
xchg
pop
and
mov
out
outs
jnp
jle
cld
aam
test
push
jbe
out
pop
jns
push
jl
loope
call
jecxz
outs
mov
cmp
in
xchg
(bad)
and
leave
dec
jg
push
xchg
and
xacquire
in
and
sub
sbb
adc
lea
icebp
adc
ja
sub
push
in
das
test
repnz
push
mov
mov
out
xchg
ss
inc
loope
mov
lahf
dec
push
push
xchg
enter
pop
movs
inc
jge
retf
push
sbb
push
or
(bad)
inc
pop
sub
addr16
cmp
call
push
xor
sub
pusha
cmp
ret
pop
lahf
xor
int
xor
in
(bad)
cmp
mov
ret
rol
sub
jno
pop
stos
out
es
cdq
sub
ins
out
or
xchg
(bad)
jo
arpl
jb
lahf
retf
cmp
sbb
pop
sbb
int3
jl
(bad)
mov
adc
imul
push
pop
fiadd
xlat
pop
(bad)
pusha
out
div
aas
sti
data16
sub
test
mov
xchg
call
fs
popa
into
arpl
mov
lds
inc
in
xchg
scas
ror
jnp
jno
repz
add
and
pop
inc
dec
repz
mov
out
and
fisttp
pop
(bad)
fild
daa
mov
nop
and
rcr
scas
(bad)
(bad)
mov
mov
mov
mov
nop
pop
ret
sbb
and
lods
mov
dec
sbb
or
jae
mov
sub
icebp
and
jmp
repz
fld
or
fld
enter
daa
pop
movs
movs
les
fild
imul
fld
daa
ins
push
pusha
lock
cmps
add
mov
sar
je
stc
push
nop
pop
pop
sub
fisttp
pop
(bad)
scas
mov
shl
div
add
push
test
in
inc
lods
cmc
xor
pop
out
loopne
xchg
(bad)
jns
or
in
push
vmovsldup
data16
pop
add
xor
out
pop
sbb
xchg
push
ror
xchg
std
and
mov
dec
sbb
dec
adc
lahf
sti
icebp
clc
das
pop
psubusw
cli
shl
clc
dec
(bad)
xlat
movs
xchg
imul
mov
xor
dec
pop
jg
cmp
sub
fld
scas
or
es
ja
xchg
pop
jl
or
repnz
push
jno
push
in
movs
and
xchg
test
sbb
cdq
std
add
ret
or
sub
in
add
and
xor
bound
xchg
sub
jno
xor
push
retf
mov
cli
mov
mov
sbb
pop
xchg
xor
ror
enter
push
icebp
(bad)
hlt
or
pop
xchg
jno
aad
xchg
pusha
push
in
addr16
inc
mov
mov
mov
into
stos
cld
sub
or
mov
mov
or
cmps
add
inc
cld
jle
mov
mov
mov
sahf
sub
(bad)
mov
ins
aad
outs
outs
fldenv
pop
add
sti
in
fisttp
rcr
(bad)
xor
inc
repz
add
adc
push
cmps
jge
jmp
mov
dec
ds
out
sub
cld
lods
cmp
jmp
enter
add
mov
push
push
div
mov
jecxz
xlat
mov
lds
cs
push
push
(bad)
frstor
rcr
jae
xchg
jecxz
push
mov
(bad)
mov
mov
and
push
jb
inc
sub
add
sahf
adc
sub
jb
adc
mov
dec
push
push
push
out
mov
retf
sbb
xchg
out
test
ret
jbe
ds
pop
xchg
ret
aaa
xchg
push
hlt
mov
out
mov
mov
push
popf
iret
jp
pop
enter
push
std
imul
inc
call
adc
addr16
or
lea
mov
in
push
cdq
ja
xchg
cld
jns
pushaw
push
arpl
inc
xlat
arpl
sbb
das
push
outs
sar
fadd
xchg
call
fdivr
leave
push
addr16
fld
sti
mov
(bad)
jo
adc
stos
xchg
mov
scas
in
js
dec
dec
mov
ficomp
stos
shl
cwde
inc
sti
mov
movs
jmp
pop
add
and
or
ds
pop
sub
push
into
cmp
and
(bad)
lahf
mov
add
test
cmps
leave
add
push
fs
sar
fucom
fnsave
mov
mov
aad
int3
js
jo
stos
cmp
mov
fimul
call
inc
dec
sub
loopne
not
adc
push
pop
(bad)
xchg
shl
push
jge
adc
call
(bad)
rcr
xchg
inc
js
and
adc
test
icebp
xor
cmp
jb
mov
and
add
gs
xor
inc
or
add
daa
pop
clc
sbb
in
cmp
pop
pushf
pop
aaa
movs
xor
not
fsub
das
cmp
push
aaa
popf
dec
or
cmps
sbb
test
mov
aas
push
in
jmp
ficomp
pop
mov
push
mov
or
xchg
or
dec
adc
adc
pop
pop
inc
push
aaa
(bad)
in
jbe
or
push
dec
(bad)
xor
popf
ins
inc
imul
iret
push
imul
(bad)
adc
sub
and
pushf
xlat
mov
in
pop
jo
mov
sbb
mov
loope
ror
and
(bad)
jnp
or
jns
sub
adc
or
push
push
test
inc
jge
push
push
cs
jle
mov
or
repz
movs
push
cmc
popf
or
ss
sahf
mov
sub
pop
cs
rol
pop
jmp
sub
cmps
addr16
add
test
or
ins
inc
xchg
dec
xchg
outs
popa
cld
adc
out
aaa
fild
fcom
inc
pop
xor
call
mov
dec
adc
test
lahf
push
test
out
mov
shr
inc
pop
inc
cmp
clc
and
mov
xor
into
int
inc
mov
fisub
sbb
out
out
xchg
ret
popa
xor
push
fadd
in
adc
lea
jnp
xor
add
stos
retf
daa
sbb
(bad)
pop
jo
(bad)
lea
pop
clc
push
int
and
loope
pop
div
add
fnstsw
cmc
xor
sbb
jecxz
mov
jl
arpl
scas
test
cmp
mov
mov
rcl
jecxz
and
jmp
sub
scas
adc
sbb
aad
pushf
cmc
push
(bad)
inc
lea
xchg
xlat
sub
dec
mov
mov
arpl
or
fsubr
imul
adc
sahf
popa
iret
xlat
sub
adc
sbb
lds
pop
push
js
sub
pop
sti
outs
inc
jp
movs
imul
sub
cmp
xchg
sar
lock
xor
inc
adc
data16
cdq
sahf
push
sub
cmp
sbb
fimul
lods
repnz
in
bound
cmp
in
xor
jge
jmp
fsubp
hlt
mov
mov
ja
dec
cs
fwait
mov
inc
lahf
and
pusha
or
fdiv
cmp
ret
jl
add
xchg
jbe
rcr
cmp
cmp
xchg
mov
sub
call
mov
(bad)
pop
retf
add
push
fwait
pop
ins
cmp
dec
push
jbe
xchg
jmp
test
cmps
cmp
scas
test
in
bswap
leave
mov
adc
mov
push
add
dec
call
or
jno
(bad)
dec
mov
mov
adc
sub
push
outs
ins
pop
mov
adc
imul
(bad)
sub
mov
scas
ins
stos
adc
or
repz
xchg
jbe
cmp
adc
popa
arpl
test
test
lahf
das
mov
and
sbb
cmps
lahf
sbb
outs
dec
or
xor
sub
repz
push
cdq
pop
mov
adc
sbb
sub
test
mov
mov
xor
cmp
arpl
mov
lds
(bad)
pop
imul
mov
and
std
xor
leave
push
sahf
pusha
jnp
cmps
retf
(bad)
pop
(bad)
frstor
outs
push
pop
jno
(bad)
int
(bad)
sbb
imul
jne
nop
cmp
sar
rcr
test
test
sub
out
xchg
ds
jl
lock
std
jp
sbb
int
jg
mov
xchg
and
pop
push
scas
or
cmp
mov
or
rcl
mov
popf
jbe
pop
jle
push
and
pop
or
lea
mov
inc
push
cmp
rcl
mov
jae
(bad)
popa
adc
add
add
cmps
pop
xor
mov
sbb
push
dec
or
cli
stos
aas
add
pusha
or
dec
jl
repnz
outs
shl
lahf
xor
scas
dec
mov
jmp
xor
push
push
push
mov
das
xchg
leave
xchg
outs
out
shl
sahf
daa
ja
enter
shl
loop
(bad)
pop
fsubrp
pop
outs
repz
dec
pop
fadd
mov
pop
outs
push
loop
or
cdq
mov
sbb
(bad)
cmp
sub
in
push
data16
aad
cs
jg
shl
adc
or
pop
ror
hlt
xor
xchg
(bad)
scas
sbb
jmp
or
xor
jmp
jge
ret
hlt
jge
cmp
cmps
mov
es
in
loopne
sbb
jno
(bad)
aaa
push
loopne
es
pop
or
mov
daa
xor
aas
dec
clc
sub
dec
pushf
xor
sub
std
cmp
mov
sub
jp
sbb
ins
mov
jns
arpl
adc
fsubr
jle
sbb
pop
ins
mov
xor
sub
add
and
xor
and
jecxz
addr16
adc
or
ss
rol
push
xchg
daa
cmp
mov
test
scas
sbb
push
mov
cvttps2pi
xor
(bad)
repnz
and
fcom
fst
jb
lea
inc
cmp
lea
push
inc
add
int
sbb
rcl
cmp
daa
repnz
xchg
test
sub
mov
pushf
xor
pushfw
lahf
addr16
inc
in
pop
xor
bound
jl
movs
xor
fsubr
fild
pminub
mov
sar
ret
push
push
outs
pop
pusha
leave
mov
(bad)
fwait
scas
xchg
and
lods
popf
and
ror
ins
xor
mov
sbb
sbb
loop
sub
dec
or
sbb
pop
adc
sbb
scas
xor
mov
ds
ins
xor
mov
loopne
or
gs
add
sbb
xlat
cmp
mov
push
fucomp
or
lahf
pop
jb
dec
in
test
jp
jno
(bad)
idiv
bound
dec
outs
xchg
out
cmps
(bad)
in
push
xchg
jmp
pop
je
(bad)
retf
xchg
sub
jp
repnz
ret
sub
shr
inc
mov
jno
test
enter
mov
sub
xor
ins
bnd
out
dec
jae
mov
adc
or
loope
imul
lahf
rcl
(bad)
retf
cs
cmp
push
adc
pop
and
mov
mov
sbb
sbb
or
xchg
pop
in
xor
or
cld
mov
mov
mov
call
inc
fild
mov
aas
and
lods
or
call
sbb
add
jne
jo
jg
sbb
stc
movs
fwait
cld
fiadd
outs
aad
jl
push
retf
jg
sub
arpl
pop
and
pop
mov
xchg
test
push
leave
test
arpl
fwait
(bad)
data16
cli
pop
push
sbb
jp
pop
mov
or
mov
adc
das
jo
jecxz
add
fbld
dec
mov
shl
jmp
stc
pop
in
xchg
inc
jmp
push
iret
sub
pop
xor
fisubr
mov
ror
(bad)
addr16
and
inc
out
or
xchg
inc
aam
ror
xchg
dec
retf
ret
ror
outs
inc
adc
and
fidivr
sbb
ror
sbb
fldcw
sbb
lea
sbb
outs
out
jp
inc
xor
sub
nop
cmp
repz
loop
push
pop
pop
or
lahf
mov
sbb
das
jge
cmp
mov
bound
gs
xor
cmc
sub
jecxz
iret
xor
into
or
add
ins
xchg
push
in
mov
lea
xor
cmp
in
push
push
and
and
pop
push
dec
aad
sub
add
cdq
fs
imul
sub
stos
xchg
bound
mov
mov
test
inc
add
xlat
mov
jnp
mov
addr16
call
adc
jmp
fld
fwait
xor
sbb
nop
stos
mov
daa
dec
push
test
fwait
xor
pop
jo
xor
mov
mov
sub
jmp
pushf
fbstp
xor
mov
and
push
or
push
pop
or
scas
mov
leave
push
and
adc
clc
jmp
mov
das
sbb
xor
loopne
pop
mov
fiadd
sub
xor
mov
cmp
and
(bad)
loope
jmp
jbe
rcr
bswap
dec
xchg
add
icebp
das
dec
sti
jp
xor
and
into
mov
xor
lahf
les
hlt
es
test
mov
push
rcr
pushf
jbe
inc
sti
test
mov
xchg
cmp
(bad)
mov
push
adc
mov
push
scas
and
xlat
(bad)
scas
push
and
sub
int3
xchg
xor
scas
push
jae
ja
cmp
push
popa
mov
and
or
pusha
popf
jp
out
mov
(bad)
ror
sbb
out
sbb
les
repz
ror
pop
or
(bad)
mov
retf
dec
into
mov
test
mov
(bad)
lds
add
xchg
aam
mov
outs
cs
enter
mov
push
or
jmp
imul
jecxz
mov
jmp
iret
(bad)
sbb
dec
test
shr
mov
cmps
in
ds
adc
jns
add
or
pop
leave
inc
mov
inc
ror
std
push
jmp
sbb
je
or
gs
test
xchg
fistp
dec
jnp
push
add
and
mov
xor
cmps
push
ins
inc
mov
adc
out
test
clc
out
data16
dec
arpl
push
dec
mov
ficomp
pop
mov
jb
cmp
mov
cli
mov
mov
pusha
push
push
dec
stos
jg
cdq
shl
adc
mov
bound
push
xchg
fwait
loopne
in
mov
call
aas
push
inc
es
add
retf
(bad)
out
sub
dec
sub
push
dec
int
in
out
retf
xor
(bad)
in
and
xor
jbe
jbe
mov
jle
cwde
jmp
ud1
sbb
and
cld
xor
push
pop
daa
push
(bad)
jecxz
test
xchg
mov
and
retf
inc
dec
lods
adc
dec
neg
int3
jle
shl
enter
dec
push
inc
out
and
aad
mov
sbb
ret
jp
test
stos
(bad)
mov
mov
mov
jge
data16
sub
jns
nop
pusha
mov
jnp
icebp
lahf
cdq
in
or
daa
xor
xor
inc
stos
ins
data16
scas
ds
test
js
retf
fldenv
xor
sbb
add
inc
sbb
push
xor
and
mov
jmp
mov
jg
pop
in
outs
adc
int
cwde
pop
movs
sbb
aam
cld
adc
fptan
cmp
mov
(bad)
adc
movs
out
add
jno
push
mov
jecxz
pop
add
dec
popf
scas
mov
pop
xchg
arpl
and
in
cmp
dec
out
shl
fxch
cmps
sub
dec
fidiv
shr
ficomp
jnp
cmp
inc
cld
mov
xchg
pop
dec
xor
lock
call
ds
fst
sbb
mov
in
(bad)
rol
pop
xor
mov
and
or
cs
call
mov
mov
jecxz
pop
inc
test
imul
pop
adc
jp
lds
jmp
stos
xor
dec
push
xlat
cmps
clc
ins
lods
jl
cmc
cmp
dec
(bad)
pop
jmp
outs
pop
mov
adc
ja
dec
mov
push
add
clc
fs
mov
js
cmp
test
sub
bnd
rcr
xor
mov
daa
xchg
cdq
jge
jge
into
stos
or
mov
push
adc
data16
pop
fist
fdiv
xor
fsubr
sbb
cmp
jmp
fdiv
aas
cli
inc
arpl
scas
out
in
pop
push
jecxz
adc
clc
mov
aam
retf
sbb
in
jmp
jnp
pop
outs
std
dec
sti
mov
ret
xor
aaa
pop
xchg
aas
adc
call
xchg
scas
mov
push
shl
mov
dec
mov
lea
mov
mov
test
pop
add
jne
xlat
xlat
fwait
test
aad
lds
(bad)
div
data16
(bad)
int
imul
sub
xchg
cwde
jmp
sub
je
jmp
xor
push
mov
xchg
jecxz
add
mov
iret
xor
lds
xlat
les
dec
cli
jmp
cmps
and
sub
and
jl
mov
mov
lds
xor
jecxz
std
mov
push
inc
jp
movs
rcr
adc
(bad)
fisub
aam
pop
lods
movs
cmp
rcl
pop
fcomp
mov
push
and
call
adc
adc
addr16
int3
mov
sbb
push
mov
loopne
xchg
iret
in
and
fcmovbe
ror
ret
jb
sbb
and
inc
push
mov
jmp
cdq
push
sub
repnz
adc
lock
cs
or
mov
sub
sbb
cmp
ret
repz
push
movs
mov
shl
jne
ins
mov
lods
add
cmc
aas
fnstcw
loop
or
in
pusha
pop
adc
jne
sbb
(bad)
mov
in
into
loop
imul
sub
and
or
jns
lea
int3
push
sti
jmp
inc
vmovupd
or
dec
xchg
pop
sub
xchg
pop
fistp
popf
sub
jmp
cmps
sbb
adc
jge
pushf
(bad)
mov
sub
sbb
add
ffreep
cmp
inc
(bad)
fcmovu
mov
dec
dec
iret
pusha
fmul
shl
dec
adc
lods
inc
cmp
leave
or
cmp
xor
fsub
lea
lahf
aaa
or
imul
mov
les
mov
mov
icebp
pop
mov
sub
inc
xchg
leave
mov
inc
lock
ins
cmp
and
ja
lods
inc
mov
adc
test
outs
cmps
cld
xchg
fst
mov
mov
mov
sti
enter
in
push
mov
mov
out
inc
mov
std
mov
stc
pop
pop
imul
or
and
test
inc
pushw
pop
mov
and
popf
cmovnp
lea
mov
outs
add
xchg
out
jle
out
jecxz
sub
inc
adc
mov
cmp
add
mov
cs
mov
loop
jg
jbe
cmps
jo
inc
retf
cmp
lock
in
aas
lea
xlat
dec
mov
repz
test
sbb
add
movs
mov
sub
sti
outs
pop
movs
out
fisttp
jg
mov
adc
into
adc
cld
shl
mov
inc
jl
out
dec
mov
or
fwait
pop
aam
push
sbb
xor
sti
mov
repz
pusha
pop
push
xor
ret
add
dec
jp
aad
push
push
int3
mov
cld
inc
loopne
or
aad
sub
lds
pop
sub
jl
or
jmp
mov
in
into
or
pop
ret
not
into
add
scas
ins
test
add
bound
test
or
data16
mov
push
ret
xchg
dec
xor
scas
pop
loopne
pop
inc
xor
xchg
test
je
shr
(bad)
and
sub
jecxz
adc
int3
pop
out
frstor
and
or
in
mov
popf
test
out
push
inc
(bad)
call
sub
cmp
lea
xor
dec
imul
push
lock
lods
mov
cmp
push
adc
fmul
jp
or
outs
xor
xchg
ret
fcom
push
push
rcl
adc
rcl
jae
pop
sub
repnz
adc
stc
sar
vphaddbq
stos
out
sbb
inc
out
test
mov
std
std
push
inc
in
xchg
das
addr16
(bad)
paddsb
ins
cmp
xor
sub
sar
or
les
rcl
add
lds
ins
xchg
add
xchg
dec
push
jnp
out
mov
inc
sbb
and
cmps
iret
adc
fstp
jge
adc
ficomp
test
sti
fcom
bound
add
xchg
or
cmp
jbe
xchg
lds
imul
aaa
data16
jmp
(bad)
daa
(bad)
xchg
fisubr
fisub
or
add
xchg
ficomp
es
aas
shr
fisubr
and
in
aas
mov
push
(bad)
pop
aam
bound
idiv
test
dec
xchg
scas
inc
pop
mov
add
test
push
push
sbb
cwde
add
xor
mov
aas
push
push
(bad)
ja
sub
jmp
push
cmp
clc
loope
aad
add
push
mov
test
jge
push
cmp
jl
hlt
mov
jns
pusha
pop
adc
std
js
mov
daa
fld
pop
sbb
sbb
xchg
inc
mov
inc
popf
loop
and
jbe
pop
test
and
les
imul
cmp
mov
data16
sbb
mov
out
scas
pop
and
push
ret
xrelease
aas
jno
mov
out
loope
out
xor
aad
leave
clc
sbb
test
dec
shl
loop
(bad)
loopne
cmp
push
test
scas
dec
rcl
cmps
jnp
xor
imul
jg
ja
add
pop
ja
retf
mov
pop
mov
out
ret
fadd
xchg
out
add
rcl
jle
push
push
pop
mov
or
je
mov
dec
call
and
xor
xor
je
push
in
mov
pextrw
addr16
sti
aad
lock
sub
ror
or
mov
inc
in
retf
fwait
inc
adc
jnp
aaa
mov
sbb
cdq
xor
add
mov
sub
loope
pusha
imul
loope
loop
mov
dec
out
ret
daa
inc
imul
pushf
les
sbb
xchg
dec
cdq
jmp
jmp
je
add
push
fcmovu
dec
mov
push
mov
pushf
dec
out
sub
jmp
sbb
xor
push
push
dec
mov
cdq
scas
out
fisttp
clc
cs
add
inc
mov
mov
jecxz
jmp
shl
outs
cmp
push
push
out
sbb
push
shl
(bad)
pop
jmp
mov
mov
daa
aaa
rcr
adc
in
inc
repz
mov
cmp
adc
popa
int
adc
outs
(bad)
hlt
push
fnsave
add
nop
mov
call
test
mov
pop
push
cmp
inc
xchg
iret
push
add
xchg
les
std
and
popa
dec
inc
or
push
in
or
lea
das
gs
aas
clc
sar
inc
and
mov
in
in
mov
xchg
fnstsw
(bad)
xor
icebp
pushf
pop
inc
xchg
sahf
and
cdq
retf
(bad)
nop
pop
leave
(bad)
out
sub
inc
sahf
cmps
mov
push
fist
xchg
je
add
div
shl
fcomp
push
sbb
(bad)
sub
push
lock
mov
sar
stos
das
inc
dec
mov
icebp
push
mov
adc
das
icebp
jg
call
sbb
sbb
xchg
sub
or
pop
mov
outs
ins
inc
push
bsr
pop
dec
dec
out
stos
(bad)
mov
aaa
mov
add
dec
out
loope
ins
stc
sub
mov
jnp
or
retf
ins
inc
aaa
or
ds
cmp
lds
sahf
jmp
dec
icebp
sbb
aam
cmp
dec
cmp
pop
jmp
sub
push
jle
cdq
push
add
xor
xor
push
jp
and
fwait
and
stos
mov
test
sub
push
aaa
mov
fisttp
test
out
xchg
sbb
or
rol
xchg
(bad)
cmpxchg
push
aas
xchg
cli
mov
stos
pushf
mov
mov
out
mov
xor
cmp
xchg
clc
xchg
hlt
push
in
shl
das
iret
xlat
clc
int
int3
or
(bad)
aas
sub
lock
sub
ffreep
call
inc
cld
das
cli
add
adc
jle
jp
aaa
or
int3
jb
or
cmp
dec
imul
mov
add
sahf
aam
push
nop
mov
and
add
mov
cmps
nop
add
es
push
sbb
pop
dec
out
push
fist
sbb
jns
mov
in
sti
pop
cmp
aam
aas
cmc
test
jb
sub
das
(bad)
out
(bad)
out
(bad)
mov
and
mov
xor
(bad)
pop
mov
mov
test
push
cmp
cs
cmps
shl
hlt
cdq
push
or
xor
or
out
jnp
dec
loopne
sbb
sbb
sub
sbb
out
in
(bad)
cmp
push
xchg
ror
ret
lods
lods
jmp
bound
aad
add
push
in
jge
push
in
push
push
inc
lahf
aas
es
mov
scas
sub
inc
movs
sbb
cmp
adc
imul
ret
aam
mov
or
and
stos
daa
or
std
adc
into
push
ds
pusha
xchg
cdq
sbb
jns
retf
(bad)
mov
jnp
inc
xor
cmp
inc
outs
mov
or
call
xchg
stos
pushf
daa
fsub
and
cld
shr
xlat
inc
aad
les
cs
pop
or
sub
enter
lods
sbb
jg
push
inc
adc
push
je
into
lock
shl
test
xor
iret
outs
jno
pushf
mov
push
(bad)
sub
fbld
test
inc
fistp
jne
xchg
add
adc
outs
mov
add
cdq
inc
fistp
iret
push
in
movs
loop
test
xchg
into
cmp
imul
ins
xchg
dec
shr
(bad)
mov
icebp
test
(bad)
jl
es
leave
out
cmps
addr16
inc
pop
inc
dec
test
xchg
(bad)
scas
fdivr
test
or
add
mov
lahf
cld
mov
into
fwait
jb
jae
aas
sahf
pop
test
and
sbb
xchg
or
int
fwait
nop
retf
xlat
rcr
jecxz
jg
jp
fs
push
dec
ss
sbb
daa
into
ror
rol
cwde
fimul
arpl
push
leave
inc
cmp
or
xchg
xchg
not
jb
mov
fist
jmp
xor
jmp
dec
stos
and
pop
xchg
jecxz
sbb
xor
add
mov
fld
inc
shr
xchg
mov
mov
test
jecxz
into
sahf
pop
and
aam
out
jmp
pusha
retf
repnz
cmps
adc
(bad)
mov
dec
mov
xor
sbb
xor
imul
jne
js
test
mov
(bad)
push
lahf
dec
mov
add
mov
and
int3
inc
cmp
inc
std
scas
fist
cmp
mov
aad
xchg
dec
mov
test
aas
dec
and
xor
dec
cmps
inc
in
movs
push
cmp
fwait
loopne
neg
hlt
inc
ret
add
mov
or
mov
jl
(bad)
lds
mov
cmps
mov
std
xor
mov
push
sti
jbe
and
sar
ins
popf
int
sar
xchg
imul
and
lea
bnd
(bad)
fcmovnb
clc
cmp
and
fbstp
push
in
mov
cmps
out
dec
push
retf
idiv
mov
jmp
leave
jnp
in
adc
pop
cwde
sub
jmp
das
fiadd
inc
rcl
ja
xchg
(bad)
lods
mov
mov
sub
pop
push
scas
push
inc
bound
mov
mov
aad
push
loop
in
xor
movs
mov
mov
rol
vcvtsd2si
imul
sar
sub
lds
jbe
aaa
scas
cli
int3
push
sub
dec
and
arpl
and
xor
jne
inc
in
aad
or
adc
movs
lea
and
mov
movs
popf
and
mov
mov
sub
xor
cmc
adc
shr
outs
cmps
data16
fcomi
das
icebp
pusha
cmp
std
ret
fiadd
lock
add
mov
push
mov
jno
and
ins
adc
lea
loop
std
and
ss
and
dec
ins
jg
rcl
or
push
xchg
loopne
and
cdq
inc
mov
mov
test
ins
out
or
dec
add
stc
paddsb
cmc
ins
cs
(bad)
aaa
and
mov
and
xor
and
fnstcw
sbb
(bad)
jbe
jo
in
jae
cmps
int
xchg
lods
pop
dec
xchg
push
pop
pop
rcr
pop
outs
mov
jns
cs
inc
fs
iret
in
xchg
les
sbb
lods
std
cmps
push
bound
xor
or
pop
stos
pop
ja
mov
mov
movs
dec
int3
cmps
stos
in
mov
add
pop
dec
pop
jbe
pop
xchg
pop
pop
fwait
jb
pop
xchg
push
aad
xor
sti
cmp
test
or
push
imul
sahf
add
lahf
out
inc
dec
aam
loop
mov
lea
inc
sub
ret
sti
dec
mov
lods
jge
mov
(bad)
jg
mov
xchg
mov
adc
ins
ret
iret
stc
stos
inc
loopne
aas
(bad)
lahf
daa
and
(bad)
hlt
or
scas
stc
push
sti
sbb
xor
or
daa
dec
xchg
clc
or
lahf
jecxz
and
iret
xchg
jle
jo
repnz
in
retf
jl
pop
dec
cmc
nop
sti
lods
xor
enter
mov
cmp
inc
push
jl
or
push
inc
mov
ret
adc
inc
(bad)
mov
leave
in
add
into
add
movs
lods
jle
jp
xchg
mov
cmp
adc
lods
jg
jecxz
ja
in
add
cmps
xchg
xor
sbb
mov
stc
push
rol
sbb
sub
xchg
jmp
enter
shl
fiadd
and
inc
cld
ret
pop
cmp
stc
and
jmp
imul
fwait
push
mov
mov
js
(bad)
stos
int
neg
lock
iret
int3
loop
stc
cmc
pop
and
pop
(bad)
jo
jbe
daa
cmp
shr
fwait
sbb
aaa
or
jecxz
push
push
pop
mov
dec
adc
mov
jmp
in
(bad)
(bad)
out
adc
hlt
cmp
bound
aaa
mov
jp
lock
mov
push
fsubr
dec
sbb
mov
retf
inc
pop
adc
in
data16
je
adc
pop
xor
sbb
aad
not
pop
cmp
jbe
and
pop
add
shl
stc
fldenv
movs
outs
dec
jp
jp
stc
sub
jmp
mov
ins
xchg
sbb
ins
lods
push
push
imul
jno
ja
jg
mov
add
push
stos
fs
les
pop
jp
xchg
cmp
xor
inc
mov
adc
adc
sbb
hlt
lock
cmps
and
adc
loop
fist
ret
movs
int
pop
cmp
jl
mov
aaa
cld
mov
pop
and
out
ja
daa
mov
mov
mov
faddp
mov
sahf
pop
arpl
inc
nop
push
mov
rcr
adc
bnd
pop
cmp
jbe
xchg
inc
out
adc
(bad)
push
adc
sbb
outs
fbstp
dec
sub
inc
mov
cmp
mov
mov
mov
ins
mov
dec
mov
(bad)
fs
int3
xor
imul
and
inc
mov
(bad)
push
xchg
mov
mov
xchg
lods
mov
mov
mul
jne
push
(bad)
stc
cmps
stos
test
jmp
xor
mov
xor
inc
push
mov
jbe
(bad)
push
scas
cmove
ds
or
push
xor
fld
mov
mov
adc
pop
frstor
aas
lock
pop
sub
xor
repz
enter
bnd
sub
dec
dec
std
into
mov
ror
pushf
or
call
or
js
and
push
push
mov
push
shr
fnstcw
inc
int
imul
pop
sbb
bound
inc
in
and
clc
mov
gs
xchg
lds
aas
xlat
xchg
mov
outs
sbb
inc
push
cmps
imul
xchg
jp
dec
adc
inc
add
scas
dec
inc
das
jecxz
dec
lods
ret
icebp
cmp
jmp
daa
pushf
xor
cmp
xchg
push
jns
and
fimul
mov
or
fldcw
jp
jg
fcomip
jp
mov
adc
lock
mov
mov
out
add
or
push
push
xor
jne
aad
test
jbe
dec
enter
jle
shr
cmp
imul
or
in
dec
lods
sbb
sbb
scas
int
jp
je
es
aaa
add
jmp
cmps
or
sbb
aad
dec
mov
cli
sar
loope
imul
mov
sti
outs
inc
pop
xchg
push
pop
xor
into
push
xor
arpl
test
cld
or
xchg
shl
pop
popf
idiv
in
sub
mov
fidivr
xor
stc
les
xor
lock
aad
pushf
mov
jmp
push
movs
push
test
adc
mov
jmp
(bad)
fnstcw
mov
inc
ds
jp
ror
inc
std
and
out
jo
sub
call
clc
pop
rcl
into
popa
mov
pop
std
add
(bad)
lds
mov
call
aad
mov
pop
ror
call
xchg
mov
adc
pop
dec
bound
adc
xchg
loop
dec
and
adc
into
sub
bndldx
and
adc
out
in
loop
fnsave
dec
cmp
cmc
in
and
lods
inc
jmp
or
addr16
push
xchg
call
adc
xor
bound
xlat
int
cdq
pop
cmp
aad
adc
mov
cmc
neg
test
popf
ret
pop
sbb
xchg
fimul
xor
mov
inc
xor
call
sub
bound
mov
add
lock
into
adc
(bad)
xchg
pusha
cmc
ret
daa
ins
jle
and
(bad)
or
adc
push
iret
daa
pusha
test
dec
inc
mov
xor
mov
bound
xchg
iret
or
call
mov
mov
jns
icebp
jp
bound
add
lods
sbb
add
dec
and
in
sub
lds
and
adc
fs
out
jns
dec
inc
movs
sub
add
mov
and
das
cli
mov
pop
jne
mov
pushf
mov
mov
add
addr16
xchg
xchg
cmp
push
aaa
loop
mov
sub
iret
cs
cwde
xchg
jg
pop
cli
and
int
inc
es
mov
and
jg
addr16
scas
add
sbb
jo
stc
outs
jg
or
test
mov
adc
sub
repnz
pop
add
arpl
and
jge
xchg
adc
pop
mov
xchg
xchg
mov
call
lea
ds
jmp
leave
sbb
jmp
jo
or
fld
add
inc
nop
cs
adc
sbb
test
retf
dec
test
jecxz
inc
pusha
imul
fmul
(bad)
into
cdq
imul
call
xchg
and
fidiv
loope
inc
test
pop
lds
(bad)
(bad)
pushf
retf
(bad)
fst
retf
push
mov
sti
mov
and
retf
scas
mov
xlat
xchg
cli
jns
mov
jmp
outs
cmp
imul
xchg
mov
es
lahf
inc
xor
test
inc
adc
push
fcom
data16
ret
mov
cmp
sti
aad
fisub
xor
ret
scas
push
xchg
mov
aad
jle
adc
mov
repnz
cmp
sahf
js
xchg
stos
fnsave
xor
dec
inc
lods
outs
cmc
dec
sbb
sbb
pop
loop
aad
pusha
mov
scas
les
fsubr
sub
adc
push
in
push
jno
fnstsw
jge
inc
or
xchg
jge
sub
popa
or
add
lea
test
add
cdq
aad
push
xchg
ss
sub
fs
mov
mov
data16
shr
dec
mov
loope
jns
repnz
cmp
push
cs
lods
mov
or
sub
shl
out
sub
into
inc
push
shl
xor
push
jmp
dec
xchg
sub
nop
fistp
ins
pop
or
inc
xchg
rcr
repnz
sbb
in
add
and
leave
cmp
aad
push
shl
mov
adc
and
cdq
jnp
iret
shr
movs
aad
xchg
test
adc
repz
inc
sahf
lahf
lds
cwde
fidiv
ficom
fbld
loopne
pop
jne
mov
jle
pop
pop
sti
out
adc
xchg
sub
sbb
jno
sub
stc
xchg
ret
cmps
je
mov
mov
xchg
push
mov
dec
lahf
push
cli
retf
retf
sub
sti
in
mov
and
adc
sub
adc
inc
out
push
inc
in
ror
arpl
jb
mov
cwde
popf
sbb
int3
div
or
test
mov
xor
repnz
cmps
sbb
dec
lea
ret
adc
loopne
lahf
mov
xchg
bound
pushf
push
cmp
cmp
dec
mov
or
pop
cmc
mov
cmp
enter
repz
shr
and
add
cld
push
mov
es
cmps
scas
cmp
xchg
xor
pusha
loopne
pop
pusha
dec
outs
mov
push
addr16
lahf
and
sub
aad
mov
hlt
stos
or
cmp
fcomp
sub
push
jnp
lods
inc
test
mov
sbb
scas
aad
xchg
fld
clc
loopne
pop
jne
mov
push
movs
out
sbb
fwait
cmp
mov
call
mov
jbe
jmp
aam
pop
cmp
xor
pop
add
leave
mov
pop
inc
retf
cmps
mov
xchg
ret
dec
lds
sbb
stc
jnp
std
ret
mov
out
push
push
mov
xor
ins
cmps
retf
movs
ret
or
shl
or
adc
cmp
push
mov
sub
in
hlt
not
enter
xchg
xchg
dec
leave
loope
pop
bound
into
aam
aad
push
je
and
mov
inc
inc
test
mov
and
pop
adc
mov
xchg
pop
mov
lock
push
lahf
cmp
retf
dec
xchg
or
in
mov
(bad)
add
in
mov
jecxz
sar
cmp
inc
cmc
lods
mov
aas
add
jge
push
and
arpl
add
push
inc
add
mov
adc
movs
xchg
jmp
and
pop
adc
cmp
(bad)
fstp
inc
ret
imul
and
mov
cdq
cmp
call
mov
dec
scas
cmp
sbb
sub
js
retf
xchg
xor
mov
in
cmp
adc
arpl
test
imul
cli
pop
mov
jbe
out
inc
nop
add
inc
ja
push
lds
sti
jge
scas
push
daa
rcr
add
inc
mov
add
jno
mov
sar
jmp
inc
loopne
js
jmp
pop
out
xchg
in
or
jne
sbb
pusha
mov
jae
jbe
adc
push
sub
mov
inc
add
fwait
sub
fild
add
push
mov
stc
sti
aam
ret
inc
scas
(bad)
cmp
push
adc
in
cmps
inc
inc
int3
mov
fist
pop
dec
sub
stc
jge
enter
jle
dec
test
mov
js
js
fst
jmp
and
or
retf
sub
sub
xchg
or
jmp
mov
fwait
cmp
push
mov
loope
lods
sbb
xor
sub
cmp
mov
inc
push
sub
into
icebp
pop
add
ret
xchg
in
popf
mov
push
mov
lds
retf
lahf
and
inc
pop
outs
sub
mov
mov
int
jmp
adc
outs
fcom
and
xor
inc
mov
sub
cmp
xor
ret
repnz
fisttp
and
add
loop
popf
test
push
sbb
dec
pushf
daa
mov
sbb
push
hlt
mov
nop
sub
xchg
push
sbb
jp
xchg
sti
pop
hlt
neg
jne
ftst
retf
and
pop
pop
adc
lds
ins
inc
adc
stos
add
cmps
ret
cmp
mov
jg
rcl
rcr
mov
push
cmp
push
shr
fs
add
int3
fwait
(bad)
bound
int3
xor
imul
adc
leave
pop
jns
inc
pop
aad
out
in
and
mov
push
dec
dec
jo
xlat
and
push
sub
push
(bad)
sub
jbe
push
mov
dec
cmp
mov
iret
mul
pop
dec
mov
outs
jl
test
cli
sub
cmps
inc
ret
dec
outs
(bad)
or
fadd
mov
dec
gs
add
es
outs
pop
dec
retf
sub
jp
cmps
mov
out
push
test
in
push
aas
xchg
cmps
scas
pop
out
lods
inc
jmp
adc
sahf
xchg
xchg
and
ret
in
dec
mov
xchg
paddb
mov
(bad)
in
adc
xchg
sub
pop
adc
mov
add
nop
std
clc
ds
mov
inc
dec
dec
pop
mov
mov
sbb
adc
aas
ret
jle
add
mov
cs
int
mov
pop
(bad)
in
in
or
clc
adc
test
and
popf
es
mov
push
in
xor
mov
jl
call
fdivr
mov
ins
mov
push
ficomp
inc
jno
sahf
and
inc
jnp
pop
mov
jmp
or
scas
adc
mov
push
push
sbb
pop
ins
rcl
jmp
sbb
cmp
pusha
push
mov
gs
sub
in
push
fcmovne
pusha
sub
ficom
js
xor
out
cli
push
shr
cmps
add
movs
cli
sbb
push
pop
inc
fwait
jl
loopne
pop
aad
dec
rcl
mov
xor
sbb
mov
push
stos
imul
inc
imul
xor
jp
xor
data16
pop
aam
and
jns
and
ror
jb
gs
cs
ror
xchg
fwait
push
xor
ss
mov
add
out
xchg
dec
xchg
sbb
(bad)
and
das
push
and
jnp
jg
xor
cs
inc
sbb
outs
cmp
(bad)
test
mov
sub
cwde
jle
pop
std
fsub
sti
lods
inc
addr16
div
fisub
arpl
add
add
cvtpi2ps
cli
pop
outs
out
or
sub
loope
jmp
mov
pop
pop
movs
test
push
out
xchg
inc
dec
adc
mov
cmp
pushf
add
dec
sub
xor
adc
inc
rol
xor
cdq
mov
paddw
mov
mov
jno
sub
mov
jl
sbb
inc
pop
pop
push
push
sti
and
out
lock
pop
daa
int
out
and
(bad)
xchg
popf
jmp
(bad)
inc
push
ins
nop
loop
lods
pop
sbb
jmp
xchg
aas
adc
mov
or
loop
cmp
movs
xchg
adc
add
dec
mov
xchg
xchg
sub
mov
dec
out
push
std
mov
dec
pop
xchg
sub
test
bound
ins
stos
hlt
das
inc
mov
xor
push
es
call
movs
adc
xor
and
(bad)
or
and
push
xor
xor
repnz
out
mov
jmp
aaa
ret
test
aas
(bad)
mov
inc
test
mov
jle
es
mov
call
out
xchg
test
in
cmp
push
cdq
pop
mov
mov
iret
jp
sub
gs
add
push
jmp
mov
(bad)
mov
add
addr16
jae
sub
loope
push
cmp
jnp
dec
mov
std
cmp
xlat
pop
outs
sub
sbb
(bad)
jne
call
dec
mov
mov
and
pop
repnz
xchg
loop
push
pop
test
ror
add
add
adc
icebp
iret
inc
cmp
stc
cmp
enter
movd
(bad)
inc
std
in
jecxz
lods
or
rcr
movs
mov
cs
cmps
jp
inc
sub
mov
in
inc
push
sub
xor
cmc
leave
xchg
sbb
arpl
pop
popf
mov
movs
dec
into
adc
sti
fs
mov
(bad)
adc
sub
loope
retf
xchg
inc
sbb
in
xchg
or
test
sub
or
fs
imul
ss
dec
add
lods
(bad)
jmp
adc
xchg
mov
out
mov
xor
or
cwde
adc
pop
and
int3
movs
lds
clc
mov
xchg
or
cmp
add
(bad)
(bad)
test
enter
sbb
add
fld
sbb
scas
push
repz
pop
fidiv
std
test
fsubp
popf
adc
adc
jg
mov
imul
out
sbb
jnp
or
ret
add
gs
(bad)
cmps
enter
pop
pop
imul
jae
xor
dec
add
xor
fwait
and
shl
ss
push
lods
jp
(bad)
xlat
jl
mov
lahf
movs
xchg
movs
add
push
stos
retf
mov
dec
dec
sbb
and
out
cs
or
les
cld
(bad)
pop
inc
es
push
pop
fild
jg
fcom
lods
aad
mov
enter
xchg
mov
data16
outs
cdq
pop
cld
sub
cmp
and
(bad)
sbb
jbe
jp
fwait
aaa
ffreep
pop
std
adc
fwait
out
in
jns
push
push
cmps
sub
out
sbb
xchg
pop
or
cmp
popa
pusha
je
shl
out
push
cdq
ins
add
lods
and
pop
addr16
xor
add
loope
cmps
ins
popa
ds
or
imul
xchg
sub
mov
or
hlt
mov
mov
test
movs
and
xlat
xchg
adc
pop
fs
cmp
pop
movs
pop
inc
mov
mov
(bad)
in
dec
mov
leave
sbb
dec
or
jb
xor
jne
push
mov
sbb
aas
cmp
mov
mov
div
lds
(bad)
repnz
jmp
adc
pop
pop
adc
pop
fwait
dec
cld
push
sbb
jmp
push
(bad)
les
pop
cli
or
cmc
dec
sub
idiv
xor
and
fsub
(bad)
pop
je
lds
mov
ss
xor
les
das
push
push
sbb
pop
ds
rol
cli
pusha
sbb
addr16
imul
imul
cli
fs
xchg
mov
mov
jle
sub
jo
dec
stos
loope
fidivr
dec
dec
sub
xlat
lock
push
xchg
(bad)
adc
out
jmp
sar
scas
mov
cs
test
sar
in
stos
mov
sbb
outs
(bad)
call
push
aam
(bad)
into
jge
stos
inc
sub
mov
fsubr
in
jle
jmp
adc
mov
xor
dec
(bad)
jmp
dec
lods
xchg
imul
cmp
shl
setnp
test
jns
jno
mov
ja
lds
repz
push
popf
mov
xchg
jecxz
adc
(bad)
cmp
mov
xchg
dec
hlt
(bad)
pop
enter
mov
loop
mov
or
adc
(bad)
cmps
jmp
(bad)
ror
mov
or
mov
aas
cs
mov
jns
(bad)
jmp
cmps
push
loopne
clc
ds
jno
inc
mov
mov
xor
dec
pop
inc
mov
pop
in
push
out
push
enter
sub
mov
adc
stos
shr
or
sahf
rcr
adc
dec
(bad)
ror
mov
out
pop
jge
add
inc
sar
daa
sub
fist
xchg
mov
cmp
push
xchg
fcom
test
ja
dec
out
shr
lea
sbb
mov
popf
cmp
or
adc
inc
mov
out
test
inc
and
mov
add
call
mov
loope
cld
es
int3
and
mov
push
iret
test
push
push
sbb
outs
call
clc
push
inc
lahf
daa
cmp
inc
movs
test
push
shr
call
out
dec
rcr
test
xor
sbb
aam
adc
or
inc
pop
sbb
call
xchg
add
fimul
fist
add
shl
jno
inc
xor
or
nop
ret
cmps
(bad)
cmc
adc
mov
cli
adc
xchg
(bad)
test
inc
outs
mov
(bad)
lock
lahf
outs
test
pushf
cmc
cmp
(bad)
push
xor
(bad)
loope
mov
push
dec
push
jbe
in
adc
cmc
jecxz
call
das
push
or
movs
test
jns
out
fst
mov
ret
sbb
inc
movs
pop
dec
xchg
add
mov
fwait
adc
inc
jl
jg
mov
adc
fadd
movs
or
in
call
cmc
jecxz
dec
sub
pop
clc
push
popf
xchg
sbb
imul
leave
adc
retf
xor
retf
adc
sbb
push
cdq
retf
rcl
adc
adc
mov
cmove
loopne
retw
sub
(bad)
hlt
pusha
add
jmp
mov
and
jp
leave
aam
push
cdq
push
cmp
ret
pop
push
adc
xor
cmp
(bad)
jns
or
push
dec
sbb
nop
div
stos
movs
aaa
push
xchg
rol
xor
ret
mov
cmps
movs
adc
(bad)
inc
inc
lods
lods
pop
inc
jbe
jle
in
add
sub
sub
out
icebp
jne
test
mov
jae
dec
daa
stc
and
lods
push
xchg
dec
mov
fist
popa
cmp
adc
inc
out
mov
test
jo
jl
aad
push
call
xor
aam
retf
cmp
mov
cli
mov
and
mov
pusha
mov
mov
xor
pop
cld
jmp
xor
cld
call
mov
sub
sbb
data16
leave
test
icebp
adc
jae
fdivr
rol
fmul
fidivr
xor
test
addr16
pop
jae
cmp
dec
lods
scas
bound
push
out
jmp
jmp
pmulhw
adc
hlt
sahf
mov
push
sbb
cmp
mov
sar
sub
jbe
cmp
push
call
(bad)
jmp
pop
push
sub
jae
push
or
out
jb
jmp
xor
push
xchg
movs
addr16
mov
hlt
cmp
aas
add
(bad)
jae
xor
mov
push
ins
xchg
xchg
cmps
xchg
and
mov
adc
test
loop
js
pop
test
inc
ins
pushf
jno
out
(bad)
movs
pop
scas
aam
arpl
adc
jp
rcr
inc
ins
inc
sbb
push
pop
test
mov
int
fsubr
ins
mov
mov
test
mov
sbb
rcr
fsub
inc
fstp
loope
cmc
dec
repnz
stos
jmp
jbe
add
push
iret
je
out
adc
inc
xchg
retf
lods
mov
pop
mul
inc
and
pop
scas
(bad)
cwde
test
lea
imul
pop
jmp
rcl
les
adc
inc
mov
mov
repz
push
js
sub
mov
push
int3
aas
out
test
clc
enter
cmp
mov
push
es
in
mov
out
xor
out
xchg
inc
or
(bad)
pop
inc
inc
ja
push
xchg
ins
push
nop
and
jp
call
sub
or
adc
mov
scas
push
or
mov
pop
xor
cmp
popa
adc
call
mov
cwde
loope
jp
sbb
in
dec
in
inc
jno
ret
mov
adc
xchg
scas
adc
jmp
in
or
dec
xor
cmp
repz
or
enter
fdivr
or
retf
jno
dec
ss
in
les
push
xor
test
imul
test
cs
xchg
out
fld
inc
sbb
(bad)
retf
mov
movs
adc
push
push
loop
xchg
(bad)
jge
fistp
or
das
ds
push
mov
ja
fs
lock
popa
sub
fwait
test
cmp
sbb
dec
xlat
mov
(bad)
int3
test
ret
popf
mov
sbb
loopne
pushf
cmp
movs
sbb
ds
jl
lock
mov
shr
dec
lahf
adc
dec
(bad)
mov
add
aas
push
mov
add
cli
adc
pop
sub
mov
repnz
push
addr16
jae
and
ret
imul
mov
mov
sub
pop
jmp
push
pop
mov
mov
sub
mov
xor
lahf
xchg
lea
mov
sbb
cmp
push
test
xchg
rcr
mov
clc
test
sub
ror
xlat
inc
test
je
jo
call
fwait
xor
cmp
jno
pop
mov
mov
pop
nop
adc
movd
dec
mov
ds
enter
jnp
repz
or
cmc
or
mov
rcl
and
add
retf
mov
repnz
inc
xchg
popf
lods
shl
dec
xor
in
call
pusha
mov
mov
fucomip
adc
mov
adc
rcl
call
inc
cmp
cmc
retf
rcl
les
ror
leave
les
pop
cdq
dec
dec
in
cmp
and
in
ret
push
cmp
jnp
adc
imul
or
jno
ret
push
in
adc
js
aaa
test
stc
cmovns
cmps
lahf
and
pop
push
mov
(bad)
or
ins
and
xor
mov
inc
add
inc
daa
aam
inc
iret
outs
ds
cmps
icebp
(bad)
jp
rcl
or
jno
ja
mov
test
jmp
in
dec
fsub
jns
mov
int3
test
jae
aaa
adc
mov
sbb
movs
and
sbb
lods
fcom
outs
mov
jne
sar
cmp
xchg
enter
lds
enter
call
stos
shl
jns
xchg
add
das
(bad)
jnp
cmp
xor
jnp
adc
cwde
cwde
and
sub
push
cmp
dec
fstp
dec
push
add
ficom
sbb
stos
test
lods
dec
mov
mov
dec
in
lods
cmc
push
mov
fwait
cmp
mov
out
pop
sbb
call
sub
cld
scas
inc
lds
fld
cdq
cld
shr
xor
stos
loop
aaa
out
xor
stc
lds
mov
addr16
pop
mov
inc
iret
or
leave
dec
push
sub
sbb
adc
retf
aaa
scas
mov
or
in
out
outs
movs
imul
cmove
xchg
adc
cmp
iret
leave
sub
cmp
std
ret
sub
mov
sub
sar
test
xlat
test
jge
inc
ss
and
pop
sub
stc
out
fisub
xor
jo
mov
dec
pop
jb
jle
jp
inc
ja
sbb
or
mov
cmc
enter
cmp
sub
fdivr
inc
cmp
pop
(bad)
jg
or
lds
inc
inc
jmp
in
data16
cmp
es
cli
sbb
jg
stos
dec
mov
ins
into
mov
push
jmp
std
stos
or
and
test
int
fimul
mov
cmp
pop
dec
sahf
ins
add
xchg
adc
pusha
lds
loope
repz
pop
movd
jl
test
pushf
mov
in
data16
lods
mov
adc
pop
cmc
adc
xor
in
push
addr16
cmp
pop
fstp
push
call
in
sahf
and
or
int3
xor
movs
xchg
out
test
lock
aad
stos
adc
inc
nop
add
retf
mov
jnp
xchg
and
cmp
lahf
mov
jmp
repnz
test
pop
xchg
add
inc
lods
mov
dec
in
out
hlt
push
mov
and
data16
mov
mov
mov
push
adc
jecxz
(bad)
jmp
add
adc
mov
fisub
cwde
push
clc
xchg
in
push
lock
mov
cmp
cmp
arpl
fwait
push
call
mov
xchg
fcomp
adc
add
jo
mov
out
imul
sub
popa
ret
or
outs
fcom
sbb
arpl
pop
mov
jo
out
dec
add
pop
arpl
jle
or
mov
and
(bad)
hlt
push
sbb
or
fsubr
nop
imul
rcl
fstp
xchg
add
fld
addr16
xchg
mov
xchg
fst
clc
or
cld
icebp
shl
pop
in
mov
push
fistp
ss
aam
pop
mov
push
xor
out
xchg
out
repnz
mov
test
loope
pop
xor
inc
mov
xchg
jno
push
inc
aad
aaa
fnstenv
retf
xor
(bad)
adc
(bad)
fsubrp
adc
ins
mov
mov
jecxz
clc
or
push
push
stc
pop
test
xor
pop
enter
aas
jle
dec
mov
lock
mov
call
cmp
adc
enter
imul
clc
mov
aas
cmp
xchg
imul
jecxz
iret
sbb
push
mov
mov
push
pop
jmp
mov
(bad)
xlat
in
dec
cmps
rcr
or
cmp
sub
add
xor
jb
ins
mov
lock
cwde
iret
dec
js
(bad)
loopne
sub
aam
jns
loop
jno
adc
push
push
jns
sar
ficom
jg
(bad)
ins
mov
xchg
jl
mov
enter
xchg
fcom
mov
sti
cmp
daa
(bad)
jno
repnz
out
or
test
pop
dec
xchg
adc
stc
mov
jb
stos
jg
adc
sub
jmp
lods
lods
pop
imul
lock
ret
xlat
and
jo
mov
cs
int3
ds
and
out
sbb
inc
fcomp
mov
inc
mov
test
rcl
push
fisttp
and
cld
enter
sbb
inc
out
pop
cmp
xchg
xchg
jmp
cmp
and
fs
jl
jns
hlt
mov
mov
loopne
(bad)
pushf
icebp
or
lods
jp
hlt
test
mov
fs
inc
or
out
pop
xchg
cmc
and
mov
jmp
test
sub
inc
mov
mov
in
aam
jbe
and
push
sbb
out
xor
and
jb
sub
push
cmp
test
shr
js
add
retf
fs
and
in
dec
push
adc
mov
fcmovne
bound
jmp
lock
sbb
pop
push
mov
call
fs
adc
outs
add
add
push
lds
sbb
in
test
dec
push
add
pop
xor
jp
cs
idiv
lahf
jnp
repnz
push
fistp
xor
cmp
test
data16
dec
out
outs
mov
pop
shr
mov
or
sbb
stos
dec
hlt
movs
aam
dec
or
xchg
not
fxch
in
adc
in
or
nop
mov
dec
aaa
shr
or
lods
add
jb
sbb
inc
mov
mov
ja
sbb
loope
retf
pop
mov
jae
push
jge
or
(bad)
dec
lea
push
int3
retf
mov
pop
outs
dec
fst
push
sub
or
sti
and
lahf
sbb
jno
les
inc
xchg
pop
int3
sub
dec
sub
imul
icebp
and
dec
loope
ins
ins
and
xor
(bad)
std
mov
adc
test
pop
mov
rol
mov
test
xchg
(bad)
pop
dec
(bad)
fdiv
movs
aad
adc
dec
jbe
or
jnp
pop
push
pop
dec
retf
icebp
mov
jae
sub
dec
push
aam
(bad)
aam
test
xchg
or
fistp
xchg
pop
sub
mov
sahf
or
xchg
xchg
xor
lds
xor
or
pop
cmp
outs
jmp
cld
cmp
lea
das
dec
out
fsubr
xchg
repz
mov
sub
or
aaa
fisubr
dec
repz
push
call
push
mov
les
mov
push
sub
push
and
jnp
aad
pop
aad
call
and
mov
xchg
int
les
adc
adc
mov
or
ins
in
xchg
mov
sti
sub
not
loope
test
add
sub
mov
add
jno
fwait
icebp
shl
shl
inc
mov
sar
addr16
pop
call
adc
mov
bound
add
ins
push
ret
push
or
loop
repnz
dec
shr
es
mov
arpl
pop
or
mov
mov
push
push
sbb
jmp
dec
das
call
add
xor
cmps
mov
mul
mov
and
fist
xor
mov
adc
das
cmp
cs
repz
aaa
lds
adc
mov
mov
arpl
jb
fs
popa
fmul
cdq
sbb
push
pop
sbb
lock
ins
ffreep
ret
fmul
mov
dec
les
xlat
in
mov
test
push
icebp
xchg
(bad)
addr16
jle
xchg
imul
daa
rol
jge
cmp
mov
xchg
and
in
lock
jmp
inc
movs
or
mov
bound
jmp
push
mov
jae
sar
sub
cmp
mov
and
xchg
dec
jno
jnp
jo
test
dec
std
clc
push
(bad)
scas
inc
and
rcl
in
addr16
xlat
lahf
dec
das
xor
inc
idiv
sub
sbb
(bad)
jae
loopne
push
fisubr
fldcw
pushf
add
sbb
mov
lods
add
fiadd
sub
xchg
cmp
sub
ret
mov
std
test
je
and
cmc
int
enter
mov
std
call
int3
mov
mov
(bad)
aam
inc
bound
aad
pushf
loopne
call
sbb
jl
push
adc
add
dec
inc
pop
pop
cmp
call
mov
out
nop
xchg
fisubr
test
cmp
adc
mov
scas
popf
in
xchg
stos
and
test
mov
dec
icebp
xor
movs
inc
adc
or
fadd
call
stos
push
into
jns
inc
xlat
fs
mov
sub
mov
in
ins
std
fadd
dec
cmp
test
mov
mov
int3
mov
sbb
adc
mov
jo
shl
js
cmp
xor
mov
fnstsw
add
push
call
push
stos
imul
push
loopne
stc
out
sbb
(bad)
or
test
lods
mov
jns
dec
mov
and
cmp
fidivr
rcr
jmp
ret
push
(bad)
mov
cmp
mov
pop
push
ret
mov
mov
ins
out
adc
cmc
les
lods
test
xchg
jl
pop
dec
inc
fwait
test
cmovo
or
and
sub
mov
test
cdq
dec
mov
sti
outs
mov
adc
js
daa
xor
mov
push
je
sahf
jno
aas
or
sub
pop
scas
fist
add
mov
dec
addr16
ror
es
push
lea
hlt
(bad)
ds
push
adc
push
cmps
xchg
mov
je
pop
jmp
jmp
(bad)
mov
cs
dec
adc
rol
sbb
pop
pop
or
addr16
push
ret
inc
or
out
jne
or
adc
test
rcl
adc
mov
adc
outs
mov
stos
push
push
rcr
dec
lahf
xor
adc
push
movs
xchg
push
stos
adc
add
pop
cld
(bad)
cwde
mov
iret
dec
dec
or
and
xchg
pop
pop
inc
mov
add
pop
xchg
jmp
xor
(bad)
mov
data16
mov
dec
stc
sbb
adc
jo
stos
push
mov
push
jge
xlat
inc
repnz
xor
lea
pop
movs
cdq
movs
out
push
into
rcl
mov
or
fstp
dec
sbb
pop
(bad)
sub
ret
push
cmps
xor
sbb
and
fwait
sbb
mov
dec
push
cmc
int
stos
sar
stos
in
test
pop
jle
out
jg
sbb
dec
test
stc
or
pop
nop
add
adc
loope
lock
sti
int
retf
inc
mov
pop
daa
push
mov
fnstsw
in
dec
push
sbb
push
adc
pusha
cli
cld
mov
sbb
jno
adc
mov
jb
pop
dec
xchg
les
jl
mov
outs
jb
xchg
fidiv
and
jbe
push
out
jecxz
xlat
lea
mov
mov
sub
data16
mov
fldlg2
out
jne
pop
mov
dec
movs
shl
add
fcom
or
js
sar
adc
pop
(bad)
xchg
jmp
jno
scas
jae
ins
shl
push
pusha
cmc
xor
push
pop
sbb
xor
ss
lods
mov
popa
mov
lock
mov
outs
pop
call
push
lock
ret
lea
repnz
in
das
into
and
popa
sbb
arpl
int3
xor
sub
mov
out
push
xchg
xor
sub
rcr
call
jmp
rol
cmp
(bad)
ja
sub
jbe
lock
mov
das
mov
test
xchg
imul
sub
xchg
cs
test
or
fcom
and
or
(bad)
jmp
scas
mov
push
adc
mov
push
sar
(bad)
test
outs
gs
and
in
mov
dec
(bad)
or
sahf
repnz
test
xor
xchg
and
mov
sub
mov
and
ss
mov
xchg
adc
dec
push
lods
gs
fdivr
cmp
cmp
test
sbb
mov
jmp
dec
ins
jno
mov
mov
mov
or
jmp
(bad)
pop
aad
enter
call
test
and
sub
sbb
push
dec
fs
aad
pop
lods
mov
jnp
(bad)
inc
loope
movs
inc
gs
xor
loopne
sbb
pop
sahf
aad
je
xor
push
push
and
div
or
sahf
outs
xor
cmp
inc
xlat
xchg
fnstsw
sub
cwde
dec
outs
inc
sub
dec
push
movs
inc
les
mov
and
sbb
idiv
jbe
jmp
ret
out
gs
sub
fbld
add
shl
lods
repnz
mov
and
mov
cmp
test
inc
imul
cdq
in
rcr
pop
fmul
pop
dec
inc
pop
inc
pop
aaa
mov
fstp
sahf
inc
(bad)
int
push
data16
aad
jecxz
sub
push
xor
mov
inc
into
retf
cmps
cdq
mov
jae
leave
cmps
clc
fimul
out
mov
and
int3
xchg
jae
dec
sbb
jo
repz
add
jg
xchg
mov
dec
iret
jmp
xchg
and
jle
or
fld
push
imul
fisttp
xchg
inc
and
inc
cmps
jno
pop
ds
mov
sbb
adc
aam
ds
cmp
or
inc
or
and
loop
mov
push
sub
pushf
push
push
ficom
sub
mov
idiv
xchg
fnstsw
xor
dec
and
retf
call
into
jmp
pushf
add
mov
movs
dec
fadd
jns
push
jae
dec
sahf
(bad)
rol
inc
ss
aam
xor
int3
inc
int
out
fucomp
mov
add
fsub
adc
sub
and
dec
int
add
popa
jo
test
cdq
lods
mov
imul
and
or
push
jne
cdq
mov
sbb
mov
xchg
lds
adc
retf
mov
jl
adc
jg
adc
pop
sub
and
push
out
push
mov
cmp
(bad)
cmp
sbb
sub
cmp
add
popf
aas
mov
out
lock
rcr
aad
add
cmp
add
(bad)
cmp
daa
jb
int3
adc
repz
lds
test
hlt
lahf
fcomp
out
push
and
pop
add
test
pop
es
cmc
popf
adc
out
or
push
and
jmp
mov
sub
adc
call
sbb
int3
out
dec
sub
fabs
fistp
int3
push
cli
push
aaa
(bad)
fdivr
jmp
add
mov
dec
in
or
hlt
jl
xadd
fist
movs
jge
inc
push
xor
outs
cdq
aaa
dec
movs
fwait
xor
lods
mov
sub
mov
out
cmp
push
xor
loope
mov
out
jno
cmp
sub
dec
mov
push
and
mov
outs
ret
sbb
dec
test
mov
xlat
out
popa
(bad)
jmp
test
imul
es
int
xchg
mov
pop
and
in
(bad)
in
cmp
mov
inc
test
cmp
cmc
out
mov
xor
test
mov
out
shr
add
pop
int
es
pop
adc
sub
in
or
xor
inc
and
pop
push
hlt
daa
push
std
sbb
cld
cmps
jmp
dec
mov
popa
or
or
pop
xchg
mov
inc
and
pop
fs
dec
mov
pop
dec
push
mov
sbb
fwait
mov
cmovge
sahf
and
xchg
inc
in
leave
mov
dec
lahf
jge
xchg
xchg
sub
mov
and
mov
mov
imul
imul
loop
test
in
sbb
repnz
inc
daa
leave
inc
jle
arpl
sub
inc
dec
jno
sbb
ins
cld
jbe
sahf
sahf
push
aad
loope
scas
dec
add
mov
add
xchg
pop
sti
lods
mov
mov
(bad)
cmp
imul
add
cmp
sbb
xchg
mov
mov
movs
and
pusha
ret
sub
retf
sbb
(bad)
dec
test
scas
jg
nop
mov
int3
xchg
adc
pop
aam
out
pop
pop
cmp
stos
add
retf
jae
pop
out
or
mov
loopne
push
add
push
or
ds
sub
mov
inc
or
sbb
into
aam
popf
test
cmp
test
or
fst
xlat
mov
inc
xchg
push
cmp
loop
shr
outs
(bad)
add
push
pop
jne
and
jns
stos
div
aam
jno
ss
aas
scas
pop
call
mov
pop
daa
nop
arpl
dec
addr16
xchg
adc
adc
and
dec
and
imul
(bad)
and
mov
movs
sub
pop
pop
bound
mov
cmp
push
cmp
mov
xor
aas
push
xor
or
cmp
push
dec
pop
mov
pusha
dec
mov
cmp
sti
jns
add
movs
cmp
test
pop
xor
push
std
sbb
jmp
jne
xor
std
outs
mov
xchg
call
mov
cmp
(bad)
popa
xchg
push
sub
retf
out
jmp
jnp
inc
sbb
jae
fsubrp
inc
inc
cmp
jge
or
dec
inc
repnz
mov
in
push
retfw
mov
es
lock
rcr
fiadd
inc
fisubr
sbb
sbb
inc
dec
shl
xchg
jl
jmp
or
hlt
and
call
mov
mov
aaa
cmp
or
and
aad
adc
xchg
imul
call
sub
dec
call
mov
(bad)
mov
movs
push
pop
ret
add
xchg
pop
add
cmps
xor
mov
lods
cdq
loop
cdq
mov
rcl
ret
adc
mov
cwde
push
(bad)
sub
or
jle
xchg
xlat
xlat
mov
lahf
xor
out
mov
xchg
(bad)
push
test
sub
xor
repz
jg
adc
fld
mov
es
mov
adc
and
mov
cmp
cld
jecxz
xchg
es
rcr
retf
inc
adc
pop
xchg
jle
cmp
mov
jo
push
xchg
pop
jmp
daa
cmp
data16
stos
pop
(bad)
stos
int3
pushf
pop
dec
lods
push
lock
push
idiv
scas
sbb
mov
repz
cmps
ds
mov
xchg
jl
lahf
xchg
ret
enter
lods
or
stc
push
mov
rcr
or
push
dec
sbb
in
lods
cmp
cmp
in
dec
cmps
clc
mov
cwde
iret
xor
daa
mov
outs
lods
jg
inc
mov
sub
adc
test
jmp
sub
ret
cmc
hlt
fcom
popa
adc
xor
and
sub
lock
pop
ds
sub
in
loope
leave
ins
retf
dec
sbb
call
xor
xchg
inc
push
stc
jae
and
mov
jge
repnz
push
or
add
sub
stos
dec
rol
icebp
(bad)
adc
mov
sbb
(bad)
adc
jmp
jo
loopne
dec
out
loopne
out
push
stos
imul
dec
rol
inc
(bad)
or
inc
enter
ret
inc
jecxz
ins
mov
xor
cmps
in
scas
ret
cmps
out
jbe
push
lahf
inc
mov
cdq
push
rol
push
cmp
mov
inc
adc
sbb
mov
cdq
jno
jno
pop
shr
leave
out
je
or
pop
cmp
sbb
jmp
push
adc
cmps
fwait
hlt
mov
mov
jmp
imul
daa
sub
inc
mov
push
(bad)
sub
and
jnp
jb
xlat
dec
jb
repnz
ss
pop
imul
sub
stos
mov
repnz
ins
dec
cmp
and
test
dec
or
sahf
clc
jo
shr
clc
sbb
rcl
inc
aam
out
fld
scas
xor
mov
data16
jcxz
in
sar
outs
cmp
movs
add
gs
popa
adc
and
and
xchg
cmp
daa
scas
ret
push
cmp
rol
xor
in
xor
jmp
cli
iret
mov
pop
jne
pop
mov
pushf
stos
jp
mov
popf
dec
mov
dec
mov
jg
pushf
loop
jb
or
sub
adc
pusha
xor
cmps
inc
push
add
xor
or
pop
mov
inc
sbb
js
mov
cmp
sub
lea
or
lods
fisttp
into
push
dec
xor
idiv
push
inc
pop
fwait
add
xor
mov
push
jg
or
jecxz
jno
rcl
fcomip
inc
adc
inc
call
mov
aas
das
push
push
cmp
cs
std
cmp
ja
daa
inc
sbb
inc
cwde
lea
in
sti
fdivr
push
xchg
jl
ret
adc
inc
fnstenv
sbb
or
mov
cmp
jp
sub
push
rcr
sbb
loope
mov
pusha
or
add
push
mov
inc
sub
xlat
test
or
data16
mov
test
and
outs
lea
pop
jp
call
in
jle
cmps
mov
icebp
pusha
div
rcr
xchg
push
(bad)
mov
inc
jae
inc
dec
ficom
arpl
mov
dec
loop
jo
lds
jbe
sahf
or
std
cmp
or
or
xor
cmps
popa
ins
pop
mov
mov
sbb
sahf
push
stc
je
fimul
mov
int3
or
daa
inc
pop
xchg
mov
outs
jbe
push
push
in
push
inc
pop
sbb
fucomp
aam
mov
cli
jne
mov
xlat
in
fstp
dec
stc
add
jo
loopne
arpl
sar
mov
(bad)
(bad)
jmp
add
cld
xor
mov
and
add
sbb
call
jb
or
ds
lods
or
pusha
dec
clc
hlt
mov
mov
jmp
inc
das
mov
dec
dec
shl
lods
mov
mov
adc
aas
mov
push
jbe
adc
popf
sbb
sub
aaa
push
(bad)
adc
dec
add
cdq
mov
xchg
std
mov
xchg
cmp
lahf
ins
mov
fsub
push
jb
xchg
pop
adc
and
mov
shl
inc
adc
nop
fisttp
pop
(bad)
and
jmp
mov
(bad)
jecxz
or
inc
dec
mov
cld
loop
mov
repnz
pop
mov
push
push
inc
sbb
dec
icebp
adc
inc
xchg
and
push
and
add
fwait
sub
data16
aam
dec
pushf
jmp
jecxz
sbb
popf
pop
or
outs
pop
retf
xchg
xor
mov
sahf
sbb
sbb
xlat
out
into
ins
shl
ror
pop
and
cmp
into
push
push
adc
mov
lds
imul
fsubr
push
cmps
push
repnz
pop
gs
js
xlat
mov
mov
jp
push
add
clc
add
jno
outs
push
add
inc
and
imul
xor
stos
dec
aaa
aad
(bad)
sti
pushf
inc
cmp
cmp
push
inc
mov
nop
pop
lods
xor
adc
add
or
dec
and
lds
add
xchg
ror
stc
pop
push
and
call
std
in
(bad)
stc
cmovns
adc
sub
add
cmp
add
xchg
out
xor
xor
popa
clc
repz
add
mov
sub
jle
cmp
sub
aad
cld
(bad)
mov
mov
(bad)
or
sub
sub
jae
mov
cmps
xor
cmp
icebp
pop
sub
rcl
cld
cmc
shl
mov
call
jb
xor
(bad)
adc
add
lea
(bad)
call
xor
add
test
(bad)
cmp
xor
xor
(bad)
(bad)
cmp
das
push
ret
(bad)
ins
push
mov
nop
lock
mov
inc
mov
xchg
push
mul
fimul
cmp
in
loopne
stos
arpl
inc
adc
movs
fimul
sbb
cli
jecxz
loope
(bad)
das
add
fidivr
xor
mov
push
sar
pop
mov
loope
add
cmp
pop
push
enter
fild
mov
aas
push
retf
es
pusha
mov
and
jae
cmp
xlat
mov
ins
mov
retf
adc
or
jae
sub
retf
test
retf
and
mov
pop
shr
fst
mov
rcr
jle
sbb
shr
hlt
test
(bad)
icebp
cdq
scas
shl
(bad)
sar
pop
push
das
adc
mov
rcl
jp
sahf
retf
add
push
mov
or
dec
(bad)
xchg
js
pop
mov
leave
pop
dec
push
mov
ret
xor
xchg
hlt
xchg
xor
in
repnz
jno
xor
add
retf
jo
push
test
xor
cmp
jg
sbb
sbb
add
add
mov
inc
mov
mov
mov
push
rcl
and
jecxz
sub
pop
sbb
push
push
add
ss
(bad)
add
or
push
inc
xchg
pop
sbb
int3
and
fs
outs
cs
out
jb
fisttp
mov
pop
sbb
imul
mov
push
push
loopne
mov
jle
cmps
push
addr16
ss
dec
fwait
dec
out
dec
add
mov
fist
pop
jns
mov
adc
add
mov
out
xor
mov
aaa
retf
ret
jmp
jg
cmp
fsubr
mov
adc
test
jne
test
shr
mov
push
jl
push
and
or
push
mov
fidiv
arpl
mov
inc
in
pop
dec
outs
mov
xchg
sub
fwait
sub
ret
into
mov
movs
mov
lahf
add
shr
push
aad
daa
mov
adc
inc
in
push
add
popa
mov
icebp
or
mov
gs
imul
dec
fbstp
popa
movs
push
sar
xor
lods
repz
and
aad
pushf
call
pop
push
sub
push
mov
outs
cmp
(bad)
sub
and
inc
mov
stos
outs
retf
mov
pop
xor
ins
aam
xlat
fidivr
fcomp
sbb
repnz
cwde
je
push
rcr
fwait
not
jl
push
push
sbb
int
cmc
aaa
je
fistp
jge
sub
ret
inc
xor
stos
mov
data16
mov
aad
js
push
in
sar
and
fstp
and
mov
mov
dec
dec
add
clc
bound
stos
jmp
jo
arpl
ja
cmp
dec
dec
sbb
dec
rol
imul
or
sub
pop
pop
sub
mov
pop
js
add
sub
mov
push
push
in
mov
aad
cmc
repnz
xor
pop
jmp
dec
test
rol
dec
fidivr
pusha
pop
sbb
iret
xlat
pop
sub
test
retf
adc
movs
stos
ds
lods
xchg
movs
sahf
pop
xchg
mov
in
cmp
lahf
(bad)
test
mov
shr
fmulp
sub
jo
pop
cli
in
xchg
mov
retf
push
in
mov
ret
call
pop
adc
(bad)
jmp
fs
cs
(bad)
lock
jmp
retf
cmps
je
mov
outs
movntps
data16
mov
add
popf
push
mov
pop
sub
jne
pop
pop
and
xchg
dec
mov
push
xor
mov
dec
mov
jp
mov
dec
shr
es
jbe
adc
jmp
shl
or
jge
pop
ret
pop
adc
daa
sub
mov
cmp
jae
call
in
sti
dec
sub
mov
mov
in
cld
aas
addr16
mov
stc
jecxz
mov
xchg
outs
popa
(bad)
enter
std
mov
rol
inc
iret
imul
mov
adc
fistp
not
push
rcl
call
cmp
aad
js
adc
daa
and
psubusw
push
shr
nop
xlat
int3
daa
into
pop
adc
sbb
adc
inc
xor
ficom
inc
lods
and
cmps
xchg
pop
jl
cmp
fsubr
adc
sub
push
push
xor
in
out
mov
popf
sub
jb
sti
xchg
or
sahf
mov
sub
stos
into
(bad)
push
std
out
push
(bad)
dec
inc
(bad)
sbb
in
adc
aas
sahf
xchg
add
(bad)
cld
ins
mov
cmc
adc
push
gs
mov
adc
aaa
rcl
sbb
jge
loop
inc
out
cmps
inc
mov
pop
int3
sbb
ins
inc
adc
fist
out
aad
sbb
ret
sub
sbb
xor
je
sahf
das
in
mov
lahf
movs
inc
pop
test
adc
mov
repnz
repnz
mov
sti
fs
sub
mov
jne
jbe
pop
stos
repz
inc
dec
test
shl
cmp
(bad)
xchg
jecxz
dec
mov
mov
mov
inc
rcr
imul
mov
xor
xchg
mov
add
in
dec
(bad)
fcomp
out
xlat
(bad)
repnz
lds
ds
and
xchg
mov
cmp
lods
fstp
sbb
sbb
fstp
popa
pop
pop
mov
in
pushf
dec
adc
dec
(bad)
dec
jns
mov
and
sub
xlat
clc
inc
cwde
dec
add
adc
loop
jmp
cmps
adc
ret
in
cmps
icebp
dec
call
rcl
call
lahf
mov
or
jnp
into
out
out
fistp
hlt
add
repz
out
mov
cmps
lods
in
aad
loopne
cs
sbb
adc
repz
jmp
lods
mov
in
or
and
mov
xchg
and
mov
shl
std
ss
int3
and
xor
adc
test
scas
out
mov
and
inc
pop
(bad)
jnp
adc
xor
cmp
lock
imul
fsub
pop
cmp
jmp
out
out
dec
inc
push
mov
and
pop
not
push
xchg
arpl
xchg
push
xor
sub
(bad)
mul
mov
(bad)
pop
fld
dec
sub
mov
pop
and
adc
pop
mov
mov
sub
sub
lahf
sub
call
call
js
sahf
cmp
fdivr
das
paddq
pop
cmp
fs
mov
out
fst
ret
push
sub
sub
int3
mov
inc
in
mov
icebp
add
xchg
(bad)
mov
dec
out
jbe
in
lods
int
ficomp
gs
mov
push
inc
jae
jne
jb
pop
movs
dec
jg
and
(bad)
popf
lahf
push
(bad)
fisubr
lods
xor
fucomp
push
lock
mov
sub
lock
add
fild
(bad)
push
cld
call
and
fisubr
sahf
sub
mov
jno
xchg
push
mov
lods
call
cdq
or
cmp
push
bts
fdivr
pop
sbb
movs
aas
mov
mov
call
sbb
mov
lea
fisub
inc
sbb
cmp
push
pushf
and
sbb
ds
daa
and
lea
popf
xor
outs
xor
sti
dec
xor
loopne
dec
fs
rcr
sub
pusha
fs
cs
inc
cdq
add
pop
stos
mov
outs
loope
push
xor
ds
ja
ins
ret
push
mov
inc
xchg
jae
int3
xchg
ret
inc
movs
in
lds
imul
in
dec
fdiv
gs
iret
mov
push
pop
jp
ja
pop
mov
scas
mov
and
inc
pop
movs
dec
data16
fwait
dec
jne
mov
sbb
adc
jns
jl
stos
mov
je
and
cli
sbb
shr
dec
sar
or
jmp
push
and
ins
xor
mov
fistp
fwait
pop
lock
dec
push
out
jnp
fwait
xchg
ds
jae
jecxz
xchg
mov
cmc
adc
iret
ja
cdq
mov
je
mov
dec
div
lods
cmp
mov
loopne
adc
dec
fidivr
cmp
(bad)
fisub
push
nop
inc
sub
test
cwde
nop
(bad)
push
add
dec
push
mov
cmp
in
mov
mov
icebp
ds
add
iret
sti
and
test
and
xchg
mov
dec
xchg
clc
jecxz
add
inc
and
mov
cdq
call
sbb
jne
out
(bad)
jg
movs
dec
or
cmp
pop
or
lds
cmp
stos
outs
jne
sbb
mov
dec
mov
adc
les
(bad)
and
es
add
rol
nop
sahf
mov
pop
adc
cli
pusha
lods
movs
or
shl
cwde
mov
and
or
push
cdq
imul
sub
dec
jge
jno
aas
out
(bad)
gs
call
movs
jge
push
repnz
sub
jns
fidiv
loope
inc
fsub
add
inc
pop
das
xchg
and
inc
pop
imul
stc
scas
inc
mov
loope
add
mov
jo
dec
cdq
(bad)
nop
pop
add
xchg
xchg
cmps
mov
cmp
popa
je
jle
dec
add
adc
inc
pop
adc
and
les
mov
(bad)
adc
cmp
inc
mov
mov
xchg
sub
jmp
fnsave
mov
jl
lea
push
ins
es
in
push
or
icebp
pop
pop
iret
jge
int
jp
retf
push
repnz
jmp
push
ss
(bad)
shl
repz
stos
pop
inc
out
xor
loopne
add
add
stc
mov
outs
loope
add
jo
sbb
(bad)
aad
sub
cmp
pop
gs
mov
or
fld
inc
iret
push
pop
lods
or
aaa
stc
fdivrp
std
cmc
in
jo
imul
out
mov
inc
loop
aad
and
inc
add
xor
je
(bad)
dec
es
xor
sbb
cld
jl
loope
or
pop
inc
jle
cmp
jmp
sahf
xor
sahf
ret
mov
test
out
adc
imul
add
repnz
cmp
mov
shr
mov
mov
(bad)
in
(bad)
pop
in
fstp
mov
ins
add
mov
pop
jnp
aas
add
or
mov
push
and
inc
int3
cmps
pop
outs
fld
daa
shr
mov
retf
add
push
jp
daa
ds
inc
hlt
rcl
xchg
mov
add
retf
dec
jno
mov
cld
pop
and
dec
pop
retf
call
iret
inc
add
xchg
push
pop
xchg
enter
sbb
repz
mov
and
cmp
test
adc
test
adc
xchg
and
or
xlat
adc
cmp
push
pop
fadd
ficomp
jne
les
adc
mov
outs
fcomp
xchg
pop
jne
add
test
lods
pushf
jmp
(bad)
aas
or
push
add
jmp
int
push
stos
lahf
aas
add
enter
mov
push
mov
imul
addr16
adc
cmp
aam
dec
std
call
add
push
pop
mov
fs
xor
xor
lock
pop
movs
fdivr
mov
rol
mov
and
lds
sub
clts
cmp
xor
push
mov
icebp
es
in
cmp
call
lods
push
xchg
bound
inc
xchg
adc
mov
mov
bnd
xchg
cmc
add
test
pushf
pop
jle
mov
jo
xchg
test
sub
lea
pop
cmp
sbb
cmp
mov
inc
in
xchg
xor
icebp
inc
mov
and
mov
loope
in
mov
xor
xchg
mov
pop
and
cwde
outs
cwde
mov
push
jbe
xor
xlat
push
sar
jb
cmp
push
fsubr
(bad)
push
icebp
clc
stos
jb
cmp
stc
jne
dec
test
add
dec
and
(bad)
clc
add
pop
ror
xor
cli
dec
and
push
fistp
jge
aaa
mov
xlat
sar
data16
adc
in
in
jae
xchg
sbb
xchg
and
sub
in
xor
add
pop
mov
aad
jp
stc
pop
dec
pop
jnp
cmp
sbb
sub
imul
rol
mov
es
add
out
sbb
fisttp
jns
mov
mov
xlat
jb
and
xor
movsx
lea
dec
es
dec
loope
sahf
rcl
pushf
shl
xor
(bad)
rcl
jecxz
dec
mov
data16
in
sbb
jno
nop
pop
mov
mov
sub
jbe
mov
into
jo
aas
jne
in
pop
shl
mov
mov
sub
inc
jmp
pop
ss
nop
push
and
inc
in
xor
push
sub
cmp
dec
movs
ins
adc
fld
adc
xrelease
mov
cmp
mov
jbe
aas
rol
add
movs
jne
mov
aas
jle
or
aad
xacquire
cld
mov
out
jns
xor
sub
push
push
xchg
add
icebp
inc
(bad)
(bad)
popa
fmul
cmc
adc
int
jge
pop
cmps
adc
or
or
addr16
pop
in
add
call
mov
fs
nop
mov
mov
pop
adc
out
mov
adc
mov
pop
lar
test
jbe
inc
inc
int3
nop
xchg
sti
repz
jg
repnz
jle
and
ja
addr16
enter
add
jnp
fiadd
xchg
mov
ds
jbe
es
(bad)
std
movs
mov
or
jge
fild
or
addr16
ror
es
mov
jns
icebp
cmp
xlat
or
test
jmp
adc
ss
leave
sbb
movs
out
fwait
jns
sbb
mov
mov
repz
mov
push
or
jg
xchg
movs
cdq
loopne
fcomp
sub
rcl
pop
push
adc
into
sbb
mov
movs
aas
mov
push
mov
pop
sbb
cmp
mov
ret
sub
adc
add
mov
mov
mov
mov
jg
adc
gs
mov
xor
mov
cmp
jecxz
cmp
sub
mov
cmp
dec
btr
or
mov
inc
cmp
lahf
pop
dec
cmp
test
push
sbb
mov
adc
or
jmp
adc
add
stos
aas
mov
xchg
xor
fdiv
fsubr
pop
ret
in
xor
sub
scas
mov
sub
mov
inc
inc
jg
push
pop
fisttp
js
mov
push
and
adc
out
sahf
add
and
and
push
mov
jb
(bad)
add
pusha
ss
mov
xor
mov
mov
jle
ret
sub
mov
push
arpl
aaa
std
mov
xor
test
loopne
in
push
into
mov
pop
lods
addr16
pop
pop
or
stos
(bad)
inc
sbb
and
inc
mov
pusha
js
xlat
daa
jbe
sbb
sbb
addr16
inc
or
les
xor
das
xor
and
retf
(bad)
dec
mov
pop
or
cmp
mov
mov
xchg
pop
scas
push
mov
xlat
out
xchg
sub
shl
or
std
pop
add
xor
mov
fucomi
xchg
xchg
(bad)
jle
or
mov
cmp
(bad)
aaa
mov
arpl
adc
ss
imul
xchg
pushf
bound
out
adc
cmp
and
sbb
aaa
in
inc
shl
lahf
jecxz
xchg
sub
stos
push
or
(bad)
pop
ds
push
mov
push
jle
lds
call
push
add
call
or
mov
xchg
repz
stos
cmp
into
jp
jmp
push
mov
jge
push
or
leave
cmp
fsubr
leave
pop
pop
xor
nop
int
int
sti
movs
(bad)
and
hlt
add
push
out
out
int
cli
mov
pop
lods
inc
xor
mov
adc
jle
loopne
stos
xchg
or
sub
cmp
fidivr
repz
inc
cli
sub
fcomi
or
sahf
xor
xchg
fidivr
ins
(bad)
mov
inc
add
scas
das
dec
sar
shl
call
(bad)
daa
and
xchg
jmp
(bad)
push
hlt
repnz
test
(bad)
popf
les
icebp
xchg
mov
in
sbb
fisubr
inc
lods
push
push
or
sub
push
sahf
repnz
mul
pop
sbb
xchg
add
and
or
hlt
add
mov
cmc
sub
xchg
(bad)
xchg
sub
jo
les
mov
mov
push
je
mov
test
ficom
fucomi
sub
sbb
or
xchg
call
push
fwait
cwde
nop
mov
mov
mov
movs
mov
xchg
daa
out
leave
adc
push
dec
xor
mov
pushf
cmp
cmc
loope
xor
mov
and
jl
jecxz
push
dec
jo
adc
and
sub
xchg
mov
cdq
jno
add
add
cmp
(bad)
pushf
cdq
movs
cmp
pusha
push
lods
cmp
cwde
lock
jb
daa
lahf
mov
push
push
dec
outs
xchg
popf
test
cs
xchg
fstp
nop
bound
(bad)
jno
enter
(bad)
mov
cmp
sub
ins
mov
cmp
sub
mov
shl
mov
add
xchg
xchg
fistp
pop
ficomp
jg
iret
ret
xor
adc
leave
add
pop
fmul
xchg
int
cwde
push
inc
scas
adc
jae
pop
xchg
push
test
pop
or
fadd
jo
adc
mov
(bad)
push
inc
dec
aam
(bad)
leave
aaa
push
retf
daa
and
and
dec
mov
popa
in
jmp
or
in
mov
or
cs
cmp
xor
jbe
jg
int3
xchg
mov
in
aam
lods
jb
add
xor
ins
cmp
(bad)
xor
pushf
es
xchg
mov
jge
push
aad
or
(bad)
mov
loop
jnp
or
ja
sahf
sahf
mov
push
lods
mov
sub
dec
je
mov
(bad)
cld
add
stc
into
shl
frstor
js
jmp
inc
rcl
leave
ret
sub
push
jmp
test
stc
push
fcom
out
shl
sub
ror
out
rol
test
mov
(bad)
cdq
mov
sub
retf
int3
call
adc
jae
das
iret
sar
ins
dec
or
test
fst
xchg
mov
and
pop
mov
ror
popa
inc
sbb
pop
std
mov
jbe
test
push
test
xchg
jle
sbb
bound
push
dec
mov
popa
jmp
xchg
mov
pop
test
stos
jno
ret
in
mov
and
stos
cmp
jg
fstp
rol
jge
stc
add
movs
sbb
cmp
retf
adc
add
add
mov
jle
mov
pusha
xor
dec
jmp
mov
outs
cld
cmp
icebp
push
shr
push
stc
push
out
jmp
add
jns
(bad)
stc
push
push
adc
xchg
pusha
pop
push
test
cmp
daa
add
aam
adc
stos
movs
xor
push
mov
dec
dec
rol
inc
imul
push
sub
lods
jb
jb
pusha
add
push
cmc
or
xchg
lahf
pop
mov
jecxz
jbe
push
mov
inc
repz
pop
shl
movs
das
repz
mov
jle
inc
outs
adc
or
jl
sub
fcmovnb
repz
(bad)
std
dec
cmovo
or
out
pop
mov
daa
xchg
retf
int
pop
scas
icebp
push
fcom
scas
in
and
loop
cmp
mov
sahf
mov
push
mov
jmp
or
push
aad
sbb
or
add
or
div
mov
ror
iret
jge
mov
test
out
cli
ins
(bad)
add
cld
test
leave
or
les
clc
shr
push
into
icebp
js
cmp
pop
mov
(bad)
jnp
fcomi
and
cmp
retf
mov
mov
push
sub
ret
arpl
in
inc
dec
adc
push
iret
jne
cmps
sbb
cmps
jge
sbb
inc
push
shl
push
loopne
xchg
xchg
mov
icebp
mov
and
out
jns
and
in
pop
cli
mov
dec
ins
rol
mov
or
or
mov
loopne
out
sbb
repz
fisubr
push
into
inc
data16
popf
sbb
jo
push
xchg
iret
out
dec
popf
push
icebp
(bad)
xlat
pop
std
sbb
lock
out
dec
pop
dec
out
jge
cmc
fiadd
push
test
or
into
(bad)
sbb
add
shl
into
xor
std
ds
pop
sub
in
jb
fwait
pop
adc
ror
lahf
sub
cmp
div
iret
shl
push
fst
mov
push
add
cs
push
aad
ret
inc
dec
(bad)
pop
shl
mov
adc
jo
xor
sub
jge
ds
int
pop
loope
loop
adc
outs
push
adc
mov
jne
repz
sub
cli
cmp
setle
cmps
lahf
test
adc
fnstsw
mov
lea
and
dec
ror
mov
xor
mov
mov
cmps
and
push
test
xchg
ds
add
fwait
jmp
(bad)
mov
or
les
adc
test
(bad)
cli
(bad)
pop
ins
sub
jae
daa
cmp
(bad)
arpl
jmp
stos
mov
or
mov
scas
aam
add
sbb
xchg
pop
add
mov
sbb
dec
cmp
jg
xchg
dec
push
scas
lock
shl
arpl
cmp
xor
pop
repnz
leave
add
pop
jns
cmps
imul
ret
dec
cli
jns
add
dec
xchg
sub
je
jg
fstp
pushf
idiv
cld
dec
ja
jecxz
sub
inc
fs
dec
push
call
test
xor
cwde
(bad)
ins
mov
xchg
cdq
shl
retf
pop
push
jmp
xchg
mov
cmps
dec
and
movs
xchg
mov
inc
jge
cmp
ret
push
jno
pop
inc
or
ins
and
dec
xor
mov
mov
into
add
sub
cdq
jmp
sub
or
cld
neg
pop
scas
and
pop
add
xor
setge
or
and
jge
push
stos
icebp
cmc
repz
test
stc
sbb
jmp
jle
add
out
add
mov
inc
setns
in
test
dec
mov
adc
in
mov
call
fsubr
xchg
mov
ins
push
mov
mov
jmp
sahf
js
out
shr
inc
sbb
jp
pop
cmc
cdq
pop
adc
test
xchg
loope
and
adc
outs
push
loopne
sbb
jge
ret
test
sub
jg
and
(bad)
push
or
js
cmp
push
aad
leave
or
rol
jge
adc
test
jmp
mov
(bad)
ja
mov
stos
sti
push
or
push
ret
adc
sbb
inc
scas
dec
test
mov
mov
xlat
inc
dec
push
cdq
int
or
pop
js
fimul
or
cmp
jecxz
dec
addr16
pop
xchg
ja
imul
int3
add
(bad)
mov
push
sub
idiv
cmp
out
xlat
push
sub
mov
pop
(bad)
jecxz
ret
not
mov
rcl
js
xchg
cmp
xchg
mov
xchg
adc
and
(bad)
loopne
mov
mov
mov
js
lea
cmps
in
mov
jo
jno
(bad)
addr16
cmp
cmp
(bad)
rcr
and
inc
sbb
cmp
das
test
fld
mov
mov
sbb
ror
jl
fninit
outs
fcomp
out
inc
mov
not
mov
loop
jmp
xchg
or
adc
jns
sbb
(bad)
jns
jb
pusha
frstor
mov
and
pop
inc
divps
dec
(bad)
fdivr
mov
push
lods
hlt
dec
fwait
popf
in
leave
jmp
enter
jmp
int
inc
add
push
bnd
mov
jae
call
mov
ins
stos
jns
repnz
sti
cld
fisub
or
aaa
dec
lock
popf
push
push
aad
pop
scas
test
mov
push
push
stos
ret
fild
addr16
(bad)
dec
in
fmulp
and
push
fs
lds
xor
mov
pop
cmp
(bad)
repz
xchg
(bad)
stos
nop
sbb
xor
push
pop
bound
add
aaa
sar
push
jno
dec
sub
or
leave
jmp
xor
jnp
pushf
adc
lock
lahf
movs
das
and
pop
adc
cli
sbb
or
push
inc
or
cs
js
push
pop
imul
jle
push
fisttp
and
int3
inc
jae
fs
aas
out
rcl
push
out
push
dec
cmp
cmp
adc
mov
push
xchg
fs
pop
cmp
xor
mov
outs
popf
xlat
js
add
popa
rcr
retf
mov
int
inc
xchg
inc
shl
pop
mov
and
shl
mov
jb
pop
dec
adc
add
bound
push
pop
sbb
addr16
sub
pop
out
lods
je
adc
push
or
adc
dec
xchg
mov
cmpxchg
mov
aam
add
stos
cdq
or
cmp
push
js
in
bound
movs
(bad)
retf
nop
bsf
out
and
shr
xor
mov
xchg
movs
into
and
in
shr
or
sub
or
shr
fucomip
dec
and
lods
ret
inc
mov
push
or
retf
gs
xchg
xlat
shr
enter
leave
addr16
mov
mov
sub
mov
lock
push
adc
or
movs
arpl
cmp
mov
jbe
jle
ds
mov
aaa
mov
scas
mov
stc
sub
or
mov
and
push
mov
mov
ins
(bad)
shl
jno
dec
in
sub
mov
adc
or
in
sub
out
sti
ja
add
inc
stos
ins
jl
mov
in
pop
mov
ret
aam
inc
pop
pop
out
popa
mov
push
fs
pop
loop
sub
pop
cmps
push
pushf
dec
sti
dec
scas
mov
add
out
pop
cmps
mov
mov
xchg
repz
xchg
fwait
dec
(bad)
das
retf
cmp
xchg
ds
fisub
fadd
enter
inc
cmp
push
cmps
pop
ficomp
xchg
xor
je
mov
gs
stos
lods
aaa
push
lods
retf
add
in
cmp
push
or
and
xchg
xor
cs
cmps
pop
add
jno
inc
ffreep
rcr
pusha
jge
mov
xchg
and
sbb
jge
mov
inc
and
fisttp
pop
cwde
inc
loope
nop
out
and
push
cmp
sbb
nop
push
adc
dec
leave
aam
push
in
xchg
dec
inc
enter
cdq
clc
xor
dec
sbb
fld
jnp
pop
sahf
push
xchg
mov
bound
push
push
add
sahf
inc
daa
adc
retf
push
jo
out
mov
push
shr
inc
mov
stc
jae
fwait
jle
xchg
or
dec
lds
sub
je
fisttp
jmp
ins
clc
adc
ins
hlt
sbb
fcom
aam
lods
sub
mov
jmp
mov
or
movs
clc
mov
loope
ds
and
loopne
mov
mov
xlat
xchg
cmps
or
xor
add
mov
imul
fwait
xor
test
shr
or
retf
fisubr
sbb
jl
sub
adc
jno
or
xchg
call
outs
dec
test
pop
fist
retf
outs
inc
pop
sbb
and
mov
ror
add
push
imul
inc
jecxz
cmps
add
movs
(bad)
cmp
jnp
cdq
nop
cmp
(bad)
adc
into
idiv
sti
mov
cwde
sahf
xchg
mov
xlat
cmp
in
fmul
jge
and
push
xchg
cmp
mov
inc
pushf
jne
or
jb
leave
or
and
addr16
dec
dec
mov
enter
movs
cwde
dec
outs
retf
mov
lock
ffreep
test
or
movs
pop
and
outs
jmp
jecxz
retf
mov
fsubr
icebp
repnz
sub
je
pop
addr16
adc
pop
add
in
or
call
outs
dec
mov
and
movs
mov
inc
add
fistp
or
lods
jp
int
gs
fwait
(bad)
xor
shl
in
popa
cmp
mov
mov
iret
push
mov
mov
adc
fimul
call
push
loope
loop
jae
mov
pop
push
xchg
adc
retf
stos
rcl
iret
fistp
mov
add
mov
sub
aaa
sub
cmps
std
and
or
sbb
add
rcl
mov
pop
cmps
ret
std
or
js
je
(bad)
push
xor
cdq
sub
pop
add
mov
in
out
(bad)
addr16
add
js
mov
cmps
sub
jp
movs
and
loopne
ss
sbb
das
and
int3
cmp
or
cwde
xor
mov
jl
je
add
mov
dec
pop
aas
dec
sbb
pop
(bad)
sub
ffree
sbb
adc
adc
and
adc
add
push
lahf
enter
xchg
cdq
(bad)
xchg
cmp
pop
hlt
add
and
lods
test
and
or
adc
pop
ja
push
ds
stos
cmc
ret
adc
les
and
nop
sub
jg
popa
push
int
mov
xchg
out
jno
in
aad
inc
lods
inc
int
pop
xlat
lods
push
clc
cdq
mov
push
sti
cs
popa
and
xor
add
xchg
hlt
test
dec
stos
push
dec
xchg
mov
fiadd
leave
pusha
hlt
(bad)
sub
mov
fnstcw
and
cmp
in
jge
xlat
cmp
stos
fld
inc
mov
dec
ficomp
push
jmp
clc
mov
ficomp
loope
inc
cmp
aad
and
dec
pop
imul
adc
cmps
fxtract
jns
in
mov
mov
imul
pushf
sub
retf
repnz
(bad)
repnz
in
mov
aad
or
(bad)
xchg
inc
cmps
dec
in
imul
pop
add
fild
jno
push
shr
xor
or
dec
stos
adc
push
mov
test
dec
stos
jle
xor
pop
xor
sub
inc
dec
xor
push
pusha
inc
sar
mov
sub
sahf
jg
movhps
mov
jmp
test
(bad)
mov
js
cld
xchg
es
iret
out
add
jnp
mov
(bad)
jns
test
inc
push
fyl2xp1
pop
push
push
jo
inc
je
or
dec
sub
xchg
clc
loop
mov
jbe
dec
sub
shl
(bad)
mov
jecxz
push
pop
cmp
in
in
sbb
and
inc
push
scas
fisubr
and
xchg
cli
cmp
cdq
xchg
fwait
rcl
xor
sub
cmps
cmp
or
lods
jbe
pusha
jg
jno
add
gs
jmp
dec
jl
pop
repz
div
adc
inc
pushf
jmp
movs
(bad)
retf
test
or
lods
sbb
fdivrp
cmps
out
mov
inc
sub
pop
ins
retf
mov
loop
and
push
cvtdq2ps
cli
pop
or
in
and
outs
enter
push
mov
cdq
mov
(bad)
xchg
cmps
out
outs
adc
out
fcomp
sti
xlat
pushf
ds
test
sbb
sahf
pop
mov
in
test
cs
push
xor
(bad)
repz
xor
mov
jg
or
in
push
out
aam
cli
invd
xchg
movs
mov
stos
mov
mov
add
ins
pop
lahf
and
xchg
inc
lea
and
sub
(bad)
in
je
or
cmp
jecxz
dec
aas
add
pop
xchg
je
or
jmp
pop
or
in
in
mov
ss
cwde
movs
lods
in
cld
out
shl
xor
shr
xor
cmps
mov
in
inc
sbb
adc
loope
jl
jae
inc
iret
enter
and
popa
sti
mov
or
rol
push
xchg
out
scas
mov
repz
inc
lods
(bad)
xor
out
mov
mov
dec
outs
mov
cwde
and
rcr
mov
jg
sub
adc
push
or
in
int3
adc
jge
cmp
or
imul
cmp
clc
in
ret
jl
jbe
fld
ret
enter
lea
push
lea
fld
scas
xor
adc
mov
cs
xor
int
dec
sbb
xor
arpl
cmp
mov
fs
sbb
int3
sub
and
adc
stos
das
mov
mov
sub
mov
mov
push
lods
scas
gs
mov
aam
mov
jecxz
add
mov
in
sbb
movs
jmp
addr16
and
lahf
not
js
sbb
add
cli
adc
shl
mov
enter
fld
inc
jg
mov
push
sub
loope
adc
xlat
mov
ret
pop
push
sbb
cs
cmc
retf
(bad)
in
addr16
mov
dec
fistp
sbb
xchg
mov
or
scas
ror
or
repz
mov
mov
xor
push
aad
push
adc
mov
cmp
push
sub
or
inc
push
and
(bad)
(bad)
aam
mov
push
int3
ud2
pusha
inc
or
pushf
int3
and
sub
pusha
pop
out
loop
xchg
shl
int3
bound
sahf
push
jae
xchg
push
mov
dec
pop
popa
cmc
mov
mov
adc
push
(bad)
add
popf
ds
xor
cs
and
fnstenv
ficom
stos
lock
adc
xlat
or
xor
mov
push
dec
sub
jl
ror
mov
jo
and
test
stos
test
loop
ss
adc
add
repz
mov
sbb
mov
and
sbb
bound
fdiv
jbe
aas
outs
inc
mov
out
rol
aas
jnp
mov
shr
pop
retf
pop
mov
pop
(bad)
int
sub
(bad)
shr
outs
leave
into
pop
inc
inc
lea
scas
xchg
sar
sahf
es
xchg
lahf
add
dec
repz
inc
not
adc
cmps
mov
scas
push
push
in
jnp
inc
pop
cmp
fisttp
inc
sbb
outs
jae
iret
mov
aaa
in
sub
in
xor
cld
push
sbb
xchg
popa
scas
mov
and
(bad)
test
mov
xor
mov
arpl
and
xor
fdiv
cs
and
inc
packssdw
ins
mov
xor
test
test
inc
mov
or
jmp
shl
adc
ss
stc
and
movs
jge
and
imul
sub
or
push
cmp
nop
jl
or
mov
xchg
mov
adc
xchg
loop
rcl
shrd
in
pop
xor
movs
fwait
pop
ja
mov
push
push
cmp
in
fs
test
stos
shr
scas
retf
push
outs
in
movs
xchg
pop
jo
dec
or
ins
xchg
mov
inc
movs
jmp
pop
fsubr
into
retf
inc
iret
sbb
pop
mul
(bad)
sbb
sahf
dec
hlt
out
jge
fcom
(bad)
xchg
sahf
mov
xchg
mov
(bad)
lea
xchg
bound
scas
add
fcomp
pop
adc
dec
out
cli
mov
pop
inc
aaa
dec
int
sbb
shl
xchg
out
ins
xchg
cmp
cmp
ss
mov
or
dec
push
(bad)
and
iret
and
xlat
adc
xchg
dec
mov
repnz
sbb
add
dec
addr16
or
inc
cmps
sti
cwde
jg
add
inc
add
jp
mov
jle
push
pop
test
adc
push
jge
push
jmp
lock
fiadd
or
aam
or
xlat
xchg
fwait
ins
xchg
inc
sbb
ins
xchg
movs
loope
or
and
push
popa
xchg
xchg
sahf
test
hlt
aaa
jns
(bad)
push
cdq
mov
das
push
and
retf
movs
jecxz
fmul
cmp
rcr
aaa
and
outs
mov
adc
pusha
dec
add
cld
div
pop
jbe
cdq
sbb
inc
inc
fld
dec
and
sbb
out
cdq
(bad)
mov
xchg
push
xchg
ss
sub
jne
mov
out
cmps
jmp
jo
mov
(bad)
adc
sbb
xchg
sub
fwait
jbe
sbb
mov
loop
inc
sub
pusha
ja
push
cmps
xchg
shl
mov
xchg
cmp
mov
test
fcmovnb
cld
pop
push
adc
push
mov
xor
in
cmp
pop
out
adc
xchg
add
cmp
xchg
call
jmp
cmps
and
push
add
dec
pushw
cmp
(bad)
and
push
movs
jbe
jmp
cwde
jp
rol
jecxz
mov
sbb
in
dec
or
and
aad
cli
loopne
xchg
lds
push
stc
cwde
icebp
repnz
xor
fwait
lock
out
pop
popf
mov
cmp
es
jns
mov
xor
adc
jo
fist
mov
rcl
out
mov
push
stc
xchg
clc
push
mov
add
repz
or
sub
jns
movs
mov
(bad)
int
in
pop
fcomp
cmp
push
sbb
cdq
pop
jnp
jp
mov
iret
out
mov
xor
mov
fisttp
mov
xchg
shl
movs
and
cmc
cli
mov
pop
scas
and
jg
xchg
lahf
mov
jno
stos
and
in
dec
adc
loop
fucomp
mov
push
dec
jae
adc
add
and
ret
imul
in
xchg
aad
cmc
pop
push
pop
add
mov
(bad)
cmps
ja
mov
stos
fdiv
dec
stos
ficom
std
push
cs
sub
pop
xchg
push
and
inc
cs
js
xchg
dec
inc
cmps
inc
repz
jmp
mov
cld
cmp
aas
bnd
xor
sub
iret
jnp
jnp
push
sbb
add
aad
cld
jbe
mov
std
stc
push
pushf
mov
lea
mov
push
jmp
mov
xchg
scas
cld
dec
adc
cmp
xor
retf
gs
mov
pop
sahf
inc
push
das
ret
push
inc
arpl
fnstcw
(bad)
lods
push
js
imul
call
mov
dec
daa
hlt
and
fisub
sbb
mov
scas
imul
int
push
mov
add
popa
aas
mov
stc
call
addr16
popaw
xor
push
popf
ficomp
aas
cdq
fstp
aaa
pop
push
mov
and
xor
sahf
mov
aaa
das
xchg
mov
cdq
hlt
ret
push
fsubr
xchg
mov
fcmovbe
push
ds
bound
imul
sbb
jb
xchg
xchg
les
cmp
mov
int
jbe
adc
add
push
dec
push
(bad)
cmp
ja
jp
(bad)
sbb
add
dec
jmp
or
(bad)
ret
or
inc
test
fisttp
xchg
ret
mov
loopne
mov
sub
ins
inc
mov
test
sbb
into
rcr
jg
ds
xchg
push
jmp
aad
hlt
sub
inc
dec
inc
pusha
sub
inc
jge
js
cmp
ret
adc
scas
daa
xchg
add
mov
mov
add
test
jp
dec
inc
sub
add
test
and
pushf
repnz
pop
cmps
fidivr
mov
lods
cmc
pop
push
cmp
fild
repnz
sub
pop
push
lds
cld
mov
fsub
pushf
adc
ins
movs
inc
ret
sub
movs
xchg
dec
dec
fisub
imul
jge
mov
mov
sub
jnp
sub
out
pop
neg
mov
sbb
mov
gs
pushf
cmp
jmp
jmp
cmp
add
sbb
mov
retf
ins
loop
mov
shr
inc
sbb
add
push
or
fsubr
push
pop
jmp
das
sub
test
fiadd
sub
add
stos
mov
stos
mov
sbb
(bad)
jmp
mov
mov
in
adc
stc
adc
dec
fwait
mov
mov
xor
test
jg
icebp
add
addr16
out
push
lea
std
lods
mov
loop
leave
pushf
dec
test
es
repz
out
or
pop
and
sbb
ja
jmp
push
sbb
bndstx
push
clc
pop
pop
ss
xor
mov
ds
cdq
gs
clc
aaa
xor
xchg
jnp
iret
inc
mov
and
pop
jl
mov
lods
inc
or
or
test
std
jo
mov
inc
into
stos
mov
mov
inc
fstp
xchg
jl
jle
mov
test
out
cmp
loop
push
mov
dec
ds
leave
aad
das
dec
sahf
jp
ja
jne
test
neg
pop
pop
sub
mov
out
pop
bswap
enter
xchg
mov
fsub
mov
inc
mov
ins
jg
and
push
xor
sub
imul
jg
jns
adc
push
cmp
cmc
cmps
out
cld
push
ret
dec
adc
push
fwait
cwde
xchg
jns
out
mov
sub
test
and
or
xchg
(bad)
or
dec
xor
mov
mov
or
aaa
pop
ins
retf
mov
imul
push
xor
ss
iret
and
arpl
pushf
inc
jnp
in
inc
dec
adc
leave
mov
inc
ficomp
pushf
lea
push
mov
add
xor
pop
(bad)
mov
call
mov
stos
xchg
aad
sar
outs
inc
mov
repnz
lods
dec
jmp
xchg
and
jp
lds
or
stc
push
jmp
push
pop
out
xor
int3
and
mov
adc
push
aam
and
push
pop
adc
fs
shl
inc
adc
lods
jg
xchg
jae
mov
icebp
dec
pop
mov
cli
ss
and
sar
cmp
inc
mov
or
sbb
fmul
jle
sub
inc
mov
sbb
icebp
sub
sbb
sub
xchg
(bad)
jbe
xchg
xchg
idiv
xchg
jecxz
retf
sub
retf
ins
sub
mov
out
imul
push
add
push
js
mov
mov
sub
sti
mov
push
jae
mov
loopne
loopne
mov
sub
aas
pop
xchg
inc
or
pushf
shl
push
push
mov
loop
push
xor
push
int
sbb
movs
outs
in
outs
add
fprem
mov
cwde
movs
or
mov
es
sub
add
imul
icebp
or
add
jno
out
jge
push
std
nop
in
jecxz
sbb
adc
inc
sti
mov
call
cmps
inc
mov
cmp
neg
or
pop
or
xor
lahf
popa
mov
out
lock
or
jae
loopne
push
add
cmp
daa
pop
outs
mov
ss
cld
je
jne
and
pop
out
xor
xchg
sbb
hlt
dec
jne
xchg
movs
popa
and
loope
(bad)
fistp
pop
add
cmc
and
or
popa
cmp
or
mov
or
or
loop
sbb
ja
xchg
fldlg2
retf
xchg
popf
aaa
(bad)
in
jne
ds
mov
aas
inc
inc
push
xor
jg
dec
mov
sbb
or
popf
in
sub
adc
pop
bnd
mov
mov
pop
in
adc
out
add
ins
icebp
call
mul
or
push
je
pop
mov
xchg
loopne
inc
into
aas
or
fsubr
xor
mov
ss
sub
fdiv
addr16
in
lea
xchg
lods
or
push
js
loop
xchg
push
jp
daa
retf
xchg
movs
loope
test
mov
jge
mov
in
rcr
xchg
adc
test
xor
sbb
mov
mov
(bad)
xlat
and
movs
jmp
or
push
mov
(bad)
push
mov
call
inc
jmp
mov
or
ds
std
sub
push
loopne
popf
lds
lahf
push
sti
and
lahf
push
jb
inc
jl
push
push
popa
ja
icebp
ds
or
dec
adc
sahf
imul
sub
data16
and
sahf
inc
sahf
popa
ins
lahf
int
sub
mov
fnsave
lds
or
cmp
mov
adc
cmps
mov
(bad)
in
nop
or
fadd
mov
clc
pop
add
mov
(bad)
jnp
push
(bad)
aad
fdivr
lahf
inc
mov
pop
adc
aas
lods
jmp
mov
push
test
cmp
mov
mov
lods
ds
es
in
xor
leave
pop
in
out
enter
(bad)
(bad)
icebp
jnp
mov
push
adc
mov
gs
dec
(bad)
fild
mov
jl
and
xchg
pusha
in
(bad)
fs
push
adc
xchg
dec
add
mov
jle
cs
inc
call
jo
fistp
xor
ins
fucomip
adc
outs
or
add
cmps
push
ret
push
push
js
xlat
mov
sbb
mov
sbb
or
and
popf
cmps
jecxz
dec
clc
scas
lds
js
or
and
and
dec
jo
push
in
and
out
mov
in
aaa
loop
addr16
cdq
or
jae
cs
stc
pop
cmp
repnz
dec
cwde
(bad)
fcom
nop
jg
and
test
fld
fs
sub
pushf
mov
lea
add
mov
sbb
add
mov
xchg
and
mov
jnp
gs
and
xor
fld
cld
mov
push
adc
jp
icebp
test
sbb
jge
popf
cmp
scas
lds
mov
jmp
mov
addr16
loop
push
out
cmp
or
cmps
dec
stos
mov
jno
pop
adc
loop
out
sub
add
cmp
dec
inc
adc
jg
or
sub
adc
xchg
mov
or
popf
adc
mov
adc
fbstp
mov
xor
repnz
push
scas
xor
sub
mov
aaa
in
inc
push
(bad)
xor
xor
add
sub
pop
mov
inc
std
or
push
pop
adc
mov
and
and
add
mov
push
popf
(bad)
lods
sbb
outs
call
data16
mov
out
jg
arpl
push
mov
cmp
inc
push
cld
push
pop
cld
mov
lds
push
cmp
(bad)
mov
imul
ins
clc
xchg
sub
jmp
lds
sbb
and
ins
cmp
mov
aas
and
out
repz
mov
icebp
lds
add
xor
movs
cmp
push
lahf
pushf
bound
out
hlt
xchg
pop
or
or
mov
inc
mov
test
xor
clc
and
mov
xor
data16
bnd
adc
lods
ret
in
cmps
adc
lds
mov
and
xchg
lahf
dec
inc
cdq
and
psraw
sub
mov
stos
pop
outs
or
push
pop
dec
shr
mov
icebp
mov
mov
inc
shl
test
fsubr
lahf
xchg
outs
lods
pop
add
gs
dec
sbb
lahf
xchg
and
call
mov
jbe
aad
pop
mov
(bad)
pop
push
and
sub
xchg
je
mov
scas
xor
and
sbb
test
jns
push
(bad)
lock
vsubss
adc
push
add
fistp
div
pop
xchg
push
(bad)
adc
mov
cli
out
mov
pop
stos
jo
sub
pop
aad
stos
dec
adc
clc
in
cmp
stc
pop
fiadd
stc
mov
inc
outs
push
mov
out
fsub
enter
ja
mov
mov
xchg
mov
push
stos
pop
push
xor
sub
bound
xchg
push
outs
xor
inc
aam
scas
and
xlat
xchg
xchg
push
jbe
jl
jo
lock
cmps
or
dec
or
(bad)
mov
and
cmc
fild
pop
add
mov
mov
sbb
cmp
mov
aam
dec
sbb
push
out
fcomp
xor
jmp
add
fistp
icebp
xor
xchg
inc
fstp
cwde
pop
in
dec
jo
cmp
stos
ret
pop
xor
xor
inc
lahf
sub
retf
test
jmp
and
jne
mov
inc
leave
push
sub
inc
jb
rep
jl
xor
shr
fadd
call
mov
ja
dec
icebp
(bad)
xchg
cli
jge
fld
pop
call
imul
jmp
cmp
sub
mov
add
pop
pusha
repnz
xchg
cld
push
xchg
loopne
aas
cmp
loopne
pop
hlt
out
mov
mov
mov
lds
shl
in
(bad)
(bad)
pop
arpl
test
mov
dec
std
js
push
les
sub
add
sub
nop
bound
ins
pop
ds
mov
ror
pop
mov
les
dec
aad
or
or
loopne
lahf
adc
dec
push
cmp
mov
xor
mov
mov
xchg
shl
ds
sbb
mov
retf
ins
push
add
imul
push
xor
adc
mov
adc
loop
xchg
mov
cwde
outs
sbb
cdq
outs
or
retf
repz
das
mov
inc
adc
inc
push
adc
test
outs
pop
data16
cmc
push
loope
lea
and
test
test
cmp
cmps
sar
rcr
stos
mov
xchg
pop
xchg
or
xchg
and
add
sub
xchg
and
fwait
dec
clc
push
test
and
sbb
lods
movs
jmp
std
scas
inc
dec
out
sub
cmps
add
or
fucom
fsubr
dec
pop
iret
fisub
repz
(bad)
aas
pop
stos
jne
inc
mov
test
pop
out
stos
shl
mov
clc
dec
stos
dec
jge
aam
je
sbb
sahf
mov
leave
mov
xchg
cli
loope
cmp
(bad)
in
xchg
movs
hlt
lahf
mov
push
sbb
enter
jle
jle
imul
sub
addr16
aad
in
inc
je
jp
retf
jne
adc
inc
fcomp
inc
nop
xchg
cmp
inc
and
inc
test
mov
jecxz
jae
xor
fidivr
call
add
arpl
iret
loop
clc
inc
pop
inc
jge
pusha
sbb
dec
jmp
jl
mov
jne
lds
sbb
fst
sub
lods
xor
push
and
xor
(bad)
cmp
clc
dec
dec
lods
fbstp
das
lea
xchg
lahf
adc
fild
or
push
movs
mov
out
mov
fist
(bad)
fist
mov
pop
xchg
pop
fs
scas
mov
in
mov
shl
cmp
cwde
push
bound
imul
bound
jo
cmps
mov
daa
mov
repnz
cmp
imul
fbstp
jnp
xchg
push
mov
nop
mov
pop
add
xor
mov
js
mov
or
add
pop
xchg
fld
aam
mov
enter
mov
push
cmc
mov
dec
cmp
cmps
rsqrtps
push
stos
adc
sbb
xor
aad
cmp
mov
jecxz
inc
sahf
loop
sub
and
jbe
aaa
mov
cld
(bad)
mov
adc
ficom
cmc
loope
cmp
ins
dec
xor
add
scas
sub
jbe
dec
inc
cmps
and
lods
and
jecxz
jl
adc
cwde
aas
repz
adc
cmp
call
cmp
xor
scas
and
xchg
stos
out
add
push
cdq
xchg
adc
popf
das
imul
pop
dec
inc
daa
jns
adc
jg
ret
jno
int3
leave
test
sbb
sbb
aad
push
je
lea
icebp
cld
retf
jb
pop
pusha
(bad)
mov
mov
mov
inc
loope
mul
push
and
xchg
adc
and
xchg
xor
popa
xor
scas
jo
scas
cmp
cmp
jbe
cli
dec
and
add
cmp
in
xor
add
push
je
mov
mov
ds
(bad)
out
es
dec
mov
retf
or
xor
neg
cmp
and
or
aaa
pop
les
push
xchg
adc
or
and
loopne
mov
mov
jno
loopne
mov
popa
lock
mov
icebp
data16
adc
or
xchg
xchg
int3
popa
(bad)
scas
add
inc
xlat
scas
xchg
push
ficomp
js
iret
mov
dec
(bad)
out
outs
add
test
jb
pop
inc
push
outs
add
pusha
sahf
clc
dec
call
js
out
(bad)
or
leave
push
or
and
jmp
into
adc
addr16
mov
pop
rcl
jmp
sahf
sbb
pop
(bad)
retf
inc
lahf
sub
and
in
add
test
mov
push
xor
push
lea
mov
xor
pop
mov
imul
pop
sbb
inc
pop
jnp
sub
mov
cs
fldenv
inc
out
inc
add
add
dec
mov
(bad)
mov
add
cmp
jmp
outs
sub
inc
inc
dec
mov
ret
pop
cmp
push
adc
ins
or
fidiv
loope
sbb
jp
ins
je
xor
xor
test
mov
pop
mov
sub
into
(bad)
rol
dec
mov
inc
inc
and
jle
add
call
xchg
imul
ret
ins
mov
fnstenv
sbb
(bad)
xchg
stos
pop
inc
imul
adc
xchg
ja
jmp
mov
xchg
stos
xchg
inc
inc
int
test
imul
jmp
adc
xor
or
cmp
fst
popf
jnp
retf
pushf
and
inc
pop
sbb
popf
test
out
leave
loope
add
(bad)
jmp
xchg
popf
jle
mov
push
add
sub
and
jb
push
ffree
jecxz
mov
xor
cwde
adc
sbb
sbb
repz
jmp
nop
or
mov
xchg
lea
cmp
shl
pop
aam
pop
push
addr16
bound
sbb
out
xchg
xlat
cmp
add
jae
dec
mov
dec
and
sbb
imul
mov
dec
in
movs
aad
js
push
(bad)
pushf
mov
int3
push
sbb
xor
js
inc
dec
mov
or
sti
xor
jmp
ret
sbb
nop
popf
cmp
fnsave
mov
jae
mov
pusha
mov
and
lods
aad
and
cs
pushf
mov
(bad)
sbb
in
loop
adc
mov
cmc
(bad)
jecxz
push
iret
sub
iret
aaa
push
pushf
fiadd
xchg
(bad)
(bad)
lods
pop
sub
add
xchg
mov
sub
lea
mov
xor
adc
xor
bound
test
aaa
ror
add
std
and
lds
lods
iret
sbb
adc
jmp
ret
sar
neg
or
out
adc
ins
and
pushf
out
cmp
push
test
xchg
sub
loop
(bad)
out
mov
adc
out
mov
jae
outs
mov
dec
lods
cmp
fist
cwde
call
xchg
ret
push
mov
(bad)
cld
push
fsub
or
pop
jae
or
xchg
dec
mov
mov
adc
cli
bound
push
fmul
and
sbb
cmp
add
fwait
adc
leave
popa
mov
loop
pop
cmps
imul
push
stc
push
push
jb
retf
and
sbb
outs
xchg
repz
sti
mov
fcmovnb
call
add
mov
(bad)
repnz
stos
cmps
or
imul
sub
cld
ja
pop
push
mov
rol
pop
pop
fisttp
hlt
frstor
fs
ficom
aaa
mov
cmps
test
test
mov
sub
movzx
mov
push
cmc
lahf
xor
mov
(bad)
mov
test
jp
popf
hlt
cmp
inc
test
sub
or
cmp
xchg
jp
inc
fdivrp
js
push
jmp
das
int
fdiv
(bad)
std
push
sbb
icebp
mov
pop
xchg
add
or
(bad)
aaa
dec
sub
xor
ret
add
inc
div
data16
mov
mov
cmp
mov
pop
dec
push
dec
cmps
jmp
inc
sahf
jne
call
and
(bad)
loope
fadd
pop
mov
ja
jmp
mov
pop
xor
cli
mov
jp
pop
push
icebp
sub
sbb
test
into
js
stos
popf
cmp
loope
hlt
shr
pop
addr16
(bad)
mov
enter
pop
xor
jno
shl
or
xchg
fbld
push
push
xlat
add
pushf
push
out
mov
ret
rcl
jle
pop
xor
jle
jae
and
ins
out
mov
sub
sti
adc
out
cmp
push
fidiv
lahf
add
hlt
jae
fwait
aas
hlt
imul
hlt
ret
xor
(bad)
sub
ins
ret
rol
mov
sbb
xchg
pusha
les
xchg
(bad)
ja
(bad)
mov
adc
jecxz
mov
int3
mov
lahf
xor
mov
ret
adc
sub
add
test
pop
call
js
mov
lock
mov
(bad)
cmp
mov
and
lods
pop
pop
and
push
xchg
xor
stos
test
or
fwait
inc
test
(bad)
mov
and
xchg
shl
mov
jl
nop
outs
sbb
push
sub
mov
sbb
das
fwait
cmp
sbb
int
mov
or
mov
loopne
push
adc
dec
les
lods
hlt
adc
rcr
jo
jne
test
not
fwait
inc
clc
xchg
and
pusha
dec
loop
sub
aaa
mov
cmps
mov
xor
or
test
repz
out
push
sub
popf
sbb
test
outs
imul
add
sub
(bad)
mov
icebp
adc
(bad)
in
movs
lods
test
(bad)
fild
jmp
or
cwde
jae
addr16
std
mov
scas
add
xchg
sub
ds
outs
ins
inc
call
pop
in
repz
fild
cmc
aad
inc
push
sbb
xor
sbb
jmp
mov
scas
iret
aam
icebp
(bad)
clc
ret
js
ss
xlat
mov
push
sbb
fdivr
out
fptan
pop
push
sub
xchg
and
(bad)
aas
adc
sub
mov
retf
mov
es
jmp
sbb
(bad)
inc
pop
rcr
(bad)
call
adc
xlat
outs
xchg
lods
out
pusha
push
sti
push
cmp
test
jge
jecxz
add
das
xchg
ins
mov
and
rcl
outs
mov
push
mov
cwde
xchg
push
adc
ret
ins
jmp
in
jg
test
inc
mov
lods
fndisi(8087
add
add
jmp
cmc
sbb
pop
popf
jecxz
mov
pop
in
inc
xor
xchg
jecxz
sub
cmc
fldcw
adc
push
loopne
cdq
or
shl
push
push
and
clc
loop
popf
mov
xchg
push
push
shr
inc
into
adc
and
push
sub
adc
in
jnp
popf
push
xcrypt-ctr
cmps
pushf
call
cmp
add
shl
mov
jge
mov
xchg
push
mov
nop
cmp
mov
sbb
mov
xor
js
fimul
adc
xchg
repnz
push
cmc
cli
xchg
repnz
iret
pop
int
xchg
push
sbb
mov
mov
das
aam
adc
cld
(bad)
jmp
repnz
rcr
push
mov
stos
cli
inc
push
out
mov
sbb
out
jge
in
cmp
jo
cmp
cmp
les
fxch
jb
aam
mov
and
out
clc
cdq
sub
das
push
(bad)
mov
enter
and
int
sub
dec
jmp
outs
mov
sahf
pop
adc
dec
imul
add
and
jno
xlat
clc
mov
loopne
fcom
nop
cmc
loope
mov
mov
sar
or
push
sbb
rol
scas
in
or
int
jne
test
dec
jg
or
addr16
sub
rol
xchg
stos
out
xchg
inc
pop
add
call
xchg
lds
dec
push
in
mov
cmp
stos
push
dec
pop
push
xor
push
mov
enter
lods
scas
pop
add
mov
in
or
dec
cmp
add
xchg
push
or
sub
int
out
adc
sahf
push
sub
dec
lds
movs
mov
push
xchg
and
hlt
mov
cmp
jae
jnp
and
arpl
(bad)
push
stc
jbe
cwde
sub
push
pop
gs
dec
xchg
into
int
addr16
xor
imul
or
dec
push
mov
inc
inc
cmps
out
setp
rcr
dec
mov
ret
mov
xor
sti
push
dec
rol
jnp
sbb
jle
popf
test
sub
test
fldcw
aam
push
in
pop
jbe
jmp
lods
ffree
in
sub
rol
xor
push
push
lods
adc
sub
pop
mov
sub
icebp
or
stos
mov
lahf
fwait
popa
sar
sahf
fcmovnu
hlt
xchg
test
pop
rol
cs
les
inc
add
mov
les
or
add
fcom
push
inc
shl
push
fstp
imul
das
aam
sub
sbb
add
inc
inc
add
lock
dec
pop
sar
imul
add
scas
sub
jbe
cmc
mov
sbb
call
dec
(bad)
mov
movs
xor
mov
jnp
cmp
lock
es
ficomp
jno
mov
cs
sbb
inc
sahf
rcr
or
mov
push
mov
mov
loop
or
pop
loop
clc
js
cli
add
aaa
ins
sub
in
sbb
xchg
rcr
out
mov
adc
inc
pop
push
shl
xchg
cli
stos
push
add
xor
push
push
cmp
sti
fwait
xchg
mov
or
mov
mov
xlat
mov
pushf
cmp
fwait
test
lods
icebp
jbe
je
inc
sbb
xchg
sahf
in
shl
call
adc
mov
shr
mov
mov
and
adc
movs
scas
retf
dec
push
inc
sar
push
ret
lea
sub
mov
call
repz
inc
adc
rcl
add
and
jo
out
js
push
cmp
push
repnz
add
(bad)
fnstsw
popa
jecxz
out
fidivr
fwait
loopne
adc
and
sbb
inc
push
jp
int
rcl
cmps
aaa
out
call
ins
int
jl
fistp
ret
cmp
xor
and
(bad)
popf
outs
jae
aam
iret
pop
(bad)
mov
pop
sbb
push
std
outs
dec
push
jb
fdiv
and
daa
and
cmp
push
retf
jbe
inc
pushf
jb
pop
xchg
shr
jecxz
sbb
or
out
xor
mov
in
jg
inc
out
adc
cmp
sbb
or
cdq
sar
cmps
pop
fidivr
ss
sahf
pop
dec
mov
mov
in
add
in
xor
jl
retf
nop
jns
inc
and
sub
ins
push
inc
add
aaa
mov
cwde
jle
out
adc
inc
mov
lods
pop
jp
ja
jg
add
out
js
pop
cmp
xor
pop
test
and
shl
scas
push
adc
fidivr
cmp
sub
bnd
fdivr
dec
mov
sub
scas
jbe
mov
and
les
dec
cld
das
cld
lds
inc
aam
mov
mov
repz
ss
ror
pop
mov
loope
or
sub
pop
stos
inc
and
lock
fs
pop
cld
xchg
cmp
(bad)
dec
lods
(bad)
inc
adc
ins
imul
mov
xchg
and
push
dec
sahf
(bad)
test
push
pop
movs
adc
jno
adc
cmc
pop
rol
ficomp
cmp
cmp
cmp
sub
mov
cmp
cdq
loope
icebp
xchg
jbe
xchg
mov
rol
int
inc
mov
or
cmps
jne
jnp
bound
push
xchg
icebp
pop
clc
xlat
cmp
xlat
inc
lods
add
sbb
or
jno
jp
mov
jb
sub
out
leave
out
ja
jnp
and
call
jg
push
adc
(bad)
jb
lahf
cli
lods
pop
bound
add
cmp
shl
and
cwde
rcl
cmp
in
sbb
test
jb
bound
mov
aad
shl
in
xchg
sub
mov
dec
mov
js
add
push
xchg
pop
shr
pop
xor
jecxz
jnp
and
stc
jae
fldcw
clc
adc
test
or
or
icebp
fcomp
xchg
adc
and
call
scas
(bad)
sahf
lds
aas
or
cmp
adc
push
push
xchg
out
ss
ins
scas
nop
addr16
(bad)
xchg
xlat
movs
xor
dec
out
sar
mov
xchg
ins
jno
gs
cld
ds
pop
repz
and
xchg
(bad)
adc
(bad)
data16
enter
dec
lods
aaa
mov
add
mov
inc
(bad)
mov
aad
stc
retf
mov
(bad)
repz
mov
pop
out
ffreep
test
dec
dec
call
das
imul
retf
icebp
inc
fidiv
xchg
xchg
les
into
jg
pop
mov
jg
(bad)
pop
inc
dec
mov
or
rol
jnp
jg
hlt
mov
ret
scas
inc
pop
pop
bound
mov
adc
pop
xor
cs
loope
iret
jae
sbb
scas
or
in
clc
repz
add
pop
or
and
push
leave
and
int
cmc
pop
fsubrp
push
mov
(bad)
daa
sub
dec
inc
(bad)
aad
add
pop
adc
daa
dec
xchg
pusha
lds
(bad)
mov
and
dec
lock
add
xor
or
sbb
jae
xor
push
pop
leave
std
mov
add
inc
mov
test
popf
loop
shr
stos
in
dec
jle
xor
outs
test
pusha
(bad)
mov
and
xor
mov
sbb
xchg
adc
inc
and
sbb
add
mov
lods
stc
movs
sahf
xor
or
mov
cmp
pop
xchg
mov
ret
dec
mov
xchg
jp
daa
xchg
stos
jmp
push
push
out
dec
jmp
sub
es
pushf
xchg
pop
sub
and
movs
js
xchg
push
or
and
bound
addr16
arpl
imul
jmp
enter
stc
jne
sub
xchg
scas
mov
mov
lds
push
in
rol
adc
or
scas
cwde
mov
js
mov
xchg
or
pop
cs
add
sbb
mov
cmp
mov
test
inc
les
push
jo
retf
xlat
xor
adc
mov
inc
(bad)
dec
in
(bad)
scas
xchg
nop
out
(bad)
and
lahf
xchg
cld
nop
mov
imul
adc
sub
xchg
retf
nop
stc
sub
sbb
test
fst
fs
mov
rol
mov
push
cmp
dec
adc
jmp
mov
or
aam
xchg
add
mov
mov
leave
dec
xor
mov
cmps
pop
mov
sar
or
pushf
push
lahf
fidiv
jbe
lods
cmp
neg
js
(bad)
nop
push
sar
or
cmps
sub
inc
inc
cmp
nop
stos
int
adc
dec
lock
imul
test
and
push
pop
idiv
mov
ja
sar
rcl
adc
cmp
mov
js
fdiv
loope
je
mov
dec
sbb
rol
xchg
cdq
fnsave
dec
mov
push
lahf
(bad)
fld
loopne
mov
call
and
sbb
push
or
in
mov
and
jb
retf
mov
mov
call
enter
ror
sahf
mov
cmp
(bad)
pop
dec
ds
mov
ficom
retw
push
adc
call
mov
in
push
push
sbb
jnp
inc
jecxz
movs
scas
xor
cmps
dec
xor
pop
and
(bad)
aaa
out
jmp
jb
das
xor
pusha
out
mov
(bad)
fdiv
out
shl
push
jne
mov
jmp
inc
sub
xchg
cmp
out
aam
push
lods
cwde
push
jae
jmp
mov
add
inc
mov
mov
lock
add
sbb
mov
mov
ins
inc
inc
push
jo
cmp
mov
cmp
pop
dec
stc
mov
inc
call
sub
add
mov
or
or
adc
cs
jno
mov
aam
(bad)
popf
cmp
(bad)
lock
jbe
icebp
lods
inc
mov
jg
fdiv
je
xchg
push
pop
mov
mul
test
lds
xor
adc
dec
ret
mov
inc
sub
iret
xchg
ins
cld
aaa
push
jns
add
fld
add
add
test
ds
arpl
gs
cwde
lock
xor
pop
aad
test
es
dec
sub
or
out
imul
ret
in
into
inc
xor
(bad)
(bad)
out
and
adc
mov
xchg
dec
dec
imul
mov
mov
cmps
je
adc
aad
push
stos
shl
mov
aad
mov
xchg
jecxz
inc
ja
pop
repz
inc
fld
mov
dec
in
sub
adc
(bad)
fild
sbb
cs
cmp
repnz
xchg
ret
shl
pop
mov
sti
lods
push
mov
xor
imul
lea
add
das
repnz
jae
cs
dec
es
lahf
jg
cmp
and
mov
or
inc
hlt
std
inc
enter
add
shr
pushf
test
push
jl
fild
jp
inc
(bad)
loope
fdivr
adc
ja
lods
xchg
aad
(bad)
jo
and
imul
pop
add
dec
inc
out
adc
mov
loopne
test
adc
js
add
outs
or
add
mov
sub
ficom
inc
lahf
cmps
je
inc
lds
mov
xor
sub
test
mov
inc
imul
jge
imul
in
inc
inc
shl
push
aas
std
sub
(bad)
imul
jecxz
movs
cwde
sub
and
loope
sub
mov
dec
jl
(bad)
sbb
add
inc
xchg
jmp
mov
retf
jge
and
je
mov
into
inc
dec
dec
adc
(bad)
cmp
loopne
adc
enter
outs
(bad)
xor
sub
(bad)
movs
leave
nop/reserved
sub
in
(bad)
stc
bound
xchg
jo
inc
sar
push
jg
xchg
jno
outs
inc
idiv
je
inc
push
stc
xor
jle
pusha
dec
mov
sbb
mov
push
jno
sbb
pop
cmc
mov
jnp
pop
mov
sbb
or
fstp
data16
or
test
xchg
or
mov
std
shr
les
std
fiadd
dec
mov
jbe
ins
jmp
pop
std
out
dec
mov
xor
mov
dec
imul
cmps
popf
xchg
xchg
pusha
in
aaa
jbe
xor
test
stc
sub
sub
and
cli
outs
ins
jb
cmp
sub
daa
dec
sbb
adc
outs
arpl
popa
sub
push
ja
dec
inc
cmp
movs
xor
jbe
mov
gs
xchg
mov
(bad)
fucomi
cmp
adc
or
leave
mov
dec
(bad)
or
xor
popa
pop
sub
in
jecxz
or
sbb
ja
lea
jp
xor
in
clc
dec
cli
dec
xchg
push
mov
pop
dec
(bad)
cmp
out
push
cld
xchg
out
mov
in
loopne
ins
ja
cmp
mov
loope
test
bound
jmp
cmp
inc
sbb
fs
push
cs
push
out
lods
xchg
cmp
jno
loop
mov
fs
inc
push
or
adc
pop
pushf
into
pop
and
imul
cmp
jg
fisub
mov
data16
dec
js
icebp
pop
lahf
(bad)
out
in
shl
movs
and
addr16
repz
dec
aas
pop
mov
addr16
or
push
xchg
dec
daa
mov
sub
and
sbb
pop
fsubr
test
les
mov
fs
push
retf
pop
add
ins
adc
out
mov
pop
in
in
jle
sub
out
cld
retf
out
sub
imul
es
fs
fwait
add
mov
dec
mov
dec
pop
pop
sahf
lock
cmp
in
or
inc
adc
stos
aad
pop
pop
arpl
dec
(bad)
or
mov
mov
gs
test
sahf
mov
in
(bad)
je
call
lds
pop
call
pushf
adc
push
jnp
xchg
jo
or
mov
jnp
add
pop
inc
mov
xchg
sbb
push
xchg
and
xor
shl
mov
xor
adc
sub
mov
setns
cmps
xchg
mov
and
mov
test
(bad)
rcr
mov
vphsubdq
xor
dec
and
mov
sub
call
sahf
clc
cs
popf
test
adc
sbb
dec
pop
movs
xor
mov
(bad)
cmp
scas
scas
cmp
(bad)
jg
cwde
fimul
cdq
sbb
imul
rcr
inc
or
pop
into
pop
push
icebp
dec
ins
sub
scas
loope
repz
pusha
and
(bad)
cmps
aaa
stc
xchg
cmps
ss
cmps
stc
stc
pop
je
les
xchg
adc
jnp
fnstcw
dec
ds
jmp
pop
inc
aam
pusha
dec
mov
mov
mov
outs
sti
xchg
push
inc
adc
ret
ss
pushf
les
inc
call
es
mov
mov
mov
mov
pop
push
or
test
mov
(bad)
fs
inc
adc
sar
movs
jbe
and
cmps
cli
mov
jg
mov
sub
jmp
jns
pop
cmp
sub
xchg
mov
jge
jecxz
cmp
push
mov
or
xchg
fsubr
mov
shr
mov
jne
jp
call
or
addr16
or
or
push
pop
cmps
inc
js
cmp
cli
inc
repnz
sbb
or
mov
jmp
sub
lock
loop
mov
cmp
push
jg
sbb
adc
xchg
lock
cs
call
movs
mov
test
leave
or
inc
jle
adc
cdq
sar
mov
das
pop
xchg
int3
(bad)
pop
cwde
adc
cmp
test
fistp
and
inc
pop
xchg
pushf
rcl
xor
loope
xchg
push
out
mul
sub
arpl
test
and
in
ret
or
push
mov
xchg
xchg
or
cmp
loop
xor
xchg
gs
push
fdivr
add
out
hlt
mov
imul
xor
adc
xchg
mov
movs
fsub
mov
mov
and
jno
(bad)
mov
inc
in
aam
xchg
xor
call
hlt
scas
pop
adc
mov
ss
sbb
xor
retf
mov
push
adc
add
dec
dec
push
imul
xchg
push
mov
and
sbb
jns
xchg
das
pop
(bad)
cdq
pop
jb
js
adc
inc
aam
add
out
dec
outs
dec
gs
push
mov
adc
ror
mov
ins
shl
jecxz
inc
dec
pop
jb
and
cmp
stos
mov
push
push
mov
sbb
xchg
daa
adc
cwde
out
cmp
ja
retf
mov
jle
adc
push
and
test
adc
sbb
mov
mov
cmp
xor
inc
sub
sub
jns
sbb
daa
push
cs
leave
imul
jmp
sbb
(bad)
mov
xlat
xchg
mov
xchg
push
or
dec
push
jge
pop
movs
jge
ins
es
pushf
inc
push
push
gs
out
call
and
ds
sub
mov
dec
mov
and
in
imul
adc
in
or
lea
mov
dec
ins
fsubr
iret
aaa
jl
aad
xchg
xchg
fnstenv
xchg
mov
int
or
leave
mov
dec
jo
xor
mov
(bad)
push
movs
test
adc
loop
mov
push
jecxz
fsub
(bad)
sbb
mov
cld
int3
mov
mov
hlt
sub
ins
test
inc
sbb
lods
xor
pop
popa
dec
inc
enter
lea
aaa
sub
nop
ds
dec
jns
dec
dec
pop
ret
sahf
mov
adc
inc
adc
mov
popf
test
mov
ins
mov
ficomp
ss
push
adc
xchg
jbe
mov
scas
dec
out
leave
or
aas
data16
sub
and
das
iret
cmp
push
jl
xor
pop
movs
lea
cmps
mov
push
(bad)
push
call
fsub
das
out
push
in
pop
sub
or
ret
rol
fnstenv
nop
aas
mov
outs
movs
jecxz
dec
scas
mov
adc
mov
test
xchg
xlat
imul
das
aaa
outs
xchg
pop
ins
inc
inc
test
das
cmp
xchg
std
leave
or
aas
adc
gs
mov
dec
sub
int
sahf
test
lock
push
icebp
clc
xchg
xchg
jmp
mov
(bad)
jns
jne
out
or
cmp
aam
mov
jmp
cmp
pop
imul
repz
mov
mov
mov
or
and
push
cld
test
test
pop
test
dec
lods
sbb
xchg
ret
(bad)
inc
leave
push
out
cs
add
push
ds
jb
movs
out
hlt
xchg
pop
ror
add
dec
shr
dec
jmp
push
xchg
xor
push
sbb
call
stc
add
or
aas
ret
sub
gs
dec
gs
out
arpl
pop
add
hlt
dec
out
repz
dec
cmps
jge
loop
pop
inc
mov
inc
setnp
add
sbb
and
mov
dec
push
mov
xchg
jp
dec
iret
adc
cld
xchg
rcl
or
scas
push
call
fisttp
lods
jb
ins
mov
mov
aam
cmp
sub
popf
pop
xor
jp
(bad)
or
pop
mov
repnz
fisttp
pop
data16
or
mov
and
sub
push
xor
in
fsubr
dec
or
shr
sub
add
rol
aaa
or
cmp
fld
add
and
(bad)
mov
icebp
cmp
jno
jge
test
push
dec
push
or
movs
fistp
push
add
test
or
sti
mov
dec
adc
cmc
adc
or
and
jg
or
xchg
and
sub
inc
fist
clc
sbb
or
movs
xor
or
repz
loope
mov
dec
or
jg
jne
outs
sbb
cdq
lods
sub
jecxz
sbb
jecxz
adc
pop
retf
fs
push
shr
push
jns
leave
add
inc
icebp
jmp
xchg
bound
mov
imul
or
dec
sub
arpl
jmp
mov
ret
mov
jecxz
arpl
aad
inc
fstp
jmp
cmp
or
arpl
add
int3
js
test
cmc
xchg
std
dec
pop
pop
aam
dec
push
adc
cwde
retf
mov
dec
(bad)
dec
retf
pop
inc
jle
jae
(bad)
or
inc
xchg
sbb
xlat
sti
push
(bad)
cmp
cld
push
test
pop
bound
dec
loop
jb
addr16
stos
adc
leave
jecxz
ror
aad
adc
push
fbld
je
loope
pushf
rol
loop
push
out
sub
lea
cmps
(bad)
test
imul
jmp
loop
mov
dec
pusha
psubw
inc
adc
arpl
mov
adc
leave
cld
ja
movs
cdq
mov
(bad)
adc
pop
iret
das
in
lea
push
sti
jo
cmp
cwde
mov
push
dec
jge
stos
xchg
je
mov
add
push
mov
loop
in
and
idiv
pop
out
mov
lods
xor
xchg
cmp
adc
mov
xor
cmp
dec
jle
sti
out
not
mov
push
nop
cdq
cwde
fbld
hlt
loopne
and
test
std
rcl
xor
or
into
xchg
inc
sbb
stos
cmc
xchg
ins
fsubr
sub
clc
push
and
nop
mov
popa
cs
das
fwait
inc
or
(bad)
mov
dec
rcl
scas
shl
dec
inc
cmp
adc
inc
retf
push
jle
arpl
test
xchg
mov
cmps
and
hlt
push
stos
sbb
add
xchg
add
lods
sar
add
and
sbb
and
and
jno
and
jno
inc
sub
push
inc
dec
jge
xor
dec
mov
jle
inc
push
and
out
int
mov
je
jbe
loopne
dec
mov
pop
sub
in
ret
cld
(bad)
add
add
inc
stos
leave
fnstcw
scas
add
daa
cmp
mov
movs
rcr
repnz
mov
or
sbb
fsub
aad
xchg
imul
icebp
data16
iret
popf
in
pop
sbb
ins
dec
sub
int3
aaa
xchg
mov
test
fld
popa
mov
xor
mov
js
ret
add
jle
sahf
inc
std
ja
cmp
xor
mov
scas
mov
rol
jnp
out
xchg
addr16
dec
or
mov
xchg
test
ret
push
add
call
jne
adc
jnp
outs
pop
lods
mov
mov
fs
add
cmps
cwde
xor
std
mov
add
cmp
sbb
loop
sub
mov
retf
mov
out
and
je
inc
mov
xor
or
icebp
mov
test
cs
add
daa
mov
retf
mov
fild
or
xchg
xor
and
mov
mov
mov
stos
mov
cmp
push
mov
fidivr
(bad)
cmp
lea
add
add
call
jmp
enter
or
xchg
enter
mov
pop
mov
push
mov
sahf
(bad)
(bad)
cdq
stos
aam
push
mov
inc
xchg
push
jnp
in
adc
fisttp
or
xchg
or
inc
dec
lock
lds
fstp
popf
pop
clc
cs
enter
cmp
and
add
cwde
not
pop
adc
xor
xor
fbstp
cmp
mov
lods
push
(bad)
call
pop
cmp
jbe
push
pop
mov
std
jnp
and
sub
lods
pop
ficom
adc
mov
and
sbb
aad
cli
and
(bad)
push
gs
sbb
adc
out
fdivp
sub
push
mov
ds
cmp
aas
mov
nop
fstp
mov
ins
loopne
mov
add
je
push
xchg
cmp
test
out
sbb
mov
aaa
sub
mov
mov
(bad)
mov
jge
rcl
mov
push
adc
pushf
jg
cmps
mov
adc
dec
stos
push
inc
pop
scas
jmp
pop
push
rcr
enter
xor
test
packsswb
or
out
adc
inc
mov
jge
leave
cs
ss
pop
das
stos
sahf
push
adc
sub
inc
fcom
fnsave
inc
mov
pop
aam
add
cmps
adc
int3
pusha
repz
dec
dec
sahf
adc
sbb
adc
scas
inc
sbb
push
mov
and
xor
and
inc
pop
or
cwde
sahf
mov
pop
xor
fistp
stc
adc
retf
mov
in
cld
jmp
jl
adc
fisttp
(bad)
sbb
inc
or
inc
mov
sahf
mov
cmps
sub
sub
mov
hlt
aam
out
ret
fiadd
xchg
cmp
cmp
imul
sbb
sub
jo
dec
push
mov
adc
repz
lods
adc
(bad)
cmp
rol
ja
int3
and
test
push
cli
retf
sub
ret
push
sar
lds
or
xor
xchg
xchg
mov
sub
jge
outs
sbb
push
push
fwait
shld
add
mov
xchg
cld
xor
adc
cmp
mov
out
sbb
sti
push
fnstenv
in
xchg
push
loopne
xchg
xchg
jmp
mov
sar
pop
mov
add
in
inc
jp
sub
jb
mov
and
(bad)
test
pop
mov
dec
das
push
mov
sar
sbb
popa
data16
fcmovnbe
jp
sub
aaa
loope
mov
out
jno
js
ins
mov
xor
pop
sub
push
push
xor
pop
sub
xor
cmps
cmps
jg
adc
stos
fwait
repz
out
pop
sbb
dec
ret
arpl
add
out
xchg
jo
je
fwait
push
adc
push
fdivr
not
pop
pushf
call
xchg
jecxz
inc
fcom
test
pop
sbb
test
out
xor
mov
and
sub
push
and
cmp
pop
je
or
mov
movs
sahf
jl
test
xchg
fstp
les
jp
inc
cdq
jno
mov
dec
retf
retf
or
add
cmp
(bad)
inc
popf
dec
rcr
inc
inc
jge
jmp
pop
push
aad
xchg
nop
(bad)
scas
add
or
mov
jne
(bad)
or
out
aas
out
ror
fs
out
xor
out
sahf
sbb
into
stc
push
inc
xchg
lods
dec
stc
iret
test
call
cmp
push
jbe
neg
mov
(bad)
ret
and
push
(bad)
jg
pop
(bad)
jns
push
push
gs
xor
js
xchg
sub
sbb
pop
in
(bad)
bnd
ss
xor
jl
sbb
fwait
inc
mov
mov
dec
enter
jns
push
push
cmp
mov
pop
test
movs
cmp
cmp
cmps
mov
xchg
mov
sbb
add
add
sub
fcom
les
jl
add
sbb
push
jge
out
jmp
mov
dec
or
pop
sub
xor
dec
rol
test
push
and
imul
dec
cdq
sbb
xor
xchg
xor
ret
xor
jbe
mov
mov
sub
js
sub
mov
push
xor
cmc
repz
jno
retf
cmp
push
inc
push
cmp
fadd
xchg
retf
or
adc
imul
loop
in
ret
cdq
je
ins
cmp
jp
add
movs
xchg
nop
jmp
fidiv
sbb
mov
fisttp
out
vrcpss
sbb
xchg
pushf
mov
pop
fs
aaa
dec
in
xchg
test
and
mov
push
adc
pop
leave
daa
data16
mov
retf
in
mov
lea
ret
push
sub
mov
push
dec
(bad)
retf
(bad)
call
or
lahf
nop
xchg
mov
test
dec
inc
add
lods
mov
into
icebp
test
pop
pop
leave
cmps
inc
dec
into
cmp
cdq
sbb
pusha
js
retf
pop
fwait
dec
addr16
pop
push
mov
fcom
add
mov
or
inc
ret
xchg
aam
loope
rol
loope
jne
lock
pushf
push
inc
inc
cli
lahf
mov
and
gs
sbb
loope
pop
jmp
out
and
push
cwde
fincstp
dec
pusha
sti
paddd
aad
mov
jg
or
dec
jne
sub
sbb
inc
xor
pop
lods
cmp
pushf
jmp
adc
fild
mov
popf
xchg
xor
int3
pop
mov
sahf
xchg
push
les
mov
push
jnp
pop
gs
cmp
jmp
xor
stos
mov
push
enter
dec
daa
xchg
inc
stos
ret
call
lods
mov
ror
mov
cmp
xlat
add
adc
dec
or
cmp
mov
rcl
mov
int
inc
jp
jl
mov
push
dec
vmread
lods
pop
cmp
cs
movs
test
(bad)
pop
retf
sahf
mov
push
push
(bad)
leave
mov
adc
mov
cld
and
cmps
xor
in
sub
fnsave
dec
dec
loopne
rol
retf
lahf
into
xchg
cmp
inc
ret
mov
cmp
xor
push
mov
jno
or
std
ud0
sti
popf
call
cmps
(bad)
sahf
push
jns
mov
test
neg
mov
aas
mov
jno
(bad)
out
enter
sbb
shl
cwde
xchg
mov
dec
xchg
xor
pop
(bad)
rol
clc
loopne
xchg
jl
push
jmp
or
cmps
push
add
gs
mov
xchg
xchg
gs
mov
pusha
xchg
jno
lock
push
aaa
push
enter
and
aam
aas
and
aam
pop
mov
lea
cmc
out
mov
jg
pusha
leave
and
sahf
add
(bad)
sbb
sar
fnstenv
das
pop
xor
add
and
loop
inc
int3
fs
(bad)
retf
adc
shr
xor
or
mov
es
dec
movs
cmp
push
scas
xor
in
jecxz
adc
push
js
cwde
pop
mov
das
test
and
es
cmp
sub
jl
hlt
push
gs
(bad)
push
cmp
push
out
adc
xor
jl
mov
cmp
in
jbe
test
fnstcw
xchg
push
mov
and
ret
xlat
std
icebp
scas
xchg
mov
fcmovne
enter
add
inc
push
stos
or
push
iret
sub
invd
cdq
push
dec
out
or
fild
mov
test
movs
les
div
push
aas
call
pop
add
mov
inc
std
popf
mov
and
outs
push
shl
shr
xchg
outs
(bad)
loopne
add
in
mov
jbe
jmp
sub
je
cli
sub
mov
lea
loopne
cmp
adc
repnz
add
dec
sub
ror
les
and
inc
pextrw
pop
jmp
xchg
add
mov
pop
adc
test
jns
cmp
rcr
aaa
mov
dec
call
inc
arpl
jbe
inc
stos
dec
sbb
imul
sbb
sti
test
xchg
xor
mov
std
int3
sbb
les
stos
mov
cmp
out
add
pop
push
test
xor
shl
xchg
push
xor
dec
cmp
jle
cmp
and
in
out
mov
and
push
jmp
aaa
add
inc
fstp
sub
movs
call
xchg
rcr
push
iret
movs
push
inc
scas
call
pop
or
add
mov
add
stc
call
test
into
add
push
ror
push
scas
cwde
fisubr
fwait
sub
mov
inc
psubsw
jo
pop
mov
adc
sub
xor
jns
test
ja
jno
xchg
fwait
clc
adc
imul
clc
and
dec
and
lods
(bad)
fdivr
cmps
adc
clc
test
xchg
fbld
push
mov
dec
inc
shl
cs
or
adc
push
push
lea
and
xor
add
xchg
xchg
shr
ret
mov
cmp
mov
lea
loopne
mov
std
mov
sbb
popf
mov
add
ins
push
fnstcw
and
aam
adc
or
loope
ins
ins
das
ss
push
arpl
scas
rcr
jmp
or
in
dec
cdq
push
icebp
cmp
or
cmp
ins
add
pop
in
repnz
fisub
sub
push
jne
(bad)
mov
rol
cmp
in
and
xchg
mov
jae
mov
dec
mov
or
mov
test
in
gs
sbb
(bad)
add
xor
add
or
mov
pop
ret
xor
clc
sub
cs
or
stos
add
fsub
push
gs
dec
call
popa
js
jmp
test
test
xchg
inc
lods
jnp
or
push
xor
not
push
sub
pop
arpl
sbb
enter
push
adc
(bad)
aaa
sahf
(bad)
retf
ja
adc
add
repnz
(bad)
jmp
aad
add
cmp
sbb
cdq
or
enter
pushf
ins
gs
mov
add
out
add
adc
(bad)
mov
jae
repz
aam
xchg
push
xor
sahf
ins
sbb
pusha
sti
or
aad
xor
idiv
fnstcw
lock
fild
fiadd
and
out
cmp
test
inc
sbb
(bad)
cli
lds
(bad)
in
cmps
jne
or
les
ins
inc
mov
aas
and
(bad)
fsubr
and
shl
mov
pop
inc
mov
inc
inc
fnstcw
dec
mov
or
inc
(bad)
push
lahf
scas
in
ret
push
call
push
or
pop
call
dec
call
addr16
jmp
push
and
dec
xchg
xchg
shl
lahf
neg
inc
sbb
push
fwait
xlat
adc
inc
sub
sub
ret
lahf
icebp
in
mov
(bad)
mov
fild
jno
add
fs
xchg
xchg
xchg
loopne
(bad)
push
aaa
call
popa
dec
hlt
xchg
mov
sahf
or
out
or
rep
mov
pusha
adc
dec
sbb
out
cmp
adc
dec
mov
dec
xchg
jae
pop
jnp
push
mov
lods
mov
push
fistp
jmp
or
adc
sbb
mov
xchg
sub
sbb
sbb
mov
arpl
pop
cmp
lods
mov
cld
out
xor
scas
jae
inc
xchg
popa
xor
dec
cmp
retf
adc
std
loopne
cli
mov
sti
aam
ja
xor
inc
popa
sbb
adc
out
sbb
or
sbb
dec
aaa
aas
mov
and
(bad)
push
inc
call
hlt
lods
dec
pop
hlt
dec
cdq
ror
push
or
add
(bad)
dec
es
xchg
sbb
(bad)
arpl
shl
lock
(bad)
adc
cmp
addr16
ret
dec
sbb
cmp
add
je
jbe
dec
shl
jns
shr
cwde
inc
or
pop
cli
mov
je
icebp
leave
loope
push
jns
jo
or
inc
add
aad
pop
int3
aam
aam
xchg
gs
scas
aad
and
inc
push
push
pop
mov
movs
and
call
and
daa
push
inc
imul
jo
mov
dec
adc
inc
add
mov
pushf
or
fcom
inc
adc
inc
shl
shl
je
or
adc
sbb
dec
xchg
xor
je
sar
(bad)
cmps
mov
repnz
(bad)
int3
dec
mov
stos
sbb
and
dec
shl
jl
add
jge
call
pusha
mov
test
adc
push
dec
pop
adc
mov
sbb
popf
sbb
iret
inc
mov
jmp
push
add
mov
jbe
lods
inc
or
or
dec
out
xchg
mov
jge
(bad)
pop
inc
lds
in
in
sbb
rcl
cmc
xor
imul
jns
push
lahf
fstp
repnz
sub
mov
outs
test
jle
cmc
mov
ret
inc
and
mov
xor
mov
mov
lock
repz
sub
call
lock
push
dec
adc
mov
cmp
stos
pop
dec
sbb
cmps
inc
adc
jmp
jo
and
out
push
ja
pusha
std
fld
fld
inc
add
je
data16
mov
push
lods
sub
sub
shl
push
lea
repz
inc
in
and
and
cmp
xor
sub
mov
js
in
fcom
(bad)
lods
sar
add
mov
or
(bad)
(bad)
rcr
call
dec
stos
xor
stc
xor
hlt
xlat
popa
mov
mov
adc
mov
add
fwait
(bad)
cmp
rcl
adc
test
je
cmp
cmp
das
and
xor
or
and
inc
ds
add
dec
dec
inc
xchg
fs
shl
out
mov
sbb
jge
mov
jmp
mov
jnp
das
jns
push
(bad)
sbb
mov
sti
ficom
push
cmp
pop
push
call
jns
inc
jmp
xor
jo
jecxz
jp
leave
cmp
mov
retf
jmp
fsubr
add
push
ds
cli
jno
mov
mov
fiadd
dec
push
jle
clc
push
hlt
daa
enter
ss
jnp
ret
je
les
add
dec
repz
dec
jns
and
mov
cs
sub
xchg
outs
retf
mov
test
mov
mov
imul
mov
cmp
arpl
and
mov
stos
jl
mov
fs
call
stc
push
or
jne
call
cmp
inc
js
stos
add
(bad)
mov
xor
mov
fidiv
sbb
push
imul
ss
iret
les
daa
pop
mov
push
xchg
test
add
jecxz
imul
jo
pop
inc
lds
push
vdivpd
xchg
pop
mov
or
adc
movs
cmp
out
das
sub
ins
leave
cmc
inc
inc
sar
sbb
retf
cmp
push
repnz
lods
add
loopne
ins
bound
sub
inc
push
and
jne
retf
push
inc
lock
inc
inc
pop
das
loope
repz
inc
pop
jne
pop
mov
idiv
mov
push
(bad)
enter
imul
add
inc
sub
aaa
lahf
ja
cmovp
push
push
or
into
dec
xor
mov
adc
sbb
sbb
popf
cwde
sahf
cs
xchg
fs
add
mov
pop
cmp
sti
xchg
push
aad
call
xor
fst
xchg
pop
jmp
dec
or
pop
sahf
sbb
xchg
cmps
or
push
repz
push
div
dec
iret
mov
xor
(bad)
ss
cs
xchg
jno
inc
(bad)
xor
ins
jle
cmc
xchg
shl
imul
hlt
xor
jns
retf
je
cmp
ja
movs
mov
(bad)
imul
sahf
mov
or
jo
mov
fmul
sar
add
add
(bad)
mov
inc
fidiv
addr16
add
out
sub
test
fcom
mov
push
(bad)
mov
xchg
cmp
lds
lods
daa
and
outs
pop
dec
repz
jp
pop
movs
cs
inc
adc
cmp
pop
dec
xor
lods
jo
sbb
add
or
mov
dec
push
xor
lahf
push
or
pushw
inc
add
(bad)
sbb
cmps
in
add
mov
sub
cmps
mov
xchg
stos
xchg
stc
jl
mov
call
add
xor
push
adc
addr16
(bad)
or
push
dec
push
sub
sub
xor
jo
(bad)
mov
icebp
xchg
pop
repnz
mov
mov
or
lods
add
lods
(bad)
mov
pop
mov
add
fldcw
cmp
xchg
fist
jge
xor
mov
daa
pushf
xor
pusha
cmc
mov
(bad)
out
fsub
and
mov
add
(bad)
repnz
push
sub
dec
pop
and
test
inc
adc
ror
scas
retf
sar
mov
inc
call
push
xor
mov
xchg
stos
add
loopne
addr16
lahf
shr
int3
js
cwde
sbb
mov
add
mov
outs
push
pusha
mov
adc
cwde
mov
(bad)
dec
sbb
pop
xor
es
dec
sahf
and
stc
push
(bad)
lahf
lahf
fwait
push
in
xor
sahf
bswap
mov
pushf
pushf
addr16
cwde
popa
sub
cmp
xor
fcmovne
sar
int
adc
int3
dec
sahf
ins
je
ds
or
or
into
xor
mov
push
cs
push
repnz
cmps
addr16
xlat
cwde
enter
in
fsub
fidivr
pop
pop
adc
push
push
cmp
mov
(bad)
ins
inc
fisttp
retf
or
xchg
fst
shl
pusha
adc
(bad)
js
and
jmp
adc
fnstsw
arpl
jge
inc
mov
inc
lock
dec
dec
push
pop
push
imul
adc
in
push
ds
xchg
xlat
mov
(bad)
hlt
or
ret
ror
std
push
(bad)
sbb
push
xchg
ret
adc
pushf
jnp
cmps
mov
inc
cdq
xor
or
xor
mov
stc
xchg
cli
dec
xor
xchg
inc
ss
sub
mov
pop
push
sub
pop
mov
out
pop
int
fdivr
xor
call
popf
mov
test
mov
sahf
pop
outs
adc
iret
gs
mov
shl
lds
cmp
sbb
test
cmps
imul
xchg
in
test
(bad)
outs
sbb
outs
(bad)
mov
inc
(bad)
movs
adc
fcmovb
and
addr16
int
or
rol
ret
sub
int
or
mov
imul
(bad)
out
mov
push
hlt
push
ret
int3
outs
adc
xchg
or
sar
not
outs
and
(bad)
sbb
jg
dec
stc
jbe
test
inc
es
sub
lods
dec
push
ficomp
xor
inc
push
push
movs
test
sbb
mov
sti
imul
sbb
jmp
push
mov
cmovle
in
out
out
add
imul
jno
jecxz
rol
mov
push
push
enter
dec
xor
adc
rcr
cmp
test
pop
or
iret
add
rcr
out
retf
daa
call
push
addr16
das
push
xchg
mov
aaa
ins
or
call
(bad)
gs
fsub
outs
fs
jl
into
adc
dec
add
inc
mov
mov
or
(bad)
rcr
cmp
pop
retf
movs
mov
outs
push
push
jo
rol
outs
out
add
or
and
sub
inc
sbb
or
js
ret
jnp
loop
aam
vorps
or
aaa
ficomp
ret
push
ror
jg
ret
loopne
jecxz
std
and
fs
pop
add
(bad)
stos
mov
fnclex
xchg
cwde
pusha
mov
int3
cmp
(bad)
retf
shl
dec
add
mov
push
push
adc
dec
scas
adc
mov
imul
ss
add
sub
cmp
outs
sub
je
leave
mov
fidiv
adc
ret
or
es
jmp
pop
in
sub
xor
dec
xor
or
inc
lods
dec
jns
mov
and
clc
inc
pop
fs
pop
mov
outs
aad
popf
jae
fisubr
and
xchg
scas
inc
jl
stos
xchg
jmp
mov
in
rcl
push
lock
pop
in
adc
xchg
mov
ds
push
out
cmp
stc
popf
jmp
into
fwait
pop
in
mov
mov
bound
mov
das
push
jmp
not
dec
sbb
xchg
nop
pop
(bad)
jg
sub
dec
(bad)
cmp
mov
xchg
arpl
shl
lods
in
xlat
popf
push
dec
xor
js
mov
ja
mov
or
(bad)
xor
xchg
imul
push
test
cmps
cmp
cmc
push
test
sbb
jo
in
xchg
inc
mov
fucomp
aad
inc
cmps
mov
das
retf
ret
sbb
cmc
jo
pop
jne
inc
xlat
shr
stos
or
xchg
and
retf
enterw
inc
or
loope
push
movs
push
add
dec
in
dec
rcl
clc
cli
pop
hlt
pop
test
cmp
adc
data16
and
xor
or
xor
test
hlt
mul
cmp
xlat
cdq
pop
test
stos
or
push
test
push
push
xor
inc
jae
push
jmp
cmp
mov
xlat
repnz
or
test
sbb
jae
dec
retf
add
jle
ret
jns
cmp
scas
rol
jb
scas
sub
adc
cmp
popf
pop
out
dec
push
shl
cwde
fld
inc
adc
(bad)
push
push
retf
adc
cmp
and
lods
inc
mov
inc
fsub
gs
shl
or
mov
dec
inc
ins
adc
cmc
xchg
ins
hlt
xor
sbb
inc
xor
dec
pop
push
inc
cmc
sar
cmp
in
cmc
fbld
and
inc
add
push
push
movs
test
pushf
stos
out
xor
stc
push
sub
cli
cmps
xlat
pop
retf
jl
add
(bad)
stc
test
pop
int
jmp
and
shl
stos
(bad)
mov
out
(bad)
sbb
shl
and
shl
mov
cmp
sub
test
cmc
mov
out
test
jae
push
test
xchg
lea
push
mov
aam
mov
jns
stos
cmp
jle
clc
std
mov
or
mov
stos
xchg
aam
xor
push
lahf
xlat
xor
adc
sbb
pop
daa
and
xchg
sar
or
std
xor
jge
dec
scas
rcr
(bad)
sti
push
dec
or
es
mov
sub
add
(bad)
pop
pop
test
xchg
and
daa
icebp
mov
ret
add
cwde
in
scas
mov
sub
push
cmps
pop
pushf
out
cmp
pop
mov
cwde
(bad)
sar
cmp
xlat
fst
jnp
jl
std
or
popf
test
inc
mov
jb
iret
push
or
fisttp
push
jns
neg
ins
or
out
mov
test
xchg
and
movs
fisub
cmp
mov
movs
and
pop
sbb
repz
pusha
pop
ins
pop
cld
je
out
into
out
xlat
mov
jmp
data16
aam
ins
cmp
pop
arpl
dec
push
scas
imul
cwde
ja
adc
rcr
sti
gs
ret
stos
fwait
icebp
xor
ins
and
mov
stc
xchg
sub
mov
dec
and
out
xor
xchg
in
loopne
adc
pushf
mov
std
jmp
mov
mov
jae
pop
jne
jg
xchg
push
inc
mov
mov
arpl
lds
aaa
in
(bad)
in
fldcw
(bad)
add
xor
es
cmp
mov
nop
dec
stos
dec
inc
xor
das
repz
adc
xor
mov
movs
mov
push
add
(bad)
ds
xlat
out
popf
push
mov
ins
aad
inc
rol
rol
lea
inc
sbb
fnstcw
out
ret
int
mov
clc
in
jbe
hlt
cli
cmp
cmp
arpl
dec
into
out
loop
mov
jbe
cmps
(bad)
(bad)
mov
xor
add
mov
repnz
cmps
out
jmp
xchg
data16
(bad)
mov
and
cmp
mov
and
stos
xchg
ja
and
scas
pop
sbb
fs
xchg
xlat
sub
xchg
push
jmp
or
fmul
out
push
pop
fstp
adc
push
clc
(bad)
lahf
jl
sar
outs
add
add
lahf
das
lods
sub
imul
in
dec
fnstcw
xlat
stos
rcr
cmp
call
mov
adc
and
pop
(bad)
mov
adc
mov
hlt
mov
jp
mov
mul
xchg
lds
rcr
outs
push
hlt
imul
cmp
scas
mov
scas
inc
dec
in
sub
mov
dec
lds
mul
(bad)
repz
shr
jle
retf
add
jp
cmp
and
mov
push
ficomp
mov
adc
mov
push
lods
mov
and
push
push
pop
cmps
push
scas
ret
dec
jne
xchg
inc
mov
push
mov
sti
fwait
push
inc
loope
adc
pop
retf
inc
mov
add
inc
jle
icebp
scas
scas
mov
in
les
mov
call
and
in
test
test
gs
push
call
and
jmp
push
rol
pop
xchg
fcom
push
inc
mov
xor
mov
and
sub
(bad)
jg
and
jp
mov
setle
arpl
stos
js
test
inc
mul
daa
jae
xchg
sub
fidiv
jo
push
out
push
or
cmps
or
sahf
pop
into
stos
lods
loopne
push
push
ins
gs
or
shl
scas
mov
add
push
pop
cmp
jns
loope
mov
inc
push
mov
outs
jge
jge
mov
retf
mov
arpl
inc
sub
je
lahf
mov
mov
mov
mov
and
cwde
xor
mov
sbb
mov
xchg
lods
fmul
imul
mov
fidiv
scas
cmp
or
adc
sbb
or
fwait
sub
(bad)
fld
(bad)
mov
addr16
jno
cmp
jp
sub
cmp
lahf
mov
dec
inc
and
and
jmp
repnz
push
and
or
cmp
xor
pop
dec
sub
jno
push
cli
stos
push
icebp
int3
mov
jmp
mov
pushw
rol
mov
xchg
stos
xlat
out
or
ds
shl
cmc
inc
fisttp
loope
mov
mov
fstp
(bad)
das
mov
retf
xchg
sub
mov
stos
mov
mov
repnz
retf
cmc
movs
xor
stc
jno
(bad)
jmp
loopne
push
pop
loope
ja
add
rcr
loop
(bad)
outs
and
(bad)
sub
outs
jne
xor
fistp
inc
sub
push
cmp
sbb
in
ins
sub
push
je
adc
lea
adc
push
mov
and
jno
aaa
xchg
or
push
(bad)
xor
mov
inc
mov
push
dec
inc
inc
clc
sub
push
add
imul
das
pop
pop
push
mov
cs
xchg
jbe
push
in
out
push
out
pop
into
and
mov
push
div
jae
inc
inc
test
pop
xchg
not
mov
out
in
sar
mov
stc
fistp
fild
xchg
cli
dec
adc
mov
icebp
pusha
mov
iret
adc
pop
jp
cwde
xor
push
cld
shr
jge
dec
xlat
or
outs
test
xor
cmp
xor
mov
addr16
lock
pushf
daa
jbe
jne
jb
cmp
js
rol
repz
movs
dec
repnz
or
add
test
scas
jmp
and
hlt
nop
adc
mov
push
sub
retf
scas
xlat
jl
scas
popf
es
push
cs
pop
pop
sahf
jp
mov
push
sbb
inc
into
jmp
jp
cmp
mov
lods
inc
imul
cdq
mov
and
stos
dec
ror
retf
addr16
pop
mov
cmps
mov
cs
mov
jge
inc
std
jle
jno
mov
mov
push
movs
jae
jo
push
call
aas
fld
call
jo
xchg
jmp
call
shl
cmps
pushf
lock
jecxz
add
and
add
jecxz
fnstcw
pop
stc
push
retf
rol
xor
rcl
icebp
xchg
loope
imul
push
ret
pop
mov
inc
(bad)
mov
and
adc
or
stos
jle
retf
mov
inc
mov
inc
xor
and
sar
pop
jp
(bad)
and
and
add
test
mov
stos
mov
retf
xor
mov
les
sar
mov
out
jge
(bad)
fs
pop
adc
ja
hlt
(bad)
out
mov
es
sub
mov
and
xchg
jb
sub
lods
(bad)
mov
rcr
pop
jb
fmul
sub
inc
stc
push
cli
nop
ror
lods
loop
sub
cmps
das
mov
lock
js
rcr
in
jb
fcom
adc
call
sbb
push
dec
retf
retf
pushf
inc
mov
js
test
inc
aad
cwde
pop
neg
mov
push
sbb
jecxz
ret
jne
lahf
sub
xor
xor
outs
dec
sahf
and
das
(bad)
inc
and
jmp
mov
jl
rcl
pop
daa
mov
call
popf
xor
sbb
(bad)
test
dec
(bad)
jg
std
and
sahf
add
in
push
mov
sub
adc
xor
cld
xor
call
mov
mov
fnsave
test
mov
mov
sar
test
xchg
push
out
pop
fdivr
sbb
jle
in
test
sti
sub
xor
lods
jmp
push
mov
mov
lea
xor
ror
cdq
fs
retf
mov
and
dec
mov
adc
jecxz
xchg
enter
push
mov
pop
mov
jbe
fisubr
adc
sbb
ja
popa
(bad)
mov
outs
or
in
jmp
(bad)
lods
fs
ja
xchg
cs
inc
loopne
jo
and
cmp
xchg
clc
push
sahf
ins
repz
in
jbe
ror
ins
jge
daa
mul
outs
test
add
and
loopne
mov
dec
or
sahf
jge
arpl
out
mov
les
fidiv
lds
jmp
mov
xor
lahf
inc
hlt
lods
lods
fdiv
not
out
mov
icebp
mov
cdq
jle
ror
fbstp
sub
ror
out
enter
mov
xor
ins
icebp
pop
mov
jnp
fmul
adc
or
pop
xor
xor
js
cmp
sahf
out
jns
mov
mov
sbb
mov
ins
inc
pop
pop
jmp
ret
dec
lods
adc
fmul
je
int
mov
adc
mov
int3
lods
add
out
aaa
inc
std
pop
arpl
sti
push
out
shr
mov
lods
(bad)
out
jnp
scas
sbb
mov
cmps
inc
loope
repz
call
ret
stos
jns
mov
loop
fnsave
popf
into
jmp
xchg
mov
xor
mov
imul
or
push
jae
mov
fld
fldenv
repnz
popf
add
(bad)
shl
dec
sahf
les
test
cmp
pop
call
sub
cdq
pop
or
add
stos
cmp
int3
jmp
addr16
test
ins
lea
adc
jle
mov
jae
cmp
bound
scas
xchg
cmp
jae
rcr
fs
pop
loopne
pop
mov
or
xchg
or
scas
in
out
push
ds
pop
lea
sti
mov
push
push
cmc
retf
jno
rcr
mov
es
retf
mov
lahf
push
ins
fisub
inc
adc
sbb
loopne
xor
add
xlat
inc
pop
cmp
inc
inc
or
adc
cdq
xchg
ins
loope
cmp
jecxz
mov
fnstsw
xor
dec
hlt
jl
inc
mov
in
rol
hlt
push
jbe
adc
(bad)
stc
push
xor
ds
mov
mov
ret
test
xor
cld
add
not
test
fs
jns
dec
pop
je
fst
push
mov
out
cmp
add
fwait
add
ss
aad
mov
xchg
xchg
and
bound
in
test
jnp
dec
dec
aad
dec
aad
push
shl
xchg
lds
mov
loopne
and
mov
cli
sub
enter
iret
fst
dec
in
pop
jno
cmc
push
jg
lods
pop
retf
rol
jmp
dec
fistp
stos
mov
idiv
rol
jmp
pop
pop
retf
sub
jecxz
aaa
jmp
xchg
gs
fsubr
popa
repz
cmp
fild
lahf
(bad)
cld
in
loop
jge
sbb
push
xor
fnstenv
cmc
test
mov
loop
sub
sar
cmp
adc
cmc
sti
dec
pop
lock
icebp
fistp
jecxz
popa
sbb
es
jne
inc
in
repnz
cmp
and
mov
int3
imul
cmc
jge
mov
inc
jp
xor
pop
loopne
lahf
cmp
into
data16
in
loop
push
cld
push
(bad)
test
push
and
push
jmp
sbb
in
cwde
inc
pop
xchg
shr
cld
cmp
mov
push
cmps
ja
inc
cmps
out
or
jl
dec
xchg
jno
xor
jmp
fdivr
rol
sub
jns
xchg
mov
add
mov
imul
leave
mov
xor
xchg
sbb
outs
mov
shl
stc
popa
jmp
bound
pop
mov
jge
into
pop
cmps
(bad)
idiv
sbb
enter
push
fxch
sbb
inc
jo
ret
jp
ret
ja
and
je
mov
dec
pop
aam
popa
and
push
jmp
xchg
pop
call
std
and
bound
pop
aad
mov
add
shl
clc
cmps
push
jmp
sub
fisttp
std
jb
test
sbb
adc
adc
pop
test
add
mov
lods
xor
push
int
adc
adc
shl
repnz
mov
push
repz
dec
xor
mov
in
xor
out
mov
xchg
push
inc
bound
fisubr
sub
jge
xor
inc
mov
fcmovnbe
pop
pop
test
sub
or
or
cmp
inc
pop
mov
popa
jae
mov
xlat
rol
out
into
jle
push
call
test
jo
and
imul
dec
xor
or
(bad)
sub
fisttp
(bad)
lods
call
mov
push
mov
cmp
or
(bad)
mov
adc
pop
jp
cmps
outs
mov
mov
mov
push
cmc
xchg
dec
call
mov
add
push
sub
jo
xchg
pop
(bad)
aas
sbb
enter
in
cmps
pop
adc
loop
stos
sbb
gs
jns
xlat
or
fstp
ins
or
scas
(bad)
push
arpl
cmp
ror
mov
or
scas
mov
in
mov
in
push
dec
repz
mov
aaa
mov
shl
push
adc
ret
retf
jmp
ins
jecxz
das
iret
dec
jge
out
mov
(bad)
jnp
bound
add
sub
test
cmp
pop
(bad)
out
jmp
xlat
movs
out
lea
ins
in
push
jl
js
push
add
fidivr
shr
into
test
sbb
dec
loopne
fistp
dec
ret
shl
inc
mov
xchg
xchg
adc
push
nop
jmp
hlt
bndldx
fcom
push
fistp
push
cmps
lods
cmp
(bad)
sbb
fisubr
cli
pop
mov
retf
jbe
sub
mov
mov
push
test
ins
sub
lods
loope
sbb
sub
popa
sub
leave
adc
inc
les
movs
pop
in
pop
xchg
dec
hlt
movs
icebp
jne
xchg
pushf
dec
add
mov
pop
and
aas
mov
pop
mov
mov
mov
into
sbb
data16
pop
(bad)
or
stos
stos
push
imul
mov
rol
and
scas
data16
adc
popa
inc
xlat
sbb
cmp
pop
ins
dec
sub
inc
in
jae
loopne
mov
je
leave
lock
dec
jle
ja
ret
mov
dec
imul
pop
fst
jge
repz
mov
xchg
mov
(bad)
jmp
or
in
lds
push
ret
leave
push
xchg
push
xchg
lahf
mov
aad
ss
lds
jno
xor
fdivr
and
inc
(bad)
out
mov
inc
cwde
mov
wbinvd
test
add
mov
out
xchg
pop
cmps
mov
inc
movups
test
mov
adc
loope
(bad)
fisttp
repnz
xchg
jb
adc
mov
call
adc
jae
xor
(bad)
and
xor
push
hlt
add
fs
xor
pop
jmp
dec
add
aaa
xor
sete
mov
dec
xor
daa
inc
clc
test
inc
add
adc
jae
(bad)
mov
test
addr16
mov
pop
jecxz
push
jae
xlat
cmp
stos
jl
or
bnd
adc
jge
in
jle
gs
push
test
mov
mov
(bad)
call
test
das
popf
mov
hlt
inc
gs
mov
popf
cdq
and
add
jb
jl
dec
xchg
call
xchg
mov
xchg
xchg
mov
add
pop
retf
pop
fadd
mov
and
push
in
out
call
xlat
and
out
rol
fmul
pop
jbe
sbb
rcl
stos
inc
cmp
daa
xchg
xor
pop
fcomp
jp
aad
inc
sti
jle
mov
sub
jmp
and
cmp
aad
and
gs
sub
ss
adc
leave
out
in
and
loopne
mov
jl
dec
and
xchg
ret
cmps
add
jle
mov
div
mov
dec
int3
sbb
sbb
jae
fisub
inc
dec
scas
pop
pop
or
sub
add
xor
scas
out
sbb
mov
loop
cmps
inc
call
sahf
test
push
int
mov
sahf
push
sbb
daa
cmp
adc
lock
or
mov
adc
jb
stos
test
add
clc
out
jg
popf
xchg
ds
mov
jnp
stos
lahf
cli
push
sub
aas
sbb
daa
sbb
lods
push
and
sub
pop
xor
in
outs
cmp
jge
mov
das
movq
outs
gs
outs
push
jl
adc
push
mov
xchg
mov
jae
pushf
icebp
inc
jge
cli
inc
sbb
mov
outs
leave
cmp
add
cwde
mov
and
or
xchg
imul
cmp
jle
jb
movs
adc
mov
ja
(bad)
call
or
mov
(bad)
ja
add
mov
pusha
xchg
cmp
mov
push
push
mov
inc
xor
dec
stc
add
stos
enter
lds
xor
push
retf
sub
inc
cli
cs
pop
xchg
xor
outs
pop
mov
into
add
push
dec
xchg
mov
(bad)
push
mov
pop
jmp
icebp
fbld
fucomp
aas
into
loope
das
add
ret
std
push
xchg
xor
fild
loopne
loopne
inc
cmp
mov
dec
push
in
js
mov
in
ret
xchg
in
jb
jl
and
nop
push
cdq
mov
mov
push
xchg
call
outs
inc
shr
jmp
sub
gs
sbb
inc
ins
rcl
sahf
dec
and
xrelease
int
cld
cli
xchg
aas
retf
ins
mov
xlat
dec
pop
xor
ficomp
cmp
in
xor
imul
outs
mov
jl
push
inc
sub
lahf
lock
xor
pop
and
lahf
push
(bad)
out
pop
adc
(bad)
imul
ja
dec
rcl
push
retf
sbb
add
push
cmp
loop
push
outs
mov
aad
jbe
dec
or
test
arpl
pushf
xchg
jp
mov
out
hlt
bound
pop
repz
(bad)
int3
mov
into
jp
pushf
mov
xor
or
inc
mov
add
fwait
shr
stos
loope
push
fisttp
test
fsubp
jns
jge
sbb
ins
inc
(bad)
cld
shl
stos
mov
or
fs
lods
cmp
test
(bad)
in
ret
mov
sub
xlat
xchg
std
movs
fimul
pop
inc
fdivr
js
push
mov
call
push
cmp
and
pop
outs
cmovbe
or
pop
xor
adc
pushf
nop
jmp
xchg
test
cli
mov
and
and
mov
push
gs
sar
xchg
mov
iret
popa
pop
add
push
dec
add
fmul
dec
ror
ret
sub
daa
jmp
out
outs
lock
cld
push
jmp
shl
leave
(bad)
jecxz
xor
jmp
cmp
cmps
aaa
ins
mov
leave
dec
jge
and
jne
mov
mov
add
loop
out
pop
mov
in
mov
mov
pop
push
xchg
mov
xchg
popa
ds
nop
mov
shl
out
jbe
mov
jecxz
popa
dec
(bad)
sbb
(bad)
adc
inc
(bad)
cld
or
fmul
pop
aas
fcomp
and
adc
aaa
test
pop
and
dec
push
pop
and
push
cmp
cmp
mov
push
push
lock
lahf
cmp
pop
inc
rcl
(bad)
out
data16
add
and
jmp
ret
popa
xor
inc
push
push
gs
fs
pop
sub
sbb
xchg
lods
xor
jo
lds
push
or
lahf
out
in
jmp
ret
add
push
sbb
mov
ret
(bad)
test
sbb
ror
cwde
je
out
rcr
pop
out
push
shr
xchg
bound
cli
inc
out
pop
push
sbb
pop
aad
(bad)
aad
rol
push
add
imul
not
out
push
push
mov
cmp
ins
xchg
mov
aad
movs
fdiv
jmp
std
adc
test
mov
icebp
push
mov
jge
out
cmps
retf
mov
sar
pop
cwde
movs
adc
lahf
push
and
cmc
fisub
ret
enter
sar
clc
(bad)
push
jns
or
dec
dec
in
mov
je
xlat
into
not
out
jbe
mov
mov
adc
pop
xchg
lock
xchg
(bad)
dec
retf
mov
sub
sbb
daa
bound
cmp
adc
dec
fsubr
adc
arpl
call
shr
cdq
push
pop
and
cmp
jo
push
scas
push
adc
lds
xor
repz
or
rol
lods
ins
ror
es
nop
push
inc
ror
adc
xor
cmc
(bad)
scas
loope
sub
movs
mov
test
mov
inc
xchg
ficomp
ins
push
paddq
or
dec
xchg
jmp
mov
sar
std
pop
ss
sbb
dec
scas
(bad)
add
cmp
retf
push
cmp
punpckhwd
mov
js
push
(bad)
push
jnp
and
jg
mov
jmp
das
popf
mov
jle
(bad)
(bad)
nop
mov
inc
shl
mov
mov
fcomp
repnz
inc
into
popa
inc
xchg
test
jbe
stc
or
out
movs
xchg
jno
add
arpl
fild
sbb
push
add
popf
push
add
dec
dec
inc
cli
ins
and
idiv
xor
jae
pop
jecxz
adc
sub
dec
xchg
xchg
or
lahf
mov
mov
jnp
cmp
push
cmp
imul
pop
lods
not
push
not
stos
cmps
jp
loop
or
mov
les
push
jl
jbe
adc
jo
stos
and
ss
fwait
ins
push
rol
test
inc
xor
ds
dec
mov
push
sahf
jo
gs
adc
popf
std
iret
das
popf
jae
nop
in
pop
xchg
lods
mov
les
rcr
xlat
adc
ss
mov
jbe
nop
mov
fldcw
jge
sahf
xchg
loop
ins
and
mov
add
mov
aaa
inc
mov
daa
aas
sbb
mov
sbb
mov
js
sahf
or
mov
xchg
jmp
push
(bad)
dec
cmp
out
mov
sub
aas
mov
mov
and
or
mov
cli
push
jl
inc
pushf
cld
sub
stos
jmp
inc
test
dec
mov
les
cmps
sar
dec
inc
or
retf
jnp
arpl
jmp
test
popa
adc
popa
adc
fwait
sbb
loopne
ret
leave
push
imul
shl
fnstcw
push
hlt
or
adc
pop
ins
xor
jns
mov
add
test
jl
jno
in
nop
mov
icebp
scas
push
aam
fldenv
scas
mov
mov
in
adc
sbb
mov
mov
jns
repz
adc
arpl
aam
mov
sahf
adc
cli
xchg
add
cmps
or
in
ficom
inc
loopne
xchg
loop
sti
xchg
(bad)
adc
test
push
add
sbb
cli
fsubp
jp
or
push
(bad)
std
scas
sti
push
jbe
xchg
or
sbb
lods
outs
mov
std
test
jecxz
inc
adc
loope
into
ins
retf
imul
mov
jp
sbb
arpl
adc
ror
addr16
cmp
ds
aam
jp
nop
aas
inc
mov
sbb
ds
mov
push
push
inc
gs
dec
add
jb
inc
stos
sahf
aam
xor
in
xor
les
sub
dec
movs
movs
add
xor
test
retf
push
fcomp
ds
mov
mov
adc
hlt
pop
dec
jmp
test
add
push
inc
cmp
xor
cwde
push
hlt
adc
mov
jns
test
push
mov
add
lds
stos
inc
out
sahf
mov
adc
jge
lods
es
cmps
in
lods
push
jne
dec
mov
add
xchg
xchg
sbb
xchg
mov
mov
xchg
pop
jnp
(bad)
xor
dec
xor
push
retf
adc
dec
sar
leave
aad
nop
mov
(bad)
(bad)
push
(bad)
pop
jecxz
rol
xchg
mov
xlat
movs
jno
(bad)
cld
ins
adc
clc
mov
ins
push
pop
stos
sub
arpl
mov
loop
push
jne
lods
xchg
mov
sub
stos
repnz
or
mov
cmp
leave
xchg
cmp
mov
sti
aas
aam
neg
and
movs
mov
or
mov
mov
(bad)
fild
call
jbe
xchg
add
sbb
ret
jae
xor
mov
pop
ds
jns
pop
mov
call
call
dec
mov
push
sub
in
inc
pop
pop
xchg
inc
mov
mov
lods
pop
mov
xor
adc
jecxz
(bad)
arpl
(bad)
pop
jnp
sahf
xchg
cli
jmp
(bad)
or
jne
xchg
in
mov
ror
rep
adc
mov
or
ret
xchg
adc
adc
xor
iret
mov
xchg
sbb
or
movs
aam
nop
test
pusha
(bad)
jno
cmp
(bad)
fstp
add
dec
out
mov
push
mov
cmp
lea
in
cmc
add
test
push
sbb
push
aam
sbb
pop
stos
loop
inc
std
mov
push
fcmovnu
test
inc
inc
mov
into
inc
jle
fisttp
popf
and
cmp
jnp
test
pop
mov
(bad)
in
in
hlt
ins
jns
push
(bad)
sbb
pop
(bad)
addr16
sub
mov
lods
jle
adc
xchg
sbb
lock
mov
out
iret
fstp
fucomip
pop
dec
mov
ds
test
cld
das
sbb
cmps
xor
jae
mov
fwait
pop
or
jmp
xor
sub
mov
and
retf
or
and
add
pop
and
jae
fidiv
jnp
popa
stos
aas
leave
dec
xchg
inc
jg
hlt
sbb
cmps
adc
rol
mov
nop
lock
cld
rol
adc
rcl
dec
(bad)
jmp
dec
in
pop
sub
or
push
in
jbe
movs
cmp
jbe
xchg
xchg
(bad)
jmp
mov
dec
or
dec
jmp
inc
mov
mov
(bad)
and
jnp
sar
jne
or
imul
hlt
sub
sub
into
data16
inc
adc
leave
test
sbb
xor
and
xchg
cmp
pop
retf
jp
jp
mov
aam
or
inc
enter
adc
loop
pop
cmps
mov
ret
sar
pop
cmp
in
sub
inc
mov
aad
enter
pop
inc
inc
arpl
pop
inc
clc
mov
cmc
xor
ja
ror
in
std
inc
mov
popa
movs
xlat
pop
adc
lods
cmp
pop
fst
gs
xor
jnp
push
fdiv
cmp
dec
mov
sbb
shl
nop
pusha
arpl
sbb
shrd
sti
lods
pop
loope
cdq
mov
out
dec
jno
sbb
test
bound
push
mov
ror
and
sbb
scas
test
fcmovbe
mov
ja
xchg
and
xor
mov
repnz
jmp
loope
mov
fdivr
es
jge
mov
hlt
jl
in
pusha
adc
icebp
push
or
mov
iret
mov
int
push
and
rcl
sbb
cmp
inc
test
cmp
sbb
icebp
pop
and
xor
jno
fs
mov
lea
inc
cmp
or
ret
xchg
inc
inc
adc
push
add
push
ret
dec
fisttp
ret
fld
dec
xchg
mov
test
movs
add
xchg
mov
mov
les
adc
inc
cld
imul
scas
test
(bad)
(bad)
out
sub
push
inc
push
add
aad
and
jg
(bad)
jecxz
loopne
jne
adc
enter
stos
mov
mov
clc
ret
je
lods
repz
push
mov
push
sub
addr16
hlt
push
adc
in
pop
(bad)
dec
xchg
arpl
daa
xchg
ret
das
mov
add
data16
jp
cmps
not
pop
out
sahf
stos
pop
jae
sbb
add
jo
std
mov
mov
add
xchg
addr16
mov
in
inc
add
(bad)
rol
push
std
test
inc
movs
mov
pop
fisub
movs
and
(bad)
in
xchg
ror
mov
jbe
mov
jmp
pushw
mov
test
lea
lds
bound
popf
sbb
das
outs
or
call
mov
retf
xchg
div
dec
sub
cdq
repnz
stos
jo
in
loop
mov
scas
push
push
xchg
mov
dec
mov
aas
xchg
ja
rcr
loop
sbb
out
sbb
int3
sub
imul
adc
cld
pushf
int3
push
(bad)
in
push
div
pop
imul
out
jmp
sbb
push
xchg
mov
pop
sahf
loopne
loope
das
mov
lods
adc
fistp
mov
sahf
imul
or
loop
dec
les
push
fwait
cmp
jb
loopne
retf
nop
shl
dec
sbb
repnz
ins
je
inc
adc
aam
pop
cmp
(bad)
cmp
pop
add
ja
mov
jecxz
sahf
sub
rol
cmp
add
mov
xlat
cmp
cmps
shr
cmp
mov
popf
add
neg
xor
les
mov
push
cdq
and
xchg
xchg
retf
leave
adc
cmp
push
pop
fist
push
jmp
jmp
mov
pop
adc
loopne
cli
adc
ins
nop
fwait
and
cmp
fistp
fcmovbe
mov
jge
sar
(bad)
push
pop
addr16
ficomp
dec
mov
(bad)
push
jae
pop
inc
ret
mov
sbb
jb
into
sbb
das
inc
fistp
cmp
popa
push
jo
lods
adc
dec
sub
pop
xchg
loopne
add
adc
pushf
xor
cmps
jp
sub
pop
hlt
loope
ins
movs
enter
shr
dec
mov
outs
pop
mov
and
inc
sub
pop
nop
cld
xlat
adc
adc
push
push
xlat
add
retf
stos
jecxz
out
hlt
fucomp
test
mov
jl
add
rol
xchg
lock
shr
pop
inc
dec
loopne
mov
sub
fwait
(bad)
mov
clc
dec
xchg
pusha
pop
ret
int3
imul
xchg
call
fcmovne
aam
sub
rol
push
fs
cmps
ds
fs
add
mov
jb
sbb
cdq
aad
push
js
inc
lock
ins
xchg
movs
jmp
xrstors
sub
into
xlat
int
jge
adc
sbb
out
dec
lahf
bound
cmps
adc
out
(bad)
(bad)
xchg
dec
mov
pop
cmc
iret
xchg
xchg
push
mov
mov
(bad)
and
gs
loope
mov
mov
push
add
jecxz
mov
cmp
inc
cwde
mov
push
addr16
shl
aas
cmp
test
sub
or
pop
push
inc
inc
push
pop
fs
ss
and
or
jne
leave
es
out
movs
mov
jg
(bad)
ja
or
aaa
sub
pop
push
inc
cmps
test
das
mov
ss
adc
adc
stc
daa
xchg
jae
cmp
jne
int3
push
movs
jle
out
pop
jne
mov
mov
mov
add
push
pop
xchg
fs
(bad)
mov
das
and
push
outs
mov
xor
mov
inc
jbe
add
xchg
call
cdq
cwde
jne
(bad)
call
adc
inc
rcr
mov
std
sahf
cwde
inc
xlat
push
fs
cmp
xor
jg
push
scas
retf
pop
sbb
mov
jo
or
xchg
and
pop
mov
cmc
out
in
mov
std
imul
xor
push
sbb
or
cli
pop
aaa
leave
pop
shr
or
repnz
xor
adc
fsub
ins
lds
xor
or
fcom
cs
mov
ins
mov
fucomp
lds
or
sbb
iret
sbb
cwde
std
pop
xor
test
fnsave
inc
dec
ja
push
xlat
xor
mov
adc
inc
in
mov
je
nop
xchg
es
es
sub
pop
test
mov
mov
fwait
movs
iret
dec
jmp
or
out
fidiv
stc
jno
jg
pushf
xchg
xchg
mov
lds
pop
int
sbb
sbb
add
cs
cmp
xchg
sbb
loop
mov
(bad)
pop
sub
lahf
popf
pop
jge
add
mov
loop
or
ficom
je
mov
pop
mov
push
cmc
xor
xchg
aam
es
jp
aaa
inc
pop
loope
pop
inc
sub
add
inc
aas
add
sub
cmps
inc
pushf
dec
pop
inc
inc
je
fdivr
push
mov
inc
xchg
fadd
shl
lock
iret
aam
mov
pop
cmp
sub
rcl
xchg
repz
shl
out
loop
sub
or
imul
rcr
movs
mov
and
cld
dec
cld
mov
rol
cmc
or
fstp
loopne
jns
outs
adc
icebp
rcr
add
add
cmps
retf
mov
rcl
mov
mov
scas
cs
mov
xor
aas
push
jp
mov
(bad)
lahf
fidivr
and
addr16
xchg
mov
xchg
pop
or
dec
pop
mov
push
aam
ins
ds
cmp
jae
clc
cmp
pop
xor
mov
pop
ss
jle
mov
call
mov
sbb
fdivr
dec
pop
fild
jbe
mov
loope
dec
pop
aaa
test
push
jns
pop
xor
push
jmp
cmc
adc
scas
and
add
sub
cli
mov
xlat
shl
sub
jg
fldenv
retf
dec
jge
hlt
mov
leave
push
movs
int
loopne
inc
ret
iret
cmps
movs
mov
arpl
push
pop
xchg
cmps
stos
cmps
push
jl
push
add
pop
xlat
(bad)
out
cdq
cmps
fistp
dec
mov
jns
aaa
sub
stos
arpl
in
dec
jb
mov
(bad)
out
xchg
out
cdq
test
dec
clc
popf
mov
sub
shl
cmps
pop
stos
clc
pop
movs
mov
dec
jns
sbb
cld
sub
fild
mul
iret
mov
fsub
lahf
mov
adc
fwait
pop
ins
sub
mov
mov
dec
pop
movs
jl
jmp
push
aad
cmps
(bad)
jbe
bound
ds
sub
retf
call
hlt
pop
in
int3
xchg
iret
cwde
cmp
fst
mov
pop
or
push
fwait
jl
mov
add
push
jl
rol
ror
das
lods
mov
and
and
fxch
hlt
jmp
ja
mov
sbb
imul
mov
fild
mov
cld
bswap
jle
inc
ins
outs
cmps
loop
xlat
outs
dec
ja
stos
xchg
dec
(bad)
loop
scas
js
cmp
add
stc
adc
sub
jmp
xor
data16
(bad)
cli
int
xchg
cld
sub
enter
xor
outs
frstor
jno
mul
cmps
jns
cwde
mov
sub
iret
adc
lods
dec
dec
cmc
and
cmps
sti
xchg
(bad)
jg
(bad)
cwde
xchg
pop
test
rol
jmp
pop
bound
test
int3
xchg
push
add
xchg
mov
rol
add
pop
ror
jae
mov
lock
and
iret
mov
aaa
cmp
clc
jmp
int
push
mov
enter
shl
and
mov
imul
aam
sbb
adc
js
or
adc
fdivr
mov
adc
popa
fs
cmp
call
jo
pusha
les
in
xor
rcl
push
ds
cmps
jmp
mov
or
dec
enter
pop
jge
cld
lock
dec
push
outs
test
mov
mov
out
jecxz
out
xchg
mov
sahf
popa
mov
cmps
lods
sub
or
lock
jno
fdiv
fisubr
mov
xchg
repnz
ret
std
div
lock
mov
outs
or
mov
adc
addr16
fcomp
jl
jp
dec
fcomi
cmps
outs
pop
in
adc
ds
dec
mov
sbb
(bad)
sub
mov
mov
xchg
mov
movs
in
ss
mov
movs
test
stc
arpl
push
dec
mov
or
out
je
add
cmp
ins
call
(bad)
loop
mov
xlat
clc
mov
dec
test
mov
shr
mov
int3
jne
jbe
or
push
cmp
mov
mov
cmp
je
aas
sbb
cli
cmovs
mov
mov
xor
push
(bad)
inc
fdiv
mov
and
cmp
pop
mov
stos
jb
sub
pusha
in
shl
push
not
lahf
jle
mov
pop
fwait
cmp
xor
(bad)
mov
mov
add
test
add
pushf
cld
ja
sbb
adc
push
sti
xchg
popa
les
inc
or
lea
pop
aad
gs
scas
(bad)
cmp
fisubr
popf
sbb
mov
mov
xor
cld
pop
hlt
nop
and
mov
nop
add
sbb
(bad)
repz
sub
test
in
xchg
in
in
xchg
and
or
sbb
jmp
or
bound
in
stos
enter
int3
mov
push
mov
cwde
test
pop
aam
and
xchg
push
dec
(bad)
mov
dec
cdq
push
pop
call
pop
sahf
push
mov
dec
push
mov
repnz
push
fnstsw
imul
cmc
mov
sahf
or
xchg
outs
mov
enter
adc
nop
cli
xchg
push
popaw
lahf
mov
pop
and
psllq
cmp
stos
cmp
je
adc
cmps
pop
add
inc
lods
add
and
fs
inc
and
je
in
jp
xchg
jg
xchg
xchg
or
inc
fisubr
cmp
call
sub
imul
movs
mov
sbb
mov
retf
sti
ins
xchg
and
hlt
dec
repz
dec
test
mov
pusha
cdq
jns
call
ja
into
jmp
xchg
(bad)
adc
(bad)
mov
cwde
cld
add
sbb
in
push
out
pop
or
jl
cmps
shr
jecxz
sub
add
dec
rcr
repz
inc
mov
or
mov
cmovge
mov
mov
loope
xchg
pop
sbb
(bad)
pop
adc
jns
sbb
ficomp
jo
pushf
ret
sar
gs
xchg
cs
push
sbb
jmp
mov
jecxz
cs
int
jmp
mov
xchg
or
or
sbb
retf
dec
add
cld
stos
ret
and
jnp
sbb
push
or
xlat
test
mov
jmp
mul
xor
jb
scas
mov
fbld
fcomip
inc
and
aas
aaa
in
js
outs
mov
and
sub
xchg
mov
call
adc
pop
jp
fstp
jmp
push
mov
jae
sub
daa
or
scas
pop
jns
ror
xchg
or
repz
dec
xchg
(bad)
or
(bad)
aam
inc
retf
dec
sub
inc
dec
push
xor
inc
add
lds
repnz
loop
jmp
adc
or
and
push
je
add
daa
xchg
mov
ficom
test
xor
popf
in
repz
dec
xor
jecxz
jbe
or
in
pop
test
in
and
js
sbb
iret
sbb
pop
or
or
aaa
xchg
mov
repnz
pop
dec
xor
xchg
hlt
jae
sbb
adc
xchg
xchg
sar
jb
xchg
data16
mov
aam
or
push
enter
repz
arpl
in
sahf
or
pop
aaa
ins
imul
mov
jno
aam
inc
mov
dec
(bad)
xor
lahf
int
pop
outs
out
test
cmp
xor
jmp
fld
sbb
sub
sbb
add
iret
test
xor
jo
test
mov
dec
inc
mov
and
test
push
jmp
test
cmp
and
mov
(bad)
add
jmp
sti
sti
pop
sbb
test
cmps
es
iret
mov
push
in
add
pop
mov
ret
sbb
in
mov
add
inc
inc
lods
mov
inc
sahf
test
sub
jmp
mov
popf
pop
stos
rcr
xor
outs
scas
pop
dec
test
pop
pop
call
arpl
les
lahf
dec
(bad)
sbb
pop
js
mov
sbb
push
jnp
pop
jne
int
lahf
mov
xchg
dec
movs
es
and
pop
sbb
inc
sub
mov
pop
push
cmp
mov
icebp
jae
test
cmp
hlt
(bad)
ins
into
je
push
jne
dec
or
loop
cmp
inc
push
cmp
data16
es
lods
adc
jp
iret
pop
jae
mov
adc
cmps
mov
inc
call
pop
and
call
jmp
mov
ror
add
out
fimul
push
and
xlat
cmp
add
and
jbe
je
pinsrw
sar
jb
hlt
mov
jo
mov
mov
(bad)
shl
les
mov
cwde
jo
sub
loope
mov
ins
(bad)
jp
xchg
sbb
jge
mov
pop
adc
cdq
rcl
test
lea
inc
push
push
ins
ins
fcom
cmp
pop
cli
and
sbb
inc
cld
(bad)
fadd
xchg
and
mov
push
jmp
jle
stc
cld
test
loope
data16
sahf
lods
in
add
cdq
pop
xor
mov
(bad)
leave
pop
dec
out
pop
adc
xor
push
nop
and
mov
xlat
cmc
sbb
or
aad
sbb
repz
xor
inc
xor
xor
cmc
cmp
outs
add
fcmovnb
nop
lahf
jno
xchg
xor
xchg
lods
sti
out
lds
shr
fld
out
lods
gs
imul
sub
repz
test
retf
inc
push
fldcw
inc
inc
movs
cmps
call
and
push
dec
iret
xor
and
sbb
adc
sbb
mov
lds
mov
bound
out
(bad)
cs
into
pop
inc
ins
or
fcom
and
jp
push
lds
sbb
sti
fidivr
into
ins
mov
movs
repz
pop
sbb
gs
test
mov
dec
mov
test
and
daa
pop
inc
jp
fbstp
setno
or
mov
jecxz
sub
nop
aam
clc
cmp
leave
xchg
or
shl
fcom
pop
js
pusha
sbb
adc
and
std
mov
iret
pushf
in
iret
pop
push
or
sub
inc
sbb
xlat
cmp
cmp
movs
pop
mov
jae
(bad)
xchg
jno
inc
out
sbb
rol
shr
or
xor
sbb
call
lock
mov
dec
adc
in
push
movs
inc
hlt
xor
or
cmp
(bad)
and
jg
xchg
loope
xor
je
(bad)
iret
rcl
idiv
mov
push
jl
sbb
ins
push
mov
sbb
sti
je
dec
add
push
xlat
add
mov
or
adc
pop
xchg
cs
leave
mov
test
inc
jge
xor
xor
outs
cmp
mov
xchg
mov
sahf
xchg
cmp
add
inc
xor
aam
les
xchg
fcmovu
rol
call
scas
imul
pop
arpl
pushf
sbb
lahf
sbb
sahf
sbb
push
(bad)
adc
inc
push
dec
xchg
in
mov
cmp
pushf
or
imul
jno
daa
mov
cmp
clc
movs
and
push
pusha
or
push
push
cmp
and
xor
dec
cmp
ins
or
aas
cmps
mov
or
loopne
add
sbb
xor
mov
add
call
sub
jo
fadd
xor
pop
call
stos
jbe
(bad)
inc
pusha
dec
push
xchg
sbb
cmp
adc
cmp
lods
inc
das
mov
push
retf
jp
stc
fisttp
clc
not
iret
ins
pop
in
test
jnp
xchg
cwde
pop
and
inc
push
cmp
pop
sahf
add
or
mov
aad
cdq
sar
popa
not
pop
jge
mov
ja
xchg
or
nop
bound
std
jle
or
retf
cmc
sbb
adc
shl
sbb
test
xchg
stos
test
mov
pop
cmp
les
rcr
and
mov
sti
es
xchg
xor
call
shr
and
add
das
stos
and
jmp
mov
mov
inc
jb
out
pop
out
push
pop
mov
cmps
int
xor
jbe
push
(bad)
dec
mov
xchg
jb
sbb
gs
std
mov
imul
test
ds
xchg
sub
mov
add
sbb
fwait
shrd
sbb
push
ret
adc
inc
pop
je
mov
mov
dec
cdq
add
add
cwde
adc
adc
push
js
out
fistp
pop
sub
retf
imul
dec
jmp
test
xchg
adc
adc
dec
mov
cmps
or
lods
(bad)
in
popa
out
sub
push
xchg
pop
inc
pop
push
call
nop
cmc
mov
xchg
push
jb
inc
cmc
std
cmc
in
fwait
pop
add
ja
daa
gs
lds
inc
fnstsw
pop
aad
sub
icebp
sbb
inc
add
ins
or
mov
adc
ret
xlat
mov
sub
out
dec
test
add
fnstcw
call
dec
mov
cmps
add
mov
sub
aas
ja
cmp
movs
jecxz
push
mov
pop
retf
jne
push
inc
jo
mov
pushf
jle
mov
dec
(bad)
outs
and
(bad)
rcr
popa
push
or
xchg
xor
xchg
mov
cdq
add
repnz
test
xchg
sbb
mov
or
mov
and
adc
pop
data16
push
shr
sbb
cld
pop
aas
das
repnz
test
(bad)
movs
mov
arpl
jb
adc
mov
mov
mov
and
retf
push
mov
imul
cmp
arpl
ins
add
in
stos
sbb
je
icebp
mov
cmp
fsubr
sub
inc
jmp
add
je
pop
into
add
ins
hlt
push
pop
enter
push
jo
iret
sbb
jg
mov
or
mov
xchg
mov
into
xor
jmp
and
lods
sahf
xchg
imul
loop
psubsb
or
fnstcw
mov
xor
imul
jbe
ror
dec
enter
dec
cmp
rol
sbb
sub
aas
inc
es
sub
scas
int
popf
mov
inc
adc
xor
fcomip
and
xor
add
pop
sbb
(bad)
scas
mov
inc
repnz
push
cdq
sub
in
test
enter
pop
xchg
cmp
jg
sbb
aaa
adc
fs
mov
jle
clc
sbb
dec
popf
jb
stos
in
dec
add
adc
(bad)
int
das
and
shl
jmp
add
push
pop
cld
test
test
xchg
cmc
pop
mov
cmps
fist
cmp
pop
pop
aas
or
ins
out
movs
ror
and
mov
shl
cmp
mov
fisubr
add
pop
mov
cli
scas
loopne
cwde
je
shl
push
cmps
sbb
sti
ret
dec
jecxz
push
pop
mov
cmps
jp
adc
xchg
scas
xchg
mov
xchg
or
and
shl
sbb
daa
push
dec
jo
mov
mov
dec
mov
arpl
fidiv
jg
sar
(bad)
jge
jle
adc
popa
std
arpl
inc
push
inc
leave
mov
(bad)
sysenter
lods
mov
mov
cmc
and
sub
adc
idiv
call
push
lods
jbe
jle
add
adc
mov
push
jne
(bad)
xor
adc
sub
push
mov
mov
fwait
hlt
lock
repz
add
sub
adc
xor
mov
mov
sbb
and
xor
inc
(bad)
(bad)
pop
ins
add
sbb
and
dec
push
mov
cs
movs
mov
xchg
cli
aas
sbb
xchg
adc
pusha
jo
mov
push
scas
repnz
push
loope
jae
push
test
adc
jp
das
mov
call
push
mov
loope
cmp
mov
cmps
stos
aam
xchg
(bad)
xor
sbb
fisubr
sbb
xor
daa
jl
fsubr
pop
cwde
jmp
inc
not
pop
clc
push
cmp
out
dec
add
in
sbb
out
mov
jg
jmp
add
adc
(bad)
int3
and
push
inc
xchg
data16
pop
jne
test
cld
aas
pop
das
test
xlat
inc
clc
push
and
cmp
aad
or
mov
mov
(bad)
aad
xchg
inc
mov
cdq
arpl
jmp
jge
mov
add
movs
cs
sbb
mov
push
test
fwait
sahf
jno
and
jmp
loope
rcl
sub
int
int
inc
mov
push
stc
xchg
or
(bad)
and
cmp
mov
push
xchg
inc
arpl
inc
mov
inc
rcr
xor
sub
or
dec
js
fisttp
jno
and
(bad)
or
retf
push
rol
add
mov
out
sub
stc
ja
scas
bound
std
pop
jmp
sbb
out
enter
inc
or
scas
dec
cmps
jno
jno
mov
ds
lods
je
ss
lahf
(bad)
dec
xchg
test
jns
mov
mov
cli
jmp
mov
mov
test
in
(bad)
frstor
pop
leave
mov
(bad)
cmp
addr16
push
add
xchg
repnz
mov
adc
sbb
or
xchg
jmp
push
and
pop
je
loope
fdivr
fdivr
scas
sbb
(bad)
in
or
cs
xchg
sbb
sub
dec
xor
ds
dec
dec
outs
pushf
adc
mov
test
out
xor
adc
cld
jne
fcom
xor
cmps
push
popf
clc
pop
stos
inc
xchg
xchg
jge
aaa
stos
popf
inc
pop
xor
outs
popf
mov
or
sti
xchg
shr
loop
sbb
cmp
retf
mov
pop
outs
retf
pop
adc
mov
or
jmp
mov
sar
push
lock
div
pop
add
retf
daa
pop
xchg
popa
mov
jne
jge
jnp
sub
and
push
shl
pop
jmp
jb
mov
cmps
jecxz
data16
cmp
and
cdq
dec
gs
sub
xlat
jb
jo
mov
sbb
sbb
or
add
xchg
retf
add
gs
movs
xor
mov
jns
fnstsw
nop
mov
fmulp
dec
or
imul
xor
and
in
pushf
xor
mov
adc
push
int
jmp
push
cdq
rcr
test
ficomp
clc
shl
xchg
xor
loop
pusha
mov
mov
sub
pop
out
imul
or
leave
mov
mov
stos
jae
rcr
push
inc
fdivr
and
push
inc
leave
aaa
pop
mov
popf
adc
dec
cmp
add
push
push
pop
and
inc
inc
add
out
stos
mov
test
cmc
jecxz
es
ins
xchg
das
sbb
jb
ja
mov
movs
lds
cdq
xor
xchg
xor
xchg
test
cdq
mov
int
jg
cs
and
cmp
or
mov
(bad)
mov
sahf
out
lea
xchg
xor
and
jae
inc
mov
inc
sbb
ret
call
pop
es
scas
or
inc
jecxz
sahf
in
jecxz
cwde
(bad)
imul
mov
(bad)
ss
test
repz
push
pop
xor
fnstsw
sbb
pop
arpl
mov
out
pop
cli
adc
out
pop
cmp
popa
pop
(bad)
add
(bad)
aaa
dec
outs
xchg
push
xchg
jl
repz
cmp
repz
mov
xchg
push
sti
or
push
jg
clc
mov
cmp
lods
dec
cmp
out
fnstsw
call
imul
adc
(bad)
pop
out
test
fldln2
lods
jno
xchg
or
push
fndisi(8087
add
xchg
int3
cmp
cld
xchg
pusha
loope
push
in
xchg
and
jge
cmp
out
pop
sub
and
scas
pop
inc
dec
mov
xor
jo
xchg
sbb
mov
mov
sbb
in
ds
dec
bound
xor
(bad)
cmp
out
imul
leave
sub
(bad)
jle
outs
(bad)
pop
mov
lds
retf
cmc
rcr
test
sbb
inc
jbe
xchg
test
ins
pop
stos
cmc
fidivr
xchg
mov
pop
outs
pop
xor
lahf
(bad)
jbe
xlat
add
pusha
mov
test
sahf
sahf
(bad)
fsub
inc
leave
cmps
mov
(bad)
cs
mov
mov
mov
dec
lods
cmp
shl
push
shr
cmp
push
jg
push
adc
xchg
inc
jmp
sbb
dec
pop
or
movs
or
test
clc
sub
sti
shl
mov
test
cli
cmp
mov
sub
jno
cdq
dec
leave
mov
xchg
jge
shr
out
in
adc
fstp
outs
and
or
xchg
add
pop
xor
and
xchg
in
xor
pop
jl
sub
test
add
adc
push
sub
jno
push
imul
(bad)
ins
int
add
retf
icebp
push
(bad)
sbb
sbb
jg
mov
dec
cs
or
pop
push
dec
mov
and
sar
inc
push
retf
pop
jae
and
adc
dec
mov
ins
mov
cmp
or
bound
xchg
mov
xor
pop
std
out
pusha
jne
int3
or
stos
test
mov
out
cld
std
shl
pop
test
or
jne
xchg
xchg
jb
pop
jl
lods
cmps
pop
call
adc
jns
imul
nop
and
mov
xor
jmp
lock
or
stc
cmp
movs
loope
aaa
sub
fldcw
inc
inc
gs
sub
in
mov
sbb
mov
outs
sub
fiadd
xchg
movs
lock
jne
dec
push
jg
push
pop
sbb
sbb
ret
dec
dec
cwde
daa
test
xchg
cmps
test
mov
jno
in
cmp
sbb
neg
jbe
or
fistp
stc
mov
jl
cdq
mov
lods
hlt
mov
retf
cli
sbb
jne
shl
(bad)
shl
push
mov
fdivr
cmp
push
xchg
xor
loopne
shr
icebp
pop
call
retf
cmps
cmp
ja
in
in
add
sub
rcr
push
mov
mov
sub
pop
jns
repnz
or
mov
adc
fild
jne
das
sar
mov
in
mov
mov
inc
sub
dec
jns
shl
push
rcl
fist
push
add
div
dec
cdq
stos
cwde
js
and
pop
cmc
retf
and
push
push
and
imul
aas
sub
add
lock
test
sbb
ror
xchg
fmul
inc
movs
mov
push
ds
mov
dec
pop
test
sub
js
imul
(bad)
call
or
cmp
repz
add
push
cmp
pop
stos
xor
inc
enter
xor
add
test
popa
mov
inc
gs
mov
mov
cs
scas
rol
push
scas
mov
cwde
add
mov
jae
leave
out
mov
fs
gs
pushf
fcmovb
daa
mov
adc
xchg
mov
ret
xchg
sbb
mov
mov
pop
mov
jne
mov
scas
mov
mov
test
inc
int3
stos
in
mov
scas
inc
sbb
aad
lea
pop
push
xor
leave
lds
adc
mov
mov
icebp
aas
push
xchg
push
xor
jg
push
imul
lock
daa
cs
repz
cmps
adc
or
je
(bad)
div
jne
rcl
and
call
add
lahf
cmp
cmps
xchg
lea
mov
xchg
push
xor
inc
add
cmps
fist
inc
mov
ins
mov
push
mov
xor
jl
sbb
pop
jno
cmps
xchg
push
out
mov
or
popf
jns
dec
inc
xchg
sar
jns
jmp
push
pop
ins
out
mov
test
repz
enter
sbb
neg
jae
pop
jg
daa
cdq
pushf
rol
lds
add
mov
sti
xchg
stos
popf
push
pop
push
mov
add
adc
imul
mov
dec
mov
cmc
or
dec
jno
xchg
or
mov
hlt
retf
mov
fist
push
rcl
popa
in
int
jne
scas
xchg
mov
ins
adc
xchg
inc
jo
mov
cdq
mov
bound
xor
aaa
movs
mov
push
xchg
add
jae
sbb
adc
dec
pop
adc
test
into
push
retf
sbb
jg
int3
and
stos
push
mov
sub
aam
xor
outs
jae
sbb
add
(bad)
rcr
ret
aam
loop
clc
xchg
fild
add
adc
fdiv
arpl
pusha
inc
mov
xor
xor
imul
hlt
aaa
pop
cmp
je
mov
sbb
sub
dec
scas
push
mov
int
sbb
daa
mov
stos
outs
inc
cmp
fcom
(bad)
pop
adc
jae
add
mov
gs
xlat
stos
dec
mov
pop
jmp
push
outs
xchg
sub
push
pop
add
inc
js
inc
add
or
mov
in
cmp
and
cmp
sub
mov
jne
jg
adc
cmp
cmps
rol
mov
jp
scas
dec
cdq
sbb
(bad)
retf
outs
mov
fdivr
clc
fdivr
mov
mov
push
inc
(bad)
in
rcr
movs
(bad)
xor
add
data16
pusha
jl
or
movs
or
xor
mov
mov
push
jae
ins
inc
xchg
ds
shr
mov
or
and
cmps
inc
inc
dec
psrlw
pop
push
aam
ins
jg
pop
cmp
int3
(bad)
in
into
dec
leave
retf
test
inc
inc
cmps
dec
xchg
push
pop
js
inc
int
sub
mov
fst
cmp
test
sub
out
nop
push
pusha
test
sub
data16
outs
sar
ret
and
xchg
mul
nop
gs
push
cwde
mov
sub
scas
bnd
jno
xor
rcl
and
jecxz
ins
push
pop
imul
and
jg
adc
es
in
and
xchg
pop
push
(bad)
mov
jmp
mov
dec
or
dec
push
call
nop
adc
leave
mov
and
add
add
loopne
ret
call
cmps
daa
(bad)
jp
push
jo
enter
iret
push
inc
popa
pop
ins
mov
or
xor
jecxz
loope
push
cwde
mov
ins
mov
das
ja
inc
arpl
xchg
or
ret
pop
push
xchg
sti
jecxz
xchg
scas
lahf
pop
mov
outs
out
imul
out
mov
icebp
sbb
xchg
push
mov
pop
jg
mov
sbb
jp
mov
movs
bound
cmp
jl
dec
stos
sbb
cli
popa
and
aaa
cmp
(bad)
aas
pop
mov
outs
push
ds
pop
mov
arpl
mov
int
dec
pop
movs
pop
xlat
mov
ins
mov
out
push
dec
movs
dec
push
xor
ret
jnp
and
mov
out
and
clc
xchg
push
xor
jb
ja
push
or
or
lods
popf
or
adc
fcmovbe
mov
loopne
div
mov
jmp
push
mov
lock
sbb
xor
unpckhps
mov
push
dec
push
mov
cmp
xor
or
xor
mov
out
into
xor
add
push
jl
jmp
xchg
and
dec
test
jmp
repz
int
imul
ss
inc
out
scas
mov
repnz
test
xchg
movs
dec
fdivr
test
nop
icebp
pop
clc
mov
cmp
or
sbb
sbb
xor
jb
add
jbe
jmp
loop
clc
mov
cmps
shl
xor
sar
sbb
fdivr
int3
mov
rol
add
fyl2xp1
lock
mov
fld
adc
ins
test
arpl
loop
call
or
pop
sbb
xchg
sbb
mov
mov
adc
jb
cmps
test
(bad)
mov
dec
lods
mov
mul
aaa
mov
cmps
cmc
push
mov
je
retw
sti
rcr
(bad)
scas
cmc
(bad)
or
outs
lock
test
mov
int
push
xor
bts
clc
jnp
inc
dec
outs
add
lds
fwait
xlat
adc
je
clc
mov
rep
cmp
cmps
xor
ffree
imul
mov
lock
push
pop
sub
jnp
jmp
cmp
mov
dec
ret
mov
test
push
mov
int
scas
cmp
jnp
test
in
loope
arpl
and
rol
jg
jo
leave
cmps
test
test
jno
lods
pusha
das
mov
retf
inc
add
cs
gs
aad
bound
jmp
popf
or
mov
mov
stos
mov
adc
aad
(bad)
(bad)
sbb
shl
repnz
pop
cmp
add
xchg
daa
int
pusha
fcom
mov
push
pop
cmps
and
les
aas
int3
in
cwde
adc
inc
mov
add
inc
int3
jl
clc
gs
and
in
(bad)
test
and
aad
scas
xchg
neg
je
jmp
fld
adc
stos
sti
xchg
loop
push
sub
jp
aaa
adc
sti
add
adc
adc
in
dec
nop
push
imul
pusha
adc
cmp
fbld
add
xor
pop
mov
icebp
mov
inc
push
mov
dec
sbb
lods
add
cs
xchg
xchg
push
(bad)
fdivr
xor
ret
movs
mov
inc
xor
inc
jno
mov
add
sti
test
push
ror
mov
out
inc
dec
loop
mov
(bad)
in
aam
leave
cmp
mov
jae
movs
sahf
(bad)
nop
inc
push
add
push
mov
xor
mov
pop
mov
or
dec
push
or
out
inc
sub
pop
or
lahf
cli
pop
repz
mov
aaa
xor
jmp
sbb
pushf
fwait
push
jae
call
pop
dec
aas
test
test
mov
xchg
sbb
(bad)
push
hlt
lock
imul
sbb
sub
dec
lahf
test
add
jne
mov
mov
imul
mov
idiv
pop
in
jle
repnz
imul
clc
jg
sahf
dec
ret
push
sub
aas
jb
daa
sbb
or
mov
bnd
test
shr
push
and
nop
push
stos
jns
add
fwait
inc
jecxz
cmp
rol
adc
test
push
rcl
cmp
in
or
daa
(bad)
and
lods
out
jbe
mov
xchg
and
cli
inc
mul
add
lea
pop
mov
pop
loop
mov
adc
xor
pop
(bad)
ffreep
retf
add
push
cmp
dec
push
jl
fwait
imul
jp
jmp
and
inc
cmp
and
sahf
das
jp
and
stc
xor
push
sbb
xchg
push
dec
imul
pushf
jl
and
jae
adc
enter
rcl
mov
not
adc
pop
int3
push
xchg
in
dec
sbb
pop
out
sahf
pop
leave
pop
loop
das
push
jns
mov
add
add
psrad
aad
mov
jbe
ss
scas
loopne
mov
lahf
je
pop
dec
fsub
and
push
test
xor
ret
xor
(bad)
pop
mov
pusha
retf
xor
bound
inc
std
arpl
mov
out
sbb
sub
clc
pusha
mov
xchg
aad
jmp
iret
out
test
aad
push
data16
inc
jl
imul
stc
mov
ret
imul
sbb
and
mov
mov
xchg
mov
mov
inc
and
das
jg
fld
pop
jb
push
jbe
loope
cmp
mov
push
add
mov
mov
push
jne
stos
jle
sbb
mov
aas
repnz
outs
dec
std
(bad)
push
or
or
cmp
dec
fadd
mul
push
mov
cld
test
or
push
push
sahf
push
jecxz
push
and
in
push
(bad)
mov
stos
icebp
dec
push
lds
jbe
sbb
fcomp
jecxz
mov
ret
dec
es
ins
or
sbb
das
add
pop
and
movs
in
call
fsubr
retf
pushf
addr16
das
mov
test
es
cmp
jmp
inc
push
adc
inc
fcmovnu
sbb
fsub
fmul
or
ffree
pop
loop
mov
and
or
data16
retf
arpl
pop
fidivr
pop
inc
push
out
cmp
mov
xlat
ret
adc
fist
pop
(bad)
out
bound
call
cs
jne
cmp
fdivr
js
ins
gs
mov
adc
stos
shl
xor
pop
test
xor
mov
pop
fmulp
sbb
sar
dec
dec
inc
cpuid
inc
mov
retf
ja
(bad)
xchg
int
push
popa
les
mov
push
cmp
in
push
in
push
in
stos
and
gs
in
mov
sbb
ds
lds
scas
jo
sub
mov
mov
sub
(bad)
sti
cli
mov
ss
and
jns
(bad)
je
mov
mov
adc
mov
ins
fwait
cmps
(bad)
out
sar
mov
jns
mov
call
mov
and
sub
pushf
std
jb
dec
cdq
ficom
(bad)
jns
lock
out
js
rcr
(bad)
ffree
gs
push
push
adc
push
jmp
mov
loop
ror
mov
not
and
sub
jp
inc
jne
or
pop
jae
dec
lock
jno
rcl
xor
pop
sub
(bad)
and
sbb
adc
icebp
cmps
dec
mov
fld
and
dec
shl
out
ja
jno
je
mov
inc
pop
inc
icebp
xchg
or
loop
inc
inc
add
mov
mov
jle
inc
pop
push
test
push
test
xchg
ficom
or
inc
sub
inc
sbb
cmp
jbe
cld
jmp
mov
rol
pop
jne
xlat
popf
lds
xor
cld
fwait
jle
mov
je
sbb
fcom
leave
inc
dec
outs
xor
aaa
xor
sahf
cmp
hlt
cmp
sar
sub
mov
xor
xchg
(bad)
xor
sub
and
nop
sub
sub
test
mov
and
jne
or
xchg
in
mov
daa
ret
arpl
loope
push
xchg
pop
mov
jbe
ficomp
cli
cmc
scas
mov
aas
jbe
inc
and
pop
cmp
mov
jno
into
push
gs
push
push
mov
lods
(bad)
dec
psllq
pop
jmp
call
sbb
push
sub
outs
dec
pop
nop
cmp
iret
inc
fsubr
jae
dec
movs
cmp
push
cmps
push
sub
test
clc
enter
fimul
sub
ins
popa
dec
in
add
bound
ror
add
push
aam
and
pop
aad
movs
rcr
inc
jecxz
ds
push
cmp
ds
aam
mov
push
cmp
call
cmp
mov
lea
or
shr
xchg
(bad)
cmc
sbb
lods
pop
and
das
xchg
cdq
loop
cld
fisttp
mov
push
cmps
cmp
fwait
push
clc
jl
or
jne
add
gs
sub
stos
pop
xchg
cmp
or
int
xchg
and
mov
ficom
inc
stc
add
pop
or
xchg
(bad)
or
adc
ret
mov
xor
fdiv
aad
movs
sbb
xchg
adc
cmp
jnp
(bad)
rcr
push
adc
cmc
mov
ins
sbb
retf
or
adc
push
sbb
jp
pop
in
mov
push
sti
inc
pop
je
xor
jmp
push
or
pop
mov
xchg
mov
cld
nop
dec
mov
or
mov
pop
mov
or
lahf
lock
ja
pop
jp
adc
xchg
addr16
pop
stos
test
retf
outs
add
ja
cdq
cli
call
sub
mov
cmps
adc
scas
mov
sub
pop
sub
inc
adc
dec
loop
or
sub
jp
loop
push
mov
outs
mov
add
mov
std
pop
pop
mov
jecxz
rcl
lods
in
lods
sub
jno
cmp
xchg
xchg
call
sbb
dec
or
shr
pop
mov
das
sbb
xchg
repz
(bad)
xchg
arpl
jo
ficom
mov
cwde
and
mov
add
mov
mov
popa
or
sub
gs
jg
pop
int3
les
cmps
fdivr
xchg
dec
mov
inc
pop
sbb
lods
pop
int
jae
icebp
test
pop
push
test
cmp
and
mov
ins
pop
fcmovnb
imul
sbb
test
jae
loope
outs
fmul
popf
push
stc
xor
retf
pop
jl
ja
or
fistp
repnz
std
adc
fnstenv
daa
cmp
call
inc
ja
jecxz
ret
mov
test
dec
xchg
arpl
repnz
sub
popf
gs
sbb
fistp
mov
jmp
adc
fwait
cmp
cmps
jp
pop
mov
mov
jge
xchg
push
jl
rcl
and
pop
in
mov
ins
sti
test
dec
dec
test
(bad)
in
dec
cmp
adc
and
popa
int3
or
rol
cmovg
push
lods
jb
out
std
push
jne
adc
sub
sub
fcmovu
dec
(bad)
(bad)
fcom
xchg
leave
or
pushf
jno
inc
xchg
add
push
aad
adc
cmp
cld
aam
jo
rcl
cmp
retf
inc
in
out
in
xchg
or
xchg
adc
dec
pop
imul
inc
fdiv
jmp
dec
(bad)
loope
add
inc
add
pop
mov
cmps
hlt
fdivr
jmp
loope
repnz
jg
inc
push
inc
mov
pop
cs
in
stos
mov
xchg
mov
xchg
push
dec
adc
retf
aam
retf
les
outs
loopne
aad
scas
mov
mov
push
push
rcr
test
or
and
jmp
add
ins
pop
arpl
pop
imul
and
rcl
fwait
bound
shl
test
fistp
xor
pop
push
into
inc
push
jns
fsub
sti
xchg
rcl
enter
popa
movs
pop
mov
cmp
xor
mov
jae
int
pop
push
add
inc
sbb
or
sbb
jl
je
dec
out
(bad)
jmp
xor
mov
lods
aaa
scas
icebp
dec
cmp
test
jne
das
outs
clc
loop
not
(bad)
mov
jbe
iret
cs
cmc
fistp
outs
sbb
mov
jae
not
fs
or
sub
jge
xor
mov
xchg
mov
mov
sub
inc
out
push
inc
aas
iret
mov
xor
arpl
pop
aam
mov
jbe
loope
iret
or
sub
pop
or
pop
lea
mov
mov
dec
mov
sub
push
je
jae
push
fistp
mov
repnz
test
and
inc
popa
jge
pop
jnp
cs
xor
sbb
ret
sub
repnz
push
mov
xchg
repz
xchg
push
push
jmp
addr16
xor
je
ret
stc
xchg
out
mov
or
mov
cli
(bad)
cmp
jge
lahf
xchg
fist
dec
push
(bad)
fsubr
or
inc
(bad)
stc
cmc
and
das
adc
jmp
movs
sbb
xor
and
in
pop
jbe
scas
inc
test
jae
xor
stos
mov
cli
ficomp
repnz
mov
mov
lods
rcr
rol
stos
test
mov
adc
xor
les
cs
je
xchg
dec
(bad)
in
outs
inc
aaa
xchg
adc
inc
sti
in
aaa
jmp
popf
inc
das
lds
adc
push
shr
xchg
adc
jae
sahf
inc
cmp
or
pop
clc
in
jle
jmp
jne
push
sbb
xor
push
xchg
cli
fidiv
xor
shl
imul
mov
mov
js
mov
dec
(bad)
and
leave
pop
mov
outs
sub
rol
je
pop
aam
sbb
test
add
icebp
jbe
pushf
popa
sti
xor
cmp
jno
mov
ins
popa
xchg
mov
shr
dec
into
pusha
fwait
cs
xchg
jmp
aaa
int3
mov
inc
inc
sbb
fwait
imul
sub
push
fnsave
retf
mov
dec
sbb
mov
out
int3
lea
test
leave
jg
xchg
sahf
in
mov
nop
pop
les
mov
xchg
sti
inc
push
or
fsub
(bad)
xchg
push
sub
or
adc
mov
sti
cs
inc
popf
add
jb
aam
jbe
add
pop
pop
cli
mov
cmc
sub
inc
add
sbb
adc
dec
sar
dec
jo
lea
ror
mov
cdq
inc
cwde
mov
pop
inc
fist
fadd
cmp
cmp
sbb
jb
push
or
cmc
mov
or
pop
cdq
xor
pop
adc
xlat
aas
inc
mov
cmp
fs
movs
ret
jmp
xchg
leave
cmp
jbe
xor
or
(bad)
ror
xchg
idiv
xor
mov
retf
retf
int3
xchg
inc
call
pop
push
sbb
fld
lock
enter
out
adc
sbb
jns
jg
fwait
jb
and
xchg
movs
dec
lds
popa
mov
mov
add
pop
mov
fld
movs
and
jle
cdq
mov
aas
jmp
xor
sbb
cmc
pop
sti
gs
inc
sub
xchg
es
sbb
enter
fdivr
fs
and
add
or
test
call
push
popf
ins
mov
push
add
xchg
outs
dec
nop
mov
jnp
not
int
int3
shr
mov
ins
lds
outs
jle
adc
loopne
sbb
lods
rcr
xchg
popa
outs
push
add
add
mov
pop
in
dec
out
mov
mov
dec
test
sub
and
arpl
pop
pop
pop
into
retf
dec
jo
or
(bad)
pop
add
pushf
fdiv
fwait
or
retf
ja
ja
xor
clc
jmp
clc
div
or
(bad)
test
xchg
iret
xor
ja
dec
cmp
in
mov
icebp
sbb
mov
mov
cmp
das
jle
sub
aas
xchg
in
push
xchg
cmp
test
pop
stc
in
fwait
aad
sub
mov
repz
fldenv
xchg
clc
sbb
push
gs
mov
adc
test
cmp
retf
or
cmp
mov
movs
inc
retf
call
jmp
in
movs
add
jl
(bad)
push
mov
pop
cli
sub
push
je
into
std
dec
add
pop
jmp
out
jmp
inc
cmp
sbb
mov
push
sbb
ret
inc
inc
xchg
mov
das
aaa
int3
lds
pop
add
xchg
push
dec
sbb
add
cdq
shr
adc
xor
call
ss
(bad)
push
mov
(bad)
mul
out
and
jmp
adc
xchg
(bad)
xor
ret
ss
outs
add
sbb
outs
mov
dec
sahf
call
xchg
sbb
jne
inc
pop
dec
stos
inc
pop
repnz
popf
jmp
lods
sbb
push
push
inc
xor
sahf
or
sub
rol
pop
mov
fstp
enter
clc
fbstp
xor
and
sbb
and
pop
mov
shl
(bad)
and
mov
sbb
(bad)
repnz
jbe
ret
loope
(bad)
(bad)
adc
xchg
aad
xor
sub
neg
and
pop
aad
xlat
xchg
imul
mov
mov
jo
icebp
mov
cmp
xor
outs
clc
shl
adc
aaa
sbb
xchg
pop
(bad)
cmp
xacquire
jno
push
ret
xchg
mov
cmc
cmps
inc
cmc
and
mov
hlt
or
fild
in
call
repnz
inc
scas
mov
dec
cdq
mov
dec
ins
loope
in
add
sub
push
xor
es
std
mov
add
fs
(bad)
popf
mov
jp
push
jp
js
popa
sbb
pushf
out
cmp
inc
fcmovnb
aas
dec
fcmove
iret
xor
sti
int3
outs
pop
sbb
sbb
sbb
loop
mov
pusha
and
mov
push
adc
pop
hlt
es
mov
jecxz
mov
xchg
enter
sub
inc
ror
cmp
jne
test
cld
or
in
cld
ret
mov
add
mov
adc
fs
mov
push
mov
dec
or
aaa
outs
lods
jl
test
xor
jecxz
fwait
cdq
adc
ja
sbb
aaa
test
cmp
push
sbb
vmovdqu
(bad)
loope
cdq
fmul
add
and
sbb
cmps
xchg
jg
jne
aas
push
jae
mov
ds
push
or
ins
mov
fwait
mov
out
hlt
sahf
push
sahf
stos
and
lods
and
shl
aad
test
xchg
sub
cld
cmp
pop
movs
nop
icebp
pop
mov
or
pop
pop
movs
mov
jmp
fisub
std
mov
push
add
push
ds
dec
stc
and
xor
in
aas
imul
inc
add
fs
test
js
xor
add
sbb
xchg
pop
sub
ins
mov
and
push
mov
ret
in
scas
outs
mov
and
jle
pop
int
out
pop
hlt
mov
sbb
mov
shl
aam
jns
xor
mov
dec
scas
push
add
push
mov
arpl
pop
popa
jbe
cmps
jb
cmp
jne
repz
fld
push
dec
pop
jbe
push
jnp
push
repnz
mov
add
mov
jnp
out
adc
clc
test
je
jae
and
cs
and
shr
push
push
popa
pop
push
push
cmc
pop
jnp
pop
fiadd
test
jg
clc
(bad)
cmps
sbb
lods
pop
sub
hlt
pop
psllq
mov
cmp
jle
mov
icebp
cmp
or
loop
ret
frstor
test
lahf
mov
shl
pop
aad
aad
popa
pop
cmp
xor
sub
mov
mov
adc
fwait
jbe
jge
push
leave
mov
push
imul
aad
cwde
sbb
and
loope
fdivp
add
cmp
jo
mov
jns
les
xor
cli
xchg
xor
dec
stc
sub
cli
ja
push
sbb
mov
mov
aaa
and
call
ror
push
add
xchg
jp
daa
outs
cld
(bad)
inc
iret
jmp
scas
fimul
mov
jge
pop
sbb
jno
push
jg
mov
push
leave
xlat
mov
xor
int3
stc
xchg
ins
inc
jo
test
rcr
jl
loope
stos
mov
std
aaa
rcl
push
pop
push
mov
addr16
fsub
in
sbb
out
xchg
loop
fcomi
icebp
ret
fimul
iret
cmps
and
iret
and
mov
xchg
clc
sbb
out
mov
inc
aad
dec
push
int
daa
adc
(bad)
cli
ret
test
popf
fmul
sub
jmp
arpl
jecxz
push
jl
push
cs
js
retf
or
cmp
xor
call
ss
shr
adc
inc
(bad)
mov
fs
(bad)
int3
in
sub
push
mov
and
icebp
lea
xor
and
bound
pop
lods
jge
test
pop
cmp
pop
inc
std
xor
and
push
jge
(bad)
jmp
xchg
pusha
dec
pop
push
fsubr
sub
pusha
lea
sbb
lea
mov
test
push
xchg
jae
cwde
retf
not
fstp
cmps
jl
add
rol
fxch
enter
xchg
pop
scas
cli
ficom
test
call
fs
test
push
dec
or
or
jge
sub
sub
mov
mov
dec
and
mov
or
xor
mov
ins
dec
pushf
loopne
adc
cmp
int3
aaa
xchg
fimul
sahf
js
popf
out
push
popa
dec
mov
xchg
xchg
js
(bad)
sub
inc
adc
mov
add
fucomi
imul
pop
jo
ins
clc
jmp
xchg
aad
adc
scas
retf
xor
push
out
push
sub
mov
xchg
pop
sbb
in
mov
mov
and
mov
sub
jg
data16
pop
enter
lahf
push
fmulp
arpl
out
or
or
cmp
xchg
mov
scas
in
and
out
es
fmul
xor
adc
sbb
xor
aas
pop
imul
push
int
imul
mov
call
mov
add
add
mov
int
jmp
push
mov
pop
jbe
leave
out
popf
in
jnp
das
adc
fwait
pushf
add
sub
ins
push
in
jp
ins
mov
mov
rol
push
inc
ss
shl
idiv
mul
rcr
shl
push
repz
in
push
sbb
push
dec
mov
jge
mov
mov
lods
inc
push
jb
bound
lahf
ret
add
mov
cmp
lock
rcl
mov
aas
enter
gs
div
adc
dec
mul
inc
push
scas
lods
out
cli
jns
mov
pop
pushf
test
repz
daa
xchg
inc
leave
lea
adc
sbb
ins
cmp
test
imul
mov
add
add
sub
ins
push
nop
xchg
retf
aaa
mov
push
dec
fld
iret
pusha
dec
fistp
cld
iret
js
outs
xchg
cmp
sbb
mov
sub
je
sbb
mov
daa
popa
and
sbb
xor
mov
sti
into
xor
cmp
les
push
xor
pop
(bad)
int3
scas
mov
iret
pop
push
mov
(bad)
data16
out
icebp
xchg
xchg
mov
or
xchg
cld
pusha
pop
sub
sbb
or
cmps
pop
sbb
pop
mov
inc
js
sti
xor
mov
test
fisub
add
adc
sbb
loop
pushf
jmp
inc
and
call
adc
mov
ds
xor
xchg
mov
mov
jno
(bad)
js
shr
xchg
data16
cld
clc
jmp
outs
icebp
clc
icebp
pop
test
xchg
aam
push
cli
mov
(bad)
cmps
jo
rcr
mov
push
add
dec
out
(bad)
stos
dec
mov
in
xlat
nop
cmc
addr16
push
ret
push
test
inc
mov
je
pop
fild
inc
cmps
mov
dec
or
xor
nop
push
jns
das
adc
out
and
sar
jno
xchg
push
mov
lds
add
rcl
in
dec
inc
sub
xchg
mov
push
js
push
jnp
xchg
sub
(bad)
adc
lea
(bad)
stos
adc
xchg
clc
pusha
add
pushf
dec
ret
fs
mov
or
loope
pusha
xchg
hlt
dec
pop
jns
inc
pop
add
imul
in
lds
(bad)
sbb
in
add
cs
ret
mov
dec
fcmovnbe
mov
jg
ss
adc
(bad)
mov
call
sbb
mov
lock
cmc
mov
sub
inc
pop
adc
xor
xor
clc
mov
(bad)
adc
stos
repz
jbe
sub
and
data16
push
xchg
or
add
sub
cs
lods
push
ins
push
std
clc
ds
retf
push
xchg
lods
(bad)
jmp
add
xor
pop
gs
je
and
movs
inc
adc
xchg
cmp
inc
or
cmp
leave
(bad)
jne
cs
push
inc
sbb
repz
addr16
sub
(bad)
dec
and
cmp
mov
jecxz
cli
aam
cmps
bound
mov
sub
shl
iret
mov
and
fcmovnbe
push
out
add
out
adc
cmps
add
test
adc
xlat
push
jno
pop
inc
pop
cdq
nop
rcr
mov
fidivr
add
popf
imul
test
dec
dec
pushf
stos
in
cmp
in
sub
mov
mov
jecxz
inc
xchg
retf
imul
xor
inc
sbb
mov
sub
cmp
sahf
je
push
cmps
stc
mov
repnz
push
inc
push
push
ins
dec
fimul
pop
inc
jae
add
out
(bad)
pop
and
mov
and
les
cs
ins
ret
leave
sbb
pop
loope
jno
loope
mov
adc
pushf
or
pop
jge
test
retf
jecxz
cmp
cmps
retf
jns
jle
cmp
xor
dec
xor
bound
add
shl
adc
test
(bad)
adc
add
pop
sbb
sub
cmp
test
dec
mov
mov
jbe
ja
ret
rol
test
fadd
jle
jne
mov
pop
nop
xchg
call
and
jbe
pushf
adc
lock
fcom
ins
fcomi
adc
mov
sub
imul
mov
pop
sub
inc
push
fwait
outs
or
adc
xor
shl
push
out
ins
cmp
xchg
dec
aaa
xchg
sub
jmp
fld
jne
sbb
out
es
sar
cmp
movs
mov
push
mov
jne
or
shl
rcr
into
push
fcomp
movzx
nop
xlat
icebp
icebp
std
xchg
push
ret
inc
test
push
adc
lahf
push
lahf
loopne
outs
mov
sub
mov
lahf
cmp
retf
dec
rcr
daa
lahf
icebp
add
std
xchg
daa
sbb
fldcw
bound
mov
push
loopne
(bad)
dec
popa
xor
inc
in
mov
pop
xor
lods
enter
aam
sub
jg
mov
push
xchg
cmc
jmp
jge
mov
dec
int3
push
in
rcr
dec
add
cmc
pop
ins
gs
enter
cld
jae
mov
cmp
push
fucomip
xchg
xchg
les
idiv
jb
push
clc
loop
cmp
jno
stos
nop
adc
stc
dec
jno
stos
xchg
popa
icebp
or
fidivr
test
push
jg
xchg
rcl
xor
(bad)
fisubr
ds
aas
rol
add
dec
ds
fst
mov
add
xor
mov
stc
ja
mov
mov
out
adc
test
lods
loope
cmp
aad
(bad)
or
push
inc
cmps
or
test
std
mov
push
push
push
outs
call
inc
or
xchg
mov
test
and
jb
or
aam
lods
cmp
add
idiv
pop
les
das
loop
scas
je
pop
retf
daa
cli
pusha
movs
jb
jns
in
call
and
js
jmp
in
fwait
(bad)
fdiv
jae
(bad)
loop
nop
ja
packsswb
hlt
test
jnp
and
pop
retf
xchg
mov
stos
jg
popa
xchg
iret
les
popa
add
js
mov
nop
or
mov
xor
jle
xchg
adc
inc
sbb
push
shr
dec
pop
fimul
adc
popf
jb
pop
test
xlat
pop
arpl
lds
and
fcomp
or
inc
mov
sbb
xor
repnz
add
inc
add
lock
das
inc
ja
stc
inc
inc
ret
scas
or
jnp
cmp
xchg
push
enter
jnp
sbb
mov
push
movs
xchg
ins
ror
jb
xchg
xchg
pop
out
sub
stos
imul
dec
or
test
lahf
lods
(bad)
scas
lods
and
dec
call
inc
bound
jns
test
int
jmp
dec
dec
mov
push
popf
movs
repz
jmp
aas
jle
ja
test
and
ja
clc
pop
pop
jno
cld
stos
adc
add
jo
scas
mov
inc
mov
ret
fistp
addr16
das
lods
sbb
retf
xchg
aas
add
pusha
mov
jbe
(bad)
mov
push
stos
add
push
out
pop
inc
jns
rcl
out
fucomp
or
ss
adc
mov
jo
fidivr
ds
ins
scas
rcr
dec
xchg
arpl
dec
mov
sbb
lods
fwait
and
outs
jg
adc
add
push
push
pop
std
xchg
jle
scas
sub
fidiv
mov
pop
dec
ss
les
jne
push
push
sub
xchg
pop
test
shr
pop
call
mov
inc
xchg
test
imul
in
pop
xchg
jns
scas
(bad)
sub
iret
aad
pop
cld
lahf
adc
in
(bad)
jne
retf
mov
ins
or
call
xor
repz
add
mov
(bad)
add
dec
les
lock
jp
sti
std
cmps
adc
pushf
sbb
(bad)
cmps
es
cmp
or
cmps
pop
push
add
inc
hlt
push
cwde
aam
inc
dec
neg
cwde
add
xor
mov
ins
push
call
fistp
mov
sar
jns
bound
retf
inc
jecxz
sbb
add
add
aaa
inc
arpl
cld
popa
fsubr
pop
call
xchg
cmc
and
cmps
pop
push
ret
or
cmc
inc
into
scas
sbb
call
push
outs
fs
push
sbb
mov
aam
pop
push
sbb
jmp
in
pop
push
sar
xchg
mov
xchg
inc
jne
fwait
cmc
in
push
fbstp
mov
lock
int
enter
test
iret
cmp
add
scas
ins
pop
or
add
stc
fld
sbb
push
dec
(bad)
fisub
ret
mov
pop
ja
fs
xchg
(bad)
js
adc
cld
and
sti
inc
gs
jno
mov
call
rcr
push
popa
scas
xchg
out
cs
or
xor
ja
retf
cmps
push
arpl
mov
dec
pop
leave
sub
and
inc
pop
mov
loope
mov
and
xor
xlat
neg
cmp
daa
lock
test
aaa
out
test
xor
pop
or
xchg
lods
pop
lahf
cmp
outs
call
push
inc
bound
lea
pop
jae
je
iret
outs
aad
test
popf
adc
vpaddsw
inc
push
adc
jne
cmp
inc
dec
scas
xor
push
jecxz
cmp
ja
nop
push
mov
jl
or
dec
push
imul
es
js
mov
jmp
mov
adc
jne
push
jne
call
es
mov
sbb
sbb
pop
dec
xor
retf
retf
inc
out
pop
cmc
into
int3
je
sbb
mov
pop
ins
loopne
push
adc
dec
or
ss
cwde
mov
test
inc
sub
xchg
jg
mov
fstp
pop
mov
int
ins
cmps
sub
mov
fwait
int
cmp
adc
movs
adc
loope
and
daa
mov
xchg
mov
sub
pop
shl
stos
psraw
sub
js
leave
(bad)
outs
ret
lock
jle
sbb
mov
movs
leave
stc
mov
inc
cmc
fwait
pushf
push
arpl
mov
mov
xchg
and
cwde
dec
mov
jno
loopne
lahf
out
inc
loope
mov
lods
test
push
push
jno
repz
sbb
or
adc
xchg
rcr
or
rep
pop
out
bound
enter
mov
pop
enter
int
pop
inc
adc
fnstenv
mov
outs
mov
call
arpl
jmp
sub
ds
in
retf
inc
je
xchg
in
push
rol
add
push
fs
sbb
(bad)
fstp
loope
inc
mov
add
pop
pop
cmp
adc
xchg
out
lock
pop
and
pop
xor
stos
xor
add
inc
in
jg
adc
add
or
ret
inc
sbb
sbb
cmp
pop
rcr
or
adc
or
cmp
ror
mov
pop
popf
or
movs
test
rol
xor
sub
or
or
fist
js
movs
(bad)
out
add
movs
mov
test
(bad)
jb
loopne
sub
test
mov
lods
scas
fs
and
cmp
stos
mov
fsub
push
adc
cvtps2pd
mov
and
sbb
cmp
outs
out
in
dec
and
shl
std
loopne
ja
js
inc
aam
mov
xor
popa
mov
repz
daa
(bad)
movs
sub
sti
cmps
add
(bad)
repnz
mov
rcr
pop
and
jno
xchg
hlt
fistp
sti
je
ins
sar
pop
lahf
add
or
rcr
push
dec
div
in
ud0
sbb
mov
cdq
inc
loop
adc
pusha
push
xchg
inc
and
cmp
xor
xchg
cmp
mov
mov
jle
popf
xchg
jb
arpl
add
push
out
lods
icebp
add
dec
add
(bad)
call
and
cmps
mov
mov
test
std
sar
and
xchg
sbb
inc
add
test
idiv
inc
rcl
retf
xchg
cmp
push
out
dec
mov
jne
mov
mov
es
jmp
outs
xchg
pop
popa
daa
jo
retf
fwait
pop
dec
int3
fcom
aas
mov
aas
push
sbb
pop
jmp
pop
call
sub
push
xchg
mov
xchg
ret
add
push
int
sub
lds
mov
je
in
add
fisttp
not
aas
mov
cmp
mov
add
mov
jecxz
popa
inc
jo
je
or
add
loop
xchg
rcl
in
dec
mov
jg
xlat
neg
or
jge
nop
sub
add
sub
imul
fstp
int
or
mov
pop
cmp
sbb
push
js
xchg
pextrw
mov
nop
stc
mov
das
xor
cmp
(bad)
(bad)
xchg
push
hlt
fimul
ret
cmp
jnp
enter
inc
mov
arpl
fistp
ja
dec
xchg
frstor
rcr
shr
test
retf
xor
jns
scas
outs
push
cmp
js
inc
push
push
jbe
repz
adc
lock
mov
sahf
in
cmp
in
shr
lds
dec
das
das
in
js
jmp
cmp
into
sbb
or
add
and
out
dec
jg
out
xchg
nop
punpckhbw
mov
xchg
add
les
js
or
jp
out
(bad)
mov
jmp
(bad)
out
sbb
std
pop
cmc
or
dec
or
into
jae
adc
push
lods
scas
xor
add
mov
jp
push
enter
mov
pop
js
and
and
cmp
into
adc
call
mov
xchg
push
dec
fist
leave
jecxz
fst
push
mov
ret
adc
fdivr
fcom
call
add
inc
bound
dec
pop
and
xlat
es
ja
pop
mov
add
lods
ror
test
hlt
add
jns
sbb
inc
or
push
xor
mov
mov
js
vphaddbd
stc
sbb
cmp
out
out
jno
rol
scas
jae
adc
mul
arpl
and
or
cs
pushf
sub
mov
cdq
mov
xchg
mov
sbb
call
in
aam
jb
pop
je
jne
pop
dec
cmp
push
add
pushf
inc
adc
jp
nop
icebp
jl
lods
mov
loopne
sahf
xchg
jle
call
sbb
push
and
push
inc
jne
jns
push
ret
pop
iret
(bad)
(bad)
adc
mov
into
aam
mov
jno
adc
icebp
and
ficomp
xlat
dec
sti
lods
push
fist
test
pop
scas
or
repz
sbb
push
jmp
jae
pop
sub
push
(bad)
imul
(bad)
pop
ret
in
dec
lods
mov
jb
add
adc
mov
popf
or
call
ds
dec
push
stc
cmp
shl
cmp
push
mov
add
in
pop
addr16
std
repnz
mov
pop
loopne
ins
std
pop
mul
lahf
or
jbe
aas
(bad)
(bad)
rol
fisttp
leave
cmp
inc
lds
inc
xchg
xor
xchg
test
ins
outs
inc
pop
iret
xchg
sub
jg
xchg
std
loope
and
retf
int
jo
mov
push
mov
popa
aas
mov
push
adc
shl
push
add
mov
pop
pop
push
pop
and
xchg
ja
imul
bound
(bad)
stc
mov
dec
int
popa
jns
jge
scas
mov
les
movs
dec
fwait
bound
bound
xchg
loopne
loopne
ds
sub
in
movs
in
mov
mov
cs
mov
leave
dec
call
inc
sbb
ins
adc
inc
hlt
and
jnp
adc
jl
cld
sub
and
fstp
dec
mov
out
cld
dec
dec
fdiv
fmul
and
cmp
xor
je
lods
mov
pop
xchg
lods
idiv
xlat
cdq
cld
in
mov
fsubr
ins
xchg
inc
ins
ret
aas
pop
inc
sub
pop
cmp
lahf
xchg
adc
test
je
clc
repnz
cmp
sub
push
ins
imul
adc
push
inc
sub
push
std
inc
jno
fsubr
into
mov
fnstenv
addr16
js
(bad)
pop
xor
cmp
jo
data16
aaa
or
or
jo
clc
jmp
jb
lahf
in
rcr
mov
sbb
cdq
leavew
les
pop
xor
cmp
test
ins
pop
call
mov
or
outs
mov
cmp
in
and
inc
cmc
pop
ror
imul
jle
test
repz
out
les
call
popa
mov
cmp
out
cmps
jno
fist
in
daa
xchg
mov
xchg
pop
jbe
push
add
and
ja
movs
ret
sub
dec
stos
mov
mov
sub
jge
mov
dec
mov
icebp
fstp
sub
and
imul
and
add
mov
adc
test
dec
mov
popf
fs
add
and
inc
sbb
dec
dec
jle
dec
mov
push
cwde
daa
jns
ss
jno
in
je
lods
lods
retf
ss
fsubrp
jl
in
jne
bound
call
dec
sbb
adc
push
inc
xor
inc
sti
xchg
xor
adc
rcl
into
inc
jl
push
and
aaa
popa
sti
retf
mov
mov
fimul
pusha
inc
mov
inc
or
or
xor
jo
inc
popa
or
(bad)
xor
mov
xchg
outs
jecxz
dec
sbb
xchg
outs
adc
ret
daa
int3
and
jae
call
je
add
cmp
dec
(bad)
movs
(bad)
mov
sahf
sahf
xor
push
adc
loope
or
jle
xchg
sti
icebp
sub
pushf
pop
fcmove
and
repz
inc
adc
add
in
and
and
adc
xor
dec
sub
sub
inc
addr16
mov
mov
xchg
loop
and
cmp
test
mov
adc
ins
dec
jne
iret
jmp
icebp
inc
out
in
sti
scas
in
inc
ds
inc
inc
mov
cmp
inc
imul
push
sub
push
repz
aas
and
dec
push
daa
cmps
test
fild
push
dec
and
fdivr
dec
lea
mov
sub
pop
mov
scas
test
imul
mov
sub
leave
sub
dec
mov
sbb
sbb
mov
sti
das
or
sar
cdq
mov
cvtpi2ps
sub
push
loope
(bad)
sbb
cmp
or
lock
cmps
mov
pop
cwde
and
push
sub
hlt
cmc
dec
inc
arpl
les
adc
jmp
xor
inc
jmp
xchg
fnstenv
ja
sbb
pop
dec
xchg
mov
aad
jne
xchg
jl
sti
xchg
das
jp
loope
out
jnp
and
into
lods
push
ins
ins
scas
jns
inc
push
xlat
jno
jb
mul
imul
sub
mov
xlat
inc
mov
hlt
cmp
sahf
ret
pop
add
or
ja
jp
cdq
gs
jb
cmp
clc
ret
jmp
mov
push
pop
pusha
or
sbb
cmp
mov
fdiv
xor
pop
ins
test
mov
dec
ror
leave
in
enter
push
lock
pop
add
mov
jmp
push
enter
dec
mov
sbb
int3
or
dec
shl
scas
iret
rcr
int3
pusha
fsub
jb
jbe
xor
jecxz
inc
out
imul
or
push
iret
jmp
ins
xchg
or
mov
mov
xlat
clc
adc
in
sub
enter
ds
je
xchg
or
mov
movs
(bad)
sbb
push
(bad)
xchg
jae
add
sar
in
push
mov
cmp
ins
loope
fwait
psraw
dec
enter
sub
xchg
mov
pop
mov
push
mov
pusha
enter
mov
js
lds
sbb
xor
loopne
std
mov
push
dec
adc
push
lahf
outs
mov
add
in
int
sub
cmps
in
repz
xchg
pop
out
(bad)
gs
or
cwde
sar
dec
mov
shl
push
or
sahf
(bad)
or
mov
out
sti
outs
fcmovnbe
(bad)
sbb
add
dec
cld
ins
push
retf
jmp
popf
pop
in
mov
push
xor
nop
(bad)
(bad)
mov
and
inc
fs
out
loope
cli
or
push
out
dec
icebp
out
bound
cmp
test
cmp
cmp
pop
ds
mov
or
(bad)
mov
mov
in
cmp
or
pop
addr16
xor
inc
ins
or
call
(bad)
stc
movs
mov
stos
mov
arpl
push
pop
mov
sahf
xor
xlat
inc
dec
inc
jno
sbb
and
scas
pop
pusha
rcr
or
sub
lock
xchg
push
mov
adc
mov
test
mov
jp
xchg
jl
arpl
test
push
jmp
add
xchg
dec
aas
push
mov
jbe
in
jmp
movs
out
xchg
out
xor
popa
jecxz
lea
icebp
shr
sahf
cdq
cli
aam
inc
jmp
fs
pop
inc
mov
scas
push
sar
pop
mov
pop
or
fstp
sub
cs
push
xchg
cs
jae
fisttp
js
out
in
mov
movs
ds
clc
lds
mov
pop
inc
in
imul
push
mov
mov
arpl
xor
jo
repz
daa
test
or
int3
pop
push
lea
out
xchg
scas
sbb
cmp
daa
cli
jbe
xchg
pop
pusha
in
or
xor
pop
sub
(bad)
sahf
pop
cwde
and
shr
repz
jb
(bad)
push
aad
addr16
xchg
push
int
cdq
mov
sbb
dec
mov
gs
leave
test
fidiv
dec
dec
(bad)
pushf
clc
int3
(bad)
mov
cdq
cmps
mov
bound
pop
sub
push
ins
jmp
test
sub
outs
fidivr
dec
jp
movs
fprem1
push
(bad)
adc
and
bound
test
dec
push
rol
jne
jno
cmp
aad
fnstenv
loop
dec
mov
fidiv
add
mov
sbb
fiadd
add
cmp
mov
dec
lock
call
xor
xchg
push
sbb
int3
mov
jo
pop
imul
repnz
cwde
push
adc
lock
xchg
add
aas
retf
cdq
cmp
enter
sbb
ins
int
stos
popf
jmp
jbe
rcr
jg
pop
ret
sar
outs
mov
xchg
sub
jbe
pushw
or
or
mov
pop
pop
sahf
or
(bad)
jnp
jns
leave
enter
ins
rcr
fsub
fidivr
or
movs
xchg
cmp
fadd
xchg
dec
mov
xbegin
fdiv
out
mov
sbb
fst
jno
repnz
and
daa
int3
and
and
add
cmps
mov
mov
outs
lock
sbb
mov
idiv
push
cmp
xchg
adc
jno
sahf
mov
mov
sbb
pushf
ret
mov
mov
or
mov
out
or
push
test
add
sbb
ror
aad
adc
leave
(bad)
jmp
and
arpl
ds
jmp
pop
jae
xor
aad
cmp
add
jbe
std
xchg
or
imul
xchg
aad
das
ror
xchg
sub
inc
icebp
aaa
mov
and
popf
mov
inc
loop
iret
loope
lods
mov
arpl
jg
sbb
add
popf
out
pop
jne
ins
xor
hlt
out
mov
nop
scas
retf
sbb
sbb
xor
mov
xor
xchg
fwait
mov
inc
add
inc
das
add
add
frstor
enter
bound
cs
pop
sti
and
out
shr
int3
sub
cmp
jg
sar
jo
xor
xor
adc
scas
(bad)
and
push
xor
sub
mov
sbb
push
or
aad
and
cmp
mov
outs
std
add
cmp
push
dec
inc
movs
jmp
jne
pop
test
or
call
inc
inc
movs
jo
fwait
dec
or
and
push
add
jno
fst
popa
cmc
xchg
(bad)
jno
and
popf
stos
mov
mov
mov
and
test
adc
icebp
xchg
out
outs
mov
shr
inc
pop
adc
mov
sbb
mov
push
sbb
out
and
fs
inc
call
cmp
shl
arpl
sub
frstor
inc
xor
and
fwait
adc
daa
xchg
sbb
xor
pop
cmps
pop
add
jg
nop
adc
dec
inc
fmul
jmp
ins
in
sbb
xchg
fsub
shl
lahf
adc
rcr
sub
mov
aaa
test
cmp
push
test
cmp
loope
mov
icebp
fstp
bound
ins
jbe
xchg
sahf
push
mov
mov
mov
fstp
cmp
aam
pop
sbb
repz
sub
ret
(bad)
scas
adc
sub
add
fdiv
dec
mov
xchg
rcr
inc
mov
sbb
adc
sbb
(bad)
adc
and
mov
or
push
(bad)
mov
push
or
in
bound
push
bound
rol
ds
dec
mov
inc
add
pop
repz
ficomp
jo
(bad)
adc
sbb
xchg
neg
sti
stos
aam
adc
lods
loope
int
or
cli
or
push
repz
push
or
mov
push
sahf
sub
xchg
jmp
je
out
rol
sbb
std
pusha
xor
or
test
leave
pop
mov
pop
add
(bad)
cmc
inc
fmul
idiv
xor
rol
mov
jo
jns
inc
xchg
gs
and
rcr
out
inc
ja
pop
sbb
jge
mov
mov
or
data16
nop
inc
lods
pop
(bad)
dec
inc
push
scas
and
(bad)
jmp
adc
or
mov
iret
mov
or
push
inc
scas
mov
outs
lods
data16
xchg
jnp
scas
jle
lahf
pop
mov
dec
mov
sbb
fisubr
xchg
repz
pop
mov
clc
sub
(bad)
xchg
sar
test
xchg
shl
sbb
pop
mov
sar
jo
bound
not
dec
cmp
sti
pusha
cmc
mov
or
mov
retf
push
inc
jp
jp
out
shl
out
outs
jbe
xchg
mov
in
outs
dec
out
imul
dec
push
xor
ficomp
into
add
xor
mov
ds
shl
mov
(bad)
jb
sub
adc
mov
adc
neg
adc
sti
ins
mov
retf
pop
or
mov
xor
adc
xor
dec
jge
ffreep
hlt
movs
sti
mov
sbb
jg
in
dec
xor
cmps
sti
dec
in
mov
jecxz
fwait
push
(bad)
mov
sbb
xor
xchg
jne
adc
bound
add
(bad)
icebp
out
aam
fnsave
pop
aam
xor
sub
sbb
and
scas
scas
add
outs
stc
and
xchg
ss
cmc
movs
jne
test
(bad)
jecxz
sbb
jb
jle
call
push
push
cli
push
sbb
cmp
or
jne
push
mov
scas
les
dec
xchg
sbb
das
pop
or
push
ds
leave
or
xor
sub
pop
(bad)
dec
mov
iret
inc
jmp
jmp
sub
dec
add
test
push
ins
call
push
push
xchg
mov
cli
out
pop
and
loope
test
fsub
push
mov
pop
cmc
sbb
and
leave
jge
xchg
inc
xor
das
jecxz
inc
ret
mov
test
test
sub
mov
outs
jae
mov
xor
ror
out
(bad)
sbb
movs
cmc
mov
movs
cmp
dec
mov
dec
adc
xor
mov
out
jmp
cmps
mov
sti
leave
add
pop
rcr
xchg
inc
sub
push
jmp
es
pop
and
clc
sub
cmc
fsub
xchg
xchg
in
mov
pop
add
shr
push
xchg
clc
and
scas
sub
repnz
int
add
fld
push
ins
lahf
fnsave
jo
mov
fldenv
mov
jmp
nop
xchg
les
push
mov
pop
mov
(bad)
fist
jle
mov
mov
ja
pop
jmp
fbld
push
arpl
sbb
sbb
lock
in
adc
add
test
push
cmps
pop
lock
sar
in
xor
inc
lods
or
push
(bad)
fidiv
into
ret
test
mov
not
hlt
sub
imul
mov
(bad)
jb
les
pop
ficom
or
and
mov
xor
sbb
xchg
xor
aaa
in
call
out
pop
cwde
fnstenv
scas
pop
push
jmp
inc
mov
nop
aad
cs
sahf
push
(bad)
neg
jnp
pusha
mov
or
scas
xchg
mov
cmc
adc
sub
outs
div
sub
cs
mov
and
cld
or
mov
xchg
movups
push
into
dec
retf
test
inc
and
repnz
jmp
lea
push
sbb
icebp
sbb
ret
js
add
cmc
mov
dec
inc
cmp
push
pop
ret
pop
lods
ss
or
pop
or
push
adc
inc
(bad)
outs
push
rcl
adc
jmp
mov
gs
fsub
push
jnp
loop
xor
adc
retf
div
xchg
jae
call
sti
xlat
sbb
sahf
and
dec
jnp
(bad)
lods
inc
je
mov
(bad)
mov
ss
shl
xchg
pushf
mov
(bad)
push
int3
jg
out
mov
mov
pop
inc
lea
inc
or
xchg
inc
sub
or
aam
jmp
sub
or
imul
jo
add
xlat
aad
inc
lods
or
dec
xchg
out
and
stos
or
ror
cmp
jb
and
cmp
lahf
retf
dec
add
cmp
jb
(bad)
cld
test
lods
ins
fld
inc
movs
pop
lock
xor
pusha
xchg
mov
sub
push
bound
movs
rol
ins
out
or
dec
es
cmp
jmp
lds
data16
pop
mov
mov
rcl
call
mov
push
cmps
xchg
(bad)
jecxz
cmp
loopne
add
scas
xchg
xor
sub
pop
sahf
xor
clc
jns
sub
xor
in
push
das
xor
dec
xor
ja
mov
xchg
sbb
or
xchg
sahf
jne
scas
mov
std
mov
pop
mov
xor
sbb
cmp
and
hlt
xchg
lds
adc
mov
call
imul
sbb
jle
cmp
push
shl
repnz
sbb
mov
xchg
test
dec
pop
das
xchg
dec
push
aad
xchg
and
popa
cli
pop
repnz
retf
aam
xchg
outs
stc
jl
pop
xchg
cs
es
pop
sti
jmp
out
mov
adc
outs
stos
inc
xor
(bad)
fucomi
pop
retf
test
in
xor
adc
mov
dec
cli
inc
jno
xchg
push
(bad)
aam
int3
ja
pop
aad
add
adc
ror
mov
lods
jns
fcom
dec
dec
mov
nop
loop
rol
cld
xor
xor
imul
clc
add
or
jbe
faddp
xor
loopne
cmp
xchg
cld
into
mov
sbb
xchg
in
sbb
arpl
int
jecxz
fistp
div
ficom
rcr
push
icebp
push
lahf
ficomp
data16
dec
mov
sub
ret
push
push
jmp
or
ins
iret
or
xchg
cmp
(bad)
sbb
fwait
cmp
mov
leave
fninit
pop
movs
mov
dec
push
idiv
sti
dec
mov
lods
ret
iret
xor
shr
mov
mov
imul
ret
mov
push
jecxz
div
pop
push
retf
inc
ins
push
jp
or
out
out
clc
dec
mov
aad
inc
mov
jg
rol
lahf
loopne
ror
test
fiadd
sub
ins
iret
retf
fdivr
adc
out
popf
cwde
mov
rcr
mov
jnp
clc
and
(bad)
mov
outs
aad
and
add
inc
or
rol
add
stos
cwde
ins
clc
push
into
xchg
not
jge
retf
mov
dec
arpl
mov
in
stc
cdq
add
xchg
mov
lods
sbb
and
cmp
pop
cs
fcom
ret
mov
jl
in
int3
mov
mov
ret
cmps
je
jns
or
cmp
dec
repz
nop
data16
jecxz
push
push
jo
lea
mov
sub
cmovns
(bad)
out
call
nop
and
cs
xlat
pop
xchg
cmp
cli
and
dec
stos
sub
sub
ins
adc
mov
pushf
adc
fwait
adc
enter
mov
mov
mov
inc
mov
mov
push
mov
inc
into
mov
aas
adc
sub
and
aad
jecxz
sar
pop
inc
cmp
dec
sbb
(bad)
push
cmps
jge
cld
dec
jmp
(bad)
loop
inc
loop
nop
lock
in
js
cli
mov
mov
mov
cmp
xchg
xchg
cmp
cmp
pop
imul
stos
int
xor
mov
inc
sub
and
mov
and
inc
and
fisub
mov
stc
and
xor
fist
lock
outs
or
xchg
add
ss
and
jo
jbe
and
inc
shl
icebp
lock
in
in
push
enter
jne
fsubr
inc
clc
jge
mov
loopne
lods
in
iret
mov
sub
sub
(bad)
imul
inc
xchg
pop
pop
pop
or
mov
add
fnstenv
scas
push
movs
sbb
sub
cmp
shr
call
cmp
xchg
push
out
fdivr
sub
ins
mov
adc
cmp
aam
pop
adc
cmps
inc
enter
fwait
add
dec
(bad)
mov
jecxz
cmp
cld
mov
or
jl
xchg
js
jnp
push
aad
call
mov
(bad)
xor
cmc
jnp
sbb
and
mov
popa
mov
sbb
xchg
dec
arpl
push
mov
shl
and
push
sbb
or
js
mov
nop
push
mov
in
add
and
sub
fistp
jp
xchg
jo
jecxz
and
xor
push
or
cmp
add
xor
pop
xchg
lods
push
mov
pushf
ror
fcomp
add
int3
addr16
or
mov
out
sub
cmc
ds
inc
sub
push
add
jecxz
adc
mov
inc
test
mov
jl
xlat
ins
xor
push
out
sub
fucom
inc
adc
fadd
(bad)
push
or
and
test
je
cmp
sub
mov
je
dec
retf
fild
(bad)
loop
popf
fild
jecxz
sub
adc
inc
pushf
xchg
add
int
jecxz
sbb
xchg
scas
popa
(bad)
stos
test
cmp
adc
pop
push
mov
dec
dec
mov
or
iret
add
loopne
fistp
jbe
fidivr
adc
daa
sbb
xchg
mov
push
loopne
inc
mov
mov
xor
movs
dec
pop
out
mov
repnz
add
stos
xchg
lds
movs
lahf
ds
xchg
jbe
in
cmp
xchg
das
ins
or
xor
bound
hlt
rcr
jg
mov
jg
ret
push
sar
hlt
ins
mov
test
adc
push
out
mov
loope
dec
push
mov
pop
mov
pop
ret
cmp
lods
lock
fnstenv
and
movs
stc
(bad)
pop
mov
xor
pop
aaa
jmp
call
mov
mov
popa
js
(bad)
repnz
std
inc
cs
test
movs
pop
into
sub
push
push
cmp
fidivr
and
push
cmp
mov
stc
and
xchg
add
or
sahf
push
outs
mov
ret
inc
xchg
inc
sub
bound
aam
outs
xchg
xor
dec
(bad)
sti
push
sbb
or
cmps
mov
call
lahf
stos
cdq
ret
loope
sar
xchg
cdq
push
mov
int
movs
xchg
pop
sbb
loop
jne
cmp
cmp
pop
and
popa
int
sub
(bad)
jmp
fsubr
adc
ins
add
add
mov
mov
fdiv
mov
adc
jmp
rcl
rcr
add
in
jge
push
mov
loope
iret
mov
cli
mov
sub
test
jmp
and
cmp
jb
mov
sbb
jl
pop
xchg
ret
mov
mov
movs
push
mov
daa
vmread
mov
fistp
sub
fcomp
fcom
push
in
ins
ror
mov
xor
inc
seto
pop
mov
inc
pop
(bad)
out
cmp
cmp
in
pop
lods
mov
jnp
add
cmp
loope
push
ja
(bad)
cmp
ret
sub
movs
int
ds
inc
lock
movs
shl
std
add
ja
test
inc
in
and
mov
mov
sbb
daa
jle
mov
and
mov
shl
push
and
aam
mov
addr16
inc
es
ficomp
jne
jl
pop
xchg
and
mov
push
sti
int3
stos
dec
fimul
xchg
inc
and
pop
and
xchg
loop
mov
les
inc
frstor
ffree
iret
leave
cmps
jnp
in
sti
lods
xchg
sub
jb
outs
idiv
mul
imul
or
jb
push
lods
cmp
jns
rdtsc
repnz
push
jns
out
je
mov
sub
or
xchg
bound
xchg
pop
jmp
fnsave
enter
dec
xlat
ds
and
push
scas
cmovge
dec
mov
or
idiv
and
push
les
sbb
scas
xor
cmp
push
(bad)
dec
jne
imul
and
or
nop
jne
or
clc
mov
mov
sbb
jne
popa
jae
mov
pusha
pop
and
ins
mov
inc
aas
imul
lods
fisttp
xor
shr
lods
add
mov
addr16
mov
and
inc
sbb
mov
mov
xchg
popa
shr
mov
cli
xchg
into
jae
and
mov
les
inc
mov
xor
(bad)
leave
cld
(bad)
cmp
pop
mov
mov
sub
lock
leave
jns
push
mov
pop
mov
sbb
or
jle
jnp
(bad)
xor
xchg
mov
mov
rcl
xor
dec
push
cmp
cmp
xlat
test
dec
mov
rcr
je
(bad)
aaa
dec
stos
mov
movs
mov
push
add
and
test
loop
dec
iret
adc
cld
push
mov
sbb
out
fnsave
(bad)
out
mov
mov
daa
xor
xor
inc
mov
clc
dec
sbb
xchg
cmp
clc
sbb
adc
mov
jmp
sahf
or
pop
test
mov
pop
out
or
jbe
cmp
movs
xchg
fs
jp
dec
xchg
stos
fcomp
gs
jge
mov
jge
mov
cdq
jge
in
pop
mov
mov
inc
fwait
pushf
adc
mov
shl
sub
test
ds
mov
lods
scas
rcl
push
cli
ret
pop
add
das
cdq
inc
xor
fist
jne
jl
lods
mov
inc
imul
and
fcmovbe
adc
inc
xor
nop
inc
pop
rol
cmp
pusha
pop
mov
test
adc
mov
dec
cmp
enter
sub
leave
xlat
lods
add
or
ret
jb
and
jge
dec
movs
dec
and
stc
mov
clc
inc
leave
out
mov
aas
inc
adc
lods
(bad)
leave
out
retf
jnp
pop
lahf
mov
in
call
jo
hlt
or
push
ret
jg
mov
fmul
shr
add
ja
cmp
sub
aas
push
dec
jb
test
(bad)
cmp
lods
sub
sub
not
add
xchg
fbld
xchg
loope
push
aam
mov
or
xchg
xchg
add
movs
(bad)
jmp
mov
aad
sub
pop
fcomp
int
push
add
bound
add
sub
dec
daa
or
and
stc
(bad)
cmps
arpl
loop
xchg
sar
retf
push
cmp
std
loop
xchg
cmp
mov
ret
scas
pop
(bad)
and
cmps
(bad)
push
push
adc
sub
jp
sub
outs
mov
xor
aas
into
(bad)
in
fnstsw
pop
xchg
das
icebp
pop
sbb
je
dec
lods
pop
add
nop
push
cmps
aaa
or
into
pusha
(bad)
cmps
out
test
push
ss
push
pop
add
test
mov
fisttp
bound
frstor
aam
mov
ja
push
pop
mov
das
xor
mov
jbe
iret
pop
ss
cdq
dec
push
or
aad
das
jne
repnz
add
movs
inc
ds
lods
imul
adc
clc
push
call
push
retf
(bad)
sti
add
add
cmps
mov
add
xchg
xor
retf
add
add
(bad)
mov
fwait
out
cmp
sahf
mov
xchg
es
fwait
in
xchg
jmp
or
dec
out
inc
mov
out
rol
jl
(bad)
fistp
xchg
sub
mov
aas
mov
rcr
shl
cmp
xor
gs
xor
retf
rcl
(bad)
mov
fidivr
pop
imul
dec
cmp
mov
iret
data16
mov
dec
je
and
(bad)
(bad)
into
fsubr
pusha
(bad)
and
xchg
test
loop
pop
adc
leave
sub
das
lahf
ret
or
imul
add
int3
sbb
add
ins
outs
loopne
adc
outs
mov
sub
xor
leave
ficomp
fs
lock
inc
xor
mov
adc
pop
xchg
aam
and
(bad)
cmc
and
retf
loopne
sub
sbb
loope
cmps
gs
aaa
jns
and
and
in
hlt
jle
or
test
mov
in
movs
lock
jl
push
mov
and
jp
scas
mov
cmps
adc
dec
sub
es
inc
pop
add
mov
out
jb
lahf
fldcw
fisubr
(bad)
les
outs
push
mov
test
push
int
test
(bad)
jmp
pop
add
je
xchg
xchg
sbb
sub
int3
jne
aaa
mov
xor
fst
lods
jge
rcl
adc
or
mov
add
test
push
push
fs
or
inc
leave
sub
and
xchg
xor
jno
cmp
repnz
mov
js
sbb
cmp
pop
enter
dec
push
cwde
and
inc
mov
add
inc
adc
add
mov
jbe
xchg
add
inc
mov
inc
rcl
daa
or
inc
les
sbb
pop
mov
cdq
jb
ret
mov
dec
jbe
shl
(bad)
retf
mov
outs
push
push
pusha
int3
jne
pop
fisttp
loope
push
aaa
rol
ret
adc
or
jnp
jp
retf
or
mov
retf
in
outs
adc
leave
jne
sub
mov
inc
gs
cmp
cmps
xchg
jl
cmp
fisubr
mov
cmps
arpl
test
repz
mov
mov
xor
dec
fiadd
test
fstp
mov
outs
ja
mov
(bad)
inc
aaa
dec
pop
add
jbe
inc
cmp
push
xor
dec
xchg
jae
adc
imul
or
inc
js
add
pusha
hlt
xor
pop
jmp
push
jnp
xchg
fcomp
dec
shl
cmp
add
push
mov
imul
ror
movs
call
jno
xchg
pop
stos
mov
jle
mov
adc
setne
xor
sbb
mov
and
jae
xor
push
imul
lock
ja
inc
mov
push
jle
loopne
push
cmps
popa
popa
popf
(bad)
cs
pushf
xchg
data16
adc
inc
cmp
jns
add
dec
sub
sbb
lods
xor
iret
push
sub
in
mov
fcmovb
das
stos
ss
(bad)
pop
or
or
(bad)
arpl
gs
xchg
fst
xchg
xchg
sbb
in
dec
ret
popa
les
cld
fst
aaa
adc
pop
jbe
stc
sbb
idiv
xor
or
in
xor
and
test
data16
cdq
int3
and
pop
mov
sub
sbb
mov
(bad)
repnz
out
pop
jb
sub
jmp
add
mov
int
rcl
cld
adc
inc
lea
ja
sbb
adc
hlt
call
scas
jnp
cmp
loope
xor
daa
sbb
repz
int3
push
xchg
mov
push
jecxz
or
pop
pop
call
stos
sub
outs
out
jne
fstp
add
fisubr
retf
ja
mov
and
cmp
inc
retf
and
pop
push
xor
inc
sub
(bad)
dec
std
inc
aad
loop
call
ins
mov
sub
xchg
lock
sub
jmp
shl
lock
mov
mov
mov
jge
adc
mov
ins
(bad)
leave
mov
and
fldenv
fdivr
jo
and
lds
daa
inc
test
or
and
xor
addr16
xchg
push
outs
movq
xchg
adc
sbb
fstp
add
imul
add
or
mov
fiadd
jmp
cdq
cmps
cmp
push
leave
ret
pop
cmp
jne
jno
call
out
and
ret
xlat
inc
je
pop
(bad)
popf
das
les
cmp
xchg
mov
or
lods
iret
out
out
ret
shl
in
jmp
xchg
sub
cmp
cld
adc
pop
maxps
sub
mov
push
xchg
sub
mov
pop
mov
rcr
stos
mov
cmp
xchg
inc
lock
push
(bad)
fild
jge
loope
mov
or
mov
lods
xchg
inc
cs
popf
rol
cmp
or
enter
sub
add
sbb
leave
xor
and
(bad)
iret
mov
iret
es
out
push
sub
cmp
loopne
hlt
xor
sub
pop
lods
retf
or
das
add
mov
pushf
fnstsw
sub
popa
pop
xor
pop
cdq
push
xchg
mov
stc
sub
push
push
(bad)
js
jecxz
xor
adc
scas
in
js
stc
xchg
mov
stc
mov
lods
xchg
push
cmp
icebp
in
xor
pop
scas
out
icebp
les
cmp
seta
retf
pop
and
dec
xlat
neg
faddp
add
hlt
cld
xchg
rcl
xor
in
jnp
add
xor
xor
ret
and
mov
out
push
lods
jae
adc
fcmovnbe
xor
push
leave
pop
mov
pop
test
enter
pop
pushf
mov
out
add
rcr
aam
pop
mov
cmps
cmp
mov
mov
(bad)
and
leave
les
retf
inc
popf
bound
jge
or
rcl
popa
xchg
popf
sbb
mov
or
out
sti
outs
adc
jp
jnp
adc
movs
in
out
add
pop
call
xchg
cld
ds
cmp
loop
mov
mov
mov
lods
jbe
pop
cwde
jmp
aam
movs
iret
push
into
and
je
pop
adc
dec
dec
xor
pop
xchg
retf
out
(bad)
jecxz
rcr
inc
sti
adc
test
mov
jge
call
dec
cmp
out
xor
test
stos
mov
out
adc
hlt
mov
mov
inc
dec
cmc
out
jnp
cwde
scas
dec
(bad)
xchg
ficomp
cdq
xchg
and
enter
dec
push
sub
test
sbb
push
xchg
push
mov
jbe
xrelease
inc
xor
jge
cmc
jl
(bad)
mov
inc
jmp
stc
mov
gs
cmp
cld
mov
shl
jno
push
aaa
push
loopne
mov
mov
mov
fistp
jmp
shl
push
inc
dec
pop
in
xchg
xor
mov
fwait
sub
aam
icebp
jo
jmp
cli
xor
adc
fadd
inc
(bad)
repz
out
xor
leave
dec
jae
or
mov
mov
pushf
jl
(bad)
cmc
xchg
jo
jecxz
test
sbb
(bad)
pop
rcl
mov
sbb
movs
jb
or
push
loope
xchg
fstp
arpl
dec
rcl
test
jbe
xchg
in
jbe
jecxz
and
mov
in
mov
shr
mov
mov
movs
leave
pop
mov
(bad)
leave
scas
mov
int3
movs
jg
mov
hlt
xchg
xchg
aam
mov
es
jne
sub
dec
jmp
mov
arpl
jne
(bad)
gs
(bad)
jno
and
mov
adc
xor
movs
push
out
mov
push
pop
enter
aam
clc
jae
cmp
jmp
fsub
or
mov
cmp
xor
inc
ds
fs
push
xchg
(bad)
cmp
dec
ja
mov
ret
mov
jle
lods
fistp
sub
jbe
dec
jmp
out
cli
aaa
pop
add
xchg
inc
push
jo
xchg
push
addr16
and
mov
sti
push
popa
sar
ss
push
push
dec
inc
jns
repnz
jecxz
xchg
xor
ins
cmp
pop
add
stos
mov
xlat
sbb
retf
xor
lea
mov
das
test
in
hlt
sbb
mov
jge
xor
jmp
xchg
rcl
jmp
rcl
xchg
movs
add
div
test
outs
int3
jb
mov
mov
or
xor
sub
and
aaa
add
daa
pop
clc
inc
retf
hlt
adc
fisttp
jo
mov
sar
jb
mov
pusha
(bad)
fimul
and
cmps
test
out
jge
cld
out
inc
sub
sub
and
sub
push
or
icebp
mov
pop
sbb
or
jno
cs
fwait
add
pop
(bad)
mov
and
push
js
xor
dec
stos
aaa
outs
sbb
pop
sar
cmp
pushf
popf
jo
mov
ins
mov
pop
lock
xchg
sti
adc
push
mov
call
test
cmp
push
mov
xor
pusha
sub
jmp
inc
mov
cs
push
and
sbb
adc
ror
push
mov
fmul
adc
pushf
or
ret
push
repnz
and
out
call
rcr
adc
push
loope
mov
sbb
or
lock
jne
push
jle
xor
cmp
add
xor
leave
nop
mov
add
push
sub
mov
ret
in
repz
mov
sbb
push
jno
push
div
mov
call
push
dec
mov
or
(bad)
fwait
jo
std
cmc
xlat
shl
iret
xchg
sub
xchg
icebp
movs
mov
addr16
jmp
in
inc
xor
popa
popf
dec
clc
icebp
sbb
dec
nop
pop
and
mov
cmp
or
add
ins
loopne
js
jle
pop
pop
sub
(bad)
out
lock
push
or
mov
je
sar
popa
in
xchg
sti
xchg
stc
and
inc
ds
add
scas
xchg
loop
sbb
iret
jo
scas
mov
dec
ja
sbb
js
mov
aad
or
cmp
mov
sbb
out
mov
cmps
outs
xchg
or
(bad)
jns
shr
inc
fucomi
dec
adc
popa
jnp
cli
xchg
adc
sub
fs
jnp
jbe
outs
xchg
inc
rol
out
xor
in
sbb
or
lods
pop
pop
mov
ins
enter
push
pop
inc
in
inc
fcom
dec
and
or
cs
adc
adc
mov
xor
jl
xchg
jmp
inc
xor
mov
je
lea
cmps
xchg
pop
mov
inc
add
test
inc
rcr
mov
sbb
and
mov
or
int3
pop
mov
mov
outs
sar
out
pop
dec
pop
(bad)
ret
mov
xor
shl
or
cmp
cdq
es
adc
jge
add
jns
push
hlt
mov
xchg
xchg
jmp
mov
dec
jl
sar
pop
pop
add
xchg
or
dec
dec
push
and
mov
(bad)
repnz
sub
sbb
xor
add
pusha
and
sahf
popf
jne
out
pop
cmp
movs
push
xchg
imul
pop
sub
cmp
aam
stc
mov
call
adc
mov
mov
add
sbb
add
inc
mov
xchg
push
cmp
xchg
addr16
sbb
sbb
retf
dec
cmp
or
hlt
in
mov
add
lds
jmp
mov
push
pop
xor
pop
xchg
fisubr
ins
sar
cld
xchg
add
pop
scas
push
xchg
xor
xchg
aam
xchg
lahf
cmp
push
arpl
repnz
cwde
out
inc
out
inc
mov
push
fidiv
rcr
punpckldq
jno
xlat
dec
and
stc
cmp
lea
imul
push
inc
call
fwait
adc
mov
test
in
movs
cmp
cmp
dec
aad
int
jae
push
sub
cdq
mov
sub
mov
pop
cmp
imul
loop
pushf
cmp
mov
mov
add
xchg
pop
movs
or
das
(bad)
in
xchg
fs
sub
popf
push
push
inc
clc
mov
aas
add
repz
xchg
mov
sar
je
sbb
jg
bound
dec
hlt
and
inc
ds
push
pushf
test
mov
repz
loopne
xor
(bad)
sub
mov
and
ja
push
push
pop
sub
xchg
loope
xor
xor
ins
sub
rcr
jmp
repz
xchg
or
dec
cdq
sahf
push
sub
mov
iret
into
call
cmp
int
ja
sar
mov
push
stc
shl
cmp
adc
dec
sub
mov
mov
mov
sbb
iret
int
out
inc
iret
xchg
out
push
xor
mov
xchg
sbb
adc
rol
mov
cli
out
jns
xchg
dec
cmc
fdivr
jmp
sti
jecxz
jo
test
out
test
xchg
mov
lds
lahf
fist
fs
dec
push
in
repnz
mov
aas
pop
mov
aaa
faddp
sub
and
(bad)
adc
test
in
shr
sbb
xor
cld
pop
das
in
js
addr16
leave
push
aas
jmp
shr
ja
fdivp
stos
(bad)
call
push
mov
lea
xchg
loope
mov
mov
cld
cmp
dec
(bad)
mov
pusha
adc
push
add
add
push
and
fmulp
and
cdq
sub
add
fistp
popf
aad
jne
stos
xchg
retf
xchg
mov
add
sub
xchg
jecxz
mov
add
aas
loop
lods
pop
mov
mov
mov
movs
fld
adc
xor
repz
or
push
and
mov
mov
adc
mov
dec
push
outs
mov
push
movs
cmp
xor
ror
xor
cmc
mov
ror
jmp
or
mov
jae
(bad)
addr16
mov
clc
imul
scas
stos
and
adc
pop
mov
mov
imul
inc
hlt
pop
mov
and
iret
gs
aad
int3
add
out
dec
out
and
and
cmp
adc
push
fisubr
scas
adc
bound
push
cmp
dec
retf
mov
rcl
xchg
jae
mov
cmp
pusha
stc
call
pop
fsub
mov
and
or
lods
repnz
mov
adc
jle
clc
adc
cmovns
inc
out
movs
push
mov
je
cmp
cdq
inc
lods
clc
xchg
mov
jnp
bound
imul
cmp
or
in
pop
xor
pop
dec
jmp
fdivr
or
rcl
sub
mov
retf
std
ds
cmp
adc
jp
push
pop
add
xchg
es
cmc
mov
mov
inc
adc
in
push
shr
in
enter
cmps
std
xor
out
mov
idiv
cmp
imul
mov
jne
js
movs
adc
retf
jge
imul
mov
xor
push
popf
adc
mov
mov
ds
mov
add
leave
adc
push
inc
xlat
or
jo
dec
out
add
mov
mov
cmp
mov
jl
sub
in
clc
popf
cs
pop
xchg
out
out
mov
pop
cs
faddp
sbb
lods
fs
adc
rcl
aad
test
add
push
sub
lds
mov
int3
add
aas
retf
adc
out
pop
mov
sar
mov
push
fld
cmp
jmp
scas
jge
pop
ins
push
repz
inc
loopne
jmp
sbb
gs
pop
pusha
cmp
fcomp
and
retf
jae
mov
mov
jmp
dec
inc
push
jae
repnz
repz
and
xchg
pusha
ret
mov
test
push
pushf
dec
leave
std
xor
and
fdiv
lods
fmul
cmps
or
out
nop
jb
push
and
and
mov
inc
push
clc
cmp
dec
mov
jmp
add
jnp
in
(bad)
out
out
sub
(bad)
jb
test
mov
test
das
fld
scas
add
loopne
ffree
cmp
aas
pop
lods
arpl
adc
or
sbb
jbe
popf
scas
lea
popf
fwait
stc
adc
sub
inc
dec
mov
push
scas
mov
dec
std
mov
bound
sbb
popa
dec
jae
fldenv
jge
pop
jecxz
les
(bad)
test
sbb
cmc
fidiv
ret
in
xchg
sbb
(bad)
(bad)
dec
das
out
call
and
cs
mov
add
cmp
out
sub
icebp
or
repnz
jge
sbb
movs
or
push
dec
clc
jecxz
sar
jg
jne
into
pop
pushf
or
xchg
cld
loopne
dec
rcl
movs
je
(bad)
int3
push
in
mov
movs
out
jecxz
sub
mov
or
ret
push
jmp
js
sbb
inc
ins
mov
xchg
call
(bad)
test
addr16
repz
adc
int3
in
push
jp
cmp
dec
(bad)
jns
mov
inc
mov
(bad)
outs
or
dec
int3
sbb
sbb
push
stos
das
into
mov
iret
pop
xor
aaa
or
les
push
cmp
in
and
fidivr
(bad)
fist
fsub
jmp
test
(bad)
pop
cld
adc
dec
std
ret
sub
pushf
push
test
arpl
or
pop
retf
shl
out
pop
adc
loopne
jnp
test
nop
fcmovnu
ja
mov
jne
and
nop
inc
lahf
ss
pop
cmp
scas
pushf
in
or
aas
pop
imul
inc
sub
mov
pop
mov
sub
call
out
aam
vfrczss
pop
xor
arpl
loop
test
mov
sub
push
jmp
cmp
cmp
push
shl
(bad)
jmp
ror
mov
push
cmp
or
enter
ds
fstp
lods
add
lahf
sub
add
adc
sub
jg
or
pop
repnz
cld
mov
(bad)
sti
imul
rcr
or
adc
call
pop
pop
cmp
ror
mov
mov
mov
in
sub
repz
and
or
cmc
xor
out
fstp
(bad)
or
jbe
mov
aad
or
lock
add
rol
aam
test
stc
out
and
pop
push
mov
mov
and
pop
cmp
clc
jmp
dec
and
xchg
and
add
mov
(bad)
js
push
xchg
jle
je
jno
cmp
xchg
les
mov
mov
popa
jno
shl
ss
fwait
xchg
and
out
hlt
push
mov
ins
xor
and
inc
lods
js
adc
call
out
mov
loopne
sbb
cmp
lods
fsubp
je
mov
jns
aad
addr16
xchg
jecxz
push
push
inc
cmc
out
and
inc
fld
add
pop
mov
adc
and
test
sub
stos
jg
adc
and
test
aas
push
cmp
mov
jle
mov
cmps
mov
pop
ror
bound
cwde
popa
and
add
push
mov
sahf
fwait
clc
jle
dec
pusha
mov
adc
loopne
cmp
repnz
std
mov
loopne
into
cmp
jns
ja
test
test
fcomp
xlat
sub
pop
xchg
or
(bad)
aas
jo
movs
jns
xchg
pop
leave
or
push
ret
fldz
(bad)
movs
dec
arpl
inc
aad
lea
jns
and
sbb
mov
dec
cmps
or
adc
cmps
fs
movs
ja
das
pushf
pushf
inc
ss
sub
push
rcr
je
inc
loopne
aad
push
mov
sbb
jno
leave
call
push
stos
repnz
mov
pop
stos
pop
pop
add
aam
sub
push
enter
dec
icebp
sbb
in
sbb
mov
adc
adc
cld
or
mov
fdiv
mov
lods
loopne
out
(bad)
add
jl
xchg
mov
push
stos
cmp
and
cwde
inc
imul
cmps
push
push
dec
xor
dec
xchg
or
(bad)
dec
stc
fs
and
(bad)
xchg
aad
dec
(bad)
out
rep
(bad)
in
inc
cmp
(bad)
lods
mov
and
mov
mov
cs
out
movs
fstp
ja
leave
std
or
jbe
data16
cmc
mov
push
xchg
xchg
movs
add
in
xchg
inc
xchg
(bad)
and
clc
sbb
out
xchg
inc
sar
ror
push
fwait
sbb
add
data16
inc
mov
xor
mov
sbb
push
mov
sub
dec
mov
test
jge
dec
pop
lea
cld
je
pop
outs
xchg
aad
mov
std
gs
cmps
arpl
push
mov
mov
in
ins
push
aad
push
into
inc
and
dec
push
jae
test
and
cmps
idiv
cmp
sub
fwait
and
sub
jecxz
dec
std
(bad)
ret
iret
das
mov
icebp
lods
out
(bad)
mov
sub
inc
jns
pop
(bad)
jmp
and
repnz
in
fild
push
sub
push
mov
out
retf
cmps
xchg
mov
mov
into
enter
mov
jns
jno
mov
mov
frstor
aas
ret
add
cs
push
xchg
imul
or
push
xchg
cmp
push
lock
mov
mov
lock
pop
push
je
pop
adc
loopne
sahf
add
scas
jmp
pop
add
(bad)
cdq
dec
dec
mov
or
pop
test
cld
mov
add
xchg
cwde
push
fisttp
cmp
(bad)
js
call
cwde
mov
ss
scas
popf
ret
push
dec
lahf
addr16
pop
daa
pop
mov
ficomp
xchg
inc
pop
pushf
(bad)
inc
mov
xor
inc
dec
or
movs
mov
sub
jmp
jl
imul
mov
ins
jbe
mov
retf
inc
jmp
pop
sbb
ds
ror
enter
jne
jne
vpsrlw
push
adc
fwait
push
bound
jl
fdivr
push
mov
fadd
stc
jae
data16
and
cli
in
adc
add
sysexit
and
rol
ret
sub
fsubr
cmp
push
and
(bad)
popf
and
cmc
scas
cli
aaa
jp
push
adc
cld
adc
pop
push
call
inc
pop
jmp
sub
int
mov
into
call
outs
arpl
or
lea
ret
imul
mov
adc
jle
pushf
pusha
sub
and
retf
inc
popa
retf
or
test
ds
ja
or
add
movs
push
fistp
mov
jbe
lea
ja
xchg
int3
pop
add
aaa
les
leave
jmp
push
jno
mov
mov
push
push
inc
(bad)
cld
lock
(bad)
xchg
or
mov
xor
xor
sub
sbb
xor
pop
popf
jnp
push
adc
add
inc
cmps
popf
inc
ret
test
push
add
out
jecxz
and
sbb
aas
jo
jne
mov
mov
mov
push
jl
sbb
rcl
cmp
add
mov
(bad)
jmp
jns
and
fdiv
xor
push
aas
hlt
ror
add
scas
cvtps2pi
jmp
call
lock
in
cld
jbe
into
into
rcr
jmp
scas
adc
jl
gs
aaa
xchg
mov
mov
jo
arpl
inc
add
fistp
add
scas
mov
xor
aaa
in
pop
sbb
les
retf
(bad)
cs
es
add
cmp
(bad)
mov
fs
xor
sub
cwde
out
inc
cmp
ret
jmp
xor
hlt
ret
loop
mov
add
rol
add
mov
shl
push
js
adc
sub
movs
or
cmp
pop
repz
jl
imul
icebp
nop
xchg
xchg
stc
repnz
xor
call
or
stos
xchg
movs
scas
mov
mov
sub
push
dec
enter
popf
movs
jl
in
call
and
pop
mov
(bad)
adc
xor
nop
int3
pop
add
pop
pop
movs
movs
outs
ins
adc
or
sub
stc
test
stos
jg
(bad)
iret
jns
test
sub
xor
int
xchg
jecxz
lea
sti
aas
dec
add
aam
arpl
sbb
sub
jg
xchg
sbb
inc
cmp
pop
sti
adc
and
push
adc
leave
and
pop
(bad)
iret
daa
sub
and
xlat
loop
test
lods
sub
cs
iret
pop
std
ss
in
or
nop
sbb
sub
xchg
inc
sub
out
inc
pushf
dec
mov
cmps
or
idiv
sti
inc
sub
into
movs
lods
adc
dec
(bad)
out
out
mov
mov
jb
fbstp
ret
xlat
sub
icebp
fbld
xor
jmp
clc
dec
fst
add
imul
mov
xor
mov
pop
xchg
pop
ja
outs
sub
mov
jle
adc
std
les
les
aad
xchg
push
pop
aad
shl
popf
lds
movs
push
xchg
sar
mov
js
fstp
pop
xor
ins
mov
sbb
sub
out
or
daa
stos
pop
pop
push
rcl
pop
dec
sbb
inc
mov
or
sar
lods
in
dec
add
xor
pop
cmp
movs
sub
jge
out
fdivrp
xchg
sar
scas
mov
(bad)
retf
pop
jle
lock
fwait
in
sbb
mov
mov
sub
add
cwde
xor
lock
xchg
xor
cmp
or
xchg
push
xchg
pop
sbb
xor
add
sub
mov
add
add
outs
retf
arpl
dec
or
jg
or
jp
mov
xor
js
nop
push
jb
cmp
std
cs
push
sti
outs
(bad)
jge
sub
imul
xchg
pop
sbb
call
adc
(bad)
gs
sar
inc
sbb
pop
sub
sar
cmp
adc
bound
mov
or
icebp
adc
push
mov
or
dec
movs
test
ret
in
jbe
ldmxcsr
pushf
cdq
imul
sbb
outs
(bad)
mov
out
dec
xchg
mov
adc
rol
xchg
add
adc
test
int3
inc
stos
push
std
cmp
fld
mov
setns
xchg
mov
retf
in
repnz
xor
fistp
push
add
scas
xor
cmp
mov
stos
sbb
xchg
out
inc
outs
add
xor
jecxz
cmc
sbb
add
pop
push
loop
push
inc
push
(bad)
inc
mov
stc
call
push
mov
test
sbb
je
pop
pop
sbb
cmp
aad
sub
lsl
clc
or
ror
aaa
mov
dec
rol
inc
dec
cmps
adc
pop
xchg
mov
not
xor
mov
add
in
gs
add
popa
sbb
sub
rcr
out
or
inc
mov
jmp
mov
mov
aas
xchg
stos
sar
retf
pushf
cmp
lds
cs
das
ret
mov
sub
iret
cmp
shl
lahf
outs
arpl
jne
xchg
pop
gs
push
outs
xchg
xor
daa
data16
imul
cmps
xchg
push
ja
arpl
sbb
int3
inc
loope
loope
ret
adc
pushw
mov
ret
dec
and
push
jmp
adc
dec
pop
jo
mov
pop
inc
pop
jmp
(bad)
mov
fcmovbe
dec
dec
add
fwait
pop
pop
mov
pop
into
inc
outs
rep
sub
push
cld
retf
push
ins
iret
lods
fdiv
rcr
pop
jle
scas
rcl
push
add
dec
xor
pop
jg
mov
and
xor
mov
mov
inc
call
inc
mov
outs
sbb
sbb
xchg
or
inc
mov
fidiv
mov
ins
jnp
out
mov
jb
mov
fldcw
lods
hlt
sti
fptan
call
mov
sbb
ja
sbb
push
xor
inc
sbb
gs
shr
ficom
jmp
xchg
push
icebp
icebp
sub
and
iret
ds
ss
mov
neg
xor
(bad)
cli
cwde
jb
mov
inc
push
imul
(bad)
sahf
push
arpl
xor
jb
aad
mov
(bad)
lods
outs
cmps
push
repz
dec
es
(bad)
in
fild
ins
dec
mov
push
into
(bad)
sahf
fmul
int
cmp
add
jne
cmp
sub
js
data16
and
retf
(bad)
and
int3
jo
xchg
sbb
clc
adc
aaa
scas
pop
bound
inc
or
and
and
rcl
icebp
sbb
jo
jle
cmc
aas
push
or
pop
call
loop
sbb
daa
int3
mov
xlat
sub
add
xchg
push
inc
xchg
iret
test
or
fsubrp
push
fwait
stc
xor
push
fbstp
xor
scas
addr16
pop
mov
add
push
xchg
jo
cwde
xchg
scas
fisub
dec
push
dec
push
mov
in
pushw
mov
adc
inc
es
xchg
pop
addr16
nop
in
sar
test
bound
movs
(bad)
ss
popfw
cs
mov
ja
mov
inc
adc
mov
mov
movs
push
mov
int
jecxz
gs
(bad)
fisttp
in
inc
ins
and
fnstcw
xchg
(bad)
(bad)
(bad)
cs
dec
push
pop
add
add
movs
out
xlat
cmps
push
sub
pop
mov
xrelease
cdq
es
push
ror
and
lahf
mov
and
xor
iret
mov
dec
mov
mov
inc
out
iret
ss
cdq
jl
mov
sub
adc
jl
ss
push
pop
sbb
push
jmp
in
out
sahf
mov
mov
xchg
sbb
retf
mov
dec
stos
jb
jecxz
add
add
xlat
or
rol
mov
and
ret
mov
call
adc
(bad)
stos
stos
fsub
out
adc
mov
sub
retf
rep
xchg
aaa
pop
dec
or
fst
or
stos
mov
adc
and
pusha
sti
pop
cvttps2pi
in
mov
shl
or
mov
fwait
mov
push
dec
(bad)
pop
push
and
jns
add
mov
cmps
adc
pop
fnstsw
xchg
mov
add
sub
jl
arpl
adc
dec
cmp
clc
jno
mov
pop
fild
mov
push
cld
mov
mov
cdq
sbb
outs
cmp
fisub
push
(bad)
dec
and
push
mov
stos
push
test
or
pop
into
inc
scas
loopne
dec
psubsb
dec
xor
cmp
inc
jmp
movs
pop
and
les
push
lods
call
fsub
cli
pop
push
and
popf
jae
sub
leave
in
mov
xchg
mov
cmp
sbb
pop
mov
scas
data16
mov
pop
aam
xchg
cdq
rcl
ret
sbb
mov
scas
test
ins
xor
sti
sub
jo
push
inc
unpcklps
ins
loop
cmp
js
inc
jg
pop
das
add
jno
aad
lahf
sub
dec
mov
stc
fs
loopne
add
sahf
adc
shr
mov
cmp
test
imul
xchg
lahf
and
sbb
(bad)
gs
(bad)
jne
ins
add
xchg
cdq
mov
lods
test
inc
in
rol
xchg
int3
cmp
xchg
cli
cmp
or
mov
aas
jle
jbe
jne
lea
lea
add
pop
xchg
test
adc
inc
std
iret
std
sbb
or
xor
mov
pusha
push
jmp
mov
cmp
xor
push
ffreep
push
les
ret
xor
xor
jns
jbe
and
xchg
hlt
movs
inc
mov
neg
loop
lds
dec
mov
sbb
adc
ins
or
mov
xor
cli
loopne
(bad)
mov
sbb
loope
cmp
cs
popa
sbb
jle
inc
shr
mov
test
gs
out
and
jge
inc
out
adc
xlat
mov
js
sub
int
(bad)
fisttp
xchg
jbe
inc
and
sbb
ins
xchg
mov
push
sbb
repz
jg
test
jp
and
push
lahf
movs
add
jge
cdq
fisttp
mov
inc
es
push
pop
push
int
mov
pop
mov
mov
add
pop
xor
in
or
les
icebp
sub
fbld
mov
shl
push
(bad)
psubusb
sub
aad
es
ins
mov
mov
in
inc
cmp
sub
cmp
sub
js
shl
mov
mov
movs
test
popf
cmp
and
inc
loope
ss
adc
dec
popa
mov
jne
fld
dec
gs
mov
mov
push
movs
test
(bad)
mov
inc
push
sbb
es
push
mov
in
ret
mov
int
psubb
cld
fnstenv
add
movs
iret
lock
mov
pop
ins
push
stos
retf
pop
mov
push
retf
cdq
pusha
add
add
jmp
shl
sti
or
outs
das
aas
mov
lock
xchg
xchg
test
dec
jnp
fidivr
jmp
dec
add
sbb
or
push
adc
std
mov
scas
(bad)
jae
mov
popf
div
out
retf
inc
add
xor
(bad)
mov
pushf
rcr
ss
dec
jno
cmp
add
sahf
jmp
daa
sbb
jge
pop
out
popa
rcl
pop
jne
emms
lods
ins
sti
xchg
sbb
ret
inc
fdiv
mov
icebp
inc
sbb
clc
scas
inc
sub
mov
cwde
adc
xor
fwait
(bad)
jbe
sbb
cs
sti
cld
(bad)
adc
fiadd
push
test
xchg
ins
mov
imul
repnz
gs
pop
mov
pushf
and
push
dec
push
(bad)
xchg
jae
inc
mov
cmps
push
push
in
ror
daa
xor
stc
sbb
rol
fcom
stos
sub
rcl
mov
cmp
fiadd
ins
push
xor
cs
sub
jno
jle
imul
inc
cmps
loop
push
pop
in
xor
inc
sbb
pop
push
adc
gs
mov
imul
in
or
cmps
ffreep
mov
dec
and
pop
imul
data16
mov
aam
addr16
out
retf
cmp
hlt
lds
xchg
fistp
or
or
in
and
mov
call
(bad)
loop
inc
loop
rcl
pop
jbe
sbb
mov
pop
retf
iret
ffreep
pop
jle
jbe
shl
test
push
out
imul
mov
xor
adc
(bad)
xor
clc
pop
out
sahf
aas
and
mov
push
bound
mov
dec
in
cmp
or
fisubr
push
cmp
out
xchg
ins
imul
and
jno
ror
jg
out
je
mov
fsub
daa
cmp
pop
enter
mov
pop
int
xchg
inc
add
aaa
outs
hlt
pop
imul
ins
test
sub
push
js
nop
loope
xchg
xor
xor
fisttp
jo
add
pop
pushw
xchg
cmps
pop
imul
sub
cmp
call
daa
push
xchg
std
jecxz
cdq
xchg
inc
push
and
cmp
xchg
mov
das
clc
test
je
xchg
mov
dec
jmp
test
les
dec
xchg
pop
lods
inc
jae
outs
adc
or
mov
daa
cmps
shl
std
jg
mov
cmp
mov
lea
dec
fidivr
div
inc
int3
add
add
test
xor
mov
mov
mov
stc
and
(bad)
call
adc
mov
(bad)
pusha
pop
mov
sahf
mov
jbe
int
shr
rcl
int3
cmp
les
xlat
cwde
mov
pop
std
loopne
lods
js
outs
pop
adc
jne
aad
jecxz
xchg
gs
pop
push
out
jae
rol
push
xchg
inc
loop
xchg
or
arpl
dec
sti
mov
xchg
sub
push
leave
test
mov
js
pop
pop
mov
xor
icebp
mov
xchg
inc
dec
cdq
dec
(bad)
jl
sbb
sar
fdiv
daa
jbe
loop
retf
ficom
into
aam
jb
daa
fdiv
cmc
cmp
xor
clc
mov
cmp
test
(bad)
sbb
ds
cmps
jecxz
ret
imul
pop
sub
jae
enter
jmp
xor
repz
dec
aas
out
push
dec
xor
aas
xor
cmp
enter
shr
adc
into
push
loope
stos
stc
dec
jecxz
mov
or
push
inc
sbb
dec
jp
in
xchg
cs
arpl
ins
pop
or
add
push
sbb
ret
sub
dec
mov
add
in
mov
loopne
repnz
(bad)
fdiv
loopne
pusha
mov
mov
mov
sub
(bad)
push
pop
stos
xchg
push
inc
fdiv
stos
enter
and
es
cwde
xchg
pop
into
add
jo
test
je
inc
sti
lea
addr16
and
xor
adc
sub
cdq
pop
in
push
sub
pusha
xor
lods
and
popa
jbe
pop
jnp
sahf
pop
jg
sar
fcomp
les
mov
data16
mov
movs
into
nop
cmps
mov
arpl
and
mov
mov
and
jge
test
xchg
push
je
rcl
inc
mov
shl
sahf
loopne
fwait
jg
mov
fisubr
int
inc
stc
adc
in
repnz
mov
jecxz
adc
cdq
fcmovnu
popf
movs
add
mov
ss
push
pop
(bad)
stos
jae
inc
movs
jno
mov
xchg
ss
add
push
repz
(bad)
loopne
in
jne
mov
sub
sub
into
sar
stos
imul
in
cmp
cmp
enter
shr
jno
mov
cmp
mov
sub
xor
les
cdq
cmps
jl
ror
dec
outs
lock
mov
and
dec
in
pop
stos
jnp
inc
adc
mov
daa
ja
inc
stos
pusha
mov
and
mov
pop
push
mov
fwait
mov
or
test
dec
mov
inc
xchg
mov
stos
aam
test
mov
sub
hlt
push
pop
hlt
sub
mov
pop
call
rol
push
jmp
xchg
inc
ret
es
adc
jne
jo
mov
cmps
imul
mov
clc
pusha
out
push
add
arpl
mov
mov
lahf
mov
push
mov
add
or
sahf
xor
mov
add
(bad)
fs
jmp
out
lods
mov
outs
std
rcl
dec
bnd
retf
sbb
(bad)
in
fisubr
cmp
adc
push
(bad)
shl
jns
push
outs
xchg
jmp
retf
mov
sbb
xchg
jmp
pop
ror
ja
dec
add
mov
mov
in
mov
cmps
loope
xor
fild
inc
int3
mov
mov
dec
mov
push
inc
xchg
fldcw
mov
xchg
(bad)
sar
and
jle
sahf
ror
add
jl
and
fmul
enter
sti
(bad)
xchg
loopne
rol
frstor
jmp
mov
pop
stos
and
outs
xor
jl
and
fsub
stos
xor
cmp
repnz
mov
in
ins
rcl
xchg
ja
cmc
shr
in
mov
jecxz
mov
mov
mov
mov
push
cmp
loop
add
or
xor
push
xor
or
loop
cwde
aaa
arpl
stos
adc
pop
inc
pop
xor
adc
jg
fs
arpl
inc
std
retf
lahf
leave
call
cmp
fcmovu
arpl
in
gs
retf
dec
push
sbb
cmp
outs
push
adc
fiadd
adc
cmps
loop
mov
cmc
pop
push
popa
fld
lods
sbb
into
jmp
std
xchg
ret
lods
dec
xor
jnp
arpl
mov
ss
call
repz
mov
jnp
adc
inc
xor
cli
or
fcom
mov
push
je
ins
inc
pop
pop
cdq
push
dec
inc
mov
test
adc
popa
outs
leave
and
xlat
inc
sti
ja
pop
add
shr
or
dec
sbb
adc
icebp
bswap
push
xchg
ss
add
jle
scas
cld
or
xchg
sahf
cli
aam
das
push
mov
mov
sbb
test
mul
push
rol
and
stos
lahf
cwde
lahf
pop
mov
push
and
jo
(bad)
jns
fist
sub
cmp
call
xor
add
dec
pop
sub
pop
push
les
call
adc
imul
scas
imul
clc
out
stc
jbe
xor
das
mov
sbb
mov
test
xor
xlat
push
dec
dec
cdq
std
and
mov
cwde
mul
xchg
clc
sbb
mov
mov
push
fld
je
xchg
arpl
(bad)
xlat
ret
and
movs
fldlg2
pop
fnsave
das
shl
cmc
sub
ret
adc
and
call
or
or
cwde
jbe
xor
pop
mov
cmp
pop
je
mov
ret
cs
cmp
and
into
xor
ror
cmp
shl
enter
repz
pop
lods
sbb
ins
push
push
inc
jg
or
shl
(bad)
pushf
mov
out
and
inc
mov
jg
mov
cmp
shl
jo
inc
(bad)
fxch
movs
loope
sub
cmp
dec
imul
cmp
dec
push
and
push
aad
cmps
push
or
inc
sar
cmp
pop
mov
jns
pop
imul
cdq
and
cs
push
sub
dec
stos
jecxz
cli
out
jbe
pop
push
daa
pop
icebp
bound
pop
dec
movs
rcr
mov
xor
or
outs
push
icebp
ins
mov
adc
lahf
xor
rol
xchg
int3
ja
aam
in
sahf
retf
fcomp
jne
or
(bad)
mov
shl
shr
xor
and
fwait
xor
ins
outs
std
test
in
test
pop
popf
cmps
mov
push
mov
mul
(bad)
std
bound
add
add
retf
ins
(bad)
xchg
stos
push
movs
ss
iret
mov
mov
rcr
sbb
jle
(bad)
ins
inc
push
mov
dec
inc
inc
js
mov
cmps
ret
mov
leave
dec
ins
cs
pop
xchg
pop
out
push
cmp
int3
fdivrp
jmp
and
pop
movs
cdq
mov
adc
arpl
popf
dec
pop
push
dec
ret
cmp
ja
ret
ins
popa
into
mov
mov
out
adc
mov
pop
jb
aas
(bad)
jmp
out
movs
jl
cmps
leave
pop
in
imul
xchg
cwde
cmps
pop
xchg
sub
xchg
xor
xor
or
ins
call
or
and
scas
(bad)
xor
and
sti
and
loop
and
ja
mov
test
cdq
arpl
loopne
test
(bad)
outs
jae
mov
adc
inc
cmps
jmp
inc
(bad)
retf
aaa
adc
cmc
mov
push
mov
adc
mov
out
pop
push
(bad)
or
mov
mov
in
push
(bad)
jmp
add
or
aaa
inc
clc
ficom
ins
jg
out
repz
in
mov
(bad)
nop
jecxz
in
cmps
in
pop
xchg
pop
cmp
pop
mov
mov
pop
mov
mov
add
stos
jp
and
retf
ja
pop
push
test
jns
adc
iret
retf
arpl
sbb
ins
xchg
jmp
outs
jmp
iret
adc
xor
pop
xchg
fnstenv
fisub
inc
test
popf
push
cmp
outs
(bad)
add
push
xchg
leave
in
hlt
gs
mov
ror
mov
jns
push
jp
jecxz
test
les
in
mov
popa
pop
push
stc
sub
adc
sbb
lea
or
popa
jl
in
push
dec
fsub
jmp
adc
mov
jmp
cmp
mov
bound
sub
and
or
shr
test
fwait
addr16
sub
in
inc
out
scas
mov
xchg
jb
mov
xchg
dec
cmp
xor
sbb
in
cld
xchg
mov
loopne
adc
ins
xor
adc
cmp
sbb
xchg
mov
xor
out
push
sub
cmp
outs
js
dec
push
sahf
not
and
pop
aaa
mov
pop
pop
fld
xchg
call
mov
inc
jno
xchg
loopne
push
pusha
ja
or
aam
popf
ss
jnp
cmps
lods
jae
sbb
shl
mov
ins
ins
cdq
jg
xlat
cmp
and
push
sbb
jle
cs
push
mov
dec
xor
jle
mov
ret
inc
test
je
ja
adc
cmp
out
adc
sbb
fstp
pop
stos
adc
shl
enter
cmp
rcl
push
bound
mov
lods
mov
jle
push
cmp
test
jl
mov
add
repnz
mov
lds
loope
das
mov
outs
je
cmp
xchg
ins
cmp
sub
adc
cmp
push
pop
pop
mov
frstor
movs
scas
push
ja
cmp
dec
test
jp
ins
loope
retf
jbe
call
xchg
or
outs
pop
ror
sbb
in
adc
jecxz
in
or
popa
xor
jmp
jge
mov
dec
repnz
arpl
jno
inc
neg
jle
aaa
test
jp
cmps
out
cs
test
add
or
xchg
lds
call
add
retf
movs
sub
fcmovu
rol
push
fisubr
rcl
xchg
push
rol
push
add
mov
enter
add
and
mov
test
xor
ret
mov
and
les
xchg
sub
ficomp
leave
push
call
jl
mov
push
into
into
ret
mov
dec
xchg
mov
mov
aad
jbe
in
test
call
jmp
push
loop
addr16
nop
ins
jg
mov
retf
out
sbb
mov
inc
adc
pushf
add
and
cmp
inc
call
int3
bound
loop
stos
bndldx
sub
fistp
mov
loope
shl
ins
push
sub
inc
xor
test
mov
dec
mov
xor
lods
mov
dec
push
rcl
adc
jbe
or
sub
push
xor
idiv
push
pop
mov
(bad)
addr16
in
movs
std
xchg
hlt
cmp
add
nop
push
lea
js
lock
sub
je
dec
inc
mov
sti
xor
sub
mov
cdq
(bad)
stc
pop
gs
call
xor
aas
outs
adc
call
cmp
jo
not
seta
shl
dec
dec
push
repnz
xlat
push
mov
data16
xchg
pusha
lahf
adc
(bad)
neg
mov
mov
push
sahf
outs
ss
inc
std
add
sub
(bad)
js
outs
mov
sub
sub
in
rcr
cmp
mov
div
or
jns
movs
and
cmps
loop
ror
jg
pop
xchg
icebp
push
(bad)
sahf
mov
mov
xor
aam
dec
pop
fidiv
jo
lahf
or
arpl
mov
loope
out
xchg
imul
mov
shr
mov
cli
outs
push
and
js
xor
inc
movs
mov
push
sub
dec
pop
pop
pusha
dec
cmp
not
and
call
sbb
add
mov
push
cmp
mov
push
popf
and
or
repnz
mov
(bad)
jl
in
push
int3
es
jno
inc
test
or
mov
mov
(bad)
in
sub
les
jb
mov
in
loop
ds
out
les
push
mov
test
dec
jo
and
loope
(bad)
div
scas
pop
sub
push
and
mov
sahf
pushf
dec
loop
sub
lahf
jnp
adc
or
xor
mov
or
or
sbb
dec
xchg
push
adc
mov
cmp
fidivr
lods
push
sub
outs
aam
sbb
push
xor
repz
repz
lock
rcl
jbe
adc
call
enter
into
popa
rol
add
mov
mov
add
mov
inc
bnd
inc
inc
repz
xor
or
(bad)
xchg
mov
sub
movzx
scas
mov
jle
test
xor
pop
inc
pcmpeqb
dec
dec
dec
adc
rcr
fsub
mov
repz
xchg
in
cs
icebp
test
out
es
pop
jae
lds
pop
stos
dec
clc
adc
lahf
or
dec
leave
jmp
dec
outs
jmp
jmp
mov
jp
jecxz
pop
out
mov
xor
mov
adc
movs
out
(bad)
push
push
pop
mov
fsubr
lods
scas
arpl
jae
dec
pop
nop
scas
cmp
mov
ret
xor
scas
mov
or
js
gs
movs
repnz
and
xor
pop
add
mov
mov
leave
pop
fldenv
push
scas
(bad)
or
sti
mov
loopne
int3
imul
ja
cmp
push
iret
or
push
lods
cmp
sbb
sahf
mov
and
lods
rcl
jo
xchg
repz
add
xchg
push
sbb
sub
cmp
ds
add
sbb
pop
rol
push
inc
cli
jno
push
sbb
mov
(bad)
iret
sub
mov
sub
jl
or
loopne
iret
leave
mov
(bad)
inc
dec
repz
in
mov
mov
adc
mov
jecxz
or
sub
and
xchg
xor
mov
lods
mov
add
ja
fimul
cmp
call
push
ds
clc
popa
(bad)
xchg
scas
fdiv
(bad)
pop
add
ret
sub
in
call
test
push
daa
mov
push
test
ja
test
aas
xchg
sub
out
mov
fsincos
arpl
pop
pushf
and
aaa
clc
std
dec
cmp
pop
pop
xor
loope
fmul
cli
repz
loop
repz
dec
xor
sbb
and
mov
push
mov
mov
imul
pop
jae
push
jb
movs
mov
repz
fisubr
in
pop
rol
jmp
sti
xchg
mov
mov
out
bound
(bad)
fnstenv
cmp
cld
jo
shl
aam
jl
les
jo
push
lds
cmp
inc
outs
adc
mov
push
xor
add
fxam
pop
adc
cmp
add
add
(bad)
push
imul
adc
or
(bad)
sbb
hlt
ss
or
xchg
inc
call
add
cmp
mov
mov
ds
cmp
das
push
xchg
pop
fwait
call
inc
dec
fdiv
cmp
bound
sbb
jg
dec
shl
cld
retf
push
cwde
mov
push
jmp
ins
lods
ret
pop
mov
rcl
into
pop
outs
pop
fsub
scas
cmps
cwde
rol
icebp
sub
fisubr
into
mov
aam
xchg
lods
scas
sti
outs
cmc
scas
pop
cmc
jae
fwait
mov
mov
pop
and
mov
sub
call
idiv
sti
push
aas
mov
and
cs
sbb
mov
lds
je
das
ins
mov
ds
fidiv
retf
inc
sbb
arpl
inc
test
ret
jg
and
push
cmp
mov
cmps
xchg
dec
inc
pop
dec
pushf
xchg
imul
and
jecxz
pop
sub
cmp
pop
sub
pop
mov
mov
xor
sub
pop
das
rol
add
xor
xchg
repz
mov
sar
sub
jmp
inc
add
aas
xor
pop
mov
mov
fistp
aaa
or
xchg
cmp
setno
pop
mov
pop
lds
push
sub
ficomp
les
dec
mov
into
(bad)
mov
ret
jle
jmp
sub
dec
jecxz
mov
mov
push
cmp
mov
mov
stos
ins
scas
sub
pusha
xchg
fdivp
mov
inc
lods
dec
push
cmp
out
sbb
mov
push
ins
jmp
aad
stos
pop
je
and
push
fs
mov
mov
mov
or
pop
sbb
push
mov
ja
out
popf
mov
or
test
shr
sbb
(bad)
sbb
xor
pop
(bad)
mov
xchg
mov
shl
iret
pusha
ret
(bad)
int3
imul
xor
xchg
mov
sub
je
enter
mov
out
pop
or
fimul
movs
mov
retf
test
xor
jg
pop
sbb
rcr
(bad)
stos
fst
aaa
add
std
ds
dec
sti
pop
das
and
ret
stos
push
ins
and
dec
add
fwait
clc
std
stc
loop
mov
and
js
add
int
mov
or
in
pushf
bound
loope
leave
movs
or
xchg
xor
gs
cli
sti
adc
into
dec
(bad)
mov
dec
sub
stos
and
into
mov
cmp
push
dec
add
push
mov
out
cli
or
mov
mov
fadd
inc
rcl
inc
mov
jmp
pushf
jmp
push
pop
push
sbb
sbb
dec
push
adc
push
jle
std
dec
out
or
sbb
sub
sub
hlt
cmp
cmp
mov
mov
or
cmp
jne
dec
(bad)
imul
shl
mov
xor
jl
push
fistp
sbb
pop
add
(bad)
(bad)
icebp
xchg
(bad)
sar
xor
lock
adc
cmps
pop
adc
loopne
add
enter
or
outs
(bad)
jmp
jne
pusha
enter
jl
pop
add
fidivr
push
int
aam
bound
or
mov
jmp
push
dec
aad
mov
jmp
or
ss
loop
mov
push
scas
add
xchg
push
xor
xchg
or
pop
test
cld
sbb
jnp
mov
dec
cli
mov
ret
or
je
ins
mov
adc
and
add
imul
aam
inc
sbb
sbb
jno
mov
dec
rcr
push
mov
loope
outs
xor
or
xor
sbb
mov
pop
mov
sbb
pop
dec
sbb
lock
mov
loopne
popf
movs
jmp
(bad)
pop
mov
push
pop
stos
ret
or
or
mov
call
mov
test
inc
jg
enter
mov
popa
aaa
push
xor
jns
push
out
icebp
mov
(bad)
fisubr
jge
mov
push
sar
inc
push
or
adc
push
dec
adc
inc
add
jp
push
push
nop
or
dec
jp
repz
movs
jg
and
mov
and
mov
ret
inc
and
adc
inc
enter
xlat
sub
mov
or
sti
in
lods
cmp
add
fisttp
adc
pop
(bad)
out
ja
jecxz
and
cmps
cmps
mov
std
mov
mov
arpl
test
cmp
xor
cmps
dec
jne
xor
inc
mul
fsub
mov
pop
out
imul
adc
movs
scas
jle
sbb
sbb
pop
mov
adc
mov
add
(bad)
xchg
xor
mov
push
jnp
loopne
movlps
or
(bad)
call
daa
mov
data16
icebp
out
mov
popf
mov
popa
into
into
popf
sbb
ficomp
(bad)
in
jne
adc
inc
adc
hlt
mov
repz
imul
ins
shl
(bad)
mov
lds
cmp
loop
xchg
dec
add
mov
(bad)
xchg
push
dec
test
push
bound
cmp
cwde
shl
xor
lock
test
xlat
xor
fcom
aam
(bad)
jno
hlt
ror
retf
mov
dec
jmp
sbb
mov
push
or
dec
xor
enter
fstp
jo
cli
push
sub
ret
push
cmp
adc
repnz
fucomp
fild
or
xor
xor
fisubr
mov
sub
ja
push
or
mov
rcl
xchg
pop
ret
pop
ret
fisub
xor
rcl
add
loopne
repz
(bad)
enter
xchg
pop
cs
(bad)
cmp
loope
inc
adc
push
sar
xchg
mov
(bad)
cmps
ins
add
sub
or
mov
adc
adc
pop
push
adc
adc
inc
jmp
xchg
jp
xchg
out
dec
dec
or
mov
cwde
and
add
xor
or
call
xor
xor
pop
ins
pop
dec
pop
cmp
les
push
and
inc
mov
sti
and
repnz
(bad)
imul
add
out
(bad)
rcl
xor
mov
sahf
mov
addr16
das
mov
jnp
dec
mov
out
sbb
mov
shl
cmp
loop
sub
test
sub
xor
or
dec
push
bound
xchg
in
jecxz
inc
push
das
inc
pop
mov
xchg
push
mov
int3
xor
mov
clc
fdivr
imul
je
mov
mov
(bad)
cld
aas
push
sar
iret
ret
fnstcw
andnps
sbb
jle
fiadd
and
aam
test
xchg
mov
sti
fld
add
sub
sub
call
push
sub
mov
in
mov
xor
push
dec
mov
retf
fst
in
inc
sbb
jno
ret
outs
int3
into
div
comiss
mov
ins
add
push
call
or
jmp
je
hlt
cmp
xchg
mov
icebp
pop
sub
repnz
jnp
cmp
xor
adc
xchg
dec
lahf
ins
rcr
fimul
mov
mov
mov
mov
xor
sbb
jmp
xlat
or
cmps
inc
out
xor
sbb
xchg
rol
inc
retf
es
aas
jmp
lods
fs
lahf
test
popa
(bad)
cmp
jmp
jbe
xchg
mov
stos
scas
jb
mov
fs
test
leave
or
ffree
lods
inc
xor
jb
imul
clc
outs
xchg
jge
pusha
fadd
int
popf
and
jns
dec
fsubr
jno
das
jno
fwait
xchg
lds
sbb
or
push
stos
out
into
dec
inc
popf
mov
adc
fisub
mov
lods
or
jnp
mov
hlt
or
in
enter
pop
(bad)
lods
cld
pop
fisttp
add
sahf
fld
mov
xchg
rcl
xor
mov
ret
ret
adc
pop
loop
xor
xchg
or
mov
inc
pop
icebp
fwait
or
lods
mov
and
add
rcl
neg
bound
das
ror
dec
iret
push
mov
or
out
pop
jg
mov
jb
mov
xchg
push
imul
sub
fdivr
inc
movs
addr16
in
xor
jne
jns
movs
cmp
cmp
movs
sub
dec
cmps
test
xlat
xchg
xor
mov
in
jbe
jae
aad
les
retf
add
cld
loopne
xchg
dec
imul
mov
sbb
imul
mov
or
mov
sub
iret
mov
mov
adc
bound
loope
shl
pusha
fs
jmp
scas
or
test
push
popf
jecxz
and
mov
push
(bad)
dec
pop
test
js
in
jnp
xor
pop
inc
add
and
aas
push
push
scas
sbb
(bad)
jge
sub
sar
aam
mov
mov
leave
jle
sar
clc
jl
cli
inc
or
sub
push
dec
jle
into
imul
mov
push
xchg
jbe
ret
or
je
sub
out
adc
mov
call
mov
xchg
mov
jp
ror
mov
repz
push
jle
mov
in
and
addr16
push
mov
outs
mov
test
mov
inc
and
fist
push
iret
pop
into
lods
and
mov
stos
dec
test
fcom
rcr
pop
mov
cdq
hlt
xor
pop
jg
out
jp
and
cld
xchg
jb
push
cmc
xchg
cmc
mov
sahf
dec
inc
cmp
pop
iret
mov
push
in
cli
clc
jle
ret
sbb
lahf
stos
ror
mov
out
shl
popa
push
inc
test
push
mov
inc
fidiv
sti
xor
pop
xor
arpl
ret
lahf
in
push
dec
mov
fs
cmps
push
retf
cmp
lock
pop
or
mov
retf
jno
dec
pop
adc
xchg
mov
pushf
xchg
scas
pop
sub
sub
jecxz
movs
ins
adc
(bad)
sbb
xchg
jp
in
js
imul
pushf
shr
jmp
out
(bad)
ja
add
mov
les
stc
add
js
inc
inc
jp
dec
pop
aad
jecxz
imul
pusha
mov
ins
test
punpckldq
inc
fiadd
jmp
popa
sub
fwait
js
movs
sub
enter
xchg
fld
mov
rcr
ins
(bad)
imul
outs
not
push
pushw
push
test
ins
cli
int
ror
and
imul
xor
mov
or
loope
push
dec
popa
shl
pop
dec
mov
and
add
jns
ror
popa
(bad)
(bad)
cmp
jmp
out
or
pop
repnz
jo
icebp
sub
mov
sbb
sbb
(bad)
int3
dec
out
ret
ss
sbb
mov
std
in
sub
dec
mov
movs
xor
push
enter
adc
push
and
mov
test
shr
jbe
leave
dec
aam
pop
push
jmp
adc
fcom
lock
std
arpl
jle
push
jne
mov
ret
xchg
add
mov
mov
inc
movs
or
and
sbb
cwde
repnz
xchg
mov
jle
inc
dec
jnp
lea
cli
into
mov
push
mov
push
adc
test
das
mov
ret
jb
or
mov
test
adc
aam
push
frstor
add
aas
int
xor
push
or
mov
cdq
adc
mov
xor
pop
fldcw
inc
aas
imul
push
jmp
aad
stc
mov
cwde
or
sbb
jbe
cmp
retf
sbb
js
xlat
mov
lods
cmp
in
mov
push
inc
mov
test
dec
dec
adc
cli
adc
ds
ins
sbb
in
or
xor
movs
cwde
xchg
in
inc
adc
xchg
jo
cmc
cli
enter
mov
imul
mov
push
das
ss
out
adc
jnp
adc
jle
mov
inc
lods
cmp
jecxz
xchg
mov
mov
push
lahf
mov
das
int3
leave
out
mov
popf
jno
cmp
xor
stos
push
sahf
cmp
mov
cmps
push
test
call
inc
xor
in
sub
or
aam
(bad)
mov
mov
xchg
jg
fwait
js
xor
sub
ins
push
imul
xchg
into
cmps
popa
in
inc
in
inc
or
enter
pop
xchg
sar
int
(bad)
sahf
retf
sub
nop
and
mov
cmps
ret
xlat
add
je
push
xchg
test
add
xchg
pop
rcr
mov
pop
(bad)
(bad)
fs
dec
ins
push
mov
xor
pop
jo
jp
not
mov
cld
push
mov
lods
jl
inc
xchg
xchg
enter
inc
bound
mov
xchg
and
jne
out
arpl
add
les
xor
push
lock
cmp
jl
jns
pushf
push
mov
mov
fmul
sub
and
dec
cmp
shl
inc
push
mov
fcomp
xchg
cs
cmp
jmp
mov
jno
push
or
sub
movs
popa
data16
pop
jae
into
in
addr16
add
clc
out
movs
movs
mov
pop
inc
nop
loopne
mov
inc
shl
push
sbb
mov
data16
and
jmp
push
or
retf
sub
pop
das
pop
sub
mov
ins
call
out
add
xchg
pop
mov
neg
inc
or
retf
or
add
enter
inc
das
enter
push
outs
ret
pop
inc
(bad)
(bad)
mov
test
or
add
fisttp
inc
(bad)
mov
movs
inc
sub
test
or
out
popf
pop
cmps
std
enter
fild
lea
arpl
push
nop
fnstcw
dec
stos
push
cli
ja
xchg
pop
adc
int3
fst
inc
fld
clc
xchg
sub
sar
push
iret
pop
mov
addr16
fldcw
push
mov
pop
daa
add
and
scas
jg
xchg
iret
test
xor
pop
inc
in
fwait
sbb
jb
pop
test
jp
in
dec
mov
dec
cmp
int
(bad)
daa
cmp
pop
or
xlat
pop
mov
in
out
data16
jmp
test
jg
cld
out
mov
push
mov
mov
sbb
ja
xchg
enter
push
dec
arpl
jae
fld
test
mov
int3
ffree
scas
mov
shl
cmp
add
cmp
mov
(bad)
jbe
xchg
pop
imul
in
outs
add
jo
lds
data16
xchg
pop
inc
mov
cmp
sub
sbb
add
push
xchg
mov
mov
push
mov
add
cwde
mov
cmc
mov
or
in
or
or
adc
cwde
retf
push
test
retf
or
stos
mov
xchg
or
dec
inc
dec
adc
xchg
je
push
push
(bad)
dec
mov
inc
cmp
ins
shr
aas
int
add
jno
mov
pop
stos
out
shr
mov
icebp
jecxz
jmp
cmp
inc
and
aas
idiv
cld
xchg
inc
in
xchg
cli
mov
push
push
stos
fcomp
into
inc
add
sar
or
fdivrp
add
mov
lea
lock
mov
xchg
xlat
test
xor
xchg
pusha
mov
retf
outs
dec
fucom
gs
lock
mov
push
push
sahf
stos
(bad)
xchg
imul
pop
jne
rol
mov
mov
push
cmp
add
lea
dec
dec
ds
cmp
imul
jno
stos
jnp
(bad)
jo
ins
push
scas
aam
fucomp
xchg
sub
adc
cmp
sub
dec
shr
lods
mov
and
outs
icebp
mov
inc
or
pushf
jecxz
jae
inc
and
mov
inc
cmps
and
enter
popa
xchg
fwait
xchg
sbb
or
jmp
popf
std
icebp
dec
call
mov
add
sub
cmp
enter
xchg
xor
pop
and
fwait
jno
sti
sbb
mov
stc
sbb
retf
push
dec
ret
xor
pushf
sub
or
enter
xchg
arpl
je
movs
jl
pop
pop
(bad)
pop
inc
pop
jl
jmp
and
div
es
retf
or
adc
xchg
sub
adc
nop
repz
out
sbb
push
lock
jmp
js
inc
mov
pop
adc
jge
repnz
or
xchg
int3
sahf
lahf
push
xchg
movs
mov
loope
fucomp
idiv
mov
push
fsub
(bad)
ficom
add
push
dec
mov
add
mov
ss
(bad)
movs
inc
imul
inc
jge
outs
movs
test
dec
lahf
jge
gs
dec
in
rcl
mov
mov
dec
dec
mov
loope
sbb
sbb
ins
jb
test
mov
(bad)
loope
aad
or
mov
mov
xchg
adc
ins
bnd
cmp
aaa
push
inc
mov
push
xor
mul
nop
nop
stc
pop
xor
xchg
int
sub
in
add
mov
adc
movs
gs
pushf
stos
xor
or
fwait
xchg
out
int
pusha
fcom
inc
and
jb
jb
jge
scas
mov
push
or
enter
cmps
in
aad
jnp
ret
dec
cmps
xor
cmps
(bad)
(bad)
shl
sub
repnz
pop
retf
loopne
mov
adc
mov
lea
xor
scas
mov
jo
mov
fsub
xchg
inc
xchg
pusha
fistp
stc
jp
test
mov
test
popa
adc
scas
call
test
out
sub
test
mov
and
mov
cdq
add
mov
cmp
rcr
ins
cmc
aas
mov
(bad)
adc
inc
fwait
cmp
leave
add
in
lahf
iret
mov
js
arpl
and
arpl
xchg
push
call
jge
xor
pop
mov
ja
cmps
and
(bad)
in
xor
jmp
pop
pop
aas
adc
aam
xor
iret
repnz
sub
mov
and
lds
jb
add
loopne
into
xchg
cmps
ja
dec
jp
add
int
pop
sbb
add
lea
add
mov
iret
ror
cmp
inc
push
std
js
clc
pop
ror
or
cmp
xor
inc
mov
icebp
or
jo
repz
not
jb
push
mov
nop
sub
mov
dec
test
mov
mov
call
mov
jnp
push
jl
dec
in
push
mov
and
lods
pop
push
data16
jno
imul
sti
pop
mov
push
outs
into
js
fdivr
ins
push
imul
jge
daa
lahf
imul
je
mov
out
xor
mov
cwde
inc
idiv
sbb
enter
push
stos
or
or
add
pop
fcomp
mov
sbb
inc
scas
ins
repz
jns
dec
addr16
aad
xchg
popa
loopne
jne
xlat
call
sbb
leave
mov
inc
test
in
mov
aas
dec
and
mov
add
mul
outs
je
cdq
pop
call
ret
or
xchg
repnz
or
sub
jge
push
dec
or
add
mov
xchg
mov
fild
dec
add
cmp
and
(bad)
movs
icebp
add
loopne
pusha
daa
push
pop
mov
leave
jg
mov
lea
dec
not
cmc
sub
ficom
dec
lds
adc
xor
jmp
or
stos
outs
bound
adc
xor
adc
cmp
mov
out
das
out
sbb
or
jl
rcr
sbb
clc
cmc
test
and
sbb
enter
out
xchg
mov
mov
inc
add
sti
sub
sbb
push
nop
(bad)
js
mov
sub
cmp
out
rcr
loop
imul
inc
add
or
push
clc
inc
mov
test
mov
or
mov
in
test
push
ret
or
jl
iret
ins
icebp
or
fcomp
dec
sbb
sub
xor
cdq
and
imul
sub
jne
sub
pop
ins
sbb
fneni(8087
popa
js
mov
outs
repz
inc
out
daa
xchg
fcom
adc
pop
mov
cdq
(bad)
push
xor
mov
mov
call
push
sub
into
jmp
outs
cmp
sbb
fisubr
inc
sub
sub
xor
dec
add
lods
int3
mov
ins
outs
pop
test
aad
adc
cdq
sub
fisttp
(bad)
inc
adc
sbb
push
inc
jns
pop
jecxz
sub
jae
movs
or
retf
mov
les
js
inc
sbb
cdq
jo
adc
popf
pop
sbb
jmp
xchg
inc
xor
or
jb
mov
fisub
sub
je
xor
in
or
push
dec
xor
push
ror
mov
dec
movs
jo
mov
imul
sar
lods
fnstsw
aaa
sti
fbld
pop
cmc
mov
stos
(bad)
dec
fstp
cmp
pop
repz
popa
movs
xchg
stos
push
mov
out
cmp
out
jb
inc
(bad)
movs
jg
imul
and
push
hlt
rcr
jb
and
aad
adc
inc
dec
or
push
movs
pushf
adc
inc
push
addr16
dec
and
mul
jno
mov
cmp
leave
or
rcr
adc
or
cmps
inc
jno
cwde
mov
mov
and
push
fild
or
movs
imul
lahf
jo
xchg
jnp
mov
sbb
jae
xor
dec
es
stos
popf
inc
jmp
push
jns
add
xor
inc
pop
(bad)
jb
ins
push
in
(bad)
addr16
cmps
outs
inc
cmps
and
outs
mov
(bad)
jne
(bad)
mov
enter
cmc
jb
retf
lods
outs
and
inc
int3
aas
fnsave
inc
fnstcw
inc
ror
jmp
sbb
call
jb
or
imul
mov
mov
stos
call
mov
jecxz
in
cmp
sbb
sbb
repz
test
adc
pop
mov
loopne
cmp
adc
mov
ja
add
cld
cwde
xchg
dec
jmp
data16
sub
sub
push
lods
bound
rcl
xor
cld
ret
lods
add
clc
inc
fist
or
cmps
pop
aam
pusha
xchg
inc
and
add
popf
jno
fld
push
pop
in
scas
mov
mov
sahf
cmp
dec
adc
ins
fisttp
rcl
das
repz
gs
imul
push
popa
fisttp
adc
stos
icebp
in
inc
call
dec
mov
xchg
lea
lods
xor
xchg
setp
stc
push
inc
xor
inc
lods
mov
leave
in
into
out
xor
ins
addr16
dec
cmp
cwde
xor
lods
and
sub
outs
fbstp
out
adc
movs
int
outs
cwde
mov
shr
lods
mov
ss
fs
mov
movs
je
cmp
stos
sub
sub
movs
fdivr
jbe
xchg
imul
cli
les
loopne
call
outs
xor
popf
and
out
sub
dec
and
cmp
pop
mov
sti
in
xor
mov
pop
stc
jns
push
cmc
fistp
mov
xor
sub
mov
test
test
arpl
inc
cmp
xor
test
stos
loopne
push
pop
hlt
ror
push
mov
sar
bound
pop
inc
fadd
push
ja
jle
daa
sbb
sub
das
loope
mov
sbb
icebp
dec
adc
sar
fs
xor
(bad)
lods
inc
push
adc
aam
fmul
rol
in
push
out
xor
inc
sub
mov
sbb
cmp
ins
ror
jns
push
cmp
and
out
jno
sub
in
inc
xor
cmp
mov
movs
lahf
shr
sbb
push
or
enter
xchg
add
xchg
imul
in
inc
adc
stos
cmp
or
cmp
ret
arpl
inc
mov
nop
jb
jge
mov
pop
jo
test
push
adc
leave
xchg
inc
or
popf
or
pop
fidiv
int
mov
pusha
dec
scas
adc
jecxz
mov
push
std
jge
adc
in
cld
or
imul
cmps
sub
loopne
int
popa
and
and
mov
sub
jmp
add
or
sub
sub
jp
in
push
xor
in
xchg
add
push
fst
xchg
push
or
xchg
fisttp
and
and
or
mov
push
sub
cli
stc
cmp
rcr
stos
and
jmp
scas
(bad)
in
fisttp
gs
cmp
cli
ror
js
xchg
rcr
cdq
xchg
in
push
shr
mov
pop
out
xlat
jle
pop
fcomi
data16
jmp
push
pop
mov
xchg
adc
cwde
in
jbe
outs
mov
lds
inc
sbb
pop
mov
dec
test
xchg
add
fwait
cmp
mov
pop
mov
mov
into
sbb
sbb
cs
xchg
in
adc
push
popa
dec
lods
add
ds
(bad)
in
add
repz
mov
adc
pop
out
push
es
mov
mov
pop
xchg
cmp
aas
mov
push
mov
sbb
cmc
dec
adc
ret
lods
or
inc
sub
and
and
je
or
adc
sar
pop
pop
cmp
and
ret
out
or
fwait
cmp
test
les
repnz
leave
clc
sbb
retf
cmc
out
mov
cli
arpl
xchg
movs
div
ret
pop
push
mov
push
pop
dec
aas
loope
adc
inc
(bad)
pop
xor
imul
dec
(bad)
sub
pop
mov
mov
in
nop
mov
call
xchg
push
push
sbb
test
adc
or
pop
stos
sub
mov
repnz
sub
mov
out
xchg
(bad)
idiv
push
out
and
or
pop
xchg
mov
fs
mov
or
sar
or
jbe
addr16
aam
mov
mov
aas
jmp
data16
sbb
enter
xchg
or
xor
push
cld
mov
sub
(bad)
dec
retf
test
inc
outs
sub
jecxz
mov
xchg
jecxz
xchg
push
push
mov
xchg
cmc
xchg
loopne
ss
inc
xlat
mov
fmul
cmp
push
fsub
jns
mov
pop
sub
bound
add
mov
(bad)
jmp
ins
ins
push
push
inc
jo
sahf
test
arpl
in
call
cmp
xchg
inc
fsub
outs
pop
outs
dec
dec
(bad)
in
pushf
sbb
mov
add
adc
cmps
mov
mov
dec
jmp
sub
data16
dec
mov
ins
imul
ret
lock
aas
test
loopne
leave
in
int3
push
outs
mov
cld
iret
cwde
lock
jp
aas
cmps
or
or
je
mov
push
jg
jecxz
pop
jb
call
jp
dec
rol
add
mov
mov
mov
xchg
shl
fnstenv
jl
shl
popf
inc
hlt
icebp
mov
ins
lds
jbe
jns
fiadd
xor
je
nop
(bad)
fisub
pop
fsubr
imul
aam
xor
mov
adc
and
mov
xchg
mov
mov
mov
data16
test
stos
ins
mov
xchg
test
jne
cs
inc
fwait
cmps
movs
(bad)
pop
mov
cld
pop
jno
add
je
das
dec
enter
sbb
pop
or
mov
mov
jecxz
das
add
dec
xor
in
iret
aas
lea
cld
or
mov
ret
lods
sub
out
sbb
jno
push
mul
and
movs
repnz
pop
pop
push
sbb
into
and
icebp
adc
cmps
pusha
ins
sbb
or
fs
sar
jbe
mov
dec
mov
sbb
cmp
rol
mov
mov
lahf
leave
jae
and
adc
lock
(bad)
div
cdq
(bad)
sbb
xchg
mov
cdq
movs
jnp
mov
aas
and
jbe
or
jle
mov
add
mov
(bad)
sub
es
jmp
pop
out
pop
nop
stc
das
dec
push
into
jge
pop
mov
dec
add
ins
inc
cmp
out
push
and
outs
xor
pushf
dec
in
add
cmps
add
inc
lock
adc
test
(bad)
sbb
call
das
and
pusha
push
push
adc
ja
lods
pusha
xchg
aam
neg
fcom
movs
in
and
not
scas
jne
adc
mov
cmp
sbb
inc
cli
jecxz
push
jb
push
enter
int3
add
cmps
sar
out
jge
pop
inc
int3
std
cwde
mov
mov
movs
mov
or
int3
or
in
jl
sub
mov
or
adc
sbb
test
jns
lds
scas
in
iret
sbb
cdq
dec
outs
in
jnp
or
(bad)
inc
imul
cmps
and
aam
sahf
mov
mov
push
(bad)
(bad)
(bad)
and
and
mov
mov
dec
jmp
and
(bad)
imul
pop
xchg
in
shr
jb
cdq
test
jne
popa
(bad)
aad
push
mov
(bad)
stos
push
mov
out
add
in
push
mov
jnp
lods
stc
lahf
iret
xchg
imul
nop/reserved
mov
rcl
mov
movs
mov
lds
mov
push
(bad)
xchg
outs
fdivr
repnz
test
(bad)
mov
cmp
ret
fsubr
(bad)
out
mov
(bad)
(bad)
and
scas
mov
mov
mov
pop
test
mov
jmp
sbb
pop
push
add
xor
scas
mov
and
mov
xchg
psrlw
dec
jae
mul
mov
adc
push
ins
dec
loop
push
mov
stos
int3
jb
and
(bad)
lahf
add
xor
sub
cmps
loope
push
xchg
shl
xchg
sbb
daa
popa
fisub
cli
xchg
popfw
out
dec
scas
into
or
int3
push
mov
push
xchg
sar
test
push
or
pop
jbe
or
sbb
xchg
inc
push
mov
int3
out
add
add
(bad)
stc
out
mov
inc
jnp
pusha
jmp
shl
adc
add
push
xchg
test
icebp
push
mov
mov
xor
outs
fwait
add
stos
out
aam
dec
addr16
dec
add
test
or
pop
inc
fnstcw
sub
xchg
fucomip
scas
jnp
xchg
push
repnz
sbb
jle
cmps
add
mov
les
adc
es
test
call
aad
(bad)
jmp
pop
cmp
adc
nop
jne
and
ins
and
cmp
in
in
lock
add
stos
adc
cs
fwait
repz
pop
dec
push
fist
sbb
mov
xchg
daa
jg
mov
dec
loopne
dec
stos
mov
in
mov
inc
inc
add
sub
lock
pop
rcr
les
imul
push
stos
inc
inc
cmp
push
ins
gs
ret
pusha
movs
pop
push
inc
xchg
gs
fwait
cmp
pop
pop
loope
mov
jge
(bad)
jg
pop
pusha
jmp
ins
int
push
sub
sar
push
or
or
mov
in
int
cmp
stos
jg
mov
cmps
mov
xchg
add
data16
pop
int3
sbb
ja
jns
int
cmp
adc
pop
sub
loopne
stos
pop
repz
jo
or
jbe
loope
sub
cmp
pop
and
dec
repnz
(bad)
test
mov
push
cwde
ror
inc
xchg
fld
xor
in
dec
inc
icebp
inc
and
cmp
je
clc
retf
scas
enter
mov
xor
sbb
or
shr
movs
sub
pop
out
lahf
fild
je
add
in
aaa
cmp
add
scas
ins
mov
sar
inc
out
lds
jb
mov
lods
dec
(bad)
and
or
cmp
mov
inc
push
fstp
inc
push
xchg
sbb
call
test
outs
imul
jmp
sub
mov
cmps
sub
popf
sar
sub
cmp
outs
pop
popa
xchg
adc
and
sub
dec
jecxz
mov
dec
retf
pop
jb
pop
and
sub
out
inc
das
cwde
mov
push
ret
sbb
arpl
scas
jae
or
jge
stos
nop
stc
sahf
jl
cli
ins
cdq
dec
scas
mov
scas
pop
or
(bad)
fcom
or
cli
jp
call
call
(bad)
push
and
or
sub
nop
in
sbb
jno
or
aas
imul
cmp
cmp
cmp
mov
pop
mov
dec
lds
jle
cwde
fidiv
inc
nop
xor
sbb
lea
cmc
fiadd
ret
lods
mov
mov
jns
clc
sbb
adc
loopne
movs
push
mov
call
movs
dec
outs
pop
xchg
test
imul
xchg
and
shl
lods
rol
push
inc
pop
mov
enter
and
inc
dec
out
sbb
jmp
stos
xchg
pop
pushf
cmp
retf
or
mov
xchg
pop
add
jle
daa
test
xlat
dec
jne
mov
jle
pop
enter
dec
mov
inc
jo
mov
leave
sbb
mov
sub
std
stc
or
dec
dec
ins
pusha
gs
aas
inc
in
ret
push
cs
inc
inc
leave
push
inc
pop
mov
ds
inc
or
mov
nop
mov
mov
mov
xchg
xor
inc
push
popa
mov
push
pop
pop
das
retf
je
jae
pop
push
lahf
jno
add
mov
mov
cmp
jbe
xchg
inc
xchg
jle
xchg
sbb
and
pop
rcl
add
imul
clc
lea
in
shl
arpl
cmp
jecxz
lods
inc
ror
add
push
shr
pop
ins
sbb
fldcw
repz
fcomi
call
inc
jne
in
in
sar
jne
mov
sbb
xchg
in
aaa
gs
imul
ss
shl
leave
adc
aam
mov
test
mov
jns
adc
pop
(bad)
retf
xor
out
xchg
leave
mov
jp
outs
(bad)
inc
loopne
inc
mov
lods
add
mov
shl
push
push
xlat
mov
adc
lea
xchg
add
mov
sbb
mov
enter
arpl
add
lds
js
cmp
mov
cli
cwde
repnz
cmp
loop
es
jb
cmp
pop
push
add
outs
iret
ins
fs
adc
(bad)
mov
sbb
cdq
test
sub
mov
dec
pop
scas
cld
and
lock
repz
mov
mov
jmp
dec
ins
sub
int
loop
mov
and
push
fs
cmp
movs
mov
mov
inc
adc
cmp
mov
into
les
cmp
pop
adc
bound
xchg
jo
jmp
into
out
daa
and
mov
in
cmp
cmp
fs
enter
fidivr
lods
pusha
fild
retf
stos
lock
imul
jg
push
hlt
and
dec
icebp
jae
xchg
pusha
cld
cmp
cmp
add
mov
movntq
out
lock
sub
mov
int
cmp
jle
repnz
jmp
xchg
out
cli
(bad)
in
or
xlat
ret
test
pop
and
sub
scas
fisttp
pop
inc
pop
loopne
retf
xchg
movs
dec
cwde
repz
sbb
outs
pop
adc
push
sbb
retf
sti
pop
push
cmp
stos
add
cmp
and
out
push
shl
jo
std
mov
nop
inc
inc
and
pop
jge
mov
xchg
cs
in
movs
imul
fsubr
push
leave
push
or
mov
xor
aaa
cs
lea
shl
mov
call
out
sub
call
xor
fldcw
and
cld
fldcw
and
inc
aam
mov
or
dec
adc
sbb
jecxz
jns
test
jge
or
aam
shl
ja
and
ret
dec
cmc
or
int
fimul
mov
adc
addr16
mov
inc
mov
sar
push
mov
psubsw
sti
dec
fnstsw
xor
sahf
int3
inc
nop
lods
retf
sbb
int3
xchg
int3
mov
in
retf
sub
repz
adc
(bad)
out
pop
jo
pop
cli
retf
outs
lds
test
mov
xchg
xchg
sbb
in
push
pop
aas
out
dec
scas
sahf
(bad)
fnstcw
lea
sub
pop
ins
jbe
jns
rcr
cmps
inc
dec
mov
cmc
dec
std
fcmovb
retf
por
fstp
(bad)
out
jg
movs
in
enter
outs
jbe
or
add
sbb
and
pop
cmp
ds
sbb
dec
and
dec
clc
push
ins
aam
xchg
ins
in
or
stos
stc
mov
in
mov
sub
test
lock
(bad)
jge
jae
neg
cmp
in
jbe
ja
aam
fld
pop
inc
add
push
ins
ss
adc
or
stos
sbb
and
pop
scas
stos
jle
(bad)
push
mov
sbb
ss
jb
adc
nop
(bad)
pop
mov
iret
cmc
jnp
(bad)
mov
mov
in
push
outs
push
sbb
daa
and
arpl
mov
xchg
and
xor
lock
popa
xchg
imul
jnp
sub
ins
test
jmp
push
add
fwait
adc
push
cmps
addr16
sbb
fimul
mov
sbb
call
mov
lahf
dec
xlat
push
bound
(bad)
adc
fistp
sub
mov
mov
shl
mov
jnp
(bad)
jmp
add
pop
xchg
fnsave
cmp
aaa
jbe
or
mov
sti
outs
cdq
sub
xchg
mov
or
mov
(bad)
and
sub
mov
jmp
mov
std
ins
cmp
inc
test
jne
push
dec
clc
mov
loope
dec
xlat
repnz
retf
(bad)
outs
sbb
stos
mov
sbb
xchg
mov
jmp
push
jb
dec
fcmovnb
xchg
push
push
push
cwde
ins
aaa
sbb
push
cmp
xchg
enter
cmc
arpl
ret
call
jnp
pop
loope
scas
sub
fmulp
mov
dec
cmp
and
cmp
minps
inc
pop
outs
xor
sar
mov
xchg
outs
aad
cmp
adc
xchg
test
jbe
push
in
(bad)
jb
call
add
mov
inc
pushf
movs
and
push
add
mov
pusha
in
inc
mov
lds
stc
pop
mov
xchg
jae
sar
pusha
cmp
jp
mov
int
jp
sahf
lds
and
mov
xchg
adc
xchg
sar
retf
mov
inc
jnp
std
int
pop
pop
test
stc
retf
ret
das
jmp
out
or
das
or
clc
add
dec
lea
fmul
push
mov
mov
sub
inc
adc
clc
push
jl
nop
test
int3
ret
sub
xor
fidivr
aam
pop
push
mov
cmp
mov
mov
cdq
xor
cmp
(bad)
pop
mov
jl
xchg
js
aad
pop
pop
or
mov
jbe
mov
cmps
xor
fidiv
(bad)
adc
or
es
mov
jl
fldcw
fdivr
adc
mov
and
mov
ret
jbe
sub
stos
adc
xchg
jle
ins
lock
jae
mov
mov
pushf
cmps
cmps
lods
mov
pop
jmp
jmp
jo
jne
adc
pusha
lea
pop
or
xchg
mov
repnz
outs
adc
jae
jb
sbb
test
pop
data16
xlat
shl
sti
neg
or
mov
popa
xchg
lea
xor
dec
fldcw
loope
cmps
sub
movs
aam
mov
adc
xor
mov
movs
int3
int
aas
nop
in
sub
adc
add
inc
imul
scas
xor
jnp
fisttp
(bad)
aam
jmp
into
push
inc
jbe
movs
jne
mov
and
scas
mov
(bad)
xchg
cmp
jno
mov
mov
mov
fwait
stos
push
adc
sbb
jno
jg
mov
jge
cmp
pop
je
pop
and
cmp
sub
(bad)
pop
fidiv
nop
les
sub
xor
icebp
xor
dec
mov
loope
stos
outs
dec
hlt
ds
and
popa
or
push
push
xchg
xchg
mov
pop
imul
and
cmps
push
rcr
enter
(bad)
sbb
fistp
xchg
fs
sti
jns
idiv
mov
int
push
and
mov
aad
lea
loope
mov
mov
and
aaa
test
popf
inc
pop
aad
mov
retf
mov
inc
xor
clc
jl
imul
pusha
dec
jbe
mov
call
imul
xor
dec
icebp
repz
adc
aaa
xchg
push
pop
loope
adc
adc
popf
mov
out
movs
xchg
aaa
sbb
xchg
sbb
inc
fidiv
add
mov
pop
ret
out
add
jl
push
push
bound
dec
lss
pop
test
int3
and
or
je
jbe
test
or
xchg
push
mov
xchg
mov
hlt
stc
jg
in
sar
xor
jae
inc
sub
aam
ret
mov
push
imul
inc
adc
xlat
and
cmps
out
rcr
mov
xchg
ins
jbe
jns
ss
popa
outs
popa
inc
inc
rcr
jmp
or
out
dec
pop
cmp
mov
mov
pusha
jmp
jl
cmp
mov
inc
test
dec
std
ret
popw
pop
mov
pushf
dec
or
mul
retf
or
push
jg
lock
or
or
inc
add
int3
shr
mov
into
mov
idiv
jne
xchg
sbb
cmp
icebp
sub
sti
mov
inc
or
push
jge
shl
cmp
(bad)
sub
jmp
push
dec
xchg
xchg
mov
xchg
and
inc
adc
cmps
in
xchg
push
call
mov
or
mov
shl
add
dec
mov
or
push
jmp
xor
add
imul
cmp
push
pushf
movs
shl
xchg
push
xor
aaa
std
int
or
xchg
cmp
js
cmc
sub
sub
sbb
cmp
movd
mov
mov
jmp
(bad)
jbe
mov
xor
(bad)
sbb
and
push
adc
fmul
call
pop
imul
xlat
pop
aad
and
jb
mov
pop
cmp
outs
mov
jle
pop
xlat
dec
fs
imul
and
sub
jns
std
inc
(bad)
dec
jmp
pop
jno
jecxz
(bad)
push
or
or
dec
dec
aaa
and
fistp
out
sub
repz
lods
push
adc
movs
rcr
dec
call
xor
add
fadd
scas
mov
sbb
mov
arpl
sub
pop
cmp
cmp
push
jle
ret
rcl
xchg
aaa
or
stos
test
mov
jo
xor
imul
fmul
imul
(bad)
sbb
xchg
mov
cmc
add
add
cli
push
loop
pop
cmp
jno
mov
es
pop
push
fimul
jmp
in
outs
dec
sbb
fbld
cmp
loope
dec
mov
fucomi
jle
loope
lods
add
xor
mov
xor
ror
mov
mov
xor
aad
inc
mov
xchg
jnp
jle
xchg
add
jns
dec
add
stos
or
dec
repz
cmp
xchg
cwde
inc
xchg
lea
mov
lea
fld
test
(bad)
in
push
mov
mov
add
js
pop
mov
mov
in
inc
push
fnstenv
scas
adc
dec
add
mov
(bad)
xor
leave
arpl
sti
stos
stos
stos
scas
cmp
or
iret
std
sub
ins
jg
(bad)
cmp
sub
clc
movs
mov
sub
(bad)
sar
dec
lock
outs
inc
cmp
mov
mov
(bad)
and
test
mov
jg
mov
adc
mov
jge
xchg
dec
gs
sub
pop
jl
cmp
mov
mov
jg
je
and
dec
push
cmp
adc
push
fisubr
cmc
(bad)
jo
shl
sbb
lds
xchg
dec
je
in
arpl
push
sbb
jmp
push
jbe
or
sbb
mov
clc
(bad)
stos
clc
sbb
test
fsub
ss
std
dec
jecxz
in
ret
inc
fmul
or
das
mov
je
xchg
add
push
sub
lds
mov
call
add
mov
in
fild
inc
fsub
sub
mov
movs
in
mov
dec
ds
fmul
shr
test
push
jmp
js
sub
dec
cmp
call
adc
out
or
sti
inc
jl
bound
pusha
loop
mov
rsm
int
mov
pop
mov
jmp
sbb
pop
cmc
inc
or
push
test
pusha
jb
stc
jne
pop
xlat
bound
or
or
add
add
push
cli
lods
shr
shl
out
rcr
sbb
xor
add
inc
iret
repz
xchg
cmp
jg
xchg
or
push
out
pop
adc
(bad)
in
pop
push
dec
mov
mov
js
dec
or
jns
pop
bound
push
ss
scas
call
sub
inc
lock
mov
fnstcw
stos
dec
ss
addr16
int
mov
xchg
push
sub
jnp
add
lock
sub
pop
nop
xor
neg
shl
mov
mov
popf
cwde
mov
add
clc
jo
cmp
xor
es
stos
push
and
lods
xchg
mov
dec
inc
push
into
adc
adc
mov
retf
mov
mov
loopne
xor
fdiv
mov
mov
push
jbe
cmp
aad
das
jne
movs
popa
cli
push
or
pop
popf
pop
adc
movs
ja
dec
pushf
int
inc
pop
lods
jg
dec
icebp
push
fisttp
test
je
je
fucomp
leave
jecxz
jo
pop
out
addr16
mov
cwde
outs
(bad)
in
and
jle
sbb
lock
mov
call
data16
fld
inc
pop
test
mov
fstp
shr
xlat
add
jbe
(bad)
lods
stos
scas
mov
mov
cs
fptan
jb
jnp
mov
dec
xor
pop
push
inc
add
mov
test
dec
add
in
xchg
js
or
pop
icebp
mov
jge
aaa
aaa
mov
(bad)
scas
jnp
add
jae
and
pop
adc
fild
mov
aas
mov
mov
aad
push
addr16
rcl
mov
mov
adc
or
sbb
cdq
lea
or
mov
push
adc
arpl
aaa
cmp
shr
loopne
in
gs
inc
push
fwait
jmp
fwait
scas
imul
inc
jg
pop
cwde
not
aas
cmp
cld
test
(bad)
lods
arpl
movs
push
mov
mov
retf
adc
out
stos
scas
and
sbb
loop
lahf
mov
mov
cmp
sub
dec
xor
cmps
in
(bad)
push
jae
add
and
sbb
test
aaa
pop
je
sbb
popf
cmps
sti
divps
or
mov
gs
daa
mov
push
sub
jmp
daa
mov
daa
dec
push
fistp
inc
int
lds
mov
jmp
xchg
push
sbb
xchg
shl
mov
cmps
and
dec
ja
mov
pop
push
mov
sahf
repnz
or
test
aam
xor
mov
inc
push
test
mov
xchg
mov
push
js
sub
add
xor
mov
pop
add
repz
enter
push
daa
add
push
dec
stos
push
add
or
repz
cwde
imul
cmps
mov
jb
lock
dec
sbb
mov
les
pop
mov
add
or
add
or
movs
add
pop
xor
fisttp
or
fdivr
ficomp
test
in
out
adc
mov
ins
push
or
mov
fild
push
jns
sbb
mov
outs
je
mov
adc
clc
retf
add
aam
(bad)
dec
call
(bad)
xchg
add
retf
jmp
pop
push
adc
je
pop
or
std
sbb
hlt
push
push
iret
sbb
div
and
cwde
xchg
xor
mov
add
jmp
cdq
xchg
xor
int
mov
pop
(bad)
fdivp
adc
or
into
hlt
adc
int
mov
in
cmp
cmps
xor
inc
dec
cmp
cmps
cld
add
or
dec
cmp
pop
sub
cmc
ficomp
or
mov
sub
ss
ins
mov
gs
mov
int3
jecxz
fstp
xor
pop
das
sti
push
inc
out
xlat
div
aad
push
idiv
inc
and
(bad)
push
ds
call
cmps
cmps
mov
out
add
inc
(bad)
scas
into
mov
out
std
mov
cmp
(bad)
outs
xor
shl
fistp
pop
adc
or
and
call
add
dec
aas
out
in
rol
inc
mov
dec
data16
ror
loope
xor
fst
js
fcmovne
pop
cld
push
ss
ret
aaa
in
aas
clc
ja
cdq
push
dec
xchg
push
mov
mov
leave
and
nop
sub
aam
jecxz
in
adc
call
add
push
fadd
fidiv
(bad)
jnp
xchg
or
push
pusha
sahf
or
test
cmps
retf
icebp
ss
lods
dec
pop
cld
xchg
retf
enter
(bad)
dec
mov
repnz
movs
dec
in
mov
pop
xchg
dec
cmps
into
mov
xor
jmp
popa
cs
mov
adc
rol
mov
ret
sub
rol
ins
fimul
mov
inc
jge
xchg
aad
das
outs
push
sub
sbb
dec
cmp
fcmove
xor
lods
push
jle
aaa
leave
cmp
repnz
adc
loope
xchg
ret
cmp
js
push
mov
stc
add
shl
sbb
mov
cmp
shr
lds
xor
shl
mov
outs
jbe
ja
imul
in
fmul
push
push
lock
repz
lock
int
jg
dec
adc
mul
retf
out
test
addr16
push
movs
push
xor
repnz
mov
call
sahf
or
es
mov
aas
js
xchg
xor
fist
movzx
xchg
jmp
loope
leave
inc
aad
mov
into
xchg
jns
shr
push
cmps
es
xor
cmp
xchg
stos
add
icebp
hlt
jp
test
movs
mov
daa
mov
and
iret
sub
mov
pop
in
fiadd
loope
ficomp
xor
cmp
lock
xchg
movs
cmps
jo
xchg
nop
xor
jns
push
daa
cld
(bad)
mov
popf
dec
add
add
repz
jmp
jae
jle
jmp
sar
pop
cmps
ss
test
push
push
cmp
ja
psrlw
(bad)
into
sbb
cld
adc
(bad)
mov
rcl
(bad)
retf
addr16
mov
push
pop
test
and
ins
movs
mov
pop
adc
jle
imul
aaa
fs
popf
sub
inc
dec
fild
pushf
jmp
mov
inc
mov
push
inc
pop
aam
or
sbb
stos
sub
cs
stc
sbb
lds
mov
mov
scas
cli
pusha
leave
cwde
call
mov
(bad)
cli
ins
ficom
jo
xchg
push
je
and
fstp
xchg
pop
adc
push
jg
and
cmp
cdq
add
push
mov
cmp
sti
inc
jecxz
or
xchg
enter
jo
sub
or
sub
sbb
or
cmp
xlat
xchg
inc
add
xchg
int
jmp
push
ss
hlt
adc
mov
out
cs
lahf
pop
pop
push
mov
sbb
sub
adc
cmp
fist
pop
outs
(bad)
cmp
movs
repz
xchg
rcl
mov
sub
mov
pushf
xchg
push
ins
fsubr
xchg
sub
cmp
outs
adc
xchg
pop
and
adc
cmovge
(bad)
ja
inc
sub
call
in
mov
(bad)
mov
test
in
pop
icebp
dec
(bad)
call
ror
adc
test
mov
fcmove
mov
dec
xor
sub
out
jecxz
and
shl
mov
dec
jb
rep
loop
nop
loop
ficomp
sub
gs
jg
pop
sbb
sub
sbb
je
xchg
mov
mov
adc
in
mov
out
repz
popa
mov
or
shr
mov
retf
and
or
mov
dec
mov
aaa
or
scas
scas
push
jb
ja
mov
mov
sub
sbb
sbb
hlt
mov
xchg
loopne
xor
xor
jmp
sub
out
push
push
adc
shl
out
mov
pop
fbld
add
stos
xor
or
xlat
jne
mov
out
sub
or
mov
shl
add
xchg
push
daa
xor
add
adc
mov
rol
pop
push
cld
mov
retf
xchg
mov
lea
push
rcl
adc
or
dec
inc
adc
int
fisubr
movs
ins
mov
dec
push
aaa
cmp
xchg
ret
fcomip
shr
push
aad
add
inc
mov
push
rcl
movs
or
xor
test
ins
dec
movs
stos
mov
rcr
leave
add
lods
mov
aas
test
imul
sbb
fadd
int
push
push
push
push
dec
dec
test
ret
scas
mov
popa
fistp
sub
inc
das
mov
xchg
je
je
int3
dec
adc
aad
push
xchg
fsub
or
and
jecxz
sbb
adc
jns
ret
jecxz
call
shr
add
cdq
jmp
cdq
push
scas
test
pop
es
or
cmps
fs
js
stos
clc
push
jnp
pop
dec
stc
xor
pop
xchg
pushf
rcl
loop
push
inc
pop
mov
and
aad
mov
stos
sub
aam
mov
mov
rcr
mov
(bad)
xchg
jecxz
movs
jne
add
and
test
enter
jl
test
movs
nop
fcmovnu
mov
loopne
fcmovb
es
stos
mov
fwait
mov
xor
adc
mov
push
ror
inc
fist
sub
ficomp
pop
pop
loopne
mov
aas
and
ret
pop
dec
in
data16
mov
dec
pop
push
retf
mov
mov
mov
jge
stc
or
mov
push
and
mov
push
mov
stos
out
sub
or
imul
test
cmp
test
jmp
repnz
(bad)
sar
sbb
mov
xchg
popf
fsubr
loopne
in
popf
push
xlat
push
test
js
push
dec
pop
or
push
addr16
sub
mov
pop
test
mov
in
jp
cmp
pushf
ret
inc
adc
push
jae
call
xchg
xlat
adc
retf
fwait
sbb
add
mov
ret
ret
call
pop
or
lods
push
test
loop
sub
xor
aaa
adc
repz
cmp
mov
retf
mov
das
mov
xor
push
mov
test
jo
int
sub
sub
inc
inc
push
loop
test
xchg
push
push
fimul
xchg
into
push
call
test
retf
pushf
in
add
add
scas
pusha
stos
ret
ror
dec
out
sub
ss
mov
cmp
jmp
gs
jmp
jnp
mov
imul
int3
xor
test
movs
xchg
fnsave
cmp
push
xchg
dec
or
ins
push
inc
mov
fnstcw
pop
imul
mov
imul
mov
clc
pop
cmp
mov
push
fst
mov
test
sti
xor
ds
imul
pop
(bad)
outs
mov
xchg
xlat
mov
(bad)
dec
shl
mov
jle
ins
mov
mov
jle
adc
push
jle
push
adc
aad
enter
mov
pop
(bad)
hlt
add
cmps
movs
imul
cli
pop
or
push
xchg
sbb
jmp
sbb
inc
out
stos
jecxz
and
lods
and
ins
sub
shl
push
lds
sbb
jno
mov
inc
xlat
or
ret
pop
or
xlat
add
inc
mov
push
jnp
dec
int
cmp
hlt
push
inc
loopne
mov
fnsave
stos
out
inc
adc
mov
out
push
out
inc
jno
push
xchg
jnp
sbb
sub
cli
fidiv
pushf
cmp
test
das
adc
adc
cwde
fisttp
arpl
lods
and
fsub
test
fwait
or
out
popf
adc
mov
mov
sub
cwde
pop
outs
jmp
sub
mov
sbb
lods
jne
jnp
add
aaa
jmp
outs
cdq
cmp
cmc
and
les
cmp
stc
mov
inc
pop
xchg
popa
test
push
pop
scas
add
cmp
xchg
jne
mov
adc
push
shr
and
(bad)
mov
mov
daa
sbb
popf
rcl
inc
push
and
sub
adc
ret
outs
shr
inc
push
xor
ds
mov
clc
in
sbb
stc
ins
push
mov
push
loope
dec
out
cmp
push
dec
mov
xor
cmp
je
mov
fs
mov
sbb
(bad)
rcl
lods
jo
jp
or
scas
jae
mov
dec
into
or
pop
out
in
fisttp
dec
mov
mov
xchg
adc
jp
jmp
fs
push
in
(bad)
mov
inc
ins
sbb
push
(bad)
mul
add
aas
inc
ins
sub
imul
cdq
dec
pop
rol
mov
sub
pop
movs
cs
sbb
xor
movs
test
and
jne
cmp
xchg
call
pop
sub
fstp
mov
xchg
addr16
jno
pop
cmc
ret
fwait
data16
pop
cli
xchg
xchg
inc
xchg
hlt
fisubr
dec
cld
jnp
lods
es
and
in
cmp
adc
lock
mov
test
dec
jge
push
xor
sbb
push
mov
jl
adc
(bad)
ror
sub
cmp
outs
push
mov
frstor
dec
mov
cmc
cli
ins
icebp
mov
pop
(bad)
pop
fsubp
ret
jne
inc
jnp
jmp
fwait
ss
std
int3
call
fidiv
loopne
mov
jge
push
adc
sbb
sbb
jge
ret
and
unpckhps
arpl
sbb
inc
stos
data16
je
cs
jns
loopne
imul
xchg
leave
sbb
fwait
and
sub
jae
icebp
mov
out
inc
pop
sub
imul
in
xor
repz
xor
xchg
data16
jne
inc
scas
push
mov
xchg
test
jge
loopne
or
loopne
js
xchg
popf
mov
popf
loope
iret
mov
sahf
xor
enter
mov
push
sub
sti
pop
movs
out
loop
xchg
mov
out
sub
scas
push
push
and
mov
test
cmp
lea
stos
mov
xor
mov
pminsw
call
cmp
ds
dec
adc
(bad)
loope
cmp
push
mov
(bad)
out
imul
fstp
inc
push
xchg
imul
mov
push
jnp
push
imul
and
dec
push
and
test
xor
aaa
fimul
dec
and
aad
adc
sbb
pop
mov
push
adc
les
dec
inc
jbe
in
pop
xor
mov
pop
pop
cmc
inc
sbb
mov
les
mov
mov
pushf
xor
sub
ror
adc
or
repz
lods
iret
xchg
jmp
cmp
mov
pushf
xlat
fisub
test
movs
stos
in
in
shl
fdiv
mov
xor
iret
pop
js
(bad)
adc
or
mov
xchg
adc
fwait
sub
cwde
cdq
js
adc
lods
push
mov
shr
adc
js
xor
push
(bad)
pushf
sbb
inc
add
out
sbb
mov
xlat
push
js
cmp
cmp
jb
adc
push
mov
mov
fdivr
dec
sub
ficomp
mov
mov
fyl2xp1
mov
xor
cmps
dec
dec
into
sti
lock
mov
lods
call
sbb
inc
xchg
retf
ins
mov
jp
out
(bad)
pop
icebp
sub
sub
scas
cmp
cmp
pop
sub
pop
dec
mov
sub
pop
dec
call
out
movs
push
sub
scas
stc
fsubp
adc
inc
(bad)
adc
ds
loopne
adc
dec
dec
pop
push
xchg
jge
xor
xor
fs
int3
xchg
and
mov
inc
iret
das
mov
inc
imul
popf
push
mov
mov
outs
ret
mov
popa
hlt
(bad)
mov
cmps
ds
in
(bad)
adc
loope
inc
push
push
repnz
dec
push
ss
shr
imul
jmp
dec
xor
mov
sbb
xchg
mov
dec
adc
push
and
or
xchg
das
adc
lock
test
shl
jnp
or
fnsave
sahf
jg
add
daa
arpl
mov
int
sub
and
mov
push
mov
fiadd
xor
xor
les
mov
sub
push
mov
push
(bad)
retf
dec
sub
adc
jns
mov
mov
shl
mov
sbb
ja
push
pop
shl
mov
push
sub
mov
lock
imul
mov
pop
and
dec
pop
push
jae
mov
xor
mov
frstor
jo
xchg
ret
fimul
mov
scas
imul
int3
hlt
inc
int
sbb
fcom
sub
xchg
and
push
mov
cmc
gs
int
std
shl
mov
sbb
aad
ins
and
lock
(bad)
retf
out
repz
and
int
cmp
pop
imul
call
or
jae
cmp
fist
sub
pop
arpl
fnstenv
jmp
add
movs
pop
jnp
sar
popa
icebp
cmc
sbb
out
inc
pop
outs
and
test
sbb
or
inc
lods
out
pop
inc
ret
adc
les
js
or
ret
jae
pop
div
jmp
call
ret
out
sub
rcr
(bad)
fcomp
sahf
adc
(bad)
xor
dec
mov
outs
push
das
loop
jno
test
adc
inc
sbb
sbb
not
bound
ror
lods
adc
jbe
jge
xchg
iret
and
pop
sub
retf
arpl
(bad)
cmp
jo
imul
lea
xchg
sub
sti
push
hlt
dec
xor
mov
and
or
jae
pusha
push
pop
cmps
test
into
jo
sahf
push
(bad)
xchg
push
jmp
dec
and
or
pusha
mov
mov
iret
popf
fwait
jmp
or
pop
jo
push
push
mov
in
cdq
loop
mov
xor
in
cmps
xor
data16
loop
jmp
dec
add
pop
xor
adc
push
scas
scas
jmp
jb
inc
sub
jecxz
pop
dec
cmp
(bad)
std
mov
adc
test
cmp
and
and
cmp
xchg
cmps
hlt
ja
xor
mov
retf
adc
pop
ins
scas
or
test
jecxz
cmp
mov
inc
cmps
cmp
mov
(bad)
mov
ret
aad
cwde
jecxz
enter
pop
out
adc
cmp
outs
xchg
inc
ficomp
xchg
push
add
jp
jecxz
xchg
dec
bnd
push
jmp
push
push
int3
inc
inc
icebp
in
adc
xor
movs
and
mov
pop
std
dec
mov
in
mov
push
scas
fmul
jo
jae
loopne
add
or
adc
pop
or
out
(bad)
lea
push
mov
fdivr
push
call
jecxz
or
into
hlt
mov
and
xchg
mov
push
ins
dec
cwde
adc
mov
ret
ror
sbb
push
cmp
int3
jns
jae
stc
jno
mov
out
push
scas
mov
scas
movs
loopne
inc
pop
(bad)
inc
in
adc
xchg
movs
shr
or
leave
iret
aas
xchg
stc
sbb
pop
(bad)
out
mov
sbb
lahf
dec
or
cli
outs
mov
dec
call
enter
push
push
(bad)
pop
dec
cmps
pop
mov
add
movs
pop
popa
and
cmp
fs
mov
fild
cmp
dec
pop
int
dec
jo
fsub
pop
data16
push
jg
xor
adc
jmp
pusha
pop
shl
cmp
jmp
mov
dec
popa
pop
xchg
mov
mov
in
stos
frstpm(287
dec
imul
popa
leave
ret
popf
rcl
bound
popf
mov
je
inc
jae
mov
es
xor
pop
popf
inc
test
(bad)
retf
mov
lahf
pop
dec
mov
dec
jae
aaa
out
push
ds
mov
lds
mov
dec
out
add
mov
(bad)
cmp
hlt
sub
jge
nop
rcl
std
pop
not
pop
shr
or
fdivr
jp
sub
jmp
inc
add
jo
cdq
adc
pop
pop
scas
cs
and
pop
mov
dec
jp
jmp
pop
adc
scas
rcr
fidivr
leave
cmc
stos
aad
cmp
jge
pop
(bad)
cmps
adc
movs
(bad)
nop
sub
or
mov
push
mov
not
std
dec
push
inc
or
jbe
cdq
dec
xor
adc
outs
pop
(bad)
mov
into
cs
mov
rcl
cwde
mov
sbb
or
std
or
cmp
cmps
mov
or
pusha
add
push
mov
fmul
inc
add
mov
aaa
addr16
jbe
pusha
jo
pop
add
mov
push
icebp
fidiv
cs
int
rcr
(bad)
lea
outs
inc
inc
cs
inc
movs
add
sbb
push
pop
mov
push
iret
cmc
mov
pop
cmp
xor
mov
outs
inc
loopne
xadd
std
repz
add
lods
cli
dec
mov
push
bound
daa
add
int3
ins
retf
pop
fucomi
dec
push
gs
mov
mov
xor
and
pop
inc
popf
push
pop
mov
cmp
push
add
out
outs
pop
nop
xchg
or
mov
xor
scas
cmp
sub
popf
daa
adc
icebp
cli
jmp
pop
cmp
daa
jne
lods
mov
xchg
arpl
jle
push
fcmove
push
loope
push
and
mov
add
imul
and
pusha
adc
mov
push
xchg
adc
add
mov
jle
push
adc
imul
test
mov
jmp
ds
clc
jecxz
mov
jmp
leave
jmp
xor
aaa
and
out
and
mov
push
and
cmp
inc
mov
and
jp
pop
pop
mov
push
push
das
cli
ret
fwait
add
(bad)
add
push
fadd
in
inc
aam
mul
out
shr
imul
mov
(bad)
imul
fldcw
dec
sub
(bad)
mov
mov
int3
enter
imul
les
pop
dec
inc
cbw
mov
push
xchg
ret
push
push
pop
push
push
or
xchg
mov
push
inc
stos
mov
inc
dec
and
jno
sub
cmps
movs
lods
push
mov
push
pushf
and
and
push
dec
adc
out
push
popf
add
xchg
dec
das
fnstenv
mov
pushf
mov
xchg
and
inc
adc
fisttp
and
cld
rol
cdq
fnstsw
popa
add
sahf
sub
test
shr
cwde
loopne
(bad)
cmp
mov
adc
pusha
xlat
cld
sbb
push
lds
retf
hlt
shr
jo
frstor
jbe
test
sub
xchg
lds
lods
es
and
jmp
sub
aam
xor
rcl
xor
(bad)
push
ror
dec
cld
in
push
push
ja
sti
xor
sbb
(bad)
rcr
mov
mov
shr
inc
es
retf
adc
add
rcr
or
and
xchg
xchg
jb
ret
pop
sbb
dec
sbb
stos
in
inc
add
retf
mov
fidivr
sbb
ror
js
or
mov
aad
iret
jo
in
ss
stos
inc
pop
adc
mov
mov
retf
sbb
mov
cmps
loopne
pop
mul
push
xchg
jno
mov
ins
sbb
fstp
(bad)
retf
sbb
pop
bound
and
mov
sahf
imul
je
cld
push
shl
jecxz
test
xor
ficom
mov
neg
lea
cmp
ins
or
ds
mov
dec
call
ret
bound
retf
ins
xor
out
mov
xor
dec
jb
in
or
daa
repz
lods
test
retf
inc
or
aas
(bad)
mov
or
sub
mov
les
cmp
mov
adc
xor
cmc
cmp
adc
and
cmp
jmp
dec
test
add
cmp
(bad)
mul
mov
(bad)
add
mov
or
addr16
or
push
adc
xchg
(bad)
jle
push
inc
inc
(bad)
lods
stos
aam
sbb
leave
jo
arpl
std
ja
out
xor
out
addr16
fisttp
fldlg2
jle
xchg
imul
mov
sbb
call
push
shl
sbb
pop
pop
int3
sbb
ror
jl
pop
cmp
dec
add
std
jo
jmp
dec
test
dec
jle
push
test
dec
jp
lock
mov
outs
pop
gs
and
mov
les
add
push
jmp
dec
xchg
inc
push
xchg
sahf
xor
or
test
xchg
cmp
inc
pop
sbb
xor
stos
pop
or
cmps
clc
movs
adc
adc
sub
xchg
xchg
repnz
in
or
outs
jae
gs
les
cs
jbe
test
sub
mov
ins
pop
ds
retf
bnd
call
retf
push
pushw
jbe
in
outs
inc
popf
jb
pop
inc
jae
daa
(bad)
jg
pop
int
add
cs
mov
or
mov
push
push
popa
cs
imul
xor
idiv
xchg
cmp
cli
popf
or
xchg
scas
or
mov
out
dec
shr
je
cld
mov
inc
mov
and
mov
mov
sbb
das
clc
inc
arpl
sahf
loope
rcl
jl
gs
inc
daa
cmp
push
dec
xchg
push
shl
gs
cmp
ficomp
ds
ret
(bad)
aad
dec
call
sbb
ja
add
ficom
xor
lock
cmp
jo
lock
dec
loope
into
mov
cmp
in
(bad)
cmc
cmc
arpl
mov
mov
mov
mov
in
jmp
leave
(bad)
psubsw
in
call
mov
fs
ins
out
cwde
inc
xchg
les
jge
or
mov
test
es
xlat
fwait
cld
pop
inc
mov
fxch
mov
mov
push
sub
mov
pusha
js
hlt
or
mov
and
xchg
test
mov
lock
push
mov
cmps
imul
out
retf
sbb
xor
lahf
dec
inc
dec
jecxz
jp
fadd
hlt
and
shr
jnp
ins
call
xor
jle
retf
jge
aam
add
jno
push
xor
push
enter
push
mov
mov
mov
mov
inc
and
pushf
cs
cdq
aam
mov
mov
js
cmp
(bad)
xchg
add
sbb
add
cmp
or
or
and
cli
sub
sbb
xchg
or
(bad)
cmp
cdq
ret
pop
sbb
lahf
mov
sbb
xor
push
jmp
add
sub
jp
add
xor
dec
es
mov
in
out
dec
pushf
and
cmp
push
xor
sub
in
ds
rol
push
in
cwde
not
fs
cmp
scas
test
dec
jbe
scas
scas
int
arpl
sub
sbb
mov
cmp
jge
mov
scas
(bad)
fwait
push
stc
pop
retf
adc
mov
dec
jecxz
xor
inc
xor
je
jo
and
pop
fld
jno
test
push
icebp
add
xchg
xchg
inc
adc
bound
cmp
or
pop
add
cwde
xor
inc
cmp
mov
push
test
ss
xchg
sub
imul
cmp
movs
popf
cld
retf
test
lods
imul
xchg
mov
(bad)
std
jns
mov
or
jnp
jge
aas
dec
je
test
or
pop
sub
ror
inc
ja
mov
mov
pop
mov
pop
nop
movs
ja
cmc
inc
mov
cwde
(bad)
xor
xchg
or
sbb
add
jne
popa
sub
test
jbe
adc
sub
dec
movs
xchg
sub
adc
js
xchg
scas
popf
out
les
rcl
mov
jmp
sub
jp
or
cmps
(bad)
nop
fcom
ficomp
mov
mov
scas
inc
add
mov
push
inc
(bad)
cmp
mov
push
sbb
mov
and
pop
aaa
in
push
ficom
sbb
sub
cmp
add
sti
loopne
in
aaa
icebp
loopne
push
movs
push
popf
imul
cld
jns
int
or
inc
mov
mov
js
and
jge
mov
add
call
mov
inc
mov
xchg
sti
sub
stos
(bad)
ins
push
jecxz
push
(bad)
popa
sar
dec
xor
adc
sub
push
stc
out
push
xchg
jb
push
mov
adc
add
xchg
mov
sub
shr
(bad)
jae
push
sub
push
mov
xor
pop
push
daa
or
cmp
inc
pusha
das
mov
adc
add
xchg
(bad)
cmps
xchg
mov
cs
(bad)
(bad)
sti
jg
fistp
rol
loop
inc
(bad)
fsubr
mov
loope
fs
pushf
dec
clc
aad
sub
stos
pop
xor
lds
pop
or
popf
xchg
xchg
push
ret
repnz
add
fcomip
mov
or
or
xlat
jge
pop
hlt
push
int
xor
lea
jno
shl
sub
mov
mov
sub
lds
push
xor
push
jne
dec
cmp
mov
xchg
pushf
daa
jecxz
jle
push
jns
mov
inc
inc
jne
das
sub
push
dec
std
xor
mov
mov
and
dec
mov
bound
mov
sub
in
dec
dec
push
pop
push
add
mov
mov
or
sti
pusha
adc
cmp
and
sub
sahf
or
(bad)
cmps
push
inc
pop
mov
xchg
cli
jns
test
adc
aam
sbb
std
imul
ds
dec
cwde
xlat
or
push
add
aam
loop
add
jecxz
cmp
cmp
lock
mov
push
(bad)
data16
jns
daa
pop
inc
xlat
imul
inc
xor
jl
cmp
pop
push
aaa
sahf
ins
mov
into
push
inc
popf
dec
push
fst
lods
rcr
imul
scas
jnp
mov
push
loope
cdq
adc
js
mov
or
daa
das
fs
pop
int3
pop
jp
pop
cld
mov
mov
and
mov
xchg
and
outs
(bad)
inc
or
add
push
aas
add
dec
pushf
cdq
push
out
pop
xchg
loop
inc
dec
cwde
pop
mov
into
push
mov
cmp
jnp
out
pop
test
sub
inc
lods
ficomp
pop
shl
lock
xchg
shl
dec
jae
add
call
test
call
jbe
push
dec
xor
adc
mov
nop
leave
cmp
mov
imul
cmp
inc
in
inc
xor
not
enter
rol
iret
jbe
add
push
loopne
and
int
and
adc
into
ds
call
movs
add
jle
loope
jmp
pop
mov
loop
das
sbb
int
imul
push
mov
mov
(bad)
or
jbe
sub
imul
jmp
rol
es
or
xor
dec
push
push
loop
stc
addr16
arpl
adc
xor
int3
xchg
mov
fimul
and
arpl
out
inc
leave
outs
xlat
aas
jb
jg
ins
pop
and
cwde
xchg
ficom
loopne
call
mov
sbb
jmp
jl
popf
mov
sub
outs
adc
push
sahf
into
add
stos
ins
repnz
xor
or
and
in
gs
test
ret
jmp
inc
std
test
push
fdivrp
pop
push
and
bound
mov
sbb
cld
mov
icebp
xchg
push
imul
into
sub
sbb
call
cdq
psrad
adc
jae
push
or
add
sbb
jl
inc
cmp
(bad)
popa
scas
retf
ja
sub
adc
push
sbb
cmps
adc
xlat
cmp
(bad)
int3
pop
jg
cs
ss
(bad)
bound
fidiv
add
dec
inc
and
pop
xchg
aaa
dec
ss
arpl
imul
cmps
adc
jnp
mov
dec
push
push
fnsave
int3
dec
add
arpl
(bad)
fsubr
push
xchg
mov
and
ficomp
push
xchg
daa
sub
test
add
jnp
fnstcw
mov
cld
fsubr
pop
in
adc
cli
and
mov
(bad)
adc
xchg
mov
imul
shr
sbb
mov
call
arpl
rol
rcr
test
pop
mov
add
iret
les
adc
(bad)
call
ds
push
sti
xor
das
pop
inc
jmp
cmp
mov
loope
mov
imul
push
ins
jb
ret
jae
fisub
sbb
inc
mov
(bad)
frstor
add
imul
jle
in
lds
leave
jo
xchg
aas
popa
or
pop
cmc
push
paddusb
mov
xlat
ror
mov
call
xchg
in
(bad)
std
dec
mov
data16
sub
ror
(bad)
(bad)
fisttp
mov
pop
das
scas
sub
(bad)
je
jnp
aam
paddw
fisttp
or
xchg
mov
sbb
sbb
push
movs
dec
sbb
and
in
jno
in
repnz
(bad)
shl
xor
lods
or
jecxz
jns
mov
or
daa
fistp
iret
sbb
out
xchg
or
aaa
pushf
lahf
pop
adc
dec
pusha
out
inc
out
add
mov
or
stc
in
ja
dec
mov
cmps
enter
fsubr
push
mov
shl
jecxz
cdq
test
sub
jb
sbb
pop
inc
push
gs
add
(bad)
popf
sbb
sub
in
mov
xlat
fs
sub
sbb
pop
mov
jmp
(bad)
jno
div
mov
cs
fwait
mov
iret
dec
xchg
lahf
jnp
jo
fistp
cmp
inc
nop
push
cmp
(bad)
out
std
test
aas
ja
cmp
pusha
aas
aas
repnz
adc
inc
adc
and
out
sbb
(bad)
in
(bad)
jns
loopne
sbb
fld
(bad)
jle
push
neg
inc
cmps
test
ins
jnp
outs
adc
stos
add
or
fs
sbb
fisttp
cmp
pop
shl
out
cmp
mov
(bad)
iret
push
mov
fs
xor
pusha
mov
sub
mov
and
jne
jle
loop
jmp
sti
dec
shl
int3
and
sub
push
popa
adc
movs
and
dec
pop
and
mov
bound
mov
sub
push
mov
jae
add
pushf
outs
popa
adc
loop
movs
mov
dec
mov
ror
shr
lahf
fistp
or
pop
or
jle
rcr
pop
xor
cmps
xchg
bound
fs
lds
adc
pusha
lahf
xchg
cmp
lock
cmp
adc
push
push
js
in
xor
fcmovb
fisttp
xchg
std
ss
cmps
sbb
push
adc
leave
mov
popa
pop
les
mov
fcomp
cmp
retf
test
ror
xor
xor
test
adc
sbb
push
arpl
test
les
(bad)
inc
pop
dec
adc
xchg
jns
mov
popf
pop
stos
pop
int3
inc
or
les
add
(bad)
in
icebp
shl
mov
pop
adc
mov
mov
sar
imul
adc
sub
cld
xchg
xchg
xchg
and
mov
xchg
fsub
push
cli
cmc
jecxz
loop
sbb
jnp
jns
inc
nop
inc
leave
pop
push
xor
in
call
adc
(bad)
pop
xchg
sbb
ins
fs
int
jecxz
xor
sub
mov
jp
adc
mov
and
mov
fucomi
jmp
jbe
call
arpl
movs
sub
cmps
jbe
adc
scas
scas
sti
inc
mov
jnp
pop
inc
cwde
push
mov
sub
jmp
fild
sub
xchg
add
hlt
daa
les
dec
mov
jo
fiadd
sub
pop
mov
(bad)
out
xchg
movs
jnp
lods
jne
outs
enter
xchg
inc
data16
sub
mov
fstp
(bad)
fstp
mov
(bad)
dec
loopne
test
xchg
test
les
(bad)
cdq
push
push
or
mov
jb
add
sahf
test
mov
adc
xchg
add
pushf
pop
retf
repnz
push
cmps
(bad)
dec
and
rcl
out
adc
out
fnstsw
mov
mov
cmps
add
adc
lods
cli
or
mov
pop
ins
test
ret
sti
in
sub
ud0
cmps
outs
cdq
xchg
inc
out
and
loope
cli
lods
cli
stos
sub
out
cmp
shr
mov
or
inc
sub
repnz
dec
inc
pop
mov
mov
xor
inc
jmp
xor
add
scas
fwait
test
enter
xchg
push
or
and
or
and
mov
xchg
jle
stos
shl
push
adc
pop
jp
shl
cmps
mov
sar
fiadd
push
mov
out
jae
repz
pop
mov
fsub
stc
cmps
outs
and
jmp
mov
xchg
mov
(bad)
xlat
ret
hlt
clc
adc
fistp
mov
pop
and
out
cld
iret
jg
inc
dec
mov
pushf
ds
retf
call
sbb
repnz
loope
jmp
aad
inc
in
adc
inc
xor
stc
and
lods
pop
arpl
dec
hlt
fmul
jg
cmp
mov
fwait
scas
sar
add
clc
sub
sub
mov
adc
cmp
cmp
push
pop
add
lods
push
sub
add
daa
or
pop
jns
shl
pop
dec
(bad)
adc
dec
xchg
popa
sub
mov
leave
xor
cmc
mov
addr16
xor
jb
in
push
nop
movs
xor
shl
adc
dec
inc
dec
xor
movs
repz
sahf
pushf
adc
add
adc
push
mov
pop
jle
or
push
inc
sub
mov
mov
xchg
add
adc
push
mov
jp
sar
push
cdq
jmp
fsubr
or
cmp
ja
iret
add
push
stos
outs
mov
sub
push
stos
pop
mov
xchg
sub
rcr
cdq
mov
jae
es
or
fs
and
int
inc
push
jno
arpl
js
mov
mov
mov
ret
pushf
inc
mov
inc
jg
js
cmps
inc
std
xchg
dec
jg
adc
fist
(bad)
cli
or
jle
sbb
icebp
xor
dec
jle
lods
clc
enter
stos
sub
mov
fldenv
mov
mov
adc
and
inc
sub
xchg
scas
pop
inc
inc
mov
scas
out
cwde
retf
mov
retf
add
adc
xchg
mov
cmp
mov
inc
cs
pop
cmp
and
jecxz
pop
lds
mov
pop
enter
push
fidiv
repz
jo
out
or
jmp
and
out
mov
loope
pop
cld
(bad)
je
popa
out
es
jl
clc
sub
cmp
cwde
sbb
mov
mov
repnz
cmps
fsubr
pop
and
push
fs
xlat
cdq
in
scas
not
or
or
inc
xor
sbb
cmp
jns
imul
shr
pop
mov
pop
xor
ror
cmp
aaa
fldenv
pop
mov
ds
ja
in
push
sbb
cwde
in
retf
sub
pop
sub
adc
cmp
pop
and
mov
stos
inc
fs
xor
mov
pop
or
je
shl
in
popa
rcr
ficomp
jmp
mov
and
call
aaa
xor
es
add
and
outs
cmp
not
inc
sti
sbb
retf
mov
shr
inc
in
and
sub
lock
daa
js
push
arpl
jle
rol
xor
scas
sti
std
jmp
or
jne
xor
adc
mov
test
sbb
dec
sub
or
pop
or
mov
xor
cmp
xchg
addr16
push
cmp
and
loope
sub
push
rol
mov
mov
sti
(bad)
in
outs
lock
and
cs
cwde
aad
outs
loop
jns
mov
cmp
fbstp
push
add
aas
mov
icebp
sub
and
leave
xor
adc
ds
loop
aas
imul
outs
(bad)
mov
sbb
jns
cmp
xchg
icebp
fnstenv
xor
int
jo
dec
int
push
das
mov
inc
jns
fcomp
cs
(bad)
out
and
cmp
xor
xchg
sbb
jbe
fidiv
xchg
xchg
mov
loope
and
sar
adc
fidiv
pop
pop
mov
xchg
push
dec
xchg
xor
es
out
lds
call
lock
(bad)
out
iret
add
pop
fwait
in
mov
xor
fwait
push
mov
xor
cmps
lods
or
jnp
pop
test
enter
aas
and
cdq
xchg
fsub
fistp
mov
pop
or
int3
xlat
clc
pop
sbb
or
movs
test
popa
cmp
mov
cmp
fist
jnp
xchg
sbb
fild
sub
dec
cmp
push
and
sub
fwait
ret
or
xor
and
jge
cmps
data16
imul
jne
xor
out
repnz
lods
mov
cdq
pop
jno
jge
jge
mov
jno
mov
cs
imul
and
push
ds
dec
mov
pusha
sub
jne
mov
mov
xchg
cmps
mov
sbb
xor
mov
int3
das
push
pop
xchg
xchg
mov
aas
ds
scas
ja
mov
icebp
in
idiv
fild
imul
out
mov
and
mov
xor
fs
fwait
gs
das
add
jl
xchg
mov
and
fwait
(bad)
fdiv
and
jecxz
mov
pop
jb
dec
mov
or
call
dec
(bad)
fidiv
or
pop
mov
jmp
gs
scas
mov
movs
fist
and
pushf
ins
jge
pop
sbb
cmps
jnp
and
and
shl
push
cmc
rcl
out
xor
js
repz
aaa
inc
jmp
adc
xor
pop
jnp
pop
cmps
mov
sub
sahf
and
mov
cmp
in
mov
(bad)
aam
sbb
outs
mov
mov
jle
iret
icebp
pop
jle
fs
push
push
pop
jnp
jae
push
xchg
adc
mov
ss
xchg
repz
arpl
and
pop
push
mov
add
aam
hlt
mov
ins
(bad)
daa
pop
sub
xlat
cmp
das
mov
fsubr
rcr
adc
mov
inc
pop
mov
imul
jno
xor
mov
push
pop
cmp
pop
dec
mov
mov
adc
sbb
pop
out
dec
mov
sbb
mov
and
lods
daa
sub
out
push
add
mov
mov
scas
in
pusha
ret
add
int3
into
jbe
dec
pop
mov
fidiv
iret
clc
xor
push
inc
inc
xor
repnz
(bad)
sbb
xor
sub
cmps
adc
or
xchg
mov
aas
mov
jmp
pop
adc
jmp
cs
jno
stc
dec
mov
add
adc
repnz
scas
lods
mov
sbb
and
jb
adc
cmc
add
into
sub
scas
ficom
movs
es
sbb
mov
push
ins
ja
das
xchg
adc
loop
js
push
sbb
push
sub
add
mov
and
add
sub
jne
ror
in
aam
jne
stc
jl
pop
sub
into
pop
cmp
mov
mov
pop
xor
sbb
daa
cs
xchg
int3
enter
js
jb
imul
std
ret
push
stc
push
mov
xor
repnz
dec
and
add
fist
cmp
xchg
xchg
xlat
inc
or
xchg
jo
adc
shl
addr16
push
jle
inc
sbb
(bad)
add
mov
mov
movs
retf
mov
daa
or
or
into
int
dec
jns
gs
mov
inc
mov
and
jbe
js
fnstcw
add
xor
push
pushf
mov
movs
xor
in
adc
sub
test
dec
scas
imul
jge
or
out
xor
mov
cld
ja
lea
jmp
jno
inc
xor
jmp
loopne
(bad)
imul
(bad)
cdq
pop
jnp
sbb
xchg
and
mov
fistp
call
(bad)
aam
les
xchg
jmp
jne
pop
bound
js
pop
adc
movs
xor
retf
mov
inc
scas
cmp
or
cwde
icebp
lods
lods
cmp
jo
xor
scas
pop
push
xchg
rcr
push
outs
repnz
test
imul
rol
adc
mov
popa
cmp
mov
jns
outs
into
lahf
rol
xchg
pop
mov
and
ja
mov
ds
mov
stc
mov
outs
or
push
mov
pushf
mov
pop
int
inc
xor
push
in
into
jp
ret
xchg
or
or
test
js
es
loop
test
push
(bad)
jge
fwait
push
in
add
add
imul
pop
cmps
nop
aam
cmp
mov
popa
lahf
add
pop
(bad)
into
and
retf
mov
sub
pop
(bad)
mov
mov
jg
add
sub
xchg
(bad)
mov
pop
js
stos
sbb
enter
inc
add
push
ror
nop
outs
nop
add
inc
test
dec
mov
mov
push
jle
jo
in
sub
mov
(bad)
cmc
idiv
lods
neg
pop
in
xor
inc
stos
mov
arpl
inc
mov
xchg
mov
cli
loop
adc
fisub
mov
xor
daa
cmp
lea
loopne
shl
lds
das
sbb
into
add
dec
inc
pop
mov
ret
cmp
jg
test
sahf
push
push
sti
ins
mov
in
push
in
call
jo
sub
retf
mov
mov
pop
pop
scas
into
sbb
mov
into
xchg
mov
jo
call
(bad)
lods
lahf
(bad)
jmp
xor
xchg
not
jp
sbb
loop
mov
repz
popf
fst
mov
jae
fadd
add
xchg
xchg
pop
and
mov
dec
scas
cmps
sub
cmp
dec
aas
pushf
(bad)
add
cmp
sbb
mov
test
call
cmps
add
mov
mov
pop
dec
into
into
push
fucomp
xor
xchg
rcl
or
dec
inc
cmp
fst
push
mov
mov
(bad)
in
mov
imul
rcl
dec
xchg
loopne
cli
test
scas
and
lods
dec
loop
fisub
test
ret
sbb
pop
mov
adc
data16
cmp
in
sub
push
lock
jle
mov
test
inc
or
stc
retf
test
jmp
xlat
nop
fwait
adc
sbb
movs
dec
popa
leave
int3
fwait
aas
push
ror
inc
xchg
xor
inc
jo
fimul
push
not
enter
or
and
enter
mov
mov
mov
std
sar
push
sub
fs
mov
icebp
dec
jb
xor
icebp
sar
shl
adc
mov
jnp
mov
mov
xor
mov
push
cwde
ins
mov
(bad)
popf
mov
mov
fmul
loope
mov
clc
sub
jmp
retf
enter
(bad)
jmp
mov
push
sahf
fdiv
add
cmps
loope
dec
lds
push
fcomp
fistp
fndisi(8087
rol
(bad)
push
jg
mov
push
outs
adc
sahf
jnp
mov
push
sbb
sub
dec
es
repz
adc
cmp
retf
fsubr
xor
inc
cdq
jnp
sub
fsubr
call
int
bound
xor
inc
and
dec
mov
iret
sub
bound
jmp
pop
push
repnz
mov
fild
ffree
add
popa
push
inc
xchg
push
pop
cmc
mov
aam
repnz
jae
cli
imul
mov
shr
mov
add
test
pop
scas
cld
iret
dec
or
and
sub
jnp
mov
add
fsubr
lods
sbb
inc
std
mov
inc
in
fld
ret
sbb
cmps
lds
sbb
cmp
fs
(bad)
lock
js
adc
push
ja
outs
pop
(bad)
fsincos
pop
push
xor
test
out
in
jge
push
fild
pop
dec
push
shr
push
pop
in
call
jns
int3
nop
xchg
movs
mov
dec
fsubr
push
xchg
mov
bnd
and
sub
cs
jns
xchg
mov
pushf
ds
out
xchg
sbb
(bad)
call
adc
repnz
sbb
shr
test
xchg
(bad)
ret
pop
push
push
ret
mov
sbb
cli
jbe
aam
mov
mov
dec
lods
(bad)
dec
mul
lahf
loope
xchg
imul
and
xchg
cmp
pushf
pop
(bad)
aas
sub
popf
fcom
dec
xor
sbb
lds
popf
rol
xor
sahf
ret
sub
inc
mov
xchg
hlt
push
bound
je
cmp
cs
cmp
pusha
jb
push
sbb
sub
icebp
and
xchg
push
loope
xor
pop
std
push
mov
imul
int
xchg
mov
sbb
xor
fstp
xchg
mov
in
inc
mov
popf
test
xor
out
mov
inc
or
inc
ret
lods
mov
pop
push
and
cld
jmp
add
stc
xor
imul
and
bound
jno
xchg
sahf
xlat
and
add
test
stc
test
mov
enter
inc
cmps
and
jnp
stos
ins
sub
hlt
arpl
bound
mov
adc
or
(bad)
cmp
cmp
cdq
mov
in
push
sahf
hlt
sbb
clc
mov
mov
jp
das
pop
jo
addr16
fnstenv
jnp
hlt
fiadd
jg
dec
sbb
jge
fdivr
popa
fnstsw
call
lods
jae
lds
in
push
adc
mov
(bad)
fstp
jo
pop
mov
or
pop
rol
mov
pop
mov
data16
jno
test
and
pop
mov
cwde
dec
jb
rol
iret
inc
rcr
popa
mov
pop
pop
int
push
xchg
sti
add
xor
xlat
shl
mov
push
cli
mov
out
ins
inc
loop
(bad)
int3
xchg
add
fdivr
pop
and
dec
out
dec
jmp
movs
loopne
jo
repz
sub
ins
mov
xlat
dec
outs
mov
jmp
sti
imul
jle
jmp
lods
or
retf
(bad)
mov
stc
cdq
lock
outs
addr16
imul
lods
xor
stc
cs
xchg
ins
inc
enter
adc
popf
push
xchg
add
outs
ficom
adc
inc
sub
das
inc
imul
push
pop
fldcw
mov
shr
les
pop
(bad)
xor
data16
lahf
test
std
mov
sbb
sar
lea
or
ja
add
shl
xchg
(bad)
sbb
or
fidiv
arpl
clc
xor
dec
(bad)
pushf
arpl
jbe
add
jmp
out
ja
sbb
lods
mov
outs
cli
(bad)
xor
sub
imul
sub
addr16
xchg
adc
sub
fdivrp
jne
sbb
mov
cmp
xor
cmc
jmp
add
out
dec
pop
xor
pop
aad
mov
stos
mov
inc
(bad)
(bad)
(bad)
js
inc
rcl
dec
pop
ds
dec
jl
and
aad
std
inc
inc
out
and
push
pop
popa
sbb
or
push
ds
scas
or
jno
imul
dec
xor
test
and
repz
call
lea
jl
mov
jno
mov
out
into
push
popf
ror
or
jo
arpl
mov
jp
out
xor
dec
sub
adc
in
clc
rcr
movs
stos
out
jecxz
mov
xchg
int3
loopne
fisttp
data16
jo
jl
jg
lahf
popa
jecxz
call
xor
mov
call
jl
pop
push
rol
xchg
jae
into
test
sub
shl
mov
mov
sbb
mov
cmp
cmp
add
test
cmp
lods
gs
ror
pop
gs
add
in
pusha
push
(bad)
mov
arpl
or
sahf
sbb
rcr
repnz
rcl
push
repnz
mov
pop
enter
(bad)
sub
push
movs
fld
mov
cmp
xor
mov
hlt
mov
ret
xchg
aaa
test
push
mov
inc
xor
mov
ds
int
enter
jnp
mov
stos
test
jnp
cmps
jl
test
mov
aas
not
mov
sub
sbb
or
aas
mov
std
sbb
mul
xlat
jle
mov
xor
(bad)
leavew
inc
pop
inc
xor
add
push
or
cwde
popf
add
cli
int3
push
inc
xor
in
mov
and
ret
stos
xchg
cmp
pop
inc
inc
cmp
mov
pop
ret
pop
loopne
push
adc
les
cmc
inc
mov
mov
shr
pushf
mov
lods
fsin
and
pop
xchg
sbb
or
test
jmp
arpl
mov
retf
add
xchg
and
jnp
push
mov
or
cmp
cmp
das
sahf
or
mov
pop
loopne
inc
xchg
mov
cmc
mov
shl
cli
xchg
je
stos
scas
push
push
jnp
adc
in
icebp
pop
jecxz
fcom
lahf
or
push
sub
cmps
lods
mov
lahf
cmp
imul
ror
cmp
and
outs
push
scas
pop
mov
popa
inc
xor
cmp
xlat
in
sbb
ret
scas
das
(bad)
xchg
nop
jbe
fsub
inc
sbb
cmp
sub
mov
cmps
push
stos
xlat
je
int3
cdq
ja
fdiv
add
and
cdq
push
enter
ret
xchg
xor
cmps
cmp
push
lods
xchg
(bad)
retf
loop
jmp
fdiv
test
xchg
(bad)
mov
jae
call
mov
push
sub
adc
mov
dec
lock
mov
adc
mov
adc
mov
sub
cli
jnp
fisttp
fdivr
pusha
add
adc
adc
mov
outs
and
call
ins
pushf
mov
sbb
push
dec
popf
xchg
ror
jbe
in
mov
rcl
mov
icebp
xor
out
fninit
pop
dec
sti
and
or
pop
jb
add
test
dec
jnp
fnstsw
adc
shr
inc
mov
in
xlat
xchg
mov
mov
in
push
das
mov
xlat
ins
test
pop
adc
arpl
dec
ja
js
cdq
adc
mov
aas
xchg
jns
out
dec
fistp
leave
jge
cld
call
xchg
je
push
ret
call
stos
inc
push
(bad)
mov
loope
jne
movs
sub
mov
jbe
inc
and
retf
adc
or
fnstsw
inc
movs
inc
inc
cmp
mov
gs
and
js
out
cld
mov
and
stc
jo
push
or
in
sbb
or
push
imul
xor
sbb
in
bound
ret
and
pusha
add
xor
loop
and
adc
sub
dec
sub
mov
jnp
aad
dec
mov
hlt
hlt
out
xchg
jmp
test
enter
pop
repz
in
xchg
cmp
lahf
setns
pop
xor
jl
mov
test
xchg
xor
mov
xor
sub
push
or
adc
sahf
cmp
pop
rcr
sbb
int
aad
sbb
mov
fdivr
inc
adc
(bad)
fiadd
cmp
mov
adc
push
xchg
cmp
cmp
inc
in
ret
adc
and
cmps
dec
jmp
int
dec
xchg
out
dec
xor
pop
sar
test
imul
inc
mov
pop
add
and
xor
or
gs
xor
adc
fidiv
dec
xor
cmp
rcr
daa
and
add
in
or
leave
mov
shl
int3
or
das
nop
mov
or
xor
loope
jno
adc
inc
repz
call
mov
lods
add
(bad)
ret
jb
mov
inc
jmp
je
in
shr
sub
in
xlat
and
or
test
or
mov
push
dec
dec
arpl
add
mov
pop
xor
cmp
jp
fs
or
cmc
mov
cs
das
mov
mov
add
xor
inc
std
cdq
mov
dec
fs
cmp
pushw
sub
movs
sahf
fmul
lahf
bound
cwde
jne
(bad)
mov
jmp
inc
xor
sub
inc
scas
mov
pop
mov
popa
(bad)
add
in
cmp
and
test
das
inc
ja
dec
mov
cmps
aas
sbb
(bad)
and
stos
xor
repz
mov
xor
hlt
test
test
pop
jno
cmp
sahf
xchg
sahf
cli
jmp
gs
push
mov
push
push
dec
out
adc
aad
cmp
jo
pusha
mov
add
jns
push
aas
mov
add
inc
mov
and
add
or
add
or
jb
aaa
xchg
cmp
std
cmp
sub
cmp
nop
in
add
xor
test
jb
ins
dec
lods
ror
aaa
dec
mov
(bad)
daa
ja
or
push
mov
outs
lds
sbb
out
push
out
inc
lahf
push
lods
movs
mov
lods
sbb
mov
inc
mul
cmc
xchg
cmps
shr
and
or
(bad)
or
or
lea
sbb
arpl
add
movs
cmp
jge
loope
sbb
jns
inc
repz
lds
fild
cmp
dec
adc
stos
add
pop
stos
dec
out
ror
pop
(bad)
pop
retf
jge
adc
xor
jecxz
test
inc
sbb
test
xchg
stos
lahf
inc
sbb
inc
pop
or
cmp
adc
(bad)
pusha
movs
add
sahf
lods
inc
and
fst
dec
dec
mov
mov
push
ja
xchg
out
xor
fdivr
jnp
pop
jno
push
mov
leave
fwait
push
jmp
or
in
jle
stos
cwde
(bad)
outs
dec
test
cmp
je
add
and
inc
sub
ficom
xchg
or
mov
rol
cmp
jne
jecxz
xor
add
jp
lahf
add
mov
mov
mov
call
xor
fdiv
fcom
or
jo
jg
adc
int
ins
mov
xor
dec
cmp
ja
call
fidiv
lock
dec
dec
or
adc
dec
inc
inc
mov
push
mov
cli
lea
hlt
mov
dec
sbb
add
adc
aam
gs
xor
mov
les
js
xor
inc
or
rol
jmp
popf
loopne
(bad)
sbb
sbb
(bad)
lods
or
cmps
cmps
cmp
movs
and
call
into
mov
aad
out
jecxz
fistp
in
int
jo
(bad)
jb
sub
mov
ficomp
aam
sub
or
clc
aas
or
xor
test
push
xchg
sub
outs
mov
adc
jmp
cmp
fs
imul
mov
aam
pop
popf
adc
xor
and
in
and
sbb
lods
das
push
repnz
nop
or
sub
mov
leave
add
call
dec
scas
mov
les
jns
(bad)
xor
dec
movlps
aam
mov
sbb
dec
sbb
pop
push
cli
and
or
mov
mov
pop
in
out
mov
add
clc
or
in
stos
xlat
sbb
sub
push
(bad)
pop
sub
stos
or
icebp
loope
lds
shl
mov
jbe
inc
jmp
push
push
push
dec
test
mov
mov
xor
jbe
out
repz
aad
sar
cs
lods
loope
xor
outs
pop
cmp
loope
stos
sub
in
jg
xor
xchg
pop
cmps
mov
mov
fild
inc
hlt
test
xor
loopne
popa
pop
or
mov
or
(bad)
rol
(bad)
dec
ss
add
int3
mov
add
js
or
mov
push
ficom
pop
xor
int
xchg
in
push
lods
inc
fild
fsub
pop
ficom
or
imul
aas
arpl
jmp
and
jae
fcomp
movs
gs
mov
xor
retf
dec
test
rcl
scas
push
stc
das
add
pop
xor
fs
es
fmul
sub
fisub
aam
outs
sahf
test
sbb
push
mov
loop
adc
or
cmp
xchg
js
cdq
xor
push
mov
xor
in
mov
jecxz
adc
enter
push
dec
pushf
or
in
(bad)
outs
je
je
mov
xchg
or
aas
add
in
mov
pop
outs
(bad)
cli
pop
call
ja
sbb
jmp
mov
fisub
sub
xlat
outs
adc
jo
cmp
cmp
enter
adc
sub
jl
fld
je
xchg
js
pop
and
test
pop
aaa
(bad)
arpl
ins
xchg
mov
adc
dec
xor
sbb
pop
add
or
aad
sub
sub
adc
add
mov
inc
loope
ficom
sbb
xor
cmc
movs
mov
push
les
pusha
fwait
mov
pop
jb
dec
pop
repnz
jge
adc
sub
push
inc
into
sahf
sahf
out
sahf
gs
lahf
test
mov
inc
shr
sub
aam
imul
sar
arpl
iret
sbb
sub
in
pop
or
and
push
cdq
lods
loop
ret
sbb
test
xor
test
ror
mov
iret
lock
(bad)
leave
xlat
aaa
data16
jp
ins
xchg
mov
mov
or
push
stos
aas
mov
leave
dec
shr
iret
icebp
add
mov
xor
cmp
pop
mov
repnz
dec
retf
rcl
rol
pop
call
xchg
clc
cli
pushf
add
push
add
nop
push
sbb
leave
inc
js
repnz
add
sub
jmp
(bad)
xor
(bad)
loope
pop
sar
hlt
icebp
int
addr16
imul
movs
(bad)
scas
fwait
pop
dec
cmp
out
sar
mov
les
(bad)
and
popf
jmp
xchg
ins
fiadd
push
lea
addr16
stos
ds
retf
div
imul
xlat
fwait
ins
mov
shl
mov
sbb
mov
fdivr
or
or
ds
mov
les
fidivr
push
xor
and
add
sub
cmp
dec
sbb
pop
inc
jle
imul
hlt
xor
jp
or
lea
mov
call
push
gs
std
inc
bound
push
dec
adc
icebp
xor
sar
xor
repnz
(bad)
xchg
inc
(bad)
out
mov
lahf
jbe
cmc
cmp
fisub
jbe
inc
in
push
jecxz
nop
pushf
fisubr
fs
xchg
and
pop
iret
mov
aam
stos
mov
dec
sbb
cwde
sbb
and
in
movs
es
popf
inc
div
mov
inc
test
cli
mov
add
(bad)
repnz
cmp
fwait
fwait
pop
jno
lods
dec
cs
cmc
(bad)
cmps
into
jp
dec
push
shl
ja
jl
(bad)
fcom
(bad)
cmp
inc
mov
cmps
adc
dec
sub
(bad)
imul
push
loopne
dec
stos
and
pop
test
push
xchg
jnp
movs
xchg
mov
loope
mov
or
mov
inc
sbb
dec
or
mov
push
aad
ror
jmp
dec
mov
xor
pop
out
dec
cld
hlt
cdq
sbb
cmp
je
sub
std
cdq
enter
loop
sbb
mov
sbb
nop
rcr
clc
enter
jmp
iret
push
arpl
arpl
sub
mov
mov
out
jle
mov
mov
or
mov
xor
scas
ds
mov
dec
cmp
(bad)
and
ins
jp
fdiv
loope
fcom
jle
cmps
mov
shl
les
pop
inc
shr
sub
in
add
cmps
xchg
pushf
or
push
sub
into
sub
mov
dec
jg
jle
mov
hlt
retf
mov
ss
xor
and
in
ss
ins
xor
sub
ds
(bad)
and
out
mov
sub
jno
out
pop
fbld
ins
(bad)
pop
and
pop
in
inc
imul
arpl
xor
sbb
jp
inc
sub
or
dec
mov
int
(bad)
cs
sub
mov
sahf
or
mov
push
(bad)
in
inc
mov
pushf
call
adc
push
cmp
lahf
bts
mov
jae
popa
loopne
push
and
rcl
leave
xchg
in
test
aaa
jge
sub
nop
dec
xor
ret
inc
sbb
mov
movs
stos
push
retf
mov
or
jbe
push
repnz
movs
push
cmps
(bad)
jp
fbstp
mov
pop
sub
lock
das
lea
fld
mov
adc
xor
xor
push
dec
pop
ror
xchg
adc
pop
xchg
dec
gs
stos
inc
fmul
add
xor
mov
or
jmp
jmp
ret
pop
fldcw
jecxz
cmc
push
out
loop
cmp
push
das
sti
xchg
xchg
mov
fcom
fidiv
dec
data16
dec
xlat
fsub
jb
mov
cmps
loopne
pop
push
or
xchg
push
neg
inc
imul
push
mov
out
xchg
ss
(bad)
xchg
inc
mov
mov
mov
sub
mov
pushf
jno
popf
sar
fldcw
or
add
loop
fistp
sbb
or
shl
inc
es
push
cmps
(bad)
push
adc
pop
dec
imul
inc
sbb
inc
mov
and
sbb
ja
push
icebp
pop
shl
dec
push
scas
sbb
cwde
push
add
fwait
mov
dec
xor
rol
mov
or
mov
and
jns
and
pop
push
and
fwait
iret
adc
js
ja
dec
mov
mov
lods
mov
xor
jb
adc
push
(bad)
and
pop
jne
jecxz
or
cmps
(bad)
bound
dec
adc
pop
cmp
sar
jo
(bad)
into
test
cdq
test
or
outs
pop
jp
fisubr
sar
mov
rol
cmc
add
aaa
outs
aas
xor
mov
sbb
sbb
mov
cli
jno
scas
lds
in
push
push
sbb
adc
pushf
xlat
pop
adc
jnp
daa
jmp
pop
pop
pop
loop
aaa
or
ins
pop
xor
hlt
xchg
test
cli
xor
call
mov
sar
hlt
xor
push
jbe
out
jg
sbb
sbb
lods
mov
movs
mov
test
sbb
test
jmp
mov
adc
fs
sbb
inc
xor
dec
lods
cs
mov
aas
mov
push
icebp
lock
imul
(bad)
popf
stos
fild
mov
sbb
loop
clc
push
repz
sahf
push
mov
jmp
push
xchg
cmps
pop
scas
(bad)
hlt
dec
mov
push
fwait
dec
mov
ret
and
xchg
(bad)
jo
pop
mov
sub
xchg
jae
mov
fwait
sar
xor
leave
push
push
je
xor
sub
retf
clc
xchg
lea
ret
push
ins
pop
int
jne
mov
add
jns
mov
test
cli
jne
mov
popf
jae
pop
cld
outs
or
mov
pop
push
cld
ja
sbb
pop
cmc
scas
dec
add
pop
call
sub
cmps
ret
pop
push
push
and
std
inc
xlat
xor
cwde
jb
cs
pop
ja
in
mov
mov
daa
xor
fwait
data16
aad
adc
imul
stos
aaa
mov
in
xor
outs
push
cld
cwde
arpl
movhps
out
ss
mov
jnp
stos
shl
cmp
stc
adc
ror
mov
hlt
sub
add
add
sbb
lea
mov
lods
mov
or
(bad)
rcl
sti
pop
sbb
aaa
adc
or
adc
jnp
sbb
push
mov
mov
loopne
cmp
mov
fcomp
call
mov
sub
add
lds
(bad)
aad
ret
push
mov
cmps
cld
jb
mov
cld
jae
dec
jb
mov
(bad)
stc
inc
push
dec
sbb
lahf
stos
sub
sub
and
rcl
popf
and
iret
loop
cld
sbb
jl
pop
into
outs
aam
sahf
push
rcr
mov
pop
mov
cmp
push
xor
push
cmc
std
js
push
neg
fld
jno
imul
cmps
pop
cmp
retf
in
cmps
mov
fisttp
mov
dec
dec
std
aaa
xor
(bad)
loope
jmp
sub
xchg
les
lods
imul
imul
pop
add
daa
aas
pop
xor
popa
jl
outs
stos
loope
cmp
shr
mov
lea
inc
pop
sbb
fldenv
mov
jmp
je
dec
jbe
mov
jno
add
stc
jns
call
cs
sub
adc
pop
fist
xor
jns
xchg
cmp
pop
xor
xchg
pop
adc
pusha
cmp
sub
in
loop
into
add
mov
or
sahf
cmp
mov
popa
add
out
ins
imul
sub
inc
sub
and
and
inc
fdivr
inc
adc
mov
mul
cwde
mov
or
movs
retw
or
pop
mov
push
xchg
hlt
icebp
sub
jmp
enter
shl
mov
sbb
or
push
rcr
xchg
mov
data16
push
pop
pop
mov
dec
dec
dec
cdq
add
sti
gs
call
inc
jmp
cwde
fbld
pusha
mov
inc
xchg
jmp
jmp
lods
jmp
inc
adc
pushf
pop
test
mov
test
mov
add
test
jmp
sbb
inc
xor
imul
popa
pop
mov
fild
rcl
sub
pop
dec
cmp
jl
adc
(bad)
and
mov
sbb
dec
inc
inc
lahf
test
sub
jecxz
into
adc
aam
pop
xchg
adc
ret
dec
shl
cmps
rcl
movs
mov
xor
aam
in
test
add
mov
jmp
in
or
sub
adc
cmps
cwde
ret
pop
imul
(bad)
push
lea
mulps
jg
jo
dec
mov
mov
mov
test
pusha
fxch
pop
jb
adc
and
jg
fcomp
push
popf
mov
les
(bad)
pop
mov
fist
jbe
psrld
and
fdivr
push
mov
xor
mov
lock
or
and
sti
test
lods
and
xchg
sub
rol
push
sbb
imul
xlat
mov
ret
or
mov
fucom
pop
icebp
dec
add
out
cmp
xchg
adc
adc
add
sbb
shr
or
jmp
sti
xor
sub
pop
std
popf
(bad)
and
mov
push
aad
setge
sar
jb
xchg
lahf
stos
jae
(bad)
jecxz
enter
xor
cdq
rcl
std
xchg
jmp
(bad)
int3
cs
xor
adc
jl
cmp
int3
cmp
mov
addr16
push
pop
daa
test
or
in
hlt
out
lods
sti
addr16
sbb
loop
(bad)
mov
inc
ja
push
adc
lods
inc
sahf
mov
ds
dec
inc
in
sub
mov
cmp
nop
add
dec
test
xchg
test
fisub
mov
push
inc
fstp
aad
push
push
sti
(bad)
push
xor
mov
in
mov
dec
stos
in
out
rcl
sub
cmc
je
rcr
mov
xchg
sahf
xor
xor
bound
mov
mov
rcl
adc
daa
les
mov
lahf
lahf
iret
xor
sbb
xchg
retf
dec
(bad)
dec
adc
mov
dec
push
pop
adc
lahf
lods
in
xchg
jne
add
pop
mov
push
cmp
cli
xchg
cmp
stos
(bad)
pop
sbb
stos
mov
adc
add
sbb
test
cmp
mov
loop
cs
jmp
or
pop
pop
jge
dec
push
retf
sbb
mov
xchg
sti
jmp
shr
inc
dec
sahf
add
imul
xor
pop
ins
lock
cmp
or
adc
sub
xor
mov
gs
xchg
sub
rol
xchg
mov
shl
stos
in
call
cmp
sbb
in
xchg
inc
popa
out
cmp
leave
int3
clc
inc
mov
jbe
pop
sub
rcr
lea
adc
add
mov
xor
mov
fcomp
hlt
into
add
jecxz
mov
(bad)
xor
add
cmp
cmp
jecxz
cli
xchg
ss
cmp
mov
mov
int3
push
inc
cmc
mov
dec
mov
das
cdq
xchg
fcmove
outs
xor
dec
mov
xchg
dec
xchg
inc
sbb
sub
loopne
mov
imul
(bad)
cdq
in
jns
cmc
or
shl
stc
push
cdq
xchg
(bad)
inc
jae
and
hlt
mov
(bad)
sbb
dec
pusha
retf
adc
pop
(bad)
aam
sar
push
or
addr16
inc
test
xchg
xor
les
mov
pop
cmp
fcomp
enter
add
fmul
cmc
popf
and
jb
cs
sahf
push
fs
enter
and
aad
inc
int
sub
inc
mov
add
rcl
out
popf
mov
pushf
(bad)
dec
cmc
dec
and
adc
jae
in
cmp
mov
xchg
mov
dec
jno
push
mov
push
dec
lahf
push
xchg
cli
sbb
add
inc
xor
mov
ret
nop
xchg
lock
punpckhdq
mov
sub
cli
stos
lods
int3
dec
sub
pop
adc
fs
jbe
loope
inc
jbe
(bad)
pop
adc
sbb
rol
inc
leave
inc
xor
jb
(bad)
fwait
shl
pop
sub
ins
aam
xor
mov
data16
pop
sub
pop
lahf
sub
xchg
aam
loope
push
mov
pminub
jbe
mov
or
in
cmp
ins
push
sub
shl
lahf
mov
mov
sbb
cli
scas
fwait
loopne
sub
loop
sbb
pop
or
movs
push
scas
fisub
dec
mov
dec
out
sbb
lea
jbe
outs
push
sub
cld
mov
push
addr16
ins
xchg
sahf
pop
popf
movs
or
ja
nop
mov
mov
lods
outs
ja
dec
das
mov
cmp
jae
add
hlt
(bad)
nop
fwait
cwde
cmp
inc
jno
mov
pusha
and
or
push
bound
xchg
adc
outs
push
jg
rol
out
ins
mov
jae
add
(bad)
cli
mul
dec
xor
dec
lahf
into
xchg
and
dec
push
mov
xchg
jmp
gs
test
jmp
mov
fidiv
and
data16
sbb
in
push
aad
rcr
sti
inc
cmp
pusha
gs
fidivr
mov
cmp
jbe
xchg
dec
imul
pop
ja
iret
or
and
xor
sub
loope
mov
jae
pop
mov
pop
mov
(bad)
jmp
ja
jo
(bad)
xchg
cmp
dec
cld
and
push
mov
push
xchg
pop
dec
pop
mov
push
mov
jp
and
sbb
fcmovnb
aas
clc
pop
in
icebp
jmp
jb
in
xor
cli
fwait
clc
mov
pop
cmp
imul
mov
std
mov
bound
js
sub
push
dec
adc
data16
sahf
and
pop
and
cs
push
jmp
jo
(bad)
mov
or
adc
cmps
dec
jae
adc
lock
(bad)
ja
mov
es
xchg
shl
jne
cdq
les
mov
(bad)
dec
scas
popa
cli
adc
pop
xor
xchg
mov
adc
pop
dec
cmp
pop
test
sub
xchg
pop
push
sub
sbb
and
sub
fs
cs
(bad)
lock
mov
add
or
mov
es
cmc
in
mov
mov
dec
es
stos
sar
mov
push
jecxz
lods
retf
mov
sti
or
mov
cmps
pusha
mov
jp
dec
inc
xor
leave
xchg
jns
fld
cwde
sub
daa
enter
test
repnz
ds
int
xchg
or
fiadd
xlat
adc
jecxz
sub
fld
movs
cmp
clc
test
pop
mov
jp
movs
ds
sub
imul
movs
and
pop
addr16
jno
or
gs
push
scas
inc
adc
push
movs
jb
mov
ret
gs
mov
imul
ret
out
bound
lahf
and
pop
imul
push
and
mov
test
dec
cmps
mov
movs
xor
cld
mov
jmp
adc
addr16
ret
cmp
scas
popa
push
and
outs
add
or
mov
ret
cmps
lods
fadd
xor
mov
add
popa
jp
mov
rcr
mul
bnd
jo
adc
cmps
push
mov
jne
sub
mov
add
jl
int
and
push
fstp
scas
xor
sbb
sub
or
pop
(bad)
dec
div
cmp
popa
jne
jmp
stc
(bad)
sub
pop
leave
(bad)
cli
popa
jno
sbb
and
sub
mov
and
cmp
shr
pop
sub
sub
stos
mov
loope
add
push
repz
adc
shl
mov
push
call
movs
sbb
ins
xor
push
sbb
ds
jns
fpatan
inc
xor
dec
adc
xchg
dec
inc
nop
sub
dec
mov
xor
pop
mov
(bad)
add
xchg
inc
pop
ret
cli
pushf
push
call
adc
in
popa
fist
or
mov
sahf
add
cmps
aaa
dec
jp
sti
leave
test
jg
jmp
adc
sar
sbb
lods
and
push
jae
orps
or
neg
xlat
jecxz
sti
call
add
inc
xchg
cmp
ins
xor
xlat
fld
jae
clc
xchg
cmp
in
dec
sbb
popa
out
(bad)
test
mov
enter
cmp
sub
pop
sbb
jns
and
add
or
dec
cmp
push
jle
int3
ss
adc
aad
add
neg
nop
push
inc
jg
sbb
sub
mov
mov
pop
les
mov
mov
inc
mov
inc
es
popf
leave
fild
(bad)
fs
inc
std
or
in
inc
pop
pusha
push
call
arpl
cmp
xchg
mov
div
fadd
scas
gs
out
and
aaa
pop
xor
bound
jecxz
dec
ins
jg
add
out
(bad)
sti
data16
fild
rcr
push
xchg
pop
shl
or
or
jne
sahf
sbb
inc
fimul
push
pop
aad
sub
add
stc
xor
or
push
cwde
(bad)
div
xchg
aad
jns
(bad)
(bad)
sti
pop
popa
sbb
les
in
fstp
rcr
mov
or
(bad)
les
mov
leave
dec
add
add
push
clc
pop
call
inc
or
movs
jmp
mov
js
and
xchg
cld
push
fcmovb
sbb
iret
push
les
mov
shr
mov
mov
test
inc
sbb
push
jl
mov
dec
movs
cmp
push
and
and
push
shl
cdq
out
mov
sbb
call
adc
push
(bad)
cmps
clc
mov
into
inc
scas
stc
jecxz
xchg
mov
jmp
retf
sub
mov
popf
rcr
jnp
push
(bad)
mov
xchg
pop
neg
pop
lods
xchg
outs
xor
rcr
xchg
xchg
pop
out
mov
adc
xchg
add
xor
or
mov
fdiv
xchg
jecxz
das
mov
jae
mov
mov
xor
cmp
fldenv
jp
repnz
dec
data16
or
inc
push
jp
fisttp
loop
icebp
inc
cmp
xchg
stos
mov
xchg
sub
jno
sti
or
add
add
cmc
cs
inc
mov
xchg
sub
push
fdivr
call
cmps
inc
cmps
pusha
cmp
inc
xchg
(bad)
pop
cmp
sbb
mov
shr
bound
or
shl
push
inc
retf
pop
adc
jb
jecxz
ficomp
mov
fist
or
inc
lock
or
pusha
mov
daa
push
int3
add
mov
les
rcl
sbb
out
out
xor
cmps
pop
add
fwait
daa
emms
jno
outs
sbb
scas
(bad)
gs
dec
dec
sbb
push
push
ins
dec
cmp
add
mov
lock
imul
xchg
or
sub
ficomp
sti
into
test
lock
mov
push
push
cmp
dec
rol
popa
push
dec
loope
repnz
lods
and
rol
mov
mov
cdq
sub
push
in
retf
std
lods
mov
aas
inc
mov
push
sar
jns
inc
mov
add
pop
clc
inc
imul
push
xchg
adc
mov
ja
retf
jg
leave
or
push
ret
fcmovnbe
xor
pop
sahf
pop
test
data16
je
ins
cmc
inc
fidiv
outs
xchg
jmp
out
scas
outs
(bad)
mov
mov
icebp
push
inc
loope
(bad)
cld
ds
jge
leave
sub
sbb
sub
push
jb
sbb
gs
jmp
inc
scas
add
dec
(bad)
mov
push
rol
rcr
jns
xchg
pop
pop
popa
(bad)
push
inc
xor
cld
cmps
sub
push
mov
int
iret
test
movs
pushf
arpl
mov
ja
dec
xchg
pop
repnz
or
mov
inc
aam
xor
xor
pusha
hlt
cwde
in
pop
and
fld
inc
jp
fmul
cmp
add
dec
mov
test
xchg
in
addr16
cmp
xor
mov
rol
push
or
jne
(bad)
fsub
sti
push
inc
add
mov
out
and
sti
sbb
gs
jmp
push
mov
add
ror
sti
outs
and
retf
jle
mov
cmp
fisttp
inc
jmp
(bad)
jnp
mov
dec
xchg
dec
pop
inc
sbb
cmps
aad
mov
sub
jmp
inc
sbb
or
cs
dec
lahf
imul
fcmovbe
mov
adc
call
xor
sub
(bad)
cmp
inc
xor
dec
mov
mov
xchg
aaa
pop
xor
push
jg
push
xor
shr
rol
inc
shl
or
xchg
or
jae
lods
cmp
lock
xor
lods
ds
cmc
icebp
adc
daa
inc
(bad)
push
data16
fdivr
and
xchg
push
stos
mov
inc
icebp
mov
push
sbb
and
ins
(bad)
rol
xor
mov
cmp
add
arpl
movs
sahf
and
mov
adc
dec
stos
push
neg
stc
jl
mov
repz
mov
pop
retf
(bad)
sbb
loope
out
int
push
into
frstor
cmps
jp
push
dec
shld
mov
jmp
xor
bound
out
lods
adc
cmps
iret
inc
fs
cs
in
aad
cmp
fs
mov
mov
call
pop
retf
std
sbb
sub
or
loop
pusha
jmp
mov
push
sub
ds
lock
jbe
inc
adc
popa
inc
push
or
mov
outs
aaa
jmp
dec
dec
test
or
jle
dec
outs
adc
cwde
jle
(bad)
retf
sbb
push
nop
test
dec
mov
stc
sbb
sub
xor
pop
fdiv
xlat
xor
inc
mov
sahf
cmp
xchg
mov
fwait
pop
jg
or
out
dec
xor
int
push
iret
cmp
loope
out
xchg
pop
jl
mov
mov
iret
daa
inc
push
mov
push
imul
jno
icebp
pop
xchg
out
push
out
sbb
cmp
mov
ror
repnz
imul
les
and
ret
sbb
ret
pop
mov
popa
fidiv
push
xor
rcr
cli
mov
loop
xlat
int
(bad)
or
push
test
rol
outs
and
test
xor
in
jecxz
sub
push
stos
lods
add
scas
jle
call
fistp
cmp
(bad)
xor
mov
cli
mov
fnsave
aam
test
je
or
outs
pushf
or
shl
cwde
ds
pop
mov
dec
clc
xor
ds
inc
scas
mov
rol
or
and
xchg
pop
ins
rol
or
cs
mov
(bad)
sub
mov
xchg
mov
dec
pop
push
fcmove
dec
fidivr
in
test
shl
xchg
and
cdq
pop
sub
mov
lea
jae
mov
fwait
add
jno
push
and
jp
inc
add
mov
mov
sub
xchg
ss
or
xor
enter
add
in
or
fincstp
ins
cmc
div
cmp
inc
or
sub
cmp
adc
jb
leave
shl
adc
jne
mov
ds
data16
or
es
fwait
lods
pop
mov
out
test
xor
cs
mov
inc
push
dec
shr
sub
xor
and
inc
xor
out
add
into
movs
leave
and
jge
xchg
dec
jnp
inc
mov
push
movs
(bad)
out
adc
add
sbb
jbe
xor
leave
sub
mov
or
ror
mov
ja
mov
or
ror
inc
ret
jmp
les
cmp
lea
pusha
cli
mov
stos
ins
jno
lock
adc
and
push
fisubr
adc
pusha
outs
sti
call
ss
arpl
aam
push
mov
(bad)
fsub
or
in
cwde
mov
lds
jl
cmp
repz
leave
jecxz
sub
shl
inc
jne
mov
adc
pop
push
aaa
repz
int3
lods
shr
aas
stos
ret
retf
mov
inc
call
push
add
adc
movs
cmp
cmp
ins
mov
adc
cmp
jg
sub
aaa
xor
icebp
inc
lds
fisub
sbb
mov
addr16
mov
push
jne
push
pusha
jl
in
or
xor
xchg
out
jbe
xor
call
test
push
or
scas
add
sbb
rcr
cmps
adc
test
iret
mov
adc
push
(bad)
push
push
shl
ret
xlat
scas
add
cmps
or
loope
sbb
fwait
into
xor
test
test
inc
shl
and
cmp
add
mov
mov
cli
sbb
lods
movs
xchg
(bad)
add
daa
dec
addr16
xor
ror
lock
jecxz
int3
ja
and
pop
leave
hlt
mov
xor
jne
aaa
and
inc
sbb
adc
mov
jmp
push
ins
ins
scas
dec
mov
cmp
fidiv
test
mov
out
sbb
push
or
ret
aam
call
jns
sbb
jp
je
inc
cli
stos
clc
xchg
jae
sbb
in
jp
xchg
out
pop
imul
jmp
pop
stos
(bad)
cwde
les
in
dec
or
ds
call
(bad)
popa
nop
stos
xor
pop
xchg
adc
push
sbb
rol
mov
ret
ret
cs
std
mov
or
int
out
clc
xchg
mov
in
not
enter
inc
mov
push
dec
jg
cmp
rcr
retf
pop
bound
ins
stos
cld
jmp
addr16
and
sbb
xchg
call
sahf
imul
test
ror
int3
nop
xor
daa
loop
or
gs
cmps
fadd
bound
push
scas
xchg
imul
lahf
xor
add
cld
adc
mov
pop
pushf
cli
dec
popa
mov
pop
mov
(bad)
stc
inc
cdq
jbe
les
pop
leave
dec
ds
jmp
and
out
xchg
in
lock
ret
sub
inc
nop
aas
xchg
adc
add
lea
lahf
loope
test
add
jno
push
jge
(bad)
adc
in
shl
add
mov
(bad)
mov
out
ss
outs
jae
fwait
sub
mov
or
lods
(bad)
dec
jbe
dec
jecxz
rol
int3
outs
ss
inc
jmp
pop
adc
mov
(bad)
pop
sub
ins
xchg
ror
xor
ds
jae
or
hlt
xchg
retf
ret
loopne
(bad)
rol
repz
fsubr
inc
sbb
cmc
jns
ror
shl
shl
test
sbb
out
pushf
xchg
js
(bad)
imul
faddp
(bad)
pop
sbb
aaa
or
out
adc
enter
mov
xchg
mov
mov
jo
mov
ss
add
stos
pop
xchg
bound
pop
dec
mov
inc
fstp
sub
jle
fld
aas
scas
pop
mov
jae
je
mov
jge
js
loopne
vxorpd
push
inc
jmp
ins
fwait
lods
ins
dec
mov
dec
adc
stc
jo
cmp
out
cmp
pop
movs
push
push
cmp
out
shl
nop
out
imul
out
dec
into
retf
sub
packssdw
or
loop
sbb
in
stc
pop
repnz
xchg
outs
xchg
clc
cmp
in
cmp
adc
inc
aaa
push
sbb
js
push
or
loopne
mov
xor
cmp
data16
(bad)
movs
add
dec
(bad)
les
loopne
mov
cmc
add
cmc
jp
cmps
fiadd
push
xchg
push
mov
adc
movs
aam
lea
xlat
mov
pop
sbb
push
lods
scas
in
push
add
fxch
fild
(bad)
data16
cmp
push
ffree
repz
aas
mov
js
mov
dec
mov
ins
lods
inc
cmp
lods
sbb
ins
sti
in
out
fld
add
jo
fidiv
and
mov
jl
xor
adc
sbb
fidiv
add
repz
xlat
mov
fidiv
push
aaa
retf
mov
push
or
jns
jge
mov
mov
mov
icebp
loopne
jp
mov
xchg
loop
in
in
push
in
into
aad
pop
mov
mov
dec
loope
test
bound
lods
retf
sbb
jg
or
inc
cmc
mov
pop
hlt
lea
pop
or
sub
push
adc
mov
mov
adc
and
adc
hlt
test
sub
lea
add
inc
call
fsub
outs
xchg
push
fdivr
push
rcl
scas
jo
cmps
(bad)
and
movs
es
inc
push
movs
popf
sub
das
mov
mov
sbb
(bad)
movs
mov
je
fdiv
xor
pop
sub
fimul
jmp
pop
sbb
mov
cmp
fidiv
add
rcr
stc
dec
test
xchg
inc
push
dec
sub
out
pop
pop
inc
push
imul
shr
leave
adc
loopne
out
retf
add
sbb
aas
xor
fsubr
mov
ins
sub
and
xor
inc
retf
in
adc
popf
jecxz
jg
jne
dec
in
adc
popf
rol
enter
sub
sti
or
loop
ja
pop
js
addr16
cmps
leave
out
lock
adc
ror
mov
in
in
test
dec
pop
pop
jge
pop
ret
mov
in
jnp
out
mov
jbe
ror
jb
and
into
adc
dec
xlat
loope
dec
cdq
fistp
sar
sub
cmps
mul
hlt
(bad)
cmp
iret
xchg
fidiv
loopne
sub
sbb
mov
mov
jne
mov
mov
jns
sbb
mov
xlat
dec
test
or
stos
xor
cmp
adc
hlt
inc
icebp
icebp
inc
dec
inc
scas
mov
fnstenv
inc
mov
jo
icebp
cwde
sti
or
out
mov
sahf
dec
push
push
jno
in
sub
ins
pop
jne
inc
call
inc
repz
ds
push
adc
xchg
cmp
inc
sub
stos
outs
outs
retf
arpl
push
push
loop
xor
clc
mov
jp
ficomp
icebp
jb
inc
cmp
scas
pop
test
mov
or
xchg
fwait
pop
pop
aam
jnp
sbb
cmp
xchg
call
xor
pop
cwde
mov
sbb
mov
in
xchg
scas
jb
or
sbb
fsubr
sub
sub
fcmovne
adc
pop
pop
xor
sub
out
xchg
push
adc
stos
add
push
xor
mov
and
mov
(bad)
in
neg
sub
adc
push
out
aas
pusha
mov
cld
cs
out
inc
sbb
scas
cmp
lock
(bad)
pop
cmps
mov
inc
pusha
sub
fadd
xchg
inc
fild
ins
cmp
jnp
adc
xor
repnz
push
and
xor
pop
(bad)
and
jae
and
stos
ret
out
inc
dec
adc
leave
leave
dec
push
cwde
adc
jbe
(bad)
es
push
pop
mov
retf
sbb
dec
lea
idiv
cmc
cdq
ss
pop
sub
mov
enter
cmp
cdq
div
add
test
sbb
jnp
add
mov
add
lds
mov
inc
fdivrp
test
push
aad
ficom
(bad)
sbb
bndstx
and
mov
das
out
inc
push
push
xchg
cmp
pop
cmp
lods
adc
js
mov
pop
pop
push
sub
xor
repz
fimul
xor
in
xor
popf
mov
cmp
inc
sbb
xor
push
retf
in
int3
cli
cmp
leave
les
sbb
(bad)
jecxz
sbb
add
retf
int
test
fcmovnb
jnp
cdq
pop
outs
jp
lea
push
retf
popa
mov
bound
xchg
daa
ficomp
(bad)
stos
or
or
sbb
clc
jmp
mov
sbb
adc
jo
(bad)
and
mov
and
and
push
outs
pusha
loop
or
push
pop
sti
dec
sbb
stos
clc
in
push
and
pop
arpl
cmp
xor
mov
add
je
shl
sbb
inc
sbb
sub
rol
stos
jp
mov
lock
push
hlt
xchg
inc
sahf
push
mov
jae
inc
pop
sbb
push
(bad)
jne
call
ds
xor
pop
(bad)
jno
sbb
adc
test
dec
ss
iret
mov
ficomp
sar
add
fimul
aad
cmp
inc
leave
adc
adc
mov
pop
jmp
xor
adc
and
inc
stos
fidiv
stc
lods
movs
int3
cmp
sahf
daa
in
xchg
aad
jo
outs
cmc
mov
and
add
arpl
ja
push
cli
fs
and
imul
sub
aam
cmps
fist
push
movs
lds
jae
xchg
and
test
addr16
movs
out
mov
(bad)
and
mov
xor
xchg
mov
cmp
mov
in
nop
jp
imul
icebp
aaa
sub
xchg
inc
(bad)
in
or
dec
adc
mov
xchg
sbb
fdivr
sbb
jg
sub
ins
push
jge
and
mov
add
jbe
inc
mov
mov
fld
jg
sub
arpl
mov
jno
(bad)
fisubr
push
stc
xor
ret
(bad)
into
ret
popa
and
into
xchg
xchg
mov
in
fild
sti
xchg
sub
mov
pop
dec
jno
or
adc
cmp
icebp
sub
rcr
imul
test
jl
fwait
jb
xchg
test
mov
pop
push
jg
popf
stos
xor
dec
dec
pop
mov
sbb
cmp
lahf
mov
ret
cmp
and
pop
lds
fisub
jg
xchg
cmc
inc
mov
jp
jns
or
js
sti
sbb
dec
inc
adc
and
lea
push
pop
retf
xchg
fldcw
mov
push
sbb
jo
push
sbb
xchg
pop
imul
aas
xor
fnsave
faddp
adc
bound
sbb
xchg
in
(bad)
dec
loop
xchg
and
test
std
cmp
ins
test
loope
mov
pop
shl
dec
int
sar
hlt
sbb
and
int
sub
pop
sub
jg
xchg
arpl
push
fwait
jge
xor
pop
sbb
add
xor
mov
sbb
inc
lock
int3
bswap
sbb
cld
clc
outs
dec
cmp
jle
mov
xchg
rcr
pop
and
in
pmaddwd
xor
and
jmp
call
rcr
arpl
inc
iret
cld
pop
in
in
add
jmp
ja
mov
fist
jb
pop
and
jecxz
mov
dec
jp
xchg
pop
mov
in
sub
scas
fisub
(bad)
jmp
movs
add
enter
test
pushf
and
sbb
dec
pusha
(bad)
adc
dec
dec
cld
int3
aas
xchg
std
mov
add
fild
xchg
jne
out
sbb
lock
mov
aas
add
test
dec
push
dec
aas
in
bound
xor
ins
pop
xor
push
lock
push
ret
fdiv
xor
adc
mov
test
fwait
or
dec
jl
mov
pop
movs
mov
mov
cmp
loop
push
fsub
sbb
add
sub
adc
jl
push
repz
mov
mul
add
out
scas
xor
mov
in
xchg
loop
or
sub
out
ficomp
dec
xor
jg
dec
(bad)
clc
add
aas
xchg
enter
push
cmp
mov
add
xor
jp
mov
mov
mov
pop
pushf
mov
and
xchg
xchg
jns
cmp
jmp
sbb
adc
adc
dec
inc
push
adc
mov
fmul
or
addr16
pop
jecxz
push
dec
sub
mov
jnp
imul
in
movs
jmp
sub
out
imul
adc
push
adc
or
sahf
push
and
(bad)
fnsave
or
push
or
mov
mov
jo
adc
mov
fld
loopne
stc
js
push
mov
clc
push
cmps
outs
sub
push
imul
mov
(bad)
dec
pop
cwde
cmp
call
pop
inc
(bad)
fbstp
leave
xchg
test
test
(bad)
ror
aad
imul
mov
popf
jnp
xor
cmps
cli
mov
add
inc
lahf
outs
imul
add
daa
push
cwde
inc
xchg
int3
sbb
jns
push
sub
ss
mov
sub
add
int3
lods
mov
test
aaa
in
and
neg
js
stos
je
mov
es
and
pop
push
cld
imul
inc
mov
scas
mov
inc
out
scas
mov
inc
in
jmp
push
(bad)
cmps
pop
jle
shl
push
inc
inc
sub
xchg
adc
jbe
fs
pop
bnd
xor
pusha
movsx
dec
sub
ja
(bad)
cwde
dec
cwde
cwde
(bad)
push
mov
jle
(bad)
cs
ins
out
pmaddwd
cmps
cmp
mov
and
mov
sub
add
rcl
push
enter
cwde
add
and
loopne
push
clc
inc
mov
test
xchg
and
leave
mov
dec
dec
pop
lods
ins
xchg
imul
(bad)
xlat
idiv
sub
mov
int3
inc
mov
push
and
xor
adc
stos
fninit
test
adc
pusha
pushf
add
jg
push
cmp
xor
sub
sti
shr
rsm
or
retf
(bad)
out
and
imul
push
lea
mov
popf
shl
out
test
add
repnz
sbb
jecxz
cmp
or
mov
mov
jg
or
test
adc
inc
cmp
mov
inc
xor
or
out
jl
into
dec
popa
(bad)
repnz
mov
dec
xchg
dec
nop
gs
xchg
xchg
push
or
ror
shl
cmp
arpl
inc
cmc
jl
push
mov
lahf
sti
jecxz
cld
mov
add
adc
lods
inc
sbb
mov
sti
lds
jnp
add
jp
lds
dec
xchg
add
not
fisttp
ss
sbb
mov
sub
sbb
in
xor
push
jns
mov
loop
and
jnp
jb
lds
test
add
retf
stos
loop
(bad)
mov
mov
ins
mov
js
cmps
or
xor
xchg
nop
or
sbb
lods
jbe
and
jbe
ret
retf
pop
(bad)
cmp
xor
lods
jnp
pop
je
push
dec
popa
fldenv
arpl
call
fdiv
test
jge
daa
lea
lods
mov
push
jne
jns
mov
adc
xor
int
push
daa
cmp
lods
pop
cmp
iret
jl
sbb
push
outs
jbe
add
add
es
mov
mov
fsubr
mov
or
push
rcr
das
add
push
jno
sbb
imul
xchg
repnz
xchg
sub
xchg
(bad)
sub
lds
(bad)
and
add
sbb
das
ja
dec
fld
sbb
or
stos
cli
test
in
xchg
and
mov
fwait
test
scas
mov
sbb
dec
mov
in
leave
sbb
imul
out
aam
movs
int3
dec
adc
std
inc
lahf
cdq
mov
mov
(bad)
out
and
dec
cs
cdq
cmc
arpl
mov
push
mov
mov
inc
dec
into
inc
out
shl
shl
inc
loopne
adc
leave
repnz
push
aas
adc
mul
add
push
shr
mov
and
and
jno
dec
dec
jmp
jne
test
repnz
xchg
retf
jae
xchg
cmp
push
dec
push
xor
ss
mov
ret
cmp
adc
cld
daa
mov
int
stc
ret
es
sbb
stos
jns
mov
mov
iret
mov
cli
in
or
retf
loop
fldcw
out
lods
jns
es
or
sbb
xchg
dec
repnz
xchg
xor
add
jge
dec
div
inc
dec
push
push
adc
sub
or
test
xchg
jb
push
mov
sbb
jecxz
aam
sub
sbb
jge
fnstenv
xor
sti
mov
mov
std
cld
call
loop
cmp
(bad)
cmps
fsincos
in
mov
pusha
je
mov
aaa
outs
out
dec
adc
push
retf
loop
(bad)
and
jle
xchg
pusha
jg
sub
jb
adc
adc
add
cli
imul
inc
imul
fisttp
pop
pop
retf
mov
pop
out
pusha
popf
cmp
push
movs
pop
iret
aaa
sub
jns
dec
(bad)
push
rcr
das
mov
outs
aam
or
inc
xchg
push
dec
dec
stos
(bad)
inc
mov
sbb
push
jo
(bad)
push
cdq
sbb
mov
ss
inc
mov
adc
into
rcr
es
lock
inc
cmp
sub
or
in
inc
(bad)
push
pop
jle
pop
mov
jb
dec
mov
mov
test
pop
lods
int
loope
inc
iret
xor
push
mov
dec
jl
push
inc
xor
bound
int3
aad
scas
dec
je
add
push
movs
or
es
push
(bad)
adc
(bad)
mov
and
mov
mov
inc
mov
loopne
test
out
xchg
cwde
loopne
adc
mov
hlt
dec
push
add
mov
jbe
push
mov
movs
scas
pusha
xor
mov
and
pushf
push
pushf
scas
sbb
das
pop
loopne
or
les
iret
dec
dec
iret
popf
inc
jbe
aaa
out
pop
or
pop
xchg
(bad)
adc
inc
imul
out
data16
cmps
inc
and
shl
test
lods
dec
add
xlat
popa
imul
pop
xchg
(bad)
sbb
cwde
jb
(bad)
sub
xchg
add
pop
imul
jo
dec
xor
mov
push
or
dec
mov
mov
xchg
out
stc
rol
xchg
pop
and
icebp
and
or
xlat
nop
mov
jns
gs
psubd
lods
jmp
test
call
je
mov
gs
inc
or
outs
add
pop
cwde
cmp
dec
mov
sub
(bad)
pushf
xchg
dec
jnp
je
ins
dec
cmc
cmc
and
dec
out
shl
pop
outs
gs
aaa
mov
shl
sub
in
and
mov
retf
lock
gs
ret
jno
jg
mov
sub
imul
addr16
ins
mov
sub
mov
jle
jne
inc
xor
retf
call
xchg
push
fnstenv
sub
or
pop
dec
lods
dec
cld
inc
sbb
cmp
cld
adc
xchg
mov
dec
sbb
jne
mov
pusha
fst
mov
imul
in
pop
pop
adc
inc
inc
(bad)
pop
jo
dec
out
add
pop
jmp
sub
xchg
shl
sub
mov
sbb
ja
nop
jecxz
test
mov
xor
jmp
push
test
std
fnsave
mov
test
fisttp
adc
ret
dec
mov
add
cmp
aaa
daa
iret
into
(bad)
aaa
fstp
sbb
call
jmp
cwde
inc
jb
sbb
add
icebp
int3
xchg
adc
cdq
data16
iret
je
int
xchg
nop
mov
out
fstp
add
popa
ror
std
mov
jmp
push
into
dec
fisubr
pop
cld
add
mov
(bad)
(bad)
dec
pop
test
jb
rcl
pop
pop
xchg
and
or
imul
jg
lds
and
xchg
into
(bad)
adc
out
imul
adc
out
cmp
dec
sbb
int3
xor
dec
dec
retf
fdiv
lods
mov
push
out
pop
daa
sbb
popf
lods
movs
mov
cmp
push
sub
or
lahf
mov
lahf
fdivrp
movs
mov
push
js
or
ficomp
xor
(bad)
jns
push
push
sub
and
mov
or
into
add
aad
sub
adc
mov
mov
xchg
mov
dec
stos
out
mov
test
(bad)
lahf
sub
out
or
pop
mov
fcom
arpl
cmp
inc
adc
fnstcw
sub
rcl
fild
xchg
pop
adc
mov
ins
imul
ret
leave
dec
scas
mov
jbe
jg
imul
inc
adc
jmp
xor
jnp
adc
mov
fwait
mov
or
scas
sbb
adc
jb
pop
aas
push
cdq
add
dec
mov
dec
addr16
mov
jae
cdq
dec
dec
(bad)
fld
xchg
movs
call
sub
rcr
data16
int3
ins
pop
(bad)
fldenv
lock
mov
hlt
scas
fidivr
movs
dec
ds
pop
in
leave
push
mov
inc
push
push
mov
test
or
icebp
into
cmps
inc
neg
cmp
inc
mov
jg
xchg
mov
arpl
cmps
call
inc
sub
pop
mov
shl
cmp
int
ins
push
jp
mov
mov
(bad)
or
fcomip
ins
(bad)
xchg
(bad)
inc
clc
jp
jmp
mov
(bad)
sti
mov
or
mov
stc
mov
add
xor
mov
sub
or
loop
mov
add
scas
mov
sub
ins
sbb
add
in
xchg
sub
cmps
cld
mov
inc
clc
mov
or
pop
rcr
pop
les
pop
mov
jge
repnz
mov
mov
adc
push
movs
or
pop
cmps
pop
sahf
in
adc
xchg
cli
call
cmp
or
mov
xchg
sbb
push
fdivr
sbb
mov
aaa
xor
pop
adc
sbb
sub
push
sbb
cmp
(bad)
jmp
cmp
mov
push
mov
repz
cmps
jae
fst
xchg
fisub
lahf
add
call
cmp
aam
fimul
sbb
int
cmp
or
imul
ss
movs
xor
daa
pushf
enter
gs
fnstsw
jb
and
add
inc
mov
inc
(bad)
les
jbe
ret
int
call
pop
shl
jno
fsubr
icebp
mov
xor
cdq
sub
in
pop
repz
enter
pop
cmp
nop
adc
xchg
repnz
test
push
lea
cmp
mov
mov
push
(bad)
pop
imul
outs
inc
sub
ja
pusha
retf
sbb
adc
es
pop
pop
pop
sti
inc
ror
repz
inc
add
cmp
or
xor
imul
(bad)
daa
push
inc
ret
mov
fucomi
dec
push
repnz
jno
and
adc
ja
sbb
in
and
sar
add
out
mov
das
(bad)
sbb
mov
push
inc
adc
retf
aam
fisttp
stos
push
inc
mov
not
push
cdq
repnz
(bad)
and
xor
xor
dec
mov
mov
xchg
popf
mov
mov
je
aaa
mov
cld
mov
dec
adc
sbb
(bad)
sbb
cmps
and
pop
mov
fdivrp
fbstp
jnp
xchg
or
mov
enter
call
inc
out
or
adc
xchg
fisubr
lods
sbb
retf
fcmovnu
inc
adc
imul
or
push
push
pop
pop
lds
mov
rol
and
xor
add
mov
cmc
call
(bad)
xor
inc
mov
adc
dec
dec
mov
xchg
cld
loope
lds
ror
mov
outs
pop
cmps
and
adc
mov
fstp
jmp
fcmovne
add
das
dec
or
out
mov
fst
enter
and
jo
outs
xor
mov
cmp
dec
ds
jg
push
(bad)
hlt
dec
mov
push
fisttp
bound
xor
inc
inc
xor
add
push
jo
int
add
jnp
mov
push
cmp
aaa
pop
ss
imul
jmp
retf
mov
cs
xchg
push
pop
aaa
aam
fs
sbb
add
jmp
(bad)
cli
mov
out
sub
mov
push
add
mov
xchg
sbb
addr16
sub
imul
xchg
(bad)
mov
mov
arpl
mov
pop
mov
push
fld
hlt
adc
aaa
(bad)
push
addr16
ins
retf
rcl
xor
pop
fbstp
mov
cmps
fstp
or
not
pop
jp
mov
movs
imul
or
push
pop
push
test
pop
xchg
das
ret
in
out
jge
sub
xchg
pop
or
and
cmp
xor
fisubr
sub
push
int3
xchg
js
rol
xchg
cmps
sbb
jno
jno
clc
xor
add
mov
mov
daa
rcl
mov
clc
lods
in
shl
outs
add
or
pop
xor
push
mov
outs
jp
(bad)
cld
mov
adc
lock
movs
popa
jle
mov
xchg
imul
sub
xchg
dec
and
mov
sub
and
ret
inc
cmc
push
xchg
inc
ss
fidivr
inc
cdq
inc
mov
mov
jmp
(bad)
jns
lods
pop
scas
jnp
cmps
arpl
push
imul
xchg
or
jge
cmc
icebp
mov
jbe
iret
nop
inc
pop
jmp
mov
test
nop
dec
push
lahf
ret
inc
push
cli
adc
std
dec
push
dec
aad
out
cdq
arpl
xchg
dec
icebp
push
call
shl
inc
xor
pushf
mov
ss
jmp
cdq
clc
pop
nop
lahf
dec
and
movs
mov
inc
mov
push
adc
push
call
and
movs
push
retf
popa
ins
mov
xchg
inc
mov
ret
mov
xor
stos
pop
or
mov
mov
mov
and
adc
test
inc
iret
jbe
out
in
cmp
xchg
jmp
inc
in
inc
push
sbb
shl
cs
in
popf
sbb
xchg
sub
mov
ja
ret
loop
or
in
loope
stc
xchg
pop
imul
push
jbe
mov
mov
sbb
pop
add
mov
popa
imul
and
sub
repnz
(bad)
cmp
loopne
ja
mov
aam
mov
ins
or
stos
into
inc
lea
fiadd
dec
ret
cmp
mov
repnz
lds
add
pop
add
gs
inc
idiv
shr
(bad)
xor
stos
out
out
loope
fbstp
ins
nop
data16
push
jnp
and
rcl
and
stos
iret
inc
adc
int3
push
adc
das
sub
in
retf
dec
ds
js
sbb
jno
(bad)
movs
and
sbb
jmp
jo
mov
rcl
adc
outs
mov
adc
mov
(bad)
call
pusha
push
mov
out
jmp
inc
mov
jecxz
dec
inc
data16
pop
fcmovnb
pop
stc
mov
mov
pop
fwait
mov
jmp
inc
sbb
pusha
mov
pop
jne
mov
mov
dec
test
pop
dec
idiv
pop
inc
sub
dec
in
or
aam
shl
loope
adc
out
addr16
lds
cli
dec
cmp
jle
mov
retf
adc
xchg
in
fwait
jno
movs
adc
pop
dec
xor
nop
popa
and
fwait
pop
dec
mov
sbb
pop
add
mov
scas
daa
fld
sbb
lahf
out
or
sahf
xchg
(bad)
retf
int
fldenv
retf
in
dec
sub
push
(bad)
std
int3
mov
and
loop
sbb
cmps
ret
aam
stc
popf
sub
lahf
in
xchg
sub
aas
lods
js
pop
xchg
sbb
mov
mov
(bad)
inc
outs
xchg
push
scas
pop
adc
rcr
das
jmp
dec
loope
es
jge
mov
ret
sbb
out
movs
mov
pop
and
inc
xchg
outs
dec
pop
xlat
in
mov
scas
dec
mov
addr16
stos
es
mov
addr16
sbb
mov
stos
das
and
aad
jmp
std
les
push
ret
lods
cdq
inc
inc
fadd
cmp
fmul
mov
sub
retf
rcl
mov
stc
call
fs
sub
test
fdiv
xor
out
lahf
fisttp
mov
or
pop
sub
cmp
mov
inc
icebp
pop
and
retf
aad
cmp
mov
out
jns
mov
push
jmp
jmp
ror
sbb
or
xor
xchg
mov
test
jge
sbb
adc
xor
sub
jg
dec
xor
mov
xlat
ficom
jmp
sub
popa
int3
(bad)
sbb
mov
jmp
push
test
xor
aad
and
adc
mov
fwait
test
cwde
shr
mov
int
in
adc
push
and
push
repz
and
sar
sub
ins
movs
outs
sub
out
ss
lds
cdq
cwde
sub
ror
xor
pop
stos
int
jle
dec
xlat
mov
pop
pop
push
mov
pop
mov
xchg
sbb
add
adc
adc
dec
xchg
mov
xor
adc
out
int3
xchg
mov
xor
push
mov
ror
add
mov
cmp
into
aad
imul
icebp
lods
lea
popf
push
sub
rcr
xchg
xchg
test
xchg
lock
repnz
mov
(bad)
jns
jge
jle
sub
xchg
(bad)
cmp
cmps
jae
push
enter
xor
dec
mov
adc
mov
add
cmp
pushf
shr
push
xchg
scas
sar
and
xlat
jecxz
and
loope
in
sbb
or
add
retf
push
ja
sub
inc
push
sub
out
pusha
call
inc
data16
or
pop
and
outs
dec
hlt
mov
std
pop
icebp
or
repz
lea
xchg
adc
loopne
das
(bad)
scas
push
les
xor
add
(bad)
std
movs
pusha
retf
mov
mov
test
jne
mov
js
push
push
(bad)
or
daa
sbb
push
push
inc
ret
jne
fwait
mov
sub
jne
add
jg
or
and
xchg
and
aas
ret
mov
ins
in
pusha
jmp
mov
xlat
or
inc
sub
dec
jmp
mov
fld
cli
out
and
clc
loop
cmp
dec
pushf
not
sub
dec
movs
xorps
cmc
and
retf
gs
call
pop
sbb
aas
sahf
int
xchg
and
out
adc
or
fdiv
faddp
jbe
mov
mov
xchg
sub
rol
pushf
adc
xchg
icebp
xchg
sub
cmp
scas
push
cmp
mov
jp
jbe
pop
sbb
jb
fadd
imul
sbb
and
inc
cmp
das
push
or
out
xor
in
test
and
cmp
out
sub
aad
push
sbb
add
jg
dec
inc
out
ffreep
pushf
push
xor
or
pushf
je
retf
jg
aaa
mov
bound
mov
mov
dec
push
mov
inc
pop
in
xor
stos
jmp
inc
lahf
mov
mov
xor
icebp
dec
fcmove
inc
sub
lods
jg
mov
dec
push
sub
lods
out
lods
xchg
sub
aam
and
test
out
mov
std
or
out
mov
mov
inc
jne
fs
cmp
fs
add
sti
cwde
std
mov
jmp
adc
xchg
mov
adc
inc
jmp
jno
aam
enter
cmp
mov
jnp
retf
or
ss
mov
push
push
pop
lods
inc
and
push
lods
adc
std
(bad)
fisub
jb
hlt
xor
call
fucomi
sbb
enter
inc
adc
sbb
sbb
adc
inc
mov
sti
jmp
jp
test
shr
repnz
push
mov
cmp
aam
mov
mul
dec
xchg
push
test
shr
sub
cmc
arpl
jecxz
push
jb
inc
sbb
cld
out
xor
call
int3
pop
ror
lock
js
pop
lods
mov
lods
push
sbb
jae
scas
sbb
std
dec
es
jnp
adc
icebp
push
lea
and
int3
sbb
(bad)
sbb
inc
loope
mov
push
cmp
scas
shl
(bad)
dec
inc
call
or
test
push
in
adc
lahf
mov
mov
mov
push
adc
and
and
popa
or
clc
popf
scas
xor
lods
xor
fnstcw
and
jecxz
adc
and
js
cmp
rol
fdiv
dec
test
or
pop
pop
mov
adc
add
loop
sbb
mov
adc
dec
imul
pop
mov
pop
nop
or
or
add
mov
(bad)
les
cmp
add
aad
or
lds
sub
mov
test
mov
daa
mov
(bad)
mov
pop
bound
jnp
pop
movs
xor
(bad)
inc
mov
fwait
pop
in
or
jbe
(bad)
mov
dec
lods
mov
inc
aaa
sar
adc
scas
test
add
clc
cmps
mov
int
mov
icebp
mov
mov
popf
ret
add
push
gs
cmps
aas
aas
jne
ins
mov
and
pop
pop
dec
cmps
js
cmp
test
dec
inc
ret
mov
pop
sbb
sahf
cmp
push
mov
daa
jg
aaa
(bad)
adc
sbb
fist
xchg
push
popa
ins
mov
(bad)
xor
inc
push
iret
xchg
lea
xchg
adc
xchg
cli
shr
and
pop
les
or
adc
enter
jge
sbb
pop
test
jbe
pop
pop
mov
or
arpl
adc
cdq
pop
push
test
inc
sahf
leave
scas
call
or
mov
sub
fist
es
and
rcl
aad
leave
sbb
leave
retf
dec
add
push
or
icebp
push
mov
pop
or
jg
mov
cdq
dec
add
repnz
inc
adc
mov
or
mov
cmp
jnp
mov
dec
push
cmp
inc
ds
in
imul
(bad)
dec
adc
movs
xor
bnd
imul
pop
xlat
(bad)
add
xor
test
push
test
jnp
pop
jb
ret
add
mov
mov
cmp
lahf
std
loope
call
dec
push
dec
je
mov
sbb
clc
fs
inc
nop
stc
and
push
repz
int3
cdq
adc
daa
std
sub
dec
xchg
ins
mov
test
daa
sbb
iret
push
push
adc
and
push
mov
inc
or
movs
mov
mov
lea
movs
pop
xchg
std
and
inc
or
add
and
loope
sub
ds
scas
and
in
pushf
call
movs
cmp
ret
cwde
fs
fnsave
adc
cmps
sti
sbb
jl
pop
shr
dec
inc
xchg
xchg
push
mov
mov
adc
sub
mov
push
(bad)
fsub
adc
jg
lds
pop
mov
fnsave
mov
lahf
mov
pop
push
cmps
pop
nop
mov
xchg
pusha
sbb
aas
fwait
adc
push
int3
or
pop
rcl
stc
clc
jle
fdiv
push
mov
mov
adc
mov
daa
retf
mov
ds
pop
mov
inc
cld
push
add
or
repnz
sub
push
shr
cs
lods
outs
stc
jno
(bad)
in
(bad)
stos
test
gs
js
movs
cmc
cmps
cdq
pop
sub
inc
and
gs
adc
lea
cmp
retf
cmps
in
pop
mov
stos
mov
repnz
test
fisub
sbb
mov
ins
jo
push
inc
icebp
mov
inc
mov
cwde
call
es
mov
add
adc
add
call
and
in
pop
xchg
jbe
cld
scas
ins
or
cli
xlat
jp
retf
rep
jnp
mov
aam
mov
adc
aaa
jb
pop
sbb
mov
mov
cmpps
cli
es
dec
sub
sbb
outs
fstp
call
cmc
add
mov
dec
add
mul
enter
mov
mov
push
push
lods
div
scas
mov
(bad)
push
(bad)
jmp
int3
inc
fs
sbb
movs
aaa
mov
mov
mov
icebp
xor
pop
mov
nop
ret
sub
aaa
sbb
shl
and
ja
or
loop
aas
and
pavgw
dec
pop
(bad)
jmp
(bad)
fidivr
fdivr
(bad)
jo
fisttp
jecxz
sbb
sti
cmp
add
outs
sub
xchg
test
xor
call
sub
sbb
in
mov
mov
nop
ins
cmc
xor
cli
sub
push
(bad)
jge
in
ja
hlt
xlat
jecxz
mov
adc
xchg
loopne
mov
mov
xor
and
adc
imul
fwait
pop
sub
adc
pop
repz
outs
dec
in
outs
stos
mov
push
outs
dec
mov
stos
fldenv
cwde
mov
dec
jle
mov
and
mov
shr
cmp
jge
popa
fisubr
hlt
jmp
jbe
into
adc
and
add
shl
in
mov
jne
sub
iret
xor
sbb
fs
ror
mov
or
dec
mov
out
mov
pop
push
sti
and
ds
fistp
inc
and
mov
rcl
cmp
or
fisttp
jecxz
fcmovnb
fadd
test
in
jmp
or
push
dec
cli
sub
aas
test
adc
in
adc
push
ja
imul
push
pop
adc
cwde
imul
and
cmc
push
mov
test
pop
dec
pop
dec
mov
out
ins
retf
cmp
adc
sti
jo
jg
pop
xor
xor
hlt
(bad)
mov
add
loopne
dec
nop
and
inc
ss
sar
sub
jle
outs
frstor
leave
xchg
mov
inc
repz
fucomi
and
inc
dec
adc
lahf
mov
js
(bad)
push
and
sar
mov
jne
cmps
es
inc
ret
test
cmp
stos
adc
push
pop
mov
mov
enter
stos
test
cmps
and
mov
push
inc
stos
inc
xchg
xor
jle
hlt
cmp
lahf
fwait
in
inc
jns
hlt
jns
(bad)
fadd
loope
push
or
pop
mov
into
repz
push
test
shl
movs
jne
test
rol
retf
pop
psrad
clc
adc
push
(bad)
cld
mov
in
in
js
pop
xor
loopne
sbb
pushf
mov
frstor
add
arpl
int3
sbb
popf
lock
into
int3
push
retf
fist
mov
push
leave
scas
push
sub
popf
rol
jl
mov
or
mov
sbb
xchg
jnp
in
xchg
mov
mov
sbb
int3
mov
mov
sub
mov
(bad)
fisub
inc
lods
into
jbe
out
sahf
add
xchg
ret
or
outs
add
imul
adc
mov
inc
dec
stos
jmp
in
xor
daa
jno
mov
add
xchg
push
xchg
aam
fcom
mov
add
repz
fcom
add
and
mov
inc
movs
les
mov
lahf
pushw
dec
mov
mov
in
call
push
cmp
aaa
jb
adc
(bad)
cld
or
rol
outs
enter
repz
cld
int3
or
sub
pop
or
mov
xchg
or
cmp
push
test
mov
inc
or
es
dec
outs
int
sub
dec
aad
sub
scas
cmc
or
pop
add
(bad)
xchg
gs
fst
mov
inc
jmp
mov
(bad)
shl
test
pop
add
aas
and
push
dec
loop
mov
out
stc
into
int
and
bound
or
sbb
aam
test
lea
hlt
cld
addr16
pusha
jmp
icebp
aad
loopne
xchg
repz
fisubr
add
les
jo
test
daa
lahf
pop
fsub
lock
mov
jle
das
js
ror
xor
adc
test
gs
pop
cmp
inc
sub
jmp
mov
pop
mov
mov
add
push
push
lahf
lea
sar
iretw
inc
mov
adc
pop
in
mov
stc
adc
xor
ja
popa
cmp
or
jmp
cs
repz
imul
xchg
cmc
fnstenv
push
imul
frstor
je
adc
xor
mov
lahf
fucomi
push
daa
pop
popa
je
rcr
mov
addr16
and
mov
xor
call
fwait
(bad)
and
sbb
adc
pop
call
xor
ret
cdq
sahf
pushf
jbe
sti
call
push
xor
jbe
xor
(bad)
clc
add
(bad)
shr
add
xor
push
in
xchg
and
movs
sub
jmp
stos
call
ret
call
ins
sbb
test
xchg
xor
mov
adc
inc
out
and
xor
jecxz
adc
shr
enter
xchg
retf
lds
stc
lods
mov
les
pop
jp
(bad)
adc
push
shl
enter
cmp
stc
add
mov
and
xchg
push
cmp
pop
cmp
or
jecxz
sbb
js
ds
aad
es
and
add
in
add
mov
inc
daa
xor
nop
cmp
in
lea
mov
stos
movs
in
sbb
pop
jmp
add
xchg
jmp
ds
fisttp
push
dec
rcr
scas
push
jp
inc
add
inc
loopne
repz
sti
aaa
jae
pcmpgtb
mov
mov
cmp
xchg
aas
and
lds
xor
(bad)
jmp
lods
(bad)
fcom
fcmovne
(bad)
retf
fild
and
add
sbb
adc
xor
cmp
int3
adc
mov
pop
lea
jo
adc
(bad)
fild
dec
(bad)
xchg
arpl
stos
loop
les
loope
shl
xor
jmp
js
lds
or
jno
fprem
shr
lea
push
jmp
push
fcomp
je
ss
xlat
xchg
mov
xor
pop
or
in
lahf
add
mov
mov
mov
rcr
xchg
cmp
adc
xor
dec
mov
loopne
jle
pop
cwde
repnz
or
(bad)
rcl
das
add
add
or
cli
xchg
add
icebp
xchg
xor
sbb
retf
call
imul
push
retf
pop
fisub
out
sbb
(bad)
lock
ins
mov
bound
outs
cmp
and
scas
mov
scas
mul
aam
loope
inc
das
mov
test
fcmovnu
mov
movaps
fist
ror
inc
jmp
cmp
clc
adc
jp
(bad)
fdivr
adc
mov
(bad)
dec
inc
loopne
stc
dec
cmp
mov
imul
loopne
add
push
mov
or
test
cmps
xchg
jmp
bnd
inc
sti
dec
dec
ror
pop
xchg
lea
movs
imul
push
mov
das
inc
cmp
fiadd
aad
dec
cld
std
out
pop
push
in
and
mov
fdivr
or
xchg
push
mov
test
fnstcw
hlt
mov
inc
call
inc
cmp
dec
add
mov
cli
scas
sbb
xchg
push
pop
dec
xlat
or
inc
dec
stos
pop
out
in
adc
xor
or
sbb
add
push
pop
push
jae
sub
mov
dec
test
js
inc
cmps
in
or
movs
out
xor
daa
push
cmp
fmul
arpl
jl
jo
push
or
out
popa
dec
jns
cdq
(bad)
mov
gs
aam
pop
mov
pusha
ficom
mov
cs
dec
lock
jnp
jge
xchg
inc
xor
pop
mov
in
ficomp
cmps
lock
adc
cmp
xchg
add
push
adc
mov
out
mov
int3
dec
pop
fs
mov
aad
ins
daa
inc
jl
mov
sbb
retf
push
pushf
js
out
aad
lock
fbstp
pop
mov
ret
test
cmc
cmp
sbb
ins
nop
sub
push
add
sub
mov
hlt
fidivr
div
push
cmp
call
(bad)
cmp
push
std
mov
test
xor
lods
retf
xor
cld
in
dec
mov
loope
mov
out
inc
jge
dec
jbe
scas
add
inc
mov
test
xchg
xor
add
test
cmps
out
push
iret
test
es
push
cld
sbb
add
pushf
or
inc
sub
or
pop
jl
scas
sbb
movs
jo
hlt
sub
sbb
dec
clc
cmps
clc
sub
out
jo
std
(bad)
(bad)
(bad)
mov
repz
jp
and
add
jp
enter
dec
cmps
neg
mov
push
shr
mov
push
dec
add
dec
test
imul
scas
jmp
and
(bad)
js
ss
or
push
movs
shl
add
xor
stc
jnp
ret
mov
mov
aad
movs
xchg
(bad)
adc
or
jb
aam
sub
adc
mov
leave
mov
pop
jbe
and
movs
mov
jp
lods
push
(bad)
cli
(bad)
push
or
mov
sub
mov
add
mov
enter
frstor
cmps
xchg
scas
retf
jle
adc
sbb
mov
inc
mov
(bad)
xchg
nop
mov
out
and
mov
push
pop
push
sbb
sub
dec
pop
outs
xor
ja
push
xor
sub
imul
cli
jecxz
xchg
xor
sbb
stos
dec
es
mov
pop
xchg
int
les
sbb
inc
adc
push
xor
pop
std
imul
mov
add
and
jno
movs
mov
pop
div
fidivr
aam
or
push
xchg
hlt
addr16
hlt
icebp
jge
ds
imul
std
push
push
sub
pushf
ds
or
shl
add
test
or
mov
mov
mov
sti
sub
aas
jnp
jno
leave
push
mov
push
xchg
and
add
cmp
addr16
xchg
call
fld
int
inc
mov
test
cmp
popa
rol
lock
mov
std
xchg
xor
loop
das
dec
cmp
(bad)
repnz
jns
fstp
jbe
test
cmp
mov
or
or
popf
loope
or
dec
sub
fbld
loope
jbe
scas
fnsave
xchg
dec
sub
test
rol
xchg
pop
ret
add
xor
push
push
sbb
cmp
and
inc
call
lods
mov
inc
std
sahf
arpl
mov
aas
xor
sub
jno
cmp
loope
scas
inc
movs
cmp
sub
repz
push
mov
sub
repnz
push
retf
mov
mov
jecxz
add
(bad)
sbb
add
push
mov
sbb
rcl
js
fld
clc
dec
jle
mov
xor
dec
std
bound
xchg
cmp
je
stc
fs
jmp
test
pop
dec
push
addr16
jmp
popf
fimul
fcomp
pushf
adc
jne
popa
sbb
xor
retf
mov
pop
hlt
mov
sbb
xchg
je
sbb
ficom
mov
aaa
or
or
push
pop
xor
jge
rcl
and
enter
mov
or
(bad)
arpl
push
xor
mul
or
mov
out
and
mov
jecxz
jg
test
ins
sub
adc
or
rol
nop
out
call
and
sub
(bad)
mov
bnd
cmc
ficom
xor
lods
inc
push
push
lock
jmp
lea
dec
sub
arpl
imul
adc
cmc
or
sbb
(bad)
lods
inc
out
shl
outs
sub
lahf
retf
and
js
mov
mov
xchg
aaa
out
stc
mov
inc
or
sbb
add
mov
jg
xor
pop
aad
iret
lock
push
xor
xor
mov
fbld
in
mov
fldcw
shl
popa
imul
inc
and
push
fnstenv
add
add
adc
imul
dec
ins
jmp
(bad)
pop
int
mul
inc
(bad)
test
add
cmp
xor
jl
push
into
lock
add
rol
icebp
aaa
push
fstp
iret
cmc
add
fwait
cmp
xor
(bad)
xchg
cld
cmp
jmp
jns
fnstenv
pop
jns
mov
and
jbe
sbb
mov
lds
dec
pop
ins
arpl
out
xchg
rcr
leave
sbb
push
shr
dec
movs
(bad)
jae
loope
and
cmp
shl
retf
push
cmp
xchg
dec
push
mov
dec
xor
xor
adc
stos
movs
aam
fdiv
lds
jl
add
adc
test
jle
clc
outs
xchg
data16
and
mov
inc
imul
cmp
inc
mov
jb
shl
ret
jne
xlat
pop
sti
out
packssdw
out
mov
jg
xchg
xchg
adc
pushf
cmps
pop
pop
mov
cwde
sub
pop
or
and
outs
lods
mov
mov
scas
aam
je
sbb
push
sbb
out
pusha
or
out
push
xlat
repz
push
cdq
test
push
adc
inc
dec
mov
mov
mov
(bad)
pop
in
aad
mov
xabort
jle
jae
mov
retf
cmp
jmp
cmp
je
stc
mov
push
pusha
das
sti
mov
jo
adc
sti
sub
mov
fst
push
sqrtps
jae
cmp
cmp
(bad)
aas
clc
mov
arpl
out
pop
pop
or
adc
push
pop
xlat
bound
adc
mov
pusha
mov
popf
mov
inc
mov
lds
ficom
dec
lods
mov
or
hlt
xchg
jb
adc
sub
dec
adc
xor
leave
adc
lods
xlat
xchg
add
cpuid
fsub
sbb
aas
hlt
hlt
mov
push
mov
pop
mov
add
std
jo
adc
jmp
fsubr
out
sahf
cs
xor
pop
movs
add
push
xlat
or
pop
mov
mov
fimul
pop
add
nop
dec
in
push
pop
or
ins
jl
loope
loope
sbb
xchg
lea
clc
xlat
pop
sub
aaa
jmp
dec
push
ins
lods
sub
inc
int
out
retf
jae
fcomp
(bad)
repnz
sub
int3
jne
jmp
mov
add
ret
mov
(bad)
lahf
lock
aas
mov
pop
and
and
xor
mov
or
jg
inc
cmp
adc
jne
cmps
jmp
cmp
call
lods
push
lods
fwait
xchg
inc
sbb
(bad)
mov
mov
out
ss
ucomiss
scas
out
cmc
vmaxps
imul
adc
vandnps
mov
(bad)
call
inc
cmp
jns
jmp
lahf
pushf
fadd
pop
out
push
(bad)
(bad)
push
adc
push
cdq
out
xchg
rcl
push
lahf
(bad)
cmp
dec
dec
or
mov
pop
retf
(bad)
jg
jmp
outs
ds
movs
dec
adc
mov
add
sbb
inc
jae
out
sub
mov
out
hlt
inc
cmps
outs
xor
mov
cld
mov
int3
lods
cmp
add
aas
or
xlat
cmp
loopne
imul
jmp
mov
inc
add
mov
rcr
jg
push
outs
scas
cmp
cmp
rol
aas
(bad)
jns
sti
rol
mov
ss
dec
or
jne
push
jle
in
ja
or
fwait
xchg
scas
push
xor
dec
loope
adc
shl
inc
int
sbb
mov
jp
pop
or
or
shl
add
cmp
mov
jnp
(bad)
cmp
das
mov
shr
mov
(bad)
mov
popa
mov
sub
xchg
push
and
jns
push
bound
cmp
cli
mov
mov
fisubr
jmp
xor
mov
push
test
sbb
xchg
into
jmp
ins
imul
push
push
jl
pushf
es
mov
mov
ja
jle
int3
lock
sbb
fwait
push
mov
mov
loope
sbb
leave
in
(bad)
cmp
std
xchg
mov
scas
ret
mov
fld
ja
jae
shr
iret
cli
cmp
loopne
and
xor
xchg
mov
push
jne
push
xor
mov
pop
out
loop
loope
out
pop
pop
pushf
cmps
mov
sbb
pop
push
out
stos
push
jg
mov
pop
jno
mov
loop
nop
push
or
inc
(bad)
lea
lods
and
rol
arpl
push
setl
sbb
(bad)
ror
lea
popa
and
xchg
and
cmp
aad
cs
dec
cmc
mov
stos
dec
xchg
scas
jne
movs
fprem1
and
xor
repnz
js
inc
push
dec
(bad)
mov
mov
cli
bound
test
in
xchg
ds
shl
cmp
sbb
dec
push
ja
xchg
inc
rcr
repnz
call
(bad)
adc
sub
lahf
dec
sar
jbe
(bad)
stos
pop
stc
xchg
enter
jnp
jno
clc
lahf
jbe
test
or
mov
es
mov
pop
in
rol
push
outs
retf
les
in
gs
adc
push
push
fst
adc
add
pop
cmp
dec
sub
mov
add
adc
or
mov
push
jmp
fs
xor
inc
sub
mov
mov
fs
mov
cmps
lods
fdivp
or
leave
loopne
sbb
rcr
call
xor
(bad)
mov
jg
or
mov
jo
push
daa
(bad)
js
xlat
cmp
shl
xor
cmp
ret
(bad)
sar
cmp
out
xor
push
lahf
test
sti
leave
sub
call
dec
sbb
ins
dec
push
xchg
xor
or
test
adc
pop
inc
inc
push
and
dec
aas
xchg
xchg
and
xor
stos
aas
inc
fisttp
cmps
push
shl
mov
addr16
ja
cmp
sub
jmp
sub
and
fs
shr
dec
and
daa
int
xchg
pop
fwait
test
lahf
xchg
cmps
or
push
scas
sbb
add
mov
fdivr
xchg
inc
in
jmp
hlt
and
mov
ds
ja
iret
adc
ror
or
je
stos
cmp
add
int
push
ffree
fwait
pusha
mov
pop
push
sar
nop
adc
lock
push
mov
cmp
inc
or
lea
sub
mov
call
mov
aad
add
add
inc
stos
dec
das
push
shl
sbb
retf
xor
sbb
cmp
inc
xor
movd
push
dec
dec
jge
test
jne
loope
hlt
retf
test
cmp
push
and
mov
jnp
push
pop
mov
mov
retf
rol
pusha
sub
or
mov
inc
popa
jmp
push
xchg
dec
jl
dec
push
push
iret
or
jge
sar
aaa
test
hlt
mov
in
loope
ror
cmp
retf
ja
xor
jmp
sysenter
or
mov
inc
push
mov
(bad)
or
push
cwde
leave
mov
inc
sub
iret
data16
cmc
sahf
push
(bad)
push
push
in
mov
dec
test
and
and
inc
leave
sahf
sbb
mov
rcl
mov
sbb
inc
sub
pusha
jae
mov
cmp
rcr
stos
add
jecxz
arpl
fs
pushf
push
call
jl
es
mov
sahf
sub
add
xor
add
inc
xchg
mov
out
add
or
xchg
sbb
jae
retf
sbb
mov
push
mov
xor
add
jecxz
cmp
paddusw
add
(bad)
xchg
loopne
pop
sahf
rcr
sbb
mov
push
push
cld
push
sar
ret
ficom
fxch
popa
imul
jmp
mov
(bad)
arpl
jle
stos
push
mov
mov
jl
add
xlat
jg
scas
and
adc
cld
jne
mov
or
fwait
push
xchg
pop
jne
popf
rol
mov
sub
cmp
out
push
mov
mov
cli
mov
push
adc
iret
dec
sti
pop
jecxz
mov
fld
lahf
xor
jbe
fist
mov
es
movs
jno
and
mov
xchg
loop
shl
adc
mov
arpl
bound
pop
push
xchg
arpl
scas
push
popa
or
out
cmp
ret
and
sti
mov
sub
add
jo
sub
lods
stos
sbb
das
loopne
pushf
ja
jae
dec
jno
imul
les
pop
mov
cmp
jmp
scas
cmp
lock
sti
mov
sbb
sar
mov
xor
sahf
dec
inc
xor
adc
fild
jae
sti
mov
jmp
or
sub
(bad)
fstp
aam
sub
sbb
lahf
mov
imul
gs
mov
pushw
fld
daa
fsub
jo
xlat
mov
cmp
mov
lock
dec
or
inc
jae
cmp
adc
lods
pushf
rcl
add
inc
cld
xor
inc
cmp
xor
es
dec
xchg
sub
xor
add
sbb
addr16
enter
(bad)
cmps
pushf
bound
popa
adc
inc
ja
adc
push
lahf
adc
mov
scas
(bad)
add
jmp
pop
sar
mov
data16
push
iret
inc
repnz
jo
int
(bad)
cli
sti
sub
cmp
ja
xor
fsubr
jmp
xor
and
je
aaa
sub
(bad)
jmp
push
push
leave
sub
push
lods
ss
jg
stos
xchg
fdivrp
xor
adc
mov
call
enter
jnp
inc
cmc
pop
dec
jl
and
jmp
mul
scas
mov
xchg
cmp
nop
sub
popf
nop
push
cs
loopne
xchg
cdq
cmp
and
shl
jb
into
aam
scas
inc
(bad)
dec
xchg
cli
pop
call
popf
movs
mov
inc
stc
jae
xlat
jmp
xchg
aad
pop
jno
movs
shl
out
test
xchg
adc
and
movs
in
sub
mov
(bad)
push
aas
lods
and
scas
(bad)
push
fmul
hlt
add
sbb
push
outs
(bad)
fxtract
mov
jbe
jmp
pop
jae
retf
out
pop
sbb
and
xchg
cld
repz
inc
jle
cmp
scas
mov
cld
lods
inc
inc
fcmovnu
inc
ret
mov
or
inc
movs
xchg
or
or
pop
push
stos
mov
popf
push
(bad)
mov
in
xor
mov
sub
vmwrite
ror
(bad)
cmp
retf
rol
addr16
push
fidivr
(bad)
mov
stos
mov
lds
inc
ins
jmp
cli
and
xor
inc
adc
fs
cmp
retf
mov
mov
sub
pop
inc
mov
sbb
dec
movs
rcl
sbb
fs
cwde
mov
pop
faddp
cmp
(bad)
(bad)
mov
mov
lods
std
sbb
pop
cmp
mov
xor
fisub
ret
jbe
xor
adc
mov
mov
lahf
jmp
or
add
outs
lods
and
xor
in
inc
ins
nop
mov
ss
jle
jnp
jmp
mov
loope
sub
icebp
daa
das
add
bound
in
xchg
jo
jl
fimul
je
mov
xor
test
scas
push
ret
sub
pushf
and
jb
sub
sbb
sub
(bad)
dec
cmp
rol
out
xor
dec
sub
jmp
dec
cdq
pop
cwde
rol
inc
ins
sbb
sub
fs
mov
xor
popf
fcomip
xor
add
adc
shl
fs
xor
mov
iret
dec
cwde
scas
pop
int3
fucom
mov
test
and
cmp
jl
pop
(bad)
jnp
pop
mov
cmps
ja
(bad)
adc
stos
pop
push
push
scas
stos
icebp
inc
imul
add
push
pop
mov
nop
fwait
popf
xor
add
push
sar
test
lds
pop
lds
(bad)
mov
ffree
add
jp
sbb
ins
add
jge
mov
jecxz
outs
adc
gs
rcl
mov
push
in
call
sub
xor
pop
and
pop
repnz
xchg
mov
neg
pop
leave
mov
gs
jmp
in
test
sub
es
push
mov
cmp
test
or
push
fstp
sub
out
add
lods
adc
out
cmp
daa
ror
cdq
sti
mov
pop
nop
adc
fidiv
imul
sbb
lahf
mov
adc
inc
jno
jo
mov
jo
cmp
call
jecxz
inc
stc
cwde
pop
sbb
xor
jne
push
shl
scas
or
mov
adc
call
dec
adc
inc
inc
jecxz
add
jmp
mov
push
arpl
jo
push
int
dec
in
adc
xchg
sbb
in
cwde
aad
mov
fwait
arpl
pop
cmp
ret
scas
xchg
leave
pop
xlat
es
or
in
cmps
and
jmp
pop
cs
xchg
cmp
xchg
lds
mov
add
out
jge
test
or
cld
mov
enter
jp
dec
nop
xchg
mov
pusha
fs
push
adc
out
inc
mov
xchg
and
stos
rol
jmp
test
pushf
pop
push
loopne
or
out
mov
mov
shr
push
icebp
pop
or
cmp
push
push
lods
mov
sub
sbb
ja
jno
adc
mov
cmp
bnd
pop
pop
bound
add
int
mov
jecxz
dec
and
adc
push
btr
jns
and
mov
sub
ret
push
or
test
and
adc
not
mov
icebp
sbb
test
jno
cmp
into
pop
xchg
ret
push
outs
aaa
pop
out
into
bound
in
outs
rcr
jo
outs
xlat
xchg
call
hlt
in
(bad)
jmp
stos
push
(bad)
aaa
cs
cmp
jmp
mov
jle
out
jmp
and
imul
xchg
xor
mov
fldlg2
mov
lods
cmp
in
mov
push
xor
int
int
fist
push
push
imul
dec
sub
aas
pusha
lahf
inc
imul
jns
or
out
mov
imul
jge
retf
test
mov
popf
cmp
imul
aaa
and
cwde
mov
jmp
mov
daa
mov
dec
jno
ret
test
jge
stos
imul
push
lods
imul
imul
outs
cmp
jns
jnp
vpsrad
jno
mov
xlat
aad
stos
daa
cdq
adc
fbstp
dec
jg
iret
in
aam
aad
lods
inc
call
pop
(bad)
mov
shl
xchg
mov
cld
xor
mul
add
(bad)
push
movs
pop
popf
adc
fdiv
lea
add
fdivr
or
test
test
push
test
xlat
mov
loopne
xor
lock
fdivr
icebp
mov
cli
sub
xor
pop
cmp
lods
cmc
mov
mov
dec
hlt
xchg
xchg
add
ds
or
fmul
int3
fimul
(bad)
ins
in
popf
mov
adc
and
addr16
scas
pushf
out
dec
inc
pop
(bad)
sbb
jmp
jo
pop
and
in
mov
mov
jae
fistp
pop
mov
sub
iret
add
js
mov
jl
jns
test
cmp
gs
out
shl
shl
jg
(bad)
push
mov
or
ret
mov
sar
sbb
ins
test
loopne
cmc
std
ja
ds
cs
js
test
sbb
stos
mov
call
push
outs
adc
dec
mov
sub
mov
mov
xor
dec
cli
cmp
lahf
sahf
and
lea
dec
js
mov
cmp
js
mov
or
push
aam
mov
clc
ss
mov
and
outs
out
adc
sbb
shr
dec
nop
xor
aam
(bad)
sbb
pop
ss
push
outs
les
imul
sahf
adc
mov
nop
in
cmp
add
sbb
xchg
dec
or
movs
jmp
pop
xchg
popf
dec
outs
xchg
cdq
and
inc
jne
cmp
fs
push
jne
fwait
or
aaa
(bad)
sub
mov
ss
mov
fwait
sub
shr
pop
loop
out
pop
push
dec
ss
cdq
(bad)
jmp
jg
int
add
push
and
mov
xor
outs
and
in
inc
shr
int3
jge
test
imul
fwait
cwde
mov
pop
push
mov
js
xchg
cld
into
xor
inc
pop
or
in
(bad)
cwde
push
and
jmp
dec
fcmovbe
lahf
test
mov
and
or
adc
out
sub
xor
adc
call
ja
push
sbb
fadd
inc
aas
das
rep
out
xor
adc
aas
cmp
leave
out
dec
xchg
pop
lds
push
xor
mov
ja
repz
or
enter
out
cli
test
test
cmc
jne
enter
cmps
rcl
imul
push
clc
push
fwait
cwde
(bad)
fld
es
pop
mov
mov
(bad)
xor
sub
ins
fs
aam
push
shr
ss
mov
cmp
dec
stos
out
cmp
or
in
xchg
pop
cmps
nop
xor
aad
sbb
mov
mov
call
nop
movs
nop
sbb
test
mov
xor
mov
jl
fsub
ja
mov
push
ret
mov
xor
jae
or
and
pop
push
mov
jp
pop
and
nop
movs
in
xchg
pop
mov
data16
push
daa
not
push
pop
xor
jmp
div
into
push
test
add
mov
dec
out
mov
add
mov
sub
cdq
adc
repz
jne
sub
xor
rol
xchg
sbb
mov
(bad)
push
call
push
ror
cld
movs
cmp
push
(bad)
shl
mov
mov
cmp
cmp
sub
(bad)
outs
cmp
ins
test
lods
ret
dec
fdivr
jp
dec
jnp
lock
lods
mov
imul
mov
test
push
inc
test
sub
pop
aad
bound
sbb
mov
pop
xor
lods
pop
pop
pop
inc
jae
pop
stc
cwde
data16
adc
mov
sub
loope
dec
pop
daa
cmps
repnz
aad
fist
mov
sub
cmp
jmp
das
ret
adc
aam
sub
cmp
fwait
cmp
xchg
shl
call
(bad)
outs
push
in
jmp
outs
popf
cmps
sub
inc
jmp
adc
push
ret
mov
call
out
or
retf
icebp
dec
int3
push
and
sbb
cmc
dec
add
cmc
daa
in
fyl2xp1
dec
push
(bad)
imul
jmp
xor
add
in
cli
pop
shl
mov
loop
jns
scas
xor
fdivrp
push
jno
mov
jbe
push
mov
adc
mov
pop
jp
movs
and
sbb
inc
in
loopne
lahf
mov
xchg
std
jl
and
rcr
and
lahf
imul
sti
xchg
pop
clc
out
(bad)
jmp
xor
or
call
xor
cmp
fisttp
daa
pop
sub
add
and
jb
sti
cmp
xlat
add
pop
mov
mov
mov
sbb
push
push
jg
scas
shl
in
mov
sbb
jecxz
jae
cmp
lea
xchg
adc
jle
mov
in
test
and
ins
lahf
in
pop
jecxz
pusha
pushf
dec
ja
add
and
dec
scas
adc
lahf
enter
mov
inc
inc
cmp
nop
dec
leave
mov
dec
push
leave
iret
and
or
add
mov
repnz
push
jmp
push
popa
dec
mov
push
outs
fild
in
mov
cld
cwde
push
popf
pop
mov
test
jmp
outs
outs
dec
mov
inc
test
addr16
mov
gs
ret
lea
ins
mov
lahf
mov
(bad)
shl
sbb
inc
mov
jle
sub
(bad)
sbb
test
aas
push
mov
mov
dec
xlat
push
xor
(bad)
jo
rol
pop
push
sbb
sbb
xchg
mov
inc
enter
push
push
add
inc
add
sbb
push
jne
in
hlt
rcr
js
ins
les
stc
fist
rcl
add
mov
or
outs
jo
push
mov
call
rcl
loopne
mov
mov
or
shl
call
cmps
cli
std
cmc
inc
jp
adc
jbe
jge
mov
fidivr
call
xchg
data16
movs
mov
push
xchg
or
mov
cs
inc
fsub
lahf
test
cmp
cmp
jo
jne
scas
js
aaa
call
stc
mov
mov
nop
add
enter
or
into
xchg
mov
xchg
lds
or
xor
mov
jle
xor
add
out
xor
adc
push
lods
into
addr16
sbb
(bad)
out
and
mov
cmp
add
scas
shl
pop
out
ss
outs
xor
and
cmps
dec
pop
scas
mov
add
xchg
stc
(bad)
xchg
sahf
jae
inc
test
mov
xor
and
xchg
rcr
retf
xchg
jnp
leave
sbb
xor
fld
pop
xor
dec
stos
and
call
jge
int
popf
aam
push
data16
(bad)
je
ficomp
stc
adc
add
mov
sbb
mov
mov
mov
add
or
scas
ins
aas
(bad)
jnp
or
sub
xor
pop
movs
add
out
rol
or
out
mov
xchg
adc
jp
pop
adc
fadd
mov
rol
cmp
mov
es
dec
sbb
imul
push
or
jbe
and
inc
pop
add
mov
popa
sub
inc
fdiv
xlat
jl
mov
dec
fbstp
xchg
fld
sahf
dec
movs
cwde
cmp
mov
cdq
in
xor
imul
dec
add
or
(bad)
ja
movs
add
add
dec
push
scas
xchg
sub
retf
pop
int3
js
stos
mov
clc
add
scas
xor
jbe
add
ja
or
xor
imul
test
jecxz
icebp
aaa
test
cmps
sub
cmps
addr16
mov
mov
gs
xor
cmp
lds
mov
out
(bad)
jmp
in
mov
mov
stos
xchg
rol
fdivrp
or
pop
push
out
mov
leave
lahf
aaa
sub
xor
xor
push
jp
add
jmp
aas
ret
cmp
mov
adc
mov
ins
and
push
xor
(bad)
xchg
(bad)
jecxz
jg
push
pop
test
imul
sbb
sbb
inc
(bad)
dec
adc
sbb
inc
arpl
addr16
icebp
retf
xchg
pop
ds
(bad)
pusha
sar
ins
leave
xor
stos
push
popf
test
cmps
repz
lahf
dec
pop
sbb
(bad)
popa
mov
mov
cli
or
push
push
mov
jne
add
jl
mov
mov
or
and
mov
mov
pop
add
fdivr
(bad)
pop
and
call
inc
cmp
push
sub
mov
push
aad
xor
push
fcomp
mov
popf
lock
or
xor
xor
xchg
sar
mov
or
movs
mov
js
cmp
push
(bad)
jo
add
sbb
or
sahf
mov
icebp
dec
(bad)
(bad)
jmp
mov
jo
push
stos
jb
mov
or
sbb
fldenv
js
int
lds
dec
xchg
test
and
mov
xlat
mov
imul
stos
jmp
jp
push
xor
mov
inc
mov
fsubr
popf
in
or
fldlg2
cdq
push
(bad)
cwde
add
sbb
das
pop
jp
cmp
cs
pop
mov
cld
mov
push
cmp
mov
xchg
or
mov
sub
dec
jmp
cmp
cli
cs
push
dec
cmp
fld
cli
imul
sbb
sub
jl
into
outs
xlat
jl
lds
adc
dec
sub
mov
cmp
and
mov
mov
inc
ret
in
jp
aaa
xlat
sub
loopne
cmp
test
adc
mov
add
retf
leave
hlt
(bad)
mov
mov
test
cmp
mov
ds
jb
sbb
fist
or
in
add
pop
pop
cli
cvtdq2ps
mov
sub
(bad)
jo
mov
mov
fsub
push
xor
push
cmp
call
inc
or
mov
push
loop
and
in
cmp
cmc
mov
stos
ins
popf
shl
mov
or
jecxz
popa
(bad)
aad
xchg
or
loop
fxch
jno
cmp
xchg
sbb
pop
mov
iret
inc
fisttp
xchg
pushf
mov
scas
inc
jmp
pop
(bad)
iret
sbb
shl
push
cdq
pushf
push
popa
push
mov
je
jno
xlat
xor
adc
mov
add
mov
fidivr
retf
pop
add
jo
or
push
pop
xchg
mov
pop
fst
shrd
push
sbb
add
sub
lock
stos
mov
dec
bound
jp
jp
adc
sahf
retw
iret
mov
nop
xchg
loope
adc
dec
jg
out
je
mov
add
cmps
test
loop
pop
setnp
fisubr
jb
jmp
xchg
es
fcom
jne
cwde
xchg
push
push
aas
dec
jle
retf
call
call
lds
popa
call
out
cmp
push
rcr
mov
mov
data16
fcom
adc
mov
lock
aad
cmp
xor
pop
add
daa
push
dec
rol
adc
ja
nop
cmp
and
ret
push
repnz
loop
inc
imul
xchg
enter
xchg
sub
dec
xchg
sub
scas
push
ja
xchg
and
bound
sub
mov
out
jmp
shr
and
add
mov
jae
push
lds
cwde
pop
cld
and
push
mov
xor
mov
in
popa
(bad)
jp
or
sbb
ins
adc
cwde
popf
xchg
out
push
mov
dec
mov
out
jle
jle
adc
mov
mov
fld
inc
(bad)
and
call
jnp
cwde
cli
jp
cdq
and
or
inc
rol
pop
(bad)
mov
fisubr
fdivr
in
cmps
out
out
fadd
inc
sbb
xchg
cmp
cli
test
test
jo
jns
les
(bad)
fsubr
inc
jns
mov
ja
jp
scas
sbb
movs
push
psrlw
inc
cmp
inc
inc
dec
shl
out
push
repnz
inc
mov
cmp
mov
ret
push
or
fs
mov
mov
imul
aas
mov
(bad)
add
adc
push
les
adc
retf
ss
mov
loope
push
ins
jge
xchg
fistp
adc
sbb
pushf
mov
rep
jo
test
inc
aad
nop
(bad)
neg
fdiv
cmps
dec
stos
mov
ds
xchg
pop
inc
cmps
and
pop
push
into
pop
int3
push
enter
adc
fidiv
xchg
ss
cli
int3
jp
push
xor
rol
or
add
sub
stc
pop
pop
ins
dec
loop
sub
movs
ret
gs
lods
jmp
por
fucomp
or
pop
cmps
adc
adc
jae
(bad)
sub
xor
aam
xchg
jb
das
out
fbstp
out
hlt
pop
cmp
clc
out
xor
call
xor
pop
mov
dec
retf
sahf
dec
cmp
jae
cmp
sbb
mov
sbb
test
dec
mov
ret
or
ret
jmp
jbe
push
in
add
mov
outs
jo
fcmovne
hlt
neg
inc
adc
adc
cmp
adc
(bad)
clc
push
inc
daa
aam
adc
les
lds
mov
jge
jns
cmp
out
adc
xlat
fld
cmp
mov
retf
inc
test
sbb
loope
(bad)
xchg
lods
popa
inc
or
test
fucomp
sub
in
fadd
adc
mov
adc
sub
xor
or
pop
(bad)
jbe
xor
xor
xchg
(bad)
loop
ss
(bad)
in
dec
aas
dec
outs
push
not
ret
or
loopne
cmp
inc
and
jp
arpl
or
in
jmp
inc
push
inc
les
inc
test
out
sahf
inc
idiv
ss
sub
sbb
mov
mov
call
fimul
mov
in
xchg
cdq
or
(bad)
ror
mov
push
sbb
jb
pop
mov
mov
retf
mov
or
push
dec
add
sub
or
scas
inc
aas
fwait
aaa
pop
push
fidiv
add
sbb
mov
pop
mov
sbb
dec
in
xlat
sub
ret
inc
pop
or
repnz
push
add
retf
clc
mov
dec
rcl
nop
repz
lahf
mov
and
pop
pop
stos
pop
sbb
fild
(bad)
hlt
push
daa
test
bound
inc
cmp
popf
out
popf
in
hlt
dec
cmps
sub
adc
adc
cmp
cmp
ficom
mov
xchg
mov
mov
dec
mov
(bad)
jmp
xchg
lds
lea
stc
shl
cmp
jmp
(bad)
mov
mov
push
sbb
add
pop
scas
ss
les
jb
push
nop
mov
addr16
iret
and
loope
mov
sub
cmovnp
mul
imul
test
ror
jo
push
jno
enter
and
jmp
cmps
cmp
push
hlt
dec
ret
outs
neg
retf
cmps
and
scas
js
add
mov
jmp
popa
inc
ror
repz
int
pop
xlat
jno
das
(bad)
fdiv
mov
out
pop
loope
push
mov
outs
pusha
mov
scas
in
push
or
call
inc
(bad)
pushf
call
ins
dec
lds
adc
es
jmp
sbb
cmp
popa
outs
not
inc
out
sbb
in
pop
scas
iret
dec
push
jecxz
(bad)
pop
cmp
stos
fidiv
pop
push
pop
fbstp
repnz
xor
mov
cmp
pop
int3
add
and
cmp
sub
xlat
(bad)
cmp
add
stos
iret
xor
arpl
(bad)
mov
sub
jbe
das
sbb
cmp
cmps
sbb
jle
xchg
das
mov
or
push
popa
cli
jp
lahf
jge
add
int
jns
rcr
mov
push
stos
ret
cmp
sub
xchg
repnz
mov
inc
fsub
imul
push
push
ja
jb
ss
push
jns
add
sbb
loopne
es
inc
cmps
gs
dec
dec
cmp
cwde
ror
jae
stos
into
neg
or
sub
dec
xor
sub
out
mov
add
stc
xor
or
jbe
int
loope
ss
mov
lods
pop
div
pop
push
inc
push
and
inc
jnp
dec
xchg
(bad)
mov
jns
cld
bound
sbb
jmp
sub
push
ds
(bad)
pop
sub
xchg
jbe
sbb
movs
mov
shl
jae
mov
fnstenv
and
popf
pop
ins
dec
jmp
test
mov
add
sbb
jo
pop
ss
add
clc
push
enter
jge
pushf
ret
sub
or
shr
cmp
pop
into
fmulp
movs
sbb
add
jnp
repz
jge
pop
xchg
pop
and
popa
iret
cli
dec
mov
test
xlat
push
in
ss
and
repnz
pop
repnz
pop
xor
xor
loop
push
or
mov
cmp
and
call
aaa
jnp
(bad)
jns
in
push
retf
mov
les
daa
les
div
(bad)
retf
mov
mov
push
(bad)
test
add
xchg
in
outs
sbb
cmps
add
ret
lahf
loopne
loope
mov
jg
adc
pop
inc
test
hlt
ret
sbb
push
push
mov
xor
aad
jo
xor
add
dec
das
mov
loopne
pop
mov
sbb
scas
fwait
std
int3
or
popf
mov
cli
dec
repnz
sbb
aas
xor
cs
bound
and
fidiv
inc
lock
pop
adc
dec
cs
mov
shl
jmp
loop
fsubr
mov
ins
in
pop
mov
adc
enter
mov
dec
cmc
sub
fst
or
mov
jg
sar
jge
shl
push
scas
adc
fucomp
sub
in
sbb
push
pop
rol
add
push
cwde
out
push
jno
mov
daa
inc
adc
pop
xchg
stos
xchg
mov
mov
(bad)
out
mov
imul
fstp
jecxz
mov
mov
out
pop
mov
add
mov
int3
push
fucomp
mov
push
hlt
cmp
xchg
pop
ins
add
jle
and
jb
or
add
std
sub
mov
icebp
mov
and
lea
sub
add
mov
out
and
mov
add
sub
push
adc
adc
(bad)
xchg
gs
adc
mov
into
mov
movs
jmp
and
inc
jecxz
mov
fldenv
ss
pop
scas
mov
push
sub
movs
push
out
pusha
pop
mov
xchg
add
stos
ins
xchg
adc
aam
and
fldenv
add
mov
dec
or
hlt
arpl
fcomip
push
es
lods
ret
and
popa
sub
and
jns
aam
(bad)
adc
dec
xor
dec
xor
cld
cmp
js
icebp
push
fisttp
pop
nop
jbe
popa
jle
imul
cmp
jl
push
in
addr16
adc
xchg
(bad)
mov
pop
dec
and
mov
lock
(bad)
jo
dec
outs
cmps
or
push
rol
(bad)
jae
mov
ja
push
sbb
add
xchg
mov
dec
inc
frstor
imul
(bad)
mov
mov
popa
jo
cli
repz
push
loop
mov
or
dec
test
pop
(bad)
mov
cmp
(bad)
mov
cld
pop
loope
cld
cwde
cmp
mov
gs
cdq
movs
sub
lds
imul
loope
pusha
jp
push
mov
dec
icebp
push
mov
xor
sub
popf
cmps
shr
out
and
and
in
dec
int3
push
(bad)
bound
xchg
icebp
aaa
je
movs
pop
mov
in
xor
loopne
(bad)
mov
lea
les
out
xor
fld
and
dec
pop
mov
push
mov
fmul
mov
les
cmps
xchg
mov
lock
sub
into
push
cmps
shl
aaa
test
rcr
jmp
fisubr
clc
push
popa
jnp
sbb
ins
mov
fmul
shr
cmp
inc
mov
adc
push
adc
adc
pop
push
mov
or
push
xchg
dec
fs
inc
(bad)
ins
or
or
push
pop
call
into
sahf
(bad)
movs
(bad)
shr
jmp
call
test
scas
clc
sahf
push
imul
sbb
mov
mov
sub
or
imul
mov
mov
outs
cmps
cli
or
push
adc
(bad)
cli
dec
push
aas
sub
xor
jae
mov
dec
pushf
jp
test
and
stc
test
jmp
imul
push
test
inc
xor
or
in
sub
and
loope
jg
out
dec
outs
bound
fcom
push
loopne
std
popf
pop
aaa
out
ss
xchg
outs
xor
clc
or
lock
jo
ret
xchg
addr16
loopne
jae
xor
stos
xchg
rol
sub
pop
popf
pop
dec
sahf
repnz
sbb
mov
xor
sbb
ss
fisub
in
pusha
inc
das
mov
prefetch
mov
leave
adc
push
mov
loop
imul
cmp
out
adc
outs
sub
or
jmp
cmp
jno
pop
loope
push
lods
dec
cmp
js
call
cmp
adc
ins
not
xchg
push
or
out
pop
cli
push
into
js
out
leave
bound
rcr
icebp
shl
pop
inc
mov
movs
scas
add
nop
shl
jne
cmp
test
fcom
out
popa
xor
pop
in
inc
cmp
push
pop
inc
pop
mov
or
(bad)
aam
mov
mov
mov
std
or
sub
xchg
adc
jae
fstp
leave
add
push
mov
ss
pusha
mov
(bad)
pushf
fisttp
leave
mov
shl
xchg
push
jmp
xchg
cmp
or
or
and
push
std
add
lods
fcomp
popf
push
push
cmovo
mov
aad
mov
mov
cmp
mov
xchg
(bad)
out
inc
cli
adc
mov
dec
cld
aaa
pop
jns
pop
aas
inc
xchg
sbb
ins
cmp
(bad)
or
jbe
scas
shl
mov
stc
arpl
xor
ror
lea
dec
jnp
xor
or
das
jecxz
mov
shr
leave
mov
ret
hlt
cmc
cmp
sbb
sub
xchg
ins
mov
mov
hlt
and
sub
inc
fldenv
stos
sub
jo
out
cwde
pop
xchg
xchg
nop
xlat
xchg
sbb
add
jmp
mov
les
sahf
iret
rcl
xor
mov
int3
lods
ins
pop
call
xor
push
pop
mov
push
mov
dec
shl
cmp
add
pop
xor
movs
fs
add
mov
popf
or
xchg
mov
inc
push
dec
mov
sub
push
pushf
jne
pushf
mov
out
hlt
push
mov
(bad)
push
outs
and
jno
popf
pop
lods
adc
xor
add
mov
fld
in
sbb
adc
and
jnp
jo
sahf
pop
dec
mov
cmp
and
jge
call
out
fimul
fs
inc
in
mov
arpl
jge
vmread
inc
lock
jbe
xchg
pop
mov
jnp
call
fucom
inc
sub
inc
std
pop
or
add
add
push
pushf
enter
(bad)
xlat
call
mov
cmps
sar
data16
add
cmp
sub
loope
fbstp
retf
pop
xchg
pop
gs
in
sbb
imul
add
popa
cmp
push
ss
popa
fsubr
adc
or
inc
push
xchg
jb
mov
or
bound
movs
es
jbe
cmp
pop
ss
movs
test
xor
loope
retf
ins
shl
lahf
mov
fist
out
mov
sti
pop
xchg
scas
stos
gs
mov
sub
das
sub
inc
adc
jmp
aaa
neg
dec
xor
push
adc
ror
xor
test
xchg
add
or
push
jbe
fmul
add
in
jbe
not
mov
mov
mov
clc
int3
pop
mov
scas
sbb
xchg
jno
and
or
cs
cmp
push
ror
test
mov
xchg
dec
leave
inc
or
lock
adc
call
cs
shr
sub
mov
sbb
cwde
xor
dec
cld
cs
mov
pop
rcr
cld
jmp
ret
ret
int3
lods
cmps
xchg
lds
bound
or
call
loopne
sbb
ins
sub
xor
cdq
rcr
jno
shl
outs
xlat
inc
retf
imul
mov
(bad)
and
into
call
out
sub
or
rol
lods
neg
mov
pusha
test
inc
sub
inc
fst
(bad)
int
aas
sub
sub
cwde
push
mov
mov
cli
cmp
rcr
dec
inc
xchg
push
nop
retf
jb
cs
in
pop
je
and
mov
rol
or
sub
mov
ins
inc
push
dec
dec
icebp
xor
fldenv
(bad)
mov
inc
imul
and
mov
push
mov
pop
repnz
mov
les
xor
stc
movs
stc
addr16
inc
rol
xchg
cmps
jne
cli
and
scas
cmp
shr
pop
inc
movs
push
adc
mov
and
and
mov
cli
retf
not
mov
dec
in
push
xchg
jg
jge
and
pushf
lahf
fidiv
mov
int
jecxz
push
mov
sahf
and
push
cmps
fild
(bad)
mov
sbb
mov
add
or
lahf
dec
aaa
test
mov
icebp
(bad)
jmp
pop
loop
adc
jmp
(bad)
test
xchg
xor
push
pusha
sub
jae
fild
xchg
pusha
mov
or
sbb
jbe
fwait
loope
jp
sbb
daa
cmp
fisttp
movs
hlt
jno
js
cmps
xchg
mov
lahf
aas
not
mov
pushf
aad
sub
imul
addr16
(bad)
repnz
fcomp
push
retf
jne
add
jle
mov
retf
fisttp
mov
mov
mov
repnz
(bad)
loop
ret
cwde
or
(bad)
in
les
daa
inc
mov
dec
push
mov
popf
scas
jbe
mov
jbe
xchg
out
push
in
lods
jecxz
and
adc
pop
(bad)
fadd
and
xchg
ins
dec
pop
rcl
inc
add
push
sbb
mov
repnz
add
or
mov
sbb
fisttp
push
or
inc
and
cs
fiadd
cmp
outs
adc
pop
and
rol
xor
mul
sahf
cmp
fild
call
or
or
pop
dec
mov
bound
test
pop
into
in
xor
popa
das
ret
popa
adc
loop
mov
jg
neg
call
mov
pop
imul
and
jo
adc
fcmovu
sub
xchg
shr
and
and
out
inc
ret
cmps
daa
aad
dec
add
mov
vmovlps
mov
cld
rcr
xchg
stos
fnstsw
bound
cmp
imul
ins
jo
inc
inc
adc
sub
outs
fimul
test
push
scas
and
pop
popf
mov
in
mov
movs
shr
lahf
outs
mov
imul
mov
inc
aas
dec
xchg
out
pop
cmp
ja
stc
sti
fs
pop
repz
stos
jb
scas
out
fdiv
addr16
and
xor
sbb
retf
and
xor
stc
and
outs
call
sbb
jae
cmp
xchg
inc
cmp
ss
and
ja
add
jp
(bad)
std
cmp
sbb
xor
clc
push
push
pop
xchg
cmp
inc
repnz
cdq
xchg
xchg
sub
inc
push
adc
mov
add
je
pop
dec
or
dec
xchg
in
imul
push
pop
jp
add
call
inc
movs
xchg
or
clc
test
xor
fcmovb
int3
mov
scas
xchg
or
mov
xchg
dec
movs
das
imul
(bad)
clc
and
mov
hlt
in
mov
mov
mov
ja
or
adc
mov
shr
dec
je
nop
push
cli
fwait
daa
pop
mov
or
mov
xchg
xchg
xchg
push
pop
lock
icebp
dec
add
fwait
das
add
and
jns
out
dec
jno
cmp
xchg
mov
imul
adc
shl
sub
dec
or
call
or
push
xchg
inc
and
shr
jae
(bad)
dec
dec
mov
call
sbb
or
inc
push
or
nop
fcomip
jmp
mov
cmp
out
push
mov
ret
stos
inc
dec
ret
dec
xchg
xchg
aas
xlat
stos
dec
aas
ds
shr
xchg
leave
cdq
pop
xchg
cmp
xlat
fst
mov
loopne
loop
cmp
sub
leave
int3
jo
enter
or
aaa
xlat
clc
rcl
sbb
xchg
xlat
jbe
dec
inc
push
jg
cmps
les
shld
pop
sub
mov
scas
jb
and
sub
imul
add
je
scas
adc
push
mov
ret
jecxz
inc
inc
vshufpd
in
es
and
in
mov
xor
jmp
rcr
pop
inc
pop
(bad)
les
adc
mov
aaa
repnz
mov
jle
push
sbb
paddw
scas
ret
pop
(bad)
fld
rcr
add
sti
out
lods
ret
mov
fild
cli
mov
out
cli
repnz
movs
fdiv
fs
cmp
xor
mov
cmps
or
aaa
mov
imul
mov
mov
fist
and
add
lahf
pushf
xor
aam
in
jae
retf
mov
shl
clc
jo
(bad)
out
push
push
pop
xchg
dec
jmp
mov
vmovupd
push
cmps
test
inc
mov
loopne
push
mov
shr
retf
bound
pop
scas
aad
pop
(bad)
jecxz
inc
xor
sub
cmp
test
iret
pop
mov
xchg
fist
mov
stc
loopne
stc
add
mov
scas
inc
outs
jmp
mov
adc
push
push
idiv
xor
cmps
mov
je
fnsave
fcmovnbe
mov
in
mov
enter
cmp
sbb
jle
test
shl
lods
push
into
fcmove
push
cdq
pop
mov
pop
dec
or
xchg
mov
out
sti
jecxz
fs
inc
ret
cmp
aam
test
scas
lods
inc
push
cmps
or
adc
sahf
inc
pop
pop
movs
lea
mov
pop
das
shl
cmp
dec
inc
pop
iret
jge
cdq
clc
rol
lds
ins
pop
push
cmp
add
jno
adc
xchg
sbb
mov
(bad)
jg
adc
mov
mov
mov
inc
xlat
ins
inc
lea
xchg
mov
sti
push
out
sar
in
mov
inc
ds
stos
jmp
rcl
movs
ret
movlps
add
inc
rcl
sti
int3
sbb
jge
mov
arpl
enter
pop
mov
add
push
cdq
add
mov
mov
dec
mov
jmp
fs
div
mov
or
int3
jmp
imul
imul
(bad)
movs
in
(bad)
cs
jbe
dec
shl
outs
sti
ds
cmp
and
push
xlat
ret
push
ds
pop
outs
inc
sti
inc
lods
xchg
cmp
push
xchg
cmps
icebp
jb
mov
stos
sub
jl
pop
dec
sbb
movnti
xchg
in
mov
cdq
rol
sbb
enter
cwde
popa
outs
mov
mov
in
mov
jmp
inc
add
rcr
jnp
(bad)
not
nop
or
outs
add
xchg
in
shr
jmp
sub
clc
sub
hlt
jecxz
xor
mov
sub
cmp
jbe
pop
jnp
dec
push
ja
or
add
ja
stc
sar
jge
cmp
add
aaa
(bad)
call
add
add
sub
mov
inc
jae
retf
xchg
fist
in
neg
ins
movs
jns
(bad)
adc
mov
jmp
adc
mov
mov
xor
xchg
daa
or
mov
jb
leave
adc
ret
pop
ins
lahf
(bad)
retf
frstor
stos
push
lods
cmp
dec
lds
push
inc
into
push
and
sbb
jbe
sub
js
fld
icebp
mov
outs
leave
cmp
js
inc
xchg
dec
mov
sbb
test
stos
mov
fdivr
repz
mov
xchg
ins
scas
loop
test
push
(bad)
jo
inc
or
outs
push
mov
not
sbb
in
sub
sbb
mov
fcomp
sub
cmp
iret
lods
mov
xor
jns
cmp
sub
mov
or
jmp
sub
push
mov
(bad)
xchg
sbb
movs
popa
or
int
aam
xchg
inc
mov
lds
pop
xchg
movs
xchg
xor
(bad)
aad
addr16
jmp
inc
retf
sub
sbb
(bad)
ds
xchg
xchg
in
dec
stos
pop
adc
popa
sahf
dec
popa
sub
mov
inc
add
loope
push
dec
pop
(bad)
outs
sbb
fist
imul
mov
add
aas
ret
cmc
daa
and
jecxz
xor
mov
sub
and
cld
loopne
mov
sub
dec
ror
outs
test
inc
hlt
push
lods
pop
adc
xchg
jne
push
jle
sbb
jg
aad
xchg
(bad)
mov
mov
(bad)
call
add
inc
push
cs
dec
jb
inc
aam
call
add
neg
pop
dec
fcomp
pop
and
iret
int3
push
cmps
jbe
dec
fimul
aad
xor
icebp
xor
xor
pop
mov
push
dec
add
leave
mov
push
fadd
pop
jecxz
inc
retf
lds
in
inc
(bad)
mov
imul
fdiv
sub
pop
mov
hlt
cmc
cdq
cmps
fldenv
mov
xor
mov
jmp
adc
(bad)
aam
test
movs
sub
or
push
jnp
ret
cmp
pop
xchg
out
mov
xor
out
sub
sar
xor
lea
test
lock
xchg
jmp
test
fsin
ror
dec
inc
push
sub
sub
xor
dec
mov
sbb
retf
pop
or
in
add
das
dec
xchg
xchg
mov
popf
xchg
fcomp
pop
xchg
ret
fs
pop
xor
jmp
stc
push
inc
inc
mov
xor
cwde
pop
nop
jge
data16
cmps
fist
or
bound
and
imul
pop
inc
jne
cdq
pusha
cmp
aas
rcr
jge
lea
enter
mov
out
retf
retf
add
div
push
push
cs
cld
retf
test
ins
mov
rol
in
push
push
rcl
pusha
push
and
push
or
(bad)
rcr
sahf
ds
xchg
fs
inc
in
push
jae
dec
(bad)
mov
out
loopne
stos
jmp
lds
rol
and
ss
sbb
push
xor
lahf
adc
mov
sti
jae
sbb
fnsave
sbb
test
dec
sub
push
cmps
sbb
mov
add
dec
jge
sub
addr16
aam
inc
jecxz
sti
cld
gs
push
jl
mov
sbb
clc
adc
iret
out
xchg
or
sti
xchg
das
stos
push
ret
mov
mov
dec
xchg
or
mov
mov
sbb
out
push
cmp
mov
bound
outs
and
loopne
pop
clc
lahf
dec
test
js
stos
popf
pop
or
sub
call
push
xchg
and
sub
setne
sub
call
mov
scas
fstp
or
call
pop
mov
adc
daa
addr16
rol
cmp
cmps
arpl
or
stos
jb
loopne
in
repz
sub
jae
lea
pop
mov
icebp
and
lods
sbb
mov
inc
call
pusha
jns
test
cdq
jmp
repz
jnp
push
sub
add
mov
adc
rcl
sub
mov
adc
push
sub
(bad)
loopne
and
daa
imul
shl
test
pop
mov
std
retf
adc
ror
jne
ss
rol
add
xor
add
add
in
outs
xchg
shr
push
push
fwait
mov
adc
cdq
cmps
xor
pop
movs
mov
xor
mov
inc
xchg
sbb
fild
nop
scas
loope
(bad)
cmp
push
fwait
ret
arpl
out
call
std
in
xchg
mov
jg
loope
aam
js
inc
and
add
fmulp
outs
mov
fstp
xor
lods
inc
inc
mov
sub
fwait
sbb
std
imul
pop
push
rcl
mov
pop
adc
cmps
inc
and
xor
push
xchg
into
sbb
push
dec
mov
sub
xor
pop
and
push
test
out
push
lock
xchg
fild
stos
cmp
clc
jns
outs
mov
fnstsw
xchg
mov
pop
imul
out
repnz
in
cli
js
mov
jns
xor
jno
sub
mov
mov
ret
jecxz
stos
fwait
or
repz
pop
inc
push
inc
lds
shl
and
shl
sub
sub
shl
ror
fld
shr
inc
shl
pop
int
or
pop
or
movs
pop
popf
fsub
mov
dec
ret
and
adc
mov
mov
out
or
dec
sbb
inc
call
mov
jle
sub
aaa
cmp
mov
xor
dec
xchg
aam
shr
shl
jl
xchg
xchg
mov
mov
fistp
and
or
push
jo
test
mov
cs
jl
ficomp
gs
in
adc
push
xor
xor
adc
jns
loope
(bad)
shl
push
test
add
dec
retf
and
rcr
cli
outs
jp
imul
inc
jb
dec
popa
mov
aam
push
xor
loop
outs
lock
pop
cwde
pop
sub
sbb
mov
dec
dec
sub
mov
pop
xor
jle
jmp
or
cmps
daa
aam
jmp
repz
test
pop
sbb
aad
jp
cld
jae
add
into
push
mov
xlat
and
nop
enter
or
aaa
mov
mov
daa
sbb
jae
call
sahf
pop
int3
(bad)
jo
mov
ret
js
outs
retf
test
jne
scas
xchg
popf
push
aaa
lock
mov
push
cmps
sbb
or
(bad)
cmp
mov
and
inc
xchg
mov
dec
jb
xor
cmp
out
jecxz
ficom
adc
and
aam
jb
je
sti
cmps
dec
bound
outs
aam
in
fwait
aam
fwait
outs
retf
mov
pusha
ror
mov
xor
std
jl
mov
and
sub
adc
sti
xor
test
fstp
addr16
pop
inc
dec
inc
xor
jl
adc
outs
mov
icebp
jge
push
jmp
sbb
lock
imul
pop
std
add
sub
or
cmc
adc
mov
rcr
inc
(bad)
pop
adc
idiv
sub
mov
popa
(bad)
retf
adc
inc
fadd
scas
ins
bound
test
aaa
clc
xor
add
lods
(bad)
loop
xor
std
cwde
jp
fwait
cmp
sub
inc
mov
(bad)
sub
mov
inc
jmp
sub
inc
movs
daa
repnz
push
std
test
in
(bad)
xchg
mov
lds
xchg
(bad)
pop
clc
sbb
pop
jmp
lods
and
push
xchg
sbb
out
and
jmp
fdiv
pusha
mov
xchg
data16
clc
xor
test
mov
mov
mov
push
push
fisttp
add
push
and
xor
xor
adc
xchg
lods
jns
stc
sub
push
stc
xor
cwde
pushf
push
pop
or
sbb
cli
fidiv
cmp
xchg
sti
loope
mov
push
xor
cmp
push
jo
jecxz
jns
movs
scas
lar
sbb
mov
int3
(bad)
imul
dec
ins
and
gs
xchg
mov
or
std
lods
shl
pop
imul
cmp
fstp
push
push
mov
lds
mov
jae
inc
test
mov
xchg
add
mov
mov
outs
imul
pushf
iret
dec
xor
push
scas
loop
sbb
or
cmp
gs
xor
shl
pop
mov
or
or
sbb
adc
lds
mov
fstp
adc
retf
and
pushf
(bad)
fbld
push
jne
in
inc
or
pop
jae
ret
push
cmp
div
aam
dec
cmp
mov
dec
jecxz
mov
test
(bad)
fst
and
repz
dec
xchg
xor
popa
clc
sub
adc
xor
mov
(bad)
mov
adc
cmps
jge
dec
int3
imul
ret
mov
popa
sbb
mov
(bad)
pop
and
pop
mov
lds
ins
fs
fimul
push
jne
ins
jge
inc
stc
clc
mov
jg
pop
imul
push
jg
out
je
ins
popf
push
das
add
pusha
imul
pop
sub
mov
mov
(bad)
std
mov
(bad)
fdiv
test
dec
cld
push
mov
daa
pop
clc
fidivr
jle
cmp
in
mul
dec
inc
fsub
and
in
push
into
push
scas
push
mov
xor
xor
fdiv
dec
les
or
sbb
push
adc
ret
shr
jl
sub
xlat
aam
xor
cmp
aaa
push
adc
in
mov
jge
sti
inc
push
jae
int3
push
add
xchg
inc
aas
mov
jmp
retf
add
and
push
or
mov
outs
dec
pop
xor
add
retf
stos
test
dec
dec
xor
push
pop
js
push
cmp
lahf
daa
cli
xor
cmp
ror
xor
scas
loopne
fadd
mov
ret
cmp
(bad)
idiv
pop
movs
std
mov
mov
jns
enter
fs
int3
dec
mov
fstp
inc
aas
jmp
cmc
sub
aam
sub
sbb
out
lock
lock
and
mov
fwait
cmps
leave
vpandn
fs
data16
into
inc
mov
push
dec
xor
pop
push
adc
clc
sbb
and
jne
xor
sti
shl
call
popa
jo
ds
and
mov
or
mov
and
rol
xchg
loopne
loope
mov
popa
loop
out
pushf
dec
adc
fs
mov
jb
and
inc
out
pushf
je
leave
inc
inc
test
xor
push
sub
cdq
dec
popa
daa
aad
inc
inc
leave
mov
pop
outs
inc
xor
xor
cmp
xor
in
pop
inc
xlat
jge
(bad)
scas
push
cmp
fisub
mov
sahf
in
out
(bad)
in
mov
and
xor
cmp
cmp
das
test
xor
xchg
das
mov
mov
cmp
fild
mov
push
or
hlt
(bad)
sbb
hlt
stos
aad
jecxz
sahf
adc
xchg
pusha
ror
xchg
mov
ss
stos
jmp
cmp
mov
in
push
stos
pushf
loope
call
aad
adc
xor
sbb
xor
shl
shr
bound
and
stc
repz
mov
std
call
jae
sub
push
fwait
ror
hlt
loop
mov
rcl
xor
sub
loope
add
mov
dec
pop
xchg
int3
std
jbe
xlat
out
xchg
cwde
mov
xchg
in
arpl
mov
inc
in
inc
ds
mov
jnp
std
cmp
cmc
adc
jne
rol
ds
add
cmp
mov
int3
out
sbb
in
or
cmc
fisttp
(bad)
clc
je
pop
xor
sti
sbb
mov
dec
inc
add
inc
int
mov
mov
inc
and
mov
dec
repz
pop
xchg
jmp
dec
jne
pusha
add
inc
dec
xor
mov
mov
mov
cli
lock
sbb
mov
dec
pop
xor
pop
in
dec
xchg
xchg
mov
fs
mov
fdiv
pop
imul
ror
into
aam
sbb
jb
fsub
ret
pop
push
cmc
xchg
stos
jle
addr16
fcmove
loopne
push
sub
or
xchg
push
inc
push
push
jle
lods
loopne
jno
daa
ds
jo
in
out
ret
or
pop
inc
(bad)
fstp
lahf
jecxz
sub
loop
mov
push
scas
mov
cmps
bound
sbb
xchg
and
repnz
and
imul
test
rcr
dec
pop
(bad)
adc
ins
fxch
jl
icebp
lds
mov
outs
sub
xor
test
fadd
jge
mov
into
outs
shl
arpl
jo
retf
rol
inc
shr
jne
pop
xchg
fisttp
ins
loope
(bad)
scas
lds
jnp
int3
pop
or
sti
jnp
dec
or
or
arpl
sahf
fdiv
adc
jmp
leave
cmp
lds
jne
and
aaa
jmp
into
in
xchg
in
dec
inc
mov
fild
mul
jle
xor
(bad)
mov
pop
out
xor
call
inc
cmp
ror
pop
sbb
daa
data16
cmps
sub
lds
jns
adc
mov
scas
push
cmc
xchg
jmp
je
jo
test
sub
int3
cmp
push
lds
bound
mov
in
jge
cmp
mov
inc
pop
popf
movs
stos
adc
stc
out
jne
div
inc
or
sbb
cwde
stc
call
cmp
fs
jae
inc
lods
ins
or
pushf
fcom
(bad)
mov
mov
add
and
cmp
dec
mov
inc
pop
aad
mov
inc
daa
lock
adc
mov
push
sbb
cmps
pushf
cmp
into
je
fs
ins
gs
cld
sub
push
push
ret
lods
jnp
ins
push
cmp
mov
dec
cwde
or
punpckhwd
out
adc
aam
clc
movs
mov
sub
repz
jmp
aam
and
pushf
outs
out
jge
ret
add
xchg
add
jl
mov
imul
mov
xchg
lea
lods
js
xchg
cmp
sbb
fcom
retf
mov
adc
cmps
add
push
mov
out
(bad)
pop
in
ins
leave
sub
mov
out
push
lahf
push
push
test
imul
jle
call
repz
aaa
pop
push
lock
out
pop
arpl
inc
(bad)
mov
loop
int
pop
xchg
sub
push
jle
and
push
stos
loope
xor
out
mov
xchg
call
mov
fimul
xchg
cmp
sub
jb
pop
fdiv
fdiv
nop
inc
push
push
scas
mov
inc
icebp
fst
sti
out
inc
dec
or
xchg
xchg
mov
aas
movs
int
je
daa
jp
int3
xchg
xchg
ror
adc
dec
push
fstp
leave
call
lahf
add
and
leave
cs
in
repz
and
dec
inc
imul
loop
(bad)
and
dec
dec
mov
in
push
mov
jb
movzx
sbb
push
int
sub
imul
mov
outs
(bad)
dec
push
mov
cmps
ins
pushf
in
inc
push
and
cli
pop
lds
call
and
call
test
mov
add
jae
xchg
pushf
xchg
push
sbb
xor
inc
jb
mov
jg
cmps
(bad)
push
fcom
push
(bad)
out
push
push
inc
dec
mov
sub
adc
lock
js
mov
(bad)
push
pop
add
test
sub
jle
jg
jle
fst
lock
lahf
push
test
out
mov
es
push
push
ins
mov
inc
pusha
rcr
push
icebp
pop
movs
push
(bad)
mov
outs
xor
ins
pushf
and
movs
or
xchg
test
add
ins
pusha
sbb
lods
add
xchg
icebp
pushf
add
(bad)
dec
retf
inc
leave
out
adc
repz
fidivr
mov
sub
sub
imul
(bad)
inc
or
mov
fisttp
inc
ret
mov
arpl
aas
out
inc
mov
add
inc
sbb
push
(bad)
mov
inc
leave
scas
aas
and
retf
pop
jno
outs
in
stc
movs
xchg
or
sti
push
test
data16
imul
pop
xchg
cdq
mov
or
fwait
dec
sbb
popf
inc
sbb
jmp
xchg
adc
cmc
test
ins
pop
mov
icebp
nop
push
dec
mov
cmp
xchg
fdivp
xchg
inc
push
div
mov
and
adc
and
and
cmp
mov
(bad)
jae
(bad)
loope
push
pop
rol
cld
push
pushf
inc
xor
sbb
ret
jmp
std
je
sub
cwde
dec
push
push
pop
mov
mov
inc
cmps
mov
cmps
push
pop
(bad)
(bad)
lock
and
int3
mov
repnz
in
nop
and
sub
stos
add
inc
not
dec
loopne
push
dec
or
in
mul
loopne
jmp
pop
aad
ffreep
cmp
and
(bad)
clc
add
aaa
test
pushf
adc
cmps
outs
sti
cld
mov
addr16
addr16
lods
xchg
mul
mov
jp
fiadd
enter
enter
aam
jne
out
mov
outs
jae
adc
in
and
int3
or
movs
loope
popa
mov
cli
xchg
mov
shl
adc
add
jg
idiv
ret
test
pop
loope
arpl
aam
mov
out
inc
xchg
pop
ins
sbb
pop
repnz
jl
adc
pop
inc
mov
(bad)
jg
xchg
(bad)
adc
fs
movs
jmp
push
jno
xchg
cmp
jne
arpl
mov
xor
iret
jmp
in
cli
shl
aam
or
xchg
xor
sar
loope
pop
lahf
mov
(bad)
ins
sahf
cmp
and
loop
sub
pop
sbb
fldcw
and
jae
or
mov
inc
mov
cs
inc
mov
test
pop
jg
mov
ins
sti
xchg
adc
cmps
push
add
add
jmp
rcr
jnp
or
push
jecxz
test
jno
jg
xchg
psraw
popf
jnp
xchg
mov
scas
sub
mov
mov
cmp
push
(bad)
cmp
mov
andnps
or
mov
xor
xor
(bad)
aam
aam
(bad)
add
int3
mov
sub
mov
or
mov
adc
ss
sub
sahf
adc
adc
and
jmp
mov
(bad)
and
sub
(bad)
inc
add
call
movs
aaa
stos
daa
jg
mov
cmps
fld
lock
mov
leave
daa
pop
dec
rcr
xchg
inc
xchg
adc
sbb
in
mov
pop
lock
mov
fist
sbb
cli
movs
inc
addr16
or
fs
jp
xchg
jnp
jmp
aad
and
aam
js
jnp
pop
jmp
sbb
into
aaa
or
loope
cmp
mov
fcom
xor
je
pushf
or
mov
add
mov
(bad)
jnp
ja
std
or
cmps
fiadd
xchg
leave
imul
jge
ficomp
xor
xchg
cmps
xor
sbb
pop
(bad)
jne
movs
mov
or
lods
fnstcw
adc
hlt
sti
add
cs
mov
cmc
je
dec
push
inc
(bad)
(bad)
lock
ret
xor
int3
dec
stos
adc
in
clc
loopne
mov
add
js
mov
xchg
inc
jb
pop
lock
shr
inc
inc
dec
mov
inc
push
xor
arpl
cs
rcr
inc
ror
cmp
rol
dec
out
cmp
inc
nop
test
or
cld
icebp
nop
in
frstor
sbb
lahf
pop
(bad)
in
cmps
xchg
hlt
cmps
test
adc
pop
cmp
sub
int3
push
xchg
pop
cmps
jge
scas
dec
inc
stc
popf
fsub
mov
mov
shr
fnstsw
adc
aaa
inc
cmp
dec
mov
mov
loope
mov
and
movs
retf
dec
cmps
sar
cmp
xchg
mov
inc
xchg
and
xchg
jp
xor
pop
leave
add
ret
(bad)
adc
addr16
outs
or
adc
pop
xlat
nop
push
pushaw
mov
jbe
inc
and
jbe
jno
sub
add
jmp
sub
sbb
xchg
movs
cmp
and
jl
jl
sahf
add
shl
repnz
sub
and
pop
sub
fsub
adc
push
aas
sbb
push
movs
inc
pushf
sbb
es
call
mov
adc
dec
ins
xor
enter
loope
add
stc
xchg
gs
(bad)
out
icebp
repnz
movs
sbb
ror
push
push
or
mov
imul
pop
cli
retf
imul
adc
push
je
add
out
sbb
cdq
rcr
outs
arpl
lds
mov
cmp
sub
push
outs
add
sub
xchg
push
into
jbe
xchg
jmp
sub
jno
mov
scas
imul
jo
mov
out
pop
shl
sub
mov
jg
sbb
es
fist
lods
fisub
or
and
pop
inc
mov
imul
mov
sbb
push
in
jmp
mov
call
xchg
fcom
inc
adc
cli
imul
fsub
cmps
leave
pop
push
pop
jl
je
dec
call
push
adc
pushf
mov
je
ds
bound
(bad)
fsub
add
ja
or
lds
fcomi
xlat
in
xor
(bad)
sbb
inc
repnz
mov
into
mov
sub
lahf
stos
pop
xchg
push
fnstenv
add
std
(bad)
in
fdiv
movs
fistp
mov
mov
ja
adc
or
lods
pop
jl
sahf
mov
es
sbb
sub
mov
js
and
lea
cmp
cdq
pop
std
ret
xor
push
mov
mov
ins
adc
(bad)
mov
mov
pusha
sub
in
push
in
dec
ss
sub
xor
mov
inc
outs
add
pop
in
out
adc
nop
arpl
ret
inc
mov
out
je
int
inc
fadd
sbb
add
inc
loopne
adc
xor
arpl
test
mov
and
imul
mov
pop
inc
jb
sub
shl
scas
or
cmp
(bad)
out
or
out
inc
mov
dec
pop
xchg
aas
(bad)
pop
pushf
jg
loop
pop
inc
xor
xchg
loop
lds
cmps
sub
into
fdivr
leave
mov
retf
push
xchg
add
aad
or
outs
mov
loop
or
cmc
stos
adc
xor
mov
inc
jmp
push
sbb
dec
or
loope
and
adc
adc
out
sti
repnz
fadd
mov
in
push
sub
stc
mov
xchg
loope
gs
mov
push
xor
push
or
int
aas
jmp
into
mov
ss
dec
in
xchg
add
push
nop
sub
rcl
mov
dec
mov
push
scas
push
mov
pop
fisttp
in
(bad)
aam
std
dec
icebp
xchg
add
sub
and
icebp
mov
adc
push
pop
pop
jmp
pop
push
(bad)
mov
(bad)
push
pop
mov
and
aad
mov
je
popa
icebp
aad
xchg
jb
push
gs
xchg
push
and
out
jae
shr
sub
add
cwde
mov
push
push
mov
in
push
test
ds
repz
mov
imul
xor
pop
leave
or
mov
dec
shl
add
jo
jbe
pop
iret
inc
mov
cmps
xchg
call
add
fistp
xor
mov
test
push
sbb
out
shl
(bad)
adc
mov
fistp
out
push
xchg
xchg
mov
cmp
(bad)
ins
fld
aaa
sti
rol
push
and
or
jle
push
stos
xchg
and
rol
pop
ret
inc
push
or
cmp
pop
jmp
cmp
and
mov
scas
inc
lods
mov
xchg
push
sbb
dec
or
ret
mov
mov
movs
gs
(bad)
retf
lock
xor
les
std
pop
cmp
mov
pop
inc
mov
out
aaa
jmp
repz
je
add
int
retf
inc
and
or
adc
les
ret
daa
ins
inc
arpl
mov
push
sti
test
repnz
xchg
xor
jp
cs
fwait
sbb
jae
stos
sub
cmp
fcomp
lds
add
addr16
push
(bad)
mov
or
imul
(bad)
ficom
arpl
mov
movs
push
loop
repnz
mov
and
pop
jmp
push
inc
data16
mov
cdq
pop
(bad)
out
push
sbb
xor
and
jmp
sbb
mov
das
fisub
mov
(bad)
cmp
(bad)
cli
in
mov
or
jno
mov
ins
js
sbb
popf
stc
mov
popa
jno
mov
or
jae
out
clc
es
(bad)
mov
jmp
lahf
in
popf
mov
(bad)
outs
icebp
inc
add
dec
mov
je
pop
dec
fidiv
sbb
and
das
in
mov
mov
aaa
pop
dec
and
xor
cs
cdq
nop
mov
lock
cmp
outs
loop
daa
inc
xchg
jg
add
inc
jae
pop
rol
xor
shl
and
dec
mov
jno
pop
fadd
add
mov
cmp
or
push
inc
cmp
cmps
mov
(bad)
and
sar
fcomp
push
dec
push
jmp
xor
dec
push
mov
pop
cli
mov
push
test
pop
movs
mov
in
pushf
sub
(bad)
jmp
arpl
pop
xor
dec
mov
mov
in
pop
mov
add
push
shl
aaa
ds
sbb
mov
add
sbb
cld
cli
out
mov
clc
or
pop
adc
imul
loop
pop
cmps
cmp
sub
retf
pop
aaa
lock
cmc
jg
inc
in
cli
std
adc
dec
bound
mov
xor
jmp
inc
lock
mov
mov
inc
jmp
mov
movlps
imul
cmp
mov
test
into
out
push
es
lahf
iret
cli
mov
jno
dec
inc
xchg
dec
cmp
iret
pushf
loop
jmp
scas
std
in
inc
add
adc
cmp
mov
pop
int3
jle
cmp
jmp
in
outs
jno
mov
add
stos
enter
inc
pop
and
clc
sbb
lods
test
gs
iret
jmp
cdq
mov
jnp
int
aad
(bad)
mov
jnp
xor
fdivr
ss
hlt
rcl
mov
sahf
pop
cmps
ds
loope
js
or
ret
repz
jecxz
aam
sub
fwait
mov
ds
jmp
dec
jp
(bad)
std
push
push
jae
sahf
jns
out
or
mov
or
xor
push
mov
inc
inc
jmp
xchg
aaa
(bad)
mov
dec
mov
xor
fldenv
test
dec
sub
or
and
xor
in
lea
cmp
sbb
adc
mov
call
dec
pop
dec
xlat
cld
dec
out
add
mov
xchg
inc
dec
dec
inc
xchg
adc
mov
and
icebp
xchg
std
or
fisttp
or
mov
pop
or
push
mov
pop
ds
sar
dec
add
mov
mov
sbb
in
test
rcr
cli
ror
and
inc
push
lods
or
arpl
ja
cmp
xchg
cli
test
xor
ss
jmp
cmp
sbb
pop
or
mov
mov
jg
cmp
mov
gs
adc
(bad)
ins
ror
nop
bound
(bad)
jb
aad
and
or
xor
in
adc
das
sbb
pop
xchg
and
push
aam
movs
mov
jmp
retf
rcr
pop
or
sub
movs
sub
mov
mov
out
cli
adc
push
nop
(bad)
in
or
mov
stos
sub
pop
cmp
in
mov
add
mov
int
add
sub
inc
mov
xchg
hlt
aam
out
xlat
mov
and
jne
in
xor
xor
sbb
in
inc
(bad)
stos
out
dec
iret
test
pusha
ret
ror
sahf
loopne
rol
cmp
(bad)
jge
js
pusha
ja
popa
loope
pop
add
jbe
push
sub
adc
cmps
pop
pop
jmp
dec
mov
sti
stc
inc
jns
clc
shl
mov
xor
sub
add
sbb
int3
jmp
es
imul
lahf
mov
pushf
inc
in
xchg
imul
arpl
out
mov
clc
jg
cmps
scas
mov
cwde
add
ret
jns
(bad)
sub
mov
in
sbb
cmp
jnp
mov
xchg
or
pop
pop
and
push
jmp
stos
mov
push
pop
jo
pop
lea
fisttp
enter
push
imul
sub
cmp
int3
(bad)
stc
xchg
or
imul
add
pop
cmp
and
adc
cmp
rcr
(bad)
fdivr
mov
and
mov
dec
push
add
jmp
nop
ficomp
add
out
pop
rcr
aad
ret
xor
sub
sbb
adc
jb
add
js
xchg
clc
fcom
add
mov
enter
xchg
ss
sub
sub
(bad)
mov
ins
sub
cmp
xor
(bad)
inc
lods
jns
pop
fnsave
repnz
imul
mov
scas
dec
mov
in
loope
adc
das
and
xchg
sbb
lds
pop
inc
jmp
shl
cmc
es
mov
into
or
add
or
enter
add
(bad)
repz
adc
(bad)
ins
aam
inc
dec
loop
mov
jne
xchg
sub
push
rcr
outs
and
cmp
test
test
cli
aas
imul
mov
adc
je
rol
xor
out
jae
rol
xor
add
xor
cmc
enter
jns
xor
adc
push
jmp
fs
jne
call
adc
mov
ret
sbb
xor
sbb
xlat
dec
jge
clc
fs
sub
push
and
fadd
js
xchg
xor
cmp
jmp
out
enter
rcl
pusha
inc
mov
cmc
leave
add
and
add
sub
daa
sub
xchg
movs
aaa
std
jae
jbe
adc
fs
xor
test
stos
les
sbb
shl
cmp
cmc
and
and
in
out
cmp
out
mov
test
jg
push
pop
and
add
jmp
or
ja
test
popa
fwait
xlat
mov
fucomip
push
out
or
imul
mov
in
es
cld
call
cmp
adc
adc
fs
cld
in
mov
aad
mov
xchg
jae
and
std
shl
dec
cmp
loope
adc
ss
mov
addr16
stos
fwait
pop
sub
ins
adc
sbb
and
fdivr
stos
loop
ins
movs
shl
mov
inc
pop
and
cmps
xor
sbb
test
or
jo
inc
pushf
jmp
mov
pop
neg
imul
sub
leave
add
push
mov
daa
in
jno
mov
fwait
push
sbb
and
je
xor
imul
push
mov
xor
(bad)
jmp
stos
rcl
and
push
mov
ins
push
fwait
mov
xchg
inc
adc
test
push
mov
clc
fwait
(bad)
ror
inc
fisubr
mov
mov
adc
cmp
dec
call
sub
mov
sub
xchg
ret
fld
jo
sbb
pop
push
jmp
iret
inc
mov
adc
xor
int
ja
push
inc
in
dec
enter
stc
js
and
aaa
stos
iret
stos
xor
mov
and
cli
dec
adc
or
push
fist
inc
inc
pop
in
aas
out
inc
lock
or
int3
jg
mov
movs
aam
xor
ret
sti
sbb
inc
pop
jp
sub
fwait
mov
xor
inc
daa
popf
mov
xchg
pop
sti
and
mov
sbb
bound
mov
sbb
ret
sbb
xor
pop
push
test
jmp
xchg
int
sub
adc
loop
jle
adc
popf
test
repnz
jp
mov
inc
xchg
xchg
jg
les
add
or
scas
jp
lahf
and
(bad)
dec
ficomp
icebp
dec
cmc
cmps
fs
(bad)
aad
pop
loope
in
imul
mov
jae
push
test
xchg
icebp
cmc
aas
data16
cmc
dec
js
xor
dec
fist
jecxz
imul
pop
pop
jb
xor
add
int
bnd
mov
loop
or
jmp
mov
jmp
sub
xchg
push
out
mov
mov
or
dec
nop
repnz
or
xor
push
nop
fmul
stos
or
test
ret
push
std
imul
mov
loope
cdq
add
imul
xchg
jns
(bad)
push
xlat
dec
mov
dec
lods
or
fadd
push
idiv
repz
mov
int3
xor
push
in
out
push
shl
push
mov
mov
ret
(bad)
jp
inc
es
xor
mov
or
xor
scas
push
jecxz
sub
mov
int
jo
pop
or
movs
dec
mov
pop
retf
and
(bad)
cmp
div
inc
cwde
or
xor
fsubr
lahf
mov
mov
ins
sub
or
jmp
and
xor
sub
stos
mov
pmulhw
scas
inc
inc
inc
xchg
sar
inc
dec
stos
shr
inc
sub
jmp
into
mov
mov
lods
or
repnz
xchg
ds
add
lahf
sub
imul
leave
cmps
add
sub
js
hlt
mov
sub
mov
dec
loop
cwde
mov
and
ins
sub
leave
sub
pusha
inc
ficomp
push
rcl
push
rcr
bound
stc
fadd
xor
addr16
jle
mov
jne
pop
(bad)
and
movs
push
arpl
stc
pop
mov
test
dec
mov
mov
dec
sahf
dec
in
push
int3
call
(bad)
scas
xor
push
scas
mov
(bad)
cmc
fdiv
rcpps
sbb
adc
call
add
pop
sub
adc
sti
bswap
sub
jmp
sar
cmp
xchg
dec
and
pushf
repnz
sub
pusha
mov
pop
iret
fs
call
cmps
mov
mov
fdiv
lock
mov
xchg
mov
repnz
dec
and
scas
js
add
pop
sahf
nop
xor
fs
or
jb
jnp
pop
mov
xchg
aad
and
inc
mov
cli
int
mov
adc
xchg
ret
mov
add
xlat
arpl
jmp
pop
test
pop
jne
pop
sub
push
vunpcklps
ficom
hlt
or
aaa
(bad)
jmp
fs
fcmovnb
test
mov
in
shl
xchg
outs
push
das
sub
and
mov
lahf
data16
imul
inc
dec
mov
or
jle
mov
fistp
pop
popa
rcr
es
mov
inc
xchg
sub
jl
xchg
jecxz
xlat
cld
pop
mov
mov
add
pop
pop
sar
mov
movs
xchg
(bad)
test
mov
xchg
mov
cmp
sbb
pop
mov
push
dec
ror
mov
or
mov
cmps
cld
mov
outs
mov
push
popf
mov
jge
dec
lahf
xchg
std
sbb
(bad)
(bad)
test
inc
mov
push
xor
push
pop
adc
std
xchg
test
out
test
ret
sbb
shl
test
jns
hlt
scas
icebp
rcl
add
xor
out
jg
xchg
stos
int
movs
(bad)
lods
ins
clc
inc
jo
imul
shl
jo
inc
neg
xor
sub
fisubr
addr16
loope
shl
inc
shr
jp
jne
mov
cmp
add
into
icebp
mov
faddp
das
mov
pushf
cs
ror
into
xchg
std
scas
das
adc
(bad)
loopne
dec
mov
jo
call
adc
jb
in
sbb
es
mov
and
(bad)
sar
xchg
xor
pop
cli
cmp
sbb
jbe
and
pushf
inc
sub
sahf
mov
and
sbb
sbb
cmc
and
sub
pop
pop
push
mov
push
ror
jno
sub
sub
scas
and
inc
inc
dec
in
cwde
mov
fsubr
inc
pop
jne
ja
and
jmp
mov
sbb
inc
xchg
daa
mov
(bad)
fist
push
push
mov
std
push
and
mov
scas
hlt
xchg
fxch
sub
inc
mov
inc
cmovo
mov
or
(bad)
repnz
cmova
syscall
fbld
dec
jecxz
daa
int
loope
sbb
iret
stos
ds
or
cmc
sub
cmp
ja
jmp
sahf
js
imul
repz
test
ret
loopne
pop
movs
xlat
push
xor
and
adc
xchg
push
sbb
push
cld
ins
ins
loope
push
add
fsubr
cmc
inc
jmp
movs
loop
adc
cs
loopne
into
in
xor
sbb
dec
addr16
push
jp
cmps
js
pop
dec
pop
(bad)
jmp
sub
sti
xor
(bad)
aam
xor
mov
shl
inc
xor
push
movs
rol
adc
adc
or
sbb
cli
mov
stos
in
pop
je
and
lods
in
inc
test
pop
pop
xor
mov
arpl
iret
pop
mov
mov
dec
out
xor
int
xor
mov
iret
jmp
pop
pop
xor
sar
jmp
retf
xor
jmp
outs
xchg
push
cmp
pop
mov
fwait
xor
push
ret
clc
call
pop
je
push
popf
repnz
dec
xchg
cmp
xchg
stc
pop
clc
xor
mov
retf
hlt
push
test
mov
sbb
sti
mov
inc
out
jns
mov
pushf
(bad)
pop
int3
inc
push
xor
mov
sbb
add
pop
out
test
jne
jb
repnz
je
retf
outs
gs
dec
mov
jo
dec
adc
pop
inc
pop
not
mov
adc
push
sahf
inc
pop
dec
add
or
(bad)
mov
popa
or
mov
xchg
fsubr
push
cmp
scas
mov
jae
inc
test
xor
mov
and
jmp
dec
enter
mov
fcmovne
(bad)
mov
in
shl
out
jmp
icebp
push
cmps
out
push
(bad)
fsub
push
add
ins
jne
das
inc
adc
int3
call
mov
aam
(bad)
mov
inc
imul
xor
xadd
pop
aas
adc
jge
movs
movs
leave
clc
lods
in
in
out
stos
xchg
jp
push
xor
shl
shl
cmps
clc
pop
xor
cmp
in
or
adc
cmps
sbb
add
inc
add
leave
pop
push
xor
dec
lods
inc
xchg
ins
xor
sbb
pusha
and
pop
jbe
fidivr
sbb
push
xchg
int
jne
inc
cmp
push
xchg
into
mul
push
mov
js
pop
loope
sbb
(bad)
das
and
mov
lds
sti
jle
xor
fbld
add
xor
xlat
not
mov
ret
rcl
mov
scas
sbb
jb
outs
loope
pop
mov
sbb
jnp
pop
adc
xchg
push
adc
repz
(bad)
jge
inc
sbb
out
fdivr
jecxz
daa
movs
movs
pop
jae
sub
or
pop
xchg
xor
retf
ja
pop
mov
movs
and
mov
test
cmp
dec
xchg
imul
push
daa
pop
push
jl
pop
pushf
inc
sbb
mov
jp
in
pop
std
les
push
imul
inc
mov
cmp
mov
into
and
sbb
cwde
adc
mov
lods
js
ja
add
out
ins
sub
je
out
cmps
adc
stos
jmp
jecxz
and
sub
sub
xchg
xor
cmovae
nop
jecxz
(bad)
and
jne
je
test
pop
push
cmp
jbe
adc
cmp
pop
movs
xchg
jl
inc
sub
mov
into
push
lods
int3
repz
addr16
push
scas
fldenv
lahf
sbb
lods
in
out
adc
imul
sbb
jmp
sbb
(bad)
aad
push
mov
lods
div
or
je
pop
movs
inc
xchg
mov
xchg
xor
or
ret
icebp
movs
loop
(bad)
aaa
push
test
and
dec
outs
xor
push
enter
sub
cmc
ja
jle
enter
xchg
xor
pop
adc
pop
push
dec
and
mov
int
push
mov
mov
push
adc
rcl
(bad)
jmp
popf
loop
in
mov
shl
ret
sub
sar
jno
lock
xchg
dec
retf
pushf
sub
and
pop
inc
and
fs
fnstcw
sbb
inc
lock
add
aas
mov
movs
mov
out
in
cmps
pop
inc
popf
sub
dec
stos
sti
outs
stc
sub
xchg
or
data16
dec
jno
test
xchg
out
and
xchg
or
dec
ja
mov
lods
fbld
ja
xor
loop
mov
aam
dec
mov
(bad)
mov
(bad)
fstp
push
adc
rcl
cmp
sbb
repnz
pop
retf
xchg
pop
sbb
iret
js
pop
push
sub
mov
(bad)
out
or
enter
mov
add
push
and
aas
cmp
cli
sub
popf
test
cld
aas
in
cmp
call
lock
and
sbb
dec
loope
(bad)
popa
sbb
(bad)
fimul
add
and
sti
push
fldenv
bound
test
mov
iret
jmp
sub
xor
adc
(bad)
or
jo
js
cmps
mov
fbstp
xor
ins
add
jnp
out
and
out
inc
loop
push
mov
jge
aam
movs
xchg
mov
dec
mov
mov
inc
rcr
adc
jae
cmp
add
jae
neg
je
enter
mov
je
adc
mov
rcl
xor
in
ja
mov
xchg
cmp
retf
xor
adc
jle
add
(bad)
push
sub
ror
test
fisttp
dec
inc
leave
add
mov
jnp
xchg
loopne
xchg
sbb
ds
sbb
cs
repnz
dec
mov
ds
and
sub
xor
and
je
pusha
(bad)
fcom
inc
inc
retf
mov
lock
pop
loopne
sbb
sbb
dec
scas
cmp
jmp
popa
mov
or
xchg
mov
sar
xchg
add
jae
mov
mov
movs
in
sbb
sbb
mov
mov
ret
push
imul
mov
call
call
mov
mov
mov
push
lods
add
ror
lea
maskmovq
imul
sti
pop
cmc
idiv
ins
or
mov
test
pop
inc
mov
pop
xchg
xchg
dec
sub
and
jg
stos
and
jb
xchg
pop
mov
js
xchg
dec
xor
and
jmp
sub
ins
sub
imul
mov
xlat
xchg
sar
inc
mov
popa
mov
loopne
add
les
dec
cmp
adc
mov
pop
pop
sub
jp
push
packsswb
imul
xchg
and
and
and
pop
inc
icebp
data16
mov
push
ret
lea
nop
mov
mov
jns
jmp
stos
adc
movs
pop
jmp
loopne
imul
fimul
fwait
movs
add
jne
imul
push
jne
rcl
sahf
fwait
ret
mov
and
ins
aas
pop
fcom
fidiv
mov
cmp
shl
xor
popa
dec
xchg
add
jmp
jmp
or
movs
jecxz
jns
clc
adc
jo
sbb
mov
xchg
out
(bad)
push
dec
cmc
mov
fiadd
sub
sub
sbb
sbb
inc
into
add
mov
mov
outs
js
fldl2e
cmps
dec
or
into
bound
shr
(bad)
clc
rcl
and
xor
shl
sbb
pop
cwde
dec
mov
in
mov
pusha
stc
sbb
pop
jmp
repz
js
adc
jnp
dec
clc
adc
pop
retf
sub
mov
and
pusha
imul
sbb
(bad)
sub
popa
hlt
cld
repnz
movs
aad
test
add
out
jno
das
xchg
ins
push
adc
stos
inc
xchg
xchg
cdq
xlat
int
(bad)
push
push
imul
add
leave
mov
shr
xor
shl
outs
jnp
adc
push
jns
inc
out
pop
mov
dec
mov
ror
fwait
push
push
lahf
jmp
repz
mov
loope
push
fucomp
retf
lods
mov
repz
pop
neg
inc
ror
cwde
or
add
fsubr
cmp
(bad)
mov
ror
mov
jmp
jmp
inc
xchg
sbb
inc
lea
and
push
add
sbb
retf
loopne
pusha
jns
jb
push
add
test
dec
add
cmp
jp
shr
inc
fdivr
xchg
mov
in
pop
pushf
(bad)
mov
pop
pushf
adc
push
repnz
cwde
mov
cdq
jb
add
movs
pop
sub
mov
cmc
mov
mov
adc
ja
jle
push
enter
in
add
mov
xchg
or
pop
retf
xchg
out
and
inc
gs
cmps
xor
rol
stos
scas
inc
mov
push
test
sub
add
mov
not
hlt
enter
int3
jnp
std
or
add
adc
add
scas
push
mov
sar
xchg
iret
mov
(bad)
jmp
mov
xor
push
ret
sbb
aaa
ins
mov
inc
xchg
hlt
std
add
punpcklwd
cmp
adc
jle
pop
dec
bound
xchg
adc
lods
movs
inc
loope
mov
pop
mov
test
retf
lds
leave
dec
mov
mul
je
int
adc
mov
sub
add
or
arpl
scas
addr16
mov
mov
int
xchg
rol
add
(bad)
fchs
lods
scas
adc
scas
movs
cmps
xor
inc
ds
jmp
popa
fwait
call
push
popf
dec
out
les
mov
lock
push
push
push
push
imul
or
mov
push
sub
mov
popa
jl
aam
xchg
inc
cmp
xchg
(bad)
xor
test
mov
add
fisub
test
sar
outs
loope
inc
les
xchg
jge
scas
or
or
pop
test
js
test
sbb
jmp
pushf
idiv
imul
adc
rcr
cmp
clc
cs
sti
jge
aas
aaa
xchg
ret
dec
pop
pusha
lea
mov
push
adc
rol
shl
xor
(bad)
pop
loop
cmp
mov
push
les
mov
(bad)
ins
inc
add
scas
mov
pushf
leave
retf
(bad)
outs
(bad)
pusha
or
mov
push
xchg
or
push
fwait
rol
inc
or
(bad)
in
sahf
jbe
fcom
dec
mov
xchg
push
dec
and
cmp
enter
mov
mov
inc
mov
dec
mov
mov
mov
sub
or
(bad)
pusha
or
push
mov
cmps
jp
mov
in
pop
int3
or
jne
repz
or
jecxz
sti
mov
mov
cmps
outs
in
add
out
stos
push
and
nop
mov
mov
cmp
lahf
cmps
cwde
push
mov
sub
dec
ins
aas
sahf
lods
ror
mov
aad
and
sub
test
repnz
loop
je
dec
add
ret
clc
sbb
xor
mov
xchg
add
fs
int
and
das
mov
push
xchg
or
mov
mov
(bad)
test
inc
stc
push
lea
stos
jmp
dec
out
mov
jno
rcl
and
or
into
div
(bad)
mov
sub
sub
shl
ins
in
ja
and
aad
pand
lock
mov
adc
outs
out
rcl
add
inc
(bad)
mov
lds
(bad)
pop
jge
gs
push
imul
ret
call
fcomp
fadd
fist
jae
cmps
cmp
jns
cdq
cmp
push
sub
cmc
jle
and
jnp
call
popa
adc
in
and
inc
xor
jne
mov
scas
mov
jae
cmp
inc
mov
cmc
mov
test
movs
out
sbb
mov
adc
jo
jle
pop
pushf
xchg
mov
or
cs
sbb
mov
add
iret
add
sub
cmp
lds
mov
fist
daa
push
add
or
pop
lock
stos
dec
push
loop
sub
mov
jle
xlat
jge
mov
and
adc
adc
mov
sub
sub
es
sti
daa
nop
cdq
and
(bad)
or
inc
mov
test
cmp
or
inc
push
jmp
fnstenv
jb
dec
and
xchg
je
jno
xchg
cmp
and
sbb
icebp
xor
daa
xchg
add
std
bound
icebp
mov
sub
jno
pop
jle
les
cmp
fisttp
jmp
or
mov
push
cs
enter
cmp
jbe
jb
sub
jmp
(bad)
sub
cmps
(bad)
movs
mov
arpl
pop
push
fs
mov
xchg
adc
lds
jb
std
xor
or
mov
pop
outs
adc
imul
pusha
enter
dec
pop
inc
xor
cmp
sbb
cmp
push
scas
sub
and
mov
mov
sub
dec
sub
enter
jl
jge
jb
stc
pop
cmp
xchg
arpl
jg
cmp
push
fsubr
fdiv
pop
mov
pop
sti
lods
rol
mov
sub
mov
in
repnz
(bad)
lds
popa
imul
inc
cmps
mov
test
dec
pop
cli
xchg
adc
cmp
movs
mov
retf
mov
and
adc
jae
xor
jno
iret
jno
mov
mov
xor
ins
pop
test
and
(bad)
in
rcr
fs
out
movs
aas
mov
cmp
jmp
call
ss
dec
shl
jle
pop
out
mov
cmp
xchg
lods
out
xor
xchg
xchg
xor
aad
sbb
ret
xor
pop
ret
inc
xor
mov
xor
dec
xchg
mov
xchg
test
outs
repz
cli
iret
inc
mov
clc
nop
(bad)
push
mov
and
xchg
mov
add
or
xchg
or
mov
(bad)
iret
sub
aad
ret
pop
xor
mov
mov
or
push
inc
inc
dec
inc
push
xlat
mov
int
inc
xchg
jns
fs
jecxz
dec
xor
cmp
imul
mov
jmp
sahf
mov
sbb
call
fbld
inc
mov
dec
stos
adc
ret
add
aad
mov
xchg
call
mov
cmovl
mov
in
sahf
mov
outs
xchg
mov
and
mov
inc
retf
aad
xlat
pop
icebp
test
out
cld
loop
mov
add
ss
mov
cwde
add
pop
sub
inc
in
mov
les
lahf
fisub
out
int3
jp
push
jns
lahf
int3
sbb
cmps
test
in
inc
mov
mov
scas
jb
fnstcw
test
xchg
ror
dec
mov
or
arpl
cli
mov
adc
inc
add
call
mov
je
jp
or
dec
jns
cmc
add
addr16
addr16
dec
jb
rol
and
push
adc
das
xlat
jg
push
icebp
adc
loope
cdq
push
mov
icebp
repz
push
stc
leave
sub
test
sub
rcr
lods
pusha
xchg
div
and
xchg
in
or
mov
retf
shl
aad
jecxz
in
sti
jp
pop
popa
dec
inc
sar
lahf
jp
iret
inc
push
mov
popa
inc
push
mov
loop
add
and
sub
sub
mov
add
inc
lock
sbb
adc
icebp
(bad)
pop
mov
pop
jnp
sbb
icebp
mov
adc
je
pop
jnp
mov
cdq
mov
out
jno
retf
jg
mov
mov
pop
jle
xchg
pop
lods
adc
mov
scas
push
fisubr
lods
(bad)
icebp
inc
shl
xchg
xor
idiv
push
xchg
ret
fdiv
mov
adc
imul
es
dec
(bad)
aam
pop
test
retf
shr
mov
and
ss
clc
dec
inc
jne
shr
dec
pop
xor
aaa
sbb
or
jmp
pop
lock
(bad)
cwde
xchg
sahf
ins
adc
scas
dec
lods
je
rcr
scas
xor
aas
pop
outs
ss
or
imul
jp
cmp
and
and
mov
test
adc
std
out
cmps
(bad)
and
xor
sbb
push
push
cwde
lahf
call
icebp
mov
lods
push
jmp
test
stos
cmp
inc
adc
jge
and
cwde
ret
aaa
add
cli
xor
out
retf
stc
mov
mov
test
ret
das
sub
mov
fdivr
ins
out
sbb
sub
jle
jo
jbe
sub
mov
dec
fistp
cwde
dec
stos
imul
mov
fcom
push
sti
cmp
shl
pop
pop
movs
and
scas
das
inc
mov
cdq
add
dec
leave
test
jmp
or
add
loope
movs
mov
popa
test
inc
out
pushf
nop
cli
retf
mov
js
jge
adc
sbb
lock
fdivr
or
lds
lea
mov
dec
out
mov
retf
pop
sahf
je
sub
jle
mov
test
pop
pop
dec
shr
inc
mov
inc
xor
out
add
retf
xchg
dec
aad
mov
ficom
xor
mov
jne
out
out
aaa
xchg
adc
or
gs
pop
inc
mov
ds
pop
xchg
or
lods
cld
mov
sbb
inc
test
sbb
adc
adc
stos
repz
in
jmp
mov
mov
or
cmp
sbb
xchg
jae
jecxz
pusha
xchg
mov
jo
adc
in
mov
adc
inc
dec
dec
and
lods
push
add
xchg
sbb
or
(bad)
sbb
repnz
nop
gs
jo
addr16
aaa
test
push
fdivr
dec
das
into
imul
xor
movs
xor
ins
xor
je
es
gs
cwde
mov
xchg
push
cdq
adc
jne
jns
and
aad
jnp
mov
dec
sub
dec
in
or
or
cmp
push
mov
or
outs
xchg
mov
add
loopne
nop
sbb
jbe
loop
lds
lahf
cmp
(bad)
fst
jle
add
retf
call
fs
loope
jecxz
jmp
push
sbb
test
add
lods
test
jmp
cmps
xor
mov
xor
mul
loop
aad
mov
mov
nop
mov
cmp
mov
movs
jno
cwde
inc
inc
cmp
call
shl
jmp
aaa
push
and
test
retf
rcr
xchg
pop
in
sar
pop
xor
mov
mov
cmp
mov
ins
push
push
ja
sub
xchg
mov
pop
xchg
jns
call
arpl
jne
lock
fisubr
call
sbb
scas
push
xchg
inc
cld
cmp
push
test
in
shl
iret
test
xchg
pop
dec
dec
daa
fnsave
mov
pop
mov
push
push
call
jp
mov
lock
fimul
adc
(bad)
std
jmp
mov
int
rcr
xor
cmp
xor
mov
jmp
lods
popa
ret
sbb
push
ins
push
adc
dec
xor
lods
ins
jle
sub
mov
(bad)
mov
adc
sbb
pop
movs
sub
jno
push
or
sub
and
jmp
pop
push
jl
retf
std
and
in
mov
cmc
push
jo
loopne
les
sub
xor
cmp
repnz
les
or
mov
xor
fisttp
push
fist
adc
push
cdq
pop
add
pop
fdivrp
movs
sbb
xchg
in
jg
jl
das
mov
popa
sub
mov
pop
inc
fmulp
inc
mov
xor
daa
fst
gs
inc
adc
movs
adc
ja
and
in
ret
fld
outs
fbstp
loopne
and
mov
lahf
push
add
std
jle
jo
mov
inc
iret
adc
adc
cmp
fmul
popf
les
sbb
jo
(bad)
cmp
stos
div
bnd
std
push
call
xor
mov
rol
and
mov
loope
sub
movs
cli
pop
cli
mov
push
mov
sub
(bad)
je
ror
aas
outs
es
and
out
hlt
(bad)
xchg
repnz
in
repz
shr
pop
out
cdq
rcr
sahf
test
or
push
inc
and
in
jg
cmp
popa
loope
das
push
pop
in
gs
add
add
rcl
dec
mov
jecxz
push
aad
dec
cmps
js
in
movs
add
fidivr
sub
sub
xor
test
dec
stc
dec
cmps
in
push
jp
pop
dec
adc
out
pop
sbb
xor
push
cdq
ja
ins
cmp
mov
bound
mov
jmp
cwde
pop
dec
dec
and
xor
shl
sar
add
test
inc
test
push
psllw
mov
inc
xlat
pop
stos
sub
add
pop
inc
cld
xchg
mov
push
jnp
xor
ja
lods
or
dec
adc
pop
shr
push
sub
mov
push
adc
sub
sbb
iret
icebp
push
enter
sub
enter
das
frstor
mov
xor
repnz
clc
cmpxchg
add
xchg
nop
js
outs
inc
aaa
in
or
(bad)
mov
dec
loopne
pop
xor
(bad)
call
xchg
push
cmp
add
push
scas
mov
je
bound
or
jmp
add
retf
fidivr
cwde
xlat
test
push
mov
cld
mov
push
push
xchg
cmp
sub
sub
ss
pusha
pop
jge
sub
inc
xor
rol
daa
sbb
rcl
out
loop
inc
sub
(bad)
jl
cmps
ins
pop
cmps
or
mov
mov
test
neg
rcl
(bad)
push
loop
ficom
sub
mov
into
mov
sahf
dec
sbb
jnp
mov
outs
sti
loopne
mov
xor
retf
add
sbb
inc
inc
sbb
pop
sub
adc
inc
cmp
mov
push
outs
stos
push
add
inc
push
aam
aas
and
cmp
sbb
test
add
ss
add
xor
inc
div
fistp
dec
daa
jp
ins
add
mov
loopne
fcomp
push
xchg
loope
pop
and
push
lock
adc
xchg
mov
bound
sub
dec
cmp
xor
scas
aas
sbb
sub
jae
sub
sub
pop
(bad)
mov
jp
jbe
pop
or
mov
ret
ins
fmul
jno
push
mov
mul
xor
xor
cmpxchg
mov
popa
dec
xchg
dec
fst
or
xor
adc
pop
mov
iret
sub
gs
arpl
cmp
out
shr
inc
(bad)
push
or
out
daa
dec
push
daa
loop
cld
daa
icebp
jle
loopne
push
pop
into
push
sbb
das
mov
aam
mov
loopne
gs
test
clc
cmp
hlt
out
movs
xor
push
lea
cmps
sar
or
xchg
jl
scas
leave
xor
push
pop
out
push
jmp
addr16
sub
fadd
cs
and
and
or
jmp
pop
lahf
out
rep
mov
inc
stos
push
addr16
cmp
mov
call
fidivr
pop
retf
pop
mov
sbb
inc
mov
aaa
xor
in
jmp
xchg
cmp
mov
pusha
cmp
outs
xor
lea
shl
push
sbb
push
jmp
xchg
and
in
pusha
movs
dec
and
es
inc
push
xor
xchg
nop
dec
jge
(bad)
into
xchg
lea
pop
imul
(bad)
mov
jmp
xor
jmp
push
add
jns
std
arpl
outs
push
sub
xchg
mov
shl
cmps
sbb
fistp
sbb
jo
(bad)
aaa
fnstenv
imul
cmp
push
push
sar
lahf
pop
and
shl
jo
adc
cdq
push
(bad)
mov
loop
fld
les
jo
jge
pushf
dec
xor
pop
and
stos
cld
push
out
ins
xchg
jb
mov
push
xchg
cmp
inc
fisubr
cmp
push
and
xor
pop
dec
adc
pop
mov
adc
sahf
mov
xor
sbb
imul
loopne
push
mov
pop
adc
mov
mov
ins
mov
arpl
xchg
outs
sti
lahf
cmp
push
dec
jg
push
ret
mov
call
cmp
xor
icebp
sbb
pop
stc
jl
sub
int3
ins
imul
(bad)
loop
int
jl
add
pop
xor
jnp
push
test
pop
cld
xchg
mov
xchg
xchg
sahf
xchg
bswap
loopne
frstor
xchg
inc
daa
add
push
jb
call
push
ficomp
clc
into
mov
fld
xor
or
jb
sbb
pop
jp
test
bnd
or
and
add
xor
mov
xor
pop
retf
xchg
fcmovbe
mov
das
rol
ins
nop
daa
aas
outs
fldpi
movs
mov
rcr
cmp
js
jns
mov
jb
jns
fidiv
sbb
fwait
clc
int
into
adc
lahf
push
out
loopne
fmul
and
sbb
push
repz
repz
lods
mov
ret
(bad)
loop
into
call
inc
or
adc
and
aam
pop
and
in
or
push
(bad)
dec
outs
enter
mov
call
dec
inc
retf
xchg
ins
inc
cmp
enter
push
add
push
cwde
adc
jl
mov
out
test
cmp
mov
addr16
mov
fidiv
out
call
jl
cmps
mov
dec
stc
add
add
fldenv
loopne
and
std
xor
jg
pop
pop
cdq
mov
add
pop
push
stc
jae
inc
(bad)
shr
es
cli
scas
daa
arpl
mov
xor
ret
jne
je
cmp
shl
xor
rol
test
adc
call
xchg
xchg
dec
xlat
adc
ss
lock
loop
xlat
mov
cmps
and
cmp
push
fldenv
jmp
lods
scas
arpl
ret
fist
dec
mov
and
mov
cmc
inc
aaa
mov
mov
cs
xchg
addr16
cmp
or
and
mov
ins
iret
out
mov
out
in
(bad)
ret
iret
ins
mov
mov
pop
cmc
mov
iret
clc
and
add
imul
or
popa
push
mov
outs
jno
pop
and
call
shl
or
rcl
or
shr
mov
jecxz
mov
loop
mov
adc
adc
add
mov
mov
mov
push
cmp
jo
les
scas
into
in
sar
mov
(bad)
mov
inc
push
jmp
loopne
cmps
mov
mov
aaa
fistp
mov
int3
pop
stc
jmp
xchg
pop
pop
xor
dec
retf
std
pop
movs
in
or
mov
sbb
sub
mov
call
fld
addr16
(bad)
jno
in
stos
xchg
pop
test
pop
cmp
cmps
add
pop
mov
ret
add
xor
push
stc
js
fidivr
adc
add
pop
mov
shr
fwait
stc
adc
(bad)
xor
and
cmps
push
cmp
rcr
jp
jb
scas
mov
fs
or
aad
dec
push
out
and
nop
mov
in
(bad)
cmc
jbe
bound
scas
rol
ins
sbb
mov
jge
lea
inc
ja
sbb
add
lock
int
or
dec
test
add
cmp
movs
xlat
mov
in
mov
mov
call
jmp
add
xor
sub
inc
dec
mov
sbb
jae
sbb
mov
push
sub
inc
frstor
jne
xlat
pop
xchg
inc
or
ret
pushf
cwde
jnp
ins
mov
push
mov
jge
and
(bad)
sahf
pop
inc
cwde
xor
pop
push
inc
sbb
test
sar
push
dec
adc
test
loop
(bad)
hlt
ret
aas
push
test
mov
xor
jnp
inc
(bad)
out
sub
mov
and
bound
push
es
xchg
mov
push
cmps
mov
(bad)
int3
stc
fs
hlt
push
loopne
mov
cmps
sahf
add
dec
jp
les
push
jg
movs
mov
dec
in
inc
loop
xor
xlat
inc
cmc
in
mov
das
sub
shr
adc
mov
test
sub
push
sub
and
je
jbe
xchg
xor
push
inc
cmp
jmp
das
add
and
dec
add
shl
in
test
in
ret
push
sub
sbb
mov
mov
(bad)
ss
xchg
fisttp
inc
mov
neg
jo
test
(bad)
inc
push
lds
mov
loop
and
popf
jb
xor
sbb
pop
aaa
clc
bound
pop
fmul
jle
or
jns
(bad)
shl
ret
rcr
fist
cmp
pop
add
xor
or
ins
in
and
pusha
shr
test
lock
dec
push
inc
test
(bad)
into
lock
loopne
pop
jge
mov
mov
sbb
cli
sbb
push
lea
ret
mov
pop
in
rcl
add
lods
test
mov
sbb
call
lods
in
mov
outs
shl
adc
jg
outs
jbe
pushf
mov
(bad)
push
pusha
adc
or
mov
mov
mov
pop
dec
dec
push
or
sahf
pusha
inc
add
out
and
xchg
repz
(bad)
cmp
mov
adc
lock
dec
xchg
ss
jl
out
jno
fwait
adc
bound
sub
test
sahf
call
mov
js
ins
lds
stos
jp
lock
aaa
and
nop
arpl
frstor
adc
sar
(bad)
cmp
fisttp
fst
imul
rcl
loop
aas
pop
xor
mov
xor
div
call
ficom
jno
out
bnd
jl
cdq
mov
lock
fld
mov
or
adc
or
mov
stc
loope
mov
push
mov
jmp
mov
loope
push
call
stos
repnz
(bad)
jb
icebp
mov
les
sub
sbb
mov
aam
stc
test
out
cwde
out
movs
mov
cmc
fisub
dec
pop
psubsw
(bad)
es
imul
and
leave
and
int
movs
lahf
mov
fild
dec
push
cmps
lods
ret
add
ficom
out
inc
fisttp
std
jne
dec
jb
adc
sbb
or
cmp
ficom
jae
les
jo
test
pop
push
xchg
(bad)
sahf
ins
adc
out
sbb
clc
pop
lods
dec
mov
inc
repz
pop
jo
fild
fild
(bad)
in
jno
ja
cmp
(bad)
dec
arpl
mov
rcl
inc
lea
ret
bsf
sub
jne
mov
jecxz
jae
sub
lock
xor
das
cdq
xchg
xor
sub
push
ins
imul
out
xchg
pop
xor
outs
in
inc
mov
push
movs
(bad)
pop
jae
push
out
pop
(bad)
xchg
and
les
xchg
fcomp
test
nop
sub
fisub
pushf
mov
out
mov
sbb
imul
mov
push
daa
mov
inc
jns
xchg
dec
shl
js
mov
ret
dec
pop
sbb
mov
test
scas
test
(bad)
call
pop
fdiv
pusha
mov
scas
test
lea
mov
mov
leave
rcr
adc
xor
and
ret
push
movs
sbb
out
dec
mov
cmp
adc
mov
pop
and
les
aas
pop
adc
lods
imul
xor
aam
xor
mov
mov
sti
(bad)
xchg
cld
imul
bound
stos
cmps
cmp
sub
mov
sbb
fistp
div
cmc
xor
dec
pop
pop
mov
mov
mov
or
adc
xchg
pop
rcl
adc
dec
outs
mov
and
into
dec
ins
call
jne
push
movs
pop
inc
aas
sbb
rol
(bad)
rcr
inc
mov
jle
mov
arpl
mov
push
movs
test
outs
aad
das
std
xor
xchg
ror
push
lods
arpl
push
aaa
xor
sbb
add
pop
pop
push
loope
jne
cli
dec
sub
inc
fs
or
jno
dec
ins
loope
into
bound
std
xchg
jbe
mov
jnp
pop
and
into
push
cli
data16
jb
jns
sub
ins
xchg
movs
sub
cld
or
je
ret
int3
lods
fcom
das
dec
or
les
pop
pop
fnsave
mov
sub
outs
xchg
mov
fsubr
ret
outs
aad
inc
scas
into
imul
dec
add
jbe
outs
xchg
stc
retf
loop
add
scas
jge
mov
push
sbb
inc
adc
in
(bad)
std
inc
pop
and
xor
movs
into
and
cwde
lods
sub
retf
loope
inc
add
cmp
add
pop
add
in
mov
xchg
sbb
loopne
(bad)
cmps
xor
in
mov
push
mov
push
add
push
add
push
xor
inc
xor
pop
sbb
or
adc
dec
inc
or
pop
es
jbe
xchg
repnz
out
int
xchg
pop
dec
inc
add
repz
sbb
les
mov
inc
div
imul
ret
scas
(bad)
retf
push
out
fst
ja
lea
xor
sbb
xchg
jmp
jo
mov
pop
cmps
call
stc
outs
or
loop
outs
cmps
je
sar
adc
out
and
sbb
unpcklps
leave
mov
cmp
add
push
jns
fisttp
inc
icebp
sar
sahf
mov
faddp
stc
(bad)
outs
frstor
mov
mov
shr
dec
shl
xchg
ins
inc
imul
loopne
add
sbb
aam
out
mov
cld
push
pop
leave
dec
into
sahf
fisub
pop
cmps
or
sub
mov
retf
mov
idiv
xchg
jle
inc
cli
bnd
loopne
mov
or
scas
lods
jg
test
shr
push
lahf
lods
push
dec
daa
jb
mov
pusha
adc
push
or
pushf
ret
fcomp
arpl
sub
js
dec
movs
cmp
movs
out
mov
je
xor
outs
test
pop
scas
and
pop
shl
dec
mov
inc
addr16
or
and
ins
mov
mov
jg
sahf
xchg
jne
xchg
sbb
std
dec
icebp
stc
dec
aam
mov
outs
(bad)
cli
push
jge
fwait
or
ror
jle
pop
(bad)
pop
into
ins
loop
pop
push
(bad)
mov
clc
cli
repz
add
test
sti
sbb
icebp
inc
pop
jg
or
test
stos
sbb
int
cmc
outs
mov
jp
icebp
cmps
push
inc
push
push
dec
dec
jecxz
ja
sub
dec
mov
nop
inc
adc
mov
xor
dec
xchg
loop
xchg
scas
std
inc
repz
inc
xchg
add
mov
push
xor
jge
ret
sar
xor
or
cmp
sbb
xchg
sub
in
adc
inc
fst
mov
adc
and
jle
cmp
icebp
mov
es
stc
xor
push
or
icebp
lock
jg
or
or
mov
xor
jle
push
jb
and
or
mov
cmps
add
xchg
jmp
cld
stc
cmps
in
sahf
sbb
retf
sub
sti
inc
(bad)
mov
sub
movs
ror
jbe
inc
sbb
not
xor
cmp
mov
pop
cs
jge
mov
sub
mov
cmp
les
fld
test
push
adc
adc
jg
mov
jbe
cmp
jae
fs
jo
cmp
mov
jl
je
sahf
outs
rol
add
sub
jo
call
push
test
stos
jno
or
enter
adc
mov
and
pop
iret
outs
dec
mov
std
fld
mov
sub
cwde
cmps
addr16
or
std
enter
push
mov
or
mov
lods
mov
or
add
data16
out
push
xchg
out
push
sub
clc
arpl
mov
mov
and
sub
mov
jmp
push
pop
jle
rcr
mov
push
jno
add
fld
sub
outs
dec
out
(bad)
adc
xor
sar
retf
jnp
jmp
cmp
std
dec
call
call
popf
xchg
dec
sbb
je
leave
push
push
mov
jae
jno
test
xchg
sbb
push
inc
add
push
scas
pop
fidiv
lods
adc
fild
push
test
dec
add
pop
mov
outs
repz
jne
outs
push
add
jno
push
sub
cmps
fnstcw
inc
jmp
and
fnstsw
fcmovb
mov
jmp
shl
dec
(bad)
cmp
pop
repz
fucomip
out
gs
mov
adc
pop
or
sub
repz
arpl
cs
sub
ret
or
aam
imul
sbb
fadd
jmp
orps
adc
mov
push
int
ficom
mov
test
scas
rcl
jnp
inc
cmp
movs
call
xchg
fstp
sbb
enter
(bad)
mov
add
cmp
push
mov
and
mov
ds
pop
pop
das
js
lods
rcr
pop
sbb
fwait
(bad)
jb
test
mov
loope
push
jnp
enter
xchg
mov
jge
inc
jae
inc
es
mov
imul
popa
push
cld
gs
xchg
push
clc
inc
stos
(bad)
push
mov
mov
fadd
lods
addr16
xor
(bad)
cld
lods
mov
sti
repnz
and
int3
aaa
mov
xchg
inc
mov
in
inc
push
(bad)
jp
or
loop
aaa
dec
aad
ror
xchg
mov
sbb
popa
and
inc
mov
jge
jp
jg
fmul
pop
push
and
test
scas
inc
test
cwde
add
mov
cmp
rcr
add
imul
add
dec
add
int3
fwait
out
jnp
sub
enter
push
dec
jg
into
(bad)
pop
arpl
cmp
jg
daa
inc
fdiv
cmp
mov
adc
shl
scas
pop
sub
fild
rcl
cli
mov
fimul
out
ds
xlat
sub
retf
xor
push
in
sbb
pop
jg
xlat
bound
dec
inc
dec
xchg
outs
lods
je
or
push
lock
outs
mov
or
jo
jp
xor
cmp
mov
cmp
cmc
(bad)
xchg
sbb
sub
adc
pop
push
mov
cmp
loope
packssdw
cmp
sub
and
and
cmp
jl
outs
scas
push
mov
or
in
dec
out
sub
cmp
hlt
mov
test
out
dec
in
scas
jmp
inc
inc
fwait
jg
mov
shl
mov
cmp
fnstsw
xchg
mov
cmps
add
jo
mov
fsubr
jl
(bad)
jge
mov
mov
mov
cmp
adc
pop
adc
(bad)
mov
sub
iret
inc
jbe
je
movs
ror
mov
je
or
aam
(bad)
push
leave
lods
xor
xchg
lods
std
xchg
mov
leave
cwde
add
xchg
mov
nop
push
out
js
push
mov
ret
sub
cdq
mov
rol
arpl
xor
popf
(bad)
mov
xchg
xchg
xlat
out
sbb
or
dec
jp
paddb
ffree
mov
xor
mov
(bad)
push
push
cmps
xlat
dec
mov
xchg
inc
push
test
adc
les
mov
jae
dec
fsubr
stc
ror
punpcklwd
sub
sbb
cmp
mov
sar
mov
xor
pop
int
add
test
out
cmp
inc
push
push
ss
dec
push
mov
ficom
adc
xor
sbb
pop
stos
lea
and
dec
aad
inc
inc
pusha
fdivr
mov
add
sbb
sub
ret
repz
imul
imul
imul
(bad)
frstor
pushf
and
push
int
cmp
pop
pop
or
in
loopne
mov
add
push
hlt
mov
test
mov
and
mov
dec
and
test
mov
gs
xor
pop
mov
test
mov
mov
ins
movs
push
ret
sub
adc
popf
ds
cmp
dec
test
jbe
mov
mov
sub
pop
sbb
xor
jns
aaa
cmp
test
and
cmp
and
frstor
adc
shr
cmps
popa
push
arpl
bound
cmp
xchg
cmp
fisub
jo
into
cmp
dec
sub
out
mul
add
fimul
sub
mov
(bad)
aas
loop
xor
or
iret
adc
fstp
ja
sub
pop
ret
and
jne
into
push
jae
pop
into
xchg
xchg
add
ret
and
(bad)
nop
pop
adc
jg
mov
xor
adc
or
pop
fmul
sahf
mov
int3
hlt
outs
push
pop
and
call
sub
mov
fidivr
cmp
mov
xchg
push
cmp
jbe
add
rcl
fcomp
jmp
cmp
movs
and
cmps
(bad)
mov
jle
aad
mov
mov
rcr
sub
pop
inc
mov
inc
mov
xor
add
or
xlat
adc
mov
sub
outs
sub
xlat
aad
or
and
inc
sub
test
bound
push
mov
mov
xor
or
inc
fwait
popf
loop
retf
or
push
dec
xor
pop
not
in
add
and
lods
enter
popa
push
mov
cmp
js
(bad)
adc
stc
cli
push
je
inc
lock
cmp
jmp
mov
into
in
sti
mov
out
lahf
loop
ins
lahf
mov
out
mov
fidivr
jle
shr
sub
cmp
je
inc
outs
lea
leave
popaw
push
push
scas
add
(bad)
(bad)
sub
stos
jecxz
xchg
pop
sub
fcmovne
call
push
or
inc
ret
cmp
mov
out
sti
out
(bad)
mov
ds
out
inc
lods
mov
fild
loop
in
inc
cmp
lock
shl
jecxz
shl
or
pusha
mov
fmul
and
call
mov
in
es
cld
je
jmp
push
and
cmp
mov
xor
fstp
js
je
mov
jmp
sbb
cld
leave
fs
push
add
(bad)
xchg
das
or
icebp
out
movs
dec
test
test
mov
test
loop
outs
call
mov
jo
(bad)
adc
xchg
cs
sbb
push
das
and
dec
pop
add
sub
jb
sahf
pop
int3
loop
pop
push
sbb
mov
jmp
add
and
test
xor
loopne
push
add
inc
inc
inc
pusha
aaa
jmp
nop
cli
cmp
mov
push
in
push
je
aam
out
popf
or
push
xchg
outs
mov
pop
leave
mov
call
cmp
pop
test
sub
test
or
stc
retf
mov
mov
test
jp
xchg
repnz
adc
lea
cld
or
push
xor
mov
push
or
inc
(bad)
outs
mov
xchg
add
pop
pop
push
and
icebp
aaa
jne
sbb
dec
in
or
mov
rcr
daa
hlt
movs
push
push
stos
dec
inc
dec
push
push
or
jl
and
jns
lea
mov
inc
push
add
push
mov
sti
adc
push
push
xchg
dec
mov
push
inc
jne
mov
fwait
ins
mov
lahf
test
adc
test
and
or
mov
xlat
mov
bound
loope
jg
adc
push
into
mov
neg
inc
hlt
mov
bound
and
iret
mov
push
cli
push
adc
sbb
push
push
outs
sbb
jp
cmp
adc
sti
icebp
sub
sub
mov
mov
jno
and
movs
jle
daa
in
scas
(bad)
or
cmp
jge
cmp
vprotb
call
mov
jp
outs
sub
mov
fsubr
xor
imul
pop
mov
or
mov
mov
je
fisub
or
je
push
sbb
(bad)
pop
pop
mov
out
ds
imul
stos
out
sub
(bad)
test
stos
dec
test
bound
sub
mov
imul
mov
fucomi
jg
lahf
aam
int3
pop
(bad)
sahf
cmps
pushf
xchg
test
fidivr
jno
fidiv
or
sub
scas
pop
cmp
lea
icebp
mov
push
mov
pop
lods
data16
arpl
or
dec
add
or
(bad)
cmp
lods
movs
imul
xchg
popf
xor
out
aad
push
cmps
ja
fdiv
jmp
mov
dec
jle
cli
dec
mov
test
mov
movs
push
jbe
inc
mov
add
xor
mov
cmp
or
shl
pop
xchg
aam
jge
jg
ret
dec
imul
fild
mov
fcmovnu
sub
mov
and
clc
add
outs
inc
or
lods
imul
out
xchg
daa
pop
add
add
cmp
inc
iret
shr
dec
mov
jns
imul
jae
mov
cld
imul
stc
addr16
mov
jns
sub
mov
mov
cmp
dec
movs
dec
data16
into
dec
mov
mov
mov
hlt
jne
push
pop
cmp
mov
push
or
stos
xor
inc
dec
mov
add
sub
je
fs
jg
retf
pop
cmp
inc
movs
gs
xchg
out
inc
popf
imul
mov
sub
xchg
lahf
push
and
adc
jno
add
in
ds
sti
add
idiv
cmps
aaa
dec
xor
loop
jp
pop
test
mov
xchg
lahf
sahf
stos
stos
fdiv
xchg
fst
push
gs
cmc
xor
xor
adc
and
mov
ss
sub
pop
mov
ss
not
adc
mov
and
lea
mov
ins
popa
nop
adc
mov
fucom
std
movs
mov
add
jae
add
and
(bad)
sbb
call
test
ins
mov
lahf
out
pop
mov
js
ja
mov
(bad)
pushf
cmps
outs
dec
sbb
xlat
adc
lahf
movs
pop
and
add
add
sbb
mov
and
jmp
fwait
add
cmp
dec
nop
sbb
pop
add
rcl
aas
mov
cmp
and
jg
xor
jl
cmp
push
jbe
lds
es
sbb
test
jmp
xchg
xor
mov
sbb
out
dec
sti
jge
push
xor
jecxz
push
cmps
xchg
pusha
sub
test
sub
fwait
data16
les
addr16
int
push
mov
xchg
dec
ficom
pusha
add
mov
mov
inc
mov
push
mov
lods
push
aas
aaa
inc
mov
hlt
push
pop
mov
jge
push
loopne
mov
in
sbb
sahf
jnp
push
fwait
xchg
cwde
push
loope
add
test
pop
mov
or
rol
ds
cmp
repnz
scas
jb
shr
test
mov
fisub
dec
mov
ficom
or
icebp
mov
je
mov
popf
push
movs
mov
push
jmp
icebp
xor
ja
es
out
out
imul
pop
rol
sbb
stos
fist
(bad)
pop
cmp
jmp
ja
ss
jno
sub
outs
popa
and
fs
dec
mov
movs
cmps
pop
sbb
jae
fiadd
and
pop
cmc
pop
and
mov
in
push
push
(bad)
dec
pushf
mov
push
repz
cmp
dec
(bad)
cmp
std
cmc
inc
cmp
movs
push
daa
fcmovb
add
add
xor
inc
push
or
adc
mov
test
cdq
xor
ins
and
or
xchg
inc
int3
add
push
pop
shl
outs
cld
or
dec
pop
js
in
mov
popa
test
sbb
adc
rol
and
je
jno
(bad)
dec
lea
call
in
xchg
loope
aam
aad
or
inc
repz
pop
gs
jno
lods
mov
mov
into
popa
pop
push
loope
adc
push
sub
fisubr
adc
ret
xor
xor
pusha
jnp
data16
mov
out
dec
xor
mov
xor
call
pusha
aad
fsubrp
pushf
jmp
add
sub
xor
xchg
out
movs
xchg
pop
int
push
stc
stc
pushf
aad
push
add
(bad)
aas
enter
inc
adc
xor
fwait
inc
xor
out
cli
sub
or
cmc
ror
dec
pop
in
mov
push
inc
out
mov
fisub
shr
out
pop
inc
jnp
cmp
xlat
(bad)
jo
xor
fwait
add
xor
mov
cmp
sub
and
movs
js
push
fisubr
dec
sti
xchg
das
cmp
xor
sbb
clc
loope
mov
jle
kmovd
(bad)
push
jp
adc
cmp
gs
int
and
push
fwait
fs
pop
adc
fwait
sub
sahf
popf
push
jl
lahf
leave
cmps
push
scas
js
loop
jle
rcl
fisubr
and
imul
cmps
sub
std
(bad)
div
mov
cmp
mov
sbb
push
mov
sub
or
sbb
pop
shl
jnp
in
jmp
cmp
mov
push
pop
xchg
sub
lea
loope
aam
daa
and
pop
retf
push
or
jl
dec
add
add
test
adc
aas
dec
xchg
loop
or
dec
xor
ins
leave
fistp
mov
adc
loop
xor
or
sub
pop
dec
mov
adc
xor
mov
ins
mov
loopne
test
fdiv
or
push
(bad)
xor
nop
and
imul
xchg
(bad)
(bad)
sub
mov
mov
je
mov
jmp
mov
ins
jns
mov
test
or
pop
push
stos
jecxz
or
add
movs
jmp
jecxz
fwait
mov
(bad)
pop
cmp
pushf
xchg
cwde
jmp
lds
out
dec
add
mov
fs
loopne
out
xor
jp
js
xor
outs
xchg
icebp
aad
cdq
retf
rcr
dec
push
add
femms
sbb
sbb
mov
mov
movs
call
add
mov
sub
call
jecxz
imul
xchg
test
push
sar
cdq
js
dec
push
lds
cmp
pop
in
repnz
sahf
inc
cmp
push
les
add
arpl
test
loope
push
sub
in
push
cdq
popf
xchg
out
adc
inc
fsubr
push
iret
mov
and
pop
jbe
call
jns
(bad)
jbe
dec
xor
fs
repnz
push
xchg
out
outs
adc
cdq
push
jns
hlt
test
ror
cmp
dec
add
or
sub
jge
ret
or
xlat
stos
in
jmp
pop
inc
mov
jl
push
test
xchg
xor
jl
mov
dec
mov
repz
inc
fimul
pop
sub
stos
in
or
aam
sar
cli
popf
fcmovnb
pushf
scas
jns
in
pop
retf
pop
pop
inc
imul
icebp
mov
outs
fild
not
or
mov
add
lods
xor
ficomp
jmp
cmp
push
outs
push
push
ins
mov
xchg
lahf
sti
mov
nop
dec
repnz
cmp
cdq
popa
test
fdiv
iret
je
hlt
mov
fsubr
out
icebp
out
ret
add
in
stos
mov
inc
pop
push
shl
xor
and
(bad)
adc
in
xchg
mov
lahf
cmps
sar
or
add
dec
fnsave
fadd
sub
imul
add
push
stos
push
cmp
(bad)
aam
rcl
mov
sub
loop
and
push
test
push
dec
mov
loop
fwait
xchg
mov
(bad)
cmc
inc
mov
jp
mov
stos
cs
pop
aaa
push
(bad)
lock
adc
xchg
add
call
arpl
ins
pusha
call
xchg
in
mov
cmp
sbb
nop
or
sub
cld
xor
(bad)
fmul
int
(bad)
ja
mov
dec
adc
jnp
sbb
pop
push
add
cwde
cs
pop
fdivr
xor
xor
mov
or
sbb
rcr
sub
call
cmp
movs
jmp
test
and
fs
mov
lock
imul
push
fsub
adc
sub
push
or
push
mov
or
cmp
mov
pop
xchg
mov
enter
cmp
dec
sbb
add
into
cmovno
and
mov
inc
test
jb
iret
ins
xabort
fsubrp
mov
daa
lea
push
pop
fcomp
idiv
jno
mov
xor
and
out
mov
fistp
data16
push
movs
repz
mov
and
mov
enter
aas
shr
inc
imul
(bad)
lods
sbb
jo
pop
pop
xchg
or
cmp
lods
cs
xlat
push
jg
lea
xchg
cwde
lods
pop
iret
sti
loop
test
xor
(bad)
loop
sbb
enter
dec
fild
push
inc
(bad)
shl
inc
ficom
mov
les
jnp
jge
jecxz
mov
imul
and
cld
cs
movs
in
push
ret
aad
push
movs
sbb
ret
fist
ins
repz
push
mov
push
xchg
dec
push
outs
clc
adc
jmp
adc
cli
mov
sub
test
test
test
xchg
ret
ret
push
xchg
xchg
stos
jl
rcl
pop
fwait
sub
sbb
jbe
enter
ror
ins
leave
inc
jge
and
ins
rcr
bound
xor
test
jmp
dec
mov
test
push
ret
lods
pop
cmps
nop
xor
retf
fwait
push
popf
mov
push
add
adc
mov
sbb
dec
cs
mov
and
mov
push
cdq
dec
sar
aad
jne
jnp
mov
jbe
add
arpl
retf
adc
adc
adc
das
push
repnz
retf
inc
or
add
stos
lods
add
cmp
test
sahf
ins
test
loop
jne
shl
xor
jmp
dec
mov
xor
push
cli
jmp
inc
js
mov
(bad)
stos
xor
aaa
test
sar
inc
push
mov
icebp
add
ret
sub
pop
ficom
push
sar
dec
popa
and
stos
jo
out
sbb
scas
pop
cmp
sbb
cwde
or
movs
inc
adc
dec
mov
cmp
push
es
pop
(bad)
aam
loop
iret
int3
pop
(bad)
cmp
inc
scas
cmp
dec
and
loope
and
into
pop
loope
cmp
test
sbb
push
mov
jb
jp
lahf
movs
push
enter
mov
ror
mov
ror
jae
cs
std
scas
push
fbstp
mov
ja
or
jne
fst
sbb
or
xchg
in
in
ins
aad
ja
aaa
xchg
je
mov
inc
xchg
jns
add
loope
push
push
push
shl
cmp
imul
push
dec
xor
push
(bad)
pop
pop
arpl
(bad)
stos
dec
mov
scas
push
adc
xor
mov
out
frstor
rol
mov
xor
pop
adc
mov
repnz
aad
jmp
jl
push
jae
cmp
adc
pop
pop
nop
cmps
sbb
cld
xchg
xchg
jae
std
cmc
daa
retf
cli
scas
sub
sbb
outs
aaa
add
rcr
movs
and
sti
stos
cmp
cmp
rcl
lds
int
dec
loope
popf
cmp
and
int3
outs
test
retf
xor
mov
dec
and
mov
pop
sub
mov
and
mov
in
pop
xor
lods
js
call
or
add
lods
pop
out
adc
cmp
ret
pusha
and
inc
sub
dec
sbb
jg
mov
dec
cmps
pop
mov
out
sub
pushf
sahf
dec
adc
xchg
sub
cld
inc
fiadd
dec
call
push
mov
mov
loope
rcl
mov
in
sub
out
scas
push
lods
outs
adc
sub
jo
xchg
retf
cmp
gs
cmps
jno
addr16
movs
sbb
nop
jae
jp
imul
dec
popf
call
dec
daa
inc
mov
enter
jmp
xchg
test
xor
lea
jo
jne
scas
dec
jge
outs
mov
repnz
loopne
fdivr
iret
jmp
out
add
xchg
adc
out
js
add
stos
call
push
xor
retf
ficom
xchg
pop
leave
sar
jmp
xlat
test
fisubr
pop
inc
leave
call
dec
pop
jae
xchg
fild
jmp
adc
jno
mov
inc
pop
push
jno
mov
inc
pop
jo
(bad)
and
cld
jmp
mov
xchg
test
dec
cmp
arpl
jge
mov
lock
std
and
clc
xchg
into
mov
adc
jg
mov
ds
or
loope
mul
pop
mov
ss
shr
dec
cmc
push
add
out
inc
and
xchg
push
shl
or
inc
and
sub
int3
jg
fimul
pop
inc
inc
mov
jo
and
lea
frstpm(287
add
mov
std
adc
pop
das
cmp
imul
call
mov
xchg
(bad)
sbb
xchg
test
shl
es
cmc
and
repnz
sub
mov
jnp
movs
and
sti
pop
stos
mov
adc
outs
jl
out
xor
inc
repnz
pusha
push
je
mov
add
stc
sub
add
mov
nop
lock
in
rol
ins
imul
sbb
mov
jb
mul
dec
cdq
jmp
mov
push
les
pop
xchg
jo
or
(bad)
push
mov
in
lea
fldcw
fwait
stc
ror
sub
(bad)
ret
inc
out
leave
add
push
cmps
icebp
inc
adc
xchg
mov
loope
cli
push
xor
and
sub
sbb
add
fwait
les
test
push
cld
movs
lods
in
inc
imul
xchg
daa
sub
out
cmp
clc
jmp
adc
mov
sub
movs
push
jno
imul
inc
in
cmps
push
aas
pop
cmp
ss
icebp
push
sbb
xor
cmp
dec
je
or
or
aam
mov
repz
fwait
clc
xor
inc
and
fld
ret
jo
je
dec
push
pop
outs
es
popf
ror
lods
cwde
pop
scas
cmp
int
dec
imul
out
in
cmp
sbb
ins
inc
push
sub
int
push
push
in
iret
out
cmps
lods
inc
hlt
(bad)
dec
ror
xor
adc
jp
aas
pop
ror
push
add
sub
lods
or
sbb
inc
cmps
(bad)
jo
pop
dec
(bad)
pop
sbb
jl
(bad)
sbb
movs
outs
dec
shr
fucomi
aam
gs
push
and
hlt
loope
sbb
call
test
icebp
les
add
icebp
or
cs
ds
sbb
inc
test
add
sub
inc
push
sbb
xchg
leave
sbb
jmp
mov
pushf
sti
xchg
cdq
inc
enter
cwde
nop
ins
ror
gs
mov
xor
ror
test
inc
movs
inc
xor
mov
inc
xchg
add
xchg
cmp
mov
push
xor
pop
xor
test
cld
arpl
shr
outs
cdq
aad
icebp
int3
xchg
pop
cwde
rcl
mov
fldpi
sbb
push
int
ror
lahf
sub
cmp
dec
add
jge
add
xchg
jbe
add
hlt
aaa
scas
mov
inc
mov
push
pop
sbb
jmp
scas
add
pop
in
in
out
and
pop
(bad)
fst
ret
call
scas
cmps
(bad)
cmc
pusha
stos
mov
in
loope
mov
lea
sbb
pop
ficomp
pop
cdq
add
out
mov
push
push
ds
push
and
dec
pop
arpl
mov
sub
(bad)
mov
dec
call
popf
adc
mov
add
out
xor
mov
js
loope
adc
inc
dec
mov
sbb
add
pop
sti
or
push
ja
jae
jge
jo
mov
repnz
xlat
jnp
pop
mov
dec
mov
retf
jne
mov
cld
mov
cs
push
sub
xchg
je
or
lea
push
adc
dec
xchg
and
int3
cmp
mov
sbb
and
dec
outs
mov
popf
pop
(bad)
add
cmps
inc
sub
push
pushf
xchg
cmp
jno
retf
jecxz
jmp
lods
adc
pop
lea
mov
out
stc
mov
into
pop
jmp
sub
or
push
xlat
cmps
shr
sub
cmp
stos
rcr
call
sub
jmp
inc
out
lods
fimul
in
and
loopne
imul
cvtps2pi
sbb
sbb
push
mov
jns
popa
mov
scas
xor
out
and
mov
and
gs
shr
push
xchg
and
dec
in
into
daa
jbe
push
or
cwde
inc
mov
fstp
std
aam
movs
cld
aaa
retf
pop
(bad)
enter
test
cmp
stc
mov
jb
sub
cmp
dec
push
fst
sbb
(bad)
jno
out
(bad)
ss
in
xor
fld
shr
pop
cmp
(bad)
int3
add
imul
inc
loop
push
adc
movd
inc
xor
fild
call
cmc
xor
push
sub
mov
in
aad
mov
adc
das
and
xchg
cmp
icebp
add
xor
cmp
inc
fld
and
inc
icebp
xcrypt-ofb
sub
sub
inc
jbe
repz
retf
scas
mov
add
ror
dec
and
pop
dec
sar
test
adc
mov
sahf
mov
or
sub
jl
sti
xor
mov
inc
jmp
es
mov
mov
enter
push
std
mov
mov
xor
(bad)
xchg
rol
ret
test
jno
inc
cmp
xchg
(bad)
cmps
and
cli
femms
inc
popa
cli
aas
sahf
pop
or
out
lock
mov
clc
push
aam
cs
jp
jle
ret
and
xchg
pop
in
inc
inc
jmp
jae
pop
(bad)
adc
fdiv
jnp
dec
xchg
or
xchg
js
fs
dec
stos
lds
es
pop
aad
cmc
dec
xchg
aad
and
(bad)
adc
push
inc
pushf
arpl
pop
jge
retf
mov
push
inc
jbe
aas
ds
jae
stc
daa
push
clc
mov
out
add
push
push
jp
fisub
dec
push
movs
adc
rcr
sbb
or
and
jg
cmp
dec
jecxz
cli
ins
add
jg
dec
(bad)
out
add
add
test
mov
cwde
movs
lods
movs
les
imul
movs
test
jecxz
adc
mov
(bad)
push
pop
aad
mov
das
xor
push
int
pusha
(bad)
fnsave
adc
retf
ja
adc
test
and
shr
sbb
loop
mov
rcl
lds
imul
(bad)
stos
add
jae
mov
int3
ret
sub
mov
adc
out
cli
stos
adc
imul
push
iret
(bad)
jno
xchg
sti
pop
out
repz
jp
sbb
test
pop
out
loop
cmps
cmp
mov
inc
das
mul
xchg
inc
mov
out
add
jge
add
popf
jge
jne
mov
fstp
jmp
inc
jmp
adc
iret
hlt
imul
bound
lea
idiv
xchg
mov
xlat
sti
stc
inc
mov
shl
xchg
(bad)
ins
jns
mov
stc
adc
rol
arpl
lods
inc
je
or
inc
loope
push
cdq
ss
js
push
mov
jns
jg
jecxz
rcr
mov
inc
std
mov
mov
in
xchg
call
(bad)
ret
xchg
imul
std
int3
xlat
sub
mov
loopne
xor
imul
jl
lock
cmp
shr
ins
movs
push
hlt
sub
xchg
hlt
shl
lahf
ffreep
dec
pop
bound
(bad)
cmps
xchg
add
inc
jo
and
jle
loop
mov
and
aad
in
popa
pusha
repz
adc
fwait
sar
push
dec
or
scas
into
jns
jge
popa
loop
mov
sbb
dec
mov
mov
mov
fistp
popf
sub
mov
rol
inc
jmp
hlt
es
jb
dec
ror
movs
cld
mov
nop
jle
push
push
aad
push
ins
ins
les
jmp
xchg
mov
sti
pushf
mov
mov
ins
pop
inc
stos
fidiv
ret
sbb
ret
call
pop
xor
enter
leave
inc
jae
jb
(bad)
arpl
scas
cmps
jbe
mov
mov
dec
dec
hlt
xchg
popf
(bad)
mov
cmp
in
(bad)
loopne
js
and
mov
(bad)
fwait
lock
ret
add
mov
stc
(bad)
adc
adc
pop
(bad)
xchg
(bad)
repz
ret
fnstsw
push
ret
cs
mov
xor
aad
ss
movs
fist
ficom
arpl
and
std
mov
sbb
mov
(bad)
cdq
mov
mov
add
jg
scas
cwde
cmp
inc
mov
in
dec
and
jecxz
or
std
ret
pushf
push
xor
cwde
mov
das
stos
mov
xor
jb
clc
in
daa
mov
inc
sub
pushf
repnz
pop
push
push
fs
arpl
xchg
leave
pop
pop
push
pop
pop
(bad)
(bad)
sbb
add
imul
xor
pushf
and
mov
cli
sub
cdq
ja
or
adc
dec
push
lods
test
fwait
pusha
or
repz
je
leave
mov
push
bound
in
jae
clc
loopne
inc
push
mov
sub
ja
or
xchg
adc
(bad)
clc
popa
sti
ret
cmp
push
sbb
cmp
shl
or
pushaw
pop
mov
sbb
cmp
(bad)
cmps
fst
js
or
xchg
neg
pop
(bad)
sbb
dec
mov
in
cmps
mov
mov
pop
jno
icebp
mov
call
sahf
imul
jg
dec
mov
pop
psraw
mov
xor
xchg
aad
or
enter
iret
dec
std
xchg
jns
add
sub
adc
pop
ds
je
push
mov
pop
ret
pop
jecxz
sahf
std
push
inc
mov
jecxz
fldcw
ret
iret
push
xchg
or
push
sub
push
mov
xchg
jae
inc
sar
sbb
ins
pop
mov
mov
scas
je
jmp
jl
pop
mov
push
push
sub
pop
cli
xchg
(bad)
rcr
stos
aam
push
xor
repnz
sub
sbb
mov
lea
mov
cdq
xchg
shl
fisub
xor
xchg
sbb
xchg
jnp
js
ficom
sbb
cmp
jg
jae
jge
mov
rcr
mov
enter
add
iret
and
pop
(bad)
fs
(bad)
cmp
(bad)
sub
sub
pop
ins
cmp
repz
adc
into
sub
and
or
xchg
mov
sub
or
sbb
cli
mov
sbb
inc
movs
cwde
icebp
add
fdiv
mov
adc
sub
sar
xor
sbb
test
and
cmp
movs
sub
inc
adc
test
(bad)
outs
add
test
pusha
in
inc
cmp
stos
lods
jmp
sub
jne
arpl
push
movs
add
jl
sar
sahf
mov
pop
sub
loop
mov
or
lods
stos
add
cdq
addr16
jbe
or
je
aad
sub
dec
jmp
jns
or
es
nop
xor
lds
(bad)
and
push
ins
imul
xchg
out
dec
inc
push
push
mov
dec
xchg
stos
out
test
ins
neg
rol
shl
mov
mov
cs
inc
mov
push
bts
loop
inc
cli
mov
xchg
fwait
idiv
xchg
or
jne
mov
fwait
in
or
mov
dec
adc
nop
inc
sti
js
fnstcw
and
les
pop
daa
mov
test
mov
int
dec
js
push
inc
jno
push
push
mov
sub
scas
sar
mov
dec
cmps
outs
and
or
or
fcmovne
fwait
inc
pop
lock
push
loopne
das
add
leave
jne
adc
scas
xchg
jmp
jbe
clc
imul
add
in
pop
and
xchg
xchg
sbb
sbb
jne
bound
std
clc
mov
and
xchg
test
sbb
mov
cmp
xchg
cmc
out
add
xor
inc
push
je
cmc
and
push
cmps
adc
and
sbb
jecxz
clc
pusha
xor
inc
xchg
mov
dec
pop
jne
test
inc
cmp
xchg
out
pop
cmps
xchg
call
outs
dec
rol
pop
cli
cmps
repnz
sub
test
sbb
sbb
fiadd
xchg
jg
mov
mov
leave
pop
jno
shr
in
jl
retf
imul
jnp
adc
add
int3
inc
cmp
(bad)
xchg
jmp
stc
xchg
pop
loope
xchg
cdq
aaa
mov
cmp
mov
jle
nop
pop
fild
mov
or
ror
loope
sbb
sbb
sub
idiv
outs
add
loope
enter
mov
lods
add
add
pop
sti
sub
(bad)
(bad)
xor
movs
jns
sub
jl
and
int3
ds
frstor
retf
xchg
nop
mov
imul
dec
xchg
stos
push
mov
aam
push
xchg
mov
(bad)
push
shl
repz
jnp
leave
mov
lahf
mov
fstp
lock
jb
inc
ror
imul
xor
mov
and
cmp
push
dec
pop
fs
pop
pop
pop
xor
shl
dec
pop
repz
nop
out
call
adc
jbe
arpl
es
lea
out
jl
inc
xor
mov
mov
xor
jbe
cmp
ret
mov
int3
and
in
xor
shl
mov
fwait
push
sub
sti
retf
add
add
sbb
inc
adc
pop
jb
retf
mov
jmp
rcl
jecxz
(bad)
cmp
sbb
pop
ss
popf
aas
adc
xchg
jae
out
lock
out
stos
rcl
lods
mov
or
pop
dec
mov
(bad)
movs
ins
leave
fiadd
ins
leave
into
sub
mov
and
cmp
shl
adc
cmc
outs
inc
dec
push
mov
(bad)
retf
lds
daa
inc
inc
mov
int
cmc
sbb
in
ds
sub
cs
fs
fs
dec
inc
div
mov
fisubr
sub
es
adc
dec
pop
popa
mov
mov
jmp
aam
cmps
add
stc
pop
pop
mov
xor
add
xchg
cmp
mov
ja
test
sbb
jge
or
jmp
xlat
push
push
cmp
fsub
lds
pop
sar
mov
jno
cdq
out
(bad)
jmp
mov
pop
(bad)
dec
scas
mov
add
inc
in
rcl
stos
ret
xchg
jecxz
push
ret
js
and
je
and
inc
call
jmp
xchg
pushf
adc
outs
cs
in
test
push
or
fisttp
mov
push
xchg
adc
and
mov
jns
lds
pop
shl
pop
mov
mov
mov
movmskps
fst
sbb
push
or
xor
fcom
jl
cli
(bad)
push
and
movs
xchg
jl
sbb
or
jo
inc
push
addr16
fmul
cmp
dec
push
(bad)
popa
xor
ret
ficomp
jne
jb
aam
inc
mov
sub
inc
shr
dec
(bad)
xor
jbe
pop
adc
in
repnz
ror
and
xchg
das
push
cmp
mov
mov
mov
xchg
(bad)
mov
push
mov
lds
mov
mov
mul
dec
pop
sbb
xor
fisttp
out
rcr
mov
mov
mul
or
ins
fadd
gs
sub
mov
jae
ins
jle
shr
push
jb
lahf
mov
add
call
pop
mov
pop
jb
lods
xor
mov
xchg
mov
xchg
dec
cli
adc
test
jmp
cmp
popf
sub
lods
(bad)
fs
inc
add
cmp
dec
sbb
int
daa
call
cmp
and
lahf
dec
and
or
cmp
dec
adc
push
aad
mov
div
mov
mov
mov
inc
call
cmp
cmp
leave
aam
(bad)
movs
xlat
cdq
push
dec
and
inc
(bad)
jmp
or
mov
cmps
rcl
pushf
cmp
iret
pop
fcmovb
xor
fst
adc
push
aaa
inc
js
pop
cmp
jne
sub
sub
push
cmp
add
mov
cdq
xor
loop
sub
mov
xchg
outs
pop
add
sahf
adc
cmp
and
jge
xchg
pop
fiadd
fadd
cmp
jecxz
test
aad
mov
cdq
bound
xor
jmp
sbb
shl
add
dec
mov
lock
and
jmp
lock
xchg
fdiv
mov
mov
(bad)
mov
add
sub
inc
lods
pusha
not
xor
ret
push
xchg
in
sub
or
dec
dec
scas
lods
or
push
inc
xchg
push
test
arpl
jbe
retf
repnz
mov
imul
cmp
xor
ins
rcr
sub
inc
sbb
mov
push
cli
push
and
popa
dec
imul
call
lods
mov
dec
sub
jp
push
jge
mov
scas
add
pop
aam
and
jmp
jbe
add
addr16
mov
jbe
cmp
xchg
outs
push
in
retf
iret
sbb
pop
lods
mov
sub
push
and
lahf
add
movs
sar
cmp
or
nop
inc
or
sub
sahf
ss
jp
push
stos
imul
jbe
call
(bad)
xchg
hlt
shl
jl
ror
pop
push
arpl
stos
jae
jne
maskmovq
pop
xchg
sbb
xor
(bad)
ds
push
cdq
xor
std
pop
sbb
es
stos
xchg
add
aaa
int
ror
cmp
jns
cmp
sub
adc
sar
jae
icebp
add
jbe
cmc
je
fbld
call
push
push
fimul
mov
(bad)
mov
inc
lods
push
add
add
sbb
xchg
mov
cld
and
bound
sbb
xor
in
js
sbb
lods
(bad)
out
adc
icebp
and
imul
mov
mov
les
ins
xchg
inc
jge
sbb
mov
sti
pop
xor
jnp
xchg
add
dec
cs
sbb
and
movs
cmp
jno
ss
inc
sbb
pushf
cwde
xor
aam
test
jns
adc
mov
xchg
scas
mov
mov
dec
adc
scas
rol
xchg
mov
fwait
xchg
add
pop
test
loopne
dec
into
add
pop
inc
in
scas
and
js
in
call
mov
repnz
push
(bad)
sbb
(bad)
xor
mov
sbb
pop
and
push
pop
xchg
jb
out
bound
mov
mov
dec
dec
imul
stos
sub
xor
add
sbb
lods
cmp
add
inc
popa
enter
aad
js
stos
jno
dec
and
jo
pop
and
xor
shl
sbb
retf
mov
sbb
aam
xlat
leave
loopne
pop
sub
add
inc
lds
test
mov
js
out
cmps
mov
sar
fimul
jg
sub
xor
xor
xchg
fisubr
outs
and
jmp
cmps
out
fst
push
cmp
add
iret
leave
int3
in
test
out
jg
arpl
daa
add
test
sub
jns
adc
(bad)
mov
push
icebp
push
ret
adc
sahf
xchg
push
pop
dec
mov
sbb
xor
sub
retf
cdq
lock
lea
push
daa
inc
popa
into
cli
inc
sub
pop
xchg
ins
jle
mov
scas
xchg
adc
cmp
cmp
push
out
inc
add
fnsave
push
addr16
add
or
add
jl
retf
or
dec
lock
cld
int3
ss
scas
jb
add
push
popf
scas
xor
push
xor
in
in
dec
sar
mov
sar
adc
jo
cdq
push
sub
mov
mov
pop
push
fisubr
sub
mov
mov
neg
add
or
pushf
push
jmp
mov
lock
sbb
shl
scas
out
push
add
stc
popf
sahf
(bad)
(bad)
cmp
enter
cmps
in
fldenv
sub
jl
in
adc
and
clc
push
stos
stos
into
aas
loope
push
lea
pop
popa
movs
push
sti
push
test
scas
sbb
rol
aad
jle
bound
xchg
out
push
jbe
(bad)
ins
xor
sahf
ins
stc
loope
inc
into
ja
test
(bad)
test
xchg
int
outs
xchg
sbb
pop
adc
stos
mov
pop
push
inc
add
sub
mov
(bad)
cmp
scas
outs
lods
cmps
cli
inc
cmp
cld
ins
test
jno
adc
into
and
adc
(bad)
ds
out
aam
in
pop
push
sahf
aaa
jns
mov
fld
(bad)
js
sbb
ret
js
je
pop
ret
xor
fidivr
test
jb
xchg
pop
pushf
enter
sub
pop
popf
add
mov
cmp
xor
sub
pop
cmp
inc
es
out
cdq
jge
ja
pusha
fnsave
test
stos
jl
repnz
das
sbb
xor
push
cmps
mov
jbe
fadd
adc
shl
dec
fsub
jl
and
xor
js
loope
inc
leave
inc
(bad)
mov
cmps
jge
or
and
add
retf
sahf
dec
cmp
std
neg
int3
or
imul
jmp
add
pop
mov
out
imul
ficomp
and
stc
pop
cmps
push
lock
xor
std
ds
mov
or
or
dec
adc
jno
add
mov
aaa
or
cld
push
enter
xor
mov
push
and
push
sbb
adc
test
add
sar
push
mov
mov
and
adc
adc
or
sub
or
or
ins
xor
jp
sbb
jmp
inc
fs
xchg
js
lock
xchg
imul
sub
loope
pop
aas
test
cmps
inc
pop
mov
adc
lds
dec
aad
inc
or
mov
xlat
pusha
adc
lea
and
adc
inc
mov
xchg
test
sti
jbe
add
test
fistp
cmp
pop
imul
mov
inc
jle
xor
aad
dec
mov
retf
mov
jmp
sbb
dec
lahf
mov
enter
mov
push
xor
movs
xchg
mov
mov
pushf
int3
lds
repz
xchg
inc
pushf
repz
inc
(bad)
push
sub
sahf
mov
cmp
and
add
fwait
fs
xchg
push
inc
retf
or
pop
dec
(bad)
fadd
sub
inc
jo
mov
js
xchg
rcl
pop
dec
xor
popa
mov
jne
mov
fstp
cmps
fs
pop
lahf
and
cmps
ja
push
movs
js
aam
iret
test
xor
push
rol
and
mov
icebp
push
dec
xor
pop
or
mov
mov
addr16
sbb
fisub
shl
out
jne
jmp
outs
cmp
and
test
or
jecxz
movs
add
inc
xlat
rol
jle
mov
aas
dec
ja
gs
(bad)
xor
push
cld
mov
mov
dec
(bad)
pop
jmp
std
test
or
pop
popf
popa
fnstcw
in
xor
pop
dec
add
and
cdq
loopne
mov
mov
mov
jmp
inc
movs
test
das
les
add
mov
push
rcr
pop
scas
add
aas
mov
pop
sbb
ficom
push
mov
popf
leave
icebp
into
adc
pop
int3
sub
je
lar
dec
dec
les
push
std
pushf
fidivr
js
xor
mov
pop
popf
or
adc
mov
sbb
mov
sub
push
sub
mov
xor
std
push
jb
xlat
ja
retf
mov
mov
pop
mov
mov
mov
push
enter
mov
out
sub
add
push
push
fisubr
cwde
dec
cli
iret
push
icebp
sub
push
mov
mov
sti
sbb
sbb
mov
cmp
mov
mov
pop
xor
ret
xchg
add
xor
and
sti
adc
jne
inc
xchg
stc
push
sbb
mov
mov
icebp
sbb
and
pop
out
xchg
loope
dec
idiv
pop
aaa
rcr
inc
xor
test
cmp
adc
aaa
ds
cdq
mov
scas
dec
sub
sbb
stos
cmp
xchg
add
pop
jmp
repnz
retf
xor
mov
mov
scas
iret
add
sti
jne
push
and
ret
mov
test
and
dec
scas
jmp
cdq
pop
(bad)
xor
sahf
mov
mov
mov
dec
(bad)
and
xchg
in
ins
cmp
call
mov
mov
pop
jns
mov
cmp
loop
cmp
lock
mov
fstp
rol
cmp
mov
xor
mov
mov
(bad)
out
cmc
inc
in
inc
test
mov
aam
adc
call
mov
mov
jecxz
fisubr
mov
iret
inc
mov
ret
das
fs
inc
in
aaa
push
cmp
and
jmp
cld
aam
pop
inc
or
hlt
or
jle
push
mov
fnclex
je
xor
test
ja
push
imul
ja
mov
jp
jo
cmps
push
cmp
inc
imul
syscall
mov
das
rol
(bad)
push
fadd
ds
clc
loop
arpl
outs
dec
std
repz
pop
stos
aas
push
scas
outs
push
cli
adc
ss
loope
mov
sub
test
cld
loope
lds
xor
fiadd
xchg
adc
popf
inc
push
push
loop
mov
shl
movs
sahf
jle
inc
(bad)
js
test
arpl
cmp
cwde
in
xchg
out
dec
loope
lods
cmps
inc
sub
call
cwde
fdiv
pusha
ficom
cmp
jnp
arpl
shl
aam
nop
fmul
push
das
mul
cmp
xor
rcl
aaa
or
mov
inc
push
mov
sar
xchg
mov
jno
out
jb
int3
xchg
fwait
test
shl
aam
call
and
mov
test
adc
sahf
pop
mov
les
mov
xor
aas
popf
in
or
test
stos
leave
sbb
mov
test
mov
jl
shr
inc
cmp
adc
fsub
inc
das
mov
ins
sahf
xor
add
sbb
jns
(bad)
aam
sbb
lods
sti
cmp
jp
inc
or
ins
test
out
jno
push
and
leave
imul
push
es
push
shr
stos
mov
sbb
add
test
popa
mov
lahf
movs
out
sub
repnz
sub
sbb
mov
push
sub
and
pop
cmps
or
data16
pop
aam
sub
jmp
enter
in
arpl
or
push
push
or
xchg
xchg
rol
out
xor
pop
imul
test
shl
xchg
addr16
ret
xor
call
mov
push
jmp
in
dec
fwait
(bad)
idiv
sahf
inc
push
std
les
int
jl
xor
aas
sti
sahf
sar
jle
lods
fbstp
popf
mov
mov
arpl
sbb
je
int
popf
rcr
adc
jmp
hlt
push
xchg
mov
ins
jne
in
hlt
(bad)
mov
shr
loop
pop
cli
retf
fld
mov
out
(bad)
sub
jmp
xor
and
and
inc
xchg
test
and
xchg
push
mov
mov
outs
cmp
push
fcom
push
add
cli
pop
stos
pop
add
and
dec
adc
adc
xchg
sti
aad
in
stos
mov
mov
jno
test
xor
inc
mov
and
(bad)
(bad)
retf
call
iret
(bad)
sub
sbb
(bad)
pusha
or
stc
enter
or
inc
test
pushf
sti
sbb
sbb
mov
jns
retf
push
xchg
hlt
mov
pop
lods
movs
loop
adc
(bad)
xchg
or
aam
ins
bound
dec
arpl
cmps
or
ds
and
pop
addr16
mov
dec
cmp
data16
lods
pop
mov
ret
pop
ret
sbb
jp
outs
add
xchg
adc
rcl
jb
loopne
and
jae
mov
retf
out
outs
push
jae
sbb
mov
adc
sti
add
icebp
dec
sbb
xor
add
cmp
pushf
movs
lea
aad
adc
xor
jae
jnp
push
test
pop
mov
ins
adc
ficomp
cmps
mov
xchg
mov
adc
pop
cmp
fs
sbb
sub
dec
mov
mov
hlt
sbb
inc
xor
lods
jbe
adc
mov
xor
add
cmc
push
and
push
cmp
inc
shl
aad
pop
ins
inc
repz
(bad)
push
jl
xor
cbw
inc
cmp
rcr
jle
int3
push
sbb
or
movs
mov
leave
jg
outs
je
dec
shl
aad
push
push
pop
pop
inc
inc
add
pushf
mov
xor
push
xchg
retf
in
fisub
push
sbb
lods
pushf
loope
scas
arpl
aas
mov
imul
in
nop
cmp
js
xchg
dec
add
les
gs
js
and
mov
xchg
pop
mov
shr
les
in
jbe
gs
not
inc
sub
movs
mov
lea
and
iret
sbb
cmp
lods
inc
or
push
outs
loopne
cdq
arpl
ds
add
xchg
push
sub
addr16
int3
mov
jge
or
jg
dec
jne
test
sahf
push
ds
mov
pop
jno
and
cmp
lahf
(bad)
inc
mov
or
xchg
dec
iret
leave
sbb
hlt
cld
(bad)
adc
popa
sbb
mov
dec
and
add
sbb
push
(bad)
repz
dec
push
out
or
or
lea
mov
jb
or
(bad)
mov
jne
popa
inc
dec
imul
cs
ret
mov
addr16
mov
cmp
(bad)
(bad)
shl
push
scas
daa
mov
push
outs
and
rol
cmp
int3
int
retf
add
lea
mov
mov
mov
pop
add
retf
push
sub
mov
icebp
(bad)
je
cmp
ror
mov
xor
and
cli
call
stos
xchg
mov
aad
xor
and
in
sar
outs
popf
out
sbb
hlt
jo
das
stos
mov
push
sub
scas
cli
jb
and
add
jle
mov
(bad)
fld
xchg
imul
cmc
adc
mov
mov
pop
sub
mov
aas
push
stos
lea
and
push
adc
sbb
neg
nop
das
in
sti
stc
frstor
xor
loopne
mov
(bad)
repnz
lds
aas
lods
sahf
mov
pop
jle
cld
es
out
retf
jl
mov
cmps
add
das
call
push
cwde
adc
lock
push
repz
push
sub
fdivr
lods
mov
(bad)
scas
adc
xor
div
inc
jae
and
or
inc
mov
pop
(bad)
pop
jne
stos
cmc
ins
push
fisub
sti
cmp
cmp
int3
fadd
(bad)
and
push
pop
fisubr
daa
mov
out
add
or
inc
xor
lods
ins
inc
call
data16
adc
cdq
(bad)
fistp
ins
adc
(bad)
call
xchg
jno
in
inc
or
jle
enter
mov
mov
mov
lds
sahf
pushf
xchg
hlt
jl
or
push
jbe
xchg
adc
es
and
cmp
call
cs
or
pop
add
sub
cmp
pop
sbb
pop
dec
pop
jae
mov
mov
pop
in
adc
cmp
fcom
mov
cld
mov
cwde
lods
sub
inc
out
les
xor
pop
data16
xor
xchg
gs
mov
call
inc
add
inc
xchg
aaa
mov
sahf
jmp
dec
add
sahf
bound
xchg
mov
cmp
cmc
hlt
aaa
fs
push
nop
or
mov
mov
lahf
cdq
mov
sub
movs
icebp
hlt
repnz
jmp
xchg
ror
in
je
and
out
cwde
adc
push
mov
aam
mov
outs
lods
cdq
push
scas
sbb
loopne
out
data16
push
and
and
test
and
mov
in
test
jno
stos
pop
mov
xor
inc
mov
das
gs
call
adc
daa
or
repz
fucomp
retf
pop
sahf
(bad)
sbb
xor
(bad)
push
push
ss
xor
fcom
and
dec
add
addr16
ficom
test
adc
adc
int
jbe
(bad)
sub
mov
dec
dec
and
shr
fistp
jl
xor
push
pop
ds
cmps
fimul
xchg
jl
dec
pushf
sbb
jp
call
inc
retf
shl
adc
aam
mov
mov
movs
push
jne
mov
movs
xor
and
xor
adc
ror
mov
in
aam
mov
mov
pushf
mov
or
aam
add
sar
adc
das
mov
mov
shl
sub
xor
add
daa
mov
daa
mov
pop
add
stc
pop
js
cdq
xor
push
mov
cmps
inc
push
push
or
hlt
movs
or
inc
in
sar
pop
call
movs
fxch
hlt
fisttp
sbb
out
(bad)
cmc
add
sti
push
pusha
add
mov
ss
dec
mov
cs
and
(bad)
out
dec
call
aad
in
fsub
cdq
cmp
pop
sub
sahf
pushf
sub
dec
std
std
or
outs
fs
rcr
ret
and
sub
dec
ds
test
sub
scas
call
ds
mov
adc
push
repnz
movs
mov
or
mov
pop
stos
xor
je
sar
mov
mov
lods
mov
and
push
sub
aas
retf
jmp
clc
sub
mov
sbb
or
jns
jmp
ror
repnz
inc
data16
out
jne
lahf
xor
ss
fmul
xchg
mov
mov
mov
push
loope
sbb
or
nop
fwait
adc
mov
inc
call
cmp
mov
push
mov
icebp
mov
jle
fcomp
data16
shl
idiv
mov
sti
pop
pop
lods
fcmovnu
xchg
mov
push
je
dec
pop
inc
mov
mov
add
and
inc
xchg
push
jns
and
je
jmp
test
ds
loop
sub
xchg
pop
inc
(bad)
xor
ret
jnp
push
cld
inc
mov
addr16
fadd
(bad)
retf
adc
and
mov
mov
or
xor
pushf
and
pop
cmp
xlat
pop
fistp
movs
stos
les
out
xchg
call
stos
rcl
std
icebp
popf
movs
add
mov
cmp
iret
mov
lea
add
loope
lahf
add
ds
mov
adc
(bad)
dec
xlat
dec
retf
dec
daa
loop
icebp
jecxz
dec
jle
(bad)
adc
imul
mov
pop
imul
or
mov
nop
sbb
lods
add
(bad)
adc
xchg
xor
out
mov
lahf
cmove
inc
(bad)
and
enter
jg
push
push
jecxz
mov
push
enter
pop
test
adc
aad
(bad)
pop
clc
pushf
movs
xchg
mov
or
push
dec
push
hlt
push
fwait
push
ds
das
test
adc
fs
add
retf
nop
adc
sbb
out
adc
loope
call
repnz
sahf
into
out
xor
or
pushf
nop
and
lods
xor
or
cwde
daa
inc
jbe
mov
test
jnp
xchg
inc
jnp
out
xor
retf
sbb
jne
push
push
pop
scas
aaa
xor
shl
mov
add
jecxz
(bad)
adc
pop
xchg
pop
pop
xchg
pop
pop
retf
jl
das
lahf
sbb
adc
(bad)
movs
int
fsubr
xchg
sub
cmc
out
repz
sbb
hlt
pop
stos
pop
adc
mov
retf
lea
dec
xor
jle
aam
xor
mov
aam
ss
add
jecxz
sahf
sbb
lahf
stos
nop
arpl
pop
adc
retf
int
add
cmp
mov
adc
adc
jb
fdivrp
es
jne
xor
leave
fnstenv
fwait
dec
call
pop
nop
int
cmp
adc
or
sbb
cmp
(bad)
pop
arpl
mov
xchg
leave
add
xchg
arpl
pop
fs
jmp
xor
adc
test
mov
movs
add
mov
xchg
jp
mov
cdq
or
mov
movs
out
xor
mov
data16
cwde
jp
or
je
ret
adc
mov
(bad)
ja
jns
sub
cld
add
add
sbb
and
xor
or
mov
jns
call
ins
pop
lods
test
push
push
out
xchg
mov
jle
dec
gs
sbb
aam
shl
into
push
es
adc
pusha
pop
or
sub
xor
fisubr
jnp
loop
(bad)
and
and
out
test
pushf
adc
and
scas
mov
shr
icebp
lahf
xchg
cmp
inc
pop
add
test
iret
imul
cdq
in
xchg
xor
pop
mov
push
and
pop
jno
mov
aaa
and
popa
loop
push
das
sbb
xchg
aas
in
mov
stos
div
jns
mov
out
repnz
je
sbb
add
ins
adc
call
sub
mov
mov
int
jae
int
pop
cli
fild
mov
ret
fisttp
or
mov
(bad)
cmps
jl
inc
add
mov
mov
jl
cmp
imul
adc
jmp
loopne
inc
xchg
out
cli
mov
cld
imul
in
retf
stos
ss
iret
loopne
mov
outs
mov
shl
inc
adc
aas
inc
daa
pop
repnz
pop
sbb
out
out
or
test
in
mov
mov
sbb
pop
not
icebp
repnz
inc
div
icebp
call
adc
repz
ret
sbb
jne
xor
pushf
adc
ins
test
pop
jo
mov
mov
nop
ja
push
inc
pop
mov
je
aas
cmc
pop
test
out
sub
dec
fs
movs
push
jmp
adc
jl
loop
out
(bad)
sub
or
push
push
hlt
(bad)
or
add
add
in
dec
sar
sahf
push
push
mov
pop
clc
loop
xlat
push
add
aaa
in
pop
lods
and
mov
stc
sbb
cmps
xrstors
(bad)
loope
addr16
mov
sbb
jle
ja
mov
rol
and
sahf
fild
outs
pushf
out
and
test
loop
xchg
jmp
mov
cmps
jbe
sub
jge
cdq
cmp
jbe
add
add
mov
jp
retf
push
movs
in
jnp
push
int3
cmp
out
iret
or
call
stc
dec
mov
xchg
ins
sti
inc
jns
or
jmp
push
stos
fdivr
and
cmp
nop
cmp
sbb
mov
outs
add
push
push
inc
mov
out
cld
pop
(bad)
inc
popf
adc
out
lds
ror
inc
fucomp
jmp
adc
mov
scas
mov
sub
adc
inc
sbb
inc
ins
call
mov
jnp
xchg
fwait
imul
das
std
popf
mov
xor
jg
inc
sbb
xchg
stos
and
popf
cmp
and
out
into
test
add
jge
xor
out
sub
add
push
adc
jnp
ss
mov
fild
pop
in
mov
cs
not
int3
inc
(bad)
jecxz
ficomp
(bad)
mov
push
loope
sbb
xchg
nop
ss
popa
pop
pop
sbb
iret
sub
repnz
out
in
aad
div
popf
ja
mul
inc
xor
cmp
xchg
(bad)
fs
sub
gs
test
inc
inc
(bad)
sub
xchg
cmc
jae
mov
xchg
(bad)
or
mov
hlt
out
ja
cmc
mov
arpl
jmp
mov
mov
icebp
imul
out
neg
mov
loope
int
addr16
mov
dec
add
mov
in
xlat
sub
dec
jo
aas
xchg
jp
jbe
cmp
or
sub
mov
cmp
sbb
jnp
pop
push
ja
pop
aam
add
data16
adc
jg
push
hlt
rcl
loopne
and
mov
sti
xchg
mov
xchg
xchg
loop
jo
inc
lea
cmps
pop
pop
sbb
xor
xlat
mov
cmp
mov
jo
rcr
or
xchg
xchg
sbb
mov
lods
jns
pop
jae
in
xchg
shl
pop
add
mov
xor
sub
(bad)
pop
push
arpl
and
xchg
mov
xchg
push
test
inc
in
in
outs
je
sar
cdq
push
cmps
(bad)
cmp
add
sub
push
scas
stos
pop
lds
clc
retf
jp
sub
loope
lds
xlat
sub
jmp
stos
add
rcl
adc
dec
retf
dec
(bad)
jo
test
loop
leave
out
or
or
or
call
mov
popaw
icebp
fs
arpl
cmp
in
pop
adc
jb
xor
inc
jns
jecxz
aad
fadd
mov
popf
mov
outs
inc
aas
mov
in
sbb
into
jbe
xlat
cmp
into
push
xchg
cli
stc
jmp
push
es
sbb
fwait
adc
and
test
gs
xlat
ror
stc
mov
cmp
jp
push
test
cmp
mov
fldenv
jb
or
ret
push
xchg
(bad)
inc
push
std
(bad)
cdq
out
push
fsub
inc
ins
ds
sub
jo
lods
or
dec
dec
dec
jle
sub
aam
jbe
cmp
jmp
and
movs
std
in
lods
hlt
cmc
mov
mov
les
cmp
fiadd
or
idiv
add
int3
in
push
(bad)
or
(bad)
jno
retf
cmc
mov
prefetchw
mov
lock
dec
mov
cli
mov
icebp
retf
sar
mov
aaa
leave
loope
inc
and
cmp
dec
in
ror
fsubr
(bad)
lods
xchg
xchg
xlat
pusha
and
push
test
or
dec
dec
and
ror
adc
aas
inc
(bad)
xchg
mov
jmp
push
sub
fbld
mov
push
inc
adc
fs
mov
ss
mov
xchg
ror
sub
pushf
push
or
loop
xchg
stos
mov
or
mov
pop
adc
ja
(bad)
loope
movs
out
mov
ss
fwait
into
push
ror
sub
nop
dec
ret
sub
dec
cli
add
mov
pop
neg
mov
mov
xor
adc
fucomp
ds
or
jnp
push
fbstp
inc
mov
fcomp
scas
push
cmp
repz
punpckhdq
dec
mov
xchg
scas
and
xchg
add
pop
lahf
pop
repz
inc
sahf
mov
jmp
retf
ins
scas
jl
pop
and
call
xchg
sub
in
sub
in
scas
push
out
and
mov
out
pop
or
pop
xor
aam
repnz
xor
adc
xor
lds
int3
adc
or
jnp
in
(bad)
es
imul
arpl
into
push
mov
adc
arpl
dec
xchg
mov
add
lock
push
sub
jo
and
push
lock
fisttp
sub
pusha
aas
jmp
pop
imul
(bad)
push
cmp
cs
push
or
inc
ret
xor
loop
(bad)
pusha
dec
dec
fcomp
jecxz
mov
sub
sar
dec
pop
ret
mov
sbb
push
retf
xchg
push
xchg
arpl
pop
push
dec
push
push
and
xlat
cwde
xchg
mov
cmp
call
mov
mov
push
pop
out
mov
add
popf
in
or
xchg
movs
jl
loopne
ja
add
mov
mov
mov
sbb
jp
mov
dec
cld
mov
int3
jns
cmp
ret
mov
sub
pop
(bad)
sbb
loope
pop
xchg
push
in
repz
mov
cli
aam
out
movs
inc
test
add
dec
int3
cli
jbe
adc
out
das
lods
inc
sub
cmps
push
clc
adc
outs
ss
jp
jmp
fisub
ror
fnstenv
inc
fmul
rcl
jl
sti
int3
dec
cmp
xchg
nop
cdq
jne
or
xchg
or
(bad)
push
addr16
mov
mov
jns
add
pop
dec
xor
mov
popf
push
xor
loop
fdiv
xchg
inc
lahf
add
not
mov
mov
mov
movs
les
mov
(bad)
sbb
out
inc
into
mov
mov
(bad)
icebp
jge
mov
pop
mov
int
and
lahf
rol
cdq
mov
shr
and
dec
adc
xor
or
adc
gs
loop
bound
add
cwde
sbb
or
in
adc
xchg
movs
hlt
jae
ss
ss
jmp
cmps
pushf
ret
mov
push
and
dec
addr16
inc
add
dec
sub
pop
mov
add
jmp
xor
lea
pop
les
xchg
sbb
jne
jecxz
sbb
inc
cmp
arpl
or
in
jmp
push
mov
cmp
xor
mov
cmp
ret
outs
outs
cmp
dec
icebp
fiadd
add
ds
pusha
out
add
popa
lods
mov
cmp
sbb
je
jp
aaa
jmp
mov
mov
loope
xor
cmc
dec
popa
push
mov
sub
fld
lock
popa
and
jnp
mov
sbb
jecxz
and
lahf
movs
ret
stos
out
stos
jnp
mov
and
shr
dec
aad
shl
in
jmp
pop
inc
mov
jecxz
mov
sub
fld
xchg
jg
mov
add
cdq
jae
clc
xchg
and
sahf
mov
cli
cmp
es
bound
inc
jns
push
push
add
fiadd
nop
mov
mov
mov
mov
or
ja
test
push
xchg
lods
or
cmps
pop
cld
mov
jnp
inc
out
pop
clc
mov
add
push
mov
sub
adc
or
cmp
inc
pushf
add
jmp
ss
stos
adc
mov
into
jp
popf
fadd
cmp
loopne
popa
aaa
dec
pop
push
call
out
adc
sub
sbb
sar
movs
lods
cmp
xor
push
ret
(bad)
cld
mov
ss
into
stos
sbb
jmp
jp
push
add
and
xchg
sub
push
mov
jmp
dec
pushf
sub
mov
jae
stos
mov
dec
es
dec
aad
imul
mov
and
dec
jae
xchg
push
xchg
lahf
retf
in
add
(bad)
scas
jmp
sar
out
test
aad
gs
pop
test
pusha
cmp
mov
xchg
test
cmp
sbb
lods
cli
sbb
mov
sbb
rcr
(bad)
mov
sbb
scas
xor
inc
mov
cmp
pop
mov
test
jmp
addr16
sar
sub
int3
and
imul
jl
xor
loopne
push
or
subps
jmp
push
sbb
and
pop
retf
cmp
sbb
ret
dec
inc
adc
xor
sbb
mov
dec
mov
addr16
sbb
outs
leave
mov
mov
pop
adc
je
jbe
push
xchg
fld
movs
je
add
jmp
cmps
pop
fwait
mov
stc
mov
inc
dec
add
icebp
addr16
jmp
jae
in
mov
inc
lods
loopne
in
and
scas
loop
and
mov
add
inc
icebp
dec
out
sub
jno
cmp
cli
cmps
repz
and
xchg
out
inc
sbb
mov
or
mov
jbe
in
adc
adc
mov
dec
mov
pop
xor
inc
cmp
mov
icebp
pushf
adc
or
loopne
jmp
sub
or
pushf
int3
push
imul
jecxz
adc
popa
cmp
scas
adc
mov
outs
retf
loopne
push
nop
popf
sbb
push
inc
iret
lods
cwde
leave
scas
mov
add
das
(bad)
push
mov
cmp
mov
mov
push
cmps
dec
call
push
sti
or
mov
test
ror
mov
fist
mov
imul
aas
xor
sub
pop
test
mov
xchg
adc
dec
ins
scas
(bad)
mov
mov
ins
test
sar
retf
push
cmp
loopne
pop
out
sub
cmp
gs
mov
arpl
xchg
iret
xlat
jp
arpl
mov
lock
fwait
mov
ss
cmp
jne
cld
mov
movs
(bad)
pop
es
mov
dec
jno
leave
dec
adc
shr
in
sbb
push
hlt
and
and
jno
push
cmps
loopne
pusha
xor
pop
imul
inc
ja
jb
popa
sub
loope
lea
loopne
popa
dec
add
push
mov
add
or
cmc
adc
popf
jmp
or
ficomp
xor
push
jbe
sub
jnp
cmp
dec
pop
pop
mov
xlat
in
rcl
sbb
int3
mov
je
xchg
outs
push
cmc
sar
sbb
pushf
jmp
jns
fimul
push
ja
mov
adc
cs
push
xor
out
xor
pop
push
xor
int3
js
and
push
add
je
dec
cli
shl
mov
cmp
lods
adc
aad
jp
jg
ret
inc
jns
std
in
test
sbb
dec
sbb
jecxz
cmc
mov
jb
jae
clc
cdq
fild
dec
(bad)
shl
xchg
adc
loope
mov
ins
lods
push
cmp
ins
out
or
mov
jae
dec
popa
(bad)
les
ret
popa
mov
mov
imul
sub
xchg
into
dec
jecxz
int
adc
sub
retf
push
cld
and
sub
adc
add
inc
scas
popa
test
lock
and
or
sbb
sahf
fadd
cmp
repnz
fwait
int
std
dec
cwde
mov
fwait
das
imul
ss
lods
mov
mov
pop
popa
jmp
jae
leave
ja
int
(bad)
or
hlt
or
push
mov
ja
imul
push
aaa
cmp
mov
call
cs
shl
rcr
push
ret
mov
test
dec
cmp
or
mov
ret
in
mov
in
js
push
jbe
add
nop
xchg
ins
shr
dec
mov
and
ds
out
rcl
adc
mov
lock
push
repz
shl
xchg
in
sub
arpl
sar
mov
nop
dec
push
cmp
pop
cmp
call
cmp
shl
xchg
sbb
or
xchg
jb
push
xor
lock
call
fst
push
xchg
scas
cmp
lock
mov
push
popf
int
ins
push
dec
pop
cdq
add
and
mov
hlt
xor
jg
lds
jns
jmp
adc
sbb
or
mov
je
sub
(bad)
sub
mov
out
adc
daa
movs
mov
out
call
js
sbb
call
and
cmp
adc
push
mov
jg
add
or
dec
mov
jge
inc
jo
out
into
jge
cmc
scas
rcr
mov
cmps
mov
(bad)
neg
cmps
dec
outs
into
jns
mov
bound
movs
or
mov
xor
jmp
jbe
jbe
rcr
pop
enter
test
aad
cmp
xor
mov
sbb
mov
jp
and
test
inc
lahf
fimul
out
sub
adc
sbb
leave
sbb
and
push
(bad)
mov
pop
pop
icebp
and
push
cmp
shr
pop
or
shl
movs
mov
repz
imul
mov
mov
ret
add
test
mov
xor
loop
shr
cwde
mov
pop
or
das
int3
sub
and
sub
mov
sbb
cdq
sub
dec
pop
inc
sbb
sub
xor
inc
push
into
mov
pop
aaa
shl
and
add
jo
idiv
test
jnp
add
fist
xlat
xchg
pushf
loop
sub
aad
in
fsubr
lea
call
test
pop
and
stos
out
xchg
test
or
sti
lods
gs
test
repz
inc
fcom
stc
enter
inc
fld
xchg
shl
sbb
jle
in
adc
mov
jb
jno
cmp
neg
ds
or
out
lods
test
adc
mov
mov
pushf
(bad)
mov
cmc
lods
cld
stc
pop
pop
cmp
xor
push
add
cs
mov
movs
ja
sbb
arpl
test
arpl
sbb
and
shl
pop
sbb
dec
(bad)
mov
jp
icebp
jmp
xor
cmp
enter
jnp
inc
xlat
stos
jmp
xchg
out
aaa
mov
hlt
inc
sbb
pop
inc
and
aam
outs
dec
and
aaa
jge
in
gs
test
pop
sti
int3
lahf
ret
inc
fcom
and
aas
mov
sti
repnz
out
int
xor
mov
repnz
or
pop
sub
stos
rcpps
ret
jmp
aam
js
mov
int
xchg
mov
call
in
mov
pop
add
sub
and
cmp
call
jmp
loope
sbb
adc
js
xadd
ins
mov
or
jnp
out
xor
pop
inc
in
add
jb
gs
xchg
jo
std
movs
jmp
imul
jbe
icebp
mov
imul
shl
sub
lea
jns
dec
ins
mov
cdq
enter
cmps
mov
mov
dec
jns
das
sbb
(bad)
and
jmp
(bad)
jmp
jmp
mov
std
sbb
push
push
adc
daa
aad
push
dec
retf
arpl
dec
leave
mov
fcomp
mov
aad
repz
and
movs
call
mov
push
cwde
mov
dec
mov
xchg
mov
fistp
sub
dec
iret
out
xor
jmp
adc
jnp
adc
sbb
outs
in
add
xchg
icebp
jecxz
push
fcmove
imul
adc
fidiv
int
and
jg
xchg
test
mov
imul
inc
retf
inc
addr16
es
mov
les
ret
movs
inc
and
jbe
leave
xchg
mov
push
scas
fiadd
das
sub
int
out
data16
out
mov
add
sbb
cli
push
gs
jnp
xor
cmp
cmp
or
dec
loopne
mov
(bad)
cmps
lods
or
mov
sbb
mov
out
jbe
aas
imul
fbstp
xchg
lds
mov
or
in
popa
mov
jecxz
mov
mov
lock
dec
add
jle
inc
popf
in
bound
pop
addr16
jecxz
or
shl
xor
sub
rcl
add
and
inc
jb
push
dec
inc
enter
sbb
or
mov
mov
out
and
stos
cmp
cmps
fwait
mov
ins
dec
bnd
cmps
jns
xor
call
adc
xchg
daa
mov
ds
aaa
and
lock
movs
sar
(bad)
test
jp
mov
out
mov
outs
cmps
pop
xchg
mov
and
clc
pop
inc
add
std
cmp
imul
inc
dec
or
xor
adc
imul
jg
imul
ja
cmps
in
jp
(bad)
sub
in
clc
icebp
aam
into
ret
hlt
bound
leave
or
call
sbb
fs
ret
sar
mov
arpl
adc
xchg
mov
fucomi
jp
jp
dec
(bad)
ret
jp
jne
mov
repz
jo
movs
test
(bad)
adc
add
shl
sub
stos
ins
ret
dec
mov
jbe
pop
mov
sbb
call
jae
and
call
and
pop
enter
jbe
(bad)
mov
jg
dec
pop
mov
dec
jne
mov
jo
xor
dec
pop
xor
fisttp
xor
popa
add
xor
int3
aas
loop
mov
test
inc
inc
cmp
dec
inc
sbb
(bad)
cld
pop
inc
xor
mov
pop
mov
mov
lods
pop
fnsave
clc
add
sbb
jmp
cmp
lahf
mov
shr
add
in
pop
int3
or
fcomp
xor
add
and
test
ins
or
retf
adc
xor
mov
out
scas
mov
mov
aaa
or
popa
hlt
xchg
xor
rcr
rcl
xor
adc
jle
js
mov
push
fdiv
and
and
cli
lods
push
inc
sar
xchg
add
adc
rcr
mov
push
in
aas
mov
repnz
mov
jae
je
jb
pop
jb
scas
sar
ret
inc
test
retf
adc
cmc
in
mov
mov
jb
dec
outs
inc
cmp
retf
xchg
in
popa
xor
mov
ins
mov
pop
dec
mov
mov
mov
jecxz
mov
scas
aad
enter
scas
ror
addr16
or
test
cmps
xchg
xor
jo
in
scas
sub
pop
and
lea
mov
mov
rcl
dec
cmp
aad
xchg
out
and
inc
fwait
mov
dec
cmp
cdq
je
jl
jmp
(bad)
loop
sbb
out
mov
push
jl
bound
std
(bad)
(bad)
push
(bad)
xchg
hlt
sub
xchg
fnstsw
push
sti
out
pop
add
jo
mov
nop
push
pop
adc
daa
mov
call
or
mov
xlat
das
sub
mov
xor
scas
not
adc
out
cmp
xlat
or
pop
cmp
mov
dec
xor
xor
pop
and
cmp
rcl
mov
pusha
mov
add
adc
dec
jae
pop
mov
jns
js
jno
mov
and
xor
sti
xor
jge
and
xor
movs
jle
fistp
xchg
push
mov
xlat
enter
xchg
in
push
pop
fs
or
xchg
pop
mov
mov
cmp
dec
push
adc
xor
add
xchg
and
xchg
std
dec
in
sbb
aaa
in
cli
fistp
jecxz
sub
in
in
retf
mov
jle
sub
jl
and
dec
adc
add
outs
ds
cwde
and
shl
pop
jo
fst
inc
mov
ins
mov
scas
loope
jne
jb
test
push
fsubr
adc
xchg
mul
add
and
mov
movs
(bad)
pop
cmp
rol
dec
pusha
retf
nop
out
sbb
mov
cmp
inc
call
imul
mov
fldz
sbb
sti
es
rol
xchg
fadd
rcr
ins
inc
xchg
and
movs
pop
pop
aam
xchg
pop
push
adc
or
iret
pop
push
enter
jecxz
sub
cmp
fdivrp
push
ds
int3
test
(bad)
push
dec
fs
mov
scas
call
sbb
addr16
clc
(bad)
sbb
xor
sahf
int
pushf
les
xchg
push
les
stc
jp
outs
xor
dec
cs
fs
jns
pushfw
popa
jl
loop
sar
pop
enter
jle
jmp
xchg
add
nop
movs
inc
lods
push
fstp
dec
push
mov
imul
adc
adc
xor
mov
movs
push
jnp
pusha
(bad)
pop
push
mov
push
cmps
and
fs
adc
sbb
mov
(bad)
cmps
ja
lock
push
push
fs
pop
cmp
dec
pop
call
in
in
add
mov
call
mov
pop
jp
repnz
and
cli
adc
mov
stos
test
test
xor
mov
jp
sub
xchg
neg
les
jo
mov
mov
pop
fprem1
inc
fs
mov
(bad)
out
mov
cmp
leave
mov
mov
and
ins
pop
repnz
retf
(bad)
and
fist
inc
pop
fbld
xchg
fld
sti
rdtsc
pop
mov
or
push
xor
(bad)
pop
jno
pop
pusha
aaa
rol
mov
jne
sbb
loop
xor
div
hlt
push
ins
sub
ret
aam
mov
xchg
popf
mov
sar
jne
xor
daa
mov
and
mov
sbb
cmp
xor
iret
lods
inc
jmp
data16
js
ja
lods
pop
mov
fdivr
jnp
mov
mul
sub
cmp
cwde
popf
mov
xchg
jo
jno
xor
idiv
mov
xchg
test
stos
cmp
xor
jecxz
in
stos
xchg
dec
inc
push
enter
icebp
shr
pop
in
mov
fs
dec
jmp
inc
lods
push
ins
sbb
jp
imul
push
sub
add
mov
fcomip
movs
pop
scas
lods
inc
call
cdq
jle
in
push
retf
xor
cmps
cdq
lods
lock
leave
or
jne
adc
xchg
mov
add
xor
inc
dec
cmps
dec
fcom
add
fwait
adc
adc
jne
push
mov
mov
test
dec
mov
dec
loop
lahf
xchg
repnz
aaa
popa
xlat
cmps
pop
lahf
scas
mov
sub
inc
loopne
movs
ret
ret
das
dec
(bad)
jb
ret
mov
test
pop
test
mov
mov
xor
fimul
(bad)
adc
pushf
and
pop
add
sbb
dec
and
adc
sbb
add
and
shl
mov
rol
lods
enter
std
in
mov
not
stos
into
pusha
xlat
adc
inc
push
arpl
lahf
fisttp
xor
xor
cmp
jae
lahf
pop
lahf
jle
and
jge
mov
out
cmc
aam
ins
jne
push
push
sub
shl
pop
stos
lea
sbb
sub
popf
jb
int3
or
frstor
pop
outs
jne
pop
aad
mov
lods
scas
imul
jl
jecxz
dec
outs
lods
xor
andnps
xchg
jle
je
stc
lods
mov
addr16
xchg
pop
into
jp
out
jnp
(bad)
adc
adc
int3
xchg
push
les
dec
leave
mov
jne
push
push
enter
(bad)
out
sbb
push
mov
pop
xchg
stos
cmp
repz
retf
mov
sub
add
xor
push
push
or
fbstp
inc
sbb
out
or
push
mov
mov
mov
cmc
xchg
ja
lea
lods
add
jne
out
loop
xchg
dec
mov
pop
push
mov
cs
fldenv
into
and
sub
xor
enter
mov
(bad)
xor
or
imul
pop
and
aaa
scas
cmp
xor
retf
jns
add
push
pop
jle
je
shl
in
sub
ins
xor
sub
push
pop
(bad)
loopne
out
mov
leave
repz
adc
jl
test
jns
xor
fwait
jo
ins
push
add
adc
adc
hlt
mov
mov
in
ror
popf
scas
add
outs
push
mov
rol
imul
jmp
fisttp
sbb
dec
cmp
pop
out
mov
bound
popa
push
sub
dec
sar
aam
pop
cmc
cmp
loop
xor
stos
jnp
aad
adc
jmp
mov
data16
lock
rcr
ret
fsubr
add
mov
mov
mov
call
cmp
int
add
xor
lock
xchg
imul
rcl
jle
es
push
mov
mov
scas
cmc
repnz
push
push
push
bnd
out
(bad)
jns
inc
or
sbb
push
movs
int
dec
outs
mov
and
sub
and
xor
cmp
repnz
in
cmc
sbb
pop
sub
sbb
jae
pop
xor
and
dec
xor
push
std
or
adc
dec
sbb
(bad)
cmp
test
fs
mov
inc
xchg
retf
in
sub
cld
xchg
xor
xchg
mov
(bad)
push
fmul
adc
adc
inc
sub
sahf
adc
call
popa
or
cmp
or
or
loope
adc
pop
cs
adc
cmp
push
mov
ins
sub
inc
mov
jl
out
stc
jbe
sbb
and
aaa
adc
cmps
cmp
xchg
mov
dec
aaa
cli
mov
loope
jns
xchg
jbe
(bad)
cs
cli
(bad)
icebp
sbb
data16
jecxz
mov
or
je
aaa
or
aaa
cmc
in
pop
outs
rcr
mov
pop
sub
sub
aas
sbb
es
bnd
int3
lods
pop
int
punpckldq
fs
add
ss
stos
inc
pusha
dec
popf
pushf
push
lahf
jge
inc
xor
vmwrite
data16
shl
daa
add
push
sbb
not
mov
push
adc
test
iret
xlat
push
xchg
into
mov
das
aad
cli
popa
sar
mov
js
aas
retf
mov
push
dec
inc
shr
jb
jle
jb
pop
dec
add
inc
sbb
ret
mov
inc
loop
ja
dec
or
stos
nop
inc
out
loope
retf
add
cli
xchg
jmp
arpl
fistp
xor
call
fs
mov
test
pop
mov
stc
addr16
in
stos
sub
jp
jmp
aaa
cmp
call
repnz
sbb
(bad)
(bad)
mov
dec
fisubr
push
sbb
(bad)
push
ja
cmp
popa
push
neg
cmp
sbb
stos
test
adc
stc
call
test
call
dec
leave
out
jp
cmps
mov
push
loopne
call
aas
cmp
cli
push
sub
sbb
nop
movs
retf
sub
mov
ror
clc
jecxz
data16
(bad)
test
adc
mov
mov
in
inc
sbb
jmp
iret
mov
cmp
push
int
imul
ins
test
icebp
inc
stc
or
lahf
bound
sbb
xor
dec
mov
lahf
enter
enter
(bad)
push
(bad)
rcl
pushf
call
test
sti
jmp
adc
or
add
js
sahf
repnz
cmp
push
popa
jns
(bad)
into
xlat
jp
sub
js
or
mov
scas
repz
cmp
mov
loope
or
or
xchg
jmp
inc
mov
xor
xor
retf
imul
jp
ds
js
in
adc
retf
push
cli
pushf
shl
xchg
ror
stc
push
cmp
jecxz
sub
xor
add
mov
cld
jg
sbb
push
mov
dec
cwde
add
cmp
jg
lahf
loope
xchg
ds
(bad)
mov
(bad)
test
(bad)
fldenv
gs
ret
pushf
dec
xor
lock
xchg
inc
js
pop
xchg
push
push
jne
push
rol
sbb
jne
jg
and
add
push
sbb
inc
mov
push
mov
sar
inc
mov
icebp
jmp
hlt
shl
repz
retf
mov
pop
out
inc
cmp
aam
jbe
ds
aas
(bad)
pop
xor
fldenv
jne
xchg
mov
loop
pop
rcl
icebp
stos
sbb
scas
(bad)
xor
pop
xor
add
loope
inc
stos
adc
add
jb
sub
or
inc
inc
idiv
mov
adc
pop
popf
xor
std
rcl
mov
(bad)
idiv
mov
ins
test
fnstsw
ret
repz
fmul
push
jp
xor
cli
lahf
mov
xor
sub
fwait
add
sub
push
imul
mov
loopne
push
into
fs
int
rcl
xchg
sub
mov
dec
cmp
xchg
ret
aad
lahf
sbb
inc
sub
daa
sbb
fnstcw
xchg
ret
cmc
scas
sti
imul
pop
pop
xchg
inc
test
inc
jne
outs
ss
or
xchg
sahf
sbb
cmp
inc
mov
jecxz
out
and
out
pushf
idiv
push
fld
add
fwait
cmp
mov
mov
pushf
sbb
xchg
and
aas
cld
mov
push
iret
outs
imul
mov
jb
or
xchg
inc
adc
imul
cwde
fadd
or
adc
pop
daa
aaa
cmc
pop
rcl
mov
(bad)
stos
mov
cwde
xchg
cdq
pop
jb
shr
mov
sub
mov
(bad)
and
popa
in
mov
pusha
jnp
dec
adc
movs
scas
sbb
mov
in
mov
imul
inc
aaa
pusha
sub
and
mov
cmp
addr16
jb
les
les
xchg
mov
sub
repz
push
adc
adc
pop
test
xchg
shl
and
mov
call
aam
(bad)
in
out
ins
int
jp
jp
mov
fnstenv
pop
call
rcl
call
ds
xchg
fdiv
pop
cld
sbb
fisttp
mov
cmps
(bad)
push
push
mov
stos
mov
pop
pop
repnz
push
stos
sbb
lods
jmp
ja
jl
xchg
xchg
popa
enter
fwait
and
mov
ds
retf
loope
dec
fnstenv
xor
loopne
sbb
into
mov
test
xor
nop
addr16
aad
mov
int
daa
cmps
in
popa
dec
sahf
sbb
call
xor
add
cmp
pop
int3
xchg
pop
jle
aam
movs
mov
ss
enter
aas
inc
(bad)
rol
inc
push
and
xor
xor
jmp
add
sbb
repz
mov
cs
mov
sub
jbe
lock
test
jp
cmps
mov
ins
ins
xchg
popa
outs
and
jo
adc
pop
js
push
xor
sub
dec
adc
jl
jl
mov
scas
sub
cmps
mov
and
loopne
inc
rol
out
sbb
inc
stos
(bad)
mov
fs
xor
inc
sub
adc
mov
mov
jge
shr
xor
fidiv
sbb
sbb
jae
pop
mov
mov
xchg
jo
clc
psubq
retf
pop
sub
pop
xchg
xchg
add
jns
ins
or
pushf
into
cmp
popa
call
mov
out
fwait
popa
dec
add
outs
(bad)
ja
shr
fld
aad
cli
push
mov
stos
jbe
sub
jecxz
mov
dec
ror
fnstsw
pop
out
xchg
clc
dec
dec
pop
in
mov
fucomip
enter
adc
clc
pop
mov
sahf
loop
mov
xlat
mov
dec
cli
(bad)
cmp
movs
inc
xchg
data16
retf
pop
mov
xchg
mov
popf
pop
and
sbb
sub
mov
fimul
rol
and
cli
fidivr
adc
test
jnp
dec
mov
popf
in
out
push
stos
mov
pusha
cmp
sub
dec
in
xor
and
pop
and
push
fiadd
jl
fwait
mov
jp
dec
sub
sub
retf
sub
push
pusha
jno
lahf
sar
ret
or
inc
dec
mul
mov
xchg
adc
vunpcklps
in
popf
and
xor
xor
sbb
pop
(bad)
div
cmp
sbb
jmp
mov
lods
(bad)
pop
stos
nop
jnp
cwde
bound
pop
xor
or
jns
inc
xchg
rcl
lods
push
sbb
aas
xchg
sub
bound
out
dec
adc
push
add
jg
out
daa
push
and
(bad)
sub
ret
and
and
jae
inc
pushf
pop
mov
push
lds
lahf
dec
add
data16
mov
sub
xchg
mov
iret
bound
mov
xchg
fisttp
jb
xchg
add
cmps
fisub
lahf
dec
pushf
lds
mov
in
xchg
add
mov
shl
jns
out
jmp
sbb
nop
xchg
xor
lods
cld
mov
mov
xchg
sar
cmps
sub
mov
jecxz
mov
cmp
nop
repnz
aam
xchg
ds
inc
push
xchg
ror
mov
dec
adc
shl
dec
stc
inc
out
dec
pop
imul
clc
and
adc
add
cmp
jl
pop
inc
adc
ss
mov
push
arpl
add
xchg
ret
fcmovnu
(bad)
xor
in
ins
push
pop
data16
sub
jae
arpl
jmp
jnp
push
retf
addr16
pop
add
dec
popa
sub
cwde
ret
xchg
add
pop
retf
dec
jne
das
iret
div
aas
loop
test
cmps
(bad)
pop
jno
jmp
or
sub
pop
scas
movs
mov
sub
shl
add
mov
add
push
ret
mov
pop
test
mov
shl
je
inc
nop
add
imul
cmp
out
bound
xor
jae
aaa
test
jmp
and
and
cld
ins
jne
pop
sbb
and
or
stc
fist
sbb
push
cmps
mov
xor
retf
in
pop
clc
out
lahf
xor
xchg
xor
fnsave
push
mov
test
mov
mov
xchg
jne
rcl
add
cmp
es
sbb
mov
xor
(bad)
out
add
sar
int
rcr
loop
jmp
sti
es
call
movs
pop
in
mov
lds
jne
pop
add
mov
es
sti
ss
pop
pushf
xchg
test
push
outs
inc
xchg
mov
sbb
call
xor
pop
arpl
jmp
xchg
imul
stos
cmps
loopne
shl
push
aas
pusha
and
push
mov
push
mov
push
add
(bad)
jne
sti
pop
or
scas
jne
cmps
fld
mov
loopne
xchg
or
nop
lods
sbb
sub
popa
leave
mov
lock
out
in
pop
es
add
sub
outs
pushf
dec
mov
and
in
outs
jl
inc
and
mov
sar
test
(bad)
mov
retf
xor
sub
xlat
out
inc
sub
dec
mov
mov
aad
xchg
dec
jmp
xor
(bad)
aas
add
stos
pusha
mov
and
jp
out
pop
dec
sub
sub
dec
pop
std
sbb
jno
mov
sub
les
in
xchg
cs
sbb
xor
rcl
rcr
xchg
in
mov
int3
cmp
adc
imul
leave
scas
push
call
mov
cmp
jne
inc
loopne
jne
xchg
xor
hlt
fdivr
jmp
into
adc
mov
jnp
mov
dec
loopne
pop
pushf
cmovns
xchg
dec
lahf
pop
sbb
add
add
ins
sub
cwde
ins
sti
fstp
fild
pop
dec
sub
hlt
xor
cmp
test
(bad)
lock
mov
xchg
mov
jae
scas
xchg
jo
fisub
push
and
pop
sub
sti
ficom
adc
and
cld
sahf
mov
jnp
fst
mov
fild
and
or
imul
mov
xchg
add
sbb
pop
ins
dec
sub
imul
retf
sar
push
sbb
mov
cmps
dec
outs
mov
or
ror
pusha
int3
les
fadd
xor
xchg
pop
cmc
add
cmp
jns
loop
iret
shl
repz
pushf
mov
sbb
(bad)
cwde
add
lods
inc
xchg
dec
mov
mov
cmc
mov
dec
pop
dec
push
mov
pop
mov
cmps
jmp
or
cmps
xor
out
cwde
push
push
(bad)
(bad)
rcl
jno
les
pop
repz
and
sbb
jmp
ja
xor
aam
clc
sbb
loop
cwde
push
dec
mov
add
inc
xor
jp
mov
(bad)
stc
inc
inc
xor
test
loope
sbb
test
sar
iret
loopne
cmp
mov
push
xor
int
mov
inc
mov
frstor
jg
jne
sar
cld
adc
xchg
cwde
push
cmp
sti
iret
fwait
call
pop
or
nop
mov
loope
in
mov
in
retf
sub
sub
and
push
push
ds
jmp
add
add
dec
mov
cs
mov
stos
(bad)
pop
mov
loopne
xchg
lods
test
or
pop
sahf
shr
in
outs
scas
daa
mov
pop
push
dec
xchg
and
pop
mov
repnz
push
shrd
sub
mov
bound
stos
iret
jb
fimul
popf
leave
or
or
xor
xchg
mov
pop
pop
lock
fnstsw
and
jb
add
push
dec
xchg
adc
cld
call
xchg
adc
mov
mov
dec
stos
iret
adc
cmp
(bad)
pop
stc
cmp
sbb
(bad)
lods
movs
sbb
mov
les
add
rol
sbb
repnz
adc
stc
sub
fist
xor
push
(bad)
cmp
imul
stos
out
call
or
dec
xchg
ficom
ds
call
mov
aaa
mov
sbb
inc
hlt
sub
adc
bnd
mov
pop
cmp
cwde
inc
test
cs
(bad)
jle
out
cmp
or
xor
mov
test
and
repnz
sbb
cdq
repz
add
enter
mov
lahf
outs
push
std
mov
sub
cwde
add
adc
push
aam
jae
cmps
test
repnz
stos
push
adc
ror
(bad)
sbb
jecxz
mov
pop
(bad)
xchg
daa
mov
daa
ds
sbb
add
and
xor
or
(bad)
aad
int
sahf
mov
fadd
arpl
int3
mov
mov
push
sub
add
xlat
ror
adc
hlt
mov
jmp
pop
inc
add
jns
add
push
fld
out
adc
(bad)
dec
xchg
xor
inc
test
xchg
add
or
scas
in
les
pop
xchg
cld
mov
push
pop
xchg
push
and
mov
cld
jns
cld
adc
inc
xchg
popa
clc
jns
dec
push
add
ja
dec
out
imul
cmps
jbe
mov
retf
sbb
inc
mov
movs
jg
add
inc
jg
inc
and
fs
fcmovne
mov
inc
std
(bad)
mov
ret
rcl
pop
xor
sti
call
jne
mov
ret
pop
movs
pop
cmp
mov
mov
mov
xlat
fidivr
cmp
mov
inc
push
addr16
mov
sub
dec
push
and
ds
pop
ins
das
shl
add
jp
fistp
call
in
xor
add
in
mul
xor
aaa
cli
fs
retf
aad
pop
addr16
pslld
stc
out
sub
rcr
pop
cmp
retf
inc
or
cmc
stc
push
xor
into
jmp
loop
mov
into
mov
ins
or
jno
mov
xchg
sub
add
sub
adc
cmp
inc
dec
add
fidiv
push
sub
and
dec
lods
jmp
(bad)
lock
mov
add
imul
movs
(bad)
mov
lea
add
mov
repz
xchg
js
inc
addr16
and
push
jmp
ficom
ja
dec
and
sbb
out
jecxz
cmp
ja
ins
jbe
ret
icebp
jge
gs
xor
mov
adc
add
push
psraw
test
inc
call
fisttp
mov
pop
jns
shr
popa
loopne
gs
mov
or
inc
pop
gs
cdq
mov
clc
cmp
xchg
xchg
dec
add
add
les
jnp
sub
rcr
je
icebp
push
jo
fidivr
ja
jg
sar
xlat
cmp
mov
(bad)
repnz
fs
sbb
push
jmp
dec
sbb
sti
jne
xor
ja
jno
(bad)
in
fistp
xchg
bound
sbb
jne
xlat
aam
lods
shl
sub
inc
xor
out
and
xchg
(bad)
inc
les
imul
imul
pop
pop
test
mov
not
mov
push
leave
and
ret
enter
call
(bad)
pushf
test
je
(bad)
jmp
int
push
jno
data16
xchg
imul
mov
xchg
popf
rcl
mov
cdq
push
cdq
stos
mov
bound
mov
imul
sahf
mov
jae
inc
sub
ret
and
xchg
loope
sahf
push
or
jmp
and
push
ins
das
ins
retw
ins
in
cli
movs
movs
leave
mov
and
rcr
test
xchg
bound
(bad)
(bad)
shl
(bad)
mov
jle
rol
jo
mov
add
mov
iret
test
jb
lea
sar
sub
add
call
adc
clc
sahf
lea
dec
pop
add
(bad)
mov
dec
push
rol
xchg
xchg
and
xchg
in
sub
sub
mov
cwde
dec
into
inc
adc
scas
and
jl
movs
or
loope
repnz
movs
xchg
inc
stos
ret
out
je
cs
xchg
scas
pop
sub
jp
push
loope
je
js
pop
cld
cld
ins
icebp
scas
xchg
jns
pop
mov
ja
mov
hlt
idiv
sahf
xchg
xor
inc
push
lods
ins
pop
test
pop
outs
xchg
dec
loopne
(bad)
dec
cmps
push
dec
cmps
jo
push
and
cmp
nop
add
pop
je
aam
popf
pop
fnstcw
fsub
call
add
mov
push
dec
pop
jl
sub
push
fchs
lods
out
adc
xchg
(bad)
jno
fcmovbe
adc
ret
icebp
nop
out
out
or
jmp
ret
push
sub
mov
and
push
lods
jge
xchg
mov
loopne
ret
fstp
fdivr
int
mov
xchg
loopne
xor
mov
pop
outs
jl
mov
iret
rcr
cli
push
scas
and
scas
dec
xchg
or
mov
push
or
hlt
(bad)
sar
neg
jge
adc
xchg
nop
pop
(bad)
outs
lahf
cli
test
aas
mov
gs
xchg
daa
dec
fnstcw
inc
mov
into
lock
mov
xor
sbb
sbb
mov
pop
cwde
push
aaa
cdq
das
pop
frstor
rcr
(bad)
jmp
ja
dec
leave
mov
dec
cwde
jecxz
fstp
mov
stos
outs
cmp
push
sub
mov
sub
dec
retf
mov
jecxz
adc
movs
(bad)
xchg
retf
ficomp
push
sbb
add
add
sub
cmp
fistp
lea
sbb
arpl
icebp
push
jmp
push
shr
outs
adc
lods
nop
mov
in
inc
pextrw
cmps
dec
pop
xor
ins
fiadd
or
jne
repnz
sub
mov
in
call
sbb
sti
pushf
xor
add
outs
mov
test
sbb
cmc
lods
lods
mov
into
push
inc
adc
or
mov
(bad)
gs
leave
in
fldenv
lea
jp
imul
mov
int3
adc
inc
scas
dec
movs
movs
inc
sub
xlat
jo
retf
add
(bad)
aam
xchg
leave
sbb
lods
xchg
(bad)
div
dec
dec
enter
pop
mov
pop
lds
pop
sbb
add
enter
push
inc
or
push
or
xchg
jno
imul
pusha
add
sbb
mov
fldenv
pop
in
pop
push
sbb
aam
neg
pop
int3
add
aad
mov
mov
jns
mov
cmp
sbb
add
clc
rol
mov
cmp
jns
or
loopne
and
and
scas
sub
ror
shl
mov
js
push
cmps
pop
rol
dec
jle
arpl
outs
push
dec
xor
xchg
mov
or
iret
push
outs
cmp
inc
inc
dec
scas
xchg
pop
lea
ret
in
inc
xchg
jmp
and
pop
jns
push
inc
jo
push
mov
scas
and
xchg
pushf
mov
pop
inc
inc
mov
fsubp
jo
out
(bad)
lods
inc
jns
jne
fdiv
dec
adc
pop
push
and
push
pop
dec
out
mov
sti
cmp
inc
jno
iret
xor
daa
jno
or
mov
nop
lock
jp
push
inc
lds
adc
jno
dec
mov
adc
and
mov
cmp
xchg
jge
xchg
or
test
xlat
mov
(bad)
cld
rol
popf
inc
dec
es
cmp
mov
xor
(bad)
fcom
mov
imul
mov
cmp
and
movs
cwde
jecxz
dec
div
pop
lock
xchg
nop
xor
clc
(bad)
jg
and
mov
push
dec
rcl
movs
dec
addr16
imul
loopne
jne
push
mov
mov
sub
inc
les
add
int3
cmp
mov
jae
cwde
pop
push
test
lds
mov
ja
neg
into
mov
(bad)
loopne
lods
into
inc
stos
xchg
ja
je
cmp
dec
into
ret
and
sub
(bad)
xor
call
xchg
repnz
add
repnz
jmp
fsubrp
ss
add
push
mov
mov
xor
ins
sub
rcr
mov
test
adc
cmp
out
test
mov
lds
sub
outs
stc
imul
das
xchg
jns
pop
call
es
loope
daa
rcr
pop
jecxz
fcom
in
and
pushf
pop
inc
test
xchg
mov
lods
stc
adc
icebp
or
pop
iret
mov
cmc
jo
cmp
call
jle
push
adc
pop
push
ins
mov
fs
fdiv
out
sub
cld
outs
rcr
ss
push
sbb
aaa
dec
div
jl
nop
test
sti
dec
sbb
dec
addr16
shl
mov
mov
xchg
pop
repnz
mov
pop
xor
imul
mov
jns
fs
fwait
in
mov
pop
cdq
jne
(bad)
mov
ds
or
mov
cdq
xchg
sub
cli
inc
jnp
push
es
mov
xor
mov
push
xor
in
shl
cwde
push
arpl
ss
pop
xchg
pop
push
or
inc
into
fiadd
mov
jne
(bad)
jb
fs
ret
push
sub
push
jae
cld
cmps
jge
test
push
repz
jl
pop
and
mov
test
inc
fst
pop
push
test
pop
cmp
popa
sar
xchg
mov
scas
loop
aad
xor
and
and
dec
pusha
pop
scas
cdq
mov
pop
inc
jg
fwait
call
add
sbb
mov
push
stos
sbb
adc
mov
std
repz
pop
push
jno
or
xor
jp
xor
xchg
inc
xchg
ins
cmps
pop
adc
mov
into
aaa
jmp
ret
pusha
mov
in
pop
mov
xor
pop
add
icebp
mov
frstor
popa
and
stos
pop
pusha
jno
sbb
pop
dec
jmp
(bad)
push
pop
ds
cmp
int
sbb
imul
aaa
test
inc
inc
aaa
(bad)
es
mov
pop
cdq
pop
jge
jle
in
inc
aaa
fistp
lock
pop
pop
mov
push
rol
push
lods
xchg
jmp
stos
jle
jb
int
mov
shr
xor
daa
adc
push
pop
stos
retf
push
mov
int
pop
mov
push
sbb
mov
push
and
fst
dec
fimul
jne
mul
js
aad
jecxz
pop
cld
out
sub
fisub
retf
repnz
into
xchg
adc
(bad)
xchg
mov
sbb
cmp
mov
jmp
jg
jmp
in
pop
es
dec
pop
icebp
sbb
mov
ja
cmp
enter
lea
sbb
test
int3
pop
mov
fs
adc
mov
cmp
xchg
mov
cmp
adc
movs
clc
mov
mov
and
out
mov
sub
ret
shr
ror
push
xchg
mov
dec
push
mov
test
pop
shl
mov
lock
push
jge
mov
inc
mov
aad
ja
dec
fcom
outs
push
add
pop
mov
test
fs
mov
add
jecxz
add
cmp
je
or
sbb
rcr
lods
fsub
mov
mov
repnz
pusha
pop
popa
mov
inc
dec
loop
aad
imul
cmp
dec
xchg
int
(bad)
cmp
sahf
jno
ret
repz
xchg
inc
arpl
ins
sbb
pop
dec
retf
inc
dec
sub
fild
in
leave
jnp
sar
(bad)
arpl
movs
and
fs
add
in
lods
loopne
sub
test
mov
sahf
xor
dec
repz
inc
jle
mov
arpl
fcom
ss
ja
mov
out
popa
mov
mov
das
jmp
addr16
in
push
retf
mov
int3
test
push
(bad)
mov
lods
enter
or
jmp
lea
outs
or
inc
cmps
inc
sbb
or
or
adc
jae
shl
pop
cld
das
adc
add
jno
int3
out
jge
cmp
rep
and
dec
dec
(bad)
pop
test
loope
les
mov
cmp
jno
and
ja
push
adc
cmc
popa
ret
push
in
sbb
adc
cs
popf
les
pop
inc
cmp
mov
pop
add
mov
sahf
mov
or
push
pop
mov
clc
jl
sub
pop
loopne
shl
stc
outs
sub
or
push
sub
and
mov
mov
mov
in
test
leave
(bad)
in
rcr
push
fidiv
xchg
mov
inc
or
cmp
scas
std
sub
inc
adc
stos
(bad)
test
enter
into
xchg
lock
cs
inc
add
push
or
and
(bad)
rcr
ins
adc
add
inc
iret
add
jg
add
call
jne
shl
xor
xchg
inc
or
cmc
inc
outs
aaa
or
les
or
jno
fcomi
lea
sbb
dec
js
out
mov
test
mov
in
dec
xor
or
inc
cs
aad
mov
sub
mov
je
daa
mov
std
popa
ror
mov
xchg
shl
jecxz
add
xlat
push
shr
push
icebp
jbe
mov
and
pop
and
sbb
imul
ss
and
cmp
push
popa
aad
stos
xchg
mov
aam
ret
jecxz
ja
mov
mov
mov
jl
push
mov
pop
or
jbe
(bad)
jno
lods
hlt
add
outs
les
jp
or
mov
xchg
mov
aam
push
ret
pop
cdq
and
xchg
add
xchg
mov
into
mov
mov
cmp
sar
scas
inc
mov
jmp
dec
cmps
mov
inc
mov
sti
adc
mov
into
xchg
add
aam
fld
shr
cli
pop
cmp
cmps
jecxz
mov
out
dec
mov
cwde
imul
popf
add
jmp
mov
push
fstp
jnp
pop
inc
fild
xor
cmp
into
jecxz
push
lods
and
fistp
call
dec
xchg
not
in
mov
push
icebp
mov
call
enter
ror
clc
shl
sbb
push
rcr
mov
and
jb
mov
or
test
call
das
outs
je
sub
(bad)
and
mov
icebp
xor
mov
mov
xor
mov
cmp
pop
sahf
push
push
sub
ins
jo
xor
imul
outs
pushf
cld
adc
aad
cmp
pop
(bad)
rcl
push
fstp
iret
hlt
xlat
push
inc
or
pop
sub
daa
jno
cs
sti
call
jne
sbb
inc
and
mov
push
mov
mov
in
rcr
je
xchg
or
fimul
(bad)
cmc
call
sub
mov
jmp
sub
adc
sti
jns
sar
mov
adc
sbb
cmps
(bad)
adc
je
push
ss
and
outs
jl
xor
je
cs
inc
into
and
xchg
mov
cli
sahf
pop
repnz
leave
aaa
popf
test
dec
sbb
mov
xchg
into
mov
pop
ret
fimul
jmp
pushf
dec
or
push
jecxz
dec
pop
ja
pop
or
dec
inc
imul
sar
pop
and
push
push
mov
dec
jge
in
jle
aas
test
push
mov
retf
rol
aaa
mov
sbb
inc
outs
out
imul
test
fs
add
out
inc
daa
lods
push
fdivr
test
mov
das
imul
sbb
pop
xlat
cmp
ds
mul
lock
inc
ror
pop
outs
mov
add
jmp
xor
leave
fsub
jb
imul
sahf
cmp
sbb
xor
sub
test
or
sar
inc
xchg
xchg
pop
(bad)
sbb
fdivr
jmp
jo
mov
mov
shr
pushf
dec
movs
and
jmp
bound
cwde
lahf
clc
mov
dec
xchg
shl
pop
out
int
inc
jns
mov
out
mov
or
mov
fisttp
pop
dec
retf
cmp
popf
aad
fcom
jb
fmulp
hlt
ins
lods
cmc
add
mov
add
imul
pop
int3
jb
rol
mov
pop
loop
xor
sbb
adc
mov
(bad)
std
xor
push
loope
sbb
popa
pusha
loope
lds
(bad)
dec
push
mov
dec
cmp
jle
lods
je
sahf
cmps
or
stos
pop
push
(bad)
add
outs
mov
gs
aaa
cmps
and
pop
int3
in
imul
mov
mov
sti
and
daa
shr
push
data16
stos
mov
cdq
in
sub
add
mov
imul
repz
cmc
dec
push
(bad)
repnz
fild
inc
xor
push
xchg
cmp
xchg
add
cs
jp
or
xchg
sub
test
xor
pop
adc
pop
lods
shl
and
movs
jp
xchg
push
xchg
inc
add
sbb
push
mov
jmp
inc
lea
rol
xor
cmp
test
push
or
imul
jne
in
(bad)
mov
(bad)
outs
bound
mov
mov
inc
and
shl
js
cdq
jne
dec
adc
dec
push
cli
mov
and
leave
fwait
lock
call
mov
shl
fcmovb
dec
mov
push
or
jle
xor
jmp
cmp
mov
adc
dec
inc
in
sbb
adc
or
adc
into
mov
dec
outs
shl
dec
push
cwde
js
and
cmovg
xchg
cdq
outs
test
aaa
je
jnp
mov
(bad)
xchg
add
out
rol
jmp
movntq
and
scas
int
xor
push
scas
movs
out
dec
cmp
pop
aaa
mov
adc
sbb
sbb
xor
xor
cmp
mov
and
sub
out
pop
movs
adc
mov
fadd
or
aam
iret
test
sbb
sub
and
sub
mov
fnstsw
out
(bad)
fbld
sub
cli
inc
jo
jbe
loopne
add
mov
xor
sbb
xchg
push
xor
loope
xor
cmp
cwde
test
int
inc
pop
mov
imul
dec
mov
sub
icebp
pop
ret
clc
jecxz
in
inc
ins
movs
push
adc
test
sysexit
mov
adc
aam
repnz
imul
xor
(bad)
xchg
adc
outs
cmp
je
sub
mov
xchg
cmovs
push
aam
sar
cmp
les
(bad)
and
cmps
mov
and
cs
pop
jmp
test
fcom
loopne
jecxz
push
das
(bad)
adc
mov
lea
call
call
leave
pop
xchg
mov
in
in
sub
jmp
jae
ret
inc
mov
(bad)
out
aas
sbb
mov
and
aad
mov
int
cmp
addr16
xchg
pop
test
or
sbb
jne
(bad)
std
ja
int
mov
mov
ror
sbb
sbb
pop
js
aaa
pop
(bad)
cmp
loope
fcmovbe
sbb
or
and
pop
or
inc
cmp
mov
retf
retf
add
cmps
and
(bad)
pop
jecxz
push
cmp
sbb
and
jp
mov
mov
(bad)
sbb
(bad)
adc
and
imul
scas
ins
cwde
xor
mov
push
imul
jmp
xor
dec
je
xchg
mov
ins
xchg
(bad)
loope
test
push
aad
push
cdq
in
bound
int
lods
bound
loopne
xor
pop
add
std
xor
and
inc
jbe
xchg
mov
pop
sbb
sub
stos
cmp
push
cmp
sbb
fwait
rol
ja
xchg
in
repnz
retf
idiv
jnp
loop
jmp
cli
sbb
adc
jge
inc
mov
pop
dec
sbb
aad
stos
outs
fstp
gs
loope
(bad)
aaa
add
loopne
xlat
inc
xchg
xchg
xchg
push
cmps
add
cld
std
jp
(bad)
mov
jmp
popa
mov
ds
fwait
mov
dec
loope
push
call
outs
ins
sti
pop
imul
pop
cmp
jo
pop
rcl
jmp
mov
and
fs
mov
dec
fsubrp
mov
push
jmp
loopne
mov
mov
retf
sbb
dec
sbb
ins
add
jp
xor
pop
inc
xlat
ins
xor
sti
dec
xor
lods
pushf
jp
daa
xor
sub
jmp
or
pop
mov
mov
data16
dec
or
add
pop
dec
jmp
(bad)
iret
or
mov
jbe
(bad)
test
ja
sbb
nop
push
dec
mov
(bad)
mov
mov
gs
xor
jmp
inc
(bad)
hlt
dec
push
js
fsub
fisttp
xor
scas
xchg
mov
sub
ss
(bad)
adc
ret
cld
out
mov
enter
cdq
mov
xchg
int
pusha
push
shrd
add
pop
push
sbb
fwait
mov
shr
fsubr
mov
jno
add
inc
adc
data16
sbb
cli
pop
mov
call
jnp
fidiv
xor
fdivrp
dec
adc
and
push
jae
sbb
cmp
xchg
jmp
test
cmc
mov
mov
xchg
push
sub
sahf
mov
sbb
jb
ins
xchg
sbb
sub
inc
nop
in
leave
retf
xor
scas
push
ds
inc
fs
aas
icebp
fidivr
(bad)
mov
sub
arpl
call
xor
pop
retf
icebp
jp
sti
cmp
adc
dec
xchg
xor
push
lock
cmp
mov
mov
imul
push
jno
mov
mov
sbb
lock
jmp
push
add
call
ss
cwde
cmps
ror
fwait
cmp
cmps
push
jecxz
dec
aad
mov
xlat
ror
(bad)
sub
adc
push
sub
dec
out
mov
and
mov
mov
push
cdq
jns
push
sar
mov
adc
les
pop
and
mov
cmp
xor
push
test
or
xor
mov
pop
ja
inc
push
ja
js
cmps
mov
jne
xlat
cmp
jno
fwait
mov
cmps
pop
inc
sub
popa
push
scas
in
repz
out
popa
mov
push
and
add
cmp
mov
sahf
hlt
xor
retf
xchg
popf
mov
mov
push
cmp
ja
cmps
cli
push
lods
fs
in
xor
sahf
xchg
(bad)
jo
dec
fild
add
pop
xlat
and
jmp
stos
jp
int3
jle
inc
sub
xor
in
sbb
jle
add
jecxz
call
(bad)
sbb
stos
pop
shl
lods
xor
das
clc
dec
or
add
push
xchg
or
dec
cs
sub
mov
jns
fwait
(bad)
mov
push
rcr
retf
(bad)
mov
mov
xor
iret
inc
movs
pop
mov
les
xchg
pop
in
movs
scas
push
and
clc
and
xchg
in
mov
fbld
push
pop
mov
push
xchg
mov
in
cmp
jmp
add
out
pop
adc
stc
in
mov
or
imul
les
mov
mov
cld
iret
or
sbb
pop
xchg
dec
inc
jb
push
xchg
jle
repnz
pop
sbb
(bad)
push
mov
xlat
mov
jle
jg
rcl
out
add
xlat
aad
shr
ror
jae
sti
mov
mul
fcomp
int3
ins
mov
shr
or
into
hlt
data16
dec
mov
add
neg
push
icebp
sbb
pop
cld
fnstenv
mov
push
add
pop
push
in
stc
xlat
pushf
push
(bad)
cld
adc
nop
cmp
fisub
dec
mov
repz
cmp
adc
sbb
pop
xchg
bound
add
adc
mov
or
push
add
lods
or
mov
mov
inc
loop
push
pusha
ins
lea
idiv
mov
icebp
mov
jo
call
add
lahf
enter
sbb
push
push
div
inc
mov
xchg
inc
xor
ror
retf
push
pop
jmp
mov
sar
adc
in
sub
cwde
push
pop
stos
jg
dec
inc
dec
ds
dec
lds
lods
dec
ret
jg
cdq
sbb
or
and
xchg
mov
imul
inc
pop
jns
dec
das
add
ss
push
and
and
outs
test
cli
cmp
adc
sbb
mov
jno
nop
jmp
dec
push
pop
imul
dec
imul
jecxz
xchg
xchg
mov
push
call
mov
stos
xor
stc
fucomip
adc
cwde
leave
cld
mov
cmp
pop
lds
popa
lock
(bad)
pop
test
xchg
(bad)
push
mov
mov
mov
mov
shl
push
lods
ret
(bad)
movs
mov
and
xchg
fmul
retf
aas
push
jne
add
sub
inc
jne
lock
iret
mov
jp
scas
lock
sahf
or
loopne
les
cmp
mov
adc
stos
inc
repnz
shr
out
imul
mov
mov
xlat
loop
mov
bound
out
jle
stos
test
iret
dec
cdq
mov
or
ret
inc
dec
mov
adc
lods
xchg
cmp
jge
icebp
lock
shr
adc
aad
dec
in
popa
xor
or
adc
mov
mov
push
adc
push
sbb
jae
ss
mov
enter
cmps
bound
xor
add
dec
sub
mov
lahf
dec
int3
pop
movs
or
xchg
xlat
pxor
or
not
add
fstp
adc
out
(bad)
icebp
inc
call
jle
xor
mov
inc
mov
sub
(bad)
and
popa
div
add
mov
idiv
dec
xor
mov
mov
sbb
out
popf
xor
and
loop
je
xchg
(bad)
push
(bad)
es
pop
jg
rol
mov
xlat
cmp
mov
ss
add
cmc
xor
xor
nop
ret
enter
in
in
push
sbb
inc
add
fsqrt
push
jo
aad
and
inc
retf
mov
cmps
push
dec
or
rol
clc
cld
jmp
xor
scas
test
push
sub
arpl
fwait
call
pop
inc
inc
enter
fidiv
sub
out
adc
adc
lds
add
sti
cmp
dec
cmps
add
sbb
lods
xor
sahf
inc
mov
mov
lods
mov
pusha
jno
(bad)
not
push
aam
cpuid
fs
fist
lods
dec
cld
ret
(bad)
movs
jno
fld
cmp
(bad)
sub
(bad)
arpl
sbb
pop
out
out
out
in
mov
rep
jae
leave
int3
push
sar
and
stc
clc
mov
in
mov
aaa
cdq
ja
scas
mov
jae
mov
test
add
out
stc
mov
sub
outs
adc
and
ror
sub
es
jmp
inc
xchg
bound
int3
dec
ins
arpl
pusha
xchg
or
cmp
dec
ret
mov
ins
loope
call
lods
push
test
pushf
ds
xchg
cmp
and
cmc
sbb
cmc
stc
mov
xchg
cmps
pushf
pop
xor
cmp
xchg
shl
ret
popa
add
ss
je
adc
mov
xchg
js
pop
out
(bad)
imul
cmp
fisubr
outs
xchg
xlat
stc
xor
in
in
or
pop
mov
and
test
dec
arpl
test
push
dec
push
movs
(bad)
and
jp
mov
xchg
push
pop
(bad)
pop
adc
push
xchg
popf
push
ds
cli
fwait
jle
inc
dec
or
jl
cmp
or
scas
mov
ds
jno
push
inc
push
add
clc
push
or
(bad)
lods
xchg
jle
sub
fcmovb
cmp
mov
mov
xchg
xor
sbb
cs
popf
xor
or
inc
dec
xchg
mov
repz
pushf
lock
sti
ja
push
sbb
cmc
ins
sub
inc
or
mov
les
mov
cmp
lahf
leave
fnstcw
sahf
popa
jno
fild
xchg
aam
mov
movs
pop
fcom
aas
push
outs
mov
adc
addr16
out
mov
adc
jle
(bad)
push
aaa
xor
lea
add
fwait
or
imul
pop
pop
call
xor
inc
pop
mov
mov
sbb
sbb
lock
outs
jns
pop
mov
add
xchg
nop
xchg
inc
mov
mov
mov
inc
ret
push
inc
movs
(bad)
jge
xchg
dec
mov
(bad)
dec
pop
lock
pop
mov
sahf
add
sbb
dec
test
inc
pop
pop
mov
lahf
and
int3
addr16
cmp
std
retf
inc
loop
push
push
xor
push
jge
lahf
push
std
and
inc
xor
push
sbb
xlat
imul
adc
jge
pop
(bad)
jmp
cdq
xor
jbe
cmp
popf
test
and
pop
clc
cli
xchg
sbb
jo
inc
xchg
fwait
aaa
mov
stc
jbe
mov
inc
dec
sub
outs
xor
call
xor
cmp
mov
sbb
mov
fwait
into
sbb
mov
xchg
aaa
push
push
fwait
mov
jbe
mov
add
repz
jmp
push
add
iret
pushf
jmp
in
in
imul
jmp
pop
cli
cmps
pop
enter
into
mov
and
jae
sbb
xor
or
cmps
sbb
mov
cwde
(bad)
sti
daa
sub
jo
into
pop
mov
repz
mov
dec
call
fstp
dec
das
(bad)
and
xchg
xor
je
cmc
pop
out
push
sub
mov
xor
cwde
fstp
jecxz
outs
push
scas
add
or
pop
adc
adc
(bad)
xor
dec
sbb
scas
mov
gs
cs
out
cwd
jo
xlat
cli
mov
xlat
stc
cmp
lea
leave
retf
push
xchg
or
mov
dec
call
inc
mov
in
jmp
repnz
lods
mov
mov
ins
jg
cmp
adc
std
pop
adc
mov
or
jnp
or
rcr
shl
rcl
lods
pop
adc
mov
mov
lods
sti
xor
push
pop
dec
ins
test
les
adc
add
add
mov
push
lods
mov
mov
add
push
push
push
push
imul
lods
jbe
stos
mov
and
adc
jno
stc
ins
(bad)
dec
or
mov
cmp
in
mov
push
xchg
mov
dec
xor
lds
pop
sti
(bad)
retf
rcr
add
test
nop
jae
test
sbb
and
lock
xchg
mov
or
aas
test
push
test
pop
pop
pushf
sti
jl
sbb
cli
mov
pop
sbb
out
xchg
pop
and
jg
int
es
unpcklps
dec
pop
jl
mov
push
ins
aam
pop
push
stos
and
clc
ret
adc
pop
test
cmp
fld
mov
repnz
mov
std
mov
push
mov
fsub
inc
push
inc
repnz
sbb
cmp
outs
sar
aaa
mov
enter
xchg
push
test
mov
adc
repnz
adc
push
push
(bad)
pop
out
inc
pop
std
xlat
(bad)
pop
mov
adc
fprem
mov
and
sahf
das
ja
es
jmp
sbb
or
jmp
push
pop
mov
push
jns
das
pop
fsubr
fs
in
pop
sbb
push
jecxz
pop
and
sub
dec
fdivr
mov
jbe
imul
scas
loopne
sub
mov
jg
fucom
ja
mov
jmp
xlat
loopne
fsubrp
fwait
lods
add
mov
mov
aaa
mov
std
adc
in
gs
cs
js
das
ret
mov
aam
pop
jne
shl
pop
not
push
mov
push
add
xor
push
pop
cmp
test
mov
stos
rol
add
mov
movs
(bad)
mov
out
sbb
mov
in
jns
sbb
cmp
mov
and
cmp
inc
mov
mov
cli
or
jns
inc
cdq
jmp
lahf
shl
not
pusha
popf
xor
outs
mov
js
cmp
push
movs
sbb
jns
and
mov
stos
nop
mov
jle
(bad)
cmp
repnz
and
mov
mov
and
pop
(bad)
xor
and
popa
(bad)
or
mov
addr16
ror
dec
nop
mov
icebp
push
cmp
or
ds
cdq
add
imul
fs
sub
jmp
sub
shl
or
mov
wrmsr
push
or
pop
(bad)
pop
test
das
aaa
push
mov
jo
mov
mov
mov
inc
mov
or
test
xor
bound
inc
jne
jae
fimul
xlat
xor
mov
arpl
push
outs
lods
int3
or
int
adc
clc
or
icebp
mov
mov
aad
push
adc
push
mov
push
add
imul
mov
lock
pushf
div
stos
pop
adc
or
gs
dec
iret
ds
sub
add
shl
or
sahf
or
movs
fwait
sub
cmps
ret
push
(bad)
shr
les
or
inc
ins
cmp
xor
add
icebp
dec
xlat
push
outs
push
push
push
mov
mov
push
popa
adc
push
xchg
mov
mov
stos
arpl
repz
push
add
mov
push
inc
cmp
inc
pop
and
(bad)
mov
dec
xor
add
arpl
repz
mov
or
push
ret
xor
xlat
imul
fcomp
lea
cmps
loop
fs
mov
fild
xchg
or
cmps
fwait
add
dec
nop
sbb
dec
dec
sub
fiadd
pop
mov
xchg
xor
xlat
bound
push
fwait
cmp
or
(bad)
leave
xor
mov
mov
aad
retf
push
(bad)
mov
adc
mov
js
dec
sbb
mov
lods
movs
inc
cwde
aaa
sub
enter
push
jb
mov
mov
icebp
xchg
hlt
dec
sti
push
or
sbb
mov
mov
adc
or
xor
mov
movs
push
xchg
int3
mov
jp
(bad)
in
push
inc
xor
enter
pusha
sbb
mov
and
push
push
dec
js
jns
shl
jo
test
pop
mov
jmp
adc
lahf
xchg
call
jo
outs
(bad)
iret
enter
fild
les
dec
in
loop
pop
gs
dec
das
ret
mov
pop
mov
adc
sub
sar
dec
push
cmp
xchg
push
inc
in
mov
xchg
stos
sbb
and
mov
popa
mov
mov
(bad)
dec
jge
xchg
adc
adc
hlt
mov
into
or
shr
aam
ret
pop
mov
mov
lock
push
lahf
ins
rcr
mov
test
dec
xchg
pop
push
adc
in
outs
sbb
add
(bad)
or
hlt
inc
pusha
pop
out
(bad)
mov
xchg
push
rol
retf
cmp
xor
sbb
pushf
pop
push
(bad)
cmps
xor
lahf
xchg
rol
jns
neg
enter
jg
adc
cmp
mov
sar
inc
pusha
and
test
jecxz
xchg
xchg
shr
mov
cdq
sbb
iret
fucom
fwait
add
or
cmp
outs
adc
mov
aad
sbb
test
push
inc
hlt
retf
xchg
inc
jne
dec
in
lds
stc
fisttp
or
inc
cmps
xchg
adc
fldcw
push
in
(bad)
mov
stc
mov
fwait
mov
adc
aam
adc
inc
test
or
retf
mov
fsubr
jo
mov
lock
cs
adc
loope
xchg
lods
dec
mov
out
jne
or
jnp
aam
in
mov
(bad)
(bad)
ret
pushf
xchg
push
jge
jb
fs
das
lock
ficom
add
fstp
gs
das
add
(bad)
lock
add
shr
cs
jecxz
mov
loope
pop
jne
pop
jmp
ins
xchg
popf
setp
pop
and
sub
sub
pop
sbb
push
inc
jecxz
rcr
imul
idiv
rcr
xchg
add
sub
mov
lahf
and
add
xor
inc
xor
daa
cmc
lods
popa
call
pop
int3
and
or
je
ret
jnp
in
repnz
cmp
pop
test
mov
sbb
jns
add
sub
or
mov
xchg
aad
xchg
jmp
sbb
jmp
test
xchg
cmp
test
addr16
inc
out
and
jnp
icebp
ja
add
sahf
les
cld
mov
ret
adc
jb
push
or
sub
sbb
(bad)
cmp
ret
sbb
mov
inc
test
xchg
dec
test
mov
test
cmp
ss
shl
rol
stc
(bad)
pushf
pop
mov
jle
shl
sub
cli
mov
lea
div
xor
mov
mov
aas
or
jb
mov
mov
and
pop
(bad)
pop
retf
int
loopne
imul
movs
inc
stos
(bad)
retf
inc
add
adc
adc
shl
in
ror
push
and
scas
(bad)
out
mov
out
arpl
xchg
test
outs
arpl
int3
adc
adc
adc
sub
adc
dec
test
sti
jbe
clc
movs
daa
sbb
mov
jo
xchg
daa
dec
test
sbb
enter
div
aaa
fdivr
mov
xor
xchg
dec
jnp
or
imul
cwde
pop
into
cdq
out
scas
add
ss
scas
or
xor
and
mov
lahf
(bad)
xchg
sahf
xor
push
xchg
sti
fbld
and
retf
pop
fdivr
(bad)
and
jp
jle
(bad)
pop
adc
hlt
xor
and
(bad)
xchg
mov
popf
dec
mov
xor
mov
add
jb
dec
pop
inc
std
stos
pop
adc
dec
sbb
mov
jmp
adc
pop
sub
add
xchg
in
pop
or
xor
mov
pop
daa
call
push
aas
dec
fbstp
push
pop
xor
add
mov
out
xchg
cmp
das
(bad)
sbb
jle
cmp
xchg
xchg
push
pmaddwd
mov
pop
jmp
cmps
call
jmp
in
nop
pusha
and
fdivr
sub
loopne
xlat
jecxz
mov
mov
lods
xchg
xchg
call
jne
shl
outs
test
int3
xchg
xor
call
test
in
ret
ja
shl
lahf
(bad)
xchg
add
es
fist
ror
outs
pop
push
int
sar
xor
sbb
ficom
mov
sbb
test
cmp
test
push
and
pop
shr
xor
mov
repz
popa
pop
inc
(bad)
push
mov
mov
js
rol
(bad)
(bad)
retf
push
inc
cld
rcl
ficom
push
loope
stos
dec
imul
xor
cs
pop
or
xlat
inc
imul
push
div
sub
pmaxsw
leave
movs
cld
js
mov
cld
test
add
test
popa
fnstenv
sub
in
dec
sub
mov
mov
jnp
stos
int3
popf
and
or
iret
into
ins
pop
xlat
or
or
sub
xchg
popa
dec
iret
(bad)
outs
pop
dec
std
retf
cmp
loop
lods
js
sbb
(bad)
or
mov
fidiv
cmp
lods
call
loopne
and
fstp
mov
jns
xchg
lds
pushf
nop
cli
jb
xor
jns
push
shl
leave
cwde
dec
dec
xor
jae
mov
jne
mov
xchg
push
stos
cwde
xor
xchg
outs
mov
stc
test
sbb
mov
mov
retf
dec
jge
and
pushf
mov
call
pop
std
gs
in
rep
or
cmps
int3
cmp
movzx
mov
xchg
jmp
dec
push
xor
cmps
jo
push
popf
push
jmp
aad
cmp
(bad)
icebp
jl
cmps
fmul
je
into
add
mov
cmps
mov
push
cmc
(bad)
hlt
cmp
inc
xchg
jle
cli
push
mov
sbb
jbe
fcom
outs
shl
mov
adc
adc
(bad)
mov
cmp
repz
mov
fsub
jg
test
sub
adc
jnp
sbb
rcl
outs
xlat
scas
dec
adc
inc
xchg
imul
and
outs
ins
mov
pop
test
inc
les
add
push
fstp
ss
les
fcmove
stos
ret
jmp
jmp
cmp
dec
arpl
mov
(bad)
sti
xchg
xchg
fisttp
adc
pop
mov
or
lds
pop
ret
ss
jge
xchg
or
cmc
push
in
mov
cmp
jae
mov
push
dec
js
clc
fld
mov
add
mov
imul
jne
sub
inc
outs
rol
pusha
outs
dec
or
cdq
mov
stc
and
inc
pushf
(bad)
cmp
push
inc
mov
call
test
dec
js
push
mov
les
mov
in
nop
dec
leave
push
movs
dec
xor
add
dec
retf
push
cmp
lods
mov
xchg
out
push
out
jle
shr
add
sub
hlt
pop
dec
leave
fwait
scas
out
adc
jmp
dec
(bad)
sahf
mov
sub
inc
mov
pop
cli
arpl
dec
add
(bad)
fwait
jno
inc
jle
jl
add
in
mov
outs
movs
mov
adc
jo
inc
mov
cmp
loopne
cwde
out
repz
xchg
sbb
out
les
in
jmp
and
adc
jecxz
int
push
push
jge
dec
mov
add
ja
or
out
mov
pop
std
test
outs
fdivrp
adc
push
push
xor
loope
ret
pop
mov
outs
xlat
cs
ret
jg
aaa
sahf
ins
sar
push
inc
mov
mov
inc
inc
cmp
(bad)
lahf
loop
imul
jnp
cs
iret
sbb
enter
ret
add
push
adc
hlt
pop
cdq
push
cmp
mov
rcl
adc
daa
jnp
inc
xchg
test
or
add
iret
test
cmps
or
sub
movs
cmps
dec
add
jnp
aaa
xchg
cmps
jae
push
xchg
mov
push
cs
ret
pushf
gs
test
arpl
xor
fwait
xchg
(bad)
std
out
fsub
dec
cmp
call
cmp
and
cmp
jle
push
sbb
ror
jno
xor
bound
fild
jmp
scas
jae
cmp
sub
rcr
pop
adc
mov
push
mov
enter
sub
fild
xlat
in
out
ins
scas
mov
fild
test
add
leave
ret
pop
ds
je
cmc
pusha
pop
dec
je
mov
mov
mov
(bad)
pop
dec
pop
mov
arpl
cs
iret
mov
adc
mov
mov
sub
and
mov
sub
pop
dec
icebp
jns
xchg
icebp
jmp
push
popf
xor
and
xlat
jmp
stos
adc
iret
fnsave
fsub
test
and
and
sbb
imul
and
ror
and
loopne
jbe
fld
cmps
test
mov
sahf
xchg
outs
outs
mov
dec
xor
sbb
enter
popa
add
cdq
out
inc
out
fld
outs
popa
xchg
ds
ss
or
xchg
sub
jo
xchg
sbb
cwde
xchg
dec
jae
adc
imul
push
outs
mov
sbb
inc
xchg
lahf
int
or
cdq
ret
dec
lds
not
pusha
sbb
ds
lock
jns
push
nop
push
js
mov
mov
sar
cmp
dec
adc
push
and
inc
adc
jecxz
sub
dec
sub
cld
jge
mov
in
icebp
movs
jno
and
cld
imul
cmps
ja
lds
in
sbb
push
mov
cdq
data16
adc
pushf
nop
dec
(bad)
mov
xchg
pop
call
unpckhps
sbb
or
fbstp
fdiv
mov
and
xor
xchg
sub
jns
mov
fchs
in
add
mov
(bad)
mov
pop
daa
sar
pop
xor
scas
shr
adc
dec
ins
or
cli
enter
sub
sbb
pushf
fsubr
daa
cmp
ds
mov
sbb
ret
push
or
dec
jle
bound
push
cwde
mov
jae
sub
add
and
loope
test
xor
jmp
jne
pop
(bad)
mov
xor
mov
xor
cdq
xchg
or
cwde
xor
jp
call
in
std
mov
jg
sti
out
mov
ret
mov
ret
dec
jne
pop
call
movs
jmp
pop
sbb
adc
call
jne
ss
xor
jge
lock
(bad)
scas
mov
and
push
xor
stos
into
push
js
inc
xchg
jmp
mov
in
add
jle
movs
pop
(bad)
stc
inc
xchg
daa
addr16
push
sbb
jmp
fwait
mov
mov
sub
sbb
call
mov
pop
mov
fcomp
adc
sbb
stc
aad
popa
mov
or
ss
adc
cdq
pop
test
mov
cmps
iret
(bad)
mov
sbb
scas
test
push
mov
adc
lock
std
jne
out
jmp
mov
jg
popf
stos
mov
push
sub
nop
mov
inc
or
push
imul
or
push
mov
jge
cmp
ja
repnz
int3
cmps
out
fisub
shl
imul
das
adc
fcomi
stc
push
jb
pop
xchg
(bad)
sub
iret
es
mov
inc
mov
adc
fcom
out
pushf
arpl
jmp
dec
aam
xlat
cmp
fadd
nop
dec
pusha
cdq
mov
jl
les
fst
cmp
aam
mov
or
and
stos
mov
inc
inc
(bad)
mov
inc
xchg
jecxz
sub
dec
adc
out
adc
mov
push
ds
les
cmps
push
mov
aas
xor
ret
ins
pushf
leave
inc
addr16
movs
mov
and
mov
int
adc
push
hlt
pushf
sub
popa
push
cmp
popa
cmp
xor
mov
rcl
mov
out
dec
push
inc
in
jno
outs
jbe
das
mov
mov
out
add
adc
rol
jne
add
pop
cmp
sub
cmps
icebp
fstp
add
mov
dec
jmp
jp
mov
jmp
cmps
xlat
or
pop
das
or
mov
cmp
push
aas
adc
xchg
ja
iret
push
imul
pushf
dec
and
mov
and
mov
dec
jbe
mov
popf
sar
stos
mov
addr16
push
mov
or
movupd
nop
xchg
das
rcr
lds
stc
sbb
loope
movs
jbe
(bad)
lock
inc
push
add
(bad)
fild
cmp
xchg
int
lds
lods
cwde
(bad)
cmc
stos
inc
scas
cmp
sbb
xchg
pushf
bound
or
cld
test
out
das
cmp
jmp
or
in
adc
repnz
push
bound
jmp
cmp
adc
movs
xchg
int3
inc
push
cmp
and
mov
icebp
mov
mov
cmp
jae
int
adc
shl
lahf
aam
xchg
retf
repnz
das
stc
in
outs
dec
ja
cmp
lds
(bad)
dec
xchg
sbb
enter
inc
adc
(bad)
adc
push
push
cmp
or
inc
retf
outs
fdivr
add
mov
cmp
push
inc
movs
mov
and
sbb
mov
ror
lahf
fcomi
fs
or
add
movs
mov
xor
adc
dec
or
mov
lods
(bad)
fild
mov
push
jg
(bad)
dec
xor
out
call
outs
iret
and
fstp
mov
xchg
shl
mov
cli
jg
add
push
mov
mov
outs
ret
xchg
sbb
in
ret
xchg
adc
mov
loop
mov
cwde
fnstenv
call
or
xor
add
(bad)
add
cld
mov
inc
mov
push
rcl
popf
cli
mov
repnz
dec
adc
rcr
fidivr
call
inc
das
loopne
and
imul
mov
sub
aaa
mov
cmc
int3
std
add
or
jne
xor
icebp
push
push
sbb
in
stos
pusha
cmp
sbb
cwde
jnp
sahf
push
out
inc
jb
clc
pop
dec
jmp
dec
inc
sub
je
pusha
nop
icebp
sbb
fld
lods
jg
sbb
cwde
xor
adc
loopne
dec
sub
(bad)
jmp
sub
pushf
aas
nop
or
adc
mov
jnp
push
push
addr16
ret
or
cwde
inc
popf
sub
xor
ficomp
out
das
pop
pop
push
sbb
and
outs
mov
sbb
mov
jae
dec
mov
scas
pop
cmps
jns
call
xor
adc
int3
call
pusha
ds
push
arpl
add
mov
mov
cs
cmp
jo
mov
mov
mov
mov
test
mov
outs
stc
mov
or
adc
ret
mov
ficomp
mov
inc
xchg
or
push
mov
and
in
ins
jmp
and
pushf
inc
xor
and
lock
fcom
inc
stc
sbb
bound
cmp
enter
sub
retf
mov
dec
mov
fucom
add
inc
dec
add
aam
out
cli
loope
dec
dec
xor
jmp
mov
or
mov
sti
popa
push
mov
inc
pop
jmp
pop
sbb
xchg
outs
add
popa
lods
sahf
xor
iret
cmp
psrlq
outs
add
push
add
out
imul
mov
push
loope
add
pop
sti
xchg
lods
ins
mov
fstp
xchg
mul
cmp
sub
ja
fs
out
rcr
sub
sbb
mov
outs
push
fs
fist
mov
test
fcom
inc
jae
add
push
sbb
mov
mov
(bad)
loope
sub
mov
pop
mov
sub
aam
mov
shl
and
adc
push
rcr
adc
xor
pop
cmp
and
jo
leave
pop
push
mov
retf
dec
mov
sbb
(bad)
xlat
mov
push
and
iret
mov
fstp
test
out
or
sub
fnstcw
adc
fadd
test
aaa
xchg
popa
dec
addr16
push
lods
mov
sub
loope
test
mov
test
mov
add
out
frstpm(287
push
xor
cwde
sbb
add
or
fcomp
rol
jl
jo
not
in
in
sbb
imul
sub
push
arpl
fdivr
push
pusha
(bad)
dec
mov
mov
xor
adc
cmp
sub
ret
fsubr
dec
std
cli
add
mov
cs
out
and
mov
(bad)
pop
pop
sbb
test
pop
mov
pusha
fisttp
in
cmp
push
lods
lahf
cmp
push
inc
push
xor
push
push
inc
data16
hlt
jmp
test
stos
dec
xchg
inc
jmp
loope
arpl
adc
mov
push
push
imul
icebp
sbb
add
lock
ret
sbb
jae
std
mov
pop
inc
pop
adc
retf
call
or
in
pushf
jl
bound
lods
cmp
mov
xchg
ja
movs
ror
rcr
or
jae
adc
jge
mov
psubusw
les
mov
jb
sub
push
test
ror
frstor
pop
retf
xor
or
iret
sub
outs
in
aaa
(bad)
addr16
cmp
add
cmp
pop
lods
pop
push
push
repz
rcr
gs
push
push
pop
mov
ss
fnstenv
movs
out
lahf
dec
xor
mov
mov
aad
xchg
mov
imul
jmp
pop
push
mov
push
jmp
gs
xchg
ret
sbb
pop
stc
es
xchg
jl
repnz
adc
fmul
push
in
push
inc
push
movs
sar
mov
push
in
xor
ror
movs
repnz
xchg
sub
push
mov
outs
xor
fild
lods
aad
pop
iret
sbb
dec
(bad)
popa
pop
pop
fld
stc
loop
daa
adc
mov
repz
jp
sub
mov
mov
sbb
push
adc
cmp
mov
lahf
ficom
adc
jecxz
adc
out
ror
arpl
aam
jnp
iret
jo
mov
or
mov
daa
es
xchg
cmp
test
xchg
dec
cmp
mov
add
inc
rcr
(bad)
loope
dec
push
mov
push
inc
and
fcomp
cmp
fldenv
xor
and
movs
fs
jge
dec
adc
mov
mov
push
aaa
mov
bound
fcom
jo
hlt
sbb
cmp
cmp
push
call
fnstenv
jge
sub
pop
add
pop
fild
dec
cld
data16
imul
jecxz
(bad)
push
mov
sbb
mov
pop
fnstsw
into
mov
jnp
jno
and
mov
(bad)
fidiv
sub
arpl
adc
ds
sbb
nop
xor
sahf
push
ins
lock
pop
xchg
ja
jne
or
pushf
stos
les
xchg
cmp
inc
and
cs
shr
loope
xor
sbb
pop
sub
sub
jl
mov
or
loop
push
(bad)
lods
mov
jecxz
out
jmp
pusha
add
xchg
dec
in
xor
(bad)
push
mov
pop
dec
xor
in
push
add
xlat
sub
inc
dec
mov
jb
pop
mov
pop
out
data16
sub
sub
lods
es
jno
cmp
div
xor
sub
sti
sbb
jns
mov
in
mov
es
or
dec
push
sti
mov
test
fwait
cmp
test
and
daa
cmp
pop
repnz
ins
nop
es
in
adc
push
shr
xchg
push
inc
ds
mov
shr
add
in
or
stos
sub
jmp
xor
jmp
cld
jp
and
imul
inc
sub
lds
pop
shl
in
out
sub
mov
retf
inc
cmp
fwait
inc
sbb
pop
fwait
mov
clc
or
jns
in
mov
sub
adc
jmp
jae
rcl
inc
pop
sub
mov
fcom
popa
xor
sbb
inc
adc
fdivr
outs
lahf
out
mov
(bad)
cmp
xchg
pushf
idiv
mov
loopne
push
call
cmp
aas
in
lods
sub
cli
xor
cli
sahf
loop
scas
(bad)
fistp
fistp
cmps
jmp
jae
fcomip
jmp
and
aad
adc
repz
xor
in
mov
sub
add
lods
and
cmp
mov
dec
jl
jmp
mov
clc
(bad)
mov
mov
(bad)
mov
mov
fldenv
mov
cmp
sbb
fidiv
test
fild
(bad)
test
xor
mov
cwde
das
test
je
cmp
daa
dec
xchg
into
mov
xchg
daa
inc
push
jecxz
jg
adc
fdiv
dec
test
inc
cs
fldenv
mov
cmp
mov
mov
sar
ins
dec
mov
stc
dec
push
adc
imul
adc
ins
pop
jecxz
sub
sub
xor
aad
sub
ja
cdq
movs
mov
sbb
ror
lock
int
test
cli
in
jbe
(bad)
sahf
push
dec
push
aam
call
add
push
add
fcmovne
in
sahf
xor
xchg
lds
inc
cmps
outs
arpl
add
cdq
leave
cld
and
retf
cmp
pop
pop
ins
les
icebp
aad
and
xor
outs
es
dec
jb
xchg
shl
mov
mov
test
pop
leave
jb
(bad)
sbb
push
into
adc
jno
or
or
add
nop
data16
idiv
scas
es
xchg
cmps
inc
ret
or
jge
nop
dec
mov
mov
shl
inc
test
sbb
cmp
sti
mov
and
and
mov
inc
test
cdq
dec
imul
xchg
adc
not
imul
ins
adc
xor
retf
dec
mov
cwde
xchg
ja
aad
push
pop
div
ins
inc
xor
arpl
scas
mov
arpl
mov
scas
imul
cmp
enter
cmp
adc
sbb
and
imul
sbb
fnsave
push
mov
mov
arpl
adc
cmp
cdq
int
stos
ret
dec
(bad)
fcmovne
fucomp
mov
leave
aam
jp
or
jmp
aas
aas
out
adc
test
or
lea
push
shufps
dec
pop
in
and
push
jbe
mov
sbb
mov
mov
pop
pop
mov
mov
pop
pop
push
cmp
loopne
ja
adc
jns
test
ret
mov
inc
and
jne
adc
int
es
jns
mov
pop
cwde
leave
adc
outs
push
dec
xor
iret
xchg
shl
mov
mov
mov
les
stos
lahf
and
es
add
inc
fxch
jg
sub
xchg
(bad)
pop
(bad)
pop
xchg
int
imul
jne
popa
mov
or
add
fstp
mov
jmp
sub
iret
adc
aas
adc
into
dec
hlt
lods
or
pop
inc
lahf
push
jnp
fimul
cmp
data16
pop
push
xchg
jmp
fistp
data16
test
(bad)
sbb
out
loope
add
ret
jno
jmp
mov
inc
fmul
add
(bad)
jae
popfw
dec
mov
and
dec
jecxz
imul
ins
jge
cmp
mov
test
aaa
or
mov
mov
jmp
loope
sbb
jmp
idiv
jmp
dec
and
imul
adc
dec
mov
jge
push
sub
mov
jp
jge
mov
adc
jmp
push
jle
mov
xchg
dec
jl
imul
cli
inc
mov
mov
popf
je
mov
cmp
mov
out
das
adc
jge
add
fsubr
add
adc
cmp
jne
xor
std
aad
sub
inc
cmp
xlat
lock
xor
mov
or
and
call
sub
fstp
adc
idiv
sub
pushf
add
sar
test
mov
call
aad
mov
movs
adc
inc
push
out
ret
xor
adc
shr
pop
lods
scas
pop
sbb
mov
pop
dec
ja
repz
jne
and
add
mov
push
sub
rep
add
pop
cmp
dec
cmp
cli
mov
sub
mov
addr16
mov
ja
add
jae
jno
or
popf
mov
cmp
mov
or
mov
pusha
(bad)
cmps
dec
and
jo
fs
pop
(bad)
bound
or
(bad)
and
stos
cs
scas
xchg
mov
lahf
jl
out
push
ret
dec
movs
imul
xchg
pop
shl
mov
call
pushf
lahf
mov
hlt
data16
pushf
fisub
cmps
mov
(bad)
add
push
nop
retf
fadd
pop
mov
adc
jmp
xchg
sub
fs
or
jmp
and
xor
int3
xor
jne
cmp
in
inc
lock
mov
imul
add
dec
mov
test
and
dec
enter
mov
int
sub
add
aaa
pop
pop
inc
nop
fild
int
push
sbb
or
inc
cld
mov
gs
pusha
imul
push
mov
sbb
pop
mov
aad
inc
sub
dec
test
and
pop
ins
je
jns
xor
or
inc
push
mov
push
cmp
xchg
sub
aas
arpl
or
add
or
cwde
outs
xchg
dec
fsubr
ja
mov
js
outs
fcmovnb
fdivp
cmp
outs
ret
xor
fdivr
xchg
sahf
mov
shr
test
loopne
lea
ins
maskmovq
mul
je
repz
jbe
test
mov
push
ror
xor
mov
mov
adc
xor
cs
fmulp
inc
jp
icebp
xchg
jp
aas
pop
nop
mov
xchg
iret
adc
test
retf
cmps
push
inc
in
js
sub
stos
adc
jg
nop
mov
pop
cdq
outs
mov
sahf
mov
fidivr
jg
int3
gs
push
(bad)
bnd
lods
sub
dec
nop
inc
mov
and
ins
into
push
test
aas
dec
dec
xchg
fnstcw
mov
adc
in
test
jmp
adc
inc
cld
jns
or
call
pop
retf
into
shl
cmp
xchg
inc
ss
ret
jmp
sbb
inc
push
push
and
pop
fimul
add
dec
inc
ins
rcl
arpl
mov
sub
cs
les
dec
mov
dec
and
xlat
jl
hlt
imul
call
scas
push
retf
test
add
xchg
clc
imul
jle
mov
(bad)
pop
mov
push
mov
push
xor
xlat
or
hlt
adc
dec
clc
cmp
pop
call
jge
jg
in
add
pop
inc
jnp
jle
jb
jp
cs
adc
int3
ins
lods
jns
imul
xchg
sbb
xor
(bad)
lods
adc
aaa
mov
push
inc
stos
sar
sbb
xor
in
mov
and
mov
mov
mov
add
xchg
jno
ror
ret
push
es
xlat
loop
adc
xchg
xchg
xor
pop
les
inc
in
loop
mov
adc
add
scas
fstp
and
cmp
aas
pop
dec
gs
test
jp
push
ficom
inc
sbb
adc
mov
pop
arpl
stc
out
(bad)
(bad)
sbb
mov
sub
test
test
call
lock
ss
xchg
push
mov
sub
bound
fisubr
in
push
dec
mov
pop
jno
sbb
test
dec
inc
mov
repnz
stc
addr16
rol
pop
call
loope
dec
xor
jl
ins
lds
ret
dec
xchg
mov
jge
movs
or
cs
jmp
xchg
mov
repnz
into
mov
jmp
cmp
cmp
addr16
mov
mov
cmp
jmp
leave
mov
das
jle
int3
cmp
add
adc
and
loopne
lea
jmp
loopne
cmps
xchg
add
mov
ret
fild
lods
inc
sub
stos
repnz
lea
xor
jno
jmp
add
stos
push
dec
call
pop
retf
xchg
or
sbb
je
inc
and
out
add
fadd
outs
ret
ins
rcr
addr16
sbb
repnz
and
sub
leave
sub
enter
or
mov
shl
inc
(bad)
enter
aam
fsub
and
sub
clc
cmc
pop
pop
mov
xchg
mov
push
mov
mov
test
pushf
cmp
(bad)
sbb
cdq
xor
dec
arpl
cwde
clc
test
xchg
bound
sub
call
aad
mov
sti
mov
pop
push
scas
xchg
and
int
xor
pop
outs
repz
xor
jle
push
lahf
in
dec
mov
cmp
jle
inc
retf
push
movs
jns
jmp
mov
mov
mov
jp
and
nop
out
jl
xchg
pop
cmp
pop
sbb
loope
xor
sub
fs
mov
leave
jo
mov
xor
mov
xchg
lock
mov
aad
fadd
xchg
ds
pop
shl
ins
dec
idiv
jmp
jmp
mov
lea
adc
clc
mov
test
icebp
lods
in
push
popf
movs
and
push
je
icebp
jmp
sahf
push
mov
push
(bad)
rcr
cmc
imul
xchg
call
popf
enter
cmp
dec
and
inc
sbb
je
jp
out
add
add
js
inc
mov
pop
mov
out
jnp
jmp
xor
in
jb
xchg
and
js
mov
out
inc
jmp
xchg
jo
pop
and
jmp
int
push
mov
das
addr16
jl
popa
adc
stos
lock
mov
shr
imul
fistp
shl
ds
ins
lahf
ret
shl
mov
pop
add
out
(bad)
xor
int3
jae
mov
push
dec
stos
popf
sub
inc
and
aam
mov
gs
ret
fcom
shl
ins
into
inc
(bad)
out
pop
and
cmps
cmp
add
sub
jp
ja
jmp
ins
loopne
inc
and
adc
out
sub
xchg
clc
xlat
cld
repz
pop
add
rcr
adc
mov
xor
sub
pop
push
push
push
daa
or
cwde
ror
movs
mov
and
push
cmp
pop
dec
add
cmc
dec
fidivr
sbb
jbe
in
pop
mov
add
mov
mov
cmps
inc
call
add
sti
nop
dec
mov
arpl
sub
mov
add
inc
cmps
inc
and
(bad)
jae
aas
pop
aaa
cmp
mov
div
ds
imul
and
lods
sub
loop
mov
call
popa
loopne
outs
jge
add
sub
stc
or
xchg
mov
push
fmul
cli
or
loope
or
mov
jne
cmp
fimul
add
in
push
aam
jne
out
inc
iret
xchg
das
xchg
or
add
inc
sub
call
cmp
mov
xor
push
push
sub
in
pusha
divps
retf
dec
cmps
or
pop
cli
ffree
mov
add
stos
pop
adc
push
(bad)
int
stos
(bad)
pop
mov
jmp
test
adc
sbb
icebp
repnz
ja
outs
mov
push
jg
mov
push
stos
jo
push
loopne
fld
and
(bad)
fst
inc
inc
jne
ja
mov
js
cmp
cmp
out
mov
sbb
mov
mov
pop
movs
test
lods
movs
les
scas
fs
jb
pusha
hlt
mov
fucomi
jno
dec
inc
cwde
movs
ds
xchg
call
xor
xlat
or
xchg
ins
out
lea
push
les
loop
lods
aam
sub
inc
pop
jecxz
ss
test
or
jl
mov
(bad)
xor
scas
imul
or
mov
data16
add
xor
sbb
aaa
mov
cdq
fbstp
xor
nop
sbb
pop
pop
dec
mov
or
addr16
mov
adc
sbb
pushf
aad
sbb
dec
adc
loope
lds
mov
sub
adc
imul
cmp
mov
loop
and
in
cmp
xchg
nop
ss
nop
sub
jb
or
jg
jp
push
outs
aaa
mov
pop
mov
and
mov
aas
(bad)
xchg
pop
push
add
mov
retf
fidiv
xchg
ins
pop
dec
sbb
cmp
aaa
in
pusha
(bad)
jmp
cmp
add
dec
(bad)
int3
dec
mov
dec
pop
icebp
pop
pop
cmp
out
xchg
mov
call
(bad)
js
sahf
inc
sbb
fiadd
stos
scas
loopne
mov
add
out
jl
fmul
add
and
(bad)
jp
pop
adc
inc
imul
fiadd
and
or
retf
jae
jo
dec
sub
inc
scas
jg
sub
cmps
inc
mov
sbb
xor
daa
or
das
pop
sub
inc
sbb
mov
std
je
ss
push
push
xor
sub
fistp
sub
xchg
in
push
mov
pusha
and
mov
or
mov
out
push
mov
out
pop
aad
or
dec
cld
cmp
add
out
or
in
add
(bad)
mov
adc
in
pop
ins
cmps
enter
mov
lods
push
dec
dec
add
sahf
fadd
mov
and
add
and
or
push
call
call
push
mov
xor
or
sub
inc
imul
mov
sbb
ficomp
xchg
imul
dec
inc
sub
push
dec
in
stos
les
jmp
xor
fbld
sub
mov
and
out
add
inc
xor
popa
ss
movs
xchg
inc
mov
pop
xlat
ret
cmp
loop
(bad)
and
addr16
fcomp
jbe
ja
inc
repnz
cmp
cdq
sub
iret
and
movs
adc
push
addr16
cld
mov
jbe
xchg
loopne
jns
fucomp
popa
out
sub
or
movs
inc
mov
imul
pop
push
xchg
push
push
jno
and
ja
jo
in
jle
pushf
xor
icebp
cmp
mov
fadd
das
fistp
and
mov
mov
ret
les
inc
movs
xor
std
movs
inc
mov
push
leave
mov
vmwrite
ret
jnp
stc
push
sub
sub
add
pusha
loope
cwde
scas
sub
test
scas
or
jne
or
ror
mov
and
imul
repnz
in
push
sub
or
jge
enter
int
movs
(bad)
neg
pop
dec
retf
inc
add
int
enter
dec
jmp
repnz
aas
retf
add
xor
mov
mov
int
inc
pusha
into
dec
scas
clc
rol
(bad)
out
jmp
push
mov
retf
xchg
push
repz
pop
xlat
push
inc
ret
lds
lea
push
call
mov
jne
call
xchg
xor
test
scas
sbb
cmp
int3
fstp
push
cmp
xabort
adc
lods
outs
(bad)
fisubr
in
sbb
sahf
pop
inc
inc
inc
or
and
retf
jns
or
scas
sbb
jb
retf
or
retf
pop
push
test
pop
ja
repz
data16
lods
dec
fimul
mov
pop
test
jl
aaa
loop
fucomp
dec
inc
inc
out
adc
mov
xchg
add
stos
into
std
je
mov
or
cdq
imul
pop
(bad)
mov
scas
hlt
mov
push
lods
jge
xchg
scas
enter
movs
popa
mov
(bad)
(bad)
inc
push
retf
test
jle
dec
movs
es
repz
inc
(bad)
rol
in
dec
mov
cs
fcom
xchg
and
ret
add
sahf
inc
xchg
cmps
sahf
das
add
sti
jne
clc
and
ficom
mov
jmp
mov
dec
inc
sar
jbe
adc
or
dec
or
inc
imul
sbb
mov
push
repnz
adc
push
gs
dec
shr
add
popa
shr
push
dec
dec
xor
neg
fbld
(bad)
or
dec
in
repnz
sub
test
(bad)
mov
jns
or
jno
mov
mov
fcmove
or
ret
lock
push
and
cmp
xlat
loop
rcl
movs
push
jne
ror
test
pusha
mov
cmp
icebp
mov
sar
outs
mov
mov
xlat
aam
sub
shr
adc
sub
add
jae
fistp
xor
(bad)
xchg
sub
in
pop
push
xchg
or
out
cmp
movs
rol
icebp
adc
inc
icebp
pop
pop
dec
nop
fadd
and
push
xor
rol
xor
into
lds
test
jge
inc
(bad)
repnz
jnp
jns
jg
or
(bad)
jnp
push
cmp
mov
cli
stos
rcl
out
sbb
add
inc
retf
addr16
xchg
ins
mov
aad
call
push
(bad)
lahf
jae
or
inc
push
pop
dec
rcr
in
cwde
movhps
adc
adc
pop
dec
cmp
call
sti
bswap
stc
pop
mov
jne
test
lods
lods
ds
test
mov
mov
je
ins
pop
call
sbb
ret
call
xchg
(bad)
mov
jmp
dec
sub
std
call
stos
sub
or
jmp
rol
pop
fmul
les
cmc
fwait
adc
clc
pop
cmc
inc
pop
mov
jmp
sub
dec
and
sbb
push
mov
rol
bound
dec
xor
sbb
sar
mov
scas
(bad)
into
aam
test
jo
cmp
repz
jnp
cli
imul
(bad)
jecxz
sub
mov
cli
std
(bad)
aad
loopne
fcmovbe
pop
push
xlat
inc
fs
adc
in
and
scas
fwait
mov
cld
push
or
ds
xsha256
cmps
push
mov
(bad)
mov
int
jns
sbb
cmp
js
in
adc
retf
sbb
in
cmp
add
(bad)
(bad)
dec
push
push
int3
mov
stos
jecxz
leave
aad
adc
sub
jne
pop
inc
mov
fild
sbb
push
fs
repz
out
loope
(bad)
rdpmc
imul
mov
xor
adc
jne
dec
imul
jb
aad
in
xor
pusha
push
push
jg
sub
and
inc
sbb
ins
jns
daa
xor
mov
es
xchg
jbe
adc
dec
mov
inc
and
sahf
mov
mov
fcom
add
int
out
stc
(bad)
dec
push
arpl
adc
(bad)
push
cmps
rcl
lds
stos
xor
lods
popa
icebp
pop
sahf
mov
and
lahf
mov
rcl
push
rcr
or
mov
je
mov
lahf
call
dec
cmp
test
adc
retf
xchg
clc
imul
retf
ja
jnp
cmp
push
bound
das
repnz
inc
sbb
scas
addr16
sub
neg
cmp
test
cmp
ja
(bad)
loope
pop
and
shl
popa
pusha
mov
xchg
xor
pop
adc
stos
sar
and
xor
test
dec
ss
fnstenv
nop
int
and
mov
cs
push
or
or
pslld
fcmovb
(bad)
ds
mov
xor
xchg
aaa
lods
rcl
repz
(bad)
mov
fisttp
int3
aas
fidivr
add
add
jge
mov
cmp
jb
and
and
mov
stos
add
test
xor
mov
scas
std
xchg
pop
push
stos
ret
jmp
jp
cmp
xchg
int3
mov
inc
pusha
sbb
dec
add
adc
test
add
dec
add
fistp
mov
sub
push
inc
cmp
inc
mov
add
add
dec
jns
or
mov
adc
cmp
dec
int
cmps
jae
movs
jmp
cmp
dec
or
ret
dec
retf
push
fcmovbe
xor
sub
in
jb
fadd
xchg
test
xchg
and
popa
inc
addr16
jbe
push
xor
dec
lods
lods
push
(bad)
aad
in
adc
enter
pop
imul
dec
sub
mov
aam
sbb
adc
push
sti
call
jp
inc
jno
fdivr
pop
sbb
adc
add
jl
sbb
jno
sahf
xchg
daa
pop
aad
pop
pop
mov
sub
xchg
(bad)
mov
push
or
xor
retf
stos
sbb
pushaw
jne
int
mov
sahf
push
xchg
das
xor
xchg
test
test
cmp
sbb
jl
shr
pop
push
jnp
mov
push
loop
sbb
loope
test
stc
stc
sti
add
scas
or
ret
adc
mov
xor
jb
js
xchg
jle
int3
sub
in
mov
inc
jmp
out
repnz
cmp
or
inc
pop
mov
dec
ficomp
(bad)
call
push
cmps
jnp
gs
cmp
ds
arpl
sbb
out
and
in
out
push
imul
adc
dec
mov
jmp
mov
and
mov
dec
adc
mov
mov
cmp
arpl
add
push
test
outs
or
inc
xchg
pop
adc
cwde
adc
cmp
jb
jg
pusha
jg
shl
pop
cmps
in
dec
lods
push
and
mov
jnp
ins
pop
and
mov
mov
dec
adc
ret
mov
fistp
pop
add
pop
xor
sahf
jne
imul
lahf
mov
sahf
bound
inc
mov
xor
xchg
cmp
arpl
add
(bad)
pop
cli
sub
(bad)
and
rcr
pushf
dec
mov
(bad)
cwde
adc
jmp
jle
jmp
sbb
test
mov
and
inc
loop
cli
imul
out
ins
mov
daa
js
mov
dec
test
test
jmp
pop
stc
lods
or
clc
scas
ja
in
cld
cli
or
bound
jle
scas
sbb
loop
es
pop
lods
push
arpl
aam
loope
repnz
inc
pop
jmp
mov
(bad)
and
div
xlat
icebp
mov
test
xor
arpl
mov
sub
sub
xor
test
mov
in
ins
(bad)
out
xchg
in
cmovo
outs
js
aas
clc
xchg
movs
rcr
lock
rcr
loop
xor
in
sbb
int
lock
mov
mov
xchg
je
test
lods
das
aam
cmc
adc
pop
jne
repnz
and
pop
dec
ins
rcl
pop
xor
mov
inc
std
dec
jns
mov
xchg
enter
in
sub
popa
mov
inc
shl
ins
scas
push
push
daa
mov
dec
mul
shl
in
inc
adc
inc
sub
add
hlt
lds
mov
ja
lock
or
mov
fisttp
cdq
mov
mov
test
stos
xor
pop
and
(bad)
mov
or
xor
shl
leave
xchg
mov
fisub
mov
fld
xchg
sub
ja
inc
ror
and
xchg
inc
or
sbb
add
pop
sub
sub
mov
add
fst
cmp
(bad)
(bad)
out
popa
cmc
loopne
cdq
in
adc
jns
inc
mov
pop
and
xor
jl
out
mov
stc
aaa
inc
outs
add
dec
daa
jle
push
ja
or
or
sub
adc
imul
out
sti
and
test
aam
sbb
inc
xor
adc
movs
mov
lods
pop
in
out
push
(bad)
dec
in
lods
add
(bad)
xchg
aam
add
jnp
outs
call
adc
sbb
sti
sbb
mov
call
pop
gs
call
aam
enter
jbe
xlat
and
sub
(bad)
mov
jle
stos
call
pop
lock
or
stos
outs
fs
(bad)
add
jns
icebp
push
jo
mov
addr16
mov
cmp
retf
pop
inc
push
xor
xlat
push
adc
test
mov
aam
mov
adc
bnd
cmp
inc
dec
clc
pop
out
daa
and
fistp
mov
mov
(bad)
ret
push
pop
or
pop
or
addr16
inc
rol
aad
sbb
jge
ds
dec
cmc
popa
adc
dec
add
arpl
mov
arpl
inc
jecxz
loopne
push
cmp
les
(bad)
ret
dec
dec
and
in
pop
int
dec
inc
xlat
fwait
sbb
shl
jmp
or
je
jns
aad
pop
pop
movs
pop
xchg
cs
mov
xchg
xor
and
xchg
sub
adc
xor
fdivr
jae
call
shl
cmp
mov
add
test
push
sbb
add
ret
inc
xchg
lea
mov
cmp
sub
out
add
jecxz
ja
aad
cmc
cwde
jb
sub
push
in
cmc
xor
js
mov
sar
push
sbb
test
(bad)
mov
loopne
cmp
sbb
cmp
or
loopne
and
dec
icebp
lock
pop
xor
fbstp
and
mov
ret
icebp
icebp
das
shl
mov
xlat
xchg
aad
and
mov
mov
and
inc
lods
xor
ror
scas
jp
stos
pop
cmp
sbb
push
sbb
into
cmp
(bad)
cmp
fsub
(bad)
jmp
in
or
cmp
xchg
mov
pop
adc
sbb
push
sahf
ret
push
push
(bad)
aaa
mov
out
pop
ins
fs
adc
(bad)
and
in
add
jae
es
xchg
jl
in
cmp
ja
daa
inc
mov
shr
adc
or
mov
and
cdq
cmp
pop
dec
and
repz
push
fst
arpl
and
in
(bad)
arpl
mov
inc
retf
in
retf
repz
push
or
dec
stos
les
cmps
mov
dec
cmp
adc
add
out
and
in
fwait
arpl
mov
and
push
retf
jne
fsubr
test
test
test
adc
je
mov
loopne
addr16
fsubr
bound
pop
push
add
push
sahf
and
sub
cld
mov
cdq
(bad)
test
mov
jnp
sub
retf
xlat
push
lods
jae
pop
dec
mov
or
cdq
add
shl
sub
push
push
mov
jg
in
sar
sbb
jne
in
adc
fs
nop
xchg
mov
out
pop
in
jb
data16
in
mov
lea
dec
scas
mov
inc
je
jecxz
mov
movs
fisttp
and
inc
leave
xlat
clc
mov
sbb
call
repnz
cwde
shr
dec
out
cmp
inc
jle
push
imul
push
fistp
add
jnp
mov
loope
fst
mov
rcl
push
fadd
popf
sbb
inc
mov
ret
loop
ret
jmp
sbb
jmp
cmp
add
cmps
xor
jae
std
pushf
add
aad
dec
retf
dec
jmp
out
in
out
mov
jae
jecxz
lock
xor
push
fldenv
dec
inc
pop
loope
sahf
aad
mov
cmps
or
retf
jb
dec
test
mov
adc
jae
fld
fild
test
inc
out
loop
mov
jae
push
add
lds
nop
in
aad
xchg
jmp
mov
(bad)
dec
push
ret
pop
adc
inc
cld
mov
inc
pop
push
ja
mov
dec
int
fst
sbb
and
cld
retf
jle
les
pop
enter
jbe
pop
fdiv
dec
outs
jp
scas
jl
div
pop
pop
pop
xor
loopne
and
and
inc
test
ss
mov
push
mov
shr
mov
jle
mov
xchg
lods
jecxz
add
or
mov
das
mov
push
retf
mov
fcmovnb
je
jmp
and
test
push
movs
dec
push
fistp
mov
and
and
ins
adc
clc
lahf
popa
shl
xor
clc
jnp
outs
or
pusha
or
sub
inc
dec
jo
inc
enter
jnp
jo
push
test
pushf
fistp
mov
int3
je
jl
enter
rol
jg
test
out
or
jl
pop
int3
stos
inc
mov
cmp
in
or
or
lods
imul
pop
jecxz
div
inc
ret
mov
ret
int3
jecxz
jmp
icebp
adc
addr16
dec
ss
sahf
xor
adc
fsubrp
aad
sub
mov
(bad)
mov
mov
mov
mov
clc
xchg
or
gs
fisub
mov
sbb
idiv
cdq
arpl
repnz
xchg
pop
push
idiv
and
stos
or
pop
fiadd
mov
push
inc
test
call
arpl
xchg
sub
ja
icebp
push
lods
or
inc
sar
xor
je
push
leave
pushf
xchg
jp
in
dec
cs
inc
pop
pop
ret
lods
hlt
mov
sub
movsx
mov
xor
cli
loopne
pop
loop
mov
sti
lods
mov
imul
jle
and
in
mov
push
mov
daa
test
adc
pop
push
movs
mov
sub
sub
jge
das
scas
aam
mov
int
and
pop
adc
push
int
leave
or
test
imul
cmp
in
jb
enter
loop
mov
je
bound
add
dec
loop
mov
enter
loop
in
push
outs
jle
fcomp
mov
and
in
pop
push
out
mov
pop
inc
mov
outs
mov
(bad)
(bad)
int3
aas
leave
pop
sbb
movs
idiv
outs
das
jl
je
dec
clc
repz
addr16
test
dec
jb
ins
cmc
jecxz
sbb
retf
cli
movs
ins
(bad)
xchg
sub
cmp
aam
fisub
mov
inc
dec
xchg
pop
aam
mov
jecxz
xor
inc
dec
or
xchg
bound
xor
(bad)
loope
add
cmp
pmaxsw
sbb
arpl
xor
in
mov
dec
popf
sahf
dec
xchg
shr
ss
arpl
push
shl
loope
adc
loop
(bad)
mov
cmp
pop
mov
pop
(bad)
sub
cld
adc
aam
xchg
push
scas
or
dec
fstp
leave
push
cmp
bound
std
pop
xchg
inc
cwde
adc
add
aad
xor
cmp
pusha
int
sub
bswap
and
les
loopne
(bad)
xchg
push
ja
imul
xchg
mov
imul
cmps
test
add
push
push
jae
add
in
mov
aam
ret
rcl
(bad)
sub
cmp
(bad)
test
pop
daa
cmp
out
xchg
fs
aam
fmul
adc
mov
adc
(bad)
icebp
ds
fcomp
inc
js
add
jne
in
push
jo
sbb
cmps
sbb
fwait
xchg
mov
in
lods
cdq
fsubr
jg
ins
mov
and
stos
xchg
or
cld
popf
mov
jne
xchg
imul
ins
adc
in
mov
leave
out
lds
adc
loop
cmps
cmps
retf
das
fistp
call
adc
mov
test
jle
jo
mov
xchg
cwde
or
ins
sub
xor
xchg
jg
mov
add
scas
ja
dec
cld
stos
pop
jo
push
mov
push
dec
shl
stos
add
fdiv
pop
mov
shl
push
aad
fs
add
cdq
jmp
adc
dec
and
dec
lea
rcl
shr
sbb
in
adc
push
xor
scas
xchg
adc
fwait
test
fcmovu
mov
mov
sbb
cld
pop
jmp
adc
iret
push
rcr
ret
mov
mov
les
stc
pop
xor
int
inc
fidivr
mov
inc
mov
test
dec
jl
aam
sbb
pop
mov
(bad)
mov
scas
sbb
fwait
xlat
les
xor
dec
cmp
movs
sbb
xor
inc
cdq
scas
add
sti
test
(bad)
in
jbe
fidivr
add
push
mov
outs
jl
xchg
push
jg
mov
dec
and
dec
push
cmp
rcl
push
inc
xchg
jno
jnp
test
pop
lods
ds
and
xor
push
movd
pop
cmps
in
push
dec
mov
leave
popa
scas
pop
pop
ret
push
adc
add
mov
jb
xchg
arpl
fstp
int3
jmp
in
(bad)
cdq
pop
enter
pusha
cmps
lods
je
cwde
jbe
adc
shl
and
jb
shr
xchg
shl
jnp
mov
call
push
lods
jle
push
xor
push
mov
outs
adc
out
inc
arpl
or
sub
mov
jg
ja
scas
jg
mov
lea
pop
shl
dec
stc
sbb
push
ja
loop
mov
mov
loopne
push
cmp
jecxz
adc
add
cmp
test
cli
aaa
push
push
jns
mov
mov
jecxz
mov
pop
gs
pop
mov
mov
mov
aas
test
inc
(bad)
lds
xchg
xor
retf
pop
mov
push
cmp
push
jmp
aad
outs
cs
pop
cmps
add
gs
jg
dec
dec
sbb
int
les
xchg
mov
or
push
cmp
fcmovnu
sbb
cmps
dec
leave
sbb
ds
ret
leave
outs
mov
pop
fsubr
xor
jl
xchg
dec
or
pop
jmp
xor
imul
mov
sbb
retf
stc
pushf
retf
or
xor
int3
das
retf
add
add
or
pop
xor
(bad)
retf
das
(bad)
sub
shl
ss
pop
ja
(bad)
pop
inc
pop
or
imul
(bad)
fmulp
test
xor
mov
not
adc
push
push
inc
gs
pop
les
mov
stos
xor
int3
inc
outs
mov
das
mov
and
adc
add
leave
mov
(bad)
mov
mov
sub
leave
cli
in
jnp
mov
addr16
inc
stos
test
push
inc
in
pop
mov
sub
push
adc
add
dec
push
xchg
cmp
nop
mov
push
mov
mov
aaa
outs
aad
stc
xor
out
cmps
call
mov
leave
clc
fs
outs
mov
sbb
xor
ins
retf
lock
mov
sahf
pop
xor
pop
mov
ret
(bad)
int
push
aad
cdq
cmc
add
int
jmp
mov
xchg
aaa
add
mov
mov
sahf
fisttp
int
rcr
add
or
pop
jo
xlat
xchg
inc
out
jge
mov
adc
ja
push
ret
sar
and
xor
cmps
test
not
mov
call
fs
dec
jnp
lock
mul
daa
adc
jg
xor
dec
xchg
fsubr
mov
add
shl
mov
out
or
fwait
adc
fucomi
dec
dec
and
addr16
retf
mov
mov
sub
xlat
add
xchg
inc
rep
push
mov
push
pop
add
add
aas
iret
aam
in
or
in
test
jmp
sub
sbb
xchg
dec
inc
ins
aas
out
mov
sbb
adc
iret
mov
dec
xor
scas
cmp
test
in
mov
mov
fist
sti
cwde
and
mov
adc
aam
jp
push
je
aam
mov
jbe
xchg
cmps
mov
push
pop
or
(bad)
ficom
sbb
cmp
jnp
cmp
adc
call
pop
ret
js
add
das
hlt
js
xlat
pop
inc
mov
out
and
rcr
xlat
call
sbb
xlat
lods
mov
mov
in
or
xor
mov
int3
or
jmp
push
xchg
mov
push
lock
mov
cld
inc
adc
mov
shl
add
test
push
in
cwde
inc
mov
xchg
lock
addr16
in
rcr
mov
xchg
lss
cwde
int
sbb
xchg
inc
cli
mov
or
in
and
jge
lea
mov
dec
jno
sbb
cmp
xor
xor
ret
ret
mov
inc
ret
mov
jo
scas
xor
xchg
sub
and
dec
es
push
or
inc
cmps
adc
xor
cmc
retf
pop
outs
cld
jl
dec
aas
dec
inc
dec
outs
or
adc
jmp
nop
push
mov
push
fisub
pop
jmp
icebp
popa
sti
imul
inc
adc
loope
sbb
call
out
scas
lahf
dec
pop
inc
cmp
pop
retf
mov
rcr
and
pop
push
pop
jecxz
adc
pop
or
xchg
push
dec
inc
popa
xor
mov
frstor
jmp
mov
inc
inc
add
push
out
jle
test
push
xchg
sbb
push
ret
in
pop
dec
dec
mov
fidivr
mov
lahf
loope
inc
xor
mov
movs
scas
mov
ins
(bad)
sbb
(bad)
pop
adc
mov
add
cmp
xchg
mov
int
dec
stos
push
mov
mov
cli
call
jecxz
bound
(bad)
loop
jge
cs
mov
ret
outs
mov
repz
dec
fsubrp
jg
ins
mov
loop
mov
enter
cmp
stos
push
xchg
js
adc
inc
int
and
(bad)
jns
adc
jl
pushf
test
push
xchg
outs
cmp
adc
movs
(bad)
xchg
cmp
or
pop
push
push
movs
outs
mov
jo
sti
push
arpl
mov
push
sub
mov
or
xor
dec
fisub
mov
adc
(bad)
sbb
sub
xchg
pop
xchg
stos
shl
jp
stos
out
mov
sbb
add
sub
mov
stos
leave
pop
(bad)
inc
ins
repnz
fdivp
sar
sub
retf
xchg
cmp
mov
add
mov
or
mov
inc
pop
pop
mov
mov
repz
mov
jb
adc
aaa
pop
aam
sub
pop
push
inc
add
aad
cmp
aas
nop
inc
cmp
repnz
clc
sub
js
cmps
cmp
sub
push
jo
test
xlat
ins
cli
scas
push
mov
sbb
aad
mov
stc
adc
mov
in
push
(bad)
dec
mul
jnp
mov
cmps
and
or
inc
(bad)
adc
hlt
fisub
loop
movs
cmc
ret
es
xchg
fistp
lahf
xor
push
push
adc
mov
lock
mov
ss
clc
and
sbb
mov
arpl
mov
popa
fsubr
mov
int3
jbe
pusha
adc
xchg
stc
mov
ins
cli
out
jb
sbb
pop
and
push
repnz
push
iret
mov
ret
push
cmps
cmp
scas
shl
popf
xchg
jbe
fdiv
into
dec
push
mov
cdq
loope
(bad)
pop
mov
(bad)
std
pop
test
(bad)
mov
and
dec
cmps
sub
push
adc
hlt
mov
out
aas
inc
inc
sbb
xor
scas
mov
sbb
(bad)
jge
into
iret
imul
pop
dec
push
pop
dec
or
xchg
sahf
jns
ret
inc
ds
pop
shl
arpl
sti
fsubr
movs
aad
call
sub
pop
adc
movs
ds
sahf
popf
(bad)
push
lock
mov
pop
and
add
adc
ja
push
pop
inc
inc
fdivr
int
call
sbb
lods
xchg
test
retf
adc
cmp
lahf
mov
mov
push
xchg
lea
inc
out
mov
pop
movs
mov
aaa
dec
icebp
pop
out
in
fdiv
inc
sahf
(bad)
pop
lds
in
pop
dec
ins
loopne
dec
jmp
int
xchg
inc
retf
jbe
jmp
mov
sub
mov
inc
sub
dec
push
mov
lock
pop
mov
push
mov
cmp
pusha
in
cld
push
mov
and
jg
adc
or
hlt
push
cld
add
out
(bad)
sti
add
mov
push
jno
push
(bad)
(bad)
jb
cwde
adc
sbb
xchg
test
scas
lahf
jnp
addr16
data16
inc
xor
mov
gs
cs
int
xchg
out
ss
jnp
int3
leave
retf
jecxz
sbb
lods
push
std
ror
xchg
mov
scas
adc
mov
cmp
lahf
std
jnp
pop
ins
outs
(bad)
xlat
inc
hlt
aas
or
jg
repnz
adc
push
(bad)
scas
sub
les
pop
popf
and
xchg
dec
add
add
cmp
popa
sbb
pop
fldenv
ret
dec
js
ins
cld
mov
repz
add
sbb
mov
neg
imul
in
(bad)
dec
sbb
int
mov
add
cld
inc
enter
ret
(bad)
mov
and
stos
add
outs
fs
ja
mov
aad
pop
lds
shl
sub
std
cdq
mov
xchg
lock
push
ds
sbb
jmp
jmp
in
sbb
or
aaa
or
dec
iret
ja
and
gs
jle
enter
pop
or
pop
push
mov
xchg
lods
mov
ja
out
out
dec
lock
or
(bad)
imul
outs
(bad)
xor
ret
sbb
aam
xchg
xor
cmp
jmp
ds
or
lds
mov
inc
or
push
aaa
(bad)
push
aad
fs
sub
outs
cmp
gs
mov
push
fwait
retf
inc
outs
loopne
test
jnp
ror
lods
sub
mov
and
xchg
loope
jns
and
add
fxch
xchg
mov
in
clc
inc
pusha
retf
call
sti
(bad)
outs
fs
adc
pop
pop
lods
sbb
out
je
and
mov
jge
lods
ror
mov
fstp
(bad)
pop
or
ror
test
xchg
sar
xchg
sub
or
out
cmp
mov
scas
loope
test
xchg
dec
cs
inc
mov
push
enter
and
call
clc
mov
mov
add
add
and
imul
sbb
iret
lock
adc
mov
pandn
ret
jl
jne
mov
inc
xor
xchg
inc
data16
add
mov
cli
ins
enter
push
mov
adc
inc
loope
sbb
in
test
pop
push
pop
or
std
cmp
push
xchg
sbb
sbb
into
fnstenv
push
jecxz
mov
in
mov
push
cmp
push
xchg
sub
outs
sbb
add
popa
call
xor
xor
add
add
add
push
(bad)
popa
and
test
clc
test
xchg
jno
cmps
sub
xor
int
jg
call
ds
cmp
mov
dec
sub
sbb
out
jge
adc
sahf
jge
add
stc
shl
ja
and
addr16
xor
imul
cmps
arpl
dec
in
push
(bad)
fwait
test
das
push
xor
pop
jp
cli
es
cmp
dec
mov
mov
jns
in
xchg
daa
xchg
leave
mov
mov
pop
(bad)
in
scas
xchg
cld
mov
retf
mov
adc
rcl
add
clc
fwait
adc
or
sbb
cmp
xor
pop
pusha
xchg
sti
inc
xor
lea
xchg
dec
out
cmp
inc
cmp
push
cmp
into
out
leave
mov
leave
test
scas
cmp
cs
lds
cmps
popf
inc
lock
cmp
jbe
push
movs
push
addr16
aas
rol
inc
xchg
xor
(bad)
pop
inc
cwde
call
loopne
mov
sbb
fwait
mov
pusha
mov
lds
mov
call
pop
jmp
jb
push
mov
cmp
aam
movs
not
nop
pop
xchg
sub
mul
fwait
outs
mov
icebp
(bad)
xchg
mov
out
pop
xor
retf
inc
xor
xor
jp
test
cwde
ins
test
fstp
lods
sbb
dec
sbb
add
mov
fucomi
scas
pop
adc
inc
cld
and
inc
sbb
sub
gs
jbe
leave
je
cmp
cli
adc
loopne
dec
add
es
(bad)
mov
mov
push
retf
and
mov
aaa
mov
fimul
jnp
iret
repnz
mov
mov
call
xor
stos
fmul
sbb
scas
fwait
das
mov
les
inc
cmps
les
and
or
test
cli
sbb
ret
xor
sbb
and
dec
adc
test
daa
mov
push
enter
iret
je
shl
inc
js
inc
lods
loope
cmc
mov
lods
cmc
fidivr
mov
addr16
adc
or
lahf
es
dec
gs
lea
pop
lods
jle
mov
lods
xor
bound
xchg
xchg
pop
pop
popf
sar
loopne
push
sub
cmp
mov
setae
mov
addr16
in
aas
mov
pop
stc
(bad)
mov
and
mov
retf
adc
pop
add
outs
jmp
mov
jnp
mov
and
jbe
xor
mov
cmp
jp
or
pop
enter
push
mov
ins
pop
std
inc
cmp
pusha
addr16
xor
sbb
stos
xchg
retf
ret
addr16
std
inc
xor
push
sbb
(bad)
xor
push
cdq
dec
pushf
xor
xchg
(bad)
mov
rcr
ficom
stc
jp
popf
mov
inc
xchg
xchg
arpl
retf
popa
push
fadd
stos
xchg
pop
sub
in
lea
test
mov
dec
mov
outs
jnp
sbb
gs
je
xor
or
hlt
ja
add
test
push
add
(bad)
cld
xchg
pop
push
das
cmp
popf
sub
gs
pop
mov
xor
sbb
sub
ret
mov
sub
or
(bad)
stc
aas
add
repz
push
mov
xor
mov
add
sub
setns
pop
ds
fdivr
rcl
cld
jo
mov
inc
aad
sbb
xor
clc
into
stos
adc
sbb
mov
push
sbb
dec
push
inc
sti
fsub
loopne
bound
in
inc
inc
call
ss
adc
push
pop
inc
inc
cmp
xchg
pop
loopne
pop
cmc
(bad)
xlat
sub
pop
xor
jl
les
cmp
push
lods
push
mov
daa
and
inc
sub
sbb
cmp
pop
cmps
push
inc
xor
jbe
push
jmp
pop
add
dec
bnd
fldenv
mov
test
sub
fwait
call
outs
popa
arpl
ficom
jg
adc
lods
in
sub
push
or
sbb
movs
inc
aas
mov
dec
pop
ins
inc
push
call
inc
retf
mov
sbb
pop
ja
outs
inc
pop
(bad)
inc
daa
xor
(bad)
mov
imul
ds
jns
jmp
xchg
inc
xor
dec
test
pmaxub
das
fisubr
jmp
dec
das
out
in
icebp
lea
sub
repnz
xor
fcomp
scas
fstp
jl
imul
dec
je
pusha
adc
inc
cdq
test
es
fst
sbb
inc
nop
sbb
cmp
and
jmp
fwait
fs
xlat
or
stos
mov
lock
push
sti
aaa
jno
jns
mov
add
pop
and
mov
out
and
pop
fwait
loop
fwait
inc
jge
repz
xor
mov
pop
rcl
xchg
movs
add
loopne
push
dec
pop
shl
dec
mov
leave
cmp
fst
ins
add
cdq
lea
daa
push
int
lods
ins
sti
and
pop
sub
jnp
test
or
jbe
inc
mov
lahf
je
cmp
movs
iret
add
xchg
dec
cmp
ficomp
xchg
adc
aad
pop
add
test
adc
test
test
inc
cmp
test
dec
out
lods
pop
mov
dec
call
test
and
ror
mov
imul
daa
dec
clc
adc
popf
sar
push
fs
pop
cdq
(bad)
popa
data16
xor
leave
mov
pop
cmp
mov
adc
mov
add
mov
leave
or
xchg
cmps
fs
jmp
jno
ja
mov
int
xchg
cli
lock
pushf
sub
ss
inc
daa
pop
jo
in
pop
jmp
adc
imul
jae
out
xchg
mov
xor
pop
(bad)
fs
sub
std
adc
xor
xor
pop
add
sbb
mov
sub
stos
das
jp
mov
(bad)
mov
dec
out
rcr
ja
push
inc
(bad)
rcr
pop
xchg
jb
ret
mov
std
dec
(bad)
or
ret
push
mov
cli
enter
loope
stc
sti
sahf
and
mov
xor
sub
jb
repz
pop
jnp
xchg
das
cld
lea
retf
pop
push
(bad)
jmp
push
and
iret
push
add
xchg
adc
cmps
repnz
add
(bad)
movs
cmp
test
mov
jl
xor
ds
mov
pop
imul
out
add
ins
pop
(bad)
js
jns
(bad)
mov
add
mov
shl
cwde
push
jmp
dec
in
stc
gs
out
stc
push
scas
mov
xor
movzx
push
xor
xchg
out
xchg
sub
mov
sbb
cmp
dec
pop
scas
mov
adc
mov
(bad)
(bad)
pop
xor
popa
aas
sbb
(bad)
retf
push
(bad)
fdiv
jmp
cmp
dec
pop
(bad)
xchg
or
jg
push
sbb
mov
loope
pop
dec
sbb
inc
jmp
(bad)
ins
ret
sbb
adc
(bad)
ret
cwde
push
sbb
adc
cmp
js
xchg
imul
mov
mov
mov
out
movs
mov
call
mov
inc
sbb
ss
punpckhdq
dec
popa
pushf
push
int
fs
xchg
mov
test
or
mov
jmp
mov
mov
and
call
ins
jl
cs
fisub
imul
xchg
movs
add
ss
stos
push
jnp
test
je
push
fdiv
push
les
int3
les
fdiv
cdq
inc
or
lods
mov
or
or
cld
mov
dec
xchg
xchg
sti
cmp
and
shl
ds
xlat
enter
movs
jb
or
jbe
adc
icebp
pop
jae
(bad)
xchg
fist
in
mov
loopne
lea
adc
jmp
jecxz
call
lahf
mov
test
mov
arpl
cmp
pushf
inc
clc
outs
mov
sub
fst
push
loope
cmp
enter
arpl
jle
sbb
and
lods
xchg
scas
jbe
push
pop
xor
mov
and
dec
add
cmc
ins
mov
dec
or
aas
std
dec
and
jno
shl
or
mul
mov
xor
sahf
add
sub
pop
add
movs
jb
pop
jmp
inc
(bad)
or
xor
mov
mov
into
sub
adc
inc
ins
or
xor
sub
imul
add
rol
add
add
jge
push
shr
repz
mov
arpl
jb
dec
mov
(bad)
pusha
ins
stc
fcomi
xchg
out
cmp
jmp
mov
lods
pop
sahf
push
cmp
sub
fyl2x
cmp
std
push
mov
mov
out
loope
ret
mov
cmp
jae
(bad)
mov
cmp
jmp
cmps
pop
leave
cmp
clc
movs
push
fisttp
fiadd
xor
push
or
push
pusha
xlat
dec
pop
pop
je
imul
adc
cmps
push
or
mov
loop
mov
sbb
dec
or
pop
or
ss
sbb
icebp
imul
mov
pop
jns
stc
int3
sbb
adc
sub
inc
mov
inc
cs
jae
push
ret
aad
xchg
mov
push
sbb
dec
outs
xor
imul
xchg
jb
xor
push
add
adc
add
std
xchg
add
jbe
neg
push
cmp
dec
mov
(bad)
lds
cmp
sub
test
pushf
or
jmp
aas
cmp
(bad)
test
mov
fsubp
mov
push
pop
jb
dec
cmp
xchg
cmp
push
std
fild
push
jge
(bad)
jne
pushf
add
je
ret
imul
push
jp
in
inc
(bad)
lods
outs
sub
je
nop
scas
inc
sub
cmp
or
call
or
cmp
call
cmps
(bad)
cmp
inc
or
mov
pop
cmp
mov
dec
cmp
stos
ret
pop
xchg
mov
mov
aad
sbb
inc
jo
xor
mov
cli
xor
inc
mov
push
pop
ins
pop
or
out
inc
adc
cmp
add
mov
push
sbb
sar
shl
aas
rcl
mov
adc
adc
cmp
ss
mov
ss
jo
out
aas
mov
dec
cli
es
lods
rcl
push
and
push
sub
imul
push
xchg
jbe
iret
int3
lods
inc
pusha
repz
push
ins
ds
add
or
stos
stc
pop
mov
and
es
leave
or
in
ret
xchg
and
dec
and
jg
sbb
or
call
xor
sbb
sbb
push
pop
cmps
xor
aam
cmp
sub
int
xchg
or
daa
mov
dec
jle
cmp
mov
pop
pop
lods
(bad)
addr16
inc
fld
ds
inc
into
inc
xor
cli
jp
pop
xchg
sbb
loop
mul
movs
es
into
push
cs
jnp
jmp
and
jmp
jo
not
mov
inc
dec
push
jnp
mov
ret
mov
fiadd
jnp
dec
push
push
inc
mov
mov
mov
or
mov
xchg
mov
jl
inc
loopne
fcomp
das
mov
sub
cmp
lods
std
call
xchg
sub
xchg
xor
repnz
vpaddsb
cmp
push
cli
jg
mov
pop
adc
or
push
idiv
push
inc
and
jge
sbb
loope
das
xor
xor
(bad)
ins
jmp
or
lock
call
lds
add
cdq
rol
jae
hlt
movs
mov
adc
rol
(bad)
xchg
loopne
repnz
int3
add
std
test
jnp
jp
leave
push
shr
sub
popa
ror
xchg
pop
and
mov
imul
and
ins
out
repz
xor
sub
pop
mov
sbb
imul
inc
imul
and
or
fwait
ins
pop
sub
push
test
push
sub
push
add
icebp
cli
std
and
aam
stc
(bad)
pop
test
jge
call
mov
adc
call
xchg
cs
sub
jmp
mov
pop
and
mov
jp
pusha
stos
pop
jecxz
sub
sub
cli
pop
xor
xor
pusha
jno
jne
sub
inc
iret
mov
(bad)
mov
xchg
adc
mov
addr16
call
sbb
add
daa
fimul
and
push
test
loop
xchg
outs
push
loop
xor
fsubp
mov
lods
rcl
mov
and
lods
enter
push
fsin
xchg
xor
(bad)
jns
sub
pushf
adc
sbb
pop
shl
adc
and
pop
sub
in
pop
push
push
dec
arpl
js
sbb
add
sub
dec
jecxz
jb
neg
xor
lahf
ror
mov
stc
xchg
pop
jle
mov
(bad)
imul
arpl
loop
cmp
clc
out
fsubr
outs
or
adc
cs
stos
aad
dec
xor
sub
fmul
push
outs
cmps
cmp
aaa
mov
add
les
pop
fidiv
push
mov
clc
mov
into
gs
sub
inc
es
push
push
add
add
mov
in
cdq
inc
sti
jecxz
aam
lods
cmp
std
es
xor
inc
(bad)
shl
xchg
ret
push
popa
adc
gs
out
rcr
shl
(bad)
js
jns
inc
ins
push
out
add
mov
xor
or
mov
or
test
test
popf
in
loopne
sub
fwait
jb
lea
or
hlt
ret
pop
jp
in
and
aad
loopne
adc
scas
mov
scas
(bad)
stos
jno
jo
addr16
rcl
arpl
push
mov
std
adc
pushf
push
scas
sbb
dec
dec
push
std
and
adc
inc
pop
mov
shl
push
jno
sti
cmps
mov
or
cld
iret
imul
into
or
ret
push
sbb
aas
out
xor
popa
jno
pushf
aas
xchg
arpl
jmp
iretw
sbb
mov
mov
inc
push
xchg
add
out
in
sar
(bad)
jge
and
aam
(bad)
outs
jns
mov
sbb
xchg
sub
hlt
xor
aad
mov
jnp
call
icebp
jmp
xchg
pop
pop
inc
in
push
not
cs
dec
or
sbb
aam
mov
das
fcomp
aaa
and
push
pop
js
into
cmp
int
loop
ret
add
pusha
fs
jne
ins
sub
xchg
ins
ret
inc
in
adc
jo
imul
add
and
out
loop
dec
std
add
jne
push
ret
rcl
mov
push
rcl
test
jecxz
xchg
inc
inc
sbb
movs
sbb
icebp
fidivr
mov
clc
std
lea
ret
pop
inc
sahf
aad
test
or
xor
sbb
mov
and
push
adc
mov
das
fisttp
xchg
jne
fs
mov
sub
stos
std
jge
pop
movs
lods
ja
xchg
jecxz
les
idiv
cmp
fmul
push
inc
adc
fwait
js
lock
imul
sub
in
pop
xchg
repz
ret
shl
xchg
mov
ds
pop
mov
loopne
jecxz
or
xchg
das
sub
pop
dec
pop
aaa
jmp
xchg
rsm
div
fidiv
jle
mov
imul
out
pop
out
push
aad
jmp
sub
cmc
fcom
mov
dec
pop
sub
scas
arpl
lods
xor
ds
jecxz
push
push
fsubrp
movs
retf
mul
or
push
mov
add
imul
ins
cmp
outs
sub
into
xchg
xchg
lods
mov
cdq
nop
fldenv
pop
push
xor
cmp
mov
pop
stos
sub
je
nop
stos
mov
xchg
xor
add
(bad)
mov
inc
arpl
sbb
fstp
in
clc
loop
cdq
sub
loope
fnsave
add
rcr
rcr
adc
cld
push
pop
push
push
lds
lahf
std
jp
adc
mov
sahf
mov
stos
xor
mov
inc
(bad)
std
paddsb
imul
sti
and
xor
int
jmp
xor
imul
test
imul
mov
inc
jl
mov
inc
jp
xor
push
adc
xchg
psllw
mov
sub
sub
ss
jns
dec
stos
loope
add
pop
jle
aam
mov
add
or
inc
cld
cmp
sub
outs
cdq
and
icebp
jge
stos
pop
and
sbb
popf
dec
mov
cdq
cmps
outs
inc
int
dec
cmp
repnz
rcl
in
dec
or
(bad)
stc
scas
dec
jmp
push
cwde
outs
mov
jp
sub
call
call
sbb
xchg
fild
push
jb
mov
stc
aaa
jb
inc
loope
fwait
adc
sbb
xor
mov
fs
xor
sub
xor
fnstsw
cmps
shl
scas
leave
cld
aas
mov
mov
imul
daa
jnp
cld
out
bound
inc
test
or
inc
cmp
mov
sti
push
pop
iret
inc
jmp
mov
sbb
into
jl
icebp
jbe
outs
xor
ffree
call
dec
cmp
lods
in
in
xchg
outs
adc
xor
bound
push
sbb
popf
mov
int3
ficomp
jmp
loop
rol
call
sbb
icebp
xchg
neg
xor
pushf
imul
cwde
sbb
loopne
adc
fistp
test
inc
cmp
arpl
out
cmp
fs
test
ror
and
jae
pop
sub
lahf
addr16
movs
mov
and
mov
enter
and
dec
test
cwde
pushw
jmp
call
test
or
xchg
lods
lea
lods
dec
sbb
sti
and
mov
adc
sbb
fisttp
sbb
pop
aad
sub
sbb
arpl
or
xchg
(bad)
lock
(bad)
in
test
adc
jo
call
jns
fstp
daa
dec
sub
(bad)
call
cmp
iret
cmps
cmp
scas
movs
call
ds
shr
pop
jl
rcl
movs
iret
and
mov
test
lods
xor
sti
call
mov
mov
mov
sub
inc
mov
mov
inc
js
fstp
rcr
push
cld
lock
sub
dec
ror
jle
sbb
push
bound
add
xchg
mov
cmp
jl
sub
movs
repnz
sti
call
jbe
pop
or
les
cmc
mov
mov
mov
maskmovq
inc
out
sub
fild
arpl
jl
mov
sahf
cmc
das
sub
loopne
dec
(bad)
fild
dec
lock
clc
inc
cld
(bad)
pop
xor
sub
test
stc
int3
mov
mov
push
les
stos
sub
or
jmp
adc
or
(bad)
xor
cmp
dec
mov
mov
scas
or
or
and
xchg
stc
inc
out
mov
mov
inc
cli
jmp
outs
push
mov
jmp
cmp
dec
pop
mov
sub
fstp
jp
inc
and
sub
jmp
iret
mov
xor
mov
xlat
ins
int3
adc
icebp
loope
jg
pop
in
push
mov
pop
mov
or
(bad)
xor
xor
call
mov
pop
icebp
sub
sbb
imul
dec
rcl
sub
and
jmp
mov
std
icebp
popa
jbe
adc
outs
xlat
bound
popa
xor
sti
cmc
mov
jge
stos
repnz
mov
jb
mov
dec
cs
stos
or
push
call
outs
and
sahf
loop
fisttp
rcr
shl
jmp
mov
stos
pop
cwde
sbb
inc
cmps
fisttp
leave
in
(bad)
aaa
clc
sbb
jp
popa
mov
inc
pop
mov
ins
jnp
mov
mov
mov
cmp
jmp
jp
inc
imul
xchg
sahf
mov
xchg
jp
out
and
sar
ins
popf
jbe
outs
aaa
sbb
imul
setp
mov
add
pop
inc
fst
cmps
movs
test
and
jae
movs
scas
ror
mov
jecxz
in
jae
loop
addr16
adc
idiv
sbb
pop
ret
lods
push
shr
pop
or
popa
in
or
inc
sbb
jmp
xor
jno
pushf
and
xchg
aad
int
(bad)
xor
inc
inc
add
dec
push
cmp
pop
sbb
(bad)
xor
pop
dec
stos
cld
out
out
sahf
pop
mov
or
dec
(bad)
and
out
mov
ins
out
jno
jne
pop
jp
(bad)
cmp
pop
loopne
or
add
jbe
mov
(bad)
(bad)
mov
std
call
aas
and
mov
mov
jmp
xor
imul
mov
loope
cmp
xor
mov
and
jecxz
add
xchg
jns
jecxz
push
sbb
daa
adc
xor
jp
adc
(bad)
sar
inc
std
imul
cmp
aam
push
jecxz
push
inc
mov
out
lea
cmps
aam
push
cmp
das
sub
ds
in
and
add
sbb
lea
cmp
fisubr
loope
jmp
or
cwde
cmps
loope
lea
mov
mov
jns
add
push
dec
pop
sbb
ret
cmp
mov
add
push
je
call
addr16
xchg
fsubr
xchg
xchg
lahf
(bad)
mov
cmps
mov
adc
clc
adc
jg
ror
getsec
inc
repnz
adc
dec
dec
stos
pop
cdq
mov
addr16
outs
sub
and
arpl
mov
push
jnp
mov
xor
mov
adc
aad
sub
or
dec
inc
sub
enter
stos
dec
push
jle
sub
jmp
and
test
adc
mov
push
xchg
dec
nop
fisub
dec
dec
add
dec
mov
and
cmp
ins
clc
pop
test
jecxz
popa
stos
cmp
push
or
mov
mov
add
inc
rol
es
mov
jecxz
mov
xor
cli
inc
cmp
or
sbb
add
into
cmp
xchg
fnsave
stos
push
hlt
fs
jge
lods
and
fld
loope
cdq
(bad)
mov
sub
sbb
cmp
mov
add
rol
xlat
pop
cli
push
popa
sbb
out
xor
nop
mov
push
fwait
test
mov
outs
cmp
and
add
jge
enter
mov
push
add
pop
and
push
cmp
dec
push
stos
adc
cmp
cwde
loope
pop
jns
add
xor
cmps
call
cwde
and
dec
sbb
push
or
popa
mov
mov
mov
pop
inc
lods
test
and
loope
jp
mov
scas
push
add
shl
in
pop
into
or
push
sbb
adc
sbb
(bad)
sbb
jbe
push
mov
xor
ja
stos
pop
in
jg
pop
mul
inc
sahf
cmp
xchg
ja
mov
xchg
and
jg
mov
ss
ror
jne
aas
loop
ins
(bad)
xor
and
jno
lock
ins
inc
sbb
mov
les
inc
cmp
mov
mov
js
sbb
cdq
clc
inc
mov
or
cdq
push
xor
imul
dec
clc
adc
pop
bound
mov
add
push
fld
mov
fld
jmp
sub
das
fmul
int
and
(bad)
sub
sbb
aas
data16
pop
adc
mov
push
repz
dec
mov
and
sbb
jle
rcr
jae
(bad)
fstp
jp
inc
pop
mov
jge
pop
dec
mov
cs
inc
sbb
xchg
fadd
and
out
in
mov
mov
xor
inc
ja
es
and
xlat
pop
sub
inc
adc
push
or
jnp
rcr
(bad)
jns
mov
push
sbb
hlt
push
stos
into
fdivr
push
jne
add
inc
fsubr
in
adc
mov
ins
mov
cld
mov
mov
mov
arpl
mov
inc
inc
sub
cmp
pop
add
dec
dec
jb
lea
clc
push
out
dec
mov
movs
mov
rcl
mov
std
aas
pop
mov
push
pop
xor
call
sub
push
mov
mov
cmc
inc
or
pusha
movs
mov
inc
jnp
sar
inc
sbb
jb
lea
out
sub
jle
sti
push
jae
call
add
add
popf
xlat
jg
cmp
jp
ffree
inc
jp
xor
pop
kandw
adc
mov
xchg
ins
or
inc
not
adc
stos
jg
cmp
int
into
add
lahf
sub
cmp
xor
add
mov
into
jecxz
sbb
sbb
cmp
push
retf
pop
xor
cmps
pop
pop
fild
test
test
dec
and
aas
aaa
sbb
and
push
aad
in
jmp
push
mov
push
dec
jl
xchg
test
cmp
inc
push
fst
add
jmp
adc
neg
mov
pop
pop
mov
jns
ja
imul
adc
shl
mov
pusha
inc
xchg
pop
data16
fstp
sub
out
pop
inc
aaa
push
jmp
in
push
jmp
lahf
cmp
adc
popf
lock
jge
retf
into
mov
out
into
js
fadd
dec
js
add
ror
imul
loop
cs
sar
(bad)
stos
test
mov
fstp
ds
xchg
mov
inc
xchg
xchg
and
mov
in
rcr
lds
mov
mov
lahf
enter
dec
inc
mov
xchg
or
and
mov
test
das
mov
xor
mov
mov
fcom
test
pop
add
pop
(bad)
(bad)
mov
stos
nop
iret
call
cmp
or
ss
sub
pusha
xchg
sub
aaa
mov
adc
mov
adc
mov
dec
dec
xchg
sub
mov
xor
cmps
pop
mov
jmp
jnp
leave
dec
jg
hlt
and
rcr
push
fisub
cmp
push
sbb
xchg
ds
outs
mov
stos
js
repz
rol
ds
pop
data16
mov
int
loope
js
(bad)
in
pop
jb
popa
xlat
mov
in
in
mov
xor
xchg
mov
sbb
push
or
into
sbb
shl
push
jl
push
jnp
int3
imul
push
jle
mov
xchg
inc
out
mov
cmps
jne
fwait
sub
add
and
mov
lods
cs
aaa
iret
jp
pusha
lds
enter
cwde
in
in
jae
push
pop
outs
ds
ret
loope
lds
jg
outs
mov
pusha
or
inc
int
not
mov
mov
outs
dec
push
mov
je
pop
push
movs
xchg
dec
daa
shl
mov
sbb
and
sub
cmp
(bad)
sub
add
in
sbb
mov
and
adc
jmp
cmps
lea
arpl
cmc
(bad)
sbb
cmps
and
arpl
call
xor
add
pop
mov
fwait
rol
int3
les
mov
ss
aam
push
pop
mov
xchg
(bad)
wbinvd
leave
xlat
dec
jb
sub
imul
jge
es
loope
repz
leave
ror
fsub
and
mov
lds
mov
enter
scas
sbb
adc
and
push
in
fldcw
lods
(bad)
popa
movaps
xchg
js
std
sbb
dec
dec
mov
jae
or
ficomp
mov
mov
scas
mov
add
cmps
add
mov
aaa
test
xchg
sub
mov
cmp
push
stos
out
cmps
(bad)
xchg
sbb
pop
outs
out
movs
jmp
or
in
call
dec
xchg
ins
hlt
add
mov
shl
(bad)
mov
loope
xchg
and
and
sbb
dec
inc
pop
shl
mov
mov
dec
imul
mov
icebp
mov
push
adc
out
les
adc
imul
call
ret
push
cmp
cmp
out
icebp
mov
push
jae
adc
dec
lods
aas
push
es
inc
pop
cmp
xor
and
fdivr
ja
add
ds
pop
xor
push
cmc
cmc
popa
pusha
pop
std
rol
pop
xor
jg
jecxz
vmptrld
inc
sbb
jp
int3
dec
jle
or
xchg
dec
test
push
sub
dec
mov
ins
jne
push
cmp
mov
jno
jns
xchg
(bad)
out
leave
movs
cmp
xchg
push
mov
cmp
mov
pop
fisub
add
fidiv
mov
mov
pop
mov
ror
sar
mov
xchg
cld
mov
or
call
cmps
mov
fisub
stc
cs
mov
ss
in
push
push
repz
std
out
aam
popf
xor
adc
addr16
lock
fst
dec
and
arpl
lahf
cmp
dec
test
out
mov
sub
xor
fs
lock
fiadd
xchg
mov
mov
or
popa
fisttp
std
repz
mov
pop
xor
inc
cmps
inc
gs
rol
mov
mov
call
lds
aam
jmp
jge
cwde
call
xchg
into
test
jp
imul
test
sub
(bad)
movs
xchg
inc
icebp
aam
add
scas
js
inc
mov
or
sti
dec
push
mov
div
cmp
mov
sbb
pushf
push
adc
std
into
nop
or
std
inc
in
int
jge
dec
mov
leave
lea
adc
cmp
outs
rcl
lods
push
dec
movs
std
inc
or
ss
and
popa
(bad)
imul
clc
inc
ja
or
pop
mov
mov
mov
push
(bad)
dec
sbb
xchg
mov
pop
std
cmc
or
movs
sub
add
mov
loope
dec
xchg
cmp
jp
(bad)
jl
ret
dec
cmp
movs
pop
xchg
dec
hlt
pop
xor
rcr
fbstp
cs
push
sbb
out
retf
sbb
or
cli
les
into
jp
je
(bad)
ds
sub
mov
push
sbb
xlat
in
sub
cmp
and
lds
test
sub
rcl
popf
test
mov
gs
add
retf
cli
hlt
ret
sub
cli
xchg
std
(bad)
jo
lds
xor
and
jns
ret
retf
push
adc
in
neg
in
xchg
vpunpckhqdq
scas
dec
cld
movs
ins
test
adc
inc
lock
dec
pop
and
cmp
jge
add
adc
dec
cdq
cmp
imul
fiadd
sub
mov
icebp
jp
mov
jecxz
adc
cmps
xor
pushf
mov
nop
xor
push
pop
das
data16
pop
mov
test
int
push
sbb
jno
mov
adc
mov
in
outs
call
inc
mov
or
mov
cs
mov
nop
nop
test
scas
mov
stc
mov
aam
jno
cmps
rol
mov
popa
aaa
jmp
iret
inc
jg
jmp
xchg
xchg
cmps
shl
aas
jae
dec
in
dec
fwait
mov
mov
pop
adc
jae
push
pushf
cmp
push
inc
dec
push
mov
sti
daa
add
lahf
mov
aas
dec
mov
out
data16
cdq
pop
sub
inc
inc
or
ss
mov
mov
xor
add
adc
jmp
pop
leave
sbb
cmp
imul
daa
inc
in
cmp
push
test
jg
and
cdq
call
imul
imul
pusha
mov
bound
inc
pop
adc
lods
outs
mov
mov
call
je
lock
lock
int3
jmp
cmp
scas
dec
push
cmps
aaa
arpl
nop
mov
or
xor
adc
mov
aaa
xchg
sar
mov
int3
jge
call
sbb
mov
aaa
in
push
push
push
jne
add
sahf
mov
pop
scas
and
mov
and
fidivr
sub
sbb
iret
mov
mov
dec
xchg
ds
clc
cli
aad
mov
aaa
daa
cmp
add
js
pop
arpl
adc
stos
cld
jp
cld
xor
fsub
xchg
adc
push
sbb
pushf
jbe
adc
ins
mov
pop
ins
aaa
loope
jmp
repz
jae
jmp
inc
adc
loopne
xor
mov
sub
add
icebp
jmp
div
call
not
out
mov
pop
xor
sub
adc
inc
clc
std
push
push
sub
push
retf
adc
clc
imul
push
test
or
jns
sar
jmp
iret
dec
gs
push
ss
and
loop
and
cmp
inc
outs
lds
fsub
inc
je
addr16
sar
cmp
pop
ja
xor
push
cwde
or
test
aas
stc
loopne
jecxz
dec
sahf
daa
jmp
ss
and
sub
je
es
xor
and
adc
mov
cli
push
inc
lea
retf
add
enter
aad
xor
inc
mov
dec
pop
and
mov
fs
jl
mov
call
es
cmps
mov
sbb
jns
into
gs
sar
xchg
mov
mov
mov
mov
xchg
xchg
stos
mov
retf
(bad)
nop
push
std
jge
clc
jl
sub
sbb
mov
les
cmp
into
shl
add
dec
test
aad
out
mov
xor
xor
into
ins
and
or
jmp
sar
out
inc
jg
xor
push
fsubp
cmp
inc
sbb
out
jbe
mov
pop
cmp
gs
adc
pop
fwait
pop
clc
imul
jb
sbb
stos
push
fcomi
pop
xchg
lock
dec
cld
mov
cs
add
ret
pop
inc
imul
push
outs
jl
xchg
or
push
out
aas
sub
daa
movs
add
shl
cmp
data16
(bad)
adc
cmp
loop
retf
mov
sbb
icebp
aaa
dec
sbb
push
inc
sbb
jecxz
(bad)
cmps
xor
xchg
sub
fst
jno
sar
test
jge
pushf
xchg
inc
outs
(bad)
mov
pop
dec
mov
aaa
fadd
and
xchg
(bad)
or
cmp
push
fst
pop
mov
aaa
sbb
les
sbb
(bad)
dec
in
mov
sahf
push
js
push
in
push
pop
jg
scas
mov
adc
sub
inc
mov
mov
das
or
fst
test
sti
aad
sar
jl
and
bound
(bad)
movs
sbb
das
mov
in
adc
xchg
nop
ror
mov
fcomp
aas
adc
mov
fadd
int
add
mov
sbb
inc
sbb
xor
xchg
cmps
mov
shl
and
leave
push
ja
jg
pop
hlt
jl
stos
jge
stos
jo
xchg
mov
cdq
mov
mov
cmps
in
fild
mov
mov
push
sbb
sub
jno
or
xor
xchg
(bad)
icebp
pop
cmp
cwde
ins
sbb
lea
stos
pop
test
inc
cli
icebp
(bad)
dec
inc
scas
popf
or
popa
sub
call
ret
retf
jmp
ret
scas
(bad)
cmp
(bad)
retf
movs
sbb
pop
add
jle
xor
lahf
push
sbb
pop
fstp
repz
and
xchg
jmp
push
popf
mov
jnp
adc
push
jle
xchg
inc
pop
arpl
cmp
aas
vmulsd
repnz
test
fldcw
lock
cs
ret
cmps
(bad)
fwait
das
and
pop
inc
dec
add
and
es
jns
je
es
aas
push
mov
adc
popa
jae
out
popf
push
gs
cmps
add
test
or
or
xchg
in
ins
push
and
push
push
mov
mov
dec
daa
push
outs
cmps
sub
cmp
xchg
and
push
stos
loope
mov
pop
aaa
pop
jae
xor
pop
sbb
inc
push
xchg
or
add
loopne
aas
call
call
cs
push
div
pop
sbb
dec
xchg
cmps
push
imul
mov
ss
and
inc
fldcw
adc
les
push
not
pop
push
pop
retf
dec
daa
mov
cli
and
sub
outs
dec
fld
(bad)
cmp
retf
retf
test
inc
cmps
pop
add
push
jp
cmps
les
cmp
sub
pusha
xchg
mov
add
fstp
xchg
and
mov
add
lods
xchg
repnz
sbb
push
bound
lods
icebp
(bad)
int
int
in
les
repz
or
nop
inc
lods
scas
mov
jne
cs
in
mov
add
mov
xchg
cmp
mov
sbb
adc
cmp
pop
popa
ror
adc
lods
sub
push
push
ins
setns
jne
jl
(bad)
cmc
sub
clc
push
inc
sbb
ins
xchg
inc
aad
out
(bad)
repnz
pop
dec
pop
sub
sub
adc
sbb
xchg
ret
ret
popa
data16
cmp
cmp
push
js
add
jmp
jno
shr
pop
push
cld
fmul
mov
mov
dec
pop
js
and
mov
jmp
or
ret
xchg
pop
test
and
inc
ins
xchg
imul
inc
popa
cmp
fild
jne
imul
jmp
gs
sar
mov
lods
fisttp
inc
adc
pop
mov
xlat
sbb
sbb
lds
xchg
sbb
sti
popf
inc
adc
(bad)
mov
and
sbb
aas
pop
int3
cli
sub
or
sbb
pop
inc
(bad)
mov
adc
ret
adc
sbb
(bad)
fimul
inc
push
push
mov
xor
hlt
sub
sbb
mov
jne
inc
push
mov
cmp
sbb
shl
jmp
imul
jg
inc
test
jmp
mov
dec
cmp
popa
cmp
sub
push
int
sbb
aas
repnz
retf
mov
mov
inc
lea
test
imul
fsubrp
sti
or
jno
fnstsw
in
or
rep
arpl
leave
pop
rcr
xchg
hlt
and
aaa
xchg
jae
mov
cli
lods
mov
mov
jl
loop
cmp
xchg
loopne
mov
push
push
ret
shl
sub
cmp
add
sbb
push
xor
repnz
daa
fmul
jnp
or
sbb
push
ret
std
lds
and
xchg
jge
jmp
movs
scas
fcomp
sub
mov
scas
jecxz
sub
call
push
pop
push
push
ins
push
add
push
add
cs
iret
pop
adc
ret
cmp
lock
shl
pslld
mov
dec
push
inc
aas
jae
mov
loopne
fdiv
cmp
inc
(bad)
retf
and
cmp
mov
add
popa
mov
pop
mov
mov
cmp
out
outs
fidivr
push
adc
mov
adc
repnz
imul
aaa
shl
mov
lea
mov
scas
cwde
jg
mov
mov
xchg
xchg
sbb
xor
xchg
daa
bound
arpl
imul
in
sahf
imul
hlt
nop
cmp
fisubr
(bad)
das
inc
cld
out
cld
sub
sti
call
ins
inc
ror
mov
(bad)
jp
or
or
jbe
fadd
cmp
sub
pusha
inc
mov
out
dec
xchg
jae
pushf
bound
pop
cdq
aas
aas
inc
daa
or
clc
add
call
cs
adc
inc
push
add
jnp
mov
jb
add
cmps
jecxz
or
inc
cmp
push
pop
add
(bad)
cmps
dec
or
push
lock
fisttp
pop
div
(bad)
jo
jp
or
xchg
sbb
pop
pop
mov
push
xchg
mov
ds
and
lahf
cld
mov
mov
in
dec
push
pop
mov
mov
add
mov
push
mov
xor
xchg
cdq
cmps
jmp
inc
push
les
mov
pop
or
out
ins
or
xchg
iret
pusha
js
je
in
push
pop
pop
idiv
dec
es
cmps
push
mov
mov
out
(bad)
cmps
mov
xor
xchg
fidivr
jno
lock
push
pushf
scas
sbb
ret
and
dec
js
in
mov
inc
je
cmp
cmp
inc
in
pushf
adc
push
and
aas
add
push
sub
sar
sbb
inc
push
adc
mov
cmp
cmp
aad
cli
mov
adc
(bad)
retf
mov
test
test
xor
imul
out
jge
inc
push
ror
rcr
sub
shl
nop
ja
ror
cwde
call
int
pop
pop
jge
ret
push
adc
mov
and
cdq
out
inc
popa
jne
enter
cmps
or
ret
push
xor
test
sbb
in
clc
dec
nop
test
daa
adc
xor
fst
push
cld
aam
movq
popa
jmp
push
inc
mov
xchg
scas
cmps
push
es
ss
out
xlat
(bad)
sub
add
aaa
xor
rcr
cdq
sbb
or
(bad)
push
shl
cmp
mov
mov
pop
mov
jg
xchg
sti
popa
cmp
mov
push
or
sbb
ins
repz
fcomp
push
jp
lahf
loope
sub
cmps
lods
cmp
push
cmps
jae
retf
fs
add
jg
dec
mov
sbb
dec
mov
jp
add
sbb
into
mov
inc
cmp
stc
cmp
xchg
jmp
syscall
sbb
lods
les
sbb
jnp
ja
cmps
and
sbb
mov
fdivr
jmp
les
psubq
iret
sub
leave
inc
cmc
out
sub
xchg
or
or
xchg
in
xchg
cmps
push
adc
or
inc
pushf
out
in
adc
inc
xrelease
stos
pop
push
sbb
jecxz
inc
push
in
mov
imul
cli
or
imul
das
int3
popf
push
mov
lods
sbb
or
mov
pop
xchg
(bad)
add
sti
cmp
(bad)
ret
xlat
call
out
push
and
cmp
test
int
push
pop
cmp
inc
dec
ficomp
pop
lods
push
sub
mov
test
cmp
(bad)
mov
xchg
dec
pop
sti
jae
cmps
dec
jnp
pusha
jmp
jb
stos
jae
xor
ror
inc
mov
add
cmc
inc
ret
das
aad
dec
sub
jecxz
js
adc
int
pop
lods
or
ret
lods
mov
dec
daa
cmps
push
sti
imul
xor
jo
mov
mov
aad
jae
gs
ret
sbb
rol
mov
(bad)
jp
pop
xor
fidiv
dec
retf
popa
dec
cmc
hlt
stc
cmps
bound
push
in
push
rcr
xchg
scas
jnp
pop
jge
movs
iret
or
inc
push
stos
dec
xchg
xor
and
lock
inc
(bad)
xor
pop
mov
jbe
test
pop
add
or
mov
sahf
inc
mov
mov
in
sti
dec
shl
fsubrp
sub
pop
push
mov
jge
les
mov
mov
cmp
cmp
sbb
cld
dec
push
out
cs
sub
jge
adc
mov
pushf
fdivr
dec
in
mov
sbb
in
cli
rcl
retf
xor
mov
adc
test
inc
mov
aam
es
and
mov
ret
(bad)
(bad)
xchg
inc
js
int3
cmp
sbb
fisubr
cmp
inc
arpl
push
cmp
les
mov
test
stc
jl
(bad)
gs
sti
jne
cmp
int
or
arpl
xchg
das
fisttp
movs
push
jmp
and
add
push
(bad)
idiv
pop
out
dec
mov
jo
aaa
pop
arpl
sahf
out
ins
mov
aam
ss
cs
dec
push
das
addr16
sub
(bad)
mov
cmp
sar
aam
xor
push
fimul
lods
imul
sbb
test
and
fstp
mov
movs
sbb
cwde
dec
shl
sub
aad
adc
arpl
and
jge
push
sbb
sub
adc
cli
test
mov
sub
je
dec
outs
out
imul
in
ins
cdq
loopne
inc
test
pop
(bad)
push
cmp
mov
cmp
xchg
call
sub
pop
aas
daa
lods
or
js
pusha
sti
pusha
xchg
fdiv
enter
mov
cwde
icebp
xchg
xchg
push
mov
das
jne
mov
pop
cli
xor
lahf
mov
sbb
ret
xchg
stos
test
xchg
sti
sub
stc
xchg
mov
mov
inc
add
push
hlt
lahf
fsub
hlt
in
push
pop
ja
adc
sti
push
in
popa
out
mov
mov
daa
sub
pusha
loopne
dec
pop
mov
outs
lds
and
add
imul
test
sbb
cmp
ja
cmps
mov
mov
lods
cmp
and
push
and
inc
jg
or
ja
loope
ds
out
mov
sbb
mov
daa
adc
pop
and
fisubr
sti
add
dec
test
or
stos
push
ins
push
adc
xor
imul
dec
push
loope
mov
add
addr16
add
xor
out
ja
push
mov
mov
xlat
fisubr
mov
mov
ja
call
cmp
xchg
in
mov
or
retf
retf
mov
xchg
sbb
fcomp
adc
push
in
cmc
test
idiv
cmps
xor
fwait
rol
jns
mov
fisttp
in
jmp
jo
add
cmps
int3
jae
lahf
add
mov
or
shl
and
(bad)
cs
jecxz
fsubr
mov
repz
popa
push
stos
xor
cli
out
xchg
jg
test
pop
ins
push
add
rcl
mov
and
pop
int3
adc
jg
adc
dec
jno
sbb
das
or
mov
xor
aas
or
xor
ror
mov
stos
mov
rcl
jae
dec
loope
mov
ds
mov
pusha
cwde
dec
add
mov
ds
pop
fld
mov
std
imul
adc
fmul
imul
sub
xor
loop
or
xor
stos
sbb
dec
popa
dec
cwde
jp
sub
lods
mov
xchg
ds
add
je
push
aaa
xchg
sbb
cs
xor
rol
jne
repnz
sub
dec
mov
shl
(bad)
popa
push
pop
in
sub
mov
repz
mov
gs
xchg
leave
fs
sub
ins
jmp
sub
xor
ds
jno
and
jg
test
cdq
mov
pop
cmp
or
fistp
xchg
fs
rcr
popa
inc
hlt
jl
das
pop
mov
sbb
and
add
daa
imul
push
out
mov
adc
call
or
sub
mov
inc
scas
push
mov
inc
dec
push
repnz
sub
xchg
or
cmc
arpl
adc
jb
cmp
enter
loope
sub
xchg
jns
sbb
lahf
sub
mov
(bad)
ja
adc
in
jmp
inc
mov
test
add
add
fisttp
adc
mov
std
aaa
aad
fiadd
add
or
aas
mov
(bad)
adc
mov
sbb
xor
push
sub
icebp
fmul
mov
cmp
inc
mov
cmp
aam
adc
mov
xchg
rcr
int3
stos
sbb
xor
repnz
jp
cli
fnstsw
pop
sbb
lock
add
push
je
sbb
push
mov
add
xchg
xabort
inc
and
sub
mov
repnz
xor
mov
iret
out
punpckhbw
js
push
jp
mov
jge
aaa
data16
mov
sbb
dec
xchg
stos
pop
mov
push
inc
fistp
jmp
pop
push
or
adc
sub
fpatan
lods
outs
jl
retf
fbstp
fisttp
sti
push
adc
movs
xor
loope
ret
or
fld
fmulp
scas
mov
mov
dec
lods
push
push
inc
xchg
push
pop
movs
sbb
lods
jmp
cmp
sub
mov
sahf
test
aad
jge
sbb
mov
out
dec
hlt
mov
jmp
popf
loopne
cld
add
mov
sub
je
sub
ds
movs
xchg
mov
(bad)
push
mov
sbb
lea
adc
ror
push
sbb
mov
lahf
inc
mov
xchg
mov
ja
mov
cdq
mov
push
icebp
fnstenv
cmp
retf
push
scas
inc
rcl
neg
xchg
pop
mov
in
and
sbb
add
cmp
adc
sub
icebp
loop
imul
mov
xor
scas
mov
scas
scas
inc
in
xchg
or
loopne
mov
mov
test
pop
nop
gs
mov
push
cmps
sub
popa
push
movaps
dec
aam
push
rcl
pxor
mov
push
push
rcr
mov
iret
pusha
inc
fnstcw
sub
xlat
xchg
sbb
lock
inc
lds
xor
inc
xchg
in
imul
pop
les
push
(bad)
push
stos
rcl
sbb
or
fiadd
nop
scas
jbe
cwde
dec
mov
lds
bound
cs
mov
cmp
mov
xlat
sbb
test
sar
and
jbe
pop
(bad)
xor
cld
call
pusha
mov
enter
pop
outs
nop
data16
sahf
push
push
jge
pop
or
lock
dec
inc
jne
ds
stc
arpl
scas
ss
(bad)
loope
pop
mov
mov
pop
dec
inc
cs
mov
arpl
fisttp
pop
movs
sbb
int3
add
sub
dec
daa
call
dec
and
test
mov
leave
sar
push
out
icebp
mov
in
test
outs
js
or
inc
out
rcl
sbb
call
out
inc
push
bound
packsswb
mov
mov
inc
sbb
jl
lds
push
xor
mov
adc
sub
test
pop
repz
pop
in
ret
arpl
add
test
movs
leave
mov
push
pop
xor
sbb
outs
dec
adc
mov
jecxz
inc
xlat
mov
(bad)
outs
and
aaa
mov
cli
leave
pushf
dec
pop
loopne
aas
aas
mul
(bad)
cli
mov
stc
sbb
jae
dec
or
fistp
in
lods
jge
or
pusha
aaa
and
arpl
lock
(bad)
adc
jmp
bound
cmp
daa
cmps
push
shl
test
jmp
stos
fisubr
xor
xor
dec
mov
xor
outs
aad
or
bound
add
mov
push
cli
push
lahf
adc
pop
sbb
xlat
imul
mov
inc
mov
out
jp
rcr
enter
cdq
fs
pushw
inc
out
sub
aas
mov
rcl
jg
cld
and
into
cs
dec
(bad)
push
push
push
xchg
sbb
add
add
add
iret
dec
pop
gs
stc
bound
or
cmp
inc
sub
add
dec
add
cmp
(bad)
icebp
xor
stc
jecxz
fstp
bound
jo
dec
stc
or
adc
adc
pop
stc
pop
sbb
and
push
das
les
jle
stos
and
bound
xlat
fistp
or
fld
call
aas
push
ds
xchg
xor
pushf
jge
or
(bad)
loopne
dec
mov
mov
(bad)
mov
loope
(bad)
or
movs
jecxz
sub
jmp
(bad)
stos
xor
add
out
xlat
xchg
mov
xchg
in
cli
xor
stc
mov
repz
add
sbb
or
xchg
push
and
push
and
sbb
sub
inc
outs
imul
pop
xor
test
and
test
dec
sar
push
xchg
ins
sti
push
add
pop
cdq
icebp
adc
std
movs
in
rcr
cwde
adc
lods
adc
or
sbb
sbb
xor
out
push
out
jle
add
jmp
jmp
xlat
mov
push
not
fsub
pop
push
mov
mov
jmp
cmp
sbb
(bad)
pop
mov
out
(bad)
les
sub
leave
les
jmp
(bad)
adc
bound
jo
fcmovbe
add
pop
dec
sub
or
cmp
and
rcl
xor
mov
(bad)
out
ficomp
adc
push
movs
mov
leave
pop
int
push
cmp
js
pop
pop
mov
jmp
mov
sbb
lods
inc
push
mul
jno
xchg
cli
or
int3
pop
xor
call
mov
imul
jnp
(bad)
adc
mov
or
ds
in
aad
or
jg
hlt
push
sbb
or
push
mov
mov
mov
stos
bound
add
pop
pushf
daa
out
pushf
xchg
mov
and
shl
aas
lea
sub
xor
or
lahf
fistp
ret
jb
sbb
pop
imul
add
ss
push
jb
and
add
shl
jecxz
mov
lea
cmp
mov
and
add
mov
cmp
xor
fstp
jns
push
out
dec
push
out
sbb
imul
or
jecxz
mov
out
pop
xor
popw
pop
dec
in
cwde
stos
cmp
retf
mov
push
sub
push
addr16
fwait
mov
imul
test
jne
and
(bad)
call
lds
mov
out
or
test
rol
jno
xor
(bad)
out
int3
int
or
jnp
fisub
icebp
cmp
aas
pop
ja
(bad)
xlat
push
mov
jo
mov
ficom
or
cmp
and
(bad)
jecxz
jg
lods
retf
jp
movs
jns
fld
sbb
es
jmp
add
push
mov
cmp
sti
jmp
(bad)
add
push
cld
gs
(bad)
(bad)
adc
mov
push
add
inc
push
jg
xchg
rcr
mov
icebp
out
dec
aam
jb
push
push
sub
sub
xchg
push
cmp
rcr
inc
aad
and
data16
xor
inc
adc
xchg
cli
cmp
jno
sub
xor
inc
movs
aam
je
push
sbb
xor
enter
dec
ret
ret
dec
test
into
sub
cmps
add
das
jae
inc
push
mov
and
mov
mov
test
mov
or
mov
dec
mov
ins
rol
dec
lea
sbb
popf
sbb
xchg
and
push
call
xchg
cmp
sbb
div
jb
addr16
dec
jmp
push
loopne
je
sbb
pop
xchg
xor
xor
mov
push
mov
jmp
(bad)
test
dec
sbb
in
dec
lods
inc
xchg
push
stos
cmc
es
pop
or
mov
push
test
adc
stos
rcl
popa
movs
scas
jle
sbb
sahf
mov
mov
mov
inc
in
cli
pop
stc
cmc
sti
imul
push
add
mov
adc
xor
mov
retf
frndint
and
dec
cmp
stos
inc
(bad)
pop
int
xor
retf
jmp
mov
sbb
repz
mov
mov
jp
push
stos
push
dec
loopne
pop
sti
sub
(bad)
mov
mov
or
jg
(bad)
mov
fsubr
into
imul
jle
ror
sub
les
push
(bad)
mov
pop
sar
sub
mov
mov
mov
jno
jl
data16
bound
xchg
fdiv
(bad)
push
popa
leave
pushf
mov
hlt
and
mov
inc
push
cmp
call
add
jmp
cmp
call
xchg
(bad)
fcomp
out
fcomp
in
dec
push
repnz
inc
mov
rol
mov
dec
push
(bad)
and
push
adc
pop
lods
(bad)
es
adc
lock
push
cwde
xor
xchg
mov
ror
sub
mov
adc
popf
xchg
and
int3
popf
inc
fdiv
inc
movs
cmps
xor
pop
adc
lahf
ror
imul
sub
fdiv
xor
adc
mov
cmps
push
add
inc
pop
retf
pop
out
xor
jmp
adc
call
cmp
jmp
sar
jne
dec
data16
mov
or
add
adc
ins
jo
cvtdq2ps
mov
xor
sbb
jp
jmp
push
cmc
and
push
ds
fist
jmp
inc
xchg
mov
add
or
pop
pusha
lea
in
fwait
xchg
(bad)
int
sbb
cmp
bound
and
lea
test
fsubr
add
fwait
in
test
or
cmc
sub
dec
aad
inc
sub
pop
sbb
pop
or
popa
(bad)
mov
add
cmc
dec
add
push
das
mov
fiadd
je
icebp
jo
cdq
daa
xor
inc
xchg
pop
test
les
test
imul
or
xchg
mov
cmp
or
add
pop
mov
inc
xor
in
jo
dec
retf
movs
std
jg
movs
mov
mov
out
cld
and
and
iret
aaa
(bad)
mov
inc
xor
(bad)
addr16
adc
ins
adc
adc
iret
mov
mov
push
xchg
mov
push
or
neg
daa
mov
scas
sbb
cmp
jnp
fnstenv
ins
push
cmp
xor
enter
loopne
add
pop
mov
and
fcmovb
(bad)
es
jb
sub
sbb
imul
mov
pop
mov
add
dec
sti
pop
pop
mov
and
inc
test
sbb
aas
mov
add
outs
les
pusha
xchg
xor
mov
shl
mov
push
in
mov
icebp
mov
mov
jg
or
pop
mov
adc
dec
xchg
and
jge
retf
ss
mov
out
dec
jmp
(bad)
inc
(bad)
push
xchg
xchg
add
lock
mov
or
or
out
sti
push
and
mov
cs
sti
movs
dec
aas
add
xchg
test
fnstcw
ficomp
inc
or
push
push
aas
div
sbb
push
pop
cmps
push
dec
pop
xchg
add
add
adc
jg
lea
pop
dec
scas
jge
dec
jle
icebp
nop
cli
pop
dec
adc
lods
inc
(bad)
jge
dec
mov
outs
popa
test
xor
mov
mov
inc
lea
pop
mov
fisttp
mov
sub
and
dec
scas
imul
mov
mov
(bad)
xor
xchg
jle
mov
xor
push
call
sub
and
dec
xor
fwait
lahf
and
xor
repnz
shl
xchg
scas
popf
push
pop
movs
jno
mov
pop
imul
push
mov
fdivrp
sti
xor
scas
fdivr
xchg
inc
xchg
out
enter
je
xor
cmp
aad
fist
into
jae
out
test
jge
retf
jns
mov
or
or
ror
aad
jne
(bad)
sbb
jno
sub
into
fs
out
and
xlat
adc
and
jecxz
jp
mov
dec
cli
into
pop
(bad)
adc
or
pop
outs
loopne
dec
shr
dec
rcl
arpl
add
movs
jmp
fidivr
lahf
nop
ins
xlat
or
sub
js
sar
push
add
mov
mov
dec
data16
fs
push
mov
fld
sub
pushf
out
fsubr
xchg
test
pop
fbld
pop
aad
imul
mov
mov
fisttp
hlt
adc
ja
scas
and
xchg
imul
add
cdq
pop
sub
out
imul
cmps
lods
mov
aaa
shr
in
push
sti
mov
mov
adc
(bad)
xor
mov
sub
retf
xor
call
pop
call
loope
inc
ror
mov
cmc
in
dec
sub
ds
xchg
adc
xor
out
jae
mov
xchg
xor
push
xchg
adc
push
mov
pushf
push
test
nop
bound
inc
xor
idiv
push
(bad)
test
loopne
loope
add
jno
xor
test
mov
cmp
mov
(bad)
fcomi
push
in
scas
mov
pop
std
mov
bound
xchg
ret
jmp
jecxz
pop
pop
or
push
mov
ror
dec
stos
imul
xchg
das
fdiv
inc
loope
mov
loope
retf
fs
mov
and
cdq
into
mov
lods
loope
ret
xchg
lock
cmp
mov
repnz
ret
dec
or
sub
jmp
shl
sbb
cli
ins
retf
adc
or
fcomp
or
les
lea
fwait
aas
lods
fs
jnp
xor
or
(bad)
into
call
jle
aam
loopne
inc
retf
sub
mov
jmp
mov
jecxz
inc
daa
(bad)
push
pop
lods
jmp
mov
ins
fild
jns
xchg
in
outs
sub
sahf
or
jns
mov
into
dec
pushf
test
ins
daa
jl
push
sbb
push
lods
pop
sub
push
fisubr
cwde
jge
jo
imul
(bad)
cmp
cwde
jmp
sbb
daa
lock
jmp
int
outs
mov
ret
xor
adc
xor
pop
push
icebp
inc
out
ins
jecxz
sub
and
pop
out
inc
outs
not
jmp
pop
mov
adc
movs
xchg
ret
nop
mov
nop
aam
mov
aad
add
cmc
xchg
ins
loop
mov
or
dec
repnz
mov
mov
(bad)
pop
and
adc
add
in
inc
cli
cmp
cld
clc
sahf
xchg
pop
out
pop
sbb
dec
jno
(bad)
sub
mov
pop
hlt
push
push
outs
pop
or
cdq
pop
pop
add
jno
add
daa
adc
xchg
sbb
hlt
xchg
dec
ja
xor
cld
pop
inc
and
popf
pop
jle
add
add
shl
push
jl
jmp
scas
mov
movs
aaa
pop
dec
push
sbb
mov
fisttp
xchg
leave
mov
jns
inc
add
es
mov
daa
adc
cmp
adc
adc
add
loope
jge
fistp
mov
and
jmp
mov
stos
fdivr
mov
(bad)
pushf
xor
ins
jno
neg
lods
nop
mov
jo
inc
push
inc
dec
pop
adc
mov
sbb
xor
stos
sti
popa
nop
(bad)
and
mov
dec
out
shl
retf
test
ret
icebp
out
dec
mov
mov
and
(bad)
mov
pop
push
mov
or
mov
cli
add
stos
add
pusha
mov
jns
pop
jmp
inc
fiadd
rol
aad
pushf
inc
xor
sub
outs
les
sbb
cmps
pop
sbb
mov
gs
or
mov
sbb
sbb
nop
xchg
push
leave
ins
sub
xchg
scas
mov
loopne
jmp
sbb
jns
and
add
dec
add
inc
sub
pop
mov
add
cmp
jns
ficom
push
ja
push
movs
js
jns
jg
add
jnp
mov
scas
ins
xor
outs
jb
push
xor
popa
shr
ss
sub
mov
ror
mov
xchg
lea
pop
imul
sahf
lods
or
cmps
inc
ffreep
xchg
(bad)
aas
lea
cmp
movs
pop
xor
(bad)
fadd
or
xchg
add
dec
outs
das
sbb
repz
mov
sbb
or
arpl
mov
icebp
jnp
ror
add
push
test
cmps
xor
bound
mov
push
popa
into
mov
pop
enter
lods
lods
fnstcw
test
in
mul
pop
lock
call
inc
inc
or
mov
pop
cmps
and
es
push
mov
adc
add
(bad)
mov
dec
xor
jl
jl
push
or
ins
jle
neg
scas
mov
xchg
jle
cmp
mov
test
add
mov
sbb
jp
mov
fwait
push
ret
mov
push
test
fbld
cmp
add
dec
(bad)
jp
jg
shl
jb
xchg
lahf
sub
dec
jmp
jl
add
jb
aam
cmc
fdivr
stc
or
mov
in
inc
test
psubusb
cs
ret
repz
adc
ret
stc
call
push
add
jmp
fcomp
imul
push
cmps
cmp
and
movs
add
jecxz
mov
pop
(bad)
pop
xchg
mov
pop
pop
arpl
and
lds
pusha
xchg
rol
lahf
xchg
pop
test
outs
ins
jbe
add
pop
(bad)
mov
push
scas
cmc
or
je
jo
inc
cmc
fs
ss
sub
inc
aaa
sub
ds
js
adc
push
add
ins
dec
dec
hlt
or
and
xor
dec
hlt
cwde
xlat
inc
mov
and
add
jl
cdq
push
jmp
mov
fst
dec
mov
push
icebp
ja
mov
(bad)
sahf
cld
js
scas
call
inc
and
retf
das
push
test
add
push
jge
dec
loopne
pop
in
test
bound
iret
or
pop
inc
movs
repz
or
add
or
ret
retf
popf
pop
pcmpeqd
push
pop
iret
push
retf
aaa
das
pop
adc
jns
movs
xchg
(bad)
xor
and
jnp
aad
test
arpl
push
lock
cld
inc
loop
aaa
cmps
pop
aas
mov
dec
test
push
jbe
xor
(bad)
out
mov
xchg
ins
cs
or
push
jbe
inc
push
in
add
sub
inc
bnd
mov
hlt
sar
leave
add
push
movups
test
xor
leave
out
or
jnp
out
pop
pop
js
repz
(bad)
mov
mov
rcr
pop
mov
das
cld
sbb
add
int
and
push
loop
sbb
pop
mov
jae
mov
xor
sbb
xchg
into
fimul
cmps
xor
sub
int3
push
retf
retf
out
aam
mov
leave
(bad)
jnp
stc
lds
cmp
cdq
icebp
jno
mov
inc
or
jge
enter
mov
mov
movs
sbb
test
pop
aaa
popa
cmp
and
test
stos
ror
cmp
ja
jl
or
sbb
outs
in
sub
mov
xchg
jmp
sbb
or
mov
dec
cs
ins
mov
or
sbb
bound
nop
cmp
jp
xor
jae
jle
inc
adc
mov
stc
sbb
(bad)
or
pop
push
hlt
push
mov
aas
ror
ficomp
fwait
cmps
xor
push
out
jp
jecxz
pop
cwde
cmp
inc
jne
push
push
out
pushf
pop
sub
pop
ins
push
pop
sbb
sub
jp
test
int
push
mov
sbb
iret
adc
lods
aad
cmp
into
fprem
push
scas
mov
jl
loop
aam
ja
int3
mov
sti
out
movs
mov
dec
inc
mov
cmp
fld
cmc
xor
dec
out
push
scas
fdiv
sub
add
pop
or
int3
mov
aas
or
pop
shr
(bad)
xchg
test
add
xchg
jo
cmp
jns
or
idiv
das
jne
jle
daa
pop
add
inc
(bad)
mov
add
in
lea
mov
bound
jne
int
push
jg
add
mov
ss
movs
(bad)
ds
mov
and
sub
pop
lea
inc
xchg
rol
push
out
or
cmps
adc
(bad)
sub
xchg
pop
stc
int
mov
adc
mov
push
add
scas
sbb
adc
not
outs
cmp
shl
jg
add
neg
sbb
test
pop
sbb
clc
push
out
sahf
cmc
cs
jne
fisttp
mov
ins
adc
and
idiv
nop
out
jle
shl
xchg
cmp
and
add
repz
(bad)
ja
frstor
xchg
jnp
repz
push
jmp
mov
mov
mov
mov
push
dec
mov
jl
pushf
inc
loop
xor
cmps
idiv
sahf
push
outs
adc
hlt
mov
test
and
das
or
push
pop
push
enter
mov
cmp
aad
push
mov
dec
xor
popf
xchg
lahf
nop
test
imul
pusha
jmp
test
mov
jge
or
icebp
xchg
out
shl
pop
cmps
jne
mov
mov
fisttp
sub
(bad)
push
(bad)
cli
je
mov
dec
cwde
fprem1
inc
dec
(bad)
into
xor
add
add
pushf
jmp
stos
mov
push
in
add
mov
outs
imul
aaa
sbb
clc
les
xchg
cmps
pop
hlt
push
push
ret
mov
jl
xchg
call
dec
xchg
push
xlat
outs
neg
inc
push
popf
jmp
addr16
mov
sbb
shl
in
movs
leave
(bad)
lods
inc
test
dec
ins
lea
(bad)
(bad)
out
lods
adc
in
sbb
shl
popf
popa
inc
inc
or
xlat
mov
fsub
sub
xchg
(bad)
or
movs
enter
dec
call
daa
mov
adc
ror
sbb
jmp
inc
sub
and
adc
mov
stos
loop
loopne
in
add
sti
in
cmc
and
fisub
shr
sbb
cmp
leave
or
jae
retf
pushf
arpl
inc
pusha
pop
xchg
call
fdiv
(bad)
adc
push
jae
xchg
mov
cmp
xor
sub
out
mul
or
daa
cmp
retf
or
stc
sub
(bad)
lock
pop
pop
cld
sbb
rol
iret
xor
mov
adc
in
out
sbb
add
sbb
clc
inc
dec
stos
adc
stos
fwait
sbb
and
(bad)
stos
movs
mov
test
out
loop
mov
aad
lahf
cdq
popf
add
out
fyl2x
xchg
pushf
mov
fwait
adc
retf
out
nop
into
fucom
jmp
xchg
(bad)
mov
pop
cmp
jbe
mov
ror
leave
xchg
fwait
int3
cmp
popa
pop
test
retf
push
xchg
(bad)
bound
or
cmp
cmp
retf
sbb
ret
addr16
cmps
outs
mov
xchg
mov
arpl
sbb
in
out
mov
(bad)
(bad)
iret
je
sub
sbb
pop
lods
movs
and
push
push
inc
fst
or
(bad)
pop
push
arpl
and
xchg
enter
and
(bad)
push
push
push
ins
push
and
jl
aam
sbb
sub
in
scas
cmp
xchg
jmp
jo
mul
cmps
sub
push
xchg
cmc
mov
lods
sbb
adc
cld
rcr
mov
mov
fbstp
mov
dec
sbb
push
add
mov
or
xor
gs
imul
fidiv
mov
test
mov
call
adc
call
mov
out
or
nop
xor
jle
sbb
dec
icebp
or
jae
ret
cmp
jns
int
test
pop
iret
ret
sbb
push
(bad)
out
popf
sbb
and
test
jno
xor
cmps
mov
cmps
ins
add
jb
call
(bad)
push
fstp
in
outs
dec
push
sub
inc
test
mov
inc
mov
(bad)
jge
movs
push
sbb
outs
je
sub
movs
inc
pop
or
xchg
adc
mov
cmp
jg
stos
inc
pop
sub
xchg
push
outs
retf
call
cmp
dec
mov
mov
out
xchg
dec
jp
mov
xlat
cmp
aad
pop
arpl
dec
or
push
jnp
neg
gs
lea
(bad)
dec
nop
lock
shr
cmp
outs
jns
mov
xchg
lods
add
dec
scas
add
das
or
xchg
adc
int
fucomp
sbb
jnp
gs
mov
stc
ret
adc
cmc
out
sbb
(bad)
mov
int3
jne
mov
test
shl
jg
int3
or
and
popf
mov
jb
xor
adc
sub
fidivr
xlat
ret
popf
xchg
test
inc
push
rcl
sbb
ror
adc
xchg
and
sbb
push
fs
mov
icebp
in
add
repz
shr
loope
xor
mov
fidivr
in
and
sbb
add
mov
push
fsubrp
ja
dec
mov
pop
scas
xchg
mov
add
cmc
push
xor
sbb
ja
add
iret
xchg
xchg
ss
cmps
xor
std
fcmovbe
dec
popf
(bad)
js
inc
out
fcmovnu
or
sbb
call
lea
rcr
fidiv
inc
shl
addr16
dec
mov
(bad)
test
jmp
mov
jb
mov
cs
mov
xchg
loopne
sub
imul
fidiv
mov
nop
push
lsl
xchg
cli
cli
xchg
mov
dec
push
(bad)
(bad)
das
pop
mov
push
or
adc
pop
loopne
xlat
mov
and
popf
adc
in
das
out
ja
xor
and
cmps
popf
(bad)
xor
fwait
in
pop
pop
push
mov
xchg
retf
rol
inc
dec
dec
je
jmp
mul
sub
mov
in
test
inc
add
cwde
arpl
mov
in
shl
xor
xlat
das
iret
cmps
lds
retf
mov
cmps
jbe
(bad)
lds
lahf
test
xchg
pop
sub
jmp
sbb
in
pop
xchg
mov
mov
sub
xchg
adc
or
mov
test
pop
icebp
xchg
xchg
aas
iret
jge
mov
rcr
xor
scas
mov
loop
inc
movs
rcr
enter
ins
bound
aas
mov
lea
inc
in
into
jmp
int
sub
adc
mov
sbb
or
push
or
jp
pop
mov
cmps
movs
jmp
pop
xchg
mov
(bad)
push
mov
jno
jne
pop
ds
jno
sbb
cld
cdq
mov
sub
or
fiadd
cli
stc
das
dec
aad
or
popf
test
cmps
loope
dec
dec
or
sbb
pushf
sbb
loope
jnp
cmps
mov
les
jecxz
mov
jg
stos
add
jecxz
in
pop
push
add
dec
adc
les
icebp
and
out
dec
aam
sub
fist
mov
jo
sub
and
mov
dec
(bad)
cs
out
loope
faddp
dec
daa
sbb
retf
push
push
rcr
add
daa
enter
clc
or
jae
and
inc
pop
sti
xchg
aam
dec
mov
fs
test
repnz
(bad)
mov
sub
push
clc
retf
xor
jno
pop
(bad)
jge
mov
and
rol
(bad)
mov
fmul
dec
aas
adc
cmps
pop
jns
add
rcl
xor
ret
cli
es
push
dec
sub
ds
add
or
fs
in
lahf
outs
std
stos
push
xchg
lahf
and
or
adc
call
xor
jmp
mov
sub
mov
and
xor
pop
pop
rcl
retf
jmp
pop
aad
retf
call
cmp
xchg
xchg
sbb
cmp
sub
(bad)
xchg
fdivrp
inc
push
xor
jne
pop
and
and
call
adc
ret
in
repnz
xor
jno
lods
mov
test
int
dec
dec
or
dec
mov
das
sub
sub
fcomp
pop
and
cmp
mov
scas
jne
sbb
push
fdivr
loop
arpl
arpl
cmp
int3
sub
xor
(bad)
rol
cmp
das
into
push
test
sbb
ret
cmp
jne
jno
pop
mov
pop
(bad)
bound
push
sbb
xor
xchg
lock
scas
mov
hlt
push
xor
aam
push
(bad)
jns
inc
arpl
test
push
mov
into
mov
jnp
retf
into
cdq
in
sub
push
scas
xchg
and
fdivr
ss
cmp
mov
xchg
xor
add
pushf
fld
mov
rol
mov
adc
push
adc
cmp
cmps
dec
cmp
ror
or
pop
stc
(bad)
push
push
push
fisubr
int3
and
fldcw
fwait
stos
jae
add
clc
movs
mov
nop
mov
out
and
cmp
test
leave
jb
sub
inc
test
mov
mov
inc
push
clc
ret
int
js
ss
xor
and
into
sbb
jmp
jecxz
xchg
pop
and
es
loope
jnp
in
adc
jmp
push
div
jne
lods
retf
mov
popa
push
add
xor
jno
dec
or
clc
inc
cwde
and
fdivr
mov
rcr
xor
inc
ud1
xor
popa
xor
cmp
sbb
fld
sub
lods
pop
div
lds
and
add
push
imul
push
xchg
push
std
scas
push
fwait
add
mov
and
push
jle
xchg
and
add
fs
xor
add
fld
sahf
mov
cmp
inc
mov
clc
int3
sub
in
dec
mov
out
or
push
push
pop
jns
imul
sub
(bad)
mov
clc
popf
and
(bad)
in
outs
fidiv
out
dec
push
or
shrd
fidivr
cli
cdq
ficom
cmp
inc
and
je
dec
loopne
je
mov
sti
jg
out
mov
into
std
pop
(bad)
jecxz
cmp
cwde
shr
inc
jecxz
sbb
in
inc
mov
push
std
push
js
sbb
call
dec
fmul
pop
lahf
dec
xor
mov
xchg
call
out
call
popa
sbb
icebp
dec
(bad)
fmul
out
and
add
and
test
push
daa
ror
out
cmps
mov
and
mov
sbb
jmp
jne
sub
xchg
pop
pop
adc
repnz
repnz
xor
fnstenv
inc
adc
enter
push
mov
mov
lahf
dec
mov
(bad)
enter
outs
shr
and
dec
mov
cdq
(bad)
sub
(bad)
sti
pop
jne
cmp
mov
lahf
dec
xchg
ins
dec
add
je
xor
pusha
and
add
fadd
std
mov
cmp
push
mov
fdiv
sub
jmp
jb
push
dec
ds
in
mov
dec
daa
repz
push
mov
or
cmp
mov
adc
addr16
test
fnop
mov
cmp
adc
or
add
fstp
mov
jp
lds
data16
inc
stos
dec
rcl
pop
popa
movs
sub
in
outs
out
inc
out
pop
enter
lock
dec
iret
fld
int3
dec
or
lahf
cmp
and
push
sbb
or
cwde
or
cmp
jo
and
movs
adc
fcom
dec
scas
mov
mov
mov
int3
jge
mov
sbb
sub
xor
jb
shl
js
push
pop
iret
mov
inc
xor
ret
jbe
fld
inc
mov
cmc
add
imul
mov
icebp
out
add
xchg
test
xchg
mov
(bad)
dec
cmps
shl
pop
pop
inc
mov
fwait
rol
mov
pop
test
inc
jg
cmp
and
and
in
dec
stc
(bad)
and
lods
jmp
mov
out
jmp
ja
mov
cmp
cdq
fadd
pop
cdq
mov
or
dec
adc
fnstenv
in
cmp
and
call
mov
je
jmp
movs
or
ja
aad
outs
fisttp
fwait
jnp
or
mov
mov
shl
cmc
popf
dec
inc
nop
jno
(bad)
sbb
fidiv
in
cmp
push
push
cli
pop
pop
xchg
sahf
test
imul
in
stc
mov
pop
mov
mov
mov
inc
(bad)
adc
cld
loope
outs
loopne
sub
mov
cdq
jle
xchg
ins
outs
fisub
test
arpl
or
xor
hlt
push
lods
sbb
mov
call
pop
in
mov
xor
cmp
inc
ret
add
(bad)
retf
inc
ficom
adc
popa
call
mov
aad
and
test
ror
loope
push
adc
and
(bad)
mov
cmovle
leave
out
xchg
std
test
adc
imul
pop
stc
lds
ja
sub
in
sub
pop
pop
pop
mov
stos
mov
push
stos
cmp
xor
into
sbb
retf
sbb
aam
xor
lahf
fdivr
dec
cs
cmc
int
add
ret
pop
cmp
ja
xor
mov
je
ins
cmp
outs
xchg
shr
je
ficomp
shl
sbb
cmp
sahf
cmp
test
xchg
call
out
enter
xchg
les
adc
jne
cs
pop
sub
adc
jg
mov
dec
inc
arpl
jo
sbb
xchg
xor
mov
mov
test
cli
mov
fiadd
call
(bad)
mov
jp
xor
hlt
pop
jmp
jmp
mov
sub
bound
(bad)
stos
sbb
(bad)
mov
mov
jae
xchg
jmp
scas
enter
xchg
inc
scas
popa
dec
fdivr
ret
mov
fdivp
pop
loope
mov
mov
inc
aas
or
mov
push
dec
lds
mov
imul
(bad)
bound
test
(bad)
jne
stc
test
fcmovnu
jbe
push
ret
mov
ins
sub
mov
dec
icebp
scas
push
sbb
(bad)
ret
dec
(bad)
mov
in
mov
mov
vmovshdup
push
inc
adc
xor
dec
and
jmp
adc
(bad)
(bad)
or
mov
mov
mov
ss
inc
fiadd
fsub
cmp
mov
or
mov
(bad)
jmp
pop
retf
sub
jle
aad
cdq
add
fsubr
and
inc
repz
rol
inc
fistp
pop
mov
cdq
sub
push
mov
dec
out
sub
pop
mov
xor
pop
adc
fisubr
dec
mov
repz
sbb
mov
fisubr
sbb
cmp
xor
and
inc
daa
in
fisubr
or
je
std
fs
add
mov
sar
(bad)
fcmovb
mov
fwait
pop
outs
sub
(bad)
pop
aam
xchg
pusha
push
mov
enter
mov
aad
push
dec
mov
mov
or
call
mov
mov
jle
jmp
cmp
mov
mov
fcos
xor
lea
push
int
daa
int3
mov
out
push
cmp
or
add
xchg
push
cmp
mov
xor
call
inc
mov
cmps
fwait
dec
jg
inc
cmp
fisub
stos
jg
mov
in
dec
jecxz
imul
dec
pushw
cmps
pop
call
retf
push
push
cmps
or
into
das
in
cmps
pop
mov
xor
and
mov
dec
movs
cmp
jno
pop
or
add
or
fwait
mov
dec
gs
and
fchs
cmps
pop
sbb
add
sub
loopne
(bad)
jl
lea
sub
daa
popf
mov
jg
retf
mov
jg
inc
pop
pop
popf
or
stc
add
pop
dec
and
xchg
ss
xchg
jb
(bad)
sub
cmp
cdq
test
into
inc
inc
pop
sbb
fst
add
xor
push
out
and
mov
ret
inc
inc
and
adc
cmp
dec
xchg
cli
mov
iret
pop
int3
pusha
inc
jmp
test
push
mov
shr
sub
mov
add
and
jne
shr
outs
xor
cld
push
ret
add
retf
mov
jns
sbb
addr16
add
popa
int
pop
dec
cmps
push
push
and
fmul
jnp
cmps
sbb
sub
jbe
pusha
mov
adc
retf
dec
inc
sub
mov
ds
push
jecxz
fisttp
push
sub
cmps
dec
lea
lds
xor
xchg
icebp
movs
call
mov
fdivr
in
les
das
dec
pushf
scas
fwait
mov
call
jmp
jae
jecxz
jl
cmps
add
pminub
push
jecxz
sti
mov
popa
jge
fsub
popa
mov
xor
xchg
adc
xor
stc
mov
and
sti
movs
(bad)
pusha
jmp
std
loope
out
lea
mov
inc
jl
xor
push
mov
cmp
out
and
imul
jo
in
xor
sub
(bad)
mov
jg
popf
mov
and
sar
call
jecxz
loope
cli
js
sahf
mov
test
adc
rcr
sub
push
bound
jmp
add
dec
jmp
mov
push
test
das
and
jl
xchg
mov
and
inc
ins
cs
jnp
and
jge
pop
(bad)
mov
addr16
pop
mov
sub
mov
add
div
repz
js
dec
ffree
les
jmp
mov
repz
into
jge
xlat
add
js
aas
xor
ja
adc
hlt
es
adc
jb
jp
repz
je
sub
adc
mov
dec
lea
into
dec
push
pusha
loope
aas
adc
aaa
cmps
dec
or
add
call
call
aas
std
or
inc
(bad)
imul
icebp
add
dec
dec
xchg
add
fs
jno
sub
stos
aas
fsub
push
lock
call
scas
dec
add
pop
stos
jmp
cdq
and
pop
inc
ret
dec
nop
add
cmp
mov
int3
call
in
add
scas
cld
cmp
ins
sahf
cmp
push
loop
pop
out
mov
bound
enter
xchg
aam
dec
xor
add
or
jnp
loope
jbe
ins
ror
retw
ins
stos
sub
sub
xor
mov
adc
pop
and
icebp
add
push
and
aam
pop
add
ja
pop
or
loopne
xor
sub
cmps
nop
mov
inc
hlt
(bad)
jmp
outs
mov
shr
fadd
xor
jns
xor
mov
inc
or
arpl
add
aaa
or
ins
rol
into
not
fadd
sub
lea
adc
mov
out
fdiv
ins
popf
pushf
stos
push
(bad)
xlat
push
addr16
sub
or
cmp
mov
add
cmps
fs
xor
out
adc
(bad)
mov
mov
out
pop
pop
(bad)
outs
push
lahf
mov
adc
push
fld
cld
dec
inc
imul
mov
(bad)
(bad)
fwait
lds
sbb
and
ins
jmp
fcomip
dec
ss
or
xchg
das
push
clc
mov
adc
adc
into
inc
nop
movs
mov
in
cwd
or
cmp
scas
fidiv
and
fisub
fbstp
mov
pushf
mov
push
loope
cmp
cmps
stos
push
fucom
dec
sbb
shr
idiv
pop
xor
cmp
and
jle
ins
sahf
clc
sub
dec
cmps
movs
or
adc
sub
push
mov
adc
movs
mov
outs
leave
pop
mov
lds
clc
arpl
adc
add
mov
and
sub
sbb
cmp
lea
mov
cmp
dec
mov
in
mov
dec
pop
ja
xchg
or
bound
push
dec
popa
adc
and
sbb
mov
mov
jnp
jmp
dec
out
mov
scas
jecxz
xchg
clc
adc
push
mov
retf
ror
loop
jp
mov
hlt
dec
cmp
fnstsw
mov
sub
aaa
cmp
fdivp
pop
hlt
xchg
push
or
inc
xor
xchg
cmp
popa
outs
cmp
xchg
popa
dec
mov
dec
xchg
mov
dec
test
xchg
xor
xor
icebp
int3
sbb
(bad)
pop
(bad)
pop
xor
inc
out
adc
cmc
dec
retf
mov
es
lods
ds
add
or
ror
inc
add
ret
stc
mov
mov
dec
adc
sub
jnp
push
adc
rcl
les
pop
push
sub
push
dec
lods
mov
push
adc
leave
or
retf
inc
adc
not
dec
adc
mov
push
retf
nop
pushf
arpl
shl
addr16
out
out
stos
shr
cmp
nop
mov
rcl
adc
clc
pop
enter
sbb
lahf
cdq
aaa
mov
jmp
repnz
jg
xor
xchg
pop
sti
mov
xlat
xchg
fmul
mov
nop
sub
or
mul
mov
das
shl
push
inc
sub
mov
inc
inc
pop
lds
inc
and
pop
call
xor
pop
push
cmp
test
enterw
repnz
test
sub
std
inc
cmp
aas
pop
outs
jno
bound
xor
mov
inc
scas
fisub
ds
mov
add
lods
mov
sub
pusha
lock
cmp
test
sti
faddp
test
mov
push
sbb
scas
adc
aad
stos
pop
gs
sahf
icebp
pushf
pop
mov
lea
pop
stos
mov
icebp
sbb
cmp
daa
mov
ja
out
inc
mov
clc
and
push
inc
and
sbb
sub
sbb
cmp
pop
xor
outs
lods
sub
adc
mov
and
xor
jge
sub
xchg
mov
test
fstp
mov
or
not
(bad)
and
push
push
icebp
aaa
adc
lea
cdq
fsub
push
ja
aas
mov
push
bound
cli
aad
cmp
xor
cmp
lea
pop
push
(bad)
ins
xchg
lods
cmp
out
adc
adc
nop
call
push
fldenv
jmp
mov
dec
or
scas
out
aaa
jmp
int3
fwait
sahf
fsub
jmp
jnp
cmps
retf
aam
mov
(bad)
cld
int3
cld
mov
fstp
dec
inc
xor
cmp
leave
loop
inc
jnp
inc
div
cmp
sub
mov
cmp
and
mov
imul
xor
fisub
stos
vhaddps
dec
or
lock
sbb
jne
and
mov
into
lods
cmp
mov
cld
fidiv
pop
cld
fs
loopne
sub
es
inc
mov
daa
cmps
push
in
pop
in
in
nop
push
frstor
test
out
lods
fs
mov
xor
push
mov
jge
cld
imul
mov
(bad)
jecxz
mov
mov
ins
pushf
aas
sti
cmp
ins
cmps
mov
or
test
jmp
add
cmp
push
call
mov
sti
mov
call
cmp
pop
inc
cmc
(bad)
lds
jmp
cmp
push
fwait
rol
or
je
push
mov
ss
cmp
stos
lods
xchg
adc
jbe
int3
rol
cmp
add
dec
fst
out
dec
fiadd
sbb
inc
mov
ja
sub
jge
(bad)
daa
xchg
fwait
mov
daa
stos
sub
bound
fld
mov
jnp
pop
test
int3
out
or
mov
adc
cdq
ja
dec
or
sahf
ret
pop
jmp
imul
mov
(bad)
outs
xchg
adc
xchg
cmc
adc
and
sub
lods
nop
adc
jle
pop
sub
pop
or
std
inc
xchg
add
xor
shl
push
lock
dec
push
cs
(bad)
out
adc
lods
fwait
mov
add
push
mov
xor
dec
nop
jmp
cmps
mov
not
and
xor
jmp
aas
call
sub
nop
icebp
shl
cmps
gs
push
xor
sbb
int3
cmp
xlat
xor
or
ds
push
scas
xchg
jge
inc
xchg
lock
sub
mov
out
dec
inc
es
pop
sub
mov
(bad)
xor
loope
fdiv
pusha
(bad)
imul
retf
int3
ficom
inc
and
inc
xor
data16
inc
movs
cmp
ja
xchg
inc
jge
and
in
or
sub
mov
push
(bad)
into
scas
repnz
popf
ror
jbe
mov
pushf
retf
mov
push
rcl
mov
add
jmp
mov
jmp
inc
fsub
cli
scas
mov
bound
mov
ds
adc
addr16
lea
dec
cmp
sbb
and
gs
mov
daa
mov
test
mov
gs
jbe
neg
jne
(bad)
sbb
nop
cmc
pop
add
shl
gs
push
cmp
stos
nop
out
xor
mov
xor
and
mov
mov
xchg
fistp
cmp
and
mov
mov
aam
pop
rcl
(bad)
ficomp
mov
out
push
mov
clc
(bad)
cdq
lahf
cmp
and
push
mov
(bad)
sub
jecxz
xlat
shr
push
push
add
dec
mov
(bad)
lahf
sti
enter
or
push
(bad)
arpl
out
daa
and
add
aaa
cdq
std
push
adc
into
xchg
mov
leave
or
fild
jne
(bad)
out
ins
fsubr
sub
push
bound
xchg
push
test
repnz
das
mov
and
into
and
inc
scas
stos
xchg
stos
sbb
cli
adc
(bad)
jbe
ins
sub
mov
mov
jg
sub
adc
sbb
or
xor
sbb
rcl
daa
not
repnz
and
cmp
push
popf
aaa
push
xchg
in
mov
imul
test
cmc
rcl
sti
fisub
mov
(bad)
jmp
mov
mov
fstp
sti
push
jmp
or
dec
int
push
sbb
mov
retf
jg
dec
imul
jmp
(bad)
nop
aas
les
fld
sbb
mov
jbe
jmp
scas
ret
jo
pop
test
bnd
aas
ret
test
xor
out
cmp
cs
test
mov
dec
leave
shrd
addr16
in
fwait
mov
das
mov
dec
or
mov
out
test
mov
cs
xchg
push
in
mov
scas
test
dec
push
leave
push
push
inc
bound
mov
aad
dec
jnp
loopne
pop
cli
dec
lds
inc
mov
jbe
push
lds
(bad)
mov
mov
outs
test
adc
push
imul
pop
(bad)
mov
mov
out
dec
sbb
cmp
aam
sti
pop
push
jnp
rol
inc
xchg
nop
sub
jbe
mov
int
cdq
call
push
sbb
addr16
sbb
jno
in
adc
mov
cmp
test
mov
dec
jae
ins
jle
aaa
push
cmps
or
xchg
pushf
and
sbb
pop
cwde
dec
clc
push
push
pop
and
xchg
lods
ror
add
aas
mov
inc
cmps
into
pop
or
pop
js
lock
xchg
pop
ret
(bad)
pop
mov
mov
lods
pop
inc
xchg
adc
push
aas
and
mov
(bad)
repnz
scas
out
scas
pop
test
jmp
push
je
xchg
leave
ds
(bad)
leave
test
gs
pop
or
push
adc
fwait
(bad)
cld
outs
mov
jno
(bad)
lock
test
sahf
es
or
push
inc
imul
pop
aad
popa
in
sub
std
int3
arpl
repnz
stos
or
movs
stc
retf
jne
or
cli
imul
ret
mov
xor
pop
rcr
mov
sbb
push
mov
push
jp
xchg
sbb
movs
adc
test
mov
mov
inc
sbb
pop
neg
jge
aaa
xchg
adc
pusha
int
out
aaa
out
enter
mov
cmp
stc
shr
push
jbe
sbb
mov
lahf
sub
adc
push
xor
pop
retf
inc
sub
pop
jnp
pop
cmp
(bad)
into
sbb
rcl
cld
sub
xchg
int3
xor
mov
sbb
inc
sbb
ins
lods
xchg
(bad)
std
xor
cmp
std
vpmacssdqh
push
(bad)
or
in
mov
sti
push
std
mov
dec
cmp
xchg
jmp
pop
push
sahf
inc
pop
bound
mov
or
stc
scas
sub
add
rcl
shr
scas
push
mov
aad
push
cli
push
sub
ins
pop
mov
mov
jge
xor
dec
retf
mov
jecxz
jle
dec
js
sub
inc
clc
es
lock
xor
mov
outs
push
cmp
mov
push
arpl
imul
sti
in
fsub
pusha
pushf
cld
daa
sub
fstp
mov
sar
popa
cmp
fiadd
sbb
or
dec
mov
lahf
adc
nop
push
xchg
sbb
cmc
lods
hlt
fild
sbb
fadd
and
add
dec
test
push
push
in
in
xor
xchg
fst
int
cmp
pushf
jne
and
popf
jp
jp
adc
xchg
ss
dec
cmp
sbb
pop
inc
cmp
loopne
lods
lods
jae
fwait
gs
cmc
out
pop
shr
movs
int3
ds
movs
out
cmp
aam
movs
mov
jl
xor
call
(bad)
fimul
sbb
call
and
or
add
iret
xchg
leave
mov
sub
retf
mov
inc
test
adc
ficom
mov
pop
or
repz
cwde
pop
inc
fiadd
or
retf
loope
mov
inc
xor
xlat
mov
dec
dec
xchg
xor
cs
dec
jp
xor
jmp
sub
sub
jne
aam
hlt
pop
loope
cmp
popf
test
cmc
push
and
and
jae
xor
repz
(bad)
shl
pop
je
pop
xchg
inc
fdiv
cmp
and
repz
hlt
and
(bad)
xchg
sub
dec
xchg
adc
sti
out
and
mov
cmp
iret
xchg
arpl
pop
ret
pop
push
mov
sbb
or
cdq
mov
mov
xchg
add
add
dec
xlat
pop
mov
mov
test
popf
std
ins
xchg
xchg
repz
ds
adc
jo
xor
or
cs
mov
mov
fcom
mov
shr
mov
test
addr16
clc
ret
mov
div
adc
add
movs
test
sbb
aas
mov
imul
lahf
push
sub
and
or
jp
inc
mov
sbb
repz
inc
pop
mov
loope
dec
xor
stos
dec
cmp
daa
cwde
inc
les
(bad)
loope
pop
dec
dec
aas
fisub
imul
pop
fdivr
xchg
add
retf
aam
push
mov
int3
jg
stos
jb
aam
jb
adc
call
or
scas
enter
push
mov
xor
shr
adc
pop
jbe
movs
popa
adc
mov
dec
nop
cmp
inc
dec
jno
ret
out
daa
pop
ret
sti
inc
mov
rcl
adc
ja
aam
shl
ins
arpl
add
jae
out
or
pop
cmp
push
jae
shl
xchg
ret
push
call
inc
xlat
cmp
adc
mov
dec
adc
cmp
loop
daa
movs
stos
add
push
add
fst
cmp
xor
scas
pop
mov
daa
sbb
out
lahf
cmp
js
and
cmp
push
mov
dec
adc
mov
into
jno
adc
push
and
in
cmp
js
sbb
jo
jg
stos
arpl
xchg
frstor
shl
sub
aas
cmp
pop
stos
sbb
mov
xchg
xor
shr
and
inc
fild
out
or
mov
repz
arpl
hlt
popa
stos
cmp
mov
xchg
push
add
inc
mov
repz
(bad)
sti
mov
pop
add
cs
jmp
and
mov
test
nop
pop
dec
push
mov
ds
xor
je
cmp
xor
pop
inc
ror
or
imul
jae
pop
sbb
(bad)
mov
mov
xor
sbb
cmc
dec
xchg
loope
jns
push
jl
inc
jmp
call
push
aad
test
adc
fadd
scas
xchg
jmp
cmp
or
sub
call
mov
stc
dec
(bad)
out
or
mov
add
retf
inc
mov
add
(bad)
ss
aas
in
xor
add
jecxz
sub
pushf
int
pop
call
aad
shl
cmc
ss
daa
push
lahf
add
fist
addr16
pop
ret
lods
mov
jb
xor
rcl
pop
ret
pop
adc
pop
sbb
jns
iret
stos
cdq
xor
mov
lods
mov
(bad)
jbe
adc
add
jo
ret
aad
pop
mov
xchg
bound
aas
cwde
cmc
cmp
push
popa
icebp
mov
loope
imul
xor
xor
mov
cld
adc
ja
push
loope
movs
fbld
cwde
xchg
add
lods
sub
pop
ins
cmp
mov
add
(bad)
lahf
rcl
xchg
test
inc
nop
lods
lods
mov
popa
repnz
xlat
mov
adc
sbb
mov
jbe
in
xor
add
sub
aas
sub
into
adc
jbe
clc
pop
adc
adc
in
popf
ins
sub
add
ins
std
stos
cs
or
lock
icebp
test
stos
movs
mov
loope
call
repz
jb
sti
pop
and
push
pop
xor
aas
sbb
jl
mov
push
cmp
(bad)
outs
pop
(bad)
enter
jl
ja
cmps
ss
in
mov
or
cmp
inc
imul
lahf
mov
cld
sub
call
(bad)
cmp
inc
sbb
fsincos
scas
jmp
dec
movs
fstp
push
in
pop
daa
adc
cmp
add
adc
or
fcmovnu
leavew
dec
test
scas
outs
or
js
xor
push
shl
inc
dec
sub
mov
or
jnp
fimul
pop
jle
mov
fsubrp
test
fist
test
arpl
jo
adc
mov
mov
arpl
push
adc
sbb
and
retf
cmp
push
dec
(bad)
fidivr
lahf
cmp
adc
jmp
loop
cmc
scas
cmp
and
add
adc
sub
adc
fadd
mov
lods
lods
pop
jmp
pop
pop
fild
lods
pop
xor
jle
jae
sub
jo
or
jmp
out
(bad)
test
in
xor
pop
ret
lods
movs
adc
sub
push
pushf
mov
xor
sbb
lods
lahf
enter
adc
cmps
inc
hlt
clc
bound
lds
or
jo
pop
test
movs
mov
test
ins
fsub
inc
ret
sbb
into
adc
sbb
sub
mov
fucomp
mov
xchg
push
jmp
ror
sub
dec
sub
cmp
push
lahf
in
jno
cmps
pop
adc
sub
lds
xor
push
hlt
mov
ss
aam
outs
pushf
mov
push
iret
and
cmp
sbb
adc
ret
(bad)
sbb
and
and
enter
pop
xor
repz
and
in
or
inc
popa
push
test
adc
int
jae
add
loop
outs
cli
fwait
imul
add
ss
push
mov
call
retf
jae
jl
out
adc
mov
mov
inc
mov
retf
push
sbb
les
fbstp
sub
leave
push
(bad)
sar
or
xchg
pop
je
aad
and
inc
mov
cmp
mov
fwait
or
jae
imul
xchg
sub
mov
push
pop
fisub
adc
pop
neg
pop
push
test
push
sub
adc
mov
or
popa
outs
mov
mov
mov
jnp
jmp
shr
stc
sub
or
jnp
lds
or
dec
or
xor
xor
mov
cmp
out
stos
scas
jno
pushf
fwait
pop
sbb
bound
add
push
in
ret
rol
sar
outs
bound
fisub
dec
pop
shl
xchg
mov
xor
inc
call
shr
dec
cmps
in
push
push
stos
aaa
push
xor
push
add
push
dec
outs
mov
or
sub
pop
xchg
repz
(bad)
pop
in
xchg
aas
or
cmp
jle
dec
icebp
imul
pop
in
cmp
or
test
pusha
mov
inc
lock
test
pop
fiadd
into
add
mov
push
int
lods
fs
cmc
fist
jmp
add
cmps
stos
pop
dec
mov
jb
add
mov
mov
stc
rol
shl
mov
inc
outs
inc
cmps
shl
shl
ret
(bad)
cwde
sbb
enter
mov
cmp
jg
mov
movmskps
adc
in
mov
in
push
dec
sub
push
pop
sub
ror
jb
enter
cwde
fidivr
mov
call
xchg
sub
test
stos
push
mov
nop
pop
cmp
(bad)
jbe
lods
jb
outs
mov
cmp
cmps
les
icebp
push
inc
mov
jmp
aad
jo
dec
out
js
cmp
fistp
xor
mov
mov
jg
mov
xchg
adc
iret
inc
into
(bad)
mov
cdq
leave
and
adc
sub
call
rcr
loop
xor
pop
pop
mov
mov
inc
ds
data16
pusha
pop
psubusw
cdq
sbb
dec
jne
pop
inc
sahf
int3
push
mov
into
(bad)
fsubr
std
mov
and
and
pop
lahf
mov
sbb
jp
mul
mov
jne
loope
sub
mov
mov
gs
test
(bad)
push
out
adc
lea
jmp
bound
out
call
fmul
xchg
sub
imul
add
push
into
jne
lahf
cmps
inc
adc
and
mov
mov
and
mov
and
ret
ss
mov
in
xor
cmps
popa
(bad)
popa
mov
sub
clc
push
cmp
dec
cmp
push
sub
mul
and
les
in
adc
fistp
ret
sar
mov
(bad)
jne
vcmppd
lds
(bad)
loop
sbb
or
adc
js
call
add
inc
and
movs
xchg
scas
cli
push
mov
pushf
int3
adc
pop
add
lods
rcr
test
stos
(bad)
lds
mov
pop
or
jmp
dec
and
jb
inc
inc
loope
lahf
cmp
es
sbb
add
in
test
xor
mov
jp
sub
cmp
xor
std
ds
shl
xchg
not
jp
add
addr16
pop
sbb
lea
sbb
mov
aad
xor
pop
repz
stos
jp
mov
sbb
adc
add
push
pop
mov
rcr
jno
xlat
adc
xor
mov
scas
or
mov
fst
fstp
cli
in
repnz
and
mov
adc
fwait
and
iret
in
or
add
inc
xlat
sbb
pop
xchg
dec
add
mov
(bad)
mov
inc
add
jns
imul
add
lock
mov
cmp
das
pop
jns
mov
cmp
mov
mov
xor
adc
aam
push
push
inc
push
ins
loop
mov
mov
jg
or
and
rdpmc
popf
jecxz
daa
pop
scas
fld
out
daa
mov
dec
icebp
pop
jmp
mov
push
sbb
imul
test
stos
in
sbb
mov
(bad)
out
ss
cmc
adc
test
ret
daa
pop
cmp
jle
adc
mov
sub
or
dec
push
or
pusha
out
mov
ficom
pop
loop
icebp
xchg
ret
xchg
mov
push
push
lods
jmp
inc
call
push
and
rcr
xchg
adc
cmp
(bad)
dec
cmp
bound
mov
int3
xor
rcr
xchg
pushf
cmps
and
ret
xlat
mov
mov
ss
sti
inc
dec
gs
jg
enter
sbb
cmp
es
ins
test
mov
and
hlt
mov
movs
pop
fsub
xchg
sbb
arpl
fld
cwde
add
les
sub
push
test
and
jbe
movs
sub
fldcw
adc
xchg
or
jecxz
sub
sar
imul
mov
and
div
pop
adc
inc
add
cmp
outs
mov
adc
pusha
je
inc
jg
add
popf
push
es
add
ins
pop
mov
(bad)
and
fidivr
inc
jbe
mov
fwait
jae
jmp
fistp
sahf
daa
push
cmp
cmp
add
and
repz
shl
arpl
(bad)
push
and
imul
neg
test
adc
and
jbe
(bad)
jmp
xlat
add
scas
ret
jbe
cs
push
ja
mov
in
aaa
and
and
les
cld
or
imul
sub
and
ss
sar
and
inc
inc
push
sub
mov
or
aam
rol
pop
sub
jbe
rcr
sbb
xchg
sub
je
push
xchg
sbb
xlat
(bad)
jp
mov
mov
aam
mov
sqrtps
push
cmps
aad
hlt
int
sub
dec
xor
dec
xchg
lods
sahf
pop
je
inc
push
cmps
add
add
js
jb
mov
ins
jmp
xor
sub
xchg
xor
adc
mov
sbb
ins
sbb
shl
test
sub
dec
arpl
and
xchg
push
lock
adc
add
lea
std
dec
jle
inc
aad
push
cmps
cmp
iret
(bad)
jmp
mov
sar
xchg
cmp
icebp
inc
daa
mov
data16
adc
sbb
repz
hlt
add
test
outs
rcr
sub
add
lock
or
jl
mov
and
repnz
cmp
pop
(bad)
aam
(bad)
test
and
fsubr
shr
out
dec
cmc
leave
push
cmp
rol
sbb
movs
inc
cmc
test
push
sbb
scas
test
pop
mov
cmc
jns
add
mov
jno
imul
ss
inc
mov
xchg
sahf
sbb
jo
leave
enter
int
fistp
std
mov
pop
pop
test
dec
inc
mov
movs
pop
jmp
push
test
std
lds
pop
mov
inc
push
repz
jle
add
jns
cmp
out
mov
ret
test
or
rcl
dec
icebp
pop
rcr
aaa
out
lahf
cmp
test
xor
add
adc
fcomp
cmp
sub
dec
xor
jae
mov
inc
out
xchg
gs
mov
in
stc
aad
inc
clc
xchg
adc
jle
jle
push
mov
addr16
xchg
xchg
icebp
ror
mov
cmp
aas
leave
js
mov
push
cmps
jmp
shr
jae
push
push
repz
cvtdq2ps
xor
adc
cmp
icebp
push
cmp
pop
sti
in
xchg
mov
xor
fisub
mov
push
dec
das
sahf
out
loopne
dec
xor
xchg
bound
xchg
ja
mov
inc
gs
mov
pop
push
or
retf
imul
int
in
ret
popf
or
popf
jbe
div
and
rcr
shl
cmp
push
aad
fcmovbe
and
jmp
cld
das
mov
outs
dec
fsubr
in
push
jne
mov
mov
cmp
mov
cmp
cmp
lds
pop
stos
stos
inc
push
test
pop
shl
jmp
nop
fst
mov
xchg
mov
lods
pop
out
repz
std
dec
inc
std
dec
xor
or
(bad)
int3
hlt
mov
xchg
pop
add
inc
pop
push
push
push
aaa
adc
imul
mov
push
push
push
xor
mov
sub
and
push
mov
es
jl
pop
and
push
je
cmp
stos
rcr
cli
retf
daa
ret
pop
inc
dec
adc
aas
test
or
push
imul
outs
cdq
add
add
xor
pushf
iret
sub
add
jno
fcom
or
jmp
push
mov
and
mov
and
mov
add
es
shr
mov
lods
int3
and
sbb
rol
mov
fmul
es
sbb
and
scas
push
xchg
aam
fidiv
sbb
pop
out
and
pop
mov
ret
add
dec
mov
dec
fwait
or
stos
pop
add
gs
or
movs
imul
inc
cmp
je
lds
call
mov
dec
jg
and
pop
xchg
pop
lods
xchg
(bad)
adc
jae
xor
adc
dec
in
or
mov
sti
cs
movs
cli
or
ins
and
cmp
jno
inc
les
lods
cmp
cld
mov
ja
pop
mov
lahf
daa
mov
jg
ror
daa
fdiv
pushf
lahf
sti
movs
xchg
pop
jmp
add
pop
or
sub
xchg
ins
and
push
shl
and
lods
lea
jbe
lods
std
in
das
dec
or
and
adc
imul
in
les
es
xor
in
pusha
mov
jmp
repnz
mov
xor
imul
inc
xchg
lods
sbb
into
ret
adc
sbb
push
or
or
sub
out
stc
push
(bad)
mov
lds
sbb
stc
data16
adc
dec
shl
mov
or
iret
lds
inc
inc
(bad)
mov
(bad)
xlat
inc
test
lods
les
dec
jge
cmp
adc
loop
hlt
pushf
mov
push
ja
int3
loope
and
scas
xchg
call
fld
cmp
loop
add
outs
mov
lahf
pop
or
jge
mov
ja
mov
aam
ret
out
cmp
adc
lock
ds
sub
ss
lea
jo
loop
outs
aaa
repz
sbb
and
push
xchg
push
shl
daa
(bad)
push
jne
es
les
aas
xchg
inc
cmps
mov
or
out
or
sti
nop
push
push
(bad)
repz
cdq
pop
pop
mov
pushf
cmps
(bad)
cld
test
cmp
cmp
enter
rcl
xchg
jmp
and
icebp
xchg
jmp
jg
(bad)
imul
(bad)
out
adc
das
movs
popf
jecxz
xor
sbb
cdq
fdivr
adc
xlat
mov
cmp
call
out
mov
ins
(bad)
lahf
xchg
add
out
fdivr
pop
add
dec
into
pop
imul
dec
int3
js
push
xchg
vpaddusw
dec
pop
pop
sub
in
stos
movs
sbb
or
and
xchg
dec
shl
mov
out
popa
imul
push
sbb
popf
test
inc
faddp
pusha
adc
adc
popa
ds
arpl
pop
pop
mul
mov
shl
mov
aaa
retf
cmp
lahf
and
xchg
imul
inc
test
adc
dec
sti
imul
dec
sbb
iret
movs
out
push
mov
rcl
dec
dec
xchg
test
(bad)
push
mov
and
lahf
push
in
ret
add
inc
pop
jp
sahf
mov
pop
cld
mov
and
pop
and
sub
ss
in
into
xor
or
inc
int
xchg
stos
push
mov
sahf
jl
rcl
or
cmc
les
call
xor
or
jecxz
sbb
adc
or
js
in
mov
fwait
outs
mov
dec
jle
push
ja
pop
jg
xor
ins
mov
and
mov
daa
jge
jle
xchg
or
ja
fisub
mov
and
inc
rol
aad
xchg
sbb
or
data16
(bad)
jle
scas
push
pop
xor
inc
sbb
jle
pop
cmp
test
icebp
(bad)
test
jmp
out
jno
jge
gs
stc
xlat
enter
aad
push
or
imul
lahf
and
call
aas
shl
(bad)
mov
daa
add
not
es
inc
mov
(bad)
dec
std
nop
or
xchg
and
xor
xchg
sub
add
adc
dec
movs
cwde
or
mov
leave
cwde
ss
xchg
mov
inc
mov
mul
push
popa
sbb
dec
sti
push
shr
dec
push
es
lock
add
xchg
dec
sahf
lods
push
hlt
cdq
pusha
enter
sub
push
jl
mov
jne
ror
sti
fisub
pop
mov
push
xchg
iret
xor
daa
stc
lods
inc
pushf
int3
cmp
fbld
jmp
ss
jno
test
mov
loopne
mov
push
push
rep
push
push
or
mov
pop
in
push
daa
jecxz
push
popa
ror
ficomp
mov
sbb
mov
ror
cmp
fwait
jecxz
enter
mov
sar
dec
sbb
dec
xchg
mov
mov
pusha
loopne
popa
inc
adc
pop
pop
cs
ins
jae
aam
xor
shl
mov
adc
sbb
xor
lods
push
test
xor
mov
(bad)
imul
shl
call
sar
hlt
sub
mov
fisttp
push
outs
jecxz
xchg
inc
stos
fimul
stos
out
daa
jle
jl
jo
(bad)
pop
lea
nop
sbb
mov
js
in
add
dec
cmp
mov
(bad)
mov
mov
jbe
and
bnd
in
loope
aas
mov
xor
cmps
in
jo
loopne
xchg
jl
repz
loope
and
mov
call
push
push
pop
imul
mov
cmps
lds
sbb
or
in
add
sbb
hlt
push
mov
pushf
imul
icebp
sub
sbb
cs
xor
iret
jb
sbb
and
rcl
pop
jno
mov
push
retf
test
jle
adc
push
xchg
jge
repnz
rcl
add
(bad)
mov
sbb
inc
adc
inc
retf
mov
push
cmp
add
or
cli
mov
out
cmp
lods
pop
and
cmp
retf
loop
call
mov
addr16
repnz
mov
shl
xor
xchg
and
adc
ret
call
js
pop
rcr
dec
adc
pop
jns
mov
call
aam
cli
call
ins
push
loop
mov
(bad)
jmp
addr16
lods
mov
cmc
adc
int3
je
jns
imul
pop
pop
test
rcr
add
icebp
pusha
or
dec
out
leave
(bad)
scas
std
inc
adc
mov
jnp
jb
xor
pop
into
rol
cmp
cmp
scas
ss
ror
scas
das
shl
jbe
inc
push
ins
mov
movs
push
sub
xchg
xchg
adc
xchg
adc
cmc
or
and
jo
stc
inc
int3
or
out
sub
sub
out
(bad)
out
in
lds
mov
jbe
jb
push
xor
or
sbb
or
mov
std
mov
push
or
cmp
enter
test
push
jae
addr16
xor
out
std
sbb
lahf
aas
sti
in
out
dec
popa
clc
sub
pop
pop
xor
jnp
pop
dec
push
push
mov
jno
lahf
jl
scas
in
ffree
mov
(bad)
popa
inc
and
push
jno
xor
rcr
xchg
arpl
(bad)
pop
sahf
nop
int3
popa
push
mov
jno
mov
adc
xchg
push
jnp
ficom
jbe
cmc
arpl
adc
dec
mov
xchg
lahf
dec
mov
xchg
mov
jecxz
loop
sbb
sbb
imul
mov
sbb
nop
cmp
or
sbb
iret
cmp
ja
scas
arpl
sti
fisubr
mul
sar
xor
enter
cmp
outs
add
push
adc
mov
fmul
dec
add
dec
aad
mov
and
retf
ins
stos
mov
mov
pushf
jge
fsubp
dec
test
pop
lods
mov
push
call
in
pop
sbb
xchg
loopne
xchg
jmp
ins
fimul
push
cwde
jl
xchg
mov
jmp
cmp
jo
sub
arpl
fadd
jg
es
test
cmp
xchg
and
out
aas
dec
inc
lds
inc
test
aas
sub
xor
repz
ins
pop
dec
call
imul
xor
jle
inc
mov
rcl
ja
mov
and
add
cmp
xchg
inc
inc
xchg
in
cmps
add
mov
pop
mov
popa
test
add
xchg
mov
xchg
movs
push
jno
inc
mov
(bad)
hlt
mov
xor
push
(bad)
mov
pop
test
cs
jae
jno
jno
xchg
test
xchg
pusha
mov
jp
arpl
fld
in
sbb
gs
ret
cld
or
mov
inc
and
push
(bad)
inc
or
xlat
movs
sbb
test
push
addr16
loopne
das
mov
sar
loopne
or
inc
and
sbb
and
pop
jle
cmp
and
(bad)
(bad)
or
and
(bad)
and
inc
jne
jp
pop
outs
adc
scas
adc
repz
out
in
dec
cmps
inc
mov
mov
push
jg
adc
or
call
rol
fild
adc
sbb
in
(bad)
stos
repnz
xchg
inc
sbb
pop
fisubr
or
inc
icebp
(bad)
stos
xor
lock
iret
fidiv
mov
inc
test
cli
movs
or
leave
mov
adc
es
fs
dec
mov
jns
movs
cmp
inc
mov
mov
jo
sbb
adc
stos
enter
mov
pop
js
ret
xchg
fist
pop
xor
test
fwait
aam
xor
push
ins
in
sbb
fsubrp
push
(bad)
dec
mov
xor
pop
push
mov
cmp
retf
jle
mov
mov
out
jge
daa
int3
popa
scas
inc
or
jne
pop
int3
rcl
push
out
mov
xchg
xor
or
jb
out
push
jle
daa
ins
neg
test
dec
push
push
test
dec
sbb
pop
addr16
jae
test
mov
inc
jb
jne
sbb
imul
mov
adc
call
xchg
pop
and
sahf
lds
scas
push
jne
ins
repz
push
ja
sti
into
pop
xchg
imul
adc
jns
fwait
cwde
mov
sbb
das
xchg
jmp
movs
cli
repnz
bound
cmp
repnz
sti
mov
inc
inc
inc
(bad)
enter
call
lods
adc
and
fild
jl
mov
jg
xor
pop
xlat
mov
xor
inc
mov
or
xchg
mov
pop
pop
(bad)
cmp
mov
pop
ss
and
ja
loop
je
js
in
lods
push
test
cld
mov
cmps
lock
in
adc
fisubr
(bad)
jge
je
pusha
aaa
imul
movs
ret
aaa
jne
push
(bad)
cmp
push
iret
movs
add
mov
fs
pop
loopne
ins
ja
shl
stc
fwait
and
aaa
sub
data16
es
mov
inc
push
stos
pop
add
xor
inc
mov
inc
add
mov
xlat
sub
test
imul
xor
mov
and
jno
enter
fisub
inc
mov
xchg
es
stc
iret
jo
inc
jp
jmp
mov
cdq
dec
sbb
mov
jno
lods
mov
xor
or
jg
mov
int
(bad)
dec
mov
xchg
jne
(bad)
add
push
inc
(bad)
pop
cmp
stos
push
aad
add
sbb
dec
lahf
sbb
das
sub
pop
cmp
mov
outs
adc
sub
pop
gs
adc
in
fcomp
cmp
adc
xor
and
cmps
mov
jbe
stos
bound
dec
daa
ins
clc
push
fcmovu
cmp
xor
pop
jae
sub
xchg
shl
out
jp
sbb
test
pop
shl
sub
push
pop
dec
outs
push
and
lods
cld
cli
scas
mov
out
scas
push
or
xchg
shr
mov
mov
mov
sti
xchg
jge
ret
popaw
int3
into
xor
jg
fnsave
ds
sbb
test
outs
xor
sub
xchg
push
inc
inc
shr
loope
test
cwde
(bad)
loopne
cmp
loope
ja
jo
ret
push
jns
push
xor
push
pushf
idiv
jae
and
pop
add
sahf
jno
push
js
pop
mov
inc
mov
adc
nop
test
mov
lods
lea
adc
mov
(bad)
pop
data16
pushf
cwde
mov
push
dec
fistp
add
dec
jmp
push
scas
test
mov
dec
jecxz
and
imul
xor
leave
cld
jno
inc
sbb
xchg
jle
or
cmp
scas
outs
push
cdq
cdq
pop
adc
leave
jb
pop
mov
outs
retf
daa
push
add
xlat
xchg
mov
out
xor
pop
sbb
dec
sbb
mov
scas
xor
outs
data16
xchg
mov
addr16
xor
xchg
(bad)
mov
jmp
(bad)
jmp
mov
xchg
jp
lock
cmp
in
and
lds
jg
fucom
movs
repz
test
ror
pop
sbb
movs
pop
inc
mov
cmp
or
push
pop
cmps
mov
ror
mov
out
xor
and
dec
mov
mov
stos
cmps
enter
shl
xor
int
inc
fstp
dec
(bad)
cld
cmc
mov
call
cli
jmp
inc
cmp
push
xchg
mov
adc
(bad)
js
test
xchg
idiv
jle
dec
bound
cmps
retf
or
fbstp
inc
das
out
cmp
mov
out
jmp
add
adc
fcom
out
push
loop
test
cdq
mov
mov
mov
test
inc
dec
xor
loopne
xchg
pop
gs
loop
push
mov
ror
adc
in
pop
push
xchg
ins
js
pop
pop
xchg
dec
and
pop
sbb
adc
or
mov
xor
ss
shl
inc
(bad)
std
imul
jno
fmul
xchg
mov
cwd
fisttp
bnd
mov
inc
idiv
xor
xchg
repnz
enter
es
pop
mov
mov
pop
sar
fwait
sub
ret
inc
xlat
repz
cmp
xor
mov
in
daa
xchg
ror
dec
or
(bad)
jl
sbb
shl
dec
mov
enter
cmp
pop
and
inc
imul
js
inc
sub
lods
cmp
pcmpgtd
adc
xchg
repnz
test
pop
xor
dec
push
cli
dec
push
xchg
mov
and
dec
pop
in
adc
inc
jns
mov
idiv
popa
mov
sub
rol
sbb
mov
push
xor
or
jl
or
sar
adc
stos
and
adc
mov
adc
aaa
cmp
jecxz
pusha
xor
push
xor
(bad)
mul
out
and
rol
and
inc
fdiv
cmp
or
fwait
pushf
inc
jmp
or
push
sub
fld
and
dec
pop
mov
pop
stos
mov
fucomip
call
mov
cwde
sub
lahf
pop
push
icebp
xor
std
jl
sub
mulps
call
cmp
clc
movs
pop
xlat
push
and
movs
add
ds
cmp
loop
cmp
sub
pushf
jbe
mov
adc
popf
repz
scas
sub
jb
mov
cmp
xor
xchg
jg
inc
test
xchg
pop
push
outs
mov
cmps
pop
or
or
daa
out
sbb
nop
jno
push
(bad)
cmps
repz
and
pop
int
push
int3
sbb
jmp
cmp
or
xchg
sub
add
or
arpl
mov
or
dec
jmp
(bad)
(bad)
das
test
sahf
pop
xor
(bad)
xchg
shl
cmp
mov
cmp
adc
mov
in
hlt
fimul
adc
add
mov
or
popa
idiv
mov
out
ror
int
adc
aas
adc
add
jnp
adc
jns
xchg
push
inc
(bad)
lahf
adc
mov
arpl
mov
ja
push
dec
enter
loop
jno
jno
gs
dec
adc
popa
aam
mov
mov
ja
cli
scas
push
sub
test
retf
mov
add
movs
or
fmul
inc
retf
push
test
xchg
adc
out
mov
pop
es
jo
fnsave
or
cwde
jb
mov
int
gs
clc
mov
mov
lock
jp
inc
sub
xor
dec
adc
imul
adc
jmp
mov
mov
ins
cli
mov
mov
ins
imul
jbe
add
shl
ins
jecxz
jle
sbb
jl
int
lea
add
das
shl
pop
movs
stos
cmp
pop
dec
adc
nop
jae
cdq
jbe
cmp
repnz
scas
scas
je
inc
lods
xchg
mov
cld
loope
jne
xchg
cld
fucom
lahf
sbb
cmp
pop
ins
sbb
cld
cmps
jae
outs
fucomi
mov
(bad)
in
jb
jle
aad
or
inc
mov
div
cmp
mov
pop
sub
sar
push
push
ja
dec
(bad)
ins
sub
pop
cwde
aad
mov
push
add
ds
xchg
fiadd
mov
daa
(bad)
push
xor
mov
mov
addr16
inc
add
sbb
daa
(bad)
push
out
mov
outs
adc
push
cmps
popa
lock
xchg
jl
std
or
push
ja
ja
mov
ds
call
jno
mov
cmp
(bad)
jl
pop
mov
push
lock
mov
pop
test
inc
xor
rol
scas
out
and
div
dec
mov
popa
sbb
push
push
push
fistp
fist
adc
xchg
pop
push
sub
cmp
xrelease
sub
xchg
mov
icebp
mov
sub
push
outs
int3
ret
cli
add
dec
pop
xchg
pop
pusha
jp
rcl
mov
outs
mov
cmc
ss
add
or
xor
data16
mov
fstp
adc
push
mov
int3
jno
cli
hlt
pop
jnp
jb
rcr
push
pop
or
iret
adc
sub
(bad)
adc
sbb
push
cmp
add
aaa
pop
loope
aam
xor
std
cmp
xor
inc
sbb
inc
arpl
jno
stc
ja
cmp
pop
mov
in
test
retf
cmp
add
lods
and
clc
cmps
pop
cmp
dec
and
mov
lods
add
sbb
mov
imul
sub
fwait
nop
ss
retf
mov
push
ins
and
jmp
mov
iret
inc
ss
sahf
repnz
xchg
retf
push
lods
iret
ins
int3
jns
xchg
push
pusha
shl
or
pushf
xor
(bad)
sub
sbb
adc
mov
and
sub
push
mov
and
xchg
bound
sbb
push
retf
dec
inc
pop
dec
shr
adc
test
jnp
push
pop
cmc
jmp
stc
je
je
addr16
jo
jge
frstor
mov
shr
xor
jmp
test
mov
dec
mov
push
or
add
jae
cvtps2pi
(bad)
mov
lods
adc
adc
bound
mov
imul
imul
or
imul
jb
outs
xchg
(bad)
dec
ror
sbb
sbb
fcmovnbe
inc
jno
data16
jns
inc
imul
not
retf
loopne
(bad)
pop
push
lock
hlt
jg
inc
outs
and
mov
mov
adc
pop
stc
call
jno
adc
mov
add
xchg
sbb
cmp
mov
gs
cmp
rcl
adc
push
lock
mov
mov
div
movs
les
lods
mov
add
dec
or
cdq
outs
repz
mov
pushf
cwde
out
jmp
or
add
test
push
and
and
ss
aad
push
jmp
and
lahf
sub
sar
rcl
push
lods
mov
mov
and
cdq
fmul
push
mov
dec
gs
cmp
mov
inc
push
pop
pop
aas
loopne
pop
mov
lock
aad
imul
lea
jbe
xor
mov
fs
sbb
mov
scas
mov
stos
lock
pop
je
and
and
movs
lahf
cli
retf
sahf
das
cld
or
push
inc
xchg
ja
sbb
cmp
fcom
pop
popa
div
jne
fucom
aaa
inc
daa
jbe
std
jb
xor
retf
fisubr
inc
sub
popa
mov
push
inc
jle
and
cs
cmps
push
dec
mov
lahf
mov
out
in
sub
inc
adc
jp
jge
mov
retf
std
cs
pop
jmp
(bad)
jmp
sar
fcmovnbe
mov
mov
bound
xlat
shl
and
cmp
push
loope
fcmovbe
mov
push
jo
jle
(bad)
iret
pop
mov
into
jb
add
stos
and
sbb
add
mov
cmp
es
inc
add
ror
jbe
or
add
pushf
pop
gs
lea
ror
xor
jp
retf
jmp
lods
fst
fwait
push
mul
cmps
lock
xchg
(bad)
lds
push
rcr
xor
sub
loope
outs
ret
or
and
cmp
inc
scas
adc
ins
cs
jo
test
imul
test
mov
mov
loopne
lahf
lds
(bad)
cwde
xchg
pop
jmp
sbb
out
inc
add
push
mov
nop
cmp
sub
imul
mov
ja
push
ins
stos
jecxz
mov
mov
cli
arpl
mov
std
pop
mul
(bad)
push
jecxz
call
addr16
inc
ss
mov
repnz
ins
cdq
add
lock
in
jmp
aam
adc
pop
inc
push
jg
mov
mov
xchg
cmps
rol
pop
pop
pusha
popa
popa
shr
cwde
and
xchg
adc
cdq
loope
dec
push
clc
retf
mov
dec
jl
jg
mov
xchg
imul
cs
aad
dec
pop
jbe
lods
call
mov
nop
aaa
push
adc
mov
(bad)
lods
aad
dec
movs
adc
xchg
stos
adc
inc
jnp
xchg
mov
test
imul
test
out
dec
idiv
jmp
mov
std
or
dec
jo
movs
mov
lock
(bad)
sbb
add
inc
or
mov
push
repz
mov
xor
dec
cmps
jmp
bound
gs
cmp
push
push
ss
mov
aaa
dec
imul
dec
xor
sub
jecxz
shl
pop
fisubr
inc
mov
sbb
add
je
adc
arpl
data16
or
movs
cmp
cmp
out
imul
sub
add
mov
inc
pop
ret
and
test
push
sbb
jle
inc
sbb
bnd
cmp
test
sbb
cwde
int3
mov
push
cmp
xor
psubw
in
push
push
cmp
shl
retf
jns
adc
jl
retf
pop
or
and
call
sbb
pop
push
push
lods
in
push
cwde
or
popa
jb
add
inc
ins
sub
stos
cmp
shr
cld
pop
pop
fst
pop
sbb
dec
je
arpl
jecxz
pop
stos
push
mov
rcl
xor
push
push
outs
inc
adc
mov
inc
inc
push
add
push
mov
mov
xchg
hlt
sar
aaa
ficom
push
aam
or
xor
les
push
jl
loopne
xor
xchg
fdiv
iret
cmp
jmp
pop
out
jp
add
mov
cld
loopne
or
mov
mov
das
push
leavew
mov
xor
std
mov
jg
jl
not
xchg
inc
repz
arpl
dec
addr16
jbe
xchg
adc
dec
sti
(bad)
outs
iret
cmc
push
xor
retf
jmp
imul
cld
icebp
add
add
adc
outs
cwde
jmp
fdiv
ss
call
dec
sbb
sbb
jp
pop
adc
add
pop
or
scas
div
sar
ret
loopne
pop
mov
ins
scas
cmp
pop
pop
sahf
inc
xlat
js
jl
xchg
xor
cmp
sub
iret
repnz
shl
femms
mov
mov
nop
fidivr
xchg
sub
mov
adc
or
in
bound
jae
push
popa
push
dec
cdq
ins
ins
(bad)
repnz
pop
fiadd
fcom
jg
aam
dec
fsub
cmps
dec
mov
or
pop
push
mov
call
scas
push
das
aam
cs
ret
or
jge
cmp
prefetchw
and
cmps
cdq
xor
aad
cmp
(bad)
in
daa
mov
push
and
mov
(bad)
or
pop
pop
or
ds
fidiv
jl
jmp
push
imul
(bad)
cmps
loop
push
dec
cmp
push
pop
pushf
xor
xchg
loope
xchg
pop
jns
gs
fadd
and
mov
dec
aad
loop
movs
arpl
imul
xor
pop
push
imul
mov
xchg
outs
mov
in
mov
cld
inc
fcomp
adc
dec
inc
int3
jo
xchg
pop
pop
cld
xchg
add
nop
and
and
into
ud2
push
jg
ret
scas
jns
cli
shl
add
pop
mov
sub
sbb
imul
push
div
add
clc
dec
jo
div
pop
cmp
stos
aaa
pop
push
mov
fdivr
ins
xor
call
test
push
cmc
inc
clc
movs
mov
dec
les
fidiv
mov
int3
and
ins
adc
mov
mov
js
or
dec
mov
(bad)
inc
mov
mov
neg
jge
hlt
fdivr
out
dec
mov
inc
rcr
pop
sbb
and
and
jbe
and
sbb
jo
sub
mov
or
xor
sbb
dec
xchg
pop
dec
lock
clc
pop
mov
stos
scas
mov
lds
fbstp
cmp
push
jmp
mov
fwait
retf
or
mov
dec
mov
callw
sti
test
lea
fs
ret
shr
cld
xor
push
or
jge
mov
add
push
push
inc
mov
pop
aam
sub
into
dec
inc
stos
push
hlt
test
dec
fwait
js
xchg
movs
(bad)
pop
leave
push
xor
inc
cmp
sar
jl
xor
xor
cmp
xor
cmc
mov
adc
push
inc
cmp
retf
pop
in
test
xchg
into
sti
mov
inc
repz
popa
dec
pop
lock
je
ss
mov
or
cwde
int3
test
mov
fmul
or
icebp
add
les
add
mov
cwde
lods
pop
fsub
push
(bad)
cs
pop
pop
sub
and
in
cmp
xchg
dec
(bad)
or
test
push
add
and
push
stc
push
mov
fdiv
fwait
test
adc
ss
dec
into
pop
adc
dec
mov
mov
loopne
inc
repz
and
sub
pop
stc
inc
fsubr
mov
add
push
in
movs
and
jl
adc
mov
dec
push
jo
int3
xor
cmp
pop
es
mov
fcmovb
hlt
call
push
pop
add
lods
(bad)
out
adc
push
test
mov
in
pop
xchg
fcmovu
push
lahf
inc
pusha
sub
(bad)
dec
add
mov
pusha
xor
call
out
sar
outs
imul
cdq
out
sbb
cmp
xchg
mov
lods
pop
inc
inc
xchg
or
inc
arpl
iret
mov
int3
fadd
or
(bad)
stc
je
ins
dec
in
pop
jecxz
xor
pop
dec
sbb
fistp
bound
sub
dec
mov
lds
stc
push
cmp
punpcklwd
xor
jecxz
pop
xchg
cli
push
jns
or
sbb
push
cmp
mov
and
xchg
xchg
mov
cmp
sbb
jecxz
fsubrp
div
dec
push
jp
test
adc
pusha
jmp
mov
and
call
and
mov
(bad)
mov
xor
cmp
into
pop
aam
mov
mov
cld
add
add
bound
adc
xchg
cmp
adc
jecxz
dec
(bad)
out
mov
add
or
pop
sub
int
fcomp
(bad)
mov
ins
sbb
ss
pop
lods
comiss
mov
fstp
jnp
sbb
in
js
dec
mov
push
sub
sbb
data16
mov
sbb
aaa
rcl
fsub
mov
jnp
cld
mov
popa
dec
stos
mov
xor
jnp
mov
mov
or
push
jge
adc
aas
(bad)
rcl
dec
push
cli
fisubr
cli
xor
and
and
pop
push
repnz
hlt
enter
test
or
jmp
icebp
xor
jg
or
cwde
retf
mov
scas
scas
or
or
imul
adc
call
fwait
aam
lods
dec
repz
es
jmp
ret
and
cmc
inc
push
jle
popa
xor
jb
add
adc
dec
push
mov
repnz
cdq
inc
fwait
popf
xchg
mov
mov
cmp
adc
fadd
daa
or
or
aad
mov
repnz
out
mov
retf
jg
scas
mov
xchg
pop
pop
mov
push
push
jae
aas
sub
mov
jb
dec
mov
xlat
push
leave
and
and
sbb
inc
es
mov
xor
or
retf
pusha
xchg
pushf
pop
dec
adc
loope
data16
out
test
jno
out
and
movs
cmp
ret
push
pop
jmp
sub
xchg
loope
jnp
xchg
add
dec
(bad)
icebp
scas
mov
js
sub
adc
inc
or
fcomp
leave
(bad)
sbb
mov
fimul
lods
call
cwde
jg
(bad)
test
sub
dec
ins
inc
sbb
push
pop
in
push
in
adc
mov
scas
pop
and
mov
loop
xor
inc
ins
int3
repnz
in
jno
lock
pop
fwait
push
or
dec
icebp
imul
jmp
sub
mov
enter
fst
jge
push
test
dec
(bad)
mov
cmp
cmp
jmp
rol
push
mov
mov
dec
repz
xchg
pop
lods
cmp
mov
lahf
cmp
mov
ds
cmp
(bad)
(bad)
jo
and
jae
xor
push
leave
inc
fdivr
jl
xor
adc
ds
jno
stos
or
jg
pop
xchg
jl
stc
sub
or
jmp
add
cmps
das
mov
xchg
rcr
loopne
imul
inc
and
push
stc
out
loop
cdq
pop
jns
push
popf
mov
mov
adc
ror
ins
dec
adc
retf
cmp
mov
add
adc
fcmove
shl
rcl
push
jmp
or
xor
loopne
jecxz
add
xor
call
and
test
sub
push
scas
adc
int3
pop
sub
adc
sbb
mov
mov
jb
imul
add
sbb
push
dec
test
daa
dec
pop
xor
add
sub
test
outs
dec
popa
add
xchg
mov
and
sub
retf
scas
push
std
dec
push
imul
or
rol
sbb
mov
or
call
cmps
pop
lods
loop
es
push
repnz
outs
(bad)
sub
sbb
(bad)
xor
sub
shr
clc
mov
sbb
xlat
mov
pop
test
inc
dec
and
sub
hlt
jmp
sub
iret
pop
mov
aad
pop
sbb
fdiv
add
shl
jmp
das
dec
mov
int
push
xor
gs
outs
cmp
adc
xchg
xchg
(bad)
push
xchg
push
lock
jb
ror
pusha
(bad)
mov
mov
xor
rcl
div
jecxz
gs
mov
in
icebp
fldlg2
adc
in
test
fwait
mov
shr
mov
and
push
sbb
iret
ficom
mov
cwde
cmp
mov
adc
test
mov
outs
and
or
pop
jmp
or
jle
sbb
inc
push
jle
leave
out
fs
adc
dec
push
rcr
cmp
sbb
mov
pusha
ins
dec
mov
in
mov
xchg
xchg
iret
add
mov
xchg
jge
ficomp
bound
sub
lods
and
(bad)
gs
xchg
mov
rcr
mov
scas
adc
(bad)
mov
xlat
mov
add
push
or
daa
outs
jbe
adc
mov
nop
in
fmul
test
sub
fbld
sub
retf
dec
jo
js
loope
popa
aad
push
mov
fisttp
and
ss
in
retf
and
mov
sub
jns
push
shr
dec
sbb
push
int
int
cmp
popa
mov
cmp
(bad)
mov
nop
outs
aaa
ins
ins
test
add
push
push
loope
mov
jo
ret
(bad)
jmp
cld
out
fisttp
pusha
cmp
pop
sub
jecxz
mov
inc
pop
inc
xor
loop
test
les
sbb
shr
out
push
push
in
into
mov
cwde
mov
dec
test
xchg
or
or
and
push
imul
imul
cdq
fcom
mov
nop
leave
mov
sti
mov
pop
xchg
mov
test
aad
jns
sbb
mov
cmps
push
xor
mov
and
pop
and
ins
jle
(bad)
pop
fbld
pop
fld
es
out
push
lahf
add
ret
jp
mov
push
mov
xchg
add
push
jmp
retf
inc
add
gs
out
nop
push
jbe
ja
lds
fimul
cmp
push
(bad)
retf
pop
popfw
loopne
and
cmp
push
push
inc
sti
push
lahf
cdq
sbb
test
cli
sbb
fist
jge
ja
nop
push
fs
in
sub
sub
loope
pusha
out
inc
jl
xchg
push
aad
xchg
pop
jno
test
idiv
fwait
ret
rcl
mov
out
gs
pop
(bad)
mov
inc
les
cmp
jge
cmp
xor
out
mov
ins
out
(bad)
sar
enter
inc
push
push
retf
adc
lods
push
mov
in
(bad)
sub
mov
push
and
mov
xor
sub
sub
sar
test
mov
and
das
in
push
sub
jl
ret
add
mov
jl
ficomp
mov
mov
mov
sub
mov
gs
push
inc
mov
idiv
add
gs
rcl
sbb
ret
push
stc
mov
xchg
es
push
leave
push
call
mov
push
popa
pushf
xchg
sahf
dec
fwait
inc
pop
stos
movs
adc
push
ret
mov
nop
jg
fild
dec
and
into
pop
pop
pop
call
retf
fisubr
loop
out
fisubr
xchg
jnp
lock
xchg
pop
push
add
jbe
inc
idiv
cmps
fdivr
mov
mov
outs
(bad)
mov
pop
fldenv
adc
inc
in
push
ds
mov
mov
mov
jae
call
cmp
or
push
mov
add
ja
ret
jle
xor
das
outs
mov
fwait
mov
mov
cs
sub
dec
jo
pop
fcomp
jmp
shl
js
cmp
movs
mov
lock
movs
imul
(bad)
in
fs
add
std
sub
bound
imul
popf
in
mov
mov
(bad)
aad
je
adc
xchg
xor
xor
int
sbb
cmp
cmp
push
icebp
and
out
aam
cmp
xchg
ins
cdq
and
fild
adc
cmc
(bad)
mov
stos
xor
retf
loope
aas
shr
push
jp
leave
jno
fcmovne
call
test
(bad)
(bad)
xor
mov
or
add
mov
popa
fsubr
and
stc
xchg
xchg
loop
or
mov
std
and
xchg
mov
push
mov
xchg
clc
xchg
xor
daa
out
fnstenv
ret
arpl
test
jl
pop
pop
inc
leave
call
ins
push
div
sbb
xor
movs
pop
mov
cmps
movs
pop
mov
loopne
inc
sub
(bad)
retw
cmp
xchg
mov
inc
fldenv
or
cmp
das
out
movs
test
retfw
mov
add
pop
mov
mov
into
add
arpl
jge
mov
mul
jb
dec
test
inc
dec
data16
(bad)
stos
xchg
xchg
mov
dec
arpl
sub
pop
add
les
popf
jmp
pop
enter
push
mov
or
adc
cmp
cmp
dec
lahf
mov
lahf
push
mov
or
pop
ds
jmp
mov
jp
xchg
and
bndstx
iret
call
mov
test
mov
mov
mov
lods
push
test
xor
sbb
ds
push
jnp
jecxz
sub
mov
setae
jecxz
jmp
pop
dec
sbb
pop
repnz
mov
dec
xor
sub
(bad)
jp
dec
lea
les
movs
ja
aad
div
inc
adc
fcmovnu
xchg
xor
push
scas
xchg
lock
aam
call
test
jne
daa
push
cdq
cmp
cmps
mov
fmul
idiv
icebp
xchg
xor
pop
movs
(bad)
out
jmp
cmp
outs
pop
cmps
cli
sti
lods
xchg
push
icebp
and
fs
sbb
mov
xchg
les
and
sub
mov
aas
call
test
jmp
loop
shl
movs
push
mov
jmp
push
xor
sub
or
xor
popa
sbb
sti
(bad)
mov
push
push
push
mov
mov
push
test
push
add
(bad)
ret
push
sar
ins
or
fnsave
stos
ins
std
loop
adc
lea
xor
pop
push
ins
mov
pop
mov
ja
stc
and
inc
sahf
popa
idiv
dec
loopne
je
dec
inc
dec
pop
js
hlt
ja
pop
cdq
push
retf
gs
adc
test
mov
push
add
inc
sbb
adc
dec
(bad)
cs
jecxz
das
mov
shl
pop
repz
pushf
ja
pop
mov
loopne
hlt
add
and
ins
iret
lods
bound
sub
out
mov
pop
out
and
adc
jecxz
into
mov
addr16
retf
lds
(bad)
test
push
mov
in
pop
movs
mov
lock
movs
jo
or
cmp
and
push
mov
ficomp
movs
in
test
cmp
mov
jns
addr16
stos
test
popa
fwait
retf
push
push
adc
mov
clc
sbb
shr
lds
call
mul
stos
or
in
aaa
mov
push
and
adc
or
mov
push
(bad)
jns
pop
inc
ins
stos
pop
dec
pop
(bad)
pop
sub
add
bound
cmc
inc
and
imul
cli
bound
das
push
xor
lods
and
cmps
mov
pop
pop
aad
pop
pop
aad
fst
adc
dec
scas
into
jb
outs
popa
mov
ins
inc
lods
xlat
enter
inc
stos
pop
fistp
pop
sub
sbb
jnp
xchg
ins
ins
repnz
das
cmp
xchg
scas
pop
xchg
pushf
sub
xor
es
xchg
stc
jge
add
add
ins
push
xchg
dec
push
push
stc
and
sub
movs
mov
push
push
jns
ret
(bad)
mov
dec
iret
cmp
ja
lods
sbb
pop
xchg
jns
test
xor
jmp
cmp
lods
ds
ret
(bad)
outs
cmp
mov
cmp
mov
(bad)
into
or
cwde
push
rcr
lods
call
and
popa
push
loope
jp
adc
xchg
clc
fnstcw
or
mov
retf
mov
add
jae
dec
or
xor
out
movs
sub
lods
cmps
jbe
cmp
inc
cmps
mov
adc
ins
push
jmp
cmp
(bad)
mov
ins
add
ror
inc
test
jne
rcr
aaa
data16
test
mov
pop
sub
dec
mov
pop
inc
lahf
leave
ins
int
cmp
dec
jle
add
pop
and
pop
aaa
dec
inc
push
xchg
jecxz
xor
jno
js
xchg
dec
mov
aad
lods
xor
retf
sbb
(bad)
mov
and
push
rol
popf
mov
ffreep
pop
rol
xchg
mov
jb
mov
fimul
xchg
enter
ret
(bad)
or
dec
aas
sub
jb
or
call
sar
mov
adc
xchg
fsubr
stos
jg
leave
mov
or
cdq
pause
cmp
jnp
jo
test
ffree
mov
push
daa
hlt
data16
mov
and
repz
or
int
les
dec
in
add
adc
and
push
leave
fidiv
mul
cli
push
mov
ja
mov
push
pop
pop
xchg
xchg
mov
xchg
enter
or
mov
dec
push
jmp
(bad)
cmp
ins
sub
pop
shl
push
fdivr
or
(bad)
sbb
add
ror
mov
fwait
mov
xchg
push
push
xor
mov
adc
pop
push
ins
jbe
(bad)
in
jmp
repnz
jmp
xor
aad
sbb
inc
movs
jge
popa
fwait
aaa
fsubr
sbb
push
push
pop
repnz
or
(bad)
fld
inc
jge
outs
sub
adc
pop
in
and
nop
mov
or
sbb
xchg
dec
push
aas
inc
mov
fmul
and
rol
dec
adc
ins
add
pop
out
or
(bad)
pop
mov
xchg
add
jle
arpl
pop
pushf
movs
hlt
ror
test
dec
cmps
popf
hlt
add
pop
(bad)
retf
dec
scas
aaa
popf
(bad)
(bad)
cmc
dec
xchg
adc
clc
(bad)
out
aaa
pop
or
push
adc
dec
out
ss
int
ret
outs
retf
gs
xchg
push
sub
jg
mov
pop
cmp
call
hlt
dec
push
and
repz
fdiv
shl
retf
fwait
xchg
in
xchg
mov
aas
pop
into
aaa
cmps
jns
xchg
je
and
inc
jmp
(bad)
pop
xlat
retf
cmp
mov
jo
or
mov
pop
add
mov
loope
add
mov
ror
dec
mov
push
push
or
sub
(bad)
hlt
xchg
pop
ja
pop
sbb
leave
sbb
sti
sti
fstp
inc
mov
and
adc
test
mov
aas
adc
xor
adc
sbb
int3
enter
retf
int3
push
sbb
data16
adc
inc
sbb
adc
mov
or
sbb
hlt
ficom
mov
pop
jge
mov
jns
jo
ffree
inc
xchg
movs
and
mov
adc
sbb
ja
sub
std
push
mov
loope
ins
or
test
out
add
ds
int3
jl
push
and
aaa
iret
fadd
and
push
fxch
pop
dec
dec
pop
out
cmp
repz
jns
dec
add
les
mov
mov
les
loopne
fsub
or
stos
mov
adc
dec
mov
test
test
stc
lahf
push
dec
add
dec
mov
sbb
xchg
mov
add
jp
cmps
sti
int
and
and
int3
std
mov
shr
mov
shl
pop
aaa
rcr
mov
sbb
repz
into
shl
dec
retf
cmp
sahf
ins
mov
(bad)
fbld
xchg
add
dec
mov
mov
sbb
popa
push
pop
lds
jbe
xor
fiadd
inc
pop
(bad)
into
ss
mov
add
imul
mov
mov
push
mov
pushf
mov
into
and
xchg
mov
dec
(bad)
or
sbb
sbb
mov
cmp
ds
pop
loopne
jmp
mov
mov
push
and
xchg
mov
or
mov
std
xor
int
push
fsub
sar
mov
xlat
add
add
push
arpl
dec
ja
jmp
pop
xor
rcr
jns
fstp
add
pop
nop
xor
jmp
ficomp
jns
mov
mul
mov
xor
sbb
adc
inc
hlt
jle
sub
stc
loope
out
scas
test
aad
loopne
es
(bad)
jnp
rcl
daa
adc
repz
iret
(bad)
leave
(bad)
pop
aad
push
cmp
ds
xchg
mov
mov
jns
iret
xchg
out
inc
rol
or
jle
sub
pushf
xchg
push
ja
(bad)
repnz
imul
rcl
push
out
mov
mov
xchg
xchg
adc
jbe
mov
stc
pop
cmp
(bad)
sti
dec
nop
push
test
imul
sub
(bad)
jp
es
movs
fsubr
jno
inc
retf
jl
adc
xchg
cld
inc
mov
in
imul
jle
mov
cwde
cdq
mov
addr16
sti
pop
adc
fdivr
cwde
mov
iret
mov
xor
mov
sub
stos
pop
cmp
pusha
retf
xchg
jno
push
push
arpl
dec
dec
pop
(bad)
pop
sbb
fild
pop
sbb
das
jl
push
icebp
mov
pop
or
jecxz
daa
(bad)
or
(bad)
add
sub
nop
cmc
sti
adc
mov
popf
push
loop
in
adc
fwait
fwait
push
jg
lods
loop
add
repz
mov
jb
aaa
daa
adc
sub
sub
loope
fdiv
xor
popf
ins
mov
aas
cmp
lea
std
loopne
cld
and
or
sbb
hlt
pop
inc
pusha
fcmovu
or
dec
mov
stos
sbb
aaa
mov
(bad)
dec
push
ret
in
mov
adc
adc
xor
mov
add
mov
hlt
add
movs
mov
and
cli
addr16
(bad)
mov
push
and
jg
add
xchg
test
outs
push
ficomp
outs
dec
mov
mov
iret
mov
cmp
xor
test
daa
or
xor
push
and
dec
dec
jo
add
inc
mov
das
add
pop
add
lods
dec
cmp
adc
xchg
aaa
mov
and
add
mov
sbb
jmp
push
lea
or
out
in
xchg
cs
inc
in
sub
xchg
sub
test
xor
iret
lock
sub
inc
mov
lahf
cmc
adc
jnp
add
jo
mov
push
test
jmp
cld
scas
test
jnp
jecxz
jnp
test
sub
jle
xchg
or
add
stos
mov
jp
pop
ror
mov
jg
sbb
(bad)
lds
xchg
xor
cmps
fs
xor
stos
and
movs
and
fadd
lahf
push
gs
xor
call
add
jns
jne
xchg
xor
push
leave
clc
adc
cmp
add
xor
sbb
ja
mov
frstor
or
js
add
pop
scas
movs
rcl
daa
into
mov
and
mov
repnz
scas
jbe
mov
xchg
movs
(bad)
sbb
push
jle
ror
fsubp
jle
nop
add
mov
loope
mov
daa
fidivr
loop
push
daa
js
addr16
add
lock
or
nop
aaa
and
and
lahf
loope
push
sbb
jne
loopne
cmp
dec
rol
popa
or
nop
pop
adc
imul
mov
mov
iret
ficomp
xor
sti
rcr
cmp
cmp
dec
pop
retf
mov
jae
pop
cmp
mov
rol
mov
lods
jmp
test
cli
push
mov
ja
mov
mov
xchg
ror
sbb
add
xchg
imul
lock
dec
imul
out
movaps
daa
push
push
fwait
pushf
cmp
push
adc
inc
add
push
(bad)
leave
cmp
sub
jns
cmp
addr16
push
test
ja
push
ror
fldln2
popf
jae
push
stos
pop
out
xor
and
jge
cld
mov
ins
lds
call
aam
push
or
sub
retf
das
push
mov
out
fwait
std
fucomip
call
sub
push
dec
test
lahf
ja
fisttp
cld
sub
push
jl
popa
or
dec
adc
or
daa
push
push
lds
jb
xchg
cmc
pop
call
jno
xor
inc
push
sbb
loope
mov
call
sub
stc
js
add
inc
popa
ret
fdivr
dec
inc
mov
and
pushf
lahf
jo
xchg
or
push
cmc
mov
dec
rcr
adc
xchg
xchg
jle
fistp
sub
xchg
cmps
addr16
mov
test
cdq
mov
dec
(bad)
cmp
jno
test
lea
mov
cdq
jmp
(bad)
pop
dec
xlat
pushf
ja
dec
mov
mov
(bad)
(bad)
cli
mov
add
dec
std
or
gs
stos
fiadd
xchg
in
mov
mov
sbb
ins
call
imul
in
dec
(bad)
jbe
clc
sub
cli
jnp
fbstp
cmp
icebp
adc
xchg
pop
gs
dec
mov
sub
inc
adc
lock
cmp
jp
jge
sub
push
xchg
addr16
mov
mov
aam
add
mov
neg
ins
and
fwait
dec
and
sub
push
and
js
or
adc
inc
mov
idiv
inc
inc
add
cmps
push
or
or
or
xchg
repnz
jg
push
push
out
shl
fsubr
sbb
xchg
arpl
mov
loopne
push
jnp
test
stos
push
cmps
rcl
retf
cli
xlat
(bad)
icebp
jns
outs
repz
int3
mov
pop
stc
adc
inc
and
out
jns
jge
jg
jecxz
(bad)
lahf
leave
pop
pop
push
aaa
inc
sub
add
push
push
jmp
out
daa
or
sub
jg
mov
push
mov
lods
mov
mov
pop
and
cmps
pop
jnp
inc
pop
sbb
jecxz
push
fld
aaa
mov
push
pushf
icebp
lds
pop
pop
inc
xchg
ffreep
(bad)
sbb
or
mov
(bad)
aas
dec
fsubr
push
dec
add
movs
fwait
jnp
sbb
mov
cdq
fisub
xor
add
into
retf
test
push
lea
test
(bad)
and
jnp
dec
push
lahf
pop
aaa
xchg
fiadd
icebp
(bad)
retf
push
pop
shl
scas
fadd
cmp
sbb
icebp
pusha
mov
ret
jle
or
gs
mov
shl
cmp
jp
nop
xchg
mov
(bad)
sbb
(bad)
loope
mov
adc
inc
sbb
or
jp
pop
loope
cmps
xor
and
aam
fsubr
sbb
and
jnp
add
add
outs
pop
xor
test
or
inc
mov
xlat
and
dec
lods
add
sub
daa
call
stos
or
leave
inc
push
adc
cmp
cli
(bad)
in
add
rcr
add
cmp
jg
dec
jle
inc
adc
mov
push
icebp
sub
mov
push
push
cli
cmps
xor
push
push
stc
in
xlat
sbb
out
sbb
cmps
ror
push
cmp
or
add
inc
pop
mov
and
repz
test
imul
push
ins
cdq
les
mov
dec
mov
imul
repnz
test
out
push
loop
in
ret
prefetch
or
adc
outs
or
pop
mov
fwait
pushf
sti
push
jl
or
test
cmp
adc
sub
sbb
int3
fmul
inc
stos
ss
mov
outs
mov
mov
(bad)
cmp
adc
leave
or
pusha
stos
or
jge
cmp
inc
sub
sbb
sbb
(bad)
push
in
jbe
or
(bad)
mov
xchg
inc
jns
jmp
mov
push
into
cmp
xchg
sti
ficom
ins
lea
int
in
mov
jle
and
in
ret
pminsw
sahf
(bad)
jbe
push
lods
cmp
popf
rol
adc
sbb
mov
int3
sbb
xchg
jno
test
nop
stos
mov
fisubr
shr
imul
test
imul
mov
sub
ror
pop
sbb
xor
sub
xor
ja
mov
adc
in
mov
jae
pushf
jnp
sbb
hlt
sbb
pop
leave
mov
rol
pop
fwait
js
(bad)
xlat
call
retf
lods
jl
push
push
pop
mov
aam
pop
inc
test
sbb
xor
scas
add
push
jnp
lds
cs
xor
(bad)
in
adc
inc
jmp
fwait
call
jle
repz
stc
mov
xchg
push
ret
mov
cmc
fwait
or
sbb
jb
xor
mov
imul
cmp
xor
leave
loope
lds
mov
jae
and
fsubr
mov
dec
mov
jb
fs
(bad)
imul
stc
js
xchg
jns
and
cmc
lods
push
adc
mov
xchg
sbb
sub
aaa
or
pop
fnstsw
cmp
sahf
add
out
jmp
ins
in
and
pop
jb
push
pop
or
sbb
aad
sub
(bad)
out
or
xchg
cmp
sub
xlat
pop
mov
xor
or
or
mov
inc
xchg
stos
cmp
add
outs
not
shr
cli
out
push
mov
(bad)
cmps
les
in
sub
cld
aad
lahf
jle
pop
pop
cmp
sbb
xor
fbld
mov
pop
mov
daa
pushf
test
adc
add
std
fcmovb
sub
movs
cdq
sub
pop
cmps
neg
jg
stc
push
pop
mov
stos
into
mov
ret
fbld
sbb
ds
hlt
out
sub
mov
ds
sub
mov
pop
jae
mov
and
cmp
das
add
fcmovne
stc
ja
dec
aas
xlat
and
enter
inc
dec
inc
test
mov
and
aam
mov
push
xor
pop
in
mov
leave
dec
cwde
pop
sbb
push
dec
(bad)
pop
imul
lods
add
test
jle
push
ins
rep
out
push
jbe
shl
push
nop
adc
repz
add
fcomp
ror
push
shl
cmc
mov
lock
and
or
bound
mov
int
adc
in
ret
in
mov
out
mov
in
xchg
gs
das
sub
data16
in
int
scas
shl
test
imul
cmp
rcr
les
pop
jecxz
xchg
in
add
sbb
add
jo
mov
arpl
inc
add
and
test
xor
loopne
ss
aad
xor
repnz
(bad)
xchg
shl
adc
and
cmc
pop
stos
ret
push
mov
push
sub
mov
stc
enter
js
jne
fldenv
mov
mov
mov
clc
mov
xor
sbb
jnp
sub
nop
jmp
das
in
mov
bound
mov
add
test
aas
xor
scas
lods
add
aas
jb
repnz
daa
mov
push
mov
popa
in
cmp
and
and
pop
add
in
xor
rcr
cs
loop
lock
cwde
jo
fisub
jp
es
mov
ficom
mov
pop
mov
dec
scas
shr
jo
or
loop
outs
or
cdq
sub
mov
xchg
and
sub
xchg
xor
cmp
mov
mov
js
les
cmp
inc
ss
loop
mov
(bad)
fisttp
mov
adc
imul
push
int3
outs
in
sbb
hlt
push
imul
or
mov
jecxz
dec
into
pop
push
push
pushf
push
xchg
scas
test
popf
add
arpl
jbe
pusha
or
and
mov
dec
xor
and
xchg
sub
arpl
inc
rcl
jmp
add
(bad)
cmp
and
xlat
gs
lods
out
imul
push
scas
stc
cmps
xchg
xor
mov
jae
ret
mov
cmp
mov
xchg
fcomp
add
pop
pop
inc
fld
test
mov
icebp
xchg
fwait
jmp
or
data16
mov
pop
dec
retf
popf
push
jmp
(bad)
sbb
pop
inc
sub
mov
fdiv
sub
(bad)
into
fwait
stos
pop
mov
pushf
imul
es
dec
fs
or
jbe
or
and
ins
push
push
bound
xchg
out
inc
(bad)
scas
mov
push
iret
sub
stos
mov
add
fdiv
test
and
int
iret
cmp
imul
ins
fcomp
and
mov
sbb
or
and
add
dec
shl
adc
stc
ret
test
not
int
fdivr
std
push
in
hlt
sets
int3
nop
cmps
dec
mov
dec
es
xor
mov
imul
pusha
xchg
sar
mov
xchg
xor
js
push
mov
mov
push
xchg
icebp
xchg
jbe
(bad)
gs
mov
mov
cs
daa
fdiv
xor
mov
int
push
cmps
lds
cmp
shl
sub
sub
cs
movs
or
push
cmp
dec
inc
pop
push
xchg
(bad)
nop
pusha
adc
mov
mov
and
xchg
dec
pop
add
cmp
outs
mov
xchg
or
loopne
sub
cmp
fs
ds
aaa
jmp
mov
push
not
ins
and
repz
pop
mov
cmps
mulps
mov
mov
push
mov
mov
rcl
or
mov
repz
shr
mov
sar
iret
inc
or
test
cmps
cwde
je
repz
mov
fsub
mov
mov
and
mov
fdivr
test
xor
imul
xor
shl
push
and
fadd
mov
dec
mov
xor
(bad)
mov
mov
pop
xchg
mov
pop
sub
mov
ins
cmp
je
call
jmp
sbb
stc
mov
jne
ins
das
sar
lahf
js
adc
cmp
ja
bnd
popa
xor
sbb
dec
pop
xchg
lds
cmp
jbe
shr
or
pop
fnsave
fidivr
adc
sub
and
scas
adc
mov
test
inc
mov
loopne
dec
out
ins
test
push
out
xchg
cmp
bound
xchg
imul
mov
xchg
xor
push
xchg
cmp
shl
jno
pop
jbe
call
xchg
push
bswap
imul
jecxz
aaa
mov
pop
sub
mov
sub
or
pop
and
rol
sub
dec
das
mov
cmp
dec
iret
je
sub
mov
pop
or
jbe
stc
and
and
repnz
mov
out
mov
pop
and
popa
push
out
sub
jns
mov
mov
ins
dec
inc
ret
pop
xor
ja
in
leave
dec
hlt
dec
push
cmps
sti
mov
icebp
out
push
pop
inc
mov
lods
out
(bad)
cmps
out
(bad)
inc
xor
and
sbb
cld
scas
sbb
out
js
dec
and
stos
push
push
in
push
out
jmp
into
dec
push
mov
icebp
push
pop
mov
neg
and
push
pop
jno
sar
scas
test
jmp
dec
lods
jo
or
push
dec
adc
popa
fld
fld
sti
inc
or
sub
sub
ret
lock
popa
xchg
push
mov
in
shr
fimul
enter
cmovge
inc
nop
ins
popf
nop
(bad)
in
inc
sub
pop
cmp
(bad)
loope
mov
or
out
inc
outs
fdivr
bound
cmp
cmp
pop
stos
popw
das
jnp
cmps
(bad)
gs
pop
mov
mov
sbb
sub
das
shl
not
mov
sbb
adc
push
sbb
test
mov
push
and
sub
pushf
push
jno
add
jg
jno
pop
fadd
push
mov
jg
inc
xchg
sar
xchg
and
dec
pop
mov
arpl
xchg
add
adc
ins
push
shr
sbb
xor
fwait
shr
adc
(bad)
fsubr
clc
gs
add
adc
inc
arpl
rcl
mov
into
jmp
enter
cmp
pop
cli
push
mov
mov
repz
int
mov
mov
fisttp
aas
jmp
clc
fistp
addr16
xchg
enter
ss
fldenv
sbb
ds
in
cmc
mov
in
cmps
mov
xor
sub
in
add
and
jne
hlt
dec
and
xor
push
inc
out
jmp
out
pop
push
repz
dec
mov
add
add
out
jno
sub
(bad)
loopne
shr
jb
lods
push
jne
aam
push
pop
fidivr
jb
int
cmp
fst
jmp
and
jecxz
mov
inc
stc
loop
neg
sub
sbb
gs
fwait
ret
lds
xor
lea
or
push
cdq
lods
jecxz
(bad)
cmp
(bad)
adc
sub
and
es
cmp
dec
push
cmps
gs
xor
sbb
ins
add
out
dec
inc
and
jle
out
mov
inc
out
ja
lods
add
mov
or
push
xor
outs
push
outs
add
cdq
movs
xor
xor
push
dec
mov
fiadd
xor
imul
adc
inc
mov
jno
inc
add
push
out
(bad)
out
pushf
mov
xor
inc
out
jl
sbb
dec
dec
mov
iret
lea
or
xor
push
inc
xlat
sub
gs
or
imul
int
sub
inc
or
push
jo
gs
mov
jmp
jge
cmp
std
pop
xor
jne
push
pop
mov
jo
pop
mov
addr16
and
inc
(bad)
addr16
mov
hlt
xchg
and
xchg
dec
sub
sub
cmp
cmp
push
in
sub
jg
pop
cwde
cmp
xchg
sub
jmp
cs
test
inc
adc
(bad)
add
mov
ds
jo
ins
jp
inc
cld
jmp
(bad)
shl
aam
xchg
mov
cmp
push
mov
pop
pop
cmc
pop
mov
xor
mov
imul
sub
(bad)
cwde
(bad)
sub
in
mov
inc
add
jne
mov
enter
hlt
xor
sub
jmp
fcom
call
ror
pushf
inc
mov
and
inc
dec
cmps
call
push
jp
icebp
pop
inc
rcr
xchg
fnstsw
clc
dec
push
div
cmps
push
cli
adc
lods
int3
and
jge
jle
sub
sbb
cmp
xchg
sti
xchg
jae
in
cmc
(bad)
jne
push
rcl
lock
adc
ds
popf
in
outs
rol
mov
into
mov
and
mov
(bad)
aam
(bad)
jns
adc
into
or
je
jnp
rcr
mov
or
adc
or
push
mov
jp
nop
xor
adc
or
mov
test
test
mov
fcmovnbe
push
xchg
gs
jge
ror
jne
pop
jecxz
in
or
ret
xchg
cmp
or
ins
and
or
mov
cs
out
dec
cmp
lds
and
pop
stos
or
test
mov
cmp
daa
sub
pop
(bad)
ins
jae
leave
(bad)
popa
xchg
xchg
call
jo
(bad)
loope
(bad)
xor
jb
(bad)
int
or
and
cmp
inc
push
mov
fimul
sbb
popa
pop
mov
aas
mov
ror
out
stos
out
cmps
in
cmc
lods
test
stc
popa
test
leave
addr16
repz
mov
pop
ss
push
repz
repnz
inc
lods
dec
sbb
jp
adc
add
movs
mov
sbb
int3
xchg
pop
fwait
mov
lahf
test
gs
int
xchg
sub
das
and
pop
mov
inc
(bad)
jmp
lahf
clc
xlat
jecxz
jle
scas
inc
vcmpss
cli
bound
push
(bad)
scas
pop
stos
pop
std
je
adc
call
ins
out
push
xchg
sbb
sub
shl
push
loopne
fcmove
dec
ror
push
mov
xchg
dec
or
xchg
pop
pop
outs
js
(bad)
ins
jle
inc
jmp
cmp
sub
sbb
dec
dec
loopne
movs
fistp
lods
imul
in
inc
(bad)
mov
int
inc
ins
pop
adc
mov
jg
dec
clc
jle
dec
mov
jp
xchg
cmp
mov
mov
sub
(bad)
inc
das
and
imul
jne
push
push
xor
jl
ds
test
lea
mov
retf
out
push
xchg
xchg
int3
mov
lds
sub
xor
cs
nop
mov
ins
test
clc
repnz
cmp
addr16
es
or
push
es
inc
rcl
add
cmps
out
out
dec
dec
cmp
or
adc
ja
loopne
mov
xor
push
jbe
jb
shl
pop
inc
sub
retf
jmp
xor
mov
stos
dec
add
push
push
sbb
xchg
pushf
adc
jp
sbb
mov
mov
aaa
jge
in
inc
xlat
je
test
sar
into
sub
fcomp
mov
sbb
and
jno
fxch
stos
out
fisttp
add
test
jl
aas
rcr
xor
repnz
scas
fmul
cmp
xchg
cdq
or
aas
xor
sbb
and
cwde
add
scas
out
inc
call
push
adc
push
add
arpl
push
pop
pop
push
pop
jl
sbb
(bad)
aas
dec
sahf
jb
xchg
dec
add
push
dec
nop
or
lock
pop
pop
pop
shr
mov
jecxz
push
sub
dec
jne
adc
shr
sbb
jp
xor
lock
inc
push
popa
pop
and
(bad)
sub
xchg
xor
(bad)
and
scas
or
test
jge
cmp
repz
call
(bad)
int
call
xchg
retf
xchg
xchg
mov
pop
jp
mov
outs
cmp
pop
dec
cmp
in
out
pusha
repnz
mov
cmp
cld
bound
push
pop
pop
not
or
test
mov
aaa
mov
rcr
repz
dec
test
sub
aam
rcl
(bad)
repz
push
adc
inc
xlat
test
push
sbb
ja
xor
inc
jb
sub
jl
fldenv
ja
add
into
imul
mov
stc
mov
add
xor
rcl
cmp
ins
inc
adc
int3
xchg
(bad)
addr16
sub
arpl
mov
arpl
xchg
xor
ror
mov
aad
pusha
inc
imul
scas
lea
(bad)
add
pop
xor
dec
stos
sub
cmp
mov
sub
dec
mov
int3
ret
lahf
test
(bad)
pop
stc
test
dec
mov
push
shr
hlt
mov
and
push
je
cmp
scas
int3
hlt
iret
push
test
jb
push
adc
popf
add
loop
lahf
inc
enter
stos
xchg
jmp
dec
bsr
scas
pushf
es
leave
aas
adc
cmp
lods
adc
xor
loopne
dec
or
pop
sbb
outs
inc
leave
fcomp
movs
adc
arpl
dec
push
int3
xchg
(bad)
lods
stos
xor
xchg
mov
outs
pop
cmp
cmp
jp
aam
push
mov
inc
lock
cmp
xchg
adc
pop
ja
and
fldcw
mov
js
cmc
(bad)
cmp
dec
pop
cli
or
and
jmp
add
mov
mov
and
mov
arpl
call
xor
and
hlt
xchg
stos
jae
shl
xchg
not
add
xchg
pop
jbe
jmp
jo
push
push
pop
icebp
imul
mov
shr
dec
pop
mov
out
add
lods
js
out
pop
jns
imul
push
popf
dec
hlt
out
out
inc
imul
aas
icebp
or
aad
je
xchg
adc
xchg
aaa
ret
and
xchg
inc
dec
fsubr
cmp
and
sub
push
mov
aam
cmp
add
aas
aad
cmps
les
xchg
add
int
xor
xchg
mov
pop
jmp
add
clc
lea
add
jne
mov
xchg
mov
out
mov
inc
repz
push
and
call
das
sbb
xchg
jl
test
sbb
inc
adc
dec
cmovp
pop
(bad)
fs
inc
push
mov
mov
or
fist
sti
leave
iret
jl
sbb
and
xor
jbe
xchg
jb
mov
lods
out
push
imul
stos
dec
jge
out
xor
dec
lods
ret
push
call
fiadd
test
lds
lock
cwde
repz
pushf
sbb
into
jmp
adc
mov
mov
bound
fld
maxps
sub
scas
sbb
mov
js
jl
mov
outs
jbe
add
cmc
ret
and
jmp
xchg
add
inc
mov
mov
xor
mov
xchg
je
sahf
push
push
es
adc
je
mov
dec
fidiv
push
movs
sbb
lods
jp
fwait
aas
cmp
mov
retf
test
sbb
je
sub
fsubr
into
not
out
sbb
jg
jl
out
push
sbb
xchg
and
xlat
fmul
push
pop
pop
or
int3
sub
jbe
ins
fwait
xchg
gs
aas
out
xchg
jo
ja
xchg
js
neg
jo
sub
dec
repnz
cmps
cmp
cmp
jg
or
or
pop
aaa
aad
xor
xchg
xbegin
repz
mov
dec
pop
add
in
movs
cmp
xor
js
mov
pop
jbe
loop
les
test
mov
nop
pop
loopne
jl
repz
aaa
jbe
into
nop
out
aaa
hlt
jmp
outs
ins
pop
adc
sahf
sti
and
mov
xchg
mov
pop
or
jns
xchg
into
inc
fldenv
stos
and
xor
lock
sbb
mov
push
pop
jp
jecxz
scas
xor
lahf
jmp
push
or
mov
xor
push
add
pushf
cmc
xchg
jnp
test
jmp
push
aaa
das
lock
les
(bad)
aad
cdq
imul
pop
shr
fnsetpm(287
push
loope
xchg
mov
adc
sub
lock
ja
sub
out
imul
mov
xor
cmp
mov
lea
sbb
pop
sar
fmul
arpl
rcl
int3
adc
retf
inc
test
test
arpl
test
jge
fmul
lahf
xchg
cmp
and
sub
mov
or
pop
(bad)
sub
nop
std
or
xchg
pop
data16
xor
jno
int3
inc
pop
fsub
(bad)
mov
daa
mov
push
mov
sub
pusha
add
push
js
das
jns
stos
xchg
dec
push
dec
and
cli
mov
push
push
mov
push
neg
hlt
jne
cs
arpl
adc
imul
ins
popa
inc
test
out
xor
push
add
aaa
imul
outs
ins
into
pop
into
nop
mov
rep
fadd
push
bound
movs
mov
and
jle
or
iret
add
dec
mov
cmps
xchg
arpl
sahf
mov
arpl
sbb
mov
xchg
cmp
shr
dec
ja
add
pop
adc
icebp
pop
pop
jo
xor
pop
test
int
mov
mov
jmp
jle
imul
xchg
adc
popa
xor
(bad)
mov
fisubr
pop
ret
shr
xlat
cmp
cmp
push
lods
imul
inc
aam
add
shl
in
test
inc
inc
out
jecxz
sahf
loopne
sbb
sub
dec
popf
(bad)
xchg
aas
or
out
(bad)
jmp
lds
push
neg
mov
dec
and
cld
xlat
jge
push
sub
loope
into
cmp
loopne
inc
jb
cmps
xor
loope
jb
call
adc
neg
xchg
pop
loopne
cdq
pop
xor
push
cmp
adc
add
pushf
lahf
mov
aam
lods
sub
pusha
inc
fimul
idiv
call
ficom
out
(bad)
arpl
stc
ins
pop
mov
jo
push
inc
adc
sub
mov
std
add
stos
(bad)
dec
dec
sub
(bad)
mov
pop
out
fistp
imul
jle
ss
jecxz
pop
sbb
cmps
fidivr
retf
inc
nop
inc
pusha
and
das
aas
out
push
mov
sbb
push
jmp
adc
shr
popa
mov
fdiv
scas
sbb
cld
sbb
call
lock
mov
mov
sbb
repnz
xchg
retf
inc
nop
rcl
dec
and
call
jmp
mov
sti
pop
and
bound
pop
pop
(bad)
adc
mov
mov
mov
(bad)
out
bound
cmp
dec
stos
xchg
dec
ja
mov
dec
out
daa
sub
fcomp
out
push
jge
movs
icebp
out
inc
stos
add
sbb
push
cmp
add
ins
push
adc
aam
(bad)
fnstenv
pushf
lods
inc
mov
sub
or
ror
out
retf
cwde
jp
aas
add
xor
sub
aam
dec
add
xchg
mov
cmps
fld
mov
mov
out
into
xor
or
sbb
outs
enter
or
adc
dec
or
and
out
adc
mov
mov
add
mov
aaa
adc
pop
mov
mov
sbb
adc
and
push
aam
dec
loope
das
push
call
mov
xor
jl
loop
sbb
sub
dec
xchg
xor
push
nop
js
jge
cmps
inc
lods
jo
jge
ror
jns
or
stc
and
out
or
xchg
jmp
dec
dec
fdivr
mov
adc
frstor
aad
mov
inc
sbb
xor
out
push
pop
clc
pop
les
mov
cdq
fadd
repnz
mov
loop
ins
retf
inc
ret
and
scas
repnz
ds
adc
idiv
in
ret
and
fnstcw
jmp
jle
add
stc
(bad)
clc
into
movs
push
adc
in
push
call
or
pop
dec
aas
jg
repnz
cvtpi2ps
cwde
mov
cwde
push
mov
dec
pop
xchg
mov
cmp
push
cmp
push
and
sub
out
mov
lods
add
sub
jmp
std
mov
sbb
cmps
xchg
(bad)
and
icebp
enter
cmps
xchg
enter
ret
adc
push
push
mov
ja
mov
and
inc
and
xchg
call
in
retf
ins
imul
xchg
jecxz
sbb
pusha
jno
sar
mov
icebp
adc
int
test
and
arpl
mov
pop
push
dec
mov
xor
stc
loope
mov
out
fimul
sub
or
cmps
into
pop
mov
mov
(bad)
mov
addr16
cmps
js
ret
adc
xor
aam
(bad)
jo
movs
push
bound
jnp
cmp
add
dec
js
sub
mov
dec
sub
leave
sbb
outs
mov
sahf
xlat
inc
sar
xchg
test
push
inc
bound
xor
int3
mov
push
mov
push
mov
fadd
arpl
pop
add
ins
call
outs
pop
inc
pop
(bad)
cmp
push
sub
leave
stos
jl
daa
ror
fcomp
and
loope
(bad)
xlat
cmps
sbb
ss
mov
mov
inc
loope
push
mov
shr
adc
and
xchg
je
lds
fs
mov
ficom
sub
inc
sbb
scas
or
out
xor
add
lock
(bad)
movs
es
jns
call
or
stos
int
xlat
inc
aaa
not
call
out
add
cmp
sbb
dec
(bad)
xchg
sub
and
sar
lock
pusha
nop
movs
movs
sub
out
retf
lods
lahf
cmp
stc
cwde
out
fidiv
push
test
in
cmps
icebp
push
push
shr
ror
sbb
loope
rcr
xchg
cmp
mov
jb
xor
push
sub
daa
call
dec
lods
inc
inc
jmp
mov
cmp
ins
in
or
imul
out
ss
mov
data16
movs
sub
lahf
inc
loopne
(bad)
xchg
aad
fbstp
cmp
jmp
test
add
cs
mov
xor
call
lock
sub
xchg
mov
add
jnp
sub
or
xor
add
or
or
ret
pop
mov
add
push
or
rcl
lods
je
and
xchg
mov
or
xchg
lods
add
mov
or
pop
push
gs
rcr
push
jl
outs
int
sub
and
mov
cmps
mov
cmp
xchg
popf
or
out
sub
adc
pop
fcmovbe
ss
xchg
cmps
push
mov
sahf
stc
xor
mov
push
fs
rol
xor
mov
int3
cmp
pop
(bad)
mov
pop
cmps
sbb
out
stc
push
mov
pop
jnp
xchg
dec
mov
fmul
call
cmc
loope
loope
pop
sub
xor
scas
jl
pop
sbb
icebp
sbb
xlat
arpl
aam
jb
clc
xchg
test
mov
and
out
mov
adc
sbb
jb
xchg
cmp
sub
pop
and
bound
mov
sbb
push
push
int3
loope
and
aad
arpl
inc
popa
xchg
adc
stos
lahf
mov
sahf
sti
daa
mov
pusha
jmp
xchg
dec
cmp
dec
or
mov
inc
(bad)
jecxz
sbb
jge
inc
sti
adc
ret
xchg
addr16
stos
or
cdq
xchg
and
or
cmp
mov
call
mov
lods
int
cmps
add
dec
add
inc
adc
cdq
and
cmp
and
push
outs
push
leave
jl
mov
xchg
enter
adc
adc
mov
sbb
xor
add
mov
jmp
loop
fdiv
dec
sub
stc
dec
mov
pusha
jo
and
mov
push
jb
sub
push
push
repz
xor
cmps
repnz
cwde
scas
inc
mov
or
cmp
gs
imul
jmp
fadd
cmp
push
in
inc
mov
fdiv
mov
cmp
jmp
dec
cwde
lahf
(bad)
movs
and
or
int3
in
addr16
(bad)
fbstp
mov
add
addr16
sbb
push
xchg
jmp
or
sahf
inc
fwait
adc
sub
rol
test
sahf
(bad)
les
jb
or
or
sub
mov
xchg
cmp
cmp
imul
jmp
jmp
call
or
sti
fcomi
inc
rol
scas
cmp
retf
dec
jl
mov
sbb
in
rcr
mov
stos
and
push
jmp
mov
push
dec
outs
aas
mov
inc
sahf
jge
add
rcr
xchg
retf
lock
push
mov
inc
and
jno
arpl
jnp
dec
es
jo
out
out
rcr
mov
outs
aad
int
fdivr
sbb
lods
xchg
outs
ret
(bad)
push
sbb
stos
and
push
mov
sub
mov
xchg
(bad)
dec
cmp
test
ret
(bad)
call
loopne
sahf
add
cmc
rol
call
sub
call
mov
push
and
out
cdq
movs
dec
mov
mov
jns
pop
je
sbb
dec
aaa
mov
mov
lods
mov
mov
jmp
mov
push
jmp
inc
out
nop
adc
imul
iret
xchg
retf
push
into
ss
nop
push
and
sbb
mov
fdiv
inc
dec
mov
cld
es
(bad)
mul
cmp
in
push
add
sub
sbb
cmp
sahf
mov
adc
test
js
xor
jae
mov
sbb
loop
or
out
jnp
imul
lock
dec
xor
mov
push
cli
jecxz
pop
push
stos
jno
vmovsldup
mov
add
pextrw
pop
cmp
xchg
add
xchg
aad
cmc
mov
jno
xchg
out
aaa
dec
std
ds
cmovg
(bad)
mov
jno
push
popf
cmps
xchg
test
xchg
push
pop
cld
mov
inc
repnz
cs
xor
daa
push
xor
pop
sub
mov
push
and
inc
ror
cdq
loope
mov
outs
sahf
dec
push
sahf
mov
push
test
jns
movs
stc
or
popa
push
and
aaa
cmp
cs
and
cs
daa
dec
call
(bad)
cdq
xor
shl
retf
xchg
inc
sub
lods
ins
add
mov
mov
mov
pop
stc
xchg
(bad)
inc
rcr
mov
and
jbe
int3
dec
cmps
xchg
dec
push
shl
neg
imul
(bad)
test
dec
pop
push
inc
addr16
adc
adc
inc
sysexit
out
(bad)
rol
or
inc
inc
enter
add
arpl
dec
add
retf
in
sub
aaa
or
push
mov
fucom
bound
xor
mov
jmp
xor
push
fdiv
cld
jge
fiadd
cmp
pop
jl
push
adc
pop
cmp
clc
mov
push
mov
out
jl
push
add
(bad)
bound
int
lock
sar
sbb
sub
pop
les
dec
sub
cmp
xchg
stos
add
scas
outs
out
pop
jmp
jmp
xchg
and
or
mov
lock
mov
jns
(bad)
ds
xchg
mov
fs
test
pusha
mov
aam
test
shr
sub
cmp
stc
mov
pushf
and
cli
je
mov
or
push
jbe
pop
cdq
adc
sbb
and
stc
fmul
scas
or
(bad)
push
adc
cwde
movs
pusha
sub
jnp
stos
movs
adc
loopne
mov
jne
inc
xchg
push
fmul
fs
ret
dec
ffree
imul
addr16
push
es
pop
ins
jnp
(bad)
cli
mov
inc
shl
inc
xor
or
or
icebp
mov
stos
dec
test
sahf
mov
mov
push
adc
int3
dec
jmp
(bad)
(bad)
shl
dec
inc
cs
or
call
ds
and
xor
xor
fnop
ror
shl
cdq
out
dec
icebp
and
das
cmp
aad
addr16
loope
mov
xchg
xchg
retf
pop
dec
adc
sbb
cmc
stos
push
jg
mov
add
leave
stc
sub
faddp
cld
idiv
xchg
std
dec
pop
mov
fldcw
out
pop
jge
in
dec
adc
xlat
movs
ror
int3
jnp
sub
adc
add
repnz
out
jnp
adc
mov
mov
lock
imul
pop
jp
cli
cmps
mov
jnp
fsubrp
loopne
icebp
aas
pop
pop
inc
and
ds
jo
mov
adc
inc
inc
rcr
(bad)
jle
lea
loopne
push
or
cmp
out
dec
push
popa
mov
repnz
adc
xor
or
add
cmp
xchg
enter
inc
shl
or
(bad)
aad
popa
mov
push
add
add
xor
add
add
dec
das
hlt
fidivr
scas
mov
loopne
push
in
jnp
push
or
xchg
and
sbb
mov
out
dec
push
mov
bswap
xor
mov
out
test
pop
bound
lods
cmp
add
scas
loop
rol
das
pop
loopne
inc
xor
xor
(bad)
jmp
outs
mov
shl
dec
js
out
popa
jmp
jb
mov
or
loope
add
mov
arpl
or
fdivr
mov
cmp
and
sahf
xlat
push
fwait
adc
lods
out
mov
es
bt
and
or
sub
mov
ffree
mov
jns
test
ins
dec
test
js
dec
aas
mov
aaa
outs
jo
(bad)
hlt
xor
mov
sti
or
add
sti
mov
(bad)
das
adc
rcr
inc
and
pop
aas
cmp
popw
ret
pop
xor
push
loope
mov
mov
out
cwde
mov
mov
xor
jno
nop
cwde
(bad)
aam
push
push
out
popf
pop
clc
outs
shl
inc
std
add
js
mov
ror
daa
xchg
jg
dec
out
dec
test
jecxz
dec
jle
fldcw
or
jp
adc
dec
xor
jp
and
test
inc
sub
mov
stos
pop
jmp
mov
pushf
sbb
dec
push
jle
div
lods
mov
xchg
imul
popa
add
bound
popf
sbb
xor
adc
out
shl
sbb
xchg
jb
mov
pop
sar
cmps
sub
aaa
sbb
jecxz
jmp
sbb
cs
pusha
jo
sub
mov
adc
data16
inc
dec
jp
or
xchg
(bad)
loopne
lahf
dec
pop
xchg
xor
mov
dec
repnz
daa
xchg
(bad)
mov
mul
xor
sub
or
hlt
jo
icebp
cli
callw
into
sbb
movs
sbb
sub
ret
xchg
sbb
mov
dec
mov
clc
nop
mov
rcr
mov
xchg
imul
jno
adc
ror
add
int3
(bad)
xchg
or
mov
inc
push
cmp
add
pop
int3
pop
mov
scas
ffreep
xchg
in
daa
sahf
retf
inc
inc
dec
cli
push
xor
adc
mov
mov
test
mov
sub
sub
dec
outs
pop
xchg
fild
and
jg
and
and
adc
xor
xor
adc
and
pop
jb
xor
sbb
jno
iret
ret
and
mov
sti
daa
nop
in
popa
std
push
aas
bound
mov
loope
inc
test
xchg
jl
ret
and
push
bound
pop
jo
call
pop
test
jmp
inc
push
sub
repz
cmc
jnp
mov
pusha
cmp
and
popa
push
and
add
(bad)
inc
push
ret
ds
pop
pop
cmp
into
(bad)
add
dec
aaa
(bad)
and
std
enter
daa
pop
mov
dec
mov
cmp
imul
(bad)
(bad)
jp
xor
xor
iret
call
test
cmp
in
fisubr
hlt
mov
rol
adc
xchg
repnz
(bad)
pop
popa
int
pop
int3
or
lds
jbe
push
ss
dec
dec
shr
adc
scas
mov
imul
mov
loop
out
and
out
inc
sbb
cmp
mov
or
jl
jno
cld
scas
shl
jg
sti
shl
dec
imul
jae
mov
imul
mov
por
mov
ins
push
pop
movs
aam
fisttp
mov
test
cmp
jb
nop
int
add
loope
lds
adc
push
pop
mov
cmp
sub
(bad)
mov
movs
lock
and
enter
and
std
push
cmp
sbb
test
neg
dec
pop
pop
(bad)
gs
mov
jl
rol
adc
push
daa
sub
adc
xchg
repz
sub
and
or
mov
cmc
or
push
or
cmp
mov
mov
hlt
(bad)
push
daa
adc
pop
cmp
cdq
stc
rcr
es
cmp
mov
pop
bound
rcr
cmp
mov
fistp
inc
jnp
dec
jno
or
adc
sub
neg
and
lods
pop
stc
push
mov
retf
je
mov
jmp
add
jb
pusha
imul
jns
in
push
mov
mov
jl
or
cmp
xor
xchg
push
cmc
add
or
and
lock
and
call
adc
mov
and
cmps
push
and
das
clc
xchg
leave
push
add
pop
jns
adc
and
cmp
bound
sbb
xchg
mov
pop
xchg
aam
and
pop
addr16
dec
add
cs
nop
enter
psubw
mov
mov
adc
push
ror
das
sbb
push
inc
pop
mov
and
dec
pop
jae
cmc
lods
sbb
lahf
lock
lock
cmps
shl
mov
push
out
outs
lock
mov
jl
xchg
stos
cmp
pop
xchg
xor
push
sti
test
cdq
sbb
dec
icebp
ins
loopne
(bad)
jns
push
lods
in
(bad)
nop
(bad)
and
sbb
cmp
scas
dec
out
cmp
daa
mov
(bad)
imul
clc
jns
lahf
test
jmp
cmc
add
ins
(bad)
push
fstp
fcomp
rol
push
lea
inc
inc
fcomp
imul
dec
stos
imul
or
aaa
adc
or
lahf
es
mov
and
(bad)
jmp
mov
adc
popa
mov
shl
cmp
xlat
jns
hlt
(bad)
aas
xchg
or
xchg
add
ins
adc
stc
in
ds
inc
jecxz
mov
adc
(bad)
and
movs
sbb
xchg
in
mov
loope
lods
les
test
adc
add
mov
add
test
dec
(bad)
gs
inc
inc
xor
retf
pop
sbb
jne
push
jle
fild
xor
(bad)
sub
cmc
sub
imul
cmp
jmp
cmc
sbb
(bad)
repnz
jg
push
jecxz
jbe
sbb
aaa
or
and
int
push
add
lds
aam
mov
inc
pop
sub
jmp
outs
adc
stos
push
test
jmp
or
loope
pop
lods
push
push
shl
mov
loopne
adc
ss
mov
sti
or
sbb
jae
loope
aam
div
inc
stos
push
and
lock
loop
ficom
cmp
cmp
jg
xchg
jmp
dec
imul
outs
sar
dec
dec
test
dec
cmp
mov
sahf
xor
mov
sub
imul
inc
mov
pop
aad
repnz
lea
lea
add
push
sbb
cmp
xor
dec
fdiv
jne
pop
dec
rcl
cmp
outs
cmp
and
inc
out
scas
cmp
xor
ja
dec
cmp
pop
ficom
aas
adc
and
push
xchg
cmp
sbb
add
scas
pop
fld
push
dec
(bad)
int
out
jle
pop
and
cmp
call
adc
sub
lahf
popa
sbb
push
in
popa
stos
xor
mov
stos
in
jecxz
fild
clc
daa
add
sub
stos
cmps
hlt
addr16
mov
popa
dec
dec
jmp
mov
push
sub
in
shr
std
jae
ss
mov
push
lea
aam
pop
add
jns
(bad)
cmp
fdivr
out
pop
sbb
push
jle
cmp
mov
ror
sbb
fcomp
push
push
adc
mov
mov
jmp
in
out
inc
in
sub
ret
inc
xor
add
aam
in
dec
inc
call
(bad)
mov
lock
retf
aas
cs
in
sbb
ret
add
and
ficom
(bad)
cld
jg
fwait
ds
iret
dec
xor
sbb
jne
pusha
(bad)
sub
(bad)
(bad)
aaa
xor
and
cmp
mov
aas
adc
push
daa
(bad)
in
movs
fnsave
push
pop
adc
mov
xchg
jae
(bad)
cmc
inc
dec
ret
mov
mov
retf
hlt
adc
out
rcl
add
xor
sbb
xor
gs
ficomp
rcr
mul
loope
(bad)
lock
jl
sub
or
sbb
std
xor
mov
inc
and
(bad)
cmps
cmp
inc
pop
bound
adc
xchg
shl
dec
sti
cmp
mov
shl
xor
lods
sbb
pop
xor
mov
sbb
xor
fidivr
repnz
leave
jecxz
lahf
out
out
iret
fist
xor
or
jecxz
pushf
ins
lahf
cli
into
out
ror
and
(bad)
stos
pop
mov
das
clc
xchg
jecxz
(bad)
sub
std
mov
in
mov
and
cld
ficom
ss
dec
scas
mov
movs
rcl
in
jl
ret
call
add
out
xor
xchg
fistp
dec
jbe
pop
xchg
int
ins
test
or
lahf
mov
loope
push
iret
call
pop
mov
stos
pop
dec
xor
(bad)
int3
jnp
(bad)
jp
cmp
retf
cmp
test
dec
cmp
mov
js
jge
push
retf
add
push
jns
add
movs
dec
out
ds
adc
out
arpl
call
pop
xor
mov
or
inc
mov
mov
into
and
or
sub
sub
aaa
(bad)
sub
mov
adc
mov
fxch
daa
xor
pop
stc
xchg
aas
cmp
out
ds
add
js
lds
(bad)
mov
repz
call
daa
(bad)
mov
push
es
clc
jns
out
mov
mov
aas
sar
jno
push
iret
mov
adc
sti
xor
sahf
adc
push
test
stos
cwde
dec
icebp
xor
mov
jp
and
cs
jb
jnp
aas
clc
sbb
out
xchg
mov
pushf
pcmpeqd
stos
mov
fiadd
stos
or
sbb
push
xor
clc
adc
call
test
jo
xor
in
ror
lahf
push
inc
sub
inc
sti
mov
inc
stos
sbb
sub
ds
iret
pop
fstp
adc
aad
cmp
pop
push
and
dec
cld
repz
sbb
loop
ins
outs
sbb
inc
inc
xchg
dec
jo
daa
ins
ds
cs
and
push
test
stos
es
call
call
scas
inc
cmp
push
push
ja
xor
aam
fmulp
aad
outs
shl
movs
lahf
fiadd
xchg
add
mov
sti
daa
shl
push
push
in
lock
daa
add
fidiv
std
sub
pusha
js
imul
mov
lahf
gs
pop
sub
mov
sbb
addr16
xchg
jae
jg
movs
add
lahf
mov
sub
mov
push
xor
and
lds
xchg
inc
cmp
mov
xchg
inc
and
jmp
lock
fsub
inc
cmp
ror
inc
mov
or
dec
sub
je
push
mov
fs
call
add
loop
repz
rcr
push
fdiv
cwde
clc
push
xor
cs
xchg
(bad)
lahf
cmps
gs
adc
aad
sbb
sbb
bound
mov
jbe
mov
loopne
test
and
std
or
rcl
xor
jl
xor
push
aam
(bad)
aam
jmp
cmp
sahf
xor
inc
mov
loopne
iret
(bad)
icebp
call
(bad)
not
push
ds
mov
mov
mov
mov
dec
mov
dec
movs
jno
(bad)
lock
es
leave
pop
mov
jo
pusha
or
fidiv
add
cmp
std
adc
fwait
icebp
dec
sbb
sub
into
mov
push
repz
dec
mov
shl
xchg
shl
(bad)
jp
rcl
xchg
test
div
loopne
loopne
push
cmp
repz
call
mov
outs
mov
dec
sbb
aam
add
mov
test
dec
pop
rol
mov
clc
xchg
mov
fld
or
pop
in
das
sub
jns
cli
call
call
add
cmps
or
fbld
(bad)
mov
shl
imul
fidivr
adc
mov
push
test
fisttp
push
pop
in
pop
add
jne
cs
ja
and
out
inc
mov
mov
movs
mov
cld
sbb
xchg
jmp
xchg
imul
cmp
popa
fucomi
or
fadd
es
pop
jmp
out
pop
call
jle
pop
mov
and
aaa
jmp
call
into
or
or
and
pushf
mov
in
mov
jne
loope
pop
push
popf
jne
push
sub
or
inc
xor
jle
push
(bad)
dec
mov
xchg
push
punpcklwd
jo
vpackssdw
sbb
cmp
jg
call
mov
rcl
inc
sahf
test
adc
mov
jg
xchg
jbe
dec
pop
repnz
retf
cmps
out
mov
icebp
loop
add
in
out
adc
mov
mov
push
adc
fidiv
sub
jge
jbe
jle
aad
pusha
or
add
or
aam
pop
or
cmp
daa
sahf
add
mov
int3
adc
mov
es
jo
ins
push
sbb
adc
pop
jnp
pop
add
cdq
inc
cmp
push
xor
out
adc
stos
movs
cdq
push
in
add
call
adc
stc
(bad)
scas
mov
aam
cdq
mov
div
lock
mov
fimul
mov
add
fcomp
jg
cmp
dec
(bad)
leave
inc
mov
mov
xchg
cmp
fmul
imul
mov
pusha
(bad)
jae
sbb
sahf
loop
popa
pop
repz
inc
pop
jb
xor
stos
sahf
xchg
shl
pop
sbb
mov
sub
adc
mov
mov
mov
lods
and
addr16
pop
jae
fsub
aas
push
int
inc
dec
push
test
xor
cdq
lea
or
xchg
adc
sub
leave
aas
or
mov
scas
adc
(bad)
cmps
xor
xchg
jecxz
sahf
std
sti
repz
loop
add
lds
push
movs
outs
mov
or
sar
js
scas
aas
ror
(bad)
scas
sahf
nop
stc
mov
std
popf
add
int3
push
jmp
(bad)
jl
or
inc
repnz
push
mov
outs
mov
enter
push
retf
loope
test
mov
adc
and
scas
loope
mov
push
movs
ja
cli
mul
and
adc
jg
call
aad
fwait
pop
and
ja
fsub
mov
inc
je
inc
mov
ficomp
sar
outs
mov
jno
movs
add
movs
cmps
es
test
in
and
fidiv
je
out
and
dec
push
add
pop
push
jmp
fisubr
xchg
mov
fcmovbe
mov
sbb
ss
jb
cmps
mov
cld
add
stc
sub
jns
shl
xchg
ins
pop
popa
inc
cmp
push
aad
xchg
inc
cmp
mov
jge
push
cmp
inc
out
mov
sub
dec
push
enter
mov
xchg
mov
and
mov
xchg
rcr
lea
outs
or
push
call
ror
(bad)
mov
inc
mov
mov
mov
(bad)
jno
das
pop
fwait
jle
rol
pusha
out
gs
ds
dec
jecxz
scas
add
xchg
add
xor
setge
lds
and
sub
shl
sbb
(bad)
sbb
cmp
sar
mov
shl
adc
jmp
loop
fst
jl
lods
add
xchg
rcr
(bad)
repnz
mov
data16
adc
mov
mov
jecxz
lahf
daa
dec
pop
mov
push
mov
es
mov
mov
adc
xchg
sub
les
sub
scas
call
neg
lods
xchg
jmp
sahf
xchg
cmp
aam
stos
xor
sbb
pop
(bad)
xchg
out
ficom
mov
inc
add
hlt
or
pop
mov
scas
js
xor
adc
xchg
shl
movs
outs
mov
xchg
outs
cmp
xchg
data16
cmp
lds
and
xor
cs
cmc
push
mov
(bad)
test
sub
cmp
mov
stos
aaa
(bad)
movs
mov
jge
mov
enter
push
mov
arpl
and
jecxz
mov
jae
rcr
sub
pop
cli
out
inc
(bad)
sub
in
pminsw
cmp
dec
in
jmp
lds
retf
mov
dec
jge
push
cmp
mov
(bad)
sbb
mov
or
cmp
pop
or
rcr
pop
pop
aam
outs
fst
js
xchg
push
je
mov
ror
fmul
add
addr16
push
lgs
out
and
dec
mov
add
xor
pop
jg
ror
sbb
fcom
mov
cmp
add
setno
dec
add
add
mov
sbb
ds
leave
sub
fwait
mov
rcr
test
aam
pushf
inc
clc
stc
retw
inc
in
sub
cli
add
mov
icebp
fst
test
mov
adc
sbb
mov
sub
addr16
mov
adc
add
daa
shl
inc
mov
out
jmp
cmp
xor
in
out
mov
xor
pop
jmp
xor
jg
and
loop
push
or
or
test
(bad)
int
and
xor
push
loop
sti
pop
push
test
dec
xor
aad
mov
int3
adc
adc
mov
push
pop
leave
inc
and
mov
fmul
pop
aaa
clc
xchg
sti
xchg
rcl
cmp
xchg
scas
mov
mov
sbb
push
ds
sbb
and
js
and
stos
xor
pop
fst
mov
lock
jb
data16
movs
pop
sbb
sub
adc
or
add
jecxz
imul
aam
mov
mov
or
mov
and
ret
aas
(bad)
sbb
shl
sub
adc
inc
lea
sbb
fs
dec
fist
leave
nop
das
dec
test
or
sbb
push
jne
bound
jl
dec
test
loop
sub
mov
or
je
add
mov
iret
mov
mov
in
or
add
sub
les
and
pop
mov
je
mov
pusha
jmp
sbb
dec
aas
pop
js
lods
aad
xor
shl
es
neg
add
das
jmp
int3
loop
mov
push
sbb
faddp
mov
aam
mov
mov
mov
std
mov
adc
dec
movs
int
fs
mov
cwde
fs
pop
mov
mov
dec
add
mov
(bad)
aam
addr16
ja
xchg
jo
fs
cmp
or
mov
out
rol
sbb
pushf
dec
repz
retf
js
mov
dec
add
(bad)
mul
sbb
or
inc
jmp
cmp
jmp
std
sbb
pop
push
popf
neg
in
fstp
aaa
data16
and
test
fwait
jno
or
int
aad
ret
(bad)
clc
xor
inc
leave
rcr
dec
data16
add
jnp
inc
pop
scas
pop
fild
pop
mov
xchg
aad
test
push
sbb
jge
dec
fnsave
cmp
fs
mov
addr16
ds
xchg
add
movs
clc
push
outs
aaa
test
cmp
call
retf
(bad)
xor
test
jb
mov
fild
adc
cmp
ins
data16
fadd
push
movs
push
outs
or
nop
dec
repnz
sahf
dec
ins
loop
stos
fcomp
cdq
jecxz
dec
dec
sbb
in
or
pushf
or
ins
rol
xchg
xor
add
push
sbb
gs
inc
cs
leave
sbb
jne
fild
ins
cmps
loopne
test
mov
ds
out
pushf
xor
setle
js
mov
cs
push
lock
inc
movs
inc
cmp
mov
jl
or
xchg
adc
out
xlat
ss
dec
or
cmp
fwait
sbb
dec
pop
push
popf
dec
rol
jbe
xor
cmps
jb
retf
jns
bound
(bad)
sti
les
xchg
aas
bound
push
add
repnz
repnz
and
and
popa
arpl
and
gs
xchg
iret
jo
mov
and
ficom
jmp
popa
mov
pop
push
out
(bad)
push
dec
repnz
pop
into
sbb
push
inc
mov
sbb
push
xor
jmp
sbb
mov
das
cmp
mov
out
(bad)
aam
cmp
and
jge
or
xchg
shr
repnz
mov
jns
cld
push
jns
mov
lods
cwde
xor
jnp
movs
cmp
ja
and
and
icebp
xchg
cmp
xor
in
sbb
(bad)
fucomi
cli
push
fs
push
mov
lods
dec
push
stos
bound
adc
sbb
test
pusha
sahf
call
(bad)
xor
jae
mov
daa
jl
mov
lods
fsub
lods
mov
pop
nop
dec
scas
or
mov
mov
into
mov
push
pop
in
scas
sub
outs
rcr
mov
xchg
push
pop
mov
(bad)
(bad)
lods
hlt
mov
das
retf
jns
mov
cmp
xor
cdq
mov
and
test
mov
movs
js
test
cmp
inc
cmp
in
mov
inc
cli
adc
and
fucomi
gs
aam
add
push
lock
fwait
std
jle
(bad)
inc
bound
push
daa
cdq
aas
test
fiadd
push
mov
(bad)
push
arpl
mov
pushf
jbe
out
jne
add
push
stc
sub
add
or
js
loopne
call
(bad)
addr16
mov
ficom
dec
dec
into
js
xchg
int3
ror
cmp
(bad)
js
test
aam
mov
xchg
adc
rcr
and
sbb
fisttp
mov
jno
mov
push
mov
movs
sub
mov
jnp
loopne
rcr
or
mov
mov
jp
das
push
dec
push
dec
in
lods
call
mov
out
arpl
inc
cmc
inc
in
push
movs
nop
(bad)
int
jne
xor
cmp
push
xor
arpl
pop
ja
pushf
ins
popa
cmp
pop
push
jae
mov
dec
inc
mov
bound
sbb
mov
iret
fisttp
xchg
inc
pop
push
aam
add
lahf
aaa
pop
int3
mov
add
mov
mov
in
push
imul
sbb
(bad)
pop
adc
jge
mov
out
mov
(bad)
push
(bad)
jmp
cmp
icebp
cmp
mov
push
push
movs
inc
cmps
cli
or
inc
inc
xor
sahf
ins
dec
xor
(bad)
es
cli
sub
dec
int3
sub
sbb
xlat
scas
mov
sub
mov
out
rcl
or
setge
jl
sub
mov
jl
pop
das
jp
and
inc
bound
xchg
out
cmp
into
xchg
pop
ds
loop
and
cmp
dec
call
adc
fwait
inc
stos
enter
xor
test
inc
or
rcr
je
outs
ins
lods
(bad)
repz
cmps
jne
pop
stc
jecxz
mov
clc
adc
sbb
icebp
lds
adc
mov
mov
out
or
ins
xor
cmc
stos
mov
xchg
mov
idiv
outs
add
les
push
push
imul
mov
loope
out
jbe
cmc
adc
pop
sub
xchg
shl
(bad)
push
inc
push
or
repnz
in
(bad)
or
sub
popa
aam
arpl
pushf
arpl
scas
rol
(bad)
stos
imul
or
repnz
mov
adc
call
pop
lods
je
push
ret
mov
or
cli
or
leave
inc
sti
cmpps
imul
push
mov
call
mov
shr
lea
popf
and
add
mov
jo
ret
sahf
inc
sub
or
js
out
movntq
ss
repnz
jb
jle
pop
cmp
mov
ins
adc
dec
test
in
adc
in
inc
into
aam
ja
das
push
pop
icebp
jae
in
sbb
push
scas
jbe
adc
sub
push
ror
mov
xchg
sahf
sar
mov
or
push
sbb
dec
imul
or
je
pop
mov
sbb
push
iret
push
in
xchg
scas
std
in
mov
ds
lock
and
add
xor
or
mov
sbb
push
xor
stc
or
cdq
out
(bad)
xor
sbb
jnp
cli
std
test
mov
mov
add
data16
and
cmps
je
fiadd
adc
jae
push
sub
popf
mov
cmp
repnz
push
cmp
sbb
movs
cwde
mov
xchg
inc
dec
adc
fisubr
push
scas
rol
sbb
sub
or
push
cmp
inc
add
outs
cmp
pop
sar
es
jl
repnz
addr16
in
cmp
jb
xchg
test
loop
int
adc
or
out
sub
push
xchg
adc
fidivr
movs
pop
aas
lods
cmp
sar
out
cmps
dec
xor
push
sbb
cmps
and
fdiv
rcr
inc
imul
pop
std
cs
je
pop
dec
push
sub
inc
push
pop
ficomp
pop
mov
xor
fdivr
xchg
pop
dec
mov
jns
mov
retf
or
inc
cmp
repz
push
sbb
jne
into
movs
fisubr
(bad)
les
pop
mov
mov
int3
ret
add
or
mov
not
in
dec
loope
into
jmp
xchg
test
das
jp
add
fwait
nop
cmps
jl
retf
ins
or
in
jns
push
mov
xchg
sbb
test
rol
mov
add
nop
cmp
pop
mov
inc
inc
push
pop
xor
push
fisub
or
push
ret
(bad)
leave
pop
(bad)
int3
js
add
addr16
in
xchg
cmps
or
mov
cmp
jb
or
sbb
fnstenv
xor
adc
rcr
push
into
and
es
cwde
sar
ficom
jno
pop
div
popf
call
(bad)
std
stc
adc
pop
inc
mov
shl
es
fsubr
push
outs
or
mov
movs
push
not
sbb
add
mov
xchg
pop
out
dec
add
enter
sbb
add
es
mov
cmps
and
or
and
je
cmp
out
xor
pop
sub
dec
mov
mov
and
lock
mov
push
out
js
(bad)
(bad)
sub
mov
or
xchg
mov
stc
mov
(bad)
dec
push
jge
jmp
call
xchg
push
int
(bad)
(bad)
mov
fistp
xchg
xchg
xchg
inc
and
xor
in
mov
dec
and
fcmovne
push
dec
xor
cmp
sbb
pop
js
xchg
retf
daa
adc
int
lods
out
mov
xchg
fsub
clc
jl
mov
xor
jno
push
mov
jno
and
stc
aas
dec
jne
or
stos
mov
xchg
in
inc
fucomi
das
dec
and
leave
or
out
call
(bad)
out
add
xchg
adc
push
cmp
add
nop
dec
retf
cmp
and
adc
into
inc
inc
push
icebp
jne
adc
adc
aaa
push
cmps
jge
adc
sbb
dec
(bad)
inc
mov
fsubr
mov
add
addr16
pop
sahf
xchg
inc
sub
lods
loopne
jmp
les
sub
jmp
(bad)
in
loopne
cmp
jle
fwait
jmp
pop
(bad)
fidiv
dec
add
jo
xlat
repnz
les
add
ds
pavgb
jbe
sub
mov
dec
addr16
cmp
xchg
push
retf
add
adc
cmp
int3
enter
test
iret
(bad)
(bad)
mov
test
push
and
add
push
leave
(bad)
sbb
jbe
imul
cmps
mov
loopne
lea
scas
pusha
hlt
inc
ja
sar
mov
scas
sub
mov
adc
cli
mov
inc
outs
sbb
pop
bound
sbb
sahf
push
sub
push
push
inc
iret
hlt
pop
pushf
mov
lods
js
popf
mov
shl
pop
jle
ins
add
adc
rol
cld
jns
aad
data16
and
sub
lods
frstor
jg
test
iret
sbb
pop
gs
int3
mov
adc
fwait
gs
fs
pop
leave
test
cli
lods
mov
jmp
(bad)
xchg
sahf
sti
retf
fidiv
jns
(bad)
test
pushf
inc
fwait
fwait
rcr
rol
sbb
or
out
shl
stos
int
mov
fisub
rcl
jns
popf
(bad)
std
sahf
or
push
xchg
jno
pop
xor
mov
inc
stos
push
mov
sub
xchg
neg
add
bound
out
inc
mov
std
cmp
cmp
ins
xor
div
dec
or
pop
arpl
test
inc
retf
dec
(bad)
in
call
xchg
adc
aam
cmp
sub
jg
mov
(bad)
mov
adc
and
pop
outs
out
aam
out
inc
mov
movs
cld
adc
xchg
popa
jbe
or
xor
mov
jecxz
loopne
jo
mov
test
icebp
call
das
mov
pop
sbb
jb
popf
inc
out
mov
adc
xchg
dec
jb
movs
jno
repnz
movs
ja
pop
sbb
push
pop
mov
jne
dec
call
je
int
call
jge
aas
mov
pop
or
xor
xor
sbb
stc
mov
xlat
or
sbb
and
sub
cmc
mov
add
lea
mov
(bad)
popa
dec
mov
mov
sbb
inc
dec
or
add
xor
rcl
pushf
lea
xor
out
loop
dec
into
xchg
cmp
ret
jne
and
rcr
xor
pushf
jno
imul
lea
adc
pop
(bad)
pop
call
cmp
or
cmc
jmp
pop
cmps
stos
push
sub
repz
fst
outs
jne
xchg
pop
push
call
dec
mov
outs
jns
mov
or
cmc
xchg
int3
jmp
(bad)
adc
repnz
(bad)
sahf
jo
cs
lock
mov
xchg
add
leave
mov
ins
test
inc
xchg
xchg
ds
lahf
(bad)
jnp
and
sub
retf
mov
mov
aam
inc
(bad)
lds
pop
stos
pushf
nop
ds
or
addr16
aaa
cld
(bad)
rol
push
lods
sahf
leave
not
cmps
test
and
mov
lahf
adc
pusha
fld
xor
mov
stos
sbb
xchg
mov
call
lea
(bad)
jge
pop
xchg
xchg
jp
sub
push
xchg
arpl
fld
push
xchg
inc
mov
int
cmp
adc
sub
mov
xchg
sbb
pop
rcl
cmp
push
xor
out
jo
sbb
jmp
mov
cmps
and
inc
les
fsubr
jmp
mov
inc
push
jg
mov
icebp
sub
inc
xchg
lods
add
cmps
mov
inc
mov
leave
lock
out
stc
and
adc
sub
mov
and
sbb
movs
scas
push
fisub
xor
and
dec
mov
inc
pop
ss
js
out
call
outs
xchg
imul
jmp
and
gs
loop
mov
test
sahf
daa
mov
sti
mov
sub
mov
sbb
movs
inc
push
cld
ret
or
and
in
dec
pop
(bad)
push
cli
or
mov
add
sub
inc
adc
jne
sub
cld
mov
push
or
cwde
scas
sub
daa
pop
popf
popf
sub
ret
cs
sbb
sti
inc
and
add
loop
push
inc
or
leave
add
inc
push
adc
arpl
arpl
pop
mov
fcos
jg
iret
dec
iret
jne
cs
sti
cli
add
jl
mov
rol
scas
mov
xor
call
push
xchg
xor
push
mov
xchg
cmps
mov
adc
xchg
jp
stos
or
(bad)
inc
in
mov
pop
mov
addr16
imul
imul
mov
retf
fiadd
in
pop
cld
leave
jmp
dec
pop
xor
clc
sbb
and
jmp
cmp
movs
outs
imul
jo
mov
xlat
and
stos
push
(bad)
xlat
loop
push
cmp
sar
sub
popf
cdq
cmp
in
pop
ins
mov
or
xchg
xchg
dec
push
add
enter
aas
data16
push
push
cmp
sub
outs
xchg
aas
popa
xor
inc
jne
push
pop
sbb
loopne
aam
fisttp
xchg
and
and
cmp
scas
outs
mov
mov
sbb
mov
out
ja
(bad)
mov
hlt
pop
in
dec
ins
xchg
dec
dec
jg
mov
test
cdq
int3
cmc
mov
arpl
ins
dec
dec
xchg
adc
xchg
and
xor
nop
sub
repnz
int3
out
(bad)
mov
addr16
jge
dec
cdq
outs
dec
mov
mov
push
pop
xor
les
push
movs
adc
retf
sti
or
bswap
push
aad
sbb
call
sbb
ret
push
cmps
ficom
cmp
cld
ficom
or
rcr
jnp
dec
xor
inc
mov
inc
inc
ins
sub
test
mov
outs
sub
popf
sub
mov
outs
sti
dec
mov
xlat
xchg
(bad)
(bad)
xchg
pandn
sbb
lahf
jg
dec
xor
cmps
(bad)
aad
jne
or
mov
jge
xor
mov
stos
sub
fs
add
test
dec
rol
mov
xchg
enter
pop
sub
sbb
mov
aaa
pop
sbb
lea
adc
and
xchg
lods
pusha
jmp
mov
mov
rcr
test
loope
test
shl
test
loop
(bad)
cmp
test
xor
cmp
jbe
fs
jl
es
push
loope
test
and
fst
in
inc
pushf
cmp
xchg
sbb
push
pusha
icebp
js
jge
es
rcr
and
mov
cs
mov
jns
int
dec
arpl
push
les
cmp
hlt
xor
inc
sar
test
dec
hlt
clc
cmps
call
ret
sbb
sbb
hlt
inc
or
xor
cwde
cs
mov
jbe
mov
cmp
test
mov
dec
mov
add
je
adc
sub
mov
fsubr
movs
and
add
aad
ret
jl
enter
out
xor
sub
popa
ins
xchg
push
rcl
gs
mov
push
sub
jno
pop
cmp
stos
or
movs
popf
mov
pop
into
movs
mov
shl
fidiv
xor
popa
popf
test
icebp
jb
pushf
mov
push
cs
les
sub
dec
ret
xchg
xor
movs
xchg
das
mov
sub
into
outs
mov
out
loopne
outs
mov
test
sbb
add
jge
mov
outs
call
out
sbb
not
(bad)
out
dec
test
jp
fld
mov
adc
addr16
push
rol
popf
jmp
mov
fdivr
cli
stos
out
fistp
mov
int
cmp
xchg
aas
shl
add
sub
pusha
shl
push
shl
xchg
add
add
cwde
push
and
pusha
sbb
fcom
ret
inc
call
jno
jbe
out
out
mov
push
xchg
cmp
mov
adc
mov
adc
mov
xchg
lock
aaa
bound
or
ins
mul
fdiv
pop
jle
into
jmp
retf
pop
imul
xchg
pop
push
les
pop
add
and
inc
mov
repz
shl
hlt
pop
fidiv
jecxz
js
push
jle
xchg
mov
cmp
cmp
sbb
ret
mov
mov
js
cli
jg
sbb
push
pop
int3
pusha
xchg
and
lods
sub
pop
cmps
pop
adc
add
sbb
iret
ret
mov
xor
mov
add
dec
dec
add
hlt
inc
adc
repz
xchg
xor
ja
(bad)
dec
sub
jmp
cmp
lods
std
jge
pusha
mov
jb
loop
or
retf
adc
js
xor
mov
cmp
xchg
jg
inc
lea
sbb
sub
scas
jmp
aam
fwait
mov
mov
rol
dec
mov
outs
cmp
pop
ds
outs
mov
in
dec
(bad)
lods
outs
je
pusha
mov
retf
out
loopne
add
sub
xor
push
xchg
xor
fwait
cs
shl
pop
es
jmp
aam
lea
in
sub
fnstsw
test
inc
dec
fdivr
lahf
repz
outs
xchg
hlt
mov
cmp
xor
xor
and
mov
retf
add
sub
fs
inc
inc
mov
adc
stc
add
adc
push
movs
popf
cmp
jl
sbb
cmp
in
sub
jns
shr
test
stos
mov
push
inc
xor
and
cmp
pop
jnp
(bad)
leave
enter
dec
hlt
int
adc
mov
fbld
cmp
pop
jmp
out
dec
das
js
xor
add
sbb
dec
or
jl
or
popf
dec
and
sub
aaa
mov
lods
ret
jl
repnz
xor
adc
jmp
push
sub
(bad)
xacquire
pmulhuw
movs
lods
into
out
dec
cld
cld
int
xchg
(bad)
into
aam
test
(bad)
cli
jb
mul
into
sub
pop
hlt
dec
pop
test
mov
and
loope
mov
es
fmul
mov
pop
mov
int3
mov
cdq
popf
bound
mov
call
rol
pop
in
sbb
movs
jns
(bad)
aaa
into
mov
jmp
lea
sbb
das
mov
jl
xor
inc
jle
mov
jle
and
outs
scas
pop
lds
ins
dec
enter
jmp
outs
and
and
and
push
add
(bad)
loopne
mov
out
dec
xchg
lds
xchg
cli
mov
fldl2t
sub
sub
mov
je
gs
je
scas
(bad)
into
ins
jge
in
(bad)
and
jo
in
cmp
add
push
or
cwde
mov
cmps
sbb
das
xor
loop
in
mov
mov
cli
in
sub
inc
sbb
fld
icebp
iret
stos
jne
or
add
xchg
dec
pop
and
pop
daa
fidivr
imul
addr16
dec
icebp
xor
jp
mov
arpl
inc
adc
in
shld
and
cld
int
sub
(bad)
add
cmps
dec
fs
xchg
not
xchg
scas
jmp
(bad)
cli
adc
int3
and
mov
test
inc
xor
test
or
imul
les
push
sub
test
sub
bound
fwait
imul
or
fs
mov
mov
nop
jne
hlt
repnz
and
ins
gs
sbb
pop
pop
ret
push
adc
sub
enter
add
inc
push
sbb
cli
dec
sbb
xchg
adc
jg
ss
push
das
retf
xor
ror
popf
js
movs
mov
push
adc
out
pop
jno
or
sbb
test
pusha
scas
lods
jbe
leave
popa
xor
test
inc
dec
shr
ins
xchg
test
mov
popa
mov
jne
in
jp
jo
sbb
in
cli
adc
lock
and
sbb
adc
push
leave
retf
sti
std
dec
cmp
in
push
push
sub
(bad)
cli
cmp
mov
arpl
fnstsw
sbb
lds
clc
rol
popf
aam
mov
and
test
jns
add
or
xchg
pop
jge
enter
(bad)
sbb
or
mov
dec
xor
sub
jg
jecxz
mov
mov
fidivr
(bad)
sbb
jae
dec
mov
sahf
cmp
xchg
inc
cmp
jge
push
sub
pop
je
(bad)
psubusb
call
stos
push
cmps
jmp
mov
out
xchg
jbe
jnp
adc
pop
pop
mov
idiv
or
leave
fisub
in
bswap
sub
into
sub
into
mov
hlt
adc
das
test
sub
mov
aas
cmp
fwait
rol
inc
pop
ins
lods
popa
lods
(bad)
aam
cmp
sbb
cmp
jecxz
mov
dec
retf
ret
(bad)
call
fs
aaa
push
pop
mov
in
ss
adc
cmp
mov
ins
mov
sub
cmp
xchg
jmp
pop
cmp
mov
not
fsubp
fsub
dec
dec
xor
mov
int
inc
pop
mov
mov
xchg
inc
ja
int3
mov
ins
ins
sti
ins
push
pop
pop
leave
push
out
xchg
jecxz
adc
cmp
add
push
imul
sbb
lds
xchg
mov
retf
fistp
into
xchg
movs
mov
test
out
pop
dec
or
cmp
jg
dec
sub
mov
sub
outs
imul
jge
rcr
sti
lea
mov
addr16
cmp
adc
and
rol
or
xchg
xchg
xchg
test
pop
arpl
movs
add
out
repnz
sub
std
pop
iret
sub
loop
mov
jle
pop
std
sahf
xchg
jle
(bad)
cmp
js
je
pop
shl
cmp
mov
mov
lock
or
ret
jmp
mov
mov
sti
(bad)
push
mov
movs
push
adc
push
pushf
rol
adc
lods
xlat
mov
mov
unpckhps
ins
xchg
js
outs
pop
outs
and
popa
sbb
out
jg
and
dec
inc
out
shr
inc
adc
mov
or
aaa
dec
popf
cs
aam
pop
js
loop
fdiv
call
fcomp
jbe
fwait
aam
js
sar
dec
add
scas
pop
scas
cmp
lods
(bad)
imul
inc
or
dec
xchg
imul
and
mov
pop
mov
(bad)
jbe
inc
add
es
inc
inc
adc
repz
daa
push
inc
or
jmp
sbb
imul
out
and
arpl
push
cmp
in
pop
enter
or
cdq
ja
lea
dec
(bad)
in
lds
ins
icebp
pop
pop
ss
dec
mov
mov
jl
int3
es
xor
das
mov
mov
xchg
scas
jmp
leave
loop
imul
lahf
rcr
(bad)
xchg
add
mov
sbb
jns
jb
xor
out
nop
mov
add
xchg
ret
in
and
mov
or
sti
jno
sahf
xchg
cmp
mov
imul
xchg
mov
test
lds
jns
imul
push
xchg
adc
je
mov
jne
jae
xchg
outs
movs
fs
retf
retfw
arpl
icebp
mov
inc
sbb
shl
inc
cwde
imul
xchg
punpckhbw
bound
pop
mov
add
jmp
mov
scas
jae
jmp
lock
aaa
out
pop
jle
in
ins
test
pop
mov
cmp
(bad)
faddp
or
push
jmp
jecxz
add
je
jae
ss
sub
jo
idiv
mov
in
outs
mov
das
jmp
les
push
sbb
mov
sbb
arpl
fldz
sub
dec
outs
mov
into
fisubr
cmps
mov
sub
jp
icebp
les
ins
push
mov
mov
ins
nop
lds
call
add
xlat
mov
jmp
adc
not
(bad)
mov
stc
sbb
sahf
inc
hlt
pop
out
mov
test
(bad)
les
ins
inc
add
out
jb
add
cld
jecxz
and
jmp
ins
pop
leave
xchg
test
in
cmp
push
icebp
pusha
and
push
cld
fdivrp
and
cmp
inc
mov
stc
fcmovne
sti
repz
xchg
test
fidiv
cs
or
test
mov
popf
jmp
inc
or
fsub
push
mov
mov
mov
leave
inc
xchg
cli
add
(bad)
cmp
hlt
aaa
gs
call
xchg
sar
jl
loop
mov
sub
cs
pop
std
(bad)
or
shl
nop
div
icebp
dec
ins
cmp
xor
mov
push
sbb
inc
add
(bad)
push
mov
lea
je
inc
fisub
(bad)
xchg
lds
fld
xor
sbb
or
icebp
jbe
cwde
ret
fdivr
arpl
adc
movsx
(bad)
and
mov
(bad)
test
add
xchg
push
push
or
sahf
sub
fs
into
sub
mov
fwait
loopne
pop
mov
pusha
mov
adc
loop
mov
lods
cmp
call
enter
jb
pop
push
pusha
jmp
es
imul
cmp
adc
xor
dec
mov
aaa
adc
or
stc
idiv
inc
mov
leave
jb
xchg
mov
xor
push
aad
fcmovnb
fsub
inc
aad
push
aad
test
sbb
retf
shr
xor
adc
adc
adc
adc
cmp
push
xchg
push
dec
int3
mov
fs
sub
mov
fwait
int3
sar
das
mov
jns
xor
and
int3
sbb
mov
cmps
rcl
mov
in
or
fmul
stos
test
arpl
int3
push
pop
lds
inc
mov
mov
cmc
jle
add
inc
pop
xor
lahf
lds
add
ss
jbe
dec
xchg
and
sbb
push
lahf
ja
pop
sbb
jle
mov
das
nop
pop
cmp
and
les
lods
les
loop
jmp
cmp
repnz
mov
xor
sub
xchg
inc
or
sub
adc
inc
dec
ret
imul
mov
lock
pop
repnz
and
inc
sbb
rcr
sahf
pop
into
outs
jne
ret
out
stc
(bad)
pop
add
(bad)
sti
scas
mov
xchg
xchg
xor
pop
jg
pusha
jle
adc
out
cdq
ret
fisttp
adc
sar
jae
enter
xchg
stc
jg
mov
xchg
nop
fcomp
lods
sbb
xlat
lds
sub
loope
xor
dec
add
mov
push
cdq
pusha
mov
lods
fwait
(bad)
xlat
out
test
int
mov
cmp
jno
icebp
das
out
mov
cmp
push
or
dec
xor
gs
mov
xchg
repz
dec
ss
cmp
mov
outs
jno
(bad)
stos
mov
loopne
lock
sub
fistp
push
jae
ins
dec
(bad)
pop
scas
imul
cmp
jle
hlt
jle
jbe
movs
push
and
rol
inc
adc
jl
jo
xchg
test
clc
in
jns
sbb
add
mov
mov
popa
sub
or
cmp
mov
(bad)
call
cdq
int3
and
cmp
(bad)
js
js
adc
inc
jecxz
sbb
retf
lock
nop
lds
and
push
push
sub
hlt
imul
jb
ins
pop
(bad)
sti
xor
adc
jb
xchg
xor
(bad)
inc
mov
and
test
add
ficom
pop
or
xchg
mov
inc
mov
xor
lds
repnz
add
xor
sbb
mov
jbe
jle
inc
add
sbb
inc
or
mov
mov
dec
or
imul
sub
push
jb
rcl
in
pusha
imul
mov
lods
popa
stos
aam
mov
ds
out
cmp
mov
or
inc
bound
aad
pop
test
dec
or
lods
into
stos
dec
cmp
retf
sub
or
sbb
outs
mov
or
add
pop
inc
push
adc
and
inc
xchg
or
out
cwde
xlat
dec
loope
cli
retf
loop
ins
jns
add
lea
out
ins
cmp
pop
mov
pop
idiv
xlat
cmp
aas
jg
daa
xchg
mov
and
stc
pop
and
adc
jl
cmps
cmp
jge
mov
daa
add
and
lock
dec
mov
test
push
push
ficomp
mov
mov
ret
jmp
mov
or
mov
test
dec
pushf
fnstsw
ret
shl
iret
inc
mov
int
fwait
sub
sub
sub
jecxz
mov
and
mov
test
cmp
jle
mov
add
clc
aas
jp
add
ficomp
sbb
ret
sbb
adc
jno
stos
out
jle
dec
mov
std
add
jbe
ret
mov
mov
loopne
out
cmps
push
pop
cmp
mov
out
ds
fcom
mov
push
xchg
mov
repz
cmc
jmp
jp
pop
mov
lods
in
cmp
inc
and
enter
inc
out
pop
in
push
call
adc
mov
aaa
inc
fnstcw
mov
xor
std
(bad)
sub
nop
sbb
(bad)
and
std
cmp
fdiv
push
pop
rcl
xor
mov
mov
jne
sahf
pop
or
dec
mov
jmp
mov
add
xor
and
mov
mov
call
mov
cmp
inc
sbb
cmp
xchg
aam
mov
xor
(bad)
dec
push
xchg
enter
popa
adc
ja
inc
push
mov
test
imul
pop
test
movs
mov
jmp
test
stos
sbb
leave
test
add
popa
call
out
enter
mov
shl
mov
mov
pop
xchg
sub
out
movs
mov
hlt
xchg
fbstp
repz
fcmovnb
fcomip
rcr
xor
loope
push
mov
aad
pop
ret
or
xor
mov
jne
add
sahf
mov
jae
xchg
sub
adc
mov
out
xor
icebp
mov
pop
mov
mov
jo
stos
cmps
xor
aaa
daa
into
in
sbb
xor
nop
jp
pushf
daa
fs
pushf
les
add
int3
cmp
fld
scas
xchg
imul
out
push
xchg
sub
outs
push
jne
fwait
aad
mov
rcr
scas
jecxz
sahf
adc
sbb
mov
pop
push
add
scas
enter
retf
aaa
arpl
push
mov
gs
lods
push
lock
fs
mov
sub
xlat
addr16
ret
aad
ds
or
xchg
std
or
es
in
pop
(bad)
sbb
jbe
pop
cmp
scas
and
push
fcomp
outs
loop
dec
call
cwde
push
popf
push
and
jnp
pop
leave
adc
xchg
movs
and
scas
imul
sbb
stos
pop
jmp
repnz
add
jae
xor
push
stos
data16
jmp
scas
int3
bound
cmps
mov
cmp
or
mov
jle
pushf
scas
adc
jle
inc
(bad)
xlat
fstp
sbb
pop
es
ins
xchg
xlat
xchg
push
mov
pushf
pop
inc
jb
push
aam
dec
imul
xchg
dec
mov
mov
test
cmp
sub
inc
push
(bad)
mov
sbb
push
xlat
imul
and
fnstsw
enter
ret
push
mov
bound
mov
divps
cmp
cs
mov
inc
jno
xchg
and
cmps
retf
test
add
adc
ja
jo
clc
mov
movs
and
xchg
jge
push
je
inc
mov
sbb
dec
sti
lock
std
int3
scas
dec
dec
in
adc
sbb
es
mov
cmp
mov
pop
mov
xchg
cmp
test
xchg
(bad)
ror
and
add
and
fisttp
ror
pop
pop
scas
push
and
dec
push
sar
repnz
adc
or
or
sbb
mov
xchg
ss
pop
xchg
add
dec
mov
out
jne
dec
pushf
adc
jle
rdmsr
sub
(bad)
rcr
pop
test
mov
mov
push
sbb
test
jl
lods
arpl
push
xchg
mov
clgi
jmp
mov
(bad)
stc
stos
aas
lea
adc
bnd
mov
xor
out
push
repnz
(bad)
jl
xchg
mov
mov
sub
xchg
fwait
dec
xchg
mov
inc
outs
and
lock
jle
xchg
nop
jmp
in
lahf
adc
add
movs
test
sub
pop
sbb
dec
inc
pop
and
je
(bad)
sti
loopne
dec
sub
out
cmp
sbb
push
push
in
lock
stc
jle
int
push
mov
ins
sar
xchg
das
sub
adc
push
xor
retf
mov
pushf
test
dec
sbb
adc
inc
xchg
retf
jns
pop
or
jle
dec
jg
mov
jb
adc
mov
jns
push
push
inc
int
(bad)
in
push
jge
jge
pop
push
popf
loop
jp
lahf
outs
je
inc
xchg
pop
mov
mov
int
dec
push
and
lods
fst
adc
add
jp
movs
fstp
pop
mov
inc
cli
mov
test
sbb
inc
xchg
div
push
stc
cmp
into
and
fistp
ficom
sbb
push
pop
aam
mul
repnz
mov
sti
jge
pushf
lea
out
ret
rcl
out
sar
mov
lods
sahf
out
lahf
pop
dec
test
xlat
push
cmp
jmp
rcl
hlt
jnp
cmps
inc
fstp
out
xor
add
test
mov
popa
add
inc
std
dec
xchg
test
out
mov
dec
mov
and
pop
push
sub
jmp
push
sbb
les
rcr
adc
mov
ret
cwde
aas
pop
xchg
stc
daa
jno
ins
push
add
xor
imul
xor
pop
rcr
loopne
or
pop
mov
aad
xchg
jnp
and
loope
cmps
jmp
dec
and
inc
or
push
call
cmps
mov
xchg
sub
stos
ror
mov
xor
clc
cmp
adc
test
es
jmp
xor
fwait
jge
idiv
call
adc
(bad)
call
inc
add
std
cmp
repz
nop
xchg
outs
sbb
cmc
shl
and
xor
xchg
mov
mov
and
push
loope
jmp
and
outs
cli
loop
push
mov
shl
xchg
outs
jge
mov
rol
out
sub
sbb
jmp
mov
pop
mov
stc
mov
and
xor
push
push
cmps
ins
movs
scas
mov
mov
xchg
xchg
cmp
xchg
adc
rcr
sti
sub
lods
cmp
addr16
imul
mov
jbe
sbb
xchg
sub
or
fstp
aas
jne
xchg
imul
jecxz
jns
push
mov
jp
xchg
xor
in
cmps
sbb
mov
push
fxch
dec
fwait
(bad)
ds
test
idiv
repnz
test
loop
je
cmp
in
or
xchg
mov
push
or
lock
push
ja
ss
dec
mov
dec
scas
int3
dec
xchg
stos
adc
popa
push
lock
or
mov
adc
gs
sbb
pop
out
push
mov
lods
ins
xor
js
lods
icebp
das
rol
mov
mov
xor
dec
or
fstp
cs
loopne
add
loop
xchg
clc
int
imul
pop
sbb
xor
shl
sub
jp
mov
repnz
dec
dec
(bad)
fist
lahf
std
pop
push
test
lds
jbe
mov
or
ja
sub
inc
xchg
fnstcw
xor
sbb
aaa
dec
xor
push
push
cli
cmp
int3
sbb
iret
imul
mov
dec
jmp
movs
aas
cdq
push
loop
or
test
and
lods
xchg
fwait
data16
mov
outs
aas
mov
pop
sub
inc
push
shl
cmp
call
and
push
data16
adc
loopne
jmp
mov
pop
cdq
mov
out
add
out
repz
fcmove
(bad)
xchg
das
push
fidivr
es
int3
xchg
dec
repnz
int3
sar
test
push
mov
je
js
or
push
dec
xchg
loop
stos
stos
push
sar
dec
dec
jns
jle
scas
and
jnp
mov
arpl
mov
mov
mov
mov
std
popf
sti
stos
xchg
dec
jnp
sub
push
and
push
jecxz
pop
aas
in
sahf
int3
nop
xchg
call
in
xor
retf
call
dec
adc
push
pop
outs
xlat
ja
movs
(bad)
push
pop
or
imul
pop
jb
les
movs
xchg
mov
imul
jmp
and
jns
and
cmp
outs
sbb
out
into
imul
xchg
push
outs
ficomp
push
mov
addr16
outs
dec
enter
ret
cmc
mov
pop
adc
or
mov
adc
enter
dec
cli
shr
mov
(bad)
arpl
xchg
adc
ja
aad
movs
cmp
loopne
fidiv
inc
retf
out
push
or
mov
loop
and
push
mov
not
mov
xor
mov
sbb
mov
dec
js
clc
das
out
ret
hlt
dec
dec
inc
jno
repz
popa
mov
sub
pop
mov
add
mov
dec
int
push
(bad)
repnz
cmp
clc
pop
or
imul
mov
xor
ins
mov
and
cmp
retf
add
cs
xchg
push
push
jbe
gs
les
ss
call
jl
xchg
push
jbe
daa
ss
and
inc
out
sub
mov
inc
pushf
fmul
push
dec
cwde
pushf
xor
call
leave
push
jo
and
ds
rcr
(bad)
repz
pop
xchg
add
adc
loopne
mov
sar
xchg
mov
xchg
mov
dec
out
add
xor
inc
dec
xchg
add
xchg
sahf
jno
inc
push
repnz
pop
jle
fwait
xchg
(bad)
in
lods
call
add
dec
push
or
pop
cmp
push
fsub
jae
cmps
cmp
cli
out
cmp
int
sub
mov
frstor
lock
enter
jns
and
out
retf
std
mov
gs
mov
adc
(bad)
ds
push
mov
sbb
jp
repnz
mov
xchg
lahf
jle
leave
pop
es
mov
pop
cmc
cmp
ficomp
push
dec
push
xlat
(bad)
fstp
xlat
adc
imul
loopne
mov
fadd
lods
cmp
movs
mov
and
inc
imul
adc
push
pop
push
pop
scas
push
pop
cld
lahf
jae
bound
sub
ss
mov
shl
loop
lods
xor
ja
aam
sub
xor
and
push
ins
cmp
pop
xchg
mov
ins
sub
int3
sar
and
lahf
add
sbb
pushf
cmp
sub
xchg
cmp
sub
lods
jmp
fs
and
push
mov
loopne
lock
out
(bad)
out
pop
js
xor
loopne
jnp
pop
test
shl
lds
inc
loope
jle
adc
push
pop
sti
xchg
inc
jns
lea
jae
xchg
fsub
mov
popa
cmp
js
(bad)
aad
or
or
lahf
daa
xchg
sbb
cmps
nop
lock
xor
ret
out
and
adc
shl
lods
shl
jne
inc
push
add
mov
fwait
mov
or
test
fs
ficomp
pop
cmp
adc
jns
call
mov
inc
mov
sub
aaa
jge
mov
dec
in
mov
popa
and
push
cli
ss
enter
daa
std
sar
jp
sub
jb
dec
sub
addr16
stos
leave
test
xchg
jmp
cmp
mov
in
nop
xchg
xchg
sub
out
mov
std
jmp
stc
push
sub
into
loop
sub
sub
in
jae
in
jge
mov
daa
adc
xor
xor
enter
cdq
lods
add
and
rcl
loope
mov
sbb
pushf
inc
mov
inc
xchg
inc
sub
scas
xor
enter
xor
cmp
jle
mov
adc
int
rcl
ins
sub
add
xor
scas
outs
dec
adc
xchg
(bad)
pusha
sub
pop
push
and
cmps
push
pop
mov
xchg
in
dec
add
sub
mov
jne
mov
rcr
jmp
call
(bad)
pop
stc
fisubr
adc
dec
das
movs
into
xchg
lahf
mov
push
mov
icebp
mov
add
test
std
rcl
shl
jne
call
xor
mov
push
and
ss
out
push
setae
cmp
dec
test
call
(bad)
mov
mov
pushf
retf
mov
jle
test
scas
ja
loop
adc
xchg
outs
add
call
mov
jecxz
popa
loop
inc
shr
adc
mov
sar
retf
cmp
and
push
push
xor
jle
ret
sbb
int3
loop
leave
in
push
mov
push
push
or
push
push
sbb
aaa
inc
push
cmps
(bad)
cmp
mov
(bad)
out
mov
jns
add
sbb
std
(bad)
fwait
inc
mov
das
jp
jb
sbb
adc
bound
ret
xchg
cs
mov
xchg
(bad)
in
outs
jns
lock
pop
mov
push
or
mov
jae
cmp
pop
sbb
scas
hlt
adc
jnp
jg
and
xchg
mov
imul
sti
and
mov
call
cmp
mov
sub
push
scas
mov
push
sahf
dec
or
jge
hlt
mov
dec
cmp
adc
test
jns
shl
jo
(bad)
mov
ret
aam
fsub
mov
push
je
jp
(bad)
in
xor
imul
popf
xchg
pop
dec
and
sbb
pop
mov
neg
add
clc
cmp
mov
mov
cmp
fnstenv
int3
mov
iret
push
aas
cmps
dec
call
push
inc
stos
push
nop
mov
jbe
fcom
lock
cmps
cdq
ds
call
fadd
lahf
and
xor
mov
(bad)
xchg
or
pop
sbb
popa
xor
aad
fild
dec
(bad)
es
aad
jnp
and
std
inc
push
pinsrw
lods
inc
loop
fiadd
mov
sahf
mov
push
cli
inc
adc
ror
xchg
data16
(bad)
xchg
cmp
out
mov
and
xor
pop
mov
add
or
loop
add
(bad)
mov
fistp
pop
dec
inc
pop
ret
mov
jns
out
out
lods
mov
ror
das
pop
xchg
gs
rcr
(bad)
mov
or
ins
clc
mov
out
push
hlt
adc
xor
dec
icebp
frstor
stos
jg
(bad)
cli
push
jae
sbb
inc
jl
xchg
fistp
rcr
addr16
sub
jae
mov
add
mov
iret
pushf
fnstenv
stos
push
adc
ins
gs
imul
scas
and
xchg
shl
pop
(bad)
fist
cmp
repnz
loop
sub
movs
pop
imul
jno
pop
mov
ins
xchg
mov
mov
push
xor
nop
jnp
or
popa
cwde
add
add
and
popf
dec
cdq
jge
jmp
aas
mov
sti
ins
cmp
stc
fcomi
push
stos
into
push
add
cli
mov
jmp
mov
out
or
ret
mov
scas
mov
test
add
xchg
xor
in
push
push
sbb
lods
pop
sub
sub
sbb
icebp
outs
adc
xchg
sbb
scas
add
adc
sahf
cmp
jecxz
popa
dec
arpl
aas
jbe
movs
inc
(bad)
std
cdq
sbb
cs
jmp
aas
mov
and
inc
aad
retf
ficom
fidiv
inc
sub
push
retf
cmp
inc
ins
sub
imul
cs
xor
sub
fst
jmp
call
jecxz
hlt
and
es
fcom
repnz
rcl
lods
rol
ins
out
scas
lods
jo
mov
arpl
or
jno
in
call
pop
ficomp
enter
jl
ror
lahf
cli
pop
pushf
shr
call
nop
(bad)
rol
pop
lods
imul
test
and
lods
fwait
xchg
(bad)
adc
cs
push
xchg
or
ficomp
mov
scas
sbb
xchg
cmps
gs
pop
xchg
xor
jae
push
mov
ret
dec
ffree
not
mov
add
pop
in
jge
in
jmp
pop
mov
movs
mov
jmp
push
jno
sar
test
mov
imul
xlat
and
sub
xchg
pop
sub
mov
xor
mov
or
or
jae
push
mov
or
sub
in
cmp
jne
fcom
aaa
or
imul
arpl
mov
int3
adc
and
and
out
sbb
inc
icebp
pmaddwd
adc
test
mov
clc
out
cli
pop
add
(bad)
fidiv
adc
(bad)
scas
xchg
adc
mov
cmp
loopne
cmp
dec
add
lea
add
jge
mov
inc
cwde
in
std
xchg
xchg
adc
sbb
jmp
cdq
pop
sbb
sbb
movs
lea
fs
jmp
dec
sbb
adc
jle
mov
xlat
enter
lods
retf
jecxz
stos
fcomi
mov
lea
ins
cmp
mov
and
fimul
pusha
inc
ins
shr
cmp
mov
mov
sbb
add
mov
addr16
outs
outs
jecxz
mov
mov
addr16
sub
div
pop
call
mov
xchg
xor
(bad)
mov
cmp
dec
inc
rcr
je
mov
mov
jmp
xchg
and
push
adc
cmps
xchg
jge
imul
xor
in
or
out
sub
push
cwde
xchg
jo
pop
loop
xor
(bad)
test
gs
mov
push
push
ins
ins
into
jmp
lock
sub
cmp
icebp
xchg
cmp
pusha
xor
mov
pop
movs
mov
and
les
push
mov
stc
sub
jae
xor
and
and
cli
lods
or
das
dec
je
(bad)
cli
or
dec
fbld
inc
pop
dec
jg
pop
jno
mov
xlat
cmp
je
lea
rcl
cli
mov
call
sub
into
and
call
test
inc
add
pop
jmp
mov
call
xchg
lahf
sti
or
ret
jns
movs
shl
jmp
mov
retf
cmp
mov
xchg
mov
dec
int
adc
inc
dec
pop
nop
rcl
cs
stc
xor
and
mov
jmp
movs
(bad)
rcl
sub
ret
faddp
leave
rol
inc
mov
dec
cmps
test
jmp
stos
sbb
ins
inc
out
xor
mov
shl
push
sub
das
pop
adc
pop
jo
rcl
repz
sbb
(bad)
fwait
or
sub
sbb
arpl
mov
fs
xchg
cmps
(bad)
jmp
lea
dec
cmp
cmp
xor
xchg
xchg
gs
mov
cdq
adc
jle
nop
cmps
sub
cmp
push
ror
outs
cdq
ins
xchg
ins
in
daa
fmul
cmp
aam
dec
dec
jb
inc
test
sub
movs
cmp
adc
push
sbb
jle
(bad)
xchg
xchg
xor
add
mov
push
out
push
jbe
out
pop
ins
jno
xor
cwde
in
outs
mov
sbb
xchg
enter
push
cdq
lea
pop
push
sub
mov
(bad)
mov
or
jo
dec
cmp
cmp
jecxz
arpl
xor
inc
jle
shl
ds
fadd
popf
test
sub
mov
sbb
sub
test
hlt
retf
push
mov
mov
int
push
std
test
cmp
in
push
cld
xchg
sbb
pusha
aaa
sbb
sbb
xor
shr
dec
bound
ror
adc
adc
mov
mov
aad
push
(bad)
add
in
mov
or
pop
inc
push
push
adc
mov
aam
adc
(bad)
movs
movs
in
mov
push
retf
fst
not
xchg
jno
add
rcr
sbb
pusha
cmp
stc
pop
retf
enter
fucomp
jle
lds
out
rcr
gs
call
int3
shl
test
stc
cmp
push
and
sbb
dec
jmp
or
loop
in
pop
repnz
call
cmp
je
addr16
cld
lock
lahf
adc
mov
shr
sbb
out
int
and
push
movs
hlt
(bad)
hlt
stc
aad
sbb
xchg
add
popa
out
jge
dec
mov
or
outs
outs
lock
mov
fs
(bad)
loop
mov
adc
jg
nop
movs
gs
sub
inc
cmc
lods
inc
pop
fwait
and
mov
sbb
push
jmp
dec
out
in
mov
iret
mov
aam
fild
dec
mov
pop
ficomp
add
mov
gs
(bad)
mov
ins
sbb
dec
gs
inc
test
pop
push
sbb
adc
pop
push
jecxz
fneni(8087
cmp
push
sbb
(bad)
xor
mov
popf
mov
(bad)
cmp
inc
jns
jle
cmp
mov
sbb
les
inc
cmps
sbb
push
(bad)
pop
push
test
fs
push
lock
lods
imul
fs
sub
push
call
(bad)
dec
push
outs
ret
aam
pop
lods
sub
das
mov
bound
xchg
pop
mov
add
pop
mov
daa
lea
mov
and
pop
and
fst
in
lsl
inc
mov
addr16
(bad)
ss
out
add
xchg
jl
adc
add
ja
fscale
in
cmp
xchg
adc
dec
jmp
and
mov
and
dec
xor
sbb
jb
mov
cmp
ds
lea
jns
cld
jmp
adc
push
pop
loop
mov
mov
in
lds
enter
push
ds
sbb
mov
cmp
fsubr
inc
cli
lea
inc
scas
sub
shl
mov
xchg
xor
push
hlt
retf
popf
jmp
or
jno
add
adc
add
rcr
les
das
mov
xchg
mov
mov
mov
adc
push
pop
push
sbb
push
clc
or
push
xchg
xchg
sbb
mov
popf
pusha
call
daa
lock
pop
dec
pushf
sub
add
(bad)
outs
and
mov
inc
arpl
repnz
mov
dec
data16
or
cmp
out
add
mov
mov
xchg
jo
jae
loopne
mov
int
mov
mov
adc
mov
cld
cmps
push
xchg
push
push
popa
(bad)
cmp
test
daa
aaa
imul
iret
dec
outs
outs
cld
cmps
inc
inc
xor
sub
jns
pop
data16
int
jnp
xlat
mov
test
ja
mov
pop
sbb
xor
ret
jecxz
adc
sub
int3
sub
dec
out
ret
and
(bad)
outs
fucomi
inc
lock
ret
and
cmps
sub
pusha
cmp
or
iret
test
cmp
or
ins
xchg
push
les
add
jmp
ins
xchg
aaa
cmp
and
push
aam
jae
leave
shr
pop
xor
fucomip
dec
mov
fcomi
cs
aam
mov
in
imul
cmps
shl
adc
aam
sbb
adc
cwde
loopne
adc
pop
out
imul
push
dec
inc
xor
mov
push
ins
ror
jle
sbb
in
adc
int3
pop
mov
lds
push
mov
stos
jp
xchg
stos
ss
inc
jmp
pusha
jne
or
cmovne
pop
fld
xchg
jnp
in
aas
lds
(bad)
push
or
iret
jle
outs
aad
out
stos
adc
loop
in
jb
xlat
adc
jb
ret
add
in
lds
jb
inc
inc
inc
aas
xchg
test
fwait
cmp
lahf
cmps
lods
mov
movs
cmp
xchg
fcom
repz
pop
xchg
loope
mov
std
pop
add
pop
popa
and
(bad)
loopne
adc
jns
inc
ficom
adc
das
xor
inc
xor
and
ret
mov
push
and
cmp
leave
lea
outs
mov
adc
(bad)
(bad)
fld
jg
ins
pop
(bad)
adc
xor
aas
repnz
outs
or
inc
mov
out
xchg
pop
mov
ret
adc
shl
mov
rol
xor
call
pop
je
or
outs
lea
add
fadd
push
adc
movs
push
dec
adc
cmp
addr16
arpl
jg
std
iret
lock
movq
(bad)
sub
sub
repz
popa
loope
xor
dec
add
cmps
iret
pop
jg
mov
push
iret
jo
lock
adc
pop
retf
or
push
xor
les
pop
aaa
mov
iret
dec
push
(bad)
jle
or
dec
jne
cdq
xchg
shl
stc
inc
xchg
and
and
xchg
icebp
mov
pop
cmp
hlt
mov
jecxz
mov
leave
(bad)
fld
and
enter
js
xchg
lock
mov
test
out
mov
jmp
pop
xchg
push
cld
adc
mov
es
sbb
push
jl
sub
push
jmp
idiv
ss
fiadd
mov
cmp
mov
fist
and
(bad)
aam
shr
gs
dec
ret
inc
hlt
xchg
inc
icebp
fcom
push
and
cmp
lock
div
cwde
adc
es
lahf
push
inc
mov
imul
xchg
push
inc
imul
sub
sbb
clc
pop
and
jno
cmp
int
loop
int3
xchg
sub
mov
aam
xchg
ret
lahf
inc
or
pop
pop
or
jnp
push
cmp
mov
or
clc
retf
jne
lds
jae
add
sub
dec
mov
sti
icebp
es
mov
pop
xchg
jge
dec
test
and
pop
fiadd
and
outs
ins
fisttp
jle
xchg
push
adc
xchg
test
(bad)
int
add
shr
pop
cdq
movs
lock
and
nop
clc
mov
mov
lahf
xor
dec
ja
jns
pop
adc
sti
ror
push
rol
test
sub
into
mov
je
call
cld
mov
fcmovnbe
xor
sub
stos
jmp
sbb
pop
sub
mov
jae
shl
aam
bound
xchg
push
cmp
jp
ret
shr
push
mov
or
jecxz
push
sub
pop
lea
and
ret
push
push
(bad)
push
pusha
add
push
xchg
pop
inc
(bad)
cmps
fsub
xchg
xchg
lea
xor
cmp
push
jmp
add
jne
repnz
daa
fnstsw
dec
cld
pop
sbb
or
jae
cmp
gs
and
rcr
push
or
sbb
cmps
gs
aad
scas
(bad)
jo
cmp
and
into
mov
xor
iret
add
test
add
nop
aaa
and
aaa
push
popa
adc
lahf
pop
cdq
sub
cs
jnp
mov
out
lods
(bad)
pusha
and
fmul
mov
mov
mov
jae
je
test
cli
dec
xchg
fsubr
pop
sar
pushf
or
stos
inc
std
mov
jns
add
jno
addps
sbb
mov
int
cmps
imul
sbb
add
xchg
mov
jnp
add
pop
adc
(bad)
xor
icebp
xor
iret
scas
neg
and
lock
div
int
ins
inc
pushf
or
push
cwde
sbb
sbb
jb
fild
sub
cli
loop
mov
dec
pop
sar
and
cmc
inc
in
pop
jb
lea
cmp
pusha
add
adc
movs
adc
nop
adc
push
sub
gs
int
sti
cmps
sar
jo
pop
int
lock
mov
scas
pop
pop
mov
cmp
vroundsd
int3
or
imul
jl
int3
push
jp
mov
pop
adc
lds
(bad)
and
dec
movs
jmp
pop
push
sahf
fdiv
les
inc
test
add
ds
cmp
in
adc
inc
push
movs
(bad)
adc
pop
loopne
jnp
fs
(bad)
in
std
add
mov
xchg
jns
call
lahf
arpl
ds
adc
in
push
adc
mov
into
stos
cli
add
adc
retf
movs
lds
(bad)
jno
imul
cmp
call
jnp
fstp
test
popf
test
sbb
push
ror
push
pusha
and
add
mov
shl
add
mov
inc
leave
das
xchg
mov
sbb
sbb
out
out
out
push
mov
stos
pop
push
xor
pop
mov
not
cwde
mov
sbb
adc
push
(bad)
mov
lea
stos
push
jg
dec
test
dec
call
shl
cmp
ss
in
out
stc
jae
sub
jbe
in
push
stos
jb
push
inc
push
cmp
int
pop
scas
aas
xchg
cmp
shl
mov
ja
test
add
cmp
add
xchg
rcl
aas
sbb
sbb
push
push
sub
push
xlat
test
ja
sar
popa
sbb
fst
loope
jno
dec
nop
fcomi
repnz
(bad)
xlat
out
in
aam
bnd
inc
movs
ds
jbe
into
outs
imul
add
or
mov
mov
out
cmps
cmc
pop
mov
inc
adc
xchg
add
jne
mov
mov
push
stos
ins
jns
(bad)
in
sub
mov
add
pop
fsqrt
push
mov
cmp
pop
sbb
retf
mov
dec
ficom
mov
cmps
ficomp
xchg
pop
dec
pop
jp
mov
in
push
adc
(bad)
xchg
push
and
mov
mov
push
lods
mov
pop
pop
fs
cmps
ins
sbb
mov
aad
mov
in
ja
pop
xor
cdq
leave
outs
and
es
cli
add
sub
pop
aaa
mov
inc
shr
push
or
retf
pop
adc
aas
xchg
lock
mov
push
mov
stos
pop
pop
loopne
enter
push
push
push
int3
dec
adc
push
cmps
or
cmps
in
sbb
push
ret
icebp
mov
jns
shl
repz
in
scas
pop
xchg
add
dec
adc
stc
popa
aaa
lock
lea
xor
loope
and
ret
sub
xchg
in
jae
mov
aad
mov
sub
jb
cmps
div
mov
mov
jge
dec
imul
mov
xchg
daa
inc
test
fs
int3
xor
dec
cmps
jbe
sar
les
out
jle
pushf
inc
xchg
pop
stos
push
cld
mov
(bad)
out
aad
ret
jb
mov
sbb
pop
out
hlt
es
neg
xor
jmp
stos
sti
in
das
std
ret
loop
(bad)
mov
retf
push
aas
lock
mov
xor
add
xchg
sbb
add
mov
or
add
(bad)
jge
sub
xor
out
inc
mov
or
dec
mov
push
test
cmp
call
mov
iret
xchg
push
test
cdq
movs
fs
scas
jg
inc
retf
jo
das
fxam
xor
mov
sub
pop
mov
shr
sbb
jp
sbb
pop
dec
mov
sbb
ss
mov
pop
mov
sbb
jbe
in
and
test
inc
or
mov
scas
and
loopne
in
es
pop
cmp
add
push
sub
push
arpl
repz
push
adc
adc
sbb
loop
cmps
cmp
mov
inc
inc
(bad)
mov
inc
cmp
loopne
out
(bad)
jns
loope
sbb
test
adc
arpl
dec
shl
jl
test
lea
in
fistp
lahf
gs
test
jo
cmp
mov
xchg
or
push
mov
mov
inc
(bad)
jbe
mov
inc
and
add
mov
push
mov
sti
iret
in
ins
push
push
cmp
mov
test
ret
cwde
xchg
xor
xlat
push
or
push
adc
in
and
es
(bad)
jae
cmp
js
xor
pushf
ja
sbb
out
xchg
inc
mov
mov
push
movs
std
dec
stos
sub
ret
pushf
iret
xchg
aaa
je
xor
repnz
xchg
cs
(bad)
enter
in
sub
pop
loop
mov
(bad)
into
sbb
mov
dec
jo
and
or
sti
mov
pop
add
lods
es
mov
outs
or
add
aad
outs
ss
cmp
xor
ds
jp
in
out
movs
std
dec
stos
aad
iret
test
lea
fmul
jno
or
test
in
adc
(bad)
call
cmp
out
stos
cli
push
jbe
out
dec
addr16
push
xchg
call
outs
cmp
inc
pop
leave
out
pusha
inc
in
push
and
in
xor
pop
mov
sbb
or
pusha
inc
inc
repz
in
and
in
mov
xchg
adc
fbstp
dec
xor
into
mov
jno
xor
and
mov
cld
cmp
adc
cmps
and
in
in
add
pop
iret
mov
sbb
ins
add
sbb
jge
push
cld
inc
mov
jp
lea
xchg
in
mov
xchg
mov
xchg
in
fwait
leave
xchg
aas
sub
ds
out
je
fld
test
into
jno
aad
ror
mov
lods
fistp
arpl
mov
lock
push
addr16
into
xor
inc
xor
push
jo
sahf
hlt
xor
sbb
mov
adc
xlat
in
cwde
lods
xchg
movs
cmp
add
int3
iret
xor
xchg
(bad)
popf
div
and
mov
iret
ins
lds
scas
mov
mov
xchg
jb
mov
in
xor
cwde
or
or
and
idiv
in
jle
xchg
lea
in
retf
xchg
pushf
add
inc
sub
out
xor
dec
out
push
nop
mov
pop
and
std
mov
mov
jmp
clc
mov
cdq
mov
cmp
cmc
add
neg
and
cld
jno
mov
das
jl
loop
push
pusha
jnp
mov
push
in
in
shr
cmp
xchg
cmp
sub
in
push
mov
jbe
push
test
inc
add
jmp
arpl
cmp
cli
sbb
add
pop
icebp
shr
jl
into
cmovle
add
mov
dec
push
jo
mov
out
jmp
inc
cmp
retf
into
ins
and
iret
stos
xor
mov
mov
repnz
aad
mov
xor
enter
mov
sub
sbb
aas
imul
lock
pop
(bad)
imul
mov
in
out
out
adc
cmp
push
enter
push
sbb
push
arpl
mov
loope
mov
je
adc
(bad)
adc
or
popa
or
cmp
ror
jp
shl
cld
sub
sub
cvtps2pd
jns
pusha
lds
adc
mov
bound
sbb
xor
push
or
dec
test
jno
test
xchg
pop
mov
cmp
push
mov
sbb
or
cmp
xor
push
and
sbb
pop
mov
retf
mov
mov
xor
cmp
xchg
and
xlat
stc
xchg
dec
in
aad
movs
out
sbb
xchg
stos
sub
jnp
inc
lods
mov
ret
in
cmp
fisttp
fs
jnp
retf
cmp
lods
xchg
mov
ret
nop
cwde
pop
scas
pop
inc
add
in
es
dec
cmp
cdq
stc
jecxz
jbe
in
out
sub
mov
xchg
mov
mov
icebp
int
repz
jg
bound
or
nop
mov
sbb
sub
dec
sbb
or
into
mov
or
(bad)
in
add
add
jno
sbb
out
adc
dec
test
pop
inc
movs
ret
scas
xchg
outs
add
add
test
adc
add
clc
and
(bad)
loop
shr
data16
inc
add
nop
mov
or
sub
jae
repnz
ins
test
or
cwde
cmp
test
mov
sub
icebp
adc
pop
adc
ja
outs
cmp
out
retf
cmps
mov
mov
sbb
cmp
push
or
scas
aam
pop
fwait
sti
sbb
ret
push
aam
jnp
push
pop
int
lahf
mov
lea
(bad)
xchg
inc
(bad)
mov
cmps
js
or
xchg
popf
gs
mov
cmp
xchg
mov
bound
(bad)
add
adc
push
jae
rcr
mov
rol
push
xor
dec
cdq
fs
push
pop
sub
cmp
or
lock
sbb
pop
xchg
pop
xchg
cmovle
cmp
dec
mov
push
test
xor
out
jmp
sub
(bad)
inc
fisubr
mov
imul
loopne
mov
or
loopne
sbb
dec
dec
dec
into
fs
sar
mov
stc
cld
jne
add
fadd
cmps
sub
or
stos
mov
loopne
or
jmp
mov
cli
leave
sbb
push
loopne
xchg
and
and
xchg
cmp
das
inc
xchg
test
pop
aaa
enter
retf
rol
and
ins
xchg
test
out
jecxz
push
lods
cmps
and
sub
inc
or
loop
xchg
ret
scas
push
jns
cmc
pop
sub
cmp
cmp
nop
sbb
jae
dec
rol
loope
not
sub
in
xchg
xchg
mov
or
push
out
dec
dec
sar
fwait
inc
jb
xlat
inc
aad
jbe
imul
dec
in
jmp
and
jle
sahf
aas
pmovmskb
xor
xor
imul
jbe
cli
js
fsubr
out
js
jno
cld
jo
stos
icebp
out
arpl
idiv
mov
mov
div
retf
imul
dec
mov
xor
rol
push
or
retf
jmp
jg
inc
lods
loopne
mov
test
cmp
mov
nop
or
jbe
ins
aad
jecxz
push
test
cs
inc
in
fiadd
dec
clc
leave
mov
outs
(bad)
mov
fsubr
jecxz
loope
and
call
and
popf
push
dec
mov
xchg
sti
aaa
or
data16
and
pop
jae
xchg
xchg
aad
inc
add
mov
sbb
sbb
pop
push
in
into
repnz
pop
test
jae
dec
loopne
std
pop
scas
push
(bad)
bnd
scas
cmps
cmp
frstor
jns
lods
inc
and
mov
sbb
or
test
fcomp
dec
rcl
int3
fidiv
int3
sbb
jmp
inc
jmp
dec
sti
mov
adc
cwde
fwait
jbe
xor
push
pop
es
mov
jecxz
cmp
add
add
push
pop
es
add
popf
cmp
cmps
sahf
js
imul
data16
cmp
or
mov
(bad)
adc
dec
pop
scas
xchg
mov
std
mov
cmc
xor
add
into
push
add
push
or
push
clc
and
xor
inc
sub
inc
cmc
ror
icebp
mov
jp
cmc
adc
movs
in
jnp
mov
sbb
push
arpl
sti
pop
shl
not
or
fs
adc
imul
(bad)
stc
push
or
mov
cmp
jmp
pop
mov
or
sub
inc
sbb
add
call
sbb
in
fcmovne
xchg
mov
rcr
mov
shl
out
test
mov
mov
rcr
pop
inc
push
in
bound
cli
scas
ins
out
xchg
(bad)
dec
push
jb
adc
fadd
sahf
cmps
es
out
jbe
add
mov
loopne
lds
mov
or
in
aas
sahf
fild
or
push
arpl
dec
dec
stc
adc
mov
cmc
fadd
pop
adc
sti
lds
arpl
mov
pop
lods
scas
add
adc
rol
dec
out
leave
jb
pop
(bad)
sbb
and
and
and
or
lock
mov
push
cmps
adc
mov
sbb
icebp
movs
sub
dec
aaa
mov
icebp
push
pop
mov
addr16
movs
xchg
scas
rcr
adc
mov
call
mov
pop
sub
sbb
add
pop
adc
add
mov
pushf
fnsave
mov
int3
icebp
outs
push
mov
int3
ja
arpl
mov
or
inc
shl
test
cli
xchg
jno
pop
sti
rcl
lahf
dec
lock
fwait
mov
xchg
mov
jbe
fidiv
aad
push
jb
inc
xor
pop
jbe
push
fcom
xor
fiadd
jbe
xor
pop
or
mov
daa
jae
in
jge
xor
push
mov
xor
sub
jbe
push
inc
jmp
mov
sahf
pusha
mov
scas
jnp
jge
adc
inc
into
lds
iret
sbb
pop
pop
frstor
(bad)
mov
fisttp
adc
loopne
lods
lahf
mov
addr16
loop
xor
ret
test
dec
test
jle
or
call
mov
enter
adc
mov
test
push
aad
and
call
mov
cld
xor
jmp
cdq
jle
jmp
inc
clc
fisubr
mov
fnstcw
jge
call
xor
xchg
and
add
dec
or
jecxz
or
aam
rcl
ins
add
or
std
mov
cmps
xchg
enter
inc
sub
aam
sub
out
dec
mov
ins
shr
dec
ds
out
bound
and
loopne
not
sahf
xchg
mov
sbb
je
sub
nop
daa
js
or
aam
xor
arpl
out
push
push
and
ss
rcl
sbb
pop
push
mov
mov
test
mov
int3
mov
ret
and
mov
test
jmp
ins
ja
dec
mov
inc
xor
jmp
jo
(bad)
fbld
pop
xor
adc
mov
or
mov
(bad)
adc
icebp
inc
sbb
imul
(bad)
mov
pop
pop
fs
cmp
xchg
addr16
mov
sub
cld
sahf
or
cli
fwait
enter
cmps
stos
adc
ja
lahf
add
add
cwde
(bad)
rcl
retf
mov
pop
inc
sar
stos
mov
pop
out
xchg
cdq
pop
lods
push
out
dec
es
fsub
dec
sub
inc
je
xor
pop
rcl
mov
cli
jg
scas
mov
fwait
sub
mov
int3
inc
loopne
iret
repnz
jne
sbb
in
pop
mov
sbb
int3
popf
cli
push
sub
das
mov
int
test
push
in
setge
push
mov
or
push
dec
mov
xchg
lock
lods
retf
mov
(bad)
fadd
mov
adc
dec
mov
sub
pop
jmp
leave
mov
arpl
push
neg
mov
mov
fdivr
cmps
jns
inc
shl
push
out
fisttp
xchg
sbb
pop
mul
push
inc
jne
gs
cmps
loopne
push
and
pushf
mov
test
mov
push
mov
mov
ret
fdivr
jmp
inc
fimul
fucomp
aam
pop
xchg
rcl
mov
lods
(bad)
js
adc
push
sti
ret
in
jecxz
hlt
jb
inc
xor
and
jb
mov
adc
mov
retf
add
daa
pusha
popf
mov
cmp
lock
mov
mov
ins
fwait
or
mov
mov
sbb
adc
pushf
pop
mov
mov
sub
in
dec
dec
push
jmp
xchg
xchg
das
(bad)
lahf
jns
ror
addr16
pop
add
std
add
adc
xchg
push
mov
leave
adc
mov
mov
jge
lock
mov
into
sbb
shl
jne
xor
inc
imul
lods
xor
and
cwde
sbb
jecxz
jns
sbb
cmps
xchg
mov
cwde
icebp
xor
int3
inc
ret
ret
ror
mov
dec
das
xchg
ret
push
(bad)
popa
fwait
and
xchg
imul
adc
pop
add
mov
test
sbb
pop
mov
inc
xchg
inc
jo
adc
imul
add
rep
or
div
mov
sbb
call
mov
pushf
ffreep
push
mov
ds
and
ins
cmps
loope
push
bound
outs
cmps
popf
sub
in
pop
iret
leave
jecxz
xchg
cmps
clc
pop
mov
imul
jnp
jnp
sar
jmp
outs
movs
add
and
repz
fs
enter
xchg
add
nop
add
rcl
lock
mov
je
rcr
in
dec
adc
or
(bad)
mov
in
mov
fwait
sbb
(bad)
pop
call
jle
clc
sti
aaa
lea
(bad)
(bad)
push
or
in
mov
add
cmc
movs
and
adc
lock
call
inc
cmp
aad
xor
and
shl
aaa
in
dec
cmp
cmp
lahf
add
loopne
jmp
mov
push
push
in
mov
mov
mov
mul
in
add
daa
or
jp
fcmovb
call
pop
imul
inc
outs
push
add
inc
(bad)
xor
mov
add
loop
xor
xor
aaa
repnz
int3
jge
jg
mov
ds
daa
sub
test
or
push
ins
loopne
cli
and
sub
jp
push
in
mov
(bad)
jmp
push
icebp
int3
sbb
xchg
rol
cmp
mov
stos
stos
mov
shr
pop
lea
and
ret
adc
or
dec
cmp
adc
clc
neg
xchg
enter
adc
out
mov
aaa
hlt
and
push
popa
loopne
rcl
mov
std
jge
ficomp
rol
inc
popa
dec
and
test
add
out
jle
gs
push
fcomi
mov
jno
std
shl
movs
ins
and
add
jg
out
icebp
cmp
jg
pusha
mov
add
cmc
pop
out
jecxz
nop
sub
push
pusha
mov
fidiv
enter
ins
mov
(bad)
mov
dec
ret
sub
cmp
mov
sub
icebp
fsub
nop
mov
adc
ds
scas
dec
mov
lods
ja
out
not
jnp
jo
nop
mov
ret
mov
mov
out
xchg
and
mov
add
repnz
arpl
and
xchg
scas
cmp
push
lods
inc
pop
adc
push
and
or
fidivr
loop
xchg
data16
push
sub
push
stos
addr16
pop
adc
push
mov
(bad)
mov
or
aam
ins
pop
push
jne
mov
lock
xchg
push
cmps
ja
mov
enter
mov
mov
adc
movs
push
sub
in
ss
push
int
mov
mov
repz
fwait
mov
jbe
cld
ret
add
push
scas
jge
(bad)
push
(bad)
inc
jl
sub
scas
sub
inc
pusha
repnz
pop
xchg
xchg
xchg
jbe
cld
push
shl
aas
cld
push
adc
cmp
jmp
and
mov
shl
cmp
inc
pop
jo
aaa
das
ins
jbe
mov
pop
push
enter
loopne
xor
fisub
or
add
loop
ds
popa
or
iret
jp
pushf
sub
add
pop
imul
inc
(bad)
mov
push
icebp
mov
mov
pop
inc
mov
mov
cli
out
fild
imul
mov
loope
in
retf
dec
ss
dec
or
lods
mov
aas
cld
inc
mov
pop
ffree
sti
enter
shl
mov
sub
adc
test
xchg
les
push
mov
or
add
pop
sbb
jmp
add
sub
sub
cwde
leave
add
cli
in
pop
jns
add
shl
xchg
inc
fnstcw
mov
jns
mov
jbe
sahf
adc
pop
cmc
ins
push
dec
xor
ins
jb
sub
ror
jl
mov
cmp
inc
test
mov
popf
loope
cmp
rcl
or
mov
outs
mov
push
xchg
outs
lods
cmp
push
enter
sar
outs
in
js
aad
popf
movs
sub
mov
outs
(bad)
repnz
pushf
mov
cmps
ds
mov
dec
mov
cdq
or
ficom
cdq
push
xor
sub
repnz
je
jl
(bad)
sub
cmp
gs
adc
gs
jo
mov
sub
pushf
jbe
jo
inc
xor
pop
push
ror
and
inc
in
pop
scas
(bad)
clc
in
mov
push
xchg
add
cmp
or
lock
push
(bad)
outs
out
fsubrp
jg
call
scas
cmps
popf
arpl
mov
jl
popa
push
mov
shr
movq
push
inc
inc
dec
pop
out
(bad)
mov
in
fimul
pop
sbb
(bad)
test
imul
(bad)
aad
cld
cdq
shl
adc
mov
scas
dec
and
outs
lahf
jb
mov
push
mov
mov
data16
or
push
cmp
or
xor
ins
je
pop
pop
mov
jg
int3
or
pop
cmps
das
pop
ins
test
leave
xor
outs
sbb
aaa
cmp
xor
je
push
sub
loop
inc
outs
pop
xlat
mov
sbb
mov
mov
pop
(bad)
rcl
sub
add
lds
fcomp
scas
mov
add
push
xchg
stos
aas
lock
inc
icebp
adc
dec
jo
jmp
rcr
loope
aad
popa
dec
mov
and
or
adc
(bad)
cmp
mov
fs
adc
into
mov
adc
shl
xor
ds
stc
mov
fdiv
inc
mov
imul
jecxz
imul
inc
data16
movs
and
rcl
jl
xchg
enter
mov
loop
push
cmp
pop
cmps
mov
scas
mov
enter
push
test
push
jg
lea
adc
ins
xchg
push
mov
jp
dec
fs
sbb
ins
daa
pop
hlt
dec
lds
(bad)
iret
push
push
ret
or
or
dec
add
je
sbb
push
add
rcl
scas
dec
mov
pop
inc
xor
ret
adc
push
jg
(bad)
jnp
fidiv
lds
jbe
and
mov
sahf
mov
repz
mov
shl
call
je
out
in
fld
jno
call
stos
(bad)
jp
stos
out
xchg
fs
mov
push
xor
and
mov
fcmovnbe
int3
ror
sbb
add
dec
sub
pop
popf
jne
fisub
jbe
in
pop
cdq
inc
inc
clc
inc
inc
out
shl
sbb
xchg
fwait
rcl
fmul
sub
cmp
inc
push
(bad)
or
and
inc
out
getsec
bsf
sub
jne
adc
cs
daa
cmp
sub
rol
jp
or
pusha
push
jmp
or
jge
out
call
outs
inc
pop
je
fild
pop
jge
arpl
xor
iret
and
mov
movs
(bad)
jle
dec
xchg
sub
test
out
std
dec
popf
test
shl
or
stos
ja
add
lea
pushf
js
jo
jne
cs
add
dec
adc
scas
mov
(bad)
sub
jle
adc
push
out
push
enter
inc
ret
cmc
(bad)
jl
xor
retf
push
inc
ret
pop
clc
jecxz
or
sbb
push
cmp
push
add
das
mov
into
ds
jmp
dec
xor
cmp
push
movs
cmc
dec
adc
mov
dec
add
add
xor
add
ins
mov
rcr
mov
jge
idiv
ret
cld
dec
std
es
sub
add
xchg
les
iret
cld
aad
jl
add
cmp
addr16
push
ficom
les
fwait
in
xor
outs
sub
adc
sub
push
pop
pop
add
sar
int3
into
jle
fstp
fisubr
fist
idiv
loop
jmp
mov
aad
mov
rol
out
cmp
into
mov
push
xchg
ficomp
cmps
pop
sbb
mov
add
mov
daa
aam
leave
inc
shl
push
aam
mov
sbb
movs
jo
je
mov
pop
adc
imul
jmp
in
inc
xchg
adc
fdiv
clc
jo
call
mov
loope
mov
inc
mov
nop
mov
ret
mov
and
sbb
xchg
popf
scas
jl
aam
adc
add
and
jg
pop
and
test
pop
and
iret
sub
nop
sub
push
sub
(bad)
dec
adc
dec
jo
mov
inc
arpl
loop
hlt
jl
mov
movs
push
pop
cmps
adc
rol
(bad)
and
sub
fs
retf
or
and
shl
in
call
xchg
in
iret
out
pop
xchg
repz
fadd
push
aaa
add
imul
push
repz
std
repnz
or
add
cmp
ins
pop
mov
jle
je
in
inc
lods
xor
cdq
inc
addr16
jmp
mov
jle
stos
mov
add
fdiv
dec
lock
mov
mov
mov
jmp
call
punpckhbw
adc
jle
test
pop
daa
fldenv
jno
mov
shl
sub
call
hlt
mov
clc
inc
pop
xor
push
pop
mov
das
out
lahf
in
mov
movs
ss
call
pop
lds
call
shl
mov
int3
jbe
dec
dec
nop
in
fnstenv
dec
mov
(bad)
pusha
outs
pop
fisttp
or
xchg
popa
ja
fcmovbe
mov
sahf
add
lds
popf
adc
xor
adc
cdq
addr16
inc
not
inc
mov
push
cli
push
pusha
jecxz
xor
shl
xor
push
icebp
and
scas
(bad)
adc
mov
cs
cmp
popa
sbb
and
jle
sub
mov
daa
ltr
pop
push
sub
lods
and
push
lock
push
pop
loope
inc
pop
push
sbb
mov
repnz
fwait
(bad)
jmp
push
cld
pop
mov
(bad)
std
cmp
mov
retf
js
push
shr
push
shr
and
fwait
xchg
add
sbb
ret
dec
xchg
xchg
adc
mul
mov
mov
adc
test
xor
addr16
cmc
or
xor
sbb
movs
xor
mov
xor
push
call
mov
xor
pop
push
mov
cmp
aas
inc
je
xchg
adc
cmp
mov
fcomp
sub
fwait
mov
mov
js
push
cmps
pop
shl
ja
mov
jle
xchg
dec
cmp
aad
sti
adc
jg
std
inc
aaa
add
in
adc
retf
push
fwait
out
(bad)
and
adc
pop
add
dec
aas
push
int
cmp
pop
into
push
pusha
add
sbb
and
scas
and
inc
jecxz
cmp
xor
das
pop
xchg
cmps
int3
icebp
sub
or
mov
cs
mov
sti
int3
sub
lock
pop
cmp
pop
mov
and
popa
out
ret
out
or
stos
clc
mov
sbb
fsub
pop
inc
cmp
not
nop
pop
add
sbb
jno
jnp
pusha
adc
inc
adc
jmp
fs
or
inc
dec
ficom
movs
ins
leave
mov
cmc
sbb
lahf
not
in
lods
int3
mov
dec
jnp
repz
push
or
dec
out
iret
test
xor
adc
fld
pop
jmp
adc
adc
icebp
add
aam
jl
jbe
inc
loop
cwde
cmp
lods
cmps
cwde
adc
sub
scas
retf
mov
test
call
inc
ja
aas
mov
jbe
popa
into
imul
sub
jo
pop
push
aas
or
or
dec
fadd
cs
mov
and
cmps
(bad)
mov
test
pop
add
pop
test
mov
xchg
jecxz
or
call
shl
ja
scas
or
inc
leave
imul
scas
ins
jmp
mov
mov
ins
push
mov
jmp
push
xor
or
cmp
inc
ss
dec
push
xor
fld
in
(bad)
cli
add
test
mov
sbb
mov
sbb
xor
movs
aaa
mov
mov
pushf
xchg
data16
pushf
pop
mov
mov
into
test
loopne
imul
scas
and
add
int3
lock
icebp
and
cdq
dec
addr16
in
mov
test
(bad)
ins
test
sbb
push
inc
adc
movhps
pop
int3
call
stos
mov
enter
sub
inc
sub
dec
pusha
mov
xchg
mov
stos
cmp
mov
sbb
dec
idiv
xchg
add
mov
adc
and
or
add
xlat
xchg
mov
xchg
outs
inc
jge
retf
jge
(bad)
and
jae
jae
(bad)
pusha
outs
(bad)
push
and
idiv
out
test
pop
add
pop
mov
ret
jno
inc
sub
std
std
aad
cdq
ins
pop
lods
pop
push
dec
inc
cmp
test
mov
and
(bad)
imul
imul
cmp
mov
sbb
cmp
sbb
mov
shl
in
out
addr16
fild
inc
dec
inc
bound
sbb
sbb
fiadd
ror
jo
jno
adc
push
mov
pop
fstp
or
adc
or
nop
outs
stos
loope
jo
sub
cmp
jo
push
add
cmc
test
(bad)
leave
pusha
movs
cmp
mov
rol
stc
je
sub
fcmovb
add
mov
cdq
pop
pop
cwde
ss
sub
inc
jmp
or
retf
in
sub
sub
mov
mov
arpl
pop
xchg
adc
sbb
mov
pop
iret
nop
test
loop
mov
call
adc
jnp
inc
repz
dec
mov
cmps
xchg
adc
dec
movs
dec
dec
sub
outs
cmp
mov
adc
hlt
pop
and
add
btr
sub
xchg
fwait
mov
push
or
in
ins
pushf
mov
inc
or
inc
dec
fbld
dec
dec
push
cmps
test
scas
aaa
test
js
xchg
push
or
pop
pop
dec
pop
dec
inc
popa
fcom
mov
in
retf
sub
je
icebp
fnstenv
jmp
daa
(bad)
ds
ja
lods
xor
inc
lea
add
out
mov
cmc
jns
pop
stos
sahf
sbb
rcl
movs
(bad)
lods
sbb
dec
mov
aam
mov
sub
jns
xchg
xchg
test
std
sub
xchg
sbb
push
pop
xor
les
int
adc
sahf
(bad)
mov
shl
std
mov
(bad)
cdq
bound
inc
les
test
jb
or
mov
pop
lock
cmp
dec
jo
loope
cmc
xor
add
mov
sbb
cld
je
test
cld
rcr
(bad)
mov
dec
pusha
(bad)
in
sub
sbb
inc
adc
xchg
dec
jae
jge
inc
popf
sbb
xchg
cld
movs
repz
mov
inc
cmp
pop
mov
jg
popa
cmp
mov
xor
push
push
in
outs
imul
jbe
mov
sub
jge
rcr
and
jl
mov
xchg
pop
jne
ret
leave
sahf
es
mov
data16
sbb
ds
inc
arpl
push
inc
inc
mov
(bad)
out
clc
adc
pop
mov
scas
mul
aad
jb
fistp
jno
inc
das
inc
inc
mov
gs
ja
les
scas
rcl
popf
mov
psubusw
lods
repnz
or
xchg
ror
add
or
mov
jp
or
bound
aas
fistp
xchg
push
inc
push
mov
jle
movs
lods
int3
mov
nop
fimul
push
and
cmp
test
and
clc
fdivr
lds
out
mov
pop
dec
xchg
data16
pop
cmp
or
in
xor
and
mov
push
jno
outs
jp
fist
sub
out
push
adc
mov
and
inc
ror
mov
mov
jmp
and
and
clc
add
or
into
imul
cmp
inc
push
ja
mov
adc
sub
sub
test
fdivrp
adc
outs
inc
and
mov
cld
gs
(bad)
gs
inc
push
(bad)
and
popa
movs
xchg
mov
lods
sbb
lods
add
mov
ss
mov
movs
cmps
js
fisubr
test
add
enter
jb
pushf
cmp
int
jmp
pop
sub
cmps
das
retf
or
xchg
adc
push
jp
lds
nop
stos
mov
inc
push
xchg
neg
cmps
ins
and
xor
nop
mov
add
push
sbb
pop
sub
sub
fist
sub
jne
jl
enter
aad
out
push
fadd
push
pusha
mov
fsub
adc
xchg
jne
jle
mov
das
mov
jmp
fdiv
(bad)
iret
in
sub
jae
push
xchg
mov
add
mov
cmp
fdivr
loopne
fwait
mov
jno
xchg
ins
pop
test
inc
sub
xchg
icebp
les
dec
pop
bound
add
and
test
jle
pop
cmp
xchg
xor
mov
dec
cwde
and
xchg
add
mov
add
popa
xchg
dec
daa
jnp
xchg
iret
and
aad
sub
pushf
ficomp
nop
ins
push
mov
xchg
ss
pop
fsub
pop
sub
fdiv
cmp
push
ucomiss
dec
nop
cli
inc
push
mul
repz
cmp
cmp
ficomp
xor
push
jmp
sub
aaa
mov
inc
jg
push
or
jg
repz
nop
lock
jl
jbe
mov
fadd
mov
adc
sahf
shl
mov
xchg
lds
pop
or
dec
push
sub
(bad)
push
cmps
imul
mov
mov
(bad)
imul
(bad)
outs
std
and
sbb
sub
mov
or
add
lahf
sub
ret
jmp
repz
push
test
stc
call
sti
rcl
into
jns
cmc
enter
jmp
mov
lods
repz
or
adc
cs
or
or
shl
ins
stos
loopne
ror
xchg
jmp
cmp
pop
(bad)
pop
stos
sub
aad
popa
jl
push
stos
dec
test
fld
xor
mov
das
ja
push
adc
fwait
stos
pop
test
sub
sub
test
call
xchg
fwait
and
mov
psubusw
xchg
dec
and
pop
mov
jp
mov
push
push
xor
adc
jae
or
popf
in
popf
cs
adc
jno
std
pop
mov
xor
imul
rol
push
cdq
push
sub
push
pop
dec
xor
and
sbb
das
pop
cmp
sub
inc
test
and
inc
mov
push
mov
cmp
inc
and
jo
scas
(bad)
ds
lahf
or
inc
outs
push
cmps
jb
xor
push
cmps
mov
test
xor
idiv
test
push
cmp
scas
daa
xchg
out
add
shld
fst
push
rcl
(bad)
adc
cmp
movs
sti
push
and
movs
je
mov
sar
push
fisub
test
shr
mov
daa
push
daa
test
scas
adc
mov
push
jg
dec
xor
pusha
add
xchg
sbb
stos
inc
outs
cmp
mov
cmp
mov
leave
or
mov
mov
ins
or
out
push
push
faddp
movs
push
imul
cmp
fadd
fimul
test
push
push
loop
cmp
das
mov
dec
imul
stos
pop
jg
push
xchg
push
push
rcl
dec
iret
xor
dec
xor
sbb
mov
xchg
mov
push
inc
jne
stos
imul
dec
jns
aas
mov
sub
es
frstor
jecxz
cdq
xor
dec
les
mov
xor
sbb
in
retf
push
and
(bad)
or
dec
cs
jl
jmp
mov
outs
dec
fucomp
mov
aaa
call
test
popf
adc
sbb
or
fsubp
movs
hlt
in
xchg
xchg
pop
pop
dec
bound
jg
cmps
ffree
fisub
rol
xor
pop
inc
(bad)
sbb
add
arpl
out
sahf
shl
rol
outs
and
and
ins
inc
inc
push
cmps
sahf
xchg
mov
inc
out
outs
enter
sub
arpl
xor
xchg
mov
test
ds
in
mov
and
mov
pop
in
cmc
push
scas
(bad)
jecxz
and
dec
pop
test
in
je
fstp
or
mov
lock
pop
xor
aaa
pusha
jge
lea
pop
popf
mul
mov
(bad)
dec
or
push
rol
jl
lods
sub
or
dec
cld
jg
sbb
sbb
les
add
(bad)
jmp
add
add
add
out
adc
add
add
fsubr
adc
add
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
