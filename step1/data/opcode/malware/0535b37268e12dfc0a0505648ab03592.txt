lock
or
add
add
dec
add
add
add
add
add
or
add
mov
add
js
or
push
sub
add
sub
add
sub
add
xor
add
add
add
add
adc
sub
add
push
or
add
pop
add
push
or
add
jo
aas
add
jo
sbb
or
push
add
or
or
add
sub
add
pop
jb
add
jo
mov
add
push
lea
add
add
or
add
sub
sub
add
xor
cmp
add
add
add
add
pop
lea
add
or
or
or
pop
add
xchg
pushf
pop
pop
pop
or
add
or
push
push
add
or
or
add
sub
sbb
add
push
add
add
add
adc
sub
add
push
or
sub
add
push
or
adc
adc
adc
rol
add
sldt
push
je
add
add
sub
add
push
sub
or
push
or
add
add
adc
xor
adc
or
add
add
add
xor
or
add
add
add
push
sub
add
xor
add
add
add
add
push
lea
add
or
add
jo
or
add
pop
lea
add
add
or
or
sbb
adc
or
add
es
add
jo
lea
add
add
or
pop
add
jo
adc
add
mov
push
lea
add
add
or
add
mov
add
push
or
add
jo
jecxz
add
pop
lea
add
add
push
adc
push
jb
add
jo
adc
sub
add
push
je
add
sbb
pop
add
jo
jecxz
add
pop
lea
add
add
movups
push
jb
add
jo
adc
sub
add
push
je
add
sbb
jo
jecxz
add
pop
lea
add
add
adc
adc
jb
add
jo
adc
sub
add
push
je
add
sbb
add
adc
add
jo
jecxz
add
pop
lea
add
add
adc
adc
jb
add
jo
mov
pop
lea
add
add
adc
adc
adc
add
add
push
mov
add
push
je
add
sbb
push
push
adc
sub
add
push
or
add
adc
mov
jo
lea
add
add
or
add
adc
adc
jb
add
jo
sub
add
adc
jb
add
jo
add
add
add
adc
sub
or
or
sub
add
or
add
jo
sbb
add
pop
lea
add
add
adc
adc
push
mov
add
push
je
add
add
or
or
add
jo
sldt
push
je
add
add
or
add
jo
jne
add
or
lea
add
add
adc
adc
add
push
add
push
mov
add
push
ficom
adc
adc
sub
add
sub
fiadd
sub
inc
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
jo
movs
add
jo
sbb
or
push
add
sbb
add
mov
push
sub
add
push
sub
add
xor
add
add
add
ret
add
jo
pop
add
jo
sbb
or
push
add
or
add
mov
inc
add
jo
sldt
push
movs
or
add
mov
add
add
add
je
add
sbb
add
sub
add
xor
add
add
adc
lea
add
add
push
push
add
add
xor
add
add
add
add
adc
sub
add
push
or
add
pop
add
push
or
add
push
add
push
sub
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
add
add
or
and
add
add
or
add
add
add
add
push
add
add
or
and
add
pop
add
or
add
add
add
add
or
add
sub
add
add
add
or
push
add
or
add
sub
add
add
or
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
or
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jae
gs
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
outs
cmp
mov
stos
add
jmp
mov
sti
pusha
push
test
mov
jb
je
mov
retfw
into
mov
outs
sbb
inc
aam
xlat
inc
scas
mov
loopne
mov
in
scas
dec
call
mov
dec
repz
pop
rep
jle
cmc
out
mov
push
cmp
cmc
arpl
xor
sbb
and
sbb
xor
or
sbb
test
sti
adc
push
movs
adc
mov
aaa
cmp
sub
inc
popf
xor
mov
pop
adc
xchg
inc
out
push
movs
dec
xor
push
and
adc
sbb
faddp
bound
adc
add
push
add
add
adc
add
fiadd
add
pop
pop
add
lods
or
add
or
add
add
jmp
add
push
pop
add
inc
add
add
pop
add
mov
push
add
push
add
add
add
jmp
add
jp
add
iret
add
add
add
nop
pop
add
push
add
stos
add
add
aad
add
je
add
xor
add
pop
add
add
add
add
add
and
add
mov
add
add
add
add
or
add
add
sub
add
jge
add
cwde
add
add
add
inc
or
add
add
add
add
add
jne
add
inc
add
dec
xor
dec
sub
dec
sub
addr16
and
dec
push
dec
or
dec
or
dec
aaa
dec
or
dec
and
dec
add
dec
dec
dec
dec
dec
push
dec
pop
dec
push
dec
imul
dec
gs
add
add
sub
sub
dec
adc
dec
add
dec
pop
dec
xor
dec
ds
adc
dec
cs
cmp
add
push
dec
inc
dec
or
dec
pop
inc
add
cs
push
dec
pop
dec
imul
dec
push
dec
ds
and
dec
inc
dec
ss
jns
add
dec
popa
dec
pop
dec
sub
dec
mov
or
dec
xor
dec
xor
dec
push
jne
inc
dec
inc
dec
inc
dec
je
sub
inc
dec
adc
dec
outs
dec
pop
dec
mov
or
dec
push
dec
dec
dec
and
dec
and
dec
adc
dec
add
dec
inc
dec
push
dec
outs
dec
pop
dec
pop
dec
dec
dec
jle
sbb
dec
dec
or
dec
adc
dec
sbb
dec
xor
dec
push
dec
sbb
dec
push
push
dec
inc
dec
cmp
dec
inc
dec
pusha
dec
and
dec
inc
dec
ds
inc
dec
jbe
jnp
outs
dec
addr16
add
dec
inc
dec
add
sti
add
xor
sub
dec
ds
xor
dec
ds
adc
dec
push
dec
or
dec
je
add
dec
outs
dec
dec
dec
pop
dec
das
dec
daa
dec
cmp
dec
cmp
dec
mov
add
push
dec
push
dec
pop
dec
push
dec
inc
dec
dec
dec
jg
xor
dec
pop
dec
and
dec
sbb
dec
inc
dec
or
dec
push
dec
aaa
dec
sbb
dec
inc
dec
push
dec
sub
xor
dec
push
dec
xor
dec
sbb
dec
fs
jp
push
dec
pop
dec
dec
dec
adc
dec
inc
dec
sbb
dec
adc
dec
jge
sub
dec
jbe
dec
dec
adc
dec
gs
xor
pop
dec
sbb
push
dec
push
dec
add
dec
cmp
dec
inc
dec
push
dec
dec
sub
adc
bound
dec
pop
dec
jno
or
dec
imul
xor
dec
cmp
dec
dec
dec
sbb
dec
push
dec
inc
dec
push
dec
add
dec
xor
mov
add
adc
dec
inc
dec
pop
dec
pop
dec
daa
dec
xor
adc
dec
adc
dec
adc
pop
dec
push
dec
dec
sbb
dec
pop
dec
pop
dec
ds
push
dec
push
dec
scas
mov
dec
sub
dec
ja
pop
dec
imul
jns
pop
dec
jbe
inc
dec
sub
and
dec
sub
dec
fs
cmp
dec
add
dec
aas
dec
dec
dec
js
add
xor
dec
js
push
dec
ins
dec
bound
dec
cs
jbe
bound
dec
inc
dec
cmp
dec
or
dec
outs
dec
js
pop
dec
jno
or
dec
cmp
dec
xor
dec
retf
xor
add
sbb
dec
imul
xor
dec
jae
jle
ja
jge
cmp
sbb
dec
jp
push
dec
xor
dec
push
dec
es
push
dec
popa
dec
or
aas
imul
pop
dec
daa
dec
push
dec
sbb
dec
dec
dec
dec
jle
ja
sbb
dec
inc
dec
aaa
dec
sbb
dec
dec
dec
or
dec
dec
dec
fs
ds
jae
dec
dec
and
dec
push
dec
dec
dec
add
dec
inc
dec
imul
sub
dec
(bad)
mov
add
and
dec
dec
pop
dec
imul
dec
jo
pop
dec
pop
dec
cmovle
dec
push
jg
xor
dec
aaa
dec
or
dec
pop
dec
inc
stc
add
dec
cs
sub
add
xor
dec
pop
dec
outs
dec
and
dec
inc
dec
dec
dec
pop
dec
adc
aas
dec
pop
dec
or
add
dec
arpl
dec
push
dec
add
dec
sbb
dec
pop
dec
pop
dec
adc
dec
push
dec
xor
dec
das
dec
inc
dec
add
dec
jle
add
cmp
dec
sub
dec
pop
dec
and
dec
adc
dec
sbb
dec
je
dec
xor
dec
daa
dec
xor
dec
dec
dec
push
dec
gs
cmovle
jnp
xor
dec
ins
dec
push
jae
add
aaa
dec
push
dec
dec
dec
daa
dec
ins
dec
sbb
jo
pop
dec
sbb
dec
inc
dec
dec
dec
jbe
push
dec
pop
dec
imul
adc
dec
push
dec
mov
ds
and
cmp
pop
dec
popa
dec
cmp
dec
inc
dec
das
dec
push
dec
jno
addr16
pop
dec
and
dec
and
dec
or
dec
pop
dec
adc
dec
pop
dec
inc
dec
adc
arpl
dec
add
dec
daa
dec
or
dec
jb
add
sub
inc
dec
inc
dec
sbb
dec
ins
dec
jp
dec
js
push
dec
add
dec
xor
dec
or
dec
lods
or
dec
dec
dec
xor
dec
or
dec
dec
pop
dec
pop
dec
add
dec
or
pop
dec
sbb
dec
gs
je
sbb
dec
dec
es
pop
dec
push
dec
ds
inc
dec
cmovle
dec
jo
pop
dec
inc
dec
dec
dec
jbe
add
dec
daa
dec
and
dec
imul
dec
dec
sbb
dec
dec
dec
push
dec
pop
dec
or
or
je
pop
dec
sbb
dec
pop
dec
pop
dec
inc
dec
fs
xor
dec
push
dec
and
dec
ins
dec
mov
dec
dec
inc
dec
inc
dec
es
add
dec
dec
dec
dec
dec
dec
dec
fs
push
gs
and
dec
pop
dec
dec
dec
or
dec
pop
dec
pop
dec
xor
dec
jno
xor
dec
das
dec
outs
dec
adc
dec
dec
dec
ss
cmp
dec
sbb
xor
ins
dec
sbb
fs
jbe
dec
sbb
sbb
dec
push
dec
jp
cmp
push
dec
pop
dec
jg
and
dec
sbb
dec
addr16
pusha
dec
jno
aas
dec
sbb
dec
add
dec
dec
dec
jns
sahf
mov
add
dec
inc
dec
push
dec
jbe
dec
dec
pop
dec
add
dec
pop
dec
push
dec
sbb
dec
xor
ss
adc
dec
and
dec
sbb
xor
dec
dec
outs
call
dec
aas
dec
xor
dec
cmp
dec
push
dec
fs
adc
dec
or
dec
jne
aaa
dec
add
dec
jbe
inc
dec
add
dec
sbb
dec
xor
dec
and
dec
inc
dec
cmp
dec
push
dec
jno
or
add
push
dec
je
adc
dec
pop
dec
push
dec
daa
dec
xor
dec
jp
push
dec
add
dec
adc
dec
push
dec
jle
dec
dec
inc
dec
sub
sbb
dec
cmp
dec
ds
adc
dec
sbb
xor
dec
pop
dec
add
dec
adc
dec
cmp
jb
add
push
dec
push
dec
sub
dec
js
sub
push
dec
addr16
xor
dec
adc
dec
push
dec
sub
dec
cmp
dec
push
dec
aas
dec
add
dec
mov
dec
push
dec
and
dec
inc
dec
cmp
dec
popa
dec
push
es
cmp
dec
ins
dec
pop
dec
bound
dec
push
dec
pop
dec
sub
dec
and
sub
dec
and
dec
or
lock
xor
and
dec
js
imul
dec
or
dec
pop
dec
ins
dec
push
dec
pop
dec
dec
dec
push
dec
push
dec
dec
dec
cmovle
dec
inc
dec
sub
pop
dec
sbb
dec
dec
dec
cmp
dec
dec
dec
je
inc
dec
lods
sbb
add
push
dec
jns
add
dec
or
dec
adc
imul
dec
jo
inc
dec
push
dec
dec
dec
cmovle
dec
push
inc
dec
inc
dec
mov
add
push
dec
push
dec
push
dec
and
xor
dec
inc
dec
and
dec
sbb
dec
jge
xor
dec
sbb
dec
cmp
dec
inc
dec
add
dec
dec
dec
cmp
dec
add
dec
cmp
dec
gs
inc
dec
jle
and
dec
push
dec
das
dec
sbb
dec
add
add
dec
ds
pop
dec
adc
dec
or
dec
sub
dec
sbb
dec
sbb
dec
dec
inc
dec
imul
jne
cs
inc
dec
fs
add
dec
popa
dec
inc
dec
pop
dec
outs
dec
inc
dec
cmp
dec
jg
dec
dec
gs
adc
dec
repz
add
pop
dec
add
dec
inc
dec
or
dec
push
dec
dec
cmp
xor
dec
cmp
dec
sub
dec
and
and
dec
sbb
push
pop
add
popa
dec
inc
dec
inc
dec
or
dec
xor
dec
pop
dec
adc
dec
jo
pop
dec
dec
dec
jae
ja
gs
inc
dec
jo
jp
sub
dec
xor
dec
inc
dec
pop
dec
push
dec
je
and
dec
mov
imul
dec
or
dec
outs
dec
inc
dec
jle
ja
es
inc
dec
arpl
dec
dec
dec
dec
dec
jp
jne
xor
dec
sbb
dec
inc
dec
inc
dec
pop
dec
xor
dec
xor
dec
xor
dec
gs
jle
outs
dec
sub
add
pop
dec
or
pop
dec
jnp
add
dec
arpl
dec
sub
dec
cmp
sub
dec
es
and
dec
push
dec
xor
dec
sub
dec
sub
dec
adc
dec
pop
dec
cmp
dec
dec
sbb
dec
loopne
pop
add
imul
inc
dec
jg
add
cmp
adc
dec
jnp
xor
dec
imul
das
dec
add
dec
xor
dec
jb
adc
inc
or
inc
ins
dec
xor
dec
jnp
ins
dec
sub
and
dec
pusha
dec
sbb
dec
cmovle
dec
dec
dec
je
sbb
dec
add
dec
or
dec
and
dec
ins
dec
ins
dec
xor
dec
add
dec
xor
dec
xor
fs
inc
inc
or
xor
dec
inc
dec
add
dec
aaa
dec
xor
dec
adc
dec
push
or
dec
jo
push
dec
sbb
dec
sbb
dec
gs
or
dec
push
dec
outs
dec
pop
dec
aaa
dec
jp
dec
xchg
add
jae
push
dec
and
dec
ins
dec
dec
dec
sub
dec
inc
dec
sbb
dec
push
dec
sub
dec
push
dec
pusha
dec
sub
dec
adc
dec
and
dec
sub
dec
adc
push
dec
and
dec
jnp
or
dec
je
cmovle
dec
jp
push
dec
push
dec
inc
dec
imul
dec
jnp
dec
dec
xor
dec
jp
push
dec
cmp
dec
jo
adc
dec
cmp
dec
dec
dec
ins
dec
xor
dec
ss
push
or
dec
add
dec
dec
pop
dec
addr16
dec
dec
arpl
loope
add
inc
dec
push
dec
push
dec
ds
xor
dec
sub
dec
or
ins
dec
jl
inc
dec
dec
dec
push
dec
jne
adc
es
and
dec
adc
dec
dec
dec
aas
dec
cmp
dec
daa
dec
pusha
dec
xor
dec
push
dec
push
dec
jne
popa
dec
sbb
dec
jl
gs
add
ja
dec
dec
jns
inc
dec
sub
dec
push
dec
jns
inc
dec
push
dec
pop
dec
dec
dec
push
xor
dec
jb
and
push
dec
xor
dec
je
or
dec
jnp
push
dec
jge
sub
dec
jb
pop
dec
outs
dec
sub
dec
pop
dec
pop
dec
jg
push
dec
xor
dec
xor
dec
ins
dec
sub
dec
and
adc
dec
cmp
dec
das
dec
outs
dec
jb
ins
dec
cmp
dec
inc
dec
jno
push
dec
ins
dec
js
cmp
dec
ds
pop
dec
and
dec
or
dec
push
dec
sbb
dec
jb
sub
dec
pop
dec
dec
dec
outs
dec
and
dec
pop
dec
jne
dec
dec
jnp
jae
sbb
dec
pusha
dec
add
dec
sub
or
dec
js
dec
dec
lahf
in
or
cmp
dec
pop
dec
addr16
push
dec
imul
dec
dec
dec
cmp
dec
jne
cmp
dec
adc
dec
xor
dec
dec
dec
push
dec
das
dec
jne
inc
dec
or
dec
sub
sub
add
adc
jno
mov
mov
sub
pop
and
mov
(bad)
jle
test
ins
jo
sub
mov
out
aad
jmp
pop
lahf
add
aas
popa
and
movs
xchg
int
sub
pop
in
dec
nop
movs
popf
jg
sahf
dec
cmp
mov
sub
test
and
add
push
out
or
jo
jae
lods
lahf
add
mov
jne
lds
arpl
jns
loop
jg
in
bound
cmp
dec
out
nop
int3
sub
inc
sbb
sub
mov
push
mov
push
sbb
in
(bad)
fucomip
sub
sub
shr
adc
enter
imul
lea
test
xor
jae
lar
es
mov
add
clc
and
test
sub
pop
aad
mov
fadd
cmps
retf
mov
jge
mov
jne
mov
push
and
mov
cmp
fucomip
sbb
loop
jg
fnstenv
and
enter
pop
push
dec
or
lahf
out
jmp
das
inc
hlt
mov
or
stc
jmp
aad
outs
push
pop
mov
sub
xchg
sub
bound
dec
dec
pop
cli
mov
movs
and
inc
stos
ins
mov
inc
(bad)
movs
cld
retf
test
retf
fcomp
out
stos
adc
shr
enter
ror
ret
pushf
out
jns
inc
push
pop
jns
add
gs
popa
or
int3
inc
cmp
mov
sub
pusha
fild
xchg
aaa
lahf
mov
pop
push
imul
cmp
inc
movs
cvtps2pi
call
push
imul
in
sahf
sub
pop
dec
adc
loopne
inc
cli
xchg
jecxz
mov
aam
inc
jnp
in
sub
xor
(bad)
(bad)
ins
pop
push
inc
adc
dec
xor
hlt
push
rcl
ins
fidivr
jmp
retf
push
xchg
scas
mov
lock
das
mov
inc
js
daa
sub
or
mov
inc
jb
add
cmps
into
pop
sbb
sbb
cli
inc
out
sahf
mov
movs
inc
xchg
(bad)
push
ficomp
add
aam
fwait
cwde
fcom
inc
xchg
mov
cli
push
shr
add
scas
fdivrp
pop
jnp
ins
cmp
jno
cli
daa
mov
pop
mov
leave
xor
popf
inc
rcr
xchg
push
in
mov
sub
xchg
mov
cli
inc
lds
dec
lds
inc
push
ins
or
mov
in
push
dec
sti
hlt
lock
pop
cld
xor
stos
iret
xchg
out
push
or
sub
pop
xor
xor
std
cmp
inc
out
test
mov
cli
ret
cmp
test
xchg
sub
movs
ret
xor
inc
loop
mov
cmp
cmp
push
cmp
mov
stos
jns
hlt
call
aaa
pop
movs
cmp
test
cmp
fnsave
ss
shl
mov
je
les
cmp
inc
xchg
test
dec
aas
retf
cli
sahf
hlt
(bad)
(bad)
fcom
iret
mov
enter
add
and
je
pop
jge
pop
mov
dec
jge
add
mov
xchg
jl
rol
test
mov
mov
outs
call
loope
xor
in
mov
jl
push
aad
xor
add
call
mov
mov
mov
mov
popf
sbb
daa
(bad)
fisttp
sbb
mov
inc
cli
mov
lock
js
loope
ins
jnp
(bad)
in
es
iret
pop
adc
xchg
cwde
(bad)
lods
pop
inc
lea
lods
stos
lods
shl
and
push
xor
jne
lahf
daa
or
jecxz
ja
pushf
into
stos
fsubr
jle
inc
add
mov
fadd
jmp
mov
retf
std
push
mov
shl
pop
daa
mov
cmp
jae
inc
fdivr
sbb
jmp
jo
dec
fcom
lock
mov
iret
mov
or
mov
cmc
hlt
xor
fwait
icebp
inc
loopne
shr
or
clts
mov
mov
pop
(bad)
dec
aam
jge
icebp
jno
les
(bad)
out
jg
(bad)
retf
les
sub
in
xchg
mov
sbb
mov
sub
or
push
out
push
jecxz
xlat
fistp
loopne
dec
adc
cmp
add
jmp
ret
out
cmps
mov
add
fwait
cli
imul
mov
repz
fstp
(bad)
out
fsub
xor
xchg
rcl
stc
or
ret
aaa
ficom
sahf
(bad)
retf
(bad)
es
push
mov
sbb
scas
pop
mov
xor
aas
mov
push
and
es
aad
stos
sub
ins
retf
fistp
test
das
or
push
mov
dec
retf
mov
xor
sbb
or
mov
fs
xor
add
movs
pusha
xchg
add
rcr
xlat
outs
inc
fild
out
inc
nop
scas
and
adc
aad
sub
arpl
cs
out
adc
dec
xchg
sahf
cmc
sbb
push
jbe
jl
push
inc
std
xor
fiadd
outs
jge
iret
xchg
sbb
fwait
push
xchg
xor
pushf
out
out
pop
mov
mov
test
(bad)
push
sub
add
sub
cmp
lods
cmc
pop
call
mov
jmp
cli
clc
shr
int
(bad)
xchg
fidivr
jne
sub
loope
mov
sahf
sub
pop
ret
movs
pop
pop
fistp
imul
popa
lock
or
push
aas
xor
lods
into
xchg
cwde
mov
lea
(bad)
dec
test
sub
outs
shr
retf
out
mov
xor
mov
fwait
push
add
int
mov
xor
aam
lods
mov
dec
(bad)
push
dec
loopne
jp
loopne
jns
xor
push
push
adc
push
in
test
jl
or
xor
adc
push
and
inc
mov
test
and
adc
lea
xchg
dec
push
icebp
js
fs
adc
push
div
cmps
cmps
fst
not
rcl
(bad)
push
xor
xchg
push
push
add
ins
add
inc
test
xchg
popf
fld
xchg
aaa
pushf
pop
cmp
clc
and
mov
xor
cmp
out
out
(bad)
xchg
das
push
ss
iret
jnp
ds
cmp
dec
cmps
(bad)
mov
ja
sbb
cmp
add
push
and
bound
int3
jmp
pop
lea
hlt
ins
test
gs
or
and
mov
cmps
(bad)
sub
and
ror
or
mov
fs
pop
xlat
pushf
sub
ja
fidivr
sub
std
pop
repz
add
rcr
add
pop
adc
test
pusha
loopne
dec
aad
add
cld
mov
cmp
and
bound
push
mov
fisttp
pop
mov
mov
fcmovbe
lods
outs
movs
add
dec
mov
dec
push
aad
xchg
jnp
mov
inc
pop
adc
mul
xlat
jmp
not
mov
xchg
data16
xchg
cmps
icebp
leave
rcr
rcl
xchg
push
in
and
cld
jnp
std
jl
sbb
fwait
js
fs
push
loope
mov
fstp
rcl
adc
mov
push
lea
loopne
ja
data16
lahf
pushf
rcl
push
sub
pop
mov
pop
and
mov
jbe
test
mov
bound
push
je
add
leave
(bad)
dec
or
les
not
push
cwde
push
out
cs
sub
fistp
xchg
cmp
retf
(bad)
call
test
test
mov
retf
lea
leave
inc
dec
test
int3
fstp
jb
stc
cmp
push
mov
in
or
retf
iret
inc
repnz
ficom
and
in
scas
adc
pushf
sbb
fidivr
shr
cmp
add
cwde
(bad)
dec
add
div
jne
scas
jle
jns
sar
loopne
mov
lds
repz
in
mov
mov
jb
rol
fidivr
lea
fistp
mov
in
arpl
test
cmps
and
and
int3
inc
loope
fldl2t
movs
sub
movs
movs
jne
sub
fs
and
rol
jmp
xlat
sub
ror
adc
xlat
rcr
mov
jns
adc
mov
aam
lods
repnz
mov
mov
mov
loop
xchg
ret
les
ins
mov
scas
cmp
xchg
arpl
fs
cmp
xchg
cwde
stos
push
pop
xor
cld
sbb
xchg
mov
adc
mov
(bad)
mov
cli
movs
ret
inc
in
push
jae
mov
inc
jb
cwde
xor
mov
adc
inc
pop
div
stc
in
or
aas
hlt
ja
mov
pop
fiadd
mov
out
mov
mov
or
jb
mov
sbb
mov
xchg
fwait
out
nop
mov
ja
mov
cmp
(bad)
adc
mov
(bad)
adc
lods
lahf
sbb
std
mov
retf
push
int3
sub
fs
sahf
ret
ss
movs
sbb
mov
les
pop
mul
push
sbb
jne
sbb
daa
leave
push
mov
call
sub
ficomp
shl
jecxz
imul
stos
lahf
rcr
lds
retf
dec
(bad)
bound
pop
sub
popf
mov
hlt
inc
call
xchg
(bad)
xor
gs
sbb
pusha
mov
dec
test
fmul
xchg
shl
sbb
adc
inc
inc
mov
test
je
data16
mov
loopne
cld
cdq
bound
xchg
in
arpl
mov
jns
xor
les
sbb
sub
cmp
enter
sbb
jnp
stc
out
cmc
mov
pop
test
xchg
fadd
mov
sbb
mov
aam
scas
adc
dec
cmp
popa
scas
dec
adc
add
fild
(bad)
int3
imul
or
mov
mov
dec
into
ins
sub
xor
push
xor
xor
adc
push
and
pop
push
cdq
and
mul
ret
movs
or
xlat
mov
scas
loope
inc
sbb
ins
stos
lods
and
push
popa
xchg
jns
push
mov
(bad)
into
jo
mov
outs
addr16
es
inc
aaa
hlt
stos
mov
cmp
mov
in
iret
pop
test
iret
sahf
addr16
mov
sub
dec
fcomp
not
push
fwait
sbb
sbb
pushf
dec
cdq
cmp
dec
and
add
xlat
shl
inc
ins
jnp
cmp
add
in
dec
sbb
movs
je
adc
scas
jg
sti
sahf
pushf
adc
inc
adc
add
in
call
in
jmp
mov
fiadd
push
inc
call
repz
ret
inc
popa
cmp
or
lock
mov
dec
push
pop
or
sbb
dec
std
mov
cmp
mov
test
daa
cmps
rol
mov
out
and
sti
fs
jne
aam
ja
xchg
test
pop
jb
fbstp
clc
fnstcw
enter
enter
xor
push
jae
stos
cdq
imul
shl
test
and
sub
cmp
cmp
call
ror
call
mov
sti
and
jecxz
push
jo
jns
jbe
inc
lods
cmp
(bad)
gs
adc
jmp
xchg
jmp
mov
mov
cld
ins
aad
push
fcomp
test
shl
jmp
into
in
stc
or
dec
sub
pop
inc
test
add
cmp
mov
mov
shl
cmp
cmps
jno
bt
movs
mov
out
(bad)
pusha
pop
lods
out
and
push
sbb
xor
or
fistp
fnstenv
xchg
dec
aad
xor
mov
daa
push
push
fstp
retf
dec
mov
jle
dec
mov
lods
cli
sub
sub
or
rcl
mov
loop
int3
cs
pop
rcl
lods
arpl
repz
fisub
mov
sub
xor
lods
pop
sbb
xchg
mov
fs
je
ds
jp
mov
(bad)
mov
cmp
jb
sbb
push
mov
mov
pop
cmp
call
jg
xchg
mov
push
cmp
cmps
imul
mov
push
mov
outs
add
ins
outs
and
shr
(bad)
xor
into
sub
in
adc
iret
pop
hlt
imul
loop
std
in
dec
rcr
in
adc
sub
xchg
pop
sub
shl
push
cmp
xchg
xchg
lods
outs
mov
jb
mov
(bad)
loopne
mov
dec
push
loope
adc
hlt
push
xor
inc
sub
sub
xor
frstor
sub
add
dec
pop
retf
mov
and
dec
add
(bad)
pop
add
pop
pop
push
adc
dec
xor
loop
sti
inc
fld
and
push
jne
jp
cwde
dec
or
sbb
ins
test
imul
leave
loopne
push
xor
test
in
sub
sbb
mov
jmp
out
daa
inc
inc
and
in
mov
leave
xchg
es
outs
xor
imul
or
daa
push
repz
call
fdiv
sub
clc
stc
dec
int
jae
cmps
or
pop
dec
inc
out
jbe
mov
inc
shl
push
dec
add
fld
ret
jl
je
add
jmp
xor
inc
sbb
scas
sbb
fimul
push
jmp
add
cld
push
inc
lea
mov
jo
xor
cmp
jge
das
into
ins
bound
inc
test
test
rcl
sub
push
outs
jbe
(bad)
out
jae
cmp
enter
jle
aas
inc
lods
cmps
jl
lahf
mov
pop
pop
rol
mov
cmp
in
pop
sub
lods
jae
push
fucomp
add
inc
sti
cdq
fld
cmc
or
jo
dec
jl
scas
push
mov
xor
sub
xor
sbb
hlt
adc
arpl
mov
int3
loope
xchg
push
pop
jg
js
int
cmps
nop
push
daa
or
popf
loopne
sub
and
icebp
sbb
repnz
test
cmp
(bad)
rol
mov
popf
(bad)
aas
sbb
stos
stos
mov
push
mov
pop
aas
xchg
loop
add
inc
scas
add
xlat
xor
push
add
inc
cvtdq2ps
enter
sbb
test
test
adc
leave
hlt
mov
adc
sub
test
ffreep
cmc
daa
test
inc
aas
dec
jo
pop
std
addr16
sub
pop
jl
ds
add
cmp
mov
add
sbb
push
test
nop
rcr
shr
out
rol
mov
push
out
addr16
rol
add
mov
mov
pop
sbb
push
jns
dec
xor
and
or
movs
cmps
repnz
outs
rol
les
dec
mov
xor
je
add
ss
scas
inc
jecxz
xor
lods
inc
lds
ret
pop
pop
jmp
hlt
les
push
fs
inc
mov
sbb
sub
jno
out
xchg
daa
fisubr
dec
add
jo
xor
fidivr
ds
mov
in
cmc
or
or
call
lds
dec
hlt
test
(bad)
stc
loop
push
std
shr
hlt
test
push
test
mov
mov
sub
cld
leave
xchg
sub
scas
sahf
jbe
data16
lods
mov
ins
iret
push
scas
pushf
inc
aad
sub
push
out
out
lock
idiv
pop
in
xchg
and
cmps
test
or
dec
clc
jno
xchg
jne
(bad)
mov
in
stos
and
push
pop
clc
adc
ja
fdivr
shr
jle
adc
xchg
add
hlt
cli
aaa
mov
bnd
rcl
sbb
xor
xchg
mov
inc
sbb
add
push
jne
and
adc
mov
sub
push
push
das
sub
add
mov
and
inc
mov
unpcklps
(bad)
arpl
sub
ss
mov
or
outs
ds
ds
lea
rol
inc
aad
push
xor
loopne
xor
add
jo
cmp
outs
cmp
cmp
addr16
out
mov
pop
and
cmc
xor
xor
sti
dec
and
sub
(bad)
(bad)
sub
jno
ficom
and
shr
adc
xor
add
add
loope
adc
repz
lock
sbb
aas
add
iret
call
aas
and
call
add
mov
mov
movs
mov
jo
push
cld
mov
stos
dec
arpl
(bad)
ret
int3
adc
xchg
lods
js
into
or
sbb
pop
lods
jle
push
retf
mov
push
pop
sub
(bad)
push
into
rcl
dec
push
(bad)
daa
push
push
ins
sub
mov
test
(bad)
mov
rcr
add
push
neg
not
ror
shl
hlt
pop
push
push
cdq
shl
sub
sub
test
fnstenv
or
jle
aam
mov
mov
sub
push
in
sbb
imul
add
in
aam
sbb
sub
addr16
xor
std
cmp
inc
enter
adc
dec
lods
pop
int
xchg
test
xchg
mov
mov
stos
pop
dec
pop
pop
sar
xchg
dec
jnp
fistp
mov
loop
adc
int
sub
mov
addr16
dec
mov
pop
ret
mov
or
in
inc
pop
sub
(bad)
retf
xchg
mov
dec
repz
and
mul
(bad)
in
pop
xchg
call
mov
jno
in
xchg
push
call
jge
in
pop
mov
mov
mov
pusha
movs
ror
pop
push
or
pop
pop
in
call
syscall
mov
jb
ss
shl
xchg
xlat
repnz
repnz
cld
call
clc
or
lock
jle
and
das
shrd
in
xchg
dec
cmp
pop
(bad)
movs
fstp
stc
and
mov
call
xchg
jns
lea
sbb
dec
popf
addr16
or
jnp
jb
retf
sbb
jb
out
push
adc
sub
cld
ss
jne
(bad)
fdiv
cmc
ss
out
cmps
mov
iret
jg
and
adc
in
jp
cli
imul
repz
mov
shl
pop
ins
push
(bad)
iret
jo
xchg
daa
ret
jb
lods
dec
or
rol
push
ror
jb
add
mov
ror
pusha
fisub
mov
fild
and
repz
and
repz
ret
mov
pop
jo
inc
mov
push
xchg
xchg
ds
dec
test
repz
rcl
repz
adc
mov
jno
add
dec
fild
add
dec
call
enter
mov
out
ret
nop
sub
aaa
push
outs
push
jae
inc
(bad)
rcr
les
lahf
les
inc
ss
mov
adc
xor
sub
add
inc
and
sub
dec
mov
das
xchg
xchg
(bad)
or
cmps
sbb
push
(bad)
daa
rcl
dec
dec
and
stos
or
repz
loope
push
push
and
hlt
pop
xchg
xchg
mov
vpmulhw
adc
mov
int3
dec
int
xchg
retf
daa
mov
sub
ins
movs
jns
jl
mov
je
movs
(bad)
pop
daa
mov
fistp
imul
pop
cld
cmps
push
mov
jno
cmp
pop
adc
repz
xor
push
icebp
mov
aad
jno
iret
sub
fiadd
mov
ss
ficomp
cmc
aad
cmp
inc
jmp
and
mul
rcl
shr
mov
xor
js
jg
inc
add
adc
or
adc
xor
sub
addr16
mov
mov
rol
push
std
add
and
and
mov
inc
cmc
jne
jno
xchg
aas
and
sbb
inc
cmp
jnp
mov
scas
rcr
lods
inc
sar
test
in
mov
retf
push
cmp
stc
mov
aas
dec
inc
mov
jmp
sahf
shl
scas
add
xchg
pop
push
repz
loope
(bad)
dec
jae
jb
mov
stos
scas
inc
inc
push
call
xchg
sti
pusha
or
in
mov
lock
mov
les
cmp
fcomp
push
adc
cmc
test
or
add
retf
sar
out
cmp
and
packssdw
jnp
cmp
sub
call
js
cmp
pop
pop
dec
cwde
add
icebp
adc
loop
mul
cmp
arpl
fwait
dec
dec
dec
test
ss
mov
das
jbe
or
mul
iret
pop
mov
shl
(bad)
cmp
test
sbb
(bad)
xlat
jae
and
fbld
out
repnz
inc
loopne
rcr
mov
push
into
lock
ja
cmps
jne
fwait
jae
xor
daa
gs
(bad)
and
push
daa
sbb
test
or
hlt
and
cwde
lock
pop
cmc
popf
fbld
mov
add
aad
add
dec
jns
out
mov
and
pop
cmp
add
mov
aaa
sbb
outs
and
dec
(bad)
pop
mov
or
gs
inc
out
fwait
mov
repnz
repnz
loope
jbe
xor
fist
push
push
pop
push
loopne
int
outs
pop
mov
push
(bad)
mov
stos
dec
add
out
jne
jns
sar
imul
jb
mov
jl
iret
call
pop
ss
in
mov
cmp
jl
fcom
jg
stos
idiv
cs
push
mov
xchg
hlt
in
pop
in
jmp
sub
fcmovu
xchg
data16
sub
and
sbb
lock
nop
mov
pop
in
out
sub
das
push
mov
mov
xchg
fsub
pop
xchg
ins
das
pop
push
jne
ret
sbb
(bad)
mov
dec
lods
sub
inc
retf
bound
mov
daa
idiv
xchg
add
adc
shr
fsub
in
or
mov
push
push
push
xor
repnz
mov
sub
jmp
fnstcw
jl
sub
sbb
or
das
sbb
pop
add
mov
cmp
in
in
leave
xchg
jp
imul
into
mov
add
es
jns
mov
sub
xor
jne
je
test
sub
jp
push
jmp
ins
xchg
xor
mov
sbb
fnstcw
lods
mov
das
mov
adc
push
or
adc
push
or
xchg
cmps
mov
retf
push
push
outs
loopne
sub
adc
xchg
cmp
push
add
dec
push
mov
mov
sbb
xchg
lea
hlt
push
addr16
cdq
aam
mov
in
cmps
pop
pop
lods
das
sbb
mov
imul
in
mov
push
mov
fild
fisubr
bound
cmp
scas
cmc
xchg
pop
out
sbb
jle
add
sbb
mov
and
shl
outs
sbb
(bad)
(bad)
mov
in
aad
pop
mov
enter
mov
push
out
pop
add
cs
add
repnz
and
mov
inc
into
xor
mov
inc
nop
je
xchg
lahf
sub
mov
scas
test
cmp
sbb
xchg
sahf
jbe
int3
xor
shr
nop
xchg
pop
inc
xchg
into
cmp
pop
stos
and
leave
push
(bad)
or
cmc
or
pop
push
test
mov
fistp
rcl
cmp
push
data16
push
cli
sar
inc
cli
xchg
pop
sar
gs
mov
xchg
and
sub
je
ffree
jle
scas
sar
cwde
push
scas
test
pushf
sub
jo
jp
jne
nop
aad
popa
add
es
xchg
lods
shl
ins
adc
call
(bad)
stc
xchg
and
test
push
adc
out
in
mov
mul
push
xor
fyl2xp1
sub
rcl
sbb
pop
es
repnz
or
mov
fcomp
xchg
inc
in
(bad)
push
jp
into
adc
jno
mov
push
into
mov
jl
arpl
test
push
xor
jbe
mov
std
ins
or
inc
lods
or
cmp
cmp
xchg
mov
mov
je
mov
retf
sbb
mov
dec
pop
repnz
pop
icebp
test
xor
icebp
mov
(bad)
test
adc
into
cli
or
xor
add
dec
push
mov
sbb
mov
sub
sbb
ss
add
adc
jae
jp
cld
mov
repz
es
fsubr
jge
push
in
(bad)
pop
inc
pop
stos
daa
cmp
cmp
fs
movs
lock
movs
cmp
xor
mov
sahf
std
pop
dec
call
stos
ret
fcomp
pop
or
ins
jmp
pop
jae
lock
(bad)
in
adc
shr
dec
stc
sub
mov
jo
jp
mov
jbe
cmp
fwait
dec
dec
bound
add
lock
inc
js
xchg
or
and
fmul
cmp
cmp
ret
xchg
icebp
shl
xor
arpl
and
mov
jge
cwde
aaa
popa
xchg
stc
jmp
imul
pop
ds
or
jns
add
mov
arpl
xor
push
std
xor
test
adc
pop
clc
mov
sbb
loopne
push
jle
xor
and
push
movs
pop
sbb
xor
jmp
sti
int
lods
(bad)
into
sbb
das
mov
dec
mov
lock
gs
cmps
retf
ins
push
loop
mov
jno
test
push
jmp
jmp
cmps
movs
outs
cdq
sahf
outs
cmp
and
dec
xchg
mov
cli
pushf
daa
inc
mov
cwde
xchg
shl
add
(bad)
sbb
iret
loopne
in
and
inc
(bad)
fcmovnu
pusha
cmc
xchg
sti
(bad)
and
jecxz
add
or
cmp
dec
nop
je
pop
mov
mov
adc
lds
mov
daa
rol
fnstcw
ins
inc
mov
pop
pop
jl
pop
ss
cmps
mov
lods
popf
push
adc
(bad)
and
xor
aam
and
loope
ret
jb
xor
lds
mov
lahf
pop
pop
enter
stc
cdq
add
or
dec
(bad)
jp
sub
jle
outs
ins
ins
cmc
cmc
fisttp
out
xor
in
lods
les
push
shl
xchg
aam
in
lock
retf
(bad)
pop
adc
mov
sar
mov
sub
xchg
popf
mov
in
push
jmp
aaa
sbb
xchg
lock
mov
sbb
push
pop
ficom
sti
push
pop
fist
push
pop
aam
cs
aas
out
pop
mov
iret
outs
sub
div
lea
jo
add
cmp
call
jmp
pop
xor
ror
ds
push
icebp
out
sahf
loopne
test
jnp
pushf
add
stos
pop
cmps
mov
add
or
retf
mov
pop
shr
pop
pop
push
mov
cmp
cmp
sub
dec
push
mul
or
xor
imul
std
test
loopne
fidivr
push
or
les
imul
jmp
test
into
fdiv
push
js
inc
retf
stc
(bad)
pusha
or
pop
mov
loopne
ins
cli
push
xchg
xlat
xchg
fsubp
(bad)
xlat
mov
adc
push
cmp
mov
xchg
jp
adc
lods
repz
cwde
out
xchg
mov
arpl
pop
inc
pop
loop
std
jle
inc
and
pop
das
aad
inc
xchg
pop
or
jns
in
xchg
js
stos
hlt
fdiv
cld
(bad)
ror
push
jae
into
jge
mov
adc
xor
in
das
inc
loop
cld
fwait
pop
vpcmpud
sti
retf
push
inc
inc
inc
mov
sar
jp
in
jb
add
popa
mov
adc
fimul
mov
dec
mov
and
push
mul
and
adc
xor
repz
pop
or
popf
inc
(bad)
sub
inc
dec
fsub
pop
iret
jmp
xchg
dec
bnd
cli
dec
outs
cmp
shl
mov
xlat
mov
mov
and
push
out
push
test
xchg
cdq
jmp
cmp
(bad)
(bad)
in
xchg
dec
not
push
lods
mov
mov
shr
(bad)
push
mov
and
dec
shl
in
(bad)
not
ret
ins
pop
xchg
adc
jb
mov
xchg
pop
sub
in
sahf
gs
in
fsub
sub
and
test
imul
jp
rol
mov
out
imul
pop
and
lods
cdq
rcl
mov
sbb
jmp
test
jne
call
in
call
loopne
inc
test
jbe
dec
test
popf
push
xor
test
jg
call
call
jnp
daa
jl
vmread
iret
aad
xchg
push
push
in
fsubr
jl
dec
cmps
dec
sub
test
arpl
ja
mov
pop
rcl
cmp
or
mov
outs
call
jo
fld
mov
mov
pop
mov
mov
pusha
xchg
add
enter
pop
sbb
fidiv
sbb
pop
push
outs
les
int
dec
sbb
sub
pushf
shr
fnsave
shr
(bad)
fisubr
repz
imul
aad
ret
jmp
push
test
fs
cs
(bad)
not
and
into
test
neg
inc
inc
ins
jp
(bad)
fldcw
out
push
in
sub
pop
mov
mov
out
xor
callw
inc
stos
sbb
sbb
data16
leave
mov
dec
xlat
xchg
test
pop
inc
adc
push
pop
sar
and
pop
lds
mov
ficom
fld
xchg
xchg
push
in
sub
or
cmp
mov
(bad)
jmp
mov
push
and
cli
scas
jmp
scas
adc
lock
push
scas
shl
pop
std
sub
in
cmp
or
icebp
movs
addr16
clc
xor
int3
pop
push
fsubr
dec
mov
(bad)
movs
mov
pop
in
es
sti
bound
or
push
mov
cli
and
xchg
jno
(bad)
xchg
vandpd
jp
push
mov
pop
jmp
retf
lods
lahf
out
test
mov
xor
or
movs
les
sahf
adc
fxtract
shl
jg
std
fimul
sub
pop
push
inc
mov
cmp
mov
int3
in
pop
neg
out
sub
sub
out
sub
(bad)
sbb
push
repz
dec
dec
(bad)
aas
and
out
inc
cwde
stos
cwde
ins
pop
cmc
test
iret
inc
mov
add
bound
pop
retf
lahf
sahf
push
imul
jecxz
xlat
jmp
fs
mov
sbb
cmps
outs
scas
cmp
sub
mov
and
mov
not
mov
retf
mov
bound
lea
cmp
pop
mov
in
adc
sub
push
call
js
and
or
retf
or
les
push
or
gs
or
out
mov
in
lea
ja
xchg
mov
adc
aas
bnd
data16
push
rcl
ins
(bad)
and
and
push
jnp
inc
int
mov
push
push
test
je
imul
out
add
mov
mov
movs
dec
push
inc
fwait
cmp
enter
xlat
movs
pop
jmp
pop
xor
cdq
dec
add
shr
pop
sahf
inc
in
jmp
dec
dec
xor
test
lahf
inc
(bad)
sub
jnp
sub
in
aaa
sbb
(bad)
xchg
fsubrp
mov
mov
or
pop
cli
aaa
mov
js
add
push
ja
cdq
cmps
retf
fstp
xor
push
aam
ficomp
nop
ja
outs
pop
rol
cmp
cdq
add
pop
mov
std
clc
sub
jmp
push
(bad)
aad
dec
push
ret
lock
xchg
mov
sub
fdivr
clc
sbb
inc
cmp
stc
test
mov
jnp
mov
jne
fild
gs
lea
inc
xor
mov
outs
jge
stos
(bad)
bound
neg
sahf
cmp
movs
enter
shl
add
enter
retf
adc
mov
mov
scas
hlt
pusha
mov
dec
js
mov
mov
(bad)
shr
dec
and
fistp
cmp
add
inc
xor
(bad)
imul
xchg
cmp
int
xchg
popf
arpl
cmp
imul
cmp
int
adc
jl
mov
test
or
mov
jge
jecxz
movs
pop
lahf
retf
shl
xchg
in
adc
and
mov
nop
add
retf
repz
cmps
inc
sub
and
push
stc
xor
sahf
mov
or
js
or
sub
fisubr
iret
pusha
mov
sbb
dec
push
adc
dec
in
loop
and
les
(bad)
xchg
mov
and
cld
in
dec
jmp
out
out
add
outs
dec
or
ror
fmul
popf
ins
leave
sub
aam
and
push
pop
fsub
push
adc
lahf
push
outs
hlt
jbe
data16
out
cld
cmc
mov
push
inc
or
cmc
ja
cmp
jl
jne
inc
popa
inc
je
aad
loope
cmp
dec
in
dec
xor
pushf
pop
mov
js
fistp
(bad)
ins
adc
unpckhps
push
into
jmp
stos
ss
rcr
mov
sub
(bad)
dec
mov
ss
jmp
jmp
jbe
clc
inc
sub
mov
and
sbb
jmp
ss
jp
sbb
lds
and
cli
scas
aam
lds
mov
test
push
cs
jae
jne
mov
jle
rep
not
fstp
lds
inc
ins
push
jo
jo
push
loope
imul
mov
sub
cmp
adc
and
push
lea
push
call
xor
xchg
das
inc
pusha
retf
sbb
cdq
add
loop
xlat
xor
dec
pop
pop
sbb
fcmovnb
xchg
pop
je
fcom
retf
xor
pop
or
or
cs
(bad)
clc
in
add
push
jnp
jnp
mov
(bad)
jmp
dec
sbb
imul
sbb
in
aas
jo
push
xchg
loopne
or
cmp
ins
ret
sar
cmps
mov
repz
cld
xor
sub
test
push
hlt
scas
mov
mov
es
cmp
and
pop
sbb
cdq
enter
icebp
push
cld
push
aam
dec
loop
enter
clc
mov
sub
dec
std
inc
xor
adc
dec
cmp
mov
pop
rol
gs
pushf
jg
in
lods
pop
mov
loop
jl
cmp
sbb
imul
dec
xor
into
push
push
repnz
je
lock
pushf
arpl
in
pop
popf
fidiv
adc
inc
mov
lods
adc
jge
fnstsw
fisttp
dec
retf
mov
mov
es
push
add
addr16
mov
cld
pop
bound
and
and
fs
mov
das
xchg
pop
sbb
popf
in
mov
imul
iret
in
xor
cli
iret
xlat
add
(bad)
mov
stc
xor
sti
loop
fdivr
and
jbe
xor
mov
cmp
lock
jns
out
leave
push
scas
jo
jbe
(bad)
shr
inc
mov
mov
sub
jl
hlt
aad
cwde
or
adc
mul
and
mov
or
into
xchg
sbb
arpl
fld
adc
out
adc
int3
or
xchg
mov
inc
dec
pop
ret
cmp
in
hlt
mov
mov
push
pop
adc
cwde
lods
icebp
lahf
cdq
cmps
xchg
js
cdq
jmp
cdq
jne
jg
pop
movs
mov
or
jae
dec
aaa
cmp
pop
std
mov
sub
fsubr
xchg
int3
jge
pop
sti
or
jbe
xchg
xchg
adc
bound
jg
fild
add
js
xchg
rcr
lds
imul
jmp
lods
lahf
(bad)
(bad)
xchg
stos
sub
jge
lods
cdq
cmp
jbe
call
call
jl
inc
stos
fdiv
xor
add
xor
add
inc
call
popa
aad
icebp
xor
xchg
(bad)
xchg
test
mov
sub
div
jmp
retf
ins
fcmovbe
popf
leave
call
jnp
enter
push
movs
push
aad
jns
in
dec
movs
push
sbb
xor
push
push
mov
or
jne
xor
hlt
shl
hlt
dec
pop
fcomp
mov
dec
jle
ins
daa
out
push
sub
shr
dec
bound
ss
jmp
std
gs
pop
cmps
xchg
adc
loopne
mov
xor
add
fsubr
cmc
call
push
mov
or
jg
push
mov
(bad)
aam
out
sbb
xchg
jns
pop
mov
pusha
add
pusha
mov
mov
into
sbb
and
lock
mov
mov
xchg
cmp
popf
cwde
mov
fst
dec
out
push
in
jmp
int3
push
lods
retf
arpl
clc
das
out
or
sbb
cmps
shr
push
dec
sar
nop
out
jnp
loopne
push
or
(bad)
cmp
cmp
pop
in
in
sbb
dec
in
mov
mov
xor
inc
push
sbb
hlt
cmc
pop
mul
add
mov
shl
and
xchg
sub
cmp
adc
addr16
out
iret
aas
mov
mov
and
in
loop
jmp
adc
jbe
cmp
adc
push
(bad)
stos
push
cmp
cmps
shl
jns
cmp
mov
mov
or
mov
loop
imul
xor
scas
leave
aaa
lods
sub
mov
das
sbb
fst
push
test
imul
leave
xor
dec
sub
sbb
test
push
cs
daa
sub
lods
jnp
inc
xor
loop
popa
jecxz
or
sbb
ror
outs
pop
mov
mov
movs
pop
div
(bad)
aas
ret
xor
and
es
rol
and
mov
sub
pop
sbb
push
xchg
cmp
push
push
js
mov
pop
into
jnp
add
lock
mov
cmc
and
in
iret
cli
sub
mov
(bad)
xchg
jg
cmp
xchg
pop
cmp
cmp
sbb
nop
jle
das
out
pop
aad
sti
mov
cwde
das
xor
cld
push
xor
imul
jle
add
dec
xor
mov
jbe
and
xchg
push
xor
dec
out
std
loop
scas
cmp
adc
cmp
ds
je
cli
mov
jmp
sti
rcl
and
dec
test
test
cmp
and
test
mov
sbb
stos
jbe
test
sub
pop
mov
or
push
sub
fidivr
loopne
cmp
ret
sti
idiv
in
or
cdq
jp
jae
imul
imul
arpl
mov
cmp
or
ins
cdq
pop
and
and
cld
pop
ret
sub
sub
inc
scas
scas
xchg
dec
jmp
mov
push
hlt
test
lods
pop
sbb
cmp
xor
jecxz
mov
or
lods
mul
dec
jnp
push
out
or
push
push
cmps
pop
xchg
fsubr
add
ins
sbb
pop
out
pop
sahf
mov
inc
retf
sbb
mov
mov
(bad)
sahf
or
ja
pop
in
test
sbb
add
jne
ficom
dec
pusha
fwait
mov
iret
(bad)
jns
and
pop
sub
je
movs
and
sbb
enter
adc
ret
pop
adc
push
shl
enter
mov
push
pop
sub
xchg
leave
xchg
bound
mov
jbe
push
movs
pop
mov
lods
adc
pop
mov
xor
psubsb
aas
push
sbb
arpl
test
ret
popf
cdq
movs
js
in
dec
mov
out
aad
inc
neg
test
stos
test
pushf
xchg
mov
jmp
lods
add
push
dec
imul
mov
xchg
cmps
push
cwde
fisttp
jo
pop
and
test
jmp
sub
mov
push
je
ret
push
pop
lahf
jg
mov
fcom
jmp
dec
xchg
hlt
(bad)
sbb
mov
nop
mov
adc
mov
enter
enter
push
dec
and
int
lods
mov
inc
xor
(bad)
out
dec
scas
jmp
xchg
sbb
inc
push
adc
push
pusha
dec
adc
and
cdq
ret
mov
arpl
mov
fwait
inc
and
repnz
jae
ret
xor
shl
scas
pop
(bad)
scas
pop
cs
jmp
int
sub
xchg
jnp
data16
mov
inc
mov
nop
ds
sbb
or
aas
xor
cwde
inc
daa
ret
inc
(bad)
cmp
push
mov
adc
mov
mov
sub
dec
jno
jge
dec
frstor
aaa
and
scas
pop
mov
scas
into
sti
adc
sbb
out
lods
lea
inc
ret
popf
dec
and
inc
cmp
pop
xchg
xchg
mov
pop
push
and
mov
cwde
mov
into
mov
mov
mov
or
or
js
push
int
movs
and
adc
mov
pushf
dec
jae
imul
mov
ja
fisubr
call
mov
dec
(bad)
retf
xchg
cmp
js
mov
inc
mov
sub
lods
ins
cmps
(bad)
inc
push
and
jne
sub
inc
cs
xchg
push
imul
(bad)
jnp
stos
into
and
ror
add
sbb
xchg
inc
mov
iret
(bad)
dec
in
rcl
shr
cdq
cli
lahf
jp
jnp
in
pop
push
sbb
mov
(bad)
pop
cwde
in
sub
je
mov
bound
je
mov
daa
xchg
add
add
xchg
pop
fstp
es
mov
aad
sub
pop
xchg
popa
je
icebp
xor
push
mov
push
xchg
sub
cli
sbb
pop
pop
lea
loopne
mov
mov
or
sbb
cmps
sub
int3
outs
(bad)
sub
sbb
cmps
scas
repnz
inc
(bad)
jmp
ins
or
push
popa
ror
(bad)
addr16
sub
xchg
mov
dec
dec
shl
shl
scas
sub
xor
test
sub
push
xor
movs
out
xchg
or
and
dec
mov
adc
dec
push
movs
or
xor
cmp
jg
(bad)
jmp
cmp
sub
or
fistp
pop
imul
aam
pop
push
out
loopne
mov
jmp
jg
cmp
sar
outs
xchg
dec
popf
jne
mov
(bad)
gs
lods
outs
sbb
(bad)
xlat
stc
jo
cld
push
mov
mov
ret
sub
jnp
sbb
cld
adc
add
mov
jbe
std
adc
mov
mov
and
jmp
jne
mov
(bad)
ds
mov
retf
test
cs
out
mov
cmps
inc
push
popa
fnstenv
not
aad
ss
or
mov
or
push
sbb
out
fs
mov
mov
mov
add
jno
sbb
mov
mov
or
jmp
in
shl
xchg
rcr
mov
inc
or
fwait
jno
mov
cmp
(bad)
aas
cmp
jae
dec
loope
add
mov
outs
push
mov
jmp
or
add
nop
fmul
ja
adc
add
adc
repz
and
(bad)
rcl
xchg
aam
idiv
faddp
pushf
adc
scas
jp
xchg
ds
jl
fld
or
scas
dec
repnz
push
xor
xchg
(bad)
aam
imul
jb
or
ror
inc
imul
pop
loop
xchg
push
shl
mov
sahf
rol
jle
mov
jmp
sub
dec
xchg
mov
cli
push
and
out
xor
repnz
js
xchg
fs
mov
adc
rcr
cmp
ins
scas
mov
les
cmps
scas
daa
mov
shr
add
push
fsub
inc
iret
fisttp
xor
cmp
or
add
imul
sbb
test
fld
mov
lahf
in
sub
cmps
lds
das
jnp
fistp
or
xchg
(bad)
cld
jb
in
dec
sub
int
mov
pusha
cmps
fld
sub
sbb
push
inc
ret
xlat
jns
test
or
sbb
push
mov
xor
ror
cs
add
inc
xor
lods
pusha
mov
iret
dec
mov
lahf
repz
mov
sub
(bad)
jp
dec
mov
fcmovnu
out
mov
cmp
push
mov
cmc
imul
sub
stos
lods
add
sub
inc
xchg
ror
mov
cmp
add
loopne
inc
dec
sti
push
repnz
or
nop
jmp
addr16
std
loopne
sub
and
push
out
adc
xor
or
mov
bound
pop
xchg
push
ror
sahf
rcl
jae
test
xlat
scas
cmp
jb
out
and
rcr
sbb
pop
jmp
ret
(bad)
sub
mov
push
ja
(bad)
sub
pop
outs
clc
sbb
mov
loope
push
dec
ja
push
or
icebp
neg
and
push
sbb
inc
mov
mov
or
adc
sbb
or
adc
xchg
pop
inc
shr
adc
(bad)
test
inc
mov
push
cs
das
test
xchg
sbb
lahf
loope
xor
retf
push
fisttp
ja
pop
xchg
pushf
repz
cdq
push
mov
push
xor
aad
add
iret
sar
push
fst
mov
(bad)
out
emms
mov
push
cmp
mov
sub
mov
mov
jns
sub
xchg
pop
dec
or
pop
mov
dec
pop
or
ja
into
mov
fcmovbe
xchg
les
sbb
mov
adc
lock
jmp
adc
sar
in
stc
rol
ror
mov
mov
push
es
add
push
rol
(bad)
xlat
fdiv
mov
jmp
inc
scas
(bad)
mov
add
out
sbb
out
sbb
mov
push
sub
addr16
sbb
dec
mov
jae
stos
push
pop
stos
pop
sysret
push
sahf
aas
jl
outs
cmc
cmp
fmul
rcr
mov
push
mov
outs
movs
int
push
(bad)
loope
push
jb
mov
dec
jno
in
jae
test
adc
adc
adc
inc
xchg
xor
ds
xor
xor
push
in
imul
sub
pop
xchg
cmp
sub
cdq
jns
mov
hlt
jl
shl
pop
imul
loope
dec
push
repz
sub
xchg
jo
jecxz
in
pop
nop
add
scas
movs
adc
jae
or
cli
jmp
rcr
xor
xor
daa
xor
push
push
fild
aam
out
jmp
jge
xchg
shl
mov
add
repz
mov
lea
cmp
xchg
das
and
adc
into
mov
adc
cli
clc
psubd
mov
jo
xchg
cmp
retf
les
adc
xor
jg
retf
out
inc
je
sub
icebp
lea
jge
and
popf
iret
dec
and
mov
stos
mov
mov
jae
jo
pop
outs
jle
jnp
add
(bad)
mov
xchg
mov
or
scas
jmp
(bad)
fdivr
adc
aad
jbe
mov
or
nop
sti
xchg
leave
jmp
xor
arpl
in
sbb
push
nop
fstp
lods
adc
push
sub
mov
dec
pop
gs
test
xchg
jns
les
and
cmp
jge
movs
pusha
adc
adc
pop
push
(bad)
cmps
rep
rol
push
push
sub
test
int
scas
std
and
stos
jle
mov
lods
aam
bound
or
mov
ja
imul
test
ins
sbb
mov
push
or
fs
dec
cmp
jmp
rep
cmp
arpl
pop
cmps
stc
ss
nop
jns
and
cs
add
mov
pop
jl
in
stc
xor
jbe
ins
xchg
add
and
(bad)
pop
nop
outs
and
xchg
and
add
jg
aam
cmp
ret
int
es
es
mul
sub
cwde
pop
mov
sbb
std
popf
pop
xor
pop
rcr
mov
retf
jnp
mov
or
fsub
sub
addr16
lods
xor
pop
ins
outs
add
ret
dec
dec
jmp
lahf
cli
lea
xchg
lods
cmp
mov
push
ficomp
fldenv
loope
popf
mov
es
jecxz
(bad)
push
lock
jge
pop
aas
inc
retf
pop
jbe
cs
jmp
mov
je
lock
test
test
mov
sbb
rcr
mov
sub
sbb
sahf
(bad)
adc
mov
pushf
dec
add
hlt
and
bound
repnz
inc
ret
jle
iret
ret
mov
cmp
loope
push
jp
sub
pop
jo
lds
xlat
outs
(bad)
xlat
and
lds
les
push
daa
movs
push
mov
mov
mov
and
iret
xchg
push
bound
cdq
fldl2t
retf
xchg
pop
jne
cmp
aas
cmp
inc
loope
adc
lock
jns
sub
jmp
xor
push
fwait
cdq
jg
jno
dec
adc
xor
mov
ret
push
pop
(bad)
add
xchg
mov
push
das
data16
xor
pop
pop
in
dec
cdq
rcr
mov
clc
cdq
aaa
push
and
jp
pop
add
loope
sti
mov
(bad)
stc
js
push
xchg
jae
inc
ds
cmc
add
ss
rol
xor
adc
adc
inc
lahf
dec
add
ins
adc
mov
inc
inc
inc
inc
jge
add
enter
jmp
rol
sahf
fwait
adc
sub
cmps
(bad)
rol
daa
in
lock
dec
add
add
mov
inc
out
dec
add
pusha
xor
popf
cli
dec
pop
or
push
dec
mov
mov
and
add
dec
int3
sub
in
and
dec
test
in
test
cmp
inc
cmp
mov
adc
sbb
mov
adc
mov
mov
fmul
inc
mov
popf
movs
add
mov
mov
sar
jae
(bad)
adc
(bad)
aam
retf
mov
scas
repnz
pop
or
dec
dec
inc
jae
lods
or
cmp
or
mov
push
call
(bad)
enter
lods
jno
jl
jge
dec
push
gs
jmp
andnps
test
push
mov
movs
je
dec
xor
test
cs
inc
lahf
ret
xor
int3
outs
inc
mov
inc
mov
xor
mov
inc
xchg
push
test
adc
mov
push
dec
mov
int3
sar
aad
xchg
leave
fdivr
and
jmp
xchg
jp
cs
mov
sub
leave
mov
jno
xchg
inc
out
ror
pop
rcr
cmps
push
or
or
or
adc
ror
jbe
jecxz
retf
sub
cmp
es
retf
inc
push
cmc
loope
push
xchg
pop
xor
daa
xchg
lock
jbe
push
cs
inc
push
mov
adc
(bad)
jmp
jmp
sbb
sub
iret
mov
fld
add
inc
adc
dec
scas
dec
rcr
mov
add
aad
push
sbb
sbb
adc
rcr
mov
push
stos
inc
xor
jge
inc
mov
adc
mov
push
into
sbb
cwde
movs
jns
ins
add
pop
fucomip
(bad)
sahf
lods
imul
retf
inc
dec
and
adc
shl
add
lods
adc
dec
imul
imul
in
inc
cmps
out
arpl
add
test
xor
mov
fsubrp
and
sub
popf
xchg
adc
iret
jecxz
adc
push
cmc
test
mov
xchg
rol
sub
jge
cmp
fbld
in
push
add
stos
out
aas
mov
test
jecxz
in
inc
inc
clc
adc
or
or
jbe
push
xor
mov
lahf
aam
xor
retfw
add
fs
aaa
movs
stos
fucompp
outs
js
(bad)
bound
aaa
les
pop
cmp
test
xchg
cmp
cli
xchg
sbb
jnp
push
js
cwde
fld
clc
(bad)
sbb
movs
jno
fstp
dec
xchg
pop
stos
pop
test
fdivr
cwde
xchg
stos
dec
and
or
arpl
mov
stc
fcomip
loop
ja
mov
aad
jecxz
aad
enter
imul
fwait
das
add
push
xchg
sahf
mov
dec
outs
into
call
add
add
sahf
repz
fscale
pusha
inc
dec
mov
aaa
xor
xchg
cmp
push
and
std
xor
loop
xchg
xor
in
mov
fs
cmp
mov
sti
scas
je
sbb
adc
sbb
cdq
xor
in
mov
(bad)
icebp
mov
ret
aaa
cwde
jae
pop
push
pop
cwde
stos
push
add
inc
sbb
cwde
aaa
cmp
cmp
(bad)
mov
inc
idiv
rcl
xchg
data16
push
inc
enter
repnz
cmp
cmps
out
leave
vfrczss
jbe
mov
push
jae
enter
leave
loop
or
in
out
cs
jmp
pop
sub
push
xlat
mov
imul
mov
mov
mov
push
int
sbb
pusha
cli
std
sbb
movs
pop
xor
xor
(bad)
xor
(bad)
aam
sbb
mov
in
sahf
cmp
imul
inc
es
sub
(bad)
cmps
jo
js
outs
mov
call
test
dec
into
data16
nop
jno
leave
retf
dec
mov
fbld
test
aas
fs
(bad)
int3
jle
mov
mov
sbb
nop
adc
adc
scas
pop
dec
enter
mov
popa
fdivr
cmp
mov
mov
cmp
div
jb
sub
in
adc
je
ror
xchg
test
ins
jmp
bnd
fisttp
mov
rol
xchg
je
(bad)
scas
jmp
pop
cwde
dec
scas
sahf
jg
cdq
pop
repnz
call
lds
popf
fbstp
outs
mov
inc
push
or
sar
pusha
sbb
cmp
inc
lea
cmovb
adc
sti
inc
mov
add
adc
mov
add
sbb
mov
ds
push
lea
movs
adc
mov
xor
ret
loopne
dec
sub
push
and
fstp
fimul
retf
jbe
sbb
fstp
dec
fwait
movs
lea
xchg
(bad)
cmp
adc
push
fdivr
aad
push
mov
sbb
pop
jmp
mov
out
mov
push
inc
mov
fisttp
into
enter
(bad)
std
pusha
js
cmp
push
sbb
pop
icebp
adc
(bad)
and
xor
add
out
bswap
lods
movs
jb
inc
jmp
dec
scas
dec
or
into
movs
hlt
or
add
jl
js
stos
mov
popf
push
ss
repz
in
sub
pop
push
xor
pop
sbb
lock
pop
loop
pop
lahf
out
enter
push
repnz
nop
sub
stos
pop
cmp
int
pop
dec
pop
scas
(bad)
clc
in
mov
adc
test
add
iret
xchg
icebp
cmp
and
pushf
adc
dec
stos
fisub
cmp
inc
push
pop
sub
xor
scas
mov
popf
jbe
jl
pop
shl
jne
xchg
push
rcr
sar
jb
or
adc
jge
xor
mov
mov
cld
push
stos
out
icebp
(bad)
call
(bad)
stc
adc
dec
retf
out
jne
mov
jge
push
cwde
dec
dec
mov
sahf
and
lock
inc
xchg
dec
mov
call
or
adc
sub
pop
int
xchg
stos
mov
frstor
or
not
cmp
mov
enter
jno
push
repnz
out
aam
fwait
int3
cld
in
sbb
fstp
pop
push
jbe
mov
mov
test
gs
mov
lock
xchg
mov
pop
out
xchg
retf
dec
pop
sahf
sbb
cmp
xlat
jno
xor
jae
lods
and
retf
jae
fwait
xlat
push
pop
mov
and
(bad)
adc
(bad)
push
pusha
aam
cld
sub
sub
test
jne
mov
sbb
xchg
lock
mov
data16
lea
repz
pop
dec
lock
jg
sub
cmp
xchg
pop
cmp
shr
pop
enter
sbb
test
out
sbb
ins
push
je
sbb
xor
mov
xor
loope
scas
add
js
repnz
scas
es
je
ret
inc
stos
sbb
jmp
int3
pusha
mov
les
mov
(bad)
inc
push
adc
mov
iret
jecxz
pushf
jb
fild
fild
dec
ja
mov
lds
add
loop
mov
inc
rcl
mov
inc
fist
add
sahf
stc
pop
out
fs
lods
fmul
push
mov
sub
mov
and
cmp
xchg
jle
dec
lods
mov
out
fisubr
test
push
rcr
fcomp
adc
in
arpl
or
and
pop
shr
fld
out
arpl
daa
adc
ret
xlat
jmp
pop
loop
jnp
sub
retf
and
ret
sub
es
fs
mov
xchg
pop
push
scas
nop
imul
push
cld
(bad)
call
int
mov
xchg
imul
ss
les
push
xchg
ret
and
jo
jle
xchg
mov
mov
lods
aam
cmp
std
test
cmps
imul
ja
scas
lea
push
jmp
push
pop
adc
pop
sub
push
sub
movs
das
pop
arpl
xchg
xor
imul
inc
inc
push
and
(bad)
outs
push
mov
mov
int
adc
mov
push
ds
pop
loopne
dec
neg
cmp
jmp
add
aaa
jl
(bad)
or
sub
xchg
inc
lods
mov
(bad)
movs
fst
aas
into
push
ja
mov
mov
nop
mov
xor
add
push
out
ins
pop
sbb
push
push
(bad)
icebp
imul
popf
cld
jae
inc
inc
loope
ja
xlat
inc
(bad)
lds
adc
adc
and
dec
dec
test
push
and
push
mov
adc
push
add
div
mov
sub
fcom
fcom
(bad)
add
xchg
je
push
mov
ja
jae
and
or
dec
out
mov
ins
add
icebp
pop
sub
mov
adc
adc
shr
jecxz
rcl
mov
sbb
out
mov
mov
or
xchg
loope
dec
fcmovu
shr
push
mov
dec
hlt
gs
cmp
pop
mov
add
in
lds
cli
push
leave
shl
sbb
jg
xor
cdq
pusha
push
loope
xrelease
inc
jmp
ret
pushf
imul
jmp
and
lods
test
mov
repnz
mov
lahf
pop
ins
dec
lock
sbb
pop
sub
out
mov
cmp
vpmaddwd
pop
sbb
jecxz
cmp
stos
sub
inc
das
cdq
pop
test
int
and
pop
jnp
push
inc
mov
xor
(bad)
jmp
or
fadd
jmp
add
xchg
ficomp
rol
xlat
sub
xchg
mov
test
test
or
fucom
fnstsw
repz
ds
pop
jbe
int
push
cmc
sahf
pusha
ret
and
sub
sbb
or
xor
les
xchg
scas
xchg
adc
xor
dec
shl
(bad)
push
push
sub
(bad)
imul
mov
test
jp
in
popa
or
je
int3
xchg
lahf
sub
and
out
pushf
xor
pop
adc
shl
or
sbb
cdq
sub
add
xchg
into
xor
arpl
mov
setno
push
dec
jne
fwait
jb
dec
outs
clc
rcr
shl
scas
xchg
cmp
xchg
lods
loop
in
addr16
and
js
dec
cmps
sbb
and
pop
push
fs
cmps
repz
push
sub
mov
dec
add
jbe
jl
lds
jnp
das
or
rol
arpl
inc
arpl
stos
mov
push
retf
es
das
rcl
jg
cwde
in
pop
ins
scas
jecxz
mov
mov
mov
aaa
mov
pop
test
add
rcl
hlt
fsubr
ror
mov
scas
jns
or
fnstsw
mov
jecxz
fidiv
pushf
add
int
jmp
jp
pop
test
cmp
or
test
mov
sub
sub
sub
push
idiv
ja
sub
xlat
mov
imul
jo
outs
pop
push
daa
or
or
je
(bad)
push
push
pushf
xor
or
fmul
or
iret
add
cmp
push
jo
inc
fldenv
xchg
add
js
fs
pop
and
xor
and
fdivr
shr
mov
rdtsc
dec
pop
jae
add
adc
cwde
sub
mov
jnp
mov
scas
fwait
sar
jae
pushf
pop
fucomip
shr
push
mov
aad
cdq
jb
push
push
(bad)
cli
dec
into
enter
pop
es
or
(bad)
es
mov
push
stc
shl
test
rcr
add
jmp
xchg
pop
shl
fcomp
sbb
jo
inc
fidivr
aam
clc
aad
test
shl
xchg
or
mov
cmps
pop
int
jb
and
push
lds
test
sub
jmp
in
les
sbb
in
fld
jno
rol
sbb
retf
add
mov
test
cmc
or
push
pop
(bad)
mov
add
or
xchg
add
repz
add
rol
cmp
and
ficom
outs
imul
push
or
jg
loope
cmps
ret
ins
mov
mov
ja
mov
xlat
ds
adc
scas
mov
push
jo
stc
lea
pop
(bad)
cmp
scas
mov
cld
cwde
retf
push
inc
mov
(bad)
mov
ins
cli
sahf
movs
aas
jbe
jae
lea
inc
mov
jb
sub
jae
dec
adc
inc
loope
mov
test
xchg
push
into
push
fdiv
fwait
dec
mov
cmps
and
js
add
add
ins
mov
mov
sar
pushf
xchg
sbb
sub
xchg
stos
movs
or
fnstenv
ds
pop
cmp
adc
lock
sti
mov
or
dec
and
jge
les
leave
add
lock
adc
adc
cmp
cli
adc
jnp
xchg
movs
(bad)
js
mov
dec
push
sub
adc
push
push
sub
inc
xor
out
and
push
in
xor
mov
add
pop
cmp
push
or
sbb
dec
out
or
pop
lock
sar
fwait
and
and
or
push
jmp
cs
test
or
enter
cmc
iret
adc
jmp
rol
lea
and
rol
outs
pop
mov
add
jp
sub
mov
inc
movs
and
and
dec
outs
ds
pop
fistp
mov
cwde
dec
ror
pop
test
and
mov
add
sub
movs
inc
addr16
mov
scas
and
cmp
stos
inc
clc
mov
into
retf
retf
mov
xchg
xor
mov
scas
cmps
sub
add
bound
mov
sahf
test
pop
loop
bnd
jmp
push
sti
cmp
ret
and
adc
jne
aaa
ss
pop
lods
jno
push
sti
xchg
aas
aam
push
add
leave
or
xor
xchg
dec
adc
add
pop
loope
in
test
out
outs
push
addr16
adc
cmp
aam
loope
add
pop
or
(bad)
arpl
push
stos
inc
out
lahf
lahf
nop
enter
mov
xor
xor
arpl
aad
xchg
jns
test
ins
and
sub
mov
xchg
(bad)
sahf
nop
or
jmp
dec
mov
gs
dec
mov
scas
push
cli
das
pop
jb
and
pop
out
aas
call
sar
mov
sbb
call
lea
outs
imul
ins
xor
aaa
out
inc
sti
push
jp
mov
ret
test
add
adc
sbb
mov
jmp
mov
shl
bound
fst
lods
ja
mov
out
xchg
(bad)
pop
or
aad
jae
sbb
push
cli
cmp
cwde
xchg
scas
mov
mov
nop
pop
fcomp
jmp
sbb
imul
leave
ficom
js
jae
in
mov
mov
fs
test
inc
retf
push
mov
and
jne
movs
pusha
sub
dec
mov
and
push
mov
scas
pop
add
fs
pop
jge
aad
cmc
add
sbb
repnz
mov
(bad)
fisub
push
xchg
cmp
mov
cmp
mov
and
sub
sub
je
hlt
in
test
jg
xchg
out
retf
xor
pop
dec
ja
add
mov
and
retf
mov
mov
addr16
push
gs
lods
sub
out
sbb
vunpcklps
in
stc
dec
push
imul
pushf
mov
stc
retf
add
mov
add
xchg
cmp
(bad)
scas
xor
mov
aas
cmp
sbb
sub
(bad)
cmp
pop
out
and
dec
xchg
arpl
or
jmp
test
pop
mov
clc
loope
jo
cwde
lods
retf
cmp
push
xor
nop
mov
test
lods
out
jns
icebp
pop
xchg
push
repnz
mov
test
cmp
mov
add
in
(bad)
pushf
add
xor
pop
cmp
test
mov
imul
ds
inc
movs
imul
mov
add
test
or
mov
cmps
ins
(bad)
mov
jle
cmps
sti
test
xchg
sub
push
pop
data16
mov
les
ds
popa
push
push
and
mov
or
mov
ds
cld
sbb
sti
dec
popf
jno
add
mov
retf
stos
xchg
pop
pop
jb
push
ins
mov
pop
mov
sub
mov
add
cmp
mov
push
mov
je
jns
cmp
mov
daa
jmp
pop
call
sbb
or
pop
icebp
rol
mov
xor
out
inc
xchg
lahf
mov
(bad)
aas
jl
cmp
adc
je
ret
xchg
rcl
sbb
add
(bad)
jmp
pop
(bad)
sahf
fstp
push
aas
fnsave
or
leave
cdq
out
xchg
xchg
icebp
mov
jecxz
fwait
ja
push
adc
les
adc
push
push
pop
iret
enter
loopne
xor
je
inc
sbb
dec
adc
add
push
mov
fs
xchg
add
mov
sar
pop
pop
int
aaa
shl
mov
ret
sar
sti
sub
dec
dec
pushf
sahf
cwde
and
xor
push
dec
pop
outs
xor
call
into
pop
or
in
jle
lea
movs
aad
stos
inc
stos
sbb
ins
lds
mov
mov
mov
arpl
push
shl
pusha
jmp
lds
jbe
mov
mov
lods
aas
dec
sti
jl
das
test
inc
jecxz
lahf
dec
inc
stc
arpl
inc
outs
fmul
retf
cs
retf
dec
mov
pop
mov
mov
push
fwait
jo
fwait
push
or
push
lock
adc
pop
call
cmps
and
mov
int3
sub
cmp
iret
sbb
mov
addr16
sub
mov
mov
movs
sahf
test
and
ins
pop
stos
retf
nop
retf
je
out
lea
pop
and
(bad)
pushf
lock
(bad)
fnstenv
mov
cwde
icebp
ins
aad
outs
test
movs
or
cmc
add
jnp
in
clc
loop
jle
loop
in
pop
int3
xchg
in
xchg
out
xchg
jle
or
and
or
enter
(bad)
lea
cmp
and
xchg
mov
fsubr
out
gs
aam
mov
cmp
or
lahf
add
mov
ror
test
mov
mov
xchg
push
aas
adc
call
push
cmp
inc
out
add
and
mov
xor
mov
pop
sbb
and
lock
kaddb
mov
add
and
(bad)
imul
jb
fmul
dec
and
iret
add
shl
repz
stos
scas
xor
outs
cdq
adc
shl
sub
rcl
mov
fwait
mov
(bad)
ficomp
or
xor
pusha
sbb
ins
or
mov
fwait
xchg
or
add
mov
adc
push
adc
push
hlt
sub
mov
out
sbb
sbb
nop
jecxz
mov
xchg
loopne
adc
adc
cmp
and
push
or
test
jae
stos
js
dec
fsub
je
cs
xchg
push
jns
mov
dec
outs
adc
sbb
leave
test
ret
ins
les
and
jnp
stc
ins
les
cmps
mov
xchg
jecxz
(bad)
dec
sahf
cmps
cmc
push
inc
xchg
enter
cwde
call
aaa
cmp
gs
jnp
push
sbb
nop
int3
jno
push
shl
mov
js
mov
xrelease
pop
inc
in
shl
sbb
mov
push
fdiv
lahf
or
mov
je
outs
lea
xchg
adc
or
(bad)
loop
cmp
bnd
xor
daa
jb
add
xor
sbb
push
sbb
mov
addr16
mov
xchg
xor
push
loope
mov
inc
inc
popf
push
ins
les
popf
mov
out
pop
es
add
gs
mov
mov
pop
push
or
jge
or
mov
popa
jmp
jp
adc
aas
or
repnz
sbb
mov
cmp
inc
stos
bound
ss
jbe
je
(bad)
retf
jno
jae
sbb
shl
mov
jmp
push
cli
dec
sub
xlat
push
fild
aad
inc
pop
mov
adc
retf
pop
aad
adc
jae
int3
sbb
sahf
sub
jno
and
jp
mov
out
outs
ret
sub
mov
test
out
cli
fmul
or
sbb
adc
scas
and
push
es
jp
mov
cmp
scas
cmp
stos
bound
and
lods
mov
fistp
push
add
jae
xor
scas
add
pop
cld
imul
and
stc
inc
(bad)
fs
mov
xchg
inc
jmp
sbb
or
jo
shl
cdq
out
mov
xchg
cs
push
in
sbb
mul
retf
inc
mov
inc
fcom
add
xor
jmp
push
mov
je
push
lods
scas
ds
xchg
mov
cwde
xchg
movs
pop
stos
pop
adc
jnp
stos
ja
add
sahf
ds
push
and
push
js
and
mov
in
aad
mov
cmp
push
xor
imul
int
jnp
stc
xchg
and
fst
xchg
ret
or
fnstcw
dec
adc
add
push
dec
sub
out
or
push
cs
push
call
mov
add
out
je
mov
fstp
fisub
in
loopne
outs
xor
int
test
cdq
dec
cmps
pushf
retf
dec
inc
enter
mov
ret
add
retf
mul
(bad)
out
mov
repnz
imul
push
out
xchg
xor
rol
pop
imul
add
mov
imul
push
and
push
dec
test
imul
mov
add
call
lds
pop
pusha
pusha
dec
and
push
inc
jno
cmp
(bad)
mov
js
std
jp
and
push
aaa
adc
dec
push
xor
je
clc
sbb
es
in
mov
mov
inc
ret
cmp
mov
mov
test
ins
pop
sbb
dec
popa
repnz
sub
xchg
pop
and
pop
dec
cmp
rcl
xchg
push
and
xchg
cmp
sub
sbb
xchg
jmp
dec
in
xlat
lods
mov
push
ret
jb
loop
push
adc
sar
aaa
mov
stc
aam
fild
hlt
ret
push
int3
aas
push
aas
mov
stos
aas
sbb
sub
bound
jb
lods
jo
cwde
repz
or
dec
add
push
jmp
cwde
pop
fdiv
cld
call
push
adc
dec
mov
(bad)
add
scas
mov
cwde
xor
add
test
add
out
sar
je
(bad)
fmul
int
xchg
loopne
push
stos
jno
dec
xor
les
jno
jg
mov
pusha
mov
inc
sub
pop
sbb
fwait
clc
sub
adc
jmp
imul
jno
jl
xchg
push
(bad)
inc
call
jg
mov
outs
cdq
jle
cmp
sub
loop
cwde
movs
es
or
stos
mov
imul
out
shl
das
jno
lods
pop
mov
mov
inc
int3
sbb
push
iret
ins
add
adc
mov
inc
inc
ja
jne
(bad)
out
int
iret
rcr
sbb
call
jns
jns
out
sbb
or
cmpxchg
aad
push
pusha
dec
int
repnz
or
sahf
gs
dec
xchg
jns
mov
ja
(bad)
sar
dec
ins
sub
push
lahf
cmp
out
or
loopne
ins
sbb
nop
jo
imul
test
jl
fs
clc
and
or
call
(bad)
ins
int3
scas
pop
inc
push
pop
inc
sbb
int3
and
out
mov
xor
fs
sbb
mov
or
ss
lahf
mov
std
imul
push
ins
cmc
sti
mov
or
outs
mov
cmp
out
xlat
jle
shr
int3
mov
pop
stc
fs
retf
cmps
push
pop
loopne
test
pop
ss
push
and
mov
jbe
cmp
xchg
xchg
jo
xchg
cli
pusha
xchg
into
in
stc
ret
mov
add
jge
cdq
leave
leave
and
cmc
es
cmp
movs
aad
adc
cs
and
retf
sub
mov
popf
pop
xor
lea
dec
jge
pop
shr
or
fwait
out
fidivr
inc
lahf
xchg
dec
test
add
pusha
adc
xchg
push
push
pop
mov
pop
push
and
ret
sbb
or
cmps
hlt
(bad)
jmp
popa
and
push
sbb
dec
pop
mov
imul
pusha
outs
mov
or
xchg
int3
sahf
sub
in
outs
and
mov
mov
or
(bad)
mov
sti
mov
jge
test
and
push
lea
inc
das
dec
mov
cdq
aad
pushw
push
mov
test
xchg
imul
ja
ror
push
ins
imul
pop
ud0
inc
addr16
push
sub
jge
sbb
and
xchg
(bad)
push
xchg
xchg
mov
mov
lea
sar
jl
arpl
jno
cld
lea
ds
popf
jmp
pop
pop
mov
and
retf
jmp
mov
call
into
mov
iret
mov
outs
jnp
jecxz
or
dec
add
xchg
jns
repnz
inc
movs
outs
aaa
fucomip
dec
xchg
(bad)
inc
add
xchg
mov
inc
cmp
xchg
push
pop
fdivr
mov
xchg
lds
lahf
cld
movs
loopne
mov
stos
mov
les
int3
jmp
jge
xlat
out
daa
xor
pop
adc
adc
push
jns
pop
mov
lods
in
ret
(bad)
push
inc
lock
cmp
push
jns
dec
sub
gs
es
jno
pop
add
pusha
scas
in
pop
pushf
mov
std
add
cmp
inc
mov
out
sar
add
xchg
(bad)
fs
in
pop
add
nop
inc
inc
push
push
push
xchg
mov
out
xor
out
mov
sbb
xchg
aam
out
add
gs
xor
mov
outs
fistp
dec
mov
(bad)
out
sub
das
mov
inc
lss
jl
adc
jmp
int
mov
std
jecxz
pop
stc
int3
push
sbb
xchg
push
jge
dec
cli
mov
xor
cwde
aas
cmp
jp
(bad)
xchg
data16
mov
rcl
dec
cmp
(bad)
ss
jbe
cdq
cmp
pop
shl
xor
sbb
add
dec
lds
mov
cmc
pop
sub
inc
xchg
push
inc
sub
xor
movnti
inc
pop
outs
inc
pop
mov
push
ja
test
push
cmp
add
fwait
daa
mov
daa
popa
inc
fdiv
and
hlt
pop
xchg
dec
(bad)
dec
fimul
call
sbb
sub
dec
inc
mov
repnz
xor
outs
ss
pushf
and
xchg
jecxz
popf
scas
sub
bound
add
jns
ins
fwait
repnz
int3
inc
in
retf
sbb
shl
aam
or
popf
mov
inc
cvtdq2ps
xor
(bad)
sysenter
lea
push
fsub
call
imul
cdq
cmps
or
xchg
cmp
push
(bad)
rcr
jmp
dec
xchg
fs
sbb
mov
jle
popf
xor
sbb
lods
push
lods
dec
pop
push
scas
jp
sbb
sbb
fnstcw
sti
sbb
scas
mov
shl
xchg
jmp
cmp
inc
jmp
rcr
dec
ins
add
pusha
movs
mov
gs
sbb
xchg
gs
xchg
ja
adc
add
dec
aad
cmp
fild
mov
cli
mov
arpl
shr
imul
(bad)
call
cmps
lahf
aas
jmp
cmp
pop
stos
out
sbb
je
icebp
mov
test
mov
push
mov
jbe
lahf
scas
cmc
jle
adc
mov
icebp
inc
ror
sar
cdq
sub
imul
repnz
cmp
mov
in
pop
retf
popa
shl
es
cwde
shl
mov
lock
jmp
fbld
out
pop
cmps
push
scas
mov
in
or
jne
in
mov
sub
test
xor
in
or
aam
jmp
lock
das
out
push
xchg
xchg
jbe
push
jmp
sub
fsub
sbb
sbb
dec
ror
push
outs
jp
push
mov
push
lods
sbb
mov
ss
(bad)
jb
(bad)
lods
in
es
sub
pushf
mov
stos
sub
mov
frstor
mov
push
mov
stos
pop
bound
push
cmps
scas
cld
idiv
jle
repz
xor
adc
mov
inc
loop
cmp
push
pop
adc
(bad)
dec
and
arpl
mov
or
test
jmp
sti
jbe
mov
mov
(bad)
in
mov
mov
sub
js
sub
movs
movs
mov
imul
xor
sahf
add
addr16
and
in
es
and
hlt
fwait
and
cmps
test
inc
cmps
mov
xchg
pushf
jmp
xor
ret
scas
mov
inc
xor
cmp
sbb
sbb
push
dec
inc
mov
mov
aaa
inc
push
pop
adc
adc
jmp
ds
fmul
push
outs
mov
inc
push
jmp
cmp
hlt
inc
push
jl
push
imul
mov
or
pop
shr
adc
and
jne
sub
mov
fldcw
pop
call
ins
aas
repz
cwde
enter
inc
adc
and
push
push
ins
xchg
frstor
(bad)
iret
iret
xchg
(bad)
jbe
imul
or
push
add
jbe
fstp
push
jb
cmp
arpl
mov
rol
pop
ret
test
mov
(bad)
jl
pusha
add
(bad)
push
add
imul
mov
jns
pop
xor
retf
mov
in
(bad)
(bad)
scas
pop
in
jge
les
push
dec
pop
test
mov
test
out
shl
repnz
push
pusha
adc
xchg
xchg
out
xchg
ret
or
aas
xchg
imul
push
and
lods
jne
lock
arpl
mov
ud0
stos
aad
mov
int3
iret
rcr
or
jb
sub
xor
movs
and
out
dec
lock
push
ficom
std
adc
cmp
xchg
dec
out
(bad)
rcr
scas
jl
xchg
sub
stos
sbb
pshufw
add
fild
xor
loopne
sbb
iret
adc
in
stos
pop
pop
mov
gs
fild
add
dec
or
cmp
push
sti
dec
jb
jmp
sub
mov
fbstp
jne
mov
fwait
cdq
jp
sbb
and
cmp
aam
enter
call
stos
dec
cli
sub
xchg
pushf
ja
xor
lds
push
inc
cmp
push
mov
daa
jo
outs
out
mov
js
push
shr
xchg
push
movs
jne
dec
push
pop
test
out
lds
repz
push
pop
repnz
popa
in
jge
out
xchg
mov
add
mov
xor
pop
push
dec
bound
scas
add
pop
add
xor
ins
out
into
mov
add
push
mov
add
ret
data16
js
das
xor
push
pop
out
outs
or
push
leave
lahf
inc
mov
clc
pop
out
popf
mov
mov
inc
mov
dec
test
rcr
mov
mov
sbb
xor
cmp
or
dec
outs
das
jae
mov
clc
mov
out
add
cmp
ret
cld
loope
aam
js
pop
loope
pop
sub
mov
xchg
data16
sub
(bad)
in
daa
popf
or
and
xlat
jo
mov
pop
mov
test
jmp
idiv
ja
and
mov
jb
xor
cwde
es
mov
mov
sub
push
movs
jb
ins
push
ins
adc
fdivr
mov
shl
ja
ins
iret
mov
xchg
jo
jmp
and
add
inc
or
pop
add
movs
pop
int
in
cmp
and
sahf
js
lahf
mov
fstp
sbb
push
add
loopne
popa
cmp
(bad)
mov
push
xchg
rol
dec
xchg
mov
xchg
and
rcr
or
dec
enter
sbb
inc
mov
fcmove
push
sub
xor
test
push
iret
cmp
test
xor
mov
push
fsubr
mov
adc
mov
shl
xchg
pop
dec
fbld
push
jns
mov
cmp
fcmovnbe
xlat
and
or
pop
jbe
or
aaa
stos
push
pop
cmp
stc
and
retf
cmp
inc
mov
iret
dec
or
push
sbb
sub
and
cmp
cmp
mov
popa
cmp
(bad)
push
pop
sti
imul
jle
(bad)
dec
shl
fist
rol
nop
(bad)
jns
repz
outs
and
push
xor
rol
pop
bound
adc
mov
inc
jp
call
xchg
mov
pop
and
cmp
in
out
jl
cmps
dec
cmp
inc
xchg
mov
fidivr
adc
pop
pop
das
add
aaa
out
repz
mov
push
adc
adc
sbb
outs
repz
popf
mov
call
add
cld
mov
mov
xchg
inc
shl
call
or
mov
push
push
jo
ins
sbb
dec
rcr
jmp
movs
mov
add
inc
mov
movs
sbb
sub
js
std
cmp
cli
cs
or
and
xor
cwde
add
mov
pop
inc
loopne
jmp
jbe
jmp
mov
mov
in
enter
pop
mov
ds
iret
xor
pop
and
repz
scas
fld
mov
adc
ret
dec
leave
outs
idiv
fyl2x
das
fisubr
inc
dec
shl
push
es
xchg
push
shl
loopne
add
les
push
adc
cs
xor
std
int
sub
mov
cmp
das
addr16
test
xchg
or
rcr
aas
retf
jecxz
es
in
aaa
add
xor
xor
sbb
push
sbb
arpl
daa
cs
mov
es
into
mov
cs
nop
(bad)
enter
or
scas
retf
inc
loope
retf
cmp
sub
mov
mov
je
fist
sub
rcl
test
clc
adc
daa
mov
add
outs
fld
in
xlat
and
mov
adc
outs
mov
pop
imul
mov
jmp
mov
push
int3
pop
mov
pop
jb
mov
gs
lock
adc
cdq
in
dec
inc
nop
bound
jbe
mov
jae
test
and
sar
repz
mov
int
or
push
cld
xor
jle
fwait
add
test
out
(bad)
mov
jb
xchg
sar
and
adc
lods
call
fcmovnbe
addr16
dec
rcl
daa
repnz
sti
cmps
pop
and
push
or
and
jb
aad
int
fcom
sti
xchg
push
popa
lea
mov
or
mov
xchg
fs
dec
les
cmps
mov
cmc
pop
dec
push
cmps
add
data16
sub
ins
loopne
push
push
cmps
sbb
pop
mov
add
stos
lock
cs
lock
sar
ja
js
imul
cmp
dec
(bad)
cmp
imul
out
mov
jnp
or
mov
sahf
gs
(bad)
call
movs
xlat
push
push
xchg
cmp
gs
shl
les
dec
in
int
lock
jge
test
fs
sbb
enter
inc
mov
pop
outs
xchg
sub
or
mul
mov
cwde
xchg
mov
jns
cli
scas
iret
out
add
mov
and
cmp
pop
dec
stc
dec
scas
das
jb
cdq
pop
mov
or
je
pop
std
pop
(bad)
not
xchg
(bad)
mov
fwait
int
jl
jae
mov
and
push
mov
mov
push
stos
out
sbb
and
xchg
inc
jno
aad
shl
fwait
push
or
mov
jmp
cmps
xchg
sub
mov
mov
in
fadd
shr
pop
shl
jae
imul
loop
ror
adc
lods
mov
or
mov
adc
adc
adc
scas
loop
sbb
les
mov
dec
jmp
int
loope
data16
push
dec
cmp
(bad)
pop
cli
outs
or
dec
inc
mov
sub
jecxz
mov
sbb
inc
push
push
pusha
retf
lods
dec
aad
sbb
mov
bound
and
push
add
repz
or
popa
pop
cdq
movs
std
fisub
jnp
dec
retf
ins
sbb
test
mov
pop
mov
jns
mov
iret
inc
repnz
repz
imul
mov
mov
dec
fidivr
adc
(bad)
inc
xlat
(bad)
mov
ds
out
test
pop
or
inc
mov
sbb
cmp
cdq
fnstenv
ret
mov
sub
push
jo
sar
into
mov
xor
adc
cli
stc
sbb
add
daa
ret
sar
icebp
in
push
movs
(bad)
(bad)
rcr
push
mov
popf
rcl
das
adc
push
icebp
cmps
bound
push
xchg
ja
jl
ret
mov
scas
mov
repz
jg
js
push
cmp
pop
push
ror
pop
xchg
scas
in
xor
add
xor
movs
test
(bad)
push
pop
movs
je
mov
jmp
xchg
addr16
jno
outs
push
xchg
push
dec
mov
jecxz
dec
hlt
dec
loopne
adc
call
lahf
int3
pop
fiadd
sub
sbb
in
jb
mov
cmp
jg
fimul
fst
add
loope
loop
jg
fidiv
test
xor
mov
mov
inc
jmp
mov
scas
int
out
unpckhps
enter
xor
in
bound
jecxz
(bad)
fdiv
in
or
cmps
pop
push
sbb
push
push
test
dec
jecxz
fxch
pop
add
fwait
out
adc
aam
add
xor
jge
xor
pop
mov
cmp
loop
ret
xor
dec
outs
sub
sub
mul
imul
iret
push
test
addr16
xlat
cmps
in
jmp
push
sbb
stos
or
jp
ja
xchg
sbb
pusha
js
jp
test
sub
cmps
popa
mov
xor
adc
sub
mov
scas
jl
dec
push
movs
outs
or
rcr
daa
mov
push
icebp
inc
lock
add
cmps
xchg
leave
cmp
inc
inc
xchg
scas
xchg
cmp
js
or
cmp
into
adc
fs
xchg
dec
or
inc
push
jne
cmp
shr
cs
fldenv
adc
fimul
adc
test
mov
les
inc
sub
sti
dec
adc
je
retf
popa
stos
cmc
inc
loop
mov
jae
and
ds
or
mov
add
mov
push
nop
inc
aam
sub
cmps
add
clc
stos
scas
mov
or
test
stos
fldpi
pusha
mov
adc
repz
mov
add
xor
dec
call
imul
pop
neg
mov
mov
nop
dec
push
je
dec
mov
cli
shl
jle
mov
xor
stc
out
imul
imul
dec
xchg
mov
sbb
mov
loopne
ins
leave
mov
add
ror
stos
cld
popf
fimul
xchg
pop
xchg
push
es
cmp
mul
dec
movs
fldenv
jle
(bad)
imul
sub
inc
in
pop
and
int
int
call
pop
cmp
js
jecxz
pop
out
add
inc
inc
sbb
les
sub
ror
call
daa
pop
mov
fmul
imul
loop
lahf
out
mov
out
dec
push
push
dec
cmps
in
call
mov
movs
pop
xor
xor
sti
sbb
add
xor
jp
mov
inc
xchg
out
cli
inc
cmp
xor
and
pop
imul
dec
mov
cwde
sub
das
aad
xor
push
int
mov
scas
in
popa
cmp
mov
cmp
(bad)
clc
xchg
mov
loopne
fmul
data16
inc
dec
push
xchg
cmp
retf
leave
in
lahf
cmp
dec
aaa
jmp
scas
xor
or
push
scas
jbe
(bad)
sub
data16
xchg
xor
test
inc
dec
jmp
dec
push
gs
add
dec
nop
mov
loope
in
div
mov
mov
(bad)
std
or
dec
xchg
popa
pushf
data16
add
dec
mov
dec
repnz
mov
sub
or
pop
sub
push
jmp
push
inc
jo
enter
mov
in
and
popa
call
and
xchg
(bad)
xor
test
mov
jle
mov
ret
fcomp
movs
sub
jge
mov
or
jmp
dec
sbb
popa
lea
ds
(bad)
leave
add
cs
jl
out
retf
cmps
mov
cmp
pop
sbb
daa
xor
loopne
inc
mov
loope
mov
imul
mov
shr
mov
adc
jl
dec
(bad)
out
inc
aad
loop
loop
xchg
into
shl
mov
xchg
mov
in
and
es
js
xlat
retf
out
push
jo
mov
rcr
lock
fldenv
lahf
adc
jns
fistp
cmp
or
cmps
mov
rol
jmp
dec
mov
sub
inc
sbb
sub
outs
mov
mov
pop
xchg
aam
sub
fnstcw
popf
jmp
std
fild
add
mov
jae
fnstcw
lods
popa
(bad)
leave
iret
pop
test
idiv
int
sar
not
dec
nop
mov
dec
sti
pop
hlt
shl
(bad)
icebp
outs
cmp
push
xor
xor
and
mul
stos
adc
jb
and
scas
xor
imul
(bad)
cs
adc
movs
xchg
mov
mov
sbb
jae
push
arpl
cmp
call
dec
xchg
retf
jo
outs
mov
stos
xchg
jmp
cwde
(bad)
pop
repnz
outs
adc
popa
mov
mov
aas
std
and
xchg
call
mov
xor
sub
aad
or
shr
cmp
call
inc
mov
add
xor
add
ret
lock
repnz
mov
loope
test
scas
ja
mov
xchg
jne
(bad)
inc
dec
dec
xor
mov
aam
pop
push
fstp
iret
dec
push
retf
push
inc
mov
jns
loope
shl
push
fdivr
pop
pop
jmp
scas
adc
add
enter
jge
pop
push
sahf
test
and
xchg
mov
dec
loopne
test
sbb
lahf
stos
add
inc
xor
mov
sub
lds
mov
pop
inc
fcomp
inc
add
inc
xchg
fdivr
jge
add
jnp
sbb
mov
(bad)
sub
enter
lahf
pop
jae
arpl
fdiv
call
in
ins
jmp
int
cli
dec
or
test
xchg
and
cmp
fwait
pop
xor
xor
sub
lock
jbe
and
lods
(bad)
out
xchg
fwait
clc
xor
(bad)
fstp
addr16
lods
outs
dec
test
jecxz
jge
es
xchg
movd
mov
mov
loopne
dec
xlat
mov
imul
inc
adc
xchg
(bad)
push
or
sbb
pop
adc
test
adc
xchg
ins
mov
sub
xchg
scas
jmp
dec
fist
std
imul
jnp
adc
mov
daa
push
adc
sti
xchg
int3
push
xor
jmp
dec
sahf
icebp
fs
jb
or
dec
dec
mov
ins
cmc
sbb
fsub
movs
mov
shl
adc
sbb
pop
mov
movs
cmp
imul
pop
rcr
xchg
mov
stc
jnp
xor
aam
jbe
lds
fcomi
sub
inc
push
jp
jo
xor
imul
fist
mov
test
mov
cli
fnsave
fldenv
xchg
or
in
popa
ja
repz
xlat
and
add
cmp
mov
mov
pop
adc
fcomp
adc
jns
pop
adc
neg
inc
retf
stc
dec
jg
xchg
inc
mov
inc
nop
int
sbb
pop
(bad)
int3
(bad)
movs
sub
push
retf
imul
and
lahf
in
dec
dec
test
sbb
rol
mov
dec
fisttp
and
mov
jbe
inc
pop
enter
bound
xor
xchg
out
shl
cli
sbb
jae
cmp
jmp
popf
mov
retf
cmp
mov
int
push
pop
inc
adc
addr16
mov
xchg
fld
cmp
ret
(bad)
push
cmp
bound
shr
ins
sub
cmps
mov
mov
out
ins
(bad)
lods
mov
sbb
mov
mov
aaa
movs
dec
dec
mov
lock
ret
fucomp
xor
or
push
adc
xlat
xchg
hlt
or
test
or
cmp
loopne
mov
test
cdq
pop
icebp
jmp
test
cmps
ins
and
sti
shl
pop
lock
cmp
cmp
xchg
es
fist
push
lds
(bad)
jmp
or
mov
call
jmp
ret
xchg
icebp
push
clc
mov
in
dec
push
es
mov
bound
pop
fs
fs
push
jno
mov
(bad)
out
mov
inc
sub
inc
mov
scas
test
cmp
outs
out
sbb
jmp
ss
mov
fdiv
cdq
sbb
xchg
fs
out
and
bound
scas
jns
add
sti
jbe
(bad)
(bad)
fisubr
cmp
xor
push
(bad)
push
pop
scas
idiv
fcom
(bad)
in
es
adc
in
(bad)
dec
ret
cmp
sbb
(bad)
mov
imul
mov
xor
adc
and
inc
mov
mov
jae
mov
push
test
xor
add
jo
or
dec
clc
imul
or
xchg
inc
mov
or
xchg
scas
xor
mov
mov
cmp
call
mov
add
lods
xlat
jecxz
call
xlat
or
xor
int
xchg
pop
(bad)
pushf
xchg
stos
fnstcw
mov
(bad)
mov
adc
fild
or
or
pusha
push
cmp
jecxz
adc
sbb
xchg
adc
push
stos
push
mov
mov
jne
dec
pop
enter
fld
sar
jge
or
push
lock
int3
stc
aaa
bswap
in
inc
inc
jno
in
loop
xchg
ins
pop
mov
jo
in
fbld
or
pop
ret
js
stos
xor
nop
xchg
daa
test
xlat
adc
push
dec
cmp
pushf
loopne
add
int3
xlat
sbb
imul
xor
hlt
mov
sub
out
outs
mov
dec
fs
mov
adc
(bad)
xchg
jno
mov
stos
sub
sbb
mov
in
push
popa
ja
cld
enter
les
sub
(bad)
push
cld
mov
fidivr
jl
out
fcom
(bad)
or
jle
add
in
test
xchg
cmp
xchg
sub
xor
push
test
push
cli
xchg
arpl
hlt
out
inc
mov
add
xor
cwde
outs
mov
mul
imul
sub
jbe
stc
adc
imul
dec
mov
inc
rol
lds
mov
gs
fiadd
xchg
cmp
addr16
bound
jle
add
mov
cli
retf
mov
jl
shl
sbb
push
and
cmp
pop
pop
cli
sub
hlt
xor
(bad)
ss
jl
pop
pop
retf
(bad)
int3
(bad)
fnstenv
movs
add
mov
push
ins
in
ins
inc
test
mov
xchg
hlt
aaa
mov
mov
test
div
ror
movs
cmp
push
fwait
movs
aam
sub
fbstp
xor
loopne
jle
cmps
dec
shr
cmp
or
sbb
pop
sub
loopne
retf
clc
and
mov
pop
push
sub
repnz
dec
out
xchg
and
pop
mov
jb
pop
outs
lds
fiadd
cmp
mov
sub
(bad)
(bad)
fcomp
cmp
shr
lahf
mov
mov
push
(bad)
sti
adc
jb
xor
jmp
jne
pushf
add
gs
inc
in
ror
push
jecxz
out
movs
push
fnstcw
gs
lods
and
test
or
jmp
jo
jmp
dec
jne
aaa
mov
pop
cmp
xor
jge
jmp
jle
push
push
sub
sub
nop
mov
fidiv
aas
ror
mov
scas
(bad)
jo
ret
ins
and
(bad)
sbb
lods
cld
cmp
aad
mov
or
mov
sbb
push
outs
adc
dec
rcl
test
xor
jge
mov
adc
sbb
dec
div
aam
jne
pop
xchg
outs
sub
push
jbe
adc
mov
pop
in
loopne
mov
fs
pop
jle
lahf
mov
aas
push
mov
mov
cmps
and
add
jmp
popa
mov
jae
or
xchg
loope
dec
sub
xchg
sahf
pop
xchg
xor
xchg
cmp
outs
mov
or
fwait
leave
or
inc
retf
push
mov
nop
gs
sbb
movs
adc
inc
loop
or
(bad)
push
enter
popa
mov
fwait
aaa
cli
bnd
mov
sbb
(bad)
in
push
popf
int
push
gs
fisubr
scas
inc
xchg
(bad)
pop
pusha
mov
xchg
aaa
sbb
mov
lods
pushf
les
dec
mov
mov
icebp
lods
add
or
in
jecxz
ds
adc
movs
aas
dec
imul
and
pop
pop
or
out
add
and
mov
jmp
mov
(bad)
ror
mov
jbe
pop
aas
imul
mov
sbb
lods
popa
push
add
pop
pop
bound
push
(bad)
cmps
adc
mov
jle
stc
shl
nop
jb
(bad)
cdq
out
imul
sub
aad
loope
cmps
mov
inc
and
xchg
or
and
imul
repz
mov
cmps
jge
int
scas
fcomip
fiadd
cmps
jle
icebp
jo
stos
rep
adc
js
mov
outs
inc
xchg
xchg
in
js
out
repz
mov
cmc
sub
out
xor
cmps
rol
add
cli
rol
fwait
scas
xor
fwait
dec
push
and
jg
ret
repnz
dec
out
icebp
(bad)
loope
jp
or
xchg
pop
sahf
pusha
or
sbb
add
cs
add
push
mov
sti
adc
outs
or
ja
popa
push
mov
push
leave
imul
push
lahf
and
aad
jno
xor
sbb
adc
jne
sbb
jmp
fwait
daa
pmulhw
adc
adc
xchg
mov
stc
fmul
mov
and
mov
scas
arpl
or
cmps
inc
pushf
dec
shl
js
sbb
push
jmp
aaa
(bad)
hlt
mov
cmp
cmp
lods
int3
jl
mov
(bad)
mov
adc
add
lea
int
xor
jo
std
dec
cmp
(bad)
pop
sbb
popf
test
fimul
iret
pusha
sbb
(bad)
cwde
xchg
sahf
sahf
imul
inc
fwait
sbb
not
jmp
and
mov
mov
cmp
int3
out
xchg
xchg
add
and
sbb
out
jbe
push
and
lahf
sbb
popf
pop
sub
inc
pop
cli
xlat
or
dec
jne
push
outs
loopne
xor
push
rol
lds
gs
dec
push
cmp
leave
mov
pop
jmp
cld
mov
mov
sbb
pop
sar
push
daa
test
jnp
arpl
fst
or
mov
les
sbb
jnp
fdiv
push
cs
cmp
jae
pop
inc
dec
xor
push
je
in
das
push
lock
xchg
popa
and
loope
cli
dec
loope
dec
sbb
mov
retf
and
ja
adc
shl
in
add
mov
jne
xor
mov
ja
pop
div
aaa
ins
int3
loop
mov
pop
pop
push
mov
mov
jp
jne
and
inc
sbb
jg
cmp
push
inc
jle
call
add
sub
leave
push
mov
xlat
test
and
mov
enter
cmps
dec
pop
pop
sub
add
repz
test
shr
cli
sbb
je
test
cmps
ss
sbb
push
ds
jl
and
add
jecxz
enter
cmc
cmps
or
js
sbb
cmp
mov
ds
push
in
imul
jle
sub
push
cmp
inc
cmp
add
addr16
icebp
mov
arpl
mov
pop
pop
daa
xchg
cli
(bad)
dec
test
ficomp
test
pop
std
xchg
mov
mov
xor
out
ss
mov
mov
adc
in
outs
cmps
dec
es
sub
in
fcmove
call
scas
cld
lds
jo
stc
(bad)
pop
jmp
popf
cmc
arpl
cdq
int3
in
xor
outs
cli
test
inc
sbb
aas
(bad)
jne
popa
cmp
arpl
inc
es
cld
jns
leave
and
push
mov
cmp
sahf
aam
mov
push
fcmovb
inc
jb
cmp
sbb
lods
in
jg
dec
iret
and
aad
shr
add
mov
push
xchg
add
pop
dec
inc
add
je
add
jle
mov
cmc
mov
lods
fidiv
push
into
sub
test
and
jg
and
and
dec
scas
mov
ror
cmps
js
aam
leave
inc
xchg
xor
movs
xor
pop
(bad)
cmp
cli
xor
and
test
inc
popa
dec
in
loop
cmp
or
xor
adc
ror
jp
and
sbb
shr
jmp
xor
(bad)
adc
outs
push
rol
loop
xchg
dec
sar
hlt
cli
sbb
test
call
fld
pop
adc
and
call
mov
outs
add
and
dec
xchg
push
(bad)
mov
fisubr
(bad)
jmp
adc
fcmovnbe
pop
mov
mov
popa
loope
aam
push
es
pop
jo
xor
lea
push
dec
cwde
outs
or
dec
outs
or
dec
lock
clc
jbe
cld
push
ror
ss
fstp
add
rol
mul
pop
inc
pop
fsub
ret
shr
cmp
sti
nop
fidivr
out
pop
jecxz
nop
lods
pusha
jl
push
sub
sahf
mov
cmp
mov
fbstp
push
jmp
repz
loope
sbb
cmp
cmps
rol
push
test
inc
push
and
lea
mov
adc
sub
ss
sbb
imul
or
jns
call
fiadd
and
push
jo
imul
pop
inc
test
stc
add
mov
mov
outs
cwde
pop
cmps
and
xchg
(bad)
ins
xor
int3
jmp
sub
mov
cmp
and
imul
div
pop
push
shl
sar
jb
mov
(bad)
mov
push
and
repnz
cmp
adc
sub
(bad)
int3
fst
ss
call
int3
inc
add
ret
fs
mov
scas
push
fistp
movs
(bad)
pop
xchg
jne
(bad)
xchg
mov
or
mov
call
mov
ret
and
test
inc
int3
mov
add
xchg
les
out
and
shr
fcomp
sub
sbb
ret
int
push
adc
gs
mov
(bad)
loop
mov
xor
mov
cmp
pop
push
repz
loope
sbb
fisub
gs
rol
(bad)
mov
bound
test
xchg
sbb
and
mov
pusha
dec
xor
mov
pop
xchg
out
mov
add
out
jle
xor
sub
add
add
push
ins
xchg
pusha
mov
and
enter
adc
or
ins
mov
cmps
scas
sti
xchg
inc
mov
add
sub
adc
fmul
call
cmps
adc
jno
cmps
inc
rcr
aas
into
push
das
inc
icebp
mov
inc
test
out
mov
pop
pop
fcom
xchg
in
sbb
das
movs
or
push
pop
jg
int3
pop
xor
dec
test
int3
out
shr
xor
and
add
add
paddd
fs
loopne
sub
stc
and
mov
in
cli
jp
push
inc
dec
adc
sbb
xchg
pusha
js
and
rcr
shl
xchg
bound
fwait
cmps
fiadd
popa
dec
popf
adc
stos
(bad)
clc
xchg
mov
jae
adc
arpl
ins
mov
lods
out
imul
les
rcl
mov
outs
loope
daa
rol
cmp
movs
loope
jmp
adc
mov
dec
sub
jecxz
sar
cmp
sar
std
jg
call
mov
addr16
or
push
pop
gs
mov
fldcw
add
and
outs
lods
add
inc
sbb
aam
xor
test
push
repz
and
fdiv
inc
pop
add
fmulp
jmp
xchg
das
cmps
fsub
jbe
push
retf
inc
cmc
mov
mov
push
aad
add
arpl
test
xchg
in
add
add
inc
add
jg
and
add
pushf
push
xor
cmp
dec
std
aad
(bad)
push
aam
mov
sub
test
rcl
sbb
shl
or
ja
adc
adc
in
mov
jmp
push
sahf
aam
xor
sub
retf
push
add
mov
repz
(bad)
inc
jmp
sub
dec
pop
ins
jnp
inc
adc
(bad)
ficomp
popf
cmovnp
out
push
je
shl
and
mov
popa
inc
push
sbb
aas
mov
arpl
mov
cmp
lock
and
jmp
ja
xor
fwait
test
pop
movs
cmp
dec
jge
xchg
jl
iret
jmp
mov
fist
stos
fiadd
and
adc
fwait
dec
jb
push
dec
sbb
sub
cmp
addr16
cmps
inc
pop
add
sbb
stc
mov
mov
ret
cmp
movs
sbb
mov
mov
cmp
pop
add
ds
shl
sub
xlat
jbe
std
cdq
cmp
and
sbb
int3
cli
or
inc
xchg
sbb
sub
sahf
and
push
push
hlt
dec
xlat
daa
pop
out
outs
repz
xbegin
xchg
nop
or
mov
gs
js
je
ins
popf
in
or
xor
xor
scas
jp
mov
ret
and
pop
and
cli
dec
clc
scas
pop
sbb
xchg
ror
js
iret
sub
or
pop
mov
mov
adc
pop
sub
pop
leave
loopne
cmp
aas
call
dec
test
aaa
loopne
(bad)
rcl
int
jge
inc
pusha
or
cmps
pop
aaa
mov
cld
mov
mov
sbb
scas
cmc
xor
sahf
repz
jns
aam
add
lock
jnp
and
imul
cdq
lea
jae
push
rol
xchg
iret
sub
fidiv
or
cld
xlat
jne
jns
sub
nop
ja
jo
(bad)
xchg
(bad)
push
pop
push
xchg
jo
cmps
in
inc
jbe
push
jecxz
call
pop
stc
fdivr
add
mov
shl
aam
loope
out
icebp
push
out
fidiv
iret
je
add
das
rep
mov
clc
scas
aaa
mov
sub
sbb
fs
push
lods
out
jecxz
and
fisttp
mov
mov
test
mov
and
hlt
jecxz
cmps
fst
dec
add
xor
test
cdq
sbb
and
das
cmps
add
adc
(bad)
nop
mov
jmp
retf
xor
jb
mov
dec
push
(bad)
out
movs
loop
and
test
pop
jmp
jns
xor
cmp
pop
cmc
fdiv
jmp
cmp
fmul
pushf
loope
xchg
push
and
add
sub
dec
sahf
in
test
ror
jo
adc
xchg
and
out
adc
into
and
adc
inc
sub
xor
sub
jbe
sti
sub
mov
std
dec
jno
clc
imul
jl
xchg
adc
xchg
pop
cdq
xchg
test
xor
inc
lods
mov
jl
(bad)
inc
(bad)
add
test
jge
push
xor
imul
ret
cli
or
xchg
sub
inc
stc
dec
mov
push
cli
push
mov
mov
pop
int
mov
mov
sub
mov
jo
mov
shr
js
retf
adc
cs
fdiv
inc
xor
popa
push
dec
push
push
cmp
fsubr
mov
je
cmp
push
sbb
fwait
xchg
aas
ret
(bad)
mov
std
arpl
popf
push
push
shl
shl
not
inc
and
sub
dec
aad
add
shl
jnp
fsubr
and
pushw
jle
out
push
ret
dec
mov
mov
lock
mov
(bad)
fist
jmp
mov
mov
fcomp
cs
and
test
fnstcw
or
into
jbe
leave
sbb
jne
xchg
dec
ins
mul
dec
push
not
dec
adc
es
icebp
cmp
sti
stos
jl
sub
mov
pusha
call
inc
or
mov
gs
xor
out
mov
mov
es
dec
cs
in
add
xchg
outs
outs
mov
sahf
mov
or
adc
lds
cmp
xchg
(bad)
in
mov
pop
pop
mov
add
jle
fstp
movs
into
mov
and
sub
push
jns
fwait
mov
mov
xchg
test
push
je
add
fwait
mov
or
jno
daa
test
sbb
dec
pop
inc
pop
pushf
pop
inc
dec
add
mov
test
adc
in
adc
xchg
in
mov
int
(bad)
(bad)
mov
popa
mov
pop
mov
test
xchg
rcl
inc
out
mov
ja
test
jge
outs
push
movs
add
outs
and
lods
retf
stos
call
cmc
mov
in
mov
jne
popa
test
test
mov
fxch
xor
push
popf
cmp
or
xor
pusha
(bad)
push
fs
mov
loop
std
xchg
retf
xor
and
fcom
enter
test
jl
xchg
adc
mov
sbb
mov
xor
jmp
mov
shr
(bad)
push
cmp
jne
xor
mov
sbb
xor
jl
imul
movs
mov
pop
or
jbe
scas
or
into
xchg
and
pop
mov
or
adc
inc
call
stos
xor
push
xor
popa
repnz
xchg
pusha
mov
push
cmp
lea
mov
fucom
mov
pop
and
div
xchg
cli
xor
(bad)
ror
dec
in
dec
jbe
pop
jnp
push
sbb
addr16
cmp
xchg
inc
dec
jle
push
loopne
pop
inc
push
addr16
lods
in
dec
pop
(bad)
arpl
sub
xor
push
jbe
inc
stos
ds
xor
add
sti
jmp
adc
fiadd
dec
adc
add
(bad)
mov
lods
cmp
inc
jg
xor
nop
lea
cmp
and
addr16
inc
fimul
outs
cmp
stos
dec
mov
das
cdq
(bad)
dec
jo
xor
repz
pusha
or
loop
sbb
outs
xor
mov
xlat
dec
mov
jno
stc
das
mov
test
in
scas
cli
push
cmp
fcom
arpl
or
pop
add
sbb
loopne
test
pop
dec
retf
cmp
jb
(bad)
and
push
leave
lods
call
arpl
outs
ja
fimul
popa
dec
jnp
jbe
mov
mov
jne
jl
daa
inc
sti
adc
jecxz
jecxz
inc
mov
add
aam
push
test
js
dec
pop
dec
adc
pop
fmul
mov
add
ret
cmp
xchg
je
inc
retf
pop
jle
arpl
pop
pop
mov
lock
das
jg
sar
cld
xor
lock
ret
clc
loope
ret
dec
dec
ret
stos
imul
out
jecxz
mov
neg
les
call
lods
mov
cmp
shl
idiv
xchg
das
cdq
and
adc
pop
hlt
test
call
jns
imul
adc
sbb
dec
clc
mov
pop
mov
mov
dec
add
cdq
test
inc
sar
mov
add
(bad)
es
dec
add
popa
or
push
fwait
xor
jno
dec
pushf
jae
adc
jecxz
push
aas
in
add
sub
and
mov
dec
mov
inc
inc
add
or
daa
imul
int3
jmp
call
iret
xchg
fldenv
xchg
cmp
fadd
dec
mov
jo
ret
cmc
mov
push
call
pop
dec
mov
xchg
push
(bad)
and
push
xchg
adc
jg
sbb
mov
pop
ret
icebp
scas
cmc
loope
xchg
xchg
and
cs
jmp
pop
push
lods
push
and
jmp
retf
push
mov
loop
bound
sbb
xor
ins
jo
xor
mov
mov
mov
test
xchg
mov
int3
hlt
push
in
test
xor
add
jae
mov
push
dec
out
add
iret
inc
sahf
pusha
push
imul
or
pop
xor
out
add
push
jmp
(bad)
bound
jecxz
add
sub
into
mov
pop
out
imul
out
sub
cmp
lahf
arpl
push
jecxz
lods
int3
mov
aas
dec
xchg
sub
dec
in
cmp
ret
xchg
jnp
pop
add
xlat
dec
inc
aas
loope
cmp
repz
int3
jg
dec
add
dec
mov
(bad)
repnz
xchg
mov
push
mov
sub
test
lods
xchg
les
out
imul
dec
fwait
out
pop
jno
add
xchg
sub
fcmovu
dec
fistp
inc
jnp
inc
movs
or
popa
pushf
cld
nop
cmp
stc
js
pop
fs
mov
jl
loopne
inc
jmp
pop
pop
loope
scas
push
push
neg
adc
dec
sahf
imul
and
add
xchg
adc
pop
fidiv
cmp
sbb
lock
movs
sub
mov
jge
pop
push
inc
mov
cwde
fst
in
fldcw
or
xor
jno
sub
mov
out
jmp
xchg
jge
cli
and
add
xor
pop
mov
jmp
fsubr
imul
mov
fiadd
pop
cmp
loop
sub
adc
mov
jle
sbb
sub
add
inc
mov
push
add
popa
push
adc
jnp
push
ja
shl
xchg
jne
adc
mov
lea
ret
jle
and
bound
pop
pop
dec
inc
popa
mov
inc
inc
pop
ror
cmp
mov
push
icebp
(bad)
inc
sub
pop
das
dec
nop
cmc
ret
arpl
adc
(bad)
hlt
addr16
cli
in
cld
in
jmp
xchg
sbb
sti
sbb
retf
shl
pop
fistp
outs
xchg
cmc
jle
(bad)
dec
leave
push
aad
pusha
icebp
loope
stos
mov
test
(bad)
sub
adc
and
push
push
aaa
sbb
push
(bad)
cwde
hlt
movs
xchg
push
mov
xor
stc
pop
hlt
pop
pop
fdiv
sbb
fxch
adc
jbe
jne
xchg
imul
(bad)
jmp
test
mov
mov
inc
lds
jno
es
arpl
popf
aas
pop
or
nop
call
out
dec
leave
addr16
outs
mov
data16
les
and
inc
push
add
push
clc
xchg
mov
adc
sbb
or
adc
dec
adc
jp
xchg
add
cli
imul
imul
pop
sbb
fwait
or
xchg
test
mov
sbb
and
les
push
inc
stos
pop
pop
xor
xchg
test
inc
aas
xchg
mov
(bad)
stc
addr16
shl
std
mov
cli
pop
and
mov
aam
jnp
test
iret
(bad)
test
pop
mov
leave
rcl
push
icebp
fist
xchg
icebp
dec
add
arpl
(bad)
cld
shr
(bad)
xor
mov
popf
movs
rol
(bad)
call
add
loop
loope
or
fimul
call
jecxz
dec
mov
add
lahf
xchg
lahf
or
adc
jmp
adc
mov
neg
das
or
adc
(bad)
addr16
add
push
add
sub
xor
inc
inc
les
fs
loopne
push
cmp
arpl
jae
inc
loop
xchg
dec
adc
push
mov
call
rol
mov
shr
aam
outs
jge
jmp
std
mov
mov
lds
aad
cmp
inc
inc
test
mov
jmp
ss
lds
ds
ret
or
repz
jb
dec
or
call
push
push
cmp
jnp
pop
outs
dec
iret
mov
push
shr
in
sahf
jg
push
clc
xchg
lahf
xchg
jp
dec
lea
jbe
push
fimul
pop
pop
xor
repz
push
and
aad
scas
hlt
jg
xor
mov
and
aaa
jle
push
lock
and
das
test
mov
int3
pop
std
sahf
jecxz
outs
jp
push
inc
mov
jecxz
jmp
dec
enter
call
jnp
dec
sbb
ss
add
or
sub
adc
imul
out
pop
hlt
or
push
call
jae
xor
xchg
mov
cmp
nop
ss
loopne
and
stc
loope
sbb
push
cmc
aad
repnz
sti
xchg
(bad)
icebp
pusha
adc
in
shl
cmp
inc
stc
les
popa
das
dec
sbb
test
aas
neg
xchg
aam
push
mov
jl
push
ror
fnsave
push
ss
xchg
mov
mov
dec
(bad)
xor
lock
loop
jbe
cld
sub
add
cmp
cmp
inc
dec
pop
cmps
adc
mov
pop
push
fdivr
mov
push
sbb
add
pop
inc
add
shr
jnp
movs
xor
xor
sbb
inc
jmp
jge
xchg
cmp
sahf
adc
or
(bad)
adc
lock
out
dec
add
adc
cmps
sub
das
cs
seta
xor
sbb
mov
rcr
(bad)
adc
xor
icebp
aaa
xchg
mov
aam
pop
push
pop
adc
sub
adc
pusha
or
stc
nop
xlat
in
dec
call
cmp
mov
repz
and
sub
pop
in
(bad)
jmp
jp
add
sub
stc
fwait
xchg
div
pop
inc
cli
outs
mov
pop
rol
imul
and
rcr
adc
test
xor
sbb
jge
cmp
add
mov
fisub
ja
pop
sbb
jb
push
dec
aad
rcl
and
ja
or
pop
mov
sub
xlat
retf
test
xor
retf
iret
bnd
idiv
sub
sub
fldln2
xor
(bad)
ret
xchg
mov
out
addr16
sub
and
dec
jl
pushf
stos
add
sti
movs
aam
mov
cmp
push
or
inc
ror
jns
push
in
xor
repnz
jns
sbb
vpmacsdql
mov
pop
push
in
xor
cmp
fwait
mov
enter
inc
idiv
jle
loopne
(bad)
mov
jle
pop
and
sti
sub
mov
call
pop
fwait
test
clc
(bad)
enter
cmp
or
test
(bad)
mov
iret
push
or
movs
call
mov
xor
sahf
ret
inc
imul
adc
add
mov
add
sbb
and
scas
int3
jnp
mov
(bad)
int
pop
lds
or
js
sub
xlat
fcomp
add
cmp
xlat
mov
ja
dec
mov
pop
dec
dec
les
jp
sub
cs
fist
fiadd
push
cs
mov
cdq
add
das
loop
fmul
fcomi
fnsave
push
mov
pusha
push
loope
mov
and
aas
movs
cmps
mov
mov
dec
jbe
pop
loop
mov
call
add
push
pop
clc
enter
inc
adc
jae
fild
ins
ret
sub
ins
sar
cs
imul
mov
std
out
addr16
dec
(bad)
call
and
mov
iret
sub
mov
mov
leave
mov
push
icebp
iret
xchg
mov
ss
cdq
add
adc
retf
pop
jecxz
test
pop
test
push
xchg
mov
sbb
(bad)
fsubr
and
mov
mov
shl
cmc
mov
das
mov
add
sbb
pop
popa
pop
xchg
out
je
inc
mov
mov
les
sbb
push
sbb
arpl
call
jge
aaa
cdq
mov
add
mov
arpl
shl
out
es
jo
xor
fs
mov
and
in
dec
push
mov
ins
and
movs
in
rol
fiadd
test
inc
add
pusha
sbb
fs
out
dec
rol
dec
pop
mov
push
cmps
retf
cmp
push
xor
jmp
mov
int3
outs
pop
adc
mov
dec
dec
shl
cld
scas
jle
pop
in
stc
jecxz
sbb
and
push
xchg
fdiv
xor
stc
retf
push
sahf
or
ror
lds
clc
add
push
jp
(bad)
inc
or
cmps
out
dec
mov
leave
pop
enter
enter
mov
xchg
loopne
mov
gs
aaa
fcom
fst
pop
pusha
into
mov
pusha
cmc
sub
mov
push
dec
jnp
mov
in
dec
fidivr
jnp
ja
xchg
lahf
jecxz
(bad)
in
sbb
mov
cmp
xchg
dec
mov
and
pop
repz
stos
mov
pusha
dec
or
mov
xor
push
es
sub
es
dec
push
repnz
dec
arpl
(bad)
push
mov
or
pop
int3
jmp
add
icebp
fsub
inc
retf
pop
adc
in
sub
cmp
xchg
sub
adc
movs
push
pop
xlat
loopne
mov
mov
mov
lahf
push
push
jb
mov
jbe
pop
stos
stos
rcr
push
pop
rcr
and
add
adc
shl
arpl
not
gs
dec
shl
dec
xchg
mov
pop
imul
mov
dec
adc
mov
ds
inc
bound
call
add
stc
out
dec
push
in
clc
arpl
dec
xor
pop
(bad)
mov
adc
push
or
ja
sar
xor
cmp
iret
adc
and
call
outs
pop
loope
and
lods
push
rcl
and
jnp
(bad)
in
fsubr
call
test
mov
cmps
adc
xor
in
and
cmps
cmc
cmp
enter
sub
sub
mov
cmp
sar
or
hlt
(bad)
out
les
test
jmp
sti
loop
cmp
and
call
push
neg
int3
mov
jbe
xchg
push
and
leave
pop
adc
cmps
add
mov
fcomp
stc
inc
lods
or
add
setbe
xor
mov
or
add
sbb
inc
xchg
push
cmp
sub
dec
add
fldenv
retf
or
arpl
jns
dec
out
sbb
cmp
sbb
jecxz
fadd
mov
jae
xchg
fldcw
xchg
xchg
push
dec
pop
mov
mov
std
dec
mov
and
xchg
cmp
cmp
or
cmp
xchg
outs
fbld
dec
push
or
or
mov
push
jmp
in
loopne
fwait
pop
inc
imul
fmulp
xchg
sbb
out
pop
adc
out
stos
and
mov
(bad)
sub
fs
outs
fidivr
daa
or
outs
adc
mov
jmp
mov
push
xchg
std
mov
aam
dec
enter
cdq
xlat
cmc
inc
cdq
repnz
add
sub
dec
ins
je
sub
inc
gs
mov
and
add
addr16
cs
daa
inc
aas
push
ficom
imul
xor
popa
cmp
pop
sbb
mov
push
mov
(bad)
clc
cld
sub
jnp
dec
inc
jge
ficom
push
mov
es
loop
add
fsub
pop
jns
inc
fadd
popa
outs
call
fst
fmul
mov
push
mov
jle
push
nop
scas
pop
push
aad
or
retf
(bad)
inc
sub
xchg
ja
retf
loope
cmps
mov
ror
or
jns
mov
mov
test
(bad)
js
adc
adc
scas
cmp
cdq
(bad)
ror
js
sbb
loopne
push
popf
lds
gs
repnz
(bad)
(bad)
push
push
sbb
outs
fcmovnb
je
test
cmp
mov
inc
ret
jecxz
mov
fidiv
loope
lods
xchg
dec
push
pop
add
mov
cwde
sar
sbb
sub
sub
arpl
nop
aad
sub
mov
movs
or
mov
jg
mov
rol
jmp
jbe
adc
mov
inc
jne
js
aaa
mov
sub
out
popf
out
add
mov
cmp
fmul
pop
ret
js
xchg
addr16
jg
cmp
hlt
clc
shl
inc
(bad)
fisttp
and
ror
imul
inc
(bad)
cmp
ret
(bad)
cdq
push
sub
xor
pusha
sub
dec
retf
out
pop
repz
push
fdiv
repz
repz
shl
mov
stos
(bad)
outs
jmp
cmps
jo
out
xchg
xor
rcl
jns
out
jp
adc
sub
cmps
push
xchg
call
push
mov
fcom
pusha
sub
fst
cmc
add
stos
lods
call
push
mov
jmp
add
scas
iret
fadd
push
jecxz
push
fyl2x
jg
ins
dec
nop
gs
gs
(bad)
and
mov
push
push
cmp
dec
adc
xor
out
sbb
out
add
adc
repnz
cdq
fbstp
dec
push
daa
mov
push
imul
push
pause
repz
(bad)
popf
mov
push
mov
mov
cmp
lods
xlat
(bad)
dec
or
pop
push
pop
xchg
mov
in
push
int3
xchg
inc
and
jns
mov
push
fidivr
fadd
mov
outs
stos
push
push
pop
out
sub
shl
xchg
int3
cmps
stc
fsubr
pop
out
adc
call
(bad)
and
dec
sub
lock
inc
push
pop
jge
sub
fimul
jle
jae
lahf
nop
imul
adc
jno
bound
sub
pop
not
or
adc
(bad)
mov
adc
xchg
sbb
cli
icebp
(bad)
icebp
fucomip
sahf
jmp
dec
sbb
xlat
push
jo
sbb
dec
or
(bad)
inc
sti
leave
mov
sbb
or
push
mov
inc
bound
add
xchg
test
inc
ds
push
xor
mov
cmp
push
add
mov
xor
js
bound
aad
adc
(bad)
aas
add
lock
icebp
xchg
sbb
and
xchg
jmp
lea
loope
stos
add
call
fwait
dec
in
dec
pop
mov
cmc
imul
js
fmul
xchg
pop
sub
fisttp
dec
pop
mov
adc
push
or
mov
les
pop
xor
ret
adc
mov
call
lods
dec
test
jb
inc
hlt
ds
jl
xchg
mov
lods
cdq
lock
call
out
(bad)
(bad)
sub
arpl
pop
ja
push
inc
sub
lods
xor
pop
ja
call
lea
call
pusha
fdivrp
test
adc
or
loope
jbe
mov
xchg
adc
lods
ror
inc
setno
jecxz
pop
mov
push
shl
in
retf
movs
inc
and
push
lahf
popa
sub
neg
inc
shl
cmp
pop
and
jge
sub
dec
jb
jnp
cld
ficomp
push
test
dec
in
push
xor
or
shl
rol
mov
loop
pop
sbb
cmp
cmp
test
mov
sbb
add
jmp
mov
adc
xlat
sbb
sbb
cmc
or
xchg
mov
push
retf
repnz
ret
(bad)
xchg
hlt
rcl
mov
jo
mov
fsubrp
pop
in
bnd
mov
rcl
cld
pop
inc
push
mov
ror
mov
hlt
xchg
cmp
test
ds
adc
ficomp
push
mov
cdq
cmp
mov
cwde
mov
(bad)
outs
ss
inc
call
and
push
rcr
jp
stc
or
out
cmp
es
mov
mov
mov
inc
out
push
leave
adc
inc
mov
out
cmp
pop
lods
ret
jge
sub
loope
xchg
xor
cld
mov
xchg
push
adc
adc
out
pop
push
loop
inc
js
push
ss
sbb
out
cmps
int3
test
enter
mov
lods
inc
xor
fs
mov
lahf
test
scas
out
jnp
rcr
stc
cmp
pop
addr16
and
popf
push
inc
test
add
es
adc
hlt
mov
ins
std
push
or
push
ss
or
retf
inc
mov
jo
sbb
inc
es
jb
sub
int3
sar
loopne
aad
ins
mov
push
jmp
rcl
push
data16
cmps
bswap
push
jge
adc
out
xor
cdq
addr16
cmc
imul
ror
pop
lock
fnstcw
idiv
test
scas
push
add
shr
jle
mov
pop
rcl
xchg
sar
jns
in
dec
pop
jne
lods
jbe
fcmovne
mov
mov
lods
in
add
cmc
aas
frstor
jge
xchg
push
jecxz
je
pop
(bad)
mov
add
cmc
cs
outs
sbb
mov
dec
mov
fwait
shl
pop
sbb
xlat
or
repz
sbb
mov
lock
ins
dec
clc
add
bound
push
ins
xlat
mov
jecxz
pop
iret
pop
enter
stc
leave
cmp
shl
push
jmp
retf
fadd
sbb
push
test
or
push
ss
jle
or
(bad)
call
cmp
pop
add
add
sbb
pop
dec
jl
leave
rcr
add
mov
imul
test
jmp
retf
test
sahf
mov
mov
mov
rol
imul
cmps
nop
jmp
arpl
mov
lds
and
mov
jecxz
jg
ror
sbb
cmp
jnp
xchg
cli
les
push
std
cmp
pop
shl
pop
lock
cmp
ins
or
call
push
rcl
outs
sti
lds
mov
mov
test
adc
inc
xchg
add
(bad)
pop
rcl
cld
dec
add
mov
xchg
(bad)
cld
int
rol
push
lds
sbb
dec
aaa
cs
arpl
mov
jle
jb
dec
movs
into
inc
cli
fcmovb
int
repz
icebp
jmp
into
push
gs
cld
loop
jecxz
movs
push
loop
pop
sbb
push
or
pusha
sub
pusha
stc
in
mov
lea
push
mov
mov
push
xor
xchg
cmp
adc
xor
out
cmc
add
jno
scas
in
mov
test
inc
dec
rcl
ret
jmp
cmps
lods
movs
fisub
or
add
mov
or
iret
dec
mov
rol
jbe
test
xchg
xor
mov
neg
fistp
pop
test
(bad)
sub
mov
loopne
es
or
mov
mov
call
push
shl
je
cwde
(bad)
cmps
cmp
int3
sbb
mov
enter
loopne
xor
fcmovnb
xchg
and
data16
and
call
mov
fistp
cmps
mov
test
and
mov
pop
call
aad
popf
jmp
shl
add
xchg
push
fld
dec
rcr
outs
std
pop
xor
add
bound
(bad)
bound
lahf
in
nop
cdq
out
mov
mov
pusha
scas
shr
call
sbb
(bad)
sub
dec
cmps
and
push
xor
cdq
inc
mov
scas
fwait
jecxz
scas
pop
sbb
jecxz
test
dec
cdq
xor
(bad)
sti
mov
adc
out
jl
cmp
jo
jb
or
dec
add
call
jne
push
push
dec
xchg
lock
dec
cdq
pusha
pop
test
mov
popf
sbb
xlat
mov
aas
xchg
xor
xor
fst
jmp
jne
add
outs
pop
movs
inc
sbb
cmp
inc
inc
sub
enter
xchg
push
sti
daa
mov
sub
std
pop
and
stos
and
dec
pop
sbb
movs
xlat
popa
mov
jmp
xor
adc
sub
jb
cdq
dec
(bad)
stc
jnp
and
cli
test
dec
ins
sbb
cmps
rol
(bad)
sbb
push
add
movs
dec
scas
dec
pop
fld
cld
inc
cmp
or
xchg
xor
sbb
js
cmp
xor
in
mov
xchg
stos
mov
mov
fdiv
jnp
popf
retf
stc
in
int3
lea
xchg
retf
jns
and
jns
pop
(bad)
pop
pop
hlt
retf
push
mov
leave
jae
mov
pop
rcr
int3
xor
fsubr
(bad)
rcl
sbb
xchg
or
push
sbb
cmp
jae
push
xor
xor
xor
retf
or
and
add
cmps
loope
js
(bad)
clc
int
xor
mov
cmps
xchg
fs
pop
inc
xchg
test
out
xchg
push
xchg
inc
mov
jge
out
jle
hlt
aas
jp
and
adc
(bad)
ret
jg
or
scas
aas
push
mov
mov
push
mov
adc
jae
pop
mov
gs
pusha
icebp
pop
dec
add
pop
cmp
inc
jle
and
mov
mov
or
stos
push
sub
jge
in
inc
repz
stos
ins
pusha
add
data16
jp
repz
xrelease
loop
push
es
xor
sbb
xchg
mov
mov
dec
ds
xchg
call
and
popf
jbe
jne
or
call
pushf
stc
loop
adc
jnp
mov
jmp
mov
data16
mov
int3
loope
shl
push
xchg
cmp
sbb
fnstenv
mov
ins
or
inc
inc
cli
mov
add
jl
loop
leave
mov
push
les
in
jg
push
mov
jg
xor
bound
pusha
mov
fistp
cmc
pop
mov
cmp
adc
mov
add
pushf
adc
mov
dec
mov
jnp
out
(bad)
and
fwait
xor
popa
push
aam
les
(bad)
jmp
loopne
cmp
fdivr
mov
mov
mov
out
inc
movs
push
dec
push
iret
xchg
and
sub
cmp
mov
push
(bad)
aas
pop
jnp
fwait
cdq
lock
outs
jbe
in
add
in
cdq
or
xor
jno
lods
mov
imul
sbb
cwde
mov
pop
xor
jg
fidivr
and
or
rcl
sub
push
leave
sti
xor
(bad)
push
add
mov
or
mov
push
test
pop
js
not
xchg
jge
add
mov
inc
pop
(bad)
les
pop
rcr
ffreep
imul
or
rcl
sti
push
or
lds
cld
in
add
sub
pop
fcom
pop
jne
aaa
pop
pop
(bad)
adc
jp
jle
push
inc
aad
or
mov
mov
ins
push
cmp
aaa
xor
sbb
jp
cwde
push
enter
(bad)
pop
mov
pusha
and
sbb
out
repnz
cmc
ficomp
mov
(bad)
push
cld
jns
nop
icebp
dec
scas
jno
repnz
pop
in
lea
adc
in
pop
ret
in
mov
xor
push
out
popf
lea
adc
cmp
sub
test
or
xchg
mov
or
jo
call
sub
add
enter
inc
jmp
fiadd
in
sahf
lock
fs
(bad)
stos
mov
lods
movs
mov
mov
or
xor
jge
inc
jmp
(bad)
setle
das
jbe
pop
or
pop
mov
mov
inc
dec
mov
push
ret
push
mov
ja
inc
into
test
pop
scas
gs
cwde
dec
cmc
movq
lock
cmps
je
repz
pop
push
ret
repz
(bad)
lahf
adc
imul
pop
lea
imul
dec
frstor
out
retf
pop
xlat
mov
pop
inc
enter
paddusw
fisttp
adc
cmp
add
inc
sub
pop
and
xor
dec
call
in
test
jns
or
fild
fstp
lea
inc
push
fisub
hlt
pop
cmp
arpl
cld
(bad)
scas
sbb
jno
and
retf
inc
cmc
add
adc
arpl
(bad)
popf
adc
push
lods
mov
addr16
sar
dec
xor
adc
(bad)
lea
(bad)
mov
pop
sub
lds
aad
popf
das
mov
test
movs
retf
xor
xor
mov
es
dec
adc
repz
xchg
mov
jge
mov
aad
xchg
pop
mov
mov
lahf
jb
shl
cli
icebp
pop
cwde
and
push
popa
sahf
cmp
in
and
pop
rcr
jmp
xor
in
nop
dec
cmp
aad
jle
in
int3
movs
(bad)
stc
rcl
add
lods
imul
jmp
jbe
dec
cmp
in
pushf
jo
add
xchg
fwait
in
outs
gs
push
loope
loopne
mov
fidivr
repz
pusha
push
push
inc
jnp
and
mov
xor
cmp
jle
sub
mov
stc
addr16
cmp
and
add
mov
mov
jp
push
retf
cdq
fwait
scas
sub
pop
dec
pop
aaa
inc
in
sub
jmp
fwait
pop
or
mov
mov
shr
data16
repz
sbb
and
or
sub
call
cmp
gs
push
out
pop
test
push
scas
mov
pop
ret
xor
(bad)
retf
cmp
xor
mov
cmp
pushf
pop
aaa
fsub
dec
pop
fadd
neg
ins
jae
jg
sub
daa
popa
xchg
sbb
stos
scas
sub
cdq
test
adc
out
adc
fisttp
jbe
fdivr
sbb
movs
pop
jae
retf
arpl
lds
loopne
call
pop
mov
scas
scas
pop
pop
adc
mov
dec
mov
jge
cs
inc
dec
fs
inc
lods
ds
pusha
pop
jne
nop
ret
adc
dec
cmp
xchg
cmovg
dec
neg
retf
std
mov
int3
mov
rcl
imul
ss
push
mov
xlat
into
pusha
sbb
push
jge
inc
imul
movs
lea
mov
fst
push
sahf
inc
pop
ror
in
jge
cmp
xor
adc
call
rcl
cmp
scas
data16
imul
pop
xor
add
mov
lods
mov
in
lds
cmp
pop
loop
jmp
adc
add
push
icebp
mov
adc
inc
dec
pusha
(bad)
jns
ret
mov
jecxz
mov
mov
cs
outs
mov
cmps
push
xlat
ret
out
loop
inc
cdq
call
mov
shr
movs
ins
xchg
je
xchg
movs
shr
imul
daa
call
(bad)
lahf
repnz
repz
rol
imul
loop
rcl
iret
mov
out
jge
enter
xor
int
adc
xchg
inc
nop
cli
xchg
das
sbb
and
(bad)
sbb
cmp
int
pop
cmp
clc
inc
pop
cld
mov
sub
arpl
cmps
ins
cmps
cmps
push
test
out
inc
cmps
test
push
daa
gs
or
pop
or
mov
jns
out
rcl
(bad)
and
sbb
int
aad
test
xchg
dec
pop
sbb
ret
jmp
fs
mov
icebp
sub
lods
mov
mov
arpl
cs
mov
pushf
call
sbb
sti
sbb
sub
addr16
cdq
mov
inc
pop
in
inc
push
mov
add
outs
mov
retf
lea
test
xor
sub
movs
out
pop
sub
je
push
aam
loope
outs
adc
mov
mov
cmps
mov
das
popa
aas
mov
inc
out
add
pop
sbb
inc
js
dec
fadd
cdq
xlat
scas
push
scas
mov
pop
(bad)
or
xchg
gs
test
inc
retf
test
inc
push
std
pop
push
out
out
mov
mov
ss
jne
sbb
les
xor
cmp
sbb
sub
lahf
iret
jb
dec
fstp
push
stc
fiadd
scas
pop
ret
ret
cmc
pop
jns
xchg
outs
xchg
into
inc
push
cli
sahf
leave
sub
cmp
jo
pop
inc
dec
jmp
push
movs
out
xor
adc
push
pop
pop
imul
xor
mov
and
dec
inc
(bad)
rcl
mov
mov
jnp
adc
mov
outs
iret
(bad)
aaa
pushf
std
into
sbb
jmp
iret
mov
repz
fadd
mov
arpl
mov
push
push
sub
mov
xor
cdq
dec
and
push
out
sahf
fcmovbe
jg
xchg
jge
pop
call
faddp
retf
imul
pop
(bad)
mov
pop
cmps
pop
shr
(bad)
and
pop
in
mov
sbb
inc
inc
std
inc
mov
sub
mov
push
push
xlat
enter
xlat
pop
sbb
add
stos
loop
cs
inc
cmp
pop
cs
pop
ins
(bad)
aam
imul
cs
sbb
lahf
rcl
aad
cmp
std
daa
ja
xchg
xlat
inc
jb
pop
dec
and
xor
push
jae
out
movs
cmp
lods
popa
add
stos
mov
addr16
push
mov
mov
je
jbe
jns
dec
jae
add
adc
bound
sahf
sub
push
stc
iret
arpl
push
ret
xchg
adc
dec
sub
cld
mov
jmp
arpl
outs
clc
or
aas
jl
xchg
das
and
sbb
jl
popf
mov
and
je
push
icebp
add
(bad)
xor
fs
push
mov
mov
push
movs
cdq
mov
sub
popa
mov
cmp
add
ja
dec
shl
(bad)
(bad)
dec
lods
repnz
(bad)
stos
sar
cmovs
adc
rcl
scas
fdivp
jecxz
stos
pop
mov
push
push
shl
add
lods
xor
dec
inc
pop
ror
and
popa
mov
in
fdivr
lahf
nop
in
push
loopne
jae
pop
repz
ret
pop
or
or
cmp
add
push
mov
add
jno
imul
dec
push
aaa
xchg
sub
cmp
adc
rcr
xchg
and
retf
je
cs
mov
in
xchg
outs
or
cmc
adc
lds
div
rcr
push
stc
je
push
add
jo
pop
outs
cmp
int
das
sbb
das
xlat
jns
pop
adc
pop
xchg
ds
lds
mov
jmp
movs
inc
out
xchg
jb
pop
loope
pop
pop
jle
cli
std
pop
ret
test
inc
dec
test
and
pop
and
fnsetpm(287
in
ss
adc
dec
adc
arpl
pop
add
bound
sub
jae
imul
das
pop
mov
ins
call
push
ret
pushf
and
lahf
and
cmps
sub
mov
xchg
adc
or
test
adc
scas
loop
call
ja
(bad)
xlat
or
aas
fcmovbe
sar
dec
pop
cmp
shr
pop
cmps
mov
pop
cmps
ds
sbb
or
mov
and
int3
or
je
into
out
out
ficomp
int3
fistp
cmps
push
ret
jg
fldcw
(bad)
(bad)
loope
xchg
jbe
xor
jae
xor
ss
inc
retf
add
dec
arpl
pushf
inc
clc
popa
sub
jb
call
sbb
je
push
sub
stc
push
cmp
jp
ror
xchg
ja
xor
lods
loopne
loopne
add
ds
leave
jne
pop
test
popf
sbb
mov
mov
(bad)
jae
jnp
fcomp
addr16
lods
or
cmp
mov
jae
pop
cwde
nop
sub
xchg
mov
popa
push
scas
test
daa
sti
xor
xchg
cmp
out
pop
aas
jge
xchg
jns
pop
addr16
dec
hlt
lds
mov
jne
lods
sub
dec
sub
push
or
pop
mov
inc
lea
sbb
and
jb
add
adc
push
mov
jg
out
inc
test
push
push
add
pop
pusha
mov
aad
ins
fs
outs
lods
inc
jmp
push
and
into
iret
mov
mov
jecxz
popf
add
arpl
add
mov
or
sub
in
jge
ret
jmp
loopne
aas
sbb
out
cmps
mov
cmc
scas
cmp
jg
iret
push
mov
jne
cmc
outs
jbe
rol
sub
ret
out
mov
clc
push
mov
call
or
or
cmps
into
add
cs
lods
xchg
cmp
iret
pop
dec
cdq
jecxz
movs
fsubp
ret
mov
push
mov
repz
mov
sahf
push
int3
sub
mov
adc
xchg
add
cmp
mov
iret
(bad)
adc
push
fsub
(bad)
neg
or
push
push
add
outs
(bad)
mov
cwde
and
ins
push
pop
push
out
push
iret
push
dec
mov
and
fdiv
inc
pop
adc
dec
loope
push
ins
or
pop
mov
mov
mov
jo
jnp
dec
adc
retf
dec
dec
jecxz
int3
or
into
inc
and
test
cmp
xor
mov
xchg
das
sbb
bnd
jg
imul
jge
inc
mov
xor
test
into
push
mov
adc
sub
(bad)
jmp
inc
mov
imul
push
stos
bound
mov
or
sahf
in
repz
inc
sub
push
or
and
dec
lods
xlat
add
jns
ss
hlt
das
and
cwde
xchg
push
pop
add
jb
push
call
test
cmp
or
lds
lods
nop
(bad)
movs
and
push
mov
mov
push
push
xchg
(bad)
mov
pop
aam
inc
test
cld
loope
add
mov
mov
fwait
mov
clts
pop
push
nop
fwait
movs
jp
or
jmp
sahf
inc
adc
jno
test
pop
sbb
mov
or
xor
ss
es
into
add
mov
jmp
jp
fistp
cdq
fcmovnb
or
mov
stos
js
dec
sbb
jns
pop
or
fld
push
cmps
jno
push
sbb
es
jl
xchg
lahf
mov
aas
je
loopne
inc
mov
mov
adc
push
jns
sub
addr16
xchg
push
xchg
idiv
(bad)
sbb
sub
popa
cmp
push
sti
int3
jp
mul
enter
lods
fsubr
or
sahf
xchg
sar
sbb
inc
and
pop
imul
fdivr
fimul
cmp
pop
test
cmp
inc
push
pop
fisttp
cmps
add
imul
sahf
call
inc
sub
addr16
int
cmp
jne
and
or
adc
dec
frstor
or
pop
aam
mov
arpl
shl
in
xchg
push
jle
imul
mov
dec
adc
or
repnz
leave
jmp
cmps
fdivr
jbe
pop
call
(bad)
mov
push
fcomp
or
xchg
adc
imul
xchg
test
mov
and
dec
cmp
pusha
jecxz
mov
sub
test
xor
cli
adc
addr16
lea
fadd
push
mov
inc
sub
lods
xor
movs
fld
push
das
movs
dec
lds
mov
idiv
xchg
cdq
aam
xlat
xor
jmp
sub
inc
jmp
rol
dec
loope
std
mov
and
bound
shl
sub
xor
daa
xor
mov
mov
out
mov
fst
mov
lods
int
or
stos
test
fwait
and
aaa
sbb
or
das
mov
repnz
(bad)
jns
fsub
adc
and
push
dec
inc
mov
jecxz
fcomp
(bad)
sub
or
push
cs
mov
daa
rcl
out
jge
stos
mov
cmc
popf
sbb
icebp
add
rol
outs
adc
or
cld
call
(bad)
nop
or
xchg
hlt
sti
addr16
push
or
dec
lods
add
mov
adc
sub
jo
mov
mov
sbb
push
dec
xor
mov
in
jg
addr16
add
pop
je
aas
test
in
imul
mov
cld
jns
push
retf
fist
and
popa
jp
into
pop
fwait
popf
cmp
xchg
icebp
dec
into
jp
pop
out
xchg
pop
mov
(bad)
call
shr
retf
jno
pop
mov
or
or
xor
mov
sbb
pop
cmp
loop
adc
xchg
and
hlt
and
hlt
jecxz
cwde
popa
add
cmps
xchg
cdq
arpl
dec
cld
fild
enter
mov
mov
fiadd
lods
add
cmps
dec
xchg
adc
out
adc
mov
pop
sar
push
scas
test
or
adc
fisubr
sbb
iret
jmp
jnp
xor
jne
fcomp
xchg
dec
jmp
daa
push
push
pop
pop
and
fstp
movs
dec
mov
dec
rcr
daa
in
push
pushf
fstp
dec
popa
jne
or
jne
jge
mov
retf
imul
mov
mov
jnp
inc
test
in
arpl
mov
in
mov
jle
dec
mov
sti
aas
adc
dec
mov
arpl
movs
jle
pop
push
stos
push
lock
xchg
cmps
fist
add
sti
in
cmp
mov
push
adc
push
clc
ret
or
or
or
icebp
fbld
sub
repz
mov
stos
pop
sub
inc
push
(bad)
fidiv
or
xchg
dec
mov
fimul
adc
sahf
cli
sbb
data16
ss
adc
sti
mov
loopne
fistp
lock
or
pushf
(bad)
retf
sbb
pop
jno
cmps
ins
scas
ss
popa
data16
ret
cmps
dec
mov
shl
cmp
add
jno
jb
retf
jecxz
icebp
js
movs
xchg
stos
jmp
mov
lods
xchg
mov
xor
clc
sub
dec
inc
lds
int
and
sbb
iret
dec
push
inc
je
out
in
xchg
add
adc
arpl
in
iret
jge
je
or
sbb
lahf
loop
jle
and
dec
pop
call
(bad)
ins
mov
xchg
add
arpl
lods
xchg
xor
jecxz
cmps
cwde
cmp
push
call
inc
mov
mov
sahf
add
mov
jnp
mov
ret
out
das
and
inc
bound
cmp
push
jno
(bad)
sub
sbb
cmp
aaa
icebp
push
lods
mov
lahf
(bad)
rol
jne
(bad)
daa
repz
dec
call
daa
dec
dec
das
adc
xor
sub
push
retf
mov
aaa
test
movs
and
xor
inc
and
pop
xchg
push
mov
sbb
or
sbb
out
pop
mov
dec
aaa
pop
add
and
(bad)
rol
fstp
sbb
hlt
arpl
in
in
addr16
ins
mov
dec
adc
xor
lss
cli
(bad)
shl
loopne
mov
mov
dec
pusha
call
or
aaa
or
ja
mov
mov
add
mov
cmp
sahf
cli
out
in
mov
dec
sbb
cmovb
mov
(bad)
sbb
clc
sar
lods
push
add
push
retf
or
int
jo
and
mov
out
push
inc
mov
jle
cmp
btr
xchg
or
mov
xchg
xchg
or
push
fistp
ja
mov
cmps
sti
sti
ss
push
xchg
cmp
sbb
in
jp
inc
adc
jp
ret
repnz
imul
clc
in
fwait
xor
and
dec
in
cmps
mov
dec
stos
push
sbb
push
mov
sbb
jne
retf
add
cmp
pop
push
xchg
movs
cwde
shl
mov
xchg
xor
lds
xlat
imul
adc
cmp
mov
clc
and
and
dec
out
mov
cmp
ins
xchg
fcmovu
call
sub
mov
xor
fdiv
xchg
icebp
push
pushf
add
sti
xchg
ins
loope
lods
mov
test
mov
xadd
into
(bad)
popf
sub
seto
stos
adc
jns
dec
scas
mov
(bad)
dec
shr
test
repz
inc
int
fiadd
xchg
lods
push
ds
cdq
ret
cmp
lock
xchg
(bad)
rcr
xor
push
push
in
inc
pop
sbb
hlt
or
iret
aad
xor
ins
mov
ins
into
push
stc
gs
mov
rcr
inc
cs
dec
out
pop
dec
adc
mov
jbe
mov
stc
shr
jp
or
repnz
addr16
push
icebp
push
xor
add
xlat
dec
not
cmp
xor
popa
es
cwde
jp
loop
ficomp
movs
lahf
shr
jle
mov
sbb
cmps
dec
popa
call
cld
movs
push
cmps
add
add
mov
call
dec
mov
aam
mov
(bad)
enter
inc
inc
(bad)
cmp
mov
repz
adc
inc
cdq
pushf
sbb
jmp
les
mov
cmp
mov
(bad)
cmc
cmp
inc
push
and
add
cmp
xchg
pop
aam
xor
cmps
aad
frstor
pop
mov
(bad)
dec
sbb
shl
mov
mov
jmp
out
gs
sub
mov
fdivr
and
adc
(bad)
ror
inc
pop
icebp
fwait
mov
movs
inc
xor
xchg
mov
rcl
inc
lds
test
(bad)
scas
mov
jmp
jge
mov
mov
mov
bound
je
sub
mov
outs
add
outs
push
dec
jb
cmp
dec
add
cdq
cmp
shr
sbb
mov
cmps
ret
pop
lods
xor
inc
cmc
cmc
jo
xor
dec
or
add
sub
sub
lahf
cmp
je
sub
pushf
jmp
mov
rol
les
test
mov
xchg
and
inc
lahf
adc
mov
ror
aas
imul
push
push
fdiv
adc
xchg
mov
xchg
mov
jg
push
(bad)
lods
mov
jp
xlat
pusha
cli
not
ss
stos
hlt
mov
leave
jo
or
cwde
aam
imul
dec
pop
std
mov
test
ds
sub
out
into
mov
pop
les
and
pop
pop
xor
push
cdq
test
test
mov
iret
stos
xor
test
loop
into
adc
in
jno
std
into
xor
jle
jle
mov
and
inc
and
cmp
icebp
out
inc
repnz
data16
bound
aaa
fiadd
cvttps2pi
jp
and
cdq
nop
pop
and
add
imul
retf
sub
jmp
cwde
xchg
shl
(bad)
popa
push
into
rcr
jl
out
xchg
push
popa
enter
adc
inc
movs
xor
adc
or
cmp
sbb
inc
and
dec
mov
not
jle
fwait
add
push
loope
or
loop
test
es
loopne
movs
cli
jno
adc
inc
pop
or
popa
mov
pop
(bad)
jmp
pop
jo
inc
(bad)
shr
push
cmps
leave
xchg
sub
dec
les
push
punpcklbw
pusha
call
sbb
or
mov
dec
cmp
shl
iret
dec
xlat
int
enter
in
jmp
add
xchg
dec
pop
cdq
inc
lea
mov
pusha
inc
xor
xchg
icebp
(bad)
and
cld
stos
push
fldcw
jg
add
add
mov
jbe
mov
movs
xchg
jb
add
loop
jno
inc
and
fisttp
les
sbb
and
out
cli
mov
cmp
stos
das
sub
fisttp
mov
mov
cmps
fld
cld
pop
dec
lock
sti
(bad)
jne
mov
mov
push
stos
xchg
inc
aad
retf
ins
(bad)
mov
cwde
fdivr
mov
loop
ffree
lahf
and
icebp
dec
jb
mov
jge
hlt
(bad)
mov
mul
and
pop
cli
arpl
in
add
sbb
fdecstp
cwde
(bad)
push
mov
shr
cli
mov
push
retf
adc
cmps
sbb
jp
jmp
and
les
out
fwait
xlat
cmps
cmp
aas
jl
imul
fdiv
push
inc
lahf
xor
mov
(bad)
xchg
jb
out
mov
mov
sbb
(bad)
jmp
mov
xor
repz
iret
aaa
dec
je
in
shr
cmps
gs
imul
stos
in
sub
xor
mov
mov
ficomp
mov
or
adc
add
sahf
(bad)
push
pop
jno
xor
cwde
cli
(bad)
mov
xor
mov
mov
hlt
inc
pop
ficom
adc
inc
cmc
inc
pop
out
lds
ret
dec
cmp
inc
loope
xchg
cmp
add
mov
add
pmulhw
add
mov
inc
adc
mov
enter
dec
or
cmp
sbb
lahf
cmp
sub
jno
(bad)
pop
stc
mov
push
je
mov
xor
sub
jnp
add
ficomp
mov
pop
mov
mov
xchg
push
xchg
jno
mov
inc
mul
outs
fidiv
mov
or
cmp
mov
push
aaa
cmp
cmp
sub
mov
stc
lea
pop
iret
inc
xchg
popa
xchg
inc
mov
popa
shr
sbb
sar
in
pop
fwait
push
add
sub
popf
std
loopne
jmp
inc
xchg
mov
add
aaa
jl
jne
or
jb
bound
fsqrt
test
jne
gs
rcr
test
adc
dec
call
aad
push
lock
cmps
or
fwait
mov
or
mov
xchg
pop
and
sub
jmp
ja
inc
loopne
cmc
mov
pop
cwde
mov
popa
fisubr
nop
jae
jo
xchg
enter
pop
(bad)
fistp
jle
js
lods
mov
cdq
jns
gs
jne
jb
push
aad
pop
or
loope
aam
inc
add
test
out
mov
push
aam
dec
push
mov
lock
pop
daa
test
add
clc
das
fwait
sub
xor
pop
cmp
cli
xor
xor
(bad)
test
mov
pusha
out
sub
xchg
mov
mov
mov
fdivrp
test
jo
test
inc
push
fld
mov
shl
scas
xchg
retf
stos
jb
inc
pop
scas
adc
rol
addr16
scas
nop
or
pop
cmps
fst
xchg
fld
test
int3
sahf
enter
jmp
(bad)
scas
enter
mov
xchg
shl
xchg
jne
mov
push
push
ins
adc
sub
cmp
loopne
sti
cwde
sahf
mov
dec
xor
(bad)
adc
dec
dec
add
in
imul
inc
(bad)
sbb
retf
xchg
pop
daa
enter
cmp
pop
xchg
and
mov
imul
cmc
cld
fcom
mov
cmp
mov
stc
rol
out
dec
adc
mov
loop
push
movs
pop
ror
in
cs
and
or
mov
dec
ret
movs
cmp
fnstcw
cld
clc
pop
dec
push
aam
xor
pop
cdq
inc
fild
das
adc
mov
in
sub
inc
ds
jmp
and
arpl
into
xchg
inc
dec
sub
cmp
test
imul
js
lds
jne
dec
fstp
inc
xchg
xchg
cmp
sbb
fmulp
(bad)
jmp
outs
outs
pop
mov
inc
inc
xor
sub
nop
mov
sbb
ins
fcmovb
rol
add
inc
jl
sbb
cli
cmps
mov
mov
jbe
jno
sub
dec
adc
dec
fbstp
sub
push
jp
and
cmp
xchg
dec
jp
out
mov
popf
pop
adc
popf
neg
fidiv
cdq
imul
js
cmp
mov
mov
popfw
adc
push
and
push
dec
inc
jmp
xchg
sub
shr
in
push
cwde
jo
push
pop
and
sbb
gs
(bad)
jp
dec
scas
mov
or
pop
sbb
icebp
aad
push
mov
arpl
push
data16
test
inc
cmp
repnz
sbb
and
out
nop
and
pop
sbb
aam
sbb
add
rol
xchg
icebp
aam
out
es
jno
mov
push
loopne
test
(bad)
dec
gs
shl
in
jmp
mov
sub
sub
jmp
xchg
pop
push
jns
mov
mov
sub
test
mov
pusha
inc
mov
stos
(bad)
test
adc
imul
push
inc
push
push
or
dec
outs
inc
sub
dec
jge
pop
pop
adc
into
xchg
xor
push
push
and
arpl
out
pop
dec
jo
mov
jge
pop
imul
leave
jge
or
retf
rcr
test
mov
jg
inc
or
mov
das
loop
repnz
pop
mov
(bad)
in
scas
in
rol
jg
pop
mov
aad
and
loope
outs
jg
cmp
cmp
shl
push
popfw
add
repz
(bad)
mov
sub
in
pop
inc
xor
rcr
in
iret
xchg
push
mov
jl
imul
xor
inc
fwait
push
xchg
(bad)
pop
add
les
jmp
imul
enter
sub
mov
jo
mov
mov
push
mov
cmp
into
adc
sub
call
retf
add
mov
shr
das
cmp
xchg
and
fstp
dec
ins
fs
rcr
fsubr
shl
popf
cld
fidiv
xchg
sbb
or
ins
lock
sub
inc
adc
inc
fnstenv
mov
bound
jg
jns
jae
mov
cmp
je
sub
stc
mov
or
cmp
mov
xor
outs
xchg
xchg
pop
push
dec
mov
adc
ja
sbb
in
sbb
jp
or
cmc
inc
xchg
or
leave
xor
lahf
push
ins
outs
jmp
jle
add
ins
hlt
or
mov
les
fdiv
std
out
adc
push
cmps
and
dec
push
push
sub
test
fstp
sbb
ret
cwde
mov
jl
pop
loop
es
cvtps2pd
(bad)
sub
mov
inc
mov
mov
mov
mov
pop
cmp
call
fwait
pop
aad
loop
adc
cmp
dec
dec
push
add
cmp
mov
fsubr
sub
ds
adc
(bad)
mov
and
into
repz
fist
movs
in
cli
fisubr
inc
push
adc
rol
data16
in
xor
or
rcr
pushf
test
out
sbb
imul
or
fsub
ret
popf
out
add
pop
cs
fninit
enter
imul
outs
addr16
xor
xchg
int
dec
jbe
or
sub
ror
ins
jns
imul
dec
jo
out
mov
add
or
ja
mov
adc
(bad)
lods
pop
out
sub
adc
or
int
fs
pop
mov
dec
imul
repnz
jecxz
js
mov
ins
mov
dec
ficomp
das
outs
xor
xchg
inc
ret
jno
(bad)
outs
test
push
aam
push
jge
xor
int
mov
and
inc
or
mov
out
loop
dec
cmp
aaa
add
daa
add
xchg
sbb
cwde
mov
movs
mov
test
dec
sbb
push
mov
mov
(bad)
data16
or
push
popf
inc
xchg
lods
mov
popf
and
shl
push
and
cmp
xor
and
gs
and
pop
and
xor
mov
push
stos
iret
sti
xor
iret
mov
test
lahf
mov
xor
fdiv
aaa
xchg
adc
popa
or
xor
jmp
xchg
pop
add
and
pop
fcom
add
div
mov
bound
jae
movs
pushf
popa
lock
je
fidivr
fstp
popf
aaa
es
pop
mov
mov
sub
(bad)
test
repnz
mov
mov
movs
popf
and
and
mov
xor
stos
adc
xchg
mov
add
xor
aam
dec
test
cwde
or
mov
repnz
ja
add
inc
xchg
sbb
or
cli
mov
push
mov
or
fnsave
adc
push
sbb
call
lods
push
imul
aad
sub
xor
cmc
adc
enter
jne
inc
lock
ficom
or
inc
jl
out
cmps
pop
mov
ret
mov
cmc
fisttp
cmp
dec
xor
shl
call
and
jo
fadd
daa
addr16
imul
mov
ss
add
test
std
cmp
push
les
or
imul
movs
fsubr
push
(bad)
not
sub
inc
push
push
js
jmp
pop
retf
dec
sub
cwde
sbb
je
(bad)
ss
(bad)
sti
mov
push
sbb
add
jmp
leave
add
sub
dec
inc
xchg
sbb
popa
cmp
add
in
retf
push
inc
and
pop
es
push
push
dec
mov
cmp
mov
pop
xchg
je
inc
shl
xchg
mov
xor
(bad)
mul
fcom
(bad)
jno
loop
leave
(bad)
leave
in
dec
adc
imul
jge
std
(bad)
(bad)
jmp
inc
or
iret
dec
pop
cmps
shl
push
mov
inc
loope
jns
mov
iret
adc
repz
pop
pop
enter
ins
out
xchg
ror
sbb
lods
outs
out
jmp
dec
sti
push
lahf
push
stc
cs
fld
lahf
dec
mov
aam
enter
cmp
test
retf
int
iret
pusha
push
adc
adc
inc
jbe
xor
pop
sbb
outs
or
das
in
ret
in
mov
(bad)
sahf
adc
push
adc
xlat
fld
loopne
mov
sbb
rol
mov
aam
lods
pop
lahf
lods
sbb
jmp
popa
jmp
xchg
shl
jmp
arpl
aam
test
daa
push
sbb
mov
cwde
sbb
add
les
sub
cld
push
test
xchg
(bad)
in
(bad)
ret
inc
mov
sub
inc
or
cmc
clc
icebp
loope
push
jl
aas
std
xlat
xor
mov
repnz
int
jl
adc
sub
xchg
xchg
or
or
mov
out
ds
jno
cmps
fnstcw
jns
out
(bad)
lock
jo
jo
cli
retf
in
daa
test
lock
pushf
jnp
pop
fisttp
push
pop
cmp
sbb
int3
test
popa
push
mov
mov
mov
sar
jnp
cmp
sbb
imul
jmp
mov
and
sbb
or
dec
push
enter
inc
aam
in
mov
xor
(bad)
push
jge
and
rol
sub
sbb
lods
inc
test
js
jb
and
fwait
sbb
adc
jl
inc
pop
aaa
enter
outs
retf
jmp
push
pop
sar
pusha
jns
sbb
add
js
mov
pop
inc
arpl
or
pop
pusha
mov
and
xchg
cmp
mov
addr16
push
dec
push
xchg
xor
jg
das
cmc
mov
retf
(bad)
stc
lds
nop
cdq
jmp
pop
cs
mov
sub
jb
and
mov
adc
fxch
inc
fldcw
mov
push
adc
jnp
int3
scas
jno
inc
xor
or
test
pop
cdq
test
mov
out
loopne
cli
or
ret
fbld
leave
and
adc
sti
jecxz
add
outs
ret
(bad)
ror
mov
xchg
mov
or
pusha
lods
mov
xor
pop
mov
loop
adc
jecxz
shl
ror
or
cmps
cmp
repnz
mov
inc
push
or
cmp
fwait
popa
push
mov
not
les
adc
int3
xchg
popa
mov
stos
jae
imul
inc
jbe
fisttp
pop
outs
test
jmp
push
pavgb
xor
and
lock
xor
int
mov
test
jbe
sub
adc
pop
fisub
mov
mov
xchg
movs
cmp
(bad)
and
adc
ret
addr16
popa
fldenv
xchg
out
imul
dec
inc
out
mov
mov
addr16
jg
les
cmp
lock
push
cwde
inc
iret
or
mov
xor
fst
inc
out
mov
cmps
jge
cmps
sbb
leave
mov
sub
loopne
scas
sbb
mov
fwait
imul
mov
adc
iret
xchg
inc
mov
fidivr
xchg
shr
xchg
stos
sar
(bad)
out
xchg
xchg
stos
sti
xor
mov
add
retf
pop
mov
scas
popa
push
pop
xchg
xor
inc
mov
ja
cmps
outs
jne
stc
adc
mov
mov
out
inc
mov
or
in
loopne
cmc
jb
xlat
pop
mov
retf
or
and
je
xchg
xchg
cmps
sbb
xor
dec
je
add
jle
(bad)
sub
sub
inc
gs
aas
movs
jbe
and
into
push
lea
push
sub
iret
adc
loope
cmp
add
sti
test
ds
fs
aas
daa
(bad)
push
(bad)
ficomp
inc
sub
jg
sbb
jmp
fiadd
adc
iret
nop
and
je
cmp
cmps
not
or
and
pop
inc
jge
xor
loopne
and
lock
or
addr16
fnstcw
mov
push
mov
xchg
enter
push
push
retf
shl
jmp
mov
data16
jno
je
lahf
adc
sbb
scas
ret
cmp
out
int
adc
fcomip
lods
push
repz
dec
in
mov
mov
adc
adc
outs
cld
and
test
hlt
sub
jnp
mov
rcr
xchg
out
sub
scas
fbld
xor
pop
xor
imul
fwait
(bad)
out
cmp
mov
(bad)
ins
bound
and
ins
ret
je
out
sub
jle
xor
pop
pop
out
fcmovbe
popf
ins
ss
retf
jno
sub
fldenv
lods
jg
test
lea
xor
imul
ins
dec
rcl
outs
cmps
mov
push
shr
push
and
fdivr
sbb
(bad)
icebp
in
or
xor
mov
pop
jp
call
mov
sub
imul
test
mov
paddq
scas
pop
cs
loope
pop
fnstcw
push
inc
mov
outs
dec
ret
push
lods
inc
mov
sub
sbb
and
bound
pusha
mov
cdq
cli
or
jbe
add
int
lods
add
addr16
mov
jl
retf
gs
cs
pop
dec
push
cli
xchg
in
mov
sbb
sub
mov
repz
fsubp
adc
shr
imul
mov
fist
mov
dec
push
cmp
(bad)
(bad)
mov
and
push
cmp
lods
mov
jnp
fst
loope
fild
daa
enter
in
pop
inc
sub
lea
push
nop
scas
pop
out
out
jmp
fiadd
(bad)
mov
push
rcl
inc
push
mov
fnsave
jno
std
mov
push
outs
mov
pmulhw
dec
out
dec
xchg
(bad)
pop
lahf
loope
jbe
jmp
rcl
mov
jns
leave
(bad)
mov
xchg
inc
(bad)
shr
xchg
mov
outs
sbb
xchg
je
pop
adc
out
das
imul
sbb
in
xor
push
loopne
mov
and
das
test
enter
addr16
jo
mov
fwait
dec
rol
push
pop
stc
add
fmul
(bad)
aaa
sub
add
loop
fistp
sub
mov
into
sub
out
inc
push
std
mov
fisttp
stos
lods
mov
add
arpl
pop
cmp
ret
mov
mov
clc
imul
mov
jmp
retf
dec
xor
pop
mov
shl
inc
frstor
movs
xchg
fnstenv
mov
and
lds
fstp
mov
mov
xchg
or
dec
or
fnstenv
into
hlt
lock
push
loopne
sbb
xor
add
arpl
cmc
cwde
mov
jge
lods
pop
mov
push
cmps
mov
sub
and
leave
not
add
adc
jmp
sbb
int3
nop
xor
in
xor
lahf
or
jbe
inc
xlat
inc
or
test
adc
(bad)
inc
push
sub
ss
(bad)
jp
xor
xchg
adc
sub
lea
ret
mov
mov
sub
mov
jl
js
call
ss
(bad)
fnsave
lock
sbb
add
in
scas
test
push
add
mov
pop
adc
lods
inc
mov
jbe
lea
mov
gs
mov
jl
lods
(bad)
mov
mov
js
je
mov
sbb
push
xlat
sbb
test
cmps
ror
mov
out
ins
inc
jae
pop
stc
add
mov
sub
or
test
fwait
inc
ins
and
and
and
js
push
(bad)
sbb
adc
out
iret
sahf
lods
adc
pop
cdq
movs
popf
pop
pop
lea
mov
pushf
scas
mov
xchg
sub
in
jecxz
sbb
inc
cs
pop
push
shl
or
mov
mov
call
mov
mov
icebp
in
mov
mov
arpl
jmp
icebp
aaa
out
cmps
es
hlt
jns
mov
pop
stos
sbb
mov
cmp
stos
cmps
in
ds
jmp
mov
inc
lds
adc
push
test
mov
fsub
jge
ss
add
bound
sub
test
fcomp
iret
ds
cs
xchg
or
and
fidivr
stos
jg
cmps
xchg
mov
int
or
mov
dec
dec
dec
xchg
cdq
scas
adc
inc
hlt
jo
clc
aaa
push
iret
loopne
cwde
daa
rcr
xchg
push
sub
pop
xor
inc
cmps
and
(bad)
mov
xlat
jnp
cmps
imul
mov
addr16
xchg
in
push
fdiv
neg
jl
ficomp
jmp
ja
not
xor
aam
sub
xor
mov
pop
fisubr
push
mov
xlat
(bad)
adc
xor
inc
dec
sbb
jecxz
add
icebp
ins
mov
(bad)
inc
popa
dec
sbb
cmp
aad
mov
retf
rcl
mov
in
lods
inc
add
add
xor
stc
aam
lods
mov
jae
retf
or
push
data16
inc
movs
sbb
pop
cmp
das
sti
and
repz
sbb
cmp
mul
push
dec
imul
pop
xor
jle
jecxz
jno
add
cmc
repnz
adc
inc
adc
icebp
mov
mov
dec
xor
addr16
in
xchg
and
shl
inc
les
push
bnd
pop
scas
dec
loop
inc
std
lds
aad
dec
mov
mov
xchg
or
sbb
dec
outs
sti
loop
dec
cmp
push
jbe
imul
stos
jmp
mov
jns
fst
pop
jbe
or
ret
out
in
ds
fsub
xchg
mov
sub
fisttp
or
out
jo
(bad)
pop
scas
(bad)
mov
outs
stos
xor
mov
sub
stc
fdiv
sahf
gs
or
nop
mov
das
lds
pop
xchg
xchg
out
shl
mov
and
pop
jbe
int
xchg
dec
into
cmp
dec
cmps
inc
mov
outs
hlt
mov
or
out
jns
ret
loop
inc
sbb
cli
ins
push
out
sbb
sub
jnp
rol
pop
adc
daa
sbb
(bad)
and
dec
pop
or
xor
lods
jle
xchg
jnp
push
pop
mov
inc
sahf
mov
test
xchg
ss
mov
mov
ror
repz
cmps
sbb
out
inc
(bad)
cmp
xor
test
gs
pop
jno
mov
push
inc
das
push
das
aas
dec
fmul
lods
aas
inc
stos
add
cmps
into
adc
cdq
mov
jp
cmp
or
das
shr
push
jecxz
cmp
mov
adc
sbb
push
repnz
dec
push
inc
movs
(bad)
aaa
daa
mov
jecxz
inc
add
add
scas
pop
pushw
rol
adc
dec
adc
sub
jb
pop
dec
sub
push
adc
jnp
daa
(bad)
out
sub
push
sahf
jmp
shr
clc
mov
push
push
push
adc
xor
push
xchg
fcmovne
jo
js
xor
pop
xchg
imul
dec
movs
or
je
pop
dec
out
dec
rol
arpl
shr
mov
arpl
(bad)
das
push
bound
das
dec
call
jo
cmp
(bad)
aas
lods
pusha
xchg
push
das
inc
repnz
push
mov
jne
cmp
ins
fs
pusha
xchg
movs
add
dec
retf
push
and
and
inc
and
rcl
sbb
sar
bound
(bad)
adc
cld
xor
pop
add
je
cmp
stc
push
mov
jnp
test
mov
fidivr
rcr
lods
pop
mov
mov
bound
dec
imul
xor
scas
cmp
bound
or
push
in
mov
pop
pop
das
or
test
and
daa
adc
fwait
dec
leave
pop
cwde
out
pop
retf
push
sub
outs
sub
stos
pop
lods
jb
xor
popa
cmc
out
fidivr
xor
xchg
or
sti
out
pop
inc
mov
xor
test
adc
dec
lods
xor
out
test
test
mov
sbb
ror
and
pop
mov
in
xchg
repz
pop
sbb
xchg
and
cmps
cmps
cld
mov
adc
xchg
or
outs
pop
je
or
rol
mov
ret
sahf
sub
out
sub
xchg
push
dec
jns
fnstsw
idiv
pushf
mov
sbb
sbb
mov
adc
dec
jae
ret
test
inc
in
aam
sub
cdq
cmp
jmp
pusha
fwait
jp
mov
sub
ds
or
and
add
xchg
pop
cmp
imul
fistp
aam
movs
ror
sbb
stos
xor
lahf
jae
sub
les
int
mov
icebp
inc
int3
dec
add
das
and
jo
mov
xchg
fstp
inc
pop
pop
jae
iret
push
inc
pop
das
push
sub
or
push
fsub
xchg
lods
aaa
fnstcw
sbb
or
fsub
push
jg
jecxz
or
icebp
mov
mov
sub
ja
xchg
(bad)
cmp
fs
ret
cmp
cmp
test
add
mov
sbb
emms
outs
loopne
inc
idiv
jmp
adc
mov
loop
and
sbb
fwait
nop
popa
and
adc
fsubp
mov
dec
sar
repnz
mov
into
(bad)
xchg
ins
pop
addr16
push
and
test
repz
cmp
and
mov
xchg
push
jbe
cli
pop
mov
sub
mov
fcomp
cwde
(bad)
pop
inc
mov
cmps
adc
and
fwait
push
mov
push
and
inc
or
nop
jae
sahf
mov
scas
jb
outs
inc
adc
test
mov
std
jmp
sbb
dec
test
cmps
jbe
lods
pop
sub
mov
int3
pop
or
jns
pop
and
out
push
inc
jle
xchg
sbb
xchg
call
inc
fdiv
pop
push
cli
rol
jg
add
or
sbb
jp
jno
loopne
test
pop
push
ret
je
cmp
mov
xchg
jge
loopne
int3
aad
gs
sti
mov
inc
pop
shl
push
test
fsubrp
pop
fs
lds
jge
aam
mov
jmp
mov
in
fild
mov
rcr
repnz
test
push
pop
and
inc
jbe
push
mov
mov
xchg
mov
mov
xlat
or
add
stos
iret
dec
ja
mov
scas
pop
xchg
mov
dec
mov
stos
push
jmp
lahf
daa
mov
xchg
stc
fidiv
inc
push
(bad)
enter
cmp
sub
or
xor
push
scas
aas
dec
cmps
int3
push
aas
mov
push
push
fcmovnb
into
lea
adc
les
sbb
sub
sbb
mov
outs
les
dec
add
mov
int
hlt
or
cld
xor
add
nop
add
inc
and
daa
jecxz
sbb
push
fbstp
arpl
daa
sub
shl
imul
in
mov
fnstcw
cmp
adc
aam
or
cmp
cdq
sbb
(bad)
(bad)
fisub
mov
sub
repz
adc
cdq
sub
cs
outs
loopne
lods
(bad)
jecxz
cmp
repz
call
jmp
pushf
jo
jecxz
or
test
xlat
imul
dec
je
fstp
inc
or
inc
rcr
or
cmp
push
scas
fistp
pop
xchg
scas
call
push
pop
pop
lahf
mov
or
mov
jecxz
out
dec
or
nop
rol
ror
call
jmp
mov
popf
push
daa
pop
cld
std
mov
inc
mov
jmp
(bad)
xor
pop
jp
in
inc
ret
sub
mov
loope
aad
lds
mov
mov
nop
cwde
fld
mov
cs
cs
lea
ret
mov
jmp
enter
dec
(bad)
push
pop
xor
push
cs
sar
add
push
dec
test
enter
aas
xor
add
outs
mov
mov
push
ror
shl
add
cld
pop
imul
icebp
push
xchg
cwde
dec
outs
xlat
lock
add
mov
cli
dec
lods
aaa
std
push
and
les
inc
clc
pop
or
sub
test
add
xchg
jno
shl
data16
ds
pop
adc
jle
arpl
dec
inc
adc
popa
jno
push
test
fisub
ret
jmp
mov
out
icebp
push
push
std
jecxz
sbb
or
test
mov
cmp
dec
xchg
mov
mov
mov
dec
dec
(bad)
test
fcom
in
push
mov
cmp
into
enter
dec
addr16
out
xchg
pop
jmp
jge
adc
je
loopne
mov
popf
(bad)
iret
sub
pop
xchg
cmp
sub
inc
mov
xor
jae
push
sub
cli
test
mov
jae
push
mov
xchg
lea
xchg
push
scas
and
aas
sub
call
cli
jg
adc
mov
cmp
push
lods
in
jp
pop
xor
sbb
cmc
shl
mov
lock
pop
ret
and
or
jmp
sbb
shr
pop
xchg
dec
out
push
cmps
jp
sbb
test
div
jmp
jge
(bad)
fs
shl
inc
leave
push
jl
aaa
test
stc
call
aad
push
cmp
xor
dec
pop
out
fmul
popf
fild
seta
mov
push
mov
inc
pop
mov
pop
sti
out
sahf
cli
add
pop
es
cmp
dec
cmp
pop
(bad)
push
xchg
and
mov
or
rol
outs
sub
test
ss
inc
mov
loope
and
sbb
mov
das
ins
outs
hlt
not
sbb
inc
pop
jns
mov
cmp
cld
ss
xchg
call
sub
inc
mov
test
mov
dec
stos
stos
out
ins
je
in
xchg
iret
jge
jg
mov
mov
scas
inc
jg
int
les
test
fcos
icebp
inc
bound
sbb
pushf
fild
adc
sub
repz
add
xchg
xchg
aaa
(bad)
aaa
popa
mov
adc
pop
add
(bad)
aad
mov
fisubr
ret
lods
and
xlat
jnp
pusha
cmps
popa
iret
jmp
addr16
loope
inc
icebp
push
push
add
fs
imul
mov
fmul
popf
test
fidivr
pop
outs
test
je
int3
retf
fwait
jb
cmp
or
xor
sbb
xor
xchg
sub
adc
push
sub
sub
les
sbb
int
call
adc
cmps
shl
cmp
sub
loop
aaa
in
jmp
movs
rol
ins
jnp
cmp
and
sbb
add
mov
icebp
dec
loopne
int3
out
dec
lods
dec
dec
or
shr
mov
adc
xor
xchg
ror
jecxz
mov
adc
push
retf
pop
les
scas
dec
xchg
lea
jg
or
sar
and
jae
sub
ins
repz
and
inc
outs
fbstp
and
mov
popa
push
dec
(bad)
or
push
mov
sahf
nop
cmp
fcomip
mov
daa
sub
ret
xor
fs
mov
jmp
popa
jl
ja
imul
data16
scas
inc
xchg
in
or
loopne
mov
stos
dec
push
cdq
push
stc
sbb
ins
jp
mov
jo
push
fisub
lahf
mov
jp
dec
xor
mov
inc
and
mov
scas
inc
cld
imul
jmp
popa
je
pop
mov
sub
cdq
xlat
and
daa
into
arpl
das
and
call
mov
movs
jecxz
adc
mov
inc
sar
je
jmp
sbb
push
mov
(bad)
iret
test
push
dec
loop
jb
jmp
mov
jle
or
mov
mov
iret
stos
call
ret
pusha
mov
cmp
push
aas
xchg
mov
outs
cmp
test
arpl
cmp
repnz
mov
jbe
push
retf
test
inc
pop
retf
jae
mov
pop
sbb
sbb
imul
pop
pop
aad
inc
loope
ja
xor
jo
mov
mov
or
push
sub
call
rol
repz
push
mov
setne
push
outs
push
ins
pusha
sbb
call
in
test
sub
sbb
adc
pushf
pop
aad
aaa
sub
cmp
data16
and
in
xchg
jo
shl
nop
js
pop
inc
jno
adc
jno
xchg
jle
js
or
cld
int
jp
push
pop
pop
pop
cs
into
adc
mov
repnz
lahf
aaa
sbb
(bad)
push
push
cmc
int
lock
mov
xor
arpl
fsub
int
outs
ins
rep
mov
xor
add
mov
dec
jno
fld
lods
xchg
pop
or
mov
xor
or
jae
pop
and
jecxz
je
pop
inc
repnz
lods
dec
adc
outs
or
(bad)
push
push
adc
mov
cmps
mov
jae
mov
sbb
test
(bad)
(bad)
loope
rcl
movs
jne
cmp
mov
stc
fwait
sbb
dec
pusha
out
inc
shl
nop
push
adc
push
je
hlt
and
dec
shr
dec
sub
clc
xor
cli
dec
fisub
mov
ja
mov
in
scas
add
push
inc
shl
xchg
loop
cmp
stos
loopne
pop
jae
mov
ins
add
mov
in
es
jbe
and
jmp
push
push
sub
or
jae
rcl
dec
leave
repz
sbb
mov
xchg
push
shl
data16
das
and
test
inc
inc
add
xchg
cmp
in
and
arpl
aad
jecxz
stos
retf
sub
ins
sbb
cmovno
inc
xor
jnp
jns
mov
stos
in
push
mov
int
dec
sub
test
stos
out
int3
iret
add
lods
sbb
stos
add
dec
iret
fimul
dec
pop
in
call
ins
dec
jp
shl
inc
mov
fwait
ret
xor
or
mov
(bad)
lds
out
mov
call
test
rcl
and
pop
xor
xchg
(bad)
popa
in
pop
out
inc
inc
add
or
rol
cmp
xchg
mov
push
js
mov
outs
lods
or
ret
and
imul
clc
pop
stos
jmp
mul
pop
push
clc
mov
pop
and
jg
jno
push
int
dec
cmp
cmp
xchg
pop
lea
test
call
dec
xchg
fxch
sar
mov
jecxz
mov
jb
sbb
and
aaa
mov
lds
add
mov
fmul
movs
jo
lods
out
out
into
jbe
or
mov
sub
mov
daa
and
xchg
repnz
or
mov
or
fadd
cmps
jb
shl
scas
fnsetpm(287
xchg
mov
dec
stc
push
sti
dec
sub
call
dec
fstp
mov
inc
xchg
jmp
adc
arpl
ret
jge
cwde
mul
test
aas
cmp
adc
lods
mov
jo
push
lods
xor
ss
jno
dec
inc
xlat
icebp
test
pop
adc
sub
cmc
sahf
mov
es
dec
ret
sub
xchg
test
ins
pop
rcr
imul
mov
jbe
xor
inc
jg
out
pusha
fisub
sbb
mov
and
in
imul
xlat
fdiv
xchg
xlat
sbb
or
in
cld
mov
seto
mov
stos
mov
dec
jp
inc
mov
push
aas
xlat
ds
std
fnstsw
pop
ret
push
cmp
ror
inc
movs
out
jge
idiv
xchg
or
lea
aaa
add
xchg
out
cmps
xor
rcr
jno
cwde
sbb
in
rcl
imul
pop
popf
sub
loop
dec
xchg
jns
das
or
add
sub
mov
int
mov
shl
cmp
arpl
(bad)
fcomp
aas
inc
inc
jle
pop
mov
in
mov
pop
cmp
xchg
xor
icebp
and
xchg
cwde
cmpps
retf
fld
out
hlt
jnp
push
sbb
ins
cmps
cmp
aam
xchg
dec
jbe
mov
repnz
mov
adc
pop
cmp
xlat
mov
vcvttps2dq
mov
pop
pop
ds
xchg
xchg
ret
std
inc
or
jge
icebp
int
jae
mov
mov
xchg
sub
(bad)
xchg
jns
mov
mov
xor
ror
jmp
add
inc
sbb
and
xchg
out
dec
pop
repz
sar
into
loope
dec
repnz
es
fcmovnb
mov
pop
add
fstp
push
mov
scas
push
add
xchg
xor
or
je
xor
inc
je
loope
call
mov
cs
out
xor
aam
inc
sbb
adc
dec
mov
sub
inc
push
test
cmp
enter
dec
xchg
jmp
dec
cmps
pop
sub
lea
arpl
cmp
and
out
push
icebp
mov
repz
xor
mov
retf
mov
jns
cs
mov
(bad)
scas
lea
out
ss
stc
jae
in
cmp
xchg
inc
jo
mov
mov
fcomi
jmp
mov
loope
xchg
les
loope
xchg
test
cdq
add
js
add
imul
pop
push
jp
int3
out
stos
repz
cmp
cs
adc
xlat
inc
lea
and
das
int3
into
(bad)
pop
mov
xchg
jp
lahf
jmp
or
outs
mov
call
fwait
out
mov
test
cmc
pop
cwde
adc
gs
inc
out
adc
fidivr
add
int3
jne
pop
das
mov
cmp
or
push
leave
push
mov
fbld
ss
cmp
lahf
xchg
push
call
dec
cmps
bound
sub
imul
sub
icebp
shr
dec
xor
xor
or
fwait
daa
sahf
xlat
js
mov
cmps
stos
pop
std
shl
outs
movs
in
push
aaa
fcomp
pop
test
mov
stos
loopne
dec
lods
pop
xor
cmps
cmp
mov
xor
xchg
xlat
stos
mov
dec
in
psubw
pminub
shl
inc
into
pop
cmc
movs
xchg
xor
mov
ja
and
or
sbb
xchg
call
addr16
mov
ret
mov
xor
pop
stos
fs
ficomp
scas
loopne
icebp
xor
jle
jbe
push
mov
mov
call
xchg
pop
aaa
mov
cs
sbb
nop
fiadd
mov
dec
test
dec
jle
pop
fisubr
add
into
(bad)
ds
add
jl
fisubr
loope
push
push
xchg
add
pop
(bad)
call
sub
xchg
fwait
lahf
inc
shl
sahf
mov
les
enter
scas
push
retf
xlat
out
push
cs
mov
mov
mov
js
stos
jge
or
mov
dec
xchg
jge
adc
cmp
aaa
xor
movs
les
push
inc
int3
les
xchg
adc
out
fucomp
push
pop
sbb
je
retf
adc
mov
mov
jae
imul
dec
push
or
imul
sub
jle
xchg
pop
mov
int
in
mov
sti
movs
ins
and
mov
xor
jnp
xchg
push
aad
sti
push
dec
call
(bad)
sti
clc
(bad)
jo
dec
aas
sbb
adc
lea
pop
jg
add
add
jae
inc
frstor
dec
je
pushf
gs
xchg
mov
and
scas
push
mov
aad
cmp
xchg
xchg
movs
xchg
clc
and
fxam
adc
adc
push
mov
add
pop
sub
mov
push
xlat
pop
mov
xchg
xchg
jmp
je
mov
sbb
cmp
cld
and
fnstcw
imul
dec
sar
(bad)
jecxz
push
js
ja
xchg
mov
shl
out
outs
(bad)
and
inc
adc
gs
mul
sub
sbb
inc
sub
sbb
xchg
fld
sbb
fdiv
cmp
sub
add
pop
jecxz
xlat
jbe
mov
imul
mov
push
pushf
(bad)
jl
jge
or
pop
fsubr
in
sbb
mov
lods
cmp
and
test
fnstsw
ss
lahf
inc
xor
leave
sub
mov
sahf
dec
pop
lahf
dec
jo
mov
loopne
jne
in
dec
and
jmp
push
xor
sub
mov
cmp
and
(bad)
rcr
int
mov
adc
jmp
xor
inc
adc
sub
in
dec
fcmovb
sub
pop
ins
mov
push
popa
and
and
lods
gs
(bad)
mov
mov
fidiv
adc
jne
loope
out
or
adc
shr
dec
dec
icebp
sahf
test
dec
loope
outs
stos
call
cmps
fimul
xor
cmps
call
adc
push
movs
inc
mov
call
pop
sbb
pop
sbb
fidiv
loopne
add
push
and
inc
jo
stos
add
push
arpl
stos
cmp
sub
pop
mov
aaa
lds
fcmovnbe
xchg
in
mov
in
push
jmp
jg
or
bound
jne
jmp
outs
dec
loope
lea
enter
daa
retf
jl
(bad)
icebp
xlat
dec
pop
cmp
inc
sub
xor
pusha
push
and
mov
leave
or
sbb
cmp
mov
or
push
xchg
stc
mov
outs
inc
lea
cmp
pop
sar
leave
(bad)
outs
sub
fcomp
movs
mov
in
popa
jl
and
cmp
lahf
cmc
mov
mov
xor
xchg
aad
in
ror
pop
sub
push
repnz
inc
popf
pop
dec
mov
and
jge
sti
ret
pop
mov
out
mov
inc
fwait
in
ret
adc
bound
adc
mov
loopne
mov
jo
int3
sbb
repz
mov
pop
mov
call
jno
xor
adc
dec
les
mov
pop
daa
cmp
mov
pop
xchg
cmp
inc
push
and
adc
xchg
mov
cmps
rcl
out
dec
or
not
leave
and
movs
je
arpl
popf
adc
stos
lahf
jnp
sub
push
sub
push
jbe
ret
pop
jnp
dec
cwde
outs
push
mov
xchg
xchg
mov
pop
imul
cmc
pop
xor
cld
enter
xor
lahf
and
mov
retf
pop
(bad)
cli
aam
cmp
jbe
cmc
(bad)
mov
outs
std
(bad)
adc
push
lock
ror
cmc
mov
jecxz
test
sub
sbb
xchg
xor
pusha
lea
(bad)
in
(bad)
aad
mov
gs
arpl
mov
test
ror
mov
arpl
(bad)
mov
repnz
cmc
in
and
ret
fmul
push
sub
adc
adc
call
push
hlt
pop
sbb
mov
add
cmps
ret
xchg
and
les
in
jecxz
xchg
jecxz
sti
cmpps
jno
xchg
fdivr
cmps
addr16
jae
push
aad
cmp
loop
dec
xor
mov
mov
pop
fsub
push
sbb
scas
push
ja
pushf
out
lds
clc
pop
jp
out
sti
inc
xchg
lods
jge
(bad)
test
jnp
pop
sbb
mov
jecxz
adc
dec
pop
cli
and
mov
pop
arpl
jmp
nop
jnp
pop
mov
adc
mov
inc
arpl
jl
cmp
sti
and
mov
mov
mov
jne
sahf
scas
cmp
enter
jnp
add
test
push
mov
xor
sub
popf
fadd
xlat
ins
test
adc
es
mov
add
das
jbe
adc
sbb
out
icebp
test
sti
jle
(bad)
sbb
loope
call
push
and
push
loopne
jmp
repnz
mov
int3
sub
inc
xchg
out
push
or
lds
bound
mov
mov
rol
iret
mov
shr
add
mov
sub
push
es
pop
inc
loope
cmp
dec
in
inc
fnstcw
push
dec
pop
sbb
lods
mov
jbe
out
cdq
sar
repz
cmp
push
lods
cmps
pop
data16
retf
sti
dec
push
dec
push
inc
imul
or
call
mov
sti
das
push
jno
jl
dec
fdiv
adc
call
pop
movs
and
pop
jnp
sub
hlt
jmp
jl
iret
push
ror
call
mov
ds
fst
out
mov
es
fmul
pop
stc
ficomp
or
ja
cwde
dec
aam
loopne
or
(bad)
ja
arpl
xor
mov
jnp
cmps
hlt
and
xchg
push
jno
xchg
xchg
jnp
xlat
push
xchg
jns
push
sbb
je
out
out
gs
pop
cmc
cmp
mov
sbb
sub
push
je
jns
ret
inc
inc
adc
adc
icebp
push
pop
inc
jns
nop
push
inc
dec
pop
mov
loop
xor
push
sbb
mov
or
jg
or
dec
jne
pop
aam
call
cld
mov
pop
xor
mov
ror
fmul
in
dec
dec
push
xor
push
jb
(bad)
fidivr
xchg
add
push
mov
into
add
rol
ja
dec
lock
xlat
inc
xor
outs
jecxz
test
jecxz
pop
mov
adc
pop
rcr
cdq
inc
xchg
jl
lods
daa
dec
push
shl
and
jmp
push
pushf
es
fcom
cmp
cwde
scas
pushf
fadd
cli
add
dec
into
push
push
sbb
lahf
in
jns
bound
addr16
inc
call
imul
or
in
mov
bound
sbb
xchg
mov
xor
push
or
cmp
loop
(bad)
loop
push
pop
add
fcmovne
mov
dec
mov
shr
inc
adc
pusha
and
hlt
lahf
mov
jno
popf
dec
mov
mov
sub
addr16
adc
push
and
call
sbb
adc
jge
cmp
scas
mov
mov
rol
jns
jle
xor
mov
or
push
sbb
sub
adc
iret
lods
xor
jge
cmp
push
mov
sub
inc
mov
cld
xlat
jne
retf
outs
xor
push
pop
icebp
clc
imul
jb
sbb
add
inc
push
leave
cli
jnp
mov
stos
push
test
jns
xor
mov
jle
pusha
movs
dec
call
jmp
fcom
callw
stos
ftst
jbe
lds
mov
std
xchg
aam
xor
mov
mov
outs
lock
cmp
test
test
add
fwait
mov
or
jns
adc
mov
in
pop
fld
mov
ins
push
mov
(bad)
ins
cld
data16
out
shl
sbb
mov
(bad)
popa
imul
xchg
mov
sub
mov
addr16
inc
test
and
(bad)
jge
add
or
movs
mov
inc
stos
retf
(bad)
stc
ins
iret
jns
cwde
push
repz
int3
fstp
call
mov
sbb
lock
out
pop
test
(bad)
push
push
clc
push
stc
fild
aaa
add
sar
xor
inc
adc
movs
nop
pop
jp
inc
mov
jbe
int
inc
pushf
jnp
sbb
xor
or
mov
inc
inc
mov
push
dec
xor
das
jg
stos
popa
cmp
fucomp
push
jl
mov
div
xor
adc
xor
imul
pop
stos
(bad)
fnsave
adc
mov
fs
dec
lock
rep
jmp
mov
js
xchg
jp
mov
cmp
test
outs
xchg
pop
push
push
stos
cmp
push
sbb
cmc
not
aaa
rol
(bad)
adc
sar
and
cmove
jp
icebp
push
pusha
(bad)
retf
and
in
test
inc
or
ins
aaa
shl
mov
push
test
adc
mov
or
fstp
rol
test
mov
repnz
mov
popf
jne
clc
clc
mov
sbb
js
cmps
test
xchg
ror
dec
lahf
pop
jb
or
stos
adc
fiadd
sub
fisttp
out
jmp
jp
outs
call
cmp
mov
or
cwde
ins
cli
out
popa
pop
(bad)
fsubr
sbb
pop
sbb
pop
xor
cmps
aaa
pop
jmp
pop
add
push
mov
cmp
pop
cmps
jbe
push
es
stos
stc
fld
add
cmp
retf
fist
test
dec
mov
cmp
test
mov
stos
mov
outs
stos
nop
lods
dec
sbb
dec
and
test
cmps
les
inc
sahf
mov
and
das
jmp
or
add
(bad)
dec
sbb
adc
pop
dec
(bad)
push
jge
(bad)
shrd
stos
sbb
add
jp
inc
xchg
aas
sbb
push
push
or
sub
xchg
loope
cmp
popf
mov
jae
loope
out
add
adc
mov
mov
mov
adc
out
data16
imul
ret
call
sub
mov
push
xchg
dec
in
cli
inc
mov
sti
neg
or
pop
call
inc
push
adc
xchg
test
cmp
addr16
mov
in
retf
daa
je
add
jg
ror
mov
(bad)
pop
adc
fimul
pop
test
jmp
or
jo
xor
repnz
sbb
and
pop
rcl
and
outs
mov
sub
adc
retf
or
movs
push
or
cmp
leave
loope
push
add
pushf
mov
pop
mov
inc
xchg
add
sbb
sub
xor
inc
jge
in
bound
adc
aas
stos
sub
ror
mov
std
retf
push
xchg
jmp
mov
into
rol
xor
mov
sub
xchg
and
enter
jle
push
adc
das
cmp
imul
test
in
dec
in
cmps
cmps
push
mov
inc
loopne
push
ins
cmp
repnz
xor
sbb
int3
cmp
and
inc
mov
jno
add
imul
popa
add
pop
dec
dec
fild
ror
cmp
dec
push
xor
cmp
cmovns
push
pop
sbb
stos
dec
dec
dec
pop
and
cmps
or
jge
shl
mov
sar
adc
pop
ins
mov
mov
sub
sub
in
mov
add
cmp
pop
mov
add
icebp
aaa
nop
cli
test
pop
push
scas
fild
popf
fdiv
test
enter
pop
mov
sub
mov
mov
test
xchg
mov
cmps
repnz
mov
sti
repnz
dec
test
cmp
ror
rcl
inc
popf
jmp
lods
or
(bad)
cmps
xchg
sbb
push
outs
aad
inc
ins
daa
adc
inc
pop
and
cmc
xchg
into
mov
pop
pop
sub
rcl
enter
adc
pop
aad
popa
push
shr
aas
xor
data16
or
sub
adc
push
or
push
and
mov
in
leave
jle
pop
jno
fdivr
out
xor
mov
mov
clc
cmp
or
movaps
les
fld
(bad)
sar
xlat
inc
jg
cmp
push
leave
push
sbb
cmps
adc
inc
bound
push
jmp
les
aam
xchg
imul
inc
cli
dec
sub
fist
jbe
dec
sub
gs
dec
push
jg
lahf
push
inc
ret
mov
arpl
push
xor
nop
or
sub
data16
cdq
(bad)
(bad)
fcomp
dec
push
inc
icebp
sar
dec
push
push
mov
cmps
push
imul
rcr
push
out
jne
push
jae
xor
loop
or
jp
cmps
cmp
dec
jp
pusha
imul
mov
daa
iret
cmp
cmp
mov
enter
or
(bad)
test
data16
or
mov
in
sub
repnz
inc
pop
loope
loopne
in
pop
lods
out
int3
jle
sbb
stos
ja
shl
and
enter
mov
movs
cmp
or
cmp
int3
fmul
in
mov
(bad)
lock
adc
jo
add
jmp
jle
xor
mov
add
and
aad
or
(bad)
xchg
aas
cmp
jge
je
fadd
and
ret
jle
enter
ds
loop
dec
pop
mov
mov
or
sti
dec
sub
xchg
add
not
stos
fisub
pop
jns
icebp
aad
mov
pop
add
push
retf
ins
xor
dec
sub
(bad)
or
pop
stos
jb
cmp
popf
int
jp
mov
aad
jp
dec
fld
xor
mov
sbb
adc
leave
fs
stos
mov
fdivr
xchg
dec
ffreep
xchg
enter
jge
test
push
ret
out
pop
mov
in
and
xor
mov
jp
fiadd
sbb
add
mov
sbb
arpl
or
xchg
xchg
cmp
inc
add
jbe
dec
retf
cmc
cli
repnz
and
pop
push
and
jmp
mov
call
mov
cmp
mov
add
popf
repnz
mov
push
test
inc
xchg
in
jl
mov
cmp
cmp
or
xor
xor
add
(bad)
jmp
cmp
fcmovnb
fist
sbb
add
push
xor
(bad)
cs
add
aas
adc
popf
pop
pop
jo
fidivr
sbb
jle
mov
fsubp
jno
cmc
mov
sub
push
xor
inc
push
test
dec
fild
mov
jle
popf
aam
rcl
jb
add
xor
jns
xchg
jne
(bad)
fdivp
sub
fwait
or
or
lahf
cmps
popf
sub
adc
mov
retf
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
inc
in
test
mov
in
test
mov
in
xchg
in
mov
mov
in
and
mov
mov
in
cmps
in
movs
in
mov
mov
in
mov
add
add
imul
stos
in
mov
mov
in
mov
mov
in
cwde
in
xchg
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
popf
in
mov
mov
in
pushf
in
test
mov
in
test
mov
in
movs
push
add
add
aas
in
xchg
in
xchg
in
test
mov
in
xchg
in
cmps
in
mov
mov
in
call
in
nop
in
mov
mov
in
and
mov
add
in
test
mov
in
mov
mov
in
xchg
mov
in
cmps
in
xchg
mov
in
mov
mov
in
mov
mov
in
fwait
in
cdq
in
test
mov
in
mov
mov
in
lahf
in
mov
mov
in
mov
mov
add
arpl
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
lods
in
xchg
in
popf
in
mov
mov
in
mov
mov
in
test
mov
in
popf
in
mov
mov
in
and
mov
mov
push
pop
add
add
mov
in
xchg
in
xchg
in
mov
mov
in
(bad)
in
mov
mov
in
test
mov
in
mov
mov
in
movs
in
popf
in
and
nop
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
add
dec
in
cwde
in
test
mov
in
lahf
in
stos
in
mov
mov
in
and
lods
in
mov
mov
in
movs
in
mov
mov
in
scas
in
mov
or
add
dec
in
mov
mov
in
(bad)
in
test
mov
in
xchg
in
mov
mov
in
popf
in
cwde
in
test
mov
in
and
mov
mov
in
mov
mov
add
pop
in
mov
mov
in
xchg
in
stos
in
test
mov
in
(bad)
in
mov
mov
in
and
xchg
in
xchg
in
and
mov
mov
in
xchg
in
scas
in
mov
mov
in
(bad)
in
lods
in
xchg
push
or
add
dec
in
call
in
lods
in
mov
mov
in
mov
mov
in
xchg
in
(bad)
in
movs
in
xchg
in
scas
in
mov
mov
in
mov
mov
in
test
or
add
push
in
mov
mov
in
pushf
in
lods
in
mov
mov
in
and
fwait
in
mov
mov
in
cmps
in
sahf
in
mov
mov
in
and
mov
mov
in
xchg
in
xchg
in
mov
or
in
mov
mov
in
mov
mov
in
scas
in
xchg
in
mov
mov
in
movs
in
mov
mov
in
mov
mov
in
xchg
in
xchg
in
lahf
in
and
xchg
in
mov
mov
in
cwde
in
cmps
in
mov
mov
add
cmp
mov
in
mov
mov
in
sahf
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
add
dec
in
(bad)
in
pushf
in
cdq
in
(bad)
in
xchg
in
mov
mov
in
mov
mov
in
mov
mov
in
cmps
in
mov
mov
in
xchg
in
and
test
mov
push
adc
add
jb
mov
in
mov
mov
in
call
in
mov
mov
in
xchg
in
and
mov
mov
in
mov
mov
in
call
in
mov
mov
in
xchg
in
mov
mov
in
sahf
in
and
stos
in
xchg
in
xchg
mov
add
cmp
mov
in
pushf
in
test
mov
in
mov
mov
in
(bad)
in
stos
in
stos
in
mov
mov
in
mov
mov
push
adc
add
inc
in
fwait
in
and
xchg
in
mov
mov
in
mov
mov
in
popf
in
mov
mov
in
mov
mov
in
cmps
in
nop
in
mov
adc
add
dec
in
mov
mov
in
lods
in
mov
mov
in
nop
in
fwait
in
stos
in
mov
mov
in
xchg
in
cwde
in
mov
mov
in
movs
in
mov
mov
in
scas
in
cdq
in
mov
mov
add
cmp
mov
in
mov
mov
in
mov
mov
in
stos
in
mov
mov
in
test
mov
in
and
popf
in
scas
in
lahf
push
adc
in
test
mov
in
mov
mov
in
xchg
in
test
mov
in
and
test
mov
in
xchg
in
mov
mov
in
mov
mov
in
xchg
in
cmps
in
mov
mov
in
mov
mov
push
push
add
add
mov
in
test
mov
in
cmps
in
mov
mov
in
mov
mov
in
and
fwait
in
scas
in
mov
mov
in
cmps
in
mov
mov
push
pop
add
add
mov
in
xchg
in
mov
mov
in
and
mov
mov
in
(bad)
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
movs
push
sbb
add
pop
in
mov
mov
in
sahf
in
mov
mov
in
movs
in
popf
in
mov
mov
in
cmps
in
mov
mov
in
mov
mov
in
mov
mov
in
(bad)
in
mov
mov
in
mov
sbb
add
aas
in
test
mov
in
xchg
in
mov
mov
in
lahf
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
add
dec
in
xchg
in
mov
mov
in
lahf
in
cmps
in
mov
mov
in
mov
mov
in
xchg
in
xchg
in
cmps
in
popf
in
xchg
in
xchg
in
sahf
in
call
in
xchg
push
sbb
add
arpl
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
lahf
in
mov
mov
in
test
mov
in
mov
mov
in
mov
mov
in
mov
mov
push
sbb
add
push
in
mov
mov
in
cmps
in
call
in
mov
mov
in
cmps
in
pushf
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
test
mov
push
sbb
in
mov
mov
in
cwde
in
(bad)
in
cmps
in
(bad)
in
mov
mov
in
and
mov
mov
in
mov
mov
in
fwait
in
mov
mov
in
mov
mov
in
cdq
in
xchg
in
(bad)
in
and
mov
mov
in
test
push
add
add
mov
in
xchg
in
mov
mov
in
and
lods
in
fwait
in
mov
mov
in
test
mov
in
(bad)
in
mov
mov
in
mov
pop
add
add
mov
in
and
xchg
in
xchg
in
test
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
stos
in
mov
mov
in
mov
mov
in
mov
mov
add
push
in
xchg
in
xchg
in
movs
in
(bad)
in
cmps
in
xchg
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
test
mov
in
mov
mov
add
jb
mov
in
mov
mov
in
mov
mov
in
stos
in
xchg
in
popf
in
xchg
in
mov
mov
in
mov
mov
in
test
mov
in
scas
in
mov
mov
in
mov
mov
in
mov
mov
in
lods
in
mov
add
mov
in
and
mov
mov
in
mov
mov
in
mov
mov
in
sahf
in
(bad)
in
(bad)
in
lods
in
stos
in
mov
mov
push
and
add
ins
in
mov
mov
in
xchg
in
(bad)
in
and
and
xchg
in
fwait
in
xchg
in
mov
mov
in
xchg
in
(bad)
in
scas
in
mov
mov
in
mov
mov
in
popf
in
mov
mov
in
and
lods
in
(bad)
in
mov
mov
in
mov
and
add
ins
in
popf
in
mov
mov
in
(bad)
in
xchg
in
mov
mov
in
cwde
in
xchg
in
pushf
in
(bad)
in
xchg
mov
in
mov
mov
in
movs
in
test
mov
in
mov
mov
in
test
mov
in
mov
mov
in
movs
push
and
in
mov
mov
in
cmps
in
and
mov
mov
in
mov
mov
in
movs
in
mov
mov
in
mov
mov
in
call
in
mov
mov
in
scas
in
scas
in
nop
in
cwde
in
mov
mov
in
mov
mov
in
lods
in
pushf
in
movs
push
add
add
mov
in
xchg
in
popf
in
mov
mov
in
stos
in
mov
mov
in
lahf
in
mov
mov
in
(bad)
in
mov
mov
in
and
mov
daa
add
add
mov
in
test
mov
in
stos
in
pushf
in
scas
in
mov
mov
in
xchg
in
xchg
in
mov
mov
in
fwait
in
mov
mov
in
xchg
in
popf
in
and
movs
in
sahf
in
fwait
in
xchg
in
xchg
in
xchg
in
mov
mov
in
test
mov
in
mov
add
in
cwde
in
mov
mov
in
test
mov
in
mov
mov
in
mov
mov
in
xchg
in
test
mov
in
mov
mov
add
jne
mov
in
mov
mov
in
mov
mov
in
lahf
in
mov
mov
in
test
mov
in
xchg
in
fwait
in
mov
mov
in
(bad)
in
xchg
in
mov
mov
in
cwde
in
pushf
in
xchg
in
xchg
in
test
mov
in
mov
mov
in
cmps
push
sub
add
aas
in
xchg
in
xchg
in
mov
mov
in
nop
in
and
mov
mov
in
mov
mov
in
popf
in
mov
mov
in
xchg
sub
add
aas
in
sahf
in
and
mov
mov
in
mov
mov
in
(bad)
in
mov
mov
in
mov
mov
in
movs
in
mov
mov
add
cmp
mov
in
(bad)
in
cmps
in
lods
in
pushf
in
mov
mov
in
scas
in
and
mov
mov
in
stos
in
and
xchg
in
xchg
in
xchg
push
sub
in
mov
mov
in
mov
mov
in
and
xchg
in
xchg
in
mov
mov
in
mov
mov
in
movs
in
and
mov
mov
in
mov
mov
in
and
cwde
in
xchg
in
mov
mov
push
add
add
mov
in
xchg
in
(bad)
in
(bad)
in
sahf
in
mov
mov
in
and
mov
mov
in
xchg
mov
in
pushf
in
mov
mov
in
sahf
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
movs
in
test
add
mov
in
sahf
in
(bad)
in
mov
mov
in
test
mov
in
and
test
mov
in
scas
in
xchg
in
xchg
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
or
dec
sub
add
mov
jge
pop
mov
popf
jle
sbb
je
sub
sub
pop
xor
jl
sub
ja
shl
arpl
inc
test
push
or
push
fild
arpl
xchg
mov
lods
sub
jae
mov
pop
xor
sub
addr16
sub
and
das
mov
jb
icebp
dec
mov
push
fcomip
and
into
mov
gs
jno
sub
push
adc
or
cli
adc
xor
call
das
mov
neg
push
in
and
add
or
stos
sar
mov
dec
loopne
std
out
cmp
cmps
les
xchg
stc
and
ret
add
in
scas
pop
js
mov
int3
scas
fisub
in
mov
je
arpl
jmp
outs
jp
stc
inc
xchg
mov
xlat
mov
popf
sub
jmp
loope
mov
mov
lds
cmps
(bad)
mov
sbb
sti
cmp
pop
add
push
or
push
rcl
xchg
dec
fistp
mov
into
xchg
in
jp
sub
ins
popa
mov
mov
adc
(bad)
jle
mov
cmp
gs
and
xor
mov
sti
popf
sbb
xor
cmps
mov
fistp
inc
add
mov
push
icebp
xor
lock
jmp
adc
mov
inc
ret
into
jmp
and
xchg
sub
inc
inc
in
pop
push
std
sbb
scas
xchg
cmp
imul
ret
jmp
pop
arpl
sbb
imul
out
jp
lea
lea
(bad)
push
cld
sbb
nop
(bad)
imul
rcr
mov
push
aam
cmp
(bad)
movs
lods
mov
lods
pop
jge
shl
fwait
jb
mov
repz
jbe
add
data16
cmps
mov
mov
or
push
xchg
pusha
jbe
adc
cmp
jp
stos
xor
test
in
inc
sbb
je
jmp
dec
inc
movs
add
mov
lds
mov
adc
adc
mov
jnp
aas
push
sbb
cwde
push
push
push
in
pusha
mov
push
sbb
jmp
je
fwait
clc
pop
or
inc
mov
inc
jo
cwde
out
add
daa
mov
iret
add
sti
leave
dec
xor
mov
pop
mov
fimul
push
jo
movs
pusha
mov
stos
push
adc
inc
cmp
hlt
pushf
jp
loop
fiadd
addr16
loop
add
ss
dec
push
mov
es
(bad)
xchg
add
fdivr
adc
add
mov
addr16
pop
mov
xchg
xor
frstor
gs
lock
pop
cli
sahf
add
jmp
mov
imul
xor
out
sub
jne
push
sbb
packsswb
shr
ins
popf
pushf
push
fwait
stc
(bad)
pop
adc
jmp
sub
push
mov
push
sbb
(bad)
mov
mov
test
pop
jmp
sbb
in
fs
add
mov
mov
icebp
sub
arpl
movs
fs
push
cmp
ds
push
dec
mov
fidiv
mov
sub
shl
jne
mov
push
(bad)
push
or
sbb
(bad)
cmps
nop
sti
scas
(bad)
jb
lahf
div
sar
pop
xchg
xchg
or
push
out
retf
in
test
sahf
repnz
jge
xor
adc
mov
pop
xchg
adc
xor
and
add
mov
mov
and
jno
and
xor
popf
test
cmp
arpl
stos
sbb
sbb
hlt
int
(bad)
cwde
call
xchg
out
and
inc
scas
fmul
mov
cmp
xor
dec
lahf
inc
imul
and
sub
ret
and
cwde
test
jmp
je
push
adc
sbb
loopne
cdq
outs
pop
push
jmp
icebp
push
and
mov
sub
adc
(bad)
iret
jl
jp
aam
jge
dec
inc
(bad)
cmp
jae
push
stc
pop
das
mov
nop
and
ret
mov
xor
cmps
xor
lods
ins
dec
mov
aad
inc
xchg
mov
and
push
push
fst
inc
jl
pop
popf
xchg
ja
js
mov
int3
aas
add
loop
jno
repnz
pop
nop
sbb
fiadd
shr
sub
pop
inc
mov
mov
sar
sbb
in
fstp
aam
cli
add
loope
add
fst
out
push
mov
cmp
sub
mov
ja
cmp
xor
jo
or
fwait
xchg
test
mov
in
int3
ret
mov
(bad)
add
and
lock
mov
mov
jns
jmp
movs
xor
mov
xchg
vcvtpd2dq
in
lahf
out
xor
div
rol
rol
aad
lea
or
retf
into
pop
mov
addr16
and
std
stc
lods
paddb
lea
xor
(bad)
push
das
push
xchg
std
pop
into
mov
ins
jne
shr
jne
loop
jg
jmp
mov
es
jge
push
cld
mov
ds
dec
shl
lea
mov
push
push
sbb
mov
pop
jae
add
bnd
mov
(bad)
nop
jmp
loopne
lea
rcr
(bad)
mov
jno
inc
add
or
data16
pop
mov
add
mov
jmp
outs
pop
push
lods
cld
ja
loope
inc
jge
les
inc
push
fwait
pop
mov
test
pop
push
mov
pop
test
mov
and
lea
ficomp
xchg
xchg
add
fnop
push
sahf
sbb
cdq
add
pop
into
dec
out
cmovae
ret
or
sar
push
xchg
xor
das
imul
shr
xchg
mov
sbb
dec
mov
loope
mov
and
ins
mov
int
jae
and
ss
push
gs
mov
retf
jmp
addr16
in
sbb
lea
(bad)
nop
fnsave
sub
and
cwde
inc
cs
in
jbe
pop
adc
xchg
and
add
adc
popa
xchg
fstp
cs
push
pop
or
test
jae
stos
or
sub
lea
lods
xchg
pop
addr16
cld
xchg
dec
xchg
xchg
mov
leave
mov
iret
ds
pop
popf
ds
sbb
sub
lods
stos
add
jno
push
or
fsubrp
sbb
rcl
mov
cmp
stos
addr16
push
pop
in
inc
icebp
out
mov
mov
aam
mov
sbb
imul
jmp
pop
push
pop
cmp
jbe
or
in
mov
outs
inc
das
jge
xor
sub
dec
pusha
jg
repz
mov
out
inc
shl
lahf
mov
js
lods
inc
jnp
jns
jmp
cmps
scas
stc
mov
clc
int
and
icebp
and
mov
xor
mov
sub
mov
add
mov
shl
std
lods
jnp
bound
iret
pop
xchg
cmp
cmp
clc
jl
lea
jl
(bad)
popf
mov
mov
pop
adc
enter
push
jno
jbe
inc
ret
dec
xchg
or
idiv
cmp
inc
les
sub
mov
sub
push
mov
xchg
cmp
or
push
add
and
push
(bad)
icebp
dec
(bad)
(bad)
mov
dec
(bad)
leave
inc
popf
mov
push
sub
xchg
xchg
fisubr
dec
sub
fisttp
xchg
call
add
outs
shl
sub
inc
jb
gs
cmp
jbe
cmp
jmp
sub
cs
shr
adc
mov
add
retf
cmp
(bad)
jle
push
int3
fwait
push
(bad)
cmp
test
mov
lds
sub
mul
mov
mov
js
je
fwait
mov
sbb
ja
jmp
nop
daa
call
cld
inc
sbb
in
and
out
mov
add
jne
cmps
in
int
push
lahf
cdq
dec
xchg
mov
push
mov
and
out
mov
jmp
or
fcmovb
sti
inc
test
push
in
call
push
inc
in
movs
sub
mov
loop
aam
cmps
pop
aam
jmp
arpl
dec
loope
jne
xchg
push
xor
mov
inc
in
mov
add
pushf
mov
(bad)
fs
xchg
mov
push
jle
out
out
fld
xchg
dec
pop
in
pop
push
push
adc
ret
mov
in
add
mov
ss
pop
lea
jnp
into
test
jnp
sub
mov
mov
inc
rcr
or
int
ins
mov
cmovg
sbb
lahf
xor
outs
push
in
mov
sub
dec
add
rcl
add
dec
outs
mov
in
shr
ss
dec
arpl
mov
test
jb
push
dec
loopne
out
push
pop
or
(bad)
add
and
mov
mov
(bad)
leave
jmp
popa
ret
into
mov
push
imul
cmp
mov
pavgb
and
xchg
sbb
jmp
ret
int
cdq
test
pop
mov
jnp
sbb
mov
in
dec
int3
mov
add
aas
adc
repnz
fisttp
shl
cmps
repz
push
add
push
mov
xchg
mov
shr
lock
shr
add
ret
call
pop
(bad)
or
cmps
int3
outs
stc
mov
lods
out
pop
clc
cmp
into
inc
mov
jl
sbb
pop
pop
stc
stos
sub
push
fnstcw
fs
mov
jmp
sub
push
cmps
mov
jl
xchg
dec
xchg
inc
cmp
cmc
add
inc
xchg
imul
and
inc
add
test
pop
in
sub
cli
inc
xor
pop
push
dec
jnp
stos
jno
jbe
ss
dec
push
and
int
mov
stos
add
cmp
cmp
sub
or
mov
sub
inc
dec
es
mov
xor
jo
fwait
add
mov
mov
inc
inc
scas
outs
fsubr
push
add
jge
pop
inc
mov
enter
cmp
mov
out
(bad)
sub
enter
mov
jl
push
mov
xchg
jl
jl
push
imul
or
ja
or
test
popa
cwde
jae
inc
js
clc
xor
inc
push
aas
xor
xchg
in
or
stos
mov
adc
sbb
into
push
and
mov
or
pop
mov
mov
(bad)
push
dec
xlat
push
fdivr
sahf
xchg
mov
push
pop
call
imul
sahf
es
xor
sub
pop
push
pop
mov
xchg
mov
pop
or
mov
fnstcw
ror
inc
push
cmps
push
add
ins
ret
mov
add
loopne
movs
cmp
rcr
xchg
mov
mov
cmp
cmps
or
jno
mov
mov
es
push
aam
iret
inc
dec
int
mov
mov
add
pop
dec
push
test
and
jge
das
pop
xor
mov
orps
push
jns
hlt
stos
sub
and
inc
adc
pop
push
xchg
push
scas
xor
bound
je
dec
sahf
jmp
lea
call
cld
(bad)
into
lahf
sub
test
jno
rcr
js
ins
cmps
mov
aas
and
sar
jmp
dec
aam
sub
sub
popf
test
cmp
popa
lock
sbb
push
movs
mov
mov
pop
sahf
mov
xchg
ret
fnop
into
add
sti
cli
or
shr
loopne
imul
push
xchg
sbb
test
xchg
out
inc
(bad)
mov
inc
jg
repz
jmp
repnz
sub
mov
int
mov
push
mov
(bad)
pop
and
pusha
pop
in
mov
sbb
mov
push
mov
or
je
movs
fs
sub
js
and
rcr
adc
int
xchg
push
sub
xchg
fsubr
xchg
cld
sbb
cwde
pop
loopne
ds
jmp
scas
jae
ins
aam
imul
call
out
pop
inc
adc
jge
xor
rol
sbb
test
and
sahf
imul
xchg
mov
sbb
es
lahf
daa
push
rcl
sub
jo
clc
pop
or
out
xor
inc
push
add
and
pop
push
xchg
retf
pop
test
sbb
rcl
jecxz
pop
push
call
jno
mov
mov
cld
movs
dec
pop
(bad)
push
jecxz
bound
pushf
adc
jp
ret
push
ds
push
xlat
or
ins
add
jne
popa
cs
idiv
fdiv
loop
call
add
mov
adc
cld
xor
dec
movs
mov
sub
ins
repnz
push
(bad)
pop
aas
add
adc
rcr
clc
int
xchg
push
(bad)
mov
push
jne
jno
push
(bad)
xchg
loope
std
jne
cmps
dec
fs
stos
(bad)
cmp
adc
imul
mov
mov
cdq
mov
mov
int3
dec
xor
adc
lods
cmps
mov
or
dec
sbb
cmp
mov
jns
mov
pop
pop
mov
add
mov
repz
or
xchg
mov
pushf
mov
cmp
xchg
stos
cdq
jnp
add
adc
fiadd
es
loope
adc
push
(bad)
fnsave
or
adc
lods
imul
dec
into
lock
and
repz
call
lock
xor
lock
adc
inc
jg
test
xchg
mov
lods
retf
mov
sub
add
lds
pop
(bad)
xlat
fidiv
iret
imul
adc
xchg
push
add
and
or
mov
cmp
scas
lods
shl
out
jne
dec
or
xchg
stc
jp
mov
jmp
cdq
in
cwde
hlt
mov
jno
sbb
leave
mov
int
cmp
mov
aas
call
icebp
and
xchg
into
inc
ret
ss
ss
lods
xor
mov
xor
mov
xchg
xchg
xor
adc
repz
repnz
xchg
test
or
fild
stos
xchg
push
inc
xor
jns
popa
mov
das
not
(bad)
scas
push
push
push
lods
push
pop
and
xchg
lahf
or
aam
push
cmp
push
or
add
lock
nop
stos
xor
adc
mov
call
pop
das
js
mov
sbb
xchg
mov
xchg
push
pop
add
outs
cmp
scas
mov
inc
sub
mov
ja
mov
sub
fsubr
mov
or
cmp
iret
ficomp
cmp
std
sub
pop
inc
das
push
jecxz
jae
lods
add
dec
xchg
xlat
cmp
inc
xchg
cdq
call
mov
push
push
imul
pop
or
push
xchg
and
mov
mov
lea
push
pop
xor
sti
dec
add
scas
adc
inc
daa
int
lock
xor
js
or
xor
pusha
xchg
es
js
inc
sub
push
pop
or
adc
lods
pusha
mov
sub
int
call
fwait
xchg
cmp
fcmovnu
dec
cmp
add
scas
ss
dec
jecxz
mov
mov
inc
addr16
fwait
cmp
sbb
popa
jp
push
push
imul
sub
inc
rol
xchg
dec
imul
outs
aam
and
(bad)
mov
lahf
mov
fst
or
aas
jne
pusha
sti
push
jno
or
adc
and
lock
rol
sbb
sub
dec
(bad)
jp
xchg
push
ja
(bad)
cmp
ret
out
xchg
test
fwait
push
stos
push
jp
lahf
sub
fdiv
inc
mov
retf
mov
jmp
pusha
ins
mov
not
xchg
xor
or
fs
in
in
out
leave
push
push
(bad)
ficom
and
sub
loop
fsub
push
push
daa
fisub
daa
aad
mov
enter
mov
cmp
or
enter
mov
pop
push
sbb
bswap
call
popa
mov
pop
dec
and
mov
int3
mov
fcomp
adc
cmp
ds
mov
cmp
cld
arpl
cs
cmp
lock
loopne
(bad)
call
movs
push
fst
jo
inc
addr16
push
(bad)
and
in
mov
cdq
push
or
ins
sub
outs
dec
ins
xor
dec
inc
in
ficom
push
add
pop
add
mov
fnstsw
arpl
jns
mov
sbb
out
jo
add
add
sub
cli
pop
mov
sub
mov
inc
fist
and
fwait
mov
sti
(bad)
movs
xor
jnp
idiv
arpl
push
pop
xchg
imul
into
psubq
inc
adc
nop
ins
imul
sbb
push
call
loopne
faddp
jmp
inc
fst
loop
inc
rcr
out
fs
les
lds
daa
jb
pushf
hlt
dec
stc
in
imul
pop
enter
ret
push
mov
int
(bad)
in
mov
enter
inc
retf
movs
and
(bad)
fsubr
or
dec
(bad)
pop
adc
mov
retf
ins
shl
fwait
or
fwait
outs
inc
xor
lods
test
not
daa
jno
xchg
mov
push
xchg
jb
push
icebp
fs
add
sbb
mov
gs
and
xor
mov
lea
mov
pop
ins
inc
mov
jne
push
in
dec
inc
pop
sub
inc
aad
cwde
pop
and
push
pop
rol
xchg
ins
add
fst
adc
add
jp
fs
mov
ror
pushf
push
inc
adc
and
(bad)
mov
jmp
ds
cs
and
add
jmp
sbb
adc
fiadd
or
pop
sbb
push
addr16
jp
sub
stos
test
mov
inc
xor
and
adc
adc
mov
fdivr
retf
mul
fsub
or
add
rol
neg
inc
imul
jae
add
test
sub
mov
mov
cmp
pop
and
fcom
in
lea
push
std
xor
popf
jns
adc
adc
mov
push
cld
test
dec
add
cli
sub
push
lods
xor
xchg
inc
bt
push
add
jne
and
data16
dec
mov
cld
hlt
inc
popf
dec
es
pop
fistp
xchg
jno
jge
xchg
mov
hlt
or
xchg
and
jbe
or
shl
aaa
mov
and
fisub
jmp
lds
jb
cmps
std
push
jp
fcmovnu
ins
ss
push
mov
sbb
cdq
outs
mov
cli
pop
(bad)
int3
push
add
inc
sub
mov
adc
arpl
xchg
xlat
or
add
push
outs
dec
push
out
int
aaa
int
mov
add
scas
dec
push
push
adc
mov
inc
pop
xor
push
sub
mov
ss
shr
xchg
retf
imul
fdiv
movs
outs
xchg
mov
add
and
lock
xor
push
iret
cmps
pop
nop
jno
outs
das
mov
push
pop
mov
cmp
(bad)
imul
loope
mov
xor
scas
jns
loopne
lods
sbb
cmp
xchg
pop
stos
imul
out
cmp
xchg
jp
fst
aad
cs
(bad)
into
cmp
sar
ins
push
pop
mov
jnp
ror
mov
rol
jmp
mov
xchg
cli
cs
mov
fcmovnbe
jecxz
sbb
ds
push
popf
repz
and
adc
adc
in
mov
lods
fcomp
push
mov
int3
and
fcomp
pop
xor
inc
ret
in
xchg
and
popf
(bad)
jns
sbb
shr
jns
cmp
pop
xchg
in
inc
scas
pop
sub
mov
inc
jp
cwde
adc
fisttp
jnp
fidivr
sbb
leave
lds
es
sbb
rcl
repz
addr16
dec
mov
test
mov
xchg
test
xchg
ins
mov
in
ds
jbe
outs
dec
popa
fcmovb
pop
pop
icebp
mov
call
pop
mov
lods
sub
test
mov
cmps
cli
div
add
pop
les
iret
sub
inc
mov
adc
xchg
inc
mov
sub
adc
add
cmp
adc
mov
add
mov
sahf
pop
push
xchg
lds
retf
xchg
pop
push
mov
push
pusha
cmp
fwait
aad
out
and
cmp
jmp
stos
add
ja
inc
adc
inc
(bad)
in
pop
data16
pop
loop
test
pop
loop
jecxz
lea
in
jb
fwait
xchg
push
std
ins
pop
inc
xchg
push
push
xchg
add
(bad)
movs
or
push
cmp
in
mov
ret
fwait
ja
sbb
mov
rol
xchg
bound
movs
or
jno
pop
lods
adc
push
adc
push
push
mov
mov
sbb
int3
lock
neg
fimul
clc
popa
inc
stos
pusha
mov
clc
outs
push
push
dec
sub
arpl
dec
ror
xchg
ret
dec
in
mov
loop
xchg
dec
cmc
xor
into
repz
shl
jb
imul
xor
inc
fwait
cmp
jne
xchg
aad
adc
out
jl
repz
or
dec
aaa
xlat
(bad)
and
outs
test
loop
or
pushf
cmc
pop
adc
cmp
ret
scas
inc
call
mov
loop
push
imul
aas
push
or
lds
push
call
lahf
push
dec
pop
int3
mov
xchg
or
push
add
xchg
in
sub
xchg
or
jo
cmp
mov
fimul
aad
jns
shr
test
mov
pushf
(bad)
push
cdq
pusha
jno
mov
aad
loop
(bad)
stos
xor
cmc
in
mov
mov
sbb
xchg
xchg
inc
cmc
cmp
pushf
ret
mov
dec
sbb
mov
sar
push
popa
pushf
dec
mov
mov
xchg
dec
cmp
or
mov
shl
pop
bound
ror
fcmovu
add
repnz
cmp
cmp
std
cli
aam
push
sar
dec
pop
fidiv
cmp
lods
pop
dec
dec
pop
mov
das
mul
xor
mov
jmp
outs
adc
dec
repnz
pop
push
jl
push
rol
sbb
sbb
daa
pop
pop
mov
in
loope
ror
pop
or
sbb
add
adc
fistp
dec
sahf
mov
push
sar
pop
ds
fstp
cli
dec
xchg
xchg
es
daa
and
mov
out
test
lock
inc
add
pop
fwait
cwde
mov
sbb
arpl
aaa
pop
jae
push
hlt
cmp
pop
adc
jns
jnp
fs
dec
js
pop
xchg
xor
or
dec
mov
push
arpl
ins
jle
mov
mov
cdq
mov
xchg
mov
mov
jnp
inc
mov
sbb
ins
or
cmp
fwait
test
adc
xchg
and
xor
jmp
js
jno
lods
cmp
cmps
push
jp
jge
sbb
jmp
popf
sub
mov
xlat
pop
and
inc
adc
push
pushf
xor
dec
lea
shr
xchg
inc
mov
pop
loopne
arpl
push
add
jg
dec
and
xor
sar
aad
cmp
lods
sahf
hlt
call
in
cmp
(bad)
mov
loopne
out
inc
pop
loop
cmp
pop
shr
xor
cli
mov
mov
fnsave
xchg
cmps
jnp
push
mov
add
mov
mov
loop
lods
into
push
mov
pop
mul
fsub
out
clc
dec
ins
cld
inc
adc
pop
or
int
sub
call
or
ficom
in
out
lea
xchg
mov
std
jnp
jmp
fadd
call
jmp
cmp
test
xor
retf
cmps
adc
xchg
jae
cmp
mov
cmovb
dec
test
rcl
call
or
sbb
out
mov
fcmovnbe
sbb
inc
dec
dec
rol
inc
jnp
(bad)
in
(bad)
cmp
lds
push
and
(bad)
adc
adc
test
in
aam
test
scas
push
pop
and
push
imul
or
pop
rcr
(bad)
pop
into
jle
out
scas
outs
push
in
jmp
xor
mov
or
xchg
icebp
and
scas
dec
mov
mov
scas
popa
push
jns
push
sub
retf
pop
ss
fcmovnbe
sbb
std
in
icebp
call
add
mov
jl
pop
stos
sub
les
pop
xor
retf
jb
scas
jno
call
out
pop
nop
js
adc
pushf
or
jb
loop
jae
scas
or
outs
mov
fcom
clc
xchg
mov
jmp
push
lds
adc
in
pusha
cli
dec
inc
call
imul
jo
pop
add
mov
add
mov
rep
mov
cmp
xor
js
in
mov
and
add
jo
popf
aad
ret
lods
or
add
add
lds
es
out
ficomp
xor
dec
sub
cwde
add
xor
cmp
sub
cmp
push
push
add
jne
imul
stos
adc
scas
loop
sub
sti
jp
in
xor
mov
or
mov
push
pop
sub
inc
in
leave
int3
je
adc
adc
pushf
add
paddsb
in
data16
sahf
push
stc
and
sbb
adc
dec
xchg
mov
dec
jecxz
fwait
pop
add
inc
adc
(bad)
outs
enter
movs
push
jle
jae
test
hlt
call
jmp
pop
fwait
inc
sub
pop
pop
mov
cld
test
in
mov
(bad)
push
xchg
jmp
ins
pop
test
xor
enter
cli
mov
movs
(bad)
mov
dec
movs
push
sar
push
test
sbb
sub
aam
js
push
mov
ret
aad
inc
add
lea
inc
dec
lods
fidiv
shl
mov
sub
stos
adc
push
xchg
data16
popf
push
adc
stos
mov
ficom
out
fisttp
iret
inc
cli
int
fldenv
cmp
clc
inc
mov
lahf
out
xchg
loop
aaa
xlat
mov
and
inc
and
cmp
push
popf
popf
or
int3
cmp
cmp
mov
movs
pop
xor
push
in
inc
mov
sbb
add
int
ins
fs
cmp
push
test
sub
das
sbb
cs
and
push
adc
jmp
call
aaa
cmp
add
mov
push
stos
pop
dec
rol
inc
sti
sub
enter
cmp
lods
loopne
mov
adc
mov
mov
stc
cmp
pushf
add
scas
sub
or
in
or
clc
cmp
imul
fisubr
inc
ficom
sbb
jmp
push
or
mov
out
dec
clc
(bad)
mov
xor
pop
fldenv
jbe
popf
test
jbe
push
xor
fidivr
jb
rol
xor
out
ja
xchg
dec
and
sub
mov
not
pop
dec
(bad)
jge
icebp
scas
dec
es
add
int3
pop
dec
das
xchg
mov
popa
(bad)
mov
push
pop
lds
xor
push
mov
push
(bad)
dec
mov
pop
dec
jmp
das
mov
pop
pop
and
sub
mov
add
pop
pop
sub
in
push
pop
pop
mov
lds
add
inc
inc
jmp
mov
fldcw
cmp
sbb
mov
icebp
popf
jmp
enter
xchg
and
leave
(bad)
scas
ret
repz
in
stos
push
push
ss
xchg
and
push
ficomp
stos
mov
pop
push
or
int3
pushf
sar
mov
xor
arpl
test
pop
jo
pusha
mov
call
and
shr
out
cmp
(bad)
outs
mov
or
ds
mov
int
or
push
(bad)
mov
sub
mov
ret
inc
inc
mov
jbe
popf
jg
inc
mov
lods
dec
inc
xchg
push
jae
inc
mov
push
sub
or
and
add
out
fidiv
cmp
test
mov
rol
arpl
shl
dec
ror
(bad)
push
out
push
mov
add
xor
fisub
shr
lods
push
sub
adc
cmps
sahf
xchg
jo
cli
mov
fld
mov
or
je
gs
rol
jnp
jbe
add
push
out
pop
xlat
xchg
pop
xchg
call
push
(bad)
jmp
pusha
xchg
jle
cmc
jmp
ja
inc
mov
fwait
xchg
lds
js
shr
bound
arpl
jae
and
shr
sbb
out
push
and
mov
or
jecxz
rcr
and
je
sbb
mov
xor
inc
xchg
arpl
jmp
cmps
mov
inc
jns
es
push
xor
pop
add
mov
test
mul
mov
dec
ja
adc
inc
iret
repz
inc
inc
addr16
aas
(bad)
movs
sbb
out
dec
scas
dec
fadd
add
popa
mov
inc
xor
ins
jae
inc
outs
mov
lods
and
cmp
cld
cmp
iret
mov
dec
mov
push
and
popa
jae
lods
stc
les
xchg
xor
mov
addr16
and
dec
jmp
push
cmp
push
sub
mov
ins
sbb
sbb
mov
fdivrp
mov
stos
lahf
sbb
or
in
je
out
pop
imul
pop
sbb
bound
jmp
ins
repnz
cmp
aas
nop
adc
cmovne
scas
rol
xor
popf
out
retf
loope
retf
lds
fsubr
(bad)
push
push
pop
mov
xlat
repnz
(bad)
test
mov
ror
scas
outs
pusha
push
pop
sbb
mov
inc
jb
adc
mov
xor
cmps
movs
scas
ins
cmps
xor
pushf
xor
(bad)
jae
stc
repz
mov
or
mov
mov
test
test
cmps
jecxz
inc
xchg
push
fyl2xp1
xchg
inc
cmps
mov
mov
jecxz
mov
lock
out
gs
mov
adc
xchg
bound
ins
jl
ins
or
frstor
cs
std
inc
(bad)
pop
pusha
and
sar
xchg
jmp
add
les
mov
adc
jge
jnp
push
cdq
push
sahf
mov
iret
inc
dec
test
retf
rcl
div
call
pop
test
fimul
iret
adc
mov
xchg
js
or
iret
cdq
xchg
(bad)
mov
cli
in
inc
xor
sbb
inc
mov
jne
call
stos
dec
or
xlat
hlt
cld
imul
jge
sub
movs
dec
int
icebp
sub
hlt
loop
and
and
mov
inc
jg
add
cmps
jae
mov
cmps
xchg
mov
pushf
pop
xor
fcom
push
xor
int3
aam
jns
out
adc
adc
adc
shl
dec
or
inc
sar
dec
dec
xor
stos
adc
mov
loopne
in
outs
push
repz
lock
bound
not
daa
pop
mov
mov
or
mov
jnp
mov
ins
push
stc
popf
pop
mov
mov
inc
in
imul
jecxz
adc
xor
in
lahf
cmc
jecxz
push
cld
mov
out
loop
(bad)
pop
int
inc
fldenv
leave
outs
pop
push
stc
movs
call
or
fimul
jo
push
mov
(bad)
inc
ins
ins
cmp
xchg
dec
fwait
sub
push
lahf
push
popa
mov
cdq
mov
adc
into
ret
mov
and
hlt
jb
adc
cmp
jb
sbb
lea
sti
lods
pop
dec
jp
mov
xchg
xor
outs
repz
cmp
mov
bound
sar
mov
retf
mov
int3
push
and
ret
mov
xchg
jo
rcl
inc
jge
dec
mov
inc
dec
dec
popa
pop
xchg
iret
lods
mov
cmps
ins
pop
iret
retf
adc
xor
jecxz
sub
inc
mov
push
je
pop
mov
fild
mov
pop
cmp
jmp
int
cmp
(bad)
xlat
inc
sub
add
xor
in
sbb
icebp
or
adc
in
repnz
aaa
movs
cmp
mov
sbb
xor
pop
cmp
adc
jecxz
and
sub
xor
outs
test
push
mov
xor
push
and
fcom
jle
out
gs
pop
xchg
add
dec
jo
loop
bound
pop
arpl
test
dec
mov
push
xor
je
sbb
icebp
inc
call
fwait
push
jnp
mov
dec
sbb
ror
mov
fiadd
jg
pop
loopne
dec
bound
sbb
fs
ficom
sar
mov
daa
jnp
dec
xlat
pushf
push
jae
in
mov
movs
xchg
inc
out
lods
push
cld
ins
das
xlat
ds
cdq
mov
mov
ins
dec
lock
jg
mov
xchg
dec
dec
jp
out
add
pushf
out
stc
inc
hlt
(bad)
adc
(bad)
dec
xlat
and
cs
sub
pop
imul
fistp
fcmove
inc
xchg
sub
ret
sti
add
popa
test
inc
pop
add
sub
lock
addr16
sub
pop
push
in
sbb
fldcw
cmp
sbb
sbb
(bad)
cs
idiv
mov
xor
mov
mul
mov
sbb
cmp
lods
inc
(bad)
sub
cmps
ja
(bad)
jne
or
das
jmp
aaa
xor
ror
or
adc
ficomp
mov
cmps
pop
or
mov
icebp
sbb
dec
pop
xor
adc
jecxz
leave
push
leave
test
jns
jo
jno
out
test
lods
(bad)
(bad)
and
imul
adc
push
(bad)
fdivr
mov
jmp
xchg
xchg
mov
push
lods
jae
add
addr16
xor
jecxz
int
push
pop
add
addr16
mov
cwde
scas
cmp
out
xor
sub
jp
mov
gs
outs
pop
out
rcr
cmps
mov
mov
jp
pop
adc
test
sub
into
rol
in
test
adc
lods
jmp
outs
and
mov
mov
fs
mov
pop
imul
arpl
fstp
(bad)
and
inc
mov
and
imul
shl
out
fisubr
shl
(bad)
fnstcw
xchg
xor
xor
mov
xor
(bad)
jge
mov
adc
inc
xlat
dec
out
out
push
jg
retf
pop
jnp
adc
sti
pop
and
inc
and
add
int
jns
arpl
test
call
adc
cmc
cmp
(bad)
call
mov
lds
(bad)
in
inc
pop
sub
aas
xchg
sub
jbe
xchg
clc
inc
sbb
sub
or
sub
mov
test
xchg
jl
nop
outs
push
inc
lds
mov
pop
push
dec
or
jmp
adc
gs
fist
icebp
aas
or
xchg
and
sahf
scas
lods
jmp
es
lds
push
jmp
dec
rol
arpl
jae
inc
mov
xor
lods
outs
cmp
pop
cs
loope
and
adc
jmp
sar
ins
mov
xor
sbb
mov
pminub
adc
mov
fldenv
push
js
adc
sub
xchg
and
add
and
xlat
sbb
or
xor
lock
pop
pop
cmp
push
pop
jmp
xchg
daa
mov
jmp
or
daa
sbb
pop
jmp
and
mov
fmul
out
mov
xlat
jo
hlt
push
sbb
xchg
movs
outs
mov
pusha
jle
arpl
push
mov
retf
add
adc
into
fptan
jle
sahf
les
bound
or
test
ror
enter
fdiv
add
jle
lea
adc
pushf
push
lahf
jle
sbb
stos
lock
xchg
leave
sti
cli
mov
std
mov
in
and
push
rcr
sbb
pop
das
js
xor
adc
jp
cmp
loop
sub
sub
push
mov
test
add
mov
cmps
xor
jne
movs
lock
and
pop
in
mov
aam
sub
test
stos
jns
ins
cmps
add
leave
repnz
out
enter
data16
xor
pop
fcom
push
mov
pusha
xor
aaa
jg
xor
jp
std
rol
push
push
push
jg
icebp
loope
jle
pop
jp
shl
jo
cmps
sbb
dec
mov
cli
call
mov
lahf
xlat
and
cmp
stos
fisttp
adc
pop
fld
or
cs
and
iret
push
fwait
mov
hlt
sub
cli
xor
push
int
push
sbb
dec
in
mov
adc
lods
mov
sar
push
mul
popa
jae
int3
jmp
mov
mov
add
loop
mov
mov
pop
ret
das
xlat
in
jnp
jno
cmp
dec
cmp
jae
mov
sbb
fistp
cmp
adc
aas
xor
jns
stos
and
cli
and
pop
or
jl
and
bound
xchg
adc
dec
jb
call
je
xor
les
movs
and
(bad)
jb
iret
test
test
aad
adc
shl
cmp
lods
jl
scas
add
icebp
clc
int3
out
cmps
and
bound
stos
or
inc
pushf
cs
sbb
enter
or
das
xchg
push
sub
sti
imul
stos
jg
jnp
(bad)
push
cmp
mov
int3
dec
jno
movnti
lock
or
inc
out
pop
shl
and
push
popa
dec
jb
pop
mov
sub
std
mov
call
(bad)
push
scas
sbb
popf
xchg
inc
sar
and
add
rcl
mov
jno
in
dec
mov
cld
mov
mov
cmovne
shl
pop
sar
or
mov
ret
fs
jno
cmps
cmps
in
pop
mov
(bad)
(bad)
repz
ins
add
sbb
mov
or
sub
ins
sbb
jmp
mov
test
xor
sbb
fcomp
and
stos
fmul
int3
movs
gs
mov
or
cmp
aas
repz
mov
inc
ins
fnstenv
xor
dec
jmp
push
call
pop
repnz
sbb
loopne
test
aas
ja
fcomp
cmc
push
dec
cmps
or
ret
or
aad
(bad)
mov
call
test
sub
(bad)
dec
hlt
sub
ja
das
mov
cmp
inc
loop
dec
cmps
and
ss
jmp
stos
mov
stos
or
inc
pop
fidivr
pop
dec
(bad)
fucomi
aaa
in
cmp
cmp
cmp
std
jno
push
cld
and
or
loope
or
adc
xchg
mov
cs
lods
pop
aam
add
and
push
cmp
idiv
hlt
cmp
mov
xchg
dec
pop
test
inc
xor
mov
add
stc
stc
scas
jmp
and
ror
jmp
fsubp
push
pop
and
imul
mov
fadd
mov
fist
cs
fist
cmp
ja
je
pop
push
xor
call
jmp
push
ds
pusha
cli
popf
stos
cmp
(bad)
bound
mov
out
fs
jno
ja
xor
xor
fstp
jo
pop
add
xchg
and
adc
fs
lods
pop
mov
jp
and
scas
lock
bound
sti
ds
mov
test
repz
mov
mov
jle
cmps
lds
mov
jae
sub
adc
hlt
imul
imul
call
(bad)
aaa
call
out
retf
mov
inc
xor
ins
std
jbe
jae
mov
sti
hlt
dec
and
dec
movs
into
paddq
rcr
stos
adc
dec
out
sbb
push
aam
cmp
imul
stos
add
call
jmp
retf
imul
mov
sbb
jp
mov
and
sub
mov
jle
fistp
adc
dec
sub
or
lahf
push
cmps
imul
loopne
hlt
(bad)
sbb
(bad)
push
jecxz
ret
adc
dec
xchg
pop
xchg
dec
pop
jne
xchg
jl
mov
push
adc
cs
in
xlat
jle
push
sub
fiadd
pop
pop
into
jne
or
inc
fsub
aaa
cmp
jg
inc
mov
and
jb
cwde
dec
movs
pop
push
push
out
outs
mov
mov
icebp
data16
push
mov
sub
mov
and
xchg
add
push
cmp
sub
movs
(bad)
imul
pop
lods
shl
sti
mov
repz
call
mov
lods
loop
inc
push
jne
iret
mov
pop
push
ja
mov
sbb
dec
(bad)
push
jo
mov
xchg
push
mov
les
ds
clc
add
jne
cli
jne
sbb
call
xor
clc
leave
ret
imul
jbe
pop
sbb
sbb
imul
xchg
outs
mov
aad
lock
rcr
dec
mov
or
sub
loopne
mul
cwde
mov
retfw
and
or
jae
and
aaa
das
sahf
ror
repz
pop
std
mov
movs
jne
aad
inc
fcom
jecxz
mov
mov
int3
clc
and
out
fst
int
mov
inc
xor
ret
call
xchg
adc
jp
or
call
ja
nop
ret
cmp
push
dec
cdq
dec
inc
xchg
repnz
pop
adc
cmps
mov
imul
adc
mov
or
cmc
fst
add
mov
cld
les
sbb
bound
jg
test
mov
adc
test
inc
mov
mov
jns
and
xor
push
jle
jno
add
data16
jae
jnp
rcr
(bad)
stc
push
in
rol
inc
mov
sub
jbe
push
cmps
cmps
jo
(bad)
mov
std
les
fnstsw
jne
xor
jge
lock
cmc
js
mov
pop
jns
cmps
mov
or
sub
mov
mov
test
stc
pop
and
sub
jnp
mov
push
push
mov
or
bound
in
ss
call
add
fmul
daa
fsubr
push
les
mov
out
imul
in
dec
jno
out
lock
sub
jecxz
cmps
mov
jle
push
push
mov
or
cdq
push
outs
sbb
mov
mov
cmp
xchg
or
pop
in
jns
retf
sub
mov
loope
adc
add
repz
cdq
rol
dec
repz
add
ret
mov
or
nop
xchg
out
sbb
(bad)
cmp
cdq
cmps
jae
push
mov
mov
mov
inc
sub
or
jb
cli
sar
outs
dec
jns
pop
pusha
lods
ss
xor
out
pop
and
push
pop
pop
(bad)
sbb
out
sar
push
cmp
xchg
(bad)
pop
mov
aas
repnz
stos
leave
fcomi
or
add
sbb
scas
or
aam
jo
pop
inc
movs
cld
mov
retf
or
add
push
jge
push
shl
inc
in
or
shl
fimul
add
shr
sub
scas
xlat
xchg
arpl
ret
push
lods
dec
xchg
and
inc
or
sbb
repnz
cmp
push
inc
enter
shl
dec
fiadd
movs
jmp
das
js
pop
sub
ins
nop
push
xor
shl
xor
or
pop
out
jp
push
mov
cwde
imul
and
fisubr
jb
mov
xchg
pop
add
test
cmp
push
or
dec
(bad)
fild
dec
scas
sub
adc
xor
sub
mov
out
outs
(bad)
and
in
cmp
mov
mov
imul
mov
addr16
lods
fmul
fistp
pop
pop
fst
popa
push
sbb
nop
add
sar
mov
cmp
mov
ret
push
mov
mov
mov
xor
sub
xor
mov
jmp
shr
fwait
and
repnz
push
loope
into
in
call
pop
fmul
push
or
mov
rol
jnp
das
iret
ja
(bad)
pushf
pop
mov
cmp
std
add
outs
mov
sub
test
and
cli
mov
repz
mov
scas
push
push
add
in
xlat
gs
out
and
mov
dec
clc
sub
scas
mov
dec
(bad)
test
fwait
pop
jno
xor
adc
sbb
jg
xchg
push
push
lods
ret
mov
mov
mov
xor
inc
aam
jo
sti
cmp
cld
test
retf
pop
xor
retf
cdq
scas
mov
out
fmulp
movs
mov
into
mov
push
js
cmp
iret
jmp
lock
(bad)
int
pusha
dec
pop
sbb
loop
(bad)
mov
call
sub
das
dec
pop
add
inc
dec
jge
rcl
pop
adc
test
xor
add
out
push
dec
mov
dec
loopne
popf
stc
sbb
popa
test
bnd
jmp
cmp
sub
jl
enter
(bad)
iret
gs
dec
xchg
mov
enter
push
push
jns
cli
push
mov
ins
ret
out
xchg
add
shl
das
jo
adc
push
imul
push
fwait
lahf
mov
aam
sub
add
ficomp
cmp
test
jg
jl
fild
push
pushf
int3
(bad)
mov
mov
out
push
mov
sub
xor
loop
inc
cmps
jno
inc
push
mov
or
pop
ins
push
daa
jno
pop
mul
je
movs
push
xor
daa
pop
sub
mov
(bad)
push
out
inc
mov
in
out
ja
jae
(bad)
dec
inc
pop
stc
js
or
push
mov
pop
push
mov
cmp
mov
push
jb
or
nop
scas
inc
loop
fimul
and
mov
rcl
push
push
movs
push
sbb
cs
add
ret
fisub
mov
mov
xchg
pop
repnz
aaa
sub
jo
scas
shr
jb
dec
inc
pop
and
inc
ss
lds
mov
pop
jl
mov
adc
push
aam
mov
add
mov
outs
(bad)
icebp
jg
inc
jae
(bad)
push
jne
adc
je
mov
cmp
sub
int3
daa
scas
loop
cmp
cwde
push
vmwrite
xchg
rcr
scas
adc
ins
fcomp
mov
mov
lahf
test
adc
aaa
lods
lds
dec
out
js
adc
lods
fs
push
cmp
lds
dec
sbb
mov
and
jmp
xchg
pop
movs
rol
jp
shl
into
bound
jne
lahf
dec
sbb
test
add
jg
adc
cs
adc
mov
add
jle
jae
jecxz
push
inc
or
push
adc
push
jmp
repz
pop
loop
test
(bad)
xchg
pop
push
jge
shr
fs
test
or
cs
add
inc
dec
dec
cmps
shl
adc
std
daa
mov
or
arpl
adc
xchg
mov
mov
jno
pusha
mov
dec
out
test
jmp
(bad)
sub
imul
out
loop
push
adc
lods
iret
lods
and
ins
movs
adc
jo
xor
cmps
xchg
mov
bound
jecxz
addr16
inc
and
fisttp
jmp
dec
xor
pushf
sbb
sahf
jmp
push
cmp
mov
aam
push
push
pop
loope
call
shl
cmp
adc
test
jo
jno
jne
fidivr
(bad)
xlat
leave
pop
adc
aaa
push
push
add
clc
ret
outs
hlt
aad
jno
out
loop
cwde
out
test
xchg
ss
ss
addr16
pusha
test
mov
and
pop
fistp
shr
repz
enter
sub
inc
push
lock
ja
mov
fisub
mov
pop
je
ret
and
mov
sbb
sbb
cmc
cmp
movs
inc
sub
ror
xchg
add
aam
bound
in
mov
mov
es
lods
stos
sbb
enter
xor
sbb
mov
and
jl
jmp
call
adc
inc
mov
popf
jb
(bad)
cli
test
sub
sub
cmp
mov
fcmovb
push
and
ror
out
xchg
xlat
mov
out
in
bound
inc
outs
mov
out
cld
xlat
lds
jnp
adc
nop
mov
ret
fs
or
xor
push
push
mov
pop
int3
mov
das
jne
test
or
cmp
push
cmp
aam
movs
add
es
and
out
pushf
int
mov
repz
sar
and
or
aas
jae
cmp
add
xchg
pop
(bad)
aas
jp
inc
cdq
and
or
int
lods
sbb
sub
ja
ret
xor
mov
adc
movs
sbb
inc
mov
mov
les
(bad)
bound
and
lods
pusha
and
movs
test
cmps
mov
hlt
aas
arpl
cmps
mov
fs
cmps
or
ins
int
test
aaa
bound
retf
ins
cdq
adc
mov
jp
push
sbb
lahf
clc
popa
std
add
retf
lods
call
stos
inc
leave
jno
movs
cmc
cmps
daa
ret
mov
or
or
ficom
xchg
fldcw
fst
(bad)
xchg
adc
cmps
push
popf
mov
jecxz
scas
jno
data16
mov
pushf
add
adc
gs
pop
dec
mov
xor
call
leave
mov
or
out
jo
fdiv
stos
cmp
fwait
sbb
xchg
addr16
jo
jnp
cmp
mov
rcl
sbb
clc
dec
mov
adc
xor
mov
pop
xchg
dec
fimul
retf
loopne
dec
out
and
sub
add
enter
loop
sar
call
mov
cmp
test
dec
sbb
gs
fimul
jno
mov
popf
jb
mov
arpl
cli
and
icebp
vpunpckhqdq
mov
dec
mov
xchg
xchg
ds
sub
push
jns
test
and
sub
xor
xor
fdiv
push
adc
cdq
cmps
jmp
push
mov
das
sub
out
xor
rol
cdq
pop
imul
rcl
inc
enter
test
aas
(bad)
dec
je
aaa
jb
fbstp
lea
aas
inc
sbb
ret
xchg
pop
into
mov
inc
dec
or
xor
mov
push
jbe
fist
mov
sub
jbe
pop
arpl
or
imul
mov
sahf
mov
aaa
out
jle
movs
adc
mov
xchg
xchg
jne
mov
ja
int3
lock
jno
pop
jne
jns
lock
or
adc
mov
or
movs
imul
xor
loopne
loopne
call
test
jnp
ins
in
clc
pop
sbb
jmp
int
adc
ret
sbb
das
sbb
adc
mov
lods
jp
or
jo
sar
inc
xor
xchg
cmp
or
pop
std
hlt
cwde
cmp
pop
push
fadd
adc
sub
stc
scas
test
ins
and
mov
jne
inc
fnsave
mov
(bad)
xor
sub
ss
fst
pop
push
push
inc
in
icebp
aas
jne
addr16
mov
cdq
retf
pop
jno
stos
imul
inc
sub
jg
jno
lds
outs
or
(bad)
inc
clc
mov
mov
cmp
fnsave
inc
arpl
sbb
out
imul
jmp
jge
xor
sbb
(bad)
ins
test
nop
test
cdq
dec
push
push
ds
or
jl
pop
cmp
loop
xchg
or
push
test
dec
sbb
(bad)
ffree
aad
pop
push
es
jno
ins
ret
mov
push
cmps
dec
stos
in
(bad)
jmp
pop
cdq
pop
inc
leave
jmp
cdq
call
mov
fld
sbb
lock
xchg
(bad)
rol
test
push
mov
pop
dec
xchg
aaa
sub
pop
and
ins
inc
cmp
cld
mov
fmul
mov
jp
(bad)
lahf
push
pop
push
xchg
xchg
stos
retf
int
cmps
mov
clc
add
adc
mov
sub
out
xchg
enter
repz
or
mov
cmc
stc
retf
sub
pushf
out
xor
outs
ja
popf
fbstp
push
add
or
cmps
ss
cwde
add
imul
stos
sbb
add
call
mov
mov
sbb
mov
sub
xchg
gs
xchg
sbb
pop
lods
adc
mov
iret
mov
ret
mov
fs
stos
inc
mov
retf
add
enter
dec
imul
cmp
call
xor
add
xor
cmps
dec
sbb
inc
sub
push
add
aaa
cmc
push
imul
call
loop
push
(bad)
retf
sahf
test
push
enter
ss
or
or
jmp
test
clc
xchg
mov
pushf
push
lea
adc
jp
or
sbb
jb
push
cdq
shl
repz
adc
cli
push
ja
mov
dec
clc
out
retf
adc
arpl
data16
cli
xchg
mov
std
shl
test
out
adc
lods
daa
dec
cmps
fwait
mov
fcomp
cwde
pop
dec
lods
ja
sbb
popa
xchg
xchg
pushf
lods
inc
inc
cdq
ret
pop
dec
mov
fstp
lock
scas
mov
xchg
push
std
xor
mov
pop
sub
xchg
ds
je
loope
std
pop
pop
loopne
cmps
inc
jp
leave
pop
adc
sub
adc
(bad)
stc
dec
bound
fbld
push
pusha
sub
clc
js
and
cmp
fs
jno
rcr
ins
push
bound
jmp
test
daa
lods
fcomp
cmp
icebp
outs
jb
stc
push
das
or
jg
mov
test
mov
cmp
scas
enter
adc
repz
mov
xor
pop
aam
ja
pop
(bad)
retf
push
cld
xor
and
push
sub
and
push
mov
fcom
cmp
imul
ret
cmp
mov
xor
mov
jb
out
mov
pushf
cmp
mov
popa
push
sahf
addr16
sbb
mov
cmp
add
test
retf
jb
ins
jb
pop
push
adc
xor
xor
ror
fld
jae
xchg
mov
mov
xor
(bad)
shl
out
sub
mov
test
xor
cmp
aam
retf
jbe
fidiv
cmp
xor
jg
ins
xchg
mov
imul
fwait
lds
adc
sub
movs
push
pushf
pushf
clc
ins
mov
or
push
test
bound
neg
cmp
mov
and
or
arpl
push
repz
stos
inc
sahf
mov
xor
gs
arpl
inc
(bad)
pop
xor
mov
in
add
dec
in
dec
dec
and
es
xchg
and
cwde
std
jo
inc
ins
iret
stc
ret
mov
fcom
fisub
pop
repz
arpl
sbb
repz
xchg
hlt
push
adc
dec
aas
and
push
mov
imul
hlt
dec
ins
les
(bad)
sbb
xor
mov
dec
rol
jge
popa
in
ins
cmp
loope
fstp
stc
stos
lds
sub
adc
and
or
sbb
push
or
mov
adc
sbb
retf
loop
xchg
or
or
ss
inc
push
(bad)
(bad)
aaa
mov
repnz
cmc
repnz
popf
mov
ja
cmp
xlat
mov
sbb
or
mov
sbb
mov
pop
and
dec
shl
pop
add
ficom
fwait
add
add
add
push
or
and
enter
mov
push
jecxz
in
mov
or
jmp
stos
sbb
add
cmps
cmps
mov
repnz
aad
fs
push
pop
xor
sbb
mov
xor
fsubr
arpl
repnz
or
cmp
push
inc
lock
cs
sub
dec
das
adc
pushf
lods
sub
cmp
in
inc
inc
outs
in
cld
mov
dec
ins
push
dec
sub
add
imul
scas
mov
push
and
lock
jg
fdivr
fcomp
imul
ds
outs
inc
pop
or
mov
sahf
rcr
xchg
inc
bound
fisubr
mov
out
jp
fisub
sub
popf
add
leave
shl
data16
push
mov
clc
push
cmp
lahf
pop
cld
push
dec
xchg
imul
cmp
cwde
scas
ss
not
xor
aas
call
movs
pop
xchg
and
xor
xor
in
(bad)
and
cmp
add
jno
fadd
loopne
sbb
lock
jge
pushf
(bad)
scas
retf
sti
jmp
push
adc
inc
cmp
xor
jb
cld
jnp
je
(bad)
mov
sub
dec
xor
stc
inc
loop
popa
fimul
into
aam
and
outs
scas
cmc
loope
out
mov
jp
and
push
call
sbb
das
aad
popa
sub
stc
repz
aam
je
loope
xor
xchg
mov
cmp
cli
pop
aam
jns
lock
cmp
rol
ss
int3
pusha
aad
pop
fisubr
inc
push
das
nop
adc
jmp
ret
stos
sar
and
xor
fisubr
js
add
or
jle
movs
and
push
test
out
or
or
sbb
adc
mov
in
cmp
repz
addr16
scas
imul
xchg
inc
sahf
sub
icebp
cwde
inc
mov
sub
xchg
add
xor
ins
jne
cmc
shl
icebp
push
xor
jle
data16
cmp
push
icebp
test
and
cmp
lahf
aam
push
nop
test
into
es
jno
mov
cmps
and
xchg
and
shr
cmp
sub
fld
repnz
xor
into
inc
gs
sub
loop
cmc
test
inc
xchg
mov
mov
sub
mov
retf
cmps
or
xchg
push
mov
or
pop
xchg
push
add
clc
push
movs
jne
test
mov
es
imul
arpl
pop
ja
add
cmps
inc
cld
ds
test
push
retf
clc
xchg
lahf
sub
adc
xchg
out
or
pop
outs
out
inc
fdivr
adc
into
jl
gs
cmps
sub
mov
cmps
frstor
sub
das
pop
push
inc
in
pop
into
enter
fsub
movs
loopne
mov
add
push
sbb
cmp
mov
sbb
xlat
mov
inc
sbb
pop
adc
mov
sbb
stos
or
into
xlat
call
inc
cli
test
sbb
sub
mov
ds
retf
fadd
popa
pop
or
jb
push
popf
loopne
or
lea
pop
(bad)
mov
into
enter
(bad)
std
out
ins
mov
data16
test
and
jmp
daa
test
xchg
out
pop
sub
xlat
push
fdiv
mov
adc
fmul
mov
ror
or
lock
sbb
dec
sti
sub
cdq
shl
ficomp
or
jae
mov
pop
int3
lea
int3
mov
xor
shl
jmp
inc
retf
in
sbb
jb
dec
jb
retf
cmp
cmp
inc
ret
add
jno
and
int3
and
push
push
mov
pop
jle
or
add
sbb
add
movs
add
in
or
xchg
in
ja
js
pop
js
sbb
jmp
(bad)
cmps
loope
inc
mov
pop
or
int3
add
cmp
mov
adc
(bad)
pop
aaa
test
push
retf
mov
hlt
scas
and
dec
fiadd
repnz
xor
cwde
adc
in
inc
jo
pop
push
and
inc
lahf
pop
(bad)
fbld
adc
cmp
inc
inc
scas
out
stos
xlat
mov
imul
pop
(bad)
stc
and
movs
hlt
mov
or
bound
hlt
cmp
mov
test
and
pop
mov
inc
pop
mov
mov
nop
popf
lahf
add
je
and
mov
sti
mov
jl
jbe
inc
mov
cmp
sbb
ror
lods
call
je
ret
push
sti
sbb
rol
xchg
pop
adc
ds
es
dec
popf
xlat
xor
ins
xor
adc
(bad)
(bad)
int3
xchg
cmp
into
fadd
out
not
mov
clc
inc
jmp
cwde
push
jae
ret
push
movs
call
xchg
int3
sbb
push
sbb
dec
push
pusha
jae
xlat
cmp
not
(bad)
and
add
mov
stc
jg
inc
clc
mov
fisttp
push
mov
add
cmps
push
ins
test
jb
sbb
xor
(bad)
les
in
ds
out
jecxz
inc
xchg
jecxz
loope
adc
stos
cmp
mov
sbb
pop
dec
in
sub
dec
lahf
mov
push
popa
push
adc
ret
fwait
sub
cld
(bad)
xor
scas
xchg
out
ret
out
push
sub
call
outs
fcmove
inc
pusha
dec
jg
xlat
(bad)
fdivr
push
lds
sbb
and
adc
push
fcomp
dec
loope
jge
mov
mov
dec
xor
rcl
mov
fs
pop
cmp
arpl
add
mov
jne
lods
pop
push
mov
mov
mov
fucom
inc
mov
push
gs
rcr
(bad)
xor
mov
pop
xchg
(bad)
jne
mov
sub
(bad)
loopne
push
xchg
xchg
sahf
jl
pop
in
stos
out
dec
pop
aas
dec
cli
rcl
lods
dec
xchg
int
test
add
in
leave
imul
dec
mov
por
xchg
pop
popa
ds
push
mov
loope
jge
and
adc
xchg
movs
mov
cmps
sub
scas
ror
(bad)
and
xlat
jmp
and
outs
outs
lock
pop
xchg
fisubr
mov
xchg
addr16
cli
ds
pop
xchg
adc
inc
ss
call
mov
and
stc
stc
clc
pop
and
inc
(bad)
xchg
bound
mov
in
loop
push
mov
fisubr
jp
xlat
dec
inc
movs
adc
cmp
std
stos
or
sbb
pop
add
mov
movs
sbb
pop
jo
or
xor
std
add
mov
lahf
retf
push
mov
call
(bad)
xchg
or
mov
cmp
push
jp
cmp
mov
mov
and
xchg
fild
stos
jp
inc
mov
(bad)
cmp
sar
mov
and
daa
ja
push
xor
dec
xchg
inc
add
imul
addps
push
dec
and
sub
(bad)
cmp
out
addr16
xchg
mov
jbe
inc
movs
mov
mov
sbb
lds
or
dec
jmp
cmp
xor
adc
xchg
cmp
adc
mov
or
pop
or
aaa
fs
push
inc
dec
int
pop
xor
mov
adc
gs
outs
lock
call
jmp
test
ret
xor
es
mov
adc
fst
or
cs
jmp
xchg
clc
inc
mov
daa
retf
push
xor
mov
adc
mov
xor
ins
pop
in
sub
pop
ins
movs
iret
mov
mov
repnz
aad
dec
add
mov
sar
pusha
(bad)
(bad)
std
xchg
mov
sbb
xchg
jl
push
in
addr16
sub
jo
popf
add
and
test
mov
lea
lds
sti
adc
xor
and
xchg
add
lds
xor
retf
cld
mov
rcl
and
stos
cmps
mov
jbe
and
scas
cs
sbb
bound
in
pusha
sub
ret
jmp
stos
(bad)
cli
push
in
jp
ret
psubq
int3
pop
int3
(bad)
sub
int3
add
dec
int
xchg
bound
daa
ds
lods
(bad)
sbb
adc
sqrtps
jmp
pop
or
push
push
mov
or
xor
ret
bound
outs
out
js
dec
lods
sub
les
dec
lahf
(bad)
dec
ucomiss
jge
xor
test
mov
add
cmp
pop
lock
mov
call
pop
pop
xchg
mov
pusha
pushf
xchg
push
cmps
push
and
and
pop
inc
nop
rdmsr
jmp
repz
lea
push
lds
jae
jg
jns
rcl
jmp
pushf
mov
lea
sub
outs
mov
scas
jnp
retf
stos
sti
xor
jns
push
and
clc
sahf
or
adc
and
and
pop
leave
rol
stos
test
sahf
pop
stos
mov
ret
mov
sahf
dec
mov
lahf
inc
and
fdiv
mov
shl
mov
xor
and
test
mov
fmul
mov
inc
or
xchg
pop
outs
stos
sbb
aaa
jp
nop
mov
pusha
in
lock
adc
xchg
sub
(bad)
aas
mov
push
mov
sub
lds
jmp
inc
xor
push
(bad)
sub
test
xchg
jne
stos
cwde
lea
mov
mov
jl
adc
ds
out
bound
ret
call
sub
out
icebp
inc
cmp
push
stos
enter
jmp
ss
adc
cmp
cdq
lea
data16
or
or
pop
test
jg
jo
popa
mov
mov
jg
push
int3
push
out
xchg
add
(bad)
pop
shl
push
xchg
jno
lock
sub
aaa
sahf
mov
mov
call
dec
test
xchg
out
fimul
scas
scas
mov
jmp
xor
mov
int3
(bad)
imul
pop
pop
adc
sbb
xor
fnsave
rcl
cli
out
(bad)
mov
pop
cld
mov
(bad)
and
ins
mov
ror
loopne
push
mul
push
dec
or
dec
lock
or
or
pop
jb
xchg
fs
mov
push
pop
push
std
(bad)
mov
cwde
pause
pop
out
rcl
mov
dec
stos
push
div
cmp
repz
jmp
mov
or
sbb
test
retf
loopne
push
sti
jecxz
leave
jno
les
mov
xchg
xchg
adc
inc
push
scas
lods
add
lods
mov
xor
dec
test
imul
push
and
fistp
inc
jne
sub
jge
aas
cmp
push
or
xor
inc
push
adc
inc
or
dec
dec
mov
mov
rol
test
fucomi
aam
shl
adc
cmp
push
adc
adc
mov
inc
mov
jmp
aam
mov
xor
mov
mov
add
sbb
mov
daa
(bad)
push
pop
and
jl
sahf
and
and
sub
jmp
add
ror
lock
cs
dec
lock
je
std
mov
fistp
mov
jg
sub
inc
lahf
int
push
jo
pop
movs
sbb
cmc
mov
scas
mov
dec
or
(bad)
jbe
add
(bad)
std
and
adc
xchg
inc
mov
and
mov
jmp
adc
jle
cmp
inc
xlat
pop
repnz
and
push
adc
xor
pop
xchg
dec
pop
in
imul
das
rol
push
fwait
pop
or
dec
mov
cdq
jecxz
ins
int3
pop
mov
or
rol
cwde
mov
mov
fld
pop
(bad)
out
mov
std
les
loopne
adc
inc
pop
jl
xor
rol
push
mov
cmps
push
add
xor
inc
outs
jl
cmp
nop
xor
sub
jno
dec
sub
jno
xchg
add
int3
mov
retf
sbb
and
push
idiv
mov
aaa
dec
scas
js
pushf
jl
loope
ss
stos
addr16
gs
cs
mov
enter
retf
xor
push
push
jae
(bad)
aad
mov
(bad)
xor
sbb
and
in
cdq
stc
xchg
sahf
push
mov
cmp
push
fisubr
cli
pop
data16
jnp
leave
or
inc
ins
ins
bound
push
add
lods
xchg
fwait
cmp
push
popw
and
sbb
jbe
cmp
fdivr
ins
stos
sub
clc
mov
imul
xchg
scas
(bad)
aas
dec
jp
ficom
add
pop
jge
pop
push
push
jmp
call
ins
inc
pop
sti
jle
sub
(bad)
sub
test
jo
das
mov
iret
mov
(bad)
sti
sti
(bad)
push
out
(bad)
shr
cmp
dec
push
dec
inc
jmp
mov
inc
test
cmps
push
adc
gs
ss
pop
in
jmp
mov
cdq
retf
dec
sub
call
pop
ffree
inc
cmp
mov
ja
add
and
mov
or
std
sub
cmp
cld
push
fistp
ret
leave
pop
pop
ins
pop
mov
enter
pop
xor
loopne
jmp
loope
add
push
test
retf
repz
mov
push
in
mov
xor
pop
in
lahf
mov
dec
test
out
jae
(bad)
loope
int3
jl
test
inc
mov
bound
dec
mov
scas
mov
mov
(bad)
into
xor
and
loope
jb
fcomp
add
pop
and
movs
mov
push
xchg
cmp
mov
pusha
mov
call
pop
mov
mov
mov
pop
outs
dec
push
mov
popa
aad
or
mov
push
jae
ror
mov
mov
es
ins
jg
pop
ins
push
pusha
iret
test
sub
(bad)
xchg
inc
xor
mov
retf
dec
iret
fisttp
mov
fidivr
or
jb
in
sub
sub
push
mov
daa
add
xchg
dec
test
ss
lods
ins
dec
std
addr16
in
sar
sti
mov
pop
xor
loopne
jl
jne
iret
add
adc
mov
nop
mov
xchg
or
fwait
data16
mov
pushf
adc
rcr
mul
rcr
jp
dec
scas
sub
jmp
pop
mov
xchg
mov
cmp
imul
xor
and
push
enter
dec
dec
clc
ss
test
cmp
ret
cmp
jl
movs
cld
xchg
dec
outs
(bad)
mov
aaa
movs
or
adc
repnz
stos
(bad)
jl
aaa
ds
push
leave
out
add
pop
xor
and
add
in
or
ins
call
mov
popa
sub
sbb
jmp
repnz
pop
pop
loopne
retf
int3
into
adc
stc
mov
lods
or
outs
stos
enter
out
jecxz
jbe
and
imul
adc
cmp
mov
js
and
sub
push
lahf
mov
pop
retf
cwde
adc
push
xchg
dec
and
adc
jl
(bad)
int3
mov
mov
in
mov
mov
scas
pop
xchg
scas
and
out
dec
out
push
mov
pop
xor
adc
jl
xor
or
aaa
je
lods
push
in
lds
int3
sbb
or
inc
jne
xchg
retf
leave
cmp
arpl
lahf
jns
inc
fild
popf
mov
retf
push
mov
mov
push
les
push
xchg
or
xchg
jecxz
test
das
lods
(bad)
push
ffree
and
xchg
mov
stos
jb
inc
jbe
or
dec
adc
loop
xchg
out
and
cmps
jno
cmp
dec
inc
das
jg
add
push
shl
jmp
test
maxps
pushf
cmp
hlt
or
scas
shl
mov
push
xchg
fldcw
or
pusha
push
aad
pop
jns
xor
out
test
cmc
jns
adc
imul
jmp
xlat
mov
ret
push
hlt
ss
shl
fld
lock
jno
dec
int
mov
mov
ins
jae
sub
pop
mov
push
cmp
cmps
std
mov
pop
add
xor
jo
fdivr
xchg
cmp
inc
retf
stos
or
xor
mov
ss
ret
popa
cdq
or
mov
xor
scas
mov
xchg
xchg
jg
(bad)
gs
(bad)
(bad)
movs
mov
ja
mov
sub
mov
enter
out
not
ss
push
xor
xor
jmp
adc
sbb
mov
jecxz
call
adc
(bad)
mov
mov
jo
push
xlat
repz
pop
dec
dec
cmp
inc
sub
xor
cmp
pusha
xor
mov
sbb
mov
inc
push
lock
xor
fwait
mov
(bad)
test
push
mov
pop
xchg
mov
or
cmp
push
loopne
(bad)
adc
sub
add
aam
gs
jnp
jb
ret
adc
sbb
sbb
aad
neg
retf
out
cmp
into
out
cmc
inc
sbb
sub
cld
cli
cmp
ror
int
mov
inc
fs
movs
jno
lea
or
imul
mov
lea
ret
outs
movs
outs
push
pop
sahf
adc
inc
icebp
xchg
aad
mov
mov
std
sbb
dec
aad
dec
loopne
mov
dec
push
push
xor
rcl
jae
(bad)
push
out
mov
add
pop
push
popa
mov
retf
mov
sbb
mov
add
pop
jmp
cdq
push
call
xchg
and
xor
mov
adc
mov
cmp
push
dec
pop
ror
xor
mov
int3
arpl
xchg
test
xchg
add
and
mov
ret
pop
pop
pop
dec
xchg
call
or
sbb
sub
iret
or
sahf
xlat
retf
sbb
les
gs
xchg
dec
cmp
mov
popa
xchg
arpl
push
jb
lock
mov
cmp
inc
add
out
mov
jns
outs
sbb
cli
das
jp
sub
or
arpl
push
sbb
sbb
aam
or
mov
(bad)
dec
pop
hlt
mov
fmul
push
mov
(bad)
addr16
dec
ins
scas
lahf
int
xor
lods
or
cs
push
idiv
cmps
out
in
daa
call
mov
push
or
pop
inc
cli
cmc
push
xchg
or
push
jmp
inc
xchg
mov
retf
mov
pop
or
or
stc
add
mov
cmp
fstp
mov
out
xlat
mov
sub
cmp
inc
and
dec
or
sbb
je
aam
aam
(bad)
mov
imul
jne
je
frstor
sbb
dec
movs
xchg
scas
jae
stos
mov
sbb
or
arpl
sbb
out
mov
jnp
mov
xchg
xchg
ja
cmp
lods
adc
xchg
jne
std
mul
or
cmps
pop
xchg
pop
push
shr
sub
aas
fild
mov
sub
and
shl
sahf
mov
ja
ret
les
or
cmps
(bad)
cs
dec
out
movs
add
add
push
adc
xchg
pop
ficomp
pop
sbb
ror
outs
inc
mov
adc
movs
enter
push
pop
dec
pop
int
rcl
fnstsw
shl
stos
sub
(bad)
xlat
(bad)
xor
xor
js
mov
popf
xchg
daa
xchg
inc
mov
xor
fldcw
fld
dec
mov
and
sti
repz
pop
sub
lods
mov
out
or
push
ror
add
popf
and
out
imul
imul
das
push
jnp
mov
xor
(bad)
push
mov
xor
adc
idiv
jle
adc
lods
push
imul
cmp
xchg
cli
es
daa
push
enter
retf
stos
mov
push
jge
js
inc
or
add
in
jb
mov
xchg
adc
imul
mov
shl
mov
xchg
push
pop
sbb
add
mov
mov
mov
cli
adc
pop
xchg
adc
cmp
fimul
sbb
sbb
hlt
aad
jmp
fisubr
hlt
(bad)
stos
ins
loop
shl
mov
or
mov
ret
pop
and
sbb
sbb
(bad)
mov
cmp
jno
jmp
dec
int3
and
mov
cmp
out
stos
rcl
add
outs
jmp
jmp
out
sbb
mov
jns
sbb
popa
in
retf
cmp
push
push
pop
lock
xchg
inc
mov
sub
fld
and
lea
ja
ss
cmp
pop
and
ja
jle
xchg
push
add
mov
pop
push
adc
adc
or
jbe
loope
repz
daa
push
lock
int
pop
pop
shl
adc
jp
and
mov
jg
push
(bad)
add
mul
retf
idiv
loop
add
ret
jbe
pop
lods
js
retf
retf
std
push
mov
aad
jmp
nop
xchg
add
add
les
xor
mov
shl
jmp
ja
dec
out
dec
adc
int3
cmp
ds
pop
ja
xor
fsubr
fs
jbe
outs
push
mov
inc
fild
out
ins
mov
shr
push
pop
sbb
jl
nop
pop
inc
or
jmp
push
xchg
loop
push
push
js
mov
sub
jbe
inc
xchg
dec
test
stos
push
add
cs
shl
push
or
dec
sub
add
fcom
mov
stos
add
mov
cmp
push
and
loope
xchg
in
bound
jmp
fucom
mov
inc
add
es
pushf
stc
jae
mov
cmovs
sub
cwde
dec
stos
(bad)
hlt
xchg
clc
aas
outs
add
dec
adc
pop
sub
inc
sbb
add
jl
mov
dec
lock
sahf
ret
fldcw
sub
mov
fcomp
inc
or
repnz
data16
ret
sbb
cmp
loop
jo
jae
xchg
pop
inc
stos
cmp
mov
loope
movs
dec
repnz
data16
scas
xchg
loopne
add
dec
inc
cmps
retf
sub
std
leave
shl
mov
loope
ja
jno
fcom
rcr
call
sub
sub
inc
mov
jecxz
jne
xchg
xchg
fild
leave
pop
jl
xor
in
(bad)
cmp
cwde
jge
sahf
adc
add
dec
sbb
mov
mov
inc
xchg
cmp
loop
stos
jle
icebp
imul
inc
cmp
retf
cwde
cmp
adc
mov
imul
jge
push
pop
mov
enter
inc
mov
jbe
ja
xor
popa
pop
clc
and
add
or
loope
pushf
out
test
test
and
sbb
and
leave
test
adc
ss
mov
adc
cmp
mov
mov
sub
sbb
std
or
bnd
mov
xchg
add
lods
ret
lods
dec
lock
dec
addr16
and
pop
xchg
sub
dec
dec
js
loopne
or
div
shl
xchg
into
xchg
or
pop
int3
cdq
jl
mov
scas
jno
mov
xchg
mov
mov
mov
jecxz
mov
mov
mov
sub
xchg
push
xlat
sbb
xor
es
ret
mov
and
movzx
(bad)
xor
repnz
out
jo
push
adc
clc
ret
and
scas
jp
jne
icebp
cld
(bad)
jne
nop
mov
repnz
add
js
cmps
data16
outs
mov
inc
mov
mov
xchg
xor
lock
cmps
cmps
sub
fs
mov
ror
gs
or
jo
out
push
es
ficom
mov
sub
and
xchg
push
push
stos
adc
arpl
xor
cld
retf
cs
dec
xchg
mov
xchg
mov
push
xor
xlat
mov
pop
mov
dec
das
out
mov
xor
mov
jle
or
ds
jg
pop
cld
cmp
cmp
ffreep
(bad)
pop
mov
sar
dec
movs
(bad)
lods
enter
xchg
ret
xlat
cmp
jne
inc
lds
and
adc
(bad)
sub
xor
(bad)
push
jg
mov
div
ror
mov
rcr
dec
or
sub
add
ror
xor
int
mov
xchg
in
in
xchg
inc
shl
(bad)
in
mov
sbb
xor
xor
jmp
shl
inc
cs
mov
add
bound
xchg
push
test
mov
mov
xchg
fadd
xor
push
sub
not
aaa
call
push
mov
mov
pop
rol
lds
ffreep
gs
call
pusha
(bad)
push
int3
dec
adc
rcr
mov
cmp
xor
cdq
aad
xchg
jne
mov
mov
imul
shl
cld
or
mov
int
and
repnz
push
xchg
or
mov
shr
jecxz
in
clc
(bad)
aas
sub
and
mov
mov
pop
daa
mov
xchg
mov
xchg
vpsraw
cmc
repnz
sbb
jae
xchg
and
cmps
(bad)
movs
retf
push
sbb
push
or
or
xchg
mov
mov
out
daa
and
mov
and
int
push
stc
cmp
out
imul
pushf
adc
jl
movs
push
xor
and
dec
fisttp
xor
ds
and
xor
and
or
enter
jge
shr
or
scas
int
mov
cs
pusha
sub
xor
xor
pop
retf
sub
fnstsw
inc
fild
and
xor
adc
les
mov
sbb
ret
test
mov
mov
add
xor
pop
add
in
je
sub
(bad)
fucomp
rcl
pop
cmps
fcmovb
mov
pop
mov
mov
mov
movs
movs
xchg
mov
jns
and
jl
pop
dec
out
cli
outs
sub
scas
ret
sub
mov
scas
movs
js
add
sti
repz
inc
aam
(bad)
daa
iret
mov
aad
aas
in
add
pop
jg
xchg
jmp
neg
ror
cmp
sub
or
pop
jmp
jb
movs
add
and
inc
xor
and
pop
push
xchg
jg
mov
sti
cmp
out
xlat
mov
fiadd
std
mov
aaa
cmp
dec
sub
mov
retf
mov
test
lahf
(bad)
cli
xchg
cdq
lock
jb
cmps
jbe
es
xchg
or
lea
fidivr
pop
cli
cmps
pop
arpl
jg
hlt
push
and
jge
sbb
ret
es
repz
jge
adc
lock
iret
pop
stos
mov
mov
cs
cmps
fdiv
or
(bad)
out
and
add
cmp
push
mov
pop
inc
push
imul
cmp
add
test
stos
cmp
sub
outs
xor
mov
sahf
ficom
call
repz
xor
outs
mov
or
lods
mov
ficom
jnp
cmp
dec
xor
outs
gs
pop
fwait
xchg
iret
push
pop
rcl
xchg
rcr
retf
jecxz
lods
or
arpl
cmps
and
adc
mov
xchg
jmp
dec
(bad)
xchg
mov
ror
out
or
ret
shr
call
pusha
or
fisubr
enter
mov
push
or
mov
adc
js
inc
sub
fiadd
xchg
dec
neg
adc
dec
int3
xchg
cmp
imul
jmp
cmps
push
dec
and
call
lods
cmp
xlat
inc
mov
jge
test
out
mov
(bad)
in
mov
nop
ss
sub
add
in
stc
inc
inc
push
imul
ret
mov
test
jmp
call
xchg
sbb
jns
mov
cmp
inc
pop
pop
jle
pop
inc
push
aad
xchg
xchg
push
xchg
dec
cwde
push
ret
lock
mov
cmp
or
jecxz
mov
cmps
jp
jo
repz
ja
mov
fist
xor
pushf
nop
adc
dec
(bad)
sub
rol
jg
inc
or
add
mov
ins
xchg
xor
(bad)
outs
(bad)
hlt
jmp
sti
outs
and
cmp
repz
dec
jns
outs
add
mov
mov
cmps
lods
rcr
iret
loope
(bad)
sub
aas
sbb
mov
and
mov
inc
fidiv
fsubr
fcomp
cmp
(bad)
or
out
in
das
sti
push
fild
leave
test
pop
jle
lea
shr
gs
fnstcw
enter
js
js
mov
sahf
cmp
add
fimul
shr
adc
and
inc
dec
or
mov
ror
add
sub
pop
(bad)
jmp
add
pop
xor
push
xchg
dec
aas
call
pop
jecxz
jmp
xchg
aad
xlat
push
bound
xor
push
push
cmp
adc
fisttp
adc
pop
push
out
dec
xchg
sti
fsubr
retf
pop
cli
mov
call
stos
enter
mov
jmp
xlat
mov
(bad)
xlat
imul
mov
push
call
mov
std
loop
or
and
(bad)
sbb
xor
mov
adc
in
dec
fdiv
jns
add
(bad)
fs
add
inc
stos
lea
rol
iret
sub
jp
sbb
xlat
lock
repz
lahf
inc
inc
push
ss
(bad)
or
sahf
fidiv
retf
mov
add
push
dec
aaa
(bad)
jl
(bad)
xchg
and
into
push
cmc
and
mov
aaa
adc
jno
push
dec
pushf
pop
pop
in
sbb
xchg
bound
leave
and
stos
sbb
jl
popf
ret
xchg
push
adc
jle
add
fcmovne
inc
jp
jecxz
push
fst
sbb
xor
int3
(bad)
std
pop
cdq
in
and
clc
jbe
int
pop
imul
sbb
dec
shl
lds
inc
or
jns
pop
xchg
cli
adc
call
xchg
test
cmps
les
loopne
jge
fisttp
mov
mov
(bad)
and
xor
mov
sbb
in
int3
popf
and
test
(bad)
mov
loope
sbb
test
push
ss
jns
scas
icebp
inc
add
sbb
sbb
fldcw
lahf
popf
ret
push
sti
mov
arpl
xchg
ss
outs
mov
retf
out
inc
jecxz
ret
call
jne
cmps
mov
jae
xchg
dec
jmp
sbb
adc
cmp
mov
sbb
dec
mov
jne
sbb
sub
test
inc
mov
sub
mov
call
js
mov
xchg
push
dec
adc
jmp
shl
mov
cld
or
sti
bswap
out
push
xor
xchg
imul
and
(bad)
sbb
(bad)
sub
fwait
sub
xor
xor
outs
fs
and
jmp
ret
push
aad
leave
mov
adc
push
fmul
pop
sub
ds
mov
test
or
add
jg
loopne
sbb
push
lahf
imul
adc
pop
fiadd
cld
mov
gs
inc
fwait
mov
fdivr
inc
into
xor
jmp
dec
dec
push
(bad)
aas
cmp
sub
stos
ja
or
xchg
dec
dec
xlat
cli
or
cmp
mov
dec
jbe
mov
das
in
sbb
sbb
pop
dec
mov
xor
cld
adc
stos
in
jne
pushf
inc
movs
jb
out
in
sbb
cs
sub
pop
cmp
push
dec
adc
call
rol
call
lods
leave
inc
mov
(bad)
push
aam
dec
mov
cmp
(bad)
cmp
aaa
test
mov
dec
inc
cmps
jg
mov
inc
or
fwait
loope
daa
out
add
lahf
outs
push
cmc
or
test
jl
popf
icebp
mov
pop
push
jmp
ror
xor
(bad)
shr
lods
mov
xor
pop
ret
inc
and
imul
cs
mov
aas
pop
sub
shl
ds
in
push
pop
dec
and
imul
xchg
sbb
adc
push
sbb
cmps
mov
lock
lea
int3
adc
(bad)
push
fldenv
nop
mov
sahf
stos
pop
test
or
mov
fisttp
push
je
iret
jl
dec
and
cmp
shl
sbb
fdiv
dec
pop
push
fucomp
stc
fninit
mov
push
mov
xchg
xor
and
lods
mov
sbb
ror
push
shl
jbe
bound
add
mov
repz
cmp
sbb
ins
movs
xor
repz
stos
jmp
xchg
pop
fld
movs
fadd
add
cmps
nop
jmp
mov
jl
dec
mov
lahf
in
sbb
in
or
iret
nop
retf
jmp
push
loop
popf
xor
jg
dec
and
sub
ja
popa
pop
mov
mov
in
icebp
mov
pop
pop
jg
ret
out
pop
fwait
or
movs
xchg
icebp
xchg
sub
dec
adc
gs
repnz
enter
mov
mov
pop
cmps
xchg
inc
movs
loop
adc
data16
ins
imul
xchg
push
mov
and
dec
pushf
adc
std
mov
mov
or
push
mov
jb
out
jnp
into
call
and
cld
ins
add
and
lds
gs
dec
jno
std
xchg
pop
xchg
mov
(bad)
dec
(bad)
jnp
pop
pop
outs
xor
(bad)
pop
push
out
lds
cld
mov
xchg
data16
stc
mov
dec
pop
lods
out
ins
dec
je
mov
dec
cmp
adc
push
lods
(bad)
icebp
stc
push
leave
and
adc
fwait
push
inc
add
mov
addr16
adc
hlt
jae
out
mov
aaa
mov
push
add
popf
imul
inc
fst
add
cmp
int3
(bad)
nop
fidivr
sub
(bad)
push
sti
mov
xor
mov
out
aad
cmp
dec
int3
das
mov
jl
fdivr
ins
mov
pxor
pop
cmp
stos
ds
jp
hlt
sub
scas
mov
jmp
or
es
sar
jle
ss
(bad)
xchg
mov
mov
cmps
and
xchg
aaa
xchg
dec
mov
cwde
cmps
fisttp
in
push
push
push
lods
aad
ret
test
in
pop
call
xchg
call
call
inc
and
jg
mov
shr
(bad)
es
ins
mov
je
das
pop
pop
xchg
in
or
call
cmc
pop
in
push
xchg
sbb
movs
out
mov
scas
out
dec
ret
cmp
ins
cli
cmp
fucomp
dec
or
cdq
sbb
inc
jle
cld
sbb
popf
mov
ins
lahf
(bad)
movs
retf
mov
mov
leavew
dec
push
jmp
sub
out
xor
xchg
xchg
pop
daa
stc
movs
iret
add
dec
and
adc
jl
pop
mov
(bad)
clc
pop
in
mov
add
xor
hlt
cmp
leave
add
es
xchg
dec
cwde
cmp
jo
outs
xor
or
cmp
shl
pop
xchg
and
retf
popa
push
mov
jecxz
in
xor
shl
arpl
imul
retf
or
cmp
popf
pop
pop
sub
add
xor
loopne
mov
cmps
popf
dec
push
in
jmp
jmp
cs
mov
jg
xor
loopne
cld
jne
pop
sbb
test
or
out
jns
mov
clc
cmc
loope
sbb
cld
xor
dec
stc
fcomip
add
push
jmp
jecxz
into
jae
sub
mov
inc
mov
mov
sub
stos
cmp
dec
aaa
cmp
in
jmp
sbb
fwait
vorps
push
retf
(bad)
mov
ins
add
push
or
push
or
inc
jb
clc
mov
cmp
stc
inc
push
nop
out
pop
dec
imul
stos
pop
mov
mov
jl
pop
faddp
adc
clc
and
ss
mov
popf
clts
push
mov
inc
repz
inc
pop
pop
cmps
mov
(bad)
(bad)
das
pop
mov
repnz
sub
movs
test
fs
pop
mov
pushf
(bad)
lods
(bad)
aaa
pop
jnp
(bad)
and
pop
nop
pxor
movs
mov
sbb
pop
xor
rep
add
sub
push
mov
mov
stos
sbb
pop
ret
push
sub
je
call
rol
or
das
out
sbb
cmp
dec
push
mov
mov
(bad)
in
shl
pop
add
cld
shl
sub
jno
dec
dec
clc
push
adc
adc
inc
add
addr16
adc
sbb
cmp
int3
stos
aad
enter
ss
sub
shl
inc
dec
and
add
shl
push
dec
pusha
xlat
jmp
sub
pop
fst
pop
sbb
dec
sbb
clc
sub
in
int
bound
or
mov
push
and
ret
loope
inc
inc
dec
ja
stc
add
add
dec
xchg
or
sub
int3
cmps
je
fwait
mov
rcl
out
stos
dec
mov
push
out
jbe
jmp
fistp
push
loop
push
test
adc
sbb
out
xor
inc
ss
(bad)
imul
lea
int3
ret
iret
mov
lods
and
dec
and
sub
and
dec
and
pop
es
pushf
add
pop
sub
loopne
add
sahf
cmp
mov
fld
repnz
cli
mov
ja
xchg
ss
push
push
pop
push
adc
sahf
dec
rol
ret
mov
ret
fcmovne
iret
aad
mov
cmp
xor
push
out
add
sub
mov
push
sbb
imul
clc
retf
push
dec
fnsave
cmp
shl
addr16
in
call
jnp
fsubr
pop
ja
mul
movs
xor
jno
cmp
ss
ins
popa
or
sbb
ss
add
fwait
sub
inc
sub
ret
(bad)
and
push
mov
jno
inc
or
mov
push
add
enter
pushw
dec
test
in
ds
les
sub
xchg
mov
aaa
test
sbb
mov
retf
loop
pop
ror
(bad)
gs
cmps
sbb
scas
cmps
mov
jecxz
fidiv
hlt
out
int
xlat
mov
in
inc
out
push
adc
jb
inc
jne
in
or
push
jle
test
mov
ss
cdq
cmp
test
ret
push
sbb
pop
leave
fidivr
rcl
adc
sahf
call
cmp
xor
adc
mov
push
jmp
inc
lds
xchg
lea
lahf
jb
fdivr
push
retf
sub
ficomp
push
mov
xor
sub
cld
(bad)
call
adc
sbb
inc
adc
or
dec
jns
adc
rol
aas
or
sahf
add
lock
sub
push
out
inc
cmp
rcr
cmp
imul
in
lahf
retf
lahf
scas
sti
pusha
lds
fsubr
xor
adc
cmp
out
shl
dec
aas
ror
cdq
add
jnp
xchg
push
sub
dec
mov
mov
add
aam
jmp
out
outs
xchg
bound
(bad)
cmps
dec
aaa
outs
adc
fdivr
adc
mov
fistp
mov
push
call
jb
xor
xchg
ret
add
and
dec
gs
call
add
shl
jbe
in
lahf
test
mov
jecxz
inc
aaa
push
dec
js
mov
fdivr
addr16
popf
inc
mov
pop
jmp
adc
sahf
add
ret
mov
(bad)
mov
dec
fcom
pushf
inc
fnsave
sub
outs
fdivr
and
sahf
mov
nop
repnz
lods
push
mov
int
xchg
lods
stos
scas
out
adc
inc
test
imul
or
fiadd
loope
sahf
inc
dec
jle
push
mov
jecxz
xor
hlt
sbb
mov
dec
jne
fmul
inc
imul
inc
inc
in
popf
cwde
or
push
scas
inc
mov
rcpps
inc
sar
rcr
in
loope
shl
mov
add
or
push
shl
xor
or
call
in
das
push
xchg
mov
xchg
sahf
adc
sbb
aam
je
mov
mov
lds
rol
es
inc
pop
cdq
sar
pop
dec
(bad)
mov
aam
and
jne
out
mov
add
mov
mov
ja
sbb
add
and
sub
push
loop
and
mov
cmp
mov
sbb
xor
clc
pop
mov
scas
push
imul
mov
mov
sub
mov
cmp
dec
dec
(bad)
imul
xor
rol
fs
movups
pushf
dec
xchg
retf
loope
xchg
mov
inc
jae
cmps
enter
sub
outs
cmp
addr16
fwait
popa
je
(bad)
fwait
fs
xor
pop
or
pop
in
cld
push
dec
adc
lock
aad
push
test
cmp
mov
add
jle
fcom
shr
jg
call
je
mov
pop
dec
adc
cmp
or
bound
push
out
mov
movs
push
stc
xor
addr16
cmp
fwait
and
mov
popf
and
cli
mov
clc
jne
mov
xchg
das
test
mov
dec
fnsave
rol
jmp
xchg
test
rcr
stos
int
rcl
mov
jmp
call
fistp
stos
sub
sbb
jle
xor
leave
and
mov
push
enter
call
movs
push
outs
push
ins
add
int3
cmp
imul
cmp
std
sti
pop
into
cdq
sahf
cwde
rcr
dec
pop
mov
inc
scas
ins
sub
push
sbb
pop
neg
adc
cld
fiadd
jl
jnp
sub
lods
nop
or
push
pop
clc
addr16
cwde
sar
mov
dec
push
xchg
mov
fcomp
cmps
jecxz
bound
mov
and
inc
mov
(bad)
mov
and
test
out
out
fdivr
ficomp
jb
inc
sub
ds
mov
mov
mov
or
sbb
sub
jg
mov
test
loop
inc
push
popf
aaa
lds
mov
(bad)
mov
scas
mov
xor
or
dec
fisttp
popf
scas
ins
mov
ret
(bad)
push
sub
fldenv
leave
dec
retf
or
cmc
jmp
movs
pop
push
out
cmp
sub
aaa
pop
adc
jae
and
jmp
mov
sbb
pop
aaa
test
cmp
int3
aad
adc
loope
fcomp
(bad)
jne
jl
aaa
push
mov
pop
push
sub
outs
lods
sub
sbb
and
out
dec
jnp
and
xchg
cmp
xor
das
daa
sub
popf
mov
(bad)
stc
data16
call
ins
sti
jmp
fld
inc
fxtract
nop
fdiv
cmp
movs
inc
bound
jmp
or
dec
sub
inc
sbb
fwait
push
jl
es
(bad)
loop
jg
jb
das
mov
fiadd
add
shr
das
in
xlat
dec
loopne
or
mov
mov
pop
jne
data16
xchg
in
jnp
mov
xchg
movs
das
shl
fwait
add
jecxz
or
sbb
sbb
stos
in
mov
out
stc
daa
xchg
push
retf
push
push
mov
cbw
pop
inc
jb
push
shl
jno
ins
ins
push
mov
pusha
mov
push
push
adc
xor
call
nop
mov
mov
outs
test
jecxz
test
hlt
test
ds
inc
sbb
loope
jl
test
gs
jp
movs
in
dec
jmp
xchg
dec
add
(bad)
jl
or
jnp
repnz
pop
leave
xor
jl
lods
jb
cs
clc
cld
xchg
mov
inc
call
rdtsc
dec
je
or
ss
retf
jae
(bad)
sbb
gs
mov
push
arpl
pop
mov
je
sbb
push
je
int3
in
cdq
pop
jp
lock
retf
aas
repz
ins
pop
xchg
test
popf
dec
shr
xor
jp
push
(bad)
jns
cmp
stos
pushf
lock
fcmovb
sbb
cmp
jbe
pop
dec
(bad)
jo
sub
mov
jp
jns
or
xor
pop
fst
cmps
mov
mov
fsub
movs
imul
cmp
pop
jmp
int
test
(bad)
mov
scas
xchg
pop
push
add
out
fwait
ins
mov
push
inc
pop
jo
push
not
into
push
jae
xor
xlat
add
pop
std
popa
sbb
test
daa
nop
je
arpl
adc
dec
dec
outs
mov
inc
jge
mov
sbb
add
jp
mov
movs
mov
mov
lahf
fnstcw
cmp
(bad)
mov
dec
add
out
mov
mov
ror
and
ret
scas
sub
(bad)
rcr
mov
imul
and
lods
sbb
push
cmp
or
cmp
repz
sub
repnz
mov
or
leave
stc
ins
test
inc
ficom
xchg
in
ret
mov
test
xlat
add
jp
(bad)
ja
aaa
aad
xchg
test
jno
jae
out
push
push
out
idiv
cmp
inc
pop
ss
fsubr
gs
push
push
das
das
push
(bad)
aad
xchg
(bad)
and
ss
jp
mov
pop
hlt
fs
lods
verw
push
pop
push
dec
mov
xchg
dec
loopne
and
dec
test
js
mov
inc
test
mov
jns
inc
xchg
xor
sbb
ret
aaa
js
jmp
test
cmps
dec
jge
mov
cmp
ins
cli
dec
(bad)
jge
lods
mov
pop
mov
inc
aad
sub
push
xor
sub
out
pop
pop
leave
hlt
arpl
mov
mov
cs
or
rcl
scas
js
frstor
dec
mov
adc
fiadd
jbe
shr
dec
inc
and
cwde
setp
out
int3
in
(bad)
out
pop
mov
xchg
xor
mov
lock
pop
jb
aas
lods
jle
push
fld
je
pop
lds
sbb
arpl
int3
xlat
xchg
lock
and
nop
add
shl
(bad)
int3
out
imul
mov
cmps
push
push
sub
jmp
ror
popf
lds
jl
stos
(bad)
movs
movs
sub
jecxz
adc
stos
dec
pop
and
lods
int3
push
lea
sub
icebp
mov
sub
scas
push
mov
cmp
xchg
ror
push
int3
mov
repz
pop
xor
lds
sub
xlat
sub
xor
push
ins
fcmovbe
jl
stos
mov
push
mov
retf
xchg
xchg
pop
int
jmp
sahf
jno
push
and
jp
pusha
jns
dec
sbb
or
push
rol
(bad)
mov
popf
or
and
leave
std
xlat
test
push
add
fnsave
pop
call
clc
xor
in
ret
movs
mov
cmc
data16
fmul
outs
fisub
pop
inc
(bad)
jb
lods
mov
mov
inc
and
xchg
and
mov
test
test
sbb
mov
push
test
pop
dec
(bad)
and
push
xchg
test
mov
mov
dec
add
mov
mov
call
mov
lahf
or
sbb
adc
call
lods
aaa
jnp
js
pop
add
sub
jo
jns
mov
retf
adc
repz
repz
les
push
xor
and
aad
mov
mov
xchg
js
lock
scas
cmp
cmc
call
sbb
cmp
scas
ss
sub
test
sbb
adc
adc
hlt
ins
fisubr
and
mov
mov
add
push
fidivr
out
push
(bad)
jno
out
pop
or
sbb
in
sub
push
idiv
push
pop
mov
jno
mov
ret
sbb
repnz
aad
xchg
ficom
push
adc
rcr
mov
idiv
inc
js
or
mov
mov
leave
sti
inc
mov
out
mov
pop
xchg
stos
ins
jmp
cmp
and
aam
cmp
push
cmp
cmp
ins
mov
sub
ror
push
fcmove
sub
ss
jno
or
pop
add
push
jmp
mov
arpl
fcmovb
(bad)
aad
dec
sub
cmp
fwait
and
pop
test
push
out
sub
mov
mov
mov
cmp
push
mov
(bad)
std
jo
pop
jnp
add
dec
ja
mov
xchg
add
mov
rol
sbb
pop
pop
jg
jb
push
mov
push
pop
lahf
scas
retf
cmp
clc
mov
sbb
test
xchg
xlat
ins
and
icebp
mov
into
mov
sbb
fisttp
dec
je
push
jnp
inc
dec
stc
sub
lods
cmp
or
add
fcomp
fcmovbe
ja
ret
jp
push
aam
xlat
dec
ins
mov
and
inc
nop
push
out
lods
xor
lods
mov
dec
adc
sub
xchg
(bad)
enter
add
inc
sbb
ret
fldl2t
int3
add
(bad)
adc
sub
mov
adc
data16
jl
push
mov
sbb
fdiv
addr16
movs
lods
pop
dec
sbb
dec
xchg
pushf
mov
and
adc
bound
push
pop
int
mov
push
mov
fist
inc
ret
mov
(bad)
retf
shl
add
leave
or
mov
dec
jbe
push
ins
dec
sahf
(bad)
icebp
in
mov
adc
dec
loope
aam
sub
mov
popf
jle
nop
sub
mov
imul
xlat
test
add
cmp
das
(bad)
xchg
jmp
test
cmp
test
fstp
dec
out
or
pop
dec
daa
fadd
pop
out
cs
push
inc
gs
xchg
hlt
add
jl
(bad)
retf
les
jne
inc
push
xchg
dec
sub
movs
cmp
or
pop
inc
cmp
mov
(bad)
out
stos
dec
pop
imul
fadd
jle
ficomp
icebp
lahf
and
stc
out
sbb
lea
shl
jmp
jns
(bad)
in
int
sahf
int3
pop
mov
pop
dec
xchg
xor
xor
pusha
dec
stos
or
movs
adc
jle
push
xor
add
imul
popf
add
dec
popf
cli
push
mov
adc
es
rol
pop
arpl
xchg
aad
xor
mov
adc
enter
push
or
push
sbb
add
into
lock
jbe
bound
cwde
fcmove
push
jno
mov
mov
adc
cmp
(bad)
enter
jp
js
mov
add
mov
xor
(bad)
imul
(bad)
dec
mov
jae
mov
test
int3
cmp
sbb
(bad)
or
jmp
jge
ret
shr
cdq
jae
pop
hlt
jle
push
bound
jo
fld
nop
mov
imul
mov
xchg
and
and
mov
inc
mov
adc
push
adc
adc
push
bound
mov
pop
icebp
mov
xlat
push
in
sbb
sub
jg
sub
xor
cmp
shr
je
and
mov
xchg
(bad)
fs
in
xchg
sub
movs
cmp
(bad)
pop
push
aad
loop
jne
mov
xchg
fwait
xchg
pop
xchg
push
sbb
add
mov
xor
lds
mov
xchg
mov
sub
pop
adc
shr
std
pop
test
out
test
scas
inc
ror
out
jne
pop
inc
xchg
add
ror
cli
jp
aam
call
and
outs
or
adc
inc
fadd
repz
xor
and
stos
outs
fiadd
mov
inc
rcl
ja
adc
retf
call
adc
add
mov
cmps
sbb
push
jae
jp
inc
outs
(bad)
in
inc
out
jne
sub
xor
scas
add
fst
pop
test
and
das
loope
cmc
aas
push
pop
cmp
jecxz
xor
fcomp
sub
shl
in
aas
int
popa
gs
cmps
mov
and
sub
jg
sbb
cmps
add
sbb
pop
in
aaa
cmp
push
mov
pop
dec
dec
adc
push
aad
xlat
dec
add
xor
xor
push
sahf
mov
pop
mov
push
les
mov
daa
mov
pop
movs
mov
xor
jg
pop
xor
ja
inc
pop
mov
xchg
cmp
cs
popf
aas
arpl
dec
jp
sbb
test
or
aam
push
adc
fldcw
mul
inc
jmp
ja
xor
inc
or
loop
(bad)
mov
pushf
cmp
cld
push
jmp
or
jbe
bound
cmps
mov
push
sbb
inc
(bad)
adc
scas
jge
pop
push
ds
sbb
mov
das
adc
pop
test
pop
or
mov
mov
push
xchg
stos
mov
(bad)
jmp
push
sub
cmc
cdq
mov
das
cmp
and
daa
lea
in
ds
xchg
stos
repnz
ret
or
aas
(bad)
cs
or
adc
rol
cmp
fnsave
jo
fdivr
cli
not
or
mov
sub
ds
mov
fimul
mov
or
inc
loopne
fdivr
sub
xor
lods
xchg
xchg
pop
mov
jbe
int3
jne
das
and
xchg
ins
and
lods
movs
scas
in
stos
scas
sub
or
inc
dec
push
push
test
int3
mov
and
pop
retf
mov
adc
loopne
int3
dec
mov
sti
fldcw
push
sahf
jp
mov
dec
mov
lock
outs
xchg
mov
lahf
movs
lods
sbb
jp
lods
cld
out
mov
add
sub
cmp
sbb
stos
mov
and
pop
hlt
fs
in
xchg
fiadd
jg
pop
fdivp
lods
daa
les
lock
pop
jg
test
adc
out
sar
pop
mov
int
push
and
sbb
sbb
in
jbe
in
popa
xchg
shl
xchg
mov
xchg
mov
int3
xor
mov
icebp
dec
pop
loopne
cmp
cdq
and
jbe
sub
test
xor
test
mov
inc
retf
pop
or
add
push
push
scas
and
rol
and
inc
loopne
out
push
mov
dec
mov
iret
gs
shr
jae
jmp
mov
nop
mov
lods
xchg
fs
lea
retf
bound
mov
cmp
add
sub
pusha
arpl
stc
push
ret
sar
stos
mov
mov
pop
add
call
js
pop
or
imul
shl
push
mul
cmp
ins
push
push
clc
stc
in
sub
shr
hlt
mov
mov
ds
push
dec
pop
push
or
pavgw
mov
imul
retf
ror
cmp
pop
mov
aam
mov
jbe
inc
jmp
inc
(bad)
mov
dec
xchg
lock
js
dec
movs
loop
je
retf
jle
jmp
cwde
xor
fimul
mov
xlat
sahf
jns
sti
inc
jno
mov
mov
jg
pop
icebp
adc
add
cld
outs
jge
push
mov
jo
mov
mov
call
imul
fisubr
push
inc
add
out
add
fwait
nop
or
addr16
adc
and
sub
leave
ud0
mov
out
in
xor
cmp
ins
sub
sub
retf
mov
jns
xchg
test
pop
push
fisttp
sub
out
loopne
mov
out
adc
pop
js
xlat
xlat
jge
sbb
sbb
fldcw
push
xor
xchg
fidivr
push
adc
fisttp
data16
out
out
or
sub
outs
xor
scas
inc
sbb
(bad)
mov
add
pop
cmp
fmul
push
xchg
mov
adc
pop
out
fadd
popa
in
and
push
sar
xchg
popf
pop
xor
push
aam
fsub
or
fild
fimul
pop
mov
cmp
lods
int
sbb
test
dec
mov
iret
pop
lahf
unpcklps
inc
xchg
jp
shr
fmul
dec
mov
in
popa
fadd
inc
inc
repnz
(bad)
cmp
pusha
sub
xor
imul
mov
mov
test
ins
gs
adc
add
mov
(bad)
jmp
ror
fcmovnbe
xchg
xchg
mov
push
jne
je
clc
sbb
jbe
(bad)
fcmovne
inc
dec
sub
out
jecxz
inc
pop
sub
fwait
aad
repz
out
aad
mov
or
push
cli
push
pop
ins
test
fwait
mov
mov
stos
push
(bad)
loope
xchg
es
test
movs
je
pop
mov
in
push
out
xor
mov
or
loopne
(bad)
dec
sub
jmpw
shl
adc
rcr
sub
mov
rcr
inc
scas
fwait
push
lods
dec
pop
xchg
mov
adc
call
sub
mov
sbb
jb
es
mov
repnz
and
mov
jg
inc
ror
adc
sbb
push
jo
inc
jb
fcomip
mov
jecxz
adc
pop
in
enter
movs
into
jnp
or
(bad)
and
push
mov
out
repnz
cld
shl
cmp
cmp
retf
jo
add
or
mov
push
ror
adc
je
fisub
hlt
cli
or
sub
sahf
xlat
adc
mov
scas
dec
sub
je
sub
retf
cmp
pop
push
push
jne
mov
sbb
clc
sub
ror
hlt
jmp
lods
addr16
rcr
in
push
retf
in
ja
mov
data16
ins
and
sahf
mov
push
mov
add
and
ja
and
push
xchg
les
pushf
sub
mov
xlat
and
shl
icebp
and
outs
into
sbb
xchg
popf
sub
and
push
je
pop
cli
out
ret
dec
mov
(bad)
push
gs
xchg
div
or
cmp
cmp
addr16
sub
(bad)
sub
fst
daa
mov
or
lahf
sti
stos
sbb
out
xor
ds
mov
scas
jg
dec
mov
jl
ds
int3
pop
rcl
sub
icebp
retf
adc
dec
nop
cmp
xor
xchg
ins
push
movs
ja
or
sbb
and
cmp
sbb
xchg
dec
arpl
outs
adc
in
sub
dec
xchg
fdiv
cmp
push
jo
ins
icebp
repz
or
and
jbe
mul
cmp
sbb
pop
xor
jp
mov
cmps
lgs
test
shr
in
rcr
inc
inc
jbe
call
les
ins
jo
les
inc
pusha
inc
es
sub
mov
pop
mov
dec
sbb
loopne
test
jb
xchg
test
add
test
hlt
jns
into
fucomp
jne
inc
call
sub
ret
iret
shl
adc
push
call
rcr
aad
dec
ret
sahf
jg
or
fsub
test
lock
ins
mov
not
jmp
daa
cli
and
push
int
dec
pop
cmps
lods
sub
xor
inc
ret
dec
pop
inc
dec
repz
mov
inc
mov
js
addr16
xor
mov
xchg
lahf
test
cmps
mov
xor
xlat
dec
xchg
xor
add
mov
fild
jbe
mov
iret
aaa
pop
jo
and
inc
cmps
mov
and
shr
clc
dec
sbb
bound
mov
emms
(bad)
jg
fadd
jge
or
cs
sbb
movs
push
sbb
rol
repnz
xor
adc
or
push
fdivp
in
aad
shl
push
mov
mov
jo
(bad)
jl
sub
and
stc
cmp
inc
cmp
adc
int
jmp
and
popa
retf
push
les
mov
into
jo
xchg
mov
mov
aam
ret
(bad)
div
fisub
rol
je
sub
imul
(bad)
pop
or
test
or
js
push
inc
mov
ins
fidivr
(bad)
mov
and
xchg
(bad)
(bad)
enter
cmp
in
inc
dec
int
fnstsw
jl
pusha
mov
call
into
in
cmp
retf
in
push
push
adc
imul
mov
mov
sbb
das
fisttp
arpl
lea
or
pop
xor
lock
xchg
jns
(bad)
dec
sbb
ja
in
sar
mov
stos
xchg
mov
sbb
dec
cmp
mov
ficomp
pop
mov
and
mov
adc
or
xor
inc
mov
iret
mov
adc
and
sbb
xchg
xor
test
sub
fcom
xor
pop
and
mov
fucom
outs
dec
push
jo
mov
in
inc
test
xchg
outs
ja
test
dec
push
push
stc
aaa
xchg
mov
mov
push
int3
xchg
lock
inc
xor
fwait
jns
cmp
sub
xchg
adc
push
dec
push
add
aaa
das
aas
cdq
sbb
cdq
jae
cmps
cmc
sti
jb
inc
js
hlt
fs
jmp
lds
push
inc
pop
sbb
das
ret
ins
retf
inc
fcom
mov
sub
cli
and
pushf
inc
std
mov
aam
mov
dec
xchg
mov
aam
ret
cmp
aad
pop
gs
aas
aas
nop
xchg
(bad)
cwde
adc
imul
xlat
lahf
push
sbb
and
mov
mov
xchg
cdq
xor
hlt
mov
dec
rol
enter
dec
jl
retf
cmc
mov
and
or
nop
or
inc
outs
cli
pop
stos
mov
push
mov
in
mov
imul
test
and
or
xor
and
xchg
jge
or
jae
outs
dec
add
fs
add
cmps
pop
inc
and
xor
add
je
into
mov
jae
cld
cmp
xchg
mov
mov
pusha
jo
in
adc
es
(bad)
daa
aam
lds
inc
dec
lods
pop
in
pop
xlat
xchg
stc
ins
test
cld
cmp
xor
xor
and
adc
int3
push
mov
les
(bad)
pop
xchg
imul
int
sub
mov
xor
cmps
ret
sbb
arpl
jo
shl
push
clc
inc
adc
sbb
lods
add
ins
xchg
xlat
or
inc
stos
outs
lahf
jp
arpl
icebp
inc
push
imul
xchg
adc
cs
or
xor
out
sub
mov
retf
enter
ss
bound
ret
out
add
mov
inc
sub
enter
enter
ins
push
cmps
xor
inc
sar
enter
xchg
fwait
out
mov
mov
push
and
xor
mov
fst
xor
mov
xlat
push
outs
pop
aaa
in
dec
clc
add
cmp
pop
push
cmp
mov
enter
or
push
aad
sbb
rol
mov
sbb
xor
gs
mov
shl
fild
shl
into
xchg
mov
test
dec
shr
jp
push
or
push
sub
lds
fisub
outs
test
cli
jmp
or
mov
mov
xor
pop
int3
jae
sahf
sub
call
stos
cmp
(bad)
jge
repz
push
mov
fisubr
test
hlt
ret
xchg
(bad)
mul
inc
loopne
mov
jbe
xchg
pop
inc
ret
fdiv
imul
lahf
cmc
xor
mov
add
jmp
mov
cmp
add
shl
mov
es
mov
or
(bad)
adc
fist
inc
test
mov
sbb
fistp
xchg
(bad)
outs
rol
and
mov
add
les
dec
in
fimul
sub
imul
jecxz
push
mov
sub
sbb
dec
rol
leave
mov
cmp
pop
push
fcom
test
inc
adc
or
sub
or
ss
shr
cmp
sbb
cmp
add
adc
movs
mov
pop
add
dec
jmp
ficomp
pop
mov
jp
or
(bad)
xchg
jmp
out
inc
ss
retf
fstp
pushw
js
inc
sub
je
mov
mov
shl
shr
jle
in
cmps
mov
push
mov
mov
fild
test
mov
sahf
stos
sidtd
(bad)
lahf
and
movs
pop
in
outs
mov
push
into
pop
out
xor
sahf
or
cmp
out
out
outs
pop
xchg
sti
sub
cmp
xchg
scas
mov
faddp
sbb
inc
pusha
jo
cli
rcl
mov
daa
mov
int3
hlt
out
dec
retf
sbb
xor
icebp
dec
or
cmp
nop
add
(bad)
mov
lea
pushf
jmp
repz
mov
inc
stc
ins
mov
fcmovu
cmp
rol
xor
add
mov
jb
das
mov
fadd
daa
fwait
(bad)
aad
pop
cmp
mov
pop
push
adc
add
sbb
inc
leave
cmc
sti
xlat
div
pushf
mov
mov
pop
pop
mov
imul
sbb
outs
(bad)
pop
mov
movs
push
imul
dec
add
idiv
pop
out
ret
arpl
mov
mul
push
ds
cmc
into
fstp
test
cli
xchg
add
dec
dec
movs
jp
in
mov
iret
lock
aam
sbb
mov
lahf
add
imul
out
enter
push
(bad)
mul
adc
movs
mov
mov
out
movs
inc
lea
test
inc
push
jmp
add
xchg
int
dec
cmp
cld
xchg
icebp
adc
push
or
sub
aas
bswap
(bad)
sbb
xor
cld
or
rcr
inc
int3
and
sar
arpl
ins
push
mov
call
push
mov
aaa
fsub
std
dec
cmps
mov
mov
pop
mov
push
fist
push
adc
cmps
jmp
scas
repz
mov
adc
xor
mov
sbb
add
adc
popf
mov
mov
mov
add
lahf
bound
shl
adc
ss
es
push
jmp
in
lock
fst
push
push
shl
fiadd
dec
outs
arpl
stos
movs
int3
adc
sbb
mov
sbb
xchg
or
dec
aad
call
sbb
pushf
adc
stos
pop
aaa
les
inc
and
(bad)
inc
or
and
mov
lods
js
pusha
jl
and
sbb
mov
ds
xchg
in
jecxz
out
out
cwde
cld
xchg
iret
mov
xchg
inc
int3
fadd
inc
das
pop
push
loop
sub
jg
shr
dec
call
dec
sbb
dec
nop
inc
push
xor
js
fisubr
add
retf
and
fcmovb
cwde
dec
mov
adc
ret
fmul
call
xchg
add
cdq
mov
loopne
fiadd
pop
dec
fcmovnb
pop
call
fcomp
int
inc
ret
inc
mov
add
loopne
add
dec
pop
dec
mov
jmp
or
gs
push
outs
stc
ret
rcl
mov
mov
lods
sub
cmp
sahf
jno
sahf
in
and
sbb
enter
daa
cmp
aad
adc
inc
add
or
push
ds
jmp
sbb
mov
jnp
ficomp
pop
test
into
sbb
and
mov
mov
xor
call
sti
jbe
pop
call
jae
jmp
and
pushf
stos
es
loopne
xor
jge
mov
dec
adc
add
int
outs
hlt
clc
xor
adc
pusha
add
cmp
push
push
shl
in
cmp
and
inc
fs
fisub
mov
jp
sub
pop
fistp
add
sub
mov
xor
imul
cs
or
jnp
push
push
outs
stos
mov
push
(bad)
es
push
sar
mov
pop
mov
rcl
test
inc
rol
ss
mov
in
adc
cmc
jb
jbe
(bad)
(bad)
pop
sahf
sahf
mov
outs
icebp
dec
retf
cmp
adc
(bad)
xlat
sub
xchg
dec
mov
das
inc
loop
test
out
sub
mov
fwait
adc
and
aad
mov
aas
test
imul
hlt
call
ret
jmp
out
lds
xor
push
lds
mov
sub
aam
dec
cwde
(bad)
jecxz
loop
mov
mov
ds
push
cwde
and
jp
lock
cmp
clc
adc
popf
stc
add
inc
test
pop
cmp
hlt
repz
mov
not
int3
adc
inc
nop
std
sahf
or
ds
mov
push
movs
cld
loopne
repz
cmc
push
in
add
cmp
mov
rcl
test
and
inc
(bad)
ins
jne
scas
in
or
and
out
inc
dec
ss
loop
div
mov
shl
in
ds
sbb
dec
sub
aam
mov
push
mov
jp
xor
push
pop
leave
retf
dec
lods
inc
ins
ins
adc
in
shr
mov
adc
and
ins
mov
push
pop
and
mov
aas
and
jae
sahf
mov
out
les
mov
movs
xchg
xor
sbb
lahf
(bad)
jno
clc
aas
iret
mov
push
adc
in
sub
hlt
add
nop
mov
cs
imul
pop
gs
fs
sub
mov
cmp
ret
dec
mov
sbb
aad
adc
out
push
jg
or
jecxz
sbb
inc
xchg
inc
and
test
loopne
push
call
stos
repz
and
pop
mov
mov
movs
mov
sbb
je
daa
out
dec
mov
dec
in
bswap
lock
push
out
xor
jne
lock
fcomp
mov
add
or
jb
loop
xlat
jg
dec
pop
and
push
and
sub
sub
xchg
test
xchg
mov
pop
adc
xchg
cmp
push
cmovs
and
inc
call
push
adc
inc
ficomp
rcl
inc
into
jbe
int
retf
pop
div
sub
xchg
shl
mov
cdq
sub
or
aam
int3
mov
dec
pop
cmp
xor
sar
mov
aad
mov
enter
push
jmp
jae
adc
inc
adc
xchg
push
aaa
popf
jle
or
adc
stc
iret
test
scas
shr
out
mov
shl
mov
loop
sbb
ins
retf
xchg
int
int3
fsub
mov
mov
out
aas
add
ins
shl
fwait
adc
out
test
xchg
adc
adc
xchg
adc
test
jmp
xchg
ds
push
add
aaa
fadd
je
movs
test
movs
mov
ins
rol
or
lds
add
sub
es
loopne
xor
sub
sub
repnz
cmp
dec
or
in
fwait
movs
mov
xor
out
xchg
jge
scas
inc
pop
data16
lock
push
mov
js
xchg
add
sub
mov
stc
adc
in
mul
jb
(bad)
mov
ja
inc
repnz
mov
mov
int
fwait
hlt
pop
and
scas
scas
call
or
rol
mov
cmp
fpatan
aad
and
in
repz
sahf
push
mov
jg
sar
sbb
(bad)
lods
push
mov
retf
adc
test
mov
gs
cmc
dec
add
cmp
or
retf
out
jns
mov
or
rol
fisub
xor
ror
arpl
push
or
xor
inc
ffree
dec
sbb
call
pop
rcr
aad
loop
mov
and
and
int3
and
cmps
mov
(bad)
ret
cmp
push
push
movs
push
xor
call
rcr
xlat
cmp
inc
xchg
mov
xchg
mov
add
jnp
push
outs
inc
movs
pop
inc
push
mov
cmp
icebp
dec
adc
inc
xchg
mov
mov
call
test
stos
(bad)
mov
retf
cwde
sub
push
fistp
xchg
adc
push
stos
lods
mov
mov
inc
cmc
daa
cmp
into
test
pop
xor
cmps
test
daa
add
mov
dec
xchg
cmps
es
mov
dec
ss
adc
add
mov
or
(bad)
sub
dec
mov
ret
cli
mov
inc
or
das
push
pop
mov
fsub
les
jecxz
out
clc
and
std
retf
mov
cld
adc
bound
and
or
or
ins
ret
fmul
(bad)
ror
test
mov
fmul
xchg
jno
cmp
retf
repz
mov
clc
sub
push
fimul
arpl
fstp
loop
push
dec
cld
(bad)
out
inc
adc
xchg
add
add
fdiv
stos
jne
xor
push
adc
dec
or
cdq
(bad)
mov
pusha
push
cld
hlt
ins
(bad)
mov
in
dec
inc
mov
xor
cmp
adc
rol
repz
inc
mov
cwde
mov
push
call
(bad)
pop
mov
push
aas
repnz
test
or
mov
ret
call
shl
cs
push
repnz
js
jp
jae
jge
xor
into
push
pop
gs
push
push
imul
or
out
push
lods
lahf
mov
sub
cmp
mov
push
shr
cmp
xchg
fwait
add
imul
hlt
loopne
jne
cld
xor
out
test
test
test
outs
xor
aas
mov
imul
pop
retf
mov
dec
clc
daa
mov
pop
clc
or
pop
fwait
mov
xchg
nop
jno
fsubrp
loop
shl
dec
cmp
rol
jmp
sub
sub
xor
jo
dec
jnp
das
cli
cmp
dec
lds
lahf
mov
sub
hlt
or
xor
push
leave
in
dec
pop
sbb
lods
adc
mov
or
xor
jns
mov
outs
cwde
int3
ja
add
sub
popf
test
leave
xchg
leave
fist
cmp
cli
stc
cmp
sti
hlt
mov
xchg
cli
in
fild
xor
out
cdq
mov
arpl
arpl
repnz
mov
ret
mov
loopne
out
dec
fdivr
jecxz
aam
push
daa
repnz
adc
push
jecxz
mov
jbe
(bad)
js
mov
push
lods
inc
and
iret
popa
xlat
retf
fxch
mov
cmp
leave
fnstsw
es
mov
dec
mov
inc
push
dec
jmp
lock
mov
ret
ret
cmp
push
cmp
inc
sub
cmp
dec
nop
ret
pop
lds
inc
xor
repz
enter
jbe
mov
jo
test
ins
xchg
imul
xchg
inc
push
cmps
pop
cmovp
or
(bad)
mov
inc
shl
scas
addr16
push
out
and
inc
bound
xchg
push
(bad)
add
retw
xchg
push
push
cld
pop
pop
(bad)
gs
data16
aad
test
push
not
inc
jmp
data16
or
stc
js
daa
rol
pop
cmp
adc
(bad)
ins
or
xor
stc
gs
mov
clc
(bad)
sbb
in
add
test
mov
pop
fs
loopne
xor
push
cmps
pop
mov
pop
mov
cmp
pop
push
jno
lods
jg
neg
shl
sub
data16
cmp
ss
cmp
int
cwde
mov
or
outs
sbb
and
cmp
mov
in
stc
mov
push
add
cmp
jb
jle
mov
aas
cli
test
stc
and
sbb
inc
ins
push
clc
add
aam
daa
mov
out
xchg
stc
jbe
data16
sbb
data16
(bad)
aam
add
leave
sub
add
int3
test
xlat
je
adc
mov
mov
jecxz
xchg
loopne
jle
(bad)
(bad)
retf
rcl
hlt
in
pop
dec
mov
jbe
mov
ins
push
bound
data16
jae
pop
and
sbb
ja
mov
jg
out
or
mov
xchg
dec
or
popf
and
add
push
dec
cs
scas
or
cli
scas
retf
ss
pop
(bad)
repnz
add
ficomp
xor
clc
in
arpl
out
sbb
cmp
mov
and
retf
jb
(bad)
int
es
mov
sbb
jmp
out
fst
mov
aad
add
test
into
xchg
fst
sbb
jl
stc
jmp
push
and
inc
push
out
fsub
dec
test
lahf
ret
jne
movs
scas
xchg
mov
jg
mov
pop
addr16
pop
iret
mul
call
cdq
inc
push
icebp
push
add
sbb
stos
pop
push
stc
and
rcr
ret
mov
fwait
mov
push
call
xlat
sub
or
aas
mov
xor
mov
sub
or
dec
fwait
mov
inc
outs
push
pop
mov
in
fbstp
inc
jo
sbb
sbb
addr16
je
pop
push
cmp
fild
cmp
fist
js
xor
lods
mov
int3
mov
cmp
popa
sbb
lock
sub
xor
xcrypt-cbc
cmps
(bad)
jbe
aad
dec
xor
ret
mov
fucomp
pop
add
cs
xor
inc
push
mov
or
jp
push
jae
imul
mov
outs
repz
test
sbb
cmp
out
push
add
fs
popa
sbb
mov
je
dec
push
mov
in
stos
ficom
inc
and
call
cmp
dec
inc
or
daa
ja
scas
fsub
stc
aad
scas
test
add
aas
sub
mov
xchg
xchg
sub
int
(bad)
mov
inc
test
mov
mov
rcr
sub
push
popa
pop
retf
jne
sub
jmp
in
jmp
mov
mov
div
out
push
outs
xor
or
dec
les
dec
fcmovb
add
pop
cmps
sbb
push
pusha
call
sti
cmp
mov
pusha
jbe
clc
mov
mov
mov
xchg
dec
or
sbb
fdiv
int3
in
mov
inc
test
mov
repnz
xor
lds
(bad)
in
dec
lods
pop
call
mov
jns
or
mov
gs
les
hlt
hlt
xor
push
add
mov
lahf
sbb
pusha
push
dec
fs
cdq
cld
cmp
jne
jo
stc
fimul
jno
sar
jbe
mov
cmp
push
or
inc
in
jne
or
add
jge
jecxz
outs
aam
or
je
ss
sahf
push
xor
mov
out
jmp
sahf
pop
shr
pop
retf
xor
icebp
retf
ret
xchg
pop
or
inc
test
or
mov
or
xor
jnp
ins
xchg
lahf
and
pop
lock
jo
(bad)
sub
or
sbb
and
inc
and
test
or
and
add
imul
xchg
xor
std
lods
fs
push
xor
xlat
xchg
add
movs
shr
int
loopne
add
cmc
pushf
dec
jl
and
in
jmp
and
outs
inc
mov
inc
mov
sahf
mov
leave
data16
adc
inc
daa
fisttp
and
outs
in
int3
xor
jmp
fidivr
adc
cmp
pop
push
jae
mov
cmp
dec
aaa
call
daa
test
mov
pop
mov
xchg
jl
test
enter
icebp
daa
mov
rcl
mov
mov
jmp
into
pop
mov
sahf
pop
push
add
xchg
bound
mov
pop
stc
(bad)
sub
test
add
pop
mov
push
inc
mov
mov
jnp
add
push
and
jb
cmp
push
ror
inc
gs
ds
popf
call
test
test
clc
mov
push
ins
shl
inc
(bad)
push
movs
dec
add
loopne
scas
jge
push
adc
mov
dec
add
shl
ja
adc
cmp
(bad)
fstp
(bad)
jbe
fmul
xor
retf
shl
call
adc
mov
push
mov
xchg
mov
cli
(bad)
jp
or
mov
shr
and
xor
stc
(bad)
xchg
and
mov
pop
and
les
aam
aaa
mov
xchg
into
mov
push
test
iret
add
bound
adc
cmps
sbb
dec
out
and
sbb
das
arpl
jmp
std
mov
push
adc
enter
fsub
fldenv
repz
pop
dec
jg
jno
mov
shr
xchg
lods
and
mov
cmp
dec
lock
imul
retf
sahf
adc
(bad)
ds
mov
rol
loopne
cmp
lahf
pop
sbb
pop
cmc
(bad)
hlt
aas
mov
inc
fidivr
rcl
pop
cld
sub
pushf
out
or
add
cs
out
inc
and
ret
test
inc
lods
xchg
xor
scas
loopne
pop
fimul
shr
push
or
pop
out
test
push
imul
mov
mul
adc
dec
fstp
xchg
outs
sar
enter
and
jecxz
daa
test
or
cld
in
imul
pop
mov
dec
aad
sbb
sub
hlt
or
jno
pusha
push
xchg
or
or
ja
call
fisttp
mov
pushf
mov
mov
jne
stc
movs
mov
cmp
daa
xchg
lods
je
rcr
idiv
fldcw
movs
enter
inc
xchg
ins
mul
mov
ret
mov
mov
es
or
dec
push
sub
sti
scas
gs
int3
sbb
ret
test
push
pop
test
cs
mov
aaa
push
xchg
sar
dec
imul
add
sub
mov
push
push
out
or
and
mov
mov
xor
xor
das
push
mov
jmp
or
in
adc
dec
cwde
inc
int3
pop
push
sbb
aaa
(bad)
stos
mov
xchg
hlt
pop
lods
(bad)
das
adc
sub
rcl
cmp
and
loopne
sub
xchg
fidiv
dec
dec
and
inc
(bad)
inc
scas
push
jb
lods
sbb
cmps
mov
or
aam
sub
pop
xchg
cmps
or
(bad)
mov
mov
sbb
xor
test
out
int3
in
(bad)
adc
or
mov
test
aad
mov
rol
push
rol
push
out
mov
data16
mov
xor
sbb
loopne
sbb
mov
cs
pop
pop
cmp
or
pushf
and
sub
mov
add
xchg
mov
int
sbb
inc
addr16
call
shl
dec
ds
sbb
outs
in
jecxz
neg
mov
iret
loop
adc
mov
loop
mov
lods
sub
jo
mov
mov
cmp
dec
dec
jae
jne
adc
push
adc
inc
inc
cmp
inc
jns
fwait
or
loop
and
jb
sub
mov
outs
inc
(bad)
stos
jle
out
xchg
or
push
cmp
pop
mov
mov
clc
mov
mov
and
clc
push
out
iret
imul
fisttp
sbb
stos
jns
mov
cli
pop
shl
in
fisub
jne
ret
fucom
jmp
inc
ret
xor
mov
and
pop
shl
retf
mov
sub
push
data16
outs
bound
jge
push
adc
fnsave
mov
push
adc
pop
enter
xor
cmps
out
(bad)
jge
mov
add
dec
adc
mov
mov
cwde
lods
(bad)
fisubr
xchg
xor
push
js
pop
faddp
(bad)
fidiv
rol
and
(bad)
fldcw
xor
xor
mov
jnp
add
sbb
(bad)
xor
mov
std
push
jmp
imul
sbb
arpl
pop
add
xlat
push
xchg
pushf
mov
xchg
cdq
xor
push
sbb
out
sbb
out
ror
dec
pop
lds
mov
inc
adc
xor
sub
dec
sub
jge
sub
pop
ds
mov
popf
ror
repnz
xor
mov
or
jno
pop
(bad)
sbb
fcmovbe
jecxz
addr16
clc
jecxz
aam
xchg
int
jno
xchg
jp
jmp
(bad)
cs
retf
fs
dec
jnp
adc
test
aad
xor
jp
enter
xchg
sbb
dec
jle
sub
pop
clc
adc
push
push
xchg
ins
jmp
fcmovnbe
xchg
ins
cld
mov
push
enter
add
ret
dec
shl
aas
jae
(bad)
cli
je
dec
mov
sbb
daa
div
add
xchg
and
inc
gs
xchg
sub
test
data16
jno
mov
jae
xchg
inc
xor
mov
in
in
dec
outs
sbb
push
cdq
data16
fstp
mov
lods
push
mov
(bad)
jbe
scas
cmp
push
cmps
(bad)
shr
and
push
cs
add
and
mov
push
sbb
push
movs
fld
fdiv
add
ins
sub
dec
cmp
in
mov
fimul
imul
lods
popf
adc
dec
jmp
test
aaa
mov
pop
stos
xchg
mov
jbe
mov
test
sub
fsubr
mov
pop
and
adc
inc
push
ret
xchg
popf
in
scas
xor
fiadd
jo
inc
fld
pop
mov
xor
rcl
mov
fsubr
mov
mov
cmp
aas
or
adc
xor
inc
xchg
dec
pop
rcr
aam
adc
shl
jmp
out
pop
xchg
arpl
ja
push
xchg
jns
frstor
repz
call
or
lahf
mov
push
jne
xor
repz
mul
pshufw
mov
addr16
cmp
pop
int3
sbb
lods
xchg
es
add
xchg
xchg
cli
fbld
add
mov
addr16
mov
movs
inc
adc
aam
cwde
arpl
push
jae
lea
imul
adc
sbb
imul
or
mov
pop
fimul
jg
inc
out
fild
or
sbb
jmp
(bad)
out
mov
div
(bad)
(bad)
iret
cmp
adc
cmp
sbb
mov
xor
jae
loopne
(bad)
push
aam
out
mov
loop
xchg
in
loopne
mov
test
je
fist
add
call
rcr
fadd
movs
fdiv
pop
mov
mov
ds
jb
shl
mov
ins
cld
nop
sbb
ret
rol
shr
mov
les
xchg
inc
in
ret
xor
cmps
bound
mov
mov
lds
pop
idiv
mov
and
dec
or
mov
fnsave
mov
int
or
push
in
movs
cmp
jnp
(bad)
push
cwde
in
pop
fst
xchg
pop
sbb
and
pop
dec
aaa
scas
daa
xlat
cwde
pop
in
outs
add
iret
sbb
mov
adc
lds
int3
mov
shl
sub
xor
outs
(bad)
rcl
dec
adc
popa
cdq
sub
xchg
and
scas
jb
in
push
popf
icebp
mov
cs
cdq
add
in
out
dec
in
xchg
pop
adc
jmp
xchg
icebp
repnz
fwait
jl
js
jnp
imul
out
lock
add
(bad)
repnz
nop
adc
dec
repnz
lods
inc
fs
jmp
je
movs
out
in
cmps
lahf
push
popf
push
inc
xchg
xor
pop
test
out
xor
leave
nop
sub
test
mov
adc
inc
mov
jl
cmc
jle
aas
xor
rcr
stc
sub
fild
lea
hlt
std
cmc
adc
(bad)
and
push
cmp
(bad)
cmp
aad
inc
add
xchg
movnti
jbe
stos
fcomip
sub
or
or
pop
sbb
sbb
fwait
stos
adc
cmps
test
and
fstp
mov
push
add
xor
add
jbe
cmp
dec
ss
in
push
cwde
mov
stos
pushf
jg
cmps
loopne
cmps
out
jns
mov
ins
shl
mov
imul
xor
mov
pop
nop
repz
jecxz
xchg
inc
(bad)
leave
adc
mov
cmp
ficom
adc
mov
ret
adc
pushf
push
fimul
dec
push
push
dec
mov
rcl
adc
retf
inc
test
xchg
aad
sbb
pop
jp
mov
jns
cmp
xor
rcr
xor
nop
arpl
pop
out
scas
jp
or
and
xchg
adc
pop
push
ret
fs
sahf
sbb
shl
push
fsubp
mov
push
js
data16
and
ja
xchg
mov
mov
ret
out
nop
mov
jbe
or
test
jge
jbe
rcl
mov
(bad)
push
mov
ins
lods
and
pushf
mov
mov
mov
mov
arpl
ror
mov
test
stos
inc
and
jge
sub
scas
and
jno
pop
inc
ror
cdq
jecxz
je
jb
add
xchg
neg
pop
addr16
push
fwait
mov
imul
repnz
inc
pop
push
xchg
inc
xchg
inc
pop
or
add
vsubsd
int3
mov
dec
(bad)
jns
adc
jbe
imul
into
inc
pop
imul
jle
stos
dec
sub
push
xor
js
sub
and
xor
mov
ds
clc
cmps
hlt
sbb
mov
lea
xor
mov
fiadd
in
hlt
pop
shl
and
sub
mov
popf
data16
mov
hlt
xor
pop
scas
cwde
add
cmp
xor
dec
hlt
mov
xchg
push
jo
sbb
add
sbb
dec
xchg
dec
push
push
and
sbb
cmp
or
test
cmp
rcr
in
xor
dec
stos
xor
pop
cld
test
adc
jl
dec
sahf
enter
in
movs
adc
push
xchg
cmc
cmps
rcr
adc
xor
andps
ins
jae
sbb
adc
or
jmp
ret
or
mov
lods
add
dec
out
jae
xchg
push
outs
or
bound
cmp
fsub
inc
jmp
arpl
jg
rcl
xchg
mov
jno
dec
out
xchg
pusha
push
frstor
ret
dec
daa
adc
xchg
retf
add
fild
mov
fisttp
sbb
popf
sub
ror
pop
push
sti
repz
clc
std
sub
enter
shr
inc
pushf
sbb
or
rol
jnp
fsub
dec
xor
pop
cs
jo
(bad)
fcomi
add
jmp
stc
lods
mov
pop
mov
scas
jge
push
pop
pop
jae
dec
or
push
gs
or
jbe
out
js
jo
pop
inc
mov
mov
pop
xor
ds
xor
push
mov
xchg
cli
xlat
fsubr
ds
pop
push
int
pop
mov
push
mov
xor
fild
imul
test
movs
sub
cmp
stc
rcr
lahf
in
push
cmps
outs
and
mov
pop
les
js
xchg
mov
jle
sub
jl
addr16
mov
lock
cmc
pop
loope
xor
ja
dec
leave
enter
mov
sbb
mov
adc
movups
repz
sub
cmp
xchg
jno
or
jecxz
cmp
dec
pop
jp
xchg
add
pop
and
dec
sub
inc
fstp
jmp
adc
or
test
into
mov
mov
pop
jbe
pusha
pop
sbb
adc
and
mov
out
cld
(bad)
sbb
adc
das
push
dec
in
push
jmp
add
xlat
les
and
mov
cmp
(bad)
cmp
sub
nop
push
or
or
pushf
fmul
std
jnp
aam
lods
popa
daa
sbb
adc
shl
xor
pop
(bad)
sbb
pop
pop
sub
lea
xchg
aaa
sub
jmp
lods
je
sbb
xchg
cmp
movs
(bad)
inc
stc
retf
ins
scas
fld
inc
loop
jmp
pusha
loop
test
dec
inc
cmps
sahf
mov
dec
movs
jmp
dec
retf
mov
in
mov
add
pop
mov
fstp
jge
push
or
lds
mov
xchg
mov
test
mov
fwait
jnp
push
cmp
aas
clc
push
and
cmp
popa
loopne
adc
cmps
cld
ds
imul
jg
scas
pop
cmp
add
fimul
retf
pop
stos
sub
sub
cmp
(bad)
xor
adc
push
add
adc
inc
jp
or
xor
aad
add
sub
aad
pop
clc
xchg
ds
add
fdivr
and
test
jg
rcr
mov
inc
add
test
test
jl
ss
inc
mov
loop
sbb
jmp
iret
daa
mov
cmp
test
or
stos
xor
dec
out
movs
out
jns
sub
mov
into
not
pop
sbb
jl
inc
daa
icebp
in
xchg
cs
mov
stc
test
or
mov
mov
xchg
fiadd
jl
mov
xlat
fyl2xp1
addr16
push
enter
or
lods
cmps
stos
mov
xchg
mov
mov
hlt
cli
mov
xchg
test
stos
out
cbw
je
xlat
and
adc
pop
xchg
ret
xchg
or
sahf
sbb
fdiv
dec
or
jl
bound
loop
sbb
out
inc
jno
aaa
or
jmp
push
jbe
shl
pop
cwde
clc
fcmovne
sbb
jecxz
mov
sbb
enter
jl
aaa
mov
jne
adc
popf
iret
adc
(bad)
xlat
push
repnz
std
add
mov
lea
(bad)
jns
scas
add
loopne
inc
pop
sbb
loope
xor
sub
(bad)
cmc
fist
and
xor
add
daa
mov
push
sbb
sub
cmc
cmp
jae
ret
das
add
ror
sti
jae
movs
inc
fcom
push
jge
jmp
movs
xor
cmp
sub
mov
jl
mov
mov
imul
iret
sahf
cmps
xor
lds
loopne
cwde
aaa
dec
js
fisttp
cmc
fsubr
or
clts
into
push
movs
lea
sbb
ret
call
ror
xor
lahf
adc
imul
std
push
jmp
pop
jmp
stos
jmp
repnz
fnstcw
xor
data16
inc
and
ins
sub
jmp
enter
fnsetpm(287
lea
mov
retf
bound
cmovno
shr
mov
test
jb
inc
ins
mov
adc
ds
imul
retf
inc
dec
push
adc
ret
jae
mov
rcr
dec
jae
ins
push
and
inc
ror
add
jp
dec
lock
out
sub
fidiv
lods
arpl
dec
aad
not
cs
in
(bad)
pop
dec
lods
jmp
lods
sub
dec
mov
outs
enter
mov
xor
ficomp
cwde
xor
mov
pop
dec
push
mov
cs
and
jge
add
xor
(bad)
(bad)
fimul
fdivr
addr16
pop
xor
cmp
arpl
(bad)
pop
jmp
pop
leave
inc
pop
mov
cli
movs
cmp
add
jo
dec
es
es
mov
xchg
mov
(bad)
and
xchg
jnp
pop
push
mov
mov
or
or
mov
xchg
movs
xor
in
(bad)
fimul
(bad)
enter
cmps
mov
mov
cdq
imul
in
cmp
div
sub
fnstsw
imul
(bad)
and
lods
es
fld
popa
or
push
repz
and
in
and
inc
inc
loop
stos
cmp
pop
psraw
lea
push
call
push
dec
and
dec
in
dec
inc
add
repnz
adc
pop
call
movs
pop
or
(bad)
shl
dec
lods
sbb
pop
sbb
dec
adc
pop
sub
xor
push
sbb
std
jae
or
movs
mov
repz
jno
jecxz
jnp
cmp
and
jbe
sub
push
cmc
push
movs
push
stos
sub
sub
xchg
push
fdiv
cmc
add
or
add
mov
ret
(bad)
inc
dec
lods
mov
retf
sub
jmp
dec
inc
xor
xchg
jbe
dec
push
cwde
dec
es
jae
loope
mov
aas
test
(bad)
xchg
fwait
jmp
popf
push
cmp
cwde
mov
mov
or
cmp
or
sti
push
xor
cld
ja
fcomp
xor
addr16
(bad)
retf
add
cmps
lods
movs
fwait
push
ror
push
mov
dec
dec
cmp
sar
jecxz
std
sbb
jle
shr
pop
cmps
pop
fild
and
clc
or
retf
mov
adc
hlt
add
cmp
inc
call
mov
sub
mov
pop
cmp
jmp
leave
adc
mov
sbb
xlat
or
pop
jbe
mov
mov
and
dec
mov
xlat
inc
cmp
sub
jl
adc
sub
push
mov
and
int3
loopne
cmp
sub
xor
add
adc
adc
push
sub
out
inc
or
out
hlt
inc
adc
jg
es
lahf
push
xchg
ret
xorps
jnp
xor
inc
or
out
(bad)
xchg
dec
xor
jno
sbb
scas
or
ins
(bad)
sbb
mov
mov
adc
addr16
fs
add
clc
loop
mov
dec
xchg
jns
clc
fist
sbb
pop
xchg
cwde
ja
lock
imul
mov
cs
mov
adc
inc
pop
stc
xchg
pop
fsub
cmp
mov
cwde
popa
lods
push
mov
ja
mov
xchg
mov
jmp
dec
sbb
xor
ret
mov
ins
mov
mov
pushf
cwde
outs
sahf
cwde
adc
gs
sbb
sub
sub
xor
mov
xchg
or
lds
bnd
adc
adc
nop
cmp
clc
mov
fidivr
add
and
std
xchg
ins
xchg
sub
retf
mov
out
or
(bad)
pop
jo
ins
aas
mov
sar
push
data16
clc
push
lods
outs
mov
inc
xchg
loopne
mov
test
cmp
adc
and
fisubr
or
ins
sbb
push
pop
dec
icebp
sbb
jne
mov
fstp
test
mov
aas
nop
mov
(bad)
sbb
lea
es
mov
test
enter
push
add
jbe
out
(bad)
jb
push
xlat
inc
jns
jg
repz
ror
test
movs
rcr
sbb
fs
scas
mov
gs
mov
pop
out
fyl2x
mov
push
dec
or
cmps
adc
lds
mov
xchg
pushf
dec
(bad)
nop
daa
inc
mov
ins
arpl
loope
cmp
pop
das
fdiv
mov
mov
mov
push
push
dec
jae
fwait
icebp
xchg
outs
cmp
shl
jmp
pop
inc
sahf
cs
xor
adc
pop
pop
lahf
jbe
xchg
sbb
popa
fucomi
mov
stc
out
(bad)
(bad)
add
xchg
int3
mov
ror
xchg
mov
movs
fiadd
xchg
xchg
and
cmp
mov
cs
ror
mov
mov
(bad)
aad
xor
or
xor
iret
mov
rol
daa
mov
inc
xor
lahf
das
and
pop
cs
cld
mov
pop
sbb
pop
lea
dec
aam
shl
and
push
das
es
adc
sub
out
sbb
repz
mov
xchg
cmp
cmps
push
sub
(bad)
adc
mov
pop
cmc
lea
gs
mov
imul
cmp
pop
dec
aas
sbb
xchg
jle
push
fwait
jb
ror
xor
std
push
sub
cmps
pop
out
jp
or
or
dec
ds
aad
dec
or
cmps
jbe
mov
scas
cmp
repnz
or
mov
inc
mov
pop
scas
add
pusha
mov
out
movs
sub
sar
test
add
imul
or
cmc
mov
cmps
and
inc
leave
push
imul
retf
and
mov
fbld
xchg
repnz
cmp
enter
or
or
mov
hlt
and
sbb
and
adc
jmp
dec
sbb
and
pop
pop
mov
pop
xchg
int3
xor
mov
mov
std
fidiv
jb
inc
mov
push
mov
stos
push
hlt
inc
fldenv
dec
sub
dec
push
and
adc
scas
cwde
add
push
ins
and
test
push
std
cmps
ss
outs
(bad)
push
pop
xlat
in
fs
mov
xchg
pop
nop
inc
addr16
jecxz
test
mov
mov
pop
int3
jb
sub
loop
sub
rol
jnp
sub
addr16
(bad)
fadd
sub
jg
mov
sbb
xchg
adc
and
sub
inc
je
fmul
jnp
lds
inc
retf
arpl
jp
frstor
inc
jo
int3
add
(bad)
jne
push
inc
test
(bad)
scas
jo
dec
or
scas
push
cmp
test
leave
sub
inc
cmp
or
gs
mov
data16
lea
hlt
je
repnz
or
ins
cmp
push
cmp
jge
lahf
dec
mov
sbb
and
js
jno
outs
pushf
sbb
mov
inc
push
push
xor
inc
mov
sbb
hlt
push
sbb
aas
push
mov
fistp
push
jb
sub
out
adc
jge
dec
(bad)
out
mov
popa
int
(bad)
jp
jl
(bad)
fadd
aaa
popa
fisttp
mov
addr16
aam
adc
xchg
mov
inc
sbb
xchg
pop
cmp
fmul
ins
ret
repnz
std
xchg
add
mov
fiadd
arpl
imul
das
lds
push
inc
(bad)
adc
add
push
fsub
adc
std
inc
adc
sbb
adc
adc
mov
cmp
jno
jge
add
pushf
push
les
cmp
xchg
xchg
jecxz
jmp
test
pop
jg
mov
sbb
int
fild
add
fld
fstp
mov
push
cmps
test
dec
mov
loopne
push
std
push
mov
push
in
lock
jg
jne
pop
hlt
xchg
push
test
add
push
data16
loopne
push
cmp
or
mov
dec
and
xchg
push
and
jmp
call
mov
outs
jmp
cmp
and
pusha
cmp
inc
in
fimul
dec
cmc
sbb
les
pusha
stos
in
push
hlt
data16
gs
outs
cmps
adc
in
out
das
dec
out
jbe
xchg
fs
pop
ret
mov
inc
inc
cmp
popa
or
mov
pop
fwait
inc
xchg
pushf
cli
dec
jmp
and
ins
scas
push
pop
mov
mov
sub
in
fild
dec
sbb
dec
cdq
jge
sbb
outs
jne
mov
xchg
inc
or
daa
fld
fld
scas
shr
iret
jp
enter
out
iret
loope
mov
sbb
mov
fcmovbe
ins
loopne
mov
push
and
push
push
retf
jns
test
jae
test
iret
retf
mov
sbb
sub
shl
cld
aam
sahf
add
imul
xchg
xlat
sbb
loopne
stc
sub
popf
or
ins
dec
call
dec
pop
into
add
cs
pop
cld
or
pusha
pxor
jecxz
jle
call
cs
test
outs
scas
daa
(bad)
push
movs
xchg
hlt
popf
pop
ins
push
hlt
test
mov
in
inc
(bad)
loop
popf
shl
pusha
xchg
nop
int3
or
stos
enter
test
lods
ins
and
div
sbb
mov
(bad)
mov
std
sub
idiv
jecxz
or
int3
(bad)
jae
cld
jne
push
or
shl
xchg
jbe
cli
outs
dec
xchg
mov
dec
movs
add
adc
jne
pop
push
retf
mov
or
js
retf
mov
lea
xchg
cmp
cmp
in
inc
call
adc
dec
sub
rol
fnstcw
test
hlt
adc
jge
adc
mov
mov
push
pop
and
or
add
fs
addr16
arpl
dec
or
daa
cmps
sub
aas
sbb
ja
sub
xchg
(bad)
sub
add
xor
mov
cdq
and
pop
out
xor
popa
fimul
push
cld
jmp
adc
mov
lods
mov
retf
mov
cmp
enter
mov
cmc
add
adc
xor
stos
cli
mov
push
adc
icebp
inc
or
add
gs
repnz
mov
loopne
lds
lahf
jbe
jecxz
lock
adc
mov
adc
mov
sub
xchg
jmp
retf
ins
sbb
in
push
or
sbb
repnz
dec
or
nop
jne
test
sbb
push
cmp
cmp
imul
adc
push
adc
dec
adc
in
dec
mov
sar
mov
fst
shr
add
outs
pop
(bad)
cli
cmp
pop
out
aam
dec
test
popf
pop
push
push
lahf
push
lahf
mov
mov
fimul
xor
nop
ds
out
xor
adc
mov
or
and
mov
dec
sti
inc
xor
icebp
adc
add
pop
outs
int
(bad)
xor
addr16
and
xor
mov
mov
mov
icebp
push
sub
int3
sbb
dec
or
loopne
add
xchg
ins
dec
xor
push
push
jae
fst
gs
scas
(bad)
sub
mov
inc
cs
and
lahf
inc
mov
push
int3
mov
leave
sti
pop
mov
mov
jp
or
(bad)
xor
push
jno
adc
jb
aad
inc
mov
push
cli
ins
mov
mov
loopne
je
adc
imul
xor
mov
out
dec
gs
add
push
sub
adc
stos
lock
xchg
pop
push
adc
and
cmc
gs
(bad)
sub
sar
ss
inc
push
cwde
leave
cmp
into
mov
adc
popa
inc
(bad)
ror
inc
(bad)
mov
xor
retf
xchg
mov
aad
push
arpl
repz
(bad)
mov
and
xor
jecxz
cli
dec
add
sahf
xor
pop
sub
into
xchg
cmp
dec
imul
push
ja
add
gs
sbb
idiv
mov
daa
out
out
enter
xor
leave
jg
in
sbb
in
aaa
cmp
je
fild
sbb
mov
mov
add
hlt
cld
test
sbb
(bad)
in
fs
call
jp
or
out
cwde
test
lahf
aam
pusha
imul
lods
mov
sbb
push
stc
sub
sub
sub
test
inc
clc
outs
add
sbb
or
sub
jno
or
std
loope
cdq
mov
lods
popf
leave
xor
mov
fidiv
or
dec
jge
and
(bad)
iret
push
push
push
xor
jb
rcl
adc
add
je
push
js
aad
scas
pop
out
sub
inc
pop
jno
mov
addr16
mov
mov
xchg
inc
add
mov
call
outs
xor
(bad)
rcl
adc
rol
jb
pop
pop
xor
add
add
push
cmp
repnz
ins
adc
or
dec
mov
push
pop
xchg
pushf
daa
je
das
push
push
dec
sbb
pop
cmp
cmp
shl
movs
dec
int3
inc
lods
aad
(bad)
psrld
inc
mov
and
ss
add
sub
push
push
cs
jnp
outs
push
test
dec
stos
push
daa
fild
pop
scas
adc
or
movs
call
pop
jns
inc
fldenv
adc
mov
xor
imul
and
xchg
jecxz
(bad)
push
push
inc
mov
cmp
(bad)
fstp
push
int3
sub
cmps
test
in
dec
(bad)
call
cld
mov
dec
or
mov
mov
fcmovnbe
mov
addr16
outs
cmp
push
mov
js
je
cld
push
(bad)
cmc
mov
mov
fmul
xchg
xchg
(bad)
push
loopne
jb
sub
sbb
pop
mov
inc
(bad)
sahf
xor
adc
dec
call
jno
lods
xchg
imul
cdq
popa
lods
(bad)
xchg
or
xor
sbb
cld
lock
mov
jmp
neg
fmul
dec
inc
push
xlat
rol
nop
jg
push
call
retf
mov
xchg
sar
xchg
stos
test
jge
push
jmp
or
in
cwde
xchg
jno
xchg
or
in
sub
cld
pop
popf
das
jb
ins
pop
push
or
jno
imul
push
xchg
dec
mov
cwde
cmp
jl
mov
retf
lahf
jb
cmp
pop
(bad)
stc
(bad)
int3
mov
dec
xor
pop
rcl
sti
aad
xchg
sub
push
mov
cmps
jle
test
ss
sbb
imul
(bad)
jae
mov
and
jno
cmp
pop
(bad)
xchg
add
inc
xchg
cmp
fcmovu
stos
jl
jbe
mov
xchg
or
fwait
xchg
add
push
xchg
mov
ins
add
cmp
dec
jge
xor
packssdw
stc
pop
sahf
adc
repz
sub
je
pop
sbb
dec
les
pop
in
jl
(bad)
movs
inc
test
rcr
imul
sti
aas
cmp
ds
mov
mov
sbb
mov
mov
dec
loop
mov
mov
jmp
cmp
fxch
dec
inc
mov
and
retf
mov
adc
mov
div
ins
mov
xchg
or
popa
cmp
pop
cmps
sar
cmps
into
ins
push
not
jg
popf
sub
inc
movntq
inc
aam
sbb
push
or
mov
iret
mov
adc
movs
xchg
sbb
jne
aam
cmp
mov
add
icebp
fimul
mov
push
push
inc
cld
or
mov
or
(bad)
fild
in
ja
push
and
imul
xchg
ss
sbb
lods
pushf
aaa
rcr
mov
js
adc
retf
xchg
lea
(bad)
mov
fnstenv
out
loopne
cmp
sub
gs
or
jno
adc
mov
push
push
jns
cmp
mov
dec
mov
pop
cs
gs
enter
mov
adc
inc
or
inc
pop
mov
cld
xchg
sub
xchg
out
adc
cdq
inc
repnz
cmp
jb
ins
cs
movs
fs
inc
sbb
repz
test
aaa
and
movs
mov
sub
sub
fcom
and
das
aaa
inc
mov
dec
ins
int3
xor
or
inc
jae
stc
(bad)
fcom
inc
add
push
xor
mov
mov
xor
add
ror
jo
xor
jb
inc
cmp
jle
or
xor
sbb
add
or
out
mov
or
mov
pop
xchg
daa
cdq
push
or
inc
loop
sub
xchg
mov
jle
sub
ins
sub
out
lods
outs
sub
dec
add
jne
push
mov
sbb
pop
add
pop
(bad)
lock
imul
fstp
lods
dec
jge
mov
or
add
repz
xchg
call
dec
inc
or
add
rol
add
in
hlt
push
inc
cwde
outs
imul
js
xor
xchg
shl
and
test
loopne
mov
ret
lods
movs
js
mov
rol
mov
dec
nop
call
out
push
in
clc
sbb
daa
sbb
ficomp
rcl
cmp
mov
mov
inc
and
dec
sub
or
jmp
aaa
inc
aaa
cwde
push
div
(bad)
xchg
xor
test
add
jecxz
scas
sar
neg
scas
jo
sbb
pop
xor
push
and
jmp
call
fild
enter
stos
into
mov
mov
les
xor
adc
fdivr
fwait
and
clc
(bad)
cmp
xor
retf
jmp
call
mov
push
(bad)
mov
test
sbb
fldcw
inc
push
stos
shr
inc
rol
inc
std
push
xchg
inc
shr
sbb
in
pop
daa
test
out
dec
repz
test
mov
stc
sub
add
sbb
mov
mov
pop
test
vzeroupper
and
scas
clc
xchg
mov
cmp
ins
xchg
bound
inc
ret
add
fs
scas
push
cmp
push
out
jno
cmp
ss
mov
retf
push
ja
ja
and
push
dec
out
int3
fs
or
sub
das
add
addr16
sbb
jmp
loopne
push
icebp
mov
xlat
(bad)
push
ja
or
outs
imul
rol
push
pop
outs
xchg
neg
lds
sbb
cmp
mov
fild
xchg
test
inc
iret
sti
aas
je
(bad)
xor
push
sbb
mov
push
jbe
and
pusha
stc
pop
hlt
cld
and
in
xchg
jnp
mov
in
shl
inc
or
das
xor
in
inc
popa
stos
fwait
stos
mov
mov
mov
js
pop
or
int3
hlt
hlt
mov
(bad)
mov
or
cwde
iret
cli
and
add
jge
and
cmc
jmp
jge
dec
jecxz
mov
loope
imul
cmc
ja
pushf
xor
out
fwait
sbb
pusha
add
rcr
outs
adc
sbb
push
in
jl
into
sub
test
ja
arpl
outs
sub
ss
mov
scas
out
inc
fild
lock
or
cwde
add
xor
out
outs
adc
push
mov
in
popa
dec
cmp
rcl
clc
mov
mov
stc
fucomip
ret
lahf
loopne
adc
iret
pop
push
addr16
inc
sti
gs
dec
shr
cld
scas
mov
ret
mov
add
mov
jae
outs
pop
das
jmp
mov
mov
shl
call
jb
int
shr
fld
(bad)
test
ror
out
shr
mov
mov
repz
arpl
jp
icebp
dec
mov
mov
mov
sub
test
and
pusha
and
pop
out
(bad)
sbb
scas
jl
xchg
into
ja
push
fstp
enter
fsubr
lods
(bad)
loop
add
loope
pxor
inc
movq
shr
mov
call
mov
xchg
inc
ins
outs
loope
inc
shl
add
cmp
sub
mov
vmwrite
popw
and
mov
repnz
jb
test
jb
adc
popa
(bad)
sbb
push
cmp
and
and
pop
mov
jo
mov
dec
mov
sub
into
fs
movs
movs
xchg
out
sbb
jmp
sub
mov
jg
and
movs
aam
cmp
and
push
sub
int
jnp
mov
aaa
out
fwait
sub
ds
mov
jecxz
call
jne
cmp
lock
call
leave
aaa
pop
ror
push
jb
adc
icebp
call
cmps
mov
setl
sbb
outs
or
xchg
scas
adc
call
es
data16
fcom
xchg
dec
and
les
inc
pop
fs
pop
outs
rol
in
mov
inc
out
pop
scas
inc
pop
(bad)
iret
dec
out
fucomp
repnz
push
push
fcomp
push
ins
cmp
arpl
(bad)
xor
pop
ret
pop
aaa
bound
sahf
mov
or
jne
add
fwait
cld
pop
cmp
pop
mov
daa
pop
pop
out
jae
ds
jae
mov
xchg
stc
inc
loop
dec
pop
xlat
loop
mov
mov
js
pop
lea
fcomp
nop
mov
jmp
out
out
out
cmp
add
test
xchg
ret
das
pop
cmp
push
add
dec
loop
jle
and
in
test
test
push
sbb
pop
loopne
ror
repz
sbb
mov
xor
jecxz
ror
pop
les
test
xchg
cwde
call
test
sbb
movs
adc
arpl
sbb
dec
cmp
jmp
or
js
outs
xchg
fld
cmp
sbb
les
mov
jmp
stos
jae
lods
mov
mov
stos
test
mov
adc
lods
pop
push
add
arpl
inc
sub
sub
outs
or
adc
jp
fidivr
mov
cmps
retf
or
in
xchg
dec
repz
div
popa
shr
pusha
jecxz
stos
jne
hlt
(bad)
or
sub
loop
ins
jno
mov
mov
imul
(bad)
jge
lock
xchg
dec
leave
adc
test
mov
stos
inc
enter
push
sub
jmp
push
push
sbb
shr
jne
xor
les
adc
inc
imul
mov
inc
xchg
xor
rol
jno
fwait
aad
or
pop
and
fnstcw
adc
push
sti
nop
cwde
pop
push
adc
cmp
push
push
jg
cmp
enter
pushf
add
clc
sub
fs
clc
mov
dec
out
sub
add
fistp
cmp
js
lods
push
rcl
xchg
retf
pop
js
ror
out
jb
mov
mov
int
mov
mov
push
mov
and
adc
sahf
sub
push
je
xchg
or
ficomp
cmp
sub
xchg
fwait
test
loope
lock
call
add
les
sbb
in
mov
adc
xchg
ret
add
xchg
lods
rol
test
popa
add
inc
mov
int
push
rol
clc
jmp
mov
test
add
ja
pop
ins
imul
rol
push
aaa
cmps
ss
gs
push
std
xor
push
pop
adc
xchg
adc
push
test
inc
fstp
stc
outs
or
jp
addr16
test
and
cmps
movs
push
inc
add
imul
adc
mov
jecxz
push
sub
mov
arpl
int
push
shl
scas
(bad)
sti
test
xchg
or
adc
mov
pop
cmp
mov
inc
(bad)
pop
(bad)
int
jecxz
inc
pop
adc
cmc
test
xor
(bad)
jecxz
sbb
pop
jmp
call
aam
push
dec
enter
(bad)
cmp
mov
mov
xchg
push
packsswb
push
shl
mov
cdq
mov
outs
pop
mov
lods
adc
cld
adc
fnstsw
mov
jg
ja
sahf
inc
ins
gs
mov
retf
sti
adc
clc
repz
int3
stc
jb
add
sbb
test
ret
loop
mov
or
adc
mov
adc
scas
cmp
jle
ds
xchg
ds
push
and
dec
mov
add
cmc
fwait
mov
call
jns
mov
retf
in
xor
ret
std
and
xchg
adc
xchg
pop
sbb
out
pop
icebp
push
xchg
jecxz
mov
inc
call
cmp
(bad)
cmp
lock
mov
or
xor
(bad)
lods
loop
iret
adc
scas
fisub
push
(bad)
rep
bt
pusha
pop
sub
jge
pop
stos
imul
sub
jle
lods
dec
and
(bad)
sub
mov
fadd
jne
rol
mov
mov
(bad)
out
into
sbb
mov
add
shl
cdq
loop
int
and
push
jbe
mov
cmp
or
or
mov
cmc
test
push
xor
cdq
cmp
aas
bound
add
mov
pusha
cmp
clc
adc
out
sub
cmp
mul
jb
sbb
pop
jge
jno
and
lds
dec
jg
mov
cmps
dec
pop
inc
outs
(bad)
mov
or
mov
jo
push
inc
sbb
sub
or
push
bound
dec
sub
bswap
arpl
inc
xor
xor
cmps
fs
ja
adc
or
fwait
add
sbb
out
repz
rcr
cmp
xchg
and
pop
add
add
fist
pop
pushf
sti
fisttp
out
stos
das
pop
jmp
and
aas
sahf
fist
pop
push
pop
cld
rol
imul
dec
iret
and
xchg
ins
jmp
icebp
jmp
sub
jmp
cwde
sub
xlat
stos
mov
and
jecxz
imul
jmp
jo
adc
jne
sar
js
or
sub
sbb
shl
jo
outs
sub
inc
int3
jg
dec
mov
pop
mov
loope
imul
xchg
cwde
cmp
jmp
(bad)
in
enter
shl
ins
cli
inc
loop
stos
sub
(bad)
xchg
cdq
int
hlt
sbb
adc
test
inc
xor
int3
pop
movs
das
mov
lods
bnd
jo
inc
xor
cs
fidiv
out
add
push
mov
cmp
ds
or
mov
and
popf
and
mov
movs
js
push
mov
ja
scas
adc
sub
ss
xchg
mov
mov
push
xchg
call
xor
pop
push
cs
iret
outs
iret
push
jge
jo
add
mov
jb
shr
gs
xchg
in
retf
hlt
mov
sbb
sbb
jbe
mov
adc
stos
inc
rcr
inc
int3
rol
jge
fld
nop
data16
sub
or
neg
pop
sbb
retf
cmp
sqrtps
push
mov
push
aam
pop
ins
imul
cs
cdq
repnz
inc
mov
inc
data16
mov
lods
int
pop
in
test
sbb
jo
add
jbe
fld
(bad)
mov
and
stos
iret
cs
push
(bad)
outs
pop
pop
pop
jno
sbb
jmp
xchg
fld1
and
pushw
imul
and
les
repnz
mov
inc
test
iret
ret
fst
rcr
mov
div
dec
aas
or
dec
adc
xchg
sbb
adc
lods
xchg
arpl
mov
mov
mov
rcl
dec
fs
loop
imul
mov
mov
cmc
imul
test
xor
daa
ins
jae
xor
fimul
pop
ret
sub
inc
xor
movs
cdq
push
jns
lods
fist
aas
mov
inc
push
mov
mov
dec
call
fs
add
push
mov
and
in
aad
leave
add
mov
int
daa
and
and
aam
mov
fs
mov
dec
xor
ror
xchg
mov
dec
cs
add
(bad)
sbb
xchg
sub
sbb
sbb
test
sar
or
adc
arpl
cmp
fst
test
mov
sub
push
pop
out
sub
cmp
sti
aaa
imul
mov
or
adc
into
cmc
sub
or
pop
int3
(bad)
fist
mov
int
pop
test
mul
pop
sbb
movs
daa
mov
je
movs
mov
xor
and
lods
push
xchg
cs
test
arpl
das
into
jge
inc
(bad)
jmp
or
xor
loopne
mov
inc
xlat
dec
xchg
cmp
js
inc
pop
adc
sbb
repz
in
adc
rcr
cmps
loope
mov
(bad)
xchg
dec
mov
xchg
pop
mov
bound
pusha
mov
sbb
add
cmps
inc
push
or
and
test
jecxz
out
push
rcr
inc
mov
les
mov
inc
xor
cmps
adc
shl
push
outs
lods
mov
sub
jecxz
cmp
mov
imul
pop
(bad)
retf
loop
div
fwait
adc
jmp
jmp
ror
push
test
push
push
pop
push
fstp
fimul
cmp
les
add
jne
inc
inc
add
sbb
xor
sbb
add
jae
aad
outs
out
jo
inc
adc
mov
jg
or
inc
xchg
fs
xchg
sbb
push
push
push
or
out
outs
stos
adc
xor
mov
jo
loop
mov
popa
xchg
sbb
lock
and
cmp
mov
adc
(bad)
(bad)
and
ret
cmp
pop
xor
push
pop
scas
jo
or
mov
mov
push
jmp
mov
mov
enter
in
cmp
cmp
fmul
xor
mov
cmc
add
and
outs
repnz
int
xor
nop
lds
rol
popa
shr
ror
jecxz
popa
mov
stos
movs
adc
js
out
jl
fst
repnz
icebp
and
push
xchg
sbb
push
fisttp
jmp
jmp
push
fld
or
cmc
iret
test
movs
jbe
push
test
ret
stc
or
inc
fsub
adc
lds
gs
dec
mov
xlat
cmps
xor
out
repnz
call
or
addr16
jae
shr
popf
es
push
xchg
test
mov
cmp
xor
mov
sbb
mov
mov
mov
xor
fadd
jp
mov
pop
aaa
outs
pop
pop
shl
mov
bound
mov
and
fcom
mul
inc
adc
sub
mov
add
mov
cwde
push
in
pop
(bad)
mov
jae
arpl
sar
mov
in
cmp
div
pop
aaa
pop
adc
arpl
in
dec
shl
int3
jbe
mov
mov
mov
xor
cld
sub
arpl
mov
fistp
mov
sysenter
jnp
fst
cmp
mov
lods
cwde
fcomp
out
cmp
movs
sbb
aaa
mov
mov
fbld
cwde
movs
cld
jmp
aad
js
mov
add
push
repnz
loop
xchg
hlt
add
add
dec
add
dec
popa
pop
scas
enter
pop
je
jl
mov
xor
or
push
sbb
mov
fsubr
fist
cwde
cmp
add
ins
mov
fidiv
or
xchg
fnstsw
cmp
pop
adc
aas
enter
push
add
hlt
stos
mov
sub
lods
sar
dec
in
mov
repz
pop
mov
sbb
in
dec
rol
jbe
jae
xchg
mov
pop
fsub
nop
leave
std
shl
pop
(bad)
dec
push
in
loop
scas
push
sbb
call
aam
or
jns
out
movs
cli
mov
fcom
dec
aas
jnp
(bad)
mov
ins
cli
adc
mov
and
cmp
cmps
xor
push
cs
leave
fidiv
xchg
pop
sbb
test
push
ss
push
mov
mov
es
cmp
push
mov
xchg
jo
and
mov
sub
int
mov
xchg
imul
shl
aam
push
mov
fwait
jnp
jb
mov
or
xor
push
clc
popa
loope
pop
loopne
mov
dec
imul
les
dec
xor
in
jle
xlat
mov
inc
add
mov
(bad)
mov
ja
inc
iret
push
adc
mov
loope
push
popf
pusha
call
sub
sbb
ins
pop
scas
push
sbb
mov
adc
mov
enter
pop
enter
mov
fucom
pop
scas
clc
out
sbb
ds
xor
das
jge
pop
test
(bad)
ret
push
cdq
jo
push
inc
mov
sbb
push
cmp
enter
adc
sbb
push
fnsavew
and
inc
mov
xor
push
(bad)
mov
aam
dec
and
mov
add
jecxz
jmp
rcr
pop
call
pop
sbb
push
bound
add
retf
mov
cwde
or
mov
jmp
cmps
lahf
jle
bound
(bad)
cmp
out
sbb
mov
inc
test
mov
lahf
sub
lock
and
inc
cmps
shr
das
data16
fcomi
jp
repz
dec
jecxz
stc
pop
fld
(bad)
jno
scas
pop
repnz
or
mov
out
repz
sbb
imul
and
jecxz
mov
and
fisubr
fcom
mov
popf
inc
cmp
fldcw
lds
dec
imul
dec
pop
adc
pusha
pop
mov
pop
ja
ja
sahf
inc
xchg
inc
and
jbe
inc
ret
push
and
retf
mov
cdq
pop
inc
test
sub
xchg
popf
inc
and
jmp
int
icebp
ret
mov
aad
test
push
dec
mov
ja
or
js
aad
pop
inc
adc
jmp
fsubr
fldcw
loopne
ins
mov
in
mov
inc
aam
mov
rol
ja
xchg
ret
out
gs
in
push
jne
enter
fnsave
xchg
cmps
div
or
jnp
mov
jp
outs
pop
xor
rol
pop
dec
fcmovnb
repnz
clc
popa
retf
mov
cwde
inc
and
fcom
pop
div
loop
loopne
das
(bad)
loop
inc
and
adc
mov
in
ss
loopne
out
add
cmp
push
push
les
or
xchg
pop
in
sbb
mov
popf
jns
hlt
enter
mov
movs
sub
adc
cmps
aaa
pusha
cld
or
ret
(bad)
add
mov
sbb
fisttp
cdq
imul
ficom
xor
cwde
fst
jmp
push
call
movs
fs
push
cmps
and
mov
lea
aas
jmp
call
xor
pusha
in
xchg
fwait
in
clc
dec
xchg
xchg
or
sbb
rol
jnp
seta
aam
mov
lea
imul
or
push
xchg
push
stc
retf
mov
div
leave
vpaddd
push
pop
pushf
lods
cmc
test
hlt
in
test
les
or
jns
add
rcl
dec
push
loope
ficomp
sar
mov
cmp
dec
fcomip
sub
jecxz
scas
inc
sbb
(bad)
mov
sahf
ja
int
adc
xchg
xor
add
inc
sub
pop
pop
xchg
and
jmp
(bad)
mov
dec
imul
lods
(bad)
dec
pop
fndisi(8087
ret
mov
ds
adc
push
fld
(bad)
pop
std
adc
bound
or
and
leave
cld
mov
jecxz
(bad)
push
xchg
and
in
jg
or
pop
sub
(bad)
push
jnp
lods
mov
lahf
cmp
push
movs
sub
bound
push
popf
cmovo
sbb
jb
or
dec
jl
xchg
loop
inc
inc
icebp
rcl
addr16
xor
push
xlat
aad
mov
lock
loope
sub
(bad)
jns
fadd
fucomp
mov
dec
sub
ja
dec
pop
and
fbld
(bad)
sbb
nop
shr
pusha
dec
enter
mov
ss
xchg
inc
outs
and
pop
(bad)
fldenv
push
pushf
sahf
mov
imul
push
mov
pop
mov
shl
movs
sbb
inc
pop
adc
mov
sub
adc
push
sbb
pop
loopne
add
daa
dec
pop
lahf
xchg
jp
jnp
cmc
sbb
pop
int3
cwde
sub
jmp
push
jbe
shr
jae
sub
pop
cmp
and
std
adc
sub
xor
cmc
xchg
cmp
mov
jnp
aaa
aad
data16
daa
test
sahf
fist
cs
aam
stos
xor
or
mov
out
adc
arpl
jo
add
dec
pop
xor
pop
(bad)
xchg
mov
outs
movs
xchg
jle
inc
pop
fwait
mov
and
cmps
repz
push
jno
sbb
and
mov
push
inc
sbb
outs
jp
sbb
es
sti
into
jp
call
add
pop
dec
sahf
jb
mov
lock
xchg
aas
add
enter
sub
inc
scas
dec
bsf
push
fmul
jno
jmp
in
mov
mov
fs
in
popa
ja
mov
and
std
push
sbb
inc
movs
retf
repnz
jp
pop
ret
pop
(bad)
repz
mov
test
lock
hlt
cmps
sub
xchg
daa
mov
mov
mov
cmp
lahf
sbb
inc
xor
call
fistp
push
nop
mov
mul
cmps
call
cs
mov
fwait
jecxz
cmp
scas
mov
sbb
adc
or
push
std
push
mov
rcr
xchg
nop
int3
mov
popa
or
jb
movs
inc
cwde
(bad)
fldl2t
pusha
out
cwde
jmp
punpckhbw
fs
cdq
daa
out
arpl
retf
imul
pop
int
cmp
mov
repz
shr
pop
mov
dec
repnz
in
pop
mov
push
add
inc
aas
into
adc
mov
movs
xor
cmp
or
xor
mov
mov
in
loopne
lods
adc
lds
cmps
idiv
ins
ja
add
lods
cld
mov
jb
dec
sti
repz
test
cwde
or
mov
int3
dec
mov
ja
jmp
pop
popf
mov
mov
and
rcr
and
test
pop
jnp
inc
mov
retf
test
xor
out
pop
in
and
jle
jne
mov
ficom
je
sbb
xchg
mov
pop
popf
inc
mov
test
sbb
icebp
fild
dec
mov
idiv
or
mov
push
cmc
adc
imul
stos
scas
xor
mov
push
add
hlt
jmp
ret
stc
push
push
mov
fstp
inc
mov
(bad)
(bad)
aad
mov
jmp
retf
xchg
adc
call
cwde
mov
push
outs
scas
pop
push
call
jg
(bad)
int
xor
movs
adc
add
xor
xchg
lods
das
inc
hlt
mov
and
pop
pusha
dec
adc
scas
xor
dec
data16
xchg
add
ins
ss
adc
nop
mov
fstp
pop
and
imul
pop
sub
retf
shr
xor
mov
loope
out
xor
inc
sub
and
push
daa
sbb
adc
mov
fucomip
adc
mov
jge
lods
xor
or
mov
jp
cmp
push
jnp
xor
mov
retf
out
pop
jne
out
lds
and
dec
mov
mov
sbb
rol
cmp
push
ins
jmp
mov
stos
mov
(bad)
xlat
or
fsubr
sub
sbb
rcr
push
xchg
aaa
jl
lea
push
adc
jg
sar
or
or
add
rol
mul
sbb
ret
ins
cmp
mov
mov
retf
dec
mov
inc
in
(bad)
xchg
loope
mov
or
and
(bad)
std
xor
test
rol
jo
popa
add
jb
pop
adc
(bad)
push
scas
ins
pop
xor
mov
or
xchg
pop
lock
jmp
pop
ret
(bad)
repz
mov
mov
push
dec
mov
or
dec
mov
mov
rcr
test
mov
xor
fmul
pop
push
inc
outs
mov
cmp
outs
loope
int3
mov
jae
addr16
mov
mov
int3
pushf
inc
mov
test
sub
jp
jae
shl
sub
jge
pop
and
mov
mov
mov
xchg
mov
imul
gs
jmp
fidiv
ret
in
and
dec
or
add
dec
dec
add
std
fs
and
rcl
(bad)
cli
xor
add
adc
push
pusha
call
xchg
adc
loopne
pop
adc
mov
mov
inc
adc
popa
(bad)
cmp
sbb
lock
push
inc
stc
in
jl
mov
popa
xchg
fsqrt
leave
adc
cmp
mov
cmp
out
sub
ret
add
add
jno
cmp
and
lahf
lods
mov
push
loope
lock
mov
adc
pop
test
les
mov
outs
mov
adc
push
ja
xchg
inc
loopne
push
data16
sub
fsub
xchg
jp
fist
lahf
iret
cwde
push
mov
scas
loope
dec
xor
retf
cmp
pop
in
jl
imul
pop
jb
ss
rcl
test
and
sub
ds
lea
das
push
or
mov
shr
popa
test
mov
fmul
xchg
sbb
call
inc
(bad)
dec
add
inc
add
xchg
xchg
lock
push
std
mov
pop
xchg
repz
add
mov
adc
dec
and
movs
xchg
dec
lea
call
pop
lods
sub
iret
in
mov
jl
mov
pop
pop
xchg
dec
cmp
sub
mov
or
int3
nop
movs
or
inc
int
leave
out
(bad)
sti
jp
pop
xchg
int
je
sbb
out
sub
lahf
call
mov
mov
ja
cmp
test
add
aam
arpl
scas
mov
xlat
imul
jnp
loope
dec
cs
and
mov
fmul
ds
sbb
in
mov
gs
xor
cmps
pop
ja
fisub
hlt
data16
js
idiv
(bad)
lea
sbb
iret
movzx
jo
movs
fnstenv
les
jne
jmp
(bad)
mov
mov
mov
cmps
(bad)
mul
adc
and
xor
pop
ds
jb
or
inc
mov
lock
push
jg
sub
sbb
add
mov
enter
dec
cmp
(bad)
fadd
movs
jae
add
push
mov
les
dec
stos
fistp
int
jmp
int3
sti
fstp
fistp
sbb
push
pop
and
xchg
sbb
pop
fwait
popa
mov
pushf
pop
cli
sbb
mov
xchg
push
test
scas
pop
mov
sub
in
add
fadd
js
pop
and
call
inc
pusha
repz
mov
xor
mov
ja
lds
sbb
and
mov
mov
sub
test
nop
fadd
pop
mov
and
cmp
jnp
push
in
inc
xor
outs
inc
or
cli
mov
pop
xchg
pushf
cld
test
mov
inc
and
jno
out
fs
mov
pop
inc
int3
push
vminps
jmp
inc
mov
xchg
mov
je
bound
xchg
cli
js
sbb
aaa
out
fimul
add
clc
dec
imul
movs
sahf
mov
inc
lods
add
adc
xor
les
idiv
jg
loope
lods
in
inc
mov
cmc
in
dec
mov
push
inc
cdq
fdivr
sbb
mov
adc
ds
inc
(bad)
mov
cmp
mov
sbb
int3
add
mov
call
cld
adc
retf
sbb
adc
push
daa
dec
cmp
adc
or
retf
cs
ins
(bad)
retf
out
xchg
inc
aaa
call
sti
pop
in
jg
mov
jmp
fdiv
hlt
outs
out
and
adc
mov
or
fdivr
and
push
jne
mov
cli
nop
pop
cmp
sbb
xchg
or
loope
inc
ror
pop
jo
fld
add
pushf
pusha
movs
and
mov
adc
or
push
mov
(bad)
aas
inc
(bad)
rol
imul
repnz
pop
mov
adc
ret
cmp
call
add
(bad)
jae
daa
repz
jp
adc
rol
jo
in
je
inc
fisttp
cmp
in
adc
and
test
test
call
dec
pop
(bad)
imul
aam
(bad)
ror
daa
adc
in
pop
mov
jnp
add
sbb
adc
popf
inc
lock
mov
call
test
adc
xlat
cld
xchg
and
test
push
mov
mov
fisttp
imul
sar
and
xchg
cmc
icebp
icebp
xchg
in
cs
ret
lahf
inc
lds
dec
shr
and
ins
inc
call
ds
lds
add
pop
ins
and
int
inc
jbe
mul
add
sub
clc
retf
pop
or
sbb
mov
push
loope
test
add
call
add
sub
mov
fwait
int3
cwde
mov
(bad)
jmp
enter
out
xchg
jae
xor
stos
sbb
mov
sub
imul
sub
jnp
sub
and
out
fdivr
loope
retf
adc
es
movs
leave
psllq
addr16
sub
add
mov
sub
push
sub
or
push
add
sub
jae
pop
xchg
adc
and
xchg
jno
jns
push
fbstp
movs
leave
(bad)
call
xchg
push
pop
scas
inc
jl
cli
mov
pop
mov
out
daa
jbe
inc
pop
lahf
add
and
mov
mov
xchg
jb
ins
js
fistp
frstor
sub
push
xor
jb
pop
push
lods
hlt
adc
dec
pusha
fxam
xor
cmp
mov
jno
xor
mov
jecxz
and
mov
adc
(bad)
xchg
gs
pop
div
call
xor
jae
leave
repz
xor
sar
mov
pop
cli
cmp
les
icebp
mov
hlt
xor
inc
sub
push
fbld
dec
xchg
daa
popf
xor
enter
(bad)
or
fst
xor
gs
lods
or
push
in
test
push
push
mov
(bad)
out
fnstsw
push
xor
in
push
xor
or
pop
dec
cmp
push
pop
pop
std
jle
and
fmul
(bad)
cmp
push
leave
or
retf
clc
cmp
push
cmp
xor
xor
cwde
jmp
add
push
mov
adc
lods
sub
push
mov
test
dec
xchg
add
sbb
add
mov
rcr
std
add
mov
jnp
sbb
(bad)
movs
inc
inc
jl
xor
lods
out
mov
pop
js
lods
not
push
or
int3
jge
dec
pop
mov
ss
sub
push
mov
popa
push
stos
dec
popa
or
(bad)
out
fcomp
movs
mov
stc
xor
xchg
jne
and
adc
in
lds
fisubr
and
outs
mov
ins
retf
ins
inc
mov
cdq
not
cmp
dec
imul
adc
lahf
mov
test
aam
dec
mov
je
retf
aam
inc
xor
xchg
cmps
jecxz
cs
push
push
sahf
getsec
sbb
xchg
pop
jge
out
popf
xlat
dec
pop
push
movs
xchg
mov
xor
xor
mov
(bad)
mov
cmp
cld
jae
mov
xchg
xchg
adc
mov
les
out
push
test
pop
ins
mov
and
cmp
sbb
jmp
fisttp
jle
and
inc
sahf
retf
jno
dec
cmps
movs
cmps
mov
stos
xchg
sbb
push
pop
dec
pop
fcmovnu
sbb
adc
push
nop
in
sub
hlt
popf
movs
int3
mov
jno
sbb
into
mov
int
xor
clc
push
jp
mov
and
mov
retf
and
cmp
and
sbb
xchg
cld
gs
aad
jmp
lds
xchg
(bad)
(bad)
mov
sbb
daa
dec
movs
int
cmp
addr16
aad
in
adc
adc
push
mov
push
pop
or
loop
and
and
cs
jbe
mov
jbe
aas
fisttp
andps
sti
xor
out
stos
stc
repnz
es
xchg
cmc
inc
mov
fisub
ins
push
iret
pop
frstor
fadd
std
xchg
xchg
xchg
clc
sub
mov
xchg
pop
sub
test
jg
shl
add
xor
pop
sub
fadd
xchg
leave
ins
lahf
movs
stos
sahf
pop
dec
mov
test
sub
mov
jmp
cmps
pop
data16
sub
lods
mov
sbb
daa
xor
je
mov
daa
inc
push
pop
sbb
jmp
mov
and
(bad)
xor
and
(bad)
mov
pop
jge
dec
add
or
jge
addr16
imul
push
jmp
stos
pop
jl
ins
xchg
fs
enter
mov
retf
jle
mov
sub
push
in
pop
mov
xchg
push
dec
inc
fdiv
and
ja
ins
dec
pop
inc
jns
mov
inc
nop
(bad)
inc
jmp
je
and
fdivr
fsub
fild
inc
inc
jne
stc
xchg
jne
scas
push
sub
sar
sub
call
dec
push
mov
cs
shrd
or
xor
ja
std
hlt
stos
data16
jg
pusha
dec
sti
(bad)
cmp
jge
fisttp
lea
lods
xchg
mov
lds
mov
pop
aam
outs
dec
repz
adc
inc
pop
mov
addr16
pop
push
jp
(bad)
or
pmaxsw
shl
xor
push
sub
cmps
sar
repnz
xlat
jmp
fcmovnu
adc
inc
cmps
dec
bound
jb
dec
and
mov
pusha
inc
(bad)
aas
pop
es
not
mov
jns
xchg
aad
es
les
dec
sub
mov
lahf
cmp
sub
dec
xor
aaa
ds
mov
jp
cmp
dec
arpl
mov
std
test
add
or
add
add
mov
pop
mov
sub
xor
sub
mov
repz
cli
nop
sbb
or
mov
stc
loop
mov
pusha
inc
dec
sub
jne
mov
adc
push
jp
cmps
xchg
mov
inc
mov
gs
adc
mov
jmp
pop
js
push
jae
iret
push
outs
pushf
movs
xchg
aam
addr16
sbb
jb
push
movs
inc
or
loope
pushf
stc
add
and
ret
test
in
sub
dec
(bad)
outs
(bad)
mov
or
int
push
jle
add
xor
loopne
mov
fidiv
das
xchg
push
shr
mov
mov
sbb
pop
popa
repz
fidivr
and
std
lods
sti
shl
sub
movs
pop
sub
neg
adc
sahf
aas
jle
cmp
mov
and
cmp
adc
lds
dec
or
xor
and
adc
clc
lahf
inc
les
adc
inc
int3
xchg
push
xchg
mov
xchg
cmp
(bad)
add
jge
jmp
jle
movs
pop
xchg
xor
sub
sbb
movs
sbb
jecxz
int3
or
je
popf
popf
inc
or
out
xchg
cld
xchg
popa
test
sub
mov
(bad)
neg
fwait
sub
out
fidiv
(bad)
popf
dec
inc
(bad)
pop
stos
xor
sub
jmp
daa
lahf
(bad)
mov
sub
and
das
in
inc
fdiv
pop
mov
stos
mov
gs
dec
jg
add
shl
mov
into
ins
push
pop
jp
mov
xor
pop
and
sbb
cmps
movs
mov
adc
xlat
push
push
adc
shl
xchg
mov
sub
cli
test
fcom
sub
push
ror
retf
mov
fiadd
xchg
(bad)
(bad)
pop
fnstsw
call
test
mov
sbb
sub
xchg
pop
out
adc
test
aaa
jmp
repz
bound
dec
push
retf
pushf
out
inc
xor
arpl
sbb
fcomp
fist
pop
bound
repnz
add
test
jo
out
pop
retf
push
mov
dec
loopne
sub
out
mov
cmps
imul
ret
scas
arpl
test
jo
icebp
mov
pop
cmp
jnp
stos
shl
push
or
cs
aad
adc
fild
cmp
jecxz
je
jne
sbb
data16
shr
fucomp
mov
rcr
push
aas
dec
or
test
jae
push
xchg
mov
sbb
es
mov
nop
cwde
pusha
mov
daa
fcomp
sub
push
mov
ss
mov
add
sbb
hlt
push
dec
stos
mov
movs
sbb
mov
popa
mov
and
sbb
fwait
inc
(bad)
loope
lock
fsubp
or
push
out
push
dec
push
add
out
pop
cld
(bad)
(bad)
mov
sbb
call
scas
adc
sahf
daa
adc
mov
xchg
pop
ins
aaa
fcom
jns
scas
or
stos
push
lods
or
in
repnz
jns
cdq
fdiv
cli
out
in
mov
or
sar
fild
mov
jbe
jecxz
mov
or
adc
jo
ret
or
lods
jno
push
in
dec
xchg
sub
dec
nop
cmp
aaa
aad
aaa
ins
leave
ins
pusha
jno
jnp
rol
cmc
adc
mov
pop
loopne
or
mov
cmp
cs
mov
add
stos
add
mov
shl
jl
xchg
push
xchg
jnp
outs
pop
enter
lods
sub
adc
aas
sub
iret
mov
fsubr
out
(bad)
ds
and
jg
xchg
pop
mov
cmps
sbb
mov
js
adc
or
cmp
push
push
hlt
jnp
push
call
push
or
ret
add
jle
cmps
or
cmp
lea
pushf
pop
xchg
lock
and
fld
xor
inc
jg
dec
or
or
icebp
ds
or
mov
pop
ds
ja
ss
shl
jbe
inc
pop
jmp
xor
gs
mov
popf
jle
lock
sub
loop
int
cmps
std
or
jmp
fisub
stos
out
inc
cmp
mov
pop
(bad)
xchg
xor
scas
mov
or
mov
push
push
pop
jb
add
or
sub
or
je
fist
movs
add
je
aas
pop
out
fnsave
mov
or
sbb
ja
arpl
rol
sub
xor
and
jb
(bad)
rol
mov
repz
imul
sub
fstp
ins
xlat
mov
adc
aad
stos
sbb
jge
push
xchg
xchg
nop
push
adc
mov
out
sbb
shr
push
adc
or
sahf
pop
jae
xor
jae
je
sbb
mov
cli
and
mov
adc
test
in
stos
aas
jne
jbe
xor
or
rcl
jo
jecxz
and
in
jbe
mov
pop
in
cwde
shr
and
aad
xchg
xchg
int
(bad)
outs
retf
leave
sbb
push
mov
jmp
bound
mov
cmp
sbb
in
repnz
imul
cld
push
rcl
stos
fwait
call
lods
fldcw
scas
dec
ds
and
sbb
test
aas
dec
bound
xlat
loop
jb
adc
loope
(bad)
repz
int3
adc
iret
jl
pop
aas
xchg
into
cdq
stos
cs
jnp
repz
jg
imul
sbb
ins
cmp
adc
cwde
out
mov
sbb
sub
(bad)
pop
jl
and
jb
dec
fcomp
pop
push
popf
push
inc
and
sbb
adc
scas
(bad)
jle
jle
cmps
or
adc
push
retf
dec
mov
pop
cld
xchg
jl
and
adc
mov
xor
or
test
lock
(bad)
mov
inc
jmp
push
imul
in
mov
fdiv
inc
mov
dec
fisttp
inc
add
pop
(bad)
push
data16
sub
int3
sahf
in
sub
int3
push
mov
cmp
movs
pop
ret
adc
xchg
pop
cld
jne
ret
dec
push
loope
dec
push
jae
and
movs
sub
movs
inc
push
jl
popf
mov
fstp
jae
cmp
out
adc
inc
inc
dec
cmp
dec
shl
inc
or
lahf
movs
push
aas
rcr
retf
mul
test
cmp
cmp
pop
dec
lock
or
or
mov
mov
jno
xor
inc
sbb
inc
(bad)
add
xchg
pushf
mov
cmp
pop
adc
jmp
cli
jb
loop
adc
lds
pop
test
mov
jne
adc
mov
ins
stos
or
js
add
cmp
or
or
xchg
mov
jp
fstp
je
call
ret
ds
ret
cmp
push
push
cmc
iret
(bad)
out
mov
push
cmp
sbb
pusha
ror
xor
xchg
sahf
ret
adc
jmp
pop
mov
pop
shl
push
cmp
mov
xor
mov
call
out
aad
movs
pop
pusha
(bad)
ss
xchg
loope
adc
mov
xor
or
sub
or
loope
in
das
movs
movs
jmp
aas
pop
out
retf
push
or
daa
push
out
adc
and
retf
pop
dec
push
sahf
aaa
jns
push
xabort
inc
mov
xchg
sub
mov
iret
pop
xchg
jmp
lock
or
xchg
stos
and
jg
mov
cmps
xchg
scas
or
mov
inc
jne
test
mov
(bad)
pop
xor
push
sbb
cdq
pop
repnz
addr16
sub
fidivr
jmp
mov
aad
std
inc
imul
mov
pop
loop
fadd
add
inc
fwait
outs
sub
popf
rcr
lock
dec
in
jb
imul
adc
pusha
sub
cmp
(bad)
imul
pop
aad
lahf
js
dec
add
jge
or
mov
xor
frstor
push
xchg
jbe
sahf
std
cwde
mov
add
xor
mov
stos
loope
mov
in
int3
aaa
pop
pop
adc
std
mov
sub
stc
int
scas
mov
ja
imul
sti
push
test
sub
lea
cwde
add
adc
sbb
out
mov
sub
dec
mov
stos
mov
jp
inc
imul
outs
mov
cwde
hlt
push
test
add
addr16
pop
add
int
inc
push
aam
pop
leave
cld
xchg
repnz
fs
and
sub
lods
mov
aaa
leave
aam
sbb
jbe
and
pusha
mov
rcl
cs
sub
ret
test
push
jnp
ret
push
jg
cld
aad
aam
popf
pop
or
daa
sub
leave
and
sub
sbb
inc
mov
ficom
nop
push
push
adc
clc
(bad)
out
push
addr16
lock
jae
mov
jg
(bad)
cmp
pusha
pop
loope
stos
mov
out
and
arpl
test
mov
cmp
stos
push
push
(bad)
lock
jae
in
cmps
inc
jecxz
imul
pop
pop
mov
ds
jae
xor
movs
and
sub
aam
cs
aad
add
jnp
dec
push
or
and
scas
sahf
pop
cmp
cmp
cmps
sbb
pop
lods
in
rcl
clc
cwde
aam
into
and
arpl
xchg
xlat
sbb
leave
fsub
ss
jb
loopne
or
sbb
stos
scas
mov
out
dec
mov
xchg
clc
adc
(bad)
jne
pop
ins
out
jae
int3
cmp
pop
and
pop
xchg
jl
lahf
lds
sahf
lea
push
jns
or
mov
pop
mov
dec
mov
pop
dec
fs
jae
mov
inc
sahf
inc
dec
inc
inc
pop
out
(bad)
mov
inc
or
xlat
outs
mov
movs
outs
or
sbb
push
in
xor
jp
xchg
ins
(bad)
xor
mov
inc
add
dec
les
inc
xor
add
mov
fdivr
sbb
cli
cmp
mov
fs
cli
cmps
es
push
hlt
add
mov
xchg
call
mov
xchg
or
ret
xchg
pop
cmc
jmp
dec
cs
ror
das
(bad)
loopne
jae
sbb
daa
popa
inc
scas
mov
pop
loope
fstp
in
out
aas
retf
sbb
xor
aaa
les
loopne
pusha
aad
bound
or
fld
mov
daa
and
mov
sbb
push
xchg
xor
cwde
test
(bad)
int
jmp
repnz
outs
retf
mov
jns
push
call
sbb
cli
sar
es
in
push
out
xchg
sub
cmps
call
jo
push
mov
add
and
pop
fbld
scas
cmp
mov
aas
jae
adc
mov
mov
retf
add
mov
cwde
xchg
jo
xchg
jno
dec
xchg
fcmovu
shl
inc
ins
retf
mov
mov
adc
inc
sbb
loope
and
in
push
aas
and
mov
jg
adc
and
push
imul
mov
xchg
sub
scas
out
mov
out
pop
pop
mov
add
movs
add
inc
pop
adc
dec
rcr
mov
psllw
int3
xchg
pop
mov
lods
mov
xchg
push
adc
iret
push
fwait
or
xor
outs
dec
pop
fcom
add
lea
push
jmp
fstp
frstor
mov
or
push
push
push
fsub
adc
pop
jbe
xor
stos
jno
dec
fwait
scas
xor
aad
inc
mov
aaa
inc
mov
jae
cdq
pop
jnp
mov
mov
mov
cmps
int
mov
add
push
xor
inc
add
dec
dec
cmp
xchg
addr16
cmp
sub
inc
sub
repnz
push
adc
pop
repnz
adc
mov
push
cdq
jae
inc
in
ror
xlat
dec
cwde
sbb
push
adc
imul
int3
imul
nop
adc
push
and
adc
cmp
xor
mov
ds
mov
push
ins
cmp
adc
bound
out
cmp
push
push
dec
jle
dec
dec
js
mov
das
rol
pop
(bad)
js
cmps
or
cmp
or
(bad)
inc
cmp
(bad)
mov
dec
mov
mov
sbb
movs
lea
repz
(bad)
or
cmps
loopne
and
fwait
imul
int3
ins
gs
xor
int3
jns
dec
repnz
cdq
fild
cld
adc
out
fdiv
mov
repz
mov
push
ret
push
es
add
add
adc
jmp
cmps
lods
sbb
into
ret
jb
jns
push
(bad)
ud0
dec
dec
pop
add
push
popa
dec
xchg
xchg
pusha
retf
mov
je
jnp
cs
call
movs
mov
xlat
in
call
lods
push
xor
shl
shr
mov
out
ror
xor
cmp
cmp
jle
mov
adc
movs
push
jg
adc
jge
cld
xor
mov
ja
mov
sbb
imul
xor
repz
retf
xlat
mov
sbb
jge
cdq
loopne
sub
add
jl
add
sbb
xchg
repz
sbb
sahf
aaa
inc
and
(bad)
int3
jbe
adc
pop
(bad)
cmp
fs
jno
lods
cld
xchg
popa
ss
popa
xor
cwde
fmul
and
in
and
in
push
xor
jae
(bad)
loopne
xchg
jle
add
pop
mul
jae
(bad)
push
iret
test
les
loope
lea
add
clc
sbb
je
xchg
xchg
adc
call
into
ret
pop
out
jbe
scas
test
push
out
neg
and
push
jbe
xor
cmp
xchg
push
adc
mov
jb
cwde
and
hlt
xor
loopne
pop
mov
clc
and
sti
lahf
(bad)
jle
jge
xor
push
jmp
inc
push
jns
pop
nop
add
fmul
ret
mov
mov
rcr
out
mov
adc
addr16
les
les
sti
xchg
repz
inc
mov
mov
pop
lds
inc
fmul
dec
ficom
jbe
scas
adc
mov
dec
test
nop
add
sub
mov
pop
jmp
or
shr
push
ds
nop
aam
int3
xor
inc
add
mov
adc
jne
scas
es
lock
shl
adc
dec
push
inc
and
or
ret
shl
push
fimul
adc
ins
pusha
mov
test
add
push
mov
push
inc
jl
loope
ror
out
and
mov
push
pop
mov
mov
mov
daa
call
jecxz
in
sub
sbb
xchg
(bad)
mov
xchg
jle
ja
in
jo
add
dec
fild
fdiv
lods
cmp
lods
xchg
push
aaa
(bad)
in
sbb
adc
stos
xor
mov
add
mov
push
fs
cmp
mov
iret
inc
aad
cdq
jo
cmp
aad
jno
sub
dec
xchg
cs
int3
xlat
shl
add
pop
pop
sub
fisubr
mov
fcmovnb
pop
(bad)
in
mov
movups
xor
adc
push
adc
pop
div
out
retf
lods
mov
xchg
xor
loope
cmp
out
dec
out
sbb
das
loopne
fld
sub
sub
or
fwait
test
mov
rol
outs
fs
add
mov
or
push
enter
(bad)
mov
std
mov
add
xchg
xor
popf
add
aam
mov
mov
rcr
idiv
(bad)
cs
xor
jbe
and
mov
cmp
(bad)
and
adc
repnz
pop
mov
jns
int
mov
sbb
jbe
in
sbb
cld
iret
out
mov
push
fwait
nop
xor
loope
test
mov
sar
repz
sub
shl
push
jbe
icebp
out
ds
gs
jg
cmp
clc
and
sar
lock
lds
out
and
imul
mov
lahf
int
sti
pop
add
fprem1
movs
pop
push
in
lods
sahf
in
js
inc
adc
test
rol
daa
sbb
ins
out
into
mov
arpl
adc
mov
and
push
sbb
rol
mov
or
cs
pop
sub
jmp
sbb
xchg
adc
mov
pop
sbb
test
lahf
mov
mov
cdq
inc
jo
lea
ret
mov
popf
xor
js
push
shl
inc
cmp
xchg
adc
and
fcomp
(bad)
(bad)
addr16
stos
inc
ss
mov
(bad)
shl
jae
call
fwait
out
ins
or
lods
popf
jg
iret
les
dec
jno
pop
mov
hlt
mov
scas
sbb
adc
stc
mov
je
test
jle
idiv
movs
push
in
std
jp
icebp
movs
imul
xor
scas
(bad)
call
fmul
pop
sub
push
iret
retf
mov
push
add
fistp
cmp
outs
pop
jp
sub
and
xlat
mov
and
add
aad
mov
stc
cmp
das
arpl
scas
sbb
stos
in
frstor
sub
loope
aam
inc
aas
and
movs
sti
icebp
mov
push
sub
push
dec
jae
lods
out
call
inc
iret
mov
cmc
inc
stc
test
(bad)
mov
xor
pusha
out
push
adc
ror
movs
dec
push
ins
pop
xor
dec
xor
pusha
sub
inc
pop
test
sti
sbb
lock
cwde
xor
or
sub
std
push
jbe
int3
fwait
in
xchg
mov
scas
pop
mov
fisub
pop
lods
sbb
adc
out
add
add
retf
xor
call
xor
push
pushf
and
stos
push
fldenv
sti
fidivr
loop
call
cld
inc
imul
xor
cld
inc
(bad)
cwde
inc
mul
pop
mov
test
jle
mov
je
ss
sahf
test
repz
(bad)
popf
(bad)
shr
retf
ret
sub
ror
pushf
sub
pusha
outs
xor
fbstp
leave
xor
inc
das
xor
dec
mov
or
in
fcom
adc
in
mov
call
call
cmc
mov
or
sbb
xor
aam
cmp
test
stos
retf
les
in
sbb
idiv
xchg
pop
(bad)
cmp
cmc
icebp
mov
jne
fisub
jb
sub
add
xor
retf
ds
out
or
(bad)
outs
and
jg
add
mov
pcmpeqb
lock
cwde
xchg
pop
fs
xor
jno
xchg
push
sti
pushf
dec
bound
xlat
out
mov
jns
mov
icebp
pop
cwde
fs
inc
cmp
cmp
inc
add
sub
in
movs
dec
inc
out
dec
sub
sbb
push
aad
jae
lods
jns
xor
out
stos
ret
mov
push
adc
movs
cmp
jmp
call
ins
movs
fsub
pop
mov
fnstcw
rsqrtps
test
dec
inc
jmp
dec
cmps
mov
aaa
stc
iret
clc
stos
and
pop
lea
pop
lods
dec
daa
cli
mov
push
popa
popf
pop
push
adc
and
adc
sub
daa
lods
jmp
push
mov
icebp
xor
int
jg
inc
lods
jmp
inc
inc
adc
and
fidiv
jae
mov
mov
mov
pop
mov
mov
mov
pop
add
dec
xchg
lock
adc
sahf
mov
adc
cmp
out
sub
xchg
push
adc
(bad)
inc
mov
adc
ror
lock
in
mov
nop
push
imul
mov
lods
push
les
mov
adc
scas
sub
inc
sahf
jmp
stos
add
stos
mov
mov
repz
lock
inc
aaa
or
(bad)
adc
mov
xor
retf
cmp
shl
dec
in
cmp
inc
mov
lods
dec
in
fisubr
inc
ficomp
movs
ror
es
push
push
cld
dec
sub
adc
mov
xor
sub
std
and
pop
pop
jmp
push
mov
xchg
ror
mov
neg
or
add
(bad)
fucom
sar
out
das
fidiv
ret
xchg
sub
sub
dec
mov
inc
enter
in
cmp
mov
imul
pop
push
jbe
shl
nop
jmp
ret
jno
xor
xor
popa
mov
and
sbb
daa
retf
jb
mov
(bad)
mov
jle
jbe
lahf
cmp
push
sbb
call
mov
mov
ins
ret
int
xor
icebp
add
lods
call
outs
dec
pop
loop
mov
(bad)
aam
sub
and
andnps
ficomp
fsubr
xchg
push
sbb
mov
jl
ficomp
retf
inc
xchg
dec
dec
ja
ins
(bad)
(bad)
int3
pop
pushf
jecxz
scas
or
leave
in
and
pop
inc
int
test
btc
pop
push
xchg
push
mov
loopne
mov
or
gs
add
enter
push
xor
fst
jbe
sti
or
push
repz
gs
xor
ins
cld
lahf
sub
sub
jno
rcr
out
or
push
push
stos
lods
sub
neg
adc
inc
xor
inc
in
ins
and
or
ret
xlat
int
dec
xor
lods
push
cmps
icebp
test
cmp
cli
sbb
sbb
ror
jnp
je
or
or
gs
push
sub
inc
pop
stc
jns
outs
outs
cdq
aaa
mov
lahf
cdq
add
cmp
fadd
xchg
or
mov
mov
xchg
and
jne
movs
push
pop
and
(bad)
adc
cmps
sbb
in
xchg
sub
repnz
pushf
in
push
pop
jmp
pop
add
aas
pop
data16
cmp
push
(bad)
in
lahf
dec
(bad)
fmul
cs
test
mov
ins
pushf
adc
sahf
lahf
ds
xchg
aam
repnz
int3
push
(bad)
ds
push
js
adc
sub
and
mov
jg
and
add
jmp
dec
jmp
mov
add
dec
fild
and
pop
add
xor
add
in
out
es
leave
test
(bad)
sub
inc
std
lahf
popf
mov
push
popa
jecxz
push
ret
cwde
xor
push
and
and
push
lea
outs
and
and
inc
or
bound
out
ficomp
enter
mov
push
repnz
fcomp
ja
test
or
mov
int
xchg
stos
dec
pop
sub
(bad)
jnp
repnz
inc
jns
cmc
fcom
xor
xchg
aas
stc
pop
xor
je
ffree
xchg
(bad)
retf
xchg
test
es
mov
xor
call
retf
ret
bound
mov
cmp
jns
and
sub
push
add
mov
je
mov
pop
dec
push
adc
jg
test
jg
push
jge
mov
xor
push
jg
xor
aas
cmp
ja
sub
jmp
ss
inc
loop
fmul
repnz
stos
push
mov
iret
cmp
ins
sbb
adc
or
mov
mov
push
push
jge
adc
jecxz
mov
inc
or
lods
and
stos
icebp
clc
fimul
repz
les
add
es
cwde
pop
xchg
loopne
sub
retf
(bad)
hlt
ret
fisttp
lods
fdivr
bound
pop
fcom
mov
cmp
push
adc
cmp
pusha
popa
push
mov
scas
add
jae
fadd
push
fsub
push
cdq
shl
or
loop
and
mov
mov
add
dec
sub
pop
push
push
test
add
sbb
and
jo
call
sub
jmp
call
popa
jnp
pop
std
and
push
fucom
pop
mov
push
lods
in
pop
icebp
sub
loope
and
call
inc
push
sbb
and
ss
push
mov
int
in
lea
fwait
mov
daa
cs
mov
(bad)
test
js
repz
popf
test
mov
mov
fistp
shr
fadd
sub
in
lds
mov
rcl
es
aam
xchg
in
jns
mov
or
je
stos
fcomp
dec
cmp
pop
sub
or
out
rcr
inc
xchg
mov
test
mov
inc
dec
add
iretw
ret
fimul
xor
ins
mov
push
sahf
push
add
cli
jno
fld
cdq
inc
dec
sbb
iret
push
mov
test
in
mov
mov
neg
repnz
js
ja
iret
lock
adc
gs
cmp
mov
shl
in
imul
pop
dec
mov
dec
xchg
inc
shl
scas
add
inc
lock
cld
add
jne
jmp
mov
stc
xor
sbb
arpl
js
jne
lods
adc
addr16
mov
inc
aaa
jmp
call
in
or
shl
ins
pop
fstp
mov
sahf
jns
sub
xchg
fild
in
jg
sub
jp
dec
shr
adc
loopne
test
icebp
sbb
stos
add
aaa
repz
mov
sti
sub
(bad)
xchg
xor
cmp
clc
pop
push
and
in
cli
cmp
and
mov
cmp
in
or
nop
or
push
mov
in
retf
imul
jo
test
sub
jb
ds
mov
push
js
les
add
bnd
test
gs
out
dec
dec
xor
nop
cmp
xchg
lods
aaa
cli
rcr
and
and
mov
xchg
mov
cmps
ror
fmul
or
jg
fild
mov
outs
(bad)
mov
inc
pop
xor
or
xchg
mov
in
adc
add
mov
movs
cwde
add
movs
jmp
cwde
push
sub
aam
ins
add
stos
pushf
out
mov
jb
push
xchg
stc
adc
outs
xchg
lds
repz
imul
pop
je
mov
ret
pop
cli
adc
mov
test
dec
cmp
mov
ins
(bad)
repnz
lods
dec
in
in
clc
push
call
fwait
xchg
fxch
dec
int3
(bad)
pusha
(bad)
mov
cmp
or
and
daa
push
adc
jmp
pushf
in
out
imul
addr16
add
and
(bad)
sbb
fist
scas
sbb
mov
rcl
je
or
mov
shl
jbe
loopne
inc
cdq
imul
movs
sub
mov
shr
push
xor
push
jmp
xor
int
rcr
jg
loopne
adc
or
sub
xchg
test
inc
pop
sbb
lods
loopne
in
xchg
mov
jg
(bad)
pop
mov
pop
popa
movs
mov
test
rol
scas
mov
fnstcw
stos
lea
pop
mov
add
loop
mov
dec
and
mov
sub
cmp
mov
in
ins
sbb
mov
dec
jmp
mov
cld
mov
sar
lods
lock
outs
int
inc
jl
test
ret
cmp
repnz
leave
xchg
mov
mov
fnstcw
inc
xchg
mov
pop
(bad)
sub
sbb
(bad)
push
jne
ins
rcr
clc
sub
iret
sub
stos
cld
popf
mul
loop
nop
xchg
dec
icebp
out
push
sbb
mov
ret
xor
dec
in
mov
xor
add
je
loopne
and
outs
adc
scas
iret
cmps
ficomp
sbb
test
inc
stos
fwait
adc
push
movs
sbb
cli
adc
lahf
int
stos
repnz
dec
cmp
xor
in
pusha
arpl
jl
and
inc
test
add
test
and
fldcw
mov
aad
mov
mov
pusha
das
adc
das
aas
xchg
xlat
push
sub
test
and
mov
add
xlat
fmul
jg
jg
int
sub
xchg
xchg
retf
test
outs
in
aaa
into
retf
push
loopne
ret
jb
loope
(bad)
inc
lods
and
cmc
pusha
cmps
xchg
mov
or
mov
cmp
sub
(bad)
adc
and
mov
push
pop
mov
xor
outs
in
call
mov
cmp
pop
ins
mov
cwde
inc
and
pop
int
inc
sti
pop
push
jnp
add
jmp
gs
mov
xor
(bad)
fucomip
test
inc
and
rcl
mov
sbb
ins
(bad)
fstp
push
mov
sub
and
dec
adc
idiv
out
(bad)
ficom
push
out
xor
or
cwde
inc
sbb
(bad)
fcmovne
xchg
mov
outs
jge
pop
jnp
cmps
push
rol
mov
push
pushw
mov
out
add
or
int
jle
dec
ins
leave
cwde
pop
test
out
jae
xchg
ret
ds
jae
neg
out
xchg
adc
mov
lds
repz
shl
pusha
inc
out
push
pop
pop
or
xchg
fisubr
dec
imul
movs
push
add
jae
repnz
rcl
or
mov
sbb
gs
outs
sub
pushf
inc
popa
dec
cmps
cli
inc
inc
test
inc
popf
push
sub
movs
cld
(bad)
push
push
xchg
xchg
loopne
rcl
and
fdiv
fcmovu
mov
(bad)
jb
mov
test
jne
cmps
pop
outs
lds
(bad)
push
and
loop
pop
xchg
mov
and
loope
loop
inc
and
psubd
adc
int3
adc
and
xor
dec
lods
ror
test
jbe
or
xchg
jnp
ins
push
mov
addr16
sbb
adc
cmp
mov
pop
out
fild
pusha
sbb
sbb
pushw
jns
cmp
mov
shr
sub
mov
mov
push
in
rcr
mov
movs
or
inc
(bad)
and
or
fild
and
ss
cmp
out
lods
mov
push
icebp
push
cmp
popa
push
pop
bound
adc
sahf
inc
add
(bad)
outs
ins
inc
add
and
push
dec
sar
xor
jle
xchg
rcl
push
xor
jp
xchg
inc
push
or
movs
mov
stos
cld
mov
call
and
or
rcr
pop
cmps
xor
jle
js
js
pop
add
inc
daa
xchg
sbb
mov
mov
ret
and
mov
inc
pop
xor
add
jmp
sbb
jno
xchg
add
pusha
sbb
adc
xor
cld
mov
and
dec
inc
rcr
movlps
push
frstpm(287
jl
es
je
inc
sub
mov
cmps
loop
inc
dec
in
xchg
aam
mov
(bad)
xor
or
xchg
push
nop
dec
adc
ins
mov
lods
lods
mov
loop
xor
ins
inc
call
xchg
fwait
pushf
jnp
js
cmp
inc
xchg
mov
(bad)
pop
daa
in
pop
jge
sti
pop
push
repnz
sti
xchg
pushf
mov
dec
pop
das
xor
jbe
xor
(bad)
repnz
push
inc
sub
inc
or
xor
dec
retf
xor
test
test
mov
(bad)
mov
iret
mov
dec
and
aaa
pop
add
addr16
loopne
jmp
inc
arpl
mov
imul
imul
rcr
mov
sbb
pop
lahf
mov
cmp
sub
scas
jmp
and
xchg
stos
xchg
cwde
dec
xchg
and
jecxz
dec
inc
call
mov
jl
adc
add
push
jle
je
ds
mov
cld
and
add
xor
inc
xchg
cmp
push
es
ret
mov
or
stos
mov
js
jb
ja
inc
scas
xor
dec
das
pop
in
sti
add
test
xor
adc
pop
jnp
jge
fprem1
mov
sbb
out
setl
idiv
ret
leave
mov
sub
and
add
movs
icebp
sub
or
scas
fxch
arpl
sub
pop
sbb
jns
fs
in
add
pop
test
sbb
addps
in
jmp
xchg
sti
cmps
or
pusha
push
push
adc
dec
sub
repnz
loopne
ficom
int
mov
sbb
push
sbb
sbb
sbb
or
push
sar
inc
add
cld
inc
stc
inc
jge
cmps
jne
cmp
lahf
rol
cmp
ror
jmp
aad
cmc
shr
rcr
inc
push
push
jns
jne
sub
mov
stos
das
cli
and
pop
and
add
dec
in
cmp
xchg
cld
pop
jmp
cmp
jecxz
dec
imul
(bad)
shl
inc
stc
adc
mov
push
push
and
fbstp
mov
jnp
inc
retf
rcl
or
push
pop
repz
fwait
imul
add
mov
jne
mov
adc
add
cdq
cli
xchg
(bad)
pusha
fwait
jge
mov
mov
imul
test
inc
fsub
jp
mov
enter
loop
mov
push
int3
mov
cmps
mov
push
add
sbb
sbb
pop
mov
cmp
xchg
lods
sub
cmps
bound
ror
or
dec
loopne
outs
mov
leave
test
fmul
(bad)
mov
rol
mov
cmp
dec
sti
clc
push
addr16
mov
in
in
and
push
rcl
lfs
adc
ins
xlat
aas
jecxz
add
cld
and
jle
fild
aam
aas
int3
sub
mov
outs
or
les
dec
inc
sbb
test
inc
sub
cwde
ror
add
adc
mov
lods
outs
push
repz
and
xor
aam
xchg
and
or
(bad)
dec
rol
xor
sbb
sar
jb
in
sub
add
pop
popf
ins
and
cdq
sbb
push
add
adc
mov
pop
rcr
cmp
(bad)
sbb
inc
mov
sub
mov
pusha
fucom
and
inc
out
shl
sbb
lea
pop
scas
xor
ja
cmp
loopne
mov
fdiv
mov
into
fidivr
outs
jb
ja
pop
loop
or
out
inc
sub
mov
pushf
mov
fst
cld
bswap
ins
pop
push
or
add
inc
lods
lods
adc
or
inc
sub
push
lahf
iret
repnz
xor
popa
inc
popa
loopne
add
sub
ins
sbb
iret
mov
hlt
sub
js
inc
xor
inc
les
repnz
daa
ins
sub
fild
jmp
sub
je
(bad)
out
inc
test
sub
movs
aad
mov
sbb
add
push
push
push
loope
outs
sbb
ret
xor
mov
xchg
lods
imul
and
hlt
mov
cmp
not
mov
lods
aas
mul
daa
cmps
and
ret
pop
jo
inc
sub
pusha
out
les
inc
push
out
jne
mov
shl
out
pop
pop
dec
cs
dec
jae
mov
out
push
lock
or
call
fcom
cmp
mov
jmp
jg
and
leave
pop
add
stos
rcl
mov
scas
call
or
push
jbe
ror
xor
jmp
or
jne
push
clc
scas
pop
mov
cmp
mov
add
dec
lahf
xchg
cmp
rol
dec
and
mov
mov
jbe
call
outs
hlt
(bad)
jecxz
fist
hlt
push
xor
dec
xchg
mov
in
dec
xor
adc
pop
aam
cwde
ins
popa
leave
or
scas
and
adc
xor
movs
pop
(bad)
mov
jge
aam
xor
push
mov
fucom
dec
adc
test
mov
fdiv
ficom
mov
xchg
dec
xchg
loop
sub
xchg
(bad)
fcomp
fisubr
and
std
xchg
inc
cmp
popa
test
les
repz
mov
adc
sbb
hlt
iret
adc
nop
stos
mov
nop
mov
shl
pop
xchg
pop
xor
aas
mov
lods
(bad)
dec
push
mov
iret
loope
fs
loope
out
sub
cmc
pop
(bad)
stc
cwde
pop
sub
fdiv
xor
pop
loop
pop
in
fild
ret
sbb
loop
aaa
stos
(bad)
jmp
mov
cmp
adc
test
cmp
cli
clc
in
pushf
adc
jno
fbstp
in
daa
into
mov
les
or
add
in
jge
jmp
nop
jg
cmps
push
scas
les
mov
dec
add
int
ins
pop
xor
push
cmp
test
call
lds
cmp
test
cli
jne
and
repnz
scas
repnz
mov
das
int3
fsubr
je
shl
push
and
or
out
into
inc
or
mov
test
in
mov
push
or
(bad)
sub
sbb
add
dec
in
out
add
mov
aam
sub
push
retf
dec
aaa
jmp
sub
aad
(bad)
pop
frndint
shr
sub
loopne
mov
scas
mov
pop
mov
mov
shr
leave
outs
push
or
inc
mov
and
sub
std
jp
ret
adc
int3
sub
lods
mov
push
ret
or
hlt
pop
out
mov
shl
xchg
fiadd
mov
xchg
xor
repz
mov
mov
pop
mov
popf
jge
xchg
shr
mov
jmp
pop
bound
sbb
cmc
pop
xchg
enter
push
mov
pop
push
mov
ins
loop
sub
out
loopne
scas
mov
mov
movs
cmp
(bad)
sub
xor
std
fwait
aad
mov
adc
nop
loope
sbb
(bad)
mov
jnp
call
int3
ins
mov
jnp
je
adc
xor
fisubr
pop
arpl
enter
loope
popf
fs
jecxz
push
mov
leave
cmp
(bad)
jnp
xchg
dec
and
mov
ret
stos
sub
ret
stc
mov
loope
push
xchg
mov
mov
adc
pop
add
push
add
xor
retf
mov
outs
mov
mov
test
or
scas
dec
jecxz
pop
outs
cwde
int
arpl
sub
jl
jae
mov
xchg
xchg
mov
sub
mov
jp
test
pop
icebp
arpl
cs
adc
call
mov
push
and
hlt
mov
dec
shr
cmp
std
sbb
or
xor
es
add
cs
data16
test
adc
sbb
mov
aaa
xor
mov
pop
rol
cmp
push
add
stc
dec
fs
xchg
movups
cmp
div
push
push
adc
adc
pop
call
and
mov
mov
outs
xor
lods
(bad)
jno
inc
and
loope
rol
sar
addr16
mov
idiv
in
mov
sub
fdiv
lods
jl
aas
dec
and
or
xchg
and
mov
add
dec
jnp
and
pop
repnz
dec
repz
jp
or
jnp
dec
mov
push
call
jnp
ins
call
mov
mov
(bad)
(bad)
mov
and
lea
mov
scas
std
adc
fs
mov
mov
mov
jmp
(bad)
loopne
mov
dec
add
pop
sti
dec
xor
pushf
push
aad
mov
cld
mov
sbb
adc
mov
seta
fdiv
xchg
clc
add
mov
test
xchg
rcl
jbe
and
cmp
pop
jbe
fild
js
fdivr
adc
stos
and
lods
repnz
push
pop
jge
and
out
adc
jg
retf
mov
or
mov
(bad)
sahf
push
cmp
inc
in
dec
addr16
ds
jb
mov
jp
dec
xchg
push
das
jno
je
aas
pop
(bad)
(bad)
xchg
mov
push
loope
sbb
clc
setle
xor
cmp
data16
jno
add
ss
mov
sti
stos
cmps
xchg
ror
sub
icebp
movs
aas
sar
cs
stos
pop
sbb
std
int
out
add
sub
mov
xchg
dec
dec
fs
lahf
push
por
cwde
ins
lahf
arpl
outs
jnp
jo
loope
adc
(bad)
into
jecxz
fcomip
ds
pop
jne
push
and
retf
rol
(bad)
pop
fstp
bound
push
cmp
stos
out
iret
mov
sahf
or
pop
ja
adc
test
imul
jbe
jmp
shl
and
mov
ja
xchg
popf
add
pusha
cmp
clc
add
js
push
xchg
hlt
sub
pop
xor
pushf
rol
add
lods
das
cwde
retf
sbb
ds
movs
mov
or
mov
jp
pop
clc
stos
or
and
retf
int3
xchg
test
dec
cmp
retf
xor
fidiv
pop
xchg
sub
rcr
test
inc
dec
jno
int3
xlat
ficomp
fisub
push
(bad)
mov
out
outs
fiadd
mov
loopne
and
pop
xchg
call
ds
imul
add
std
mov
scas
and
and
sub
mov
(bad)
inc
ins
jno
adc
cmp
cmp
inc
fnsave
pusha
movq
bound
xor
lock
repnz
retf
aas
push
je
leave
popa
xlat
sbb
movs
xor
xor
aaa
dec
rcl
jae
enter
jl
outs
mov
push
arpl
pop
pop
iret
add
xchg
scas
and
neg
cli
retf
les
push
cmc
xor
call
popa
adc
xchg
ja
repnz
push
ja
ds
sbb
movs
jns
imul
mov
adc
inc
inc
jne
in
(bad)
cmp
sub
dec
call
aad
stos
push
pop
test
mov
mov
cdq
xor
repnz
shr
mov
cs
into
push
jne
cmp
(bad)
push
ret
dec
xchg
repz
jnp
(bad)
or
mov
add
mov
sbb
icebp
mov
jnp
mov
ins
into
pop
out
inc
sbb
mov
mov
jne
fsub
leave
pushaw
jne
sub
xor
aas
fidivr
and
jb
sbb
sub
out
(bad)
fbld
ins
jg
push
sbb
sbb
leave
sbb
lods
les
ret
(bad)
jl
cmc
int3
adc
xchg
ins
pop
mov
sbb
rcr
adc
or
scas
retf
in
sbb
add
ret
in
mov
ins
out
jle
pop
inc
dec
adc
and
add
cmc
mov
mov
jb
pop
mov
jg
mov
stos
xchg
jnp
push
setge
inc
pop
pop
xchg
xor
xchg
ret
imul
in
daa
enter
ss
adc
jp
add
sub
mov
(bad)
xor
imul
mov
xor
das
fwait
jmp
iret
xor
fwait
cmc
stc
cmp
lock
(bad)
mov
xor
or
dec
test
dec
lea
(bad)
mov
adc
or
fidiv
mov
loope
xchg
out
fistp
aam
pop
inc
or
inc
(bad)
(bad)
(bad)
and
jmp
clc
pop
fdivr
stos
add
xchg
jmp
(bad)
(bad)
jo
jnp
add
adc
adc
adc
xor
push
mov
xchg
push
imul
enter
data16
inc
cmp
test
out
inc
xor
adc
or
cs
pminsw
push
or
pop
add
enter
pop
cmc
dec
add
fist
int3
jns
mov
gs
ror
mov
aaa
adc
jge
outs
mov
add
xor
movs
xor
stc
outs
lock
push
sub
and
dec
push
sar
loope
inc
out
inc
jne
inc
lea
test
and
inc
ins
aad
inc
pop
ret
xor
daa
xchg
stos
jo
out
mov
sub
out
in
dec
xchg
inc
lods
add
jne
rol
xchg
cmp
xor
(bad)
cmps
add
or
movs
push
fld
push
pop
out
mov
aad
jge
or
in
add
push
xor
loopne
pop
jle
adc
mov
mov
mov
lea
div
sbb
and
push
jae
dec
sub
ss
jg
mov
stos
add
dec
xchg
mul
xchg
scas
jge
sahf
int
and
dec
sbb
or
xchg
inc
cmc
iret
mov
or
pop
stos
daa
in
fisub
cwde
mov
xchg
pop
(bad)
loope
test
repnz
imul
jl
stos
iret
dec
(bad)
xlat
les
jno
(bad)
cmps
retf
cwde
fcom
sbb
pushf
mov
dec
push
push
bound
movs
jb
inc
scas
fdiv
dec
adc
es
sub
mov
xchg
stos
sbb
cmp
lods
pop
dec
mov
outs
das
push
or
rcl
push
nop
hlt
frstor
cli
mov
push
loope
or
mov
adc
fstp
cli
lods
jg
xchg
lods
cmp
and
stos
stos
repz
es
push
xchg
xor
xlat
(bad)
arpl
clc
repnz
cmp
fbstp
inc
fdiv
inc
outs
fiadd
xchg
aam
ret
repz
pop
add
sbb
je
pop
sub
std
fcmove
xor
jns
cli
repnz
daa
jbe
xor
cdq
xchg
std
xlat
xor
mov
std
test
inc
cs
xor
inc
cmp
jg
sti
leave
adc
scas
or
fcom
fidiv
ins
inc
jno
or
jle
mov
(bad)
not
sbb
fst
fmul
in
cmp
cmp
xor
xlat
dec
sub
stos
xchg
hlt
pop
mov
(bad)
sar
xor
mov
sub
loop
lock
jno
sbb
dec
test
and
mov
pop
push
shl
outs
ret
push
sbb
outs
bound
mov
pop
popa
inc
mov
mov
aas
outs
je
inc
ficom
mov
enter
add
shr
ror
cmp
inc
lea
xchg
(bad)
jmp
pop
or
sub
aad
sbb
scas
sbb
xlat
rol
inc
adc
lods
xchg
and
add
xor
ins
(bad)
in
arpl
or
shr
stc
cmps
ror
mov
addr16
mov
rcl
je
cmp
mov
ja
in
mov
repnz
xor
adc
lahf
scas
push
popa
or
jmp
mov
fcomp
dec
loopne
jne
jns
cmc
cwde
inc
xor
pop
mov
push
push
inc
push
cmovge
ins
mov
push
shr
pop
leave
rol
inc
arpl
sar
mov
jmp
rol
push
rcr
jp
dec
icebp
push
adc
jg
or
mov
pushf
and
mov
xchg
xchg
xchg
shl
sub
pop
xchg
push
dec
dec
ror
pop
inc
frstor
out
sbb
int3
add
sub
out
and
stc
out
fld
or
imul
ins
outs
push
or
xchg
leave
adc
mov
div
pop
ret
retf
dec
jle
icebp
mov
jmp
nop
div
push
push
fwait
push
popa
out
inc
mov
push
jns
js
pop
daa
push
fs
cmp
(bad)
out
sub
inc
imul
bound
xchg
jmp
je
jmp
aas
pusha
ficom
pushf
mov
sub
int3
jmp
push
enter
aad
adc
scas
jmp
inc
faddp
xchg
inc
inc
jle
out
jnp
sbb
fnstsw
fcmovb
push
xchg
xchg
pop
push
rcr
cmp
or
cmc
and
xchg
push
dec
cld
mov
pop
cmp
or
mov
hlt
int
mov
loope
(bad)
pop
xchg
addr16
cdq
enter
fwait
das
cmps
iret
sub
nop
jo
dec
pop
sub
push
int
scas
stc
pop
jbe
ret
in
xchg
(bad)
pusha
jp
add
mov
push
fdiv
hlt
dec
call
stos
enter
mov
sbb
cmp
dec
dec
push
out
iret
stc
aad
mov
pop
add
pushf
test
cmovno
jp
sbb
inc
idiv
mov
push
sub
jg
xchg
mov
ds
rcr
add
mov
mov
out
out
sbb
loopne
sti
mov
xchg
test
int
call
call
ins
push
pop
xor
repnz
addr16
sbb
aas
out
sub
pusha
mov
loopne
(bad)
add
cmp
sbb
or
push
pop
sub
out
sub
ins
mov
test
frstor
(bad)
gs
out
mov
je
out
push
cld
dec
sub
mov
test
gs
and
push
mov
rol
pop
and
lods
mov
sub
and
mov
aas
mov
xor
mov
jae
(bad)
dec
scas
fs
adc
xor
dec
sub
or
cmp
pop
gs
mov
dec
xor
or
mov
push
frstor
adc
popa
(bad)
repnz
aam
cmp
xchg
add
scas
jmp
fdiv
aaa
jge
inc
loopne
add
mov
mov
mov
sub
add
inc
adc
mov
push
push
jae
daa
or
add
xchg
dec
sti
dec
inc
repnz
neg
shl
push
lods
cmps
mov
mov
test
inc
jae
adc
(bad)
sbb
adc
mov
mov
pop
cmc
adc
or
mov
jns
jp
jae
lds
inc
mov
lea
adc
popf
inc
push
jle
out
ins
adc
dec
jne
mov
int3
cwde
movs
xor
(bad)
sbb
mov
add
int
mov
repnz
jmp
adc
pop
and
movs
jmp
ja
sahf
movs
dec
push
or
(bad)
jmp
repz
sar
adc
out
dec
cmc
cmps
adc
test
daa
dec
mov
icebp
retf
sbb
hlt
cmps
in
xor
test
jmp
sti
push
xlat
add
mov
sub
retf
mov
xchg
cmp
push
sub
sbb
cmp
xchg
nop
stos
sbb
mov
ins
lock
ja
fnstsw
mov
mov
std
pop
or
and
ret
scas
mov
and
adc
ins
xlat
fld
sbb
jp
push
push
data16
ret
push
mov
pusha
cmps
fist
inc
or
mov
(bad)
push
ret
xchg
enter
lods
sub
jno
imul
mov
push
(bad)
sub
je
mov
add
outs
outs
adc
xor
sbb
mov
sub
jno
cmp
inc
in
cmp
iret
dec
lea
and
dec
dec
div
dec
lods
jmp
lea
rol
cmp
dec
pop
daa
das
jge
cdq
xlat
fisttp
cmps
shr
mov
fsubr
stos
cmp
jmp
dec
cmps
js
(bad)
in
dec
(bad)
stos
repz
pop
(bad)
shl
or
adc
xor
xor
jae
stc
sbb
leave
(bad)
dec
xor
adc
adc
jbe
pop
pop
jae
jae
pop
(bad)
ds
cmps
aaa
pop
loop
mov
cmp
push
xlat
daa
push
clc
xor
cmps
clc
sbb
xor
or
out
std
fbld
xor
adc
in
adc
fwait
loopne
push
mov
xor
xchg
pop
js
leave
cli
shl
xchg
adc
clc
sbb
sub
hlt
repz
dec
sbb
div
inc
fstp
sti
clc
xchg
imul
ins
adc
mov
test
inc
mov
sbb
call
fdivr
mov
sar
cdq
repz
jae
sbb
push
and
fldenv
dec
mov
into
sub
mov
push
add
adc
and
pushf
xchg
adc
lods
cmps
adc
div
aad
pop
cmp
(bad)
jl
call
jns
pop
mov
ror
(bad)
cs
out
mov
lea
jbe
ds
pop
push
xchg
cmp
mov
jne
ds
in
sub
push
mov
xor
movs
fsubr
sbb
jnp
gs
arpl
fnsave
xchg
push
inc
aam
inc
test
int3
test
push
(bad)
mov
enter
pop
mov
and
add
cmp
test
arpl
jmp
cmp
jp
jp
cmp
pop
in
add
iret
outs
test
xlat
sbb
jp
std
nop
cmp
mov
dec
push
xchg
sub
cli
pop
iret
fstp
mov
sub
and
in
cli
jae
je
xlat
sub
or
adc
fsubr
pushf
ins
test
in
repz
out
fs
push
(bad)
movs
xchg
pop
xchg
xor
xor
pop
fwait
push
pushf
cwde
sbb
xor
pushf
(bad)
jg
dec
push
test
xor
pop
in
pop
fwait
and
xor
shl
enter
call
ins
loop
cli
lods
pusha
ins
and
pop
jnp
outs
into
and
aas
fsubr
ds
fdivrp
movs
(bad)
adc
test
inc
lods
mov
ss
adc
(bad)
mov
sub
pop
ds
mov
push
movs
or
and
mov
sbb
cld
(bad)
loop
dec
cdq
mov
add
push
pop
xor
js
and
mov
aad
sub
jl
dec
dec
sbb
push
jmp
mov
pop
mov
push
fsub
pop
xor
int3
inc
pop
sub
mov
sbb
xchg
repnz
mov
sbb
adc
mov
shl
jb
xchg
and
inc
out
sub
mov
nop
add
jp
ret
xchg
cmc
dec
cs
ficom
iret
add
cmp
add
not
push
je
push
test
adc
pop
test
imul
rol
sub
xchg
jo
inc
mov
mov
mov
pop
arpl
fwait
and
push
or
pusha
jge
mov
daa
popf
lea
cs
jo
dec
pusha
push
out
xchg
sub
mov
sub
iret
xor
and
sbb
pop
cmp
inc
add
scas
pop
add
jle
mov
outs
js
ds
adc
(bad)
imul
sbb
in
aad
cmp
cmp
xor
repz
pop
dec
into
loopne
mov
pop
sahf
cmp
clc
aad
rcr
jnp
add
jnp
mov
bound
scas
push
je
jo
movs
jno
jp
jmp
push
test
add
or
push
and
retf
aaa
adc
clc
loope
gs
mov
add
or
push
adc
xchg
push
les
cmps
out
pop
push
icebp
sub
xlat
jnp
jb
fild
les
ins
sub
jmp
dec
cmc
jmp
(bad)
mov
add
out
cmp
ins
sbb
mov
imul
cmp
cmp
inc
jg
gs
bound
mov
loope
cmps
xchg
lahf
std
sbb
cmp
adc
xchg
out
cmps
popf
adc
or
push
out
les
in
mov
dec
mov
dec
int
in
push
call
test
data16
rcr
push
in
inc
sub
cmp
loope
lea
inc
push
jns
shr
(bad)
mov
in
call
adc
xchg
mov
data16
test
and
mov
adc
mov
daa
mov
(bad)
sub
in
fucom
arpl
movs
shr
pop
sub
and
test
sbb
(bad)
in
inc
mov
push
sbb
mov
fsub
scas
cli
int
or
dec
(bad)
cld
pop
cmp
or
jg
arpl
inc
scas
outs
pop
mov
jp
push
rcl
and
fld
ja
pop
pop
jp
or
(bad)
shl
(bad)
sbb
xor
in
sbb
sub
loop
xor
or
je
inc
and
std
jp
mov
scas
push
jno
stos
dec
out
std
aam
cmp
jge
sahf
adc
movs
cmp
sub
inc
rcl
dec
ss
rcl
jns
sar
pop
mov
mov
ins
aas
outs
mov
call
clc
push
push
stos
and
xchg
in
je
stc
add
xchg
cdq
stos
pop
jnp
add
and
ret
sbb
mov
int
mov
sub
jo
call
mov
mov
sahf
(bad)
(bad)
retf
bound
jne
pop
lods
aad
and
dec
mov
cld
push
xchg
repnz
repnz
pop
sbb
outs
xor
int
xchg
xor
(bad)
jmp
dec
imul
push
push
xor
or
push
push
test
adc
cmp
je
jmp
cmp
sbb
gs
jno
in
add
cld
test
out
rcr
push
push
into
out
jg
push
data16
mov
mov
jecxz
sub
imul
lods
repz
call
outs
xor
sub
daa
or
sahf
push
push
or
cwde
(bad)
dec
sti
xchg
clc
cmp
mov
push
sbb
sub
stos
and
mov
loopne
test
push
pushf
loop
push
mov
dec
and
shl
and
cmp
push
cmp
mov
pop
pop
cmp
shl
or
lds
in
sub
sbb
es
retf
in
ret
inc
call
add
xor
fiadd
adc
sbb
xor
movs
xlat
mov
inc
sub
loope
test
fnstenv
retf
test
sub
nop
adc
in
mov
xchg
mov
outs
mov
test
outs
dec
dec
outs
xchg
adc
repnz
jb
pop
adc
adc
test
mov
shr
int
mov
imul
jno
sbb
pop
call
and
push
clc
mov
sub
out
in
fiadd
stc
aam
popa
das
in
aad
ins
inc
dec
inc
pushf
stos
ror
scas
fst
cmp
jae
loope
mov
mov
jb
lock
add
push
popa
arpl
xor
ins
iret
jbe
and
cmp
aad
ret
xor
cmps
loop
pushf
fistp
gs
gs
scas
shr
cs
bound
lods
inc
xor
push
ins
imul
out
add
adc
xor
out
xor
or
sbb
cmp
fwait
popf
cdq
je
mov
add
add
(bad)
repz
mov
and
stos
out
or
adc
dec
(bad)
inc
movs
pop
shl
ss
std
bound
fld
cli
out
lods
or
add
mov
stc
ja
ins
cmps
or
mov
mov
mov
call
aam
fdiv
sub
aam
mov
not
dec
pop
dec
clc
popf
inc
xchg
jae
lock
pop
inc
cdq
sbb
sbb
adc
sub
or
push
jb
and
sbb
xchg
into
mov
repnz
stos
add
and
pop
sub
movs
scas
mov
lds
es
dec
add
or
(bad)
fnsave
dec
jb
xlat
into
movs
push
push
or
jnp
add
lds
push
arpl
push
repz
add
mov
sub
jmp
nop
mov
das
sbb
das
sahf
shl
pushf
jb
pop
pop
mov
add
and
test
sub
fidiv
or
gs
inc
rcr
dec
movs
pop
test
pop
pop
or
shl
fcmovnbe
jmp
icebp
cmp
adc
mov
sub
gs
or
nop
scas
ret
cmp
lock
or
scas
cmp
pushf
daa
dec
or
cmp
mov
push
jbe
in
mov
or
xor
pusha
clc
aas
push
push
call
xor
mov
in
inc
sti
inc
in
rcl
mov
mov
aam
or
dec
(bad)
mov
cmp
imul
bound
ror
imul
or
xchg
movs
cmc
in
mov
push
jb
push
pop
arpl
(bad)
rcl
xchg
dec
jg
fdiv
(bad)
mul
dec
ficom
test
pushf
ret
cmps
std
outs
sub
movs
popa
or
(bad)
scas
repnz
jl
(bad)
in
in
lock
sub
pop
hlt
(bad)
retf
sub
jno
push
int
dec
push
movs
outs
aam
mov
jmp
repz
psrld
mov
jae
push
repnz
iret
adc
(bad)
sti
pop
pop
push
cmp
xor
push
sub
daa
cmp
fcomp
add
dec
shl
or
in
aam
and
mov
mov
test
jb
mov
repnz
and
push
xchg
cmp
add
sub
mov
imul
movs
dec
(bad)
fisttp
inc
gs
dec
xor
inc
sbb
lods
and
pop
ror
(bad)
int3
ror
cmp
test
sti
aad
js
cmp
and
mov
sub
xor
inc
cld
adc
mov
(bad)
repz
add
cmps
loope
mov
lods
dec
mov
pop
shl
mov
xor
or
stos
inc
mov
adc
out
push
mov
dec
pushf
pop
lods
popf
cli
and
int
inc
ins
xchg
mov
and
lahf
fst
js
iret
out
ret
icebp
and
icebp
adc
mov
fs
fld
adc
ins
dec
rcr
and
and
push
int
mov
stos
mov
test
mov
in
fnstenv
aaa
shl
ds
addr16
xor
and
test
clc
dec
dec
int3
mul
cmp
add
xor
sar
test
dec
aaa
push
and
jg
test
outs
in
test
je
dec
out
push
push
mov
mov
int3
ds
test
and
mov
ins
aas
cdq
mov
xchg
sub
test
movs
lahf
mov
(bad)
inc
push
push
shr
jge
sub
out
ins
inc
inc
mov
cmc
scas
out
push
cmp
sbb
jmp
dec
xchg
xor
dec
ror
je
rcl
sbb
popa
out
dec
lahf
sub
inc
cmp
fstp
fldcw
mov
and
aad
arpl
daa
lods
pminsw
rol
push
fild
xchg
inc
inc
cmp
pop
in
and
mov
mov
loope
adc
add
mov
das
sub
sti
outs
xor
aam
or
adc
jne
mov
das
dec
bsr
xchg
iret
push
inc
addr16
cmps
adc
sbb
jle
stos
daa
cmc
repnz
cmc
pop
popa
pop
imul
jp
cmp
das
mov
imul
aaa
push
sbb
xchg
and
in
adc
in
sub
int
xor
shr
mov
ins
aaa
jmp
clc
add
into
add
ins
or
push
sbb
cs
xchg
sbb
and
cmps
ins
add
aam
dec
lock
jne
call
in
xchg
xor
mov
or
lock
mov
mov
fnstenv
sbb
ja
jle
(bad)
push
js
sub
fsubr
shl
sub
xchg
and
fst
fimul
scas
rcr
jae
dec
cli
in
jl
pop
fidivr
mov
inc
lods
rcr
addr16
pop
iret
mov
pop
pop
(bad)
stc
hlt
adc
mov
xor
push
bound
dec
das
mov
dec
out
stc
push
les
and
imul
hlt
inc
cld
loope
mov
aad
outs
scas
pop
mov
test
ins
push
or
cmc
add
adc
dec
jge
and
out
fst
mov
mov
jmp
mov
jmp
ins
out
xor
push
push
jmp
repnz
jge
jp
pop
xor
cmp
cmp
ja
ds
not
mov
sar
mov
enter
push
sub
pushf
pop
jnp
push
movs
sub
scas
mov
mov
mov
push
mov
dec
jl
inc
popa
xor
sub
mov
push
dec
addr16
(bad)
pusha
int
and
add
mov
lock
dec
popa
or
adc
or
xchg
xchg
aas
in
retf
sbb
mov
and
sbb
mov
lea
cmp
ins
into
into
mov
das
push
xor
out
(bad)
into
scas
test
daa
sahf
sbb
or
les
push
cmp
scas
nop
inc
push
pop
movs
imul
repz
push
pop
in
xchg
adc
and
cmp
pop
pushf
sbb
ins
adc
or
nop
dec
push
push
js
ss
fcomp
push
or
and
xor
jns
inc
inc
mul
retf
and
popa
and
inc
mov
sub
jmp
or
push
mov
ds
(bad)
cli
ja
cld
mov
jns
sbb
pop
ds
es
inc
repnz
retf
or
fiadd
shl
push
addr16
xor
enter
aad
dec
shr
or
pop
inc
inc
and
add
inc
adc
sti
stos
xchg
mov
adc
clc
cmp
cmps
mov
mov
xchg
jecxz
ret
lods
and
mov
(bad)
mov
sbb
shl
enter
cli
in
jmp
add
jmp
pop
lods
scas
loope
inc
mov
mov
mov
(bad)
xchg
loope
pop
add
mov
repnz
ss
mov
add
lods
ror
dec
test
fst
into
in
sahf
xchg
push
adc
sbb
jecxz
sbb
and
nop
xor
popa
jge
jbe
(bad)
pop
(bad)
out
cmp
ret
dec
fcom
xchg
(bad)
xor
inc
xchg
rcl
call
nop
mov
push
clc
(bad)
fild
pop
(bad)
adc
lds
mov
jg
test
jl
popa
shl
mov
or
mov
ins
xchg
jns
cmp
sbb
ins
das
enter
mov
out
add
stos
aaa
loopne
jmp
adc
mov
fisubr
lock
dec
add
xor
inc
xor
and
into
imul
js
popf
iret
mov
pop
shl
ins
xor
pop
mov
mov
xchg
scas
sbb
xlat
or
mov
push
leave
pop
xor
imul
(bad)
add
mov
inc
push
cmps
and
push
sbb
loop
mov
push
mov
push
or
lock
out
adc
(bad)
jmp
fld
cmp
movs
aaa
mov
(bad)
aaa
jg
or
push
fdivr
pop
mov
jno
cwde
push
xor
in
idiv
dec
out
push
(bad)
push
test
inc
xchg
cs
mov
icebp
std
stc
push
out
scas
jl
inc
movs
jns
xor
sub
xchg
call
(bad)
aas
add
cmps
adc
adc
mov
std
xor
scas
xchg
sbb
dec
fistp
mov
idiv
sub
mov
or
js
test
inc
adc
popf
pop
iret
js
inc
mov
(bad)
mov
add
stc
add
push
jno
mov
mov
and
out
retf
pop
sub
or
outs
and
jp
fwait
outs
jnp
inc
jmp
fsubr
rcr
div
jne
xor
std
sar
cld
dec
in
jne
hlt
stos
pop
jle
ss
pop
xchg
bound
sub
cld
cmp
push
sub
adc
(bad)
stc
adc
xchg
adc
mov
sar
pop
adc
mov
lahf
pop
mov
cmp
(bad)
pop
cmps
add
xchg
shr
pusha
test
mov
int3
mov
push
imul
mov
les
lds
jl
adc
ja
fdiv
sbb
in
push
dec
or
fwait
pop
dec
push
aad
push
inc
jb
push
mov
sbb
adc
lods
mov
imul
jb
jb
test
xchg
inc
pop
pop
xor
cmp
outs
es
push
pop
cmc
iret
outs
and
in
adc
fadd
outs
and
in
xchg
retf
jnp
inc
add
jb
mov
(bad)
adc
js
push
mov
adc
mov
repnz
imul
sti
dec
jbe
and
ja
into
mov
ja
pusha
xor
inc
std
retf
in
sub
xor
mov
int3
sbb
inc
out
(bad)
cwde
push
sbb
push
fcom
ins
daa
push
retf
idiv
ins
xor
adc
sar
and
iret
clc
mov
cmp
cld
in
dec
push
sub
xchg
fild
cmp
fidiv
or
pushf
or
ja
out
mov
push
pop
arpl
ins
es
jb
mov
adc
popf
cmp
push
aad
imul
shl
addr16
mov
or
adc
push
pop
mov
jo
add
mov
scas
cmp
clc
mov
sub
lahf
xlat
enter
xchg
cdq
mov
cwde
(bad)
dec
adc
mov
rcl
inc
jmp
add
fsub
dec
ins
loopne
mov
popa
jns
jge
pushf
add
adc
xchg
and
pop
dec
mov
or
push
jae
lds
loope
call
inc
mov
pop
loope
fst
jb
push
pop
addr16
lods
or
pop
sar
shl
icebp
ret
and
mov
fbstp
daa
jb
nop
cmp
mov
mov
cmp
jmp
mov
pop
stc
dec
adc
mov
mov
(bad)
mov
jl
fstp
out
mov
xor
popa
push
or
fcom
pop
cmp
pop
or
fucom
mov
jmp
fs
in
sbb
sti
inc
mov
mov
mov
push
or
dec
and
sub
jae
test
pop
adc
push
loopne
les
(bad)
sub
pop
jno
cdq
dec
mov
push
jge
push
mov
adc
jg
inc
js
hlt
js
sub
loopne
sbb
inc
int3
adc
sti
push
adc
je
dec
pop
add
rsm
or
and
xor
popa
adc
call
mov
add
shr
jg
loope
dec
push
pusha
xor
stos
jl
adc
and
lds
xlat
iret
test
clc
inc
jg
dec
sbb
stos
scas
mov
fcom
xchg
and
adc
mov
loope
inc
stos
call
cs
jle
push
lea
adc
jb
icebp
lea
inc
push
test
icebp
sbb
hlt
xor
push
mov
sar
xchg
clc
cmp
jp
popf
int
ror
pushf
cld
add
hlt
or
dec
cmp
sar
lods
xchg
pop
sbb
xchg
sahf
add
inc
pop
or
arpl
cmps
push
cmp
stos
fs
(bad)
xchg
push
stc
dec
and
pop
sbb
scas
(bad)
pop
xor
inc
or
cmp
xchg
fadd
inc
imul
inc
push
clc
pop
add
push
test
aaa
xchg
or
movs
rcr
int3
mov
lds
inc
fld
inc
fcomp
stos
sar
lea
xor
dec
jmp
push
jecxz
arpl
sbb
stos
sbb
and
push
push
test
stos
(bad)
mov
cmc
retf
jo
jmp
adc
cld
jns
mov
add
jp
repnz
jne
jo
mov
mov
or
iret
in
(bad)
push
mov
push
in
pop
mov
stos
xchg
xor
pushf
shr
lahf
xchg
test
adc
add
(bad)
push
add
xor
xchg
add
mov
outs
test
xlat
and
out
add
test
pop
mov
cs
or
stc
pop
gs
mov
shl
mov
mov
test
jnp
out
xchg
test
ficomp
jno
(bad)
(bad)
or
mov
(bad)
mov
int3
scas
push
mov
dec
jmp
cs
int
add
nop
shr
ja
sar
addr16
ins
dec
inc
cmp
ss
ins
call
test
movs
pop
jecxz
add
hlt
dec
add
in
mov
dec
(bad)
cdq
jge
cmp
sub
jnp
jae
daa
ins
arpl
jae
aas
sbb
(bad)
arpl
and
aam
cmps
jno
test
fdivr
jns
push
inc
pop
ficom
mov
sahf
inc
or
les
ds
dec
(bad)
mov
ins
adc
out
std
dec
jae
pop
sub
out
add
addr16
jns
pop
push
(bad)
lock
leave
jecxz
add
mov
ret
out
fdivr
push
and
stos
stc
or
lock
lock
adc
or
retf
push
sub
dec
cmc
and
fwait
and
xor
int3
or
add
cs
(bad)
out
test
push
dec
inc
fwait
in
and
or
jbe
int3
iret
jns
and
cmps
pop
les
xchg
rol
mov
aam
sbb
push
push
inc
adc
mov
xchg
mov
pop
fisub
(bad)
jns
push
add
jns
push
es
icebp
adc
mov
int3
fldcw
pop
xchg
dec
mov
add
sahf
jbe
xor
and
outs
jae
and
sbb
and
aaa
lods
popa
pushf
test
in
inc
arpl
add
loop
xor
sbb
mov
xchg
aas
inc
hlt
sbb
adc
dec
xchg
into
add
and
fcomi
fs
scas
dec
(bad)
pushf
dec
dec
div
mov
add
out
mov
mov
out
je
iret
dec
jno
pop
in
into
xchg
add
or
or
scas
xlat
jbe
ret
das
je
and
daa
sub
add
sar
test
imul
cld
cmp
push
push
fwait
xchg
(bad)
lea
mov
xor
xchg
call
lea
xlat
fwait
sbb
fdivr
rcr
fist
sub
pop
cmc
push
int3
sahf
push
mov
mov
push
fst
sbb
inc
loope
pop
mov
mov
fimul
vphsubbw
mov
push
in
and
ret
push
adc
sti
or
aad
and
(bad)
je
jmp
push
mov
aaa
outs
retf
mov
sahf
retf
mov
pop
inc
xchg
jno
retf
adc
mov
icebp
dec
mov
imul
adc
fisubr
mov
sub
and
push
push
fcom
mov
push
adc
sub
jnp
lock
jecxz
std
pop
adc
repz
and
jge
jo
sub
std
jmp
pop
cdq
outs
push
or
and
push
mov
push
retf
cwde
jmp
outs
or
cmp
lahf
dec
xchg
clc
inc
mov
mov
adc
jne
push
xor
jmp
and
aam
in
aad
das
push
jecxz
addr16
jmp
retf
push
fidiv
push
add
dec
pop
fisub
adc
cld
(bad)
add
ss
or
fs
jo
push
adc
sub
jmp
mov
or
add
jmp
rol
ret
jae
fcomp
push
shr
aam
dec
pop
cmp
and
xchg
in
ret
scas
loope
cld
pop
lods
call
daa
mov
mov
das
and
or
push
inc
repnz
loopne
pushf
lock
loopne
into
iret
data16
xor
loop
retf
add
neg
cmps
sbb
mov
icebp
pop
repz
or
in
pop
cmp
stos
mov
mov
ja
ficomp
call
xchg
je
sti
mov
ins
call
mov
or
sub
lahf
add
std
cmp
aad
xchg
and
mov
outs
and
test
xchg
xchg
inc
test
cmp
and
push
jp
cs
inc
xchg
call
mov
pop
clc
enter
loopne
scas
sub
inc
or
inc
push
repnz
stc
inc
jecxz
ror
rcr
out
aas
sub
inc
push
shl
inc
in
mov
xchg
dec
adc
jp
mov
in
test
hlt
xchg
pop
je
add
add
jno
mov
add
stos
les
xchg
inc
inc
lds
rcl
sub
ins
test
retf
call
leave
mov
rol
lods
adc
ror
pop
and
jmp
out
imul
xchg
inc
pushf
mov
lds
adc
ins
mov
aad
popf
sbb
xchg
retf
inc
cli
xor
call
jnp
test
jmp
jmp
add
and
or
sti
es
imul
test
inc
sbb
jmp
jae
and
push
pop
xor
cmps
or
adc
sub
movs
xchg
imul
fcmovbe
mov
and
xor
test
cdq
fidiv
add
dec
ret
ror
dec
and
or
call
(bad)
js
or
add
sub
pop
lods
push
fs
xchg
mov
or
xchg
mov
inc
and
in
xor
xchg
xor
adc
leave
lahf
sbb
push
jnp
fisubr
sti
mov
and
push
push
jbe
int3
dec
adc
xchg
in
ja
jnp
in
imul
mov
sub
push
mov
rcl
addr16
int3
xchg
call
and
fstp
and
movs
xor
xor
mov
mov
dec
xor
fisttp
je
inc
les
xchg
in
scas
call
mov
clc
jb
jecxz
idiv
jmp
pop
idiv
cli
sub
add
push
jno
xor
pusha
dec
xlat
retf
icebp
xchg
xor
cmp
hlt
clc
call
xchg
pop
in
pop
sub
or
inc
test
cmp
bswap
sti
sbb
std
imul
sahf
pop
and
std
scas
sahf
cli
and
xor
mov
repz
cmp
jae
leave
xchg
push
push
fcmovne
leave
aas
stc
cmp
imul
aaa
imul
ins
ret
les
adc
xor
fild
arpl
div
daa
and
loop
in
inc
repz
fs
retf
fwait
and
inc
fnstenv
cmp
mov
mov
lea
xchg
test
mov
xchg
xor
cmp
pop
xchg
loope
ds
mov
fsub
mov
mov
idiv
jge
mov
sub
lods
sub
jbe
sbb
rcl
jne
lods
cmps
cmp
mov
add
adc
(bad)
push
or
imul
fst
mov
jp
js
iret
push
icebp
sub
add
mov
pop
(bad)
jb
idiv
xchg
pop
int3
sbb
outs
in
add
aas
dec
popa
sahf
sbb
js
inc
imul
call
into
loopne
push
js
int
jo
xor
das
jl
xor
dec
adc
sbb
mov
xor
inc
repz
(bad)
dec
ret
adc
pop
sub
fistp
cmp
add
call
and
sub
sbb
jno
cmp
call
push
loop
in
dec
xchg
ins
sub
fwait
das
cmc
dec
test
lods
mov
mov
jg
xchg
mov
ins
xchg
push
and
or
retf
push
fild
daa
bound
xchg
scas
dec
ret
mov
jbe
retf
dec
push
xor
imul
in
xchg
and
test
pop
loope
adc
imul
jecxz
std
cwde
std
ror
int
rcl
mov
test
inc
or
xor
pop
pusha
(bad)
mov
outs
jb
jmp
dec
mov
cmp
aam
jno
les
fcomp
stos
mov
add
jle
xchg
push
shr
add
pop
lock
shl
repnz
pop
mov
push
popf
in
fist
(bad)
imul
jmp
stos
push
jbe
sbb
mov
pop
enter
call
mov
fstp
clc
xchg
into
xchg
push
pop
push
jp
adc
sub
mov
les
push
jecxz
fisubr
lock
dec
sbb
jns
or
lods
in
pop
in
stos
aas
mul
(bad)
adc
jo
bound
pop
add
sub
addr16
lods
test
test
in
fs
mov
adc
mov
movs
rcr
pop
fst
call
adc
xchg
xchg
push
lock
push
arpl
or
imul
rcl
stos
sub
jae
(bad)
dec
pop
mov
add
push
ficom
popf
push
add
jae
scas
dec
rcr
mov
fiadd
dec
aam
pop
call
das
sbb
inc
sbb
imul
aad
jl
popf
and
and
stc
cmps
cmps
push
aaa
sbb
cs
dec
mov
out
jp
sbb
fimul
mov
pop
mov
lods
pop
rcr
loope
aaa
addr16
cmc
lods
in
sub
cmp
dec
mov
(bad)
jl
shr
ss
mov
mov
dec
aas
ins
xor
push
and
cmp
imul
enter
xor
cmps
mov
leave
and
(bad)
dec
fwait
push
sub
nop
cs
jmp
push
mov
imul
(bad)
fsubr
mov
mov
cmps
pinsrw
call
mov
pop
and
sub
mov
das
lods
inc
fistp
cmp
sbb
repz
movs
or
sub
lea
icebp
cmp
arpl
test
imul
or
mov
test
iret
jbe
mov
push
push
sar
jmp
dec
mul
les
mov
retf
and
es
cmp
stos
cmp
call
repz
or
adc
jbe
sar
pop
enter
repz
sbb
push
xchg
repnz
cmps
add
loopne
(bad)
sbb
pop
xchg
push
cmp
retf
mov
inc
dec
fld
pop
add
test
movs
(bad)
rcr
popa
imul
push
aam
mov
jmp
sub
aaa
dec
icebp
dec
shl
mov
cmp
dec
xchg
leave
jge
and
pop
inc
fs
sub
rcr
mov
mov
xor
mov
pop
pushf
dec
fs
sahf
xchg
push
test
sbb
test
cwde
cmp
pop
mov
sbb
jp
iret
jno
movs
mov
add
arpl
xor
fwait
xchg
scas
aad
mov
add
jge
lods
data16
movs
lods
adc
ds
xchg
xor
sbb
push
mov
mov
or
or
add
lea
aad
popa
stos
sub
js
mov
xlat
sub
bound
into
xor
aas
sub
aad
adc
lods
lahf
xchg
fild
(bad)
adc
dec
or
cmps
push
ins
xchg
fwait
das
cli
sbb
daa
fistp
(bad)
ds
lds
inc
or
fdiv
xlat
repnz
sbb
ret
shr
push
add
xchg
fcomp
fmulp
test
push
lods
mov
mov
into
pop
sbb
fwait
mov
mov
fdivrp
aas
fwait
shl
xor
cmp
adc
dec
out
push
retf
das
jecxz
inc
cmp
leave
dec
xor
rcr
adc
adc
enter
test
aaa
adc
outs
xor
das
loope
inc
jmp
mov
add
leave
(bad)
jbe
adc
cmp
in
enter
scas
and
jmp
cmp
pop
fwait
(bad)
hlt
xor
popa
sub
dec
adc
or
add
inc
repnz
cli
jl
cmp
pop
outs
xor
ss
dec
pop
sar
leave
sub
in
aam
(bad)
pop
push
jl
call
outs
xchg
int
inc
ins
xchg
faddp
jbe
callw
xor
inc
and
xor
ss
sbb
or
ret
mov
loopne
mov
arpl
dec
inc
xchg
js
sbb
test
xchg
test
rcr
and
xlat
mov
jg
or
ret
mov
in
sti
call
popf
out
cmps
push
imul
cmp
ds
mov
xchg
mov
js
in
cmc
pusha
popf
and
mov
adc
sbb
push
jl
adc
xchg
das
popa
cmp
jge
xchg
inc
inc
into
je
ds
add
jmp
retf
mov
mov
or
inc
and
pop
sbb
out
sub
cmps
fcmovne
enter
fistp
mov
mov
sahf
mov
(bad)
jl
bound
repnz
pop
xchg
cmp
pop
in
imul
add
dec
xor
rcr
dec
sbb
sar
mov
fistp
push
cli
push
pop
ror
xchg
mov
cmp
mov
movs
sub
sub
lahf
and
dec
inc
sub
outs
movs
fsub
xchg
jbe
jo
(bad)
jmp
adc
test
fistp
mov
retf
fcmovne
(bad)
test
jg
sub
test
add
retf
neg
jmp
xchg
mov
lds
repz
and
push
lods
aaa
ins
add
sbb
sub
not
or
xchg
jmp
mov
je
call
sub
jmp
rol
scas
scas
icebp
mov
sbb
pop
loopne
mov
lea
lods
adc
in
inc
sti
sbb
cmp
mov
(bad)
jp
out
addr16
inc
mov
leave
(bad)
jecxz
dec
addr16
inc
lods
aam
xor
xor
outs
dec
movs
rcr
ret
movs
push
test
jg
gs
pop
xchg
mov
popf
inc
enter
jo
shr
and
in
xor
jnp
dec
icebp
mov
cmp
ins
jae
sub
stc
jmp
sti
ins
or
into
inc
mov
adc
inc
or
push
cwde
dec
jl
call
inc
jmp
jo
jae
pop
or
into
adc
inc
jns
repz
pop
aam
icebp
xchg
mov
jnp
mov
jmp
jecxz
dec
inc
ja
add
mov
xchg
(bad)
cmp
mov
imul
xor
ins
mov
je
push
(bad)
jmp
xor
sub
ret
xor
clc
ss
outs
scas
mov
ja
jae
or
inc
enter
fsubr
dec
rcl
in
cmp
push
jg
add
call
gs
adc
inc
or
(bad)
cmp
ins
rol
mov
in
daa
add
mov
test
fcmovnbe
into
mov
mov
mov
or
imul
xor
call
ins
ror
mov
shr
sbb
dec
pop
mov
push
sub
imul
les
inc
lods
rol
pop
fs
(bad)
ror
stos
pushf
push
and
sti
jle
shl
cwde
and
adc
dec
leave
mov
shl
cmp
test
test
push
lea
adc
mov
dec
bound
iret
in
sub
cli
in
xor
adc
es
cmp
cld
bnd
mov
lods
mov
inc
mov
call
mov
in
clc
sub
mov
adc
jg
dec
es
add
jle
outs
adc
lahf
shr
pop
leave
jle
mov
leave
xchg
dec
mov
xor
sbb
stc
lods
sbb
movs
mov
sub
sbb
pop
mov
cmp
scas
jns
mov
pop
pop
dec
mov
mov
test
popf
pop
xor
ds
add
out
lods
aam
outs
jno
ja
and
test
xor
fdivr
(bad)
or
dec
gs
or
cmp
mov
mov
add
enter
lea
cmp
popf
rol
sub
mov
push
lods
or
(bad)
std
scas
sub
jb
lods
cmp
aaa
pusha
in
stos
icebp
gs
and
and
ja
inc
lods
(bad)
jge
(bad)
int3
outs
into
fisub
fadd
into
cwde
add
hlt
xor
pop
xchg
cmp
mov
(bad)
and
push
sahf
lock
or
xor
sub
ror
cmp
repz
jp
ds
stos
mov
outs
call
cld
leave
pop
jae
(bad)
push
out
cs
jge
jnp
jae
mov
ror
or
ins
(bad)
adc
pusha
sahf
fiadd
test
icebp
daa
add
fs
dec
outs
pop
call
push
mov
mov
adc
adc
dec
xchg
retf
xchg
fild
movups
jne
sbb
pop
push
adc
jno
dec
jnp
not
jmp
or
mov
and
mov
or
cmp
ret
les
cmp
push
ret
sub
fcomp
ds
and
or
push
dec
dec
loopne
xchg
dec
test
or
push
pop
cmc
mov
xchg
and
mov
mov
xor
add
fbstp
sub
dec
dec
mov
dec
cld
pusha
inc
dec
cmp
and
fidivr
shr
and
inc
popa
mov
cmp
dec
int
inc
cld
mov
xchg
or
sub
mov
nop
in
stos
jl
(bad)
mov
mov
push
pop
sub
mov
loop
xor
pop
shl
sti
loopne
jl
in
cmp
jecxz
fbld
in
push
in
fcomp
add
into
sti
cmp
test
push
jmp
push
cwde
cmp
mov
cmp
cwde
jecxz
add
retf
(bad)
int3
or
or
xchg
push
scas
mov
sub
ret
dec
movs
cmp
pop
loope
and
imul
jmp
sti
mov
(bad)
mov
push
pop
popa
jmp
jge
jns
and
add
inc
loop
movs
xor
xlat
and
das
push
inc
in
out
loopne
jecxz
pop
aad
(bad)
in
cld
push
nop
pop
fs
sbb
jmp
scas
sbb
and
inc
sahf
mov
add
sti
aad
sbb
mov
mov
jo
hlt
pusha
nop
in
jmp
sub
leave
aad
xchg
pop
cmp
mov
mov
cmp
sub
shr
jecxz
outs
jmp
js
mov
push
test
rcl
ret
pop
inc
and
push
push
adc
test
stc
mov
out
push
mov
xor
cld
int3
mov
(bad)
hlt
or
dec
dec
cmp
mov
jg
jns
mov
jnp
mov
sub
fcmovnu
mov
push
stc
es
xor
xor
cmp
jmp
stc
cmp
lds
dec
mov
xchg
dec
je
jmp
jmp
add
std
jnp
dec
sbb
into
mov
xor
lahf
aad
stos
ret
stos
jmp
mov
jle
call
inc
mov
outs
scas
add
cmp
adc
cmp
loopne
cmp
xchg
add
sub
call
ja
push
sbb
xor
sbb
sub
pop
adc
cmps
pop
jmp
rcl
cdq
test
jmp
mov
adc
daa
hlt
jle
ret
xchg
add
jmp
rol
test
jecxz
fisubr
push
enter
pop
jl
fwait
jnp
sbb
arpl
jnp
push
fdiv
sbb
mov
jge
dec
mov
int
and
sub
sbb
xchg
jo
xchg
imul
int
ss
movs
fimul
pop
enter
cmc
add
pop
sub
clc
call
push
je
bound
fistp
es
xlat
mov
in
sti
sub
fdivr
add
sbb
push
dec
xor
(bad)
pop
out
jb
ret
call
into
rcr
nop
and
dec
cmp
dec
mov
out
ret
mov
or
mov
jle
jecxz
xor
inc
addr16
test
dec
sti
mov
(bad)
jmp
stos
inc
push
sub
xchg
sbb
xchg
mov
push
add
dec
and
inc
rol
shl
mov
cmp
cs
inc
test
dec
outs
dec
xchg
pop
ret
cli
enter
pop
and
nop
out
and
clc
test
je
adc
or
mov
push
cli
jbe
mov
mov
cmp
fst
dec
mov
cmp
popf
cmp
stc
clc
icebp
or
push
pop
jg
xchg
je
push
jno
ins
(bad)
bound
je
not
dec
retf
pusha
dec
in
xor
(bad)
mov
repnz
mov
and
and
add
and
jg
je
sub
jp
ds
aas
add
idiv
and
jnp
xor
retf
sbb
into
data16
mov
fucomip
lock
icebp
jo
mov
dec
or
and
xchg
repnz
arpl
sub
test
sub
mov
sub
and
fs
fiadd
or
sbb
nop
xor
dec
dec
sbb
(bad)
loope
pop
outs
(bad)
gs
pop
sub
fnstsw
pop
and
inc
sbb
lds
out
daa
fwait
icebp
mov
mov
mov
mov
es
mov
xor
cmp
mov
inc
lods
movs
jle
jb
int3
repnz
scas
sar
mov
pop
fisubr
xchg
out
es
xlat
mov
mov
sbb
call
push
js
cmp
adc
fs
(bad)
fcomip
cmp
jle
ss
iret
cmp
pop
call
sbb
iret
cdq
xor
sbb
jbe
or
xlat
inc
mov
and
shl
xchg
mov
push
sbb
pushf
add
mov
loopne
dec
test
es
enter
lahf
out
imul
push
sbb
ss
dec
fdivr
shl
nop
aam
push
cmp
push
jecxz
(bad)
loopne
pop
mov
js
push
push
cli
retf
jecxz
jge
pop
ds
and
inc
add
out
or
sub
jecxz
popa
iret
shl
mov
aaa
inc
sbb
stc
mov
and
inc
push
add
cmp
(bad)
sub
or
cdq
push
sub
cmp
fcom
push
aas
lods
out
push
dec
pushf
push
push
int
and
cmps
cmps
lods
ins
clc
sbb
std
in
(bad)
inc
popa
outs
sub
xchg
mov
sub
mov
clc
mov
cli
dec
pop
pusha
ds
popa
ret
cdq
sbb
std
in
xchg
neg
hlt
call
data16
xchg
das
ffreep
jge
and
pushf
push
ins
fcomi
or
clc
add
push
push
inc
aas
mov
add
in
ror
ret
and
or
mov
sahf
jno
es
je
inc
scas
and
mov
ja
fbld
xor
jbe
ins
ror
dec
mov
int3
xor
push
jg
pop
push
repz
push
adc
shl
mov
lock
cmc
and
mov
gs
aas
mov
sbb
cmps
repnz
nop
pop
pop
scas
mov
dec
dec
movaps
mov
or
js
xchg
mov
xchg
arpl
test
push
(bad)
or
das
add
mov
dec
and
addr16
xchg
cmc
mov
xchg
or
jno
(bad)
sub
lea
sub
sti
aam
xor
outs
ins
mov
stos
cli
cdq
mov
cmps
aam
mov
je
mov
(bad)
nop
in
inc
daa
mov
pop
ja
push
jae
mov
mov
sub
dec
mov
pop
or
or
xor
out
pop
cli
movs
sub
sahf
push
(bad)
in
lods
pop
pop
cmp
pop
push
xchg
mov
mov
ds
sbb
test
cmp
and
hlt
add
int
cs
out
loop
aas
loopne
call
jp
in
xchg
test
mov
add
lea
repz
adc
dec
cli
sub
js
scas
cmp
clc
or
into
je
shl
cmp
ret
cmp
scas
sub
xlat
jecxz
jae
sub
add
inc
call
and
cmp
scas
idiv
jnp
cs
and
retf
scas
ret
sti
fsub
push
xor
out
rcl
sbb
mov
aas
arpl
movs
icebp
ja
shl
in
push
mov
in
(bad)
cdq
psubsw
fisubr
lods
out
xor
and
push
loop
fdivr
mov
cmc
div
inc
shl
cmp
adc
scas
icebp
lods
and
out
add
pop
clc
movs
add
std
jb
loope
xor
or
mov
sahf
dec
jmp
mov
lahf
pop
ror
out
pop
xor
lock
add
cmp
inc
in
mov
bound
scas
jne
les
icebp
in
fiadd
sbb
pop
push
enter
retf
(bad)
add
dec
jnp
xchg
mov
fidivr
cld
sub
out
rcr
push
mov
(bad)
cs
ffreep
cdq
dec
xlat
(bad)
sbb
and
xchg
rcr
jmp
sbb
jnp
push
cmp
add
mov
xchg
sti
add
ficomp
iret
cli
xchg
and
les
xor
and
sbb
adc
mov
pop
in
mov
ret
mov
pop
dec
xchg
push
push
mov
lea
sahf
(bad)
(bad)
call
sub
sar
scas
pop
jg
movs
push
enter
mov
lods
pop
jb
outs
outs
jmp
loopne
mov
jecxz
xor
daa
mov
(bad)
adc
scas
fnstsw
fiadd
mov
(bad)
enter
jno
and
push
sub
test
fstp
inc
dec
test
inc
popa
add
mov
jb
jno
dec
into
int3
dec
addr16
or
push
dec
mov
scas
retf
add
dec
mov
push
xlat
inc
cs
mov
fisubr
or
jo
mov
addr16
aaa
cdq
(bad)
sbb
(bad)
lea
data16
imul
mov
retf
(bad)
gs
inc
or
ins
iret
inc
mov
iret
mov
mov
leave
(bad)
add
add
or
(bad)
int3
jns
jmp
dec
(bad)
sbb
xchg
test
sub
in
xchg
xor
cdq
bound
cmp
iret
xchg
xchg
add
sbb
stos
push
lods
gs
shl
xchg
rol
movs
mov
cli
cmp
jo
sub
mov
and
mov
loope
into
imul
dec
push
add
pop
pop
fisub
neg
stc
inc
push
jge
pop
ret
test
loopne
je
cdq
sar
mov
hlt
adc
mov
inc
out
popa
fsub
or
adc
jmp
out
stc
adc
pop
dec
pusha
cld
adc
add
(bad)
ja
in
cmp
jg
in
shl
or
mov
pop
jecxz
rcr
sub
loope
mov
int3
xor
adc
or
sar
(bad)
dec
mov
movs
lock
in
call
jnp
sbb
cmps
mov
pushf
jae
fistp
ins
call
add
out
idiv
pop
or
mul
test
(bad)
lock
neg
push
mov
push
xchg
mov
(bad)
in
scas
imul
xor
add
ja
lods
adc
jge
mov
ins
arpl
dec
jb
call
cld
inc
test
ins
into
inc
sbb
fwait
cwde
pop
or
rol
scas
dec
xchg
xchg
sub
pop
push
xor
mov
dec
sti
inc
aas
xor
jg
movs
adc
arpl
int
pop
pop
daa
mov
shl
ret
fdiv
sbb
cmp
or
xchg
lahf
cld
mov
mov
xor
jmp
fucompp
jb
or
mov
out
gs
pop
push
mov
cmp
ins
sbb
xchg
jno
(bad)
pop
and
xor
pop
xchg
sub
push
adc
and
ja
add
bnd
push
adc
push
stc
mov
leave
pop
out
xchg
fidiv
inc
bound
jg
or
xchg
mov
pop
mov
cmp
pop
pushf
or
cmp
ins
mov
cmp
pop
inc
aaa
mov
retf
xchg
div
xchg
neg
imul
sbb
(bad)
aad
mov
outs
xor
repnz
mov
das
lea
js
jb
push
shl
or
les
cli
imul
pop
dec
call
cs
dec
aad
scas
mov
cmc
push
inc
ins
jne
adc
or
sub
das
int
cmp
add
cmp
lahf
mov
cwde
test
xchg
xchg
adc
call
aad
out
pop
gs
push
sar
jmp
(bad)
loop
jb
popa
test
cmp
(bad)
mov
repz
xor
and
push
ds
popa
xor
mov
and
dec
lea
lds
(bad)
lods
mov
retf
push
bound
cld
fcmovnu
repnz
or
jp
fs
mov
cmp
xor
jmp
sub
repz
adc
jo
push
retf
ins
and
(bad)
mov
fbstp
fst
push
xchg
cmp
xchg
pushf
movs
mov
std
out
jb
mov
adc
jmp
push
jb
push
adc
push
push
fisttp
inc
push
int
shl
jle
shl
xchg
pop
cdq
into
push
aas
scas
cwde
or
jmp
push
xchg
xor
imul
call
mov
retf
push
mov
and
add
fcom
rcr
lds
sbb
in
call
daa
inc
popf
out
jmp
arpl
das
loop
rcl
popa
call
sbb
xchg
(bad)
js
mov
sbb
lods
jge
adc
int3
addr16
shl
jns
pusha
pop
stc
add
xchg
loopne
push
jno
jns
mov
outs
stc
and
in
addr16
pmaxsw
lods
or
add
inc
(bad)
jg
adc
mov
out
xor
inc
mov
clc
jecxz
jno
sbb
cmps
sub
gs
fdivr
fdivrp
das
add
loopne
jmp
ja
in
add
mov
xchg
js
jae
scas
fwait
ss
rcr
jno
bound
jae
adc
jmp
imul
repz
mov
icebp
(bad)
fsubr
mov
or
outs
loopne
jmp
or
cmp
and
lock
mov
fwait
out
inc
or
dec
inc
iret
ins
cmp
push
mov
bound
xchg
pop
pop
push
std
lock
dec
cli
shl
or
ja
ret
outs
fimul
cmps
loopne
xor
push
lahf
cmps
loope
ins
xchg
loop
int
sub
cmp
aas
test
inc
mov
cmp
lods
sub
mov
ret
ret
sub
mov
cmps
in
dec
sub
sub
jle
cmp
mov
into
sub
mov
(bad)
mov
cmps
mov
xor
loopne
mov
inc
mov
dec
test
or
sub
lock
(bad)
sahf
test
jmp
mov
xchg
rep
(bad)
std
pop
call
sbb
adc
cmps
push
cmp
int
xchg
mov
jp
mov
pop
cmp
shl
bound
jno
jg
mov
retf
sbb
add
mov
addr16
scas
jb
and
and
inc
lea
inc
aam
sub
ins
inc
and
mov
sbb
add
arpl
jb
iret
dec
pop
mov
cmp
bound
rcl
lods
jne
bnd
pushf
(bad)
pop
jae
stos
les
movs
sub
sar
ret
xchg
mov
inc
movs
xor
mov
lds
pop
ret
neg
mov
js
and
not
fdivr
push
mov
xor
dec
xchg
sub
lahf
sar
inc
outs
xchg
ins
fidivr
stos
retf
mov
aam
ja
repz
xchg
stc
cmp
mov
out
inc
push
int3
dec
lds
mov
or
sbb
and
ja
repnz
sub
push
into
and
je
mov
inc
(bad)
aam
lahf
cmp
aaa
stc
push
out
into
or
data16
mov
add
or
inc
lock
fnstenv
sbb
mov
pop
movs
mov
ss
(bad)
adc
imul
and
push
sub
fisubr
mov
es
add
pop
call
mov
inc
or
popf
push
inc
add
lahf
push
das
fldcw
and
ror
aam
cld
inc
(bad)
subps
jae
sahf
jb
inc
jle
in
pop
and
aam
sbb
pop
or
inc
inc
push
fisub
xor
adc
mov
sbb
outs
sub
push
sbb
xchg
mov
push
push
mov
sbb
or
sub
das
cmp
cmp
push
outs
inc
into
jb
jbe
ins
jl
outs
mov
sub
jo
and
(bad)
mov
shl
ror
out
in
loopne
cs
lahf
jnp
add
push
mov
dec
xlat
pop
push
sahf
arpl
sub
jle
shr
hlt
or
sbb
cmp
test
sub
ret
imul
aaa
sbb
inc
and
cmp
jg
dec
mov
popf
dec
outs
imul
aas
(bad)
mov
mov
mov
out
inc
pop
dec
xor
mov
pop
retf
(bad)
test
movs
enter
cmp
shr
jmp
scas
mov
mov
or
lahf
xchg
std
xlat
imul
ret
into
sub
sbb
scas
push
sub
daa
jns
mov
(bad)
je
pusha
sub
mov
push
ins
pusha
inc
stos
je
pop
dec
xchg
sbb
cmp
add
jg
loopne
ror
repnz
dec
add
dec
xor
mov
xchg
fadd
arpl
sub
int
bswap
cmp
mov
mov
push
sbb
sbb
(bad)
jns
or
push
xchg
js
add
jo
xchg
mov
push
ficom
into
xor
pop
aas
lods
and
(bad)
cmp
sbb
shr
data16
mov
movs
mov
jno
mov
jne
dec
xor
repz
or
mov
push
movs
adc
aaa
mov
mov
sub
in
ins
stc
es
push
add
jl
add
arpl
lahf
pop
inc
scas
jg
xor
rol
mov
cld
ss
mov
push
or
or
mul
xor
test
pop
jp
xor
dec
xchg
push
ds
das
mov
ins
aad
push
dec
mov
pop
out
xchg
sbb
jecxz
retf
sub
pop
sbb
jno
cmp
xchg
and
lds
shr
xor
pop
sbb
pushaw
pop
pop
sub
leave
mov
aaa
jo
adc
sub
movs
es
sbb
sbb
fwait
js
cmps
cs
push
movs
call
fcomp
in
test
lds
(bad)
and
outs
jle
and
aam
inc
and
cs
(bad)
cld
into
adc
mov
and
neg
pusha
cli
mov
sub
inc
cmp
lahf
ins
jecxz
mov
out
push
scas
pop
dec
stos
adc
cld
imul
add
mov
xchg
mov
repnz
jge
jno
sahf
cmp
sub
retf
aas
mov
shr
or
mul
lahf
dec
loopne
into
jb
inc
leave
and
jo
dec
push
mov
es
or
idiv
pop
mov
imul
aad
push
and
xchg
jno
and
jnp
cwde
push
jmp
sub
cld
lds
push
or
dec
and
push
or
cmps
stos
or
or
(bad)
gs
jl
dec
pushf
push
not
out
movs
fnstcw
dec
push
loop
xor
pop
pop
sbb
pop
inc
push
xor
(bad)
push
ret
cmp
stc
out
xchg
xchg
adc
int3
dec
cdq
dec
sbb
repnz
scas
mov
and
inc
jp
(bad)
pop
jecxz
pop
out
jg
stc
xchg
jne
scas
enter
mov
push
fist
hlt
mov
push
in
jp
(bad)
push
(bad)
lds
cmp
jno
dec
push
stc
loopne
jb
call
movs
pop
adc
dec
xor
ror
dec
sub
ds
mov
into
cdq
inc
sbb
dec
retf
jae
sti
sub
sar
sar
mov
jne
fs
ja
pop
push
sbb
mov
sbb
imul
xor
pop
(bad)
cmps
mov
sbb
mov
into
adc
and
pushf
je
fdivr
mov
call
jmp
add
and
pushf
or
shr
cmp
mov
or
repnz
aad
call
xchg
loop
jno
mov
mov
loopne
(bad)
(bad)
cmp
sub
jmp
(bad)
rol
cmps
clc
inc
xchg
(bad)
mov
mov
lea
inc
xchg
sbb
push
sbb
mov
xchg
jne
sub
call
(bad)
adc
les
mov
xor
mov
mov
cmp
pop
loope
stos
rcr
push
mov
arpl
fisub
rol
repnz
enter
test
or
pop
or
push
push
es
aaa
jle
jmp
mov
push
leave
add
sahf
sahf
stos
(bad)
into
out
aaa
ficom
push
loopne
add
bound
mov
inc
(bad)
mov
neg
outs
movs
xor
and
inc
and
lds
loope
lds
lods
cmps
sub
fs
cmp
pusha
rcr
pop
cmp
test
ja
leave
dec
ins
push
sbb
ja
mov
mov
inc
jbe
test
imul
push
xchg
imul
test
mov
aas
les
and
loopne
jo
jmp
mov
cdq
scas
call
loopne
cmp
movs
push
je
xor
or
sub
push
fxtract
clc
push
inc
movs
dec
mov
fwait
out
jbe
dec
add
jg
jne
imul
adc
pop
rcr
adc
push
or
push
pop
xor
sub
jl
dec
int
jns
ins
xchg
aad
add
xchg
push
mov
out
dec
icebp
mov
dec
cmp
(bad)
loop
in
sbb
jp
inc
xchg
jnp
(bad)
ds
jbe
or
cs
aam
in
repz
or
sub
jo
and
retf
mov
xor
lock
in
stos
and
out
jg
cs
pop
add
pop
pop
jle
gs
jbe
inc
xchg
outs
sub
add
cmp
cmp
aas
(bad)
or
xor
mov
mov
fadd
push
xor
sbb
xor
(bad)
(bad)
sub
retf
scas
int
add
jns
rcl
pop
push
push
loopne
mov
call
jmp
inc
out
xchg
mov
(bad)
jmp
(bad)
mov
out
in
adc
into
fnstenv
cs
inc
pop
dec
cmps
inc
jmp
and
sub
aam
outs
loope
fs
out
jno
std
out
adc
mov
in
stos
xor
call
and
sub
dec
sbb
movs
jno
addr16
adc
add
pop
xor
sub
add
sbb
je
hlt
jnp
ret
jne
cmc
mov
sub
jp
out
call
shl
dec
inc
cmc
dec
xlat
push
fdiv
adc
loopne
outs
ss
push
jg
mov
or
mov
sub
and
rcr
stos
call
sbb
and
les
jo
sbb
fs
mov
ret
mov
mov
int
fcom
cmp
ffree
mov
sbb
or
mov
jmp
inc
jle
cwde
mov
cwde
jae
pusha
sti
ins
rcl
(bad)
cli
sub
lock
test
or
in
mov
cs
cwde
sub
or
imul
dec
jno
fcom
jmp
mov
inc
ret
mov
fwait
inc
push
out
mov
scas
clc
pushf
rep
adc
or
nop
ds
enter
out
outs
out
movs
inc
or
out
ret
out
cmp
push
retf
xor
sbb
pop
sbb
ja
in
dec
jae
pop
movs
pop
idiv
mul
lahf
cmp
mov
(bad)
dec
imul
xchg
aam
out
sub
shl
mov
pop
lods
xor
repz
rol
mov
cmp
fsub
pop
cmp
sbb
pushf
jecxz
sub
jnp
adc
cmps
or
jo
ret
pop
adc
mov
add
cli
xchg
inc
(bad)
scas
leave
repz
jmp
and
xchg
sbb
aad
jo
cs
neg
mov
inc
repz
sub
arpl
mov
dec
hlt
je
addr16
jl
and
or
fdecstp
cmps
pop
jbe
push
pusha
add
jbe
sub
jge
aad
sbb
fild
jnp
fmul
cmp
mov
(bad)
push
sub
sub
push
sub
inc
(bad)
pop
arpl
cmp
add
mov
cmp
aam
in
imul
cmp
mov
add
aam
jl
cmp
es
lock
lahf
mov
push
mov
mov
arpl
and
pop
dec
mov
push
lods
icebp
ret
pop
inc
fwait
jge
outs
push
adc
data16
and
push
outs
mov
push
in
(bad)
ficomp
ins
aad
dec
cmc
xor
in
es
xchg
or
bndldx
stos
fwait
mov
lods
cmp
mov
push
cld
mov
movs
pop
movs
pop
or
fist
xor
mov
dec
mov
add
push
cli
lds
int
stc
faddp
nop
gs
push
in
popf
das
popf
dec
(bad)
clc
nop
sub
pop
push
jae
pop
cs
in
xchg
inc
mov
sbb
ins
imul
test
nop
sub
pop
adc
xchg
jmp
ins
jmp
(bad)
inc
dec
ins
mov
pop
fimul
gs
and
out
outs
and
or
sbb
pusha
xchg
arpl
add
das
(bad)
cmp
adc
mov
or
jl
(bad)
es
push
fs
or
xchg
fsub
or
aam
sub
mov
jae
call
mov
adc
into
int3
popf
mov
stc
adc
ins
nop
mov
fsub
inc
mov
jg
daa
mov
test
lds
mov
xchg
hlt
push
mov
cmp
scas
shr
mov
mov
cli
and
inc
xchg
and
rol
inc
sar
jno
rcr
(bad)
push
jb
nop
mov
jne
mov
and
xchg
in
scas
fcomi
stos
adc
into
repnz
xor
adc
and
das
mov
or
inc
movs
stos
stos
fsub
(bad)
sahf
jl
sub
fs
ja
sbb
add
adc
xchg
mov
iret
loope
leave
repz
add
add
push
push
cmps
sub
inc
sahf
fwait
popf
imul
stos
mov
mov
(bad)
xchg
push
dec
sbb
ret
adc
dec
push
imul
je
cld
jne
mov
popa
scas
fldcw
ror
ss
cld
push
retf
ret
jmp
dec
in
sub
in
clc
fldl2e
mov
repz
sti
mov
mov
out
add
add
idiv
dec
cmp
add
pop
ja
xlat
xchg
push
sbb
mov
pushf
out
cmp
inc
jge
xchg
mov
mov
mov
and
fst
cmp
fdivrp
rep
rep
jo
or
in
add
add
jl
push
aaa
lods
xchg
arpl
mov
and
jmp
xchg
cmps
test
adc
dec
cmps
pop
scas
les
lods
int
cmp
or
(bad)
in
jp
and
adc
add
push
les
pusha
mov
or
inc
jmp
ror
add
push
mov
mov
xor
or
aaa
mov
fsub
retf
bnd
(bad)
rcl
push
bound
sar
xor
test
outs
cmp
xlat
pop
mov
cmp
inc
ja
enter
and
rcl
jecxz
or
ficom
mov
cmps
jbe
test
clc
cmps
icebp
xchg
(bad)
xchg
mov
xchg
(bad)
frstor
dec
lahf
inc
cwde
xor
loop
out
arpl
test
inc
mov
aaa
loopne
addr16
sahf
add
cdq
out
test
cmp
inc
out
mov
push
adc
test
outs
sti
or
ror
dec
jnp
xchg
sbb
sbb
iret
and
pop
lods
mov
inc
and
fwait
aad
fwait
push
in
push
test
movs
and
cmp
xchg
push
jo
in
xchg
fdiv
inc
jnp
psrlw
sub
cs
mov
inc
cmp
(bad)
add
int
jp
ds
out
fadd
adc
xchg
addr16
call
inc
out
dec
add
and
stos
cwde
lods
inc
inc
pop
jmp
mov
mov
xchg
std
sahf
sbb
repz
push
mov
mov
mov
addr16
int3
dec
call
pop
mov
dec
pop
fnstenv
jmp
sbb
mov
(bad)
hlt
add
adc
test
jl
loopne
fs
add
aas
jbe
pop
test
movs
popa
cmps
jmp
out
jecxz
enter
mov
test
xor
shl
mov
cmc
xchg
jecxz
imul
cs
retf
dec
cmp
loop
call
fadd
and
mov
push
mov
frstor
mov
sub
cdq
jp
or
(bad)
int3
push
xor
push
outs
stos
or
xor
enter
sbb
retf
push
test
cmp
rcr
(bad)
push
xchg
imul
nop
movs
fs
gs
sbb
retf
es
outs
jbe
push
push
int3
pop
push
xchg
(bad)
fcmovbe
mov
shl
inc
stos
scas
cmp
imul
jno
jge
sti
adc
ret
cmp
pop
ret
mov
addr16
pop
call
movs
xchg
addr16
in
aad
imul
pop
xor
pop
mov
popa
stos
adc
mov
mov
mov
jl
lods
sbb
cmc
frstor
es
xchg
mov
add
jmp
or
call
frstor
xchg
pop
test
daa
mov
stos
jle
pop
jo
fwait
push
and
nop
outs
mov
aam
dec
imul
dec
adc
(bad)
leave
fild
mov
neg
inc
ret
inc
pop
popa
mov
jmp
int3
(bad)
pop
sub
pop
retf
mov
pop
cmps
(bad)
pop
jb
imul
cs
or
push
mov
adc
ret
movs
xchg
or
mov
iret
mov
jl
mov
adc
cmps
sub
adc
mov
mov
addr16
lock
xchg
sub
cmc
pushf
mov
fdiv
xor
popf
pop
mov
movs
sti
daa
xchg
outs
mov
sbb
fadd
pop
sbb
push
dec
ud1
mov
movs
xchg
mov
jecxz
jo
mov
mov
xchg
icebp
xchg
pop
les
push
mov
lahf
imul
sbb
aam
jmp
dec
or
cmp
out
mov
jmp
push
xor
ror
bound
out
inc
sti
or
out
in
cmp
xor
and
in
loop
ret
cmp
jae
in
aad
out
dec
iret
or
sbb
fiadd
es
cmp
pop
inc
fist
out
scas
xor
sar
mov
pop
cmp
arpl
mov
xor
sbb
pop
jle
outs
ds
pop
sbb
aaa
mov
adc
sub
push
push
(bad)
mov
adc
sub
or
push
data16
adc
jne
gs
cmps
mov
dec
xchg
pop
xlat
fs
push
gs
dec
sbb
fcomp
push
retf
add
pushf
adc
sub
adc
(bad)
lock
push
mov
sbb
lods
mov
cmp
mul
popf
out
mov
adc
ficom
out
push
mov
(bad)
icebp
ds
ss
jmp
(bad)
ret
jno
xor
mov
sbb
add
hlt
jo
idiv
(bad)
cmc
(bad)
adc
mov
xchg
mov
inc
outs
xor
(bad)
dec
and
xchg
clc
push
inc
push
mov
add
mov
push
mov
jne
inc
fstp
in
addr16
mov
mov
mov
xor
test
stc
int
ja
sub
add
stos
and
push
ret
mov
push
cmp
aas
popa
inc
and
push
jmp
clc
inc
lods
jmp
sbb
adc
les
nop
sbb
mov
cmp
movnti
addr16
repnz
jp
push
mov
xchg
imul
inc
neg
sbb
push
cmps
pop
sub
stos
nop
sahf
bound
xchg
fld
xchg
dec
pop
ror
xor
ins
push
dec
mov
(bad)
ror
clc
data16
inc
shl
cli
ror
sbb
or
(bad)
sbb
(bad)
jmp
dec
mov
test
or
cmp
adc
pop
xchg
jo
pushf
scas
movs
pop
jecxz
pop
rcr
repz
test
mov
cli
lods
xchg
sub
les
push
fdivr
inc
gs
inc
lods
mov
enter
jae
or
sar
add
shl
gs
adc
and
or
and
lds
ja
adc
lea
js
mov
ins
xchg
dec
xchg
popa
loope
sub
fstp
and
xchg
xor
cmps
in
and
(bad)
ret
dec
lods
xor
xor
pop
ss
mov
out
mov
push
jl
popa
in
mov
je
cdq
retf
ffreep
leave
nop
push
inc
lds
fs
adc
cmp
clc
xor
mov
fimul
je
rcr
cwde
sub
jns
dec
arpl
rcr
push
loopne
mov
cmp
xlat
loope
out
mov
push
sub
sub
jb
add
ret
xor
adc
push
push
fcom
dec
push
call
paddsb
mov
adc
push
into
sbb
sahf
leave
pop
daa
push
sub
aaa
xor
and
js
gs
pop
pop
scas
mov
les
xchg
out
pop
mov
mov
mov
sub
and
(bad)
outs
add
div
jae
daa
icebp
mov
mov
xor
mov
mov
js
jnp
fidiv
loope
mov
cmp
aaa
int
mov
cwde
outs
push
ds
movzx
sbb
test
adc
stc
das
xchg
loope
pop
test
scas
lock
push
pop
pop
aam
pusha
push
mov
pop
adc
aas
add
ret
cdq
push
pop
add
cli
jae
mov
lods
shl
gs
xor
add
in
push
jne
jae
or
clc
cwde
adc
fadd
pop
add
sti
(bad)
in
push
lds
add
add
push
fistp
test
xchg
into
ins
mov
in
sbb
out
dec
and
popa
retf
fcomp
ds
fxtract
cld
mov
je
(bad)
cmp
cmps
aaa
idiv
inc
pop
and
xlat
xchg
xchg
mov
pop
scas
mov
jmp
xlat
cdq
mov
and
sti
(bad)
test
xor
das
mov
pusha
xor
or
jne
push
ins
sub
inc
jp
aam
or
mov
pushf
outs
(bad)
cmp
fild
dec
jbe
aad
and
pop
daa
gs
dec
xor
daa
stc
ds
inc
push
in
jae
ins
imul
dec
fbstp
ins
inc
nop
xchg
pop
mov
mov
mov
repz
xchg
pop
leave
lods
fs
das
fcom
outs
xlat
xchg
leave
or
aam
push
pop
(bad)
and
cmps
jnp
test
sub
jo
cmp
xchg
in
fidivr
std
pushf
(bad)
in
out
aam
nop
pop
out
scas
imul
call
cmp
jge
cmps
jle
mov
pop
xor
test
jne
mov
push
push
push
fisubr
lds
xchg
mov
xor
pop
or
push
(bad)
out
fnstcw
jno
xchg
out
sub
movs
sub
stc
or
shr
cmps
or
add
mov
inc
mov
fldenv
aad
(bad)
ret
mov
cmps
mov
xchg
inc
pop
or
and
pop
aad
xchg
xchg
and
sbb
rcr
fdiv
xchg
push
fnstenv
add
int3
jl
gs
mov
mov
pusha
retf
cmp
call
inc
dec
dec
ficomp
xchg
sbb
call
mov
inc
test
fwait
push
mov
fbstp
dec
push
inc
ins
jl
iret
fwait
call
and
in
fwait
xchg
xor
mov
sbb
mov
cmp
int
push
add
mov
mov
push
test
std
sbb
inc
mov
dec
loope
repnz
xor
call
bound
mov
ror
outs
mov
fistp
pop
call
cdq
xor
cmps
pop
inc
aad
in
xchg
mov
mov
aas
jno
xor
loope
jge
ret
cdq
clc
call
xor
jb
xchg
lods
mov
mov
xchg
mov
inc
or
movs
ffree
aam
rcr
rep
add
retf
mov
outs
cli
into
sti
jp
xor
xchg
lahf
in
fwait
test
in
and
inc
mov
hlt
rcl
ret
bnd
daa
sbb
xchg
out
sti
mov
or
out
rcr
lods
fdivr
jp
xor
pushf
sbb
test
jp
retf
loopne
mov
or
jle
pop
fs
stos
mov
add
and
not
fnstenv
adc
aad
sbb
dec
dec
iret
or
lods
xchg
or
data16
ret
jmp
lds
(bad)
js
push
jp
imul
adc
fs
(bad)
mov
dec
push
pop
add
mov
shl
dec
imul
pop
fidivr
leave
out
dec
(bad)
les
jg
add
xor
xchg
xchg
adc
fild
movs
dec
out
or
sbb
adc
push
jns
dec
push
mov
inc
(bad)
or
adc
stos
stos
idiv
and
fistp
inc
sar
xchg
mov
loopne
dec
jmp
out
cmp
pop
jle
xchg
out
jne
aaa
aaa
add
dec
push
(bad)
out
mov
(bad)
loope
cmp
adc
sbb
(bad)
sbb
fs
mov
daa
adc
pop
dec
mov
pop
int3
xchg
mov
mov
icebp
ds
lea
sar
fdivr
lods
das
pop
or
mov
adc
cmp
cli
fstp
cmps
xchg
into
mov
jno
sahf
mov
movs
fsubr
lea
sti
and
sbb
and
(bad)
pop
dec
xchg
inc
cmp
test
sbb
std
cmps
fcom
aaa
cmp
pop
mov
cmp
fisttp
idiv
rcl
lods
fwait
mov
aaa
adc
mov
cmp
mov
mov
jne
ins
adc
mov
not
ret
js
adc
sub
sahf
xchg
dec
fdiv
adc
cmp
inc
pop
imul
mov
jg
cli
mov
adc
sbb
pop
out
(bad)
mov
clc
inc
mov
cmp
shl
lea
in
push
cmp
pop
aad
sub
sub
pushf
and
(bad)
jno
mov
dec
adc
in
xchg
mov
cmp
mov
pop
xchg
dec
push
jnp
dec
mov
(bad)
call
shr
lahf
adc
add
pop
shl
mov
push
inc
es
push
stos
mov
ja
xlat
adc
mov
xor
addr16
pushf
pop
mov
mov
fld
ss
jno
mov
mov
push
(bad)
leave
sub
inc
xor
mov
cld
xchg
push
les
xchg
and
mov
jge
add
add
adc
sub
dec
cmp
jnp
jmp
mov
popf
ins
jno
or
pusha
xlat
and
mov
and
fucompp
jae
or
repz
add
pop
icebp
pop
(bad)
repnz
add
adc
push
xlat
mov
inc
sub
enter
movs
aaa
jmp
jecxz
loop
push
push
in
fwait
lahf
movd
xor
and
enter
mov
mov
xchg
or
bound
test
test
stc
inc
pop
add
ins
adc
and
or
(bad)
(bad)
pop
push
or
jg
stc
mov
cmp
add
mov
movs
ds
(bad)
cli
icebp
add
jnp
push
int3
clc
pop
jl
cmp
(bad)
jmp
sub
aaa
cmp
jbe
cmc
cmp
stos
push
daa
(bad)
xchg
xchg
mov
xor
sahf
repnz
push
ds
jb
and
stc
mov
xchg
clc
lea
shl
inc
dec
pop
stos
out
(bad)
xlat
inc
in
pop
mov
cmp
push
or
mov
dec
movs
int
sub
sub
stos
test
out
or
jmp
pop
add
jmp
jns
imul
sbb
add
sbb
mov
xor
out
(bad)
pop
aaa
scas
or
pusha
repz
ret
mov
out
inc
xchg
jge
add
sub
in
popa
push
cmp
mov
shl
adc
out
mov
add
test
inc
adc
fbstp
js
ins
or
ror
addr16
aaa
repz
mov
mov
add
shl
xchg
jecxz
jnp
cmp
and
mov
popa
mov
jl
test
jbe
inc
pop
pop
repz
cs
pop
or
and
sbb
sub
arpl
jecxz
or
out
pop
seta
mov
dec
je
daa
ins
sub
adc
pop
mov
movs
rol
or
(bad)
fs
mov
lock
into
ror
push
jne
daa
daa
pop
in
out
cmp
pop
xchg
test
lods
and
xor
pushf
xor
mov
jnp
imul
pusha
cwde
sbb
xor
iret
(bad)
jl
cs
jge
shr
fdivr
lods
and
inc
mov
mov
mov
adc
aam
(bad)
(bad)
xchg
push
xor
inc
les
cmp
pop
test
push
je
xlat
test
arpl
(bad)
gs
out
jmp
cmp
fild
jae
inc
(bad)
or
jo
mov
add
(bad)
xchg
dec
xchg
repnz
dec
cmp
cwde
std
repnz
sbb
test
mov
outs
or
in
in
ret
sahf
sub
mov
xchg
sub
cmc
xchg
data16
les
or
movs
jg
clc
lods
pop
xchg
std
jle
mov
test
mov
inc
sbb
xor
push
outs
repz
std
sbb
jmp
adc
or
adc
fadd
xchg
sbb
in
stos
xor
xor
jp
cmc
cld
ins
push
and
push
aas
int
mov
retf
out
push
mov
jmp
mov
jb
add
lock
add
inc
adc
jecxz
mov
dec
(bad)
shl
div
mov
add
outs
cmp
stos
fsub
jnp
scas
xchg
mov
adc
rcl
jno
retf
mov
jns
sbb
retf
jmp
test
and
arpl
jae
shr
mov
sbb
xor
mov
cmp
(bad)
push
add
adc
add
push
lods
(bad)
cld
mov
adc
(bad)
jnp
test
fwait
inc
pop
mov
jge
cmp
add
dec
cmp
sar
das
mov
fs
xchg
cwde
sahf
mov
or
jo
fnstenv
movs
add
dec
outs
shl
and
pop
movs
cmp
or
repnz
out
loop
xlat
jb
mov
repz
mov
fndisi(8087
aas
sub
sahf
das
cmps
sahf
mov
cli
in
mov
or
push
je
mov
cli
mov
cmp
outs
movs
out
aas
pop
mov
inc
movs
mov
sbb
rol
jecxz
mov
mov
neg
xor
xor
or
pop
fiadd
sub
sub
aaa
and
call
imul
out
adc
mov
pop
dec
inc
inc
daa
dec
shl
into
xchg
dec
movs
xchg
test
mov
bnd
xchg
pushf
pop
test
dec
icebp
pop
shl
push
cmp
and
push
sub
inc
sub
lea
pop
ror
mov
cmp
push
or
dec
sbb
cmc
inc
jo
call
movs
mov
js
fdivrp
inc
mov
xchg
ss
push
test
sahf
jmp
adc
jmp
mov
and
cmp
sbb
sahf
(bad)
mov
sub
xchg
mov
cld
jg
shl
jmp
xlat
jnp
push
sbb
dec
les
pop
ror
call
repnz
ja
sahf
mov
mov
gs
dec
inc
cmps
pop
jb
rcr
ins
inc
xor
ret
into
ss
stos
lods
add
push
xchg
fwait
jp
ja
push
mov
or
ficom
inc
shl
imul
mul
outs
jle
or
cmp
dec
iret
mov
jle
pop
loopne
hlt
cmps
adc
jmp
dec
or
ret
not
(bad)
out
mov
mov
mov
add
stc
test
in
aam
bound
and
test
inc
ins
cli
ficom
push
retf
mov
test
aam
scas
dec
push
out
pop
cmps
adc
cmp
mov
cld
sbb
ja
es
arpl
mov
dec
adc
fnstenv
cdq
imul
shl
js
es
ds
(bad)
shl
shl
adc
mov
xchg
fcomi
pop
jne
scas
hlt
std
fimul
xor
(bad)
test
jge
dec
xchg
inc
and
push
mov
retf
fcom
cmp
mov
xchg
inc
mov
out
mov
ss
(bad)
fst
mov
add
xor
xor
(bad)
mov
inc
adc
lds
adc
enter
and
or
call
pop
lds
iret
push
mov
push
aam
sub
cmc
inc
push
fwait
mov
cli
jge
aas
mov
jl
mov
push
loop
sub
dec
imul
push
mov
in
xor
inc
iret
cld
dec
xor
stos
add
sub
aas
nop
jae
cli
(bad)
push
mov
rcl
dec
jge
pop
sub
cmps
pop
jp
inc
cld
dec
pop
add
inc
jmp
and
loopne
shl
icebp
hlt
add
add
mov
jge
add
test
outs
mov
xchg
push
inc
and
inc
xchg
push
out
jg
mov
into
xchg
addr16
retf
pushf
xchg
enter
out
xor
inc
imul
icebp
add
push
fld
or
inc
jo
dec
dec
mov
jmp
cmc
xor
ins
ins
pop
lock
and
mov
in
popa
imul
hlt
push
jno
(bad)
or
sbb
lea
xchg
popf
mov
mov
add
outs
repnz
in
aas
add
jecxz
(bad)
jp
sbb
mov
pop
push
mov
fisub
fist
sbb
xlat
inc
jnp
pop
sbb
fnstcw
mov
fcom
pop
inc
pop
add
sbb
ins
inc
and
scas
stc
shl
mov
das
imul
retf
arpl
out
movs
and
pop
dec
and
push
jae
xchg
mov
je
loopne
and
fstp
inc
dec
daa
sti
dec
dec
(bad)
pushf
stos
pop
or
cs
fmul
cmp
ds
or
and
sbb
pop
jle
mov
aas
mov
test
je
xor
inc
dec
xchg
mov
retf
sub
scas
pushf
cmp
movs
pop
push
adc
sbb
mov
test
pop
stos
mov
ins
xchg
popa
mov
aas
and
mov
rcl
jmp
mov
inc
gs
jge
sub
xchg
aaa
or
push
mov
gs
cmps
fist
mov
call
push
pop
iret
ret
loop
inc
loopne
outs
dec
sub
jns
pop
add
popf
add
hlt
das
or
int
xchg
icebp
mov
cmps
test
daa
icebp
iret
stos
(bad)
jecxz
xor
push
cmp
add
mov
(bad)
sbb
and
mov
dec
in
pop
cmp
dec
dec
mov
shl
mov
(bad)
retf
push
cmps
mov
cli
or
je
mov
xchg
mov
bound
mov
sub
arpl
out
add
(bad)
pop
movs
jmp
shl
adc
aas
or
mov
cmp
cmp
mov
out
pop
mov
imul
jmp
sahf
in
cmp
push
cmp
sbb
pushf
push
pop
pop
call
mov
push
and
jne
add
bound
xchg
mov
push
xchg
dec
dec
xchg
xor
sysenter
mov
and
test
mov
ds
xchg
mov
mov
div
iret
add
imul
sbb
ror
jg
push
mov
pop
aad
popf
adc
sub
sysenter
adc
xchg
jmp
inc
xor
neg
dec
jl
dec
pusha
pop
loopne
push
push
xchg
cwde
fs
(bad)
mov
lods
or
inc
xchg
fld
gs
xchg
idiv
(bad)
jbe
adc
sbb
jns
and
loope
cmps
out
cmps
sar
push
cmp
push
sbb
cmp
xor
retf
int3
fs
adc
dec
out
or
aad
dec
lock
(bad)
test
mov
pop
les
movs
xlat
push
je
jne
in
jo
ds
jle
mov
repnz
retf
int3
add
sub
and
cdq
cmp
cdq
pop
fwait
ja
sbb
dec
sar
(bad)
hlt
push
sub
pop
imul
jmp
sti
dec
lods
sub
out
jno
mov
push
mov
pop
imul
push
dec
out
pushf
fisub
in
pop
cmp
sahf
xor
add
pushf
push
jo
add
add
jmp
pop
xlat
cld
adc
mov
jno
push
sbb
cmp
mov
into
sbb
std
inc
pop
xchg
mov
mov
jg
dec
sbb
shl
aad
push
dec
dec
mov
add
push
dec
rcl
out
xor
mov
xor
fidivr
jno
jge
pop
inc
sub
lea
xchg
xor
dec
in
mov
dec
movs
(bad)
cli
repnz
or
(bad)
pop
dec
xor
clc
aad
add
call
popf
pop
dec
test
push
mov
shl
in
cdq
jp
int
dec
movs
test
mov
jo
sbb
stos
popa
fnstsw
jg
adc
cmp
add
in
xchg
and
out
out
mov
cmps
stos
daa
inc
dec
nop
add
inc
jo
clc
lea
push
push
pop
mov
repz
jns
test
jge
push
arpl
or
jg
cmp
dec
js
and
adc
in
sbb
dec
jl
sub
pop
call
jecxz
fstp
jl
and
sbb
inc
scas
loop
leave
push
add
in
xor
mov
push
cmps
loop
icebp
xor
es
bound
aam
pop
or
lahf
jne
in
mov
or
sub
clc
sub
xchg
stos
ret
mov
xchg
repz
xchg
sar
sbb
sti
ficomp
dec
out
add
mov
mov
lahf
fist
jb
aam
shr
dec
clc
sub
out
jae
pop
test
cmp
xchg
loope
jnp
ds
pusha
repz
mov
data16
sub
loop
jl
or
lds
addr16
push
or
lahf
xor
ret
cmp
inc
out
icebp
adc
push
cmc
test
int3
inc
xor
clc
or
xchg
add
je
lds
add
or
jl
(bad)
jae
out
jl
int
aam
add
setae
push
sbb
in
mov
jns
mov
mov
cmp
jo
data16
gs
retf
loope
mov
adc
pusha
or
fcmovnb
jg
js
xchg
push
neg
ret
addr16
mov
and
lds
scas
dec
mov
clc
sbb
nop
cmp
popa
jmp
xor
ja
fnsave
push
sbb
mov
leave
mov
dec
dec
aad
adc
sahf
lods
stc
and
out
mov
xor
mov
pushf
popa
jb
pop
jmp
xor
push
mov
and
dec
rol
add
outs
pop
xlat
add
xor
jmp
fild
(bad)
test
mov
inc
pop
inc
pusha
mov
push
shl
in
out
popa
jmp
xor
adc
pusha
dec
adc
imul
push
ds
int3
test
cmp
mov
sub
in
xor
sbb
pop
sub
int3
loope
cmp
data16
xchg
sar
mov
sub
cmps
(bad)
(bad)
aad
xor
int
imul
ret
sub
in
mov
jmp
pop
xor
fs
mov
(bad)
fisttp
int3
xor
and
xor
jle
jns
and
(bad)
fsubr
pop
adc
adc
adc
xchg
outs
popa
das
mov
out
jnp
test
stos
push
mov
and
pop
stos
fstp
mov
dec
add
adc
movs
or
push
jl
retf
nop
add
rcr
outs
fild
out
mov
mov
stc
lods
add
inc
mov
or
jnp
lea
mov
leave
test
loope
mov
jno
mov
mov
es
data16
dec
cmp
mov
pushf
fidivr
sbb
out
scas
jbe
jle
xchg
jnp
xor
inc
xchg
cmp
das
sub
pop
ficom
call
add
in
inc
fcom
pop
push
sbb
mov
pop
dec
outs
inc
fmul
or
call
int
dec
sar
fmul
and
std
inc
mov
aam
adc
cmp
sbb
jns
jbe
ret
mov
mov
fstp
mov
bound
pusha
mov
jl
(bad)
ds
xchg
pop
lea
push
cli
xor
xchg
ins
enter
mov
xchg
pop
cli
or
pop
inc
js
push
mov
pop
outs
pop
pop
inc
and
push
dec
push
jg
sub
fwait
movs
in
or
(bad)
xlat
aam
xor
inc
fcomp
imul
jb
add
test
fimul
fnstsw
imul
je
add
push
(bad)
pop
adc
cmp
test
movlps
daa
mov
mov
data16
xor
aaa
xchg
xchg
mov
jnp
scas
lods
stos
ds
cli
mov
and
aad
(bad)
(bad)
sub
mov
dec
cmp
out
xchg
xor
cmps
add
scas
inc
mov
neg
push
test
mov
add
mov
pop
push
push
or
sub
jg
leave
jno
jae
pop
stos
and
mov
jb
add
les
gs
sub
in
stc
ss
dec
mov
dec
js
inc
push
outs
mov
jle
js
add
xlat
pop
pop
cmp
push
xchg
cmp
or
pop
jbe
jo
repnz
xchg
dec
mov
xchg
jnp
inc
push
mov
cmps
pop
push
jle
push
cmp
loope
cdq
push
add
(bad)
mov
jle
out
bound
enter
pop
xor
hlt
jmp
mov
mov
adc
ds
mov
repz
aas
mov
jb
sbb
jo
loopne
pop
hlt
adc
rcl
pop
loope
popa
dec
xor
push
enter
dec
push
mov
mov
and
fsubr
test
in
mov
pusha
pusha
scas
imul
retf
pop
sbb
stos
(bad)
mov
imul
dec
cmp
lea
cli
xor
add
jp
neg
mov
and
imul
xor
cld
mov
adc
push
cmp
clts
or
mov
(bad)
push
sub
not
xchg
add
js
sbb
xor
jns
cmc
xchg
fxch
mov
xchg
and
shl
out
call
test
cdq
(bad)
nop
dec
popa
shr
pop
sahf
sbb
aaa
pop
(bad)
jbe
in
cmp
aas
stos
and
and
mov
mov
sub
call
cmc
test
call
aas
or
loope
jno
cdq
and
jns
dec
and
jbe
sbb
jecxz
popa
imul
pop
adc
cmp
add
and
jno
push
je
movs
and
or
ja
loop
xlat
mov
mov
or
push
sar
xchg
xor
jno
jnp
mov
mov
sahf
adc
enter
jmp
or
rcr
xor
inc
sub
(bad)
dec
jle
outs
pop
nop
adc
adc
test
push
mov
out
fidivr
mov
push
sbb
sbb
(bad)
lahf
jbe
adc
pop
and
js
leave
inc
jecxz
lods
lods
test
popf
mov
cmps
xchg
jg
inc
add
mov
xchg
enter
mov
xor
xchg
jge
xchg
test
call
(bad)
jmp
test
call
xor
adc
rol
in
mov
cmps
dec
sub
push
js
stc
fimul
sbb
loopne
inc
aaa
xchg
jge
adc
sub
popf
push
pop
es
push
add
test
(bad)
fiadd
sub
xchg
jg
sub
call
cwde
inc
xlat
add
xor
popf
sar
mov
aaa
jecxz
fs
sub
inc
and
cmp
clc
rcr
lea
push
loope
adc
jb
and
inc
or
lea
test
outs
call
xchg
ror
pop
sbb
cmc
cli
adc
dec
sbb
stos
or
sbb
rcr
sbb
out
xchg
ficomp
adc
cmps
pop
movs
sti
and
xchg
xchg
mov
(bad)
test
loop
or
dec
jmp
or
repz
xchg
push
inc
mov
xor
in
push
jo
ins
jbe
(bad)
aad
mov
mov
mov
and
mov
and
pop
pop
pop
out
retf
add
mov
mov
jmp
pop
pushf
add
mov
not
inc
or
cmps
xchg
loopne
inc
das
xchg
mov
ins
sub
call
xchg
cmp
mov
es
dec
les
or
sbb
add
mov
lock
sar
test
repz
stos
mov
xor
sub
sub
(bad)
jmp
pop
mov
cs
mov
push
(bad)
ins
retf
gs
xchg
push
cli
(bad)
pop
and
mov
mov
cmps
neg
adc
mov
in
mov
push
inc
xor
cli
icebp
stos
cmc
dec
push
jge
xchg
add
sub
cmp
imul
cmp
arpl
pop
push
hlt
ja
js
push
sub
hlt
pop
scas
jp
(bad)
push
call
mov
mov
adc
loope
jae
pop
cmc
mov
cmp
iret
nop
sbb
shl
mov
stos
stos
mov
arpl
scas
aam
or
inc
jmp
cmp
mov
cmps
mov
hlt
ds
push
punpcklbw
sbb
dec
mov
cli
fnstenv
adc
mov
push
(bad)
push
push
pop
mov
and
inc
out
add
pushf
mov
sar
and
add
push
cmp
or
jle
movs
fs
ins
jmp
fisttp
mov
in
jnp
hlt
ss
mov
pop
or
mov
enter
rol
sub
pop
pop
(bad)
cs
pause
pop
mov
pop
(bad)
sbb
push
or
call
inc
sbb
push
lock
inc
add
dec
into
shl
push
mov
call
sar
mov
cld
mov
mov
sub
gs
fadd
fisubr
(bad)
imul
cmp
dec
mov
mov
int
(bad)
stos
loop
dec
pop
ins
movs
frstor
cmps
dec
cmp
xchg
mov
call
loop
xor
push
xchg
sbb
jmp
movs
or
or
and
pop
pushf
mov
call
inc
ins
cs
sbb
add
icebp
retf
or
sbb
nop
mov
add
pusha
jmp
jns
clc
mov
xchg
lahf
xchg
in
popa
adc
or
iret
sbb
scas
sti
add
nop
cli
sub
xor
push
jne
dec
ss
dec
iret
jnp
movs
(bad)
les
bnd
shl
jecxz
or
xor
xlat
dec
fdiv
fstp
mov
and
mov
adc
inc
sar
clc
sbb
lock
ins
jg
sub
mov
sub
or
(bad)
pusha
pushf
icebp
inc
or
cmp
cwde
pop
aas
pop
mov
test
or
outs
sahf
lahf
stos
out
bnd
xchg
mov
mov
mov
out
adc
sub
mov
je
movs
popf
shr
outs
in
cmp
cmp
push
outs
inc
nop
mov
push
fdiv
mov
movs
in
jmp
pop
ins
adc
cwde
aam
mov
mov
cmp
dec
cmp
fsubrp
xchg
outs
out
daa
xlat
fbstp
repnz
push
scas
xor
adc
inc
jmp
sti
movs
out
inc
fcmovnb
mov
fiadd
outs
addr16
and
pop
fcomp
test
sbb
xor
test
xchg
mov
xchg
leave
jns
cmc
in
and
js
out
mov
dec
mov
sub
inc
mov
gs
in
add
mov
jmp
and
lahf
inc
movups
adc
xchg
jle
add
fsub
hlt
lea
stc
push
push
xor
push
cwde
dec
ror
cld
loop
popf
pop
int
les
inc
fiadd
adc
rcl
das
mov
inc
jb
fidivr
cmp
push
and
sbb
xchg
fdivr
push
push
dec
test
xlat
mov
jmp
bound
inc
fnstcw
xchg
dec
pop
nop
or
retf
js
iret
mov
push
fiadd
adc
ds
xor
(bad)
sub
cwde
mov
test
stos
test
push
cld
and
add
call
pop
push
out
test
and
fdivr
fs
(bad)
(bad)
mov
adc
inc
and
rol
mov
loop
sub
inc
xor
(bad)
pop
lods
dec
adc
sbb
lock
dec
daa
mov
leave
push
test
and
pop
sbb
ja
mov
and
jmp
test
add
dec
and
lods
leave
sbb
xchg
aad
sahf
and
inc
mov
movs
pop
movs
xor
cmp
jae
movs
iret
pop
add
push
sbb
mov
jmp
outs
xchg
arpl
popa
push
ss
loope
mov
test
in
movs
push
ret
fs
in
push
add
movs
test
pop
mov
dec
enter
repnz
or
add
sub
cmp
or
push
in
push
mov
mov
xchg
stos
xchg
call
push
fwait
or
in
cwde
jp
xchg
adc
ret
lahf
stos
cmps
scas
movs
push
movs
pop
inc
mov
cmps
mov
ja
out
jp
in
jp
std
jle
loop
sbb
push
push
or
mov
test
imul
(bad)
and
mov
cmp
jb
pop
jb
ret
push
jg
idiv
clc
inc
arpl
push
push
mov
xchg
ficomp
ror
jl
dec
or
aad
bound
add
pop
div
das
(bad)
jg
or
mov
(bad)
daa
inc
mov
loope
jo
and
test
jg
cmps
imul
xor
fnsave
adc
mov
push
out
in
movs
mov
push
jb
add
repnz
call
(bad)
not
sbb
outs
push
lds
jo
pop
jp
jne
inc
push
mov
add
cmp
gs
int
pop
in
mov
jmp
cmp
sbb
fwait
cwde
and
xchg
int3
jb
lock
fst
in
mov
call
lods
push
aad
ja
push
stos
mov
mov
dec
cmp
sahf
pop
ror
ror
and
cli
bound
das
xor
mov
mov
add
mov
in
push
push
imul
dec
dec
div
jp
hlt
inc
mov
ret
into
jne
mov
add
jg
xchg
mov
jl
inc
mov
ficomp
jne
mov
push
jge
rol
rcr
(bad)
mov
dec
cmps
xchg
dec
add
stos
and
inc
(bad)
dec
dec
mov
rcr
jp
lods
cmp
fimul
push
mov
xchg
mov
dec
cld
js
out
inc
std
jne
or
pop
popa
repz
mov
addr16
dec
inc
aas
shl
sbb
mov
clc
cdq
inc
(bad)
inc
xchg
lods
mov
xor
mov
sbb
mov
cwde
les
loope
movs
test
dec
movs
pusha
dec
lods
jnp
pop
aad
sub
dec
inc
mov
inc
call
call
push
fcmovu
ret
cmp
pop
mov
stos
push
mov
js
stos
push
ss
call
fcmove
sub
cmps
add
gs
fwait
xchg
fst
sbb
mov
add
ds
mov
jno
mov
out
jbe
inc
xor
ss
cmc
jge
adc
arpl
shr
fcmovnbe
adc
ja
and
out
out
sbb
dec
lods
mov
cmc
iret
inc
xor
cmp
not
xor
xor
xchg
pop
sbb
dec
jp
test
add
pop
mov
mov
call
push
pop
mov
ss
mov
mov
jmp
pushf
push
sbb
push
test
pop
dec
fimul
mov
sbb
add
mov
imul
aaa
inc
call
pop
movs
fwait
cld
popa
dec
pop
sbb
xor
rol
movs
pop
xchg
test
mov
dec
les
and
mov
push
in
add
pop
xor
mov
mov
bound
out
pushf
es
cdq
inc
mov
test
out
es
jp
clc
mov
fnstsw
je
sbb
pop
std
xchg
jg
iret
dec
jmp
dec
mov
dec
cmp
int
sbb
jnp
loopne
in
xor
jecxz
fadd
push
dec
pop
jno
(bad)
fadd
cli
mov
nop
popa
out
xchg
jmp
pop
dec
pop
movs
in
or
jl
inc
icebp
in
gs
shl
jns
in
adc
fiadd
aaa
xchg
xchg
jns
icebp
imul
pop
jl
enter
jnp
les
retf
ror
adc
and
jecxz
into
(bad)
adc
xchg
or
jmp
fdivr
mov
leave
daa
mov
out
frstor
int
inc
mov
loopne
into
adc
nop
es
loope
cld
fs
ja
call
fild
jecxz
cmps
into
shr
test
scas
xchg
cli
ins
inc
add
xor
sbb
sbb
fdiv
jg
loop
and
test
jg
sbb
xchg
cmp
clc
loop
pop
or
sub
outs
mov
sti
xchg
mul
xchg
adc
lods
addr16
fistp
ret
rcr
adc
ins
pop
xlat
mov
js
push
fld
xchg
pop
je
cmps
mov
xor
int3
xor
cdq
pop
cs
dec
jnp
mov
add
test
pop
popa
mov
add
xchg
pop
mov
hlt
jno
movs
popf
jge
jp
sbb
push
movs
and
xor
push
ret
fcmovb
test
mov
sbb
xchg
movs
mov
ficom
in
pusha
fsub
movs
neg
jp
adc
sbb
mov
xor
add
cmp
inc
clc
fucomi
adc
mov
mov
jo
test
or
test
mov
or
sbb
sbb
jg
out
inc
hlt
mov
fdiv
adc
idiv
mov
sbb
adc
loopne
mov
xlat
rcr
out
push
scas
jbe
cmp
pop
aam
cmps
cdq
(bad)
and
sub
mov
add
jno
mov
sub
addr16
inc
cld
dec
das
popa
sar
pop
push
jb
inc
sub
loop
(bad)
test
xchg
movs
adc
add
pcmpeqw
push
sub
les
adc
jle
sub
sahf
xchg
shr
popf
xor
mov
or
lea
(bad)
mov
dec
mov
hlt
xchg
add
pop
mov
std
inc
jmp
mov
sahf
and
sub
mov
push
cmp
je
dec
aaa
jp
sub
ror
sbb
or
jb
mov
out
aam
jbe
pop
sub
xchg
jge
mov
stc
(bad)
shr
inc
push
scas
cmp
add
xor
loope
jge
idiv
and
sub
rcr
push
xor
outs
shr
cdq
ins
(bad)
push
ret
clc
sbb
and
inc
push
dec
mov
fdivr
sbb
int
dec
je
pop
mov
mov
or
push
movs
xchg
dec
inc
in
pop
stos
cmp
out
jnp
mov
pusha
stos
mov
xchg
retf
rcl
call
neg
jns
adc
xor
jb
dec
movs
retf
sbb
hlt
(bad)
and
in
sub
add
imul
mov
adc
xor
ret
cmp
xor
in
movs
xor
mov
inc
call
les
mov
and
hlt
push
rol
push
std
inc
aad
iret
xor
jmp
jb
xchg
xchg
jge
pop
out
and
scas
mov
test
dec
je
enter
sbb
xor
out
mov
jmp
inc
inc
add
jmp
add
cmps
jmp
pop
cmps
das
cmp
(bad)
test
aam
cmc
stos
jle
sub
aaa
sub
mov
fwait
inc
fnstsw
andnps
ss
(bad)
push
repnz
call
or
jle
cmp
popa
and
mov
frstor
add
xchg
pop
adc
jmp
idiv
aas
xlat
test
pop
(bad)
pop
call
pop
dec
mov
fidivr
inc
repz
sub
adc
out
scas
(bad)
ss
xchg
cmp
or
cmc
dec
cmp
mov
cli
loop
ret
inc
aas
cld
addr16
jecxz
js
xor
fmul
mov
stos
fwait
enter
inc
push
adc
add
jo
stos
or
cmp
xchg
clc
inc
jl
push
push
push
xchg
cvttps2pi
sub
add
xchg
sahf
stos
lods
pop
add
dec
xor
pop
pop
jg
push
mov
jno
or
dec
cmps
(bad)
fadd
jecxz
bound
jns
cmc
(bad)
jo
xlat
jno
(bad)
loop
mov
mov
ja
mov
and
jnp
(bad)
test
in
or
out
push
stos
repnz
imul
lods
xor
test
sub
into
ret
add
mov
xor
push
jmp
add
push
xor
and
push
mov
inc
mov
inc
imul
div
cmp
stos
xlat
push
push
jmp
inc
cmc
push
and
adc
push
(bad)
or
dec
push
stos
mov
sub
cli
jnp
shr
pop
adc
inc
pop
jg
popa
push
lods
lods
popf
mov
pop
out
dec
(bad)
int3
xor
pop
icebp
cmps
add
add
hlt
leave
sub
movs
dec
jno
inc
dec
ins
mov
int3
arpl
fidiv
dec
(bad)
neg
dec
add
xchg
das
clc
lahf
popa
jl
mov
(bad)
in
mov
icebp
jbe
popa
into
lods
scas
push
pop
inc
dec
repz
sub
ss
hlt
das
mov
cmp
mov
xchg
lods
aam
popf
cwde
mov
mov
mov
sbb
arpl
sub
mov
push
mov
cli
mov
pop
mov
mov
sar
sub
mov
pop
push
mov
pop
xchg
xchg
retf
add
xor
test
(bad)
jp
dec
jbe
mov
dec
shr
ins
pop
push
scas
xor
sbb
loope
xor
pop
call
mov
aam
scas
xchg
test
dec
retf
shl
mov
fidivr
mov
xchg
icebp
or
push
add
add
cmp
mov
mov
fimul
fxch
ins
retf
stos
cmps
call
and
fdiv
jg
daa
ins
cwde
mov
or
mov
push
and
mov
(bad)
lods
xchg
repnz
ret
into
pop
mov
aas
fwait
outs
imul
imul
or
adc
mov
stos
inc
(bad)
cmps
push
mov
cli
jns
jmp
jl
(bad)
cmp
mov
retf
(bad)
scas
push
aad
sbb
das
jecxz
mov
and
cmps
lds
inc
push
cli
push
scas
ret
jmp
mov
repz
adc
movs
push
fsqrt
clc
outs
repnz
jg
mov
cwde
adc
sub
das
pop
jl
cld
mov
mov
or
aam
scas
sbb
test
ror
xchg
fst
sub
test
push
retf
jbe
fimul
leave
mov
lods
add
push
mov
or
mov
xor
jne
pop
jmp
mov
xchg
push
addr16
les
mov
xor
jg
cmps
sahf
(bad)
adc
jno
in
add
ins
mov
shr
jo
push
add
aaa
push
repnz
outs
mov
jnp
es
push
ins
scas
jle
jo
retf
dec
pushf
sub
stos
scas
out
daa
or
imul
in
loop
pusha
sbb
or
and
jmp
jl
add
jl
stos
mov
loop
out
xor
or
test
dec
inc
sub
push
dec
imul
in
stos
mov
sti
cmp
jp
xor
icebp
ins
gs
ror
(bad)
aam
mov
xchg
jne
bound
std
nop
pop
pop
jp
cld
call
hlt
xlat
in
dec
ja
pop
sbb
mov
push
add
mov
push
or
mov
jns
mov
mov
and
or
add
adc
ds
imul
xchg
arpl
or
retf
shl
jno
sahf
fbld
loope
sub
and
add
xchg
cmc
cld
ja
sub
mov
xor
ins
sub
sub
test
lock
jmp
movs
push
int3
xchg
sub
and
adc
(bad)
ror
sub
jmp
loope
fwait
mov
jne
cmp
leave
push
mov
mov
jmp
jl
dec
mov
mov
adc
jmp
movs
out
inc
rcr
dec
cmp
sub
test
(bad)
pop
cs
lods
cmp
daa
mov
mov
leave
sti
jbe
push
sbb
fist
cwde
clc
push
sub
add
push
out
sar
test
cmp
adc
mov
scas
jl
xor
xchg
test
xchg
aaa
into
sub
into
fcomp
xchg
cmps
xlat
call
cs
sub
test
xchg
ds
cmp
cmp
sti
adc
cmp
stc
add
push
cmps
add
(bad)
in
or
cmps
(bad)
sbb
pop
push
aas
push
push
out
addr16
fistp
jmp
test
xchg
cli
cmp
shr
sar
and
ins
xchg
dec
xor
cs
add
in
adc
pop
jo
aam
sbb
enter
dec
mov
movs
out
or
fwait
ror
mov
nop
mov
add
jns
repz
hlt
xor
push
push
add
jmp
popa
mov
lods
xchg
cmp
pop
lods
imul
repz
pop
retf
aad
xchg
cs
stc
in
mov
add
add
sub
mov
push
in
inc
xchg
(bad)
jge
cli
fldcw
(bad)
das
and
adc
pop
cmp
inc
stos
fld
loop
aaa
fwait
stos
push
jb
or
jmp
(bad)
mov
adc
cmc
neg
lods
push
xchg
push
sbb
sub
sbb
ror
jbe
push
stos
(bad)
int
imul
jl
jecxz
inc
es
pop
popa
arpl
or
pop
call
or
aas
push
imul
sbb
pop
add
rol
xor
mov
pop
add
clc
cmp
sub
jo
loopne
ds
in
inc
mov
xchg
xchg
cmps
mov
push
arpl
sbb
mov
mov
xchg
call
mov
mov
cmp
rcl
sub
int
dec
jecxz
add
and
test
inc
repnz
int
xchg
loope
adc
push
adc
dec
mov
and
es
jnp
movs
in
pop
call
aam
mov
adc
xchg
stc
(bad)
scas
ja
stos
mov
mov
int3
jg
adc
mul
outs
icebp
je
retf
cmp
imul
out
pop
aaa
jecxz
or
and
sub
inc
dec
mov
loop
or
aaa
inc
ret
inc
stc
push
and
ret
fimul
ins
and
or
ins
nop
imul
mov
push
mov
pop
icebp
dec
pop
xchg
outs
mov
movs
xor
mov
sahf
adc
jb
cwde
shl
push
mov
sub
jb
rcl
mov
jne
sub
je
or
adc
cmp
push
jae
sub
mov
rol
mov
inc
ja
fwait
hlt
mov
bound
les
mov
std
pop
call
xchg
int3
or
dec
jnp
movs
clc
loopne
icebp
retf
xlat
gs
pop
out
aam
out
outs
mov
(bad)
dec
enter
mov
mov
mov
dec
mov
push
iret
test
lods
xlat
or
aaa
cmp
or
enter
and
adc
rcl
cmps
das
or
lahf
aas
jmp
sub
retf
xor
xchg
jp
and
mov
test
icebp
dec
jno
mov
mov
out
cwde
and
shl
xor
cmp
stc
js
aas
and
aad
scas
pop
dec
xor
mov
inc
aad
jmp
adc
and
push
gs
cmp
retf
push
cli
pop
push
sbb
jo
add
adc
loope
iret
retf
data16
or
call
jecxz
outs
ret
dec
sub
js
push
ret
retf
xor
pop
imul
add
adc
adc
ds
inc
xor
lods
mov
xor
adc
les
lods
sahf
dec
imul
adc
lods
xchg
sbb
imul
out
jmp
cmp
cmc
loop
cmps
push
cmp
or
jmp
mov
cmp
cdq
jmp
lea
ss
lods
movs
sub
mul
xor
push
jne
sti
adc
jl
jle
rol
cmp
sbb
mov
ret
mov
in
lock
sub
mov
xor
or
xchg
mov
mov
jle
mul
lock
and
pop
xor
jne
cdq
cmp
scas
(bad)
cdq
movs
test
xor
xor
lods
and
pop
cmc
das
jl
or
ins
xchg
ins
jnp
pop
jbe
jmp
mov
sub
pop
sub
xchg
push
bound
adc
es
add
or
les
lds
mov
xchg
jno
and
mov
and
int
pop
mov
xchg
mov
xlat
(bad)
imul
or
cwde
xor
ror
push
and
add
test
or
shl
and
(bad)
cmp
add
push
push
push
jle
pop
pop
ins
ds
repnz
add
rcr
iret
dec
in
mov
(bad)
mov
or
sets
pop
das
shl
add
mov
or
pusha
push
movs
int3
and
enter
add
ins
mov
or
jne
push
push
pop
jge
dec
xchg
mov
jae
add
pop
add
cwde
mov
jnp
jnp
or
add
inc
dec
(bad)
fldcw
cmp
sub
aad
push
fdiv
fnstcw
adc
scas
ins
js
sbb
into
pop
in
cmps
dec
daa
shr
(bad)
ja
scas
ffree
xchg
cmps
arpl
popf
xchg
push
and
ins
aad
or
jecxz
shl
sub
fucomp
xor
adc
call
sbb
jbe
aas
out
test
ficom
leave
lea
mov
out
test
xchg
push
mov
lahf
push
(bad)
ss
cs
sub
push
mov
jo
mov
inc
mov
add
mov
mov
cmp
dec
xor
call
jp
push
pop
aad
xchg
int3
push
and
js
jns
add
adc
bound
mov
ja
xor
dec
mov
jp
mov
xor
mov
or
mov
aad
shl
stos
push
inc
es
jge
or
cld
push
fs
mov
push
xlat
out
xchg
dec
ja
std
sahf
js
or
int3
test
sar
cmp
rol
or
cmp
fcomp
nop
psubb
inc
dec
(bad)
sahf
and
sub
into
cmp
imul
mov
fs
retf
mov
push
mov
hlt
push
fdivr
cli
scas
scas
jmp
jle
call
stos
mov
or
repz
ja
mov
shl
adc
or
out
sbb
das
cmp
retf
jnp
repnz
loopne
sub
shl
mov
ins
cmp
lods
push
scas
movs
dec
(bad)
lahf
mov
cmps
xchg
jmp
cmp
retf
and
retf
cmp
daa
imul
xchg
and
sbb
stos
ror
fs
das
nop
push
mov
xchg
jp
das
int
fnclex
pop
or
sub
sub
pop
in
mov
mov
and
aaa
leave
test
(bad)
or
mov
cmp
sahf
(bad)
rcr
lahf
sbb
add
int
sti
push
sbb
sub
pop
lods
call
mov
sti
adc
adc
inc
sbb
or
inc
adc
push
add
adc
inc
jmp
clc
or
inc
adc
xchg
nop
sub
imul
and
push
addr16
push
loope
loopne
pop
mov
or
mov
inc
jb
xor
das
mov
push
je
js
test
sub
jnp
packuswb
mov
xchg
nop
sub
stos
fsub
mov
dec
or
and
popf
dec
ins
out
add
mov
xchg
or
imul
or
pop
sbb
popa
add
jecxz
xchg
fidiv
push
rcr
or
leave
add
xlat
dec
rcr
test
jb
not
push
in
fidiv
movs
in
jae
aam
dec
pop
call
fwait
(bad)
cwde
mov
loop
push
popf
scas
push
in
fisubr
pop
pop
call
pop
gs
or
cmp
scas
imul
addr16
push
push
xchg
jb
or
xchg
xor
dec
sbb
push
pop
hlt
outs
es
lods
mov
pop
retf
cmc
mov
sub
mov
idiv
mov
mov
out
pop
xor
(bad)
fsub
imul
mov
inc
(bad)
addr16
xor
leave
push
and
popa
dec
xchg
ficom
adc
test
pushf
inc
add
mov
inc
push
ja
das
mov
cwde
or
pop
inc
mov
inc
jae
dec
fs
cli
inc
test
sub
and
nop
and
jbe
out
pushf
in
dec
xor
mov
std
push
mov
mov
xor
js
call
jle
popa
adc
jns
mov
adc
mov
sti
mov
enter
push
nop
push
mov
adc
scas
inc
mov
pop
test
or
pop
jnp
ret
lods
outs
idiv
add
inc
xor
cmp
sbb
mov
sbb
inc
or
lahf
(bad)
popf
push
and
inc
fwait
movs
pop
cmp
mov
inc
adc
or
fiadd
rcr
pop
lock
push
sub
leave
mov
test
xor
inc
test
jo
or
mov
and
add
pop
jl
sub
jg
pop
retf
mov
mov
mov
fwait
cmp
jle
mov
out
pop
cli
or
fisub
dec
jle
out
and
pop
push
cmp
adc
pop
inc
shr
ret
xor
out
and
sbb
inc
dec
cmp
and
enter
jg
xchg
jge
mov
xchg
push
(bad)
mov
outs
ins
sub
(bad)
ins
outs
cmp
repz
call
dec
xor
xchg
jae
jg
movs
and
(bad)
shl
xchg
add
add
out
mov
sub
inc
jne
inc
icebp
add
and
jp
sahf
sbb
stos
add
pop
aam
mov
push
sbb
stos
hlt
mov
mov
jns
test
xchg
mov
inc
jns
inc
mov
bound
or
cmps
int3
arpl
(bad)
jo
adc
rcr
dec
push
jmp
xor
into
and
push
test
mov
cdq
jo
push
pop
dec
rcr
push
comiss
ret
out
arpl
test
or
fs
repnz
jnp
jmp
cmp
rcl
retf
call
ror
(bad)
xchg
cmp
pop
enter
or
push
shl
ja
mov
push
out
push
inc
pop
pop
js
(bad)
scas
cmp
iret
push
xor
lods
adc
xchg
pop
adc
jnp
push
dec
xchg
sub
push
mov
pop
mov
inc
mov
sub
fbld
dec
mov
fmul
xchg
push
scas
mov
aad
jge
retf
sub
cmc
or
pop
dec
mov
or
push
sbb
xchg
arpl
loopne
xor
in
sbb
adc
std
cwde
push
xchg
mov
test
adc
repnz
fisttp
call
int3
cli
out
movs
nop
cmc
jnp
out
inc
in
dec
mov
sbb
inc
mov
(bad)
mov
mov
mov
pop
(bad)
cmp
dec
ds
and
mov
or
pop
jb
call
mov
ja
pop
clc
and
jmp
inc
sbb
outs
icebp
neg
iret
sub
fistp
inc
test
push
sahf
mov
xchg
aas
movs
mov
cmp
dec
sbb
add
pop
imul
cwde
dec
dec
adc
mov
lds
mov
stos
leave
in
sahf
cmc
or
dec
pop
push
mov
xor
and
xor
retf
out
clc
(bad)
out
mov
mov
add
(bad)
cmc
xor
aam
or
imul
mov
stos
inc
lea
jnp
xchg
cmps
push
jge
sub
inc
shr
movs
mov
pop
out
adc
in
inc
mov
jns
in
clc
sbb
sub
cmp
xor
xchg
gs
call
xchg
xor
inc
pusha
aam
xchg
jp
jge
and
dec
jge
lds
daa
adc
or
and
dec
sbb
jmp
dec
out
inc
shl
mov
das
dec
mov
lods
sub
push
cmp
push
das
mov
inc
repz
aaa
xlat
jg
push
aad
int3
jmp
cs
into
or
inc
push
pop
mov
jecxz
mov
mov
mov
push
pop
add
rcr
sub
sub
bound
cmp
sbb
push
(bad)
scas
std
mov
dec
fnclex
ja
inc
pop
shl
jp
and
fdivr
cmp
jp
push
jo
inc
movs
mov
cmc
mov
inc
push
fimul
lea
dec
mov
xor
loopne
loop
adc
dec
push
cdq
adc
push
cmp
dec
arpl
stos
fild
ret
js
or
jmp
mov
mov
mov
mov
adc
inc
push
es
pop
int
mov
repz
dec
movs
jno
jae
shl
int3
retf
jns
sub
mov
add
movs
retf
movs
daa
xchg
jge
mov
cwde
bound
into
inc
(bad)
les
mov
dec
cld
stc
stos
adc
jp
fldcw
push
lods
push
fst
mov
push
adc
jle
cmp
mov
stos
in
movs
jb
push
sbb
cdq
lds
stc
jne
jmp
loope
cdq
call
ficomp
retf
ss
ficomp
mov
inc
push
and
mov
sbb
popa
scas
jmp
inc
(bad)
mov
and
xor
outs
mov
jmp
jecxz
test
jnp
mov
fsubr
xchg
fist
jle
cmp
js
outs
jnp
push
loope
xchg
push
sub
sub
xchg
mov
mov
test
iret
iret
lods
rol
scas
or
sub
maxps
mov
mov
mov
dec
pop
in
retf
arpl
mov
stc
mov
xchg
xor
cmps
inc
jle
dec
mov
or
xchg
cdq
ret
inc
mov
outs
nop
jmp
and
retf
push
mov
push
adc
bound
inc
in
in
cmp
xor
jmp
icebp
cmp
ja
pop
pop
mov
mov
cdq
jbe
imul
stos
dec
mov
inc
ficomp
jg
pop
hlt
pop
cs
adc
mov
cli
mov
push
push
sahf
sbb
xchg
xchg
stc
mov
jecxz
push
(bad)
mov
or
push
sar
xor
(bad)
cmp
pop
pop
sahf
(bad)
mov
scas
lea
(bad)
ficomp
push
mov
shr
out
adc
sbb
cmp
aad
mov
jmp
in
sub
aaa
dec
mov
sbb
aas
repz
movs
loope
mov
sbb
jge
jno
and
inc
aaa
loopne
outs
imul
mov
fldcw
lods
aaa
push
out
pop
jecxz
xchg
je
jns
add
sub
aad
push
push
mov
test
mov
adc
sub
cld
inc
jge
leave
dec
popa
push
int
and
mov
cld
inc
dec
pop
les
dec
loopne
dec
pop
jl
aad
jae
mov
mov
ss
(bad)
xor
ins
jecxz
or
push
jns
(bad)
into
fwait
cmc
cmps
mov
dec
lods
mov
ret
(bad)
jbe
aas
jge
inc
add
aas
mov
xchg
push
mov
fist
or
mov
in
sahf
mov
loope
ret
(bad)
popf
fwait
sub
cmps
jge
sub
frstor
(bad)
sbb
in
push
nop
mov
cs
lods
je
push
mov
inc
test
mov
stc
out
push
stos
mov
sti
loope
push
rol
leave
sub
ficomp
or
fmul
out
mov
sbb
retf
sahf
mov
inc
ja
add
pop
imul
mov
push
loopne
je
movs
xor
(bad)
repnz
out
jge
sbb
loope
xchg
push
sub
or
sub
out
mov
sbb
sbb
or
and
inc
push
xchg
mov
rcl
stc
mov
and
iret
test
mov
stos
test
xor
sub
sub
sub
(bad)
jl
icebp
into
mov
fstp
dec
cmp
jo
adc
cdq
push
adc
pop
das
in
push
mov
lods
(bad)
jle
out
cdq
mov
stc
loopne
popf
aaa
jmp
popf
std
jnp
in
sahf
jns
scas
and
xor
out
ds
retf
pop
loop
sub
ret
in
stc
push
sub
sub
lds
jo
shr
mov
std
push
call
sub
mov
jle
jecxz
sbb
xchg
es
dec
push
mul
mov
add
cdq
xor
repnz
int3
ds
js
scas
scas
jnp
sub
pop
mov
lea
and
xor
je
adc
(bad)
stos
xchg
push
pop
xor
or
outs
sub
arpl
stos
inc
repz
or
in
fidiv
aad
shr
aas
(bad)
fld
mov
dec
jno
inc
mov
int
mov
push
jne
call
pop
mov
push
dec
(bad)
cmc
lds
jns
fstp
jo
jecxz
mov
push
pop
std
mov
jmp
jno
fdiv
mov
dec
scas
data16
test
out
push
mov
mov
and
ret
xor
jmp
mov
test
repz
xor
test
inc
xor
cwde
xchg
sbb
loop
pop
repz
adc
pop
inc
call
andps
je
pusha
fistp
push
inc
dec
imul
push
inc
js
xchg
shl
pop
adc
ret
in
nop
sbb
push
mov
es
sbb
xchg
std
lods
mov
bound
dec
push
pop
loop
movs
inc
out
inc
retf
mov
scas
jne
loop
(bad)
(bad)
xor
daa
pop
lahf
and
sub
in
shl
lock
jno
je
push
cmps
add
mov
cmps
cdq
(bad)
push
ror
mov
popf
add
popf
movsx
fsubr
call
retf
lods
fistp
cmp
dec
int3
mov
inc
outs
pop
xor
ja
repnz
cmc
shl
push
es
pop
xchg
es
cmps
push
pusha
movs
test
lea
fistp
xor
je
test
imul
sahf
xchg
and
mov
and
xchg
loope
inc
in
ja
div
test
xor
sbb
inc
add
mov
jb
add
in
lods
clc
lock
cmps
cli
sbb
sub
int
jp
pusha
mov
inc
add
(bad)
mov
icebp
lea
cmps
into
or
imul
imul
stos
mov
loope
out
sti
iret
(bad)
pop
in
mov
jo
or
pop
repz
pop
adc
sub
mov
ss
mov
push
stos
mov
sbb
fistp
pop
add
jnp
js
pop
pop
sbb
out
loope
dec
ins
mov
call
jbe
andps
imul
adc
ins
ds
mov
mov
test
jne
test
loop
pop
repnz
iret
jl
push
(bad)
xlat
dec
or
inc
int3
sbb
jmp
jmp
sbb
sti
adc
mov
inc
add
int3
test
lea
outs
mov
stos
sub
adc
and
xchg
mov
mov
shr
pop
outs
(bad)
cmp
sub
adc
pop
sahf
cmps
jo
mov
pusha
popf
mov
dec
test
movs
sar
mov
mov
lock
ins
mov
jecxz
bound
ins
pop
xlat
pop
dec
mov
frstor
mov
es
push
jmp
icebp
inc
data16
mov
les
add
retf
call
jl
adc
jle
cmps
pop
addr16
sub
xor
inc
or
sbb
in
outs
(bad)
sub
adc
cmp
and
jp
test
inc
xchg
fstp
loop
fcmovbe
inc
xor
push
xchg
sub
or
inc
add
add
popa
dec
jecxz
imul
add
xchg
push
outs
call
sub
adc
daa
cmps
cmp
jp
dec
int
xor
push
sar
mov
jge
je
pop
mov
push
mov
lahf
jo
sbb
inc
sti
test
jecxz
aaa
repnz
dec
fwait
mov
push
jmp
shr
mov
xor
cli
cmc
dec
sti
pop
ins
repnz
mov
test
push
add
inc
pop
pop
(bad)
sbb
ja
inc
jbe
jb
jl
adc
test
cmps
xchg
xor
add
xchg
les
stos
jl
sbb
and
xor
and
fs
sub
sti
movs
pop
add
jge
lock
xchg
bound
mov
and
enter
push
push
or
cmc
js
lods
adc
hlt
and
cdq
shr
pop
sbb
mov
adc
(bad)
and
call
jo
test
or
or
shr
push
and
ret
(bad)
cdq
out
xchg
jae
sbb
enter
add
(bad)
movs
int
push
mov
in
cli
adc
sub
add
mov
fxch
enter
cmp
mov
(bad)
cmp
mov
ret
xchg
outs
push
ficomp
shl
cmps
test
je
mov
repnz
call
cli
xchg
lods
(bad)
push
sbb
pop
in
xor
frstor
xchg
add
aam
push
cmc
movs
and
(bad)
loopne
out
nop
and
enter
fs
sbb
push
cmp
add
dec
imul
sahf
mov
push
out
sbb
fwait
or
enter
stos
mov
jle
outs
adc
sub
loopne
daa
fwait
adc
push
cmps
mov
(bad)
retf
dec
retf
int3
movs
add
ror
pop
aas
pop
mov
add
cmps
push
sahf
push
fwait
xor
call
pop
cmps
popf
in
xor
mov
fnstcw
pushf
dec
rol
cmps
mov
(bad)
ds
adc
inc
loope
fstp
cs
pop
mov
dec
(bad)
iret
cmp
push
jns
mov
xor
int3
pop
mov
leave
sbb
push
out
aas
aad
adc
outs
sbb
cli
inc
mov
push
arpl
pusha
sub
xlat
and
or
cs
push
loopne
jl
outs
cdq
xor
daa
cs
jmp
or
movs
in
jmp
or
sti
mov
lea
pop
lods
pop
mov
stc
or
into
loope
cwde
in
in
ins
pop
movs
lods
(bad)
sub
cwde
test
push
inc
int3
retf
cld
sbb
pop
mov
mov
rcr
cmp
ds
mov
(bad)
xchg
popa
cmps
into
sub
jae
inc
std
dec
xchg
jmp
fist
les
and
ss
xchg
imul
leave
aam
fist
add
dec
pop
lock
jns
jecxz
sbb
xchg
or
movs
(bad)
mov
push
inc
jne
dec
add
inc
adc
mov
and
xchg
(bad)
dec
jmp
adc
fisttp
imul
cdq
jecxz
jo
cmps
push
xor
out
xchg
ret
adc
out
shr
inc
in
push
pop
arpl
jmp
loope
std
jecxz
jns
pop
dec
inc
cmps
dec
sbb
jo
pop
cmp
lea
movs
add
jo
pop
inc
repnz
xchg
mov
sbb
in
std
sbb
dec
std
cmp
add
sub
call
jge
lods
or
pushf
cmp
mov
or
inc
stos
lock
or
daa
icebp
inc
test
add
jb
ds
stos
sahf
add
pusha
sub
push
xor
mov
pop
xchg
pushf
movs
(bad)
(bad)
mov
aaa
pushf
jmp
mov
push
fwait
into
mov
and
push
mul
xchg
sub
popf
push
clc
xchg
mov
or
jl
push
nop
leave
push
movs
pop
push
inc
imul
jl
call
or
dec
fcomip
fisttp
daa
sahf
cld
daa
scas
pop
retf
call
loop
inc
xor
cmps
inc
test
or
mov
(bad)
lds
mov
out
sbb
sbb
bound
mov
pop
dec
inc
mov
ss
les
jp
and
stc
sbb
pop
std
pop
cmp
pop
std
cmp
add
ss
jo
int3
adc
sbb
lahf
xor
mov
rol
call
(bad)
push
sbb
jmp
jne
stos
imul
mov
loope
mov
mov
mov
call
cmovg
(bad)
je
test
retf
call
add
ins
in
add
sub
imul
int
arpl
cmp
rol
sbb
inc
pop
outs
ret
je
or
push
ins
loopne
xchg
int3
fld
test
and
dec
inc
shl
lods
pop
psubusb
jo
imul
mov
cld
pop
lock
ds
pop
sbb
xor
mov
call
(bad)
jmp
(bad)
shl
dec
sub
test
cmps
and
cmps
push
in
jb
inc
sar
call
mov
ins
nop
aas
clc
push
fst
inc
gs
add
push
fimul
add
stos
sbb
sbb
mov
(bad)
shr
jbe
xor
rcl
(bad)
sbb
out
sub
lods
ret
(bad)
sub
lock
es
xor
test
clc
ins
cmp
aam
or
loopne
es
pushf
xchg
dec
mov
inc
or
inc
pop
sbb
addr16
call
sbb
mov
fnstsw
push
mov
or
cmp
scas
inc
(bad)
fldcw
fild
scas
retf
xchg
retf
repz
ret
test
pop
sub
std
mov
sbb
sub
(bad)
lock
xlat
add
lock
enter
xchg
jb
lods
or
rep
mov
xchg
push
ret
pushf
cs
xor
mov
pop
jle
xchg
loopne
cmp
cdq
(bad)
mov
into
inc
xchg
xor
scas
stos
(bad)
or
sti
stos
ins
stc
jmp
pop
push
aad
inc
dec
sub
xchg
jmp
shl
mov
xlat
and
stos
scas
jle
scas
mov
test
retf
outs
jae
iret
gs
mov
cld
dec
movs
ins
mov
and
lock
(bad)
sbb
cmc
and
pop
and
inc
jbe
add
nop
sub
push
cdq
out
push
in
lea
or
mov
jecxz
xor
mov
and
fs
push
jmp
je
rcl
pushf
and
sbb
sub
push
xchg
cmps
or
pop
push
stos
enter
jno
sbb
outs
mov
popa
lds
jb
pop
cmp
sar
scas
or
repnz
xor
xor
imul
retf
sbb
mov
dec
test
scas
mov
push
pop
mov
xchg
dec
inc
jne
cmps
dec
fsub
movs
dec
in
cwde
pop
push
xor
cmp
clc
push
xlat
and
scas
inc
imul
jg
mov
push
jno
sub
mov
xor
dec
xchg
jmp
cs
sub
test
out
in
(bad)
(bad)
and
xlat
popf
movs
imul
pop
xchg
aaa
sbb
les
add
inc
(bad)
push
mov
icebp
ret
add
shl
mov
or
jo
cdq
loope
cmp
mov
test
cmps
sub
inc
jne
(bad)
hlt
mov
daa
stc
popf
dec
jbe
repz
cmp
mov
outs
iret
jmp
test
dec
sub
and
pop
add
aas
(bad)
fisttp
add
add
scas
xchg
call
(bad)
mov
aam
push
jmp
ins
dec
ds
cs
inc
push
sub
xchg
js
add
fimul
add
sahf
int3
iret
push
jp
(bad)
adc
mov
jns
addr16
mov
int3
xor
pop
and
(bad)
jge
scas
fstp
sub
adc
cmp
(bad)
lahf
push
push
xlat
cwde
push
pop
cmp
dec
outs
inc
cmp
lahf
jb
loope
jb
call
popf
inc
add
mov
stc
(bad)
jb
adc
(bad)
call
cmps
add
xchg
dec
std
sub
mov
sub
push
test
push
jb
mov
pop
inc
shl
xchg
pushf
push
jg
and
das
sbb
das
in
xchg
pushf
outs
sti
out
imul
rcr
or
mov
rol
imul
cmps
xor
idiv
mov
add
fninit
or
imul
pop
sbb
inc
scas
scas
inc
out
(bad)
push
stos
cmp
xchg
scas
mov
scas
aaa
mov
mov
cli
je
mov
daa
adc
lea
add
push
cmps
xchg
loope
ficomp
fidivr
xchg
mov
cmps
lock
mov
in
mov
pop
ret
cmp
scas
cdq
das
mov
dec
fbld
shl
mov
out
(bad)
cmps
jnp
jl
jne
jae
and
or
pop
push
movs
mov
(bad)
cmp
out
push
sbb
shr
push
fst
or
mov
retf
aas
pop
repz
aas
lock
fistp
std
les
je
imul
jp
cmp
retf
inc
sbb
aad
js
test
inc
sti
mov
cld
int3
ret
cmp
js
call
ret
xor
pop
lds
sbb
add
push
dec
xchg
(bad)
in
clc
mov
retfw
clc
idiv
lahf
mov
dec
sub
clc
loope
aad
dec
repz
adc
fcmovne
aad
or
lods
ret
cwde
scas
das
adc
xchg
dec
lock
mov
inc
ror
lahf
xchg
jmp
test
dec
sbb
and
push
jb
lods
(bad)
pop
in
cmps
int3
push
call
jge
pop
shl
push
gs
lea
nop
es
add
clc
and
mov
(bad)
mov
xor
jmp
retf
(bad)
pop
out
std
pshufw
out
enter
mov
cmp
push
call
mov
xor
mov
xor
inc
sub
pusha
or
mov
popf
clc
cmps
dec
inc
mov
fadd
rcr
cmp
dec
xor
(bad)
mov
inc
sbb
aas
mov
stos
push
xor
fild
cmp
in
stos
mov
test
enter
int
sahf
xchg
adc
into
and
ret
shl
push
sub
popa
call
mov
loop
sub
out
int3
repz
mov
cmp
inc
mov
adc
in
pushf
fs
xor
fcom
xor
mov
push
and
add
aas
fld
test
addr16
outs
test
xchg
icebp
(bad)
pop
fmul
test
inc
add
sub
and
enter
test
iret
das
add
inc
fs
mov
jb
out
inc
push
xchg
dec
hlt
rol
xchg
jnp
xchg
fld
loopne
adc
bound
mov
aas
rcr
fisubr
popf
stos
xchg
popf
mov
or
test
jecxz
xchg
cwde
call
das
dec
jecxz
out
stc
or
aad
cmps
sbb
mov
cmps
add
push
sbb
clc
and
das
and
cs
shl
lods
ret
jle
popa
mov
inc
out
in
mov
mov
pop
pop
or
imul
pusha
hlt
cdq
mov
cmps
frstor
jo
mov
inc
jge
xor
mov
adc
dec
xchg
iret
mov
cmc
cmp
dec
fcom
jge
scas
jle
push
ds
movd
sbb
icebp
sub
push
pop
test
movs
mov
jmp
jno
inc
js
xchg
dec
mov
jns
add
repnz
scas
jns
ss
fidiv
dec
pop
push
into
(bad)
cwde
add
mov
retf
pop
das
mov
je
mov
dec
out
(bad)
out
add
pop
movd
into
test
sbb
push
fdivr
data16
sar
xor
nop
shr
aaa
push
(bad)
mov
mov
aad
pusha
in
out
mov
leave
gs
jb
cs
inc
jo
jecxz
ror
cmps
rol
nop
mov
mov
xchg
push
sub
test
mov
pop
mov
addr16
fld
imul
and
mov
pop
pop
mov
pushf
aam
sbb
jl
test
push
jge
fdivr
pop
pop
jge
mov
push
pop
pop
cs
push
cmp
icebp
neg
xchg
jb
ret
ds
ss
scas
sub
cmp
mov
dec
xor
pop
sub
lock
or
mov
mov
mov
pop
push
cs
push
push
outs
je
sti
das
fnstcw
or
dec
dec
adc
push
addr16
mov
arpl
push
xchg
popa
loop
js
push
dec
ss
sub
test
cmc
sub
pop
out
and
sar
(bad)
sub
push
cmp
push
add
mov
mov
loop
add
pop
and
mov
ss
sbb
xlat
mov
std
mov
adc
int
retf
pop
cmc
lea
push
out
mov
xchg
aas
mov
mov
fwait
arpl
clc
xlat
pop
addr16
cdq
(bad)
out
stos
retf
icebp
ja
pushf
mov
jnp
mov
push
push
mov
push
add
movs
add
movs
scas
ret
adc
mov
mov
cli
dec
inc
pop
mov
ja
inc
inc
mov
mov
addr16
mov
pop
(bad)
sti
cmp
movs
jb
in
das
mov
push
push
js
(bad)
loope
push
pushf
icebp
mov
mov
inc
je
jl
sub
aam
push
imul
les
dec
shl
and
into
adc
(bad)
mov
movs
retf
push
push
ins
push
sbb
cmp
test
leave
xchg
jbe
mov
sub
inc
xor
(bad)
test
lods
push
jmp
sub
loop
jb
and
or
mov
pop
pop
cmp
mov
je
jecxz
lods
rcl
push
adc
ret
xchg
inc
or
into
xor
mov
pop
cmp
push
sbb
or
daa
and
jno
gs
sbb
inc
lods
pop
dec
inc
adc
shr
pop
xor
out
xchg
adc
mov
sar
xor
cmp
repnz
fs
and
test
push
and
push
pop
pop
cmps
shr
pop
push
movs
sbb
cdq
(bad)
int3
aad
mov
xor
imul
xor
int
xor
cs
mov
test
neg
push
(bad)
cmp
xor
push
adc
xchg
cs
cdq
mov
(bad)
and
(bad)
idiv
test
stc
(bad)
xchg
or
or
push
out
mov
cwde
inc
pop
sbb
xchg
xlat
fdivr
mov
or
imul
sub
call
push
adc
pop
sahf
cdq
pop
xchg
sbb
fbstp
loop
test
fdivr
adc
xchg
fbstp
cdq
add
sbb
test
das
sub
or
popa
inc
inc
sti
dec
add
mov
in
nop
xchg
mov
iret
inc
mov
and
repz
shl
jbe
push
adc
and
mov
or
adc
dec
mov
sub
movs
mov
pop
ja
push
and
call
daa
or
jnp
mov
xchg
in
and
add
dec
mov
out
ins
retf
add
add
movs
leave
fmul
mov
mov
int3
dec
mov
jg
loope
mov
call
imul
test
pshufw
or
or
sub
inc
es
dec
jecxz
mov
call
out
mov
ins
xchg
cwde
fwait
or
rol
or
addr16
push
xor
div
xchg
shr
dec
aaa
daa
mov
jge
jbe
mov
out
lods
out
cmp
idiv
jbe
sbb
cmc
jecxz
cmp
ja
js
(bad)
adc
fdivr
push
pusha
out
xchg
pop
sub
push
fstp
mov
lods
jae
add
pop
fcom
int3
mov
cdq
jbe
xchg
adc
ds
jbe
mov
jnp
or
adc
xchg
push
sub
repz
int
ficomp
push
jno
xor
push
bound
jge
ins
pusha
jg
jp
sbb
loope
int
(bad)
mov
lahf
inc
std
imul
jmp
pop
aad
lahf
loop
dec
push
int3
loopne
(bad)
ror
pop
adc
mov
ins
mov
push
popa
aam
lds
rcl
mov
add
aam
es
rcl
pushf
dec
adc
mov
lods
sub
sub
jo
or
xor
sub
sbb
xchg
ret
xchg
(bad)
jecxz
repnz
clc
(bad)
push
shr
or
add
mov
jns
(bad)
pushf
repz
fucom
sbb
xor
dec
and
data16
adc
mov
(bad)
mov
rcl
int3
inc
sbb
not
ins
sbb
scas
stos
inc
mov
jmp
inc
cmp
mov
jg
cmc
cmp
je
xchg
ins
js
sub
jle
push
(bad)
push
sbb
sbb
loop
arpl
inc
out
inc
fucomp
and
inc
(bad)
popf
push
mov
jns
add
(bad)
outs
sub
pop
pop
es
xor
add
mov
(bad)
jne
dec
mov
fwait
jmp
loope
pop
sub
aam
inc
sub
jge
retf
push
xchg
push
cmp
pop
mov
add
popa
lahf
ins
dec
int
int
jne
gs
lds
in
je
mov
int3
push
mov
xchg
inc
fld
outs
pop
xchg
sti
push
das
fnstcw
mov
jp
lds
cdq
das
xchg
xor
bound
dec
add
in
dec
and
cmp
mov
addr16
add
in
or
das
(bad)
sbb
cmp
aam
mov
fldcw
and
call
adc
push
lds
mov
sbb
sub
and
icebp
sub
push
xchg
push
out
ficom
mov
(bad)
sub
inc
(bad)
cld
into
jo
pop
int3
test
cmp
shl
cwde
sbb
gs
fcomp
fdivr
and
add
cld
retf
mov
push
in
push
fcomi
imul
adc
xor
ss
or
je
jge
pop
or
mov
daa
adc
cdq
ins
gs
push
movs
repnz
adc
cdq
pop
stc
adc
data16
(bad)
out
ja
cmc
sbb
xchg
loope
sbb
jae
inc
and
retf
fiadd
retf
sahf
and
and
pop
push
imul
(bad)
cli
sub
pop
dec
add
hlt
sub
addr16
pop
(bad)
adc
dec
cli
sub
pop
push
les
loop
add
out
pop
enter
repnz
jnp
aaa
ins
cmp
js
mov
(bad)
ret
fdivr
retf
fidiv
mov
mov
lea
inc
(bad)
xor
xor
outs
rol
stos
out
mov
scas
jne
mov
shl
jmp
push
cs
or
pop
mov
push
sbb
ss
mov
or
lahf
push
cmc
not
rcl
sahf
and
les
stos
xchg
clc
into
imul
ins
arpl
inc
lea
mov
or
push
clc
jge
stos
pop
icebp
cdq
inc
or
data16
fprem
retf
and
out
lods
ja
sbb
mov
test
push
das
bound
fwait
in
pop
jo
scas
xor
hlt
dec
mov
inc
xor
test
fsub
(bad)
sti
sti
mov
(bad)
out
add
hlt
pusha
bnd
fistp
outs
gs
xor
imul
mov
cmp
xor
in
leave
fcomp
out
jmp
inc
cwde
dec
scas
xor
ins
hlt
inc
icebp
inc
rcl
aas
retf
sbb
sbb
rcl
pushf
outs
sub
jge
es
jp
cmp
pushf
fwait
xor
xchg
repz
outs
adc
daa
or
out
xchg
mov
push
leave
ret
outs
(bad)
pop
in
call
xor
cmp
inc
fneni(8087
mov
push
mov
call
arpl
pop
push
xor
or
sub
mov
jbe
xor
repz
push
or
push
rcl
rcl
or
fwait
aad
xchg
call
dec
icebp
xor
push
cdq
jnp
ins
imul
dec
mov
add
dec
cmp
xchg
dec
pop
pushf
push
lea
lock
enter
mov
jg
mov
push
adc
fcom
dec
fsub
rol
not
pop
retf
dec
sbb
mov
or
xor
push
in
lea
cmp
call
daa
pushf
scas
add
icebp
xor
push
shr
out
push
(bad)
loop
fdiv
lods
cmp
jno
inc
sub
jmp
out
imul
pop
dec
test
sbb
inc
and
enter
add
cmps
xchg
test
pop
mov
mov
movs
fisttp
mov
push
mov
pop
mov
fs
mov
jge
mov
push
adc
mov
shl
fst
jb
add
mov
lods
inc
mov
ret
sbb
mov
sub
ja
cmp
scas
sub
(bad)
outs
adc
in
or
mov
sbb
leave
pop
icebp
out
sbb
inc
sbb
pop
dec
push
popa
ja
jae
lock
pusha
mov
jo
cs
in
int
or
into
pop
imul
mov
outs
xchg
pop
jmp
ret
xor
rcr
mov
pop
pop
and
xor
and
cmps
lahf
popa
lods
sub
dec
inc
push
add
add
scas
call
call
jl
xchg
inc
sbb
clc
rcl
and
addr16
mov
push
or
mov
fsubp
scas
push
das
jns
and
inc
(bad)
push
mov
pop
xchg
int3
cmp
aaa
and
imul
fdiv
mov
and
sbb
mov
sub
(bad)
inc
push
inc
dec
outs
mov
sbb
pop
mov
int3
push
je
push
adc
iret
jmp
cmp
fstp
push
(bad)
aaa
jmp
(bad)
sar
jecxz
(bad)
cmp
imul
nop
(bad)
std
mov
jmp
leave
push
das
mov
cmps
pop
lods
icebp
inc
push
sahf
cmovns
or
or
sub
cmps
jp
out
aad
lock
or
cmp
cmc
cmp
dec
mov
popf
stos
cdq
aam
add
jle
xchg
inc
push
std
and
jge
cmps
call
xchg
jl
(bad)
std
jp
inc
pop
inc
popf
add
(bad)
pop
fiadd
xor
cmps
je
mov
xchg
mov
in
pushf
push
push
mov
test
mov
xor
dec
push
push
cmp
test
dec
cmp
dec
cmp
mov
xchg
push
xor
push
icebp
pop
jae
jo
ja
add
out
adc
push
nop
cli
cmp
cmp
pop
add
sbb
push
xor
cmp
push
dec
xchg
push
push
sub
into
sbb
or
xor
dec
dec
xor
stc
(bad)
sbb
ror
je
xor
pop
arpl
pop
jmp
jl
add
stos
xor
dec
add
adc
ret
test
sub
loopne
pop
sub
vpminsw
fistp
ins
push
hlt
(bad)
jnp
dec
mov
mov
push
loopne
popf
mov
movs
outs
jl
cmp
fisttp
inc
xchg
mov
push
pop
sti
fwait
or
xchg
sbb
scas
daa
inc
dec
gs
or
cmp
cmps
adc
pop
repnz
and
popf
idiv
(bad)
jmp
cdq
push
cmp
mov
push
scas
push
adc
xchg
cmp
pop
add
xor
repz
scas
add
sbb
xchg
or
jmp
xchg
sbb
and
cld
in
stos
or
gs
xbegin
enter
dec
stos
fsub
inc
fisttp
not
and
add
or
xchg
mov
mov
mov
rcr
adc
fstp
cmc
xchg
clc
inc
addr16
push
fs
jmp
(bad)
fsub
repz
cmp
nop
arpl
sahf
jmp
dec
hlt
nop
cmps
mov
xchg
mov
frstor
jecxz
inc
jecxz
cmp
scas
adc
cmp
jmp
sbb
jp
rcl
sub
push
or
nop
pop
mov
push
xchg
cli
addr16
popf
retf
and
inc
push
hlt
neg
jno
or
gs
xor
imul
pop
push
push
or
popf
sbb
dec
mov
cmp
dec
fisub
lods
fmul
aaa
jmp
mov
mov
mov
icebp
push
and
jns
and
js
scas
leave
es
iret
retf
sbb
inc
ror
(bad)
pop
or
fmul
test
das
adc
shl
xor
push
and
pusha
lahf
and
pop
push
jecxz
jp
fdivr
jo
mov
pushf
xchg
sub
add
jg
mov
aaa
pop
rcl
call
jnp
or
(bad)
out
mov
loop
in
(bad)
(bad)
mov
xchg
jmp
add
sbb
pop
xchg
call
out
or
lea
imul
loope
pop
xchg
dec
xchg
fwait
jnp
or
inc
or
xor
adc
or
scas
clc
sar
ins
neg
jnp
jns
mov
(bad)
scas
or
xor
pop
pop
call
mov
mov
add
sbb
ret
loopne
retf
sbb
or
dec
scas
(bad)
cmc
xchg
pop
adc
and
sbb
gs
and
aad
test
adc
jmp
rcr
adc
mov
push
and
test
movs
inc
dec
adc
fs
pop
xchg
pusha
jmp
das
nop
xor
ja
test
jae
clc
aad
fwait
pop
pop
(bad)
popf
test
push
ds
lods
xor
mov
pop
call
retf
jnp
lea
cmps
call
clc
mov
stc
ror
mov
xor
cmp
jb
push
xchg
inc
pushf
dec
add
push
sahf
test
(bad)
mov
movs
and
ins
sub
adc
imul
shr
jo
jmp
sbb
push
and
mov
add
inc
scas
inc
scas
pop
adc
lds
sub
adc
call
xor
adc
sti
jmp
sub
pusha
and
cmovns
mov
dec
mov
movs
jl
pop
lods
mov
mov
xchg
in
and
popa
mov
dec
mov
sbb
push
pop
mov
test
aaa
movs
ins
or
(bad)
sub
xchg
ret
loope
call
ins
or
push
sahf
cld
shl
das
mov
jmp
sub
mov
add
jmp
setb
pushf
pop
cli
in
and
(bad)
in
mul
(bad)
push
or
jo
test
int3
mov
fld
ja
mov
pop
neg
call
xchg
cmp
jae
xchg
ret
xor
inc
inc
sub
push
xchg
aad
push
jne
(bad)
pop
xchg
or
movs
lods
iret
iret
cmp
cmps
ds
lahf
test
push
sbb
sbb
mov
aaa
icebp
mov
shr
and
add
dec
std
jmp
cdq
mov
mov
xchg
clc
and
adc
aad
mov
jnp
retf
mov
call
sbb
sub
mov
fild
iret
cmps
fsub
sub
lock
dec
movs
repnz
jb
xor
jg
push
adc
add
mov
lea
loop
dec
stos
push
aam
outs
cmp
jae
in
pop
cld
jno
clc
mov
std
pop
push
fistp
retf
and
push
and
dec
dec
mov
aaa
sub
mul
outs
and
jl
neg
js
lea
gs
pop
loop
pop
sbb
cdq
pop
and
or
jno
xchg
jb
test
mov
mov
scas
imul
mov
cld
add
out
push
xor
dec
clc
mov
mov
dec
shr
xchg
lock
dec
daa
dec
cmp
jmp
mov
jae
xchg
cwde
ds
mov
lods
inc
and
cmp
out
xchg
les
rcr
call
cdq
xchg
and
outs
int3
icebp
sti
push
pop
mov
mov
xor
scas
das
das
scas
lods
stos
rcr
cmc
out
inc
out
lods
out
cmp
cmp
int
mov
push
adc
xchg
push
xchg
pop
ret
pop
mov
jno
lock
sbb
dec
mov
mov
or
mov
add
nop
out
enter
mov
in
mov
xchg
xor
push
rol
stos
mov
xchg
sbb
ja
test
xor
push
push
fiadd
sbb
addr16
rcl
adc
mov
cs
(bad)
xor
sub
mov
jge
xchg
daa
cmp
in
and
jge
(bad)
ret
sub
sbb
jg
dec
enter
int3
jmp
pop
rcr
xor
neg
pop
cmps
loope
lods
inc
test
jb
lods
lods
(bad)
xor
jo
rcl
mov
and
add
dec
adc
sbb
call
xor
pop
(bad)
and
lock
cmps
jecxz
sbb
xor
mov
aad
(bad)
out
add
jge
mov
rcr
retf
lods
cmp
xchg
mov
jbe
fld
adc
inc
(bad)
jbe
ss
xor
data16
sahf
push
push
jmp
push
or
pop
mov
fisubr
push
iret
mov
popa
mov
je
push
cmp
ret
mov
mov
cmp
pop
xor
std
lea
mov
int3
pushf
aam
cs
sbb
loopne
inc
inc
xor
jle
jmp
dec
inc
movzx
shr
dec
in
scas
neg
dec
push
and
ss
mov
neg
test
mov
call
sbb
inc
popf
push
xor
mov
mov
xor
push
(bad)
sbb
add
and
movs
aaa
adc
mov
(bad)
call
sbb
sub
push
aam
cmps
mov
sbb
pushf
pusha
or
ror
fisttp
dec
jle
add
jo
xchg
push
pop
jmp
out
and
mov
mov
jnp
cmps
int
cmp
and
or
repz
push
clc
mov
fdivr
(bad)
jmp
jbe
push
sub
lahf
jo
sub
inc
adc
ret
stos
inc
xchg
inc
dec
mov
mov
inc
outs
scas
leave
push
push
sahf
jmp
aad
ja
aam
pushw
dec
push
cld
pop
or
or
mov
adc
jne
jo
mov
mov
aad
cmp
out
or
mov
scas
xor
push
sbb
loope
or
bound
movs
inc
leave
rcr
or
push
cwde
jecxz
jae
lock
jmp
popf
daa
mov
or
(bad)
stos
inc
and
and
outs
mov
ret
or
rcr
lea
fmul
jmp
pop
int3
fmul
in
pop
inc
test
add
fs
or
popa
scas
push
sbb
sbb
int
aam
imul
or
xchg
mov
dec
fbstp
inc
scas
(bad)
mov
sbb
add
dec
inc
popa
ret
stc
jnp
mov
in
addr16
sbb
push
test
out
fldenv
cmps
dec
mov
in
xor
jo
inc
mov
pop
iret
sub
lock
(bad)
cwde
pop
sub
xor
mov
push
fadd
retf
cmp
sti
mov
cmp
mov
cmp
jo
nop
jbe
push
test
jb
mov
cli
(bad)
push
ins
ss
mov
mov
jmp
das
fwait
mov
shl
iret
cmps
sub
xchg
mov
and
loope
movs
cdq
fucom
sbb
pop
pop
xchg
mov
mov
out
(bad)
lock
or
pop
in
sti
daa
loop
ins
dec
inc
icebp
aad
outs
test
in
jl
imul
sub
call
mov
ret
push
jns
dec
pop
cdq
jns
leave
add
js
les
jmp
cmps
call
jnp
pop
mov
fsub
sbb
out
clc
push
mov
fidiv
jo
add
adc
or
push
sbb
je
aam
pusha
cmps
or
(bad)
mov
add
sbb
sub
loop
cmps
inc
scas
pop
xchg
call
xchg
jmp
fiadd
xchg
stos
push
push
xor
fidivr
adc
push
fstp
leave
add
inc
fimul
es
jno
and
mov
cmp
pop
mov
xlat
lea
test
cmp
sbb
fwait
jnp
push
cmp
adc
cmc
mov
cli
mov
fistp
test
fs
xor
dec
cmp
dec
sbb
mov
leave
cmp
lods
and
pop
sub
mov
mov
shl
lds
push
mov
ja
fisubr
sub
dec
cmp
dec
ss
push
lods
cmp
xchg
pusha
add
leave
sbb
ja
aas
push
jae
jmp
std
mov
jo
cmp
pop
call
lahf
in
mov
sar
sub
(bad)
jecxz
bnd
dec
sub
adc
loop
retf
inc
pop
fild
xor
mov
sbb
retf
cld
ds
push
sbb
dec
xor
loope
xlat
xor
and
pop
(bad)
xor
popf
jmp
jecxz
inc
pop
mov
mov
inc
push
fs
icebp
inc
mov
pop
and
fcomp
adc
sub
mov
mov
fcomp
in
push
push
lock
xor
loope
movs
test
mov
jns
hlt
fisubr
jae
lahf
adc
inc
or
pop
ficomp
pop
lock
test
ud1
outs
icebp
xchg
jmp
les
xchg
sahf
xchg
call
adc
mov
cmp
and
frstor
sahf
mov
hlt
cmp
mov
xchg
xor
and
and
aam
lahf
ja
xchg
adc
lods
sub
(bad)
mov
in
dec
fadd
jecxz
jns
and
adc
in
hlt
call
and
inc
fimul
or
jl
mov
cwde
dec
xchg
xor
popf
fwait
add
cmp
repnz
and
popa
xchg
push
xor
jecxz
cmp
jp
lahf
or
ror
(bad)
mov
mov
xchg
stos
add
push
(bad)
push
gs
inc
sub
arpl
daa
pop
xlat
mov
dec
or
pop
das
mov
push
mov
popf
stos
js
sbb
loop
movs
idiv
jle
xor
add
movs
repz
adc
adc
or
(bad)
shl
push
es
xlat
xchg
ret
push
or
jb
arpl
pop
inc
push
rcr
and
dec
xchg
ja
inc
dec
cld
daa
or
xchg
inc
imul
retf
inc
js
jp
jb
inc
pop
pop
aaa
fst
popf
mov
mov
dec
sub
adc
push
ficom
in
cmovs
mov
gs
call
mov
sub
retf
adc
fidivr
push
dec
icebp
inc
int3
ins
cmp
or
mov
ins
jae
mov
add
int
addr16
movs
leave
add
repz
adc
popf
adc
mov
cmps
shl
imul
and
inc
enter
mov
xchg
mov
jmp
inc
aam
stc
adc
jb
lea
adc
add
or
push
cmp
int
ret
retf
add
loopne
xchg
icebp
(bad)
jge
push
pusha
pop
inc
and
in
pop
cmp
ror
aam
(bad)
pop
or
adc
leave
ds
jns
mov
sub
mov
bound
jbe
adc
lods
pusha
push
jb
es
leave
das
pusha
xchg
cmp
and
sahf
fs
mov
(bad)
std
sti
pop
hlt
scas
jnp
shr
pop
push
mov
xchg
icebp
enter
(bad)
adc
mov
cmps
sub
xor
cmp
mov
mov
xchg
sahf
(bad)
(bad)
sbb
les
ss
fsubrp
add
jmp
les
rcr
neg
xchg
jecxz
sbb
aas
xchg
adc
xchg
cli
hlt
(bad)
aam
mov
adc
xor
sbb
or
pop
inc
fdiv
push
inc
xchg
and
jae
inc
pop
jl
mov
mul
call
pusha
xrelease
shl
push
je
mov
test
adc
stos
or
push
add
fcom
fld
aas
rcr
xchg
(bad)
aas
push
xchg
movs
xchg
cmp
sub
inc
neg
dec
test
adc
adc
push
js
pop
cmp
or
mov
push
in
pop
mov
imul
daa
dec
and
test
jnp
loop
adc
es
xchg
sub
dec
push
loop
ror
mov
mov
in
xchg
les
dec
popa
xor
adc
mov
push
push
enter
pusha
(bad)
jo
mov
dec
dec
sub
cmp
dec
cld
(bad)
sti
shr
adc
jp
sub
lahf
push
not
xor
mov
sbb
rcr
cli
push
xor
loope
addr16
ins
jecxz
or
mov
xchg
fidivr
loopne
sub
jg
out
cdq
mov
outs
mov
aam
inc
mov
dec
lods
add
outs
fcom
jp
xchg
repnz
mov
inc
test
dec
hlt
enter
sub
pop
adc
ror
xchg
adc
sar
cmps
lahf
mov
iret
outs
lods
sbb
es
push
and
fld
jmp
mov
call
cwde
in
pusha
outs
stos
push
adc
aam
and
push
xlat
cld
lea
jnp
in
or
pop
nop
pop
xchg
pop
shr
pushf
fmul
add
mov
and
call
aad
mov
pop
in
or
mov
adc
or
jne
iretw
gs
mov
sub
mov
sbb
idiv
in
int3
pop
sbb
push
je
inc
jne
add
mov
pusha
repnz
xchg
cmps
test
dec
jno
xor
(bad)
and
pusha
es
pusha
fdivrp
add
lahf
call
out
mov
data16
cmp
push
xchg
mov
inc
pop
xor
fimul
call
mov
inc
cmp
jbe
daa
pop
jae
adc
fbld
rcl
cmp
sbb
(bad)
retf
push
popa
out
xor
mov
lods
icebp
pop
pop
fistp
rcr
mov
mov
out
outs
adc
ja
cdq
rol
sbb
test
sti
in
rcr
mov
sti
xchg
adc
std
cmps
bound
jmp
fs
fisubr
pop
xchg
cli
out
cli
xor
sub
or
or
repnz
jmp
mov
push
push
clc
push
sbb
rol
in
jl
jle
loop
ret
mov
dec
shl
mov
adc
cld
in
add
lods
mov
fist
or
sti
jp
mov
or
in
jb
and
cli
jae
pop
and
gs
pop
or
xor
cmp
push
test
xchg
pushf
mov
mov
aas
addr16
mov
or
outs
sub
mov
jp
inc
adc
push
mov
push
inc
xor
lods
inc
dec
cwde
enter
movs
add
ds
imul
ret
sub
mov
push
sub
cs
inc
dec
mov
xor
or
lods
cwde
mov
mov
or
mov
cmp
dec
add
dec
imul
divps
data16
scas
gs
cmp
and
pop
and
mov
or
int3
je
dec
call
fs
mov
mov
in
(bad)
mov
(bad)
push
ret
xor
xchg
movs
or
test
retf
mov
int3
jp
jecxz
into
xchg
test
xchg
and
push
out
mov
icebp
jne
sti
rol
(bad)
and
xchg
fnstsw
mov
sbb
clc
pop
cmp
pop
ins
xor
cmp
es
adc
rcl
dec
popf
lods
dec
out
imul
ror
enter
dec
les
inc
and
call
mov
lods
stos
jnp
add
call
mov
mov
imul
jle
add
retf
sub
push
sti
ret
mov
into
mov
not
sub
inc
and
sbb
sbb
stos
sub
sub
int
pop
or
pusha
jns
mov
fst
mov
jbe
mov
xchg
jnp
mov
jns
cmp
mov
or
push
out
lahf
in
js
pop
push
les
fist
adc
jge
push
push
daa
in
test
sti
adc
aas
cmp
(bad)
ds
and
push
push
popf
test
call
daa
add
sbb
push
ins
dec
mov
jnp
mov
pusha
pop
xor
lahf
pop
outs
imul
call
mov
lock
jge
pop
dec
dec
in
inc
(bad)
imul
aaa
push
js
jmp
in
jmp
sbb
(bad)
sub
loopne
pop
rcr
inc
in
mov
sbb
leave
cdq
push
jmp
mov
cld
push
cs
add
mov
and
xor
jg
ret
cmps
into
ds
cmp
sbb
xor
hlt
jecxz
fisttp
das
and
mov
sub
sub
inc
mov
inc
inc
sbb
jmp
(bad)
sbb
xor
and
nop
cmp
ret
or
lahf
push
jnp
mov
es
push
add
ror
repz
ja
and
push
mov
xor
mov
pop
pop
dec
pop
loopne
aam
xchg
int
lahf
add
or
fs
pop
fnstenv
xchg
jge
add
imul
ret
inc
jnp
jb
xor
xchg
or
dec
and
inc
rcl
(bad)
movs
mov
jnp
mov
mov
and
xchg
mov
pop
lds
inc
dec
mov
mov
popf
fwait
add
scas
mov
test
and
into
(bad)
sub
retf
repnz
sbb
shr
lds
ja
jecxz
pop
repnz
ja
dec
cdq
cmp
test
push
vmread
inc
cs
push
stos
in
jnp
or
fwait
add
test
rcl
in
jmp
xchg
jb
sbb
cwde
mov
dec
mov
sub
pushf
or
sub
aad
lea
jae
in
fistp
(bad)
leave
dec
test
lock
fwait
jo
ins
ret
ds
mov
loopne
adc
adc
js
cmp
pop
pop
push
jno
pop
lods
lahf
xchg
in
push
adc
loope
dec
mov
lods
jle
rcl
repnz
and
inc
pusha
ret
push
xchg
mov
lock
bound
push
lods
xchg
jb
mov
push
cwde
cmp
jmp
and
js
sub
(bad)
xlat
push
icebp
arpl
std
icebp
sti
imul
or
xchg
imul
inc
push
popf
jo
inc
pop
loope
mov
aam
or
pop
test
xchg
mov
jmp
jecxz
mov
mov
xor
sbb
mov
mov
mov
jnp
or
not
pop
or
push
pop
mov
arpl
cmp
mov
mov
test
jl
data16
cmps
popw
fcom
mov
add
jecxz
and
jns
push
add
hlt
dec
fwait
inc
lea
cmp
out
out
stos
inc
sub
out
mov
adc
mov
fist
add
js
in
adc
cli
sbb
aaa
pushf
(bad)
rol
bound
dec
fist
dec
sbb
push
cmp
loope
inc
mov
mov
int3
mov
mov
sbb
in
mov
mov
pop
loopne
or
in
mov
sub
cmp
test
xchg
loop
idiv
shr
push
jmp
loopne
ja
sbb
mov
pop
sti
adc
pop
mov
sbb
jns
ds
xor
ins
loop
fucomp
test
call
test
adc
(bad)
adc
mov
fld
jecxz
cmp
ret
sub
ja
fdiv
sahf
jge
icebp
arpl
test
ret
ja
retf
loop
jp
xor
int3
shr
out
leave
mov
mov
jno
repz
xlat
jo
jno
cmp
popa
jae
aad
mov
pusha
ins
mov
cs
aaa
ds
or
cmc
fadd
sbb
mov
popf
dec
gs
cmc
mov
loope
(bad)
clc
leave
(bad)
sbb
sub
xor
inc
mov
jle
jmp
mov
xor
dec
shl
jb
mov
mov
add
repnz
retf
push
jo
dec
in
hlt
jge
and
js
jmp
jmp
add
cli
lods
or
ds
in
adc
fist
fstp
push
les
ror
sbb
pushf
enter
and
je
ins
jne
inc
inc
xchg
loop
mov
sbb
and
inc
mov
xchg
fcomp
sti
mov
add
(bad)
hlt
mov
ret
and
mov
out
pop
or
jle
sbb
inc
pop
les
sbb
push
sahf
in
sub
xor
pusha
cmps
mov
int
add
sbb
scas
mov
add
push
movs
xchg
in
pop
imul
inc
sub
and
shr
mov
shl
mov
mov
dec
cmps
aad
sbb
popf
mov
lea
(bad)
pop
loope
out
add
or
clc
cld
dec
ret
sbb
imul
mov
fisttp
cli
clc
ss
push
out
dec
inc
or
inc
pop
shr
inc
sub
dec
inc
(bad)
(bad)
inc
fadd
mov
push
push
retf
sbb
or
mov
test
dec
and
mov
adc
inc
xchg
loopne
mov
loop
cs
add
cli
sbb
in
pop
jne
ds
sub
das
frstor
jp
daa
out
xchg
pop
push
dec
or
pop
mov
xchg
pop
push
fld
fisub
aaa
aaa
pop
hlt
je
pshufw
mov
stos
cld
mov
gs
jno
aam
arpl
das
cmp
frstor
push
loop
add
xacquire
test
iret
xchg
cli
out
das
mov
mov
mov
in
cmp
test
enter
mov
fnstcw
out
ja
jl
adc
ja
es
xchg
add
aaa
stos
add
std
xor
aaa
mov
leave
mov
mov
icebp
mov
inc
inc
leave
or
iret
cwde
loope
pushf
out
pusha
add
mov
add
xchg
ror
sar
mov
xor
test
jnp
mov
sahf
lods
xchg
ss
fnstcw
pop
mov
inc
ficom
das
(bad)
push
mov
push
and
mov
xchg
mov
jbe
cli
cmp
jge
les
in
pop
mov
das
loopne
in
fwait
int
mov
jmp
fistp
mov
and
sbb
dec
mov
movntq
mov
mov
mov
bound
scas
retf
xor
inc
std
pop
jae
jge
lods
cmp
retf
xchg
bound
and
mov
jp
out
xchg
outs
adc
cmp
sub
sub
sub
jne
lea
pop
mov
pop
ins
or
mov
inc
cli
sub
movs
jb
movs
push
ret
or
loope
fist
push
sub
test
adc
dec
sub
lock
and
sbb
xor
bound
xor
adc
jns
or
lea
cmp
add
mov
call
fiadd
pop
repz
fmul
imul
jbe
cdq
loop
je
outs
push
imul
les
or
cmp
dec
and
test
inc
cmps
adc
xor
jbe
add
jmp
mov
repnz
sub
scas
push
or
call
ror
pushf
pop
sbb
iret
scas
je
push
and
adc
add
dec
sub
out
es
(bad)
push
mov
xor
sbb
out
(bad)
out
sub
xor
cmp
aam
mov
(bad)
pusha
lahf
pushf
sub
add
test
xlat
imul
pop
arpl
call
outs
retf
in
mov
in
push
hlt
mov
rcl
test
cmps
enter
ss
xor
cwde
push
add
xchg
leave
jle
das
ret
(bad)
outs
ja
cs
jge
loopne
and
repz
jno
inc
mov
fwait
addr16
xlat
xchg
ret
push
cdq
je
adc
pop
ja
xchg
cmp
mov
or
pop
push
xchg
cdq
js
jge
jmp
and
jecxz
jne
out
cmp
xor
ret
loop
dec
fwait
lahf
jmp
fcom
add
adc
push
jecxz
pusha
and
test
data16
clc
(bad)
sbb
mov
xchg
mov
jmp
jp
mov
fwait
push
hlt
dec
loope
stc
fnsave
fbld
icebp
iret
xor
fisttp
push
xor
out
(bad)
jne
lods
dec
xchg
pop
pop
pop
and
or
dec
jmp
sbb
cmp
sub
das
in
push
pop
add
stc
mov
movs
xchg
outs
mov
mov
mov
popa
(bad)
adc
push
and
push
(bad)
inc
loope
xor
sub
js
aas
std
pop
push
push
(bad)
(bad)
adc
mov
jmp
pop
push
mov
or
sbb
pop
xor
mov
fnstsw
movs
test
dec
aam
mov
in
and
or
movs
pop
jp
sub
or
pop
rcl
(bad)
and
pop
add
and
pop
add
inc
fwait
jl
cmp
adc
aaa
dec
loopne
fs
jecxz
adc
sub
inc
dec
mov
mov
jbe
imul
push
cmp
mov
mov
mov
mov
push
out
das
into
jnp
and
push
repz
mov
vmwrite
loopne
mov
ret
sub
sbb
gs
ss
fisttp
cld
cwde
out
jo
cmps
inc
cmp
mov
mov
sbb
xchg
push
sbb
aas
jmp
in
stos
outs
cmp
and
lods
sbb
and
mov
js
mov
(bad)
int3
sbb
cmps
je
mov
movs
or
or
inc
pop
inc
dec
and
stc
xchg
call
sti
cdq
rol
sub
aas
mov
fisttp
out
jmp
pusha
repnz
push
pop
inc
jae
push
sahf
inc
test
out
fdivr
stos
add
imul
aaa
imul
jg
jmp
pop
add
jmp
xor
fidiv
outs
xor
jns
xchg
jl
ds
mov
jge
jne
xor
(bad)
movs
arpl
inc
pop
scas
int
and
xlat
loope
scas
pop
cld
mov
mov
call
lock
popf
dec
xchg
sub
push
fnsave
nop
mov
ret
add
(bad)
std
or
jge
inc
movs
mov
repz
(bad)
sar
mov
mov
shl
jo
jns
in
inc
xchg
jo
ins
jge
xor
mov
out
push
in
sub
call
xchg
or
ds
out
mov
ret
jp
shr
mov
add
pop
sub
out
jmp
pop
jbe
cmp
pop
aas
pop
pop
and
xchg
mov
imul
aaa
mov
inc
call
outs
(bad)
iret
mov
inc
lods
sub
(bad)
push
in
inc
retf
mov
inc
arpl
sbb
mov
fs
jmp
dec
out
jmp
cld
xchg
cld
pop
ret
ficomp
inc
je
mov
dec
jl
cmp
call
inc
aas
xchg
jno
xor
gs
loop
cwde
dec
push
mov
ret
cmp
aaa
(bad)
mov
sbb
sub
out
push
xor
mov
xchg
mov
mov
lods
test
mov
aam
test
movs
pop
dec
cdq
scas
pop
leave
scas
aam
lds
sar
nop
cmp
(bad)
mov
jmp
mov
ror
dec
or
mov
mov
fwait
aam
scas
stc
xor
js
mov
fmul
es
call
into
and
nop
xchg
dec
aad
fsub
in
jmp
test
inc
mov
bound
push
cli
xchg
sub
push
nop
add
les
das
adc
or
clc
sub
or
or
nop
add
and
(bad)
mov
push
mov
pop
hlt
sub
rol
ret
cmp
es
jmp
jmp
adc
aaa
pop
xor
mov
add
test
sahf
sbb
lea
loope
sbb
pop
outs
inc
xchg
jmp
lods
sbb
stos
(bad)
jl
arpl
mov
stos
mov
and
sbb
pop
test
mov
fiadd
ret
cmp
jg
inc
jns
aam
sub
push
(bad)
xchg
push
rcr
add
cmp
xchg
jl
mov
or
adc
hlt
pusha
cmp
push
xchg
inc
pushf
or
pusha
sub
in
fcom
or
mov
jge
rcl
lods
pop
(bad)
dec
fsub
sub
mov
xchg
and
jle
outs
push
add
mov
cmp
arpl
iret
mov
pop
in
push
nop
fdiv
hlt
xchg
int3
sub
out
lahf
and
adc
pop
mov
fisttp
clc
jo
xor
into
pushf
ret
mov
push
(bad)
fcomp
sbb
jbe
mov
movs
or
xor
pop
push
jmp
cmps
les
xchg
pop
cmps
inc
sub
pop
mov
mov
cs
int3
rcr
and
jno
mov
sbb
or
call
inc
les
les
retf
sbb
call
mov
sbb
inc
data16
aas
pop
or
jmp
js
cmp
cmp
fimul
adc
int3
aas
pop
jno
out
mov
bound
adc
popa
fs
add
mov
push
pop
mov
xchg
not
rep
push
push
loop
and
and
and
repnz
mov
xor
mov
mov
sar
cmp
adc
gs
mov
stos
(bad)
sbb
clc
mov
jae
addr16
lods
push
push
inc
adc
ror
xor
clc
xchg
dec
xchg
jl
mov
retf
aaa
nop
fidivr
mov
mov
out
shl
push
in
or
stos
scas
mov
les
movs
sub
add
dec
lahf
jbe
ja
cli
test
rcl
pop
xchg
aam
jl
adc
and
leave
stc
pop
lahf
xlat
rcr
dec
fld
adc
push
cmp
call
fist
push
in
cmp
stc
fsub
xor
pop
mov
sahf
iret
push
sahf
dec
out
or
scas
add
dec
cmp
sti
sub
ficomp
lea
xor
fadd
test
xor
and
out
jne
xor
into
ins
out
and
sub
shl
sbb
xchg
cdq
dec
stc
fidiv
in
(bad)
pop
js
int3
or
(bad)
stos
aas
enter
repz
call
add
ret
sar
sbb
iret
ja
inc
int
call
aad
iret
jg
mov
jb
iret
scas
in
adc
adc
and
jle
aam
mov
push
adc
push
adc
jg
mov
hlt
mov
mov
push
les
(bad)
jne
pusha
pop
sbb
or
fisttp
movs
mov
not
stos
cmp
and
jns
jmp
mov
(bad)
vpinsrb
dec
add
sbb
popf
add
xchg
mov
es
fiadd
stos
(bad)
out
push
mov
jne
sub
add
adc
and
ja
jo
ins
jmp
push
das
and
inc
ins
repz
mov
fmul
loope
xor
jmp
xchg
push
data16
shl
mov
mov
or
push
aam
xchg
loop
lds
inc
call
jmp
test
cwde
xchg
stos
(bad)
ins
add
xchg
push
and
inc
and
int
lahf
mov
stos
xchg
fs
(bad)
xor
dec
imul
xchg
xchg
mov
nop
aam
lds
sbb
or
push
ins
mov
pop
add
mov
and
dec
mov
ins
push
sti
(bad)
jae
nop
pop
jge
test
sti
cmps
sub
ret
leave
push
pusha
adc
dec
pop
cld
adc
fldcw
fnstsw
adc
jl
aad
retf
imul
xchg
or
fdiv
outs
cmp
jecxz
jno
sbb
(bad)
es
xchg
cmp
xor
aaa
cmp
add
sbb
cdq
mov
and
fst
xchg
xchg
stos
sbb
sbb
lods
or
pop
sub
cdq
movs
loopne
scas
fdivr
mov
fs
xor
pushf
push
addr16
dec
adc
(bad)
mov
dec
jl
cmp
rcl
neg
dec
popa
es
adc
xchg
hlt
stos
inc
add
loopne
add
fwait
into
std
cmp
mov
cdq
scas
nop
repz
ret
int3
rol
or
clc
retf
add
mov
test
jo
mov
push
pop
int
sub
neg
int3
push
inc
out
sub
enter
cmp
ret
adc
jg
jge
mov
leave
repnz
add
out
movs
cli
rcr
dec
and
mov
stos
mov
dec
cmp
loop
cmp
mov
repnz
mov
mov
test
adc
int
jl
inc
xor
sar
bnd
lea
popa
dec
xor
fstp
shr
pop
out
sti
stos
adc
dec
(bad)
sub
mov
das
xor
mov
jmp
cmp
je
pushf
mov
clc
mov
xchg
mov
imul
jae
ss
push
outs
jecxz
jmp
or
nop
mov
movs
sbb
movs
jmp
or
xchg
das
mov
sub
mov
jmp
call
and
ret
out
cmp
cmp
cmp
xor
pop
call
loopne
je
inc
daa
pusha
or
scas
push
sbb
sub
scas
call
and
cmp
pop
mov
call
mov
gs
enter
push
push
mul
repz
pop
daa
repnz
jne
test
sbb
lods
mov
xlat
push
push
in
pushf
adc
push
pop
sbb
aaa
aam
repnz
ret
inc
sbb
xchg
mov
inc
xlat
fisttp
aam
es
xor
in
mov
repnz
(bad)
pop
popf
push
loopne
mov
cdq
cwde
dec
mov
inc
imul
adc
mov
ret
mov
and
fdiv
addr16
mov
cmps
pop
pop
adc
sti
loope
cli
sti
cmp
(bad)
js
xchg
and
(bad)
push
cmp
dec
sar
jno
cmps
cs
lea
sub
or
push
add
mov
add
rol
shl
push
mov
mov
mov
mov
out
mov
sub
xchg
sbb
into
sub
loopne
fwait
pop
push
(bad)
out
sbb
xor
cdq
fdivr
jb
cmps
xchg
sbb
cmc
ja
shl
test
cmp
cmc
or
aas
cmp
arpl
adc
or
xchg
jl
adc
xchg
xor
or
xor
ins
pop
leave
call
daa
iret
inc
retf
cmps
in
inc
sbb
mov
outs
adc
xchg
pop
push
les
mov
and
test
lods
movs
test
retf
mov
adc
add
push
out
repz
stos
sbb
jo
shl
xor
imul
inc
nop
ins
push
xor
mov
dec
(bad)
scas
inc
fadd
iret
cmps
adc
push
mov
addr16
push
leave
call
sar
jmp
sub
je
jecxz
mov
fsub
push
fst
outs
jbe
jne
nop
mov
xchg
imul
lahf
cmc
mov
mov
mul
test
jns
xchg
jmp
jge
int3
jmp
mov
out
out
hlt
jnp
inc
xlat
pop
test
and
rol
les
leave
mov
sub
popf
push
dec
adc
rcr
dec
mov
sbb
jg
ins
xchg
cmps
mov
sahf
push
aam
dec
xor
adc
aad
sbb
test
imul
nop
ja
movs
(bad)
mov
sbb
aad
push
mov
fistp
pop
js
mov
out
test
add
cli
repnz
lahf
lods
mov
dec
add
cmp
push
shl
sub
aam
mov
cdq
mov
jle
aas
lods
inc
(bad)
outs
lahf
or
sahf
add
jno
(bad)
dec
xor
push
inc
sub
aaa
ror
fwait
pop
pop
xchg
lods
sbb
and
xor
out
cs
mov
dec
xchg
jl
pop
dec
jle
mov
ds
ins
pop
xchg
xor
sbb
mov
sbb
cmp
mov
in
pop
movs
adc
aaa
pushf
xlat
mov
dec
cs
cmps
leave
repnz
or
les
and
test
into
call
stc
inc
shl
xor
pop
out
in
ret
iret
or
pop
scas
cmp
popa
popf
cmp
mov
fnstcw
push
call
add
add
stos
loopne
inc
enter
mov
or
test
rcr
sub
pop
mov
cld
add
or
mov
rol
pop
inc
push
push
call
jmp
fiadd
or
lods
sbb
pusha
dec
or
hlt
ja
aas
sbb
test
rcr
aaa
pop
push
pop
pop
out
or
call
add
rol
clc
(bad)
fisttp
add
sub
(bad)
push
mov
sub
jae
xor
mov
pushf
jns
div
ds
jecxz
mov
pop
arpl
popf
enter
pop
cmps
cld
movs
lahf
or
shr
les
push
xchg
jo
lods
dec
adc
push
and
cmp
or
idiv
inc
dec
push
cmp
mov
sbb
or
cmp
fisttp
aad
or
clc
push
out
inc
stc
push
das
pop
(bad)
ins
inc
push
add
outs
out
(bad)
push
or
pop
inc
push
xchg
outs
xor
shl
aam
dec
push
nop
ret
stos
lods
aad
jns
(bad)
push
mov
mov
inc
adc
cmp
jecxz
test
mov
es
int3
mov
lahf
imul
cs
mov
cs
xchg
test
pop
test
aas
pop
mov
int
sti
dec
and
scas
inc
mov
or
jns
cli
outs
mov
or
pop
(bad)
cmp
dec
pushf
inc
repz
mov
clc
and
scas
call
aaa
daa
fiadd
inc
mov
les
push
sbb
mov
fwait
pop
dec
sub
hlt
inc
fnstsw
xchg
cmp
outs
scas
ror
sbb
ss
jb
les
aam
fsubrp
lea
add
jle
arpl
adc
or
inc
(bad)
ins
inc
pop
ret
(bad)
pop
cs
and
fstp
test
inc
dec
loop
sti
mov
out
push
(bad)
ins
adc
repnz
scas
mov
test
test
inc
cmp
pushf
xchg
(bad)
stos
(bad)
mov
loop
inc
add
cmp
xor
imul
adc
jo
not
xor
jmp
cmp
ret
out
cs
or
mov
lea
cli
loope
dec
jnp
jmp
dec
outs
dec
(bad)
pusha
xchg
and
mov
and
stos
ins
out
into
ret
add
xchg
lods
jl
std
shl
(bad)
mov
inc
add
ret
and
fisubr
idiv
or
into
scas
repnz
cs
sub
fucomi
pop
mov
pop
cwde
outs
rcr
sbb
jl
cld
fcmove
rcl
div
call
push
fcomp
popa
mov
inc
sub
aas
mov
adc
mov
jns
popf
pop
adc
cmp
je
add
rcr
ja
inc
ins
ret
pop
fidiv
lea
lods
popf
repz
enter
inc
pop
jl
push
add
and
retf
add
and
or
pop
cmp
popa
imul
out
popa
scas
xchg
mov
cdq
test
mov
retf
and
arpl
fidiv
stc
aad
fnstenv
imul
outs
jmp
xchg
mov
lahf
pop
add
aad
rol
leave
sub
jmp
or
addr16
and
pop
xchg
dec
std
and
lods
or
pop
cmp
adc
add
repz
aam
jg
add
out
mov
rol
push
enter
iret
pop
scas
cld
loop
in
dec
jno
std
test
je
sahf
movs
(bad)
adc
icebp
xor
sbb
(bad)
jge
sbb
arpl
jg
push
icebp
xchg
lods
xlat
mov
lea
sub
cmps
mov
neg
jmp
adc
dec
ds
daa
test
jno
retf
mov
fld
clc
mov
fcom
cwde
xor
xchg
imul
adc
sub
add
mov
int3
add
push
adc
push
sbb
repnz
loop
ret
outs
push
test
xlat
push
test
loopne
mov
push
add
out
scas
push
sar
test
(bad)
sub
pusha
sti
xchg
call
loope
int
fst
xchg
mov
xor
hlt
cmc
mov
ret
jecxz
vmovdqa
in
(bad)
cmp
add
fld
dec
push
out
int3
sti
or
mov
add
es
jp
xor
pop
sub
pop
cmp
in
pusha
sbb
rcl
mov
(bad)
sbb
xor
cmp
xlat
push
push
cmp
hlt
or
sbb
or
stc
call
adc
dec
add
adc
pop
int3
sbb
jl
sbb
sbb
movs
and
cmp
sti
aam
cmp
mov
pusha
mov
pop
xor
mov
mov
pop
lock
mov
pop
fdiv
dec
lods
dec
jl
dec
leave
jb
xor
pop
adc
pusha
repz
scas
dec
jl
inc
mov
outs
out
ins
mov
cld
rol
loopne
ror
mov
jb
mov
hlt
mov
mov
fwait
test
adc
movs
sub
adc
adc
mov
cwde
add
repnz
sar
xor
icebp
or
fidivr
stc
jge
pop
cmps
jnp
inc
dec
loop
sti
mov
movs
sub
mov
mov
imul
inc
ins
sar
jmp
(bad)
in
mov
push
in
retf
outs
cmp
pop
cmp
das
mov
out
add
out
(bad)
call
fistp
cdq
and
or
popf
cwde
dec
sbb
test
out
mov
mov
or
adc
pushf
nop
mov
(bad)
aad
and
ror
sbb
or
repz
int3
cmp
int
js
and
xchg
cdq
scas
and
pop
les
mov
retf
pxor
mov
mov
(bad)
stc
scas
pop
jmp
ret
je
scas
js
ficom
mov
mov
shr
mov
and
add
iret
lds
in
adc
inc
xchg
inc
cmps
mov
les
jp
imul
push
and
aad
cmps
jmp
bound
test
imul
or
movs
pusha
inc
dec
(bad)
sar
call
movs
add
jle
mov
push
cmp
adc
mov
pop
add
in
lea
mov
adc
mov
ret
call
mov
xchg
repz
mov
add
add
sbb
cmc
mov
pop
sar
mov
pop
dec
hlt
mov
cs
cmp
cwde
call
jp
arpl
ja
cwde
imul
cdq
jp
test
shl
cli
cmps
pop
xchg
cmp
(bad)
in
or
je
mov
in
test
mov
jle
xor
arpl
sbb
sub
test
and
adc
pop
in
and
gs
add
push
cmove
push
ret
mov
in
pop
aaa
into
(bad)
xchg
lds
inc
jns
cmp
fiadd
push
pusha
xchg
mov
sti
fdivr
inc
pop
adc
push
mov
fstp
rcl
popf
or
in
jb
call
fsubr
in
xchg
dec
outs
sub
lea
push
xchg
(bad)
jnp
lock
sub
push
ins
shr
retf
cli
and
popa
push
fist
cmc
jns
add
and
loope
xchg
aas
xor
inc
(bad)
sbb
sar
mov
neg
jo
data16
push
(bad)
int3
push
dec
push
adc
in
icebp
push
xlat
lock
sub
aaa
aas
push
sbb
and
pop
cdq
shr
add
jmp
jmp
popf
xor
pop
adc
sbb
sub
fstp
sub
std
mov
std
jecxz
fbstp
mov
cmp
jle
pop
in
add
retf
mov
inc
mov
dec
and
(bad)
sbb
in
dec
pop
xor
jecxz
push
mov
dec
jle
and
call
push
mov
test
inc
mov
jne
and
scas
lods
jmp
dec
fs
cdq
shl
call
cli
cmp
int
jecxz
mov
test
outs
mov
stc
daa
sti
dec
mov
pop
ja
mov
mov
jmp
mov
adc
into
sub
cdq
std
in
pusha
xlat
xlat
mov
call
out
push
out
into
fwait
jmp
adc
add
ja
lds
pushf
mov
jmp
sub
pop
outs
sub
ins
aaa
loopne
cmps
sbb
sahf
int
sbb
fld
into
ss
or
mov
pop
sub
and
(bad)
aam
test
and
and
ret
out
cdq
and
jg
adc
and
adc
sti
sti
pop
jecxz
mov
shl
test
stos
idiv
fsubr
ss
mov
dec
add
movs
inc
pop
xchg
fsubr
mov
mov
cmp
cli
stos
lods
mov
ret
push
mov
lods
push
clc
(bad)
sbb
gs
cmp
fmul
mov
fsub
retf
je
nop
aam
mov
jmp
shl
int
mov
adc
lea
sub
aas
rcl
pop
inc
fistp
clc
lds
inc
mov
(bad)
int
pop
xchg
sbb
movs
hlt
icebp
add
fsub
mov
stos
addr16
sahf
pop
mov
fsubr
cli
pop
sub
mov
data16
out
ds
xchg
mov
sub
mov
dec
imul
fdiv
lds
pop
mov
push
jb
inc
cmp
sbb
jae
imul
data16
adc
cmc
xchg
je
mov
jno
mov
mov
inc
(bad)
int3
or
dec
iret
cmp
(bad)
mov
outs
mov
outs
bound
xchg
fdivr
(bad)
sub
(bad)
mov
push
jnp
gs
xchg
xchg
jbe
cmp
cmps
not
fstp
scas
fsubr
ja
ss
pushf
push
jg
in
xchg
fstp
addr16
pop
(bad)
and
stos
fs
jl
and
call
or
jne
jmp
sub
sub
inc
mov
pop
out
sub
(bad)
mov
push
in
add
retf
or
jnp
lods
xchg
push
jg
shr
mov
mov
retf
mov
dec
mov
aad
dec
push
loop
xor
shr
cmp
inc
push
sbb
inc
les
(bad)
sub
(bad)
or
pop
cwde
sub
xor
mov
mov
in
loopne
std
sbb
or
and
fadd
sbb
pop
ds
fwait
cmps
adc
loopne
sub
push
jmp
fld
test
inc
jb
sbb
lahf
push
mov
test
xor
aas
mov
sbb
dec
out
sbb
lods
popf
mov
stos
adc
call
dec
push
push
(bad)
xor
xlat
xchg
(bad)
or
cli
and
mov
jl
mov
adc
repnz
mov
add
in
xlat
retf
ret
out
pop
jne
fiadd
retf
xchg
(bad)
adc
add
dec
ret
fidivr
jecxz
and
jle
lahf
data16
das
inc
shl
mov
jo
shl
sti
xchg
and
les
arpl
push
scas
and
scas
push
das
mov
sub
mov
(bad)
jmp
or
hlt
dec
pop
pusha
xlat
mov
push
mov
add
add
sbb
mul
mov
xor
cld
call
popa
cmps
add
fdiv
xchg
push
inc
mov
mov
cli
xchg
in
mov
sbb
mov
push
mov
mov
pop
dec
addr16
mov
je
and
int3
shr
or
daa
sub
das
mov
imul
pop
test
cli
enter
cmp
inc
cmp
pop
mov
xor
jge
push
fild
mov
jb
cmps
fcmovbe
mov
jno
inc
jns
retf
push
mov
sbb
scas
and
cwde
adc
in
lods
bound
mov
dec
and
imul
sbb
movq
fiadd
dec
xorps
push
push
dec
mov
es
int3
loope
adc
mov
les
out
loopne
and
mov
and
push
jae
(bad)
scas
pop
pop
fwait
xchg
adc
mov
pop
pop
scas
xchg
out
addr16
inc
fadd
mov
mov
mov
xchg
cs
nop
jle
call
shr
rcl
mov
je
in
push
and
jnp
xor
shl
out
mov
cli
outs
jge
push
xchg
test
cmps
add
ret
stos
inc
(bad)
xchg
xor
jge
jae
rol
push
mov
push
mov
ins
into
cmp
pop
shr
mov
pop
loopne
pop
fidivr
mov
scas
cdq
mov
push
pop
lods
rcl
cmp
in
cli
test
fimul
out
dec
jnp
inc
ins
sub
mov
lods
mov
fadd
pusha
icebp
not
inc
jg
mov
call
dec
ins
pop
jns
dec
cmps
inc
add
imul
inc
sub
cmps
adc
jmp
fwait
(bad)
fadd
mov
xor
inc
add
sub
and
mov
mov
and
mov
mov
call
addr16
inc
xor
out
in
mov
ds
pop
fistp
fdiv
cmc
push
cmp
mov
pop
cmps
jbe
adc
mov
ds
or
in
xor
in
and
mov
push
arpl
fwait
mov
jmp
push
stos
ficomp
xchg
dec
fsubr
cld
pop
jp
dec
stos
sub
repz
or
pop
push
mov
(bad)
jmp
inc
mov
nop
and
fcom
ret
cmp
into
ror
enter
jbe
lds
sub
xchg
fwait
aam
xchg
pop
sub
ret
dec
movs
push
sub
es
xor
push
or
mov
mov
inc
fwait
xor
das
or
into
loopne
adc
mov
rcr
pop
es
scas
int3
ds
aam
pop
xchg
and
fmul
add
mov
retf
pop
mov
movs
cmps
hlt
pop
pop
add
loope
push
int
cmp
and
mov
cmp
(bad)
cmp
call
ss
test
popa
cmps
add
add
push
add
pop
outs
(bad)
mov
and
cli
mov
jge
pop
mov
xchg
or
xor
push
or
xchg
pusha
dec
in
das
repz
mul
mov
mov
hlt
mov
fmul
mov
pop
dec
cmc
dec
sub
or
outs
dec
inc
mov
push
sub
loope
in
lea
stos
int3
xor
jno
jbe
mov
in
mov
cli
jne
imul
mov
jnp
ins
cmp
xchg
jns
mov
out
fwait
ss
bound
sbb
movs
(bad)
inc
cs
inc
jo
je
inc
adc
xor
aas
xchg
cmp
sub
dec
push
mov
(bad)
push
xor
(bad)
push
sbb
and
inc
dec
xor
adc
cmp
xchg
ds
pop
push
inc
or
or
mov
not
add
scas
cmp
and
xor
call
and
mov
pop
outs
push
jnp
mov
sti
fucomip
je
out
mov
fwait
sbb
fiadd
sbb
rcr
xor
sub
(bad)
cmp
sbb
test
inc
shr
dec
retf
mov
(bad)
popf
loopne
in
xchg
inc
cmps
cld
pop
push
sbb
xchg
hlt
mov
xor
call
fdivr
retf
push
cmc
sti
sub
out
out
pop
std
mov
push
pop
fsub
xchg
popa
icebp
pop
jge
jnp
xor
jnp
jl
mov
stos
arpl
iret
pop
mov
pusha
mov
iret
(bad)
mov
push
sub
mov
movs
jno
aaa
push
mov
jae
xchg
add
retf
mov
xchg
retf
push
jnp
add
add
mov
and
scas
addr16
fsub
shl
jb
jmp
mov
aad
ds
jno
add
push
test
dec
sub
jp
(bad)
pop
mov
aaa
inc
retf
add
(bad)
or
cld
adc
mov
fist
cmps
or
scas
lahf
pop
jo
in
rol
and
or
or
adc
bound
xchg
mov
jecxz
mov
pushf
jge
out
or
leave
push
push
xchg
retf
into
mov
mov
(bad)
(bad)
jge
hlt
jo
jbe
jp
call
add
fcmovu
mov
ss
(bad)
outs
xor
ds
das
dec
add
mov
(bad)
aad
sbb
lods
cli
jmp
xchg
jb
inc
out
sbb
js
pushf
sbb
fwait
mov
mov
(bad)
cmp
and
(bad)
mov
stos
mov
(bad)
daa
dec
mov
shl
dec
cmp
movs
aad
and
sti
(bad)
movs
sbb
popa
xor
sub
mov
sti
scas
cmp
sbb
jns
jg
out
sbb
cmps
enter
in
mov
xchg
(bad)
push
lds
adc
push
cmc
inc
leave
jg
cmc
mov
sub
stos
shr
outs
aaa
out
inc
cs
pop
test
(bad)
out
je
(bad)
(bad)
xchg
inc
mov
arpl
adc
or
and
pop
mov
cwde
jo
jg
jge
repz
ja
sbb
or
cmp
int
int
ja
cmps
push
xchg
neg
(bad)
mov
jecxz
mov
cdq
mov
lods
pop
add
mov
sub
xlat
mov
xchg
jg
out
cmp
or
sbb
cwde
mov
dec
adc
sbb
test
pop
hlt
xor
in
xchg
inc
aad
xor
pop
pop
ss
jb
lahf
sub
movs
in
pop
pop
mov
sub
mov
push
sub
xchg
inc
call
cmp
inc
pop
or
cwde
adc
jne
dec
push
sub
repz
mov
pop
ins
loop
fistp
or
mov
gs
sbb
cmp
xchg
inc
dec
dec
ror
adc
in
cmps
sub
in
rcr
movs
loopne
pushf
test
ds
enter
cmp
lea
xchg
dec
outs
stos
movs
mov
mov
adc
hlt
xchg
test
sbb
fwait
lock
leave
std
fs
in
jno
mov
lea
mov
xor
and
inc
and
enter
rol
cwde
cmp
test
iret
push
test
ficom
ja
repnz
mov
mov
aam
imul
dec
outs
jge
sub
jnp
stc
or
movs
cmp
xchg
sbb
cwde
retf
cmp
or
jbe
call
js
mov
jmp
xchg
fiadd
pop
mov
cmp
mov
jne
test
xor
push
jp
jne
sub
jne
fwait
dec
loope
call
test
xlat
push
mov
mov
or
jae
and
push
les
cmps
xor
aas
jge
mov
xor
std
adc
gs
push
and
pop
jmp
data16
ss
lea
mov
and
pop
jns
mov
mov
mov
mov
mov
mov
sbb
sbb
int
mov
pop
push
xor
jbe
stc
outs
xchg
imul
scas
cmp
(bad)
push
cmp
fst
retf
mov
push
xor
push
scas
mov
nop
xchg
jb
jecxz
inc
sbb
(bad)
std
test
adc
pop
push
push
repz
(bad)
(bad)
mov
sbb
sub
inc
lock
xchg
jmp
out
inc
mov
adc
push
jbe
pop
pop
sbb
pop
outs
xor
fistp
mov
loope
mov
shl
sub
add
out
xor
mov
xlat
cmp
retf
xchg
das
(bad)
call
mov
mov
mov
xor
out
iret
sbb
rcl
cmp
hlt
xchg
push
hlt
test
gs
add
out
mov
fisttp
adc
gs
movs
popa
adc
add
mov
mov
xor
inc
push
sbb
jmp
int
push
inc
sub
and
jecxz
xchg
inc
sub
icebp
neg
loopne
ins
dec
jmp
cwde
daa
or
imul
adc
inc
(bad)
loopne
adc
test
shr
xchg
ins
lods
ins
pop
jno
mov
or
mov
enter
jno
out
fld
pop
aam
pop
lods
inc
data16
mov
ret
jmp
sub
stos
push
sub
adc
pop
loop
dec
leave
stos
mov
xor
xor
jge
shl
and
sbb
push
mov
adc
out
call
inc
jbe
and
push
jge
mov
in
or
lds
data16
jle
adc
pop
leave
sbb
push
fdiv
pop
cmp
bound
cwde
repz
enter
cmp
stos
inc
shl
jbe
push
add
mov
sub
rcr
rcl
out
lahf
inc
add
pushf
das
cmps
dec
jne
fwait
push
ss
sbb
fucom
bound
neg
push
mov
mov
sar
fdiv
setbe
inc
inc
push
inc
adc
ss
mov
add
pop
push
and
and
and
test
stc
pop
stos
enter
pop
mov
pop
std
or
or
mov
fwait
pop
js
scas
mov
mov
mov
iret
sub
rol
dec
icebp
cmp
retf
xor
fimul
iret
cmc
cmp
out
ret
(bad)
repnz
mov
sbb
inc
xor
mov
repnz
sbb
ja
loopne
jmp
mov
imul
inc
sub
jmp
jbe
lea
out
mov
push
fwait
repz
mov
cmps
rcr
into
cmps
and
int
fist
mov
pop
fst
adc
add
cmp
jecxz
int
jecxz
retf
dec
pop
or
rol
test
and
jp
mov
mov
in
dec
jnp
mov
gs
addr16
call
dec
pop
mov
out
sbb
sbb
mov
xchg
pop
in
loopne
jne
aas
cli
xchg
adc
enter
rcl
cld
(bad)
outs
frstor
or
rcl
popa
iret
jbe
mov
jecxz
scas
xchg
inc
mov
xchg
(bad)
cmp
push
test
jbe
xchg
push
xor
sbb
cmp
cwde
inc
mov
xor
pop
xor
scas
add
xchg
aaa
jmp
push
retf
leave
push
xor
push
cmp
jae
imul
cmp
lods
push
cmp
outs
hlt
and
mov
fld
les
test
addr16
xchg
sub
dec
dec
add
out
(bad)
stos
cmp
int3
enter
jno
push
push
pusha
imul
inc
lds
push
sbb
pop
call
sbb
dec
inc
push
mov
enter
imul
aam
sub
pop
cld
int3
mov
jmp
nop
hlt
dec
lods
or
fucomp
mov
sub
hlt
mov
push
int3
inc
mov
inc
dec
rcr
mov
or
retf
icebp
mov
jbe
pop
adc
mov
faddp
dec
jnp
(bad)
test
dec
mov
clc
ins
xor
stos
mov
jne
pop
lds
push
xchg
popa
add
inc
stc
mov
cmps
hlt
xchg
fnstcw
jns
mov
stc
add
sahf
add
addr16
add
xchg
call
inc
dec
dec
int3
pop
(bad)
and
or
bound
bound
in
ficomp
daa
imul
lods
sbb
jl
lods
mov
(bad)
xchg
inc
mov
rcl
scas
jle
and
mov
mov
push
lock
and
sub
rol
sub
push
add
jp
(bad)
mov
int
jmp
in
cwde
inc
mov
push
dec
inc
dec
lea
test
movs
lods
or
push
scas
cmp
cdq
ror
jle
mov
add
jmp
adc
jo
(bad)
leave
dec
shl
icebp
dec
xor
add
aaa
adc
int
repz
retf
not
jb
or
and
sub
push
xchg
push
clc
mov
dec
inc
mov
push
frstor
mov
xor
adc
xchg
loope
loop
dec
mov
dec
dec
repz
pusha
sar
shl
mov
xor
push
or
pop
or
add
push
jecxz
push
push
add
or
imul
cdq
pop
sub
jb
lds
in
cmp
and
pop
adc
aaa
xchg
repnz
test
call
mov
sub
mov
sbb
xor
(bad)
fisttp
jl
fs
pop
xchg
sub
mov
sub
outs
jp
inc
mov
or
mov
and
xchg
daa
mov
adc
je
lds
jno
addr16
(bad)
iret
ds
(bad)
xchg
dec
or
add
sub
lods
mov
add
das
pop
jle
mov
mov
mov
mov
(bad)
xchg
ja
inc
test
retf
call
push
mov
stos
jbe
cmp
jg
push
mov
cmc
ins
test
cmp
in
mov
dec
xchg
jae
aaa
rcl
sub
cmp
lock
mov
or
(bad)
mov
push
(bad)
in
movs
fnsave
mov
xchg
lahf
push
xchg
or
xor
xchg
mov
push
mov
sub
ret
hlt
jg
push
call
mov
scas
mov
sbb
cmps
repz
popa
push
enter
ror
add
xchg
lahf
neg
sub
inc
hlt
je
inc
test
ins
push
sar
mov
xchg
ret
shr
pushf
or
dec
(bad)
xlat
mov
mov
and
aam
xchg
and
xchg
mov
cmps
je
add
das
dec
dec
rol
mov
xchg
mov
jmp
pop
aas
fwait
in
xchg
sub
xor
push
dec
push
sbb
mov
jmp
test
test
ficom
iret
xor
mov
ja
loope
xchg
int3
arpl
adc
mov
les
arpl
xor
inc
scas
push
xor
pop
enter
push
call
jns
push
inc
dec
movs
fwait
out
inc
mov
ficom
sub
sub
xchg
pop
mov
push
ja
stc
or
dec
cdq
jecxz
inc
out
mov
cmp
sahf
(bad)
cld
pop
adc
push
cmp
ins
das
jnp
push
push
daa
cmp
leave
je
aad
jae
sbb
and
cmp
loop
or
pop
ds
add
mov
dec
popf
nop
mov
outs
xchg
sub
cmp
mov
retf
mov
test
test
jb
imul
push
es
or
adc
mov
jmp
stc
mov
jmp
inc
(bad)
mov
stc
cmps
jbe
mov
cmps
rol
daa
es
(bad)
fsubrp
mov
jo
sbb
scas
dec
cli
(bad)
jmp
mov
loope
cmps
dec
clc
int
jns
jnp
shl
jne
ins
lods
std
test
inc
cdq
sub
icebp
(bad)
xchg
mov
fidivr
mov
inc
out
push
fwait
add
mov
fucomip
(bad)
cmc
pop
int
mov
jecxz
mov
fwait
icebp
scas
repnz
inc
sbb
outs
xor
sub
or
mov
mov
movs
sbb
dec
jmp
pop
or
je
cli
pop
xchg
cmp
sbb
sbb
das
int
dec
and
xchg
ret
adc
js
fdivr
dec
cmps
sub
or
rcl
cmp
dec
call
sbb
cmc
mov
xchg
sub
mov
mov
test
push
inc
outs
push
popf
push
mov
fcom
sub
imul
push
(bad)
mov
push
in
adc
pop
retf
nop
xor
or
test
mov
dec
add
fisub
mov
mov
cs
dec
xor
mov
xor
adc
jmp
mov
test
adc
int3
pop
cmp
xor
lock
daa
fidivr
xchg
fcomp
imul
mov
in
add
push
adc
mov
fidiv
test
adc
adc
or
lods
(bad)
ds
cmps
mov
pop
and
popa
aaa
or
xchg
fisubr
outs
xor
les
xchg
mov
pop
or
xor
loopne
inc
pusha
xchg
pop
fldl2t
mov
mov
mov
cld
xor
retf
and
ins
ret
sub
int
movs
aam
sbb
movs
mov
cmp
or
loop
leave
push
imul
jbe
xlat
rol
mov
jecxz
xchg
les
aas
adc
aad
movs
out
dec
pop
cmc
dec
jno
es
mov
in
add
popf
loopne
pop
stos
xchg
adc
into
and
xor
mov
dec
(bad)
aas
xchg
jno
ret
and
mov
adc
repnz
mov
sbb
sub
gs
cmc
pop
stos
lods
das
movs
push
ins
push
xchg
cmp
dec
jbe
(bad)
fistp
push
add
sahf
ja
mov
je
jae
das
xor
lea
enter
(bad)
push
lods
jns
repnz
jl
xor
es
or
jae
sub
adc
mov
iret
into
sbb
jb
std
mov
not
retf
cmc
fldcw
lock
js
cli
add
or
jle
dec
pop
xchg
repnz
inc
sti
and
punpckhbw
jecxz
stos
cmp
fstp
cmc
inc
dec
scas
mov
pop
fs
movs
inc
xchg
mov
xor
int
cmc
outs
nop
push
sub
mov
xor
dec
pop
or
outs
ds
std
mov
ds
or
push
jb
push
not
mov
and
mov
in
rol
into
push
adc
and
imul
cmc
inc
xchg
mov
dec
cld
mov
cmp
mov
cmp
mov
and
mov
js
mov
lds
jae
aam
js
push
aad
pop
cs
and
daa
mov
fcmovb
mov
push
adc
int
aam
retf
ss
push
cld
cmps
sbb
outs
std
inc
xlat
ficomp
mov
mov
daa
mov
clc
mov
sti
iret
adc
gs
mov
mov
inc
loop
pop
call
(bad)
pop
fistp
div
sub
cmp
pop
xchg
mov
or
clc
ins
inc
fidivr
and
sub
mov
add
imul
xchg
outs
sub
dec
mov
jbe
mov
inc
jnp
ins
inc
jae
xor
xchg
xchg
loop
bound
test
mov
les
dec
std
dec
push
xchg
sub
rol
aad
test
and
xor
es
add
ror
push
repnz
and
mov
(bad)
sbb
xor
or
mov
add
or
jnp
cmp
sub
push
cs
(bad)
(bad)
fiadd
das
xchg
js
clc
xor
xchg
icebp
xchg
pop
aam
dec
je
je
ss
sub
xchg
mov
pop
repnz
xchg
xchg
imul
mov
add
mov
lock
mov
test
fadd
jge
in
add
cdq
add
fchs
push
pop
mov
rcl
and
cmp
dec
hlt
pop
fs
in
in
test
sti
adc
xor
sub
in
out
shr
pushf
cs
pop
dec
pop
adc
pushf
js
jnp
inc
adc
(bad)
lods
mov
sbb
ror
cmp
fst
ret
or
cmp
and
iret
adc
xchg
mov
in
addr16
cmp
jg
sar
(bad)
call
daa
xor
mov
aam
cld
sbb
jge
fld
es
pushf
xchg
jo
mov
(bad)
xor
sti
sub
std
(bad)
push
mul
mov
shr
dec
add
inc
mov
add
pop
add
cmps
mov
fiadd
pop
ror
adc
fiadd
gs
xchg
xchg
fmul
mov
add
cs
xchg
push
pop
imul
in
pop
xchg
aas
and
pop
outs
jnp
addr16
je
iret
sub
push
mov
pop
dec
push
sbb
shl
sar
fldenv
(bad)
mov
adc
xchg
pop
mov
les
out
gs
mov
dec
sub
jg
cdq
jmp
inc
lods
jns
mov
ds
add
mov
lods
add
jns
cmps
add
sub
cmp
call
add
into
ins
adc
movs
out
mov
jne
aam
push
(bad)
inc
fisubr
pop
(bad)
mov
cmps
into
addr16
imul
rol
mov
movs
pusha
es
jl
ins
sbb
loop
dec
or
and
cmp
adc
div
mov
pusha
lds
or
push
push
shl
call
jle
aad
fistp
and
not
scas
adc
mov
mov
mov
jge
sahf
add
jne
lahf
cvtdq2ps
inc
push
movs
call
inc
aam
adc
movs
pop
call
sbb
jo
stc
sbb
frstpm(287
cwde
xchg
ror
push
icebp
dec
div
push
movs
sti
pop
mov
test
lods
inc
fld1
stos
mov
lods
mov
and
mov
xor
neg
jnp
js
sahf
cld
int3
or
cmc
iret
cmp
pushf
or
iret
rcr
call
xor
sub
movs
mov
(bad)
and
in
sahf
cmps
dec
enter
and
das
or
push
fwait
mov
data16
jb
push
push
jl
sub
fs
sub
dec
or
jmp
(bad)
mov
push
add
ja
pop
aad
daa
pop
std
repz
push
dec
out
bound
dec
push
add
pusha
icebp
mov
popf
push
or
xchg
cmp
aad
pop
ds
arpl
(bad)
ror
fstp
out
imul
mov
mov
dec
aas
sti
cmps
xchg
shl
jmp
mov
in
icebp
dec
sbb
xchg
inc
cmp
bound
adc
jo
or
or
or
xchg
jecxz
jl
or
mov
pop
scas
add
adc
mov
mov
fadd
xchg
adc
jecxz
sub
inc
mov
push
pop
jecxz
rol
push
push
cmp
inc
popf
retf
cmp
push
test
js
or
das
and
dec
pusha
std
pop
sbb
out
jae
inc
push
jle
add
ins
in
into
xchg
aas
push
add
cs
pop
es
movs
and
inc
xchg
push
loope
jg
mov
jb
sub
sbb
xor
js
test
ins
xchg
in
stos
lahf
imul
out
or
rol
and
sub
lods
cmp
jo
fist
scas
scas
mov
inc
pop
aas
cmps
repnz
jp
jl
sbb
xchg
inc
out
fisttp
xor
mov
mov
adc
xor
mov
mov
push
xor
mov
cdq
mov
jnp
daa
jle
sbb
and
fisubr
shl
daa
addr16
ror
mov
add
xchg
cwde
add
xchg
stos
push
ins
cmc
or
jecxz
push
scas
or
ins
pop
or
(bad)
dec
jnp
dec
loope
sbb
data16
xchg
in
(bad)
stc
arpl
test
lahf
or
jecxz
leave
jno
jg
xchg
mov
jae
sub
inc
push
sbb
add
dec
cmp
(bad)
fsub
ja
jl
dec
cmc
shl
inc
xor
pop
xor
bound
xchg
in
out
mov
mov
rol
cld
sub
int3
aad
mov
inc
shl
mov
imul
inc
mov
not
cmp
mov
std
ins
xchg
or
push
in
mov
aas
shr
cdq
sub
push
mov
jmp
dec
ds
push
adc
cmp
cmp
mov
aad
push
(bad)
adc
dec
in
cmp
mov
mov
xchg
retf
xlat
dec
aam
jg
popf
lahf
out
jns
hlt
mov
push
or
pop
push
dec
xchg
inc
mov
mov
sub
add
aam
fsub
jo
ret
jp
add
jl
lahf
cdq
cmp
push
sbb
sahf
jb
mov
inc
ins
jg
adc
loope
pop
pop
(bad)
retf
push
jg
or
sbb
cdq
sbb
push
jo
loop
cmp
in
mov
imul
int
iret
or
or
xchg
repz
or
inc
xor
pop
ror
(bad)
mov
sbb
and
bound
add
div
fidivr
and
out
out
push
xor
iret
xor
mov
and
xor
(bad)
jae
push
fwait
mov
leave
add
pslld
mov
xchg
stos
push
cmp
and
or
fist
hlt
or
pop
nop
ins
or
test
ret
mov
pop
mov
xchg
mov
stos
inc
fsub
adc
jg
dec
inc
sub
cmp
push
call
sbb
sahf
int3
imul
retf
movs
sub
cmp
jl
lahf
sub
cwde
and
adc
loop
add
into
pushf
or
push
xchg
pause
repz
popa
shl
neg
pop
test
and
and
lods
repz
sbb
pushf
movs
movs
dec
pop
mov
inc
adc
stos
cmovl
test
jg
rcl
das
add
cdq
nop
dec
test
shl
mov
call
inc
dec
sar
mov
add
cmc
repnz
mov
cmp
dec
cdq
icebp
imul
gs
push
xor
push
sub
scas
pop
pop
mov
(bad)
pop
add
bound
jae
ficom
jmp
pop
popa
xchg
cdq
add
mov
arpl
sbb
mov
mov
dec
js
pop
sub
mov
xchg
sub
jnp
jae
imul
test
sbb
dec
and
add
imul
push
push
aaa
out
or
pusha
inc
in
adc
mov
xor
add
add
push
aad
and
cs
cmp
lahf
adc
push
mov
adc
push
cmp
xchg
and
daa
mov
in
mov
pop
repz
iret
loope
inc
add
sbb
out
cmc
and
jp
frstor
bound
sar
cmp
je
inc
stos
sbb
mov
js
ror
mov
and
jne
mov
mov
out
push
push
mov
push
je
push
fwait
(bad)
aaa
sbb
loopne
das
dec
cmp
xchg
enter
xchg
pop
dec
jne
xchg
mov
jecxz
arpl
sahf
test
ins
mov
dec
lds
cmps
or
adc
add
jo
call
fadd
sub
call
outs
sub
imul
mov
sub
and
xor
adc
push
shl
jae
sub
pop
inc
inc
test
pop
dec
sbb
mov
je
movs
mul
sbb
pop
fwait
add
fimul
mov
cdq
aas
outs
(bad)
and
jmp
xor
cdq
(bad)
push
lea
lods
in
cmp
cmp
adc
int3
adc
jle
sub
add
jno
pop
aas
jno
push
add
ds
jae
jg
adc
push
das
arpl
out
jno
inc
jp
hlt
cwde
dec
xor
retf
adc
adc
mov
sar
xor
xchg
lods
ret
xchg
(bad)
push
lea
jbe
adc
rcr
int
or
jmp
ficom
retf
mov
inc
rol
or
pop
xor
mov
push
sub
jns
retf
add
adc
pushf
mov
xchg
pop
cmp
cmp
mov
out
and
push
sbb
je
xor
sub
test
dec
shl
mov
add
xor
repz
neg
loope
sbb
fcmovnu
fnsave
xchg
xchg
jl
mov
inc
call
mov
push
pop
in
sub
int
mov
sahf
jne
icebp
mov
outs
push
retf
fdivr
mov
sbb
not
pop
mov
sti
sub
inc
data16
sti
mov
mov
or
inc
pop
(bad)
out
jp
mov
(bad)
icebp
adc
and
enter
aad
dec
adc
add
mov
add
pop
(bad)
push
pushf
cs
sbb
js
and
div
ret
mov
ret
mov
test
sbb
inc
push
leave
sub
mov
adc
clc
adc
sub
cmp
(bad)
cmp
jns
xchg
fdiv
(bad)
iret
lods
imul
inc
dec
neg
outs
push
jb
xor
jne
push
call
xor
(bad)
loope
in
pop
retf
mov
xor
jbe
mov
push
and
sar
mov
shl
push
mov
dec
and
adc
mov
out
mov
dec
jp
das
lahf
(bad)
fstp
sub
out
fcom
inc
mov
and
repnz
jne
(bad)
icebp
jo
sub
push
add
push
popf
adc
cmp
jmp
lea
sub
scas
cwde
and
xchg
mov
add
push
js
jmp
mov
dec
shl
and
push
test
sub
xchg
jae
xor
in
imul
(bad)
mov
add
mov
cmp
into
ret
ror
aaa
nop
les
add
dec
retf
shrd
sub
iret
(bad)
and
sti
repnz
(bad)
jo
enter
mov
lds
cwde
jl
neg
jp
js
cld
test
pop
adc
stc
jmp
or
dec
dec
jae
jg
stc
repnz
or
aam
jecxz
dec
shld
and
test
shr
test
add
add
ins
dec
dec
mov
repz
xchg
add
cmp
and
push
jo
and
pop
xchg
mov
pop
and
cmp
dec
or
ja
dec
adc
rcl
ret
or
stos
inc
fidivr
shl
mov
jmp
sub
daa
adc
mov
dec
in
fwait
mov
push
sub
jbe
sbb
cwde
lock
dec
into
push
(bad)
jmp
mov
cmps
pushf
shl
test
adc
scas
call
out
ds
les
mov
js
ret
jnp
and
add
adc
adc
jle
push
jo
sbb
stos
jle
jle
sub
jno
mov
pop
cdq
iret
adc
(bad)
dec
jle
movs
aaa
adc
xor
call
sbb
repz
aas
xchg
pop
out
adc
or
dec
lock
stos
sbb
pop
pushf
ins
(bad)
loop
nop
js
cmp
cmovno
daa
sar
ins
fsub
and
(bad)
jl
ret
pop
sub
jo
imul
pop
xor
jl
mov
push
fs
outs
dec
into
adc
adc
xor
scas
gs
ins
jmp
in
or
xor
call
add
(bad)
ror
push
test
mov
sub
jmp
fmul
inc
and
in
add
stos
cli
xor
neg
mov
xchg
dec
jb
xchg
sar
mov
fnstcw
jnp
ret
adc
pop
xchg
adc
xchg
daa
push
cdq
repz
call
sub
out
lods
movs
jl
xchg
cmps
shl
xchg
js
pushf
push
inc
sbb
pop
iret
pop
jno
jmp
sbb
cmps
jno
dec
pop
rcl
mov
aaa
jne
jnp
dec
lea
mov
pop
(bad)
mov
popa
dec
mov
scas
popa
rcl
(bad)
xchg
mov
iret
inc
ja
lea
repz
leave
sbb
cld
gs
jl
xor
cmp
xchg
les
xchg
xlat
in
loop
mov
and
cmps
and
fisttp
ror
addr16
repnz
sub
sti
sbb
mov
push
test
jno
jo
jecxz
sbb
xchg
mov
aam
inc
pop
ror
ins
jmp
sbb
popa
data16
fiadd
stc
lock
push
mov
mov
sub
sub
cli
ret
sub
jae
repz
icebp
mov
or
sub
adc
jge
out
xor
and
icebp
add
mov
aad
mov
mov
adc
add
pushf
fimul
xchg
mov
pop
ss
adc
adc
clc
call
jl
mov
and
xor
cmp
add
jle
jl
mov
test
test
mov
mov
or
out
sub
push
aas
enter
in
in
arpl
and
xor
int3
jbe
int3
sti
or
or
cwde
mov
mov
cmp
pop
jge
(bad)
mov
jp
adc
inc
push
or
and
push
sbb
push
cmp
inc
outs
test
sbb
dec
mov
dec
adc
sub
int3
scas
xor
add
dec
jne
xchg
scas
adc
lea
xchg
sub
cld
(bad)
call
mov
xchg
call
jb
test
jnp
repz
nop
pop
repz
sbb
cmp
pop
or
movs
or
loope
xor
add
out
aaa
rol
mov
adc
mov
cli
leave
clc
sahf
pop
dec
sbb
pop
add
fsubr
mov
sbb
sbb
ins
cs
(bad)
adc
and
lods
xchg
jle
sub
in
imul
jb
push
and
dec
pop
xchg
sub
pop
mov
or
sti
pusha
ins
sbb
dec
in
fmul
and
fs
mov
jmp
jle
push
retf
jmp
sub
mov
add
sti
nop
outs
or
or
jp
in
test
xchg
bound
mov
xchg
push
dec
cmps
cmp
push
(bad)
in
dec
pushf
ret
add
jecxz
jnp
or
xadd
adc
push
mov
xchg
cli
push
aas
ret
fldz
sbb
das
dec
mov
sar
inc
les
aam
cmp
add
ret
mul
into
cmp
aas
adc
xchg
out
sub
adc
and
outs
inc
push
scas
ss
inc
shl
mov
(bad)
and
sbb
into
sar
aam
or
retf
stos
out
and
inc
mov
loopne
mov
aas
sub
push
dec
fst
mov
jmp
mov
movs
inc
mov
int
loop
xchg
call
fild
pop
add
in
repz
jg
add
cmp
mov
dec
mov
loop
les
imul
imul
add
sub
mov
cli
inc
nop
sbb
add
push
addr16
scas
and
je
lahf
or
add
sub
lea
push
cmps
inc
xor
inc
mov
sub
cmp
leave
dec
mov
inc
test
loop
icebp
mov
jae
lock
xchg
inc
arpl
loopne
inc
les
sbb
dec
adc
(bad)
sub
adc
hlt
movlps
gs
pop
cdq
and
fwait
mov
daa
fs
bound
arpl
dec
js
or
pop
cdq
mov
ins
or
or
test
je
rcr
dec
bound
sub
sar
or
aaa
cld
jl
(bad)
sub
out
push
popa
out
int
cmp
inc
aad
pop
cmp
les
out
not
mov
(bad)
scas
inc
in
xchg
sbb
js
mov
mov
nop
out
test
std
xor
xor
cmp
(bad)
mov
ja
add
xor
das
add
cld
sbb
pop
movs
dec
sub
adc
mov
test
push
ss
jne
cmp
mov
sar
push
retf
jmp
push
dec
repz
adc
mov
nop
rcr
retf
or
clc
(bad)
(bad)
aad
mov
ds
xchg
mov
inc
cmps
retf
addr16
aad
sbb
pop
loop
cld
out
loop
xchg
mov
xchg
sub
push
sbb
pop
not
retf
popf
sub
in
xchg
xchg
push
pop
mov
mov
outs
inc
ins
scas
or
fadd
jl
cs
xchg
jecxz
dec
cmp
sbb
sahf
sbb
mov
xor
or
gs
cmp
sub
mov
int3
jbe
xor
lock
mov
and
int
jge
jmp
dec
push
int
stos
and
lods
ins
clc
hlt
fwait
test
xor
mov
fsub
js
inc
jg
pop
movs
call
cmp
ja
jp
sub
bound
xor
xchg
out
push
out
and
push
mov
mov
das
cmps
(bad)
ins
mov
fldenv
in
rol
scas
aad
sbb
cmc
add
jg
sbb
sbb
xor
int
shr
call
out
arpl
lods
push
push
jecxz
lods
call
pop
mov
sbb
ret
push
lahf
push
sbb
adc
iret
jmp
dec
iret
gs
xor
add
add
sbb
ins
or
fwait
aad
in
stos
dec
aas
cmps
lods
dec
fwait
jmp
jmp
add
popa
mov
aas
outs
adc
push
xor
add
sar
mov
push
cmp
dec
jo
inc
add
data16
iret
jo
inc
rol
dec
aas
(bad)
xchg
sahf
dec
lods
aaa
in
xchg
int
paddsb
ins
call
and
je
shr
les
bound
sti
pop
icebp
mov
into
imul
pop
adc
mov
push
push
out
loopne
fsubp
jae
add
cmp
vmread
lea
mov
pop
cmp
sbb
xor
add
sbb
and
mov
inc
dec
clc
in
in
icebp
jno
pop
out
pop
js
inc
ror
fdiv
add
xor
mov
sub
retf
mov
mov
aas
or
movs
jmp
clc
cwde
xor
cmp
sub
add
(bad)
pusha
test
js
fldcw
dec
cld
ds
fisubr
shr
inc
jne
and
xchg
mov
arpl
push
retf
aaa
mov
stc
iret
jle
call
cmp
push
and
(bad)
xlat
xchg
(bad)
xor
outs
test
fcmovbe
push
fwait
and
in
lods
xchg
mov
hlt
in
pusha
or
dec
mov
jp
popf
cmp
cdq
jmp
sar
cmp
mov
cmc
sub
scas
jbe
lahf
adc
out
popa
mov
or
sbb
xor
dec
shl
aam
mov
xchg
popf
mov
and
fisubr
cmp
add
ror
sbb
adc
cmp
clc
dec
hlt
xor
mov
mov
sub
in
cs
int3
xor
cmp
js
mov
jae
xchg
icebp
ins
inc
lods
in
(bad)
mov
jne
in
add
fyl2xp1
inc
fidivr
xchg
in
rcl
jl
jnp
mov
xchg
rcr
fidivr
mov
cwde
enter
movs
push
jg
or
scas
je
adc
adc
aad
dec
sub
or
or
js
hlt
shl
in
jle
and
mov
xor
cmp
sbb
adc
data16
mov
cmps
(bad)
pop
cli
adc
inc
fldcw
loop
outs
loope
stos
and
enter
(bad)
hlt
cmp
pusha
dec
or
call
dec
mov
cmp
out
push
or
cmps
mov
stc
int3
add
gs
aad
adc
cs
rol
push
sbb
mov
fdivr
sbb
adc
popa
inc
and
stos
data16
into
(bad)
stos
jno
jo
or
dec
push
adc
pand
mov
inc
mov
and
adc
loop
cmps
rol
mov
(bad)
sbb
push
push
pop
shr
push
mov
test
push
xor
fs
jmp
(bad)
sar
ja
inc
movs
fiadd
fs
shl
push
add
(bad)
imul
adc
sbb
sub
mov
ss
and
stos
repnz
bndstx
mov
call
jno
push
jo
loopne
in
or
push
stc
pop
or
(bad)
enter
and
fiadd
test
ins
sbb
jmp
pop
lea
aad
mov
pusha
ins
fst
ss
aam
aas
jbe
jmp
shl
push
xchg
ja
jg
iret
stos
mov
ins
clc
cmp
pop
leave
jae
shr
pop
mov
jecxz
cmp
mov
mov
in
(bad)
and
leave
idiv
(bad)
addr16
das
jl
sub
sub
sub
in
jne
mov
mov
arpl
adc
mov
nop
(bad)
(bad)
xchg
jns
retf
fstp
pop
inc
push
dec
movs
add
and
mov
push
fucomip
scas
out
dec
mov
dec
push
in
push
clc
cmp
mov
mov
or
or
(bad)
add
mov
aam
das
mov
and
push
test
je
outs
mov
ret
mov
mov
add
jmp
inc
and
cmp
jle
adc
cli
sbb
stc
jmp
cmp
sbb
jne
sub
and
inc
dec
aad
jnp
cld
rcr
ds
jecxz
data16
mov
test
push
int
pop
imul
stc
jecxz
aam
fbld
ret
addr16
int3
cwde
outs
adc
call
(bad)
cmc
add
jecxz
mov
inc
ins
jl
inc
aad
cdq
enter
(bad)
push
push
(bad)
retf
mov
adc
lea
mov
fnstenv
je
or
inc
stos
dec
xchg
push
out
add
leave
push
dec
add
push
fwait
shl
pusha
pop
(bad)
jecxz
pop
bound
inc
js
stos
jl
mov
icebp
mov
in
adc
aas
fs
xor
cs
mov
data16
cmp
scas
imul
cwde
xor
jae
jb
adc
xchg
popf
jo
xchg
mov
adc
mov
add
push
into
mov
cdq
or
(bad)
jle
xchg
adc
scas
std
mov
call
add
jg
data16
leave
int3
ins
sub
loopne
sub
in
nop
(bad)
adc
ins
sub
mov
je
icebp
pop
sbb
data16
adc
xchg
dec
inc
sar
test
adc
mov
sub
movs
daa
ja
in
int
test
xor
mov
mov
sub
xor
or
sub
aad
inc
ror
in
dec
out
xchg
push
mov
add
add
cli
and
inc
mov
ins
sbb
ins
clc
cwde
xchg
in
loope
data16
into
add
es
fmulp
sti
popf
scas
pop
adc
cmc
popf
cmps
adc
rcl
pop
jge
fistp
xchg
jl
test
and
add
add
lock
sub
mov
mov
sbb
sbb
add
jo
cmps
ficom
rcl
rcr
inc
mov
jne
dec
stos
inc
jns
es
shl
mov
out
addr16
shl
arpl
jnp
(bad)
pop
popa
sti
push
jl
mov
add
cmp
aad
mov
shl
push
repnz
retf
sub
inc
mov
pop
mov
nop
dec
iret
dec
jbe
call
out
fs
scas
cmps
dec
sbb
inc
xor
jne
pop
xchg
pusha
jg
movs
shl
imul
into
mov
mov
sub
push
mov
add
jmp
sub
xchg
xor
xchg
dec
mov
movs
(bad)
or
pusha
fmul
movs
mov
popf
add
xchg
mov
mov
adc
dec
push
mov
mov
out
jecxz
fnstenv
test
cmc
mov
mov
dec
and
or
shr
adc
stos
pusha
inc
mov
mov
sbb
(bad)
test
add
ja
cdq
fnstsw
or
mov
push
or
pop
sub
clc
retf
dec
push
in
pop
dec
dec
mov
push
push
mov
popf
xchg
icebp
fwait
mov
clc
cs
xor
int3
pop
add
out
fmul
(bad)
repnz
sahf
js
xchg
xchg
clc
cmp
(bad)
cwde
dec
add
or
mov
cmp
inc
repz
xor
lahf
jno
inc
(bad)
cmps
push
mov
xchg
adc
mov
or
adc
into
repnz
aam
adc
cmp
neg
fadd
(bad)
sti
bnd
pusha
jmp
int3
js
shl
jecxz
sar
ja
outs
into
sahf
loopne
sahf
or
cwde
mov
(bad)
dec
fstp
arpl
cli
aas
icebp
mov
and
xchg
movs
(bad)
or
neg
sbb
aam
inc
adc
movs
out
dec
leave
clc
and
into
nop
out
add
or
repnz
push
add
pop
outs
and
add
jno
xor
stc
cmc
push
dec
out
mov
cmp
mov
lods
data16
addr16
jp
jmp
ret
add
aad
sahf
xchg
not
sbb
jo
jmp
pop
mov
fiadd
sar
jecxz
mov
jne
pop
mov
aaa
dec
stos
stos
shl
xchg
fnstenv
pusha
mov
les
or
pop
stc
or
sub
add
xor
std
or
mov
push
push
sbb
pop
and
and
xor
xchg
sar
inc
rol
xchg
shr
or
mov
arpl
mov
dec
pop
xchg
push
push
push
(bad)
mov
xchg
jle
lea
ret
sahf
xchg
shr
mov
adc
pop
fdivr
mov
pushf
(bad)
cld
sub
pop
sbb
sub
aad
inc
fisttp
call
movq
inc
xor
cdq
mov
jl
ins
sub
mov
pop
leave
push
neg
or
pop
out
mov
dec
add
pop
pop
fstp
inc
scas
jae
cmp
mov
jae
xlat
inc
mov
mov
dec
pop
sbb
stos
mov
ror
inc
mov
jmp
inc
jae
retf
movs
sub
lock
outs
xchg
imul
scas
add
mov
aaa
enter
in
in
cmp
cld
push
adc
fcmovnb
int3
aam
cmp
cmp
(bad)
rol
rcr
cdq
pop
outs
mov
loopne
mov
mul
lods
xor
sbb
test
add
aas
mov
or
ins
push
ins
stos
xchg
enter
(bad)
or
inc
cmps
pop
(bad)
ja
or
jp
sti
out
mov
xor
ds
mov
pop
mov
cmp
add
xor
lds
mov
push
dec
adc
mov
out
mov
cmp
pop
or
retf
push
in
mov
and
mov
(bad)
fcom
fisttp
adc
je
mov
stos
scas
adc
int3
sbb
mov
dec
cmp
imul
and
test
dec
mov
sbb
test
mov
sub
push
xlat
pop
adc
push
cmp
pushf
loopne
(bad)
enter
xor
cmp
cwde
dec
shl
leave
ss
ss
cmc
jg
xchg
hlt
in
inc
mov
stos
pop
fsub
mov
sbb
std
cmc
jb
hlt
sub
nop
(bad)
mov
cli
in
lea
ds
xchg
mov
fld
cli
mov
pop
lods
das
dec
sbb
ins
sub
mov
out
call
in
xlat
xor
scas
push
xchg
fwait
xor
(bad)
aam
popa
xor
rol
ret
movs
ds
fst
std
es
out
add
pop
dec
(bad)
imul
lea
in
call
outs
in
aaa
call
inc
loopne
f2xm1
jns
inc
out
enter
cmp
cmp
pop
ins
mov
cmc
outs
scas
bnd
not
xchg
int
sub
adc
mov
repz
lock
loope
dec
int3
jmp
mov
cmps
enter
push
adc
ins
and
retf
mov
cdq
mov
inc
or
into
test
gs
sub
push
cmp
nop
ins
fsubp
aam
outs
pop
retf
and
sbb
shl
popa
jnp
adc
mov
in
mov
push
push
push
or
pushf
pop
mov
out
out
movs
sbb
imul
(bad)
cmp
out
retf
cs
push
mov
pop
pop
xor
adc
sti
repz
xor
sub
shr
adc
sbb
stos
push
out
push
outs
leave
(bad)
ja
xor
jl
imul
clc
out
daa
mov
push
jmp
mov
jns
mov
loopne
enter
test
xor
cmp
stos
jo
pop
out
movs
das
xor
outs
movs
or
lods
aam
inc
mov
out
dec
aam
lock
cmp
xor
xchg
repz
pusha
(bad)
repnz
xchg
idiv
inc
arpl
and
xor
ja
(bad)
xor
jl
mov
rcl
fisubr
or
sub
dec
ins
scas
ins
xchg
mov
idiv
ficom
pushf
outs
in
mov
fcom
iret
pop
mov
jbe
rcl
icebp
out
push
sub
(bad)
and
dec
out
xor
test
arpl
outs
ins
xor
lods
pop
cmps
inc
jmp
xchg
bound
mov
push
ret
ss
shl
int3
xchg
sbb
nop
fs
lahf
fchs
push
movs
jmp
jns
inc
(bad)
jo
cmps
shl
dec
das
mov
repz
dec
inc
cdq
jmp
outs
adc
xor
mov
mov
pop
mov
cmp
popa
stos
retf
in
push
push
mov
sti
test
or
push
mov
ficom
mov
cmps
push
lahf
popf
dec
jmp
xchg
rcr
cmc
adc
xchg
add
bound
fidivr
shl
inc
rol
pop
mov
lods
ficomp
mov
test
jmp
outs
push
repz
lds
jbe
cwde
test
nop
cli
xchg
push
mov
push
inc
fdivr
in
fist
(bad)
je
mov
push
in
cmp
fst
lock
push
mov
fdivr
inc
inc
pop
in
pushf
or
mov
pop
pop
test
or
lock
cmc
out
jge
jns
inc
(bad)
jae
sub
retf
push
dec
ja
inc
call
das
repnz
push
xor
push
fs
push
out
aas
cmps
xchg
xchg
or
retf
pop
(bad)
xchg
ret
mov
rcl
scas
adc
and
push
pop
repnz
pop
mov
mov
xlat
and
mov
push
lods
inc
cmps
push
pop
mov
push
sub
mov
xchg
push
cs
xor
call
rcl
dec
rcl
jmp
xor
stc
mov
movs
and
inc
jl
cli
repnz
ins
and
mov
retf
es
jge
jle
jl
aad
mov
lock
std
int
inc
pop
bound
push
aad
lock
cdq
shl
retf
loop
pop
pop
cmp
outs
loop
mov
dec
popa
sbb
push
jo
mov
in
repnz
mov
cmp
int3
std
icebp
xor
add
loopne
cmp
mov
adc
ins
jbe
fsubr
jl
mov
sbb
dec
xlat
lods
mov
leave
xchg
fdivr
loope
sub
idiv
push
cmp
push
mov
jae
aad
outs
loope
sti
sub
xor
stc
mov
or
div
fisub
dec
out
dec
into
outs
test
sti
aas
xchg
sub
ud1
icebp
in
nop
adc
pop
and
packuswb
mov
push
pop
ins
mov
xchg
pop
and
push
adc
cmps
sub
mov
out
or
fild
fcmovnu
in
shl
loop
inc
fistp
(bad)
test
daa
cmp
jne
mov
inc
cmp
add
movs
test
mov
xor
mov
cwde
push
xor
push
mov
jmp
int3
and
sub
retf
daa
adc
sub
cmp
xchg
repnz
(bad)
pop
or
jmp
mov
mov
inc
add
or
dec
sbb
addr16
fldlg2
mov
pop
push
fidiv
arpl
jmp
inc
inc
inc
mov
and
mov
mov
push
(bad)
cwde
push
push
mov
cmp
mov
or
loopne
xor
xchg
(bad)
jo
mov
leave
or
cmp
and
gs
out
out
icebp
dec
sub
(bad)
xor
jns
addr16
imul
shl
sub
cli
scas
and
push
mov
das
dec
adc
pushf
push
fimul
gs
xchg
ret
clc
or
cdq
in
stos
dec
popa
cmc
and
js
les
(bad)
int
sub
movs
scas
ins
mov
sbb
sub
fstp
adc
cmps
inc
sar
ror
dec
jmp
nop
iret
ret
jnp
ror
mov
sbb
test
pop
les
nop
loope
sbb
mov
mov
cdq
pop
xchg
popf
pop
and
xor
dec
sbb
cmp
sar
jle
test
stos
fld
xor
pop
idiv
pop
js
sahf
daa
add
sar
adc
mov
mov
cli
sbb
(bad)
mov
push
cmp
jl
cli
mov
imul
fs
lods
cmp
call
inc
jg
xchg
sbb
mov
(bad)
out
or
in
mov
mov
in
push
pop
(bad)
jb
push
cwde
loop
enter
js
nop
pushf
jb
sbb
pusha
ret
lods
and
or
movs
push
or
in
mov
push
inc
and
jne
ret
mov
call
sbb
in
call
dec
mov
mov
adc
pop
add
xor
mov
dec
add
xor
sbb
(bad)
jl
push
daa
inc
jecxz
jl
inc
les
neg
cmp
sbb
ficom
iret
cmps
inc
cmp
jmp
xor
iret
stc
push
dec
jo
nop
sbb
add
clc
retf
sti
mov
push
xchg
call
repz
jp
and
xchg
sbb
add
hlt
test
(bad)
int
mov
call
mov
adc
(bad)
les
movs
xor
inc
xor
sbb
call
pop
inc
int
mov
or
pop
xchg
lds
xchg
mul
dec
fidiv
dec
jmp
adc
retf
lea
pxor
fwait
xchg
imul
data16
es
div
xor
aam
jbe
push
push
test
jo
mov
sub
inc
fs
out
in
xchg
mov
mov
pop
pop
repnz
sub
pop
mov
add
inc
cwde
in
cmp
shl
js
pop
mov
adc
cmps
daa
or
or
mov
push
enter
lahf
ins
in
push
push
add
nop
pop
mov
jno
xor
ja
(bad)
lods
adc
push
(bad)
idiv
ins
popf
ret
outs
cld
cmc
popf
enter
jb
ror
mov
aaa
cld
ds
jns
push
or
xchg
inc
jmp
out
sbb
les
fs
mov
xchg
fsubr
xchg
sbb
pusha
and
pop
mov
and
call
pop
icebp
in
test
jo
cmp
mov
jge
enter
jno
and
leave
push
rol
mov
stos
sub
sahf
and
aaa
fwait
dec
mov
loop
retf
int
lods
imul
push
fwait
cld
dec
hlt
mov
outs
xor
imul
or
dec
mov
into
and
cs
dec
cmp
inc
cmps
pop
fild
test
loop
push
xchg
jp
js
mov
into
ds
xchg
xchg
aad
aam
mov
xor
jo
jl
mov
shl
add
test
repnz
jle
dec
mov
loopne
sbb
and
data16
pushf
mov
into
jmp
sahf
mov
ret
pop
push
ror
dec
fwait
(bad)
repz
dec
or
jg
fcmovnu
out
dec
jne
out
mov
jbe
ret
jbe
xchg
xchg
ja
rcr
lea
cmp
sub
mov
stos
fadd
pop
mov
sbb
es
jmp
sbb
ins
stos
mov
iret
daa
lods
push
dec
lds
fld
cmp
pop
and
fwait
fwait
movs
lahf
mov
hlt
jbe
out
xchg
(bad)
icebp
mov
fwait
cvtdq2ps
sbb
jmp
and
dec
sbb
xlat
les
cmp
mov
out
fucomi
add
inc
les
jecxz
ret
mov
int
fbld
cmps
and
xor
jp
lea
mov
addr16
ret
test
sbb
leave
ins
add
mov
out
and
(bad)
jge
cmp
mov
mov
loop
dec
retf
cmc
mov
fcmovnbe
jno
mov
arpl
mov
mov
movs
xlat
xor
retf
mov
popa
and
sub
sbb
les
pop
jno
lds
pop
dec
lds
jns
ins
movs
imul
enter
sahf
push
shl
jle
ins
stos
aas
daa
rcr
add
sar
(bad)
jae
ds
inc
dec
pusha
aaa
leave
aas
ror
bound
sbb
xchg
or
in
inc
adc
adc
jmp
and
retf
call
(bad)
or
pop
ror
xchg
mov
xchg
gs
jb
cmp
les
jae
fnsave
sub
inc
fist
xor
call
outs
aas
es
sub
xor
shl
inc
mov
outs
pop
dec
pop
or
cli
frstor
not
inc
inc
pop
ds
adc
fwait
cmp
lods
push
mov
dec
out
xchg
hlt
stc
je
rol
std
adc
outs
out
ret
jne
cmp
shl
dec
popf
cwde
mov
test
ja
test
gs
mov
out
mov
or
jno
adc
cwde
outs
mov
xchg
sbb
add
add
int3
les
jae
or
mov
popa
scas
or
sub
add
aam
add
fsub
js
pop
xchg
add
jne
xor
jno
inc
cmps
xchg
enter
xchg
clc
or
daa
js
dec
mov
pop
inc
push
lock
pop
imul
mov
sub
les
in
or
mov
imul
adc
adc
clc
mov
mov
fnstcw
cmp
daa
repnz
mov
(bad)
dec
cs
xor
sub
ds
adc
cmp
rcr
or
mov
push
jne
xchg
dec
idiv
mov
pop
pop
mov
sbb
adc
lock
aam
repz
pop
mov
and
jae
pop
jns
and
(bad)
and
mov
cmp
dec
inc
sbb
mov
rcr
pop
test
icebp
jo
mov
ins
retf
adc
xlat
mov
dec
cdq
add
dec
xor
lods
add
mov
sub
adc
pop
in
mov
mov
(bad)
mov
(bad)
in
adc
pop
inc
add
test
dec
aas
sbb
mov
fistp
and
adc
fldcw
cld
adc
fistp
int3
icebp
lods
movs
or
and
or
mov
sub
add
pop
sub
aam
fimul
stc
mov
inc
or
fwait
popa
and
shl
jge
call
push
sti
dec
(bad)
jmp
push
sub
xchg
xor
sar
xchg
and
inc
mov
fimul
sbb
mov
in
inc
iret
xchg
in
and
add
sbb
add
sbb
sahf
outs
outs
(bad)
mov
dec
lods
mov
cwde
sti
fsubr
clc
or
jbe
ror
jmp
adc
or
bnd
ins
dec
test
fstp
enter
fist
xchg
stc
adc
mov
scas
push
push
xor
inc
mov
dec
pop
dec
cmp
mov
stc
popf
std
mov
jno
adc
enter
fwait
js
ror
repz
adc
mov
push
or
js
shl
cli
inc
mov
xchg
scas
lods
push
dec
scas
pop
cmp
cld
call
and
aas
pop
xor
int
les
fild
xchg
and
pop
out
(bad)
call
push
pop
loopne
test
add
mov
test
xchg
mul
or
fs
or
sbb
fadd
pushf
inc
std
stc
inc
xor
inc
mov
in
add
enter
mov
mov
int
cwde
ret
(bad)
icebp
inc
add
fadd
ror
and
inc
xor
push
adc
aam
ret
sbb
mov
movs
in
loop
push
sbb
jge
inc
aaa
push
ins
or
or
inc
mov
push
fld
push
jecxz
mov
xor
pop
mov
jecxz
out
push
xchg
retf
push
(bad)
mov
cmps
stc
pop
mov
(bad)
pop
das
or
imul
leave
adc
mov
dec
es
pop
lods
test
and
jg
mov
or
sar
mov
clc
adc
loope
dec
(bad)
mov
fisubr
jo
push
fwait
cmp
jecxz
xlat
push
lock
es
add
xor
mov
sar
neg
rcl
mov
sub
pop
mov
jbe
sub
cmp
dec
dec
retf
xor
jne
arpl
mov
or
push
mov
jbe
mov
addr16
dec
call
add
cmps
pop
xor
data16
adc
adc
ds
loopne
icebp
xor
push
push
std
shl
mov
push
imul
sbb
push
and
pop
ins
les
in
add
(bad)
and
push
cmp
xor
sub
popa
clc
stc
and
sub
lea
shr
aam
and
dec
test
pop
shl
mov
cli
jl
mov
out
fstp
jle
cdq
inc
in
xor
lahf
jg
push
loopne
mov
iret
push
xchg
pop
add
das
lock
push
add
test
mov
loopne
jne
inc
cmps
cmp
mov
xchg
pop
fwait
sub
xor
lods
mov
lds
scas
inc
repz
jnp
jl
cld
cmc
mov
mov
stos
mov
fstp
xchg
mov
and
inc
jmp
pop
fld
adc
ins
xchg
fmul
js
outs
pusha
es
out
xor
xchg
out
ja
pop
lods
sub
jne
pop
pshufw
lds
fs
or
scas
xchg
in
xchg
loope
ja
daa
push
or
xchg
fs
rep
dec
mov
xor
ror
pop
ficom
test
icebp
in
movs
or
mov
xchg
outs
test
iret
sub
test
movs
sub
nop
sahf
or
movs
rcl
adc
out
dec
adc
into
xchg
(bad)
push
inc
dec
movs
and
add
shr
push
cli
xor
stos
mov
or
lods
fdiv
daa
scas
cmp
sub
sti
add
cmps
push
push
push
and
iret
jg
xor
mov
not
push
cld
mov
test
or
sti
cmps
mov
cmp
sbb
(bad)
mov
jb
stc
xor
aaa
xchg
adc
push
jl
mov
addr16
mov
mov
adc
add
jmp
ret
movs
enter
add
xor
mov
into
pop
pop
dec
pop
jp
add
push
cmp
xor
nop
inc
lea
repz
repz
mov
into
lds
fisub
cmps
pop
outs
mov
push
push
loope
sbb
mov
add
jmp
pop
fdivr
leave
add
icebp
adc
sub
or
dec
cld
int
sbb
sub
lahf
xor
fldenv
in
sbb
add
or
cmp
dec
xor
push
push
aad
mov
xchg
scas
test
shl
push
(bad)
cmp
add
lock
adc
jmp
mov
lahf
ss
mov
outs
push
mov
sahf
mov
inc
ret
in
enter
loopne
push
inc
mov
ins
push
add
pop
les
rol
sub
cmc
or
xor
loopne
jno
idiv
pop
and
pushf
or
rcl
mov
dec
mov
loop
test
test
(bad)
into
nop
pop
adc
xchg
test
jb
add
cmp
mov
ret
pop
das
dec
cs
mov
outs
or
fwait
out
retf
outs
sahf
xor
and
push
adc
dec
lods
int
push
jb
scas
fdiv
mov
push
push
fsubrp
repz
(bad)
xlat
inc
fist
dec
adc
retf
scas
push
inc
cmc
in
pop
jp
pop
repnz
pop
(bad)
in
inc
leave
call
or
ficom
mov
inc
(bad)
pop
adc
mov
cmps
and
outs
retf
cmps
retf
jb
cwde
sub
push
mov
scas
sbb
addr16
sub
hlt
xchg
inc
add
or
mov
fadd
mov
sar
xchg
bound
cmp
ret
(bad)
jo
popf
(bad)
fisttp
int
sbb
js
cmp
loopne
leave
lock
xchg
sub
xor
dec
push
into
cld
fisub
mov
inc
fistp
fidiv
cmp
jnp
inc
div
jge
inc
iret
xor
fidiv
mov
fwait
icebp
icebp
(bad)
icebp
std
cld
pop
test
sub
add
std
(bad)
inc
mov
adc
pushf
mov
pop
or
pmullw
sbb
test
jg
sub
mov
jnp
inc
shl
cmc
sub
and
cmps
cmp
addr16
mov
add
shl
adc
inc
jbe
cmp
fidiv
mov
daa
inc
fimul
pop
push
and
div
scas
(bad)
call
pushf
out
sub
mov
mov
mov
jmp
lahf
inc
and
rcl
aam
iret
lea
jl
stos
sbb
sti
mov
in
mov
pop
in
add
mov
mov
jns
pop
push
test
(bad)
sbb
out
cmp
pop
aad
ret
cdq
dec
or
mov
or
test
ret
imul
dec
dec
mov
and
xor
mov
xchg
stc
dec
imul
cwde
imul
adc
(bad)
fild
(bad)
mov
js
xor
movs
jne
jae
add
movs
lods
in
dec
out
into
cld
push
cwde
xor
in
push
retf
dec
or
daa
cmp
or
ja
ins
iret
and
retf
cli
mov
test
ss
xchg
xchg
in
inc
clc
(bad)
adc
test
std
sub
pushf
jge
loope
adc
mov
aas
push
neg
sub
mov
in
jecxz
aaa
lds
jmp
ja
jmp
push
push
jbe
xchg
sbb
out
outs
jp
sbb
repnz
retf
movs
add
or
xchg
jae
loopne
jmp
sub
(bad)
(bad)
daa
mov
leave
lahf
pusha
cmps
add
mov
mov
push
(bad)
(bad)
nop
popa
nop
or
xor
je
out
mov
sbb
push
sbb
xor
and
ins
ins
dec
imul
bnd
mov
ss
xchg
or
ja
inc
dec
out
sbb
loopne
sbb
ret
outs
mov
inc
pop
push
cmp
repnz
aad
pushf
imul
frstor
rcr
enter
fld
push
ret
fldcw
sub
mov
(bad)
aam
mov
addr16
test
jnp
add
push
ror
leave
jno
xchg
js
arpl
xchg
aaa
repnz
mov
outs
repz
jne
xchg
pushf
pop
(bad)
sbb
div
cdq
pop
mov
jne
inc
dec
sub
mov
ror
sbb
push
movs
mov
mov
ss
xor
cwde
add
(bad)
jae
or
loope
rcr
cwde
dec
popf
dec
pop
push
rcl
jo
push
mov
sbb
jae
pop
ins
lock
inc
fdiv
or
enter
push
cmp
jmp
push
push
push
sub
test
stc
jbe
hlt
xchg
add
ds
imul
jae
sbb
pop
cld
hlt
xor
jnp
mov
scas
inc
mov
jb
loopne
sbb
dec
int
ficom
retf
addr16
jno
push
gs
and
jne
sti
xor
fsub
test
ja
adc
call
in
fst
inc
xor
mov
sub
sbb
pushf
xchg
retf
or
shr
sbb
test
sub
mov
js
sbb
(bad)
(bad)
xor
fisubr
xor
into
(bad)
xchg
pop
xor
push
jbe
and
in
addr16
fs
aaa
inc
ret
aam
neg
sub
jge
(bad)
cld
inc
adc
mov
push
test
hlt
aaa
sbb
movs
sbb
daa
jb
jecxz
mov
std
inc
and
(bad)
(bad)
push
adc
arpl
jbe
aam
cmp
sbb
stc
jmp
push
pop
fnstcw
(bad)
inc
add
test
jnp
sbb
fbstp
(bad)
adc
and
jnp
mov
dec
cmp
mov
xchg
dec
je
cmp
test
out
in
ins
push
jge
mov
ss
dec
call
in
or
(bad)
sub
dec
outs
fadd
mov
mov
cmp
test
push
mov
cmc
mov
and
xchg
adc
cmps
dec
mov
cmps
push
cmp
adc
ins
cmp
mov
cmp
xchg
xor
ss
and
cmp
scas
cmp
(bad)
adc
xor
adc
test
daa
imul
div
push
push
test
in
jne
lea
xchg
call
add
jo
aaa
fild
sbb
lahf
retf
lock
lds
push
and
xchg
repz
lds
add
xchg
fdivr
push
test
call
pop
and
rcl
adc
pop
xor
pop
daa
(bad)
pop
ja
bound
jge
ds
fdivr
cmc
push
mov
pop
push
fdivr
or
fxch
bnd
(bad)
xor
xor
in
imul
dec
mov
and
push
push
cwde
scas
add
lock
jns
lahf
inc
or
stc
push
mov
dec
mov
or
aas
sbb
aam
cmps
daa
mov
push
dec
inc
pop
aaa
mov
mov
loop
push
adc
mov
mov
ret
dec
xor
mov
mov
fstp
cmp
inc
mov
adc
daa
xchg
loop
or
aad
popa
je
jl
loopne
inc
push
aad
dec
xchg
data16
mov
push
(bad)
fsub
sahf
push
xchg
dec
pop
pop
ret
sahf
test
(bad)
in
push
bound
push
es
fistp
jl
xor
outs
imul
leave
cmc
lods
addr16
dec
inc
sub
lods
std
dec
mov
lock
ins
fisttp
cli
test
push
mov
sbb
xchg
jno
jo
push
enter
xlat
ret
pop
rol
sbb
jbe
retf
enter
fnstsw
jle
sbb
shl
rcr
or
daa
out
push
lods
sub
outs
scas
clc
call
js
call
inc
or
ret
xchg
mov
xor
jnp
jp
outs
adc
xchg
sub
mov
inc
aad
push
mov
test
stc
jmp
push
sub
or
xor
sub
into
daa
test
cmps
and
add
jb
push
lahf
pop
dec
call
pop
(bad)
imul
jae
sub
fdiv
add
retf
repz
js
test
xor
xchg
and
sti
sti
mov
or
int
cmps
ret
pusha
outs
mov
leave
ins
jne
arpl
sbb
mov
dec
pop
mov
adc
mov
ins
loop
or
fistp
mov
js
rcl
fdiv
push
jle
and
sub
rol
(bad)
js
or
call
repz
sub
cmps
bound
push
mov
xchg
push
push
ds
mov
sahf
pop
movs
xor
js
shr
iret
call
xor
dec
ds
call
push
int3
jmp
or
mov
xchg
xchg
add
sub
push
div
mov
cli
mov
dec
mov
shl
push
test
add
(bad)
sbb
xor
mov
mov
test
jbe
inc
pop
je
test
movs
and
sub
stos
jb
jge
cmps
or
(bad)
arpl
fs
mov
jo
jmp
xchg
enter
mov
xchg
pop
cwde
mov
loope
lahf
stos
add
out
mov
iret
in
clc
cmp
jne
cmp
inc
scas
jne
lahf
inc
(bad)
test
shl
scas
pop
sbb
loope
push
ret
dec
fsubr
mov
mul
into
xor
and
mov
int
push
pop
js
add
addr16
xor
inc
(bad)
rcl
pop
call
movs
ins
(bad)
push
(bad)
or
out
jb
stos
xlat
dec
ins
dec
mov
aaa
mov
pushf
pop
jle
push
stc
cs
gs
mov
inc
test
adc
pop
fwait
cmp
outs
ins
xchg
push
push
dec
pop
mov
xor
lock
imul
pop
enter
ins
movs
mov
xor
mov
xlat
fcmovu
jns
jbe
not
ins
les
and
xchg
lods
pop
xor
push
dec
mov
dec
gs
in
in
cmps
pop
xor
push
and
les
rol
lahf
push
in
cmp
retf
jne
popa
(bad)
test
pusha
push
and
ins
fcmovb
lahf
xchg
jbe
aas
cwde
jns
rol
ror
fisubr
inc
outs
and
loope
xchg
xchg
mov
ins
(bad)
clc
test
test
xchg
jo
mov
pop
or
push
sub
mov
int
in
pushf
pusha
push
push
jnp
int
sahf
movs
or
loop
bound
xchg
adc
pushf
in
or
jnp
in
cwde
jbe
mov
inc
mov
call
icebp
les
pop
push
xor
xchg
outs
dec
stc
sbb
repnz
mov
aas
cli
pop
test
sbb
pop
dec
dec
stc
push
xor
test
cs
sbb
mov
or
dec
out
mov
sti
test
xchg
jp
mov
dec
push
pushf
and
fisub
pop
inc
das
pop
das
int
cmps
mov
adc
jns
clc
dec
shl
or
test
add
div
jmp
aaa
mov
mov
jp
call
dec
xor
inc
jo
mov
cld
adc
mov
jo
xchg
adc
clc
retf
aam
pop
fs
pop
out
lahf
xchg
push
leave
call
ror
adc
jl
test
jmp
scas
iret
std
jno
xor
(bad)
scas
fwait
pop
fidiv
js
enter
popf
add
inc
cmp
stos
mov
xor
retf
jbe
cmp
xlat
xchg
and
sub
adc
outs
bound
push
ja
sbb
dec
lahf
call
cmp
xor
adc
ret
inc
lods
inc
xchg
add
pop
cs
xchg
test
and
cld
jmp
fcmovnb
xor
hlt
add
div
add
dec
push
shl
sbb
xchg
mov
popa
loop
lahf
push
xlat
fcomp
sbb
loop
mov
sub
cli
cmps
bound
les
add
stc
jmp
jo
sbb
in
inc
pop
xor
lds
(bad)
fs
inc
je
add
mov
fwait
cmps
or
and
iret
mov
adc
mov
or
mov
loop
rol
imul
pop
popa
mov
jl
in
das
jo
xchg
(bad)
in
jnp
dec
out
aaa
shr
or
cwde
daa
stos
outs
xchg
adc
jno
outs
adc
inc
xor
inc
(bad)
push
jo
(bad)
xchg
fisub
fsubr
arpl
pop
push
jmp
mov
and
repz
fadd
lea
mov
ds
mov
inc
jae
jle
mov
jnp
fld
aam
retf
add
and
dec
sub
pop
and
fsubr
cmc
loopne
js
xchg
lods
cld
push
or
mov
mov
xor
or
sahf
ds
pop
mov
push
aad
mov
jo
fistp
je
add
xchg
mov
dec
jno
cmp
mov
xor
jmp
mov
adc
stc
ins
mov
clc
xchg
inc
ins
push
and
ins
pushf
cld
(bad)
sti
xor
mov
aas
mov
aam
mov
or
inc
into
in
leave
cli
mov
push
mov
cmp
outs
fdiv
clc
adc
mov
mov
push
sub
add
dec
push
popf
sub
repz
push
imul
mov
jae
mul
or
stos
test
popf
cmp
push
xchg
daa
in
cmp
mov
adc
cmp
and
(bad)
and
movs
and
ror
outs
out
jmp
adc
mov
addr16
in
xor
jmp
popa
xor
jbe
pop
jmp
fucomip
cld
into
mov
sub
pop
(bad)
cmp
imul
test
inc
inc
xchg
sub
jbe
enter
mov
or
lea
test
sbb
repnz
dec
into
mov
adc
pop
jl
inc
js
in
sbb
mov
inc
(bad)
int3
out
out
xchg
ret
push
jne
mov
gs
lods
loop
repnz
xor
lock
mov
pop
or
outs
ror
mov
clc
sub
or
cmp
pushf
sar
mov
jb
xchg
int
jecxz
sbb
call
icebp
loopne
cmc
or
not
and
push
push
ins
stos
add
pop
lods
mov
lock
add
gs
out
cmp
add
out
and
stc
stos
movs
movs
daa
mov
or
mov
xor
jnp
aaa
or
mov
aad
mov
test
push
mov
in
in
and
test
icebp
sub
sbb
cmp
popf
daa
mov
mov
jge
mov
jbe
ss
xchg
je
or
push
or
xor
inc
push
arpl
aas
outs
push
retf
ins
jne
push
rcr
gs
and
pop
jo
mov
push
stos
je
mov
out
je
dec
xor
repnz
and
movs
adc
arpl
out
inc
and
adc
ss
vsubps
sub
sub
pop
retf
pop
frstor
jmp
in
add
xor
call
icebp
aas
inc
add
mov
lahf
jmp
push
cmp
loope
mov
or
and
test
mov
jecxz
mov
(bad)
jns
and
popa
or
pop
outs
pop
push
bound
mov
dec
or
(bad)
mov
int3
cmps
sti
bound
mov
daa
(bad)
lods
outs
ret
cmp
mov
leave
mov
loop
xor
enter
dec
jae
std
hlt
cld
mov
sub
or
(bad)
push
inc
retf
ret
enter
lock
sti
mov
mov
jle
cs
enter
jp
push
punpckldq
xchg
lock
addr16
pop
fdiv
out
inc
mov
js
int3
enter
cmc
call
pop
(bad)
out
(bad)
inc
jbe
nop
outs
retf
pushf
dec
int
xchg
pop
leave
xor
ret
out
pop
out
jmp
fbstp
xor
pop
jmp
xor
cmp
adc
lods
dec
inc
xchg
retf
mov
mov
fs
push
popf
out
inc
repz
or
shl
cmps
mov
mov
sub
outs
xor
les
addr16
mov
sub
fsub
xor
popf
out
mov
mov
xor
cmp
cmp
adc
cdq
cmps
mov
scas
mov
aad
mov
out
repnz
sub
dec
repz
loop
in
cwde
les
sti
aaa
call
jb
lock
addr16
aaa
stc
mov
mov
sahf
xor
les
mov
ja
pusha
pushf
je
(bad)
push
(bad)
movs
movq
mov
fcomp
aam
std
fdivr
cmp
lea
add
enter
cmp
gs
mov
ficom
jnp
cmp
in
test
mov
xor
sti
cli
xchg
ret
or
sub
cli
int3
pop
inc
jg
test
nop
fld
mov
clc
vshufps
mov
mov
add
fcmovb
cmp
pop
pop
mov
ins
mov
imul
mov
mov
call
popa
(bad)
movs
sahf
fcmove
enter
dec
popf
fucomp
jmp
adc
shl
mov
mov
or
jbe
add
icebp
shl
call
mov
mov
xchg
cmp
in
mov
addr16
xchg
(bad)
adc
mov
jl
dec
jne
mov
fimul
sbb
nop
pop
cmp
js
ins
cwde
xor
or
aaa
jmp
adc
xchg
xor
sti
or
out
fs
mov
sub
mov
xchg
retf
pop
stc
mov
jmp
xor
je
popa
clc
jmp
aam
aas
and
xchg
pop
(bad)
js
sbb
mov
je
ror
and
outs
(bad)
cld
fcmovb
mov
inc
rol
aaa
or
cli
mov
retf
(bad)
out
popf
adc
imul
adc
popa
jle
fwait
idiv
pop
xchg
fstp
add
cld
jb
dec
mov
(bad)
repz
pop
pop
pop
cmp
push
retf
in
call
test
jno
jns
xor
sbb
shl
out
ds
jge
xchg
cld
or
imul
scas
jecxz
push
cmp
je
or
or
call
bnd
mov
add
mov
cli
or
(bad)
mov
cmp
cwde
pop
je
push
add
push
push
jp
lock
stc
mov
call
lds
loope
pop
add
imul
test
or
sub
pop
not
fdiv
adc
inc
fcom
sahf
in
(bad)
jmp
push
lods
(bad)
xchg
and
adc
cmp
jge
test
jo
popa
cdq
push
jb
mov
sti
sbb
push
ss
push
stos
mov
fcomp
mov
pushf
hlt
adc
das
cmp
cmp
lock
mov
push
rol
sbb
sub
add
mov
mov
addr16
xor
das
push
dec
dec
dec
jnp
ins
out
sub
popa
inc
ds
int3
inc
add
iret
outs
inc
mov
jbe
jo
pop
inc
adc
mov
retf
cmp
dec
into
cmp
sti
cdq
sahf
ret
les
push
pusha
ds
fstp
xchg
popa
cmps
xchg
mov
popf
push
xchg
test
jb
xchg
test
push
inc
xor
shl
int
dec
push
mov
dec
mov
pop
mov
cli
xchg
sub
shr
mov
cs
inc
(bad)
sub
sbb
push
jne
hlt
sbb
leave
lods
cdq
inc
sub
std
ficom
sub
das
mov
or
mov
sar
cli
xor
test
mov
leave
out
pop
aas
jne
(bad)
enter
xor
mov
xor
test
int3
gs
inc
pop
xchg
jg
outs
push
outs
shl
xor
inc
sub
movs
jo
sbb
pop
ja
lahf
mul
push
popf
stos
and
jmp
enter
mov
mov
pop
arpl
pop
adc
pop
cmp
pop
mov
hlt
loope
jmp
loope
xchg
adc
push
loope
test
cmp
dec
loopne
inc
cwde
mov
fcomp
nop
aaa
xor
push
lds
jns
pop
(bad)
inc
sar
ja
(bad)
push
(bad)
and
mov
inc
xchg
mov
ss
repz
adc
xchg
sub
sahf
repnz
stos
movs
ds
mov
cmp
mov
retf
mov
rcl
jae
imul
adc
add
lahf
loopne
pop
movs
es
mov
into
push
cmc
add
xor
push
js
inc
ds
addr16
das
pushf
xchg
hlt
pop
rcl
dec
or
(bad)
and
xor
inc
jno
test
mov
call
add
pop
mov
mov
cmp
shr
mov
xchg
sbb
adc
xchg
mov
(bad)
stos
mov
cmp
mov
sar
inc
pop
scas
scas
sub
cmp
ja
mov
mov
mov
mov
das
pop
je
xor
out
stc
outs
adc
mov
xchg
fsubrp
mov
push
cmp
int3
mov
mov
das
cli
fimul
jbe
mov
retf
loop
push
call
dec
cs
ja
and
sbb
inc
cdq
dec
outs
inc
mov
neg
sbb
je
(bad)
push
outs
mov
xchg
jecxz
rcl
sbb
push
ret
sub
repz
stc
or
and
iret
mov
sahf
mov
dec
xor
fst
jmp
xchg
inc
and
mov
push
(bad)
outs
ret
mov
cli
sub
jns
mov
xchg
mov
xor
and
jle
sub
arpl
cdq
fstp
cmp
int
int
add
lds
imul
gs
iret
push
and
bnd
(bad)
jmp
mov
mov
gs
jp
aaa
loop
cs
xchg
loopne
sbb
mov
icebp
movs
pop
lods
add
xor
pop
rcr
mov
les
dec
arpl
adc
dec
(bad)
push
mov
mov
movs
aas
sub
mov
ror
push
call
(bad)
sub
add
inc
inc
xchg
jne
test
adc
popf
in
lock
add
cmp
aaa
arpl
or
mov
in
mov
add
cli
jmp
fbld
lahf
mov
rol
mov
and
cmp
movs
dec
adc
cmp
xchg
sbb
ins
pop
mov
popf
xor
stos
jo
lods
pushf
int
call
(bad)
jmp
xchg
pop
lods
fwait
cmp
or
rcl
rcr
pop
aas
out
push
in
jb
xchg
sti
test
mov
(bad)
push
push
mov
imul
fwait
xlat
(bad)
jmp
xor
mov
xchg
push
mov
jle
jp
and
sar
adc
sub
sub
lahf
or
and
sub
mov
movs
nop
mov
enter
cmps
pop
xor
cs
mov
(bad)
rol
pop
cmps
and
movups
movs
sar
add
cmps
sbb
mov
mov
and
cld
stos
push
push
push
sub
cmp
mov
sbb
arpl
sti
cli
push
clc
les
outs
pop
add
inc
in
jno
je
mov
shl
nop
cli
and
ins
inc
mov
(bad)
sub
jp
cld
int3
sub
cmp
clc
xor
jnp
repz
movs
sbb
in
cli
(bad)
sahf
shl
mov
out
out
jb
aas
pop
in
ins
leave
movs
mov
fwait
inc
inc
(bad)
dec
add
xchg
int
mov
ret
pop
adc
es
and
lods
pop
push
out
es
or
cmp
add
aaa
xchg
push
mov
ret
cmp
shl
xor
imul
retf
cmp
inc
mov
test
pop
ficomp
movs
popa
sbb
mov
sbb
popf
clc
mov
mov
mov
mov
fld
iret
cdq
dec
call
pop
fnstenv
xor
repz
repnz
sbb
sub
dec
int3
pop
inc
jl
iret
fnstsw
pop
jne
int
ret
push
add
shl
jns
sub
cli
pminsw
mov
mov
xchg
lods
and
outs
xchg
adc
jo
xor
jae
adc
into
dec
jmp
pushf
imul
adc
jnp
sti
push
int
outs
adc
mul
sbb
jno
arpl
scas
xchg
cmp
mov
jmp
aas
pop
out
retf
mov
pcmpgtb
pop
in
and
pop
loop
jb
std
dec
lods
adc
push
aam
xor
push
pop
jl
pop
ja
je
rol
add
mov
jb
(bad)
and
jmp
mov
fwait
enter
pushf
or
sbb
mov
sub
add
jle
les
push
repnz
js
(bad)
fwait
cmp
test
jmp
sub
mov
movs
mov
push
imul
adc
mov
mov
dec
add
xchg
xchg
dec
cmp
stos
inc
std
imul
xchg
jmp
js
or
pop
sub
cmp
mov
push
fnsave
ret
xchg
push
int3
xor
gs
shr
pop
mov
shl
inc
call
cwde
add
xchg
push
xor
fimul
test
stos
int
rol
stos
ficom
or
mov
mov
mov
ror
mov
shr
push
in
rcl
rcr
leave
and
clc
push
test
xchg
(bad)
push
push
pop
cmps
fdivr
dec
jne
mov
nop
mov
out
imul
sbb
mov
daa
fisub
popa
and
cli
lock
enter
push
push
cdq
xchg
cmp
ret
js
push
sbb
pop
fiadd
cmp
adc
clc
xor
(bad)
fbld
add
daa
pop
test
mov
xor
sub
sbb
leave
mov
xchg
loop
std
push
pop
je
je
je
ror
fcomip
mov
sub
pop
cmps
push
shl
idiv
push
pusha
push
cmp
cmp
into
inc
mov
in
cmps
lods
jno
xor
sub
ja
mov
pop
pop
pushf
xchg
ins
sub
and
outs
xor
lock
stc
add
repz
into
jmp
push
mov
adc
jle
lock
out
mov
mov
mov
mov
sbb
cmp
loop
jb
test
ror
das
test
inc
fisubr
mov
mov
int
xchg
inc
sub
xlat
push
fs
jae
jp
sbb
int
or
fwait
inc
push
fcom
aaa
mov
push
cld
mov
stc
fisub
add
sbb
out
pop
jno
mov
test
stos
or
lock
lock
cmp
int
mov
popf
mov
push
(bad)
out
loop
fwait
scas
es
mov
and
in
push
repnz
fabs
push
loopne
xchg
xchg
mov
sub
jmp
add
(bad)
cmp
mov
out
in
shr
jmp
mov
sub
and
or
popa
not
mov
or
inc
jle
inc
push
loopne
mov
add
in
add
arpl
mov
mov
cmp
mov
inc
in
loop
add
adc
mov
call
jbe
jb
cmp
xchg
sar
sti
lock
(bad)
jecxz
movs
sub
(bad)
test
pop
mov
fldenv
ja
mov
pop
mov
in
es
mov
jecxz
aad
pop
xlat
div
int
jp
inc
cmp
mov
sbb
and
sbb
pop
lahf
add
xor
sub
dec
mov
xchg
adc
jae
add
cdq
mov
sbb
push
cli
add
test
popf
push
sbb
es
xchg
out
add
cmp
push
cwde
dec
sbb
dec
fdivrp
push
dec
cmp
outs
lock
jo
lods
int
adc
mov
ja
test
je
pop
xchg
cmps
sbb
out
jae
mov
mov
lock
pop
test
fcmovu
rcr
dec
cmc
dec
mov
shl
jno
add
jmp
inc
push
fisub
sbb
pop
aaa
jo
loopne
mov
ja
div
out
jns
push
icebp
cmp
xchg
adc
sbb
push
fistp
and
sub
(bad)
fistp
mov
or
push
pushf
push
mov
dec
pop
(bad)
lods
xor
push
leave
and
push
mov
mov
fucomp
mov
cmp
iret
sub
xor
(bad)
popa
(bad)
es
stc
(bad)
dec
mov
ret
sahf
pop
(bad)
arpl
jmp
cmp
or
imul
rcr
push
dec
rol
ins
sbb
cmc
popa
loopne
adc
jb
inc
sar
xchg
fstp
ror
push
mov
(bad)
clc
les
sub
andnps
xchg
cmp
xor
pop
xchg
mov
hlt
sbb
fst
cmps
ds
pop
imul
cmp
retf
cli
xor
push
inc
and
inc
(bad)
stos
push
in
push
pop
stos
xor
cwde
push
pop
xor
mov
pop
inc
imul
sub
test
mov
cmp
push
fchs
mov
sti
cli
xor
aaa
or
sbb
daa
mov
sbb
pop
xchg
arpl
mov
fild
add
sub
sti
mov
pop
mov
in
mov
sub
push
loopne
movs
iret
(bad)
iret
dec
cld
loopne
imul
push
lods
and
fnsave
and
imul
cmovs
repnz
mov
sub
xchg
nop
out
mov
add
in
test
(bad)
js
cwde
jmp
fisttp
fnstenv
xchg
jp
retf
mov
(bad)
repz
loop
daa
xor
inc
adc
je
mov
outs
or
cmc
popf
push
lahf
xchg
push
hlt
ins
jb
sbb
or
ret
cmps
push
jle
das
jmp
ror
popf
adc
pop
jo
stos
inc
in
data16
adc
pusha
sub
add
xchg
lods
add
push
adc
scas
jge
sbb
sub
popf
inc
push
out
fadd
mov
movs
xchg
dec
jns
aam
int
jno
push
jo
xor
sub
sti
push
popa
dec
adc
call
cmps
aaa
(bad)
test
push
push
mov
push
jbe
fwait
pushf
lds
mov
lea
push
mov
cmps
pop
scas
fisub
mov
pushf
sbb
imul
daa
xor
pop
and
test
ins
call
out
mov
jg
jnp
mov
xchg
int3
movs
cmp
jmp
movs
(bad)
cld
xchg
mov
sbb
xchg
cmps
adc
cdq
ja
xchg
pop
mov
sub
call
cmp
mov
je
fisub
(bad)
jmp
ror
idiv
adc
adc
in
nop
(bad)
jbe
jle
rcl
cmp
jns
rol
jecxz
retf
mov
xchg
mov
inc
mov
xor
leave
xchg
dec
test
mov
popa
add
and
mov
repz
cmps
aas
sbb
mov
loop
inc
(bad)
dec
xor
imul
inc
adc
xchg
iret
(bad)
mul
cmp
jp
movs
stc
pop
cmps
xchg
adc
lahf
mov
jp
lods
rcr
cmp
add
and
or
test
rcr
jae
scas
ret
push
aad
cmp
mov
orps
dec
inc
adc
iret
fadd
cmp
addr16
fmul
daa
push
pushf
sti
je
pop
bswap
jae
sub
cmp
in
or
jp
test
jae
stos
xor
sub
mov
and
scas
inc
mov
cmc
push
mov
xchg
mov
(bad)
jns
cmp
sbb
jne
cdq
fst
cli
(bad)
xchg
movs
iretw
mov
pop
pop
lahf
inc
addr16
daa
stos
ds
int
cmc
sub
jmp
inc
lods
jl
sbb
sub
test
adc
push
cmp
iret
mov
test
xor
icebp
repnz
adc
push
jb
inc
add
in
mov
and
and
pop
ss
or
cdq
movs
cmps
movs
arpl
in
movs
add
mov
or
cmps
lea
cmp
or
ror
inc
adc
inc
test
xor
jne
scas
in
xor
(bad)
pop
cmps
inc
jmp
outs
and
dec
(bad)
cmp
cmc
out
add
mov
inc
mov
pop
fistp
retf
fwait
cld
xchg
stc
add
pop
and
mov
addr16
pop
arpl
mov
stos
jecxz
or
cli
pop
retf
cmp
dec
stos
retf
imul
mov
movs
mov
aam
pushf
mov
or
cmp
xchg
or
mul
sub
ret
scas
ret
cmp
data16
jns
rcr
mov
mov
ss
sub
bound
xlat
nop
out
data16
dec
add
inc
popf
mov
(bad)
or
jb
shl
add
das
ret
jae
xchg
mov
aas
std
lods
idiv
mov
cli
jecxz
pop
ss
test
jb
cwde
jmp
xor
jecxz
ret
or
in
inc
or
cmp
pusha
or
stos
and
xchg
xor
jp
mov
rol
xchg
loopne
scas
idiv
jae
clc
ds
jmp
(bad)
pop
cmc
mov
add
shl
nop
out
fcom
movs
int
inc
out
aas
lea
sbb
(bad)
(bad)
cmp
jle
call
lds
vpmulhuw
test
or
sbb
pop
or
outs
imul
pop
sub
mov
shr
add
jg
retf
cli
jl
jae
cld
jmp
std
inc
inc
dec
iret
scas
ds
into
mov
jnp
ins
push
pop
push
or
retf
push
pop
outs
or
lods
push
mov
das
mov
adc
lock
mov
xor
adc
(bad)
and
push
jbe
mov
movs
mov
stos
add
mov
adc
fdiv
adc
dec
sub
sub
cmp
dec
cmp
xor
sub
cmp
pop
inc
sbb
pop
and
xchg
fwait
aas
cld
int3
mov
lods
dec
outs
cwde
aas
xchg
mul
aaa
and
jo
(bad)
cmp
fnstsw
pop
int3
dec
out
mov
cmp
shr
test
push
leave
outs
retf
jo
outs
adc
push
in
jl
mov
push
(bad)
adc
call
mov
mov
ss
enter
and
mov
mov
cmp
xor
mov
jg
mov
pop
arpl
inc
in
in
cmc
ret
les
jno
or
and
push
repz
cs
cmp
xchg
loope
sbb
or
push
int
lock
(bad)
mov
lods
pop
inc
ins
add
std
cmp
mov
xchg
or
mov
mov
jno
xchg
or
adc
pop
pop
pop
sub
and
lahf
jge
or
aam
fwait
and
lahf
push
popf
xor
ins
sbb
push
clc
aad
arpl
fptan
test
out
jle
or
movs
cwde
pop
adc
ja
push
(bad)
cmc
fadd
mov
lods
int3
pusha
lock
inc
pop
adc
mov
dec
add
(bad)
bound
js
pushf
dec
dec
mov
jo
lods
xor
mov
xchg
mov
push
cmps
push
cli
inc
fidivr
mov
pop
iret
daa
sub
pop
add
cmps
js
shr
add
cwde
addr16
xor
lds
mov
loop
shr
cli
lahf
mov
(bad)
into
add
push
push
std
les
sti
sbb
daa
pusha
pop
dec
jp
call
sub
add
popa
movs
mov
ret
lock
xchg
cmps
jmp
test
xor
ja
mov
cmp
sub
cmp
dec
std
fsub
jb
pop
call
add
xchg
jnp
mov
jnp
adc
dec
xor
cmp
cli
adc
scas
dec
inc
(bad)
add
jl
sub
xchg
or
sar
imul
fst
xlat
into
lock
xor
les
fstp
sbb
jnp
dec
shl
retf
push
xchg
sub
dec
sbb
or
cmp
xor
call
sub
shl
int3
(bad)
lods
inc
push
push
pop
outs
fs
dec
adc
cmp
in
inc
sub
pop
mov
push
loop
dec
shl
cwde
xor
jg
inc
push
mov
xchg
hlt
pop
imul
movs
icebp
(bad)
hlt
mov
jae
jle
mov
jne
test
or
push
repz
mov
pop
inc
pop
sub
pop
cmp
push
pop
and
cs
pop
lahf
ss
(bad)
js
pop
pop
adc
repz
dec
sbb
aad
stos
push
jno
jmp
std
xchg
arpl
jnp
test
inc
outs
imul
xchg
sahf
int3
jmp
js
sbb
xchg
mov
fs
dec
imul
or
sti
adc
in
push
jmp
dec
movs
and
adc
ret
arpl
push
imul
adc
xor
or
test
or
push
jno
test
std
sub
inc
jb
mov
je
jne
mov
jge
scas
movs
xchg
sub
cmp
or
retf
loope
(bad)
(bad)
jg
push
mov
imul
and
nop
hlt
ror
inc
jle
aaa
je
shr
xchg
add
mov
or
fdiv
call
cmps
dec
jnp
jb
jl
out
pushf
pop
add
sar
sbb
mov
das
dec
lds
movs
sub
in
enter
popf
xchg
sub
fistp
hlt
(bad)
stc
test
mov
mov
test
dec
add
xor
mov
lods
xor
ja
mov
mov
ins
fs
xchg
sbb
or
out
xor
test
fild
ret
fsub
pushf
xchg
shl
pop
in
fsubr
dec
out
cdq
adc
mov
adc
or
fs
sub
mov
test
mov
sar
push
push
retf
stos
and
retf
mov
cdq
mov
xor
xor
fistp
xor
and
pop
mov
dec
fisubr
mov
push
and
dec
loop
out
add
and
mov
push
call
mov
fild
mov
mov
into
mov
out
jmp
mov
int
pop
cmp
out
test
mov
rcr
cmps
mov
jbe
xchg
pop
pusha
jp
mov
int
lods
int3
cli
push
or
jge
fndisi(8087
mov
in
sub
jo
bound
mov
or
pop
inc
lods
outs
pushf
sub
add
clc
sub
pop
ret
or
push
and
cmp
inc
fisub
pop
scas
fisub
inc
xor
pop
or
inc
std
mov
pop
ins
cmp
add
sti
mov
xor
xor
xchg
sub
(bad)
out
mov
call
cs
jbe
add
adc
mov
and
std
das
rol
mov
ret
jne
pop
mov
addr16
jno
sbb
jbe
push
push
cwde
jns
push
aad
loope
push
sub
pop
gs
dec
cmp
pop
cmp
test
test
mov
ja
jl
out
xchg
ins
mov
pop
fdivr
cmc
outs
and
pop
(bad)
sti
cmps
stos
pop
and
sbb
cmp
xchg
leave
jl
xchg
lds
ins
dec
data16
mov
xchg
aam
adc
sbb
ss
repnz
jae
xor
add
in
mov
mov
jno
pop
xchg
rcl
and
ficomp
das
cmp
mov
xchg
lahf
xchg
lea
xchg
push
fucomip
lods
cmc
dec
das
(bad)
shl
aad
(bad)
imul
jp
mov
mov
ja
enter
mov
test
es
icebp
mov
mov
xchg
xor
dec
lea
icebp
inc
lahf
jle
int3
and
lahf
mov
jne
nop
dec
inc
jmp
not
ret
fs
cwde
dec
mov
test
pop
movs
cmps
cmp
in
(bad)
jmp
popa
pop
add
adc
das
mov
scas
mov
mov
cmp
out
dec
push
cwde
xchg
sahf
mov
test
loop
dec
fld
sahf
lea
dec
ror
pop
cli
lahf
mov
push
jmp
cmp
mov
pop
fwait
dec
fnstsw
out
fidivr
enter
dec
jne
out
lods
mov
test
adc
test
dec
jns
adc
xchg
push
cmp
sub
cmps
addr16
or
popa
test
pop
outs
mov
and
fbstp
jmp
test
dec
cmp
sub
mov
or
fninit
inc
aas
imul
push
xor
es
in
inc
xchg
scas
(bad)
mov
sub
fdiv
sbb
out
loop
movs
aas
or
pop
xor
inc
sbb
lea
(bad)
sbb
add
adc
xchg
ret
sbb
aaa
xchg
shr
add
dec
jmp
sbb
xor
xchg
jle
inc
repnz
add
pop
in
mov
add
add
js
dec
sahf
cli
cli
push
cmc
ja
mov
aaa
cmp
xor
(bad)
jno
(bad)
mov
stos
inc
dec
sub
add
and
jmp
mov
inc
js
dec
repz
out
mov
iret
cmps
aas
jb
imul
arpl
xchg
popa
leave
aam
pop
inc
dec
out
ret
add
xchg
xor
push
dec
data16
js
mov
and
xchg
xchg
mov
sti
pop
adc
push
fsub
rol
scas
mov
ret
test
inc
mov
out
and
xor
dec
sti
or
xor
mov
mov
mov
and
sub
push
and
iret
jle
xlat
sub
out
idiv
sub
xchg
sbb
fwait
aam
shl
jb
push
jmp
out
mov
bound
mov
xor
adc
aaa
movs
inc
in
mov
movs
xchg
xchg
or
mov
jge
push
popf
fnstenv
div
push
popa
into
adc
sbb
mov
outs
add
jns
mov
repnz
jo
fisttp
sub
aas
push
or
xor
sbb
adc
ror
lods
repnz
mov
scas
sub
mov
outs
mov
test
sahf
pop
arpl
repz
stos
fnstsw
and
jmp
push
or
enter
(bad)
inc
sbb
pop
add
sbb
dec
aad
push
jmp
ss
add
or
out
loop
call
xchg
aaa
jnp
dec
push
not
mov
jae
xchg
lahf
(bad)
xchg
cmc
push
ss
adc
cmps
cmc
jo
adc
sbb
shl
aam
mov
pop
push
pop
retf
xchg
outs
loope
inc
jg
inc
ss
push
les
cmps
mov
push
inc
add
pop
pop
mov
or
sub
jmp
aam
repnz
imul
jae
adc
and
mov
push
and
je
mov
ds
or
clc
mov
jmp
push
push
ins
push
test
xchg
rcr
addr16
mov
mov
fs
clc
xor
xor
movs
lock
cmc
jbe
add
iret
repz
test
mov
mov
inc
inc
in
shl
in
bts
xchg
iret
ins
outs
test
dec
cmps
out
movs
cmc
leave
cmp
and
sub
sub
inc
jge
cmp
xor
in
jno
mov
call
mov
ss
and
fstp
push
je
cmp
fwait
sub
cmp
sbb
mov
hlt
loope
scas
test
std
rcl
loope
aaa
mov
mov
mov
inc
dec
test
(bad)
adc
jne
mov
fdiv
adc
mov
ja
jno
jne
pop
adc
(bad)
mov
cmps
or
dec
imul
xchg
in
cs
sub
mov
dec
pusha
mov
mov
add
(bad)
shr
adc
mov
mov
shl
sub
dec
lahf
fwait
and
(bad)
pop
call
ja
pusha
test
dec
push
cmp
test
xchg
fwait
mov
xor
in
jmp
push
lahf
jne
add
and
stc
dec
mov
jg
jae
mov
jg
xchg
clc
adc
jge
jne
jl
dec
jg
sbb
test
iret
mov
lock
inc
pop
jp
adc
jmp
mov
int3
jmp
sbb
mul
mov
or
and
ss
mov
daa
add
lahf
xchg
pop
add
shr
(bad)
bound
pop
xchg
xor
cs
lds
adc
fdiv
fcomp
push
movs
and
fisubr
add
jb
(bad)
mov
sub
fadd
inc
inc
cmps
into
pop
in
cmp
sub
mov
dec
sar
pop
rol
xchg
and
add
aas
add
xor
bound
xchg
jo
pop
fld
and
pop
and
mov
pushf
retf
mov
sub
jne
mov
dec
mov
popa
movs
mov
push
sub
mov
lds
sbb
mov
call
jmp
pop
adc
adc
imul
in
mov
stos
lds
test
fild
sbb
dec
fbstp
js
rcr
xchg
adc
pop
mov
inc
dec
call
call
xlat
shr
bound
nop
ror
lea
xchg
jecxz
in
or
inc
fnstenv
aam
popa
enter
xor
xchg
sti
push
xchg
sub
push
es
retf
retf
and
xor
fidivr
mov
mov
and
inc
cmp
in
push
mov
jae
adc
ja
je
pusha
loop
inc
and
lahf
mov
sbb
xchg
add
dec
iret
or
fcomp
push
sbb
pop
pop
mov
and
cmps
mov
iret
rcl
push
loope
fild
jno
leave
add
cmp
dec
mov
pop
push
mov
fld
jb
retf
cmc
fnop
out
shl
pop
mov
call
jg
out
outs
push
mov
je
scas
lock
lock
xchg
adc
xchg
sbb
je
loope
(bad)
dec
jmp
arpl
inc
jge
sbb
in
out
push
test
push
jle
mov
adc
xchg
push
in
push
jmp
pop
adc
push
lahf
inc
test
add
std
je
jmp
jnp
clc
jl
sbb
jmp
mov
dec
add
movs
std
(bad)
aam
lock
pushf
and
xor
mov
cmp
cmp
pop
xor
push
js
sbb
lods
jns
nop
fist
loopne
push
jecxz
loop
push
cmp
loopne
outs
dec
jns
sbb
div
dec
ins
js
cmp
mov
ins
sbb
pushf
enter
fcmovne
xchg
js
cwde
call
lods
and
test
(bad)
pop
bsr
push
add
cs
xchg
(bad)
ins
ror
jo
std
add
out
(bad)
cmc
movs
fs
cmp
sbb
mov
and
and
sub
fisubr
push
fnsave
mov
jns
stc
hlt
call
fst
or
mov
push
fsub
sbb
add
xor
test
mov
mov
sub
loop
inc
mov
(bad)
in
jecxz
adc
hlt
xchg
push
sub
and
jae
add
mov
jo
cmps
or
cmp
sub
pop
mov
mov
fiadd
pop
mov
popf
aad
dec
jno
and
fiadd
xchg
hlt
jecxz
inc
popf
push
cmp
(bad)
dec
xor
es
dec
or
dec
fisub
jl
cmp
sbb
push
(bad)
mov
popf
jae
cmp
sub
or
inc
push
ret
cwde
stos
push
jecxz
xor
dec
scas
push
push
arpl
dec
pop
sahf
inc
xchg
mov
cmps
popf
cmp
stos
mov
stc
jg
stos
out
cmps
loopne
sub
addr16
xlat
out
or
arpl
lahf
xchg
scas
lds
fs
cmp
leave
pop
mov
sbb
clc
adc
(bad)
pop
aam
lods
icebp
or
xlat
adc
sub
jg
jae
jne
mov
jl
je
add
mov
nop
jg
xchg
imul
mov
mov
inc
xchg
shl
dec
fbld
jge
lods
mov
fcmovnb
outs
ficom
(bad)
adc
pop
pop
cs
ins
xor
dec
dec
lock
sub
(bad)
mov
lds
cs
xchg
jp
ins
mov
adc
shr
lds
lock
in
out
inc
sub
sahf
repz
xor
push
add
jmp
out
imul
ja
fwait
jmp
jb
jg
popa
mov
pop
add
and
pusha
pop
arpl
pop
sub
out
icebp
add
fcom
fdiv
stos
enter
xor
push
cmp
dec
mov
sti
add
pop
ds
addr16
xor
push
neg
scas
loop
inc
imul
or
mov
lock
xor
mov
inc
hlt
xchg
es
outs
out
sbb
mov
loop
outs
test
popa
push
leave
imul
jmp
or
xor
sbb
mov
xor
xor
xchg
sub
stc
adc
ss
pop
pop
mov
sbb
pop
test
stc
rcl
or
jbe
jnp
sbb
xor
loopne
jle
dec
sahf
or
adc
cmp
lods
fsub
ds
xchg
xchg
retf
cmps
test
and
arpl
imul
xchg
stos
pusha
scas
mov
(bad)
or
loopne
mov
xor
mov
outs
iret
or
add
lock
inc
jb
mov
mov
pop
aaa
call
and
ds
pop
lahf
sub
jg
push
cmp
jo
and
outs
mov
jbe
adc
sub
dec
dec
cwde
jnp
fs
in
call
das
ss
cmp
sar
popf
or
mov
mov
ins
inc
lods
or
rcl
sub
fisttp
in
sbb
std
mov
syscall
inc
mov
outs
mov
stos
dec
or
jmp
adc
cmp
and
push
(bad)
fld
pop
push
aam
dec
mov
fnsave
xchg
loopne
retf
mov
adc
or
add
shr
(bad)
lds
sbb
imul
xchg
add
aaa
loope
dec
out
not
add
jge
inc
mov
push
adc
add
aad
fxch
cmp
or
outs
xchg
adc
pop
inc
call
aas
adc
aas
inc
adc
clc
xchg
aad
push
loope
adc
cdq
cs
mov
movs
icebp
jecxz
xor
fs
stos
adc
xor
add
gs
cld
das
sbb
aad
mov
leave
imul
sbb
jge
(bad)
or
sar
(bad)
sbb
fdivr
in
(bad)
(bad)
and
xchg
(bad)
fidivr
aas
loop
in
test
mov
rol
sbb
pop
loop
jle
push
jmp
(bad)
cld
cmp
ds
scas
popa
jae
nop
ret
jns
movs
and
push
addr16
or
test
xor
mov
xor
div
call
dec
cmc
xchg
push
dec
xlat
pop
repnz
cmps
ins
pop
repz
(bad)
iret
adc
mov
leave
imul
or
adc
imul
jae
adc
hlt
loop
retf
in
stos
or
mov
sub
push
rcl
popf
xor
fdiv
cmp
rol
jmp
and
mov
scas
test
movs
into
in
movs
add
dec
(bad)
or
fcmovu
push
pushf
loop
inc
retf
(bad)
fist
into
or
pushf
inc
xor
sbb
jne
enter
stos
or
rep
push
pop
enter
cmp
loopne
mov
xchg
xor
mov
cwde
and
stos
adc
mov
add
gs
or
mov
jle
sub
cmp
shr
inc
es
cwde
push
push
movsx
cmp
mov
or
and
mov
out
popa
xor
mov
sub
(bad)
fisttp
push
fcomip
(bad)
jno
push
int
mov
jmp
add
mov
loopne
addr16
leave
inc
dec
ss
lods
push
inc
dec
xchg
fs
xchg
and
iret
cmp
repnz
stc
test
fs
pop
jmp
push
xchg
(bad)
and
push
dec
aad
mov
push
lea
pop
mov
test
out
or
lods
push
lds
jmp
ss
add
fstp
lock
mov
scas
bound
sbb
dec
mov
jmp
jne
fwait
and
inc
mov
loop
xchg
jnp
inc
outs
mov
fst
sar
mov
and
xor
add
js
(bad)
pop
(bad)
mov
retf
sub
fld
rol
cmp
pop
fldenv
push
sub
xor
push
pop
jns
push
adc
pusha
pop
jge
stc
fnstsw
inc
aam
jne
sar
int
jmp
mov
mov
call
inc
inc
mov
scas
movs
test
pusha
test
mov
inc
push
inc
pop
dec
ja
inc
sbb
into
jl
nop
popf
sbb
fcmovnu
dec
xchg
xor
or
cmp
sbb
adc
xor
fistp
jle
dec
popf
jns
xlat
in
out
enter
xor
add
fcomip
or
fidiv
jns
(bad)
ins
call
fild
(bad)
pop
imul
push
ret
push
cmp
cmp
repz
push
push
int3
jmp
aam
jmp
pop
jmp
in
push
int3
or
inc
outs
xchg
(bad)
fstp
(bad)
ins
inc
pop
aaa
call
adc
fdivp
pop
push
mov
jmp
add
(bad)
out
repz
sti
pushw
hlt
mov
data16
fucomip
jo
cmp
mov
xchg
test
ins
mov
mov
mov
daa
cmp
sahf
mov
aad
mov
pop
mov
cmp
fwait
xchg
and
imul
mov
mov
es
push
mov
(bad)
or
loopne
mov
mov
stos
mov
xchg
xchg
xor
retf
xchg
nop
loopne
inc
sub
mov
mov
sub
ror
add
cmp
xchg
pop
pop
add
add
xchg
pop
(bad)
mov
aaa
aad
inc
pop
xchg
push
stc
ret
(bad)
mov
mov
bound
adc
addr16
adc
pop
xor
xor
(bad)
iret
fild
ror
ret
jno
loopne
jge
adc
test
mov
and
push
cmp
aad
mov
sub
mov
push
ret
xchg
push
cmp
xor
cmp
aas
out
adc
xlat
cmp
and
xor
(bad)
ins
fcom
popa
cli
push
xchg
mov
cmp
dec
mov
fist
nop
fbld
mov
push
out
and
add
outs
ss
fld
xchg
bnd
mov
pop
add
addr16
cmp
cmps
inc
dec
mov
sub
push
jp
jb
fwait
enter
je
movs
xor
pusha
add
push
repz
cli
hlt
add
(bad)
adc
movs
(bad)
sar
xchg
jno
ror
mov
mov
leave
fiadd
(bad)
mov
adc
add
or
mov
xor
fcomp
adc
fcmove
jbe
imul
sahf
mov
(bad)
cli
add
fwait
mov
dec
sahf
xlat
test
mov
lods
adc
xlat
repnz
out
stc
push
(bad)
and
or
mov
call
mov
or
mov
aam
jo
fucomp
and
scas
cmp
jne
cmp
gs
pop
ja
retf
pop
mov
mov
hlt
jns
add
mov
jl
nop
movs
inc
sahf
pop
pop
in
imul
aad
shr
xor
lods
xor
pop
mov
leave
int
mov
jo
pop
dec
daa
cmps
fwait
in
mov
stos
arpl
xlat
cmp
jb
push
cmp
or
sub
mov
add
push
sbb
in
out
shr
push
les
lods
mov
daa
pushf
xchg
movs
mov
xor
pop
(bad)
jmp
jo
in
and
rol
pop
push
xchg
inc
jnp
leave
add
cmc
xchg
xchg
push
adc
movs
lods
call
jns
sub
pusha
dec
out
and
jle
xchg
sub
repnz
add
or
xchg
adc
and
imul
mov
sbb
push
pop
sbb
push
fldcw
cmp
mov
mov
out
jns
add
loopne
dec
xor
sti
das
jg
mov
fsubp
jnp
xchg
pop
mov
mov
jo
cmps
ss
xchg
inc
lock
scas
gs
adc
pop
add
mov
jmp
dec
and
movs
mov
xlat
mov
or
push
add
lahf
push
nop
push
xor
ret
xchg
fs
mov
ds
test
jecxz
popf
jecxz
int3
xchg
xor
iret
sbb
nop
int
cmp
ror
mov
rcr
movs
cmp
pop
retf
rcr
cmp
dec
sbb
pop
ins
sbb
jle
fs
mov
mov
call
add
loopne
or
adc
test
ins
test
xchg
or
aam
dec
stos
ds
xor
add
push
adc
jp
inc
mov
mov
xor
popa
sub
jbe
into
adc
adc
pop
std
dec
in
dec
xor
add
or
add
ds
in
mov
clc
lock
fisub
imul
dec
xlat
pop
or
mov
call
ss
sti
in
pop
lds
or
xlat
cmp
in
(bad)
out
imul
or
in
cmc
jne
push
das
and
or
sub
nop
mov
push
inc
inc
loop
sub
jbe
fild
and
iret
jmp
loope
test
xchg
dec
push
push
aas
add
and
leave
ret
(bad)
push
cld
lahf
jo
nop
pop
ret
mov
fcmovb
cmps
pop
adc
fsubr
sub
(bad)
out
xlat
mov
jle
into
out
inc
lods
sub
neg
inc
std
test
sbb
xchg
adc
pop
mov
sbb
cmp
sahf
push
push
xchg
aaa
mov
(bad)
cld
xchg
repz
xor
push
leave
jmp
dec
cmp
push
fimul
and
cmc
xor
test
jle
and
or
aad
lods
es
xchg
mov
xchg
sbb
out
in
aam
inc
cmp
imul
sti
push
jno
pop
xor
cmp
ret
lods
and
out
sbb
int
mov
cmp
cmps
or
jp
ja
xchg
int
adc
gs
and
cmp
or
push
jle
mov
xchg
leave
aam
add
call
jmp
enter
add
cmp
ret
cli
mov
movs
fwait
loop
mov
cli
sub
mov
test
call
pop
mov
pop
ins
ret
fs
lods
gs
adc
neg
(bad)
retf
ror
xchg
or
jns
iret
movs
adc
aas
mov
cmc
prefetch
cmp
pusha
mov
add
mov
mov
adc
inc
lods
cmps
add
fmul
call
cwde
cs
xor
jp
fmul
jns
dec
sbb
loop
dec
cmps
outs
pop
pop
cli
test
adc
dec
jno
and
call
pusha
lahf
sahf
aas
ins
sub
inc
pop
das
and
adc
mov
icebp
xor
xor
int3
inc
push
xchg
(bad)
jo
push
test
inc
add
rcr
mov
add
int3
adc
retf
xchg
in
retf
out
jo
ja
mov
scas
sbb
hlt
inc
cmp
lahf
jo
leave
popa
shl
xor
mov
daa
popf
mov
xchg
call
cmp
and
dec
push
ss
cld
or
and
jge
push
jge
sti
or
aad
sub
dec
pop
pop
mov
(bad)
and
mov
inc
imul
mov
movs
iret
adc
sbb
(bad)
stos
pop
jle
adc
inc
loope
pop
shl
mov
lds
sub
outs
or
aad
xor
gs
mov
mov
fcom
mov
xor
in
leave
loopne
push
stc
push
out
in
jbe
sbb
xchg
xchg
push
xchg
fs
mov
ret
cli
icebp
scas
stos
and
inc
jge
mov
(bad)
or
push
xor
xor
add
push
push
xchg
pop
mov
dec
ins
mov
or
out
dec
pop
nop
pop
inc
(bad)
cmp
sbb
hlt
inc
jl
lahf
and
gs
ret
pushf
shrd
fidivr
sbb
xchg
(bad)
rol
and
fwait
stc
sub
nop
mov
hlt
jae
shl
push
(bad)
push
cmp
cmp
int
mov
xchg
jns
pushf
rcr
imul
shr
dec
pop
sbb
xchg
mov
add
je
mov
ds
sub
cld
dec
cld
push
cwde
inc
add
sub
push
adc
push
and
push
fwait
shr
scas
or
je
out
rcr
or
pop
nop
push
cmps
clc
xchg
sbb
aas
adc
jbe
cwde
push
ret
add
cmp
aad
(bad)
cli
inc
dec
xlat
push
jl
adc
jno
sbb
fmul
popf
pop
jmp
or
inc
xchg
jne
cmps
stc
mov
test
and
jecxz
rcl
icebp
(bad)
icebp
dec
xor
enter
cmp
sbb
enter
xor
lock
push
aam
cmp
cmp
fistp
sbb
shr
add
daa
mov
xor
mov
push
mov
mov
xchg
sbb
or
and
out
pop
cmp
mov
adc
clc
dec
cmc
fwait
mov
xor
(bad)
es
sbb
loopne
and
sbb
cmp
stc
mov
popa
sbb
mov
pop
nop
xchg
push
cmp
je
dec
mov
push
loope
pop
std
jne
push
cmp
mov
test
adc
adc
inc
push
leave
loop
es
cmp
push
mov
int
repz
nop
clc
inc
xor
test
mov
push
adc
add
xlat
fist
dec
pushf
adc
inc
aam
dec
fld
jp
shl
cli
mov
mov
loopne
arpl
nop
cmc
jo
jmp
sub
push
mov
jne
cmp
cmps
ficomp
cld
add
call
fimul
pop
pop
xchg
in
xlat
sbb
dec
xor
dec
mov
jle
mov
push
test
bnd
aad
enter
mov
iret
xor
lods
les
mov
mov
hlt
gs
add
push
sbb
cmps
inc
pop
in
xchg
pop
test
loopne
jmp
mov
add
(bad)
add
mul
iret
adc
pop
loop
jmp
(bad)
dec
mov
sbb
nop
es
and
sti
jae
out
inc
sbb
aad
(bad)
gs
jnp
push
sbb
adc
jmp
sbb
pop
(bad)
fisttp
pushf
fidiv
sub
(bad)
fisttp
daa
lods
fadd
js
mov
dec
popa
popf
dec
push
and
xchg
retf
retf
dec
(bad)
aad
push
dec
xchg
(bad)
retf
cmp
pop
sub
outs
adc
in
bound
jae
push
in
fld
pusha
mov
push
xchg
and
mov
push
ss
js
popf
jns
jl
jge
pop
mov
arpl
mov
dec
inc
les
adc
nop
mov
sbb
add
(bad)
add
fwait
repnz
xchg
mov
inc
mov
jae
std
cmp
push
out
mov
lahf
dec
add
adc
enter
xor
xchg
stos
xchg
mov
xor
mov
mov
lea
fimul
out
popa
sub
mov
stos
mov
jbe
inc
pop
in
(bad)
mov
sub
les
jno
addr16
cli
aad
jb
les
xchg
or
mov
dec
into
out
lds
mov
cwde
mov
mov
jns
cmps
xchg
jge
ret
fst
shl
push
dec
stos
jge
jno
xchg
in
fwait
adc
sub
ds
call
popa
pusha
(bad)
aas
mov
cmps
and
inc
mov
iret
addr16
aaa
push
jle
lea
movs
into
jmp
inc
loope
xor
dec
jmp
jmp
and
mov
(bad)
mov
jns
mov
fldcw
push
mov
adc
pop
ins
inc
ins
add
xor
cwde
add
fcmovnb
imul
xchg
fild
mov
mov
ja
adc
mov
rcr
cdq
push
push
pusha
and
sbb
adc
pop
stos
xor
mov
and
sahf
icebp
cmp
inc
in
(bad)
les
pop
lea
jmp
mov
out
lods
aam
mov
clc
and
pop
ficomp
loopne
inc
pop
mov
pop
fwait
mov
mov
sahf
push
ror
pop
or
xor
xor
push
inc
adc
fst
movs
xchg
mov
call
jg
sub
dec
or
fst
adc
mov
pop
pusha
pop
movs
shl
or
loope
jmp
pop
cmp
repnz
aas
jecxz
jge
std
add
hlt
out
inc
rcr
aad
lea
dec
cmp
pop
sub
das
push
fwait
sub
push
fwait
mov
mov
clc
bnd
(bad)
xchg
(bad)
(bad)
aaa
in
push
lock
dec
mov
sbb
fsub
inc
pop
ins
dec
push
inc
test
bound
out
xor
jge
(bad)
loop
xor
adc
mov
(bad)
fisub
jmp
inc
xchg
(bad)
popf
fs
arpl
je
cmps
daa
xor
mov
nop
jnp
sub
int3
dec
mov
outs
xor
dec
jbe
mov
inc
and
imul
call
push
inc
pop
mov
movs
out
add
or
dec
push
(bad)
lods
add
dec
cmp
sub
xchg
jge
gs
cmc
pop
sbb
xchg
movs
(bad)
(bad)
jl
push
(bad)
push
xchg
pop
ins
imul
je
ret
lods
test
adc
sbb
dec
inc
mov
fwait
jl
nop
cmc
add
jb
add
test
inc
mov
pop
jmp
jg
jge
ins
inc
ret
jp
mov
lock
movs
mov
add
in
jb
mov
retf
inc
popf
(bad)
jo
lods
push
out
inc
jecxz
cmp
and
(bad)
mov
xlat
ret
pop
xlat
or
in
xchg
stc
pop
xor
retf
outs
gs
daa
mov
iret
push
mov
fbld
cmp
pushf
xchg
retf
loopne
push
sbb
(bad)
(bad)
fcom
sbb
cmp
test
mov
mov
adc
ss
lea
jge
lods
inc
retf
aad
or
in
ja
inc
fsub
or
sahf
mov
sbb
rcl
out
push
outs
in
sub
xchg
je
push
js
test
lods
ss
cmps
xlat
pop
mov
fucom
xchg
fisub
call
mov
cmps
xchg
and
jae
(bad)
jl
xchg
xor
xor
fdivr
out
xchg
cmp
xchg
dec
push
xor
shr
fs
jmp
js
sbb
sub
repz
xor
adc
sbb
test
stos
ds
xor
xlat
sub
int3
mov
xor
or
movs
shl
(bad)
jmp
ds
push
sub
push
iret
out
and
mov
(bad)
sub
lods
pop
add
fs
outs
pop
imul
push
jmp
push
(bad)
or
repnz
mov
jb
icebp
push
dec
inc
ds
movs
ds
pop
sub
rcr
retf
out
or
out
lods
jecxz
push
movs
retf
jbe
pop
shl
jns
hlt
inc
sbb
push
mov
clc
mov
pop
ret
adc
xchg
pusha
or
mov
sub
add
inc
mov
adc
mov
scas
(bad)
cli
rcl
loop
fidivr
fcomp
xor
sar
enter
sub
daa
pop
iret
dec
jnp
push
inc
mov
movs
xchg
xchg
iret
xchg
in
loopne
fdivr
hlt
mov
mov
outs
push
data16
ss
mov
cmp
and
jle
popf
add
cmp
jp
xchg
add
sbb
sahf
and
aaa
add
mov
sub
in
mov
or
jg
mov
movs
jns
sahf
mov
push
push
leave
shr
outs
pop
ret
dec
jne
xor
mov
pop
imul
push
cmps
scas
mov
xor
into
pop
aad
xchg
ja
lods
icebp
and
push
xchg
stc
adc
push
xor
test
imul
ins
pop
add
in
or
test
out
mov
repz
clc
popf
pop
scas
popa
test
ja
stos
test
xchg
rcl
mov
mov
lea
je
jns
sahf
add
out
mov
jle
or
dec
sbb
and
mov
iret
loop
int
pop
out
mov
imul
inc
jnp
rcl
pushf
pop
addr16
fadd
fcomip
dec
adc
int
mov
dec
cmp
push
cmp
test
loop
add
ins
fs
(bad)
dec
call
in
xchg
icebp
dec
jmp
or
leave
or
dec
daa
ja
mov
adc
lds
add
mov
xor
lock
push
add
fsub
xchg
push
sbb
(bad)
sbb
dec
stc
dec
sub
mov
scas
or
fnsave
add
xor
cmp
out
mov
(bad)
sbb
sbb
inc
out
jbe
imul
lahf
js
stos
or
xchg
sbb
in
gs
nop
mov
test
sbb
ins
nop
leave
ffree
jnp
arpl
mov
(bad)
and
iret
sahf
test
dec
jnp
push
sub
and
mov
pop
ror
adc
add
scas
loop
dec
inc
xchg
mov
imul
mov
pushf
fadd
jg
or
dec
mov
movs
out
cmp
das
xchg
and
(bad)
lock
enter
loope
pop
repz
mov
loopne
fidiv
adc
addr16
xchg
xchg
imul
sub
iret
adc
dec
cdq
inc
add
dec
test
cld
arpl
adc
jne
retf
inc
jno
mov
push
test
xchg
pop
scas
leave
add
jmp
xchg
mov
adc
dec
ja
cli
(bad)
add
mov
mov
adc
mov
sub
(bad)
mov
mov
rcl
mov
xor
shl
lds
dec
pop
sti
outs
mov
jle
frstor
popf
inc
(bad)
xor
xor
hlt
pop
imul
sbb
jns
dec
mov
or
mov
mov
mov
loop
xor
loop
pop
mov
xchg
or
sahf
push
aad
fdiv
inc
mov
cmp
repz
mov
pop
dec
jbe
mov
pop
push
add
sbb
jmp
sar
xor
mov
push
push
shl
ss
stos
scas
mov
gs
aaa
cdq
and
pop
add
and
xchg
aaa
jmp
mov
and
stc
cmp
jl
xor
test
lods
les
outs
dec
dec
push
inc
movs
push
mov
inc
xchg
jmp
repnz
inc
ret
movs
and
loop
xchg
xchg
sbb
in
clc
in
push
pop
popf
jnp
jecxz
fcom
or
push
mov
jl
les
neg
out
hlt
ds
adc
mov
push
dec
enter
add
adc
and
int
or
nop
(bad)
sbb
adc
pop
ret
xchg
inc
mov
mov
lahf
cld
or
(bad)
dec
dec
psllq
test
and
lahf
punpckhdq
ret
xchg
test
scas
retf
lods
dec
popf
ins
test
adc
int
sub
xor
lea
fist
jle
out
xchg
aad
cmp
lds
pop
xchg
and
xchg
dec
xchg
adc
dec
push
mov
adc
imul
mov
push
les
add
xchg
sub
pop
das
jno
cmp
ficomp
push
inc
sbb
mov
xchg
and
add
or
mov
and
sahf
je
sub
das
ins
outs
add
jns
or
jae
cmp
push
arpl
lock
push
push
in
sub
xchg
ret
and
movs
jbe
inc
cmp
ds
pop
test
sub
and
adc
rcl
aaa
jbe
inc
jns
loope
ins
in
adc
mov
jmp
fwait
repz
xchg
mov
mov
rcl
add
xor
mov
out
pop
and
push
jbe
adc
loope
sub
cmp
mov
lock
sbb
out
xor
nop
leave
pop
xchg
movs
cmps
jnp
add
int
retf
pop
ds
sub
push
pop
aaa
jmp
fs
cld
faddp
scas
adc
add
out
bound
mov
sti
fadd
and
and
in
sbb
rcl
outs
(bad)
push
rcr
jle
sub
inc
dec
scas
fucomi
popa
(bad)
les
icebp
or
movs
sbb
jp
cld
dec
mov
(bad)
fiadd
sbb
call
test
add
or
add
sbb
jp
adc
shl
cmp
cmp
imul
inc
mov
ss
inc
(bad)
repnz
xchg
or
test
inc
push
in
imul
retf
or
xor
cmp
pop
test
imul
cwde
fdiv
or
sbb
dec
inc
out
punpckhbw
aad
pop
fsub
mov
xor
xor
out
or
sbb
sbb
xor
mov
jnp
scas
mov
outs
sahf
sbb
fidivr
push
jae
add
jecxz
arpl
lods
and
pop
jl
sbb
xchg
mov
xlat
sbb
leave
test
mov
inc
cmp
fld1
ret
lods
pop
cmps
sbb
or
js
cmp
jg
xchg
jne
jp
adc
out
paddsw
push
xor
pop
sbb
lock
ror
stc
fild
loop
adc
sbb
xor
imul
clc
call
cmp
inc
mov
push
mov
(bad)
mov
lods
fisttp
mov
into
and
test
rcl
fsubrp
dec
or
sub
inc
sbb
fild
loope
call
jmp
mov
dec
mov
jg
pop
or
jo
lahf
in
or
xchg
scas
xchg
adc
lods
imul
fimul
cmp
aad
call
push
out
sub
sbb
jecxz
or
scas
push
(bad)
mov
jmp
in
fs
cwde
mov
retf
pop
inc
or
pop
push
cmp
cmp
std
mov
les
gs
sub
leave
pop
sbb
das
xchg
jge
popa
scas
pusha
cmp
ret
or
xchg
sub
stc
aam
add
add
dec
cmp
inc
in
test
enter
(bad)
pop
jp
push
fcmovb
mov
cmp
stos
sbb
cwde
out
inc
sub
loope
inc
sub
push
mov
sti
popa
sub
pop
into
movs
gs
jge
and
sub
into
cli
movs
cmps
out
push
jp
dec
or
outs
jmp
dec
add
sub
lods
leave
mov
pop
repnz
pop
aam
shr
enter
aaa
adc
jle
mov
adc
dec
data16
xchg
or
jo
cmp
leave
dec
rol
bound
lock
sahf
dec
mov
xor
fistp
fwait
or
bound
cmps
mov
sub
cmps
mov
scas
fistp
pop
ror
retf
rcr
cdq
push
int
mov
mov
ins
mov
ss
and
ds
cmp
js
adc
in
pop
inc
mov
pop
and
pop
sub
fadd
cld
add
(bad)
xor
cs
imul
sbb
call
jmp
(bad)
cmp
xor
js
and
icebp
push
adc
push
leave
dec
aaa
dec
mov
in
fidiv
out
sbb
jmp
rcr
mov
mov
lea
and
jns
fstp
es
and
cmp
out
mul
xchg
xchg
push
inc
pop
inc
inc
fidivr
xchg
pandn
mov
test
or
mov
ret
and
xor
xor
dec
dec
inc
cmps
push
pop
mov
les
enter
xor
and
jno
stos
xchg
inc
ja
inc
fist
icebp
or
fst
mov
outs
outs
cs
int
or
dec
gs
dec
enter
inc
scas
sub
fcmovnu
or
cmps
push
push
lods
ret
icebp
adc
xchg
push
imul
inc
cmp
std
pop
pusha
ins
jg
lods
loopne
hlt
adc
xor
mov
lahf
push
or
lock
push
mov
ja
fsubr
cmp
aad
popf
test
lds
loopne
cmp
sub
cld
add
mov
adc
(bad)
test
add
sti
dec
jle
sbb
mov
lahf
addr16
cmps
scas
(bad)
mov
in
sub
clc
dec
or
push
mov
jmp
dec
and
loopne
sahf
test
mov
fwait
fs
push
cwde
popa
scas
mov
jno
xor
mov
or
and
sahf
(bad)
adc
inc
sbb
jo
pop
es
es
dec
cmp
jmp
leave
aas
push
add
push
inc
int
imul
mov
pop
sub
pop
(bad)
push
jmp
sar
shl
(bad)
inc
push
inc
movs
fimul
not
cmp
pop
dec
sub
in
or
jl
stos
std
ja
leave
rol
in
loop
(bad)
xor
pop
fxch
sbb
ja
lods
dec
xor
loop
fcmovu
fwait
jle
xlat
pop
cmps
es
lods
push
sar
scas
call
fwait
movs
das
sub
sbb
and
jle
xor
ins
xchg
into
stos
pop
lock
pop
idiv
pop
jmp
clc
and
inc
adc
mov
(bad)
lahf
enter
adc
sti
pop
dec
dec
add
mov
daa
(bad)
jae
mov
sub
stos
sar
aas
inc
push
shl
push
ss
imul
xchg
aaa
xchg
lds
jbe
xor
mov
add
out
mov
pop
cmc
lods
dec
jp
mov
jne
ins
pop
std
and
dec
stos
lock
xor
sbb
and
into
sbb
les
fucomip
in
std
aas
adc
mov
clc
fisubr
or
nop
pop
lock
dec
(bad)
ins
adc
or
sar
js
call
push
push
jp
mov
popf
stc
or
pusha
mov
fstp
jo
dec
mov
div
out
pop
push
out
sbb
cmps
inc
push
(bad)
(bad)
fst
sbb
(bad)
icebp
inc
sub
sub
dec
bound
gs
mov
dec
push
or
movs
xor
add
shl
test
movs
fist
adc
sbb
bswap
jb
repnz
inc
sahf
ret
or
mov
lods
fs
rol
out
js
js
ret
sar
rcr
xchg
gs
stc
retf
xor
or
add
push
xchg
sbb
mov
jmp
test
sub
std
or
xchg
jge
push
lds
imul
lods
and
lock
xor
in
nop
xor
ja
mov
iret
adc
movaps
shl
mov
inc
data16
cdq
pushf
retf
cwde
fcomp
sbb
sbb
pop
inc
push
or
in
lods
rcr
push
pop
in
daa
daa
pop
adc
jmp
hlt
and
stos
pop
sbb
push
call
test
push
jns
scas
aas
dec
dec
jns
jle
int3
push
xor
mov
retf
out
jmp
adc
jno
lods
shl
out
call
fisubr
inc
push
mov
xor
pop
std
or
sub
adc
mov
aam
shl
dec
pop
add
fs
adc
or
test
mov
ret
loop
ficom
rcr
bswap
aam
test
mov
dec
add
sub
clc
mov
lods
or
cld
out
or
cmp
in
pop
xor
pop
jge
cmp
adc
int3
push
ins
imul
nop
retf
ja
mov
scas
and
push
xor
pop
out
out
enter
or
test
mov
sbb
fnsave
retf
ins
sti
inc
dec
mov
or
pop
lds
push
lea
call
vxorps
sbb
push
and
sti
adc
cmp
(bad)
sub
rol
je
out
sbb
cmp
sub
cmps
enter
mov
imul
mov
leave
or
jecxz
inc
mov
hlt
inc
into
int3
sub
inc
and
and
retf
or
pop
jbe
mov
scas
cmp
rcl
push
cdq
inc
hlt
xchg
int3
mov
and
push
cmps
dec
push
jp
repnz
dec
add
cmps
mov
ds
ds
pop
hlt
pop
fs
dec
mov
in
dec
xchg
stos
jb
and
pop
dec
jnp
ret
(bad)
icebp
imul
mov
gs
or
lahf
mov
sub
pop
lock
in
push
adc
push
pop
clc
push
or
retf
loope
gs
fild
sub
loop
xlat
lahf
loop
push
aad
mov
sub
inc
pop
sbb
in
push
in
sub
fimul
sub
ficomp
lea
add
(bad)
repnz
adc
(bad)
xor
xor
cmp
mov
or
mov
cwde
mov
ins
lahf
mov
pop
cmc
repnz
xlat
pop
stos
cmp
imul
fnstenv
xor
push
cmc
jmp
sbb
push
cmp
and
mov
retf
xchg
adc
std
movs
mov
fist
pop
popf
xchg
mov
fisub
cmp
sbb
push
and
mov
scas
scas
aam
sar
scas
xchg
cmp
(bad)
and
and
sub
and
(bad)
mov
push
dec
(bad)
out
push
xbegin
push
cmc
xor
pop
lea
sbb
mov
std
hlt
adc
mov
pop
ret
push
cdq
int3
in
clc
movs
lods
push
imul
add
push
inc
add
bound
(bad)
hlt
xchg
xor
cdq
ffree
push
sub
hlt
cdq
add
out
xor
and
out
dec
(bad)
mov
push
test
or
shl
mov
add
aam
sub
stos
pop
cli
shr
(bad)
push
fwait
int3
cmps
jge
add
vrcpss
sbb
mov
mov
(bad)
jae
mov
out
pushf
jne
rcl
sub
add
movs
retf
(bad)
pop
lahf
test
dec
aad
jae
dec
dec
lds
out
dec
push
pop
and
cmp
outs
and
lea
mov
push
mov
pop
push
hlt
std
sbb
cwde
es
in
dec
cli
lds
repz
push
xchg
arpl
pop
ret
cwde
fdiv
cmp
lahf
outs
sub
not
cmc
sbb
hlt
icebp
add
les
xlat
mov
inc
push
pop
xchg
jmp
fsub
or
ffree
cdq
and
add
ss
push
push
test
dec
dec
add
sbb
mov
pop
scas
stos
or
icebp
mov
pop
mov
lahf
out
and
ds
nop
sbb
and
pop
cdq
push
adc
push
push
pusha
pushf
cmp
stos
stos
push
jo
mov
or
adc
add
ret
xchg
stc
and
push
and
fadd
neg
data16
lods
rol
ret
bound
or
inc
mov
mov
movs
and
inc
fldenv
into
fstp
xchg
or
cwde
jnp
out
shl
dec
adc
test
shr
cmp
repnz
jne
jae
jae
loopne
jg
iret
ror
push
add
neg
dec
jmp
sub
cmp
or
out
mov
inc
aas
cmps
xor
cmps
popa
xor
push
clc
aam
xchg
mov
xor
cmp
xchg
cmp
sub
dec
jns
cmp
pop
out
xchg
(bad)
mov
and
mov
std
in
jb
repnz
mov
lock
xchg
retf
jmp
cmp
and
jae
hlt
ins
inc
mov
adc
dec
sub
fdivr
inc
addr16
xchg
enter
xlat
and
and
mov
les
jmp
dec
cmp
sahf
leave
pop
adc
add
xchg
enter
xor
mov
and
cmp
loope
fnstcw
add
stos
fs
aaa
cmp
xlat
pop
sub
adc
sbb
add
dec
cmps
pop
unpckhps
add
push
ins
mov
out
or
mov
pop
lods
mov
enter
mov
push
fadd
xor
sbb
cmp
and
push
stos
lods
jae
fild
mov
into
es
push
pop
mov
in
sub
and
cmc
(bad)
xor
mov
mov
add
jge
leave
pop
jge
push
push
mov
aam
xchg
stc
cli
inc
nop
mov
xor
aas
test
jmp
(bad)
lods
rol
push
fld
jno
pop
leave
mov
dec
pop
std
stos
ret
scas
outs
(bad)
mov
cmps
out
std
fdiv
jnp
and
pop
data16
sbb
imul
mov
inc
frstor
or
sub
js
sbb
lock
jo
sbb
dec
or
sbb
out
adc
cmp
push
js
pop
bound
cwde
out
sub
ret
mov
nop
adc
loope
scas
pop
call
or
mov
push
outs
xchg
rep
dec
sub
pop
inc
push
ins
and
adc
sbb
test
(bad)
and
push
fcomp
mov
movs
inc
ror
imul
and
add
mov
jo
repz
dec
xor
jmp
gs
iret
mov
lods
data16
pusha
adc
hlt
cmp
shl
popf
retf
cmp
idiv
sub
xchg
cmp
jge
sub
push
daa
sbb
mov
in
cld
or
cmps
ror
xor
gs
stc
call
movs
add
test
sbb
dec
xchg
mov
fld
rcl
cdq
fnstsw
sbb
jmp
cmp
push
fucomp
add
add
cdq
das
xchg
frstor
ja
fsub
cmp
loope
mov
loop
mov
ds
sahf
dec
frstor
mov
js
retf
dec
mov
or
mov
shl
push
mov
shl
mov
fdivr
mov
shl
int3
cmp
jge
test
xor
jnp
jne
mov
das
ret
dec
(bad)
sub
scas
adc
(bad)
mov
shr
pop
sbb
fst
sub
pop
(bad)
in
inc
leave
cs
sbb
xchg
xor
sub
inc
dec
add
and
xchg
xor
mov
sub
adc
das
mov
mov
(bad)
retf
cmp
xchg
loope
mov
pop
xchg
mov
jns
cld
push
xchg
in
pop
icebp
retf
mov
adc
movs
cmp
test
test
fdivr
pop
in
mov
ror
nop
rcr
in
fwait
aas
inc
in
loopne
mov
inc
and
and
add
sub
arpl
mov
pop
fnstenv
mov
shl
cld
or
out
cmc
call
pop
sub
stc
imul
stc
xchg
push
mov
sbb
stos
pop
scas
shl
inc
mov
dec
movs
(bad)
imul
dec
mov
(bad)
adc
push
jns
dec
mov
push
lods
mov
(bad)
lea
cmp
and
test
bound
xchg
mov
popf
jo
retf
or
iret
imul
sbb
les
sahf
cmp
push
test
repz
xchg
sub
mov
arpl
in
pushf
hlt
sub
pop
ss
mov
sub
aam
pop
add
shl
ret
mov
inc
popf
mov
mov
pop
cdq
push
mov
stos
pop
push
lods
and
(bad)
mov
and
icebp
int3
push
ds
add
call
and
inc
or
cmp
and
sbb
sbb
ins
mov
arpl
icebp
dec
pop
sub
xlat
sub
inc
xchg
add
dec
outs
mov
(bad)
aad
imul
push
out
jge
mov
leave
mov
fimul
jnp
ret
(bad)
push
push
sar
mov
shl
shl
xor
int3
inc
xor
out
pop
mov
aam
or
fisttp
mov
sbb
out
stc
mov
ficomp
(bad)
enter
jo
mov
imul
outs
call
lock
imul
fstp
cmp
call
cmp
(bad)
jmp
shl
pop
inc
mov
je
and
mov
les
mov
jne
add
inc
xchg
xchg
cwde
xchg
(bad)
scas
outs
xor
push
(bad)
sbb
sbb
jo
int3
mov
loop
call
pop
adc
and
mov
or
inc
jmp
cmp
jmp
(bad)
pop
loop
or
xchg
ficom
clc
pop
mov
push
in
jp
xor
loope
add
xor
in
movs
or
test
jge
sbb
test
xor
jecxz
ins
rol
mov
xor
pop
or
loope
or
pop
lock
ja
and
ret
stos
dec
addr16
and
push
mov
cmp
dec
jmp
push
bound
cwde
xor
or
sahf
xor
add
xchg
addr16
jns
outs
das
data16
in
inc
xor
stos
xchg
sub
fs
fdivp
xor
cmp
aad
cmps
(bad)
push
div
loop
cmp
ds
fidivr
or
push
out
mov
dec
popa
xchg
imul
jnp
inc
xchg
cmp
test
dec
(bad)
inc
cmps
mov
dec
mov
scas
mov
lock
inc
mov
scas
mov
jo
not
pop
cmps
ins
mov
aad
jge
fistp
std
or
sub
fild
cmp
mov
push
std
mov
dec
xor
cs
arpl
out
dec
or
sar
push
mov
into
pop
mov
imul
into
xor
cmc
or
cmp
adc
mov
stc
popa
test
cld
fisttp
hlt
mov
js
rol
retf
pop
add
cmp
xor
mov
sahf
and
or
loope
mov
aaa
dec
js
mov
and
pushf
dec
mov
cli
and
stos
add
loopne
adc
add
into
imul
cmps
daa
aas
push
sub
pop
mov
cmps
jns
jnp
(bad)
shl
pop
lock
and
inc
inc
xchg
(bad)
fnstsw
dec
pop
(bad)
repnz
jbe
imul
jecxz
ins
dec
(bad)
mov
jl
lds
cmps
mov
(bad)
in
lds
(bad)
mov
inc
jl
leave
jmp
sub
test
inc
mov
outs
mov
lea
scas
and
lods
sbb
jmp
or
test
(bad)
pop
pop
sub
jle
pop
sar
das
adc
jecxz
es
mov
mov
in
mov
adc
addr16
and
mov
lds
mov
push
lods
jno
mov
add
fldenv
cmp
shl
mov
push
mov
mov
fs
loop
sbb
dec
add
int
xchg
call
bound
and
mov
inc
es
mov
xchg
fwait
retf
dec
icebp
mov
arpl
movs
push
jl
idiv
bound
fs
pop
imul
dec
sub
das
icebp
int
ss
rcl
mov
and
mov
sub
sar
enter
aas
or
jle
sbb
pushf
xchg
xchg
sbb
mov
mov
neg
pusha
das
mov
sti
inc
xor
ret
inc
jno
mov
pop
mul
mov
add
leave
xchg
push
les
mov
js
mov
scas
call
xchg
lock
add
mov
add
or
(bad)
mov
and
int3
xchg
inc
mov
inc
mov
int
aaa
fs
push
fs
div
push
aaa
sar
fcom
jmp
cli
mov
fisubr
cmp
pushf
fdiv
ins
or
leave
je
cmp
test
ret
adc
xor
pop
cmc
repnz
out
pop
test
aam
dec
or
lods
jl
jns
mov
lods
pop
cmps
push
inc
mov
mov
mul
xor
mov
ds
cli
cwde
sti
and
pop
mov
or
enter
vfrczsd
mov
mov
(bad)
mov
push
retf
(bad)
leave
cvtps2pd
xchg
lds
pop
xor
mov
mov
sub
add
fadd
pop
dec
cmps
test
or
mov
jmp
dec
sbb
push
dec
int
aam
cmp
sub
loopne
mov
mov
sub
(bad)
sub
or
jmp
out
and
ja
retf
mov
gs
mov
lahf
cdq
mov
sar
js
inc
(bad)
xchg
leave
das
jmp
cs
sahf
fwait
lods
mov
mov
loope
cmc
pop
imul
adc
retf
mov
lds
mov
jb
xor
push
mov
pop
pop
mov
dec
icebp
ds
jae
sub
idiv
les
stc
int
mov
sbb
cmc
or
mov
push
push
mov
push
pop
xor
mov
jl
adc
(bad)
xor
pop
stos
lahf
xor
mov
dec
sahf
xchg
retf
lds
add
rcl
lods
test
mov
inc
mov
mov
add
pusha
push
dec
fisttp
cld
jo
stos
out
xor
cli
sbb
dec
dec
inc
jmp
xor
or
sahf
stos
adc
stc
div
rol
pop
repz
test
push
retf
mov
push
push
dec
or
mov
nop
in
test
pop
lds
movs
(bad)
push
in
fmul
pop
sub
sbb
sbb
and
repz
mov
into
push
int3
add
xchg
mov
mov
movs
lahf
push
and
mov
and
retf
push
xchg
inc
fwait
addr16
inc
or
pop
xor
pop
data16
and
imul
cmp
mov
xor
and
fiadd
xchg
fld
pop
and
ret
les
aam
sahf
in
jae
mov
adc
mov
gs
shl
jbe
out
stos
call
xlat
jnp
sbb
or
mov
xchg
rol
cli
mov
retf
icebp
test
or
xchg
push
jb
mov
movs
dec
test
jp
(bad)
adc
mov
das
inc
add
sub
leave
loopne
fsub
mov
pop
inc
nop
out
jb
data16
mov
push
add
push
pop
sbb
inc
mov
cwde
mov
jnp
add
push
cs
jmp
xor
das
test
dec
popf
xchg
mov
sub
or
das
jae
sub
adc
adc
pop
mov
mov
(bad)
in
dec
retf
scas
xor
ficomp
sbb
nop
push
stos
hlt
jns
sahf
sbb
pusha
scas
cmp
cmps
movs
in
je
inc
pushf
and
lds
add
(bad)
in
add
mov
lods
sahf
pop
push
xor
lds
in
je
cmp
push
inc
cmp
mov
push
(bad)
sbb
test
mov
mov
sbb
jmp
adc
jne
inc
shl
pop
test
aam
add
push
int3
cmps
(bad)
xchg
mov
call
inc
dec
aad
dec
jg
std
push
sbb
jmp
and
ds
mov
jno
hlt
jnp
scas
mov
jp
mov
push
sbb
push
or
push
ds
test
mov
popa
push
add
adc
es
aas
arpl
loop
mov
sub
cmc
jae
mov
and
arpl
sbb
imul
add
cmp
sti
adc
pop
push
and
div
cmc
jg
inc
out
jecxz
pop
cdq
lods
jne
cmps
cmc
inc
push
in
(bad)
stos
xor
and
lock
inc
fistp
sub
sbb
out
jge
(bad)
fidiv
mov
xchg
fstp
xchg
cld
mov
sbb
aad
inc
adc
scas
int
rol
push
loope
or
out
adc
loope
stos
mov
inc
pop
xchg
inc
mov
cmp
aaa
dec
shl
(bad)
push
(bad)
in
jmp
and
mov
xchg
into
movs
push
in
(bad)
arpl
aas
mov
inc
icebp
imul
pushf
dec
ins
mov
sub
xchg
pop
xchg
lods
sub
(bad)
int3
outs
loop
rcl
mov
pop
stos
sti
enter
sub
stos
add
movs
dec
mov
and
icebp
mov
dec
mov
inc
loopne
pop
outs
in
ss
pop
and
inc
hlt
repnz
clc
fcomp
out
dec
imul
sti
inc
sbb
cdq
or
jae
pop
mov
ds
call
ins
call
add
dec
pop
cwde
cmc
sub
das
fsub
ds
pop
popa
pushf
aas
out
pop
outs
and
push
mov
mov
and
sti
mov
xchg
ss
pop
int3
repnz
pop
or
scas
inc
cmc
scas
or
and
lahf
inc
cli
movs
dec
test
jg
int
mov
addr16
fimul
pop
add
mov
cld
out
addr16
outs
jo
dec
jmp
fwait
lahf
inc
(bad)
push
fimul
pop
sbb
out
mov
inc
shl
xor
retf
int
adc
jecxz
add
sbb
test
inc
iret
jmp
jae
inc
mov
fisubr
jp
mov
and
ins
mov
cmp
add
(bad)
cmp
popf
sub
shl
mov
int3
push
scas
aaa
les
repnz
sub
mov
jp
jne
jl
push
loopne
test
les
add
mov
data16
xchg
jmp
lahf
imul
ret
(bad)
lods
add
lea
in
or
adc
popa
push
retf
scas
fstp
push
mov
pop
mov
or
stos
mov
pop
repz
repz
inc
bound
mov
jbe
arpl
das
push
addr16
mov
std
xchg
mov
cmps
cwde
cmp
mov
xlat
test
and
cmps
xor
mov
mov
jo
push
fcmovnb
mov
lods
call
or
sub
mov
out
ds
jmp
xchg
xchg
retf
dec
jno
idiv
sub
mov
push
std
das
push
aad
in
xchg
jno
jecxz
fcom
out
jp
retf
mov
xlat
repnz
fdiv
xchg
dec
loopne
sbb
xchg
popa
les
sub
sar
jne
fs
fldlg2
xor
(bad)
jns
addr16
mov
ins
or
les
mov
mov
dec
pop
imul
jle
fdiv
in
mov
nop
or
gs
mov
dec
call
(bad)
call
add
in
in
inc
scas
adc
and
arpl
sbb
fwait
call
ins
sbb
loop
and
mov
mov
cmp
mov
mov
sub
sbb
std
cwde
aad
(bad)
cmc
xor
pop
cmp
jmp
cmps
and
sub
mov
popf
dec
fdiv
xchg
sbb
and
stos
dec
fimul
cwde
stc
(bad)
lock
adc
dec
jge
cwde
cwde
not
xor
jb
imul
(bad)
mov
into
cs
xor
in
inc
pop
and
cmp
test
xchg
push
ins
in
cld
adc
ss
mov
int3
sub
pop
repnz
and
cdq
fs
xor
fxch
sbb
(bad)
mov
mov
jecxz
scas
sbb
adc
xchg
mov
(bad)
or
mov
js
inc
mov
mov
jb
jecxz
(bad)
ja
add
sbb
sbb
lods
pusha
fisubr
lods
aad
ja
cmps
aas
mov
inc
call
repz
or
jnp
popa
jnp
stos
mov
xor
mov
ja
rol
popa
int3
mul
aad
mov
shl
movs
es
sub
in
sbb
push
fdiv
fnstcw
and
fdiv
inc
repz
inc
push
and
retf
xchg
aad
sub
xor
aas
or
mov
jle
in
cmp
cmp
jecxz
dec
add
inc
dec
les
push
popa
dec
retf
and
jbe
cmp
movs
pushf
mov
out
jp
pop
lea
loope
int
daa
cmp
pop
mov
sub
test
and
adc
or
pop
add
jmp
mov
js
jp
mov
push
ret
hlt
pop
mov
fcomp
fbstp
inc
cmp
add
sub
push
cwde
repz
mov
xor
add
loopne
mov
jle
mov
fist
and
mov
not
sub
jmp
int3
sbb
xor
das
fadd
sbb
rcr
and
cwde
scas
clc
addr16
cmp
push
push
pushf
mov
xor
arpl
jmp
sbb
out
repz
fsub
fistp
jp
js
xchg
ror
sar
cmp
js
add
push
cmp
outs
jnp
mov
scas
mov
movs
or
cmp
cwde
and
add
push
jno
loopne
aad
adc
les
out
mov
(bad)
mov
push
pop
sbb
or
pop
ds
dec
cmps
dec
pushf
push
jecxz
in
xor
out
fmul
cmps
mov
ja
adc
xchg
stc
ins
pop
movsx
mov
dec
push
dec
arpl
mov
xchg
jb
enter
(bad)
rcl
dec
(bad)
out
fisubr
push
js
cmp
xchg
mov
call
ins
ficomp
inc
or
ficomp
dec
push
out
gs
sbb
ds
dec
in
dec
call
jmp
call
mov
and
repz
scas
fxch
mov
dec
or
xchg
cs
ja
add
inc
fiadd
push
sbb
xor
cmc
aam
and
mov
jge
inc
cwde
out
(bad)
jge
imul
jo
stos
mov
popa
ret
push
imul
fild
enter
add
shr
fmul
mov
repnz
adc
lods
cmp
mov
fbld
xor
fstp
adc
pop
fcmove
pop
cmp
bound
push
popa
xor
cmps
pop
(bad)
data16
sub
push
cmp
scas
jbe
repz
ins
arpl
xchg
jbe
lods
mov
mov
(bad)
add
jecxz
cld
addr16
in
call
adc
pop
adc
pushf
mov
lock
xchg
jg
ret
stos
out
pop
or
and
mov
out
test
xor
ss
xchg
cmp
or
into
jns
cmp
add
repnz
inc
push
push
cmp
inc
ds
mov
fld
shl
and
mov
pop
push
mov
sbb
add
sub
inc
push
cmp
sti
xor
rcr
inc
push
test
mov
sub
lods
pop
into
loop
mov
hlt
fdiv
stos
adc
dec
push
and
imul
mov
mov
pop
pop
jno
mov
xor
test
loope
dec
xchg
xlat
pop
inc
sbb
cmovp
push
add
cwde
pop
cmp
shr
ficom
bound
mov
sahf
sbb
or
and
stos
in
sbb
shr
or
dec
es
cmps
jb
lock
and
icebp
sti
pop
xor
adc
(bad)
mov
mov
movs
jl
clc
lods
or
fnsave
jne
imul
add
jle
aam
scas
sub
in
ret
outs
(bad)
gs
inc
stc
fwait
push
mov
ret
pop
xchg
pop
xlat
mov
(bad)
adc
imul
ds
jmp
mov
pop
out
stos
(bad)
punpckhdq
adc
or
pop
(bad)
xchg
xor
mov
aad
mov
jbe
add
mov
sahf
or
test
pop
and
(bad)
icebp
into
push
or
inc
mov
lea
out
pop
and
inc
sub
out
mov
hlt
clc
out
aas
add
push
nop
push
mov
enter
call
adc
mov
jl
xlat
sbb
sub
js
push
pop
call
(bad)
enter
in
adc
push
add
loopne
not
mov
in
mov
movs
sub
stc
and
push
xchg
cs
push
push
sub
ins
mov
push
or
mov
add
scas
movs
(bad)
mov
adc
out
add
lahf
mov
outs
dec
push
xor
call
xor
sbb
mov
test
outs
xor
jb
jo
lahf
adc
fsubr
xchg
clc
call
dec
inc
cmps
hlt
pop
pop
fcmove
push
mov
xor
jno
and
repnz
push
and
push
arpl
(bad)
mov
out
popf
and
scas
push
arpl
stos
sbb
stos
iret
or
mov
aaa
xchg
in
push
sbb
xchg
sbb
cmp
sbb
rcr
bound
sub
(bad)
or
push
inc
or
jb
inc
leave
push
and
repnz
mov
aas
or
fs
iret
out
jmp
idiv
(bad)
sti
pop
add
jo
cwde
ficom
mov
jle
aas
xor
dec
add
stc
cmps
mov
sbb
xchg
retf
xchg
cpuid
mov
ins
sub
add
bound
add
test
div
or
rcl
leave
mov
pushf
xor
cmp
push
scas
mov
cmps
inc
sti
enter
mov
push
shl
test
call
inc
outs
int3
ret
mov
xor
cmps
mov
ins
dec
push
pop
out
dec
push
cmp
jnp
sub
mov
dec
std
stos
shl
sbb
test
inc
mov
cmp
cs
out
leave
add
repz
push
mov
adc
pop
inc
sbb
stc
lahf
cmp
adc
test
in
loopne
push
(bad)
cmp
out
lods
out
test
or
pop
loop
cmps
jnp
aas
loopne
xchg
ds
lods
mov
jl
(bad)
push
sub
fstp
xchg
xchg
pop
cdq
into
repnz
pop
es
and
or
mov
mov
bound
outs
mov
add
fisub
pop
fadd
push
shl
jns
inc
adc
cmp
pop
and
push
in
cli
xchg
cmp
(bad)
cdq
pop
pop
movs
mov
xchg
push
imul
inc
xchg
lods
mov
mov
jg
cmp
es
and
cmp
cmc
pop
cld
mov
add
retf
or
push
dec
shl
retf
(bad)
jb
inc
xchg
iret
xchg
jns
es
sub
in
rcr
shl
(bad)
(bad)
push
int3
sti
icebp
or
push
lods
arpl
fisubr
imul
outs
cvtps2pd
mov
xchg
pusha
loopne
ret
adc
(bad)
mov
aas
dec
cwde
aad
sbb
hlt
ror
sub
inc
int
xchg
in
push
out
lahf
jo
(bad)
shl
xlat
add
sub
aas
int3
inc
and
jno
dec
jp
test
pop
xor
lock
rcl
push
or
stos
jbe
leave
movs
adc
or
sub
xchg
push
mov
popf
nop
xchg
fdiv
pop
and
sbb
stos
cmp
sub
mov
adc
adc
mov
mov
pop
es
aad
or
add
adc
outs
stc
adc
int3
lods
(bad)
jne
fisttp
or
movs
mov
out
dec
pop
or
pop
add
inc
into
fsubr
lods
mov
xor
ret
sub
imul
xchg
(bad)
mov
inc
adc
mov
sub
popf
or
cmp
add
in
pop
jbe
int3
inc
push
cmps
jae
jbe
sbb
or
cmovo
cmp
bound
sbb
jp
jnp
scas
sbb
fsub
cmp
aam
inc
call
mov
sbb
jno
add
ficom
pop
xchg
mov
iret
iret
gs
or
or
enter
xchg
popf
test
inc
sahf
sbb
lds
push
dec
ins
mov
dec
mov
adc
mov
movs
push
cmps
inc
sar
adc
ror
icebp
dec
mov
sbb
mov
fiadd
inc
aaa
and
dec
lock
out
adc
ret
in
mov
cld
shl
jb
shl
add
pop
mov
int
push
out
int3
pop
push
pushf
cs
outs
inc
or
in
les
mov
push
(bad)
jne
leave
into
lods
push
push
pop
and
xlat
sbb
sub
out
mov
jmp
mov
inc
cmp
jnp
add
adc
mov
int
sbb
std
shl
enter
imul
or
or
pop
gs
jmp
data16
test
test
dec
ror
sbb
and
(bad)
mov
iret
je
add
pop
dec
lea
cdq
addr16
dec
(bad)
cmp
mov
push
fcom
leave
clc
inc
jne
movs
ret
jns
popf
pop
aas
repz
mov
sar
cli
pop
repz
jno
inc
lock
loopne
lock
movs
sub
ins
dec
std
dec
pop
out
and
inc
xor
mov
leave
out
adc
mov
and
ret
(bad)
leave
out
lahf
movs
inc
ret
jmp
dec
add
mov
or
cmps
jle
xchg
mov
mov
fmul
mov
movs
inc
mov
repz
movs
adc
dec
inc
inc
aas
loopne
out
(bad)
mov
(bad)
push
cmp
ss
sti
jae
xor
int
and
retf
aas
inc
mov
mov
daa
pop
push
ror
jbe
loopne
sub
enter
push
or
cmps
cmp
aam
fld1
int3
cmp
sub
add
mov
lds
xchg
jecxz
rol
bndstx
pop
mov
sbb
jo
ds
cmps
(bad)
pushf
or
pop
mov
repz
test
push
pop
push
push
idiv
xchg
fs
xor
pop
fiadd
mov
jecxz
fst
int3
push
neg
sbb
mov
add
sbb
adc
pop
test
retf
cmp
and
add
jmp
or
mov
daa
sbb
push
lock
xor
(bad)
test
fst
imul
mov
pop
retf
mov
sahf
enter
clc
fstp
cmp
mov
pusha
jge
or
dec
test
sub
push
and
cmp
sbb
lock
or
adc
xchg
fs
je
sub
mov
mov
or
test
dec
inc
cmp
fcomp
ss
adc
fsub
xchg
imul
jbe
dec
popf
fwait
push
cwde
test
loopne
sti
fisttp
ret
int
lods
add
movs
push
mov
or
add
jecxz
ss
or
pop
fisttp
mov
inc
out
in
mov
push
sahf
push
gs
inc
ins
movs
adc
pop
xchg
scas
and
mov
mov
xchg
mov
pop
and
into
or
mov
outs
xchg
sbb
mov
sub
push
xor
mov
je
test
and
mov
or
imul
enter
cmp
inc
(bad)
sbb
in
adc
std
mov
fld
push
inc
addr16
mov
rol
icebp
jne
fwait
lods
mov
fisttp
in
icebp
imul
gs
pop
mov
les
cwde
fistp
pop
sbb
les
nop
jb
ds
sbb
lds
mov
(bad)
test
sub
pop
outs
imul
mov
mov
add
test
and
and
frstor
inc
mov
imul
lock
mov
movs
outs
mov
hlt
push
dec
push
leave
icebp
sub
mov
mov
or
test
inc
or
mov
adc
push
aaa
xchg
inc
bound
into
push
dec
(bad)
shr
xchg
sub
sbb
pop
div
jbe
jae
je
push
(bad)
xlat
outs
push
dec
gs
xchg
or
sbb
mov
les
ds
adc
(bad)
fdiv
or
sub
mov
fistp
mov
cwde
jg
jp
rol
(bad)
call
cmp
mov
cmps
xchg
outs
inc
sub
and
pop
mov
(bad)
icebp
ins
inc
sbb
mov
push
mov
sahf
imul
jae
xchg
xor
xchg
mov
sbb
mov
outs
call
jnp
lock
(bad)
std
and
pop
sbb
mov
ins
pop
add
push
push
mov
scas
cmp
imul
retf
xor
dec
ret
mov
inc
mov
mov
xchg
into
pushf
push
loopne
cld
repz
or
xchg
inc
xor
push
test
jo
jnp
sbb
hlt
cmp
push
mov
dec
and
push
je
iret
fiadd
jmp
stos
and
lods
mov
adc
pusha
aas
icebp
ja
call
jnp
or
jmp
add
mov
pop
cmps
loop
mov
jno
ds
sbb
movs
xchg
loopne
enter
sbb
cs
outs
in
scas
push
mov
pop
xchg
outs
pop
mov
ret
adc
pop
imul
and
(bad)
adc
inc
sbb
pop
jo
pop
jo
push
loop
popf
inc
xchg
and
nop
dec
xor
into
push
mov
xchg
aam
sub
dec
scas
leave
jge
xor
pop
adc
sbb
add
std
push
sbb
mov
(bad)
ins
mov
loope
xor
mov
cs
outs
mov
cmc
stc
cmp
or
jbe
mov
retf
faddp
and
fimul
mov
adc
pop
pop
sub
or
mov
pop
ret
jp
icebp
jb
outs
sbb
adc
jl
mov
std
fs
jl
pop
in
jne
pop
cmp
add
jmp
cdq
fild
add
xchg
jmp
jmp
jl
fadd
aaa
retf
inc
popa
loop
lods
xchg
ret
lea
ret
into
shr
pusha
cmp
shl
ror
add
xor
retf
inc
fwait
mov
or
arpl
dec
or
lahf
mov
pushf
vmovdqa
test
pop
sbb
aam
sar
cld
mov
ds
dec
mov
je
into
xor
sar
pop
or
pop
jmp
out
movs
mov
mov
les
add
sbb
push
data16
and
and
rcl
addr16
aas
jns
dec
xchg
mov
shl
dec
lds
and
aas
jb
xor
cmp
ds
push
shr
pop
(bad)
dec
ficom
jbe
ds
adc
stos
cmp
xor
icebp
cli
sub
xchg
xlat
dec
inc
lds
or
inc
pop
test
inc
cdq
lods
mov
push
fcmovu
mov
pop
mov
fstp
mov
jbe
sub
push
jge
sub
mul
mov
aas
sub
test
div
sar
add
clc
adc
cdq
sub
mov
call
call
jmp
push
push
mov
aaa
inc
enter
inc
rcr
cmps
enter
jo
pop
int
jp
pop
xchg
sbb
(bad)
test
mov
imul
arpl
jo
aaa
fs
sbb
out
inc
pusha
add
cmp
jmp
or
xor
cmps
mov
scas
jp
cmc
or
lods
push
xor
popf
push
push
ja
lds
push
test
(bad)
push
xchg
lahf
or
fld
or
bound
pop
mov
rcr
iret
ror
(bad)
xchg
mov
je
repnz
and
test
jo
mov
dec
or
(bad)
or
ins
shr
sbb
xor
and
cmp
mov
(bad)
mov
scas
sub
xor
push
jle
cmp
bound
rol
pop
add
fmul
and
(bad)
ins
push
mov
xor
fs
dec
mov
push
dec
cmp
mov
xchg
or
aam
xchg
call
mov
fcmovnu
adc
icebp
xor
push
or
or
jl
xchg
popa
lods
repz
sbb
ja
scas
pusha
mov
push
imul
and
pop
jns
or
pop
sbb
pop
popa
mov
xchg
sub
cmp
jb
jo
data16
jnp
push
mov
frndint
icebp
adc
cmp
cmps
jge
xor
pushf
add
stc
and
inc
retf
add
xchg
inc
inc
jecxz
cdq
sbb
fsub
xchg
mov
pop
push
xor
inc
pop
and
pop
mov
adc
xchg
xchg
push
rcl
push
test
xchg
fdiv
or
xor
out
mov
enter
test
add
pop
adc
mov
nop
dec
add
sub
test
div
mov
pop
mov
sbb
jne
xchg
jne
xchg
jae
cli
sub
sbb
clc
inc
fdivr
repnz
pop
adc
mov
loop
aam
mov
sub
fmul
push
jecxz
scas
ins
and
inc
pusha
inc
mov
imul
pop
pop
sbb
movs
sbb
dec
cs
call
fisttp
cmp
sbb
pop
ins
xchg
pop
or
repnz
mov
call
xchg
retf
popf
test
scas
and
daa
scas
and
adc
(bad)
in
dec
xor
mov
leave
cwde
xchg
push
adc
sub
sbb
mov
jns
in
dec
test
pop
mov
mov
fdivr
es
pop
dec
(bad)
ss
cdq
inc
mov
inc
cmp
and
mov
shr
rcr
(bad)
loopne
(bad)
mov
lods
imul
(bad)
jge
sub
ret
call
push
repz
mov
mov
lods
inc
jbe
adc
loop
push
xchg
into
dec
mov
jecxz
xor
add
enter
stos
call
xchg
repnz
fild
sbb
loope
gs
rcl
enter
test
mov
pand
outs
jb
cmp
inc
pop
das
mov
xchg
call
cmp
add
jnp
cwde
push
jb
xor
fimul
jbe
adc
push
stc
pop
enter
nop
dec
retf
push
pop
(bad)
mov
dec
or
fistp
inc
shr
retf
inc
sub
scas
sbb
pop
pop
fcompp
cmp
add
pop
icebp
sub
fcmovnu
sub
fdiv
push
sub
ss
int
jmp
push
adc
push
add
call
popf
fidiv
in
es
retf
and
aas
sub
and
dec
std
mov
and
dec
push
jns
pop
or
dec
cmps
or
xchg
xor
xchg
ins
push
inc
xchg
mov
out
inc
or
or
test
clc
icebp
in
mov
dec
inc
dec
cmc
xchg
into
or
ins
mov
xchg
ss
or
dec
mov
out
mov
xlat
mov
cmc
mov
test
scas
aas
sbb
lahf
xor
jmp
lahf
cs
sub
inc
add
outs
mov
mov
inc
jne
xchg
mov
mov
aam
test
hlt
push
mov
pop
aas
out
hlt
dec
mov
pusha
xchg
cmp
pop
add
pop
(bad)
jecxz
mov
pop
mov
loopne
adc
jle
sub
std
xchg
test
xor
and
daa
push
sbb
sbb
sbb
adc
pushf
xlat
mov
mov
xor
push
jo
jmp
mov
(bad)
mov
push
in
fisttp
retf
mov
cdq
mov
cmp
pop
sbb
mov
mov
sub
mov
sbb
jne
cld
mov
add
xchg
out
lock
jne
ins
pop
mov
jae
mov
(bad)
xchg
les
jnp
mov
dec
icebp
retf
and
add
jmp
ficom
stos
xchg
cmps
mov
sbb
cld
mov
test
fwait
mov
sbb
mov
lea
mov
xchg
outs
push
adc
movs
loopne
test
enter
and
gs
jge
xchg
out
div
les
fsubr
adc
xor
push
sar
mov
(bad)
adc
in
push
inc
jmp
dec
(bad)
cmp
popa
out
and
pop
loope
js
sub
outs
fs
push
push
jp
sub
xor
mov
sahf
lea
adc
xor
fiadd
cmp
pop
mov
mov
xchg
out
mov
push
out
lock
sti
movs
hlt
pop
out
inc
in
mov
aas
data16
lods
cwde
ja
sub
cmps
sbb
push
sbb
add
sub
mov
sbb
pop
add
inc
pop
std
or
pop
dec
sub
(bad)
popf
mov
sub
gs
jmp
mov
push
bound
or
cmps
imul
call
in
mov
mov
pop
mov
mov
push
outs
ins
jnp
xchg
clc
into
xor
call
push
sub
mov
fadd
out
xchg
jge
push
iret
fild
jmp
jnp
data16
std
dec
mov
and
sub
inc
mov
xchg
pop
shl
jge
cmp
cmp
and
adc
or
mov
xlat
cmp
repz
mov
jno
pop
add
sbb
pop
sub
adc
xor
aam
and
push
dec
sub
pop
aam
mov
loopne
and
stos
sar
ins
mov
test
mov
test
add
stos
cmps
mov
inc
bound
jo
cmp
pop
les
movs
add
sar
pop
test
mov
inc
neg
dec
dec
mov
outs
xor
sub
push
xchg
frstor
xor
push
loope
mov
and
pop
push
adc
cmp
addr16
mov
and
out
lahf
mov
lds
and
imul
cmps
enter
jno
push
adc
cld
daa
arpl
ds
mov
and
mov
lods
(bad)
push
shr
bswap
or
arpl
mov
sub
mov
fidiv
out
fist
pop
push
push
nop
icebp
aad
scas
popf
push
fistp
test
push
into
or
jecxz
movs
les
xchg
dec
mov
call
xchg
pusha
adc
clc
out
ins
sub
cdq
mov
(bad)
sahf
rol
adc
mov
xor
inc
test
call
lock
and
js
arpl
mov
jmp
jg
sbb
aam
call
cmp
sub
cvtps2pd
push
pop
dec
mov
mov
xchg
pop
rol
jmp
xchg
dec
push
mov
sub
push
jno
retf
push
jecxz
mov
outs
and
or
sahf
ret
aas
pop
test
leave
dec
ds
dec
add
sbb
mov
enter
lahf
(bad)
pop
pop
mov
or
mov
repnz
test
cmp
les
mov
mov
pop
xchg
xor
ror
rcr
add
xor
sbb
lahf
scas
in
cmp
mov
mov
mov
push
(bad)
sahf
imul
repnz
nop
jmp
inc
sar
pusha
stos
push
dec
sbb
inc
in
sub
in
dec
adc
push
xchg
int
fild
sub
adc
pop
ss
mov
push
jb
fs
ds
cmp
push
mov
das
icebp
sbb
push
fsubr
pavgw
(bad)
jne
arpl
push
push
or
dec
scas
sbb
retf
sti
dec
add
iret
das
xchg
movs
fist
shr
sbb
jne
test
daa
adc
pop
mov
inc
out
fsub
sub
aad
sti
dec
(bad)
ins
js
rcl
lahf
mov
(bad)
int
xchg
stos
sbb
dec
fs
ins
scas
push
sub
rol
fsub
loop
leave
dec
inc
gs
pop
addr16
leave
call
inc
add
inc
inc
mov
ficom
or
cld
adc
nop
dec
xor
adc
add
(bad)
(bad)
jb
ret
jecxz
adc
or
test
xor
fidivr
add
jne
cdq
push
out
mov
iret
aam
cld
movs
push
mov
xchg
in
outs
repz
or
imul
pop
movs
fcmovb
lock
ja
loop
push
cmps
xor
sub
ss
and
jbe
xor
dec
ss
out
pop
adc
in
and
and
xor
add
es
enter
dec
pop
(bad)
sbb
xchg
neg
push
adc
adc
jge
adc
dec
mov
ret
out
stos
push
add
or
loopne
sahf
add
stc
mov
hlt
inc
xchg
int3
out
shl
ins
sbb
mov
xchg
mov
pop
aad
or
repnz
cs
push
and
(bad)
mov
call
sbb
fs
pop
lea
mov
rcr
xor
es
scas
dec
xchg
cld
scas
or
sar
dec
fldcw
xchg
call
imul
(bad)
xor
or
test
mov
jno
ins
out
nop
mov
pusha
mov
fistp
and
dec
jbe
and
jge
fstp
mov
or
and
pop
test
into
fsubp
cmp
hlt
fisttp
and
(bad)
ror
add
aam
or
mov
out
dec
push
or
adc
adc
cmp
int3
mov
cwde
mov
imul
into
out
sbb
cmps
js
rcl
inc
sar
in
or
mov
jecxz
test
loopne
stos
int3
cld
cmp
jecxz
pop
imul
xor
js
mov
mov
add
(bad)
out
xor
pusha
imul
inc
or
or
rcl
lock
xchg
into
loope
adc
ins
inc
mov
pushf
in
and
lods
ror
or
(bad)
outs
mov
rcl
add
mov
das
dec
(bad)
shr
inc
aad
dec
ss
xchg
mov
push
cmp
mov
test
outs
call
retf
loopne
sahf
stos
push
dec
retf
lahf
or
push
mov
sbb
mov
icebp
dec
or
ret
mov
sub
mov
or
shl
sub
pusha
das
jmp
fistp
push
push
adc
test
pop
xchg
adc
popa
xor
xchg
bound
shl
pop
lock
sbb
xor
test
lea
dec
and
fmul
or
inc
jns
mov
cmp
shl
sti
pop
and
arpl
sbb
sbb
sub
jge
jecxz
pop
out
xor
mov
iret
icebp
fidivr
jae
adc
push
mov
inc
jne
mov
shr
ret
mov
shl
sbb
loop
dec
test
nop
lahf
xchg
sbb
jg
xchg
adc
dec
jle
les
pop
mov
push
xor
out
jae
adc
lds
popa
jmp
fldcw
int
mov
jmp
inc
shr
pop
pop
or
lock
ja
xlat
push
sub
mov
mov
jnp
movs
mov
(bad)
jg
rep
movs
ret
jecxz
mov
rol
mov
lock
std
ror
loopne
lods
aaa
xchg
in
dec
mov
mov
fstp
inc
cmp
mov
jbe
mov
bound
in
cdq
push
cmp
(bad)
leave
mov
in
dec
(bad)
test
inc
(bad)
lahf
pop
pop
and
mov
push
jg
mov
push
popa
ret
(bad)
rcl
mov
adc
mov
mov
adc
ins
cmp
rcl
pop
out
imul
xlat
and
in
or
ror
jp
push
xchg
or
(bad)
mov
sub
fcmovnbe
repnz
adc
fld
push
or
xchg
pop
adc
pushf
jmp
call
jecxz
fimul
(bad)
jno
imul
nop
push
adc
hlt
out
push
xchg
jb
scas
xor
push
xor
jge
fucom
add
repz
xlat
popf
rol
adc
xlat
(bad)
xchg
clc
cmp
out
ja
mov
cmp
fcomp
jmp
xchg
das
std
cmp
fst
jl
es
test
jb
jae
enter
push
repnz
movs
cmp
mov
jb
mov
and
cld
push
lahf
inc
dec
sub
jmp
mov
fwait
sub
imul
sbb
fstp
js
repnz
fcom
cmps
and
mov
xchg
push
test
call
pop
mov
jmp
inc
aaa
xchg
hlt
aas
pop
dec
in
push
ds
pop
inc
xchg
pop
fist
mov
mov
scas
enter
jo
jns
retf
mov
lahf
lds
arpl
jo
adc
dec
in
(bad)
aaa
or
dec
xor
jns
out
mov
mov
mov
(bad)
(bad)
(bad)
in
xor
sar
(bad)
and
add
or
neg
test
jge
pushf
and
xchg
inc
push
jmp
pushf
mov
xchg
das
enter
pushf
or
fistp
cmp
call
retf
nop
repz
scas
xor
inc
inc
imul
out
ror
xchg
jns
adc
lods
movs
push
sbb
jae
popf
xor
mov
dec
sbb
ins
stos
test
std
sbb
stos
imul
add
xor
push
adc
(bad)
test
jne
lea
adc
inc
sbb
inc
lock
adc
cmp
retf
(bad)
sbb
xor
shl
push
fdivr
rcr
addr16
jmp
xlat
sbb
jmp
shl
cs
pop
cmps
loopne
loop
iret
jp
sub
mov
dec
mov
test
repz
or
xor
and
pop
sbb
pop
(bad)
fdiv
sub
cs
inc
jns
in
jle
push
inc
ja
mov
pop
jns
stos
xor
xor
out
repnz
xor
pop
shl
jg
dec
mul
into
leave
or
retf
ret
pop
inc
push
stos
xor
or
push
(bad)
pop
jnp
call
jge
in
sub
sub
add
pop
jae
pop
in
ficomp
data16
or
mul
aas
sub
rcl
jne
test
call
shl
mov
dec
mov
ja
fild
push
cs
mov
pop
jmp
sub
dec
ss
add
and
sub
and
add
mov
mov
movs
inc
sbb
out
int3
(bad)
xchg
xchg
call
fsub
cmc
lahf
or
sbb
xor
pop
pop
nop
adc
cs
in
add
pop
pop
mov
jge
jge
movs
jge
test
(bad)
arpl
aaa
imul
mov
ja
and
ins
pushf
stc
pop
ja
out
mov
xchg
addr16
mov
sub
jne
inc
ds
xchg
xor
in
ja
mov
cmp
dec
clc
or
jmp
mov
into
arpl
rcl
aas
mov
in
test
fld
inc
mov
sar
pop
mov
dec
jb
inc
push
sub
popa
jo
dec
mov
adc
nop
cs
pop
das
addr16
dec
(bad)
fidivr
out
inc
cli
mov
cmps
lea
jp
stos
call
add
xor
and
outs
pop
or
and
jle
push
mov
dec
dec
hlt
call
je
bound
mov
sub
add
mov
sub
dec
or
xchg
sbb
add
dec
sub
retf
dec
mov
fs
fst
aas
inc
mov
push
mov
dec
dec
mov
dec
in
mov
inc
mov
scas
mov
bound
imul
rcl
inc
int3
sub
and
inc
rol
inc
movs
lds
or
jg
add
push
adc
in
and
popf
pushf
loope
xor
gs
sub
das
and
inc
hlt
mov
out
iret
nop
jbe
mov
movs
(bad)
jmp
leave
cmc
mov
stc
xor
or
in
jmp
inc
adc
add
cmp
cmp
pop
push
jmp
push
push
cmps
jbe
stc
les
mov
in
xor
daa
es
sub
sbb
push
dec
sub
xor
into
int3
mov
add
es
(bad)
std
or
pop
outs
and
ins
xchg
pop
or
inc
js
xor
mov
leave
jne
cmp
jb
or
fistp
xacquire
jmp
sahf
xor
in
(bad)
push
cdq
jno
test
dec
jno
ror
sub
push
pop
jmp
cmp
icebp
push
adc
add
stos
mov
fcom
and
aad
into
fisubr
imul
aam
arpl
sbb
leave
ret
(bad)
xchg
jno
mov
and
sbb
test
scas
enter
mov
in
addr16
sub
pop
adc
cmp
fsubr
add
inc
test
loope
xchg
jo
ins
mov
or
(bad)
or
jle
lahf
cli
int
jo
jae
push
hlt
imul
or
mov
xor
push
pop
sub
fsubr
fcomp
push
ins
das
data16
aam
retf
test
dec
adc
in
sub
loopne
clc
inc
psubsb
pusha
aaa
xor
and
cs
stc
mov
sub
cdq
add
xchg
cmp
add
scas
sub
push
stc
jnp
ins
imul
pop
mov
retf
dec
repnz
pop
and
stos
rol
imul
nop
ficom
pop
mov
cwde
ficom
fild
mov
mov
lods
jmp
pushf
push
adc
add
pop
or
mov
pop
or
cmp
sbb
push
mov
out
add
push
xchg
in
out
daa
xor
inc
neg
cdq
lock
mov
adc
add
and
rcr
mov
je
jmp
popf
jnp
pop
sub
addr16
sub
pop
inc
or
cmp
sub
sti
mov
bound
inc
inc
push
fstp
repz
sub
mov
pop
cmp
mov
fcmove
push
aad
sub
ret
idiv
xchg
fisubr
or
fstp
push
daa
xor
mov
addr16
pusha
cmc
idiv
jne
cdq
add
imul
es
pop
cld
repz
rol
in
xchg
fldenv
scas
cmp
mov
mov
stc
xchg
push
cwde
push
lods
fistp
push
add
xchg
ror
dec
ret
jbe
fmul
(bad)
dec
lahf
pop
lods
cld
lahf
js
jo
out
cmps
imul
mov
outs
pop
dec
mov
pop
repnz
data16
loope
imul
mov
idiv
mov
inc
test
int3
jae
(bad)
adc
xchg
pusha
inc
sahf
das
or
push
imul
sbb
aas
mov
sub
xchg
and
dec
push
dec
and
push
std
or
mov
jecxz
push
push
cmp
movs
push
push
cmp
in
mov
xor
inc
(bad)
push
cmp
jg
fstp
cmp
sbb
xor
jge
mov
adc
jb
outs
lock
popa
(bad)
les
jb
ror
jmp
stos
loopne
cmps
and
aas
out
add
arpl
aam
popa
push
inc
stc
pop
lock
movs
push
fbstp
xor
mov
xchg
and
std
test
add
mov
clc
pushf
sub
aas
pop
sub
xchg
mov
pusha
sub
cmp
test
fwait
inc
scas
pop
inc
aas
dec
out
test
aaa
ret
sub
in
out
loop
fs
xor
cmp
xor
scas
js
je
mov
shr
and
sub
or
pop
push
jbe
pop
mov
xor
dec
stc
mov
inc
push
mov
and
scas
daa
adc
jmp
cli
mov
ror
(bad)
mov
xlat
into
aad
cwde
rcl
outs
and
and
push
jno
repnz
xor
ja
xor
cmp
xchg
hlt
inc
dec
pop
pop
mov
sub
gs
out
js
cs
sub
retf
or
mov
fdivr
ret
rol
lea
jecxz
add
adc
or
aad
sbb
cld
jg
sbb
out
jecxz
or
dec
jge
arpl
mov
fistp
mov
jp
jne
(bad)
int
cmp
sbb
stos
inc
mov
lds
push
lahf
dec
mov
popa
pop
aaa
pop
mov
mov
movs
sbb
adc
adc
in
jns
rcl
stos
dec
pop
enter
push
icebp
addr16
jmp
lahf
xchg
xor
hlt
in
fistp
xlat
fistp
xor
push
cs
add
(bad)
lods
xchg
aas
daa
sub
inc
data16
dec
mov
mov
inc
cmp
stc
dec
cmc
dec
add
cmp
das
dec
in
shl
xor
sti
aad
fnsave
inc
sub
pop
dec
push
xor
pop
cmp
sbb
add
add
arpl
(bad)
daa
xchg
fst
inc
shl
pop
add
es
inc
fcom
jb
jne
mov
sub
push
loope
cmp
cmp
stc
addr16
mov
cdq
popf
ja
jmp
sub
popf
shl
test
inc
push
jmp
pop
dec
pusha
and
adc
adc
sbb
loopne
push
cwde
mov
cmp
ins
icebp
dec
outs
cdq
or
mov
aaa
retf
mov
loope
das
xchg
hlt
bound
jle
dec
jo
div
sub
fld
cld
adc
and
ret
dec
movs
mov
and
movs
js
shl
xor
or
fwait
pop
inc
jp
loopne
dec
jbe
adc
rol
cmp
fistp
sub
jbe
inc
ret
xor
mov
std
inc
sbb
pop
pop
fstp
hlt
cld
push
mov
mov
and
jnp
test
ror
in
test
ja
adc
fild
xlat
mov
cmp
push
retf
imul
jg
or
inc
sbb
push
scas
enter
xchg
pop
push
aad
adc
dec
and
ss
(bad)
iret
fstp
je
inc
dec
pop
lods
and
sub
jbe
mov
pop
clc
cld
jle
dec
sub
adc
stc
pop
pop
int3
and
sub
mov
adc
ret
push
adc
rcr
and
mov
hlt
add
ret
push
fsubr
arpl
mov
scas
and
add
sub
cmp
inc
cdq
repnz
mov
jb
jno
mov
es
popf
dec
fist
cs
push
call
push
xor
mov
or
test
fsub
jnp
pop
(bad)
addr16
push
jb
fsub
xor
cmc
push
push
into
int
inc
sbb
into
inc
xor
cmps
adc
and
sbb
mov
or
cmp
test
dec
mov
sub
imul
les
sbb
jp
adc
mov
pop
jb
mov
stos
ins
dec
push
jns
inc
inc
sbb
ds
(bad)
movs
jae
ror
pop
jmp
(bad)
test
call
popa
mov
cdq
dec
fidiv
adc
cmps
loope
stc
out
pop
sub
push
(bad)
jne
(bad)
xor
jnp
fnsave
jmp
jne
(bad)
and
or
and
or
lea
lds
push
test
call
stc
out
push
jae
or
and
sub
mov
xlat
push
dec
cld
scas
ret
sbb
daa
push
mov
sbb
mov
cmp
cmp
cmp
xchg
movs
and
enter
aam
sub
push
cmp
es
gs
cs
into
mov
mov
cmps
fld
pop
cdq
cmc
jmp
xchg
adc
aam
jno
push
cs
adc
adc
sbb
popa
mov
(bad)
pusha
div
in
mov
sahf
mov
mov
mov
mov
jmp
retf
daa
clc
scas
test
iret
fsubrp
stos
push
push
or
xchg
jno
dec
pop
pop
mov
adc
xchg
pop
movs
fcomp
repnz
mov
fwait
iret
cmp
aaa
ror
mov
shr
stos
call
mov
xor
arpl
push
sub
call
mov
int
daa
mov
push
mov
loop
mov
inc
add
push
xchg
js
jnp
repnz
push
hlt
test
or
sub
ds
or
outs
leave
mov
jnp
ret
pop
push
inc
sub
clc
sti
cdq
jnp
dec
cmps
xchg
retf
inc
shr
dec
dec
addr16
cmp
out
mov
(bad)
in
jnp
test
les
fucomi
xor
and
add
mov
out
sub
ret
movs
lods
jne
inc
push
outs
repnz
movs
stos
rcr
ja
test
call
into
xchg
int
mov
jnp
add
pop
(bad)
(bad)
adc
shl
scas
pop
movs
pop
inc
xchg
mov
mov
imul
dec
fisttp
or
or
rcl
sbb
push
sub
jg
mov
retf
loopne
fldcw
in
mov
pop
sub
push
xor
int
enter
xor
cmc
ret
xchg
or
mov
mov
pop
sbb
data16
cmps
xor
scas
mov
dec
cs
in
pop
add
cmp
sbb
pop
mov
je
es
fadd
call
pop
out
test
and
pushf
iret
icebp
fdiv
add
mov
jle
mov
sub
pop
cld
inc
test
(bad)
shr
add
xchg
mov
shr
or
test
test
stc
xchg
sbb
call
mov
or
imul
mov
adc
test
sbb
jae
inc
stos
mov
call
inc
hlt
mov
or
movs
das
xchg
cmp
arpl
ret
mov
dec
or
je
push
shl
test
mov
fnstenv
jge
int
sbb
aad
dec
xchg
mov
fs
ja
movs
mov
in
xchg
sub
add
mov
pop
shl
jg
test
ins
mov
mov
xchg
outs
add
sub
shr
sbb
jmp
loop
std
pop
lods
adc
pushf
popa
push
je
pushf
push
stos
or
push
xor
xchg
movs
push
aad
mov
pop
mov
mov
fidivr
(bad)
(bad)
sub
add
loope
jbe
out
nop
jne
mov
fs
gs
scas
and
jp
mov
mov
outs
inc
into
mov
adc
aam
fstp
stc
ds
mov
sub
cli
push
push
pop
cmps
loopne
and
bound
mov
mov
cmp
push
sbb
mov
mov
fs
out
sub
aas
dec
xor
jmp
aam
push
or
or
xor
mov
cmp
pusha
sar
cld
fwait
cli
adc
mov
xchg
and
cld
call
sub
mov
mov
cmp
and
stc
inc
jecxz
inc
iret
outs
pop
(bad)
add
jo
push
cld
jmp
dec
mov
mov
cmps
mov
in
scas
ss
jo
sub
cli
out
pop
leave
mov
jae
lods
aaa
bound
cli
jecxz
clc
ret
adc
out
js
cmps
xlat
repnz
sbb
sbb
aad
ja
retf
iret
scas
outs
sbb
sub
jns
lahf
shr
cmp
shr
lods
nop
fs
fwait
outs
jae
cmp
or
sti
xor
adc
or
pop
(bad)
retf
and
shr
xor
xor
call
jle
cs
dec
mov
(bad)
mov
xchg
jmp
test
shl
cmp
pop
shr
mov
movs
inc
jnp
icebp
cwde
adc
or
stc
stos
fldcw
loopne
movs
stos
daa
pushf
dec
inc
add
nop
clc
cmp
stc
in
ret
or
call
cmps
and
sub
cmp
ficom
sub
fadd
xchg
pop
(bad)
loope
pop
and
enter
mov
aam
(bad)
xor
data16
(bad)
retf
add
jmp
add
(bad)
(bad)
jge
js
lea
cmc
inc
and
out
and
pop
mov
push
pfrcpit1
pop
inc
std
mov
jle
pop
mul
or
retf
mov
in
pop
imul
xchg
add
(bad)
gs
es
pop
js
mov
add
mov
and
add
stc
aam
add
cld
mov
arpl
xchg
sahf
scas
fwait
jmp
jno
xchg
cvtdq2ps
xor
add
jecxz
sbb
fnstcw
test
out
das
retf
jle
xor
pop
push
push
xor
jb
js
stc
scas
cmp
push
jns
int
call
hlt
ret
push
add
retf
pop
cmp
jecxz
pop
dec
fdivr
jmp
imul
in
aas
stc
sbb
sub
mov
cld
cmp
fwait
push
add
mov
cmc
test
inc
mov
js
adc
mov
cmp
mov
dec
pop
out
add
lods
pop
xor
ret
jecxz
push
movs
mov
xchg
sub
in
data16
adc
inc
push
dec
push
fisubr
and
aaa
ret
test
mov
adc
or
mov
imul
dec
std
pop
test
es
push
or
inc
retf
mov
xchg
ror
xchg
into
and
cmc
jecxz
inc
je
dec
mov
lea
sub
and
pop
inc
loopne
push
mov
lea
push
mov
lock
loop
(bad)
scas
pop
xchg
addr16
loop
jns
test
rcl
sbb
(bad)
xchg
inc
repz
rol
js
je
adc
js
dec
jl
ins
xchg
jb
mov
hlt
mov
movs
std
dec
(bad)
sub
dec
xchg
add
neg
out
sbb
mov
ror
jp
xchg
mov
rcr
out
in
ins
ror
out
pop
and
sbb
sub
mov
or
add
in
mov
push
xor
pop
lods
push
adc
inc
jmp
in
mov
dec
adc
mov
ret
or
neg
ins
cmps
jne
fstp
jmp
in
ins
fild
sbb
out
push
test
rcr
out
pop
dec
pop
push
outs
pop
cwde
sahf
adc
cdq
sbb
mov
std
push
xchg
jmp
adc
ja
mov
push
jno
mov
jo
push
mov
sub
mov
sbb
lahf
scas
and
fdivr
inc
jbe
sbb
scas
in
or
jmp
cmp
(bad)
cmp
repnz
mov
mov
retf
test
test
test
lock
in
inc
jl
add
mov
pop
sub
outs
push
xor
sub
fidiv
xchg
and
retf
inc
enter
fcom
bound
fcmovnb
add
je
sub
repz
rol
push
fisubr
push
leave
rcl
xchg
mov
sub
dec
fbld
dec
jae
arpl
lods
or
jns
movs
or
jl
or
les
jp
pop
popa
js
rcr
inc
xor
(bad)
pop
jmp
shl
lods
pop
shr
sub
or
je
lods
sar
fisttp
sahf
mov
out
jle
sub
jmp
hlt
retw
in
jno
inc
inc
clc
jg
in
(bad)
ins
sbb
sti
nop
inc
fs
adc
pop
addr16
retf
jo
lock
fadd
jo
movs
cmps
push
in
or
adc
xor
loope
push
fild
push
xchg
fsub
add
jnp
test
add
inc
movs
call
je
pusha
loope
or
push
outs
fsub
outs
mul
fcom
inc
loopne
jne
repz
loope
pop
inc
xchg
mov
arpl
jae
xchg
movs
adc
add
jno
stos
sbb
add
outs
inc
mov
test
xchg
fld
jae
ror
stos
mov
adc
sub
add
jge
loop
xchg
mov
mov
fdivr
lods
or
and
and
dec
sub
mov
test
test
aaa
repnz
leave
push
push
inc
or
jae
pop
mov
ffree
sti
je
jbe
sub
daa
xchg
jecxz
int3
pop
clc
arpl
or
inc
add
adc
mov
fimul
push
in
das
xchg
adc
sub
ret
addr16
or
mov
cmp
pop
pop
jns
sub
xchg
aad
sbb
xor
repz
xlat
in
sbb
mov
add
aad
sub
sahf
es
outs
cmps
adc
addr16
test
outs
push
or
imul
add
mov
outs
(bad)
jae
ins
mov
jle
pop
mov
push
stos
mov
cwde
retf
loope
out
mov
ja
aam
mov
fcomp
and
mov
push
pop
sbb
bound
sub
dec
(bad)
loopne
and
dec
jl
cmps
call
cld
retf
ja
test
xlat
das
addr16
jge
sti
imul
out
nop
pop
cmp
mov
test
xchg
sub
adc
data16
loope
in
mov
lea
fs
out
adc
mov
stos
xlat
nop
retf
cmc
add
xchg
inc
mov
shr
fidiv
repz
int
ins
sbb
daa
jp
vcvtsd2si
push
mov
cmps
cmp
inc
jns
mov
mov
push
pop
dec
je
add
dec
cwde
push
cmps
fwait
push
fnstcw
out
sub
xchg
jo
push
jg
adc
bound
pusha
xchg
pop
push
adc
inc
mov
(bad)
mov
jns
leave
add
sbb
fimul
adc
push
out
mov
cmp
sbb
sub
int
aam
xchg
mov
inc
jmp
loopne
cmp
push
data16
shl
push
or
dec
movs
mov
ffree
inc
clc
push
shr
xchg
hlt
loopne
iret
jo
sti
std
dec
push
lahf
push
lods
pop
add
jnp
add
xchg
test
(bad)
or
mov
in
pop
imul
pop
jl
jne
aas
in
ret
scas
sar
ret
jb
out
adc
push
jle
dec
pop
jmp
mov
push
rol
mov
movs
lods
cmp
xor
inc
and
repz
or
jmp
ror
push
pop
iret
cmp
arpl
xchg
xor
gs
pop
fwait
vmovhps
int3
out
mov
jl
or
dec
out
cmp
pop
add
adc
div
enter
sbb
jnp
retf
inc
in
std
adc
test
and
sub
into
mov
not
cmp
iret
ss
adc
jae
enter
inc
push
imul
(bad)
outs
int3
test
pusha
mov
add
push
xchg
sub
mov
pop
sbb
clc
cmc
cli
jnp
push
inc
iret
mov
shl
in
sbb
out
scas
dec
movs
cld
jae
jmp
in
je
shr
jns
xchg
adc
dec
push
xor
push
mov
gs
mov
call
int
fbstp
cmc
out
push
cld
cmps
es
fsubr
call
ss
loope
adc
push
xor
jp
mov
push
push
test
mov
inc
fsub
std
xchg
or
je
xchg
adc
stos
jle
sbb
(bad)
jbe
pop
retf
xchg
fst
xchg
loop
leave
ret
mov
fwait
push
pop
mov
inc
mov
jg
cwde
or
mov
jae
sti
cmps
sbb
movs
jg
scas
loop
xor
aad
scas
scas
call
push
aad
lock
push
xor
add
std
or
fwait
or
mov
dec
lock
enter
add
pop
out
and
pop
push
test
and
xchg
mov
mov
jl
add
lock
mov
jmp
cmp
cmps
inc
pop
fs
ins
test
xor
data16
dec
sar
jmp
mov
dec
or
mov
nop
icebp
sti
pushf
mov
jmp
sub
push
retf
movs
adc
gs
frstor
test
and
or
sub
adc
inc
dec
loop
or
xor
aam
aam
test
xchg
fisttp
lods
cmps
jae
pop
dec
lods
dec
inc
cli
or
add
arpl
ret
pop
cmp
jp
pop
mov
ds
jne
loope
inc
in
and
or
icebp
sbb
(bad)
jl
ds
push
mov
mov
mov
pop
mov
fist
inc
push
dec
in
or
jp
dec
and
loopne
inc
cdq
aam
cld
mov
out
scas
sar
cmp
nop
shl
dec
dec
mov
xor
shr
mov
jns
ret
cdq
xchg
(bad)
cli
pop
inc
sbb
or
hlt
fistp
pop
in
push
shl
shl
sbb
test
fmul
ss
repnz
cmp
dec
adc
xchg
adc
(bad)
sti
ror
out
xchg
cmps
or
jnp
xor
sti
mov
inc
repnz
jl
mov
enter
jmp
lock
out
stos
sub
call
(bad)
fs
sbb
in
in
les
adc
xchg
in
mov
scas
adc
mov
sbb
dec
ret
and
add
jno
xchg
or
jb
das
mov
lea
jne
adc
jo
cli
rcl
push
cmp
mov
ss
mov
enter
sub
xchg
xchg
mov
lods
fwait
lds
xchg
push
jo
test
sbb
ror
mov
sbb
push
fld
inc
mov
fsubr
push
sbb
cli
popa
and
or
fcmovb
dec
hlt
cli
shr
push
xor
retf
in
rcr
add
aas
mov
cs
aam
push
mov
cdq
push
inc
adc
je
fistp
xchg
sub
test
pop
ins
jns
repnz
(bad)
aaa
mov
int3
dec
int
and
lahf
mov
push
ins
outs
(bad)
cmps
push
mov
arpl
imul
adc
dec
inc
js
mov
popf
dec
neg
jns
pop
mov
push
clc
push
push
jmp
or
add
mov
and
mov
cdq
cmp
sar
jbe
cmp
inc
loopne
cmps
movs
(bad)
je
sbb
or
jmp
dec
cmp
add
out
add
ror
out
add
mov
stc
sub
test
jl
push
add
adc
and
add
pop
sub
imul
mov
fs
lods
or
xor
inc
xor
leave
rcl
dec
push
mov
test
popf
pop
icebp
imul
xchg
sbb
fisttp
stos
inc
add
mov
into
add
jo
mov
(bad)
retf
xor
add
out
popf
mov
push
inc
dec
jmp
imul
xlat
fistp
je
aas
and
xchg
fstp
and
cli
outs
cmp
add
repz
sub
or
rol
push
repz
cmp
jo
imul
int3
and
inc
jnp
dec
and
jne
movs
cmp
cwde
xor
cdq
push
shl
xchg
mov
or
imul
cmp
loope
(bad)
clc
and
sub
sbb
inc
test
popa
daa
daa
xor
jp
and
pop
daa
bound
add
dec
sub
sar
sbb
repz
sub
jp
xor
(bad)
cwde
jle
lds
dec
cmp
lods
fwait
mov
add
and
mov
mov
(bad)
(bad)
dec
nop
mov
cmp
and
xchg
jge
mov
not
fild
and
pop
or
imul
aad
inc
sub
dec
clc
shr
movs
add
cmps
xor
sbb
mov
fsub
std
out
aad
or
sub
xor
sbb
mov
aad
mov
inc
dec
jecxz
aam
inc
xor
or
loope
sub
fisttp
clc
outs
adc
test
cmp
jns
sahf
je
xlat
in
(bad)
pushf
sbb
stos
repnz
jnp
sub
cmp
mov
xchg
(bad)
sbb
or
aad
and
and
rol
fs
mov
inc
xchg
sub
ret
popf
push
fild
mov
mov
mov
ja
in
ficom
sbb
fadd
xor
or
jne
retf
div
test
adc
mov
sbb
sub
jp
and
(bad)
mov
pop
push
je
ins
into
jl
xor
aad
or
or
mov
int
jg
xchg
sbb
jne
cmps
retf
push
icebp
in
hlt
ds
cli
sbb
ret
inc
pusha
mov
xlat
leave
rcl
and
jmp
adc
xchg
and
lock
xchg
or
xor
xchg
out
dec
ins
mov
and
cmp
int
mov
call
repnz
imul
fist
fldcw
cdq
mov
cmp
test
imul
fisub
mov
push
push
xor
jge
xchg
neg
sub
inc
movs
mov
sub
adc
xor
imul
inc
xchg
aas
and
add
inc
cmp
loope
mov
xor
xchg
sahf
xchg
mov
in
js
je
xor
sar
push
es
push
or
fstp
or
xor
retf
or
pop
adc
mov
lods
adc
inc
jo
sbb
mov
in
mov
mov
fisub
lods
cmp
xor
adc
ds
push
das
loopne
xchg
mov
ret
outs
jle
std
mov
js
inc
add
jle
mov
xchg
mov
jnp
or
mov
retf
mov
lods
add
push
mov
mov
adc
gs
push
fcomi
xchg
mov
popa
push
ffree
dec
js
push
inc
xchg
jp
ret
fnstcw
shl
test
test
popf
xor
lds
or
mov
aaa
lods
(bad)
fnstenv
jle
test
sub
mov
imul
ins
mov
mov
mov
mov
out
xchg
retf
adc
inc
loopne
popa
(bad)
shr
xchg
and
inc
xor
out
retf
psubsw
lods
aad
jb
sub
push
or
mov
inc
cmp
fild
(bad)
in
in
jbe
xchg
inc
das
(bad)
sbb
and
loope
sub
xchg
stos
inc
out
aaa
dec
xor
test
outs
xor
outs
jmp
cmp
jne
mov
pop
loopne
lahf
jae
adc
and
sub
pusha
pushf
mov
pop
adc
xchg
dec
dec
mov
aaa
imul
pop
sub
rol
pusha
sub
push
xor
ror
mov
cmp
xchg
repz
mov
cmps
adc
fisub
xchg
mov
mov
jmp
test
sbb
pop
mov
adc
(bad)
inc
mov
movs
into
mov
imul
pop
xchg
sub
dec
mov
movs
push
adc
xlat
mov
cdq
cmp
in
leave
adc
cmc
sub
or
in
ss
stos
iret
repz
daa
push
scas
inc
jmp
adc
xchg
jg
jne
jnp
int3
ins
sbb
xchg
mov
ror
pop
scas
in
sbb
fdiv
test
rcr
fwait
inc
sbb
inc
jg
mov
std
cmp
push
dec
inc
stos
mov
jmp
pusha
lods
push
pusha
out
xor
cwde
mov
loop
cmp
int3
pop
mov
push
(bad)
cmps
adc
(bad)
sti
push
shl
sub
sbb
cwde
lahf
jno
pop
inc
stos
jb
mov
out
aas
nop
adc
pop
fcomp
jl
or
loopne
xor
in
ins
jmp
cmps
cdq
cmp
cmc
pop
push
popf
jns
xchg
sbb
aaa
xchg
loope
xor
jl
sub
sub
fdiv
loopne
jp
xor
sub
stos
test
inc
mul
enter
push
aam
and
adc
fisubr
add
mov
sbb
sub
cmp
and
cmp
dec
ss
das
mov
sti
cmp
loopne
pop
in
inc
scas
lds
dec
or
add
add
loope
jg
mov
repnz
in
dec
in
pop
push
(bad)
adc
lods
and
mov
add
sbb
mov
pop
clc
ja
mov
mov
xor
in
adc
sub
jg
mov
mov
xlat
adc
inc
xchg
test
in
mov
out
arpl
push
in
dec
jo
xor
inc
pop
int3
icebp
or
and
mov
sub
jae
imul
stc
or
ret
mov
js
jo
push
arpl
pop
xor
mov
cmp
loope
test
pop
pop
cli
adc
cld
outs
pop
data16
pop
sbb
or
sbb
and
inc
mov
fidivr
cld
jp
movs
lods
push
and
aas
sbb
or
push
scas
outs
lahf
sar
push
jns
xchg
dec
and
pusha
pop
int3
rcl
push
fldcw
mov
mov
and
dec
sub
xor
and
push
lds
adc
dec
pop
dec
sete
mov
dec
mov
(bad)
fnsave
ss
mov
pushf
add
pop
ja
test
shl
icebp
mov
sub
mov
sbb
xor
or
adc
pop
pop
adc
mov
(bad)
nop
imul
dec
mov
es
int
int
sbb
out
xor
pop
rcr
nop
js
stos
(bad)
jp
test
sbb
adc
lock
cmps
add
fiadd
jne
sub
not
jmp
mov
loop
push
loopne
and
adc
fiadd
idiv
mov
sub
xchg
or
push
adc
jmp
dec
cwde
or
es
xchg
jbe
mov
mov
lds
push
mov
jg
call
mov
and
xor
clc
shl
mov
cmp
mov
(bad)
sub
mov
dec
pop
pop
test
cmp
mov
mov
retf
pop
test
int3
push
mov
outs
cmp
enter
movq
cli
inc
mov
jnp
push
mov
pop
js
lock
lods
cmp
sub
movs
dec
push
xor
dec
jbe
xor
mov
adc
or
pusha
rol
mov
mov
cld
mov
sbb
xor
and
push
sbb
(bad)
xchg
loop
dec
add
out
xchg
mov
sbb
adc
cmps
sbb
call
inc
fisub
mov
cmp
add
cmp
shr
dec
loop
cmps
test
mov
push
retf
push
fstp
inc
das
xor
and
dec
aad
push
add
iret
not
dec
je
sbb
int3
sahf
xchg
out
add
sub
test
sub
xchg
pop
mov
sbb
push
push
push
jge
lock
add
imul
cwde
mov
push
sbb
mov
fsub
adc
ret
pop
mov
mov
mov
idiv
cli
jmp
pop
and
dec
pop
mov
sti
add
sub
loopne
or
enter
scas
mov
out
fstp
push
pushf
add
cmp
jmp
jbe
push
sti
jmp
sub
test
mov
cld
dec
pop
adc
mov
loop
lahf
xchg
mov
add
cli
mov
pop
push
test
(bad)
std
add
retf
inc
inc
in
ret
mov
popa
add
xchg
int3
cmps
in
add
add
sahf
std
int
mov
push
cmp
bound
jae
cmps
imul
lea
hlt
imul
ficomp
scas
aaa
mov
les
pop
adc
repnz
call
sub
sbb
adc
mov
cwde
or
es
fwait
or
adc
int3
shl
imul
adc
sub
cs
popa
dec
(bad)
dec
fwait
sbb
cld
shl
mov
or
cmp
or
shl
xor
enter
loop
jmp
not
jmp
xchg
ds
mov
scas
mov
(bad)
mov
mov
ret
mov
in
mov
or
clc
test
(bad)
mov
gs
loope
ds
(bad)
jp
retf
fstp
inc
and
test
aas
xchg
lea
push
fistp
pop
sbb
sbb
adc
mov
push
mov
xor
fiadd
and
inc
mov
jg
pop
arpl
(bad)
push
repz
sub
or
dec
jo
outs
call
add
pop
into
cwde
pop
jg
into
xlat
std
or
push
and
sar
dec
mov
(bad)
loop
pop
xchg
pop
mov
jmp
jecxz
sub
mov
lods
add
jmp
fs
pop
mov
aam
xor
jle
popf
cdq
mov
xchg
jno
outs
fadd
ret
iret
aas
inc
add
popa
sub
shl
xchg
fimul
scas
sbb
je
sti
jmp
dec
aaa
xchg
jnp
int
xor
(bad)
repnz
scas
or
fstp
dec
or
in
mov
in
stos
enter
je
or
fwait
jg
adc
and
pop
fisubr
cmps
ins
cmp
cmp
stos
lahf
ss
cli
cli
jge
dec
hlt
(bad)
ins
pop
jmp
(bad)
pop
mov
dec
gs
pop
inc
xchg
and
and
push
pop
jne
pop
sub
(bad)
and
and
dec
loope
push
adc
mov
cmps
out
aad
inc
cmps
gs
inc
adc
out
ds
fs
mov
and
ins
std
fdiv
ja
pop
ja
ins
push
jno
mov
enter
pop
sar
sub
cbw
inc
shr
out
(bad)
mov
aam
dec
xchg
and
in
add
stos
pop
(bad)
adc
sub
adc
inc
xor
and
or
stc
jmp
(bad)
scas
adc
xchg
adc
mov
ja
icebp
popf
add
mov
sub
dec
sbb
inc
ds
into
jle
and
add
sub
ja
dec
dec
imul
push
fild
jp
xor
movs
ins
movs
ins
pop
fwait
xor
in
mov
adc
(bad)
std
dec
add
fnstenv
pop
or
lods
test
(bad)
jmp
jmp
jne
hlt
pop
mov
dec
std
push
(bad)
jae
bound
and
imul
and
or
call
lahf
sbb
inc
dec
mov
mov
and
dec
push
mov
sub
std
in
add
push
outs
aad
push
xchg
dec
pop
jne
jmp
(bad)
nop
jbe
in
add
retf
mov
push
repz
retf
push
mov
and
gs
cmp
add
out
mov
aaa
movs
dec
leave
(bad)
ja
xchg
xchg
dec
(bad)
nop
clc
sbb
mov
pop
or
sbb
daa
in
adc
push
mov
and
popf
repnz
dec
hlt
inc
mov
jge
sub
imul
xor
mov
fsub
cmp
mov
hlt
xor
xchg
hlt
mov
mov
jl
into
or
or
test
retf
out
push
aaa
add
rcr
and
adc
push
test
aas
adc
movs
inc
rcr
test
mov
cmp
movs
sbb
cs
mov
stos
push
and
call
out
(bad)
pop
inc
pop
add
jne
hlt
or
cmps
mov
mov
es
lea
cmp
cmc
cmp
test
movs
mov
stc
rcl
aad
pop
pop
mov
cmp
pushf
das
jp
push
xor
sbb
inc
imul
retf
mov
pop
lods
push
sbb
sbb
popa
int3
int
push
icebp
adc
jmp
jae
xor
pop
jg
jg
in
jae
call
inc
je
xchg
mov
retf
xor
pop
pop
xor
les
inc
pop
push
sti
test
fisub
add
nop
xchg
inc
repnz
hlt
and
loopne
test
ins
or
dec
xor
pop
(bad)
out
and
loope
jbe
cmp
pop
mov
dec
(bad)
xchg
inc
(bad)
stos
adc
shr
dec
mov
mov
fbstp
loop
sti
adc
jmp
or
ja
inc
fisubr
fucompp
sbb
dec
repnz
fmul
popf
rcl
fld
push
or
jnp
in
dec
stos
mov
pop
pop
or
xor
call
pushf
cmp
sub
xor
adc
daa
sbb
pop
sub
mov
push
daa
push
aam
mov
into
and
mov
jne
addr16
popf
push
(bad)
cmp
ins
fisttp
inc
or
jo
lods
fs
dec
add
test
iret
cmps
jg
movs
jg
xor
and
inc
out
mov
(bad)
lds
mov
mov
xchg
adc
fadd
adc
(bad)
shl
rcr
adc
add
push
dec
dec
scas
push
shl
inc
outs
gs
fdivr
inc
out
xor
mov
imul
(bad)
xchg
adc
cmp
xor
xor
stos
push
movs
sbb
popa
(bad)
jp
mov
jmp
or
in
mov
jmp
outs
nop
inc
pop
pop
jnp
xchg
aaa
inc
push
jmp
rol
mov
mov
shl
xchg
jg
imul
(bad)
fucomi
push
das
scas
add
stos
int
or
sbb
push
mov
ret
add
movs
das
shl
aaa
mov
idiv
push
dec
push
and
jnp
lods
add
pop
push
repz
dec
jne
inc
cs
dec
aam
and
mov
mov
xchg
cdq
mov
(bad)
cmp
xchg
adc
in
mov
adc
dec
jge
shl
retf
and
dec
cwde
ds
js
fistp
fst
cmp
cmc
popa
add
inc
ret
pop
adc
pop
sqrtps
sub
addr16
mov
int3
and
jmp
add
imul
(bad)
out
jno
mov
jmp
fwait
lods
jno
push
sub
xchg
mov
xchg
int
push
mov
mov
adc
retf
fsubr
rol
xor
scas
cmp
or
or
pop
pusha
out
fwait
movs
add
cmc
call
test
pusha
cmp
loope
lahf
mov
adc
cmp
or
push
test
xchg
pop
addr16
retf
out
adc
push
call
lea
push
clc
fild
inc
adc
out
test
lahf
mov
push
lahf
or
jl
int
push
imul
dec
test
lea
push
mov
xor
mov
or
bound
shr
sbb
jns
dec
ss
mul
mov
mov
push
adc
xlat
push
shr
stc
aad
mov
pushf
ror
xchg
aam
rep
stc
cmp
push
push
ficomp
out
xlat
stos
mov
fisubr
sub
in
pop
int
test
sti
lods
or
arpl
xor
mov
dec
enter
push
push
jno
mov
cmp
fstp
ins
mov
inc
sbb
pop
adc
sbb
mov
movs
sbb
jo
or
xchg
mov
pop
adc
xor
cmps
cmp
mov
xor
sahf
jbe
mov
mov
mov
es
in
xchg
jge
stos
test
popa
addr16
pop
jb
add
mul
out
aas
jo
cli
frstor
sub
and
or
jmp
or
(bad)
pop
cmp
inc
adc
adc
add
inc
and
stos
hlt
adc
push
cmp
dec
aaa
stos
push
pusha
pop
hlt
ja
dec
push
push
sub
icebp
pop
test
adc
push
outs
movs
(bad)
xor
mov
js
mov
mov
jns
push
and
pop
imul
mov
out
inc
loopne
aaa
iret
fdivr
sbb
add
jb
add
fdivr
stc
pop
daa
into
mov
popf
jae
bound
ins
mov
sub
xlat
push
pop
and
pop
or
add
loopne
into
push
pop
push
mov
daa
mov
jmp
out
pop
out
dec
iretw
and
pop
push
call
xchg
pop
and
push
jle
add
mov
in
repnz
in
in
data16
(bad)
or
add
pop
dec
idiv
ds
jp
mov
repz
pusha
mov
dec
push
fwait
pusha
(bad)
or
leave
pop
retf
push
outs
jp
leave
mov
jns
adc
fs
cmp
neg
push
inc
icebp
xchg
sub
fwait
out
ss
pop
fst
sar
dec
xchg
and
movs
mov
sub
div
cmp
cmp
shl
dec
dec
std
mov
sub
and
add
mov
cmp
movs
sbb
daa
ss
in
xor
xor
jge
fistp
arpl
mov
clc
repz
mov
mov
fwait
jo
mov
ja
dec
test
dec
pop
jmp
push
mov
push
es
bnd
(bad)
jns
xchg
call
push
lock
rol
xchg
fimul
test
mov
push
retf
jecxz
and
dec
xor
push
push
xchg
ret
sbb
arpl
js
cmps
xor
mov
popf
cmp
pop
dec
out
xor
lea
(bad)
loope
cs
out
sbb
scas
xchg
scas
shl
in
xchg
jmp
sbb
sbb
add
mov
pop
mov
dec
aad
js
xchg
(bad)
(bad)
outs
dec
stos
xor
enter
(bad)
shl
(bad)
inc
mov
inc
lock
jecxz
mov
ss
retf
mov
jo
jne
sbb
push
pop
xchg
jmp
mov
pusha
daa
mov
leave
imul
and
jb
jge
jo
sub
retf
add
rcl
jle
push
inc
daa
mov
pop
popf
ret
sahf
mov
adc
inc
shl
xor
int3
pop
mov
popw
xor
push
nop
dec
sti
sbb
nop
call
push
xor
jl
pushf
int3
outs
mov
jbe
sub
xor
loopne
inc
and
push
scas
and
lods
pop
scas
push
mov
test
pop
mov
int3
icebp
xlat
sub
mov
cmps
adc
(bad)
adc
call
gs
mov
fsub
dec
jno
mov
scas
mov
mov
in
fcomp
push
dec
mov
push
scas
data16
shl
enter
jl
xor
ds
(bad)
dec
xchg
fsubr
repnz
pusha
pop
ja
mov
jmp
pop
aam
ret
sbb
ins
enter
lods
into
mov
or
jg
xor
pop
rol
inc
cs
cmp
dec
add
ret
stos
call
cmp
inc
xlat
mov
push
stos
in
repnz
retf
pop
xchg
into
sub
scas
sti
jns
jae
outs
fbstp
(bad)
into
pop
dec
inc
clc
mov
xor
aam
data16
neg
xor
add
inc
cdq
xchg
inc
jecxz
enter
sub
xchg
mov
test
xchg
repz
fsub
xchg
jo
inc
mov
push
mov
pusha
outs
ins
xchg
and
lods
lahf
mov
int
imul
shl
mov
jae
(bad)
in
iret
in
push
ret
cmps
gs
scas
dec
or
xchg
cli
xchg
pop
(bad)
sbb
jmp
(bad)
jl
mov
jns
xor
pushf
push
mov
int3
inc
jne
std
jae
int
add
add
stos
(bad)
bound
outs
gs
mov
mov
cmp
sub
cmp
fmulp
sbb
(bad)
mov
inc
fimul
movs
cmc
mov
gs
mov
(bad)
dec
aad
mov
enter
aad
or
les
or
jnp
mov
loopne
push
dec
daa
leave
push
repz
xor
cmp
and
cmp
pop
and
jmp
push
sbb
movs
mov
ds
dec
shr
jecxz
mov
movs
mov
in
les
and
push
pop
or
rol
shl
sar
mov
mov
jp
pusha
inc
mov
cmp
jmp
ror
lods
pop
sbb
inc
addr16
inc
pop
mov
repz
fadd
test
mov
jo
xlat
fst
nop
xchg
xchg
xchg
sbb
fdivr
les
popf
and
sar
xchg
sti
adc
adc
add
xor
mov
movs
mov
das
test
mov
sti
dec
pop
lea
xchg
mov
pop
xchg
imul
fcomp
enter
nop
jbe
push
scas
imul
mov
push
shl
adc
rol
je
sbb
xor
mov
loop
inc
cmp
in
or
and
aaa
inc
icebp
push
dec
pop
test
push
jle
lods
ins
aaa
fstp
fdiv
jge
sbb
sbb
or
inc
jae
fisttp
loop
inc
imul
xchg
add
pop
cmp
sub
pop
inc
inc
push
cmp
or
jecxz
out
mov
lahf
stos
fmul
int3
jp
dec
xlat
pop
stos
call
adc
mov
popa
xchg
fadd
loopne
xchg
add
lods
push
inc
popf
es
or
xor
pop
cs
sub
js
dec
ud2
out
push
(bad)
mov
mov
xor
inc
xor
mov
add
std
fwait
mov
out
mov
test
sub
xchg
sbb
and
jmp
push
xchg
mov
cmp
sahf
jo
or
mov
loop
out
and
jg
fstp
shl
retf
daa
leave
pop
push
xor
jnp
inc
addr16
xchg
add
mov
cs
test
popa
xor
out
in
mov
aam
sbb
enter
into
clc
dec
sahf
mov
daa
sub
movs
add
in
push
cmp
pop
jecxz
adc
pop
movs
call
mov
mov
test
sub
daa
jo
ins
inc
or
cmp
shl
pop
jns
in
inc
inc
mov
leave
retf
xor
push
in
jmp
scas
or
dec
pop
pusha
sbb
in
retf
jb
stc
bound
retf
jnp
push
dec
mov
and
stc
retf
mov
std
add
(bad)
dec
addr16
popf
mov
sub
outs
ss
rcr
or
in
imul
jns
mov
cmc
sub
push
fwait
mov
dec
and
cdq
jmp
into
sub
dec
aad
and
aaa
ds
add
jg
dec
std
and
test
xchg
or
aaa
aas
xchg
jg
pop
xchg
clc
test
inc
jne
fs
xor
daa
mov
pop
in
into
inc
in
stc
mov
pop
mov
mov
jge
or
(bad)
adc
pop
xchg
and
cmp
adc
call
imul
mov
into
repz
jo
jmp
jmp
aaa
data16
aad
aam
add
(bad)
fst
lods
sbb
dec
push
and
jge
cmc
sbb
ret
lahf
dec
dec
xor
xchg
vprotb
lods
and
(bad)
adc
ficom
(bad)
out
js
int3
sbb
stos
out
push
dec
call
popa
sbb
xlat
mov
ja
into
std
push
jno
inc
jg
jl
cmp
or
mov
out
inc
cmp
repz
lock
loopne
jmp
or
mov
or
adc
and
sbb
pop
jg
xor
lds
add
cdq
cmp
sub
cmp
dec
xchg
outs
jo
sub
cmp
add
push
call
mov
or
push
and
std
sbb
(bad)
rol
pop
lds
jbe
clc
int3
fild
gs
outs
pusha
pop
adc
xchg
add
cmps
cmp
cs
nop
std
lods
out
bound
cmp
fisub
popa
cmp
mov
enter
loope
in
ss
lea
hlt
adc
ror
pop
and
sbb
push
mov
stc
enter
inc
(bad)
popf
mov
mov
mov
sti
mov
and
addr16
(bad)
mov
cdq
mov
rcl
and
aam
add
adc
(bad)
std
loope
aas
test
xchg
pop
push
fst
mov
(bad)
daa
mov
inc
or
ror
and
iret
cmp
cli
ficomp
hlt
and
stc
mov
jnp
push
fstp
mov
jmp
jbe
cmc
adc
in
xor
mov
xlat
push
(bad)
cmp
daa
push
pop
jl
pop
cmp
popf
push
push
mov
mov
push
imul
enter
out
lahf
dec
push
and
sbb
mov
sbb
xor
enter
push
ja
push
imul
aam
mov
fwait
ss
out
push
xchg
jle
iret
pop
push
cmp
pop
pop
mov
jge
cwde
adc
and
arpl
jmp
sub
cmps
aaa
aaa
ds
pop
adc
test
int3
sbb
out
arpl
rol
pushf
jl
(bad)
push
jo
(bad)
sbb
pop
mov
cmps
jg
mov
test
pop
xlat
and
jmp
sub
(bad)
mov
aam
stos
adc
cwde
push
js
retf
xor
sub
adc
mov
dec
sbb
cmp
dec
scas
xchg
ret
or
sbb
mov
fs
cmps
les
pusha
aaa
fdivr
push
push
cmps
mov
(bad)
(bad)
retf
daa
out
fstp
or
pop
sbb
inc
out
add
inc
push
sub
jg
lahf
mov
adc
scas
test
and
pop
stos
add
pushf
dec
iret
xchg
and
fild
and
arpl
xor
iret
and
sbb
inc
xor
jb
(bad)
adc
inc
movs
(bad)
stc
sbb
xchg
jmp
dec
xor
pop
add
jne
aas
fsubr
and
jae
loope
retf
sub
js
sub
sub
std
popf
aad
fnstsw
ret
mov
mov
ds
pop
movs
jb
fdiv
and
push
jmp
(bad)
cmp
cld
test
pop
jmp
add
inc
cmps
dec
mov
call
in
shl
mov
sbb
sbb
mov
aas
je
popa
fdiv
rcl
jnp
aad
inc
cmp
imul
(bad)
jno
sbb
loop
adc
jnp
lods
mov
out
push
adc
mov
mov
call
xor
fisubr
adc
xlat
xchg
push
xor
enter
pop
or
not
xor
jbe
dec
inc
mov
scas
add
hlt
test
test
fisttp
out
mov
cmp
(bad)
jmp
std
push
xor
movs
and
add
xchg
xchg
mov
ror
jmp
pusha
xchg
in
ffreep
call
or
jae
outs
mov
inc
mov
push
cmps
out
in
jnp
xor
neg
sahf
xacquire
xor
xchg
adc
adc
jb
sub
test
adc
cmc
push
pop
retf
sbb
mov
push
inc
enter
jmp
bswap
inc
add
test
lahf
addr16
lea
in
inc
pop
outs
(bad)
inc
add
enter
sbb
data16
mov
xchg
dec
inc
inc
push
mov
jmp
push
mov
push
cdq
xor
add
push
outs
jo
pop
imul
sti
pop
or
inc
jbe
inc
mov
movs
sar
dec
mov
js
ss
ss
xchg
cmps
ss
bound
fstp
test
or
push
nop
xchg
push
sub
jecxz
xchg
jo
mov
pop
rcr
or
push
inc
rcl
jb
sub
pop
and
mov
xchg
test
cwde
in
add
bound
xchg
mov
(bad)
jno
retf
push
and
int3
xchg
jmp
addr16
xchg
(bad)
jmp
xor
in
out
out
repnz
shl
scas
stos
fist
aam
(bad)
cmps
push
add
popa
fs
pop
loop
pop
add
inc
imul
gs
mov
repz
es
loope
cmp
or
jp
inc
(bad)
and
(bad)
fldenv
cdq
fiadd
scas
sbb
adc
cmp
mov
popa
push
lock
adc
lock
loop
push
jg
mov
xchg
cmc
repnz
push
test
cmps
lea
cli
pop
in
(bad)
fst
fs
adc
jge
pop
push
out
adc
xor
jno
xchg
pushf
movs
inc
js
ins
jmp
das
mov
loopne
loope
xchg
sbb
sub
out
add
pop
pop
push
retf
jle
push
mov
inc
push
pop
out
cmp
mov
addr16
les
cmp
es
jecxz
ins
in
js
xlat
adc
sbb
(bad)
das
cs
icebp
add
idiv
inc
movs
lds
popf
popa
movs
mov
shl
push
pop
std
pop
adc
out
outs
pop
jne
mov
mov
mov
and
out
cmp
jns
scas
jmp
scas
mov
daa
not
int3
pop
lea
fstp
mov
leave
pop
dec
test
(bad)
(bad)
add
add
cmp
or
fwait
xor
xchg
jnp
arpl
retf
dec
data16
jae
sub
pop
pop
pushf
inc
mov
dec
or
push
fiadd
xor
pushf
ins
jmp
jp
cmp
xchg
call
or
shr
push
jb
push
ret
push
xor
or
jp
fsubp
pop
jae
sahf
mov
jg
not
retf
jmp
mov
cmps
add
mov
mov
pusha
mov
inc
and
inc
mov
jae
in
shr
mov
retf
call
add
lea
loop
fild
lea
sub
jae
inc
and
aam
adc
fmul
fstp
cmps
cli
call
push
(bad)
pop
jmp
xor
xor
int3
les
pop
rol
bswap
inc
cmp
jbe
sbb
xchg
retf
jbe
jecxz
cld
push
push
ja
fld
pop
call
add
jmp
mov
jnp
loop
popf
fs
mov
ja
inc
(bad)
into
push
mov
das
mov
imul
push
enter
jecxz
add
push
ror
pop
stos
pusha
aad
and
rcl
fdiv
stc
jecxz
xchg
add
je
add
adc
mov
enter
or
push
sti
push
(bad)
test
lds
adc
pusha
inc
mov
push
lahf
add
not
fldln2
retf
pop
xor
cmp
sti
ss
(bad)
int3
and
repz
aad
push
in
hlt
pop
mov
mov
test
cmp
and
dec
xchg
int3
pop
pop
popf
sbb
pop
mov
outs
imul
mov
jns
push
popa
and
mov
mov
ins
add
xchg
lds
das
iret
jge
jnp
pusha
call
fld
or
dec
jp
mov
pop
push
cmp
imul
loope
mov
cs
outs
cmc
jnp
push
pop
fstp
movs
jmp
jmp
not
pushf
hlt
mov
cmp
mov
add
add
cmp
pop
push
(bad)
or
dec
jb
repz
or
ds
movs
lahf
or
int
add
mov
inc
jno
fwait
cmp
inc
das
add
retf
push
or
(bad)
ins
(bad)
jl
sub
mov
pop
ficom
adc
(bad)
mov
ins
stos
lock
pop
inc
jg
das
cmp
or
dec
jns
add
je
sub
mov
mov
jecxz
push
mov
cmp
aam
je
jns
xor
push
xchg
retf
bnd
pop
lds
cmp
lds
fistp
sub
mov
cmp
popa
sub
dec
push
jno
adc
retf
inc
loope
movs
cs
js
(bad)
xchg
xor
inc
ficom
divps
pop
popa
lock
call
push
xor
adc
ret
dec
(bad)
fdivr
inc
dec
and
cli
shl
fwait
shl
das
cmp
mov
mov
loopne
leave
mov
test
stc
xor
jecxz
xor
xlat
mov
or
mov
(bad)
stc
push
int3
xchg
dec
cmps
hlt
jecxz
call
and
fwait
(bad)
gs
mov
mov
dec
add
push
push
(bad)
inc
int
cld
xor
and
jmp
inc
mov
push
jg
mov
js
xor
in
rcr
scas
jge
scas
xchg
inc
or
daa
and
adc
imul
sub
(bad)
repz
loop
mov
pop
push
xchg
pop
outs
outs
lods
ror
and
adc
add
push
pop
cmp
hlt
xor
add
jb
pop
mov
and
rcr
les
(bad)
(bad)
in
mov
rcl
xchg
xor
repnz
shl
repnz
dec
xchg
push
xchg
jns
cmps
ror
sub
add
movs
inc
sbb
aas
arpl
sahf
aas
jecxz
add
pop
fs
adc
sbb
xor
xchg
mov
pop
fs
and
mov
cmp
sub
mov
jb
ss
dec
aas
retf
ficom
push
ja
adc
aaa
bound
sub
add
cmps
shr
aam
pop
test
jae
enter
mov
push
mov
lea
push
pop
mov
mov
(bad)
call
mov
stos
scas
std
dec
pushf
mov
lea
sti
inc
mov
mov
xlat
adc
stc
cmp
(bad)
sahf
mov
sahf
pop
pop
dec
jmp
les
add
out
ror
call
shr
add
loope
lock
xchg
xor
xchg
repnz
cli
test
ss
fucom
lods
sti
fucom
mov
loopne
sub
xchg
fsubr
mov
pushf
cmps
mov
addr16
(bad)
sub
xchg
push
pop
hlt
xchg
mov
pop
push
cdq
pop
pop
push
test
sbb
out
stc
data16
ret
and
in
inc
mov
cdq
sbb
jne
jle
sbb
test
gs
sub
in
mov
mov
push
mov
mov
outs
dec
test
adc
and
lock
inc
call
push
or
push
scas
pop
fstp
mov
mov
or
lds
push
fmul
mov
sub
sub
push
btr
ss
cmp
dec
sbb
jmp
sahf
mov
popf
movs
push
mov
adc
inc
sbb
dec
sbb
shr
jg
aad
add
pop
fild
stos
ficom
jnp
(bad)
popa
push
cmps
in
not
mov
push
fidivr
mov
or
fwait
mov
mov
sub
and
dec
sub
enter
aaa
add
hlt
call
pushf
xor
mov
or
pop
adc
pop
and
ja
arpl
jb
push
mov
imul
fstp
push
cld
mov
inc
loopne
test
sti
xchg
mov
sub
popa
sub
shl
jno
xchg
mov
call
popf
(bad)
sub
(bad)
mov
mov
psubusb
repnz
add
xchg
fwait
mov
inc
ret
retf
rcr
xchg
pop
sbb
ja
jmp
mov
imul
shl
pop
mov
mov
sbb
mov
push
inc
cdq
jne
dec
lods
gs
xor
ins
push
and
sbb
sub
push
sbb
push
pop
and
loop
imul
imul
test
(bad)
clc
test
nop
sub
sbb
adc
pop
adc
add
adc
mov
imul
movs
retf
aas
cmps
dec
jl
popa
cmc
out
gs
inc
sub
data16
xchg
xor
xor
jno
call
out
mov
xchg
imul
iret
scas
je
fwait
pop
int
mov
adc
retf
xor
cs
inc
pop
test
fidiv
sub
stos
adc
mov
(bad)
out
jmp
(bad)
dec
mov
mov
adc
and
dec
adc
mov
push
and
inc
jmp
cmp
add
add
cld
and
dec
cmp
xchg
in
int
div
pop
pop
pop
cmp
in
add
lea
lock
stos
mov
out
ret
int
aad
sbb
in
xchg
mov
in
jbe
push
(bad)
adc
icebp
xor
sub
adc
jmp
xchg
xchg
xchg
or
push
push
test
or
popa
(bad)
and
stc
out
xchg
lahf
add
mov
push
pop
stos
jbe
pop
jnp
xlat
xor
sbb
pop
jmp
aam
repnz
push
pop
sbb
sahf
icebp
sbb
push
sbb
xor
cdq
push
imul
xor
jge
icebp
retf
in
mov
call
lock
xchg
je
and
mov
retf
add
iret
inc
and
and
inc
xchg
pop
out
sub
dec
pop
push
mov
dec
jecxz
jmp
cmp
mov
xsha1
cmps
or
shl
jo
into
movs
inc
sbb
or
rcl
(bad)
fst
jmp
or
sahf
ds
and
cmp
add
mov
adc
fwait
out
jbe
add
mov
imul
cmp
pop
repz
jmp
sub
pusha
rol
cmps
mov
retf
fidiv
mov
inc
or
aad
jae
pop
ins
jmp
xchg
sub
sar
adc
push
aas
mov
pop
out
shl
and
mov
or
xlat
nop
xor
xor
pop
xor
aam
jl
sub
mov
jno
clc
mul
fcmovbe
sub
mov
ss
aad
xor
jo
imul
sbb
dec
cs
call
(bad)
xlat
cmc
movs
nop
(bad)
and
aas
les
mov
jg
das
ficom
jge
movs
xlat
xchg
or
cli
xchg
mov
xor
(bad)
fnstsw
sub
sbb
and
test
mov
ds
cli
jp
jge
xor
mov
sbb
call
call
jnp
dec
dec
in
ret
hlt
adc
adc
aaa
xchg
pop
push
jb
aad
xchg
fstp
fs
jmp
cmps
iret
jns
imul
cld
ja
mov
xchg
mov
or
cmp
test
jp
adc
stc
dec
pop
add
adc
mov
cmc
aad
mov
retf
xor
imul
pop
sub
cmp
jns
sbb
push
or
test
rol
repnz
pop
dec
pop
lods
scas
pop
in
and
mov
mov
dec
sub
dec
push
cmp
sbb
or
inc
jo
dec
scas
or
push
pop
push
add
cli
and
std
dec
adc
call
call
popa
test
(bad)
std
sub
pushf
cmp
addr16
push
aaa
lods
add
sbb
fstp
pop
pop
cmps
clc
adc
imul
iret
movs
bound
mov
cmp
mov
inc
neg
xchg
lods
or
and
and
dec
lods
loope
loope
loope
xor
mov
add
or
or
xchg
pop
ror
out
mov
and
push
cmp
out
mov
(bad)
jae
jmp
push
or
and
ret
sub
pop
(bad)
ins
jecxz
fist
cmps
dec
fs
dec
sahf
mov
inc
push
test
jb
sbb
sub
(bad)
mov
sahf
sbb
fucomip
aas
popf
loop
and
enter
pop
sbb
lock
inc
mov
jae
mov
add
xchg
adc
xchg
jmp
inc
mov
cld
jmp
shl
and
xchg
or
add
sbb
push
movs
sub
push
fcomp
pop
retf
shl
call
mov
pop
xchg
stos
inc
hlt
call
into
mov
cmp
inc
inc
lods
mov
sub
dec
xchg
repz
inc
jle
pop
and
cwde
dec
mov
or
inc
in
sub
ret
movs
mov
stos
jmp
psllw
stos
adc
rcr
fisttp
aad
or
das
imul
push
(bad)
les
fldenv
imul
or
cmps
popa
in
leave
push
or
push
jmp
test
loope
pop
retf
repnz
dec
jecxz
clc
repnz
aad
ins
or
pop
push
and
and
add
not
sbb
dec
jmp
lock
shr
ficomp
pop
popa
lahf
xchg
pop
sbb
mov
mov
dec
dec
out
xchg
shr
pop
jne
pop
call
sbb
repnz
push
sub
ja
push
inc
adc
icebp
add
sbb
imul
pop
xor
sar
mov
daa
movs
lea
mov
adc
idiv
xor
dec
cli
mov
mov
std
out
or
(bad)
ins
clc
xor
add
mov
out
pusha
push
sbb
sub
dec
sar
or
sbb
dec
in
jle
add
not
push
(bad)
or
shl
mov
aaa
(bad)
lods
(bad)
push
xor
popf
xchg
pop
stos
gs
gs
jae
prefetch
or
(bad)
pop
std
adc
jmp
loopne
(bad)
ss
or
test
mov
add
push
cmp
or
push
scas
ror
push
dec
and
push
adc
ja
lods
adc
sbb
test
gs
xor
jp
scas
mov
xor
aaa
loope
in
rcl
outs
fstp
push
push
int
and
push
popa
push
mov
mov
mov
xor
adc
retf
leave
data16
push
jae
mov
fsub
xor
mov
mov
out
lock
cs
cmp
repnz
xchg
ror
sub
mov
mov
data16
push
mov
(bad)
(bad)
js
jmp
fidivr
gs
mov
xchg
hlt
add
lods
push
retf
bound
fwait
addr16
cmp
pop
repz
and
(bad)
jne
ficomp
cmc
and
js
mov
and
mov
stos
pop
mov
(bad)
movs
mul
lods
in
aad
dec
cmp
xchg
sub
jl
xchg
fadd
mov
pop
enter
test
push
mov
cmps
popf
pop
gs
loop
mov
imul
popf
(bad)
xchg
cli
call
inc
scas
sub
sbb
lods
mov
das
and
sub
addr16
in
cmps
imul
xchg
in
cmp
cmp
leave
(bad)
mov
mov
jns
int3
clc
push
dec
and
jnp
dec
inc
mov
das
(bad)
add
(bad)
(bad)
icebp
xor
mov
pop
jmp
retf
mov
adc
inc
or
add
into
or
jecxz
push
call
std
sbb
inc
mov
push
jmp
imul
fbstp
out
(bad)
in
xchg
push
in
push
fadd
out
sub
push
adc
add
pop
pop
in
in
add
sti
sahf
sbb
movs
push
cmps
popa
xlat
(bad)
sub
mov
cmps
mov
inc
retf
cld
retf
and
(bad)
sti
test
je
jae
inc
cmp
leave
test
xor
push
push
in
mov
cwde
mov
mov
dec
shr
xor
out
lods
test
into
aas
jecxz
mov
push
clc
inc
inc
mov
int
out
loop
mov
push
inc
pop
pusha
call
(bad)
cdq
jecxz
mov
jge
jns
push
lock
and
data16
js
je
fisubr
sub
push
fimul
in
scas
jecxz
pop
adc
in
mov
xor
outs
mov
ins
(bad)
call
dec
mov
std
fld
loop
cmp
test
aas
es
add
sub
sbb
loopne
daa
aaa
mov
add
(bad)
push
dec
cmp
push
jge
in
loopne
and
(bad)
nop
push
int3
inc
add
add
ficomp
jge
mov
push
ret
pop
mov
arpl
dec
pop
dec
das
ins
sub
and
push
push
fsub
or
inc
xchg
lods
shr
clc
add
mov
call
cmp
dec
xchg
cwde
mov
sti
loopne
mov
fist
(bad)
rcr
test
push
dec
lahf
fsubr
jnp
push
add
cmc
pop
idiv
lock
inc
push
sbb
fbld
sbb
cli
dec
add
mov
lock
cmpps
lock
into
leave
push
enter
mov
mov
imul
and
adc
xlat
clc
ins
inc
dec
jo
sar
lea
pop
outs
sub
gs
jmp
arpl
push
adc
cmp
sti
adc
pop
add
bound
call
adc
or
jmp
(bad)
xchg
sub
aaa
into
int
pop
jnp
pop
jbe
push
retf
xchg
mov
out
das
popa
mov
jg
mov
push
(bad)
test
dec
mov
pop
add
jo
jg
adc
out
inc
enter
xchg
lods
lds
pop
imul
sub
fwait
cmp
sbb
sbb
dec
stc
jmp
pop
xchg
fwait
imul
pop
xor
shl
ins
jns
cdq
aaa
push
iret
cmp
xchg
aad
pushf
mov
adc
mov
pop
mov
loope
fldenv
mov
adc
mov
sar
aaa
ins
push
popf
sbb
mov
das
xor
jg
push
cmp
adc
add
repnz
mov
xor
and
enter
ss
and
dec
mov
cdq
addr16
cmc
xchg
push
mov
inc
dec
and
inc
in
enter
test
push
adc
lods
repnz
scas
pop
push
retf
jle
mov
test
dec
jns
lahf
adc
imul
retf
fcom
les
xchg
push
es
cmp
in
add
and
pop
sar
ror
jae
aam
lods
adc
jbe
xor
dec
xchg
xor
lahf
loopne
push
lahf
cmp
cli
lea
loopne
in
imul
push
pop
dec
das
nop
je
inc
cmp
hlt
mov
jne
pop
rcl
popf
(bad)
xchg
sub
retf
inc
inc
shr
popa
or
(bad)
pop
jl
mov
jg
sub
or
pusha
pop
push
sub
test
or
or
outs
xchg
mov
das
fdivrp
outs
xchg
iret
rcr
mov
(bad)
mov
sar
arpl
cmp
pop
dec
ins
dec
mov
pushf
xchg
ds
adc
cmps
scas
jmp
sbb
jb
cmp
jae
fidiv
dec
shl
ss
mov
and
jbe
dec
ror
and
(bad)
add
test
(bad)
mov
ja
mov
sbb
bound
cmps
add
inc
pusha
sub
shl
rol
dec
jl
jae
cmp
cwde
sub
retf
adc
fdiv
xor
(bad)
sahf
mov
clc
xchg
jl
ins
enter
sub
pushf
fiadd
outs
add
call
stc
sahf
push
cmp
vandnps
cmp
aam
sub
scas
jbe
pop
mov
test
dec
mov
js
cwde
jp
in
aas
push
adc
xchg
cmp
xlat
imul
test
xchg
push
daa
es
sti
xchg
int
or
jbe
dec
fwait
ins
push
jo
sbb
stc
pusha
je
add
shl
xor
jmp
outs
xor
mov
fld
movs
xor
cmp
adc
mov
cmps
out
int
adc
iret
scas
mov
(bad)
sar
gs
adc
push
and
inc
mov
(bad)
pmullw
lea
lods
and
sbb
movs
jp
cwde
add
xor
dec
aam
test
fst
jno
sbb
scas
addr16
push
test
inc
rcr
mov
fld
xchg
or
arpl
int3
call
or
shl
and
sub
push
dec
ins
add
rol
xchg
push
and
cs
jmp
dec
add
or
arpl
sub
inc
mov
mov
adc
add
jge
sbb
add
adc
inc
sub
pop
push
push
mov
xchg
adc
aas
xchg
inc
sub
xchg
jecxz
loope
arpl
xchg
pop
pop
sti
xchg
adc
sub
(bad)
aam
sub
(bad)
aad
add
into
ficomp
test
pop
fwait
xchg
test
(bad)
out
fcomp
shr
and
adc
mov
mov
push
xor
sub
inc
shl
lahf
in
mov
add
mov
stos
repz
push
dec
push
jno
enter
int3
mov
adc
push
mov
mov
mov
pop
pop
repnz
inc
push
adc
jmp
mov
inc
lds
fild
pop
push
iret
jbe
mov
popa
daa
mov
cmp
sbb
push
scas
dec
(bad)
je
push
xor
add
jae
jmp
fs
enter
or
call
mov
dec
clc
out
sub
add
sbb
pop
add
dec
scas
test
pop
lahf
and
adc
add
test
jge
xchg
push
dec
imul
add
and
test
data16
sub
mov
(bad)
(bad)
mov
enter
adc
or
nop
inc
test
xor
fnstcw
dec
loope
or
and
shr
or
(bad)
mov
(bad)
movs
out
fs
cld
hlt
setno
xor
mov
sbb
pop
jno
or
in
dec
bound
stc
or
xchg
dec
scas
in
in
xchg
fs
mov
call
xor
ror
dec
cld
pop
cmps
pop
fidivr
mov
hlt
and
mov
and
jnp
repz
adc
xor
or
shl
jg
push
cmp
ret
ficomp
cwde
data16
and
mov
(bad)
fdivrp
aaa
lods
jp
in
repz
sub
mov
adc
fstp
mov
cs
dec
lock
fwait
sub
push
je
pusha
xchg
sbb
mov
mov
fiadd
or
add
mov
pop
mov
pop
dec
popa
and
xor
push
imul
enter
jae
(bad)
pop
mov
dec
scas
cmps
das
clc
push
bound
xor
mov
push
outs
lock
adc
stos
jg
mov
cmps
dec
repnz
js
or
cld
xchg
jbe
lods
div
ret
push
xor
cmp
in
(bad)
jns
div
jne
and
ja
cmp
pushf
ret
int
lds
in
xor
sub
jp
rcl
(bad)
into
mov
(bad)
icebp
push
inc
cmc
add
clc
into
jne
dec
sbb
in
int3
in
imul
pop
xor
xchg
inc
dec
pusha
xchg
mov
out
dec
add
adc
mov
pop
fcos
int
test
mov
push
sbb
adc
mov
addr16
sahf
iret
cld
pop
mov
aad
(bad)
out
bound
and
loop
or
dec
pop
add
xor
aad
call
adc
mov
es
add
cmc
xor
mov
pop
jmp
sbb
cmp
jmp
xchg
movs
pushf
mov
fist
imul
into
push
mov
cmp
js
fcmovnu
push
je
out
jno
mov
in
cmp
icebp
xor
(bad)
fst
movmskps
xlat
pop
mov
dec
shl
and
arpl
cmp
test
jo
pop
dec
or
stos
inc
jl
cmp
pop
inc
sbb
dec
add
inc
push
ds
shr
mov
push
jno
mov
dec
add
imul
sub
cmp
into
cdq
xchg
add
div
mov
ficomp
push
jp
sub
sub
out
mov
or
sbb
mov
pop
bound
cmps
add
sub
(bad)
jmp
jle
hlt
stos
out
adc
dec
or
add
mov
xlat
jno
popf
sub
mov
and
dec
or
cmp
inc
inc
inc
and
enter
cmp
dec
mov
push
retf
inc
movs
push
pop
xchg
(bad)
iret
clc
inc
stos
pop
jmp
add
push
leave
adc
sub
pop
sub
mov
push
ja
stos
test
fimul
adc
in
sbb
push
fisub
push
jnp
(bad)
aam
xchg
repnz
cs
xlat
inc
mov
fimul
hlt
xchg
(bad)
mov
fadd
bnd
mov
push
movs
rcr
rol
xchg
dec
push
xor
ds
jle
mov
inc
mov
addr16
aam
sbb
imul
or
xor
nop
cmp
and
mov
pop
add
mov
int
pop
movs
mov
mov
dec
bound
pop
ins
jle
pop
mov
cmp
fs
xchg
push
int3
jg
push
cdq
outs
xor
stos
fs
push
mov
mov
sbb
jo
popa
mov
adc
dec
shl
mov
test
cwde
rcr
and
mov
fsubr
mov
jae
jne
mov
dec
shl
sbb
jns
inc
inc
call
xor
push
stos
sub
fld
mov
mov
xor
mov
fucom
retf
xchg
add
mov
out
leave
aam
fwait
push
adc
aam
in
or
xor
das
popf
add
and
cwde
addr16
leave
loop
lea
mul
scas
push
loopne
in
repz
inc
pop
push
das
adc
jb
xor
outs
xor
and
js
add
dec
das
jmp
xchg
call
aaa
int
mov
cmp
fnstcw
mov
push
hlt
in
sbb
enter
push
push
ins
mov
les
cmp
jle
int
jbe
push
in
and
cdq
lock
ret
dec
test
ret
jns
add
cmps
sbb
lds
ss
inc
sub
loopne
jne
(bad)
out
scas
sub
jmp
and
xchg
jle
addr16
clc
loope
cmp
push
fucom
and
cmps
in
nop
leave
fisttp
addr16
xor
cmp
sti
jecxz
sbb
fbld
jnp
int3
ror
ja
adc
retf
sbb
add
dec
add
or
push
mov
mov
stc
dec
push
fs
mov
in
push
add
mov
xchg
push
stos
fisub
pop
xor
adc
xor
les
cs
iret
cmps
lds
retf
icebp
cmps
sbb
sub
or
jo
cmp
pop
push
leave
cli
addr16
cs
in
jbe
js
mov
mov
mov
cmps
cmp
pop
push
outs
jns
popf
mov
pop
cmps
sbb
(bad)
mov
pop
inc
and
js
xchg
jl
sbb
ror
fwait
mov
popf
mov
mov
inc
mov
loop
movs
sbb
fst
mov
push
out
and
(bad)
pop
rol
cmp
add
imul
xor
sbb
xchg
sbb
or
mov
imul
outs
ins
mov
(bad)
call
out
aaa
clc
xchg
mov
rol
xchg
inc
add
and
aas
sub
ins
jns
mov
cwde
add
loop
out
jl
outs
push
xor
and
push
sbb
cmp
jge
or
mov
(bad)
(bad)
xlat
(bad)
mov
sub
sar
xor
fcom
retf
imul
(bad)
dec
lds
sbb
aad
mov
sub
lds
or
movsx
enter
aaa
ficom
iret
mov
dec
cmp
mov
out
int3
dec
in
loopne
test
outs
sti
ret
jne
add
ror
popa
int
push
retf
inc
ror
mov
loop
adc
out
ror
cmp
or
ret
sahf
(bad)
xchg
jge
bound
cmc
adc
fwait
xchg
retf
mov
fimul
pop
pop
mov
jmp
test
fwait
xor
enter
cmc
(bad)
cld
es
inc
sub
fisttp
std
(bad)
lahf
cdq
cmp
loope
pop
mov
or
add
dec
pop
xchg
fnstsw
(bad)
loope
xor
sub
jmp
mov
or
lods
je
addr16
outs
sub
aad
mov
fld1
test
jl
in
xor
ss
ss
scas
fwait
popa
rol
stos
or
adc
ins
sbb
sub
xor
adc
sbb
xchg
jmp
mov
fwait
xlat
cmp
add
mov
fwait
or
inc
pop
(bad)
inc
lock
ficomp
(bad)
jmp
(bad)
adc
aaa
fiadd
sbb
out
dec
mov
dec
sub
lds
mov
imul
and
push
and
xchg
call
pop
js
xchg
mov
jp
ins
(bad)
cmp
sub
shr
dec
fsubp
add
dec
mov
clc
les
push
inc
pop
retf
call
out
sub
sti
jmp
add
test
test
pop
inc
retf
add
into
sbb
cmp
ret
ins
retf
ret
cmps
jns
shl
bound
and
mov
(bad)
pop
fnsave
jle
dec
out
js
leave
dec
sub
push
mov
hlt
cwde
dec
or
scas
adc
inc
shr
call
ins
fisubr
or
jmp
pop
int3
fdiv
fistp
js
add
mov
cmp
fild
adc
inc
pop
xchg
mov
in
int
adc
loop
stos
and
pop
rcl
and
cld
jb
sbb
push
test
js
push
xchg
scas
lock
push
pusha
xor
std
mov
pop
add
sbb
shl
das
outs
loope
mov
ja
or
sub
push
fisub
shr
rol
add
dec
jb
mov
mov
sbb
sub
xor
ret
cmp
sahf
dec
pop
shl
and
pop
daa
lock
call
or
repz
rol
dec
aam
pop
es
mov
lea
fcmovnbe
dec
pop
cmps
push
push
je
add
push
jecxz
sub
mov
pop
jne
shl
pop
sub
xor
push
hlt
in
mov
lds
push
lock
aad
pop
(bad)
test
fisttp
and
jg
loop
adc
test
push
push
out
fild
stos
icebp
pop
mov
adc
push
sti
mov
retf
clc
push
jb
les
xchg
jmp
pushf
jg
outs
xor
jnp
fwait
jmp
(bad)
fs
xor
sub
add
dec
xor
loop
rol
lock
adc
push
arpl
xor
sbb
js
xor
in
xlat
pop
sbb
xchg
ja
dec
jo
shl
in
fucomip
push
lods
(bad)
in
cmp
jl
and
pop
mov
mul
add
mov
scas
mov
movs
imul
and
cmp
or
sub
fnstcw
and
jle
cli
mov
lock
dec
idiv
push
push
push
cmp
sahf
sbb
mov
push
xchg
push
sub
mov
cmp
lock
sub
fnstcw
xor
fs
mov
call
cld
pop
iret
in
pop
add
fist
ret
repz
mov
xchg
xacquire
cdq
leave
aad
xlat
(bad)
sbb
rol
repz
das
lods
in
or
dec
mov
inc
jge
(bad)
inc
test
(bad)
mov
pop
call
push
jl
clc
jo
(bad)
xchg
call
mov
xchg
test
movs
pop
pushf
mov
xor
jle
(bad)
nop
sbb
add
add
aad
adc
mov
ss
cdq
jecxz
icebp
ja
cs
stos
ins
imul
fisttp
ss
popa
ja
pop
add
stos
fs
in
cmp
add
jmp
sbb
in
(bad)
clc
push
inc
retf
xor
mov
cmps
(bad)
pop
(bad)
pop
and
fwait
dec
ror
xchg
lock
int
dec
(bad)
jp
sbb
fcmovb
dec
stc
sbb
(bad)
stos
push
sahf
pushf
push
sub
clc
scas
add
in
push
adc
es
mov
jle
inc
push
xor
xor
dec
gs
outs
mov
mov
push
adc
in
push
xchg
mov
jp
and
inc
jmp
push
mov
cld
test
call
push
xor
pop
outs
pop
call
stos
sub
arpl
cmp
cmp
inc
jno
xchg
adc
sub
test
shr
out
aaa
(bad)
dec
shr
mov
repz
pushf
fld
push
lods
dec
mov
dec
jmp
sbb
call
je
inc
imul
add
pop
sbb
pop
out
xlat
hlt
dec
pop
dec
fsubr
out
jnp
imul
test
rol
outs
jecxz
mov
push
xchg
add
jl
in
mov
adc
fild
jno
push
add
out
lock
test
inc
iret
gs
dec
pop
fcmove
out
pusha
or
dec
cmp
mov
fmul
mov
test
add
ficomp
mov
outs
ins
fnstcw
test
mov
or
jl
movs
je
inc
push
add
or
mov
push
lds
jbe
sub
scas
shl
sahf
or
inc
push
push
popf
dec
push
mov
xchg
imul
pop
jb
xor
out
or
ret
adc
sub
psubq
in
mov
cmp
(bad)
mov
call
out
cmps
or
loop
imul
and
pop
inc
mov
js
fist
mov
lods
push
mov
clc
rol
mov
cmc
mov
ins
adc
xor
inc
pop
test
icebp
cdq
mov
push
mov
int
sub
fcomp
push
push
xlat
xchg
arpl
jecxz
mov
cmp
loop
dec
fld
dec
inc
loopne
in
sub
jne
enter
jmp
sub
(bad)
loopne
inc
test
cmp
icebp
sbb
or
retf
out
fstp
test
mov
mov
pusha
fidivr
inc
inc
push
jo
pop
aam
enter
jnp
inc
xchg
or
xchg
rcl
ins
push
leave
ins
push
sbb
dec
inc
cmp
cmp
push
jmp
scas
jbe
fsubr
and
mov
sub
pusha
or
cdq
dec
pop
aaa
add
jmp
les
sub
inc
data16
push
cvtpi2ps
pop
retf
daa
jb
pop
inc
dec
(bad)
pushf
fcmovnb
retf
mov
xor
push
neg
xchg
jp
adc
les
mov
sbb
das
jo
out
bound
test
push
js
push
add
fcomp
push
xor
shl
movs
mov
fild
push
stos
inc
pop
mov
das
add
adc
add
aas
daa
addr16
pushf
inc
mov
xor
clc
sbb
or
shl
xchg
loope
add
and
mov
mov
nop
mov
pop
jo
fld
(bad)
cld
mov
movs
cmc
in
mov
adc
or
rcr
ss
stc
nop
xchg
sbb
rol
push
jp
mov
aam
out
stos
fs
repz
mov
ds
xchg
jb
shl
mov
pop
mov
adc
sar
enter
sbb
inc
retf
aas
mov
or
call
mov
or
xchg
push
aam
add
xchg
push
aaa
mov
(bad)
add
xor
stos
and
push
sub
outs
cmp
dec
out
or
xlat
xor
cs
adc
pop
jg
add
xor
mov
mov
inc
and
push
cs
adc
xchg
pop
cmp
jle
mov
test
xor
loope
div
dec
jne
lock
hlt
arpl
mov
fs
mov
lods
xor
jle
call
dec
rol
xor
push
xlat
push
cmp
sbb
call
enter
and
stos
push
sbb
jmp
mov
retf
jmp
dec
inc
mov
(bad)
data16
aas
inc
dec
pop
inc
in
add
inc
xchg
iret
cwde
jns
cmovno
in
fcom
test
push
push
pop
cmp
cld
sbb
mov
push
into
fwait
xor
mov
pop
mov
push
icebp
ror
js
sub
or
xchg
movs
mov
adc
jmp
iret
pop
fbld
fidiv
jg
clc
and
call
pushf
(bad)
lahf
ror
(bad)
test
ins
push
into
es
mov
or
dec
retf
movs
cmc
sahf
repnz
jle
sbb
mov
and
inc
dec
call
jns
std
jp
push
je
push
pusha
pop
imul
sti
and
cld
jge
push
fld1
cli
fimul
(bad)
fbld
adc
or
add
jb
mov
pop
jmp
test
and
arpl
xchg
pop
es
rcr
jmp
rcr
sbb
ins
lea
ds
pop
ds
mov
inc
les
imul
adc
loopne
xor
push
adc
bound
mov
das
adc
dec
shl
push
mov
ins
sbb
call
lods
lods
mov
inc
ins
sar
push
mov
mov
les
add
dec
(bad)
cmc
bound
adc
aaa
movs
arpl
adc
cs
cmp
dec
mov
stos
push
cmp
mov
gs
xchg
(bad)
(bad)
dec
stos
popf
mov
es
enter
inc
jo
clc
cmp
popf
(bad)
(bad)
xor
add
inc
mov
in
sub
call
js
ds
jg
shr
inc
jl
mov
ficom
fsub
or
shr
jne
(bad)
out
frstor
add
in
sub
wrmsr
pop
pusha
(bad)
in
shr
(bad)
retf
pop
test
mov
lock
and
mov
popa
mov
test
or
js
les
mov
mov
push
test
xchg
push
mov
daa
fmul
or
and
mov
and
ret
in
test
xchg
out
inc
sbb
pushf
ja
pop
jle
imul
lea
mov
xor
(bad)
ja
test
push
hlt
lds
pop
loopne
aaa
(bad)
push
(bad)
gs
cwde
cmps
cmps
push
stos
scas
imul
pop
or
sbb
scas
test
push
repz
push
add
inc
ret
mov
fsubr
mov
test
sbb
ret
sbb
div
pusha
adc
ins
add
loop
(bad)
xor
pop
fiadd
je
outs
mov
or
cld
xlat
adc
dec
mov
ds
push
int
enter
lds
retf
imul
or
cmp
adc
aaa
daa
and
stos
imul
adc
or
mov
fnstenv
pusha
ja
or
push
xchg
retw
push
cmps
scas
outs
sbb
js
pop
(bad)
sub
jmp
arpl
call
shl
outs
sti
cmp
outs
rol
pop
push
sti
lea
sbb
dec
push
adc
into
stc
clc
(bad)
in
push
jno
test
xchg
or
mov
cmp
adc
lods
daa
fisubr
jo
dec
adc
xlat
mov
imul
xchg
ds
ja
jne
in
fldenv
cmp
es
pop
jo
scas
aas
or
repz
lock
inc
adc
lods
les
mov
adc
imul
or
add
jae
adc
xchg
cmc
cdq
mov
sbb
outs
mov
jl
pop
lds
loopne
sbb
es
lahf
mov
mov
xlat
sub
(bad)
(bad)
loop
jp
sbb
jmp
gs
add
pop
lahf
push
int3
sub
push
dec
mov
jmp
imul
add
ins
and
dec
(bad)
outs
add
cld
rcl
adc
sbb
mov
fisub
sar
popa
jle
imul
xor
push
add
jno
jle
adc
sbb
pop
ins
jle
xor
adc
push
pop
sahf
sbb
mov
push
dec
jmp
stos
pop
in
fsubr
pop
or
mov
add
out
mov
fild
mov
push
mov
ja
test
or
sar
gs
repnz
pusha
jae
add
jecxz
adc
call
push
outs
xor
push
addr16
in
sbb
cmp
aaa
push
hlt
dec
es
sahf
fild
rol
jnp
xchg
fild
lods
ins
imul
add
mov
add
out
arpl
ins
scas
icebp
int3
and
push
xor
cmc
cmps
add
int3
outs
sbb
and
add
adc
jmp
mov
test
push
or
stos
hlt
sbb
fnsave
and
test
cmps
add
mov
inc
dec
or
xchg
jno
push
scas
gs
cmp
xor
fwait
pop
jns
adc
cmps
mov
inc
loope
call
or
cli
jae
mov
aad
sti
shr
cmps
stos
into
push
cmp
sahf
add
xor
push
mov
pop
jmp
sub
out
in
repz
stos
cdq
add
xchg
ret
push
xor
cdq
aad
mov
add
iret
(bad)
popa
pop
fcmovb
dec
fwait
call
out
hlt
mov
and
or
jno
sbb
popf
lea
and
outs
sbb
inc
ret
dec
cwde
sahf
jns
mov
rcl
aas
jmp
mov
sub
shl
jae
mov
mov
mul
jns
cs
push
jp
add
pusha
push
lods
dec
mov
dec
sub
das
push
inc
xchg
adc
or
test
and
cmp
int3
or
inc
mov
xor
cs
movs
mov
sub
shl
xor
aas
sbb
dec
or
cli
sbb
cdq
pop
aas
(bad)
aas
add
push
ret
cs
xor
push
lods
popf
dec
mov
(bad)
out
test
mov
cmp
sub
push
sbb
fld
movs
imul
sbb
sub
cwde
fisttp
call
fxch
push
dec
icebp
(bad)
sub
cwde
test
mul
ss
xchg
push
add
iret
lods
out
inc
inc
div
inc
adc
jmp
inc
mov
in
mov
mov
push
outs
retf
add
pop
mov
call
xor
xchg
in
lods
dec
rol
(bad)
dec
movs
sub
test
aam
stc
ret
mov
icebp
call
enter
sahf
cmc
push
loop
or
mov
cs
rcl
adc
cmp
test
mov
fild
dec
imul
cmp
popa
gs
arpl
(bad)
and
retfw
outs
lea
cmp
push
cmps
or
bound
mov
cmp
adc
fld
dec
outs
movs
or
pop
ret
fwait
xchg
shr
fistp
inc
mov
call
mov
inc
xchg
add
pop
add
mov
xlat
lahf
je
in
pop
ss
pop
mov
movs
adc
pop
call
xlat
data16
dec
shl
je
xor
mov
stos
and
(bad)
fucomp
pop
cmp
out
out
and
push
cmps
sbb
out
out
dec
sub
mov
aaa
lock
cmc
mov
clc
pushf
fidivr
adc
test
dec
mov
es
mov
imul
pop
test
mov
pop
shl
scas
je
adc
enter
cdq
pop
sub
dec
loop
je
retf
push
xchg
mov
fnclex
aad
fcmovnu
sbb
jmp
jmp
nop
retf
jno
in
lea
rcl
or
cdq
aad
cld
xor
stos
jmp
push
add
mov
in
mov
cwde
call
setp
inc
bnd
sbb
mov
(bad)
movs
and
jo
push
neg
adc
sti
dec
ficom
cmp
dec
dec
in
add
adc
inc
mov
push
shl
jmp
pop
cmp
pop
ins
jae
mov
jmp
call
mov
into
push
lahf
fdiv
into
sub
mov
adc
inc
mov
cmps
adc
inc
push
leave
hlt
js
icebp
fcomp
adc
lods
or
out
je
jae
test
push
sbb
outs
div
add
sub
mov
rol
out
jne
ins
adc
sub
cmp
aaa
clc
mov
xchg
push
jl
add
dec
pop
in
clc
sub
jne
popf
imul
inc
test
push
repnz
js
sbb
call
inc
pop
push
adc
add
mov
mov
xor
cmp
xlat
push
mov
popf
ret
imul
stos
mov
mov
sbb
pop
dec
leave
sub
pop
mov
sbb
pop
mov
test
retf
pop
or
mov
cmp
mov
add
aad
daa
scas
and
sbb
das
add
inc
pop
mov
cmps
retf
popf
ficom
sub
mov
test
stc
mov
mov
call
(bad)
addr16
mov
mov
cmc
sub
jp
inc
and
cmp
aas
test
xchg
lds
adc
cmp
pop
push
in
add
cmps
mov
push
test
or
cld
stc
(bad)
imul
or
fucomip
jbe
add
dec
outs
pop
sub
loop
add
jmp
push
mov
sub
cmc
test
loop
dec
call
mov
pop
inc
mul
retf
push
std
xor
cmps
lahf
out
punpckldq
popa
and
mov
retf
sbb
pusha
mov
sahf
repz
sti
iret
adc
enter
xor
pop
and
sbb
rcl
cmp
call
jge
pop
fwait
jmp
add
jne
(bad)
leave
adc
cdq
and
scas
out
shr
icebp
xor
xor
outs
or
cs
fcom
pop
ret
inc
inc
clc
jl
and
mov
pop
xchg
jo
cmps
ror
mov
jne
mov
pop
xchg
push
or
sub
xor
xor
ins
stos
jp
push
clc
and
sbb
mov
test
out
cwde
add
out
bound
xor
dec
(bad)
sbb
xchg
mov
jmp
imul
dec
ins
mov
fs
jp
popf
jp
leave
test
retf
inc
add
push
inc
iret
mov
and
retf
aas
mov
dec
sbb
mov
cmp
stos
movs
adc
sub
jb
test
adc
mov
sub
shr
push
sbb
fiadd
(bad)
mov
je
jp
pop
sub
addr16
loope
in
cmp
test
mov
pop
fstp
gs
loopne
push
push
test
jmp
int
xlat
inc
sar
mov
dec
cs
movs
xor
sub
push
cmp
mov
mov
scas
scas
lds
cld
xchg
popa
ret
add
mov
or
pusha
aaa
movs
fisttp
ret
enter
adc
cmp
out
dec
inc
mov
pop
out
gs
bswap
(bad)
iret
fisubr
xchg
mov
jns
jnp
mov
inc
jne
mov
iret
xor
es
js
mov
jo
call
aam
cmp
stc
(bad)
xchg
aaa
es
cld
adc
cmp
ror
sar
arpl
js
and
sbb
rcl
arpl
pop
add
rcr
xor
and
mov
gs
movs
fld
pop
fcomp
test
xchg
sbb
test
imul
ins
sub
lahf
xchg
xchg
imul
mov
mov
pushf
push
pusha
sub
mov
and
jae
pop
out
clc
ins
xor
int
fisub
ins
aaa
adc
js
push
and
rcr
scas
imul
pop
in
jge
pusha
pop
xor
test
clc
repz
call
(bad)
ss
mov
jle
mov
int
outs
retf
hlt
loopne
cmp
dec
pushf
add
sub
in
dec
inc
sub
(bad)
fisub
cmp
inc
bound
mov
jnp
inc
les
mov
jo
pop
cwde
jo
push
push
or
jge
in
sbb
call
(bad)
sub
pop
(bad)
into
popa
lods
movs
out
ja
jae
add
gs
ins
adc
cmp
cli
in
dec
mov
mov
sub
fst
stos
or
mov
or
push
inc
rol
xor
pop
inc
sbb
pop
sub
call
movs
in
fwait
mov
shl
outs
adc
mov
bound
or
add
pop
rep
fbstp
jecxz
or
push
jns
lods
sub
or
sub
retf
mov
jmp
and
(bad)
stos
enter
test
cmc
cli
pop
lds
xchg
or
in
cmps
pop
cmp
outs
int3
pop
ficom
cmp
lds
rol
pop
xchg
mov
adc
mov
and
clc
pop
xchg
rol
add
jae
stc
fstp
fsubp
sub
ret
inc
push
dec
pop
pushf
mov
mov
hlt
shr
and
and
dec
cld
push
add
cmp
inc
aad
scas
fsub
mov
inc
xchg
xchg
imul
cmp
add
cmp
call
(bad)
jne
iret
fdiv
adc
push
clc
inc
and
jg
daa
mov
call
fild
test
jl
jmp
push
clc
or
mov
mov
push
add
push
push
movs
rcl
sub
fcomp
push
cmp
imul
or
and
sbb
fdivr
xchg
dec
(bad)
in
mov
dec
push
and
adc
adc
call
push
shl
xchg
sbb
out
lahf
js
inc
hlt
jbe
sbb
es
pop
pop
jbe
pop
jae
pop
fs
test
xor
jo
xor
push
lods
xor
sbb
cld
and
inc
mov
sbb
stos
(bad)
push
xor
xchg
rol
push
xchg
jle
and
scas
fnstsw
adc
add
ja
and
add
inc
pop
repnz
push
cmps
out
mov
pop
(bad)
aam
aaa
or
in
or
(bad)
rcr
bound
test
xchg
and
iret
out
or
sub
imul
push
pusha
cmp
adc
stos
test
inc
std
add
imul
pop
imul
and
in
adc
push
pop
js
pop
xchg
jb
jg
mov
stc
frstor
sub
mov
cld
jecxz
lock
aaa
mov
scas
cmc
pop
jns
inc
and
outs
inc
or
or
and
xor
pop
ret
xor
out
iret
shl
sub
jb
loop
retf
inc
adc
inc
and
cmp
add
dec
test
sub
sahf
cld
pop
shr
jbe
lahf
ds
pop
das
jle
aaa
icebp
int3
rol
(bad)
jns
cwde
gs
mov
popa
stos
mov
adc
or
dec
jbe
xor
out
addr16
lods
jge
stc
nop
dec
mov
xchg
fadd
sub
pop
cmp
jg
or
std
icebp
mov
(bad)
mov
out
mov
fist
pop
test
cmovb
pop
pushf
push
(bad)
adc
div
add
xchg
dec
cld
addr16
cwde
test
pop
push
sbb
mov
mov
scas
pop
popa
inc
xor
dec
fdiv
repz
inc
in
xor
sub
retf
test
cli
mov
jne
mov
int3
dec
xchg
int
ins
in
cmp
icebp
push
stos
sbb
mov
or
stos
dec
xchg
mov
inc
je
dec
scas
scas
push
mov
hlt
test
push
mov
sbb
pop
mov
jl
or
add
lds
cdq
mov
cwde
outs
pop
cmp
add
xchg
stc
(bad)
dec
mov
les
in
lahf
inc
cmp
jp
pop
outs
xor
dec
lods
mov
test
and
add
imul
adc
inc
out
or
sub
cmp
ja
push
les
loopne
jge
jo
jge
movs
(bad)
cmp
push
mov
das
ins
arpl
sub
push
test
loop
dec
mov
inc
imul
cmp
mov
sbb
movs
hlt
popa
mov
out
shr
mov
in
call
jle
push
jmp
pop
add
(bad)
pop
sub
test
arpl
xchg
push
mov
adc
fld
aas
out
and
mov
mov
js
das
sub
ja
out
jg
test
ret
and
mov
mov
xor
jmp
jl
or
retf
pop
add
sub
mov
jnp
(bad)
test
out
neg
retf
pop
mov
outs
cmp
outs
dec
scas
imul
pop
daa
inc
dec
or
lock
mov
or
hlt
sar
xor
js
mov
test
test
inc
sbb
push
add
ret
add
pop
and
leave
cmp
xchg
jne
or
loopne
outs
out
xchg
push
leave
fimul
(bad)
pushf
xor
addr16
(bad)
movs
inc
cmp
push
jmp
addr16
mov
cmps
jns
out
cmps
cmp
into
ins
jns
repnz
pop
mov
outs
jno
mov
xchg
jl
rcr
cs
mov
sbb
jne
jecxz
fadd
add
loopne
call
movs
add
js
cmc
pop
in
mov
addr16
daa
shl
pop
stos
cmp
xchg
ins
or
cmc
pop
pusha
gs
lds
sti
mov
dec
test
and
repnz
sbb
imul
add
ins
sti
arpl
out
pop
inc
(bad)
mov
outs
mov
mov
push
sub
test
xor
mov
mov
sub
vpunpckhbw
sub
ins
inc
dec
lds
daa
xchg
adc
dec
scas
xor
mov
xchg
int3
push
and
lds
mov
pop
xchg
or
push
fimul
push
sbb
pop
ret
xchg
xchg
out
push
adc
retf
dec
bound
cmc
inc
and
sub
(bad)
fst
xchg
xchg
inc
mov
fnstenv
push
add
lds
and
shl
or
leave
out
daa
stos
push
sar
in
int3
push
pop
outs
ja
mov
push
jg
out
fist
test
xchg
inc
sbb
add
sti
xlat
repz
ds
or
shr
push
xor
sbb
mov
or
je
dec
xlat
xor
fmul
aaa
ins
repnz
pushf
int3
cmp
xchg
stos
or
jl
cwde
ret
arpl
dec
push
sbb
dec
mov
test
dec
and
out
dec
(bad)
cmp
add
movs
js
nop
inc
sbb
mov
mov
aaa
dec
push
sbb
ins
jb
inc
mov
jg
jmp
jg
jge
jge
outs
iret
pop
je
or
pop
cmp
sbb
mov
push
and
mov
leave
mov
mov
adc
pop
sub
test
lds
jecxz
pop
ds
imul
inc
and
xchg
(bad)
xor
cli
xor
sbb
mov
pop
mov
test
(bad)
fs
xchg
out
adc
xor
cmp
dec
std
adc
inc
mov
dec
and
int
ficom
dec
imul
pop
fs
gs
mov
or
out
cld
and
push
imul
mov
xor
fnstsw
push
jns
or
push
call
out
mov
and
lock
mov
loopne
xchg
pop
out
mov
and
jp
stos
js
inc
push
push
dec
movlps
je
bound
fistp
and
xor
pop
repz
mov
rcl
cwde
mov
je
test
jnp
ins
cld
adc
scas
cs
sbb
sub
xor
jnp
sbb
loope
mov
xlat
daa
repnz
xor
xchg
ror
push
push
pop
and
clc
mov
and
adc
dec
jecxz
pusha
add
inc
ins
rcl
dec
xor
(bad)
mov
leave
add
into
xchg
mov
cli
xchg
popf
jbe
ficomp
int3
xchg
or
inc
add
jb
jecxz
test
sub
in
and
mov
xor
inc
fistp
fild
jle
adc
aaa
mov
clc
pusha
(bad)
dec
xor
inc
cmp
dec
mov
shr
pusha
ret
ins
pusha
adc
icebp
cmp
xchg
mov
jmp
push
pop
inc
jne
xor
mov
frstpm(287
ss
ret
mov
jmp
(bad)
addr16
test
mov
push
xchg
fwait
ds
inc
out
mov
into
pop
(bad)
pop
sbb
popf
push
adc
sbb
inc
(bad)
(bad)
std
fwait
or
dec
push
(bad)
adc
mov
scas
repz
call
popf
mov
sub
cli
pop
sub
sbb
xor
mov
js
jae
sub
ficomp
and
jp
cmc
lea
jb
(bad)
daa
pop
push
pop
retf
ja
leave
mov
das
and
sub
call
scas
cli
sbb
adc
cmp
add
sub
js
mov
loop
pop
out
and
outs
fldcw
test
jge
ins
xchg
stos
out
sub
add
adc
popf
and
nop
dec
test
jnp
push
lahf
push
cwde
fldcw
dec
hlt
inc
in
jl
jno
dec
jle
data16
popf
in
jbe
rcr
lock
dec
loop
cmp
out
jnp
outs
iret
scas
cmps
ret
(bad)
sub
es
jne
sar
adc
lahf
inc
inc
push
jmp
mov
jp
imul
or
int3
dec
test
lds
xor
out
test
push
lods
inc
leave
push
jns
punpckhwd
cmc
fcmove
popa
mov
pop
loop
xchg
xchg
dec
fs
mov
test
bound
movs
lods
sub
ins
adc
xchg
enter
jbe
add
out
rcl
popa
aad
sub
xchg
int3
xlat
mov
loope
cmp
(bad)
dec
xor
in
and
pop
shl
xchg
cmps
pop
sub
fidiv
add
adc
lds
cli
sar
push
push
fcmove
sbb
popa
imul
stc
jnp
je
and
ret
adc
or
adc
cmps
lods
mov
dec
retf
push
cdq
push
xchg
xlat
sub
hlt
and
cli
add
pop
cmp
pop
mov
mov
in
jae
cmps
adc
pop
out
xchg
mov
dec
scas
jmp
fsubr
cmp
cdq
adc
popa
mov
sub
xchg
cld
cmc
or
mov
aam
pop
mov
push
cs
sbb
data16
retf
rcr
sub
aam
lods
xchg
inc
sub
sbb
stos
outs
xchg
sub
in
outs
add
xor
add
fwait
push
pop
adc
aam
mov
stos
sub
dec
outs
mov
xor
mov
imul
(bad)
out
sub
(bad)
jmp
sub
lahf
jp
rcl
cmp
jle
mov
or
sti
push
add
sbb
cmp
jp
jle
push
dec
jns
ret
clc
dec
xchg
fmul
jp
jo
imul
jp
clc
loope
xchg
xchg
scas
cmp
dec
sub
(bad)
pop
xor
scas
movs
xchg
pop
in
mov
xor
mov
mov
xor
xchg
mov
or
or
test
inc
in
ins
xor
in
or
add
sahf
test
fst
cmp
lock
retf
jp
push
ret
mov
and
fnstcw
mov
push
jb
daa
je
(bad)
(bad)
add
ret
and
repz
jg
ins
aam
in
dec
push
and
ret
add
enter
mov
out
jb
shr
jne
pop
sbb
icebp
not
je
imul
add
jns
call
mov
cmp
or
adc
cmp
xchg
and
cmps
sbb
pop
pop
call
push
dec
mov
dec
xchg
xor
sub
shl
cmps
lahf
(bad)
pop
js
cwde
push
or
cmp
xchg
mov
out
push
unpcklps
mov
mov
int
cmp
push
push
push
data16
and
ficomp
daa
(bad)
xchg
shl
adc
leave
stos
xchg
or
jno
sahf
outs
in
push
xor
dec
scas
mov
sub
out
xchg
push
addr16
mov
imul
mov
xlat
fistp
fwait
add
or
fcomi
pop
sub
inc
adc
stc
test
xlat
jno
inc
cmps
add
pop
stos
push
sbb
push
(bad)
mov
mov
sbb
pop
clc
xchg
mov
call
fsub
push
sub
or
sub
pop
and
test
clc
aas
push
movs
std
sbb
cmps
push
cmc
dec
retf
shl
sti
movs
imul
ror
cmps
push
cmp
push
pop
es
cmp
cmc
dec
cmps
mov
jp
in
and
pop
daa
or
add
jno
data16
iret
adc
sbb
adc
fidivr
sar
inc
pop
icebp
cs
dec
pop
out
xchg
dec
daa
(bad)
jp
pusha
mov
mov
xchg
cmps
movs
dec
fdivr
in
xor
jnp
xchg
fwait
pop
or
push
shl
xlat
int3
sbb
adc
out
adc
cmps
js
sbb
push
and
(bad)
cmc
or
mov
les
lds
cmp
pop
cmps
cs
addr16
sub
push
int3
xchg
iret
push
int
(bad)
ja
mov
test
or
lock
retf
or
aad
arpl
mov
jmp
paddq
sbb
xchg
sub
(bad)
cmp
or
(bad)
div
cmp
hlt
ds
xchg
xchg
lock
ret
jmp
ret
loop
push
lds
xchg
movs
in
mov
fisub
adc
mov
pop
call
add
lea
adc
es
mov
ins
mov
div
mov
leave
jmp
adc
out
stos
leave
(bad)
shl
rcl
xor
aad
mov
mov
adc
adc
outs
mov
mov
mov
(bad)
ds
cmc
and
add
idiv
cmp
jns
add
adc
push
jns
xchg
dec
sbb
xor
pop
call
loop
xor
sahf
adc
mov
and
and
cmps
push
sahf
call
mov
mov
mov
jo
dec
push
ret
pop
push
push
pusha
inc
pop
dec
rcr
shl
aad
pop
and
pop
mov
(bad)
dec
lds
push
daa
jne
leave
adc
sbb
outs
retf
or
iret
mov
and
mov
ret
pop
int
shr
cs
jge
mov
and
inc
ret
cmp
mov
jnp
lock
mov
xor
add
(bad)
or
fisttp
jmp
sub
sub
mov
push
ror
fisub
sub
cld
push
int3
lahf
and
cmp
(bad)
fldcw
(bad)
mov
cmps
xchg
xlat
ins
shr
xchg
inc
lds
cmp
dec
loopne
shl
add
xor
stos
xchg
cmp
mov
icebp
add
add
js
add
outs
mov
pushf
call
test
xchg
pop
inc
(bad)
aad
jecxz
dec
outs
imul
push
mov
imul
pop
inc
mov
fdiv
push
sti
ja
and
mov
in
lea
sub
test
xorps
test
jl
arpl
inc
rcl
ret
cwde
dec
mov
jae
pusha
xor
imul
mov
call
dec
shr
loop
(bad)
xchg
icebp
test
test
sbb
or
push
std
dec
cmp
(bad)
(bad)
cli
in
mov
(bad)
cmc
xchg
mov
sahf
out
(bad)
in
cmps
fdivr
push
sbb
std
aaa
sub
mov
push
idiv
pushf
xor
(bad)
jmp
fbstp
jl
inc
xchg
push
mov
fstp
mov
or
and
mov
aad
outs
jle
call
ins
sub
jo
(bad)
lea
icebp
fcmovu
cmp
inc
mov
fdiv
sub
mov
(bad)
iret
xchg
xor
cdq
sbb
jo
inc
push
in
and
sbb
addr16
xchg
push
xor
inc
je
ret
scas
mov
xor
sbb
or
xchg
jne
(bad)
fst
mov
fld
or
cmc
push
push
jg
enter
jmp
inc
dec
adc
outs
scas
push
shl
cmps
mov
loopne
sbb
lods
jnp
sbb
rol
mov
pop
inc
pop
add
lea
out
clc
test
jae
and
sbb
sub
daa
mov
xchg
bnd
dec
pop
mov
mov
test
mov
push
fucomi
inc
mov
mov
fcom
stos
mov
push
cmp
jne
retf
dec
xor
add
mov
fcom
mov
sbb
mov
nop
bound
in
clc
xchg
xchg
ins
(bad)
dec
sub
pop
idiv
ret
ja
mov
push
dec
jg
xchg
mov
fstp
add
inc
pop
ret
out
out
sti
shl
dec
icebp
fstp
mov
retf
enter
bound
outs
pop
or
(bad)
std
inc
idiv
push
ja
enter
or
ja
fisttp
and
popf
mov
or
pop
(bad)
and
mov
mov
jns
xor
movs
cmp
fstp
test
ins
cli
out
mov
or
out
int
mov
mov
sbb
mov
pop
lea
iret
ins
xchg
mul
fs
sti
push
xchg
sbb
cdq
mov
jb
test
mov
sbb
(bad)
shr
sbb
jae
sub
dec
dec
dec
sbb
repnz
or
xchg
data16
test
mov
popa
rcr
ins
push
mov
pop
out
outs
add
mov
mov
or
call
fsub
out
sbb
and
jmp
loopne
int3
addr16
and
cdq
pop
dec
push
je
rdtsc
pushf
mov
push
jle
retf
in
jg
push
nop
leave
mov
xor
jg
push
and
sbb
cmp
pop
out
adc
inc
inc
xor
sbb
dec
pushf
inc
cld
add
es
xor
data16
sahf
in
fist
es
xchg
rol
push
in
xchg
push
or
mov
fsubrp
cwde
test
popa
mov
ficomp
sub
imul
cld
dec
mov
mov
sbb
sub
movs
xor
out
mov
(bad)
mov
(bad)
hlt
mov
lock
lods
test
cmps
ret
(bad)
ja
cs
std
dec
ret
cdq
or
and
sbb
mov
xchg
cmp
iret
mov
sti
stos
hlt
pusha
out
les
inc
xchg
push
(bad)
outs
fdiv
push
popa
inc
fmul
ror
popa
es
xchg
call
mul
cmps
outs
aad
add
out
mov
fs
dec
fwait
mov
mov
dec
lea
pop
sbb
and
push
inc
fstp
stos
call
push
add
fsubp
dec
test
into
test
push
push
stc
outs
pop
jae
add
(bad)
push
sbb
add
mov
xor
les
jo
sar
xor
mov
gs
cmp
xor
cld
mov
or
add
xchg
or
not
div
mov
outs
pop
inc
cmps
jg
ss
sbb
ins
xchg
mov
dec
mov
(bad)
into
fimul
out
add
and
lods
adc
dec
jle
out
or
sub
jecxz
je
push
nop
fimul
adc
cmp
adc
jb
dec
lahf
int
pusha
mov
mov
(bad)
cmp
das
cmps
imul
and
inc
cmps
sar
std
(bad)
std
leave
dec
inc
js
and
mov
test
dec
in
mov
mov
and
stos
inc
jbe
jecxz
sahf
pop
inc
outs
lea
jno
xor
mov
fild
ss
push
mov
gs
sbb
ret
mov
ss
cmp
inc
pop
pop
pop
ins
std
out
movs
scas
sbb
dec
sbb
inc
inc
dec
jns
pop
sbb
out
jp
popa
rol
aaa
or
add
out
cdq
call
sahf
push
inc
adc
xor
xor
adc
or
xlat
cmps
jecxz
push
fcom
mov
adc
dec
xlat
imul
fdivr
fdiv
bound
xlat
lods
push
sub
out
ret
xor
push
sbb
jnp
mov
mov
es
sbb
scas
inc
call
or
mov
add
push
cmc
jns
push
mov
mov
cmp
outs
or
sub
jecxz
and
(bad)
out
jmp
ret
mov
sahf
cdq
jp
xchg
in
ins
test
inc
ss
(bad)
pop
fs
and
dec
div
xor
xlat
inc
pop
adc
daa
leave
rol
mov
push
sbb
mov
out
or
cmps
jno
dec
repnz
add
cmps
add
movs
test
push
out
adc
inc
xchg
add
jecxz
xchg
jle
out
sub
retf
push
ret
js
ins
(bad)
jle
and
mov
push
add
lahf
repz
and
test
retf
sbb
pop
in
xchg
and
(bad)
test
xchg
int3
pop
xor
pushf
sbb
call
dec
movs
ror
jmp
test
repz
jge
and
pop
idiv
fs
ss
inc
sbb
cmp
int
inc
fistp
inc
mov
in
push
(bad)
mov
adc
loop
addr16
ss
or
cmp
dec
(bad)
jmp
xchg
jmp
jne
push
hlt
not
ins
and
jmp
dec
sbb
lds
and
icebp
das
aam
cmp
(bad)
sbb
jecxz
aad
cld
es
les
mov
(bad)
data16
push
not
mov
jl
(bad)
or
ret
jns
fisttp
jle
ins
sbb
xor
mov
sbb
mov
sti
jl
xchg
ja
and
shl
mov
dec
xor
mov
cmc
add
(bad)
into
clc
inc
call
dec
dec
jne
mov
jns
out
test
adc
mov
scas
repz
mov
sbb
arpl
stc
mov
push
pop
loope
fs
push
mov
cwde
mov
mov
sub
cmp
sbb
or
inc
cwde
mov
mul
mov
(bad)
cmp
arpl
fisub
jno
(bad)
jl
push
mov
push
mov
leave
inc
shr
int3
mov
gs
dec
or
clc
pusha
(bad)
inc
inc
mul
fst
test
mov
mov
cmp
push
or
jle
pop
int
(bad)
into
jge
inc
jle
fwait
das
lods
fwait
inc
scas
push
retf
ds
pop
lock
pop
mov
cmp
mov
mov
fimul
sub
call
jg
(bad)
ficomp
mov
sbb
push
add
jl
(bad)
mov
jno
adc
sub
dec
pop
inc
ins
fxch
aad
add
inc
xchg
js
push
jno
les
jmp
xchg
mov
out
into
lahf
aaa
jmp
cmp
(bad)
jg
jmp
jge
outs
xchg
push
mov
dec
cwde
jne
not
(bad)
movs
push
and
das
or
mov
add
jae
mov
arpl
stos
dec
jl
jnp
add
xor
jbe
(bad)
and
jg
mov
xor
cmp
adc
aam
adc
int
jge
call
mov
and
xor
dec
rcl
out
(bad)
xchg
or
pop
xchg
and
sub
in
jmp
mov
(bad)
sti
inc
icebp
lds
push
xchg
jbe
(bad)
xchg
dec
mov
pushf
js
retf
and
bound
pop
add
and
add
pusha
adc
sub
add
add
dec
jp
mov
sbb
into
mov
fidivr
outs
sbb
sbb
loope
in
sbb
ins
add
push
int3
and
dec
sbb
and
shl
pop
jne
xor
jne
outs
lock
xor
shr
loop
sti
lock
stc
ins
shl
push
imul
fistp
hlt
and
arpl
icebp
mov
and
loopne
sub
and
aas
cli
xor
popf
int3
or
dec
xor
adc
bswap
jnp
(bad)
cdq
add
xchg
jge
mov
(bad)
xor
and
push
mov
lods
jne
rcr
or
aad
call
mov
outs
daa
and
pop
pop
xchg
xchg
clc
out
call
push
shl
inc
(bad)
(bad)
fsubr
into
pop
and
es
sub
jg
jns
clc
dec
out
dec
mov
iret
gs
push
popa
inc
xor
out
cmp
sub
mov
mov
push
ror
ficomp
jmp
das
out
sbb
jge
adc
dec
loopne
sbb
add
aas
push
sbb
je
lods
je
pushf
mov
ret
clc
mov
add
clc
cmp
fdiv
pop
ins
push
xor
enter
and
cwde
jge
fcmovnu
aam
jae
cli
dec
push
out
stc
outs
scas
pushf
sti
ins
call
pop
and
cmp
xchg
and
loop
jp
nop
mov
lods
ja
stos
lods
(bad)
mov
cld
cmp
adc
rol
xchg
adc
cwde
push
aaa
loop
clc
mov
pop
pushf
mov
dec
outs
stos
test
movs
cmp
fs
test
out
clc
xchg
pop
inc
rol
popf
mov
push
call
or
or
div
int3
mov
xor
adc
lods
xchg
and
adc
inc
sub
outs
call
ins
sbb
or
lock
hlt
outs
and
aad
adc
hlt
pop
add
mov
enter
jmp
dec
in
add
mov
jne
jl
popa
mov
popf
adc
imul
sub
cmp
(bad)
push
retf
shl
sub
cmp
jns
std
call
sub
(bad)
sbb
mov
lods
repz
arpl
sahf
scas
not
shr
xor
daa
jbe
jno
shl
cdq
push
xor
js
loopne
divps
imul
shl
mov
movs
jne
popa
push
push
mov
std
pop
sbb
fwait
push
cmp
mov
into
push
sub
ret
lods
add
scas
and
stc
cli
add
gs
and
jecxz
adc
ret
fisubr
pop
arpl
jmp
mov
aaa
fdivr
(bad)
dec
sbb
out
inc
xor
movs
and
and
ret
mov
daa
test
pop
xchg
outs
arpl
push
push
mov
sub
push
sbb
mul
and
cmp
adc
xchg
and
std
jno
leave
repnz
xchg
cmp
shr
rcr
movs
call
aaa
mov
jmp
sahf
stc
inc
xor
and
sub
push
mov
loopne
bound
jmp
jmp
sbb
cdq
sbb
push
hlt
jne
jle
aad
jb
sub
lea
sahf
pop
jne
ror
pushf
push
pusha
pop
and
mov
pop
push
pop
xchg
mov
and
call
in
add
lds
mov
(bad)
out
pop
bound
pusha
inc
sub
cs
scas
imul
icebp
call
sbb
gs
sbb
rcr
daa
bound
dec
jo
mov
jns
dec
pusha
mov
shl
iret
and
imul
and
pusha
mov
jl
sub
fsub
jo
cmps
movs
adc
push
(bad)
cmp
shr
imul
loope
mov
cmp
cmp
pop
inc
and
pop
fsubr
ja
loope
or
push
pushf
fnsave
lahf
fnsave
adc
test
dec
outs
mov
sbb
inc
dec
pop
jae
mov
and
test
xchg
(bad)
mov
loop
mov
push
fucomi
into
or
sahf
jecxz
scas
pop
xchg
fisubr
sar
mov
sbb
jmp
arpl
pop
and
xchg
outs
inc
or
mov
shl
(bad)
jmp
inc
inc
call
aas
and
and
rol
dec
in
cmp
cwde
xor
sbb
les
sar
ss
ins
jno
mov
cli
outs
jg
sbb
lods
fdiv
retf
cmp
dec
xchg
cmp
stos
scas
xlat
and
and
mov
mov
fmul
nop
out
enter
imul
sub
mov
push
mov
xchg
(bad)
mov
push
out
je
ror
bound
lods
cmp
repnz
mov
sbb
test
int
jge
mov
movs
das
out
or
clc
leave
pop
fdivp
lahf
push
xor
shl
and
push
in
cmp
test
les
call
loopne
xchg
pop
cmc
push
dec
jo
and
mov
int
cmc
fs
call
xchg
dec
pop
pop
push
dec
in
cmp
sbb
cmp
iret
push
pop
mov
jbe
cmp
clc
rcl
sub
jecxz
sbb
cmc
clc
idiv
nop
dec
stos
mov
imul
div
hlt
cmp
inc
cmc
in
fmul
cmp
dec
fisub
mov
frstor
mov
mov
sub
jmp
dec
out
loop
popf
shr
lds
or
jmp
pop
jp
xchg
sub
dec
mov
leave
push
push
cmp
movs
jne
fsubr
lea
retf
add
pushf
mov
sbb
mov
loopne
or
jp
or
jb
lods
push
and
enter
xor
retf
and
jge
loop
sub
jmp
mov
mov
mov
imul
ja
iret
mov
inc
movs
popa
jle
aad
sub
fisttp
adc
inc
or
daa
jge
mov
adc
and
fwait
add
test
mov
dec
imul
inc
out
sub
in
sbb
mov
(bad)
jmp
and
mov
and
push
neg
lods
mov
cmp
sub
inc
mov
sub
aad
jns
call
jg
mov
jle
cmp
aad
push
pushf
mov
into
adc
xchg
int
mov
cmc
add
add
mov
push
fsub
(bad)
and
push
push
adc
or
bound
lds
and
add
and
xor
out
xchg
mov
sub
psubb
in
les
fwait
shl
or
and
mov
or
pop
stos
xchg
(bad)
mov
and
xor
retf
pop
repnz
or
sub
or
cli
movs
jns
sub
sbb
xchg
jp
aad
sub
sbb
ss
pop
xchg
in
jbe
push
inc
sub
outs
ror
std
xor
fst
(bad)
jno
outs
sub
aam
lahf
rol
adc
jecxz
push
xchg
outs
pushf
hlt
fs
mov
cmp
(bad)
and
sub
xor
inc
push
adc
movs
aad
xor
xor
or
push
mov
push
ret
loop
mov
retf
xor
inc
jo
jge
and
jge
sub
aaa
push
xchg
je
cmp
aad
mov
ficomp
(bad)
cli
mov
mov
push
xchg
adc
jbe
mov
fisttp
bound
retf
pop
out
pop
fcmovne
mov
fist
fcmovb
adc
sbb
outs
add
inc
mov
or
ret
popa
rol
push
fstp
fcom
mov
ja
(bad)
bound
xchg
adc
popa
(bad)
mov
stos
and
mov
cmp
jmp
or
add
xor
mov
fadd
or
fistp
dec
jecxz
push
mov
xchg
stc
jno
and
pop
cmp
adc
cld
xchg
pop
ror
dec
fild
pop
cwde
ror
pop
mov
sbb
je
(bad)
jl
mov
dec
addr16
jge
test
dec
jg
inc
mov
in
fdivrp
add
jl
enter
icebp
fstp
jp
cmp
xchg
lods
repz
mov
sbb
jo
stc
mov
adc
xchg
lock
int3
sbb
or
cmp
push
jno
jmp
jb
loopne
popf
dec
repz
neg
push
mov
inc
rol
pop
out
push
movs
jbe
push
sahf
mov
adc
fs
lea
sub
sub
xor
sahf
jne
scas
mov
or
jbe
push
xor
jne
push
fwait
call
scas
xor
xchg
push
mov
inc
sub
je
mov
mov
arpl
test
pusha
ret
xchg
push
in
jmp
fbstp
lods
add
loope
daa
hlt
jnp
mov
cmp
xchg
out
cmp
and
loop
xor
mov
(bad)
adc
retf
clc
jge
mov
sahf
push
add
jns
sub
int3
mov
lock
mov
fnstenv
mov
jmp
push
sbb
mov
sub
sub
lods
int
and
lods
retf
cdq
movs
lahf
push
sbb
ins
mov
shl
test
aad
cmp
std
push
dec
xor
int
sbb
mov
xchg
xchg
xchg
ret
push
add
cmp
sar
sub
dec
jb
and
mov
inc
add
dec
mov
pop
xlat
fstp
pop
xor
pop
gs
xchg
jecxz
loopne
aaa
push
xlat
int
lods
xchg
sbb
dec
xchg
rcl
cmp
dec
pop
mov
mov
rcl
adc
aaa
stos
sbb
ret
shl
jno
enter
or
es
ss
outs
and
fwait
adc
popa
outs
push
ins
xlat
retf
shr
mov
test
adc
jmp
adc
cmc
jle
ror
dec
je
stos
push
fdiv
es
mov
imul
loopne
fcomp
add
push
jae
rol
dec
sub
cli
aas
fnstsw
push
or
pop
in
shl
jnp
pop
je
in
arpl
mov
pop
dec
xor
mov
xchg
xor
mov
pop
xchg
ja
xchg
cmp
js
fnstenv
push
fwait
ret
(bad)
jae
ror
out
inc
retf
xor
sbb
fs
mov
jno
push
mov
jo
in
sub
jg
add
jnp
xor
jbe
pusha
ds
stos
test
gs
or
fwait
add
add
inc
xchg
cdq
xchg
shr
vpmuludq
push
xchg
push
loope
push
and
add
(bad)
push
add
push
xor
outs
lods
arpl
xchg
test
loope
add
mov
pop
dec
jae
stc
cmps
gs
push
inc
aad
inc
jne
add
jne
(bad)
xor
(bad)
fidivr
push
outs
lahf
imul
test
add
mov
sub
sahf
xchg
mov
scas
dec
loop
jmp
popa
test
or
lods
sbb
pop
sbb
out
jmp
mov
mov
cmp
cli
leave
out
sbb
out
mov
cld
dec
test
cmp
xor
fldpi
mov
mov
imul
inc
in
mov
ss
adc
shl
popf
jecxz
movs
dec
je
sti
arpl
fild
cmps
enter
mov
push
or
scas
sub
add
ret
clc
jp
adc
mov
cmp
es
nop
addr16
xlat
push
ds
sbb
outs
mov
test
(bad)
cmp
std
push
sbb
stc
dec
xchg
jmp
pop
sahf
xchg
add
pop
mov
mov
pop
test
movs
adc
cdq
jmp
aas
das
mov
pop
xchg
xchg
movs
in
mov
das
mov
pop
mov
into
jns
(bad)
sub
js
jmp
int3
ds
adc
inc
jno
imul
dec
mov
mov
fistp
shl
sub
addr16
add
loop
add
cmp
and
ret
into
aas
mov
sub
in
movs
call
jmp
jmp
call
pop
hlt
jb
mov
retf
xor
add
adc
lds
dec
mov
push
inc
inc
repz
push
cmp
loop
rcl
aaa
pop
imul
jle
xchg
leave
mov
(bad)
inc
cli
jmp
rcl
ror
test
jb
mov
mov
jnp
repz
sbb
xor
mov
and
sub
ret
xlat
shl
mov
in
ret
jge
ins
push
imul
gs
jne
pop
cdq
enter
push
cmc
in
jmp
pusha
enter
dec
pop
mov
mov
in
mov
add
cmp
test
fnsave
lahf
ret
into
cdq
repnz
sub
stos
out
jnp
mov
add
icebp
ja
cmp
lods
xchg
sub
shl
imul
repnz
shl
dec
xor
ss
pop
repz
sub
jl
mov
test
jbe
adc
clc
mov
scas
jmp
loop
int3
jb
fstp
inc
push
into
(bad)
lock
xlat
in
cmp
dec
sahf
push
cwde
clc
pop
fimul
(bad)
xor
push
sahf
iret
adc
pusha
dec
addr16
dec
int3
sahf
jb
dec
fidiv
rep
mov
cmp
enter
adc
aas
inc
mov
in
cmp
cmps
imul
ins
fild
adc
cmp
sbb
mov
bound
xor
mov
stos
cmc
xchg
std
adc
inc
nop
movs
xor
into
push
fucom
shl
outs
adc
adc
jmp
sbb
add
add
loope
imul
stos
bt
sub
pusha
or
mov
mul
xchg
adc
ror
mov
outs
mov
in
fisttp
lods
mov
int
popa
pop
pop
push
mov
(bad)
retf
(bad)
jmp
jecxz
pushf
inc
jno
adc
out
int3
mov
add
push
lock
shl
pop
shr
fistp
sub
cmp
retf
xor
test
(bad)
sub
sbb
xbegin
sbb
push
(bad)
dec
mov
movd
jne
je
sub
jo
test
xor
lea
cmp
lock
dec
xor
push
or
loop
shl
nop
cmp
push
fadd
xor
jne
adc
inc
int3
aaa
jge
das
cmp
add
inc
xor
xor
popf
jp
and
clc
pop
lock
inc
aam
pop
icebp
sbb
pusha
scas
pushf
mov
jno
jp
xchg
aam
test
adc
test
push
aam
pop
jmp
jmp
mov
nop
add
adc
xchg
add
adc
sub
in
jmp
movs
mov
or
fcmovb
dec
rcl
stos
cmp
repnz
aaa
test
adc
ret
xor
imul
in
lds
arpl
hlt
loopne
inc
jo
sbb
lock
iret
(bad)
hlt
inc
cwde
mov
mov
fwait
sbb
aad
sub
inc
pusha
adc
ds
leave
mov
dec
into
neg
cmp
add
mov
xchg
adc
push
adc
push
icebp
nop
add
iret
xor
xor
lods
test
push
retf
mov
mul
pusha
sub
cmp
jnp
jno
xor
add
in
bound
das
xchg
jno
outs
mov
xor
movs
inc
add
lds
xlat
js
cmp
jmp
pop
enter
and
and
dec
icebp
pop
xlat
add
adc
sub
lock
sub
or
add
lock
lea
push
sbb
nop
cmp
lahf
aas
or
xlat
inc
(bad)
and
xchg
push
xchg
or
inc
fdiv
(bad)
iret
aaa
pop
pop
jns
fstp
pop
inc
push
sbb
xor
mov
aam
loope
mov
xchg
fcmovb
fistp
sub
mov
test
add
cmp
sar
dec
mov
dec
movs
data16
in
scas
repz
lods
imul
cwde
in
sub
adc
les
call
adc
or
pop
aaa
sub
jmp
div
push
dec
push
add
loope
xlat
mov
mov
fimul
push
cmp
xchg
and
fisttp
xchg
jbe
xlat
mov
icebp
repz
retf
or
movs
inc
push
add
(bad)
bound
pop
adc
lods
pop
std
inc
adc
jnp
fucom
sub
xchg
enter
shr
test
cli
mov
jo
inc
loope
mov
in
sbb
adc
lods
push
xlat
lods
and
out
imul
jl
rol
xchg
dec
out
dec
mov
mov
int
sahf
dec
jno
cld
cmp
pop
sbb
inc
sbb
enter
jbe
iret
sub
in
sub
loopne
jne
test
pop
push
fdiv
xchg
in
test
mov
cld
push
mov
dec
es
cmp
aad
(bad)
mov
mov
mov
rcr
call
sbb
(bad)
ins
dec
jns
add
mov
mov
xchg
mov
pop
aam
fcmovnb
enter
adc
out
prefetch
aad
lahf
mov
sub
sub
mov
(bad)
push
jge
mov
imul
sbb
mov
xchg
retf
xor
mov
push
cmps
mov
xor
mov
test
retf
sub
xchg
iret
and
adc
jbe
jle
int3
or
jb
mov
add
out
pushf
data16
adc
cmp
jl
movs
push
out
shr
(bad)
inc
jmp
pop
cwde
and
rol
mul
push
hlt
daa
mov
cmps
loope
and
or
pop
fisttp
(bad)
mov
out
daa
push
in
shl
das
outs
sbb
sti
aam
dec
into
push
add
pop
xchg
mov
cmps
lds
test
aad
lds
iret
jle
(bad)
mov
cdq
fild
out
sti
and
mov
cmp
and
repz
push
arpl
cdq
sub
test
repnz
jns
bound
popf
test
jo
movs
aaa
push
xchg
and
and
bound
lahf
je
inc
(bad)
pop
mov
out
pop
daa
ss
int
add
adc
or
adc
call
xchg
ret
xchg
aas
fild
pop
lock
sub
cmp
xlat
pop
daa
mov
and
mov
in
cmp
jno
aad
mov
sub
jle
mov
leave
cli
adc
sub
mov
jns
cmc
mov
cmp
nop
js
add
xlat
leave
jmp
sbb
pop
add
add
inc
mov
fsub
int
dec
mov
mov
into
mov
test
jmp
sbb
inc
outs
or
imul
pop
call
sbb
jecxz
loopne
outs
rcr
int3
mov
in
jge
pop
sub
fdiv
lahf
cli
movs
mov
in
add
clc
aas
aas
xlat
jg
mov
sub
outs
loopne
ins
ins
pop
leave
pop
xchg
mov
xchg
jmp
jno
out
(bad)
and
or
pop
out
cmp
pmuludq
or
int3
sbb
sub
sbb
mov
retf
icebp
and
inc
stos
rcl
stos
mov
pop
dec
test
addr16
pop
ds
pop
fs
out
arpl
in
inc
push
test
ret
fs
adc
ror
push
das
jg
imul
sbb
xchg
repz
shl
push
mov
cmps
push
inc
sbb
aaa
out
push
push
out
outs
xchg
xor
fisub
dec
aas
mov
in
inc
int3
dec
sar
(bad)
fsubr
test
xchg
mov
jb
mov
pop
out
call
das
out
add
aam
pop
inc
leave
cli
int
into
add
mov
and
je
xchg
or
ss
ins
cmp
retf
inc
jp
ret
cmp
and
xor
call
mov
aaa
sub
fsubrp
and
cmp
cmp
and
push
idiv
dec
stc
rcr
loop
push
push
dec
push
dec
pushf
push
inc
in
fstp
push
cmp
xor
stos
push
repz
push
lods
dec
je
popw
mov
(bad)
mov
(bad)
loopne
or
and
pop
fiadd
mov
and
retf
sahf
add
sbb
test
jp
add
jg
je
xor
mov
push
jmp
mov
(bad)
nop
call
cmp
icebp
inc
pushf
ja
pop
scas
dec
loop
and
imul
push
adc
cli
adc
jmp
or
out
sar
xor
(bad)
stos
(bad)
cmps
mov
xor
daa
xor
xor
sbb
retf
dec
call
scas
(bad)
in
add
xchg
push
xor
mov
movs
fnstsw
add
sub
ins
sub
sub
jo
and
mov
fnstsw
test
leave
test
aaa
xchg
jmp
adc
sub
outs
outs
dec
push
inc
push
(bad)
(bad)
xchg
test
shl
jecxz
xlat
aaa
adc
mov
xor
xor
in
cmp
jno
sbb
add
sbb
scas
mov
mov
pop
jle
push
cs
fdiv
inc
add
sbb
add
pop
daa
mov
and
ds
movs
inc
in
lods
enter
js
jo
jge
push
out
ss
sbb
mov
inc
push
pop
cmp
stos
dec
ret
mov
xlat
xchg
and
xor
fcomp
mov
push
push
mov
mov
ins
xor
rol
mov
sbb
inc
js
mov
fcomp
ins
leave
push
popa
jmp
sbb
pop
ss
cmp
ins
jae
lods
xchg
je
scas
cld
imul
push
jo
pop
xor
in
imul
cld
dec
pop
pop
iret
sar
mov
mov
xchg
push
in
dec
dec
xchg
cmps
cmps
call
dec
sbb
sti
xlat
sub
cwde
fdivr
xchg
pop
pusha
out
inc
mov
sub
les
mov
ins
enter
fwait
adc
mov
lea
mov
mov
adc
push
loop
jns
mov
test
out
test
mov
(bad)
xor
cmp
push
int
mul
add
dec
jb
popa
jge
cmp
cli
push
aaa
dec
(bad)
(bad)
inc
icebp
in
push
sub
test
xchg
sub
push
shl
je
add
sub
xchg
sub
add
outs
push
loop
mov
gs
pusha
dec
add
lods
out
call
les
mov
retf
out
test
push
sub
pop
cmp
bound
push
fldcw
popf
dec
or
hlt
and
sbb
fld
lods
sbb
cmps
sub
inc
sbb
adc
sbb
cmps
neg
mov
stos
sbb
cmp
hlt
in
or
and
ins
xchg
xchg
fild
std
dec
sti
retf
jg
inc
out
sbb
cmp
gs
adc
lods
dec
loope
and
or
mov
dec
lds
push
or
cmp
imul
xchg
xchg
push
shl
sbb
mov
fdiv
jl
sub
movs
pop
fild
cwde
push
fsubr
bound
(bad)
out
loop
push
fdivr
cmp
ja
and
clc
addr16
mov
sbb
sbb
xchg
(bad)
pushf
adc
loope
cs
(bad)
adc
(bad)
jle
es
iret
jae
cmps
(bad)
jbe
and
mov
or
push
out
out
and
daa
cmp
adc
hlt
(bad)
jecxz
out
cmc
jbe
push
or
idiv
(bad)
mov
mov
clc
dec
add
pop
jb
push
or
fisub
scas
mov
cmp
out
sbb
ss
out
movs
mov
fimul
xor
and
(bad)
(bad)
pop
movs
dec
xor
mov
and
xchg
adc
daa
aam
push
adc
shl
jecxz
icebp
call
(bad)
mov
int
cli
pusha
ror
dec
adc
(bad)
push
loope
dec
ins
lock
xor
repz
mov
dec
popf
fcomp
add
dec
jg
fadd
inc
in
popf
push
jae
and
mov
pop
cmc
jb
jbe
jb
enter
sub
mov
mov
xchg
adc
xor
out
cmps
stos
jmp
sub
test
pop
and
cmp
cli
pop
add
push
jp
popf
jae
adc
or
ja
mov
dec
aas
ins
pop
cmp
repz
inc
out
(bad)
push
loope
test
ins
cmps
pop
ins
cmp
adc
xlat
xchg
mov
inc
mov
in
xchg
add
dec
dec
sbb
not
dec
inc
dec
mov
pop
data16
adc
movs
xchg
xor
hlt
mov
movs
mov
mov
jle
aad
fcomi
retf
(bad)
fisttp
cmps
mov
scas
xor
test
lea
ret
adc
mov
mov
daa
call
cmc
or
push
pop
mov
leave
js
cmp
xchg
pop
and
and
jno
mov
xchg
jo
mov
sub
cmp
jecxz
daa
sub
push
es
movs
aaa
mov
and
movs
mov
and
adc
ss
mov
or
mov
dec
mov
std
or
mov
test
and
cli
loopne
inc
add
jns
loope
mov
pop
enter
jp
xchg
leave
jne
jmp
cmps
xchg
mov
adc
dec
pop
adc
bswap
sub
push
jge
mov
ret
push
pop
sub
mov
outs
and
inc
bound
mov
xchg
cmp
int
test
dec
dec
int3
out
outs
bts
push
xchg
loopne
aad
aaa
dec
js
or
call
push
xchg
dec
dec
sar
in
je
lock
dec
outs
nop
inc
pushf
lods
sub
adc
add
shl
pop
mov
jne
in
js
out
test
push
call
into
mov
cld
adc
call
je
pop
inc
loope
out
(bad)
fucomip
push
jb
sahf
sub
mov
mov
enter
mov
mov
adc
in
jo
andps
mov
scas
push
pop
daa
add
cli
mov
bound
cmps
xchg
bound
pushf
xchg
xlat
pop
cmp
and
ins
push
jnp
sub
or
cmp
add
mov
push
pop
cmp
xchg
loopne
sub
cdq
jp
mov
cli
leave
iret
fs
in
jmp
movs
xor
dec
fcmovnu
pop
and
icebp
add
push
add
xchg
jo
pushf
les
xlat
lahf
jl
inc
aaa
les
or
or
mov
mov
inc
cmp
push
jge
jmp
(bad)
sahf
lahf
pop
nop
mov
in
outs
ror
add
sbb
push
xor
cwde
pop
ficom
cmp
pop
mov
mov
add
jbe
xchg
or
xor
pop
mov
je
lock
push
sbb
shr
mov
out
aad
(bad)
jb
rol
dec
pop
and
cmp
jbe
push
cwde
std
mov
loop
jb
lods
repnz
ins
loope
mov
fild
call
or
test
sbb
mov
push
movs
mul
mov
xchg
pop
push
gs
xor
pop
or
test
push
loope
push
mov
inc
(bad)
hlt
push
push
push
push
sbb
inc
pop
test
mov
test
pop
popa
loop
mov
xlat
push
das
int
clc
and
aad
(bad)
fiadd
xor
lods
pop
test
jecxz
mov
test
sar
inc
cmp
cmp
jmp
push
jecxz
xlat
xchg
xchg
add
stos
push
ret
div
adc
sbb
push
add
test
jne
sub
xchg
scas
mov
or
sbb
es
xchg
bound
lahf
fs
sub
test
not
call
sub
in
outs
and
mov
and
sub
in
cmps
adc
cwde
stc
or
arpl
hlt
mov
cdq
pop
adc
xor
test
and
inc
push
xchg
icebp
nop
fld
mov
mov
fadd
mov
out
mov
dec
cmps
sub
or
adc
xor
(bad)
pop
sbb
mov
gs
mov
push
push
mov
repz
mov
mov
add
nop
push
xchg
std
lods
cmps
mov
sub
leave
shr
popf
mov
sub
imul
pushf
mov
or
jmp
jp
xchg
pop
sub
scas
inc
loope
arpl
mov
cmps
inc
and
adc
mov
test
loopne
loopne
xchg
pop
adc
test
imul
xchg
pusha
(bad)
stos
shl
mov
xor
fistp
sbb
popa
mov
mov
int3
es
lea
jl
jmp
mov
add
pusha
fsub
mov
mov
jp
imul
mov
lods
cmp
pushf
fild
or
add
js
and
mov
fdivr
out
sub
mul
cmp
add
mov
xchg
test
cmp
xor
fdiv
sbb
jmp
shl
stc
pop
cmps
xchg
call
or
mov
stc
popa
xor
cld
push
cs
mov
mov
fisttp
fstp
hlt
mov
cmps
pop
or
and
push
call
imul
out
mov
ins
push
cld
fist
sub
fnop
test
out
pushf
jnp
push
call
loope
pop
das
jno
jae
jecxz
pushf
push
mov
mov
sbb
aas
add
call
pop
adc
mov
or
arpl
inc
fldenv
cld
jmp
(bad)
adc
in
mov
pop
sbb
ins
push
stos
xchg
enter
repnz
mov
pop
sbb
jbe
repnz
adc
fwait
sub
xchg
test
int3
mov
xchg
mov
dec
push
push
mov
or
mov
lods
add
jns
test
push
xor
and
push
cmp
hlt
sub
fild
add
mov
gs
aaa
imul
xchg
dec
or
lahf
xor
pop
lahf
sahf
adc
out
or
jne
test
les
add
xchg
mov
pusha
push
push
mov
or
test
jae
shl
push
xchg
mov
or
sbb
and
test
lods
iret
cs
xchg
jne
xor
xlat
mov
push
outs
int
push
xchg
adc
dec
pop
test
vcvtpd2dq
adc
pusha
xchg
test
(bad)
mov
out
xor
out
mov
dec
sti
enter
sbb
mov
adc
in
lods
add
mov
sub
cmps
jl
cmps
dec
sub
fnstcw
xor
jmp
ret
(bad)
stos
rol
fistp
fstp
jmp
in
pop
jnp
inc
or
mov
mov
jecxz
jns
xor
mov
cmp
push
mov
pop
add
jle
mov
sbb
imul
jecxz
loop
ins
movs
mov
rol
cmps
mov
bound
sbb
jge
mov
pop
sbb
cli
fwait
jmp
fmul
sbb
dec
ds
stos
dec
xchg
xchg
xor
into
lods
inc
cs
xchg
adc
es
jnp
(bad)
xlat
stc
mov
les
pop
call
popa
push
cmp
ja
aad
scas
sub
pop
xor
sti
loope
retf
push
(bad)
std
cmp
cmp
jo
and
push
cmp
fdivr
jecxz
pop
xchg
inc
scas
push
popf
fs
or
and
(bad)
pusha
mov
jp
sub
daa
es
fcom
ret
mul
test
mov
mov
stos
loope
lahf
leave
xchg
addr16
out
leave
test
pop
out
fsub
jmp
mov
bound
cmps
or
push
mov
pop
sbb
and
inc
dec
inc
inc
sbb
or
(bad)
mov
sbb
ins
movs
cld
div
mov
inc
and
in
lar
pop
stos
cmp
ret
popf
inc
out
mov
arpl
cmp
fsubr
lds
adc
jmp
gs
pop
mov
pop
scas
mov
pop
ins
xchg
xchg
sub
mov
xchg
mov
or
cmp
pop
popf
fidivr
jbe
or
mov
mov
stos
fld
inc
fs
adc
cs
sbb
imul
ins
and
pushf
enter
mov
lods
aam
inc
popa
out
std
aaa
lods
bound
dec
and
add
xchg
adc
arpl
ss
mov
and
push
mov
jb
fwait
add
fdivr
adc
push
pop
pop
xchg
fcomp
and
sub
cmp
xor
pop
call
push
push
jecxz
icebp
lahf
retf
(bad)
scas
bnd
mov
jb
shl
cmps
jmp
xchg
push
cmp
enter
push
and
fdiv
xchg
es
cmp
cmp
push
inc
loope
push
sbb
mov
jno
in
push
dec
div
push
int3
add
adc
xchg
pop
movs
inc
push
add
out
retf
shl
mov
popa
lods
jae
xlat
outs
mov
pop
mov
lods
inc
scas
mov
mov
push
lea
aam
lods
in
ficom
cmp
pop
lahf
test
ret
xchg
(bad)
ins
int3
aas
fild
in
adc
test
sti
mov
fwait
pop
xor
mov
shr
out
inc
enter
adc
pop
mov
push
loop
mov
and
push
ss
dec
jmp
pop
and
stos
das
aas
(bad)
jnp
inc
int3
or
int
and
mov
pushf
pusha
cld
(bad)
pop
(bad)
mov
mov
pop
sub
mov
xor
sbb
sub
push
or
mov
push
jmp
into
cmp
push
cmps
and
xchg
test
je
sbb
dec
mov
mov
in
repz
pop
mov
sahf
std
ss
push
xchg
pushf
sahf
jg
dec
adc
fisubr
and
div
ror
pusha
xchg
js
pop
or
(bad)
(bad)
(bad)
inc
jno
test
sub
or
out
dec
jmp
xchg
hlt
dec
dec
mov
inc
and
enter
fwait
inc
mov
icebp
mov
dec
ret
or
pop
nop
sub
cmps
shl
add
push
addr16
fistp
push
jb
fnstcw
xchg
xchg
not
cmp
outs
mov
dec
in
cwde
stc
sub
popa
outs
pop
fcom
sub
ret
add
out
jmp
and
and
mov
leave
call
push
fs
and
push
es
lods
cmp
mov
pop
inc
cmp
jle
ins
xchg
imul
xor
xchg
pusha
and
icebp
xchg
xchg
inc
adc
test
sar
xor
loope
mov
leave
mov
(bad)
scas
and
add
aam
lock
mov
das
int3
push
in
aas
cmp
jmp
inc
mov
cmp
sub
dec
mov
addr16
dec
aam
fwait
sub
xor
pusha
loopne
movs
js
jmp
mov
mov
jo
jno
jmp
or
loope
mov
dec
push
jl
rcl
(bad)
xlat
sub
xor
sub
xchg
or
jmp
and
adc
test
scas
ret
sbb
mov
retf
push
arpl
retf
mov
push
out
loope
int3
inc
mov
aam
xor
into
in
lahf
or
jmp
jb
mov
and
and
loop
sbb
add
push
lahf
xchg
test
mov
cmp
adc
xchg
nop
sub
sti
inc
cdq
jl
test
mov
pop
loopne
sti
movs
and
outs
sub
fnstenv
add
add
imul
sbb
cdq
inc
sub
adc
jmp
arpl
into
daa
leave
(bad)
push
adc
daa
rcr
gs
xchg
scas
add
mov
test
stc
xchg
fnstenv
adc
retf
sbb
imul
cli
pop
jbe
pop
pop
xor
push
cmp
adc
or
and
and
add
imul
push
ror
push
cmp
pop
mov
out
stos
cld
test
mov
lock
inc
adc
push
fbld
adc
xchg
rcl
jg
pop
add
scas
in
dec
or
jo
sbb
and
mov
push
iret
jbe
sbb
push
cmp
test
sub
pushf
retf
pop
jnp
shr
jge
outs
(bad)
xchg
xchg
dec
mov
dec
ins
jno
mov
jmp
adc
sub
pop
jbe
jns
inc
sub
fnstsw
cmp
adc
jae
mov
mov
in
or
sbb
in
mov
cmp
sbb
pop
sub
jmp
and
iret
iret
out
xor
add
(bad)
in
pop
sbb
mov
and
and
mov
das
jno
add
jmp
xor
add
adc
adc
(bad)
(bad)
cli
nop
xlat
dec
mov
(bad)
out
cdq
mov
leave
push
cmp
dec
call
pop
lahf
fidiv
or
or
pop
or
das
jb
inc
cmc
sub
daa
jmp
into
jmp
xchg
aad
test
mov
mov
mov
movs
and
xchg
mov
dec
xor
pushw
push
fs
gs
neg
xor
mov
push
sbb
out
mov
stos
addr16
pop
ins
into
adc
push
mov
xchg
sub
aad
push
jecxz
fcom
mov
call
and
out
shr
mov
out
lods
dec
(bad)
sub
dec
pop
xchg
cmp
call
aaa
lods
and
pop
mov
jp
xor
xlat
imul
jno
fcom
and
je
lods
mov
or
add
retf
shl
xor
clc
fcom
cmp
xchg
add
pusha
bound
dec
int
popf
push
int
sbb
jbe
dec
push
inc
push
fcom
push
and
test
inc
outs
mov
mov
pop
lods
aas
fmul
or
call
xlat
addr16
mov
pop
aas
mov
pop
sub
cld
mov
xor
stos
mov
xchg
xchg
in
sbb
sbb
lock
dec
in
xor
popa
mov
and
dec
test
sub
ins
xchg
ja
ins
(bad)
jnp
ficom
add
test
stc
push
in
pop
push
repnz
jnp
icebp
mov
pop
xchg
repnz
nop
mov
out
inc
and
inc
lods
cwde
mov
xor
loop
jmp
test
or
test
push
popa
sbb
fst
out
gs
popa
(bad)
pop
aas
xor
jg
lods
push
xchg
adc
dec
push
loop
fwait
int
pop
es
sub
repnz
sub
cwde
jmp
cld
mov
adc
sbb
or
test
scas
adc
mov
inc
dec
add
pop
mov
push
cmp
inc
jge
add
mov
cmc
push
outs
sub
cmc
(bad)
push
xchg
push
loope
jl
push
jmp
imul
and
rcr
cmp
jg
ds
clc
nop
mov
or
rcr
aas
mov
pop
pop
add
xor
xchg
jno
sub
pop
ret
add
das
sub
jecxz
mov
daa
fcomp
iret
imul
and
push
adc
jnp
rol
sub
mov
(bad)
arpl
cmps
fs
mov
data16
mov
cmp
iret
fs
int3
cli
mov
ss
aas
mov
inc
(bad)
aas
cmp
mov
pop
mov
loope
int
jecxz
mov
add
pop
js
or
cli
cdq
sbb
pop
and
and
shl
and
xchg
leave
or
(bad)
rol
iret
cs
push
mov
dec
les
pop
fld
cmp
icebp
inc
xchg
mov
mov
jecxz
mov
test
xchg
out
not
fdivr
dec
(bad)
pop
mov
in
out
mov
push
sub
push
(bad)
out
sbb
push
mov
push
sub
call
push
(bad)
mov
test
test
lock
mov
dec
ret
popa
jge
int3
out
mov
xchg
mov
push
retf
add
adc
sti
cmp
push
ja
or
mov
xchg
and
add
retf
sar
or
jb
sbb
mov
data16
pop
(bad)
mov
or
or
xor
fistp
jnp
push
stos
ret
sbb
mov
ins
popf
sub
mov
int
add
adc
push
fs
cmc
rcr
sub
jecxz
out
push
sbb
jns
fdiv
dec
pop
retf
cmp
mov
sbb
mov
pop
aas
outs
dec
pop
lods
popa
mov
push
mov
fbld
in
or
lahf
sub
xor
movs
aas
or
call
aas
push
mov
pop
jmp
in
push
xchg
mov
fcom
ds
mov
inc
mov
(bad)
out
ret
push
ret
cmp
add
popf
xchg
add
cmp
aam
pop
xor
(bad)
imul
loopne
ins
bound
push
inc
retf
test
inc
mov
xchg
popf
clc
in
js
gs
ds
les
repz
xor
mov
ss
dec
cmp
ror
shr
fild
and
xor
loope
arpl
xor
ret
mov
bound
out
adc
out
shl
inc
jae
mov
ins
in
xchg
call
adc
adc
retf
pushf
xor
push
es
mov
push
(bad)
adc
pushf
add
mov
mov
in
popa
shufps
je
sbb
daa
jmp
inc
fidiv
aas
lahf
addr16
cdq
and
xchg
and
xchg
cmc
xchg
or
test
xor
les
test
stc
call
je
push
pop
xor
sbb
jmp
enter
sbb
sahf
imul
add
pop
inc
gs
cdq
inc
mov
(bad)
js
stos
jecxz
inc
ins
adc
fcom
pop
out
das
mov
icebp
test
lds
cli
mov
scas
or
scas
jl
lahf
inc
and
shl
cmps
cmp
jmp
or
dec
ret
fadd
arpl
cmp
sti
in
pop
lea
ror
xchg
dec
into
retf
das
add
mov
cwde
pop
scas
retf
(bad)
and
popf
mov
out
inc
out
pushf
add
test
inc
push
sbb
fisttp
bound
inc
fidiv
fnstsw
fwait
sub
loop
arpl
(bad)
jmp
dec
leave
lods
mov
imul
xor
pop
aaa
ds
cmp
mov
popf
add
add
loope
nop
xchg
add
out
out
mov
adc
add
out
in
jle
cmp
cwde
dec
sbb
popf
repz
aam
iret
jp
out
xor
jl
jne
bnd
pop
into
fld
adc
xchg
add
shr
lahf
sahf
leave
add
mov
scas
rcr
fwait
hlt
inc
addr16
or
push
retf
test
lea
mov
out
gs
xor
ja
mov
mov
in
lea
ins
test
prefetchwt1
or
mov
push
add
xchg
adc
fucomp
sbb
mov
movs
fsubr
enter
scas
xchg
(bad)
add
loop
nop
lods
int3
inc
mov
ins
dec
sbb
xor
lea
mov
jo
fdivr
add
lock
sub
(bad)
loop
aas
cmp
pop
stc
pusha
jb
ins
sbb
retf
sub
in
sub
cmp
rol
div
fsubr
fwait
sbb
jl
add
sub
scas
adc
retf
sbb
fwait
adc
(bad)
jae
mov
(bad)
out
movs
test
dec
mov
and
jp
aaa
ds
xchg
aaa
mov
out
stos
jge
test
fsubr
leave
xchg
xor
or
enter
sbb
xor
pusha
fld
imul
out
push
add
sbb
movs
fistp
lods
pop
retf
scas
jns
push
lock
mov
bound
cli
pop
fidivr
xchg
jb
mov
outs
mov
mov
mov
push
addr16
dec
(bad)
jl
shl
retf
bound
pushf
sbb
sub
sbb
jne
pop
sbb
mov
cwde
push
or
push
adc
clc
or
dec
sbb
push
pop
std
outs
test
mov
mov
push
push
mul
add
pop
mov
cdq
sbb
xor
aas
pop
jmp
cmc
mov
ret
sbb
push
outs
popa
jge
(bad)
xlat
xlat
stos
xchg
out
add
shl
jg
arpl
mov
out
in
cmp
dec
dec
test
add
add
aaa
lahf
lods
or
add
repnz
int3
mov
push
inc
mov
loop
movs
push
or
div
push
mov
dec
fwait
add
out
sub
lea
cmp
call
outs
jns
aad
pop
mov
fdivr
call
mov
call
popf
cmps
addr16
in
pop
jo
mov
movs
sti
push
imul
stos
cmp
xor
repnz
int3
adc
cmp
nop
ret
sbb
imul
fs
adc
push
mov
cmp
clc
xlat
ret
jecxz
xor
call
xlat
mov
xchg
icebp
sub
mov
dec
test
data16
pop
jl
ficomp
sbb
cwde
aam
xchg
inc
adc
jp
pop
sub
mov
fadd
and
and
xor
arpl
mov
out
cmp
outs
xchg
mov
(bad)
shr
rol
mov
jo
adc
and
xlat
jmp
outs
std
cli
(bad)
std
xor
add
push
jle
mov
out
inc
jmp
addr16
in
add
push
test
fsubrp
push
sbb
and
leave
inc
sub
ins
lock
inc
cmc
int
add
dec
fcomp
sbb
out
imul
mov
gs
fcmovb
test
outs
jmp
inc
(bad)
and
aam
fsubr
mov
push
pop
nop
sub
mov
push
fist
mov
pop
mov
push
mov
leave
fsub
es
push
mov
das
les
mov
dec
xor
push
fcmovnu
cmp
jg
add
jle
jg
ins
aaa
lock
fiadd
push
xchg
loope
hlt
scas
inc
xor
xor
and
pop
pop
cmc
cs
std
inc
mov
sub
add
dec
in
jnp
and
lock
jae
push
pop
enter
lods
add
sbb
xor
inc
loop
push
mov
ja
fld
inc
cmp
outs
sti
add
sub
mov
jle
pop
pop
add
cmps
jno
push
jbe
mov
pop
fs
icebp
vpaddusw
outs
daa
es
and
push
pusha
js
in
(bad)
fbld
dec
leave
xchg
pop
ja
or
mov
outs
dec
sar
mov
or
xor
adc
mov
xchg
rcr
add
ds
hlt
js
shl
jo
jp
stc
pop
aam
loop
xchg
rol
fild
pushf
jmp
scas
cmp
mov
adc
das
stc
scas
jo
jge
out
or
sbb
push
lods
ss
cmp
jb
mov
mov
adc
or
cmp
cmc
push
dec
pop
inc
push
daa
cmp
loop
pop
and
fild
mov
dec
shl
pop
into
or
data16
dec
shl
jmp
sub
test
ds
mov
cmp
xchg
push
jo
mov
fcom
mov
mov
loopne
pop
int3
out
dec
push
mov
pop
add
sahf
mov
sbb
mov
scas
push
lods
sahf
(bad)
cmps
rcl
inc
ins
mov
cmps
int3
push
inc
inc
add
push
pop
stos
add
lock
adc
sub
call
jecxz
stos
scas
add
arpl
add
jae
xor
outs
dec
pop
iret
je
int3
cli
fwait
xchg
lods
inc
test
out
sub
int3
mov
imul
xchg
lods
in
in
mov
pop
or
ins
ins
loope
dec
stos
mov
(bad)
mov
(bad)
jl
cmp
mov
or
dec
cmp
cmp
push
mov
jne
push
pop
pop
lods
push
movs
ret
test
mov
cmp
xor
mov
les
int3
xor
cli
mov
sbb
stc
sub
cmp
xor
or
cmps
push
pop
loopne
pop
pop
stos
(bad)
xchg
scas
xchg
lahf
xchg
jle
xor
jns
psrlq
loope
(bad)
das
fwait
mov
mov
push
lahf
leave
sub
mov
jo
test
not
jmp
cld
mov
pop
imul
jl
mov
fst
je
mov
test
fist
cs
push
ds
inc
lea
cmc
or
js
lock
adc
lods
dec
cld
inc
bound
xchg
or
dec
mulps
leave
shr
repz
call
pusha
add
add
pop
pop
or
bound
icebp
out
cdq
xlat
cwde
xor
mov
add
xchg
es
cmp
adc
aas
jb
pop
mov
xchg
dec
(bad)
call
imul
ins
push
loopne
jmp
and
add
jg
ds
cmps
inc
imul
dec
setg
enter
mul
jl
cmp
jl
loopne
jne
in
inc
fidiv
pop
add
mov
push
fs
mov
jne
js
adc
cmps
in
inc
or
scas
cmp
pop
adc
jge
inc
iret
pop
shl
pop
in
adc
lds
sub
rep
fs
imul
aad
movs
aad
outs
call
js
int
add
pop
movs
fs
or
and
stos
xor
push
and
lods
retf
push
sbb
cmp
pop
and
iret
out
mov
in
inc
mov
lahf
ret
les
daa
leave
and
fs
cmps
pop
(bad)
(bad)
jno
mov
inc
out
arpl
in
push
arpl
nop
jmp
pop
add
inc
cld
mov
xor
into
pop
cmp
imul
cmp
je
dec
inc
push
rcl
fiadd
dec
mov
(bad)
mov
push
scas
xor
xlat
repnz
inc
xor
cdq
xchg
xchg
cmp
jge
es
shr
xor
retf
cmp
jo
sub
mov
and
ds
pop
dec
add
inc
iret
jmp
and
fwait
ds
mov
jmp
jae
iret
inc
cmp
dec
pop
cli
xor
jmp
and
mov
xchg
inc
jmp
mov
mov
jecxz
fdiv
dec
fsub
sbb
sub
cmp
lods
jne
bound
sbb
out
jp
aad
mov
call
dec
jmp
out
cld
and
arpl
popf
sbb
mov
dec
jecxz
int
neg
push
xor
push
mov
ret
mov
aaa
or
mov
mov
inc
movs
fisttp
and
mov
hlt
ds
movs
pop
mov
inc
repnz
push
inc
dec
pop
out
jmp
clc
push
add
rcl
popf
ins
xor
xor
inc
push
xchg
pop
mov
push
into
bnd
(bad)
scas
pop
pop
and
movs
pop
repz
retf
stc
dec
popa
mov
sbb
jmp
jns
sti
jo
add
jne
pusha
(bad)
ja
xor
xchg
cdq
std
sbb
retf
or
idiv
stc
mov
cld
ret
int3
pop
xlat
cmps
inc
mov
addr16
inc
cld
stc
shl
sub
and
pop
call
push
(bad)
mov
lahf
cmp
stc
mov
cmp
popf
mov
sub
arpl
enter
pop
(bad)
ss
xor
xor
daa
add
addr16
imul
mov
sub
jecxz
xchg
data16
mov
cdq
dec
mov
cmps
test
inc
int
sub
sub
sub
add
and
out
pop
js
cmp
push
test
ins
std
(bad)
retf
fs
xchg
adc
add
pop
push
push
mov
or
xchg
lods
out
or
jl
ror
and
sbb
ror
sbb
jg
jns
mov
jg
and
stc
mov
repz
imul
xchg
mov
push
stc
adc
jge
mov
test
fild
sbb
mov
fcom
mov
pushf
scas
add
pop
leave
or
sbb
xor
outs
and
push
inc
and
jo
fwait
or
or
fwait
inc
dec
rol
or
jg
jge
sub
jnp
push
cli
or
mov
dec
test
and
inc
pop
push
call
gs
cmp
aad
clc
mov
aad
sub
(bad)
ror
add
addr16
mov
loop
inc
loopne
or
ins
mov
or
dec
popa
mov
mov
aaa
inc
jge
push
push
dec
sbb
push
push
das
sahf
test
pop
mov
aam
lahf
(bad)
out
shr
xor
jo
cmp
xor
in
xchg
and
es
cdq
pop
std
mov
inc
int3
aam
out
push
hlt
jecxz
pushf
push
xor
and
cmp
cmps
pop
and
mov
movs
movs
sub
out
fimul
sbb
retf
xchg
or
les
leave
inc
cmp
pop
xor
or
lods
adc
mov
xor
xor
push
jge
push
mov
pop
in
add
jg
hlt
xor
iret
pop
mov
popa
mov
loope
sub
adc
pop
jmp
xchg
dec
cli
cwde
add
aad
push
inc
mov
out
mov
sbb
les
xchg
dec
arpl
adc
cld
aas
jg
and
call
in
or
hlt
into
cld
jae
leave
xchg
mov
(bad)
inc
xchg
add
cs
mov
dec
lods
out
inc
pop
mov
xchg
sti
(bad)
aaa
not
int3
push
inc
and
fnstenv
mov
cdq
dec
retf
pop
pop
push
(bad)
repz
jmp
sub
das
in
jmp
bound
jns
and
adc
mov
and
and
bnd
cmp
inc
jecxz
sub
psubw
dec
call
inc
jae
mov
sbb
pop
nop
mov
test
nop
out
add
pop
jns
dec
jp
cmc
icebp
enter
jecxz
mov
sub
dec
mov
mov
push
into
sbb
add
stc
in
push
cwde
(bad)
push
xlat
das
push
in
lahf
fmul
outs
aam
mov
pop
in
adc
add
movs
stos
(bad)
jb
daa
shr
add
dec
mov
or
nop
xor
inc
pop
pop
outs
mov
xchg
imul
sub
jp
movs
mov
ss
lods
(bad)
pop
jbe
adc
mov
and
xchg
sub
test
xor
fbstp
dec
sbb
fcmovb
push
jae
cmp
jae
in
mov
outs
in
add
jmp
cmp
out
push
test
pop
mov
xor
pop
jmp
retf
adc
stos
mov
jle
and
in
xchg
lds
inc
sub
xchg
add
movs
and
jp
dec
push
cmps
dec
mov
sbb
mov
outs
dec
int3
ret
adc
fisub
jl
stos
fpatan
cld
div
jnp
and
mov
pop
pop
retf
mov
sub
cmp
push
xor
dec
sbb
xchg
inc
or
stos
cmp
xor
shr
inc
xchg
mov
sub
jp
jecxz
inc
in
sti
push
hlt
xchg
pop
jns
inc
mov
sti
dec
aas
sbb
hlt
mov
call
dec
mov
sub
pusha
in
jns
mov
lods
pop
adc
mov
fidivr
cmp
loopne
shl
cmp
jecxz
and
inc
fdivr
sbb
sbb
cmps
dec
cmp
mov
call
mov
jmp
xor
jo
inc
cli
mov
mov
mov
data16
loop
sub
or
push
xor
push
or
outs
pop
cs
mov
xchg
(bad)
jne
shr
nop
(bad)
nop
xor
(bad)
daa
sahf
in
sti
xor
fisub
ss
data16
stc
je
sub
popa
mov
lds
jmp
mov
test
dec
aam
les
xor
ss
bts
xchg
in
lods
jno
scas
or
xor
out
in
pop
xchg
pop
aam
mov
xchg
sar
push
sbb
sub
out
(bad)
aam
loope
jmp
mov
inc
adc
lea
popf
call
fwait
inc
inc
or
repnz
fadd
pushf
mov
xchg
into
pop
arpl
sar
pop
cs
mov
aam
xchg
fisttp
(bad)
leave
adc
lea
ret
enter
int3
xchg
popf
aas
ret
xor
sbb
lock
dec
stc
and
test
dec
mov
retf
arpl
jmp
icebp
outs
in
pop
retf
mov
imul
mov
push
xor
imul
and
(bad)
xchg
stos
cmp
pop
mov
clc
mov
sub
adc
push
adc
call
sbb
or
daa
jmp
xor
stos
mov
mov
in
xor
pop
add
ret
and
cmp
out
inc
dec
push
fild
jmp
jne
fidivr
or
jl
and
jge
rcl
mov
add
cmp
dec
xor
mov
inc
mov
xchg
adc
jmp
add
std
mov
mov
jg
mov
cmp
xchg
add
int
xchg
push
pop
add
repz
data16
sub
in
jge
or
das
dec
ja
cdq
xor
cmps
dec
popa
clc
mov
or
push
xchg
aad
cmps
jecxz
sub
test
test
mov
mov
pop
and
sbb
add
xchg
imul
xor
(bad)
(bad)
mov
and
retf
xchg
in
jge
mov
mov
and
jb
pop
adc
mov
xchg
pop
adc
push
or
(bad)
add
or
push
lock
outs
stc
shr
mov
mov
into
mov
imul
mov
xor
cs
retf
mov
cmps
test
mov
pop
mov
movs
xor
outs
pop
sub
dec
or
mov
add
inc
int
cdq
cmp
ins
pop
mov
jge
mov
xor
aad
in
sub
or
out
out
dec
xor
cmp
sahf
and
inc
(bad)
jae
or
adc
mov
add
mov
cmp
dec
clc
xchg
daa
xor
inc
in
pop
ficomp
pushf
jb
or
xchg
xchg
sub
pop
pop
enter
test
add
mov
or
adc
pop
push
out
fst
inc
cmp
(bad)
xchg
ss
xchg
push
ins
neg
xchg
push
enter
jp
fs
retf
clc
mov
cs
dec
lds
sub
xor
pop
mov
or
mov
inc
xor
mov
or
and
movs
sub
imul
add
cmc
add
mov
out
mov
fistp
lea
aaa
jnp
xchg
jns
leave
(bad)
ficom
or
out
data16
fisubr
xor
push
popa
cmp
mov
pusha
xchg
test
cwde
push
xchg
ins
and
xchg
aaa
inc
dec
cld
sbb
or
or
adc
repz
xchg
call
xor
ficom
mov
es
lea
xor
push
ds
jmp
xchg
mov
fidiv
adc
add
cdq
or
(bad)
xchg
fld
retf
mov
push
imul
gs
in
or
fdiv
xchg
fstp
(bad)
int
ins
xor
sbb
popa
data16
icebp
mov
aad
ror
add
repnz
outs
cs
loope
jbe
cmp
ror
or
aas
lods
jecxz
or
idiv
fwait
inc
and
or
loop
mov
fs
ficom
or
int3
adc
cmps
aaa
aas
sbb
popf
(bad)
and
mov
jl
(bad)
xor
push
es
arpl
adc
inc
xchg
adc
lahf
inc
(bad)
movs
push
add
cmc
or
vpunpckhbw
xor
out
test
dec
adc
rcr
jg
ret
inc
jp
add
dec
mov
(bad)
pop
jecxz
cmc
mov
sbb
(bad)
jmp
mov
and
pop
xor
fwait
sti
ror
push
out
push
lds
mov
int3
mov
int3
aaa
lock
in
lds
dec
and
aam
inc
jne
inc
fdiv
and
push
jns
and
leave
xchg
add
scas
and
xchg
outs
bound
rep
fisubr
sar
sar
jbe
xchg
push
arpl
or
cwde
std
adc
fs
scas
inc
inc
dec
je
push
enter
mov
ret
mov
xor
aam
mov
icebp
(bad)
mov
sub
repz
ds
pusha
mov
pop
inc
xchg
sub
ror
and
jne
imul
xor
sbb
cmp
xor
mov
loopne
cmps
xchg
cld
push
daa
rcr
jnp
icebp
push
shr
ror
cmp
test
push
mov
gs
jb
xchg
xor
mov
stc
push
mov
adc
popa
clc
je
movd
xchg
push
mov
movs
je
imul
inc
sti
fwait
(bad)
dec
mov
or
adc
sbb
sbb
xor
jge
stc
mov
ins
lahf
lahf
cmp
inc
add
les
cwde
rol
call
adc
imul
mov
mov
retf
adc
int3
fnstenv
out
mov
mov
out
cmp
dec
dec
leave
pop
fnstsw
xchg
fisub
rol
sbb
mov
arpl
call
cmp
clc
in
mov
mov
sar
cmp
mov
in
aam
outs
add
cwde
adc
mov
in
sub
xor
icebp
pop
pushf
adc
(bad)
in
adc
xchg
sbb
mov
popf
add
mov
dec
dec
mov
test
sub
and
mov
push
xchg
sbb
stos
out
mov
popf
adc
sar
fwait
mov
lods
adc
jne
loopne
repz
push
pusha
les
les
addr16
inc
mov
mov
adc
es
popa
sbb
ins
push
sub
add
jnp
test
call
and
xlat
cmp
ja
aaa
jae
pop
popa
mov
ficomp
out
sub
cmp
out
fs
jno
adc
xor
mov
xor
sbb
shl
arpl
pxor
cmc
dec
xchg
cdq
inc
shl
shl
dec
dec
jl
out
rol
movs
les
fistp
inc
loopne
xchg
out
lock
mov
call
dec
movs
mov
mov
out
dec
jecxz
add
scas
fmulp
hlt
mov
jecxz
int3
pop
out
dec
pop
xchg
xchg
mov
cmp
add
adc
imul
cmc
dec
jae
inc
loope
push
leave
in
aam
pop
in
lds
daa
mov
mov
aam
adc
aam
clc
outs
push
dec
push
outs
cmc
and
inc
mov
ficom
pop
cmps
sbb
cmc
fmul
xchg
xor
pop
loop
pop
imul
clc
lea
fnstenv
push
cmp
(bad)
jo
mov
mov
into
ss
fstp
popa
setge
lods
movs
(bad)
int
ret
into
cmp
jbe
mov
shr
sub
cs
push
push
adc
sub
mov
mov
gs
jae
clc
mov
cmps
adc
mov
cmp
cli
jo
pop
mov
mov
adc
push
imul
mov
outs
cs
pop
dec
popa
xor
xchg
jno
mov
jbe
outs
into
ins
jp
sub
pusha
loopne
aad
pop
call
or
add
adc
movs
outs
and
bound
jle
mov
gs
jbe
outs
imul
sbb
add
jnp
pushf
mov
ins
add
nop
xlat
ss
pop
jne
mov
das
call
mov
add
jo
mov
jmp
bound
out
pushf
or
data16
pusha
enter
fwait
sbb
mov
daa
arpl
or
and
xor
fcmovnb
cwde
ds
sub
in
push
repz
cld
leave
sub
fwait
test
jbe
ret
and
inc
add
jnp
bnd
retf
jecxz
sub
mov
test
test
pop
lods
neg
ins
push
enter
sub
retf
pushf
(bad)
mov
pop
xchg
cmp
(bad)
xchg
pop
(bad)
pop
jae
enter
sbb
mov
pop
(bad)
fldl2e
add
scas
add
pop
sar
inc
pop
push
lock
bound
adc
cmp
or
jo
inc
push
pop
mov
jb
jo
stos
add
ds
cmc
mul
retf
stc
inc
push
(bad)
jmp
cmc
cs
retf
jb
lods
call
(bad)
jae
push
mov
inc
inc
pop
xchg
mov
ror
cmp
call
xchg
cli
fist
mov
repz
std
cmps
out
xchg
fwait
and
pop
shr
lods
scas
sub
or
mov
dec
mov
lods
imul
pop
test
sbb
sbb
mov
lahf
adc
inc
ins
xchg
jmp
pop
inc
std
cmp
iret
jl
or
outs
mov
xlat
xchg
inc
xlat
cwde
fnstsw
xchg
jmp
fsub
dec
das
fimul
aaa
or
jnp
adc
cmp
mov
mov
cmps
jne
aaa
mov
out
cwde
jmp
pushf
add
pushf
cmp
cli
ins
sub
cdq
jbe
sbb
fild
fs
cmps
adc
das
jg
mov
adc
retf
sub
add
jmp
popa
imul
sub
daa
and
scas
add
cmp
add
fidiv
push
data16
(bad)
call
in
mov
imul
dec
mov
mov
jo
dec
mov
fidivr
ret
stc
mov
xacquire
xor
(bad)
jp
fnstenv
jecxz
daa
xchg
cmps
jns
sub
and
pop
mov
or
sbb
mov
in
scas
xchg
add
push
test
loopne
(bad)
aas
xchg
jb
je
xchg
fnstenv
sbb
mov
(bad)
fist
stc
(bad)
movs
xchg
mov
xchg
fsub
mov
add
loopne
fistp
add
adc
scas
(bad)
call
pop
push
lock
outs
lds
out
mov
into
test
mov
pop
sub
push
icebp
xchg
test
mov
hlt
cmps
lods
sub
movs
jbe
jnp
push
sub
cmp
push
iret
pop
fdiv
xchg
(bad)
pusha
jb
aaa
cmp
push
(bad)
stos
iret
mov
int3
and
sbb
ins
sbb
mov
dec
cmp
and
shl
jno
pop
pop
(bad)
div
jmp
cdq
faddp
lahf
shl
or
js
inc
(bad)
push
sub
mov
syscall
mov
lods
push
clc
xor
cmp
dec
call
lods
mov
aaa
cwde
mov
mov
clc
pushf
stos
add
jle
mov
xchg
sub
sbb
cwde
jg
dec
jecxz
xor
inc
(bad)
push
cs
jmp
jp
ds
scas
pop
rcl
push
mov
and
push
xchg
pop
add
cmp
adc
push
loop
test
sti
adc
cmp
jg
rcr
xchg
mov
pop
addr16
or
daa
jl
mov
icebp
retf
sbb
cmps
call
retf
xor
repz
jp
stos
test
loope
int
mov
aam
addr16
push
fs
imul
(bad)
xor
pop
sbb
je
mov
cld
in
lods
out
es
push
mov
clc
dec
ss
xor
dec
add
add
xor
cmp
gs
sbb
bound
and
clc
and
fisub
arpl
xchg
shl
add
jnp
jmp
aaa
xor
bound
test
pop
or
mov
xchg
xchg
dec
inc
dec
fsubr
icebp
mov
int
add
mov
hlt
popa
pop
in
inc
inc
xor
push
pushf
call
xor
pop
in
sahf
cli
mov
jle
cmp
int3
rcr
adc
(bad)
fnstenv
mov
fbstp
ds
inc
and
xor
inc
sti
xor
sub
sbb
and
cmps
and
outs
and
mov
inc
(bad)
ja
cmps
jl
pop
inc
xor
sbb
lods
push
lods
rep
fdiv
cld
pop
test
shl
adc
and
push
retf
sbb
jno
mov
jp
push
add
mov
sub
imul
aas
add
lods
lahf
movs
sti
inc
mov
mov
push
xor
in
push
mov
xchg
push
xor
jl
jg
mov
jecxz
inc
in
and
fdiv
jmp
loopne
fadd
inc
sbb
sbb
pushf
pop
mov
push
outs
inc
or
sbb
jbe
add
repz
fld
mov
xchg
jecxz
xchg
sub
jbe
fdiv
sbb
call
les
out
dec
push
dec
dec
mov
and
pop
ja
sbb
sub
mov
fstp
aad
push
imul
pop
xchg
jge
inc
sub
xor
cmps
(bad)
div
inc
mov
out
pop
pop
or
ss
outs
call
xor
imul
pop
sub
xor
mov
js
add
dec
mov
in
push
pop
pop
retf
inc
sbb
mov
fcmovu
or
rcr
xor
mov
xor
stos
lods
vpmadcsswd
cli
imul
jmp
adc
imul
mov
sti
and
sbb
cmp
pusha
xchg
mov
inc
jbe
inc
xchg
add
cmp
in
into
pushf
mov
clc
adc
pop
pop
arpl
ficom
(bad)
sar
call
adc
rcl
pop
je
push
scas
push
xchg
cmc
add
test
add
mov
pop
int3
cmp
add
les
xor
pop
repz
arpl
nop
or
cwde
sub
ret
pushf
fwait
xchg
jb
fild
mov
jecxz
loopne
fwait
xchg
push
sub
cmps
ins
sar
scas
and
lods
scas
adc
adc
ds
dec
(bad)
mov
aaa
ins
lds
jno
xchg
aaa
dec
sub
mov
lods
mov
cmp
cmps
stc
test
shl
loop
in
jne
call
shl
outs
xor
mov
fs
lods
ss
add
xor
jae
ds
aam
pop
js
dec
imul
sub
mov
adc
out
push
push
push
rcr
imul
pop
mov
in
mov
(bad)
jbe
mov
pslld
hlt
and
xchg
mov
cs
leave
stos
idiv
test
jns
nop
movs
push
mov
xchg
or
lock
nop
and
clc
lock
pop
(bad)
mov
add
jge
fcom
icebp
lock
pop
and
popf
scas
jnp
add
fiadd
jbe
inc
pop
arpl
in
cs
pop
lock
or
dec
cmp
inc
adc
and
leave
xor
int
jnp
mov
pop
dec
sub
inc
enter
add
xchg
mov
xchg
and
fistp
das
sub
nop
or
hlt
cmps
add
xor
xchg
aas
jae
movs
cmp
mov
xor
dec
jle
jne
fld
pop
jp
or
pushf
pop
sub
mov
dec
in
push
pop
dec
push
out
sub
loope
cmps
fwait
add
test
jae
dec
cmp
push
pop
pop
mov
int3
into
push
popa
pop
pop
sbb
rcl
pushf
es
ss
and
mov
push
enter
dec
or
clc
xor
inc
or
mov
repnz
cmc
scas
and
pop
cld
cwde
aaa
adc
mov
pop
outs
dec
shr
pop
dec
lea
out
and
int3
sub
bound
pop
mov
(bad)
int3
inc
sub
out
jl
iret
dec
dec
fbstp
ret
inc
add
pop
pop
fadd
mov
into
sub
xor
pop
xor
or
bound
push
in
xchg
and
loopne
and
outs
jno
sub
cmc
imul
push
loope
cs
pop
cld
retf
enter
mov
mov
test
and
pop
out
cs
mov
stc
or
adc
jb
lock
(bad)
(bad)
jae
test
or
int
or
pop
inc
sub
fwait
leave
lods
sub
enter
lods
sbb
mov
mov
xor
aaa
mov
test
mov
ret
jbe
push
js
scas
jge
(bad)
into
std
sub
fidiv
rol
call
aaa
(bad)
aam
imul
test
mov
fcmovnb
dec
in
jno
adc
arpl
jno
retf
sbb
or
stos
or
fs
int3
adc
and
sub
sub
xchg
inc
jbe
lea
xchg
pop
dec
test
cmp
pop
pop
cmp
add
cs
pop
inc
push
addr16
je
shr
rol
in
repz
cmp
test
pop
call
push
icebp
mov
mov
sub
lods
cmc
add
push
sbb
pop
sub
pushf
jp
xchg
div
fmul
jl
fs
icebp
ror
jp
je
xor
adc
xchg
or
cmp
and
mov
mov
mov
movs
xchg
std
test
scas
(bad)
pop
retf
mov
ret
outs
pop
or
fs
repnz
fistp
frstor
mov
mov
(bad)
in
jbe
mov
lock
jno
lods
scas
mov
shl
(bad)
popf
fwait
repnz
cmps
pop
bts
retf
inc
out
lahf
test
jno
xor
retf
add
adc
pushf
ins
dec
sbb
pop
fs
ja
xlat
lock
fdiv
mov
jge
sub
jmp
das
pusha
(bad)
mov
adc
in
mov
xchg
popa
xchg
mov
retf
inc
inc
dec
gs
shl
cli
sub
rol
or
cld
in
loopne
or
jge
sbb
xchg
pop
add
xchg
in
jb
and
jle
(bad)
xor
dec
xor
and
loopne
mov
(bad)
xor
fcomp
cs
ror
jns
push
push
mov
dec
lea
inc
mov
dec
pusha
in
mov
pop
mov
enter
push
or
xchg
adc
in
push
stc
pushf
in
arpl
xchg
inc
mov
pop
popf
je
lods
adc
sub
pop
fild
aas
sahf
push
cmps
jp
and
aaa
fist
mov
mov
retf
das
pushf
js
dec
mov
cdq
rcr
xor
or
mov
hlt
imul
or
xchg
lahf
cmp
jle
mov
and
inc
add
cmp
sbb
inc
outs
aam
ret
(bad)
call
stc
inc
adc
push
adc
pop
test
mov
mov
mov
xchg
sahf
dec
or
xor
rcl
xchg
jmp
pusha
push
push
jb
mov
mov
fst
mov
(bad)
repz
fs
push
jecxz
adc
sti
adc
mov
rcr
inc
stos
in
fwait
dec
mov
test
nop
jo
call
jmp
repnz
cmp
mov
dec
clc
call
mov
sub
mov
arpl
add
das
mov
sbb
dec
mov
into
sbb
xor
push
mov
pop
inc
or
jno
cdq
(bad)
xor
dec
js
cs
pop
je
out
push
adc
or
mov
push
shl
pop
retf
in
inc
(bad)
push
push
aam
push
adc
fnstcw
gs
lock
lods
scas
ds
fwait
jb
add
add
pop
outs
jo
dec
inc
jmp
popa
inc
test
sub
jns
adc
dec
xchg
pop
lock
xchg
in
inc
mov
outs
pop
ficom
mov
sti
int3
and
or
mov
mov
inc
call
shl
sar
(bad)
ja
mov
jle
int
pop
test
add
jg
mov
sub
stc
(bad)
stos
ss
gs
mov
in
out
adc
test
cmp
ins
ja
push
inc
mov
int
test
pushf
jmp
in
add
inc
ss
pop
pop
and
enter
test
mov
sbb
test
ds
stos
dec
sub
pop
sbb
adc
and
mov
stos
(bad)
shl
xchg
jge
(bad)
cli
lea
cmp
push
lahf
sbb
xchg
adc
lods
sub
push
push
jb
mov
adc
sub
lods
adc
mov
gs
mov
xor
call
mov
and
push
inc
(bad)
shl
out
pop
xchg
test
mov
ror
push
jecxz
mov
mov
add
adc
ins
ret
dec
sbb
push
pop
sti
jno
xor
das
fs
scas
sbb
es
mov
sti
daa
sbb
pop
cld
pop
mov
mov
scas
jae
enter
mov
and
jb
fdivr
dec
fiadd
cli
mov
pop
push
arpl
ret
mov
dec
sbb
ror
mov
mov
mov
sub
xchg
jnp
xlat
fwait
leave
jns
rcl
fcom
retf
mov
arpl
push
xchg
dec
mov
movs
pusha
and
jecxz
gs
loop
sub
inc
add
pop
bound
push
pop
cmp
mov
inc
mov
jp
mov
ins
ja
mov
icebp
adc
mov
push
imul
push
push
sbb
pop
into
movs
xchg
push
cld
test
pop
cmps
mov
dec
mov
call
imul
(bad)
mov
data16
(bad)
clc
mov
push
cwde
push
sub
lods
call
mov
mov
jmp
fcom
xor
mov
sub
outs
mov
jno
fld
retf
or
mov
push
pop
(bad)
dec
imul
xor
xchg
es
in
push
push
mov
and
cmc
pop
jne
popa
jge
mov
test
mul
pop
lods
adc
fsub
adc
mov
xchg
(bad)
add
mov
add
rol
push
sub
aaa
cmp
jns
call
xor
(bad)
xchg
mov
xchg
add
jmp
into
bnd
adc
inc
xchg
movs
add
mov
cdq
mov
xor
pop
in
imul
dec
call
xchg
mov
mov
pop
int
xor
addr16
stc
cmp
hlt
call
jo
push
data16
xchg
add
and
jo
cmps
and
sbb
popa
stos
sbb
sbb
and
stc
mov
cmp
mov
sbb
lds
jnp
inc
addr16
les
inc
cmp
sahf
cdq
aaa
ins
iret
push
(bad)
jb
push
push
dec
xchg
or
xchg
jo
adc
aaa
xchg
and
mov
push
jmp
inc
inc
mov
nop
xchg
fistp
push
iret
xor
jp
rol
mov
cmps
push
sbb
aam
xor
mov
pop
aaa
push
sub
xlat
jmp
jo
loop
xchg
inc
sti
sub
imul
dec
sub
dec
je
cmp
mov
mov
or
add
ja
add
ror
(bad)
dec
fcmovb
pop
ret
outs
and
inc
pop
xor
in
scas
fimul
pop
ror
outs
adc
push
sbb
cmp
fcomp
dec
jl
daa
adc
xchg
xchg
lds
test
dec
lahf
push
pop
jle
mov
cmps
pop
aas
in
sbb
mov
nop
ja
push
inc
push
pop
mov
cs
sub
dec
add
mov
repz
pop
jae
pop
jb
sub
xchg
loopne
fst
js
xchg
xchg
mov
ins
mov
pop
xchg
mov
add
arpl
cmp
mov
jbe
mov
xchg
xchg
test
inc
cs
rol
pop
cs
sbb
popa
imul
mov
inc
jb
sbb
jne
sbb
ss
jae
push
jae
lds
cbw
gs
dec
ins
(bad)
sti
pop
ret
cli
(bad)
stos
adc
adc
add
test
xchg
mov
mov
push
arpl
jno
mov
sahf
movs
add
out
sbb
cmps
push
and
and
into
jns
adc
xchg
sub
jp
cmp
inc
push
mov
or
push
(bad)
jmp
jmp
sub
push
les
mov
mov
mov
add
out
(bad)
test
popa
jae
mov
xor
dec
aam
xlat
bound
lea
scas
sbb
mov
sar
pop
mov
inc
aas
(bad)
(bad)
ja
outs
sbb
ds
sub
imul
scas
pop
xchg
adc
fstp
cld
mov
xchg
cmp
mov
inc
test
adc
push
jmp
int
sti
aas
loope
or
(bad)
lds
jmp
mov
addr16
fisttp
rol
call
pop
mov
test
cmp
imul
pop
dec
jmp
mov
test
jmp
xchg
add
adc
sub
add
icebp
(bad)
sub
sub
icebp
loop
jge
popf
fnstcw
outs
inc
mov
jle
loopne
jbe
ret
cdq
inc
mov
cmps
push
and
ins
pop
push
inc
and
and
xor
stos
xchg
daa
scas
cdq
int3
fsub
out
jo
retf
and
cli
jnp
or
xchg
and
mov
xor
imul
sar
(bad)
div
xor
aas
xchg
add
scas
mov
stos
push
push
pop
out
fidivr
(bad)
out
cwde
cmc
scas
and
add
xchg
rcl
lea
pop
sbb
dec
dec
xchg
pusha
fld
jnp
ins
xlat
sub
repnz
or
fsubr
sub
mov
push
push
dec
sub
sti
call
enter
adc
inc
gs
(bad)
out
int
jbe
adc
and
(bad)
xchg
cwde
lahf
mov
call
sar
mov
xor
cmps
inc
leave
into
sub
shl
push
sub
and
popa
pop
sbb
jno
ficomp
push
jecxz
pop
push
mov
loope
and
xor
jecxz
xchg
dec
jne
inc
jb
pop
and
dec
outs
out
and
nop
xchg
jecxz
ins
jb
mov
sar
jmp
aas
inc
iret
mov
add
aaa
xchg
jecxz
lock
out
cmp
out
repnz
retf
mov
ret
or
int
pop
sub
dec
inc
ret
nop
into
dec
cmp
mov
fs
enter
neg
cdq
adc
mov
inc
sub
call
mov
aam
icebp
sub
push
bound
jae
mov
xchg
fist
stos
inc
push
pop
mov
pop
jns
or
fisub
xchg
mov
jo
bound
push
or
cs
mov
ror
mov
cli
outs
retf
push
pop
in
rcr
add
aaa
sub
in
repnz
cmp
sbb
jp
dec
xchg
mov
mov
sar
fiadd
(bad)
fist
outs
pusha
sub
sub
mov
jmp
and
xchg
cmp
call
clc
and
pop
addr16
pop
pop
mov
and
inc
leave
mov
call
rcl
and
jge
mov
movs
jge
or
rcr
adc
jne
mov
loop
repnz
and
and
inc
mov
outs
enter
bound
cmp
lahf
cld
sahf
bound
xor
ins
mov
mov
test
idiv
retf
lods
repnz
out
push
sub
mov
jne
iret
lahf
gs
mov
xchg
sbb
mov
or
xor
mov
or
ja
iret
(bad)
sahf
repz
movs
xchg
out
sbb
cwde
fisubr
pop
add
mov
(bad)
mov
push
in
mov
js
push
sti
lods
jns
inc
inc
jno
xchg
and
xor
xor
js
pushf
xchg
mov
jmp
imul
xor
repnz
scas
out
xchg
sbb
scas
cmc
pop
inc
jns
xlat
jge
call
sub
ins
mov
enter
aam
mov
adc
xchg
mov
scas
push
into
loope
clc
xor
out
mov
ins
mov
retf
and
shr
pop
repnz
push
xchg
xlat
adc
(bad)
inc
add
mov
jb
mov
mov
loopne
inc
loopne
xor
sub
fld
jmp
(bad)
rcr
les
xor
icebp
xor
out
retf
and
sub
inc
cli
das
cdq
dec
ja
rcl
inc
pop
lock
mov
adc
mov
jmp
dec
stc
push
push
xchg
inc
fcomp
xchg
std
and
sub
xchg
jmp
idiv
mov
xchg
cwde
cmps
mov
into
jmp
add
ins
and
dec
mov
pop
mov
inc
lock
push
or
mov
mov
in
test
mov
xchg
pop
ffree
hlt
imul
add
sub
add
push
inc
jb
cmp
mov
js
dec
arpl
pop
mov
push
jne
sbb
mov
fdivr
movs
pushf
addr16
sub
push
add
jo
inc
retf
add
push
je
xor
mov
jo
mov
dec
sbb
mov
(bad)
cli
or
xchg
movs
jnp
xor
cmp
cmp
add
sub
shl
ss
and
std
(bad)
fidivr
ret
mov
adc
jb
cmp
and
mov
das
cs
std
adc
fistp
aaa
jl
dec
dec
(bad)
std
imul
push
out
mov
cmp
into
out
scas
sub
mov
or
push
addr16
xor
push
sti
scas
jbe
in
mov
or
mov
adc
sbb
jecxz
and
movs
or
mov
shl
or
push
add
loop
test
fisttp
jmp
xor
gs
mov
pusha
mov
mov
aaa
mov
push
test
bound
aaa
ins
sbb
lahf
push
push
call
cdq
nop
outs
dec
jmp
pop
icebp
scas
jb
cmp
jecxz
mov
out
push
sar
jmp
movs
or
mov
or
inc
push
pop
adc
push
mov
daa
call
sub
dec
test
inc
test
dec
daa
out
hlt
mov
mov
lock
pop
(bad)
dec
test
hlt
push
jmp
sbb
in
and
(bad)
jbe
gs
sbb
out
or
push
adc
shl
mov
fstp
dec
rol
nop
std
lock
push
out
inc
jmp
(bad)
gs
push
scas
mov
cli
mov
and
imul
ret
call
jnp
dec
dec
xlat
push
mov
or
fs
sub
shl
popf
and
sbb
fistp
push
xlat
pop
es
fadd
mov
sub
aad
and
fxch
dec
cld
jb
lds
xchg
(bad)
call
addr16
cmp
and
cmp
mov
mov
pop
movs
sub
jp
es
pop
repz
jbe
arpl
pop
imul
sbb
cmp
push
lods
repnz
das
pop
js
jp
pop
nop
lds
dec
cmp
sub
mov
imul
and
push
xlat
fidivr
mov
xchg
or
scas
sub
add
cmp
adc
add
cdq
sahf
ret
pop
jmp
cmova
fstp
dec
mov
inc
hlt
mov
and
stos
xor
aaa
retf
into
ficomp
clc
sti
mov
(bad)
xor
jno
and
outs
sbb
stc
cld
pop
mov
add
icebp
mov
loop
cmc
ret
mov
add
push
lea
dec
ja
call
mov
fsubr
and
push
jecxz
mov
repz
jmp
ds
neg
inc
push
push
pop
rcl
jl
icebp
movs
jge
sbb
cmps
jbe
dec
popf
dec
jo
mov
ins
cmp
or
leave
and
inc
inc
addr16
fs
push
lock
aaa
dec
stos
inc
loop
test
retf
add
inc
sbb
sbb
adc
cli
sahf
or
jb
retf
dec
or
sub
lea
adc
pop
add
imul
mov
inc
xor
inc
test
jnp
pop
xchg
or
std
jnp
xchg
popa
fild
popf
push
(bad)
aaa
or
stc
mov
cmp
movs
inc
jb
sub
push
cld
pop
and
or
call
cmp
mov
call
inc
mov
lea
outs
xchg
ins
mov
dec
test
lahf
lea
xchg
and
icebp
pop
pop
sti
push
sbb
loope
das
or
mov
out
sub
data16
ror
push
mov
adc
mov
cwde
popf
mov
sti
movs
dec
nop
iret
bound
pop
repnz
cmp
pop
dec
or
call
add
into
inc
fwait
inc
enter
rol
cmps
xlat
adc
adc
inc
jb
into
test
push
repz
sti
scas
test
(bad)
loope
mov
dec
ret
outs
outs
xor
bound
cmps
or
lods
jecxz
adc
pop
inc
inc
mov
xchg
push
test
mov
outs
cmp
xchg
pop
sbb
push
aad
push
in
idiv
loop
jb
cmps
and
ins
pop
sti
out
aas
mov
lahf
into
xor
scas
and
cmp
arpl
adc
mov
imul
leave
mov
mov
xor
cmps
add
cmp
dec
ins
add
enter
test
into
iret
movs
imul
mov
mov
cwde
push
test
inc
fidivr
loopne
test
jecxz
stos
add
inc
pop
mov
sbb
push
adc
or
in
mov
scas
inc
inc
fsubr
adc
adc
test
and
gs
mov
cmp
je
mov
or
dec
jle
repz
xor
mov
add
sbb
add
jmp
in
mov
mov
popa
jo
mov
std
and
mov
mov
sub
xor
aad
push
pusha
int
xor
fwait
sbb
xchg
addr16
xor
cld
sbb
xor
mov
dec
cld
xor
jo
mov
into
and
retf
lea
gs
(bad)
mov
push
aas
loopne
(bad)
push
fild
xor
pop
fiadd
nop
push
pop
adc
ins
cmp
arpl
pushf
data16
xor
mov
bound
mov
outs
pop
jb
pop
xchg
arpl
pushf
xor
cmc
cmp
mov
or
popa
clc
jno
clc
push
pushf
into
mov
ss
adc
jecxz
mov
and
stc
push
gs
xchg
push
and
jno
daa
mov
scas
dec
mov
lods
mov
xchg
retf
daa
rcl
xor
jns
pop
adc
mov
jg
(bad)
loopne
fwait
loopne
mov
(bad)
sbb
lods
imul
mov
ja
mov
inc
popa
je
test
push
jb
xchg
mov
jae
js
xchg
sahf
outs
call
push
inc
sbb
pop
js
jmp
sbb
std
and
jg
cdq
and
and
nop
pop
ins
mov
or
jbe
pcmpeqw
(bad)
mov
mov
sbb
in
out
stos
sbb
call
lahf
int
mov
pop
pusha
or
mov
or
pop
adc
ins
jge
iret
imul
mov
div
ins
cmp
xchg
lods
xor
mov
mov
inc
cld
or
fisttp
pop
push
jo
sub
mov
(bad)
push
fiadd
adc
or
hlt
pop
jae
adc
daa
fdivrp
jecxz
mov
jns
dec
repz
fistp
xlat
mov
dec
ins
push
dec
mov
imul
inc
pop
rcl
sbb
leave
loop
jno
stc
out
sbb
sbb
add
imul
mov
loopne
mov
rcl
mov
sti
and
imul
fisttp
adc
sbb
(bad)
fs
pop
ja
xor
sbb
mov
loope
adc
cmps
push
call
into
test
ficom
jno
test
xchg
je
outs
test
(bad)
jnp
pop
and
sti
xor
sub
sub
lahf
loopne
ds
mov
jnp
repnz
and
cmps
or
mov
mul
and
popf
sbb
xchg
pop
mov
jbe
cwde
rcl
scas
ss
xchg
test
and
mov
add
shl
mov
leave
push
and
mov
mov
xor
jle
adc
retf
mov
pop
scas
jl
mov
cwde
jbe
cdq
xor
push
scas
push
test
pop
neg
sbb
inc
mov
aam
mov
mov
je
adc
and
xor
popf
aaa
out
sub
xchg
xor
jecxz
in
pop
jp
add
cmps
imul
xor
jbe
addr16
cmp
lods
gs
inc
xchg
fwait
xor
adc
inc
jl
inc
mov
mov
push
out
lods
xlat
and
add
mov
and
sbb
and
cmps
mov
add
pop
in
leave
cs
mov
mov
fist
repnz
sub
push
lods
xchg
adc
sub
fld
aad
les
call
pop
(bad)
aad
adc
imul
call
mov
clc
ins
hlt
mov
cmp
imul
add
pop
outs
scas
adc
push
sti
scas
xchg
and
sbb
(bad)
mov
cli
jb
mov
test
data16
add
or
aaa
shr
sub
mov
loopne
mov
dec
push
mov
into
cdq
std
and
mov
mov
mov
mov
neg
cli
mov
lods
mov
rcl
mov
cmp
fs
sbb
icebp
mov
cmp
(bad)
mov
cli
mov
stos
clc
cmp
mov
and
shl
fst
fsubrp
xchg
cmps
addr16
dec
sbb
pop
mov
in
(bad)
xchg
jmp
adc
adc
jns
inc
sbb
stos
sub
shr
cmps
pop
pop
dec
pusha
mov
mov
jne
cmc
jg
or
call
mov
inc
loope
test
loopne
mov
repnz
fiadd
xchg
iret
test
xchg
loop
jne
add
out
or
mov
mov
sbb
dec
hlt
push
movs
bnd
pop
pop
sub
stos
mov
dec
push
call
sbb
jne
movs
cs
xchg
test
xor
push
sub
mov
or
mov
mov
mov
or
icebp
xor
jnp
mov
mov
mov
jmp
stos
aad
dec
add
sub
push
pop
mov
mov
cmp
inc
imul
push
or
out
shl
dec
sub
js
cli
mov
mov
fistp
mov
or
rol
out
lods
pop
scas
push
icebp
fwait
fs
not
mov
test
mov
xchg
test
cs
fisttp
push
inc
mov
xor
jmp
mov
fs
mov
cli
ror
sbb
add
jl
mov
push
mov
call
and
adc
jecxz
xor
mov
ror
clc
xchg
jne
pop
ds
add
hlt
sub
outs
mov
mov
ror
pop
rol
inc
int3
out
into
cmp
outs
ror
test
sbb
ss
clc
pop
xor
(bad)
mov
cvtdq2ps
mov
out
or
pusha
mov
or
mov
repz
out
lods
not
(bad)
mov
icebp
mov
std
sbb
hlt
hlt
adc
and
test
mov
cmps
pop
cmps
jo
mov
ins
test
xchg
push
test
dec
push
mov
shl
sbb
out
sbb
add
addr16
das
jmp
mov
test
sbb
mov
mov
jae
aas
cmps
in
stos
sbb
inc
and
push
adc
bound
add
push
mov
mov
jne
fadd
cld
adc
and
sbb
call
xor
clc
stos
pop
gs
aam
popf
out
fmul
jl
mov
inc
pop
sub
and
jb
lds
and
mov
fstp
mov
scas
(bad)
cmp
addr16
cmp
sub
xchg
lahf
cwde
pop
dec
out
(bad)
or
cs
mov
jmp
leave
loopne
push
and
imul
test
out
int
or
fs
retf
xchg
(bad)
test
in
push
dec
mov
mov
lods
imul
inc
aaa
bound
pop
test
cmp
pop
pop
shl
sub
jg
dec
mov
mov
addr16
retf
sbb
xchg
test
fiadd
div
ins
out
dec
cmp
jno
loope
pop
push
in
and
stos
je
fdiv
pop
add
dec
cmp
xchg
xor
hlt
adc
mov
sbb
xor
xor
sub
imul
push
mov
jge
mov
div
mov
outs
jle
mov
mov
(bad)
mov
out
and
xor
out
scas
dec
push
es
mov
rol
shl
inc
inc
popf
lock
adc
stos
fcom
pusha
scas
and
rcr
cli
mov
sub
xor
mov
cmc
dec
rcl
mov
or
std
addr16
sahf
hlt
daa
scas
xchg
cs
mov
xor
xchg
xor
inc
(bad)
lods
or
je
sahf
xchg
stos
bound
dec
mov
add
cmp
mov
fstp
loope
ins
cld
sbb
push
rcr
ds
fst
fimul
pop
stos
stc
mov
jne
adc
sbb
push
clc
(bad)
es
hlt
pop
and
push
call
xor
addr16
mov
je
xchg
out
dec
and
jo
mov
sub
nop
or
mov
retf
jb
scas
pop
iret
int3
inc
enter
movs
lods
fs
mov
in
inc
(bad)
jle
adc
push
pop
sub
xchg
pusha
out
and
into
popf
loopne
sahf
push
inc
sub
add
jbe
(bad)
(bad)
xchg
lods
xchg
pop
sahf
adc
ja
jno
cmp
movs
movs
je
xchg
movs
sub
push
and
jp
into
lds
inc
call
movs
jae
aaa
cwde
cli
sbb
(bad)
cwde
push
xchg
xchg
push
cmp
(bad)
cwde
enter
jbe
rcr
jne
call
cmp
test
jmp
clc
or
mov
int3
and
jge
mov
fisub
cmps
mov
ins
add
push
dec
retf
jg
mov
adc
(bad)
jle
sti
or
and
ret
push
fisttp
or
(bad)
data16
mov
and
fadd
adc
int3
fcom
sbb
cdq
sub
aad
call
outs
jne
call
adc
sbb
push
(bad)
les
mov
add
pop
inc
sti
fcom
jl
inc
sbb
jmp
les
push
or
loop
jecxz
mov
hlt
mov
jmp
inc
popa
or
mov
sbb
xor
push
(bad)
jmp
mov
arpl
mov
stos
push
(bad)
sbb
das
arpl
loop
or
push
sbb
fdiv
cli
bound
ret
mov
sbb
(bad)
mov
cdq
aas
mov
loopne
sub
int
repz
jmp
and
lock
xor
fisttp
cmp
repnz
enter
xchg
out
push
imul
xor
or
mov
xor
pop
test
sbb
mov
sbb
mov
jne
outs
dec
sbb
mov
daa
mov
stos
inc
cmps
or
cmc
xor
in
xchg
mov
sub
cmp
(bad)
lea
sbb
push
mov
push
pop
gs
sub
out
mov
mov
xlat
hlt
je
loop
mov
int3
mov
pop
or
stc
push
sbb
nop
sbb
mov
ins
mov
xor
mov
jecxz
and
clc
data16
outs
test
jg
push
jmp
pushw
clc
retf
outs
xchg
js
and
mov
ret
cwde
in
xor
imul
jecxz
jl
dec
add
shl
and
ss
inc
mov
(bad)
arpl
les
(bad)
leave
pop
pop
arpl
not
cmp
push
mov
jno
out
or
pop
icebp
sti
ficomp
mov
mov
xchg
xchg
(bad)
mov
adc
pop
push
mov
sbb
xor
rol
cwde
popf
js
cmc
cmp
rcr
mov
ins
test
fstp
(bad)
loope
pop
xlat
sbb
fistp
mov
(bad)
push
pusha
daa
(bad)
call
imul
inc
mov
push
mov
jbe
xchg
and
and
xor
cli
mov
fwait
(bad)
mov
scas
in
hlt
sahf
inc
daa
fadd
sbb
add
int
sbb
pop
loop
mov
addr16
sub
scas
jne
loope
test
bound
lea
stos
mov
repnz
call
sub
inc
jns
push
clc
mov
sub
mov
lds
loop
nop
sti
sbb
or
adc
mov
lea
cmp
xchg
or
mov
cwde
sahf
aad
inc
ds
out
test
cld
clc
mov
jbe
pop
ins
sub
js
xchg
inc
or
test
mov
pop
ret
mov
or
or
cmps
sar
popa
cwde
(bad)
cmp
cwde
adc
sub
aas
aam
cli
adc
pop
dec
je
js
or
test
inc
pop
cmps
jmp
je
rol
(bad)
cmp
xchg
jbe
mov
adc
xchg
xchg
push
outs
into
and
in
ret
or
bound
add
mov
or
into
lock
fld
push
stos
dec
xor
pop
pop
in
gs
mov
dec
mov
or
or
add
cmp
loop
and
pop
add
fcomp
pop
push
rol
aaa
adc
pop
jle
mov
lods
push
in
and
push
push
sahf
rol
icebp
enter
lds
(bad)
fdivr
inc
mov
add
cmp
pop
jp
sbb
movs
cld
jnp
cwde
mov
loopne
xor
xchg
out
fdiv
and
cmp
bound
mov
aaa
pop
mov
loopne
mov
push
sar
fcmovbe
adc
sub
pop
xor
adc
(bad)
(bad)
jnp
sbb
mov
sub
out
inc
mov
pop
into
iret
jmp
mov
push
and
das
push
adc
loope
call
aad
(bad)
(bad)
(bad)
test
aad
inc
retf
adc
jns
xchg
jmp
(bad)
push
lds
inc
mov
mov
popf
push
fmulp
xor
push
gs
pop
or
add
inc
pop
adc
imul
cli
mov
mov
and
jnp
inc
pushf
inc
bound
dec
orps
push
xchg
lds
adc
(bad)
lar
add
jbe
add
ins
push
(bad)
sub
push
bound
(bad)
sbb
push
retf
retf
hlt
imul
adc
mov
mov
cmps
je
fwait
stc
aam
loopne
push
(bad)
dec
in
mov
cmp
mov
pop
and
fs
inc
ds
(bad)
fist
nop
inc
jecxz
clc
add
or
cmp
mov
xchg
pop
mov
clc
xchg
retf
mov
fimul
les
fist
call
in
push
dec
in
xor
pop
add
jmp
hlt
int3
aam
mov
arpl
enter
lahf
stos
fisttp
int3
inc
aaa
mov
test
imul
cmp
popf
xchg
dec
inc
inc
cmp
or
mov
mov
mov
sbb
clc
movs
mov
inc
xchg
xchg
jno
cmc
(bad)
push
mov
pop
add
mov
adc
bnd
xchg
test
in
dec
stos
mov
xchg
out
sub
cld
dec
ret
xchg
data16
ret
sub
add
fwait
mov
out
int3
jmp
rol
xor
xchg
and
cwde
add
cmp
jne
faddp
pop
fcmovnbe
mov
add
lea
sub
outs
icebp
loopne
test
int3
shl
and
rcr
lea
movs
mov
loope
ja
loop
push
ds
jo
sub
jb
jne
shr
inc
int
and
sub
xlat
shl
sahf
arpl
sbb
sbb
cwde
add
cmc
mov
sbb
ret
pop
movq
leave
sub
mov
lock
das
or
jle
sub
jmp
or
pusha
data16
cld
(bad)
mov
dec
bound
lods
es
in
mov
out
sti
mov
stos
cmps
scas
clc
sub
pop
sub
aad
jbe
ret
int3
or
xchg
cwde
sbb
das
mov
sub
xchg
pop
cmp
xor
jnp
mov
and
add
or
ins
or
not
mov
dec
hlt
jo
mov
or
sub
jl
(bad)
fs
cmp
adc
shr
mov
(bad)
jp
sbb
cmp
shr
out
xor
in
or
js
dec
mov
inc
xchg
add
xchg
repnz
aas
or
dec
clc
fs
je
sbb
mov
retf
lds
in
xor
cmp
fistp
push
dec
adc
aas
stc
inc
cli
cmp
cld
xchg
call
fsubr
adc
popf
or
out
inc
fs
int
or
and
icebp
cmp
mov
adc
jle
pop
movs
les
pop
ror
out
mov
icebp
pop
cmp
sar
sub
rcr
loopne
int
aam
ret
retf
cmp
xor
fld
aaa
shr
or
popf
aad
(bad)
aas
imul
mov
out
sub
jmp
xchg
xor
call
mov
fwait
push
cdq
scas
iret
repz
arpl
xchg
jb
xchg
adc
mov
inc
mov
sbb
or
mul
xchg
test
mov
and
mov
push
jl
cmp
adc
test
clc
dec
mov
jb
test
pusha
jno
dec
fcomp
ror
cmp
adc
push
mov
dec
std
pop
data16
shl
ins
sub
or
push
stos
inc
push
int
fisub
scas
lock
mov
xchg
add
into
push
lock
push
rcl
or
or
rcr
pop
mov
fldcw
jmp
cmp
int
or
jmp
cmp
mov
push
addr16
push
sti
ins
jp
push
dec
pop
repnz
inc
in
adc
je
mov
add
push
mov
adc
pop
push
add
push
popf
mov
int3
mov
cs
push
dec
mov
dec
jecxz
(bad)
pop
into
test
or
enter
aam
enter
leave
push
gs
sub
retf
and
cmp
and
rcl
test
sbb
push
cld
push
and
(bad)
fdiv
ss
into
jbe
cmps
hlt
mov
pop
sahf
xchg
lea
jg
adc
sahf
pop
mov
rol
ins
jg
or
jl
pop
dec
push
mov
xchg
or
retf
nop
adc
dec
xchg
mov
in
or
add
out
test
sub
mov
js
add
gs
sub
(bad)
call
jb
sub
lea
sub
jmp
pop
sub
sub
and
mov
sub
adc
icebp
cmp
stos
mov
mov
sbb
push
int
repz
cmp
push
mov
clc
sub
jns
mov
cmp
mov
adc
test
(bad)
ins
cmps
pop
or
mov
out
arpl
push
add
sar
inc
ja
mov
sahf
sbb
jno
adc
mov
ins
repnz
xchg
fdivr
cmp
ds
hlt
mov
jmp
fcomp
jb
push
push
call
ret
and
out
retf
mov
cmc
test
xchg
data16
add
push
test
mov
add
(bad)
pop
out
adc
es
in
les
stos
rcl
dec
dec
mov
add
loopne
imul
push
popa
in
mov
xchg
pushf
retf
gs
mov
stc
jnp
in
push
mov
not
cld
jp
dec
sub
in
push
xor
call
inc
test
out
mov
mul
push
jnp
jg
xchg
sub
(bad)
inc
int3
lea
popf
test
jne
rol
aam
or
jb
in
xchg
pop
pop
in
dec
and
mov
dec
cmc
xor
dec
inc
cmp
add
mov
retf
aad
mov
cs
sbb
stc
jo
kxorw
adc
xor
push
addr16
mov
std
icebp
ss
mov
ins
fdivr
jecxz
imul
into
retf
clc
fs
test
not
inc
pushf
fadd
sbb
adc
pop
in
pop
fistp
xor
push
cmps
mov
pop
fbstp
movs
mov
mov
push
mov
pop
mov
mov
cmp
stc
aam
xor
(bad)
in
cmp
pop
(bad)
loope
adc
push
movs
ds
(bad)
cmps
lds
jecxz
loopne
sub
mov
inc
mov
fcomp
fld
scas
call
mov
mov
mov
mov
cmp
repz
inc
cld
adc
pusha
sti
jg
jp
add
icebp
mov
xchg
jno
jo
jnp
and
add
mov
push
or
ret
add
xchg
dec
call
jle
scas
or
mov
in
xor
push
pop
and
stc
ins
in
in
inc
repnz
rcl
dec
cmp
or
jb
and
jo
shr
lock
inc
xchg
xchg
mov
xor
ds
mov
adc
test
or
add
cmp
push
cmps
mov
mov
dec
ret
jg
push
inc
push
push
sbb
dec
cmp
arpl
and
mov
movs
inc
xor
mov
and
test
jmp
ror
sub
sahf
dec
and
mov
and
sub
add
pop
out
and
aaa
add
pop
xor
or
push
or
xor
push
into
sub
popa
xor
aas
mov
adc
loope
ret
and
lods
cdq
test
xchg
mov
add
call
aad
je
push
adc
and
push
scas
je
pop
cmps
push
fidivr
fild
push
test
sub
daa
gs
mov
xchg
and
xchg
sbb
lods
cli
and
push
cmp
push
mov
sbb
push
or
outs
push
jmp
or
sbb
xchg
call
pop
in
pusha
repnz
scas
jp
jne
adc
xor
sub
jns
stos
cmps
mov
sub
(bad)
mov
add
add
div
fnsave
mov
lods
adc
dec
mov
fsub
push
sub
fwait
jne
aad
push
mov
jo
jb
jbe
and
cmp
xchg
mov
jbe
fimul
hlt
fstp
mov
cmc
mov
ins
xor
jl
xchg
pop
jns
jg
mov
ret
enter
retf
lahf
jbe
ret
sbb
cmp
mov
out
mov
xchg
cmp
mov
vprotd
ror
jae
pop
add
pop
ins
inc
add
jge
cmp
inc
sar
mov
mov
stos
fucomi
ficomp
ss
pusha
nop
popf
mov
inc
rcr
in
enter
xchg
or
sbb
jne
cdq
ss
push
sub
add
sbb
out
fadd
rcr
xchg
hlt
cmp
xor
jp
cld
jp
dec
(bad)
leave
pop
sub
mov
popa
pop
and
dec
fsubr
mov
je
imul
add
pop
cmp
jmp
aad
ret
not
stc
out
(bad)
sbb
inc
fwait
repz
mul
sub
int
aad
loop
and
std
cmp
sbb
stc
mov
mov
and
xor
pop
sub
aaa
add
sbb
call
xlat
jle
cmp
sub
sti
scas
(bad)
fcmovnbe
adc
jo
xor
pop
ficomp
mov
clc
xor
(bad)
out
fbld
xor
(bad)
fadd
cmp
pop
test
jne
ret
out
inc
ret
mov
xchg
fdiv
cmp
xchg
pop
test
jne
jg
push
or
(bad)
sti
add
cs
sub
push
jno
aas
and
rcl
ja
sub
or
test
addr16
icebp
sbb
sar
jns
push
mov
outs
and
lock
xor
xchg
mov
test
das
pop
test
(bad)
pop
inc
dec
and
sbb
pop
in
jmp
out
dec
pop
daa
(bad)
xchg
aas
leave
pop
add
dec
pop
popf
push
cli
test
hlt
mov
sbb
in
xlat
cld
pop
adc
int
loopne
sbb
das
add
xor
loopne
lahf
fisubr
aas
fcomp
inc
rcr
leave
int3
retf
and
sbb
xor
sub
pop
jge
sbb
pushf
xor
jmp
test
dec
sbb
or
mov
(bad)
and
jne
mov
pushf
cmp
sub
push
nop
jo
or
outs
add
leave
stc
lods
cmps
inc
lds
movs
jnp
xchg
(bad)
jp
cmps
adc
add
cmp
sbb
mov
sbb
out
or
push
mov
in
call
mov
test
ror
call
dec
icebp
test
ficom
push
ja
pushf
in
sbb
mov
inc
rol
aas
fadd
cdq
(bad)
out
or
int
and
cmp
(bad)
mov
in
shl
fsub
sbb
mov
call
movs
pop
push
mov
cmps
sub
retf
dec
fst
aam
(bad)
rol
push
mov
cmps
cmp
cmps
cli
fcos
mov
mov
push
pop
aad
pop
outs
and
and
sbb
push
arpl
push
data16
push
add
push
call
or
ror
mov
mov
stos
push
adc
out
mov
dec
and
out
dec
es
mov
push
out
into
or
jno
in
dec
cmps
inc
xchg
jmp
inc
mov
adc
cmp
(bad)
out
xor
movs
mov
popfw
cmp
sbb
xor
or
adc
mov
ss
enter
xor
dec
pop
push
inc
and
or
cmp
fsubp
repz
sub
cs
fadd
outs
mov
sahf
push
lods
bnd
mov
push
outs
test
test
mov
jno
jmp
pop
test
xor
mov
gs
or
mul
ins
mov
es
cld
div
mov
std
cdq
add
add
fsubr
popf
push
cli
js
inc
push
xchg
push
and
out
(bad)
push
or
cmp
cmp
imul
mov
pop
dec
xor
mov
mov
nop
push
arpl
test
xchg
lods
cmp
arpl
push
(bad)
repnz
pop
sbb
cmp
cmp
ret
js
pop
jbe
data16
or
nop
pop
dec
ss
dec
rol
pop
rcl
popa
clc
xor
stos
(bad)
cld
xor
fxtract
cwde
popa
sbb
arpl
fisub
std
or
lock
mov
shl
fwait
push
call
aas
push
je
push
dec
aaa
sbb
(bad)
ror
lock
xchg
pop
push
jmp
xchg
mov
mov
mov
int3
pop
xchg
cmp
jb
fnsave
push
sbb
mov
movs
pusha
mov
cmovp
test
xchg
js
pop
ret
mov
(bad)
mov
retf
adc
dec
mov
shr
popf
bound
std
xor
ins
shr
mov
aas
das
push
cmp
test
jmp
aas
in
dec
jmp
sub
sbb
fild
test
dec
add
adc
mov
scas
mov
inc
test
sti
retf
test
xor
(bad)
ds
add
xor
stos
jno
or
xchg
in
push
and
xchg
or
mov
xchg
pop
arpl
dec
sub
popf
sbb
xor
(bad)
dec
add
outs
lods
xlat
inc
in
loopne
and
int
neg
or
add
int3
and
movs
mov
add
jmp
in
call
(bad)
inc
sub
addr16
fld
sub
pop
dec
sbb
movs
xchg
mov
push
clc
mov
inc
cdq
inc
sbb
hlt
xor
lods
aas
(bad)
ja
xor
rol
xchg
or
shl
daa
es
xlat
(bad)
clc
test
fcom
adc
std
sbb
pop
cs
into
or
xchg
jnp
das
sub
or
jmp
frstor
std
fst
inc
jo
jg
cli
inc
or
push
or
bound
cmc
push
sbb
mov
mov
and
cmps
inc
gs
pop
add
adc
fisub
shl
(bad)
scas
in
ss
(bad)
dec
sbb
dec
add
addr16
aam
fistp
gs
xchg
sub
xchg
sub
lds
mov
popf
cmp
fld
mov
mov
mov
add
sbb
cdq
test
retf
mov
mov
(bad)
test
jle
push
mov
jns
cmp
data16
adc
dec
mov
mov
pop
adc
outs
cmp
cmp
mov
dec
ret
xchg
stos
in
imul
test
mov
inc
jmp
mov
les
jno
jae
add
jmp
shl
dec
adc
sub
add
dec
dec
mov
inc
pop
shr
sbb
fwait
mov
out
aad
inc
mov
popf
sbb
(bad)
push
mov
push
sbb
xchg
repz
sbb
xor
cld
addr16
fmul
push
movs
mov
push
pop
xchg
fstp
and
into
xlat
clc
push
add
push
push
(bad)
mov
dec
xor
or
cmp
xchg
shl
mov
in
fld
adc
pusha
scas
adc
cmp
ins
(bad)
cmp
leave
add
rol
pop
sti
push
aaa
mov
sub
adc
sbb
sbb
xor
gs
xchg
call
xchg
pusha
mov
fidiv
das
mov
jbe
je
jb
lahf
out
scas
jp
sbb
arpl
inc
rol
or
stos
fst
jle
mov
test
imul
dec
shr
aas
retf
or
dec
mov
(bad)
xchg
jns
aam
in
xlat
pop
jae
jmp
xor
xchg
mov
lods
movs
sbb
xchg
pop
xor
pop
pop
xlat
mov
sub
mov
adc
cmp
jl
dec
cmp
pusha
xchg
ss
dec
cmp
fwait
pop
fucomi
xchg
and
mul
into
or
sub
mov
mov
sub
inc
les
or
pushf
mov
jb
les
sbb
shl
lods
jge
cld
gs
or
ins
dec
jecxz
lds
dec
add
mov
repz
nop
(bad)
mov
mov
xchg
or
pop
mov
jno
sar
inc
push
cmp
das
int3
rol
sub
adc
ret
shl
mov
push
pop
add
fistp
mov
(bad)
push
int3
ins
xlat
movs
inc
repz
int3
pop
dec
sbb
mov
(bad)
adc
test
lods
sub
dec
add
inc
icebp
sub
std
cdq
aad
ret
and
imul
and
cmp
mov
mov
cmp
ret
es
repnz
push
sbb
xor
inc
shr
sub
enter
in
cmp
xor
mov
popf
add
daa
outs
movs
popf
or
add
jl
ret
mov
in
and
sub
push
in
retf
in
test
test
jge
push
inc
js
rcl
cmp
in
sbb
jg
dec
mov
xor
dec
push
mov
sub
adc
jnp
or
inc
mov
fcom
cmps
mov
add
xchg
jne
aas
dec
add
jae
les
xchg
mov
fld
xor
and
xlat
jnp
xchg
pop
or
mov
push
mov
jmp
les
fisttp
(bad)
mov
icebp
xor
cs
loope
sub
jns
adc
rcl
cmp
push
dec
imul
adc
neg
pop
das
mov
push
bound
stc
je
imul
mov
inc
sub
(bad)
xor
(bad)
inc
popa
pop
pop
cmp
push
lahf
inc
sbb
neg
xchg
jg
dec
sbb
mov
jne
adc
je
sub
mov
push
clc
and
jb
xchg
mov
sbb
and
xchg
icebp
call
xor
push
and
retf
loop
les
repz
push
jno
(bad)
and
popa
stc
push
in
in
sub
aas
xor
xchg
(bad)
mov
jno
jmp
jecxz
scas
rol
jae
mov
xchg
or
cmp
xchg
inc
loop
rcl
cwde
daa
jns
pop
xchg
into
jb
xchg
ror
retf
test
retf
mov
repnz
mov
in
daa
or
les
cmp
cld
mov
mov
rcl
sahf
repz
adc
jg
movs
jle
and
xchg
mov
xchg
sub
sub
in
push
clc
arpl
push
repz
xor
leave
call
inc
(bad)
and
cmps
cmps
addr16
pop
mov
aam
jo
inc
fisttp
dec
push
push
ja
fdivr
mov
add
movs
sub
cmp
imul
jle
pusha
lds
sahf
or
or
call
gs
pop
sbb
cmp
out
add
sbb
push
cld
leave
imul
or
into
mov
sub
jmp
js
enter
push
in
adc
enter
add
imul
pop
test
mov
outs
and
or
cld
imul
xor
inc
cmp
pop
fstp
(bad)
retf
inc
std
pop
call
inc
and
and
xchg
lea
repz
repz
sub
test
xchg
aam
xchg
ds
btc
xchg
dec
jns
test
dec
daa
push
inc
(bad)
std
inc
das
jns
push
pop
adc
loop
push
inc
add
xor
and
lods
(bad)
ss
or
fisttp
jmp
shr
sub
adc
mov
mov
leave
inc
jbe
pop
(bad)
pop
xor
addr16
pop
fisttp
or
pop
push
sub
test
test
adc
cmp
cmp
adc
in
std
scas
aaa
and
loop
push
push
sbb
cwde
pop
ins
cli
xchg
push
mov
leave
ins
pop
xor
mov
mov
cmps
pop
pop
and
(bad)
idiv
pop
mov
dec
push
xchg
popf
pop
or
inc
ds
cmp
rol
call
push
inc
jl
sbb
dec
lods
fucom
mov
mov
fdiv
arpl
lods
std
ss
imul
int
jbe
xor
xor
addr16
add
cmp
imul
std
mov
stc
call
xchg
lea
cli
jecxz
inc
xor
push
cwde
push
mov
adc
cs
aaa
lods
cld
push
cmp
imul
jbe
xchg
loopne
pop
add
inc
cmp
xchg
sbb
push
stos
sub
add
call
xchg
dec
xchg
fisttp
mov
jnp
nop
push
xchg
test
stc
mov
fisub
movs
pop
scas
movs
xchg
sbb
dec
mov
xchg
aam
xor
movs
sbb
call
aas
lea
dec
jne
cmp
add
int
cmp
(bad)
jo
ins
int
jo
pop
add
xchg
mov
cmps
jecxz
ret
adc
int
test
mov
(bad)
aad
clc
call
mov
shl
mov
popf
aam
jge
jmp
in
lods
push
pop
mov
mov
pop
das
xchg
out
cwde
cwde
dec
adc
pop
or
clc
movs
xor
mov
mov
pop
sbb
xchg
fdiv
xchg
dec
pop
lahf
dec
xor
add
xchg
push
repz
jecxz
and
add
inc
int
lods
fmulp
mov
cmp
mov
mov
fs
ins
ins
mov
jge
ror
or
jmp
rcl
inc
retf
dec
pop
pop
hlt
dec
pop
jno
aas
jnp
mov
gs
lahf
pop
add
out
ror
(bad)
nop
jg
push
movs
jb
cli
scas
and
out
loop
movs
push
mov
mov
retf
jmp
sub
push
or
xor
sahf
add
outs
popf
(bad)
xlat
sub
mov
and
inc
(bad)
pop
fucom
inc
push
pusha
sub
cmps
push
xor
sbb
cs
pushf
and
rcr
cdq
add
cmp
mov
ret
dec
inc
lods
push
push
fistp
mov
push
lock
call
jg
add
stos
pop
stc
repz
mov
std
sub
mov
and
adc
ret
sub
push
lods
int3
inc
mov
push
scas
and
mov
(bad)
lods
iret
mov
dec
aam
hlt
or
push
ret
jns
jb
pop
dec
push
iret
retf
loope
xchg
lods
xchg
pop
mov
pop
test
sbb
sar
cmc
sar
jge
pop
sbb
cwde
push
push
test
xlat
xor
inc
jno
jmp
neg
(bad)
ja
mov
sub
and
out
jg
call
movs
loope
in
aad
int
push
imul
push
in
add
mov
mov
cld
imul
adc
es
push
push
and
or
push
mov
cs
dec
shl
in
ret
jp
or
jge
mov
sub
in
adc
or
jae
movs
or
out
sub
jle
and
js
fwait
lods
pushf
or
into
ret
mov
int
(bad)
mov
pop
int
sbb
lea
xor
jp
int3
dec
aas
mov
sub
sbb
add
sbb
sub
push
dec
pop
dec
pop
cmc
cdq
add
imul
jmp
push
inc
scas
div
xlat
mov
leave
dec
sbb
fs
xchg
push
add
inc
jnp
outs
in
inc
inc
lods
ins
(bad)
(bad)
cmp
xchg
and
adc
inc
mov
dec
ficomp
pop
cmp
call
mov
movs
rcl
cmp
mov
pop
sar
les
pop
test
mov
out
pop
daa
out
bound
mov
imul
sbb
fcomp
in
inc
xor
sub
mov
retf
mov
add
xor
into
jns
adc
call
pop
jb
and
cmp
mov
pop
mov
dec
in
imul
ror
pusha
jnp
fisttp
inc
fsubr
retf
adc
cmp
ds
push
push
(bad)
adc
stos
mov
adc
inc
mov
int
call
add
mov
in
push
in
sbb
inc
jo
xor
iret
daa
jmp
push
add
ror
(bad)
adc
daa
pop
cld
mov
and
mov
sub
jl
pop
in
cmp
add
and
in
rcr
cmp
xchg
retf
outs
fldcw
jne
xor
adc
inc
(bad)
adc
rcl
pop
cld
xchg
div
inc
outs
jbe
or
fs
je
call
ret
sar
push
int3
xchg
dec
jl
inc
popa
ins
lods
(bad)
stos
fs
loopne
cmp
mov
push
imul
ret
shl
sbb
xor
jae
rcr
dec
pop
cld
push
bnd
mov
mov
fs
in
int3
mov
clc
jbe
pop
jne
inc
out
iret
pusha
popf
xor
and
scas
lds
cmps
mov
idiv
jg
lahf
xchg
cmp
or
mov
and
dec
dec
push
div
in
fst
or
xor
mov
(bad)
or
loop
adc
in
add
mov
div
mov
add
out
fnstenv
out
aad
sbb
add
jno
imul
mov
in
and
fsubr
sar
mov
push
outs
addr16
cwde
mov
sbb
lea
fldenv
cdq
xor
jmp
mov
inc
and
mov
adc
add
jbe
xchg
pusha
mov
(bad)
pop
cld
setne
loopne
sub
sub
mov
xor
push
stos
test
out
ja
fild
ss
mov
or
and
or
mov
stos
mov
stc
cdq
jae
mov
icebp
or
dec
ja
pop
in
imul
movs
or
loopne
push
dec
fwait
das
outs
pop
cwde
fcom
xor
(bad)
into
add
shl
jp
push
or
sbb
sbb
or
in
cs
adc
div
mov
es
push
in
dec
mov
push
imul
fnstcw
xchg
dec
sar
aaa
(bad)
arpl
loopne
lahf
sub
(bad)
outs
mov
mov
loope
shr
mov
sub
inc
stc
popf
mov
rol
xchg
fnstsw
dec
jle
push
les
movs
xchg
mov
test
adc
inc
ss
aad
in
scas
lods
fstp
ret
mov
sub
nop
pop
js
shl
pop
mov
push
loopne
cmp
mov
cmp
data16
aam
ins
sub
cmc
jnp
test
ins
and
xor
ss
cs
mov
xor
dec
pop
xchg
jp
and
cmp
loope
in
lahf
jnp
sub
int
inc
lods
out
je
sbb
lds
lods
adc
mov
andps
adc
cdq
xor
and
pop
add
jge
mov
fcomp
mov
loopne
jnp
(bad)
fbld
daa
mov
les
xchg
xchg
ja
pop
inc
inc
mov
mov
loop
xor
mov
inc
sbb
popf
arpl
ins
mov
sub
out
cdq
adc
idiv
xor
ret
jns
lods
jb
dec
jnp
xor
xchg
fwait
mov
jmp
jl
or
inc
push
push
pop
xchg
(bad)
fidivr
mov
xchg
pop
fwait
sti
in
mov
ja
jge
sub
pushf
sub
mov
cmps
or
in
xchg
xchg
xor
add
sbb
jns
mov
cmp
jb
adc
fcomp
cwde
pop
fst
jle
aaa
test
xor
jp
sub
popf
mov
and
jae
cwde
mov
xlat
in
xchg
push
jmp
aam
push
push
cmps
cmp
int
mov
xor
mov
push
mov
cli
iret
cli
push
ss
cmp
clc
jb
push
cld
icebp
jg
inc
pop
adc
gs
(bad)
in
(bad)
cmc
sbb
xchg
jns
push
sbb
inc
jl
mov
test
jmp
nop
data16
adc
dec
dec
push
out
cmovo
mov
loope
pop
inc
fisub
mov
adc
out
movs
mov
lahf
(bad)
leave
jno
mov
and
sub
test
popa
pop
cmp
cmp
add
or
loope
int
and
push
sub
push
test
cmc
pop
rol
stos
sbb
jne
inc
mov
push
push
fidiv
dec
push
out
cmp
dec
mov
push
mov
dec
jnp
out
mov
iret
ins
or
gs
mov
mov
movs
pop
xor
and
jns
xchg
pop
mov
dec
xor
fbld
xor
ret
jle
ror
std
stc
dec
push
jmp
ss
pop
sahf
sbb
mov
xor
ja
dec
xchg
(bad)
jnp
add
xchg
stos
jb
cmps
int
mov
stos
xor
fsubr
loop
jb
push
add
adc
adc
es
adc
in
in
ret
mov
ror
shl
retf
push
arpl
addr16
jge
sbb
loop
and
ror
aam
je
or
retf
iret
jno
sar
popa
or
loope
dec
sub
dec
test
icebp
enter
popf
push
inc
sub
in
jg
xor
cwde
in
mov
adc
cmp
xchg
enter
clc
lea
push
xchg
aaa
xor
inc
not
mov
mov
enter
mov
mov
(bad)
dec
mov
test
ss
lds
cli
scas
adc
(bad)
ud1
ins
mov
mov
(bad)
test
xchg
dec
aam
xor
fwait
mov
or
movs
pop
stos
imul
loopne
and
scas
pop
mov
dec
outs
(bad)
out
ret
in
jmp
in
push
inc
mov
or
rol
jmp
pop
fisubr
aas
mov
inc
xlat
adc
sbb
loope
fwait
xchg
shl
sbb
xor
daa
(bad)
xor
xor
adc
imul
jmp
ss
sahf
ins
inc
test
mov
stos
push
pop
jecxz
in
imul
add
ja
sti
repz
dec
inc
cwde
push
retf
loope
(bad)
pop
cmp
jae
inc
mov
cmp
fdivr
int3
retf
sbb
dec
pop
sbb
mov
das
loope
cli
add
xor
loopne
lds
mov
inc
pop
add
arpl
loop
jp
inc
pop
call
sub
add
(bad)
jb
push
rcr
call
xchg
xchg
adc
cmps
daa
dec
bound
mov
ss
pop
cld
cli
mov
sbb
out
test
sub
add
cmp
cmc
xchg
sbb
mul
pop
mov
mov
xor
lods
pop
adc
mov
gs
add
(bad)
std
fist
scas
cld
cmp
ror
dec
push
sub
and
in
cmp
adc
cld
jo
jmp
outs
or
mov
in
mov
not
push
into
sti
sbb
ins
xchg
jmp
lods
mov
jmp
inc
and
ins
inc
aaa
shr
stos
add
and
cdq
or
sbb
ret
push
not
div
xchg
popa
ins
pop
mov
(bad)
cmp
push
fist
fist
mov
jl
mov
imul
pop
mov
jne
and
in
dec
mov
fsub
addr16
sbb
and
cmp
adc
js
pop
mov
jp
jnp
ds
xchg
pop
pop
outs
shl
mov
fwait
cmp
pop
xchg
(bad)
retf
retf
add
(bad)
cs
js
push
sbb
fwait
mov
js
call
adc
jge
pop
xor
adc
mov
dec
adc
or
fdivr
or
cmp
pop
sub
bound
xchg
fs
in
bound
call
xchg
jnp
fs
in
jbe
xchg
mov
imul
add
fwait
sub
data16
pop
rol
aam
mov
rcr
jae
xlat
inc
xchg
into
js
aam
dec
dec
jp
loopne
push
icebp
adc
xor
inc
repnz
repnz
loopne
mov
or
pop
ret
lods
test
inc
mov
or
sbb
fs
push
sub
mov
mov
pop
mov
sbb
pop
sar
fimul
fs
mov
popf
cld
int3
push
xchg
xchg
cdq
ret
xor
mov
fmul
or
inc
mov
push
dec
mov
inc
adc
cmp
and
dec
adc
jo
add
test
push
sbb
or
fs
inc
(bad)
ins
jmp
je
stos
dec
add
sar
jp
dec
aas
cmp
mov
push
pushf
das
push
mov
test
jo
imul
jl
jl
popa
xchg
mov
xor
(bad)
fist
bswap
fisubr
outs
pop
hlt
push
or
stos
dec
test
jge
ins
cmp
and
fidiv
sbb
inc
test
inc
jecxz
lods
(bad)
lods
pause
cmp
outs
rcr
jae
enter
repnz
xor
push
fild
pop
cmp
jo
xchg
jne
stos
adc
push
ret
jo
shl
xlat
out
test
mov
push
data16
std
inc
adc
ficomp
push
dec
push
mov
or
ds
push
adc
xchg
xchg
test
inc
ins
jl
pop
ja
dec
dec
(bad)
mov
pop
jnp
dec
aas
daa
add
je
pop
cmps
jo
adc
or
push
mov
sub
pop
and
xchg
pushf
pop
mov
add
pop
lods
adc
pop
adc
idiv
fcom
fwait
cmc
gs
adc
pop
xor
push
cdq
(bad)
mov
mov
dec
push
shr
ss
and
mov
and
aad
je
lds
push
aad
cmp
in
shr
xor
mov
in
mov
pop
nop
imul
cli
in
imul
cmp
pop
jns
and
mov
or
mov
call
pop
gs
and
aaa
adc
add
jl
cwde
call
xchg
pop
fwait
dec
mov
push
rol
pop
pop
fdivr
addr16
loop
or
cdq
xchg
jle
push
ins
pop
sbb
inc
push
dec
pusha
xchg
push
mul
nop
sbb
shl
sub
mov
push
push
iret
adc
dec
test
pop
loopne
fsub
and
inc
mov
(bad)
les
and
jnp
jg
popf
push
fcom
call
fsubr
sbb
xchg
imul
enter
sbb
retf
lds
leave
add
or
not
dec
test
fisubr
jmp
imul
daa
jl
adc
shl
xchg
sub
cmp
sbb
repz
mov
cmps
inc
cmp
push
sbb
add
mov
cmp
mov
pop
inc
(bad)
push
ret
dec
gs
inc
push
or
sub
mov
das
dec
or
mov
arpl
push
dec
push
xchg
adc
jmp
daa
(bad)
rol
mov
fwait
outs
cmp
jae
pop
jmp
pop
mov
xchg
fsub
sbb
int
inc
icebp
and
or
into
ss
xchg
xchg
sti
mov
xchg
aam
push
in
mov
adc
aam
sti
inc
mov
mov
aaa
(bad)
ficom
jae
dec
xchg
fist
add
push
mul
mov
add
xor
ret
loop
push
call
inc
push
pop
ffree
ins
ins
sbb
icebp
xchg
adc
push
mov
pop
add
xchg
push
mov
push
sbb
xchg
xchg
aaa
push
jae
fs
xor
xor
sbb
mov
stc
lods
std
fwait
ins
pop
adc
sahf
les
mov
adc
popf
sub
repz
mov
scas
out
jle
cmps
mov
in
das
cmp
hlt
std
(bad)
push
pop
outs
test
scas
cs
sbb
not
adc
inc
push
stc
mov
ds
jle
out
std
jne
int3
mov
fbld
mov
mov
and
das
mov
or
(bad)
fmulp
popa
fwait
in
les
aas
sbb
loopne
or
retf
pop
jmp
or
mov
outs
xchg
cwde
lods
add
push
leave
push
mov
pop
pop
pop
add
adc
xchg
xor
cmps
lds
clc
and
cwde
pop
fwait
xchg
out
push
push
mov
xchg
jb
scas
fdiv
pop
mov
movs
in
ret
adc
xor
jns
dec
pop
mov
jae
les
rcpps
sub
add
test
dec
fisttp
push
xchg
out
jge
sahf
pop
and
scas
inc
in
movs
call
cmc
pop
retf
mov
pop
mov
sbb
ror
sub
add
sbb
cmc
sbb
inc
shl
xlat
jns
mov
test
ins
push
ret
out
mov
xchg
mov
repnz
(bad)
push
add
dec
loopne
and
fisttp
cdq
sub
js
rol
inc
jb
cmp
add
into
adc
pushf
jmp
(bad)
fidiv
es
idiv
ja
rol
test
push
push
bnd
in
mov
jg
movs
sbb
mov
lock
xchg
xchg
in
int
sub
repz
loopne
in
in
sbb
test
fist
es
jl
cdq
cmp
cmp
mov
addr16
das
push
mov
popf
sub
cmp
push
stos
push
xor
lods
add
and
imul
adc
movs
xchg
mov
cdq
aad
sbb
pop
add
aam
inc
or
xchg
jbe
les
xor
scas
push
sti
loopne
jns
or
jns
or
xor
mov
inc
in
fmul
jp
(bad)
mov
and
cmps
and
(bad)
aam
dec
in
rcl
pop
into
and
imul
xchg
popf
scas
les
mov
jne
inc
adc
jnp
cmp
and
mov
push
lds
addr16
jno
ret
and
jnp
and
popa
dec
jl
es
jb
lods
adc
test
mov
mov
cmp
jno
add
jnp
test
jo
fwait
sub
mov
adc
dec
sub
push
sbb
inc
fisub
mov
setg
bound
scas
adc
jl
(bad)
ror
jne
jmp
std
and
out
xchg
shr
test
jno
xchg
test
mov
lea
and
daa
daa
inc
cli
push
data16
ss
jno
mov
cmps
iret
(bad)
(bad)
sbb
mov
imul
(bad)
call
push
mov
mov
cdq
arpl
(bad)
pop
xchg
mov
jns
jmp
aad
pop
lock
ds
sbb
mov
enter
stos
dec
mov
gs
retf
mov
call
pushf
jno
scas
or
and
sbb
test
ret
pusha
mov
sbb
mov
push
pusha
mov
xchg
pop
ret
mov
cmp
shl
mov
pop
mov
add
push
mov
add
or
push
mul
outs
inc
jns
cmp
imul
dec
mov
pop
stc
cmp
push
jge
inc
xor
add
dec
sbb
add
sbb
aad
mov
xchg
mov
push
fcom
push
mov
sub
ds
jbe
sub
jle
mov
idiv
xchg
(bad)
cmc
sub
cdq
bound
mov
sub
dec
cmp
lods
stos
cmp
fs
inc
out
or
cli
mov
pop
fistp
shr
cmp
xchg
mov
repnz
aas
(bad)
fdivr
stos
add
dec
pop
retf
xor
and
jecxz
mov
and
in
mov
jmp
mov
call
les
or
nop
dec
sub
(bad)
push
jmp
push
xor
jl
inc
jns
(bad)
and
neg
pop
je
es
sub
scas
sub
sub
(bad)
and
fistp
(bad)
xor
(bad)
jno
cld
imul
push
dec
cmp
push
and
pushf
mov
lods
aad
inc
in
sub
and
sub
mov
sar
adc
jmp
mov
dec
dec
stos
mov
mov
adc
pushf
clc
push
les
xchg
ins
push
cmc
jno
xlat
aaa
or
(bad)
mov
test
inc
data16
vpackssdw
cmps
inc
dec
ficomp
out
stc
nop
xchg
adc
mov
push
fist
mov
mov
adc
fstp
jb
rcl
xor
in
inc
out
add
hlt
int3
ins
xor
push
or
pop
add
test
cmp
lods
jnp
adc
inc
popa
sub
daa
jo
test
push
inc
mov
dec
scas
cmp
jnp
and
scas
mov
inc
lea
test
fcmovbe
or
pop
(bad)
pop
mov
sub
das
scas
or
(bad)
stc
pusha
out
jg
mov
sbb
adc
or
adc
or
cmp
loope
mov
pop
push
pop
les
pop
jmp
sub
test
ret
mov
add
(bad)
mov
inc
and
outs
aas
call
jmp
pop
xor
xor
in
pop
addr16
or
rcl
jle
cmp
xchg
repz
rol
jbe
in
mov
std
in
imul
jb
jle
adc
pop
cmps
test
addr16
pop
pop
aam
ja
fisttp
and
je
dec
xor
inc
cmp
cmp
push
sub
js
lds
xor
std
ret
mov
pop
into
jmp
popf
ss
adc
out
push
ror
cmps
inc
xchg
adc
xor
or
jae
arpl
mov
imul
xchg
mov
dec
cld
jp
inc
daa
cld
in
sub
cmps
cwde
pop
leave
mov
aad
and
and
xlat
push
fidivr
out
stos
jmp
pop
(bad)
lods
cmp
mov
adc
test
aas
retf
jecxz
jns
fdivp
pushf
cmps
dec
pop
fs
inc
xor
sbb
(bad)
sbb
jecxz
shl
pop
sahf
inc
imul
shl
sub
mov
rol
mov
fwait
xor
mov
or
aad
adc
outs
xor
popf
mov
sbb
ret
test
scas
mov
inc
mov
repz
stc
fist
jns
jg
mov
jl
adc
mov
jb
and
dec
sub
outs
or
das
sbb
sub
pop
jp
dec
int
jo
iret
adc
pushf
std
push
pcmpeqd
xchg
cs
cdq
sbb
adc
inc
push
add
rol
or
xor
test
mov
cld
add
jmp
mov
and
jge
std
sub
sti
mov
dec
or
shl
xchg
add
pushf
push
ret
sbb
sub
movs
scas
lahf
sbb
ds
cmp
jle
iret
lds
adc
ja
ins
mov
push
ss
dec
je
cli
call
mov
sbb
xlat
repz
or
jbe
dec
sti
jge
xchg
mov
mov
or
scas
add
add
stos
mov
loope
sub
int3
mov
out
cmps
mov
or
mov
xchg
add
ret
leave
hlt
lock
push
scas
aaa
pop
icebp
nop
mov
or
mov
or
dec
cmp
xor
enter
mov
sub
mov
pop
mov
push
dec
xchg
sub
hlt
std
in
movs
popa
fs
lods
or
push
mov
pop
and
push
shl
dec
repnz
jno
push
out
xor
add
xchg
cmp
pusha
out
xchg
outs
leave
xchg
icebp
cmps
jg
call
add
or
hlt
mov
cmps
cmp
(bad)
push
loopne
int
pop
clc
mov
inc
lea
(bad)
fnstenv
xor
jae
cli
push
adc
out
jg
jmp
cmps
or
hlt
fst
or
(bad)
mov
push
xchg
dec
clc
leave
and
push
addr16
pop
retf
push
push
and
test
mov
(bad)
ins
push
mov
mov
and
imul
test
push
ss
fnsave
pop
cmp
(bad)
das
cmps
dec
icebp
xor
dec
xchg
cmps
inc
rcl
xor
sahf
stos
jg
mov
xchg
cli
out
imul
sub
add
and
aad
retf
popf
mov
pop
adc
sti
out
in
(bad)
xchg
push
xchg
push
sub
gs
mov
fnsave
or
dec
add
cwde
cmp
or
mov
in
iret
or
(bad)
aad
aas
or
pushf
mov
out
shr
xor
inc
push
fimul
scas
or
loop
es
pop
xor
nop
jo
(bad)
pop
pop
mov
adc
jo
movs
inc
xchg
cmp
sti
not
inc
addr16
pop
fdivr
cmovge
mov
ins
loope
fnstsw
ror
fcomi
jg
(bad)
popf
xchg
(bad)
mov
ret
mov
mov
lods
inc
fmul
aaa
mov
add
imul
push
xchg
pushf
int
and
outs
adc
neg
mov
or
scas
popa
mov
popf
xor
ins
fadd
jno
mov
xchg
scas
call
imul
cdq
mov
cmc
and
fstp
xchg
add
jnp
lds
fcmovnu
daa
add
jb
fs
jmp
cwde
xchg
dec
and
out
in
fbld
pop
sub
mov
xor
es
fiadd
xchg
rcl
loopne
int3
jo
test
mov
imul
loopne
push
xor
sbb
inc
add
mov
sbb
fidiv
dec
sbb
call
push
(bad)
mov
mov
xchg
mov
and
mov
jge
cmps
retf
xor
mov
idiv
retf
data16
push
pop
mov
pop
push
shr
fcomp
stos
mov
cmps
sub
sbb
outs
repnz
push
push
inc
stos
(bad)
inc
std
pop
loope
jno
les
inc
fisub
xchg
shl
aaa
and
cmps
adc
outs
(bad)
imul
inc
xchg
das
adc
test
mov
lahf
or
add
pushf
dec
mov
xchg
mov
lods
retf
test
add
cmps
mov
mov
shl
dec
movs
bnd
mov
mov
cmp
jp
ins
sub
sub
out
push
jo
sub
cmp
lahf
xchg
mov
das
leave
out
sbb
lods
xor
sbb
cmp
sbb
adc
inc
mov
xor
sub
cmps
hlt
jl
dec
jle
jo
shl
outs
add
aam
mov
out
xor
fiadd
or
sbb
jb
push
rol
jg
jne
fldenv
adc
cmp
cmps
pop
mov
dec
and
into
lods
mov
add
dec
push
fst
dec
fwait
mov
mov
jae
fstp
inc
mov
lods
(bad)
leave
xchg
cmps
popa
pop
stos
mov
fdivr
(bad)
iret
adc
pop
jbe
lods
xchg
pop
(bad)
adc
inc
sbb
jnp
mov
sub
cmp
lods
into
mov
into
out
add
fwait
fs
and
ja
pushf
jmp
cmp
gs
jl
pop
clc
or
xlat
mov
adc
add
das
pop
ins
sbb
iret
and
adc
pop
push
pop
sbb
push
xlat
and
data16
pushf
rcl
adc
cmp
mov
cmp
jl
push
or
out
mov
and
(bad)
xor
in
cs
add
dec
mov
rcl
enter
fadd
adc
lods
cwde
and
daa
leave
in
loope
and
add
(bad)
jne
shr
out
dec
das
inc
add
mov
arpl
cs
sti
xor
fadd
fwait
mov
mov
imul
xor
mov
stc
cmp
dec
mov
cmps
jnp
jno
push
in
aas
pop
ss
push
and
pop
jecxz
xor
retf
or
push
cmp
popa
movs
push
rol
aaa
mov
push
add
jecxz
jl
test
inc
shl
cmp
push
or
clc
sbb
push
leave
sbb
ss
mov
xchg
push
ds
mov
(bad)
stos
mov
retf
push
es
mov
fild
movs
rol
pushf
add
push
fstp
add
sub
dec
mov
pop
and
retf
dec
push
lea
jecxz
mov
sbb
xchg
movs
aas
arpl
pop
enter
inc
push
cmp
pop
adc
stos
xor
sbb
mov
dec
xlat
clc
call
pop
or
sti
pop
das
mov
mov
xor
push
cmc
adc
mov
sahf
pop
mov
es
sbb
sub
(bad)
pushf
dec
adc
ret
xor
or
paddd
jnp
arpl
mov
mov
sbb
aad
dec
movs
push
outs
ja
jbe
cwde
neg
sti
pop
rol
mov
dec
adc
jle
loop
iret
xor
add
mov
adc
int3
dec
jo
hlt
movs
xchg
mov
xor
sbb
neg
mov
ja
add
sbb
push
adc
loop
pop
jne
inc
sahf
ret
int3
mov
jbe
scas
xor
push
das
div
stos
xchg
fcom
cmp
mov
ins
(bad)
xchg
sbb
jne
pop
jmp
mov
shl
sub
sbb
lods
sbb
mov
mov
idiv
inc
mov
mov
jbe
xlat
in
cmp
mov
pop
mov
call
xor
push
cmp
and
mov
jmp
(bad)
pop
aas
pop
fs
rcr
jp
xor
mov
adc
cmp
pop
fcmovne
mov
xchg
hlt
mov
mov
inc
add
lock
push
mov
cmp
std
outs
cmp
scas
lds
out
es
fcom
push
sar
int3
mov
xchg
movs
fwait
aam
(bad)
(bad)
cmp
mov
jecxz
pusha
or
and
test
cmp
add
sub
arpl
sub
loope
iret
aas
out
xor
cmp
fild
mov
out
shl
add
ret
mov
pop
jae
test
pop
xchg
pop
jle
sar
int
nop
or
xor
leave
cmps
and
(bad)
lods
and
dec
and
push
mov
pop
jp
sub
xchg
popa
popa
movs
push
imul
dec
fadd
sbb
push
mov
daa
and
add
dec
fcom
lds
inc
dec
ja
pushf
int
sub
pop
movs
(bad)
jne
retf
inc
outs
sar
aad
push
cmp
mov
sbb
jmp
lea
mov
cs
nop
xchg
pop
lods
rol
sbb
xor
or
add
movs
test
ret
int3
pop
or
push
mov
mov
in
jl
shl
cs
add
ja
jcxz
call
xor
out
ss
jmp
jno
(bad)
mov
sub
(bad)
or
(bad)
pushf
dec
xlat
jae
ret
aas
pop
jg
push
fdivr
js
push
inc
adc
push
and
fisttp
call
pop
jg
cmp
push
add
sbb
mov
dec
enter
mov
cmc
out
mov
outs
pop
cmp
js
push
into
loope
call
pop
xchg
push
sbb
push
mov
(bad)
out
fnstenv
xor
sar
pop
stos
cmc
pop
push
fist
(bad)
fcom
loop
aam
mov
pop
movs
mov
ss
inc
pop
lds
scas
pop
popf
inc
mov
out
adc
sub
repnz
scas
mov
jle
mov
movs
bound
push
mov
scas
dec
mov
xchg
leave
popf
shr
jp
and
(bad)
sub
repnz
sahf
retf
mov
add
je
shl
icebp
mov
sub
pop
loopne
aaa
mov
xchg
sbb
or
dec
aam
retf
adc
mov
shl
movs
mov
aad
push
xor
in
or
jl
fmul
jno
jmp
jnp
xchg
sub
in
rcr
jb
and
mov
push
shl
outs
shl
or
mov
ret
outs
cli
hlt
xchg
push
mov
sub
lods
push
ins
xchg
pop
stc
ss
and
outs
imul
or
jg
icebp
dec
mov
cwde
aad
add
mov
xor
mov
js
inc
and
jbe
adc
add
or
pop
loope
mov
pop
in
push
out
mov
pop
ss
add
(bad)
outs
inc
adc
or
dec
inc
inc
and
out
push
inc
clc
fisttp
jae
mov
lods
jle
int
jge
cmp
loop
push
push
cmp
push
std
cmps
out
adc
pop
aas
add
stc
mov
inc
bound
test
repz
lea
int
jno
pushf
pushf
or
shl
mov
(bad)
push
dec
cmc
loop
xchg
scas
sbb
fadd
jns
ret
ret
xor
xchg
cmc
push
scas
inc
sar
gs
mov
frstor
pop
mov
xchg
jmp
sbb
retf
ins
xor
mov
icebp
aad
and
lds
or
inc
nop
jnp
ret
aam
int
add
sub
mov
scas
jp
xchg
inc
in
xchg
or
mov
xor
inc
or
(bad)
ficomp
xchg
pop
imul
inc
push
adc
inc
ss
int
ficomp
push
(bad)
pushf
mov
dec
xchg
leave
or
sub
xlat
inc
mov
retf
push
add
pop
or
inc
xor
jle
or
cdq
xlat
je
sbb
fsubr
inc
cmp
and
ins
push
out
push
mov
ret
test
nop
dec
cmps
xchg
nop
mov
inc
xor
dec
xchg
call
and
pop
dec
pusha
arpl
ja
sbb
iret
cmp
push
and
xchg
ret
pushf
push
mov
inc
and
mov
(bad)
xchg
jnp
scas
xchg
sub
mov
ds
(bad)
sbb
retf
xor
int
scas
nop
sahf
idiv
fnstcw
jmp
cld
sbb
mov
pop
std
mov
arpl
pusha
stos
mov
inc
sub
popa
leave
sbb
mov
xchg
push
inc
xchg
jmp
cmp
mov
sub
mov
dec
cmp
add
mov
sub
sbb
fcom
or
adc
pop
sti
jo
jl
xor
inc
addr16
fdiv
sub
stos
add
xchg
push
push
loope
verw
bound
and
sbb
fld
mov
sbb
lds
addr16
pop
(bad)
repnz
out
inc
or
and
loop
add
mov
pushf
scas
push
loopne
loop
mov
xchg
popf
and
stc
(bad)
loop
adc
mov
dec
cmp
popa
mov
bound
mov
jnp
lea
sar
sbb
push
xlat
and
push
sbb
ins
(bad)
sahf
seta
mov
das
sbb
jle
pop
fldcw
inc
xchg
adc
xchg
mov
cmp
add
mov
cmp
inc
lahf
cmp
loopne
lahf
mov
mov
(bad)
adc
loope
mov
cmps
pop
xor
xchg
add
cld
(bad)
shl
push
mov
inc
push
push
add
mov
test
imul
outs
ret
push
xchg
retf
sub
sbb
ret
cs
test
mov
in
jne
or
int3
push
adc
mov
aam
dec
ret
cmp
xlat
pop
xor
xor
ins
mov
das
ins
dec
adc
or
cdq
(bad)
mov
hlt
pop
sbb
pop
jge
lahf
lahf
inc
inc
retf
jne
test
push
neg
sahf
inc
inc
xlat
adc
adc
ins
xchg
and
inc
push
pop
in
sub
mov
mov
aas
repnz
pop
pop
jecxz
xor
bound
pop
xchg
jge
(bad)
in
imul
(bad)
hlt
and
sbb
icebp
fwait
call
mov
pop
enter
mov
(bad)
mov
inc
fsubr
pop
or
aas
mov
xchg
out
pop
cmp
sub
mov
pop
pop
pop
mov
retf
inc
jg
mov
cmp
out
inc
aaa
pop
jnp
mov
scas
jl
pusha
jl
in
sbb
jb
(bad)
pop
push
jmp
jnp
test
inc
pop
repz
add
inc
retf
fistp
inc
sub
add
repnz
and
dec
out
xchg
sbb
leave
ja
push
mov
repnz
lds
cmp
lahf
xor
xchg
int
add
dec
lea
xor
aad
mov
leave
and
jne
mov
stos
fmul
jg
pop
aas
mov
aas
fld
jne
xor
add
call
sti
sub
cmp
popa
pop
pusha
imul
data16
loopne
sar
pop
jp
ret
call
sbb
sbb
loopne
int3
(bad)
shl
mov
mov
cmps
jmp
stos
call
sub
ja
daa
lea
push
adc
inc
mov
pop
mov
les
mov
stos
aam
leave
push
int3
ins
and
into
enter
lods
icebp
loopne
push
popa
or
mov
add
cmps
adc
loop
je
adc
fisubr
repnz
nop
pushf
test
addr16
rcl
cmps
jg
repz
bnd
cli
scas
or
xchg
in
xchg
xlat
pushf
sbb
jo
mov
mov
and
gs
cmp
dec
lods
repz
cdq
lock
neg
push
lods
mov
cmp
mov
add
inc
pop
dec
fcmovbe
sahf
xor
fwait
sar
fs
jmp
int3
mov
scas
scas
loopne
xor
lahf
imul
gs
xlat
ja
nop
xchg
inc
jno
xchg
xor
xor
fst
push
stos
fwait
sub
inc
mov
mov
movs
into
in
and
ror
pop
push
pop
es
fiadd
clc
cs
pop
js
and
xchg
xchg
inc
stos
inc
aad
leave
dec
jmp
or
mov
jl
jmp
je
or
inc
jbe
addr16
loop
sbb
sbb
arpl
add
(bad)
icebp
jle
mov
les
mov
mov
(bad)
rcr
mov
dec
and
cmp
shr
mov
jmp
push
mov
scas
adc
push
fnstcw
loopne
xor
pop
dec
xchg
data16
lock
pushf
push
lods
adc
cdq
loope
xor
stos
ss
push
outs
jno
daa
lahf
adc
sbb
hlt
iret
or
inc
sbb
outs
int
jecxz
imul
dec
mul
fldcw
dec
in
sub
jp
inc
fadd
mov
jmp
sahf
(bad)
push
cmp
mov
cmps
dec
xchg
or
out
dec
fld
out
test
mov
sub
stos
rol
xor
loope
fcomp
movs
xchg
and
retf
or
leave
ins
mov
cmp
mov
cmp
test
jl
sahf
sbb
push
pop
in
cmp
xor
and
int3
dec
adc
(bad)
cmp
mov
cli
enter
jl
dec
pop
and
cmp
sbb
bnd
cmp
cmps
mov
jbe
lds
mov
jo
retf
sbb
inc
mov
scas
loop
cwde
sbb
mov
(bad)
push
xchg
iret
mov
inc
ins
je
sub
mov
inc
ins
scas
call
scas
std
stos
daa
aad
xchg
dec
or
mov
mov
push
or
push
dec
push
stc
cld
add
repz
or
cmc
mov
xor
cld
push
xchg
jmp
inc
xchg
push
sub
idiv
jnp
cmps
inc
mov
pop
pop
movs
repnz
sar
in
mov
call
loope
cli
fst
fwait
pop
push
pop
or
xlat
ret
xor
fucomip
push
adc
sub
ins
jmp
mov
adc
fist
mov
sbb
xchg
std
mov
cmp
jae
pop
(bad)
bound
aaa
xor
mov
xchg
pusha
cld
xor
stc
push
scas
xchg
mov
test
clc
outs
mov
pop
stos
dec
jge
imul
add
cli
add
mov
ja
and
inc
sub
or
es
cmp
add
xchg
(bad)
cmp
frstor
xchg
sub
mov
dec
js
sub
cwde
sub
sub
mov
movs
dec
aaa
cwde
outs
in
test
sub
fstp
adc
loopne
xchg
in
std
and
icebp
cmp
cmp
int
and
xor
test
shl
sbb
and
scas
fiadd
jecxz
inc
gs
sbb
(bad)
push
shl
mov
push
pop
dec
shr
out
cmps
xchg
ror
sar
arpl
push
in
xlat
mov
sbb
(bad)
jp
test
ins
std
sub
imul
cmp
fcmovbe
aad
lock
and
cmp
mov
popf
dec
sbb
or
aad
leave
mov
jns
aaa
jae
xchg
retf
test
cmp
cmp
jns
dec
enter
and
outs
stc
sbb
pop
stos
mov
jb
pop
jl
and
jecxz
(bad)
loopne
cmc
push
outs
rcl
stos
lock
(bad)
and
inc
cmps
mov
xor
mov
xchg
cmp
mov
mov
ss
fcomp
mov
push
jne
rcl
xor
cld
sbb
and
outs
xchg
sbb
dec
sub
lahf
cmps
test
pop
and
outs
pop
shr
test
pop
(bad)
movs
imul
xlat
inc
fcmovnu
xor
lods
test
sub
push
outs
mov
push
(bad)
shl
or
xchg
and
pop
mov
xlat
jmp
pop
cmps
xchg
mov
(bad)
mov
sub
inc
(bad)
daa
xlat
adc
add
adc
leave
xchg
push
xchg
dec
mov
leave
adc
test
add
xor
dec
int
sar
in
sahf
into
jno
cmp
pushf
scas
fcmove
mov
inc
adc
ret
or
xchg
(bad)
repz
cmp
pop
das
gs
adc
cmp
xor
dec
adc
and
dec
push
xor
and
popf
sbb
push
fmul
leave
mov
mov
stos
(bad)
xor
ss
jb
dec
pop
dec
push
xor
jo
and
or
lods
xchg
cmc
fwait
loope
or
scas
pusha
into
or
lods
sbb
mov
mov
sub
ror
aam
pop
adc
jno
shl
dec
rcl
xchg
push
popa
ficomp
push
inc
in
jb
sbb
repz
jbe
aas
(bad)
repz
lds
xchg
mov
cmp
mov
stos
dec
sbb
inc
xlat
cmp
enter
daa
xor
stos
fwait
push
or
nop
jns
int3
add
lods
aas
movs
test
lds
mov
pop
xchg
add
xchg
call
pop
dec
dec
jecxz
mov
loope
cs
out
jns
cmp
cmp
fnstsw
mov
dec
retf
cmp
xlat
and
nop
jmp
cmp
jbe
jg
jmp
mov
xchg
fist
mov
cwde
sti
dec
or
test
lahf
cmp
mov
aas
fistp
or
jmp
add
(bad)
enter
adc
jno
sub
mov
push
scas
out
cmp
repz
push
fisub
imul
cmp
or
cs
mov
(bad)
je
push
cmps
repz
ja
sar
sub
call
lods
mov
or
mov
dec
adc
xchg
jbe
cdq
retf
jno
test
stos
(bad)
cmps
xor
mov
dec
dec
inc
aad
mov
push
or
push
scas
cmp
mov
or
or
pop
pop
mov
push
sub
jp
mov
add
pop
dec
mov
or
mov
ja
and
jae
repnz
add
(bad)
mov
in
lock
lahf
add
pop
mov
mov
inc
call
push
dec
mov
mov
sahf
mov
xor
cmps
pop
sbb
jge
not
movs
scas
int
repnz
les
xor
(bad)
adc
sbb
mov
push
jmp
cmp
push
ret
addr16
lock
shl
jnp
(bad)
enter
cmp
loop
sbb
jb
adc
(bad)
mov
mov
xchg
repnz
es
xor
or
push
hlt
ja
sub
fs
xor
mov
lahf
mov
sti
xor
mov
loop
cmp
xchg
push
fdiv
adc
out
fldenv
pushf
mov
popf
fstp
out
add
sub
mov
cmps
and
sbb
sti
int3
pop
mov
adc
jmp
adc
scas
or
mov
pop
mov
inc
in
jge
adc
dec
das
retf
jo
jb
cmp
add
in
and
cmp
pop
repz
adc
cli
jbe
(bad)
ds
sahf
xor
sbb
and
inc
mov
inc
fmul
adc
jmp
pop
loop
mov
pop
leave
jmp
push
mov
mov
push
std
jbe
xor
adc
jne
mov
lods
sub
and
lea
iret
adc
inc
cmps
pop
popa
jnp
jg
add
movs
leave
es
loop
mov
mov
pop
ja
mov
inc
mov
ins
add
clc
jge
call
shl
mov
int
push
push
mov
sahf
retf
mov
or
mov
mov
push
repz
jnp
jg
popf
jns
imul
mov
(bad)
mov
cmc
jmp
mov
icebp
(bad)
aam
mov
dec
jp
push
sbb
mov
movs
aaa
fild
push
outs
fisttp
aaa
inc
add
sub
dec
xchg
cmp
rol
fsubr
stc
mov
cmp
mov
js
mov
and
dec
add
out
pop
imul
cmps
jns
cmp
inc
(bad)
sub
movs
ds
add
pop
push
mov
or
repz
inc
jo
jp
neg
rcl
pop
or
arpl
popa
sub
out
ins
(bad)
outs
sar
lods
in
mov
inc
mov
setbe
push
or
fild
or
xor
fdiv
inc
mov
sub
in
or
mov
loop
dec
in
in
sub
xchg
test
jmp
jne
pop
cli
pop
pop
mov
ror
icebp
cld
and
mov
mov
cmp
call
scas
cmps
rcr
fsub
pop
call
mov
test
js
test
pop
push
aam
jle
data16
lock
sbb
add
imul
aas
(bad)
push
sqrtps
call
(bad)
test
inc
pop
lock
loop
mov
adc
ins
mov
icebp
(bad)
cli
push
(bad)
pop
add
pop
adc
test
or
int
stos
cmp
fidiv
(bad)
outs
pop
add
pop
xchg
rcr
aaa
sbb
retf
in
scas
(bad)
push
xchg
inc
scas
fwait
pop
retf
stos
jmp
push
dec
push
inc
fnstsw
sti
mov
push
inc
pop
mov
sbb
(bad)
inc
ret
out
setb
dec
mov
mov
(bad)
mov
mov
lods
addr16
push
xor
sbb
and
sub
xchg
adc
adc
mov
and
mov
push
pop
cmp
push
jnp
sub
cmp
lods
mul
xchg
jae
cli
setae
stc
mov
sub
bndstx
mov
fild
mov
xor
dec
mov
call
xor
push
jns
ror
and
inc
inc
in
fisubr
cld
or
test
cmp
jne
lds
cld
push
jl
sbb
pusha
jle
mov
fiadd
mov
xor
dec
sub
sahf
or
stc
jne
mov
lahf
in
ja
(bad)
push
outs
hlt
sbb
xor
jmp
adc
mul
and
cmps
xor
push
popf
adc
or
push
sub
lods
fst
loop
sbb
push
pop
aad
hlt
mov
ror
dec
mov
pop
fs
and
lods
clc
std
je
sub
mov
cmps
xor
test
adc
mov
push
pause
shl
add
mov
or
jmp
cli
inc
dec
xchg
div
mul
rcr
std
inc
sbb
dec
ins
mov
dec
or
in
add
scas
dec
mov
scas
retf
movs
movs
mov
scas
mov
cmp
hlt
dec
xchg
xlat
retf
call
xor
and
arpl
mov
psrad
jae
push
pop
push
leave
ret
pop
sar
in
out
daa
or
inc
nop
or
outs
adc
or
add
data16
lods
push
sub
jmp
lods
pop
ret
dec
push
push
test
jecxz
movs
mov
leave
sahf
or
outs
or
xor
xchg
cmp
cmps
sbb
push
aaa
mov
xor
xor
jp
popf
dec
or
retf
add
rol
jno
fisttp
and
lahf
in
enter
out
lods
cmps
xchg
sub
jmp
mov
ss
jae
into
push
push
fwait
dec
push
ss
sbb
pop
cmc
int
mov
and
inc
add
jo
imul
pop
daa
jns
test
jbe
call
mov
shl
fisttp
mov
mov
es
(bad)
mov
adc
sub
ss
cmp
sahf
(bad)
ins
jnp
arpl
enter
mov
std
xchg
rol
cmp
ret
cdq
ins
cmp
mov
pop
mov
test
popf
shl
push
inc
nop
ret
sbb
push
pop
jae
sub
and
ret
mov
sbb
out
jle
ins
data16
int
and
sub
cld
rcr
pop
or
into
dec
mov
enter
cmp
cmp
ret
mov
ret
sub
xchg
outs
icebp
cdq
cmps
mov
xchg
repnz
fdivr
push
mov
fdivr
ja
mov
add
push
jne
mov
loopne
pop
movs
cmp
js
jb
lock
inc
jne
dec
loope
mov
mov
sub
imul
dec
in
test
dec
dec
dec
sbb
ret
lea
inc
cdq
out
cwde
xlat
dec
sahf
inc
cwde
mov
and
mov
fwait
ins
or
sub
clc
fst
xlat
hlt
cs
add
aam
mov
fwait
ret
xlat
push
dec
push
aas
push
xor
in
xchg
fiadd
add
movs
inc
mov
lea
int
adc
imul
(bad)
loope
cwde
ficomp
mov
mov
sub
xchg
and
dec
cmp
mov
add
cmp
cmc
sahf
jb
popf
xchg
arpl
sub
lahf
or
xchg
stos
inc
fist
add
jmp
or
jg
jg
push
xchg
push
xchg
jnp
ins
pop
outs
push
jmp
scas
fild
push
daa
scas
lock
mul
imul
add
movs
aas
test
in
xchg
fwait
idiv
aaa
and
fisubr
xchg
dec
movs
push
xchg
dec
lods
ficom
xchg
scas
adc
inc
adc
aam
sub
push
jmp
lods
adc
sbb
out
dec
push
pop
ficom
push
call
inc
xor
hlt
and
add
push
cwde
int
rcr
int
add
push
lods
mov
stos
out
jno
pmaxsw
xchg
mov
and
(bad)
mov
imul
lock
ds
mov
fiadd
pop
out
imul
jmp
adc
jne
mov
call
dec
add
bound
mov
stos
xor
(bad)
std
sti
or
out
jns
inc
or
xlat
stos
and
fdivr
jno
lds
jno
pusha
add
cdq
inc
mov
adc
inc
pop
xor
and
pop
imul
adc
inc
fistp
dec
cmp
fadd
ins
clc
lds
in
inc
push
push
in
cmp
out
into
test
(bad)
lahf
nop
addr16
mov
aas
int3
add
cld
(bad)
shl
and
loope
or
and
es
mov
out
cmp
mov
fst
push
into
xchg
pop
adc
pop
scas
sub
jae
mov
rol
stos
and
mov
aas
sub
xchg
mov
jmp
pop
arpl
mov
sub
dec
lods
jecxz
push
stos
lock
div
dec
call
cs
pop
mov
test
imul
and
lea
mov
push
test
inc
mov
mov
call
add
add
sar
jecxz
out
push
clc
out
or
jge
(bad)
scas
xchg
cmp
mov
jle
xchg
mov
mov
push
frstor
jg
lahf
repz
pop
pop
je
inc
(bad)
xor
adc
fwait
jne
ja
push
and
test
mov
stos
or
out
inc
mov
ss
test
(bad)
and
test
fisttp
inc
mov
adc
mov
scas
xchg
mov
popf
push
stos
stc
dec
outs
xchg
fld
stc
fcomp
test
(bad)
shl
xor
pop
sub
mov
xlat
pusha
loop
or
sub
repz
inc
(bad)
push
cmp
cmp
sbb
pop
push
and
xchg
lods
mov
or
sbb
inc
or
dec
stos
or
xchg
retf
popf
or
add
daa
dec
mov
lea
xlat
bound
or
sbb
fidiv
jp
inc
push
fs
loop
aas
fisttp
push
jno
repz
push
and
in
adc
pop
in
mov
outs
nop
xchg
inc
leave
add
sub
dec
ss
and
imul
cmp
sub
pop
pop
sub
cmp
push
ret
pop
fstp
call
xor
jae
inc
mov
fist
add
jmp
aas
(bad)
pop
call
cmp
dec
dec
stos
sub
cmc
ret
addr16
xchg
push
test
or
aad
into
fdivr
mov
mov
push
lea
retf
mov
ffreep
(bad)
icebp
rcr
iret
xchg
and
and
(bad)
or
ret
sbb
rcr
ret
stc
aaa
dec
into
ror
push
lahf
iret
sar
xchg
fiadd
mov
loop
out
das
sbb
dec
xlat
call
bnd
cmp
push
mov
cli
dec
outs
dec
out
nop
or
aad
bnd
lahf
stos
or
dec
les
push
jno
inc
or
shr
fld
shr
inc
mov
fucomi
cwde
inc
enter
dec
sbb
or
and
sbb
fnstcw
push
xchg
nop
pop
retf
cdq
inc
xrelease
cmp
stc
mov
xchg
(bad)
dec
jle
ins
push
jo
xor
pushf
dec
shr
fst
icebp
mov
sbb
dec
mov
sahf
ss
stos
(bad)
xchg
es
lods
into
mov
daa
inc
sbb
es
mov
fwait
ins
sbb
jae
fst
sub
pop
xchg
int
mov
stc
xlat
sub
in
mov
arpl
mov
mov
jno
xor
or
and
cmp
xchg
xchg
push
(bad)
and
mov
cmp
enter
push
push
fistp
aaa
sbb
mov
mov
or
cmp
shl
push
into
cmp
loope
adc
and
mov
sub
xor
add
xchg
xchg
jo
sub
mov
in
cli
aas
dec
jno
pop
fcomp
sub
sbb
add
cli
stos
out
outs
icebp
test
sahf
js
and
imul
popa
adc
fdiv
mov
jmp
ja
push
cld
and
jo
cwde
outs
push
mov
stos
pusha
cmp
bound
out
(bad)
jg
jb
or
mov
cmc
dec
data16
inc
xlat
adc
icebp
jmp
enter
mov
jns
iret
int3
add
or
xchg
(bad)
call
sbb
jbe
xchg
jb
mov
(bad)
mov
bswap
repnz
inc
fmulp
mov
push
neg
and
and
jmp
ds
test
mov
cli
xchg
aad
or
push
dec
pop
jo
fsubp
movs
pop
fistp
xor
popa
jne
sub
dec
ins
cdq
cwde
sub
jb
push
popa
aaa
popf
and
stc
jno
iret
push
cwde
xchg
inc
jo
xor
sahf
shl
mov
cmp
fistp
and
inc
cmp
xchg
jnp
mov
(bad)
adc
adc
sbb
cdq
in
ins
std
fucomip
mov
push
xor
inc
jle
inc
xchg
cmp
out
leave
inc
lods
xlat
inc
retf
dec
and
and
(bad)
(bad)
add
jge
sti
stos
push
inc
and
cmp
out
xlat
push
pop
retf
mov
push
lahf
pop
mov
repz
repnz
sub
inc
mov
xchg
xor
push
sub
(bad)
push
xchg
push
xchg
dec
icebp
dec
add
sub
lods
nop
retf
test
in
popa
mov
(bad)
sbb
bound
test
sbb
mov
jb
or
xchg
or
lock
clc
out
pop
jno
cmp
or
sub
push
xor
in
jnp
lods
add
xor
mov
cwde
pop
sti
test
sbb
sahf
sub
adc
or
enter
inc
(bad)
xchg
dec
je
xchg
lahf
push
jae
sub
test
xchg
add
pop
lods
fmul
out
mov
push
and
not
imul
repz
and
pop
div
enter
rcr
pushf
mov
fistp
fs
mov
cdq
sub
(bad)
movs
inc
outs
call
xchg
cli
xor
hlt
aaa
pop
dec
xor
int
add
sub
loop
sbb
cmp
lock
xchg
mov
pop
gs
arpl
and
lods
loopne
add
dec
cmp
jnp
jmp
iret
and
sub
call
aas
imul
push
cs
add
std
sbb
mov
adc
jge
push
sti
mov
adc
scas
shl
call
jae
sahf
test
(bad)
fstp
adc
mov
push
add
clc
dec
fcom
push
jecxz
mov
jl
cmc
pop
mov
push
loop
sar
mov
mov
cld
rcr
inc
enter
lahf
fmul
and
add
stc
inc
mov
jmp
test
clc
xchg
mov
dec
test
push
and
mov
and
popf
mov
jmp
stos
pop
test
aad
repz
popf
fcom
mov
add
add
cwde
jns
mov
movs
inc
pop
inc
cwde
push
mov
movs
and
stos
into
scas
adc
mov
ins
inc
mov
scas
pushf
adc
mov
imul
gs
test
mov
xchg
sbb
push
repnz
loop
pop
sbb
leave
sub
mov
add
aad
push
aam
sbb
test
xor
push
fcomi
pushf
add
mov
data16
sbb
movs
aad
gs
mov
ror
loope
ja
push
add
enter
jmp
ja
sbb
pop
adc
cmp
test
push
jge
mov
shl
ins
push
loope
dec
(bad)
xor
rol
sbb
mov
cmp
ds
les
ins
dec
xchg
adc
push
xchg
pop
lock
mov
scas
fdiv
xor
pop
sub
movs
les
pop
inc
mov
jb
fmul
mov
push
cmps
jno
scas
pop
shl
cmp
push
cmp
sar
les
cs
rcl
fmulp
dec
sbb
fisub
(bad)
(bad)
pop
jge
out
not
pusha
outs
add
push
xchg
fimul
fdivr
(bad)
loop
movs
gs
sub
mov
ror
adc
lock
enter
(bad)
add
sahf
les
cs
ficomp
push
not
fnstsw
stos
stc
push
out
mov
jge
(bad)
repnz
cmp
sbb
pushf
lds
dec
out
call
xor
dec
(bad)
leave
in
int
dec
call
cmp
and
daa
hlt
cdq
leave
std
xor
inc
test
push
push
jg
out
or
out
nop
data16
je
movs
(bad)
mov
gs
push
cmc
repz
and
retf
nop
lods
dec
fdiv
fdiv
sub
inc
aad
jg
sub
sbb
pushf
dec
and
mov
daa
hlt
cmp
ja
push
mov
push
mov
sub
inc
cmp
jne
adc
nop
vucomisd
xor
mov
push
out
lahf
pop
lods
or
addr16
adc
mov
mov
mov
sti
in
(bad)
lods
pop
mov
mov
sbb
push
add
ret
mov
sbb
cmps
cmp
ds
xchg
xlat
(bad)
test
test
pop
rol
mov
mov
jb
cmp
cmp
test
jmp
xlat
sub
mov
jno
ror
mov
pop
outs
cmp
mov
push
dec
fadd
push
pop
mov
(bad)
mov
icebp
dec
cwde
xchg
add
sar
xor
jno
jge
mov
push
pop
aaa
sar
call
cdq
dec
mov
pop
mov
jl
ret
add
test
jp
xor
dec
xchg
xchg
dec
push
jae
(bad)
ins
mov
xchg
ret
xor
in
inc
retf
jmp
xchg
mov
or
out
(bad)
fsubr
stos
in
clc
and
cmp
loope
or
jbe
sbb
clc
lahf
push
aam
jl
cmps
fadd
out
mov
gs
xor
sub
dec
sbb
mov
loope
mov
ror
pop
rcl
jl
sub
psubd
jecxz
pop
ret
inc
lds
sub
xor
dec
and
inc
lods
es
jmp
mov
shl
and
mov
pushf
xchg
jb
sub
lods
cmp
mov
add
adc
jns
dec
adc
cmps
mov
sbb
addr16
in
jae
adc
cmp
das
lods
or
fcmovu
pop
cmp
cmc
xchg
or
into
aas
xchg
and
push
cwde
call
loop
inc
pushf
dec
pop
mov
xor
push
out
fidivr
ret
lds
retf
push
jo
mov
jo
(bad)
dec
pop
sti
push
iret
jp
imul
adc
add
push
imul
lahf
mov
push
push
(bad)
or
imul
inc
pop
xor
sti
mov
push
add
dec
outs
mov
jae
inc
xor
mov
xchg
and
mov
outs
into
outs
aam
push
call
imul
cmc
es
xchg
cmp
popa
mov
xchg
jg
cli
fcom
fnstenv
dec
inc
(bad)
inc
cmp
lea
leave
out
cmp
pop
xor
pop
daa
test
and
cwde
or
mov
in
xchg
pop
and
(bad)
shl
fstp
or
inc
mov
shl
dec
cdq
adc
inc
push
out
imul
mov
fxch
inc
sbb
pop
mov
ret
add
leave
cld
jecxz
icebp
jne
int3
shl
fs
add
sub
scas
and
and
add
pop
pop
mov
lods
sub
test
sar
push
call
sub
imul
jmp
adc
imul
scas
mov
test
call
std
xchg
js
push
jmp
int
stos
jns
xchg
dec
sub
aad
dec
xchg
outs
cmp
out
outs
mov
cmc
mov
jmp
xor
lea
mov
add
mov
mov
adc
bnd
arpl
push
aad
pushf
or
out
aam
fild
xchg
mov
mov
loop
or
movs
cdq
int3
pop
and
xchg
dec
xor
pop
ror
and
sbb
sub
cmp
ss
xor
inc
or
and
popa
sbb
outs
dec
imul
sbb
(bad)
pop
push
pop
or
mov
call
cvtdq2ps
dec
dec
sar
mov
cmps
adc
mov
sub
cmp
sbb
inc
cmp
mov
and
xor
cmp
repz
popa
mov
call
mov
stos
movs
inc
jmp
adc
rol
push
in
test
mov
inc
xchg
inc
jl
test
popf
into
push
push
pop
rcr
sub
cmps
lea
xchg
(bad)
mov
mov
inc
int3
cs
fld
mov
outs
adc
xor
sbb
(bad)
leave
xchg
jle
ds
fsub
xchg
push
popa
jno
mov
dec
dec
dec
sub
or
and
div
mov
clc
shl
mov
push
inc
pop
stos
xlat
xor
mov
xchg
cwde
stc
imul
shr
mov
ss
ss
inc
or
popf
into
mov
sub
jmp
scas
xchg
das
les
push
ror
cmp
xor
cmc
sbb
xor
xor
ins
aam
test
and
outs
pandn
sbb
mov
cli
cmp
ficom
or
mov
test
or
pop
cmp
fwait
mov
sbb
sbb
sub
sub
push
jb
push
push
dec
jbe
xor
mov
jno
mov
dec
jle
xchg
pop
pushf
aaa
(bad)
sub
push
jg
dec
cmp
popf
icebp
(bad)
or
pop
lods
sub
mov
sbb
xchg
xor
push
arpl
jb
xor
xchg
bound
lds
movs
inc
xlat
jmp
adc
into
aam
inc
test
pop
hlt
xchg
sub
jo
repnz
outs
(bad)
push
push
out
clc
repnz
es
add
mov
lods
adc
(bad)
jecxz
push
mov
arpl
pop
(bad)
shl
stos
xchg
jns
jb
fisttp
pop
in
jge
cld
arpl
mov
aad
push
pop
(bad)
arpl
sbb
lds
add
pop
mov
mov
dec
les
aaa
sub
jecxz
pop
xchg
into
data16
xor
mov
test
mov
aaa
les
mov
aas
in
cdq
sub
cmp
or
rcl
out
sub
test
dec
aam
out
xor
out
movaps
cmp
(bad)
cld
mov
imul
push
xchg
fimul
loop
xchg
pop
outs
(bad)
imul
stos
dec
and
in
cmp
in
adc
nop
mov
fdiv
stos
sub
cmp
mov
mov
nop
xchg
loopne
repz
sbb
test
mov
push
sbb
mov
or
mov
cmps
enter
mov
(bad)
push
dec
or
jmp
ss
sbb
xor
sub
test
mov
pop
cmp
and
(bad)
lods
jge
jmp
sbb
add
push
mov
sub
mov
imul
pop
cmc
call
stc
xor
ret
add
push
jmp
inc
cwde
outs
(bad)
sub
stos
repnz
cld
jb
sub
mov
push
stc
cmp
push
mov
bound
and
push
stos
cli
mov
aas
adc
adc
mov
sub
xchg
lds
or
loope
dec
rcr
mov
add
mov
add
sbb
clc
mov
sti
add
adc
call
cmp
icebp
hlt
mov
inc
popa
call
arpl
push
scas
fisubr
rcr
xor
int3
cdq
add
ret
nop
inc
xor
repnz
out
cmp
out
dec
or
rcr
sbb
retf
cmps
mov
shl
fs
and
lds
sar
adc
fwait
cmps
or
or
jle
or
mov
pop
cli
dec
cmp
(bad)
push
call
dec
add
in
and
das
xor
out
imul
dec
(bad)
mov
cmp
dec
and
or
cwde
enter
pop
clc
xchg
iret
inc
dec
ret
sub
inc
call
ret
adc
push
cmp
pop
loope
mov
sub
pusha
jae
sahf
sub
popf
call
mov
popf
test
faddp
adc
inc
mov
imul
dec
xchg
and
jecxz
popa
clc
jne
cmp
rol
mov
cdq
jmp
jo
mov
fild
xor
cmp
lods
xor
add
aam
push
mov
cmc
sbb
in
iret
add
push
push
mov
cmp
adc
mov
imul
popa
out
cmps
mov
mov
sub
repnz
stc
shl
lock
push
cld
dec
xor
(bad)
adc
or
push
or
aaa
dec
hlt
aad
retf
adc
cli
iret
call
leave
shr
mov
xchg
sub
pop
push
out
mov
stos
mov
sub
imul
push
mov
shr
mov
loope
xchg
in
pop
xlat
mov
sub
mov
add
inc
inc
ja
jmp
stos
mov
pop
mov
cmp
mov
out
sub
int3
pop
mov
inc
mov
repnz
(bad)
cmp
bound
popf
das
sbb
jno
fstp
iret
les
cmp
idiv
mov
and
push
and
test
fisttp
pop
mov
dec
fld
mov
or
cmp
jo
inc
mov
pop
xchg
add
add
(bad)
lock
clc
mov
push
(bad)
hlt
pop
out
mov
cmc
mov
mov
dec
loope
mov
int3
jne
inc
jns
inc
loope
cmp
cli
jp
pop
sti
xchg
jge
sub
inc
std
sahf
out
ror
push
add
sahf
mov
imul
lods
int
loope
or
arpl
sar
gs
mov
mov
or
into
or
int
dec
mov
jl
sbb
imul
adc
cdq
jl
mov
shr
mov
xchg
dec
pop
mov
add
aam
adc
(bad)
cmp
cmp
push
cmc
(bad)
shl
lea
fmul
test
adc
ret
fcomp
dec
dec
in
mov
std
and
mov
ret
daa
pushf
jns
in
xlat
or
sbb
bound
call
repz
mov
mov
sub
neg
cmps
scas
fild
dec
fsubr
cwde
pop
dec
pushf
inc
xor
add
pop
bound
adc
pop
dec
pop
lods
inc
or
push
aaa
cmc
rcl
lea
jnp
xchg
and
dec
fcmovnbe
out
cmp
xor
rol
jl
out
repz
lds
div
push
(bad)
xor
jns
in
and
inc
push
pop
imul
sbb
das
push
in
sti
lahf
aas
add
push
xor
inc
dec
and
jl
cmps
call
push
lods
sub
xchg
shr
pop
mul
xchg
dec
fs
cmp
mov
and
push
fwait
data16
jl
ins
sub
push
outs
and
xor
xchg
sub
jle
vminpd
mov
adc
fs
shl
movs
ret
shr
inc
mov
xor
test
cli
mov
and
rol
sub
repz
or
rcr
cmc
push
(bad)
lahf
fsub
sub
sar
(bad)
in
sbb
jbe
add
jb
jno
ins
push
mov
daa
xor
repz
push
add
outs
(bad)
test
loop
lahf
xchg
pop
push
push
xor
mov
sub
aas
sbb
retf
mov
xchg
stos
sbb
sbb
push
mov
es
das
out
xchg
imul
jb
xchg
test
xchg
jae
repz
push
test
xor
fwait
sub
xor
push
sar
adc
sbb
dec
dec
mov
retf
dec
sub
dec
ror
jo
push
inc
mov
repz
in
push
stos
scas
mov
adc
adc
shl
pop
jo
pop
inc
pop
ja
or
adc
inc
push
adc
mov
shl
fiadd
sbb
xor
mov
(bad)
cmp
push
jbe
fbstp
add
pusha
loope
xor
mov
dec
pop
rcl
jmp
jmp
mov
call
(bad)
out
ja
ja
addr16
and
push
sahf
loope
or
pop
in
cs
in
lahf
mov
(bad)
rcr
xor
mov
int3
xchg
adc
js
dec
sahf
aaa
pop
(bad)
(bad)
cmps
push
(bad)
xor
or
outs
pushf
xchg
cmp
jns
adc
and
in
push
jg
jp
push
iret
setae
pushf
fnstenv
mov
add
stos
mov
add
fwait
xchg
push
xor
inc
adc
fld
lods
leave
shr
push
arpl
dec
jl
loop
pop
stos
xchg
out
mov
cs
jge
(bad)
in
mov
test
push
mov
sbb
mov
or
pop
push
sub
push
jo
(bad)
fcomp
push
scas
add
pop
neg
sub
or
add
or
mov
pop
cmp
sti
aas
je
inc
mov
and
mov
or
cmps
jle
fisub
lahf
push
sbb
or
pop
imul
inc
loope
jae
fsubr
xchg
and
mov
dec
in
mov
popa
stos
dec
std
leave
jmp
ret
scas
push
fidivr
xor
adc
sub
loop
test
retf
out
adc
addr16
add
mov
fst
add
sar
jl
xchg
mov
pop
call
fadd
daa
clc
add
sub
dec
stc
fdivr
fldcw
fisttp
mov
pop
arpl
sbb
aad
outs
push
mov
pop
pop
dec
aad
mov
fcom
loopne
ss
dec
jle
sbb
mov
and
pop
add
jp
popf
and
mov
sub
jb
jl
sub
mov
pop
and
je
mov
(bad)
cdq
xor
sub
mov
dec
dec
call
and
or
aad
jne
pusha
addr16
jnp
pushw
push
mov
jae
pop
icebp
fisub
divps
add
clc
movs
and
inc
xor
xor
dec
ret
sbb
lea
popf
inc
stos
test
scas
fpatan
mov
mov
aas
push
mov
repnz
call
dec
popf
fbstp
outs
push
into
jne
xchg
sub
pop
pop
push
xor
addr16
push
jne
sub
sbb
and
dec
xchg
shl
cmp
loop
mov
cmp
es
(bad)
aam
aam
inc
push
push
mov
cmp
and
sar
pushf
sub
and
stos
in
daa
jo
or
pmulhw
adc
cli
(bad)
call
imul
aaa
dec
xor
mov
or
ffree
sbb
xor
inc
pop
cmp
xchg
xlat
mov
repnz
(bad)
and
popf
es
pop
and
cmc
pop
inc
pop
mov
call
sub
(bad)
imul
pop
inc
in
cli
jle
sti
sub
hlt
mov
or
mov
sbb
ja
jl
cmp
pop
lds
mov
adc
sub
push
add
rcl
mov
cmp
jae
dec
call
aam
inc
pop
int3
std
addr16
jmp
lea
out
loope
xor
fstp
mov
xchg
sub
loope
test
inc
enter
sbb
scas
or
rcr
retf
push
mov
test
cwde
call
test
cs
jle
ds
jp
fisub
jo
loope
and
xchg
adc
es
mov
mov
mov
pop
fisttp
xor
xchg
push
fsubr
and
jecxz
push
jmp
adc
test
dec
test
dec
xchg
dec
cmp
imul
ds
cdq
(bad)
mov
jl
xor
(bad)
dec
fidiv
mov
(bad)
cwde
dec
imul
xchg
xchg
bound
les
add
push
retf
jnp
imul
rsqrtps
sti
push
ja
cmp
ss
movs
in
or
jne
movs
test
mov
stc
jne
sbb
iret
add
mov
test
mov
sbb
fmul
xlat
adc
fdivr
jmp
ret
cli
int3
movs
or
lahf
inc
leave
sti
ja
pop
mov
lds
popa
leave
ja
stc
jns
sub
rol
ss
or
dec
sub
pushf
sbb
jne
aas
rcl
popa
or
out
lahf
(bad)
int
pop
loop
and
and
push
popa
sub
jecxz
jbe
sub
xchg
jns
jmp
into
fwait
bswap
shl
call
jno
cmp
or
in
push
mov
adc
jecxz
daa
mov
jg
ret
mov
aaa
push
pop
ret
push
dec
mov
xchg
xchg
fnstcw
scas
fidivr
xchg
cmps
mov
pop
cmp
dec
retf
jge
enter
push
pusha
ins
lods
pop
and
sbb
int
pop
pop
adc
cs
inc
cmps
inc
add
rcl
pop
or
mov
xchg
out
mov
popf
in
ins
xor
fwait
cwde
pusha
imul
dec
or
dec
inc
push
hlt
push
mov
stos
retf
jbe
mov
jp
imul
retf
inc
adc
xor
daa
pop
xchg
mov
rcl
clc
pop
push
sbb
pop
ror
inc
adc
(bad)
jo
cmp
adc
inc
js
or
outs
inc
or
test
mov
jo
ret
(bad)
push
push
int
popa
or
arpl
dec
pop
push
pop
xor
sub
add
or
adc
mov
(bad)
mov
call
lds
xor
jl
movs
lds
xchg
jb
pop
lds
push
sub
loopne
pop
enter
dec
mov
fcomp
(bad)
cmps
lods
xchg
ret
ins
stos
mov
dec
pop
adc
ds
jle
push
sub
aad
pop
mov
push
mov
in
xrelease
int3
push
hlt
pop
addr16
push
mov
test
mov
rol
mov
fwait
jg
das
dec
out
push
(bad)
movs
xchg
test
fdivrp
jmp
lods
jmp
or
mov
and
test
sbb
mov
push
push
ds
or
imul
call
pop
jb
adc
pop
test
cmc
jno
fadd
sbb
ss
cmp
push
fcomi
loop
pusha
xor
es
adc
xor
fcom
mov
ret
push
xchg
mul
or
mov
(bad)
sub
push
xor
cmc
movs
cli
fistp
movs
ins
adc
sbb
stc
xor
cld
test
cdq
ror
test
mov
fs
push
push
out
aad
mov
push
imul
pop
idiv
scas
xchg
mov
cmp
cmc
adc
into
pop
push
mov
(bad)
lahf
cli
xchg
repnz
sub
clc
xchg
add
rol
xchg
and
push
stos
scas
lahf
jmp
les
mov
mov
mov
adc
cmp
mov
cmp
adc
mov
repnz
ja
inc
push
cmp
xchg
mov
setb
lods
push
hlt
outs
test
cmc
pushf
dec
retf
xor
cdq
(bad)
sbb
les
mov
cmc
es
(bad)
das
and
retf
mov
nop
(bad)
fcomp
retf
jb
std
in
lods
cs
test
sub
int
cmp
cmp
aaa
cmp
adc
mov
or
je
lahf
add
addr16
iret
mov
and
movs
inc
sti
mov
test
push
rcr
in
mov
push
dec
mov
mov
xor
pop
ret
push
fwait
jb
leave
and
adc
or
test
mov
lds
mov
xchg
xchg
jno
retf
inc
sti
inc
jg
bound
pop
in
sbb
push
mov
(bad)
adc
jnp
loopne
push
rol
aad
lods
pop
dec
xor
retf
jmp
or
std
cmp
adc
retf
movs
out
mov
adc
xor
fs
retf
and
lods
jg
jae
stos
call
sahf
stos
(bad)
sub
sub
movs
adc
or
movs
push
mov
mov
dec
xchg
pusha
mov
jb
lock
hlt
test
or
mov
and
lock
inc
retf
je
in
int3
mov
cmc
xor
add
mov
hlt
adc
xchg
in
xor
mov
enter
daa
(bad)
push
repnz
data16
stc
sbb
movs
cwde
rcr
mov
(bad)
std
movs
xchg
add
rol
sbb
sub
cwde
test
gs
fisttp
mov
cwde
pop
dec
mov
movs
popa
test
cli
xor
sub
adc
inc
adc
dec
ss
jmp
or
mov
jmp
fmul
cmp
mov
pop
cmp
push
neg
add
jle
sub
mov
nop
jmp
pop
outs
enter
fldcw
inc
loopne
sahf
int3
xchg
jge
cmp
inc
daa
movs
mov
imul
push
(bad)
ror
pop
jnp
lods
add
fcmove
shld
dec
and
jne
cdq
into
jns
lods
addr16
sub
xor
sbb
mov
and
sbb
mov
test
and
aaa
and
imul
inc
cmp
inc
or
mov
mov
sbb
movs
cmp
ja
bound
jae
pop
aas
and
or
dec
add
mov
push
mov
mov
and
mov
dec
cdq
in
cmp
pop
cwde
inc
fisttp
dec
xchg
clc
dec
jmp
pop
push
cld
int3
ds
push
cmp
inc
out
sbb
into
addr16
pop
loopne
push
or
mov
ds
inc
mov
jno
jmp
arpl
(bad)
not
mov
mov
jmp
push
iret
xchg
or
cli
repnz
clc
push
pop
sbb
fnstcw
mov
mov
(bad)
aas
pop
gs
lahf
daa
jne
or
daa
loop
stos
or
enter
je
leave
or
adc
test
dec
(bad)
mov
test
pop
cmp
(bad)
aam
pop
lock
pop
push
cld
mov
call
mov
inc
sbb
xchg
outs
jge
(bad)
shr
cwde
jne
sbb
pop
cmp
sbb
out
aas
loop
es
pop
inc
(bad)
fs
xchg
adc
imul
shl
jp
add
std
mov
push
into
add
jmp
cmp
not
stos
scas
add
xor
and
cmp
sbb
out
sbb
loope
xor
cmc
or
jo
add
movs
add
sbb
lahf
(bad)
loopne
and
fst
cmp
ds
cli
frstor
inc
das
push
ins
dec
pushf
jno
cmp
(bad)
shl
adc
add
jmp
inc
(bad)
push
pusha
neg
cmc
lahf
adc
cwde
pop
pop
aam
out
push
add
enter
push
dec
out
icebp
add
push
rcl
inc
add
jle
cmp
pushf
xlat
or
fdiv
mov
call
or
les
lock
xor
aaa
in
outs
push
adc
cld
add
add
add
std
test
je
imul
test
inc
and
gs
(bad)
dec
cmp
adc
out
or
outs
loop
add
outs
(bad)
fistp
xor
sahf
or
sbb
fs
mov
jg
daa
sbb
daa
repz
int
sti
leave
mov
aas
cmps
fdivr
aam
stos
mov
test
cmp
xchg
adc
sbb
xchg
mov
mov
push
push
dec
int
test
cmps
lock
not
adc
pop
push
sub
jno
push
call
jbe
mov
out
fdiv
sub
pop
jne
jecxz
ja
sbb
stos
sub
fisub
push
scas
inc
and
aad
rol
cli
(bad)
cmp
push
jo
idiv
mov
sbb
push
sar
loopne
jg
int3
inc
mov
inc
mov
mov
imul
ret
nop
dec
add
arpl
push
sub
pop
fisttp
sub
mov
lods
xchg
cmps
repnz
cmp
adc
mov
and
xlat
sub
shr
xor
arpl
add
sbb
js
loope
aad
retf
fisubr
or
fidiv
popf
push
jne
xlat
daa
popa
dec
push
mov
cmp
hlt
xchg
or
inc
mov
mov
add
pop
mov
movs
imul
mov
stos
mov
test
sti
rol
pop
in
xchg
xchg
in
rcl
sbb
xor
push
inc
jae
inc
xor
call
std
out
inc
jge
inc
inc
loop
sbb
retf
int3
pop
adc
test
fisubr
xchg
fcmovbe
es
or
mov
adc
xor
mov
into
test
mov
or
movs
sbb
rcl
(bad)
movs
icebp
idiv
cwde
into
or
mov
frstor
push
imul
in
xor
add
xchg
xchg
lea
mov
das
cmp
(bad)
mov
or
mov
test
cld
das
pop
mov
add
xor
(bad)
scas
(bad)
mov
xchg
push
mov
les
push
jne
(bad)
sub
(bad)
jne
cmp
xchg
cdq
mov
movs
cmp
sub
fcom
jge
dec
adc
sbb
int
call
or
mov
or
into
arpl
sub
mov
das
lock
dec
lahf
xchg
mov
mov
daa
sar
inc
and
cs
jle
xchg
sub
xchg
mov
mov
xor
pushf
into
scas
xchg
adc
enter
pop
jp
cs
fcomip
(bad)
jmp
jno
add
mov
(bad)
sub
push
cmps
les
clc
mov
aad
mov
int
mov
dec
loopne
jo
xor
mov
dec
pop
jns
lock
inc
lahf
jmp
fcomp
retf
test
xor
enter
shl
(bad)
adc
repz
fsubrp
lods
addr16
sbb
mov
imul
rcl
dec
dec
jmp
lods
scas
cmc
pop
dec
jp
jp
add
lods
sbb
shl
add
shl
sub
cs
inc
xchg
adc
push
aaa
mov
fwait
xor
pop
cmp
xchg
mov
test
cmp
push
inc
push
clc
or
jns
aam
(bad)
ins
push
in
pushf
push
sti
iret
adc
cdq
hlt
aam
or
test
adc
hlt
ss
and
dec
mov
outs
sub
adc
jmp
push
loope
data16
(bad)
cmp
jmp
int3
add
xor
mov
mov
dec
sub
shr
(bad)
xor
in
sbb
aas
pop
jle
(bad)
xchg
push
xor
lea
add
push
ins
mov
nop
jo
(bad)
cmc
push
lea
hlt
cmps
dec
(bad)
lahf
jecxz
rol
sti
xchg
ja
ins
sub
mov
xchg
xor
push
sti
mov
mov
das
cli
push
dec
bound
sbb
fs
sub
repnz
xchg
out
movs
pop
rcl
xchg
sub
dec
enter
in
mov
mov
mov
jbe
and
loopne
sbb
nop
mov
ret
dec
retf
jae
pushf
std
lahf
rcl
mov
dec
out
cli
repnz
xor
repnz
inc
mov
sar
adc
push
retf
sub
repnz
push
dec
cmp
pushf
aad
jmp
test
push
sub
imul
ds
mov
ins
shl
pop
(bad)
cmp
push
sti
sbb
ret
es
push
enter
call
dec
inc
jmp
mov
sub
sbb
cdq
(bad)
jne
mov
add
shr
mov
(bad)
pop
int3
jle
cmp
or
addr16
add
sub
sbb
clc
aad
cmp
pushf
jne
and
ins
loopne
(bad)
sub
jl
wbinvd
cmp
shl
adc
adc
mov
adc
gs
cli
fisub
xor
xchg
movs
call
adc
js
mov
push
inc
xchg
imul
add
dec
sub
push
push
dec
add
sbb
mov
mov
sub
pop
(bad)
aam
lahf
mov
xchg
mov
jecxz
sub
mov
icebp
push
cmp
icebp
cmp
sub
popf
ret
mov
push
mov
(bad)
stos
ror
inc
add
and
xor
scas
dec
pop
sub
lahf
(bad)
fs
scas
ret
inc
icebp
fcom
and
add
and
ins
push
hlt
pop
sub
mov
jge
mov
cmc
sbb
cmp
adc
std
add
cmp
fiadd
nop
ja
mov
int
pushw
mov
(bad)
jno
cld
mov
jnp
jne
adc
outs
xchg
dec
mov
pop
lock
and
cmps
jmp
or
rcr
sub
aas
std
retf
hlt
adc
xchg
out
xchg
(bad)
call
and
jno
xchg
mov
adc
call
scas
bt
pop
add
cmp
inc
add
fucom
dec
sub
lea
sti
jns
push
xchg
dec
jge
inc
leave
daa
jmp
mov
enter
push
lahf
inc
jmp
into
scas
add
jmp
and
sbb
arpl
pop
xchg
shl
ds
or
enter
cmp
sbb
popa
pop
xor
arpl
shr
sub
mov
mov
lock
call
bound
pushf
aad
xchg
xchg
jne
lahf
cld
push
loope
or
in
xchg
es
jmp
ss
xchg
ss
mov
mov
addr16
sbb
jbe
pop
out
loopne
jecxz
or
popa
mov
call
mov
sar
rcl
repz
call
cmps
in
fsubr
or
gs
push
push
xor
mov
or
jle
scas
xor
lds
xor
loope
stc
in
mov
loopne
sbb
cld
inc
pop
leave
fld
mov
imul
nop
adc
bound
cmp
cdq
or
ins
lahf
shl
mov
je
movs
ja
xor
mov
(bad)
push
aad
xchg
xor
pop
mov
mov
ds
ror
jmp
cli
mov
(bad)
stc
add
fdivr
arpl
mov
push
mov
test
call
and
js
dec
shl
aaa
xor
inc
mov
push
(bad)
push
or
iret
lds
or
inc
mov
mov
push
sbb
jne
hlt
cmps
mov
hlt
sub
adc
pop
pusha
out
sub
pop
xchg
jp
mov
and
xor
pop
ret
arpl
sbb
lahf
(bad)
repz
jmp
cmc
out
add
mov
sub
jno
jl
int3
dec
cmp
out
push
or
push
mov
or
js
push
mov
aam
sub
adc
mov
sbb
sahf
or
jmp
cwde
(bad)
mov
mov
cdq
sub
out
pop
popa
add
push
jo
push
fucomi
jbe
movups
fnsave
add
nop
js
repz
mov
xchg
xchg
xchg
sub
inc
inc
fldcw
leave
mov
dec
jae
in
test
shr
mov
arpl
shr
xchg
iret
ret
cmp
in
dec
das
mov
mov
adc
mov
retf
sbb
lahf
inc
es
test
pop
dec
or
mov
in
inc
mov
dec
xor
loop
jle
add
ins
xor
jecxz
and
gs
sub
and
xchg
pusha
gs
cld
pop
jmp
mov
sbb
movs
aas
add
and
mov
push
ins
arpl
fsub
cmp
rcl
pop
or
mov
push
arpl
mov
xchg
jnp
pop
sub
push
sahf
lods
div
lahf
xor
mov
mov
inc
xchg
dec
repz
in
or
mov
dec
push
mov
test
pop
adc
xchg
mov
arpl
mov
cmc
(bad)
push
inc
cwde
mov
das
stos
popf
sub
stos
xchg
hlt
rcr
push
xor
test
adc
add
cmp
push
fistp
fild
jecxz
movs
in
xchg
in
push
pop
(bad)
cmp
mov
cmps
jg
pop
pop
es
out
pusha
dec
xor
pop
xor
aam
push
rcl
add
mov
sub
xlat
push
jmp
hlt
daa
cmp
(bad)
(bad)
pop
repz
xor
fild
(bad)
xchg
adc
xor
jle
aaa
lea
push
popa
popa
xor
pop
pushf
lds
out
into
pop
add
mov
and
imul
xor
mov
scas
adc
sub
jl
out
fwait
xchg
sub
mov
test
pop
xor
sbb
push
repz
popa
sahf
pushf
pop
mov
mov
addr16
inc
and
inc
jmp
jge
inc
xchg
xchg
test
xor
in
push
repz
mov
test
fsub
daa
mov
gs
mov
shl
cli
imul
cmp
jo
sub
cli
pop
lahf
enter
clc
xlat
xchg
int
cmp
xlat
cmc
pop
mov
push
mov
xor
mov
jge
bndstx
not
pop
retf
inc
mov
dec
sahf
test
jp
mov
ss
xchg
or
mov
arpl
xchg
cld
ja
sub
nop
nop
mov
call
xchg
clc
sbb
sub
jg
push
and
mov
rcl
lahf
dec
xor
or
or
mov
scas
out
push
inc
push
int3
adc
(bad)
fstp
int3
cmova
xor
out
xchg
push
mov
cmp
popf
adc
or
(bad)
cmp
fadd
bound
daa
sbb
dec
call
add
or
test
je
ret
cmp
dec
and
push
pop
add
pop
pushf
adc
ins
and
scas
popa
lock
movs
jbe
fisttp
sbb
adc
(bad)
ja
ins
lea
sbb
mov
and
sbb
sar
push
xchg
movq
xor
xor
repnz
in
test
xor
ret
push
sub
inc
movs
push
out
adc
mov
fsubrp
mov
aaa
leave
gs
jo
xor
imul
shl
dec
mov
adc
and
pop
cs
stos
or
jbe
lock
push
aad
add
movs
popa
repnz
xchg
aaa
stos
fld
pop
nop
or
cmp
adc
(bad)
popa
das
adc
out
push
pop
aas
addr16
or
jecxz
cli
and
sub
movs
jmp
and
jl
mov
rol
ret
icebp
movs
xchg
nop
inc
sbb
pusha
fild
shl
mov
xor
xchg
xchg
rcr
or
out
xor
daa
cs
rol
inc
nop
not
popf
fs
jmp
jbe
stos
mov
cmp
add
ins
loop
outs
div
data16
into
lock
cld
enter
nop
mov
mov
pop
sbb
dec
add
ret
jne
inc
imul
cmc
xor
addr16
lock
outs
jae
xchg
fcom
ss
sub
mov
cli
lods
pusha
mov
ss
popa
xchg
cmp
or
jb
cmp
shr
jl
mov
int
and
pusha
mov
sub
xchg
cmps
fisttp
dec
jbe
dec
sbb
adc
js
ror
sbb
sub
dec
das
out
lea
(bad)
jle
adc
mov
iret
jns
pusha
(bad)
fmul
push
fmul
jmp
adc
sbb
push
jle
pop
cmp
popf
icebp
lds
cmp
or
or
mov
or
jno
jmp
sub
sub
jnp
enter
jbe
pushf
neg
out
sub
loopne
imul
inc
mov
mov
cwde
pop
ffree
push
jbe
cmps
out
mov
adc
xchg
jg
dec
ss
loope
cmp
pop
add
inc
into
sub
pop
mov
into
cmp
cmp
jmp
push
adc
out
fcomp
inc
icebp
add
cmp
stos
jg
xchg
mov
fcom
sub
iret
cmp
repz
pop
inc
adc
jge
mov
xor
pop
add
aam
out
loope
push
mov
sub
inc
xor
pand
adc
push
dec
popf
aaa
in
jge
jmp
scas
xor
pop
in
fist
bnd
cmp
and
jg
ficomp
out
xchg
ss
(bad)
jnp
jmp
adc
fs
out
xor
adc
jmp
cmp
inc
pop
cwde
scas
je
cmp
push
push
push
cdq
out
mov
xor
xchg
sahf
jb
push
mov
fwait
cdq
xchg
mov
xchg
mov
daa
pop
movs
push
pop
add
cli
ret
lock
lahf
jbe
jp
cmp
add
dec
loope
sbb
imul
xchg
push
fist
loope
xchg
stos
xchg
shr
imul
int
push
mov
mov
arpl
retf
and
dec
out
arpl
or
add
retf
or
jmp
add
inc
push
or
inc
mov
repnz
stos
mov
mov
sbb
inc
mov
push
fdivr
clc
add
lods
sub
mov
ins
adc
ss
(bad)
mov
add
call
push
sbb
mov
arpl
and
and
hlt
xchg
pusha
or
pusha
sub
dec
(bad)
add
or
pop
mov
cmp
or
sub
(bad)
pop
push
jl
or
fst
jp
test
or
push
dec
add
das
nop
jbe
inc
jae
ins
inc
hlt
mov
push
lock
jns
aaa
push
(bad)
xor
mov
mov
sub
test
inc
cmp
and
lds
jecxz
rcr
add
xor
jae
or
loop
and
ret
xchg
out
(bad)
lods
xchg
in
push
popa
jge
add
mov
or
gs
xchg
and
add
adc
ja
arpl
jge
(bad)
stc
push
cmp
data16
aad
mov
jns
movs
sub
push
movs
pop
jge
cmps
mov
popf
push
add
in
(bad)
(bad)
out
les
xlat
fisub
cli
sbb
mov
and
add
inc
std
xchg
retf
je
inc
lock
iret
xor
cmp
jge
push
pusha
xchg
mov
inc
ins
sar
xor
or
and
movs
push
sbb
(bad)
out
xor
rol
dec
repz
mov
jno
cwde
xchg
xchg
pop
mov
push
fild
popf
xor
push
jnp
add
xchg
fwait
xchg
cmp
mov
outs
push
cdq
push
test
sub
or
mov
imul
push
mov
add
fimul
call
mov
ror
mov
lea
mov
test
pop
inc
(bad)
pop
hlt
js
jo
pop
push
xchg
or
xor
jbe
sbb
xchg
scas
mov
outs
jmp
xchg
jb
jns
rol
push
push
icebp
fsub
adc
(bad)
shl
fnstsw
xchg
fdivr
leave
jg
scas
outs
mov
repz
retf
cmp
bound
xor
and
(bad)
mov
loopne
rcl
adc
jns
fdiv
test
jae
and
lods
add
push
mov
addr16
push
leave
xchg
mov
sbb
mov
(bad)
or
fmul
jmp
pop
adc
les
mov
pop
out
les
push
pop
scas
fdiv
xlat
lods
sbb
icebp
mov
es
push
xchg
adc
push
add
retf
push
mov
je
add
mov
and
sub
mov
es
arpl
pop
outs
jno
add
dec
clc
loopne
mov
pop
mov
in
mov
xchg
xchg
xchg
inc
mov
pop
mov
lahf
dec
in
mov
mov
and
sbb
sub
call
push
mov
mov
cmp
std
retf
ss
repz
daa
sub
(bad)
fisttp
(bad)
mov
(bad)
stc
arpl
or
aam
test
js
or
mov
das
push
ret
mov
in
jmp
mov
pop
add
sar
daa
mov
pop
jl
sub
jo
jae
lods
mov
inc
pop
mov
stos
mov
cmp
mov
repz
dec
adc
fbld
sub
dec
pop
inc
cmc
dec
xchg
fwait
(bad)
mov
pushw
fsubr
popa
(bad)
stos
lds
add
mov
adc
push
hlt
mov
xor
xor
out
imul
mov
shl
in
icebp
jbe
imul
enter
dec
inc
push
xchg
mov
mov
dec
jmp
in
ret
mov
xlat
add
movs
stc
scas
sbb
ins
arpl
pushf
or
lock
xor
jmp
dec
pop
ss
in
icebp
sahf
int3
dec
ret
dec
mov
pusha
xchg
fdiv
retf
psllw
or
jmp
push
in
push
int
mov
(bad)
push
push
pop
jne
cli
test
das
push
dec
lock
cmp
and
or
(bad)
in
add
test
mov
stos
pop
cmp
xchg
movs
push
mov
jl
std
outs
in
push
outs
xchg
jle
cs
les
push
mov
nop
jmp
and
sbb
and
fsub
xor
idiv
sub
lods
scas
jecxz
call
lods
pop
mov
push
xor
jmp
dec
stc
xlat
inc
ss
inc
push
outs
cmp
fadd
out
xchg
adc
push
imul
lahf
arpl
push
leave
and
pushf
das
ds
(bad)
enter
push
sar
cld
out
loop
jb
test
cmps
xchg
(bad)
loopne
cmp
sub
push
cmps
retf
call
iret
not
fwait
jno
mov
aaa
cmp
mov
mov
sahf
outs
pop
cld
cs
or
jo
and
(bad)
retf
(bad)
fldcw
push
int
xchg
ret
mov
sbb
xchg
push
xchg
bndstx
ret
ins
push
push
pop
fbld
dec
sbb
lods
cmp
mov
push
cmps
xchg
pop
addr16
fmul
xor
into
push
mov
xor
add
jns
push
push
sub
mov
xchg
sahf
mov
jge
sbb
add
(bad)
cmp
ret
jnp
mov
(bad)
mov
out
xchg
retf
rcr
hlt
push
stos
pop
rcl
fist
clc
pop
sbb
sbb
rol
and
or
movs
movs
and
mov
mov
xor
aaa
pop
jb
lods
jnp
or
outs
loopne
data16
mov
dec
les
mov
and
mov
pop
lea
out
iret
pop
or
xchg
loope
jb
add
cwde
inc
retf
ds
pop
add
fs
mov
movd
sbb
push
xor
ror
and
add
pop
add
test
test
pop
rcr
int3
inc
or
jecxz
push
cdq
aam
push
mov
mov
push
popf
cmp
(bad)
imul
popf
jge
ret
and
stos
icebp
push
jbe
fbld
stos
ficom
mov
cmpxchg
inc
sub
pushf
fnstsw
dec
pop
aaa
jl
sub
fbld
popa
clc
sbb
mov
xor
jle
pop
jb
push
data16
dec
and
dec
dec
dec
inc
into
and
mov
push
ret
leave
push
data16
lds
mov
push
popf
push
sub
push
hlt
sti
call
sub
pop
pop
inc
and
dec
clc
loop
test
bound
js
not
ins
stc
test
xlat
fdiv
xlat
pop
aaa
pop
loope
rcr
lahf
push
mov
push
cwde
jge
mov
jg
dec
mov
scas
das
jo
shr
adc
adc
adc
xchg
mov
std
push
out
int3
pop
cmp
xchg
stc
and
inc
cli
ret
xor
sbb
mov
mov
repnz
gs
repz
rcr
(bad)
xchg
lea
add
mov
scas
jmp
outs
sbb
and
cmp
and
out
push
mov
pop
pop
cmp
mov
xchg
pop
jo
inc
push
out
(bad)
jmp
mov
ss
push
icebp
sub
jmp
sub
cmc
push
dec
xchg
aaa
sbb
inc
mov
mov
retf
xchg
and
mov
dec
inc
xor
sbb
cmps
aam
push
sbb
mov
jns
jbe
xchg
popa
ror
xor
sub
out
sub
sahf
ins
inc
mov
jns
mov
ror
ret
sub
mov
push
dec
cmps
cdq
in
dec
pop
popa
push
pop
leave
out
cmp
xchg
test
jbe
imul
test
shr
xchg
mov
retf
and
jbe
pop
sar
and
(bad)
rcr
scas
xor
push
add
fcomp
push
iret
sti
push
xchg
push
fwait
xchg
call
xchg
mov
movs
push
adc
or
loope
fcomi
push
mov
in
es
sbb
xchg
in
rep
in
(bad)
loop
fild
adc
add
std
pop
dec
(bad)
and
inc
popa
jg
sub
ret
inc
int3
inc
mov
test
mov
mov
sbb
jne
sub
jge
ins
mov
and
addr16
jle
adc
div
sbb
xchg
lahf
xchg
outs
repz
push
sub
mov
dec
or
nop
push
retf
jnp
stos
bound
sub
push
jnp
jmp
rcl
mov
xor
push
dec
dec
or
repz
jns
rol
data16
xor
pop
sti
ins
xchg
ret
cld
xor
(bad)
sbb
pop
sar
test
adc
push
pop
rep
sbb
pushf
leave
mov
das
outs
pop
cmp
aaa
mov
retf
gs
inc
movs
xor
in
push
xchg
retf
fidiv
cmps
ret
mov
in
mov
adc
stc
mov
add
pop
leave
sbb
cmc
push
pop
call
mov
and
mov
mov
stc
adc
or
fwait
xchg
out
test
mov
mov
push
aam
and
jmp
rol
test
js
or
add
retf
jo
ret
test
xchg
pusha
dec
cdq
mov
xchg
mov
jmp
and
jecxz
test
fisubr
lock
lods
pop
mov
popf
je
inc
lahf
adc
xchg
mov
js
call
jbe
adc
and
imul
jecxz
icebp
and
loopne
dec
and
cs
inc
sbb
ins
and
(bad)
enter
sub
retf
hlt
addr16
pop
wrmsr
dec
in
xor
mov
icebp
mov
es
xor
push
aaa
bnd
or
push
cmp
ins
movs
push
or
mov
jmp
iret
inc
cmp
dec
or
js
lahf
xchg
sbb
das
hlt
inc
movs
mov
nop
fistp
and
les
(bad)
cld
jns
adc
lds
clc
push
push
xor
(bad)
popa
mov
push
fsub
(bad)
sub
jo
dec
inc
ins
sar
int
pop
(bad)
hlt
loopne
jb
loop
lea
push
pop
movs
pushf
cs
enter
loopne
mov
fdiv
les
mov
xor
nop
jecxz
fwait
leave
aas
push
ret
push
loopne
mov
or
pop
push
js
mov
ins
mov
and
aam
mov
pop
dec
add
mov
or
mov
xor
sbb
pop
shr
(bad)
cld
and
in
or
fsub
xchg
mov
sub
bound
mov
sbb
cwde
test
retf
jb
(bad)
mov
iret
hlt
pop
xchg
test
jb
neg
xchg
push
xchg
out
xchg
(bad)
les
sub
pop
cmp
jbe
arpl
shl
ror
push
(bad)
ss
das
cmp
mov
test
add
shl
sub
sti
in
cmp
in
jnp
loop
pop
imul
fmul
push
fsub
and
ins
xchg
jl
int
pop
pop
and
cs
stos
fldcw
fisub
sbb
sar
xchg
leave
and
sub
fdivr
sbb
cmp
ror
ja
fisttp
loopne
loop
mov
push
and
mov
fwait
jns
xchg
xor
fmul
xchg
cdq
inc
jp
addr16
aas
or
imul
pop
xor
jns
sub
jno
in
and
sub
push
(bad)
in
mov
add
xor
xor
les
cwde
push
arpl
xchg
mov
sbb
mov
mov
xchg
movs
adc
into
sbb
clc
pop
dec
mov
and
aaa
fcom
push
fs
and
jecxz
sub
mov
cmps
push
das
adc
mov
outs
pop
lea
add
cmp
fst
jecxz
push
push
fsubr
lock
lea
adc
xchg
push
neg
mov
movs
mov
idiv
(bad)
dec
movs
xor
push
imul
test
mov
cld
fnstenv
sub
imul
imul
or
popf
cwde
xchg
ret
jmp
loop
push
sbb
test
jbe
pop
add
js
adc
and
fucomi
int3
addr16
popf
dec
in
dec
jg
jb
fild
xor
mov
mov
into
loop
retf
scas
mov
add
xchg
popa
fldcw
out
cs
ins
push
popf
mov
dec
outs
rcr
les
or
ds
das
jle
fist
enter
cli
sub
js
aam
sbb
or
sub
jb
xor
jns
ins
inc
jne
dec
sub
rcl
ret
js
add
add
push
push
jns
push
push
jae
fist
jg
test
push
dec
dec
push
fdiv
inc
mov
ret
push
lds
mov
ins
xor
jmp
loope
imul
push
or
mov
aas
cdq
js
jbe
inc
aad
stc
js
inc
cli
or
(bad)
ficom
inc
scas
mov
cmp
cmp
scas
inc
mov
sbb
adc
jnp
dec
out
and
or
mov
jbe
jae
clc
cli
push
arpl
ret
aas
push
imul
out
sbb
dec
mov
push
nop
adc
(bad)
adc
sbb
mov
(bad)
ds
xchg
sahf
ret
gs
jmp
jge
enter
push
mov
cdq
arpl
leave
and
add
add
or
shl
jns
push
push
in
and
int
gs
cmc
inc
jle
xchg
pop
cli
fldcw
mov
addr16
push
stos
or
ret
aad
xor
pop
add
dec
xor
in
pusha
mov
jns
cmps
dec
xor
ds
fcom
adc
loope
mov
pop
mov
lahf
jle
sahf
mov
xlat
add
rcl
daa
out
inc
xor
mov
loop
(bad)
sub
shl
adc
enter
ret
neg
jb
rol
rep
cli
sub
(bad)
fdivr
movs
loope
bound
gs
and
imul
push
retf
fs
je
pushf
adc
sub
mov
mov
cmps
mov
mov
xchg
or
sub
adc
fwait
cli
or
add
add
lahf
div
popf
pop
push
adc
call
fwait
cmp
aaa
lods
pop
fs
sbb
xor
shr
sti
add
adc
jge
sahf
repnz
cmps
pop
mov
sbb
push
jl
push
cld
fs
xchg
fsubr
jmp
inc
daa
stc
in
stos
outs
lea
shr
clc
pop
xchg
inc
pop
sahf
mov
inc
or
xor
jle
lods
mov
jmp
dec
and
mov
fwait
fs
add
pop
sub
or
xchg
mov
adc
test
outs
add
inc
mov
inc
jns
push
fadd
rcr
pop
loop
sub
mov
or
inc
mov
mov
xor
pop
scas
push
dec
test
in
fsubr
repnz
mov
addr16
jge
rol
daa
daa
or
adc
cmc
loope
ffree
add
sub
hlt
adc
ins
loop
sti
lahf
int3
leave
push
call
sti
dec
jmp
jb
fdiv
sbb
cmp
push
fst
cmc
test
pop
test
stos
sbb
mov
push
test
adc
push
int3
int3
inc
inc
movs
pusha
aaa
or
mov
dec
stos
out
jecxz
sbb
sbb
and
jnp
scas
dec
int
(bad)
jae
dec
xchg
and
xchg
or
mov
adc
mov
xchg
mov
inc
jle
mov
and
aam
add
push
mov
mov
sahf
mov
xor
sbb
lahf
mov
push
dec
pop
hlt
push
mov
sbb
add
repz
retf
mov
adc
arpl
cmps
mov
push
outs
mov
cmp
or
ss
out
fadd
pop
xlat
xchg
dec
retf
in
xchg
inc
inc
push
popa
ins
mov
jmp
fwait
(bad)
mov
sti
scas
dec
icebp
push
mov
xchg
xchg
dec
fistp
dec
sub
jno
je
dec
loope
hlt
push
imul
into
add
inc
push
dec
inc
cmp
retf
mov
bound
fcom
mov
dec
or
cmp
sahf
mov
daa
cwde
int
ret
fwait
aas
ins
and
je
jno
sahf
jg
add
sbb
xor
mov
daa
mov
mov
xor
mov
jno
pusha
pop
cmp
or
int3
outs
ficom
retf
xchg
hlt
mov
mov
fnstenv
cmp
lods
jbe
daa
mov
mov
jle
cmp
xor
mov
out
pop
xlat
jo
lock
bound
adc
mov
push
(bad)
mov
push
scas
nop
adc
push
xchg
pop
fcom
xchg
jbe
(bad)
pop
pop
dec
pop
add
call
xchg
cmp
leave
pop
and
or
mov
(bad)
jmp
xchg
test
xlat
jg
outs
jmp
scas
mov
loopne
push
pop
gs
mov
jg
cmp
jle
and
inc
pop
ds
call
mov
or
or
daa
inc
in
aas
movups
and
jmp
leave
push
stos
inc
in
jne
retf
sbb
inc
jbe
shl
push
mov
stos
sub
leave
aad
inc
sub
popf
pusha
sbb
stos
cmps
fcmovne
lock
int
in
sub
and
mov
ss
lea
adc
repnz
jmp
lods
pop
dec
fndisi(8087
sub
in
push
push
push
mov
pop
jmp
mov
pushf
sahf
imul
and
(bad)
ins
and
iret
pop
fmul
pop
es
bound
in
jge
sub
fldcw
shl
ds
push
je
fwait
jmp
iret
mov
aad
cli
rcr
rcr
daa
aaa
in
fsub
nop
fs
add
mov
mov
xor
addr16
xchg
cmps
sub
lods
(bad)
ret
fild
cmp
add
or
dec
xor
lods
lods
jo
pop
and
enter
sbb
enter
ret
mov
xchg
lahf
xchg
pushf
mov
lods
xchg
cwde
(bad)
xchg
mov
xchg
sub
add
bound
jns
test
outs
add
out
test
xchg
and
add
add
push
lds
mov
imul
(bad)
sub
jae
and
cmp
inc
in
(bad)
jle
or
xchg
inc
fst
rcr
cmp
arpl
dec
xchg
xor
js
cmc
add
mov
add
xor
push
adc
popf
mov
dec
lods
repz
mov
push
push
pop
pop
sti
movs
pop
push
inc
add
xor
add
stos
adc
icebp
in
aaa
int3
js
add
cmp
and
push
pop
fsubr
loop
mov
jl
jle
pop
jl
into
and
lea
lar
mov
adc
sub
out
fnstenv
scas
icebp
mov
(bad)
xor
xchg
scas
push
sbb
repz
add
xor
int3
pop
int3
sbb
lds
ins
inc
das
leave
in
scas
jbe
cmps
mov
ins
fwait
pop
into
retf
test
lock
repnz
push
leave
out
shl
aas
outs
bound
adc
js
clc
gs
std
push
cmps
mov
dec
loope
add
adc
call
adc
sbb
hlt
or
je
sub
int3
mov
cdq
ins
fdiv
push
sub
push
xchg
movs
xlat
lds
int
popf
icebp
fsubr
mov
scas
aaa
jle
mov
leave
xchg
mov
inc
outs
(bad)
clc
cmp
xchg
repz
mov
mov
cwde
push
jp
or
jg
sbb
movs
and
sbb
dec
int3
(bad)
mov
mov
inc
call
je
test
in
sub
dec
mov
inc
push
je
sbb
ss
xchg
sbb
add
sbb
and
and
inc
ret
or
scas
loop
(bad)
jmp
sub
xchg
cdq
add
inc
ins
xchg
inc
inc
jbe
neg
or
sbb
fmul
add
clc
xor
rcr
push
nop
shl
xor
mov
push
lds
jns
mov
dec
jae
sub
mov
sbb
outs
imul
pop
aad
and
sub
mov
cwde
(bad)
or
cmp
leave
ins
stc
mov
and
mov
mov
sub
mov
xchg
in
and
inc
mov
aaa
lfs
int3
pop
mov
(bad)
ss
popa
xchg
xlat
adc
(bad)
les
mov
in
imul
jmp
clc
push
cwde
mov
inc
in
jns
sbb
xor
dec
fsubr
mov
add
push
xchg
adc
movs
hlt
clc
loopne
(bad)
mov
shl
jno
loop
adc
int3
cs
repz
mov
gs
mov
push
mov
lods
pop
mov
cdq
iret
mov
arpl
xor
xor
js
sahf
xchg
stos
add
sahf
xchg
xchg
pushw
add
sub
mov
aaa
cwde
add
sbb
jle
aad
(bad)
ror
pop
jno
mov
xchg
and
mov
loopne
mov
xchg
sahf
adc
shl
stos
jo
inc
or
mov
adc
adc
fs
daa
fisttp
jle
dec
sub
push
adc
(bad)
push
xlat
xor
and
inc
add
sbb
out
dec
pop
int
mov
jmp
popa
shl
jnp
sbb
xchg
jno
(bad)
jmp
retf
push
ss
xchg
and
(bad)
jecxz
aad
test
es
lea
or
xchg
retf
scas
pop
mov
and
in
rol
fidivr
mov
push
pop
xchg
inc
test
fnsave
or
and
sub
or
call
repz
js
xchg
push
out
popa
mov
ds
test
loop
scas
shl
call
cmp
fbstp
pusha
and
cmp
aas
jo
leave
lahf
and
mov
sbb
mov
sub
cli
jmp
xchg
in
jo
xor
ins
les
fs
imul
clc
xchg
add
gs
arpl
ficomp
stc
jecxz
xor
stos
pushf
stos
cdq
xchg
xor
sub
xchg
dec
mov
pusha
push
iret
add
mov
mov
inc
sar
fstp
mov
xchg
int3
popa
call
jge
not
pop
push
ja
push
mov
shl
gs
dec
sbb
shl
mov
dec
addr16
repnz
push
cmp
or
in
dec
or
loope
movs
dec
sbb
push
adc
push
out
push
xchg
inc
fnstenv
push
fnsave
daa
call
stos
mov
sbb
mov
jmp
repnz
and
adc
xchg
xor
cmc
jne
(bad)
xor
nop
mov
and
jo
pop
inc
push
inc
push
imul
xchg
pop
and
loopne
pop
inc
jecxz
sub
out
inc
movs
jmp
jb
jecxz
fs
cmp
sub
pop
xchg
jge
mov
mov
push
pusha
xlat
pop
fbld
push
cmp
add
outs
pop
loopne
dec
lock
pop
pop
repnz
inc
xchg
mov
std
jno
add
push
ins
lods
sub
adc
and
(bad)
(bad)
out
stos
xchg
int
ja
ja
aaa
mov
cli
dec
icebp
adc
adc
add
jl
jmp
ja
xchg
daa
push
punpcklwd
nop
mov
dec
out
jo
inc
test
int3
cwde
test
and
dec
sbb
mov
cmps
or
out
out
inc
ins
mov
test
jo
mov
ret
not
cmp
inc
push
test
sub
mov
adc
fcmovnbe
outs
test
retf
mov
mov
pop
jae
test
adc
test
pop
xchg
pop
mov
adc
push
or
pop
pop
mov
mov
cli
add
add
retf
loop
mov
push
sahf
fcom
sbb
mov
pop
les
jae
pop
ja
inc
xchg
leave
xchg
xchg
sbb
cmp
pusha
cmp
test
add
pop
sub
cld
xchg
and
pushf
and
je
outs
mov
ss
adc
addr16
add
jmp
fist
pop
mov
sbb
dec
cmp
jns
lds
jb
cmc
xchg
and
nop
mov
into
loope
xlat
xchg
or
fwait
or
xor
repnz
(bad)
and
sub
daa
jo
in
push
sbb
pop
or
sahf
lods
jae
loop
mov
or
(bad)
loopne
rol
fcomip
and
push
loop
mov
popa
dec
push
iret
inc
adc
shr
mov
in
jecxz
iret
ret
push
mov
sub
mov
stos
pop
stc
mov
outs
push
cs
je
push
mov
fiadd
jbe
jno
or
js
mov
fisub
push
xor
sub
mov
repz
fdiv
add
fimul
sub
pop
add
(bad)
xor
pop
ins
fdivr
clc
mov
and
sti
ret
add
call
pop
mov
sbb
jnp
xor
mov
sub
mov
dec
call
pop
push
rcr
xor
shr
push
loop
xor
cld
inc
iret
cmps
dec
and
inc
and
leave
mov
push
jmp
(bad)
dec
sub
jne
push
push
fisubr
(bad)
into
mul
jg
retf
(bad)
add
mov
mov
adc
jp
jns
and
jg
mov
in
daa
in
lock
hlt
jbe
pop
ret
inc
xchg
test
mov
sub
neg
mov
mov
sub
fst
std
cdq
(bad)
mov
mov
mov
in
enter
arpl
iret
sub
push
retf
out
retf
sub
test
imul
es
out
pusha
popf
shl
mov
xchg
or
dec
and
test
cmp
xchg
inc
(bad)
xchg
jecxz
mov
jae
push
sub
std
bound
jae
(bad)
push
shr
out
scas
loopne
pop
sub
jmp
xchg
sbb
pop
sub
pushf
add
mov
sbb
loope
dec
aaa
pushf
sub
xor
jmp
add
les
push
mov
shr
fcmovu
js
popa
je
cmp
scas
ss
test
and
cmp
jp
dec
sbb
aad
das
or
retf
cmps
nop
adc
es
ds
mov
gs
shl
enter
sahf
adc
or
lock
dec
push
mov
lods
lea
sub
lds
cmps
lahf
xchg
ds
jle
and
mov
je
jne
dec
cmps
adc
cs
leave
inc
ss
push
ins
and
(bad)
bound
xchg
int
cmp
mov
loop
mov
adc
(bad)
sbb
ja
movs
sub
repnz
dec
popa
xor
pop
add
gs
aaa
push
adc
in
mov
jl
sub
jp
jecxz
cli
(bad)
xor
push
enter
push
pushf
in
nop
lea
xchg
sub
add
in
out
mov
cbw
lahf
push
push
cmp
sbb
push
les
xchg
dec
jae
push
jmp
fsubr
dec
daa
call
add
cdq
and
fwait
mov
dec
sbb
adc
jnp
ror
inc
push
push
xchg
sub
out
jge
jmp
gs
push
or
outs
rol
cmp
in
jo
shr
sbb
stos
adc
rcr
aas
sub
in
popa
mov
dec
mov
fistp
bound
jno
out
fwait
inc
sub
jo
call
push
lock
inc
xchg
dec
(bad)
jb
or
je
push
sub
(bad)
pop
inc
cmp
in
sub
int
adc
sbb
ret
sub
and
and
dec
push
pop
xchg
inc
pop
ja
fwait
test
daa
mov
mov
ins
repz
pop
imul
dec
int
inc
ss
push
or
daa
mov
fcomp
xor
das
or
jle
and
mov
xchg
out
fidiv
add
jae
dec
inc
clc
inc
adc
jnp
iret
sub
test
pop
add
adc
sbb
jne
or
popa
iret
push
ins
mov
sbb
sti
fimul
dec
sti
(bad)
cmps
pop
mov
pop
outs
fisttp
pop
or
xchg
mov
repnz
repz
outs
bound
ror
push
inc
lods
fsub
mov
mov
aam
ja
ja
jns
test
bound
lods
es
inc
std
mov
sub
loope
cmp
or
pop
ds
jnp
adc
sbb
mov
inc
arpl
or
add
daa
add
push
mov
outs
cmp
repz
test
das
scas
mov
lahf
int3
pushf
pop
sbb
rcl
in
aad
cmc
aam
sbb
sbb
adc
iret
sub
pop
cmp
nop
jae
cmp
push
mov
adc
jmp
xchg
ja
fidiv
scas
push
fdiv
push
push
not
mov
or
adc
ror
cmps
inc
gs
sbb
pop
clc
sbb
stc
mov
pop
xchg
shl
data16
int
test
sub
cdq
pop
data16
fsub
fisub
enter
inc
call
sets
stos
stos
cmps
push
jno
sub
adc
xor
xor
sbb
pusha
fild
pop
jmp
push
cmp
call
ds
inc
xchg
lds
pop
mov
pop
push
movs
ins
bound
sub
sub
inc
loop
adc
std
sbb
push
jae
add
sub
and
xchg
aas
mov
into
mov
pop
movs
into
sbb
pop
dec
push
test
shl
lahf
and
ss
mov
(bad)
push
mov
or
call
cmc
xor
ficom
out
nop
inc
push
sub
cmps
mov
xor
loopne
sbb
or
sbb
sub
(bad)
sub
movs
cmp
test
pusha
xor
jge
mov
aas
outs
fs
cdq
dec
add
test
xor
jg
pusha
cmc
pop
outs
push
mov
cmp
add
add
push
rep
mov
sahf
sbb
xor
pop
fs
xor
dec
cmp
inc
inc
shr
bound
pop
mov
jecxz
rol
ds
ss
int3
jmp
jmp
xchg
xor
inc
sub
fwait
enter
fcomp
and
sbb
pushf
add
pop
rcr
mov
cdq
mov
jge
xchg
push
push
in
add
add
ret
in
ins
dec
retf
jmp
xchg
and
xchg
(bad)
dec
nop
fisubr
data16
ret
sub
and
std
adc
fwait
ja
sbb
inc
push
(bad)
dec
add
loopne
ret
stos
dec
jmp
sbb
in
xchg
sub
cli
push
pop
enter
mov
scas
or
sub
and
push
hlt
test
test
and
cmps
mov
ds
cmp
xor
or
ss
cmc
popf
xchg
adc
ss
outs
mov
std
mov
repz
dec
mov
dec
cmp
repz
cmp
push
xor
cld
add
clc
pop
bnd
jb
popf
lock
out
aad
and
pop
inc
mov
int3
or
addr16
int3
or
mov
sub
add
mov
mov
test
test
cmp
pop
jle
xor
pop
fwait
adc
out
mov
cld
inc
dec
mov
xor
and
sub
sub
mov
int3
data16
lahf
push
fstp
cld
jno
push
sub
cmp
push
xor
in
adc
aam
mov
push
inc
push
(bad)
les
fild
mov
lea
and
mov
hlt
xchg
and
push
mov
and
push
pop
cld
rcr
and
rol
mov
mov
imul
inc
hlt
retf
mov
mov
jno
jp
fwait
xor
ins
or
ret
in
pop
dec
sbb
xchg
aad
add
ins
mov
xor
pop
xor
addr16
or
cmps
mov
pushf
dec
push
sub
cmp
das
(bad)
mov
scas
sub
rcr
movs
(bad)
adc
std
repz
leave
xor
mov
mov
cmp
mov
mov
push
fimul
fldcw
pop
pop
pop
xor
push
pop
dec
sbb
in
xor
addr16
mov
xor
inc
outs
mov
cmps
mov
jbe
cmp
dec
out
ss
andnps
ffree
adc
loope
rcl
xor
jl
into
lds
mov
int
(bad)
out
adc
in
cdq
cmp
test
mul
push
push
dec
lods
leave
dec
int
adc
(bad)
clc
push
cwde
lods
test
leave
dec
jae
push
dec
mov
dec
mov
ins
push
inc
fs
in
stos
push
jecxz
sbb
rol
call
add
push
stc
scas
push
xchg
or
pop
add
push
and
scas
sbb
outs
in
hlt
add
mov
dec
and
push
sub
hlt
shl
sbb
movs
das
das
and
test
cmp
inc
dec
fisubr
rcr
pop
cmp
leave
ficom
and
push
mov
sar
add
xchg
xchg
ins
jb
hlt
aas
(bad)
aad
pop
icebp
mov
aad
xlat
sub
jle
mov
imul
add
cmp
(bad)
sahf
mov
data16
inc
inc
pop
fstp
mov
cmp
in
pushf
fimul
mov
inc
nop
shl
jp
hlt
fs
add
push
fstp
mov
pop
fldcw
jl
push
sub
pop
sbb
adc
movs
jle
sub
outs
add
scas
(bad)
mov
mov
addr16
cmc
nop
xchg
jmp
popf
sbb
imul
out
imul
into
jnp
dec
xbegin
dec
js
pop
xchg
cmp
xchg
jp
add
addr16
jge
mov
int
out
stos
dec
jne
lock
xor
pop
mov
loope
dec
ins
cwde
sub
pop
sub
inc
aad
pop
adc
test
enter
and
pop
jge
lods
dec
scas
lods
cmp
int3
mov
shl
xor
jns
or
cmps
and
or
jbe
sbb
addr16
pop
aad
xchg
dec
cmps
and
inc
leave
or
inc
dec
mov
mov
(bad)
(bad)
inc
adc
cdq
cmp
push
mov
(bad)
jge
mov
icebp
call
xchg
mov
jle
jns
das
(bad)
(bad)
mov
add
fucomi
cmps
in
xor
add
int3
xchg
dec
(bad)
imul
inc
xor
out
add
pop
bound
mov
cmp
pop
xchg
mov
cwde
ss
popf
leave
mov
or
(bad)
jle
sbb
int3
cli
adc
xchg
mov
sbb
cld
mov
inc
push
xchg
mov
push
cmps
cmp
dec
push
or
pop
and
popa
lds
jg
xor
imul
leave
mov
pusha
lods
jmp
inc
sbb
push
sti
jp
jecxz
daa
mov
adc
or
and
pop
pop
pop
loopne
pop
push
fwait
lahf
push
push
imul
out
cmps
push
shl
es
xchg
push
inc
adc
sbb
mov
mov
mov
mov
frstor
inc
push
leave
mov
stc
dec
das
cld
dec
or
pop
add
xchg
or
pop
lea
stos
xor
xchg
in
(bad)
xchg
push
xor
sub
test
cmp
and
sub
sub
mov
sub
inc
dec
xchg
in
hlt
mov
jae
ja
leave
adc
jmp
mov
add
repnz
jno
aaa
rcl
dec
mov
test
inc
dec
cmp
or
mov
stos
jmp
pop
les
int3
dec
cmp
push
dec
fldcw
jae
cmp
cwde
and
inc
sub
jo
dec
icebp
(bad)
mov
jno
jo
push
(bad)
ret
fidiv
and
jno
pop
xlat
mov
pusha
lods
mov
test
psubd
mov
out
mov
aas
push
add
or
jmp
and
sbb
sbb
inc
mov
fbld
xor
sub
pop
repnz
or
pop
pop
fcmovnb
pusha
sbb
popf
pop
gs
sbb
call
and
int
mov
cli
mov
addr16
(bad)
lods
xor
add
xchg
xchg
mov
iret
cdq
jo
sub
jg
pshufw
mov
ja
imul
rcr
and
sub
sbb
lods
and
mov
fidiv
dec
push
jg
and
icebp
add
pushf
out
fisubr
xchg
dec
or
fld
mov
cmc
dec
call
(bad)
xchg
fmul
or
into
adc
int3
push
cmp
cmps
jmp
stos
std
dec
fstp
retf
inc
push
ins
lahf
dec
call
imul
in
sub
mov
mov
push
dec
adc
rol
or
xchg
push
dec
xor
mov
leave
ret
jge
jae
pusha
or
loop
inc
jmp
or
scas
ret
xchg
aam
mov
jnp
cmp
and
mov
fadd
popf
fcomip
cmp
push
adc
push
aad
push
mov
sbb
mov
outs
lods
(bad)
lods
loopne
xchg
xchg
and
sbb
push
cmp
js
popa
mov
movd
repz
lock
mov
push
nop
mov
retf
stc
mov
and
(bad)
or
imul
test
push
out
mov
push
or
ja
or
inc
pusha
pop
xchg
fadd
sub
aam
fist
cmps
dec
lods
(bad)
retf
nop
cmp
mov
mov
dec
loopne
std
jecxz
push
ret
out
jae
and
sbb
dec
(bad)
sub
iret
sub
nop
loopne
dec
(bad)
mov
push
jmp
mov
sub
scas
aad
pop
mov
mov
or
(bad)
aad
cmc
fadd
shr
or
jle
lods
push
cmc
push
xchg
fst
inc
lds
es
pop
mov
stos
lods
mov
sub
inc
xor
je
jbe
lea
add
enter
xchg
push
ss
mov
aad
sbb
aaa
cdq
repnz
in
fist
daa
dec
push
daa
sbb
xor
xor
cmp
cld
add
ror
movs
ror
enter
cmps
rol
jge
mov
loop
fadd
ja
jb
imul
arpl
push
aad
add
aas
sub
shl
rcl
bound
jg
mov
mov
mov
or
cmc
lock
jmp
mov
mov
fcom
mov
adc
inc
sbb
aaa
dec
lea
nop
jge
imul
jbe
cli
cs
in
das
jge
test
xchg
and
fadd
push
pop
test
mov
fsubr
js
push
lods
sar
mov
popa
repnz
call
jno
fld
mov
(bad)
push
and
(bad)
in
mov
pop
aaa
icebp
rol
inc
ja
hlt
lods
es
stos
push
and
sbb
not
out
cdq
adc
gs
inc
sub
pop
ins
push
rcl
stos
adc
cmp
stos
dec
ret
mov
inc
sti
inc
push
pop
or
and
pushf
repz
(bad)
adc
daa
pop
lahf
jns
shr
ja
mov
fwait
jmp
lods
inc
in
shl
lds
jle
fistp
shr
sahf
xor
shr
mov
ret
clc
inc
push
scas
nop
jl
ss
fwait
and
rol
cmps
ins
adc
ins
retf
push
into
cmp
repnz
mov
dec
mov
stos
cli
or
mov
fwait
das
mov
cmp
fs
and
frstor
pop
rcl
xlat
push
movs
jle
push
enter
jp
xchg
jp
mov
jmp
dec
push
movs
(bad)
test
or
(bad)
out
call
mov
cmc
cmp
mov
dec
retf
outs
test
pop
add
js
xchg
jmp
add
cld
mov
xchg
(bad)
je
pushf
dec
loop
ja
add
add
or
pop
push
or
adc
fsub
fsub
fadd
and
jnp
mov
std
bound
adc
lahf
mov
or
push
and
int3
jle
pop
out
xchg
xchg
push
sub
in
stc
test
std
pop
xchg
shl
or
add
faddp
or
sbb
js
call
ret
sub
mov
xchg
imul
xchg
out
test
fisttp
inc
ins
cli
shr
lods
and
adc
mov
lock
pop
mov
sub
add
cdq
mov
aam
mov
mov
lea
dec
jne
sub
dec
inc
outs
cmp
test
push
mov
sahf
neg
data16
les
test
push
lods
fistp
and
pop
jns
lea
jg
sub
bound
fild
fldenv
stos
push
jmp
mov
pop
cmp
bound
or
add
cmps
fwait
add
jmp
inc
mov
rcl
retf
test
jnp
push
hlt
popf
pop
in
inc
push
cmp
inc
xor
xchg
loopne
mov
dec
inc
push
or
xor
call
cmp
cli
add
ss
sbb
scas
xchg
mov
loop
stos
adc
pop
xchg
xchg
frstor
sar
dec
pop
adc
sbb
in
lea
xchg
pop
mov
mov
lds
mov
mov
mov
or
sti
neg
rol
sbb
or
repz
inc
int
cld
nop
repz
mov
out
mov
pop
xor
outs
sar
mov
jmp
out
std
mov
out
imul
into
adc
fwait
outs
mov
jmp
cdq
hlt
cmc
fst
int3
out
rcl
push
addr16
xlat
add
xor
cmps
imul
and
adc
adc
lock
pop
xchg
inc
in
arpl
push
xor
int3
sbb
movs
push
fisub
and
cld
jmp
push
mov
out
or
dec
cmp
enter
push
icebp
das
cld
inc
xlat
lea
add
or
jo
pop
xor
test
cmp
xor
sbb
out
push
cmp
pusha
aaa
mov
pop
leave
sub
xor
(bad)
jns
into
dec
int
int
xchg
xchg
daa
into
lods
inc
jp
cld
icebp
icebp
aaa
fwait
movs
lahf
push
mov
mov
add
dec
sti
xchg
jae
jno
pusha
mov
mov
sub
xor
push
fimul
and
sub
je
sub
jbe
pusha
inc
xor
inc
inc
pop
call
adc
cmps
test
jne
mov
cld
push
dec
test
dec
(bad)
enter
mov
mov
gs
inc
outs
dec
popf
adc
mov
cmp
adc
shl
jg
movs
or
addr16
inc
push
in
mov
xor
mov
sub
xor
push
sub
je
pop
adc
out
push
cld
ins
dec
xchg
add
and
push
xlat
loop
imul
in
bound
xchg
adc
mov
mov
loopne
mov
aas
pop
pop
addr16
fnstsw
pop
and
cmps
xchg
mov
mov
jle
mov
je
inc
xor
sbb
push
dec
or
sub
cmp
daa
(bad)
jg
movs
(bad)
cmc
pop
(bad)
fld
call
stos
mov
ss
pop
int
repz
mov
push
repz
lea
popa
repz
es
jecxz
in
inc
adc
cwde
ins
cmp
nop
imul
scas
xlat
add
pop
mov
daa
data16
enter
mov
sub
outs
xchg
mov
jae
xor
and
push
xor
inc
push
retf
mov
ja
pop
push
pushf
aas
fldenv
xor
inc
add
popf
in
js
mov
arpl
dec
bound
add
cld
inc
sbb
mov
cs
mov
das
pop
jmp
add
shl
sub
pop
inc
push
pop
loope
inc
ror
add
push
sti
xchg
jne
arpl
sbb
inc
or
shr
in
mov
jnp
mov
mov
xchg
sti
push
jp
xchg
xchg
ret
xor
add
dec
neg
aad
or
mov
retf
cmc
shl
nop
sbb
add
loope
repnz
xor
fimul
int3
adc
xchg
pop
push
jno
rcl
mov
add
xchg
mov
sbb
mov
dec
ds
cld
cmps
out
xchg
lods
(bad)
std
arpl
not
rcr
sbb
mov
and
outs
or
dec
xchg
mov
cmps
sti
pop
jmp
repz
push
lods
xlat
sahf
push
cmp
cmp
jmp
adc
loopne
inc
push
and
push
jle
lods
fst
mov
xor
xor
fs
(bad)
and
cwde
mov
nop
retf
(bad)
sbb
mov
or
mov
dec
jb
cmc
(bad)
mov
dec
sbb
cmp
out
repz
test
std
adc
and
rcl
repz
ds
sbb
adc
loop
cs
fsubr
jg
mov
fmul
inc
push
push
daa
ret
adc
mov
pop
sbb
mov
stc
in
(bad)
aam
mov
mov
and
loop
pop
mov
push
pushf
xor
pcmpgtb
icebp
aas
mov
xor
inc
inc
ret
out
adc
cmps
xor
inc
adc
dec
ins
mov
inc
xor
enter
mov
shl
adc
pop
(bad)
in
adc
push
and
test
ins
in
push
loope
mov
test
push
mov
push
js
push
ror
mov
mov
pusha
mov
bound
xor
xor
xchg
push
(bad)
bts
cmp
add
sub
jno
mov
xchg
add
(bad)
(bad)
cwde
ins
in
loop
ds
mov
sbb
in
mov
js
scas
test
pop
jnp
mov
adc
jne
into
dec
inc
fld
repnz
int
ins
jb
push
aas
test
jmp
ror
sub
movs
mov
fwait
cwde
cmp
ss
inc
jns
fs
xor
and
aam
or
dec
ret
loopne
lods
xor
sar
sub
cdq
lea
mov
ins
jle
mov
retf
in
cmp
cdq
bound
and
movs
inc
mov
ins
ja
stos
retf
cmp
shl
in
jb
fistp
retf
add
push
sub
cmp
xchg
test
sbb
aas
adc
and
mov
setno
inc
add
cmp
jle
popf
enter
cmp
stc
fisttp
sub
in
add
sbb
xor
sub
mov
and
nop
lock
mov
rcl
fldcw
jne
dec
aam
adc
arpl
cmp
and
mov
push
jnp
out
jle
add
xor
lds
sub
jno
outs
adc
mov
aaa
mov
add
mov
dec
nop
shl
aam
(bad)
and
pusha
jae
push
retf
push
scas
mov
lods
sbb
cmp
mov
cmp
push
xchg
repnz
enter
stos
jb
and
dec
in
fsub
cli
pop
dec
(bad)
mov
iret
xor
(bad)
xor
and
fidiv
xor
div
hlt
and
dec
cmc
popa
inc
repz
mov
pop
test
inc
pop
push
inc
dec
bound
clc
pushf
mov
dec
push
and
mov
xchg
inc
std
xor
adc
sti
xor
sub
hlt
mov
xlat
pop
outs
ss
shl
in
sti
xchg
or
mov
dec
push
dec
ds
jb
mov
iret
mov
push
sbb
inc
mov
mov
outs
or
movhlps
cwde
test
(bad)
lea
sbb
fsub
adc
xor
imul
xchg
cmps
in
std
pause
test
xchg
jbe
shl
xchg
pop
mov
loope
icebp
jmp
loop
push
add
dec
mov
mov
(bad)
(bad)
sub
cs
push
pop
push
mov
xchg
cld
push
push
shl
xchg
xchg
xchg
pushf
cdq
cmp
arpl
xchg
add
mov
and
adc
jp
pop
pop
mov
call
(bad)
ins
pushf
jecxz
icebp
fdivr
test
xchg
outs
cs
mov
push
(bad)
out
push
(bad)
in
dec
bound
out
retf
dec
inc
push
popf
xchg
inc
inc
lods
adc
mov
inc
retf
jns
mov
dec
in
dec
xlat
pop
or
pusha
push
outs
sar
mov
and
int3
in
push
or
xchg
xlat
lods
out
mov
jecxz
add
pop
xchg
sahf
mov
inc
popf
xchg
lods
out
add
cld
loop
inc
mov
jne
out
pusha
jmp
iret
cmp
ja
inc
xlat
mov
daa
sbb
mov
or
call
out
and
movs
or
loop
inc
add
pop
shr
cli
retf
mov
sbb
cdq
call
jnp
sub
je
enter
mov
pop
lods
pushf
push
inc
scas
adc
fcom
les
inc
cmp
int
out
sbb
popa
add
cmps
mov
jmp
mov
call
lods
add
fdiv
inc
add
add
ja
xor
enter
xor
mov
in
ja
dec
jecxz
mov
xchg
nop
(bad)
stc
adc
jp
dec
popa
xor
sar
xor
and
fs
out
cs
push
push
sbb
cmp
stc
xchg
stos
iret
repz
inc
adc
std
je
outs
xor
popa
(bad)
call
cmp
push
ret
es
jl
(bad)
mov
mov
adc
sbb
out
stos
push
mov
lock
or
cdq
outs
xor
cmp
mov
in
daa
pop
dec
mov
mov
movs
cdq
shr
pusha
mov
bndldx
test
cmp
push
cmp
(bad)
and
mov
adc
repz
loopne
stos
sar
push
pushf
mov
xchg
push
(bad)
(bad)
fisubr
in
scas
aam
add
js
les
cmp
dec
jbe
inc
xor
mov
pop
mov
aam
sbb
loopne
(bad)
sub
sub
lahf
cdq
cwde
je
outs
mov
shl
(bad)
aam
pop
xlat
jl
pop
xchg
out
mov
jbe
daa
movs
cmp
pushf
test
sti
and
fsubr
mov
movs
pop
push
fcom
cmps
mov
adc
fwait
rcr
xor
cdq
lds
daa
retf
ins
les
push
cli
inc
or
push
dec
loopne
sbb
cmp
mov
bound
sbb
mov
bound
popf
xchg
stc
push
cmps
shl
aas
shl
sbb
test
fs
punpckhbw
cs
or
sahf
push
icebp
ret
xchg
pop
ret
call
ja
scas
retf
push
ins
loopne
dec
stos
mov
xor
inc
fistp
outs
jnp
test
xchg
inc
addr16
xchg
push
jmp
mov
fidiv
loop
mov
int
and
and
push
cmp
inc
nop
fnstcw
add
jl
(bad)
dec
das
mov
cmp
mov
mov
add
xchg
out
ds
stc
cmp
out
push
push
adc
(bad)
shl
rcl
mov
push
jnp
int3
sbb
jb
cmp
fwait
mov
push
jno
jge
into
xlat
inc
cmps
int3
dec
cld
cmp
lds
jle
std
fwait
(bad)
jecxz
and
xchg
sahf
cmp
push
mov
jle
les
push
mov
adc
call
int3
xor
jo
not
mov
out
adc
shr
jmp
pcmpeqb
inc
iret
sahf
xchg
mov
iret
call
aas
sub
sub
mov
push
bound
adc
and
inc
pusha
pop
cmp
stos
jb
mov
and
add
retf
shl
mov
inc
adc
(bad)
adc
add
fist
cwde
mov
pop
jb
aad
push
jnp
fs
int
mov
out
xchg
xor
or
dec
push
xor
inc
lea
fwait
xchg
inc
out
and
ins
and
test
outs
retf
mov
sbb
imul
popa
mov
out
in
jmp
sbb
inc
push
add
cmps
call
cmp
dec
out
mov
(bad)
lds
xor
mov
mov
adc
xchg
xor
aas
push
in
pop
cmps
cs
xchg
ins
sub
mov
add
adc
mov
inc
jne
push
retf
cmps
jbe
inc
cwde
imul
push
(bad)
ins
mov
mov
cmp
sahf
mov
rol
pop
mov
push
mov
aaa
aaa
jo
push
scas
nop
push
retf
sub
pop
ror
jecxz
adc
sahf
sub
mov
pop
lods
and
and
sub
hlt
and
leave
rol
hlt
xchg
icebp
jae
(bad)
jmp
xchg
and
das
dec
iret
push
dec
jo
xor
add
or
mov
mov
xchg
mov
push
push
push
scas
jbe
pop
pop
cmp
dec
unpckhps
or
cmp
in
pop
sub
and
cs
xchg
retf
out
cli
dec
jne
imul
ror
rol
nop
out
pop
fdivr
mov
pushf
lock
dec
(bad)
mov
mov
out
int3
mov
stos
nop
add
pop
call
push
mov
jb
jbe
and
addr16
addr16
enter
cwde
inc
shr
jmp
stc
cmp
dec
add
shr
jns
mov
aad
sbb
mov
mov
lea
xchg
sahf
sub
push
mov
repnz
imul
mov
pop
jb
js
aam
(bad)
mov
inc
loopne
mov
inc
push
push
ficomp
ret
(bad)
xchg
jmp
aam
dec
fsubrp
out
mov
mov
add
jno
and
into
div
push
std
cmp
sub
call
push
jmp
ss
movs
ja
arpl
inc
push
inc
into
cmp
scas
pop
popf
mov
std
inc
clc
mov
ror
jb
or
out
(bad)
call
fwait
cwde
fisttp
shl
push
mov
adc
mov
push
push
mov
call
mov
pop
or
data16
dec
stos
mov
mov
adc
cmps
sub
loope
loope
xor
cli
pop
aam
(bad)
and
jmp
in
sbb
jmp
lds
mov
jbe
pop
jp
pop
fldenv
dec
xchg
(bad)
fsub
outs
add
vmread
xchg
dec
les
fadd
out
je
pop
mov
inc
pop
xlat
rcr
fadd
xchg
rcr
test
add
lods
xchg
call
and
clc
cmp
sbb
inc
xchg
jne
mov
inc
xchg
adc
push
mov
mov
and
xor
movs
dec
add
sub
fcmovnb
mov
sbb
and
rcl
adc
imul
xchg
out
les
fs
sbb
jno
xlat
out
xor
or
retf
(bad)
sbb
int
jno
es
pop
adc
call
cmp
rep
lods
(bad)
and
dec
add
fsub
push
pop
out
gs
add
call
cmp
cli
out
(bad)
js
add
(bad)
mov
in
fdivr
je
add
retf
pushf
idiv
aas
hlt
scas
dec
ss
xlat
push
sahf
aad
test
jmp
push
jl
push
fidiv
push
and
pop
ret
jne
int
call
sbb
ins
lods
jns
fwait
scas
sbb
sub
test
and
loop
xchg
loope
retf
inc
in
xor
ins
(bad)
push
xor
imul
daa
mul
adc
inc
xor
in
xchg
clc
cdq
add
mov
cmp
out
sahf
sub
cmps
sahf
iret
les
popf
mov
inc
mov
pop
pop
stc
retf
test
push
in
shl
jmp
out
fisub
lea
add
cmp
ins
into
(bad)
scas
mov
rol
pop
sub
push
call
inc
add
scas
and
repnz
sub
push
int3
test
mov
dec
push
stos
jns
mov
pcmpgtw
mov
loopne
or
cmps
fnstcw
xchg
cmps
mov
cmps
inc
pop
mov
out
pop
lods
mov
lock
fiadd
push
add
test
mov
lea
push
push
out
lods
push
xor
inc
cwde
retf
shr
push
mov
sub
call
add
pushf
jge
pop
pop
jbe
pop
pop
add
int
mov
cmp
pop
xchg
pop
add
inc
jmp
ror
mov
fdivr
jge
push
cmps
push
mov
mov
out
sub
push
mov
cmc
cmps
mov
and
lahf
sbb
stos
mov
jbe
dec
mov
dec
daa
jp
ret
in
in
inc
test
inc
sub
das
jb
xchg
sub
mov
mov
aaa
jl
sti
and
neg
imul
add
daa
loope
push
movs
das
les
mov
lock
fwait
inc
inc
icebp
fs
cmps
xor
(bad)
mov
(bad)
mov
lock
jmp
push
pop
push
fdivr
mov
jae
xor
cld
xor
int
push
add
ja
or
sub
mov
xor
sbb
cmc
mov
ja
mov
rol
sbb
sbb
inc
push
out
jb
cmp
jne
xchg
shr
sbb
mov
inc
adc
fadd
pop
mov
or
mov
inc
jae
pop
jle
jne
jb
lods
jmp
shr
adc
sbb
ret
xor
aam
fstp
lea
xchg
dec
repz
imul
test
inc
mov
inc
iret
in
icebp
aad
enter
loopne
ret
xor
cli
daa
inc
popa
dec
cmp
and
mov
jo
lock
inc
or
(bad)
adc
in
mov
pop
mov
lods
pop
add
mov
aaa
pop
fcomp
jp
mov
push
xchg
ret
lock
out
cmc
out
sbb
jne
pop
imul
call
shl
fstp
mov
xor
loope
shl
ret
neg
dec
pop
xor
rcl
inc
add
loope
sbb
mov
jne
lods
test
adc
push
push
or
cmps
ret
movs
dec
js
popf
stc
mov
fld
loope
sub
ss
enter
push
pop
mov
add
in
mov
ds
mov
mov
jns
pushf
outs
shl
lods
bnd
hlt
sti
loopne
daa
in
dec
xchg
mov
lahf
in
cmp
xlat
xor
sub
ret
addr16
add
retf
retf
sbb
add
cmc
je
mov
pushf
pop
shl
repz
scas
and
inc
xor
inc
mov
rol
dec
stc
jl
push
hlt
sahf
(bad)
and
cmp
adc
jmp
ds
pop
mov
sub
xchg
(bad)
les
push
popa
rcr
not
sbb
jecxz
cmovns
addr16
add
cmp
iret
push
jg
or
cmp
ins
adc
push
sbb
popf
loope
rcr
xchg
inc
cmc
mov
xor
mov
mov
and
inc
and
push
or
pop
sub
pop
std
mov
push
dec
pop
(bad)
mov
add
cmp
mov
xlat
push
jmp
test
pop
repz
bound
neg
pop
retf
and
sar
pop
scas
sbb
cdq
repz
scas
jl
mov
jge
rol
or
push
fucomi
sbb
dec
sahf
jle
adc
stos
sub
push
jecxz
pop
adc
ss
fwait
or
sbb
jbe
add
push
cmps
js
(bad)
(bad)
pop
jbe
cmp
(bad)
mov
pop
lods
rol
inc
mov
mov
xchg
mov
cld
stc
fcom
bound
mov
gs
ror
adc
jl
dec
loope
mov
lahf
mov
imul
outs
xchg
lock
xor
and
jge
or
mov
shl
xchg
retf
int
mov
data16
push
cmps
popf
or
and
scas
push
je
push
xchg
ins
sub
pop
aas
lods
sbb
ds
and
stc
mov
lea
ss
and
pop
ds
fs
mov
cmp
adc
cld
test
int
pop
push
adc
hlt
jns
sbb
ins
dec
enter
enter
arpl
mov
or
add
sti
inc
inc
mov
mov
xchg
xchg
sub
test
sbb
icebp
cwde
push
pushf
cmc
(bad)
mov
data16
test
xor
dec
(bad)
cdq
inc
and
mov
in
jp
xchg
comiss
daa
fs
sub
ret
icebp
and
jl
inc
dec
or
and
test
xchg
adc
jp
push
popf
xchg
je
mov
jle
cmp
lods
add
mov
adc
aaa
or
mov
xchg
daa
into
xchg
outs
call
xor
mov
push
inc
add
adc
push
and
xchg
loope
out
ins
mov
int3
out
jmp
mov
cli
dec
mulps
adc
cwde
enter
hlt
xchg
cmc
arpl
iret
and
and
mov
inc
xchg
daa
add
cmp
repz
outs
sub
aam
(bad)
and
sbb
stos
call
inc
int
sbb
clc
xor
mov
cmp
ss
aam
repnz
into
ret
out
xor
push
dec
pop
in
les
stos
and
jp
xor
adc
jecxz
outs
jae
(bad)
or
xor
out
jl
mov
lds
shl
add
je
mov
mov
xchg
test
xor
gs
pop
jg
and
popf
rcr
je
and
sbb
jmp
scas
jbe
in
out
stos
pop
arpl
xchg
add
xor
dec
sub
div
dec
jecxz
jecxz
jmp
movs
inc
arpl
jmp
sub
cmp
and
in
adc
dec
mov
pop
test
movs
rol
aaa
mov
pop
mov
cmc
xchg
loopne
(bad)
hlt
int3
cmp
bound
sub
mov
mov
or
push
push
imul
pop
lea
mov
dec
xchg
or
jl
mov
pop
add
das
lds
stc
movs
sbb
clc
std
fist
ret
cmps
xchg
test
xor
xor
jmp
leave
int
idiv
push
sbb
xor
repz
ins
push
leave
mov
test
fwait
or
stos
push
jle
pop
int3
sub
pop
mov
add
jl
fwait
mov
xchg
xchg
adc
jnp
mov
lods
mov
fild
ja
mov
mov
or
mov
gs
aad
mov
xor
xchg
or
bound
mov
dec
jp
outs
cmp
mov
jmp
adc
add
fcomp
fidiv
mov
fldenv
fistp
into
inc
xor
cmp
jmp
xchg
fidivr
je
js
xchg
jmp
les
out
ja
xchg
adc
cmps
and
mov
jns
jne
or
test
sti
imul
xor
dec
ins
stc
xchg
test
mov
jl
idiv
mov
sub
adc
shl
clc
push
push
(bad)
or
mov
mov
(bad)
xchg
pop
push
jns
mov
jae
mov
loopne
or
jns
movs
mov
sar
call
shl
mov
mov
sbb
push
dec
fld
sbb
sti
pop
fwait
retf
mov
jbe
cmp
inc
ror
sub
xor
pop
(bad)
fidiv
daa
addr16
cmps
or
ror
inc
(bad)
fcomp
dec
push
mov
dec
pop
mov
mov
inc
mov
out
retf
sbb
jle
mov
xor
add
imul
cmps
cmp
dec
dec
nop
push
out
sbb
sbb
mov
pop
popa
popa
xchg
sub
dec
ss
lods
add
retf
leave
jmp
mov
or
xchg
xchg
mov
inc
mov
dec
call
mov
pushf
(bad)
lds
fcmovne
pop
in
add
pop
adc
jecxz
xchg
sahf
inc
jae
aas
mov
inc
pop
xor
add
and
call
jne
lds
mov
add
ret
jmp
fwait
mov
stc
sub
daa
xor
mov
arpl
sahf
xchg
arpl
out
push
es
add
mov
inc
xchg
pop
sti
xchg
mov
mov
cld
push
xchg
mov
cmp
add
test
mov
test
cmp
aad
rol
mov
ss
pop
lods
data16
std
in
mov
sub
or
mov
(bad)
and
mov
out
leave
in
addr16
pop
or
int3
arpl
or
(bad)
mov
cli
std
fild
mov
lock
nop
sar
imul
icebp
iret
or
adc
mov
xor
ins
jbe
stos
adc
sub
sbb
jecxz
jae
mov
out
ins
sar
push
inc
jae
or
cmp
fucomip
push
ss
je
xchg
fwait
jnp
mov
pushf
mov
ss
mov
sub
xchg
fsubr
imul
fcmovne
jae
push
mov
inc
in
dec
inc
jo
cmp
and
adc
lods
mov
shr
fcom
rcr
xor
mov
add
aas
jge
xor
jle
retf
sbb
cli
(bad)
in
ret
sub
dec
stos
add
mov
and
jecxz
ret
mov
xor
push
enter
jg
and
push
stc
shl
jl
jecxz
dec
mov
adc
mov
xor
mov
mov
mov
lods
shl
lock
push
mov
xor
fnstcw
dec
dec
rcl
or
and
(bad)
xor
loop
fidivr
mul
(bad)
sysexit
and
jmp
int
jae
sbb
mov
(bad)
mov
xor
or
add
fild
adc
pusha
std
mov
hlt
cdq
mov
push
ja
adc
sti
cmp
adc
xor
inc
(bad)
mov
into
push
pop
jb
mov
inc
adc
(bad)
push
jb
mov
push
xchg
test
arpl
imul
outs
mov
test
push
imul
push
leave
add
pop
ror
jbe
int3
fmul
test
push
out
sub
push
movs
mov
sub
mov
xor
add
aas
add
and
(bad)
xchg
mov
retf
jg
fcom
cmps
jo
fst
fldenv
xlat
or
xchg
inc
add
push
push
popf
sub
fidivr
jge
push
cld
inc
cli
jbe
lds
fbld
jl
ins
jo
push
pushf
and
fistp
and
cmc
icebp
mov
xchg
push
loopne
bnd
gs
mul
sub
les
xchg
adc
cmp
lods
test
sub
fist
pop
int
mov
shl
int3
and
popa
jbe
jae
enter
lods
xor
scas
inc
out
inc
sub
inc
pop
push
and
data16
jne
push
lahf
ss
cmp
jmp
fdivr
iret
stos
adc
xor
mov
lods
xchg
mov
mov
sbb
test
sub
and
(bad)
xor
push
(bad)
call
ror
cmp
add
rol
inc
mov
icebp
jl
jno
sub
cmp
fwait
add
ret
dec
out
mov
les
sbb
nop
test
cli
inc
sbb
xchg
mov
mov
jae
retf
fmul
imul
xchg
inc
fs
ret
xor
mov
sbb
add
fdivr
cmp
xor
shl
push
or
mov
cdq
das
mov
mov
fstp
cmps
xlat
int3
xor
clc
hlt
cwde
push
mov
pop
and
mov
outs
aad
inc
shl
xor
push
mov
push
dec
push
stos
xor
bound
xor
test
lds
jmp
cdq
mov
daa
imul
jbe
in
lock
ins
pop
ins
cld
and
inc
fsubr
jbe
fwait
imul
outs
fiadd
and
cmps
push
jmp
jae
mov
mul
cmps
dec
mov
push
hlt
dec
jg
pop
dec
sbb
push
and
ins
mov
or
dec
int
xchg
pusha
jecxz
in
push
jp
loop
ror
push
cmp
fs
cld
fdivr
and
test
shr
call
stos
adc
call
(bad)
xchg
inc
mov
and
dec
inc
shr
fcmove
xor
(bad)
lods
int3
stmxcsr
int
pop
sbb
(bad)
fistp
sqrtps
hlt
mov
mov
add
add
test
jg
cmovns
lahf
rcr
loopne
cmps
lock
pop
ds
lods
sbb
inc
movs
icebp
push
shl
hlt
jnp
nop
scas
enter
jno
dec
(bad)
and
fld
sbb
adc
je
add
(bad)
std
test
inc
pop
idiv
jecxz
cmc
and
xchg
nop
push
outs
mov
jo
cdq
xchg
jle
jo
and
mov
xchg
fcom
mov
sbb
repnz
pop
fld
add
sub
pop
ins
or
pop
mov
pop
aad
test
imul
inc
(bad)
adc
stos
dec
ret
push
shr
test
xor
and
and
rcl
sar
scas
mov
mov
retf
fbld
imul
call
(bad)
fcom
mov
or
push
push
fs
(bad)
ficomp
mov
dec
sbb
test
mov
or
jnp
sub
mov
xor
inc
jae
cdq
adc
jg
xor
dec
mov
lods
adc
jns
retf
cmp
mov
adc
loop
mov
lock
repnz
out
mov
ja
lods
xchg
mov
aad
lds
(bad)
imul
fist
sub
dec
out
inc
(bad)
in
push
js
mov
in
sbb
cli
inc
loop
sahf
push
in
pop
sbb
cli
pop
popf
out
inc
fwait
mov
lds
call
shr
jmp
xchg
sub
je
xchg
push
add
mov
int3
test
lahf
mov
mov
jnp
leave
add
sbb
cmp
jecxz
fs
sahf
push
and
leave
js
loope
xor
ret
fimul
fdiv
fdiv
adc
jmp
clc
retf
ret
cmp
or
mov
jae
in
out
shl
sti
lods
and
xchg
in
aaa
in
mov
mov
sti
xchg
mov
xor
or
mov
lods
addr16
pop
adc
hlt
movs
cmp
dec
dec
loop
je
sbb
sbb
and
dec
jb
and
mov
data16
sti
movs
aas
(bad)
mov
cld
je
cmp
mov
or
aam
popa
mov
push
loopne
clc
neg
in
sar
into
push
cmp
mov
fist
jecxz
in
into
dec
dec
out
sahf
inc
pop
shl
out
aas
lock
(bad)
push
(bad)
dec
fcomi
push
in
dec
pop
cmps
out
gs
loop
dec
mov
dec
mov
dec
jae
or
loope
mov
cmp
rcr
or
add
sbb
jae
lock
nop
dec
(bad)
push
xor
pushf
je
add
and
mov
adc
push
xor
mov
inc
pusha
ja
div
xchg
stos
xchg
gs
shl
cli
adc
mov
xor
test
fstp
int
shl
lahf
cmp
shl
mov
cmc
push
pusha
xchg
clc
inc
add
loopne
adc
sbb
pop
xchg
retf
pusha
test
add
xchg
retf
cs
aam
imul
and
jmp
repnz
fidiv
mov
loope
push
lods
dec
and
xchg
mov
mov
test
lds
jns
mov
mov
aaa
popf
push
push
ja
pushf
sbb
jmp
mov
inc
sub
loop
lds
or
mov
(bad)
pop
mov
inc
(bad)
jmp
mov
jne
cwde
xchg
push
mov
mov
sub
pop
dec
cs
imul
add
or
inc
mov
inc
mov
daa
repnz
in
repz
pop
sbb
xchg
dec
sahf
fwait
jne
popf
sub
lahf
jne
loope
fdiv
mov
adc
xor
mov
cmps
pop
xor
ss
mov
xor
das
test
sbb
sbb
add
in
out
mov
loop
inc
mov
fwait
pop
inc
mov
les
or
int3
mov
fild
xor
rol
jmp
movs
ss
inc
sub
inc
gs
lods
test
je
loopne
or
fld
arpl
push
inc
sbb
jecxz
out
cmc
sar
(bad)
mov
mov
je
jp
or
pop
mov
add
lea
add
test
retf
sub
push
mov
ss
cmps
and
xor
loope
shl
gs
sbb
pop
aad
push
dec
mov
add
sub
aas
stos
bound
push
fld
pop
inc
add
cmc
mov
test
inc
sub
std
mov
or
cmp
mov
add
test
inc
lahf
shl
push
test
cmps
push
or
or
std
jle
(bad)
fwait
xor
pop
inc
cli
outs
(bad)
out
cmc
sti
and
rcr
push
jb
or
pop
or
fsub
out
add
adc
sahf
xchg
xchg
imul
aas
outs
mov
jb
inc
jbe
nop
and
nop
mov
add
movs
jo
pop
mov
pusha
es
sahf
xor
clc
inc
mov
out
cmp
nop
adc
push
cmp
xor
mov
popa
add
leave
sub
inc
or
(bad)
xor
mov
inc
test
xchg
(bad)
xchg
arpl
out
and
dec
(bad)
xor
aas
xchg
movs
jne
outs
(bad)
into
call
into
ret
add
mov
(bad)
and
lahf
jmp
push
jnp
ficom
mov
jbe
fisub
xchg
sub
daa
sbb
out
mov
sub
mov
and
cmps
and
push
adc
push
pop
push
hlt
rcr
movs
xchg
repz
and
outs
add
retf
mov
mov
pop
sbb
bnd
xchg
inc
jbe
repnz
pop
jae
pop
and
fdivr
call
dec
imul
jl
xchg
inc
adc
mov
pop
test
sbb
ficom
or
mov
mov
pop
push
cmps
arpl
(bad)
lahf
mov
sbb
push
mov
int
call
sub
in
fcomp
dec
mov
fdiv
inc
sbb
inc
dec
cmc
sbb
xchg
mov
cmp
mov
int3
sbb
push
lea
dec
sbb
sub
add
xor
fdiv
pop
gs
sti
leave
inc
adc
js
rcr
fisubr
(bad)
add
fdiv
pop
out
das
or
xchg
sbb
push
fdiv
mov
nop
lock
push
repnz
mov
aam
mov
lods
inc
lods
dec
test
adc
(bad)
call
cmp
(bad)
jge
inc
fidiv
es
pop
ficom
sbb
mov
lods
inc
jmp
mov
jmp
fs
xlat
sbb
stc
and
xchg
loopne
dec
call
xchg
mov
pop
test
cmp
jle
inc
hlt
mov
mov
lods
ds
test
xor
push
add
ins
and
shl
(bad)
inc
(bad)
int3
loop
popa
retf
mov
jecxz
adc
or
mov
aam
jnp
add
pop
mov
popf
in
cmc
ja
mov
sbb
pop
fcmovnbe
int
sub
dec
mov
mov
std
pop
sbb
nop
mov
inc
mov
mov
icebp
mov
or
mov
mov
dec
data16
xchg
adc
add
ffree
sbb
aas
push
ja
dec
sbb
in
stos
ficom
(bad)
aaa
mov
cwde
retf
ret
aaa
pop
sti
icebp
lods
ins
mov
adc
bound
rcr
or
add
dec
inc
lods
loopne
xchg
add
xchg
add
rcr
repz
xchg
leave
shl
dec
adc
pop
ins
mov
ds
mov
and
or
mov
lds
ins
and
dec
std
jo
xchg
pop
jnp
out
div
jne
int3
ret
ret
sub
iret
add
nop
xchg
xchg
in
dec
(bad)
cmp
dec
xlat
and
push
jecxz
pop
jmp
jge
(bad)
in
mov
repz
jp
xor
lods
add
(bad)
imul
push
es
mov
inc
test
(bad)
cmps
cdq
jmp
mov
retf
popa
arpl
adc
data16
push
(bad)
rcr
out
sbb
iret
cmps
add
test
push
push
cmp
pop
mov
pop
imul
sti
pop
sub
and
cwde
mov
xchg
pop
xor
xchg
popa
fs
mov
cli
or
and
push
pop
das
(bad)
jae
xor
add
imul
xchg
test
add
push
popa
mov
add
mov
test
pop
mov
div
ss
cmps
inc
xor
mov
push
inc
pop
retf
xchg
ins
jno
jne
sbb
fiadd
push
mov
(bad)
sub
daa
pop
adc
xchg
pop
mov
pop
das
lods
dec
or
jecxz
enter
lds
push
mov
adc
xchg
mov
xchg
mov
xchg
pop
xchg
cmp
add
xlat
sbb
or
scas
jmp
loope
fild
cmp
xchg
fs
add
shl
adc
gs
mov
mov
push
cmp
mov
das
jle
and
imul
std
push
dec
lds
xor
sbb
cwde
out
dec
stc
pop
and
ror
sub
pop
(bad)
mov
lods
pushf
scas
fdivr
movs
div
scas
or
mov
movs
cmp
lods
cdq
sbb
bound
jle
add
xchg
push
add
out
inc
imul
push
pop
mov
cmp
mov
xchg
sub
clc
inc
mov
ins
rcr
jne
push
movs
push
test
xor
xchg
loop
sbb
js
into
or
jnp
idiv
arpl
inc
movs
(bad)
push
popf
dec
and
int3
ds
sar
movs
mov
dec
push
xor
inc
test
(bad)
mov
sahf
pusha
stos
clc
sbb
call
xchg
in
add
out
inc
stos
nop
sub
inc
dec
xor
jbe
imul
mov
(bad)
std
(bad)
adc
xchg
gs
inc
xchg
retf
and
scas
and
outs
mov
xchg
inc
cmp
das
imul
test
fist
dec
test
mov
and
das
cmps
js
xchg
mov
arpl
stc
iret
test
aad
pop
loope
ja
sbb
sbb
out
movs
jmp
dec
xor
(bad)
jl
lods
loope
pop
push
mov
sub
ror
jl
sub
mov
mov
jns
jg
outs
loopne
arpl
js
mov
mov
imul
jne
or
loop
xchg
xchg
cli
or
frndint
sar
data16
and
jg
jp
bound
inc
xor
push
or
mov
jbe
or
je
jno
sbb
xchg
dec
cmp
cwde
mov
aaa
lods
sub
mov
clc
mov
sub
and
inc
xor
shl
daa
pop
xchg
dec
mov
(bad)
mov
jno
in
inc
in
push
rcl
(bad)
retf
xor
jae
cmp
push
jnp
adc
movs
dec
fdiv
int
cmp
jmp
dec
lods
xchg
js
dec
bound
shl
push
repnz
sbb
cli
pop
pop
sahf
lahf
cmps
call
jb
data16
mov
sub
cmp
inc
imul
jnp
and
xor
cli
xor
sahf
(bad)
in
mov
ins
sub
call
jo
push
das
loop
mov
addr16
cmp
and
cdq
imul
dec
sbb
xor
push
int3
fnstsw
push
jmp
mov
add
outs
dec
inc
or
std
iret
in
clc
test
stos
not
outs
fdivr
or
ret
jns
outs
and
pop
and
fld
jnp
in
xor
pushf
fild
lock
fst
inc
fcmovu
lods
ds
sub
fs
cmp
ror
movs
push
cli
movq
mov
dec
adc
shr
pop
pop
or
mov
inc
push
iret
test
neg
bound
call
lock
dec
inc
pop
or
push
xchg
call
jmp
cmps
or
imul
cmp
cmp
add
cmp
mov
mov
int
mov
ret
mov
mov
gs
jbe
xor
xchg
sbb
(bad)
dec
std
sub
sub
inc
sbb
loop
mov
jecxz
fist
call
jg
repz
leave
mov
retf
push
push
push
lock
and
cmps
and
pop
dec
xor
(bad)
mov
push
pop
iret
std
es
jae
movs
jg
js
pop
sahf
push
fdiv
jg
xor
xlat
repz
movs
or
push
cwde
jae
repz
dec
ja
inc
repz
cli
sbb
sbb
mov
or
add
mov
arpl
pop
mov
imul
or
pop
pop
(bad)
stc
pop
inc
call
imul
xchg
push
nop
outs
xor
mov
dec
pushf
into
pop
mov
sbb
ret
xlat
lahf
xor
xchg
cli
sub
adc
xchg
imul
arpl
shl
jnp
sub
sbb
sbb
test
(bad)
imul
rcl
sbb
dec
lock
xor
stos
cmp
add
mov
cmp
pop
outs
mov
cmp
push
xor
xchg
popf
test
stc
enter
aam
mov
jo
mov
inc
neg
jo
xor
cmp
sub
iret
xchg
int3
int
mov
and
inc
mov
pop
jne
push
out
cs
jbe
sbb
loop
test
sub
jmp
arpl
movs
(bad)
test
jle
dec
mov
jb
pusha
(bad)
in
ds
test
das
add
mov
stos
sbb
ret
and
enter
inc
lahf
or
cmp
fdiv
rol
jne
add
leave
rol
mov
xor
push
pop
stc
mov
mov
lock
gs
push
out
pop
pusha
dec
add
cld
xor
not
push
inc
test
push
jo
sbb
(bad)
pop
xchg
pop
mov
out
cmp
push
cmp
out
push
gs
pop
cld
retf
repnz
sbb
jmp
repz
int
cli
jne
push
daa
dec
sbb
mov
xchg
mov
cmps
mov
stos
sub
and
cmp
xor
mov
call
inc
mov
call
int
push
or
popa
lahf
sbb
xor
mov
mov
mov
test
clc
cdq
sub
push
cmp
lods
leave
stc
push
mov
fist
mov
or
mov
popf
dec
cmp
add
inc
inc
pop
js
ins
imul
push
xlat
inc
cld
adc
dec
ins
fist
mov
jb
inc
test
aad
push
cmp
jmp
data16
jns
adc
in
in
jmp
(bad)
aaa
dec
mov
(bad)
pop
xchg
mov
out
or
pop
aad
mov
rcr
xor
imul
push
das
jg
ret
popa
mov
inc
ficom
jg
aaa
test
je
fbld
jp
jmp
shr
aaa
pop
ret
dec
sbb
add
dec
repnz
dec
(bad)
in
adc
mov
out
mov
pop
into
not
push
push
nop
mov
sub
iret
sub
jle
and
or
xor
lods
push
xchg
clc
adc
in
xchg
ja
repz
mov
mov
mov
xchg
in
push
mov
xor
jo
jne
(bad)
lea
in
jmp
nop
imul
mov
sbb
and
add
add
add
and
and
call
push
dec
mov
inc
or
xchg
js
adc
push
push
arpl
push
in
repz
pop
push
dec
mov
ficom
jl
jg
jne
test
movs
das
test
ss
sub
aaa
cmp
xor
out
int
xor
in
test
shl
xor
xor
jns
mov
out
test
cmp
sbb
test
stos
push
jne
in
pop
nop
repz
or
mov
xchg
addr16
outs
rcr
push
ret
jl
push
or
jo
xor
out
dec
das
mov
icebp
test
pusha
cmp
pusha
push
fsubr
sub
clc
js
pop
pop
xlat
shl
mov
sbb
jge
push
jmp
dec
mov
test
sub
xchg
xchg
pslld
lock
shl
adc
ja
in
or
add
int3
push
xor
and
cmps
popa
movs
xchg
imul
or
sub
lds
repz
sar
pop
stos
js
iret
add
mov
xor
fstp
mov
mov
mov
cmp
and
in
retf
push
(bad)
fisub
dec
outs
imul
push
inc
retf
pop
mov
call
fs
dec
push
mov
xchg
call
cmp
std
icebp
out
push
xchg
popa
lods
retf
jbe
das
sar
and
lahf
fbld
sbb
xor
mov
adc
daa
fldl2t
push
fdivr
in
jl
ds
jo
jmp
clc
xlat
add
pop
bound
dec
sub
add
jns
mov
cmps
loop
lods
pop
dec
loopne
lds
es
mov
inc
adc
push
xchg
and
inc
and
or
std
jo
mov
dec
jmp
inc
add
fsubr
jp
fsub
xchg
push
push
inc
stc
and
mov
enter
push
js
fwait
neg
cmp
mov
push
iret
sbb
mov
mov
ror
dec
push
outs
adc
mov
lods
push
and
adc
(bad)
lahf
dec
into
inc
mov
out
fmul
xor
pop
mov
stc
pop
mov
dec
aad
cmp
xchg
icebp
fwait
and
loope
or
mov
sahf
adc
xor
cdq
aas
xor
add
popa
fimul
cmps
push
xchg
int
in
or
sub
sbb
mov
mov
mov
fnsetpm(287
lods
ficom
dec
in
(bad)
popf
inc
fwait
mov
mov
fstp
cwde
or
call
pop
shr
iret
mov
cmp
sar
rcl
pop
enter
mov
xchg
fmul
cmp
sahf
push
outs
add
scas
dec
fabs
(bad)
sub
aad
adc
ret
adc
xorps
loope
mov
sub
xor
aam
(bad)
leave
cmp
push
push
(bad)
push
pop
mov
retf
add
loop
sub
movs
mov
ja
ja
jno
adc
lds
dec
xor
sub
(bad)
and
(bad)
mov
mov
(bad)
call
loope
popa
pop
xchg
or
mov
sbb
push
icebp
sti
and
pop
pop
mov
mov
mov
inc
pop
mov
dec
jge
jl
lea
xor
dec
jl
pop
add
popa
inc
pop
inc
dec
neg
call
cld
add
sbb
hlt
or
loope
mov
imul
inc
out
cmc
xchg
rcl
or
int
or
cmp
pop
inc
leave
popf
mov
ret
int3
(bad)
jnp
into
dec
and
dec
int
inc
adc
sahf
mov
sbb
mov
cmp
in
call
add
lds
into
mov
ror
pop
lds
cld
xor
and
cmp
mov
stc
xor
pop
adc
mov
mov
int3
cmp
and
aam
lock
inc
jae
pop
scas
icebp
mov
push
xchg
retf
xchg
outs
inc
mov
mov
pop
sbb
dec
es
test
cmp
pop
cmp
cli
stos
or
cli
bswap
jb
pop
pop
pop
sahf
data16
aaa
ret
inc
or
jns
jmp
mov
xchg
add
mov
cdq
dec
imul
ror
ins
bound
cwde
jae
push
mov
(bad)
adc
cmp
xor
dec
je
dec
xor
shr
dec
lea
(bad)
jmp
sbb
cmp
mov
cmps
sbb
xor
cmp
mov
pop
leave
mov
arpl
dec
add
daa
loopne
outs
xor
pop
dec
or
stc
(bad)
repz
jmp
sbb
adc
mov
outs
dec
sub
pushf
and
test
retf
movs
jmp
sub
test
push
cmp
imul
cmp
divps
rol
in
sti
mov
(bad)
xor
test
sub
mov
adc
jle
pop
sub
sub
push
push
ret
xlat
pop
ss
je
xor
pop
cmp
push
inc
int3
jbe
stos
in
sub
hlt
pop
mov
fs
std
lock
leave
fild
xor
mov
bnd
aas
jl
adc
std
push
in
inc
xor
int3
cmp
sbb
(bad)
cmc
clc
sub
jle
pop
xor
mov
sbb
jge
shl
fiadd
lods
hlt
sar
popa
aas
mov
call
pusha
xchg
and
cmp
test
mov
icebp
ja
mov
xor
and
shl
jp
mov
mov
push
scas
inc
mov
mov
mov
cmp
das
scas
repnz
add
adc
shr
dec
imul
ror
push
retf
aad
enter
or
mov
cmp
(bad)
pop
dec
dec
das
pop
pop
std
inc
ret
push
jge
push
and
lock
(bad)
cmp
xor
or
test
and
xchg
inc
bound
je
js
adc
jl
cdq
mov
cmps
or
push
hlt
sbb
jecxz
pusha
mov
arpl
fistp
in
push
(bad)
repnz
sub
gs
dec
jo
(bad)
stc
mov
sub
pop
sti
dec
push
cmp
(bad)
sti
mov
jp
pushaw
mov
jb
sub
push
jne
cld
movs
rcr
jp
mov
int
dec
dec
sub
push
and
adc
scas
mov
xor
adc
pop
lods
cmp
lock
sub
aad
dec
inc
push
pop
push
cmp
(bad)
ds
nop
hlt
or
aaa
or
popf
fsubr
cmp
stc
push
cld
pop
xor
mov
xchg
mov
scas
stos
das
out
dec
test
pop
stos
gs
inc
adc
xchg
adc
mov
fs
push
out
retf
cmps
arpl
int3
mov
aam
in
pop
mov
test
mov
leave
test
cwde
jae
das
sub
sti
mov
cmc
rcl
and
jb
mov
jmp
pop
and
std
lds
jb
sbb
push
adc
mov
mov
and
mov
jge
mov
scas
jge
(bad)
sbb
lods
mov
fidivr
nop
mov
data16
sti
dec
mov
out
fwait
and
sti
fild
pop
js
jnp
cmc
and
shr
pop
sub
jmp
mov
leave
or
pop
adc
rol
ds
fcmovnu
pop
call
rcr
outs
mov
jle
cmp
shr
std
inc
scas
inc
in
push
pop
cli
lds
push
mov
loope
loopne
sub
pop
jns
lock
cmp
cwde
xchg
mov
pop
xor
cli
jmp
xor
push
xchg
cmp
js
loopne
ss
adc
pusha
mov
fild
test
mov
arpl
sub
scas
add
pusha
sbb
xor
dec
lods
mov
cmp
je
jbe
or
jno
jg
movs
cdq
pop
dec
daa
scas
arpl
xor
mov
stos
movs
xor
loopne
jmp
daa
xchg
xchg
in
xor
pop
jne
inc
cli
ss
sub
out
jae
ss
add
hlt
and
pop
jbe
jmp
int
in
jle
jecxz
dec
bound
add
in
mov
int
(bad)
imul
sub
mov
sar
sbb
rol
mov
and
and
mov
push
mov
rcl
jns
or
call
mov
xchg
mov
aad
stos
sub
gs
test
xor
xchg
call
mov
sub
jp
shl
cmp
sub
and
jae
les
jae
inc
into
rcl
sahf
push
and
lods
lock
pop
ficomp
sbb
inc
idiv
jmp
lahf
idiv
fld
mov
jnp
sub
adc
or
shl
or
and
test
sbb
in
(bad)
dec
mov
jmp
mov
mov
movups
pop
and
push
call
cmc
out
or
jnp
test
mov
ins
lods
cmps
pusha
out
cli
push
xchg
sahf
mov
pop
fwait
add
test
repz
ins
mov
out
scas
call
inc
data16
push
or
mov
lahf
shl
cmp
xchg
add
mov
xchg
shr
test
sar
and
(bad)
mov
in
jmp
ret
outs
sub
loop
dec
or
cmovge
(bad)
ja
mov
dec
xchg
cmp
inc
jne
add
or
lods
inc
mov
cli
std
adc
dec
out
inc
sbb
mov
(bad)
inc
adc
inc
std
mov
push
jmp
sbb
out
jmp
in
mov
es
push
mov
push
std
xchg
in
call
ins
out
inc
dec
rol
mov
int3
dec
les
jg
pushf
lods
mov
xchg
cld
xchg
out
dec
cmps
add
jb
into
repz
fnstsw
pop
add
in
aad
push
fsub
imul
jo
cmc
dec
aam
lds
adc
cs
jp
je
mov
test
adc
adc
rol
cwde
ficomp
popa
add
push
push
xor
(bad)
xor
sbb
sahf
aad
retf
cmp
jno
popa
addr16
sbb
push
std
inc
iret
pop
mov
mov
outs
dec
mov
jno
mov
movs
adc
aad
aaa
add
and
cmp
ror
sub
test
sbb
mov
pop
out
lods
inc
sub
sub
pop
add
xor
mov
push
xchg
lock
shl
cwde
lea
add
lds
mov
jnp
jns
push
adc
loop
jmp
sbb
aaa
hlt
cmp
arpl
mov
push
push
jg
adc
sbb
mov
shl
loope
cdq
and
xlat
xor
or
push
sbb
cmps
dec
call
add
jo
push
push
cmc
movs
pop
mov
aas
cmc
mov
cld
mov
sbb
adc
cld
(bad)
jbe
test
sub
test
(bad)
loop
mov
mov
fdiv
adc
pop
jns
aaa
pop
cmp
jmp
push
fidiv
clc
lods
std
stos
aas
fs
repz
xchg
xchg
sbb
sbb
fstp
(bad)
dec
and
mov
pop
mov
cli
ins
data16
out
out
push
push
cmp
xchg
sub
shr
fnstcw
jae
out
mov
aad
pop
enter
addr16
scas
fisub
pop
pusha
jo
push
movs
sbb
jae
or
lods
and
dec
adc
jmp
push
and
mov
push
call
xor
dec
mov
dec
repz
pop
loop
leave
(bad)
test
loopne
enter
dec
aam
ins
aas
and
outs
dec
jle
or
jbe
mov
fsub
repnz
sbb
das
cmp
mov
pop
mov
call
and
fmulp
repz
push
mov
push
retf
add
sbb
inc
xor
in
add
retf
iret
loope
(bad)
lock
mov
jo
bound
leave
jl
(bad)
pop
clc
gs
bound
fld
push
retf
outs
stc
mov
dec
jl
mov
mov
add
dec
int
jmp
pop
xchg
or
mov
rcl
fisttp
scas
rcl
adc
hlt
inc
(bad)
jns
or
dec
dec
dec
imul
shl
add
iret
sub
adc
pop
and
inc
sbb
daa
jns
cmps
xor
xchg
lods
(bad)
jns
xchg
addr16
dec
(bad)
cmc
or
mov
or
adc
test
dec
dec
sbb
push
cmp
mov
mov
out
fcomp
fmul
mov
loop
sbb
sub
daa
aaa
xchg
xchg
jecxz
movs
mov
pop
sub
cmp
aad
dec
cmps
loop
push
cmp
sbb
dec
mov
sub
pop
cmp
loopne
leave
(bad)
xchg
add
add
sub
jmp
clc
rol
lods
sub
mov
sbb
mov
or
xor
mov
arpl
pop
push
inc
xlat
mov
in
push
icebp
sbb
fild
xor
and
and
loopne
xor
pop
push
hlt
mov
mov
fcom
call
mov
or
aas
cmp
cmp
xchg
xlat
call
or
mov
pop
dec
fld
or
or
dec
sahf
les
rol
jbe
and
cli
jb
cdq
call
es
ds
pop
add
xchg
push
ins
xchg
or
mov
inc
push
in
cdq
xlat
ficomp
xchg
fwait
mov
pop
cmp
inc
inc
not
popa
jb
movs
cmp
(bad)
in
mov
add
pusha
push
ja
pop
ja
and
mov
xchg
je
inc
dec
popa
mov
nop
inc
outs
jae
cmps
scas
retf
inc
lea
xor
pusha
dec
jecxz
loope
cmp
into
ror
push
jle
mov
mov
cmp
add
es
jbe
sub
mov
pusha
outs
in
sbb
ds
pop
rcr
pop
out
push
je
cmp
data16
test
sub
mov
aad
repz
stos
fsub
jbe
test
hlt
mov
or
lahf
inc
daa
cmps
and
jmp
xor
push
imul
addr16
sbb
xchg
and
xchg
fwait
add
adc
dec
(bad)
xor
push
add
mov
xlat
dec
and
sbb
dec
inc
pop
addr16
sub
repnz
addr16
fwait
xor
arpl
ins
fs
jmp
dec
sub
(bad)
fild
aas
ds
push
mov
mov
cld
push
enter
mov
inc
push
jmp
lods
mov
inc
test
movs
dec
sahf
xchg
jnp
jno
jmp
pop
push
aam
adc
cld
or
loop
inc
in
cmp
ins
aam
pop
fild
(bad)
cmps
xor
sub
xchg
xor
add
cmp
inc
add
jl
mov
adc
add
imul
mov
retf
mov
xchg
popa
sbb
mov
shr
push
pushf
pusha
mov
jle
adc
add
inc
cmp
ficomp
xor
xchg
jl
fdiv
movs
imul
bnd
add
jge
adc
bound
icebp
push
jbe
cmp
lds
nop
adc
test
jp
or
sub
xor
int3
mov
or
je
fidivr
nop
pusha
pusha
arpl
stos
scas
or
ja
loop
dec
xor
call
mov
pop
add
xchg
xchg
repz
mov
jmp
lock
jecxz
loop
add
jp
mov
(bad)
sbb
jns
add
cmc
pop
cmp
outs
jmp
shl
les
inc
xor
cmp
pop
pop
in
dec
add
and
jns
repnz
out
mov
pop
inc
out
imul
mov
ins
(bad)
jbe
push
iret
or
inc
xchg
fs
dec
pop
xchg
scas
or
fild
out
dec
movs
pop
xchg
pop
or
mov
outs
stc
stc
ret
jmp
enter
sbb
pop
adc
pop
outs
lock
cmp
cli
mov
call
scas
sar
lods
int3
test
xchg
cli
push
xchg
mov
ins
loopne
push
imul
aaa
addr16
and
cmp
jno
mov
shl
aad
stc
(bad)
push
xor
sbb
js
jmp
imul
cmps
inc
sar
sbb
mov
add
fwait
iret
add
sbb
ss
bound
std
sbb
imul
cmp
fidivr
outs
loop
cli
sub
and
pop
popf
and
cmp
repz
jb
xchg
gs
iret
xchg
fimul
call
mov
sbb
cmps
in
mov
jmp
and
jb
jmp
inc
sub
outs
fld
addr16
stos
mov
dec
scas
stos
jbe
dec
xor
push
aam
jge
and
add
add
fsub
mov
leave
movs
push
ja
xchg
fisubr
xor
mov
fs
frstor
(bad)
pop
or
xchg
xchg
popf
add
iret
retf
mov
xor
mov
je
fadd
sub
mov
cmc
or
adc
or
mov
mov
and
leave
or
adc
ret
sub
cmp
and
cmp
xchg
or
and
imul
shl
out
cs
add
xor
jno
inc
test
or
cmp
adc
movs
mov
push
test
cmps
repnz
(bad)
test
aas
jmp
jmp
shl
xlat
lods
sbb
mov
das
or
mov
gs
inc
adc
ins
inc
xchg
out
xor
call
push
add
(bad)
in
cmps
sbb
ds
je
cdq
fs
cmp
jmp
push
jne
call
(bad)
js
cmp
bound
pop
mov
xor
and
push
cmp
push
data16
adc
fild
fdivr
das
enter
xchg
mov
mov
nop
nop
cmps
imul
adc
dec
dec
fcomp
aam
sbb
in
in
shr
cmp
daa
mov
push
dec
add
scas
iret
out
push
stos
mov
bound
or
mov
mov
xor
and
popf
or
es
sbb
mov
out
mov
push
sbb
std
fld
mov
lock
shr
loop
jmp
les
or
xchg
jp
adc
daa
iret
sahf
dec
xlat
push
xchg
retf
test
iret
jmp
ret
ret
dec
fstp
inc
ror
cmp
xor
add
fwait
sbb
pop
(bad)
sbb
xchg
push
sbb
mul
imul
jae
pop
call
es
(bad)
(bad)
adc
jge
cmc
cld
lods
pop
cmps
and
xor
sub
movs
std
outs
mov
icebp
leave
xchg
shl
cmp
dec
(bad)
loope
sub
mov
and
mov
sbb
fidiv
cmp
sar
pop
movs
pop
(bad)
idiv
or
cmp
sub
xchg
push
(bad)
xchg
inc
push
mov
adc
pop
frstor
fidivr
lods
add
test
xor
je
mov
pop
(bad)
xor
dec
jae
dec
or
push
aam
idiv
mov
xor
jno
enter
cdq
mov
sahf
inc
iret
jecxz
mov
retf
mov
mov
bnd
enter
sti
ds
aam
xor
dec
sub
sbb
addps
and
movs
lea
movd
test
mov
add
or
(bad)
xor
or
jecxz
inc
inc
dec
adc
or
adc
inc
push
test
fs
fdivr
mov
bound
xchg
ins
and
ins
and
es
push
ins
stos
jne
(bad)
mov
fadd
push
movs
mov
test
repz
stc
mov
mov
lock
cmp
idiv
call
(bad)
push
jl
out
fdivr
and
mov
mov
or
xchg
inc
cmp
jo
adc
mov
pop
xlat
pop
out
mov
sbb
and
jl
enter
or
js
lahf
(bad)
retf
jnp
adc
mov
fwait
adc
xlat
pop
or
add
mov
inc
and
xor
push
das
and
je
inc
pop
pop
dec
xchg
daa
andps
leave
pop
push
call
in
(bad)
mov
add
arpl
sbb
in
mov
mov
xchg
or
push
ret
dec
lock
aad
mov
push
pop
adc
hlt
inc
mov
dec
loopne
cmp
bound
mov
xchg
adc
jns
(bad)
enter
test
aas
div
ror
dec
stc
pop
loop
xchg
rol
icebp
push
fbstp
mov
mov
out
mov
cmp
fst
mov
ins
ret
jo
inc
xor
inc
mov
icebp
inc
loope
rcl
cmps
push
and
into
sbb
fnstenv
xchg
les
(bad)
adc
add
imul
(bad)
cmp
mov
adc
sub
push
(bad)
stc
in
pop
mov
fwait
cmp
mov
pop
call
jg
cmps
pusha
push
dec
imul
hlt
or
push
mov
add
in
jnp
rcl
mov
cmp
leave
mov
jo
fadd
ins
push
push
lea
ret
int
mov
fimul
repz
jge
and
mov
(bad)
mov
and
inc
xor
js
ror
mov
sbb
pop
cli
jne
add
cmps
aas
cmp
ins
mov
cmp
xchg
and
cmp
push
std
inc
pop
icebp
sub
imul
cwde
sti
mov
cwde
adc
push
mov
pushf
jle
mov
lds
mov
rcr
or
ds
daa
(bad)
adc
in
je
mov
mov
repz
pop
push
aas
cmc
sti
cmp
test
sub
jl
and
dec
out
jle
enter
xor
in
aam
mov
jmp
call
cld
stos
or
retf
push
lds
inc
int
inc
jnp
push
sbb
or
mov
fwait
add
rcl
and
dec
xor
js
mov
in
bound
sbb
mov
call
test
test
adc
in
jne
sbb
mov
mov
jle
push
pop
int3
push
xor
lock
jmp
test
push
and
cmp
cs
imul
sub
in
dec
out
ja
push
dec
mov
shl
jp
into
cmp
or
mov
inc
xlat
retf
cmps
push
cmp
xchg
in
ss
mov
or
xor
inc
daa
add
push
jb
mov
jge
ss
cmps
mov
in
mov
hlt
dec
xor
mov
jge
add
or
cmp
ffree
aad
aas
aas
out
adc
stos
out
xchg
mov
mov
sub
retf
pop
push
pop
xchg
sub
add
push
cld
mov
add
pop
fbstp
lods
mov
add
nop
add
jl
xor
mov
stc
std
xor
ins
lods
mov
std
and
mov
out
and
xlat
repnz
push
lock
jns
out
sub
fist
pushf
ins
pop
nop
lods
sub
dec
pop
inc
idiv
xchg
or
rcr
xchg
loop
mov
lds
dec
test
loopne
xor
or
sti
cmp
push
mov
hlt
nop
mov
xchg
add
dec
xchg
adc
adc
js
das
cs
push
je
mov
mov
popf
in
or
xchg
cmc
dec
hlt
retf
dec
bnd
inc
cli
sub
sbb
test
mov
cdq
jns
sub
adc
scas
sbb
out
push
sbb
dec
mov
aad
in
es
or
inc
dec
mov
repnz
push
cmp
adc
add
cwde
push
fiadd
inc
cld
add
leave
mov
addr16
out
stc
xor
jle
mov
stc
(bad)
jne
rcl
es
int3
out
gs
pop
cs
fisubr
inc
outs
cwde
sahf
pop
fucomip
jmp
jo
inc
test
xor
cwde
popf
adc
sub
or
xchg
movs
daa
out
xchg
fadd
pop
pusha
cmp
test
(bad)
les
sbb
pop
sub
adc
stos
cmp
aas
fisttp
into
dec
fmul
mov
or
jge
jbe
mov
push
or
jnp
add
inc
cli
in
sti
nop
push
jne
and
stc
mov
hlt
lods
out
and
cmp
jnp
mov
sbb
mov
(bad)
mov
mov
call
xor
xor
adc
ror
cdq
mov
mov
rol
pop
jecxz
dec
lods
pop
push
das
sub
jle
int3
mov
dec
lahf
les
mov
and
loopne
leave
mov
aad
js
arpl
popf
int
adc
sahf
jl
fidiv
push
mov
sbb
ficom
inc
in
jp
pop
nop
adc
xchg
xchg
call
stc
fld
scas
cmp
jp
push
cmps
lods
aaa
movs
(bad)
daa
xor
adc
dec
mov
adc
(bad)
xlat
and
arpl
jge
push
xchg
mov
sti
lds
push
aam
dec
pop
pop
fnstcw
mov
fs
adc
cli
sub
in
cdq
je
ja
call
fdivr
mov
pop
inc
xchg
adc
js
or
fstp
mov
into
xor
jnp
add
sbb
repz
dec
(bad)
pop
mov
rol
mov
adc
inc
push
je
cmp
out
js
enter
lea
ret
imul
cdq
inc
stos
sbb
push
rol
loopne
inc
shl
dec
mov
adc
pop
cld
cmp
pop
cmp
sbb
xchg
jmp
imul
push
mov
add
jge
mov
mov
inc
data16
mov
cs
out
pop
mov
mov
mov
mov
xor
push
shr
push
push
je
mov
add
fdivr
inc
or
fistp
enter
mov
mov
loope
add
bound
scas
push
adc
cmp
push
jp
dec
test
test
or
mov
push
xor
or
jnp
jl
fwait
cli
cmp
mov
jns
add
mov
sub
jmp
lds
(bad)
and
mov
fistp
test
rcr
pusha
dec
pop
jb
mov
xchg
sub
jp
addr16
push
jmp
in
xor
mov
loop
pop
jbe
fdiv
vfrczsd
fdiv
test
outs
ror
popf
in
or
adc
(bad)
out
mov
xchg
int
inc
(bad)
(bad)
push
mov
sub
fwait
cmp
popaw
jge
sub
(bad)
mov
or
and
scas
rcr
jo
test
test
repnz
add
fadd
pop
xor
cdq
and
loopne
xlat
sar
lea
(bad)
fidivr
pop
pop
out
mov
test
mov
jmp
inc
xor
call
into
lds
fdivr
push
outs
sub
aam
xor
out
ror
sti
mov
cmp
cmc
add
pusha
pop
jge
imul
lods
aas
ret
sub
ds
add
sbb
sbb
aam
iret
addr16
int
dec
or
mov
sub
aas
adc
cmp
mov
push
(bad)
fdivr
jp
mov
jns
jmp
inc
mov
movs
and
mov
xchg
mov
dec
mov
dec
ins
inc
mov
gs
out
dec
(bad)
adc
xor
xchg
je
jnp
ins
mov
or
mov
xchg
sub
dec
repnz
imul
inc
aad
mov
shl
xor
popf
xor
ret
data16
jp
jmp
repnz
out
xor
enter
adc
out
xchg
xchg
add
sbb
xor
jmp
sub
or
(bad)
out
inc
pop
or
pop
jae
cld
dec
test
nop
aaa
adc
sbb
fidivr
repz
xor
sbb
test
push
leave
call
cmps
es
jle
js
js
enter
test
std
enter
push
cmps
pop
mov
clc
ds
shr
dec
cmc
jge
lea
nop
icebp
inc
fcom
push
loopne
das
cld
das
icebp
mov
mov
or
inc
mov
sbb
cmp
test
push
or
mov
xchg
mov
adc
xor
sbb
mov
es
jecxz
call
out
cmp
jl
bswap
or
cmovbe
das
mov
sbb
neg
push
cld
loop
enter
or
rcr
and
mov
retf
pop
cmps
das
sbb
fidiv
retf
sbb
jecxz
out
inc
cdq
std
inc
arpl
pushf
push
push
push
mov
pop
pop
mov
scas
mov
fstp
sbb
mov
pop
adc
mov
adc
pop
ss
fs
shl
sti
clc
sub
jb
dec
(bad)
scas
inc
enter
mov
neg
cmp
push
imul
ficomp
(bad)
push
lds
adc
xchg
(bad)
cmp
shl
shr
mov
ins
adc
push
jne
add
xchg
int3
loopne
sti
stos
neg
movs
xor
bound
test
popa
sbb
push
iret
lods
push
inc
inc
and
push
mov
dec
aas
add
pop
sub
jmp
fistp
repnz
lods
cmp
add
sbb
sub
cdq
das
add
pop
xor
leave
add
sub
lea
mov
div
pop
sub
mov
shl
int
push
xchg
imul
lods
jg
or
les
movs
inc
pop
popf
(bad)
adc
(bad)
call
into
mov
mov
push
stos
jg
outs
ret
fist
sbb
xor
add
out
adc
test
imul
jnp
int
inc
aam
pop
cld
inc
cld
out
imul
cmp
pop
inc
or
or
popa
push
mov
scas
jg
jmp
ins
push
sub
and
jp
loop
inc
sub
cli
mov
repz
iret
mov
or
(bad)
pop
cwde
fldenv
fistp
fdivrp
les
pop
nop
or
ins
(bad)
dec
fnstcw
loop
daa
push
inc
stc
inc
xchg
push
inc
sar
pop
dec
ficom
sbb
sbb
fist
into
and
adc
je
mov
scas
mov
jge
pushf
sbb
xchg
ret
pop
ja
inc
mov
mov
pusha
xchg
cld
in
inc
stos
fidiv
mov
adc
pop
out
arpl
push
mov
jno
int
das
aaa
or
scas
rcl
repnz
loopne
jge
xor
push
push
scas
movs
dec
push
(bad)
in
in
add
in
dec
push
and
xor
push
dec
aaa
call
and
dec
fcom
mov
mov
(bad)
fmul
sub
fisubr
cmc
(bad)
dec
xor
push
xchg
dec
dec
clc
xchg
push
adc
mov
cmp
xchg
push
jg
fidivr
imul
and
mov
xchg
dec
sbb
ss
fsub
mov
retf
ins
pusha
cmp
pop
cs
push
jge
lds
sbb
nop
stos
jle
add
sbb
xchg
dec
pop
data16
mov
mov
ret
test
iret
movs
push
sub
sub
mov
sbb
lock
(bad)
and
fs
(bad)
pusha
cmc
into
mov
push
inc
mov
cmps
and
pop
mov
mov
xchg
jno
cmp
mov
sub
mov
dec
mov
dec
sahf
scas
and
stos
(bad)
stc
xchg
outs
aaa
aas
pop
popa
or
pop
mov
push
xor
sub
sahf
mov
or
fistp
xchg
movs
popf
mov
mov
pop
cli
mov
or
push
inc
mov
cs
dec
mov
adc
shl
and
gs
jno
cmp
pushf
cmps
push
jb
sub
mov
mov
sbb
push
jmp
cmp
or
cmp
cmp
stos
jge
cmp
data16
adc
stos
cmp
sub
(bad)
(bad)
lahf
mov
xchg
rcl
mov
iret
into
xor
push
fst
(bad)
lock
and
jo
aas
cwde
xor
int3
out
ins
jle
mov
mov
sar
mov
add
shl
popa
pop
mov
into
enter
loope
mov
je
dec
jbe
cmp
dec
sub
clc
mov
adc
stos
and
jecxz
ja
aas
pop
test
cwde
xchg
cmps
sub
in
test
sbb
aam
fiadd
jmp
pop
dec
pop
std
out
mov
adc
shl
fisttp
xchg
mov
shr
je
mov
or
jmp
lods
(bad)
scas
jne
mov
call
fwait
or
add
enter
cmp
pop
xchg
ins
test
lea
pop
mov
popa
lock
pop
in
add
sub
or
pop
and
aam
dec
les
jmp
or
in
in
sub
sub
call
fwait
shl
cmc
loope
xchg
jg
sbb
in
std
xchg
in
add
sub
jne
cmp
jle
cmp
dec
es
jno
pop
sub
mov
jo
xchg
cmps
test
push
in
push
fdiv
ins
fdiv
push
jne
mov
xchg
aam
inc
push
iret
shr
xchg
cdq
cmc
adc
or
outs
pop
jno
popf
out
push
xor
add
inc
shr
movs
fdiv
int
popa
rcl
adc
out
(bad)
or
pusha
cli
mov
jns
js
push
push
retf
stos
repz
dec
mov
sub
lds
dec
jle
push
mov
or
or
push
fistp
pop
pushf
imul
jns
stos
cmc
mov
ror
in
cmps
mov
xchg
imul
lock
pop
aam
jae
outs
movs
jp
mov
jge
out
sbb
pop
movs
push
pop
sar
mov
call
inc
retf
pop
mov
cmp
dec
inc
push
inc
push
xchg
push
in
test
call
call
out
cmp
mov
add
pop
mov
mov
ins
test
fisttp
mov
jno
mov
and
aad
or
repnz
dec
dec
fucomip
(bad)
in
jg
rol
fs
xor
push
lock
leave
enter
es
cmp
fidivr
mov
push
sub
mov
jno
ret
push
mov
ret
fisttp
popa
nop
fstp
mov
inc
sbb
es
sub
pushf
lahf
dec
das
into
mov
ret
stos
inc
popf
add
xlat
push
cmps
sub
frstor
cmc
and
ja
inc
mov
les
sub
popf
cmps
ret
pop
std
adc
cmp
mov
cmp
retf
movs
cmp
jb
push
ret
fistp
cli
mov
and
aad
mov
push
bound
call
xchg
jnp
xchg
mov
movs
xor
mov
pusha
inc
mov
mov
xchg
test
out
(bad)
jmp
mov
cwde
shl
(bad)
mov
movs
push
add
jo
mov
push
shl
ss
inc
aam
das
mov
gs
call
hlt
cmp
call
lods
xlat
adc
movs
cmp
call
mov
dec
push
call
or
inc
push
ret
shl
mov
popa
sub
mov
jp
outs
sbb
retf
loopne
mov
cdq
or
mov
jne
dec
inc
push
adc
iret
sub
push
xchg
xchg
mov
daa
dec
bound
data16
test
int3
xchg
jo
call
cs
xor
enter
adc
inc
adc
mov
mov
and
inc
pop
call
xor
je
shr
jo
push
es
xchg
mov
push
pop
repz
call
jmp
imul
adc
mov
xchg
scas
es
pop
sub
lds
nop
inc
and
lock
jmp
pop
stc
pusha
jecxz
add
mov
call
pop
pop
lock
mov
nop
call
fadd
or
ins
test
cli
shl
test
ins
dec
sub
mov
mov
push
test
aad
fcom
push
cmp
test
mov
push
or
xor
jmp
movs
fist
ins
out
xchg
fs
fisttp
mov
loope
sahf
fsub
test
cmps
cmp
loopne
cmp
lods
test
xor
jno
pop
ret
stos
fsub
enter
aad
jle
enter
mov
xchg
lds
pop
(bad)
xor
xor
bnd
push
pop
inc
add
(bad)
test
or
xor
inc
jg
mov
scas
jne
push
loope
into
std
or
cmp
mov
pop
or
clc
clc
and
mov
add
push
sbb
jp
sub
ss
mov
sbb
loopne
mov
fwait
cmp
cld
je
lock
adc
scas
retf
shl
cmp
jmp
cmc
jnp
dec
mov
xchg
pop
iret
cmc
clc
outs
fisubr
inc
sbb
sub
or
sbb
jle
fisttp
jne
pop
jnp
(bad)
outs
or
adc
pop
mov
ret
aad
mov
in
xor
les
inc
sbb
mov
dec
push
movs
hlt
in
jo
dec
pushf
dec
clc
bound
mov
mov
and
sub
adc
cdq
lahf
cwde
mov
push
push
cmps
fisttp
or
jae
xor
mov
mov
xchg
push
imul
cli
add
and
outs
scas
das
ficom
imul
mov
stos
and
jmp
std
pop
mov
ficomp
push
add
stc
adc
ins
jo
and
pop
cmp
jp
mov
mov
hlt
call
dec
jp
mov
int3
ds
pushf
das
mov
rol
pop
nop
call
mov
jmp
cmps
into
xchg
cmp
in
push
sbb
adc
dec
popf
mov
xchg
jo
scas
(bad)
ins
pop
idiv
sbb
mov
push
test
dec
fidiv
xchg
cdq
addr16
mov
test
fidiv
shr
gs
aam
rcr
dec
jg
and
sbb
jp
push
xor
xchg
sti
inc
data16
(bad)
mov
mov
jbe
test
jmp
cmp
inc
addr16
sbb
push
gs
aad
and
mov
mov
xor
jnp
dec
popf
mov
and
xlat
push
ss
mov
cmp
stos
sub
jmp
xchg
rcl
fsub
cmp
idiv
push
scas
mov
sahf
pop
gs
xchg
mov
std
js
cs
cmc
sub
adc
pop
hlt
jne
je
(bad)
push
ja
stc
test
xchg
pop
and
retf
retf
inc
mov
call
lock
not
push
outs
fdivr
xor
je
repnz
fld
aam
stos
or
pop
jmp
mov
fistp
mov
pop
test
lods
movs
ins
(bad)
cmp
push
pop
sbb
imul
xor
rol
(bad)
push
jle
(bad)
dec
les
jp
fnstcw
dec
ja
xchg
loope
cmps
jp
xor
mov
ret
scas
jne
pop
rol
(bad)
cmp
push
adc
sbb
(bad)
ret
jo
loopne
xchg
(bad)
out
cmp
dec
jns
jns
stc
loopne
or
mov
shl
push
fcomi
test
cwde
and
xchg
cmp
in
pop
push
stos
pushf
jg
rcl
pushf
pop
inc
pop
xor
mov
cmp
ins
or
push
xor
xchg
adc
or
and
inc
in
movs
mov
fstp
stos
movs
add
push
lods
fidiv
jecxz
dec
dec
pop
rcr
pop
retf
ret
push
pushf
cmp
jge
stos
sub
cli
imul
sbb
das
movs
jmp
mov
cwde
sbb
in
sub
and
mov
call
ret
xor
repz
xor
daa
sahf
and
inc
shl
adc
cli
call
and
jl
in
popa
mov
hlt
mov
dec
gs
inc
mov
pop
popf
inc
jecxz
popf
in
xor
lea
cwde
pop
xchg
xchg
pop
xchg
data16
mov
ss
ins
int
retf
mov
and
into
loope
(bad)
and
xor
hlt
ficom
cld
cmps
push
loope
and
iret
xchg
add
jbe
dec
movs
xchg
cmp
mov
cld
jmp
xor
cmp
fnsave
cmps
pop
outs
ins
jl
dec
(bad)
inc
(bad)
mov
pop
or
mov
mov
cs
dec
ret
ror
cmp
int
movs
add
js
shl
mov
cmp
aas
pop
dec
sbb
push
push
pop
shr
pop
mov
int3
cmc
dec
xor
sub
dec
ror
push
mov
and
aaa
loop
loop
pop
xchg
aaa
inc
rcl
xlat
xchg
lods
sbb
icebp
fidivr
ds
pop
sbb
scas
fnstenv
cwde
test
inc
out
add
jbe
out
xor
jmp
rcl
pop
jge
sahf
iret
clc
jbe
push
imul
lds
adc
scas
retf
adc
adc
sbb
imul
add
clc
xchg
(bad)
rol
cmp
mov
inc
out
pusha
lds
dec
mov
pop
retf
call
rcr
add
mov
js
push
inc
sar
mov
add
cld
shr
ins
mov
add
test
adc
fild
cmps
sub
or
popf
(bad)
std
and
(bad)
mov
pushf
push
dec
xchg
rol
imul
xor
mov
sbb
mov
(bad)
(bad)
cs
add
pop
adc
inc
retf
popa
in
adc
or
(bad)
lods
jb
nop
xor
cmc
add
pop
inc
hlt
(bad)
sub
xor
mov
cmp
dec
(bad)
ins
aas
dec
xor
xor
sbb
sar
repz
mov
mov
out
add
sbb
movs
retf
sbb
sbb
clc
cli
jmp
imul
scas
jl
sbb
and
jnp
dec
pop
jecxz
add
cmp
xlat
outs
sbb
xor
adc
ret
cmp
int3
mov
sbb
jno
pop
int3
cmc
or
push
sub
popf
test
sub
xlat
leave
ja
mov
das
xor
in
push
inc
aad
xchg
int
mov
push
xchg
fucomip
xor
pop
cmp
scas
xchg
hlt
inc
retf
aaa
mov
aas
fsubr
nop
ret
push
call
and
xchg
loop
xchg
rcl
popf
sahf
popa
dec
cmp
ins
in
jg
imul
inc
popf
in
push
xor
adc
adc
and
loop
cmp
sbb
cmps
cmps
icebp
mov
test
jmp
repz
adc
das
ss
adc
cmp
dec
or
xchg
in
and
push
adc
xchg
add
cli
pushf
ret
data16
push
pop
pop
js
repnz
fxch
cmp
arpl
rcr
loope
mov
mov
out
mov
adc
mov
push
xor
jl
mov
mov
(bad)
in
repnz
or
pop
sub
ror
jl
jno
sbb
call
cmp
jmp
inc
push
cmp
push
mov
add
xchg
stc
xor
jo
leave
stos
pop
xchg
and
popa
cmp
retf
mov
or
inc
jne
mov
fld
cli
mov
cmp
js
pop
sub
(bad)
lods
mov
jg
(bad)
sbb
sahf
pop
push
sbb
imul
cli
into
dec
cwde
jns
push
ds
(bad)
shl
push
cmps
jg
mov
(bad)
adc
xor
stc
xor
and
dec
and
jb
push
pop
jmp
pop
dec
retf
jp
dec
shl
adc
repnz
inc
xor
add
sbb
(bad)
bound
inc
mov
or
jb
jg
fdivr
or
push
call
jns
(bad)
enter
mov
(bad)
mov
repz
ret
lahf
in
stc
ins
mov
sub
xor
(bad)
pop
in
bound
pushf
dec
sbb
call
imul
std
lea
out
fwait
inc
leave
neg
mov
dec
mov
mov
mov
lods
xchg
push
vmwrite
adc
add
dec
shl
loop
jmp
push
lahf
dec
sub
xchg
lods
dec
nop
shl
mov
push
push
repz
ficomp
dec
hlt
in
aad
dec
adc
xchg
outs
jecxz
jg
shl
popa
pop
inc
push
xor
arpl
idiv
jecxz
icebp
inc
shl
or
and
mov
iret
movs
je
aaa
add
inc
push
cmps
test
pusha
rcl
mov
ret
scas
int
fidiv
push
fdiv
add
jb
aad
sub
dec
dec
adc
add
imul
nop
push
jp
and
or
add
adc
inc
shl
pop
aad
and
pop
call
or
mov
mov
out
in
or
nop
popa
das
scas
mov
loope
xlat
(bad)
jg
and
mov
int3
sbb
sbb
bound
xor
das
adc
loopne
and
lods
mov
push
daa
mov
dec
sbb
xchg
xchg
push
sub
shl
or
dec
add
into
sahf
scas
test
jae
std
mov
push
inc
mov
dec
popa
inc
push
mov
add
enter
pushf
out
and
loop
aad
(bad)
ficomp
fcom
fisubr
ficom
pop
lgdtd
dec
rcl
shl
xchg
add
out
mul
cmp
(bad)
mov
push
sub
aam
fsubr
js
xor
fcomp
jge
scas
mov
dec
or
lods
mov
add
fisttp
gs
pop
mov
aas
outs
mov
cmp
daa
xchg
icebp
pop
mov
lds
stc
leave
lock
mov
pop
mov
mov
sub
out
adc
retf
fcomp
sub
jg
sbb
mov
shl
adc
cli
(bad)
jecxz
sti
int3
sbb
cmps
adc
sbb
test
shl
bnd
clc
test
jbe
out
cld
arpl
ret
xchg
and
xchg
jbe
cmp
daa
cwde
iret
mov
xchg
ret
push
mov
mov
add
dec
xor
call
jg
jp
jle
push
je
push
push
mov
stc
add
xor
dec
mov
xor
pop
movs
mov
imul
jp
xchg
lock
(bad)
std
or
fsub
test
or
and
je
icebp
iret
sahf
mov
sar
push
cli
mov
fdiv
inc
mov
mov
dec
mov
int3
test
lods
std
mov
add
jnp
xor
mov
sahf
jmp
out
jl
jae
out
pop
rcr
mov
test
adc
pop
xor
add
mov
xlat
sub
lods
je
cmps
jo
adc
add
out
mov
icebp
addr16
repz
movs
mov
(bad)
mov
jb
fimul
cmp
sub
ss
xchg
(bad)
jae
pusha
push
and
mov
cmc
aas
hlt
out
fild
(bad)
mov
add
arpl
shr
dec
pop
xchg
dec
and
sbb
dec
not
xchg
pop
mov
inc
pop
(bad)
fcmovnu
mov
mov
cmps
movs
fs
dec
call
or
push
xchg
dec
sbb
(bad)
pop
(bad)
stos
or
or
cmps
es
in
add
(bad)
jp
enter
xchg
neg
out
cmps
sar
inc
test
jb
lea
outs
shr
push
sub
cmp
test
aas
inc
inc
push
dec
add
lods
leave
shl
sub
shl
into
out
daa
je
(bad)
push
cmp
movs
fbstp
xchg
push
sbb
ins
call
shl
mov
mov
fild
dec
movs
mov
inc
adc
mov
clc
mov
aam
into
xchg
sub
cmp
cmc
sbb
loop
dec
jmp
or
icebp
cmc
xchg
pop
ins
es
leave
enter
mov
loopne
xchg
loopne
in
cmp
push
adc
xchg
xchg
loopne
xchg
sub
jno
stc
out
and
mov
jo
xchg
cmps
fisubr
cmp
in
hlt
movs
push
push
repnz
fst
jecxz
pop
out
xor
mov
or
mov
dec
mov
mov
inc
cmps
scas
cld
popf
cwde
loope
mov
or
pop
push
sahf
nop
call
adc
dec
in
and
add
(bad)
aad
inc
pop
lods
and
sti
scas
cdq
pop
sub
(bad)
ja
inc
cli
pushf
stos
int3
jbe
jne
sub
mov
adc
addr16
sbb
and
ss
xchg
inc
test
xlat
dec
push
mov
push
cmps
and
inc
jb
xchg
fsubr
dec
xlat
add
push
and
enter
int
fistp
jb
aad
out
rol
sub
dec
pop
cmp
leave
mov
neg
push
dec
dec
sbb
not
adc
outs
xor
pop
inc
ins
pop
mov
popf
imul
sbb
and
sbb
jo
jle
in
jmp
cmp
ins
mov
addr16
daa
repz
(bad)
les
repz
cmp
fld
mov
xlat
imul
iret
out
dec
mov
pop
inc
pop
xchg
xchg
sti
in
scas
stos
dec
imul
sub
stos
cmp
lock
loope
sbb
sbb
into
push
dec
jmp
fadd
rcl
dec
enter
push
push
clc
lods
sub
not
or
mov
cmps
mov
mov
aam
std
sahf
cmp
pop
cwde
pushf
mov
dec
pop
mov
shl
mov
es
pop
jns
(bad)
ja
xchg
jg
cld
mov
fcom
test
jne
aam
ins
(bad)
dec
imul
popa
inc
cmp
(bad)
into
add
dec
add
popa
bound
pop
(bad)
mov
jne
fsubr
fwait
sub
popa
sbb
cmp
cmp
jg
add
sti
push
pop
in
jmp
in
arpl
nop
adc
dec
or
int3
daa
movs
sti
inc
out
fcmovb
inc
fisub
lds
and
ins
mov
cmps
ds
push
sub
adc
test
and
mov
fiadd
or
(bad)
push
push
mov
ficomp
cmp
cli
dec
shl
stos
movs
into
fisubr
inc
and
scas
mov
or
and
jge
rcl
push
jns
push
xchg
je
jge
mov
repz
loope
lahf
in
cli
movs
pop
pop
dec
sub
movs
xchg
call
push
inc
mov
scas
cwde
pop
push
mov
jb
dec
and
enter
inc
aas
pop
or
mov
arpl
dec
nop
ja
dec
push
lods
cmps
sbb
push
push
(bad)
(bad)
cdq
and
out
push
mov
cmps
push
cmp
sub
test
lea
stos
push
dec
ficomp
fsub
and
push
mul
sub
mov
arpl
in
xchg
dec
fiadd
push
cmp
mov
repnz
and
aas
lods
jns
imul
cs
test
scas
adc
cld
cmc
and
fisub
mov
or
and
shl
popa
mov
hlt
sbb
sub
mov
add
xor
jae
xchg
mov
sbb
cmp
rcr
mov
push
sub
jmp
cwde
push
or
in
pop
sub
je
jno
data16
test
inc
sub
in
push
stos
cld
pusha
js
sbb
xchg
pop
leave
inc
shr
fnstcw
aam
bound
sbb
cmp
ja
xchg
sbb
mul
inc
inc
div
dec
rcl
shl
inc
mov
arpl
mov
ror
(bad)
cmp
(bad)
ds
xchg
stos
idiv
xor
shl
retf
pop
cdq
lahf
retf
leave
bound
add
pop
into
sbb
add
jecxz
or
sub
add
jge
dec
aam
pop
popf
repz
pusha
ret
popa
jbe
or
sbb
add
enter
js
dec
dec
xchg
shl
cli
push
test
xchg
pop
mov
or
mov
push
add
inc
pop
xor
hlt
push
(bad)
jo
pop
es
xchg
stos
dec
or
movs
js
mov
jle
jle
rcl
repz
mov
jmp
add
xor
push
mov
sub
mov
inc
iret
out
jb
jmp
fst
clc
adc
and
sub
and
xchg
adc
shl
adc
loope
js
xchg
je
repnz
in
sub
mov
jo
and
push
shl
sub
mov
std
or
repz
dec
sbb
shr
fstp
mul
cmps
outs
movnti
sbb
popa
sub
push
pop
jne
push
ss
(bad)
ret
inc
jnp
inc
sti
fisttp
call
mov
sbb
xor
dec
sbb
adc
xchg
stc
xchg
movs
jmp
pusha
mov
pop
cmp
cmp
push
loop
lods
loope
(bad)
jns
out
pop
in
aam
pop
xor
mov
xchg
js
xchg
lock
cs
hlt
adc
push
mov
dec
outs
inc
adc
cmp
push
ins
sub
dec
(bad)
sahf
sbb
adc
add
pop
and
je
xchg
and
(bad)
data16
push
cmps
dec
fistp
mov
scas
imul
mov
cwde
inc
mov
adc
add
push
inc
push
jb
enter
dec
cmc
xor
mov
(bad)
mov
cli
movs
arpl
es
mov
lock
lods
xchg
les
dec
and
sti
pop
dec
xchg
add
xor
xchg
lock
mov
rol
pushf
fdiv
jmp
(bad)
add
mov
xor
dec
in
outs
out
out
push
add
xor
push
test
push
es
add
push
inc
and
das
leave
stc
clc
imul
xchg
ins
xor
int3
dec
stc
mov
mov
mov
add
or
fst
cmp
mov
dec
or
mov
out
xchg
pop
push
repnz
setbe
mov
jle
xchg
xor
sbb
iret
jp
inc
out
iret
inc
ds
jmp
(bad)
lods
les
test
je
push
jmp
scas
mov
hlt
mov
enter
cmp
add
sub
xchg
out
xchg
push
(bad)
sbb
ror
pop
cmp
aaa
js
and
icebp
outs
cwde
inc
xor
xor
and
cmp
jmp
movs
pop
(bad)
pushf
das
js
cmp
std
daa
push
popf
add
mov
shl
shr
hlt
outs
stc
retf
rcr
inc
lods
mov
in
xlat
pop
dec
cmp
sub
and
cmp
mov
fist
jnp
daa
pop
mov
test
retf
adc
test
out
imul
shr
inc
shl
fcom
mov
mov
int3
add
sbb
(bad)
rcl
ja
adc
mov
mov
adc
xchg
pop
scas
cmp
mov
or
test
adc
mov
xor
es
mov
xor
xchg
push
dec
stc
bound
test
or
sti
and
add
mov
ins
mov
stos
fcomp
jecxz
stos
mov
inc
jmp
std
jmp
neg
mov
fnstsw
outs
mov
in
loop
sbb
call
fstp
scas
repnz
add
mov
and
loope
fst
jae
pop
ret
mov
cmp
or
push
test
inc
mov
mov
cmc
sbb
adc
and
sbb
outs
stos
fcos
fbstp
pop
stc
shl
clc
mov
xchg
xchg
cmp
icebp
cs
cmp
fwait
mov
out
leave
not
push
outs
dec
jmp
daa
and
ret
mov
lahf
jmp
jns
rcl
jp
jp
test
ins
mov
inc
cmp
mov
hlt
fisubr
pop
(bad)
dec
(bad)
cs
ret
push
cs
js
inc
inc
call
aad
(bad)
mov
dec
and
scas
sbb
sub
nop
clc
sbb
mov
imul
sbb
scas
mov
inc
or
adc
rol
sbb
xor
leave
out
(bad)
in
dec
div
(bad)
std
push
stos
jecxz
and
xchg
sub
(bad)
push
icebp
pop
out
push
ja
call
pop
inc
pop
dec
inc
xchg
fmul
arpl
cmp
pop
daa
jbe
xchg
(bad)
clc
or
je
pop
int3
(bad)
loope
jle
cld
mov
test
and
mov
enter
outs
arpl
pop
cld
and
sub
xchg
mov
jle
sub
jmp
pop
jp
dec
mov
and
xchg
jg
addr16
mov
push
inc
lds
cmp
add
sbb
mul
mov
sub
call
mov
xchg
sub
imul
dec
xor
cmp
jge
sub
dec
inc
adc
cmp
mov
cmc
dec
test
stc
call
test
(bad)
das
aaa
iret
mov
loope
cld
inc
xchg
or
or
inc
mov
lock
adc
out
dec
movs
ins
scas
das
pop
adc
loop
xchg
loop
mov
xor
jp
mov
sub
pop
jmp
out
mov
jo
int
mov
dec
rcr
fst
pushf
and
lea
mov
jmp
jmp
gs
sbb
jge
sbb
frstor
repnz
call
inc
icebp
shl
fst
fmul
fstp
out
inc
xchg
scas
push
cli
jle
ds
std
mov
pusha
shl
pop
stos
cld
std
cld
and
add
rol
fcomip
sbb
cmp
rcr
push
xor
mov
lahf
xchg
adc
dec
sub
mov
xlat
jmp
mov
in
scas
xor
add
int3
dec
inc
(bad)
jmp
cli
sahf
or
mov
dec
sahf
xor
daa
add
pop
and
mov
aas
test
fcmovb
shl
mov
(bad)
mov
adc
movs
(bad)
sub
add
push
ror
pop
push
loopne
mov
sar
mov
xor
and
leave
addr16
xchg
lock
(bad)
dec
xchg
ficom
sar
loopne
shl
or
mov
xor
jp
fistp
es
test
adc
push
shl
test
inc
ror
ds
and
cmps
mov
fst
pop
push
push
cli
cmp
mov
sbb
cli
push
add
enter
adc
pop
push
push
popa
xchg
inc
mov
pop
imul
mov
test
ret
add
retf
sub
or
fcmovnbe
cmp
and
pop
inc
pop
fcmovb
pusha
fldcw
test
jl
sub
dec
sub
mov
scas
loope
(bad)
xor
sub
ror
lock
data16
mov
xchg
add
ins
popa
sbb
jne
cdq
iret
outs
mov
sbb
movs
test
pop
and
sbb
sub
fs
mov
not
xchg
push
and
adc
jmp
sahf
sbb
rcr
out
xor
aas
loop
and
int
lods
inc
inc
mov
loopne
fwait
mov
repnz
(bad)
cmp
push
iret
mov
rol
cwde
test
push
clc
loop
mov
inc
outs
js
ins
jb
clc
inc
jp
loope
sub
ss
push
sub
xor
xchg
adc
leave
mov
dec
mov
(bad)
sbb
(bad)
adc
jno
mov
cmp
inc
call
mov
or
and
jl
xchg
repz
inc
sbb
pop
xchg
or
adc
in
mov
(bad)
jmp
leave
or
xor
cmp
mov
gs
shl
xor
lock
and
pop
add
cli
call
retf
lods
arpl
push
mov
mov
add
imul
sub
xlat
sub
movs
mov
movlps
cmp
pop
lds
lock
and
jmp
mov
sub
and
out
or
call
xor
push
ja
push
mov
xor
in
mov
pusha
adc
ja
xchg
popf
repz
mov
ret
in
xor
sar
push
scas
dec
push
mov
invd
and
dec
std
imul
push
sub
dec
faddp
fadd
out
repnz
and
mov
mov
dec
in
sub
sbb
xchg
shl
sbb
xchg
push
sub
push
jbe
invd
ds
ret
mov
xlat
fidivr
icebp
fist
(bad)
fdiv
loope
mov
es
push
sbb
cmp
adc
(bad)
mov
dec
les
cdq
push
inc
arpl
loopne
in
cmc
out
mov
add
mov
in
pop
sbb
loope
lahf
xor
and
daa
bound
pop
add
in
inc
(bad)
stc
cmps
mov
mov
call
mov
push
pop
cmp
and
out
push
cmp
mov
lds
dec
jo
and
jnp
pop
pmullw
retf
or
jp
jno
dec
pop
sti
clc
dec
and
cmps
adc
dec
(bad)
adc
ja
and
mov
inc
inc
sbb
(bad)
cwde
fdivr
adc
pop
mov
jg
lods
sbb
repnz
xchg
push
push
and
mov
fmul
mov
lods
inc
inc
(bad)
das
dec
pop
mov
dec
cmp
and
ret
jb
stos
pop
(bad)
out
retf
jbe
jnp
sbb
pop
(bad)
xchg
mov
push
push
int3
es
mov
ffree
jno
push
lahf
scas
sbb
ds
mov
sbb
and
(bad)
or
inc
xor
into
and
in
or
into
jo
pop
add
shr
adc
sbb
lods
std
jle
lahf
mov
test
pop
(bad)
pop
leave
sbb
retf
test
jo
sti
mov
sbb
and
dec
jno
pop
mov
call
pop
jns
inc
leave
mov
jmp
pop
inc
inc
(bad)
in
jb
dec
not
mov
ret
inc
adc
cld
jae
add
mov
call
into
loop
mov
aad
(bad)
adc
jo
ds
or
arpl
jno
mov
repz
pop
pop
dec
xchg
(bad)
fidiv
inc
(bad)
jb
or
add
sahf
icebp
jne
push
popa
cmp
xor
xchg
mov
push
xchg
mov
mov
xchg
mov
push
ds
inc
sbb
xchg
jne
push
imul
mov
or
rcr
inc
mov
ret
and
jl
stos
dec
mov
xor
mov
cdq
loope
inc
mov
xchg
outs
push
dec
fwait
or
adc
xchg
add
xchg
mov
dec
shr
xchg
div
adc
lods
push
inc
inc
cli
dec
or
and
sar
xchg
bound
mov
cmp
out
dec
cld
ror
je
or
mov
outs
dec
shl
inc
mov
or
adc
jne
retf
popa
mov
adc
lock
pop
mov
inc
push
add
mov
mov
popa
inc
jmp
cmp
mov
inc
xor
ins
call
je
adc
xor
sub
out
movs
xchg
idiv
mov
dec
add
xor
inc
xlat
jmp
(bad)
inc
lds
push
retf
mov
pop
mov
sub
imul
shr
je
stc
cli
adc
mov
scas
mov
(bad)
enter
js
adc
repz
fcomp
and
std
jmp
mov
fsub
and
add
enter
mov
call
rol
fst
pop
pop
pop
cmp
pop
and
adc
fidiv
hlt
fidiv
push
xchg
cs
xchg
jae
sbb
xchg
sub
les
adc
movs
(bad)
std
outs
inc
out
adc
loop
rol
xor
push
mov
mov
jae
fldenv
add
sar
cwde
or
inc
push
fld
lods
leave
scas
sar
dec
ror
test
jmp
jmp
and
retf
(bad)
imul
scas
or
les
fsub
pop
jb
xlat
cmp
scas
fmul
cmp
rcr
xchg
sbb
aam
cdq
repz
jl
mov
fs
test
ja
xchg
mov
and
inc
inc
sub
pop
lea
cmp
loope
xor
push
(bad)
add
bound
xor
stos
sbb
icebp
loop
pop
fild
sbb
rol
aaa
sub
lds
test
jne
ins
jno
pop
repnz
cmp
adc
xchg
loop
popa
push
outs
dec
les
mov
imul
pop
cli
adc
scas
xchg
popa
(bad)
in
ja
sub
cli
add
or
cmp
in
push
mov
mov
pop
jmp
sub
cmp
jo
mov
lea
add
je
push
mov
hlt
ins
push
std
test
fcmovu
out
xor
mov
jl
call
jl
ss
in
cs
aas
test
mov
ror
push
sub
push
mov
mov
jo
inc
mov
sub
pop
xchg
dec
shr
dec
mov
shl
xor
mov
or
inc
mov
cwde
dec
lock
or
push
jle
mov
mov
jb
mov
into
(bad)
cmp
push
push
pop
into
push
dec
mov
dec
enter
jns
jne
nop
add
(bad)
sub
xchg
mov
jnp
icebp
cmp
test
iret
push
or
adc
dec
pop
mov
jle
xchg
mov
call
cmp
cwde
push
pop
pop
and
jmp
push
je
xlat
xchg
sbb
aas
and
sub
sbb
add
add
cmp
pushf
pop
ret
mov
mov
pop
push
pop
and
outs
stos
inc
test
mov
les
xchg
pushf
sbb
ins
into
into
bnd
and
in
dec
dec
mov
sbb
or
jg
add
or
mov
jg
hlt
adc
add
ror
ins
sub
sub
push
test
push
out
mov
mov
ret
mov
adc
mov
icebp
adc
iret
fnsave
repnz
out
ficom
rcr
push
repnz
mov
mov
(bad)
pop
sub
test
stc
outs
xor
xor
sbb
dec
inc
(bad)
(bad)
das
sub
ins
(bad)
push
add
mov
mov
fisubr
add
pop
and
mov
push
imul
push
lods
pop
jb
xor
xor
add
xchg
mov
jmp
sub
sub
push
sbb
fsubrp
aas
push
ja
retf
inc
retf
dec
jp
cmp
aas
jbe
and
int
add
ret
push
stc
xchg
push
fbld
mov
mov
lods
ret
cs
outs
lock
aam
or
pop
sti
jle
and
cdq
sbb
add
and
mov
cli
xchg
pusha
data16
mov
mov
inc
or
xor
ins
aad
outs
push
cmp
arpl
fs
cmc
ret
into
mov
stc
aam
xor
outs
adc
retf
fwait
scas
ficomp
cmp
cdq
ss
mov
push
loopne
cmp
xchg
jae
stos
lods
(bad)
shl
sar
sub
mov
aam
mov
mov
mov
sbb
adc
pop
xchg
cmc
add
aam
lahf
int
stc
mov
xor
lock
cmp
and
pushf
fild
jp
mov
fcom
outs
retf
inc
in
shl
out
ret
js
add
pop
rcl
dec
push
inc
shl
xchg
int3
dec
outs
jle
jl
push
fs
jne
repnz
test
pushf
jl
jno
sbb
fwait
pop
mov
dec
xchg
movs
sub
or
retf
mov
cs
aas
inc
mov
int
mov
sbb
in
mov
sbb
mov
das
sbb
mov
ss
addr16
push
push
adc
mov
fidiv
cmp
jle
add
(bad)
aad
(bad)
cmp
dec
arpl
xchg
test
ins
xor
ret
pop
icebp
aaa
jg
inc
mov
aaa
mov
push
push
rol
pop
sub
pop
dec
fadd
cmp
cmp
or
hlt
aas
cmp
cli
int3
pop
add
jl
rcl
or
xor
jo
or
xor
xlat
mov
scas
pop
jo
add
movs
xor
jge
enter
or
push
fist
or
into
jecxz
into
mov
aam
hlt
mov
out
jo
adc
cmp
push
dec
and
cli
lds
sub
bound
fst
out
jmp
jae
je
xchg
dec
(bad)
and
jg
retf
out
aad
popa
xchg
ins
mov
sbb
call
cmps
pushf
cmp
jno
mov
sub
adc
xor
jae
rcl
iret
jmp
lock
push
outs
fidivr
jnp
fs
sbb
jbe
sbb
sti
add
jns
or
cdq
xchg
and
idiv
repz
push
and
out
jg
pushf
mov
cmp
jnp
adc
pop
mov
shr
dec
mov
pop
and
lds
out
pop
xchg
adc
imul
add
jmp
ror
sub
ja
rol
lds
pop
xchg
fnstcw
pop
ds
scas
arpl
xchg
jp
or
dec
and
pop
sbb
jo
mov
es
mov
hlt
sub
repnz
and
xor
xor
push
pop
jbe
ror
push
mov
sub
mov
sbb
xchg
xchg
popa
hlt
pop
mov
aam
mov
sar
cmps
les
mov
or
lahf
mov
push
push
ret
loop
and
fcmovu
mov
adc
xchg
lahf
test
xlat
lock
jns
scas
mov
mov
popa
push
out
into
push
sub
cli
jae
jecxz
out
repz
mov
adc
jmp
ins
dec
test
call
dec
in
pop
mov
xor
or
and
clc
mov
fcom
xchg
push
int3
test
fcom
jae
test
jnp
xchg
pop
dec
test
add
xchg
ds
mov
xchg
in
fnclex
test
aaa
fidiv
mov
adc
mov
clc
sbb
dec
mov
mov
mov
sti
and
lock
mov
push
sbb
and
sbb
pop
fwait
and
mov
cs
mov
pop
jne
jg
mov
loopne
pushf
ja
imul
xor
in
mov
cmp
pop
and
mov
dec
inc
popa
add
xchg
and
cmp
jg
aaa
mov
or
sub
ror
adc
inc
xor
test
fistp
(bad)
cmp
sbb
js
jns
mov
pop
push
mov
push
lea
(bad)
jo
out
xchg
int3
out
mul
mov
mov
sub
hlt
mov
inc
lahf
or
in
jmp
dec
jo
int3
push
shl
mov
inc
es
mov
inc
pop
movs
and
cmp
cmp
aas
mov
ror
sbb
ret
into
push
sbb
stos
jnp
dec
push
inc
push
jge
test
cmp
pop
(bad)
xor
scas
jg
repnz
ror
lds
adc
xor
fdiv
fbld
xor
popa
imul
pop
add
cmp
jb
inc
mov
out
ins
(bad)
rcr
adc
outs
rcr
mov
mov
icebp
fisttp
jmp
add
ror
push
jmp
jge
sub
mov
push
hlt
cdq
dec
nop
xor
mov
xor
rcr
ret
pop
push
jae
push
sub
cmps
cli
fcmovnu
and
jb
jnp
jbe
test
dec
mov
scas
and
push
repnz
movs
add
call
stc
add
mov
inc
idiv
inc
push
sbb
(bad)
xchg
lods
xor
pop
jnp
(bad)
push
cmp
sbb
repnz
mov
(bad)
mov
xlat
sub
or
jl
fsubr
lods
je
mov
mov
in
ins
dec
push
inc
ins
cmp
push
and
hlt
arpl
mov
xor
inc
and
loopne
dec
test
jmp
mov
aam
(bad)
push
push
mov
inc
(bad)
je
cmps
mov
mov
lock
dec
test
sub
sar
mov
pop
push
call
out
xchg
or
mov
stos
leave
or
jp
dec
jmp
ins
push
sub
push
aaa
jno
dec
cmc
add
mov
imul
movs
cmc
shl
xchg
or
push
mov
stos
mov
sbb
inc
push
push
inc
and
push
fcom
enter
sub
out
js
test
jb
stos
dec
cdq
movs
mov
test
add
pop
cmps
mov
mov
cwde
(bad)
sub
lea
cwde
mov
jo
mov
test
cmp
adc
ins
dec
or
mov
or
mov
pop
int3
lods
sbb
test
aam
int3
pop
lea
xor
aas
pushf
les
xor
outs
(bad)
adc
sbb
test
call
inc
repz
xor
pop
add
xchg
adc
out
fidiv
push
xor
and
lahf
or
adc
fs
dec
test
jmp
leave
cs
jbe
push
mov
adc
outs
pop
push
or
xlat
cdq
cmp
jl
call
call
xchg
jmp
push
pop
mov
cmc
shl
ret
int
sbb
cs
jbe
xor
add
outs
mov
push
xchg
sub
movs
jecxz
arpl
mov
aam
mov
(bad)
ins
mov
scas
xchg
outs
jne
not
and
stos
inc
and
lock
push
push
bound
neg
ret
or
dec
mov
xchg
les
mov
bound
sbb
out
pop
popa
repnz
shr
fcmovu
inc
cdq
icebp
sub
scas
in
les
hlt
push
loopne
lahf
out
dec
xchg
mov
ins
sub
sub
or
cmps
hlt
pop
ds
mov
push
mov
sub
in
imul
das
sar
fs
je
cmps
outs
popa
sub
xchg
out
and
xor
xor
xchg
test
pop
call
cld
ret
xchg
enter
js
out
mov
cmc
xor
xchg
sub
das
rol
lds
rcr
mov
push
retf
push
in
xchg
rcl
lods
repnz
jecxz
pop
ins
cmp
sub
xchg
xchg
retf
mov
dec
mov
xchg
lea
inc
adc
adc
fidiv
int
ret
daa
test
in
push
scas
shr
(bad)
lock
dec
and
pop
pop
inc
inc
mov
icebp
jbe
pop
aas
sbb
mov
fucomi
data16
sar
pop
cmps
movs
fnstsw
and
js
arpl
pop
(bad)
pop
and
jbe
pop
cmps
ja
add
add
and
or
movs
call
or
jmp
mov
movs
je
call
inc
jne
fwait
mov
test
in
sub
call
fdiv
cs
ins
inc
es
sub
push
shl
xlat
mov
adc
mov
jp
jmp
push
or
fstp
adc
stc
xchg
repnz
mov
cwde
sbb
data16
fwait
out
dec
xor
adc
dec
sbb
xchg
retf
and
push
in
fsubrp
dec
sar
add
mov
and
outs
fwait
pop
xlat
sbb
out
or
ins
mov
xlat
or
mov
lds
jb
(bad)
call
(bad)
and
mov
mov
cmps
mov
dec
aaa
pop
aas
jb
dec
movs
es
cmp
jno
pop
lods
cmp
dec
mov
shl
mov
sbb
pushf
ss
sub
xor
pop
mov
dec
cmp
call
out
mov
mov
sahf
add
sub
lahf
cmps
imul
test
int3
push
push
sahf
mul
push
cwde
xor
out
dec
or
xor
dec
test
jmp
scas
arpl
in
retf
inc
jle
and
retf
xchg
jecxz
not
out
sub
push
loope
std
mov
mov
sti
mov
cmp
mov
cli
and
jne
ret
push
or
loopne
sub
clc
(bad)
fidiv
dec
fwait
pop
pop
int3
dec
fisttp
add
gs
or
cli
rol
out
mov
dec
xor
jp
sbb
imul
mov
retf
pop
jno
jge
jno
fiadd
addr16
sbb
mov
data16
out
lds
imul
test
pop
jae
shl
xchg
les
mov
mov
dec
and
jne
push
and
pop
sbb
cmp
outs
mov
xor
sti
cmp
mov
sbb
mov
jl
int
mov
fisttp
jp
pushf
ret
xchg
pop
jns
inc
push
push
outs
fisub
mov
(bad)
loope
frstor
in
xchg
jge
int3
stc
loope
pop
xor
out
sbb
out
mov
push
fwait
aam
mov
idiv
inc
std
int
add
mov
je
mov
pop
outs
mov
cmp
xchg
lods
cmp
cmp
jp
je
inc
es
ja
push
lds
inc
xchg
mov
add
adc
dec
call
jmp
dec
and
loope
xchg
das
fild
nop
mov
cli
push
inc
mov
pop
adc
cmp
dec
and
cmp
add
sbb
repz
jecxz
cmp
push
xor
inc
sub
aad
jo
jns
cmpxchg
cmps
push
imul
jae
sub
rcr
outs
ins
fistp
fs
jnp
iret
loope
sbb
mov
or
adc
cmp
jmp
xchg
sbb
aas
movs
sub
(bad)
test
add
mov
and
jecxz
mov
sbb
cmp
ins
pop
mov
call
js
mov
dec
out
nop
dec
iret
ja
mov
enter
fidiv
xor
mul
sbb
dec
scas
mov
push
movs
(bad)
cwde
mov
cmps
loope
test
jbe
cmp
mov
arpl
inc
xchg
leave
xor
pop
inc
call
mov
(bad)
call
mov
dec
out
ds
sbb
sbb
movs
cmps
lds
fidiv
push
add
sbb
std
mov
repz
jo
pop
inc
mov
dec
fsubr
xchg
pop
fisttp
icebp
xor
aaa
mov
inc
push
and
lds
aam
inc
pop
push
div
and
lds
repnz
cmp
inc
sub
out
mov
out
leave
movs
gs
mov
in
mov
dec
inc
aas
outs
jo
fcmovb
inc
mov
jmp
mov
lods
sbb
mov
dec
jle
inc
push
mov
cmps
jnp
push
or
xchg
arpl
ret
adc
addr16
xor
pop
jae
daa
aam
or
in
mov
(bad)
sbb
loopne
add
fild
cld
cdq
or
stc
in
adc
xchg
retf
dec
or
jge
cmp
dec
(bad)
inc
mov
ror
aas
int3
or
fcmovbe
jnp
xor
or
out
lods
in
dec
call
pushf
movs
mov
fisttp
data16
sub
jmp
aaa
out
sbb
cmp
je
or
aam
in
dec
mov
fdiv
mov
mov
adc
std
adc
mov
lock
jl
cld
loop
test
jecxz
ins
add
(bad)
fbstp
loope
cmps
mov
into
sub
mov
cmc
pop
outs
movs
jecxz
xor
enter
in
out
stos
lds
scas
cmps
cmp
popf
or
mov
sub
pusha
popf
data16
(bad)
retf
sbb
fist
hlt
push
mov
push
inc
and
movs
xor
xchg
inc
adc
add
in
stos
jne
cwde
sub
in
cmp
xor
xchg
inc
inc
arpl
sbb
xor
(bad)
cwde
and
cmc
mov
pop
cld
imul
je
pop
dec
inc
les
lock
sbb
fimul
popf
push
(bad)
jg
nop
sbb
daa
test
jo
jno
cdq
adc
jp
aas
dec
mov
sbb
out
jae
test
dec
push
pushf
nop
xchg
jbe
push
pop
repnz
adc
mov
push
or
or
je
int
mov
pop
daa
adc
add
das
shl
pop
or
pop
xlat
test
xchg
shl
mov
sbb
mov
jne
ins
fwait
imul
sahf
jg
daa
call
inc
(bad)
sbb
or
xchg
push
or
mov
pop
mov
mov
jne
nop
cmps
stos
sub
and
outs
stc
punpckhwd
ja
cmp
fdiv
sbb
jo
and
cmp
dec
out
dec
daa
movs
or
push
shl
mov
push
inc
loopne
or
sub
jge
outs
movs
cmp
or
into
in
mov
push
inc
jmp
ins
pop
(bad)
int3
ja
lods
enter
xchg
stos
sbb
scas
lods
mov
shl
jecxz
fisttp
lods
push
rcl
and
push
mov
mov
mov
je
inc
sub
and
cld
data16
sbb
fst
or
cmp
inc
lea
outs
call
push
(bad)
into
push
cs
sbb
add
and
jne
sahf
cli
pusha
cmp
inc
aaa
js
push
adc
cli
stos
xchg
adc
mov
ins
or
add
mov
mov
push
mov
(bad)
pop
(bad)
jne
cmp
into
es
push
mov
inc
mov
and
(bad)
not
pop
ja
(bad)
in
mov
pop
call
mov
nop
test
bound
sbb
(bad)
addr16
retf
xchg
stos
jno
dec
mov
push
call
and
loop
out
add
scas
pop
fcomi
inc
pop
jnp
stos
pop
mov
into
add
leave
cs
addr16
jae
cld
dec
xlat
enter
sti
lds
add
adc
xor
cmp
sahf
sahf
sbb
xor
mov
shl
sub
iret
ins
enter
iret
xchg
stc
jo
fst
retf
xor
retf
data16
pop
mov
dec
jnp
dec
mov
jp
mov
sbb
mov
lods
dec
mov
add
mov
or
push
(bad)
repz
xchg
and
mov
adc
outs
cld
jle
xchg
xlat
test
jmp
xor
add
or
sar
mov
test
pop
je
sub
rcr
sub
and
pop
and
pop
sbb
adc
test
ins
xor
jae
push
imul
repz
sub
sub
bound
and
sti
pop
or
cmp
mov
rcr
dec
mov
cmp
or
test
cmp
sub
shr
add
mov
stos
and
pop
ret
pop
dec
jp
jne
add
test
sahf
cmps
test
addr16
fld
jns
int3
mov
frstor
mov
icebp
add
push
shl
jno
xchg
push
out
add
push
inc
jmp
fbstp
pop
stos
pushf
les
push
mov
in
mov
inc
add
ficom
xor
retf
movs
or
jne
xor
xlat
ret
mov
sub
jp
sbb
imul
adc
add
stos
sbb
sbb
call
popa
dec
mov
jo
loope
lea
jae
jnp
inc
stos
int3
mov
add
pop
add
mov
mov
sub
dec
test
lds
loopne
mov
call
rcl
outs
aaa
and
xor
aam
ss
and
fistp
mov
fbld
xlat
mov
imul
cmp
inc
inc
lds
dec
xor
(bad)
in
nop
mov
push
not
add
mov
int3
mov
fiadd
or
push
add
pop
es
xchg
imul
push
not
test
adc
dec
cmp
imul
push
retf
or
adc
xor
push
mov
cld
jnp
sub
inc
push
dec
data16
jo
pop
in
pop
cmc
inc
bound
mov
ins
and
dec
cmp
in
mov
(bad)
nop
mov
inc
sub
and
sbb
push
test
arpl
out
inc
cmps
jmp
test
int3
sbb
mov
and
push
sahf
int
sbb
retf
mov
and
xor
leave
sti
xor
adc
or
adc
repz
and
mov
pop
cmp
xchg
pop
mov
xlat
retf
mov
retf
mov
stos
mov
mov
cmc
stos
adc
aas
(bad)
lock
loope
mov
cmps
add
push
ret
mov
dec
arpl
idiv
fiadd
mov
ja
call
sti
shr
repnz
cmps
dec
xor
je
test
fdiv
adc
jge
pop
dec
dec
scas
ret
iret
sub
bound
(bad)
pop
es
xchg
(bad)
loop
inc
(bad)
in
cmc
sbb
add
xchg
inc
stos
jns
pop
jb
fs
or
mov
mov
sbb
inc
dec
fnstcw
pop
pop
es
push
imul
shr
pop
sub
sub
mov
test
inc
bnd
or
ins
mov
aaa
sub
imul
pop
add
xor
ret
sub
aas
repz
cs
enter
and
jl
ja
shr
add
div
mov
ss
fmul
repz
add
ret
xor
test
jp
out
dec
scas
fsubr
fcmovnu
in
xor
(bad)
retf
js
popa
mov
push
(bad)
ss
xchg
mov
push
mov
addr16
fld
stos
jmp
fadd
(bad)
lds
imul
idiv
mov
dec
or
push
mov
and
pop
in
int3
push
mov
rcr
or
adc
test
push
mov
clc
mov
ins
in
add
mov
neg
(bad)
dec
rol
ins
dec
out
sbb
aam
out
call
dec
jmp
pop
lods
add
sahf
xchg
loope
push
cmps
(bad)
push
(bad)
leave
inc
add
fisub
jmp
push
sub
scas
xor
adc
ins
or
sbb
enter
cmp
test
bound
mov
jno
popw
jge
mov
mov
iret
sbb
int3
bound
fwait
jbe
movs
(bad)
out
adc
std
movs
or
or
add
inc
loope
gs
add
out
popf
pop
jmp
jb
lods
and
xchg
dec
rol
dec
mov
dec
xlat
jge
clc
mov
mov
xor
pop
xchg
retf
shl
inc
das
sbb
and
push
pop
xchg
xor
retf
pop
lds
pop
sbb
dec
(bad)
mov
sahf
sbb
shl
inc
dec
clc
icebp
inc
js
call
push
xor
pop
pop
adc
sub
shr
outs
or
out
mov
jmp
pop
xchg
sub
sar
and
scas
inc
psrlq
jae
adc
xor
mov
(bad)
gs
stos
sub
mov
push
iret
mov
jg
pop
(bad)
xor
loopne
xchg
aam
add
ret
addr16
sbb
fldenv
movs
test
mov
je
call
sbb
sar
arpl
add
and
push
xchg
xchg
push
add
daa
adc
js
and
in
leave
mov
(bad)
push
loop
add
and
int3
movs
out
xor
int
mov
ja
mov
fld
xor
sub
arpl
cwde
scas
aam
hlt
stos
add
cmps
imul
out
mov
inc
pop
sub
ins
adc
jl
inc
iret
jae
mov
pop
inc
push
pop
inc
push
aaa
pop
dec
mov
ret
lahf
jno
repz
jbe
mov
mov
push
adc
rcl
test
in
into
adc
cli
jge
and
add
test
pop
loopne
jo
pop
pop
pushf
mov
push
jmp
push
xor
lds
mov
lds
xor
xor
int3
push
dec
cmc
push
add
fistp
cmp
rcr
clc
dec
pop
movs
sbb
aam
aaa
cmp
lods
or
js
leave
sub
mov
mov
icebp
mov
ror
push
or
(bad)
pusha
pop
mov
inc
jbe
popa
mov
cli
das
mov
out
or
es
pop
dec
fwait
adc
jne
mov
fadd
cld
dec
push
imul
stc
outs
nop
push
bound
and
push
add
movs
mov
mov
movs
pop
fwait
inc
popa
adc
sub
(bad)
mov
add
aas
inc
mov
cmp
sbb
repz
pushf
pop
int
and
or
add
out
sbb
mov
and
test
adc
add
dec
rcr
sub
add
jmp
mov
xchg
stc
idiv
sub
inc
aaa
fld
push
push
and
je
mov
rcl
mov
jg
cmp
fdivr
adc
out
or
pop
cmp
int3
xor
pushf
daa
sbb
push
data16
cmp
cwde
sbb
mov
pop
or
xor
out
mov
test
int
push
cdq
pop
jmp
hlt
add
adc
pop
cmp
loope
movs
(bad)
mov
push
mov
cld
mov
push
fisubr
push
sub
addr16
int
std
scas
mov
clc
sahf
call
in
inc
jecxz
lods
lods
jmp
sbb
int3
cmc
out
data16
popw
push
adc
retf
or
jle
jbe
jne
cmc
scas
mov
test
sbb
sbb
sbb
sub
mov
inc
jae
pop
outs
jmp
lods
(bad)
sar
rcr
pop
mov
and
or
fldenv
jge
shl
push
ja
sbb
aas
clc
or
int
pop
mov
xchg
cmps
pop
mov
addr16
adc
(bad)
jo
test
test
loope
push
xchg
push
inc
push
es
jo
inc
pop
mov
ins
call
and
or
not
repz
sti
add
adc
(bad)
xchg
lods
sub
fisubr
or
ret
call
aaa
cwde
xor
fidivr
sar
cld
in
sbb
dec
jmp
cs
pop
cmp
aas
scas
or
nop
inc
out
add
shr
mov
adc
fimul
ret
jae
or
ror
cmps
pushf
mov
into
mov
and
mov
pop
push
ret
mov
dec
daa
mov
and
gs
call
and
fcom
retf
pop
pop
cmp
aam
mov
cmp
cmp
mov
push
jecxz
fstp
mov
outs
cmp
lods
std
cmp
sub
sar
movs
ja
ins
pop
popa
fcmovbe
or
adc
inc
sub
outs
mov
(bad)
sbb
cmp
pop
push
gs
dec
rcr
cdq
pushf
pusha
xlat
out
lods
je
test
jns
mov
jl
repz
(bad)
in
imul
aas
aam
test
outs
mov
inc
xor
push
mov
sbb
and
add
fwait
cmp
outs
add
dec
xchg
dec
pop
cmp
adc
(bad)
mov
test
fld
aas
mov
jecxz
iret
cdq
mov
popf
test
les
xchg
(bad)
in
outs
ret
test
movs
add
add
lahf
retf
mov
cmp
call
pop
mov
outs
mov
push
adc
inc
popf
cmp
mov
mov
bound
mov
sbb
icebp
and
jecxz
pop
in
xor
lahf
sbb
jae
mov
sbb
out
and
sbb
fistp
jbe
aad
movs
sub
retf
sbb
cmp
in
and
or
mov
add
stc
jae
inc
inc
jne
mov
test
popa
push
push
(bad)
(bad)
mov
mov
(bad)
jmp
add
add
rol
sahf
jg
adc
in
dec
fiadd
cmp
push
je
or
test
cmp
cmp
ja
xchg
mov
cwde
pop
push
pushf
cmp
pop
fld
imul
push
inc
hlt
dec
mov
out
inc
sub
sub
or
data16
and
je
mov
mov
mov
jne
mov
mov
inc
mov
lea
clc
inc
not
jb
sbb
popf
and
rcr
adc
cmc
ds
or
loop
add
into
mov
jne
(bad)
(bad)
or
adc
push
loope
leave
sub
(bad)
mov
in
fidiv
mov
or
mov
movs
lds
push
enter
mov
lods
hlt
cli
lahf
xor
xchg
xchg
retf
fidivr
push
jmp
mov
fsubr
xchg
mov
mov
les
push
rcl
mov
or
jecxz
add
add
cmp
sahf
push
(bad)
sub
push
push
cmp
clc
jns
cmp
sbb
adc
in
jb
xchg
loopne
pop
cmp
dec
xchg
pop
dec
jno
movs
loopne
rcl
mov
inc
out
sbb
cs
ins
stc
into
jecxz
test
pop
jbe
ins
push
daa
retf
aam
das
jnp
mov
fist
dec
lahf
pusha
xor
or
repnz
or
and
lods
xchg
clc
jge
cli
xchg
mov
jle
xor
mov
mov
repnz
push
pushf
cmc
leave
add
cmps
stc
cmp
pop
aaa
lahf
or
addr16
mov
adc
adc
mov
shl
pop
div
push
aad
mov
mov
inc
nop
in
inc
jmp
adc
scas
arpl
mov
push
or
sbb
(bad)
in
cmp
addr16
icebp
jmp
xchg
inc
fnstcw
xchg
shr
cdq
sub
mov
push
std
jg
lods
daa
inc
(bad)
mov
pop
mov
xor
sub
mov
sbb
dec
push
jno
and
popa
ret
mov
cdq
addr16
mov
sbb
loop
leave
into
pop
aaa
mov
xchg
add
jmp
and
aas
mov
enter
pop
push
sub
push
push
adc
cmp
lds
sar
dec
pushf
pop
mov
iret
sub
(bad)
push
pop
fs
test
jnp
clc
adc
push
(bad)
jg
retf
push
xor
test
xor
xchg
cmp
sbb
(bad)
mov
mov
test
mov
mov
fisubr
pop
arpl
div
rcl
scas
mov
inc
xor
dec
adc
mov
call
adc
or
mov
popf
xchg
push
(bad)
js
imul
and
into
movs
mov
bound
mov
sub
cli
push
sahf
push
jmp
or
ss
leave
sub
mov
mov
movs
fwait
xchg
mov
or
js
dec
inc
or
add
aam
nop
xor
mov
xchg
fldenv
adc
xchg
cmp
pop
je
jo
jbe
or
out
adc
or
hlt
loopne
aas
aaa
fwait
hlt
push
sub
scas
push
scas
dec
push
jle
sti
mov
cs
test
inc
inc
pop
and
pop
aas
enter
pusha
push
dec
push
or
mov
cs
das
cmc
(bad)
inc
inc
test
mov
adc
dec
or
sti
cmp
or
movs
stos
mov
mov
pushf
ficom
xor
push
lds
(bad)
cmp
ins
mov
sbb
rcl
cmc
mov
rol
es
dec
mov
push
stc
jle
push
inc
pop
xchg
in
push
and
mov
pop
mov
int
fwait
imul
push
mov
div
xchg
cmps
mov
sub
mov
rol
cwde
push
fidiv
(bad)
outs
push
nop
test
cmp
test
lea
dec
call
xlat
pop
js
nop
inc
push
cdq
arpl
sbb
in
pop
add
arpl
xor
cmp
pop
mov
retf
pop
add
xor
jns
rcr
xor
push
std
add
or
sub
aam
(bad)
std
cmps
pop
ja
add
mov
lahf
sar
les
out
repnz
cmp
call
hlt
cld
sub
mov
pusha
xor
enter
lods
push
imul
cwde
inc
add
jo
mov
pop
jl
cmp
dec
jno
or
xor
(bad)
test
add
lods
clc
hlt
jmp
cmp
(bad)
push
cmp
jne
jnp
clc
fcomp
ss
xchg
add
cli
out
inc
lods
ins
xor
shr
sbb
mov
and
enter
xchg
and
into
test
(bad)
lahf
sbb
pop
ret
push
xor
inc
xchg
cmp
ret
pushf
mov
xor
icebp
add
mov
div
sbb
sahf
mov
jae
xlat
dec
cmc
ds
or
inc
mov
jmp
shl
(bad)
and
adc
pop
sar
sbb
scas
add
xchg
shl
loope
cmp
lea
dec
leave
adc
sti
(bad)
dec
cmp
es
pushf
mov
mov
and
aad
ror
adc
cli
dec
clc
sbb
dec
inc
pop
mov
aam
mov
(bad)
data16
cmc
icebp
xchg
jmp
fadd
shl
inc
adc
(bad)
paddusb
test
nop
in
pop
retf
mov
fisttp
sub
je
je
or
es
xchg
sub
push
lahf
iret
popf
inc
mov
addr16
inc
cmp
jns
(bad)
(bad)
adc
fwait
test
mov
mov
mov
jmp
mov
sbb
in
test
inc
xor
or
pop
mov
jne
cmp
mov
fnstcw
lods
data16
and
ins
in
in
ret
(bad)
fisttp
mov
pop
sbb
mov
pop
pop
and
xor
xor
mov
out
sbb
xlat
pop
fs
ins
or
mov
pop
shl
addr16
ret
jb
or
arpl
ins
jl
dec
(bad)
into
cmp
arpl
in
push
ins
cmps
push
mov
sub
inc
sti
movs
mov
cmp
push
inc
outs
cmp
inc
xor
sub
mov
(bad)
aad
inc
mov
enter
jp
sbb
sbb
xchg
add
dec
mov
sub
ror
cmc
std
cmps
or
pop
add
push
xor
aas
cwde
cmc
addr16
mov
or
aad
and
jmp
mov
sub
push
adc
sbb
jns
jmp
sbb
ret
push
imul
jbe
or
(bad)
clc
xchg
mov
enter
dec
sbb
sbb
or
dec
cmc
repz
iret
(bad)
std
push
pusha
jns
sub
mov
rcr
and
jecxz
inc
adc
jmp
repz
sbb
arpl
or
xchg
xor
mul
lods
imul
bound
pushf
inc
xor
mov
adc
cwde
cmp
retf
xrelease
jecxz
int3
les
inc
sar
sahf
adc
clc
sti
mov
imul
ss
test
pop
jle
clc
out
outs
pusha
jl
mov
or
stos
mov
ss
in
and
mov
xor
cmp
xor
cmp
inc
mov
repz
mul
nop
xchg
push
add
jge
mov
les
je
stc
data16
frstor
adc
call
call
mov
add
popf
leave
mov
call
in
ins
pop
push
pop
add
test
and
inc
mov
ja
jne
cwde
stos
icebp
ins
cmp
pop
(bad)
and
inc
hlt
inc
scas
imul
hlt
adc
jle
push
ins
inc
cs
mov
(bad)
(bad)
xlat
xchg
fdiv
inc
pop
outs
mov
cmp
outs
dec
and
cmp
sahf
cmp
ficom
sbb
inc
and
push
cmp
cld
mov
inc
int3
lods
add
test
psubsb
dec
pop
jg
jbe
or
je
out
or
inc
mov
sbb
inc
cs
das
sbb
icebp
mov
xchg
aad
mov
repz
pop
icebp
mov
jne
adc
add
aam
fisub
or
xor
cli
outs
dec
pop
into
sbb
jns
int3
into
lock
ret
cdq
fst
inc
fld
pop
mov
in
js
mov
mov
pop
push
pop
add
sub
sub
mov
or
shl
mov
xor
jmp
jnp
xor
js
mov
in
imul
not
loopne
or
sbb
mov
in
sbb
sbb
sub
cmp
inc
and
in
sub
pop
outs
sbb
jl
xchg
or
sub
or
xchg
cld
cld
repz
std
jmp
mov
iret
in
(bad)
je
jb
fs
retf
add
mov
xchg
(bad)
hlt
arpl
mov
inc
loope
xrelease
push
adc
(bad)
cmp
repz
jnp
dec
cs
xor
int
leave
or
sbb
mov
sahf
jmp
xchg
in
ja
sub
cdq
mov
dec
inc
inc
jbe
and
loope
js
xchg
jge
and
push
jle
push
popf
push
dec
icebp
lock
adc
leave
mov
nop
ret
adc
xlat
dec
mov
dec
sbb
jno
cmp
xchg
add
shl
pusha
daa
sar
dec
int3
jmp
div
rcr
ror
jle
jns
neg
pusha
and
jae
aam
cmp
pushf
xchg
pop
pop
(bad)
(bad)
push
dec
les
pop
bound
out
add
jmp
push
push
xor
test
inc
(bad)
out
add
les
mov
mov
dec
(bad)
adc
push
les
out
mov
test
addr16
iret
es
shl
movs
xchg
and
fisttp
jecxz
les
in
ss
jge
mov
pop
mov
js
pop
cli
xor
or
mov
add
cdq
mov
adc
sbb
jmp
into
jae
lea
cwde
inc
pop
fisttp
mov
xchg
jl
pop
xor
sar
xchg
clc
sbb
lods
add
adc
push
jae
jno
lods
test
mov
jg
(bad)
ret
movs
add
clc
test
mov
hlt
aas
push
pop
add
mov
test
dec
add
js
mov
and
jno
or
loopne
movs
xchg
jmp
pop
pop
out
shl
popa
(bad)
sahf
imul
mov
es
push
je
cdq
push
pop
sbb
fs
ret
out
sub
inc
mov
sbb
arpl
xor
jno
pop
mov
out
fidiv
dec
jecxz
sub
jns
sbb
pop
pop
dec
imul
mov
(bad)
ds
pop
out
dec
ins
int
out
scas
sbb
cmps
sbb
ret
ds
xchg
push
dec
jnp
or
(bad)
imul
xor
ficom
inc
js
sbb
call
adc
(bad)
repnz
pop
(bad)
jg
push
stc
push
into
js
jecxz
enter
pop
lock
ror
and
in
xchg
shl
xor
loopne
mov
or
jne
enter
in
xor
pop
sbb
xchg
mov
(bad)
popf
out
outs
jg
xor
jmp
shr
sbb
mov
and
les
in
ins
stos
mov
pusha
ds
fimul
add
xor
cmc
pop
call
shl
push
or
daa
xor
lock
out
cmp
call
jb
scas
xor
jae
cs
(bad)
push
push
mov
in
loope
scas
xchg
enter
in
add
out
(bad)
call
mov
cdq
out
xchg
mov
mov
mov
sbb
out
sbb
retf
mov
inc
push
xor
and
xchg
(bad)
xlat
jns
sbb
cdq
inc
daa
out
jecxz
and
mov
add
sbb
int
dec
cmp
pop
in
dec
fwait
jo
ficomp
in
jb
popf
out
mov
add
push
jge
push
cld
adc
xor
movs
not
or
xor
fild
ins
mov
(bad)
jb
fist
push
leave
dec
mov
pop
and
nop
and
push
and
cmp
fstp
add
shr
cmps
in
xor
(bad)
pusha
or
pop
sub
loopne
ins
pop
rol
ret
mov
call
mov
xlat
out
fdiv
xor
sbb
fsub
int3
dec
out
loope
sti
cli
push
inc
lds
not
sbb
inc
jg
mov
pop
cmps
call
mov
xchg
mov
or
xlat
(bad)
repz
outs
pop
lods
call
movs
add
aam
jecxz
dec
mov
adc
mov
jns
ffree
int3
test
pushf
mov
xor
mov
ins
jp
adc
inc
push
dec
das
cmp
adc
test
pop
in
in
sbb
inc
arpl
and
or
sub
jecxz
pop
push
jbe
loope
xor
test
push
inc
dec
(bad)
ins
jmp
mov
jns
lock
sub
mov
xchg
test
jbe
pop
iret
mov
outs
or
shr
outs
frstor
imul
rcl
fisub
jbe
mov
jp
jl
fsub
jmp
push
push
xor
sub
(bad)
hlt
div
in
mov
and
out
shl
mov
fmul
aad
test
sti
cmp
xchg
jbe
xchg
lods
rcl
push
jl
pop
loope
fcom
loop
pop
push
xor
dec
and
lahf
mov
inc
mov
mov
pusha
push
adc
cmp
sub
test
pop
imul
fcmovb
xor
lock
sub
sub
jl
or
sub
loop
xor
outs
ss
(bad)
div
(bad)
jmp
jae
loope
aam
and
mov
dec
sub
pop
test
inc
push
add
or
cld
push
add
mov
add
jmp
pop
or
jae
or
and
dec
neg
loopne
cmp
and
cmovne
sub
mov
ins
sub
pop
mov
jns
mov
or
and
imul
loop
cdq
jmp
push
popa
lods
push
and
mov
push
js
and
retf
js
jno
outs
out
add
jb
mov
ds
fldenv
push
adc
fdivr
mov
inc
in
mov
mov
mov
aaa
leave
jmp
pop
jae
dec
pushf
lock
cwde
dec
xchg
or
cmp
mov
(bad)
imul
adc
lea
dec
xchg
std
sbb
nop
xchg
sti
cli
add
aas
adc
adc
xor
xchg
xlat
mov
mov
mov
lods
dec
pop
jno
ds
hlt
xlat
adc
ins
aad
cmp
retf
xor
lods
ret
sbb
xchg
xor
call
cwde
gs
aam
xchg
sub
sbb
push
das
jmp
shl
sub
mov
ins
imul
pop
cmp
ins
or
or
outs
or
jg
or
pop
jbe
xchg
ins
cmp
mov
loopne
stc
call
mov
(bad)
xlat
jmp
inc
aaa
call
mov
in
(bad)
dec
dec
es
fdivr
enter
aam
in
lea
fsub
int
push
iret
(bad)
push
adc
call
jne
stos
jl
pop
and
and
js
or
xchg
in
fstp
cmp
(bad)
(bad)
outs
sahf
(bad)
push
jge
jg
xor
loope
jbe
mov
adc
stos
push
fdivr
stc
ret
jecxz
aas
popf
out
call
not
shl
movs
cmp
ret
pop
add
mov
or
xor
shl
dec
jbe
push
mov
mov
xor
(bad)
aas
pushf
repz
out
mov
dec
fiadd
sub
test
xor
push
push
xor
jmp
fwait
xchg
xchg
jmp
jbe
movs
add
in
jbe
jno
push
inc
jbe
push
and
cs
mov
test
jmp
mov
sbb
das
dec
fdivr
jecxz
dec
jo
xchg
jmp
icebp
fstp
mov
movs
mov
popa
cmp
enter
cs
jg
test
stos
(bad)
adc
enter
mov
fist
xor
call
jle
adc
cmps
dec
in
xchg
mov
mov
adc
je
mov
nop
or
or
jge
mov
cmp
enter
mov
or
jne
outs
inc
sub
cmc
les
pop
add
dec
mov
mov
fxch
xlat
adc
and
and
dec
call
mov
mov
aas
scas
out
adc
out
aad
cmp
xchg
mov
addr16
mov
xor
jmp
iret
call
dec
es
sub
fmul
fist
gs
data16
popa
jb
aad
mov
cmp
dec
aam
enter
call
sub
lds
or
sbb
movs
inc
add
outs
mov
jecxz
fdiv
mov
fdivr
bound
test
pop
es
and
jnp
xchg
out
shl
mov
js
jo
dec
int
or
or
adc
add
push
(bad)
in
pop
add
adc
fstp
aad
dec
xorps
cld
mov
add
adc
jmp
pop
jns
retf
retf
mov
push
movs
xchg
pop
(bad)
add
sbb
push
out
adc
push
push
mov
jmp
jg
mov
call
ret
sbb
xor
leave
or
cmp
lds
pushf
cmp
mov
idiv
scas
js
xchg
sub
ror
js
jecxz
dec
(bad)
fiadd
fld
dec
cli
retf
ds
add
scas
lahf
push
push
push
sbb
sub
cmp
in
cmp
jge
loope
test
xor
jecxz
sub
rcr
pop
pop
dec
lock
sti
imul
cmps
cmps
xchg
mov
fwait
adc
int
cmp
xchg
ret
test
xchg
repnz
mov
sti
int
lods
pop
ss
pop
and
outs
xlat
dec
outs
movs
arpl
xor
push
stos
add
dec
and
cmp
add
packssdw
cmp
adc
xchg
add
(bad)
sbb
adc
cmc
push
out
mov
cwde
push
or
test
scas
push
xor
or
div
mov
cmp
sbb
and
cwde
retf
(bad)
mov
and
pop
pop
push
mov
dec
(bad)
jle
and
es
inc
ss
jmp
inc
mov
ret
mov
rol
mov
sub
mov
cmp
xor
jns
pop
scas
sbb
enter
xor
mov
les
stos
bound
pop
pushf
rcl
stos
scas
xchg
lock
addr16
add
or
add
and
mov
popf
push
push
mov
(bad)
loope
jbe
movs
xchg
fnstenv
cmp
iret
mov
cwde
call
in
xor
dec
and
aaa
popa
cmp
mov
adc
ficomp
sar
out
jmp
pop
ja
cmp
and
sbb
rcr
pop
and
adc
iret
or
jge
loop
mov
gs
push
das
pavgb
retf
in
add
xchg
mov
mov
push
ds
sar
movs
stos
pop
loop
cmp
loope
xchg
jge
dec
int
or
adc
push
(bad)
jns
dec
xor
mov
or
mov
sbb
push
push
fnsave
xchg
lahf
js
jno
add
or
jae
mov
inc
jle
loope
loope
(bad)
in
enter
retf
push
mov
xchg
pushf
sqrtps
outs
out
xlat
mov
jmp
jmp
mov
lea
out
mov
mov
push
pop
mov
fstp
xchg
das
test
fidivr
sbb
cld
jmp
sub
not
push
mov
pop
ds
sub
jne
push
mov
cmp
test
and
sar
out
movs
adc
cs
call
mov
outs
jb
mov
or
pop
xor
pop
mov
ins
push
hlt
cli
jno
test
xchg
mov
jmp
cld
mov
stc
out
inc
mov
repnz
mov
es
pop
push
push
fyl2x
lea
retf
pop
mov
sub
lahf
mov
push
pop
retf
lea
mov
cwde
ins
pop
(bad)
inc
push
fsub
movs
clc
loopne
xchg
cmc
dec
dec
cmp
ds
fwait
nop
(bad)
xchg
movs
xchg
pop
dec
pop
or
push
push
aam
sub
and
or
lods
dec
xchg
pop
xchg
test
cmps
and
mov
inc
and
loopne
sar
or
pop
pop
add
shr
jmp
dec
es
push
mov
mov
xchg
cs
out
xor
ins
gs
icebp
jno
aaa
scas
(bad)
bound
inc
fisttp
test
ret
stos
mov
mov
dec
test
shl
cld
in
cmp
sbb
sbb
jmp
mov
das
retf
clc
retf
mov
lea
inc
ficomp
neg
cmp
repz
or
test
cli
inc
mov
mov
stos
cmp
popf
xlat
das
dec
mov
xor
push
leave
pop
mov
xchg
movs
mov
sub
jnp
icebp
xor
fimul
mov
loop
cmps
rep
or
mov
pop
cmps
movaps
xor
rol
push
add
jecxz
test
int3
popa
mov
mov
dec
je
lea
add
mov
cdq
dec
mov
or
or
pop
call
xchg
ja
xchg
cdq
pop
ds
stos
adc
xchg
inc
in
push
add
in
fld
xchg
push
repz
in
rcl
test
sbb
adc
add
retf
push
or
rcl
mov
add
push
repz
or
int3
mov
fwait
or
leave
jmp
aam
xchg
inc
out
pop
xor
rol
(bad)
pop
dec
adc
cmp
nop
loopne
(bad)
push
sar
adc
xchg
adc
cld
retf
or
stc
cmp
adc
push
pop
push
push
inc
jle
pop
jno
ss
lahf
nop
popa
xor
cmp
cs
mov
sbb
into
xchg
stc
aas
out
data16
mov
jge
inc
mov
dec
(bad)
xor
xchg
push
jecxz
imul
test
or
shl
mov
push
mov
shr
(bad)
stc
shl
shl
sub
mov
test
in
xor
jae
mov
adc
and
xchg
inc
inc
sub
pop
xchg
lds
add
aas
lods
adc
bound
ja
scas
mov
dec
movs
push
mov
int
lock
add
call
mov
push
push
test
lods
sbb
es
sub
cdq
(bad)
sti
paddb
mov
add
or
mov
sub
ja
lock
pop
popa
jns
sbb
cmp
js
div
inc
cmp
dec
xor
xor
sub
adc
or
jle
cmp
in
pop
das
gs
and
test
xchg
sbb
aad
nop
in
xchg
repnz
mov
vpsubq
scas
or
or
inc
mov
sub
data16
imul
iret
mov
scas
cwde
dec
lds
(bad)
int
jl
ins
mov
mov
add
dec
xor
mov
xor
xchg
arpl
aad
jno
and
pop
out
cmp
mov
jbe
cmps
sub
push
push
enter
push
jo
pushf
or
pop
push
fldcw
loopne
mov
(bad)
loopne
sar
sub
jb
pusha
clc
je
je
(bad)
pshufw
add
mov
mov
xchg
mov
and
mov
mov
ins
dec
or
imul
pop
cmp
arpl
fiadd
aam
imul
jge
and
mov
fs
sub
pop
mov
jecxz
adc
imul
push
lods
mov
push
bnd
lods
dec
(bad)
adc
jmp
xor
xchg
mov
push
cmps
pop
or
xchg
scas
clc
es
dec
xor
rcl
jb
jmp
dec
cmp
cmps
es
adc
push
cmc
sbb
mov
cmp
sbb
stc
mov
lods
push
mov
fidiv
shl
aas
nop
daa
add
mov
fs
push
mov
pop
mov
mov
pop
sbb
cmp
inc
cmps
fcmovbe
stos
mov
inc
test
mov
pop
dec
add
mov
call
xchg
mov
pop
mov
push
clc
in
sbb
imul
inc
sbb
test
mov
das
jl
ror
or
cmps
fdivr
inc
cmp
(bad)
adc
pop
pop
fcomp
xchg
inc
add
and
jne
cwde
movs
xor
pop
int3
jbe
je
cmp
xor
cmp
or
sbb
loop
xor
pop
cwde
das
sbb
and
mov
jno
out
das
mov
cwde
icebp
adc
imul
cld
aas
mov
aam
mov
push
mov
fnstenv
(bad)
rcr
jmp
xor
sahf
(bad)
xchg
fidiv
pushf
push
aaa
or
cs
mul
std
adc
mov
jo
mov
adc
adc
dec
std
add
dec
mov
mov
mov
push
xchg
test
dec
test
adc
adc
out
aas
push
aaa
sbb
sti
sbb
retf
jns
pop
xchg
les
nop
add
xor
mov
lea
jne
or
adc
push
into
lahf
or
xor
shr
push
xchg
das
jmp
pop
lods
(bad)
push
mov
push
or
sub
jmp
cmps
inc
pop
cmps
sbb
mov
adc
dec
imul
dec
jnp
(bad)
ins
jo
pop
stc
cs
retf
aam
add
xchg
dec
inc
mov
pusha
shr
daa
xchg
adc
les
dec
mov
stc
dec
cmps
mov
jle
hlt
jecxz
gs
and
fiadd
test
adc
pop
clc
neg
retf
add
inc
hlt
xlat
adc
ret
push
out
dec
push
and
arpl
iret
inc
push
ds
ret
cmp
pushf
sbb
inc
pop
and
(bad)
adc
addr16
cmp
pop
movs
out
jge
jmp
mov
sahf
sbb
sbb
push
loopne
stc
mov
jg
dec
scas
mov
imul
nop
das
sub
outs
lahf
pop
shl
xchg
es
add
and
add
jl
mov
shl
ins
cmp
xchg
pushf
jecxz
cdq
jae
ror
mov
outs
dec
xchg
outs
test
test
adc
(bad)
cmp
jnp
mov
stos
(bad)
hlt
push
ror
movs
jge
pop
scas
adc
ins
push
sar
jg
or
xlat
sbb
(bad)
and
xchg
and
(bad)
popa
mov
nop
sub
int
out
mov
and
xchg
imul
mov
xor
sar
movs
cmp
pusha
mov
out
sar
jae
jbe
and
stc
fs
(bad)
push
jbe
cmp
(bad)
and
retf
ret
jge
push
ins
xlat
inc
fist
gs
int
inc
stos
adc
fild
retf
jo
in
jbe
jae
inc
fmul
cmp
cmp
mov
pop
ret
and
jae
mov
xor
cmp
adc
leave
sahf
(bad)
adc
lock
push
dec
inc
xlat
mov
shl
fxch
or
popa
xor
les
dec
jnp
adc
(bad)
dec
test
xor
fwait
mov
adc
retf
jle
outs
and
jl
mov
pop
xchg
dec
xor
jnp
pop
aad
movs
push
push
loope
dec
push
test
scas
mov
sbb
in
sti
jo
pop
pushf
push
in
in
or
dec
jo
adc
jp
ror
jge
addr16
sub
mul
push
cli
mov
js
dec
push
ins
(bad)
xchg
fld
xor
(bad)
hlt
rcr
mov
adc
xlat
adc
cmp
fidivr
xchg
pop
xchg
and
inc
xor
test
mov
pushf
jmp
add
dec
xor
retf
ret
xor
bound
stc
pop
push
sbb
and
xchg
stos
sbb
or
scas
jae
jle
pop
scas
xlat
test
xchg
inc
lock
mov
cli
dec
fimul
inc
cli
jp
pop
xchg
mov
and
add
popf
cmp
(bad)
out
pushf
fadd
xchg
arpl
pop
mov
popf
inc
adc
push
lea
jbe
fbld
mov
stos
and
rol
es
js
loop
loopne
ror
in
dec
sub
sar
pop
cmps
jnp
mov
pop
adc
add
add
jge
cld
clc
addr16
fidiv
jns
fcom
pop
jmp
adc
and
jae
add
test
inc
dec
int3
add
dec
inc
mov
inc
cli
lods
out
sahf
lods
mov
inc
xchg
or
rol
in
jl
repz
out
xchg
mov
stos
xlat
cmp
mov
mov
out
jg
int
sar
inc
cli
xor
mov
ret
mov
adc
jmp
(bad)
fst
jbe
or
or
out
popa
xlat
sub
add
test
or
(bad)
loopne
sbb
sbb
lahf
push
cmp
shr
mov
pop
push
pop
xor
pop
shl
aad
das
lds
cdq
or
jg
adc
cs
pop
sbb
je
pop
mov
ss
dec
mov
add
xchg
pop
cld
cmps
fst
bound
(bad)
dec
cld
mov
jp
push
stos
leave
jb
push
jg
sbb
or
and
push
cmps
jmp
stos
stos
aam
push
ja
mov
test
daa
dec
call
sbb
mov
test
mov
mov
add
dec
sub
push
sub
mov
pop
lahf
lea
in
xor
or
add
lods
xlat
mov
popf
inc
dec
test
cmps
shl
ret
jo
gs
mov
test
jns
pop
cmps
sub
sub
mov
sahf
pop
test
cmp
jno
repnz
push
cwde
pusha
into
inc
addr16
test
in
inc
jmp
cmc
mov
mov
xchg
add
cmp
xor
jecxz
fwait
xchg
jp
pop
mov
mov
push
int3
dec
and
pushf
pop
jb
mov
das
cwde
pop
or
pop
retf
mov
fs
sti
retf
jmp
imul
inc
push
cmp
call
sub
sub
in
cmp
cmp
(bad)
in
or
mov
hlt
in
xchg
fisub
xchg
sbb
push
push
call
dec
cmp
in
dec
or
pop
dec
sbb
stos
test
inc
scas
pushf
call
movs
mov
es
fnstsw
imul
lods
dec
loop
push
or
inc
std
int
adc
loop
lock
push
xor
push
inc
les
mov
or
cmp
pushf
loope
loop
jae
cmp
cdq
inc
retf
inc
xchg
idiv
mov
fxam
add
jbe
mov
fistp
ins
lods
dec
cmps
cmps
pushf
(bad)
ss
sub
jp
xchg
ret
sub
out
or
cmp
repz
and
aam
imul
ja
ins
rol
and
int3
enter
cmp
xor
stos
gs
imul
xor
inc
push
(bad)
shr
or
push
sub
sar
aam
jb
cmc
(bad)
xchg
mov
sti
add
pop
fnsave
adc
cmp
adc
mov
fsub
pusha
das
ror
sbb
push
xor
dec
sbb
fwait
call
sar
ja
cmp
dec
out
push
dec
push
push
(bad)
inc
mov
jmp
sar
iretw
ja
sbb
xor
mov
inc
nop
jae
push
dec
mov
bnd
repnz
mov
jmp
jo
call
je
sahf
scas
push
lahf
outs
test
sbb
stc
int3
push
pop
daa
leave
movs
mov
push
jmp
push
dec
xor
movs
jle
popfw
ds
push
xchg
movs
add
lock
ja
cmc
xchg
call
xor
push
cmp
jmp
pcmpgtw
ret
lods
cmps
out
mov
icebp
je
pop
call
daa
or
fsub
xor
inc
jle
test
mov
bound
daa
ret
je
shl
rcr
cmp
jnp
add
fist
inc
xor
jb
lods
xchg
mov
fs
jo
sub
cmps
movups
sbb
inc
sub
jne
js
or
into
xlat
jo
aad
mov
jae
jbe
fs
shr
daa
jo
cmp
rcpps
in
add
sub
rcl
and
sbb
and
pop
stc
mov
repnz
mov
mov
(bad)
and
mov
fstp
sar
nop
sbb
je
test
push
xchg
shr
rcr
xor
push
fdiv
mov
dec
sbb
ja
icebp
xchg
out
mov
lds
add
sti
inc
pop
dec
stos
inc
icebp
retf
nop
jae
add
sbb
in
mov
push
out
jmp
addr16
fstp
in
pop
scas
cmp
xchg
imul
imul
mov
daa
pop
or
into
jae
add
fwait
jecxz
out
mov
or
stc
ins
sar
push
fcomp
xchg
movs
xor
push
or
jae
in
xchg
xor
lock
aaa
mov
push
loopne
out
push
mov
dec
(bad)
gs
mov
mov
into
pop
out
add
leave
jl
mov
fdivr
dec
scas
outs
pop
dec
xchg
into
sbb
fstp
sbb
ins
(bad)
or
push
xchg
or
mov
dec
push
pop
pop
sbb
movs
cmp
imul
inc
clc
ins
fcomp
xchg
aaa
popa
popf
sti
rcr
stos
inc
icebp
inc
fisub
jl
jmp
addr16
sti
pop
cmp
bound
cmp
fisubr
popa
or
add
inc
push
push
push
int3
mov
call
or
pop
mov
xor
xchg
mov
sub
mov
push
mov
cmp
nop
js
or
popa
(bad)
cld
push
mov
and
(bad)
mov
sbb
mov
leave
test
(bad)
push
pushf
das
cmps
or
pusha
rcl
loop
cmps
and
sti
mov
stc
xchg
pop
out
adc
jmp
sub
mov
pop
dec
xor
cmps
dec
test
xor
push
cmp
mov
loop
dec
pop
or
cdq
cmp
cmp
mov
jecxz
pop
inc
xchg
inc
sti
mov
jns
loopne
xor
and
dec
push
sub
inc
cmp
jo
sbb
inc
sub
jmp
jg
inc
pop
cmp
or
(bad)
icebp
mov
fs
xchg
mov
cmp
dec
pop
hlt
mov
outs
pusha
(bad)
enter
int3
sub
inc
jecxz
test
dec
fldcw
mov
xchg
test
cld
dec
cmp
ds
add
nop
cmp
jg
or
arpl
pop
inc
sub
sbb
push
les
mov
fld
sub
xchg
mov
jno
xor
fcom
movs
and
xchg
lds
jnp
pop
inc
shr
or
or
push
shl
add
sub
dec
or
and
pop
shr
rcr
push
xor
sbb
lock
adc
(bad)
outs
sbb
retf
fmul
aad
gs
push
mov
call
cli
xchg
fistp
adc
push
dec
push
xchg
shr
or
and
mov
mov
xchg
and
and
cld
sar
push
inc
sar
inc
mov
mov
mov
or
dec
arpl
into
adc
outs
data16
std
sub
aaa
call
jnp
mov
arpl
cmp
jbe
cmps
dec
int3
sti
stos
pop
sar
mov
dec
cvtpi2ps
test
js
mov
imul
sub
sub
sub
out
xchg
cmp
shl
repnz
stos
pushf
fsubr
idiv
repz
(bad)
je
mov
bound
ficomp
fwait
and
mov
loop
out
test
pop
cmp
add
in
add
loope
inc
push
pop
loope
div
neg
xchg
ret
fwait
pop
addr16
call
out
mov
sbb
mov
sbb
jb
xchg
xchg
test
push
enter
psubsb
mov
mov
inc
test
mov
dec
pop
(bad)
add
cmp
add
daa
ret
lahf
jne
xlat
push
mov
mov
push
sbb
mov
jno
in
adc
cmps
enter
call
(bad)
fist
adc
imul
shld
mov
outs
and
int3
neg
scas
test
xor
movs
mov
dec
arpl
fucomp
pusha
ret
daa
lock
js
sbb
push
xor
pop
inc
fwait
lds
push
popa
scas
sti
pop
in
mov
sbb
pop
xchg
sub
cmp
aad
bound
fiadd
popf
and
sub
pusha
xchg
mov
inc
arpl
shl
xor
mov
pusha
xor
sub
add
fwait
xchg
or
pop
jp
int3
sti
sbb
pop
cwde
lahf
imul
dec
mov
sbb
inc
xor
jnp
mov
(bad)
imul
xchg
aaa
pop
xchg
retf
pop
and
mov
xor
pop
add
pop
push
push
sti
or
mov
aaa
loope
rcr
ins
inc
pextrw
push
push
aas
(bad)
mov
push
jb
loopne
retf
adc
gs
xchg
sbb
cmp
cmp
arpl
aam
pusha
scas
pop
cs
sahf
sar
pop
imul
test
stc
sbb
nop
sub
fsub
call
xor
push
and
fbstp
and
shl
fstp
cmp
and
jo
rcr
mov
or
pusha
jo
adc
or
mov
cdq
in
jp
sbb
arpl
jp
xchg
dec
cli
iret
(bad)
and
cli
xchg
sbb
pushf
pusha
iret
or
pop
cld
out
add
in
icebp
mov
xchg
mov
cld
mov
xchg
sbb
fisub
ret
stc
sbb
leave
cmp
test
xchg
mov
dec
jmp
pop
pushf
shl
cli
lock
iret
cmp
add
push
xchg
test
mov
fsub
cmp
push
xor
aam
mov
jne
dec
int3
mov
mov
and
xor
cmp
push
adc
mov
cmc
jb
call
and
xchg
inc
cs
xor
sti
sub
mov
ins
push
sub
ss
cmc
or
pop
pop
out
and
add
gs
jbe
jmp
aad
xchg
test
loop
pop
(bad)
push
sub
jb
adc
adc
sbb
mov
dec
cmp
fidiv
xchg
movs
xchg
jle
ret
(bad)
(bad)
sbb
jle
call
sbb
scas
sub
ja
shr
xchg
inc
mov
ror
jbe
rcl
jo
ret
cld
pop
push
in
out
push
or
mov
xchg
pop
xor
push
cmp
jmp
pusha
and
imul
rol
push
stos
and
(bad)
clc
adc
mov
push
neg
into
mov
mov
adc
dec
mov
fmul
jmp
sbb
int
sub
aaa
lods
adc
push
out
xor
pop
adc
outs
sbb
or
shl
cmp
or
xor
mov
mov
jmp
sub
leave
in
xlat
aaa
test
sub
push
jmp
std
cli
fstp
test
xchg
dec
push
das
sub
cmp
push
in
gs
xchg
xor
jno
push
xor
mov
(bad)
fst
fild
jmp
mov
push
lods
je
dec
dec
fbstp
xor
in
xor
add
xchg
in
and
inc
xor
xchg
fcom
sub
fstp
adc
fisub
sbb
jb
ror
adc
and
test
mov
or
mov
or
lahf
cmp
jge
scas
bound
add
aam
add
inc
adc
mov
sar
fimul
jne
mov
dec
or
xchg
sti
and
fbld
out
mov
adc
and
xchg
mov
repnz
and
aam
and
push
fldl2e
push
sub
outs
push
mov
mov
jb
scas
icebp
(bad)
inc
fadd
xor
xchg
xchg
ret
loope
(bad)
jno
pop
sub
cmp
inc
push
pop
sahf
iret
fucomip
push
pop
xchg
cwde
mov
ins
into
(bad)
enter
adc
imul
out
sahf
inc
mov
sahf
mov
(bad)
imul
es
fisttp
mov
(bad)
jne
aam
sub
xor
xchg
xchg
jmp
adc
js
inc
ficomp
or
retf
push
test
aad
mov
adc
mov
mul
jge
mov
dec
jmp
into
adc
shl
inc
push
loop
repnz
xor
xchg
ffree
or
jo
push
in
jb
jge
call
lods
inc
test
jmp
add
jmp
das
les
inc
or
imul
adc
xchg
cmp
dec
xor
sbb
es
test
(bad)
lock
sub
daa
in
add
(bad)
cwde
clc
pushf
addr16
and
jne
cmp
add
imul
(bad)
mov
push
add
lock
mov
stc
push
hlt
hlt
inc
mov
pop
cmp
push
bnd
clts
adc
sahf
shl
sti
ds
sub
or
pop
adc
xor
and
std
fstp
repnz
jno
cmps
mov
or
and
mov
lahf
pop
(bad)
nop
test
sub
sub
inc
add
js
jg
dec
retf
or
hlt
lahf
aas
cli
push
(bad)
pushf
dec
ret
ss
mov
shl
and
prefetch
int
xor
mov
mov
mov
and
mov
and
daa
aad
es
lds
into
test
fisttp
fwait
inc
sbb
leave
clc
mov
in
push
pop
dec
enter
jbe
sbb
dec
lock
mov
mov
inc
add
fadd
sub
out
cli
bswap
mov
mov
xor
(bad)
ins
popf
add
pop
add
jb
and
mov
sti
fisttp
mov
cmps
jp
imul
xlat
add
xlat
mov
jmp
inc
and
or
call
jp
aas
icebp
aas
mov
mov
xor
push
xor
mov
or
pop
stos
(bad)
lods
scas
adc
mov
mov
loopne
xor
dec
xlat
call
pop
std
inc
dec
inc
jbe
out
fs
pushf
xchg
repz
inc
cld
dec
push
adc
(bad)
sub
and
cmp
popa
or
mov
lahf
movups
ret
cmps
fcom
inc
ins
pushf
lds
ss
fisubr
call
jns
daa
stos
pusha
mov
int
shl
xor
nop
adc
push
push
sbb
lods
jns
fidivr
and
sbb
lock
pop
dec
xchg
les
push
inc
sar
or
out
inc
jmp
cli
push
adc
pop
mov
loope
enter
ins
test
gs
or
and
test
lds
cmp
mov
fcomp
sbb
call
add
xor
and
jno
fbld
test
loop
cdq
xor
test
add
mov
out
call
adc
lods
int
(bad)
jbe
add
mov
cld
aad
jae
or
retf
pop
push
stos
adc
clc
aaa
dec
pop
cmp
nop
sbb
aad
cwde
jg
pop
xor
fadd
das
push
xchg
jb
icebp
pop
fdiv
shl
es
stc
data16
push
push
and
ret
out
ins
push
push
pop
adc
retf
pop
jno
cmps
imul
add
popf
add
or
call
pop
mov
std
sub
pop
or
sub
cmp
jl
xchg
repz
daa
sbb
add
and
in
cmp
shl
and
dec
xor
dec
movs
inc
fld
out
push
(bad)
lods
pop
fcmovbe
dec
leave
inc
and
icebp
jecxz
in
xor
adc
or
stc
add
ds
pop
add
or
pop
cmps
data16
or
pop
mov
sbb
or
xchg
loope
ror
arpl
cmp
adc
mov
(bad)
dec
fimul
jg
mov
ds
mov
jmp
fist
das
jg
pusha
scas
sbb
mov
cmp
sbb
in
lds
jp
sub
inc
in
mov
call
test
jno
fs
mov
fist
dec
xor
pop
mov
ret
pop
or
(bad)
and
mov
or
add
iret
popf
jg
inc
mov
pusha
jae
mov
and
das
sub
push
aas
enter
mov
addr16
lds
out
sub
cmps
fdivrp
cmp
ret
out
int3
xlat
cmp
clc
cwde
cmps
retf
dec
test
lea
stos
add
aaa
push
pop
xchg
loope
jnp
test
fbstp
test
ins
sbb
aam
daa
aad
or
push
es
lods
pop
test
out
and
jmp
mov
pop
std
mov
cmps
pop
ret
adc
jle
retf
dec
call
popf
xor
mov
leave
xor
jno
xor
lea
cmc
add
dec
pop
add
cmp
dec
ins
out
stos
scas
mov
push
pop
leave
pop
std
push
cmps
pop
ret
mov
sbb
push
adc
mov
rcl
leave
fwait
hlt
pop
retf
call
fst
add
sbb
pusha
xchg
bound
or
jae
jmp
push
out
sahf
pushf
dec
add
mov
and
xchg
rol
mov
push
jl
pop
cmp
cs
sbb
call
and
cmp
xchg
(bad)
jae
inc
test
fsubrp
push
mov
push
inc
sbb
pop
push
push
jb
jmp
add
jmp
lods
ins
inc
or
sbb
and
sahf
mov
jmp
nop
mov
xchg
cmp
fdivrp
mov
aas
in
xchg
sbb
sub
cmp
(bad)
cmp
inc
or
popa
test
(bad)
ss
push
fcomp
retf
aaa
out
pusha
fidiv
imul
outs
jecxz
cmp
(bad)
int
xor
push
or
dec
mov
inc
sub
shl
cmp
xor
int3
mov
mov
jecxz
fdiv
retf
in
inc
and
pop
test
pop
inc
inc
inc
jl
pop
std
push
in
pop
in
jl
loopne
jo
jecxz
add
xchg
xchg
inc
cmp
shl
shl
cmc
pop
ss
xor
add
outs
or
cmp
sub
dec
cmp
je
jmp
adc
and
mov
repnz
mov
xchg
sbb
test
repnz
stc
lds
ins
leave
fldcw
sbb
das
arpl
out
cmp
push
das
dec
and
and
xchg
adc
retf
shl
sahf
push
push
rcl
adc
push
(bad)
push
jl
inc
xchg
out
sbb
dec
adc
mov
pop
loope
scas
sub
sub
clc
xlat
sub
mov
push
ret
inc
mov
mov
les
ret
mov
sbb
jp
repz
(bad)
icebp
cmps
push
cmp
rol
retf
leave
test
(bad)
ficomp
mov
xchg
ins
sbb
adc
(bad)
outs
push
dec
fnstsw
fisub
and
push
cmp
adc
ins
cmp
or
xor
and
int3
adc
pop
push
push
xor
mov
retf
pop
fs
enter
ja
xlat
push
(bad)
cld
dec
dec
jmp
cdq
push
jo
and
sbb
fsub
retf
jecxz
push
ss
inc
scas
dec
pop
mov
popf
xchg
cmp
inc
and
sub
xchg
std
movs
into
imul
push
xchg
sub
lds
and
and
cmps
pop
movs
imul
push
ins
rcl
cmp
cmp
push
js
shl
add
out
xor
std
imul
xchg
paddd
retw
sbb
ss
mov
sbb
nop
pop
outs
ins
and
jnp
dec
pop
leave
pop
mov
sbb
cmp
loop
sub
pop
push
arpl
mov
adc
xor
popa
mov
jecxz
fs
and
add
fnstcw
mov
jno
adc
aaa
cmp
dec
adc
addr16
cmp
lds
fprem1
imul
lock
fistp
mov
(bad)
pop
add
not
dec
mov
push
jmp
adc
enter
fimul
mov
sbb
xchg
jmp
aas
inc
mov
out
pop
leave
dec
lea
cs
or
cmps
imul
iret
adc
iret
xchg
nop
mov
ins
push
pop
dec
push
lds
int3
aaa
outs
dec
out
inc
inc
popf
sub
mov
xchg
call
loope
data16
jp
(bad)
ss
cmps
rol
dec
test
push
jecxz
int3
pop
jl
or
pop
mov
push
and
cmp
hlt
add
jle
std
das
(bad)
ret
xlat
or
pop
and
mov
adc
neg
mov
je
fld
push
adc
ins
out
in
loopne
inc
popw
sahf
(bad)
cmps
mov
push
and
push
or
cmc
pop
cmp
imul
jge
xor
dec
and
lods
stc
in
adc
clc
and
pop
movs
outs
fadd
pop
jmp
sub
pushf
sbb
jo
data16
(bad)
cli
not
test
std
cld
push
aad
cmps
outs
ret
in
cmc
loopne
daa
push
mov
adc
jl
dec
dec
xchg
loop
xchg
in
bound
lock
rcl
pop
jae
adc
mov
cmp
dec
inc
and
xchg
mov
je
adc
fdivr
inc
(bad)
push
sahf
pusha
xlat
jmp
retf
cmps
fisttp
dec
xchg
dec
fwait
addr16
push
push
dec
cmp
out
pusha
mov
sbb
or
adc
and
and
and
xor
adc
xchg
and
mov
jb
sahf
cdq
dec
hlt
aad
in
clc
enter
aad
rcl
(bad)
(bad)
out
cmp
retf
push
jp
repnz
out
ins
sbb
xchg
cmps
xchg
push
add
repz
mov
loop
pop
cmp
(bad)
es
xchg
out
adc
xchg
sahf
jl
xchg
pop
arpl
xchg
bound
lods
mov
lea
test
scas
arpl
inc
mov
jge
imul
shr
pop
inc
enter
out
repnz
and
and
xchg
hlt
dec
add
jle
fisttp
sbb
xor
addr16
xchg
adc
bnd
cmp
push
jg
pop
add
ss
ins
nop
leave
jge
popf
or
xchg
or
dec
(bad)
mov
add
sbb
(bad)
or
scas
hlt
xchg
xor
xchg
mov
test
rcr
int
and
cmp
in
scas
pop
not
or
adc
xchg
jae
and
(bad)
stc
xchg
cmp
dec
ret
jg
out
pop
inc
push
cmps
shl
cmc
inc
push
popa
pushf
pop
inc
push
push
pop
out
popa
push
pop
(bad)
fdiv
div
push
imul
fdivrp
xor
jge
cmc
sar
adc
mov
ins
out
mov
paddsw
clc
and
or
sti
jecxz
or
dec
sub
mov
ja
loopne
dec
rcl
clc
mov
xchg
sbb
out
sub
retf
xchg
mov
jbe
scas
add
mov
cwde
cmp
dec
fstp
or
outs
push
push
call
iret
cli
ins
add
mov
gs
sbb
xchg
fprem
mov
xor
mov
sub
in
sbb
dec
stos
loop
ret
clc
popf
icebp
rcr
call
ja
pop
or
cs
pop
cmp
test
or
xlat
sub
movs
push
mov
(bad)
imul
add
ins
sbb
pop
and
dec
outs
mov
mov
sub
cmp
xchg
mov
loope
jl
sub
fistp
pop
jl
push
mov
xchg
sub
xor
jne
shl
nop
inc
pop
pop
leave
cmps
dec
mov
add
js
adc
stos
call
retf
ret
out
retf
jl
dec
jmp
repz
enter
pop
xor
inc
pop
loopne
int
sbb
test
xchg
sub
mov
test
inc
pop
inc
fwait
and
pop
shl
icebp
fstp
fld
ja
cmps
scas
cwde
and
push
mov
in
ror
push
test
dec
mov
sbb
adc
mov
jb
inc
jnp
or
cdq
mov
mov
or
dec
xchg
mov
retf
scas
pusha
retf
arpl
enter
cmc
mov
jo
hlt
push
mov
test
ins
jmp
jb
cmp
inc
movs
popf
sub
nop
icebp
outs
test
lods
cld
test
ret
in
aaa
(bad)
or
cmp
lods
jne
dec
mov
or
adc
mov
(bad)
call
xchg
int
lds
test
enter
iret
push
jo
es
mov
lods
jle
(bad)
xor
sbb
repz
sbb
dec
int
adc
clc
cmps
(bad)
mov
pushf
es
mov
inc
push
cmp
dec
mov
cmc
push
mul
daa
mov
or
mov
test
js
repnz
or
in
(bad)
push
or
loope
xor
sub
lahf
pop
adc
fld
jne
fnstsw
jecxz
ins
jo
sub
dec
pop
sbb
pushf
jmp
dec
(bad)
mov
jo
into
xor
xchg
movs
fcomp
ins
xor
inc
out
inc
adc
dec
or
and
jno
cs
mov
es
cmps
mov
call
inc
sub
jbe
loopne
cwde
mov
mov
ins
mov
xchg
dec
cmp
mov
adc
ret
add
mov
outs
aaa
aas
inc
mov
jg
mov
js
hlt
jae
imul
jnp
icebp
stos
mov
jle
les
jne
dec
add
cmp
push
bound
cwde
pusha
or
sbb
jl
fbld
cli
xor
int
xor
in
add
popa
fcomp
dec
sub
stos
jmp
mov
ret
in
lds
mov
pshufw
pop
mov
lock
fisttp
mov
(bad)
cmp
gs
inc
imul
sbb
loopne
lock
or
push
rcr
leave
push
dec
push
pop
inc
push
stos
inc
ja
jno
jmp
nop
cdq
jo
bound
mov
sbb
add
mov
icebp
inc
imul
in
xor
mov
dec
in
fst
std
ret
(bad)
push
gs
test
inc
sbb
lds
mov
call
imul
leave
sti
sub
int
test
loopne
movs
mov
push
in
call
aad
xor
scas
out
mov
push
fcom
sub
cmp
or
je
(bad)
jmp
ficomp
dec
and
dec
scas
mov
mov
das
push
sub
sbb
add
fwait
iret
xor
dec
or
sbb
mov
popa
in
in
enter
and
jnp
mov
mov
setns
cld
fwait
mov
mov
sar
movs
adc
and
pop
loope
dec
sub
sbb
loopne
aad
clc
lahf
sbb
inc
clc
inc
jmp
bound
daa
or
xchg
fmul
fs
lods
and
jo
mov
jmp
inc
mov
dec
or
xchg
mov
add
xchg
repz
shl
xchg
(bad)
sub
loop
push
cmp
lds
(bad)
ror
ins
adc
in
mov
push
mov
(bad)
les
in
mov
pop
xchg
fadd
lahf
jmp
push
jg
loopne
mov
xchg
sbb
mov
sti
pop
cli
mov
pop
jecxz
(bad)
in
cmp
mov
inc
(bad)
out
cmp
adc
jno
outs
stos
aad
cmp
shr
fisttp
fdivr
xchg
pop
and
jl
pushf
outs
iret
push
mov
ins
xchg
or
sub
adc
lds
int3
jp
stos
xor
jmp
mov
dec
in
imul
(bad)
xchg
sub
mov
xchg
adc
jmp
push
scas
dec
ret
pop
in
ret
and
push
sub
es
mov
outs
dec
rol
mov
dec
(bad)
jmp
inc
jns
sbb
pop
stos
jp
(bad)
sti
lods
push
push
out
pop
sbb
dec
das
adc
and
shl
mov
ss
adc
xchg
cmp
aaa
pop
jmp
dec
and
pop
popa
xor
test
out
sub
mov
cmp
mov
psraw
sbb
add
push
adc
dec
or
mov
mov
popf
mov
mov
and
rcr
dec
repz
xchg
(bad)
fisttp
add
push
push
push
imul
pop
sbb
inc
lock
stc
cmp
adc
fdiv
or
sahf
outs
cmp
jae
icebp
popa
push
call
das
stos
or
mov
rcl
shl
mov
add
mov
int
popf
sbb
sbb
jae
ins
sub
ins
sub
js
retf
les
cld
data16
mov
mov
xor
test
(bad)
jge
mov
sbb
into
sub
std
dec
jb
mov
xchg
fldenv
pop
sub
test
jecxz
xor
scas
or
cmovs
jg
xchg
in
xor
dec
push
lods
in
cmp
outs
sub
sar
mov
inc
stc
cmps
inc
daa
inc
(bad)
loop
test
xchg
in
xchg
or
and
stos
or
test
xchg
daa
cmc
popa
add
and
aaa
loop
repz
nop
fstp
test
retf
sbb
pop
push
imul
sub
add
push
pop
and
mov
mov
or
dec
add
dec
data16
pop
or
mov
xchg
inc
idiv
fnstenv
arpl
loope
or
xchg
outs
lods
sub
(bad)
jle
movs
jl
and
sub
int3
sbb
fimul
xchg
(bad)
fldlg2
mov
iret
and
fstp
sub
out
dec
fidiv
sbb
mov
dec
ins
adc
adc
inc
push
in
dec
inc
int3
cmps
scas
outs
out
scas
ins
retf
enter
adc
test
dec
pushf
fdivr
aaa
aam
cmps
push
mov
pop
mov
jmp
add
fcom
mov
jae
int
xchg
das
pop
push
add
popf
inc
xchg
cmp
pop
xchg
and
repnz
in
rol
xor
inc
xchg
cdq
pop
push
inc
movs
out
sbb
cld
mov
sub
and
loop
ficom
(bad)
jecxz
loopne
ror
mov
xchg
cmp
inc
jl
sub
mov
and
out
into
pushf
out
stos
inc
push
inc
sub
sbb
cmp
(bad)
xchg
adc
push
mov
in
jns
cmps
fnstcw
(bad)
mov
popf
jb
adc
adc
xor
jns
cmps
aas
nop
repz
mov
gs
(bad)
and
inc
jge
hlt
rcl
adc
jl
test
push
adc
lods
pop
cmp
out
sub
dec
inc
aam
outs
inc
cmp
and
fcomp
jnp
cmp
push
shr
adc
ret
and
test
add
iret
jne
mov
icebp
fist
fidiv
es
pushf
sbb
adc
jae
xor
addr16
fst
jnp
push
add
sub
repz
pop
call
inc
not
(bad)
leave
xchg
test
iret
jb
dec
inc
lock
rcl
test
sbb
shl
push
stc
aaa
xor
leave
sub
loope
aaa
aam
les
mov
xchg
mov
ins
xor
lods
retf
aas
mov
movs
xchg
xor
and
dec
jle
sub
test
movs
enter
and
adc
sub
cmp
mov
mov
in
aam
push
div
mov
jle
mov
out
sbb
mov
xchg
(bad)
mov
and
fisub
in
retf
or
icebp
movzx
mov
or
mov
inc
mov
clc
pop
cwde
xor
mov
ret
test
push
dec
fmul
sbb
popf
jmp
mov
je
mov
xor
adc
xchg
mov
add
push
(bad)
out
sub
mov
and
inc
xor
pop
imul
mov
cmp
inc
hlt
out
mov
popf
ins
arpl
repnz
add
pop
xor
adc
add
mov
and
fwait
xchg
dec
nop
inc
mov
das
xchg
jp
fistp
test
fs
mov
je
shl
jg
test
mov
stos
push
fadd
not
adc
push
cdq
xor
and
sahf
mov
pop
(bad)
fldcw
mov
popf
(bad)
dec
iret
stos
push
shr
in
test
loop
jne
retf
adc
loop
retf
push
repnz
push
and
pop
jb
inc
or
shr
stos
mov
scas
fscale
adc
jg
mov
movs
movs
push
(bad)
lods
fs
(bad)
push
or
or
inc
cwde
fucomi
or
cdq
cmp
cmp
pushf
add
jp
cmp
mov
inc
mov
adc
sub
aam
mov
inc
cmp
adc
iret
add
fxch
push
sar
mov
push
and
mov
push
cmp
push
retf
pop
aas
pushf
xor
or
sbb
fldcw
sub
adc
mov
xchg
(bad)
fisubr
mov
fdivr
xchg
push
sub
in
mov
sub
and
inc
dec
add
arpl
jecxz
mov
outs
or
sbb
shl
sti
scas
ret
fs
jne
push
xchg
std
loope
xor
push
mov
test
push
sbb
adc
mov
bound
mov
mov
mov
xchg
adc
loop
pop
leave
test
jecxz
aaa
mov
imul
inc
in
popa
cmp
dec
leave
xor
movs
cmp
mov
jno
jp
addr16
adc
add
xchg
xor
mov
js
xor
jno
(bad)
cmps
jge
test
stos
scas
inc
(bad)
rcl
sbb
pushf
inc
xchg
dec
loopne
les
dec
jle
jo
xchg
or
stc
or
into
fld
or
sbb
pop
mov
xor
or
fwait
sti
fwait
sub
xchg
and
mov
push
add
mov
sahf
outs
and
sub
adc
lods
dec
retw
(bad)
mov
mov
(bad)
ret
pusha
sti
mov
sub
neg
inc
pop
pop
mov
stos
nop
lods
push
jns
(bad)
test
xchg
mov
adc
lds
mov
mov
(bad)
test
push
cmps
push
iret
cdq
add
int
ret
pop
jg
mul
mov
xchg
aad
mov
loop
dec
jmp
cmp
pop
clc
cmp
mov
xor
push
jo
mov
fwait
inc
adc
mov
sub
sbb
xchg
lods
fs
mov
pop
in
mov
stc
mov
cmps
cmp
ins
repnz
sbb
fistp
xchg
xchg
inc
mov
jns
movs
sub
and
or
enter
fld
jne
aam
bound
sub
dec
lods
repz
jp
ret
dec
jb
stos
xor
dec
sub
fwait
shl
xor
xor
in
nop
xchg
inc
mov
sti
adc
pusha
nop
es
retf
sar
popa
repz
pusha
aad
dec
movs
std
mov
ret
xchg
dec
scas
addr16
or
or
sahf
scas
sub
jl
pop
xor
arpl
jnp
in
call
mov
cmp
xchg
inc
or
mov
in
push
je
mov
xchg
add
xor
xchg
and
das
mov
sti
xor
jnp
mov
push
or
inc
push
inc
or
lahf
lea
jmp
or
lock
push
pushf
fmul
xchg
cld
mov
inc
mov
inc
into
xor
ror
mov
fcmove
push
cs
jecxz
mov
dec
clc
lea
in
je
cmp
rol
xchg
cmp
aaa
into
adc
mov
dec
nop
push
ja
jns
out
daa
out
int
fstp
xchg
push
in
mov
adc
in
cli
call
mov
pop
in
cmp
movs
lea
bound
sbb
movs
pop
rcl
cli
mov
(bad)
dec
mov
clc
mov
retf
out
int3
popf
repz
movs
mov
out
cmp
cmc
mov
shr
sbb
cmp
jmp
pop
frstor
mov
adc
or
aas
jbe
mov
xor
inc
lea
sub
stc
lods
mov
cmc
out
mov
aad
push
dec
mov
sub
fwait
nop
pusha
js
inc
fwait
scas
xor
fcom
dec
mov
pop
movs
jg
shr
sub
adc
lds
sbb
mov
mov
sbb
ror
cwde
leave
cdq
aas
lea
cmp
in
popf
mov
or
mov
andnps
rcl
jle
fld
or
mov
pop
jge
es
scas
ret
cmp
jnp
sub
pop
and
loop
rol
pushf
stos
test
and
sub
outs
push
je
or
mov
push
cmp
pushf
test
xor
xchg
push
jmp
pop
stos
inc
mov
add
and
dec
cmp
rcl
pop
xchg
test
add
jae
mov
sbb
inc
push
cmps
ds
clc
outs
mov
or
push
and
cmp
jle
fiadd
jl
xchg
bound
sbb
lea
and
or
hlt
test
xlat
ret
or
mov
mov
push
sub
mov
jnp
cmp
mov
jnp
lds
mov
das
in
pusha
and
add
pop
xchg
mov
cmp
mov
fbstp
outs
sete
push
mov
sbb
mov
fwait
pop
shr
test
cld
xor
push
fstp
retf
jg
or
mov
pop
ficomp
xor
shr
cs
retf
jnp
ja
leave
das
imul
(bad)
adc
xchg
ret
xor
hlt
scas
sbb
data16
call
fptan
retf
mov
outs
pop
cs
int3
xor
es
sub
jge
(bad)
and
inc
mov
loope
mov
mov
add
mov
mov
pop
addr16
cmp
mov
cmps
test
add
cmp
or
sbb
inc
pop
mov
jne
sti
aam
fldenv
inc
or
add
loopne
pop
mov
pop
repz
dec
adc
xor
mov
adc
jae
and
xchg
sub
add
daa
das
jb
daa
xchg
and
jb
or
jbe
jne
cmp
lods
jle
into
push
cmps
adc
and
ins
xchg
cmp
xchg
and
fidiv
jmp
test
push
inc
test
outs
ror
popf
clc
je
ds
mov
jecxz
and
sub
mov
call
clc
in
jge
retf
push
xor
dec
pop
call
mov
push
cdq
pusha
mov
mov
es
pop
sbb
cmc
xor
sub
sub
fnstsw
pop
(bad)
ins
jb
nop
xchg
repnz
mov
pop
cmp
sbb
mov
pop
retf
ret
pop
je
loope
pop
dec
jg
and
ins
push
inc
jge
call
xchg
xchg
jmp
and
clc
test
loope
(bad)
frstor
leave
cmps
sbb
jbe
push
jbe
int
out
adc
sbb
xchg
pop
lds
std
in
shl
lods
mov
inc
loop
or
mov
push
pop
cwde
mov
jns
jmp
mul
arpl
lods
pop
and
js
mov
test
in
out
push
mov
cmc
iret
push
jne
lock
inc
hlt
inc
adc
xchg
xchg
ror
mov
test
pop
into
aam
sub
es
aam
cld
sub
dec
sar
xor
xor
(bad)
mov
pusha
mov
xchg
jo
jmp
or
neg
or
out
test
test
mov
fmul
push
adc
cmp
test
mov
and
out
inc
xchg
out
pop
xchg
ins
xchg
xchg
add
pop
and
mul
test
mov
clc
enter
(bad)
mov
cld
lods
sbb
lods
mov
jg
sbb
mov
mov
into
xchg
repnz
pop
fnstenv
test
sub
cwde
add
ds
sub
xchg
ret
inc
mov
inc
add
ds
cmc
add
xchg
pop
arpl
adc
mov
pop
cmc
cmc
test
into
xlat
and
test
out
cli
neg
scas
mov
call
in
add
mov
or
xchg
imul
pop
push
test
clc
and
jecxz
push
out
mov
mov
add
mov
xchg
in
jne
fild
iret
in
pop
cmp
mov
sbb
je
inc
ja
dec
jmp
push
xor
add
add
popa
sahf
xor
mov
jp
mov
clc
and
popf
rol
inc
sbb
fidivr
jo
(bad)
sbb
jns
adc
aam
stos
jbe
shrd
jae
inc
sar
cmp
retf
dec
cmps
retf
repz
cld
dec
iret
and
and
and
add
outs
dec
int
aad
sbb
push
add
rcr
dec
dec
dec
inc
xchg
mov
and
inc
pop
je
cmp
(bad)
xchg
stos
ins
add
fsubr
or
cdq
push
pop
and
ret
shr
mov
mov
xchg
stos
or
or
dec
in
sub
je
pop
(bad)
into
cmc
into
mov
sub
shr
jecxz
jb
pop
push
leave
arpl
es
cmp
pop
in
pop
js
fnstsw
xor
push
fnsave
fst
push
adc
ss
push
mov
das
mov
xlat
mov
ins
sub
lods
xor
nop
test
ficomp
ja
fmul
push
inc
mov
sahf
test
mov
aam
cmp
lods
test
pop
sbb
jne
jno
mov
and
push
and
(bad)
fcmovnu
xor
ficomp
je
bnd
inc
mov
addr16
xchg
test
sar
(bad)
cs
fwait
mov
test
clc
loopne
push
xchg
jp
out
and
sbb
dec
lods
push
and
sahf
mov
mov
or
sub
fadd
(bad)
pop
jne
ret
arpl
les
imul
sub
mov
jbe
push
shl
push
imul
cld
push
pop
(bad)
cli
mov
retf
sub
movs
outs
inc
cmp
pop
push
pusha
jmp
daa
outs
push
stos
repnz
shl
xchg
push
push
(bad)
mov
mov
test
lods
fwait
mov
in
and
or
movs
add
clc
je
fwait
xlat
int3
mov
hlt
sbb
cmc
fs
inc
mov
mov
sahf
repnz
call
mov
and
or
cmp
mov
add
pop
adc
stos
sar
xchg
shl
lods
mov
sbb
jne
mov
sub
data16
ret
ret
in
mov
retf
dec
sub
mov
mov
inc
push
dec
mov
mov
xor
pop
cmc
mov
fwait
rcl
jge
and
enter
test
dec
dec
push
pushf
push
push
or
jmp
or
cmp
cwde
push
xchg
inc
movs
mov
lock
in
retf
fucomip
pop
lahf
mov
push
mov
push
out
adc
pop
leave
repz
pop
leave
xor
(bad)
les
fisubr
xor
sbb
das
inc
and
cmp
cmp
jmp
jle
xchg
movs
inc
lahf
add
pop
je
push
and
sbb
xor
inc
mov
xchg
xlat
xor
cdq
rcr
jmp
and
pushf
les
fwait
mov
xchg
daa
xchg
fs
into
addr16
stos
adc
sub
cmp
aad
dec
mov
inc
pop
xor
(bad)
outs
jno
xchg
adc
inc
aam
lock
aaa
movs
imul
hlt
adc
popa
sub
or
jle
in
loop
xor
rcr
int
mov
sbb
lds
pop
outs
xchg
scas
add
pusha
mov
mov
sbb
les
inc
jno
mov
xor
inc
ins
in
mov
pop
lahf
ins
int3
bound
sub
xlat
sbb
mov
push
int
or
xchg
(bad)
int3
add
fwait
adc
cmp
xlat
mov
mov
jecxz
loop
and
push
jno
faddp
call
sub
mov
mov
add
sub
movs
(bad)
push
into
mov
or
jns
scas
ret
call
cdq
jo
cmp
xchg
mov
bound
dec
imul
and
js
mov
or
lods
shl
test
cdq
cwde
xchg
or
jg
data16
rcr
add
cmp
or
cmp
(bad)
xor
mov
pop
mov
and
mov
cli
pop
ret
fst
(bad)
or
mov
or
lea
iret
popf
nop
xor
push
mov
loop
or
cdq
push
push
mov
push
(bad)
int
jg
call
mov
mov
cmc
aaa
jae
push
xor
jne
shl
test
jno
inc
fld
ffree
in
dec
je
cdq
push
push
pop
push
mov
loopne
xor
adc
sbb
repnz
cmps
adc
sahf
scas
xchg
leave
push
inc
mov
cmp
mov
movs
push
pop
push
out
sar
sbb
cdq
and
jp
mov
mov
fmul
and
xchg
mov
fst
jp
cmp
call
sahf
sbb
movs
ja
mov
xchg
test
scas
clc
test
adc
das
dec
xor
pop
jge
push
cmps
lds
mov
cmc
jns
xchg
stos
add
mov
jmp
add
ss
xlat
add
neg
sahf
in
fs
sub
aam
sbb
and
xlat
xor
xchg
jg
inc
imul
and
sub
ja
xchg
sbb
sti
dec
jae
mov
jae
lds
jbe
add
or
rol
inc
bswap
cmp
clc
retf
iret
mov
dec
xchg
mov
jl
push
push
push
in
sub
fs
dec
or
cmp
enter
jb
inc
ret
int
mov
jecxz
in
call
lock
aam
and
std
ss
jnp
cmp
sbb
xor
xchg
daa
ins
clc
(bad)
leave
(bad)
adc
arpl
cli
fisttp
or
aas
xchg
mov
xor
(bad)
add
lock
stos
mov
loopne
je
xchg
lods
jg
popa
push
jp
sub
xor
cmps
cmp
cmp
sbb
mov
xor
shl
cmp
pop
push
xor
scas
adc
retf
test
imul
mov
lea
add
xor
std
test
mov
fs
int3
add
popf
xchg
dec
pop
or
and
loopne
mov
imul
sti
cdq
xor
(bad)
lods
pop
and
or
cmp
ja
aas
xchg
cmp
xor
jns
fadd
test
int
push
dec
or
loope
fst
mov
std
scas
daa
mov
out
stos
jp
push
xor
clc
xor
mov
and
pop
xor
in
adc
aam
ja
stc
inc
cmp
ss
add
in
dec
gs
es
mov
xchg
sbb
xor
scas
in
sbb
lods
repz
mov
inc
nop
xor
mov
cs
mov
cmp
or
nop
shl
mov
movs
pop
push
cmp
inc
fsubr
shl
sbb
call
push
add
dec
in
test
retf
sub
stos
dec
shl
sbb
out
sub
dec
int
mov
ja
in
out
jo
retf
mov
jb
cld
cs
scas
xchg
(bad)
movs
pop
ja
or
xor
mov
pop
mov
mov
adc
cli
fnstsw
push
leave
out
pop
sbb
addr16
nop
js
fldcw
xchg
push
popf
repz
ret
jmp
fs
popf
adc
in
loopne
cmp
sub
pushf
inc
iret
or
pop
dec
retf
or
fistp
scas
add
mov
out
fld
jle
xor
sbb
mov
imul
cmp
sub
sbb
pop
in
and
inc
pop
cmp
pop
add
out
enter
and
jo
jmp
jbe
dec
fldcw
add
jbe
adc
adc
iret
shld
bound
sub
out
push
dec
xchg
jp
shr
(bad)
push
push
mov
es
mov
mov
xor
mov
pop
jno
fimul
mov
stos
daa
es
or
test
adc
movs
push
pop
cmp
push
cmp
or
(bad)
or
fisubr
jmp
ja
sahf
mov
(bad)
sbb
and
sbb
(bad)
std
cmps
jecxz
mov
sub
xchg
and
mov
jb
out
or
push
adc
imul
dec
sub
sub
pop
cmp
sub
std
and
cmp
inc
pop
inc
mov
imul
imul
in
in
and
dec
pop
jbe
sti
and
xchg
fidivr
add
and
aam
inc
test
jecxz
sbb
and
cmp
xlat
mov
inc
and
xor
leave
inc
inc
cmc
adc
mov
call
in
test
xchg
retf
iret
or
xchg
loope
adc
inc
dec
inc
pushf
mov
not
imul
je
scas
mov
mov
ret
jge
hlt
int
xor
dec
mov
mov
es
jb
movs
icebp
jbe
das
scas
cmps
cmp
scas
loop
mov
push
ret
test
push
pop
shr
push
sbb
mov
jmp
adc
lahf
inc
data16
pop
sub
mov
xchg
into
mov
into
sbb
xor
mov
cmp
jg
pop
pop
or
inc
inc
or
pop
mov
cld
lahf
int3
in
lahf
jbe
dec
pop
ss
cmp
fwait
(bad)
into
fnstenv
je
in
mov
addr16
jp
sub
(bad)
arpl
cmp
inc
pop
push
jae
lock
pop
mov
ds
jb
push
add
das
push
pushf
icebp
dec
in
call
sahf
cmp
sbb
mov
jp
inc
adc
dec
push
cmp
mov
loope
push
sbb
repnz
mov
jae
sub
(bad)
jmp
sbb
dec
push
jle
push
sub
or
push
ins
mov
cmps
mov
loop
pop
sbb
ja
(bad)
cmp
inc
push
loop
push
test
data16
xchg
cdq
xchg
push
loope
cwde
cmp
ja
cwde
add
aas
adc
jle
pop
adc
clc
jnp
std
popf
xor
push
sub
inc
xor
aaa
sbb
cdq
pop
popf
pop
mov
rol
sub
push
cmp
adc
imul
rcr
sub
shr
sbb
adc
pop
adc
mov
ret
push
int
inc
and
mov
loopne
jae
push
retf
outs
mov
(bad)
adc
out
jb
call
loop
sti
pop
xchg
cmp
int3
jns
or
or
fnsave
jge
add
mov
pop
xor
inc
mov
mov
fisub
sbb
pop
mov
ss
lea
js
jo
xchg
loopne
hlt
rcr
push
in
sub
adc
gs
sbb
pop
shl
mov
lods
shl
xor
push
add
lock
imul
out
int3
jbe
mov
rol
std
sub
mov
add
and
ficomp
aam
(bad)
scas
xlat
repnz
jnp
retf
inc
imul
shl
add
jge
jecxz
out
pop
repz
div
adc
dec
jmp
or
push
adc
arpl
retf
out
adc
cmp
lds
lods
dec
xchg
imul
sahf
xchg
jo
xchg
sahf
inc
pop
pop
push
inc
xchg
cmp
mov
push
push
mov
xchg
js
fist
inc
xlat
daa
in
sub
loopne
bound
retf
aam
xchg
ret
and
xchg
jmp
leave
jne
sbb
loop
mov
xchg
mov
jmp
jno
xchg
mov
mov
icebp
xor
cmp
xor
std
mov
data16
fcmovu
and
mov
push
cmp
loopne
out
out
mov
and
inc
jl
cli
dec
shr
fstp
mov
mov
ror
(bad)
sbb
and
cli
and
loop
fmul
aas
in
sti
mov
mov
mov
add
das
nop
dec
push
cmp
scas
(bad)
imul
ss
mov
popa
movs
mov
sahf
and
jno
sar
xchg
or
test
(bad)
imul
hlt
pop
mov
sti
fwait
arpl
test
nop
movs
and
outs
leave
(bad)
fwait
xchg
pop
jns
mov
push
and
mov
push
jo
das
fiadd
and
nop
(bad)
adc
mov
sbb
cmp
out
cmc
neg
dec
call
xchg
pop
(bad)
mov
popf
imul
sbb
dec
aad
mov
jo
cld
and
out
fwait
cmp
loope
or
stc
adc
xor
(bad)
and
push
cli
push
cmp
rol
dec
add
and
imul
cmc
jl
jle
loop
dec
inc
mov
push
add
push
movs
pop
adc
stc
(bad)
lahf
fs
sub
mov
das
lahf
push
pop
test
scas
and
scas
adc
in
sbb
xchg
scas
(bad)
push
data16
pop
jl
mov
adc
(bad)
lds
inc
pop
push
rcl
jmp
jmp
retf
xor
ja
mov
fcmovne
jmp
rol
add
xor
sbb
xor
jnp
repz
push
aaa
movs
repz
mov
jmp
mov
jae
xor
test
adc
and
sbb
mov
jnp
lea
pushf
cmp
lea
int3
pop
push
cmps
and
and
pop
sub
in
inc
mov
ret
and
and
dec
push
add
imul
es
cmovbe
mov
inc
sbb
in
jmp
lds
ins
jbe
out
cmp
fnsave
cmp
mov
xchg
jno
stc
hlt
mov
push
aad
pop
xchg
pop
sbb
les
xor
mov
push
inc
cs
sub
int3
out
push
and
sar
pushf
jnp
movs
push
mov
fidiv
sub
xor
(bad)
icebp
inc
sbb
test
call
das
sub
adc
sbb
add
jne
or
sti
andnps
in
push
test
and
ret
xor
les
inc
jmp
loop
sub
sar
sbb
les
mov
lea
ins
adc
xor
jno
jno
aaa
loope
scas
retf
inc
fxch
es
sti
mov
sbb
push
adc
in
stos
xchg
push
adc
adc
lds
lods
or
pop
ficomp
and
cmp
mov
sahf
stos
cmp
test
psubusw
jp
adc
retf
cli
and
enter
mov
xor
mov
lods
in
cmc
fistp
push
cdq
push
mov
(bad)
mov
enter
test
jle
ds
ror
fist
test
or
fnstenv
lods
xor
or
inc
adc
cmps
pop
jecxz
pop
jecxz
ror
inc
xchg
cmp
push
imul
sbb
or
mov
icebp
push
and
sub
push
push
mov
xor
mov
les
rcl
pop
mul
pusha
add
cld
in
sar
rol
out
dec
sub
fild
push
clc
pop
cs
jb
loopne
push
xchg
es
sub
adc
jo
add
mov
sbb
xchg
add
jbe
lock
mov
lea
sub
jbe
inc
inc
lods
push
das
(bad)
jo
push
ins
imul
pop
pop
xchg
adc
add
nop
dec
fnstcw
pop
loope
ror
enter
jle
cmp
cmp
stos
xor
mov
and
cmp
pop
sub
call
inc
and
shld
arpl
adc
sub
arpl
mov
bts
and
push
lea
inc
jae
adc
mov
cmp
mov
sub
dec
loop
mov
popf
lahf
ins
xchg
jmp
loopne
cld
fidivr
sahf
pop
xor
jl
cmp
push
ins
(bad)
xlat
fwait
xchg
dec
and
out
cli
or
daa
cmp
push
nop
push
dec
push
pop
movs
mov
(bad)
stos
test
daa
mov
mov
rcl
sbb
stos
dec
dec
sbb
dec
ror
sbb
lea
retf
push
call
ror
lahf
adc
pop
or
adc
bound
into
cli
call
pop
add
loopne
pop
scas
mov
add
xchg
inc
xor
inc
dec
ret
pop
pop
les
dec
test
jns
leave
mov
hlt
fwait
mov
fisubr
jnp
pusha
mov
sar
loop
cs
xor
iret
sbb
push
sbb
mov
aaa
sbb
xor
dec
mov
inc
and
test
cmp
adc
(bad)
fidivr
mov
and
neg
(bad)
push
mul
sar
add
push
or
jae
fs
xor
jne
push
inc
test
outs
adc
dec
mov
mov
and
cmp
cmp
or
inc
sbb
lds
pop
cmps
leave
xor
cmc
or
fucomp
(bad)
retf
loop
imul
pushf
cmp
out
pop
fisub
mov
and
cmp
rcr
retf
out
lods
out
xor
mov
push
ror
jl
cs
add
ds
push
mov
lea
dec
fnstcw
imul
add
cmp
pop
sar
jae
not
js
and
mov
data16
dec
mov
and
fstp
xor
push
pop
cmp
mov
cwde
cs
cmp
into
cmp
bound
jg
mov
call
mov
add
in
push
or
rcl
mov
lods
or
adc
inc
das
or
imul
in
mov
(bad)
loopne
repnz
inc
fcomp
fisttp
inc
pop
xchg
xchg
lods
dec
mov
add
fsubrp
es
arpl
cmp
jecxz
rcl
(bad)
jne
enter
cs
fadd
cmp
iret
or
or
pop
mov
mov
(bad)
hlt
dec
push
push
imul
nop
test
or
clc
not
outs
es
dec
iret
imul
and
aam
ins
jo
pop
adc
movs
xor
xor
dec
mov
jl
pop
or
inc
mov
adc
popa
loop
rcr
test
mov
mov
cmp
fidivr
mov
inc
pop
jns
or
aas
pusha
cmp
clc
push
neg
lahf
(bad)
int
mov
inc
xchg
rcr
call
adc
(bad)
imul
push
cmp
mov
pop
jo
and
dec
pop
outs
xor
out
cmp
stos
xlat
ficom
in
seta
call
push
push
dec
sbb
and
sub
call
jge
out
lods
or
push
clc
icebp
mov
mov
loop
ficom
popf
aaa
add
cdq
and
jp
pushf
push
mov
sub
xor
sub
mov
sbb
xchg
sbb
xor
clc
sub
pop
or
xchg
push
xchg
push
xchg
adc
pop
pop
sub
ja
xor
inc
xchg
aad
jp
jne
sbb
imul
push
out
aaa
push
es
ret
adc
mov
(bad)
and
jp
mov
xor
(bad)
fiadd
sbb
fs
in
mov
add
into
push
cmp
popa
dec
jae
movs
das
jl
add
ss
pop
les
bound
sbb
lea
lods
mov
ja
sub
hlt
xor
test
mov
nop
neg
idiv
ficom
and
aam
jecxz
lods
addr16
aas
in
ds
jp
mov
mov
int3
aaa
hlt
sub
or
fs
sbb
cmp
dec
adc
scas
mov
sub
retf
movs
outs
add
xlat
or
cwde
cmps
retf
adc
mov
jmp
sub
pop
ss
repz
lods
not
je
xchg
jle
inc
stos
scas
popf
call
aam
je
pop
bound
(bad)
adc
(bad)
jne
js
mov
push
dec
xchg
test
xor
out
and
push
sahf
mov
mov
xchg
test
jp
or
enter
cmp
dec
jmp
ret
js
aas
aad
cs
out
mov
outs
pop
arpl
pop
xchg
in
dec
shl
pop
ss
sub
xor
jge
jbe
sahf
in
mov
mov
jle
in
(bad)
sbb
or
inc
dec
(bad)
pop
xlat
push
xchg
fsub
cmp
pause
fiadd
mov
push
push
shl
ja
jl
sahf
pop
sbb
arpl
in
xor
and
mov
(bad)
stos
(bad)
and
adc
icebp
push
sbb
int3
(bad)
mov
inc
cli
test
repnz
ds
jmp
sahf
inc
push
or
gs
mov
lahf
(bad)
in
push
jmp
xchg
(bad)
into
std
sbb
mov
jmp
push
jmp
mov
sub
out
jle
sub
inc
scas
push
ins
sti
dec
js
arpl
pop
cmp
inc
mov
xchg
mov
fisubr
jp
fs
cdq
les
mov
or
cmps
repnz
inc
out
and
test
xor
fisub
pop
pop
dec
mov
jg
(bad)
lock
push
push
lahf
in
add
push
in
sar
loop
cmps
icebp
jge
push
push
(bad)
mov
sub
or
(bad)
adc
scas
loopne
sbb
and
and
or
mov
test
add
movs
out
or
push
sbb
push
ror
xchg
mov
pop
jo
cmp
das
out
sbb
xor
movs
test
retf
pop
bound
ror
sar
bound
inc
jo
push
pop
xor
int3
push
jnp
add
repnz
daa
lea
loopne
adc
mov
repz
push
jmp
ret
mov
xchg
pop
aad
les
scas
pop
mov
xor
inc
icebp
mov
lods
imul
les
dec
add
jp
cli
lods
and
adc
mov
lahf
retf
ret
movq
out
imul
mov
xchg
sub
jbe
mov
test
rcl
iret
push
leave
mov
in
sbb
gs
or
or
fidivr
jmp
popf
mov
movs
pop
inc
pop
into
cli
inc
push
pop
pop
fs
test
leave
das
xchg
cmp
or
ret
jecxz
out
(bad)
adc
(bad)
imul
rcr
iret
and
sub
sub
mov
add
sahf
cld
jne
xor
fs
jl
bound
jae
xor
xchg
mov
dec
addr16
aaa
add
scas
mov
lods
mov
loopne
out
mov
xchg
test
daa
lock
mov
and
adc
lahf
mov
adc
pop
fwait
cmp
adc
xchg
inc
mov
fmul
aam
arpl
add
mov
(bad)
mov
jnp
mov
imul
popf
push
fs
jno
mov
xchg
cmp
in
xor
push
jnp
pop
popf
inc
stos
mov
add
loopne
mov
sub
cwde
call
rol
shl
pop
cld
add
mov
mov
jmp
or
scas
daa
aam
push
cmp
daa
push
jl
sar
mov
inc
out
and
dec
mov
movs
leave
cmp
sub
popa
ins
or
fstp
ror
push
dec
inc
sbb
cmovb
sti
xor
mov
mov
and
pop
cmp
ins
ss
cmp
sbb
test
fimul
xor
sub
sbb
test
fsubr
pop
cmp
xchg
sub
mov
leave
xor
fmul
cmp
out
div
fidiv
(bad)
outs
aad
sbb
daa
bnd
ja
test
add
cmp
cmp
push
jne
mov
loope
bound
sbb
or
add
loopne
adc
cmps
push
je
push
fadd
imul
xchg
pop
push
xor
in
js
jl
rcr
or
ss
jo
add
fcmovnbe
outs
stos
mov
(bad)
and
dec
cmps
mov
xor
mov
mov
sbb
sahf
mov
mov
xor
push
cmp
push
shl
pop
popa
mov
cmps
dec
jae
pop
adc
nop
imul
movs
pop
add
in
push
mov
das
jmp
inc
sbb
and
fs
push
push
ficom
icebp
sbb
mov
pop
adc
push
xor
xadd
pop
push
popf
pop
mov
and
out
int3
clc
outs
push
adc
cmps
addr16
mov
(bad)
or
and
jecxz
push
mov
mov
mov
mov
jg
loop
mov
cld
pusha
scas
shr
nop
xchg
dec
out
fsub
stc
in
jmp
lds
inc
and
rcl
dec
aam
jge
pop
in
xchg
add
sub
adc
xor
mov
out
icebp
jmp
pop
out
shl
xchg
cmp
into
pop
ins
lods
cli
repnz
ret
xor
loopne
jl
or
outs
test
cmp
add
loope
mov
mov
pop
sub
test
std
pop
icebp
jne
fnstcw
in
adc
ja
mov
cmp
retf
(bad)
clc
add
lock
mov
data16
pop
dec
mov
cmc
jg
std
loope
pusha
cmp
adc
inc
into
pop
xchg
xchg
fwait
and
gs
call
mov
inc
mov
stc
call
push
jmp
inc
mov
jmp
outs
pop
add
and
ja
cmp
push
fbstp
imul
into
repz
stc
xchg
popf
mov
int3
loopne
dec
imul
leave
and
jne
(bad)
(bad)
das
div
sar
inc
outs
adc
js
les
dec
mov
stos
loop
sub
(bad)
and
sbb
cmp
sbb
out
jmp
sti
add
xchg
mov
mov
stos
mov
cmp
pop
out
pusha
(bad)
ins
xlat
arpl
jo
xchg
sbb
(bad)
sbb
add
push
pop
pushf
cmp
ss
adc
sub
neg
mov
add
imul
aaa
cwde
in
fcmovnu
and
mov
xor
sub
jge
pop
push
pop
or
push
pop
loopne
mov
xchg
mov
jo
jno
mov
jmp
jecxz
call
cs
sar
push
fcomi
xchg
loop
shr
mov
jmp
je
stos
pop
leave
sahf
into
and
or
repnz
out
clc
ret
mov
mul
jp
jns
outs
pushf
mov
jmp
push
(bad)
xchg
fwait
sub
iret
push
sbb
loop
cmp
enter
and
sti
push
fwait
arpl
sub
fcmove
loopne
mov
xchg
pusha
mov
idiv
das
and
jle
xor
ja
xlat
mov
cmp
sbb
lock
out
fwait
and
inc
push
test
sti
inc
ror
jecxz
pop
imul
(bad)
out
jl
inc
push
daa
xchg
cmps
iret
push
movs
mov
or
sar
mov
lds
aaa
in
imul
inc
inc
imul
lahf
pop
cmps
aam
fild
jns
adc
call
pop
aas
fmul
addr16
in
imul
xchg
lahf
adc
call
mov
mov
movs
cwde
loop
adc
xchg
retf
ins
clc
stos
jg
and
enter
fwait
retf
in
xchg
xchg
aaa
aad
sub
sub
nop
jnp
jmp
or
or
push
hlt
fwait
not
test
popa
retfw
pop
test
jge
nop
clc
sahf
int
add
jp
ret
js
adc
scas
adc
ja
lea
inc
cmp
scas
jecxz
(bad)
sahf
sbb
add
dec
ss
lds
int
and
je
adc
push
call
inc
bound
and
retf
dec
outs
push
mov
adc
daa
dec
out
mov
lds
push
jecxz
mov
xchg
popf
(bad)
(bad)
xor
popa
cmp
call
mov
loopne
in
and
es
sbb
sub
fmul
xchg
movs
or
je
fs
add
in
ins
sbb
(bad)
and
test
adc
test
cmp
outs
outs
psllq
jecxz
ds
mov
popa
jle
shrd
cld
xchg
jecxz
push
sub
enter
adc
or
xchg
and
push
or
push
call
fs
sbb
and
add
pop
jnp
cmps
out
jno
ins
mov
push
push
adc
enter
add
pop
mov
and
inc
sbb
inc
sahf
inc
out
fild
aam
push
inc
pop
test
cld
push
leave
pop
icebp
or
mov
cs
rol
and
mov
push
mov
sub
add
mov
or
neg
(bad)
loopne
sbb
mov
int3
inc
imul
push
int
aad
xor
sub
dec
cmp
adc
fist
lahf
jne
push
mov
push
and
xor
add
or
loope
iret
mov
mov
dec
pop
jecxz
les
inc
adc
cld
out
fwait
xor
call
cs
mov
icebp
mov
sbb
xchg
push
adc
cmp
mov
add
(bad)
mov
pop
push
aad
test
frstor
mov
ret
sbb
loop
bound
push
inc
mov
ror
xchg
sahf
ins
or
push
or
jbe
mov
sti
int
mov
arpl
dec
xor
xchg
pop
dec
mov
xchg
outs
out
cmps
leave
enter
repz
push
or
xchg
cmp
lds
jmp
push
or
pop
(bad)
push
push
jae
sub
adc
rcr
adc
sbb
push
or
or
call
dec
into
dec
(bad)
push
shr
loop
xor
pop
mov
jb
daa
or
mov
ret
dec
pop
outs
repz
ja
xchg
inc
div
lods
clc
lea
movs
mov
jmp
icebp
fcmove
cmp
cmp
cmp
push
out
retf
and
push
xchg
or
cli
push
stc
(bad)
lods
fs
cmps
scas
leave
out
and
test
in
out
popa
inc
stos
jns
(bad)
mov
mov
adc
or
ins
in
jmp
iret
pop
in
sub
mov
ins
call
out
mov
ds
fs
retf
sub
jmp
shl
push
test
fimul
xor
ja
enter
loope
ss
pop
in
mov
hlt
in
aad
adc
stos
and
outs
sbb
add
cld
gs
push
enter
loop
fistp
sbb
mov
call
jmp
push
cmp
dec
and
pop
das
lock
mov
or
out
test
sbb
lock
and
or
jne
mov
xchg
jo
or
add
add
into
cld
add
lods
lea
dec
mov
lds
enter
mov
pusha
inc
retf
div
xchg
out
or
inc
cmp
xor
movs
je
adc
mov
add
fst
test
add
push
fs
dec
jae
(bad)
inc
mov
fstp
jmp
loop
push
out
xchg
xchg
fsub
cli
ins
pop
mov
sbb
out
and
rol
sub
or
pusha
xor
(bad)
mov
sar
mov
inc
xchg
mov
inc
mov
mov
pop
ja
lahf
add
cld
mov
inc
mov
sbb
movs
fst
pop
mov
icebp
outs
sbb
dec
jle
adc
int
inc
ror
cmp
not
push
add
xor
test
sbb
bound
iret
test
movs
mov
cmps
xor
pop
aad
mov
ds
daa
ins
add
je
lods
sub
in
cld
movs
(bad)
out
lahf
fsubr
xchg
jo
xchg
inc
inc
sub
cmp
mov
loope
xlat
push
and
sub
mov
lock
add
push
fsubr
pusha
xchg
and
iret
stc
mov
adc
mov
lods
add
sbb
rcr
xor
stc
push
imul
daa
addr16
ret
es
push
or
imul
mov
in
scas
mov
xchg
sti
fcom
pop
or
loop
sbb
sub
nop
and
dec
mov
push
xchg
ins
leave
mov
leave
es
add
mov
sub
mov
inc
ins
xchg
and
call
pop
mov
xor
pop
stos
mov
cs
outs
xor
dec
jmp
lahf
xchg
test
lea
sbb
dec
and
loope
stos
aam
(bad)
call
mov
push
xor
test
loope
scas
adc
fist
dec
in
sub
dec
outs
ds
add
xor
inc
cmps
pop
cmp
inc
xchg
push
stos
cwde
or
cmp
retf
fwait
cmp
(bad)
mov
rcl
cmp
mov
xor
xor
pushf
jecxz
es
frstor
adc
jbe
cmp
inc
fist
or
cmp
cmp
xor
sub
jle
les
push
adc
push
test
jp
cmp
jnp
retf
inc
call
std
mov
inc
inc
jl
sti
call
jmp
cmps
pop
jmp
repz
mov
addr16
and
iret
jns
push
aam
sbb
add
jbe
push
ds
pop
push
mov
(bad)
int3
or
or
icebp
inc
cs
out
mov
jmp
xor
and
sub
fldcw
imul
daa
into
xor
push
inc
push
mul
jmp
xlat
mov
xchg
aas
nop
pop
mov
jnp
stos
or
mov
mov
or
call
xchg
int
xor
mov
test
push
pop
fs
inc
dec
mov
dec
mov
outs
add
fadd
push
pop
push
jne
mov
sahf
inc
or
out
jg
or
mov
clc
dec
mov
std
lahf
dec
fist
inc
(bad)
in
into
cwde
ss
pop
rcl
or
lock
push
inc
loope
cmp
popf
fs
pxor
mov
adc
mov
leave
rcr
out
adc
pop
cmp
sub
dec
xor
mov
inc
xor
xchg
es
push
fwait
sub
xor
lea
(bad)
iret
jo
mov
pop
bound
xor
xchg
ror
mov
add
js
pop
and
out
arpl
ret
cs
lea
xor
shl
arpl
(bad)
call
dec
stos
sar
dec
mov
in
std
mov
sub
jge
fadd
out
iret
jle
mov
jb
iret
push
outs
mov
xchg
xchg
aad
xchg
fsub
les
mov
sahf
xchg
mov
or
out
jle
xchg
xchg
jl
cmps
mov
stos
es
leave
adc
inc
mov
mov
and
movs
(bad)
adc
in
mov
mov
fist
and
push
inc
jo
out
popf
push
je
je
push
mul
mov
sub
cmp
movs
pusha
push
mov
fsubrp
xchg
out
aaa
and
lahf
leave
xchg
inc
mov
cli
xor
loopne
mov
xchg
xchg
lods
jmp
and
sti
sub
sbb
int
add
int
jl
sub
mov
outs
and
aam
mov
(bad)
rcl
cmps
mov
imul
ret
data16
push
xchg
stos
sbb
sbb
push
adc
fild
mov
jno
or
ins
xor
daa
test
aam
jecxz
cdq
jno
mov
and
mov
loopne
sub
xchg
dec
ja
push
mov
aad
xor
clc
mov
mov
adc
test
je
mov
sbb
pop
pop
nop
xor
loope
retf
(bad)
ds
jmp
pop
dec
xchg
mov
add
rcr
stc
mov
pop
fcmovnu
dec
arpl
sbb
arpl
gs
ins
add
popa
rol
jbe
jb
push
xchg
fdiv
scas
mov
xor
cs
jb
fnsave
dec
cmp
pop
ficom
mov
pop
loop
int
and
mov
sti
pop
into
push
add
pushf
xchg
(bad)
mov
jecxz
mov
push
mov
add
pmaddwd
mov
sti
lods
push
loop
into
cmp
cmp
scas
xchg
mov
jg
ss
add
into
jne
out
cs
retf
inc
jnp
aas
adc
mov
push
stc
ss
cli
mov
cmp
xor
out
test
mov
push
js
std
add
lods
fnstsw
mov
jns
jp
lea
sbb
cdq
xchg
sbb
mov
popa
mov
stc
and
mov
inc
(bad)
in
pop
pop
stc
pop
inc
add
jbe
mov
(bad)
push
or
retf
fadd
fs
and
addr16
mov
xor
push
pop
ficomp
adc
movs
jmp
inc
addr16
ror
stos
adc
lods
shl
inc
ja
cli
movs
xor
sub
cmp
lods
fcom
push
jnp
mov
fbld
ror
xchg
ret
sub
cmc
dec
movs
je
push
mov
data16
adc
jge
add
(bad)
aad
cdq
sbb
scas
jne
pop
mov
xor
push
outs
call
jne
mov
popa
xchg
pop
sbb
mov
leave
into
cmp
xchg
ja
(bad)
cmc
cs
pushf
leave
or
pop
push
dec
cmc
pop
mov
int3
xchg
call
mov
jbe
jo
push
mov
sbb
push
ficomp
sbb
fsubr
xor
push
fcmovb
mov
cmps
sub
or
or
iret
cmp
cwde
mov
int3
in
sbb
je
or
add
lods
call
addr16
repnz
xor
add
repnz
retf
sahf
loope
in
mov
cmc
mov
in
movs
fcmovu
pop
sbb
adc
nop
push
push
inc
shl
push
xlat
das
push
and
xchg
pop
adc
cmps
clc
add
jno
fist
adc
clc
xchg
cmp
out
pop
sub
push
xchg
hlt
jb
mov
mov
jp
retf
cwde
movq
pop
out
pop
push
xchg
lods
mov
bound
aad
xchg
aam
mov
push
add
scas
jp
in
cmp
adc
stos
cmps
sub
scas
iret
std
dec
rcl
mov
ins
dec
mov
inc
sbb
test
stc
mov
mov
dec
pop
hlt
repz
ins
jecxz
dec
or
test
mov
in
jns
sub
mov
xchg
xchg
mov
jl
aam
test
stos
push
pop
jp
bound
inc
mov
dec
add
test
jo
fs
cmp
repz
jmp
clc
imul
test
mov
mov
fidivr
popf
cmp
not
and
inc
pop
fdivr
jge
scas
cdq
outs
jl
xchg
imul
fadd
mov
mov
js
mov
lods
mov
xchg
rcr
and
xchg
jns
mov
and
push
std
aas
loope
bound
xchg
sti
cwde
xor
dec
aas
test
cwde
adc
push
sub
mov
ret
movs
add
inc
and
ret
mov
mov
adc
xor
sbb
jne
inc
cmp
popf
jmp
gs
jnp
mov
xor
lds
outs
into
das
push
mov
xor
jge
jae
xchg
jae
fnsave
dec
adc
in
(bad)
xchg
test
mov
sbb
test
adc
jb
jmp
in
ficom
gs
ret
xchg
ret
popf
leave
in
cmp
dec
cmp
jmp
das
mov
rcr
mov
sub
add
dec
dec
push
dec
popf
jnp
xchg
movs
jns
icebp
in
ins
stos
xchg
imul
shr
sub
icebp
jp
xchg
xor
cmp
ja
(bad)
loope
call
aas
test
jg
cmp
iret
cwde
push
xchg
in
push
arpl
sub
fs
out
pop
push
les
jmp
data16
jge
inc
mov
add
fcom
or
mov
and
or
rcr
ds
stc
jp
and
sar
or
lahf
adc
dec
aaa
inc
pop
xchg
retf
dec
inc
dec
arpl
mov
loopne
sub
mov
lea
and
cmp
fs
adc
pop
xor
mov
and
pop
pop
movs
mov
dec
nop
nop
enter
and
sbb
xchg
test
ins
mov
movs
aaa
mov
shr
in
retf
mov
hlt
lock
add
out
xchg
and
xchg
test
cmp
cmp
sub
jge
jmp
push
sbb
sub
out
(bad)
std
adc
bound
cmc
or
pop
ret
sbb
jg
mov
push
and
add
movs
or
ins
lds
sbb
xchg
sub
push
movs
jns
jmp
lahf
nop
sbb
popf
movs
stos
sub
pop
mov
add
and
ror
cli
aaa
sub
xor
call
leave
sub
sbb
jp
test
jp
mov
aaa
inc
icebp
sub
fdivp
int3
fild
sti
nop
sub
loopne
out
jecxz
pop
inc
sub
(bad)
sti
into
lea
fnstsw
mov
test
sub
push
inc
xlat
adc
cmp
jg
jmp
out
loope
jp
fimul
jmp
shl
inc
sub
or
sub
pop
mov
mov
nop
mov
xor
stc
push
xbegin
test
out
sti
inc
pusha
jp
lods
sub
fisttp
mov
xchg
shr
mov
cmp
jle
loopne
data16
das
retf
mov
stos
add
or
jmp
and
call
shl
iret
xlat
mov
pop
pushf
test
pop
push
cmps
fmul
xchg
mov
jae
and
les
popa
fimul
leave
pusha
repnz
push
mov
mov
fadd
rcl
dec
lea
fmul
mov
call
dec
mul
jbe
pop
js
pop
adc
test
or
xchg
inc
shr
or
cli
xchg
(bad)
pop
mov
rcl
enter
mov
ror
jmp
jo
mov
loop
mov
fwait
imul
jns
sbb
stos
loopne
scas
pop
pop
jnp
in
adc
sbb
mov
int
push
and
inc
sub
or
jo
stos
pushf
sub
fcom
jg
xchg
sbb
frstor
xchg
icebp
mov
std
daa
aam
xchg
ins
gs
ins
fistp
mov
ret
cmp
add
int3
sar
xchg
sahf
fisttp
jle
mov
(bad)
pop
adc
pop
xor
sahf
push
add
mov
dec
or
cli
jmp
mov
out
inc
mov
std
and
cmp
repz
xchg
aad
inc
stos
scas
fmul
mul
sbb
and
inc
cmps
xchg
(bad)
mov
imul
in
and
inc
xchg
pop
mov
sub
jae
push
xchg
fwait
add
dec
test
test
(bad)
pop
xchg
add
xor
mov
std
jp
and
ror
jo
push
inc
sbb
scas
mov
gs
stos
gs
ins
enter
adc
(bad)
or
xchg
cmp
push
jg
add
push
push
bound
dec
sti
(bad)
xor
ret
shl
mov
hlt
push
xchg
sti
scas
or
lock
sub
dec
ss
fistp
adc
addr16
inc
pmaddwd
mov
mov
jmp
inc
test
lods
push
xlat
adc
mov
dec
mov
push
inc
sbb
fstp
div
outs
and
and
pop
pop
add
add
test
aas
es
retf
repz
pop
mov
in
sub
sub
mov
fnstsw
mov
mov
dec
enter
cmp
dec
std
lea
pop
lahf
mov
jae
leave
retf
fstp
inc
inc
hlt
xor
cmp
hlt
movs
inc
cmp
xor
cmps
ficom
retf
das
icebp
dec
xor
pop
pop
jo
adc
call
rol
fwait
cmc
popa
xor
cmp
push
mov
outs
ret
sbb
aaa
mov
inc
es
xchg
xchg
imul
(bad)
scas
aam
add
and
cmovns
sub
cmc
cmp
push
pushf
stos
fdivr
sub
gs
push
stos
mov
add
sub
inc
mov
enter
sub
dec
push
or
mov
gs
out
pop
push
cli
xlat
in
xor
adc
(bad)
mov
jns
mov
inc
mov
shl
sub
rcr
jno
sahf
push
outs
xor
movs
lods
inc
inc
sbb
hlt
sbb
dec
scas
inc
aas
adc
cmps
fcmove
popf
cmp
xchg
sub
call
mov
out
dec
ja
mov
push
jp
retf
pop
add
fisttp
aam
push
daa
hlt
xchg
dec
or
hlt
outs
iret
jne
cmp
iret
xchg
xor
loope
in
push
or
fnstsw
mov
(bad)
test
mov
(bad)
shl
push
movnti
mov
out
pop
leave
aaa
mov
mov
sar
pop
in
add
xchg
xor
iret
xor
idiv
(bad)
cmp
xchg
adc
retf
clc
aam
jnp
adc
stc
mov
jge
inc
outs
push
arpl
hlt
mov
cmc
pop
jl
or
add
in
fwait
xchg
ret
(bad)
xor
popf
jno
cmp
xlat
jle
inc
xlat
pop
out
rol
xchg
sbb
xchg
fsub
cmp
push
push
das
out
pushf
mov
pop
sub
lock
lahf
xchg
xchg
arpl
pop
(bad)
int3
loopne
push
imul
sub
(bad)
(bad)
push
cmp
outs
jo
mov
sub
push
add
bound
xchg
pop
inc
mov
pop
xor
fist
dec
stos
adc
ror
adc
cmc
pop
ins
sbb
mov
inc
mov
add
push
imul
dec
arpl
mov
shl
dec
stos
mov
sub
das
sbb
push
arpl
hlt
(bad)
retf
push
push
inc
retf
imul
les
add
fcmovu
out
ja
or
in
add
jne
outs
mov
fwait
xchg
mov
in
dec
add
push
icebp
push
and
sbb
mov
sbb
jmp
stos
mul
add
shl
sub
fmulp
xor
cmps
fstp
or
ins
call
stos
pushw
sub
sbb
jbe
outs
call
fisttp
int3
ret
inc
setno
fsubr
fwait
imul
fs
mov
pop
jb
mov
and
lods
pop
or
(bad)
push
test
xchg
sti
and
mov
(bad)
jns
mov
retf
xor
and
test
mov
loopne
retf
imul
aam
mov
stos
ret
fisttp
cmp
mov
jge
imul
pop
and
mov
inc
xor
icebp
std
(bad)
sbb
pop
mov
retf
(bad)
lods
push
mov
lods
pop
ja
cmp
scas
(bad)
je
std
enter
jle
mov
jo
ret
cld
repz
or
addr16
xchg
and
xchg
out
push
or
jnp
pop
xlat
in
inc
test
ins
xchg
cmps
jae
add
add
clc
out
sub
sbb
sbb
jb
frstor
fwait
sub
bound
pop
movs
cmps
cwde
mov
xor
pop
xchg
or
push
and
call
pop
out
add
stc
cdq
add
adc
js
sub
daa
imul
push
sub
imul
inc
shl
mov
mov
xchg
inc
ss
fistp
cmp
xchg
mov
and
mov
ret
mov
dec
adc
push
jo
or
dec
xchg
mov
pop
clc
movs
sub
data16
outs
dec
pop
in
push
loop
sahf
sub
xor
jl
and
mov
push
xlat
mov
mov
int3
sbb
outs
dec
push
and
daa
lock
pop
jno
push
jmp
sub
dec
and
stos
mov
dec
jns
sbb
add
mov
inc
push
jnp
ret
push
sar
pop
or
aad
movs
in
aad
add
cmps
jp
mov
add
mov
stos
sub
sub
and
mov
or
in
ja
push
js
jae
movs
fdivr
jae
test
mov
(bad)
and
fisttp
and
sub
xchg
mov
jecxz
enter
ret
xchg
stos
cs
cmp
scas
add
jecxz
inc
stc
jae
or
add
xchg
adc
or
xchg
pop
in
jae
outs
test
leave
hlt
and
daa
(bad)
adc
and
iret
mov
loop
jge
aam
xlat
stos
mov
adc
dec
mov
mov
sbb
xchg
jg
call
jge
ins
cmp
test
loop
mov
cmp
xchg
aam
pop
xor
pop
pop
jmp
pusha
test
std
jne
fdiv
repz
sbb
aad
mov
pushf
inc
or
mov
push
neg
pop
loopne
(bad)
xor
out
xor
scas
loope
lock
call
pop
stos
fcomip
lods
sub
cmc
xor
and
rcr
fwait
xor
mov
test
dec
add
out
jnp
pushf
retf
or
dec
sbb
and
xchg
popa
or
mov
add
pop
enter
push
sar
adc
sahf
(bad)
pop
add
jns
mov
mov
aaa
test
outs
and
cmps
lods
sahf
(bad)
mov
push
lea
(bad)
in
loope
imul
or
daa
jae
add
test
sbb
retf
sbb
js
pusha
push
lahf
hlt
or
cmp
mov
ds
je
mov
dec
cmp
cmp
mov
imul
jl
mov
clc
jbe
test
sub
sub
ficomp
fwait
dec
xor
and
dec
mov
movs
ins
cmp
outs
nop
dec
ins
jns
fidivr
add
lock
cli
daa
add
push
fild
and
in
inc
movs
loope
xchg
xor
pop
sub
mov
add
outs
cmp
pusha
jb
movs
pop
lods
aas
adc
inc
sub
mov
pop
mov
adc
sbb
ja
(bad)
jl
ins
cwde
pop
ins
mov
inc
pop
sub
ficom
pushf
mov
push
sbb
inc
cdq
lock
mov
push
jne
mov
movs
not
int3
inc
cmps
shl
fmulp
sub
mov
adc
rol
fadd
inc
cmc
push
pop
adc
or
popf
pop
jmp
cmp
cmp
call
sub
imul
fadd
popf
fs
jg
std
cmp
push
sub
push
shl
mov
push
mov
ins
pop
mov
dec
fwait
ins
add
imul
and
sahf
jne
push
int3
and
sbb
push
inc
mov
and
in
mov
ins
or
test
cli
jmp
rol
mov
js
call
push
jg
inc
xchg
dec
movs
lahf
in
mov
out
and
jle
adc
popa
xchg
stos
mov
mov
pop
scas
xchg
pusha
(bad)
and
not
bound
sbb
xchg
push
data16
cli
cld
push
push
fst
mov
inc
ror
jecxz
or
imul
adc
pushf
add
xchg
sbb
pop
dec
fcom
cld
pusha
xchg
xchg
xor
lods
mov
add
sbb
and
mov
dec
retf
loope
cmp
cmp
(bad)
sar
and
and
ror
dec
add
push
inc
mov
sub
xchg
test
inc
jge
in
test
cmp
imul
das
mov
ror
pusha
mov
imul
js
jmp
jl
sub
sbb
pop
mov
pop
push
clc
repnz
fcom
add
nop
out
xor
add
mov
test
jp
not
lods
fsubr
mov
xchg
sbb
jg
sar
(bad)
out
xchg
push
outs
sar
sub
sbb
inc
jae
mov
add
cmp
sti
aaa
loope
in
je
xlat
mov
sub
(bad)
aaa
idiv
dec
js
xor
in
mov
mov
rcr
aaa
jp
jl
iretw
adc
addr16
and
add
call
push
xchg
adc
jnp
jge
xchg
push
outs
lock
dec
xchg
test
push
xor
sbb
fst
inc
sbb
retf
cmps
bound
mov
xchg
outs
call
mov
out
stc
push
fcomip
pushf
rol
es
jmp
lahf
or
sub
sub
jp
in
outs
add
aaa
push
sbb
inc
xchg
movs
dec
push
mov
aas
dec
inc
mov
popf
mov
push
dec
int3
cmp
inc
inc
or
pop
inc
ret
push
inc
ins
out
pop
xor
jnp
dec
add
mov
add
adc
mov
xlat
(bad)
mov
leave
sub
popa
sub
(bad)
iret
dec
jno
mov
ss
adc
push
jns
test
ror
scas
xor
fwait
sar
rol
mov
mov
mov
jmp
and
loope
enter
mov
or
mov
jp
jl
sub
mov
jb
retf
in
mov
(bad)
mov
stc
add
enter
or
adc
ins
sbb
inc
add
ror
or
into
inc
rcl
jmp
test
sbb
xchg
gs
retf
and
ret
int3
add
mov
mov
fnstenv
imul
scas
cmc
add
sub
or
inc
(bad)
xor
or
icebp
not
sti
inc
jnp
jb
mov
cmc
imul
sub
nop
mov
xchg
shl
ret
mov
dec
dec
fistp
mov
xchg
shl
or
in
rcl
mov
repz
and
rcl
ja
rol
jle
and
scas
dec
in
push
cmp
sbb
sub
mov
ret
mov
mov
pop
push
inc
aad
pop
sub
(bad)
ss
into
xchg
pop
fs
lea
outs
ins
xchg
dec
stos
arpl
fcomp
pop
ret
aas
pop
mov
sbb
mov
cmp
mov
jecxz
jns
movs
mov
push
ror
sbb
mov
xchg
sub
mov
jmp
xor
les
arpl
xor
jno
mov
dec
out
mov
je
clc
mov
fisub
xchg
or
mov
repz
add
iret
scas
push
shl
retf
jns
retf
xchg
xchg
loop
mov
fcomp
mov
xlat
in
iret
add
adc
aaa
(bad)
ds
mov
push
pop
adc
push
mov
in
sahf
adc
pop
scas
push
adc
fisub
mov
add
sbb
daa
lea
in
mov
jno
mov
sbb
add
xor
pop
das
sbb
sbb
aas
repnz
mov
fdivr
mov
in
pop
pop
jmp
popa
call
jb
dec
outs
xor
jmp
cmp
mov
arpl
and
and
add
sub
clc
cmps
add
sbb
mov
cwde
or
or
dec
sbb
xchg
mov
jle
dec
mov
inc
scas
cs
mov
in
out
les
sub
idiv
push
scas
mov
out
ror
in
mov
adc
jbe
inc
cs
ffree
fisubr
xchg
mov
mov
xchg
in
jo
lods
in
mov
out
imul
iret
aaa
sbb
ret
aaa
push
aam
sbb
lahf
sbb
xchg
adc
or
xor
pushf
in
test
cmp
xchg
or
jle
out
xchg
and
sub
movs
(bad)
daa
fdivrp
loope
cmp
mov
into
(bad)
jnp
mov
sub
mov
mov
ja
jo
dec
xchg
and
shl
aas
movs
rcl
mov
js
int3
in
dec
into
inc
mov
pop
sar
mov
in
outs
push
stos
add
aad
jecxz
jnp
(bad)
add
push
mov
sub
and
cli
adc
or
out
shl
mov
sar
clc
neg
sbb
(bad)
dec
jp
pop
dec
int
loope
push
lods
arpl
pop
mov
dec
gs
outs
xchg
andnps
xor
js
mov
ret
stc
mov
int3
xchg
std
ja
add
ja
lock
sub
das
inc
sub
pop
push
push
ds
add
stos
mov
xor
pop
adc
add
mov
gs
out
jae
adc
or
out
pop
dec
lock
cmp
xchg
adc
popf
add
retf
mov
push
jae
and
lahf
push
mov
fdivr
or
xlat
mov
inc
outs
sbb
mov
sar
push
mov
push
retf
xchg
pop
adc
and
mov
push
in
imul
inc
xchg
xor
mov
movs
ss
lds
push
sub
sti
pop
clc
inc
jb
in
and
ret
pop
sahf
lds
pop
push
lea
scas
inc
add
jb
or
inc
push
test
ror
test
daa
jbe
or
in
into
aam
inc
jno
adc
ror
mov
cmc
fistp
pop
rcl
cmp
clc
mov
and
add
sub
lods
ds
dec
cdq
mov
adc
shr
shr
into
push
mov
repz
repz
dec
lock
sub
popf
test
stos
jae
sub
pusha
add
adc
jmp
cmp
push
push
lods
push
loope
dec
pop
xchg
dec
ss
gs
sbb
push
cmc
add
pop
mov
jle
mov
jmp
imul
or
call
cli
push
xchg
int
xchg
jno
aad
ret
lods
pushf
pop
and
inc
leave
mov
aam
icebp
sbb
leave
test
popa
xor
mov
add
xchg
in
int3
push
mov
push
xor
inc
imul
add
es
inc
ret
fmul
jmp
xlat
push
push
xlat
enter
or
in
mov
loopne
lea
cmp
scas
movs
outs
dec
popa
pop
xor
fisub
xchg
and
ret
mov
push
ror
xor
ins
add
rcl
lods
mov
mov
(bad)
sub
cwde
nop
ficomp
mov
xchg
xchg
xchg
leave
jmp
cmc
xchg
adc
(bad)
sub
movs
push
leave
movs
mov
dec
push
push
push
std
(bad)
fmulp
test
cmp
dec
sub
(bad)
icebp
xchg
stos
rol
jp
ret
mov
sbb
call
cmp
in
jg
dec
dec
aam
push
(bad)
test
mov
outs
xor
and
(bad)
xlat
and
stc
mov
pushf
and
repz
jle
cmc
jp
cmp
push
and
mov
ins
mul
hlt
add
add
dec
int
(bad)
jmp
psubsb
xchg
aaa
push
lock
fadd
xor
dec
jno
cmc
jno
in
(bad)
mov
out
test
mov
xchg
cmp
pushf
xchg
jno
in
mov
pop
adc
js
jno
inc
loopne
fcmovb
repz
xor
sbb
retf
scas
xchg
cmp
aas
push
out
mov
xor
pop
ds
arpl
ss
push
shr
inc
repz
or
pop
aaa
xchg
xchg
or
cld
push
les
adc
int3
push
mov
or
arpl
push
aaa
jmp
mov
cdq
cmc
ret
fild
inc
or
pop
xchg
or
and
cmc
ss
sub
movs
jae
inc
sub
sbb
aaa
js
fdiv
push
icebp
test
jg
ds
daa
pop
add
cld
push
popa
movs
into
clc
mov
inc
jno
clc
xchg
pop
and
push
retf
jns
add
push
or
pop
arpl
in
mov
or
mov
enter
loope
ret
test
cmp
mov
mov
lahf
cli
stc
ins
movs
xlat
adc
pop
bound
daa
lahf
jns
cs
jmp
ret
imul
mov
push
fst
cmp
leave
jbe
mov
cmp
retf
xchg
iret
xchg
cmp
jmp
or
adc
jp
sahf
cmp
js
mov
adc
mov
mov
das
aaa
add
mov
out
xlat
xchg
mov
out
push
mov
pop
sub
inc
xchg
pop
test
test
and
popf
ds
cmp
push
dec
in
and
dec
sub
inc
or
push
xchg
jo
fs
enter
ins
xchg
pop
pop
movs
mov
ror
iret
xchg
cmp
in
icebp
retf
cld
cli
inc
fs
mov
ins
jle
or
adc
bound
mov
add
inc
jne
pop
sub
sub
mov
dec
mov
cmp
ins
and
adc
adc
cmps
cmps
(bad)
cmp
das
fcmovnb
xlat
xlat
ss
xchg
ret
in
stos
into
xor
add
mov
or
adc
cld
test
sub
pop
lods
std
repz
adc
xchg
iret
mov
int
push
mov
push
sub
out
fidivr
(bad)
pop
hlt
mov
scas
test
in
cwde
mov
jae
adc
rcr
or
in
inc
dec
inc
(bad)
push
test
imul
dec
int3
add
les
fcom
mov
test
pop
xor
jg
popa
nop
jg
leave
push
xchg
xchg
or
movs
cmp
(bad)
(bad)
clc
addr16
mov
or
add
jg
mov
jl
out
sub
hlt
inc
arpl
into
mov
out
pushf
in
out
dec
loopne
int
(bad)
mov
das
or
mov
mov
ss
sub
inc
push
imul
xor
sub
ror
out
sbb
xor
aad
dec
and
fld
rcr
sbb
mov
adc
popf
ret
jle
mov
jo
cld
sub
adc
lea
int3
xchg
mov
xlat
fbld
arpl
stos
cmps
xchg
std
retf
out
cmp
jo
jne
add
xchg
je
add
loopne
inc
and
movs
mov
jg
ja
add
cwde
in
jb
leave
add
xchg
inc
mov
dec
xchg
lea
mov
mov
jge
movs
loopne
bound
mov
xchg
movs
xchg
dec
mov
rcr
sub
jb
dec
push
(bad)
or
push
jbe
mov
in
loopne
mov
fadd
mov
lds
div
xchg
mov
test
sbb
mov
or
mov
leave
jnp
div
sbb
test
push
inc
dec
jb
adc
pop
cmp
cmps
shl
xchg
daa
mov
int
add
(bad)
aad
mov
and
mov
inc
rcr
ins
xor
xchg
push
es
je
mov
(bad)
repnz
dec
xor
push
inc
sub
adc
stos
xor
or
cmp
sbb
lock
push
cmps
cdq
test
push
mov
rol
dec
enter
inc
in
out
add
fcmovnbe
out
dec
add
int
mov
sbb
popf
enter
dec
pushf
fistp
shl
retf
inc
xchg
mov
(bad)
out
aaa
xchg
inc
popf
retf
jl
mov
shl
repnz
test
jb
call
mov
cs
add
mov
mov
sahf
data16
cmps
push
pop
adc
cli
nop
fs
adc
outs
cmp
outs
sub
fucomip
in
cmp
jns
ficomp
inc
mov
mov
les
in
jnp
pop
lods
(bad)
ss
and
mov
test
in
lods
mov
ror
xor
pop
ds
mov
push
jg
pushf
and
push
adc
sbb
mov
ins
out
push
cmps
mov
out
adc
xchg
push
dec
mov
movs
jle
movs
rcr
jge
shr
pusha
push
(bad)
test
inc
je
imul
in
out
pop
ins
inc
cmp
aad
lods
xchg
push
inc
mov
clc
mov
or
aam
mov
add
push
mov
mov
fsubr
pop
pop
pop
inc
add
daa
mov
add
ss
int
shl
enter
arpl
aam
pop
push
add
cmp
test
xchg
mov
cmp
mov
mov
sti
push
push
test
fld
dec
mov
cmp
mov
add
push
movs
pop
call
jle
(bad)
shl
dec
ins
pop
push
mov
repnz
push
in
ss
arpl
cdq
jmp
das
shr
mov
jecxz
outs
xchg
imul
or
push
xchg
inc
repz
xor
sbb
pop
jae
mov
in
out
mov
or
hlt
in
loopne
jg
out
pop
jecxz
test
retf
imul
cli
jae
xor
out
(bad)
ret
jmp
sbb
cmp
inc
mov
lock
je
popa
pop
outs
cmp
jo
repz
stos
xchg
mov
xchg
stc
cmp
sub
jns
cmp
lods
fstp
add
shr
mov
mov
repnz
and
(bad)
mov
add
movs
inc
pushf
cs
div
out
pop
dec
mov
pop
mov
pop
jb
or
push
push
push
movs
mov
sub
push
cli
jle
dec
sbb
xlat
inc
cmc
xchg
xor
xor
adc
aaa
in
retf
bound
ins
pop
jb
xor
xor
and
scas
loope
inc
test
ror
fwait
push
dec
sbb
mov
xlat
cmp
aas
inc
cmp
mov
mov
sub
neg
fild
loope
push
mov
iret
add
mov
and
mov
out
push
inc
sbb
add
pop
jmp
mov
loop
das
and
push
xchg
cmps
ror
cli
add
lods
and
nop
sahf
inc
mov
daa
sub
xchg
jnp
mov
imul
sbb
push
push
in
ret
sub
ret
push
jnp
jo
dec
pop
pop
test
lock
pop
(bad)
cmp
and
retf
fsubrp
mov
fcmovnb
push
in
adc
je
mov
fistp
and
imul
scas
mov
mov
std
(bad)
mov
imul
cli
in
sbb
fsub
stc
fucom
adc
sub
mov
pop
xchg
mov
xor
mov
inc
mov
loop
mov
(bad)
mov
imul
std
sub
mov
lock
adc
popa
push
add
mov
es
(bad)
mov
and
les
cmps
aam
add
mov
lods
ins
loope
movs
sar
cld
hlt
loop
and
pop
not
push
in
imul
cli
inc
data16
pusha
ins
jo
or
pushf
lock
cwde
cmp
popf
sahf
and
inc
stos
test
sbb
nop
adc
xor
xchg
mov
mov
adc
sub
mov
mov
test
gs
pop
dec
or
enter
test
push
pop
pusha
push
push
push
ja
test
and
daa
rol
inc
mov
in
cmp
sbb
mov
or
sub
and
adc
push
sbb
stos
lods
or
cmp
aam
mov
xchg
daa
in
mov
cmp
and
das
mov
shl
jae
cdq
cmp
inc
add
shl
daa
mov
cmp
loopne
add
xor
aam
into
lock
push
je
xor
into
ds
adc
mov
rcr
mov
adc
jo
aad
and
loope
out
pop
xor
(bad)
sbb
loope
outs
xor
and
push
test
cmps
ror
pop
mov
out
mov
jb
jmp
dec
(bad)
mov
inc
pop
stc
popf
xchg
fist
lods
add
repz
mov
cmc
adc
cmp
or
xor
jmp
mov
test
xchg
mov
test
into
sub
pop
rol
xchg
and
loopne
fistp
adc
mov
jmp
push
dec
mov
inc
jno
mov
push
or
loopne
jle
(bad)
mov
xchg
and
ror
cdq
xchg
nop
pusha
stos
int
push
mov
inc
bound
out
int3
push
mov
sub
mov
repz
lods
(bad)
scas
pop
mov
jge
add
fnstcw
retf
lods
pop
or
xchg
es
lods
xchg
neg
cli
(bad)
jmp
int3
dec
push
cmc
push
mov
(bad)
cld
add
jne
or
dec
sub
outs
stc
(bad)
mov
mov
fistp
inc
pop
pop
mov
int
and
pop
or
mov
sub
repz
mov
pop
xor
popf
mov
lahf
pop
mov
inc
pushw
jge
pushf
bound
cli
scas
cmps
popf
imul
rcr
ret
lock
push
cld
pop
pop
xor
les
pop
cs
popa
ror
pusha
lods
push
ds
mov
(bad)
aaa
addr16
sub
mov
scas
into
cmp
pop
mov
in
in
icebp
sbb
iret
call
xor
jb
and
je
pop
dec
mov
inc
inc
mov
sbb
inc
push
sub
es
jle
popf
and
and
jmp
pop
pop
dec
mov
enter
xor
dec
sub
dec
add
and
aad
push
or
nop
jge
pop
jne
repz
add
mov
and
lea
scas
call
in
add
into
mov
mov
jmp
(bad)
enter
xor
push
sub
cdq
retf
inc
call
ficomp
or
cs
inc
test
call
mov
mov
sbb
cs
dec
lods
out
addr16
adc
das
dec
sbb
pushf
(bad)
and
sbb
mov
cmp
fcmovnbe
dec
imul
xchg
adc
xchg
sub
cmp
(bad)
repz
xchg
jmp
ror
cli
cdq
out
and
jl
mov
and
dec
cmp
sbb
mov
push
repnz
push
sub
std
adc
arpl
xchg
or
fwait
push
repnz
cld
adc
aas
lods
push
(bad)
sbb
iret
add
jle
rol
mov
xchg
sub
cli
js
push
in
push
cmc
cmp
jne
mov
adc
and
cdq
jl
dec
es
inc
out
in
mov
mov
or
(bad)
repz
rol
in
mov
test
sbb
(bad)
ret
mov
inc
fdiv
and
or
and
imul
mov
mov
mov
js
ret
int
test
adc
inc
std
stos
mov
push
inc
test
leave
ror
int3
adc
mov
and
pusha
mov
fstp
int3
or
adc
and
rcl
xchg
cmp
xchg
pop
mov
push
outs
cwde
mov
loop
inc
fidivr
inc
push
and
repnz
daa
sub
dec
jmp
icebp
mov
pop
cmps
fdivr
icebp
pop
cmps
add
xchg
gs
and
mov
mov
add
dec
mov
pushf
cwde
and
cmp
pop
sar
cmps
ja
cld
aaa
fstp
std
xchg
lods
daa
xchg
jmp
call
fist
mov
out
pop
nop
mov
cmp
out
adc
xchg
shr
scas
pop
stc
xchg
(bad)
pop
je
les
ds
test
out
xor
and
addr16
scas
fstp
jb
int
pop
jne
jne
daa
loopne
pop
je
pop
(bad)
sar
cmps
and
push
(bad)
jmp
sar
mov
imul
nop
and
out
or
mov
popa
retf
jns
inc
mov
adc
cmp
push
xor
add
retf
test
push
jae
adc
pop
arpl
je
pop
bound
jbe
cmp
fmul
and
mov
(bad)
and
add
pushf
fild
mov
inc
xchg
addr16
loope
sar
xchg
ja
pop
push
pop
out
jb
cmps
adc
sbb
mov
dec
sahf
ret
xor
fstp
jae
mov
add
jg
mov
sbb
fsubr
out
mov
mov
xchg
push
rcr
rcr
aam
pop
and
int3
std
sti
loope
fs
sti
pop
push
popa
pop
and
dec
push
pop
push
lods
shr
ja
nop
loope
imul
mov
nop
(bad)
add
int3
or
mov
mov
mov
push
lods
(bad)
iret
add
inc
xlat
push
jp
lahf
pusha
fld
cmp
adc
xlat
retf
mov
fistp
push
div
xor
js
mov
pop
(bad)
ins
mov
xchg
sbb
mov
jns
push
mov
mul
ins
int
or
int3
xchg
sar
xchg
dec
ror
je
pop
stos
fs
repnz
(bad)
or
stos
and
pop
ss
jae
and
and
lds
fbstp
mov
push
js
test
lds
mov
inc
pop
mov
es
dec
add
pop
or
push
jne
aam
lods
cdq
imul
movs
cld
push
push
pop
xchg
in
ins
int
sar
sub
and
and
aas
loopne
call
inc
push
bound
add
loope
dec
dec
fsubr
test
fiadd
pop
aas
sbb
in
jo
xchg
scas
inc
mov
dec
imul
imul
mul
fist
mov
rcr
jg
mov
xchg
arpl
stos
mov
inc
mov
and
or
cmp
inc
pop
sub
dec
div
sub
dec
mov
cs
int3
add
sahf
push
dec
or
xchg
scas
stc
xor
fsub
test
shl
sub
dec
mov
lods
loopne
fdivr
cmp
(bad)
pop
cs
ja
je
inc
inc
xchg
cmps
div
loop
jmp
ss
inc
pop
(bad)
(bad)
call
fiadd
jne
pop
mov
dec
dec
sbb
mov
jmp
out
mov
sbb
push
or
in
add
add
and
jp
adc
sbb
lods
mov
fiadd
jnp
inc
push
sbb
mov
or
push
xchg
lock
mov
js
adc
xlat
fcomp
or
push
xlat
gs
mov
sub
inc
xor
out
xchg
xchg
inc
jo
(bad)
sub
sub
es
xor
push
adc
xchg
lods
inc
stos
(bad)
dec
out
(bad)
ret
fisttp
push
pop
mov
hlt
push
push
add
mov
fcomp
aam
aaa
mov
add
aaa
in
dec
test
rcr
and
sub
scas
sbb
and
jae
ja
adc
jp
(bad)
xchg
jmp
dec
xchg
mov
retf
std
inc
xchg
lea
inc
cmp
pop
dec
mov
push
jae
retf
xor
fild
mov
test
movs
das
jbe
push
icebp
arpl
mov
out
jbe
popf
cmc
sub
push
dec
mov
inc
inc
inc
adc
xchg
jle
sbb
stos
retf
dec
ja
adc
pop
addr16
inc
push
xor
jo
cmp
sbb
aaa
imul
jae
outs
call
loop
jns
dec
lods
ret
add
cmps
mov
test
(bad)
mov
mov
fxch
std
mov
out
or
repnz
andnps
mov
cmp
pop
mov
std
imul
sub
or
cmp
xor
les
in
sbb
aas
xor
dec
test
push
rcl
clc
dec
repz
push
stc
rol
mov
cdq
pop
aad
fidiv
cld
sbb
out
xchg
mov
xor
sbb
sbb
adc
movs
lods
mov
sbb
stos
push
cmp
xor
jge
sub
aas
adc
stos
out
popf
jbe
in
shl
adc
cmc
mov
ret
aam
ret
leave
mov
xor
into
pusha
rcl
xor
adc
jl
push
scas
xchg
sbb
cli
adc
push
xchg
scas
xchg
add
test
or
cmp
push
out
mov
and
mov
imul
lock
inc
popa
test
add
inc
aas
pop
es
xchg
xchg
idiv
mov
jb
add
pop
shl
fbstp
movs
shl
into
xlat
jge
out
test
fmul
mov
and
test
in
jnp
ins
push
cdq
cmp
xlat
dec
jge
cmp
and
inc
lea
xchg
ja
mov
ficom
scas
je
push
test
sub
mov
push
xlat
sahf
data16
fnsave
dec
imul
push
and
mov
cmps
fbstp
jecxz
mov
mov
mov
(bad)
mov
dec
outs
bound
mov
or
not
pusha
test
pop
cli
sbb
adc
xor
adc
sub
adc
gs
aaa
push
mov
inc
dec
push
jle
sbb
push
(bad)
aas
push
pop
add
fimul
test
sub
xchg
add
daa
dec
mov
xchg
push
mov
and
push
push
ds
cmp
ds
cmps
jge
imul
cmps
fs
add
movs
xchg
jle
pop
cmp
push
pop
mov
lds
cmp
retf
outs
xchg
mov
(bad)
xor
int3
push
icebp
and
adc
(bad)
loop
sti
mov
scas
(bad)
fsub
lods
ins
inc
pop
(bad)
outs
xor
rol
push
sub
gs
gs
push
sar
ds
sar
adc
shr
xchg
jnp
shl
jmp
xchg
cmps
inc
movs
outs
jbe
push
jae
fisub
ja
push
mov
dec
movs
(bad)
xor
adc
push
stc
stc
jns
xchg
cmp
in
sbb
outs
dec
les
out
inc
pusha
lods
shl
fistp
ins
retf
inc
pop
push
mov
test
and
xchg
pop
xor
mov
push
inc
out
lahf
lock
pop
fwait
lea
popf
out
mov
test
push
cld
mov
mov
into
inc
mov
adc
pusha
fdivr
in
adc
lahf
and
mov
mov
lock
addr16
je
aam
sub
push
into
xchg
scas
sub
scas
lea
(bad)
or
sub
cmp
jle
test
and
cmps
xchg
mov
cs
and
and
ins
cmp
bound
cdq
and
lahf
in
in
jno
mov
and
adc
scas
ins
adc
sbb
xor
mov
lahf
inc
mov
inc
push
lahf
cdq
inc
retf
xchg
movs
repnz
sub
sbb
ds
and
aad
add
mov
repnz
push
int3
aad
adc
(bad)
jmp
adc
push
or
inc
cmc
aaa
call
out
repnz
push
pop
mov
mov
dec
pushf
call
and
rol
push
or
mov
inc
dec
xor
pop
sub
addr16
movs
movs
push
outs
fs
lea
stc
gs
rcr
aad
and
test
pop
xchg
push
or
sahf
inc
jg
ror
out
mov
(bad)
in
test
mov
jo
xlat
adc
sub
xor
jmp
mov
int
ror
mov
dec
pop
push
pop
add
ja
mov
ins
and
mov
mov
sti
enter
push
jmp
ins
cmc
jb
xchg
(bad)
or
out
mov
jge
jle
js
jmp
or
por
jae
idiv
retf
xchg
lods
mov
jnp
push
and
cld
iret
inc
add
xchg
lods
sar
cmovl
add
outs
nop
adc
dec
dec
push
pop
mov
lea
jmp
icebp
inc
aam
dec
aad
cwde
push
inc
push
cli
loopne
out
dec
xchg
not
mov
movs
out
push
clc
adc
movs
push
das
ins
adc
jne
xor
ds
pop
jp
jmp
or
dec
mov
gs
out
cmps
pop
ins
dec
out
adc
dec
and
and
mov
ss
xor
xor
jno
or
sahf
push
push
jne
out
loop
dec
stos
(bad)
rcl
add
fwait
adc
jns
loop
imul
or
ret
pop
xor
lock
sbb
add
ds
xchg
icebp
fwait
scas
sub
inc
sub
data16
fsub
jns
or
xchg
adc
pop
sub
fs
enter
mov
test
test
dec
in
cmp
adc
pop
js
adc
popf
nop
inc
jo
stos
sub
pop
or
scas
cmp
jmp
(bad)
jmp
movs
jne
inc
rol
(bad)
mov
stos
sbb
dec
test
lea
adc
call
dec
pop
cwde
mov
jb
(bad)
lods
js
sbb
stos
movs
icebp
fstp
and
test
test
jno
xsaveopt
push
fimul
sti
cmp
pop
or
jle
mov
add
pop
mov
jecxz
jg
repnz
movs
mov
imul
shl
pop
mov
and
test
push
xor
sub
cmps
pop
dec
mov
xchg
mov
ins
sub
cmp
sbb
fs
sbb
push
(bad)
int3
mov
out
lds
sbb
push
mov
xor
sar
mov
push
mov
sbb
xor
scas
jne
add
sbb
xlat
outs
mov
cdq
add
fld
mov
pusha
sbb
mov
call
rol
or
cmc
shl
pushf
xchg
call
popf
jae
aam
xchg
sub
adc
rol
jne
add
(bad)
pop
add
xchg
xor
dec
jg
inc
jle
lds
inc
neg
adc
sahf
xchg
int
mov
cmp
mov
inc
adc
xor
sti
dec
(bad)
pusha
mov
lods
jmp
sub
and
outs
fiadd
mov
movs
sbb
jb
scas
inc
mov
pop
leave
dec
imul
xchg
outs
cs
xchg
int
fidivr
test
outs
jp
jo
pop
jno
push
(bad)
arpl
push
push
ror
pushf
icebp
mov
cld
dec
dec
test
cs
push
sti
(bad)
icebp
mov
fisttp
push
imul
scas
jg
sar
fcomp
mov
fcom
ja
mov
les
add
out
inc
inc
push
and
lods
and
cmp
cmp
dec
push
retf
adc
mov
repz
movs
fwait
pushf
rcl
push
sub
ins
aad
call
inc
out
inc
and
sub
jns
push
mov
dec
mov
xor
stc
xchg
jo
pop
out
fst
(bad)
ret
and
xor
ret
cpuid
push
mov
sub
ins
(bad)
adc
call
ins
in
pop
cmp
add
cmc
std
icebp
xor
inc
shl
les
rcr
adc
sub
and
fcmovnu
retf
sub
ja
mov
inc
test
stc
inc
les
dec
je
jmp
ins
adc
jle
pop
out
es
mov
sub
adc
xchg
movs
add
aaa
jmp
adc
addr16
ja
retf
gs
loopne
add
jl
fisttp
mov
mov
ss
retf
inc
mov
pop
ret
xchg
add
mov
pop
sbb
into
aam
push
pop
in
sbb
xchg
adc
and
cmc
xchg
add
and
arpl
(bad)
xchg
lahf
call
loop
inc
push
sbb
mov
mov
cld
mov
cmp
inc
shr
jns
cld
imul
stos
push
fiadd
xor
adc
ficomp
or
leave
aad
pop
pop
mov
mov
adc
dec
and
adc
jmp
jp
push
mov
(bad)
push
mov
jge
ins
jns
push
cmp
xor
mov
pop
je
jb
adc
jo
jg
mov
addr16
inc
test
and
mov
or
mov
aaa
popa
sti
mov
push
bswap
ror
jae
cwde
add
adc
push
rol
mov
adc
add
les
dec
xor
scas
pop
pop
movs
cs
call
imul
data16
pushf
xor
test
shr
movs
or
repz
(bad)
inc
das
std
into
cwde
jne
mov
jmp
mov
cmp
xchg
mov
xchg
sbb
dec
pop
rol
sbb
fucomi
iret
fnstenv
(bad)
sub
xor
icebp
sub
xlat
sbb
je
fwait
jmp
stos
jmp
jno
jge
or
out
pushf
inc
jne
(bad)
fisub
xlat
cmps
sub
pushf
imul
arpl
dec
in
ds
xor
cmp
mov
dec
mov
sub
jns
inc
adc
or
xor
shl
push
dec
cmps
aas
or
push
xchg
data16
cmc
(bad)
jp
sbb
(bad)
dec
fisttp
(bad)
dec
imul
push
imul
clc
dec
retf
fwait
dec
cld
lahf
fstp
das
mov
outs
ins
xor
xor
sub
jo
inc
out
std
add
test
not
dec
scas
std
mov
daa
add
loope
mov
in
je
shl
stos
test
loope
cmps
rcl
scas
es
mov
mov
cmp
mov
mov
mov
leave
xor
in
sub
adc
and
lock
movs
sbb
dec
push
or
fsub
ss
cmp
enter
jl
aad
fstp
ror
jne
xor
int3
ret
jle
sbb
retf
and
ret
dec
jle
sub
js
jmp
test
sub
movs
bound
add
sahf
cmc
je
retf
frstor
jecxz
fmul
int3
leave
mov
xor
mov
push
adc
sbb
mov
jno
add
(bad)
mov
mov
jge
retf
jno
pop
jb
jmp
fisubr
pop
sbb
stc
out
lea
stos
lock
push
js
shl
loop
(bad)
aad
jae
pop
cs
sahf
outs
lock
or
push
cmp
sahf
and
jecxz
call
inc
jp
lock
popf
das
fmul
mov
add
clc
cmp
pushf
test
push
inc
mov
add
or
leave
xor
and
pop
xchg
pop
inc
popf
push
pop
mov
arpl
cmp
mov
sahf
jl
in
je
inc
xchg
scas
cmp
imul
add
into
mov
lahf
sbb
rol
sub
imul
pop
loope
sbb
test
in
pop
(bad)
jnp
stos
sbb
in
js
inc
popf
push
xabort
dec
cdq
fninit
mov
adc
mov
sbb
xchg
inc
xor
or
push
int3
and
test
jmp
xor
mov
ror
jg
adc
int
or
clc
lods
inc
loope
sub
mov
push
and
stos
xchg
je
mov
daa
mov
out
clc
ret
inc
sub
(bad)
jno
mov
adc
mov
add
cdq
adc
cwde
jp
aam
outs
mov
(bad)
pop
sub
mov
xchg
inc
sub
shr
shl
pushf
add
test
or
xlat
ins
in
ret
cmps
xchg
add
push
sub
pusha
test
jbe
in
ins
add
mov
ffreep
loop
pop
mov
mov
pop
xor
xor
mov
push
and
and
loopne
push
cmc
push
and
xor
pop
clc
faddp
push
movs
fstp
pop
mov
adc
mov
fwait
lock
or
push
outs
in
into
cli
sbb
aad
mov
adc
push
and
test
fcmovnu
push
iret
int3
push
sti
inc
mov
js
dec
cmps
dec
dec
mov
cmps
lds
call
jmp
adc
out
mov
lock
mov
or
xchg
das
nop
cmp
cdq
or
(bad)
ja
mov
pop
pop
pop
xchg
push
js
pop
mov
mov
mov
neg
cmp
add
enter
pop
and
jecxz
pop
in
iret
cmp
mov
into
fisub
out
add
mov
mov
clc
push
xchg
int3
and
popf
xlat
daa
jo
dec
cmp
fwait
sub
int
push
das
mov
add
push
add
ror
dec
xor
mov
call
bt
(bad)
pop
or
cmc
pushf
idiv
arpl
mov
sbb
or
retf
sbb
int
jmp
ins
jno
fwait
jmp
cld
mov
dec
lds
aas
lods
(bad)
cmp
out
(bad)
in
add
cmp
cs
dec
push
outs
std
iret
xor
cwde
icebp
gs
in
hlt
jb
and
inc
test
pop
in
bound
lock
test
cmp
retf
pushf
and
jecxz
out
inc
cmp
mov
jge
jle
mov
xor
pop
mov
fsub
(bad)
in
xor
xchg
sub
mov
jg
sub
dec
jbe
mov
cmc
mov
jp
xor
pop
lock
mov
dec
(bad)
pop
daa
loope
inc
outs
xor
movs
xlat
imul
clc
xchg
push
ds
js
mov
je
sub
pop
mov
dec
xor
andps
sbb
cmp
push
sub
jecxz
jg
out
jl
adc
mov
icebp
repnz
or
push
push
adc
shl
aaa
mov
mov
cmp
jmp
movs
jecxz
adc
mov
sti
retf
jg
aaa
cmp
test
add
sbb
jo
jae
(bad)
call
and
xchg
jno
dec
in
sub
jno
ds
hlt
inc
in
mov
mov
fst
fwait
ja
adc
add
mov
imul
aam
test
inc
push
sti
(bad)
lahf
out
std
hlt
retf
mov
inc
add
and
mov
gs
cwde
in
repz
cmp
pop
mov
inc
call
daa
xchg
cmps
fldcw
cmp
(bad)
jmp
push
inc
or
pusha
cmps
or
out
xor
and
inc
adc
mov
ja
jbe
cmp
inc
clc
data16
outs
aad
nop
inc
mov
cli
pop
stos
and
pop
pop
add
cmp
push
daa
sbb
aas
out
fdivrp
or
jp
sbb
popf
test
popf
sbb
ss
push
mov
sbb
stos
or
movs
xchg
aas
sub
sbb
dec
sub
pop
xlat
pusha
jl
call
jbe
ins
xor
lds
xchg
mov
add
mov
inc
or
sbb
inc
fcom
cdq
aas
inc
and
cmp
mov
int
cmp
jle
add
sbb
mov
call
dec
sub
dec
mov
dec
outs
or
es
dec
scas
hlt
cmps
sti
sub
(bad)
je
adc
mov
div
xlat
loope
inc
jl
ret
ss
sub
dec
xor
adc
cli
stos
nop
xchg
mov
sbb
mov
loop
dec
fsubr
jnp
sbb
mov
cmp
stos
push
jle
mov
jbe
xchg
and
shr
add
mov
ins
repz
pop
push
cwde
ja
sub
cmps
je
inc
sub
aaa
or
mov
pop
add
sub
sbb
fcomp
ins
aaa
je
fld
jb
scas
aam
xchg
sbb
mov
add
shl
jnp
sbb
push
mov
sub
test
pop
push
lahf
sti
mov
or
xchg
jge
pop
jae
or
es
stos
js
outs
mov
jecxz
inc
out
xlat
sti
mov
sbb
jae
aas
gs
or
call
stos
aaa
aas
xchg
xor
and
xlat
dec
mov
lahf
call
jne
leave
ds
and
ret
sahf
popf
sub
sti
push
scas
or
lock
sbb
pop
dec
rol
dec
jne
cmp
cli
xor
call
fidivr
sub
pushf
icebp
ret
test
popf
pop
call
and
dec
mov
out
jmp
clc
fisub
add
add
jne
inc
mov
sbb
in
cmp
ret
mov
pop
inc
enter
adc
sub
sub
or
out
mov
clc
daa
das
sahf
out
icebp
ins
add
aas
mov
aaa
fs
mov
hlt
dec
es
arpl
shl
scas
ret
adc
daa
cmc
mov
mov
xor
cmps
lahf
sbb
scas
push
es
push
jo
mov
push
and
pop
jle
out
inc
fdiv
cwde
sub
movs
jmp
cmps
inc
icebp
movs
jns
mov
mov
fisttp
fldcw
in
add
mov
sbb
enter
adc
aaa
ret
dec
mov
(bad)
mov
cli
int
stos
test
inc
daa
jno
stc
dec
jne
adc
aas
sbb
cwde
add
movs
loop
dec
inc
adc
mov
(bad)
mov
sbb
retf
push
cmp
(bad)
adc
inc
idiv
pop
lods
xchg
inc
push
xlat
cli
mov
and
adc
jnp
pop
into
jge
mov
lea
mov
stos
scas
xor
stos
movs
mov
lods
mov
and
popf
ret
out
push
add
je
nop
pop
movs
icebp
ror
daa
movs
sub
test
sub
dec
test
push
scas
(bad)
scas
adc
outs
mov
pop
cmp
rol
dec
cwde
es
xchg
and
cmp
mov
test
js
jns
and
xchg
add
xor
cmp
add
cmp
pop
mov
pop
dec
adc
push
(bad)
stc
jge
mov
adc
xchg
mov
test
mov
test
into
jle
(bad)
dec
loopne
inc
jmp
pop
test
xchg
dec
sub
hlt
into
add
jno
xor
sub
lds
or
push
and
fs
outs
arpl
cmp
dec
rcl
jb
jns
gs
sbb
vandps
pusha
mov
xchg
sub
ins
mov
popf
leave
outs
sub
mov
pop
int3
icebp
pop
jne
cmp
and
jle
arpl
sbb
mov
div
fstp
add
js
pop
pusha
lods
mov
adc
sub
retf
fidiv
ins
xlat
add
dec
mov
pushf
out
dec
sbb
test
cmps
and
dec
loope
out
ins
push
mov
adc
movs
jmp
das
push
sbb
pop
out
movs
dec
xchg
add
int3
enter
mov
mov
push
ins
stos
js
mov
aaa
mov
pop
bound
mov
pop
(bad)
repnz
fnsave
sub
push
push
xor
push
retf
cmp
push
not
sub
jge
push
pop
xor
mov
arpl
stos
cmps
in
fisubr
mov
adc
inc
xchg
shl
sub
loopne
dec
dec
dec
ds
fadd
std
stos
aaa
hlt
cmp
jns
sub
and
mov
jb
inc
mov
(bad)
fadd
dec
arpl
mov
adc
stc
repnz
push
out
xchg
out
outs
outs
mov
sbb
ds
out
fldcw
cmp
inc
mov
outs
and
fadd
popf
(bad)
sbb
xchg
ficom
sbb
test
ret
adc
jae
ret
das
xchg
sub
dec
and
jae
pop
push
in
dec
ss
mov
fcom
lds
jo
cmps
lods
popa
call
jmp
dec
jg
sbb
cdq
mov
push
sbb
or
lea
ja
cld
outs
inc
xchg
aaa
movaps
adc
xchg
sbb
or
sbb
cdq
mov
(bad)
pop
std
and
xor
mov
fdivr
clc
dec
mov
test
sub
mov
adc
cwde
mov
cmp
mov
imul
(bad)
jmp
mov
sbb
cdq
dec
xor
and
dec
icebp
out
mov
xchg
inc
ins
or
fidivr
or
lea
or
cmp
fwait
ret
es
inc
cmps
mov
bound
push
jmp
in
(bad)
out
xchg
xchg
jg
fmul
sbb
js
jbe
mov
fnstsw
cmp
dec
(bad)
mov
jmp
add
dec
lods
push
mov
xchg
fs
fisubr
mov
cdq
sahf
cs
push
or
pop
xchg
into
xor
mov
add
mov
gs
add
imul
lea
push
popf
push
fucomi
push
call
jg
dec
mov
adc
popf
xor
mov
mov
sbb
or
mov
xor
imul
sub
xchg
es
or
icebp
sub
lock
(bad)
dec
and
add
mov
std
inc
mov
loopne
pushf
imul
or
into
push
daa
fstp
loope
adc
sub
add
inc
cmc
cmps
inc
add
les
mov
ins
rcr
add
pop
fwait
pop
xchg
call
inc
(bad)
cmp
pop
adc
cmps
push
imul
retf
xchg
jmp
ins
ret
imul
cwde
and
or
push
shl
cmps
push
cwde
scas
mov
ins
mov
cwde
lahf
outs
sbb
aam
xchg
jns
add
xchg
stos
dec
ss
pushf
test
pushf
or
div
pusha
xor
adc
sbb
stos
or
mov
test
mov
shl
add
mov
lods
or
cmc
movs
cmp
jge
fs
stos
rcr
adc
into
pushf
xor
sub
aas
pop
fsincos
xor
bound
dec
vunpcklps
ret
ja
cdq
not
mov
mov
cs
and
(bad)
jbe
lea
cmp
xor
mov
mov
js
test
add
jecxz
cmp
add
push
push
mov
cli
inc
nop
js
mov
mov
ins
loop
ds
inc
and
adc
dec
pop
mov
xchg
clc
icebp
cwde
jne
outs
popf
out
and
add
or
aad
fbld
ret
and
pop
addr16
jg
lods
sub
lods
or
jns
mov
mov
jmp
loope
imul
out
retf
mov
and
enter
leave
icebp
iret
sti
inc
mov
inc
data16
icebp
rol
inc
xchg
aas
inc
ffree
mov
push
mov
cmp
xchg
shl
shr
icebp
inc
pop
jns
aas
inc
int
sti
in
pop
sub
fs
xchg
add
fnstenv
out
test
lods
or
add
xor
push
add
or
loope
sbb
sbb
out
push
sub
and
ss
jae
mov
retf
adc
aas
mov
add
xor
ret
cmp
data16
jnp
scas
js
popf
pop
inc
cmps
pusha
cmps
jge
psadbw
outs
stos
add
jmp
and
scas
sbb
adc
mov
sbb
shl
xor
cmp
inc
mov
mov
mov
stos
sbb
stos
push
jle
rol
mov
xchg
dec
or
pop
sub
aaa
mov
lock
push
or
adc
rcl
and
mov
cli
gs
and
out
(bad)
mov
xchg
mov
scas
pop
nop
add
leave
pusha
inc
retf
push
aas
sbb
push
sbb
push
adc
stos
popa
jns
sub
pop
imul
shl
jmp
gs
call
into
xor
aas
add
test
out
add
jl
div
cmp
sub
fld
or
mov
ret
das
in
js
sbb
sub
int
xchg
xor
mov
loopne
jmp
jmp
jbe
mov
mov
scas
mov
sahf
mov
mov
inc
fsub
jle
adc
gs
aas
pop
out
mov
xlat
into
adc
fcmovbe
inc
xchg
and
out
aaa
dec
sub
inc
fisttp
adc
jecxz
cmc
xchg
dec
jae
mov
inc
scas
out
rol
fnstcw
imul
mov
cmp
nop
mov
cdq
mov
or
mov
cdq
and
pop
sbb
xchg
jecxz
push
aaa
or
loopne
mov
aam
lahf
push
rol
sbb
hlt
jnp
push
cmps
xor
imul
in
ins
jl
mov
shl
pop
mov
ror
mov
pushf
add
cmp
out
jae
cdq
scas
imul
mov
ret
shr
pop
stos
dec
repz
in
push
cmp
in
mov
arpl
ins
and
add
sub
lock
lods
div
push
pop
mov
sbb
out
inc
jmp
mov
adc
cs
int
ja
xchg
pop
inc
cmps
add
xor
mov
cmp
push
fbstp
pop
(bad)
ud0
sub
fidiv
scas
push
add
test
inc
les
lea
cwde
call
mov
jno
cli
add
sbb
clc
inc
inc
push
sub
cli
dec
(bad)
(bad)
(bad)
stc
(bad)
out
sahf
inc
xor
rcl
or
pop
push
push
bound
sub
xor
pop
outs
int
and
pop
mov
test
outs
das
mov
jns
ins
and
xlat
ror
and
loop
mov
cmps
into
sbb
enter
or
movs
or
sbb
addr16
fisub
xchg
sub
inc
ins
jo
shr
mov
cmp
dec
pop
rcl
mov
lods
add
jo
cwde
ins
fild
retf
test
fidiv
push
test
fucomip
fdivr
add
sbb
inc
mov
addr16
pop
and
adc
aaa
sbb
cmp
cdq
ror
push
mov
cmp
or
lods
popf
push
sbb
pop
push
leave
or
mov
add
xchg
addr16
gs
out
adc
mov
jae
sbb
and
jl
arpl
jbe
daa
lds
jno
or
shr
ins
cld
jg
dec
repnz
pop
fimul
xchg
pop
bound
push
bnd
mov
mov
mov
or
outs
loope
jae
mov
cmp
jmp
cmc
mov
retf
pop
enter
shl
xor
rcl
out
inc
(bad)
std
jg
stc
xor
aas
lds
and
movs
inc
sub
xor
xor
sub
push
mov
add
xor
out
xor
mov
lods
js
pop
mov
cmp
mov
xchg
icebp
or
daa
cmp
xchg
sahf
aad
cmps
cli
jnp
jmp
pop
inc
mov
jmp
dec
mov
test
mov
in
push
xchg
cdq
dec
or
ja
inc
in
fwait
cli
sar
popf
fsubr
test
fcomi
icebp
or
mov
cmps
adc
js
repnz
push
mov
jnp
mov
push
call
pusha
cmp
push
add
pop
dec
loopne
(bad)
mov
mov
lods
mov
and
adc
pop
call
call
fld
(bad)
loope
shl
mov
out
mov
(bad)
xchg
loopne
push
ds
xchg
int3
dec
mov
or
sbb
xor
pop
and
mov
ret
adc
sbb
idiv
mov
xor
cmps
or
(bad)
sbb
movs
jo
stos
cmps
in
jae
lahf
mov
mov
mov
mov
jae
fmul
les
jmp
arpl
xchg
rol
mov
cmp
out
add
push
xor
ss
cmp
in
and
je
xchg
xchg
cmp
dec
jne
inc
aas
in
mov
and
sti
dec
rcl
pushf
dec
(bad)
retf
imul
out
repz
arpl
add
aad
mov
call
mov
inc
and
inc
das
pusha
mov
ret
in
mov
in
dec
and
sub
adc
inc
or
adc
inc
xor
add
lock
push
add
or
out
xlat
fistp
sti
adc
ds
iret
(bad)
inc
add
adc
lahf
add
jmp
aaa
and
cmc
jecxz
(bad)
fldcw
repnz
pop
sbb
mov
leave
mov
inc
cmp
jo
repz
ret
sub
inc
mov
outs
push
ret
call
mov
xchg
iret
inc
aam
arpl
shr
jno
jl
arpl
jmp
pusha
mov
sar
(bad)
jl
inc
cmc
push
repz
xchg
out
test
nop
add
or
jp
or
dec
fsubr
mov
dec
inc
mov
mov
out
(bad)
mov
add
(bad)
or
cdq
fstp
inc
repnz
int3
adc
in
pop
and
sbb
xchg
push
dec
daa
or
jb
push
gs
lea
js
mov
mov
push
mov
test
sub
mov
sbb
or
lea
cmps
push
mov
into
(bad)
jmp
call
lds
inc
loope
popa
cmc
add
and
(bad)
push
out
push
adc
aas
fisubr
adc
mov
cdq
push
data16
sub
xchg
pusha
or
gs
xchg
sub
jp
enter
stos
push
ror
repz
xchg
pusha
mov
in
aad
fwait
add
adc
sub
xor
push
les
sub
inc
pop
mov
cmc
(bad)
enter
jl
ss
call
push
adc
push
or
pop
mov
sub
add
std
loop
mov
cwde
call
sub
inc
imul
cmp
fcomi
mov
rcr
jno
and
jmp
mov
je
push
xchg
mov
fidivr
dec
mov
adc
adc
push
jge
or
pusha
jno
adc
iret
xchg
retf
push
and
pushf
pop
inc
sbb
loope
mov
add
sub
inc
mov
ret
retf
loopne
or
fisub
fs
test
mov
mov
push
call
pop
outs
adc
mov
sub
clc
cmp
nop
mov
es
pop
in
cdq
repz
pop
pusha
fimul
test
gs
dec
or
push
xchg
push
lock
xor
push
or
mov
fiadd
jo
(bad)
inc
std
sbb
ja
xchg
dec
test
cmp
enter
jecxz
mov
push
push
fisub
pop
dec
mov
pop
push
mov
mov
mov
mov
mov
ja
jle
sub
xor
dec
in
pop
(bad)
xor
xor
xor
pop
and
(bad)
arpl
lods
jle
out
push
loope
not
lds
loop
dec
cmp
pop
das
enter
ja
mov
gs
ror
jecxz
pushf
add
test
push
not
pop
call
mov
scas
lods
loop
jo
lods
inc
xchg
mov
xor
and
push
cmp
outs
hlt
mov
push
das
dec
cld
pop
(bad)
popa
(bad)
fidivr
jno
mov
out
cmp
fcomp
fwait
xor
mov
lods
jno
ficom
lock
xchg
std
add
outs
fnstcw
in
jne
and
idiv
jo
popf
push
mov
and
movs
stc
test
nop
and
pop
push
sbb
sub
dec
lock
fxch
push
dec
ss
clc
mov
mov
(bad)
mov
pop
out
dec
imul
test
ror
fidiv
sub
sub
shr
inc
mov
ins
dec
inc
in
dec
jnp
pop
sbb
idiv
or
sti
out
adc
scas
ffree
mov
aas
mov
leave
(bad)
in
cmp
aas
dec
lock
cmp
xor
pop
test
push
and
movs
pop
lahf
pop
sub
lea
lock
and
or
push
add
push
ins
out
mov
pop
pop
jmp
bound
test
xor
push
xor
pop
pop
retf
ret
shl
enter
(bad)
mov
iret
dec
inc
push
and
cmp
dec
jmp
and
mov
jmp
in
xor
xor
and
sub
adc
shl
lea
ds
inc
scas
cwde
add
or
dec
push
imul
repnz
or
out
inc
mov
fld
cdq
in
mov
movs
in
iret
imul
test
jp
lods
jg
push
xchg
sub
cmc
adc
jle
push
xchg
shl
mov
movs
stos
ret
mov
inc
mov
jecxz
adc
pop
mov
cld
(bad)
mov
fcomp
pop
retf
inc
rcl
outs
leave
jo
popa
mov
adc
pop
scas
mov
sub
shl
repnz
and
ret
das
sbb
stos
or
aam
sti
fiadd
int
inc
neg
test
add
push
sti
jmp
dec
daa
ins
clc
out
stc
pop
test
js
xchg
sbb
loopne
pop
mov
mov
(bad)
ds
repz
ja
in
xor
mov
sbb
cmp
cs
out
adc
mov
xchg
cld
popa
jp
test
movs
cs
mov
mov
icebp
dec
stos
out
jecxz
(bad)
mov
push
in
mov
sub
outs
pop
push
clc
jg
push
imul
(bad)
fstp
xor
jo
jns
movs
jns
std
dec
cmps
mov
jno
pushf
xlat
pop
inc
jge
mov
mov
cmp
mov
xchg
sub
mov
mov
jno
enter
cwde
sbb
sub
ja
push
add
inc
sti
sbb
sub
leave
and
lds
push
mov
mov
cmp
sub
shl
mov
je
(bad)
div
mov
inc
pop
out
adc
dec
xchg
sbb
scas
mov
xor
pop
stos
jae
mov
rol
and
leave
int3
pop
sbb
addr16
fstp
jns
add
xlat
cmp
aaa
jb
lea
push
(bad)
stc
aas
cmps
mov
mov
sub
pop
(bad)
mov
repnz
xchg
xchg
(bad)
jae
repnz
cs
xor
iret
in
jb
add
js
cmps
sbb
mov
call
sbb
leave
ror
or
mov
adc
dec
add
push
push
push
ja
cmp
adc
cli
pop
sub
cmp
fwait
inc
dec
jp
sbb
das
pop
pop
adc
scas
mov
sbb
mov
and
xchg
lock
inc
test
(bad)
ins
sbb
pop
ins
or
outs
hlt
sub
inc
out
mov
test
push
fwait
adc
mov
scas
jns
jns
cs
xchg
adc
and
dec
jmp
dec
xchg
lods
sub
jge
js
sbb
shl
mov
mov
push
mov
and
mov
ror
retf
cli
jmp
faddp
enter
dec
jge
mov
imul
sbb
test
mov
lods
adc
adc
or
mov
mov
fwait
push
mov
sbb
jmp
movaps
(bad)
sbb
das
pop
sub
jno
push
mov
lods
iret
movs
xchg
pop
ret
fdivr
inc
addr16
nop
cmp
nop
jno
out
inc
aam
repnz
add
scas
dec
lea
inc
dec
sub
(bad)
add
push
fdivr
and
jmp
xor
aam
retf
out
(bad)
cld
push
push
xchg
jne
or
ds
scas
adc
mov
(bad)
jnp
enter
jg
lock
dec
retf
push
fsub
push
xlat
adc
mov
das
out
dec
push
sub
sahf
popa
test
sti
pushf
xor
jge
fisubr
lods
idiv
aam
inc
xor
jmp
pop
xchg
in
adc
add
rol
cmp
ds
mov
jg
mov
sub
scas
xor
test
adc
cld
pop
sti
dec
mov
jp
leave
jmp
adc
test
jp
mov
repnz
in
test
xchg
ror
out
jg
mov
(bad)
(bad)
mov
xor
leave
xchg
sub
jne
in
in
push
iret
mov
adc
stos
adc
lds
pop
push
dec
jbe
test
or
fidiv
retf
(bad)
clc
mov
dec
cmp
stos
sub
push
dec
xchg
bound
daa
das
test
lea
adc
or
push
loop
mov
cmp
push
sar
cmp
hlt
out
cmps
jp
lods
mov
and
cs
popa
push
xchg
cli
mov
lock
and
cli
scas
push
(bad)
push
jne
jb
call
fnstsw
shl
sbb
seto
adc
sub
imul
cs
test
mov
jmp
call
pop
xor
jae
nop
mov
ja
test
xchg
jmp
mov
mov
cmps
lods
inc
nop
scas
or
xchg
push
pop
jne
ins
fisubr
cwde
dec
xchg
ffree
adc
or
or
rol
loope
jno
repnz
pusha
data16
dec
and
inc
cli
sti
not
xchg
hlt
mov
in
loope
mov
call
lock
dec
(bad)
outs
sbb
or
adc
adc
xchg
ret
cmp
add
int3
and
add
imul
js
xchg
out
into
aam
cmp
pusha
jnp
pop
mov
(bad)
scas
mov
adc
mov
xchg
add
repnz
mov
sub
xor
(bad)
jmp
xchg
aas
movs
inc
add
nop
shl
aas
dec
call
aaa
das
je
movs
cmp
pop
mov
sub
jmp
adc
xlat
hlt
cmp
hlt
mov
ins
mov
fs
cmp
xchg
or
inc
mov
mov
hlt
cmp
or
aam
clc
jno
sbb
rcr
sti
xor
mov
bound
xchg
mov
push
shl
outs
cmp
pop
mov
push
jge
(bad)
pop
into
jp
aas
inc
push
sahf
jge
sar
(bad)
mov
loop
ins
mov
and
jp
push
movs
pop
aas
mov
add
adc
sbb
inc
mov
push
sbb
std
int
das
test
enter
jecxz
jg
rcr
shr
cmp
jle
jg
dec
xchg
repz
xor
pusha
aam
xchg
inc
hlt
inc
or
jl
or
sbb
xor
bound
sub
inc
sbb
prefetch
or
or
adc
xor
pop
cmc
cmp
mov
in
clc
cmp
mov
dec
pop
push
shr
repz
sbb
jge
fisttp
jecxz
cmp
or
mov
mov
sub
loopne
cmp
xchg
or
stos
mov
int3
clc
stos
sar
icebp
les
adc
scas
jg
mov
cwde
push
into
in
aas
sbb
rcr
jo
mov
inc
call
cmp
popf
es
push
into
ins
dec
jne
mov
into
arpl
ins
mov
sub
(bad)
dec
retf
push
cld
lock
popf
xor
fwait
std
pop
dec
pop
mov
mov
mov
outs
outs
sub
xor
jne
xchg
iret
xlat
daa
push
sub
dec
push
inc
mov
stc
lds
test
push
and
pop
sbb
jns
mov
inc
mov
int
jno
mov
xor
fisubr
lea
push
stos
in
jne
call
arpl
mov
sub
lea
inc
or
or
ins
mov
ja
outs
dec
add
repnz
das
or
sbb
mov
or
cmp
mov
popa
scas
add
push
cli
xchg
nop
sbb
push
cmp
mov
pop
inc
mov
mov
(bad)
in
lea
and
adc
sub
int
(bad)
test
shl
jae
mov
lods
outs
sub
dec
call
sbb
ror
loope
inc
int3
je
jne
cmp
push
leave
xchg
or
sub
test
rcr
mov
adc
sahf
test
sbb
stc
xor
add
add
je
(bad)
hlt
fucomip
lahf
(bad)
lods
cmp
push
and
jecxz
mov
mov
jae
ins
sub
jge
pop
or
xchg
xchg
imul
test
leave
iret
pop
loopne
and
mov
fisub
dec
sbb
popa
push
cmp
sbb
sub
dec
ss
addr16
fstp
shr
add
retf
ins
sbb
pop
or
cmp
and
push
sub
mov
mov
sbb
push
mov
loop
adc
add
ins
mov
lods
xor
clc
push
add
sub
inc
inc
mov
jge
mov
faddp
pushf
or
fcomp
mov
rcl
pop
es
(bad)
sbb
js
inc
repnz
xor
(bad)
loop
icebp
out
bound
in
dec
cmps
stc
jge
mov
mov
push
cmc
jp
cdq
xchg
stos
add
sub
mov
jmp
iret
pusha
aad
out
inc
ins
push
in
in
jns
addr16
jnp
out
jg
jb
and
xchg
in
ficom
xor
out
xchg
lods
push
mov
push
cmps
loop
pop
dec
pop
mov
and
mul
mov
(bad)
into
add
and
mov
jmp
push
fmul
adc
sti
into
push
jb
cmp
xchg
and
int
push
adc
sbb
dec
fild
xchg
stos
jae
sar
iret
into
loope
pmulhw
jno
mov
xor
or
sbb
cwde
jl
mov
or
mov
and
jmp
xor
imul
ja
jg
ror
fld
repz
cwde
mov
pop
loop
dec
in
push
sahf
dec
mov
(bad)
push
rol
(bad)
adc
fisub
cmc
inc
lahf
mov
jg
(bad)
sub
push
cs
arpl
retf
pop
xchg
mov
xchg
push
outs
sbb
out
mov
sub
sbb
sub
mov
sbb
sti
push
jl
push
lea
mov
dec
xchg
cmp
inc
inc
push
sbb
div
inc
sbb
mov
int
pop
mov
sbb
stos
stos
add
dec
call
jae
or
jge
adc
mov
xchg
inc
inc
aad
mov
jnp
mov
adc
cmp
ja
es
arpl
ss
inc
pop
frstor
lock
and
inc
fld
push
je
cmp
inc
pop
sbb
out
adc
push
inc
sub
sub
sub
into
imul
sub
jne
loopne
mov
mov
iret
stc
jg
cmp
fiadd
xchg
jo
test
push
lods
call
test
mov
or
push
sbb
bnd
nop
xchg
arpl
std
das
pusha
sub
ret
(bad)
mov
or
add
imul
test
sbb
scas
jmp
std
std
jl
jecxz
cwde
or
push
add
inc
push
dec
jo
mov
in
mov
jle
ds
cmps
ficom
inc
jbe
rcr
pcmpgtd
cld
and
dec
test
adc
(bad)
push
dec
cmp
add
sub
push
or
test
retf
xchg
xchg
dec
imul
and
cld
adc
mov
out
bnd
push
xchg
or
mov
pusha
out
fld
add
mov
cmp
ins
fiadd
adc
int
loopne
stos
xor
jno
push
out
push
ins
cmc
pop
fs
cmp
inc
test
stos
popf
icebp
js
aas
(bad)
xchg
iret
jmp
aad
jae
mov
call
dec
mov
xor
(bad)
aas
aaa
mov
mov
cmp
jl
inc
sahf
aam
(bad)
shl
mov
mov
(bad)
pop
int
xlat
xchg
cmps
loop
out
scas
bound
jg
cli
not
das
stos
movs
xchg
add
pop
dec
(bad)
xor
adc
or
xor
repz
and
push
inc
jecxz
imul
mov
mov
(bad)
jns
ficomp
ins
addr16
cli
lea
push
loope
gs
inc
xchg
mov
xlat
fwait
mov
or
xchg
adc
int
sbb
jo
(bad)
(bad)
mov
pop
adc
mov
popa
lds
push
fcomi
push
cli
add
cmp
xchg
cmp
loopne
and
push
jno
push
pop
idiv
jp
or
in
fmul
push
daa
je
into
and
cdq
and
sbb
add
cdq
gs
adc
inc
cmp
jl
push
mov
and
mov
call
xor
out
test
sbb
mov
outs
mov
xor
cld
stos
mov
add
mov
test
pop
mov
je
mov
pop
fisttp
inc
and
shl
or
fidivr
pop
adc
mov
sub
or
xchg
enter
pusha
inc
add
pushf
or
jbe
push
ror
outs
sbb
lods
adc
(bad)
and
in
dec
mov
mov
sub
sar
cwde
and
jg
not
stos
ret
sub
xlat
and
jge
test
mov
jae
das
xor
ror
in
test
aam
and
repz
in
ret
sub
jnp
retf
push
sub
cmp
sbb
ret
mov
test
mov
aad
push
xchg
jmp
cwde
dec
xchg
arpl
jno
adc
inc
(bad)
sub
add
mov
nop
jno
xor
jns
add
pop
je
out
xchg
dec
into
retf
rol
iret
psraw
jg
scas
and
dec
fcmovnu
dec
inc
int
sbb
mov
lea
push
les
ds
or
mov
sahf
jns
xchg
leave
test
xchg
and
adc
jnp
mov
cdq
inc
mov
jae
lahf
xchg
dec
cmps
xchg
inc
mov
iret
fnstsw
call
enter
rol
mov
test
cdq
sar
sub
arpl
mov
xor
loope
(bad)
lea
cwde
ret
scas
add
mov
in
jl
retf
mov
pop
inc
jns
loop
out
cli
leave
push
aas
sti
xchg
mov
call
cmp
pop
inc
jno
sbb
pusha
or
cmp
push
mov
jle
aaa
mov
(bad)
jmp
mov
inc
push
mov
repnz
cmp
in
xchg
test
lods
mov
popa
adc
adc
xchg
jecxz
adc
and
loope
jp
sbb
push
adc
pop
or
adc
mov
push
mov
scas
jp
fstp
or
xor
les
int3
bnd
scas
mov
rcr
ins
xchg
ss
scas
xchg
popf
sti
test
in
lds
scas
mov
add
div
outs
fs
aaa
lock
adc
pop
xchg
and
xchg
retf
popf
aad
mov
jnp
jge
mov
icebp
out
test
jbe
pop
fstp
fnsave
or
inc
nop
shl
push
push
psubd
aas
es
scas
arpl
daa
mov
jae
cld
shl
fist
mov
sub
ins
dec
adc
mov
adc
sahf
pop
sbb
cmps
ins
xor
xchg
aaa
jp
jae
js
mov
adc
sbb
and
stos
xchg
dec
daa
call
add
jmp
sbb
push
mov
push
xchg
xchg
sbb
add
repz
cs
cli
ret
mov
sbb
sbb
das
mov
jle
outs
jae
gs
xchg
sbb
popf
sub
out
ror
ins
cmp
jbe
push
(bad)
xlat
mov
push
cwde
ja
sbb
rcl
pop
inc
cmps
sti
dec
adc
dec
cmp
or
dec
jmp
add
cmp
push
pop
inc
jle
aad
adc
add
jo
rol
jl
in
sub
lock
mov
stos
(bad)
adc
xor
shl
and
scas
js
pop
bound
xor
pop
xchg
inc
nop
inc
sbb
cmp
leave
and
jae
cmp
leave
mov
jmp
xor
(bad)
in
loop
loop
add
mov
push
and
cmp
fild
mov
push
mov
pusha
xchg
inc
mov
fadd
add
xchg
in
sar
mov
cwde
shl
dec
test
js
jg
sahf
jo
cmps
adc
xor
or
cwde
iret
mov
mov
or
nop
popa
es
inc
fimul
mov
xlat
push
sub
xchg
dec
mov
(bad)
retf
inc
pushf
fadd
mov
xor
loopne
mov
dec
mov
pusha
repz
cmp
push
xchg
jo
sbb
mov
lds
pusha
rol
mov
pop
cwde
jp
ja
jmp
jb
pop
inc
pushf
je
(bad)
daa
dec
pop
in
pop
dec
mov
movs
enter
jo
sbb
out
xchg
adc
fist
(bad)
rcl
out
adc
ds
and
mov
push
pop
aaa
xor
out
pusha
and
sbb
xchg
rcl
movs
retf
inc
mov
shl
ja
or
lods
cld
sbb
out
lea
cld
loopne
shr
sbb
sub
mov
mov
(bad)
cmp
mov
xor
push
cli
adc
scas
jo
cmp
shl
cmps
loop
loope
and
mov
lods
sbb
and
sbb
pop
mov
sbb
xor
mov
pop
lahf
loope
xor
cmps
sti
push
in
mov
cmp
stos
pop
jae
pop
mov
loope
cmp
repz
push
(bad)
out
mov
sub
fnstenv
call
inc
mov
pop
icebp
in
div
cmp
add
ds
and
mov
jle
pop
mov
rcr
xlat
mov
imul
stos
rcr
fdiv
cmp
or
fild
inc
outs
pop
not
cmp
outs
and
push
mov
adc
daa
mov
mov
in
in
dec
das
jnp
test
stos
out
das
add
dec
movs
into
enter
mov
test
mov
rep
int
ins
cmps
je
jne
sub
outs
popf
xchg
ins
jg
push
mov
inc
out
sti
pop
loop
lods
add
fistp
jecxz
(bad)
in
call
sub
cmp
mov
dec
adc
adc
in
repz
into
das
dec
pop
push
cmc
cli
mov
sub
and
ss
ins
sub
mov
xchg
mov
mov
and
test
cmp
mov
mov
fisub
mov
cmp
mov
icebp
xchg
push
add
lds
addr16
sbb
mov
test
je
xor
jno
fst
mov
int3
shl
add
xor
clc
add
ds
dec
sbb
jns
or
add
adc
adc
inc
jp
leave
(bad)
pop
jmp
xchg
addr16
ja
mov
lahf
pop
xchg
sbb
retf
push
add
jo
sub
or
setg
sub
xlat
test
sub
out
ficomp
out
sar
lds
mov
and
jl
das
pop
sub
out
lods
jne
pop
fmulp
mov
aad
sub
sbb
push
(bad)
ds
fs
stos
retf
jne
int
test
jp
sbb
cmp
popa
xor
rol
jbe
add
mov
add
int3
cmp
xor
test
pushf
inc
fcmovu
idiv
std
hlt
sbb
xor
cmp
scas
mov
out
dec
in
mov
imul
shr
and
retf
loopne
cmps
call
sbb
loop
xchg
push
retf
mov
mov
xor
add
scas
and
dec
int3
add
popf
jmp
push
adc
test
ret
cmp
sub
cwde
or
rcr
jmp
clc
sbb
mov
jecxz
add
test
jae
or
sub
je
call
add
or
inc
cmp
and
mov
cmp
inc
stos
dec
test
jo
call
mov
out
addr16
xchg
jge
rol
sti
or
or
mov
mov
jo
fcom
jp
shr
and
test
jmp
dec
sbb
xor
outs
test
rol
enter
adc
push
xor
xchg
add
sbb
xor
mov
shr
mov
(bad)
cmc
int3
adc
vpblendmd
lods
sbb
pop
pop
pop
push
add
int
lods
sahf
pop
jbe
loop
xor
nop
or
lds
(bad)
retf
icebp
cmp
sub
das
jb
jg
pusha
inc
xchg
mov
shl
data16
scas
(bad)
cdq
loopne
mov
mov
(bad)
or
sar
and
xchg
xchg
jg
xor
ror
out
mov
sub
popf
inc
idiv
pop
(bad)
sub
call
arpl
mov
and
push
scas
mov
mov
(bad)
mov
ss
push
adc
jle
jne
nop
push
fldcw
lock
cmc
clc
cmp
xchg
push
pusha
xor
mov
loope
ret
popf
dec
nop
test
outs
dec
retf
xor
dec
inc
(bad)
jg
xchg
imul
pushf
inc
jg
jg
mov
pop
(bad)
fnstsw
mov
and
xchg
or
lods
iret
push
push
hlt
lea
in
sahf
test
push
cs
sub
scas
xlat
call
adc
daa
leave
mov
jmp
cld
dec
clc
fnsave
cwde
in
or
je
aam
and
mov
out
(bad)
mov
scas
xlat
jmp
mov
mov
aad
dec
push
pop
mov
int3
push
add
sbb
cmp
outs
int
mov
or
mov
inc
pop
dec
in
push
pop
ficomp
sub
push
dec
mov
pusha
rol
(bad)
jmp
sub
pop
fsubr
xchg
jmp
inc
push
pop
sbb
xor
push
out
sub
push
gs
cmp
ficom
xchg
adc
mov
movs
das
xchg
mov
push
push
js
cmp
pop
test
leave
cld
pop
imul
(bad)
jge
xor
inc
popa
sbb
iret
jg
idiv
enter
inc
mov
imul
pop
add
add
in
add
fisttp
xchg
mov
imul
xor
in
adc
call
fld
test
and
ins
mov
bsf
arpl
ret
or
rcr
mov
sub
cmps
jae
adc
call
sbb
pop
pushf
sub
sub
adc
adc
int
sbb
pop
aad
lock
jnp
add
cmp
or
dec
adc
fcmovb
loope
add
fisub
inc
push
mov
mov
or
or
loopne
dec
mov
out
push
je
rcr
add
ret
mov
xlat
xor
push
mov
das
cmp
leave
or
pop
inc
(bad)
mov
mov
mul
or
pop
ret
xor
arpl
scas
aas
jae
push
imul
aas
adc
scas
jnp
sub
cmps
mov
leave
jle
cmc
add
xchg
out
out
loope
cmps
jmp
aaa
fnstcw
pop
fnstenv
popf
das
fidivr
jno
or
std
movs
push
pop
clc
lods
and
jbe
fcmovnu
jnp
outs
xor
nop
or
mov
das
sub
aad
addr16
pop
sti
bnd
cli
sbb
sbb
dec
cld
inc
push
imul
push
aam
push
xchg
xchg
fadd
ss
and
adc
mov
push
mov
retf
sbb
mov
cs
mov
inc
mov
dec
and
jg
arpl
lods
sub
xchg
jg
(bad)
mul
call
dec
pop
dec
out
mov
adc
mov
lea
movs
mov
pop
lahf
lahf
sar
xor
sbb
iret
rol
loopne
inc
xor
jp
xchg
cs
cmp
ss
dec
add
int3
pop
sub
pushf
js
push
jnp
adc
xchg
call
mov
int
push
add
nop
sub
push
or
ds
sub
inc
xor
ins
or
adc
fwait
ror
dec
xor
cmp
inc
dec
inc
in
cmp
or
push
jecxz
cmp
mov
mov
mov
fbld
mov
scas
lods
and
loop
outs
loop
into
sbb
jp
xchg
mov
push
out
mov
div
push
ret
imul
stos
push
sub
cli
mov
fstp
cwde
fild
aas
cmp
in
es
(bad)
dec
inc
add
sub
dec
push
and
nop
sti
retf
shl
mov
pushf
pop
fs
out
cmps
movs
shl
or
sub
sub
add
outs
sqrtps
loope
cmc
int
xchg
ja
ins
hlt
popa
sub
in
or
mov
icebp
fwait
call
fisub
mov
out
ins
sbb
xor
mov
test
cmp
call
inc
fisub
and
aaa
mov
jbe
mov
xchg
ret
xchg
sub
mov
jns
ja
pop
mov
push
xor
push
xchg
inc
jl
cmp
rcr
fld
js
loope
rol
enter
bound
int
fidiv
inc
sti
inc
ja
jbe
pop
mov
ror
sub
leave
mov
sti
addr16
mov
rcl
movs
sti
push
sub
add
fidiv
mov
mov
mov
xor
add
loope
or
add
(bad)
jecxz
mov
pushf
ins
daa
mov
in
enter
outs
enter
ds
jmp
out
inc
retf
mov
sub
fsub
gs
adc
cmp
dec
fldcw
mov
js
dec
cmp
mov
in
repz
sbb
jb
aas
imul
push
ja
cmc
xlat
sahf
clc
mov
fld
push
scas
mov
jmp
or
inc
loop
lods
mov
or
push
push
shr
loopne
loope
stos
cli
in
push
push
jle
(bad)
rol
jo
mov
gs
fmulp
test
cmc
test
in
jbe
movs
push
repz
or
mov
lfs
fst
pop
cmp
fs
loopne
movs
push
dec
jecxz
inc
push
(bad)
push
adc
mov
add
in
inc
inc
jl
pushf
jmp
sar
sub
mov
sub
dec
xor
and
pop
adc
aas
mov
or
and
mov
jns
enter
sbb
mov
leave
rcr
inc
mov
rcr
lods
mov
in
in
cmp
mov
inc
push
test
outs
int3
nop
sub
mov
xor
fdivr
pop
ret
xlat
in
pop
inc
mov
(bad)
xchg
adc
pop
pop
or
popa
popf
loop
push
retf
xor
jmp
cld
arpl
jmp
ss
cmp
daa
inc
pop
cs
icebp
inc
out
adc
sbb
jae
add
push
dec
ds
or
push
and
dec
daa
out
mov
mov
and
ror
sti
inc
das
jno
popf
ja
mov
fdiv
add
cwde
ret
jecxz
and
aad
daa
mov
mov
inc
outs
das
add
fcmovb
xchg
ss
sub
push
iret
aas
xor
sti
aam
fld
lods
mov
(bad)
pop
rol
ins
and
add
mov
jne
outs
jl
mov
(bad)
mov
scas
xlat
xor
repnz
push
sahf
adc
aas
mov
mov
sbb
and
js
(bad)
movs
cmps
mov
cld
pop
fcomp
aam
push
ret
add
aad
pop
mov
nop
jecxz
jecxz
jne
cmp
inc
cld
jae
or
enter
outs
mov
add
imul
rol
inc
xor
icebp
sub
xor
jg
stos
stos
repnz
xchg
sub
iret
inc
jmp
mov
pop
loop
sub
xor
es
sub
retf
fild
repz
shl
push
aaa
xor
mov
push
mov
fiadd
cwde
mov
cmp
add
data16
call
push
dec
out
or
xor
xor
mov
and
xor
cli
mov
dec
movs
and
sbb
sbb
imul
nop
xor
aaa
mov
push
dec
jmp
mov
lock
sub
add
dec
mov
iret
jmp
mov
mov
sbb
jmp
sbb
bnd
push
out
pop
ret
push
jne
jl
jmp
mov
cmps
add
nop
(bad)
xor
sahf
sbb
(bad)
je
mov
ins
or
fnstcw
push
loopne
cmp
(bad)
retf
mov
retf
fnstcw
sti
fstp
popa
retf
imul
ja
loope
xor
out
data16
stc
jnp
nop
arpl
mov
js
pop
lahf
fs
push
or
ret
jmp
jnp
bound
pop
loopne
xor
lds
in
int
fs
add
add
add
shl
nop
mov
ins
shl
xor
xchg
mov
sbb
xchg
sub
jle
cmps
dec
mov
mov
sbb
or
daa
dec
mov
jbe
fist
call
pop
add
ds
push
movs
repnz
jl
pop
pop
sbb
jp
pop
movs
out
movs
push
imul
mov
and
(bad)
mov
fstp
daa
or
add
call
js
jl
jmp
and
call
imul
inc
fbld
ja
lods
cs
xlat
inc
lods
scas
mov
inc
ret
dec
movs
dec
js
stos
xlat
into
imul
adc
out
push
add
ret
aaa
adc
push
push
pop
pop
jo
mov
lds
push
add
push
jne
daa
inc
out
pop
test
pop
jo
js
jmp
mov
jbe
cmp
ret
adc
(bad)
sub
fidivr
xor
or
imul
test
push
adc
push
mov
aas
ja
and
and
sbb
cmc
fwait
inc
call
les
push
and
lahf
lods
leave
popf
pop
cld
movs
outs
xchg
xor
xlat
jg
mov
pusha
mov
cmp
dec
lods
jb
push
leave
cmp
push
das
jg
fwait
sahf
xlat
cmp
xchg
(bad)
inc
sbb
shl
cs
je
or
dec
movs
and
jno
pusha
pusha
imul
sbb
push
and
and
mov
fs
mov
jnp
retf
(bad)
les
pop
ins
cmp
outs
add
or
push
dec
add
seta
xor
mov
inc
std
adc
jmp
add
and
xchg
mov
out
jo
scas
mov
xor
xor
retf
(bad)
shl
in
xor
dec
mov
jb
add
push
cli
loopne
or
sbb
xchg
or
into
scas
mov
or
test
out
xchg
and
mov
jle
mov
add
inc
mov
push
lock
or
add
rol
mov
stc
pop
push
jmp
xor
dec
mov
jecxz
(bad)
(bad)
arpl
data16
xor
(bad)
shl
movs
adc
adc
xchg
test
pushf
ins
fmul
in
int3
sahf
xor
or
pop
add
push
mov
xor
mov
mov
jmp
push
sbb
fiadd
add
jmp
pusha
adc
mov
out
imul
inc
mov
popa
sub
add
jb
or
pop
mov
dec
idiv
ins
cmp
out
xchg
stos
sahf
aam
mov
lock
les
xchg
fsub
jecxz
into
fimul
stc
test
div
sub
imul
xchg
daa
push
test
pop
adc
fsin
les
into
mov
mov
fcom
push
and
ss
push
hlt
push
mov
sar
popa
ret
jmp
add
repz
das
mov
sbb
jne
imul
lods
out
iret
pop
in
in
imul
lea
mov
sbb
xchg
adc
xor
fwait
jl
jmp
shr
sahf
cli
call
test
sti
(bad)
cmp
xor
dec
out
js
out
repz
dec
scas
inc
dec
sar
push
adc
xor
xor
or
ja
cmp
js
daa
inc
cmp
dec
cmp
out
test
mov
xor
jno
mov
je
imul
push
cli
jns
mov
push
aas
retf
es
pop
imul
into
test
xor
pop
(bad)
sahf
ret
popa
das
outs
popa
call
cwde
mov
les
adc
jle
mov
jae
xlat
ficom
loop
adc
push
or
daa
lods
push
xor
lock
mov
fisttp
in
pop
dec
(bad)
mov
xchg
lahf
(bad)
inc
xlat
push
sub
mov
push
adc
push
iret
jne
or
(bad)
dec
fnstcw
jnp
jmp
mov
cld
mov
mov
dec
pop
movs
ror
pop
aas
addr16
fstp
sub
jbe
out
jbe
fstp
imul
jo
and
dec
and
sti
stos
mov
mov
push
jno
movs
cmp
cli
push
ja
add
retf
cmp
add
out
test
and
(bad)
loopne
fwait
dec
inc
sbb
push
adc
movs
sub
push
sbb
xor
and
lahf
sti
mov
loope
pop
jle
scas
and
adc
mov
(bad)
mov
aas
inc
nop
stos
aaa
sahf
shl
in
dec
pop
mov
(bad)
(bad)
sar
mov
lods
shr
test
test
es
mov
mov
out
stos
and
cmc
dec
imul
addr16
je
mov
xchg
es
rcr
push
lods
mov
add
jo
mov
cmp
test
out
imul
jbe
call
cmps
mov
sub
scas
imul
xor
mov
mov
jle
out
retf
or
adc
jno
or
jge
mov
add
mov
xchg
fcmovb
push
push
scas
push
popa
push
dec
push
cdq
mov
fcomp
jb
dec
add
ret
nop
jecxz
aas
inc
push
and
push
push
out
pop
scas
aad
out
(bad)
jb
push
(bad)
push
fwait
int3
mov
out
emms
fadd
jne
add
int
push
out
in
and
nop
dec
cmp
scas
dec
loope
into
cli
jno
out
adc
stc
ret
push
inc
mov
push
out
pop
(bad)
ds
and
test
rcl
cmp
cld
shr
push
jmp
std
jmp
dec
repnz
test
test
jo
mov
aam
xchg
psrld
(bad)
out
nop
mov
pop
in
in
retf
sbb
pop
push
in
push
int
pusha
out
test
mov
pop
mov
mov
xchg
test
repz
jl
mov
clc
pop
or
pop
es
mov
adc
cmp
fldenv
sub
dec
sub
mov
dec
jae
(bad)
fdivr
xor
push
adc
cmps
sub
pop
out
das
test
mov
xchg
adc
cmp
pusha
das
call
daa
sub
cli
out
jl
fsubp
pop
jp
sbb
in
mov
jecxz
aas
cmp
mov
outs
cdq
fisttp
cmc
sub
(bad)
mov
and
dec
adc
jns
cmc
outs
mov
jo
adc
in
push
test
lds
imul
or
outs
dec
mov
push
pinsrw
stos
cdq
out
adc
pop
push
xor
add
fwait
jp
jne
and
mov
adc
repz
aaa
mov
push
(bad)
scas
push
aas
(bad)
cmc
pop
inc
jge
and
inc
add
test
jns
pop
daa
jmp
mov
add
into
jmp
inc
xchg
adc
enter
pop
fcomip
popa
push
sub
mov
mov
sub
xchg
sub
sbb
pop
mov
mov
and
imul
lods
xchg
sahf
jne
test
ficom
fimul
clc
mov
iret
lahf
stos
xor
pop
jmp
data16
(bad)
mov
imul
jmp
push
ja
stc
mov
mov
and
mov
das
(bad)
movs
mov
pop
mov
pop
ja
rol
nop
pop
nop
xor
jle
xchg
icebp
dec
xor
ins
push
ror
fcomip
out
fxch
sbb
repnz
das
(bad)
loopne
hlt
inc
lock
mov
in
adc
xchg
and
jle
push
mov
or
add
sub
pushf
add
sbb
and
pop
cvtps2pd
dec
(bad)
sub
ins
sti
mov
ror
and
cld
xor
mov
or
(bad)
(bad)
sub
jp
mov
cmps
ins
fldenv
dec
loope
iret
jmp
jge
dec
hlt
mov
cs
(bad)
pop
pushf
fwait
cld
sub
mov
add
or
sub
dec
call
jae
sahf
mov
jnp
test
mov
pop
je
cmps
jne
jp
fadd
repz
push
sbb
out
pop
mov
mov
clc
dec
fwait
xchg
aaa
inc
mov
leave
pushf
mov
js
mov
outs
mov
dec
aad
fmul
add
stc
or
mov
loope
push
(bad)
(bad)
pop
test
sub
xchg
outs
aaa
mov
int
or
mov
call
dec
add
test
in
aam
pop
or
pop
xor
adc
test
cmp
and
sub
or
sub
outs
ds
add
adc
cmp
push
fcmove
xor
ins
and
dec
mov
ja
call
adc
pop
in
cmp
call
lea
mov
aad
repz
jbe
std
fnstcw
stos
cmp
fdiv
adc
neg
jecxz
sub
aaa
scas
xor
std
pop
pop
mov
das
mov
test
mov
cld
nop
and
adc
stos
ds
xchg
sti
dec
mov
sub
adc
mov
pushf
mov
stos
stos
dec
inc
stos
jg
cmps
imul
mov
pop
mov
call
aam
movs
bnd
cmp
imul
jnp
mov
cs
mov
leave
xchg
fiadd
add
bnd
lea
(bad)
push
add
mov
and
arpl
jmp
add
dec
ds
jecxz
rcr
jg
or
mov
lock
(bad)
fmul
nop
adc
mov
dec
jle
push
dec
xor
sub
shl
std
jne
push
fwait
bound
test
fisubr
jecxz
mov
push
jo
aad
pop
xchg
jne
add
repnz
cmp
pop
xchg
pop
and
mov
sbb
mov
add
xchg
lock
xor
cdq
es
jnp
add
mov
nop
dec
dec
and
mov
rol
scas
mov
add
pop
xchg
xlat
loop
aas
push
movs
mov
cmp
sbb
xchg
call
add
dec
shl
jbe
mov
pop
mov
xlat
inc
fsub
jmp
sub
sub
(bad)
cmc
push
daa
or
ret
icebp
mov
pop
add
xlat
cmc
int
shl
mov
mov
leave
stc
out
xchg
int3
adc
ss
(bad)
push
rcr
and
add
fadd
jp
pusha
rcl
pop
ds
xor
(bad)
aad
pop
les
in
adc
fdivrp
(bad)
mov
lds
cmp
jmp
dec
ret
jg
aam
repz
sub
or
push
cmc
hlt
pop
xor
push
xor
push
xor
jle
inc
mov
ret
popa
int
xor
xchg
pusha
add
sub
mov
dec
inc
and
mov
cdq
test
sbb
arpl
sbb
mov
pusha
jb
xor
fsubp
mov
adc
int3
push
pop
and
lds
hlt
in
scas
arpl
pop
lods
test
inc
dec
mov
test
sti
push
fdiv
and
fidivr
(bad)
inc
or
out
ins
leave
ret
sub
loope
pop
mov
aaa
fld
mov
ss
dec
and
pushf
jg
xchg
das
(bad)
pop
add
int
mov
mov
and
(bad)
xchg
inc
add
inc
push
adc
adc
dec
xchg
mov
in
add
fisubr
xlat
movs
aad
cmp
mov
call
and
cmp
push
stc
call
ins
scas
push
add
in
push
cmp
push
push
outs
and
inc
inc
popf
push
enter
fdivrp
and
lods
sbb
xor
imul
adc
mov
push
test
xchg
mov
inc
jb
lahf
fmul
mov
dec
mov
push
movs
movs
sbb
ss
pop
ficomp
xor
out
sbb
in
or
jle
and
(bad)
mov
mov
in
rol
mov
xchg
sbb
pop
not
dec
test
cld
hlt
sar
into
inc
clc
jno
loopne
imul
pop
in
aam
xchg
cmp
sbb
jno
and
gs
or
pop
shl
push
ret
adc
adc
mov
or
shl
jns
sub
fimul
add
mov
push
fwait
clc
adc
rcr
adc
fisub
xor
pop
(bad)
jge
ret
(bad)
mov
iret
inc
ja
inc
fwait
mov
hlt
mov
popf
cld
sbb
in
and
or
lods
arpl
aaa
rcr
pop
test
shl
neg
ret
pop
sub
mov
mov
inc
dec
int3
mov
cmp
add
sbb
pop
test
fmul
mov
jle
dec
jmp
stc
pop
push
retf
stos
popa
dec
loopne
addr16
(bad)
mov
cmp
popf
and
xor
test
cli
loopne
(bad)
stos
not
sbb
mov
xor
or
or
daa
int3
aas
adc
push
nop
es
ja
cmp
in
(bad)
pop
jp
ja
or
or
mov
(bad)
stc
add
js
push
dec
mov
lds
push
inc
sub
xor
hlt
add
pop
lods
movs
dec
jae
lods
(bad)
retf
xor
mul
add
push
sbb
fistp
push
cmp
sar
into
ss
xchg
xor
movs
add
mov
lahf
dec
bound
mov
xor
vpsllq
sar
das
mov
mov
imul
mov
(bad)
fiadd
lods
jp
or
mov
add
imul
xchg
ret
mov
xor
mov
jmp
fld
cmc
(bad)
sub
jbe
xchg
push
stc
sub
pop
push
jno
test
mov
fisubr
cwde
(bad)
lods
mov
xchg
add
push
push
xchg
fisttp
lods
pop
leave
clc
mov
xchg
(bad)
push
or
dec
ja
xchg
inc
push
stos
add
push
fwait
sti
jecxz
int3
cmps
jmp
mov
xor
or
pop
pop
loop
adc
mov
sbb
cmp
jns
jge
mov
sbb
(bad)
mov
aas
imul
push
jnp
cmp
int3
stc
popa
lahf
add
mov
inc
in
sub
or
push
cs
jecxz
fnstcw
cmp
mov
je
push
(bad)
inc
jb
stc
in
cmp
hlt
shl
adc
ds
add
add
xchg
jmp
aad
inc
dec
jo
cmp
sbb
xchg
hlt
sbb
loop
sub
cwde
push
neg
pop
sub
(bad)
ds
or
popf
call
mov
call
das
pop
call
xor
lods
xchg
sub
adc
data16
icebp
cwde
jno
js
xchg
jecxz
mov
cli
pop
jb
retf
adc
adc
xchg
movs
xlat
clc
cmps
int
inc
lock
test
cmc
ins
cmc
dec
jge
int3
lock
lods
into
leave
jp
mov
retf
mov
stos
mov
sub
mov
or
in
cld
push
popa
mov
es
cmps
pop
or
jg
gs
movs
cmps
add
xchg
and
pop
ret
stc
jmp
jmp
mov
sub
jae
idiv
sbb
pop
lahf
push
jl
xor
xchg
ins
jo
dec
mov
aas
dec
pop
adc
aaa
sub
mov
jno
dec
xor
jl
jns
pop
outs
ss
sahf
in
ds
mov
sbb
xor
out
jno
mov
mov
iret
jne
out
push
sbb
nop
inc
dec
and
and
cld
dec
pop
jmp
mov
add
(bad)
jge
pop
inc
fstp
shl
lock
ror
dec
add
scas
(bad)
and
inc
nop
inc
mov
inc
adc
ret
sub
retf
cmps
sub
cmp
add
(bad)
mov
inc
inc
dec
pop
popf
pushf
cmp
cmp
fild
xor
ror
or
std
inc
pop
lahf
inc
mov
mov
js
fisub
xchg
gs
(bad)
jne
in
jp
sub
mov
or
fmul
outs
fisubr
ins
loopne
cmp
jge
xchg
shl
in
cs
add
xor
shl
xor
or
cwde
in
inc
xchg
retf
push
xor
mov
cdq
daa
arpl
shl
loop
mov
je
out
call
sub
cli
movs
adc
jo
pop
popa
and
pop
sub
pop
mov
cmp
lahf
jmp
ret
fs
sbb
es
bound
xchg
xchg
xor
jmp
rcr
or
fisubr
or
ins
inc
int
inc
fmul
dec
popa
and
adc
cmp
ss
mov
xchg
test
push
and
rol
and
imul
xchg
aad
mov
inc
mov
or
add
adc
stos
push
aaa
push
fnsave
and
mov
and
sbb
xchg
and
xor
and
(bad)
repnz
lock
leave
or
adc
dec
sahf
and
xchg
mov
push
fyl2xp1
cmp
sub
push
cmp
out
jb
xchg
push
or
mov
jle
stc
inc
jecxz
lea
fidiv
mov
cmps
lds
inc
jb
jnp
or
clc
iret
jmp
push
popf
or
push
mov
clc
or
push
shl
add
and
cdq
faddp
cmp
mov
pop
jo
adc
retf
stc
xor
adc
call
dec
mov
mov
jo
mov
cmps
and
dec
scas
push
retf
scas
push
xchg
and
jge
cmps
xchg
shld
mov
sub
repnz
sbb
addr16
adc
std
pop
jne
je
arpl
cmp
lods
jbe
xchg
dec
jno
jne
movs
mov
mov
aad
dec
nop
inc
dec
sti
xchg
lock
in
push
test
ret
add
out
mov
cmps
pushf
inc
xchg
ins
pop
pusha
fdivr
pushf
dec
cli
ins
mov
sub
xchg
xor
jo
sbb
add
ds
jecxz
mov
sar
jmp
fidivr
jmp
aas
mov
lahf
adc
fs
and
jne
add
cmp
inc
ret
lahf
push
jmp
int3
vmaxsd
in
outs
sbb
ds
movs
adc
or
push
xor
jo
mov
xchg
sbb
sub
lea
call
jge
call
bound
xchg
in
or
(bad)
out
jno
popa
mov
cwde
pop
popf
nop
add
sub
xchg
hlt
pop
popa
or
and
dec
cmp
sub
jge
loop
and
push
enter
fdivr
fstp
test
lahf
sbb
inc
jmp
cmp
mov
add
out
cmp
movs
outs
fstp
(bad)
add
icebp
lahf
mov
lods
call
fild
pop
loopne
jge
adc
adc
mov
(bad)
test
je
out
inc
inc
sbb
cs
int3
mov
vmovdqu
xor
scas
add
scas
inc
cmps
jp
inc
in
mov
icebp
jge
cmc
loopne
or
in
int3
and
imul
jg
pop
out
test
xchg
out
addr16
inc
repz
lds
sub
test
pop
cmp
in
mov
jo
or
add
sbb
cmp
pop
in
outs
fnstenv
and
add
push
leave
and
jmp
jbe
and
aas
nop
sar
data16
ret
sar
imul
dec
inc
cmp
mov
clc
pop
jae
sub
cdq
xor
shl
mov
mov
dec
in
and
(bad)
aam
nop
scas
xor
mov
mov
push
pop
add
pop
cmp
gs
jmp
xchg
add
mov
ret
push
outs
popf
enter
pushf
mov
push
pushf
sub
call
mov
lods
retf
(bad)
ins
dec
add
test
jmp
mov
daa
inc
es
lods
sub
push
lahf
and
push
mov
dec
retf
mov
cmp
rcr
aam
or
inc
push
xlat
inc
sub
mov
inc
mov
data16
cmp
cmp
pop
loopne
pop
jg
mov
xchg
sti
xor
xchg
and
pop
das
mov
push
ja
stc
fidiv
gs
inc
out
dec
xchg
mov
pop
mov
sbb
jo
xor
cld
sti
(bad)
retf
xchg
shr
fisubr
test
pop
loopne
push
call
pop
adc
jmp
add
mov
aaa
sub
(bad)
das
xor
or
retf
mov
not
jns
mov
xor
push
retf
scas
or
pop
pop
pop
stos
or
mov
pop
sbb
jg
xor
(bad)
mov
es
movs
cmp
mov
or
repnz
or
loopne
lods
cmp
das
push
adc
rcr
ds
jg
aam
xchg
or
jl
inc
push
cmp
out
fdiv
lds
cmc
lods
jns
and
fnstenv
repz
test
mov
repz
stc
jno
fdivr
js
shl
push
cmp
cmps
test
repz
pop
xor
xchg
jmp
push
out
retf
outs
add
xchg
lods
push
ins
bound
ins
dec
jnp
loop
dec
(bad)
mov
pop
sub
xchg
gs
dec
xchg
jnp
inc
ret
repz
gs
sbb
fldcw
outs
xor
popa
mov
(bad)
cdq
sti
add
in
in
fist
xor
mov
arpl
out
aaa
add
lods
data16
lods
arpl
and
pop
adc
popw
imul
dec
cmp
into
mov
js
iret
scas
mov
dec
push
popa
imul
adc
or
push
inc
jae
cs
jl
sub
lea
lea
inc
sti
mov
pushf
xor
mov
push
(bad)
jb
push
sub
adc
jo
loope
mov
scas
ins
jns
mov
call
inc
xchg
(bad)
xchg
cmps
jne
jbe
ins
aaa
aad
test
icebp
add
cs
mov
out
mov
int3
ret
mov
or
sbb
in
out
aad
xor
dec
cld
cmps
push
(bad)
test
into
imul
xchg
pop
dec
lods
cmp
test
adc
(bad)
iret
scas
and
push
add
xchg
pop
outs
push
adc
pusha
dec
cmp
repz
sbb
or
ror
fmul
adc
popf
jg
push
push
pop
dec
mov
mov
adc
fsubr
call
xchg
mov
cmp
std
hlt
das
push
mov
xchg
push
and
ror
fdiv
adc
mov
in
sub
pop
mov
popa
iret
mov
mov
shr
and
mov
inc
and
or
fdiv
adc
les
pop
xchg
mov
in
clc
int
xchg
aaa
ror
xchg
scas
mov
and
cmp
pushf
add
dec
and
rcr
outs
and
outs
sbb
add
pushf
xchg
jne
ins
push
popa
imul
mov
mov
inc
fstp
lods
xor
sub
fs
cmp
add
sub
mov
dec
add
jae
mov
outs
pop
pop
push
sbb
cmc
lods
push
cmp
lahf
mov
cmp
ffreep
rcr
pop
push
dec
adc
and
les
lds
repz
or
sahf
test
ror
das
div
lds
and
mov
fidiv
cwde
sti
push
popf
outs
dec
xlat
inc
dec
loope
enter
xlat
fadd
jp
aam
adc
inc
push
push
repnz
xlat
xlat
shr
in
xor
imul
push
push
bound
sub
mov
scas
mov
xchg
pop
adc
pop
data16
dec
fld
out
stc
imul
fdivr
add
shl
test
sbb
and
loopne
mov
retf
idiv
mov
sahf
xor
imul
add
in
nop
and
pop
inc
mov
cmp
ud2
jmp
mov
adc
or
sbb
outs
fild
inc
add
mov
jg
add
fldenv
push
out
mov
add
jge
jnp
sub
fwait
push
and
ror
jae
in
push
retf
mov
js
xchg
push
sbb
repnz
bound
(bad)
mov
mov
mov
xor
pop
ficomp
push
nop
cli
les
push
or
or
std
push
not
xlat
xchg
(bad)
cmc
clc
push
sbb
scas
dec
paddsb
loope
mov
jo
mov
fistp
xchg
in
popa
repz
outs
mov
lock
leave
test
adc
iret
sbb
mov
xor
out
mov
test
mov
cmp
push
inc
xchg
push
(bad)
retf
popa
mov
fwait
push
push
idiv
mov
push
outs
inc
(bad)
and
mov
mov
push
outs
ds
movs
jae
push
out
xchg
cmc
pop
pop
ins
jmp
mov
hlt
sbb
leave
inc
ficomp
mov
out
aad
outs
xor
test
out
fwait
and
pop
je
cld
mov
stos
out
sar
add
add
stc
nop
test
xor
push
in
jbe
clc
jp
dec
int3
sar
movs
pop
fwait
aas
mov
push
repnz
mov
and
fdiv
xchg
adc
jmp
add
xor
scas
mov
add
in
sub
cmp
sub
loop
mov
sbb
lods
push
adc
xchg
fstp
cmc
xchg
out
enter
or
nop
into
imul
xchg
in
mov
test
cmp
cmp
cmc
mov
imul
xchg
gs
and
pop
in
dec
add
xor
ins
cmp
retf
iret
add
aas
test
xchg
cmp
add
pop
ja
mov
dec
int3
in
or
xor
or
dec
ret
sbb
jecxz
ds
test
lock
rol
cmp
stos
cdq
pop
ror
dec
rol
inc
mov
cmps
sbb
pop
xchg
push
and
jg
fwait
xor
dec
jge
pusha
aas
ret
sbb
mov
push
aam
xor
dec
jbe
mov
ja
(bad)
push
pop
inc
or
push
mov
aaa
mov
sub
retf
sti
shl
bound
jne
push
sbb
xor
scas
xchg
mov
outs
sub
shl
or
inc
pop
fst
mov
xor
jle
bound
clc
cmc
add
cmp
cwde
or
leave
dec
pop
sbb
sbb
pop
ret
repnz
cmp
cs
(bad)
sbb
xchg
xor
and
hlt
dec
add
inc
inc
loope
fwait
popa
js
cmp
cmp
mov
hlt
lock
pop
push
(bad)
jae
pusha
dec
iret
repnz
sti
mov
push
popa
dec
pop
aam
arpl
mov
ins
mov
pusha
mov
or
in
sahf
loope
leave
pop
push
jo
test
mov
adc
dec
leave
mov
repnz
(bad)
fadd
cwde
and
jns
imul
rcr
sub
scas
xchg
jp
lds
popa
retf
xchg
dec
aam
shl
(bad)
aad
fs
push
ss
movs
dec
das
loope
inc
jmp
dec
cli
out
adc
jae
pop
sub
mov
movs
lock
and
pop
out
(bad)
lock
add
xor
dec
sub
cs
add
xor
cmps
pop
and
jp
and
in
mov
xchg
sbb
das
retf
push
std
jg
test
gs
jb
cdq
sar
loop
aas
inc
test
cmps
out
lea
out
sub
sub
pop
xchg
cdq
mov
cdq
pop
bound
fbld
ja
jnp
jmp
(bad)
push
push
dec
test
mov
cmps
aas
mov
cmp
out
test
and
inc
ret
xor
mov
js
loopne
ret
ret
jp
sbb
and
cmovno
movs
ds
lock
shr
lods
test
add
ret
inc
(bad)
xlat
xor
sar
mov
cmps
ins
sbb
inc
mov
add
and
pop
icebp
jo
scas
inc
(bad)
cld
cli
into
lahf
jno
fwait
lea
sub
mov
mov
scas
test
inc
(bad)
mov
push
(bad)
mov
pop
pop
popa
clc
jb
and
pop
jp
jmp
adc
mov
pop
xor
push
imul
xchg
sbb
mov
iret
out
cmp
pop
jmp
lock
dec
ins
jp
push
aaa
sbb
enter
outs
lods
inc
adc
and
shl
test
daa
pop
cld
pop
fst
cmp
leave
dec
std
sbb
dec
ror
mov
lahf
pop
push
in
fisttp
inc
and
cmps
sub
pop
cmp
out
sbb
(bad)
mov
inc
mov
and
mov
push
cwde
ins
aas
aaa
fwait
(bad)
scas
push
inc
enter
repz
out
pusha
cld
mov
mov
pusha
scas
lock
or
push
and
clc
int3
xchg
pusha
int3
shr
(bad)
in
in
sti
inc
fmulp
movs
adc
push
stos
or
in
das
lock
jbe
(bad)
jo
mov
fwait
leave
sar
in
imul
push
or
sbb
enter
pop
jmp
ret
add
(bad)
lahf
sub
sub
retf
loopne
iret
jns
fs
sub
dec
mov
xor
cmp
or
xor
inc
pop
and
ret
repnz
in
mov
inc
cmp
sar
cmp
cmp
add
pop
dec
xor
je
(bad)
inc
arpl
push
test
xchg
jg
push
xchg
xor
push
retf
xchg
dec
outs
loopne
sbb
sub
add
cmc
mov
dec
or
inc
pop
mov
cmc
ret
movs
inc
mov
cmovp
mov
loopne
xlat
and
mov
cmc
push
jbe
sbb
or
cmps
add
loopne
jecxz
push
test
outs
scas
xchg
adc
add
in
test
daa
mov
adc
pop
mov
fstp
mov
imul
movs
psrlw
push
sub
cwde
jge
xchg
push
dec
daa
or
scas
cdq
cmp
mov
sub
into
cli
outs
dec
pop
adc
js
push
dec
push
fstp
fdivr
lea
(bad)
fsub
mov
xchg
cmp
mov
loope
jne
jmp
adc
dec
or
and
stos
aaa
ja
inc
jb
jle
ds
adc
mov
(bad)
cmc
mov
popf
and
pop
jmp
or
ss
dec
test
inc
pop
dec
adc
loopne
pop
iret
jg
fcmove
jmp
xchg
inc
shl
xor
xlat
aam
cmps
and
mov
(bad)
ffree
test
js
add
dec
and
mov
mov
cwde
mov
ror
call
adc
mov
in
sbb
gs
pop
call
fld
inc
pop
cmp
mov
or
das
out
cmp
sahf
addr16
xchg
push
mov
jmp
mov
xor
ret
mov
mov
lahf
cmps
sub
ret
fcmovnb
or
es
adc
mov
jmp
ins
xchg
jnp
sub
pusha
jge
jmp
mov
out
fmul
fwait
movs
lods
push
retf
inc
xor
je
jge
scas
mov
mov
popa
into
dec
mov
out
fld
add
xor
and
jl
lock
pop
cli
jle
push
ss
movs
xchg
pop
outs
push
iret
or
cwde
icebp
xlat
dec
xor
xor
movs
jbe
push
dec
push
fadd
pop
in
ins
pop
xchg
xchg
je
xchg
outs
ror
lods
imul
daa
pop
mov
jp
fcomp
add
mov
cmp
clc
jb
mov
inc
cmps
cli
xor
inc
(bad)
fist
adc
cmps
sti
test
xchg
sahf
xlat
and
add
daa
mov
mov
pop
adc
pop
movs
jmp
xor
push
jmp
pusha
lea
inc
sbb
push
and
jmp
not
ja
jle
jb
sub
inc
mov
jnp
sub
movzx
xor
push
retf
movs
pushf
inc
sbb
xor
sti
lods
stos
retf
mov
adc
in
mov
mov
pop
jbe
push
jmp
inc
sbb
adc
inc
dec
xchg
lods
mov
lds
cmp
and
mov
mov
dec
cmp
push
inc
jp
daa
loopne
in
mov
adc
push
push
add
adc
into
lods
mov
push
mov
push
sub
pop
xchg
or
ins
daa
and
mov
int3
ret
aas
mov
out
mov
cld
into
ds
xchg
push
jle
loope
or
aaa
jmp
dec
(bad)
int
call
movs
dec
(bad)
jle
in
xor
stc
sub
cmp
mov
jmp
dec
xor
xor
and
es
retf
leave
test
push
inc
cld
std
(bad)
xor
sar
popf
inc
call
mov
cmp
mov
add
imul
mov
mov
test
mov
stos
ins
ficomp
out
and
in
lds
daa
shl
les
shl
imul
retf
dec
sub
mov
call
in
mov
xchg
or
push
push
adc
lahf
std
je
out
jmp
icebp
ins
pop
and
rcl
jp
adc
dec
setae
push
clc
movs
dec
or
into
push
loope
out
xchg
and
jnp
(bad)
jge
loope
mov
out
xchg
cmp
lock
cmp
and
in
xor
data16
or
xlat
lock
(bad)
lock
lahf
and
dec
sbb
inc
push
les
jnp
mov
std
cmp
adc
add
mov
(bad)
loopne
scas
dec
movs
dec
call
sub
outs
sbb
mov
out
sub
dec
mov
nop
ds
fsincos
dec
fistp
into
hlt
mov
jns
int3
enter
sub
addr16
popa
or
lahf
xchg
ins
mov
bound
jno
xchg
sub
mov
jno
inc
lods
cdq
push
scas
mov
movs
xchg
mov
ds
pop
push
mov
adc
xor
push
stos
sub
cmp
inc
adc
aas
sbb
(bad)
mov
pop
inc
(bad)
and
dec
repz
and
imul
jne
push
mov
jecxz
push
loop
lock
fisttp
fisubr
mov
repz
icebp
nop
fs
(bad)
fimul
add
adc
jmp
push
outs
movs
mov
mov
add
in
cmps
imul
mov
out
add
fwait
xor
pop
stos
and
outs
sub
addr16
mov
pop
jge
mov
sbb
(bad)
cld
xor
add
repz
das
ret
sti
sbb
aad
iret
pop
mov
cmp
add
lods
pusha
test
ror
dec
push
cmp
dec
cs
ud2
cmp
ins
bound
hlt
test
fst
mov
push
lods
mov
jp
in
xchg
xchg
outs
adc
mov
jge
(bad)
js
sets
and
push
loope
sti
push
add
jecxz
push
fdiv
lea
xchg
cmp
dec
sbb
mov
cmovno
cwde
call
pop
cmp
jmp
inc
test
je
and
mov
inc
xchg
push
psubq
inc
jg
jg
fisubr
xor
icebp
test
fsub
sbb
cmp
outs
ffreep
add
fisttp
xchg
push
or
aas
lahf
jns
jns
stc
sbb
jnp
repz
xor
inc
jno
inc
jne
imul
ins
pop
push
inc
xchg
ins
mov
or
mov
rcl
dec
mov
sar
sbb
adc
rol
sbb
xor
aad
enter
js
xchg
adc
jp
sub
push
outs
mov
xlat
mov
push
into
adc
int3
push
mov
leave
pop
loopne
(bad)
adc
mov
out
mov
sbb
pop
and
push
arpl
pop
inc
adc
fldcw
add
dec
mov
in
retf
(bad)
jge
sub
adc
dec
popa
ret
xchg
or
loopne
or
add
push
(bad)
lods
mov
icebp
sub
add
fucomp
and
(bad)
fnsave
je
(bad)
cmps
mov
cs
sti
int
mov
mov
adc
dec
jns
rcl
jmp
mov
push
lahf
aas
mov
jmp
jl
jecxz
(bad)
pop
add
stos
push
aas
sbb
xchg
ficom
mov
cmp
stc
inc
dec
scas
cmc
add
jl
and
movs
cdq
sar
or
movs
inc
pop
push
popf
sbb
sub
sub
jae
imul
daa
fisttp
aaa
mov
inc
sti
mov
sti
shl
cmp
cmp
test
and
and
adc
jmp
sub
clc
mov
lds
(bad)
sub
mov
clc
jle
pop
mov
inc
inc
or
dec
sbb
ja
jmp
(bad)
ja
dec
loopne
push
sub
ins
push
outs
cld
mov
inc
xor
jp
sbb
gs
hlt
call
xchg
adc
and
ror
sbb
inc
push
cmp
mov
add
and
cmp
push
inc
inc
mov
enter
and
dec
xchg
cmp
or
jmp
icebp
retf
xor
leave
loopne
jno
or
jecxz
mov
fadd
arpl
lds
sub
jge
dec
adc
xchg
fild
adc
aad
sti
push
fmul
aas
mov
dec
jmp
xor
sub
(bad)
hlt
cwde
aaa
dec
jmp
cmp
dec
push
rcl
ror
or
test
call
(bad)
inc
mov
in
ja
sar
call
adc
push
scas
add
sub
enter
push
(bad)
and
adc
or
(bad)
aaa
fwait
add
imul
rol
xor
call
inc
sub
push
cmps
mov
push
cli
mov
jb
inc
xchg
mov
cld
add
sub
scas
cmp
or
push
cmp
mov
ror
adc
jae
movs
ror
test
mov
mov
cdq
out
and
mov
mov
call
mov
test
mov
sub
lods
push
pop
ror
in
repnz
mov
cmp
in
cmp
retf
jg
jge
mov
add
push
adc
out
repz
mov
out
adc
mov
dec
cli
and
sub
xor
call
mov
cld
xor
ret
xchg
cmp
dec
stos
repnz
je
pushf
test
jmp
inc
pop
das
mov
je
sar
sub
sbb
mov
inc
(bad)
sbb
push
mov
xchg
jb
test
out
cmp
inc
cmp
sub
retf
lock
mov
adc
cwde
push
jae
dec
jge
ret
fwait
and
adc
xor
and
adc
inc
dec
push
add
xor
repnz
mov
xor
dec
ins
adc
dec
mov
in
std
sbb
dec
scas
mov
sub
push
call
scas
(bad)
adc
inc
jecxz
fcmove
add
xchg
loop
fucomp
shl
and
scas
add
jns
inc
ficom
int3
lds
adc
push
pop
inc
xchg
into
fwait
adc
fdivrp
jo
mov
outs
jle
and
jns
ret
mov
ret
ins
push
leave
scas
xchg
jmp
and
out
adc
jp
sub
push
das
push
and
sub
imul
push
adc
into
adc
leave
lahf
mov
jb
and
push
inc
cmp
lods
loope
ds
imul
push
dec
mov
in
or
xor
add
int
push
mov
in
xchg
lea
cli
es
jmp
mov
mov
fs
inc
inc
ins
fwait
sub
repnz
movs
retf
test
test
xchg
push
dec
push
xor
iret
retf
addr16
jge
mov
sbb
adc
test
hlt
pop
mov
pop
push
mov
xchg
adc
test
cs
xor
add
mov
xor
movs
inc
loope
xchg
xchg
mov
je
(bad)
adc
jmp
ret
pop
std
dec
sub
fnstcw
fadd
jmp
mov
jg
pop
adc
and
push
inc
mov
aas
jle
jmp
adc
push
out
sbb
ret
push
jl
cmps
repz
add
and
(bad)
pop
xor
aas
ins
adc
ja
or
out
adc
push
mov
je
mul
pop
clc
cmp
mov
stos
mov
push
mov
arpl
pop
add
sub
mov
xor
sub
ret
dec
mov
jecxz
dec
pop
gs
xor
mov
or
and
mov
add
sbb
mov
(bad)
jmp
xchg
movs
stc
pop
xchg
add
jecxz
int
jmp
loopne
cmp
or
push
fistp
ss
cmp
xor
rcl
test
sbb
inc
dec
fild
ja
(bad)
(bad)
outs
cli
mov
xchg
loopne
ret
jnp
and
imul
pop
pushf
aad
out
shl
mov
xlat
inc
inc
fst
std
pop
jb
xor
retf
dec
pop
stos
dec
test
div
je
popa
mov
imul
push
dec
aas
sbb
xchg
call
test
fmul
mov
xchg
xor
cld
mov
jo
pop
(bad)
sar
pusha
lock
push
out
in
xchg
jl
out
cmps
jno
(bad)
stc
add
xor
sar
jmp
mov
mov
jnp
fnsave
(bad)
pop
enter
mov
jo
and
arpl
pop
fistp
in
jmp
cmc
inc
fwait
loope
add
ret
out
push
push
mov
sub
jnp
pop
call
push
test
inc
fcom
js
in
and
les
mov
jb
in
cmp
xor
xor
mov
xor
jg
pop
dec
xchg
jmp
cli
data16
mov
push
popf
and
pusha
xchg
push
in
jns
enter
out
repz
pop
cmp
sbb
cs
jae
jle
xchg
dec
adc
jge
imul
xchg
or
fisubr
aas
pop
bound
cdq
test
sbb
popa
shl
push
sub
neg
xchg
xchg
xor
(bad)
fisubr
jne
or
push
cmps
push
scas
xchg
dec
call
push
sub
mov
pop
pop
fcom
imul
icebp
pop
dec
lahf
in
test
xor
push
div
pop
ret
scas
fsubr
sbb
rol
sar
sub
mov
loopne
loop
jns
ja
popf
cli
add
jle
sub
and
shr
into
je
(bad)
and
sub
ror
inc
dec
shr
ja
pop
cwde
out
ins
sbb
call
and
outs
mov
fdivr
dec
mov
std
jno
mov
(bad)
sahf
fld
or
inc
int3
xchg
lea
fstp
enter
cmc
or
clc
cmp
adc
out
cwde
(bad)
mov
ret
push
mov
nop
sub
ret
jle
push
jnp
and
call
adc
fucom
adc
popf
cld
popa
pop
dec
xchg
xchg
jmp
in
(bad)
xchg
mul
in
in
mov
pop
jecxz
and
and
xor
lock
lds
ss
jo
cmovno
aad
pop
mov
add
mov
out
clc
psllq
out
jle
jmp
dec
cmp
inc
scas
push
add
pop
sbb
adc
inc
std
ins
popa
call
stos
sub
out
les
shr
pop
mov
adc
pop
je
fidiv
mov
in
adc
out
and
and
mov
cwde
inc
cdq
loopne
mov
rcl
sbb
sbb
ror
test
sbb
(bad)
test
and
rol
mov
inc
mov
test
jne
mov
or
mov
ja
and
mov
add
cmp
das
sahf
cmp
int3
add
std
xchg
dec
in
sbb
fisttp
xor
inc
xchg
retf
xchg
aaa
xchg
xor
lahf
imul
and
into
xor
dec
pop
pop
call
mov
in
(bad)
into
inc
mov
es
xor
or
dec
mov
call
enter
imul
adc
sbb
cdq
cdq
not
mov
add
mov
in
loope
mov
lahf
dec
cs
mov
jno
xchg
jno
push
inc
mov
je
(bad)
sahf
pop
jge
mov
sbb
jmp
sub
mov
pop
fdiv
pop
adc
cmp
add
pop
mov
add
inc
sbb
jge
in
pop
jb
mov
int3
dec
pop
leave
stc
xchg
ret
test
cmp
je
jo
sar
and
out
sar
(bad)
fbld
shl
ins
and
mov
arpl
sub
aaa
repnz
scas
dec
jmp
push
cmp
enter
daa
cmp
(bad)
sbb
ret
clc
xchg
dec
xchg
mov
add
leave
out
daa
jo
sbb
push
mov
xor
sbb
sahf
lods
in
jle
repnz
rol
scas
mov
fldcw
dec
pop
mov
test
xchg
mov
mov
mov
out
es
ror
retf
adc
fisttp
dec
add
popf
cmp
adc
dec
stos
or
or
ret
mov
into
ficom
xchg
adc
cmc
add
lahf
(bad)
sub
je
sar
ret
ins
pop
daa
ins
fadd
pop
cmp
(bad)
(bad)
push
sbb
fsubr
xchg
dec
or
enter
xchg
movs
in
int3
or
cmp
xor
push
call
mov
mov
cmp
mov
sub
mov
mov
cdq
cld
ins
sbb
aaa
je
imul
xor
(bad)
mov
push
test
call
or
scas
mov
adc
jmp
lods
mov
dec
push
fwait
sub
int3
inc
cmp
xchg
out
sub
bound
mov
cmps
enter
and
jge
call
mov
push
mov
sahf
sbb
xchg
int3
sar
and
xchg
into
ja
aam
in
push
mov
or
mov
mov
stos
(bad)
mov
xchg
ret
enter
in
push
ret
adc
cmp
dec
mov
prefetch
or
(bad)
imul
push
cdq
dec
lock
or
jbe
pop
into
mov
jbe
xchg
xlat
gs
xor
pop
xchg
loope
mov
adc
rcl
shl
idiv
sahf
inc
or
imul
adc
mov
ret
loopne
fcmovu
mov
int
movs
xchg
and
pop
imul
outs
dec
sub
sub
in
ins
out
aas
scas
data16
mov
ss
xchg
or
pop
mov
ss
ins
clc
and
loope
std
sub
add
sub
xchg
mov
push
loopne
sahf
inc
movs
jp
push
fdiv
sub
repnz
stc
xchg
clc
iret
pop
fimul
xlat
sbb
push
mov
or
xchg
mov
nop
inc
xchg
add
mov
adc
push
adc
dec
push
lock
jmp
(bad)
pop
addr16
jg
out
mov
(bad)
sti
movs
jle
mov
and
mov
or
or
fsubr
mov
pop
xchg
jge
push
add
xchg
xchg
sbb
push
xchg
push
jb
cmp
(bad)
jo
fst
mov
sub
mov
sub
(bad)
or
jge
sti
aad
xor
cmps
out
push
hlt
adc
jno
push
add
mov
cmp
cmps
into
mov
xchg
not
sub
popf
jp
mov
adc
add
mov
mov
movs
mov
add
xor
xchg
into
fild
scas
sbb
ss
lea
xchg
repz
mov
mov
div
out
imul
dec
rol
jg
jecxz
mov
call
mov
ds
js
fwait
jno
mov
jg
cmps
sti
not
das
popf
into
ins
dec
pop
leave
push
imul
mov
inc
int3
enter
jno
mov
loope
fsubr
pusha
mov
nop
dec
mov
sub
fmul
sub
cmps
push
popa
mov
xor
and
and
adc
adc
mov
imul
push
cmps
xor
gs
or
cmp
pop
mov
ret
cmp
sbb
ror
sti
fmul
xchg
sbb
dec
addr16
push
jl
pmaxub
adc
repnz
or
cwde
shl
sub
test
pop
push
xor
shr
gs
sub
xor
fsub
psubusw
and
loop
or
fcmovu
or
mov
mov
repz
push
sub
xchg
retf
ret
std
and
mov
jl
scas
pop
sti
or
fcomi
mov
xchg
push
repnz
cmps
jl
in
sub
push
add
jmp
mov
fstp
out
enter
cld
imul
dec
scas
outs
gs
xchg
cmp
jecxz
or
inc
ins
fstp
enter
xchg
frstor
jbe
pop
ficom
dec
stos
ret
sahf
and
sub
aam
jo
enter
jae
mov
lahf
cld
frstor
mov
stos
adc
pop
inc
aas
jmp
int
sub
loope
pop
mov
mov
lahf
loop
adc
adc
add
jb
or
xchg
test
add
stos
push
lahf
es
(bad)
outs
into
mov
icebp
mov
call
fild
sub
mov
ret
out
dec
xchg
inc
adc
cmps
push
daa
pop
jne
mov
add
ficom
sbb
mov
cmp
ds
dec
jle
fstp
xlat
xchg
cmps
push
test
div
or
pop
mul
cmp
push
das
rcr
mov
lock
lods
jmp
pop
neg
shl
push
in
dec
xor
inc
and
sub
dec
pushf
loop
sbb
fild
mov
push
popf
xchg
mov
ror
jmp
(bad)
(bad)
adc
out
rol
test
in
xchg
mov
cmp
test
ror
fstp
mov
or
addr16
dec
cmp
popf
test
cmp
xor
shl
jg
sub
call
scas
or
pop
mov
aam
add
arpl
in
aaa
sub
lock
ja
fcom
in
jmp
and
frstor
daa
aad
enter
hlt
cmp
sahf
scas
jle
mov
fild
icebp
and
xchg
into
cmc
xor
call
mov
gs
xchg
pop
and
cld
xchg
mov
add
mov
lds
xchg
shl
pop
or
aas
add
test
and
xor
jns
jle
mov
adc
or
adc
ins
test
jns
rol
mov
xchg
(bad)
sbb
sub
es
and
imul
and
fwait
mov
inc
test
pop
retf
frstor
add
or
lock
dec
sbb
out
outs
test
imul
pop
or
jnp
mov
fcmovbe
push
sub
mov
bound
cmps
xor
outs
in
xor
cld
rcl
jle
leave
int3
(bad)
jnp
in
sbb
daa
xchg
mov
jge
in
pop
mov
dec
loopne
out
outs
mov
mov
mov
rol
push
or
dec
cmp
pop
xchg
scas
xchg
inc
xchg
scas
cmp
fistp
push
xchg
lods
sub
jno
push
pop
gs
sbb
push
and
and
push
shl
jbe
idiv
sub
cmp
mov
call
ret
cmps
test
inc
push
mov
or
sub
mov
movs
ins
stos
pop
or
xlat
out
stc
mov
fwait
cmps
sub
cmp
and
test
ret
out
ds
add
mov
(bad)
mov
repnz
adc
inc
ret
mov
jl
enter
(bad)
retf
sbb
mov
sbb
gs
mov
pusha
icebp
test
sbb
cs
cmps
and
sbb
or
test
leave
pop
retf
mov
(bad)
popa
call
push
cdq
clc
lds
cmp
push
pop
in
leave
rcl
mov
xchg
fs
fild
popf
es
jns
sbb
dec
mov
and
test
jg
out
jp
test
mov
outs
inc
push
mov
repnz
pushf
sbb
fnstenv
xor
push
jne
jae
adc
aaa
mov
call
dec
xchg
aas
iret
mov
mov
mov
and
push
outs
iret
sti
into
xchg
leave
mov
mov
sar
lods
pmulhuw
mov
sti
push
adc
sub
sub
push
mov
daa
cmp
pusha
mov
mov
sbb
add
pop
mov
lock
jp
in
fst
loop
imul
jmp
outs
xchg
jle
add
pop
xchg
xor
sahf
movs
(bad)
adc
jnp
xor
ror
(bad)
dec
movs
lahf
(bad)
imul
jecxz
pop
jno
xchg
(bad)
fnstsw
paddw
push
jae
es
dec
popfw
cld
jge
dec
push
xor
in
sub
pop
lea
mov
ins
inc
ror
hlt
pop
sub
movs
bound
(bad)
pop
cli
das
or
lock
sub
retf
pop
add
jmp
push
es
sub
mov
ss
dec
jp
add
sbb
stos
inc
lahf
test
aas
stos
outs
nop
into
shl
fist
jo
xchg
or
iret
dec
cs
push
or
imul
outs
and
jl
inc
jle
jnp
cld
cmp
cmc
fsubr
out
jmp
pop
push
jb
mov
shr
jle
ficomp
out
jg
jns
cwde
enter
ins
and
aam
je
lods
test
pop
stos
leave
adc
inc
imul
mov
cli
pusha
cmps
and
mov
pop
movs
mov
xchg
inc
sbb
xor
pop
fdivr
or
iret
mov
addr16
lea
xchg
inc
ret
dec
push
and
enter
xor
mov
shl
clc
cmp
mov
into
stos
or
inc
hlt
daa
pop
rcl
push
push
test
aam
sti
push
test
retf
nop
mov
xor
mov
inc
or
out
ret
sub
dec
sbb
mov
adc
mov
mov
loope
rcr
pop
call
xchg
xchg
inc
(bad)
pusha
or
call
pop
sbb
push
(bad)
mov
mov
jbe
mov
push
icebp
aam
adc
cmp
(bad)
aad
loop
cmps
push
cmp
dec
adc
stos
or
mov
ror
lods
cld
push
mov
mov
femms
cmp
xlat
(bad)
nop
add
ret
and
stc
aad
jmp
(bad)
mov
lods
(bad)
in
dec
sub
sbb
cmc
adc
ret
popa
mov
or
call
push
(bad)
ds
xor
gs
push
adc
fs
repnz
push
sub
mov
dec
inc
and
or
mov
pop
js
mov
(bad)
je
and
pop
mov
jecxz
cs
and
ret
push
mov
ror
fild
lods
cmp
xor
sti
mov
pop
(bad)
sub
lea
lahf
sti
push
xchg
jl
mov
movs
into
leave
rol
test
scas
not
pop
outs
jno
jg
movs
inc
or
xchg
xchg
and
mov
dec
and
test
add
jbe
fild
loope
repz
lea
(bad)
in
shr
das
sahf
shl
(bad)
rol
cmc
cmc
test
fistp
out
push
push
mov
cwde
xchg
cmp
movs
shr
gs
inc
dec
pop
sbb
lahf
js
test
aas
add
or
test
xchg
or
in
fidiv
sub
pop
ret
cs
jns
pusha
sbb
inc
and
retf
adc
(bad)
leave
shl
push
dec
push
pop
xlat
jmp
daa
mov
mov
pop
test
fadd
aas
nop
xchg
ficom
imul
outs
jmp
out
out
fwait
cmc
mov
xor
sub
jbe
cmp
push
rcl
rcr
pop
sub
sti
sub
test
sub
lods
mov
shl
mov
jle
lods
mov
dec
or
push
pop
lea
into
push
stos
in
xlat
adc
ret
push
outs
sbb
fdivp
aaa
cmps
pushf
push
out
xchg
cmp
sar
pop
inc
fs
mov
test
inc
int
and
pop
test
shl
cmp
mov
push
xor
fs
add
jne
sbb
retf
fst
mov
pop
lock
test
xor
mov
jo
cmp
xor
cld
out
test
pop
adc
mov
dec
aaa
adc
scas
jbe
in
add
xlat
push
data16
mov
or
call
loop
adc
mov
mov
mov
ret
sti
and
mov
iret
mov
cs
mov
push
mov
(bad)
push
rol
(bad)
cmp
sub
push
mov
shr
jne
push
mov
mov
pop
push
and
jge
ret
adc
mov
(bad)
mov
xor
mov
jmp
pop
jnp
cmp
mul
test
(bad)
mov
sub
mov
pop
hlt
xacquire
pop
dec
retf
and
mov
inc
stos
jl
les
lods
mov
rcr
inc
int
lea
(bad)
and
ss
or
push
push
iret
xchg
xchg
aad
(bad)
jmp
jne
pop
adc
ficomp
popa
sbb
pop
loop
sbb
jecxz
bound
dec
sbb
xchg
fdiv
(bad)
push
scas
fldcw
xchg
add
nop
icebp
clc
(bad)
jg
nop
jae
test
arpl
push
push
mov
sbb
addr16
iret
lods
out
(bad)
nop
jnp
dec
mov
mov
loop
adc
sbb
(bad)
pop
push
or
outs
mov
inc
add
dec
jbe
dec
mov
jp
mov
mov
pop
fs
jmp
(bad)
jae
int
jo
dec
popa
leave
je
lods
add
add
cmp
dec
lock
fucom
imul
jp
mov
popa
push
mov
ret
mov
pop
xor
inc
pop
jae
lods
and
jae
xchg
cmp
push
cmc
rcr
mov
rol
inc
and
jmp
jno
aas
fist
scas
sub
jo
cmp
mov
rol
mov
xor
je
fsub
or
push
mov
sbb
out
jno
cwde
frstor
xor
in
add
jmp
ins
fnsave
cli
pop
mov
aaa
or
sbb
enter
sbb
in
xor
mov
push
lock
pop
test
dec
fadd
std
pop
jae
retf
data16
cmc
out
lods
jmp
fcmove
sub
inc
push
inc
mov
test
push
out
retf
inc
mov
dec
xor
cli
adc
lods
enter
cdq
mov
xchg
and
lds
inc
in
sbb
jl
fmul
pop
sbb
jl
push
sub
jmp
ret
cmps
jl
mov
in
pop
outs
add
icebp
(bad)
in
stos
jp
xchg
(bad)
jne
pop
popa
push
stc
push
or
mov
cmp
(bad)
mov
inc
or
(bad)
lds
fild
sbb
aas
popf
xor
jecxz
cmps
sbb
adc
les
mov
into
and
mov
mov
mov
jl
fiadd
cwde
xchg
mov
xchg
cdq
out
mov
cmp
je
loopne
mov
or
popa
lods
xchg
jmp
aam
xchg
loop
loope
outs
sbb
adc
enter
dec
imul
adc
push
sar
push
sbb
cmp
mov
jo
pop
ret
or
and
sbb
cmp
cmp
and
rcr
xchg
mov
mov
je
imul
cmp
push
cmp
cmp
mov
(bad)
call
movs
shr
rol
sbb
pop
jecxz
and
mov
pop
lock
movs
outs
(bad)
mov
sahf
mov
fdiv
iret
adc
out
cmp
jmp
sub
mov
xor
nop
lock
or
jnp
and
jg
or
mov
bnd
xchg
movs
adc
cmp
inc
or
cmps
mov
mov
sbb
stos
sbb
or
mul
xor
sbb
xor
(bad)
hlt
mov
test
cmps
pop
fdivr
and
mov
or
pop
jp
(bad)
jp
fist
repz
add
jnp
push
into
mov
sub
jb
movs
gs
pop
add
lea
dec
imul
cmp
data16
jle
fmulp
mov
stc
outs
lds
stos
pop
(bad)
stc
inc
xor
lds
dec
or
jo
sub
shrd
xor
lea
clc
ffree
mov
pop
mov
fwait
shl
data16
xor
cmps
(bad)
cli
lock
jmp
dec
cmp
(bad)
rcr
add
rcr
test
cmp
adc
jmp
stos
mov
pop
dec
xor
jge
stos
jecxz
nop
in
and
outs
mov
cmp
adc
loopne
xchg
mov
vgf2p8mulb
or
sbb
bound
bound
mov
add
jmp
sub
arpl
dec
enter
push
jbe
cmps
sub
add
adc
and
test
mov
mov
ds
int3
adc
and
pop
into
mov
stos
xor
int
sbb
cmp
cmp
jmp
inc
push
shr
retf
je
pushf
add
add
xchg
stc
add
jp
adc
dec
xchg
mov
or
push
cmp
clc
jg
adc
sub
dec
xor
aam
pop
cli
mov
sub
sbb
add
call
jno
mov
imul
leave
mov
(bad)
fs
jbe
mov
and
mov
mov
call
push
(bad)
in
sub
cwde
mov
or
xchg
lds
les
cmc
jnp
aam
jge
jns
add
add
mov
xchg
int3
in
pop
fwait
js
push
sbb
xchg
mov
pop
pop
sub
or
sbb
push
nop
sbb
cmps
adc
pop
loopne
xlat
out
or
cmp
in
js
pop
xchg
and
adc
mov
lods
mov
and
xchg
in
movs
fistp
mov
add
pop
in
fstp
push
call
rsm
jg
mov
dec
fsubr
arpl
jmp
inc
xor
nop
cmp
sti
dec
xor
dec
imul
clc
(bad)
mov
movs
xchg
mov
test
les
call
jnp
adc
sub
ins
mov
lea
xchg
out
loop
push
stos
ss
popa
ins
adc
call
cld
mov
fdivr
push
cmp
movs
adc
test
pop
mov
cmps
xchg
addr16
adc
ret
sar
add
pusha
in
(bad)
add
inc
pop
mov
fwait
lods
cmps
pusha
push
and
movs
cs
fsub
lds
mov
call
pop
or
push
ror
js
xlat
mov
scas
adc
sar
or
int
mov
int3
sub
retf
xchg
das
jecxz
and
sub
test
mov
and
(bad)
sbb
jl
or
mov
cmp
pop
add
test
jecxz
gs
cmp
jne
add
mov
in
movs
push
add
sub
xchg
jge
out
sbb
push
popa
sbb
mov
cmp
sbb
mov
pop
icebp
stos
mov
sar
cdq
cmp
pop
lods
mov
fistp
sbb
daa
les
(bad)
sbb
sahf
cmp
fistp
jmp
push
(bad)
int3
mulps
scas
adc
mov
cdq
sbb
lock
aas
xchg
nop
sub
push
push
push
mov
or
inc
pop
sbb
fdivrp
xor
shl
inc
nop
(bad)
mov
xor
pause
mov
add
enter
stc
pop
jle
xor
or
imul
pop
add
cli
mov
mov
push
(bad)
call
cmp
or
jmp
ins
lock
mov
mov
push
into
cmc
mov
pop
call
bound
sub
ret
imul
das
and
jo
push
xchg
fst
data16
mov
adc
icebp
dec
std
lea
push
lock
pop
lods
cmp
mov
xor
cwde
push
push
push
pop
into
fimul
enter
jmp
pop
test
xor
inc
out
mov
out
stos
gs
paddsb
inc
mov
fisub
push
mov
xchg
xchg
jmp
aas
ds
sar
xor
jne
shl
popa
jl
dec
inc
jns
sub
dec
ins
mov
add
pop
out
(bad)
xor
push
mov
scas
fsubr
add
pop
iret
cmp
pushf
inc
add
repnz
int
jge
or
fsubr
cdq
bound
(bad)
stos
lahf
push
fild
outs
sub
cmp
pop
push
inc
lahf
mov
inc
xlat
fisubr
xor
inc
aad
ss
cmp
mov
mov
int3
pop
adc
loop
fistp
and
(bad)
xlat
aaa
fs
test
lods
loop
or
jns
out
fsubr
scas
mov
or
sub
int3
inc
cmc
cmp
adc
jp
aad
iret
ins
(bad)
push
shl
add
sub
sbb
sbb
jecxz
sub
(bad)
push
test
inc
mov
cwde
movs
loope
jmp
xor
push
jle
jmp
out
add
push
not
jg
(bad)
sub
iret
call
das
cmp
mov
call
xchg
sahf
retf
popa
sti
scas
xchg
adc
cmc
dec
repnz
adc
ss
outs
pop
int
aam
inc
fidiv
xchg
out
in
in
mov
(bad)
push
rol
sbb
rcr
dec
xor
lahf
rol
sub
into
das
or
jmp
sbb
lock
jns
int
mov
aam
lock
shl
push
fwait
ret
adc
sti
inc
out
fbld
enter
and
retf
cdq
out
and
pop
cmp
mov
(bad)
lock
jmp
movs
out
push
jmp
test
aam
ret
sub
in
sub
push
inc
lea
jp
adc
push
xchg
int3
push
loope
jle
xchg
jnp
or
add
stc
mov
mov
ds
test
pop
(bad)
fild
xor
jb
cmp
cmp
pop
mov
lds
cwde
inc
out
push
fwait
xor
icebp
mov
cmp
jge
adc
rcr
jg
pop
(bad)
(bad)
add
inc
push
shl
outs
cmp
das
add
into
mov
mov
lea
sbb
scas
push
xlat
bound
push
add
xchg
loop
cli
inc
std
and
and
in
popa
jmp
int
test
jmp
push
ss
mov
pop
arpl
cwde
push
sub
and
sti
ret
test
nop
cmc
addr16
gs
enter
mov
bound
imul
inc
cmps
xchg
pop
lock
into
xor
(bad)
mov
fistp
fdivr
mov
rcl
cmp
dec
xor
lods
dec
lea
fs
xchg
inc
out
push
jb
adc
inc
lods
mov
(bad)
and
xchg
gs
pop
sbb
lock
aam
push
clc
push
ins
cmp
xchg
sub
xchg
xchg
retf
pop
mov
sub
dec
aas
in
push
or
lods
adc
in
rcr
pop
dec
mov
imul
pop
and
pop
and
add
int3
lods
mov
sub
mov
rcr
clc
icebp
push
jnp
movzx
mov
sub
out
(bad)
xchg
mov
xchg
dec
es
push
data16
ja
icebp
xchg
adc
icebp
jns
mov
sub
adc
jne
dec
add
and
and
inc
or
lods
daa
test
cmp
in
pop
and
je
hlt
loop
(bad)
adc
sti
or
jae
pushf
jmp
aad
add
or
ins
push
dec
xlat
aaa
add
pop
in
in
dec
ins
add
stc
adc
xor
dec
push
sub
mov
das
in
outs
retf
mov
enter
mov
rol
mov
out
push
imul
or
ror
mov
stc
jmp
xor
fistp
and
inc
shr
jae
mov
or
xchg
call
jge
and
or
mov
mov
jp
pop
lds
dec
stos
or
out
test
cli
cmp
xchg
inc
inc
test
sub
test
call
pop
ror
push
cmp
adc
dec
inc
bound
inc
cli
das
shl
lds
inc
sbb
popa
movs
scas
pop
(bad)
out
mov
jp
ret
push
sub
popa
popa
mov
(bad)
and
mov
fwait
(bad)
add
pop
test
sub
cli
xchg
call
cmp
mov
out
data16
lods
adc
loopne
pushf
jl
push
add
call
test
inc
mov
(bad)
mov
add
out
adc
ror
pop
mov
and
mov
xchg
aas
inc
jno
mov
pop
pop
inc
push
bnd
xchg
jno
xchg
ds
or
inc
xchg
add
stos
das
nop
xchg
push
inc
stc
sub
push
test
aas
ss
pushf
xor
dec
mov
out
ret
popa
repz
loop
clc
scas
div
fmul
mov
or
add
add
pop
push
mov
dec
pop
pop
inc
mov
mov
dec
dec
cwde
add
nop
xchg
scas
or
mov
scas
inc
sbb
push
pop
and
outs
mov
div
test
(bad)
aas
hlt
jmp
mov
bound
inc
div
jecxz
(bad)
jl
push
movs
inc
cmps
xchg
inc
lods
fdiv
out
ins
inc
jcxz
xchg
push
cld
pop
pop
rcl
inc
daa
pop
xchg
mov
sbb
jbe
pop
into
sub
mov
fs
adc
scas
bound
icebp
xlat
ret
inc
nop
aas
jb
mov
aaa
fimul
mov
pop
pop
iret
cld
scas
je
pop
inc
cli
cmps
mov
jmp
cmps
sbb
lea
push
int3
mov
inc
mov
test
cmps
test
adc
dec
mov
dec
fidivr
test
cli
mov
inc
xchg
xchg
xor
repnz
push
jge
mov
mov
pop
pop
fcomp
fmul
push
mov
sub
or
adc
int
lgs
mov
idiv
outs
push
loopne
adc
fsubr
lods
jne
mov
out
stc
add
push
cld
jbe
mov
xchg
stc
outs
xchg
mov
push
dec
mov
xor
xor
cmp
inc
loope
cmps
out
ja
lock
xchg
and
pop
ss
xor
rol
ret
or
jb
mov
dec
out
fisubr
ins
inc
mov
jmp
std
dec
dec
add
inc
jmp
or
and
aaa
mov
bound
add
mov
xchg
adc
jge
mov
js
cmps
adc
sbb
(bad)
call
pop
jbe
mov
ror
and
pop
lods
shr
dec
jg
outs
jb
pop
cmp
call
retf
aad
inc
push
adc
and
mov
bound
rol
or
retf
mov
popa
mov
outs
mov
aaa
movs
sub
mov
mov
cmp
pop
sbb
cwde
mov
(bad)
pop
cld
out
xchg
scas
lahf
add
or
pop
(bad)
cmp
push
sahf
inc
push
(bad)
rcr
sub
jmp
arpl
push
or
cmp
pop
movs
fs
mov
frstor
push
lar
sahf
dec
stos
(bad)
mov
(bad)
hlt
rcr
sbb
mov
ss
cs
and
xchg
shl
hlt
imul
stc
lods
dec
mov
jle
les
movs
ja
fistp
cld
mov
cdq
ret
ss
scas
pop
mov
xlat
push
js
in
idiv
add
rol
adc
sbb
pop
xchg
xchg
mov
sti
add
cmp
movs
cmp
leave
push
dec
adc
dec
xor
pushf
adc
push
fnstcw
fcmovnb
stos
sahf
jno
xor
out
inc
mov
fnstcw
cdq
xchg
shufps
dec
xor
mov
mov
(bad)
jae
div
push
push
js
pop
call
xchg
shl
push
dec
mov
and
jbe
mov
dec
pop
test
xchg
sar
pop
add
sbb
mov
adc
imul
adc
sbb
shl
mov
dec
mov
jmp
cmp
and
repnz
mov
(bad)
addr16
cmp
call
aas
push
dec
sub
cs
test
pop
adc
mov
das
out
lods
adc
xchg
jle
fidivr
jno
pop
mov
add
mov
or
xor
je
mov
pop
sbb
cli
mov
pop
and
(bad)
adc
fldcw
mov
cmp
cvtpi2ps
mov
fstp
push
or
fcmovnbe
call
in
lds
call
pop
shr
push
adc
xor
push
inc
dec
in
arpl
inc
lock
test
or
sbb
out
test
mov
mov
sub
mov
push
jo
jl
mov
jo
or
das
into
or
sub
fmul
cwde
sub
push
rcr
in
jg
xor
lock
dec
mov
add
(bad)
addr16
fdiv
fist
icebp
inc
mov
fistp
gs
leave
shl
cmp
imul
jecxz
out
fistp
add
jmp
or
lods
adc
adc
or
aas
xchg
popf
cld
mov
daa
fadd
xor
mov
xchg
xchg
pop
push
imul
or
cld
pop
jp
(bad)
push
ja
and
jg
adc
scas
mov
leave
lock
xchg
mov
fs
stc
sbb
addr16
mov
ins
adc
mov
in
mul
cmp
cmp
cmps
dec
stos
cs
mov
nop
pusha
movs
fld
mov
dec
push
cmp
(bad)
repnz
and
xchg
sub
inc
cmp
mov
jge
sub
lds
in
cmp
inc
ss
push
sbb
dec
add
ins
cmp
popa
ja
neg
in
jb
jg
and
xor
je
std
rol
push
test
cmp
sub
dec
sub
push
fstp
sub
cdq
and
mov
fsubr
mov
mov
lods
dec
int3
dec
data16
loopne
lds
mov
sub
push
cdq
stc
sbb
cli
mov
leave
setns
sbb
mov
scas
sub
(bad)
(bad)
push
pop
dec
out
retf
test
xor
push
mov
cmp
call
cmp
les
cs
stc
lahf
and
xor
mov
add
push
ss
sub
ja
pop
cmp
es
jg
nop
xchg
adc
push
iret
int
adc
push
xchg
mov
push
push
iret
push
cmp
mov
mov
mov
(bad)
and
shl
adc
icebp
cmovg
mov
in
idiv
bswap
xchg
jne
lock
movs
inc
push
and
mov
into
push
mov
bound
xchg
push
jbe
adc
lea
sbb
rcl
shr
hlt
out
bound
and
fcomi
shl
es
lea
aad
push
push
xchg
rol
dec
xchg
mov
push
je
adc
mov
mov
lahf
mov
sub
push
ss
mov
lea
pop
pop
xchg
or
in
cs
mov
enter
jae
pop
mov
out
jle
cli
mov
std
js
pop
dec
lock
pop
cmp
push
mov
aas
fcom
sub
movs
shl
ror
adc
out
push
push
jb
loope
jno
add
dec
mov
cmovnp
mov
lea
ja
rcl
repz
pop
mov
or
fs
push
and
push
fs
shl
pushf
pop
mov
dec
xchg
es
gs
mov
xor
das
in
ficomp
xchg
out
fs
cs
test
jle
test
test
fsub
and
or
xor
retf
mov
mov
inc
push
xchg
xchg
push
icebp
iret
or
repnz
mov
sbb
ficom
rcl
jecxz
fidivr
movs
xchg
cmp
push
fndisi(8087
leave
js
aad
mov
test
inc
mov
pushf
mov
fstp
push
retf
lods
shr
xor
in
retf
(bad)
daa
push
xchg
icebp
cli
jmp
jl
push
sar
and
push
in
cmps
ret
mov
cmp
adc
ja
push
test
outs
loop
jae
js
ret
jmp
mov
jmp
sbb
out
xchg
pop
push
jge
pushaw
fsubr
les
lea
loopne
test
xor
lods
dec
movs
dec
or
scas
mov
nop
mov
add
mov
imul
push
push
cmp
stos
sar
xor
push
jne
sub
and
mov
(bad)
and
push
xor
cwde
and
add
mov
ret
(bad)
push
mov
add
test
mov
shl
jmp
aaa
hlt
addr16
push
in
add
add
fnsave
pushf
sub
in
out
mov
mov
mov
lds
std
push
std
fcomip
gs
fs
cld
dec
fcom
xor
neg
xor
test
loopne
jecxz
jp
mov
pop
jno
jmp
cld
(bad)
sar
ja
outs
cmp
not
add
sub
or
pop
lea
jbe
push
or
adc
xchg
push
iret
sbb
loope
out
sbb
je
xorps
pushf
movs
movs
dec
mul
movs
push
xchg
add
(bad)
dec
jp
sbb
mov
inc
sbb
jmp
adc
add
mov
outs
add
pop
mov
xchg
stos
in
out
sub
test
dec
add
ds
xchg
cmps
stos
jecxz
test
aad
js
sbb
div
jno
add
sbb
jae
adc
push
xor
retf
lahf
xchg
fcmovnbe
outs
ja
test
add
mov
rcl
loop
int
(bad)
push
sahf
xor
jno
or
ins
or
aam
stos
fist
jbe
or
sti
jmp
jne
pop
movs
xchg
out
sub
xor
mov
stos
shr
cmps
(bad)
cwde
add
nop
inc
and
adc
xchg
and
outs
in
add
adc
scas
cld
sub
push
ret
push
and
(bad)
mov
cmp
cmp
sbb
xchg
mov
inc
aas
rcl
or
pusha
push
mov
pop
sbb
mov
cmp
std
mov
imul
sbb
nop
addr16
cmps
push
nop
mov
cmp
mov
shr
fwait
mov
and
pop
sbb
imul
scas
pop
xchg
jae
popf
mov
sbb
adc
sub
cmp
call
xchg
cmp
or
jge
sub
mov
pushf
ins
push
fimul
dec
pop
sbb
ja
mov
sbb
arpl
cs
mov
mov
or
bound
or
in
xor
jnp
pop
pop
repnz
call
pop
fmul
jo
pushf
sbb
(bad)
jbe
scas
xor
out
sub
mov
scas
mov
clc
mov
sub
cmp
pusha
xchg
(bad)
cwde
mov
cmps
stos
arpl
pop
movs
jecxz
(bad)
and
test
cld
inc
imul
mov
cld
or
aam
loopne
mov
add
inc
mov
jno
cmp
les
and
push
es
mov
mov
adc
fwait
jmp
pop
xchg
ds
or
pop
ins
adc
and
ficomp
xlat
outs
fld
aas
retf
inc
stc
jbe
das
inc
loop
ret
out
mov
and
mov
shl
retf
aad
into
ja
popa
cmc
retf
inc
sahf
xor
jecxz
jg
mov
gs
and
icebp
xchg
mov
cld
mov
mov
mov
xor
movs
cmp
push
adc
data16
xor
dec
push
xchg
lods
xlat
je
push
cld
lahf
loope
jnp
or
dec
hlt
adc
sbb
in
adc
cmp
retf
xchg
and
pop
xor
fs
add
push
mov
mov
mov
adc
mov
fcomp
cdq
or
inc
lods
mov
cmp
pop
hlt
and
push
data16
mov
(bad)
adc
(bad)
inc
xchg
(bad)
popa
sbb
pop
lock
in
addr16
into
lea
pop
ficomp
repnz
aaa
xor
ficom
daa
adc
and
xor
pop
xchg
pop
in
js
add
pop
loope
add
jno
aaa
xor
or
push
popa
pop
shr
pop
fdiv
iret
or
sub
add
add
in
cmp
jo
fcom
mov
sbb
xchg
out
sub
mov
bound
out
mov
mov
fnstsw
dec
xchg
es
mov
jp
sub
pop
fwait
inc
inc
and
das
push
mov
jl
pop
dec
xchg
test
sbb
xchg
xchg
mov
bound
xchg
sahf
retf
cmp
xor
mov
jno
pop
mov
(bad)
ins
ret
add
dec
clc
int3
cmps
xlat
movs
or
ficomp
retf
xor
inc
popa
jmp
xchg
sbb
pushf
cld
jb
xchg
cmps
sahf
jmp
das
adc
out
pop
sar
stc
aam
mov
cmp
movs
inc
dec
cmp
pusha
adc
loop
mov
arpl
add
(bad)
std
dec
adc
push
xor
and
inc
movs
popa
ins
je
jmp
mov
repz
scas
dec
xor
(bad)
sub
jns
mov
inc
(bad)
fbld
sbb
fucomi
pushf
js
js
sbb
ficom
(bad)
jle
xchg
js
fadd
jg
and
cs
ins
xchg
popf
pop
(bad)
or
fbld
or
into
xor
mov
or
xchg
loop
es
or
jmp
sub
int3
push
cmp
mov
push
xchg
jmp
mov
dec
or
movs
dec
and
cmp
push
or
pop
jg
aas
aas
cmp
mov
cmps
xor
das
push
(bad)
int3
call
ror
jne
cmc
retf
adc
sar
mov
inc
mov
xchg
sbb
jne
(bad)
dec
jnp
fsub
idiv
out
dec
and
ja
jne
jae
in
lods
fwait
mov
jnp
or
and
outs
add
mov
dec
pop
push
xchg
mov
pop
mov
rcl
ds
fistp
popf
addr16
das
mov
cmps
xchg
sub
gs
pop
add
mov
jp
lea
retf
jmp
loope
push
out
mov
xchg
ins
sbb
cmp
mov
clc
call
pop
rol
cmp
and
shl
cmp
xchg
and
out
jp
mulps
dec
jb
add
xor
jnp
out
scas
push
or
lods
out
icebp
into
jno
inc
jecxz
adc
pop
lods
icebp
and
add
inc
push
mov
lahf
lds
mov
test
fnstsw
mov
inc
(bad)
mov
repz
inc
push
adc
fnstsw
imul
push
mov
xchg
pop
retf
ss
ins
out
jo
mov
sub
or
mov
out
sbb
test
push
fsubr
dec
mov
push
xor
and
mov
push
xchg
ret
pop
cmp
xchg
rcr
jb
push
push
stos
lods
push
push
(bad)
rol
mov
sbb
sub
adc
sbb
xor
(bad)
jns
scas
retf
addr16
out
ja
sub
cmp
pop
jns
pop
hlt
or
sbb
jne
and
rol
lea
sub
clc
cld
jae
addr16
xor
gs
daa
mov
mov
push
sbb
in
int
mov
jne
int3
mov
enter
iret
cmp
or
mov
jo
jge
sbb
daa
rol
dec
mov
inc
(bad)
stc
xor
dec
cli
mov
inc
sbb
mov
sar
stc
sbb
loopne
inc
jle
lock
in
ins
xor
push
pop
or
cdq
out
adc
in
div
and
arpl
stos
jb
push
sub
push
inc
xchg
or
iret
(bad)
jl
xchg
jmp
dec
cwde
sub
cmc
outs
push
loop
xor
mov
sub
imul
jmp
push
pavgw
mov
xchg
icebp
test
loope
jmp
xor
ins
dec
aaa
jnp
and
and
xrelease
adc
ins
sbb
xchg
inc
dec
mov
sar
or
mov
add
inc
call
(bad)
push
movs
pop
ret
loope
rol
pop
std
sbb
pusha
nop
out
inc
dec
xchg
in
rcl
pop
adc
push
cmp
mov
push
call
movs
mov
scas
jp
ret
jae
in
mov
das
add
stos
std
mov
ret
outs
test
mov
adc
xchg
xchg
outs
push
rol
arpl
movs
cmp
xor
(bad)
adc
jge
and
xchg
inc
or
rcr
scas
push
test
mov
call
push
mov
sub
mov
mov
call
rcl
sub
add
imul
rcl
push
loopne
pop
iret
div
mov
call
inc
gs
xchg
in
nop
pop
pop
sub
push
arpl
dec
in
inc
adc
mov
movs
or
lea
push
out
ins
lods
adc
call
mov
mov
xchg
pop
pop
and
sahf
jmp
xchg
jo
jmp
sub
push
ss
mov
jb
out
out
push
fstp
jnp
jbe
mov
mov
sub
jbe
mov
pop
adc
jmp
ror
xor
js
jbe
pop
movs
rcl
nop
jg
mov
pusha
mov
and
jmp
xchg
out
add
cmps
fst
scas
aam
gs
push
pop
mov
mov
loop
nop
out
xlat
sbb
das
and
ds
pop
out
inc
ret
loop
stos
jb
jne
sub
add
in
lea
jg
push
lds
xor
pop
and
cmp
mov
clc
shl
push
rcr
push
xlat
lock
in
and
cmp
push
and
jo
std
inc
cmp
mov
popa
jno
or
out
int3
imul
jno
push
aas
cdq
int3
jg
mov
ret
sbb
adc
(bad)
xor
ror
arpl
inc
gs
cmps
mov
cmps
adc
imul
add
or
pop
inc
iret
adc
mov
shl
cli
xchg
jge
push
push
jbe
push
ja
cmps
adc
lock
scas
lds
rcr
sar
outs
sub
imul
jmp
push
or
test
cs
pop
adc
pop
inc
shl
into
mov
ins
fstp
dec
add
xchg
pop
mov
inc
lods
mov
cmp
pop
mov
or
dec
dec
(bad)
nop
fild
bound
dec
pop
adc
mov
aam
mov
ins
and
cmps
jne
jmp
pop
jle
in
js
ret
add
xchg
adc
iret
(bad)
stos
lock
popa
pop
pop
lahf
(bad)
pop
scas
and
loope
sbb
adc
cmc
outs
fsub
xor
jl
daa
inc
xchg
mov
mov
jns
cmp
enter
jle
ror
cmp
iret
repz
shl
std
sbb
xor
adc
cmp
mov
test
cmc
hlt
call
js
lods
jge
pusha
sbb
or
pusha
and
(bad)
jmp
das
enter
int3
cwde
in
bound
inc
dec
inc
sbb
aas
add
cld
fidivr
mov
repnz
ss
xor
inc
push
retf
jl
add
sbb
sti
cmps
add
xchg
jnp
pop
movs
loop
mov
lea
ins
pop
js
enter
dec
jmp
mov
out
cmc
imul
scas
mov
sub
fadd
mov
int3
sbb
loopne
aaa
mov
mov
xor
xchg
repnz
cli
xchg
mov
mov
lods
retf
sar
sbb
fwait
mov
movs
bnd
stos
push
xchg
push
mov
pop
movs
xor
cmp
sbb
ds
loopne
aaa
jb
add
(bad)
xchg
popf
je
push
add
lods
inc
pop
jmp
in
call
push
xchg
cmp
(bad)
call
out
hlt
aad
sbb
stc
dec
xor
ret
jmp
cmp
mov
cmp
(bad)
adc
call
outs
fcomip
mov
outs
pop
hlt
push
sub
out
mov
sbb
addr16
fwait
mov
arpl
mov
mov
data16
inc
sub
hlt
loopne
or
repz
fcomi
xchg
pop
jnp
push
retf
stos
cmp
popa
outs
dec
cmp
xchg
out
int
clc
inc
inc
inc
mov
rcr
fcom
mov
jns
or
cmp
in
scas
xor
xchg
arpl
or
jge
xchg
mul
adc
mul
in
loop
aad
xchg
cli
fild
add
mov
std
cmps
xchg
jns
aam
call
retf
add
sbb
inc
es
mov
jne
(bad)
add
jl
icebp
int
cld
xchg
add
scas
cld
std
clc
xchg
xchg
sbb
dec
imul
sub
fnsave
push
and
inc
add
(bad)
daa
fisub
or
mov
ret
sbb
nop
mov
cdq
sbb
sub
and
neg
loope
add
and
mov
std
xchg
aas
pop
mov
jbe
jnp
ficomp
stos
or
adc
ror
mov
or
xchg
xchg
push
pop
repnz
push
cdq
call
int3
push
cmc
pop
pop
shr
lea
or
test
pop
xchg
and
fs
xor
aaa
adc
jns
xchg
repnz
add
hlt
jae
jp
iret
mov
jb
xlat
sbb
fnsave
lods
lods
shr
pop
jp
cld
fs
fdivp
jecxz
jecxz
jo
cmp
xor
xor
js
pushf
repnz
sub
sub
in
out
(bad)
ret
lods
ret
push
repnz
mov
xchg
and
sbb
aaa
std
add
and
xor
into
lahf
mov
sahf
xlat
in
test
sub
cmp
xor
mov
mov
xchg
push
and
cmp
inc
lds
lods
dec
arpl
ins
jo
in
pop
xchg
addr16
push
out
in
pop
idiv
xchg
imul
dec
mov
cmp
lods
push
push
sar
retf
and
fiadd
in
loope
arpl
mov
out
popa
out
test
sbb
nop
cdq
inc
sti
xor
dec
jmp
pop
cdq
vmovaps
js
repz
lea
pop
xchg
ficomp
add
hlt
pop
push
add
pop
xlat
into
xor
or
fs
jae
and
jns
retf
jo
test
bound
fisubr
or
and
sbb
add
sar
fwait
and
jp
(bad)
das
std
push
mov
shl
push
cmps
out
popf
sbb
ins
cmc
dec
(bad)
or
mov
call
push
adc
sub
adc
mov
push
mov
cmc
add
nop
scas
int3
add
fdiv
push
fucomp
test
xor
sbb
pop
mov
hlt
(bad)
imul
push
push
sti
jne
leave
mov
fnstcw
lea
icebp
mov
iret
popf
aam
push
repz
mov
lahf
jbe
jae
cmp
sar
pop
icebp
fidivr
or
push
fadd
sub
dec
mov
inc
add
shl
sbb
adc
outs
push
mov
dec
pop
retf
and
out
cmp
xchg
sub
clc
push
mov
out
in
dec
or
shl
and
xchg
retf
add
pop
or
in
test
je
ror
repz
fiadd
aas
dec
test
mov
enter
popa
fwait
iret
xchg
dec
push
cmp
jmp
sahf
and
mov
out
fnstsw
sbb
sbb
xchg
or
push
out
shr
cli
ins
jne
adc
adc
test
arpl
sbb
adc
lods
mov
out
cmp
mov
dec
mov
jns
and
mov
in
jp
add
push
xchg
mov
les
popa
inc
jnp
mov
sub
push
lock
mov
mov
imul
inc
adc
mov
stc
mov
push
out
outs
call
ss
test
call
out
adc
sbb
imul
(bad)
stc
daa
pavgw
lds
cwde
je
bound
in
es
or
push
ret
cmps
arpl
int3
xor
clc
ins
mov
xchg
mov
xchg
pop
imul
mov
mov
(bad)
aas
pop
sub
adc
(bad)
adc
mov
push
scas
cmp
in
mov
inc
sbb
cmp
(bad)
rol
jae
(bad)
aad
ds
pusha
ins
retf
inc
sbb
scas
xchg
into
clc
sti
jg
les
sti
mov
cwde
sbb
les
push
mov
pop
push
fisubr
out
mov
in
das
inc
and
test
sbb
shl
in
and
xlat
sub
xor
mov
ja
cmps
das
and
in
xchg
lods
dec
pop
mov
out
jecxz
addr16
mov
pop
sub
sub
inc
pop
jns
and
ret
sub
imul
or
adc
inc
cmp
push
inc
retf
mov
cmc
or
sub
cmp
xor
sar
jbe
aam
cmc
imul
xchg
pop
sahf
xchg
shl
test
call
xor
push
push
cmp
jmp
mov
xor
stos
imul
mov
cmp
idiv
mov
out
adc
clc
jne
or
es
fptan
aad
test
cmp
inc
or
je
inc
out
mov
push
mov
imul
getsec
cmp
jne
mov
sub
ins
mov
(bad)
dec
rep
and
dec
jecxz
mov
add
pop
xlat
push
or
out
jg
cmps
jp
xor
push
enter
je
scas
hlt
sbb
pop
mov
test
ds
mov
mov
and
in
cwde
cmp
mov
inc
(bad)
push
xor
xor
adc
jg
inc
lds
ror
call
inc
nop
fld
shl
xchg
mov
add
or
cdq
cmp
or
loopne
jecxz
cmp
xor
cmps
adc
pop
jne
fild
mov
xchg
stos
cli
push
dec
and
lea
cmp
sahf
add
sbb
push
ss
xor
pop
int
rcl
or
mov
sub
pusha
pop
(bad)
ins
hlt
imul
test
jae
arpl
rcl
push
push
push
and
pop
xchg
je
push
dec
fild
mov
mov
push
sbb
dec
iret
jae
or
jmp
xor
retf
test
add
inc
ja
dec
jge
sub
cmc
cli
push
mov
inc
int3
jb
(bad)
out
mov
inc
popa
test
out
repnz
jno
aad
xlat
outs
bndldx
dec
mov
(bad)
in
cmp
sub
sbb
xor
mov
fsub
fisttp
pop
out
mov
rol
pop
xchg
mov
loope
addr16
outs
in
sbb
cmp
arpl
test
cli
sar
test
add
jnp
jmp
cmps
lods
lahf
sbb
(bad)
pop
pusha
mov
mov
retf
frstor
xchg
ja
pop
mov
push
hlt
ss
jmp
ficom
or
dec
cmp
repz
sbb
not
shr
adc
cmp
lds
or
jnp
adc
mov
adc
mov
cs
push
pop
mov
push
mov
enter
mov
mov
cld
(bad)
repz
cmp
jno
pop
jge
data16
pop
sub
xchg
js
in
es
dec
call
dec
icebp
or
mov
mov
int
in
jle
mov
repz
ins
ins
mov
cmp
sub
aaa
and
cmp
push
rcl
retf
cwde
(bad)
cmc
sub
inc
jo
sbb
push
and
mov
fbstp
push
or
out
es
mov
popf
mov
and
add
fstp
jne
adc
mov
loop
iret
scas
adc
or
pop
test
nop
setnp
aaa
cdq
into
jae
cmp
out
lods
xchg
(bad)
cmps
xor
jae
xchg
sbb
mov
les
mov
inc
daa
jnp
(bad)
das
add
jmp
dec
push
ret
cwde
cmps
je
adc
repz
push
ret
mov
sbb
and
out
jge
scas
(bad)
dec
out
dec
(bad)
(bad)
mov
in
jb
xchg
out
call
jmp
jbe
dec
dec
hlt
inc
xchg
retf
add
movs
call
mov
fisttp
cmp
cmp
frndint
xor
ins
push
test
mov
popa
or
pop
(bad)
imul
and
cmp
ja
loop
jle
fnstenv
js
rcl
or
leave
gs
xor
call
xchg
mov
outs
leave
push
jb
icebp
das
je
call
not
cmp
ins
and
es
jp
mov
pop
rol
mov
sub
pop
sub
movs
xchg
xlat
push
xor
arpl
movs
out
lahf
and
mov
or
and
cmc
cmp
sti
dec
icebp
cmp
mov
hlt
push
and
hlt
xchg
ins
dec
xchg
repz
lock
das
sub
sub
xchg
stos
cmp
aam
std
pop
mov
aaa
cli
bound
fbstp
in
lods
push
push
jg
adc
(bad)
cli
shl
ret
test
xor
push
add
int3
push
sbb
sbb
jp
call
cmp
push
xchg
mov
push
or
and
pop
add
retf
mov
shl
sub
xchg
fisub
(bad)
leave
comiss
sbb
out
inc
inc
sbb
(bad)
ret
std
inc
xchg
gs
mov
lods
test
xor
add
lahf
xchg
xchg
pop
add
hlt
jnp
adc
adc
fistp
int
mov
(bad)
cmps
pop
clc
sbb
inc
pop
nop
rol
jle
in
imul
pop
xchg
int
xor
jmp
enter
shl
cwde
pop
mov
in
mov
js
int
out
shl
mov
fst
cmp
nop
test
addr16
shl
mov
sbb
stos
loop
gs
jns
push
in
sahf
adc
fs
das
js
pop
fwait
adc
rcr
inc
mov
daa
rcr
or
and
jae
adc
and
mov
pop
xchg
cmp
lahf
call
sbb
jmp
jge
(bad)
test
fdiv
fcmove
hlt
xchg
inc
push
ins
mov
or
(bad)
int3
and
ins
dec
outs
fucomi
lock
adc
int
lock
jecxz
jmp
push
or
div
or
test
(bad)
cmp
sahf
xor
mov
lea
xchg
jg
adc
xchg
addr16
xchg
jns
pop
mov
(bad)
stc
jecxz
sbb
out
cdq
pop
sbb
jmp
sete
cmp
outs
data16
fsub
icebp
cmp
cmp
daa
out
(bad)
push
pop
and
mov
or
sbb
pop
int3
stos
adc
mov
or
inc
pop
cmp
sub
adc
daa
aas
(bad)
icebp
push
pop
cli
int
pop
xor
fiadd
ins
inc
xchg
pop
push
push
adc
sbb
push
and
push
mov
inc
ds
retw
nop
rcl
and
std
stos
aaa
out
dec
sbb
mov
es
cs
sbb
cwde
and
cmp
jge
gs
outs
aaa
fisttp
aam
pop
into
popa
sahf
xor
sbb
in
scas
inc
and
fcomp
mov
movs
sti
pop
dec
sub
loope
test
std
xor
dec
jecxz
aas
jg
fucomp
ss
(bad)
movs
ja
fistp
shl
push
xchg
vpsllvd
popa
mov
cmp
aam
mov
adc
mov
xor
es
in
push
sbb
aas
push
mov
icebp
outs
xor
mov
xchg
pop
pop
cmp
lea
ins
cmp
cmp
pop
inc
scas
push
stc
or
in
call
xor
xchg
or
mov
mov
aad
icebp
stos
ror
jle
call
test
inc
shl
test
push
pop
dec
push
jg
(bad)
into
xchg
cdq
jg
or
stos
inc
mov
cwde
or
retf
dec
adc
xor
popa
push
add
in
lahf
fsubr
jbe
out
cmps
mov
pop
sti
aad
outs
(bad)
test
push
xor
dec
xchg
jge
popa
in
xchg
loope
push
dec
popf
dec
test
retf
xchg
pop
mov
push
rcl
(bad)
aam
cli
sbb
call
inc
sti
xchg
movs
mov
pop
in
inc
jne
imul
(bad)
mov
xchg
mov
out
sub
add
and
mov
stc
adc
loop
retf
jmp
movs
retf
cmp
adc
xor
mov
and
mov
in
jne
xor
pusha
mov
jecxz
inc
arpl
int3
sar
pop
stc
mov
rcl
mov
clc
inc
xchg
sbb
push
xchg
scas
movs
arpl
int
inc
dec
mov
jl
out
retf
cmp
aad
xchg
pop
mov
add
and
lock
xlat
cmp
loop
xchg
scas
(bad)
jbe
sbb
add
or
call
test
in
test
or
push
out
inc
(bad)
adc
pop
das
cmp
cwde
sbb
or
leave
push
mov
test
adc
cmc
sbb
scas
addr16
cli
enter
mov
(bad)
clc
mov
les
fidiv
push
push
je
adc
xor
xor
ins
js
std
mov
mov
mov
or
stos
jnp
scas
cmp
or
xchg
jecxz
or
mov
cmp
or
add
enter
xlat
retf
mov
add
sbb
push
(bad)
retf
jns
add
call
cmc
push
or
ret
xor
sub
ss
ret
fwait
inc
xchg
out
sub
inc
jl
xchg
call
pop
mov
jmp
or
shr
fld
xchg
xor
out
xchg
(bad)
(bad)
bnd
jb
js
gs
retf
pop
sar
cdq
outs
mov
iret
data16
sub
aas
xchg
xor
test
repz
pop
das
sub
ror
or
call
mov
sbb
(bad)
mov
je
sub
sub
sbb
fld
mov
aas
(bad)
popaw
sub
push
mov
sbb
(bad)
jb
aad
imul
cmp
push
fmul
shr
xchg
mov
stos
xchg
xor
adc
in
inc
xor
aaa
sub
lock
scas
add
mov
hlt
jo
mov
(bad)
mov
push
mov
ret
arpl
sar
cmc
loop
nop
or
inc
outs
and
push
xor
sbb
xor
push
je
in
aas
dec
mov
add
inc
fst
in
fwait
or
jmp
pushf
push
icebp
icebp
ins
mov
das
and
jmp
iret
xchg
push
jmp
xchg
arpl
(bad)
mov
push
pusha
outs
fcmovbe
jne
lea
push
out
addr16
adc
repz
out
pop
inc
ret
adc
adc
or
fcom
sbb
cmp
popa
adc
fsubr
rol
xor
inc
sub
repz
mov
test
mov
fld
push
jg
mov
enter
and
rol
jno
xchg
(bad)
cmps
mov
je
cmp
cmp
fidivr
ficomp
popf
push
sbb
jbe
xor
retf
xchg
sahf
mov
pop
push
cmp
rol
push
call
lods
les
add
jo
std
xor
repnz
out
mov
xchg
cmp
pop
inc
mov
icebp
stos
mov
jno
mov
movs
cdq
pusha
mov
push
stc
loopne
cmps
cld
sbb
xor
inc
add
adc
cmp
push
fwait
mov
and
mov
cmp
in
scas
mov
sub
fs
nop
(bad)
dec
pop
sbb
dec
scas
adc
sub
xchg
imul
sar
out
jmp
mov
psraw
cmp
cmc
das
aad
jne
cdq
mov
es
adc
imul
cmps
pop
loope
stos
jp
movs
arpl
aaa
into
jb
cmc
movs
popf
fldenv
shl
sti
pop
jo
repnz
retf
mov
xchg
cmp
adc
push
fnstcw
xchg
or
dec
aaa
xor
movs
cdq
sub
push
xchg
pop
push
xchg
xchg
retf
xor
scas
mov
jno
push
in
rcl
inc
mov
and
out
mov
xlat
mov
mov
js
(bad)
pop
pusha
imul
cmp
cmp
xchg
out
or
pop
sub
and
add
jecxz
sub
mov
jg
scas
cli
dec
rcr
dec
imul
xor
shl
adc
mov
std
and
in
or
inc
push
jp
(bad)
stos
fisub
movs
push
mov
adc
movs
inc
mov
test
fdivr
and
push
test
cdq
rol
pop
cmp
push
fild
in
loopne
jae
lock
pop
cmps
std
mov
sub
inc
inc
loope
pushf
test
lock
arpl
sub
icebp
jns
fst
fstp
outs
jb
and
dec
in
ror
cmp
shl
push
fwait
xchg
outs
jae
xor
push
loop
fcmovu
ror
ret
ror
scas
daa
ja
fst
xchg
shl
adc
mov
mov
dec
inc
out
ret
or
xor
add
dec
addr16
dec
cwde
jo
gs
sbb
adc
inc
ret
add
jle
ss
leave
sub
sahf
outs
dec
xchg
dec
enter
call
xor
sub
mov
in
mov
jo
mov
mov
test
add
aas
or
sbb
cmp
sub
cmp
out
mov
xchg
add
lds
mov
mov
aam
out
mov
stos
sub
std
jb
mov
fs
push
into
add
imul
and
sub
mov
and
test
fdivr
hlt
pop
ret
jmp
nop
sbb
mov
and
jnp
pop
mov
in
mov
int
and
(bad)
int
into
fwait
iret
sbb
das
repnz
lods
mov
ja
dec
loopne
lea
ficom
mov
cmp
stc
ret
xor
ror
cmc
fstp
push
add
pop
sbb
clc
out
xchg
scas
sub
enter
and
enter
cmp
ss
cld
dec
inc
xchg
(bad)
add
sub
sbb
and
sbb
adc
in
sbb
lods
pop
pop
(bad)
jge
nop
push
fdiv
mov
pop
out
xor
cmps
inc
lods
je
mov
out
jno
daa
loop
push
adc
fdivr
sub
sbb
(bad)
pop
pop
mov
or
xor
jl
clc
leave
inc
add
and
mov
adc
cmc
ror
outs
and
inc
inc
sbb
enter
clc
ret
imul
mov
dec
jae
jle
push
mov
sub
adc
popf
mov
in
sub
repz
and
or
pop
xchg
and
xor
adc
sbb
int
popa
sub
test
test
mov
dec
xchg
mov
and
sbb
pop
and
jnp
(bad)
int
xchg
cmp
cmp
jne
and
cli
xchg
div
or
jne
fs
daa
pop
mov
xchg
sbb
xchg
aas
inc
xor
sbb
sub
push
outs
push
stos
add
xchg
pop
ror
in
jle
dec
sbb
and
fcom
push
popf
(bad)
jp
jge
xor
lods
test
mov
je
es
out
popf
pop
ds
cmp
fmul
push
mov
push
call
sbb
ror
xor
div
mov
jecxz
ret
mov
out
pushf
in
pop
xchg
jl
sar
xor
mov
cli
add
mov
sahf
pop
xor
pop
push
jne
adc
sub
jecxz
xor
mov
xchg
repnz
mov
cmc
outs
adc
loop
mov
and
fdiv
mov
fxch
mov
inc
xor
jge
movs
adc
fsubr
jp
xor
xchg
call
in
rcr
push
(bad)
dec
jmp
dec
std
enter
inc
mov
aaa
xor
or
mov
js
pop
pop
shl
pop
dec
fld
jge
repnz
jp
adc
push
pop
call
outs
(bad)
in
repnz
lods
fwait
mov
mov
sti
ss
push
fild
inc
sub
lea
mov
push
mov
mov
jb
pop
mov
adc
cmps
pop
lods
pop
addr16
dec
mov
or
adc
and
xlat
in
mov
mov
enter
sbb
and
mov
mov
rol
cld
shl
call
sahf
je
inc
enter
xor
out
inc
test
xor
cmp
sub
adc
repnz
in
sub
test
cmp
(bad)
jne
scas
int
mov
arpl
lea
mov
popf
cld
ds
fnstcw
inc
dec
je
lods
add
pop
aam
xor
cdq
out
inc
imul
into
neg
add
add
idiv
xchg
cmc
out
aas
ss
push
popf
mov
jp
repz
mov
mov
fwait
xor
xor
stos
cmps
popa
loope
(bad)
ja
test
gs
add
sub
imul
xchg
xchg
push
mov
inc
pusha
repnz
aad
in
and
mov
jmp
jmp
movs
mov
xor
in
aad
aam
into
pop
movs
dec
in
and
push
es
or
das
cld
lods
gs
bswap
xor
dec
mov
fwait
gs
mov
(bad)
sar
cwde
xlat
mov
mov
dec
jo
(bad)
rcr
xchg
into
adc
arpl
fimul
cmp
push
or
inc
push
push
mov
mov
xchg
repnz
add
mov
add
add
mov
popf
cli
add
leave
rcl
dec
cs
js
sbb
mov
jmp
sub
xor
mov
adc
retf
pop
sbb
lea
in
sbb
aaa
adc
js
jmp
addr16
cmp
pop
mov
xor
xchg
dec
mov
vcvtps2pd
pop
pop
mov
iret
loopne
pop
sub
(bad)
xor
lds
sti
push
out
stos
mov
repz
pop
push
sar
adc
scas
mov
add
leave
xchg
pop
cmp
dec
cmp
das
hlt
test
inc
mov
and
xor
pop
mov
and
clc
into
shl
xchg
js
test
adc
outs
xchg
add
int
push
jle
out
aam
jl
mov
push
(bad)
pop
mov
adc
xor
xchg
sub
sbb
or
push
mov
mov
push
pop
outs
imul
push
cdq
mov
jo
xor
pop
movs
gs
push
mov
xlat
xchg
or
popa
in
psrlw
je
test
push
popa
cld
in
push
sbb
stos
sbb
js
sahf
xchg
dec
push
xor
dec
push
sub
popf
cmp
dec
jmp
mov
sub
aas
pop
retf
lods
jnp
mov
je
sbb
cmps
xor
fstp
clc
outs
nop
mov
sti
and
and
aam
dec
iret
and
or
cmps
jmp
jecxz
sub
popa
movs
cmp
push
and
js
push
cmp
jns
shr
inc
std
sar
lods
dec
in
test
xchg
jge
pop
push
sbb
jo
adc
inc
pop
jmp
lods
push
xor
addr16
icebp
xor
mov
and
pop
icebp
mov
mov
pop
dec
lahf
jmp
cmp
dec
mov
or
xor
mov
and
push
cld
std
(bad)
jecxz
outs
fsub
fisttp
nop
mov
aas
(bad)
jbe
inc
sbb
inc
or
popa
xchg
inc
stc
add
lock
jnp
and
dec
retf
jne
mov
mov
push
push
and
popa
stos
cmps
mov
and
js
repz
movs
dec
movs
add
addr16
xor
aaa
cmp
popa
adc
or
in
mov
popf
mul
mov
xchg
xchg
mov
stos
mov
iret
jnp
test
push
push
fsubr
fidivr
jnp
inc
and
jmp
hlt
ror
enter
outs
add
in
mov
out
enter
pop
scas
ror
test
add
mov
mov
mov
leave
pop
clc
out
aad
mov
popf
mov
stc
sbb
jle
jge
sbb
jmp
cld
mov
xor
es
imul
push
bound
mov
sbb
pop
dec
iret
inc
imul
push
xchg
pop
in
and
cwde
xchg
jle
xor
lods
cld
mov
or
jns
ins
stos
mov
push
hlt
mov
hlt
cmps
and
mov
and
add
lea
inc
cmp
inc
mov
pop
out
iret
pop
popa
jp
and
sar
mov
rcr
xchg
cmp
cmp
ins
mov
cld
ret
test
iret
jne
stc
push
xchg
js
mov
dec
xor
shl
jae
sar
inc
shl
add
jmp
out
add
in
int3
ins
imul
fs
ror
sub
mov
loop
mov
cld
call
scas
dec
jmp
mov
or
mov
ficom
fs
inc
mov
in
mov
or
pop
sbb
jno
mov
jl
or
hlt
(bad)
fcmovu
(bad)
fcom
mov
inc
iret
fnstenv
xchg
fist
iret
ins
jp
in
lea
ins
hlt
jl
mov
inc
(bad)
out
dec
add
ja
(bad)
loopne
mov
pop
jmp
outs
pop
jmp
cmp
lds
dec
aaa
les
movs
into
jb
fs
jmp
dec
cld
lds
xor
mov
add
xor
fst
leave
push
sub
fcom
(bad)
retf
pusha
push
sbb
sbb
mov
and
push
add
push
cs
fld
dec
add
sbb
xor
jo
sub
test
push
pushf
mov
and
sub
ud2
jae
mov
pop
mov
pop
fdiv
mov
push
call
or
and
iret
jp
pop
adc
fucomp
pop
mov
mov
movs
inc
(bad)
mov
call
cmp
fucompp
adc
jno
mov
mov
jo
dec
jp
into
push
ja
push
dec
aad
sbb
bsf
les
sub
mov
test
dec
pop
out
mov
sbb
cdq
inc
inc
(bad)
xchg
ins
xor
lods
jns
loope
in
scas
lahf
aad
pushf
jae
mov
and
mov
popf
sbb
pop
pop
push
mov
fimul
ds
fnstenv
mov
ret
lahf
or
mov
cmp
cmp
scas
leave
mov
cmp
cmp
outs
les
stos
push
mov
adc
cmp
into
cmp
cdq
adc
add
sar
out
add
inc
(bad)
sub
mov
ins
es
xchg
out
fisttp
arpl
cld
jecxz
cmp
adc
pushf
popf
push
push
aas
jge
xor
inc
je
mov
push
movntps
(bad)
push
dec
push
jb
aas
mov
cmp
ror
shr
sbb
push
jecxz
int3
ins
dec
bsr
inc
pushf
push
push
cld
mov
retf
add
inc
pop
mov
(bad)
in
out
push
sub
outs
adc
jmp
loope
inc
add
(bad)
not
retf
cmp
mov
popa
adc
adc
test
cld
xchg
mov
out
or
data16
sbb
scas
bound
push
sbb
and
jg
inc
cmps
sbb
mov
xchg
arpl
hlt
clc
enter
mov
xor
pop
mov
xchg
and
xchg
sub
out
das
std
mov
push
(bad)
lahf
or
mov
adc
into
cmp
mov
jg
nop
ja
test
pop
scas
call
arpl
mov
aad
jge
les
fwait
aaa
xchg
jecxz
cld
ret
sbb
iret
sbb
call
jg
push
push
xor
nop
clc
push
jmp
fs
xchg
(bad)
push
jmp
jge
and
in
(bad)
jae
push
jg
push
pop
out
or
inc
jecxz
test
adc
in
dec
adc
adc
mov
inc
xchg
dec
mov
in
mov
dec
ins
shl
push
mov
inc
inc
idiv
daa
mov
cmp
cmp
imul
mov
dec
test
ins
aas
adc
(bad)
rcl
cs
jmp
call
push
cmc
mov
cmp
pusha
push
sahf
ins
scas
outs
aam
out
test
dec
sbb
pushf
int3
out
push
mov
inc
dec
sbb
adc
mov
xor
mov
mov
lea
push
pushf
sbb
jmp
in
cmp
leave
xchg
ja
aad
dec
hlt
inc
fdivr
and
fnstsw
sub
ret
es
imul
xchg
pop
cmp
mov
cli
aaa
sbb
push
or
jne
iret
push
sub
loope
lods
mov
fs
add
push
loop
loopne
push
fs
ror
add
jbe
ficom
sbb
jns
pop
std
pop
sub
push
push
cmp
or
inc
mov
out
xor
adc
push
addr16
sahf
ret
scas
sub
out
fdiv
cld
pop
dec
jnp
mov
jmp
xor
outs
jg
pop
(bad)
not
es
mov
hlt
sbb
add
sub
loop
push
mov
jle
ins
mov
lods
js
sti
out
loop
adc
push
pop
ds
add
daa
jae
stos
dec
lods
inc
outs
fild
pop
add
mov
mov
or
fcmovbe
movs
dec
rcr
leave
test
dec
fcom
inc
mov
sub
push
fild
or
add
out
out
mov
nop
cmp
es
mov
jne
bound
daa
push
xchg
scas
iret
imul
lock
pop
idiv
cld
mov
stc
dec
add
mov
push
mov
xor
ret
(bad)
mov
sub
inc
ret
and
mov
jae
loopne
test
sub
mov
dec
add
scas
call
sbb
pop
mov
clc
push
push
dec
jl
mov
sub
outs
and
sar
scas
fwait
cmp
cmps
aad
push
push
jno
dec
push
mov
cdq
jne
adc
retf
sar
and
popa
cmps
es
ins
add
xor
rcr
sub
inc
sub
pop
ficomp
pop
std
dec
or
dec
mov
xchg
aas
cdq
and
jl
lahf
adc
stos
inc
adc
arpl
clc
leavew
push
jo
fwait
stos
stos
add
ins
mov
mov
test
enter
or
sub
jecxz
jle
pop
inc
loop
xchg
adc
(bad)
mov
jmp
mov
push
mov
push
outs
cdq
sbb
push
clc
mov
hlt
or
adc
inc
sti
dec
test
inc
cmp
mov
add
and
test
jecxz
pop
push
push
sbb
fisttp
fnstsw
mov
fistp
add
aas
lea
mov
xor
sub
(bad)
pusha
(bad)
fild
out
iret
xchg
fdiv
dec
jbe
xor
jnp
fdivr
call
cld
dec
in
xlat
test
adc
cmps
(bad)
add
pop
mov
jnp
sbb
(bad)
clc
shl
arpl
in
xor
fisubr
gs
fidiv
mov
lahf
jmp
lds
xchg
xor
cmc
fcom
and
std
repnz
js
bound
sub
xchg
mov
xlat
cmc
mov
mov
pop
pushf
out
pop
sbb
xchg
int
retf
mov
(bad)
fistp
push
jo
mov
or
test
cmp
mov
movs
mov
mov
and
cmp
push
ds
or
ds
loopne
xor
sub
mov
mov
gs
jp
sub
cld
mov
mov
mov
sub
enter
test
push
lahf
xchg
xchg
push
jg
dec
pusha
clc
daa
ins
out
sbb
pop
outs
inc
test
test
test
leave
or
sbb
movs
mov
jno
xor
jg
mov
in
inc
ret
dec
outs
or
mov
mov
fs
gs
cmp
mov
push
(bad)
dec
xor
cmp
data16
(bad)
sub
jp
in
(bad)
dec
sub
daa
jne
xchg
outs
(bad)
addr16
mov
call
inc
stos
addr16
mov
xlat
mov
mov
call
mov
fmul
jp
popa
mov
mov
jmp
inc
jecxz
mov
stos
inc
cmp
sbb
cmp
mul
rol
inc
xor
dec
xor
dec
xchg
inc
sub
js
cld
shr
sub
pop
xchg
pusha
(bad)
fidiv
js
fsubr
hlt
or
push
test
xor
stos
xor
ret
loop
dec
xchg
idiv
cs
nop
fst
push
xchg
ja
or
dec
pop
mov
fsub
jecxz
sbb
push
xor
pop
sub
push
adc
ret
push
sub
in
lock
mov
and
inc
in
fisub
push
loop
mov
mov
adc
jl
jge
outs
sub
push
repnz
adc
xlat
pop
xor
dec
or
ror
das
add
adc
jl
in
dec
mov
in
cmp
cmp
les
(bad)
sar
add
jl
pop
daa
dec
mov
xchg
sbb
cwde
(bad)
push
jae
fcom
ins
(bad)
lods
cmp
mov
xchg
or
ins
(bad)
vshufpd
mov
jg
hlt
(bad)
adc
jmp
jp
mov
fwait
inc
pop
sbb
test
inc
cpuid
imul
stc
rcr
shl
or
inc
mov
movs
jno
mov
test
jo
sar
dec
fld
xchg
sub
xchg
out
enter
pusha
in
xor
cmps
pop
sub
mov
out
mov
fistp
arpl
bound
push
mov
shl
(bad)
jmp
or
dec
jne
add
sub
test
pop
out
sub
dec
jp
iret
cmp
sahf
or
inc
data16
test
loop
sub
xchg
int3
fwait
push
push
jns
xchg
xchg
or
and
test
push
out
imul
lea
ins
sti
jmp
jecxz
push
pop
adc
ja
sbb
jp
(bad)
stc
icebp
cmps
jo
or
xchg
jo
pop
out
sub
xchg
int3
test
mov
bound
pop
mov
inc
jbe
es
mov
arpl
jb
cmp
jno
sbb
aam
xor
mov
xor
pop
or
xor
or
jmp
vpsubusw
push
ret
adc
ret
jge
outs
mov
mov
and
retf
neg
adc
sbb
iret
pop
out
sbb
sub
cld
rcl
and
dec
sbb
adc
pop
push
push
adc
enter
xchg
cmp
xor
adc
sar
(bad)
inc
mov
adc
mov
xchg
cld
mov
xchg
fbstp
rdmsr
add
int3
push
mov
(bad)
push
mov
xchg
and
jnp
mov
xor
clc
xchg
add
xchg
loope
cwde
gs
and
adc
pop
movs
mov
or
cmps
aam
dec
imul
jle
cli
mov
repnz
(bad)
xchg
stos
ret
ss
sub
jae
retf
xchg
dec
outs
xchg
test
push
(bad)
or
test
inc
loop
call
or
outs
xor
(bad)
xor
mov
jl
sub
call
out
div
ss
dec
ret
jno
inc
push
jbe
jnp
outs
lods
out
xor
sahf
int3
(bad)
je
sahf
add
test
dec
xchg
dec
movs
fwait
dec
adc
xchg
dec
cmp
and
lds
out
push
in
inc
and
retf
sub
push
xchg
xor
sub
sbb
pop
xor
mov
push
push
inc
pop
xchg
daa
sbb
xchg
out
cmp
or
sbb
lahf
fnstenv
add
sbb
fbld
mov
pop
sbb
inc
mov
push
xchg
icebp
(bad)
push
xchg
pop
pop
and
jp
jo
js
lods
sub
retf
jl
je
retf
(bad)
(bad)
push
rcl
mov
test
push
xlat
scas
adc
(bad)
rcr
(bad)
dec
adc
and
or
(bad)
test
(bad)
sbb
clc
adc
sbb
hlt
outs
jp
xor
movs
shr
xor
in
std
jle
js
xchg
inc
mov
test
dec
mov
test
call
jne
shl
sub
jmp
gs
dec
cmp
lods
jp
inc
clc
call
pop
es
fwait
aas
mov
pushf
aad
imul
retf
dec
jl
jp
call
mov
sub
aaa
mov
cmps
pop
add
xchg
sbb
and
dec
imul
mov
data16
dec
pop
push
in
pop
call
mov
inc
dec
push
enter
rcl
test
int3
inc
xchg
adc
pop
mov
or
leave
mov
arpl
add
cmp
popa
xor
sti
xchg
xchg
sbb
sbb
cmp
xchg
(bad)
into
jno
scas
in
mov
js
popa
push
push
jecxz
or
scas
xor
iret
sub
adc
loop
cmp
inc
jmp
mov
in
rol
outs
fucomip
lods
push
lock
pop
shl
movs
dec
mov
or
pop
in
shr
cmp
cmp
sbb
inc
outs
jmp
arpl
int
jmp
push
aaa
jne
sbb
jmp
push
sahf
cmp
push
jo
mov
imul
loopne
daa
mov
or
mov
mov
fisttp
add
rcr
ja
les
in
jl
mov
imul
outs
add
inc
ins
jno
leave
xor
sub
add
repnz
cdq
in
add
(bad)
jl
mov
imul
or
mov
adc
aad
out
adc
addr16
adc
and
out
test
xlat
frstor
mov
div
movs
adc
movs
test
outs
mov
frstor
inc
mov
and
mov
gs
xor
mov
dec
adc
push
or
mov
outs
loopne
push
jnp
rcl
out
sbb
sbb
ins
popf
dec
push
mov
ins
jo
stc
adc
retf
mov
ins
test
add
mov
jmp
or
data16
pop
imul
je
les
jmp
into
in
and
mov
or
jnp
mov
sbb
xchg
(bad)
xchg
dec
nop
call
cmp
cmc
inc
push
(bad)
idiv
lods
adc
fist
stos
pusha
into
or
dec
fnstsw
adc
pushf
loop
mov
jecxz
dec
clc
push
call
jae
jae
outs
popf
mov
sbb
mov
xor
dec
mov
cs
lea
xor
add
add
stos
ret
xlat
adc
and
add
xlat
dec
push
or
movs
leave
cmc
xor
dec
out
cmp
sub
in
inc
dec
jge
mov
jmp
leave
add
and
dec
lods
rcpps
and
jb
mov
ror
xchg
push
into
mov
not
jl
sbb
xchg
mov
fdivr
repz
ins
dec
pushf
xchg
test
mov
lea
or
leave
xchg
ret
lock
add
pop
fld
sub
cmps
stc
push
and
xor
lahf
out
sub
xor
pop
pushf
push
add
loope
mov
mov
(bad)
jmp
xchg
pusha
mov
aaa
fwait
push
push
inc
push
dec
daa
bound
push
cmp
fsubrp
aaa
and
or
jo
lds
scas
std
jmp
in
cmc
call
add
add
and
repnz
mov
and
sub
(bad)
mov
lock
iret
test
mov
ins
lea
outs
pop
push
in
retf
jl
jmp
repnz
mov
enter
dec
add
add
test
call
push
pop
ret
pop
bsf
out
fmulp
in
xlat
sar
call
cmp
out
mov
vphaddbq
clc
scas
stc
out
cmp
adc
or
jmp
pop
inc
sar
stc
or
and
mov
mov
cdq
loope
jp
and
jle
popf
mov
sub
das
pusha
mov
push
pushf
(bad)
inc
lock
fst
arpl
xor
sbb
aad
cmp
aad
xchg
adc
ds
mov
sbb
pop
int3
pop
dec
fmul
push
into
push
xchg
(bad)
cmc
pop
pop
jp
mov
jmp
push
js
in
mov
ret
dec
push
fisubr
stos
cmp
xlat
loopne
mov
fisttp
gs
adc
jns
int
add
popa
cmps
jge
jmp
mov
fwait
or
xor
call
add
shr
mov
add
cmp
hlt
inc
xlat
icebp
pop
aam
jo
popa
mov
or
push
call
pop
repz
sar
(bad)
mov
mov
(bad)
ja
ss
ror
fwait
pop
popf
rcr
or
in
mov
pushf
push
pushf
and
stos
mov
pop
or
xlat
icebp
repnz
enter
mov
and
clc
mov
retf
sbb
xlat
js
mov
mov
mov
xor
mov
xlat
retf
aas
mov
mov
mov
jg
outs
fisubr
inc
cmp
sbb
adc
mov
cmp
repz
adc
movs
rcl
dec
leave
leave
ja
cs
mov
jne
xor
jle
mov
dec
xor
push
xchg
push
mov
xor
pop
pop
mov
out
xor
dec
xor
lsl
inc
fld
in
pop
add
mov
push
sub
aam
jle
frstor
pop
mov
pop
pusha
rcl
inc
lahf
lods
into
into
movs
std
mov
sub
(bad)
sar
mov
pop
mov
or
imul
out
sbb
cmp
aaa
sub
xor
and
jg
movs
cmp
into
dec
shl
mov
repnz
mov
gs
dec
jp
xchg
jp
jmp
mov
sahf
ds
shr
ror
int
mov
ds
int
and
hlt
mov
push
outs
and
cmp
mov
sbb
dec
cs
jecxz
lea
ins
mov
in
pop
pushf
lds
aad
jnp
call
test
(bad)
xchg
pop
sbb
xchg
xchg
xchg
mov
and
cmps
push
out
push
pop
pop
icebp
jo
ret
sub
xchg
jp
xchg
ret
int3
mov
adc
sti
push
pusha
aas
jmp
and
mov
sbb
sbb
mov
sub
mov
stos
lock
in
stc
lods
cmc
ja
fnstsw
mov
pop
xchg
les
rcl
mov
test
lods
jb
mov
mov
jae
mov
lds
out
or
add
and
nop
push
cwde
out
outs
cld
add
mov
xchg
cmp
adc
xchg
movs
sahf
xor
adc
sbb
jmp
div
scas
or
cmc
jne
nop
xchg
test
dec
xor
stos
xor
(bad)
(bad)
(bad)
or
adc
xchg
add
cwde
xor
and
leave
mov
fldcw
push
cmp
and
pusha
mul
dec
mov
daa
sbb
dec
fs
mov
xchg
ja
loope
dec
out
call
pushw
push
(bad)
(bad)
cmp
push
xlat
inc
dec
stos
push
bound
fwait
cmp
inc
and
adc
icebp
inc
mov
sbb
sbb
cmps
sub
xchg
jae
sub
pop
(bad)
pushf
scas
ja
rcl
adc
add
sub
mov
and
outs
adc
scas
jb
sub
sbb
bnd
mov
sbb
ds
jbe
or
sub
xchg
in
push
pop
push
icebp
fiadd
push
lock
out
stos
jp
pandn
icebp
repnz
jb
in
sub
leave
sbb
call
sbb
or
push
push
fadd
sar
xor
pop
push
idiv
ds
repz
aas
mov
xor
aad
js
mov
push
cmp
les
aam
xor
in
fcom
add
loop
bound
or
mov
pop
fstp
jl
xor
in
(bad)
loope
pushf
aaa
sub
adc
push
xor
imul
in
and
inc
call
iret
pop
add
pop
cmp
dec
adc
dec
dec
mov
in
dec
das
aad
cmp
jmp
sbb
jnp
scas
dec
and
call
mov
(bad)
sbb
ss
sub
jae
jmp
inc
mov
retf
xor
xchg
mov
push
mov
or
(bad)
mov
fst
outs
cmp
inc
mov
js
mov
add
ja
fcmovbe
shl
cmovo
movs
scas
push
adc
clc
sub
and
call
aam
fcmovnb
xchg
call
push
adc
shr
xchg
popf
(bad)
dec
ds
daa
sar
dec
ss
xchg
pushf
shl
sbb
mov
jmp
in
fstp
fcomp
ficomp
and
pop
dec
rol
repnz
pop
mov
cmp
push
xstore-rng
cmps
push
cmp
adc
jle
enter
or
frstor
call
sti
xchg
jnp
push
outs
mov
mov
and
data16
add
out
scas
xor
pop
push
stos
cmps
inc
inc
and
fwait
or
shl
ret
sbb
pop
lahf
aad
xchg
hlt
sub
pusha
outs
lods
jg
mov
(bad)
bound
cmp
jno
test
mov
mov
jne
mov
imul
mov
or
mov
leave
cmp
xchg
ja
das
xchg
stos
or
iret
add
aas
push
fwait
add
aas
inc
cmc
int3
or
mov
and
shl
sbb
push
test
jnp
sub
(bad)
jmp
(bad)
sbb
xor
rcl
les
push
mov
mov
icebp
test
dec
fucomp
into
int
stos
mov
sub
jo
adc
mov
fs
movs
dec
(bad)
fwait
ss
pop
mov
(bad)
push
arpl
fcomp
mov
das
fcomip
xor
call
pop
aad
cmp
cmp
es
jl
test
dec
pop
cmps
lods
mov
loopne
add
or
rol
sbb
adc
and
xor
pop
pop
adc
hlt
adc
imul
pusha
push
xor
hlt
adc
fnstcw
loope
fstp
push
cld
in
pop
xchg
jmp
gs
into
push
ror
push
mov
and
je
jnp
xor
dec
adc
into
cmp
ins
(bad)
cmps
or
ja
nop
test
ja
or
sbb
out
or
jb
sti
inc
cs
adc
int
pop
adc
jle
and
in
aas
js
jl
xchg
(bad)
cmp
test
out
fwait
loopne
mov
mov
mul
gs
clc
mov
pop
stos
jne
retf
mov
jne
scas
test
push
fstp
mov
ins
mov
ins
stos
add
ins
pop
je
lds
ins
sbb
pop
and
cdq
repz
std
sub
mov
pop
into
xchg
fcomi
sub
popf
or
dec
pop
and
sar
xchg
cmp
movs
inc
xor
mov
sbb
lds
xchg
push
int3
inc
xchg
imul
adc
in
enter
mov
cmps
(bad)
fisttp
in
push
jne
div
call
aad
mov
cdq
fmul
out
ret
and
push
mov
push
adc
jecxz
adc
inc
mov
pop
sahf
push
hlt
jnp
sub
cli
fs
push
imul
in
sbb
mov
push
jne
sbb
shr
cs
pop
lock
mov
dec
mov
enter
or
lods
push
jp
ret
fnstcw
push
outs
pusha
in
fild
inc
je
or
mov
popf
xchg
mov
sar
jb
push
add
popa
push
mov
sbb
addr16
mov
inc
call
rcr
dec
in
mov
ja
inc
mov
test
add
mov
mov
sub
int
test
and
jmp
jo
mov
xor
jge
arpl
inc
or
imul
pusha
dec
cmp
jmp
jp
adc
inc
pop
shl
out
cmp
push
dec
shr
xchg
inc
add
mov
(bad)
les
inc
das
inc
dec
call
and
xchg
in
scas
sub
fcom
imul
add
mov
dec
sbb
add
clc
mov
mov
jne
xor
jp
mov
push
ins
nop
sar
mov
pop
sbb
pop
sub
ja
and
call
dec
xchg
xchg
or
loop
xchg
scas
mov
loopne
fidivr
into
jae
aaa
jae
push
aad
aad
and
fsub
push
dec
aad
imul
jae
adc
jo
gs
dec
mov
ins
and
inc
gs
gs
fistp
jno
data16
pop
and
jb
and
mov
fnstcw
xor
sbb
aam
pop
loopne
cwde
xchg
or
aas
jecxz
ja
xchg
fistp
pop
cmps
rcr
test
adc
jp
mov
retf
add
jge
xchg
rcr
xor
push
cld
add
cmp
mov
and
add
lods
inc
(bad)
xchg
and
hlt
dec
and
jo
sbb
stos
aas
mov
je
pop
xchg
fidiv
fbstp
or
add
and
into
outs
sbb
(bad)
fisttp
sahf
inc
adc
push
and
xchg
pop
jae
push
movs
scas
mov
push
push
mov
lds
imul
inc
or
pop
fdivr
dec
sbb
sahf
loopne
ret
xchg
sti
xchg
aad
mov
cmp
lds
mov
xor
cmp
and
iret
mov
cmp
loope
jns
rcl
fmul
dec
push
jmp
mov
sub
ret
stos
loope
adc
movs
push
mov
jo
dec
mov
mov
and
iret
jae
cmp
imul
jp
aas
adc
(bad)
imul
aad
sti
int
xchg
xor
push
shr
cmp
xchg
js
mov
jp
and
mov
mov
adc
xchg
ins
push
push
in
cmp
mov
inc
jmp
xchg
sbb
push
mov
push
jg
jnp
daa
pop
dec
xchg
js
mov
push
lods
fild
mov
fsub
sahf
mov
out
lds
push
cmp
test
dec
pop
shl
fbstp
inc
and
call
mov
dec
sar
add
scas
or
fadd
xor
push
push
ins
icebp
cmp
cmp
sahf
mov
jae
push
xchg
gs
movs
jl
sbb
popa
test
cmp
gs
add
ret
jp
xor
sbb
push
pop
pop
lods
xchg
xchg
das
shl
repnz
dec
stos
cwde
aas
jno
add
jmp
dec
xchg
ins
lahf
sub
daa
xor
sbb
sbb
mov
mov
dec
cmp
or
(bad)
xor
push
das
mov
arpl
inc
mov
pop
add
retf
jnp
test
into
or
jg
cmps
mov
daa
mov
sub
inc
add
jge
push
mov
movs
dec
imul
loope
(bad)
adc
sar
movs
or
xchg
push
icebp
jno
mov
call
jle
inc
adc
aam
into
mov
dec
sub
xor
xor
out
pop
shl
dec
test
mov
pop
call
ja
pop
addr16
pop
jmp
jecxz
sub
cmp
out
push
movs
movs
ret
cmp
push
cmp
mov
xchg
ins
stc
add
mov
ja
mov
stos
and
mov
scas
out
inc
bound
repz
mov
lods
(bad)
test
adc
out
repnz
pop
jb
mov
cs
fwait
outs
es
(bad)
cmp
pop
mov
jecxz
push
sub
in
shr
es
movs
scas
jmp
ret
loopne
call
cwde
test
push
push
inc
loop
dec
xchg
in
aaa
jle
sub
xchg
sahf
pop
mov
inc
xchg
jb
das
sbb
repnz
icebp
loope
out
xchg
outs
fist
adc
(bad)
jmp
xor
sbb
mov
(bad)
loope
push
jne
std
xchg
jecxz
lods
lock
sub
add
leave
push
in
(bad)
cmp
xor
xchg
and
sub
pop
inc
adc
aad
adc
ins
in
fwait
dec
sbb
mov
jge
daa
mov
mov
data16
push
sbb
outs
mov
addr16
in
sbb
pop
xor
fwait
sti
repnz
xchg
sub
ret
cmps
jl
fcompp
nop
out
pop
in
arpl
mov
cmp
ret
jle
sbb
(bad)
hlt
sub
jp
dec
ss
dec
xor
fwait
popa
add
and
xor
test
aad
das
fs
mov
mov
addps
test
jmp
xor
ja
ds
leave
pusha
and
cmp
or
pop
call
cmc
or
(bad)
pop
cmps
jo
imul
sbb
and
hlt
int3
arpl
mov
dec
mov
les
enter
sahf
adc
xchg
push
stos
xor
mov
in
mov
inc
cmp
out
adc
sub
push
sbb
sub
sbb
ds
iret
(bad)
mov
cmc
fsubr
mov
sahf
jnp
bound
mov
stos
jno
mov
sbb
cmc
jae
pop
jmp
lahf
rol
inc
int3
jo
cmp
sub
dec
or
shl
jne
or
jle
out
inc
or
or
repnz
or
mov
jl
and
imul
mov
inc
jle
xchg
or
push
cmp
sbb
push
xchg
add
or
sbb
bound
retf
add
add
adc
jl
sub
sbb
ds
xor
inc
int
(bad)
stc
push
pop
enter
inc
and
and
xchg
xchg
ror
mov
sub
fnstcw
pop
push
lahf
push
lods
push
xchg
push
psraw
xor
mov
dec
xchg
or
push
int3
movs
or
mov
stos
cli
fs
ds
adc
push
rol
inc
(bad)
push
pop
xor
dec
mov
popa
sub
jmp
iret
lock
sub
aad
sbb
mov
sbb
fld
lock
dec
cs
icebp
in
mov
sahf
int
ret
sbb
dec
into
(bad)
fcomp
add
movs
test
(bad)
scas
sbb
js
inc
xor
pop
inc
sar
or
pop
sbb
dec
sbb
jg
repz
sahf
pop
test
stos
dec
scas
hlt
push
mov
cmps
jge
je
add
push
test
mov
push
push
retf
sub
pop
mov
jbe
cdq
fs
les
popf
repnz
dec
outs
inc
stc
in
mov
sub
mov
xchg
adc
out
jno
sub
push
mov
inc
and
dec
retf
mov
or
out
(bad)
aad
dec
rcl
sub
cwde
sbb
and
mov
push
rol
jecxz
out
add
jne
xor
mov
mov
arpl
push
and
pop
pop
imul
mov
mov
push
pop
and
jae
sbb
pop
mov
ja
scas
cmps
mov
test
pop
xor
test
cmp
idiv
mov
les
movs
sar
add
movs
jl
xchg
adc
xchg
dec
mov
in
imul
inc
in
cmp
std
add
inc
bound
dec
mov
shr
push
cmps
adc
jne
into
loopne
and
pop
dec
dec
push
outs
cmps
or
pop
repz
dec
aaa
sub
int3
(bad)
pop
fadd
inc
and
xor
fdiv
scas
pop
xchg
rcr
mov
sar
push
mov
inc
lahf
cmc
movs
adc
pop
cmp
mov
jp
call
cmp
je
xchg
and
aam
adc
int3
and
mov
mov
push
jbe
dec
adc
pop
sbb
ins
loope
xor
out
xor
inc
mov
aas
scas
push
xor
mov
xor
adc
cmovs
pop
jmp
xchg
mov
(bad)
retf
jl
out
push
and
mov
push
bound
pop
mov
cld
sub
add
add
int3
push
sub
call
std
or
out
xor
or
test
scas
jmp
sub
lods
jle
pushf
lahf
ror
adc
pop
pop
and
les
enter
xchg
inc
cmp
inc
ss
sbb
les
and
rcl
arpl
dec
std
nop
xchg
mov
push
mov
hlt
and
xchg
jg
test
cmp
add
jae
pop
inc
jp
enter
jmp
jge
loope
in
aad
into
loop
mov
pop
dec
sub
dec
clc
outs
xor
dec
xchg
push
test
das
adc
mov
pushf
pop
fchs
xchg
fnstenv
adc
fsubr
and
repnz
rcr
test
sbb
leave
jmp
aas
xchg
mov
loope
jecxz
sub
pusha
pop
sub
xchg
pop
dec
add
cmp
sbb
(bad)
mov
xor
add
adc
fld
cmc
out
addr16
and
push
aad
push
sub
or
or
sub
aam
adc
(bad)
push
add
sbb
inc
cmp
pop
jmp
ret
jp
cmp
(bad)
and
sub
jmp
cs
(bad)
sub
popf
int
mov
in
jg
out
fdiv
sahf
push
in
movs
mov
cmps
pusha
jnp
sahf
mov
into
sub
daa
das
js
sbb
mov
(bad)
jecxz
in
sahf
into
push
loopne
and
ja
cmp
or
cmp
mov
and
fldenv
(bad)
add
push
int
mov
dec
mov
push
nop
std
or
shr
outs
jno
test
cmps
cmp
adc
mov
pop
int
loopne
dec
into
push
adc
loope
dec
jne
mov
cmp
inc
mov
rcl
push
mov
(bad)
adc
shr
fild
ret
dec
jbe
xor
fdivr
lahf
jb
inc
rcl
jecxz
inc
wbinvd
arpl
jmp
add
jb
pop
out
imul
sub
dec
push
jmp
in
add
adc
mov
leave
cmp
outs
xor
pop
sub
bound
cmp
test
jecxz
in
jge
loop
sub
push
sub
inc
and
hlt
cmps
idiv
adc
cmp
jmp
clc
mov
inc
pushf
jl
push
cmps
ret
clc
cmc
dec
and
rol
mov
cli
out
xchg
xor
mov
popf
call
mov
fdivp
repnz
pop
ret
jne
cmps
imul
jne
test
cdq
mov
pop
or
mov
inc
call
fidivr
push
xchg
aad
push
dec
inc
add
iret
into
jg
and
ss
aam
cwde
ret
into
push
int
in
ret
call
mov
xor
pop
cmc
out
ins
inc
fadd
or
enter
mov
mov
sbb
mov
xchg
call
adc
aam
pop
xlat
sub
ja
fnstsw
pop
sub
stos
es
cmp
mov
jp
aas
outs
xor
jle
icebp
mov
pop
les
je
ror
cmp
in
mov
mov
sub
aas
xchg
jnp
mov
push
pusha
inc
fiadd
pop
add
shr
lahf
sbb
and
sti
add
jmp
sub
aad
stc
jnp
dec
cmps
mov
pop
cli
je
iret
mov
sti
fbstp
sbb
movs
or
adc
push
xchg
loop
pop
and
and
xchg
push
shr
lock
mov
movs
in
sbb
(bad)
jmp
fwait
adc
cmp
push
push
sbb
jo
clc
pop
inc
jo
aaa
les
pop
add
xlat
test
shl
cmp
inc
ins
out
in
jl
scas
call
inc
cmp
push
out
out
stos
rcr
daa
outs
ds
cmp
add
cmps
fld
sbb
sbb
call
sbb
scas
(bad)
pop
aaa
xchg
push
jmp
loop
push
test
(bad)
jae
fsub
ins
jne
fsub
ds
popa
inc
mov
inc
icebp
cmps
add
jo
add
jmp
imul
and
adc
cwde
imul
loop
mov
inc
jb
fs
mov
arpl
pop
mov
cmps
sub
adc
add
jp
mov
clc
add
cmp
mov
ds
and
mov
mov
fstp
sub
jae
(bad)
retf
sub
loop
idiv
pop
adc
add
mov
test
push
cmc
int
mov
push
cmp
out
outs
(bad)
sti
mov
dec
pop
push
and
sti
mov
mov
call
sti
fnsave
push
and
cmp
push
xchg
iret
imul
xchg
in
adc
sbb
test
shl
fcom
xchg
cmp
pop
inc
mov
imul
adc
mov
cdq
ror
or
push
in
bound
retf
mov
fmul
sub
fmulp
rcr
lods
sub
out
mov
push
mov
ffreep
rol
and
cmp
xor
clc
xor
ss
enter
hlt
push
nop
or
xor
popa
jno
fcom
push
jg
sbb
adc
je
xor
sbb
sahf
cmp
cmp
add
loop
push
or
dec
cld
test
lahf
mov
inc
dec
cmps
add
pusha
aam
loopne
pop
prefetchw
or
lods
fwait
enter
sub
loop
out
sbb
jmp
std
pop
out
int
(bad)
mov
push
adc
jns
or
je
outs
stos
rcr
add
mov
mov
xor
fisttp
inc
jmp
ret
ret
ja
in
retf
fstp
dec
mov
cmp
jne
lods
out
push
mov
or
push
xchg
ins
add
jmp
sbb
mov
or
inc
fild
fistp
cmp
inc
inc
sub
pusha
push
xchg
push
call
in
add
ja
test
mov
push
push
sti
or
pop
sub
rcl
fst
xchg
add
fisttp
push
inc
daa
out
cmp
add
call
sahf
lds
inc
stc
push
movs
mov
fwait
or
push
sar
ins
mov
popf
add
cmp
pop
sub
bound
out
pop
repnz
ds
jp
loope
ss
(bad)
imul
or
sub
xor
retf
test
fisubr
mov
ret
ds
xchg
adc
or
(bad)
sub
xor
js
xor
sbb
inc
movs
add
fistp
dec
lds
cmp
(bad)
jecxz
sub
jbe
mov
retf
and
ins
xor
adc
imul
daa
inc
and
mov
(bad)
mov
bound
jo
call
js
es
stos
xchg
cmc
jl
rcr
add
dec
aas
mov
arpl
sub
cmp
fidivr
cmp
mov
jbe
out
dec
xor
or
pusha
xor
out
repz
aas
adc
mov
pop
pop
mov
mov
adc
push
cmp
adc
mov
jbe
push
lods
les
sbb
in
outs
mov
into
xor
or
jnp
push
cmp
(bad)
pop
lods
push
mov
fiadd
or
cmp
loop
cmp
mov
cmp
bound
stos
cmc
(bad)
out
push
push
daa
push
mov
adc
xor
leave
scas
and
int3
cdq
aaa
je
test
jns
imul
sbb
sbb
stc
stos
adc
imul
dec
jge
adc
xor
leave
dec
retf
cmp
sub
aad
shr
sbb
idiv
cmp
sbb
lds
addr16
xchg
sbb
inc
lock
enter
mov
scas
popf
mov
xor
lods
jno
in
(bad)
xchg
(bad)
rol
lahf
dec
inc
into
dec
lods
mov
stos
jle
mov
cmp
movs
or
mov
xor
mul
jmp
jmp
ins
and
jae
sub
dec
jb
push
mov
loopne
cmps
xchg
lahf
dec
pushf
mov
inc
(bad)
jno
xchg
inc
jne
jecxz
xchg
nop
dec
div
push
push
mov
or
out
jmp
and
(bad)
bnd
pop
sbb
rcr
jns
jmp
iret
test
mov
xchg
xchg
out
into
fwait
enter
daa
hlt
xlat
scas
jmp
retf
das
jmp
dec
test
mov
and
in
and
push
scas
lods
or
imul
fs
stc
rol
arpl
lods
inc
idiv
cli
jae
pop
rcl
loope
aad
into
(bad)
cmp
pusha
cmps
dec
stos
add
adc
or
loopne
fst
jmp
pop
shl
sbb
aaa
cmp
sub
sbb
loopne
dec
sbb
sub
lahf
add
adc
test
add
iret
xchg
cmp
xlat
(bad)
enter
cmp
scas
mov
jne
jmp
ret
mov
push
fsubr
jmp
rcr
add
xchg
(bad)
ins
in
arpl
mov
shr
shl
sete
in
and
stos
ds
fadd
fistp
shr
(bad)
iret
int
sbb
out
inc
arpl
dec
inc
enter
pop
scas
pop
push
mov
jmp
(bad)
leave
mov
sbb
mov
sub
mov
fwait
push
jp
jmp
add
(bad)
in
push
movs
mov
push
jl
retf
mov
dec
fild
mov
or
sub
std
ja
and
ret
sbb
rol
retf
lods
in
push
cmp
sbb
add
lods
fld
pushf
mov
push
sbb
jbe
sbb
ins
cs
or
xchg
pop
aad
ret
dec
xor
mov
sub
push
xor
and
add
aaa
rol
mov
mov
out
ret
leave
xor
adc
and
jle
in
mov
sbb
jbe
xor
cmps
xchg
pushf
pop
iret
add
lods
out
adc
(bad)
out
mov
cdq
daa
push
es
mov
test
add
jp
je
nop
dec
repz
arpl
xchg
pop
xlat
push
dec
popa
dec
xor
dec
outs
ds
dec
cmps
push
loop
and
push
in
mov
push
enter
and
adc
das
push
aas
sbb
in
inc
jmp
popf
sbb
(bad)
dec
jmp
retf
or
push
jecxz
das
and
sbb
xor
pop
test
stc
cwde
and
xchg
ror
aad
sahf
scas
inc
mov
les
pop
je
xor
nop
movs
addr16
push
jno
fisubr
xchg
mov
je
test
cmc
mov
cmps
int3
scas
lds
jmp
xlat
shl
xor
fnstcw
mov
jae
imul
jle
pop
or
mov
in
mov
mov
mov
addr16
mov
mov
ins
and
cmc
jb
pop
clc
push
shl
in
and
sub
shr
cmp
scas
inc
movs
and
aaa
xor
scas
scas
test
(bad)
pop
add
adc
aam
jmp
repnz
aam
rcr
in
rcr
push
xor
jmp
std
sar
stos
cmp
dec
loope
(bad)
call
ror
cmps
ret
xchg
xor
jmp
pushf
ss
movs
inc
xchg
dec
mov
jno
pop
lar
movs
es
ret
pop
xor
adc
rcl
sahf
movs
cli
mov
push
jb
jns
mov
or
jae
adc
add
jecxz
jmp
mov
outs
in
cld
movs
(bad)
cdq
(bad)
xlat
cmc
lea
add
xchg
stos
cli
jne
call
xchg
cli
dec
xchg
jge
xor
mov
data16
xor
daa
dec
movs
cdq
lock
ins
and
cli
dec
xchg
add
adc
xlat
xchg
ja
cdq
mov
or
or
fiadd
xor
dec
test
call
daa
jge
mov
aaa
or
push
xchg
push
frstor
pushf
pop
push
xlat
sbb
ins
mov
pop
push
mul
fidivr
xchg
jle
loop
imul
ds
xor
test
adc
retf
loope
cwde
(bad)
(bad)
cmps
or
pop
jnp
xor
xor
(bad)
neg
pushf
fld
retf
loope
out
into
pop
rcr
sbb
scas
mov
xor
scas
test
loope
push
repz
into
mov
(bad)
in
cli
push
ins
aad
jb
mov
lods
mov
adc
mov
xchg
mov
pop
sub
sub
test
out
addr16
push
ffreep
bts
inc
and
dec
mov
jne
dec
add
jne
xchg
sar
pop
repnz
test
movs
mov
sbb
jns
mov
push
(bad)
cs
and
aad
scas
(bad)
jmp
sub
dec
inc
sbb
(bad)
popa
out
mov
lods
jl
call
sar
pop
sar
imul
mov
and
and
into
adc
das
dec
mov
(bad)
push
(bad)
jo
xlat
loope
js
test
xchg
fidivr
mov
cmc
cwde
fisttp
rcl
cli
dec
outs
dec
inc
mov
rol
leave
(bad)
push
movs
retf
pop
out
outs
je
pop
cwde
adc
dec
dec
scas
cli
dec
test
mov
scas
dec
push
(bad)
mov
mov
shl
movs
test
stos
bound
call
out
adc
stc
xchg
xchg
push
popf
sub
call
dec
lahf
imul
fs
outs
jb
rol
fdiv
jle
dec
push
push
add
sbb
or
inc
xchg
mov
lods
dec
and
imul
icebp
pop
clc
adc
out
or
not
push
add
je
adc
sahf
stos
sub
scas
out
mov
sbb
pop
(bad)
xor
dec
mov
cmp
cmp
or
mov
mov
push
xchg
popf
add
sbb
push
and
wbinvd
scas
mov
xchg
bound
aam
hlt
pop
js
pop
cmp
inc
add
jge
imul
bound
std
xchg
add
push
push
imul
imul
out
sub
fcomp
outs
shl
push
movs
sub
fsub
xchg
mov
inc
dec
outs
sbb
jo
xchg
and
jle
test
xchg
cwde
mov
bnd
fstp
shl
jmp
or
mov
(bad)
rcl
call
(bad)
retf
push
cld
pop
sub
aam
cmp
icebp
dec
inc
jl
add
ins
cmp
adc
(bad)
pop
cmp
adc
push
mov
jl
lods
popa
adc
aas
out
lods
fisubr
mov
fisttp
sbb
sti
mov
lods
dec
mov
je
cmps
xor
and
scas
xchg
dec
aaa
jle
iret
dec
pop
ja
and
fdivr
cwde
jecxz
jl
inc
add
test
and
mov
loope
and
sub
out
push
aaa
jmp
cwde
rcl
sbb
out
jb
pop
jmp
pop
scas
jle
ss
test
inc
adc
std
fs
xchg
push
pop
add
sar
daa
mov
int
loop
aad
or
inc
dec
xor
les
cmp
cs
xchg
mov
add
mov
je
or
ss
loopne
sbb
sbb
mov
mov
push
fadd
out
xchg
leave
dec
aad
outs
test
mov
mov
pop
nop
fdivr
mov
adc
aaa
push
(bad)
mov
test
popf
stos
shr
iret
imul
dec
addr16
adc
popf
xor
and
repnz
jb
data16
adc
mov
pusha
cmp
sahf
scas
pusha
adc
push
inc
bound
lods
imul
cmp
mov
inc
add
enter
xor
dec
dec
xor
mov
int
xor
shr
out
inc
xor
fstp
daa
mov
xchg
adc
pop
mov
sbb
pop
push
xor
lock
push
mov
ret
or
xchg
bound
out
adc
xchg
int
pop
lods
test
and
cmp
pop
sbb
ins
outs
pusha
and
je
cmp
jo
scas
in
icebp
es
inc
fstp
out
add
cmp
aaa
push
adc
addr16
cmps
rol
mov
imul
sahf
or
enter
call
mov
pop
mov
repz
js
pop
jbe
in
sbb
fwait
push
int
pop
(bad)
pop
mov
mov
xchg
mov
sub
(bad)
mov
ret
inc
mov
xchg
xchg
mov
pop
cmp
fcomp
mov
call
or
push
aas
push
cmc
add
ins
in
push
shl
fisttp
xchg
mov
push
adc
ror
pop
cmp
int
inc
xor
jge
test
neg
stos
inc
retf
test
fdivr
pop
cmp
pop
mov
lahf
cld
lods
in
sub
and
push
mov
dec
adc
into
sbb
es
popf
mov
adc
call
call
xor
jns
adc
lods
ret
rcl
mov
rcl
add
jo
ss
or
inc
push
fidiv
stos
rcl
xor
retf
pop
cmc
loopne
add
add
dec
inc
pusha
add
mov
ror
push
sbb
pushf
ins
div
arpl
sub
test
mov
lods
pop
(bad)
mov
mov
pusha
jb
dec
and
cmps
loope
sub
mov
pop
jmp
cmp
dec
cs
sti
push
iret
adc
dec
and
lahf
cmp
jbe
in
pop
in
push
xor
inc
add
sub
cld
in
mov
(bad)
pop
cmp
ret
mov
sti
mov
std
and
add
shl
mov
daa
mov
and
sbb
(bad)
mov
jne
enter
mov
call
mov
and
jg
clc
push
mov
mov
popa
faddp
push
je
aaa
sbb
clc
mov
repz
jno
push
jecxz
cmp
mov
pusha
push
cld
mov
cmp
pop
sub
sbb
xchg
icebp
mov
jno
push
daa
aaa
add
cwde
mov
fidiv
mov
fcomp
pop
fimul
pop
loope
inc
ins
das
push
loop
fsub
retf
push
pop
ins
aad
test
and
mov
in
sub
add
sub
loop
dec
adc
jne
sbb
loopne
cmp
and
rol
(bad)
iret
repnz
mov
xchg
std
addr16
inc
mov
and
jo
jnp
popf
ins
mov
lods
push
dec
cmps
xchg
xchg
shl
inc
adc
js
pusha
mov
add
mov
adc
push
xchg
sbb
pop
out
loop
shl
dec
jb
xlat
in
push
test
pop
pop
aad
outs
adc
push
test
xchg
test
leavew
xlat
ror
pop
fwait
into
out
leave
pop
div
fld
jmp
mov
(bad)
push
dec
xchg
inc
ret
pop
pop
loop
fmul
or
lds
in
(bad)
push
(bad)
jne
sub
mov
mov
mov
movs
pop
iret
out
xchg
pop
xchg
jae
and
cmps
mov
not
fldcw
mov
mov
rcl
out
loop
mov
push
sbb
call
test
sbb
add
or
loop
popf
lods
ins
leave
add
rcl
lods
(bad)
stos
mov
cmps
jb
imul
leave
jmp
fisub
lahf
xchg
jl
out
jno
push
xor
xchg
in
test
pop
test
scas
adc
popa
aad
leave
cs
pop
or
add
sti
test
cmp
mov
retf
arpl
data16
into
or
jne
in
mov
mov
int3
lea
add
cwde
les
push
cmp
adc
int
(bad)
cmc
mov
jge
cmp
add
inc
dec
mov
std
ins
int
pop
arpl
loope
sar
inc
xchg
cld
ss
clc
dec
jge
or
dec
sub
cld
add
fwait
xchg
test
mov
popa
repz
mov
pop
outs
mov
scas
(bad)
pushf
xor
retf
aam
jne
in
and
sub
imul
adc
xchg
and
arpl
adc
retf
inc
mov
jmp
sbb
pop
or
pusha
inc
fwait
(bad)
ret
cmp
imul
and
mov
and
inc
inc
imul
or
push
mov
jnp
cmc
and
pop
mov
and
mov
in
es
aaa
push
push
cwde
in
lods
add
retf
aaa
inc
fs
mov
popf
add
dec
add
cmps
cdq
inc
dec
cmp
and
jmp
mov
test
in
or
retf
pop
fidivr
adc
out
aam
test
and
pop
push
pop
lods
or
cmps
lds
arpl
shl
push
cmps
aaa
or
push
mov
dec
sub
aam
out
mov
stc
cs
jmp
dec
das
(bad)
cmp
cld
xchg
sub
jmp
retf
adc
cli
sub
sti
push
mov
xchg
pop
push
jne
fsub
cmps
push
inc
inc
xlat
mov
cmc
fstp
mov
and
mov
inc
push
out
add
in
dec
call
jne
xor
clc
ja
pop
mov
test
lea
les
outs
shl
cmp
xor
ret
push
mov
test
call
test
pop
call
xchg
sti
loop
cmp
push
cmp
sub
sahf
sbb
in
pop
outs
into
sahf
out
fld
xor
push
aam
hlt
scas
nop
push
loopne
test
int
xchg
sbb
fisubr
sbb
and
scas
mov
and
fst
popf
iret
mov
mov
ins
jns
pop
call
sub
sub
mov
cmp
cld
push
adc
imul
sbb
and
cmps
mov
mov
mov
es
cmps
daa
mov
rol
sbb
aam
mov
(bad)
push
std
outs
rcr
sbb
jnp
(bad)
push
mov
cld
lahf
cdq
inc
xor
aas
or
xchg
inc
cmp
fs
sbb
xlat
bound
xor
int
adc
sub
mov
cmp
sub
es
pop
and
mov
sbb
xchg
pop
lahf
add
xchg
push
jecxz
dec
imul
js
test
sbb
clc
sbb
mov
punpcklbw
lods
(bad)
jmp
inc
aam
xor
pop
fwait
js
jne
pushf
fadd
aaa
call
bound
inc
xchg
mov
mov
cmp
out
scas
mov
or
inc
add
sti
scas
cmp
test
stos
pop
xchg
sub
adc
fdivr
ins
in
addr16
mov
or
mov
out
pop
cmps
ret
sbb
inc
jmp
js
jle
outs
or
ja
sbb
or
into
test
adc
mov
or
adc
push
and
jnp
loope
(bad)
imul
push
fisub
les
jns
xchg
(bad)
jns
leave
mov
dec
push
xor
sub
(bad)
jg
std
mov
mov
xchg
es
inc
jg
aaa
(bad)
enter
inc
inc
xrelease
jecxz
or
stos
les
fadd
aaa
pop
dec
or
(bad)
int3
ins
in
adc
jle
popa
dec
sbb
idiv
ret
std
push
scas
mov
retf
jb
push
pop
inc
mov
das
rcl
fldcw
mov
gs
mov
inc
popa
or
ror
stos
add
xor
sti
add
xchg
dec
xchg
iret
(bad)
int3
popa
add
sahf
call
jg
xor
jp
les
dec
aaa
pop
lahf
push
repz
gs
mov
fist
outs
xchg
push
add
(bad)
lds
int3
lock
int3
movs
shl
test
xor
jae
popa
lock
addr16
jle
fidivr
adc
push
icebp
pusha
movs
shr
push
dec
test
push
inc
loope
std
shr
popa
das
test
xchg
sti
pop
loopne
cmps
fimul
(bad)
(bad)
repnz
cwde
test
push
cmp
mov
and
jge
jbe
ret
js
pop
cs
cmps
fwait
outs
gs
or
xchg
int
inc
repz
out
pop
lea
cs
jge
mov
push
xor
mov
sub
cmc
test
dec
outs
or
bound
sar
jnp
sub
jp
inc
cli
pop
cmps
mov
mov
push
mov
lods
rcl
and
pop
retf
(bad)
sar
pusha
mov
push
bound
data16
loope
or
pop
ins
add
add
fwait
mov
mov
ret
fwait
div
fisub
imul
data16
or
inc
and
mov
cwde
mov
movs
cmp
sbb
mov
outs
or
cmps
add
push
sbb
cmps
push
jge
scas
mov
dec
inc
ret
jne
fwait
jecxz
dec
outs
(bad)
dec
jnp
daa
cmp
(bad)
and
dec
and
add
adc
or
enter
ror
jmp
adc
bound
mov
jne
mov
and
xor
es
xor
sub
cdq
pop
js
ds
inc
sub
rol
(bad)
hlt
mov
xchg
aad
fistp
test
or
xor
mov
jns
mov
call
loope
dec
(bad)
in
hlt
inc
out
push
es
loope
jp
scas
rol
mov
test
or
retf
push
sub
pop
imul
fnstenv
xchg
mov
cld
inc
jmp
data16
sub
mov
lods
ins
and
loop
inc
inc
ins
bound
std
inc
jmp
jb
jmp
xchg
(bad)
pop
sbb
mov
inc
scas
inc
jp
nop
in
push
mov
cdq
sbb
sub
cmp
jae
fadd
cli
outs
div
adc
in
fcom
sbb
mov
pop
push
sbb
popf
sbb
cmps
pop
xor
push
out
mov
sbb
adc
pop
ret
adc
int3
mov
xchg
clc
shr
test
aaa
pop
push
fucomp
lods
(bad)
repnz
les
mov
cmp
out
jb
fstp
mov
adc
and
iret
adc
jl
call
xor
xchg
pop
jmp
cmp
stc
pop
cmp
cmp
in
fstp
xchg
(bad)
xchg
pop
mov
popf
push
test
das
inc
pop
xchg
add
std
cmp
sbb
loopne
inc
cmp
sbb
rcr
pop
arpl
sub
lds
and
repz
push
or
cli
xlat
jg
in
lds
mov
aas
nop
lock
pop
sub
aad
sub
lods
imul
es
jne
dec
out
test
mov
daa
cmp
repz
xchg
adc
push
push
mov
and
retf
push
in
push
xchg
add
push
addr16
sub
int
inc
xor
arpl
repnz
and
inc
add
or
pop
outs
xchg
mov
movs
mov
or
sub
es
push
push
cs
or
lock
int
jbe
xor
mov
jb
and
sbb
icebp
dec
addr16
add
daa
cmp
cmp
ficomp
sbb
mov
imul
sub
dec
sub
fdiv
loopne
xchg
cli
push
or
jne
test
sub
adc
arpl
inc
jne
out
fsubr
inc
xchg
fsub
xor
push
sar
ins
dec
hlt
or
push
push
aas
mov
jno
cmp
fimul
mov
mov
loope
cmp
(bad)
retf
test
push
xchg
dec
xor
dec
mov
mov
push
fisub
mov
add
es
fimul
outs
popa
fiadd
or
ret
push
mov
xor
dec
mov
add
push
rcl
out
xchg
(bad)
js
inc
jmp
popa
push
cmps
cli
das
in
fs
add
adc
test
cmp
dec
push
outs
cmp
loopne
movs
or
(bad)
xchg
xor
outs
aas
(bad)
std
ins
mov
ror
pop
dec
(bad)
test
sbb
jp
loop
and
mov
je
das
push
adc
xchg
pop
fsubr
push
cli
jg
mov
pop
out
push
out
sub
mov
mov
int
sti
test
pop
xchg
iret
mov
sbb
jo
rcr
clc
sub
sub
inc
std
and
or
pop
mov
mov
sbb
ficomp
bsf
out
aad
jne
cld
xchg
pusha
dec
fadd
dec
div
leave
mov
cs
inc
mov
addr16
mov
dec
push
stos
cmp
dec
xchg
cwde
add
(bad)
push
mov
and
or
pop
retf
aam
mov
(bad)
or
arpl
cmp
inc
jae
lods
loop
jge
popa
ret
sbb
sbb
nop
iret
or
(bad)
fwait
dec
jl
(bad)
pushf
lahf
fcomp
add
lea
pop
(bad)
xor
loopne
out
mov
mov
pusha
inc
inc
(bad)
inc
push
push
or
xor
jecxz
inc
inc
xchg
(bad)
js
jp
push
(bad)
ins
mov
mov
sbb
dec
mov
pushf
pop
sub
dec
rol
std
adc
ficom
sbb
mov
mov
das
jp
outs
push
cmps
add
push
out
and
js
fstp
leave
imul
imul
cs
inc
retf
aad
mov
pushf
int
dec
sbb
xchg
repz
or
mov
retf
dec
test
inc
pusha
mov
jb
jb
std
push
out
and
push
test
adc
xor
ins
sbb
sub
ins
call
or
lea
add
push
xchg
inc
mov
pushf
pop
das
fsub
rcl
xchg
ja
jle
mov
retf
mov
js
sbb
adc
es
scas
cld
mov
inc
push
std
popa
xchg
sbb
out
cmp
jbe
out
mov
mov
pop
inc
popa
dec
add
ins
adc
and
imul
arpl
dec
mov
in
movs
loop
test
add
popa
mov
mov
fmul
dec
xor
repz
pushw
int
stos
cmp
sbb
push
push
dec
pop
or
xchg
lock
xchg
neg
lods
push
aas
cmp
and
gs
mov
pop
add
cmp
inc
pusha
jle
imul
sbb
mov
xlat
fs
call
cmps
gs
sub
lods
in
fs
mov
dec
jmp
mov
int3
and
jmp
and
mov
cli
xor
fwait
cmp
call
sub
stc
xchg
sub
jmp
xor
jl
in
pushf
jp
sbb
imul
iret
jns
cmp
(bad)
icebp
push
jmp
xor
and
add
add
jbe
mov
add
test
jo
out
pop
(bad)
stos
adc
sahf
sar
add
outs
xor
push
add
jo
es
push
pushf
stos
mov
xor
daa
xchg
xchg
(bad)
aas
xor
adc
stc
adc
cld
test
sahf
shr
int3
(bad)
mov
scas
jns
sub
mov
mov
add
out
lahf
mul
sub
sbb
fmul
daa
or
mov
mov
xor
pop
mov
sahf
dec
mov
xchg
fs
repz
fsub
xor
data16
mov
xlat
jo
dec
mov
out
out
push
cli
call
(bad)
movs
sar
movs
fild
adc
dec
sti
inc
adc
inc
jecxz
push
xor
and
dec
mov
int3
imul
and
push
(bad)
fsubr
addr16
aaa
push
(bad)
into
aam
mov
and
fnsave
test
push
inc
pop
mov
xchg
lock
cli
jmp
mov
test
and
jae
mov
(bad)
imul
rcl
adc
and
pop
jmp
jno
cmps
dec
dec
sti
lea
das
xchg
dec
push
(bad)
sti
in
(bad)
sar
scas
mov
pop
mov
pop
movs
push
call
neg
outs
aad
fdivrp
mov
xchg
jle
adc
int
and
dec
scas
dec
call
fmulp
and
scas
lds
pop
test
rol
popa
imul
ss
out
mov
data16
cmc
inc
add
sar
jmp
inc
pop
(bad)
push
pop
cmp
int
or
cmp
scas
fdivr
xchg
adc
enter
test
and
ficom
pop
cmc
test
adc
adc
loope
adc
pop
gs
fwait
popf
jecxz
rcl
repnz
call
(bad)
fldenv
or
jp
xchg
lods
add
jns
xor
cli
mov
out
inc
push
cmp
fild
sbb
push
adc
mov
or
xchg
mov
bound
fstp
add
std
arpl
xchg
mov
or
outs
movs
jp
je
and
int
jp
sub
movs
push
sub
cmp
or
xlat
ret
aaa
jne
fucomp
sub
lock
push
jle
cli
sub
in
popf
cmps
aad
xor
jp
bound
pop
fadd
mov
ret
cmp
fwait
jg
push
mov
push
mov
push
or
(bad)
jnp
adc
sti
enter
mov
inc
xlat
and
jbe
inc
xchg
int3
daa
jne
repz
retf
xor
stos
jge
push
push
inc
int3
pop
imul
xchg
(bad)
hlt
cmps
mov
imul
sbb
out
in
fucom
cld
test
repnz
fmul
daa
jnp
mov
jns
push
iret
xchg
lea
jno
adc
das
push
pop
int
push
mov
add
pop
dec
retf
arpl
pop
mov
fdiv
pusha
sahf
outs
imul
sbb
out
lods
add
stos
cdq
popf
mov
jbe
pusha
mov
push
push
mov
or
mov
push
sahf
in
cmps
push
mov
rcl
and
lock
call
ins
dec
inc
punpckhwd
add
idiv
mov
cmp
xchg
mov
mov
or
inc
sti
int
add
out
out
jbe
xlat
lea
sahf
xchg
sbb
mov
mov
xor
jne
push
adc
and
int
in
xor
dec
push
fist
das
(bad)
in
pop
cmp
pop
sub
pop
gs
xor
rcl
sti
cdq
push
adc
adc
sub
repz
xchg
icebp
cdq
out
adc
or
ss
mov
xor
out
xor
cmp
fstp
sub
mov
loop
cmp
leave
cmp
xor
xchg
loope
popf
dec
jbe
mov
sbb
(bad)
push
inc
bound
retf
ins
xor
sub
iret
cli
js
sub
mov
push
xor
mov
sbb
xlat
sbb
shr
mov
dec
in
mov
icebp
popa
cmp
lods
inc
leave
pusha
retf
(bad)
push
je
ja
mov
xchg
stos
repnz
inc
pop
or
call
ficom
cmps
cmp
or
jp
pop
ins
and
das
scas
pop
dec
push
push
adc
ret
ret
fidivr
sub
out
push
xchg
adc
dec
ror
and
jmp
cmps
and
leave
mov
xor
repnz
adc
mov
imul
iret
jno
cmp
push
adc
or
bound
sub
pop
ror
pop
jb
repnz
adc
loope
sbb
cmp
scas
inc
cld
mov
aad
call
sub
out
cli
repnz
test
cli
pop
popa
aam
push
mov
push
jmp
mov
jl
scas
cmp
(bad)
loopne
mov
pop
cmp
adc
push
jns
or
test
dec
in
or
xchg
inc
sbb
stos
xchg
inc
jle
bound
fldcw
jno
mov
add
xchg
les
jg
xor
out
lahf
inc
push
add
es
sub
(bad)
jb
not
fld
fdivr
inc
pop
add
or
aam
int
imul
add
sahf
enter
sub
(bad)
mov
int3
xor
pop
pop
sahf
xchg
jecxz
pop
add
out
sub
and
addr16
cwde
int3
mov
mov
add
lock
es
call
out
xor
jo
jp
(bad)
xchg
xor
cwde
push
dec
dec
mov
out
das
leave
icebp
adc
sbb
jge
sub
mov
mov
loop
cmp
dec
dec
xor
adc
out
in
adc
into
push
fwait
xchg
or
jmp
xchg
push
mov
push
rcl
into
pop
mov
xchg
test
dec
or
sbb
pusha
xchg
or
jns
loope
dec
js
sub
test
xchg
cmp
mov
sub
dec
dec
(bad)
arpl
bound
jno
call
xchg
retf
inc
add
xchg
pop
adc
das
lds
scas
jmp
cs
clc
inc
dec
mov
daa
dec
add
mov
les
mov
jmp
xchg
lahf
loopne
adc
push
adc
sbb
cmp
je
inc
cdq
jmp
rol
int3
call
dec
mov
jmp
add
int
mov
test
aam
pop
int
repnz
stos
in
int
mov
loop
fnstsw
dec
cld
inc
xchg
lods
sub
dec
inc
cmc
mov
add
adc
in
pop
repz
lods
push
inc
cmp
arpl
and
lahf
mov
neg
mov
cmp
mov
int3
xchg
sbb
xchg
xchg
xchg
in
das
sub
xchg
dec
lods
add
jns
retf
fs
test
es
(bad)
push
test
or
cmp
inc
jmp
add
sub
mov
sub
push
mov
cmp
adc
mov
hlt
pop
je
fistp
cmp
in
push
xlat
in
out
nop
movs
les
sbb
out
xchg
push
mov
add
mov
push
test
stos
mov
and
scas
ficom
sub
and
jno
jg
adc
jno
ins
jmp
xchg
or
xor
out
jae
mov
sbb
dec
fbld
jg
push
js
shl
stc
test
(bad)
pop
cld
test
je
xchg
adc
and
jbe
aam
mov
xor
arpl
xor
retf
inc
jne
je
or
xchg
fisub
mov
stc
mov
xor
enter
lock
mov
push
scas
dec
mov
stos
sar
imul
aaa
shl
in
cdq
out
into
dec
repnz
jae
add
xor
push
mov
mov
shr
out
push
mov
inc
cmp
shl
jns
add
retf
sti
(bad)
sbb
push
dec
sbb
mov
mov
adc
jb
xchg
pop
push
cmp
ss
dec
stos
stc
shr
movs
fisubr
sbb
pushf
xchg
lahf
push
xor
pop
das
mov
test
push
inc
jo
dec
ins
sbb
mov
dec
jo
nop
jecxz
stos
pop
pop
lods
cdq
and
and
xchg
arpl
push
aas
jns
mov
jno
jae
xchg
aas
cmp
shr
inc
movs
ror
mov
adc
xchg
dec
mov
leave
ret
mov
and
sbb
dec
lea
fdivr
ss
inc
sbb
xor
fsubr
icebp
sbb
div
jne
por
pop
mov
stos
lds
and
stos
jl
fdiv
adc
js
cld
loope
mov
(bad)
sar
dec
cmp
dec
popa
mov
aam
pop
mov
cmc
dec
out
or
push
sbb
cdq
out
(bad)
mov
mov
dec
and
and
popf
or
bound
cdq
popa
pop
outs
inc
icebp
and
mov
les
and
sahf
lds
das
call
pop
dec
nop
cmp
idiv
and
push
psubusb
ins
mov
stc
jp
jmp
aaa
ret
outs
mov
or
leave
pop
sbb
mov
hlt
or
lds
std
loopne
pusha
mov
dec
jmp
add
mov
xor
mov
int3
neg
cmp
iret
mov
jo
and
jle
aam
add
push
sub
dec
xchg
sbb
data16
cmps
sub
fdivrp
xchg
sbb
dec
xchg
fs
xor
stos
pop
cdq
fbstp
(bad)
(bad)
outs
jbe
shl
ficomp
pop
pop
sub
sbb
aas
jle
push
xor
xlat
add
mov
cwde
ror
and
in
jecxz
cmp
cld
jl
lea
pop
loop
in
jle
push
call
or
test
mov
jmp
shl
adc
jmp
jnp
es
enter
jl
addr16
daa
add
xchg
dec
jl
test
add
mov
cmp
(bad)
loopne
mov
sbb
inc
fisttp
or
cmp
sbb
dec
shr
dec
mov
and
jecxz
leave
or
xchg
sub
(bad)
sahf
nop
ins
repnz
pop
out
mov
lods
std
int3
or
pmaxub
push
je
test
dec
test
stos
neg
jo
movups
sbb
outs
popa
dec
pop
adc
adc
adc
xor
scas
int3
sbb
lds
jl
retf
mov
inc
sub
lahf
push
pop
xor
mov
(bad)
cmc
dec
cld
xchg
icebp
lea
and
(bad)
mov
or
sbb
ins
add
xchg
inc
scas
cwde
test
loope
xchg
jle
rol
and
popf
fist
sub
sub
jnp
add
inc
lods
js
stc
fistp
adc
into
out
or
dec
cmp
push
or
xlat
data16
movs
pop
data16
xor
aaa
cld
dec
mov
fs
fs
pushf
or
sub
dec
stos
jns
inc
pop
mov
in
xor
sub
xchg
cmps
inc
fldcw
(bad)
jne
jcxz
or
aaa
icebp
push
inc
adc
xchg
pop
fwait
pop
je
xchg
jge
fwait
pop
jge
ins
out
adc
repz
daa
mov
loope
sub
adc
imul
cmps
xchg
mov
sbb
cmp
call
mov
sbb
std
sbb
mov
cli
sub
jmp
mov
inc
gs
hlt
call
and
cmp
push
stc
xlat
lahf
cmp
imul
fimul
rol
xchg
mov
ss
enter
sub
xor
cli
mov
push
(bad)
retf
cmps
add
sub
sbb
fisttp
mov
or
int3
add
pop
mov
sub
or
dec
pop
sbb
dec
mov
popf
mov
in
lods
push
push
mov
je
cmp
lock
pushf
xor
mov
test
scas
(bad)
cmc
and
ss
aaa
je
or
and
jb
arpl
in
enter
arpl
or
cmp
push
push
mov
neg
mov
call
dec
push
ins
aad
scas
fisttp
popa
pop
mov
out
xchg
shl
mov
shl
xor
sub
fsubr
or
mov
cmp
and
mov
and
(bad)
test
movs
jmp
popa
xchg
rcr
jmp
es
out
xor
jg
fwait
outs
ror
jge
loope
fild
and
sbb
sbb
jl
cmp
stos
mov
inc
retf
outs
or
in
repz
and
push
daa
jmp
or
adc
fnsave
cmp
aad
adc
cmp
sti
movs
in
push
enter
imul
jbe
test
cmps
test
inc
ja
loopne
jge
(bad)
rcr
push
xor
lods
inc
sar
mov
and
leave
(bad)
enter
or
push
mov
fs
inc
(bad)
call
fcom
mov
sbb
gs
xor
idiv
pop
dec
in
and
icebp
fcomi
leave
sub
cdq
dec
push
out
mov
(bad)
pop
les
sub
aas
dec
retf
ins
inc
jae
pop
inc
bswap
inc
shr
and
mov
sbb
retf
jge
mov
loope
cmp
pushf
sub
xchg
stos
inc
push
cmp
loopne
xor
and
push
jl
in
ja
dec
pop
xor
push
(bad)
mov
js
jbe
aaa
jnp
xchg
(bad)
dec
xchg
mov
jb
les
dec
stc
out
fwait
out
jne
push
das
out
pushf
pop
pop
and
jl
sbb
movs
repnz
xchg
fimul
mov
xchg
and
adc
scas
push
cs
mov
add
inc
adc
push
mov
test
adc
iret
jl
jge
mov
push
xchg
mov
push
mov
xchg
fmul
jno
pop
cmp
stos
jg
jle
adc
cs
test
dec
push
xor
retf
pushf
mov
aam
bound
push
jne
adc
add
leave
or
mov
jb
repnz
inc
push
stos
ss
jno
mov
pop
inc
rcl
pop
shl
out
dec
ss
pop
mov
icebp
popf
push
add
fdecstp
nop
outs
jne
jp
pop
movs
ins
call
cmp
jno
adc
int3
cld
outs
aam
push
jb
and
aaa
(bad)
sti
fs
dec
out
rcl
mov
xchg
xor
push
inc
loopne
shr
mov
push
add
sti
push
or
and
mov
push
test
cmp
fdiv
cmps
stos
mov
xor
in
or
sbb
fwait
shl
push
movs
add
cmp
or
(bad)
nop
ins
push
loope
and
cmps
(bad)
xchg
inc
out
pop
movs
rcl
cld
pop
loope
cmp
cmp
int
aaa
mov
jecxz
sahf
push
inc
sub
out
daa
bound
scas
pop
jg
shl
mov
hlt
outs
int
sti
jne
mov
div
pop
dec
sub
dec
pop
push
pop
test
(bad)
mov
mov
in
test
and
out
mov
push
(bad)
mov
or
hlt
mov
mov
mov
sbb
loop
xor
pop
cmp
xchg
mov
dec
add
jnp
inc
jp
(bad)
rol
data16
shl
dec
ss
outs
inc
mov
in
mov
retf
mov
mov
push
loop
cmp
mov
inc
sar
inc
mov
fs
les
or
cwde
je
mov
and
pop
mov
pop
test
jbe
inc
adc
cmp
push
xchg
loopne
test
fdivr
sbb
dec
cmp
shl
dec
xor
std
out
(bad)
ins
push
call
xlat
mov
wbinvd
sbb
and
sub
jmp
rol
in
or
mov
in
sbb
adc
repz
sbb
fstp
(bad)
lods
enter
rcr
dec
ss
xor
add
(bad)
sub
das
test
fld
xor
pushf
add
mov
or
hlt
enter
pcmpeqd
lea
jnp
sti
movs
pop
jnp
adc
sub
jmp
ds
push
push
movs
mov
jo
pop
rol
push
mov
mov
sub
in
lods
or
(bad)
adc
jbe
in
nop
xchg
mov
cmc
stc
sub
push
push
(bad)
fdivr
and
and
xchg
push
sub
int3
inc
xchg
mov
repnz
mov
rcr
cwde
test
nop
neg
(bad)
sbb
sbb
stos
cmp
sbb
xchg
sub
out
leave
out
leave
xor
add
push
(bad)
fs
fcmovu
push
adc
aam
jle
mov
rol
pusha
sbb
leave
jmp
scas
ins
mov
xchg
sub
sahf
call
pop
and
fadd
cmc
jo
lahf
mov
push
and
sub
xor
lods
add
imul
loop
das
pop
gs
xchg
rcl
lea
pop
jle
popa
in
pop
xor
pop
imul
idiv
imul
sahf
cli
add
mov
(bad)
cmc
mov
push
cmp
xchg
pop
daa
jne
jno
sbb
aam
movs
adc
out
call
jbe
push
cli
or
push
adc
dec
sti
and
test
(bad)
call
cli
call
stc
rcl
cmp
push
(bad)
and
jo
jmp
pop
or
push
sub
adc
dec
or
(bad)
nop
mov
pop
add
int3
jl
mov
mov
mov
push
mov
pop
fldlg2
mov
popf
mov
inc
add
popa
push
mov
mov
cmc
aam
daa
sbb
std
xchg
xchg
xor
ja
sbb
or
jb
push
inc
out
(bad)
jg
and
push
xor
xor
in
jnp
ret
inc
sahf
pop
mov
push
popa
aas
test
inc
mov
and
not
mov
xchg
cmp
or
stc
test
push
pop
sbb
mov
mov
in
outs
cmp
mov
mov
push
loopne
shr
sbb
cmp
jmp
sar
jg
xchg
sub
fisub
jno
fidivr
iret
fsubp
xlat
jecxz
adc
mov
rol
pop
push
push
daa
xchg
or
sub
cmp
sbb
mov
mov
lea
or
test
ret
in
adc
cmps
aas
aas
mov
std
mov
out
xchg
mov
sbb
fwait
imul
push
out
sub
fsubr
adc
push
pop
xlat
inc
out
mov
push
add
jmp
outs
xchg
push
dec
mov
jne
lods
fnstenv
retf
nop
ret
adc
movs
push
imul
inc
ins
xchg
cmp
cmp
neg
jle
inc
cmp
test
test
bnd
in
ja
inc
pop
dec
lds
cli
sub
fbstp
pop
shl
push
jne
bnd
(bad)
nop
mov
int3
mov
(bad)
pop
arpl
or
aaa
loope
and
ss
nop
mov
and
jecxz
mov
pusha
inc
aaa
jmp
das
adc
push
dec
aam
mov
dec
(bad)
fld
and
je
cdq
cmps
psrlq
es
or
push
lds
sbb
sub
mov
inc
and
mov
rcr
iret
outs
and
xor
(bad)
xchg
aaa
sar
sbb
cmps
pop
xchg
aam
sbb
test
dec
adc
out
cmp
call
mov
cli
xor
dec
jecxz
and
or
rcl
shr
pop
pop
mov
lock
dec
jl
stc
div
out
fwait
jmp
arpl
sbb
(bad)
imul
mov
pusha
leave
arpl
clc
loope
imul
inc
cmc
sub
mov
adc
jnp
test
mov
add
adc
add
out
mov
push
outs
sahf
stc
xchg
sbb
stos
or
movs
ins
stos
sub
pop
xor
int3
and
and
in
xchg
push
xchg
jl
(bad)
adc
jb
push
sahf
ss
or
push
push
pop
pop
mov
jp
and
pop
dec
xchg
test
out
inc
xchg
xlat
fs
pop
push
mov
out
xchg
lods
mov
mov
mov
push
jp
adc
(bad)
sbb
xor
popf
jle
sahf
aam
mov
movs
push
dec
mov
adc
in
int3
inc
cli
sti
(bad)
and
adc
xor
cwde
ret
and
inc
pop
inc
inc
(bad)
in
mov
mov
test
retf
jmp
sbb
sub
xchg
sbb
not
mov
and
dec
mov
mov
in
aaa
pushf
outs
push
xchg
push
cwde
jne
ror
mov
pop
aas
outs
pop
cmp
mov
out
xchg
iret
dec
push
push
mov
mov
loope
fstp
pusha
call
push
jb
mov
mov
(bad)
movs
xchg
jle
arpl
repz
clc
sub
mov
mov
inc
mov
pop
jns
fsubr
movs
or
xchg
mov
pop
xchg
(bad)
test
faddp
mov
std
xor
(bad)
out
push
in
ds
hlt
push
xlat
xor
rcr
jle
pop
imul
not
and
aam
dec
cmp
clc
cmp
xor
add
test
out
pop
repnz
jle
icebp
push
lock
repnz
loope
or
inc
(bad)
(bad)
jnp
scas
retf
mov
add
sti
push
in
(bad)
lods
pusha
ja
push
push
pusha
jmp
stc
push
ret
push
xchg
jl
cmp
or
cmp
cs
ins
push
sub
into
add
shl
nop
movs
(bad)
dec
sub
div
adc
jmp
or
xor
cmps
scas
inc
push
movs
aaa
shr
jge
mov
xchg
mov
in
add
adc
(bad)
and
fstp
jge
data16
mov
cmps
xor
call
add
add
fldenv
cmc
jne
ror
mov
movs
jbe
test
or
(bad)
fidivr
mul
loop
mov
icebp
push
sub
xor
mov
sbb
mov
leave
mov
mov
jnp
xchg
mov
mov
jo
sbb
pop
scas
mov
add
xor
fs
push
lea
inc
push
bound
push
cld
ficomp
ret
in
jp
push
ror
jnp
in
movs
or
xchg
push
adc
or
and
(bad)
ss
mov
sub
lea
jg
movs
ffreep
aam
test
xor
mov
lds
stos
scas
adc
and
mov
pop
aam
mov
mov
xor
(bad)
fbstp
add
jge
cmp
pop
in
ins
dec
pop
xor
push
jnp
or
ficom
mov
cmp
into
paddusb
je
jle
popf
add
mov
pop
pushf
fld
cmp
sar
fsubr
cld
pop
cmps
ja
lahf
push
pop
scas
scas
adc
sub
ret
adc
jg
push
rol
ss
stc
addr16
push
add
ins
repz
popf
lahf
stc
adc
mov
mov
cs
xchg
or
mov
pop
iret
mov
adc
mov
imul
ficom
sub
add
aaa
aam
js
(bad)
xor
cwde
nop
bound
dec
xor
inc
out
sti
dec
or
inc
mov
xchg
fs
dec
xchg
(bad)
or
loop
rol
or
cmp
pop
aam
push
sub
daa
push
out
add
lea
xchg
lock
ds
jle
sub
pop
mov
push
pop
pop
jns
sub
or
outs
jp
scas
jmp
fdivr
pop
pusha
fadd
popa
mov
mov
jmp
out
pusha
clc
cmps
jmp
dec
in
add
(bad)
mov
retf
dec
jge
jne
pop
pop
call
imul
adc
xlat
stc
xchg
sub
icebp
iret
push
mov
or
jno
xor
es
shl
ins
pop
dec
int3
ds
fs
or
shl
xchg
mov
in
in
lock
dec
gs
frstor
test
out
ins
or
cmp
addr16
mov
lods
jge
call
and
dec
or
adc
cmps
mov
or
dec
mov
xchg
sbb
inc
sbb
sbb
jne
div
(bad)
out
xor
xchg
or
xchg
xchg
mov
mov
add
js
cmc
loop
inc
stc
add
push
ins
pop
out
daa
or
sbb
dec
adc
stos
jle
push
and
lock
lods
out
retf
adc
mov
xchg
inc
push
mov
fucomip
ficom
mov
and
nop
and
inc
xlat
pop
pop
arpl
hlt
pop
mov
gs
cdq
call
adc
sti
mov
push
jecxz
arpl
push
jle
adc
push
and
xlat
adc
jbe
xor
bound
mov
xor
loopne
adc
xchg
cmp
push
mov
mov
(bad)
lea
sti
xlat
jle
idiv
xchg
jnp
dec
jns
retf
jge
outs
int
mov
push
sub
inc
jg
in
cmp
push
and
sub
jge
cmp
das
sbb
mov
pop
fimul
mov
push
pop
add
sbb
ss
daa
cmp
adc
das
or
sub
push
gs
inc
leave
or
xchg
mov
pop
test
stos
cwde
call
add
ja
shr
mov
test
in
mov
(bad)
es
call
mov
add
push
rcr
pop
test
xchg
cmp
cmc
in
fdivr
xor
xchg
fcom
(bad)
pop
lea
pop
enter
ret
jecxz
push
stos
jecxz
push
int3
cmc
in
movlps
sub
out
cmp
js
push
sbb
fisub
es
inc
inc
in
mov
mov
in
nop
xor
jge
mov
cmps
les
retf
inc
scas
mov
jae
push
mov
sub
stos
out
retf
call
inc
push
je
(bad)
pop
mov
jnp
test
mov
sub
cmp
lods
mov
sar
push
out
push
mov
ins
retf
or
add
mov
jns
xlat
sbb
(bad)
add
sbb
das
scas
inc
and
shl
enter
retf
mov
push
movs
xchg
sub
mov
int3
aam
mov
jne
call
stc
mov
jb
lea
ja
or
inc
push
rcl
ret
ins
mov
cwde
lds
call
mov
inc
lds
int
add
retf
dec
push
cmc
and
js
fwait
push
sbb
xchg
push
popa
retf
sbb
cwde
test
shr
push
push
inc
xchg
ins
cmp
test
pop
fdivr
jmp
jns
fbstp
xchg
push
mov
bound
fiadd
popa
xchg
jo
rcl
mov
aam
xchg
or
cmp
jp
cld
add
xor
fwait
pop
push
pop
retf
lds
pushf
mov
jb
ja
les
jne
fsubr
or
jle
nop
inc
xchg
fidiv
sbb
push
nop
out
pop
sbb
movs
push
jno
je
daa
fcom
mov
or
jmp
cld
sahf
sbb
adc
aam
fidivr
das
popf
adc
ins
cmp
shl
aas
xlat
cmps
sahf
test
push
fistp
sbb
ja
or
xchg
inc
mov
nop
popf
push
push
xlat
fdivrp
daa
test
neg
sbb
cs
xor
repz
nop
mov
fldcw
inc
ins
inc
jo
loope
idiv
leave
add
ror
(bad)
fstp
cmp
jo
inc
ret
stos
xchg
lods
push
jno
stos
retf
xchg
rol
repz
xor
(bad)
push
aam
xor
not
popa
jmp
mov
mov
add
(bad)
iret
and
mov
cmp
push
jle
lahf
mov
stos
push
inc
leave
jle
xchg
cmc
pop
shl
xchg
mov
sbb
scas
out
pop
lahf
jno
push
pop
push
lock
dec
cs
ins
int3
inc
arpl
mov
pop
and
ds
adc
xor
lahf
cmp
adc
mov
popa
out
pop
jl
mov
fs
cmp
sub
jmp
fcomp
mov
mov
mov
inc
cwde
ds
sar
popa
and
loop
ss
pop
jno
mov
mov
cdq
mov
lea
push
into
pop
arpl
add
sub
addr16
pop
add
jl
(bad)
cli
mov
ret
cld
fldcw
jbe
ficomp
add
dec
sbb
and
(bad)
test
add
std
cmp
xchg
dec
(bad)
push
popa
sbb
loopne
push
test
aas
gs
mov
js
cli
xchg
mov
call
sub
sbb
add
jnp
mov
pop
or
fsubr
mov
lahf
jnp
inc
out
or
fcompp
pop
xchg
movs
pop
inc
mov
cld
jb
push
and
xchg
cmp
fstp
ficom
pusha
js
mov
push
cli
and
jns
(bad)
pop
xor
movs
ss
ss
bound
or
das
adc
jp
and
jne
pop
cmps
inc
jge
outs
mov
iret
inc
out
pop
test
and
mov
imul
(bad)
dec
pop
aam
aam
mov
push
cmps
aas
rol
dec
nop
mov
cmps
out
inc
sbb
hlt
scas
fcomp
xchg
(bad)
xchg
push
xor
das
cmp
mov
cdq
call
sti
cwde
pushf
sbb
mov
xchg
loop
retf
add
ret
pop
cmp
and
pop
in
sti
rcl
pop
fiadd
mov
and
cmp
mov
cmp
jmp
test
rcl
imul
in
pop
fcomp
js
inc
adc
adc
push
or
adc
jb
sahf
or
mov
dec
mov
xlat
sub
pushf
mov
daa
imul
nop
loop
xchg
addr16
mov
dec
ret
ins
xchg
jl
cmp
(bad)
cmps
mov
aam
mov
lods
xor
jmp
push
pop
mov
inc
push
outs
adc
and
loopne
out
pop
lds
mov
mov
push
sti
imul
mov
popf
lock
lods
aaa
(bad)
xchg
dec
xor
imul
pop
inc
scas
adc
(bad)
dec
mov
push
in
mov
sbb
mov
xchg
push
cmps
(bad)
call
xchg
mov
hlt
sahf
cmp
mov
fs
sti
retf
mov
call
gs
mov
aam
push
push
aad
dec
mov
dec
xor
add
imul
inc
dec
add
fdiv
sub
or
xor
dec
xchg
ja
loope
sahf
push
std
or
sub
mov
or
pushf
loopne
call
jmp
clc
jb
cmps
or
into
inc
sbb
dec
rol
push
mov
cmp
stos
(bad)
ins
cmp
sbb
mov
(bad)
(bad)
fwait
cld
loope
jmp
adc
push
xor
adc
push
retf
mov
imul
outs
jae
pop
imul
stos
pop
mov
test
cli
pop
mov
cmp
stos
xchg
lea
adc
jbe
jns
cmp
inc
shr
mov
adc
sub
fmul
and
loope
loope
dec
clc
mov
mov
shr
lods
es
das
add
inc
sub
xchg
cmp
leave
xchg
in
int3
xchg
mov
cmps
leave
scas
cmc
arpl
cmc
or
ins
pushf
or
mov
(bad)
es
dec
pop
mov
daa
mov
sub
push
mov
push
mov
add
adc
xchg
imul
(bad)
fstp
aas
js
lds
test
inc
pop
mov
das
(bad)
sbb
sbb
cmp
or
stos
pop
inc
out
scas
pop
push
cld
fucom
ja
loop
mov
ins
pusha
jmp
daa
xor
out
pop
outs
les
pusha
push
pop
(bad)
fcmovnbe
(bad)
pop
sub
sub
adc
das
idiv
imul
(bad)
rol
or
inc
jmp
cld
in
aaa
sbb
mov
inc
mov
out
movs
fcomp
dec
jbe
pusha
retf
jmp
loope
ins
push
fs
cmp
cs
mov
jecxz
test
gs
jp
ins
sub
pop
mov
jo
shl
and
cli
xchg
fld
pop
movs
es
bound
and
add
test
xchg
xor
jbe
nop
cs
cmps
push
retf
nop
sbb
pop
add
mov
mov
addr16
sub
push
cli
loopne
je
sbb
inc
out
rol
xor
mov
popf
jno
mov
jns
fwait
test
push
or
sti
lds
loopne
in
shl
movs
sbb
test
in
and
in
fdivr
jl
imul
test
dec
int
jp
pop
mov
jl
in
and
ins
and
pop
mov
cwde
ins
fcom
dec
loope
retf
jnp
or
jl
or
std
(bad)
(bad)
mov
cmp
fild
mov
pop
retf
xchg
aad
in
or
fwait
dec
adc
mov
ret
outs
pushf
(bad)
out
sbb
cmps
mov
aad
inc
loope
mov
jno
add
sti
cmp
jbe
stos
push
retf
cmp
push
mov
pop
sub
popa
mov
inc
scas
fidiv
xor
xchg
mov
mov
xor
lahf
stc
push
lahf
inc
je
sbb
jo
xchg
arpl
scas
loope
sar
add
pop
mov
sub
ins
mov
lods
into
mov
xchg
mov
and
scas
xchg
cld
outs
inc
shr
push
(bad)
xor
jecxz
push
daa
in
or
add
loope
mov
ds
pop
jo
dec
hlt
xchg
scas
test
inc
and
pop
pop
inc
popf
push
int3
xchg
aaa
dec
mov
fucomi
ins
sub
fldenv
js
aaa
(bad)
das
jae
jne
fisttp
hlt
fwait
or
mov
ss
fwait
dec
pop
cmp
mov
fwait
mov
dec
fmul
adc
xor
sbb
loop
jnp
je
pop
inc
in
mov
sub
jns
mov
test
adc
iret
sbb
add
xor
jecxz
jp
pop
ins
call
jg
xchg
jg
fcmovnb
gs
nop
add
les
lock
inc
lock
xor
(bad)
out
push
lods
fwait
std
adc
fsub
push
addr16
loop
push
inc
aas
jle
jb
ja
ror
sub
es
(bad)
mov
imul
and
or
(bad)
dec
or
dec
inc
mov
rcl
hlt
lahf
imul
lahf
xchg
mov
leave
push
sub
mov
ja
call
ds
dec
icebp
retf
cmp
xchg
add
pop
inc
mov
pushf
ficom
popf
int3
push
push
call
mov
sbb
sbb
aaa
std
pop
test
xor
(bad)
std
add
xor
daa
(bad)
test
enter
fdivr
jmp
nop
ins
pop
outs
xor
pop
mov
dec
xchg
sbb
in
jno
and
fs
lock
pushf
call
es
jnp
loope
cli
imul
or
sbb
pop
pop
fnstcw
ja
jp
mov
pop
mov
mov
inc
push
and
pop
inc
cmp
pushf
mov
mov
je
ror
lock
xor
mov
mov
es
mov
push
hlt
push
sbb
jns
(bad)
adc
xchg
add
leave
loope
inc
jb
add
call
cmp
pop
jmp
rcr
xchg
jmp
arpl
xor
mov
adc
jecxz
in
popf
cld
out
push
jne
aad
lock
sbb
add
and
(bad)
or
(bad)
fistp
or
outs
int
daa
xor
(bad)
scas
data16
mov
mov
or
(bad)
jp
xor
and
out
ror
xchg
jge
cld
ficom
lahf
loopne
xchg
jno
sahf
mov
jnp
pop
cli
stc
jnp
clc
push
sub
pop
pop
(bad)
mov
push
push
lods
fdiv
icebp
fsub
jae
inc
mov
je
cwde
movs
in
and
and
inc
lods
jbe
inc
push
nop
xor
xor
mov
adc
addr16
xchg
jbe
mov
bnd
hlt
sbb
and
mov
mov
pop
scas
and
sub
out
xchg
mov
inc
loop
ror
sub
xchg
mov
jecxz
pop
adc
scas
ret
fisub
sub
push
data16
test
js
fsubr
push
popf
sub
mov
idiv
sub
mov
push
cmc
(bad)
retf
or
mov
jecxz
push
xchg
push
outs
push
xor
add
xchg
adc
jnp
es
repnz
jmp
mov
dec
xor
sti
ins
into
add
mov
in
adc
xchg
push
jmp
sbb
dec
pushf
push
push
iret
mov
hlt
inc
adc
dec
jnp
in
or
cdq
mov
jecxz
inc
sub
sar
mov
ds
int3
and
pop
pop
mov
pop
in
jnp
lods
push
xor
dec
jne
out
pop
xchg
xchg
mov
jp
mov
movs
dec
dec
push
nop
sub
xchg
xor
mov
pop
sbb
jecxz
ds
dec
shr
jmp
cmp
jp
cmp
xor
and
sub
and
jmp
inc
repnz
dec
call
leave
enter
(bad)
mov
pushf
xchg
mov
jmp
lahf
xchg
mov
cmps
imul
xchg
inc
and
out
(bad)
push
data16
push
loope
popf
sti
pop
cli
adc
push
sar
sub
call
jmp
dec
add
sar
jmp
add
jge
mov
push
lods
mov
imul
sti
pop
push
cdq
or
sub
jl
(bad)
stc
aas
popf
and
repnz
mov
mov
push
pop
iret
mov
repnz
and
jmp
pusha
mov
aas
cmp
sub
in
adc
imul
shr
inc
in
lock
cli
pop
sbb
adc
sar
sub
add
mov
mov
or
(bad)
lods
lock
push
mov
mov
clc
mov
shl
lahf
psubd
(bad)
dec
hlt
dec
inc
sbb
lods
sbb
out
loope
push
icebp
clc
push
xor
call
sub
ret
bnd
adc
pop
xchg
cdq
imul
fmul
test
xor
mov
push
mov
lock
repz
push
jb
push
sbb
test
sbb
cmp
mov
dec
xor
jns
inc
pop
dec
cmps
or
sub
lahf
push
adc
mov
ret
or
call
in
shr
push
(bad)
fwait
jmp
pop
cwde
out
cld
sar
bnd
aam
pop
leave
xchg
(bad)
xlat
das
out
scas
mov
idiv
push
movs
or
pushf
icebp
pop
leave
ds
cmp
cmps
push
scas
cwde
adc
mov
test
out
daa
jle
ins
or
and
lea
sub
icebp
xlat
add
push
repnz
iret
aam
sub
prefetch
sti
push
pop
loop
jb
and
cmps
adc
add
ins
lock
add
rol
push
leave
sbb
sbb
push
es
adc
push
retf
stos
popa
adc
mov
jno
cli
inc
cmps
(bad)
repz
sub
out
icebp
(bad)
setns
mov
pop
pop
adc
pop
mov
es
aad
mov
scas
aaa
cld
aam
inc
mov
daa
in
cmps
sar
xchg
fst
das
mov
dec
add
popf
ret
imul
in
inc
xchg
mov
pop
add
cmp
stc
add
or
jmp
sub
adc
es
lods
test
sbb
inc
bound
xchg
mov
in
or
sbb
adc
stos
das
fwait
mov
in
jo
out
mov
imul
cmc
pop
cmp
pop
nop
movs
(bad)
outs
push
pop
or
jbe
push
xchg
(bad)
test
arpl
aam
(bad)
pushf
dec
dec
in
jnp
mov
sbb
pop
push
xor
pop
aam
sbb
pop
adc
add
fs
movs
icebp
xchg
es
inc
push
sub
stc
pop
jecxz
xchg
clc
ja
stos
icebp
data16
movs
dec
in
inc
repz
pop
pop
scas
sbb
fs
outs
sub
inc
xor
ret
jae
or
mov
push
(bad)
mov
dec
pop
lods
out
mov
aam
popf
sub
arpl
lahf
repnz
sub
push
and
lea
sbb
pop
(bad)
sub
movs
imul
out
ret
stc
sbb
jnp
outs
or
push
add
mov
sbb
add
xchg
imul
mov
pusha
mov
stos
cmc
stc
stos
cld
xor
sub
cli
adc
rcl
jmp
sub
sub
xor
xchg
cmp
jno
mov
mov
and
sub
scas
ins
mov
xchg
clc
xchg
dec
mov
repz
dec
mov
jbe
sbb
mov
jecxz
(bad)
adc
out
mov
ins
int
inc
jo
cmp
in
imul
dec
inc
dec
push
int3
jo
add
mov
add
mov
call
xor
add
fild
xor
pop
scas
cdq
xchg
pusha
jge
ins
dec
mov
mov
sahf
and
and
xor
imul
fdivp
or
mul
jp
lds
jnp
fisub
sbb
out
xchg
or
xchg
mov
lea
scas
jae
(bad)
call
push
ror
xor
bound
xchg
cmp
rol
mov
xor
out
ret
push
ret
lods
mov
shl
(bad)
add
arpl
sbb
jns
cmc
mov
xchg
pop
push
aam
test
xor
ret
call
retf
mov
call
test
mov
lods
adc
mov
pushf
shl
fadd
loope
mov
(bad)
mov
jl
sar
push
jl
adc
sahf
aam
aas
and
xchg
ins
and
pop
pushf
and
cli
lea
mov
cmps
cmp
dec
movs
jge
xor
push
mov
inc
add
sub
movs
add
shl
pop
fwait
jns
jno
cdq
inc
mov
pop
jbe
adc
stc
(bad)
cmp
out
jae
std
outs
sbb
push
xchg
dec
repz
sbb
mov
into
into
jl
or
cmp
adc
sub
sub
pop
aaa
pop
aad
loopne
sub
pop
dec
outs
sbb
ins
and
mov
mov
nop
xchg
mov
sbb
cmp
lods
jg
fdivr
jns
cmc
ret
aam
mov
jns
cli
or
stos
jb
cmp
call
push
mov
push
xchg
lds
adc
enter
idiv
lods
scas
lock
lock
inc
sbb
icebp
fisub
mov
sub
cmp
movs
ds
icebp
mov
popa
cmp
jge
push
outs
cmp
scas
bound
cld
cmps
push
mov
inc
iret
add
lods
mov
sbb
test
adc
mov
lds
test
fmul
in
mov
fist
mov
sub
pop
xchg
cmp
sub
push
into
ins
test
ret
shl
xchg
add
sub
movs
ja
ret
add
cmp
mov
imul
xor
pop
inc
add
leave
jle
out
pop
push
xchg
bnd
pusha
dec
shl
push
sbb
xor
pop
out
(bad)
je
pop
pop
mov
xor
pop
arpl
cmp
(bad)
cmp
xchg
test
push
jnp
xor
popf
pop
sbb
or
fcomp
call
sbb
ds
pop
(bad)
std
(bad)
je
(bad)
mov
in
xchg
pop
pop
cs
jbe
sbb
(bad)
(bad)
out
xor
cmp
(bad)
and
or
dec
jp
iret
mov
outs
mov
xor
dec
adc
pushw
pop
xchg
ins
push
inc
in
cmp
jp
inc
mov
mul
data16
or
stos
mov
sub
dec
xchg
cld
dec
popf
dec
dec
or
cmp
pop
mov
push
retf
mov
jb
xor
lock
loop
repnz
test
test
sub
test
test
pop
(bad)
pop
jb
sub
cmp
bound
cdq
dec
and
push
dec
cmp
mov
add
ja
mov
into
pop
mov
enter
or
sub
aam
push
js
test
test
sahf
(bad)
fwait
xor
mov
push
lock
js
ret
ret
(bad)
sbb
push
mov
cmp
aas
enter
mov
adc
sbb
pop
cmp
int3
jb
enter
or
adc
jl
cmp
nop
jb
lods
mov
fild
test
jmp
push
arpl
movs
pop
push
xchg
jmp
inc
xchg
mov
push
lods
and
dec
pushf
jae
dec
push
xor
inc
xchg
sub
js
push
mov
aam
pop
(bad)
mov
fwait
rol
jl
xchg
and
xchg
inc
push
xor
mov
jb
retf
pop
arpl
in
fisttp
push
dec
dec
pop
pop
and
xchg
inc
mov
sbb
std
retf
popa
cmp
jb
mov
shl
jg
add
jmp
and
lock
jo
cmp
mov
push
mov
cmp
and
popf
test
lds
or
(bad)
fdiv
test
and
pop
aaa
add
test
adc
and
movs
cwde
loopne
jne
pshufw
fs
ret
cmp
xor
xchg
xor
adc
jnp
cmps
ins
inc
les
in
outs
or
int
fwait
xchg
jne
pop
push
pop
ficomp
imul
and
pop
fwait
mov
pop
std
mov
or
outs
cmc
push
jns
and
(bad)
push
fstp
sahf
dec
push
fcmovbe
repz
push
sub
pop
xchg
fisttp
cld
jle
or
sbb
inc
aad
call
repnz
mov
cmps
push
mov
or
dec
mov
adc
mov
aaa
dec
xchg
push
out
sub
enter
int3
pusha
aad
int
out
fsubr
pop
and
mov
test
(bad)
and
ins
xor
lea
mov
(bad)
xlat
sbb
(bad)
jmp
(bad)
sbb
and
pop
mov
push
xor
dec
or
pushf
sbb
sbb
aas
shl
imul
inc
rcl
rcl
dec
fnstenv
xor
cdq
(bad)
mov
push
mov
imul
add
adc
push
jno
fnsave
xchg
jae
bound
popa
jg
pop
dec
or
jmp
imul
dec
cmp
outs
fnstcw
jg
pop
(bad)
adc
(bad)
pushf
mov
or
pusha
idiv
sbb
lds
sub
xchg
mov
movzx
add
mov
inc
retf
add
mov
xor
lods
adc
enter
ret
es
jge
pop
sub
add
retf
mov
loop
in
pop
out
mov
jbe
xchg
pop
mov
jae
sub
stc
cmp
fisub
cmps
pop
test
ror
sbb
cmova
mov
mov
fsub
stos
das
aad
dec
xchg
cmc
jle
mov
mov
sub
sub
(bad)
ja
repz
test
popa
ret
push
mov
push
mov
idiv
xchg
rcr
stos
jl
je
cmp
mov
data16
jb
gs
imul
lods
test
pop
push
rcl
sahf
mov
pop
popf
test
jg
inc
das
mov
mov
jle
cmp
cmps
or
scas
adc
fild
sbb
jo
das
jg
xchg
or
or
daa
xor
or
push
ror
sbb
sar
fwait
bound
aaa
gs
stos
jmp
jmp
mov
sub
iret
or
push
adc
mov
ret
jb
retf
cmp
retf
gs
xor
or
sbb
(bad)
out
xchg
mov
cdq
in
inc
cdq
xchg
scas
mov
inc
clc
(bad)
aaa
adc
and
into
jmp
je
dec
xchg
push
dec
iret
je
shl
and
addr16
push
add
retf
shr
int3
lahf
loope
neg
and
cmp
sar
out
jne
adc
imul
stos
lds
adc
lods
sub
loopne
push
cmp
sub
mov
not
add
hlt
inc
add
xchg
fistp
int3
pop
xor
sti
jnp
inc
jle
xchg
fisub
push
pop
mov
retf
mov
test
mov
in
inc
sub
addr16
(bad)
mov
nop
xlat
aas
in
inc
mov
retf
mov
sub
jmp
repz
jae
xchg
push
cmp
push
retf
scas
repz
mov
jle
jmp
pop
test
call
fisubr
fsub
and
jmp
xor
test
pop
clc
pop
dec
cmp
ret
xor
push
jge
jmp
in
or
and
mov
sub
(bad)
iret
aad
enter
ds
xchg
cmp
pusha
cmp
aad
xor
lods
out
mov
pop
jbe
in
mov
cs
cmp
mov
xchg
mov
movs
(bad)
adc
jg
and
(bad)
daa
dec
call
ins
mov
mov
push
and
mov
mov
aas
xchg
mov
or
arpl
mov
ss
test
in
popa
rol
jmp
xchg
dec
adc
inc
in
out
jo
xchg
cmps
sub
fst
mov
pop
push
(bad)
jae
sub
ret
inc
in
and
sbb
xor
pop
movs
fist
sar
cmp
mov
stc
call
fiadd
fs
test
mov
leave
cmp
sti
je
adc
inc
fdiv
jno
outs
adc
cmp
sbb
pop
retf
repnz
into
addr16
sbb
sahf
lods
add
into
or
push
inc
sbb
(bad)
mov
(bad)
add
inc
inc
jae
xor
mov
fnstenv
inc
ror
and
stos
jns
loopne
sbb
imul
sbb
mov
mov
inc
clc
pop
inc
in
and
(bad)
fcom
sbb
aas
or
cdq
xor
and
xor
icebp
jge
sbb
icebp
mov
dec
cmps
imul
retf
xchg
or
mov
push
mov
test
pop
sub
mov
mov
fpatan
cmp
mov
jmp
(bad)
xchg
jge
adc
imul
add
push
add
dec
or
ffree
push
jle
pcmpgtw
cs
pop
mov
jp
int3
rol
sub
(bad)
out
xchg
icebp
jno
push
mov
mov
and
sub
shl
dec
scas
cmp
jns
cmp
pusha
rcr
fwait
xchg
repz
clc
cmp
mov
xor
stc
bnd
push
out
push
pop
scas
xor
data16
cmps
push
inc
mov
les
dec
pop
inc
loope
inc
ins
lods
outs
push
cmp
push
sbb
loope
call
mov
popa
pusha
pop
shl
fidiv
aas
in
cld
jnp
mov
in
(bad)
(bad)
cmp
pop
retf
out
fisttp
inc
daa
sti
test
aad
mov
data16
popa
jne
jp
popf
sahf
inc
mov
(bad)
jmp
cmp
outs
aaa
add
pop
mov
sahf
inc
loop
scas
mov
scas
mov
dec
repnz
bound
push
fsub
pusha
or
sbb
leave
fwait
popa
xor
mov
stc
and
jmp
daa
and
pop
push
inc
xor
call
lea
repnz
add
adc
jp
enter
mov
push
frstor
icebp
add
outs
mov
stos
mov
xchg
add
shl
cmp
jge
jmp
jecxz
rcl
daa
aaa
(bad)
push
stos
lahf
inc
cdq
lock
xchg
mov
ficom
inc
dec
(bad)
lods
and
dec
iret
jnp
cdq
mov
std
mov
jb
dec
fdivr
cmps
cmps
mov
sub
mov
push
out
cmp
dec
cmp
sar
scas
sbb
scas
out
jno
or
add
push
add
(bad)
xchg
retf
sbb
ret
ins
shr
jae
sub
lods
push
or
pop
xor
adc
and
popf
rcr
xchg
mov
xor
div
dec
sbb
mov
aad
addr16
cmc
ins
mov
mov
clc
ins
icebp
cmp
cmp
xor
xchg
push
adc
jmp
push
out
mov
frstor
push
movs
xchg
jbe
aaa
stos
xchg
lahf
or
cdq
inc
and
mov
xlat
movs
and
(bad)
mov
push
xor
lds
mov
fs
out
jecxz
dec
je
aam
out
xchg
mov
sub
mov
mov
test
adc
and
fs
and
in
jne
or
push
ret
mov
fisubr
(bad)
fsubr
adc
cwde
mov
cmps
cmps
or
test
repnz
rol
cmp
ds
sbb
cmps
stc
mov
add
cmps
xchg
cmc
mov
test
mov
(bad)
leave
(bad)
lahf
(bad)
xchg
push
clc
and
ret
sub
adc
retf
xchg
dec
fcomi
sbb
pop
xlat
retf
sbb
or
add
push
inc
cmp
mov
outs
sbb
cmp
aas
hlt
mov
sub
xchg
and
xchg
test
scas
and
jp
xor
jmp
add
adc
ret
out
jge
mov
pop
js
aad
mov
faddp
cli
fadd
pop
xor
push
mov
fldcw
pop
push
inc
or
dec
fsub
and
fistp
not
stos
xchg
shr
push
icebp
ret
sahf
or
jne
lds
jmp
sar
rol
inc
sub
retf
ja
xchg
pop
sub
cwde
lds
and
das
jbe
jge
bound
and
fs
bound
shr
jle
outs
mov
mov
mov
or
sbb
push
es
cmp
(bad)
bound
xor
or
mov
out
pop
pop
cmp
or
cmp
jns
or
pop
or
adc
rcr
or
iret
fwait
call
scas
stos
jmp
pop
xchg
pushf
xor
push
adc
popa
pop
push
add
pop
inc
cli
xchg
inc
div
popf
push
or
clc
dec
mov
ss
lock
push
ss
mov
pop
dec
adc
inc
and
outs
mov
out
(bad)
clc
pop
jb
push
mov
setne
ror
add
cs
pusha
sub
add
xor
scas
or
mov
jg
outs
inc
lds
movs
fadd
in
push
std
enter
and
imul
les
lock
in
jge
cmps
cmp
adc
mov
add
dec
jmp
sub
neg
repnz
gs
sbb
jne
fs
je
lahf
push
jmp
movs
les
call
sbb
out
adc
sbb
jb
je
inc
jbe
dec
retf
retf
loopne
sub
je
js
ja
int
imul
cmps
scas
sub
xchg
adc
push
out
js
mov
jge
push
and
inc
and
loopne
sub
or
pushf
nop
jbe
inc
ja
fs
sahf
push
movs
or
les
and
daa
cld
adc
rol
pop
out
retf
inc
out
cmps
int3
or
mov
lock
(bad)
jbe
pop
xor
movs
or
dec
inc
mov
push
fisubr
xor
scas
shr
cmp
fdivr
cmps
mov
test
inc
sahf
rcr
dec
and
cmp
fbstp
cld
cmps
outs
cmc
(bad)
fcomp
imul
mov
lds
sbb
sbb
dec
dec
(bad)
fidiv
and
jo
cdq
(bad)
jecxz
lods
push
jns
mov
rcl
dec
inc
mov
pop
xchg
inc
mov
dec
enter
mov
fidivr
adc
dec
loope
or
outs
or
lahf
ins
retf
inc
fdiv
jp
dec
ret
lock
xchg
push
mov
out
dec
sahf
or
hlt
mov
mov
fcos
jmp
mov
cmps
fstp
test
push
(bad)
addr16
cwde
pop
mov
stos
fs
jb
cmp
pop
mov
cli
and
mov
mov
fwait
popf
add
and
shr
xchg
ins
adc
aaa
inc
mov
or
inc
cmps
cmovo
sub
(bad)
(bad)
(bad)
aam
jp
jne
push
bound
enter
add
movs
mov
jmp
push
pop
fbstp
aam
clc
xchg
mov
shl
mov
push
mov
xor
xchg
dec
scas
xor
inc
mov
cmc
pusha
and
mov
imul
(bad)
push
sub
xor
sbb
inc
push
ins
or
test
push
shr
push
aam
and
add
rol
aam
in
add
movs
and
test
push
jge
sub
fild
push
iret
lock
(bad)
lock
hlt
mov
neg
cmp
add
push
add
loope
mov
mov
cmc
(bad)
push
fstp
mov
xor
xor
fistp
adc
ficomp
sub
push
and
inc
movs
xor
dec
pusha
or
pop
fiadd
jb
js
imul
jnp
rcr
push
les
cmp
mov
inc
or
leave
push
rcr
xor
aaa
dec
inc
mov
or
mov
mov
lahf
sub
fist
scas
arpl
jg
push
int3
inc
mov
stos
nop
aaa
sub
xlat
lock
inc
inc
mov
lahf
jmp
cmp
cdq
dec
movs
scas
xor
sbb
shl
(bad)
jns
bound
mov
cdq
retf
sti
mov
dec
sub
sahf
pop
sbb
pop
or
addr16
mov
in
inc
and
outs
jns
pop
clc
xor
push
or
xor
fstp
mov
xchg
(bad)
out
add
test
pop
xchg
call
adc
ret
repnz
jp
ss
movs
pop
cmp
and
jne
mov
es
dec
ret
in
cmc
jge
adc
lahf
mov
iret
mov
push
xchg
in
fadd
test
cmp
leave
loop
pop
adc
out
or
pop
shl
icebp
jbe
push
fs
ret
enter
mov
sbb
inc
(bad)
sahf
leave
pop
sar
inc
dec
loop
adc
int3
pop
aad
(bad)
fdivr
sub
xchg
shl
(bad)
outs
inc
jae
pusha
into
lods
mov
mov
loope
ja
outs
cld
pop
outs
ret
sbb
sar
jp
sub
inc
add
push
call
adc
arpl
ss
ins
xchg
inc
imul
jb
loop
stc
ins
into
jp
mov
es
or
inc
shl
add
push
or
add
or
sub
or
dec
xlat
mov
scas
clc
loop
fcomp
jae
stc
hlt
mov
(bad)
out
mov
push
fs
shr
mov
xlat
fwait
shl
and
jae
jnp
or
test
jno
outs
mov
mov
sub
xor
mov
das
mov
fcomi
jl
lods
push
sti
add
mov
pop
mov
imul
out
cmps
mov
or
js
call
xor
sbb
test
movs
mov
cmp
adc
sub
add
jl
test
call
jne
jecxz
iret
jnp
push
sbb
and
arpl
adc
rcl
xchg
outs
pop
dec
dec
shr
mov
outs
(bad)
mov
fidiv
inc
cdq
dec
inc
mov
mov
dec
mov
sahf
adc
pop
sar
jns
lds
mov
leave
or
int3
ret
or
lahf
les
mov
lds
imul
sub
nop
lods
mov
jns
out
outs
mov
outs
jle
and
adc
rcr
inc
stc
lds
xchg
(bad)
xor
pop
jno
imul
mov
add
cmps
stc
mov
repz
mov
mov
pop
test
pop
inc
add
inc
push
aas
out
aam
daa
push
ss
adc
daa
shr
mov
ds
xchg
cs
sub
mov
jg
test
js
or
mov
dec
ret
adc
or
jae
cmp
lea
(bad)
shl
arpl
push
loop
lahf
or
std
pandn
ds
fs
pop
mov
inc
aam
jmp
xlat
xor
xchg
jmp
nop
adc
cs
pop
rcr
jge
aas
int3
test
push
pop
lock
or
das
xor
or
int
xchg
mov
adc
cmp
xlat
cmp
cli
loopne
hlt
je
leave
retf
rol
ror
fwait
push
and
sub
xchg
pop
(bad)
ins
mov
ret
stc
(bad)
cmp
xor
pop
nop
pop
pop
outs
cld
xchg
cdq
pop
data16
add
iret
ficomp
jge
jmp
sub
fcomp
mov
sti
jge
rcl
jl
call
xor
imul
adc
sar
pop
in
aas
add
cmp
or
push
pop
in
neg
fwait
sub
in
mov
ret
xchg
ins
scas
or
js
xlat
stos
lea
xor
mov
dec
push
push
nop
dec
cmps
xchg
xor
add
retf
jns
adc
int3
add
mov
ins
dec
call
sbb
push
cli
mov
push
sub
lock
ret
fild
xchg
dec
mov
mov
stos
aaa
or
inc
mov
icebp
cmp
popf
inc
out
sbb
pushf
mov
adc
push
mov
sar
iret
mov
js
(bad)
dec
(bad)
or
pop
push
out
sub
push
clc
cmp
adc
retf
retf
xlat
pop
loopne
hlt
ins
call
ficom
jb
repz
mov
cmc
lds
push
aad
test
fs
rcr
data16
rcr
leave
sbb
mov
sbb
fistp
into
pop
push
fs
dec
adc
mov
fiadd
xchg
adc
mov
cs
sbb
xchg
pop
jle
add
leave
adc
sub
es
retf
jl
add
ret
call
int3
add
mov
pop
pop
(bad)
jecxz
enter
scas
int3
mov
sub
loopne
ret
mov
aas
mov
ins
inc
mov
cdq
cdq
das
hlt
test
(bad)
je
ret
add
jo
shl
out
add
(bad)
jnp
push
movs
push
jge
add
push
mov
fcom
int
retf
fcmovu
sub
mov
dec
push
(bad)
sbb
sahf
ficomp
cmc
jmp
ret
ja
out
sar
adc
xor
xchg
jge
xchg
test
mov
push
pop
mov
inc
jns
or
or
es
out
into
leave
and
imul
dec
movs
and
add
sbb
cli
jl
dec
fcmovnu
cli
xchg
xchg
jg
sahf
adc
mov
xor
scas
inc
cwde
repnz
mov
jecxz
ret
mov
cmp
into
push
adc
je
mov
inc
push
mov
adc
jmp
std
dec
xor
sbb
or
lahf
or
cmps
adc
shl
cmp
je
sub
and
ins
push
cld
sbb
mov
mov
push
mov
dec
test
jge
sub
xor
xor
push
cmp
inc
mov
mov
pop
mov
stos
push
iret
iret
add
xchg
or
cdq
jae
sub
sbb
adc
mov
pop
lds
adc
out
mov
iret
and
mov
fistp
aas
or
jecxz
scas
das
cmp
xlat
out
mov
mov
cmp
cmp
es
(bad)
icebp
sbb
retf
jmp
push
cmp
and
adc
mov
movs
mov
push
mov
daa
and
xchg
fwait
dec
cmp
sbb
loop
push
cld
sub
ins
sbb
mov
shr
jp
stos
dec
dec
call
xor
in
ds
add
lods
push
hlt
(bad)
es
push
stc
aas
cdq
in
xchg
in
sub
in
or
enter
cdq
add
jnp
push
(bad)
pop
clc
aas
xchg
outs
test
mov
inc
or
cmp
sub
es
iret
sahf
(bad)
out
call
daa
mov
call
(bad)
jns
loope
mov
fst
or
mov
mov
mov
jno
aam
or
sar
fs
push
out
and
loop
and
(bad)
fmul
clc
pusha
ret
mov
in
pop
inc
mov
das
mov
xchg
sbb
test
in
scas
stos
and
addr16
rcr
cmps
dec
mov
sar
push
mov
pop
xchg
(bad)
ja
fst
adc
dec
cmp
pop
call
sbb
pop
push
sub
repnz
dec
clc
ret
cmps
jnp
inc
mov
fimul
mov
cdq
shl
outs
iret
ret
jb
and
gs
jno
push
loope
sbb
cs
retf
push
sbb
jg
sub
mov
dec
mov
sbb
xlat
arpl
push
loope
jb
pop
les
sbb
in
fsub
pusha
add
jle
es
dec
mov
xchg
push
addr16
and
in
rcr
inc
arpl
xor
repz
sbb
mov
test
das
repnz
adc
test
push
fnstcw
ja
lea
mov
retf
inc
jo
add
ins
gs
mov
push
in
popf
aaa
mov
imul
fidiv
std
mov
jb
and
xor
retf
add
pop
and
mov
ja
mov
fidiv
or
mov
(bad)
xor
cmp
(bad)
js
pushf
adc
jmp
xor
mov
enter
cmp
sbb
mov
jecxz
pop
scas
mov
xchg
pop
aam
pushf
sar
es
mov
retf
mov
fiadd
inc
leave
rcl
cli
cwde
inc
and
clc
xchg
mov
adc
inc
adc
retf
sub
mov
in
add
aam
fldenv
dec
enter
add
push
and
xchg
xchg
cmp
mov
jmp
and
stc
rcr
lock
pop
lods
mov
jo
outs
arpl
(bad)
jg
mov
xchg
add
mov
frstor
mov
cld
mov
ror
leave
jge
and
sub
repz
dec
mov
rcl
mov
push
push
aad
imul
in
fnstcw
cld
rcl
shr
stos
mov
fwait
push
cwd
je
outs
cld
jnp
sbb
dec
mov
sbb
sbb
mov
and
mov
jo
mov
ret
scas
xor
adc
mov
push
cli
add
in
add
inc
arpl
ins
jecxz
repz
sbb
xchg
mov
test
lods
fadd
mov
sub
mov
lock
add
pop
stos
fistp
(bad)
and
adc
adc
jg
pop
jns
mov
jecxz
jbe
pushf
add
jmp
(bad)
rcl
pop
add
fcomp
adc
mov
push
popf
fs
mov
mov
dec
jo
sbb
cs
cli
xor
jo
in
inc
les
add
push
lahf
arpl
ins
(bad)
xlat
bound
jo
mov
jo
push
rol
adc
mov
js
dec
fst
inc
int
repnz
sbb
xor
cmp
mov
pop
sbb
sbb
ins
in
mov
push
or
xor
push
inc
call
icebp
shl
push
sbb
data16
iret
push
push
and
test
jecxz
xchg
push
repz
adc
mov
sahf
jecxz
into
mov
dec
jmp
inc
bound
or
and
pop
sbb
fidivr
jb
bound
shl
rcl
lods
daa
test
pop
ds
bnd
mov
cmc
xor
and
dec
mov
cmc
movs
movs
test
push
jl
adc
xor
xor
jmp
dec
pop
or
mov
dec
mov
out
enter
lods
fldcw
call
out
mov
fcomp
mov
jmp
or
dec
adc
mov
xor
inc
push
fwait
jle
fs
adc
lock
xacquire
pop
popf
add
cmc
push
inc
ins
add
ret
jb
aaa
movs
mov
push
jo
sbb
or
or
fdiv
or
imul
mov
xor
fld
pop
neg
fst
push
cmp
xchg
cmps
out
gs
lock
mov
mov
arpl
data16
inc
sub
xchg
sbb
mov
mov
rcl
std
rol
jnp
dec
retf
pop
xchg
dec
pop
(bad)
es
dec
pop
mov
in
sub
push
push
or
xlat
in
sbb
popf
dec
idiv
push
xor
jo
cld
push
jmp
and
(bad)
adc
pop
mov
jae
push
xchg
movs
cmp
cmp
inc
(bad)
fcom
mov
into
mov
or
sub
add
(bad)
mov
sub
or
mul
inc
idiv
cmps
mov
popf
ficom
mov
inc
bound
and
cmp
mov
std
inc
repnz
into
rol
cs
std
jmp
pop
retf
shl
aam
inc
loope
mov
add
and
in
sbb
icebp
popf
xlat
mov
pop
ds
sbb
cmp
and
pop
cmps
add
in
outs
xchg
sahf
inc
lahf
mov
mov
ror
xchg
je
stos
mov
repz
sbb
add
imul
adc
mov
imul
cdq
test
sub
fst
cmp
xor
data16
test
dec
push
int3
loope
js
jg
or
imul
inc
pop
icebp
push
add
mov
push
jnp
add
mov
jmp
not
arpl
stc
neg
outs
not
cmc
lods
arpl
cmp
or
adc
mov
(bad)
pop
lea
jae
rol
out
data16
retf
outs
mov
jg
add
jne
push
xor
add
inc
mov
mov
mov
inc
sub
mov
aam
and
pusha
sti
out
gs
dec
jecxz
bound
xchg
(bad)
(bad)
mov
inc
pop
int3
js
and
iret
mov
sub
pop
xchg
(bad)
mov
jo
and
and
push
and
outs
xchg
enter
adc
mov
adc
repnz
rcl
sbb
pop
dec
das
loope
cli
mov
aam
cmp
inc
adc
jecxz
test
sbb
retf
add
xchg
icebp
add
fs
out
sahf
jge
jp
jns
pop
xchg
lds
leave
xlat
mov
push
dec
or
out
inc
pop
aaa
mov
sti
adc
call
adc
(bad)
dec
cmps
xor
xchg
retf
push
push
sbb
xor
dec
ja
mov
fldenv
pushf
int3
(bad)
fmul
mov
es
jnp
push
mov
adc
cmp
or
retf
xchg
jg
mov
daa
dec
jecxz
sub
iret
popf
add
stc
add
cmc
mov
addr16
cmc
push
sbb
mov
inc
and
aas
jp
add
shl
shl
jo
(bad)
into
xor
or
mov
and
pop
pop
adc
es
pop
mov
add
xor
sub
jb
gs
cmp
fnstsw
dec
and
cmp
rcl
cdq
fisttp
dec
pop
push
pop
mov
gs
mov
xchg
mov
and
les
aad
cmp
add
sar
mov
outs
in
int3
sbb
aaa
std
shr
sbb
pop
inc
or
push
adc
test
mov
pushf
jp
(bad)
mov
leave
pop
outs
imul
dec
call
rcr
int3
inc
cs
in
xchg
frstor
dec
clc
rcl
repnz
jg
push
xchg
push
xor
mov
add
dec
push
pop
enter
xchg
icebp
jns
leave
fsubr
cdq
adc
lods
aad
xchg
ins
sar
in
or
iret
adc
ja
je
push
push
call
mov
in
push
jns
sbb
inc
xor
pop
call
bound
pop
fmul
push
ins
(bad)
or
retf
sub
mov
addr16
div
cmc
cmp
sub
jno
ror
lods
daa
ret
ja
imul
mov
jmp
xchg
ins
dec
xchg
pop
jno
sub
fs
jl
cmp
call
jns
enter
pop
out
add
jl
xor
shr
dec
pop
mov
mov
xchg
dec
pop
in
pop
into
push
fcom
jbe
retf
lock
daa
stos
pop
adc
ss
pop
jecxz
xchg
cmp
repz
pop
sbb
ja
test
dec
jp
sub
neg
xor
adc
xor
fs
outs
fcom
or
ffreep
dec
ror
xchg
imul
mov
xor
mov
sbb
inc
addr16
add
fs
repz
cmc
or
and
inc
pop
cmp
mov
mov
ret
sub
mov
mov
int
call
scas
icebp
jecxz
cli
xchg
dec
dec
jg
les
push
repz
mov
push
inc
mov
sbb
jo
mov
pop
inc
out
xor
scas
lods
bound
or
movs
add
rol
dec
clc
jecxz
jmp
xor
or
ds
jne
inc
cmps
repz
sbb
lea
adc
xor
add
mov
mov
mov
xchg
mov
sub
lods
imul
jg
out
sbb
pop
(bad)
add
jo
imul
xchg
dec
adc
clc
leave
rcr
mov
out
add
or
jbe
cmp
pop
or
rcr
dec
xor
imul
fisubr
jns
mov
jmp
sub
xor
pop
inc
arpl
in
into
lock
ja
xchg
ret
cli
mov
(bad)
aam
hlt
xor
cmp
test
mov
add
sbb
cli
aaa
cli
das
cmp
jnp
push
sub
(bad)
jno
clc
xchg
lods
idiv
nop
pop
out
sub
dec
mov
pop
in
jae
stos
mov
clc
out
mov
or
in
pop
jo
push
cmp
cmp
ja
jbe
adc
out
xor
(bad)
pop
int
sub
xchg
(bad)
push
or
mov
aaa
ins
dec
xor
test
cmps
cli
add
out
dec
xor
xchg
mov
xor
mov
pushf
ja
push
sar
test
xchg
add
jb
push
test
xlat
stos
nop
push
imul
lock
adc
mov
cli
sbb
rol
dec
adc
cmc
loop
add
aaa
jnp
loop
push
mov
push
or
lea
outs
iret
fwait
ins
or
loopne
leave
fimul
mov
loope
mov
jno
xor
pop
cmp
test
mov
lds
sar
test
inc
push
push
test
mov
dec
adc
mov
mov
lock
cwde
je
call
fs
mov
ficom
cmps
or
mov
leave
adc
sbb
xor
push
xchg
fistp
stc
xchg
jo
add
add
movs
icebp
mov
pusha
adc
lods
mov
pop
loopne
jge
or
cmp
jg
(bad)
cdq
aaa
aaa
sti
sbb
push
lock
das
sub
test
scas
std
enter
loop
sub
jo
inc
call
jp
and
fisub
jo
out
stc
leave
(bad)
pop
mov
and
cmps
in
test
adc
pop
add
hlt
xor
mov
mov
sub
jns
das
clc
sbb
pop
cld
ficom
iret
mov
or
popa
in
rol
cs
(bad)
xor
aad
sub
push
(bad)
outs
cs
cmp
shl
retf
sbb
jmp
(bad)
xchg
ret
lds
mov
sub
popa
sbb
rcl
ds
pop
dec
iret
fld
xchg
push
xchg
ins
fild
ficom
mov
repz
addr16
repnz
popa
pop
stos
xchg
in
pop
dec
pop
or
test
fwait
lock
xor
or
mov
mov
ror
(bad)
jns
xchg
jp
pop
icebp
pop
test
and
or
call
mov
mov
mov
xor
push
cmp
xor
fnsave
or
mov
xlat
cmp
or
jnp
pop
fnstcw
lods
dec
sub
loop
dec
and
mov
and
sub
or
mov
push
mov
int3
rcr
nop
inc
fisttp
nop
sbb
cmps
xor
imul
xlat
mov
pop
jmp
sbb
enter
pop
mov
xchg
lock
lods
in
cmp
jns
aaa
daa
outs
ror
je
shl
and
pushf
cmp
div
inc
or
bound
mov
enter
push
adc
adc
inc
dec
repz
loop
mov
(bad)
(bad)
stos
inc
adc
ja
scas
(bad)
pop
inc
dec
xor
dec
adc
push
fwait
retf
push
fwait
add
or
and
dec
sbb
mov
mov
outs
push
dec
sbb
add
js
pop
pop
ja
add
js
rol
push
pusha
loop
ja
push
jmp
mov
or
and
adc
lahf
scas
fld
sub
jo
jmp
mov
xor
mov
(bad)
mov
jno
sbb
cmp
ja
mov
aam
(bad)
fs
pop
cld
mov
icebp
add
(bad)
scas
test
mov
and
imul
add
test
shl
sub
ror
jne
shl
add
shl
test
hlt
stos
imul
mov
lods
mov
gs
lock
fsub
test
push
jmp
(bad)
stc
idiv
xor
sbb
enter
jno
repz
xchg
ins
jge
out
push
or
fcom
or
out
dec
lods
cli
cmp
fwait
nop
out
xlat
shl
jb
add
aad
adc
retf
and
jae
push
mov
jl
cs
sbb
rep
xlat
ret
stc
jle
and
inc
jnp
scas
mov
mov
leave
lds
fstp
cli
xor
(bad)
or
cld
shl
adc
cwde
pop
push
(bad)
sub
and
jmp
pop
and
outs
add
add
fwait
sub
imul
pusha
icebp
or
aas
xor
mov
rol
mov
mov
fdiv
cmp
inc
xchg
mov
nop
and
pop
out
fnstenv
or
fs
int
ss
fild
inc
adc
xor
xabort
sbb
imul
(bad)
es
imul
sbb
mov
sub
xchg
dec
(bad)
mov
sub
sbb
scas
call
add
push
pop
push
popf
aaa
cmp
mov
aas
es
jg
sbb
xor
test
push
repz
add
dec
icebp
lock
out
test
and
dec
jb
test
retf
(bad)
mov
mov
inc
in
test
lock
inc
cs
pop
retf
adc
push
push
jae
(bad)
push
mov
cld
lea
leave
pop
jge
popf
loopne
adc
(bad)
cmp
mov
bound
add
dec
add
arpl
call
call
(bad)
addr16
ffree
push
dec
loope
or
dec
gs
push
pop
xchg
fs
xchg
sub
jmp
and
push
xchg
popf
aas
mov
les
pushw
in
pusha
(bad)
jl
test
push
mov
jmp
xor
je
xchg
popf
mov
jne
push
test
cli
es
mov
adc
adc
mov
fild
or
add
mov
or
(bad)
mov
out
adc
fsubr
push
jo
sbb
test
shl
int
lock
out
inc
cmp
xor
out
sub
sbb
cmove
sub
cld
and
ins
mov
loop
add
or
jmp
dec
mov
push
aas
adc
jecxz
jne
out
pop
fwait
cdq
push
mov
imul
sbb
jg
add
inc
stos
sbb
das
xchg
push
push
inc
bound
stos
pop
movs
xchg
lods
lds
aam
jmp
xor
out
nop
mov
test
leave
movs
xchg
sti
lahf
hlt
dec
mov
jmp
adc
std
dec
cmps
icebp
xchg
movs
adc
push
fcmovb
into
daa
sbb
outs
das
dec
icebp
or
(bad)
aam
loope
popf
push
aaa
sbb
dec
lods
sub
clc
cmc
add
fild
or
cwde
loopne
inc
loopne
stos
xor
imul
js
xor
cmp
enter
cmp
test
std
or
shl
gs
pop
in
js
fxch
fadd
push
sbb
push
fnstsw
xor
ins
cmp
sub
hlt
ret
dec
mov
xchg
mov
pusha
xchg
in
sahf
repnz
mov
pop
sti
jb
out
ss
call
push
push
xchg
jmp
rol
popa
call
mov
push
pop
loope
imul
or
(bad)
out
and
aas
adc
es
jns
(bad)
dec
(bad)
and
dec
ss
pop
adc
inc
xchg
and
shl
outs
loope
pushf
inc
pop
retf
movs
leave
pop
mov
dec
or
sub
cmp
jl
fdivr
mov
ret
test
cdq
jl
and
repnz
cmc
aas
xor
sub
sub
(bad)
fs
sbb
addps
mov
xchg
addr16
push
imul
call
es
fcmovnu
and
dec
cs
call
aam
fcmovnb
fdiv
imul
push
pop
or
(bad)
je
cmp
dec
ss
cmp
or
fs
stos
jmp
sub
or
and
les
addr16
clc
cmp
adc
push
scas
mov
add
call
push
inc
adc
mov
jbe
jge
pop
dec
outs
lods
or
ret
popf
fisubr
idiv
es
xchg
mov
jne
inc
pop
dec
xor
inc
xchg
mov
sub
mov
mov
pop
mov
pushf
pop
or
gs
stc
daa
outs
inc
test
adc
data16
jae
push
dec
mov
sub
ja
test
push
fwait
xchg
pop
jnp
cmps
jne
mov
dec
sub
das
cmps
fdivr
mov
cmp
xchg
xor
shl
test
sbb
addr16
ror
xchg
in
fscale
add
adc
in
stos
fs
push
lock
mov
mov
ins
ret
es
and
pop
repz
out
cmps
movs
dec
or
rcl
and
cmps
mov
push
mov
lods
xchg
dec
and
cwde
mov
dec
ds
fwait
retf
aas
or
out
pop
xor
adc
push
in
frstor
jmp
shl
or
sub
rol
jbe
ret
add
mov
call
lock
inc
jl
fld
push
les
jg
push
dec
pop
sbb
push
mov
loopne
repnz
je
add
add
xor
cmps
movs
pop
int3
push
pop
imul
sbb
jecxz
or
test
icebp
ror
xchg
dec
ins
out
push
jmp
shr
pushf
xchg
ds
xor
jp
out
mov
dec
loopne
adc
mov
gs
sbb
pop
call
add
repnz
clc
xchg
xchg
in
clc
call
xchg
add
rol
xchg
jecxz
pop
pop
not
je
aas
ret
sub
dec
int3
movs
mov
push
dec
js
push
jnp
xchg
icebp
repnz
or
ins
into
daa
out
lds
mov
push
pop
(bad)
push
js
mov
mov
cmp
stos
rcl
ins
jg
pop
mov
sub
outs
add
adc
mov
push
mov
cmc
pop
(bad)
mov
sbb
enter
xchg
inc
xor
xor
mov
sbb
cmps
inc
xor
dec
(bad)
push
cmc
jl
xor
outs
sbb
sbb
mov
xchg
sub
xchg
out
int
aaa
jmp
loope
add
dec
jle
xchg
int3
ds
rol
sbb
and
pop
inc
inc
mov
fistp
sbb
or
movs
push
jl
xchg
cmp
push
and
xor
je
pop
(bad)
push
sbb
mov
out
fadd
aas
nop
fcmovnbe
inc
jns
adc
out
loop
rcr
sbb
adc
mov
jl
jmp
dec
jne
adc
shl
sub
shr
es
std
cdq
mov
inc
xor
jns
and
(bad)
xor
mov
dec
add
das
ret
push
mov
mov
repz
gs
mov
pop
sbb
call
stc
mov
push
mov
out
retf
add
sbb
retf
jg
mov
loopne
xchg
pop
xchg
sub
aaa
repnz
jo
jbe
(bad)
arpl
adc
push
cmp
dec
add
jns
arpl
mov
mov
sbb
adc
jp
jo
mov
push
mov
fisubr
adc
test
loopne
lods
and
mov
idiv
or
pusha
adc
stos
inc
adc
mov
les
inc
adc
jne
(bad)
into
xor
jnp
retf
xchg
pop
sub
cld
sar
mov
dec
adc
fstp
sub
mov
inc
test
push
retf
add
and
mov
mov
mov
xor
movs
repnz
cmp
dec
mov
sbb
xlat
in
sbb
jl
cmps
loope
inc
xchg
in
mov
add
and
mov
mov
push
xchg
sub
mov
rol
fdiv
shr
out
push
inc
(bad)
push
inc
inc
adc
pop
dec
pushf
cwde
out
icebp
pushf
mov
lods
mov
push
and
inc
jg
and
adc
lahf
pop
cmp
xchg
inc
test
mov
inc
fidivr
stos
and
stos
popa
pop
xchg
xchg
pop
fstp
or
xchg
mul
dec
jbe
je
cmp
dec
adc
adc
(bad)
fsubp
cmps
sbb
and
ins
dec
fcmovnbe
into
cmp
pop
jle
and
mov
jmp
and
and
sahf
push
push
mov
xacquire
stos
loopne
hlt
add
sar
xchg
or
iret
and
(bad)
(bad)
jmp
in
xchg
div
(bad)
xchg
lea
sbb
or
pop
adc
mul
lea
(bad)
jb
and
bswap
sub
xlat
stc
sub
lea
imul
cwde
pop
ficom
iret
sub
xlat
int3
push
xchg
scas
loop
push
jecxz
nop
scas
mov
adc
call
sti
dec
retf
lahf
mov
cmp
adc
add
aas
pusha
loop
mov
pop
retf
xor
gs
sub
fcom
dec
mov
mov
pop
xchg
clc
adc
push
cmp
das
pop
pop
sar
mov
cmp
mov
movs
ret
in
aam
repnz
mov
xchg
cld
mov
les
add
push
xchg
cmp
in
dec
add
inc
pop
out
stos
mov
ficom
popf
inc
sbb
cmps
inc
loope
in
out
stos
inc
bound
hlt
in
mov
(bad)
addr16
test
ds
enter
arpl
jne
leave
js
jnp
add
push
mov
enter
(bad)
sub
mov
xor
xchg
xor
sub
mov
jo
jo
popf
or
addr16
into
pop
popa
push
movs
stc
ret
mov
neg
imul
xor
test
pop
add
icebp
data16
cmps
xchg
or
mov
add
push
push
retf
xor
pop
and
mov
jbe
sti
mov
and
int3
xor
cwde
icebp
int3
std
dec
fimul
jb
(bad)
scas
add
xor
aas
add
scas
xchg
xor
xchg
add
imul
cdq
lahf
pop
mov
cmp
imul
dec
loope
or
call
(bad)
mov
test
lds
and
adc
sbb
mov
pop
popf
jb
or
lock
mov
jo
fstp
mov
ret
test
stc
mov
xor
stos
pushf
ins
mov
retf
xor
push
push
loop
pop
mov
adc
stos
push
push
cmp
dec
jp
(bad)
stos
rcr
dec
cmps
lods
(bad)
out
into
fisttp
push
pop
stos
adc
lea
ret
jne
mov
pop
pop
icebp
and
xor
adc
mov
ret
inc
or
mov
or
fimul
and
out
out
jne
adc
(bad)
repnz
push
or
add
mov
call
xchg
out
fidiv
jne
mov
pop
sub
jl
int
add
mov
sub
dec
loopne
sar
mov
sub
mov
pop
jo
inc
and
inc
cmp
sbb
xor
inc
call
pop
loopne
push
dec
fadd
cmp
adc
sbb
int
jp
xor
jl
push
les
jle
(bad)
cmp
xchg
les
imul
hlt
sar
inc
mov
pop
fwait
popf
pop
(bad)
stc
movs
and
sbb
movs
pushf
mov
jmp
enter
sub
lahf
or
add
xchg
push
add
or
sbb
inc
ja
or
imul
mov
aad
call
adc
mov
lods
inc
les
add
cmps
sti
push
push
xor
add
sbb
and
inc
sbb
push
push
es
imul
jne
gs
push
call
xor
xor
(bad)
and
hlt
mov
jp
call
dec
pop
mov
push
out
push
and
aas
mov
daa
xchg
dec
push
cmps
jmp
sub
sbb
jg
adc
dec
stc
xchg
or
fsub
lods
adc
pop
out
and
fild
inc
sub
mov
sahf
popf
popf
mov
in
dec
and
xchg
in
dec
fdivr
inc
leavew
or
jg
dec
adc
(bad)
je
(bad)
(bad)
cmp
cmc
mov
dec
xor
in
mov
scas
dec
fwait
add
std
sub
push
inc
push
push
add
not
icebp
xchg
clc
fwait
cwde
inc
movs
not
js
jno
test
jo
or
jmp
(bad)
imul
lods
fptan
nop
popa
jecxz
dec
pusha
jo
and
lods
xchg
fdivrp
mov
push
sbb
dec
dec
jle
scas
adc
dec
jns
sti
(bad)
sbb
(bad)
rol
aad
cmp
and
jl
bound
mov
pushfw
dec
cli
int3
cmps
pop
jns
lahf
in
retf
dec
imul
fucomp
dec
pop
cwde
in
mov
sbb
mov
inc
cli
out
adc
push
cs
sbb
lods
add
add
rol
and
call
(bad)
xchg
(bad)
push
call
mov
cmp
ja
jl
jno
hlt
push
(bad)
in
sahf
pop
neg
cmps
cwde
xor
jp
jne
rcl
out
hlt
cwde
imul
aas
int3
jge
cmp
dec
scas
jmp
and
aam
mov
sbb
in
mov
cmp
xchg
pop
jmp
jge
fscale
mov
(bad)
cmp
add
inc
arpl
(bad)
in
cmps
jecxz
sub
retf
sbb
hlt
add
add
imul
or
jl
fisubr
shl
out
push
push
mov
cmp
fmul
mov
inc
and
(bad)
daa
mov
jl
pop
push
movups
xchg
nop
leave
pop
push
xor
push
test
push
ret
leave
xlat
sbb
je
push
mov
push
ffree
pop
push
fcomp
rcl
and
jle
loop
inc
(bad)
jb
rcl
pop
cmp
aad
outs
sub
dec
out
cs
std
ret
push
sbb
fwait
not
push
call
cmps
out
imul
cmp
cli
sub
shr
call
pop
in
sti
popf
pop
mov
and
dec
inc
mov
imul
enter
xor
dec
movs
icebp
out
dec
dec
sub
into
js
pop
pop
(bad)
lea
(bad)
outs
adc
shl
shl
or
ds
jle
lds
jl
pop
push
pop
clc
loopne
ret
daa
shr
and
adc
inc
sub
mov
fisttp
push
pop
dec
rol
pop
mov
out
cmp
sbb
cmp
mov
cmp
inc
dec
fldcw
xor
inc
cmc
xor
and
cli
pop
call
ss
outs
sub
repz
adc
xchg
push
pushf
push
jns
add
enter
mov
std
clc
loop
mov
and
inc
pop
call
movs
(bad)
sti
(bad)
in
enter
or
push
loop
out
daa
outs
sub
push
mov
ror
into
je
sub
and
or
test
jne
icebp
mov
out
retf
xchg
xchg
push
push
dec
stc
aad
xchg
aad
jmp
cmp
mov
push
fs
movs
leave
fnstsw
bound
aam
mov
jo
pop
sbb
stos
mov
jo
pop
cmps
fcmove
dec
fwait
or
pop
add
mov
xchg
out
jns
out
inc
outs
(bad)
not
xchg
stos
add
add
cdq
fs
mov
mov
push
nop
mov
inc
scas
out
test
or
out
pop
mov
test
push
pop
jbe
inc
hlt
jb
dec
cmc
and
adc
fdivr
pop
aam
mov
mov
test
pop
cmp
push
mov
mov
ret
(bad)
clc
fisubr
sub
pushf
movs
iret
and
push
cmp
sbb
pop
cmovp
fsubrp
ret
xchg
cmp
mov
in
mov
adc
mov
mov
ficomp
adc
push
xchg
push
push
outs
jl
arpl
push
loop
aas
in
and
mov
sbb
dec
fcomp
push
movs
mov
and
inc
adc
and
cmps
in
push
in
add
fistp
repz
mov
imul
fistp
movs
or
(bad)
pushf
cmp
xor
add
dec
cmp
gs
mov
hlt
sbb
(bad)
fmul
das
mov
bound
add
pop
jecxz
retf
imul
loope
pushw
stos
xor
jmp
hlt
call
mov
jmp
sbb
cwde
adc
xchg
lods
xchg
xor
(bad)
(bad)
bound
jmp
mov
loope
shl
loope
or
mov
test
imul
aas
aas
xor
es
mov
cmp
inc
pop
inc
neg
add
push
jmp
mov
imul
push
in
push
ins
xchg
test
jg
xchg
dec
pushf
pop
call
jno
aad
aad
push
jbe
and
das
add
jle
adc
das
and
dec
sub
pushf
(bad)
xor
dec
out
sub
dec
nop
or
test
push
ret
jl
push
push
and
test
mov
outs
mov
inc
or
daa
cmp
imul
shr
gs
dec
cmp
add
or
jle
mov
mov
loope
fstp
xchg
jns
mov
inc
cmps
add
pushf
push
repz
cs
sti
xchg
mov
pop
jbe
loope
lods
dec
lods
js
bound
fimul
sub
jae
push
pop
into
add
mov
retf
cmp
sahf
nop
(bad)
xor
stc
mov
jbe
retf
adc
adc
fiadd
das
(bad)
movs
imul
mov
aam
out
add
jge
sbb
fbld
shl
push
shl
(bad)
fcom
sbb
mov
xchg
xor
outs
and
push
dec
add
adc
shr
pop
push
cmp
push
fidiv
cmp
inc
jo
in
outs
cmp
jge
aas
add
and
jg
jp
xor
aam
adc
jmp
ja
cdq
add
inc
neg
ret
adc
clc
mov
lods
dec
mov
sbb
das
dec
(bad)
retf
movs
push
shl
(bad)
lods
cdq
push
outs
mov
test
xchg
fidiv
pusha
inc
cdq
jle
cmp
sbb
int3
imul
jmp
aas
and
daa
arpl
addr16
jbe
fwait
add
cmp
pop
push
cmp
std
dec
std
rol
pop
cdq
mov
out
adc
fnstcw
mov
mov
adc
xor
jmp
je
cmp
repz
imul
test
call
jmp
nop
data16
(bad)
mov
jae
popf
sbb
adc
cmp
xor
addr16
mov
stos
or
sbb
jmp
adc
aas
outs
or
pop
push
jb
or
shr
jp
out
mov
in
hlt
std
scas
add
jl
out
inc
dec
fdivr
hlt
stos
cmps
retf
call
xchg
xchg
mov
in
test
jg
ins
push
jmp
inc
cmp
sbb
sti
sub
lods
xor
or
mov
inc
call
mov
ja
(bad)
and
mov
mov
popa
pop
push
clc
jp
and
and
jle
mov
xlat
cmp
push
test
nop
add
mov
fwait
pop
sbb
outs
xchg
imul
mov
arpl
nop
xchg
ja
ds
mov
jno
pop
jge
push
add
(bad)
ficom
or
lea
hlt
fwait
sar
mov
push
mov
or
mov
data16
mov
je
cwde
sbb
ror
ins
not
sub
test
push
jo
inc
dec
call
pop
pop
je
add
and
push
xchg
scas
push
lods
add
sbb
mov
adc
mov
std
ss
(bad)
movs
sahf
inc
sub
xchg
jae
movs
(bad)
rcl
cmps
(bad)
sbb
clc
aad
pop
xchg
(bad)
ss
(bad)
or
aam
push
movs
xchg
fsubr
mov
rcr
mov
dec
and
loop
cmp
cli
add
add
dec
mov
popf
jp
pop
inc
sub
xor
mov
mov
mov
mov
clc
pop
mov
je
cmps
xor
pop
ds
pop
pop
xchg
les
or
cmps
je
ret
adc
es
imul
adc
and
fisub
add
sbb
pop
xor
inc
(bad)
test
xchg
ret
and
fst
mov
std
jg
mov
cmps
stos
push
jmp
or
ins
xchg
xchg
(bad)
dec
inc
sbb
mov
push
enter
adc
sub
and
push
arpl
push
imul
push
push
lods
stos
xchg
gs
fwait
out
lock
sub
adc
fsubrp
rcr
outs
cmp
mov
int3
push
pop
and
imul
and
sub
xchg
sub
sub
and
aam
out
ja
sbb
sub
daa
inc
mov
sahf
das
sahf
mov
adc
and
retf
mov
pop
add
popa
mov
cmps
push
mov
out
shr
mov
dec
sbb
inc
pop
sbb
inc
pop
clc
xor
cmps
shr
nop
jge
push
retf
xor
rcl
mov
(bad)
jbe
push
scas
cdq
repnz
mov
test
dec
mov
dec
or
xor
pop
cld
bound
push
mov
jecxz
rol
fcomp
sbb
dec
loopne
mov
dec
inc
les
movs
dec
adc
mov
mov
push
(bad)
sbb
mov
or
das
pop
test
xchg
test
lock
out
mov
xor
rcr
popa
mov
mov
in
sbb
inc
inc
sbb
in
or
cmc
mov
std
adc
cmc
in
pop
fild
dec
fdiv
push
push
add
inc
dec
sub
mov
(bad)
push
cmp
test
call
loop
and
push
cmp
leave
inc
add
and
xor
imul
into
mov
xor
jmp
outs
cmps
adc
iret
mov
inc
fcmove
add
rcl
cmp
jmp
push
xchg
add
ficom
loop
and
(bad)
addr16
icebp
mov
sets
movs
adc
dec
jo
int3
push
pop
xchg
(bad)
ds
jb
lock
popf
add
iret
imul
pop
stos
hlt
das
sbb
and
push
xchg
mov
mul
shl
xchg
push
lock
and
cmp
popf
pop
fmul
inc
cwde
aas
out
je
je
div
out
or
sub
cmp
push
test
data16
cld
(bad)
shl
(bad)
ss
bound
or
xchg
lfs
mov
div
sbb
or
sbb
mov
jmp
imul
ds
ret
mov
neg
pop
sar
mov
in
push
fisub
mov
push
rol
movs
cmp
pop
(bad)
(bad)
iret
mov
fcom
int3
fist
retf
lds
add
push
mov
(bad)
es
icebp
mov
ins
cmp
push
repnz
jno
xor
cmp
jno
xchg
fild
cli
outs
mov
sahf
pop
es
add
sub
scas
aad
cmp
inc
loopne
aas
pop
push
ins
mov
ins
retf
repnz
xor
mov
sbb
call
out
ret
adc
cmc
imul
test
or
push
cli
out
mov
lods
push
push
aam
or
adc
and
mov
mov
out
push
add
loopne
mov
cmps
fxch
lock
sub
das
stos
int
jbe
sbb
cld
mov
test
pop
out
lock
retf
test
pop
scas
mov
add
pop
mov
repnz
fisttp
(bad)
sar
hlt
mov
pop
jmp
ror
loop
xchg
sar
repz
(bad)
loop
fcomi
in
and
xor
(bad)
dec
movs
stos
cwde
(bad)
push
out
jae
test
cld
mov
xor
(bad)
fstp
pop
shr
lods
popf
(bad)
std
jb
cli
mov
std
test
or
jbe
xchg
mov
test
imul
xchg
repz
add
jbe
add
cmp
pushf
ins
xchg
cmp
mov
(bad)
call
leave
sahf
ds
dec
sti
stos
inc
pop
pop
popf
pop
addr16
sti
xor
inc
mov
cs
dec
(bad)
out
adc
push
sub
mov
mov
xor
add
xor
sbb
adc
cmp
and
mov
lahf
mov
fdivr
shr
sub
cmp
push
dec
fild
out
loop
inc
adc
stos
lock
fwait
ret
jmp
push
xchg
shl
sub
int3
push
call
sbb
pushf
hlt
xlat
push
or
movs
data16
(bad)
fdivr
push
dec
mov
mov
loopne
push
and
daa
jb
pop
mov
add
adc
inc
cmp
ins
sbb
mov
repz
inc
call
in
dec
mulps
fidiv
das
xchg
scas
(bad)
xchg
mov
pushw
mov
cmp
cmp
jo
stos
lods
sub
xchg
dec
test
jl
jecxz
arpl
xor
sub
add
sub
fsub
xor
mov
out
sub
add
sbb
or
rol
(bad)
nop
push
js
and
cmps
sub
dec
mov
pusha
(bad)
(bad)
ja
int
dec
fdiv
cwde
pop
popa
jns
or
jge
fmul
popa
inc
in
add
cmps
sbb
das
ins
pop
leave
in
pop
or
aaa
hlt
in
xor
pop
retf
pop
shl
xchg
xchg
out
jo
lds
mov
jmp
cmp
dec
jmp
test
(bad)
in
gs
ja
inc
or
jbe
loopne
dec
lahf
call
in
inc
mov
jns
in
adc
sbb
scas
inc
leave
or
xor
inc
ds
jg
sbb
add
hlt
shr
cwde
popf
loope
push
fwait
sub
loopne
xchg
outs
mov
sar
dec
pop
mov
dec
(bad)
stc
xchg
mov
mov
ja
xchg
sahf
imul
add
sti
xchg
int
std
addr16
(bad)
sbb
push
sbb
cmp
stc
sahf
aam
push
iret
jp
sahf
aas
mov
sbb
inc
pop
(bad)
jmp
lahf
cmp
nop
adc
mov
imul
push
shl
lock
pop
addr16
pop
js
call
jbe
push
pop
jp
push
mov
pushf
pop
pop
or
(bad)
outs
sbb
pop
or
pop
mov
in
jg
shr
inc
push
adc
push
lods
jge
cwde
test
and
xor
call
je
pop
jp
leave
and
jbe
(bad)
hlt
jmp
dec
mov
js
mov
sti
mov
push
fistp
test
in
stos
cmps
sbb
icebp
push
loope
shr
arpl
or
pushf
fmul
dec
cmps
xor
lds
popf
sbb
ds
push
std
xor
mov
fisub
sub
adc
sub
imul
(bad)
std
arpl
xor
pop
pushf
pop
in
cmc
inc
mov
test
mov
in
xchg
and
pop
push
enter
jmp
mov
loopne
dec
test
cmp
arpl
pop
jmp
popa
pop
jp
mov
mov
mov
ror
aam
or
pop
(bad)
adc
test
jmp
jmp
sub
std
push
je
mov
add
fwait
sub
dec
pusha
cld
fdiv
fcmovbe
jno
push
pop
adc
dec
and
mov
lods
cmps
mov
pop
xchg
jge
add
loopne
pop
(bad)
jnp
imul
push
cmp
jecxz
mov
add
pusha
into
push
push
mov
(bad)
and
(bad)
mov
mov
cmp
pop
push
lods
sbb
pusha
push
mov
mov
test
mov
jmp
and
inc
test
sbb
sub
movs
cmps
bound
out
ja
clc
(bad)
cld
jns
or
sub
push
add
xor
les
adc
xchg
and
mov
dec
dec
or
mov
fsubr
js
iret
mov
addr16
sar
dec
ds
pop
xor
cmps
push
add
inc
scas
xlat
mov
daa
(bad)
retf
jmp
popf
pusha
xchg
and
pop
or
out
jbe
jb
outs
push
fnstcw
in
nop
or
in
in
loop
or
or
inc
ds
(bad)
(bad)
xor
adc
mov
or
pop
adc
mov
std
inc
push
jnp
mov
dec
push
mov
push
cmp
cmp
int3
or
js
pop
mov
mov
jmp
fmul
sar
push
out
stc
test
push
retf
imul
inc
ret
or
xor
aas
sub
jns
enter
and
(bad)
xor
jbe
jb
and
pop
je
xor
inc
test
and
js
(bad)
dec
js
outs
add
(bad)
(bad)
fld
sti
mov
and
xor
push
and
sbb
dec
push
jno
ja
pop
adc
dec
(bad)
jmp
jg
sub
add
xor
loope
jb
sub
lods
daa
dec
cmc
sub
hlt
xchg
rol
jl
ins
sar
inc
inc
ds
repz
cmp
dec
pop
xor
cmps
adc
loope
ficomp
and
pop
loope
ss
ficom
cvttps2pi
cmp
(bad)
clc
(bad)
dec
in
fst
daa
call
sbb
jp
inc
and
sub
sbb
sbb
out
cmp
add
repnz
retf
leave
xchg
mov
mov
xor
pop
cmp
stc
test
push
aad
retf
or
(bad)
mov
pop
mov
jmp
mov
(bad)
std
fild
dec
shl
aaa
nop
test
dec
shl
pop
inc
jecxz
and
xor
(bad)
loope
sar
pusha
mov
cmp
arpl
push
data16
push
cmps
mov
xchg
xor
repnz
sub
xor
shl
xor
inc
fistp
inc
js
call
movs
scas
in
sub
adc
fild
sbb
repnz
or
or
mov
cs
imul
sbb
call
(bad)
out
lds
jmp
jecxz
hlt
jbe
and
in
and
test
(bad)
mul
retf
(bad)
mov
push
push
aaa
cmps
xchg
popa
dec
jmp
push
add
imul
cli
(bad)
icebp
sar
cmp
or
cdq
cmp
pop
int
jo
dec
pop
and
pop
inc
div
gs
loop
sub
push
bound
inc
dec
gs
xchg
jge
out
jo
rol
add
mov
out
lods
pop
pop
arpl
or
and
out
popa
lahf
jbe
xchg
inc
in
dec
xlat
or
jmp
inc
sti
imul
cmps
stos
adc
mov
ds
cmp
jbe
push
adc
adc
call
outs
jmp
and
dec
and
pop
mov
in
jmp
movs
or
bound
movs
fwait
jno
dec
mov
jp
mov
enter
fstp
sub
sbb
xor
adc
inc
dec
fwait
in
xor
xchg
cld
add
shl
cld
aas
lock
jmp
jle
cmp
adc
xchg
mov
out
mov
sub
clc
gs
loopne
(bad)
pop
jge
adc
mov
fiadd
push
into
or
test
mov
adc
xchg
push
sub
cs
jnp
out
pop
les
das
je
mov
pop
xchg
retf
inc
(bad)
(bad)
sub
enter
cmp
enter
(bad)
int
jbe
push
imul
scas
cmp
dec
adc
push
das
mov
dec
(bad)
je
fcomp
add
stc
loop
mov
jl
adc
jnp
fs
add
cmps
imul
mov
imul
sbb
pusha
xchg
xchg
xchg
cld
xchg
adc
pop
xchg
rol
add
out
pop
int3
cmc
mov
cli
inc
jmp
mov
call
add
sub
setl
inc
add
mov
dec
or
jb
lahf
add
inc
pop
ret
mov
or
cmp
(bad)
push
cmp
mov
stos
rcl
stos
sbb
or
jnp
iret
push
jns
dec
nop
jo
(bad)
cwde
pusha
jb
add
mov
jecxz
cli
xor
push
xchg
jge
dec
cmp
mov
xchg
mov
mov
clc
repz
xchg
adc
dec
cmp
and
stc
mov
out
lea
mov
add
(bad)
dec
fbstp
loope
dec
mov
xor
clc
cdq
inc
add
add
pop
cwde
dec
push
or
outs
int
jmp
test
mov
in
mov
daa
popa
xor
xor
jl
or
mov
or
pop
xchg
mov
(bad)
inc
xor
loopne
inc
sbb
jns
adc
stc
mov
fisub
xor
nop
mov
test
cmp
dec
cmp
cld
lea
and
repnz
cmovb
push
push
shl
inc
adc
lea
cmps
pushf
adc
xor
std
ss
(bad)
fild
adc
(bad)
lds
pop
jo
sbb
add
aaa
clc
adc
or
fcom
xchg
(bad)
push
push
popa
enter
inc
jmp
xor
jge
aad
int
mov
pusha
jne
inc
shl
repz
scas
sbb
pop
mov
ins
ss
xchg
lahf
jle
inc
ret
fadd
push
mov
mov
jbe
ja
pusha
in
test
xor
mov
ins
pop
std
cwde
sbb
mov
or
or
stos
and
retf
push
es
pusha
loopne
sbb
or
and
sbb
pop
dec
movs
data16
repz
mov
or
add
pop
xor
mov
cmp
mov
icebp
and
pop
aaa
arpl
fist
outs
push
repz
pop
mov
xchg
adc
loopne
push
mov
cmc
pusha
dec
inc
out
and
mov
retf
lea
test
retf
mov
or
sbb
(bad)
and
ss
dec
fldcw
lds
in
add
lahf
jno
pop
mov
ins
das
mov
sub
mov
pop
push
mov
div
dec
imul
shl
aas
je
sbb
jmp
cmps
sbb
mov
mov
jno
retf
aad
sub
mov
adc
scas
cmps
movs
call
stc
std
into
mov
pop
mov
push
pop
test
adc
jg
push
inc
fwait
movs
pushf
push
or
shl
push
test
gs
sahf
jns
fsubp
and
inc
(bad)
rcl
pushf
pop
mov
icebp
and
icebp
xchg
cwde
popa
jae
stos
sbb
rcl
cmp
xor
push
push
in
mov
nop
add
dec
stc
je
retf
ja
dec
add
ds
std
rcr
rcl
call
aad
movs
add
sbb
into
imul
add
sub
push
xchg
shl
sti
jo
xor
pop
adc
xor
inc
dec
mov
push
enter
iret
add
dec
imul
movs
xchg
test
mov
in
(bad)
ss
cmc
in
loope
sub
add
fadd
push
in
push
add
mov
inc
pop
and
repnz
sbb
xchg
push
dec
cld
xchg
inc
sbb
mov
pop
jbe
adc
jl
retf
(bad)
jmp
(bad)
popa
and
stc
cmp
nop
mov
cmc
int
cmp
pop
iret
or
test
imul
out
inc
dec
and
das
inc
dec
fisub
movhps
or
mov
outs
aad
outs
or
clc
das
aas
int3
div
and
cdq
ja
pop
jbe
mov
cwde
repz
dec
lea
call
mov
arpl
jo
popf
dec
pop
inc
pop
or
imul
icebp
repnz
jmp
sar
dec
cli
dec
nop
add
sbb
jbe
addr16
inc
xlat
mov
inc
dec
sub
push
rol
pop
mov
adc
jns
mov
xchg
mov
inc
mov
pop
dec
(bad)
aas
adc
fld
movs
mov
pop
push
adc
mov
es
int3
adc
push
ret
dec
and
mov
or
(bad)
fiadd
adc
or
and
push
leave
fwait
pop
test
xchg
push
neg
aaa
mov
mov
pop
ins
add
xchg
stos
fisubr
adc
cmp
dec
pop
dec
cmp
push
cmp
dec
push
cmp
add
pop
and
sub
stc
jl
push
push
or
cmp
je
inc
adc
aam
push
mov
inc
dec
or
cmps
movs
adc
push
inc
outs
xor
pop
inc
stc
and
out
or
mov
shl
push
repnz
inc
in
mov
xor
cdq
repz
out
test
lock
push
and
popf
rcl
div
jbe
mov
sar
mov
mov
mov
or
cmp
lahf
stos
mov
fiadd
loop
in
inc
(bad)
std
pop
or
jb
dec
imul
push
int3
ins
js
sub
icebp
jo
int3
jnp
and
and
push
inc
xchg
inc
pop
xor
xchg
push
mov
add
dec
adc
std
shl
ins
and
or
icebp
iret
sbb
pop
int
ret
adc
addr16
push
xchg
call
sti
je
cdq
mov
rcr
inc
jo
into
sar
ror
sbb
aas
and
fs
cmp
jmp
dec
jp
cmp
and
into
adc
adc
mov
and
dec
das
sbb
fcom
mov
movs
jo
pop
in
call
aaa
inc
adc
mov
pop
arpl
stc
adc
cld
out
pop
aam
leave
sar
das
arpl
or
call
ins
xor
push
xor
fmulp
shl
rol
cmc
inc
neg
xor
cmp
fsubr
sbb
xor
pop
shl
cmp
test
sub
(bad)
inc
mov
adc
sub
push
xchg
jmp
call
arpl
stc
sbb
xor
adc
dec
(bad)
or
jmp
scas
scas
and
xor
outs
cmp
std
push
xlat
or
jmp
nop
cmp
int3
cli
dec
aas
push
or
ret
iret
xlat
and
push
sub
xor
jmp
and
sbb
pop
add
lea
inc
jb
lock
adc
movs
ds
lds
inc
sar
bound
call
push
mov
in
ins
aam
sbb
adc
imul
add
aaa
outs
jns
in
push
in
jbe
push
fs
sbb
push
test
ds
pop
sub
addr16
loopne
mov
es
pop
call
push
or
push
add
pop
jno
inc
and
sub
or
pop
(bad)
cli
icebp
sub
lods
xchg
pop
xchg
cdq
push
xor
shl
mov
imul
not
addr16
in
aad
outs
push
mov
sbb
daa
lahf
iret
mov
xor
ss
and
jae
xor
fsubrp
ret
(bad)
jae
xor
xchg
rol
aad
cs
add
ds
mov
or
xor
push
and
out
leave
outs
pop
pop
cmp
fisubr
pushf
push
repnz
and
add
movs
pusha
push
bound
push
daa
sbb
iret
(bad)
paddq
mul
fsubr
frstor
(bad)
dec
rcl
(bad)
arpl
pop
cdq
icebp
icebp
sub
mov
dec
int
inc
and
test
aaa
mov
lahf
xchg
mov
mov
sbb
cmp
mov
pop
push
loopne
dec
hlt
pop
out
in
lahf
cwde
add
fisub
retf
dec
int3
call
(bad)
fwait
mov
add
push
dec
into
mov
xchg
push
cmp
adc
(bad)
ret
dec
add
push
dec
jecxz
scas
lahf
mov
out
imul
mul
jg
stc
ret
(bad)
in
repnz
das
sti
dec
pushf
xor
add
jmp
sbb
inc
loop
int3
shr
int3
data16
sub
int3
stos
xor
popa
pop
cmp
cmps
cmc
repz
xor
stos
jmp
and
in
dec
ss
jl
int
lock
adc
fucomi
in
or
shl
xor
sub
inc
xchg
fisub
arpl
out
pop
daa
ins
jns
pop
pop
cli
arpl
scas
push
sar
cmps
pushf
adc
lock
call
cmp
pop
pop
lahf
mov
popf
dec
jmp
sti
cmp
ja
push
jmp
mov
stc
mov
test
jae
shr
adc
mov
or
loopne
fdiv
mov
ror
push
(bad)
push
xchg
mov
sub
mov
and
or
ja
test
mov
cdq
mov
pusha
jle
loopne
inc
ficom
mov
clc
icebp
int3
mov
add
cli
jno
mov
fucompp
sub
cdq
push
push
aam
icebp
dec
inc
fld
or
ins
aas
into
not
jge
repnz
sbb
aad
dec
je
sar
cwde
test
pushf
loope
imul
mov
stos
mov
add
retf
(bad)
fistp
xchg
pop
stos
enter
inc
mov
push
movs
push
out
outs
repnz
jnp
cmp
jbe
adc
adc
cmp
sar
sub
adc
fs
dec
push
test
and
jg
cld
jge
in
sub
sar
or
xchg
inc
adc
enter
adc
dec
test
fist
xchg
add
xor
call
arpl
xchg
out
and
outs
int3
push
lock
retf
jno
push
sub
icebp
inc
dec
sub
mov
sub
fidivr
adc
mov
shl
inc
lds
xchg
xchg
xlat
xchg
movs
(bad)
cmps
or
hlt
mov
loopne
pushf
inc
enter
out
in
aam
and
xor
mov
scas
hlt
jge
jmp
out
push
mov
inc
inc
mov
faddp
xor
clc
pushf
and
or
inc
jp
sbb
idiv
cmp
xlat
mov
std
imul
mov
inc
or
and
adc
pop
inc
sub
ins
mov
inc
sub
push
xchg
cmp
into
cmp
addr16
adc
data16
int3
call
in
mov
sbb
jmp
and
enter
mov
repz
hlt
repz
nop
cmp
mov
clc
cmp
aam
mov
adc
rcr
jb
ror
rol
jmp
cmp
outs
ins
ret
rol
fs
rcr
sub
cdq
movs
call
dec
jmp
and
pop
or
pop
inc
xlat
dec
jb
mov
sbb
sbb
xchg
mov
in
repz
(bad)
cli
popf
xor
nop
jns
mov
shl
jmp
nop
cdq
mov
xchg
dec
mov
rol
movs
mov
in
movs
xchg
mov
ret
icebp
inc
pop
adc
sar
out
sbb
inc
mov
lds
inc
pop
ja
dec
in
pusha
stos
and
pop
fdivr
xchg
and
xor
pusha
in
add
dec
jp
push
fs
fyl2x
shl
cmps
jne
mov
retf
nop
pop
cmp
jl
sti
add
jbe
mov
(bad)
cmp
or
in
outs
mov
popa
cmp
(bad)
mov
test
or
mov
out
inc
mov
sar
pop
nop
mov
in
imul
aam
bound
mov
and
add
cli
ss
jnp
enter
jnp
and
les
mov
imul
xchg
cmps
sub
fisttp
add
xor
pop
dec
jbe
pop
stos
cld
stos
std
aam
pop
add
inc
ja
stc
mov
cmp
sub
test
outs
shr
iret
dec
inc
fcomp
push
pop
iret
pop
dec
lea
rcl
xchg
sahf
or
std
fbld
(bad)
out
push
xor
dec
pusha
dec
mov
mov
or
and
dec
push
sbb
sub
adc
pop
aam
cmp
fwait
(bad)
clc
and
mov
repz
stc
fwait
rol
jne
pop
and
inc
xor
addr16
(bad)
into
xchg
pop
sti
sub
mov
xor
jb
(bad)
mov
fmul
mov
and
jb
mov
fiadd
int
or
dec
or
cmps
push
cmp
xor
mov
stos
sub
xchg
push
out
jg
add
aaa
fistp
xchg
stos
daa
mov
lods
in
adc
call
ja
out
in
jl
push
cmp
pusha
push
out
or
aam
mov
push
je
pusha
lea
movs
scas
test
and
add
mov
iret
jns
push
ins
inc
xor
push
in
fisttp
sbb
pop
sahf
loope
jbe
mov
xchg
dec
sahf
mov
push
sar
loopne
les
sub
pusha
jb
xchg
mov
xor
sub
inc
enter
hlt
push
sar
pop
aas
dec
lds
inc
mov
jge
jl
pop
dec
or
push
and
fild
mov
outs
mov
dec
sub
test
dec
push
push
jns
gs
test
and
mov
and
sub
xor
fstp
jmp
fdivr
xor
daa
inc
imul
cmps
pop
(bad)
test
ficomp
out
ret
push
add
cmp
sbb
and
lods
ins
jg
in
pop
jge
push
ins
test
cmc
out
mov
pop
cmp
mov
(bad)
xor
push
(bad)
shl
mov
sub
fsubr
mov
clc
jmp
clc
std
xor
cmp
jnp
jecxz
loop
push
sub
jecxz
nop
ins
fld
dec
cdq
add
shl
pop
pop
inc
push
mov
adc
imul
cmps
loop
or
jae
and
cli
out
clc
dec
das
add
je
xlat
mov
pushf
aas
mov
cs
js
inc
mov
popf
mov
sti
dec
jo
(bad)
cli
loop
cdq
cmps
outs
inc
sbb
frstor
cli
into
mov
pushf
shl
cmp
ret
dec
in
pop
jp
jns
adc
mov
int3
mov
jle
jg
and
ja
inc
sub
repz
rcl
hlt
call
xchg
or
xchg
ror
xor
push
and
mov
cmp
imul
adc
lock
xchg
dec
aad
jno
in
nop
jnp
sti
mov
and
(bad)
(bad)
pop
mov
push
and
mov
shr
pop
add
mov
dec
and
adc
rol
lods
aam
aas
loop
and
add
lds
(bad)
lock
fidivr
sub
mov
adc
jo
stc
pop
movs
sbb
adc
mov
sbb
je
mov
cmp
adc
fcomp
mov
addr16
rcr
mov
outs
lock
inc
(bad)
iret
add
into
js
(bad)
cmp
xchg
sar
(bad)
mov
mov
adc
imul
int3
jecxz
push
mov
sbb
stos
adc
adc
popa
(bad)
jb
imul
jmp
xchg
loope
shr
or
jno
rep
inc
mov
aam
add
movs
pusha
adc
add
inc
icebp
pop
sub
xor
cs
fcmovnbe
ror
aad
dec
and
sbb
sbb
sbb
xchg
test
in
into
sbb
push
cmp
dec
add
sub
pop
shl
dec
add
cmp
inc
outs
loop
pop
inc
scas
sub
xchg
adc
aad
sbb
(bad)
stc
jmp
mov
push
mov
push
inc
pop
shr
scas
push
(bad)
xor
in
les
push
shr
push
in
pop
mov
inc
push
arpl
mov
or
fld
loop
lahf
es
hlt
outs
mov
and
jne
ins
sub
les
jns
push
pop
cmc
mov
movs
jmp
in
push
jae
xlat
xor
xor
dec
sub
xchg
inc
lea
sub
cmp
xchg
int
out
dec
sbb
jl
in
or
not
cmc
call
adc
mov
outs
cdq
pop
test
outs
and
mov
inc
sbb
add
mov
pop
add
xchg
push
adc
and
xchg
xor
add
jae
cmp
cmp
adc
xchg
sub
xchg
fisttp
cmc
add
xor
push
cmp
and
(bad)
fadd
aam
push
mov
and
repnz
mov
or
and
fcmovb
cli
cmp
sahf
cmp
(bad)
imul
imul
movs
(bad)
bnd
ss
int
sbb
ror
jle
bswap
mov
inc
xchg
jp
nop
inc
or
fdiv
pop
xchg
test
repz
out
inc
dec
test
fldenv
dec
cs
jbe
push
fs
sub
pusha
inc
xor
shl
sub
cmp
push
add
sub
imul
jae
mov
pop
inc
cmc
aaa
xor
fstp
inc
ds
and
or
cmp
push
and
sbb
cmc
cmc
mov
(bad)
sub
dec
push
add
js
cs
mov
lods
paddd
rcr
fs
cmp
mov
cmp
and
xchg
mov
sbb
pop
repz
fwait
and
mov
imul
in
inc
lods
mov
imul
stc
das
inc
and
push
mov
ins
loopne
fwait
mov
and
cmp
aaa
leave
add
and
(bad)
std
adc
sub
out
(bad)
xlat
jne
sbb
outs
xchg
xchg
ficomp
push
test
xchg
xor
addr16
cmp
xchg
or
lds
mov
sti
jecxz
test
stos
or
pop
outs
outs
movs
jmp
lods
mov
sub
and
xchg
popa
rcl
adc
shl
and
inc
pushaw
dec
inc
jo
push
movs
test
movs
std
hlt
nop
out
pop
cmp
retf
push
lods
test
aaa
cld
shl
jl
(bad)
xor
sub
stos
lds
inc
lahf
pop
js
(bad)
sub
mul
add
push
stc
cmp
test
pushf
sar
push
inc
adc
jg
sub
sub
jns
stc
and
pop
pop
and
add
sub
pop
cmp
fld
jno
mov
xor
pop
call
mov
ins
out
test
mov
in
sti
outs
push
inc
pusha
or
sbb
cmp
cs
enter
jbe
out
adc
jno
sbb
jmp
mov
and
or
pushf
lock
idiv
and
adc
sbb
mov
retf
test
and
out
sub
pop
jno
mov
loopne
dec
shl
mov
or
rol
push
shl
dec
out
gs
adc
ret
inc
jle
pop
and
and
mov
lahf
mov
and
jl
jle
inc
pushf
pop
pop
inc
lahf
(bad)
jecxz
jmp
and
std
push
push
jle
out
and
stos
frstor
add
mov
hlt
mov
mov
cwde
clc
sbb
cmc
cmc
unpcklps
lahf
xchg
or
mov
shr
dec
je
out
int3
push
jg
imul
push
inc
iret
cmc
stos
mov
mov
adc
and
jne
jge
or
test
outs
adc
xchg
adc
adc
cmp
mov
push
cli
and
pop
or
retf
dec
jl
dec
cmps
jmp
rcl
sub
pop
aaa
add
(bad)
pusha
ins
push
push
sub
inc
jg
pushf
test
data16
sub
xchg
jb
ss
adc
xor
and
cdq
xchg
mov
mov
mov
les
xor
mov
dec
mov
bound
sbb
mov
retf
mov
ret
fwait
push
push
popf
sbb
mov
out
xlat
xor
je
push
das
jmp
mov
cmc
sbb
(bad)
cmp
add
xchg
dec
fistp
pop
inc
fimul
jbe
xor
mov
push
leave
and
xor
sar
outs
inc
inc
movs
xor
adc
push
inc
cmp
add
fnstsw
pop
out
je
out
or
js
mov
dec
dec
cmps
jae
repnz
gs
mov
inc
pop
cmp
mov
gs
cmp
lahf
jae
cmp
cwde
and
jmp
xchg
jecxz
in
xchg
mov
lahf
ins
and
es
inc
test
(bad)
punpckldq
add
push
inc
(bad)
cmps
int
mov
loope
xor
pxor
mov
out
lods
ins
cmp
pop
imul
mov
cmps
jp
mov
bound
loopne
add
or
jmp
(bad)
lds
sbb
xchg
bnd
lahf
loope
mov
jecxz
xor
push
mov
cmps
sub
pop
fadd
and
cmps
inc
xor
mov
mov
inc
or
dec
lods
fwait
push
out
bound
call
jnp
jle
dec
add
dec
push
aam
mov
mov
in
sub
in
cmp
cmp
out
sub
mov
in
call
push
cmps
int3
mov
and
mov
cmps
(bad)
cmps
mov
mov
or
jne
mov
fist
and
test
mov
sbb
cmp
dec
mov
test
adc
aaa
jmp
out
aad
mov
mov
retf
push
frstor
ins
or
mov
mov
pushf
mov
mov
lea
ret
js
mov
xor
jb
dec
pop
xchg
jg
or
leave
into
mov
cmp
jb
and
jae
cmp
mov
cmp
and
pop
jns
aaa
inc
push
imul
fwait
call
test
fsub
push
test
and
idiv
add
in
into
push
inc
mov
inc
cdq
cwde
mov
push
shl
mov
push
sub
inc
js
cmovg
cmps
ss
push
cmp
hlt
loopne
push
cmp
sbb
jbe
out
mov
fcomip
mov
sbb
shl
in
mov
sub
xchg
aad
or
outs
test
mov
ins
and
lods
push
mov
inc
cmp
in
sub
dec
arpl
les
pop
aad
jae
pop
inc
xchg
push
fbld
and
mov
add
xlat
not
xchg
inc
mov
mov
(bad)
(bad)
scas
inc
shr
push
push
fcom
retf
inc
add
mov
fistp
jo
addr16
add
dec
pop
dec
das
adc
dec
sbb
sbb
push
inc
xrstor
pop
data16
cmps
xor
and
das
das
out
inc
pop
xor
in
jecxz
fist
jno
cmps
add
pop
cdq
ret
pop
adc
loope
test
sti
(bad)
mov
fwait
dec
xchg
ins
out
jo
sbb
or
mov
inc
je
sub
pop
pop
push
cmps
leave
push
hlt
add
ret
adc
es
(bad)
mov
or
rdmsr
jnp
and
mov
cmp
mov
sar
jmp
je
or
pop
mov
(bad)
mov
adc
cmp
mov
push
sub
dec
ss
adc
icebp
in
add
mov
je
push
psubusb
sahf
clc
mov
rcr
std
cdq
cmp
outs
dec
sbb
mov
pop
jne
push
add
int3
mov
mov
fmul
sbb
mov
aad
imul
inc
xor
shl
(bad)
aas
clc
sbb
xor
lock
mov
xor
ja
cmc
fild
rol
hlt
lds
sbb
adc
cmc
inc
pop
in
shl
pop
mov
xor
test
sub
jg
out
test
out
cwde
inc
push
push
das
jl
push
mov
pop
fstp
imul
(bad)
lods
pop
mov
add
jp
push
xlat
push
pop
mov
or
xor
test
xchg
push
or
lahf
sbb
mov
lods
loope
in
fcomp
pushf
add
cmp
das
test
lock
into
shl
clc
fild
xor
mov
into
or
push
sub
in
test
mov
or
stos
pop
outs
fistp
idiv
jmp
sub
mov
mov
lods
xor
pop
loop
push
addr16
mov
dec
sahf
pop
and
(bad)
cmc
and
imul
clc
stos
sbb
gs
mov
inc
sar
aam
push
mov
dec
jae
sbb
jb
xlat
mov
ss
or
leave
mov
js
rol
jae
mov
add
je
enter
mul
mov
movs
retf
lahf
mov
mov
dec
dec
adc
mov
sub
test
mov
and
test
sub
push
mov
lods
push
jle
stos
xor
xchg
int3
mov
mov
sub
cwde
sub
gs
dec
add
jle
or
ret
(bad)
(bad)
ja
les
push
sbb
mov
sub
sub
or
retf
mov
dec
push
arpl
mov
dec
add
adc
jne
dec
loope
maxps
ret
sbb
(bad)
mov
inc
cmps
jmp
mov
stc
icebp
add
mov
retf
xor
cmp
cwde
mov
xchg
cmp
mov
mov
pop
inc
jmp
arpl
mov
(bad)
push
jnp
jmp
mov
icebp
mov
test
xchg
mov
add
das
ss
mov
loopne
arpl
rcl
push
pop
or
jo
jl
pop
ret
int
xor
retf
test
push
jns
into
fisubr
xlat
mov
mov
and
xor
test
push
sbb
cmp
inc
aad
push
iret
aad
mov
add
cmp
mov
xor
or
aad
icebp
or
cwde
fs
stos
mov
in
hlt
movs
sub
inc
ret
cdq
xchg
scas
dec
out
xor
movs
jne
and
in
aas
cmp
or
fwait
push
mov
dec
adc
fdiv
das
shl
add
sub
push
mov
mov
jmp
sbb
mov
aam
popf
and
test
jno
iret
mov
(bad)
out
cmp
sti
sti
mov
out
jns
mov
pop
mov
sti
xlat
shl
mov
jp
cs
stc
cmp
lds
mov
dec
fisubr
mov
mov
mov
outs
add
sbb
xchg
push
mov
add
jmp
sbb
mov
fs
jnp
dec
ss
xchg
or
ins
mov
out
push
pushf
jae
cmp
jns
lods
mov
loope
sub
jge
pusha
jne
js
push
sbb
push
icebp
push
mov
je
cmps
cli
lock
pop
inc
jle
jne
outs
arpl
lahf
push
ss
pop
and
neg
cwde
pushf
call
loope
add
arpl
sbb
shr
mov
cld
cmps
adc
cdq
add
aas
leave
(bad)
into
jl
repz
xchg
sbb
ins
xor
jmp
retf
xor
ds
xor
retf
mov
pop
push
inc
je
int3
push
lods
mov
je
mov
(bad)
cwde
mov
sbb
sbb
(bad)
xchg
mov
jl
loop
dec
fistp
mov
pop
inc
sub
mov
push
loopne
mov
rol
loop
call
(bad)
mov
inc
fiadd
and
pop
ret
inc
ins
push
cdq
xchg
ins
mov
push
ins
xor
sub
arpl
nop
cmps
pop
mov
enter
ret
add
(bad)
pop
mov
jae
fnstsw
fild
retf
clc
pusha
sbb
int
xchg
mov
mov
sbb
mov
(bad)
cs
adc
and
int
dec
pop
test
push
fcmovbe
sbb
mov
mov
jns
dec
xchg
lods
adc
hlt
cmps
dec
cmp
push
addr16
fild
scas
in
call
fwait
mov
mov
xchg
movs
add
and
cld
(bad)
les
jns
in
paddusw
push
jge
cmc
fwait
mov
test
push
popf
add
mov
xor
retf
(bad)
scas
aam
mov
push
sbb
test
ficomp
test
sbb
sbb
jns
stc
xchg
outs
adc
jbe
cld
out
shl
int3
cmpxchg
test
mov
int
lods
mov
adc
dec
mov
push
adc
movs
mov
dec
iret
out
fistp
outs
les
shl
and
pop
sbb
scas
mov
push
retf
xchg
xlat
sahf
push
adc
xchg
mov
mov
adc
mov
mov
lods
call
ins
mov
pop
nop
out
shr
daa
jo
popa
cwde
mov
mov
in
sbb
push
jecxz
dec
cmp
inc
sahf
mov
fistp
cmp
mov
movs
adc
pushf
sbb
stos
popf
pop
push
adc
pop
dec
and
bound
push
and
mov
adc
arpl
xchg
aaa
sbb
ds
(bad)
cld
sub
sbb
popf
sbb
push
shl
jb
hlt
shr
fst
repz
retf
test
(bad)
xchg
dec
call
xchg
jo
xchg
dec
mov
push
adc
jmp
cmps
fist
push
pop
ja
mov
inc
cli
stos
push
sbb
call
inc
add
add
ror
xor
cs
mov
jae
xchg
and
pop
dec
and
icebp
dec
inc
movs
rol
aas
call
inc
and
js
mov
inc
push
add
jns
adc
mov
mov
xor
jb
sti
call
cs
ret
(bad)
idiv
push
mov
inc
into
add
adc
shl
shr
inc
sti
jo
xchg
xchg
aam
push
(bad)
mov
call
or
push
sub
jle
push
push
scas
clc
inc
pop
data16
jno
mov
xlat
sub
push
fsub
scas
xchg
mov
iret
(bad)
pop
dec
sbb
dec
add
fwait
or
ds
mov
lods
dec
pop
lds
jecxz
popf
or
addr16
(bad)
push
mov
jle
pop
gs
aad
stos
sub
push
loopne
cmp
xchg
test
fdivr
xchg
daa
mov
cmps
fs
pop
mov
les
lock
int
fisubr
sub
int
iret
sub
ja
mov
outs
xchg
outs
imul
xor
and
jno
sbb
mov
or
sub
push
js
dec
mov
cli
push
jg
jnp
push
mov
cmp
inc
cli
pop
adc
in
dec
fcmovnb
mov
dec
xor
lahf
popa
mov
mov
adc
sub
leave
cmp
out
mov
jmp
xchg
outs
imul
push
sbb
jns
(bad)
push
fld
sbb
mov
test
dec
mov
pop
pop
loop
popf
(bad)
sbb
xor
sub
(bad)
(bad)
jbe
scas
cmp
aad
mov
fstp
test
jnp
push
das
mov
push
mov
xor
icebp
popf
es
lods
dec
int3
mov
or
and
sbb
push
mov
aas
dec
cmc
jg
ss
cwde
mov
(bad)
xchg
jmp
mov
push
fisttp
pop
inc
call
rcr
or
(bad)
pushf
pop
std
push
xor
cmp
test
fist
shl
push
std
div
addr16
mov
(bad)
call
scas
and
retf
stos
mov
clc
jno
xlat
repnz
scas
sub
mov
aam
pop
sub
fisttp
js
popa
aam
int3
cmp
jecxz
fwait
not
xchg
dec
dec
outs
mov
aas
xor
hlt
sbb
adc
xchg
jmp
je
jmp
rcr
mov
loop
jo
dec
push
fiadd
mov
sbb
lock
jae
adc
sbb
push
rcr
(bad)
(bad)
mov
rol
add
jle
inc
xlat
inc
hlt
loope
cmp
xor
add
push
sti
mov
adc
adc
imul
xchg
mov
push
cmps
jo
sahf
cmc
fwait
cmp
lds
cmc
inc
fs
inc
mov
add
cmps
imul
inc
and
sub
xor
push
sbb
ror
out
out
xor
cmc
mov
ret
ffreep
jp
xchg
fmul
bound
inc
sub
stos
cmp
das
cwde
cdq
jb
xor
inc
stc
iret
mov
call
cmp
xor
loopne
add
lahf
dec
cmp
jns
sub
shr
les
mov
or
pop
mov
add
push
int3
lods
mov
outs
ret
sbb
mov
and
mov
cmp
cld
icebp
sti
cmp
outs
and
push
pop
adc
jbe
(bad)
cld
xlat
sbb
xchg
pop
loop
loopne
popa
out
test
fst
mov
inc
out
pop
or
dec
or
xchg
out
fistp
and
sub
cmp
pop
push
stos
or
or
add
gs
mov
cmp
jmp
mov
bswap
adc
xchg
daa
inc
sub
dec
mov
sub
das
and
sbb
lods
repz
out
nop
imul
rcl
sub
loop
cmpps
or
inc
clc
sub
rol
mov
pushf
clc
jecxz
outs
sbb
call
and
or
adc
xor
pop
jmp
leave
xchg
mov
shr
loopne
mov
iret
out
xor
adc
push
pop
imul
imul
inc
xor
ret
push
inc
ins
mov
inc
ja
mov
movs
or
cdq
pop
and
or
mov
inc
adc
and
sar
jbe
sub
sti
shr
ins
ins
or
inc
outs
xor
enter
ret
mov
call
adc
mov
push
rol
mov
ins
fucomip
out
shl
mov
jmp
sar
push
rol
pop
jae
cs
cdq
ins
movs
adc
iret
cmps
repnz
popa
pop
and
emms
addr16
into
fs
jbe
mov
mov
and
iret
(bad)
test
addr16
sysexit
add
xchg
mov
or
daa
and
lahf
xor
push
mov
jns
push
shl
loop
data16
mov
dec
mov
stos
sar
sub
repz
pop
out
inc
mov
shl
fwait
popa
push
out
cli
and
xchg
adc
cmc
xchg
outs
inc
add
cmc
inc
addr16
cmp
loop
loopne
int
jp
cmps
ja
fdiv
sub
xor
jl
fs
inc
mov
sub
rdpmc
sbb
adc
pop
cdq
(bad)
push
pop
xchg
pop
xchg
stos
int
xchg
mov
pop
mov
fcmove
jmp
mov
cmp
push
in
mov
xchg
xchg
lods
cdq
add
leave
cmps
leave
lock
loopne
dec
pop
dec
test
mov
imul
jmp
xchg
xlat
inc
pop
mov
jae
call
mov
test
cwde
cdq
xchg
xchg
jge
out
outs
mov
outs
repz
out
out
pop
(bad)
sbb
push
sub
jnp
inc
call
push
lock
je
xor
add
cdq
enter
loop
clc
or
not
push
jp
sbb
jbe
dec
stc
inc
leave
dec
jecxz
sar
(bad)
cwde
inc
sub
xchg
mov
dec
ja
dec
outs
scas
(bad)
xlat
outs
repz
neg
and
cld
popf
sbb
mov
mov
and
scas
or
mov
jp
imul
cmp
pusha
or
loope
int3
jnp
imul
push
sbb
cdq
mov
inc
pop
out
or
outs
mov
(bad)
aaa
es
cmp
or
icebp
mov
mov
vmread
aad
repz
(bad)
adc
shr
push
loope
fs
xchg
stos
inc
stos
pop
sbb
mov
in
adc
mov
fcomp
xchg
bound
cmp
add
dec
mov
es
(bad)
popa
dec
xchg
cwde
mov
sub
and
mov
pop
pushf
mov
cld
ds
sbb
movlps
sbb
mov
xchg
adc
mov
imul
scas
pop
cmp
xchg
(bad)
mov
jge
loope
cmp
xchg
rol
repnz
add
xor
stc
aaa
and
cs
add
pop
and
mov
aaa
mov
push
ret
add
adc
cmps
xor
mov
xchg
bnd
dec
and
jne
ret
xchg
or
into
int
aaa
cmp
ins
and
push
in
push
sub
sti
repz
jae
mov
daa
mov
jo
mov
inc
(bad)
ficom
inc
add
add
std
and
mov
lea
pusha
pop
shl
and
mov
cmp
push
pop
adc
and
les
xor
call
adc
lods
outs
push
enter
sar
push
xchg
xor
jmp
adc
(bad)
jmp
mov
mov
out
push
ficomp
xchg
lds
mov
or
fcom
mov
mov
lds
push
lds
jbe
enter
push
lea
dec
les
out
lock
fs
push
(bad)
pop
(bad)
and
rol
fld
cmp
mov
cmp
adc
mov
mov
fstp
pusha
sar
sub
sti
mov
lods
cmp
add
dec
das
mov
mov
pop
sub
or
arpl
mov
sub
cmp
ficomp
sbb
push
jmp
imul
aad
pop
imul
mov
je
xlat
or
out
nop
pop
xchg
rcl
adc
out
and
pop
in
jae
scas
mov
push
shl
pop
or
call
add
cmp
ins
push
leave
retf
ins
(bad)
cmp
ins
adc
cdq
mov
rcr
lds
sub
(bad)
jo
mov
pop
(bad)
adc
out
cmp
dec
and
sub
add
mov
xor
ss
inc
jns
loopne
aaa
imul
pushf
ds
neg
mov
push
jo
push
jecxz
jns
aam
int3
or
lods
jecxz
mov
xor
dec
fdivr
loopne
icebp
fucompp
lea
mov
inc
out
addr16
xchg
les
loopne
loop
pavgb
(bad)
std
mov
jmp
cld
xchg
adc
stos
inc
pop
aam
mov
shl
ds
pop
out
or
push
out
pop
lock
loopne
xchg
fst
jecxz
and
ja
(bad)
jmp
pop
test
cmps
cmp
and
ins
sub
jno
and
lds
push
pop
mov
lods
cmps
sar
jmp
out
mov
mov
adc
add
sub
repz
cld
repnz
push
mov
les
std
sub
cld
pushf
jo
cmp
or
int3
(bad)
jb
or
outs
fcom
retf
enter
aad
fsubr
mov
jl
in
mov
push
popa
mov
push
int3
pop
mov
xchg
mov
push
cmps
xchg
cli
imul
xor
mov
outs
pop
add
test
outs
inc
mov
ret
arpl
push
and
sbb
mov
mov
stc
sub
mov
jb
js
ja
ins
push
push
or
repnz
push
and
arpl
stos
ss
sar
call
jge
cdq
outs
inc
and
(bad)
jbe
dec
addr16
jno
and
xchg
(bad)
pop
xor
push
imul
mov
fisubr
mov
sub
xor
or
pop
pushw
dec
je
mov
stos
repz
pop
repnz
ins
and
call
or
fscale
in
pop
jae
ret
or
movs
ds
sbb
std
xor
in
hlt
cmp
lods
xchg
push
fdivr
int
xchg
aas
(bad)
xchg
or
fwait
sub
outs
jne
adc
sub
ss
cmc
scas
lds
jg
cld
mov
xor
jno
add
inc
fwait
das
mov
push
sti
adc
xchg
(bad)
jle
push
fmul
div
(bad)
loope
cmp
pusha
sahf
call
aas
mov
js
xchg
dec
push
outs
xor
push
icebp
stos
add
mov
pop
inc
pusha
fsubp
(bad)
mov
clc
bound
into
mov
jp
rcr
xchg
add
push
ins
cmp
hlt
daa
repnz
mov
fst
call
push
gs
push
dec
movs
int
stc
push
mov
sbb
xchg
inc
push
mov
inc
jmp
dec
gs
sub
inc
cmp
pop
cli
mul
out
cmp
push
mov
mov
int3
push
leave
sub
lods
mov
mov
xchg
int
dec
push
inc
ins
aaa
movs
fstp
add
ret
inc
cmp
loope
push
add
sbb
mov
dec
sbb
mov
dec
dec
in
pop
ror
mov
mov
xor
es
fcmove
cld
push
nop
icebp
rcr
mov
(bad)
sti
mov
sub
dec
mov
mov
loope
sbb
push
popa
cdq
mov
sub
add
mov
popa
cmp
icebp
sar
cld
cmps
pop
in
xor
xor
call
cmc
(bad)
pop
retf
mov
shl
fnsavew
gs
out
jno
je
or
sbb
adc
dec
popf
push
cmp
in
cmp
ret
push
lods
or
call
fstp
push
mov
outs
ss
inc
push
fmul
mov
imul
repnz
gs
push
std
int3
sub
xor
add
fwait
cs
retf
or
mov
sti
inc
sub
jg
pop
call
leave
shl
scas
sti
lods
or
pop
sar
fwait
lldt
push
mov
outs
shr
adc
dec
fidivr
push
popa
adc
jb
stc
movs
jb
test
cmp
add
mov
mov
mov
scas
ret
dec
adc
pushf
stos
retf
dec
jno
out
jmp
gs
or
sub
imul
test
das
adc
stc
push
inc
and
add
out
test
js
test
mov
and
mov
cmp
lods
pushf
lahf
jns
mov
sub
inc
sbb
outs
aas
mov
out
jb
arpl
dec
xor
data16
dec
lds
(bad)
mov
lock
cs
mov
mov
add
out
xchg
push
clc
and
ins
retf
jl
cld
pusha
in
or
sbb
jne
mov
or
xor
repnz
push
or
jg
fcomp
jge
xchg
les
aam
mov
sbb
xor
mov
stc
(bad)
mov
sbb
mov
inc
cdq
(bad)
inc
test
xlat
push
add
out
jb
imul
pop
and
cmp
mov
push
pop
enter
std
pop
out
call
dec
test
test
scas
jmp
shr
out
arpl
inc
cli
shl
add
pop
lods
adc
pop
xchg
cmp
cmp
outs
inc
popa
inc
es
fdiv
repnz
mov
mov
pushf
leave
jmp
mov
mov
or
ins
ss
sub
daa
mov
sbb
je
lods
inc
mov
fs
loope
jae
mov
cwde
cld
inc
sar
sub
jmp
and
mov
add
mov
pop
repz
xor
pushf
shr
pop
dec
sub
and
clc
add
fst
addr16
stc
aaa
xchg
loope
inc
in
arpl
pushf
fs
pop
out
xor
js
fisub
aaa
and
inc
ins
(bad)
sbb
out
xchg
mov
scas
dec
add
pop
mov
mov
sub
add
pop
cli
cmps
xchg
add
icebp
in
cmp
iret
xor
pop
stos
sbb
in
jns
scas
sub
(bad)
mov
sbb
call
cmp
shl
les
fcom
fisubr
pop
loop
and
sbb
dec
dec
lods
pop
mov
shl
xor
mov
jle
sbb
test
jb
cwde
cmc
or
sub
lock
repnz
(bad)
(bad)
push
xchg
push
retf
cmp
cs
sub
shl
aam
sahf
or
aad
xor
addr16
or
mov
out
mov
or
pop
ror
inc
jb
add
inc
fcom
call
fisubr
push
cdq
outs
push
pusha
fs
idiv
dec
inc
test
movs
pop
shr
jns
loope
add
cmp
push
into
sbb
push
jbe
out
loop
bound
mov
imul
mov
or
out
sbb
jb
and
cmp
jp
popa
rcl
(bad)
and
ret
push
adc
pop
push
gs
jno
out
mov
das
inc
inc
inc
hlt
or
cmp
sub
sub
cmp
push
fwait
mov
aaa
mov
popf
and
mov
mov
out
adc
jne
adc
adc
xchg
ret
jl
icebp
stos
cmp
mov
cmp
out
jne
rcl
jo
or
cmp
mov
xor
das
test
push
mov
sub
cld
dec
cld
dec
sub
icebp
shr
or
je
ja
sub
sub
xchg
ds
hlt
add
fimul
jne
retf
fadd
push
xchg
xor
jo
int3
mov
inc
popa
int3
push
sub
addr16
fwait
inc
test
cmp
(bad)
push
je
out
xchg
push
push
sub
loop
stc
stc
outs
sub
sbb
add
(bad)
hlt
bts
jmp
ja
scas
cmp
cmp
xor
out
mov
jecxz
fbld
out
test
pusha
xchg
inc
cmp
adc
or
int
fdivr
and
leave
sub
aad
xchg
stos
xchg
xor
retf
sti
lods
cmp
fsubr
add
sbb
pusha
pushf
(bad)
aam
lods
leave
out
cmc
imul
int3
stc
dec
mov
imul
jo
outs
loop
sub
push
fdiv
inc
pop
sub
imul
sti
inc
ret
inc
sti
js
cld
aam
fs
push
pop
adc
fs
pop
xchg
mov
add
sbb
pop
std
push
mov
enter
sahf
outs
cmp
aam
fld
aad
scas
loope
ins
cmp
std
out
out
test
mov
rcr
int
sub
push
and
pop
xchg
pop
push
xchg
icebp
(bad)
mov
sub
jnp
test
and
jno
xchg
push
adc
in
ds
shr
jp
mov
loopne
mov
iret
jp
mov
push
retf
icebp
shr
je
pop
mov
push
popa
sub
ins
iret
(bad)
mov
add
aas
outs
js
data16
push
lahf
or
icebp
adc
cli
out
xchg
sub
cmps
jecxz
jns
shr
push
je
cli
cmc
sbb
push
das
push
js
jl
mov
test
jmp
cmp
scas
loopne
out
out
xchg
push
fwait
mov
rol
mov
neg
gs
push
fld
sub
movs
ja
dec
dec
xchg
xor
adc
mul
push
adc
pop
pop
mov
inc
xor
jge
adc
dec
mov
inc
or
push
ins
and
test
jge
and
repz
pop
jmp
fstp
cs
data16
vpsubd
fstp
outs
rol
enter
push
and
sbb
add
in
pop
mov
jno
push
pop
cdq
mov
outs
push
add
mov
and
xchg
lea
xchg
sbb
fstp
dec
xor
lods
pcmpgtb
sbb
clc
aaa
loope
jmp
cmps
xchg
mov
repz
das
mov
sahf
(bad)
(bad)
sub
ins
jmp
push
das
mov
div
mov
xor
mov
push
adc
xor
nop
imul
or
stos
xlat
dec
dec
pop
sbb
adc
and
or
sahf
cwde
je
sbb
adc
imul
cmc
xchg
(bad)
jg
ins
nop
push
nop
sbb
inc
jne
mov
sar
dec
fsubr
mov
je
inc
jl
ret
push
imul
and
psrlq
sbb
inc
fisub
jg
fsubr
ret
shl
jmp
mov
mov
cmps
dec
test
push
inc
icebp
out
pop
retf
dec
in
cmp
jb
add
mov
cdq
cmp
inc
test
push
fcomp
mov
rcl
(bad)
(bad)
sbb
pop
inc
mov
xchg
push
aam
nop
lea
jp
mov
or
xchg
pop
sbb
mov
dec
in
cmp
aam
ins
or
pop
fmul
mov
sbb
jbe
or
mov
cmc
das
xor
loop
jae
test
push
icebp
fimul
in
dec
pop
jg
ss
int
shr
mov
mov
int3
fs
push
mov
shl
es
xchg
lock
adc
out
lea
pop
sub
dec
mov
fcmovnbe
and
retf
add
sub
scas
in
jp
sbb
cmps
or
cli
and
sti
sti
xchg
xor
loope
mov
and
adc
nop
add
and
sub
inc
ins
adc
add
jo
fidivr
call
push
call
cmps
dec
sub
loope
mov
xchg
outs
fwait
enter
jl
in
int3
mov
xchg
jo
imul
ret
hlt
sbb
inc
sub
pop
dec
inc
hlt
dec
int3
jo
mov
sub
xor
outs
cmp
adc
test
fs
cwde
imul
data16
mov
inc
cwde
jae
mov
sub
push
int
and
cmc
mov
jne
aad
lahf
enter
cli
jno
psubsb
sbb
leave
dec
pop
imul
cmp
enter
jmp
(bad)
pop
mov
ja
pop
xor
and
dec
jecxz
aam
mov
sbb
enter
loop
inc
mov
ins
push
xchg
repz
inc
rol
and
inc
dec
stos
sub
add
cmp
das
popa
pop
mov
imul
shrd
sbb
push
sub
cdq
aaa
adc
arpl
mov
cdq
xor
jb
or
test
and
shr
dec
push
stos
pop
xor
data16
push
push
pop
(bad)
in
addr16
xor
cli
scas
cdq
inc
cmp
push
push
push
fsubr
jmp
inc
test
ds
jnp
mov
push
(bad)
cld
scas
ds
mov
cmps
hlt
mov
xlat
pusha
xor
popa
les
adc
clc
int3
mov
mov
stos
mov
xchg
icebp
(bad)
pop
fld
scas
pop
jbe
cli
push
cmps
call
fcmovbe
sub
jo
fwait
cwde
or
ret
out
aas
mov
iret
pop
push
adc
xlat
adc
out
ins
mov
ss
sbb
jmp
je
mov
inc
dec
mov
sbb
rol
inc
out
mov
fsub
retf
push
pop
push
fs
js
push
adc
sti
mov
test
mov
jns
jmp
cmp
(bad)
in
adc
gs
pop
xchg
mov
mov
rol
hlt
sti
hlt
mov
lds
add
pop
mov
call
shl
retf
or
jb
inc
sti
inc
ins
ds
inc
xchg
dec
jmp
jg
add
hlt
xor
push
mov
mov
nop
inc
popf
icebp
std
das
push
mov
call
jl
test
shr
ret
mov
pop
ficom
mov
inc
xor
fbstp
xchg
(bad)
out
jno
mov
xchg
mov
push
stos
jnp
cwde
in
or
mov
jnp
out
xor
call
cmp
ret
sahf
mov
scas
rcr
sbb
mov
xchg
scas
shl
pusha
or
(bad)
fwait
(bad)
pop
adc
xor
sti
xor
xor
punpckhbw
in
scas
and
or
lea
xchg
add
nop
pusha
lahf
shr
pop
push
(bad)
fdivr
push
retf
scas
aas
inc
das
cmps
pop
sbb
sbb
ror
lods
movs
dec
xor
xchg
push
cdq
ds
leave
push
sub
cmp
repnz
repz
and
mov
or
popa
(bad)
into
in
and
adc
add
sbb
mov
fstp
in
jge
sub
jo
inc
xchg
(bad)
cmps
scas
inc
outs
pushf
js
jmp
mov
push
int
xchg
jne
pop
sub
js
test
ja
xchg
out
and
mov
adc
out
dec
fisub
lds
xchg
or
cli
cdq
call
jle
outs
inc
movs
je
mov
in
cmc
ret
xlat
dec
cmp
arpl
movs
out
mov
adc
mov
cdq
xchg
sahf
or
adc
xlat
pop
aad
and
cmc
jae
pop
add
or
call
mov
jnp
das
repnz
ror
pop
pslld
mov
imul
add
scas
sub
sub
sub
xchg
aaa
cmp
add
xor
retf
rol
jb
out
and
dec
jnp
sbb
(bad)
add
pop
clc
js
gs
outs
(bad)
icebp
push
cdq
dec
sub
call
sbb
mov
add
pop
push
or
dec
xchg
add
mov
mov
mov
xchg
cmc
shl
out
mov
cmp
cmp
mov
fmul
push
je
mov
mov
daa
add
in
das
lods
mov
mov
jae
add
stos
call
pminub
lea
jge
sbb
fimul
pop
pop
adc
data16
(bad)
ds
inc
mov
and
mov
fs
psllq
retf
dec
inc
ins
lods
or
push
push
jnp
test
jmp
adc
mov
xchg
mov
mov
mov
xor
xor
push
js
aad
mov
imul
sbb
es
enter
xchg
xlat
stos
push
ja
loope
jp
or
add
and
cmp
cld
jbe
push
sub
and
jb
cmp
pop
inc
aaa
xor
lods
sbb
and
stos
adc
push
adc
and
mov
push
sub
cli
in
in
xor
or
js
or
inc
ret
adc
ret
mov
lahf
das
aad
leave
test
push
popa
out
and
call
jne
mov
sti
or
dec
outs
adc
retf
xor
movs
icebp
loopne
rcr
xchg
ins
call
xchg
xor
das
inc
adc
rcr
imul
shl
dec
fucomi
jbe
pop
push
test
sub
xrelease
jo
dec
mov
and
sbb
adc
stos
into
mov
add
fst
cld
xchg
ror
adc
stos
js
icebp
xchg
gs
sbb
std
(bad)
ficom
pusha
sbb
inc
add
sbb
cmp
fisubr
(bad)
out
cwde
or
or
dec
push
scas
ret
or
mov
std
xlat
popf
(bad)
mov
sub
xchg
out
lods
clc
xchg
push
jnp
jo
cwde
add
ins
inc
pop
bound
and
cmp
in
out
push
cmp
add
sbb
bound
cwde
nop
sbb
pop
daa
pop
xchg
add
jmp
aad
dec
pop
mov
pusha
repz
jge
and
cli
loope
sub
pop
mov
rcr
loop
stos
loop
fwait
ret
or
(bad)
adc
xlat
jl
jle
mov
in
push
push
cmp
leave
(bad)
cli
pop
mov
jmp
mov
jg
xchg
and
imul
test
jge
aam
stos
adc
popf
(bad)
adc
repnz
mov
pop
xchg
jg
mov
imul
(bad)
mov
sub
std
pop
ja
sbb
lds
jb
mov
sbb
and
retf
loopne
xor
out
frstor
pop
repz
ins
movs
sbb
popa
add
adc
fdivr
mov
pop
retf
xchg
jecxz
and
inc
int3
inc
adc
iret
(bad)
je
adc
leave
movs
inc
pextrw
or
xlat
and
sbb
adc
(bad)
push
nop
test
mov
popf
ror
stos
dec
gs
xchg
loopne
mov
inc
sbb
imul
sub
sbb
xor
cmps
fs
enter
and
pusha
dec
dec
adc
adc
std
stos
pusha
rcr
into
(bad)
ins
repnz
inc
mov
das
das
ins
arpl
or
(bad)
add
loope
mov
aas
mov
out
not
jno
fs
xchg
out
mov
cli
inc
or
xor
xchg
fwait
call
retf
std
sub
and
jbe
jmp
and
pop
and
push
dec
jbe
push
loop
cdq
int
and
retf
adc
and
mov
and
xchg
pop
adc
call
rcl
inc
xor
or
test
add
push
dec
inc
push
sbb
icebp
cmc
jmp
(bad)
jmp
and
or
and
jmp
inc
shl
test
adc
retf
dec
xchg
repnz
cmp
jnp
cmc
aas
repz
test
xor
shr
jns
or
sbb
aaa
jge
pusha
mov
adc
dec
cmps
fucomi
mov
push
cmp
cmp
into
cdq
jae
repz
fstp
scas
adc
outs
jns
sbb
or
inc
lea
or
jp
xchg
das
ins
or
cmp
shl
inc
dec
xor
push
add
mov
add
retf
mov
wbinvd
outs
int
stos
and
dec
repnz
in
daa
mov
and
sbb
cmp
or
mov
xlat
mov
addr16
sbb
fwait
push
mov
xor
push
add
daa
jmp
mov
jge
push
loop
mov
mov
lods
cmp
int
std
pextrw
lea
jae
dec
arpl
and
fwait
dec
ss
inc
jge
out
movs
dec
hlt
fsubr
fstp
sub
jl
mov
jnp
movs
addr16
aam
dec
jbe
push
or
push
push
dec
inc
ror
pop
pop
inc
sbb
pushf
sti
aad
addr16
call
mov
sbb
inc
inc
jmp
mov
jae
xchg
fild
jecxz
or
xor
daa
pop
addr16
in
lds
push
dec
jmp
xor
xchg
dec
lahf
push
xor
lock
jb
mov
xchg
fild
xor
and
push
push
neg
out
(bad)
mov
and
lea
jmp
lock
sahf
sub
xchg
mov
jns
arpl
xor
std
xor
or
pop
xchg
and
arpl
jle
jne
das
gs
sub
or
daa
mov
cli
xlat
sub
call
mov
pop
dec
sub
icebp
sub
lock
fdivr
outs
and
cmp
pop
ror
jns
and
stos
pushaw
stos
mov
icebp
jo
xchg
popa
jne
sbb
adc
outs
jns
scas
enter
out
test
pop
in
(bad)
push
adc
inc
jo
dec
mov
pop
jl
cmp
stos
cmc
fild
dec
outs
jo
push
push
(bad)
mov
retf
(bad)
lahf
or
imul
jne
adc
add
movs
sbb
inc
pop
sub
out
mov
jb
(bad)
adc
jb
in
inc
fiadd
mov
xchg
ss
sahf
lock
pop
lock
xor
xchg
nop
test
fwait
xchg
jg
popf
repz
push
sub
stc
arpl
push
push
inc
sub
mov
leave
inc
out
movs
add
ror
je
adc
mov
dec
xor
daa
dec
and
movs
cmp
rol
push
pop
test
mov
addr16
xchg
je
ds
popa
push
sbb
je
inc
stc
add
jns
fcomp
fld
dec
cwde
sub
sub
dec
hlt
leave
clc
aas
pop
ret
ins
pop
in
fisubr
pusha
add
or
pop
aad
pop
(bad)
push
lods
aad
fistp
mov
mov
in
test
fst
fisubr
rcr
cmp
adc
rol
pop
jbe
mov
lods
xchg
pop
fs
push
sub
ja
cmp
mov
jae
call
loopne
cmp
lods
sub
lahf
arpl
cdq
cmp
mov
outs
mov
iret
les
cmp
outs
iret
lods
xor
inc
sub
nop
fist
sbb
(bad)
das
xchg
or
cmps
push
and
(bad)
inc
adc
or
call
aas
mov
inc
(bad)
mov
cmp
sub
fisub
mov
cmp
mov
dec
call
push
retf
mov
inc
adc
dec
xor
lods
lods
sub
nop
jns
jo
dec
(bad)
inc
cmps
in
outs
sbb
nop
dec
pop
adc
je
fwait
cmp
(bad)
dec
lds
bound
jb
call
mov
icebp
daa
aaa
xor
sub
mov
or
outs
ror
dec
das
ins
sbb
sbb
mov
(bad)
push
in
or
cmp
fimul
(bad)
sub
lock
mov
adc
jge
sub
and
push
cld
gs
ret
ror
cs
call
test
cmp
sbb
and
jnp
xor
addr16
scas
jmp
sub
ret
mov
add
sbb
add
fcomp
dec
xchg
adc
inc
pop
xor
mov
cmp
sub
dec
cs
jo
fistp
xchg
cmps
in
call
jns
adc
cmp
jp
sub
mov
cmps
popa
ffreep
pop
mov
push
in
xchg
inc
dec
into
adc
cld
and
cwde
inc
popf
mov
call
ja
popf
dec
neg
int3
es
pop
cld
test
repz
cmc
sub
stc
sub
add
std
sbb
test
outs
xchg
aaa
sub
mov
mov
pop
call
stos
jg
repz
rol
adc
inc
jp
or
xchg
into
iret
mov
xchg
jge
sub
daa
or
pop
sbb
mov
xchg
idiv
add
sbb
out
mov
inc
and
ja
cli
outs
sbb
mov
rol
shr
dec
ja
push
out
and
add
scas
xor
jae
dec
es
movs
push
fidiv
mov
sub
arpl
lods
dec
xor
jecxz
jmp
xchg
mov
fidiv
push
scas
fiadd
adc
xchg
imul
in
pop
mov
(bad)
adc
sbb
call
pop
mov
lods
xchg
movs
data16
xor
std
and
fcom
mov
lea
imul
mov
mov
cli
inc
sub
xor
mov
push
iret
push
pop
fdiv
rcpps
sahf
stc
imul
in
jg
pop
dec
xchg
out
jo
adc
mov
js
xchg
mov
shr
sbb
or
mov
sbb
mov
(bad)
in
and
std
pop
mov
pop
pop
cmp
mov
out
and
cmp
or
jg
and
xchg
dec
inc
adc
xlat
stos
push
sub
fsubp
movs
inc
mov
xor
xchg
int3
add
repnz
cmp
aad
sahf
inc
pushf
(bad)
xchg
add
xchg
and
push
cmp
fdiv
imul
(bad)
es
adc
ins
inc
cmp
ja
cmp
fnstsw
pop
mov
add
aad
mov
jle
mov
in
mov
(bad)
stc
retf
dec
mov
xor
loop
and
popf
(bad)
out
pop
inc
movs
inc
dec
sar
ret
mov
(bad)
jg
int
mov
xchg
int
jmp
popa
sti
cmps
adc
shl
xor
ja
daa
aaa
fs
cli
xchg
xor
mov
jne
mov
test
(bad)
or
adc
mov
mov
add
ror
fistp
push
or
push
gs
mov
repz
sbb
pushw
sub
lock
neg
jmp
scas
ins
loopne
fmul
sbb
dec
enter
add
jno
out
xchg
push
mov
pop
dec
arpl
in
ror
jmp
lds
cld
rol
adc
xchg
mov
mov
icebp
and
add
jae
stos
mov
add
call
adc
add
xor
ins
cmp
sub
sub
shl
push
hlt
xchg
cmp
div
jmp
and
loopne
movs
push
pop
or
pop
xor
fld
push
xor
sub
into
test
push
js
mov
xchg
in
pushf
push
imul
or
sub
psubb
daa
ret
pop
pusha
xor
nop
test
add
xchg
mov
out
xor
push
jp
rcl
(bad)
xchg
fstp
lods
mov
cmp
or
sbb
cmps
arpl
dec
jb
inc
inc
jo
mov
lods
stos
mov
cmps
push
je
and
adc
adc
mov
inc
xor
popa
lea
cmps
fdiv
into
sbb
sar
sub
xchg
adc
test
xor
pop
mov
push
and
movs
mov
loope
je
push
jns
cmps
lods
jb
dec
imul
mov
cmp
cmp
sub
sub
ret
or
test
cmp
in
call
es
cmp
retf
mov
jle
fcmovnu
(bad)
iret
cmps
je
je
retf
sbb
push
jecxz
xchg
xlat
inc
push
div
cdq
ja
lock
aas
rol
xchg
imul
push
jle
pop
adc
inc
ins
jmp
jl
jmp
jne
pop
fild
mov
js
(bad)
and
xchg
stos
push
daa
ja
or
std
jecxz
and
xchg
retf
jo
leave
xor
out
xlat
xchg
push
enter
push
lea
cmps
mov
mov
leave
in
sub
movs
and
mov
scas
or
xor
adc
mov
inc
xchg
pop
add
sub
into
dec
mov
jp
mov
ins
adc
xchg
ja
add
aaa
fwait
int
jge
shl
dec
jge
aad
cmc
lds
rcr
neg
clc
add
xchg
dec
fxtract
sbb
push
stos
out
dec
dec
dec
aam
fwait
imul
mov
loope
aam
ds
jns
xor
push
inc
inc
loope
mov
loopne
mov
and
nop
sbb
into
das
in
push
jle
fimul
lds
adc
jo
shl
fcomp
or
xlat
fist
inc
iret
mov
pushf
sar
mov
in
sbb
mov
dec
lahf
shl
jnp
add
mov
mov
rcl
add
dec
das
ins
adc
leave
js
sbb
popf
mov
add
fwait
outs
add
push
jmp
jbe
xchg
mov
push
repz
movs
sub
pop
ror
scas
jbe
dec
cmp
fstp
mov
cmp
fild
lds
fstp
sub
mov
pop
xor
inc
jp
sahf
cmc
and
jle
sti
push
iret
mov
imul
bound
enter
and
push
fs
ss
dec
mov
and
ja
jmp
lds
(bad)
(bad)
mov
pushf
aam
mov
stos
adc
sbb
inc
dec
add
or
or
sar
ss
push
pusha
clc
mov
ret
icebp
fwait
in
fucomip
daa
out
lea
pop
movs
and
bound
pop
jo
cmc
sub
pop
lahf
push
data16
mov
mov
or
stc
xor
mov
add
push
jecxz
or
outs
adc
imul
jne
scas
sub
sbb
mov
mov
mov
sub
popa
mov
add
bound
add
xor
call
rcr
lea
test
aad
push
push
cs
push
xlat
cmp
push
mov
mov
(bad)
std
xor
call
cli
cmc
inc
sbb
sahf
cmc
stc
pop
pop
nop
pop
inc
mov
ja
xchg
repnz
adc
or
sub
xchg
xor
mov
mov
dec
lods
lock
inc
push
and
jns
jecxz
lods
(bad)
mov
gs
dec
jl
ds
mov
scas
jo
call
mov
or
sub
xor
jmp
cwde
cmp
push
scas
and
dec
xlat
fsub
sbb
xchg
sub
or
add
sahf
icebp
out
mov
rcr
sub
repnz
ja
cmp
xchg
adc
ret
inc
icebp
push
adc
aam
(bad)
push
(bad)
jae
arpl
add
loope
inc
int
adc
fs
movs
sbb
outs
xor
ja
mov
lods
test
ds
inc
and
std
out
ret
pop
fwait
icebp
arpl
dec
fidivr
rol
mov
cdq
fs
xor
xchg
xor
and
scas
and
sub
test
fwait
push
xor
outs
inc
adc
popf
cmps
xchg
scas
mov
xchg
in
mov
and
inc
dec
scas
push
push
pop
neg
adc
push
mov
aaa
hlt
popf
xlat
ret
lea
les
adc
jp
inc
cmp
push
loope
mov
xchg
pop
addr16
adc
lock
adc
ss
ins
cmp
fldcw
pop
or
cli
call
mov
adc
jge
mov
jne
scas
cmp
adc
aaa
mov
cmp
xor
jg
push
and
dec
aad
daa
adc
sahf
std
fisttp
scas
inc
jecxz
jno
(bad)
(bad)
add
pop
jmp
aad
and
dec
(bad)
in
test
xchg
xor
mov
adc
push
pop
or
jecxz
xor
and
cmp
jo
pop
scas
in
mov
std
mov
sahf
hlt
mov
(bad)
cld
aaa
add
jg
leave
ror
pop
and
ja
mov
imul
lock
pop
repz
xchg
test
mov
bnd
fdiv
lods
mov
jmp
pop
std
shr
sub
out
das
jecxz
ret
loope
div
jae
pop
shr
fdivp
cwde
lods
mov
in
push
fst
mov
xchg
mov
into
xchg
or
idiv
xor
cmp
icebp
mov
(bad)
pop
mov
pop
xor
sbb
stos
lgs
mov
mov
aam
test
dec
bound
js
push
jg
add
pop
or
xor
jae
dec
push
push
push
mov
imul
gs
retf
adc
out
push
add
iret
xor
cwde
inc
call
jne
xor
xchg
adc
push
push
les
popf
jge
mov
inc
ins
ret
mov
jp
inc
dec
xlat
rcr
sbb
mov
mov
mov
out
push
pop
mov
ins
imul
adc
jmp
or
fadd
lods
sub
jmp
iret
or
rcr
add
ja
popf
jecxz
mov
sbb
fisttp
iret
pop
mov
enter
jg
xchg
dec
sbb
lods
stos
dec
mov
fdivr
(bad)
shr
pop
push
sbb
sub
fwait
popf
pushf
imul
shl
inc
mov
mov
jmp
add
xor
add
adc
lods
cdq
pusha
jp
sahf
stc
xchg
mov
out
ja
out
lahf
mov
add
xchg
(bad)
pop
pop
fisubr
sbb
push
leave
loope
inc
stos
icebp
fadd
retf
sti
ror
repz
loope
scas
cmp
neg
push
ss
test
jp
cli
ja
jmp
movs
jle
xchg
mov
xor
jns
xor
or
jmp
mov
shl
jae
push
jnp
xchg
outs
xlat
mov
int
or
movs
aam
test
or
ins
stc
movs
push
dec
push
stos
mov
xchg
push
adc
xor
xchg
and
mov
mov
fcmovbe
jl
xchg
fld
popf
sub
movs
stos
adc
test
push
mov
sub
inc
or
inc
inc
pop
bound
lock
push
xchg
sub
movs
pop
and
sbb
hlt
test
lea
sbb
je
mov
cmp
call
mov
sub
call
(bad)
mov
clc
aaa
stos
ss
lods
test
les
cmp
bnd
xor
add
inc
mov
adc
cmp
or
cld
scas
mov
xor
cmp
rol
fisttp
sbb
push
std
adc
or
sahf
sub
psllw
mov
push
lods
jg
cmps
fcmovu
hlt
rol
mov
xor
or
jns
mul
mov
push
cmp
ret
adc
ret
mov
cmps
in
push
push
push
imul
mov
cwde
lea
jmp
(bad)
sti
scas
xchg
push
scas
sahf
test
cdq
inc
movs
mov
push
push
xchg
pop
sahf
aad
adc
adc
pop
and
mov
cld
test
pop
dec
(bad)
mov
ss
xchg
inc
jns
(bad)
icebp
xchg
jns
lock
daa
lea
mov
mov
into
or
daa
jne
or
call
add
sbb
jp
and
fst
scas
mov
lds
adc
rcl
pop
adc
or
(bad)
call
adc
mov
pop
mov
push
ret
pop
inc
inc
shl
push
pop
pop
sub
mov
test
cdq
mov
mov
idiv
and
sub
sti
cli
add
jne
stos
aam
xor
mov
sub
xor
xor
sbb
jge
mov
add
mov
push
mov
pop
adc
rcpps
jecxz
and
mov
cdq
test
mov
sub
and
adc
icebp
je
gs
mov
leave
mul
stc
mov
adc
ret
jle
addr16
pop
mov
fisttp
mov
or
xchg
mov
adc
jns
repz
imul
dec
mov
aam
mov
shr
fs
and
out
xor
jmp
cmp
dec
clc
inc
iret
inc
xchg
stos
out
xor
rol
retf
mov
pop
cmps
or
dec
cmp
dec
arpl
daa
(bad)
push
test
mov
test
jmp
hlt
popf
mov
inc
popf
mov
and
add
pop
pop
bound
imul
xor
mov
mul
sbb
iret
jle
out
fmul
push
push
add
test
test
pop
cdq
pop
cmp
adc
push
loope
cwde
mov
xchg
call
add
call
gs
add
push
mov
mov
xchg
mov
rcl
(bad)
test
neg
pop
mov
rcr
mov
hlt
pop
add
shl
shl
leave
push
pop
adc
mov
mov
and
(bad)
mov
popf
mov
cmp
int
test
sar
push
dec
je
loopne
les
pusha
imul
cmc
jle
cs
lea
sar
xor
mov
xchg
push
addr16
dec
(bad)
in
popa
cdq
push
or
mov
pop
repnz
shl
test
jle
mov
fldcw
inc
jne
push
push
and
jge
jg
push
pushf
adc
mov
mov
scas
sti
sar
sub
sbb
mov
push
dec
inc
dec
inc
push
or
stos
and
enter
pushf
fidiv
pop
xlat
enter
mov
mul
inc
sub
mov
retf
mov
add
sub
pop
pop
aaa
popf
ficom
jne
jo
stos
push
lods
in
pop
dec
test
fst
cdq
mov
inc
mov
pusha
cmp
inc
push
retf
adc
rol
cmps
inc
cdq
aaa
outs
mov
xor
jb
push
mov
pop
pop
add
push
pop
mov
test
push
pop
mov
js
lds
xchg
jbe
adc
xchg
fsubrp
push
stc
adc
scas
movs
stos
cmp
push
inc
adc
call
loopne
pop
loop
cwde
xchg
add
cmp
xchg
inc
xor
mov
enter
pop
add
test
int3
adc
sbb
fidiv
adc
fsubr
mov
sahf
rsqrtps
cmps
push
adc
inc
stc
xor
mov
push
dec
xchg
push
jno
imul
addr16
push
inc
inc
mov
icebp
in
pop
(bad)
mov
scas
sub
clc
xor
nop
pop
enter
mov
div
imul
pop
mov
(bad)
dec
inc
add
or
cmpxchg
dec
mov
cs
cmp
aam
mov
lock
addr16
bswap
xor
daa
cmp
cmp
xchg
inc
jnp
or
push
not
cmp
out
sar
stos
pop
shl
lahf
out
das
mov
sub
xchg
stos
mov
pop
(bad)
das
lea
dec
stos
(bad)
lahf
add
sbb
cmp
or
leave
push
and
sub
data16
in
mov
push
jl
pop
mov
mov
mov
adc
jo
pop
mov
push
movs
cmps
pop
pop
mov
add
cmp
mov
mov
dec
sub
jge
add
push
das
out
retf
and
cli
cpuid
leave
inc
out
mov
sub
jo
dec
cld
jecxz
sbb
ja
xor
ja
les
and
add
inc
or
lods
in
pop
jmp
cmps
pop
mov
fnstenv
bound
test
jno
es
outs
(bad)
test
push
push
sub
jae
pop
sbb
push
test
mov
js
inc
or
mov
cmp
aas
fisttp
ret
xchg
cld
mov
(bad)
xchg
jp
xor
or
ins
sbb
jg
push
addr16
cwde
loope
sub
ins
xchg
cmovae
pop
dec
mov
nop
and
popf
jnp
lea
jge
dec
scas
(bad)
mov
push
or
popa
stos
mov
daa
out
sub
aad
sti
or
and
and
sar
into
data16
adc
push
pop
add
add
adc
add
cmps
cdq
jmp
mov
sub
lock
ja
hlt
dec
fs
shl
mov
inc
ins
adc
test
cli
cmp
dec
push
pop
sbb
ins
sbb
add
xchg
aad
dec
inc
jne
pop
xchg
and
pop
in
dec
(bad)
neg
xchg
je
jmp
and
dec
add
xchg
jmp
mov
sub
adc
jae
dec
and
fistp
mov
push
push
enter
lods
mov
mov
aam
pop
xchg
mov
rcl
xchg
adc
push
clc
add
cli
jmp
cmp
fisttp
jae
xor
cli
or
into
stos
inc
arpl
mov
pop
push
in
les
adc
and
push
push
mov
leave
dec
sub
imul
fs
std
adc
leave
mov
add
icebp
pusha
cli
add
sub
sub
mov
jmp
fild
in
dec
or
dec
sbb
or
inc
push
xor
mov
shl
dec
xchg
xor
mov
retf
sub
mov
aaa
add
sbb
push
ds
adc
stc
cs
out
sub
cs
rcr
iret
mov
add
mov
jns
mul
lods
jp
xchg
push
into
jb
push
mov
pop
mov
idiv
jp
fwait
pop
xor
(bad)
adc
push
adc
add
sbb
int
int
jnp
mov
inc
push
fiadd
inc
inc
test
in
xor
int3
into
inc
cli
mov
into
push
inc
fwait
xchg
mov
or
or
fdivr
inc
and
and
add
inc
ss
call
xchg
jns
mov
je
inc
mov
pop
jae
sub
fs
and
addr16
jno
gs
std
pop
es
mov
cmp
ins
mov
(bad)
jbe
xor
das
aas
stos
add
cwde
aaa
mov
cdq
mov
lock
js
push
out
push
jae
mov
mov
mov
push
mov
xchg
jnp
sbb
js
movs
mov
loopne
js
(bad)
and
aaa
mov
ds
leave
xchg
jp
cwde
push
out
push
push
jecxz
cmps
jo
push
xor
sbb
stos
retf
mov
pop
add
out
mov
adc
dec
xchg
das
pop
and
push
mov
or
cld
push
pop
xchg
inc
jmp
aam
lahf
or
or
dec
dec
fisub
adc
jg
cmp
xchg
xchg
and
gs
jne
pop
lds
add
loopne
adc
and
or
lock
test
test
xor
mov
popa
(bad)
jne
mov
sub
repz
(bad)
jns
out
cld
jae
xlat
sbb
and
cld
pop
pop
std
aam
ja
into
repnz
sbb
out
lock
not
test
test
jmp
inc
sub
push
outs
fild
xchg
add
(bad)
pop
mov
xchg
out
pop
in
retf
adc
lock
popa
fwait
idiv
push
and
cmp
dec
and
arpl
jmp
imul
dec
mov
daa
dec
sbb
nop
popa
xor
jg
fstp
add
shl
sar
mov
cli
gs
xchg
(bad)
cmp
sub
out
cld
pop
add
hlt
mov
pop
mov
dec
hlt
lahf
cmc
mov
loopne
popf
(bad)
sbb
xchg
jl
push
mov
sub
daa
aas
xor
or
arpl
and
lods
jne
fisub
mov
sbb
cmp
ja
cmp
(bad)
or
xchg
or
popa
test
pop
repnz
add
mov
add
dec
xor
xor
js
xchg
xchg
push
stc
and
test
xor
push
dec
mov
xchg
push
(bad)
push
int3
ds
int
xchg
daa
imul
cdq
xlat
jp
mov
or
cmp
lods
adc
mov
rcl
retf
xor
jmp
ins
(bad)
mov
sbb
cld
add
xchg
push
in
push
stos
sub
sbb
out
enter
mov
push
sub
scas
scas
cmc
or
fs
inc
add
pop
jae
in
imul
mov
lahf
sbb
inc
test
push
hlt
bound
test
aas
ds
xor
jne
sbb
rcl
fdiv
ror
or
shr
jnp
stos
leave
jb
inc
mov
int
adc
icebp
and
jo
rcl
add
movs
push
dec
dec
cmp
add
call
(bad)
int
lahf
pop
jb
jbe
cmps
dec
mov
dec
je
and
dec
ja
enter
sub
test
pusha
rcr
(bad)
inc
pop
les
add
push
es
add
mov
inc
das
js
and
add
add
imul
call
jl
sub
pop
mov
jmp
je
pop
test
iret
repz
adc
scas
mov
add
ss
cwde
sub
stos
aaa
mov
int
aad
adc
inc
iret
jmp
adc
pushf
inc
pop
pop
cmp
imul
and
push
bound
mov
pusha
imul
add
ret
adc
sub
adc
or
sbb
sub
das
outs
lock
xchg
mov
sbb
sbb
dec
add
cmps
mov
aam
push
popa
add
jb
hlt
mov
shl
adc
sub
jl
push
mov
push
fnstcw
jnp
xor
cmp
mov
dec
inc
pop
shl
outs
shr
les
aad
lock
jae
arpl
inc
jmp
adc
pop
cdq
add
sti
stos
or
fwait
cwde
dec
sbb
push
adc
sub
clc
aad
dec
aam
mov
adc
and
cdq
xor
mov
adc
jbe
into
sbb
stos
xchg
lds
adc
outs
jmp
or
push
jmp
inc
dec
inc
hlt
out
xchg
xchg
inc
ret
ss
data16
mov
sub
adc
mov
jle
pop
call
rcr
daa
js
repz
ds
and
push
ret
jno
jb
pop
jmp
cmp
push
lods
mov
enter
dec
mov
add
mov
push
or
and
popf
pop
inc
nop
mov
lods
ret
mov
push
xchg
ror
popf
pop
popf
js
and
xor
outs
jbe
cmps
push
movs
dec
add
retf
cmp
ins
icebp
fild
inc
cli
iret
bound
int3
sbb
lock
push
loopne
cmp
fbstp
sbb
lods
loopne
pusha
adc
bound
sbb
push
ja
out
inc
inc
ret
cwde
ror
mov
test
repnz
sahf
hlt
jae
cs
fisub
dec
cmps
iret
xchg
div
mov
sbb
or
rcl
dec
lods
(bad)
test
push
aad
cmps
out
push
dec
daa
or
and
lds
pop
push
dec
adc
out
ins
sub
jnp
push
inc
loop
shr
pop
sbb
cdq
inc
push
dec
shl
mov
ret
cmps
std
es
add
int
or
mov
dec
cmps
fscale
retf
sti
and
(bad)
stc
das
out
neg
mov
add
push
xchg
mov
pop
sub
adc
fwait
and
inc
popa
pop
cli
aam
stc
(bad)
mov
cdq
cwde
fmul
out
sahf
test
and
jnp
jo
ja
enter
mov
jo
inc
out
fwait
and
xor
femms
sar
cmp
inc
pop
arpl
jmp
shl
popa
pop
mov
or
mov
cdq
retf
out
pop
mov
cmp
lods
std
inc
stos
not
jle
pop
mov
xor
arpl
mov
call
push
add
loopne
sbb
fdiv
call
cmp
inc
out
call
mov
cs
pop
sub
fdivr
push
loop
lods
adc
mov
rcr
and
jmp
or
push
test
(bad)
mov
or
subps
or
jno
mov
dec
xlat
ret
xchg
cmp
and
out
mov
loope
push
mov
adc
bnd
xor
push
stos
or
mov
push
cdq
sub
mov
inc
cmp
lahf
dec
loop
in
ret
push
push
cmp
xor
sub
mov
bound
lds
sahf
mov
push
rcl
fs
dec
mov
in
ins
mov
sahf
pop
test
add
sub
fist
mov
jecxz
mov
mov
out
movs
push
(bad)
and
retf
or
popf
xor
sbb
shl
neg
pop
xchg
inc
adc
sub
es
adc
pop
jno
lods
dec
or
push
mov
imul
fidiv
xor
mov
sbb
stos
nop
add
(bad)
(bad)
add
push
mov
fadd
scas
add
test
pop
fs
ret
xchg
xor
mov
lahf
test
xchg
and
xlat
mov
fst
mov
mov
cs
fcomp
ins
jg
mov
add
mov
dec
jnp
call
mov
jmp
lock
sar
sahf
iret
sbb
or
ds
or
add
sub
(bad)
shl
jecxz
adc
mov
dec
or
and
imul
or
push
push
jmp
imul
loopne
xchg
sti
push
ins
lods
aaa
add
jne
sbb
mov
jle
fiadd
cmp
dec
shl
jl
push
stos
cli
add
xchg
add
pop
mov
sti
xchg
jg
inc
push
dec
mov
out
sbb
jecxz
mov
xor
inc
push
pushf
test
cmp
in
cmp
outs
imul
fxam
mov
in
mov
inc
add
cmps
adc
mov
and
daa
dec
xor
xchg
mov
cs
ror
inc
push
sub
les
jbe
xchg
jno
push
sub
inc
xlat
retf
lods
scas
cmp
or
jge
fsubr
push
xchg
int3
fstp
inc
xlat
cmp
call
mov
mov
and
loope
pop
push
fs
cmp
inc
xchg
xchg
mov
inc
je
(bad)
and
idiv
popa
cmc
mov
movs
jns
lods
xchg
xor
in
and
outs
mov
inc
push
into
jb
fwait
cmp
jb
push
sbb
dec
adc
push
aad
adc
ror
jle
inc
push
mov
mov
push
xchg
ins
iret
in
add
repnz
cmp
out
test
(bad)
cmc
test
les
xor
xor
sub
sub
dec
cld
mov
inc
mov
call
sbb
or
mov
iret
sahf
inc
sbb
xor
cmp
sub
or
loopne
(bad)
ror
jl
add
shl
push
xchg
push
jns
popfw
fcomp
xor
ret
and
add
mov
cmc
and
or
loope
and
cmp
add
cmp
cld
out
or
jne
loope
xchg
inc
or
pop
leave
mov
xchg
jae
inc
cmps
cwde
pop
lea
test
movs
into
add
push
dec
inc
shl
dec
mov
test
aaa
mov
jns
pop
retf
lods
shr
pop
aad
rcl
mov
inc
xchg
rcr
add
xor
adc
xchg
(bad)
jns
fcomp
ja
daa
lea
adc
imul
xor
jmp
movs
fs
push
xchg
or
jp
das
cmc
jge
sub
aaa
retf
int
and
in
push
or
xchg
sbb
enter
cmp
or
pop
aas
jnp
mov
jmp
xchg
scas
ja
pop
aas
jnp
mov
pop
xor
xchg
rol
out
imul
fucomp
test
inc
and
fidiv
xor
xor
sbb
bswap
lahf
jl
dec
xchg
jl
mov
or
cmp
call
mov
stos
scas
pop
cmp
mov
fldcw
imul
pusha
and
pop
mov
rol
ins
cmp
push
cmps
fisub
or
mov
jns
mov
aaa
xchg
push
call
xchg
cdq
inc
mov
and
sti
mov
add
add
fwait
mov
cmp
mov
jmp
adc
mov
mov
push
mov
ret
(bad)
jmp
jge
into
add
inc
push
(bad)
push
loop
movs
adc
xchg
cmps
xor
xor
call
pop
fs
fwait
(bad)
xor
scas
movs
push
xchg
jp
push
mov
ja
popa
mov
fnstsw
shr
push
fsub
pop
jecxz
aaa
scas
jb
dec
cmc
stos
sub
jl
ss
movs
fwait
sbb
and
cmp
push
xchg
mov
adc
push
inc
sahf
clc
xchg
arpl
fsub
mov
add
rol
into
inc
in
jmp
ins
sar
sub
xchg
pop
pop
and
xchg
pop
pop
jl
mov
sbb
inc
call
es
arpl
xchg
out
aam
arpl
and
outs
sar
mov
sub
push
fs
jno
popf
or
loopne
sub
sub
or
mov
fadd
push
fs
mov
sbb
lea
pop
add
pusha
std
mov
and
ins
mov
mov
jno
pushf
xor
or
mov
aas
aam
cli
(bad)
aad
bound
fild
jecxz
or
xchg
jmp
(bad)
push
mov
scas
in
xchg
arpl
out
push
jp
into
inc
push
aaa
pushf
fistp
mov
mov
sbb
mov
or
scas
fs
cmps
scas
aas
xchg
popa
pop
(bad)
aas
int3
leave
inc
jo
ror
in
(bad)
mov
jnp
cdq
out
jg
fwait
jl
gs
sbb
mov
xchg
jp
dec
fbstp
or
(bad)
std
std
fidiv
fwait
pusha
fiadd
int
lahf
adc
call
mov
jno
jecxz
repnz
int3
jg
mov
push
jecxz
(bad)
mov
mov
xlat
push
mov
dec
mov
or
inc
adc
dec
jbe
jecxz
mov
sete
mov
xor
enter
jecxz
cdq
loopne
adc
enter
cmp
and
imul
out
push
out
adc
into
cs
cli
test
jno
sahf
movs
pushf
and
int3
mov
mov
and
pop
enter
push
popf
fild
ja
call
data16
lahf
sub
sbb
ins
mov
xchg
mov
adc
mov
fxch
and
or
aas
adc
test
es
and
or
mov
pop
leave
jb
scas
pop
test
pop
sbb
jle
pop
ins
jp
loope
loop
arpl
test
lods
int
jb
popa
mov
not
icebp
xchg
adc
outs
ins
dec
jns
aas
xchg
push
(bad)
aaa
dec
sar
jmp
mov
or
pop
(bad)
stc
mov
cdq
lods
sbb
mov
xor
sbb
cld
test
xchg
or
pop
emms
js
lea
bswap
int
pop
in
cdq
pop
push
mov
imul
pop
outs
sub
mov
mov
jns
pop
add
inc
cmps
or
mov
jno
xlat
test
cmps
cmp
push
mov
stos
jbe
sub
hlt
and
loop
sub
int3
cmp
cmp
adc
xchg
jecxz
shr
(bad)
xor
ins
pop
xchg
mov
mov
adc
sbb
pop
xlat
push
mov
add
cwde
mov
cmps
(bad)
in
popa
xor
jb
lea
sub
ficomp
xchg
imul
jnp
add
or
xlat
adc
out
(bad)
mov
sbb
nop
pop
and
mov
xor
xchg
rol
mov
jbe
loope
sar
fdiv
adc
fs
test
sub
inc
popf
js
jno
mov
(bad)
mov
adc
dec
movs
jmp
fxam
fcomp
lods
push
repz
fistp
xor
push
mov
ficom
dec
add
sub
mov
lea
rcr
push
arpl
sub
inc
push
add
mov
enter
test
mov
sbb
ja
push
lea
push
aad
fisub
mov
pop
or
dec
lahf
js
xchg
mov
and
xor
inc
cmp
dec
pop
lds
sbb
imul
out
jge
rcl
jno
retf
cmp
add
lsl
mov
cld
fwait
das
nop
mov
add
dec
fcomip
pop
sbb
adc
mov
popa
fcom
pop
mov
mov
pop
sub
xor
xchg
(bad)
dec
pop
xchg
dec
xchg
xor
cmp
inc
loop
sbb
jbe
ja
cmps
pushf
(bad)
jmp
lds
cwde
jmp
imul
mov
jge
pop
mov
sbb
mov
inc
cld
push
cmp
dec
retf
sub
adc
sbb
mov
dec
mov
call
jae
add
dec
push
shl
(bad)
addr16
mov
in
arpl
inc
jle
ror
inc
lods
rcl
mov
jae
ret
sbb
add
fisttp
test
push
xchg
push
leavew
push
push
cmp
loop
ja
and
popf
adc
xor
mov
call
cli
add
inc
add
loopne
je
jne
xor
jp
mov
cmp
push
stc
cmovge
daa
mov
xchg
xor
cmp
pop
dec
mov
push
shr
fs
and
cmp
inc
push
lea
add
lock
xor
in
push
shr
xor
sti
inc
cmp
xor
or
or
ffree
stc
ins
ficomp
cld
or
test
or
dec
cmp
stos
mov
out
inc
sti
ins
retf
push
lahf
outs
arpl
lds
jmp
mov
sbb
jbe
and
fiadd
sbb
mov
jnp
popf
mov
push
call
clc
sub
jmp
nop
ffreep
xchg
lds
jno
adc
pop
ds
(bad)
call
ja
mov
mov
xor
loop
pop
pop
cwde
push
stos
inc
mov
or
jae
aaa
sbb
push
aas
inc
std
adc
ror
(bad)
fisubr
sbb
jo
inc
dec
and
xchg
fisub
fimul
sbb
jp
dec
inc
sbb
sbb
lock
cli
sub
sbb
arpl
jecxz
add
stos
aad
mov
movs
jno
dec
jmp
test
ss
imul
ins
push
inc
mov
aam
scas
outs
rcr
cld
jge
adc
add
jno
enter
xor
mov
dec
ror
pop
inc
lods
(bad)
push
cmc
ds
sbb
les
xor
scas
mov
jae
mov
xor
out
shl
and
cmp
lods
fbstp
cmp
mov
dec
xor
into
ret
push
and
mov
xlat
cmps
ss
xchg
pop
push
repnz
ins
dec
ins
xchg
adc
push
push
push
xor
popf
(bad)
xchg
aas
push
leave
push
(bad)
lahf
pop
mov
jl
jno
cli
icebp
adc
sbb
pop
ja
mov
scas
(bad)
in
and
leave
cmp
stos
pop
jae
xchg
mov
or
(bad)
adc
adc
fistp
push
dec
mov
ins
ins
push
aas
pop
fsubr
adc
and
jo
int
mov
in
sub
jp
loope
lea
jp
es
mov
imul
mov
mov
xchg
lea
es
pop
nop
mov
jg
push
mov
je
push
call
pop
cdq
std
clc
push
(bad)
fistp
cmp
(bad)
loopne
loope
adc
out
inc
out
mov
stc
ins
ins
sub
cmp
cmp
jecxz
add
mov
(bad)
jl
mov
adc
ror
bound
int
or
mov
mov
inc
aas
std
mov
sbb
push
shl
add
in
pop
inc
jl
dec
fcomp
repnz
inc
xchg
push
mov
mov
movs
(bad)
adc
adc
pop
add
enter
rol
fs
adc
dec
adc
mov
cwde
pop
or
ror
jne
fdiv
bound
nop
in
fsubr
jmp
fdiv
loop
lods
push
int
lds
push
mov
iret
or
arpl
rol
push
movs
or
xor
xor
mov
xor
sbb
xor
fxch
push
inc
test
sbb
stos
shl
(bad)
stc
jg
(bad)
xor
inc
cdq
loop
imul
lods
jne
or
xor
jl
push
(bad)
cmps
cmp
push
sbb
xchg
out
or
sti
lea
cmp
xchg
jnp
je
imul
scas
js
jg
gs
fcomp
pop
test
in
and
mov
(bad)
test
mov
out
push
dec
push
fisttp
pop
inc
ss
and
adc
sub
(bad)
cmp
mov
cdq
lods
xor
mov
retf
test
mov
arpl
stc
pop
sub
mov
inc
rcl
push
sbb
sub
rol
mov
or
sub
mov
ds
frstor
leave
(bad)
mov
je
jp
cdq
add
stos
mov
cli
imul
les
je
repnz
ret
adc
mov
call
(bad)
jo
(bad)
icebp
xlat
cmp
pmullw
dec
(bad)
hlt
les
scas
lahf
rol
sti
loope
popf
push
test
lds
inc
shl
fs
add
(bad)
xchg
in
jmp
or
xor
retf
sbb
mov
jbe
pop
pop
mov
lods
ss
jp
mov
dec
add
jae
sbb
shr
or
fld
xchg
add
sahf
pop
xchg
rcr
add
mov
cmp
popf
imul
div
sub
stc
mov
aas
xchg
and
mov
outs
inc
xlat
pop
js
push
and
mov
sub
cmovne
sbb
mov
and
cmp
aad
inc
pop
ja
xchg
jge
rcr
out
add
pusha
es
outs
or
and
imul
push
and
cmp
scas
xchg
xor
push
clc
adc
int
bound
mov
and
cmc
sbb
cld
mov
mov
jp
ins
int
sti
push
lea
dec
push
sub
jo
int
je
inc
sahf
daa
sub
(bad)
push
jne
add
dec
or
mov
sbb
jns
adc
jl
stos
adc
or
pop
push
jmp
out
or
xchg
pop
pop
in
lods
scas
mov
and
add
adc
push
fist
out
pushf
jb
popa
add
lds
mov
movs
inc
cmp
mov
mov
or
lods
outs
inc
rol
int
cmp
adc
mov
jb
cmp
jmp
movs
cmp
addr16
mov
mov
enterw
dec
jl
add
jbe
mov
and
(bad)
ss
rcr
shl
cmp
dec
push
test
or
sub
sub
and
jmp
(bad)
into
adc
popa
lea
bound
call
cbw
inc
or
cld
aas
mov
or
push
(bad)
stc
fnsave
loop
data16
pusha
pop
mov
add
adc
out
inc
xlat
into
mov
mov
and
push
ja
hlt
mov
adc
or
or
jecxz
sub
xchg
dec
pop
mov
lea
fld
mov
inc
test
sbb
mov
jmp
inc
push
mov
outs
lea
and
outs
jb
cmp
jb
adc
cmps
shl
xor
rol
xor
rcr
fld
hlt
bound
xchg
sub
jmp
cmp
movs
(bad)
add
cli
ja
push
call
test
lds
retf
in
fnstenv
repz
inc
sti
leave
mov
adc
cmp
sub
hlt
xchg
push
jle
nop
pop
dec
imul
dec
pop
jge
dec
jl
mov
fild
lahf
sbb
dec
out
adc
cmp
int3
inc
mov
mov
mov
mov
inc
xchg
in
pop
test
mov
sbb
dec
xchg
xchg
dec
mov
adc
sar
ins
or
push
test
push
neg
ja
xor
ficomp
in
add
jns
jnp
lock
adc
rep
mov
gs
and
(bad)
jmp
cmps
xchg
push
cmps
jmp
in
sbb
test
pop
push
sub
xlat
jae
push
dec
sahf
jecxz
sub
lods
mov
loopne
outs
xchg
rol
call
add
jl
xchg
sub
mov
push
shr
(bad)
jmp
adc
cmps
fistp
sub
mov
(bad)
out
nop
outs
or
sub
and
jae
cmc
lock
inc
mov
mov
mov
xchg
movs
test
push
xchg
mov
jecxz
mov
(bad)
jmp
sbb
aaa
fadd
and
mov
and
fstp
adc
xchg
or
mov
rol
mov
mov
inc
jae
dec
add
enter
sbb
ja
mov
pop
mov
xchg
out
xchg
in
xor
jae
mov
xchg
adc
test
cdq
movs
cmps
clc
mov
push
pop
push
es
xor
rcr
hlt
pop
in
ds
mov
mov
mov
add
repz
mov
add
(bad)
stos
push
fcomp
ss
enter
jno
jle
in
loop
das
sub
xor
mov
rcl
dec
or
xor
jno
mov
ror
inc
retf
out
or
mov
int3
lods
mov
jl
add
lahf
pop
add
(bad)
jns
mov
push
das
jecxz
xor
rcr
mul
jne
jle
fldenv
push
cmps
ins
fsubp
dec
gs
mov
xchg
mov
iret
add
nop
pop
jmp
dec
inc
or
adc
mov
jle
sbb
mov
mov
push
xor
mov
inc
push
test
or
out
or
push
jo
repnz
mov
or
or
mov
(bad)
mov
shl
imul
push
stc
inc
xchg
add
ret
xchg
xlat
bound
and
stos
pusha
mov
push
sbb
pop
mov
dec
call
push
and
addr16
add
popf
xor
dec
dec
cmp
push
fisubr
pop
xor
dec
adc
cmp
ins
xor
mov
jecxz
cld
or
jmp
and
test
arpl
int3
enter
add
fdiv
cwde
loopne
(bad)
lock
movs
ret
mov
xchg
pop
cmp
push
jle
sub
cmc
sti
iret
mov
lahf
dec
int3
pop
int3
xchg
mov
and
popa
lods
mov
lods
fwait
xchg
sub
sbb
adc
gs
mov
jmp
loop
les
dec
inc
dec
inc
outs
xchg
xchg
adc
mov
sub
pusha
clc
mov
mov
mov
push
loopne
mov
push
mov
add
mov
and
inc
(bad)
fstp
inc
xlat
xchg
sub
inc
and
inc
push
call
popf
int3
outs
pushf
scas
call
and
mov
test
shl
sub
leave
dec
or
xchg
jnp
cmp
std
(bad)
cwde
mov
adc
mov
mov
inc
sti
dec
xor
das
scas
mov
pusha
jo
mov
cmps
aam
addr16
aam
pop
cmps
std
jmp
cmp
inc
stc
adc
rcr
mov
push
retf
cdq
fisubr
movs
adc
mul
inc
(bad)
sbb
mov
pusha
addr16
(bad)
cmp
or
push
add
(bad)
cmps
xor
jno
mov
and
dec
or
cmps
(bad)
pop
test
mov
or
(bad)
mov
aaa
fwait
mov
ror
stos
scas
call
test
(bad)
stos
aas
push
add
test
movs
push
stc
addr16
addr16
popa
outs
leave
out
mov
inc
inc
clc
push
sub
sbb
inc
cmc
call
inc
jmp
imul
mov
js
and
cmovne
ins
ins
out
inc
leave
inc
xor
lock
cmp
cwde
pop
call
(bad)
(bad)
(bad)
pop
daa
mov
loop
pusha
in
in
xchg
inc
sub
fild
stc
and
jnp
cmp
mov
jno
ret
movs
xchg
fist
cdq
mov
adc
pop
sti
mov
int
dec
ins
repnz
ror
inc
add
fidivr
add
cmp
pop
pusha
movs
scas
retf
push
dec
dec
cmp
test
inc
repnz
dec
outs
lea
jno
xor
out
add
int3
into
inc
adc
add
cmp
retf
movs
outs
sahf
aad
add
fdivp
out
dec
shr
push
mov
lock
fwait
sti
(bad)
clc
mov
cwde
cs
in
mov
mov
mov
dec
dec
xchg
(bad)
enter
sbb
pop
jb
retf
adc
mov
in
das
sbb
(bad)
jo
imul
dec
lahf
pop
xlat
sbb
and
pop
jne
pop
sbb
pop
aad
push
cmovp
loop
ret
mov
fldcw
(bad)
fmul
sbb
(bad)
shr
std
push
sbb
push
jg
sub
lea
cmps
inc
sbb
leave
add
es
mov
loope
(bad)
fdivr
or
(bad)
mov
jmp
push
fiadd
cmp
retf
mov
add
inc
mov
mov
scas
rcl
mov
stc
jg
jl
(bad)
jmp
fstp
imul
arpl
(bad)
nop
jl
adc
scas
jle
and
test
xchg
imul
jae
mov
lds
int3
mov
dec
jae
and
mov
push
imul
inc
ret
xchg
jnp
lods
fbstp
pusha
pop
cdq
cmps
mov
mov
or
adc
inc
and
outs
aas
pop
mov
(bad)
stc
push
retf
sbb
pop
sbb
jno
cmp
jge
fwait
arpl
sub
clc
pop
push
pop
xor
addr16
mov
inc
sti
(bad)
jmp
mov
sbb
ficomp
mov
jbe
mov
pop
test
pop
sub
mov
add
mov
sub
les
imul
mov
in
inc
lea
loopne
add
cmps
(bad)
and
and
fadd
retf
outs
jb
jnp
xchg
in
fisubr
mov
nop
ins
jg
mov
dec
mov
adc
xchg
enter
or
fisubr
outs
xor
sbb
(bad)
mov
mov
sbb
jae
xor
(bad)
sub
rcr
lods
sbb
mov
xchg
ror
push
mov
mov
adc
push
ret
pop
push
mov
in
mov
test
jg
outs
xor
ins
xchg
push
mov
sti
xchg
push
pop
adc
push
push
ja
scas
jbe
into
les
outs
jne
scas
mov
mov
sbb
test
mov
dec
sub
push
xchg
out
test
stos
ja
ins
mov
adc
mov
je
fld
retf
mov
pop
xchg
cmp
jl
test
scas
lods
test
inc
pop
xchg
call
repz
cmps
enter
in
xchg
fld
cmp
cmp
mov
(bad)
je
cdq
lock
cli
popa
push
inc
and
mov
ds
mov
icebp
ins
js
cmp
mov
jp
(bad)
pushf
aaa
out
daa
cmp
aam
add
movs
call
push
test
int
into
push
outs
stc
jge
jno
leave
data16
jecxz
mov
sbb
in
cmp
jae
popf
fdiv
pop
xchg
ret
(bad)
mov
outs
mov
popf
or
pop
mov
jge
(bad)
rcr
mov
and
loope
loope
aaa
retf
lahf
and
imul
mul
fsub
es
sbb
outs
sub
inc
test
mov
pop
cmp
jecxz
adc
addr16
or
scas
stc
in
mov
dec
aas
fld
dec
hlt
xchg
push
retf
sub
xlat
pop
enter
aad
push
addr16
pop
push
loope
lods
add
call
mov
mov
inc
xor
and
or
sub
mov
cmc
inc
lock
xchg
adc
(bad)
or
and
push
cld
mov
dec
mov
lar
xchg
jmp
test
lods
sub
and
lods
out
out
fiadd
in
shr
jmp
add
sub
jp
push
xchg
push
add
sub
pop
movs
push
(bad)
fdivr
mov
mov
and
cmp
mov
xor
push
or
aas
(bad)
pop
xor
cmps
push
xor
and
in
or
dec
sub
rcl
fcmovnbe
mov
mov
cld
pop
xchg
sbb
xlat
mov
xlat
out
mov
repz
add
sbb
adc
leave
mov
sub
push
inc
les
add
fsub
adc
mov
fnsave
push
xchg
loop
cmp
add
dec
pop
xor
sub
lahf
or
push
inc
ins
mov
adc
mov
sub
xchg
stos
clc
mov
inc
data16
shl
sbb
mov
in
or
fs
sbb
das
dec
jp
cmp
xor
push
push
adc
popf
jg
mov
xor
je
cmp
inc
retf
stos
call
sbb
or
vprotd
test
or
sub
jmp
into
nop
mov
sti
xchg
std
mov
clc
(bad)
mov
xchg
retf
call
sbb
add
ss
lods
adc
cmp
jp
test
bswap
and
dec
rol
movs
rcl
or
push
push
(bad)
repnz
inc
mov
jl
lods
xor
std
sti
dec
inc
dec
add
mov
rol
fcomp
add
sub
mov
jnp
push
xlat
in
sub
mov
add
je
fdiv
dec
xchg
popa
sub
test
in
xchg
out
hlt
fucom
adc
stos
inc
cmp
test
xchg
jg
out
call
push
mov
sbb
das
push
ds
aaa
xchg
jmp
or
mov
inc
push
mov
xchg
scas
jnp
fwait
cli
loop
jno
fdivr
outs
xchg
cmp
jo
lea
sbb
nop
mov
aas
cmp
inc
xor
sub
lea
popf
xlat
sbb
loop
xor
addr16
repz
int3
push
scas
dec
ss
mov
add
in
mov
cmp
data16
sahf
cmp
add
sub
loopne
push
nop
sub
sahf
xor
in
push
pop
cdq
or
into
and
ret
mov
and
inc
mov
sti
scas
xor
or
mul
sahf
in
xchg
inc
mov
gs
lods
mov
xchg
pop
mov
add
imul
(bad)
adc
in
jb
adc
mov
arpl
int3
inc
push
dec
scas
jnp
nop
mov
arpl
fcmovnb
test
movs
mov
jns
and
pop
icebp
or
xor
fscale
jmp
mov
out
movs
inc
mov
add
shr
stos
(bad)
mov
imul
and
es
ins
cmp
scas
sbb
test
xchg
push
(bad)
push
aad
sub
inc
dec
adc
div
xchg
dec
push
mov
sub
std
mov
outs
imul
push
fldenv
lds
jmp
aam
aam
mov
push
xor
and
imul
adc
test
sbb
rcl
cmp
call
into
(bad)
xchg
push
pushf
mov
in
int3
push
or
fcom
mov
stos
sbb
(bad)
push
js
popf
xchg
shl
in
test
dec
sub
xor
gs
test
punpckhdq
inc
jge
in
outs
out
sbb
cmp
pusha
mov
inc
mov
jge
ins
pop
or
loopne
bound
xor
sub
fistp
jmp
xor
dec
cmp
movs
mov
pop
call
(bad)
dec
mov
popa
cmc
or
out
ret
mov
and
lods
jge
out
pusha
cmp
test
out
stc
xchg
fmul
xchg
scas
and
es
data16
mov
lea
or
stc
jne
adc
or
cmp
and
sbb
stos
xlat
sti
cmp
(bad)
mov
mov
and
stc
pop
sbb
mov
xchg
push
sub
cmp
inc
mov
retf
inc
mov
and
jbe
cld
cmp
mov
paddusw
mov
(bad)
(bad)
das
pop
lods
sbb
in
adc
cmps
jb
cmps
jmp
mov
pop
cmps
ds
jg
jno
cmp
dec
pop
dec
jnp
in
fwait
xor
xchg
das
or
scas
mul
shr
mov
loop
sbb
adc
push
jnp
and
push
(bad)
jo
call
and
sub
movs
or
push
jmp
scas
in
xchg
out
cmp
jo
fisubr
fwait
scas
pop
dec
cld
scas
xchg
lds
mov
xor
jge
pop
xchg
push
xchg
repz
jo
mov
mov
jmp
pop
cmp
(bad)
adc
mov
hlt
xor
mov
jo
out
in
xchg
out
push
inc
cmp
or
xor
dec
mov
int
pop
add
jbe
sbb
mov
fld
fs
das
ret
ss
aas
outs
inc
fld
adc
popf
xor
add
neg
aaa
cld
mov
xor
ret
push
loop
sub
push
test
cld
and
out
mov
mov
arpl
pop
lods
out
mov
jbe
scas
xchg
(bad)
mov
loopne
inc
std
sbb
cmp
stos
fstp
shl
pop
mov
shr
call
or
imul
sbb
test
jae
jl
jge
mov
fldcw
rol
push
jp
shl
cli
or
or
hlt
fisttp
cmp
inc
and
cs
js
sub
pushw
inc
push
lods
stos
mov
push
in
push
add
push
mov
mov
mul
jmp
fidiv
mov
sbb
jo
dec
pop
sti
and
sbb
es
dec
xchg
push
mov
(bad)
xor
ja
sbb
add
imul
ins
xor
lahf
sub
xchg
push
pusha
mov
or
add
movs
inc
dec
sub
mov
into
or
cdq
mov
test
push
aaa
lea
jnp
sbb
mov
ins
adc
pop
dec
xchg
out
dec
mov
mul
movs
lahf
mov
pop
adc
mov
aam
mov
jl
sbb
fisub
dec
fwait
cmc
mov
call
mov
in
hlt
aaa
cmp
fwait
adc
push
xchg
jmp
ja
and
or
or
jp
adc
add
dec
(bad)
jp
popa
repz
push
cld
shl
(bad)
dec
lods
xchg
sbb
xchg
shr
shl
test
jbe
xchg
arpl
sub
push
test
ins
jl
and
dec
mov
xchg
add
xchg
sahf
jnp
mov
xor
jmp
pmaxub
cdq
push
in
cli
(bad)
jge
rcr
pushf
lods
and
cmp
push
mov
popf
pop
out
mov
xor
pop
inc
in
jne
sbb
in
mov
cmp
and
inc
test
aam
push
push
sbb
dec
mov
js
adc
dec
jbe
popa
push
push
fcomi
(bad)
xor
or
jmp
pop
(bad)
dec
mov
adc
hlt
std
sbb
aad
call
shl
fsubr
repnz
mov
sub
and
outs
imul
(bad)
(bad)
sbb
ins
clc
and
movs
adc
aad
ins
dec
addr16
pop
cmp
jae
aad
jmp
cmp
push
cmps
pusha
push
fwait
xchg
jge
dec
jns
mov
enter
push
xchg
loope
repz
fidiv
pop
and
xor
mov
arpl
call
and
xor
dec
push
int
add
mov
sbb
and
and
xchg
and
fidivr
js
xchg
mov
mov
outs
lea
repz
mov
(bad)
adc
sbb
xchg
push
mov
test
cmps
jno
stos
sub
fcomp
bswap
ret
push
out
retf
lock
and
fs
adc
pop
dec
jge
pop
and
inc
xchg
add
sbb
dec
das
ret
sbb
sbb
cmp
or
cli
push
mov
cmp
daa
pop
push
(bad)
outs
(bad)
std
xor
sbb
xchg
push
or
mov
nop
xor
push
pop
inc
ret
stos
gs
cmp
(bad)
cld
rcr
outs
es
dec
push
sub
add
enter
xlat
rcl
movq
xchg
(bad)
jl
gs
retf
js
popf
inc
pop
inc
mov
dec
jo
jbe
cmp
sub
dec
(bad)
cmp
and
ss
fisttp
ins
adc
sbb
test
pop
dec
dec
xor
jmp
cwde
mov
add
xor
xchg
cmc
push
data16
dec
sbb
dec
sahf
das
add
bound
in
call
add
xlat
and
xchg
mov
call
mov
sbb
test
dec
add
fs
mov
and
xlat
dec
cdq
dec
leave
aas
pop
push
shr
ret
out
jbe
sub
inc
inc
cmp
jo
sbb
ds
ja
sub
out
out
popa
(bad)
repnz
ja
sbb
dec
ror
add
mov
fs
ror
or
js
jge
gs
push
mov
mov
hlt
test
xchg
mov
test
leave
rol
push
jo
inc
mov
jp
inc
iret
mov
imul
xlat
(bad)
jne
scas
sub
retf
(bad)
lds
mov
add
pushf
retf
dec
ja
into
cmc
retf
cmp
sub
test
xchg
fidiv
imul
out
dec
or
push
jecxz
inc
outs
rol
leave
out
pop
sub
mov
inc
xchg
sahf
cmp
jbe
push
test
dec
xchg
mov
iret
(bad)
xchg
leave
dec
sub
test
shl
pushf
jmp
aas
inc
movs
mov
stc
xchg
nop
rcl
push
retf
loop
adc
retf
inc
xchg
jp
out
lock
ins
rol
and
std
add
into
cmp
mov
test
jae
sub
shr
xor
push
ss
imul
repnz
jmp
popa
inc
int
sbb
push
jnp
aam
call
into
lds
or
(bad)
xor
push
push
(bad)
enter
add
jecxz
popf
mov
push
rcr
dec
mov
pop
mul
pushf
mov
cmp
sbb
pop
jp
push
jmp
inc
jmp
sbb
mov
cmps
popa
stc
jmp
mov
xchg
lock
pushf
rcl
repz
inc
sub
ja
jp
ret
mov
cmp
cmps
adc
jno
or
pop
iret
ins
mov
cmp
ret
dec
xor
push
lods
jmp
imul
loopne
push
sbb
popf
repnz
lock
loop
icebp
cmp
xor
outs
sub
out
mov
and
test
outs
hlt
cld
std
sbb
in
fnop
cmp
fsub
mov
lock
or
add
data16
jo
mov
and
jmp
sub
lock
stc
fs
hlt
mov
stc
clc
scas
iret
scas
gs
jmp
xchg
fstp
xchg
out
ja
sub
mov
adc
or
jmp
push
mov
arpl
sbb
(bad)
push
in
xchg
imul
loope
ins
ror
jmp
ins
push
sar
jae
inc
inc
dec
lock
xchg
push
xchg
xchg
mov
ds
xchg
pop
call
outs
pop
sub
aas
ins
nop
lahf
ja
xor
xchg
dec
fisttp
push
pushf
mov
adc
fwait
in
out
into
nop
das
adc
pop
imul
push
enter
push
mov
aam
in
sub
dec
enter
mov
or
add
or
rcr
pop
cs
daa
dec
mov
and
adc
push
movs
nop
pop
rcr
dec
hlt
or
daa
jne
pop
pop
and
ret
in
push
and
repnz
push
cmp
cdq
lahf
scas
fwait
mov
xchg
ins
sahf
test
stos
fcomp
out
sbb
test
pusha
lods
xchg
push
and
mov
inc
ins
vmptrld
adc
adc
mov
or
xchg
shl
fnstcw
clc
mov
mov
loope
imul
fstp
or
cmp
retf
js
push
ret
pop
ins
jle
inc
icebp
pop
(bad)
popa
jecxz
or
push
pusha
imul
or
icebp
(bad)
sbb
lods
shr
mov
or
sar
popf
xor
out
in
and
mov
aas
aas
jecxz
(bad)
pop
inc
lock
mov
sbb
fwait
xchg
popf
sub
addr16
add
mov
cmp
jle
loope
mov
jnp
sbb
add
out
les
jl
out
adc
enter
cmps
mov
(bad)
aam
adc
enter
add
mov
dec
cs
cwde
sbb
sbb
repnz
cdq
imul
mov
pop
or
int3
int
ds
pop
mov
cmp
push
push
ss
push
mov
bound
stos
retf
fcomp
movs
mov
dec
inc
loop
retf
fs
(bad)
(bad)
and
jno
addr16
int3
shl
xor
mov
mov
and
sub
vhaddps
mov
jnp
test
int3
sbb
out
scas
push
jmp
nop
xchg
xchg
dec
pop
out
mov
cmp
jmp
out
mov
xor
push
arpl
jle
int
in
inc
push
push
dec
inc
rcl
pusha
hlt
pop
lods
jnp
mov
loop
out
aad
cmp
pop
add
adc
jecxz
stos
fcmovnbe
loopne
jno
add
mov
mov
das
cmp
popa
dec
push
mov
loope
lahf
xchg
data16
pop
push
sti
sbb
adc
push
xchg
jmp
sub
and
dec
mov
add
mov
xchg
pop
cmp
inc
out
icebp
cmp
loopne
cld
dec
xor
sub
inc
lds
add
cmp
jge
push
sbb
aas
out
jb
sub
mov
cmc
pop
pop
push
adc
jae
in
pop
mov
pop
dec
jo
cmp
and
movs
push
or
jp
or
(bad)
pop
aad
mov
and
mov
dec
xchg
inc
mov
fmul
or
pop
shl
and
or
xor
push
push
nop
and
mov
jmp
push
push
dec
jle
shr
xlat
shl
test
inc
add
dec
sub
lahf
into
mov
out
xor
sub
jne
seto
fild
mov
sti
dec
aad
out
fdivr
sub
lods
retf
jnp
mov
dec
jbe
inc
mov
xchg
ja
pop
clc
pop
das
push
iret
pop
outs
gs
fldenv
aam
iret
xor
dec
into
bnd
in
dec
pop
cmp
adc
xor
out
pop
jl
push
xchg
push
jae
ror
imul
sub
sub
das
aaa
mov
scas
dec
dec
and
or
scas
cs
(bad)
xchg
mov
sub
and
test
xchg
loopne
fistp
jbe
pop
jae
arpl
test
adc
mov
inc
call
rcl
scas
fwait
sbb
lods
retf
and
adc
push
jp
sub
mov
sbb
cmps
inc
fsubp
popf
sub
mov
lea
jns
sar
out
repz
jp
test
push
imul
adc
call
popf
shr
stc
in
add
pushf
xor
sbb
cmp
push
leave
dec
(bad)
cli
retf
mov
mov
mov
mov
mov
test
in
xchg
and
shl
xor
mov
dec
(bad)
addr16
xlat
rol
jb
fisub
xchg
xor
xsha1
cmps
or
fwait
xor
push
pop
aad
rcr
push
cmp
clc
aaa
sbb
jl
mov
or
in
out
clc
add
dec
jle
push
jo
popa
pusha
inc
out
test
sbb
push
pop
mov
stos
clc
jg
lahf
inc
mov
sti
add
jl
mov
daa
xlat
gs
push
cmps
jmp
cmc
cmp
mov
push
dec
stc
into
(bad)
in
sbb
push
out
cmp
addr16
inc
dec
and
adc
push
add
and
cli
(bad)
rol
jno
test
sub
jmp
movs
adc
or
fs
pop
jne
mov
mov
add
stos
std
das
and
mov
lds
sbb
xor
add
scas
in
ds
ss
push
cmp
cli
and
xchg
test
and
and
fst
pop
aaa
call
lock
dec
sub
pushf
sbb
(bad)
lds
mov
into
cmp
sbb
out
(bad)
fisttp
into
fidivr
loop
retf
addr16
xor
les
daa
dec
pop
popa
xor
cmc
cmp
push
adc
add
mov
sbb
xor
je
or
fstp
pop
and
neg
cmp
scas
dec
out
pop
das
(bad)
mov
or
call
das
test
push
rcl
push
(bad)
inc
dec
pop
mov
mov
int
repz
inc
xor
mov
dec
popa
lods
xor
jae
push
cmps
xor
fwait
stos
movs
xchg
pop
sbb
in
fucomp
aad
rcr
inc
adc
push
outs
xor
dec
push
push
stos
iret
ds
push
push
enter
mov
ret
dec
jae
and
jno
push
inc
inc
mov
push
ds
shr
pop
jno
dec
sbb
ins
pop
into
aaa
out
and
pop
(bad)
movs
in
mov
lods
pop
lods
in
mul
dec
stos
push
inc
sbb
not
dec
loopne
push
fist
jae
push
inc
ss
jl
pop
inc
or
int3
sar
shl
sub
mov
cwde
pop
push
xchg
or
(bad)
jp
cmp
jbe
cli
dec
adc
push
(bad)
adc
xchg
leave
jae
or
cwde
shl
xchg
outs
fstp
xor
hlt
aas
ret
sti
add
bound
mov
push
adc
dec
aas
xchg
or
ret
mov
shl
movs
(bad)
rcl
xchg
sub
push
sti
adc
std
mov
clc
cmp
xchg
movs
mov
not
mov
mov
out
push
push
lea
or
scas
dec
jmp
cmp
mov
mov
mov
out
sbb
push
fisubr
dec
xor
push
(bad)
dec
cs
push
mov
outs
and
sub
aad
sti
push
retf
pop
shl
mov
xchg
pop
cmps
aas
dec
dec
push
imul
inc
xchg
or
mov
jne
(bad)
scas
repnz
mov
shl
sbb
jbe
iret
jne
pop
daa
aad
dec
shr
movs
cmp
mov
test
push
jmp
lock
cmp
call
ins
data16
je
adc
popf
jmp
xor
xchg
sar
fs
mov
repnz
fistp
add
fcomp
jmp
cmps
mov
sbb
stos
bound
xor
cmp
lds
mov
cmp
xor
xlat
sar
(bad)
push
dec
jmp
je
repz
cli
and
add
dec
lods
pop
and
(bad)
iret
pushf
cmc
ins
jmp
xchg
jae
scas
(bad)
xchg
call
jmp
(bad)
and
xchg
adc
cmp
push
xlat
push
aad
mov
retf
sbb
movs
jge
xor
pop
inc
and
je
fimul
sbb
xchg
shl
xchg
fst
in
add
aam
add
pop
lds
arpl
jmp
sub
cmps
loop
loopne
cmp
mov
jb
div
pop
aad
mov
adc
test
hlt
es
aas
repnz
sahf
mov
add
sbb
inc
xchg
outs
jnp
pushf
into
adc
rcr
jle
sbb
jmp
ret
adc
mov
xchg
outs
pop
mov
sbb
mov
and
retf
xchg
push
outs
or
enter
mov
daa
mov
dec
ja
call
pop
leave
js
jmp
mov
(bad)
fadd
ret
(bad)
push
(bad)
test
or
sbb
pop
pushf
neg
adc
pop
mov
add
inc
in
inc
jmp
(bad)
sbb
jmp
pushw
retf
sahf
push
ds
mov
iret
movs
int3
cmc
sbb
pop
lock
and
(bad)
outs
or
leave
movs
pop
ret
or
dec
sub
fnstsw
fwait
pop
cmp
iret
loop
cmp
nop
lock
mov
jnp
and
stc
pop
dec
popa
pop
aam
(bad)
(bad)
adc
jl
adc
imul
cdq
aas
shl
jno
movs
cmc
pop
test
repz
dec
sub
ins
rcl
je
adc
ins
xchg
das
mov
cmps
or
and
jnp
mov
mov
adc
aas
jle
jns
rcl
loop
pop
mov
outs
(bad)
push
je
pop
add
xchg
and
xlat
arpl
in
push
ret
or
or
xchg
or
cmp
pop
inc
sub
mov
and
int3
pop
xor
pop
jnp
idiv
mov
adc
fs
loope
sbb
push
(bad)
jmp
fstp
cdq
add
or
in
dec
inc
in
js
push
rcr
adc
or
lock
dec
mov
pushf
sbb
sub
scas
xchg
adc
fldz
ja
shl
imul
aas
lods
dec
nop
xlat
adc
mov
push
jae
ret
dec
addr16
sti
dec
das
das
mov
adc
lods
jae
jmp
mov
push
mov
mov
addr16
imul
test
push
pop
or
ss
dec
out
(bad)
inc
retf
addr16
adc
bound
inc
cmp
fcmovne
std
in
retf
lds
bound
pop
stc
adc
and
mov
cmp
sub
or
(bad)
mov
xchg
vprotb
das
fcmovu
jmp
call
push
push
pop
pop
sbb
das
jbe
daa
mov
jg
sub
lea
(bad)
pushf
and
push
ins
pushf
add
aam
cmp
dec
mov
push
sub
push
xchg
ss
cli
daa
mov
pushf
ret
es
call
jo
or
out
scas
pop
pop
mov
call
pushw
sti
mov
cld
add
loop
and
push
and
push
imul
inc
ret
adc
cmps
ret
scas
repnz
call
xchg
jnp
out
test
in
jg
retf
test
pop
mov
rcl
pop
mov
pop
outs
cdq
jbe
int
js
dec
mov
sbb
pop
mov
adc
jb
scas
cmp
inc
test
outs
jp
add
outs
pusha
mov
sar
std
nop
mov
int
xchg
sbb
jne
mov
ds
add
push
pop
cmc
inc
and
sub
pop
pusha
xor
ins
in
stc
xchg
pop
xchg
xchg
call
xchg
fwait
sti
mov
cmp
cld
cmp
mov
mov
fisubr
push
adc
push
test
xchg
jae
repz
repnz
retf
fistp
cli
mov
fs
outs
dec
xor
xchg
cmp
lods
xchg
in
dec
push
(bad)
adc
pop
pop
dec
cwde
push
and
jecxz
mov
repz
sbb
mov
jo
xchg
adc
repnz
movs
fsubr
dec
outs
mov
mov
xchg
sahf
inc
push
scas
out
dec
clc
or
pop
ror
push
sub
das
xchg
mov
add
add
mov
sub
jmp
imul
lods
dec
fcomp
pop
bound
push
imul
push
and
int
xchg
push
sbb
out
mov
cmc
out
add
add
movs
rcl
and
es
pop
pop
mov
inc
in
lahf
out
pop
jg
xor
rcr
jno
int3
test
pop
xchg
cmp
mov
iret
mov
std
pusha
mov
pop
jnp
adc
sub
fs
push
clc
icebp
inc
fs
sbb
jecxz
addr16
jae
int3
pop
add
dec
push
xchg
mov
and
xchg
retf
inc
and
aam
cmps
outs
xchg
addr16
dec
jb
mov
jecxz
mov
mov
xchg
sbb
fcomi
ja
ret
pushf
into
and
retf
jp
stos
repz
pop
daa
cdq
push
xor
mov
fwait
sbb
mov
leave
ins
mov
retf
shl
loope
gs
mov
loopne
daa
iret
or
adc
and
mov
out
or
mov
stos
xor
call
pop
cmps
mov
nop
push
sub
xlat
std
fidivr
push
test
xchg
sbb
pop
mov
outs
scas
mov
test
dec
ins
dec
loopne
jmp
xor
adc
loop
imul
fnstsw
das
adc
adc
out
and
mov
cmp
lods
adc
mov
xchg
push
ret
sahf
sbb
and
cwde
push
pop
repz
mov
jl
(bad)
cmc
mov
ud0
popa
and
mov
mov
sub
push
jg
jo
mov
dec
sbb
(bad)
fbstp
adc
sahf
or
inc
fnstsw
shl
scas
(bad)
int3
xchg
add
shl
cli
es
(bad)
mov
retf
(bad)
jo
mov
mov
push
cmp
push
add
jecxz
mov
cdq
pop
iret
dec
out
repnz
xchg
pop
sub
pushf
sti
frstor
xchg
sub
pop
test
(bad)
loope
in
dec
lock
dec
mov
pushf
xchg
in
mul
ds
call
mov
add
pop
sbb
(bad)
jne
inc
cwde
and
ds
test
popa
in
mov
sbb
rcl
ins
ret
sub
repz
shl
inc
mov
into
test
push
cld
fisub
or
push
icebp
aas
shl
inc
mov
lock
xchg
sti
sbb
clc
sti
mov
adc
cmp
push
push
push
mov
jb
mov
dec
jge
test
outs
(bad)
cld
icebp
sar
fwait
aaa
and
sbb
push
adc
xchg
lahf
mov
pop
adc
push
sbb
mov
cwde
mov
add
or
and
int3
das
ja
and
test
or
push
je
cdq
and
jge
adc
cld
int3
jmp
call
(bad)
and
gs
cmc
inc
push
adc
or
cmp
or
inc
inc
sbb
test
mov
shl
leave
sbb
jl
mov
clc
shl
int
fdivrp
sbb
push
mov
dec
popf
inc
inc
ss
pop
mov
jb
stos
scas
and
lods
adc
xor
lahf
jg
fisub
xchg
add
xor
cli
js
sahf
adc
loop
ja
push
cmc
dec
out
aad
lods
test
mov
inc
cmp
sbb
inc
or
mov
jae
xor
sub
and
(bad)
les
xchg
xchg
lods
(bad)
daa
inc
jb
mov
mov
jmp
or
mov
jo
mul
fst
xchg
or
(bad)
test
(bad)
cmp
mov
imul
jp
jp
or
aaa
repnz
jle
int3
(bad)
ror
in
retf
sahf
inc
jae
fisubr
call
iret
aam
gs
jg
and
xchg
cld
mov
xchg
ret
push
mov
ins
mov
leave
dec
cwde
xor
ds
ret
nop
std
ror
mov
mov
xlat
sbb
jmp
stos
int
adc
stos
jno
ficom
ucomiss
inc
test
push
lahf
inc
nop
dec
or
leave
push
xchg
retf
sub
xor
sbb
mov
inc
shl
mov
sub
pop
dec
adc
mul
dec
sbb
xor
push
les
(bad)
jns
mov
lods
push
pop
and
mov
mov
das
xor
clc
push
push
sub
inc
jno
and
(bad)
jg
push
xchg
or
dec
sub
mov
xlat
shr
push
add
test
mov
sahf
aaa
and
(bad)
dec
sub
inc
rcl
mov
adc
sub
es
das
fidivr
in
aad
xchg
jns
push
iret
retf
push
leave
lods
outs
jmp
imul
(bad)
mov
shl
fist
push
adc
call
jno
nop
fisttp
cmp
(bad)
mov
inc
cmp
stos
fisubr
dec
cmp
cmp
sbb
gs
cmp
(bad)
out
jg
pop
aad
into
pop
push
rcl
cmps
jne
or
jg
daa
mov
jmp
je
call
ret
(bad)
rol
xor
cmps
lds
xor
cmps
aaa
fnstsw
mov
or
mov
push
jo
stos
cmp
pop
in
pop
add
xchg
mov
outs
xor
outs
int
mov
cli
add
call
(bad)
cmp
les
mov
mov
inc
(bad)
push
push
jno
mov
xchg
addr16
loopne
adc
inc
xchg
add
cmp
pop
es
push
push
test
and
jle
clc
jno
(bad)
mov
dec
test
dec
repnz
repnz
nop
loope
pop
cmp
push
or
stc
test
jge
mov
pop
mov
jnp
jle
aad
leave
mov
add
in
cmp
add
int
dec
scas
repz
loop
mov
lods
xchg
sbb
call
stc
lea
(bad)
lods
ja
lahf
pop
push
jge
xor
fidiv
mov
dec
sar
clc
jbe
es
jge
fbstp
(bad)
(bad)
neg
in
or
cdq
push
aam
xor
add
dec
lahf
popf
mov
and
push
mov
push
push
push
inc
movs
in
xchg
sahf
movs
pusha
test
xor
dec
fisubr
arpl
ror
(bad)
daa
and
jns
ss
push
arpl
xchg
cmps
in
inc
mov
out
loope
mov
push
dec
fistp
jae
popf
pop
add
jp
lods
je
shr
int
mov
push
das
pop
mov
ja
scas
or
loop
push
xchg
add
add
mov
and
clc
inc
jl
cs
dec
adc
cmps
jmp
in
ret
jno
call
mov
jnp
jmp
leave
mov
jne
cmps
xchg
cmp
aad
pop
iret
add
les
xchg
push
gs
xor
add
cmc
push
cmp
fnstcw
sub
mov
sub
inc
dec
leave
out
movs
adc
mov
fadd
jno
mov
xor
(bad)
inc
xor
sar
mov
mov
arpl
stos
pop
dec
data16
dec
dec
xchg
ficomp
pusha
push
in
in
add
nop
and
loop
cmp
add
pop
pop
movs
pop
nop
dec
enter
stos
lock
enter
xor
je
(bad)
push
lods
test
ss
test
pop
iret
iret
in
(bad)
in
cdq
popa
cmp
inc
sub
or
or
loop
mov
xchg
aad
int3
mov
fist
in
sub
cs
dec
mov
fwait
icebp
and
leave
scas
adc
ins
stc
xor
ret
and
fnstenv
out
pop
push
aam
push
adc
mov
ror
jge
mov
data16
cmps
xor
pusha
fcom
ret
fcom
loopne
adc
pop
(bad)
fsubr
add
repz
pusha
xchg
mov
pop
scas
jp
out
xchg
push
loopne
outs
call
lods
push
and
enter
inc
sub
addr16
aaa
push
aad
mov
and
inc
mov
sub
jne
les
test
xchg
fist
or
adc
rcr
pop
push
add
mov
push
cmp
arpl
nop
cld
mov
hlt
aam
fcmovu
and
lds
out
(bad)
bound
fsub
pop
rcr
sbb
lods
dec
jmp
repz
movs
loope
mov
inc
dec
hlt
jno
cmc
jb
jl
sub
push
psubsb
add
cs
mov
mov
pusha
pop
(bad)
cmps
xchg
and
cmps
mov
push
addr16
or
xchg
ret
ret
xor
inc
stos
imul
jnp
imul
or
mov
mov
jbe
div
out
adc
mov
mov
push
mov
fsub
das
jnp
retf
mov
mov
mov
test
nop
xchg
jae
mov
out
call
pop
and
sub
mov
mov
je
movs
cdq
cmp
mov
and
xor
mov
sbb
loop
mov
pushf
mov
imul
rcl
gs
jp
arpl
in
icebp
cmp
leave
sub
cmp
pop
cdq
cmps
cmp
popa
jne
cmp
sub
rcl
and
mov
inc
add
pop
das
mov
sbb
(bad)
or
mov
push
fdiv
arpl
(bad)
push
shl
inc
dec
mov
ja
sar
mov
inc
mov
cmps
mov
mov
out
cmps
pop
xchg
rcl
ss
inc
xlat
into
(bad)
add
gs
mov
test
push
iret
addr16
sbb
mov
adc
out
mov
ja
(bad)
cmp
push
jl
lea
xchg
xchg
inc
mov
adc
mov
cmp
ds
xor
pop
push
sbb
pop
arpl
lahf
dec
or
xlat
xor
(bad)
shr
dec
rcl
clc
inc
mov
loopne
repnz
das
js
(bad)
pop
loopne
out
fcmove
inc
pushf
imul
mov
dec
cmp
mov
push
mov
mov
xchg
jge
xchg
dec
cli
movs
adc
repnz
push
ret
cdq
pop
ins
push
lock
popf
sbb
cli
pop
xor
jle
popa
xchg
cmp
gs
in
mov
jp
inc
mov
fisttp
mov
(bad)
or
sar
push
gs
hlt
jb
jns
dec
stos
movs
mov
sbb
push
jecxz
mov
scas
shl
lahf
cmc
call
jo
mov
rol
inc
les
(bad)
scas
aad
cld
cmp
cmp
dec
mov
int3
mov
(bad)
add
cmp
push
jmp
jecxz
cld
movs
xor
addr16
pop
test
(bad)
adc
fcmovu
dec
add
(bad)
dec
jmp
xor
std
in
or
adc
and
or
jns
xchg
cmp
imul
mov
dec
inc
rcr
jge
mov
stc
mov
in
and
and
dec
(bad)
inc
test
adc
lock
push
out
je
(bad)
or
push
dec
mov
dec
push
fs
add
pop
add
ret
aaa
hlt
fwait
out
xchg
ja
xchg
jmp
fistp
jne
lahf
and
sbb
bound
lods
pop
popf
mov
push
pop
dec
in
cmp
jl
and
test
pop
cdq
ror
adc
and
push
inc
pop
xchg
cdq
arpl
xchg
cdq
mov
fimul
(bad)
arpl
jmp
xlat
jmp
ficomp
dec
ins
cmp
xor
xchg
inc
movs
inc
ss
sub
jns
outs
retf
lods
xchg
cwde
ss
mov
jle
sub
call
into
or
ror
xchg
loope
adc
jp
aam
pop
sbb
mov
dec
mov
(bad)
icebp
sbb
in
pop
repz
jge
push
sub
leave
push
jno
fidiv
sub
cmp
jl
lock
xlat
movs
out
(bad)
lock
sbb
and
inc
jl
and
mov
jns
aam
cli
sub
mov
scas
aas
jae
popf
cmp
adc
push
adc
pop
fcomp
in
repnz
(bad)
mov
lahf
cmp
daa
xor
fadd
push
stc
mov
dec
(bad)
out
sub
sub
xor
jbe
xchg
or
jecxz
inc
(bad)
shr
shr
in
stos
or
mov
adc
(bad)
mov
ret
xlat
movs
nop
les
(bad)
mov
push
int
pop
cli
fadd
add
add
and
rol
out
xlat
ret
loope
ret
inc
cdq
and
aas
movs
(bad)
sti
push
inc
repz
xchg
mov
stos
mov
stos
jmp
sbb
xor
cld
push
nop
int3
fs
lahf
cmp
cmp
dec
sqrtps
fstp
mov
cmp
and
xor
test
push
sbb
call
dec
xchg
stos
pop
xor
sub
das
cs
div
out
(bad)
fidiv
bound
fld
xchg
(bad)
mov
push
sbb
adc
imul
ret
mov
xor
dec
das
pop
and
jno
mov
adc
sti
cld
pop
aam
inc
pop
es
hlt
pop
or
inc
rcl
sub
mov
cdq
scas
push
push
xchg
movs
outs
jge
jbe
retf
cwde
inc
ror
scas
and
repnz
cmps
push
and
jl
dec
push
daa
cld
pop
rcr
or
push
aad
popa
sti
call
jne
push
dec
cmc
hlt
xor
cmp
sbb
inc
(bad)
shr
dec
inc
mov
pop
add
and
push
enter
ins
cmps
push
pop
xchg
js
mov
arpl
inc
das
ror
and
dec
mov
mov
sbb
cmp
es
mov
imul
sub
test
sub
icebp
pop
cmp
jae
sub
aam
fstp
add
pop
or
idiv
and
fs
push
test
and
ret
sbb
mov
lods
inc
push
cmp
fstp
push
xor
adc
mov
outs
jne
imul
mov
cmc
jge
fiadd
cmc
pushf
or
sub
movs
push
ins
sbb
sbb
mov
inc
int3
adc
or
inc
data16
mov
push
retf
adc
fcomp
mov
inc
jbe
inc
ret
loopne
add
mov
sbb
fidivr
retf
or
out
movs
push
int
scas
fld
or
xchg
adc
mov
outs
jne
leave
je
xor
pop
add
push
aad
out
stc
cmc
sbb
jl
xchg
xchg
cmp
ins
js
jae
in
nop
(bad)
in
aam
call
pop
and
dec
sbb
add
pop
pop
movs
or
xchg
jecxz
aam
dec
sub
cmp
inc
mov
int
stos
sbb
sub
test
idiv
mov
and
je
adc
push
push
cmp
sahf
xchg
imul
adc
push
das
mov
in
sub
xchg
int3
jp
pusha
add
jae
lahf
les
out
(bad)
clc
(bad)
cmp
pop
ss
push
cmps
xor
add
add
or
repnz
mov
jmp
inc
push
les
mov
daa
test
js
mov
pusha
rcl
data16
(bad)
rcr
sub
adc
pop
xchg
inc
(bad)
mov
dec
xchg
xor
shl
popa
outs
fcomip
leave
jge
mov
mov
pop
mov
mov
hlt
test
xchg
fild
stos
xor
mov
enter
adc
pop
mov
dec
xchg
sub
mov
stos
push
or
sub
aam
repnz
call
mov
(bad)
enter
push
xor
mov
adc
arpl
mov
(bad)
enter
retf
xor
fcmovne
std
addr16
mov
xchg
pop
sub
and
fcom
mov
dec
aas
pop
outs
sbb
inc
adc
inc
mov
test
or
xchg
xor
add
rcl
test
or
inc
add
in
jl
out
adc
and
xor
outs
fisubr
mov
das
mov
fdivr
mov
call
out
rcl
mov
cmp
jmp
(bad)
mov
pop
cwde
xchg
pop
ins
pop
pop
adc
ficomp
jnp
add
pop
or
pop
adc
jae
int3
sbb
rcr
mov
ret
nop
fnstsw
cdq
dec
jmp
int
xchg
mov
push
mov
test
test
mov
lea
arpl
call
loope
or
call
adc
push
int
push
sahf
popf
repnz
(bad)
pop
inc
(bad)
in
daa
xor
(bad)
jp
xor
stc
inc
leave
dec
int
and
or
mov
jne
sbb
sti
dec
pop
jecxz
mov
cmp
pop
dec
mov
jmp
fimul
xlat
(bad)
mov
call
sub
ins
and
shl
or
add
loopne
sub
imul
pop
mov
shl
or
add
mov
test
dec
cmp
imul
push
jo
aaa
int3
push
jmp
pop
mov
test
sbb
test
push
addr16
mov
(bad)
jae
popa
or
sti
jne
mov
ja
cmp
movs
out
fwait
cld
enter
ds
inc
cmp
adc
push
add
xor
or
(bad)
mov
(bad)
and
pop
fs
(bad)
nop
arpl
aaa
cwde
int3
xor
sbb
xor
jge
sub
hlt
pop
lock
xor
jmp
sub
xchg
repnz
mov
aaa
cmp
or
jo
fbld
mov
jno
jp
or
push
dec
pop
ror
daa
cwde
jge
add
sub
test
enter
popa
leave
adc
sub
mov
cs
ror
adc
faddp
inc
mov
loop
and
aam
std
xchg
or
iret
sti
mov
ret
in
adc
xor
aaa
call
nop
ret
cmp
dec
(bad)
ja
rcl
jmp
fwait
ins
push
retf
xor
aad
sub
and
xchg
rcl
push
daa
xchg
and
leave
mov
loopne
aas
leave
mov
stc
mov
xchg
mov
jl
in
sahf
cmp
jmp
lea
push
mov
push
mov
inc
mov
cli
lock
adc
mov
push
push
lods
mov
and
jo
mov
sti
dec
jle
jmp
loop
mov
pop
cmp
dec
mov
cmp
jae
fdiv
movs
pop
mov
adc
imul
pop
arpl
sbb
add
stos
ret
adc
lock
sub
bsf
mov
push
mov
inc
jecxz
xchg
hlt
ret
cld
retf
aaa
popa
loopne
push
push
push
lods
and
mov
or
mov
retf
and
js
and
(bad)
das
xchg
sar
pushf
mov
outs
sbb
mov
es
lea
call
jl
es
outs
inc
ror
mov
test
jp
fld
and
(bad)
cli
adc
rcr
test
jge
mov
retf
add
and
mov
enter
out
ja
push
mov
mov
sbb
or
ds
rcr
add
test
push
or
mov
inc
and
sub
push
int3
xchg
fistp
or
movs
or
push
aam
pushf
mov
or
fsub
clc
inc
cs
sbb
sbb
jns
inc
hlt
neg
lods
sgdtd
addr16
and
inc
out
iret
mov
ret
cmp
push
ds
push
js
sub
ret
lea
imul
mov
and
(bad)
jmp
rcl
adc
inc
mov
jge
test
mov
mov
into
dec
test
test
mov
sub
call
and
jge
xor
stos
jae
lahf
sub
and
pop
pusha
or
(bad)
pop
sti
lods
bound
push
mov
out
popa
push
loopne
mov
push
stos
daa
or
sub
add
out
jmp
loopne
outs
aaa
popf
pushf
js
xlat
jg
sub
xchg
sbb
cmps
mov
inc
pop
outs
aad
cli
pop
int
xor
ss
sub
cli
ret
fist
cld
jecxz
sbb
and
dec
sti
inc
or
and
test
xor
(bad)
in
outs
hlt
fist
lods
and
xor
addr16
test
xchg
push
mov
out
mov
and
jmp
mov
shr
sbb
cmps
int
movhps
and
out
sbb
leave
and
gs
repnz
test
rcr
push
mov
jmp
adc
scas
dec
mov
cli
jge
out
fild
add
test
mov
out
je
push
mov
stos
cs
mov
xchg
call
sub
mov
cmp
xor
enter
pop
movs
neg
pop
fisttp
repz
leave
push
or
jns
inc
call
out
cwde
push
call
inc
in
ret
mov
stos
jmp
movsx
sahf
das
sbb
dec
es
jle
add
retf
or
in
cmp
jns
push
inc
cld
jg
jmp
mov
jmp
and
add
ret
jecxz
hlt
stc
pop
nop
shl
pop
lock
daa
fld
lods
xor
xchg
cmp
loopne
jae
sub
dec
push
inc
int
add
sbb
cli
fisubr
fld
xchg
les
sbb
and
mov
sbb
cmp
sbb
jecxz
lea
out
pop
sar
fst
ins
jmp
lods
mov
fidivr
rol
cmp
sti
mov
mov
cmp
aaa
pop
mov
push
cmps
iret
sbb
loop
mov
mov
ror
cmp
push
ja
xchg
dec
repnz
cs
retf
dec
xchg
mov
sbb
push
popf
dec
jmp
and
out
xor
dec
mov
dec
ins
jmp
xor
cdq
lods
mov
in
retf
repz
jo
fld
outs
xor
and
cmp
pop
fcom
(bad)
fst
or
ret
fadd
cmc
jns
xchg
clc
adc
pop
xor
cs
inc
gs
cmp
fld
sub
sti
xchg
fcomip
dec
ror
lods
scas
adc
inc
and
and
cli
mov
sub
sbb
retf
stos
push
ss
ss
push
mov
leave
aam
cmp
pop
mov
xor
xchg
xor
shl
cmp
add
mov
sbb
std
aaa
fwait
imul
mov
mov
and
hlt
mov
sar
adc
cld
enter
mov
aad
in
jbe
dec
pop
cmp
fxtract
xchg
in
add
(bad)
mov
ins
xchg
arpl
sub
les
test
sub
int
mov
jl
test
cmps
dec
fistp
add
mov
push
leave
aad
or
sub
jo
shr
div
(bad)
mov
imul
shl
pop
pusha
aam
add
push
icebp
jle
xchg
mov
scas
aam
add
icebp
sub
rcr
ret
and
jb
add
jl
mov
inc
das
or
les
sar
jecxz
push
xor
inc
xor
(bad)
addr16
(bad)
bnd
stos
or
sbb
das
iret
mov
sub
jge
ror
sbb
dec
mov
or
add
rol
adc
repnz
sub
xor
sbb
enter
add
xchg
cmps
or
(bad)
jno
shl
push
sbb
mov
ds
pop
enter
sahf
mov
inc
cwde
test
and
dec
sti
jmp
repnz
je
cmp
enter
sbb
sub
inc
mov
fdiv
cdq
scas
xchg
enter
pop
mov
out
and
mov
inc
aam
mov
nop
lods
ins
outs
push
popf
pop
pusha
pop
out
jne
out
cli
shl
fs
dec
(bad)
and
mov
mov
pop
bound
addr16
fs
dec
cli
stc
jmp
add
push
div
fwait
clc
dec
xor
inc
aam
ret
(bad)
fld
fist
jne
xchg
clc
scas
stos
sti
or
ja
rcl
jmp
lea
lods
dec
pop
icebp
sbb
(bad)
dec
leave
xchg
cmp
mov
popa
lahf
cmp
jbe
pop
cmp
mov
popa
inc
push
mov
cmp
cli
mov
cmp
and
xor
dec
lahf
mov
jmp
sbb
clc
pop
mov
ins
jmp
dec
jb
test
jle
mov
pop
test
dec
(bad)
cdq
dec
sbb
aam
daa
mov
xor
stc
xor
mov
fcmove
jg
push
fadd
(bad)
test
sub
leave
enter
lods
sar
cmp
dec
jo
and
cmps
sbb
mov
fstp
push
mov
sbb
dec
hlt
cli
jmp
int
sub
pop
xchg
test
pusha
cvtps2pd
neg
mov
or
les
scas
fcomp
add
mov
or
sbb
out
adc
es
and
xor
(bad)
or
push
shr
xchg
add
push
data16
imul
add
das
and
lods
cmp
cmps
jmp
test
xor
hlt
int3
cmps
or
mov
movs
shl
gs
je
jg
data16
les
aad
xchg
jg
xchg
leave
dec
scas
mov
imul
dec
test
out
aad
xor
data16
in
inc
or
stos
cmps
rol
retf
xchg
(bad)
cmp
cmps
pop
xor
xlat
xlat
add
push
retf
and
add
add
fs
test
jo
movs
adc
sbb
push
xchg
jmp
or
repz
loope
dec
fidivr
and
lods
sub
inc
mov
test
add
out
sub
test
xor
adc
adc
call
xchg
data16
movs
sub
into
or
aas
push
push
mov
loop
repz
rcl
push
sub
cmova
mov
adc
std
arpl
popf
leave
push
mov
dec
iret
mov
ret
scas
xchg
push
lods
cwde
imul
xor
or
xor
push
xchg
inc
jmp
push
mov
push
sar
out
and
shr
mov
mov
xchg
mov
aaa
js
cdq
shr
stos
ret
add
and
(bad)
enter
and
rcl
push
mov
repnz
push
mov
pop
push
lods
sti
sbb
push
lds
lds
mov
dec
dec
je
sub
mov
dec
mov
ret
mov
push
push
call
inc
jae
jnp
test
(bad)
dec
jnp
hlt
aas
test
cdq
lahf
fist
leave
aaa
jl
push
push
imul
add
enter
xor
ins
fcmove
ins
cmp
test
push
cmp
push
or
test
lods
mov
adc
(bad)
mov
mov
mov
cli
mov
int
(bad)
jbe
adc
mov
inc
adc
mov
ret
xor
es
sub
cmc
iret
adc
aaa
sar
loopne
xchg
xor
out
inc
and
ret
inc
rol
cmp
aaa
xor
jecxz
sbb
fstp
ret
or
mov
je
push
enter
mov
fistp
push
clc
leave
pop
ss
fistp
dec
repnz
inc
ins
lock
jmp
jbe
sbb
pusha
cmps
shl
or
js
add
icebp
aaa
repz
inc
mov
mov
(bad)
mov
mov
cmp
adc
sti
lods
mov
xchg
aam
mov
xchg
cld
cld
jae
pmulhw
cmp
inc
xchg
pop
rol
jno
dec
int
xor
mov
(bad)
in
mov
sub
sbb
fstp
dec
int3
les
pop
out
inc
add
mov
dec
fwait
arpl
pop
fmul
push
cdq
xor
mov
or
imul
push
ret
lea
jbe
ja
call
retf
pop
hlt
shr
add
pop
test
das
pop
retf
gs
push
popa
or
cmp
sbb
xchg
or
or
inc
jmp
add
out
push
xor
pusha
cmp
icebp
repz
sub
sub
int
add
sub
pushf
push
or
dec
or
std
ss
push
cwde
scas
std
sbb
pop
dec
pushf
ret
ficom
push
sub
scas
sbb
outs
or
xor
pop
enter
mov
xor
push
xchg
fidiv
dec
sahf
fs
call
adc
(bad)
es
mov
sbb
push
pop
jne
mov
cmps
jl
daa
inc
jmp
cmp
mov
aas
lods
push
sbb
dec
cmp
rol
or
jae
or
mov
add
jbe
sbb
repz
mov
js
mov
jne
dec
es
sub
in
je
loop
add
cmc
shl
xor
out
movs
cwde
leave
scas
jle
sub
dec
movs
(bad)
and
sbb
push
and
pop
mov
outs
xor
daa
push
pop
jge
sti
xchg
xchg
cld
sub
les
inc
push
sub
repz
out
test
sbb
inc
cdq
lds
cmps
inc
fdivr
pop
xchg
std
pop
jbe
retf
pop
in
ins
cmp
push
cmc
dec
cmp
frstor
cmp
cmp
push
ds
cmp
popa
outs
fild
stos
mov
loopne
sbb
sub
mov
test
ret
lock
xchg
mov
fsub
in
inc
jo
fld
push
push
stc
and
dec
(bad)
ja
mov
xor
add
repz
lods
jmp
inc
shr
mov
pop
and
leave
sbb
call
ror
shl
movs
imul
mov
in
test
enter
pop
mov
push
mov
or
imul
aad
push
aas
xchg
out
sbb
loopne
mov
ror
push
fdivrp
cmp
or
ins
daa
out
cmp
jae
and
adc
jnp
(bad)
cmp
pop
pop
mov
out
mov
mov
imul
mov
ret
imul
aad
push
ret
add
and
call
icebp
xchg
pop
ffreep
shl
test
shl
test
sbb
icebp
xchg
jecxz
cmp
in
les
jo
jo
push
cmc
sbb
sbb
ins
pop
pop
cmc
cld
movs
in
ins
fiadd
xchg
cli
inc
cmp
xchg
sub
js
xchg
test
mov
loopne
gs
icebp
imul
mov
mov
inc
data16
loop
cmps
dec
inc
or
cwde
adc
and
ror
xor
arpl
xchg
sub
int
xchg
loope
mov
sub
(bad)
jo
dec
mov
mov
scas
dec
push
inc
xor
and
xchg
lock
add
(bad)
icebp
inc
ret
out
aas
sbb
(bad)
out
xor
fisub
call
movs
ss
mov
xchg
cmp
sbb
sahf
pop
mov
inc
loopne
addr16
mul
mov
xchg
mov
stc
inc
les
mov
loope
aaa
lds
jl
and
outs
jmp
and
pusha
(bad)
mov
mov
mov
data16
jle
pop
jmp
js
xchg
imul
es
lock
cli
aas
sub
les
ret
fucomip
sbb
add
aas
fild
sub
inc
popf
aam
movs
cs
aad
adc
lock
add
(bad)
jg
xchg
retf
add
imul
mov
jge
movs
xlat
hlt
aas
(bad)
dec
cdq
aam
daa
sar
inc
cmp
cmp
movs
jnp
or
loope
stos
xchg
jo
(bad)
in
mov
ins
xchg
dec
movs
adc
cli
push
fwait
shl
jno
movs
add
mov
jmp
shl
pop
stos
push
ss
push
aam
xchg
xor
push
pop
addr16
into
pop
dec
in
push
in
xchg
mov
dec
pop
jne
pop
shl
cmps
sub
push
int3
popf
test
ds
sub
(bad)
inc
inc
gs
add
cmp
pop
mov
jg
lods
dec
inc
pop
mov
lds
pop
adc
adc
dec
ror
mov
or
(bad)
jge
daa
jmp
cwde
sahf
or
ja
jp
add
pop
stos
test
push
hlt
and
ror
in
inc
cwde
leave
and
push
(bad)
pop
jo
sub
push
pop
push
arpl
xchg
adc
sbb
jmp
cdq
push
push
push
popa
mov
mov
inc
cmc
cmps
bnd
jl
jge
push
pop
mov
adc
out
xchg
sbb
daa
adc
push
sub
test
pop
dec
push
(bad)
popa
jp
push
jle
xor
cs
dec
inc
(bad)
mov
or
mov
retf
mov
pop
fst
sti
dec
icebp
ret
mov
and
mov
ins
jmp
push
lock
cmps
push
dec
xlat
mov
xor
dec
popf
in
jns
cdq
xchg
and
inc
mov
lods
cmp
pop
shr
loope
mov
xor
and
jnp
bound
(bad)
jl
lahf
loop
test
push
inc
out
outs
jnp
pop
int
sub
push
in
mov
jno
cdq
lahf
btr
or
bound
fsub
inc
cmp
xor
jle
cwde
into
ins
out
aam
je
aad
cwde
cs
(bad)
aas
adc
data16
mov
sbb
mov
pop
and
sub
jns
sub
shl
and
adc
jp
pop
sbb
mov
dec
neg
push
dec
sbb
das
cmc
arpl
int3
mov
lahf
shl
mov
sbb
das
je
add
loope
cs
stos
fs
add
add
fsincos
(bad)
xchg
dec
stc
addr16
dec
xchg
(bad)
xor
retf
lea
(bad)
jle
push
sbb
xchg
cmp
and
add
sbb
(bad)
data16
mov
pop
dec
ret
jbe
cmp
pop
push
pop
add
dec
cmp
ins
xor
jmp
ficom
cdq
call
and
mov
cmps
inc
hlt
mov
lahf
pop
lea
cmp
inc
xor
jmp
jne
retf
in
sbb
mov
out
xor
rol
daa
ins
inc
cmp
imul
shl
xor
jbe
leave
into
xor
in
cli
push
xchg
mov
cld
mov
add
scas
dec
sub
std
sbb
cmp
lds
mov
cmp
jp
addr16
adc
or
and
scas
jmp
bound
xchg
fsubr
or
xor
pop
shl
xor
adc
jnp
shl
cmp
popf
mov
fsubr
pop
cmps
inc
idiv
cmp
cmp
xchg
stos
pop
ins
out
mul
cdq
lock
dec
ja
and
sbb
test
jbe
or
or
jb
xor
call
xchg
push
mov
imul
test
pop
icebp
or
push
enter
cmp
nop
je
xchg
pusha
pop
data16
jecxz
pop
cli
retf
cld
les
imul
ss
fs
or
jb
xchg
adc
lea
into
scas
hlt
add
(bad)
dec
stc
call
mov
ficomp
pop
xchg
mov
jne
and
cmp
mov
sbb
jno
pop
mov
cwde
test
scas
or
neg
ins
data16
dec
jae
fsubr
jns
pusha
inc
sub
stc
icebp
leave
js
addr16
xor
adc
xchg
out
push
aaa
xchg
adc
mov
test
adc
push
popf
daa
retf
sub
lock
push
dec
hlt
ret
mov
mov
pop
dec
stos
and
xchg
sub
xchg
inc
mov
mov
mov
xchg
mov
jle
icebp
mov
repnz
loope
mov
test
arpl
imul
jno
pop
inc
pop
xlat
xchg
dec
in
push
stc
inc
dec
lods
mov
das
cmp
neg
call
in
or
dec
inc
jnp
(bad)
aas
pop
test
cwde
or
(bad)
pop
and
(bad)
xchg
cmp
ds
ret
arpl
mov
mov
in
sub
dec
out
popa
cmp
(bad)
pop
push
sbb
lods
pop
cmps
sbb
pop
xchg
stos
shl
icebp
call
mov
push
sar
jns
sub
lock
int3
nop
mov
sbb
imul
rol
and
leave
or
jecxz
cli
lods
daa
iret
aaa
cdq
fst
dec
jmp
push
loop
in
clc
and
ss
dec
not
rcl
jbe
push
pop
outs
scas
mov
sub
sub
hlt
(bad)
shl
cwde
leave
adc
std
(bad)
mov
daa
mov
jp
and
js
inc
xor
mov
pop
mov
dec
(bad)
dec
ins
in
repnz
sbb
out
aad
pop
push
xchg
jg
je
out
jl
es
mov
mov
das
cmp
mov
arpl
scas
lock
sbb
xor
pop
loope
loope
inc
push
scas
outs
inc
cmp
test
sub
sti
jo
fistp
fidiv
jmp
sbb
(bad)
cmps
sub
loop
cmc
jo
or
pop
and
shr
or
adc
xchg
lods
jno
or
adc
aas
dec
pop
xor
popa
pop
lods
mov
sub
(bad)
add
(bad)
imul
pop
push
(bad)
leave
add
mov
in
mov
gs
inc
fld
jno
fwait
jmp
and
pushf
xchg
addr16
movs
push
push
test
inc
push
mov
mov
push
mov
loop
fisubr
xchg
jno
loope
mov
add
xor
sbb
mov
or
add
int3
cld
stc
xchg
adc
sub
ins
or
jle
arpl
pop
push
cld
leave
xor
fmul
fcomip
sub
and
push
inc
and
xchg
xchg
xor
mov
pop
xchg
dec
fcom
sub
stos
sti
(bad)
hlt
je
xor
mov
pop
dec
cmp
nop
push
sub
inc
or
xor
push
fiadd
and
sbb
lgs
stos
(bad)
neg
cmp
cdq
(bad)
ftst
add
jnp
jo
jnp
xor
outs
push
jg
jne
xor
inc
mov
push
aas
push
xchg
cdq
push
aam
repz
xor
jle
aaa
imul
lods
daa
xchg
ins
push
mov
mov
xchg
sub
inc
cs
mov
xchg
xchg
mov
push
pop
out
and
(bad)
rol
stos
imul
icebp
inc
sar
je
sbb
loopne
in
mov
push
dec
lock
lds
mov
data16
mov
add
pop
pop
jle
mov
popa
stos
mov
out
add
ret
repz
mov
nop
stos
adc
mov
jecxz
adc
push
or
fnstenv
mov
sar
xchg
xchg
jns
sub
cmps
jae
mov
mov
inc
ror
xchg
pop
or
(bad)
pushf
xchg
jno
pusha
mov
shr
fs
cmp
push
mov
push
cmps
dec
test
sub
inc
jmp
js
in
add
ss
sbb
mov
and
gs
mov
movs
sub
aas
inc
dec
pop
loopne
sbb
or
mov
ins
dec
(bad)
fimul
fmul
rol
xchg
jne
stos
es
xor
rol
fldcw
(bad)
mov
stc
xlat
mov
fsub
fdivr
mov
je
or
nop
lds
xor
lock
or
lods
xchg
lahf
scas
or
popa
jae
popa
sbb
adc
adc
int3
adc
inc
(bad)
pop
jbe
and
call
add
sar
add
pusha
arpl
imul
into
int
pop
jns
enter
ins
mov
and
int3
mov
or
outs
stc
cmp
or
popa
into
push
or
scas
test
daa
bound
pop
sbb
das
hlt
xchg
mov
cwde
mov
fwait
add
push
xchg
jmp
cmps
mov
xchg
jl
popf
pop
mov
out
fist
arpl
call
out
rcl
push
add
inc
and
in
sbb
cwde
int
xchg
ret
add
ja
addr16
scas
arpl
jmp
loopne
(bad)
pop
sbb
in
loopne
push
mov
inc
pop
sub
xchg
cmps
js
movs
inc
imul
fist
mov
jmp
mov
rcr
jp
push
sub
xchg
retf
outs
mov
sahf
jne
bound
mov
cmp
out
sahf
sar
mov
cdq
and
mov
dec
mov
in
sbb
shr
scas
pushf
int3
cmps
stos
inc
inc
jge
dec
sahf
inc
mov
pushf
scas
fistp
xor
or
and
cmc
mov
shr
mov
cmps
mov
jne
cmc
cmp
repnz
gs
and
cmps
add
add
(bad)
pop
pop
mov
movs
add
stos
dec
mov
xor
or
inc
leave
aad
mov
mov
jp
fidiv
jo
(bad)
js
sbb
cld
popa
add
es
mov
xor
inc
or
xchg
xchg
repz
shl
mov
movs
sub
sbb
xor
xor
outs
push
push
adc
mov
aaa
jl
ins
aas
shr
ins
push
cs
mov
addr16
xchg
mov
sub
lods
jle
sbb
cmp
clc
add
push
xchg
retf
mov
sbb
ins
pop
test
inc
ss
ret
jo
dec
imul
lahf
pop
in
shr
push
jg
add
out
shl
push
and
adc
out
cmp
in
ja
dec
push
xchg
cli
and
jnp
dec
pop
div
sbb
xchg
ret
(bad)
and
or
jo
cmp
movs
xchg
into
push
xchg
xchg
daa
mov
or
dec
adc
sub
ror
sub
inc
mov
push
or
in
popa
pop
(bad)
xchg
imul
lods
xor
dec
in
ins
cmp
dec
xchg
add
xchg
(bad)
or
and
push
jecxz
pop
mov
js
lods
sub
sub
mov
in
mov
iret
clc
fimul
xchg
aas
xchg
push
retf
lahf
pop
icebp
out
mov
ficomp
add
mov
jge
xchg
test
or
sbb
ss
(bad)
push
shr
mov
pop
clc
and
cwde
cdq
out
aam
jmp
mov
shr
pop
fdivr
sub
add
sub
jbe
pop
xor
and
adc
frstpm(287
cmp
imul
stos
out
xchg
mov
test
mov
mov
and
dec
xlat
cmp
test
js
mov
ins
retf
inc
pop
mov
xor
je
sub
iret
jge
push
xchg
std
push
bound
sahf
mov
scas
fmulp
xchg
mov
out
mov
cs
mov
push
stos
sbb
nop
mov
popa
cld
cld
les
mov
pop
pop
jb
mov
mov
push
sub
sbb
imul
ins
xrelease
lods
aaa
mov
jnp
add
dec
lahf
aad
ja
sbb
int
stos
pop
test
jp
movs
mov
adc
jnp
xchg
repnz
and
xor
imul
ud0
push
mov
retf
test
sar
dec
stos
xchg
imul
dec
adc
shl
aam
add
popf
jmp
xlat
mov
push
pop
out
fs
xchg
jnp
pop
mov
push
xchg
mov
in
popa
mov
cmps
cmp
mov
pop
fcomp
adc
rcl
ds
jmp
mov
call
jno
fcomp
ins
ror
jl
or
dec
jns
lods
cmp
jg
(bad)
fnstsw
(bad)
jnp
and
pop
rcl
sbb
retf
pop
mov
test
callw
lahf
xor
jnp
rcr
leave
pushf
sbb
adc
out
mov
pop
jp
call
cmp
mov
push
sbb
jge
xchg
jp
sub
mov
mov
enter
inc
in
push
outs
and
in
push
imul
int
dec
jl
mov
loope
test
outs
(bad)
cdq
xor
fwait
nop
cdq
call
add
xchg
mov
rol
push
gs
(bad)
or
sti
imul
dec
xchg
mov
call
xor
or
(bad)
aad
push
mov
leave
xchg
jnp
into
dec
out
push
shl
pop
cmps
clc
mov
retf
daa
add
dec
pop
inc
(bad)
and
(bad)
jbe
jnp
je
rcr
cmp
pop
adc
inc
pop
add
(bad)
pop
sub
cli
mov
push
pop
pusha
cli
xchg
push
jp
ins
sbb
dec
jmp
jne
fisub
sbb
mov
mov
pop
rol
mov
add
add
mov
clc
sbb
cwde
pop
iret
mov
mov
mov
int3
push
jae
lds
mov
les
ins
mov
mov
call
push
in
(bad)
jne
cmp
(bad)
bnd
pop
cmps
(bad)
clc
cmp
adc
outs
mov
popa
sti
shl
repnz
je
adc
in
sti
hlt
lock
mov
push
push
scas
jmp
dec
and
sbb
icebp
out
int
cld
rcr
xor
add
ss
jp
es
cmp
scas
fsubr
pop
cmp
jp
aam
sbb
and
int3
repz
outs
push
ror
in
and
stos
imul
aad
mov
jmp
shr
ret
pop
xlat
addr16
and
in
dec
jmp
out
pushf
retf
cmp
adc
retf
clc
ss
call
jle
jg
scas
(bad)
shr
cld
(bad)
fcomp
mov
push
test
and
jmp
push
jl
push
or
push
movs
inc
data16
(bad)
inc
(bad)
js
rcl
mov
mul
push
call
mov
pop
aaa
mov
sti
or
adc
jecxz
push
pop
and
dec
xor
sbb
sub
inc
inc
inc
sbb
xor
hlt
mov
xchg
pushf
add
fild
mov
inc
cmp
sub
loop
loopne
mov
dec
inc
gs
adc
scas
cmp
aas
call
adc
sub
cmp
push
add
not
xchg
jnp
arpl
mov
cdq
ds
test
movs
cwde
(bad)
mov
fld
cmp
movs
test
push
adc
dec
jb
daa
sbb
bound
inc
test
int3
jbe
imul
in
adc
cmps
and
mov
lods
in
mov
sbb
ja
fcmove
bndldx
dec
mov
out
inc
ret
pusha
inc
push
int
out
hlt
inc
mov
or
add
loope
inc
push
adc
je
push
push
test
bound
pop
aad
dec
mul
jb
retf
cli
sar
jnp
jae
dec
xchg
dec
mov
jno
stos
push
test
shl
div
popf
add
movs
cmp
mov
push
(bad)
adc
scas
das
int3
loopne
mov
dec
and
sub
(bad)
adc
jmp
xchg
fxam
punpckhdq
jnp
mov
xchg
das
movs
and
in
je
dec
retf
fidivr
fld
(bad)
cs
(bad)
ins
add
retf
mov
into
cmp
mov
inc
lahf
xchg
xor
ret
pop
mov
cwde
cld
cmp
cmp
in
add
xchg
jne
(bad)
jp
pushf
loope
dec
push
cmc
in
pushf
push
push
sbb
pushf
dec
mov
add
add
loop
das
call
inc
in
icebp
adc
cdq
xchg
out
enter
das
push
sub
je
mov
cmp
jnp
cmp
ret
arpl
or
inc
movs
jb
jno
inc
add
lock
pop
mov
adc
dec
sub
jbe
cmps
lds
out
or
mov
add
fstp
jecxz
dec
sbb
das
push
sub
mov
jae
xlat
out
(bad)
retf
loopne
pop
sub
push
es
or
in
push
push
fxch
and
into
ins
scas
iret
add
sub
inc
pop
inc
shl
sub
adc
pop
sub
in
push
or
mov
jg
in
stc
div
pop
cmp
popf
fs
jg
nop
adc
outs
cwde
out
mov
in
imul
xor
out
jp
popa
jns
jnp
pop
ins
test
push
cli
pop
xlat
icebp
pop
outs
sar
and
sahf
repz
push
pop
adc
xchg
fucomp
movs
aad
cmp
xlat
call
fdivr
pop
lods
mov
std
xchg
xor
inc
mov
push
es
or
pop
je
mov
and
jbe
push
inc
push
sub
push
ficom
sbb
cmp
push
iret
popa
pop
inc
adc
sbb
add
imul
mov
ret
into
xchg
inc
jns
fistp
sbb
jl
fimul
dec
jnp
bound
xchg
sbb
sbb
std
adc
mov
adc
shl
and
inc
cmp
cdq
pop
jl
push
adc
sti
fidivr
cmps
(bad)
cmp
xor
(bad)
push
add
movs
cmp
out
bound
ret
add
cmp
jno
out
loop
or
cs
int
adc
sbb
xchg
push
push
std
push
dec
xchg
or
div
xlat
(bad)
cmc
icebp
(bad)
mov
adc
cmps
pop
rcl
or
sti
push
sub
pop
inc
xlat
sub
add
push
xor
jge
sub
adc
mov
push
sub
adc
adc
movs
mov
sahf
fnsave
jge
sub
mov
xchg
in
(bad)
rcl
add
out
sub
mov
dec
and
jle
sub
gs
cwde
jg
lods
and
pushf
or
into
scas
xchg
jle
adc
fstp
(bad)
retf
pop
out
add
outs
pop
sub
jae
mov
sub
rcl
aad
pop
mov
jle
mov
daa
or
imul
js
movs
fiadd
jg
xchg
out
push
je
adc
xor
push
lahf
aad
jo
shl
rol
ss
push
push
cs
movs
cmps
sub
cwde
jp
jnp
sub
add
sahf
mov
and
pushf
jbe
adc
push
cwde
dec
not
call
pop
sub
adc
sbb
xlat
mov
add
sub
scas
push
xlat
mov
aas
mov
pop
add
mov
retf
cmc
leave
cmps
jle
fdiv
mov
dec
imul
ja
neg
inc
test
aas
fadd
add
jne
jmp
pop
arpl
xchg
pop
jg
outs
shl
js
(bad)
cmc
jp
pop
add
in
shl
and
gs
or
cmp
pop
pop
add
add
cmp
push
shl
test
aas
out
mov
cmp
cmp
in
stos
(bad)
repnz
inc
sar
push
jge
bound
outs
pushf
sbb
inc
fwait
mov
mov
movs
lock
pop
jae
test
div
sub
xchg
mov
jo
xchg
jp
das
imul
pushw
push
popa
hlt
scas
shl
xor
in
in
xchg
call
inc
sub
adc
cmp
or
inc
rcl
addr16
xor
dec
xor
jno
imul
mov
push
jae
sbb
retf
sti
dec
inc
pop
add
pop
gs
std
dec
jo
out
adc
jecxz
inc
ins
sub
mov
imul
inc
xor
lahf
mov
xchg
push
iret
push
out
out
mov
popf
outs
dec
not
lds
scas
jp
jle
jmp
lea
icebp
div
inc
push
mov
repz
jae
mov
je
add
jge
data16
sar
mov
shl
daa
es
mov
fdivr
clc
and
adc
push
dec
push
pop
jle
mov
fwait
xchg
push
repnz
aaa
jecxz
test
fild
dec
mov
mov
lea
adc
push
retf
sbb
js
xor
cli
lahf
retf
pop
adc
jae
in
lea
mov
push
ss
lahf
sub
loopne
adc
loope
js
test
pop
xchg
mov
ds
out
sbb
addr16
push
xor
push
je
movs
adc
adc
cmp
push
cmp
push
inc
call
pop
aas
idiv
adc
mov
sbb
or
sbb
and
or
out
movs
sbb
sti
int3
aad
pop
add
test
mul
ja
test
push
add
push
into
xor
push
push
popa
imul
ret
out
cmp
(bad)
enter
dec
lods
mov
pushf
xchg
adc
pop
(bad)
lods
push
movs
lds
aam
jno
inc
iret
(bad)
push
and
mov
fs
aas
in
and
ror
mov
lods
fwait
sbb
cmc
sti
xchg
adc
sbb
sahf
inc
bound
sar
mov
shl
(bad)
lea
inc
mov
mov
outs
adc
mov
test
mov
data16
neg
nop
and
in
or
mov
sub
arpl
cmp
in
loopne
add
shl
mov
inc
fs
pushf
xchg
mov
or
out
adc
jge
xchg
ret
enter
ds
push
mov
dec
test
dec
inc
mov
inc
retf
mov
pusha
mov
cmp
pop
push
xor
paddw
clc
test
jns
sbb
jle
add
xchg
or
inc
jl
cmp
jnp
in
adc
imul
jge
sub
test
dec
imul
jle
jecxz
(bad)
jp
inc
push
stc
add
dec
into
xchg
push
mov
in
mov
mov
out
(bad)
retf
pop
add
cmp
popa
cld
jo
mov
push
shr
pop
xor
jecxz
mov
xchg
sub
test
add
push
sbb
in
jbe
ror
xchg
inc
xor
mov
arpl
and
pushf
jno
(bad)
dec
ins
add
cmp
xor
dec
or
movs
jp
and
pop
imul
lods
xor
pop
cmp
mov
fstp
add
push
je
stc
push
fs
loop
or
test
jle
or
sub
arpl
imul
push
pop
mov
sbb
push
dec
lock
loop
fwait
stc
adc
cld
jnp
cli
and
lds
retf
popa
inc
es
and
ret
gs
je
dec
xor
adc
mov
lea
retf
adc
shr
(bad)
mov
push
cli
adc
xlat
popa
xchg
or
aaa
gs
sahf
mov
aam
in
inc
mov
enter
xchg
aam
sub
out
shl
mov
jge
pop
xchg
sbb
retf
sbb
pop
sub
mov
cmp
inc
unpckhps
sbb
xchg
or
jg
out
jbe
cmps
(bad)
and
pop
mov
outs
add
cli
push
adc
ins
fcomp
(bad)
and
test
cmc
mov
sti
add
xor
mov
mov
inc
mov
call
sub
mov
jo
mov
sbb
cmps
add
mov
cs
rcr
fld
mov
mov
ror
jp
jns
idiv
adc
inc
rcr
test
push
mov
movs
rep
sbb
out
sahf
pop
mov
or
test
and
(bad)
hlt
fnstsw
das
cmps
mov
push
add
mov
jecxz
sbb
push
fadd
cmp
mov
xor
pop
push
lahf
xlat
pop
push
mov
lock
jle
arpl
sahf
ins
xor
xor
mov
stos
rcr
and
pop
fwait
push
sahf
fst
fs
stos
hlt
fadd
mov
lods
xchg
jp
cli
scas
ss
pop
push
movs
or
dec
adc
cmp
lds
mov
sti
add
xor
jmp
add
fidiv
and
ins
(bad)
and
(bad)
mov
(bad)
loope
sbb
adc
lock
mov
xor
fxtract
dec
sub
inc
inc
rol
dec
dec
fcomp
inc
test
xor
mov
jbe
mov
clc
cvtpi2ps
sahf
enter
cmp
mov
popa
inc
loop
dec
nop
jmp
push
rcr
dec
in
ins
add
mov
inc
mov
je
clc
inc
mov
fs
and
sbb
adc
ror
mov
int3
pop
gs
leave
lahf
add
ret
aad
adc
shl
test
test
(bad)
sub
dec
pop
or
sbb
jl
aas
xchg
cmp
ins
shl
pusha
and
jmp
xchg
xchg
and
retf
dec
push
adc
inc
fsincos
xchg
out
movs
or
xchg
outs
repnz
pop
movs
in
jnp
call
es
gs
mov
call
jp
xchg
stc
push
mov
ret
cs
in
xchg
and
inc
adc
(bad)
es
ss
rcl
cmps
mov
pop
mov
pop
add
cwde
xlat
xlat
inc
punpckhdq
test
or
cmp
adc
sahf
ret
jge
jp
add
add
js
in
push
inc
dec
push
movs
in
scas
fst
push
mul
mov
mov
cdq
or
sub
jno
push
sbb
hlt
push
(bad)
aaa
retf
adc
mov
in
fmul
jg
fmul
sbb
imul
cmp
add
outs
inc
cmp
inc
mov
push
dec
dec
icebp
outs
call
dec
push
or
xor
cmp
mov
jl
pop
lea
xor
int
lea
mov
call
push
push
mov
shr
xchg
imul
add
into
mov
pop
inc
inc
nop
into
inc
jge
jno
xchg
sbb
cwde
stos
icebp
and
cmps
das
xchg
gs
or
mov
bound
sub
sar
push
push
paddusb
leave
push
adc
dec
pop
aam
outs
cmp
mov
dec
jmp
out
scas
jno
pop
cmps
sub
adc
mov
or
cmp
jecxz
(bad)
pop
ficom
sahf
dec
enter
arpl
xchg
fsubr
int
(bad)
push
fwait
adc
in
xchg
lock
iret
and
mov
cld
fwait
push
div
movs
and
icebp
pop
ret
rol
dec
lea
ror
out
stos
dec
aam
and
mov
nop
repz
outs
in
ins
lea
into
mov
out
out
xor
pop
mov
push
fidiv
das
dec
or
lock
int
lahf
add
pop
mov
call
div
sti
pop
es
and
xchg
leave
cmps
sbb
aas
call
dec
popa
idiv
ds
add
fs
aad
jmp
cwde
call
(bad)
jb
popf
and
fmul
mov
and
rcl
push
(bad)
mov
ins
and
xor
push
dec
ror
pop
stos
or
pop
xchg
jo
(bad)
outs
push
repnz
shl
push
push
cmp
add
push
pop
jbe
sbb
xchg
adc
push
div
ret
adc
jnp
push
and
adc
(bad)
push
les
(bad)
arpl
xor
mov
ins
xor
aam
xor
push
cmps
rcl
sbb
mov
imul
inc
frstor
xchg
jecxz
cwde
daa
loopne
adc
mov
jns
push
es
or
sahf
daa
cs
xchg
jnp
mov
clc
outs
pop
sar
rcl
jp
xchg
and
pop
sub
arpl
or
mov
mov
frstor
xchg
push
scas
je
xlat
add
and
pop
sbb
dec
xchg
mov
cmp
ja
or
push
loopne
out
dec
into
push
pop
fstp
cmps
sub
jmp
cmp
lea
out
xchg
xor
shr
mov
aad
dec
mov
fisttp
dec
or
in
sub
seto
mov
lds
mov
mov
cmc
std
adc
pop
jmp
movs
mov
getsec
aas
pop
push
std
(bad)
fcom
outs
sub
push
xlat
jno
push
push
mov
sub
push
and
out
dec
test
jmp
inc
jge
je
mov
scas
mov
mov
jl
push
jmp
push
inc
xor
ja
dec
mov
(bad)
lahf
mov
mov
xchg
cli
xchg
pop
xchg
mov
pop
loopne
(bad)
sbb
lods
xor
icebp
xchg
jmp
stc
adc
or
mov
mov
icebp
mov
xchg
out
ret
pop
cmp
imul
lock
pop
inc
mov
mov
sbb
out
out
jnp
push
cwde
js
jmp
pop
hlt
out
xchg
sub
fstp
cmp
nop
jns
push
adc
scas
sbb
in
rcl
jbe
cmps
std
jne
and
popf
int
inc
pop
push
dec
pop
mov
mov
(bad)
ja
cmp
push
mov
mov
xchg
popa
or
sar
jge
sbb
jno
movs
pop
jmp
pop
rcl
pop
ret
lods
outs
cmp
repz
stos
dec
out
int
push
jg
jmp
cmp
inc
xchg
cmp
mov
jle
mov
add
jecxz
or
popf
loope
addr16
out
and
pop
or
xchg
sub
pop
dec
ja
add
addr16
mov
cwde
out
cmp
lea
xchg
pushf
adc
dec
enter
push
sub
(bad)
out
test
out
mov
aam
icebp
mov
in
dec
int3
in
je
xchg
fld
xor
xchg
pop
fisttp
mov
fdivr
jae
cs
jb
imul
or
cmc
jbe
adc
and
pop
aad
das
mov
inc
add
jne
rcr
mov
mov
mov
ss
int3
dec
fcom
jmp
push
repnz
jmp
cmp
push
(bad)
cmp
mov
je
mov
xchg
sbb
fld
iret
cmp
mov
enter
fstp
shl
cld
test
popf
mov
add
xchg
in
fmul
(bad)
stos
cmp
dec
xchg
ins
ins
sti
add
rcl
fprem
clc
loop
jl
jae
(bad)
fs
js
pop
repnz
xor
xchg
or
inc
sahf
or
xchg
add
xor
shl
ret
or
retf
comiss
add
call
cwde
dec
hlt
test
cmc
popa
xor
ds
xor
outs
jnp
test
or
ret
jne
jne
fsubr
jl
add
add
sbb
mov
std
pushf
ffree
shl
hlt
push
aas
push
and
outs
pushf
mov
mov
xlat
cmps
jne
ja
xchg
int
sbb
xchg
addr16
cld
mov
and
mov
in
adc
das
test
cmc
sub
arpl
fnop
imul
das
mov
mov
(bad)
adc
dec
and
jl
cmps
inc
sahf
xchg
mov
dec
or
(bad)
push
sub
repz
(bad)
rcr
mov
cmp
das
xchg
mov
or
(bad)
fcom
mov
pop
xchg
xlat
pop
jg
loop
mov
into
or
mov
js
mov
jo
les
mov
clc
fcomp
test
lds
push
loopne
pop
mov
enter
aaa
loop
xchg
xchg
adc
sub
dec
(bad)
xchg
jno
inc
gs
dec
fist
jns
into
and
fdiv
aam
jbe
cmps
push
rol
ret
sub
mov
dec
mov
sbb
test
pushf
inc
je
dec
neg
fdiv
call
out
jmp
dec
test
mov
sbb
retf
and
xor
js
out
mov
add
mov
sar
popf
in
cld
into
cmps
iret
sar
mov
xor
ret
ret
sbb
neg
mov
sbb
pop
cmp
xor
inc
out
not
mov
add
adc
mov
cli
call
mov
mov
sbb
iret
xlat
mov
xor
fidiv
lahf
push
shl
dec
aad
jg
or
mul
fsubr
sub
pop
mov
jno
(bad)
scas
nop
xchg
in
fiadd
sar
add
xchg
or
loope
sbb
cmp
sub
jbe
push
test
inc
ret
and
add
inc
push
jecxz
or
or
call
jp
xor
sub
imul
pop
push
inc
dec
push
or
and
mov
adc
dec
icebp
sbb
mov
jo
sar
jecxz
and
cli
hlt
repz
popa
adc
mov
outs
xlat
adc
jae
push
jge
cmps
dec
and
sbb
push
pushf
jno
dec
inc
and
repnz
jmp
inc
sub
dec
lock
dec
outs
or
sti
call
cli
mov
mov
sub
cld
sbb
adc
std
mov
push
ret
sbb
gs
popf
xor
cld
pop
and
add
popf
(bad)
mov
mov
inc
sbb
hlt
fs
add
(bad)
or
fwait
in
sbb
addr16
and
pop
sbb
add
sbb
sbb
loope
xor
shr
mov
pop
xchg
jae
retf
push
xchg
mov
mov
rol
sbb
clc
sub
cmps
pop
dec
lock
fimul
stos
shl
or
clc
shl
xor
or
jmp
or
adc
(bad)
adc
arpl
fs
mov
iret
add
mov
and
mov
or
fst
ins
iret
mov
adc
xchg
sbb
push
dec
mov
jne
addr16
pushf
loope
push
repz
push
push
jmp
pop
sub
repz
inc
add
and
mov
popf
jl
and
int
sbb
push
adc
mov
ss
dec
dec
inc
xchg
inc
mov
pop
repnz
jmp
into
adc
dec
xchg
xor
adc
arpl
shr
mov
sbb
inc
mov
mov
fdivp
sub
inc
and
push
into
jmp
and
cld
shr
dec
xor
jmp
cmp
or
mov
cli
stos
clc
imul
popf
jno
call
outs
ftst
adc
test
and
int3
sti
pop
lods
cli
adc
cmp
std
or
xor
add
dec
or
fiadd
mov
xchg
add
xor
dec
and
mov
bound
xor
cwde
dec
adc
sbb
rcl
cmps
out
jnp
pmuludq
gs
test
sbb
dec
popf
imul
add
dec
mov
mov
stos
lods
call
fwait
icebp
push
dec
sbb
out
jne
int3
leave
pop
mov
mov
sbb
loopne
xchg
mov
gs
mov
push
loop
and
cmps
imul
in
mov
int
push
dec
dec
lock
aad
mov
dec
inc
(bad)
jmp
pop
cmp
fidiv
xchg
retf
jl
loope
or
jge
fcmovnbe
fldcw
(bad)
sbb
pushf
jb
das
xor
rcr
and
aam
push
enter
sub
and
and
sbb
jmp
shl
push
mov
add
stc
jmp
mov
inc
pop
inc
out
movs
int3
mov
add
and
pop
mov
cmc
(bad)
mov
jmp
jge
shr
ins
std
push
mov
or
inc
scas
mov
xchg
iret
cwde
mov
mov
imul
ss
or
(bad)
movs
shl
xchg
jno
je
jno
aas
or
cdq
mov
ins
pop
and
out
mov
dec
stc
add
jg
aaa
add
jp
pusha
push
imul
jbe
pusha
cwde
outs
retf
aad
sar
xor
dec
cmp
sahf
fidivr
aaa
and
pop
or
mov
rol
sbb
mul
in
ins
je
leave
(bad)
aam
and
test
fcom
icebp
push
inc
jns
daa
xor
mov
sub
rol
sahf
jae
cmp
jno
adc
mov
jmp
inc
and
and
retf
inc
call
sub
int3
aas
pop
shl
mov
inc
bound
dec
dec
(bad)
add
sbb
dec
in
pop
mov
sub
je
and
sub
mov
sub
dec
lock
pop
cmps
jbe
push
loopne
xchg
jne
cmp
push
lock
retf
jns
sub
mov
(bad)
push
push
cs
cmp
or
std
addr16
xchg
pop
push
in
pop
rcr
pushf
sahf
ficomp
jne
push
inc
and
(bad)
lods
scas
repnz
xchg
(bad)
or
pushf
aaa
lds
dec
pshufw
pop
cmps
out
push
cli
dec
inc
dec
fcomp
aad
ja
leave
mov
(bad)
outs
pop
mov
and
cmps
hlt
jmp
daa
dec
fs
sbb
inc
or
or
jae
rcr
xchg
jnp
aam
cwde
or
xor
cwde
mov
mov
mov
retf
imul
or
xchg
dec
(bad)
fld
enter
dec
gs
cmp
loop
shr
push
adc
mov
add
imul
fcom
adc
inc
push
xchg
movs
imul
(bad)
icebp
dec
shl
pop
push
fld
shr
aad
lea
loope
je
(bad)
cmc
in
mov
adc
jp
sub
sbb
test
mul
aaa
lds
and
jmp
add
push
adc
mov
xchg
clc
sbb
jmp
loop
ins
faddp
in
outs
cmp
mov
aaa
push
shl
sar
dec
std
or
or
in
mov
out
(bad)
pop
jmp
(bad)
or
daa
imul
scas
xor
push
out
outs
je
mov
bound
nop
sbb
and
pop
(bad)
xor
and
lea
xchg
fstp
inc
cmc
data16
aad
lock
(bad)
outs
or
cdq
loope
sbb
pop
shr
xchg
push
sahf
mov
xor
xchg
popa
cli
std
test
in
mov
dec
mov
jbe
dec
out
push
lds
lods
daa
dec
dec
sub
leave
int
fisttp
sahf
cmps
call
xchg
test
fdiv
xchg
daa
xchg
iret
push
jns
arpl
jnp
mov
test
outs
dec
in
(bad)
loopne
jmp
mov
test
(bad)
iret
cmp
xor
out
rcr
cmp
jo
out
add
jg
add
pushf
push
xchg
and
pop
daa
ja
push
aad
mov
outs
and
jg
(bad)
jmp
fsub
pop
pushf
hlt
push
adc
or
jnp
iret
pop
js
into
jmp
retf
mov
or
repnz
jecxz
repz
xchg
cmp
or
das
(bad)
sbb
ja
in
test
or
mov
pop
imul
cmp
push
cmp
jo
pop
cmps
js
sbb
mov
rcl
retf
data16
inc
fild
pop
in
in
mov
imul
in
icebp
xor
cmp
inc
int3
or
mov
test
sbb
imul
in
mul
pop
and
mov
ins
sahf
inc
mov
in
fidivr
in
mov
out
in
mov
stos
cmp
aad
xchg
mov
or
add
sub
ret
or
fwait
idiv
jecxz
push
cmps
push
cmp
cmp
pop
jae
repz
ins
jp
dec
inc
cmp
dec
mov
adc
push
inc
cmp
into
mov
pop
push
(bad)
stos
je
inc
sub
pop
mov
bound
inc
xchg
jge
pop
cwde
pop
mov
jns
cdq
shr
cmc
add
pop
test
push
cmovg
xor
add
loopne
ds
clc
(bad)
mov
aam
lods
jmp
popa
inc
add
xchg
in
in
dec
stos
jg
xchg
sub
push
cdq
xlat
dec
scas
test
(bad)
sti
icebp
bound
sub
mov
inc
sti
adc
int3
mov
or
into
outs
mov
mov
and
push
cmps
dec
push
movs
test
inc
dec
daa
gs
lds
push
push
in
loop
imul
cmp
out
mov
dec
jno
sbb
sbb
adc
dec
push
cmp
cli
adc
aad
xor
push
adc
test
std
sbb
mov
in
sbb
mov
stos
mov
sbb
push
out
jae
jle
cli
xchg
mov
out
inc
mov
ret
test
cld
scas
mov
mov
mov
(bad)
mov
out
or
xchg
mov
iret
mov
pop
add
(bad)
fwait
pop
ja
adc
inc
add
add
call
stos
(bad)
jnp
ins
sbb
aad
(bad)
xor
push
shl
xchg
xchg
mov
pop
or
fsub
sbb
rcr
aas
push
inc
pusha
lods
(bad)
jno
mov
pop
lods
jne
xor
xor
test
push
or
adc
adc
push
jecxz
rol
and
js
or
push
jge
scas
fs
pop
loop
cmp
data16
jne
test
dec
les
iret
call
or
shl
mov
mov
arpl
sub
(bad)
sub
cld
idiv
sbb
pop
push
pusha
and
imul
xchg
pop
cmp
in
push
jns
fnstsw
ja
popf
in
mov
dec
pop
retf
lock
in
leave
ret
icebp
(bad)
ss
mov
sbb
add
int3
(bad)
mov
xchg
add
ss
sbb
or
test
test
and
je
test
xchg
(bad)
fldenv
xor
sti
(bad)
and
cdq
sub
cwde
test
xchg
and
stos
jnp
jmp
scas
sti
data16
xlat
inc
dec
scas
pushf
cmc
pop
mov
jae
mov
shl
repnz
xchg
xchg
daa
and
arpl
ins
daa
test
dec
fimul
(bad)
push
(bad)
add
ja
cdq
(bad)
aad
pop
shl
adc
and
ins
cmc
in
add
std
dec
rcr
dec
xor
movs
inc
data16
add
adc
movs
scas
stos
jl
dec
imul
inc
push
dec
or
std
pop
arpl
out
pop
jae
call
mov
ficomp
sahf
hlt
ror
jbe
and
pop
sub
push
xchg
fstp
daa
dec
imul
movs
jb
mov
or
dec
cmp
adc
dec
lea
dec
push
xlat
sub
xor
mov
in
inc
pop
push
ss
add
xor
in
sbb
icebp
inc
xchg
add
pop
imul
jne
xlat
xor
inc
mov
cmp
loop
and
scas
movs
cmp
sbb
rol
add
popf
mov
inc
mov
lock
pop
loop
sbb
jo
imul
and
cdq
dec
dec
je
dec
pop
test
xor
sub
ins
jmp
arpl
xchg
(bad)
retf
mov
fisttp
push
xchg
bound
fdivr
cmp
mov
xchg
pop
xor
ficom
scas
mov
adc
popa
mov
sub
mov
jb
retf
jb
aad
jg
xchg
out
push
xor
cmp
shl
pop
push
sbb
dec
mov
jecxz
inc
in
push
fldenv
or
mov
(bad)
fld
iret
arpl
inc
push
sahf
add
xchg
pop
int3
lds
bound
(bad)
push
dec
(bad)
fisttp
hlt
cmps
outs
into
imul
sub
scas
fsubr
adc
retf
cmps
in
xchg
test
fcmovbe
loope
xor
cmc
mov
fs
push
add
in
inc
enter
xor
mov
and
pop
or
pop
jo
(bad)
pop
aam
pop
and
call
add
push
test
push
mov
arpl
ja
push
cmp
jp
pushf
xchg
mov
mov
gs
je
mov
pop
movs
or
clc
iret
ins
and
xor
mov
mov
or
sub
pop
stos
stos
inc
call
in
push
pop
popf
push
in
lods
pop
add
das
dec
or
jbe
jb
inc
repnz
fistp
cwde
imul
fs
jo
dec
inc
ficomp
rcl
dec
hlt
mov
push
pop
mov
mov
ss
jle
repz
push
jge
ret
jecxz
push
and
in
fisubr
test
sub
push
xchg
adc
inc
sbb
enter
sbb
pusha
jns
and
pusha
or
mov
jne
jae
and
push
dec
cs
sbb
inc
jecxz
jmp
int3
add
sahf
adc
dec
jns
pop
out
imul
jl
rcr
push
mov
xchg
dec
ins
call
inc
pop
jbe
not
popf
js
scas
(bad)
jnp
jl
sbb
cdq
or
pop
inc
mov
push
ss
mov
sub
sub
xchg
les
mov
or
jne
add
nop
sub
(bad)
dec
cwde
mov
imul
xor
js
cs
fisttp
add
inc
jb
or
and
and
cwde
sub
fmul
inc
call
imul
test
cld
and
or
sbb
in
mov
jg
ror
pop
cmp
adc
mov
enter
push
fadd
(bad)
xor
add
inc
jbe
mov
mov
add
cs
mov
out
mov
popf
pop
ja
scas
outs
rcl
and
pop
push
lahf
sbb
popf
mov
push
mov
pop
mov
jmp
xchg
mov
pop
dec
stos
data16
mov
fisttp
mov
add
xor
gs
movzx
test
(bad)
pop
cmp
leave
jl
mov
and
xchg
daa
push
mov
sbb
sbb
(bad)
aas
nop
fcomp
in
sub
push
bound
or
mov
loopne
sbb
and
je
repz
sbb
rcl
sub
dec
ins
mov
dec
add
mov
push
into
jmp
stos
(bad)
or
fcomp
test
xor
lahf
mov
and
ret
and
imul
mov
cmp
int
xchg
mov
movs
push
jae
adc
out
or
jge
pop
aam
(bad)
clc
pusha
cld
cmps
mul
inc
retf
loop
call
mov
mov
sbb
push
stc
xor
fcmovnb
cdq
cmp
inc
(bad)
cmc
mov
and
iret
pop
inc
fist
pop
(bad)
pop
dec
or
push
(bad)
scas
nop
mov
cmp
sbb
jns
dec
loopne
xor
pop
push
ins
js
sub
cmc
dec
cmp
xor
pop
inc
push
adc
mov
jne
data16
mov
das
add
jb
push
test
push
js
or
arpl
sbb
inc
cli
loop
rcr
cs
push
mov
into
mov
push
sbb
jo
call
jmp
cmp
lahf
inc
push
sbb
fst
pop
aad
(bad)
cmp
dec
and
sbb
sbb
imul
jge
inc
ror
ja
pop
repz
sbb
or
jmp
sub
ins
or
(bad)
and
fiadd
in
aas
fst
inc
inc
in
push
das
lahf
sar
fs
pop
mov
pop
mov
mov
mov
dec
imul
into
xchg
push
jp
and
push
mov
sbb
xchg
sub
cmps
jb
mov
jbe
das
xchg
jg
inc
xchg
fidiv
inc
mov
loopne
ins
inc
mov
mov
daa
cmp
test
mov
(bad)
sti
inc
lock
(bad)
jmp
add
jle
xor
jo
xchg
pop
pop
popa
mov
inc
push
pop
movs
js
bnd
fwait
sbb
outs
jne
and
jmp
jbe
and
xchg
adc
jno
popf
inc
cs
bound
fisubr
add
int3
imul
in
movs
adc
shr
loopne
cmp
dec
add
jo
movs
pop
sahf
idiv
call
pop
mov
sub
mov
fst
ret
std
clc
pop
push
dec
(bad)
and
and
cli
mov
repz
loopne
pop
mov
dec
ret
inc
jbe
jp
shl
lods
scas
mov
mov
out
push
push
jl
clc
das
xchg
xor
xchg
int
jmp
fs
push
cmc
pop
mov
dec
into
lahf
repz
mov
data16
jg
retf
or
inc
add
test
xchg
dec
aad
js
mov
jbe
jl
jmp
shl
sbb
ror
and
mov
sub
leave
js
ins
popa
mov
mov
push
xchg
test
jae
rcl
gs
pop
loopne
dec
lock
add
(bad)
sub
mov
stos
adc
nop
jae
movs
push
push
and
cmps
jbe
pop
jmp
aaa
outs
into
jle
jmp
leave
pusha
mov
shl
cmp
dec
jns
pop
jns
movs
int
sahf
lods
and
add
mov
mov
jo
or
in
movs
inc
pushf
dec
ret
cmps
(bad)
pop
loope
pop
mov
ds
sbb
mov
jnp
(bad)
fsub
stc
adc
pop
int
adc
xor
dec
iret
int3
pop
cs
mov
xchg
mov
cwde
fs
push
mov
movs
aas
in
inc
mov
cmc
ror
sbb
mov
cmp
sti
sbb
xlat
xchg
add
sbb
loope
dec
cmp
mov
inc
pop
cmp
ins
(bad)
and
mov
shl
stos
test
in
pusha
xchg
xchg
cmp
mov
inc
push
adc
rcl
add
sbb
daa
jle
dec
pop
and
adc
xchg
pop
jp
(bad)
pop
mov
add
xchg
inc
call
scas
jp
fdivr
in
dec
or
aam
nop
inc
inc
imul
inc
inc
movs
enter
xor
adc
or
mov
or
push
cmp
arpl
push
xchg
sbb
test
sbb
fsubr
mov
es
inc
push
adc
ret
dec
fs
cld
std
enter
add
es
mov
push
outs
jno
addr16
into
lock
mov
pop
retf
enter
jge
jne
(bad)
frndint
std
xchg
xor
clc
jmp
test
xchg
adc
jmp
aad
ret
pushf
or
or
adc
mov
dec
daa
and
(bad)
icebp
and
jle
add
mov
int3
push
pop
xor
jmp
jnp
adc
ds
adc
leave
fs
ds
in
inc
int
xor
mov
adc
pop
retf
push
clc
sub
(bad)
lea
not
mov
imul
lods
jns
aad
ss
dec
mov
or
add
or
mov
push
and
add
lahf
jne
jmp
lahf
daa
mov
dec
movs
jae
retf
sub
inc
fisubr
push
imul
dec
out
pop
sub
shl
xlat
dec
push
shl
or
jbe
fbld
pop
push
cmp
mov
push
sub
jb
out
enter
out
pop
hlt
mov
xor
ficomp
mov
xchg
adc
or
aas
mov
dec
int3
cmp
add
xchg
rcr
xchg
cmp
into
jo
jp
popa
mov
ins
and
(bad)
inc
leave
out
dec
push
in
popf
inc
pushf
add
jmp
sbb
mov
lahf
jge
pop
push
movs
shl
pop
and
pop
mov
xchg
call
inc
loope
push
fdivr
popf
jnp
jo
add
mov
jno
pop
mov
xor
mov
sahf
stos
cmc
in
call
inc
cmp
idiv
adc
cmp
stos
in
xchg
pop
fmul
iret
xchg
adc
scas
je
mov
div
jp
or
cs
int
lods
ins
inc
into
enter
shl
popf
lods
mov
pop
add
sbb
pop
fdiv
cdq
push
jp
mov
xor
hlt
pop
in
(bad)
xchg
xor
call
or
mov
int3
or
inc
retf
imul
aad
inc
test
ror
(bad)
jmp
out
pop
or
jge
mov
or
mov
int
add
sub
jle
mov
or
repz
cmc
inc
repz
into
pop
jle
sub
jmp
jnp
inc
jl
pop
into
adc
pop
xchg
sbb
sbb
cmp
inc
or
je
mov
xor
add
dec
repnz
adc
jl
mov
das
xor
xchg
sbb
shl
into
loope
push
mov
xchg
mov
test
jmp
push
inc
sub
sahf
clc
sub
jns
in
mov
movs
add
cdq
cmp
mov
push
or
stc
(bad)
mov
movs
sahf
cmp
pop
pop
cmp
fwait
inc
inc
inc
pop
(bad)
jg
sub
sub
ins
sbb
sbb
sub
icebp
addr16
and
and
jmp
(bad)
xor
in
xor
movs
rol
xchg
dec
sbb
loopne
pusha
xchg
mov
mov
push
mov
dec
scas
stc
add
push
pop
xchg
lea
scas
sub
in
jo
pop
dec
xchg
stc
shl
xchg
push
mov
ds
pusha
push
xchg
jno
call
cmp
stc
cmp
push
jb
cmps
jno
mov
nop
or
(bad)
dec
je
lds
sub
mov
rol
stc
sahf
and
cmp
ds
mov
in
aam
xchg
stos
mov
lock
retf
and
call
bswap
stos
push
mov
push
xor
in
sub
mov
xor
push
mov
call
pushf
rcr
jae
xlat
call
mov
lahf
push
movs
jnp
(bad)
aad
sti
cmps
ror
test
sahf
mov
push
cli
push
push
outs
mov
mov
jns
loope
and
push
jb
ins
inc
mov
or
(bad)
outs
pop
icebp
sti
mov
daa
imul
loopne
xor
cmp
cmp
push
sub
loopne
ja
es
cmp
movs
fadd
push
mov
mov
xor
xor
mov
in
mov
ror
or
sub
push
and
arpl
out
shl
cmc
adc
shr
aad
sbb
loope
int3
stc
or
ret
call
sub
shl
jns
retf
pop
aam
jne
xor
mov
fucomip
int3
out
jg
pop
int3
mov
clc
jg
dec
mov
or
inc
jo
ins
imul
loope
jecxz
xor
(bad)
ficom
mov
ret
in
jbe
out
(bad)
fnstsw
push
aaa
mov
adc
sbb
push
mov
neg
mov
(bad)
sbb
pop
push
outs
xchg
mov
ret
mov
mov
ins
add
stos
test
and
push
dec
out
jae
mov
jb
and
or
lahf
cmp
or
test
add
mov
repz
stos
sahf
dec
pop
and
inc
xor
xchg
(bad)
xlat
jl
int3
or
push
push
mov
jne
fcom
into
packssdw
sbb
push
imul
mov
movs
cmp
jecxz
es
repz
imul
jle
sahf
jle
sub
mov
jmp
icebp
inc
std
cmp
out
not
adc
out
mov
clc
inc
movs
repnz
mov
xchg
dec
push
fs
imul
mov
outs
cwde
sbb
outs
nop
popf
stos
and
in
inc
push
out
fidiv
inc
call
call
push
push
xor
jp
loop
retf
inc
add
fild
jecxz
adc
push
movs
sbb
mov
cdq
mov
ret
or
sbb
jbe
mov
popf
call
out
add
(bad)
mov
call
fiadd
mov
jns
fsubr
xchg
ror
pop
xor
dec
jb
daa
loop
add
sub
fs
ds
and
sub
inc
out
aad
fisttp
stc
test
in
xor
out
repz
fst
jmp
fsubr
ret
sbb
cmp
mov
xchg
int3
mov
inc
sti
cvtps2pi
mov
or
(bad)
in
mov
dec
jl
pop
popf
mov
arpl
lods
add
sbb
nop
push
lods
mov
jecxz
ret
xor
and
in
clc
cmc
push
cmc
stos
aam
stc
ret
(bad)
rcr
das
fcom
shrd
lods
sbb
loopne
ret
adc
xchg
aaa
adc
pop
dec
jl
mov
popf
ins
(bad)
pop
mov
xor
repz
repz
loope
inc
push
dec
cmp
std
bnd
push
or
jns
xchg
int
ror
mov
and
retf
inc
add
rcr
add
test
xchg
ja
jae
sub
sbb
adc
jle
or
push
jle
mov
mov
pop
mov
ss
cmps
pop
enter
hlt
push
push
ret
fwait
push
retf
cmp
std
retf
call
sub
xor
cwde
movs
call
mov
pop
mov
sbb
cs
xchg
fld
(bad)
in
mov
adc
iret
movs
mov
in
(bad)
(bad)
cld
push
sub
arpl
mov
sbb
int3
jmp
pusha
int3
dec
dec
cmp
and
retf
neg
xor
lock
jo
enter
ins
cmp
retf
mov
ja
retf
in
rcr
scas
xchg
push
movs
dec
inc
adc
scas
sbb
add
jno
ret
xor
cld
cli
(bad)
jae
adc
aam
mov
xchg
das
in
in
jb
push
dec
aam
push
gs
(bad)
retf
dec
or
or
inc
fisttp
xor
xor
test
loope
pusha
bnd
aam
imul
xchg
jmp
(bad)
xor
cmps
cmp
jmp
adc
and
mov
pop
push
sbb
pop
adc
inc
mov
out
push
das
add
xor
sbb
repz
(bad)
stos
je
popa
cmp
push
mov
aam
dec
pop
sbb
mov
(bad)
sub
sub
pop
test
js
retf
in
mov
fbld
push
lods
hlt
mov
cmp
inc
sbb
rcl
int3
shl
pusha
popf
imul
outs
inc
fnstsw
push
das
imul
cmp
jecxz
mov
lea
mov
or
mov
or
add
inc
mov
sub
icebp
dec
arpl
clc
mov
jnp
xchg
sub
jmp
push
xchg
outs
xchg
sub
das
mov
out
or
cmp
jbe
xor
inc
xchg
das
jecxz
jo
jl
repnz
test
or
sub
nop
cdq
add
xchg
push
sbb
aas
ds
repz
inc
dec
mov
mov
dec
add
fadd
and
push
sub
sub
sahf
push
xchg
cmc
sbb
popf
xchg
pop
test
shr
push
push
xchg
aaa
xor
ret
fidivr
push
lahf
cmp
aaa
dec
mov
nop
test
ja
retf
int3
mov
gs
sub
mov
xchg
push
xchg
leave
add
out
push
fucom
je
push
xor
dec
in
ret
ret
inc
mov
lods
loop
push
mov
sbb
stos
mov
ja
nop
(bad)
cmp
mov
loop
(bad)
loopne
test
pop
ins
xchg
fwait
stos
push
adc
movs
fistp
(bad)
push
(bad)
adc
adc
jbe
cmps
cli
adc
sub
xor
rol
dec
pop
push
pop
test
xchg
call
movs
sbb
jne
push
jnp
aas
sub
mov
in
xor
pop
in
sbb
pop
popa
dec
inc
add
mov
cmp
call
mov
dec
sub
int3
adc
inc
cmc
or
stc
les
popf
shr
mov
or
push
stos
adc
push
or
pop
ja
xchg
inc
sbb
and
sbb
repnz
sub
fldcw
cmp
sbb
ss
out
mov
test
and
inc
(bad)
fbld
jecxz
retf
(bad)
(bad)
jmp
xor
inc
mov
stos
stos
xor
and
adc
and
js
cld
dec
push
in
jl
mov
popa
test
pop
jnp
aas
out
xchg
popa
push
ins
jp
cmp
aas
out
and
wrmsr
sbb
(bad)
icebp
call
cmp
sbb
pop
fst
jne
inc
movs
mov
mov
xor
sti
or
sbb
pop
bound
cmp
mov
mov
push
hlt
nop
dec
pop
cld
nop
inc
repnz
inc
aad
pop
cwde
mov
sbb
repz
es
pushf
cmp
mov
or
ret
sub
pop
push
push
popf
mov
dec
ret
mov
outs
sbb
lock
mov
add
xchg
out
jns
add
iret
(bad)
mov
adc
dec
push
sub
or
push
inc
push
jle
xchg
sbb
dec
cmp
sti
pop
inc
mov
jmp
cmps
ins
xchg
or
out
or
outs
(bad)
mov
cmp
mov
xor
pop
cmp
cmp
mov
inc
lods
xor
imul
xchg
retf
pop
(bad)
loopne
push
and
fsub
je
pop
pop
scas
in
in
jns
addr16
aam
call
shl
jno
pusha
xor
lock
pop
cmps
xchg
psubusw
mov
and
push
int
pop
xor
outs
dec
and
aas
and
sub
add
push
jae
xchg
pop
xor
movs
and
adc
cdq
push
push
out
mov
xchg
fisub
lahf
cmp
inc
imul
pushf
push
out
cmp
leave
outs
and
jb
and
sbb
test
xchg
aam
and
and
sub
ins
into
outs
mov
sub
icebp
in
sbb
sahf
data16
inc
xor
xchg
jo
mov
std
sbb
stos
sbb
mov
adc
aas
stc
mov
sub
pop
mov
pop
sbb
inc
cmps
mov
inc
push
add
inc
ret
pop
cmp
mov
inc
adc
cmp
jecxz
in
aaa
sub
xor
daa
adc
rol
cmp
xchg
and
push
inc
jo
cs
std
imul
out
xchg
xchg
mov
push
fst
push
fstp
in
ret
aam
pop
into
aas
popf
jp
shr
(bad)
pop
call
xchg
mov
test
and
cld
int
call
adc
or
lods
cmp
mov
sub
test
mov
add
add
outs
jp
inc
push
lahf
xchg
jne
sbb
pop
movs
(bad)
pop
cmps
test
(bad)
mov
mov
ja
pop
sbb
pop
adc
cmps
jo
ror
sbb
mov
sub
mov
sbb
aad
fild
std
fcmovnu
jg
mov
movs
outs
(bad)
jmp
mov
sbb
mov
into
jno
es
iret
cmps
sub
rcl
gs
pusha
push
out
ins
add
popa
repnz
xchg
(bad)
xchg
fwait
or
not
sbb
fisttp
lock
pop
pop
retf
arpl
mov
jnp
out
fst
inc
and
mov
imul
fcom
(bad)
pop
lock
mov
outs
inc
movs
arpl
sub
data16
clc
jmp
(bad)
sub
cld
pop
mov
inc
nop
sbb
cmp
jp
in
inc
test
out
adc
mov
and
xchg
out
jno
mov
retf
pushf
sub
pop
mov
leave
ret
xor
or
sub
sti
sbb
mov
jns
std
jle
inc
stc
jbe
fimul
sbb
out
nop
outs
push
das
movs
add
call
jmp
pop
sub
or
xor
mov
retf
adc
call
rcr
or
(bad)
addr16
scas
(bad)
aaa
pop
jne
cdq
dec
xor
mov
ror
jge
adc
gs
cmp
leave
jno
dec
sub
test
outs
pop
sahf
dec
pop
or
into
pop
aaa
jmp
arpl
fucomp
mov
pop
jns
mov
stos
mov
xor
call
stc
xchg
test
xchg
loope
aaa
adc
mov
xor
pop
dec
hlt
(bad)
push
pop
enter
imul
es
jmp
jmp
(bad)
pop
push
cmp
outs
lods
push
mov
ret
nop
sub
fstp
pop
rol
outs
mov
fld
lahf
test
ret
jp
les
sbb
movs
frstor
jno
dec
movs
jo
mov
iret
jl
mov
cmp
(bad)
adc
leave
pop
xchg
bound
mov
adc
pusha
cmps
inc
popf
add
xchg
fmul
xchg
xchg
out
hlt
sbb
mov
add
enter
in
jae
or
repz
mov
cmp
popf
push
aad
pop
cmc
add
imul
loop
pop
xchg
cmp
push
outs
out
mov
aaa
xor
xchg
ficom
fsubr
xchg
call
or
outs
fstp
daa
imul
mov
pop
imul
push
loope
das
jae
push
movs
loope
cmp
and
ja
mov
sti
popf
dec
out
js
outs
lahf
mov
mov
mov
aas
arpl
in
and
fidiv
lahf
cwde
pop
rcr
xchg
cli
and
mov
jecxz
cdq
add
repz
mov
iret
leave
mov
data16
aam
sti
sbb
cmp
jmp
push
mov
nop
dec
push
cmp
jle
jne
mov
fwait
mov
mov
retf
and
jg
cli
stos
mov
sub
xchg
sbb
jne
jns
loopne
mov
in
inc
push
das
loopne
inc
push
dec
out
add
push
out
push
add
jp
add
ror
in
or
scas
(bad)
std
cmp
fdivr
cmps
xchg
cmp
push
jne
push
dec
jae
push
lahf
lods
cmps
pop
xchg
sub
imul
mov
test
rcr
jno
mov
inc
mov
outs
pop
popa
in
stos
cmp
mov
cmc
cmp
xchg
retf
or
jo
and
in
js
mov
or
imul
neg
ins
les
js
and
sub
sahf
ins
xor
imul
dec
sub
int3
push
xchg
dec
mov
push
shl
cmp
pop
sub
xchg
add
out
shr
in
pop
das
adc
pushf
(bad)
call
in
test
xor
dec
mov
call
pusha
movs
cmp
stc
std
(bad)
xchg
dec
gs
scas
or
pop
test
or
dec
adc
dec
test
mov
mov
mov
aam
inc
add
push
lds
mov
popa
add
or
push
hlt
cwde
data16
scas
cmp
call
repz
sub
cwde
xlat
nop
pop
jp
rcl
cmc
and
fiadd
push
or
push
dec
jp
fnsave
mov
(bad)
stc
es
outs
ret
inc
jmp
(bad)
xchg
cli
sbb
aam
push
pushf
mov
repnz
xchg
lea
fldcw
or
cdq
lods
xor
adc
test
inc
out
in
call
push
inc
mov
xchg
out
jmp
ret
jg
imul
sub
loope
js
add
push
xor
imul
test
fwait
cmp
and
jecxz
ins
das
adc
add
aam
fs
xchg
cmc
fcom
icebp
(bad)
xchg
in
mov
repz
push
inc
push
fidiv
mov
add
push
mov
inc
cmps
cdq
sbb
inc
in
test
xor
daa
mov
inc
xchg
mov
ror
movs
cdq
xchg
sbb
(bad)
and
cwde
adc
jb
sbb
mov
nop
pop
jbe
inc
bound
js
dec
mov
pop
xchg
mov
push
jp
mov
rcr
inc
cmc
sbb
xor
cmp
(bad)
in
inc
ja
scas
shl
lods
push
clc
pop
call
ret
lea
mov
ins
push
cmps
enter
xor
push
mov
les
mov
daa
imul
cmps
movs
sbb
pop
adc
cdq
cmp
cmps
jno
ins
push
loopne
push
les
inc
mov
vorpd
cmp
cdq
ins
xchg
add
lahf
jo
xchg
mov
ja
xor
shl
mov
cli
movs
bound
pushf
push
mov
test
aad
stc
mov
or
xor
add
jl
adc
imul
xor
push
dec
lods
pusha
adc
cmp
aad
pushf
xchg
in
stos
scas
ds
fisubr
push
mov
jg
jl
pop
jecxz
inc
out
call
(bad)
jno
mov
jae
xor
out
mov
fcomp
int3
fs
lds
test
push
sti
xchg
retf
dec
mov
outs
add
in
jno
leave
mov
lods
xchg
outs
cmp
xchg
mov
outs
sub
popa
or
pop
mov
mov
xlat
test
aaa
xchg
cwde
cmp
jae
fistp
push
pop
ins
push
jmp
dec
sbb
push
enter
cmp
clc
jno
pop
jmp
addr16
loopne
dec
push
lahf
mov
mov
(bad)
mov
lods
add
dec
pop
adc
movs
mov
sbb
lahf
jns
f2xm1
in
fist
call
aas
cli
cld
lahf
push
cmp
daa
and
sbb
xchg
dec
pop
sub
call
lock
dec
or
lahf
out
push
mov
sbb
leave
mov
xchg
dec
mov
mov
cmp
inc
pop
dec
test
xchg
cmp
call
mov
stos
jmp
mov
jno
cs
mov
cwde
xchg
lahf
sub
and
sub
ds
popf
in
jae
mov
ins
xchg
pop
pop
clc
icebp
shl
mov
test
dec
dec
fsubr
fisttp
xchg
mov
or
std
ds
jg
retf
out
scas
test
out
jb
mov
cmp
pushf
adc
cmp
inc
jge
loope
clc
enter
repz
fisub
out
int3
retf
xlat
push
pushf
sbb
mov
and
or
out
jg
movs
add
nop
mov
add
iret
cli
mov
lods
daa
aam
adc
pop
or
adc
jmp
push
inc
push
add
imul
sbb
inc
test
xchg
fwait
rol
jns
pop
retf
pop
fild
into
lea
sbb
cmp
push
or
lods
mov
neg
sar
movs
cmp
dec
call
scas
ss
out
mov
inc
(bad)
jp
fadd
sub
(bad)
jl
lea
lods
(bad)
xchg
mov
mov
push
pop
sar
add
jmp
push
leave
scas
xchg
xchg
add
or
pop
mov
outs
pop
sbb
ja
scas
mov
test
mov
push
adc
jmp
sbb
dec
adc
hlt
mov
les
xchg
jns
(bad)
lock
push
mov
mov
xchg
fs
jne
jle
call
push
inc
popf
icebp
in
(bad)
jb
xor
test
fwait
cmp
or
cvtdq2ps
mov
retf
or
pop
sbb
mov
les
das
aas
aad
(bad)
inc
adc
push
mov
and
inc
je
or
inc
jnp
mov
mov
lds
in
test
cmps
in
mov
clc
out
mov
adc
push
mul
mov
movs
mov
icebp
adc
dec
out
or
fstp
aam
mov
dec
dec
dec
scas
pop
loope
call
shr
test
jbe
xor
cmp
lahf
rcr
push
xchg
or
or
ja
lea
jbe
icebp
sub
pop
gs
in
ins
imul
or
es
sub
loop
enter
addr16
pop
ins
in
add
dec
inc
ss
jae
mov
test
mov
add
adc
push
hlt
arpl
cdq
out
mov
jmp
ret
inc
xchg
inc
push
in
cmps
aad
xchg
sbb
push
dec
fcmovne
inc
icebp
xchg
mov
mov
popf
dec
dec
sti
shl
adc
xor
daa
sahf
sub
pop
push
(bad)
push
and
mov
int
jmp
fdiv
add
repnz
pop
push
mov
daa
fdivp
call
push
loopne
pushf
(bad)
cmc
and
adc
test
retf
fnsave
add
xor
adc
xchg
retf
call
test
jb
sub
mov
push
sub
mov
and
pop
and
stc
or
arpl
mov
or
loopne
inc
lea
outs
int
xchg
sbb
inc
push
pop
add
gs
loopne
pop
xor
stos
adc
popf
rol
es
mov
pop
ins
repz
and
cmps
dec
sti
int
jge
arpl
pop
add
icebp
movs
rcl
movs
inc
push
inc
loope
pop
and
dec
push
int3
mov
mov
jge
xor
push
cmps
fs
inc
xor
leave
add
mov
xor
cwde
ins
stos
adc
xchg
je
inc
in
jbe
popf
loopne
mov
ret
cli
scas
xor
in
inc
ret
xor
out
imul
xlat
inc
mov
fild
inc
das
mov
repz
mov
loop
inc
(bad)
outs
push
xchg
(bad)
sub
inc
cmc
or
ret
jecxz
dec
clc
ja
and
(bad)
add
ret
(bad)
push
mov
ja
add
call
sahf
cld
std
mov
push
jnp
call
sub
or
rcl
cmp
into
pushf
mov
jle
jp
inc
fcmovne
push
jne
cmps
test
cwde
jmp
loop
xor
jl
sub
or
cmp
xchg
int3
test
mov
xor
push
jp
adc
or
jo
ja
pop
lods
out
mov
dec
mov
xchg
mov
movs
or
xchg
test
sub
js
pop
dec
and
jmp
push
out
outs
xchg
aad
test
mov
xor
mov
pop
sbb
cmp
not
mov
cwde
cmps
into
lock
push
shl
sbb
(bad)
hlt
add
jmp
in
int3
mov
shl
adc
pop
pushf
in
dec
jl
sti
rcr
push
jno
fidiv
lds
xor
shl
ins
ret
mov
and
mov
jmp
jb
or
pop
les
inc
cmp
test
sub
mov
xchg
vmwrite
add
jmp
jno
hlt
ja
fistp
push
movs
pop
pop
adc
pop
sub
pop
adc
inc
lock
sub
mul
inc
pop
inc
xchg
add
pop
fld
jne
(bad)
mov
rol
jae
popa
add
popf
adc
and
pop
mov
pop
add
push
mov
sub
mov
loope
dec
dec
xchg
lods
xor
xor
mov
xchg
add
mov
inc
cmc
inc
xchg
int
cmps
fwait
pop
pop
dec
ror
pop
inc
fdivr
(bad)
in
mov
das
imul
dec
(bad)
int
push
pop
cmp
pusha
dec
lods
mov
movs
call
stc
mov
setge
imul
or
loope
fwait
shl
rol
push
movs
(bad)
stc
mov
xchg
popf
stc
xor
cmp
inc
ja
lock
pop
mov
jae
(bad)
popf
mov
xlat
call
adc
pop
or
jnp
mov
fwait
mov
inc
icebp
pop
rol
sub
mov
sbb
icebp
sub
xchg
mov
test
or
or
cmp
addr16
sub
sbb
sahf
bound
das
pop
mov
loopne
cwde
in
lock
xor
xchg
and
push
out
lods
cmc
ror
add
push
fisub
push
add
pop
sub
stc
call
cwde
mov
or
cmp
imul
add
outs
cdq
or
popa
mov
(bad)
call
inc
sub
aam
loop
mov
add
aas
fs
cli
repz
cmps
jp
movs
bound
cmp
test
mov
jno
vmovsd
push
sub
aad
int
mov
sbb
cmp
pop
movs
or
and
ror
push
std
sub
adc
mov
gs
sub
movs
fidivr
and
pop
sbb
imul
sub
dec
inc
mov
dec
inc
imul
std
cld
inc
mov
jge
dec
stos
inc
jge
out
call
dec
mov
jge
imul
repz
dec
xchg
ret
dec
imul
sbb
jge
inc
mov
cli
mov
mov
icebp
or
stc
ror
jbe
cwde
sub
js
xor
test
dec
or
stos
sub
aaa
push
inc
pushf
lahf
std
cwde
inc
xchg
xlat
push
out
cvtdq2ps
inc
pop
xchg
int
jo
pop
test
imul
jmp
mov
xchg
mov
movs
test
mov
mov
in
mov
cld
out
addr16
jnp
rol
fld
in
test
out
ins
and
xchg
dec
mov
in
into
clc
mov
rcl
xor
call
ds
movs
loop
sbb
cmp
cmp
test
xchg
dec
or
popa
xchg
pop
sub
mov
inc
pop
loope
dec
adc
loop
and
and
jbe
mov
jle
push
scas
in
dec
repz
mov
push
inc
adc
in
and
ja
bound
jmp
cs
fmul
loopne
ror
xchg
aas
sub
out
ret
xlat
xchg
vmread
add
push
jg
push
dec
mov
add
add
push
pop
jmp
and
rcl
ins
pop
(bad)
fist
jl
inc
or
shr
scas
call
inc
shr
jo
push
and
jb
jecxz
cmps
push
sub
jnp
xor
stos
cli
ins
mov
sbb
and
ret
inc
sbb
or
int3
ret
(bad)
jge
inc
daa
push
or
bound
in
jne
cwde
add
addr16
inc
xor
mov
mov
add
je
sub
ret
cmp
mov
xlat
mov
push
xchg
jle
nop
outs
pop
dec
pusha
sub
jns
cmp
fld
cmps
je
mov
or
scas
test
ret
jle
adc
jp
shr
out
cmovb
add
mov
lahf
inc
push
arpl
ja
cmp
lahf
sbb
wbinvd
push
int3
lods
dec
mov
fwait
add
adc
retf
mov
mov
adc
fadd
ret
movs
scas
cmp
sbb
cmp
xchg
(bad)
dec
cmp
inc
popa
xor
push
or
ret
inc
dec
bound
sub
xcrypt-ecb
cmps
iret
jl
stc
ds
jnp
jg
ins
shl
dec
inc
je
call
in
out
lock
cmc
cmp
jbe
sub
test
clc
ja
fidiv
ins
in
mov
fild
jne
pushf
adc
pop
pop
in
fdivp
mov
jne
daa
in
pushf
out
aam
das
inc
into
cmps
sub
mov
jge
jns
jns
xchg
jno
les
jmp
retf
pop
push
cmp
pop
inc
clc
int3
jecxz
mov
mov
cdq
jno
pop
popf
in
fstp
xchg
sub
ret
fild
add
jae
mov
test
jecxz
or
js
sub
jmp
loop
xor
and
xor
fcmovnu
cwde
sbb
or
hlt
sahf
jmp
mov
cmp
xor
inc
js
mov
mov
jmp
lods
inc
adc
adc
stos
inc
(bad)
iret
pop
xchg
in
xor
aaa
and
cmps
mov
lods
je
jecxz
or
int3
fidiv
cmp
(bad)
or
push
icebp
iret
pop
fwait
das
icebp
adc
imul
xchg
rcl
and
pop
aaa
sbb
push
xor
mov
call
mov
shl
or
jp
rcr
cmp
pop
mov
dec
sbb
inc
(bad)
dec
mov
popa
cdq
je
add
nop
inc
push
mov
loop
sbb
ffreep
mov
jno
movs
pop
nop
inc
sar
ret
xor
cmp
stc
jno
aas
cmp
and
ret
push
mov
(bad)
je
bound
mov
loop
dec
scas
inc
ret
push
cwde
outs
dec
jo
sub
adc
retf
imul
pop
inc
lods
cs
outs
adc
xor
cmp
jo
(bad)
and
fwait
pop
iret
sbb
xor
cmp
adc
test
mov
ja
dec
int
test
movs
add
fidivr
pushf
out
mul
adc
pop
adc
xlat
retf
jge
lds
loop
xor
sub
cmps
fisub
push
jne
je
loope
in
cdq
mov
push
cmc
xchg
test
aad
(bad)
jno
stos
lods
add
int3
ins
push
fsubr
mov
inc
sub
dec
mov
nop
arpl
jge
pop
(bad)
cmp
(bad)
and
pop
mov
jmp
mov
in
lahf
ja
cmps
dec
in
inc
cli
lds
fisubr
mov
sub
cmp
fld
pop
mov
pop
dec
sbb
pop
jl
mov
popf
test
push
or
(bad)
sub
fwait
int
repz
rol
cmc
xor
sub
push
sti
test
ret
ret
mov
shl
mov
jmp
cdq
jno
ret
jg
cmp
out
add
dec
ret
jmp
shl
rcl
cwde
xor
sbb
stos
sbb
pop
pop
test
sbb
sub
les
lahf
fld
rol
fs
pop
jbe
imul
mov
or
ss
bound
pop
sbb
and
stos
xlat
mov
mov
std
sub
cwde
ror
mov
mov
adc
xor
mov
loopne
pop
dec
movd
jge
ds
lods
popa
xchg
and
push
jecxz
sbb
xchg
daa
jl
iret
into
repnz
xor
lea
test
or
cmp
mov
in
jnp
repz
pop
test
ja
movs
and
mov
cmps
adc
add
or
cs
popf
ja
jae
and
hlt
repnz
mov
aam
inc
retf
xchg
inc
test
setnp
mov
jle
push
cli
and
clc
mov
test
vmovddup
nop
mov
out
push
push
cmc
out
out
push
xchg
cli
jmp
cld
(bad)
es
test
or
das
cmps
inc
ins
imul
push
lahf
sbb
xor
das
xor
rol
test
in
test
outs
sar
and
sbb
mov
das
xchg
jno
daa
loop
mov
in
mov
cmp
lods
xor
mov
test
mov
neg
(bad)
fs
ss
pop
les
retf
inc
fwait
sub
sbb
outs
mov
inc
cld
test
inc
add
nop
call
fild
mov
sbb
mov
out
mov
js
mov
div
fcomp
rcl
aaa
sti
sub
test
(bad)
retf
test
js
pop
cmp
gs
xor
pop
push
fist
(bad)
jnp
cmps
out
push
mov
push
cmp
sbb
retf
mov
ja
sub
repnz
movs
div
add
push
and
int
movs
and
cdq
pushf
push
enter
mov
add
or
pop
stos
leave
xchg
push
mov
aad
in
pop
sbb
stos
addr16
movs
mov
dec
pop
popf
mov
xchg
cmp
mov
push
and
push
dec
mov
clc
mov
jecxz
mov
xor
pop
loopne
lock
adc
ins
xor
clc
jmp
imul
jp
adc
xchg
inc
or
mov
dec
shr
retf
sub
outs
int3
xchg
(bad)
pusha
mov
sbb
jmp
add
mov
in
mov
push
test
es
test
imul
(bad)
vpsrad
lods
mov
outs
imul
mov
out
xor
mov
cmps
inc
sbb
stc
out
push
out
pop
dec
mov
xchg
nop
enter
jmp
xchg
sub
xor
add
(bad)
out
mov
ret
pusha
pop
xor
lods
mov
jne
icebp
xor
addr16
test
std
mov
hlt
fwait
add
xor
mov
lea
sub
xchg
pop
pop
in
push
test
xor
ins
push
pushf
(bad)
pop
ror
paddusb
push
hlt
rcr
outs
hlt
mov
fimul
jmp
sar
xchg
pop
mov
pop
adc
sbb
aam
or
aaa
fimul
lock
inc
jns
mov
sbb
ds
add
mov
lock
pushf
es
cmp
mov
sub
retf
mov
adc
sub
push
and
sub
aas
not
push
mov
je
or
and
xchg
sub
inc
repnz
jo
push
pop
xor
push
popf
pop
push
int
and
enter
out
cmp
sbb
(bad)
cdq
pop
pop
shl
cs
bound
aad
sub
into
inc
add
ror
test
sahf
pop
mov
and
into
(bad)
gs
adc
sbb
test
xchg
call
cmps
pop
aad
(bad)
popf
lahf
xor
outs
aaa
loope
inc
fs
cmp
loop
scas
pop
pop
ss
sti
xor
cmp
dec
mov
inc
mov
mov
jo
sar
dec
adc
dec
cmps
pusha
mov
cmps
sbb
rcr
out
mov
adc
or
aaa
test
lods
mov
call
test
retf
mov
fisub
outs
pop
xchg
test
int
dec
fwait
bound
daa
jbe
loope
dec
int
pushf
fcom
xor
bound
arpl
cmp
and
test
sub
out
retf
js
mov
lea
cmp
add
mov
ret
out
std
mov
inc
sub
or
dec
movs
add
and
js
lahf
mov
pop
(bad)
and
jne
sub
and
xor
movs
ins
xchg
ja
stos
push
cwde
mul
xchg
cmp
rcl
dec
xchg
mov
sbb
adc
int
in
sbb
test
cld
fwait
cmp
add
add
mov
add
sbb
imul
mov
cld
jl
mov
jl
dec
imul
push
jmp
xor
jp
mov
int3
xchg
xchg
(bad)
retf
jl
pop
and
xor
jbe
xor
and
adc
xchg
push
repz
add
test
jbe
cmps
inc
xor
ins
in
sbb
pushf
out
dec
lods
out
shl
add
stos
dec
out
pop
pop
bound
jae
fcomip
movs
ror
retf
call
mov
lahf
sub
push
into
nop
popf
and
mov
mov
sub
jl
mov
or
mov
xchg
sahf
push
fucom
iret
lahf
and
jp
daa
scas
xchg
mov
mov
push
(bad)
(bad)
pop
ror
cwde
std
cmps
mov
mov
rcl
int
(bad)
push
call
mov
dec
mov
add
ret
add
push
popa
jg
(bad)
enter
cmps
cdq
cmp
in
cmp
movs
fstp
pop
cmp
hlt
mov
iret
pop
daa
leave
test
pop
into
adc
sbb
lock
mul
add
mov
mov
popf
jmp
mov
aaa
add
adc
icebp
out
mov
mov
or
dec
xor
in
out
ja
sti
lds
shl
jl
jp
sar
adc
push
pop
jno
(bad)
jns
push
push
or
sub
pop
lock
cmc
dec
cld
ror
adc
mov
mov
das
inc
ret
out
xor
aaa
gs
jg
repz
push
imul
add
ins
dec
jg
movs
pop
and
dec
jp
aad
(bad)
scas
dec
cli
push
inc
int
mov
std
push
cdq
pop
aam
lods
je
push
sti
inc
cdq
aaa
and
jecxz
or
inc
imul
cmp
pushf
jle
cmp
pop
mov
mov
push
cmps
outs
stc
fs
xor
in
stc
daa
jno
nop
in
mov
inc
in
outs
mov
out
js
adc
mov
sub
fiadd
jns
fwait
pop
dec
jp
aam
jp
adc
cld
or
sahf
push
xchg
adc
stos
test
fist
inc
and
pop
push
inc
inc
push
xor
dec
and
sbb
sbb
and
cs
push
dec
(bad)
push
outs
mov
cmp
idiv
dec
and
je
sub
pop
movs
cmp
ins
add
int
xor
outs
push
icebp
xchg
aam
mov
jbe
(bad)
dec
adc
aad
stos
xlat
push
repz
cmc
enter
gs
gs
mul
mov
ins
fistp
retf
mov
sti
mov
retf
mov
dec
mov
mov
push
xor
jg
jne
push
jg
sub
or
mov
jno
in
xchg
jbe
rcl
fsubp
adc
mov
xor
sub
push
fisttp
jns
cmp
pop
jecxz
jmp
in
outs
push
(bad)
sbb
cli
push
push
mov
loope
sbb
das
cmp
pusha
outs
arpl
imul
xchg
ror
std
inc
xchg
mov
mov
push
dec
leave
push
add
in
xor
pop
sub
in
in
pop
cmp
push
push
icebp
pusha
jo
or
adc
fucomp
stos
xchg
ds
addr16
jbe
inc
and
aad
inc
pop
jl
shl
mov
push
cmps
xor
rol
mov
and
mov
std
jge
mov
fwait
cdq
(bad)
xchg
outs
(bad)
jb
cmc
in
xchg
imul
jecxz
sub
jmp
push
in
push
jp
pop
cmp
stc
fadd
xchg
int3
bnd
jns
ds
sbb
cdq
into
cld
xlat
popa
sbb
aaa
rcl
ds
jmp
pop
sub
mov
(bad)
push
push
std
icebp
aaa
dec
and
adc
dec
pop
adc
adc
mov
lds
les
cdq
mov
jl
in
sub
inc
scas
mov
pop
push
pop
xor
test
jle
rcr
xor
ds
mov
mov
push
or
mov
cmp
push
pop
ret
pop
inc
cmp
adc
push
shl
inc
pop
clc
test
test
jae
push
jmp
adc
add
cmp
or
in
or
cmp
push
std
shl
out
ja
or
popf
std
add
dec
push
test
xchg
test
and
pop
lahf
mov
mov
fwait
xor
xor
lea
jg
push
cmp
in
or
jg
shl
lock
call
shr
add
xor
xor
push
setg
inc
fadd
sub
push
sub
outs
xchg
rcl
jnp
and
or
sub
push
sub
out
jmp
inc
(bad)
xchg
int
cmp
xchg
dec
jne
push
inc
and
or
xlat
cwde
addr16
pusha
cmp
inc
cmp
push
jp
mov
mov
add
xor
and
mov
icebp
clc
inc
adc
rcl
xchg
cmp
outs
imul
cld
lds
xor
inc
cmc
call
pop
add
(bad)
stc
mov
shl
sbb
test
bound
or
shl
shl
inc
push
mov
fstp
scas
adc
mov
mov
lods
add
adc
mov
repz
lds
aaa
or
add
ret
call
add
jecxz
repz
mov
ds
jecxz
retf
ror
lds
fisubr
pusha
clc
lods
fdivr
dec
sub
inc
mov
ins
dec
or
mov
ins
adc
dec
dec
bound
lahf
mov
out
ins
inc
sub
pop
inc
sub
outs
mov
cmp
xor
bound
add
mov
jmp
jmp
mov
rcr
jbe
shl
inc
or
loope
ror
pusha
push
mov
xlat
push
in
push
fsub
pusha
or
cs
ja
(bad)
(bad)
retf
push
push
inc
cmp
mov
(bad)
dec
and
(bad)
xchg
fs
add
jno
fcmovnu
or
(bad)
add
push
inc
popf
rol
xlat
repz
or
mov
fs
retf
call
repz
je
pop
test
dec
movs
xchg
push
jp
or
jno
popa
es
add
hlt
ret
cmps
pop
addr16
jne
cs
xor
dec
push
test
loope
imul
pushf
xor
cmp
push
ds
pop
fisttp
jmp
xchg
mov
pop
call
jo
jg
(bad)
sbb
test
dec
and
xchg
add
add
xor
cmp
cmp
or
inc
sbb
int3
ror
sub
movs
pop
out
push
sahf
add
adc
ret
jo
mov
movs
or
test
inc
hlt
xchg
mov
ja
push
mov
std
(bad)
(bad)
sbb
movs
stc
fwait
mov
rcr
inc
push
cwde
adc
aad
sbb
rcl
movs
imul
scas
add
add
xchg
pop
push
or
fisttp
lahf
xchg
jno
mov
xor
fs
pop
pop
mov
mov
(bad)
adc
dec
movs
popa
int3
and
xchg
mov
or
leave
sub
std
popa
loop
ins
dec
and
add
add
dec
les
inc
push
mov
adc
pop
xchg
inc
fcomp
imul
cdq
fnstsw
cld
int3
loop
mov
push
(bad)
stc
int
jae
pop
neg
push
add
(bad)
mov
test
mov
jmp
test
xchg
cmps
ja
clc
(bad)
dec
xor
and
js
call
xor
push
dec
aaa
outs
adc
(bad)
cmps
addr16
cmp
push
cmps
cmp
fcmovnbe
shl
add
retf
cmps
retf
ins
mov
test
aam
fs
sbb
dec
pop
fsubr
mov
sbb
mov
mov
stos
imul
jne
retf
sbb
sbb
xchg
mov
mov
adc
sub
ret
jmp
cmp
arpl
push
jg
push
jl
iret
sbb
push
inc
mov
adc
mov
sbb
xor
cld
xchg
mov
adc
fwait
iret
xchg
jb
(bad)
mov
daa
daa
pop
out
std
jbe
cmp
movs
cmc
lds
push
jge
inc
inc
out
jp
mov
sbb
shl
and
(bad)
pushf
push
into
pop
jno
les
int3
(bad)
pop
xor
and
xor
inc
mov
lds
(bad)
jne
add
loopne
test
call
test
mov
xchg
and
xchg
push
ficom
adc
popf
sub
push
nop
je
popf
int
jp
xor
inc
test
pop
in
in
pop
mov
cmc
cmps
(bad)
test
xchg
sahf
push
jne
mov
xor
(bad)
sbb
and
sbb
hlt
jbe
mov
sahf
stos
scas
sub
pop
sbb
in
jmp
in
adc
sahf
lods
in
and
mov
out
push
push
fcmovb
hlt
cmps
inc
nop
dec
mov
cmp
out
call
jns
adc
and
cmp
lods
pop
pop
into
loope
push
scas
adc
das
inc
or
xchg
jmp
out
add
and
pop
movs
sub
push
jno
xchg
fisttp
cmp
aas
inc
jecxz
jae
js
aas
jecxz
in
loopne
cld
out
scas
push
les
ret
push
sbb
fsub
dec
mov
jb
inc
stos
cmp
int
pusha
cmp
ret
fsub
test
inc
lds
iret
outs
cmp
mov
push
enter
mov
sysret
pusha
push
push
adc
out
ret
push
es
cmps
xor
bound
fisubr
adc
mov
lds
(bad)
adc
pop
pop
push
aaa
xor
outs
test
lea
xor
loop
enter
jnp
inc
xchg
mov
xchg
pop
or
call
bound
xor
xor
nop
xor
mov
and
ja
dec
retf
mov
sar
sbb
push
outs
mov
into
cwde
enter
or
add
mov
aad
sahf
(bad)
xor
mov
std
lods
xchg
ja
call
mov
fs
ficom
test
js
popa
xor
push
push
inc
in
sti
jbe
cli
cmp
idiv
mov
xchg
outs
mov
stc
add
push
dec
dec
jmp
jne
sbb
fdivrp
fwait
pop
cmc
jp
jbe
xchg
fbstp
dec
out
js
or
dec
fs
fwait
mov
lods
cmp
std
movs
push
jle
dec
neg
adc
test
(bad)
rcl
std
inc
jns
(bad)
aaa
sub
xor
mov
mov
push
mov
das
sbb
mov
push
adc
(bad)
jmp
jmp
fstp
std
xor
shl
jg
push
sbb
jne
rol
fs
loopne
mov
xchg
xchg
lahf
ins
mov
mov
mov
inc
push
(bad)
mov
out
dec
std
mov
sbb
sub
push
pop
mov
pop
ins
jns
mov
jg
dec
cwde
shl
mov
push
lds
pop
fisttp
test
xchg
push
clc
aad
jmp
inc
or
push
inc
ret
es
xchg
or
dec
ins
or
in
jge
ins
ror
sbb
push
add
mov
rol
sbb
pop
aas
movs
outs
ds
cwde
mov
shl
push
pop
jb
(bad)
push
inc
popa
mov
or
jl
xchg
pop
repnz
addr16
cmp
fisub
push
add
in
std
add
sahf
jbe
jp
cmp
scas
repz
pop
and
xchg
mov
pop
in
(bad)
ins
int3
out
enter
(bad)
push
mov
test
ja
add
cmp
loope
(bad)
rcr
repnz
add
fimul
sub
mov
sbb
fsub
dec
mov
pop
dec
jmp
add
mov
xlat
jecxz
jmp
pop
mov
xchg
xchg
dec
xlat
pop
xor
aaa
dec
inc
shr
xor
mov
push
ins
scas
nop
jne
sub
lods
sub
fs
sahf
scas
aaa
mul
sub
test
scas
mov
xchg
and
fimul
sub
sub
repnz
jmp
mov
test
xor
in
fdiv
xchg
xchg
(bad)
call
das
test
and
mov
stc
retf
fst
inc
push
fiadd
and
sub
jecxz
jg
je
push
and
loope
mov
lds
(bad)
outs
jb
push
inc
push
jl
cli
mov
ret
or
inc
in
pusha
mov
pop
or
sbb
sub
xchg
jbe
fidiv
jg
xchg
(bad)
fld
into
pop
adc
push
fcom
movs
mov
jb
into
pop
or
test
mov
lock
ret
sahf
in
ja
fisubr
cmp
jmp
pop
pop
sbb
cli
fsub
mov
push
les
inc
cmps
pop
movs
leave
or
push
into
lock
(bad)
das
ror
jmp
cmps
stos
or
out
or
jmp
ins
inc
fdiv
sbb
sub
pop
sahf
in
sub
nop
in
aam
cmps
pop
sub
sbb
aas
jmp
lahf
es
lea
mov
add
pandn
out
xor
shr
mov
push
sub
and
pop
mov
xor
adc
aas
popf
je
pop
inc
repnz
xor
arpl
mov
push
div
fist
or
leave
shr
sbb
ss
add
push
(bad)
pop
mov
xor
xchg
imul
adc
ret
stos
inc
dec
(bad)
jno
sub
adc
stos
add
push
ss
daa
adc
push
(bad)
in
or
jbe
mov
add
pop
add
adc
pusha
push
sbb
sub
enter
fidiv
adc
repnz
(bad)
and
cmp
jp
(bad)
dec
test
xchg
mov
add
push
popf
mov
dec
arpl
repnz
inc
std
mov
mov
pop
mov
test
jb
inc
fadd
pop
mov
out
mov
sub
mov
pusha
lods
mov
xor
sub
cmps
call
es
jmp
lock
jns
adc
mov
jb
inc
lds
cmp
sub
xor
jge
mov
popa
mov
or
dec
jbe
and
cmc
push
xchg
bound
push
sub
mov
out
shl
inc
sahf
imul
or
mov
pusha
cmp
xor
sbb
and
mov
nop
inc
enter
pop
ins
mov
test
out
(bad)
sub
inc
push
jmp
mov
xchg
xor
ret
jb
xchg
fisubr
pop
pusha
mov
add
mov
or
sti
out
mov
shl
call
push
imul
jae
cli
mov
mov
pushf
mov
dec
movs
mov
sbb
push
stc
cmp
mov
imul
nop
jno
add
pusha
scas
ret
xor
adc
pcmpgtd
jge
push
mov
nop
mov
mov
add
out
add
cmp
sub
sub
data16
sbb
pop
inc
mov
mov
lods
cmp
movs
jg
inc
pop
outs
cwde
sbb
add
cmp
ror
outs
in
mov
cmp
push
imul
sub
mov
sbb
push
xlat
stos
and
sbb
hlt
dec
inc
add
jns
sub
aas
inc
xchg
mov
in
push
gs
push
inc
add
add
aas
mov
xor
loop
cmc
sbb
jb
(bad)
mov
add
cdq
inc
cmp
fsub
mov
retf
or
inc
fidiv
sahf
fidiv
add
xchg
xor
pop
test
jne
mov
loopne
add
ja
std
bound
mov
sbb
push
add
or
in
mov
mov
fbstp
mov
retf
in
iret
and
add
out
ins
jb
adc
cmps
mov
movs
adc
sub
das
add
out
(bad)
cld
aam
push
push
xor
imul
mov
pop
or
mov
and
aam
loopne
mov
test
repz
sbb
cmps
add
mov
les
idiv
jb
cmps
mov
shr
xchg
aaa
add
lods
sub
add
aam
clc
daa
hlt
ss
xchg
and
rcr
int
fs
in
and
pop
out
dec
inc
fsubr
iret
adc
pop
mov
shl
xor
bnd
imul
test
mov
fst
in
mov
cmp
(bad)
int3
push
int
mov
in
and
fist
sub
retf
jno
test
retf
dec
jmp
imul
ret
imul
sub
add
gs
inc
xor
mov
cdq
dec
inc
sbb
mov
in
loope
xchg
movs
jno
gs
xchg
add
jne
mov
(bad)
pop
adc
loopne
in
sub
fidiv
lahf
fs
int
mov
mov
adc
lock
outs
pop
adc
push
outs
push
fst
mov
jbe
lahf
mov
mov
ja
inc
xor
push
cli
ja
loop
cmc
sub
in
cmc
xor
mov
jbe
mov
push
lds
jae
daa
jae
(bad)
data16
hlt
xchg
cmc
sub
imul
inc
imul
push
call
into
cmp
mov
sub
in
inc
cmovbe
stos
sub
xchg
sbb
push
sub
push
jno
mov
inc
pop
pop
loop
xor
push
lahf
jge
and
or
add
cmp
cmp
cdq
cs
jns
cmp
lods
xor
rcr
xor
cmp
repz
cs
out
mov
scas
adc
and
sub
test
add
sub
xchg
push
into
sbb
fcomp
pop
xchg
add
fiadd
cs
or
in
xchg
push
push
xchg
jecxz
sub
mov
cmp
or
xchg
mov
pop
xor
mov
into
xor
push
stos
sbb
dec
popa
inc
neg
jne
ja
daa
pop
outs
sbb
pop
sbb
(bad)
cs
push
push
adc
add
cmove
cmps
xchg
push
adc
mov
adc
bound
mov
fsubr
aad
test
stc
stos
push
in
pop
sbb
jmp
fidiv
jnp
aam
int
add
lds
movs
inc
popf
lea
or
jmp
cmps
sti
loope
cmp
in
dec
out
bound
jmp
cmp
inc
sbb
xor
aas
outs
out
nop
ins
mov
shr
jns
ficomp
xlat
mov
mov
mov
loopne
cmc
stos
adc
mov
cdq
(bad)
lds
dec
cwde
sub
jp
arpl
faddp
or
jle
fldcw
lahf
sbb
arpl
or
daa
mov
je
cmc
cmp
mov
sbb
outs
adc
cmp
stos
mov
lods
nop
jecxz
lds
daa
jg
mov
mov
aaa
xchg
mov
repnz
inc
adc
sub
inc
mov
adc
pop
das
dec
adc
mov
adc
mov
ret
push
retf
pop
sub
and
sahf
mov
dec
mov
adc
cmc
dec
fmul
and
test
xor
movs
dec
mov
aas
imul
pop
seto
rcr
cmp
jnp
adc
dec
sub
jae
and
pop
and
mov
and
(bad)
pusha
push
fisubr
mov
push
dec
inc
sub
mov
loopne
das
arpl
inc
xchg
retf
leave
mov
mov
lahf
push
adc
rol
cmp
fsubr
(bad)
ins
retf
lahf
imul
jbe
sub
pop
std
xor
cmps
adc
inc
ds
shl
fst
ja
mov
js
shr
cdq
sub
push
or
iret
out
inc
cmp
(bad)
js
stc
in
or
mov
or
loop
mov
sub
xchg
hlt
ret
loope
and
movs
inc
in
inc
dec
add
loopne
jb
int3
ja
pop
sub
add
les
jo
sub
jae
test
xchg
mov
sbb
dec
loop
out
dec
mov
in
(bad)
sub
cmps
js
ja
sub
adc
xlat
je
pop
pop
xchg
mov
pop
popa
sbb
imul
(bad)
int3
mov
mov
ror
fimul
sbb
mov
cmp
add
push
bound
xchg
es
push
int
adc
int3
les
push
stc
test
and
cs
in
icebp
fimul
jmp
pop
div
cld
shl
pop
inc
inc
cmps
ret
out
jb
jb
dec
stos
jl
pop
call
mov
pop
aas
in
ror
or
mov
cs
out
ss
popa
es
movs
push
mov
mov
(bad)
sti
punpckhbw
das
jmp
fdivr
test
lds
fldcw
js
push
imul
cmp
mov
mov
jnp
loope
mov
and
push
lahf
or
je
xchg
ret
xor
pop
adc
jecxz
out
pop
add
mov
and
aaa
test
jae
cmp
mov
mov
jle
push
push
push
jnp
shr
jne
push
mov
sbb
sbb
jp
or
pop
scas
push
paddusw
mov
imul
adc
fisttp
xor
and
mov
push
xor
push
daa
lea
adc
dec
dec
aam
push
dec
popf
or
out
xor
push
or
push
hlt
push
(bad)
out
enter
out
imul
std
adc
mov
test
int
pop
stc
rol
in
adc
vmptrst
sbb
add
xchg
add
xchg
fsubr
push
sub
std
in
ja
xchg
scas
mov
lods
(bad)
push
sub
out
and
lahf
jbe
jo
into
xor
fbstp
dec
shl
gs
(bad)
sub
lea
jae
jne
xor
adc
loopne
sbb
mov
cdq
leave
in
adc
gs
(bad)
mov
mov
and
fcmovnu
fdiv
pusha
fdivr
adc
test
rol
inc
in
pop
movs
inc
mov
je
sbb
sub
clc
ja
jb
cmp
lods
aas
adc
je
jp
pop
cli
movs
(bad)
in
and
mov
sbb
test
cmps
push
jmp
jmp
lods
fcmovnbe
into
jnp
dec
mov
cs
add
imul
pushf
xor
ret
and
push
inc
test
int
xchg
and
and
xor
ret
shr
add
pop
or
jbe
js
sub
mov
mov
xchg
fcmovbe
inc
cmp
jge
mov
inc
and
jle
mov
scas
pop
sbb
pop
or
popa
pushf
fsubr
lods
call
pop
xor
nop
push
sti
xor
cs
fmul
cmp
repnz
or
xchg
xchg
aad
stos
push
pop
rcr
ins
push
das
push
mov
dec
in
xor
dec
into
push
inc
xchg
in
cmp
adc
(bad)
pop
fcomp
pop
ins
add
shl
sub
jmp
add
inc
popa
sbb
call
jns
mov
retf
out
cmps
jnp
gs
add
out
pusha
(bad)
jp
enter
in
xchg
sub
or
adc
arpl
add
cmp
loopne
int3
xor
mov
aam
jmp
leave
xchg
mov
nop
jns
sbb
lock
(bad)
pushf
xchg
and
xchg
mov
int3
jne
in
movs
mov
mov
cmc
mov
pop
or
repz
jae
mov
sti
test
mov
aaa
cmp
movs
jmp
ds
inc
add
ins
aam
(bad)
xchg
(bad)
(bad)
mov
fst
popa
xchg
ret
pushf
jge
mul
inc
ja
push
mov
shr
das
mov
add
push
int3
or
fstp
sbb
xor
or
xor
repz
fxch
cmp
cmp
mov
into
inc
test
call
or
fs
shr
pop
and
mov
jge
sub
dec
call
sar
inc
jmp
repz
cmp
mov
stos
jp
not
stos
sub
mov
push
or
jecxz
xor
clc
xor
inc
inc
stc
cld
mov
movs
push
or
mov
std
jecxz
ja
add
mov
lods
add
adc
inc
add
mov
jmp
in
dec
mov
or
adc
scas
call
mov
mov
mov
cwde
into
ficomp
in
and
popa
dec
rol
vmaxps
push
fiadd
std
aam
mov
sbb
inc
sbb
jmp
fwait
nop
jmp
sbb
mov
sub
jo
imul
sti
mov
daa
in
data16
jns
pop
fwait
enter
scas
mov
cmps
mov
mov
pop
dec
jnp
pop
stos
scas
inc
(bad)
jne
push
pop
mov
repz
xchg
fisub
stos
pusha
push
cmp
pop
lea
cmps
jae
adc
fild
sub
fwait
sti
push
mov
push
leave
imul
and
cmps
inc
push
mov
test
sub
inc
mov
mov
add
daa
xchg
jb
sub
mov
aad
xor
pushf
push
pop
retf
push
push
ds
mov
sub
xchg
aaa
jle
dec
push
jp
leave
call
ins
ds
out
jae
push
or
pop
scas
rcl
push
loopne
xor
in
inc
jo
sub
dec
fsub
pop
or
call
fstp
adc
jb
push
mov
movs
rol
mov
pop
retf
(bad)
mov
out
test
std
in
mov
pop
outs
ret
outs
aas
daa
inc
adc
and
(bad)
sbb
sub
mov
es
popa
jge
jmp
pop
cmp
jg
out
xor
imul
or
jnp
xchg
jmp
or
adc
inc
push
idiv
call
add
dec
pop
xor
lahf
pop
xchg
inc
or
jmp
push
addr16
jg
dec
ror
lods
sub
imul
lods
and
sub
pop
ror
call
add
dec
lods
idiv
imul
inc
jo
rol
pushf
fild
fs
sbb
inc
jp
sbb
mov
cmp
lock
add
je
pop
inc
mov
in
shr
cs
in
jne
cmp
loope
adc
cli
xor
dec
pop
repnz
jbe
jl
loopne
jg
in
scas
pop
cmp
fsubr
cmp
iret
(bad)
xchg
mov
xor
push
cs
pop
jo
outs
jnp
pop
and
test
icebp
cmp
sbb
jnp
cwde
cmp
aam
fidivr
mov
pop
fst
es
pop
call
inc
adc
sbb
inc
pop
cmp
inc
sub
dec
shl
dec
js
push
mov
mov
retf
xchg
adc
mov
add
mov
gs
mov
xchg
test
(bad)
in
in
mov
cwde
jb
in
pushf
add
xor
xor
and
ret
pop
cmp
cmp
sbb
out
or
add
(bad)
lahf
rcr
mov
rol
stos
xor
or
add
data16
adc
out
sbb
aam
push
fucomp
daa
xchg
rcr
xchg
cli
in
xor
(bad)
inc
scas
cli
int
in
dec
jae
aam
loopne
movs
adc
sub
pop
mov
jecxz
xor
popf
int
arpl
fstp
iret
(bad)
cli
shl
mov
nop
pop
lods
add
jno
div
rcl
rcr
push
push
pop
jp
add
daa
inc
jnp
mov
sub
xchg
xchg
fs
test
ret
push
mov
fsubr
aas
push
fwait
ret
cmp
cmps
test
mov
mov
mov
(bad)
shl
cmp
mov
or
sahf
adc
(bad)
in
in
cmp
xlat
mov
xchg
add
and
push
idiv
stc
fld
data16
stc
mov
sbb
in
xor
dec
add
aad
cmp
popf
adc
das
cmp
cmp
mov
dec
cmc
out
data16
xchg
sbb
ins
adc
cdq
das
cwde
xlat
xor
mov
dec
pusha
push
(bad)
rcr
xor
sbb
lock
into
add
inc
xor
(bad)
(bad)
(bad)
aas
std
cdq
sti
or
sti
int
rol
shl
inc
retf
aam
iret
inc
movs
jbe
dec
mov
sub
stos
jg
hlt
mov
mov
jb
mov
dec
popa
mov
inc
test
push
cmp
idiv
inc
cmovge
xor
(bad)
jns
imul
push
inc
fld
lods
imul
xchg
shl
jmp
ins
mov
jbe
fsubr
xchg
adc
ss
(bad)
mov
arpl
push
mov
lods
rol
outs
retf
rcl
retf
mov
xchg
leave
and
shr
jo
daa
push
std
(bad)
fbstp
add
cmp
push
cwde
ja
mov
stos
cmps
adc
lahf
jb
inc
jecxz
int3
pop
sbb
retf
in
mov
jecxz
jg
pop
push
push
jno
sub
imul
sbb
adc
fcomip
or
pop
add
dec
out
test
retf
jmp
pop
dec
xchg
popa
cmc
adc
cmp
mov
lock
xchg
dec
and
rol
std
mov
pop
mov
shr
adc
cwde
mov
stc
mov
add
mov
scas
aam
movs
bound
push
mov
enter
das
mov
xor
push
or
mov
shl
ja
aaa
jo
cs
cld
stos
xor
fistp
dec
sbb
rep
test
daa
movs
cmp
aaa
jg
xor
loop
and
push
scas
mov
jmp
jl
movs
mov
call
mov
rcr
dec
jp
cmp
pop
and
fs
cld
and
jg
dec
sub
fcomp
mov
das
sbb
xor
inc
mov
push
sub
shl
xor
jle
icebp
in
enter
inc
shl
jge
sub
scas
xor
fwait
adc
bnd
inc
and
jp
mov
lods
or
movs
jge
pop
cwde
lds
or
mov
outs
push
jg
and
hlt
call
mov
adc
ds
xor
mov
mov
std
ja
dec
popa
mov
int3
aad
addr16
jp
pusha
pop
int
push
mov
sar
in
push
fldenv
or
mov
(bad)
push
pop
jmp
cmp
cmps
push
sar
loopne
sti
out
mov
or
mov
pop
std
ins
ror
mov
pop
mov
pop
jge
xlat
fcom
push
movs
mov
cdq
push
and
push
xor
stos
push
loope
xor
add
iret
add
jnp
int
stos
xlat
mov
into
pusha
pop
je
rcl
adc
mov
outs
or
xchg
dec
cmc
mov
mov
cmc
jae
movs
jle
scas
cld
(bad)
pop
inc
imul
xchg
mov
jnp
add
data16
icebp
out
aad
repz
daa
ret
int3
adc
mov
pop
shl
clc
push
in
dec
xchg
addr16
xlat
test
or
or
rol
xor
vmulpd
xchg
aad
imul
stos
das
mov
sbb
dec
stos
call
cmps
and
xchg
ss
inc
pop
xchg
and
in
jno
fwait
sub
jp
fild
mov
and
(bad)
cs
sbb
xchg
sub
dec
and
or
test
cmp
mov
js
mov
mov
clc
push
fiadd
dec
dec
push
add
xchg
(bad)
retf
adc
cmp
jnp
test
cmp
mov
and
imul
xlat
inc
sahf
mov
arpl
sbb
iret
sbb
pushf
ds
mov
xchg
das
jmp
das
or
lds
cmp
push
or
(bad)
mov
dec
mov
fwait
out
in
add
test
pop
mov
mov
mov
ins
or
mov
mov
in
ins
lock
shr
(bad)
and
mov
and
imul
pop
ins
and
push
test
xchg
inc
imul
das
cs
je
dec
ss
xchg
gs
fwait
sahf
aad
inc
push
rol
test
xlat
xchg
inc
pop
sub
aaa
xor
push
xchg
imul
cmps
adc
pop
fcmovb
xchg
daa
rcr
in
fcomp
jmp
and
pop
cmp
pop
das
dec
aam
or
mov
sar
hlt
fsub
das
rol
outs
and
and
push
jge
dec
repz
mov
add
cmp
ffreep
inc
ror
pop
xchg
mov
push
scas
mov
imul
imul
cs
or
mov
call
inc
inc
mov
in
mov
cmp
push
retf
add
inc
ins
push
cmp
mov
add
repz
sbb
push
stos
sbb
mov
and
jb
adc
xor
dec
js
test
out
pop
out
pop
sub
aad
xchg
push
in
adc
sub
or
aaa
pop
mov
jno
or
ins
hlt
pop
jge
sar
xlat
adc
int
or
adc
or
rcr
(bad)
repnz
out
xor
fild
adc
aas
dec
ins
movs
xor
dec
dec
mov
jnp
and
(bad)
aas
push
cmp
mov
inc
push
js
rcl
cs
mov
es
inc
rcr
scas
jae
arpl
cdq
or
adc
fnsave
jle
mov
adc
ins
xchg
mov
loop
or
inc
je
push
rcl
clc
psrlq
lods
stc
call
cs
outs
push
sbb
mov
or
test
test
push
fimul
inc
push
rol
and
movs
jmp
pushf
pop
mov
out
xor
dec
adc
and
mov
lds
(bad)
call
jecxz
inc
jle
and
in
dec
xchg
mov
add
jbe
ja
pop
xchg
jecxz
jne
mov
bound
mov
iret
sbb
and
retf
sti
lds
fcomp
ins
lea
inc
lods
ret
push
inc
(bad)
pop
adc
mov
popf
cmp
xor
aam
mov
movs
mov
jnp
cmp
jmp
push
jg
push
push
push
xor
test
jne
test
and
push
movs
mov
cs
loop
add
xlat
(bad)
cmps
or
fsub
aaa
jmp
push
mov
mov
dec
push
sbb
jl
or
lds
dec
ja
pop
loop
fnstsw
aaa
into
mov
(bad)
jmp
clc
in
imul
jo
scas
popf
cld
call
addr16
pusha
jmp
pop
lds
pusha
ror
out
mov
mov
add
mov
movs
inc
cmp
jne
daa
scas
ins
inc
pop
sbb
call
push
mov
in
push
mov
shl
inc
xor
xchg
les
iret
pop
mov
int3
test
xchg
jo
and
scas
imul
xchg
jl
dec
push
and
mov
push
mov
pop
(bad)
mov
mov
jne
pusha
fnsavew
aam
xor
jbe
cmc
arpl
inc
iret
dec
xchg
adc
loopne
(bad)
in
out
hlt
scas
int
cmp
inc
inc
stos
and
xor
int3
stc
xor
ds
test
xor
sbb
mov
mov
mov
hlt
and
jnp
in
adc
cmps
sub
cdq
inc
mov
push
and
xor
cmp
dec
cmc
sub
sub
mov
out
add
pop
outs
aaa
call
xchg
or
repz
push
ret
and
js
stos
(bad)
adc
inc
inc
fucompp
mov
test
movsx
dec
loop
std
int
out
mov
cmp
jle
mov
xchg
or
pop
mov
test
ss
push
or
das
and
hlt
push
jecxz
or
dec
sahf
mov
fcomi
repnz
cmp
das
(bad)
xor
cmps
jae
push
xchg
jbe
sub
mov
popf
sahf
cmc
mov
loope
mov
add
in
adc
scas
cli
cmp
sub
dec
pop
and
jmp
mov
aam
jbe
(bad)
repz
in
add
ins
mov
cmp
mov
pusha
(bad)
add
aam
pop
lea
jmp
mov
push
add
les
rcl
pop
push
push
cmps
scas
pop
into
mov
jbe
stos
rol
pop
xchg
mov
dec
mov
jle
lock
fwait
and
push
and
pop
sbb
es
sbb
jl
test
popa
scas
mov
retf
(bad)
adc
xor
xchg
pop
fwait
xor
and
lock
repz
dec
movs
push
sub
jmp
arpl
jnp
dec
cmp
push
pop
add
add
das
add
jp
fisttp
mov
movs
pop
stos
mov
repnz
jo
mov
nop
mov
mov
in
cmp
inc
xor
fbld
xor
mov
adc
pop
iret
push
retf
jb
jecxz
test
fild
push
gs
mov
cmp
sub
adc
(bad)
sub
xchg
mov
fistp
sub
xchg
pushf
or
stc
push
add
ret
xor
dec
inc
ja
adc
mov
push
pop
es
out
aaa
pop
loopne
adc
das
repz
or
or
adc
shr
pop
jmp
mov
fwait
jl
shr
repnz
mov
inc
dec
xchg
rcr
pop
add
or
out
movs
add
sub
xchg
mov
cmc
push
leave
cwde
pusha
push
outs
push
jmp
movs
test
xchg
popa
adc
dec
push
call
push
test
stos
test
(bad)
fwait
push
lahf
cmp
adc
mov
mov
push
lods
cmps
bound
jnp
test
aad
mov
sbb
in
data16
dec
rcl
enter
mov
push
xchg
pop
into
imul
mov
fs
(bad)
shl
push
adc
sub
cmp
test
or
cmp
jns
jne
out
ja
sahf
dec
mov
test
int
sbb
jnp
mov
call
sbb
xor
test
sti
movs
shr
mov
test
fiadd
jo
cmp
dec
and
mov
nop
xor
add
outs
lods
sbb
hlt
pop
inc
movs
mov
cmp
xor
pushfw
jno
push
jns
ret
sub
not
xor
jmp
in
popa
adc
sub
inc
sar
mov
ss
out
sub
add
iret
sti
lea
mov
retf
cmps
sub
imul
cmp
mov
push
cmp
test
sbb
fs
mov
jmp
xchg
cmps
sub
sub
loop
stos
xchg
fidiv
jae
(bad)
clc
nop
mov
nop
inc
pop
dec
(bad)
ins
dec
pop
enter
push
hlt
mov
push
push
jecxz
push
jno
(bad)
jmp
stc
inc
xchg
pop
sbb
ins
push
mov
mov
jbe
jmp
inc
test
fmul
scas
pop
add
(bad)
mov
inc
(bad)
cmp
push
inc
inc
sbb
mov
cld
in
push
or
and
push
pop
inc
fiadd
lods
ret
push
fimul
dec
mov
bswap
popa
movs
add
jl
mov
into
mov
(bad)
pop
loopne
data16
jno
in
sub
push
mov
push
pop
and
and
mov
sub
pminsw
mov
std
cld
inc
cs
repz
xchg
(bad)
test
xlat
test
adc
stos
xchg
xchg
ds
imul
imul
xlat
push
lock
aaa
push
mov
shr
push
pusha
aaa
and
xor
test
inc
lea
add
hlt
and
dec
mov
sbb
shl
xchg
push
je
lods
(bad)
fucomip
loopne
or
sahf
push
popf
(bad)
loope
mov
lea
push
mov
cdq
addr16
dec
and
outs
sub
out
mov
pop
pop
repz
xchg
inc
test
xor
add
das
in
mov
pop
into
mov
xchg
int3
loop
mov
cmp
dec
push
out
jecxz
shufps
or
mov
dec
addr16
retf
adc
mov
lods
mul
jle
inc
mov
rcl
cld
pop
mov
aaa
addr16
xchg
popf
pop
pop
pusha
js
sub
dec
xchg
mov
mov
push
fwait
ins
cmc
int3
add
mov
inc
pop
ficom
jmp
xor
push
loop
add
mov
push
xor
fsub
adc
mov
jne
inc
sbb
push
push
jle
mov
xchg
xor
adc
out
in
in
or
sar
arpl
and
add
(bad)
sbb
icebp
pop
jno
fstp
xchg
in
mov
mov
pop
mov
addr16
push
mov
and
popa
jmp
mov
loop
aas
jbe
out
out
jnp
outs
ffree
pushf
inc
pop
and
sbb
pusha
and
iret
ret
adc
mov
xlat
mov
pop
jbe
mov
(bad)
(bad)
movs
ret
add
jp
mov
add
mov
sbb
icebp
in
in
pop
xchg
hlt
(bad)
cld
stos
in
sub
sbb
xchg
loope
mov
mov
rol
les
pop
in
sbb
outs
sub
inc
xchg
xor
ds
or
ins
popa
cmp
lods
dec
mov
in
jnp
test
lock
cmps
pop
test
jno
in
add
adc
pop
inc
pop
or
cli
cmc
inc
cmp
mov
popf
dec
sahf
mov
stos
sub
push
pop
adc
out
test
pop
scas
sbb
hlt
adc
fidiv
nop
jno
stos
(bad)
in
(bad)
nop
popa
jp
add
xchg
inc
test
pop
and
out
fisubr
lods
mov
test
stc
ins
sub
add
sbb
sbb
pop
pop
mov
je
or
and
stos
xor
out
sub
adc
inc
rcr
std
int
cmp
(bad)
pushf
dec
aam
bound
stos
xor
cmp
hlt
sbb
xchg
and
movs
xchg
push
stos
add
xor
xchg
or
outs
loope
inc
icebp
or
pop
mov
sbb
imul
jns
cmc
push
lds
sub
sbb
sbb
je
outs
cmps
push
(bad)
or
or
rcl
stos
pop
pop
imul
(bad)
push
cmp
loopne
cmp
jbe
jbe
mul
fistp
loop
inc
outs
cdq
call
adc
pop
fbstp
add
jecxz
sbb
push
int3
sti
sbb
xor
xor
stos
out
imul
es
outs
xor
lods
out
sub
jmp
mov
mov
(bad)
ins
jle
sahf
ret
popf
das
pop
int3
shr
inc
enter
in
or
dec
mov
cwde
jmp
fdiv
pop
or
out
sbb
fs
or
mov
add
push
test
pop
jmp
ds
xchg
add
ffreep
pop
(bad)
push
add
popf
add
ret
pop
pminub
inc
sbb
jle
cmps
inc
push
xchg
jno
ja
adc
dec
dec
pop
mov
push
arpl
mov
sub
scas
jmp
jb
dec
inc
aaa
lods
push
jp
xchg
das
dec
sbb
jg
scas
mov
out
neg
inc
imul
sbb
cmp
mov
dec
adc
mov
push
push
push
adc
icebp
ret
sbb
(bad)
aam
push
adc
sahf
test
outs
ds
pop
add
add
sti
or
add
xor
movs
int3
sub
jmp
xor
mov
std
mov
push
scas
mov
aam
pop
or
mov
xor
or
sbb
sti
xlat
pop
lahf
ss
lds
dec
enter
in
cdq
inc
cmp
dec
xchg
std
mov
jo
dec
gs
retf
xor
dec
xchg
cs
les
es
in
scas
xlat
arpl
adc
jmp
out
out
fcom
mov
or
loope
fwait
pop
adc
jno
pop
fcmovu
cmp
sub
and
dec
push
cmc
inc
mov
dec
hlt
cmp
xchg
dec
mov
mov
mov
mov
out
jo
test
add
adc
(bad)
stc
xchg
imul
and
pushf
sub
scas
cmc
imul
in
in
add
mov
popf
jle
fist
fild
loop
push
push
xchg
cmp
out
ss
mov
fwait
xchg
cmps
clc
add
dec
sahf
fadd
imul
push
push
outs
ss
sar
fmulp
lods
mov
inc
(bad)
movs
icebp
rcl
pop
mov
or
push
ss
fsubrp
dec
inc
enter
xchg
jbe
retf
ror
mov
cdq
sbb
lock
jle
cmc
and
inc
aas
cmp
into
jg
aas
sub
mov
fbld
mov
mov
sbb
nop
loopne
lds
ins
and
xchg
shl
sbb
fsqrt
mov
xor
fucomp
into
int3
rol
fdivrp
retf
or
adc
push
lahf
loope
xor
retf
mov
fld
arpl
xchg
pop
and
or
sti
(bad)
mov
push
adc
push
push
or
inc
in
test
jmp
in
jp
inc
outs
(bad)
fsubr
test
cmc
retf
pushf
push
mov
loopne
pop
lock
fcomp
aas
push
add
in
push
cmps
shl
fld
mov
xor
pusha
adc
test
mov
xchg
cmp
dec
cmp
adc
mov
cmp
cs
out
test
and
ret
mov
pop
xchg
fwait
cmps
outs
jno
adc
pop
xchg
push
cwde
jae
scas
push
popf
fidiv
(bad)
aas
sbb
lods
pop
xor
test
sub
popa
push
jo
icebp
xlat
(bad)
cmc
cli
jae
(bad)
test
add
jecxz
push
dec
fnstcw
cmps
mov
es
sub
pusha
aas
push
push
int
stos
mov
lods
push
xchg
std
test
inc
xchg
inc
stos
pop
push
rcl
sahf
push
push
call
mov
jle
aad
lods
mov
aaa
mov
mov
jbe
jne
inc
xchg
loope
jo
rcr
push
pop
imul
int3
nop
ret
jbe
stos
mov
dec
inc
into
jne
dec
test
pop
jae
aam
sahf
mov
mov
cld
in
pop
xchg
xor
mov
movs
ins
adc
push
add
sub
sbb
jne
xchg
jbe
or
cld
(bad)
mov
add
cmp
xchg
pop
test
adc
cmps
loop
fisub
and
fisubr
cmp
push
mov
inc
in
hlt
fldcw
lods
test
mov
add
jb
rcr
cmp
scas
movs
xchg
or
cdq
sbb
and
loopne
sbb
push
(bad)
pop
jmp
inc
mov
int3
mov
aad
mov
push
scas
mov
xchg
mov
cwde
jns
jns
xor
jmp
bound
or
add
enter
cs
add
int3
sub
ror
cwde
out
xor
call
je
sahf
rol
cmp
sbb
int3
scas
aam
or
fild
xor
ins
mov
jecxz
stc
mov
arpl
test
js
pushf
fsubr
sub
mov
xor
sbb
push
mov
imul
ins
dec
mov
push
sub
lds
retf
sub
fist
int
pusha
arpl
idiv
int
push
mov
(bad)
test
ins
and
mov
xchg
test
int3
cmp
jle
sbb
cmps
ins
jnp
test
cs
cdq
mov
js
add
clc
or
mov
into
(bad)
scas
mov
shl
jp
scas
dec
clc
jle
adc
xchg
data16
jmp
dec
and
loopne
data16
sbb
xchg
adc
mov
call
cmps
cmps
shr
pop
in
push
ss
sub
jne
xchg
xchg
pop
and
push
sahf
ret
dec
ins
pop
sbb
dec
sbb
pop
sti
and
inc
lock
dec
scas
hlt
lea
xor
(bad)
dec
mov
imul
sbb
pop
data16
arpl
xchg
add
sub
(bad)
xchg
loopne
repnz
out
mov
test
xor
repz
sbb
leave
stos
inc
mov
or
xchg
cld
xor
cmp
or
jne
leave
adc
xchg
stc
sti
test
aad
xchg
sahf
sbb
outs
ret
dec
jecxz
cli
push
popa
mov
xlat
mov
dec
ror
push
xor
sbb
mov
dec
mov
retf
repz
push
fdiv
adc
mov
les
sbb
into
outs
adc
(bad)
inc
pop
sbb
fs
sub
pop
cld
add
(bad)
pop
cmp
in
push
jns
cmp
inc
xchg
push
lahf
xor
jp
sbb
or
sbb
sahf
jnp
hlt
and
ret
call
mov
cs
dec
jg
adc
retf
scas
mov
dec
stos
dec
dec
outs
imul
adc
xchg
push
adc
pop
add
cmps
ret
or
not
sub
fwait
loopne
(bad)
mov
stos
xchg
jg
mov
fcomip
icebp
in
and
outs
dec
jge
and
mov
in
mov
adc
mov
shl
adc
cwde
or
xor
push
jmp
pusha
cmp
call
mov
leave
sbb
jo
ds
push
repnz
sbb
mov
xor
gs
cdq
ret
xchg
pop
push
jecxz
mov
sbb
stc
mov
or
ins
add
push
sbb
or
cwde
adc
pop
xchg
gs
xor
adc
cmp
jmp
xchg
popf
fstp
pop
imul
push
cld
in
add
add
and
shl
stos
fist
sbb
push
or
or
push
js
(bad)
lods
and
stos
and
daa
jnp
mov
stc
xchg
idiv
inc
push
sar
out
loopne
out
or
or
add
cwde
adc
inc
mov
xchg
adc
cmps
pusha
loop
mov
add
rol
jb
ficomp
jnp
xchg
aas
enter
and
inc
pop
popa
mov
pop
(bad)
jle
and
fcmovnb
jmp
aam
movs
pop
sbb
enter
stos
mov
in
iret
in
add
lds
mov
mov
cmp
jmp
push
jb
int
and
adc
jbe
ficomp
int3
mov
sbb
sar
add
test
enter
fist
jnp
add
push
mov
xchg
test
fcom
xchg
ds
xor
dec
lods
sbb
(bad)
stos
imul
adc
sti
mov
movs
adc
bnd
arpl
loope
jmp
in
inc
add
movs
ret
inc
adc
and
mov
out
hlt
stc
dec
int
jae
fmul
lods
mov
in
or
cmp
mov
dec
jno
imul
jae
mov
addr16
add
adc
test
lea
xor
test
sbb
xchg
push
adc
sbb
dec
xor
call
inc
sar
addr16
sub
fisttp
std
pusha
or
mov
xchg
sar
dec
fwait
adc
das
daa
inc
out
ja
or
sub
(bad)
in
sub
xor
in
loope
xchg
add
xchg
xchg
mov
push
pop
add
test
jge
stos
popa
and
mov
push
jg
(bad)
popf
dec
imul
push
call
mov
fdiv
pop
sahf
sub
loope
pushf
xchg
push
add
lea
xor
cmp
and
std
sub
pushf
popf
jno
mov
lds
cmp
inc
hlt
adc
sbb
std
jne
mov
std
ficomp
push
ss
jb
pop
call
mov
test
push
add
and
movs
stos
mov
add
call
popf
lea
mov
out
jbe
mov
loope
fisubr
ret
mov
and
cld
iret
mov
cmps
xchg
adc
xchg
daa
jae
(bad)
cmp
cmp
sbb
push
jecxz
sbb
test
lock
pusha
retf
pusha
push
mov
or
call
xor
pop
cdq
call
dec
mov
xchg
xor
inc
xchg
loop
mov
mov
mov
mov
pop
popa
icebp
pop
xchg
test
cld
pop
inc
push
adc
icebp
sbb
xchg
imul
loop
pop
mov
cmc
pop
xchg
jecxz
fistp
mov
sub
cmp
xchg
pop
pop
jbe
sbb
dec
mov
retf
fisub
push
lds
sub
push
(bad)
or
jmp
add
mov
add
aaa
mov
lea
mov
inc
inc
cmp
call
pop
add
push
add
arpl
pop
test
cmp
in
leave
and
das
sub
data16
sub
fnstsw
add
lods
adc
fxch
dec
adc
sbb
mov
push
sub
packssdw
cmp
loope
lea
mov
push
and
jl
xchg
retf
out
add
sbb
sub
scas
or
mov
push
xor
sbb
sub
dec
retf
int
clc
pop
movs
(bad)
jle
test
cmps
in
xlat
fiadd
mov
adc
xor
setl
xchg
inc
push
cmp
cmp
pusha
ret
inc
cmps
pop
cmp
cdq
fidiv
jg
fwait
sub
std
(bad)
jmp
lahf
gs
dec
stc
aas
addr16
jmp
nop
out
cmp
cmp
and
xor
pand
das
test
aad
fimul
mov
pop
sbb
push
loopne
jmp
adc
call
push
fwait
popf
cmc
pop
test
in
cmp
mov
es
pop
stc
sbb
leave
inc
jmp
dec
pop
jmp
std
call
dec
push
mul
pop
inc
movs
push
ret
inc
push
stc
and
retf
sub
aaa
or
std
xchg
retf
test
fwait
push
lock
adc
inc
jl
cmp
fwait
leave
(bad)
push
add
addr16
mov
loop
push
in
ficom
push
add
sbb
mov
jge
push
loop
aas
bnd
sub
xchg
aam
daa
or
dec
cmp
mov
pop
(bad)
and
cmp
icebp
inc
jge
sahf
pop
jb
sbb
data16
sbb
popa
push
pop
shl
xchg
push
sti
loop
pop
sub
imul
cmp
xor
pusha
stc
lea
loopne
cdq
out
lds
add
mov
cmps
pslld
adc
xor
and
dec
mov
add
cs
in
mov
jg
outs
bound
mov
rol
sbb
call
out
aad
mov
popf
push
and
dec
xchg
enter
jne
(bad)
imul
xchg
enter
cmp
imul
or
jecxz
cmps
rcr
and
xchg
pop
mov
jae
sti
mov
jbe
sub
js
arpl
dec
or
xchg
shl
adc
pop
and
fisub
xchg
dec
in
sahf
jg
mov
loope
sub
sbb
aam
mov
sbb
call
and
pop
xchg
push
add
mov
mov
loop
or
xor
mov
test
ss
out
mov
aad
adc
xchg
inc
mov
add
adc
add
mov
sub
inc
dec
mov
sbb
and
inc
pop
inc
mov
ja
fist
jecxz
fidivr
nop
fsub
push
push
das
sub
pop
int
mov
inc
pop
push
dec
pusha
inc
sbb
frstor
and
mov
iret
jo
mov
loop
xor
out
fwait
sub
fdivr
data16
sub
mov
mov
inc
pop
jmp
push
jecxz
adc
jg
outs
xor
adc
sbb
outs
sbb
pop
enter
pop
mov
shr
imul
ins
jns
xchg
and
adc
mov
loopne
pop
mov
sub
(bad)
ins
addr16
mov
mov
outs
out
inc
cmp
imul
scas
sbb
ja
push
dec
jecxz
or
jb
outs
fmul
dec
cmp
cwde
sbb
jnp
adc
mov
xchg
push
mov
xchg
mov
int
popf
cmp
jo
push
jmp
inc
(bad)
gs
inc
push
icebp
daa
sbb
(bad)
xchg
retf
add
inc
fstp
adc
jl
(bad)
jge
je
int3
push
mov
jbe
dec
add
sub
pop
retf
pusha
(bad)
add
rcl
lahf
cmp
fs
jg
or
jmp
vpsubsb
push
dec
mov
fld
mov
imul
mov
in
and
imul
das
mov
cld
daa
or
fstp
aaa
cmp
das
jmp
push
int
jne
fild
cwde
fnstenv
jb
mov
ret
pusha
or
sub
shr
push
call
test
sub
mov
sbb
js
sar
and
push
mov
sbb
dec
or
inc
mov
mov
pop
cmp
ins
ins
pop
fwait
mov
sbb
and
icebp
mov
adc
leave
pop
sub
dec
push
mov
gs
ret
xor
scas
mov
sub
sub
loopne
mov
xchg
inc
sub
icebp
sub
push
clc
test
cmc
dec
sti
sbb
push
xchg
jge
xor
push
les
and
mov
imul
pop
push
mov
and
mov
cmp
cmc
mov
sub
mov
sti
sub
jmp
nop
ds
ins
pushf
lahf
in
add
xlat
jo
movs
mov
icebp
pop
inc
fs
sbb
clc
mov
sub
mov
js
cld
jge
adc
inc
ja
shr
jbe
stos
lods
xchg
sbb
or
inc
popa
(bad)
dec
mov
cwde
xlat
xchg
movs
dec
mov
fwait
cmp
cmp
and
xlat
push
xchg
in
fcmovnb
mov
inc
pop
int
out
sub
stos
rcr
dec
shld
inc
imul
data16
sbb
fnstenv
pop
and
mov
std
inc
and
(bad)
test
push
fidivr
inc
stc
pusha
push
cmp
fs
dec
jle
ret
jmp
les
xor
xor
hlt
lods
pop
mov
ins
or
ficom
dec
pop
and
dec
xchg
(bad)
ins
movs
int
(bad)
jmp
jnp
cmp
push
fimul
inc
xchg
lods
in
mov
and
pop
loopne
push
or
cmc
les
int3
push
jns
adc
les
inc
enter
mov
push
pop
sahf
or
das
leave
scas
int
pop
jmp
daa
jae
pop
mov
cmps
hlt
xor
movs
mov
out
inc
psubsb
inc
mov
jb
or
(bad)
mov
js
cdq
retf
int3
rol
cmc
and
mov
or
fwait
add
cmp
jno
sahf
mov
mov
sbb
mov
inc
xchg
aad
stc
arpl
imul
les
push
add
aas
push
jmp
loop
sbb
int3
inc
add
repnz
push
pop
cmps
push
sahf
pop
xlat
or
cmc
push
inc
or
ss
inc
mov
leave
dec
popa
fstp
lds
in
repz
loopne
xlat
xor
mov
jl
mov
ffreep
hlt
fld
xor
cmc
mov
scas
adc
cs
xchg
jl
xchg
inc
or
and
vcomiss
push
in
pushf
pslld
sar
inc
bound
dec
sbb
in
(bad)
or
and
(bad)
hlt
loop
int3
sub
or
outs
pop
xor
test
add
not
outs
adc
addr16
pushf
xlat
dec
test
xor
pop
jb
adc
ss
fs
repz
retf
sub
and
xor
lock
in
int3
pusha
jne
enter
or
sahf
sub
out
pop
mov
pop
fldcw
xchg
les
adc
cmp
lods
(bad)
xchg
and
pusha
xchg
scas
adc
xchg
mov
push
sbb
push
psubq
iret
fst
xor
cmp
retf
sub
inc
or
sub
movs
inc
jae
mov
dec
adc
sub
fsubp
fadd
push
aad
jb
div
adc
fstp
add
je
push
pop
xchg
sub
xlat
ins
aam
stos
add
add
add
inc
dec
(bad)
mov
cwde
test
inc
enter
xlat
xchg
push
push
sahf
jge
cmp
xor
rcl
test
adc
mov
test
jo
add
stos
push
dec
jl
scas
ficomp
jecxz
adc
jbe
and
(bad)
int
xchg
jbe
in
mov
mov
(bad)
ret
clc
xor
ret
cmp
cli
push
xchg
cwde
repnz
repnz
cld
add
out
dec
cmovs
retf
fld
fimul
dec
fstp
mov
das
cmps
retf
or
lock
sbb
adc
sbb
popa
mov
pop
push
add
imul
ror
dec
jecxz
add
movs
nop
pop
dec
in
or
pop
or
ins
mov
sbb
ret
gs
dec
sbb
inc
jge
jae
xchg
fwait
and
mov
call
rol
mov
mov
repnz
les
push
into
(bad)
(bad)
jno
mov
jl
sub
jl
sbb
ror
test
sbb
xchg
mov
jb
xor
cli
inc
and
pop
cmp
mov
not
lds
xor
test
xor
ror
pop
xor
mov
loop
sbb
retf
je
lods
jbe
(bad)
pop
mov
jne
pushf
inc
iret
movs
out
and
jp
adc
aaa
jmp
push
arpl
inc
jo
sbb
icebp
xchg
and
je
sub
mov
cmp
call
bnd
aam
xlat
xor
fld
jo
lods
cmp
mov
mov
clc
imul
or
cmp
int
mov
ja
sahf
xchg
cmps
popa
jmp
add
fwait
sti
inc
std
fist
and
(bad)
pop
shr
inc
sar
jmp
mov
or
dec
stc
mov
das
add
sbb
adc
mov
and
mov
ficomp
mov
leave
repnz
sbb
cmp
cmp
shr
retf
ss
popa
loope
ds
(bad)
push
xchg
ret
mov
sbb
adc
xchg
loopne
fnstenv
mov
popa
(bad)
mov
pushf
loope
repnz
dec
sti
xor
fmul
push
cmp
(bad)
hlt
mov
mov
es
sub
inc
inc
das
sbb
loop
lock
jno
sub
nop
inc
jge
mov
dec
out
outs
pop
or
popf
mov
sub
addr16
cmp
rcl
ins
mov
mov
sbb
sbb
out
loope
fwait
adc
jo
rol
fst
clc
out
fsub
mov
xor
mov
gs
pusha
or
push
xchg
xor
out
push
push
loopne
lods
add
push
data16
inc
pop
jne
xchg
popa
add
outs
pop
or
jg
sbb
pop
xchg
in
sbb
mov
(bad)
sti
and
pop
mov
add
stos
mov
imul
vmread
cmp
lds
retf
pop
es
stc
sbb
shl
jne
or
cld
cmp
jg
sbb
out
test
mov
mov
pop
sbb
test
stos
out
or
push
dec
popa
sbb
lahf
icebp
adc
(bad)
fnstcw
lods
and
mov
retf
sbb
mov
test
sub
inc
fisttp
push
jnp
movs
and
pop
mov
icebp
xor
pop
data16
cli
adc
and
push
push
inc
mov
ret
push
add
xor
jl
stc
icebp
ins
jno
fdivr
sub
adc
adc
mov
cmp
inc
or
mov
fwait
retf
les
(bad)
fnstcw
and
push
cmp
rol
xchg
fcom
out
lock
(bad)
sub
inc
push
pop
add
gs
pop
repz
push
(bad)
imul
in
mov
cmc
in
mov
pop
sub
jo
inc
mov
(bad)
xlat
mov
ins
gs
lods
jecxz
cmp
movs
inc
and
ret
mov
(bad)
or
(bad)
repnz
jmp
pop
sbb
add
outs
pushf
jmp
out
xchg
mov
xor
mov
mov
popf
inc
xchg
in
mov
jecxz
jne
add
(bad)
pop
scas
add
push
gs
(bad)
mov
mov
pop
cld
fsubr
mov
jbe
test
adc
pop
xchg
cmp
gs
push
fidivr
xor
rcr
neg
leave
aas
sub
sti
cmp
aaa
mov
hlt
cmc
lods
inc
or
or
push
ror
mov
or
jge
pop
cwde
in
jg
addr16
mov
dec
pop
mov
nop
pop
and
and
rol
dec
shl
push
push
jo
test
or
jecxz
mov
dec
sbb
(bad)
ror
adc
out
mov
cmp
xor
xchg
cmc
retf
les
adc
jae
fcmovu
out
sbb
and
sub
fst
jnp
js
fnstenv
adc
or
das
popf
call
pop
dec
(bad)
out
out
jno
(bad)
jmp
js
cli
push
popf
ret
(bad)
xor
or
xchg
arpl
fimul
or
push
stos
lea
jbe
inc
in
and
(bad)
jmp
in
in
(bad)
xchg
into
cdq
aaa
mov
push
xchg
and
sahf
fnstcw
jns
push
(bad)
fdivr
(bad)
loop
push
(bad)
daa
ds
loopne
adc
enter
pusha
cmp
pop
jo
lahf
pop
sbb
stos
or
fcomp
cmp
out
into
std
mov
mov
mov
cmp
into
outs
add
mov
shr
add
adc
lods
repnz
push
fsubp
or
jmp
in
jno
shl
dec
jmp
sbb
xlat
ret
popf
lds
popf
aam
(bad)
sti
jo
div
inc
out
dec
(bad)
je
and
fst
pop
push
(bad)
jo
(bad)
ins
lods
movs
leave
mov
pop
(bad)
in
out
hlt
mov
adc
xor
(bad)
push
mov
xor
sub
aas
in
mul
xor
loop
jbe
sub
xor
pop
push
sub
mov
(bad)
sbb
jl
push
xchg
dec
popf
cmp
ret
mov
sbb
and
jg
inc
(bad)
ret
clc
add
adc
popa
jnp
jb
in
jmp
push
mov
mov
mov
sbb
mov
fld
ret
inc
hlt
call
push
mov
or
inc
xchg
imul
fwait
cmps
mov
repz
adc
(bad)
rcl
mov
movs
pop
sahf
pop
ret
inc
xor
(bad)
rol
mov
push
js
shufps
aad
pushf
popf
jge
fwait
inc
lock
outs
push
loope
ret
jno
mov
pop
xlat
loope
push
and
mov
test
pushf
jmp
ret
push
cli
(bad)
pop
push
lea
sar
loop
dec
loope
adc
jp
popa
(bad)
sbb
cmp
inc
imul
mov
aas
push
movs
js
jle
ret
mov
mov
test
int
add
clc
pushf
push
xor
int
or
inc
fmul
sbb
repz
sbb
push
mov
jg
das
mov
pop
int
jg
cwde
mov
retf
popf
mul
leave
stos
push
push
sub
mov
mov
and
sti
mov
inc
xchg
dec
mov
scas
out
mov
out
xchg
cmp
dec
or
popf
rol
fidiv
repnz
ins
xchg
out
outs
mov
jmp
mov
push
adc
movs
outs
(bad)
mov
and
fsub
sti
sub
gs
push
mov
add
pop
fucomp
pop
fwait
call
rcl
inc
aas
loope
xor
inc
xlat
imul
add
jge
popf
out
dec
jecxz
(bad)
adc
fild
shr
test
stos
xor
xchg
cdq
or
clc
jecxz
aad
aas
add
imul
jns
test
jecxz
and
jo
js
lea
sub
enter
inc
push
arpl
fild
sub
dec
lods
mov
xor
es
(bad)
js
enter
add
mov
imul
into
or
repnz
jp
inc
and
fbld
mov
adc
shl
shr
xor
xchg
xchg
add
jge
movs
outs
add
mov
shl
add
(bad)
dec
fs
xchg
imul
push
(bad)
sbb
les
in
pop
mov
xchg
sti
icebp
sub
pop
ja
sbb
out
stos
mov
or
(bad)
movs
cs
lods
arpl
fsub
in
dec
jbe
dec
clc
ficom
xor
loop
retf
jmp
mov
test
pop
fcomp
shr
sub
(bad)
rcl
xchg
cld
fcomp
mov
sub
test
cmp
pop
ret
mov
les
xor
stc
xor
push
mov
in
pop
jmp
out
adc
idiv
in
stos
ret
aas
cmp
push
inc
add
xor
fs
aaa
mov
add
ins
fmul
mov
(bad)
(bad)
mov
popa
mov
retf
neg
push
mov
test
stos
cdq
mov
mov
mov
movs
(bad)
int
cmp
leave
sub
or
addr16
bound
call
mov
add
pop
push
pop
stos
or
add
leave
ret
out
in
mov
jbe
cdq
arpl
xor
or
and
shl
into
out
sti
xchg
cmp
leave
pop
sbb
adc
jnp
sub
xor
jno
int3
movs
add
ins
dec
sbb
cmps
xor
cmp
lods
ins
inc
sbb
pop
sub
sbb
(bad)
repz
out
sub
movs
push
in
sub
outs
das
dec
out
addr16
xchg
imul
js
mov
gs
push
daa
cmp
and
popf
xchg
jne
leave
sbb
dec
popa
push
push
adc
inc
add
mov
push
cmp
push
push
in
pop
pop
inc
stc
dec
jne
jp
ret
jge
cmp
aam
jmp
sahf
sbb
sbb
dec
fwait
xor
inc
and
cmp
mov
adc
call
push
shl
adc
stc
mov
ret
imul
xor
cmp
cld
jge
jae
(bad)
inc
adc
and
jo
jb
pop
imul
out
sbb
iret
sub
or
ins
ror
sbb
dec
adc
lds
pushf
pop
popf
push
test
fisttp
sbb
pop
mov
add
sahf
je
ffree
jne
retf
mov
inc
jmp
hlt
jp
call
clc
ss
xchg
add
inc
movs
or
xchg
xor
test
mov
fmulp
sbb
mov
pop
in
jmp
scas
and
cmc
fldenv
mov
js
push
fsub
pop
das
mov
sub
iret
int3
pop
xorps
push
xchg
(bad)
mov
mov
shl
xor
cmp
lods
std
mov
pop
push
mov
cmp
pop
enter
retf
sti
mov
push
dec
stos
int
aaa
or
xchg
mov
stos
jb
fiadd
shl
call
test
inc
sar
push
pop
jle
gs
xchg
cli
pop
mov
sub
pushw
xchg
pop
dec
ja
cmp
ins
or
push
and
jnp
test
dec
dec
xor
loopne
repz
je
sahf
sahf
xor
mov
pop
lock
cmc
cmp
adc
mov
imul
mov
mov
fidivr
sar
icebp
sahf
jle
shl
cmp
out
mov
nop
pop
xchg
jb
xchg
inc
in
loope
loop
ins
out
mov
adc
adc
add
push
arpl
xlat
pop
inc
popf
mov
jmp
lea
dec
dec
adc
add
xor
fwait
pop
mov
(bad)
mov
mov
clc
ficomp
pop
jae
in
pop
es
(bad)
jbe
or
xor
aam
jnp
jns
mov
jg
dec
sub
mov
aaa
pop
idiv
push
dec
jno
sub
icebp
push
repz
scas
lods
xlat
adc
jb
pushf
xchg
sti
add
jmp
pop
std
xchg
lahf
push
in
push
rcr
and
int
mov
or
xchg
xlat
xchg
int
leave
push
repz
push
jns
cli
jno
outs
and
ins
mov
xchg
(bad)
sbb
cmp
popa
cmp
test
pop
pushf
mov
retf
add
stc
in
repz
jnp
fimul
dec
jbe
and
dec
pop
xor
cmp
mov
sbb
and
mov
mov
retf
sbb
or
xchg
ins
mov
add
ret
pop
ss
inc
mov
and
sub
mov
out
(bad)
sbb
fbld
and
sbb
std
pushf
sbb
fs
pushf
xor
mov
popa
or
dec
dec
imul
pop
loope
add
ins
push
lock
cmp
pop
sbb
push
ds
aas
pusha
ror
mov
push
mov
mov
fs
mov
add
sub
xor
jns
aad
push
jp
pop
mov
adc
ja
xor
or
mov
push
cmp
or
mov
repz
xor
ins
xrelease
lods
sbb
ins
cmc
daa
jg
cdq
adc
mov
rol
ins
xchg
xchg
mov
and
adc
cmc
clc
popf
inc
mov
cs
stos
push
mov
call
jp
aaa
les
jle
mov
dec
jns
sub
inc
inc
sbb
xor
test
xchg
cmp
jb
add
jnp
dec
in
xor
jle
push
cmp
and
jns
mov
jmp
push
push
fnstsw
mov
sbb
repnz
cmps
cmc
outs
stc
xor
adc
test
and
xlat
js
clc
popf
or
(bad)
int3
xchg
and
cld
frstor
lea
mov
fstp
cmps
or
ret
ret
int3
repnz
aam
or
inc
ins
(bad)
jmp
fisub
retf
jmp
sti
or
out
sbb
dec
fst
and
into
stos
pop
dec
aas
add
cdq
xchg
mov
mov
scas
lahf
retf
movs
js
fbld
cs
lods
push
imul
jge
and
jne
cmp
out
outs
pusha
inc
adc
sub
fiadd
jo
add
shl
xor
push
mov
xchg
shr
pop
out
mov
les
leave
shl
mov
fstp
jl
outs
fs
(bad)
(bad)
stc
xchg
ror
cmp
jnp
jmp
mov
fidivr
jns
add
es
jl
mov
or
dec
fcmovnb
mov
leave
sub
and
fild
cmp
or
xchg
les
or
add
jne
loope
add
jns
jns
jb
inc
out
and
iret
jecxz
movs
pop
shl
js
adc
jo
fstp
mov
push
push
fild
sbb
retf
push
enter
out
mov
ins
test
cmp
mov
dec
fidivr
and
retf
test
loop
add
xchg
or
add
sti
add
xor
inc
inc
test
push
and
gs
scas
or
mov
mov
dec
push
ins
dec
sbb
dec
outs
mov
jecxz
xchg
push
test
or
scas
ret
cs
xor
nop
or
inc
sahf
clc
sub
mov
les
call
retf
and
add
rcl
adc
or
stc
mov
leave
pop
cmp
inc
mov
lea
pop
mov
xor
int3
mov
mov
mov
and
loope
mov
pop
scas
dec
lods
inc
movs
mov
dec
stos
(bad)
xlat
inc
inc
ins
es
pop
pop
ret
jb
loopne
dec
mov
fsub
mov
loope
and
adc
dec
shl
xor
jp
xor
inc
push
cmp
popf
pop
lock
lds
frstor
sbb
sbb
adc
push
jge
or
iret
lods
sbb
or
test
add
movs
cmp
mov
add
mov
jecxz
retf
sbb
mov
jmp
call
je
push
sub
shl
stos
das
in
cmps
mov
jle
inc
inc
(bad)
cmp
mov
gs
daa
in
mul
jno
int3
jge
test
mov
inc
mov
mov
dec
cmp
jae
push
pop
stc
push
(bad)
stos
adc
xor
outs
mov
xchg
pop
and
jbe
loop
sar
or
lds
stos
add
xchg
xchg
jmp
adc
sub
sub
out
mov
rcr
mov
mov
int
fdivr
adc
push
push
mov
lock
test
(bad)
je
push
jae
dec
shl
(bad)
mov
xchg
rcl
add
sti
outs
push
adc
pop
or
test
adc
sbb
xlat
mov
daa
or
das
in
or
icebp
jle
cdq
mov
and
adc
and
(bad)
lock
mov
dec
xor
mov
jl
fnstenv
sbb
call
sbb
sub
xor
jns
ror
or
loop
pop
inc
jmp
shl
mov
cmp
xor
rcl
mov
sahf
dec
ror
in
test
pop
dec
test
rcr
sbb
xor
lods
mov
test
mov
movs
push
adc
sub
cwd
ret
dec
lods
in
popa
(bad)
repnz
xchg
cmps
and
add
std
pushf
sbb
sahf
xchg
push
xor
dec
sbb
arpl
rcr
sub
pop
movs
xlat
pop
shr
scas
std
pop
jecxz
xor
mov
idiv
ret
mov
in
inc
add
xchg
xchg
lds
int
sbb
call
xchg
jbe
stc
push
cmps
jecxz
data16
test
icebp
push
sub
and
loope
mov
cs
ins
add
(bad)
retf
test
out
mov
inc
jbe
cmps
lahf
aas
push
test
mov
test
fistp
adc
fist
idiv
xchg
push
sbb
mov
idiv
jne
pop
scas
test
dec
mov
movs
jb
movs
ret
mov
adc
dec
pop
pop
arpl
aaa
push
dec
mov
pop
mov
cmp
nop
pop
cmps
push
dec
sbb
mov
dec
in
add
inc
mov
add
mov
bound
stc
mov
sahf
xor
es
mov
push
data16
rcl
ins
iret
jmp
adc
jno
adc
dec
push
fwait
scas
stc
mov
pop
std
jmp
mov
mov
jp
dec
dec
out
pop
movs
aam
cld
mov
nop
and
out
ficomp
das
repz
repnz
mov
and
popa
ins
repz
cmps
dec
outs
retf
mov
sti
jbe
stos
fst
push
push
xor
jl
jae
dec
dec
ja
xor
xchg
xchg
clc
aaa
pushf
sahf
cmp
rol
fimul
bound
mov
ins
ins
dec
push
sub
fwait
(bad)
mov
dec
out
dec
test
outs
into
aam
inc
cmp
cmp
push
sahf
pop
lfs
sub
inc
lods
pushf
aam
sub
shl
mov
fs
fcom
cli
loope
and
push
adc
int3
or
xchg
jno
mov
xchg
and
mov
fs
jl
mov
and
and
inc
pop
movs
cs
sub
cmp
xchg
pop
fnstcw
sti
sti
cmp
scas
pop
movs
mov
mov
ins
das
or
sub
mov
mov
dec
add
jbe
cmp
sar
jle
clc
stc
sub
sbb
sbb
xor
pop
es
aad
aad
lds
adc
dec
fs
push
cmp
or
pop
mov
sub
mov
rcl
outs
dec
jbe
int3
mov
fcomp
mov
push
dec
or
call
sub
out
mov
or
arpl
sbb
cmp
movs
cmp
imul
loope
sti
cmp
shl
fcmovnbe
or
rcr
xchg
mov
ficom
fcomp
mov
sub
popa
aaa
lods
mov
idiv
xchg
or
mov
test
sbb
bound
test
lods
pop
(bad)
bound
mov
dec
imul
inc
xchg
stos
pop
cmp
cmp
add
cwde
pop
fcom
ja
(bad)
div
and
imul
push
xchg
repnz
movs
pop
push
ror
pop
mov
mov
int
cwde
jae
or
xor
xlat
or
movs
or
call
sub
mov
and
sub
outs
adc
sub
pop
enter
movs
popf
pop
xchg
sbb
mov
call
out
pop
arpl
jno
stos
in
sub
loop
or
inc
shl
push
retf
fadd
xchg
and
icebp
mov
xor
rcl
int
pop
cli
in
or
mov
push
mov
retf
sbb
pop
lahf
push
add
cmc
push
xchg
cdq
jl
or
sbb
cld
xchg
enter
mov
(bad)
mov
push
jae
je
mov
lock
les
ret
pop
cmps
in
pop
inc
out
sbb
xchg
shl
bound
push
outs
add
jmp
and
xor
retf
lds
and
dec
xchg
xor
(bad)
fisubr
fldenv
xor
mov
test
add
das
adc
push
repz
adc
mov
cwde
sar
ja
dec
jb
mov
push
jo
cmp
adc
call
lock
inc
push
inc
cmp
push
pop
lahf
cdq
lds
popa
aas
mov
(bad)
or
pop
cli
scas
dec
(bad)
ss
scas
jmp
leave
pop
rcr
ficom
or
mov
jne
fist
mov
jle
stos
shr
ja
scas
pop
cwde
sub
in
outs
jecxz
clc
mov
arpl
adc
lods
fld
pop
jnp
out
add
lahf
push
gs
test
cld
mov
sbb
mov
and
sbb
push
adc
ret
das
into
leave
shl
push
pop
push
xor
fidivr
aam
push
jl
inc
stc
(bad)
adc
dec
inc
adc
adc
mov
push
dec
xchg
aas
mul
les
xor
retf
scas
ja
sub
test
add
xor
xor
xchg
adc
jge
xchg
push
icebp
pop
mov
lods
jmp
cmp
cmp
int
xchg
xchg
fcomp
ds
pusha
push
jp
cmp
movs
popf
and
mov
mov
shr
mov
stc
push
or
mov
pop
pop
loopne
sbb
xor
sbb
lods
pop
jle
add
add
push
sub
call
or
add
dec
mov
add
sbb
cli
mov
cld
addr16
push
cld
dec
fs
add
jo
add
xor
add
mov
fwait
adc
xchg
sbb
scas
dec
fild
mov
inc
daa
inc
xchg
sub
sub
jmp
pop
adc
repz
dec
mov
pushf
es
xor
aaa
push
push
aas
(bad)
stc
xchg
lods
mov
lods
movs
in
push
pusha
mov
out
mov
cwde
aad
cmp
arpl
jnp
add
or
dec
cmp
cmps
jge
jl
jo
mov
ret
cmp
xor
imul
jne
scas
dec
push
lods
cwde
scas
rcr
adc
retf
push
mov
mov
test
jns
iret
mov
jg
mov
je
loopne
dec
pop
in
cwde
cmp
daa
and
or
adc
inc
jp
sahf
sub
mov
mov
leave
lods
xchg
pop
mov
xchg
(bad)
adc
jl
mov
cwde
dec
mov
jmp
les
test
out
ret
push
sbb
fild
mov
or
outs
mov
sub
adc
fs
retf
mov
mov
loop
jmp
fbld
cmp
adc
and
xor
and
sbb
jp
inc
not
ins
or
(bad)
int3
dec
cmp
push
mov
xchg
dec
shl
mov
addr16
je
cmps
xchg
sbb
clc
sbb
pusha
fcom
sub
mov
mov
sub
inc
jo
xchg
js
fiadd
pop
mov
inc
ja
ret
stos
ss
pop
pop
sub
jns
in
or
(bad)
add
jg
push
xor
mov
pop
push
call
cmps
xor
sub
stos
xchg
mov
and
jnp
popf
(bad)
adc
lea
imul
sbb
sub
out
mov
adc
or
mov
icebp
iret
xor
mov
fs
xlat
or
aad
cld
loope
adc
sbb
cmc
lock
mov
jmp
leave
add
in
xchg
in
sub
jge
adc
xor
cmps
inc
and
cmps
les
and
dec
inc
and
mov
mov
add
add
or
out
cmp
retf
lea
cwde
mov
mov
loopne
in
mov
out
inc
int
dec
int
cmp
pop
cmc
xchg
sbb
gs
fadd
fsubr
stc
push
sub
retf
sbb
sub
jne
cdq
cmps
dec
adc
in
retf
(bad)
sahf
fadd
repz
retf
push
cdq
mov
sbb
jle
loope
pop
dec
jle
push
outs
test
cmp
call
loope
jp
pop
sahf
call
pop
jmp
inc
lahf
sub
push
rcr
xchg
sbb
inc
js
cmps
mov
fistp
prefetch
loopne
sar
pushf
rol
out
scas
and
jno
call
data16
sub
add
stc
popa
ficom
mov
mov
or
and
int3
sbb
xchg
lds
or
les
adc
nop
(bad)
jbe
xlat
sbb
and
enter
jecxz
jbe
les
stos
fwait
iret
push
mov
rol
sbb
dec
pop
or
aaa
mov
cli
xlat
sbb
in
push
stc
idiv
and
sbb
and
cs
cmp
shl
repz
cld
jmp
rcl
data16
lahf
(bad)
fsubrp
adc
call
push
and
scas
stos
xor
shl
dec
pop
clc
ins
jae
adc
push
mov
mov
cmps
mov
push
and
fild
jb
and
xor
dec
jno
sbb
mov
jle
cmp
cmp
pop
add
je
in
(bad)
sub
jge
sbb
ja
mov
xchg
xchg
scas
pop
sub
cmp
aaa
retf
scas
push
cwde
pushf
pop
(bad)
aaa
imul
mov
test
cs
add
or
or
cmps
call
stos
out
mov
pushf
jp
lods
cli
sbb
or
fs
loope
imul
cwde
mov
inc
mov
xchg
or
jl
add
jl
cwde
adc
pop
outs
fld
pushf
gs
(bad)
dec
inc
aas
mov
push
repz
daa
int3
mov
jne
pop
in
inc
(bad)
aam
add
jnp
rcr
int3
jl
mov
pop
pushf
hlt
adc
push
fisubr
arpl
push
and
into
and
sbb
push
jge
jl
stos
aam
sti
cmp
sbb
xchg
inc
stos
ja
jp
sti
in
mov
neg
sar
xchg
enter
(bad)
pop
das
mov
jl
sub
sub
(bad)
ficomp
cmp
test
(bad)
fld
mov
inc
aam
ret
pop
jmp
into
cmps
(bad)
or
(bad)
mov
xchg
hlt
shl
addr16
mov
loope
adc
(bad)
push
or
lea
(bad)
adc
xor
pop
jge
adc
or
mov
bound
pop
idiv
push
mov
add
or
push
in
add
lea
icebp
shl
aad
sub
cwde
test
dec
lods
add
call
mov
inc
mov
push
jp
jp
adc
popf
sti
int
push
ret
test
add
(bad)
fsubp
sub
xchg
mov
jo
sbb
mov
ds
cmp
mov
dec
in
sti
(bad)
(bad)
mov
retf
outs
sar
cmp
ins
shl
cli
(bad)
mov
fist
sahf
cmps
pusha
jo
push
push
outs
mov
outs
inc
push
cdq
clc
lock
dec
sti
cmp
push
lds
xor
outs
lea
hlt
add
je
bound
stos
push
jle
iret
jmp
push
sar
rol
sbb
inc
punpckldq
adc
call
out
leave
retf
sbb
mov
test
mov
jae
fs
loope
sub
outs
push
jg
in
sbb
out
fs
inc
fstp
fld
hlt
sub
add
adc
in
out
js
and
js
(bad)
pusha
cmp
adc
sub
movs
iret
mov
xor
repz
fidivr
dec
lods
push
sub
sub
ins
pop
mov
ret
test
fwait
dec
pop
fnstenv
dec
push
sub
out
movhlps
lahf
iret
sahf
xchg
pop
push
fdiv
dec
jb
aam
nop
int
xor
pop
add
loope
fwait
jmp
jp
adc
shr
loopne
inc
das
fadd
push
daa
mov
push
retf
jp
push
xchg
js
pop
rcr
jb
xor
sti
cli
adc
ficomp
adc
adc
xor
sub
fisub
sbb
jmp
ret
ds
dec
mov
fs
js
fwait
mov
arpl
mov
push
hlt
inc
pop
jns
ins
sti
jl
cwde
movs
push
pop
sub
mov
test
sbb
sub
cmps
xor
sub
push
lock
pop
shl
div
mov
mov
das
lods
sub
sub
test
ficomp
sub
sub
(bad)
js
mov
fs
in
mov
add
pop
cmps
push
ret
xor
scas
add
lods
sbb
jge
lods
cmps
iret
inc
dec
jno
sti
adc
or
mov
push
add
fsubp
xor
call
popa
repz
fmul
xor
jo
jge
das
add
scas
xchg
or
(bad)
(bad)
xchg
cmp
cmp
frstor
adc
outs
(bad)
mov
push
fadd
std
mov
sbb
cwde
xor
lahf
jg
fisttp
outs
xchg
xlat
lahf
mov
lahf
popf
(bad)
xor
push
stos
retf
and
sahf
mov
data16
in
xor
xor
mov
loop
xor
or
rcl
(bad)
nop
retf
cmps
xor
pop
aam
in
xchg
in
test
or
sbb
shl
test
std
xchg
(bad)
arpl
push
and
aam
jno
sub
adc
mov
adc
js
stc
xchg
dec
add
(bad)
sub
movs
mov
xchg
jmp
dec
mov
and
dec
(bad)
not
fsubr
repnz
call
lods
xchg
mov
sub
imul
adc
int
and
dec
adc
jg
mov
mov
xor
or
xlat
ss
(bad)
scas
cmps
retf
add
sbb
fs
es
cmp
mov
mov
and
popf
sbb
add
into
or
lfs
fsubp
(bad)
imul
nop
leave
pop
ror
hlt
jle
jmp
test
shr
das
push
mov
idiv
lock
aaa
add
shl
int
adc
in
xlat
xchg
cmps
push
int3
lahf
push
icebp
jmp
pop
in
movs
retf
sub
xchg
xor
xchg
inc
dec
mov
int
push
arpl
sub
and
xor
inc
jge
mov
xor
int3
js
test
cmps
mov
sub
mov
xchg
add
xlat
sbb
sti
add
icebp
pop
xor
outs
cwde
ret
jo
stos
out
jo
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
jle
add
sldt
and
jb
outs
addr16
add
add
add
pop
add
add
push
push
add
add
add
inc
push
dec
inc
add
add
push
add
aam
add
and
outs
bound
add
add
add
inc
push
add
or
add
add
add
add
add
add
add
adc
add
or
add
mov
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
aad
push
add
aad
push
add
push
or
or
das
pop
sub
or
aas
pop
sub
push
add
sysexit
clts
add
xor
jg
add
add
add
add
adc
cmps
add
add
add
add
add
mov
add
add
add
add
or
add
add
add
add
or
add
add
mov
add
add
adc
add
mov
add
add
adc
mov
mov
add
add
adc
pop
or
add
add
add
add
or
add
ins
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
push
add
mov
add
add
xchg
add
or
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
mov
or
enter
add
xchg
add
add
and
add
add
add
add
add
add
xchg
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
xchg
add
or
adc
ins
and
add
add
add
add
add
add
xchg
xor
dec
add
add
add
add
adc
mov
scas
add
add
add
add
add
add
add
adc
mov
add
add
adc
adc
add
adc
popf
add
test
add
add
adc
sub
in
adc
mov
add
add
adc
mov
icebp
add
add
adc
dec
pop
test
add
add
adc
rol
std
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
xchg
add
or
add
add
xchg
add
or
add
add
and
xchg
add
or
add
add
xchg
add
or
adc
adc
xchg
add
or
adc
adc
add
add
xchg
add
or
adc
sbb
xchg
add
or
adc
sbb
add
add
xchg
add
add
and
xchg
add
add
xchg
add
add
and
xchg
xor
dec
add
add
and
xchg
add
or
add
add
xchg
add
or
add
add
and
xchg
add
or
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
adc
dec
and
xchg
add
add
add
add
xchg
add
or
adc
push
and
xchg
add
or
adc
pop
and
xchg
xor
dec
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
je
add
add
xchg
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
or
adc
mov
add
add
add
xchg
add
or
adc
test
add
add
xchg
add
add
add
xchg
add
or
adc
mov
add
add
xchg
add
add
xchg
add
add
add
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
adc
in
add
add
xchg
add
or
adc
call
add
add
add
and
xchg
add
or
adc
hlt
and
xchg
add
add
and
xchg
add
cld
and
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
sbb
add
add
xchg
xor
dec
add
add
add
add
xchg
add
or
and
add
add
xchg
add
or
sub
add
add
xchg
add
or
sub
add
add
xchg
add
or
adc
xor
add
add
xchg
add
or
adc
xor
add
add
xchg
add
or
adc
cmp
add
add
xchg
add
or
adc
cmp
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
xor
dec
add
add
add
add
xchg
add
or
push
add
add
xchg
add
or
pop
add
add
xchg
add
or
pop
add
add
xchg
add
or
pusha
add
add
xchg
add
or
adc
fs
add
xchg
add
push
or
adc
push
add
add
add
add
add
add
add
add
add
xchg
add
or
adc
je
add
add
xchg
add
add
add
add
add
xchg
xor
dec
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
push
or
adc
cwde
add
add
xchg
add
push
or
adc
pushf
add
add
xchg
add
push
or
adc
mov
add
add
add
xchg
add
(bad)
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
call
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
jo
add
add
pop
add
add
popf
add
add
add
add
add
add
add
add
add
sbb
add
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
xchg
add
and
fld
dec
add
add
pop
test
fld
jno
xor
dec
add
xor
and
add
daa
add
dec
add
add
sub
add
push
add
add
movs
add
add
or
push
add
add
add
add
add
add
add
or
add
add
add
add
pop
add
add
add
add
add
sub
add
add
cmp
push
arpl
outs
push
jbe
pop
add
jae
gs
and
jb
imul
add
arpl
ins
imul
gs
cs
imul
inc
outs
jb
jae
in
mov
mov
in
pushf
in
mov
mov
in
test
mov
in
xchg
in
mov
mov
in
movs
in
mov
mov
jae
jne
arpl
add
push
push
dec
gs
push
add
jno
push
push
jbe
outs
push
imul
arpl
outs
jb
jno
cmp
xor
pop
inc
pop
jbe
cmp
inc
xor
imul
gs
dec
push
jb
jno
add
push
arpl
jns
je
ins
add
dec
dec
xor
xor
push
add
dec
jb
pop
pop
pop
ins
je
imul
add
outs
jo
jb
jns
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
inc
push
pop
pop
jp
ins
push
pop
je
imul
popa
popa
inc
gs
pop
pop
push
inc
jo
jb
pop
push
jno
gs
ins
push
push
je
cmp
cmp
dec
ss
dec
cmp
add
jbe
dec
xor
xor
jns
jp
dec
xor
js
jne
xor
add
cmp
pop
push
xor
aaa
push
xor
dec
dec
jbe
inc
jns
add
push
inc
dec
jne
inc
inc
push
push
add
push
xor
js
pop
jae
inc
push
jae
bound
push
aaa
push
ss
popa
inc
xor
dec
push
imul
je
outs
fs
outs
outs
add
jb
outs
add
pop
dec
cmp
je
cmp
inc
arpl
ss
dec
ja
push
je
pop
jne
pop
dec
jno
cmp
popa
push
ins
dec
push
dec
push
outs
js
fs
imul
pop
dec
jno
push
inc
jb
jne
outs
jp
push
inc
dec
xor
push
popa
jb
ins
inc
jb
popa
jns
je
jb
bound
add
arpl
add
push
xor
fs
arpl
add
jae
ins
bound
inc
js
gs
imul
xor
add
aaa
jbe
jp
jns
arpl
xor
outs
dec
arpl
arpl
ja
push
add
bound
ins
xor
xor
push
pop
fs
push
push
cmp
popa
imul
add
cmp
ins
xor
je
inc
jae
xor
push
cmp
jno
popa
push
pop
ins
jns
push
pop
xor
push
cmp
push
dec
push
dec
xor
jno
inc
inc
push
inc
jp
ja
dec
pop
jp
cmp
add
aaa
imul
dec
je
arpl
inc
dec
js
push
dec
jns
cmp
ss
data16
imul
push
pop
inc
add
dec
push
jo
pop
inc
inc
jp
dec
add
outs
dec
outs
jo
addr16
xor
add
pop
cmp
jne
xor
add
xor
jp
jae
dec
pop
gs
xor
inc
inc
xor
inc
xor
cmp
ins
popa
bound
add
xor
addr16
ins
dec
outs
pop
imul
inc
push
fs
inc
add
jp
ins
pop
inc
push
push
imul
outs
push
push
xor
ja
outs
push
gs
jns
gs
or
mov
sub
lods
loop
scas
loop
scas
loop
lods
loop
mov
sub
lods
loop
stos
loop
lods
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
lods
loop
mov
or
loop
scas
add
je
jb
jo
jb
jns
loop
lods
loop
stos
loop
lods
loop
mov
sub
lods
loop
mov
sub
scas
loop
stos
loop
mov
or
stos
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
lods
loop
(bad)
loop
scas
loop
mov
sub
mov
or
(bad)
loop
stos
loop
(bad)
loop
scas
loop
scas
loop
mov
or
sub
mov
or
(bad)
loop
scas
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
(bad)
loop
(bad)
loop
stos
loop
stos
loop
mov
or
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
stos
loop
lods
loop
scas
loop
scas
loop
(bad)
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
lods
loop
scas
add
je
gs
outs
fs
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
lods
loop
lods
loop
scas
loop
mov
sub
stos
loop
lods
loop
mov
or
loop
mov
sub
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
scas
loop
stos
loop
lods
loop
stos
loop
stos
loop
scas
add
pop
inc
jno
popa
ins
imul
sub
loop
lods
loop
stos
loop
mov
sub
lods
loop
stos
loop
scas
loop
mov
or
scas
loop
mov
sub
mov
sub
(bad)
loop
lods
loop
lods
loop
mov
or
stos
loop
scas
loop
mov
sub
mov
sub
mov
sub
outs
fs
popa
jae
add
jbe
imul
or
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
loop
lods
loop
mov
sub
(bad)
loop
(bad)
loop
stos
loop
mov
sub
scas
loop
lods
loop
mov
sub
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
mov
sub
scas
loop
mov
sub
loop
scas
add
je
dec
gs
popa
addr16
sub
lods
loop
(bad)
loop
mov
sub
(bad)
loop
scas
loop
scas
loop
lods
loop
mov
or
(bad)
loop
mov
or
mov
sub
loop
mov
or
loop
lods
loop
mov
or
loop
lods
loop
mov
sub
stos
loop
stos
loop
mov
sub
addr16
outs
js
push
push
imul
jae
ins
je
loop
lods
loop
stos
loop
stos
loop
stos
loop
mov
or
lods
loop
scas
loop
lods
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
or
loop
mov
or
mov
sub
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
add
je
popa
ins
jne
add
sub
loop
(bad)
loop
scas
loop
stos
loop
mov
sub
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
mov
or
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
scas
add
jb
push
dec
imul
push
outs
jne
js
jbe
jne
outs
jns
xor
cmp
pop
add
push
outs
bound
jo
add
jns
inc
xor
cmp
arpl
dec
inc
add
inc
inc
cmp
outs
ss
popa
dec
ins
add
dec
xor
outs
push
xor
outs
xor
xor
inc
jno
dec
add
ins
arpl
ins
push
pop
push
inc
dec
cmp
xor
jne
cmp
dec
outs
jae
dec
xor
jo
push
add
push
fs
xor
xor
gs
add
pop
dec
xor
jne
arpl
imul
dec
addr16
jo
xor
pop
data16
jne
imul
dec
imul
imul
add
push
inc
arpl
arpl
dec
push
push
ja
push
dec
add
xor
inc
push
ins
inc
ss
add
push
pop
jp
xor
jns
push
imul
je
fs
imul
add
ss
data16
push
imul
inc
gs
inc
popa
imul
jo
push
dec
push
inc
outs
xor
outs
je
push
xor
inc
push
push
jp
jae
dec
addr16
ins
ss
dec
inc
jne
dec
push
push
push
ins
inc
xor
xor
inc
push
push
ss
je
jne
arpl
js
xor
addr16
bound
imul
xor
xor
jbe
xor
arpl
xor
dec
add
je
bound
push
inc
imul
imul
push
jne
bound
jp
push
push
add
inc
inc
push
dec
imul
ja
cmp
jo
xor
xor
add
je
inc
push
popa
push
inc
imul
xor
push
jo
pop
push
inc
inc
bound
dec
inc
push
pop
dec
push
xor
push
add
pop
xor
push
ja
inc
xor
xor
pop
pop
push
push
push
push
xor
push
push
cmp
jbe
xor
push
dec
push
je
cmp
outs
cmp
push
add
popa
jbe
xor
imul
push
xor
bound
addr16
dec
inc
dec
pop
addr16
inc
add
push
push
ins
cmp
jo
add
jo
ins
push
push
push
dec
jae
inc
push
add
dec
imul
add
imul
push
gs
add
cmp
ss
xor
data16
xor
push
add
xor
inc
cmp
inc
dec
dec
bound
pop
dec
push
push
dec
inc
dec
add
outs
push
inc
dec
push
je
outs
xor
xor
imul
data16
gs
dec
data16
add
ins
inc
inc
jp
push
inc
imul
add
push
xor
push
push
jne
ja
xor
add
jns
push
push
imul
inc
xor
ins
push
dec
gs
ja
cmp
js
ss
addr16
push
push
cmp
add
dec
cmp
ja
imul
push
jp
arpl
jns
cmp
dec
inc
jb
inc
push
ss
dec
pop
cmp
dec
imul
xor
jp
push
jbe
jbe
inc
inc
jbe
bound
dec
xor
add
cmp
push
jp
jne
xor
dec
push
add
imul
popa
jne
aaa
addr16
js
pop
jo
jp
imul
dec
xor
dec
xor
jb
xor
push
aaa
dec
xor
jae
bound
ss
ins
push
jno
add
ss
ins
jne
data16
push
pop
add
imul
inc
inc
arpl
xor
gs
jo
jno
data16
dec
popa
jo
jo
pop
add
xor
push
ins
jns
popa
jae
js
xor
inc
xor
ins
push
push
push
add
xor
jno
jb
push
ins
imul
imul
jb
je
dec
xor
js
cmp
push
js
xor
fs
dec
inc
inc
ins
ss
ins
inc
js
cmp
dec
push
inc
pop
jne
outs
arpl
addr16
pop
push
dec
inc
dec
bound
add
jb
ins
outs
gs
dec
xor
outs
dec
dec
outs
add
xor
push
ins
inc
fs
aaa
pop
add
outs
ins
jae
push
push
push
push
pop
popa
addr16
xor
push
pop
imul
ja
aaa
gs
inc
jo
popa
add
inc
inc
dec
jb
dec
xor
jae
add
imul
ja
js
ja
jbe
xor
inc
jo
cmp
jae
inc
dec
dec
inc
push
add
inc
jbe
inc
js
xor
push
push
add
dec
cmp
push
push
jp
outs
xor
inc
outs
dec
xor
bound
push
add
aaa
dec
inc
jbe
js
push
inc
dec
jbe
add
push
addr16
jbe
cmp
inc
xor
popa
push
xor
ins
dec
inc
dec
outs
add
push
ss
dec
push
ss
push
xor
arpl
je
inc
dec
inc
ins
aaa
imul
add
jbe
pop
push
jae
dec
popa
xor
ins
add
bound
xor
jp
jne
inc
cmp
ja
popa
push
ins
xor
xor
ins
dec
pop
inc
ja
inc
xor
gs
add
pop
ss
jb
push
gs
push
push
ins
inc
add
push
push
dec
dec
bound
add
push
dec
push
ja
gs
popa
inc
xor
xor
ja
je
jo
dec
dec
push
dec
ja
gs
jbe
add
push
inc
je
push
push
xor
push
add
dec
aaa
ss
inc
ins
xor
dec
push
dec
cmp
dec
pop
push
push
xor
pop
jbe
jns
add
je
jbe
inc
push
dec
ins
cmp
ja
push
push
jp
data16
dec
jb
jns
inc
inc
inc
inc
je
je
dec
arpl
outs
pop
pop
xor
popa
pop
dec
dec
dec
imul
ins
inc
push
inc
arpl
xor
js
xor
ins
pop
push
dec
imul
jns
je
dec
outs
dec
outs
xor
inc
xor
push
jb
dec
popa
inc
inc
jns
xor
pop
gs
push
js
dec
push
dec
pop
ss
bound
xor
xor
arpl
push
inc
cmp
ins
imul
xor
arpl
dec
push
addr16
xor
js
push
add
ins
push
ins
inc
outs
push
js
addr16
je
add
inc
inc
jae
push
jo
pop
fs
push
push
jbe
inc
inc
data16
bound
add
xor
aaa
push
push
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jb
outs
add
add
je
jns
dec
add
data16
add
push
add
je
push
add
ins
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
jns
ins
add
add
add
arpl
inc
add
add
jb
imul
ins
add
pop
inc
add
add
je
add
add
jb
jns
jo
je
outs
add
add
dec
add
ins
add
add
push
add
jae
je
add
add
add
add
add
outs
add
add
add
add
add
or
ins
add
add
add
add
jae
je
add
add
add
outs
add
jb
arpl
add
add
add
outs
add
jb
arpl
add
popa
add
popa
add
add
add
or
dec
inc
dec
sbb
cmp
dec
sbb
dec
push
dec
inc
dec
dec
dec
push
dec
dec
dec
jno
cmp
dec
push
dec
pop
dec
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jae
jae
add
bound
ins
add
add
inc
add
je
inc
add
add
jne
je
imul
inc
add
jae
add
bound
ins
add
add
inc
add
je
dec
add
push
add
je
add
or
dec
push
dec
inc
dec
cmp
dec
inc
dec
pusha
dec
and
dec
inc
dec
ds
inc
dec
jbe
jnp
outs
dec
addr16
add
dec
inc
dec
add
das
imul
inc
dec
jg
add
cmp
adc
dec
jnp
xor
dec
imul
das
dec
add
dec
xor
dec
jb
adc
sub
inc
dec
inc
dec
sbb
dec
ins
dec
jp
dec
js
push
dec
add
dec
xor
dec
or
dec
add
push
add
jae
je
add
add
je
jb
imul
pop
add
add
inc
add
je
push
add
ins
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
imul
add
add
add
outs
add
add
add
pop
dec
add
jns
add
add
dec
add
popa
add
adc
je
jb
jns
push
add
imul
add
push
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
add
add
add
outs
add
outs
add
or
jbe
outs
add
add
and
jns
jae
je
add
add
arpl
je
imul
je
outs
add
add
add
je
add
outs
add
je
popa
add
arpl
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
inc
add
jns
jo
je
outs
add
add
outs
add
data16
jb
ins
add
daa
push
add
popa
add
jae
data16
jb
ins
add
imul
ins
add
ins
add
arpl
imul
or
outs
add
je
push
add
or
ds
push
xor
xchg
fiadd
or
xor
mov
add
add
pop
add
or
or
add
sbb
sbb
add
sbb
push
pop
add
add
sbb
add
or
sbb
adc
sbb
push
sbb
sbb
and
add
add
add
pop
adc
push
sbb
sbb
and
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
push
add
add
sbb
sbb
sbb
push
pop
add
or
or
sbb
add
add
or
sbb
and
adc
adc
add
adc
push
add
adc
adc
add
push
push
push
and
sbb
sbb
sbb
sub
and
push
add
and
xor
sbb
or
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
in
or
(bad)
scas
or
add
add
lock
or
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
